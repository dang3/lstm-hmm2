push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
int
mov
lret
shlb
and
into
mov
stc
in
cmp
push
pop
and
lret
and
or
push
mov
mov
cltd
lods
test
cmp
mov
jl
sub
dec
push
mov
ret
das
stc
ds
in
out
mov
enter
stos
push
mov
cmp
in
dec
add
dec
pop
adc
sbb
xor
xor
arpl
ljmp
jle
mov
addl
xchg
push
lea
sub
stos
cwtl
pop
adc
pop
jmp
cmc
js
mov
mov
sbbl
inc
andl
ret
pop
and
fnstenvs
fwait
adcb
sahf
adc
fdivl
xchg
les
xor
or
aas
inc
lahf
and
icebp
inc
lret
in
inc
lret
das
pop
jo
sub
xchg
inc
add
cmc
mov
lret
fimuls
stos
jecxz
leave
jge
push
inc
jbe
outsl
sbb
sub
cmp
pop
sti
insl
in
lock
sti
jl
mov
mov
jo
pop
fidivl
pop
loop
mov
xor
mov
xor
mov
outsb
cmp
pop
or
add
cmc
loop
loopne
popf
add
jle
std
stos
aaa
lods
test
pop
insl
out
mov
test
mov
xor
rcll
nop
pop
cmp
lods
in
mov
ret
mov
adc
xor
xlat
mov
imul
adc
mov
test
cmp
ja
add
inc
or
push
cmp
lods
or
jle
mov
int
adc
push
daa
dec
in
jnp
repnz
or
mov
cmp
cmp
fistps
pop
push
xor
cmpsl
dec
add
andl
ficomps
xor
movsb
test
push
cs
testb
dec
cmp
sub
movsl
aas
jb
inc
in
mov
add
or
fsts
lret
in
cmpl
adc
lods
jp
inc
push
mov
neg
or
cmp
push
xchg
inc
sbb
into
jbe
dec
mov
mov
fimuls
call
movsb
lcall
pop
lret
fldl
andb
cmp
xor
cld
push
lret
cmpsl
pop
enter
sbb
push
push
andb
int
cmpsb
mov
sti
sub
add
lret
adc
popf
ja
mov
push
jo
pop
pop
jge
or
dec
ljmp
test
add
test
mov
jmp
imull
sbb
jne
push
mov
jmp
jo
fwait
sub
pop
inc
es
ret
nop
pusha
dec
mov
mov
xchg
insb
sub
sub
imul
dec
inc
pop
and
out
push
movsb
sti
lret
test
pop
or
adc
add
pop
mov
dec
push
mov
cmpsl
xchg
jae
adc
adc
lahf
sbb
pop
sarb
lods
lret
jnp
push
xchg
sbbb
les
inc
xchg
mov
mov
mov
std
mov
cli
mov
lahf
and
xor
pop
add
sbb
mov
sub
daa
test
call
sbb
push
cmp
jge
test
rolb
inc
xchg
call
scas
dec
pop
and
divb
addl
adc
xor
push
aam
add
add
cmp
adc
sub
icebp
dec
xchg
cmp
rclb
movb
call
jl
xchg
out
sub
ja
negb
fimull
or
stc
sbb
inc
leave
stos
jnp
andl
mov
cld
test
dec
movsb
rorl
jmp
cld
in
das
inc
and
jmp
jge
add
add
dec
xchg
dec
bound
in
and
xchg
xor
push
inc
shll
cmpsl
push
daa
xor
jp
popf
jle
imul
ficoml
dec
in
mov
xor
mov
lcall
movsl
sbb
les
jecxz
and
adcb
aaa
mov
adc
dec
incl
add
cs
fs
adc
cwtl
into
add
jg
push
movsl
dec
jno
xchg
jle
xchg
out
insl
scas
test
outsb
call
push
sti
sub
scas
sbb
jns
or
jmp
adc
pusha
je
call
ror
sub
jbe
add
ds
adc
sarb
test
jecxz
loope
mov
and
leave
push
lret
sub
jmp
jne
lret
clc
int3
rcrl
mov
mov
cmp
or
push
xchg
dec
cmp
xor
test
mov
sub
or
test
dec
push
mov
mov
sub
jp
inc
jmp
add
inc
fimull
rcl
test
iret
xchg
je
jmp
push
adc
sub
push
sbb
stos
inc
les
pop
jl
in
jb
xchg
pop
scas
icebp
movl
in
add
push
mov
jl
mov
cs
sti
mov
cwtl
fcmovbe
fwait
sbb
mov
cmp
in
add
jae
nop
jmp
pop
insl
repnz
mov
testb
mov
inc
xor
test
jno
dec
test
rcrl
mov
dec
inc
add
mov
fwait
arpl
int3
scas
xchg
sub
inc
adc
jbe
mov
pushf
pop
pushl
mov
sti
ret
or
push
stc
aad
cld
and
sub
lods
push
scas
jo
int3
add
pop
in
mov
mov
push
dec
add
mov
mov
pop
mov
sbb
loop
push
pushf
loope
aas
mov
es
ds
push
xlat
int
addr16
add
js
jmp
xor
pop
lcall
lret
inc
adcb
or
push
xor
leave
jle
loop
inc
fnstsw
mov
add
mov
int
popa
or
sbb
jmp
add
push
movsl
rorl
mov
xchg
lods
push
pop
push
jl
in
das
scas
lret
es
jp
pop
call
fs
cmpsb
sahf
aaa
arpl
hlt
pop
cmpsl
out
xchg
push
loope
sbb
lret
sarl
stc
dec
xlat
aas
dec
dec
pop
jg
mov
fisubrs
or
mov
insl
pop
lock
ret
cmp
cmc
adc
aas
rcrb
cli
leave
and
or
nop
sbb
mov
jmp
icebp
negl
addr16
xor
push
or
inc
negb
cmp
jg
xor
cmp
ret
cmp
gs
xchg
out
repnz
xor
inc
pop
dec
pusha
enter
mov
jo
dec
cmpsl
add
dec
sub
push
bound
xchg
push
sbb
ret
aaa
orl
repz
pusha
sub
xchg
sbb
jg
movsb
fwait
dec
mov
jmp
mov
in
in
ret
ds
daa
clc
cmp
lea
cli
and
pop
mov
repnz
sbb
cmpb
pop
jle
inc
mov
loope
fstl
jns
inc
sub
sub
push
in
mov
xchg
push
gs
cmc
add
imul
outsb
sub
in
adc
pop
cli
jnp
fwait
xchg
mov
movsb
test
fs
push
add
add
push
and
inc
arpl
inc
push
dec
aas
adc
push
mov
pop
fistpl
icebp
adc
ret
test
mov
out
and
adc
aam
sbb
dec
jmp
sub
dec
pop
pop
pusha
das
xchg
adc
iret
icebp
adc
inc
xchg
lock
xor
outsb
into
lret
cli
popa
loope
addr16
ret
cmpl
push
or
mov
mov
pop
cmp
dec
sbb
out
cmpsb
add
shl
inc
pop
cmp
push
das
insl
bnd
mov
ljmp
xchg
sbb
add
xor
dec
lret
lret
mov
popf
lock
xchg
data16
das
add
push
ficompl
mov
push
mov
adc
bound
pop
push
xchg
mov
ror
or
inc
es
shlb
adc
mov
fsubrl
sub
lods
shl
fnstenv
mov
adc
clc
scas
addr16
adc
pop
fsub
and
xchg
cli
xchg
add
mov
jmp
movb
adc
mov
cmc
add
mov
movsl
push
fs
mov
div
sbb
push
add
in
shrb
int
jecxz
sub
jns
lds
sub
mov
pop
aas
nop
push
adc
lret
cwtl
insb
movsb
sub
push
jg
cs
inc
inc
call
and
pushf
adc
jmp
xor
cmp
iret
enter
icebp
aas
xchg
pop
jnp
fwait
pop
mov
push
mov
mov
dec
lods
sahf
fwait
xchg
and
sub
cmpsl
stc
test
push
stos
in
add
mov
call
xorl
lock
aas
mov
push
or
xor
aas
push
cmpsb
cs
rcrb
pop
in
out
jge
xchg
int
mov
iret
xor
xchg
cmc
mov
cmp
enter
fdivrl
lods
add
xor
daa
aas
cmp
push
movsl
jge
mov
push
test
aad
fildll
fwait
aad
xchg
pop
mov
lcall
or
adc
out
jg
clc
mov
xor
pop
sbb
push
ror
pop
adc
popf
pop
or
andl
icebp
adcl
cli
addb
in
inc
and
or
adc
out
lods
repnz
cmp
pop
nop
out
movsb
int3
cs
push
xchg
add
std
mov
lds
repnz
push
pop
jge
movsl
arpl
aad
pop
jb
push
stos
into
xlat
inc
add
cmc
jp
push
mov
enter
xlat
xlat
mov
dec
negl
sahf
sbb
push
pop
unpcklps
icebp
dec
push
dec
inc
idiv
inc
xchg
in
push
push
repz
stos
shlb
or
ljmp
mov
in
arpl
add
pop
mov
outsb
stc
jo
push
daa
test
xor
movd
sub
in
mov
add
out
aaa
ret
hlt
orl
dec
ss
imul
jmp
xor
aaa
outsl
jp
adc
mov
push
inc
xlat
xchg
outsl
adc
xchg
push
or
mov
jg
rcrl
sub
mov
mov
and
xchg
push
lcall
imul
ja
shr
mov
or
lcall
pop
mov
jle
orb
shl
mov
push
into
test
fistps
filds
push
or
movsl
xor
mov
xchg
lcall
int
iret
in
frstor
pushf
mov
loopne
jg
push
icebp
push
or
mov
adc
mov
clc
orb
sbb
test
sbb
cmc
push
addr16
jne
adc
add
fisttpl
mov
lret
lock
lods
lods
jl
lret
or
jnp
cltd
pop
jno
dec
arpl
inc
stos
dec
jl
out
lods
add
dec
sbb
and
stos
inc
cmp
movb
shrb
xor
inc
insb
dec
aad
or
xor
cwtl
xor
lds
je
movsl
xor
lcall
imul
sbb
out
push
pinsrw
clc
std
dec
sub
stos
negb
and
ret
fst
cmpsb
stos
jo
in
loope
dec
mov
xor
inc
pop
lcall
js
dec
enter
xchg
pop
cmp
xchg
xorb
push
stos
js
ds
cmp
xor
loopne,pt
ret
popa
cmp
fs
adc
outsl
add
pusha
out
test
ret
adc
incl
pop
cmpsb
sti
push
xchg
in
mov
mov
mov
cmpsb
jo
inc
fiaddl
xor
je
aad
adcb
movsl
xor
cmc
sbb
push
mov
cmc
aas
cmp
lods
ret
lea
imul
repz
insb
test
sub
and
aas
fimull
cmp
or
mov
xchg
xchg
jecxz
and
fbstp
shlb
xor
insl
jge
xchg
fstps
mov
movsb
in
icebp
test
in
push
ret
inc
sub
shll
xchg
inc
adc
aaa
cmp
dec
mov
dec
iret
sbb
loop
mov
mov
mulb
shll
js
jns
out
sti
pop
cltd
xor
xchg
mov
out
aam
dec
pop
int3
mov
push
sub
mov
movsb
adc
lret
lea
mov
mov
xor
aas
mov
inc
push
xor
adc
and
cmp
mov
push
xor
repz
pop
lcall
xchg
aaa
xchg
out
dec
ret
popf
cmp
sbb
mov
test
sub
jmp
mov
xchg
jnp
and
lock
or
cmp
lock
adc
mov
mov
sub
pop
mov
lods
inc
mov
ret
cmpsb
clc
insl
lock
xor
push
adc
and
rorl
sub
mov
lods
int
fidivrs
std
repnz
pushl
scas
push
dec
mov
pop
mov
test
cld
xchg
je
add
shlb
xchg
in
negb
rolb
sub
dec
mov
jp
jg
jmp
mov
mov
mov
adc
scas
in
fwait
mov
lea
sub
sbb
rcll
mov
movsb
push
test
out
pop
sbb
cwtl
xor
mov
xor
dec
jb
or
fsubrl
addr16
xchg
int3
add
into
mov
sub
pop
insb
lret
popa
fs
jo
sbb
ret
pop
subl
push
lods
call
push
stos
popf
clc
sahf
add
jmp
loop
jmp
js
daa
inc
xor
xlat
faddl
out
addr16
and
xchg
icebp
jp
sbb
fbld
nop
fcoml
xor
sbb
lcall
mov
pop
adc
imul
cmp
mov
les
aas
pop
lods
mov
push
sub
cwtl
aad
cmp
loopne
xor
daa
jnp
xchg
sets
push
aaa
jg
pop
in
ljmp
and
sbb
inc
lcall
aad
not
mov
enter
dec
cli
add
or
rcr
sahf
cs
mov
and
movsb
out
popa
push
sub
jbe
repz
repnz
pusha
push
add
dec
ret
fdivrl
out
out
adc
mov
pop
adc
insl
xor
cmpl
dec
gs
mov
lods
mov
aaa
pop
mov
xor
pop
jno
xor
dec
outsl
add
dec
push
fdivs
mov
jnp
test
xor
movsl
adc
push
and
movsl
out
cmp
jnp
mov
xor
jge
xlat
push
mov
sbb
inc
or
or
adc
mov
inc
addl
or
or
jle
xor
jp
or
jmp
pop
cmpsb
out
adc
xor
lds
sahf
je
test
or
xor
inc
dec
stc
in
lret
inc
sbb
sub
movsl
sbb
movsb
int3
stos
inc
out
cmp
lret
xor
ljmp
adc
out
adc
adc
decb
mov
loop
popa
push
mov
dec
xchg
icebp
xchg
int
cmpsl
sbb
or
shrl
dec
adc
decl
xchg
lret
pop
bound
sub
mov
stc
jp
sbb
ret
mov
inc
inc
cmp
sub
jmp
in
cld
sahf
loopne
add
sub
mov
mov
shrb
or
loopne
pop
inc
inc
jnp
cmp
subb
test
add
mov
outsb
into
aas
sub
add
les
std
scas
adc
sbb
icebp
lods
jle
and
es
push
insb
xor
mov
xor
xlat
sbb
or
jbe
mov
and
push
add
ja
xchg
ja
ret
test
scas
sub
sbb
sub
adc
cmc
insl
mul
pop
dec
sbb
xchg
test
incl
sub
enter
add
push
ficoml
ja
xchg
jae
dec
push
mov
negl
aam
in
mov
ja
jmp
add
clc
sub
je
xchg
test
xchg
mov
mov
imul
push
shll
cli
push
dec
shl
fidivl
js
repnz
dec
addl
stc
sbb
lock
xor
in
mov
int3
aas
arpl
xlat
lcall
mov
jns
jle
dec
mov
repz
std
push
mov
aaa
aaa
inc
testl
addr16
mov
bswap
add
popa
mov
push
adc
push
cmp
les
aas
xchg
add
jl
lds
movsb
and
and
add
mov
divb
mov
or
das
xchg
es
addl
add
cmp
ljmp
fisubs
rcrb
sub
out
xor
cmpsl
mov
jmp
orl
adc
or
adc
cmc
jge
ja
call
lds
in
lret
loope
xchg
cmp
stc
sbb
jbe
mov
pop
into
cwtl
fwait
jne
adc
push
addb
aad
jne
sbb
sub
stos
sbb
mov
lret
in
repnz
pop
sbb
push
mov
mulb
popf
leave
pop
cltd
sar
fidivrs
sbb
jl
fbstp
push
cmp
mov
rcr
cmc
xor
pop
adc
fistl
pop
outsb
xchg
repz
mov
add
mov
cltd
adc
test
mov
xchg
dec
mov
mov
xor
out
out
shll
adc
lods
mov
cmc
inc
jge
das
popf
stos
int3
jnp
dec
add
out
add
out
lock
ret
into
stos
into
dec
and
adc
scas
test
adc
imul
cmp
dec
js
jle
aad
push
data16
sahf
mov
aas
cld
fdivrp
rol
out
hlt
pop
jmp
fwait
not
jg
dec
pop
ss
sub
shrb
jnp
ficompl
test
sbb
push
xchg
enter
dec
dec
and
faddl
sbb
fbld
pop
orl
imul
scas
lods
cmp
push
xlat
mov
cmp
repz
lods
filds
xchg
push
sub
push
pop
ljmp
insl
test
mov
outsl
movsb
not
out
mov
jno
das
add
sub
leave
push
mov
aas
mov
std
mov
int
fwait
pop
mov
fsubrl
test
scas
sbb
adc
imul
sbb
je
pop
rcl
sti
xlat
jecxz
jmp
cwtl
negb
xor
nop
cltd
mov
ftst
subb
fildl
inc
or
adc
pop
sbb
jg
jmp
cwtl
jp,pt
leave
addr16
scas
xchg
adc
jb
js
fcompp
rcrl
jg
cmp
lret
xchg
fidivs
stc
jnp
iret
add
push
aad
sbb
pop
daa
stc
pop
push
mov
or
cmp
loopne
jge
orl
imul
push
and
cmpsl
dec
mov
sbb
insb
aam
push
mov
jmp
imull
xchg
xor
cmp
stc
loope
data16
or
or
jmp
mov
add
aaa
adc
scas
sub
lock
adc
es
daa
bound
imul
sbb
inc
cltd
out
xor
xchg
push
inc
add
mov
pop
lods
shl
cwtl
pop
xchg
and
andb
jnp
adcb
mov
data16
stc
lds
test
xchg
sbb
test
jp
cmp
add
jne
push
pop
ret
aad
sbbb
popf
jns
xor
mov
popf
sub
jmp
aad
testl
mov
test
pusha
fs
test
pop
out
and
fidivs
mov
inc
iret
mov
lods
fcmovbe
sti
test
add
lods
or
pop
sub
push
push
inc
stos
mov
sbb
xor
push
or
imul
or
pop
pop
xor
out
jmp
cmp
sub
and
ja
cs
mov
inc
fstpl
and
loopne
lea
xor
push
icebp
pop
adc
out
daa
stos
idivl
add
sbb
adc
rorb
pop
ljmp
aad
xor
loopne
leave
jo
fstl
xlat
hlt
insb
jl
cmp
and
aas
fists
ficoms
mov
iret
movsb
iret
loope
mov
pop
inc
and
in
push
popf
icebp
cld
sbb
mov
sbb
sub
xchg
sub
cmp
jge
test
inc
inc
nop
push
dec
sub
xor
jmp
cmpsl
mov
mov
je
cs
xor
ret
jp
loop
push
sub
fmul
mov
mov
mov
jmp
int
adc
adc
or
xor
aaa
aad
mov
sub
clc
enter
enter
lods
pusha
ljmp
jp
clc
scas
notl
dec
jle
xchg
fwait
sbb
jmp
hlt
test
les
jecxz
add
rcrb
das
mov
sub
add
sbb
lea
loopne
imul
bnd
test
rorb
fs
movsb
shll
add
xlat
jne
inc
int
add
xor
mov
loopne
pop
mov
inc
pop
sub
sub
sub
sarl
das
mov
pop
mov
arpl
mov
sbb
push
mov
movsl
xchg
enter
adc
mulb
stc
sub
sbb
das
inc
adc
clc
stos
repnz
or
add
outsb
add
cmc
adc
lock
jmp
or
sbb
inc
pop
lcall
adc
lret
push
push
cltd
pusha
arpl
cmp
fimuls
pop
lcall
fsubs
jmp
in
mov
jo
mov
mov
in
jle
jbe
popa
ds
sub
mov
dec
sbb
pop
in
dec
sub
mov
jae
push
sub
clc
cmc
out
mov
out
xchg
andnps
loop
sbb
inc
xchg
jp
imul
ljmp
gs
add
cs
sbb
loop
insb
mov
aas
dec
aad
mov
adc
jno
cmp
imul
add
jae
mov
push
aad
mov
pop
add
pop
rcll
cmpl
sub
out
fistps
faddl
popa
push
leave
adc
or
mov
test
insb
jae
stos
mov
lcall
andl
xlat
push
call
add
mov
lock
je
test
lods
enter
call
pusha
mov
lahf
loopne
dec
pusha
dec
mov
mov
repnz
push
mov
pop
stc
push
cmp
ret
mov
dec
outsl
or
xorb
mov
mov
fwait
xorl
pop
fbstp
je
bound
cs
mov
xor
xor
test
inc
aas
pop
inc
adc
sbb
fistpl
mov
dec
pop
adc
inc
es
and
inc
mov
mov
pop
cld
cmpsl
fstps
cli
in
dec
jmp
fwait
rorb
lods
add
jae
cli
adc
aaa
xorl
mov
in
imul
fwait
and
int
stos
inc
shr
js
jecxz
xor
ret
lret
push
sbb
ret
push
cmpsl
pushf
aaa
add
pop
xchg
jnp
int
mov
mov
or
inc
cwtl
push
dec
jno
push
mov
jb
sbb
in
imul
int
inc
aaa
jne
cmp
adc
push
arpl
sbb
movb
imul
mov
enter
fidivrl
mov
leave
add
fists
push
outsb
lock
mov
mov
jmp
addr16
iret
sbb
adc
or
lods
cwtl
aas
inc
adc
nop
and
mov
fidivrl
pusha
fidivs
sub
sub
loopne
fldenv
notl
mov
subl
adc
iret
arpl
mov
push
dec
ffree
cmp
rolb
mov
shr
pop
lret
jb
dec
rorl
scas
sahf
int3
lock
loope
and
mov
mov
sbb
push
mov
mov
out
lret
jl
cltd
adc
cmp
add
cli
pop
popf
xor
add
push
loope
test
cmp
or
sub
inc
pushf
lock
and
push
insl
jp
loope
imul
mov
fldenv
je
movsl
push
rclb
push
cmp
add
push
mov
loop
push
orl
dec
xchg
mov
xor
dec
push
loop
xor
push
jno
fnstenv
dec
jno
sub
popf
jnp
inc
leave
clc
int
sbb
push
dec
test
out
mov
pusha
test
mov
xchg
sbb
movb
movsb
mov
bound
mov
sub
repz
arpl
movl
sbb
outsl
scas
xor
sub
push
mov
outsl
jae
rcr
inc
js
pop
sahf
fsubs
test
xor
pop
push
jns
cmp
jp
in
scas
int3
adc
xchg
add
cld
pop
or
sub
dec
outsl
xchg
pop
push
xchg
dec
sub
cmp
hlt
mov
lock
pop
dec
pop
mov
sub
imull
jmp
test
mov
jp
mov
test
mov
pop
test
enter
jmp
hlt
jns
rcr
imul
testb
push
pop
fisubrl
gs
loopne
lods
iret
mov
jmp
in
pop
es
xchg
mov
sahf
cwtl
inc
out
clc
jle
out
push
ss
inc
mov
clc
stos
mov
mov
mov
jmp
mov
and
in
jbe
add
insl
jl
xchg
imul
ret
addb
pop
test
fs
and
filds
push
or
add
xlat
hlt
dec
sub
std
xorb
out
mov
fs
fst
jp
fwait
mov
nop
lret
in
pop
add
insl
movsb
dec
sti
inc
or
in
lret
inc
jb
fisubrl
repz
adc
test
inc
add
fsubp
inc
jp
imul
rorb
rcrl
cmp
cmpsb
insb
aam
andl
xchg
jbe
test
mov
push
cmc
pop
fstpt
fnstenv
mov
pop
stc
dec
jno
or
and
imul
ret
dec
sti
lods
lcall
aas
or
jnp
iret
imul
sub
ja
jge
loop
pop
loop
inc
loope
in
and
push
and
xchg
fdivrl
mov
adc
addb
adc
cmpsb
clc
pop
add
imul
push
leave
and
pop
cmp
shrl
mov
arpl
inc
popf
test
addl
outsl
cmp
mov
repnz
call
xchg
mov
mov
jg
push
je
push
loop
dec
cli
or
loope
pop
loopne
xor
cmp
sub
mov
jmp
outsl
movsl
lcall
jno
lock
or
pop
stc
stc
test
daa
addr16
sbb
test
jns
jae
adc
pop
cmp
sub
ret
dec
sub
mov
mov
cli
das
ljmp
pop
sub
push
adc
test
fsubrs
inc
and
cmp
mov
aaa
cmpsb
pop
outsb
or
and
mov
fstl
shlb
shll
jmp
bound
add
inc
data16
out
mov
fbstp
jle
adcl
mov
mov
mov
call
cwtl
or
ss
int
jge
imul
inc
xor
div
xrelease
aaa
jne
dec
pop
out
test
cltd
ficoms
sbb
idivl
ds
jl
mov
mov
sti
mulb
adc
add
jmp
fwait
mov
push
mov
lahf
mov
test
sbb
mov
cmp
test
pop
sahf
or
push
outsb
out
clc
cwtl
fwait
and
jae
xchg
jge
cwtl
into
lods
pushf
add
fmull
adc
imul
cmp
das
cmp
xchg
xchg
add
xchg
fs
mov
rorl
hlt
inc
xor
or
inc
mov
or
shlb
adc
pusha
xchg
add
in
loop
xor
rorb
aam
add
mov
jge
test
dec
pushf
adc
out
jmp
fwait
imul
sbb
andl
or
lret
sbb
mov
inc
js
mov
lea
in
test
inc
xor
xchg
aad
xchg
jb
int
sub
adc
lcall
je
test
loope
les
pop
xchg
push
xor
xchg
add
mov
pop
fldcw
cmpsb
fwait
call
into
jge
mov
lcall
adc
pop
leave
dec
inc
pop
pop
mov
or
mov
inc
fcoms
pop
dec
mov
xchg
add
test
rolb
stos
add
sub
xor
push
leave
cld
test
xor
popf
testb
test
inc
popa
pop
lods
clc
repz
adc
pusha
in
fstl
add
roll
mov
push
and
mov
jl
xchg
mov
ljmp
ficoml
aas
jg
stc
shll
or
pusha
add
out
and
loope
or
adc
mov
mov
push
mov
out
cvtps2pd
cld
jp
mov
xchg
out
dec
sahf
inc
adc
and
lods
clc
add
jns
movsb
repz
idiv
mov
pop
jp
addr16
loop
xchg
popf
and
fbstp
and
push
adc
sahf
adc
mov
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
dec
cmpsb
push
sub
or
jp
pop
mov
mov
fstpl
cmp
pop
outsl
push
subb
lods
hlt
arpl
xor
lcall
lea
imul
stc
push
scas
in
cld
and
adc
lret
sub
xchg
out
out
lret
into
push
mov
cli
testb
loop
inc
mov
jo
lock
jno
jae
lcall
pop
lret
or
movsl
out
mov
out
mov
movsb
pop
and
adc
mov
roll
pop
imul
xchg
adc
cmp
int
adc
mov
ja
xchg
sbb
lods
mov
and
push
add
fcomp
push
push
cwtl
ds
stos
rolb
fisttps
cltd
pop
push
divl
inc
out
data16
and
xchg
push
lahf
int3
ret
xor
das
gs
sbb
movsb
out
jge
ret
fstl
leave
sbb
mov
mov
aad
int3
add
jmp
and
hlt
inc
test
sti
push
mov
jmp
adc
test
mov
sub
pop
xchg
cmc
andb
push
cs
dec
add
test
jbe
lcall
repnz
adc
jne
lret
cmpsb
push
mov
aad
out
jg
adcl
sbb
ja
push
dec
push
mov
iretw
icebp
in
cmpsb
pushl
dec
xor
imul
ljmp
adc
adc
enter
subb
stos
mov
mov
clc
jge
sub
into
std
cmp
arpl
int
or
cltd
in
in
mov
adc
pop
xor
inc
pop
hlt
int3
sarl
pop
jbe
mov
push
xchg
inc
cld
xchg
mov
push
fmuls
inc
cltd
xchg
sbb
stc
icebp
mov
add
mov
add
in
push
pop
and
mov
add
add
std
xchg
or
sbb
pop
scas
out
popa
inc
mov
xchg
insb
shl
movsl
adc
lods
aas
jmp
lock
push
outsb
jmp
std
jb
sbb
mov
pop
add
lahf
addr16
mov
mov
sbb
popf
out
outsb
stc
fidivl
imul
lcall
pushf
sub
mov
fcoms
mov
add
dec
idivb
xor
sahf
jle
test
inc
xlat
ds
mov
or
bound
xchg
mov
inc
into
xor
fstpt
jne
push
dec
cmpsl
xor
pop
movsb
push
adc
not
imul
inc
sub
push
xchg
cmp
pop
mov
add
dec
in
pop
sbb
sub
push
add
dec
inc
fstpt
mov
lahf
loopne
pusha
rolb
push
fdivp
add
popa
push
daa
add
daa
cmc
daa
push
sbb
dec
and
xchg
jbe
and
out
mov
fldenv
inc
das
inc
out
stos
lods
inc
out
xor
cmp
inc
add
push
in
or
dec
ds
cwtl
cs
imul
and
adc
icebp
sar
mov
mov
adc
sarl
xchg
adc
scas
cs
gs
fcmovu
xor
nop
aad
pop
repz
std
mov
in
lcall
ljmp
outsb
or
iret
inc
cli
xchg
xchg
and
pop
inc
loop
mov
pop
sub
pop
es
pop
dec
sarb
xchg
mov
bnd
clc
testl
jmp
ret
ss
movsb
xchg
outsb
push
pop
dec
or
push
mov
jo
inc
adc
pusha
sub
imul
or
mov
aam
pushf
in
in
data16
das
adc
addl
mov
imul
mov
fistpll
roll
test
scas
test
es
cs
jae
out
and
sbb
xor
sub
mov
xchg
testl
cmpsb
cmp
lahf
jmp
xchg
sbbl
fistpl
fs
fs
xchg
repz
je
mov
xor
push
enter
pop
push
popf
fcoms
arpl
add
sahf
fmul
adc
push
pop
sbb
cwtl
adc
xor
mull
dec
pop
and
xor
add
or
inc
popa
jae
pop
int3
mov
add
adc
ds
and
popf
ljmp
jnp
jb
pop
stc
outsb
push
adc
push
std
es
adc
push
push
mov
in
jnp
mov
push
std
mov
int3
aaa
jge
push
test
mov
jge
jl
mov
add
mov
pop
sbb
jne
or
jbe
data16
icebp
cmp
xchg
mov
add
in
mov
lods
pop
arpl
mov
adc
push
mov
mov
std
mov
lock
mov
loopne
fiaddl
adc
xchg
xor
sarl
clc
fcmovnbe
mov
movsl
mov
inc
cmp
addr16
bound
bound
outsl
push
out
xchg
and
inc
iret
ret
fmul
sub
lcall
test
aas
lock
shll
lret
xor
or
pop
pop
leave
mov
mov
xor
es
xchg
and
rcrl
cmp
push
imul
xchg
enter
jae
cmpsb
lret
test
test
dec
inc
lods
aaa
sbb
sbb
jecxz
call
loopne
scas
adc
in
jecxz
in
fildl
add
scas
outsb
push
xchg
outsl
js
mov
add
sub
xor
repnz
loope
and
scas
cmp
movsb
mov
lods
adc
aaa
sub
jo
mov
test
mov
js
js
sarb
push
ret
push
in
nop
test
and
sub
sarl
mov
xor
xchg
hlt
sub
jb
xchg
push
mov
cli
call
jb
js
in
push
out
jae
jbe
aam
stos
jmp
out
push
inc
xchg
bound
test
push
jnp
arpl
dec
dec
addb
push
and
pop
in
cmpsb
aam
dec
mov
dec
in
sbb
push
fldenv
lret
push
shll
sti
dec
sbb
std
xchg
mov
jno
pop
notb
mov
std
mov
cmp
or
popf
js
mov
lahf
or
in
pop
das
xchg
mov
lea
nop
xchg
stos
or
push
push
push
int3
fldlg2
insb
addl
aad
aam
pop
mov
push
mov
mov
scas
adc
xor
icebp
out
sbb
cmpsl
jbe
rcrl
insl
pusha
or
loop
xchg
shl
xchg
push
or
lret
add
ds
jb
in
mov
fbstp
adc
dec
out
xchg
call
icebp
mov
mov
mov
lcall
jecxz
cwtl
pop
jae
mov
clc
push
mov
aaa
cmp
add
pop
pop
es
loop
je
fwait
mov
push
cmp
sti
and
sub
les
mov
mov
push
int
push
or
pop
mov
lods
stc
mov
das
and
dec
jae
andb
outsl
jbe
xchg
jbe
add
mov
imul
push
xchg
sbb
lahf
out
cmp
xchg
push
and
loope
sbb
xchg
pop
jp
push
loop
add
inc
gs
push
push
clc
test
aas
outsl
pop
add
push
xor
xchg
push
lahf
inc
out
ret
cli
ficomps
in
and
enter
ja
add
xor
lret
js
xchg
jnp
lds
adc
sub
das
or
cmpsl
lea
jp
pop
xor
shrl
mov
ret
aas
addl
sahf
inc
cli
fsub
js
jne
orl
subl
fisubs
arpl
iret
call
mov
iret
mov
inc
fisubrl
outsb
or
mov
xor
xchg
mov
out
xor
insb
add
xor
sbb
and
adc
lods
sahf
fidivl
lods
ret
xchg
stc
les
in
add
push
lret
mov
xchg
ror
stos
addr16
sbb
mov
clc
pop
aaa
add
xchg
ja
pop
adc
push
loopne
ret
pop
pop
mov
push
adc
cmpsb
dec
add
in
out
ljmp
mov
insb
incb
je
mov
into
cmc
fs
js
inc
loopne
lods
shlb
icebp
lret
repnz
int
dec
inc
loop
xchg
enter
mov
sbb
xor
xchg
shr
xchg
push
ljmp
dec
ljmp
and
insb
mov
xor
and
mov
inc
imul
add
xchg
lods
aam
test
push
sbb
pop
inc
gs
dec
hlt
testl
mov
sub
pushf
mov
adc
ror
rcll
add
or
add
xor
inc
roll
roll
pop
cld
lods
outsb
mov
and
add
sbb
or
ret
dec
repnz
mov
repnz
lods
insl
movsb
xchg
push
fmull
pop
jbe
loop
insl
or
lcall
fs
jg
xor
push
or
lock
push
es
push
inc
dec
mov
push
aam
jg
add
jne
daa
adc
lret
jno
and
inc
jmp
div
jns
cld
scas
pop
nop
cmc
dec
movsl
sbb
fiaddl
or
fsts
inc
out
leave
int3
jae
out
std
inc
pop
inc
xlat
add
sbb
cmpsl
and
cmp
pop
imul
js
jno
in
stc
inc
push
jge
mov
lds
and
fadds
push
mov
and
outsl
lds
out
cmpsb
xchg
mov
jle
loop
les
mov
loop
ja
inc
sub
push
cld
or
icebp
add
jecxz
mov
push
mov
adc
mov
pop
cmpsb
lcall
cmp
imul
mov
inc
les
fildll
jno
lret
out
lods
lahf
mov
es
cltd
cmp
add
lock
dec
dec
int
sbb
testl
dec
pop
clc
cwtl
xchg
mov
sub
mov
mov
ret
hlt
jge
and
xor
sahf
aas
mov
jbe
data16
add
push
and
stc
ljmp
ficomps
and
movsb
cmc
dec
dec
jnp
add
dec
ret
movsb
xchg
rorl
push
nop
cltd
pop
cli
ffree
faddl
fnsave
mov
fs
dec
faddl
xchg
sbb
xchg
scas
sbb
loope
cmp
jnp
xlat
lcall
and
xchg
xchg
outsb
dec
add
fcom
xchg
mov
test
or
gs
mov
mov
pushf
addr16
cmpsb
push
sbb
jbe
jmp
jge
jl
fistpll
es
enter
shrb
mov
aad
cmpsl
jp
xor
xchg
push
push
add
xor
sbb
add
mov
mov
push
jmp
jmp
pop
hlt
fwait
cld
and
jnp
cmpl
andb
jbe
mov
sub
sbb
jno
test
loopne
out
cmp
mov
and
orb
add
add
cltd
mov
and
lods
jge
xchg
fdivs
jb
mov
mov
dec
xor
aaa
inc
ret
loope
xchg
cld
repnz
lods
bound
jno
mov
aam
lea
or
int
pusha
xchg
jno
test
vunpcklps
leave
aam
popf
pop
add
ljmp
push
fdivrs
mov
mov
sbb
jnp
jnp
cmp
ss
jmp
mov
dec
loopne
sub
mov
push
arpl
rol
push
sub
mov
loop
jb
cmpb
daa
mov
sub
xor
stos
xlat
test
and
jns
mov
jge
sub
je
and
icebp
inc
mov
pop
dec
insl
roll
add
flds
inc
data16
dec
cltd
gs
daa
add
stos
jl
out
addb
dec
jp
add
pop
push
push
aaa
iret
daa
call
divl
je
lea
mov
lods
push
push
shrb
mov
push
inc
test
lds
mov
mov
mov
mov
loop
dec
daa
pushl
mov
push
ds
mull
jbe
mov
or
adc
pop
add
test
mov
xor
mov
inc
aad
mov
sub
add
ds
and
popf
pop
out
daa
mov
and
adc
xchg
stos
aas
jb
xor
mov
in
jecxz
out
jg
mov
outsb
test
jne
ljmp
icebp
fxch
or
xchg
dec
repz
push
add
mov
or
std
jno
fdivl
dec
inc
out
jbe
jmp
nop
ficompl
pop
iret
mov
mov
and
push
xor
rcl
push
and
mov
or
sbb
fs
mov
sti
push
pop
movsb
or
gs
jge
mov
inc
rcrb
jnp
shl
jb
stos
pop
lock
inc
inc
ret
loope
outsl
push
mov
rclb
push
jge
adcl
xor
sub
inc
jne
loopne
ds
adcl
fidivl
push
rcr
mov
xchg
out
stos
mov
ret
sahf
xchg
shll
sbbl
fcoms
popa
pop
and
out
cmc
add
mov
mov
xchg
jp
cmp
cwtl
mov
lea
imul
adc
pusha
movsb
pop
aad
int
cs
and
xor
sahf
mov
aad
sahf
sub
rclb
mov
or
orb
mov
jo
out
jge
loopne
xchg
pop
fsubr
cwtl
fwait
add
fsts
jne
push
xchg
mov
xchg
xchg
insb
xor
outsb
mov
out
gs
xor
cltd
daa
xchg
mov
sbb
pop
dec
xchg
scas
adc
push
pop
outsl
or
iret
or
push
or
ja
in
sbbb
adc
inc
sbb
mov
outsb
jge
out
inc
dec
into
pop
pop
ret
mov
inc
add
call
add
and
dec
sbb
fmuls
sub
scas
jo
push
cs
out
push
lock
test
rorb
adc
sub
or
cmp
dec
sub
dec
push
xorb
rol
rorb
ficomps
sbb
inc
sbb
ljmp
sarb
inc
scas
xchg
add
test
cli
mov
sub
sub
adc
outsb
jmp
cmp
aad
pop
out
dec
sub
mov
push
outsb
das
lods
push
pop
hlt
cmc
mov
or
test
sahf
inc
fmul
sbb
into
dec
je
mov
pop
add
xchg
xor
cmp
movsl
add
loope
test
arpl
jne
lods
pop
xchg
inc
fcoml
inc
push
xchg
add
jg
in
stos
loop
pop
dec
cmc
stc
xchg
mov
pop
cld
adc
jo
inc
les
cmp
mov
orb
movsl
cmp
push
ljmp
add
int
adc
mov
sbb
arpl
movsb
adc
lahf
xor
mov
cmpsb
xchg
aas
and
les
mov
pop
pop
jns
dec
rcll
iret
cltd
add
pusha
adc
data16
adc
mov
add
fdiv
outsb
pop
mov
lods
pop
stos
rclb
lret
or
cmpsb
mov
outsb
add
xchg
ss
jnp
mov
pop
jns
sbb
cmp
inc
sahf
cmc
xor
mov
fcomps
loop
jp
and
loope
adc
mov
movsb
push
movsb
sub
pop
icebp
adc
imul
ror
mov
mov
dec
aas
mov
adc
xchg
rclb
jno
into
xchg
das
push
xor
ja
jns
xlat
mov
mov
adc
andl
out
add
das
add
rclb
mov
and
push
mov
push
and
adc
sub
mov
mulb
adc
sahf
in
aam
mov
mov
jmp
hlt
push
daa
jmp
loopne
stos
int3
movsb
decl
jecxz
hlt
jp,pt
in
inc
jg
xchg
sar
xor
sbb
movsb
mov
divl
clc
add
cmp
arpl
push
js
shll
adc
add
or
mov
and
xchg
sbb
pop
add
cmpsl
popf
adc
sbb
pop
pop
cmp
mov
iret
mov
int3
icebp
insl
dec
push
in
mov
add
int
shl
andb
je
test
jmp
movsl
mov
lahf
fs
adc
stos
mov
fwait
xor
daa
push
cmp
dec
inc
mov
add
dec
idiv
pop
xor
or
clc
adc
enter
xchg
cmp
jo
xorb
xchg
xor
test
jns
xor
sub
dec
mov
popa
push
xor
cmc
push
inc
hlt
roll
or
orb
jecxz
lret
xlat
in
movsb
adc
cmp
in
jnp
movsb
in
xor
dec
mov
sub
pop
mov
sbb
aaa
test
filds
and
jmp
add
insl
pop
pop
test
dec
mov
xor
xchg
sub
hlt
fwait
pop
lahf
pushf
and
adc
gs
cmp
iret
xchg
movsb
loop
test
icebp
movsl
or
ret
cs
ds
stos
mov
movsb
mov
shrl
ficoms
mov
lahf
jp
int3
mov
adc
into
jo
mov
cmp
and
jno
xchg
jb
adc
sub
test
jo
sub
sahf
repz
cmp
out
mov
or
cwtl
jle
shll
xor
movsb
orb
es
dec
and
xor
mov
icebp
mov
cmpsl
cmp
push
lods
fs
xchg
test
ljmp
push
and
scas
jecxz
mov
push
ds
jle
sub
mov
imul
aam
popf
push
mov
ljmp
xor
jne
xchg
inc
or
push
js
popa
and
cmc
stc
add
cmp
sbb
adc
sbb
push
dec
aad
mov
mov
mov
test
aaa
xor
push
ficoml
sbb
flds
and
dec
clc
sarb
unpckhps
in
sar
mov
in
rcrl
jmp
pop
outsb
jo
into
mov
js
cwtl
fisubrs
daa
jecxz
cs
loop
mov
pop
std
and
and
xor
stos
in
call
sub
mov
xchg
aaa
pop
ds
fnstcw
scas
aaa
cli
int3
cmp
xor
jmpw
cld
pop
jg
xchg
data16
lret
sbb
adc
adc
mov
add
lret
or
mov
cmp
jmp
push
movsl
and
mov
and
cmp
mov
cmp
ror
pcmpeqb
ret
imul
mov
call
pop
addr16
sar
cld
or
adc
add
jle
jno
mov
test
flds
mov
or
pop
add
cmc
out
xchg
mov
mov
popf
push
mov
xor
jno
sbb
mov
mov
adc
xchg
sbb
outsb
cmp
mov
sub
shr
inc
fcmovbe
dec
rorl
arpl
jnp
add
adc
push
push
enter
sub
push
adc
repnz
popf
mov
cmp
mov
and
xchg
and
mov
sub
mov
test
push
std
pop
ljmp
add
loope
xlat
xlat
pushf
mov
cld
inc
adc
dec
lcall
dec
mov
clc
adc
inc
enter
orb
sbbl
clc
mov
dec
dec
cli
mov
jg
fsubl
aaa
mov
mov
inc
push
cld
pushf
xor
jns
jg
loope
test
in
out
mov
dec
sub
jle
lods
stos
bound
rorb
mov
jbe
fisttpll
iret
cli
add
sub
leave
sbb
cmp
fs
xor
js
mov
mov
jno
cli
test
mov
xchg
repz
or
das
lods
add
in
xor
mov
pop
mov
jmp
jno
push
xlat
jp,pt
push
adc
xchg
dec
push
cmpsb
mov
dec
pop
hlt
dec
subl
add
adc
fidivs
mov
jnp
inc
xor
andw
pop
scas
rclb
scas
jle
add
addr16
push
cmp
pop
mov
jb
dec
or
mov
jne
inc
xchg
sbb
into
popf
popf
xor
push
test
jmp
int3
shr
scas
negb
add
sar
lock
shll
push
lret
nop
cmc
nop
push
ja
out
jmp
fmuls
loopne
xchg
fsubl
mov
cmpsl
cli
daa
xor
push
push
jg
andb
and
mov
sbb
xor
jge
inc
mov
inc
mov
add
lret
fisttpl
es
inc
xor
sub
jecxz
mov
sub
dec
enter
inc
neg
insb
adc
push
inc
inc
mov
and
mov
xor
cmp
ja
mov
pop
nopl
repz
xor
mov
pop
hlt
push
cmp
mov
cmpsl
mov
pop
add
inc
add
xchg
lea
addr16
adc
or
ret
bound
jl
dec
lods
fimull
inc
mov
xchg
and
push
leave
enter
scas
mov
adc
pop
xor
mov
pop
scas
test
repz
jge
arpl
xchg
dec
das
jle
lea
jmp
aam
ss
sahf
daa
mov
pop
pusha
imul
jb
mov
or
and
push
gs
or
sub
dec
cmpsl
cmp
lods
fcoms
xchg
cmpl
inc
mov
push
cmpsb
cmc
pop
nop
ja
sub
movsb
and
push
shrl
cmp
mov
jp
rolb
inc
or
push
mov
sub
dec
test
out
shll
mov
es
icebp
jo
fisubrl
xchg
into
xlat
mov
jge
loope
add
xor
cmc
xchg
cmpsl
inc
sub
dec
sbb
mov
int3
fs
out
ljmp
pop
pop
out
mov
inc
addl
cmp
imul
and
js
cmp
lret
shr
cmp
xchg
outsl
test
sahf
sbb
addr16
lret
adc
repz
push
pushw
xchg
xchg
mov
inc
leave
xor
sahf
xchg
ljmp
adc
sbb
dec
mov
push
or
pop
clc
or
sbb
sub
fisttps
dec
jp
mov
mov
je
jno
xchg
lahf
sub
dec
das
sub
test
mov
jl
jnp
mov
sub
jecxz
sub
sub
inc
inc
lods
inc
call
mov
push
in
push
rorl
dec
daa
push
sub
pop
xchg
mov
flds
dec
jo
into
pop
mov
cmp
scas
dec
xchg
bound
push
xor
hlt
leave
aad
pop
sub
scas
mov
sahf
xchg
mov
jnp
mov
mov
test
rol
pop
gs
lock
xchg
sbb
push
inc
es
scas
in
or
adc
imul
sub
clc
jp
lock
shll
cmc
add
xor
in
sbb
xchg
cld
stos
sbb
add
inc
lret
mov
je
pop
movsl
lds
push
and
arpl
fisttpl
jmp
test
mov
imul
inc
mov
sbb
add
popf
sub
xchg
xor
shlb
into
sub
push
aam
add
mov
or
adc
ror
mov
and
xchg
sbb
icebp
inc
loop
insl
xchg
jge
repnz
jae
flds
adc
push
dec
pop
lods
test
sub
fsubs
cmp
mov
in
mov
shlb
stos
gs
push
insl
stos
fldl
data16
or
pusha
xchg
ret
in
stc
daa
sub
das
les
je
outsl
clc
clc
fwait
popf
push
loope
adc
xchg
adc
aam
mov
scas
je
pop
push
dec
test
data16
in
adc
add
and
xor
andl
sar
and
insl
xor
icebp
sbb
jmp
xchg
cwtl
mov
mulb
xchg
jbe
ljmp
jecxz
xor
push
stos
repnz
cmp
lret
in
out
nop
test
or
mov
xchg
jecxz
add
cli
mov
or
gs
mov
push
push
pop
sahf
mov
pop
nop
push
fildll
push
cwtl
or
lret
or
arpl
xchg
aas
call
sbb
inc
cmpsb
repz
jbe
bound
out
add
mov
adc
xchg
jmp
shlb
jge
insl
icebp
inc
cmp
cmp
test
jmp
int3
sbb
nop
test
cmpsb
jle
pop
jne
jbe
testb
in
inc
and
inc
sub
imul
adc
orb
enter
mov
xchg
pop
leave
flds
jno
outsl
test
shll
inc
or
mov
mov
in
add
inc
addb
inc
jl
loope
sbb
shlb
cld
push
inc
push
jl
jbe
pop
cwtl
mov
lods
fnstsw
das
or
xor
xchg
jbe
adc
imul
mov
pop
sub
jb
and
add
pshufw
testl
cmpsb
add
mov
loopne
inc
inc
test
mov
mov
fstp
sub
mov
mov
sarl
mov
out
out
push
push
out
lods
xchg
stos
scas
dec
xchg
sbb
popf
ror
cvtdq2ps
mov
dec
cmpsb
imulb
lret
movsl
aad
out
xchg
ret
and
xchg
ret
lcall
inc
roll
cmpb
insb
mov
roll
dec
sub
pop
ficoml
je
pop
push
ret
pushf
jmp
push
in
xlat
shlb
mov
enter
test
mov
gs
jecxz
roll
aam
jno
inc
lods
mov
adc
pop
xchg
pop
shrl
shrl
adc
aad
ljmp
add
jnp
stos
test
les
jge
cltd
xor
xchg
jmp
mov
sbb
jne
in
movsl
cltd
sbb
cli
enter
lods
out
push
iret
leave
js
mov
mov
dec
and
bound
dec
sahf
xchg
xor
flds
sti
call
adc
xchg
or
adc
ret
xchg
xchg
leave
mov
jg
pop
jg
pop
int
adcb
fisttpl
iret
popa
loop
inc
cmp
sub
push
push
mov
mov
lahf
jns
pop
cmp
or
xchg
dec
test
mov
leave
insl
cmp
sub
pop
mov
in
cmp
sub
and
dec
pop
js
dec
inc
ficoms
addb
sub
in
cmp
lock
inc
mov
add
pop
lret
mov
arpl
mov
sahf
mov
inc
mov
mov
add
cmpsb
leave
inc
fcom
call
shlb
jns
jbe
or
rcr
push
std
shll
fs
out
mov
popa
xchg
push
insl
cmpsl
pushf
pop
popf
xchg
aam
cmpsb
xchg
sbb
popa
mov
iret
inc
js
and
es
mov
push
inc
jno
in
fists
and
rcl
mov
xchg
adc
ficoml
in
sub
inc
addb
je
mov
xor
lds
insl
add
sbb
in
xor
mov
add
sbb
imul
xchg
xchg
inc
xlat
jns
js
and
cltd
dec
nop
pop
pop
mov
jg
out
ret
jo
cli
je
xchg
cmp
or
and
cmp
dec
and
cmp
jno
scas
outsb
loop
mov
pop
jle
icebp
daa
insb
xor
sub
scas
or
std
mov
xchg
sti
push
inc
les
xchg
mov
leave
mov
fwait
addr16
mov
pop
aaa
cmp
cmp
call
sbb
push
pop
ljmp
inc
xor
dec
xor
sub
add
mov
repnz
and
adc
mov
neg
inc
test
push
mov
aad
mov
pop
mov
jnp
pop
and
out
clc
lea
aaa
xor
cli
das
or
adc
jecxz
mov
mov
add
mov
lea
adc
and
lock
sub
test
mov
push
insl
shr
scas
adc
scas
rcll
sub
pusha
dec
jp
jno
cld
xorb
mov
ficoml
pop
or
pop
icebp
cmpsl
scas
cmp
jno
push
push
xor
jbe
gs
mov
mov
dec
aas
adc
dec
pusha
mov
sub
int3
xor
shlb
mov
jae
shr
ds
xchg
mov
xchg
movsl
pop
addr16
push
jmp
cmpsl
in
inc
movsl
sbb
cmpb
ds
std
mov
out
gs
arpl
ja
sub
imull
aaa
jb
xor
test
lods
rorl
shlb
sub
cmpl
adc
or
and
dec
cwtl
xchg
iret
stos
xlat
test
jg
pop
dec
ficoml
fmull
cmp
cmp
and
movsb
mov
movsb
xchg
scas
xlat
stc
sbb
shlb
fsubrl
mov
div
fstl
insb
and
cld
jecxz
imul
ret
jbe
ss
imul
jge
add
add
push
addr16
and
outsl
push
ljmp
add
sbb
lods
dec
mov
jp
xor
rcr
imul
stos
outsb
sbb
and
cmp
xchg
mov
test
xor
or
inc
ret
imulb
and
inc
mov
xorb
loop
and
add
sub
idivl
ja
pop
lock
in
inc
inc
push
inc
cmp
repnz
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
push
mov
jp
sbb
jp
or
sub
hlt
sahf
push
sbb
or
xchg
inc
adc
out
pop
push
jnp
mulb
push
pop
pop
pushf
jecxz
scas
ret
test
dec
lret
pusha
std
test
push
adc
popa
jle
stc
pop
lahf
ja
add
ret
cmp
push
jmp
xor
jns
pop
mov
aad
out
cmpsl
fiaddl
and
mov
pop
pop
rcl
loop
jnp
ljmp
adc
add
fcomps
add
sub
cmp
xchg
sbb
popf
les
push
stc
out
inc
ds
popf
pusha
test
pop
jno
xor
xchg
jg
and
and
sub
xor
hlt
pusha
sbb
out
lea
imul
mov
push
push
jne
push
imul
mov
call
pop
pop
or
inc
xchg
cmp
hlt
mov
xchg
xchg
xchg
add
testb
add
jno
lret
lret
cli
sbb
mov
insl
loop
add
pop
xor
cli
mov
jle
jbe
movsl
and
subl
or
test
pop
jmp
out
divl
mov
xor
jp
jg
cwtl
test
push
or
or
into
inc
push
lds
xchg
mov
pop
adc
vsqrtsd
fmull
dec
inc
fstps
sbb
ja
cwtl
sbb
in
imul
or
pop
and
dec
sti
cmp
adc
negl
scas
gs
gs
adc
dec
xchg
cmp
mov
or
out
les
xchg
in
mov
inc
loopne
mov
push
fwait
pop
jmp
dec
adc
jnp
sub
jle
sub
in
mov
mov
enter
sub
pop
or
test
imul
mov
cld
inc
mov
jo
mov
and
add
pop
inc
into
xor
pop
lahf
imul
push
sbb
adc
adc
inc
cli
adc
fs
js
sbb
les
rcl
dec
popa
in
lds
xorb
daa
push
mov
mov
cltd
add
mov
and
and
fisubrl
lods
cmp
rorb
sbb
mov
mov
cmp
sbb
sar
push
jp
pop
and
ret
xchg
jae
scas
lock
test
rorb
idivb
pop
lret
lret
xchg
xchg
inc
test
in
jo
mov
adc
test
cmp
sti
xchg
sbb
popf
cmc
lods
add
stos
xchg
enter
xchg
sbb
call
cmp
int3
jae
dec
dec
pop
xor
fdivs
xor
mov
jecxz
xlat
jl
mov
test
sbb
out
sahf
xchg
lods
jns
outsl
mov
or
and
test
imul
jbe
inc
pop
cmc
inc
sbb
aam
test
ret
xchg
pop
and
lret
loope
adc
iret
and
push
dec
jecxz
decb
dec
je
push
nop
scas
fwait
mov
roll
mov
xchg
ja
mov
jle
push
add
and
mov
sbb
push
ljmp
aad
and
mov
rorb
aaa
aaa
mov
and
inc
adc
inc
mov
dec
lds
mov
enter
stc
int3
jmp
cmp
lods
rorb
adcb
imul
ja
dec
push
mov
js
pop
popa
pop
data16
cmpsb
pusha
xor
fbstp
add
loop
cmp
push
mov
inc
addps
push
cli
sti
ficomps
fmulp
loopne
inc
ret
push
sbb
sbb
mov
mov
sbb
xchg
pusha
or
sub
arpl
fstpl
pop
aaa
jbe
push
je
adc
xchg
mov
mov
out
push
sbb
dec
or
in
loop
je
ficomps
cwtl
in
jbe
pop
movsl
mov
call
add
jle
cmp
xchg
or
pushf
inc
jbe
dec
incl
xor
xorl
or
push
dec
add
outsl
cli
fidivl
mov
cmp
cltd
and
pop
outsl
xlat
fsub
inc
daa
mov
call
int3
mov
pusha
mov
xor
push
push
adc
inc
sub
data16
xchg
xchg
jp
mov
push
sub
sub
arpl
mov
out
mov
xor
xchg
insl
jns
shll
dec
xchg
mov
jle
cs
xchg
xor
add
roll
lock
lcall
sti
mov
sti
sub
out
mov
mov
cmp
lea
mov
mov
pop
nop
dec
sarl
or
xchg
outsb
and
sahf
xor
pop
push
cmp
add
les
in
les
in
dec
cltd
inc
and
fnstsw
ja
mov
sbb
push
aaa
xor
repz
sbb
or
sub
sbb
test
pop
and
mov
dec
push
xchg
loop
pop
jecxz
mov
rcrl
cs
nop
jg
lea
adc
push
xchg
push
clc
xchg
mov
fwait
add
add
cmp
jae
sub
and
rcr
cmc
dec
mov
rol
mov
adc
jne
adc
test
fisubrs
btrl
aaa
sub
in
and
roll
hlt
adc
test
shr
out
xor
cs
aad
xchg
adc
mov
add
inc
xor
xorb
aas
or
mov
adcb
add
mov
cltd
pcmpeqw
cmp
jne
or
das
adc
push
push
pop
dec
in
lods
cmc
jge
inc
or
lock
mov
aaa
into
neg
cmp
xchg
sbb
sbb
xchg
push
fcom
push
cmp
lods
int
sub
cs
lock
je
aam
xor
roll
int3
adc
out
loop
cmp
into
shrl
pop
lcall
sub
pop
jecxz
sub
frndint
push
cmp
jp
or
pop
out
xlat
jo
or
loope
shrl
lock
pusha
xor
add
movntps
mov
test
in
fwait
adc
enter
mov
push
std
in
add
sahf
and
imul
dec
jmp
inc
cltd
xchg
mov
lahf
dec
push
mov
jbe
cld
xchg
pushf
sarl
call
popf
lock
in
and
fs
push
push
mov
arpl
shll
mov
mov
loopne
mov
out
dec
dec
fsts
xor
andl
mov
movsl
fs
jae
or
push
sarl
mov
insl
adc
icebp
les
call
leave
icebp
mov
inc
ffree
xchg
ja
rorl
cwtl
pop
clc
sub
and
out
push
arpl
jo
std
lods
adc
fimull
adc
mov
push
xchg
dec
mov
add
aas
js
mov
outsb
pusha
rorl
call
sbb
cs
test
fmuls
sub
sub
loopne
mov
adc
pop
filds
sub
rol
testl
pop
adc
je
in
outsw
sti
iret
test
push
jmp
fldenv
cmp
sbb
adcl
jp
nop
andb
stos
cmp
xchg
pop
movsb
xchg
mov
add
adc
jecxz
out
stos
out
push
push
adc
adc
lods
inc
jo
mov
mov
xor
jae
mov
mov
outsb
cmpxchg
jns
gs
imul
inc
mov
lock
push
push
fwait
cmpsb
lret
test
bound
jne
sub
inc
lock
shll
rcrb
adc
mov
or
xchg
repz
loope
mov
stos
lret
adc
dec
jb
sahf
push
xor
rep
dec
push
cltd
pop
pop
lods
jbe
inc
lahf
mov
dec
rclb
fsubs
ja
sub
dec
mov
xor
jg
cmpl
pop
push
outsl
pop
movsl
sbb
push
lea
cmp
std
orb
les
mov
out
and
mov
stos
pop
mov
lods
cmp
and
sbb
cmp
xor
rorb
lahf
jno
sbbl
adc
js
mov
in
sbb
or
mov
jle
out
pop
addb
add
pop
pushf
ds
cmp
addr16
bound
mov
adc
sbb
dec
mov
mov
ja
mov
jecxz
jns
fs
cmp
dec
push
int3
xchg
xchg
add
mov
pop
push
and
pop
push
pop
test
jbe
pop
fdivl
fldl
and
xchg
loop
cmpsb
push
jno
sbb
jp
mov
test
mov
stos
je
cld
cmpsb
mov
pop
mov
stos
adcl
cmp
mov
and
jo
jecxz
mov
mov
pop
cmp
js
frstpm(287
scas
add
xor
aam
stc
adc
cmp
adc
fs
shl
idivl
enter
sbbl
lock
loop
jp
pop
jmp
imul
mov
test
and
sbb
es
pop
movsl
inc
and
subl
lahf
add
icebp
orl
mov
sbb
sbb
fildll
stos
rorl
xchg
hlt
fnstenv
push
pushf
insl
xor
xor
adc
js
loope
arpl
lds
push
test
pop
int3
push
push
dec
and
cmp
mov
loop
xor
xchg
pusha
lret
mov
or
fiadds
mov
and
inc
add
clc
inc
inc
js
icebp
popa
add
jb
cltd
or
sub
jl
repnz
jp
std
rol
mov
ret
icebp
xchg
cmp
xor
addr16
lcall
loope
icebp
aam
mov
decl
imul
rol
xchg
push
scas
gs
xor
jo
push
sub
fstpl
pop
or
mov
out
mov
xor
jae
addl
xchg
lods
inc
andl
mov
loopne
int3
xchg
or
inc
mov
fadds
and
adc
lret
pop
cs
dec
fistpll
push
insl
jne
cltd
xor
lret
lods
xchg
sub
push
jg
push
fmulp
push
iret
cmp
pop
shll
adc
lahf
xchg
stos
cmpsl
or
cli
ljmp
sahf
or
cs
or
sbb
addb
and
insl
repnz
inc
lods
jae
jge
lahf
add
cmp
ret
inc
outsb
out
xorl
lods
mov
movups
ss
std
mov
cmp
pop
adc
mov
out
sbb
jo
shlb
fbstp
pusha
popa
outsl
rcl
add
and
push
gs
scas
ficoms
dec
addb
pushf
aaa
add
xor
lods
inc
mov
dec
int
xor
je
or
mov
xchg
and
aas
cld
jb
add
xchg
insb
sahf
imul
lret
push
mov
sahf
divl
mov
inc
mov
jp
dec
and
pop
cmp
shlb
jmp
jl
push
fwait
imul
icebp
mov
test
jg
ja
mov
mov
inc
mov
mov
pop
addb
ds
das
sub
or
mov
pop
ja
and
frstor
adc
pop
xor
adc
imull
adc
je
xchg
lods
cmc
ds
push
push
xchg
push
std
xlat
mov
adc
in
dec
mov
lods
xchg
mov
stos
dec
pop
shr
call
idivb
lds
hlt
or
lcall
xchg
sub
sbbl
fs
cmp
mov
cli
mov
push
mov
mov
pop
ss
scas
das
pop
inc
xchg
fmull
mov
mov
out
mov
popf
mov
mull
cmpsl
mov
testl
sub
dec
push
push
lahf
inc
fisttpll
lds
scas
stos
hlt
icebp
mov
mov
test
faddl
mov
test
mov
xor
lahf
in
push
ds
xor
push
jno
adc
fptan
or
jecxz
dec
in
scas
movsl
xchg
mov
cmp
cmc
sbbl
jne
push
push
inc
sbbb
jl
outsl
out
sahf
push
sahf
insb
push
dec
iret
cmp
fcoml
fcmovu
sbbb
arpl
mov
pop
or
js
xorb
pop
pusha
push
jnp
lret
notl
mov
stos
lods
jmp
and
std
inc
push
inc
icebp
shlb
lods
loop
xchg
inc
fs
pusha
inc
fldpi
repnz
push
sub
xor
jp
dec
inc
in
stos
ja
nop
dec
dec
mov
inc
jae
mov
out
and
pop
adc
mov
sbb
fstpl
lret
push
rcll
sbb
jmp
sbb
test
repnz
stc
lret
aam
js
dec
out
out
jle
adcb
mov
lret
sbbl
in
sub
mov
xchg
inc
inc
xchg
mov
int
repnz
jmp
movsl
or
xorl
cmp
adc
inc
inc
dec
push
or
bound
pop
pusha
jo
fnsave
loopne
scas
mov
lcall
idivb
subb
pop
movsb
add
test
mov
add
out
mov
jo
pop
pop
mov
mov
fldz
mov
push
add
lea
int3
jg
or
add
adc
mov
mov
fimull
sbb
loop
jno
mov
jg
xchg
lea
aas
mov
lret
fwait
shrl
fistl
add
lods
xor
adc
adc
bound
cmp
pop
and
jo
mov
dec
sti
mov
je
lock
and
pop
sub
dec
mov
pop
ret
outsb
lds
push
inc
cwtl
test
subb
enter
testl
testb
cmp
mov
mov
push
xchg
sar
xor
insb
mov
mov
jae
test
pop
jmp
ret
and
cwtl
or
mov
dec
xor
das
jns
push
movsb
sar
inc
dec
or
fldcw
pop
scas
stc
mov
sbb
cmc
idivb
fdivrs
mov
mov
xor
cli
dec
outsb
add
mov
push
fimuls
jmp
fisttpl
or
leave
dec
cwtl
stc
loope
jp
mov
fdivr
aad
sbbl
fistpl
xor
insb
sahf
fsubl
adc
sti
lret
or
add
push
xchg
fcompl
pop
outsb
in
test
pop
lock
mov
and
xor
xchg
jne
fidivl
out
js
lcall
rcrb
jle
repz
sbb
mov
adc
cli
pop
sbb
adc
out
xchg
mov
out
mov
mov
stos
and
repz
sub
out
cltd
xor
jle
cmpsl
andl
lock
imul
cmpsl
xor
enter
or
lods
mov
and
lds
fcoml
sub
mov
into
imul
out
insl
adc
out
iret
imul
jno
push
jb
dec
in
mov
lcall
sbb
lea
push
nop
gs
xor
inc
push
ljmp
pop
incb
push
stos
mov
sbb
pop
and
mov
adc
inc
arpl
fdivs
cmpsb
adc
aam
cs
arpl
loopne
inc
xor
jno
xchg
dec
fs
cld
fbld
lods
jbe
jmp
dec
fistl
xor
push
sbb
stos
adc
jmp
clc
out
push
mov
mov
fchs
jnp
xchg
scas
cmpsb
lock
inc
and
inc
pop
popa
sbb
push
push
adc
sbb
movsb
mov
mov
mov
dec
mov
stos
cmp
ret
lahf
add
fldl
push
adc
mov
pop
aas
aaa
push
add
xor
mov
push
aad
xor
ljmp
pop
pop
testl
fs
ret
mov
sbb
inc
in
addr16
inc
jg
stos
mov
popf
xchg
hlt
xor
ss
push
dec
movsb
icebp
xchg
xlat
and
jo
xor
or
sbb
or
xchg
test
sahf
bound
add
and
sbb
ds
xor
mov
ljmp
iret
test
sub
lods
adc
adc
scas
and
aad
scas
mov
dec
pop
or
in
loop
push
insb
call
imul
cs
test
mov
dec
inc
or
ds
das
call
xchg
jae
inc
ret
stos
push
push
mov
insl
into
and
cmpl
adc
add
arpl
mov
or
loop
jns
cmc
cld
stc
and
and
repnz
jno
fdivs
js
loopne
push
add
fistpl
repnz
sarb
loope
cmp
enter
mov
push
cmp
xlat
or
repnz
adc
loopne
mov
adc
dec
cmp
mov
out
xchg
jmp
sti
ss
mov
mov
int
cmpsl
add
jmp
repz
cli
add
push
jbe
mov
pop
mov
loopne
mov
sbb
push
mov
mov
rcr
mov
das
mov
sub
pop
outsb
mov
jmp
scas
fdivrl
dec
mov
hlt
inc
cmc
xor
dec
sbb
stc
add
outsl
loope
fnstenv
nop
pusha
inc
mov
outsb
jbe
sbb
outsl
and
mov
in
ds
aam
orb
xor
ds
ss
jno
push
cltd
xchg
movsl
insl
sub
mov
jl
loope
rolb
lret
loopne
popf
test
and
cmp
ja
bound
pop
push
jecxz
mov
dec
pusha
pushf
lods
pop
loop
fldt
xchg
lcall
xchg
sub
pop
and
fldenv
pop
cmp
inc
test
jmp
add
dec
cmpsl
add
mov
lcall
lods
dec
push
hlt
jge
aas
and
imul
ja
lahf
cmpsl
cmp
movsl
cmpsb
daa
lcall
shrl
pusha
dec
mov
jecxz
dec
sub
cwtl
adc
and
sbb
sbb
mov
call
test
xor
add
push
pushf
das
in
xor
aaa
loop
int3
inc
lea
mov
dec
xchg
jnp
cmp
lea
push
pop
pusha
paddq
push
popf
jg
or
fildl
jle
mov
bound
pushf
lock
jl
pop
fidivs
cmc
das
mov
pusha
dec
mov
aas
mov
movl
lea
or
mov
in
das
jne
jns
movsl
jecxz
aam
rolb
add
aaa
inc
incl
ror
mov
mulb
xchg
outsb
loop
popf
mov
repz
push
ss
xchg
stc
xor
popa
adc
mov
notl
fs
push
jge
loop
stos
jns
inc
cmp
dec
fcmovne
test
push
dec
scas
push
jnp
xor
loopne
mov
scas
adc
adc
leave
mov
xchg
dec
and
sbb
ret
dec
push
jmp
dec
jb
fdivrp
adc
jb
xor
pusha
test
lods
mov
rolb
lods
mov
mov
or
rolb
xor
pop
mov
xor
movsb
cmp
xchg
sub
push
rcrb
pop
aas
int3
repz
cmp
cld
or
pusha
sbb
fiaddl
lret
mov
out
cwtl
push
in
pop
mov
test
xchg
sbb
mov
cmpsb
into
inc
pop
in
loope
leave
les
push
testl
cmpsb
notb
pusha
sub
add
push
or
outsb
mov
xor
ret
sbb
mov
cmp
mov
jge
adc
out
out
lock
sub
mov
dec
in
stos
cs
test
in
mov
cmovbe
enter
and
mov
pop
sbb
xchg
outsb
in
cmpsb
pop
sti
das
lret
add
repz
bnd
mov
jne
idivb
jb
insl
mov
push
scas
fisttpll
cld
jg
dec
call
ret
adc
ds
mov
xor
xor
sub
loope
outsl
mov
push
add
inc
add
xor
lds
ja
xchg
imul
adc
push
mov
jmp
xchg
in
or
ds
jle
jnp
mov
aaa
pop
sub
addl
pop
call
jecxz
or
loope
mov
dec
and
sbb
lock
inc
push
imul
insl
lea
xchg
repz
ds
ss
inc
iret
aam
xor
jp
aas
and
sbb
out
aas
popa
push
fadd
jno
cmpsb
scas
int
rcll
test
daa
dec
or
jmp
stos
sahf
out
divb
repnz
or
outsb
scas
jp
outsl
popf
pop
jp
push
std
add
push
call
pop
push
lea
lods
dec
and
pop
scas
bt
enter
dec
test
imul
out
ljmp
pop
aaa
mov
shr
push
scas
arpl
sub
int
xchg
mov
adc
xor
push
aas
jmp
xor
or
aaa
cmp
push
test
xchg
or
data16
movsb
cli
cmc
out
dec
sbbb
sbb
js
adc
int
sbb
pop
push
nop
aam
push
mov
dec
sahf
and
add
call
xlat
dec
mov
je
inc
ss
lcall
mov
inc
int3
test
xor
add
bound
cmpsl
imul
aaa
and
popl
xchg
jmp
mov
stc
cltd
sbb
sbb
mov
mov
or
sub
mov
mov
nop
pop
push
es
cld
and
les
xchg
mov
clc
and
aad
jl
pop
cmpsl
scas
mov
mov
dec
or
mov
push
and
pushf
dec
sub
enter
and
inc
or
inc
ljmp
outsb
push
or
hlt
cmp
jge
cltd
fidivs
xor
mov
xor
xchg
xchg
cmp
sbb
lcall
sbb
lahf
jp
cmp
shrl
leave
fidivrs
lods
pop
mov
aas
test
pusha
adc
xchg
mov
cmp
ss
outsl
imul
pop
adc
out
cmp
into
popf
sub
ficoml
sbb
iret
push
lock
mov
enter
inc
test
cltd
push
push
xlat
aam
mov
dec
push
ljmp
repz
xor
and
iret
cmp
or
cmp
scas
pop
cmpsl
in
push
loop
ret
mov
fstl
lret
or
fistps
in
ficoms
orl
shlb
stos
push
lods
inc
fwait
mov
dec
clc
dec
ljmp
mov
push
push
loopne
and
aam
or
dec
dec
fisubrs
push
inc
mov
mov
xchg
xor
xor
pop
pushf
xlat
jmp
sub
scas
pop
mov
cltd
push
lret
in
mov
lds
mov
fstp
sbb
adc
add
shll
ret
das
movsl
loopne,pn
adc
cmpsb
sbb
addb
fists
inc
pop
or
mov
add
push
jge
out
imul
stc
push
int3
sbb
xchg
bound
lea
jp
aaa
popa
mov
pop
pop
inc
outsl
gs
sbb
dec
fldz
xor
out
fsubl
pushf
jnp
in
in
subl
dec
mov
inc
mov
push
sub
sub
adc
je
inc
or
sbb
lea
xor
pop
xor
jo
adc
jmp
add
bound
jp
int3
xor
mov
aad
mov
jns
push
nopl
sahf
add
ret
jnp
mov
arpl
mov
mov
pop
mov
mov
fidivrl
or
aaa
ljmp
xchg
std
adc
adc
popa
xor
pop
lret
int3
cmp
and
out
imul
jnp
jns
pop
xchg
out
bound
les
mov
add
test
jge
cmp
out
lods
adc
mov
and
jge
ss
faddl
push
sahf
adc
int3
jae
jno
push
xor
adc
sbb
or
icebp
and
mov
jecxz
mov
dec
cmp
or
aaa
es
popf
or
sub
dec
out
into
xchg
adc
loop
sarl
shrl
jp
push
xchg
xor
out
sbb
jle
enter
bound
fwait
mov
es
shrl
mov
pushf
mov
nop
jge
xor
scas
cmp
and
push
ss
or
jno
mov
adc
shrl
lcall
repz
mov
adc
inc
cmc
or
mov
insb
je
jae
in
cmp
mov
sbb
ss
shll
imul
notl
das
and
xchg
mov
loopne
or
repz
jne
push
mov
popf
xchg
jg
mov
jl
xchg
fnstsw
ret
jae
pushf
push
inc
aad
lea
mov
repz
int
mov
ss
in
push
cs
add
push
icebp
pop
flds
lahf
adc
loopne
rcrb
faddl
pop
dec
xchg
testb
stc
pop
push
mov
popa
stos
arpl
lret
mov
mov
pop
or
rcll
dec
cmc
jb
enter
jnp
lret
or
pushl
jae
adcl
fcmovu
cmp
fs
or
mov
push
jbe
jmp
inc
insb
in
scas
fdivl
jbe
aaa
jb
in
lahf
ljmp
sub
shll
sub
in
xchg
mov
cs
mov
andl
ljmp
pushf
fcmovbe
mov
xchg
pusha
fdivrl
and
xlat
icebp
test
pop
dec
movsl
outsb
cld
cmp
in
les
pop
fstps
fs
inc
push
or
cltd
js
jle
ja
aad
stos
jno
xor
pop
dec
push
movsb
cmpsb
add
out
push
jp
inc
cmpsb
or
xchg
xor
dec
cmp
inc
roll
mov
and
jg
pop
cld
or
and
push
jl
shlb
stc
sbbl
lods
pop
dec
xchg
enter
adc
sub
fs
jne
xchg
push
sub
cmp
add
sbbl
idivl
xchg
mov
stc
or
shll
pop
push
in
enter
mov
cmp
sarb
cmp
outsl
repnz
pop
out
roll
incl
fwait
popa
mov
xor
ficompl
push
ljmp
aam
add
xchg
popa
sbb
ds
jne
jae
clc
pop
cmp
pop
rclb
jae
into
adc
es
fidivl
dec
arpl
and
xor
cmp
fiaddl
rcr
negb
xlat
bound
xor
mov
pop
cli
popa
mov
push
idivl
shrl
ljmp
cmp
lahf
in
cmpsl
daa
mov
mov
xlat
in
or
push
push
dec
icebp
jp
push
pop
dec
in
fstpl
xchg
sbb
jg
pop
push
addr16
dec
ret
jmp
jne
adc
ja
pop
test
inc
jb
mov
push
pop
or
pushl
fs
add
in
fisttps
jbe
cli
hlt
mov
mov
cwtl
inc
or
out
mov
push
shlb
fldcw
clc
inc
repz
rorb
push
xor
xchg
mov
mov
xor
mov
adc
icebp
and
cld
roll
sub
xor
das
inc
add
gs
icebp
mov
fisttpll
outsl
gs
xchg
cltd
cmp
rcrl
and
mov
mov
mov
mov
mov
sub
xor
inc
out
stc
xor
xchg
mov
bswap
pop
and
cmpsb
test
add
cmp
add
fisttpl
ror
stos
push
out
scas
mov
test
mov
xor
bound
push
out
inc
test
std
arpl
sbb
movq
or
adc
mov
push
xlat
jnp
push
int
in
loope
xchg
test
mov
das
xlat
push
jb
lahf
mov
pop
push
inc
push
movsb
fsts
jge
push
inc
ss
fistpll
mov
out
lods
ss
shl
xlat
imul
pop
mov
dec
out
fyl2x
cwtl
sub
mov
mov
dec
mov
out
push
in
mov
xor
mov
jns
stc
jae
inc
adc
jae
lcall
imul
into
test
call
maxps
jecxz
arpl
mov
mov
push
xor
test
ljmp
cmp
dec
ljmp
inc
cli
outsb
fisubs
arpl
sbb
hlt
mov
fisttpl
xchg
jb
test
push
mov
pop
jbe
jp
insl
dec
jbe
lods
aad
pop
aas
jle
xchg
enter
dec
adc
repz
jp
scas
dec
sarl
in
lods
call
clc
dec
dec
fistpll
cmpsw
nop
out
nop
test
ss
pop
mov
ljmp
mov
fbstp
cmp
push
cwtl
xor
inc
dec
xor
xchg
xchg
pop
jle
sbb
ljmp
adc
xor
leave
addb
or
out
xor
dec
xchg
ljmp
pop
lock
orb
incb
lods
and
mov
or
inc
loope
fcmovnb
je
jle
dec
xor
call
outsb
pop
insl
test
pop
mov
arpl
push
pusha
adc
lods
jbe
das
popa
inc
ss
sub
aaa
sbb
lret
dec
icebp
pop
mov
negl
dec
orl
mov
rolb
inc
test
mov
jmp
jbe
sub
lahf
cmc
mov
push
ret
and
cmp
add
add
sbb
xchg
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
pop
outsl
sub
sbb
jp
ds
adc
xorb
into
hlt
movsb
in
sub
in
std
xchg
pop
mov
aas
adc
and
mov
into
pop
adc
xchg
pop
fsubs
xor
adc
pop
stos
addr16
cmp
lock
cmc
pop
int3
adc
mov
dec
or
mov
and
adc
xchg
faddp
add
stc
mov
jg
jg
jo
add
addr16
je
lock
out
jmp
icebp
adc
pop
bound
jae
movsb
xchg
xor
mov
add
cmp
jo
or
aaa
xor
push
popa
push
fbstp
xchg
mov
int3
jns
xchg
mov
repnz
stos
push
inc
aas
push
mov
test
and
cmpsb
dec
out
xchg
pop
sarl
imul
push
cmp
mov
push
sbb
out
mov
popf
mov
xlat
or
cli
inc
mov
add
insb
dec
or
shll
dec
push
mov
test
inc
adc
fmul
push
je
push
mov
lcall
test
jb
xor
lock
and
js
push
outsl
and
flds
mov
sub
mov
sti
xchg
aam
data16
movsb
mov
mul
inc
insb
gs
das
jb
jb
shrl
mov
or
push
lods
addr16
sub
push
mov
dec
aad
ret
or
xchg
mov
imul
xchg
adc
jo
fwait
outsl
lods
out
and
cmp
into
icebp
pop
lods
jno
in
loop
scas
pop
dec
out
shrl
je
lret
hlt
lock
ja
pusha
jge
mov
mov
adc
fwait
in
fisttpl
pop
xor
lea
mov
pop
aam
sub
andl
imul
dec
add
sub
jge
mov
jecxz
xchg
sub
or
pop
push
imul
fdiv
xchg
cld
xchg
jp
and
xlat
and
out
out
in
mov
xchg
mov
dec
test
sub
mov
sub
xor
aaa
cmpsl
insb
popa
leave
jmp
outsb
shrb
mov
adc
sub
and
adc
pop
outsb
dec
loop
adc
push
test
mov
sub
push
dec
fcmovnu
in
lret
mov
int
das
loop
xchg
dec
xor
add
ret
loopne
nop
cwtl
inc
jp
mov
subb
lock
xor
loope
fmuls
sub
popf
and
ret
or
addr16
in
xchg
popa
loopne
inc
je
js
dec
dec
fisttpll
pop
ds
xor
popa
sub
jno
icebp
mov
mov
cmp
sub
xchg
inc
inc
pop
add
add
cmp
mov
std
int3
les
pop
or
cmp
faddl
xlat
sub
or
cmp
add
outsb
push
adc
pop
sub
fcoms
test
imul
push
mov
rolb
fdiv
lret
bound
icebp
jecxz
aaa
mov
push
xchg
cmp
and
mov
adc
xchg
popf
inc
pop
push
cwtl
mov
mov
xor
mov
ljmp
add
xlat
adc
repz
negl
cmp
fisubs
ss
lret
sbb
fistps
imul
les
jne
ss
add
es
jl,pt
cmpsl
sub
pop
in
push
ficoml
push
xor
js
cmp
mov
sbb
cmp
sbb
aaa
dec
loopne
sub
mov
adc
loopne
pop
inc
push
mov
fwait
int
sbb
test
inc
out
and
jne
sub
enter
stc
sbb
inc
inc
push
dec
jmp
jl
jne
fwait
pop
imul
loope
cs
cltd
ljmp
outsb
adc
inc
push
outsb
popf
mov
push
fisttpll
mov
pushf
inc
mov
pop
jnp
sub
dec
rcrl
cli
cli
sahf
negb
sub
ljmp
adc
inc
fsub
mov
xchg
cs
mov
in
mov
test
sbb
pop
and
sarl
sub
xchg
mov
cmpsl
fistpl
cmp
imul
int3
subb
je
pop
and
fldenv
fdivs
mov
xor
or
ljmp
push
fcmovnu
call
jp
pop
xor
test
into
mov
add
imul
in
cmp
leave
dec
pop
mov
pop
push
cli
mov
sbb
popf
out
shrb
push
cmpsl
test
cmp
pop
adc
imul
mov
shr
add
data16
loope
mov
inc
dec
ss
mov
std
outsb
pop
sub
shlb
pop
push
jo
xchg
xchg
lret
test
mov
std
imul
clc
lds
jecxz
in
pop
ss
or
add
fildll
out
jns
loop
shll
ret
inc
push
or
jg
push
cli
scas
in
bound
jmp
sahf
xchg
push
aaa
rep
mov
adc
sbb
hlt
dec
iret
fcom
jb
icebp
insb
std
sbb
cmp
insb
mov
pusha
inc
sbb
add
push
jle,pn
cwtl
mov
xchg
adc
sbb
or
pop
inc
lret
dec
push
and
jle
or
sti
les
lock
add
into
pushf
fstl
pushf
int3
call
sbb
jp
inc
push
jmp
aam
xchg
bound
test
shlb
fisttpll
fmull
ret
sbb
movsl
cmpsb
gs
jb
mov
jns
loope
mov
and
add
cmpsb
mov
out
das
daa
out
repnz
fstpl
daa
jae
sub
es
lcall
cmc
pop
dec
rcll
mov
xchg
cmp
cmc
into
push
scas
int
xchg
mov
imul
cmpsl
into
in
jbe
pop
enter
sub
repz
movsb
lods
cs
test
inc
inc
and
out
loope
pop
push
cmp
jle
mov
add
lcall
iret
push
or
push
lcall
imull
cmc
leave
xchg
fs
add
xchg
cmp
out
sbb
push
bound
neg
or
sub
inc
call
test
or
call
shlb
outsl
jne
inc
pop
nop
cmpb
xchg
pop
xchg
xchg
add
adc
sbb
xchg
stos
mov
lea
out
sti
lret
cmp
scas
add
fildl
sbb
inc
insl
add
ret
lock
testb
sub
jno
scas
add
movsl
jb
lret
cmp
jno
xchg
push
pop
mov
cld
mov
mov
push
mov
mov
lods
ret
add
xor
inc
jbe
scas
push
data16
push
nop
push
negb
addr16
jle
cmpsl
dec
das
xchg
mov
outsl
test
jmp
and
ja
dec
inc
pop
mov
ds
in
and
lods
push
jae
pop
repz
push
mov
jo
sbb
lcall
rcr
leave
mov
xor
mov
jl
stos
loope
push
lcall
jbe
fwait
nop
sbb
xchg
sbb
jae
fnstenv
jo
in
pop
shl
mov
mov
ficompl
loop
mov
mov
int3
and
aaa
cmp
cmp
inc
mov
push
stos
cmp
mov
inc
daa
iret
sub
cs
loop
lock
or
mov
sbb
scas
sub
cmpb
fsubp
aas
push
test
mov
es
mov
sbb
inc
lea
fdiv
add
and
push
mov
imulb
mov
pop
loope
sbb
and
or
jo
adcb
mov
in
in
inc
mov
cmp
mov
fwait
inc
dec
js
out
test
and
sub
jb
testb
lea
loop
xchg
pop
rcrl
dec
and
inc
cli
mov
andl
imul
popa
cs
cmp
outsl
leave
std
js
xchg
sbb
scas
lcall
inc
sbb
push
sub
inc
dec
xchg
add
mov
mov
jge
es
and
xchg
mov
imul
dec
pop
out
lds
test
xor
test
fldenv
mov
add
sub
cmpb
push
shll
sahf
add
mov
mov
shrb
xchg
out
lea
insl
mov
sbb
mov
push
scas
pop
in
xor
mov
out
mov
and
stos
mov
jmp
inc
mov
loope
lret
push
call
int3
and
mov
mov
mov
mov
bound
pushf
jecxz
ljmp
fwait
sbb
loopne
inc
push
stos
call
mov
popa
sbb
pop
sbb
push
outsb
cmp
adcb
sarl
adc
or
jge
sbb
shrb
jno
adc
jo
stc
inc
or
pop
test
cwtl
test
jb
cmpb
mov
jo
pop
stc
sti
int
fsubrl
jb
xchg
mov
inc
mov
int3
sub
xor
and
movsl
xchg
js
rol
mov
inc
inc
cmc
inc
inc
mov
out
imul
pop
movsb
pop
jg
jb
loope
imul
divb
ret
idivl
xor
or
fimull
or
mov
push
push
in
jns
sub
cmp
or
ljmp
inc
mov
xor
sbb
push
test
jne
addr16
sbb
xchg
cmp
pop
scas
jmp
add
push
pop
jbe
mov
mov
mov
enter
dec
lahf
test
inc
or
push
push
scas
outsb
test
loope
xchg
movl
cltd
dec
aad
scas
les
and
jae
push
fisubl
loopne
jae
push
rol
sub
pop
xchg
cmp
xor
mov
push
inc
push
dec
xor
push
dec
xchg
cmpsb
mov
fdiv
stos
jmp
addl
cmpsl
mov
cmp
cld
xchg
push
xor
fs
repz
push
shll
out
test
mov
inc
mov
or
mov
dec
pusha
hlt
pop
ret
xor
nop
push
mov
xchg
ret
push
sbb
jg
pushf
sbb
lods
fcoms
test
xchg
sbb
aam
sarb
inc
push
aas
xor
leave
in
dec
push
push
out
fldl
test
sub
pmaxub
add
cli
push
xchg
hlt
and
push
cmp
outsl
pop
movsl
test
imul
jp
nop
hlt
adc
or
push
jno
imul
outsl
out
add
scas
shll
mov
aam
xchg
jecxz
stos
sbb
jno
sbb
dec
and
and
sub
mov
clc
jo
xor
dec
and
xchg
dec
xor
cmpsb
mov
inc
dec
add
push
adc
and
jae
inc
jbe
inc
pusha
mov
xor
or
xchg
insl
adc
inc
mov
pushf
shll
push
sub
addr16
pusha
cmp
out
add
fnsetpm(287
les
js
xchg
xchg
jns
xchg
inc
xor
mov
andl
and
lret
ja
shll
and
orl
int
inc
cmp
pop
adc
cmc
pop
jae
sarl
cmp
jecxz
fisttpll
shrl
xchg
and
adc
pop
push
inc
sbb
cmpsl
dec
or
xchg
movsb
sub
dec
mov
or
mov
ljmp
xchg
fildll
lds
loop
lods
cs
outsl
inc
lods
shll
lea
xor
sti
mov
test
pop
fidivrs
lret
or
lahf
ficompl
sub
dec
xlat
clc
or
xchg
pushf
idivb
and
add
aas
movsb
repz
dec
out
pop
push
int
dec
movsb
cmc
xor
add
out
loope
xor
adcl
rorl
arpl
mov
sbb
pop
pop
push
or
add
negb
and
xor
mov
inc
pop
push
gs
sbb
aas
inc
ds
push
lock
gs
jp
mov
in
and
nop
mov
das
les
jne
mov
xchg
sbb
dec
loope
add
dec
sub
mov
mov
fmul
leave
inc
jno
xor
test
ror
scas
aaa
cli
jmp
sbb
out
cmp
ficoms
or
and
add
add
xchg
cltd
enter
stc
and
or
sub
mov
int
cmp
aam
rolb
nop
pop
push
xor
mov
ss
push
mov
ret
stc
dec
daa
ljmp
leave
mov
mov
xchg
jle
test
iret
rcrb
xor
in
jae
pusha
mov
dec
and
or
push
or
ret
xor
xor
cs
jp
pop
mov
jb
xor
mov
add
mov
push
jmp
jo
loope
pop
mov
dec
sub
inc
and
pusha
mov
jle
insl
mov
add
in
cmpsl
push
jbe
lcall
push
sti
aad
pop
push
sub
sub
dec
aad
lret
shl
xor
sub
shrb
adc
imul
mov
imul
cmp
jno
movsb
xlat
cmp
cltd
ljmp
mov
ret
movsb
in
das
aas
push
pop
xchg
jns
ja
lods
inc
mov
sbb
inc
add
out
in
cli
test
cmc
mov
fs
add
loopne
inc
and
daa
mov
aaa
ja
movsb
and
xchg
xchg
out
mov
fidivl
mov
ds
clc
push
jnp
movl
in
jg
je
jae
jne
mov
xchg
jno
in
push
mov
inc
stos
mov
push
icebp
inc
stc
movsb
ss
sub
push
add
sbb
inc
push
dec
int
adc
xor
adc
lahf
pop
xchg
stc
sti
test
pop
leave
rol
xor
xchg
xchg
test
cli
fchs
jmp
push
push
ret
jge
mov
and
sar
sahf
or
mov
fwait
roll
into
mov
imul
mov
sarb
sbb
xor
ljmp
mov
cs
xor
inc
or
testl
sti
sbb
scas
mov
mov
adc
pop
pop
and
mov
into
insl
xchg
push
jmp
mov
das
fdivrl
stc
mov
popa
fistl
mov
push
repnz
movsl
shlb
mov
out
mov
emms
add
mov
out
aas
add
xor
mov
icebp
faddl
pop
into
cmp
call
sti
or
push
mov
nop
mov
and
out
jmp
sahf
into
sbb
jmp
ret
nop
inc
popf
mov
mov
cmpsl
pop
xor
scas
int3
sbb
cmpsb
orl
push
int
push
ljmp
insb
clc
lahf
push
push
adc
ja
sbb
ds
rcrb
sub
arpl
in
sbb
out
arpl
pop
int
inc
out
xorb
in
ret
fimuls
push
stos
rolb
jl
or
shl
jp
dec
ret
je
mov
push
xor
aam
in
repnz
add
sub
adc
movsb
or
and
push
aam
shll
mov
js
and
stos
ja
jo
nop
je
clc
or
daa
adc
lods
jecxz
pop
mov
orps
es
dec
mov
jns
mov
movsl
jp
aas
rclb
jl
in
xchg
shlb
pusha
or
aas
stc
inc
clc
dec
xor
shlb
cli
xor
es
int3
push
jnp
popa
xlat
rorl
pop
xchg
inc
mov
push
stos
or
sbb
inc
sahf
sub
ja
xchg
js
sbb
cltd
push
ds
mov
cmpb
loop
add
cmp
loope
je
jge
pop
mov
outsl
leave
cwtl
jmp
sbb
hlt
sub
xor
jmp
or
inc
xadd
cmpsl
or
and
xchg
fcomps
out
jmp
xchg
lods
sub
insb
shrl
add
sar
repnz
mov
outsb
fstps
out
in
jge
scas
ficoml
dec
cwtl
mov
fisttpl
add
push
test
shll
pop
cmp
enter
addr16
lret
ljmp
call
xor
inc
push
out
xchg
inc
out
xchg
sub
mov
mov
jmp
pop
jl
clc
jne
loop
mov
imul
jl
push
xchg
add
int3
insl
ljmp
stos
popf
fs
sar
cmp
sbb
inc
pop
subb
lret
out
out
mov
mov
int3
adc
in
in
aaa
sbb
rolb
ss
shrl
push
dec
jbe
in
add
shl
mov
scas
xlat
xchg
adc
lock
xchg
add
call
and
out
add
add
aaa
pop
jns
mov
repz
mov
push
or
xor
sbb
cs
cwtl
push
stc
mov
sbb
lret
add
adc
mov
adc
push
clc
push
stos
xor
call
and
sbb
repnz
inc
or
inc
js
icebp
into
cmc
mov
adc
adc
mov
lret
leave
sar
jecxz
pop
jnp
xchg
inc
js
push
repnz
cmp
out
out
stos
mov
mov
jl
adc
pop
adcl
sub
push
pop
cwtl
cmpsb
sub
dec
pop
jl
sbb
negl
popf
lret
dec
and
xor
inc
roll
sub
dec
test
fidivrs
push
and
fsts
in
fstpt
add
stos
roll
jae
xor
and
shrl
aaa
add
jns
pop
mov
mov
mov
dec
or
outsb
add
scas
movsb
movl
mov
adc
jmp
in
or
xor
in
cmc
test
stc
jmp
iret
xor
aaa
pop
cs
xor
push
test
loopne
int
cli
mov
mov
imull
sbbl
push
bound
mov
fldenv
adc
mov
jns
mov
sub
cmpsb
mov
or
loope
mov
mov
sbb
mov
xchg
rcrl
pop
rclb
out
stos
mov
lret
cwtl
xchg
or
int3
mov
and
push
daa
sbb
mov
pop
xchg
xor
popa
pop
mov
sbb
repz
in
outsl
in
cmp
std
test
mov
cwtl
jae
loope
insl
test
stos
adc
test
pop
popf
inc
jae
xchg
pop
out
cmp
loope
or
pop
adc
cmp
movl
fistl
dec
ficoml
outsb
adc
mov
mov
lcall
into
mov
faddl
addr16
mov
fbstp
xchg
aaa
pop
adc
cld
push
jmp
loope
jnp
adc
scas
mov
jg
rcrl
push
cmp
sbb
inc
and
adc
pop
cltd
pop
lods
repnz
cltd
cmpsb
cmp
aas
jmp
dec
fmul
mov
popf
int3
aaa
mov
xor
add
cltd
mov
jecxz
adc
mov
lock
insl
rorb
mov
adc
push
push
lock
or
and
fnstsw
ljmp
hlt
mov
pusha
jl
jbe
push
jmp
add
adc
call
cld
int
cli
fldt
les
sbb
mov
pop
cmp
std
jl
psllq
stc
mov
mov
and
call
xor
adc
pop
inc
jb
inc
imul
mov
xor
fistpl
xchg
push
dec
rcr
jecxz
cmp
sub
inc
insl
or
lahf
cld
in
cmpsb
dec
dec
add
icebp
push
lea
in
or
and
outsb
aas
cmc
loope
icebp
sub
jge
out
push
adc
mov
shlb
or
leave
xchg
inc
dec
push
mov
and
adc
shrb
mov
push
daa
xchg
aad
pusha
rorb
pop
inc
jmp
jne
ret
mov
mov
cmp
jbe
push
int
add
stc
jg
jecxz
mov
xorl
test
lods
pop
pop
mov
and
loope
pop
lahf
lods
cmc
sarl
add
fisttps
and
adc
ss
xor
xchg
add
out
das
xchg
popa
pop
sbb
sti
inc
dec
out
mov
dec
jp
out
or
xor
cltd
jae
cmp
sbb
inc
jmp
test
push
and
inc
jmp
nop
or
subl
in
pop
xchg
out
popf
cmp
or
dec
mov
and
and
ss
adc
sbb
xor
fisttps
pop
pop
jg
mov
push
xor
lahf
sub
testb
cld
pop
ror
enter
arpl
das
int3
cmp
out
nop
mov
xchg
sub
popf
jno
push
orb
into
adc
loopne
jecxz
add
mov
out
clc
mov
std
gs
mov
adc
imul
enter
aam
mov
addr16
cld
sar
stos
sub
pusha
jmp
pop
dec
call
adc
scas
jb
sbb
xor
mov
mul
pop
ss
inc
xchg
clc
ds
lods
mov
push
add
inc
inc
dec
xor
pop
fnstsw
xor
lods
mov
test
adcl
mov
add
mov
iret
dec
xchg
fisubrl
pusha
dec
insl
popf
je
and
and
sub
push
pop
cltd
fisubs
ror
cmp
in
shll
movsb
sub
icebp
sub
fndisi(8087
data16
push
test
ss
rorl
xor
dec
mov
push
int3
jge
cltd
and
or
ljmp
pop
jno
rclb
xchg
imul
push
pop
jecxz
mov
scas
push
xchg
cltd
mov
pop
push
loope
out
lcall
cmp
dec
je
js
ds
xchg
adc
jl
aaa
sbb
dec
mov
ljmp
mov
jp
push
cmp
jp
imul
push
les
sbb
and
das
lret
push
jmp
jne
and
repz
das
push
fbld
jle
jmp
push
sub
sub
popa
mov
stos
mov
stos
adc
ljmp
imul
or
aaa
jmp
dec
sbb
push
popf
arpl
rolb
sti
mov
dec
bsr
imul
pop
enter
jp
dec
xchg
jmp
jae
lds
mov
lcall
cmp
mov
clc
or
popf
outsb
and
push
lods
test
stos
mov
xlat
mov
mov
hlt
inc
mov
dec
ficoml
mov
and
lock
dec
in
sbb
test
inc
lcall
mov
mov
loop
neg
ret
sahf
sbb
lcall
xor
popf
cmp
cmp
or
pop
and
push
in
pop
rorl
pop
leave
push
xor
mov
xchg
push
adcb
iret
mov
dec
jb
jge
sbb
sub
mov
jne
add
fwait
aas
xor
pop
sbb
lods
and
mov
ss
pop
push
cmp
and
sub
jns
test
aad
lea
loop
inc
std
outsl
mov
shl
mov
fistpll
arpl
scas
popf
in
or
xor
adc
in
adc
inc
mov
nop
sub
jns
inc
mov
jns
adcb
lahf
call
mov
mov
mov
jns
push
sub
sahf
mov
lahf
movsl
jmp
test
stos
and
push
icebp
xor
jns
dec
cltd
pop
stc
enter
inc
test
popl
test
out
pop
out
inc
add
mov
mov
in
mov
cmpl
mov
jmp
mov
sbb
enter
add
sbb
aam
insl
movsl
cmp
add
js
jg
xchg
jnp
xchg
inc
fmull
lea
mov
add
jb
sub
aam
das
fisubs
bound
pop
sbb
xchg
movsl
or
sbb
out
xor
sub
adc
and
or
sbbl
movsl
into
lock
sub
cltd
outsl
dec
mov
enter
mov
mov
loop
cmp
mov
push
jecxz
popf
dec
cs
mov
xchg
mov
and
inc
cmp
lea
movsb
adc
out
je
dec
and
cmp
xor
or
xor
or
rcr
jle
js
push
test
sti
dec
xlat
xor
adc
inc
mov
inc
js
mov
xchg
inc
pushf
clc
decb
icebp
gs
imulb
or
js
dec
and
mov
jp
mov
sti
dec
mov
mov
pop
sub
adc
jle
jno
inc
pop
rcl
je
jb
xchg
xlat
jle
mov
cs
data16
xor
fwait
mov
lar
cmp
jno
mov
ljmp
mov
cld
mov
pop
cld
xor
cmp
mov
aad
js
leave
add
cli
mov
pusha
jnp
inc
jl
xchg
in
sahf
or
mov
cmp
lfs
cmp
pop
sub
inc
dec
xor
arpl
outsl
pop
push
push
jmp
in
xor
lret
pushw
jno
sub
jge
jle
lea
dec
jo
mov
cmp
adc
cli
loop
mov
mov
pop
adc
repnz
inc
insl
xor
add
sub
cwtl
mov
dec
ret
mov
mov
or
cmpsl
nop
pop
arpl
pop
dec
inc
sarb
inc
cltd
cld
mov
aaa
repz
repnz
jne
outsb
jmp
icebp
cld
lret
insl
in
aad
iret
sub
xchg
pop
int3
xchg
push
mov
jb
sub
loopne
xchg
jo
div
push
clc
mov
sub
out
xchg
dec
or
repz
pusha
sbb
outsb
std
gs
mov
adc
add
jmp
fsubl
addb
fdivrl
fcmovnu
scas
fmuls
sub
xchg
or
pop
cltd
sti
in
xor
xchg
daa
mov
add
jmp
lahf
addr16
clc
ljmp
mov
in
in
mov
scas
je
cmp
icebp
cmp
addr16
ss
test
pushf
mov
outsl
cmpsb
xor
sti
stos
incb
pop
mov
inc
fstp
decl
daa
pop
shl
data16
or
scas
xrelease
inc
and
xchg
stos
imul
sub
out
mov
lret
jnp
rolb
bound
cmp
sbb
jl
sub
dec
aas
mov
adcb
mov
data16
mov
dec
inc
jbe
dec
dec
sbb
cmpl
cmp
cmp
pusha
mov
ffreep
shll
jo
mov
dec
popf
sub
shll
stc
fsubs
xchg
xchg
mov
mov
in
cwtl
insb
ss
xchg
push
icebp
out
add
mov
psrad
in
lret
push
cltd
mov
cmp
fwait
stc
and
in
inc
outsb
pop
pop
popf
int
imul
imul
lcall
cmpsl
xor
pop
pop
mov
bound
subb
sbb
sbb
mov
repnz
lds
dec
xchg
aad
in
cmp
aam
leave
jmp
push
mov
jge
popf
xchg
xchg
or
ja
sbb
and
mov
pop
xchg
stos
repnz
sti
mov
arpl
or
scas
jnp
insb
movsb
movsl
pop
aaa
ljmp
fcmove
fists
xor
inc
xchg
movsb
arpl
pop
and
enter
sti
and
lret
movsb
dec
int3
jo
add
out
pop
shll
xchg
std
sub
cmp
dec
dec
mov
cmp
ret
icebp
xchg
mov
sub
or
divb
xchg
mov
leave
iret
or
aas
aaa
mov
jnp
aaa
test
jae
popf
js
ljmp
mov
jmp
subl
mov
pop
jp
mov
dec
dec
or
sbb
std
pop
fs
cltd
jbe
sti
or
scas
int3
rcr
testb
mov
shrb
test
inc
jb
pop
cmp
ja
fisttpll
ficoml
jle
fsubs
in
xor
mov
std
test
or
add
cli
push
loopne
stos
sub
sub
ds
sahf
scas
lret
xor
jmp
test
dec
sub
movl
into
sti
adc
loop
mov
mov
rorl
jae
mov
je
cmp
dec
popl
and
in
pushf
stos
mov
stos
lods
xchg
xor
cmp
popa
into
stos
or
pop
add
push
enter
xorb
xor
shrl
sbb
loop
pop
sti
cmp
lret
call
aam
or
out
jns
sub
inc
pmuludq
sbb
cmp
mov
andl
cli
sbb
test
adc
fcmovnu
loopne
ds
out
adc
movsl
in
je
mov
je
add
inc
dec
repz
stc
mov
incl
into
cmpsl
xor
imul
fucom
pop
jae
add
mov
std
mov
add
and
lahf
mov
test
out
xchg
xlat
ljmp
pop
mov
or
push
stos
jbe
sub
push
xor
sub
sub
ss
dec
mov
xchg
sbb
cmp
add
dec
or
or
cltd
mov
xor
sub
icebp
arpl
fimull
fwait
dec
jl
adc
in
mov
or
mov
shrl
xchg
mov
icebp
mov
lock
fcmove
outsb
mov
mov
or
stos
data16
dec
add
or
xchg
xchg
mov
lods
xorb
les
pop
cmp
in
fstpl
mov
mov
inc
fs
cmp
pusha
test
and
in
mov
cmp
arpl
mov
in
mov
scas
imul
out
pusha
cmp
lods
mov
push
out
cmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
dec
dec
rcl
jmp
jp
jnp
ds
pop
sbb
or
mov
hlt
or
adc
jb
outsb
and
in
in
jae
lret
pushf
sbb
mov
cmp
mov
icebp
add
ret
call
xorl
pusha
imul
cs
cmp
pop
pop
stos
jae
movsb
push
shrb
inc
lods
lret
jae
sub
inc
jge
add
jo
test
jge
mov
mov
mov
mov
rol
or
pop
mov
sub
jg
adc
mov
mov
xchg
and
movsb
mov
xchg
adc
cmp
or
xchg
and
xchg
xor
nop
ds
imul
fprem
pop
mov
insl
adcl
xor
mov
xor
daa
mov
mov
bound
in
mov
cmpsb
imul
cmp
dec
and
seta
jle
es
mov
push
cmp
mov
out
fidivrs
fdivr
scas
mov
dec
cwtl
push
mov
stc
insb
pop
popf
push
out
scas
mov
loopne
dec
xor
enter
pop
sbb
push
inc
cmp
outsl
mov
dec
sarb
dec
je
mov
test
xlat
mov
or
or
inc
pop
inc
and
cli
lret
shl
popf
mov
cmp
je
pop
dec
popa
pop
adc
inc
pushf
mov
mov
popa
mov
stc
andb
or
js
pop
pop
movsl
inc
jmp
scas
dec
or
pop
dec
out
push
ss
or
ret
daa
mov
jb
pop
sahf
dec
and
pop
ljmp
jne
jg
jmp
dec
xchg
mov
imul
scas
cmc
push
test
mov
add
mov
pusha
add
mov
add
ficomps
pop
into
ljmp
mov
jmp
mov
and
mov
adc
cwtl
in
mov
jecxz
sarl
and
andnps
cmp
shll
out
lods
pop
mov
fnstsw
iret
testb
pusha
and
test
fs
mov
repz
lahf
cli
insb
adc
push
mov
and
jb
cltd
imul
in
outsb
lret
push
ds
and
sub
xchg
lock
dec
xchg
cmp
mov
jge
mov
outsb
push
ds
call
out
and
dec
es
adc
add
cmp
scas
das
stos
adc
ror
add
push
cmc
movsl
add
xor
push
in
scas
jp
cmp
lods
inc
adc
std
cltd
roll
iret
sub
mov
push
and
lods
dec
and
scas
outsb
movb
imull
xor
or
jno
mov
push
dec
pushf
mov
bound
int3
test
jne
pop
jo
lcall
sbb
pushf
in
pop
loop
mov
sarb
gs
mov
sub
fstps
or
push
push
incl
jmp
lea
test
mov
ror
pavgw
cmpsb
mov
mull
lret
in
and
push
pop
jge
sub
mov
dec
mov
movsb
ja
ret
sbb
bound
xor
push
jno
add
lods
jmp
scas
pop
pop
dec
lret
sbb
and
sbb
repz
sbbb
js
and
pop
repz
jmp
hlt
adc
dec
jb
pushf
sti
ror
call
mov
orl
test
lock
push
rcrl
push
stc
lcall
fidivs
inc
shr
xchg
pop
adc
in
mov
in
mov
addr16
cltd
jge
and
push
cmp
sbb
shll
fwait
jnp
les
mov
jp
loopne
inc
mov
jmp
out
cld
mov
cmpsb
cmp
or
xor
nop
test
incl
sbb
xor
pop
xor
dec
pop
lods
ret
add
jp
dec
icebp
mov
push
dec
mov
aaa
shrl
mov
pushf
fsubs
int3
xchg
xor
incl
imul
ljmp
add
or
jle
adcb
push
imul
xchg
mov
or
into
fucomi
mov
pop
xor
mov
iret
fcoms
daa
stos
push
sbb
add
leave
or
mov
mov
repnz
fnstcw
cmpsb
jg
jmp
hlt
sub
add
aaa
mov
outsb
loop
jae
ds
nop
popa
xor
push
scas
addl
adc
mov
pop
rclb
dec
out
xor
fnsave
mov
je
pop
fs
xor
movsb
aas
sti
mov
mov
pop
lahf
lcall
mov
cmc
xchg
cmp
sti
test
xor
in
push
outsb
mov
lds
mov
jecxz
add
fsubl
pop
mov
imul
sbb
adc
adc
lret
mov
iret
inc
shlb
enter
dec
bound
add
pushf
ljmp
xor
jns
cmpsb
mov
repnz
pop
mov
add
mov
mov
repz
lds
jo
lret
xor
in
sbb
aaa
ret
push
mov
cs
int3
dec
or
lock
sarb
lea
adc
arpl
mov
and
pop
fcompl
jne
stc
mov
sbb
shl
jns
push
aam
in
sbb
sbb
sahf
aas
stc
jmp
xchg
notl
lret
cmp
adc
lods
jns
insb
dec
mov
mov
fcoml
mov
fcoms
jb
or
lret
sub
int
in
out
mov
int
scas
add
sbb
add
aam
mov
mov
xchg
fsubs
mov
rep
mov
mov
xlat
push
jbe
xchg
popf
ret
sti
xor
out
cs
test
cld
mov
shlb
negl
add
cwtl
xchg
std
dec
sub
aad
and
inc
fwait
jg
mov
jae
aad
insl
fimuls
cmpl
rep
cmc
sub
cltd
popa
jno
cmp
fisttpll
push
mov
imul
jbe
addr16
sbb
sub
loopne
mov
xchg
fildll
jmp
sbb
shlb
cmp
mov
dec
add
std
sub
lock
jo
out
dec
jns
lahf
add
subl
xchg
xchg
in
test
inc
das
xchg
cs
push
sbb
jge
and
loopne
dec
pusha
cld
xor
iret
mov
insl
push
sbb
xchg
dec
mov
out
dec
enter
popa
dec
in
lret
std
push
pusha
ffreep
cmp
movsb
mov
std
ds
cmp
dec
sub
imul
mov
mov
mov
jo
add
ret
faddl
inc
mov
xor
jp
dec
xchg
lcall
sbb
or
hlt
inc
dec
imul
adc
xor
adc
jno
jbe
leave
pushf
cmp
aad
stc
shll
push
lods
pop
stos
filds
ret
xorb
int
outsb
push
in
ret
mov
cwtl
or
adc
push
add
data16
pop
aaa
adc
sub
mov
int
pop
out
dec
pop
jno
mov
cltd
or
jp
mov
jo,pt
xor
clc
lcall
lret
inc
jb
jl
xor
add
dec
xor
into
stc
andl
xor
gs
mov
or
lods
push
xchg
loopne
rolb
mov
sub
repnz
push
xrelease
nop
push
sbb
lock
xchg
inc
ja
pop
leave
pushf
mov
pop
js
sub
adc
mov
fucomi
cmpl
lds
testl
lahf
xchg
movsl
call
or
sbb
pop
cmpsl
pop
adc
int3
inc
lret
push
dec
mov
sahf
and
push
daa
shll
adc
push
aad
jp
rclb
sbb
push
int
clc
pop
mov
jmp
pop
in
mov
jne
nop
sti
push
xchg
push
je
and
mov
in
ds
fnstenv
jno
lret
dec
xor
es
movsb
inc
and
and
dec
sub
pop
movsb
sub
incb
cmp
sbb
jb
mov
mov
cs
nop
rcr
add
xor
popf
scas
mov
lea
popa
test
sbb
sub
cmp
add
or
sub
mov
mov
shl
fiadds
jg
stos
sbbl
mov
xor
rcll
divb
xchg
mov
jo
fildll
mov
dec
inc
push
iret
das
fs
fdivrs
out
or
int
inc
add
lcall
pop
mov
out
push
pop
cmp
sbb
jno
xchg
sub
push
inc
test
repz
insl
sub
repnz
sub
push
shll
lahf
xchg
push
jnp
lock
mov
ret
mov
push
aas
addb
and
cld
jl
clc
lea
or
jp
popf
push
xchg
cmp
adc
scas
pop
imul
inc
pop
inc
lods
inc
mov
testl
jle
and
ljmp
leave
and
sub
shrd
jbe
sbb
test
xlat
lods
mov
test
sub
xor
fwait
add
mov
in
std
xchg
push
inc
inc
pushf
lods
xor
in
or
sub
je
faddp
movsl
xchg
mov
cmpsb
sbb
pop
fadds
pop
mov
and
push
and
jns
xchg
test
jno
xor
xor
cmp
push
mov
adcl
lcallw
push
outsl
iret
mov
aad
test
orb
cs
divl
pop
jae
popf
aas
xor
xlat
ret
sar
push
das
pop
xor
mov
jb
insb
insl
xor
adc
xchg
sbb
es
xor
popa
cmpsl
test
mov
insl
cltd
or
xchg
dec
addr16
jb
stos
pop
and
inc
adc
or
push
hlt
xor
xchg
mov
add
cmpsb
cs
mov
daa
aaa
cwtl
aad
push
mov
andb
in
dec
out
or
xchg
jbe
adc
stos
xorl
std
movsl
jbe
sbb
mov
movsb
mov
fsubrl
xchg
pop
xchg
dec
loope
test
sahf
ret
lds
sahf
mov
das
cmp
daa
fistps
outsl
shlb
jb
out
popf
adc
push
pushf
push
or
cltd
enter
icebp
pushf
cmpsb
jno
or
xchg
and
shlb
mov
jns
push
dec
test
lret
int
stc
fiaddl
jecxz
mov
inc
loope
iret
sti
arpl
dec
push
call
xor
sti
jb
mov
cld
loope
or
dec
jno
fimuls
lds
aaa
sbb
pushf
add
sbb
mov
gs
and
shrb
xchg
cmp
mov
mov
aas
sbb
nop
push
xor
addr16
sbb
add
enter
jl
outsl
rorb
mov
addb
aaa
push
jne
loop
clc
nop
data16
out
je
mov
mov
adc
inc
jge
stos
push
jmp
mov
sbb
lods
cmc
call
mov
shr
push
adc
int3
jge
out
mov
jne
push
xor
sbb
cmp
div
mov
mov
push
loop
jle
out
jb
push
adc
iret
pop
mov
out
sub
jo
orb
xorl
sbb
subb
cmp
roll
bound
jnp
fidivrl
icebp
in
cmp
cwtl
les
paddb
loop
push
and
jg
inc
lahf
add
adc
xor
std
adc
mov
xchg
mov
sub
jne
clc
pop
and
jmp
rclb
pop
cmpsb
icebp
ret
push
hlt
mov
loope
stc
add
ret
fildll
ja
xor
ljmp
jns
dec
pop
mov
shrl
mov
adcb
bound
mov
mov
fidivrs
and
idivl
imul
and
mov
xor
lods
inc
mov
sub
xor
int
sub
xchg
test
cltd
jae
test
out
dec
in
cwtl
gs
out
lret
xor
and
inc
cmp
fsub
and
arpl
add
ds
lea
hlt
sbb
jnp
jp
jno
inc
mov
sahf
cli
addl
imul
xlat
jmp
test
es
jb
lcall
xchg
popf
ljmp
mov
mov
and
cmp
or
adc
xlat
cwtl
cmp
mov
inc
add
icebp
test
xor
fstl
loopne
mov
inc
cmpsl
lds
adc
push
stos
je
cmc
lret
mov
sub
jmp
mov
jne
outsb
jl
fwait
jne
inc
sbb
pop
dec
mov
push
pop
or
mov
xchg
mov
lret
aam
mov
cmp
or
arpl
nop
dec
inc
fcoml
add
mov
or
ret
out
outsl
pop
mov
cld
mov
push
aaa
mov
loope
mov
push
pop
cmp
mov
loopne
arpl
push
jo
insl
fisubs
shlb
fwait
xchg
lcall
jl
int
imul
sub
pop
std
inc
jnp
xchg
pop
push
cmp
and
iret
inc
call
fstpt
mov
out
push
push
jmp
mov
stc
arpl
hlt
push
push
scas
es
cwtl
gs
xor
repz
stos
sub
inc
inc
test
xchg
out
and
test
xor
addr16
les
cmp
movsb
and
ss
add
push
outsb
push
cld
movsl
jmp
movsb
sbb
sti
and
outsl
insl
xor
sub
loope
mov
jbe
js
or
or
out
sbb
cmpb
hlt
mov
test
cmpsl
jmp
mov
add
and
push
cltd
pop
in
jl
aad
jecxz
pop
es
aad
test
jmp
xor
mov
popa
mov
inc
mov
lods
jmp
push
push
jecxz
test
cmp
cli
jae
jb
lods
mov
xchg
iret
call
mov
int
xchg
leave
xchg
mov
ds
sbb
repnz
sbb
rcl
xor
lcall
inc
sub
push
aas
cltd
mov
cmp
pop
cmc
andb
lds
pusha
adc
or
jl
bound
shl
incb
jb
jbe
cmovbe
push
inc
pop
subb
ds
dec
dec
sub
orb
fcomi
mov
jmp
jle
adc
loop
push
fxch
cmp
lods
add
stos
xor
mov
out
adc
pop
or
repz
xor
jecxz
sahf
push
fisubrs
push
das
xchg
adc
jge
in
sub
adc
or
pop
das
fstpt
aaa
push
rcl
and
push
cs
insb
xchg
insl
cmpsb
lods
in
insl
and
jns
in
ja
sbb
ret
add
test
and
mov
pop
mov
xchg
je
lcall
pop
cld
shlb
nop
insl
inc
and
fucomip
xchg
loope
test
fstpl
movsb
es
repnz
sbb
adc
out
xor
fadd
pop
cmc
push
gs
and
scas
popf
popa
ss
mov
and
xor
iret
leave
adc
aas
js
iret
pop
movsl
aam
sarb
leave
add
push
push
ret
pop
cltd
sti
aas
jp
cmp
fisttpll
outsl
stos
lret
inc
mov
xor
fsubl
inc
dec
lcall
std
push
dec
sub
es
scas
xchg
adc
daa
popf
add
add
pop
lods
out
ljmp
mov
or
into
sahf
out
fmull
sahf
pop
xlat
leave
or
lahf
sub
jae
mov
mov
fmull
dec
mov
mov
sub
hlt
or
nop
pop
mov
ret
scas
cmp
jb
xchg
adc
dec
mov
and
push
mov
jle
cmp
and
adc
test
fsubs
call
and
mov
xchg
and
pusha
pop
ds
add
mov
dec
and
sarb
rorl
push
imul
jno
and
movsb
mov
or
cmp
jo
push
pushf
and
cmpsb
xchg
adc
xchg
js
add
leave
out
jmp
mov
cwtl
or
outsb
sub
aad
add
and
pop
adc
xchg
stc
scas
imul
inc
gs
inc
dec
mov
cmp
cmp
add
inc
nop
jo
repz
mov
jbe
inc
call
sbb
cmp
aad
mov
std
sbb
nop
int3
fisubs
and
les
decb
sbb
jno
adc
sti
or
mov
push
test
lds
mov
inc
or
cmp
sub
or
ret
xchg
insb
dec
pop
shrl
mov
mov
mov
out
inc
sub
push
in
sar
pop
sub
dec
jge
xchg
aad
or
lcall
jns
push
insl
out
gs
mov
add
dec
cmpsb
ss
fdivr
jbe
cmc
inc
cli
sahf
in
decl
cs
mov
xor
dec
aad
adc
mov
loop
push
in
push
xchg
in
or
adc
bound
repnz
in
iret
push
mov
or
pushf
enter
lret
cmpsl
pop
cmp
data16
ljmp
les
pusha
mov
mov
stos
jmp
pop
inc
lahf
sbb
xchg
push
fadds
mov
outsb
sbb
loop
loope
out
gs
pop
fsubs
jae
push
in
pop
mov
sub
dec
imul
or
icebp
add
sbb
and
mov
movsl
pop
bound
stc
js
and
mov
push
dec
sar
sbb
and
mov
std
pushw
subl
outsb
and
into
mov
and
or
pop
leave
in
xchg
dec
cmpsl
fsubr
mov
out
sbb
xchg
mov
jne
sbb
mov
mov
or
fcmovne
out
jno
xor
cmpsb
sub
fs
xchg
add
notl
push
fwait
dec
mov
dec
cli
push
jl
std
test
out
mov
sbb
cwtl
pop
js
pop
fwait
ret
pop
push
mov
pusha
or
and
loopne
pop
iret
jg
movsl
pop
ds
lods
or
sahf
push
mov
push
ret
xchg
ljmp
and
xor
push
sbb
xor
add
movsb
test
adc
leave
ss
xchg
into
sahf
decl
loop
repnz
mov
ret
sbb
inc
scas
negl
stos
pop
out
jp
movsl
fldt
mov
push
js
fsqrt
pop
lcall
adc
bound
adcb
mov
add
xor
xchg
in
loopne
jo
pop
inc
push
mov
fnstcw
fwait
inc
and
jecxz
scas
add
stc
jl
cld
out
js
cltd
jo
movsl
adc
adc
addb
add
clc
int3
sub
in
pop
add
arpl
jno
mov
inc
pop
shl
out
fwait
adc
lahf
ror
pop
adc
mov
xchg
cwtl
mov
outsb
xor
cwtl
iret
or
add
test
fcoml
test
or
rcr
push
xchg
cmp
push
cmp
jl
or
cmp
jae
fwait
test
out
fxch
fdivrs
outsl
clc
jp
lcall
xchg
add
daa
add
out
jo
lahf
repz
push
leave
leave
sbb
test
pop
mov
push
jo
mov
push
icebp
sbbl
cltd
jmp
arpl
aam
out
mov
pop
into
lret
inc
and
xchg
cmp
popa
xchg
in
sti
gs
inc
loop
inc
pop
icebp
mov
cmp
and
xchg
stos
out
lcall
jae
out
jnp
cmc
shlb
or
xchg
inc
fsubrl
xchg
push
mov
add
das
jl
lret
push
jecxz
subl
add
cltd
mov
mov
jl
movsl
out
or
inc
xchg
jecxz
stos
inc
cmpb
mov
sub
push
sub
inc
and
mov
sub
call
sbb
and
cmpb
inc
mov
jp
xor
bound
mov
out
xchg
lock
and
jp
push
ds
pop
and
push
aam
repnz
jns
insb
inc
jns
adc
sbbl
int
movsl
cmp
jb
imul
fnstenv
xor
sub
pusha
repnz
fwait
ja
pop
and
lods
mov
movsb
negb
aam
je
push
inc
sahf
jbe
popa
adc
enter
stos
mov
fdivr
or
pusha
or
jnp
mov
popa
stc
fnstcw
sub
mov
fbld
jne
loopne
outsl
inc
pop
sti
loop
scas
popf
and
into
fwait
adc
and
xchg
leave
lcall
out
ret
cmp
sbb
mov
xchg
dec
notl
xlat
inc
xchg
or
ret
jg
movsb
fidivrs
sbb
push
and
pop
imul
push
and
rol
adc
push
xchg
cmp
adc
push
mov
cmc
mov
ret
test
mov
mov
ds
mov
fists
nop
repnz
add
cmpsb
in
jp
jns
les
or
repz
popf
clc
mov
repnz
pop
std
leave
popa
pusha
xlat
cmp
xor
lret
jb
scas
sbb
das
mov
lds
xchg
out
sub
sub
adc
inc
in
fcoms
faddl
cltd
sbb
aaa
or
xchg
adc
in
repz
adc
lret
rcrl
enter
xchg
pop
mov
push
icebp
scas
mov
aad
jo
mov
sbb
sti
adc
mov
mov
jb
insl
rcll
add
xor
and
pop
cli
loopne
xlat
xor
shrl
adc
adc
fimull
and
aas
mov
data16
inc
dec
jbe
xor
popf
xchg
push
popf
jo
mov
stos
cmp
pusha
mov
cmp
cwtl
pop
lea
mov
nop
jmp
insb
add
pop
cmp
push
in
pusha
aad
fidivrs
xor
mov
mov
ljmp
mov
xor
or
repz
pop
in
mov
xchg
test
mov
arpl
sbb
test
test
or
ret
jg
dec
repnz
shrl
hlt
pop
dec
mov
mov
pop
mov
or
jno
pushf
sbb
xchg
rcrl
xchg
fs
sahf
mov
mov
sbbb
pop
fstps
lahf
pop
jecxz
adc
and
sub
sti
mov
and
cmpsl
inc
mov
adc
mov
xchg
enter
test
cld
in
bound
and
xor
sbb
in
add
jg
icebp
ja
lcall
scas
add
inc
jb
cmpsb
and
ss
adcl
stc
mov
add
out
sbb
jno
clc
imul
adc
cmp
jo
xorl
xor
sarb
lods
cmp
mov
or
push
into
popl
leave
jbe
jo
ror
shlb
decb
cmp
mov
std
or
push
push
aaa
sub
sub
mov
cmp
add
enter
add
sbb
and
adc
push
jo
stc
jne
call
sbb
jnp
out
jp
insl
lcall
mov
push
dec
and
sahf
inc
popf
sub
mov
fldenv
jne
xor
adc
mov
pop
or
or
sbb
test
or
into
sbb
jl
insb
movsb
das
daa
ljmp
gs
xchg
xchg
ja
dec
out
push
add
js
sbb
adcb
rcr
sub
mov
xchg
jo
mov
add
adc
jns
mov
xlat
shlb
sub
ss
push
cmp
sub
mov
pop
adc
pop
ret
push
jae
and
jnp
les
sbb
data16
ret
cmc
pushf
sbbl
lea
or
insb
push
cld
psubusb
nop
insb
std
lea
cmpsb
sbb
fcmovnu
lock
add
sbb
insb
out
insl
jp
test
imul
or
fadd
mov
cmpsl
and
push
sbb
add
aad
add
sbb
insb
ret
mov
jo
stos
mov
ss
jecxz
or
nop
mov
mov
iret
vpsubw
pop
mov
bt
xlat
lds
dec
mov
pop
pusha
and
jmp
pop
pop
dec
mov
mov
test
sbb
cwtl
imul
adc
icebp
pop
insb
fnsave
out
lods
jmp
pop
popf
loopne
pop
inc
inc
mov
or
rorl
je
sbb
mov
push
test
cmpsl
mov
push
pop
pusha
xchg
push
in
sbb
mov
outsl
mov
mov
sti
inc
dec
pop
push
xchg
stc
mov
enter
push
je
das
mov
jo
setnp
test
mov
xchg
sbb
inc
jns
or
jecxz
mov
sub
mov
pop
xlat
stos
std
ss
dec
movsl
push
movl
and
mov
push
pop
popa
sar
movsl
mov
cld
mov
int3
cmpsb
testb
lea
xchg
test
inc
or
cmp
mov
adc
das
sbb
mov
call
adc
mov
shrb
xchg
dec
movsl
or
les
mov
inc
sub
jle
mov
lret
adc
hlt
rolb
mov
sub
adc
mov
iret
push
cs
pop
jecxz
out
jno
cmp
pop
dec
dec
mov
hlt
adc
sbb
push
push
call
rcl
pop
and
inc
push
sbb
repz
popf
loop
xor
xor
xchg
fsubl
xchg
movsb
add
sbb
daa
data16
dec
sti
and
int
inc
xor
mov
pop
dec
fs
push
imul
add
mov
in
fisubrl
mov
add
jns
sti
jns
insb
es
out
lcall
push
mov
adc
jmp
dec
ficompl
das
mov
shrl
aam
jp
call
and
sub
repnz
adc
ja
mov
add
dec
icebp
rorl
pop
aas
xchg
inc
mov
sbb
sub
in
int3
cmp
xorl
aas
fistps
aas
mov
rorl
sub
arpl
mov
clc
sbb
mulb
lcall
ss
mov
xor
jg
fmuls
orl
dec
mov
insl
mov
jecxz
repnz
push
lds
cmp
popf
testl
iret
add
pop
mov
aas
cmp
pop
fldcw
xchg
sbb
jp
mov
outsl
mov
repnz
addr16
ja
lock
or
out
sbb
push
lods
jmp
add
int
lret
insl
lcall
mov
roll
ja
enter
pop
add
xor
pop
aad
or
sub
mov
push
movsl
sbb
test
arpl
cs
cmpsb
incl
fmul
lahf
jl
adc
push
sbb
xchg
cmp
fsub
bound
mov
insl
pop
inc
adc
ds
bound
test
icebp
icebp
insb
ss
jb
and
mov
mov
clc
sub
rcr
mov
lret
bound
lea
xchg
dec
mov
push
push
cmpl
sbb
jno
pusha
push
and
repz
mov
inc
outsb
and
sub
dec
xor
pop
mov
lret
mov
jmp
jl
rclb
cmc
jle
sbb
lods
sbb
lds
mov
rorl
mov
xlat
loop
inc
rcr
jae
jnp
inc
cmp
pop
lahf
cmp
sahf
xor
push
pop
or
fcompl
fisttpll
test
lret
imul
jbe
adc
cs
pop
scas
adc
push
mov
mov
shlb
sub
pop
or
mov
gs
orb
cmp
pop
int3
mov
std
loopne
pop
mov
imul
push
push
sarb
cmpsb
scas
pop
aaa
xchg
mov
test
pusha
inc
xchg
sbb
js
and
cmp
jnp
lret
out
stos
jmp
sbb
popf
xchg
rclb
inc
repz
pop
xchg
push
movsb
mov
jl
push
mov
cwtl
cli
ljmp
xchg
mov
jp
aaa
jge
jb
pop
je
dec
jo
mov
push
mov
ss
sbb
mov
movsl
inc
ret
jg,pt
and
push
sti
mov
adc
mov
in
and
mov
pop
push
push
add
cmp
adc
test
fnstsw
testl
and
in
divb
gs
rcrb
ljmp
xchg
xchg
and
sbb
mov
or
adc
inc
repz
mov
dec
push
mov
loope
sahf
dec
lods
ret
lahf
test
sub
xor
mov
icebp
mov
lock
insl
out
mov
push
leave
test
cmpsl
fsubl
mov
cltd
stos
scas
inc
iret
xor
push
lods
mov
dec
mov
stos
xchg
jbe
hlt
loope
cmp
xorl
mov
leave
sub
push
test
adc
dec
ror
les
push
bound
push
fdiv
insl
cmp
cwtl
inc
inc
adc
lods
cmp
xor
mov
dec
dec
pop
cmpsl
cmp
jg
pop
push
nop
lahf
imul
pop
xchg
out
pop
test
push
push
jno
fidivrl
jne
repz
shll
jno
andb
js
fwait
in
jb
std
in
fldenv
adc
pop
xchg
les
out
sub
aam
dec
pop
sbb
js
cmp
imulb
loopne
stos
in
nop
pop
mov
sub
pop
mov
lea
dec
ss
fildll
sub
negb
stos
imul
bound
push
mov
pushf
and
mov
xor
push
insl
xorl
popl
mov
pop
xchg
inc
or
repz
leave
inc
adc
add
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
push
cld
jae
jp
sbb
jp
push
lcall
or
xlat
daa
mov
lcall
or
sbb
mov
dec
rcrb
dec
fwait
mov
pop
movsl
dec
lock
push
push
scas
ffree
je
push
sbbb
jnp
mov
scas
enter
mov
cmpsl
pop
mov
xlat
inc
loop
psrlw
sbb
bnd
jae
mov
cs
and
ljmp
call
adcb
test
jle
in
sbbb
push
lret
cmpsl
adc
cmpsl
aad
mov
imul
pop
out
cwtl
cmpsl
ss
test
adc
mov
lcall
jae
jg
xchg
comiss
mov
stos
aaa
pop
sbbb
mov
ffreep
adc
int
ficompl
nop
hlt
xchg
xchg
and
jg
mov
insb
in
pop
mov
xchg
dec
es
add
sub
or
cmp
cmp
push
inc
loopne
sub
mov
fsubrl
push
popa
ret
mov
adc
cmp
jecxz
outsl
or
rorb
push
popa
pop
int
paddsw
push
lea
adc
xchg
mov
arpl
xor
data16
decl
and
sub
cmp
je
pop
sub
mov
data16
add
ja
fucomip
mov
sub
xor
movaps
push
pop
xlat
and
rolb
mov
cmp
in
mov
test
pop
aam
xchg
xchg
stc
test
in
shl
dec
push
push
rep
out
scas
subl
imul
int
sub
sub
ret
mov
fimuls
mov
pmulhw
pop
ds
fwait
push
in
add
jmp
inc
and
jns
ficompl
sbb
das
sbb
fs
fstpl
arpl
mov
pop
xor
enter
dec
jns
sub
mov
mov
push
in
cmp
pushf
push
orb
pusha
aam
js
adcl
out
ds
rcrb
adc
push
sbb
repnz
call
push
lods
ja
repz
jne
adc
dec
lret
pop
lock
addl
stos
popa
sarl
insl
pop
dec
loopne
adc
lea
push
mov
add
push
jb
inc
dec
ficoms
dec
inc
subl
and
repz
aad
sbb
pop
scas
push
lret
cs
pop
arpl
ljmp
lret
int
out
sub
cmp
dec
mov
cmp
mulb
lret
repz
stc
add
mov
ss
inc
or
loopne
lret
mov
adc
jo
out
lret
mov
xchg
add
push
lds
sub
push
xchg
sub
xlat
sub
adc
inc
int3
mov
cmp
andb
lret
stos
jl
aas
pushf
jmp
ds
in
or
dec
xchg
test
mov
mov
mov
popa
jle
inc
mov
push
stos
xchg
sbb
lcall
aam
imul
sub
inc
out
pusha
mov
dec
sbb
scas
pop
mov
dec
les
or
jecxz
push
inc
cmpsb
push
mov
mov
sbb
dec
dec
data16
pop
imul
mov
push
push
in
out
and
in
sbbl
add
lods
mov
inc
mov
xchg
jg
add
int3
jno
xchg
ds
aam
in
stos
mov
mov
pushf
dec
mov
mov
jge
loopne
popf
sbb
dec
scas
pop
xlat
jg
hlt
aaa
mov
inc
xchg
fistl
jbe
inc
pop
sub
xor
fs
lods
rcll
jecxz
add
cmpsl
clc
loope
jb
push
xor
scas
mov
mov
aad
push
sbb
pop
jno
xchg
sahf
and
and
fwait
cwtl
in
sarb
adc
mov
dec
push
xchg
out
arpl
xor
popw
rclb
jp
sbb
dec
sub
xor
mov
sbb
ja
lds
pusha
adc
add
pop
xchg
xchg
add
or
leave
subb
jnp
lds
push
cmp
enter
xor
jae
ds
adc
adc
in
jmp
pop
mov
mov
icebp
mov
cltd
cmc
rclb
mov
mov
popf
xchg
roll
ss
lret
into
mov
imul
mov
mov
cmp
xchg
xchg
icebp
fcoml
movsl
dec
sbb
lea
imul
xor
adc
into
mov
std
sarb
cs
sub
mov
das
stos
ret
sub
loop
mov
fistps
push
jo
sbb
xor
out
cs
cld
lret
cmpsb
sub
or
iret
loop
lahf
mov
adc
push
shl
sub
xchg
das
loope
mov
imul
daa
pop
shrl
stc
test
mov
pop
lea
pop
add
movsl
push
push
pop
cmp
add
xorl
sti
inc
sbb
sub
ret
pusha
jmp
aad
jns
mov
xchg
iret
mov
stc
jp
cld
lret
mov
lcall
xlat
stc
jp
stc
addr16
sahf
jecxz
test
iret
shrl
xchg
lods
inc
push
ds
popa
dec
jle
sub
fs
jno
int3
imul
mov
xchg
inc
fwait
popa
jns
fstps
jg
scas
ljmp
xorl
out
adc
mov
xchg
test
sub
das
inc
sarb
and
push
xchg
xor
inc
lods
bound
adc
xchg
sbb
sub
push
pop
out
mov
xorb
jne
inc
bound
cld
outsb
xchg
adc
dec
mov
xor
mov
bound
lret
push
test
mov
adc
add
mov
leave
fs
jge
les
lods
aad
enter
lret
lcall
out
jb
ss
enter
out
push
ja
or
jle
push
xlat
aas
xchg
mov
cmpsb
loop
std
dec
pop
push
stos
mov
lods
mov
pop
mov
cmp
or
push
cmpsl
pop
add
mov
inc
mov
and
sbbb
mov
mov
and
push
loopne
add
stos
xor
mov
push
shl
dec
je,pt
into
cltd
icebp
adc
bound
and
jle
cli
inc
inc
sub
jbe
lret
test
ds
fs
popf
xlat
dec
arpl
popa
je
add
lea
in
imul
mov
mov
sbb
sti
mov
xchg
fidivrs
mov
mov
dec
loopne
pop
shl
loopne
in
jns
sbb
push
aaa
push
xchg
pop
mov
gs
xchg
fisubrl
icebp
mov
adc
dec
sub
test
cmpsl
sbb
out
sub
sbb
aaa
add
lcall
cmp
movsl
jl
jne
gs
jne
pop
sbb
fstpl
lret
add
lret
cmp
arpl
push
js
adc
lcall
mov
dec
mov
loop
cmp
jp
jmp
loopne,pn
cmp
push
xlat
icebp
decb
aam
das
mov
addr16
jne
loop
dec
test
mov
rclb
and
push
sub
ret
add
inc
mov
and
popf
sub
jmp
pusha
pusha
enter
js
and
jge
pop
data16
outsl
and
imul
mov
in
out
in
pop
pop
jle
push
sbb
sub
lret
stc
push
sub
jp
andb
mov
fdivs
call
inc
sbb
push
mov
lret
aam
pushf
imul
popa
adc
mov
ret
mov
sub
enter
or
sbb
cmp
bound
sub
outsl
sbb
jge
jne
or
adc
pop
xchg
or
push
cmp
push
sbb
arpl
push
inc
inc
and
outsl
arpl
dec
divl
sub
ja
adc
je
xor
mov
xlat
mov
dec
push
xchg
hlt
in
or
dec
push
inc
mov
mov
dec
bound
bound
push
inc
imul
adc
dec
pop
xchg
inc
loopne
sar
mulb
in
mov
xchg
loopne
flds
out
addps
xor
xor
pop
add
xchg
adc
icebp
rorb
gs
adc
imul
xchg
fmull
jnp
jb
repnz
subl
mov
mov
cmp
dec
mov
jnp
lods
popf
out
mov
movsl
cmp
call
mov
jg
filds
test
mov
scas
push
xor
xchg
sub
or
fwait
insb
xchg
call
push
add
xor
inc
test
jge
mov
inc
jno
pop
mov
mov
enter
push
roll
in
xchg
cltd
push
push
push
das
dec
movsl
lods
aam
pop
push
sub
daa
push
sbb
jl
and
or
xchg
rol
xor
add
test
mov
loope
inc
out
rcl
aaa
jg
sbb
out
inc
cmpsb
xchg
sti
sahf
lcall
daa
fimuls
cmp
ret
out
add
sbb
fildl
inc
dec
jle
lods
dec
sti
loopne
sbb
jbe
inc
inc
xchg
pop
pop
lret
sbb
jbe
mov
imul
enter
int
and
push
mov
in
rorb
push
lcall
mov
in
test
outsl
aaa
cmpsb
arpl
hlt
orl
bound
push
fidivl
fstps
fisttpl
rorb
rcll
pop
lahf
lret
into
and
xchg
int3
or
xchg
notl
into
pop
mov
int3
dec
xchg
adc
xchg
mov
mov
adc
ljmp
jg
leave
adc
stos
cmp
aad
shll
mov
repnz
lret
mov
jae
std
call
sub
mov
xor
in
fcompl
dec
pop
mov
dec
add
inc
int
push
ret
sbb
fildl
sti
push
xchg
add
xor
mov
and
movsb
ja
bound
add
shr
or
add
pop
mov
jl
fildl
pop
lahf
repnz
cmpsb
lods
mov
out
les
or
mov
adc
add
and
rcr
inc
insb
adc
pop
shrb
mov
pop
orl
mov
int
lods
and
out
xor
loopne
and
dec
jle
stc
adc
jle
daa
repnz
mov
mov
sbb
rcr
lods
outsl
sub
cmp
popl
cmc
fs
mov
mov
cmpsb
pop
mov
pop
enter
jo
push
mov
addl
jnp
pop
xor
xor
mov
adc
pop
add
push
add
faddl
cwtl
mov
cmc
and
das
addl
inc
mov
jmp
adc
jb
je
cmp
stos
cmpsl
mov
lret
cmp
and
xor
push
repz
aad
negb
cld
or
fidivrs
cmp
dec
std
mov
adc
out
lcall
mov
and
dec
fcmovnbe
jo
notb
movsl
push
sbb
cmp
pop
ja
cmpsl
mov
movsw
dec
add
movsl
inc
leave
add
mov
adc
mov
xor
sub
sbb
mov
lret
bound
xchg
aaa
imul
jmp
inc
stos
clc
xor
data16
push
cmp
mov
mov
sbb
fbld
leave
jo
or
adc
clc
mov
ret
mov
cmp
sbb
push
sub
das
xchg
nop
mov
mov
fwait
or
popf
lock
pop
repnz
pop
xor
std
sbb
mov
mov
pop
xchg
repnz
xor
jns
scas
dec
je
jno
sarb
lock
sub
call
xor
call
in
sbb
mov
jne
stc
inc
xchg
pop
repnz
dec
mov
sbb
add
adc
lret
inc
xor
icebp
xorl
je
lods
inc
clc
je
xchg
test
xchg
test
jae
add
call
xor
sub
xchg
jle
inc
dec
inc
mov
enter
inc
pop
andb
jecxz
sbb
mov
mov
aam
push
es
adc
or
mov
jl
dec
test
jp
add
enter
into
mov
lods
and
scas
sub
push
lods
negl
lods
cmp
xor
mov
mov
sbb
inc
mov
xchg
loope
daa
push
add
aam
push
cs
sub
arpl
sub
icebp
fadd
aaa
stos
mov
jo
pop
or
stos
jg
aam
and
lock
iret
sbb
jecxz
push
sbb
add
xlat
clc
fisttpl
lods
xor
hlt
popa
enter
inc
ret
mov
or
inc
dec
xchg
mov
mov
cs
out
cmp
mov
mov
mov
std
rolb
add
jmp
cmp
gs
pop
adc
and
movsb
jg
jge
ss
je
xlat
xchg
sub
cmp
movsl
or
inc
bound
mov
repz
and
push
adc
repnz
movntq
xor
and
xchg
mov
cmpsb
dec
cmp
je
pop
xlat
xchg
repz
mov
pop
sbb
cmp
fs
jbe
inc
ror
inc
add
lea
divb
mov
test
ja
shll
dec
or
icebp
insl
popa
pop
fisttpll
inc
stc
fldenv
add
add
add
pop
adc
aaa
xchg
test
mov
ror
fisubs
dec
in
xor
mov
sbb
push
fnsave
xor
pop
ljmp
les
jno
shl
icebp
pop
push
pop
jnp
aas
mov
out
xchg
push
cli
sti
imul
mov
lock
idivb
cmpsl
in
dec
pop
inc
sub
ja
roll
in
cmp
and
les
lret
mov
push
subb
sub
pop
pop
aad
lods
imull
lock
xchg
pop
push
push
jge
sbb
add
mov
sub
out
les
sarl
mov
cli
jns
xchg
xchg
push
addr16
stc
lret
mov
bound
sub
pop
aaa
xchg
bound
movsl
dec
add
out
add
test
xchg
repnz
decb
mov
adc
mov
sub
xchg
lcall
inc
orl
pop
ss
add
push
push
dec
or
bound
push
jmp
fcmovnu
add
mov
pop
and
js
cltd
repz
sub
movsb
push
pop
rcll
and
push
and
mov
pop
dec
ss
xchg
pop
xorb
hlt
arpl
or
filds
cmp
or
dec
or
push
push
in
popa
push
jp
cmp
outsb
dec
leave
out
imulb
jno
cmp
push
loopne
icebp
hlt
je
enter
lahf
sbb
fstps
shll
ja
fmull
mov
ljmp
mov
ja
push
push
xor
icebp
lret
mov
cmp
sahf
dec
inc
mov
clc
fcomi
in
aas
arpl
stos
cmpl
insb
push
jmp
xchg
mov
jnp
mov
mov
mov
xor
gs
cmc
mov
lods
cs
sahf
movsl
pop
adc
into
mov
dec
cltd
mov
mov
inc
or
arpl
jne
cmp
mov
lret
push
sbb
and
into
aas
add
iret
push
xchg
dec
mov
mov
fmull
push
and
movsl
adc
or
data16
loopne
test
rcrb
jecxz
dec
adc
dec
add
mov
jno
nop
lret
stos
test
fxch
cmp
inc
fiaddl
loope
sbb
inc
repnz
mov
xchg
pop
pushw
dec
adc
scas
sub
sub
enter
enter
frstor
cmc
hlt
pop
rcll
sahf
jp
cli
std
and
test
repz
outsl
shlb
cmp
enter
xchg
cmp
sbb
jp
int3
xchg
in
dec
inc
and
jge
faddl
rcll
fs
mov
xor
sti
cmp
push
push
pusha
shlb
lods
lods
test
lret
ja
out
aad
fcomps
faddl
xor
mov
mov
bound
dec
mov
pop
aaa
push
push
pushf
dec
fists
or
lds
mov
rorl
inc
test
imul
popf
pop
es
jbe
out
pop
push
adc
fs
push
stos
ja
sbb
mov
or
or
xchg
imul
xchg
loopne
jmp
inc
push
sbb
sub
repz
pop
jno
dec
sbb
ret
add
sbb
ret
mov
jmp
push
sti
and
adc
cmpb
jge
mov
jae
in
sbb
sahf
adcb
mov
pop
fs
mull
and
inc
lret
lahf
insb
out
cwtl
add
sbb
fiadds
pop
sbb
enter
dec
and
lea
adc
jno
stos
out
jb
jmp
mov
xlat
xchg
and
addr16
cmp
sbb
cld
and
mov
aad
daa
dec
jae
repnz
or
jmp
call
rcl
pop
lods
push
lahf
or
adc
js
mov
xchg
xor
dec
pop
and
push
cmp
in
push
sbb
jl
mov
mov
push
mov
lock
inc
jmp
cmpsl
insl
insl
mov
and
mov
dec
cmp
data16
rcrb
add
push
outsl
cmpsl
cli
jecxz
div
stos
dec
ja
cmp
lret
gs
ret
mov
movsb
ret
sub
fisubs
and
int
lock
dec
ret
jnp
inc
pop
mov
push
inc
xlat
sub
test
inc
cmp
sbb
xor
jb
test
lcall
rclb
mov
add
pop
out
int3
ret
add
cmp
loop
ss
test
add
cmp
int3
shlb
xor
jb
insb
loopne
push
jge
jmp
dec
ffree
insb
push
movsl
repnz
pop
inc
cld
and
or
and
dec
mov
dec
cmp
xchg
push
cmc
push
loop
sub
fcompl
push
add
lcall
mov
inc
inc
imul
aam
push
adc
scas
fisubrl
or
in
mov
and
lock
ljmp
sub
xchg
pop
xchg
or
sbb
jns
xor
xchg
lods
out
mov
inc
add
cmpsl
jecxz
in
lods
xchg
std
mov
shlb
adc
inc
jae
pop
test
adc
and
xor
pop
scas
data16
shrl
int
sbb
adcl
lock
jno
movsb
enter
sub
js
scas
xorl
loop
sbb
notl
lea
sub
arpl
mov
jae
xor
subl
mov
mov
push
fwait
sahf
lea
out
pop
lea
fimuls
lea
stc
sub
adc
inc
mov
enter
mov
pop
jmp
mov
dec
imul
sbb
rcrb
repnz
loopne
inc
mov
mov
jb
aam
stc
mov
lahf
mov
jb
sbb
push
dec
iret
pop
mov
std
jmp
add
das
sub
pop
call
push
scas
jo
push
lret
inc
repz
jl
mov
xor
daa
mov
add
or
pop
ret
daa
shrb
pop
push
movsl
addb
lahf
lods
mov
mov
rcrb
lods
rcrl
xor
into
xchg
sub
inc
pop
sbb
and
cmpsl
xor
daa
pop
dec
mov
test
addr16
aas
jnp
pop
push
iret
lods
pop
les
mov
push
jge
daa
aam
imul
rcrb
xchg
imul
jbe
std
ret
les
out
mov
inc
fsubl
pop
insl
inc
mov
rcrl
adc
push
pop
sbb
push
shlb
sti
mov
adc
loope
js
ret
xchg
add
inc
push
andb
jle
jns
lock
ficompl
push
dec
mov
js
adc
dec
cmp
vmulps
pop
adc
cmp
fsubr
mov
sbb
and
sub
pushf
add
cmp
xlat
pop
sbb
pop
mov
xchg
lcall
loopne
icebp
stc
lret
push
and
or
or
add
cs
and
pusha
pushf
mov
add
sbb
mov
movsl
dec
imul
mov
cmp
fcoms
xchg
fsubp
pop
and
mov
pop
jmp
ret
loop
fsts
adc
mov
xor
and
aas
into
push
aaa
das
ja
bound
lcall
nop
gs
xchg
pop
int3
test
shr
adc
add
sub
ds
push
ret
inc
sar
pop
lret
add
js
pop
cmp
aas
inc
lcall
je
push
jae
imul
roll
push
mov
push
inc
lahf
pop
outsb
std
test
ffreep
pop
adc
or
dec
gs
imull
outsl
xchg
mov
sbb
xor
push
iret
mov
dec
stos
adc
dec
mov
nop
adc
fistpll
das
jo
mov
movsl
lods
jb
sbb
les
fsub
mov
add
dec
dec
scas
inc
rolb
punpckldq
sbb
cmp
pop
sbb
xchg
mov
int3
jnp
ljmp
ficoml
sbb
fsubl
add
divl
aad
lcall
rorb
stc
test
sub
dec
xchg
mov
nop
into
repnz
mov
outsl
jl
enter
addr16
shll
in
xor
xor
jne
cltd
add
ret
fisubrs
loope
or
insl
in
jns
enter
sub
popf
mov
adc
aad
mov
jb
lea
xor
and
mov
inc
daa
sub
adc
mov
add
jge
jg
cli
pop
and
mov
cltd
iret
mov
cli
adc
popa
lahf
ja
cli
cmp
imul
jbe
push
mov
mov
xchg
test
test
cmp
pushf
cmp
push
mov
lods
mov
sub
sub
stos
in
push
int3
test
mov
inc
movsb
cltd
push
xlat
cmpsb
xor
fnsave
jno
loopne
dec
jae
push
add
cmpsb
or
xchg
dec
cmp
push
aaa
dec
dec
out
adc
rcrb
or
pop
lret
in
xchg
jg
loopne
sbb
cmp
cmp
mov
mov
cmp
insl
mov
mov
int3
mov
jbe
sub
cltd
push
pushf
inc
pusha
movsl
mov
in
pop
fbld
rep
xor
stos
jge
addr16
mov
out
inc
rcrl
lret
jge
xor
xor
pusha
adc
push
xlat
pop
aas
lea
mov
fistpll
icebp
aas
inc
lea
inc
xchg
ljmp
adc
mov
cmp
jle
in
pop
fcomps
and
jo
sti
inc
xor
int3
push
xchg
push
xor
test
ret
push
add
cmpsl
arpl
out
lea
push
data16
and
jge
cmp
mov
sub
imul
aad
jecxz
in
xchg
gs
dec
stc
dec
pop
stos
sub
lods
adc
jnp
in
xchg
mov
gs
mov
fwait
dec
loop
js
cltd
sub
movsl
mov
enter
mov
mov
verw
cmp
lcall
cld
repz
sti
sbb
mov
inc
enter
push
inc
out
lahf
or
adc
pop
pop
cmp
or
cmp
daa
or
mov
cli
popa
push
or
push
fucomip
xlat
fcoms
dec
mov
call
xor
dec
sbb
sub
sub
mov
fisubl
push
loope
repz
push
push
mov
orb
sub
pop
jle
sbb
pop
push
gs
ja
jo
add
adc
lea
add
addr16
test
xchg
iret
cmp
inc
adc
fadd
or
int3
sub
loopne
add
mov
cmpsl
cmp
and
fnstsw
dec
xchg
fnstenv
flds
mov
jle
xchg
rolb
cmpsb
or
lahf
jp
fdiv
lea
test
bound
out
es
xchg
dec
int
inc
add
loop
adc
sbb
fdivrl
shrl
stos
sub
cwtl
xor
testb
pop
pusha
sbb
bnd
mov
mov
jmp
aas
lret
mov
cmc
hlt
stc
pop
mov
in
bound
imul
pusha
pop
outsb
cmpsl
mov
xchg
test
mov
lea
dec
ljmp
mov
jp
sbb
adc
xchg
inc
out
dec
imul
das
cmp
les
jl
push
pushf
sbb
bound
int3
mov
sahf
dec
dec
sbb
cmovo
push
std
hlt
push
shrb
cmp
lock
js
inc
xchg
stos
cmp
stos
je
xchg
xchg
xchg
fiaddl
int
lcall
movsb
lock
jbe
insl
out
add
int3
inc
ljmp
xchg
scas
imul
testb
mov
jmp
jne
pop
aaa
andb
aam
lea
repnz
fdivrs
gs
gs
and
push
jg
dec
nop
test
and
dec
or
leave
ds
xor
shrb
sbbb
sbb
push
loope
stos
cltd
and
imul
sub
cmp
push
xor
sti
divb
int
xor
push
in
dec
add
stc
ds
fmuls
jmp
xor
dec
xchg
popl
dec
hlt
aas
cmp
and
add
je
mov
push
cmpsl
sbb
nop
sbb
fldt
and
xchg
jno
xchg
xchg
mov
jl
popf
jns
xchg
sbb
pop
outsb
mov
mov
sub
sbb
inc
sbb
fs
and
push
out
test
dec
dec
test
shrb
jno
and
test
push
xor
pop
shr
daa
stc
lock
or
into
movsl
loope
adc
aam
pusha
fcomps
lret
jno
mov
fdivl
xchg
test
mov
ds
sub
pop
jmp
cmp
test
test
sub
ret
in
sbb
inc
xchg
nop
cmp
lcall
jae
or
nop
imul
psadbw
push
into
shl
xchg
xor
js
sti
lods
pushl
stc
push
stos
and
dec
sahf
fistpl
shrb
push
xor
jge
inc
xchg
dec
out
imul
push
imul
insb
test
mov
pop
sbb
push
mov
dec
jmp
adc
dec
sub
adc
addr16
fucom
add
mov
flds
insl
jno
out
scas
call
adc
adc
cmp
out
fnstcw
push
xchg
jno
outsl
pusha
fst
adc
std
scas
test
fcmovbe
push
sbb
push
lock
mov
icebp
sbb
shl
jne
adc
push
sub
stos
jne
cmp
jns
dec
fdivp
jno
add
xchg
push
pusha
rcrb
ljmp
inc
test
lds
rolb
push
daa
push
jns
push
cmp
shll
sbb
inc
and
pop
mov
push
mov
leave
sub
scas
popf
test
xchg
adc
inc
jg
mov
push
in
cwtl
lock
lods
lock
shlb
or
ret
stos
mov
dec
test
in
jbe
rorl
pop
test
push
adc
pop
lcall
cmpsb
push
pushf
outsb
add
push
dec
cmp
mov
lahf
movsb
xchg
adc
fidivs
mov
es
jmp
jmp
in
mov
rolb
lea
mov
sub
push
in
mov
loop
lods
ljmp
cltd
cmp
fadds
enter
and
jb
test
jns
rcrl
mov
or
dec
cmc
xor
stos
mov
sbbl
or
pop
mov
mov
inc
rcr
mov
mov
data16
mov
sbb
int
mov
sahf
cmpsl
sub
popf
dec
fnstenv
sub
in
dec
stc
xchg
dec
stos
hlt
push
imul
fidivl
mov
pop
xchg
xchg
ljmp
gs
lods
or
xchg
mov
bnd
fdivrl
pop
clc
jmp
into
dec
mov
inc
cmp
clc
push
fadds
das
test
sub
mov
mov
push
in
dec
cli
stos
sub
cs
shrb
xchg
push
rolb
inc
aam
popa
rcl
std
sub
mov
add
jnp
or
int
mov
call
dec
add
push
pop
and
rcrl
notb
inc
sub
and
sub
iret
popf
push
mov
lock
lods
in
dec
out
out
cmp
es
scas
scas
fs
adc
aad
inc
mov
pop
fmuls
adc
xchg
add
je
ja
sbb
sub
loope
mov
xchg
test
jbe
aam
icebp
adc
popf
sub
in
mov
cltd
out
test
fsubs
jno
add
icebp
ret
das
dec
add
inc
psubw
pop
stc
lods
sub
pop
js
lods
cltd
aas
adc
mov
push
mov
push
cmp
xor
adc
shlb
xchg
sub
jecxz
leave
into
dec
shrl
roll
inc
sub
dec
push
sbb
fucomip
fistl
insl
out
loopne
fstpt
mov
fwait
adc
sahf
jg
or
inc
cs
aaa
add
fidivs
lret
imul
mov
cltd
leave
inc
aaa
fucomi
xchg
lds
sbb
push
subb
cmp
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
outsl
cs
jp
or
jp
outsl
in
jg
dec
cld
lds
sub
sub
push
xchg
adc
mov
les
mov
dec
push
mov
lahf
xchg
mov
xchg
and
xor
flds
cwtl
lret
mov
xorb
xchg
push
adc
ja
sbb
aad
ja
add
mov
mov
adc
in
mov
push
cmp
add
ds
push
enter
jecxz
pop
mov
data16
pop
lcall
lea
sbb
cld
pop
push
mov
fstpt
ljmp
mov
ret
lahf
sub
jl
sbb
shrb
or
xor
outsb
fdiv
movsl
mov
dec
clc
xchg
iret
push
lds
shlb
and
mov
jge
mov
and
adcb
push
jmp
fs
push
ljmp
lds
popf
aas
stc
int3
int
lods
out
out
push
aas
fnstenv
dec
test
dec
mov
test
lret
push
ljmp
and
fbld
fistpl
jbe
mov
add
mov
mov
sub
ds
cmp
repz
sahf
jb
mov
jnp
mov
jns
mov
pop
sub
sbb
dec
fstpl
leave
flds
out
pop
mov
lea
insl
inc
cmp
insl
jle
push
push
gs
fmuls
pop
popf
scas
xchg
lret
fists
faddl
addr16
cli
in
jmp
inc
mov
jo
popf
jge
mov
je
lret
sbb
or
mov
xchg
add
clc
fcomi
imul
je
aam
imul
dec
or
out
repz
imul
repz
test
and
and
stos
inc
int3
mov
in
addr16
cmp
arpl
xor
dec
mov
test
adc
mov
popa
push
xorb
pop
jnp
cmp
dec
shlb
adc
adc
fidivrs
sbb
fs
mov
lds
cltd
fists
negl
mov
in
iret
or
or
mov
sbb
xchg
je
imul
mov
bound
dec
cli
mov
sbb
and
cmp
jnp
pop
cmp
ds
fwait
iret
arpl
pop
mov
inc
fisttpll
repz
out
stos
push
and
sahf
inc
xchg
and
test
cmp
push
pushf
pop
ja
mov
and
and
add
xor
and
cli
clc
les
add
addr16
xchg
adc
repnz
add
pop
fidivrs
filds
lcall
add
ljmp
xor
sbb
pop
mov
cmp
push
mov
in
icebp
xchg
mov
jl
call
mov
out
and
outsb
in
xor
jg
ss
pop
bound
inc
dec
mov
jno
in
ds
push
fdivp
test
iret
push
jg
and
out
inc
jnp
fldcw
rorl
mov
add
ret
sub
pop
rorl
and
mov
and
and
movsb
push
inc
sbb
mov
leave
cmc
cmp
div
or
sbb
inc
and
dec
and
mulb
cmp
pop
arpl
jge
loope
mov
add
rorb
movsl
dec
in
dec
ljmp
pop
or
cmp
mov
mov
aaa
push
int
outsb
mov
adc
sbb
and
dec
sbb
idiv
ds
lcall
mov
aam
push
repz
nop
pop
pop
inc
sub
xor
aam
imulb
inc
ljmp
inc
in
mov
jl
subl
mov
cmp
lcall
hlt
clc
pusha
or
xchg
xchg
hlt
aaa
cmp
mov
outsl
adc
fcoms
jnp
sbb
xor
orb
add
test
fdivs
mov
add
jl
dec
mov
scas
mov
insl
cmpl
shll
xchg
jo
or
dec
pop
add
test
push
mov
adc
jl
mov
shll
inc
ja
gs
mull
adc
push
loope
add
test
mov
pop
fcompl
pop
ja
fnstsw
mov
pop
outsb
ret
jp
fldl
inc
inc
mov
out
popl
mov
mov
mov
leave
dec
imul
jmp
movsb
out
sbb
xor
adc
jge
mov
mov
jae
std
or
pop
sub
subl
adc
push
loop
sbb
test
pop
and
int3
cmc
popa
psraw
sub
jae
fbstp
lock
push
into
lret
test
xchg
dec
mov
aam
and
push
pop
jmp
daa
cmp
mov
mov
lahf
lods
mov
and
mov
mov
pop
arpl
test
inc
test
sub
cltd
jb
lods
imul
xchg
push
cmpsb
std
lret
stos
xor
adc
mov
stos
cmpsl
push
cld
cwtl
cmpsl
movb
xchg
push
jg
or
cmpsl
rclb
pop
mov
jbe
xor
push
push
test
add
push
sub
dec
rclb
push
add
mov
mov
xchg
out
lock
adc
icebp
dec
sbb
sub
add
gs
sbb
sbb
cmp
xor
add
out
loope
mov
sbb
shl
adc
fisubs
mov
xchg
pusha
cmpsb
arpl
push
mov
and
test
fildll
jno
test
nop
mov
movsb
lock
or
sub
xor
movsb
add
rcr
inc
add
mov
out
xchg
add
test
and
insl
inc
jo
rorl
cmp
inc
shlb
and
add
pop
pop
fs
in
clc
aaa
addr16
cmc
scas
sub
xor
jle
xor
into
pop
stos
notb
adc
push
xchg
adc
pop
je
imul
push
jle
loopne
and
dec
jg
add
sub
push
cwtl
xchg
cmc
jne
in
enter
xlat
movsb
notl
mov
jle
iret
mov
xor
lret
mov
jp
outsl
jle
xchg
push
add
out
xchg
xchg
inc
sbb
test
rorl
mov
or
lock
jp
push
mov
jp
sarb
mov
sub
push
pop
cs
movsb
ja
mov
mov
outsl
push
fdivrl
gs
imul
xor
lret
mov
adc
mov
lods
ret
push
das
xor
or
push
jp
shll
cltd
lahf
xchg
sarb
push
lcall
inc
insl
dec
cmp
in
daa
cwtl
xchg
sahf
sub
or
in
push
sbb
mov
xchg
stc
cmpsl
push
ret
lods
xchg
mov
clc
push
sbb
jb
sbb
aad
leave
mov
fnstenv
push
in
int3
pop
xor
popa
or
mov
clc
pop
movsb
ljmp
jecxz
mov
insb
rorb
fdivs
adc
sub
xchg
xchg
pop
loope
push
and
popa
ja
nop
lret
add
mov
ret
push
and
in
imul
jae
gs
mov
lahf
mov
stos
call
enter
std
imul
adc
stos
sahf
sbb
dec
paddusb
inc
pop
push
aas
push
hlt
push
pushf
ret
test
cmp
cmp
dec
lahf
xchg
and
mov
jns
mov
std
mov
and
jp
mov
adcl
test
imul
and
add
mov
fwait
es
adc
fdivrs
loope
popa
out
or
inc
and
inc
shlb
aaa
push
cmp
sbb
ja
cmc
scas
mov
xor
and
loop
in
outsb
data16
cmp
push
add
adc
and
inc
popa
add
fcmovnbe
mov
xlat
lret
xchg
js
mov
inc
ds
mov
icebp
xrelease
push
arpl
xor
jle
cmpsb
popa
int
in
ret
cmovp
sbb
test
divb
jl
sbb
jbe
stos
not
repnz
orl
loope
jge
mov
dec
sub
adc
and
outsl
or
in
dec
les
inc
mov
or
mov
out
iret
add
lahf
mov
dec
arpl
or
push
mov
outsb
and
jbe
adc
dec
add
hlt
movsb
xor
call
add
call
movsl
push
pop
decb
jle
mov
fs
nop
clc
push
enter
jecxz
sbb
loope
bound
xchg
jb
idivb
ja
dec
mov
inc
pop
xchg
imull
outsl
pop
xor
popa
scas
jmpw
scas
pop
mov
int
aad
imul
sub
mov
call
and
jns
imull
sub
jne
iret
mov
int3
into
addr16
popa
insl
mov
repnz
jmp
pop
ret
ja
mov
fcomps
jo
jp
adc
sbbb
add
outsl
xchg
mov
cmp
in
nop
les
out
data16
out
jecxz
lea
inc
imul
mov
jmp
push
cmp
sub
cmp
sub
popf
lahf
mov
cmp
jnp
dec
xchg
testb
into
leave
out
out
test
mov
jl
subl
into
sub
out
inc
jge
push
insl
dec
mov
jg
jp
mov
fnsave
mov
push
sbb
jmp
adc
jns
addr16
loop
cwtl
xor
mov
jnp
add
xor
mov
xchg
roll
and
dec
xchg
jno
inc
lock
aas
cs
ret
sub
push
pop
pop
mov
mov
jne,pt
dec
sbb
jle
inc
sub
inc
push
sbbb
daa
shrb
out
stc
jne
out
xchg
cmovae
into
mov
pop
cmp
clc
loopne
fdivrs
add
rol
mov
mov
sti
pop
push
and
int3
aas
int3
daa
inc
rcl
mov
nop
dec
mov
and
push
lods
mov
testb
xchg
jle
pushf
aaa
sarb
mov
xchg
gs
inc
or
jmp
mov
jnp
or
or
decb
lahf
mov
push
push
mov
mov
sbb
push
push
mov
mov
repz
pop
in
pop
gs
jle
mov
lock
pop
mov
mov
movsb
sbbl
xchg
fistl
notb
dec
aad
push
js
or
pushf
nop
insb
fs
dec
or
push
popa
jp
or
and
rcll
push
jecxz
fistpl
push
mov
int3
out
sub
mov
stos
adc
adc
js
cmc
aas
lahf
gs
or
jp
rol
xor
xchg
test
push
xor
enter
sbb
adc
repnz
adc
out
add
mov
mov
loopne
push
data16
outsl
mov
stc
xchg
scas
leave
aaa
and
inc
test
jle
adc
sbbb
push
add
push
outsl
xchg
cld
add
and
cmp
xchg
loop
sbb
clc
cmp
fsubrl
push
inc
fistl
mov
jmp
push
pop
or
addb
into
sbb
dec
adc
lahf
sahf
fnstcw
ret
out
icebp
xor
sbb
out
in
add
add
pop
cmp
and
or
xchg
in
cmp
jecxz
jmp
addl
test
lock
testb
xchg
bound
in
jo
xor
xor
jge
ds
inc
jg
add
iret
repnz
ds
data16
repnz
lcall
out
push
aaa
gs
pop
xlat
mov
leave
adcb
pusha
sub
mov
shlb
clc
inc
or
sbb
fadds
cmp
mov
dec
cwtl
cmpsb
daa
inc
mov
push
stc
inc
cmpsl
jmp
aad
sub
push
mov
adc
adc
pop
ficompl
and
jae
pop
sarb
in
sub
jb
roll
cmp
stc
pop
adc
movsl
xchg
sbb
mov
or
pop
mov
jge
pop
cld
jae
sbb
mov
mov
in
cmp
mov
in
scas
test
inc
ljmp
pop
add
and
sub
aas
les
enter
insb
xor
jg
test
scas
fadd
mov
pop
pusha
sbb
js
mov
stc
stc
clc
dec
ret
out
push
inc
aaa
jo
mov
loop
pop
or
push
negl
mov
jbe
enter
push
shrl
lods
imul
sbb
imul
and
enter
repnz
jns
adc
icebp
stc
enter
pxor
fnstcw
dec
xor
aad
mov
adc
xor
and
sbb
pop
icebp
pop
mov
jb
test
inc
mov
adc
mov
xor
ja
loopne
dec
imul
ds
pusha
and
insb
lret
sub
movsb
xchg
mov
cmp
jae,pt
mov
dec
dec
shrl
lahf
out
fdivs
mov
push
fistl
or
push
cmpsb
test
mov
add
dec
mov
aam
sbb
jnp
icebp
das
cwtl
clc
mov
lcall
pop
jmp
adc
aad
imul
ja
vpsrlq
sahf
mov
aad
outsl
push
lea
lret
xor
mov
cmp
flds
fstl
mov
insb
das
dec
xorb
xor
or
out
aam
repz
out
adc
arpl
out
mov
xchg
shll
fcmovnbe
mov
lods
dec
add
and
rcr
cmpsl
mov
xchg
dec
push
pop
inc
lods
imul
sbb
adc
cli
adc
push
enter
cmpsb
stc
dec
push
inc
nop
pop
xchg
cmp
push
sbb
mov
aas
mov
push
jge
adc
push
or
inc
out
sbb
xchg
les
in
jb
test
mov
ficompl
push
or
lret
push
mov
push
sub
cbtw
nop
enter
and
loope
sbb
mov
mov
pop
or
shlb
dec
adc
cmpl
adc
push
mov
or
sbb
adc
mov
pop
repz
outsl
mov
and
lahf
cli
jmp
fstl
or
sub
mov
mov
pop
jl
faddl
push
int
leave
negb
std
cmp
push
lret
fsubrp
jb
sbb
scas
adc
jmp
stos
xlat
je
fisubs
lds
clc
add
imul
in
ljmp
sbb
xlat
pusha
stos
or
dec
mov
sbb
cld
push
jl
int
in
lds
scas
pop
stos
jb
test
std
mov
ja
mov
xchg
push
fldcw
lahf
mov
lahf
enter
fisttpl
pop
arpl
mov
and
lcall
cmp
sub
dec
es
mov
and
cmp
and
mov
adcb
stc
pop
loop
loope
inc
std
xchg
gs
fnstsw
mov
push
out
cmp
out
daa
sub
mov
fcompl
adc
into
inc
pop
sbb
push
das
pop
pushf
cld
push
adc
mov
fistpll
add
push
sub
lock
cmp
les
dec
std
ja
and
sbb
sub
sbb
xchg
cmp
jle
and
xor
test
push
lock
testl
jns
test
mov
pop
and
loop
mov
push
bound
jns
push
ret
fidivl
cwtl
int
rol
cmp
and
ss
out
push
mov
fmuls
add
popf
sub
in
mov
stos
push
pop
in
fwait
mov
sub
pusha
pop
lcall
push
cwtl
out
dec
sahf
and
jge
dec
add
leave
mov
push
loope
jo
inc
and
mov
ret
dec
add
int3
test
fs
lcall
jl
adc
cmp
cmp
aaa
fisttps
sbb
lret
sarb
stos
fcmove
sub
push
int
test
fcomip
icebp
and
sbb
divb
nop
das
mov
pop
lods
sbb
rcrb
mov
push
or
jns
imul
push
call
stc
xor
mov
test
addl
mov
mov
jbe
dec
xor
pop
cmpsl
add
xchg
lods
gs
push
pop
sub
xchg
lds
stos
or
stos
out
cmp
out
or
push
xchg
jecxz
sbb
pop
inc
push
lea
call
pop
mov
repz
mov
fistps
lret
adc
aam
fadds
mov
cmp
dec
push
in
jmp
sti
daa
test
cmpsb
orb
mov
shll
lahf
mov
adc
dec
cwtl
int
or
hlt
inc
xor
xor
mov
movsl
and
pop
xchg
dec
cwtl
dec
xor
mov
cs
mov
xchg
pop
mov
mov
std
je
popa
fnstcw
lods
dec
icebp
sbb
add
test
in
lods
int3
cmpsb
pop
inc
push
mov
xor
stc
pop
pop
jnp
mov
sub
in
test
xor
mov
adc
lds
sub
lods
sub
mov
hlt
jg
sbb
push
jmp
loop
jg
mov
mov
fimull
sbb
xor
popf
push
jge
fcmovne
pop
jmp
sbb
sbb
xor
cmpl
stos
mov
jg
lret
sahf
add
cli
inc
add
mov
repz
movsb
mov
test
and
jmp
cltd
lods
divl
mov
xlat
xchg
dec
sub
pop
pop
and
stc
std
or
into
inc
inc
lcall
lds
pop
scas
out
mov
frstor
jne
cmpsl
push
dec
push
sub
fcoms
dec
dec
mov
test
mov
sbb
push
mulps
adc
sub
std
leave
fsubl
mov
test
mulb
outsl
jo
and
adc
mov
daa
sbb
adc
daa
jmp
cli
movsl
pusha
icebp
cmp
dec
rcl
mov
mov
push
and
dec
loop
test
int3
imul
clc
jg
outsl
insl
adc
xor
int
push
nop
hlt
sub
addr16
ljmp
imulb
dec
adc
int
add
xchg
ljmp
ret
sbb
or
adc
outsl
testl
lahf
mov
or
push
ficompl
xchg
push
push
lret
mov
and
sub
dec
leave
mov
xchg
inc
repnz
stos
mov
sub
ljmp
add
cld
pushf
inc
mov
sub
jmp
mov
cmc
test
mov
je
test
rclb
push
lods
repz
adc
test
xor
test
call
fidivrs
mov
lahf
imul
out
cmpsb
jb
mov
xor
arpl
xor
xor
push
pop
adc
mov
leave
jns
push
std
shll
pop
nop
add
ret
jg
push
sbb
jp
out
leave
cmp
decb
xor
jb
mov
mov
lahf
jbe
jb
or
jg
pop
test
add
enter
push
pop
imul
adc
das
nop
sbb
insb
call
dec
add
aaa
fnsave
push
aaa
cli
sbb
inc
fldcw
pushf
sub
cmp
jp
cmp
xchg
mov
fmul
stos
test
rclb
mov
inc
ja
bound
repnz
xor
fnstenv
adc
inc
sub
cmp
stos
jl
push
jnp
jl
xchg
mov
cmp
push
cmp
jbe
adc
out
xchg
outsl
xor
mov
mov
mov
lret
into
sti
xlat
mov
or
fildll
stc
sub
mov
arpl
pop
jmp
je
dec
cltd
ljmp
push
test
jbe
jl
mov
jge
imul
fbstp
aaa
lods
lds
lret
sbb
in
adc
mov
mov
ss
fildl
and
and
xchg
in
sbb
dec
mov
dec
dec
insl
or
lahf
js
sub
push
and
jmp
daa
sbb
cwtl
cltd
inc
daa
pop
add
imul
cmpb
pop
test
ljmp
es
call
pop
test
cmpl
xchg
cmp
xchg
mov
and
fs
int
cmp
stos
loopne
jle
popf
loop
xchg
pop
adc
sub
insb
loop
push
push
loop
xchg
mov
inc
push
call
testl
lret
adc
scas
sbb
stos
and
sub
lret
fadds
test
adc
jg
mov
movsl
or
xor
or
stos
jne
mov
xor
outsb
ja
jecxz
jl
adc
das
cmpsb
mov
push
mov
int
push
mov
pop
aas
mov
mov
push
cmp
aam
add
adcl
lret
lahf
pop
mov
cmp
sti
fidivs
xchg
dec
xor
insb
jnp
and
addb
inc
mov
mov
outsl
aas
shl
outsb
stos
jmp
addl
icebp
xchg
mov
mov
lock
bound
and
ss
cmpb
in
pop
stos
or
loopne
xor
xor
movsl
mov
int3
fnstcw
mov
rcr
or
sti
xchg
and
dec
out
imul
xlat
loop
fcoml
repz
fimuls
jle
lock
subl
scas
fiaddl
popa
int
lds
jnp
and
inc
pop
orb
out
cmpsb
jb
add
icebp
adc
xor
out
push
idivl
fwait
mov
je
lret
sub
mov
movsl
stc
fwait
mov
xchg
icebp
pop
sbb
loope
inc
sub
mov
jecxz
xor
je
lret
xchg
popa
xor
push
mov
rcll
pushf
jmp
adc
ucomiss
mov
mov
es
adc
or
mov
cmp
xchg
or
mov
xchg
add
mov
cmc
add
repz
fldcw
push
int
inc
xor
scas
sahf
dec
out
mov
or
lea
push
pop
sti
sbb
jnp
imul
mov
adc
add
or
scas
push
lcall
mov
imul
dec
loope
scas
mov
test
out
or
in
mov
dec
das
test
and
daa
lds
outsl
mov
jl
mov
and
loop
add
movl
mov
cmc
push
repnz
jno
out
icebp
adc
push
mov
push
loopne
dec
lods
pop
lahf
enter
pop
sub
lods
inc
jge
jbe
loopne
insl
ja
pop
inc
adc
xchg
xor
stos
cmpsl
mov
adc
xor
jmp
lds
dec
in
in
into
or
and
mov
xchg
pop
jle
or
pop
jno
ss
jp
loope
push
out
lock
fldcw
add
xor
and
xchg
pop
sbb
mov
and
or
cmp
fs
in
fbstp
inc
pop
stc
out
fildll
mov
mov
test
cmp
stc
jns
ficomps
xchg
xchg
sbb
sub
fidivrl
int
enter
hlt
insl
mov
data16
dec
dec
out
push
aas
mov
les
add
sbb
and
sub
mov
pop
adc
scas
leave
mov
int
mov
add
add
xchg
mov
xlat
das
xor
adc
pop
push
imul
imul
and
enter
sahf
sbb
int
lea
inc
or
lahf
outsb
xchg
sbb
push
dec
out
into
inc
jo
xor
in
adcl
push
sub
inc
int3
sub
jae
or
mov
dec
test
fidivl
add
add
sbb
pop
stos
insl
mov
ret
xchg
data16
jbe
cli
sbb
sbb
les
sti
imul
mov
cmp
dec
out
xchg
sub
icebp
mov
sub
inc
mov
daa
mov
inc
mov
mov
hlt
fwait
notl
jle
sti
in
call
nop
das
fabs
push
aad
inc
sysexit
cmp
mov
mov
inc
dec
dec
cmp
and
test
add
int3
ret
pop
add
mov
inc
lods
shrb
pop
sub
or
out
fdivr
test
fucomp
je
add
cmp
sbb
pop
dec
imul
adc
lods
cmpsl
xchg
lods
popa
pop
popa
fisubrs
xlat
pop
fildl
dec
mov
jnp
adc
mov
int3
add
int3
cmp
inc
lea
es
mov
add
dec
mov
jmp
dec
and
divb
je
pop
xchg
xchg
jns
data16
jae
dec
xor
mov
xor
dec
lcall
ja
mov
jp
mov
add
mov
clc
int3
push
mov
xchg
mov
bound
or
icebp
ljmp
lods
push
adc
push
or
and
roll
mov
out
leave
mov
aaa
in
insl
sbb
fs
sbb
rcrb
mov
add
xchg
aaa
and
shlb
aam
test
les
cltd
mov
enter
outsb
loop
jl
pop
pop
out
push
cmpsb
nop
dec
add
fimull
pushf
popf
push
notb
push
inc
and
add
mov
mov
in
enter
inc
jp
xchg
sbbb
imul
cmovl
lcall
fwait
mov
cmp
xchg
outsb
loope
xorl
mov
add
and
mov
pop
jle
mov
es
mov
and
cmp
mov
xchg
ret
jp
jo
sbb
test
sbb
std
mov
dec
cwtl
hlt
call
sahf
adc
cmp
pop
ljmp
aas
outsb
imul
rcll
lret
call
in
inc
cld
sbb
and
shll
negb
insl
ret
jno
mov
ds
scas
jp
int3
lret
add
cmp
cmp
sub
mov
cli
cmp
aad
mov
lret
inc
sbb
mov
or
jnp
sti
add
mov
push
dec
mov
push
aam
mov
stc
andb
sub
mov
sahf
mov
sbb
cli
add
xchg
pop
dec
xlat
dec
xor
leave
loop
xchg
push
lcall
add
sbb
in
mov
inc
xchg
mov
add
and
das
cmp
repz
lret
xchg
outsb
xorl
out
jbe
mov
mull
mov
test
cmpsl
push
fsubrp
icebp
xor
mov
sbb
or
fidivl
ss
aad
push
inc
test
xlat
mov
mov
or
test
jne
pusha
loop
xor
adc
pop
push
xchg
pop
std
lcall
xchg
or
jno
xchg
push
ss
test
outsb
push
ret
test
sbb
js
test
inc
mov
and
push
pop
pop
outsl
or
js
mov
aad
icebp
mov
adc
fidivrl
dec
dec
jl
or
add
adc
mov
fdiv
sub
or
mov
and
clc
pop
iret
jae
fidivrl
movsb
cld
mov
mov
fstpl
leave
jnp
mov
push
mov
adc
stos
scas
push
pop
out
iret
jno
add
ljmp
dec
mov
pop
js
andb
mov
out
jg
xor
pop
and
dec
mov
jo
add
sub
ja
add
data16
lret
sub
bound
daa
lcall
outsb
mov
cmp
mov
mov
arpl
pop
pusha
movsl
cmp
in
pop
popa
popf
sub
sub
fstl
rorb
fbld
xor
popa
jb
sub
cmp
mov
ret
movsb
cltd
push
mov
xor
mov
inc
sbb
jns
dec
and
cld
outsl
clc
and
sub
icebp
dec
add
mov
ret
loopne
mov
pop
or
mov
loop
incb
pusha
mov
push
fdivrl
imul
jbe
mov
mov
cmpsb
and
push
cltd
loope
cmpsb
pushf
popf
cmpsb
sbb
popa
cli
insb
xor
lds
dec
sahf
mov
rcll
inc
clc
mov
std
xor
dec
fcomps
adc
repz
push
mov
inc
jnp
mov
sbb
add
sarl
add
aaa
xchg
jae
jmp
notl
jmp
and
in
fnstenv
jmp
js
lret
outsl
dec
scas
lods
nopl
cmp
adc
popa
mov
imul
daa
dec
pop
adc
mov
outsb
mov
nop
inc
pop
xchg
outsl
jecxz
shll
ss
xlat
adc
sti
aam
xchg
push
dec
cmp
cmp
pop
cs
scas
cmpsb
stos
xlat
out
mov
out
pop
mov
and
jp
aam
mov
flds
lods
sbbl
fldt
and
lret
fmuls
mov
pop
mov
inc
inc
pop
sbb
mov
xor
out
test
lret
jne
int3
pop
fstpl
mov
icebp
adc
test
xor
jo
jno
mov
fnsave
pop
add
or
popa
cmp
xchg
roll
in
xor
push
daa
je
inc
and
mov
nop
or
sbb
popf
sarb
popf
dec
and
sbb
mov
inc
push
std
pop
xor
push
mov
xlat
add
aas
mov
aad
cwtl
fisttpll
int3
add
pusha
sarb
pop
mov
dec
xor
loopne
orl
pop
test
out
adc
push
leave
test
shll
mov
rcrl
jbe
test
mov
ja
loopne
fcomip
mov
int3
jae
or
jae
inc
inc
stos
xchg
or
xchg
lock
mov
xchg
int3
sub
xchg
add
addr16
andb
or
xor
pop
in
shl
xchg
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
and
add
jae
jp
pop
jp
insl
mov
cmp
or
ss
mov
jb
fdivl
and
jg
xchg
lcall
jle
sarb
jb
sar
arpl
aas
pop
mov
dec
and
xlat
pushf
adc
mov
push
pop
jecxz
or
adc
dec
mov
nop
cs
cmp
adc
jbe
out
nop
mov
push
pop
lahf
fidivrs
loope
jge
push
sbb
xchg
clc
out
xorl
xchg
jle
fnstcw
dec
push
rolb
and
push
xchg
aas
out
shrb
rorb
pushw
mov
xorb
and
add
loop
jne
push
jge
roll
cmp
inc
xchg
and
xchg
mov
loop
ss
pop
jecxz
cmp
sbb
add
xor
hlt
mov
test
cli
sbb
jo
scas
and
or
decb
es
cs
mov
loop
cmpl
das
cmp
xchg
pop
pop
pop
mov
and
push
daa
xor
mov
push
and
stc
inc
test
sbb
mov
lods
add
call
imul
mov
dec
pop
jl
fnsave
stc
inc
stos
and
or
cltd
pop
sub
pushf
sbb
add
fmull
clc
scas
lret
pop
jl
int3
js
jle
xchg
sti
or
out
int3
leave
in
lret
pop
mov
mov
adc
xorl
xlat
sahf
testl
scas
xor
inc
mov
js
je
js
out
lea
in
es
nop
pop
dec
dec
pushf
cmp
in
jns
pushf
dec
aam
jge
lcall
mov
pop
fmuls
xor
mov
stos
std
jg
sub
jp
cmpsb
insl
daa
jb
negl
and
mov
mov
xlat
nop
mov
push
pusha
mov
xchg
dec
ss
lcall
clc
dec
sub
mov
subb
mov
rcl
mov
push
clc
push
je
pop
xchg
loop
arpl
enter
jge
in
adc
cmp
insb
adc
and
out
xor
push
xchg
cmp
mov
jae
dec
repnz
jmp
fcmovnbe
mov
ja
loopne
mov
and
push
ljmp
push
inc
mov
dec
jge
test
mov
mov
jbe
aad
idivb
mov
sarb
inc
sub
jns
ret
xor
mov
out
cmp
xchg
xor
je
dec
mov
add
sub
xchg
pusha
cmp
pop
push
and
iret
int3
xchg
mov
imul
pop
leave
pusha
dec
rclb
sbb
xchg
into
nop
cmp
dec
pop
lahf
xor
int
sbb
test
add
cld
sbb
pop
pop
xor
in
adc
hlt
mov
dec
cmpsb
sbb
cmp
dec
cmpsb
jle
lret
mov
lret
sbb
mov
xor
or
sbbl
pop
popf
mov
jge
shll
xor
and
lret
lcall
pop
sbb
cmp
icebp
jg
cwtl
add
sbb
inc
and
loope
xor
inc
movsb
test
enter
or
push
pop
mov
mov
push
and
je
pop
test
jl
pop
data16
push
mov
out
fadds
mov
push
mov
mov
in
out
fs
add
mov
push
jns,pt
and
sti
insb
loop
mov
pusha
push
cmpsb
xchg
out
xchg
push
imul
inc
inc
or
pop
movsb
mov
sub
sbb
ret
pop
into
in
adc
hlt
jg
add
and
cmp
ret
jb
shr
pop
mov
not
test
mov
cmp
fsubrl
out
lea
js
dec
fistl
mov
aam
xor
loopne
xor
scas
sbb
mov
xchg
mov
cld
mov
adc
popf
mov
push
pop
sbbl
xor
add
xchg
add
and
cmp
xor
jge
or
loop
pushf
dec
cwtl
andl
aad
int
in
xchg
aas
adc
xchg
sbbb
and
xor
arpl
out
pop
int3
and
xor
fldcw
or
jp
cmp
xchg
out
sti
or
jecxz,pn
arpl
lea
mov
rolb
pusha
mov
mov
mov
std
inc
mov
aas
sub
cmp
cwtl
or
mov
bound
push
xchg
push
out
dec
jp
mov
enter
mov
mov
sti
lret
fiaddl
sbb
icebp
clc
mov
das
xchg
movsl
rolb
out
inc
mov
loopne
aam
fmul
mov
shlb
cmp
insl
stos
lret
jbe
sbb
adc
and
push
inc
pop
inc
cmp
sub
inc
dec
je
add
and
into
stc
out
push
mov
mov
xchg
cli
jb
push
mov
cs
pop
push
dec
fstpt
mov
stos
and
add
jbe
pusha
mov
nop
push
inc
fists
pop
lea
inc
push
test
fcmovu
dec
xchg
sub
sub
jne
mov
dec
push
sub
out
xor
push
loope
mov
dec
jne
in
xor
repz
jmp
xchg
fiaddl
int
mov
andl
ss
cmc
mov
cmp
in
fdivrs
mov
in
sbbb
add
xor
xor
sahf
call
inc
pop
jmp
addb
pop
repz
xchg
fidivrl
aaa
stc
and
push
inc
or
mov
sbb
test
xchg
adc
or
rep
movsl
pusha
sub
fsubrs
jle
xchg
pushf
sbbb
movsb
and
cs
mov
outsb
fwait
ret
cltd
fprem1
aad
jnp
sbb
sbb
and
cli
jno
nop
inc
and
or
int3
loope
inc
add
sub
mov
mov
fs
push
mov
jg
insl
xchg
pop
dec
sar
push
aaa
jmp
movsl
mov
mov
inc
add
sub
cmp
pusha
mov
push
jbe
test
mov
adc
xorl
mov
add
mov
aam
stos
dec
sar
insl
dec
pushf
jns
add
inc
pop
cmp
dec
dec
inc
jecxz
fstps
push
pop
sub
mov
fadds
pop
paddd
jle
das
sti
mov
clc
or
push
addr16
jg
cmp
fwait
sbb
jbe
nop
cmp
imul
ret
shll
repz
push
jno
sub
stos
roll
xchg
add
jg
and
aas
mov
and
xchg
sarl
and
pmaxsw
or
inc
and
inc
and
jne
scas
inc
dec
fsubp
scas
and
xchg
mov
pop
cld
pop
popa
pop
fildll
or
inc
add
jne
es
out
sub
repnz
inc
or
test
xchg
in
ljmp
mov
jle
mov
cmp
cli
cmp
test
movsl
xor
cmp
inc
repnz
mov
daa
pop
or
mov
popa
lds
push
and
pop
xchg
je
stos
push
imul
lahf
add
dec
mov
and
pop
loope
sub
inc
jo
test
mov
jg
dec
mov
mov
dec
push
push
cld
in
pusha
fildll
shrb
lret
push
aaa
pop
test
outsb
push
mov
mov
mov
xor
inc
xor
sub
lock
mov
adc
addr16
aam
cmp
adc
cli
fdivrs
sub
push
mov
xor
imul
inc
cmp
enter
std
cwtl
xchg
jecxz
rcrb
je
stos
loop
inc
jnp
aas
loop
add
outsl
addl
xchg
push
dec
lds
dec
fstps
icebp
mov
mov
outsl
fcompl
cmpsb
adc
sub
jns
int
shll
dec
mov
outsb
arpl
mov
data16
xchg
jne
push
push
out
xor
xchg
stc
incl
or
pop
cmp
dec
or
fcompl
mov
fists
test
inc
and
cmp
dec
inc
dec
inc
dec
pop
out
iret
inc
test
xchg
cld
test
mov
rcr
lea
jp
xchg
cmp
daa
add
les
jne
xor
outsb
adc
and
mov
sbb
rcrl
scas
enter
test
jecxz
mov
pop
nop
mov
fdivs
jnp
aad
iret
ret
jns
xchg
adc
mov
push
cld
jle
or
fwait
loop
sbb
leave
xchg
xor
pop
adc
or
dec
shlb
loopne
pushf
arpl
loope
inc
xchg
pop
jo
leave
sub
push
adc
shll
mov
cli
cmpsb
dec
jo
cmpsb
lock
scas
jg
pop
xchg
add
xor
dec
sbb
repnz
cli
rol
or
push
or
mov
and
inc
leave
jp
cli
mov
pop
pop
setg
cmp
pusha
push
mov
sbb
and
mov
ret
rclb
aad
xor
imul
or
je
pusha
stos
frstor
jle
push
dec
push
cwtl
jp
jno
lods
mov
jmp
mov
sti
insb
fadd
shrl
pop
cmp
push
and
scas
jmp
xchg
stos
std
ret
mov
jl
sbb
arpl
xchg
adc
pop
inc
jbe
hlt
das
cmp
push
bound
repnz
lock
cltd
test
test
lods
jl
and
push
mov
push
push
stos
sbb
xlat
jge
out
xchg
mov
push
lret
stos
push
ficomps
pop
sbb
push
ds
mov
sbb
js
test
aas
aaa
in
mov
jbe
xchg
dec
and
or
sti
xchg
pop
vpsubsw
addl
push
rclb
aad
and
push
xor
iret
add
jne
add
sti
mov
sbb
popf
mov
outsl
push
jge
jg
outsl
sahf
xchg
push
mov
mov
inc
int3
xchg
cmp
mov
jb
rcrb
push
jle
sub
push
in
out
pop
dec
insl
rorl
lods
mov
push
stc
fisubrl
xchg
jl
mov
test
dec
andb
push
adc
push
movsb
jl,pn
mov
pop
lods
xchg
cli
jg
mov
fsts
push
xchg
sub
push
loope
neg
add
movb
fstp
cmp
in
outsb
jo
call
xor
addr16
push
jo
pusha
rcl
stc
cltd
jecxz
mov
jae
or
push
push
jmp
adc
movsb
add
in
shrb
lret
pusha
cmp
lods
inc
xchg
les
movsb
jl
adc
cmc
or
iret
insb
mov
xlat
and
lods
jae
xchg
fcmovbe
hlt
cmc
mov
subb
sti
jne
aam
fwait
in
mov
and
inc
test
imul
xchg
dec
jbe
pop
xchg
shr
pop
push
cmp
push
sbb
jne
fmuls
jns
test
adc
xchg
stos
pop
fs
aam
ss
inc
xchg
mov
and
jecxz
mov
sbb
adc
mov
clc
mov
movsb
aad
das
mov
inc
push
in
nop
mov
lcall
mov
test
aam
jnp
stos
mov
inc
add
gs
adc
lock
and
enter
xchg
dec
ret
jp
enter
test
adc
push
push
mov
xor
insb
push
sub
xorb
jns
cmp
jno
mov
int
imul
xchg
cmc
mov
repnz
sbbb
enter
push
sbb
and
fdivs
movsb
or
mov
test
dec
adcl
sbb
mov
repz
jge
jmp
stc
add
or
sti
rorb
cmpsl
xchg
fistpl
mov
mov
rcrl
mov
mov
nop
repnz
push
push
test
add
mov
aam
jg
or
dec
out
loop
outsl
int
adc
xorl
jecxz
sbb
inc
push
or
pop
add
fsubs
addr16
outsl
shll
inc
sub
ja
dec
xlat
or
js
mov
xlat
jno
pop
test
inc
lds
add
jne
pop
dec
jmp
inc
sbb
inc
in
jmp
push
sub
rcl
xchg
jne
stc
push
jl
stos
cs
xlat
insb
int
mov
inc
jne
jo
je
lea
adc
leave
cmpb
mov
andl
or
jo
xlat
and
mov
lods
add
or
out
xor
fwait
mov
es
mov
int
add
inc
mov
inc
cmp
stc
aas
adc
jne
push
cli
enter
ret
sub
sbb
pushf
cmp
add
pushf
add
fs
pop
mov
mov
dec
das
in
sub
enter
test
aaa
fistpl
push
add
inc
sbb
ds
in
push
out
jge
mov
or
sbb
cmp
into
je
jae
imul
jae
inc
inc
loop
sbb
dec
test
sahf
cmp
cmp
int
sbb
movsb
sti
jecxz
mov
int3
ja
mov
sahf
jl
or
jg
out
cmp
js
clc
movsb
out
icebp
adc
mov
jns
sbb
fildll
pop
bound
ljmp
test
adc
cli
mov
aas
sbb
rorl
cmp
mov
rorb
inc
push
inc
enter
add
roll
mov
and
enter
push
negl
inc
fisubl
ficoms
xor
dec
adc
or
inc
fdivl
inc
jo
inc
push
push
sbb
jo
jmp
mov
outsl
add
divb
loop
pop
push
mov
popa
or
jae
inc
jb
sub
daa
mull
or
stos
je
pop
popf
mov
jne
imul
aaa
daa
sub
mov
inc
outsb
add
push
popf
add
pop
cmp
outsb
fnstsw
push
xor
pop
dec
inc
ret
bts
mov
cwtl
out
test
dec
gs
sub
sub
add
ret
cmp
mov
cmp
mov
add
jge
loopne
out
xchg
loop
xchg
insl
add
adc
fcom
mov
cmp
loope
mov
xchg
mov
rcll
mov
pop
mov
push
mov
add
nop
mov
or
in
xchg
xchg
outsb
mov
call
xor
sub
mov
arpl
ss
pop
dec
jne
fwait
adc
dec
sub
iret
mov
xor
stc
in
sbbb
fs
pop
pop
xchg
xchg
loopne
cmp
jge
out
push
jo
aad
out
cwtl
test
xchg
adc
mov
stc
xlat
pop
test
and
push
pop
sbb
mov
dec
ss
or
mov
xchg
adc
pop
sub
xor
push
sbb
add
fstpl
filds
inc
mov
jne
mov
loop
or
jp
outsl
arpl
jo
mov
lret
std
test
arpl
lret
mov
aaa
and
shl
or
hlt
out
mov
push
and
sub
arpl
fdivr
dec
push
dec
mov
pop
cmp
call
push
mov
scas
loopne
jns
out
xchg
mov
stc
pop
aad
popf
lods
mov
inc
dec
pop
add
cmpsl
lock
push
mov
pop
or
xchg
mov
divl
push
push
dec
xchg
adc
inc
xchg
mov
dec
das
cltd
mov
pushf
daa
ljmp
cltd
ds
cs
movsl
je
cmp
repz
test
push
mov
clc
and
cwtl
cli
inc
mov
sub
adc
sarl
push
pop
xchg
sbb
mov
push
and
adc
dec
std
mov
push
js
loopne
push
inc
lcall
push
mov
jle
push
mov
ret
cli
or
jg
negb
out
loopne,pn
fs
es
mov
fistps
xor
lahf
cld
jmp
scas
sbb
imul
popf
in
movsb
hlt
pop
mov
add
xchg
test
xchg
scas
pop
cmc
sti
push
into
cmc
lcall
scas
mov
mov
mov
ljmp
xchg
mov
cmc
sbb
lock
add
push
adc
repnz
mov
cmp
or
adc
mov
addr16
xlat
repnz
pop
jbe
mov
jle
repz
xorl
and
jae
jmp
dec
div
xor
scas
test
and
mov
xchg
dec
push
pop
ljmp
test
add
jl
hlt
dec
push
out
fbld
lods
mov
addr16
mov
inc
aaa
insl
add
lds
and
loopne
lock
popa
ds
jmp
shlb
fdivrs
and
popa
decl
push
testb
dec
pop
push
pop
adc
inc
lods
clc
faddl
ret
movsb
mov
es
mov
jg
add
adc
lahf
xchg
rcll
inc
insb
mov
and
in
jge
pop
cmp
inc
je
fstpl
addr16
test
mov
dec
mov
daa
ss
sbb
ljmp
les
mov
and
ljmp
and
lods
jmp
lods
fs
mov
pop
adc
pop
fcomip
cmpb
or
out
aam
and
sub
daa
movsb
mov
fisubl
sti
pop
shrb
pushf
iret
leave
xchg
adc
and
push
bound
mov
sbb
inc
loop
out
mov
ss
jo,pn
lds
imul
xlat
in
push
fistps
in
adc
pop
jnp
ret
retw
aam
pushf
out
xchg
lods
xchg
push
dec
mov
xor
pop
or
push
cwtl
xchg
push
jne
gs
aas
jne
jmp
inc
cmpsb
lahf
push
repz
movsb
jno
sub
rcrl
cli
faddp
aas
pushf
jb
and
rorl
fcomip
xchg
and
add
inc
mov
pop
je
xchg
arpl
int3
or
mov
pop
negl
divl
hlt
scas
ss
shr
arpl
mov
mov
test
push
data16
bound
dec
outsl
mov
aas
stos
push
xlat
test
js
xchg
dec
dec
and
lret
shr
jb
mov
cmp
inc
dec
mov
sbb
popa
clc
push
idivb
sbb
adc
add
enter
mov
sub
add
enter
or
ss
scas
ds
cmp
and
ja
sub
fcmovnu
xchg
in
orl
test
jle
test
add
jno
leave
and
cli
inc
stos
scas
dec
lock
pop
mov
mov
ja
fsubrs
cmpsl
and
mov
daa
int3
jl
jbe
fwait
in
mov
sub
insb
lds
and
dec
or
lds
test
repz
fsts
int3
mov
xchg
dec
cmp
push
fiadds
xchg
cltd
imul
dec
add
jecxz
adc
sahf
adc
sti
xor
sbb
fld
sti
out
jbe
fs
stos
pop
insl
int3
jecxz
jmp
mov
cwtl
cmpsb
shlb
sbb
xchg
xchg
cld
repz
jp
pop
adc
mov
insb
outsb
popf
inc
add
ret
xor
sbb
incb
pop
mov
jnp
repz
mov
jge
push
mov
mov
test
clc
pusha
gs
xlat
addb
iret
push
mov
or
rorb
xchg
and
loop
cmpsl
and
pop
xor
pop
int3
cmpsl
sub
call
push
stc
fiaddl
jae
add
dec
mov
and
xor
lcall
lock
jns
inc
dec
ljmp
cld
lcall
das
data16
cmp
addl
xor
add
lret
jp
rorl
xchg
addl
mov
aaa
push
outsl
shr
jg
pop
mov
mov
dec
mov
xchg
xor
add
lock
mov
xor
inc
sbb
mov
cmpsb
xor
inc
add
sar
jp
xchg
pop
pop
cltd
push
mov
mov
test
out
pusha
movsl
xchg
das
cli
inc
cmpsl
jno,pt
decb
mov
enter
xlat
mov
loope
hlt
arpl
or
out
push
xor
push
cltd
popa
shll
adc
test
pop
sub
jge
pop
loope
adc
stos
xchg
pop
int3
ror
mov
or
sarl
movsb
outsb
add
cmpsb
aas
mov
loop
dec
lods
xor
dec
mov
stc
jbe
or
xchg
dec
les
cltd
aam
fwait
sbb
dec
mov
stc
lods
jae
mov
lahf
outsl
inc
stos
lret
call
out
ja
adc
fimuls
add
xlat
js
roll
jo
in
and
lret
in
and
jl
insl
sbb
push
cmc
cmc
repnz
cmp
stos
xchg
mov
rolb
out
sbb
inc
xor
jmp
lcall
pop
out
sub
mov
pop
push
mov
pushf
dec
ljmp
push
push
int
out
movsb
or
sbb
mov
inc
imul
jmp
adc
sti
jecxz
mov
add
xor
pop
mov
and
inc
xor
inc
push
xchg
xor
jns
or
pusha
fmuls
lods
outsb
push
lcall
cmp
pop
jbe
push
aam
je
pop
insb
or
sub
push
in
mov
push
arpl
jl
hlt
jne
fcmove
cld
add
cmp
jnp
cmp
sub
out
cmp
stc
and
pop
hlt
clc
loopne
sahf
push
xchg
add
ja
jns
mov
outsl
pop
sbb
mov
jnp
je
ljmp
cmc
fs
repz
xchg
fstpl
out
stos
pop
cmp
inc
test
lret
pop
fwait
inc
adc
inc
cmp
pop
sbb
push
sbb
sub
rorb
mov
and
hlt
stos
mov
rclb
xor
outsb
cwtl
mov
mov
cwtl
clc
jl
dec
gs
iret
dec
ret
and
jno
and
subl
cmpsb
sub
mov
nop
outsl
or
repnz
jbe
mov
test
sbb
ljmp
cmp
or
sahf
lock
loop
aam
loop
aaa
sbb
test
lock
in
add
aaa
fmull
mov
cmp
fcoms
and
ss
xorl
sub
dec
outsl
stc
and
neg
aam
xor
lock
xlat
repnz
stc
sub
push
xor
pslld
iret
ret
push
icebp
test
lock
popf
xchg
mov
jp
and
cli
enter
jne
add
jo
loopne
adc
hlt
cmp
and
inc
add
sbb
inc
fnstenv
and
cmp
add
push
orb
inc
push
lret
inc
xchg
ffreep
shrb
mov
and
push
fisubrl
fidivrs
add
rolb
in
movsl
daa
notl
aas
loopne
or
cmp
jl
popf
add
mov
bound
lea
mov
mov
sahf
jo
das
test
and
dec
ja
out
sbb
popa
aas
adc
sbb
mov
leave
or
enter
inc
and
movsb
cltd
pop
lret
das
popf
daa
leave
or
push
lods
out
cmp
mov
loope
add
pop
pop
test
xor
cmpsb
ja
inc
jno
fdivs
fcmovnb
loope
jp
daa
add
rorb
ret
cmp
mov
out
jbe
mov
xor
pop
sbb
or
xlat
lret
add
xchg
rcrl
je
push
into
lahf
arpl
outsb
mov
dec
dec
jo
pop
ror
xlat
roll
pushf
rcrb
call
sbbl
test
jae
rolb
xchg
mov
gs
mov
and
fcoms
mov
push
jns
shl
xchg
adc
popf
adc
mov
aam
add
inc
test
mov
lcall
idiv
sub
sbb
stos
jne
mov
add
and
push
aas
sbb
jns
out
push
mov
mov
inc
xchg
ss
add
bound
imul
jo
and
pop
sub
mov
lods
enter
ss
rorl
loop
fsubl
xor
mov
mov
jmp
dec
or
cmp
mov
rolb
dec
jg
sub
int3
imul
mov
test
dec
push
out
mov
mov
mov
push
mov
scas
mov
cmc
lods
jg
sbbl
outsl
out
sub
jne
orb
mov
pop
adc
xchg
adc
ror
add
ljmp
and
das
mov
push
aaa
mov
sbb
sbb
mov
pop
push
fisubl
je
pop
addr16
mov
aas
pop
fsts
ret
repnz
mov
hlt
adc
or
push
aas
mov
pop
pusha
out
pop
adc
aas
and
dec
imull
mov
cmp
rolb
push
rcll
and
sub
inc
fldl
cmpsl
jl
and
fcomp
sbb
mov
ret
lret
pusha
mov
add
aas
mov
jo
pop
push
test
je
and
mov
js
les
mov
test
mov
jo
dec
adc
xor
dec
sub
pusha
pop
pop
jg
fsubrl
mov
neg
call
imul
xchg
fwait
movl
fdiv
cmc
cmpsb
pop
mov
pop
inc
lcall
mov
jae
loop
lret
insb
popa
lcall
pop
xorb
sub
scas
das
jbe
ds
std
jb
sub
faddl
jbe
jmp
out
adc
add
push
mov
mov
and
sub
sub
add
clc
mov
imul
jge
xchg
js
ss
mov
dec
mov
sbb
jge
pop
stos
mov
sbb
cli
jecxz
inc
imul
sahf
add
cmp
mov
xor
addr16
cmc
xor
pushf
cmpsl
in
icebp
dec
xor
fsts
sub
adc
and
enter
in
xor
xor
les
jl
cmp
std
mov
movsl
outsl
in
faddl
adc
mov
lods
xor
lret
in
es
mov
in
getsec
inc
bound
hlt
les
pop
lods
and
js
fidivs
sbb
or
sub
push
fcomip
aas
pop
insl
mov
or
cwtl
jo
and
cmp
test
fdivrl
out
and
mov
jmp
jmp
inc
out
push
imulb
lret
cld
fldcw
mov
and
mov
add
jo
adc
add
lds
mov
test
repz
es
leave
push
stos
xor
push
ljmp
mov
test
andl
testb
popa
lcall
popf
dec
xchg
out
mov
pop
jbe
scas
and
adc
cmpsb
in
jp
push
lods
jo
pop
cld
fs
imul
in
sbb
insb
add
outsl
js
or
orl
ss
mov
xor
bound
xchg
sbb
je
daa
pop
jns
xchg
mov
rolb
sub
push
in
pop
out
cmpsl
jne
and
rclb
repnz
sub
scas
push
subl
outsl
cwtl
mov
stos
mov
iret
push
mov
mov
inc
mov
push
xor
in
popa
jmp
sbb
xchg
xlat
push
jmp
cmpsl
push
fsubrp
jb
adc
mov
fstl
insl
jmp
mov
stos
movnti
cmp
sub
js
loopne
push
je
dec
jg
inc
dec
add
xor
dec
arpl
xchg
push
mov
mov
lock
cmp
stos
mov
mov
xchg
fwait
dec
sbb
les
test
insl
and
mov
mov
es
movsl
lret
xorb
lods
xor
incl
loop
out
cmp
ja
movsb
mov
sbb
imul
das
sbb
jg
popa
leave
mov
mov
les
sbb
push
or
dec
mov
das
mov
test
cmc
inc
sti
sub
cs
push
push
xor
sub
js
jecxz
arpl
insl
fstps
and
mov
or
push
out
xor
push
mov
jmp
out
jmp
mov
daa
mov
fneni(8087
out
mov
cmp
out
jae
cmpl
in
subl
xchg
fldt
and
push
mov
push
fsubl
out
push
sbb
adc
pop
push
lretw
aam
std
shll
test
testb
adc
into
push
mov
dec
lahf
mov
cmp
clc
or
in
sbb
jne
inc
popa
mov
ss
or
frstor
jle
sahf
mov
in
daa
outsb
xchg
push
pushf
outsb
sub
lds
mov
and
sub
sti
jnp
and
xchg
push
movsl
push
stc
xchg
push
popf
adc
xor
xchg
cmp
jns
add
enter
std
dec
mov
out
jp
cmpsb
dec
push
sub
push
push
repnz
mov
pop
sbb
sub
add
xor
lock
push
sahf
mov
cmp
add
rorl
inc
sti
mov
arpl
rorl
mov
mov
leave
cmp
push
gs
jnp
ss
xor
mov
pop
and
cld
fs
adc
mov
mov
out
push
jle
xchg
cmp
mov
dec
mov
aas
mov
loop
cmc
loopne
in
dec
inc
pop
xchg
inc
andb
loopne
add
fidivs
mov
fsts
mov
mov
pop
mov
and
popf
dec
pushf
jp
mov
add
push
rol
out
lods
xor
pop
mov
mov
mov
xchg
fnstsw
pcmpgtd
jp
mov
into
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
adc
sti
dec
dec
push
jge
or
jp
pop
pop
pushf
outsb
outsb
and
sbb
incl
mov
cmc
and
lock
cwtl
and
xchg
pop
rclb
pop
arpl
test
enter
mov
jbe
jns
test
mov
jnp
sub
mov
jmp
pop
pop
sbb
push
decb
rclb
xchg
outsb
push
scas
mov
int
or
jmp
add
aam
sbb
lret
xor
fs
mov
jg
test
and
pmulhuw
xor
out
sub
jnp
cs
mov
rcl
pop
mov
jae
mov
add
mov
sbb
or
mov
rclb
add
xchg
adc
rcrl
sbb
xlat
fcom
inc
lods
fimull
call
push
aad
lahf
cmpsb
sbb
cs
cs
lods
pop
in
repnz
jo
out
cli
adc
jge
imul
jp
addl
mov
lods
push
jp
stc
mov
in
cmp
in
mov
shrb
icebp
pop
dec
sub
roll
mov
arpl
int
popa
jecxz
cmp
mov
aad
adc
pop
out
push
add
cmpsb
xor
andl
int
nop
sbb
jp
mov
loope
cld
adc
int
jns
adc
mov
iret
push
add
push
cld
mov
xor
inc
xchg
and
imul
mov
jle
jmp
fdivl
pusha
into
aas
push
or
ficomps
popa
lahf
cli
sub
daa
aaa
sahf
shrl
ret
ret
fstp
scas
js
xchg
cld
lock
mov
add
jae
mov
test
lcall
adc
dec
jecxz
xchg
pop
xor
or
sbb
or
adc
fwait
scas
sahf
cs
hlt
and
test
aad
int
fiaddl
in
dec
fidivs
inc
or
and
popa
scas
cmp
repnz
inc
scas
adc
ret
cmp
mov
rclb
jne
stos
test
jp
mov
lret
cwtl
insl
loopne
xchg
add
insl
mov
and
inc
cltd
lea
jo
scas
and
adc
xchg
sub
les
les
xchg
dec
lea
pop
pop
inc
out
pop
push
mull
mov
fsubrs
mov
push
popf
dec
popa
add
js
mov
pop
ret
jp
push
ja
js
mov
push
repz
or
enter
sbb
mov
or
fidivrs
movsl
pop
xor
stc
jae
mov
push
jnp
popf
aaa
xor
sub
es
cmp
pusha
or
aam
sarl
fwait
aad
jl
push
jae
clc
mov
dec
and
cld
mov
jo
movsl
xlat
popa
outsl
mov
pop
in
adc
gs
adc
mov
and
and
sbb
stos
mov
add
aas
xchg
jp
jno
bound
push
rorl
mov
daa
out
pop
mov
fildl
mov
sbb
fsubrs
or
sub
sbb
xchg
jne
lods
inc
xor
sti
outsb
gs
jp
jb
in
clc
out
in
std
sbb
les
sbb
sahf
int3
xchg
pop
ja
jno
pop
jae
xor
fisttpll
jne
push
std
jns
es
stc
cmpsb
add
jno
lods
popa
lret
or
aad
xor
cwtl
push
mov
insl
out
std
or
push
adc
in
sbb
loope
xor
ficoms
stc
push
push
mov
and
xchg
hlt
jns
sub
cmp
mov
mov
jno
mov
or
andb
sbb
xrelease
add
mov
ret
pop
push
test
and
rcr
ja
jge
mov
xor
and
test
es
fsubl
ja
pop
add
mov
inc
cmp
into
and
jmp
xchg
inc
xor
mov
push
jp
sbb
mov
cmpb
js
fidivs
push
enter
pop
jno
and
jnp
push
gs
iret
xor
jge
jl
mov
loopne
popa
cmc
test
sahf
aaa
mov
loope
lret
scas
in
inc
sbb
xchg
jge
push
stos
xchg
std
fildl
popa
loopne
push
xor
pop
movsl
fsubrs
adc
lods
push
movsl
push
and
movsl
pop
fbld
adc
mov
mov
mov
in
push
or
icebp
xchg
jb
out
cli
and
lcall
sbb
mov
scas
mov
lret
pop
and
out
test
xor
insb
add
and
or
gs
in
outsl
mov
mov
lahf
mov
push
rclb
in
xor
mov
daa
xor
leave
lods
std
loopne
divb
data16
xlat
xor
test
dec
mov
inc
sub
dec
in
loop,pn
push
imul
loope
dec
out
hlt
mov
fimuls
enter
arpl
test
mov
das
dec
mov
mov
mov
shlb
adc
sub
jg
clc
cs
repnz
jl
dec
cmp
js
pop
adc
int3
gs
ficoms
pop
cmpsl
pop
aaa
sub
lahf
mov
sbb
inc
das
or
jb
das
pop
dec
cmpsb
nop
jo
xchg
mov
je
xchg
mov
jae
mov
adc
mov
mov
push
repnz
test
inc
dec
push
xchg
xchg
jbe
fwait
cmpsb
ficoms
xor
xchg
repz
sbb
cmp
mov
loope
jp
pushf
cmp
cmp
sahf
cmp
insl
push
loopne
dec
andb
mul
sbb
incb
adcb
jo
shlb
push
call
addr16
cmpsl
cmp
push
or
aam
test
lcall
and
and
ret
inc
cmp
and
mov
adc
je
insb
mov
sbb
inc
popf
sub
cmp
sbb
mov
es
jge
mov
adc
or
cmpsl
jl
jne,pt
scas
cwtl
mov
inc
addl
repz
fiadds
pop
jge
in
xor
xor
das
in
stc
out
mov
jno
leave
ljmp
mov
pop
adc
cwtl
in
pop
dec
sar
out
xchg
mov
xor
popf
xchg
push
iret
nop
pop
in
pop
rolb
mov
sarl
xchg
cltd
cmc
or
jne
mov
in
bound
mov
lods
or
push
jb
mov
out
pop
jle
loop
xchg
adc
pop
dec
xchg
test
mov
out
or
lods
lea
lods
stos
and
loop
xchg
clc
mov
pop
mov
in
jmp
pop
ja
cmc
mov
or
xchg
insl
mov
sbb
push
dec
adc
in
dec
loope
pop
push
inc
and
sbb
fldl
cmp
mov
and
jns
cmpsb
cmpsb
cmpsl
xchg
addl
ret
mov
ffree
clc
pop
cmpb
add
in
dec
bound
sbb
mov
shr
lret
movsb
pop
lds
add
dec
sub
sarl
sbb
cmp
xor
mov
leave
cmpsl
icebp
add
lea
mov
call
mov
movsl
pop
cwtl
mov
inc
xchg
enter
mov
jnp
dec
mov
mov
ljmp
mov
shlb
pop
aam
iret
cmp
push
dec
into
faddl
test
jne
adc
sub
sub
js
loopne
ljmp
xchg
xchg
loop
pop
push
mov
imul
mov
xor
and
in
push
xor
sbb
xorl
movsl
testl
lods
dec
xchg
sbb
pop
rorl
inc
mov
jle
stos
roll
dec
jne
daa
jb
out
pop
jno
add
insl
mov
aam
in
dec
xacquire
inc
lea
push
jle
sahf
popf
andl
shll
sbb
mov
lret
pop
test
insl
mov
mov
adc
loope
daa
add
stos
lock
xchg
repnz
sahf
add
pop
mov
js
dec
ficoms
fdivl
sahf
lock
sub
mov
push
inc
ret
fsubrs
jl
sbb
push
gs
mov
mov
mov
inc
sbbb
jae
je
cld
sub
nop
push
jg
mov
je
nop
sbb
jp
in
jecxz
dec
fidivs
popf
insb
mov
push
cmp
pop
loop
and
push
xchg
ret
cmp
push
pop
inc
mov
push
jp
jo
xchg
push
sub
negb
or
cmpsb
cli
or
jo
aad
fadd
sub
dec
stc
mov
in
sub
jbe
in
dec
push
add
or
mov
add
movl
mov
mov
repz
cmp
mov
cltd
leave
dec
ljmp
outsl
aaa
add
outsl
ror
or
jmp
cmp
adc
jle
mov
cmp
mov
jp
mov
fsts
mov
xor
in
jle
test
lds
xor
cmp
add
in
xor
xchg
xchg
jno
mov
xor
in
mov
jg
xchg
shll
test
int3
jne
addr16
adc
and
adc
lea
xor
out
mov
icebp
jge
aam
cmpsl
pop
jb
mov
ror
adc
je
out
cmp
and
xchg
ds
out
xlat
or
or
xor
jno
enter
movb
mov
sub
and
add
stc
cmp
test
popf
fsubr
dec
insl
mov
dec
and
push
push
cmc
or
popl
inc
sbb
push
out
sbb
inc
imul
adc
and
push
add
lea
call
cmp
dec
popa
and
mov
call
arpl
push
xor
mov
orl
xor
mov
dec
sbb
nop
loope
clc
sub
sbbb
cmpsl
in
jb
push
sarl
sbb
in
mov
lods
loope
xor
sbb
test
daa
mov
outsl
in
sub
inc
cld
mov
out
push
jb
mov
mov
push
fstpt
loop
ss
dec
subl
insl
inc
call
mov
fadd
into
cmp
pop
mov
jmp
xchg
dec
add
xchg
aad
loope
sub
mov
and
out
bound
adc
or
sub
mov
cs
shlb
xlat
arpl
movsl
jbe
mov
pushf
xchg
insb
lcall
push
add
xor
jns
xor
cmpsl
pop
jl
and
dec
xchg
or
shrb
jp
and
movsb
mov
push
int
or
adc
jl
daa
repz
cltd
fidivs
and
jae
adc
enter
xchg
sub
arpl
mov
movsb
fldt
cmp
or
jbe
je
jno
jmp
xchg
je
testl
inc
adc
dec
pop
pop
mov
std
or
dec
ret
dec
mov
adc
cmpsb
push
enter
arpl
mov
xchg
out
outsb
sbb
call
jo
fdivrl
outsl
xlat
mov
adc
iret
fadd
and
sarb
in
xlat
cltd
sub
sub
pop
pushf
pop
lret
sbb
popf
push
xchg
cmp
or
movsb
cmp
mov
jle
mov
outsl
rclb
pop
pop
insb
loope
dec
in
inc
shll
in
loop
je
cmp
xlat
clc
and
imul
out
hlt
out
mov
fwait
pop
sbb
xorl
jg
pusha
roll
lahf
inc
or
mov
xchg
sub
push
push
fcmovu
or
ja
push
xchg
xchg
clc
or
pop
imul
xor
and
jbe
jg
ljmp
outsb
into
add
xor
mov
sub
and
sub
adcl
aad
jne
ljmp
xor
rcrl
sbb
nop
scas
mov
gs
cli
push
push
or
cmp
dec
in
data16
jbe
loope
fnstcw
xchg
cmp
sbb
dec
jnp
inc
insl
test
pop
push
les
mov
pop
imul
stc
cmpsl
pop
cs
or
lods
ja
mov
mov
mov
dec
in
or
push
xchg
pop
cmp
pop
jae
xor
iret
sub
testb
dec
jo
aas
add
push
mov
cmpb
movsb
or
cmp
aas
sbb
cmp
inc
lock
imul
mov
js
lock
push
jge
pop
testl
cmpsb
adc
loop
add
or
xchg
push
and
xchg
xchg
aam
in
fnstenv
push
cmpsl
push
test
pop
mov
mov
shll
mov
lock
shll
jo
add
lahf
call
sub
add
fsubr
mov
push
int3
pop
add
sarb
mov
inc
clc
adc
dec
loope
sub
cmp
stc
cmp
iret
arpl
or
mov
jo
mov
or
ss
fdivl
pushf
mov
mov
in
cmp
iret
inc
fsubs
lret
mov
adc
fnstenv
cld
cmp
push
enter
hlt
or
movsb
pop
lcall
ljmp
ja
cltd
push
jmp
scas
std
push
xor
sbb
or
inc
insb
fisubl
andb
je
repnz
lret
arpl
subb
testb
push
sbb
insl
adc
pushf
imul
sub
andb
dec
shrl
jg
andb
xchg
insb
xchg
mov
xchg
dec
sbb
outsb
add
leave
mov
pop
add
sbbl
mov
xchg
mov
push
leave
ds
xchg
push
gs
incb
or
mov
jmp
clc
dec
outsl
outsl
mov
jo
jmp
call
cmp
iret
inc
jp
mov
scas
aad
insb
inc
nop
and
mov
imulb
stc
mov
pop
dec
xor
inc
leave
cmp
sub
mov
adc
xchg
or
subb
ss
xor
icebp
cmc
jo
pop
aam
cmp
shrb
mov
adc
xchg
pushw
dec
push
mov
pushf
cmp
cmp
jne
dec
idiv
test
cmpsl
add
stos
mov
pop
inc
mov
filds
inc
mov
or
loop
xor
cmp
sub
push
pop
inc
dec
lods
mov
repz
push
xchg
subl
inc
sub
ljmp
shrl
sbbl
cmpsl
ret
adc
cmp
insl
cmovae
pop
pop
je
popa
adc
std
stos
cmpsb
and
mov
fs
std
add
xchg
fstpl
mov
ja
test
mov
sbb
adc
dec
ss
in
enter
mov
iret
push
gs
cmpsl
mov
xchg
or
or
sti
fistl
sarl
decb
arpl
rorl
xchg
pushf
add
dec
sub
adc
dec
das
cltd
clc
inc
in
lret
and
pop
int3
mov
std
or
fincstp
les
cmc
sub
in
jb
push
jo
sbb
jmp
mov
mov
xchg
pop
stos
xlat
movsl
cli
pop
rcl
ss
add
dec
pop
mov
or
aas
rclb
mov
xchg
sub
mov
mov
push
mov
out
and
call
xchg
std
sbbb
inc
sub
mov
cmp
fnstcw
ds
add
insl
inc
jo
jno
fsts
jle
mov
and
out
and
out
jge
mov
in
jo
pop
inc
mov
in
cmp
cvtps2dq
cmpsb
test
fwait
data16
and
ficompl
into
or
es
mov
movsb
loope
dec
sti
roll
jmp
fwait
testl
lret
lods
imul
mov
aas
dec
rcll
js
sub
push
cmp
fldt
cmp
xchg
sbb
enter
jge
imull
clc
pop
les
mov
fisubs
adc
pushl
addr16
ds
fsubs
adcb
dec
mov
bound
sbb
imul
call
movsl
xchg
sub
imul
aam
xchg
sbb
aaa
xchg
mov
mov
lock
xor
dec
xor
scas
xchg
xor
hlt
inc
pushf
shlb
pop
pushf
push
jge
inc
or
push
or
jle
fidivrs
pop
inc
scas
mov
cmp
sarb
xor
loope
cwtl
mull
jb
xor
jb
xchg
sbb
dec
jge
aad
sbb
and
les
enter
orb
icebp
dec
push
shll
aaa
in
notb
and
adc
xor
mov
fucomp
ljmp
movsb
jmp
dec
mov
inc
es
scas
push
repnz
hlt
xchg
in
add
and
and
fiadds
jl
and
movsl
push
add
leave
out
push
mov
mov
and
shll
lock
jae
fisttps
arpl
and
push
arpl
push
push
xor
jge
es
pop
ja
in
ret
repz
xchg
inc
mov
aad
adc
or
lret
mov
ret
in
xor
push
add
push
dec
je
mov
imul
ret
outsb
test
sub
adc
je
mov
push
das
pop
pop
ret
fsubrp
mov
nop
pop
jp
lcall
ljmp
idivb
and
jns
jb
loope
das
mov
push
cmp
push
cltd
frstor
mov
aaa
inc
in
sub
dec
add
out
lds
and
mov
jb
adc
cld
inc
adc
ds
and
das
adc
aas
and
xchg
jl
das
pop
jle
out
xor
dec
fnstenv
jnp
rclb
lds
jbe
pop
hlt
scas
outsl
cli
sarl
and
mov
dec
mov
mov
mov
shll
xchg
fcoml
arpl
sub
fwait
out
xor
hlt
xchg
push
xor
fidivl
enter
mov
fcoml
mov
loop
or
jne
xlat
nop
inc
ja
push
imul
push
xor
pop
inc
nop
inc
xlat
arpl
pusha
cmp
jge
cmp
jae
mov
xorb
or
fdivr
mov
stos
popf
pop
jge
push
das
pop
mov
add
aad
test
jno
ss
adc
andl
stos
mov
xor
dec
push
stc
je
and
imul
mov
jl
sbb
pop
inc
jns
lods
dec
lods
jae
sbb
adc
xor
and
fldenv
fwait
xchg
sub
iret
mov
mov
xor
das
sti
or
incl
test
or
scas
loope
addr16
enter
mov
xchg
in
dec
outsb
shlb
pop
xchg
cmp
les
out
inc
dec
push
stc
sbb
mov
mov
adc
adc
test
xor
mov
mov
mov
pop
push
sub
lahf
sti
ret
lds
fnstsw
xchg
and
ret
leave
fcomp
xor
aas
gs
ret
inc
push
pop
mov
xor
inc
dec
andb
out
or
xor
xchg
popa
xchg
into
lcall
movsl
nop
push
andl
movsb
cmp
mov
jbe
enter
shll
push
sub
lods
dec
dec
insl
movaps
int
jmp
into
clc
das
ret
or
jp
push
cmp
or
inc
lock
pop
scas
cmc
int3
nop
aaa
xchg
pushf
nop
adc
sub
fmul
loop
xchg
add
cmp
mov
mov
push
aad
cmpsb
xor
and
enter
mov
sub
mov
push
cmp
mov
cmp
int3
fcoms
outsl
outsl
inc
popf
int3
shlb
iret
push
in
and
mov
mov
mov
sbb
sbb
jl
loop
or
or
scas
dec
xchg
cld
xor
pop
mov
out
dec
mov
pop
outsl
mov
int
out
cmc
xor
dec
add
cwtl
arpl
popa
jns
pop
vmovss
imul
fidivrl
mov
mov
push
add
dec
aam
and
add
and
or
lods
mov
xchg
mov
mov
xchg
add
hlt
push
inc
adc
push
fistps
sbbb
adc
pop
mov
in
xchg
je
push
mov
aad
shll
roll
dec
subb
into
shl
and
pop
aas
pop
dec
cmp
outsl
sub
add
sbb
cmp
imul
aas
pop
xor
cwtl
mov
sub
dec
fcmovnb
lods
ret
insb
push
movsb
repz
rorl
ja
push
outsl
pop
add
jmp
mov
insb
ds
fidivl
pop
ret
movsb
jae
dec
in
aam
imul
frndint
aad
jns
ds
es
fldl
push
ja
or
jle
inc
or
jle
sbb
lds
push
sbb
pop
lods
roll
fdiv
rcrb
inc
push
mov
int3
fistl
mov
das
outsb
xchg
jl
lods
fisubs
fimull
sub
mov
and
rol
aam
xchg
jb
addr16
and
xor
xor
pusha
dec
pop
jmp
push
mov
cmp
arpl
adc
mov
add
shlb
push
test
dec
add
fsts
xor
jbe
pop
popa
in
xchg
and
push
pop
lock
jmp
xor
and
pop
or
lods
mov
aaa
ds
push
popf
sbb
gs
adc
dec
pop
mov
iret
aam
jge
outsl
ret
and
fsubrp
inc
or
add
sub
cmpsl
je
mov
jnp
outsb
imul
lahf
aas
mov
dec
inc
jae
cs
aam
sbb
add
hlt
movsb
or
inc
push
ja
divl
shlb
cmp
or
out
fdivrs
icebp
xchg
mov
addr16
push
xor
sub
inc
dec
ss
dec
in
xor
int
or
mov
push
xor
mov
lds
xor
cmc
repz
and
pop
aam
scas
rcrb
xor
mov
sti
or
inc
stc
outsl
pop
mov
repnz
xchg
bnd
push
push
pop
push
in
mov
sbb
xchg
daa
add
mov
sub
pushf
add
sahf
or
stos
iret
push
leave
and
fistl
push
inc
sbb
loopne
cmp
into
mov
mov
mov
mov
in
push
mov
in
mov
adc
sub
gs
adc
mov
pop
lock
movb
fsubr
jmp
cmpb
fnsave
push
je
push
gs
ret
jl
sbb
inc
jae
sbb
cmp
adc
std
outsl
rcrb
stos
dec
push
adc
aam
lahf
pop
pop
mov
push
cli
push
fidivl
mov
add
lds
lods
xchg
enter
adc
aad
je
fwait
clc
xor
cwtl
xchg
inc
scas
insl
inc
mov
ss
mov
in
mov
shl
dec
pop
dec
xor
lods
les
add
xor
repnz
push
jb
mov
shl
fcomp
xchg
xor
dec
xchg
xchg
adc
cmp
mov
pop
loop
pop
xor
and
mov
cmpl
out
cmpb
pop
sub
mov
adc
adc
add
lods
fidivrl
mov
mov
pop
repz
stos
dec
cmp
aad
lods
and
nop
lds
lds
xorb
jns
int3
cmpsl
ss
aas
and
fsubrl
fcomip
popf
std
xchg
push
xchg
movsb
push
jmp
dec
lea
insl
xchg
call
ja
push
mov
in
xchg
fldt
outsl
lcall
jl
sti
mov
mov
loope
in
repnz
pop
aas
sarb
jle
pop
mov
cmpsl
aas
sbb
addl
ljmp
xor
push
xor
push
imul
call
xchg
mov
movsb
sahf
mov
lods
xchg
insb
mov
inc
push
stc
xchg
lock
xchg
sub
push
xor
rcll
lds
sub
insl
inc
scas
and
push
call
pop
bound
bound
std
jno
add
clc
push
data16
insl
sub
inc
clc
aam
xor
std
aaa
push
jp
decb
mov
jb
cmpsl
jp
das
loopne
sarl
stos
lret
push
insb
lock
xor
sub
mov
roll
push
fldl
mov
push
sbb
das
ss
sub
push
jns
push
sub
jno
pop
fisttpll
push
mov
les
negb
pop
or
dec
std
jbe
stos
sbb
sub
mov
jae
data16
stos
sbb
sub
fnstenv
jle
add
xor
cs
xor
push
mov
aad
clc
push
mov
lods
divl
sbb
xchg
xchg
mov
pop
lcall
xor
pop
dec
sarb
int
mov
add
xor
int
xchg
pop
sub
insb
loop
insb
ss
icebp
sub
push
xor
push
cmp
xchg
cmp
and
int3
adc
jl
add
movsb
xchg
stos
and
pop
in
pop
cs
iret
pop
and
shl
loope
pop
iret
pop
in
dec
add
outsl
mov
js
mov
dec
in
mov
add
ret
in
mov
xor
out
push
dec
xchg
push
xchg
movsb
adc
fists
add
cli
push
adc
mov
mov
push
mov
pop
mov
mov
leave
pop
call
add
inc
mov
lock
mov
sub
shrb
push
mov
and
aas
fnstcw
cmp
mov
jae
adc
sti
pop
push
jae
and
pop
adc
hlt
in
movsb
push
sahf
add
ss
push
adc
aaa
and
mov
fs
sbb
rcrl
inc
mov
lahf
push
ja
jle
xchg
inc
dec
jge
mov
jno
sbb
sbb
stos
mov
insb
in
xor
je
aas
jl
jne
xor
sub
adc
test
cli
or
add
mov
faddl
inc
aaa
dec
jle
adc
call
into
jle
adc
and
rorl
and
push
xchg
addr16
xor
aas
cmpsb
mov
rclb
insl
cmp
cmpsl
push
inc
stos
cmc
sub
dec
test
mov
xchg
sub
xchg
push
jecxz
and
cmp
bound
cmc
sbb
jecxz
fstl
cmp
insb
inc
pop
hlt
dec
arpl
stc
clc
popf
sahf
ss
std
mov
jle
imul
pusha
mov
mov
aam
imul
movsb
ljmp
pusha
sarl
xchg
jg
dec
push
mov
movsl
je
or
jp
mov
lret
and
sub
push
iret
ja
inc
gs
in
cwtl
pop
jecxz
or
cmp
xor
cmp
sbb
mov
subb
xchg
rclb
xor
scas
es
sub
sub
sub
jns
push
inc
mov
inc
loop
mov
inc
push
aaa
push
inc
pop
inc
mov
lods
lea
ds
inc
sbb
xchg
sbb
icebp
mov
xchg
out
lret
in
push
sbb
xor
cmp
and
fists
push
and
sub
hlt
lods
outsb
and
bound
lods
pop
jle
xchg
sub
pop
test
jp
idivl
sub
mov
lock
shll
test
sub
ret
ds
gs
jmp
int
add
add
add
xlat
lds
push
insb
push
ffree
adc
insl
push
aaa
ss
adc
stos
rol
icebp
arpl
inc
lret
inc
xlat
mov
add
or
mov
adc
mov
mov
and
scas
cmp
shlb
sub
and
and
mov
sub
push
jecxz
sbb
jne
add
lea
mov
mov
clc
test
in
jbe
mov
das
add
jmp
xchg
out
hlt
shll
push
sub
jecxz
lret
dec
insl
dec
fbld
test
xchg
xchg
les
unpcklps
jl
push
scas
jns
inc
js
xchg
fistpll
xor
insl
sarb
xor
sbb
xchg
lcall
loop
push
stos
lret
xchg
inc
mov
mov
outsb
sahf
lock
xchg
jns
mov
loope
xchg
insl
xlat
cmp
jge
jo
std
addl
outsl
ret
mov
das
lea
in
daa
das
mov
jle
cmp
sbb
mov
nop
and
dec
aaa
jecxz
adc
popf
repnz
xor
es
mov
push
sub
xchg
jns
cmpl
pop
xor
pop
mov
jo
cmp
scas
add
outsl
add
add
fidivrs
scas
popa
jns
in
icebp
push
cwtl
sbb
dec
sub
stos
mov
scas
dec
cmp
inc
int3
adc
jns
ret
and
movsb
negl
loopne
hlt
hlt
mov
pop
and
rol
aam
xor
nop
mov
and
jle
fistps
mov
std
inc
subl
ret
sbb
in
push
cwtl
xchg
out
fisubrl
lea
iret
push
jne
cwtl
flds
mov
add
cmpsl
xchg
imul
nop
movsl
rol
jbe
push
fwait
aad
xor
popf
fcomi
dec
sub
push
js
filds
incl
fwait
cmpsb
into
cmp
imul
pop
fldl
add
shl
push
jae
jl
lods
lock
push
shl
fwait
pusha
jg
icebp
in
xchg
and
rcrl
pop
pop
push
dec
jecxz
fs
test
or
xchg
pop
cltd
in
cs
mov
lret
inc
pusha
clc
inc
push
aam
inc
aaa
inc
ljmp
lds
cli
pop
adc
and
xchg
lcall
push
push
mov
scas
sbb
clc
pop
roll
popf
aaa
leave
push
and
xor
lret
push
cmpsb
pop
xchg
fists
ud2
leave
dec
or
lea
add
out
bound
mov
in
xchg
icebp
adc
xchg
test
xchg
sub
mov
js
dec
fwait
sbb
leave
cmp
mov
movsl
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fldenv
mov
pop
fidivrs
jge
or
jp
xchg
aaa
fisubl
stc
lret
mov
push
inc
testb
or
sarb
ja
pop
mov
and
adc
push
pop
and
jl
loope
inc
loope
mov
shrl
and
inc
in
aas
sub
int
test
jl
std
test
out
loope
int
mov
outsb
push
enter
push
cmc
movsb
aam
push
scas
pop
sub
out
sub
adc
addr16
cmpsb
sub
push
pop
add
mov
push
js
iret
add
cs
mov
aaa
out
leave
jp
cli
xchg
or
xchg
das
imul
stos
or
in
call
pushf
rol
repz
push
xor
push
aad
xchg
ret
mov
sub
js
fisttpll
nop
sub
xor
sbb
fnstcw
or
mov
or
pop
jp
addl
leave
int3
mov
pop
xchg
pop
jmp
pop
out
stc
inc
inc
add
add
lods
mov
loopne
adc
ljmp
nop
js
cmpsl
mov
test
add
aas
sbb
sti
ret
pushl
cli
ror
lret
inc
jge
cld
nop
and
cmp
lahf
rcl
push
repz
xchg
stos
dec
movl
test
sub
dec
mov
mov
xchg
inc
negb
std
sub
jmp
adcb
cmp
inc
pop
sub
pop
aas
xor
addr16
rcll
sbb
inc
dec
push
or
add
jl
sahf
bound
cmp
add
ds
ret
enter
cld
mov
mov
mov
enter
les
pop
insb
scas
pop
hlt
neg
xchg
bnd
dec
pop
and
mov
js
out
mov
cmpsb
jns
in
add
outsl
pop
pop
xor
out
push
jae
es
jp
xchg
popa
aaa
mov
cmp
shll
cmp
int
push
jo
insl
mov
push
or
cmp
pop
jns
cmp
lods
xchg
lods
mov
cmpsb
leave
lret
xor
xadd
call
ror
mov
pop
dec
sbb
xchg
shlb
popa
outsb
arpl
cld
clc
mov
or
sub
out
icebp
pop
sbb
add
daa
sub
outsl
ss
and
mov
mov
out
mov
push
popf
ja
cmp
jecxz
or
fisubrs
pop
mov
ret
daa
sub
dec
xor
clc
add
pop
jmp
cmp
jbe
or
rorb
jp
adc
hlt
add
push
aas
sub
xor
push
xchg
mov
or
lcall
fidivrl
pop
mov
xchg
dec
in
dec
icebp
adc
lea
adc
stos
outsb
mov
fisubl
push
push
and
loopne
imul
fwait
or
mov
roll
xchg
js
cmp
sub
jnp
adc
stos
ja
sti
mov
xchg
fists
in
cwtl
stc
stc
fs
adc
arpl
push
addr16
xor
in
subb
aam
bound
sbb
stc
jmp
cltd
out
cld
jl
adc
repnz
mov
shll
pop
push
mov
cmp
or
mov
sbb
out
lods
dec
jmp
push
nop
jl
daa
push
push
out
mov
mov
adc
lds
mov
inc
adc
insl
xor
imull
jg
jl
fadds
out
push
push
cmc
aaa
sti
outsb
test
lods
sub
clc
shlb
pop
movb
icebp
frstor
pusha
inc
stc
cmp
insb
jns
mov
andl
and
pop
push
insl
js
mov
shl
mov
ds
mov
adc
pop
fbld
jecxz
cmp
mov
jae
xor
or
mov
rcrb
ret
stos
and
sahf
mov
mov
popa
fimull
sub
push
cmp
je
cmpsb
ret
cmp
and
adc
cmpl
push
lods
loop
and
xchg
lcall
jbe
out
dec
lret
xchg
dec
push
mov
pop
add
xor
or
test
sub
push
cld
mov
cmpsl
out
cmp
aad
repnz
dec
adc
lahf
sbb
push
out
lea
shll
in
ljmp
negl
flds
xor
xchg
add
fwait
push
and
cmpsb
dec
cmp
add
jle
adc
xor
out
sbb
xchg
dec
scas
dec
mov
js
jmp
fistl
imul
aaa
mov
pop
sbb
repnz
daa
pop
lds
mov
jno
or
scas
jbe
sbbb
mov
mov
pop
icebp
dec
jbe
ja
imul
repz
sbb
les
dec
mov
ret
out
mov
hlt
cmp
push
push
lock
adc
mov
in
fisubs
fnsave
arpl
xchg
ss
clc
cmp
cltd
test
jge
inc
lcall
cmp
xor
in
adc
dec
jle
xlat
mov
ret
sbb
test
push
mov
test
push
das
dec
lret
mov
lods
push
mov
lds
and
inc
in
stos
mov
call
scas
mov
mov
pop
addb
or
stc
aad
push
aaa
mov
mov
mov
add
push
mov
iret
dec
inc
int3
icebp
mov
mov
or
mov
xchg
loopne
imul
je
and
pop
aam
jmp
leave
jno
xor
repnz
aam
dec
sub
adc
roll
push
out
xor
mov
inc
mov
fisttps
xchg
aas
es
mov
ja
in
sub
or
push
jg
push
loop
push
rol
fisubl
inc
sbb
mov
xchg
out
jns
xor
mov
ja
sub
aam
enter
xor
scas
pop
popa
jo
mov
mov
and
push
stc
lods
insl
ret
outsl
loop
jne
pop
arpl
fldl2e
into
pushf
notb
or
test
xor
ret
icebp
dec
xchg
mov
cmp
es
loope
mov
fstpl
pop
and
lods
rolb
cld
sbb
push
push
xchg
mov
xchg
sti
push
loope
insl
lea
pop
leave
mov
notl
test
push
jle
fs
in
popf
mov
push
sbb
stc
mov
mov
xor
cmpsb
test
in
and
sub
mov
daa
mov
adc
std
insl
inc
ja
ljmp
push
jg
in
popa
pop
inc
ljmp
das
loop
xchg
movsb
add
mov
jp
push
and
notl
in
leave
mov
cmc
push
sub
mov
dec
stc
sbb
cmpsl
fmul
loope
sub
cli
ss
mov
or
clc
mov
push
and
lahf
fbstp
test
jle
int3
test
xchg
insb
pop
js
les
fdivrs
cmc
jb
imull
xchg
cmp
pusha
jg
imul
or
outsl
inc
into
cmpsl
mov
out
sub
sub
and
mov
icebp
fldt
movsb
bnd
cmp
ljmp
fsubrs
push
xchg
stc
pop
into
dec
dec
jno
pop
mov
add
sti
inc
push
cs
repz
cltd
orl
push
sbb
sbb
cmpsl
mov
pop
popf
test
push
jno
inc
shlb
addr16
movsb
push
out
cmc
gs
push
adc
dec
dec
or
or
dec
stos
jne
lods
jle
int
gs
hlt
inc
pop
rcll
mov
add
das
out
ret
xchg
lea
pop
fiadds
decl
ja
inc
cmp
les
js
lret
call
lds
jg
mov
cs
mov
leave
adc
andl
pop
dec
sub
lcall
mov
daa
fs
es
arpl
mov
out
lcall
cmp
mov
and
imul
lea
adcl
xchg
jl
and
adc
fnsave
xor
jp
stos
lods
cmpsb
mov
das
test
outsb
sub
cmpsb
mov
out
ds
mov
add
shr
rcrl
ficoml
arpl
enter
aaa
pop
add
and
int3
inc
imul
push
pop
jp
sbb
in
dec
xchg
jecxz
push
cmp
cmp
pop
stos
mov
fsubp
xor
add
push
imul
dec
xchg
aad
ljmp
add
cmp
push
mov
inc
xor
lods
orl
ror
jae
bound
sub
icebp
addr16
pop
and
and
stos
pop
and
idivb
dec
clc
repz
subl
cmc
scas
aam
inc
lahf
adc
mov
dec
add
gs
ds
popf
clc
inc
mov
sbb
shrl
push
mov
in
push
jae
xchg
cld
cli
mov
repz
addr16
in
add
mov
lcall
mov
repnz
jno
push
gs
icebp
inc
repz
sub
lcall
in
push
mov
push
mov
mov
cmp
lcall
bound
mov
mov
fdivl
xchg
fisubrl
call
bound
cli
loope
fldln2
out
decb
je
adc
dec
inc
pushl
mov
mov
mov
in
xor
scas
sub
lock
and
jne
pop
and
addl
aad
inc
call
popf
jnp
xchg
sbb
mov
js
jmp
outsl
imul
ljmp
in
aaa
jl
mov
rolb
icebp
pop
xchg
pusha
nop
movsb
xchg
jp
sbb
mov
xor
pop
lods
inc
out
add
shll
add
sub
sub
mov
pop
mov
sub
jae
fbstp
addr16
xor
mov
icebp
fcom
cmpsb
adc
jo
mov
add
jno
pop
out
add
ljmp
push
lods
mov
popf
cmp
or
and
lea
or
es
ficoml
addr16
and
fcmovne
add
push
cmp
xchg
imul
gs
addb
das
add
nop
pop
or
sub
cwtl
hlt
dec
lahf
flds
and
push
out
jno
push
jne
dec
shrb
pop
daa
cmp
adc
ljmp
movb
enter
jb
dec
mov
or
mov
aad
push
inc
push
and
cld
cmc
pop
xor
ljmp
jns
or
sbb
sub
or
dec
or
jg
xor
adc
dec
sarb
outsl
inc
jns
push
mov
outsl
or
inc
sbb
push
adc
jno
push
int
adc
push
bound
fldt
jl
shlb
or
push
sub
adc
sub
push
mov
movl
xor
sub
mov
test
imul
test
stc
fiadds
ficomps
push
mov
stc
push
sub
mov
jbe
dec
add
mov
mov
xchg
xchg
and
movb
ja
push
xor
xchg
jle
xchg
xor
arpl
ficoml
mov
into
add
loop
out
xlat
ja
shrb
xchg
xor
fwait
adc
mov
movsb
mov
ror
fimuls
les
add
cs
jbe
mov
mov
outsb
jne
mov
cwtl
xlat
iret
sahf
dec
inc
sub
rolb
sub
fwait
ss
dec
mov
ficoms
orl
inc
fsubrs
adc
cli
out
aad
jg
outsl
push
sbb
and
mov
xchg
enter
or
dec
loopne
scas
movsb
fwait
iret
pop
xorb
cltd
test
and
fcom
sub
cmp
jne
fstps
xchg
movsl
pop
sbb
and
lods
decl
xchg
inc
je
dec
scas
mov
out
rcl
push
es
dec
testb
mov
and
popf
insb
adc
inc
sbb
xlat
decl
test
loope
call
xor
fwait
sbb
xchg
mov
push
dec
sbb
push
pop
fstl
rcr
fcmovu
pushf
push
lahf
fildl
inc
movsb
xchg
jle,pt
icebp
cmp
ds
orl
inc
push
mov
fmuls
mov
stos
rorb
mov
imul
dec
jbe
and
stos
push
hlt
sub
rorl
pop
xchg
lcall
push
and
lods
fs
xor
lods
xor
leave
stos
fdivrs
lret
pusha
and
hlt
cli
out
int3
adc
testb
aam
call
es
daa
jp
repnz
test
imul
addb
imul
leave
jbe
dec
dec
sub
cmp
pop
inc
push
outsl
movsb
lcall
test
test
adc
pop
ficompl
test
mov
test
mov
fldt
sbb
push
mov
jnp
cmpsb
pop
sbb
es
hlt
inc
insb
fwait
pop
popa
iret
stos
jl
mov
jbe
inc
dec
dec
test
inc
das
add
or
movsb
pop
mov
test
loopne
push
jb
sahf
call
mov
in
jmp
nop
in
push
lret
mov
sbb
std
std
cld
nop
mov
cs
popa
mov
pop
mov
test
sbb
xor
pop
cwtl
testl
fisubrl
int3
jmp
smsw
or
pop
xor
lds
mov
mov
in
aaa
add
fmull
adc
mov
mov
inc
pop
inc
hlt
adc
dec
loope
dec
xchg
xchg
sbb
cmp
pop
xor
stos
and
stos
mov
adc
pop
lret
and
sub
push
cwtl
stos
fs
mov
outsl
pop
mov
and
mov
std
lds
in
mov
and
xchg
in
shll
cwtl
or
or
sbb
fistpll
addr16
sbb
push
adc
push
jnp
in
gs
cmp
scas
popf
lock
mov
mov
test
popf
mov
int3
lcall
lods
sub
xchg
cmpsl
and
je
daa
jmp
mov
inc
and
push
adc
ret
bound
push
mov
pop
dec
pop
xchg
btc
test
inc
push
imul
sbb
xchg
lea
inc
bound
sub
inc
sbb
call
sub
mov
sahf
adc
xchg
lods
xchg
xor
xor
aaa
fldl
mov
rclb
and
out
mov
cmpsl
mov
out
push
stc
xor
mov
dec
push
ret
jge
jns
mov
pop
fbld
out
ret
and
dec
daa
sub
out
cmp
mov
cli
jns
ss
mov
cltd
mov
fs
movsb
aad
xor
push
loope
mov
push
push
std
fistpll
jne
mov
mov
or
inc
jb
cmp
cmp
sti
sarb
aas
shrl
bound
pushl
mov
inc
or
cld
or
sahf
test
lea
stos
xchg
test
test
shr
fld1
dec
add
xchg
cld
int3
jo
mov
flds
sbb
mov
or
shll
mov
popf
mov
testl
ret
test
mov
xchg
adc
mov
fcom
mov
sbb
iret
xlat
mov
insb
es
pop
shlb
pushf
mov
inc
in
jae
add
inc
cmpsb
fwait
cmp
leave
aam
push
orl
mov
out
lret
rorl
in
sbb
mov
rorb
sbb
xor
mov
jnp
inc
cmp
ja
dec
cli
add
and
cmp
popf
shlb
mov
lock
push
incb
cli
xlat
sahf
sarl
imul
dec
push
outsl
mov
xchg
dec
pop
test
mov
in
pop
jo
jno
xchg
inc
and
dec
loope
arpl
and
repz
fcompl
push
popa
mov
jl
cmp
dec
add
jle
movsb
mov
repnz
out
andl
inc
cmpl
xchg
mov
movsb
and
dec
int
pop
fs
dec
rolb
xlat
inc
les
vunpckhps
cli
mov
or
pop
xor
or
mov
mov
fldl
lds
ret
scas
xchg
sti
in
aas
jle
shl
and
jg
xor
xchg
in
hlt
insl
cwtl
push
adc
push
mov
loop
mov
mov
data16
xchg
in
loope
stos
fnstenv
xor
mov
in
popa
fisubrl
int3
ds
push
dec
enter
daa
sti
int
mov
or
dec
not
mov
sahf
jae
fs
xor
in
add
dec
pop
aam
add
mov
call
fiadds
nop
dec
in
cmp
rol
jg
fwait
divl
outsb
sub
xchg
test
movsb
push
pop
icebp
int3
adc
cmpsl
inc
out
mov
inc
jo
shll
cs
cmp
pop
pop
push
mov
and
jle
loopne
adc
or
test
adcl
jne
xchg
fs
fsub
lahf
outsl
mov
cmp
fildll
les
lahf
ds
mov
sarl
scas
inc
sbb
addr16
lret
lcall
push
push
mov
rorb
cmp
cmp
dec
stos
and
inc
jae
push
fsts
add
aam
in
pop
jo
cld
insb
sub
jecxz
mov
adc
mov
mov
mov
ret
xchg
xchg
and
fsubrs
pop
pop
push
push
jle
push
or
sub
andl
out
pop
push
inc
sub
rclb
mov
lds
and
pop
movsb
sbb
fcoml
mov
xor
push
mov
nop
data16
cmp
clc
pop
call
pop
dec
outsl
fcoml
fidivrl
loop
rcrl
mov
or
inc
out
or
xor
add
xchg
pop
daa
dec
mov
test
inc
lea
outsl
in
cmc
fs
push
fisttps
push
outsb
out
cmp
jg
ljmp
pop
push
mov
outsb
xchg
rclb
test
loopne
ljmp
jnp
pop
mov
xor
icebp
and
imul
stos
test
loopne
outsl
mov
pop
dec
sub
push
in
jns
shll
shll
or
mov
popa
mov
jecxz
or
sub
mov
roll
pop
mov
push
mov
xor
and
cmp
dec
cwtl
repnz
outsb
xchg
popf
push
js
cli
pop
add
cmp
jns
mov
lret
dec
mov
mov
xlat
pusha
adc
lahf
inc
push
mov
sarl
mov
gs
leave
mov
mov
addl
push
adc
add
jb
bound
shrb
pusha
not
inc
xchg
pop
fldcw
push
cmp
fcoml
stc
xor
cwtl
enter
negl
fs
sub
cs
pushf
dec
stc
pop
xchg
lds
loop
xchg
mov
jbe
sbb
out
xor
xlat
aam
ds
mov
mov
or
cwtl
mov
inc
push
shl
push
pop
je
adc
dec
std
mov
es
jmp
xor
adc
hlt
out
or
fwait
mov
hlt
fisttps
sbb
push
push
and
test
xchg
lcall
add
jl
es
mov
adc
push
push
mov
scas
lods
and
adc
mov
gs
scas
arpl
faddl
pop
call
sub
push
add
sbb
cmp
inc
and
xchg
and
adc
and
sahf
or
arpl
xor
lret
fldl
or
iret
int
sbb
dec
fwait
iret
repz
loopne
mov
movsl
pop
orb
mov
jo
xor
bound
fstps
les
cmpsb
or
scas
add
jmp
outsl
mov
xchg
es
xor
pop
xchg
scas
or
daa
inc
pop
std
cltd
xor
scas
shll
sbb
popf
pop
jg
cmp
in
insl
pop
sahf
rclb
iret
jo
xchg
addr16
lcall
adc
sahf
mov
cwtl
in
iret
cmp
mov
hlt
in
fwait
sar
lock
sbb
mov
and
dec
sbb
repz
bound
jmp
push
push
or
pop
cmc
adc
mov
shlb
bound
sub
mov
cs
aas
push
imul
movl
xor
mov
sarb
sub
lods
nop
movsl
imul
movsb
xchg
cli
adc
cwtl
call
cmp
inc
daa
pop
push
sub
jns
cmpsb
jbe
sub
into
cwtl
ds
aaa
adcb
pushf
push
in
add
insl
push
js
inc
pop
and
aad
bound
and
add
jecxz
add
or
out
fcomp
sbb
mov
int3
pushf
lcall
ficoml
xor
xor
popf
test
rol
add
ret
das
stc
mov
ja
sub
mov
fisubrs
push
js
push
inc
sbb
cmc
lods
dec
push
jg
jmp
outsb
push
and
add
push
mov
and
cli
jns
ljmp
dec
int
cmpsl
jae
cwtl
in
inc
sarl
ja
ds
outsl
jmp
aad
adc
ret
dec
stc
aam
fdivrp
es
jmp
je
cmpsb
ljmp
fidivl
and
jmp
cltd
bound
add
jns
xor
add
add
in
inc
inc
fwait
lea
stos
mov
jp
out
cmp
js
or
scas
stos
imul
pop
lcall
xor
cmp
cmpsl
iret
pop
mov
sahf
pop
sub
inc
adc
xchg
mov
push
cwtl
rcl
dec
sub
int3
dec
test
cmp
xchg
dec
shll
push
ret
pop
dec
repnz
mov
das
in
pop
or
mov
mov
outsb
sub
cmc
xchg
sub
loope
stos
fcomps
inc
imul
cmc
movsl
mov
cmp
pop
and
mov
add
sub
mov
fldenv
lock
push
mov
inc
pop
sub
inc
je
sarl
xchg
jl
ret
lahf
add
add
loopne
fsubrs
sub
fldcw
lock
xchg
add
lret
jge
stos
in
mov
testb
in
mov
ficoms
push
loopne
lcall
xor
or
mov
dec
mov
xor
sub
inc
sbb
ljmp
fcoml
dec
fxch
jae
in
iret
jle
or
sub
jae
xor
test
adc
cmp
mov
mov
xchg
or
rol
cmp
jmp
lods
insl
cmpsw
imull
push
dec
or
mov
out
pop
test
je,pt
pop
les
xchg
pusha
push
inc
test
sub
outsb
insb
data16
fwait
sahf
scas
sub
xchg
cmp
adc
je
jns
sbb
sti
insb
push
mov
mov
lods
cmpsl
dec
mov
sub
and
mov
adc
sub
lret
out
test
pop
loop
jo
inc
xchg
push
mov
xchg
insb
rclb
mov
movsl
or
mov
xor
push
mov
repz
jle
cltd
adc
pusha
mov
lods
add
sub
ret
sub
je
mov
xchg
push
and
in
leave
inc
int
lret
inc
lods
incb
lea
sbb
lods
push
lret
repnz
int
cmpsl
out
aaa
outsb
push
fcoml
hlt
in
testl
aam
cli
fistl
adc
nop
mov
xor
xchg
subl
jge
or
xchg
fisttps
lahf
fistpll
icebp
shl
shl
insb
and
idivb
mov
mov
cmc
scas
mov
cs
jmp
xchg
stc
int3
mov
ja
add
lret
or
es
adc
cltd
popf
mov
mov
mov
sarl
mov
mov
sub
je
hlt
adc
lds
icebp
popf
cmpsl
inc
and
aas
inc
push
adc
fwait
pop
jns
pop
test
je
leave
or
cmp
inc
mov
ficomps
test
dec
pop
inc
pop
add
into
les
iret
in
adc
jg
lea
jbe
call
test
push
fisubl
push
insl
aam
mov
mov
stos
push
jle
mov
jp
xor
mov
mov
add
call
out
call
ror
mov
inc
mov
cld
dec
jecxz
jge
xchg
scas
jns
lcall
stos
clc
push
and
xor
mov
scas
rorb
add
jnp
lcall
mov
xor
pmaxub
sub
sub
stc
jb
lahf
and
pop
aaa
dec
cmp
dec
lcall
cmp
pop
pop
xchg
sub
jo
fadds
dec
imul
add
repnz
mov
mov
int3
test
jl
faddl
push
mov
int3
push
scas
hlt
fsubrl
xor
inc
shlb
jl
test
loopne
lea
jmp
sbb
add
shl
add
adc
fst
lcall
leave
out
imul
addr16
fucomp
mov
les
jmp
push
fstpt
fldl
in
mov
incl
out
pushf
jno
mov
adcb
and
loop
clc
or
jbe
dec
jg
push
and
dec
add
pop
in
int
mov
iret
mov
xchg
movsl
cmp
aam
sti
data16
int3
mov
scas
sub
out
arpl
mov
inc
push
fwait
outsb
add
push
mov
stos
cld
into
or
pushl
dec
sahf
daa
or
pop
dec
cmp
insb
shrb
ror
adc
leave
andl
repz
fcompl
loop
mov
push
and
push
jbe
cltd
loopne
pop
stos
push
xor
add
jle
mov
sarb
out
dec
cmp
cmpsl
jb
mov
divb
negl
or
sub
icebp
addr16
repnz
lahf
xchg
xchg
or
test
inc
loop
test
and
and
inc
std
sub
pop
stos
fucomi
js
iret
sbb
xchg
int3
jecxz
jp
xadd
scas
loopne
loope
test
data16
ret
fisubrs
stos
push
iret
and
adc
push
push
movsl
icebp
ds
mov
xchg
stos
push
xchg
addr16
xor
rcl
cmp
and
mov
in
adc
jb
xor
in
or
repnz
add
bound
jns
es
jl
cmpsb
pop
inc
scas
stc
shlb
clc
inc
dec
xchg
pop
push
jle
cld
rorb
scas
mov
icebp
xchg
lods
push
mov
into
es
cltd
roll
jg
inc
mov
in
clc
cld
or
mov
mov
fwait
test
push
je
inc
xor
jecxz
sti
mov
test
mov
fsub
fidivrl
mov
movsl
cmp
xor
aas
pop
ds
mov
test
addr16
inc
mov
cmp
jne
aaa
test
insl
cs
mov
adcl
mov
sbb
mov
pusha
pop
movsb
adc
lods
jg
push
sbb
mov
movsb
add
pop
push
mov
xchg
aas
push
dec
aaa
sub
xchg
mov
pushf
negl
mov
fisttps
xchg
cmpxchg
mov
fs
push
in
sti
aaa
dec
push
push
jp
lret
mov
fwait
mov
dec
in
les
xor
daa
cmpsl
dec
and
arpl
ljmp
rclb
jge
repz
jmp
push
lock
jge
imul
pop
repz
fisttpl
push
xorb
and
pop
dec
cmp
lahf
aas
pop
in
in
push
jp
xor
mov
mov
inc
pusha
inc
or
aaa
and
aad
pop
popf
lahf
inc
add
mov
fisubrs
jbe
push
ja
xlat
pop
cmp
repnz
xor
adc
sub
push
sub
shll
cmp
xchg
cli
imul
dec
mov
jno
sbb
je
jl
repz
std
push
icebp
in
std
sub
lret
xchg
mov
or
or
mov
and
inc
loop
inc
xchg
inc
dec
mulb
outsb
lahf
das
jb
in
inc
adc
subl
pop
or
out
aad
scas
outsl
pop
and
mov
sub
inc
cmpl
push
jbe
xchg
inc
je
addb
call
sahf
mov
subb
imul
xchg
sub
cwtl
cld
fsubp
jo
repz
sbb
rcrl
dec
movsb
std
xor
clc
dec
hlt
fs
dec
push
iret
inc
in
mov
in
adc
aam
mov
push
jmp
pop
jmp
fwait
ljmp
dec
dec
xchg
popa
aaa
std
sbbl
pop
sbbl
into
xchg
int
adc
dec
rol
imul
pop
out
dec
sarl
mov
bound
or
adc
call
out
push
popf
adc
fwait
rcrb
and
addr16
xor
and
test
fnstcw
pop
pop
mov
mov
mov
lock
out
stc
dec
insb
lret
aam
and
push
jge,pn
mov
xchg
loope
adcl
ja
lret
loopne
inc
int
adc
in
sub
cmp
je
mov
jl
mov
insl
inc
cmpsl
fwait
dec
adc
jae
jmp
subb
pop
repnz
in
add
arpl
mov
sti
pushf
mov
repnz
andb
jmp
add
pop
jmp
pop
loopnew
insb
push
test
imul
jns
pushf
cmpsb
and
pop
xchg
push
popf
push
pop
jb
xchg
push
xlat
cld
xchg
mov
test
xorb
mov
test
sub
cmp
aad
popa
inc
test
sub
or
sub
adc
out
xchg
mov
ja
and
add
pop
xor
movsb
loopne
je
add
mov
push
jp
push
stc
outsb
dec
sub
cmc
insb
lret
jns
or
sub
xchg
sub
mov
fbstp
xor
dec
inc
sbb
mov
sti
jmp
mov
cli
fstl
idivl
movsl
mov
int3
pop
imul
ret
xchg
scas
gs
rcrb
dec
sbb
cmp
jle
cmp
mov
ret
fimuls
aas
pop
add
jl
popa
add
sti
mov
and
add
sbb
stos
xor
sarb
jnp
shr
imul
mov
add
xchg
xor
mov
sahf
cmp
enter
dec
hlt
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
in
xor
jp
pop
jp
cwtl
dec
into
mov
push
and
mov
jg
mov
mov
js
insl
sub
in
push
jl
jl
jmp
mov
cmp
mov
jge
mov
and
push
push
sub
pushf
add
int
fistpll
nop
inc
and
test
shlb
xchg
std
adc
stos
lock
idiv
cmc
aad
lret
pop
shr
cs
enter
ret
rcll
iret
fimuls
std
xor
in
mov
out
and
sub
mov
loop
fsts
xor
fsubs
inc
lret
inc
xchg
je
fidivrl
movsb
scas
or
or
sub
ficomps
ljmp
mov
cmpsb
mov
jmp
jno
ret
insb
mov
es
and
movsb
out
xlat
jle
xchg
mov
xchg
add
jae
xor
je
fmuls
repnz
xchg
adc
dec
xchg
out
imul
dec
mov
sbb
sub
out
addb
mov
fs
inc
pop
or
addb
icebp
std
dec
aas
cmpsb
in
add
stos
nop
xchg
roll
rclb
adc
fldenv
xlat
insl
nop
adcl
insl
pusha
xchg
pop
sub
mov
xor
mov
lock
mov
cmpsb
jmp
icebp
fimuls
xchg
push
aam
imull
pop
mov
sub
iret
pushf
addl
adc
ljmp
xchg
aam
pusha
cmp
call
push
jecxz
pop
ret
addl
cltd
sub
in
dec
push
adc
stc
adc
adc
aas
mov
adc
push
push
dec
insl
aam
push
cmc
imul
gs
pushf
cmpb
es
and
push
xor
gs
sbb
mov
daa
mov
pop
sbb
xchg
imul
shl
inc
loop
jo
aad
or
jecxz
jbe
mov
push
inc
subb
lock
inc
lret
push
dec
push
sub
sub
pop
ror
cltd
int
loop
jmp
or
sbb
jne
rcrb
pusha
dec
arpl
jmp
ret
fs
hlt
rol
xor
cmp
stos
jle
jmp
enter
clc
sub
add
popa
and
mov
xchg
fdivl
adc
inc
xor
pop
aaa
in
sbb
inc
ljmp
add
sub
mov
pushf
sub
dec
adc
mov
arpl
cmp
adc
std
and
popa
adc
in
jns
mov
stos
jae
cld
std
jae
or
sbb
arpl
xor
aam
cmp
sub
adc
popf
cmpsl
xchg
lods
scas
pushf
in
mov
xchg
push
and
rcrb
aaa
out
pop
out
rcr
pop
mov
dec
mov
mov
fsubrl
inc
outsw
clc
sub
or
inc
fs
jnp
insl
addr16
popa
fists
gs
push
xchg
int
inc
sbb
sub
adc
mov
inc
xchg
lcall
mov
and
mov
cmp
in
pop
pushf
pop
push
mov
or
out
shlb
imul
mov
or
icebp
gs
ds
ds
out
jmp
ljmpw
cs
cli
mov
mov
mov
or
push
int
jmp
mov
mov
gs
stos
add
ficompl
push
insl
push
jle
std
dec
hlt
lret
xchg
aas
fdivrl
enter
into
je
rcrb
xchg
loope
sarl
mov
dec
in
sbb
lods
scas
pop
loopne
popf
xor
mov
in
pop
cmp
out
jae
xchg
add
sub
cmp
subb
mov
mov
dec
aas
lret
incl
mov
imul
popa
cmp
clc
sarl
xchg
lcall
push
sub
lret
lret
dec
fs
subb
push
std
leave
test
les
fs
aaa
push
fadds
int
bound
movsl
lcall
test
insl
clc
jmp
add
pop
pop
std
cli
pop
xor
sbb
add
jb
je
int3
inc
xor
inc
push
js
mov
mov
stos
push
cltd
test
rclb
dec
mov
jbe
nop
dec
roll
hlt
loope
out
ja
test
pop
cmpsb
push
jmp
or
shrd
repnz
and
push
addb
dec
mov
adc
cmp
pusha
pop
lods
hlt
push
out
jbe
mov
stos
bound
mov
ljmp
mov
mov
jae
test
and
es
scas
sub
sbb
out
sub
xchg
stos
daa
rorl
movsb
es
xchg
add
insw
push
cmc
pop
pop
cmp
and
je
sbb
inc
clc
xlat
push
xchg
fldcw
idiv
or
inc
mov
pop
xchg
daa
mov
ss
icebp
lock
pop
cld
lahf
pop
into
and
sar
pop
ret
icebp
push
in
pop
jmp
ds
cmc
es
scas
out
addr16
xchg
mov
pop
push
lods
aas
insl
and
mov
faddp
sar
aam
and
fistps
jns
push
cmc
outsb
and
lods
out
and
fwait
lods
jmp
pusha
shlb
jae
cmp
xchg
and
jo
pop
es
lea
out
loop
fldenv
bound
bound
adc
sub
push
nop
push
mov
mov
mov
cltd
ret
test
int
xor
inc
gs
sub
repz
in
arpl
mov
mov
pop
les
inc
rclb
inc
dec
out
ret
sti
imul
mov
enter
popa
add
out
pop
mov
mov
push
test
pop
ds
fs
dec
mov
test
popf
mov
dec
adc
and
dec
xchg
sub
movsb
pop
gs
sbb
and
push
xor
push
cli
and
sub
sub
push
sti
bound
xchg
pop
mov
jl
add
ss
int3
inc
xchg
test
lahf
int
add
pop
pushf
ret
fldl
push
lret
mov
cmpsb
loope
out
sarb
daa
or
int3
mov
popa
mov
sbb
cmp
adc
leave
pop
dec
or
test
pop
or
je
xlat
nopl
iret
icebp
cmp
sbb
dec
inc
dec
pop
loope
popf
ss
je
adc
lds
fsts
or
subb
shlb
and
or
or
xchg
push
xor
mov
add
into
imul
ret
pop
dec
clc
jmp
adc
sarl
xorb
and
inc
iret
clc
push
push
jo
iret
lds
in
and
pop
mov
mov
cmpsb
int
loop
aam
scas
lods
repnz
pop
pop
lock
jbe
popl
icebp
scas
inc
inc
aad
or
lea
add
nop
adc
jo
repz
sahf
loope
fstp
push
lods
xor
iret
cwtl
pop
ror
xchg
inc
pushf
xchg
lret
test
rcl
or
jle
push
jl
enter
arpl
mov
test
sub
push
fsubrs
mov
lret
daa
pushf
sub
xchg
bound
xor
push
daa
sbb
mov
pop
add
aas
addr16
insl
lret
orb
sbb
test
add
and
mov
jns
jp
jecxz
stos
jo
mov
lds
jl
lret
rcl
sti
fistps
jl
sbb
adc
imul
movsb
les
sub
mov
fisubs
mov
test
popa
movb
add
outsl
fcoml
lods
mov
cli
xchg
push
jl
ss
sub
mov
icebp
xchg
push
icebp
adc
pop
outsl
into
add
test
shll
cli
aad
fcomps
mov
sbb
pop
outsb
add
leave
das
roll
pop
mov
pop
stos
sahf
gs
add
popa
stc
lcall
ret
inc
xor
dec
push
and
pop
test
adc
xorl
xor
aaa
or
ljmp
repnz
jne
rcrb
adc
jbe
in
adc
inc
test
daa
inc
inc
xchg
into
jmp
xor
dec
add
cmpsl
call
sbb
jp
int3
test
xor
push
sub
int3
and
and
xchg
or
sub
xchg
nop
mov
jg
sub
adc
dec
addr16
inc
in
flds
mov
out
adc
mov
push
mov
loopne
sbb
cmp
movsb
int3
jl
mov
js
cmp
mov
dec
repz
out
shrl
jl
adc
addr16
jle
and
sbb
out
push
cmp
push
and
mov
push
push
and
sub
xchg
pop
xlat
lods
push
lahf
aaa
das
out
enter
inc
imul
dec
sub
inc
or
cmp
fsubrl
xor
out
sbb
lods
mov
mov
mov
shll
push
lahf
cmp
repnz
mov
loope
lea
inc
ret
cwtl
cmp
or
pop
dec
xchg
outsb
std
int
mov
cmp
mov
cmp
sub
gs
mov
scas
in
and
lock
mov
sahf
mov
out
mov
stc
push
pop
mov
mov
dec
sbb
mov
cmp
mov
xor
loope
leave
pop
fisttpl
lcall
xchg
jns
jg
pop
push
daa
dec
push
aam
out
cltd
push
push
cld
pusha
sub
dec
int3
jecxz
cli
leave
or
mov
mov
aaa
cld
jno
sarb
mov
call
mov
cmp
inc
jae
xchg
cmp
xchg
jl
jge
ss
jns
cmp
sub
push
pusha
daa
loopne
incl
cwtl
lods
jns
shrb
pop
shrb
cmp
jns
rclb
xor
mov
xchg
add
jnp
xchg
and
frstor
mov
dec
lock
negb
add
fmul
mov
pop
jmp
loopne
ja
mov
add
xlat
push
dec
popf
aam
jp
fidivs
jbe
sub
or
add
cltd
add
arpl
pop
inc
xchg
inc
mov
push
rcrb
incl
inc
dec
sbb
push
sub
or
sbb
subl
mov
push
dec
dec
lods
add
xchg
into
pop
push
iret
mov
shll
faddp
sbb
popa
xchg
addr16
fwait
leave
test
hlt
xor
xor
mov
pop
jno
js
jae
push
mov
shrb
pop
cld
ljmp
arpl
sub
scas
inc
sub
inc
test
sahf
cmp
jae
dec
and
cmc
push
push
pop
insb
mov
std
push
mov
movsb
xor
cld
shlb
cltd
push
pop
push
addl
arpl
lods
lea
jmp
je
jl
cmpl
pop
stos
xor
test
sbb
jne
add
jo
mov
cmp
cmc
cmpl
test
lods
movsb
in
dec
xchg
cmp
or
imul
fcmovb
inc
test
lds
imul
xor
sbb
lods
pop
repz
push
jmp
pop
add
cmp
js
xor
cmpsb
pop
int3
jmp
inc
mov
mov
or
mov
shll
sbb
aas
push
adc
sub
and
iret
sub
popf
mov
lahf
sub
dec
cmp
rorl
inc
roll
hlt
decb
sarb
mov
insb
sbb
add
pop
jbe
iret
sub
mov
ljmp
jmp
pop
push
push
xchg
inc
sbb
xchg
je
mov
adc
push
mov
pop
and
fidivrl
in
lds
nop
outsb
mov
cmp
das
outsb
xchg
aam
lods
inc
rcl
inc
sub
insb
mov
cs
lret
xchg
ds
addr16
mov
dec
ss
lahf
xor
and
add
imulb
push
imul
and
andl
cmp
rcr
out
lcall
adc
loopne
es
push
dec
jnp
jbe
xor
mov
cmpsl
cltd
xor
out
inc
jnp
bswap
nop
mov
sub
or
dec
xlat
xchg
aam
adcl
jmp
push
xor
mov
sbb
filds
out
inc
lods
popf
sahf
mov
xchg
setl
and
xor
or
mov
mov
jmp
add
imul
cli
lods
ret
add
scas
adc
mov
stc
mov
mov
sbb
cli
movsb
mov
lock
mov
pop
push
xor
pop
pop
mov
pop
mov
push
idivb
sbb
mov
cmp
mov
mov
mov
jge
inc
ss
cmc
sbb
or
sub
or
push
jae
call
adc
subb
rorb
shlb
dec
cmp
cwtl
lods
or
mov
mov
fiadds
dec
jg
push
inc
sahf
add
shl
in
sub
jmp
push
dec
or
inc
inc
cmpsb
cld
pop
pop
in
xchg
in
xchg
scas
lret
sbb
mov
sub
repz
repz
xor
jno
add
mov
jnp
bound
scas
fnstenv
jp
dec
jns
jae
mov
clc
jae
out
in
lcall
push
xchg
mov
jno
dec
movsl
jmp
movsl
or
xlat
mov
lret
cld
js
jo
adc
movsb
cbtw
jge
jae
mov
sub
adc
mov
cmp
stos
stc
pusha
sbb
ja
jmp
jno
shl
movsb
aas
sub
movsb
adc
and
ljmp
insb
mov
iret
cltd
adc
jp
stos
cmpsb
sub
cmp
popf
dec
das
cmc
sub
test
cmp
xchg
imul
xor
mov
inc
mov
movl
nop
int
sbb
out
popf
push
shll
ja
pop
mov
shll
js
sbb
push
enter
inc
scas
rclb
sub
mov
fprem
push
cwtl
push
and
stos
xchg
stos
inc
add
pop
incl
stc
dec
addl
sub
jge
cli
push
out
push
mov
test
mov
and
or
xchg
ljmp
lahf
movsl
fistpll
inc
and
pop
movsb
sub
inc
sbb
pusha
sarl
or
sub
int3
sahf
adc
rclb
leave
inc
sahf
outsb
dec
enter
inc
xor
pop
and
lret
arpl
jae
ljmp
scas
sbb
fildl
push
jnp
xchg
push
sbbb
adc
mov
add
test
xor
call
mov
ja
cmp
mov
mov
test
sahf
in
dec
push
or
ret
out
jmp
fists
lods
sbb
hlt
sub
and
or
push
jmp
inc
sti
dec
cmpsl
pop
in
loopne
jo
cmp
imul
popa
lock
hlt
out
fisttps
movsb
cli
xchg
adc
test
inc
fwait
std
add
push
mov
dec
or
and
xchg
imul
mov
fsubrs
popfw
in
push
mov
lea
mov
xor
insl
push
xchg
aaa
adc
into
pop
jge
pop
push
xchg
xchg
mov
in
push
movsl
sub
mov
jge
push
and
cmc
pop
orps
into
int
in
jnp
div
fisttpll
adc
loopne
pop
fisttps
dec
cmp
mov
popa
dec
comiss
movsl
cmp
mov
mov
cmpsb
stos
add
lea
push
movsl
jl
mov
adc
pop
fs
fisubrs
nop
popa
jge
movsb
cmp
and
stc
in
adc
arpl
mov
shl
out
xchg
insb
hlt
pop
int
xor
cmp
and
decb
dec
stos
jo
clc
test
or
insb
into
shll
sbb
cmpsb
push
sarb
idivl
lcallw
sbb
test
insl
jg
bound
ljmp
jbe
dec
jb
cli
ss
je
push
repz
loopne
fists
inc
add
add
lods
cli
addr16
pop
mov
jmp
inc
lods
ljmp
pop
mov
prefetch
rorl
mov
out
loopne
mov
sbb
enter
mov
pop
xchg
xchg
cmp
inc
lock
orl
jno
cmp
rolb
mov
jb
dec
sbb
xchg
sub
stos
js
sub
lahf
rclb
sti
jnp
push
rol
int3
sub
arpl
cltd
xchg
popa
mov
clc
dec
rclb
cwtl
pop
mov
jmp
cltd
dec
pushf
adc
in
mov
pusha
scas
sbb
cmpsb
es
jae
xchg
mov
sub
stc
cltd
jge
orl
xchg
dec
jecxz
xorb
cmpl
add
mov
sub
jae
add
test
mov
insl
fnstcw
xor
test
cmp
stos
inc
sbb
repz
cmp
mov
shll
dec
jmp
and
sbb
mov
push
cli
jnp
into
outsl
xchg
mov
rcrb
hlt
add
or
decb
sub
adc
mov
cmp
dec
add
xchg
pop
fldl
leave
data16
cli
adcl
jecxz
stos
mov
mov
sub
xor
lret
daa
pop
inc
rorb
xor
lods
stos
mov
sub
mov
xor
mov
adc
shl
add
sbb
fwait
jg
sarb
mov
push
jae
idivb
push
cmp
sub
out
ret
xor
xchg
mov
mov
xchg
push
popa
push
jle
ret
cld
mov
outsb
loope
js
dec
sub
mov
aam
sbb
push
or
test
lcall
fisubrl
xchg
icebp
jmp
and
cmp
idiv
les
movsl
push
cmpsb
jecxz
jns
lea
cmc
mov
cmp
mov
out
into
mul
jns
mov
jg
xlat
jnp
xor
add
popf
mov
nop
xchg
push
notb
loop
gs
xchg
push
sbb
test
mov
cmp
cmp
sahf
loope
adc
sub
icebp
clc
test
iret
adc
pop
jno
adc
sbb
jno
jecxz
scas
enter
pop
or
fcmovnb
push
cmp
es
mov
sbb
ss
gs
repz
cli
sub
sub
pop
xor
add
dec
fwait
dec
clc
mov
or
push
enter
stos
clc
add
das
shlb
mov
in
or
repz
vcvtpd2dqx
xor
jg
cwtl
mov
int3
mov
cmp
cs
jl
rorb
mov
mov
les
push
out
pop
mov
ret
sub
push
mov
push
xor
mov
jg
les
add
push
lcall
add
data16
fiadds
xchg
aad
aam
or
loopne
lods
and
sub
sbb
jno
xor
fistl
fsubrl
mov
daa
out
pop
cmc
push
add
lret
in
aad
pusha
lods
imul
and
ja
push
adc
stc
jbe
pop
and
add
dec
leave
adc
shl
jmp
in
or
sbb
lock
ficoml
mov
add
jmp
and
push
movsb
fs
dec
push
jp
jecxz
orb
addr16
mov
jmp
lret
mov
xlat
jle
shll
shll
sbb
xchg
pop
cmpsl
int
sbb
scas
add
jae
adc
mov
andl
test
jns
cmp
movsb
rorl
outsb
pop
xor
fs
aas
repz
jbe
pop
cmpb
cld
mov
mov
bound
scas
cmp
call
movsb
fadd
ds
not
and
sub
pop
jge
mov
loopne
cwtl
xchg
dec
xor
pop
inc
rcr
mov
inc
jl
movb
faddl
push
cs
js
xchg
lahf
data16
lret
sub
daa
gs
loop
cmp
les
and
mov
test
mov
lds
in
stos
add
jge
pop
inc
jne
sbbb
lock
xor
push
das
jl
jno
jb
adc
push
add
mov
lock
sbb
cmp
inc
inc
inc
pop
lods
jg
aas
mov
mov
add
in
add
pop
fdivrs
mov
and
pop
mov
cli
fdivrl
mov
imul
cli
jb
ja
xchg
enter
cltd
in
mov
popa
imul
xchg
push
jo
repz
fmuls
outsb
mov
xchg
push
int
bound
mulb
es
sub
cltd
push
in
pusha
and
mov
lcall
in
dec
fisubrl
movsl
cli
adcb
jg
inc
pusha
add
aad
and
adc
cmp
adc
in
add
and
loop
cmp
movsb
stos
dec
xor
mov
jne
int3
ret
fidivs
mov
imul
addl
xlat
in
lock
sbb
pop
outsl
xchg
mov
stc
push
ds
push
fimuls
or
bound
pop
mov
ss
jecxz
sub
mov
add
or
shl
mov
fbstp
and
pop
pop
push
push
dec
push
mov
or
mov
outsb
and
ficoms
jbe
stos
push
xchg
fsubrs
xchg
ds
pop
test
hlt
jae
cwtl
push
rclb
cwtl
pop
rorl
mov
mov
das
rcr
icebp
test
test
inc
inc
stos
xchg
je
scas
test
mov
arpl
aam
push
movd
scas
sub
outsl
rorl
je
cmp
jbe
mov
pusha
je
jae
jle
loopne
cmp
jb
shrl
jnp
add
mov
fmuls
xchg
out
fcoml
nop
cmpsb
lock
aas
imul
inc
jo
fwait
clc
aad
mov
jns
jge
push
data16
cmp
cmp
jb
jns
mov
adc
jecxz
mov
cmp
in
leave
and
push
mov
repnz
mov
fxch
arpl
xor
push
jnp
addl
jl
dec
stos
or
outsl
mov
in
mov
dec
fistpl
testb
mov
sbb
shlb
jbe
adc
loope
sahf
out
push
stos
and
xchg
leave
sti
cltd
and
testl
dec
mov
dec
mov
mov
insb
adc
mov
out
aas
mov
cmp
jno
jo
jmp
cmpsb
push
add
push
rep
xchg
mov
loop
test
cmpsl
subb
in
insb
xchg
in
cmpl
pop
mov
sub
jo
loope
jecxz
bound
mov
jge
xchg
aam
dec
outsl
sahf
cmpl
je
mov
jbe
cld
inc
aaa
mov
xchg
mov
xchg
clc
sbb
mov
xor
repnz
cmp
pop
mov
orb
dec
mov
dec
jp
pop
stos
dec
mov
mov
or
movsb
sub
je
testl
in
es
dec
in
mov
sbb
adc
test
lock
lods
aaa
and
leave
pop
repnz
jns
cmp
shll
add
mov
push
fildll
mov
xchg
repnz
add
jle
add
pop
mov
rorl
jbe
push
xor
lds
fsubs
push
test
mov
adc
sbbb
insl
xor
push
adc
sub
lahf
adc
andb
xor
cli
or
and
ss
lock
sbb
imul
imul
test
js
idivb
and
iret
fwait
mov
adc
nop
cmp
lcall
inc
jae
dec
clc
mov
movsl
adcl
mov
leave
push
icebp
jbe
aas
out
pop
rorl
gs
push
daa
pushf
lods
jo
js
mov
cmp
add
dec
test
enter
pop
cltd
push
mov
sarl
jno
cmp
mov
jmp
pusha
fcompl
xchg
pop
incb
xchg
cli
adc
or
mov
stc
xlat
pop
shlb
test
scas
cmp
add
orl
mov
pop
mov
sub
push
ja
and
cmpsl
pop
push
div
jmp
addr16
ret
mov
cmp
sbb
dec
inc
cmp
dec
popa
mov
xchg
stos
out
pop
addb
pushf
jb
loop
test
mov
adc
pop
xchg
orb
lret
pop
inc
and
imul
divb
shlb
mov
lret
cmp
mov
jno
rcrl
pop
movl
shlb
sti
addr16
sub
jo
nop
mov
and
jl
in
push
inc
rcrl
stos
xchg
add
pop
int
and
and
jp
add
xchg
adc
stc
cs
push
loope,pn
test
mov
addr16
inc
mov
pcmpgtb
les
mov
iret
mov
sub
inc
js
dec
adc
adc
and
aaa
pushf
scas
in
aas
mov
mov
aaa
sub
sbb
cwtl
cmp
loope
insb
frstor
add
imul
pop
or
mov
repz
test
in
ror
in
subl
pop
mulb
mul
aas
mov
mov
dec
jno
cmpb
xchg
addr16
call
lock
clc
mov
cmp
ficoms
or
pop
sub
cltd
cmc
sahf
pop
shlb
sbb
pop
sbbb
dec
rcll
mov
out
icebp
lea
lahf
sbb
push
pop
inc
fs
inc
mov
outsl
daa
out
imul
enter
inc
sbb
mov
sbbb
or
nop
or
jne
pop
push
xchg
xchg
fmuls
cmc
push
stos
mov
sbb
arpl
mov
lret
mov
xor
sbb
mov
mov
dec
sbb
mov
fscale
add
jmp
aas
sub
ds
sahf
sbb
push
xchg
fdivrs
test
mov
pop
movsl
xchg
push
cmp
in
xchg
arpl
jns
rorl
lods
je
cmp
pop
cmp
adc
mov
filds
pop
dec
sbb
pop
jo
rclb
sub
or
dec
push
sti
mov
and
pop
scas
int3
jne
dec
fldenv
cmp
pusha
cmp
jecxz
test
mov
icebp
stos
loopne
sub
cmp
aaa
xchg
jmp
in
lea
jne
imul
mov
sti
out
adc
cwtl
dec
cmp
mov
inc
in
cmc
sub
add
jle
or
fcmovnb
cmp
cmpl
mov
and
idiv
sub
jle
lret
cmp
lret
add
mov
ror
push
imul
mov
movsb
out
cmp
test
pop
dec
cmpb
imul
mov
push
jle
inc
cmc
popf
stc
mov
mov
je
movsl
add
sub
cmp
pop
inc
aam
push
rolb
inc
cmp
inc
mov
mov
lock
dec
stos
fdivl
sbb
inc
jp
sub
bound
pop
cmp
push
outsl
scas
adc
jle
out
lcall
cmp
ds
mov
fwait
adc
and
es
dec
mov
cmpsb
fisubs
push
jp
xor
mov
ljmp
std
pop
jne
lahf
sti
xchg
movsl
mov
xor
pop
pop
dec
or
jb
loop
or
mov
sbb
scas
loope
les
jle
cmp
dec
cmp
push
adc
iret
jnp
test
push
call
cld
leave
xor
lahf
jge
add
xorb
js
cmpl
jle
xchg
insb
les
cltd
jle
xor
dec
mov
mov
fcom
xlat
adc
fiadds
push
pushf
enter
mov
and
imul
out
pop
xor
dec
cmpsl
add
sbb
incl
and
mov
inc
pop
inc
call
mov
jb
dec
arpl
and
xchg
lds
and
mov
or
int
xorb
or
and
jmp
jecxz
xchg
fwait
mov
xor
ret
sahf
clc
adc
mov
pop
jno
jne
arpl
in
adc
pusha
lock
pop
mov
pop
popa
in
cmpl
int
imul
sub
inc
mov
imul
cli
pop
mov
xor
inc
js
jo,pt
repz
in
stc
sarl
xor
sbb
pop
rcl
testb
fcmovb
addl
sbb
loope
mov
sahf
sub
push
push
sbb
sahf
enter
dec
movsl
sub
xor
push
in
jg
xchg
sub
pop
test
jle
mov
mov
xor
xchg
sbb
sub
pop
in
and
notl
popa
mov
cmp
ror
mov
dec
fldenv
imul
cmp
mov
movsl
or
dec
sub
hlt
test
cmp
fistpll
icebp
fcoml
mov
xchg
lcall
cmpsl
movsl
psubd
push
mov
sub
xor
or
aad
cmp
jnp
xchg
and
adc
in
sub
repz
mov
fdivrl
push
xchg
in
sarl
jg
cmpsl
in
pop
adc
mov
pop
xchg
jns
jbe
cs
clc
es
ss
aaa
adc
mov
mov
or
sahf
mov
outsb
push
sub
cltd
xchg
mov
div
into
stos
lret
imul
pop
sub
jns
dec
lock
fdiv
data16
inc
es
fwait
repz
imul
test
fisubrl
rcll
stos
loopne
adc
jae
out
fcomps
dec
ret
dec
dec
daa
jb
fdivrs
sub
inc
lret
mov
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
add
jge
or
jp
mov
rol
test
pop
es
pop
adc
inc
pop
inc
test
ss
or
lret
insl
xchg
jmp
std
rorb
in
xor
int
jo
test
inc
fwait
xor
pop
cmp
push
test
xor
push
loop
jle
sti
xor
cmpsl
iret
cmp
cmp
es
lods
push
inc
or
inc
lcall
jb
and
mov
pusha
call
std
cltd
shrl
adc
in
mov
xchg
mov
clc
in
mov
test
jae
fcmovbe
outsb
lret
push
mov
sahf
add
pusha
jg
ljmp
lds
sub
mov
fisttpl
lds
jp
add
ds
mov
sbb
into
fcom
call
addr16
sbb
out
cmp
mov
mov
ss
cmp
and
aaa
mov
mov
cltd
fadds
pop
add
mov
mov
daa
jbe
jne
mov
repnz
mov
cmp
in
je
mov
negl
into
cmp
dec
mov
fs
out
xor
lock
pop
out
cmp
sub
cwtl
mov
xchg
scas
bound
aad
sbb
mov
cs
test
fmul
shll
ficomps
push
push
std
jge
fistpl
mov
pop
mov
arpl
xchg
lea
cmpsl
and
aam
outsb
and
adc
mov
adc
inc
loopne
cmc
test
xlat
fstl
push
stc
mov
out
imul
outsb
adc
push
dec
xchg
dec
dec
test
adc
mov
inc
cmp
loopne
daa
pop
gs
xchg
out
adc
scas
cs
ljmp
jmp
add
gs
aad
or
and
mov
sbb
sbb
pop
add
imulb
xchg
daa
and
mov
xchg
and
stc
mov
mov
popf
dec
rclb
scas
fsubs
xchg
mov
dec
cmp
aad
adc
jmp
test
gs
sti
dec
dec
ds
inc
out
aad
sbb
out
cmp
jne
ret
lahf
test
fistps
jle
mov
pusha
mov
and
inc
mov
push
pop
adc
mov
mov
shl
adc
pop
push
jo
mov
cmpsb
out
add
rcll
pusha
pushf
push
xor
xor
enter
dec
aas
jnp
push
pop
sbb
inc
lret
jge
shrb
neg
or
mov
mov
ret
cmp
pop
pushf
add
pushf
out
and
pop
imul
movsl
mov
xor
xor
or
sub
xchg
es
mov
dec
in
loop
test
or
sbb
inc
xchg
jnp
mov
mov
mov
imul
jmp
adc
cwtl
inc
push
push
inc
jns
inc
cli
sub
lods
cmp
push
mov
jnp
inc
iret
mov
ret
or
jmp
arpl
fdivrl
sub
leave
sub
jns
and
adc
arpl
out
fiaddl
movsb
xchg
subl
cmp
ljmp
dec
pop
shl
inc
int
std
ss
cwtl
push
pop
fists
adc
dec
rorb
inc
mov
add
sti
pusha
int
in
mov
dec
sub
lahf
cmp
xchg
repz
or
sbb
dec
stos
xchg
shrb
in
or
xor
push
ja
imul
pop
add
in
jecxz
lock
ljmp
xchg
fs
vunpcklpd
jecxz
add
xor
insb
mov
adc
jl
or
les
clc
and
lret
and
das
jbe
gs
jge
inc
ss
int3
adc
mov
ret
lea
iret
adc
mov
sub
cmpsl
xchg
sbb
mov
movsl
shl
mov
sub
xlat
aad
sbb
dec
popl
je
sub
xlat
pop
std
pop
cld
xor
in
lods
loope
not
xchg
popf
pop
add
xchg
rclb
test
pop
pop
ret
loopne
pop
xor
mov
pop
loop
mov
addr16
rorl
cmp
hlt
pop
ljmp
cmp
xchg
arpl
add
les
popf
cmp
jmp
and
sub
push
stos
or
popa
aas
mov
pop
jae
and
xor
mov
in
sbb
cmp
out
call
xchg
je
push
mov
sbb
adc
add
iret
loop
daa
cld
popa
push
lods
addr16
icebp
loopne
test
or
test
into
fstpt
popf
xchg
std
or
fwait
sbb
ljmp
call
addr16
les
mulb
sbb
stos
js
xor
movb
xchg
push
xor
repnz
jo
testb
test
jb
pop
jae
hlt
inc
sarb
lods
add
sub
cmp
dec
mov
sbb
pop
cmp
pop
push
lods
sub
push
sub
pop
xor
adcl
mov
xchg
xchg
pop
iret
scas
dec
fnstsw
push
jb
movsb
pop
jo
je
imull
xor
mov
fsubs
es
aaa
push
mov
cwtl
add
cmp
decl
in
call
push
adc
jmp
repz
jnp
adc
out
out
jge
dec
or
pop
shlb
pop
mov
adc
fsubs
push
outsl
cmc
gs
sub
or
sbb
or
pop
xchg
xchg
cmp
ljmp
das
nop
imul
mov
sub
ret
dec
in
sahf
or
dec
xchg
mov
xor
add
and
dec
xchg
mov
pop
repz
sub
add
jo
lret
std
and
xchg
xor
hlt
mov
push
bound
rorl
and
jno
es
push
mov
push
xchg
cwtl
repnz
mov
daa
jmp
dec
addr16
or
mov
pop
andb
mov
icebp
mov
orl
test
wrmsr
ret
or
rcr
push
insb
test
je
pushl
mov
lahf
adc
out
or
push
adc
mov
pop
pop
insl
cmp
sub
out
stc
subb
xorl
int
jbe
repnz
fldln2
push
add
subl
rorl
xlat
stos
movsl
fdivp
mov
xlat
ret
leave
out
cmpsb
and
add
stc
pop
inc
lods
sarl
cld
out
dec
pop
test
aaa
add
xor
push
ss
loopne
cmp
outsb
sub
push
ret
mov
pop
mov
dec
notl
pop
jl
add
jbe
aaa
test
int
in
call
je
add
sbb
pop
mov
mov
and
mov
fidivs
or
mov
sub
sahf
sbb
leave
mov
cmpsl
outsl
sbb
sahf
je
lock
in
mov
xchg
dec
push
jge
test
or
push
dec
fisttpll
es
call
jb
mov
mov
mov
fidivl
hlt
das
jo
xlat
sub
cld
hlt
les
shlb
inc
xor
outsb
insb
gs
mov
rol
lods
rorb
pop
mulb
js
lock
bound
pusha
cli
sbb
adc
outsb
movsb
stos
movsl
mov
push
dec
aam
xor
mov
push
leave
sub
or
add
call
shll
push
mov
pop
xchg
jbe
lock
pop
psubq
jo
mov
jg
pop
lds
rcl
mov
sub
ret
mov
mov
push
mov
jl
jo
idiv
jmp
iret
jmp
repnz
push
or
mov
or
xor
jno
sub
sub
daa
mov
jb
push
fsubl
sbb
jecxz
stos
ss
push
push
insb
aad
cmp
xor
out
fcoml
les
scas
pop
rorb
scas
xchg
int
ja
push
fistps
scas
and
cli
insl
mov
xchg
sub
fdivl
aas
push
mov
inc
nop
mov
pop
sub
add
cli
mov
test
push
and
aas
or
pop
cld
xor
ret
sbb
je
bound
fcompl
push
rolb
mov
add
es
and
pop
mov
call
adc
inc
dec
call
push
push
inc
jle
popf
xor
sub
sub
xchg
dec
cmpsb
scas
mov
rclb
movsl
push
stos
orb
rolb
popa
mov
jle
sbb
pop
stos
pop
aaa
test
and
movsb
cld
pop
fisttpll
pop
pop
movl
daa
test
dec
outsb
push
sub
jecxz
and
es
insb
arpl
and
mov
lds
mov
dec
fcmovne
sub
cwtl
out
sbb
loope
iret
and
dec
fadd
ret
add
xor
mov
movsl
lret
sub
lcall
pop
mov
mov
icebp
push
popa
popa
xor
sti
out
pop
sub
mov
dec
mov
sti
out
pop
or
ret
bound
rcll
inc
ds
dec
arpl
loop
cmp
clc
mov
jle
add
push
repz
adc
sbb
jecxz
data16
test
sahf
lods
xchg
movsb
or
pop
cmp
cmc
inc
stos
and
adc
rorl
dec
dec
push
inc
mov
lcall
imul
add
lret
mov
bound
and
add
mov
sub
enter
and
cld
adc
adc
inc
pop
sti
cmp
aas
sub
cmp
pop
push
fwait
adc
mov
shrl
and
mov
fstps
test
or
push
movsb
push
jns
lods
and
cmpsl
or
rcr
pop
mov
xlat
lret
xchg
lahf
lods
add
jl
cld
lret
jns
iret
sub
cltd
cwtl
push
lods
mov
and
outsb
xor
dec
rcrl
jb
jecxz,pn
mov
aad
ds
inc
inc
jle
xor
mov
xlat
or
into
jnp
daa
push
insl
movsb
out
ret
das
jg
clc
stc
ss
addr16
lcall
cmpsb
clc
clc
loop
mov
in
out
shrl
xchg
ret
fimuls
mov
lret
jmp
movsl
cmp
adc
or
jle
imul
or
jo
clc
xchg
xchg
xchg
add
in
mov
in
mov
xor
add
fstl
jb
cmc
xor
leave
cmp
sbb
xchg
out
add
mul
sub
and
add
push
cmpsl
movsb
stc
pushf
adc
test
stos
arpl
push
jg
dec
mov
mov
imulb
mov
es
fnstsw
xlat
jg
je
sbb
into
mov
sbb
lock
repnz
fs
iret
push
jge
dec
nop
jge
add
jg
jmp
jo
push
mov
xchg
shll
mov
push
mov
lock
mov
xchg
adc
xor
jo
or
out
adc
rcl
ret
lahf
push
lods
or
fsubl
adc
jmp
aad
in
into
neg
and
adc
cwtl
jle
stc
imul
cmp
fmul
out
insl
in
pop
lods
andb
sub
cmpsl
push
xor
xchg
shll
andl
xor
aaa
and
pop
addr16
les
shlb
pop
in
leave
xchg
jo
aad
dec
sbb
pop
dec
pusha
pop
xchg
xchg
jne
ret
inc
push
mov
jp
sarb
mov
inc
loopne
ja
icebp
or
dec
gs
aaa
sub
stc
mov
inc
lcall
lret
dec
xlat
jecxz
adcl
mov
sub
sar
stos
insl
fwait
fs
frstpm(287
stos
addr16
insb
mov
cmp
clc
shlb
ud2
cmc
out
xor
ja
or
in
rclb
daa
xchg
std
fisubs
fxam
aaa
cld
adc
in
icebp
fcoml
push
and
adc
pushf
cmp
and
je
ljmp
fsubrl
or
enter
lahf
mov
pop
loope
push
fimuls
push
fdivrs
mov
mov
pop
xor
sbbl
pop
cmp
mov
fwait
push
idivb
hlt
xor
iret
or
les
and
fisubs
sub
fidivs
in
cmpsl
adc
imul
ds
sahf
in
repz
jns
cmp
xor
sbb
and
cmp
popf
arpl
lds
fnstenv
jo
out
fcomps
jo
call
clc
pop
dec
inc
adc
inc
xor
inc
addb
sbb
nop
pop
faddl
loopne
data16
add
push
inc
iret
pop
test
js
push
fstpt
mov
mov
insl
xchg
and
jno
mov
cmpsb
popf
adcb
push
cmc
out
clc
fcmovnbe
stc
sub
ret
mov
fisttpl
repnz
lret
cmp
pushf
sbb
inc
mov
daa
xchg
and
or
inc
or
push
testl
aad
leave
fwait
xchg
dec
sub
icebp
rcrl
inc
aas
and
and
inc
cli
jecxz
xchg
jne
add
sti
jo
push
cmp
popa
sub
out
fistpll
rcrl
andl
imul
in
insl
cmp
mov
jmp
pushf
stos
stos
mov
lret
mov
xchg
pop
je
in
pop
cmc
loope
mov
cmpsb
sbb
jl
mov
mov
jbe
or
xor
pop
xchg
push
xor
push
dec
and
stc
sbb
dec
aad
shrl
das
xor
jmp
in
aaa
xchg
leave
outsb
mov
inc
dec
sub
pop
lret
aam
jmp
add
incl
add
push
mov
arpl
cmpsb
roll
sbb
xor
cltd
sub
nop
jo
cmp
adcl
jno
inc
xchg
insl
stos
mov
pop
arpl
shlb
push
mov
in
push
clc
pushf
mov
negb
push
mov
xlat
xchg
dec
push
in
sbb
add
stc
fnsave
mov
into
insl
add
ljmp
xchg
sar
aam
add
lods
imul
out
add
fdivrl
jne
or
and
adc
pop
movsb
push
inc
or
xchg
ds
clc
fnstcw
dec
repnz
mov
ffreep
xchg
fwait
lock
xchg
call
mov
pop
test
sbb
cltd
movsl
fidivs
jnp
sub
xchg
data16
sbb
pushf
adc
sti
sub
push
jp
mov
mov
cmpsl
out
mov
popl
sbb
ja
adc
jae
notb
loope
xchg
rol
mov
aam
orl
sub
stc
xchg
cmpsb
pop
sub
int
icebp
mov
outsl
cmp
xchg
lock
jecxz
jb
aad
xchg
sub
xor
lds
pop
xlat
jg
cs
enter
in
jae
mov
shr
adc
pusha
shlb
enter
bound
out
xchg
in
push
inc
push
leave
inc
push
popaw
pop
push
inc
or
inc
loope
hlt
mov
insl
daa
test
xchg
inc
inc
and
imul
mov
push
jbe
xchg
push
stos
cltd
ja
imul
adc
mov
movsb
imul
mov
cmpsl
lock
mov
adc
mov
mov
mov
fiadds
mov
xchg
pop
js
xchg
dec
in
ret
lcall
mov
inc
sbb
les
push
lods
mov
and
inc
shll
jmp
mov
adc
aam
test
xor
dec
jno
add
aaa
xor
leave
ftst
sub
loope
jge
leave
and
repz
fistl
sarl
xchg
jg
imul
sub
push
into
cmp
in
cwtl
mov
cmpsb
shll
jne,pn
push
adc
pop
mov
enter
add
jno
add
ficoms
dec
pop
lcall
inc
imul
ja
add
fisttpl
inc
test
add
inc
roll
imul
popa
cmovs
pop
fs
jo
sbb
jmp
and
xor
roll
jl
sub
mov
mov
xchg
outsl
inc
xor
scas
js
pop
inc
fnstsw
insl
sbb
cli
dec
mov
push
sub
xor
mov
and
les
les
aaa
adc
rcll
scas
mov
outsl
out
mov
roll
inc
imul
jp
movsl
sub
xor
fs
addl
dec
pop
ds
push
cmp
mov
fabs
pop
mov
xchg
scas
ret
inc
das
rcll
dec
mov
into
lret
cmpsb
gs
jmp
sti
js
pop
xchg
clc
sbb
test
mov
cmp
mov
mov
in
pop
mov
stos
push
scas
test
mov
out
cmp
jae
xchg
cld
mov
lcall
add
sbb
stos
push
mov
shll
pop
dec
sub
popa
cmp
or
pop
lea
push
mov
pop
push
mov
aas
sbb
les
xchg
push
push
xor
sub
mov
pop
and
int
test
xor
pop
add
in
xor
xchg
and
outsb
xor
sub
mov
xchg
mov
out
sub
into
sub
int
in
hlt
inc
jae
std
inc
or
inc
cmp
fcomps
clc
popa
and
lcall
gs
cmp
jp
subl
inc
fwait
xor
dec
leave
les
mov
out
adc
loopne
enter
mov
js
rcr
cmp
sub
orl
xchg
inc
jge
pop
testb
cltd
js
xor
adc
pop
mov
insb
call
repnz
fistpl
jb
xor
inc
mov
hlt
mov
adc
dec
repnz
xlat
and
inc
pop
adc
int3
or
cmp
or
arpl
cmp
fistpll
popf
sahf
cmp
sub
sub
outsb
adc
gs
inc
and
adc
stos
inc
call
rcrb
rcll
add
add
jecxz
inc
cmpsl
mov
adc
test
leave
inc
or
std
pop
sbb
pushf
xor
mov
add
out
shl
fnstsw
sub
mov
mov
pop
negb
test
popa
xchg
nop
sti
test
fldcw
xlat
shrd
addr16
mov
xor
sbb
dec
gs
insl
or
prefetcht0
inc
pop
shl
test
inc
jno
sub
sti
orb
stc
gs
stos
andb
xor
inc
out
mov
or
dec
inc
and
je
loopne
or
mov
fisubl
cwtl
dec
jo
jg
lods
fdivr
mul
mov
sbb
ss
pop
div
ljmp
dec
out
adcb
popf
std
test
and
push
cmpl
xchg
mov
mov
inc
mov
adc
mov
std
lods
stos
insb
pop
add
mov
jg
pop
fmull
ljmp
xor
fbld
mov
jmp
and
xor
push
mov
pop
test
aas
push
data16
cmp
mov
or
loope
pusha
call
daa
pop
pop
jb
jg
push
movsb
dec
mov
idivb
pop
and
xchg
stos
mov
add
fistl
jb
lcall
pushl
mov
add
add
adc
cmp
cmpb
repz
daa
adc
jno
pusha
imul
mov
cmpsb
sub
arpl
mov
sub
divb
sahf
mov
pop
push
push
js
movsb
adc
outsl
aam
cmpsl
scas
dec
in
cmpsl
sahf
fcoms
imull
outsl
or
mov
icebp
aaa
fwait
dec
jle
xor
add
sub
popf
or
cltd
out
push
nop
sbb
lahf
test
push
mov
xor
lret
jmp
popl
cmpsl
std
cmp
pop
out
ret
xor
pop
out
addr16
sbb
cmp
add
inc
cli
cmp
pop
fists
mov
imul
mov
pop
xorb
mov
daa
imul
pushf
sbb
fnstcw
sbb
cmp
pop
faddl
call
cwtl
or
jae
test
in
rorb
out
lret
pushf
popa
mov
sub
jl
xchg
out
xor
or
insb
and
cmc
inc
xchg
std
sbb
xchg
out
push
addr16
push
xchg
addr16
or
adc
outsl
fbstp
lcall
sub
jno
push
inc
lret
sbb
inc
fbld
inc
mov
push
dec
sub
sbb
in
popa
ds
lds
repnz
scas
push
mov
sahf
push
mov
jae
and
or
divl
sbb
and
push
dec
outsl
in
adc
imul
or
sbb
push
adc
xorl
cwtl
push
insb
fcmove
mov
popf
jl
xchg
and
stos
in
pop
js
mov
jge
and
pop
mov
iret
ss
pushf
mov
mov
pushf
push
cmp
sbb
pop
fs
out
add
ljmp
sahf
cmpsb
dec
dec
push
push
push
sbb
call
jae
cmp
pushf
add
outsl
mov
mov
mov
stos
inc
xchg
lcall
ds
add
sbb
enter
movsl
testl
add
in
jp
aad
dec
and
or
leave
add
icebp
mov
int
sti
and
sbb
les
js
inc
add
test
mov
in
lcall
pop
and
cltd
mov
jnp
sub
sbb
sti
rcrl
in
jnp
push
loopne
push
cld
test
mov
mov
add
cs
pop
push
xchg
mulb
sti
and
dec
loop
cmpl
lock
mov
imul
rcll
pop
inc
xchg
pop
mov
jae
push
enter
aas
jg
aam
stos
lret
js
xchg
lcall
jge
and
out
dec
pushf
ret
jno
je
cwtl
and
out
mov
loop
cmpsl
into
push
popa
add
jge
fs
rorl
jmp
fs
lcall
inc
xchg
or
movsl
sbb
dec
xchg
les
pop
lods
lahf
jmp
popa
xchg
xchg
cld
adc
push
and
imul
add
clc
std
dec
or
mov
dec
js
ds
sub
push
cmp
xor
inc
sbb
mov
xchg
push
in
pop
lods
pop
loop
sub
xchg
push
inc
imul
and
sbb
lret
pop
stos
sbb
movsb
addl
mov
mov
pusha
scas
mov
adc
movsl
jl
data16
imul
arpl
xchg
stos
shlb
mov
into
cmp
sbb
jbe
pop
xlat
addb
and
jo
push
adc
pop
jno
in
jle
aas
xchg
sub
test
xadd
in
and
push
movsl
inc
mov
sarl
sub
and
inc
adc
test
das
fisubl
mov
pop
setle
inc
add
test
orl
mov
mov
push
js
xchg
push
or
mov
mov
or
push
int3
jne
outsb
fists
lret
sub
push
mov
add
xchg
data16
or
mov
sbb
es
test
out
arpl
inc
insl
mov
and
and
pop
xor
mov
lret
xchg
insl
dec
repnz
push
sbb
cmp
cwtl
dec
sbb
dec
mov
loopne
rcrb
add
lcall
pop
push
fdivrl
add
stos
push
lods
ds
lock
scas
mov
dec
bound
imul
adc
pop
mov
js
out
fistps
mul
pop
les
mov
xor
pop
stos
sbb
jnp
adc
ret
shrd
mov
sub
fldl2t
inc
sub
sbb
in
in
jmp
or
lcall
pop
hlt
hlt
xchg
mov
insb
pop
hlt
sub
dec
stc
lret
insb
aam
sbbb
xor
outsl
mov
lock
loope
cwtl
insb
je
push
daa
cmpsb
sbb
cmp
add
and
sbb
or
scas
cmc
arpl
sub
xor
dec
stos
stc
pop
push
mov
stc
arpl
or
push
int3
and
enter
jp
js
fwait
push
push
filds
pop
pop
xchg
and
scas
popa
xor
xchg
in
cmpsb
mov
jo
in
fidivrl
fnop
fstps
inc
sub
aaa
cltd
dec
mov
aad
adc
pop
into
imul
leave
hlt
inc
les
mov
fstpt
andb
xlat
and
leave
adc
pop
cwtl
sbbb
in
xor
bound
jl
in
mov
jl
pushf
gs
dec
and
sub
sub
ds
mov
sub
xor
stos
shlb
clc
jne
adc
fadds
adc
out
xchg
test
fsts
inc
ja
in
pop
push
test
loop
incb
jmp
popf
fldt
jl
ret
stc
xchg
xchg
jl
add
push
dec
dec
push
ljmp
imul
iret
fbstp
loop
test
pop
lcall
pop
test
cmc
jb
xor
add
dec
xlat
push
pusha
in
ret
daa
stc
cmp
sub
into
jns
adc
fs
icebp
stos
or
imul
jp
daa
int3
adc
aaa
push
xchg
push
pop
fwait
insl
pop
outsb
dec
fcomps
xchg
dec
xchg
pop
mov
pop
fs
inc
addr16
mov
je
and
lods
aam
into
mov
mov
adc
adc
jl
addl
mov
xor
push
mov
push
jb
adc
xor
lods
lds
std
out
fiaddl
sbb
and
mov
dec
aad
addl
xor
ret
test
xchg
popa
lods
cld
call
inc
mov
mov
push
mov
pushf
adc
jno
or
dec
xor
movsl
cmc
mov
lds
std
pusha
sbb
jno
and
xchg
or
mov
fst
lret
mov
inc
repnz
repnz
sub
rorl
out
adcb
mov
adc
lea
movaps
mov
add
stos
sbb
cmpsb
andl
lods
fsubrs
sbb
push
sub
xor
mov
les
inc
enter
mov
loop
out
and
arpl
pop
test
icebp
xchg
ret
add
mov
int
and
movsb
add
sub
lods
jecxz
mov
movsl
fwait
mov
insl
int3
mov
mov
mov
or
mov
out
sub
mov
inc
aam
mov
dec
ret
dec
push
pop
stc
jo,pt
lock
pop
fnstcw
jl
sbb
leave
dec
gs
jns
sbb
push
sti
mov
mov
jno
scas
cli
sbb
sahf
add
sub
pop
mov
jle
fadds
incl
popa
mov
ss
dec
add
int3
and
sbb
push
notl
add
xor
out
or
pushl
xlat
lds
xor
and
sub
jae
mov
push
ja
xchg
add
adc
cld
xor
mov
xor
jno
insb
rclb
ss
sbb
sub
mov
xchg
cmpsb
cld
add
iret
sub
dec
xchg
mov
push
mov
cmp
mov
fs
idivb
inc
in
test
in
jne
shl
cmc
imul
addr16
out
pop
push
pop
and
jge
adc
lret
mov
xor
iret
and
xchg
aam
shll
mull
jnp
pop
xchg
fs
imul
dec
xor
cmp
xchg
xchg
rcll
scas
in
orb
pop
addr16
push
inc
shlb
pop
repnz
mov
xor
pop
jb
ljmp
pop
outsl
push
xchg
test
jle
repz
dec
add
aas
or
sbb
das
cmp
in
iret
std
xor
repz
mov
leave
mov
popa
pop
dec
fstpl
add
nop
icebp
push
and
pushf
mov
xchg
mov
mov
pop
out
stc
dec
mov
pusha
sub
mov
dec
andl
cmpsb
pop
mov
lcall
in
sub
dec
divb
mov
cld
lret
xor
lods
xchg
push
stos
push
mov
inc
mov
xor
or
sahf
fmuls
xchg
mov
std
out
pop
mov
test
cmp
mov
xor
iret
cmp
and
adc
and
mov
je
dec
inc
pop
inc
inc
je
push
and
xchg
add
sbb
mov
or
shlb
mov
je
pop
pop
in
sub
repz
inc
mov
neg
sub
inc
je
mov
mov
mov
fadds
jmp
or
daa
in
fnstsw
in
mov
aaa
add
fisttpll
xor
out
repnz
inc
outsb
xlat
test
mov
mov
inc
outsl
pop
lock
sbb
outsb
sahf
adc
lock
test
lahf
xchg
pop
dec
xor
iret
insb
je
mov
push
pop
add
add
rcrb
and
ret
mov
in
jecxz
je
aad
mov
jo
xor
push
mov
mov
loop
adc
dec
out
add
dec
xchg
test
imul
test
lcall
jo
jnp
stc
sti
shr
dec
inc
xor
test
dec
xor
dec
mov
shr
xor
mov
jl
push
xchg
lock
and
ds
or
mov
call
data16
mov
xchg
mov
and
ja
adc
jns
inc
testl
js
frstor
jge
sbb
inc
or
sbb
push
sbb
or
enter
lods
mov
les
xor
mov
stos
shrl
cmpsl
mull
cmpb
dec
push
fstpl
sbb
lock
test
outsb
push
daa
and
mov
mov
imul
push
cwtl
stos
push
mov
pop
frstor
or
jle
mov
nop
loope
pop
adc
push
test
xchg
xor
sahf
lods
fcompl
jle
sbb
push
mov
in
pop
adc
cmpsl
pop
or
dec
and
das
test
mov
pop
in
pop
cli
mov
aam
scas
movsl
test
mov
movsl
call
divl
xlat
jl
inc
shll
mov
jmp
rcl
mov
push
enter
mov
inc
int3
mov
out
arpl
je
in
rolb
into
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
jp
mov
jge
or
jp
xor
pop
clc
jno
iret
jbe
ret
mov
imul
xchg
jnp
push
mov
dec
in
sbb
cwtl
xlat
lea
sbb
xchg
mov
adc
dec
lahf
je
lea
ss
cwtl
xchg
and
mov
ret
cmp
mov
xchg
out
sub
bound
xor
call
icebp
jo
scas
or
outsb
cmp
aaa
cli
lcall
mov
mov
or
lret
dec
pop
and
sbb
jo
pusha
gs
add
xlat
jns
mov
and
aaa
fcoml
pop
lds
fcmovnbe
cmpb
xchg
fisubrl
mov
arpl
xchg
or
mov
sub
inc
cmp
cmp
dec
cmpsl
aas
lods
mov
and
clc
xor
jg
fcmove
push
push
jne
xor
stos
fsubp
and
pop
xorl
popa
xlat
push
and
dec
push
jge
push
mov
cwtl
lret
lret
xor
in
rorb
adc
or
pop
add
or
sti
mov
xchg
or
aas
inc
cli
sub
fdivs
test
aam
push
movsl
cmp
mov
icebp
mov
adc
pop
add
subl
inc
repz
int
cmpsb
jg
push
xchg
scas
aaa
out
push
jb
mov
aas
mull
dec
sarb
inc
cmc
cwtl
mov
mov
sbb
jb
add
ror
in
js
push
inc
int3
jl
xchg
mov
jae
sbb
rol
jp
das
addr16
into
adc
mov
inc
xchg
sbb
out
imul
or
dec
mov
fs
cmpsl
inc
push
clc
outsl
xchg
int
push
fsubrs
adc
push
sbb
and
xor
mov
jnp
in
push
push
ja
mov
ja
out
imul
adc
xchg
test
insb
enter
repz
xchg
es
and
dec
inc
fcomps
je
dec
lahf
inc
leave
loop
dec
xchg
mov
add
orl
xor
and
sub
and
add
jbe
rclb
cmc
cmpsb
cmpsb
ds
push
mov
mov
mov
rorb
nop
jge
mov
shl
pop
cmp
and
pop
mov
adc
addr16
test
push
es
push
pop
cli
pushf
lcall
scas
cmc
mov
push
jl
lahf
popl
rcr
inc
dec
sbb
jns
insw
push
icebp
flds
jp
rorb
mov
mov
jmp
xchg
enter
loopne
mov
mov
out
dec
lock
dec
cli
push
jo
leave
mov
and
int
xor
hlt
mov
or
fdiv
jl
outsb
pop
into
pop
inc
out
sbb
xchg
stos
jno
push
jnp
in
mov
enter
and
mov
push
sbbl
mov
cltd
loope
cltd
adc
or
icebp
lds
and
or
cmp
sub
cmp
or
mov
cmc
enter
mov
mov
jbe
shrl
out
repz
xchg
fstpt
fsubrs
ss
sub
jle
and
sbb
or
rcll
aam
loope
push
mov
test
mov
out
test
sub
add
fs
je
dec
arpl
lods
xor
repz
scas
xchg
cs
jno
fisubrs
stos
push
sub
sbb
cmp
dec
leave
or
mov
or
push
dec
add
and
pop
pop
mov
in
pop
paddsb
xchg
cmp
lock
mov
cmpsl
aas
bound
xchg
sbb
test
or
xor
inc
cmp
hlt
ret
clc
fnstenv
xchg
mov
inc
mov
sub
sti
pop
jg
shlb
push
jo
pop
jbe
repz
or
xlat
jns
add
int3
sub
popa
pop
ja
and
push
sar
rcrb
testl
push
xor
xchg
xchg
or
leave
ds
push
sbb
sub
aam
and
jge
icebp
js
push
in
lcall
jmp
pop
lock
loopne
mov
and
jp
ficoml
adc
std
xchg
outsb
lahf
sub
hlt
and
shll
ja
push
and
in
loopne
int3
cmp
movsb
daa
sbb
test
clc
rclb
dec
inc
add
testl
in
xchg
test
mov
je
mov
in
push
mov
sub
rcrb
push
pushf
pusha
repz
clc
mov
scas
jne
pop
cmp
inc
out
or
fadd
mov
cld
outsl
setg
pop
in
add
ret
rcrl
dec
xchg
mov
xor
aam
mov
insl
xchg
push
sbb
mov
inc
and
cmp
daa
or
gs
mov
cmpsl
dec
mov
mov
test
clc
cmp
pop
xor
lock
call
sarl
xchg
jp
and
cmc
mov
pop
into
sub
outsl
ret
mull
fldz
push
in
loopne
lods
bound
cs
adc
lcall
shl
in
iret
jmp
gs
inc
mov
lock
sub
push
lret
xchg
dec
push
cmp
ds
mov
popa
ss
jecxz
sub
imul
inc
outsb
jge
daa
aad
aas
jmp
ja
rolb
rcrl
adc
dec
test
sbb
xor
lcall
addb
in
pop
ret
stos
and
imul
out
rcrb
popa
sbb
xchg
add
and
inc
mov
push
or
xchg
stos
pop
pusha
stos
ret
xor
adc
inc
fildl
mov
xchg
repz
ljmp
pop
sub
outsb
pop
xchg
xor
pop
out
stos
loopne
icebp
inc
inc
cltd
mov
push
cmp
je
inc
cmp
mov
fs
jnp
pop
jb
ds
out
dec
mov
imul
repz
adc
xchg
divb
jo
cmpl
outsl
ss
popf
pusha
sub
pushf
rcl
cmpsb
rcl
lds
push
mov
xchg
lods
and
std
imul
iret
dec
pop
pop
sahf
xor
fimuls
std
dec
les
aaa
add
test
mov
lret
and
popf
inc
clc
into
push
or
andb
ret
push
faddl
adc
imul
stc
pop
xchg
mov
push
pushf
jns
xchg
adc
rol
mov
pop
sub
call
sbb
pop
mov
mov
ficoms
ljmp
xchg
jge
fdivr
sbb
pop
clc
gs
andb
lock
xorl
lock
dec
into
jae
mov
mov
fdivrl
xchg
mov
fwait
add
add
ret
jno
xor
pxor
cltd
insb
fs
pop
imul
movsl
inc
ds
push
pop
mov
insl
stos
pop
jae
and
in
clc
xchg
les
inc
mov
loop
popa
mov
lods
mov
push
pop
pop
push
dec
add
loope
sbb
add
insb
hlt
xor
out
subb
fsubp
sbb
add
mov
and
mov
mov
pop
inc
cmp
pop
add
adc
push
repz
or
adc
pop
mov
shll
mov
inc
imul
add
inc
sub
fsubrl
sbb
clc
aad
add
daa
js
and
add
lock
dec
aas
jg
cmpsl
fisubl
outsb
and
inc
cmpsl
and
out
test
cmp
push
sbb
pop
and
hlt
jecxz
inc
jne
mov
push
dec
sub
adc
adc
lds
xor
push
leave
add
lods
ja
xor
inc
stos
push
xor
cmp
mov
ss
cmpsb
xchg
jb
mov
cmp
inc
sbb
into
dec
adc
mov
insb
push
insl
sub
push
or
sti
sbb
mov
fs
pop
pop
jo
jnp
popf
mov
int3
cs
cmp
popf
pusha
add
mov
adc
adc
imul
pop
aaa
stc
bound
push
xor
push
mov
or
inc
les
fdivrl
pop
fisttps
xchg
rcl
pusha
sub
ja
mov
imul
fsubl
xchg
push
mov
fnstcw
ficoml
inc
pusha
mov
daa
add
dec
dec
mov
jg
fisubl
test
add
xchg
fnstcw
imul
rorl
bound
out
leave
and
pop
add
adc
je
fdivr
sbb
add
inc
idiv
mov
pop
jg
ret
sub
sub
imul
rolb
add
add
or
push
out
imul
mov
sar
jle
push
lret
cltd
ja
push
das
stc
lea
jecxz
stos
iret
fdivp
cmc
arpl
add
hlt
or
inc
lret
dec
cs
in
daa
subl
mov
cmpsb
cmp
mov
sbb
inc
fs
inc
outsb
pop
mov
pop
mov
mov
or
mov
jns
sbbl
mov
inc
sub
or
hlt
sbb
ret
shll
sub
push
dec
ds
push
sbb
pop
ror
push
pop
push
mov
out
jno
cli
push
and
ss
sti
mov
mov
pop
mov
enter
mov
mov
mov
xor
push
or
sub
fs
push
js
scas
mov
mov
idivb
push
insb
inc
mov
sbb
pop
daa
sub
lahf
dec
push
xchg
ficoms
pop
int3
pop
lock
ds
je
fldt
shr
xchg
or
fcmovnb
mov
test
clc
out
stos
ficompl
and
insb
inc
repnz
ret
icebp
sub
jnp
aaa
push
dec
mov
mov
insb
fs
push
imul
bound
je
rcl
push
inc
pop
mov
sub
loopne
mov
mov
xchg
je
stos
insb
pop
xor
aas
sub
into
xchg
repz
inc
sbb
xor
pusha
popl
fimull
jle
lcall
pop
cmp
dec
shrb
rcll
pushf
add
popf
push
lods
loopne
mov
pushf
mov
frstor
into
ror
push
aas
inc
jmp
or
test
jne
push
mov
jo
stos
ret
and
fidivrl
cmp
insw
scas
rcll
idivb
nop
repz
xchg
push
pop
ds
clc
push
out
mov
jno
stos
push
cmpsl
int
push
push
in
ds
pop
sub
xchg
in
mov
xchg
jp
lods
sbb
xchg
inc
aam
cwtl
xchg
rcrb
adc
dec
scas
push
adc
gs
je
fldt
lahf
pop
fwait
fwait
adc
add
cmp
mov
jno
sub
pop
lods
iret
mov
pop
pop
leave
movsl
and
mov
lcall
pop
and
lds
xchg
xor
mov
ss
pop
movsl
lea
cmp
xlat
stos
pop
push
adc
mov
push
imul
stc
std
sti
rolb
nop
test
test
mov
push
sbb
or
or
lcall
lret
je
int3
scas
or
lds
cmp
cmp
fsubr
or
mov
dec
cmp
notb
sbb
in
enter
or
or
shll
pop
xchg
push
outsb
icebp
pusha
sbb
xor
outsl
mov
or
fistps
lcall
jae
in
bound
and
sub
outsb
cmp
xor
push
jle
lret
pop
rorl
insb
gs
lcall
xchg
sbb
stos
xor
sub
mov
sub
and
bound
out
jb
dec
mov
mov
iret
daa
pushf
sti
mov
jmp
dec
push
jle
dec
sub
xlat
inc
jnp
or
aaa
or
addb
and
pop
fsubrl
mov
push
sbbb
pop
push
dec
pop
clc
movsl
xor
lds
adc
pop
js
push
ljmp
sbb
sub
mov
adcb
add
lcall
aas
out
adc
mov
fwait
fwait
push
push
std
ret
and
xor
call
sbb
cmp
test
ljmp
pop
js
xchg
das
pop
dec
pop
pop
or
ja
into
movsb
insb
and
sub
pop
pop
clc
ret
mov
mov
push
push
xchg
mov
mov
fwait
aas
out
add
add
sub
cmc
pop
imul
pop
cltd
subb
jmp
and
fwait
into
add
shll
xchg
mov
push
xchg
adc
fcomi
push
in
fmull
lcall
insb
lds
adc
imul
push
sti
push
xchg
jno
sub
mov
data16
nop
je
iret
movl
insl
add
push
hlt
mov
jo
nop
enter
stos
add
xchg
repnz
insl
aaa
nop
lcall
cmp
idivb
xchg
mov
jno
sbb
daa
inc
and
jno
dec
outsl
inc
mov
popf
or
jle
lods
mov
sbb
loope
andl
mov
fmuls
sub
push
xchg
push
outsl
filds
loopne
bound
or
and
adc
mov
jle
pop
cmp
push
adc
pop
xor
rorl
sbbb
nop
cmpl
rcrl
scas
sbb
fstpt
sti
arpl
add
adc
fwait
dec
call
and
cmc
xor
xchg
jno
add
filds
lret
adc
repz
jbe
and
and
inc
ja
mov
jmp
sahf
ret
cmpsl
fbstp
fildll
jne
adc
mov
xor
xor
leave
sti
cmpsl
add
lods
push
add
or
pop
mov
adc
nop
add
test
fsubrl
push
mov
jnp
call
iret
mov
cmpl
xor
or
mov
mov
out
add
cvtdq2ps
arpl
stos
int
cmp
ja
sarl
daa
mov
cmpsl
das
xor
bound
lea
mov
stos
inc
pop
gs
cmp
jns
sbb
adc
jl
in
adc
adc
scas
ljmp
shr
jecxz
sub
dec
int
mov
sbb
or
push
loop
jecxz
xor
cmp
jp
or
incb
cmpsl
div
xchg
adc
and
stos
repz
lcall
in
stos
testl
cmp
loop
push
cmp
xchg
xchg
mov
in
fnstenv
test
dec
not
add
mov
cs
loop
scas
fisubrs
push
jl
sub
mov
lods
rcll
sbb
dec
pusha
sti
test
lea
or
js
adc
aas
daa
lret
or
testl
icebp
mov
adc
add
repz
fwait
insl
das
add
int
cmp
jno
sub
cli
std
daa
loope
xor
leave
add
sbb
int3
mov
inc
push
lea
fcomp
mov
xorl
xor
mov
ret
or
stc
dec
mov
test
aas
mov
xchg
or
test
and
add
test
iret
push
pushf
imul
or
repnz
sbb
sbb
mov
shrl
push
push
sbb
dec
scas
xchg
int3
pop
std
adc
in
adc
test
popf
inc
data16
sub
cmpsb
cmpsl
in
jae
scas
testl
fnstsw
xchg
aaa
lods
ds
jp
mov
hlt
pushf
fsubrs
lods
xlat
and
out
mov
pop
push
xor
add
and
jge
lds
cmpsl
pop
sub
test
sbb
andl
mov
mov
sub
pusha
or
leave
ret
int
sti
jg
paddq
and
pop
or
insb
dec
pop
arpl
enter
dec
pusha
hlt
rcrl
jmp
add
jno
flds
mov
mov
pop
jmp
cli
gs
xor
mov
scas
das
push
push
lahf
pop
pop
std
inc
and
push
pop
sbb
sub
test
loopne
pop
adcb
fiadds
pop
push
repnz
dec
sub
icebp
lret
pop
repz
pop
stc
cmc
dec
or
sbb
pop
cmpsl
sti
pop
arpl
in
push
daa
cmp
je
jbe
out
xorb
xchg
push
movsl
mov
xchg
dec
add
mov
sub
in
pop
insb
and
mov
inc
dec
xchg
and
dec
xchg
lret
les
sub
lods
and
fs
add
pop
in
not
iret
inc
roll
repz
cmp
xor
mov
scas
cmp
mov
aad
cmp
std
jp
jo
push
mov
sub
push
fnstcw
lea
jp
adc
lret
cltd
or
loop
mov
adc
jp
decb
xor
push
stos
movsl
data16
imul
jge
xchg
cmp
addb
int3
inc
rclb
out
mov
movsb
sbb
and
loopne
in
movsb
mov
jecxz
xchg
aas
pop
out
pop
or
sti
pop
or
jno
mov
jmp
in
pop
dec
movsl
cmpsb
mov
hlt
pop
push
mov
adc
insb
test
int
push
add
xchg
cmpsb
dec
or
xchg
stos
fbstp
and
stc
ret
int
sarl
pop
outsl
xor
xchg
sahf
cmp
popf
xchg
or
pop
xor
les
xor
cltd
mov
lcall
call
call
xchg
push
or
insb
dec
fsts
mov
pushl
arpl
clc
dec
push
es
imul
adc
and
insb
xchg
outsl
fsubrs
lcall
int3
shrb
aam
add
test
and
jb
jle
test
xchg
fldl
int3
dec
stos
and
loopne
mov
cmp
dec
sub
pop
into
push
rcl
lahf
inc
dec
pusha
xchg
sbb
test
aam
fisubs
arpl
pop
rclb
je
shr
sbb
scas
sbb
sti
push
jmp
pusha
cltd
xor
push
stos
imul
mov
fists
lcall
inc
mov
xor
cmp
sbb
mov
mov
lock
test
loopne
mov
cmc
sub
mov
adcl
pop
into
sarb
fnstenv
pop
push
rolb
dec
rol
int
ret
jp
ds
mov
sbb
iret
call
adc
dec
inc
cmc
dec
jecxz
roll
movl
popa
rclb
sub
pusha
add
leave
xlat
outsl
ror
fildll
cwtl
shlb
mov
fs
js
mov
sub
jb
mov
pop
push
ficomps
test
cmp
lea
rcr
scas
fldl
ljmp
sub
jno
call
adc
pushf
or
xor
sbb
xchg
inc
movsb
cmp
and
arpl
cmp
out
cmpsl
loopne
cltd
pop
xchg
xchg
movsl
insl
popa
cmp
sbb
and
rorb
cmp
aad
inc
popa
enter
aas
xchg
into
xchg
adc
insb
lret
call
subl
dec
add
mov
cs
lods
lret
fsubrp
enter
stc
decl
fs
xchg
sbb
sbb
test
push
inc
mov
mov
sbb
inc
cmp
imul
mov
inc
pop
fisubs
cmp
or
lea
in
push
std
pop
mov
inc
cwtl
cmp
push
mov
and
inc
insl
jmp
sbb
cmp
mov
and
call
dec
sub
mov
xor
subl
mov
std
shrb
ds
dec
sub
test
in
sbb
or
cmp
fs
pop
shr
arpl
jle
xchg
xor
fwait
mov
push
pop
ss
xor
push
inc
mov
xchg
enter
jo
mov
sbb
xchg
sbb
jge
pop
xchg
out
jmp
xor
cmpsb
lcall
daa
clc
into
add
pop
push
cmpsb
adc
std
xchg
popf
mov
sahf
xor
arpl
cmpsb
mov
packssdw
lds
int
rorl
push
cld
outsl
add
pop
and
rorl
inc
and
mov
jecxz
mov
les
gs
stc
push
push
cmp
xchg
xor
adc
fidivs
pop
mov
xchg
test
out
xchg
mov
loop
xchg
pop
mov
adc
mov
sbb
outsl
dec
nop
cmp
pop
pop
mov
hlt
xchg
repnz
pop
jle
insl
stos
jne
loopne
add
mov
sahf
loop
mov
push
cltd
sti
cmp
xor
lcall
inc
std
jno
js
adc
or
and
fcmovb
bound
mov
mov
pop
fadds
pop
jge
lahf
enter
xchg
sub
sbb
int
xor
lock
add
out
sub
lret
mov
movsb
mov
mov
inc
jl
pop
mov
pop
mov
xchg
sbb
stos
adc
cmp
repnz
inc
pop
xchg
das
out
aad
outsb
pop
fbld
or
repnz
add
and
push
insl
sub
sub
aaa
inc
cs
xor
lock
cmp
out
ret
mov
imul
in
jne
cmpsb
push
pop
push
xor
rorl
cmp
insl
jne
dec
xchg
jns
ret
test
stos
mov
mov
sub
sbb
xorb
jecxz
call
and
popa
mov
xchg
adc
cmp
mov
sbbl
fdivrs
and
cmp
outsb
rcrl
sub
cmp
orl
fisubs
xchg
push
mov
fsubrs
and
sahf
jno
jl
stc
add
decb
es
xchg
or
sub
mov
mov
out
jb
leave
cmp
jae
dec
ret
pop
enter
clc
leave
mov
xchg
xchg
add
dec
aas
jecxz
push
mov
xchg
insb
push
cli
pop
xor
xchg
insb
lock
pop
mov
sub
stos
push
decl
pop
mov
jle
xchg
and
test
into
mov
sub
sarl
subl
es
cmpsb
int
mov
in
dec
dec
hlt
repz
dec
dec
inc
das
ret
xlat
in
push
xchg
push
dec
dec
xchg
mov
mov
pop
stos
adc
data16
push
cmpsb
das
and
lret
sbb
movsb
sbb
js
call
adc
jl
pop
leave
or
mov
jecxz
jl
incb
inc
jmp
xchg
push
in
sub
mov
mov
mov
mov
mov
movsb
sbb
sbb
cli
clc
out
outsl
cmp
fdivrs
aas
test
mov
pop
std
loopne
lods
pusha
outsb
fs
dec
pop
adc
mov
cmp
inc
cmp
adcl
or
fldt
sub
pop
notl
adc
add
cmp
push
jg
in
not
inc
lds
stc
outsl
jle
ret
in
sbb
popa
lret
pushf
mov
xchg
cmp
jae
fisubrs
div
aas
fbstp
and
jmp
xchg
sbb
xor
or
cli
pushf
std
loope
xchg
popf
jecxz
arpl
sub
push
ret
ljmp
push
movsb
sub
cwtl
test
insb
jg
and
dec
cli
push
pop
cld
loopne
inc
push
xor
push
jmp
or
or
loope
sbb
xchg
ljmp
ffree
inc
int
es
jne
pop
testb
jns
divb
cmpsb
xchg
js
push
call
or
push
frstor
inc
inc
cmpsl
adc
ret
push
push
shlb
cmc
imull
or
mov
pop
call
mov
mov
jge
out
icebp
daa
lret
repz
fimuls
xchg
xchg
dec
xchg
dec
xchg
loopne
sbb
mov
imul
ret
push
orb
mov
pop
subb
cmpsb
stc
mov
imul
adc
mov
nop
cmp
sbb
push
js
test
int
inc
notb
lea
aaa
test
pop
dec
clc
jmp
decb
insb
sbb
pop
pusha
subb
in
xchg
or
jecxz
bound
add
into
dec
fbld
or
jmp
or
aaa
imull
lock
lds
aam
roll
dec
add
push
xor
jmp
inc
and
jo
pop
icebp
call
repz
cmp
testl
insl
lods
dec
push
and
outsb
bound
adc
pop
jno
ret
lcall
cmp
sub
popf
lcall
test
rorl
out
pop
loop
fidivl
or
jp
inc
lret
cmpsl
out
ds
sub
aam
xlat
sub
xchg
movsl
cld
fisttpl
cmp
filds
add
imul
aad
add
xchg
inc
push
pusha
mov
outsl
mov
xor
je
scas
loop
adc
ret
mov
push
aam
xchg
mov
in
and
shr
pop
mov
imul
js
push
mov
sub
inc
or
push
fnsave
fcomps
or
push
iret
pop
adc
fwait
rcrb
fwait
xor
negb
dec
pop
push
decb
pop
mov
clc
fildll
stc
stos
je
adc
mov
adc
push
dec
ljmp
in
pop
data16
clc
test
out
xlat
mov
loopne
pusha
fsub
ret
push
or
dec
sub
push
pop
jg
fwait
int3
repnz
cmp
xor
cmp
mov
lret
aas
cltd
push
pop
add
stos
out
xor
pop
cmpsb
xorl
xchg
mov
mov
dec
push
pop
pushf
stos
push
test
shl
mov
xchg
rclb
inc
mov
inc
fstl
std
pop
icebp
inc
or
movsl
sahf
test
divl
rorl
dec
cwtl
mov
or
xor
and
pushf
mov
gs
inc
mov
fimuls
jg
sbb
fisubl
pop
pop
sub
xor
xlat
pop
movsl
testl
cmpsl
icebp
in
mov
test
cld
les
jnp
fldenv
jns
and
mov
sub
test
out
ret
popf
xchg
lods
aaa
adc
fsts
stc
insb
mov
loop
aam
repnz
lahf
aam
imul
aas
insb
ds
cs
or
cmp
jp
popa
add
dec
inc
adc
ljmp
ja
mov
add
mov
adc
lock
dec
pop
mov
leave
fs
lcall
mov
icebp
mov
or
jge
gs
push
cmpsl
inc
xlat
adcb
lret
imul
add
inc
sbb
std
decb
jmp
addr16
dec
fnstenv
xor
dec
cmp
ret
mov
fldl
mov
inc
call
in
iret
push
bnd
push
adc
mov
int3
sbb
mov
push
test
sub
mov
ficompl
cmp
adc
push
inc
lret
stc
pop
sub
sub
or
add
xorl
ja
lods
test
xchg
cwtl
insb
sbb
loop
jo
xchg
sbbb
or
mov
add
add
inc
das
mov
adc
and
in
lahf
cmp
mov
stos
rcr
xchg
mov
sbb
mov
popf
inc
sub
or
push
fsubl
lret
and
add
jge
pop
pop
in
int
push
ds
ret
xchg
mov
cli
outsl
sub
add
or
sub
xchg
mulb
nop
inc
aaa
mov
cmp
test
adc
and
mov
inc
push
testb
push
pop
xor
mov
push
add
lea
jp
mov
xchg
fmull
in
test
stc
pop
xchg
repz
sbb
outsb
push
xchg
movsl
shr
xlat
jbe
fnstsw
mov
jnp
push
and
cwtl
jns
or
mov
icebp
ja
mov
cmpsb
repnz
mull
xchg
cmp
pop
cmp
repnz
lea
shlb
push
in
inc
mov
fyl2x
mov
mov
inc
fldcw
dec
shll
xor
loope
pop
leave
or
rcl
mov
jb
cmpsb
or
xchg
jp
mov
sbb
lea
mov
mov
jg
ljmp
stc
mov
push
inc
loope
xchg
push
xchg
fisubrl
pop
cmp
xor
sub
jmp
mov
push
lock
scas
iret
cmp
xor
cmpsb
push
xchg
data16
dec
push
std
add
cmp
add
movsb
cwtl
xchg
stos
sbb
mov
nop
mov
gs
imul
inc
jg
stc
and
mov
aaa
jmp
inc
add
es
dec
ss
fsub
mov
jnp
fsts
and
cmp
imul
jl
adc
inc
push
mov
cmp
orl
sbb
cmpsl
xor
stos
mov
popf
ror
xchg
add
sub
insl
push
sub
bound
mov
dec
imul
in
repnz
lea
cmpsl
mov
inc
cld
inc
lock
sub
scas
xor
xor
add
test
adc
add
push
inc
and
lahf
incl
mov
jp
mov
mov
and
xor
ret
xor
push
mov
cmp
push
adc
sub
jae
or
add
add
fsubrl
das
jg
daa
push
jg
or
call
or
jo
jmp
sbb
push
mov
into
pushf
or
sahf
xor
mov
and
pop
mov
bound
jb
push
mov
dec
outsb
add
adc
stos
inc
sahf
mov
stos
shrb
pop
ljmp
lret
out
stos
pop
iret
cmp
in
or
lret
inc
and
popa
inc
dec
add
lret
xor
add
orl
lods
sbb
cltd
push
and
sub
mov
loopne
push
mov
ja
fisubl
mov
adc
in
fmuls
mov
and
rol
in
sbb
jb
je
jno
push
mov
sub
mov
enter
xchg
test
imulb
xchg
fsub
fs
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
sti
enter
add
call
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
