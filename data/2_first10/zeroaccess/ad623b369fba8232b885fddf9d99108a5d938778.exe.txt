add
add
subb
add
add
add
add
xchg
add
cmpsb
and
add
lret
add
and
add
and
add
xor
add
dec
add
pop
add
push
add
jp
add
cwtl
add
lods
add
mov
add
fisubs
add
hlt
add
or
add
adc
add
and
add
xor
add
js
add
pop
daa
add
push
daa
add
mov
add
movsb
daa
add
mov
daa
add
in
daa
add
cli
daa
add
or
add
sbb
add
and
add
inc
sub
add
add
outsb
sub
add
add
pushf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
inc
daa
add
dec
and
add
and
add
xor
add
add
add
insb
gs
imul
add
add
push
mov
sub
movl
movl
movl
movzbl
cmp
jne
jmp
mov
cmp
jae
mov
mov
lea
mov
mov
movzwl
movzbl
cmpl
je
mov
mov
mov
mov
mov
xorl
mov
cmpl
je
xor
mov
subw
cmpl
je
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
mov
mov
cmpl
jne
mov
jmp
mov
movzwl
cmp
je
mov
jmp
mov
mov
add
mov
mov
cmpl
je
mov
jmp
mov
add
mov
mov
add
andb
mov
mov
movzwl
orl
cmp
je
mov
movzwl
cmp
je
mov
jmp
mov
add
mov
cmpl
je
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmpl
je
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movw
movw
mov
mov
mov
mov
movzwl
cmp
jle
movzwl
or
mov
mov
mov
mov
subl
mov
movzwl
cmp
jle
movzwl
or
mov
cmpl
je
xorl
cmpl
jbe
movzwl
cmp
je
movzwl
cmp
jne
xorb
cmpl
je
mov
jmp
movzwl
movzwl
cmp
je
cmpl
je
mov
jmp
mov
add
mov
mov
cmp
jne
mov
pop
ret
push
mov
sub
movl
movl
mov
mov
mov
mov
mov
push
push
push
pushl
pushl
call
mov
pushl
cmpl
je
call
mov
pop
ret
push
mov
sub
movl
movl
movl
mov
movzbl
mov
movzbl
sub
mov
cmp
jne
mov
movsbl
cmp
je
cmpl
je
addw
mov
add
mov
mov
add
mov
jmp
mov
mov
pop
ret
push
mov
sub
mov
pop
ret
push
mov
call
sub
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
movzwl
mov
mov
mov
add
mov
cmp
jl
cmpl
jg
mov
add
mov
cmpl
je
mov
movzbl
mov
mov
mov
add
mov
cmp
jl
cmpl
jg
mov
add
mov
cmpl
je
mov
cmp
je
mov
sub
mov
pop
ret
push
mov
sub
movl
push
lea
sub
push
cmpl
je
call
add
movb
mov
pop
ret
push
mov
sub
mov
pop
ret
push
mov
sub
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
pushl
pushl
push
call
add
pushl
pushl
lea
push
call
add
pushl
pushl
push
call
add
xorw
cmpl
je
mov
mov
addw
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
subw
cmpl
jne
mov
mov
mov
mov
mov
mov
lea
push
mov
push
subl
call
xorl
mov
add
mov
cmpl
jne
jmp
mov
mov
add
mov
cmpl
je
push
mov
mov
push
call
mov
add
mov
cmpl
jne
jmp
mov
mov
add
mov
addw
jmp
mov
mov
mov
mov
cmp
jne
cmpl
je
cmpl
jne
or
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
and
cmp
je
movl
jmp
movl
pushl
lea
push
addw
pushl
mov
push
call
mov
add
mov
cmpl
jne
mov
jmp
mov
cmpl
jne
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
xorb
movl
jmp
mov
add
mov
mov
add
mov
mov
mov
cmp
jae
movl
mov
mov
add
mov
lea
mov
mov
add
cmp
jne
xorb
cmpl
je
movl
jmp
mov
mov
add
mov
movzwl
mov
mov
mov
add
mov
mov
mov
mov
mov
add
andw
mov
cmpl
jne
cmpl
je
mov
mov
cmp
jae
mov
mov
add
push
mov
cmpl
je
push
call
mov
add
cmp
jne
mov
mov
jmp
mov
add
mov
jmp
cmpl
je
mov
cmp
jne
mov
mov
jmp
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
xorw
pushl
pushl
push
call
add
pushl
pushl
push
call
add
lea
push
lea
push
lea
push
mov
push
cmpl
je
mov
push
andl
mov
cmpl
je
push
cmpl
je
orw
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
andb
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
addb
mov
push
mov
cmpl
je
subl
push
mov
push
lea
push
lea
push
lea
push
pushl
mov
push
call
mov
add
mov
cmpl
jne
jmp
movl
pushl
pushl
mov
push
pushl
call
mov
mov
cmpl
jne
jmp
movl
mov
movzbl
sub
cmp
jne
mov
add
mov
cmpl
je
mov
cmpl
je
push
mov
cmpl
je
orl
mov
mov
push
mov
push
call
cmpl
je
xorl
addb
push
lea
push
lea
push
call
mov
add
mov
mov
push
mov
cmpl
je
xorw
push
mov
cmpl
je
add
andw
mov
mov
push
mov
push
mov
push
call
add
mov
push
mov
push
cmpl
je
andl
call
mov
orb
add
cmp
je
jmp
push
mov
push
call
mov
mov
push
mov
push
call
cmpl
je
push
mov
push
mov
push
mov
push
mov
push
mov
cmpl
je
push
mov
push
mov
push
pushl
mov
push
mov
push
mov
push
mov
push
pushl
mov
push
andl
call
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jae
lea
push
addl
lea
push
addl
pushl
call
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
mov
push
mov
push
call
add
lea
push
lea
xorl
push
pushl
call
cmpl
je
andl
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
addb
lea
orw
push
xorb
pushl
call
movl
movl
lea
push
mov
push
mov
push
call
add
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
lea
push
orb
pushl
mov
cmpl
je
call
mov
add
cmp
je
jmp
mov
mov
mov
mov
mov
mov
cmpl
je
push
mov
push
call
mov
add
cmp
je
jmp
mov
push
pushl
call
mov
pushl
orw
call
mov
mov
cmpl
jne
jmp
lea
push
mov
push
mov
push
mov
push
call
mov
orw
add
cmp
je
jmp
lea
push
lea
push
orl
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
lea
push
mov
push
mov
push
cmpl
je
call
mov
pushl
cmpl
je
movl
cmpl
je
mov
push
pushl
cmpl
je
call
cmpl
je
cmpl
je
mov
push
pushl
call
mov
pushl
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
addb
mov
add
mov
mov
add
mov
orb
mov
movzwl
add
mov
movl
mov
mov
andl
mov
lea
push
pushl
mov
push
xorb
mov
cmpl
je
cmp
je
mov
and
cmp
jne
movl
jmp
mov
and
cmp
je
mov
and
cmp
jne
subl
mov
and
cmp
jne
movl
mov
imul
add
mov
lea
push
mov
push
mov
mov
sub
cmpl
je
push
call
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
mov
movl
jmp
mov
add
mov
movzwl
cmp
jae
cmpl
je
subw
mov
imul
mov
mov
xorb
mov
mov
and
cmp
je
mov
and
cmp
je
mov
and
cmp
je
movl
jmp
mov
and
cmp
je
mov
and
cmp
jne
mov
and
cmp
je
movl
jmp
mov
and
cmp
je
subw
mov
and
xorl
cmpl
je
push
mov
xorw
mov
add
push
call
mov
imul
add
mov
lea
push
mov
push
subl
mov
orl
mov
sub
push
mov
mov
add
push
call
jmp
mov
mov
add
mov
mov
mov
andb
add
mov
mov
add
pushl
pushl
add
pushl
pushl
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
subw
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
push
call
add
xorw
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
mov
mov
lea
push
andw
call
add
andl
lea
push
call
mov
cmpl
je
call
mov
mov
subb
cmpl
je
jmp
mov
mov
mov
mov
add
mov
mov
and
cmp
je
mov
and
mov
orw
sub
cmpl
je
andw
movl
cmpl
je
mov
push
pushl
mov
cmpl
je
add
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
add
push
mov
cmpl
je
mov
cmpl
jne
jmp
lea
push
call
add
lea
push
mov
push
call
mov
mov
cmpl
jne
jmp
lea
push
call
add
lea
push
mov
push
call
mov
mov
cmpl
jne
jmp
movl
movl
lea
push
lea
push
pushl
call
mov
mov
cmpl
je
jmp
mov
push
pushl
mov
push
xorw
call
mov
mov
cmpl
jne
jmp
mov
push
mov
sub
push
mov
push
call
mov
mov
cmpl
jne
jmp
mov
push
lea
push
pushl
mov
push
cmpl
je
push
mov
push
pushl
cmpl
je
push
call
cmpl
je
cmpl
je
mov
push
pushl
mov
push
call
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
call
mov
mov
subw
cmpl
je
xorw
mov
cmpl
jne
jmp
lea
push
call
xorb
add
cmpl
je
lea
push
call
add
lea
push
call
mov
cmpl
je
mov
cmpl
jne
jmp
mov
mov
mov
lea
push
mov
push
cmpl
je
lea
push
mov
push
call
andb
mov
subl
mov
cmpl
jne
jmp
pushl
pushl
mov
push
call
mov
cmpl
je
mov
add
push
pushl
mov
push
pushl
call
mov
mov
cmpl
je
jmp
mov
mov
mov
addw
mov
mov
mov
movl
cmpl
je
cmpl
je
mov
push
pushl
mov
push
call
mov
mov
pop
ret
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
sub
mov
mov
cmp
jbe
jmp
mov
shr
mov
mov
add
mov
mov
jmp
mov
pop
ret
push
mov
sub
movl
mov
mov
orb
movl
mov
cmp
jae
mov
mov
mov
add
mov
mov
mov
cmp
jbe
jmp
mov
add
mov
mov
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
movb
cmpl
je
cmpl
jne
or
jmp
jmp
mov
add
cmpl
je
mov
mov
cmp
jae
mov
add
mov
mov
mov
add
movzbl
movzbl
cmp
je
or
jmp
jmp
mov
mov
pop
ret
push
mov
sub
mov
mov
cmpl
jbe
mov
sub
mov
mov
add
mov
mov
andw
movzbl
movzbl
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
add
mov
movl
movl
movl
movl
movl
jmp
mov
add
orl
mov
cmpl
jae
movl
jmp
mov
add
mov
cmpl
jae
pushl
mov
push
lea
push
call
add
mov
push
lea
push
pushl
call
jmp
cmpl
jne
pushl
lea
push
mov
push
call
add
jmp
mov
mov
add
mov
mov
jmp
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
addw
movl
jmp
mov
add
cmpl
je
xorl
mov
mov
cmp
jae
addl
mov
push
mov
add
push
pushl
call
jmp
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
mov
movl
movl
movl
cmpl
je
cmpl
je
cmpl
jne
or
jmp
mov
mov
mov
cmpl
jne
mov
mov
add
mov
mov
add
cmp
jbe
or
jmp
mov
cmpl
jne
jmp
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
add
cmp
jbe
mov
jmp
mov
mov
add
mov
add
cmp
jbe
or
jmp
mov
mov
orw
push
cmpl
je
mov
add
push
mov
add
push
call
cmpl
je
add
mov
cmpl
jne
jmp
mov
mov
add
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
mov
mov
mov
mov
mov
movl
movl
mov
movl
mov
mov
or
mov
mov
mov
imul
mov
movl
jmp
mov
add
mov
mov
cmp
jae
xorw
mov
shl
mov
shr
xor
add
mov
mov
shr
and
mov
mov
add
xor
mov
sub
mov
mov
sub
mov
xorw
mov
shl
mov
cmpl
je
orw
add
mov
mov
and
mov
mov
add
xor
mov
cmpl
je
shr
xor
cmpl
je
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
mov
mov
mov
subw
mov
mov
mov
movl
movl
mov
or
mov
movl
mov
mov
mov
mov
andb
jmp
mov
add
mov
mov
cmp
jae
mov
shl
mov
shr
xor
add
mov
mov
and
mov
addl
mov
add
xor
add
mov
mov
add
mov
mov
shl
mov
cmpl
je
shr
xor
add
mov
mov
shr
and
mov
mov
cmpl
je
add
xor
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
mov
mov
andb
mov
mov
mov
mov
movzwl
lea
mov
movl
jmp
mov
add
mov
mov
add
mov
mov
mov
movzwl
cmp
jge
mov
mov
mov
pushl
pushl
mov
push
mov
mov
add
push
call
mov
mov
mov
cmpl
je
mov
mov
push
mov
mov
add
push
mov
push
call
add
subb
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
add
mov
mov
cmpl
jbe
mov
mov
add
mov
cmpl
je
jmp
mov
add
mov
mov
cmpl
je
mov
mov
add
push
call
mov
mov
cmp
jne
movl
jmp
mov
cmpl
je
mov
mov
add
mov
mov
mov
add
andw
cmpl
je
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
mov
cmpl
je
mov
mov
and
cmp
je
orl
mov
mov
and
push
mov
push
call
cmpl
je
mov
mov
mov
jmp
mov
mov
add
mov
mov
add
push
mov
push
call
mov
mov
mov
mov
cmpl
jne
movl
jmp
jmp
cmpl
jne
jmp
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
mov
add
mov
pushl
pushl
mov
mov
push
call
cmpl
je
mov
movl
mov
cmpl
je
pushl
pushl
mov
mov
push
call
mov
push
pushl
call
mov
pushl
call
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
add
mov
mov
cmpl
jbe
mov
mov
add
mov
cmpl
je
mov
cmpl
jbe
mov
mov
add
cmpl
je
mov
mov
add
mov
movl
jmp
mov
add
mov
cmpl
je
orw
mov
add
mov
mov
mov
sub
shr
cmp
jae
andw
mov
movzwl
orl
sar
mov
mov
movzwl
and
mov
mov
mov
cmpl
je
jmp
jmp
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
movzwl
mov
mov
movzwl
cmp
je
addb
mov
jmp
mov
mov
add
mov
mov
cmpl
je
mov
jmp
cmpl
jne
mov
add
push
mov
add
push
mov
mov
push
mov
sub
push
call
mov
mov
cmpl
jne
mov
jmp
pushl
pushl
call
mov
pushl
call
cmpl
je
orb
mov
push
call
addl
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmpl
je
mov
push
mov
push
andl
call
add
mov
push
mov
push
mov
addw
cmpl
je
mov
mov
mov
mov
mov
mov
movl
pushl
pushl
mov
mov
push
mov
push
call
mov
mov
pushl
pushl
mov
mov
push
mov
push
call
mov
cmpl
je
andl
mov
mov
mov
mov
add
push
mov
push
mov
push
call
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
cmpl
je
push
cmpl
je
call
mov
add
cmp
jne
xorw
jmp
mov
mov
cmpl
je
mov
movl
mov
mov
mov
xorb
mov
mov
subl
mov
add
mov
mov
mov
mov
mov
mov
subw
mov
jmp
mov
push
mov
push
mov
push
mov
push
subl
call
add
mov
mov
pop
ret
int3
int3
int3
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sub
add
cmp
add
push
popa
and
dec
push
ja
jne
inc
inc
add
xchg
mov
inc
pop
mov
mov
jbe
lcall
xor
xor
mov
add
add
and
cmp
cli
inc
ds
notb
push
lock
rcrl
pop
sahf
xchg
cli
xor
mov
lock
repnz
xor
jecxz
aas
xchg
fwait
and
fisttpl
outsb
std
into
and
addb
stos
ljmp
cmp
jo
mov
sti
mov
movsb
fsubrs
jno
jno
jecxz
pusha
rorb
xchg
rcll
push
sahf
ret
cli
sbb
scas
fnstsw
jmp
mov
xchg
mov
dec
xor
ret
lods
dec
jp
popa
mov
add
lods
stc
and
push
bound
inc
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
outsb
inc
addr16
adc
fidivs
xchg
push
push
fiadds
cmpsb
lea
ds
les
and
xchg
jo
fildl
mov
mov
add
sub
popf
fimull
push
scas
testl
xchg
push
jno
jecxz
addr16
dec
xchg
incl
addr16
xchg
xchg
mov
or
lea
and
xchg
js
movsl
cmp
outsl
pop
scas
fidivl
dec
fwait
cltd
es
mov
nop
adc
lret
test
sub
mov
or
pop
fadd
push
sub
xor
das
mov
pop
addr16
pop
out
enter
push
mov
pop
inc
jbe
cmc
in
imul
xor
das
mov
pop
addr16
popa
push
cmp
mov
les
addr16
sbb
clc
stos
push
dec
push
mov
sub
mov
push
push
addr16
sbb
mov
mov
push
mov
adc
mull
les
inc
rcr
daa
jbe
mov
push
mov
loopne
or
adc
push
mov
les
dec
dec
jne
call
mov
xchg
push
jg
lods
jb
push
push
addr16
sbb
addr16
sbb
clc
stos
push
dec
push
mov
sub
mov
push
push
addr16
sbb
mov
mov
push
mov
adc
mull
les
inc
rcr
daa
jbe
mov
push
mov
jns
imul
inc
test
add
xor
dec
xchg
repz
hlt
or
and
or
int
mov
pop
dec
subb
xlat
mov
pop
xchg
je
bound
xor
sahf
xchg
repnz
insb
xor
and
pop
scas
jns
incl
push
lret
mov
jg
mov
pop
xchg
mov
aad
and
xchg
test
lods
dec
arpl
in
inc
add
arpl
jo
dec
pop
mov
add
scas
jo
cmp
notl
les
popf
mov
inc
inc
into
fimull
shlb
mov
int3
xlat
add
mov
sbb
push
stos
rcrb
aaa
lea
lds
xchg
jae
xlat
andb
sbb
aaa
rclb
jmp
inc
cltd
or
adc
push
inc
lock
inc
into
dec
outsb
icebp
cld
jns
popa
insb
fistps
cwtl
and
dec
fld
es
loopne
adc
add
fsubrs
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
mov
stos
mov
cs
and
hlt
jl
leave
js
rcrb
ss
lods
out
icebp
and
push
jb
push
adc
negb
in
popa
inc
xor
dec
iret
pushf
adc
mov
jnp
xor
mov
int3
je
dec
aad
and
testl
in
mov
and
sbb
fnstsw
cltd
mov
test
jae
test
fisttpll
lahf
mov
and
lock
and
dec
pushf
mov
hlt
push
cmpsb
and
cmp
xchg
idivb
in
ret
or
mov
arpl
repnz
and
adc
nopl
xor
mov
mov
xchg
fs
testb
jmp
gs
dec
push
sti
ret
pop
jg
mov
mov
jo
cwtl
xor
mov
sub
mov
popf
xor
sahf
test
sub
xchg
out
pushf
addr16
adcb
lahf
xor
and
out
movsl
stc
xchg
outsb
xchg
mov
cwtl
iret
stc
das
mov
jno
adc
ja
cmpl
jno
push
xchg
or
inc
adc
aad
lcall
mov
xchg
pop
xchg
fcmove
fstpt
aam
jle
jge
push
add
insb
inc
cmpsl
call
sub
loope
je
mov
jge
cmp
add
shlb
adc
mov
cs
popa
ss
aam
sub
frstor
jbe
sbb
lods
and
imul
add
adc
jo
pop
pop
ss
movsb
pop
into
fs
pop
cwtl
mov
aas
dec
xchg
insb
adc
adc
data16
scas
sahf
ds
in
stos
mov
ret
jl
scas
jns
jl
aam
pop
test
popf
dec
xchg
cmp
les
flds
mov
adc
repz
mov
mov
pop
add
pop
adc
xchg
or
dec
fcomps
int
cmp
xchg
aad
scas
roll
test
mov
pop
pop
int
xor
loopne
mov
push
inc
fcoms
in
xor
sbb
cltd
aad
mov
jb
xor
pop
jno
cmpsl
cmpsb
adc
and
lods
mov
mov
mov
inc
jg
xchg
aam
dec
scas
jae
fwait
or
adc
mov
jae
lods
cmp
int3
cli
xchg
gs
test
out
cmpsl
push
sbb
fisttps
and
dec
inc
jl
fwait
jmp
inc
add
in
xchg
jbe
or
in
jle
xlat
add
xchg
rol
or
test
popa
add
sarb
data16
push
repnz
ret
aaa
dec
fisttps
lock
in
cmp
and
xchg
fs
das
popa
cwtl
pop
jnp
fs
test
cmp
clc
push
pop
adc
xor
xor
or
jp
inc
xor
gs
out
rorb
gs
and
mov
sbb
dec
movhps
sbbl
in
mov
inc
and
push
cmpsb
jnp
mov
ja
push
mov
mov
jnp
into
mov
sarl
out
sti
fwait
sbb
xor
test
call
fildll
psubd
insb
outsl
push
lods
mov
xlat
push
pop
mov
mov
cltd
sbb
sub
jo
mov
or
bound
ret
or
sahf
scas
sub
pop
xchg
add
add
clc
xor
lahf
in
call
xor
mov
jmp
testb
dec
fnstsw
sbb
add
jge
cmpsl
lock
or
fxch
pop
imul
push
mov
xor
push
pop
scas
xor
outsl
pusha
lock
and
aas
insb
data16
lcall
xchg
jle
cmp
sahf
xchg
test
xchg
mov
dec
jge
sub
mov
push
inc
and
fs
sub
inc
and
xor
das
jp
mov
sbb
mov
cmp
sbb
cmp
push
pop
sbb
fisttpl
daa
pop
aaa
arpl
fimull
adc
rorl
fidivl
xor
vzeroall
or
cmpsb
jle
ret
movsb
fistpl
popf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
adc
or
add
stc
cwtl
aas
pop
and
cmp
adc
out
pop
push
mov
rcr
xor
jae
inc
mov
add
inc
sti
jo
mov
lods
testl
push
loopne
xchg
jne
cwtl
cmp
and
popf
popa
mov
push
jno
pusha
fwait
mov
pop
ja
dec
xor
shlb
jno
jmp
xchg
cld
mov
inc
bnd
adc
mov
adc
shlb
push
push
sti
and
rorl
cwtl
in
popa
push
test
icebp
dec
clc
cmp
into
xchg
cmpb
inc
cld
sub
mov
in
out
lea
xchg
cltd
pop
mov
sub
in
sub
jno
jno
sub
neg
int
xor
insb
clc
inc
ljmp
jbe
loop
push
mov
push
add
lret
enter
loopne
inc
insl
popf
push
in
pop
shl
out
cmp
test
les
imulb
cmp
mov
stos
sub
mov
testl
outsb
fisttpl
fdivs
xor
mov
lahf
stos
xor
xchg
add
mov
mov
or
les
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
push
add
mov
add
pop
in
call
bound
xor
enter
test
add
push
sbbl
add
inc
jmp
out
leave
imul
inc
push
in
and
ljmp
lcall
xlat
add
xor
ss
pop
xlat
xchg
ja
mov
xchg
mov
test
mov
xchg
adc
lret
adc
inc
push
lahf
lcall
sbb
bound
pop
test
mov
out
push
dec
insb
jg
mov
cmp
cmp
daa
and
push
iret
and
test
insb
repz
push
aad
add
jmp
sbb
sbb
push
and
mov
jbe
push
pop
insb
imul
leave
mov
decb
outsl
pop
sub
cltd
push
or
cmpb
mov
dec
dec
mov
popf
movsl
mov
jle
jmp
nop
data16
paddw
add
jo
xorl
out
push
or
sbb
ret
jns
insl
add
negl
pop
mov
jmp
shlb
dec
fs
sbb
xchg
jns
shll
mov
setno
mov
and
sbb
cli
loopne
mov
je
jl
or
xor
bts
push
mov
ljmp
and
dec
sub
lahf
sbb
sbb
xchg
and
mov
neg
sbb
roll
mov
mov
and
and
and
popa
rcll
outsl
stos
fcomi
mov
out
add
adc
jb
out
cltd
mov
push
in
lds
sahf
or
adc
and
loop
and
adc
or
imul
or
adc
pop
adc
movsl
and
sbb
bound
dec
lret
int3
xchg
push
adc
out
insl
push
push
rcl
lcall
arpl
and
xor
dec
mov
mov
scas
ss
adc
and
adc
or
xlat
xor
popf
adc
scas
loopne
jnp
icebp
adc
cmp
lods
push
sub
jo
mov
pop
or
dec
ds
mov
jo
outsl
dec
gs
push
popf
adc
out
cmp
mov
cwtl
sub
cmp
jecxz
out
cmp
xlat
icebp
data16
stc
out
xor
subl
data16
scas
adc
push
sbb
shll
test
push
sbb
loop
test
push
add
sub
fcom
adc
inc
rcrb
bound
adc
fucomip
hlt
or
xchg
iret
in
aam
addr16
mov
dec
sub
push
fimull
movsl
aaa
dec
sbb
push
imul
or
shr
sahf
push
aam
ret
fildl
hlt
test
inc
roll
aaa
arpl
aaa
pop
movsb
jecxz
dec
fldenv
into
or
push
das
mov
push
xchg
jge
xchg
cmp
ret
or
pop
cmpsl
sub
fwait
stos
sub
mov
or
test
or
stc
add
and
sbb
xor
cmp
das
cmp
sbb
imul
iret
ja
and
adc
sbb
mov
rcll
rol
push
xor
adc
adc
xor
gs
loope
les
loope
cmp
sub
in
mov
sub
and
jmp
and
in
push
inc
cld
icebp
out
jge
mov
in
inc
inc
adc
pop
arpl
xor
sarb
mov
dec
jne
push
loopne
push
dec
adc
or
push
out
scas
xlat
pop
push
dec
xchg
cmc
mov
mov
jb
xchg
test
xor
out
jns
mov
sbb
jmp
add
loopne
add
repz
push
add
xor
xchg
push
cmp
or
mov
aaa
leave
nop
ljmp
insl
inc
xchg
mov
push
adc
addr16
lret
rcrl
fistl
jmp
mov
insl
jae
icebp
dec
in
fdivrs
out
dec
andl
cmp
mov
daa
aaa
mov
aam
bound
sbb
xchg
lret
or
xchg
fcompl
jge
pop
aam
mov
popa
lcall
xchg
dec
xchg
ja
mov
insl
xlat
cmpl
hlt
mov
and
je
jecxz
adc
aam
ret
dec
jg
insl
call
addl
das
lods
mov
dec
push
mov
test
ficoml
sarb
xor
and
mov
pushf
sbb
push
and
lods
fwait
es
inc
arpl
cmc
into
cmp
test
ds
xlat
and
or
mov
loope
iret
xlat
imul
cmp
xor
cmc
vunpckhps
mov
int
and
mov
sbb
ret
cmp
inc
mov
lret
cmovns
jecxz
fnsave
inc
sbb
stos
in
aaa
add
xchg
fadd
sub
mov
shlb
icebp
shll
sub
mov
fistps
and
sbb
adcb
pop
pushf
mov
sti
loop
add
or
inc
add
sbb
xchg
iret
or
push
cwtl
dec
xchg
xlat
subb
jmp
xchg
out
and
mov
in
jbe
adc
lcall
inc
sub
rorb
jl
push
sub
jo
test
and
pop
jno
xchg
icebp
hlt
mov
dec
cltd
lret
mov
loopne
je
aam
pop
sbb
fxch
mov
out
sbb
and
outsl
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
repnz
add
add
mov
in
or
bound
mov
rcl
loop
movsl
xlat
cmp
mov
sub
inc
loop
push
mov
insl
movsl
push
popf
inc
pop
xchg
push
in
xor
lods
repz
dec
stos
and
sbb
rcrl
push
test
in
sub
mov
push
or
xchg
xor
cmp
push
loop
xchg
aas
repz
and
aas
sbb
pop
xchg
fildll
aaa
ret
mov
dec
xchg
adc
dec
out
pop
adc
nop
mov
or
or
cwtl
lret
pop
dec
inc
in
mov
loop
adc
xchg
popa
sub
fs
and
inc
nop
inc
jb
xchg
cmc
insl
lock
inc
mov
outsl
mov
push
jge
mov
jnp
in
pop
mov
lcall
dec
cmp
xor
lret
adc
push
xor
sbb
addl
pop
and
dec
adc
xor
lods
insb
jno
sbbb
push
jecxz
or
xor
bound
cmc
insl
xchg
jmp
xor
gs
cli
adc
fsub
cmpsb
or
iret
pop
imul
pop
orb
loope
clc
push
dec
aad
mov
pop
dec
ljmp
fidivrl
jecxz
or
movsb
xchg
lods
jle
push
or
push
ret
movsb
lods
mov
xlat
adc
in
or
lret
addb
loope
sbb
in
insb
or
push
mov
and
subl
addb
add
sub
nop
push
nop
fldlg2
push
pop
mov
nop
dec
ds
sarl
andw
mov
test
ds
lea
cmp
imul
xor
sbb
push
mov
xchg
xlat
jbe
jae
das
popf
xchg
lods
aas
jg
out
cmp
mov
push
int3
mov
and
adc
sub
or
sahf
push
ds
cmp
xchg
hlt
sub
push
or
repnz
and
jns
sub
movsb
inc
jecxz
mov
shrl
lcall
insl
pop
lods
pushf
add
xor
nop
and
scas
inc
adc
pusha
pushf
daa
cmp
add
xchg
sub
cli
mov
sti
cmpsb
rorl
mov
xchg
lret
out
pop
arpl
cmc
xor
pop
jns
ret
shrb
lds
and
add
and
outsl
mov
shl
sub
jo
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ljmp
add
push
stc
std
int
cld
data16
stos
ja
cmp
adc
dec
jae
loopnew
or
in
add
jmp
ret
pop
movsl
or
pop
and
lret
ss
int
les
shrb
pop
jns
push
jg
or
icebp
shrl
jle
stc
pop
call
cmpsb
loope
sub
inc
aas
push
add
imul
roll
push
push
stos
xchg
inc
dec
lods
cmp
cs
mov
test
lret
xor
mov
sbb
jecxz
cmp
push
insl
outsb
sub
aad
and
jne
rcl
pop
lcall
scas
mov
out
sbb
and
es
cltd
adc
xor
sbb
popf
nop
outsb
sbb
cmp
clc
stos
xor
sub
mov
push
jle
add
lcall
push
jo
lods
les
xor
hlt
inc
in
add
lods
vmread
pop
lret
add
push
mov
aad
in
mov
mov
fwait
out
roll
pop
cmp
decl
or
push
dec
decb
or
mov
xchg
or
lods
sbb
xchg
mov
mov
jecxz
or
pop
mov
insb
push
add
ja
loopne
test
lret
and
jnp
sbb
hlt
sub
or
cmpsb
mov
mov
mov
jae
sbb
inc
mov
push
push
int
js
scas
push
jge
xchg
add
jmp
incb
loope
rorl
fidivrs
or
pushf
inc
xor
mov
push
imul
or
pop
adc
mov
fdivl
mov
push
add
addb
jne
mov
decl
aas
sbb
xlat
fidivl
fdivrp
pop
aad
shlb
daa
out
into
js
stos
pop
jns
xchg
pop
idivb
inc
mov
or
iret
adc
jnp
insl
frstor
cltd
push
xor
rorb
lcall
ss
jbe
xchg
cwtl
jmp
inc
mov
repz
lds
arpl
push
cltd
stos
mov
fnstsw
addr16
shll
fistps
pop
arpl
rcrl
out
jns
sti
and
fldt
cli
out
jno
fnstcw
out
inc
sbbl
lret
cmpl
out
mov
dec
das
gs
jg
insb
xchg
mov
dec
mov
insl
icebp
rcr
shr
mov
lret
inc
int3
jo
adc
in
ret
sbb
xchg
cli
add
mov
push
mov
fbstp
push
jb
mov
or
out
xor
dec
dec
pop
cmpsb
scas
add
push
sub
movsb
and
mov
mov
adc
es
dec
insl
mov
bndldx
inc
or
push
ret
cld
sub
bound
divl
cltd
pop
dec
jmp
ja
mov
ja
or
insl
je
scas
jecxz
icebp
test
mov
mov
loopne
cmp
mov
out
jo
or
xor
or
out
stc
add
sbb
inc
loop
into
xchg
mov
mov
pushf
push
loopne
lock
adc
xlat
das
js
push
popf
cmc
popa
loope
addl
inc
ja
cltd
movsb
imul
and
clc
adc
add
add
cmpsb
mov
adc
test
test
icebp
pop
scas
xor
push
rcll
mul
or
rdtsc
cld
int3
mov
jae
fwait
lods
add
pop
orb
adc
outsb
adc
pop
mov
jns
test
aad
jg
cmp
and
imul
inc
repnz
dec
popa
fadds
pushf
xor
jbe
ja
jnp
int3
jno
cmp
outsb
push
shrl
push
dec
in
aaa
cmp
nop
scas
lds
rorl
in
push
mov
cltd
call
push
sub
sub
inc
inc
inc
sti
shll
inc
push
icebp
sti
in
jb
in
xor
adc
scas
test
xor
shll
sub
jo
sub
out
mov
lock
lods
xlat
popa
jl
pusha
dec
xor
sub
push
sub
mov
insl
lods
and
outsl
popw
push
jo
xor
ficoml
cmp
mov
pop
scas
push
lea
xchg
mov
or
add
fcmovnbe
push
cmp
sbb
mov
out
inc
push
mov
xchg
loop
aas
jae
mov
out
fadds
inc
push
pop
xor
push
cmpsl
and
int3
adc
xchg
imul
pop
lahf
inc
shll
leave
pop
push
dec
iret
arpl
pop
scas
movsl
push
or
sbb
popf
ja
fwait
popa
xchg
xor
xchg
mov
mov
mov
dec
out
movsb
mov
pop
dec
fcmovnb
sub
fsubl
lea
and
xchg
cmp
int
mov
mov
add
repz
push
xor
cli
mov
mov
daa
cmpsl
and
cmp
pusha
sbb
cmp
mov
push
jb
fwait
js
or
nop
push
clc
int3
js
mov
cld
rcl
mov
shr
pop
insb
pop
mov
hlt
dec
out
cld
inc
mov
enter
mov
outsb
aad
mov
sub
add
adc
push
adc
or
xor
adc
inc
and
cmc
push
xchg
add
outsl
outsb
lret
xor
push
gs
sub
push
test
clc
cmpsb
mov
jno
out
xchg
inc
xor
and
mov
mov
mov
lods
call
adc
aaa
add
cmp
push
push
inc
fdivrl
fisttps
push
push
cmpsl
adc
cmpsl
aam
and
cmpsl
out
stc
xchg
and
lods
rcl
fxch
daa
test
rorb
in
ret
sti
add
jbe
dec
sbb
dec
push
push
insb
jbe
aam
cmp
cmpsl
and
jg
ss
repnz
repnz
pop
cmp
dec
dec
dec
int3
mov
mov
dec
mov
mov
insl
pop
daa
pop
push
inc
or
jle
adcl
adc
iret
out
cwtl
aas
add
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
lds
add
xor
mov
lock
push
jmp
inc
test
addr16
pop
in
xor
push
aam
dec
notb
dec
pushl
insb
das
and
sub
xchg
jne
rcrl
cmc
roll
gs
dec
cmc
push
cmc
cltd
mov
jo
clc
cmp
movsb
pop
xchg
in
pop
out
mov
jae
lods
popf
clc
dec
jecxz
push
and
adc
mov
insb
ss
mov
nop
push
sbb
ds
mov
xor
sbb
and
xor
out
adc
mov
sbb
fistps
jge
das
add
adc
lods
jg
data16
orb
imul
andb
push
mov
cld
push
xchg
push
and
adc
ret
push
mov
dec
pop
inc
mov
dec
jae
mov
sbb
and
scas
sub
lcall
in
and
das
negl
mov
xor
lahf
add
adc
mov
mov
dec
in
xchg
mov
decb
or
repz
adc
xchg
rcll
push
push
dec
stos
sub
orb
icebp
pop
mov
or
pop
jbe
adc
jp
repz
inc
test
addr16
lods
xlat
push
jmp
and
fisubs
mov
test
jp
mov
dec
dec
aas
js
arpl
mov
push
xchg
push
adc
cmp
mov
arpl
dec
inc
mov
push
xchg
arpl
jnp
and
dec
sub
inc
fwait
mov
cmpl
or
cltd
xchg
inc
test
in
xor
mov
or
mov
out
aad
jl
js
jmp
push
data16
fiadds
jle
stos
cmp
cmp
lcall
outsb
add
iret
iret
inc
inc
jecxz
and
lock
push
cmp
inc
jle
in
inc
lahf
jecxz
mov
movsl
or
dec
mov
in
jge
mov
cwtl
push
int3
push
lretw
lcall
or
push
mov
aam
lock
test
and
gs
shrb
test
aaa
sub
leave
jmp
lahf
hlt
movsl
popf
pop
icebp
pop
pop
xchg
lods
cmp
filds
sahf
movd
dec
and
paddusw
out
jo
je
cmp
mov
xor
movsl
in
call
jp
cmp
jmp
sbb
xor
jecxz
sti
scas
jg
les
js
xor
add
jb
adc
xchg
fs
call
push
jnp
jno
jb
xor
scas
mov
or
loope
xchg
loop
push
test
es
and
pushf
ja
jg
call
inc
popa
stos
push
sbb
push
push
xchg
adc
cld
fcmovb
scas
ds
adc
mov
add
pop
outsl
inc
sbb
mov
clc
and
dec
stc
mov
push
fimuls
loopne
and
xchg
leave
pop
xor
fwait
das
fbstp
test
or
in
ror
sub
mov
test
loope
inc
mov
mov
lods
outsl
jmp
dec
xchg
add
cli
shrl
nop
jno
mov
movsl
in
movsl
loop
xchg
sbbb
push
fidivl
xchg
add
push
into
push
or
adc
xor
xor
xor
xor
faddl
add
add
add
clc
xchg
xor
rcrb
mov
test
lea
cmp
mov
leave
sub
mov
mov
sbb
push
pop
dec
fiadds
lds
nop
js
add
aam
xchg
lods
das
loop
or
mov
fs
pop
or
sbb
jno
daa
notb
dec
loopne
daa
push
dec
fwait
scas
in
mov
paddd
std
fs
mov
dec
sub
rcll
mov
test
push
popa
jmp
je
stos
mov
fnsave
loopne
in
aad
xchg
push
push
in
pusha
pop
mov
sarl
cmpsb
mov
xchg
push
dec
add
loop
jmp
pushf
xor
ret
fisubrs
sbb
push
pop
push
popa
and
pop
xor
pop
aas
jl
jae
mov
pushf
lods
xor
push
lods
testl
jmp
rcrb
rcr
and
in
lret
jo
xor
jecxz
test
mov
dec
adc
jb
mov
in
adc
cmp
pop
out
mov
shll
mov
cmp
aam
outsb
dec
lods
testl
and
cmp
cmp
pop
push
sub
data16
popa
xor
push
dec
clc
mov
sbb
sbb
inc
lea
push
pusha
push
imul
movl
cmp
lret
adc
mov
or
stos
mov
pop
mov
xlat
sub
fsubs
sbb
popa
aad
adc
test
and
dec
fstl
popa
lcall
test
ja
mov
icebp
out
call
dec
sti
clc
add
jb
loope
pusha
lods
fwait
sarl
jb
mov
xchg
cld
stos
mov
dec
daa
insl
lahf
sbb
mov
imull
dec
popa
mov
aam
cmp
jg
sbb
fldenv
jno
popf
mov
pop
ror
in
sub
enter
lret
push
mov
push
jecxz
rclb
dec
cmp
cmp
sub
sbb
imul
test
aam
adc
jne
dec
inc
add
lock
fucomi
dec
dec
sbb
leave
and
dec
cmp
and
pushf
ja
iret
inc
bound
inc
out
lea
aaa
or
lea
jecxz
or
lret
ss
jg
out
std
cld
xchg
cmpb
inc
mov
outsb
in
mulb
std
addl
fstl
push
lods
std
jns
mov
movsl
movsl
cmp
xchg
push
xchg
or
sbb
sahf
aam
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
add
lea
out
fs
mov
std
mov
test
mov
ret
dec
jno
fs
jae
xchg
test
sbb
stos
jae
cld
sbb
cmpsb
adc
sub
call
jge
mov
std
scas
paddb
icebp
add
push
outsl
lods
inc
inc
push
lret
add
or
jne
scas
daa
and
lret
cltd
pop
pushf
or
sub
in
int3
pusha
jae
mov
mov
shufps
pop
fwait
pop
sbb
ret
mov
shrl
lea
into
jbe
lahf
sbb
sub
cmp
push
add
loop
insb
jmp
cmp
push
xchg
push
adc
or
imul
or
lahf
lods
xchg
jae
jns
and
lods
stos
push
loopne
mov
mov
fsubr
inc
push
mov
sbb
int3
orb
jge
jo
int3
ret
mov
js
dec
test
inc
loope
push
daa
mov
fcmovbe
push
mov
or
test
inc
mov
xor
shrb
mov
enter
and
xchg
push
and
xor
xlat
and
pop
sub
loop
addr16
repnz
cmp
jle
cmpl
cmp
fyl2xp1
jmp
inc
movsb
push
iret
es
in
rcll
insl
push
or
cltd
xchg
xchg
enter
imul
aas
imul
std
mov
mov
cltd
sahf
dec
add
mov
and
jb
fprem
cmpsl
into
out
jge
mov
cmp
testl
jg
stos
mov
xorl
dec
inc
jg
xchg
js
mov
add
pusha
fcmovnbe
adc
dec
das
push
imul
pop
pop
fldt
cltd
mov
movsl
pop
je
shlb
aam
or
stos
jge
cs
xlat
and
mov
ja
inc
nop
sti
popa
mov
pop
mov
xor
pop
into
mov
cmp
mov
xor
mov
xor
xchg
shll
lods
stos
adc
test
jno
int3
cmpsb
scas
sub
clc
pop
fdivrs
aam
sbb
add
xor
mov
into
xchg
xchg
aam
mov
xorb
into
lods
sbb
sbb
shlb
cmp
cmp
rolb
daa
or
test
insl
out
cmpsb
shrb
push
xchg
jns
jno
or
adc
xchg
pop
mov
push
mov
call
out
pop
lock
adc
pop
ficompl
mov
fs
mov
jecxz
stc
xchg
popf
addl
mov
jnp
lock
scas
fimuls
xlat
xchg
xchg
sbb
inc
nop
stos
pushl
jp
push
xor
pop
mov
inc
xchg
daa
dec
inc
es
lret
xchg
mov
jb
jmp
fldenv
mov
xchg
push
sub
outsl
adc
xor
and
pop
push
jnp
jo
mov
xchg
cld
loopne,pn
mov
int
clc
lcall
mov
fcmovu
jmp
push
inc
inc
sarl
pop
inc
mov
dec
and
ss
mov
or
stc
pop
cmp
js
adc
out
ja
inc
xor
test
inc
test
xchg
ja
aad
sbb
mov
push
sti
testb
lods
add
or
mov
xor
outsb
subl
and
inc
sti
or
insb
addb
adc
dec
add
add
mov
lret
sbb
add
jecxz
dec
and
enter
repz
dec
jmp
fnstsw
mov
xchg
int3
gs
shrl
jns
sahf
pop
jmp
mov
jno
lock
mov
pop
es
lds
xor
lea
shlb
cmc
sub
mov
xchg
or
adc
test
arpl
fldenv
pusha
gs
and
xchg
and
cwtl
dec
mov
and
pop
pop
adc
xor
push
inc
ljmp
jae
mov
pushf
cmp
fistps
xchg
cmp
rcr
iret
mov
mov
jns
sub
fdivs
les
pop
pop
cmpsb
and
adc
dec
add
out
cmp
add
sub
lods
cmpsl
testb
int3
cmpsb
aad
inc
pop
pop
jg
or
call
xlat
ficompl
das
js
xor
pop
inc
sbb
xchg
in
mov
add
stc
rcrb
gs
push
xor
xchg
hlt
sub
aad
mov
xor
lcall
push
jmp
leave
inc
and
inc
loope
jmp
rcl
scas
pop
popf
loopne
fstps
mov
das
out
mov
in
sbb
sbb
repz
jp
inc
xchg
int3
add
inc
leave
loope
enter
and
adc
sub
xlat
dec
shlb
xchg
xchg
add
lods
sbb
jecxz
hlt
lcall
add
adc
xchg
leave
sub
call
jne
jge
lds
int3
daa
orb
cwtl
incb
sub
sbb
xlat
cli
dec
ds
and
push
or
ds
bound
cmpsl
pop
cmp
sub
xor
mov
jmp
fsubl
push
mov
mov
lods
cld
mov
sbb
fistpll
push
subb
popa
add
jl
adc
scas
hlt
mov
cs
fildll
rcr
mov
shll
lcall
fidivrs
and
test
xchg
pop
pop
call
push
out
movsl
rorb
xlat
and
cwtl
sarl
push
scas
out
jmp
push
and
or
cli
inc
mov
cwtl
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
add
jnp
add
sbbb
mov
fwait
pop
inc
dec
add
sbb
sbb
stos
addr16
push
insb
fcoml
out
fcompl
jae
jnp
addb
and
in
test
add
data16
xor
mov
or
inc
lahf
pusha
xor
add
push
push
data16
cmc
jne
and
pop
imul
push
aas
xchg
out
or
ljmp
xor
jp
fiaddl
jge
or
lcall
add
pop
adc
and
push
mov
movsb
sub
sbb
outsb
lea
xorl
notb
mov
movsb
push
xchg
ret
xor
dec
dec
or
mov
mov
mov
sbb
arpl
add
adc
xor
mov
sub
cmp
xor
push
xor
xchg
lock
xor
mov
das
push
nop
jp
lcall
jns
lock
and
call
inc
rcll
and
and
push
scas
cwtl
cli
sbb
or
xor
ficoms
sarb
or
pop
outsl
lds
inc
sbb
loope
cmp
sub
std
mov
jecxz
ljmp
icebp
ss
mov
shl
lock
jecxz
lods
pop
lahf
push
lcall
pop
xor
mov
inc
ret
add
das
cli
add
or
mov
popa
and
jecxz
mov
ss
jo
pop
xchg
sbb
stc
out
pushf
test
rcr
xchg
adc
cmp
and
jp
xor
adcl
fadds
pop
test
and
push
ret
fisubrl
adc
mov
mov
lods
cmpsb
push
jns
in
lret
out
jne
sbb
dec
xchg
rolb
xor
outsl
hlt
sub
out
mov
cltd
enter
dec
inc
mov
call
mov
mov
imul
pop
mov
testl
push
push
fdivrp
sbb
mov
mov
mov
sub
notb
popf
xor
aam
stos
mov
add
sub
gs
pop
mov
insl
out
insb
mov
aam
push
xchg
in
cmp
adc
sbb
mov
dec
adc
lret
mov
sahf
test
and
and
dec
dec
cmp
lods
daa
lcall
jmp
lret
inc
mov
daa
jg,pt
jp
push
in
jmp
xlat
pusha
sub
inc
xchg
dec
xor
sahf
les
pop
inc
jmp
mov
cli
jbe
mov
push
mov
xor
sbbl
test
loopne
imul
add
sbb
dec
xor
mov
inc
pop
idivl
stc
in
scas
push
roll
in
adc
lds
lret
mov
cmp
jp
fsubrp
cmp
sarl
push
jb
outsl
loop
ljmp
dec
dec
nop
js
mov
jge
pop
xchg
mov
push
dec
loop
clc
in
xchg
add
dec
fcom
xor
xlat
sarb
push
pusha
push
test
sub
xor
adc
mov
pop
rcrl
int
adc
pop
xchg
repnz
and
ss
sbb
mov
jmp
inc
imul
mov
push
cs
sub
cltd
push
mov
lcall
cwtl
and
or
mov
xor
pop
dec
and
xor
mov
arpl
jmp
leave
xchg
or
popf
divb
mov
mov
jl
push
dec
mov
divb
xor
shll
mov
sbb
jmp
in
popf
xchg
sub
lods
cmc
out
mov
and
lods
add
stc
xor
cwtl
xchg
adcl
sbb
daa
scas
cmp
fnsave
hlt
cmp
mov
pop
xchg
mov
mov
dec
xor
sarl
inc
scas
cmpsl
sbb
mov
push
int
add
cld
out
pop
into
mov
wbinvd
mov
push
cs
pop
daa
lods
movsb
inc
mov
enter
mov
fs
fmuls
ljmp
std
int
ficompl
adc
out
mov
lods
stos
test
stc
mov
inc
cmp
and
arpl
mov
negb
cmp
mov
shl
jl
mov
jl
jae
outsb
inc
out
cmpsb
jge
adc
leave
mov
leave
or
test
cmpsl
cmpsl
mov
in
leave
mov
add
shll
mov
scas
jne
jb
test
in
sbb
push
int3
pop
adc
pushl
lcall
xorl
insl
xor
cmc
loopne
dec
mov
loope
mov
push
push
in
inc
ficoms
xor
daa
js
pop
fisubl
out
in
mov
sub
mov
push
imul
sub
mov
lea
push
outsl
jl
lock
aad
gs
xor
cmp
push
lods
mov
push
mov
pushf
inc
outsl
pop
addr16
aad
dec
fs
loop
lods
fcmovnu
call
jg
je
add
xor
gs
xor
xor
mov
test
xchg
js
addr16
xchg
imul
inc
rclb
lock
std
pop
pcmpgtb
dec
out
inc
and
daa
add
cmp
insl
in
lods
push
xchg
insl
imul
xchg
inc
sbb
mov
call
sarb
faddl
mov
pop
lahf
incl
fistpll
movsl
cmc
sbbl
insl
in
xchg
mov
test
push
dec
sbb
gs
inc
lock
sub
pop
lret
outsb
adc
or
xchg
pop
mov
adc
sub
testl
dec
jb
adcl
add
loope
lea
push
mov
cmp
push
add
dec
mov
sarl
and
cmp
xor
mov
mov
mov
mov
inc
cmpsb
aaa
push
int3
sbbb
stos
outsl
cmp
dec
repz
jnp
cwtl
cld
jae
ljmp
mov
inc
outsl
xchg
js
mov
int3
and
inc
dec
fcmovb
das
icebp
sbb
and
sub
mov
dec
mov
xor
or
rcrl
and
or
lds
fwait
aas
std
jp
pop
inc
pop
mov
arpl
imul
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
add
add
std
sbb
xor
fisubs
xchg
in
in
sbb
insl
inc
add
je
rorb
outsb
xchg
test
lock
lret
into
fisubrl
cld
testl
sbb
daa
ss
adc
and
icebp
xor
mov
adc
cmp
test
testb
dec
nop
neg
cli
clc
ljmp
test
scas
aad
cmp
pop
mov
jae
ret
adc
jnp
mov
insb
jbe
xchg
inc
out
iret
jle
fs
mov
int3
sub
fwait
cltd
sub
sahf
xchg
or
inc
push
cmove
ret
or
scas
mov
cwtl
pop
out
movsb
sub
js
mov
inc
fisttpll
rcl
repz
cmpsb
clc
fadds
arpl
loopne
cmp
and
adc
push
cld
sbb
fcoml
lcall
mov
call
pop
xchg
idivb
mov
sub
dec
cmp
sbb
cmp
and
jb
into
pop
out
adc
aas
xchg
mov
pusha
inc
out
addr16
stos
js
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
push
or
jmp
xor
aaa
data16
cld
inc
inc
or
outsl
int3
inc
loop
and
insl
sahf
repz
jle
imulb
adc
adc
sub
fadds
out
mov
mov
out
pop
mov
add
jle
cs
dec
cmpsb
in
lret
arpl
xor
ja
xchg
mov
jbe
add
and
cmp
add
xchg
hlt
roll
ljmp
pop
sub
enter
and
stos
xchg
das
in
jecxz
and
xchg
jo
clc
mov
daa
cmp
or
jo
aad
hlt
push
out
enter
cld
shll
jmp
and
lods
inc
ljmp
mov
sub
sub
pusha
push
test
popa
mov
addr16
cmp
adc
cmp
sub
inc
pop
sbb
inc
sbb
shrb
mov
sbbb
dec
setns
add
data16
add
add
mov
insb
jae
cmpsb
push
xchg
push
adc
xchg
mov
int
ret
ljmp
sahf
push
adc
push
dec
enter
sub
jle
fcompl
ljmp
clc
hlt
enter
enter
xchg
xor
pop
popf
dec
cmc
push
mov
mov
xor
adc
jne
loope
xlat
xorb
fbld
jmp
stos
fidivrs
in
jl
pop
repnz
lret
xchg
mov
and
or
outsl
adc
lea
fcomip
xchg
push
mov
dec
push
fcmovne
cmc
lcall
xor
or
xchg
dec
imul
xchg
popf
lock
stc
sar
adc
inc
sbb
inc
imul
pop
sbb
lods
xor
pusha
inc
popa
adc
sbb
push
lods
out
add
test
cmpsb
in
pusha
mov
repz
test
scas
add
pop
aas
loope
pushf
jl
out
loop
pusha
push
and
fwait
inc
repz
andb
mov
adc
in
lret
lret
cmp
xchg
outsb
out
fnstcw
or
or
xor
or
iret
cmp
inc
fisubrs
mov
lods
repz
push
insl
and
cmp
xchg
dec
enter
lret
insl
sub
push
pop
jmp
jp
inc
xchg
add
std
movsb
dec
push
ja
pop
popf
sahf
mov
sbbl
sbb
add
jno
inc
dec
sub
sahf
dec
popa
mov
push
pop
ja
fidivrl
rorb
mov
push
into
jecxz
mov
push
cld
popl
mov
test
cmp
fs
push
jp
and
roll
or
jge
ljmp
adc
loopne
dec
cltd
pop
aad
cli
push
mov
xor
int
pop
fmulp
enter
sbb
lea
dec
movsl
adc
adc
cmp
mov
lds
test
push
jmp
inc
inc
rol
mov
shrb
xchg
dec
xchg
test
mov
jge
lret
mov
sub
xchg
aad
lods
int
mov
push
test
in
and
xchg
push
sbb
mov
rcrb
and
aad
mov
push
xchg
enter
enter
and
arpl
std
test
out
push
call
divl
lahf
push
mov
loopne
and
popf
repz
ret
pop
add
lahf
adc
push
add
push
jo
loopne
aas
xchg
int
popf
lahf
aas
and
les
icebp
sub
and
rcrb
xor
mov
mov
cld
push
add
lahf
fbld
xchg
bound
and
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
dec
and
out
jl
sub
add
es
pop
pop
or
cli
add
loop
and
aam
out
fs
imul
cmpsl
fildl
aaa
test
or
adc
movsb
inc
jmp
and
inc
and
stos
xor
in
mov
xor
sub
cmpsl
and
pop
jle
mov
mov
cmp
fldenv
xchg
cmp
shll
pop
aas
daa
xchg
imul
cld
xor
cmp
loopne
sub
dec
js
xchg
and
stc
repnz
les
mov
cmp
rclb
mov
mov
movsb
adc
jns
lods
mov
push
mov
lds
mov
iret
arpl
and
ret
jne
inc
loopne
or
cli
pop
xchg
xchg
clc
out
or
out
outsb
aas
mov
jne
adc
stos
push
push
push
out
inc
scas
stc
mov
adc
pushf
pop
fwait
mov
push
test
adc
mov
inc
arpl
cmc
dec
cwtl
mov
fs
fiaddl
fsubs
dec
xchg
mov
inc
inc
jb
lret
repnz
jle
xchg
lea
enter
inc
push
test
adc
mov
test
sbb
and
mov
sbb
xchg
enter
mov
adc
lods
sbb
pop
jle
sbb
cmpsl
xor
imul
test
sbb
out
imul
jecxz
test
jno
xor
ret
xor
test
rclb
inc
pop
adc
cmpsl
std
mov
dec
insl
or
sbb
inc
lret
jmp
jo
ret
xorl
xchg
mov
js
hlt
in
cld
int3
imul
lret
sub
ret
arpl
cs
xor
out
call
jae
inc
dec
fcompl
mov
push
idivl
jmp
pop
sarb
mov
push
clc
jae
test
es
pop
jle
dec
fstps
imul
mov
inc
inc
outsb
pop
es
andb
push
es
jmp
add
adc
dec
mov
popf
mov
inc
rorb
inc
into
testl
or
xchg
ret
pop
mov
xor
adc
xor
xor
movsl
call
popl
cld
pop
mov
pop
or
jl
push
stos
shlb
and
pop
jmp
inc
cmpsb
adc
popf
pop
xchg
in
decb
data16
sti
sbb
je
sbb
out
push
movhps
and
cmp
std
or
ljmp
fwait
xor
mov
xchg
ret
push
pop
test
sti
jno
sub
xchg
xchg
fnsave
mov
pop
mov
mov
aam
arpl
out
andl
mov
xlat
cmp
fwait
shlb
or
ss
cmpsb
jge
lods
mov
arpl
push
repz
inc
inc
mov
orl
repnz
jno
ret
adc
dec
aad
sbb
out
cmp
mov
jmp
push
test
pop
cwtl
push
dec
xor
mov
xor
xor
loopne
js
les
jbe
aas
inc
mov
leave
sbb
or
test
movsb
in
adc
and
lcall
lahf
gs
lock
xor
xchg
or
or
lock
jnp
dec
adcb
mov
call
mov
push
mov
lds
sub
scas
out
bnd
and
adc
enter
push
jb
insb
ja
xchg
mov
dec
pop
or
sub
es
sahf
xchg
dec
inc
cmc
lea
and
mov
aad
nop
xorb
xchg
jp
aas
pop
lods
dec
dec
inc
ret
aaa
pop
and
xchg
push
jg
fsubr
pop
fcom
mov
aam
ljmp
call
pop
cmpl
test
adc
jg
push
inc
je
mov
xchg
mov
fnsave
aam
stos
push
clc
ret
xchg
mov
sahf
arpl
or
sti
dec
pop
inc
xchg
and
popf
bound
adc
std
jecxz
jp
or
push
dec
test
or
nop
cmpsl
mov
cwtl
dec
cmp
sub
iret
xchg
xchg
inc
out
xor
xor
sub
xchg
add
inc
sub
int3
sub
lods
sub
out
push
or
aaa
add
inc
movsb
mov
shr
adc
xor
xor
xor
dec
add
add
sbb
mov
mov
mov
sbbb
xchg
sub
xor
leave
ljmp
ret
fs
int3
mov
sbb
inc
and
xchg
popa
mov
adc
pop
cmp
fisttpl
movsl
pop
inc
pop
cwtl
cmp
or
scas
enter
enter
stos
incl
push
and
push
cltd
mov
rcl
cmp
cmpb
cmp
mov
in
xor
fbld
xor
clc
xor
push
fiaddl
mov
adc
push
dec
push
subb
les
in
lahf
test
pop
push
pop
pop
lcall
in
leave
inc
and
test
test
sub
insl
mov
sbb
pop
cmp
mov
sarl
push
mov
pop
ja
push
pop
lea
pusha
stos
popa
adcl
push
sub
cmpsb
or
dec
sbb
mov
and
ret
sbb
nop
push
jo
dec
jecxz
jmp
jge
xor
sti
fdivs
adc
push
cmp
mov
mov
push
cld
es
xor
popa
inc
xlat
mov
enter
lods
add
sbb
and
dec
dec
mov
xchg
jmp
cld
shl
icebp
cmp
mov
mov
mov
sub
xchg
stc
outsl
dec
pop
rcrl
sti
add
into
push
adc
out
shl
mov
js
ret
mov
adc
or
and
sbb
jle
js
rorl
sti
add
shlb
pop
inc
mov
jp
out
mov
xchg
add
lea
shll
imul
or
int3
jl
fsubp
or
inc
sub
mov
jge
clc
lahf
iret
repz
les
xchg
add
fwait
mov
dec
add
cmpsl
hlt
cmp
lahf
pop
outsb
subl
pop
test
mov
adc
add
mov
dec
das
and
inc
cmc
testb
xchg
push
jmp
push
pushf
xchg
and
mov
push
pop
push
enter
pop
or
not
mov
out
daa
sbb
inc
stos
fmull
out
out
mov
lds
xchg
sub
mov
test
mov
xchg
push
xchg
decl
push
rcrb
jbe
xor
fisttpll
shrl
ljmp
in
enter
cmpsl
lds
adc
push
pop
inc
mov
cmpb
insb
loop
addb
shll
mov
mov
jae
in
fnstcw
ss
rorb
pop
rolb
jge
jmp
nop
mov
xor
sahf
jmp
mov
movl
imul
das
push
mov
mov
mov
sub
pop
add
mov
sub
out
and
rol
in
stos
fldl
test
push
push
mov
pop
or
pop
inc
fdivl
jo
int3
mov
sbb
push
ret
jo
jnp
dec
lea
xchg
sbb
fisubrl
push
add
xor
subb
dec
lods
pop
out
inc
add
jno
es
movsb
loopne
mov
xchg
xor
scas
call
pop
jb
xor
push
lock
lods
cmpsl
sbb
inc
in
pusha
adc
dec
mov
inc
ret
push
inc
enter
and
push
ret
fildl
dec
or
adc
imulb
or
mov
mull
sbb
mov
jp
sub
push
inc
fsubs
gs
ljmp
jo
mov
mov
dec
cmp
jns
mov
mov
movsl
fnstsw
mov
jmp
dec
cmp
sbb
lahf
pushw
add
mov
fisubrs
or
decl
and
stos
pop
and
into
adc
out
leave
mov
mov
popa
clc
cli
dec
mov
xchg
incb
inc
mov
je
or
and
sti
inc
inc
jmp
xchg
sbb
xchg
jg
lock
outsb
movsl
out
xchg
fisttpll
or
ljmp
arpl
xor
shr
mov
dec
loope
sub
jge
xor
xlat
push
push
fcomps
das
andl
cli
cmpsl
in
sarb
push
and
arpl
xchg
mov
shrl
cmp
inc
mov
xor
jno
pop
mov
outsb
cmp
mov
ret
dec
jp
jle
fcompl
and
mov
push
sbb
xchg
sbb
mov
ret
sbb
gs
xor
pop
mov
out
jl
fnstcw
andl
add
add
add
add
div
xor
push
or
xor
aad
xor
or
jno
xchg
xor
jecxz
in
shrl
das
rorl
and
pop
addb
shl
jmp
in
call
add
jbe
faddl
mov
or
imul
jecxz
push
adc
scas
out
inc
rclb
push
push
or
mov
jge
aam
mov
jae
lret
pop
push
xor
jns
pop
mov
push
ffree
cmp
enter
push
lock
subb
inc
xor
lret
rcr
inc
inc
xlat
jne
add
push
push
dec
dec
int3
sub
gs
or
cmp
sbb
xor
ror
and
xor
adc
xchg
jo
jbe
and
xchg
adc
xorb
jp
movsl
pop
dec
add
out
or
and
in
ljmp
xchg
jmp
sbb
sub
shlb
xlat
mov
mov
movsb
add
gs
and
pop
insb
mov
sarb
testl
pop
add
mov
sub
cmp
dec
push
mov
or
ja
and
add
dec
lock
dec
nop
sbbl
push
xor
add
lahf
in
inc
push
movsb
dec
push
adc
pop
sti
mov
loopne
dec
adc
xor
cwtl
pop
sbb
and
and
jl,pt
lret
repnz
test
fwait
sbb
vlddqu
xor
xor
xor
xor
xor
xor
xor
add
insl
pop
add
add
jb
bnd
pop
push
cmp
in
rorb
mov
lods
dec
or
mov
shrb
jo
sbb
sbb
add
or
int
leave
fnstsw
iret
or
cmp
les
and
jnp
push
andl
out
outsl
lea
in
sub
lcall
dec
jl
sub
sar
iret
adc
xchg
lods
adc
pop
into
ljmp
push
int3
sbb
sbb
sub
loopne
flds
xor
movsb
pushf
fldenv
loop
or
andl
scas
jg
pop
pop
in
xchg
xchg
sub
cmpsb
loop
mov
or
dec
out
js
aam
xchg
adc
aam
xchg
shll
mov
or
andb
jno
xor
dec
stc
fsubrl
or
fs
imul
in
lcall
inc
sbb
punpckhdq
ds
jb
les
roll
dec
movsb
push
in
jmp
inc
mov
outsb
sbb
cmp
nop
pop
cmp
fists
jmp
sbb
in
iret
lds
lret
mov
xor
aas
lea
lods
stc
cmpsl
push
test
flds
das
out
jb
xchg
and
push
lods
mov
xchg
in
fmulp
fsubs
mov
leave
mov
jmp
je
inc
xchg
cmp
sub
loope
adc
in
adc
mov
push
dec
inc
lods
mov
push
stc
sbb
psrad
mov
fstpt
pop
dec
ljmp
int3
jl
adc
pop
inc
inc
hlt
sub
fwait
mov
aam
mov
mov
test
mov
pop
shlb
jno,pn
daa
mov
mov
add
leave
dec
jno
xchg
push
ffreep
clc
or
and
fs
mov
inc
push
ret
pop
push
push
pop
leave
and
es
and
pop
pop
dec
in
adc
or
xchg
mov
cli
cmpl
push
dec
cli
add
popf
mov
out
into
int
popa
shlb
int
xor
mull
leave
xchg
in
pop
push
mov
subb
pop
enter
dec
push
jb
mov
cmp
push
sahf
xor
sub
cmp
push
mov
js
cmp
js
jno
cmpsl
jg
or
pop
out
js
jp
sbb
int
sub
stc
cmp
and
pop
xchg
mov
mov
daa
push
sbb
mov
out
xchg
mov
sbb
xor
cmp
jmp
int
sbb
fists
and
push
and
lea
or
inc
sbb
cmp
in
insb
pop
and
mov
or
add
push
ljmp
inc
add
hlt
lods
and
mov
mov
stos
dec
cltd
push
test
shll
dec
jo
adc
jmp
mov
mov
mov
xlat
jl
mov
in
and
pop
inc
xor
xor
and
lret
cmp
nop
fbld
pop
and
jne
testl
jge
inc
push
out
out
jecxz
add
and
mov
and
mov
fidivs
jp
shrl
jp
fdivs
inc
xchg
aad
sub
or
and
mov
mov
addr16
nop
mov
add
sub
nop
roll
sarl
inc
adc
fnstsw
nop
xchg
cltd
lea
xorl
sub
pop
shrb
into
sahf
and
inc
jo
sbb
call
mov
pop
sbb
xchg
lea
in
mov
push
jge
popa
negl
out
dec
jp
mov
out
cmc
es
jle
jl
mov
and
push
add
pop
xchg
inc
int
cmpsb
nop
dec
mov
cli
jle
and
imul
inc
xor
sub
mov
orb
xchg
xchg
outsb
jns
addb
jl
iret
push
sub
movsl
in
or
dec
xor
hlt
adc
push
jne
or
xrelease
cmp
add
pop
pop
jge
test
add
loope
shrb
mov
sbb
or
mov
jg
jg
jbe
popa
xchg
fwait
lret
inc
btr
lea
scas
mov
and
mov
adc
lods
dec
es
xchg
les
sti
mov
or
dec
aam
adc
jnp
mov
xor
mov
lock
int3
xchg
out
je
ja
inc
mov
rcll
pop
dec
or
pop
test
into
ret
fnsave
scas
mov
scas
daa
ljmp
rorb
mov
cmp
or
push
negb
repz
stc
jg
iret
ds
or
imul
sub
gs
test
jnp
lds
fisttpll
sbb
add
into
xor
xor
in
ror
add
pushf
xor
mov
push
daa
ja
das
out
test
nop
push
or
icebp
out
scas
xchg
bswap
xlat
cmp
int3
lods
in
mov
inc
mov
out
popf
orl
loopne
or
mov
fadd
sub
xchg
xchg
ljmp
or
clc
dec
jns
xor
adc
mov
lods
xchg
dec
sub
shl
movsl
mov
int
push
push
test
cmp
xor
cwtl
mov
xlat
popf
push
fwait
mov
mov
data16
data16
push
rcll
lcall
or
mov
imul
inc
xchg
dec
push
shrd
in
les
movsl
xor
gs
test
push
in
int
loop
dec
ss
pop
test
mov
jmp
out
jl
hlt
ljmp
mov
das
sub
or
dec
sbb
pop
sti
icebp
fs
mov
add
cmp
test
in
sbb
inc
into
pusha
push
cmc
idivb
dec
pop
inc
mov
mov
pop
jbe
xor
mov
jbe
xchg
fsubs
out
mov
dec
aam
outsb
jmp
mov
xchg
push
xor
xor
mov
add
jle
int
pop
ret
push
mov
sbb
loopnew
jp
test
mov
pop
andps
lret
scas
out
push
scas
cld
jp
cltd
cwtl
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
hlt
cmp
mov
enter
mov
gs
and
and
or
das
push
add
fsubl
stos
scas
sahf
fucomip
pop
mov
mov
pop
or
jne
in
aaa
and
insb
or
orl
push
shll
dec
jmp
push
mov
inc
xlat
add
jnp
cs
mov
mov
mov
pop
push
mov
sub
mov
xor
and
and
mov
mov
mov
xor
or
jo
dec
jne
dec
add
adc
mov
je
sahf
push
mov
lds
push
mov
ds
xchg
sbb
sub
fstl
cli
fs
jbe
es
iret
lock
push
adc
xor
jge
xlat
jns
adc
cwtl
xor
test
cmp
jg
ljmp
repz
sub
ret
shlb
xchg
sub
les
addr16
adc
bswap
subb
mov
add
xlat
mov
pop
sub
inc
xchg
shr
jg
xlat
push
imul
jns
testl
push
push
mov
call
cld
add
divl
mov
or
loop
cmpsl
fidivrs
or
push
sbb
outsb
in
ljmp
ja
fisubrl
jnp
pusha
insl
out
add
mov
arpl
jl
outsl
or
jmp
pop
lret
and
inc
push
and
leave
stos
leave
cwtl
ficoms
ds
popa
out
xchg
mov
adc
cmp
mov
test
mov
jge
call
xorb
inc
jmp
addb
pop
repnz
sbb
xchg
lds
leave
lods
insb
clc
xchg
data16
psllw
or
std
and
lock
inc
xor
dec
mov
or
inc
clc
incb
sub
in
pop
mov
mov
stos
jmp
dec
sub
arpl
jecxz
mov
aad
shrd
mov
mov
add
adc
ja
sbb
jnp
xchg
je
mov
inc
cmp
cmpsb
add
fsubrs
mov
jnp
mov
roll
xchg
mov
add
int
pop
adc
fistl
mov
mov
lea
xlat
lods
cmp
mov
ljmp
stos
outsl
fimuls
test
mulb
cmpsl
xor
popa
mov
ja
or
stos
ret
in
shll
aas
insl
in
popa
adc
pushl
addl
ficoml
xorb
mov
ret
xchg
add
mov
add
jae
and
ret
inc
jecxz
push
scas
notb
or
movsl
sub
les
mov
xlat
sti
inc
ss
inc
ds
mov
das
and
push
mov
data16
mov
jl
pop
mov
dec
arpl
sub
push
jo
dec
pop
push
mov
sub
fcoml
fwait
mov
icebp
inc
test
mov
fcoml
inc
addr16
sbb
addr16
cmp
mov
ja
sub
jno
jecxz
stos
outsl
push
inc
daa
mov
jecxz
call
lret
ds
lret
mov
mov
mov
sub
repz
mov
mov
push
sbb
mov
push
xchg
push
std
arpl
xchg
cwtl
sahf
xorl
lcall
push
mov
repnz
adc
sbb
aam
sub
sub
aas
inc
xchg
dec
inc
leave
mov
shl
xor
popf
imul
pop
xor
mov
popf
in
jnp
jmp
pop
xor
inc
aam
lods
add
sbb
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
xchg
add
add
add
dec
mov
xchg
adc
fists
loopne
fwait
out
cmc
in
inc
cmp
adcb
cmp
mov
in
pusha
iret
pop
aad
cwtl
imul
lea
push
idivl
jge
inc
mov
add
jp
loopne
push
xchg
jle
push
xor
mov
dec
jnp
xchg
mov
xlat
sub
inc
mov
pop
xchg
lret
std
cmp
xchg
aad
dec
and
iret
jnp
push
xchg
ret
adc
lock
push
jns
jnp
nop
mov
jne
fnsave
adc
fs
ss
ret
sti
xchg
out
je
add
mov
aaa
cmp
pop
inc
jmp
xchg
xchg
xchg
std
jmp
loop
cmpsb
fcomip
xchg
sub
sarb
lret
pusha
ja
lods
scas
sub
add
adc
or
enter
jmp
stos
insl
ret
insb
fadds
ficoms
cmp
sbb
loopne
iret
inc
adc
sbb
mov
dec
dec
jne
sub
lods
les
inc
adc
lock
inc
sbbl
inc
loope
cmp
xchg
sbb
pop
cwtl
or
jnp
add
mov
ss
mov
adc
push
jae
or
mov
adc
iret
mov
lcall
fcomps
and
ficompl
scas
mov
loop
sub
popf
nop
mov
add
aad
aas
test
adcl
mov
mov
mov
cmovo
cmc
or
mov
int3
dec
jo
clflush
insb
std
cld
enter
pop
das
pop
movsb
sbb
icebp
pop
stos
jmp
incl
cmc
lret
into
lods
mov
movsb
iret
cmp
fldenv
mov
push
int3
inc
sbb
xchg
cltd
mov
mov
jle
lea
enter
test
jo
sbb
adc
popl
adc
mov
sub
mov
idivl
push
add
stos
subl
fisubs
cmp
enter
mov
daa
mov
or
nop
iret
lock
pop
pop
lret
aaa
cld
inc
fcoml
repz
scas
sub
ftst
data16
and
jmp
cmpsb
in
or
bound
pop
in
jb
or
dec
mull
pusha
dec
xchg
cmc
loop
aam
xor
push
pop
insb
push
sbb
adc
gs
roll
ds
les
add
push
add
add
lret
adcl
push
mov
pop
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
loop
imul
xchg
outsl
mov
mov
mov
jge
arpl
jns
sahf
in
popf
add
out
adc
fbstp
push
cltd
pushf
repz
jecxz
xchg
push
push
dec
jns
push
push
fistpll
sbb
orb
mov
jg
mov
inc
mov
hlt
repnz
sti
stos
add
push
cmp
push
iret
xor
add
mov
xchg
iret
jp
push
das
inc
sub
mov
jae
push
ret
lods
repz
and
jbe
loopne
mov
sahf
mov
fidivrl
scas
add
call
add
xorb
popa
fwait
testl
push
fisttpll
movnti
rol
outsl
xor
faddl
adc
out
stos
cmpsl
cwtl
mov
push
pop
or
jno
push
adc
sub
test
andl
xchg
cmpb
inc
dec
test
lods
sub
add
push
loopne
fst
ds
call
dec
push
test
push
cld
push
cmpsl
inc
mov
dec
sbb
mov
push
pop
sbb
outsb
dec
loopne
sub
lods
aam
or
xchg
and
xlat
inc
pop
gs
es
push
jo
mov
sbb
inc
and
cmp
xor
pop
inc
xor
dec
mov
add
pop
aas
lcall
cmpsb
mov
repnz
inc
out
jle
scas
inc
mov
ja
inc
cltd
leave
aam
out
sub
jnp
std
pusha
push
inc
out
add
push
mov
in
mov
pusha
inc
pop
push
fwait
testl
sbb
movsb
lods
call
jmp
add
enter
outsl
clc
mov
gs
fistpll
xchg
loopne
movsb
sub
mov
repnz
in
cmp
dec
outsb
jno
dec
mov
jge
dec
ficoml
mov
fcmovu
dec
lods
adc
pusha
and
stos
imul
push
xor
or
sub
mov
inc
and
ja
in
gs
cmpl
dec
imul
jle
les
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
add
xchg
mov
push
call
out
leave
daa
xor
daa
jb
pop
hlt
movsb
mov
cmp
inc
lock
repnz
push
mov
inc
inc
push
mov
mov
out
xchg
pushf
aaa
dec
mov
inc
clc
jbe
shll
adc
movsl
lret
cmp
les
loop
loop
popf
jle
push
sub
dec
fistl
clc
data16
test
or
dec
xchg
mov
mov
or
inc
je
push
cmp
dec
push
idiv
and
stc
sarb
lods
mov
pop
loop
push
fcompl
popa
aaa
and
xor
adc
pushl
mov
adc
mov
lret
or
mov
ljmp
xorb
mov
mov
mov
popa
and
cs
sbb
repz
fs
cltd
mov
stos
aaa
clc
mov
loopne
adc
js
or
pop
out
mov
aaa
push
cs
hlt
test
nop
lret
insb
adc
shlb
hlt
insl
cltd
lds
sar
pop
sahf
add
mov
add
mov
cwtl
push
mov
cld
stos
in
dec
rcr
sbb
leave
mov
cltd
out
xor
sub
data16
fwait
scas
adc
arpl
xchg
pop
xchg
inc
loop
clc
sbb
sub
jge,pt
adc
xchg
push
movsb
jb
jecxz
mov
loopne
aas
or
fidivl
fbstp
jmp
pop
jb
in
lea
adc
loopne
lds
in
pop
pop
or
test
js
hlt
insl
les
adc
add
addb
or
roll
test
inc
sbb
or
cmp
push
lock
inc
das
out
cmp
mov
fld1
pop
sub
xor
les
adc
test
lret
call
movb
sub
aaa
pop
in
leave
mov
cld
sti
jbe
xor
mov
nop
push
push
lods
lods
ret
lcall
stc
inc
cltd
xchg
push
xchg
inc
scas
xor
mov
fisubrs
nop
iret
dec
loop
hlt
inc
notl
or
pop
lahf
sarb
mov
int3
outsb
adc
push
int3
sbb
sbb
mov
mov
and
xchg
mov
mov
or
cld
int3
mov
inc
cs
nop
push
fwait
xorl
adc
lret
fcom
outsb
mov
add
mov
aad
icebp
xor
popl
and
lcall
pop
cmp
out
inc
mov
dec
je
and
es
jmp
push
push
jge
outsl
sbb
dec
mov
test
ret
into
mov
cmp
jle
iret
mov
push
clc
xchg
iret
enter
pop
jns
out
popa
shll
inc
ds
mov
daa
rorl
jae
mov
insb
repz
scas
insl
lret
dec
dec
out
add
jno
mov
xor
and
xor
popa
icebp
or
nop
lcall
mov
cmp
sbb
xorb
sbb
pop
dec
arpl
push
rcll
lock
cwtl
je
imul
andl
mov
es
xorb
push
mov
jne
dec
dec
xor
jo
rcll
mov
das
in
xor
sbb
xchg
mov
mov
xor
dec
sub
push
jg
fcmove
fldl
lahf
jle
cmpsl
lahf
xor
push
lods
jae
inc
mov
test
movsb
ss
stos
sub
push
loop
cli
pop
mov
inc
into
fsubs
push
cmpsb
xchg
inc
pop
xor
mov
sti
cld
pop
sbb
call
loopne
push
adc
cmp
leave
in
lock
cwtl
xchg
sbb
cltd
cs
icebp
xchg
cwtl
shr
sub
sub
sbb
jbe
ds
shr
add
mov
repz
iret
dec
fisubrl
pop
sbb
cld
mov
jne
ds
mov
sbb
insb
xorb
orl
movsb
mov
jne
stos
push
xor
or
enter
pop
mov
cmp
fstpl
pop
jno
out
into
and
xchg
adc
xchg
sbb
and
xchg
stos
xchg
pusha
push
lret
into
nop
pop
stc
and
mov
mov
stc
jmp
jo
jnp
cmc
insb
cmovo
pop
or
sub
imul
and
jb
sbb
jne
clc
ficoms
outsl
outsl
cltd
insb
fdivs
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
push
jp
jecxz
stos
inc
int3
fsubs
idivb
sub
xor
cmp
add
mov
add
int
out
mov
jmp
sub
in
sbbl
int3
andb
jae
xor
roll
jnp
adc
shlb
add
aam
inc
cld
lret
xor
inc
mov
lods
xchg
arpl
sbb
shll
into
shll
sbb
testb
and
xor
pop
inc
and
mov
cld
lahf
and
lea
mov
push
mov
push
pop
cwtl
xchg
sub
aad
mov
xchg
jns
or
mov
inc
add
out
fistpll
jno
arpl
arpl
xor
mov
scas
sarl
pop
rcrb
out
add
pop
out
pop
dec
and
lahf
testl
imul
jp
jl
test
mov
out
repz
xchg
inc
inc
or
cmp
jle
pop
nop
pushf
dec
jp
push
mov
push
inc
pmaddwd
popf
das
std
jmp
add
push
add
stos
faddl
stos
adc
fisttpll
in
enter
int
dec
jmp
nop
and
dec
orl
popf
pop
arpl
lock
out
nopl
lea
out
pop
in
aas
lcall
sbb
push
xor
mov
jecxz
enter
mov
ret
in
loop
test
roll
xlat
jl
cmp
dec
stc
or
iret
mov
sub
stos
lea
jmp
mov
lock
out
mov
and
sbb
cltd
fldl
jecxz
movsb
xchg
push
xor
mov
andl
test
repz
js
test
xor
push
dec
stc
cmpsl
ret
xor
lock
adc
adc
data16
pushf
es
fiaddl
pusha
add
call
mov
mov
jecxz
sub
stos
sbb
push
jl
enter
lods
in
xlat
loope
or
divb
lods
pop
rorb
jb
cltd
or
outsb
loopne
jle
pop
and
or
gs
cwtl
add
jl
mov
cwtl
repnz
inc
in
arpl
adcb
push
movsb
loop
popf
stc
xor
enter
push
outsb
scas
inc
and
push
mov
sbb
dec
aad
add
fdivs
xchg
and
sub
repnz
xor
adc
nop
loop
adcl
iret
pop
in
mov
jge
into
test
stos
mov
out
lods
lret
dec
xchg
fsubr
jo
mov
sub
jbe,pn
mov
add
xor
iret
inc
dec
mov
inc
addr16
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
cwtl
jbe
lods
aad
and
gs
jne
sbb
ss
mov
fs
xor
int3
inc
sahf
inc
xor
fwait
dec
xchg
cmpsb
rcrb
mull
lcall
jp
ret
pop
cmc
insb
or
mov
mov
addl
test
adc
ja
cwtl
sub
addb
insb
or
bound
out
sbb
mov
dec
jecxz
mov
int3
lret
stos
cmp
inc
add
inc
lds
lret
and
or
iret
adc
mov
cltd
cmp
stc
hlt
mov
pop
pop
cmp
sbb
int3
mov
add
xchg
in
icebp
cmp
lret
jns
push
andl
sbbl
push
mov
jecxz
ja
call
stos
dec
pop
fldt
sahf
push
xor
or
mov
dec
and
in
clc
imul
xchg
dec
mov
sahf
or
insb
dec
sub
sub
bound
inc
pop
in
xor
vcvtps2pd
and
xor
jbe,pt
xor
adc
pop
insb
or
leave
xchg
dec
cmpsl
mov
push
jbe
jg
out
iret
into
popf
jbe
xchg
adc
jbe
dec
jb
mov
aaa
sub
int
add
in
in
or
dec
jo
dec
jge
cmpsl
popf
mov
and
xchg
add
xor
or
inc
pop
xchg
dec
lcall
xchg
lds
xor
stc
in
test
fs
jbe
or
cmc
and
sbb
fwait
mov
jp
push
out
lock
xchg
jle
sbb
sbb
mov
push
ja
mov
bnd
aas
pop
pop
addr16
pop
iret
mov
out
push
sbb
mul
jecxz
sbb
and
test
in
bnd
inc
mov
dec
inc
xchg
outsl
cld
push
xchg
xchg
mov
shlb
jns
and
pavgb
imul
or
ds
mov
pusha
xor
shll
aad
push
xchg
data16
push
negl
cmpb
add
or
es
and
mov
dec
out
push
pop
xchg
push
or
outsb
ss
sbb
dec
mov
lock
xor
addr16
test
lret
mov
xlat
mov
jmp
pop
fisubrl
clc
mov
dec
dec
dec
jg
cmc
sahf
xlat
mov
mov
inc
dec
jge
lds
in
inc
xor
push
out
in
mov
or
xchg
aad
cmp
imul
dec
dec
mov
inc
into
inc
in
jnp
dec
cmp
mov
fs
loopne
xchg
pop
pop
mov
xchg
iretw
fadds
pop
rcl
mov
lods
dec
popf
push
cs
mov
pop
std
adcb
int3
lods
test
cmp
pop
test
xchg
sub
push
pop
hlt
icebp
sti
xor
adc
adc
out
popf
jge
push
pop
fstps
or
jb
xchg
fwait
cmp
jo
mov
jnp
pop
adc
inc
stos
lds
aam
push
jnp
je
lds
inc
pop
and
iret
shl
fsubrp
lea
xchg
or
pop
fistps
fmull
fadds
aad
jns
out
push
lahf
test
aad
sahf
ljmp
lods
add
xor
inc
sub
sbb
pop
call
jecxz
stos
pop
mov
pop
mov
aaa
jmp
add
imul
and
pushf
rolb
call
popl
add
inc
push
and
das
into
xchg
push
mov
xchg
imul
mov
repz
lods
pop
lret
fwait
sub
clc
add
or
scas
loopne
bound
mov
sbb
enter
lahf
xchg
mov
in
pop
mov
pop
in
cmc
inc
out
and
outsb
rorl
fisttps
js
mov
push
pop
enter
mov
mov
mov
adc
and
sub
pop
arpl
test
into
in
adc
pop
add
dec
and
outsb
addr16
mov
inc
xor
frstor
pop
xor
rol
nop
mov
bnd
jge
test
pop
lods
pop
adc
cmp
sbb
pop
sub
mov
or
sub
add
adc
mov
inc
inc
cmp
mov
push
in
add
sub
lock
push
outsb
lahf
xchg
je
jb
aam
in
mov
jmp
movsb
ljmp
aaa
bound
inc
pop
sbb
mov
orl
jge
in
es
pushf
in
jno
aaa
pop
push
push
xlat
in
or
xchg
pop
ss
je
int
cmp
test
mov
xchg
outsl
pop
flds
jnp
call
out
rol
ja
shl
shll
jecxz
lock
lock
into
mov
mov
out
pop
cmp
nop
ja
es
ja
mov
xor
inc
jp
cmp
lret
mov
and
inc
adc
or
or
push
and
cltd
test
jge
ret
pop
xchg
inc
xchg
dec
push
sub
hlt
add
mov
inc
or
jge
mov
pop
fildl
jns
cmp
xchg
and
or
add
adc
out
and
and
xor
les
das
adc
jb
dec
loop
lret
mov
adc
jp
xor
clc
imul
inc
enter
dec
xlat
jge
sub
leave
pop
mov
or
out
lret
sbbb
sbb
mov
cli
cld
xor
mov
scas
mov
sbb
pop
xchg
sbb
das
push
mov
or
sub
es
addr16
cmpsw
pop
xchg
adc
push
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
ret
icebp
push
int
mov
or
add
and
scas
pop
ljmp
sub
insl
xchg
or
rcll
test
and
jle
mov
je
mov
push
or
push
stc
movsl
mov
aam
inc
rorl
or
repz
movsb
fsts
dec
lcall
or
inc
jmp
mov
out
jecxz
lods
mov
pop
mov
xlat
inc
shrb
push
notb
and
dec
hlt
nop
inc
or
cmc
jo
sbb
mov
movsb
mov
nop
rcrl
push
pushf
inc
mov
sub
xchg
lahf
neg
divb
dec
aam
cli
es
repz
and
scas
sbbl
in
scas
pop
cmp
sub
idivl
push
jecxz
cmp
adc
inc
movsb
inc
jns
ds
add
insl
movsb
pushf
loopne
ret
repz
hlt
push
cmc
pop
in
jbe
lds
out
push
lret
loopne
xor
leave
fs
in
daa
gs
fchs
push
jns
pop
pop
movsb
ljmp
out
jae
pop
add
or
imull
mov
fnsave
jnp
loopne
les
pop
subl
data16
xchg
mov
pop
dec
mov
dec
push
mov
inc
int
test
call
pop
adc
testb
repnz
jg
out
ss
dec
push
push
insl
mov
es
loop
insl
inc
repz
jl
loopne,pn
push
cli
push
mov
dec
inc
leave
repz
jo
adc
call
inc
mov
mov
adc
mov
dec
xchg
adc
push
iret
insl
adc
xor
add
xchg
cli
enter
enter
or
jecxz
enter
or
adc
test
xlat
mov
iret
movsl
pushf
jno
dec
and
cmpsl
repnz
arpl
jl
xchg
inc
pushf
jo
pop
jns
adc
mov
arpl
cmp
xchg
mov
sbb
inc
fxch
iret
and
sahf
cmp
imul
aaa
iret
dec
or
sbb
sbb
sub
int
mov
test
js
inc
sub
je
jl
or
ret
mov
fld
jns
jge
sbb
iret
jmp
jno
dec
mov
dec
pop
in
add
xchg
xor
or
jae
mov
es
iret
and
cltd
stos
push
pop
filds
mov
jmp
push
call
adc
shrb
icebp
mov
dec
and
sahf
xchg
imul
push
jg
add
cs
push
inc
iret
mov
std
test
xchg
andb
inc
push
dec
push
enter
sub
adc
dec
sub
shl
dec
lret
enter
push
clc
jecxz
pop
pop
shl
lahf
push
ret
out
lea
push
adc
cmp
popa
or
lods
out
stc
fs
je
dec
aas
scas
out
xchg
test
add
add
arpl
pop
int
push
pusha
std
jae
jmp
xor
add
push
int
aas
xchg
hlt
adc
sahf
fmull
clc
mov
jne
inc
adc
mov
push
cmp
mov
fnsave
sbb
je
pop
adc
lcall
mov
sub
js
xchg
sbb
cld
and
daa
xor
xor
pop
add
adc
loopne
movlps
or
ss
cs
push
xchg
jnp
fcoms
xchg
pop
sub
std
sub
xor
popa
sbb
sar
mov
adc
sub
add
cmpsl
frstor
or
jns
xchg
push
dec
jl
sti
test
adc
jne
mov
cmp
addl
mov
int3
stos
je
add
aad
or
dec
lds
inc
pop
sbb
jb
mov
fidivrs
xchg
mov
cmp
test
mov
xor
imul
mov
cli
xor
pop
push
aam
dec
arpl
mov
jne
lcall
gs
hlt
inc
sub
add
pop
mov
lds
cmc
sbb
pusha
cmp
out
shll
outsl
dec
pushf
dec
stos
mov
popa
repnz
jb
dec
xchg
mov
test
mov
int3
xor
inc
jecxz
adc
mov
fwait
sub
inc
cmpsl
jl
mov
jecxz
mov
jns
pop
stos
out
add
cwtl
jge
ret
cmp
popf
jo
dec
fdivrl
push
je
stos
xorb
int3
pop
sub
stos
cli
arpl
xchg
mov
daa
hlt
push
jno
xor
or
lea
fwait
ret
lock
call
lods
je
fistpll
xchg
jg
jge
lahf
das
add
jge
push
mov
stc
inc
call
cld
or
mov
rcll
add
dec
xor
and
jns
cld
mov
adcb
lret
cwtl
jns
lcall
aad
lahf
pop
pop
pop
aam
and
pop
arpl
fiadds
mov
mov
je
mov
xlat
mov
or
sub
xchg
pushf
dec
xchg
and
popf
pop
mov
jnp
mov
inc
push
push
mov
pop
sub
adc
sbb
jne
and
arpl
out
sahf
cmpsl
ret
arpl
into
inc
dec
xchg
dec
xor
andl
mov
sti
not
aas
inc
push
and
addr16
icebp
jl
addr16
cmp
push
pusha
adc
jle
mov
pop
loope
in
adc
dec
pop
aas
enter
pop
ljmp
jl
adcl
adcl
pop
cld
xor
jp
inc
mov
or
test
xchg
mov
mov
cmp
jmp
cmp
push
bound
add
adc
sub
adc
jbe
cmp
push
mov
xor
pop
jecxz
in
ljmp
jno
cmp
or
inc
xchg
dec
jo
push
mov
push
and
movsb
and
insl
mov
into
scas
shl
and
test
les
cmp
xchg
loop
sbb
dec
out
xor
in
gs
sub
negb
repz
push
mov
lods
lds
xlat
pop
aas
dec
jp
jae
sahf
shlb
adc
mov
subb
xchg
and
in
mov
popa
add
lds
mov
xchg
and
sbb
enter
int3
lods
adc
mov
pop
cmp
xchg
fistps
or
xchg
sbb
sub
in
pop
mul
jmp
lret
fistl
push
outsb
das
js
jmp
sahf
scas
xlat
vshufps
ret
pop
xor
sub
lret
pushf
pop
sbb
or
sub
or
or
cmpsl
xchg
sti
jbe
mov
leave
push
fisubs
xor
jo
or
push
int
shll
pop
aam
xor
test
adc
lock
jb
dec
lret
inc
mov
and
adc
fisttpll
mov
mov
test
fucomi
in
test
hlt
add
sub
sub
movsl
sub
xchg
mov
mov
enter
dec
imul
cmp
jae
dec
push
mov
loope
sbb
jge
xchg
push
xchg
pop
or
std
clc
jb
xor
loope
cmp
cmpsb
movsl
xchg
jmp
fnstcw
sub
push
jns
clc
out
dec
out
lcall
mov
fisttpl
or
sbb
in
testl
jbe
sahf
sarb
out
inc
out
xchg
cmpsb
shrb
ds
aas
cli
call
jno
cli
mov
aam
pop
add
jmp
lea
pop
mov
sub
decl
mov
and
insb
insl
subl
sbb
xor
je
xor
and
xchg
gs
add
mov
cmp
jo
push
adc
push
rorb
fstps
add
ljmp
cmp
jo
mov
jecxz
loope
fwait
pop
sub
mov
sbb
xchg
mov
adc
popa
mov
mov
outsb
mov
imul
adc
cmp
test
sbb
lods
mov
jo
int3
jae
lret
cmp
ss
out
jns
adc
pop
add
push
mov
in
jo
mov
loopne
dec
jp
aaa
dec
fmulp
push
dec
dec
mov
in
push
popa
adc
adc
repz
daa
mov
daa
xchg
lret
out
adcl
mov
adc
fcmove
out
hlt
cmp
outsl
pop
imul
push
aas
jne
je
and
stos
aas
sbb
negl
shll
push
mov
xor
int3
adc
xchg
jno
mov
cvttps2pi
xchg
lahf
adc
repz
insb
xchg
les
hlt
rcl
xchg
or
xor
and
js
and
sbb
loope
stos
adc
fwait
test
sub
adc
mov
cs
imul
rorl
sub
loopne
push
xor
cmp
add
adc
movsl
ds
dec
inc
lahf
mov
jno
sar
arpl
sahf
xchg
sahf
aam
sbb
je
je
and
push
pop
fidivl
loop
mov
cltd
mov
mov
cs
add
in
and
or
leave
or
xchg
cld
ds
enter
jne
mov
lea
scas
ja
mov
pop
mov
out
inc
movd
jae
or
cltd
adc
push
ret
loop
outsb
fildll
mov
mov
not
cli
jecxz
fisubs
mov
fcoml
mov
movsb
stc
sub
adc
xchg
aad
add
jo
pop
jne
popa
cld
lds
xor
sbb
push
loope
xlat
shl
dec
dec
int3
xor
in
sbb
dec
mov
sub
test
cmp
push
mov
xor
xor
xor
xor
xor
xor
xor
add
push
push
add
inc
les
pusha
or
sarl
das
mov
cmpsl
in
cmp
mov
out
and
mov
xchg
test
push
pushf
push
mov
pusha
bound
ljmp
and
xchg
lock
dec
push
jno
pop
and
es
jp
lea
dec
adc
jne
mov
test
cmpsl
cli
xor
push
inc
in
mov
pop
push
or
push
frstor
repnz
shrl
in
add
lcall
das
jne
mov
sub
jae
lahf
push
pop
jae
jno
std
sbb
lods
aad
xchg
daa
dec
xchg
push
aam
mov
pusha
cmp
pusha
mov
add
and
xor
pop
push
lea
lcall
sbb
stc
fcoml
scas
jb
push
pusha
mov
jmp
sbbb
jecxz
lods
add
jno
fwait
xchg
jno
fdivrl
movsl
fisubs
mov
mov
mov
dec
sti
popa
out
out
jno
dec
cmp
xor
movsb
sbb
dec
data16
nop
push
mov
add
cwtl
aas
inc
cmpb
add
fstps
or
dec
mov
fldenv
lods
xchg
rorl
das
inc
mov
mov
inc
push
sub
sub
bound
push
add
xchg
call
fcmovnu
call
xor
mov
pushf
xchg
mov
call
outsl
cmc
add
cmc
xor
xor
outsl
aam
push
imul
lret
movsl
jle
lret
push
jno
sbb
jcxz
idiv
addl
imul
dec
movsl
test
shll
inc
test
jmp
jne
mov
inc
xchg
push
or
xchg
ja
fwait
mov
addr16
jbe
lret
lods
dec
loope
orl
add
xchg
leave
mov
adc
mov
test
adc
shrb
dec
push
sbb
xchg
cmp
out
jae
pop
push
and
insl
inc
icebp
lahf
test
lret
scas
push
nop
lcall
dec
and
lret
loop
les
or
testl
jae
push
lcall
fistl
fnstsw
js
ret
push
decb
imul
pop
cmp
in
push
pop
inc
lods
mov
jbe
mov
fstl
das
dec
rclb
mov
dec
xor
and
popa
out
jo
jl
mov
outsl
iret
dec
or
xchg
cmp
mov
jle
sti
rclb
jg
jg
cmpsb
or
test
cmp
lods
and
loop
insb
outsb
loope
fdivl
loope
ss
adc
mov
xor
fistps
imul
imul
pop
repz
adc
pop
inc
loopne
or
les
clc
sub
stc
inc
xor
aam
lcall
mov
pop
jecxz
xchg
mov
loope
scas
lcall
call
lahf
push
daa
xlat
jmp
into
jnp
orl
imul
inc
stos
sbbb
hlt
pop
fldl
adc
subl
fs
cmp
into
jg
scas
mov
pop
inc
hlt
inc
enter
jo
icebp
push
stc
ja
jmp
xor
cmp
leave
lods
or
push
rol
mov
negb
or
add
mov
xor
pushf
mov
push
add
adc
fisttpll
dec
or
mov
mov
jmp
and
loop
pusha
lret
mov
das
sub
sbb
aad
push
out
je
xor
test
bound
dec
outsl
cmp
xchg
sub
imul
out
dec
sub
mov
jg
fstl
pop
std
ljmp
idivl
inc
popfw
or
in
js
loope
xlat
rcrb
lcall
or
mov
cmp
jo
pop
xchg
mov
or
or
incb
xor
mov
sub
sbb
dec
nop
sbb
jecxz
fwait
ja
aaa
xlat
loop
in
mov
mov
mov
lahf
pop
pop
mov
ja
adc
and
mov
not
sub
mov
push
push
test
mov
testl
out
sti
loopne
loope
jne
push
repz
push
push
or
dec
nop
pop
mov
bnd
je
pop
mov
mov
sbb
jge
dec
repnz
cmp
fwait
or
cmp
mov
xchg
ror
outsl
add
outsl
mov
sub
push
jne
das
cmp
inc
jne
mov
sub
pop
dec
or
les
push
pop
bound
insl
jecxz
cmp
cmpsb
push
lahf
out
cs
hlt
xchg
lods
ljmp
xchg
xchg
call
xor
lahf
ja
mov
jne
pop
jo
iret
adc
arpl
loopne
cmp
xor
inc
lahf
cmp
dec
pushf
pop
ds
sbb
and
dec
sub
jbe
jb
insb
lods
jne
xor
loop
cmp
stos
stos
clc
sbb
imul
arpl
loop
aas
cmp
mov
iret
xchg
cmp
sub
add
test
xor
fadds
sub
insb
popa
push
inc
adc
push
pop
and
das
cmpsl
push
mov
xchg
mov
nop
jne
lods
inc
daa
xchg
mov
jecxz
pop
test
fidivl
xor
xor
xor
xor
add
push
add
add
lahf
cwtl
lods
and
jle
xor
cwtl
in
outsl
mov
or
repnz
lods
push
jbe
adc
in
xchg
and
mov
pusha
inc
add
cltd
sbb
or
call
rclb
push
sub
mov
iret
push
inc
sbb
push
cmp
or
mov
aad
adc
sbb
lock
mov
mov
fidivs
insl
in
shrl
sbb
mov
push
mov
popf
push
xchg
push
mov
jb
paddsb
mov
add
cmp
in
nop
test
sti
sub
cmp
cmp
arpl
ret
in
movsb
and
xor
pop
int
and
rcrl
ss
inc
rol
std
push
pop
xor
shl
and
mov
xor
adc
imul
or
add
inc
jno
in
adc
mov
mov
js
stc
in
mov
es
push
mov
mov
adc
dec
and
inc
iret
mov
mov
pop
xchg
hlt
push
mov
jp
aam
push
sub
lret
inc
hlt
pop
sbb
lods
jecxz
xchg
imul
and
fwait
push
and
je
out
sub
lret
icebp
cld
aaa
lea
xchg
aam
jmp
and
rclb
lahf
mov
pop
lret
cmp
inc
or
insb
sub
mov
or
jo
mov
lods
enter
loop
loope
imul
mov
mov
leave
nop
out
add
xchg
add
int
int3
push
mov
out
inc
aad
lea
sti
das
inc
sbb
mov
jg
xor
shrl
aam
inc
cmc
add
rol
imul
push
in
push
ret
and
pop
adc
sarl
or
pop
xchg
rorb
icebp
push
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
roll
add
jne
xlat
ljmp
mov
push
das
push
test
xchg
jecxz
fistpll
mov
adc
outsb
sub
cmovl
sbb
test
sbb
push
mov
outsl
jecxz
lahf
test
mov
incb
loopne
dec
mov
test
stos
movsb
push
cwtl
mov
in
jl
pop
mov
mov
cmp
shrb
inc
jno
mov
add
dec
cs
xor
iret
inc
lea
xchg
fdivrp
and
cmp
iret
sbbb
cld
xchg
mov
or
lret
sbb
in
out
push
ja
out
scas
inc
and
adc
out
push
into
add
mov
sbb
mov
inc
enter
xor
sub
add
sbb
dec
iret
loope
mov
stos
or
dec
flds
jae
pop
inc
fadds
orl
imul
and
jae
aad
ljmp
shlb
out
dec
stc
rcll
mov
xor
cmc
decl
mov
push
mov
clc
mov
push
push
inc
sbb
iret
mov
dec
and
insb
cs
sub
cmp
cmp
mov
dec
push
push
stc
cmp
shrl
sti
sub
int3
insb
sbb
orl
inc
inc
inc
sti
jmp
dec
ja
std
sti
outsl
jns
pusha
sub
int
jle
sahf
scas
push
enter
xchg
adc
into
pop
pusha
and
insb
jb
mov
fsubrl
mov
dec
mov
clc
push
and
mov
mov
subb
push
clc
fistl
add
andl
cli
loopne
add
imul
in
mov
std
lock
roll
dec
pop
pop
test
lcall
sahf
xor
mov
ficomps
insb
loopne
ss
sub
fidivrl
out
dec
adc
fisubrs
mov
push
cltd
lret
data16
cmp
xor
pop
push
add
fstl
lret
ss
lods
inc
xor
inc
inc
adc
mov
into
mov
mov
fwait
xor
imul
ds
and
or
fdivl
out
push
inc
sbb
outsb
ds
and
scas
xor
scas
fidivl
stos
cwtl
dec
imul
push
ja
test
sub
rorb
push
data16
data16
fs
lret
frstor
dec
sbb
icebp
in
xchg
scas
in
jp
sub
arpl
in
cld
nop
cmp
or
loope
and
divb
sbb
clc
loopne
or
xorb
sub
sbb
xlat
rcll
cmc
enter
cltd
into
mov
popf
mov
les
cmp
inc
call
mov
add
out
xchg
cmc
add
enter
add
and
cmc
sbb
cwtl
shrb
sub
orb
inc
into
dec
xor
and
into
pop
int
test
push
push
and
nop
dec
jbe
cmpsl
xchg
sbb
add
stos
push
xchg
jae
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
add
add
jne
loope
and
cmp
jmp
movb
arpl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
scas
push
add
mov
sbb
das
jb
xchg
or
sahf
imul
in
inc
mov
pushf
mov
icebp
mov
push
mov
out
inc
ret
mov
mov
outsl
lds
mov
mov
in
mov
mov
scas
imul
fisubrl
dec
xor
jl
xchg
leave
in
movsb
cmp
sub
add
push
out
mov
je
aad
and
idivb
movsl
push
ret
push
add
or
fisubs
mov
out
cmp
push
add
adc
into
mov
mov
jns
and
and
aaa
imul
scas
cmc
jge
fwait
stc
in
xor
sub
pop
mov
mov
daa
xchg
push
neg
test
inc
sub
cmpsl
xchg
jb
adc
mov
cmp
adc
or
pusha
mov
mov
cmp
repz
js
popa
pop
pop
mov
aam
and
mov
push
loope
xchg
ds
adcb
rclb
pop
out
mov
xchg
hlt
cmp
lock
push
pop
jbe
into
xor
dec
pop
jbe
add
rclb
jl
ss
xchg
fdivl
cmp
push
loope
and
lcall
sarb
ja
add
arpl
popf
test
mov
stos
test
lods
frstor
mov
push
loope
sub
repz
cmpsb
in
pop
nopl
cmp
cmp
and
ja
insb
inc
mov
jmp
adc
ss
pop
xor
dec
and
mov
ds
pushf
mov
outsl
push
mov
lods
xor
mov
sub
sub
div
popa
loope
cwtl
daa
sar
in
cmpsb
or
cld
add
je
jle
cmpsb
cs
sub
fnstcw
add
push
repz
je
xchg
fnstsw
xchg
int3
and
mov
rcrl
mov
mov
inc
push
data16
cs
ss
sar
add
xchg
mov
push
xchg
push
mov
popa
sbb
int
fs
mov
pop
add
cmpsl
bound
sbb
les
inc
xor
push
push
mov
mov
mov
xchg
add
xchg
lock
push
stos
rorl
das
mov
pop
outsb
andl
jge
test
dec
jne
fwait
xchg
enter
andb
inc
divl
mov
mov
insb
jle
xor
jbe
aas
and
pop
dec
mov
push
inc
and
icebp
iret
cmpsb
jnp
out
dec
div
xor
ret
push
js
cmp
shlb
in
push
adc
sub
mov
mov
das
fmuls
xchg
mov
push
jo
cmp
xchg
aad
push
mov
push
aas
push
sub
inc
stc
cmp
stos
imul
outsb
xor
and
xchg
or
mov
adc
mov
xchg
adc
xchg
pop
xchg
add
stos
repz
adcl
dec
mov
test
mov
xchg
in
xchg
cmpsl
mov
aam
scas
push
mov
xorl
xchg
fcoms
sahf
js
sbb
jo
xlat
fisttps
cmpsl
push
adc
lahf
icebp
xor
test
inc
out
push
in
icebp
scas
add
jbe
or
popf
es
add
mov
lods
rorb
cmpsb
out
es
movsb
je
rcrb
test
pop
lds
aas
jne
or
stos
mov
fs
and
add
aas
shrl
idivl
mov
in
inc
repnz
push
leave
pop
lret
fstps
cltd
jmp
add
xor
pushf
xor
sbb
in
mov
mov
pand
jae
adc
pop
pop
decl
mov
mov
push
xor
adc
daa
pop
ds
outsb
cmpsl
inc
xlat
xchg
xor
pop
add
xchg
pushf
and
cmp
adc
jns
punpcklwd
xchg
xor
lea
cld
iret
subb
jmp
lcall
sub
or
out
call
xor
mov
scas
cmp
xchg
lret
gs
jmp
and
nop
fcomps
lret
and
cmp
or
aam
nop
pop
pushf
sbb
int3
fmuls
gs
push
xchg
jecxz
adc
add
dec
or
and
xor
add
jo
inc
or
loopne
inc
sbb
out
mov
in
ret
call
mov
je
stos
incl
jg
pop
xchg
xor
inc
std
inc
dec
fwait
mov
rcl
out
add
sbb
test
imul
and
bound
add
stos
push
ss
imul
sbb
and
fdivr
in
mov
fwait
stc
popf
std
lea
cmp
sub
xor
nop
lret
push
xchg
xor
mov
and
xlat
add
sahf
cmp
dec
inc
sub
pop
and
cld
jp
dec
lock
mov
sbb
cmpxchg
repz
wbinvd
in
ret
pop
ss
aas
movsb
into
fistps
insl
pusha
push
dec
and
and
mov
xchg
xor
xor
xchg
adc
test
push
xchg
fistl
leave
sbb
imul
dec
sub
int3
jne
push
aas
daa
lret
cmp
xchg
and
pop
mov
mov
and
sub
insb
add
add
shlb
fldpi
gs
es
push
cmp
dec
push
cmp
mov
xor
cli
outsl
pop
mov
and
dec
inc
call
es
mov
dec
mov
xorb
mov
mov
jb
jg
std
popa
sub
cmp
jmp
lock
xor
ret
or
lds
inc
in
loopne
je
mov
sub
push
fucomp
inc
push
les
in
scas
rcl
mov
xor
xor
xor
and
add
cmp
add
dec
repz
dec
imul
mov
outsl
fdiv
push
icebp
or
mov
stos
push
stos
push
push
sub
into
and
pop
push
push
ja
push
push
dec
lcall
push
jle
or
in
pop
movb
movsb
roll
dec
mov
int
ds
movsb
test
sbb
mov
push
std
std
cmp
fmulp
loopne
imul
pop
push
xchg
sti
cmp
mov
or
cld
aam
cmc
imul
inc
mov
aas
dec
jno
fdivr
cmp
lcall
mov
add
arpl
xchg
ds
sbb
adc
xchg
xchg
es
sbb
pop
insb
dec
cs
mov
sub
in
pop
xchg
pop
push
stc
adc
mov
inc
push
sbb
mov
sub
pop
mov
xchg
gs
pop
xchg
mov
inc
mov
mov
ljmp
in
pusha
ss
add
bound
aam
hlt
test
mov
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sahf
add
add
rol
or
ret
mov
push
mov
pushf
roll
les
jg
ljmp
push
mov
daa
cmpsl
dec
mov
lods
mov
out
insl
scas
mov
mov
lods
and
punpckhdq
add
aam
sarl
mov
add
outsl
or
pop
sahf
mov
pop
imul
arpl
xchg
js
jle
aas
leave
lods
or
add
xchg
jge
add
fmull
mov
adc
mov
sub
sub
xor
lcall
xchg
pop
or
jne
push
test
dec
ljmp
cmc
fimuls
cmp
jg
or
or
lods
add
and
or
lock
into
fwait
outsb
dec
jle
jo
ss
push
not
in
and
mov
dec
xchg
pop
sbb
mov
jnp
hlt
stos
das
pop
les
outsl
lds
dec
sub
lds
insb
dec
xlat
mov
arpl
lret
xchg
nop
negl
int3
mov
add
aad
and
in
xlat
repz
add
push
pop
pop
xor
js
in
addr16
fbld
out
xchg
add
inc
sti
pop
les
jp
movsb
fidivrl
fmul
and
test
sbb
jnp
sbb
in
sub
pop
add
insb
jge
mov
sbb
mov
or
inc
gs
rcl
cmc
cmpsb
leave
std
stos
xorl
lods
aas
mov
jae
inc
mov
mov
dec
add
popa
sbb
jecxz
push
jecxz
mov
adc
inc
cmpsl
mull
mov
repz
and
gs
pop
or
mov
cmp
pushf
stos
xor
cltd
or
jle
aas
insb
stos
xchg
pop
adc
iret
pusha
hlt
mov
outsb
mov
sbb
lods
mov
iret
and
aad
sub
je
fwait
mov
int
push
or
movsb
push
lahf
iret
dec
mov
adc
xchg
bnd
iret
mov
and
ljmp
out
leave
cmpsb
ret
rcl
or
subb
outsl
enter
and
fadds
pop
inc
mov
add
mov
mov
movsb
push
gs
and
pop
aas
cmp
sub
lock
inc
lock
add
add
fmuls
mov
push
pop
mov
push
cwtl
test
xor
dec
outsb
cmpsl
sbb
aaa
push
cmpsb
push
daa
and
mov
cmpl
inc
xchg
popa
mov
jmp
inc
inc
pusha
icebp
xor
pop
mov
or
or
movsl
mov
add
fldl
pop
sub
push
outsb
movsb
and
inc
pop
arpl
out
cmp
es
jbe
out
mov
aas
mov
pop
add
fistpll
jbe
fsubrp
test
xor
scas
bound
sub
int3
mov
mov
stc
sub
rclb
ds
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
dec
add
add
add
push
lret
jmp
add
xor
adc
and
add
outsl
fstl
inc
push
pop
xchg
mov
out
jmp
cmp
add
dec
sub
pop
jmp
pop
mov
xor
mov
mov
jbe
cmp
mov
push
inc
and
and
push
sahf
xor
push
push
push
imul
lock
adc
sbb
hlt
pop
das
mov
add
fimull
test
call
xlat
outsl
ret
ljmp
insb
push
push
call
int3
jno
cmpsl
mov
xor
mov
push
ss
lret
sti
test
add
sbb
js
gs
les
push
pop
xchg
out
sbb
adc
push
sbb
ss
pop
add
test
pop
add
aad
and
pusha
icebp
push
lods
movsl
or
jg
adc
in
push
and
stc
mov
xchg
repnz
pop
ficompl
jne
movsl
mov
fldenv
xlat
push
lods
mov
out
and
push
cli
iret
lods
cmp
pushf
testb
ret
push
mov
jmp
fs
scas
mov
fcom
aaa
fimuls
inc
adc
inc
inc
out
outsl
mov
xchg
xchg
pop
and
mov
lret
push
insl
cmc
push
iret
or
jo
loope
push
mov
clc
mov
fnstenv
dec
sarl
int
jne
pop
cmpsb
add
cs
fstl
outsb
jmp
push
cmpsl
xor
mov
push
call
dec
jp
push
push
loope
push
sub
jbe
arpl
jmp
sahf
fs
movsl
cltd
xchg
jmp
jp
cmp
testb
ss
ja
add
out
push
push
pop
outsb
lret
fistps
jmp
mov
cmp
std
xchg
outsl
stc
dec
inc
push
dec
xchg
dec
orl
jno
dec
inc
daa
sub
adc
movsb
data16
jne
mov
fstpt
pop
bound
in
jne
sub
int3
mov
xor
es
shll
aad
push
clc
mov
mov
sub
jl
or
jbe
cmc
sub
inc
xor
xchg
sub
jne
xlat
data16
push
and
sbb
test
outsl
inc
xchg
mov
and
lahf
jle
mov
jge
shrd
test
ljmp
xchg
cmpsb
or
push
ficompl
push
jns
call
ss
dec
aam
xor
xor
cmp
mov
retw
add
mov
adc
push
cmc
aas
popf
add
addr16
push
xor
into
sbb
lcall
sub
mov
mov
inc
inc
cld
jb
add
movsb
rcr
scas
arpl
and
mov
insb
fisubrs
sub
adc
add
push
out
cmpsl
xor
inc
gs
loop
out
inc
or
mov
add
insb
add
add
xor
xor
aaa
add
add
add
xor
jle
jmp
mov
sub
jns
xor
and
and
dec
dec
divl
ja
popf
adc
stc
push
jbe
pop
pusha
fcomip
aas
sahf
test
adc
stos
inc
test
jecxz
fdivr
jnp
inc
lret
xor
lods
lods
dec
addw
insl
or
jp
out
ret
mov
xchg
test
addr16
pop
fimull
pop
mov
subl
dec
data16
les
popf
js
je
inc
mov
mov
stos
call
push
lcall
orb
mov
inc
ljmp
aad
call
xchg
xchg
cltd
jno
pslld
xchg
adc
jnp
fadds
xchg
push
inc
enter
and
and
and
push
enter
xchg
pop
sbb
jnp
in
mov
inc
test
push
push
cmpsb
mov
mov
mov
loope
dec
imul
jp
adc
test
pop
cmp
add
mov
push
cs
and
pop
stc
dec
sbb
sbb
out
out
push
jmp
adc
push
data16
lock
lret
xor
in
addr16
fs
or
jmp
add
or
mov
cltd
icebp
testb
mov
jbe
cmp
or
enter
mov
mov
imul
clc
mov
repnz
pop
xchg
gs
push
push
add
cmpsb
push
xchg
dec
popf
inc
les
cmpsl
and
scas
mov
jno
push
lea
dec
lods
int
insb
mov
es
ret
icebp
jp
out
cmp
sub
xlat
mov
pop
sub
repz
adc
cmp
sub
xchg
rcrb
adc
ja
cli
add
inc
hlt
andl
loopne
faddl
xor
wrmsr
loop
and
jge
test
subl
psllw
insl
imul
push
arpl
push
adcl
in
inc
fstpl
jbe
mov
add
lcall
pop
lock
adc
sub
adc
iret
addl
push
adc
sbb
cmpb
sti
mov
cmp
fs
out
adc
push
fdivrl
cmpsb
sbb
les
mov
in
lahf
or
adc
mov
rcrb
xchg
xchg
jp
pop
int3
dec
mov
xlat
inc
pop
stos
js
in
mov
and
sbb
cmp
pushf
push
aaa
in
sub
push
inc
imul
push
out
sbb
cmp
mov
lret
jb
xchg
and
icebp
mov
mov
pop
xor
cmpsb
cmp
mov
sub
xor
xchg
sub
add
sub
sub
leave
js
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
add
jg
add
fdivr
pop
sti
push
add
xchg
fsubrs
fcmove
push
hlt
dec
xchg
push
je
lar
cwtl
pop
pop
fbstp
shrl
fdivl
sub
sti
push
push
add
dec
movsl
xchg
mov
pop
dec
sub
adc
or
sub
out
incl
rclb
or
dec
mov
int
add
cmp
mov
mov
adc
es
das
xchg
cli
cmp
add
jg
jbe
jae
ret
xor
enter
insb
insl
sbb
jns
or
xlat
insl
inc
cmp
sub
call
out
xchg
jae
dec
push
stos
xchg
out
cmp
shll
jle
push
std
flds
push
push
lcall
xchg
xchg
data16
clc
jnp
hlt
in
inc
xor
push
lahf
add
mov
jl
fsubs
and
cmpsb
jecxz
out
jmp
ret
lret
mov
sti
int3
stos
push
xor
cltd
push
rol
shrb
inc
and
sti
popa
clc
adc
fbstp
test
jl
xchg
cmp
push
mov
push
adc
and
add
cmc
aas
pop
mov
outsb
mov
mov
les
mov
fisttpl
xchg
push
push
cmp
xchg
mov
push
jbe
mov
or
mov
stos
imul
ja
test
decb
sub
sti
stos
fs
or
clc
sbb
outsl
es
bound
inc
mov
ljmp
loopne
rclb
sub
scas
sbb
mov
mov
movsl
cltd
mov
testl
and
rcrw
lret
in
cmp
add
rcll
shrl
iret
fistps
inc
aas
pop
or
pop
sbb
pshufw
pop
sub
xor
sub
inc
jmp
mov
je
adc
outsl
inc
mov
xchg
jge
cmpsl
cwtl
jb
sub
xor
or
popa
xor
cmp
sbbl
jnp
ds
push
sub
and
stos
cli
jbe
test
inc
fistps
leavew
adc
imulb
and
aam
or
hlt
ss
and
clc
shl
dec
xchg
mov
insl
fabs
sub
jge
pop
inc
jge
jb
or
and
dec
lahf
sti
jb
pop
lock
outsl
fstpl
shl
xchg
out
xor
stos
mov
popa
loop
push
or
loope
pop
lods
push
movl
xchg
ret
cwtl
mov
sti
push
cmpb
push
rcrl
sub
push
jecxz
in
add
popa
xchg
xchg
xor
adc
mov
adc
mov
push
subb
movsl
sbb
add
or
test
fs
adc
fs
and
nop
xor
call
icebp
jne
movsl
insl
int
in
dec
enter
push
sbb
aam
pop
scas
ret
repnz
lds
or
xor
sar
fdivrs
subl
or
jnp
orl
arpl
pushl
xlat
movsb
dec
jnp
dec
push
jns
or
popa
nop
hlt
mov
fs
jmp
insl
addr16
dec
test
xor
mov
dec
ficompl
inc
xchg
adc
sbb
mov
lcall
test
es
ss
enter
mov
idiv
mov
data16
mov
jne
rclb
and
outsl
ret
cmp
test
cmp
dec
cmpsl
rcll
idivl
pop
daa
sub
adcb
cltd
or
sub
push
clc
cmp
gs
rclb
ja
outsb
sub
orb
nop
leave
decb
xchg
mov
cmp
add
or
imul
adc
lods
mov
ficomps
sbbl
out
cmp
jl
push
jg
int
ss
or
data16
jle
sub
pop
leave
testl
jmp
cmp
mov
cmp
add
test
push
xor
imul
xchg
out
daa
scas
pop
popf
test
pop
mov
andl
cmp
mov
dec
push
dec
adc
aam
mov
shlb
jno
sub
ds
out
fldcw
mov
inc
les
jns
dec
ret
sub
fldl
int
into
sbb
jne
dec
pop
cmp
dec
and
rolb
push
decb
sbbl
stos
push
mov
loop
cmp
and
sahf
ljmp
sbbb
mov
pop
jno
rcrb
fsubrl
out
jp
push
in
or
pop
sbb
cmpb
mov
inc
cmc
test
jmp
js
leave
adc
das
add
pushf
mov
loop
jae
shlb
sub
mov
jb
adc
repz
stos
out
out
subl
repz
cmp
stos
mov
fidivs
pop
std
inc
cld
add
lahf
iret
jecxz
mov
xor
aam
outsb
aam
enter
cmp
or
jmp
inc
and
push
repnz
mov
repz
fisttps
aam
pop
ds
push
or
or
sub
mov
lcall
and
repnz
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
outsb
pop
add
dec
les
xchg
in
cmp
dec
xchg
loopne
pop
mov
call
mov
mov
stos
push
shlb
fnsave
pusha
push
inc
hlt
cwtl
stos
pusha
jno
push
nopl
movswl
push
mov
add
and
push
adc
test
fistpl
dec
clc
pop
xchg
insb
dec
in
ljmp
rclb
call
mov
test
repnz
gs
cli
mov
or
fstps
sub
mov
jmp
ds
or
fnstcw
int
fsubrl
popa
pushf
shll
jnp
rolb
out
pusha
add
inc
push
insb
mov
sbb
inc
inc
cmp
inc
pop
sbb
shlb
ja
mov
cwtl
loopne
mov
jbe
fidivl
insl
cld
inc
add
scas
das
leave
add
and
movsb
in
cmp
repnz
inc
lds
mov
ret
sbb
popa
jnp
ror
inc
mov
test
xor
inc
cli
jle
into
gs
pop
shrl
int
dec
pop
cmp
hlt
jle
rclb
or
and
jnp
jmp
or
jmp
outsl
pop
lds
pusha
inc
push
out
lods
adc
cmp
inc
ja
or
push
call
orb
test
in
addl
mov
iret
sarl
adc
mov
loopne
dec
rclb
cmp
mov
mov
push
mov
jl,pt
lea
mov
sbb
or
fwait
insl
das
into
push
mov
mov
mov
aas
xchg
sahf
push
adc
icebp
xchg
xchg
push
imul
test
inc
rolb
mov
out
aaa
pop
call
dec
cltd
mov
repnz
ret
add
ret
out
mov
mov
push
lret
sbb
xlat
nop
adc
popa
adc
imul
shr
pop
fsin
in
push
ret
sub
clc
jmp
dec
dec
rclb
cmp
jecxz
adc
data16
lea
mov
mov
imul
pop
and
dec
out
scas
je
and
out
mov
test
add
jl
ja
leave
data16
mov
dec
pop
and
add
and
in
jo
dec
xchg
fst
pop
push
imul
aas
add
pusha
mov
test
aad
popa
insl
lahf
cmc
mov
mov
outsb
pop
cmpsl
push
gs
xor
jge
out
lahf
sub
js
outsl
jge
jl
jnp
jnp
out
ja
inc
or
mov
inc
test
addr16
js
add
jmp
loope
std
adc
dec
jmp
sbb
mov
enter
ja
std
out
aaa
fbstp
cmc
push
icebp
jb
les
adc
xor
test
mov
and
dec
mov
fwait
jbe
push
and
xchg
test
mov
repz
sub
out
sub
cld
mov
push
mov
jno
data16
sbb
push
shrl
or
jle
nop
nop
xchg
xchg
push
cmpsb
movsl
jg
loop
and
xchg
dec
xlat
xchg
sub
cmc
inc
sbb
and
or
imul
movsl
and
pop
mov
ss
adc
push
inc
pop
add
and
push
mov
dec
sbb
xchg
sbb
xorb
mov
adc
in
xchg
data16
rcll
mov
mov
adc
test
mov
and
mov
out
sahf
xchg
lds
loopne
and
mov
ljmp
cmp
jecxz
pusha
xor
xor
cltd
cmp
mov
sbb
sar
pop
out
dec
sbb
jns
jno
mov
jnp
ds
sbb
or
insb
scas
add
cmp
ds
loopne
push
xchg
cs
cmp
out
xor
dec
ror
mov
push
pop
pop
mov
cli
xor
xchg
mov
stc
dec
adc
jmp
adc
in
or
push
cltd
mov
call
fisttpll
mov
cmp
jle
scas
and
sub
dec
sbb
hlt
dec
aaa
sbb
sarb
jb
popf
imul
sub
and
xchg
push
dec
fs
cmp
pop
pop
sbb
scas
and
push
dec
and
sub
push
and
test
ss
xchg
cmc
add
imul
adc
in
ret
or
mov
loop
jmp
leave
mov
test
mov
cmp
or
mov
xlat
and
xor
pop
pop
add
scas
dec
push
rorb
ja
add
js
movsb
mov
dec
ficompl
sbb
dec
in
lea
gs
mov
or
lret
adc
or
add
mov
push
jno
mov
xchg
inc
mov
rcrl
or
xchg
imul
mov
push
dec
xchg
in
add
rclb
data16
fwait
clc
loopne
pop
cli
mov
xor
mov
orb
imul
sub
inc
xor
call
mov
add
fiaddl
add
mov
pop
and
ljmp
imul
lods
add
inc
ret
and
xchg
idivb
inc
out
push
adc
shrb
mov
dec
jmp
mov
mov
test
popa
add
in
fwait
jbe
cltd
pop
push
lds
sbbl
clc
mov
jae
mov
ja
mov
cmp
scas
add
das
or
adc
fwait
mov
loop
xorb
cmp
dec
jmp
scas
lahf
sub
and
xor
jns
push
xchg
mov
shlb
bound
dec
xchg
mov
testb
jp
mulb
imul
cmp
or
pop
faddl
jae
sarl
jo
test
xorl
scas
lcall
insb
xor
push
jnp
dec
xor
push
push
lcall
arpl
fsubrs
add
cmp
inc
push
jmp
test
jmp
sub
repz
mov
jae
lea
wrmsr
add
dec
mov
add
andb
mov
mov
out
das
or
aaa
jecxz
mov
pop
nop
mov
jne
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
ror
jle
cmp
xorl
or
cmp
adc
jo
mov
mov
orb
pusha
and
add
lock
mov
in
lahf
adc
pop
shll
or
xchg
fsubs
enter
popa
lret
sub
xchg
in
andl
fstps
sti
sub
popa
cld
int
enter
test
lock
jnp
xchg
lock
pop
stos
flds
pop
leave
cwtl
cmp
add
jns
je
dec
cwtl
cmp
pop
and
insl
cmp
pop
decl
jg
mov
icebp
daa
mov
jo
je
jg
add
mov
mov
sahf
insl
nop
daa
add
std
xor
inc
jmp
cltd
cmp
jg
div
imul
movsb
xor
inc
into
das
std
jmp
shlb
cwtl
xchg
push
in
cmp
sbb
inc
jle
xor
jo
stos
mov
andb
pop
inc
or
stos
jl
sub
cmp
divb
js
mov
data16
lods
or
xchg
mov
fisubl
xor
cli
dec
sub
bound
ds
or
in
out
pop
lds
or
lcall
das
mov
mov
jge
rolb
adc
push
cmpsl
cmp
outsl
mov
and
mov
sti
cmp
jle
and
push
out
adc
insl
dec
clc
daa
xchg
dec
mov
add
cmp
adc
inc
movsb
push
xchg
dec
dec
inc
rcr
mov
mov
push
xor
movsl
pusha
in
jno
xchg
xor
jns
and
push
adc
adc
mov
fs
and
out
outsb
aad
inc
mov
dec
pop
xor
scas
add
push
imul
daa
sub
or
imul
jo
fisttpl
dec
addr16
push
pop
out
addb
popa
jmp
pop
pop
inc
adc
jns
cmp
add
or
jmp
clc
sbb
js
xchg
in
ret
testb
push
jmp
dec
lods
cwtl
adc
sub
outsl
push
cli
fisubl
ret
popf
das
vpandn
int3
sub
jmp
mov
fs
shll
xchg
ret
ja
push
add
shrb
cli
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
pop
add
mov
jp
adc
repnz
mov
mov
pusha
daa
pop
loopne
outsl
ja
or
push
jp
xor
pop
jle
mov
sahf
das
push
or
or
mov
iret
push
mov
mov
rcll
adc
adc
out
aas
sete
cmp
cltd
dec
push
or
pop
jmp
pop
cmc
sbb
stc
inc
outsl
dec
sub
mov
pop
or
or
push
and
mov
push
fadds
sti
leave
lods
lret
inc
xor
iret
stos
dec
cmp
xchg
lahf
push
jg
add
fs
js
setne
lods
sub
lock
pop
dec
inc
push
adc
push
inc
cmp
out
xor
or
xor
adc
sbb
popf
js
xchg
js
jmp
out
adc
push
sbb
xchg
outsb
incl
xlat
movsb
ja
bound
popf
mov
mov
das
jmp
inc
test
mov
out
pop
pop
jl
dec
icebp
nop
aad
push
lods
aas
das
xor
mul
add
test
stos
ret
cmp
sub
sti
imul
inc
add
inc
push
mov
icebp
pop
push
mov
xchg
aaa
subl
and
mov
push
mov
lock
ret
adc
fdiv
mov
mov
aad
xchg
jg
pop
jns
sub
cltd
pop
out
mov
lret
jmp
sub
je
xchg
das
es
adc
inc
cs
lcall
ficomps
pop
pop
pop
gs
adc
pop
xlat
and
or
bound
or
sbb
dec
add
lea
adc
mov
js
or
adc
fdivrs
movsl
push
dec
jnp
mov
xor
stos
xor
push
aad
lea
pop
xchg
cli
jge
shll
jns
jp
mov
out
addr16
xchg
add
fcmovu
sbb
in
inc
sti
and
sbb
push
add
movsb
push
scas
out
out
xorb
fmul
and
sarb
dec
and
sbb
je
daa
iret
flds
cld
test
cmp
ss
xor
jle
jns
dec
ja
ljmp
xchg
into
repz
cwtl
pop
or
loopne
push
lahf
fs
cmp
jb
roll
fnstsw
aad
jns
fsts
jbe
mov
pusha
push
xchg
aam
cli
dec
sbbb
sub
cmp
and
jbe
pop
jmp
xlat
adc
and
pop
pop
mov
mov
cld
lahf
fbld
addl
lahf
jge
cwtl
scas
and
outsl
ret
and
lret
jecxz
les
pop
push
push
cs
mov
jno
sahf
test
dec
sub
inc
mov
imulw
add
cltd
inc
sub
jg
add
ss
ret
cmc
sbb
inc
adc
add
lods
mov
sbb
les
je
jge
addl
addr16
push
dec
mov
xchg
mov
push
roll
xor
scas
cwtl
adc
cmp
add
xchg
les
andl
sarb
mov
shlb
fcmovu
jo
in
push
sub
sbb
mov
xor
mov
sub
out
outsl
jmp
cmpsb
lret
mov
xor
sub
cs
inc
jns
gs
dec
shll
mov
add
clc
dec
or
cmpsb
fisttpl
gs
call
mov
mov
test
add
outsl
cli
push
jae
cmp
out
dec
dec
xlat
insb
repnz
movsl
add
mov
rcll
inc
xchg
pop
add
xchg
stos
and
mov
int
mov
push
mov
nop
clc
cmpsl
gs
xchg
mov
das
fwait
shlb
aas
push
inc
mull
jo
sti
xor
outsb
adc
roll
xor
or
and
mov
jp
adc
or
xchg
push
addr16
sbb
shlb
inc
add
xor
jmp
push
add
mov
mov
into
test
cld
into
xchg
add
mov
adc
outsb
cmpsl
and
sbb
jmp
pushf
or
lods
aad
mov
jae
and
test
and
inc
mov
cmp
dec
mov
mov
pop
xchg
mov
sti
je
sbb
jo
xor
and
cmp
inc
es
into
imul
xchg
sbb
pop
dec
push
mov
frstor
xchg
js
jg
sbb
nop
lret
push
pop
push
or
mov
add
dec
mov
mov
addr16
xchg
mov
cmp
hlt
fadds
mov
out
pop
add
lods
cmp
pop
iret
push
lods
sbb
repnz
into
xchg
pop
inc
and
mov
fistl
mov
add
daa
or
xchg
push
inc
sar
mov
icebp
jmp
ljmp
je
int3
fistpll
xlat
push
loop
sahf
test
mov
sahf
ss
test
cli
jle
push
cmp
jae
daa
aaa
into
insb
addl
mov
outsl
lahf
jg
popa
outsb
iret
dec
xor
cltd
faddl
or
xchg
mov
daa
add
repz
push
mov
fcmovne
in
and
cld
fildl
es
lock
sbb
mov
lret
fmull
cmp
xchg
fistpl
outsb
cmp
jp
jmp
jns
cwtl
and
into
insb
into
mov
stc
cmpsb
push
xchg
sub
xchg
or
add
xor
loopne
cmpsb
mov
leave
sbb
inc
popf
int3
scas
and
push
in
and
push
mov
mov
test
pop
roll
inc
bound
dec
add
rcl
cltd
or
mov
mov
sbbl
push
cli
sbb
jmp
or
cld
push
push
pop
or
into
inc
or
adc
pusha
sti
and
loopne
cmpsb
jp
pop
mov
insl
xchg
and
into
dec
adc
scas
sub
lds
jecxz
imul
and
push
jns
imul
mov
test
ja
xchg
or
mov
in
push
fld
pop
cld
sahf
aad
lahf
mov
add
cpuid
ret
cli
cs
fsubrl
cltd
rcll
ret
pop
mov
insl
daa
outsb
push
int
movsl
dec
nop
jp
out
sbb
stos
sti
and
push
imul
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
scas
add
add
fxch
dec
sbb
flds
jle
xor
add
mov
push
shll
in
stc
shlb
fsubs
and
ret
int
push
loopne
cltd
mov
add
sbb
mov
sbb
arpl
ljmp
sbb
cmp
or
and
repnz
mov
xchg
xchg
pop
push
xor
sti
dec
push
jnp
stos
nopl
sbb
sahf
push
out
imul
push
lahf
jb
int3
loope
dec
jp
mov
cs
mov
adc
jmp
jl
cmp
in
movsb
mov
in
xchg
dec
mov
sub
mov
lea
stos
mov
mov
mov
adc
pop
inc
pop
inc
xor
and
addr16
out
mov
jp
mov
or
mov
repnz
sub
or
mov
fmull
dec
xlat
mov
lock
out
call
test
fcomp
mov
lahf
ffreep
sahf
cmp
sub
sbb
cmp
jl
or
fimull
ftst
cmpsb
lcall
ret
test
lahf
push
jg
sub
cmp
or
pop
xor
pop
mov
movsb
sbb
mov
mov
aas
dec
cmc
cmpsl
mov
imul
sub
jns
cmc
sbb
scas
sub
scas
adc
js
mov
cli
mov
ret
push
push
imulb
jb
fimull
test
rorb
shll
adc
mov
push
jle
fistps
add
sar
pop
ljmp
repnz
xchg
lds
stos
movsb
push
dec
cld
xchg
in
cltd
outsl
push
push
mov
mov
scas
in
gs
fdivrp
aas
imul
xor
test
inc
dec
add
sti
or
xlat
push
fistpl
add
push
pop
repz
push
adc
test
cmpxchg
scas
dec
test
mov
sub
cmpsb
and
xlat
aad
inc
js
ds
icebp
xor
outsl
scas
xchg
xchg
int
mov
loopne
daa
pop
inc
aam
and
adc
mov
mov
sub
lds
jnp
mov
fs
add
sbbb
shlb
sub
mov
lock
pop
mov
and
mov
adcb
pop
fldl
mov
mov
or
in
lcall
ret
test
lahf
push
jg
sub
cmp
or
je
sahf
add
ret
ja
mov
xor
xor
sbb
sub
lcall
and
xchg
jg
sbb
fwait
xor
adc
jg
outsb
sub
xor
fistl
sbb
xchg
daa
mov
inc
pushf
xor
and
stos
mov
in
inc
pop
xchg
test
mov
inc
inc
cltd
rclb
scas
aad
mov
shr
scas
mov
xchg
mov
enter
mov
mov
faddl
jae
xchg
std
mov
outsl
lcall
lock
dec
inc
mov
push
sub
dec
mov
lods
cmpsl
ret
dec
popa
out
mov
sub
xchg
pop
adc
jb
jecxz
jge
mov
dec
fs
aam
mov
sarb
cli
mov
arpl
daa
cltd
mov
in
cmpsl
ret
lods
cmp
adc
add
scas
xor
xchg
test
jge
pop
mov
in
jbe
repz
inc
dec
pop
rcl
and
adc
cs
aas
push
or
sti
stos
xchg
iret
dec
loopne
sarl
push
xorl
sarl
fidivrl
test
push
xchg
mov
sahf
dec
mov
inc
imul
jmp
es
lea
gs
jg
lds
repnz
out
scas
cmp
xorb
sti
out
mov
shr
xor
xor
lds
test
xchg
inc
jl
addr16
or
mov
imul
inc
clc
mov
jmp
add
sbb
lcall
mov
and
mov
adc
jl
pop
movsl
mov
aad
sbb
cli
cli
cmpsb
mov
addr16
or
out
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
push
add
push
in
outsb
fldcw
stos
rcrb
pop
mov
or
cmp
xchg
adc
add
add
bound
push
xchg
push
mov
push
or
pop
notl
push
pop
jmp
jne
lock
xchg
sub
insb
jno
out
stos
push
pop
leave
push
arpl
fwait
jae
dec
std
sub
pop
and
mov
sub
fwait
iret
in
out
sbb
lods
mov
aam
inc
xor
out
adc
mov
cmp
jge
mov
gs
jmp
add
cmc
sbb
hlt
lock
in
sub
add
mov
cmpsl
inc
in
xchg
cmp
jb
insb
mov
test
ljmp
popf
sub
psadbw
movsl
pop
push
mov
ret
dec
movsl
ret
iret
inc
repz
cli
outsb
das
sahf
cmp
jmp
or
inc
fdivrl
clc
mov
in
fwait
jp
fidivrl
jo
mov
add
sarl
les
mov
loope
sub
int
test
addr16
movsl
jmp
subl
push
mov
sub
inc
stos
loope
mov
push
mov
mov
lods
dec
pushf
out
dec
les
mov
into
mov
lret
cmp
pop
mov
movsl
pop
sar
jmp
sbb
or
jle
push
pop
mov
xchg
push
fsubp
pop
jns
mov
sbb
or
mov
fwait
inc
fists
ljmp
xor
or
and
negb
aad
movsl
fstpt
mov
pop
pminub
xlat
fisttps
push
push
or
mov
adc
popa
mov
in
inc
and
jns
sub
sar
mov
sub
inc
pusha
pop
movsl
lret
inc
and
ffreep
sbb
push
testl
or
nop
sub
mov
adc
addps
in
jg
jbe
lods
rclb
out
into
rcrb
lcall
mov
call
shlb
inc
add
add
sbb
mov
jle
push
pop
mov
ljmp
push
aad
iret
cld
cmp
mov
pop
das
inc
push
out
mov
inc
sbb
or
dec
das
jns
cwtl
fisttpll
in
pop
mov
out
lcall
and
sti
ljmp
xchg
into
insb
lret
repnz
popa
mov
add
out
neg
dec
jb
xor
pop
lea
imul
dec
cwtl
sbb
push
testl
or
push
rolb
mov
pop
lea
mov
inc
dec
and
or
add
xchg
out
dec
xchg
xchg
push
test
cwtl
jnp
jno
mov
daa
mov
jle
xor
sbb
test
scas
cmpsl
subl
xor
sahf
movl
inc
mov
xor
jmp
add
xor
mov
mov
pop
jb
cwtl
fisttpll
in
pop
mov
out
lcall
and
js
or
and
mov
dec
scas
cltd
jns
push
in
or
roll
dec
add
xchg
fdiv
and
jno
push
insb
and
jp
lods
and
and
lock
push
lods
sub
fwait
outsb
iret
in
out
sbb
fadds
push
aas
aaa
loop
cmp
xor
in
sub
xor
test
and
pop
inc
lret
cmpsb
ljmp
adcl
push
push
jb
icebp
push
adc
call
fisubrl
ss
rcll
mov
sbb
outsl
and
fisubs
je
push
mov
xlat
popf
iret
push
xor
orl
aas
neg
mov
sti
sub
xchg
sbb
mov
ja
mov
pop
into
orl
jae
loop
sub
xchg
int
dec
cmp
mov
mov
pop
std
fisttps
lret
push
add
and
aas
jns
push
fwait
and
fcmovnbe
insb
rorb
mov
lret
sbb
jecxz
ret
sbb
js
jbe
nop
jne
sbb
in
xchg
xchg
push
inc
xchg
in
mov
stc
dec
mov
iret
fldl
fdivrl
mov
mov
pop
jg
test
js
iret
cwtl
push
jecxz
inc
sbb
idivb
mov
dec
cli
mov
scas
scas
mov
out
and
iret
test
mov
jmp
stc
lock
add
cmp
push
sar
scas
fnsave
push
xchg
adc
xchg
fidivl
shlb
call
ja
sarb
inc
sub
pop
dec
outsl
loopne
xchg
push
fsubrl
lcall
repz
dec
jns
shr
cltd
mov
sbb
push
jmp
cld
xchg
sbb
xchg
dec
xor
outsl
adcb
sahf
scas
ret
repnz
mov
shlb
sbb
adc
xchg
adc
add
sub
test
jnp
popa
and
iret
mov
les
or
icebp
into
dec
push
mov
enter
movsb
dec
xchg
pop
xchg
pop
fsqrt
push
repz
lahf
pop
test
int3
xor
insl
mov
mov
into
mov
mov
lahf
xchg
or
mov
cwtl
xor
popf
in
out
jle
les
lcall
dec
cltd
add
ss
push
jg
rcll
sbb
push
xlat
imul
xor
pop
insl
mov
pop
sbb
cmp
add
adc
jb
push
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
push
add
add
shrb
repz
sbbl
dec
cmpl
pop
push
ud2
sub
ret
testb
roll
jo
fdivs
sbb
aaa
shll
add
pop
in
cmp
jno
jmp
jle
adc
movsb
push
int3
ja
cli
test
js
fdivrs
jl
lds
aam
scas
sbb
push
arpl
repnz
xchg
in
sub
sub
xchg
mov
sub
movsb
loope
data16
bound
fdivl
mov
pop
jg
das
adc
test
shrb
fcomi
sbb
shlb
pop
jmp
add
pop
mov
sbb
mov
jns
fsubl
pusha
and
loope
or
mov
mov
or
dec
jg
mov
loop
adc
push
repnz
or
xor
jo
outsl
mov
dec
enter
mov
imul
fiadds
mov
xor
mov
sahf
lock
xor
adc
outsb
xor
xchg
movsb
lock
dec
lret
test
xor
xor
xor
xor
add
add
sub
cltd
sbb
int
ds
dec
dec
jmp
adc
cli
insb
insb
cmp
jno
mov
mov
or
xchg
pop
mov
rcrl
dec
stc
int
loopne
mov
dec
loope
enter
in
stos
rorl
mov
adcl
mov
psubb
or
repnz
aas
pop
stc
jge
xor
mov
cwtl
pop
movsb
xlat
xchg
add
mov
loop
or
inc
pop
pop
test
xchg
jecxz
xchg
xor
stc
loop
aad
dec
inc
je
cltd
fsubrp
add
addl
loopne
xor
pop
cmpl
fs
mov
jl
inc
xchg
cmp
mov
push
mov
mov
jl
jbe
mov
inc
jmp
mov
in
popa
mov
shrb
stos
xchg
bound
mov
ja
add
ror
rcrl
cs
push
mov
mov
sbb
dec
repnz
jo
popa
mov
dec
push
cmp
into
jecxz
and
lret
jns
adc
jecxz
push
cmp
cmp
insl
xor
xorl
movsb
mov
cmp
sahf
mov
xchg
stc
cmp
aas
stos
mov
xor
pop
shll
mov
pop
pop
xchg
dec
pop
roll
cmp
cmp
in
sarb
popa
clc
pop
pop
filds
mov
adc
dec
mov
inc
les
cli
sub
dec
fisubs
movsl
cs
repnz
mov
cmp
xchg
pop
cli
pop
add
ds
sbb
xor
push
shll
or
add
sbb
xchg
jb
sahf
dec
cmp
lods
pop
and
push
cmp
pop
loopne
mov
sub
mov
mov
xchg
dec
inc
mov
push
xlat
das
lods
cmp
decb
xchg
mov
je
int
fldl
or
mov
xchg
xlat
jp
loopne
decb
mov
jle
scas
inc
cmc
jl
popf
sahf
jmp
mov
divb
lret
rcr
pop
pop
mov
xor
xchg
push
bound
enter
inc
outsl
dec
stos
pop
adc
mov
out
sbb
jae
push
sbb
rep
mov
adcb
cmc
add
push
lea
mov
inc
ret
or
or
mov
incb
jge
mov
inc
sub
inc
inc
insl
jecxz
sbb
das
push
lods
insl
movsl
and
imul
in
repnz
inc
movsl
mov
dec
pop
xchg
fs
sbb
dec
repnz
pop
leave
inc
or
push
lds
lret
cmpsl
fistpll
or
in
ds
xchg
jecxz
repnz
repnz
imul
xchg
cmp
xchg
cmp
sbb
mov
loope
movsb
cmp
jmp
mov
mov
adc
scas
xor
adc
call
imulb
ficompl
mov
mov
sub
pop
lahf
imul
cmp
cmp
and
fwait
xchg
push
popf
out
aad
sub
out
data16
xchg
jno
inc
daa
jnp
xor
rorb
in
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insb
push
add
roll
add
test
adc
mov
rcrb
popf
outsb
xor
or
cld
arpl
repz
adc
insl
dec
aaa
rcr
jg
gs
jle
mov
rolb
adc
nop
pop
push
inc
cmp
adc
mov
mov
xchg
mov
scas
lahf
test
jo
out
sbb
lods
dec
jle
mov
dec
mov
or
inc
imulb
stos
dec
pop
cmp
adc
mov
dec
fsub
js
mov
mov
fisttps
adc
xor
dec
sub
pop
sub
and
movb
xchg
fmull
pop
push
xchg
sbb
xchg
cmp
out
sti
mov
jle
daa
jae
rcrb
call
cli
and
pop
stc
xor
push
rorl
or
test
push
rorb
mov
cmp
add
xchg
add
cmp
int
in
or
movsl
pop
mov
outsl
mov
mov
dec
shll
mov
popa
fdivrl
adc
fimull
jne
or
shlb
scas
stos
ss
in
ss
ja
cmp
pop
mov
pop
mov
push
push
cmp
es
push
push
mov
dec
movsb
pop
and
in
aaa
push
gs
adc
xor
mov
sbb
addr16
sbb
clc
stos
push
dec
push
mov
sub
mov
push
push
addr16
sbb
jg
mov
dec
pop
mov
in
insl
mov
pop
stos
jae
sahf
xchg
stc
ficoms
cmp
fnstcw
scas
insb
push
push
mov
sub
ljmp
lcall
lret
lock
mov
xor
clc
aad
aas
sub
stc
jnp
xor
inc
notb
inc
je
int3
push
sti
or
sbb
cwtl
cmp
popf
mov
jecxz
test
inc
into
sahf
mov
xchg
fdivrp
dec
xor
mov
nop
loope
mov
ljmp
jmp
jle
imul
jmp
adc
shll
call
movsb
out
dec
push
xchg
add
push
rolb
stc
jl
xor
out
lcall
or
or
lods
movsb
iret
push
clc
adc
repz
inc
or
aaa
sbb
sbb
cmc
shll
push
mull
push
ret
fisubl
cmp
jle
xchg
push
leave
daa
cmc
push
das
jo
data16
jmp
sbb
cmp
and
push
xchg
out
mov
imul
scas
inc
adc
sbb
mov
xchg
stos
cli
add
sarl
xchg
mov
pop
popa
aad
scas
cmc
mov
cmpsb
pop
sbbl
rclb
xor
addr16
or
dec
hlt
cmp
out
shl
or
inc
rorb
adcb
push
fimull
mulb
jae
test
jne
in
mov
or
shl
out
fistl
sbb
mov
push
and
adc
das
cmp
or
in
adc
leave
ja
loop
fdivs
lods
mov
cmp
push
jmp
nop
inc
jmp
xorb
pusha
test
dec
hlt
jae
mov
dec
dec
hlt
inc
call
lret
imull
repnz
cltd
arpl
adc
adc
fs
xor
or
inc
xchg
popf
icebp
push
sub
ja
add
repnz
lcall
jle
gs
mov
mov
push
ss
push
jmp
mov
jge
pushl
lock
xchg
mov
or
jo
xor
jo
push
out
imul
inc
addb
rol
lret
lods
jle
jbe
les
push
mov
fmull
repz
lcall
jnp
inc
mov
lock
clc
enter
adc
call
out
lret
stc
pop
adc
cmp
or
out
mov
std
mov
lods
push
mov
and
or
mov
jb
mov
aad
mov
stos
andb
add
adc
pop
xchg
fnstsw
pcmpeqw
pop
leave
sbb
fldt
push
jmp
loop
inc
xchg
dec
inc
push
or
nop
fdiv
mov
into
mov
repnz
movsb
out
xchg
jae
outsl
fwait
mov
fwait
test
adc
push
repnz
push
jg
jns
out
jb
cltd
sub
pusha
cwtl
ja
ljmp
outsb
rcrb
lock
in
ret
and
push
lcall
fwait
repnz
cmp
mov
mov
ljmp
push
xorb
lret
ss
pop
daa
adc
sbb
jge
movb
jp
cmp
shll
scas
dec
shl
inc
lods
sbb
orl
orb
jle
jbe
fcoms
rcrl
adc
xor
movsl
pop
insl
stos
in
std
push
jmp
mov
in
hlt
decb
fs
xchg
jge
loope
fadds
mov
fcmovu
les
mov
jg
movl
fsubrs
in
mov
push
mov
xchg
fadd
adc
mov
push
mov
mov
push
mov
push
xchg
sbb
adc
aad
jmp
jp
popf
cmp
jne
sbb
cmp
frstor
dec
jle
loop
mov
xor
xor
cwtl
mov
jae
mov
push
jle
aaa
or
in
aaa
ret
ss
fisubl
inc
andb
adc
pop
or
sub
jmp
test
test
push
test
jns
ret
sub
xchg
cmpsl
loopne
inc
lret
inc
jnp
push
mov
popa
mov
outsl
popa
add
insl
ja
lcall
mov
loopne
das
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
cmp
and
inc
mov
cs
mov
orb
push
imul
dec
das
lods
and
pusha
stos
jns
lods
cmpsl
shlb
push
inc
inc
cmp
and
push
outsb
hlt
aad
add
jno
pop
mov
adc
pushf
adc
in
cmp
enter
ret
insb
lock
dec
pop
ss
mov
pop
and
cltd
add
push
inc
mov
xor
xor
fcmovnu
roll
jmp
outsl
mov
xor
sahf
and
out
arpl
mov
ss
sub
aaa
cmc
aaa
push
sub
lret
addr16
mov
push
loope
push
mov
xchg
push
mov
outsl
cmp
shrl
movb
in
inc
out
cmpl
mov
movsl
dec
dec
rcrl
mov
mov
inc
inc
and
dec
jp
sub
repnz
fldcw
cmp
mov
push
mov
and
inc
test
sub
pop
pop
shlb
cmp
icebp
dec
mov
xchg
dec
adc
data16
ret
shlb
ljmp
dec
in
int
jl
pushf
aam
xlat
movsb
cmp
inc
mov
pop
jo
fdiv
or
push
push
pop
iret
mov
scas
lods
mov
cltd
and
aas
fdivl
movsl
in
enter
test
cmp
icebp
jge
rorb
shlb
jl
js
sbb
mov
aad
fsub
aad
lods
rcrl
cmp
mov
stos
mov
ret
call
popf
push
pop
xchg
pushl
push
mov
out
les
popf
add
mov
imul
jnp
into
aam
cmp
sub
push
pop
repz
add
ljmp
or
jle
js
js
imull
stos
das
mov
nop
add
jl
adc
sti
fdivs
xchg
mov
inc
rolb
mov
imul
fdivrs
mov
xor
xor
add
cmp
mov
bound
jae
xchg
loop
shlb
je
add
loop
or
dec
add
aas
jecxz
sti
sub
lods
pop
lods
adc
hlt
test
xor
add
lahf
sub
push
mov
in
enter
in
lock
movsl
fistps
hlt
cmp
aam
into
sbb
mov
insl
mov
jae
and
mov
insb
inc
jno
mov
sub
mov
rep
push
push
hlt
push
add
cmpsl
cmp
mov
sbb
cmp
mov
mov
push
dec
and
mov
jb
ret
jb
xchg
mov
push
cmp
es
inc
rorb
adc
xchg
and
mov
and
adc
xor
lock
add
xchg
sub
adc
hlt
push
orl
cmp
mov
rclb
cmpsb
je
push
jbe
lock
shlb
mov
push
rcrl
mov
xchg
xchg
push
aas
push
imul
inc
mov
lret
cmpl
xchg
pop
rcrb
sbb
loope
xchg
cmp
inc
out
add
pop
push
jp
lret
jbe
inc
std
lahf
mov
lea
jae
mov
in
xor
test
jl
cmpsb
lahf
sub
lret
pop
int
jbe
nop
std
leave
and
ret
pop
pop
fcoms
sub
mov
ljmp
stc
aam
lea
lret
xor
je
xor
in
arpl
sbb
cld
pop
dec
and
mov
int3
mov
mov
test
pop
cmp
sbb
sarl
sub
in
add
aaa
jg
lea
mov
roll
cltd
das
enter
fwait
inc
lods
pop
mov
nop
adc
out
jns
push
pop
popa
test
stc
pusha
sti
testl
push
and
mov
jae
jno
mov
ds
add
cld
mov
cmc
iret
inc
inc
hlt
shll
sti
arpl
pop
xorl
popl
cmp
loopne
sub
adc
mov
mov
jb
sub
inc
loop
in
clc
imul
call
mov
xor
insb
push
mov
cmp
shll
sbb
lahf
pop
out
cmp
mov
push
cmc
popf
or
outsb
jle
push
inc
xchg
and
out
lds
inc
data16
dec
or
repnz
test
cmp
jmp
adc
or
ficoml
inc
xchg
cmp
mov
cld
rcll
jae
shll
adc
xorb
sahf
cmp
movb
lcall
push
ds
xchg
ret
popa
push
fs
fldcw
hlt
lcall
outsl
dec
pop
xchg
fiaddl
in
xchg
mov
scas
outsb
adc
jmp
call
xor
mov
in
mov
cwtl
pop
test
popa
jecxz
pushf
fs
in
xchg
stc
pop
sahf
cmp
mov
test
mov
stc
insb
ret
sub
lret
repnz
and
inc
add
fdivrs
sahf
sub
xchg
loope
and
sarb
push
sbb
movsl
jnp
pushw
sub
push
lock
imul
adc
pop
sub
mov
xor
jne
pop
push
sbb
sub
sbb
pop
inc
rorl
pop
mov
bound
xchg
xor
lret
scas
int3
push
jg
mov
aas
out
mov
cwtl
and
fcompl
ljmp
inc
and
stc
mov
push
addr16
push
pusha
mov
mov
imul
aam
dec
push
roll
xchg
xlat
xchg
xchg
lea
jle
push
mov
out
roll
je
out
cmp
dec
lods
xor
enter
cmp
push
sahf
mov
lods
mov
int3
imull
ds
pop
pop
sub
cmp
stos
lods
cmc
fnsave
scas
or
test
jmp
mov
sbb
xchg
push
jne
jns
sbb
out
aad
adc
leave
mov
mov
inc
outsb
ret
aam
insl
out
or
push
in
shr
cwtl
flds
sbb
bound
mov
out
rolb
sti
push
dec
xlat
dec
outsb
outsl
or
lds
or
enter
in
adcl
pop
lea
mov
push
pushf
fstps
in
add
and
std
jno
adc
in
and
fs
insb
push
dec
sarb
or
pop
or
flds
in
xor
jecxz
and
sub
and
mov
sbb
popf
shrl
push
stos
in
sbb
jo
in
ds
adc
fdivrl
popa
jae
xchg
xchg
fcoms
je
cwtl
pop
xor
mov
jnp
leave
push
add
arpl
repnz
dec
lods
gs
fwait
mov
call
int
pop
subl
mov
push
daa
je
sub
sahf
dec
adc
push
push
sub
clc
jecxz
or
test
loopne
movq
dec
cld
jle
int3
adcl
test
loop
jne
jge
shl
out
mov
dec
in
jle
or
mov
push
push
insl
mov
inc
out
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
add
sub
add
adc
js
mov
test
jo
push
int3
sub
ss
scas
push
add
addr16
inc
popa
xor
repnz
add
or
jge
mov
into
orb
push
arpl
sbb
mov
pushl
test
lahf
jae
js
rorb
ret
add
in
pop
shll
fwait
orb
pop
movsl
mov
lcall
or
stos
add
sub
mov
scas
insl
jge
rep
inc
loop
push
fwait
jmp
push
sub
add
push
xor
mov
cld
cli
filds
ret
cltd
mov
jb
xchg
ljmp
arpl
cmp
sbb
cwtl
xchg
mov
inc
mov
sbb
sub
inc
pop
inc
mov
out
daa
or
push
lret
jnp
int3
cmpsl
aas
dec
pop
inc
cs
xchg
cmp
jns
dec
clc
mov
into
mov
xor
rcrl
enter
mov
xchg
pushf
push
dec
imul
or
out
call
popa
lcall
push
hlt
mov
lods
pop
pop
icebp
jno
cli
xor
jbe
hlt
sbb
in
add
popf
je
je
int3
nop
adc
hlt
jne,pn
jbe
add
and
dec
push
test
add
mov
ljmp
fsubrl
int
push
mov
and
adc
sbb
repz
sub
and
mov
jecxz
cld
arpl
lret
jae
aas
das
je
mov
jae
sbb
mov
mov
dec
pop
cmpsl
sub
inc
lds
push
loop
hlt
cmp
xorl
test
aad
xchg
inc
iret
js
pusha
pop
cli
mov
ljmp
sti
cmc
aad
rolb
xor
popf
test
xchg
adc
rcrl
push
cmp
sub
dec
cmc
stos
icebp
test
dec
pushf
repz
or
rorb
fcmovne
insb
mov
pushf
and
dec
sub
xor
inc
bound
cmp
paddusb
sbb
notl
adc
jp
xor
inc
sub
dec
and
mov
in
movsb
nop
jle
leave
sbb
sub
push
dec
addl
jecxz
mov
push
test
fdiv
mov
lret
mov
loopne
xor
xor
int
dec
arpl
aas
inc
dec
inc
lahf
mov
jecxz
roll
imul
in
push
sub
pop
xorb
cmpsb
mov
xchg
push
aaa
cmp
push
ds
repz
mov
or
jb
popa
pop
test
stos
xchg
or
cs
cltd
es
push
pop
orl
cmp
mov
push
xor
repnz
test
inc
mov
add
xor
lret
jmp
gs
aaa
lds
les
xchg
xchg
mov
aam
cmp
adc
mov
adc
nop
adc
lea
out
ret
mov
cmp
sbb
push
movsb
xor
xchg
es
iret
xor
arpl
sbb
and
inc
pop
lods
jno
pop
xchg
cli
mov
stc
lret
sbb
jb
clc
es
pop
push
mov
sbb
cmp
test
mov
push
dec
cs
fcomip
aaa
lcall
jne
mov
js
sbb
lods
iret
sbb
lahf
inc
std
inc
ret
fcompl
ljmp
fistpll
mov
push
sub
es
cmp
pop
pop
mov
xor
or
aas
mov
and
inc
mov
mov
and
cltd
jbe
popa
cmc
xchg
jecxz
sub
sbb
pop
subl
push
in
pushf
adc
mov
scas
fnstsw
pop
or
stc
sbb
dec
and
iret
adc
stos
dec
enter
xchg
xor
push
popa
repnz
out
scas
and
pop
fdiv
stos
stos
shrb
dec
mov
outsb
xchg
xor
out
ljmp
test
xchg
scas
push
pop
sbb
jl
je
jne
bound
idiv
repz
lods
dec
xchg
push
in
xor
mov
in
jmp
dec
aad
cltd
popa
xor
arpl
loopne
jnp
xchg
dec
notb
inc
mov
push
dec
icebp
adc
outsb
pop
insb
sub
xor
push
repz
mov
jp
repz
xchg
pushf
or
mov
adcl
add
adc
jno
ja
jbe
and
ret
loope
dec
pop
pop
pop
fpatan
pusha
xchg
imull
clc
jmp
add
mov
ficoms
shr
xchg
fstps
in
sbb
push
popa
push
out
iret
dec
sbb
aaa
jmp
mov
mov
sbb
and
jae,pn
lds
dec
mov
call
repnz
lret
bound
jle
fcoms
dec
adc
lock
mov
xchg
pop
mov
sub
mov
adc
jno
and
pop
iret
push
pushf
sub
dec
push
aam
addr16
nop
loop
jge
fcoms
xchg
jbe,pn
mov
xchg
in
fidivrs
orb
ret
cmp
mov
ret
mov
das
out
jnp
into
pop
jmp
test
mov
sti
inc
addl
dec
mov
pop
movsl
push
out
test
push
movsb
mov
mov
pushf
jle
insl
cmpl
sub
sub
jbe
aad
icebp
cs
icebp
mov
cwtl
sahf
xchg
dec
dec
mov
push
mov
adc
push
jl
push
pop
or
mov
mov
dec
jecxz
lods
or
movsb
pusha
inc
jmp
cli
mov
add
and
pop
or
dec
xor
movsl
mov
outsb
inc
or
je
repnz
pop
sub
mov
or
loopne
js
xor
mov
cli
scas
ss
mov
pop
mov
push
aas
iret
shl
pop
cmp
add
arpl
stc
aad
pushw
jno,pt
in
repz
scas
das
mov
out
pop
cli
lods
dec
dec
inc
jmp
outsl
test
adc
imul
jl
inc
mov
stos
popa
rol
popf
xor
pop
dec
rorb
xadd
rclb
xchg
aam
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
add
add
je
cwtl
rcll
dec
mov
aam
icebp
imul
xchg
push
fisubrl
pushf
imul
fpatan
jae
xchg
sti
dec
call
insb
leave
sub
xchg
std
int3
pushf
imull
sarb
lock
lret
insb
sbb
and
mov
arpl
int
loope
int3
pextrw
xchg
push
push
mov
xchg
negb
pop
mov
mov
idivb
mov
inc
pop
les
and
add
rorl
out
lds
roll
or
xchg
in
mov
mov
fnstcw
inc
es
sbb
fldt
orl
stos
sbb
adc
pop
mov
dec
nop
jae
jb
push
gs
sbb
jb
subb
xor
inc
mov
mov
call
inc
mov
nop
mov
shlb
leave
inc
outsb
xor
dec
orb
aad
jne
push
dec
cmc
cmp
xlat
mov
popf
lods
adc
or
mov
fmull
lods
adc
movsl
dec
stc
loopne
pop
or
dec
add
iret
or
pop
pop
xchg
insb
divps
dec
push
imul
clc
mov
and
cmp
xor
mov
test
xchg
les
insb
pop
in
outsl
call
aas
sbb
pop
int
adc
xor
xor
mov
lock
repz
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
daa
pop
xor
cmp
ret
jbe
inc
mov
sub
fistl
dec
gs
lea
jge
adc
loope
mov
dec
js
frstor
test
in
sti
mov
jno
fbstp
sbb
repnz
aas
fisubs
fisubs
fildl
arpl
adc
xor
das
mov
pop
addr16
sbb
push
das
push
mov
pop
xchg
sbb
fwait
push
add
mov
pop
addr16
dec
loopne
push
pop
mov
mov
les
inc
rcr
daa
jbe
mov
push
mov
loopne
or
adc
push
mov
les
dec
dec
jne
call
mov
xchg
push
jg
lods
jb
push
push
addr16
sbb
addr16
sbb
clc
stos
push
dec
push
mov
sub
mov
push
push
addr16
sbb
mov
mov
push
mov
adc
mull
les
inc
rcr
daa
jbe
mov
push
mov
loopne
or
adc
push
mov
les
dec
dec
jne
call
mov
xchg
push
jg
lods
jb
push
push
addr16
sbb
addr16
sbb
clc
stos
push
dec
push
mov
sub
fcom
inc
je
cmpsl
pop
enter
roll
iret
mov
std
adc
bound
cli
cmpsl
icebp
and
mul
ret
mov
pop
out
loop
jo
xchg
xor
adc
jo
push
xchg
sub
pop
fidivrl
lcall
into
jo
gs
and
xchg
mov
cld
dec
xor
pop
add
pop
adc
rcrl
js
push
cmp
xor
out
popf
fwait
sbb
pop
imul
pop
fcompl
xchg
out
mov
cs
pop
sbb
inc
or
jo
or
add
call
jp
rclb
jg
push
shll
dec
jmp
out
add
mov
sbb
sarb
imul
loop
pop
nop
pop
cs
push
repz
ret
jg
pop
mov
adc
mov
pop
or
cmpsl
jb
cmc
push
arpl
pop
aad
loop
clc
repnz
outsb
sti
stos
jmp
ret
and
jno
pop
mov
rorb
xchg
int3
lods
jp
or
loope
xor
gs
sub
mov
jne
lds
sbb
lret
sahf
mov
mov
inc
push
jl
or
cmp
fwait
sbb
xor
xor
xor
add
add
add
or
pusha
sub
test
stc
bound
rol
inc
push
rcl
fs
sbb
lahf
jno
cs
fnstenv
inc
jp
test
out
mov
hlt
cmp
cmp
sarl
test
rorb
sbb
pop
cmp
mov
xor
lods
out
scas
adc
mov
or
pop
aam
inc
jmp
mov
fs
out
cmpsb
insl
dec
test
mov
adc
fs
push
nop
stc
push
mov
loop
ja
adc
lds
ret
jle
and
adc
sub
loopne
pop
adc
sbb
andl
fsubrs
jmp
and
push
jb
mov
daa
mov
jne
pop
lods
cmc
dec
push
sbbl
adc
pop
xchg
xor
sarl
add
cmp
cli
fidivl
push
or
xor
cmp
cmp
outsl
mov
inc
cmc
cli
lahf
test
test
mov
inc
stc
in
ss
push
sbb
lods
pushf
cltd
and
pop
imul
xchg
xor
ror
adc
test
mov
sub
movsl
insl
mov
ljmp
xlat
stos
inc
fcmovnu
xor
sub
std
ds
mov
xchg
test
pop
xchg
cmp
fadds
push
sub
pop
loope
xor
mov
shrb
mov
dec
jns
sbb
lret
mov
adc
sahf
or
repz
mov
or
adc
hlt
and
cwtl
cmp
and
mov
out
test
xor
orl
das
shll
subl
jp
lock
jmp
fcmovbe
in
add
insb
sub
in
push
sbb
jl
pusha
sbb
sarb
mov
les
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
xchg
lidtl
xor
push
mov
and
push
mov
scas
ret
sarb
sub
das
xor
pop
mov
aas
fstpl
push
mov
sbb
fadds
mov
movsl
sbb
and
clts
mov
xchg
push
addr16
sbb
mov
mov
push
mov
adc
mull
les
inc
rcr
daa
jbe
mov
push
mov
loopne
or
adc
push
mov
les
dec
dec
jne
call
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lcall
add
cmpl
push
addr16
sbb
ja
nop
shlb
push
add
adc
cmp
jmp
xor
in
mov
mov
xor
inc
cmp
out
imul
pop
popf
into
or
movsb
push
icebp
mov
push
test
sete
negl
lds
fnstcw
jno
sbb
fs
shlb
insb
repnz
rorb
pop
adc
mov
mov
insb
jno
push
mov
mov
xchg
aaa
cmp
jl
stc
loope
sbb
jg
lds
call
sbb
xchg
ja
sbb
jnp
add
pushf
sahf
in
dec
mov
xor
sub
int
stos
xor
push
inc
push
mov
mov
sbb
adc
sub
cmpsb
iret
cmp
insl
xchg
dec
loope
lods
jno
js
cmpsb
adc
out
out
adc
inc
fcoms
add
push
dec
hlt
into
popa
dec
sbb
and
mov
push
sbb
stos
jmp
nop
mov
outsl
mov
aaa
push
mov
in
jmp
sbb
in
cmpsb
jns
test
stos
out
int3
sar
mov
pusha
cmpl
pop
jbe
lret
inc
popf
cs
push
out
adc
fwait
sub
mov
repz
pop
pop
pushf
jne
cmp
mov
push
insl
out
sar
cmc
popa
notb
stos
ret
sub
cli
jmp
cld
or
fsubs
leave
jp
clc
stos
mov
mov
outsb
jmp
ret
sarb
scas
push
out
out
xlat
dec
lahf
sbb
pop
test
or
pop
mov
enter
in
lods
or
push
jmp
xor
and
icebp
sbb
test
dec
mov
ljmp
jb
add
adc
sahf
das
inc
xor
or
rcrl
xor
inc
mov
mov
das
mov
lock
sbb
jb
scas
dec
popf
js
decb
cmp
test
inc
sbb
shrl
shrl
subb
xor
icebp
test
andb
xor
xchg
pop
mov
and
mov
std
sub
fcomp
ret
sahf
lods
jl
out
xchg
mov
mov
jno
cmp
or
enter
jp
stc
lods
jmp
ja
push
outsb
xlat
fidivrs
gs
jle
adc
in
dec
js
and
sub
pop
in
ljmp
es
sub
mov
xor
jecxz
sub
enter
pusha
aad
xchg
aad
and
inc
shrb
xchg
inc
sbb
fiadds
or
insl
mov
or
shrl
dec
iret
and
data16
sbb
sahf
rclb
sub
dec
adc
rcrl
jnp
imul
jb
or
adc
popf
popf
clc
jge
imul
repnz
mov
loope
adc
jmp
pop
stos
mov
adc
stos
jb
fsubrs
sub
xlat
adc
jne
and
adc
mov
orb
xlat
xor
pop
into
bsf
ljmp
out
enter
negl
je
fnstenv
inc
cmp
mov
outsl
adc
jo
jmp
cltd
aaa
mov
cmp
xchg
lods
mov
les
adc
ljmp
or
in
sub
inc
xchg
cmpsb
cmp
jae
sbb
push
pop
xor
ljmp
cmp
lds
and
sbb
xchg
imul
repnz
xor
fs
xor
popa
sahf
lret
dec
out
or
dec
lret
jl
lea
pushf
mov
push
push
loopne
in
repz
mov
fisttpll
jno
mov
ja
mov
fcomps
ljmp
out
ret
fsubp
inc
lods
xor
xchg
push
xchg
outsb
sub
je
fldl
mov
movsl
inc
jmp
jnp
sar
arpl
jle
sub
hlt
imul
sbb
call
adc
rclb
dec
fisubrl
mov
and
rorb
adc
idivb
and
pop
insl
pushf
jae
in
cmp
cltd
and
inc
nop
add
pop
mov
lea
gs
push
arpl
into
stos
xchg
xchg
outsb
inc
push
std
mov
mov
mov
sub
mov
mov
xchg
or
sahf
mov
xor
fdivs
stc
lahf
jae
xchg
inc
pop
fiadds
aam
mov
or
sbb
inc
jmp
push
or
xchg
mov
int
shll
dec
test
movsl
dec
cmp
ljmp
test
pop
cld
sbb
cmpsl
and
and
cmc
jb
xor
or
push
push
sub
les
sar
mov
sbb
cmp
xchg
ficoms
loopne
aam
lods
mov
lock
ja
es
mov
push
inc
push
xchg
push
fwait
dec
and
sub
mov
lcall
and
push
popa
shlb
sbb
mov
mov
add
aam
push
loopne
imul
cs
mov
pop
movsl
inc
in
cmp
xor
insl
jnp
and
cmc
cmpsl
js
mov
dec
xchg
icebp
cmp
rcll
pop
cmp
in
push
push
push
divb
out
xchg
add
int3
xor
push
in
fcompl
add
int
fwait
sbb
inc
cld
mov
aas
aad
cmp
loop
mov
cld
pop
negl
shrl
mov
loop
mov
push
adc
jl
rorb
decl
adc
aam
add
loope
pop
cmpsl
xchg
mov
dec
rclb
or
lods
sbb
filds
fsubl
scas
std
clc
je
cmp
out
lods
xchg
insl
or
inc
mov
movsb
jl
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
xor
ffreep
push
sbb
popf
xchg
or
inc
jp
dec
dec
loop
not
outsl
xchg
out
inc
shr
insl
pop
add
fnsave
inc
cmp
mov
fcomps
js
pusha
or
add
pop
xchg
test
and
xor
test
dec
mov
mov
je
adc
cmpb
pop
sub
pop
xchg
sti
shlb
je
bound
mov
bound
filds
or
sahf
cli
dec
jle
lock
int3
mov
jns
mov
test
hlt
mov
sub
popf
cs
and
nop
int3
mov
mov
xor
push
mov
data16
push
lret
lahf
jle,pn
addr16
aad
or
pop
pop
mov
cmp
outsl
cmp
test
pop
es
mov
and
andb
mov
cmpl
je
fnstenv
mov
js
stos
jle
jae
sahf
mov
dec
xchg
hlt
sub
or
aam
xlat
mov
shlb
test
xor
sahf
fimull
sbb
xchg
and
xor
std
repnz
push
xor
daa
or
jb
je
loope
movsb
adc
mov
add
cmc
js
arpl
mov
xor
sub
push
mov
pop
sub
mov
sahf
rcrl
out
mov
sahf
jnp
xchg
scas
scas
cltd
cmp
in
pop
outsl
aaa
nop
and
hlt
arpl
loope
and
mov
mov
test
xchg
pop
into
nop
cmpb
fcompl
decl
push
daa
jbe
push
pop
dec
repz
jg
mov
cmpsb
aad
adc
mov
add
mov
adc
outsb
stc
mov
out
mov
int
sub
test
aaa
sub
sti
test
dec
daa
mov
test
movsb
or
int
test
xchg
popa
out
pop
rcl
mov
xchg
sarl
out
shll
or
xchg
inc
xor
sti
mov
mov
pop
test
cmp
fmull
fbld
add
test
and
andps
faddp
xor
or
adcb
sub
andb
cwtl
scas
addr16
aam
arpl
or
das
lea
shll
mov
jb
cmp
mov
xor
jg
mov
cmp
mov
cmp
jecxz
dec
iret
pop
sbb
sbb
sarb
test
int3
les
test
jmp
mov
mov
mov
movsb
add
jp
js
xchg
pop
arpl
add
mov
stc
pop
push
xor
mov
repnz
mov
pop
push
shlb
inc
iret
insb
xchg
ljmp
mov
cmp
arpl
add
add
push
faddl
je
sbb
call
inc
outsb
or
adc
cmp
inc
pop
movsl
dec
push
xchg
adc
inc
outsb
hlt
pop
dec
scas
jge
loope
or
xor
arpl
inc
push
fs
mov
jnp
jo
push
xor
xor
int3
cmpsb
sbb
pop
div
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
pop
sbb
xchg
ret
sarb
jle
sbb
sub
fwait
pop
adc
or
out
sbb
bound
jge
inc
pop
sarb
cmpsl
jns
daa
and
jo
mov
push
nop
mov
repnz
mov
fistpll
ja
shll
cmp
addr16
pop
inc
push
in
xor
mov
pop
inc
loop
shll
mov
sahf
les
or
fcmovu
dec
das
xlat
lock
ja
sub
ljmp
stc
in
clc
mov
cld
dec
or
jae
lret
jns
sarb
or
mov
into
xchg
repnz
cmp
loope
outsl
mov
mov
aad
fisttps
test
in
mov
out
jns
rol
dec
fwait
mov
lret
int
and
ja
in
xchg
cmpsb
pop
loop
cmp
out
mov
out
scas
jbe
ret
adc
pop
dec
push
mov
adc
mov
movsb
aam
ret
fstl
mov
xchg
jne
xchg
mov
daa
add
pushf
scas
dec
jb
sbb
xor
jl
dec
lock
pop
lods
aam
cmp
sarb
push
mov
dec
jbe
xchg
adc
int3
pop
sbb
inc
pop
pop
cmc
and
stos
imul
sbb
and
mov
inc
test
popa
inc
cmpsl
jmp
xchg
hlt
mov
dec
add
inc
aam
mov
inc
cli
iret
lock
sbb
pop
iret
pop
test
push
or
jo
fcomps
cmp
pop
ds
sub
bound
mov
cmc
es
sub
sbb
mov
jmp
xor
popf
loopne
jge
bswap
and
loop
inc
adc
pop
or
in
je
inc
imul
insb
mov
pushf
ja
mov
push
pop
xchg
test
pop
or
xor
in
cwtl
or
jo
lods
mov
xlat
adc
mov
negl
cmp
mov
jbe
sbb
sbb
sub
jnp
inc
mov
into
xor
and
je
adc
mov
dec
pop
pop
daa
movsb
popf
test
pop
jne
cmp
mov
xchg
dec
dec
mov
cmp
into
in
xchg
shrl
push
clc
hlt
call
incl
cmp
pop
stos
imul
ljmp
dec
inc
or
enter
mov
jmp
jg
sub
notb
mov
xchg
xchg
push
jecxz
jp
mov
fidivrl
idivb
test
cmp
xlat
jge
lret
insb
jle
gs
fadds
push
fs
int3
mov
add
inc
out
pop
movsb
inc
xchg
clc
pop
jle
fldpi
mov
cli
sub
mov
fidivl
insl
sbb
mov
sub
sarb
push
add
jl
addl
lahf
pop
pop
and
jbe
pop
fcoms
mov
mov
fcmovnb
push
jmp
mov
mov
int
jecxz
jmp
adcl
jmp
cmc
inc
sti
pop
test
mull
hlt
movsl
jecxz
jbe
push
mov
out
pop
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
add
add
add
jno
mov
push
movsl
fbld
cmp
xor
aas
dec
dec
and
js
mov
pop
enter
rcll
lret
mov
imul
sbb
add
add
xor
cwtl
test
pop
inc
sub
lods
pop
lods
mov
inc
pop
mov
imul
fwait
inc
aad
inc
nop
sbb
test
call
and
add
push
xor
sub
out
sub
mov
into
dec
movsb
sub
repz
std
lds
push
sbb
add
cmpsl
lea
cmpsb
aas
lahf
dec
popf
mov
xor
in
adc
push
insb
cmp
cmp
mov
inc
lock
inc
test
adc
pop
xchg
jg
push
or
or
lret
mov
pushf
xor
popf
xor
and
pop
mov
sbb
inc
pop
fcoms
cmc
push
push
cmp
orb
sti
repz
push
mov
les
and
popf
nop
or
pusha
aas
in
jl
sub
fistps
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xchg
add
add
xlat
and
lcall
jo
enter
push
pop
cmp
xor
mov
xchg
cld
mov
pop
cmp
pop
insb
in
mov
aaa
inc
idivb
xchg
shrl
sub
cmp
ds
lahf
dec
dec
sbb
add
push
cld
movsl
jl
imul
xchg
jo
pushf
pop
arpl
add
repnz
xchg
and
xchg
xchg
sbb
xor
sub
xor
xor
xor
xor
xor
xor
xor
add
add
xchg
sbb
cmpsl
test
push
fistpll
push
push
mov
push
in
pop
add
mov
ss
lahf
jge
sub
or
jne
xchg
dec
xchg
stos
rcr
cmp
rorl
fcoms
pop
xchg
aam
shr
adcb
shrl
push
jbe
data16
in
inc
movsl
cmp
bound
orb
movsb
mov
jecxz
mov
stos
push
test
pop
inc
jo
cli
mov
dec
pop
sub
mov
test
push
insl
sub
cltd
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fadds
add
add
add
fistps
pop
add
adc
sub
inc
test
cmc
lahf
cltd
pop
cmpsb
orl
into
pop
jle
push
daa
jle
popa
loope
ljmp
pop
fbld
aaa
push
mov
sarb
xlat
inc
test
adc
dec
add
das
push
push
inc
jecxz
and
xor
insl
jno
loopne,pt
xor
inc
inc
insb
mov
and
icebp
pop
xchg
movb
lock
mov
dec
in
pop
ja
lods
add
adc
inc
push
mov
fistpll
daa
xchg
xchg
push
clc
std
or
or
in
imul
xor
das
mov
pop
addr16
popa
push
cmp
push
mov
pop
push
mov
pop
jnp
inc
lahf
mov
xor
das
mov
pop
xchg
lods
cli
xlat
add
les
mov
mov
push
mov
adc
mull
les
inc
rcr
daa
jbe
mov
push
mov
loopne
or
adc
push
mov
les
dec
dec
jne
call
mov
xchg
push
jg
lods
jb
push
push
addr16
sbb
addr16
sbb
clc
stos
push
dec
push
mov
sub
mov
push
push
addr16
sbb
mov
mov
push
mov
adc
mull
les
inc
rcr
daa
jbe
mov
push
mov
loopne
or
adc
push
mov
les
dec
dec
jne
call
mov
mov
push
mov
pop
fwait
inc
mov
int
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
push
add
add
add
add
sub
add
adc
add
add
add
add
inc
sub
add
adc
add
add
xchg
sub
add
adc
add
add
subb
add
add
add
add
xchg
add
cmpsb
and
add
lret
add
and
add
and
add
xor
add
dec
add
pop
add
push
add
jp
add
cwtl
add
lods
add
mov
add
fisubs
add
hlt
add
or
add
adc
add
and
add
xor
add
js
add
pop
daa
add
push
daa
add
mov
add
movsb
daa
add
mov
daa
add
in
daa
add
cli
daa
add
or
add
sbb
add
and
add
inc
sub
add
add
outsb
sub
add
add
pushf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
inc
daa
add
dec
and
add
and
add
xor
add
add
add
xchg
add
je
jb
outsl
jb
outsl
fs
in
add
popa
insb
inc
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sub
inc
gs
imul
sub
inc
outsl
jo
inc
imul
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
je
jne
jb
outsb
je
jb
arpl
jae
add
add
gs
je
inc
imul
imul
inc
imul
outsb
push
gs
js
gs
imul
gs
add
add
gs
das
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
jp
inc
gs
jns
je
insl
push
imul
insb
gs
imul
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
gs
imul
je
add
jae
push
imul
insb
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
add
insl
outsl
jbe
inc
imul
jns
add
loop
push
outsb
insl
popa
jo
imul
insb
add
inc
gs
jb
arpl
fs
jae
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
imul
bound
gs
add
addb
gs
gs
jo
imul
add
mov
fs
insb
outsl
jae
add
jo
insb
insb
outsl
arpl
stc
add
jo
imul
insb
gs
add
insl
imul
outsl
arpl
jae
add
inc
gs
imul
bound
gs
add
jmp
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
jne
jb
outsb
je
push
dec
add
jecxz
dec
outsl
popa
fs
imul
add
sbb
dec
jne
jo
je
bound
push
je
imul
add
outsb
fs
imul
gs
js
add
and
inc
imul
bound
gs
js
add
xchg
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
inc
imul
gs
gs
jo
popa
je
inc
add
movl
dec
imul
adc
push
jb
je
inc
imul
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
imul
gs
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
popa
jae
inc
jb
outsl
jb
add
outsb
push
gs
js
gs
imul
gs
aas
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
mov
jo
jb
add
cmpsl
add
outsb
fs
imul
gs
add
adc
outsb
push
jb
arpl
jae
nop
add
je
outsb
fs
inc
imul
gs
jb
arpl
jae
gs
jo
add
jne
jb
outsb
je
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pusha
add
je
imul
arpl
add
outsb
fs
imul
inc
add
inc
push
.byte
