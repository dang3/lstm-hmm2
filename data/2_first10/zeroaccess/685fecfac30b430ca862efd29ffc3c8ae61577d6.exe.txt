push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
jecxz
scas
push
push
push
push
sub
push
push
orb
mov
push
popf
pusha
mov
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
and
push
iret
clc
mov
repnz
cs
and
call
cmpsb
int3
xor
jne
in
test
push
push
mov
or
out
push
pop
stos
aas
inc
jnp
mov
push
sbb
jp
dec
jp
mov
sbb
adcl
inc
test
mov
pop
add
xchg
add
aas
imul
jle
cmp
jns
insb
outsl
mov
shlb
pop
mov
and
lods
sbb
mov
in
adc
add
int
jle
bound
loope
negb
outsb
adc
xchg
icebp
push
jns
leave
add
cmp
push
jecxz,pt
stos
xor
xor
mov
lahf
hlt
mov
insb
inc
xor
stos
sbb
adc
js
fdivl
sub
jo
cmp
inc
sub
and
cmpsb
and
inc
int3
inc
cmp
cld
lret
push
insl
dec
aaa
push
push
out
std
es
das
adc
ja
inc
std
xlat
xchg
cmp
lea
icebp
cmp
inc
insb
insb
repnz
adc
mov
mov
stos
inc
inc
push
mov
mov
rorb
jb
inc
push
pshufw
js
xor
mov
lret
lods
out
mov
push
jecxz
lock
clc
and
ja
pop
push
and
sbb
or
sbb
push
hlt
dec
jnp
push
in
fwait
leave
frstor
repnz
mov
movsb
call
insl
sbb
dec
adc
shll
pop
test
mov
push
nop
stos
dec
push
cmp
add
dec
aad
iret
ja
mov
mov
iret
jae
ds
leave
push
dec
fdivrl
pop
mov
inc
add
popf
adc
call
inc
mov
add
aas
push
pop
push
lea
lret
mov
sbb
cld
into
cmp
mov
bound
idivb
cmpsb
and
mov
addr16
roll
fldl
arpl
adc
xchg
mov
adc
pop
push
lods
ds
stc
xor
rcll
gs
dec
mov
push
test
in
repz
mov
jge
ret
jp
test
pop
cmp
jb
lret
xorb
stos
lcall
jl
push
shlb
mov
mov
andb
fmuls
int3
xchg
sbb
imul
fdivr
mov
push
jbe
mov
dec
sarl
sbb
pop
push
dec
insb
cmp
inc
in
push
sbb
jbe
inc
test
mov
inc
lahf
pop
into
ret
subb
push
mulb
sarb
shl
gs
scas
pop
pop
pop
sbb
repnz
scas
add
xchg
sbb
xchg
rclb
insl
xor
xor
mov
cmp
test
sub
cmp
stos
pop
jecxz
outsl
fldl
mov
and
ror
mov
rorl
dec
dec
adc
popf
push
mov
inc
cmp
or
mov
or
lods
insb
jnp
push
hlt
clc
faddl
js
repnz
push
movsl
es
xchg
pop
data16
jl
enter
xchg
xor
inc
aad
mov
aam
dec
lret
nop
add
fildl
mov
stos
push
jno
cltd
and
addr16
dec
jp
add
pop
or
lods
mov
add
jmp
mov
sub
stos
cmpsb
out
sub
xor
xor
adc
dec
je
xor
or
add
adc
cmp
fisttpll
or
mov
testb
pop
and
or
subb
fwait
pop
inc
repz
cs
fdiv
push
bound
stos
sbb
pop
out
cmovnp
jge,pt
mov
pop
cltd
aam
dec
dec
aad
sbbl
mov
in
stc
in
xchg
cli
lea
das
cld
js
test
xor
shlb
xor
adc
sbb
xchg
jl
dec
push
dec
cmpsl
icebp
add
int
arpl
in
imul
pmaxsw
adc
jbe
push
out
scas
cmpsl
imul
ret
das
loopne
mov
pushf
mov
outsl
mov
adc
push
sbb
ret
cmp
jl
jg
in
enter
sub
cltd
sub
mov
test
sbb
sbb
test
lods
out
rorb
jns
adcb
add
mov
out
mov
xor
add
push
loopne
test
aam
dec
loopne
repz
pop
dec
push
fcoml
lahf
js
mov
add
xor
pop
popf
push
push
loope
mov
mov
push
cwtl
gs
popa
push
fildll
addr16
xor
adc
xchg
push
test
aam
outsb
sar
call
pop
or
stos
add
ss
sbb
dec
int3
test
xor
ret
adcl
fidivl
rorb
cmp
lock
push
call
rorl
jb
enter
sub
xchg
xchg
mov
in
sbb
ficoms
cmpsb
inc
shll
and
jmp
add
pushf
jle
pop
nop
mov
rcrb
sbb
mov
jmp
xchg
dec
xor
pop
mov
push
aas
mov
movsl
jb
mov
popf
xlat
mov
inc
mov
xchg
je
data16
imul
cmp
jae
fnsave
push
loopne
test
jne
adc
fwait
sbbl
cmp
ljmp
push
ss
jns
inc
xorb
ja
mov
in
sub
and
xchg
js
push
cli
clc
int3
inc
cli
lret
add
int3
jle
aaa
push
out
push
mov
sub
jne
inc
inc
incb
insb
mov
pop
sub
sbb
sbb
adc
and
jmp
lret
mov
bound
xor
xchg
clc
aam
and
lea
ss
or
in
in
pushl
mov
mov
push
lock
jb
sub
test
jbe
fiaddl
je
dec
dec
sti
xchg
push
mov
test
xchg
xor
cli
aad
pop
pop
mov
call
fbld
dec
and
xor
add
inc
mov
lcall
mov
scas
lahf
xor
or
or
lods
and
cmc
das
pop
push
pop
adc
popa
out
jg
lds
mov
stc
in
inc
popf
pop
pop
test
xchg
jecxz
les
fmull
inc
push
mov
sub
sti
inc
fisttpl
out
adc
outsl
cmpsb
sbb
push
arpl
adc
dec
jg
jge
fwait
push
xor
decl
jmp
lret
es
inc
aaa
sub
xchg
inc
jae
sbb
ss
or
ljmp
out
repz
sti
les
sbb
jbe
jl
int3
cmp
rep
incb
pop
inc
mov
jmp
outsl
jae
mov
mov
jns
fbstp
idivb
jae
stc
loop
aam
pop
or
imul
mov
adc
dec
cli
les
insl
xor
sbb
sbb
mov
xor
pop
nop
dec
xchg
push
rclb
push
xchg
std
inc
pop
jo
stos
scas
ret
daa
sahf
pop
sub
mov
in
inc
xchg
movsl
jne
cmp
out
lea
rcrb
repz
pop
xlat
mov
shrb
js
xor
jbe
popf
dec
rclb
adc
add
subl
jge
cmp
mov
shll
mov
adc
andb
add
xchg
sti
mov
mov
stos
idivb
insb
orl
pop
dec
popa
dec
frstor
icebp
jl
imul
popf
fdivs
leave
loope
mov
es
dec
leave
adc
lret
mov
mov
iret
lds
pushf
lcall
stc
inc
decb
and
and
aaa
adc
orl
jl
mov
lods
sahf
outsl
pop
push
lretw
mov
fmull
jbe
aas
inc
mov
jle
lahf
jae
mov
ret
and
icebp
int3
push
push
in
pop
xlat
push
in
dec
push
pop
cli
cwtl
adc
mov
popf
aas
orl
xor
test
adc
mov
lds
cld
enter
jae
xchg
lods
subb
dec
mov
mov
inc
jo
mov
outsl
mov
mov
jg
aam
mov
popf
lods
fmul
je
int
xchg
push
ds
cmp
shlb
ds
mov
in
sbb
jle
jg
arpl
push
imul
cs
arpl
push
outsl
mov
popa
scas
into
fwait
insl
dec
mov
sti
fwait
mov
mov
adc
mov
lods
cld
sub
sbb
inc
jg
pop
popf
lods
int
cld
dec
push
dec
and
out
ss
sub
or
popa
jg
and
lahf
rorb
jae
jg
mov
adc
out
ljmp
pop
fisttpl
fsubl
mov
sub
push
cmp
ds
outsl
testb
cltd
and
cli
ja
mov
lcall
sub
jbe
je
dec
in
xlat
pop
cmp
and
pop
test
out
insl
scas
xchg
loope
gs
add
push
add
nop
cmp
arpl
pop
xchg
cmp
idivl
lock
jbe
mov
xchg
inc
xlat
jmp
cmp
pop
inc
sbb
outsb
pop
insb
mov
jp
lea
movsb
pop
jmp
add
sbb
sbb
test
mov
jbe
xstore-rng
cmpsl
inc
push
dec
sbb
sub
and
stos
cmpsl
xor
nop
jmp
sbb
pop
cli
sbb
dec
enter
xchg
aam
ja
mov
inc
shlb
jecxz
pop
lock
xchg
in
outsb
push
and
cli
jmp
mov
mov
mov
push
inc
int
lea
jecxz
mov
cmp
loopne
iret
subl
xor
mov
push
jo
loope
jmp
lods
stos
movsl
fadd
jae
nop
sub
jmp
scas
inc
adc
mov
cmp
test
add
push
push
jecxz
cli
push
in
pop
sti
adc
rcrl
add
push
fstps
daa
outsl
sub
icebp
push
lods
mov
jle
imul
ss
iret
lret
push
dec
pushf
insb
pushf
rorb
pop
sbb
cmp
lea
push
imul
inc
outsl
xchg
cmp
decb
jnp
std
sbb
cmp
xor
pop
cli
sub
movsl
or
aad
int3
jb
jbe
mov
add
imul
xchg
push
mov
mov
popf
dec
loope
sti
vmovdqu
adc
std
aad
mov
mul
push
sub
les
insb
bound
out
dec
adc
mov
jge
adc
lods
stos
mov
repz
cmp
mov
sahf
dec
mov
aaa
in
push
xchg
sbb
sbb
push
jecxz
mov
gs
dec
jo
xchg
or
lret
fxch
and
push
pushf
icebp
jecxz
pusha
call
jo
and
fbstp
out
dec
andb
por
pop
sub
insl
repnz
adc
andl
shrb
loopne
rol
test
shlb
je
dec
inc
lds
shr
not
cmc
into
sub
icebp
les
cmp
pusha
out
push
adc
in
inc
or
aad
xchg
iret
push
stos
cmpsb
outsl
dec
inc
test
outsb
ficoml
scas
in
xchg
fs
shrl
dec
jmp
loop
rorl
mov
sub
clc
or
push
jg
fisubl
popa
out
icebp
inc
push
je
jno
cmpsb
fcoml
sahf
sbb
jle
xchg
pop
pop
roll
mov
ret
fs
les
fstl
ret
xor
xchg
pop
insb
push
shll
pushf
xor
jmp
loopne
sarl
jl
inc
push
mov
mov
repz
lock
push
add
cmp
mov
xor
int3
mov
xchg
push
mov
pusha
fstpl
pop
mov
divb
aad
mov
inc
stc
lock
in
fdivrs
mov
int3
xchg
or
xchg
xchg
xlat
cmp
ficomps
xchg
sub
sub
aad
adc
pop
mov
xchg
or
mov
sub
fistpll
jne
in
fildl
repnz
das
push
mov
mov
mov
movsb
not
addb
sbb
fwait
push
in
fiadds
dec
pop
lret
arpl
sbb
ret
jno
mov
inc
xor
loop
addr16
and
xor
jp
cltd
sarl
movsb
fs
push
push
dec
cmp
sbb
pop
in
jne
popf
aas
jns
orb
aam
push
inc
push
out
jmp
icebp
and
stos
mov
and
in
inc
inc
fs
iret
xor
outsl
fimuls
mull
lock
cmp
adc
adc
clc
mov
mov
xchg
pop
jge
or
sbb
dec
xchg
inc
cmc
or
rcl
and
pop
out
stos
sbb
mov
inc
mov
cmp
pushl
scas
jno
loop
jnp
hlt
aam
cmp
movsb
mov
jge
jmp
inc
fdivs
movsl
sub
pop
popa
mov
jne
adc
dec
jne
lods
jno
nop
cmp
les
movsb
dec
jb
fsub
lret
sub
aas
iret
cwtl
and
adc
sbb
dec
sbb
sbbl
mov
scas
cmc
mov
mov
cmp
mov
jnp
test
or
push
jno
pop
xchg
dec
ljmp
pop
popa
stos
jne
mov
dec
jecxz
repz
inc
test
dec
cmc
pshufw
jle
adc
cmp
icebp
jle
stc
xchg
test
push
sbb
push
rcl
add
mov
cwtl
and
jbe
mov
adc
enter
add
pop
jmp
popf
ret
push
xchg
fmull
xor
pop
inc
popf
icebp
iret
add
outsb
dec
sbb
lret
nop
enter
push
shll
in
cwtl
cli
cmpsl
dec
fcmovb
mov
out
sub
jb
push
or
bswap
fwait
inc
daa
cmp
mov
push
enter
mov
lret
sbb
push
cmp
sbb
fdivrs
loope
mov
lea
cmpl
repz
clc
cmp
stos
inc
sbb
cwtl
rorl
mov
dec
into
xor
lods
xor
fwait
and
add
imul
icebp
in
lods
loop
or
cwtl
sbb
and
mov
cmc
ret
ret
mov
stc
in
sub
inc
inc
mov
nop
mov
outsb
shl
mov
in
jno
add
mov
jo
mov
mov
inc
pushf
push
rol
adc
ret
mov
shrl
mov
fs
daa
in
push
push
mov
mov
pop
sahf
scas
adc
pop
mov
adc
sbb
out
outsb
les
hlt
push
pop
popa
mov
xchg
add
dec
out
dec
iret
push
xor
and
insb
out
int3
loope,pt
cmp
mov
fwait
lds
popa
ljmp
pop
pushf
mov
push
pop
jge
int
push
lods
sbb
jg
mov
inc
jge
int3
jg
mov
sub
bound
scas
xor
outsl
dec
sbb
ljmp
cmp
mov
push
or
mov
iret
int
das
imul
adc
xchg
jp
mov
into
pusha
fsubl
dec
orl
push
fnsave
lods
or
inc
and
push
out
cmp
in
xchg
pop
mov
dec
clc
and
cmp
push
jmp
jp
in
xchg
jp
std
xor
test
or
repnz
ret
jnp
mov
inc
xchg
push
addr16
xlat
or
or
add
ficompl
shlb
and
je
ficoms
cli
xor
jle
imul
jnp
jecxz
outsl
inc
in
pop
xchg
imul
sub
mov
pop
and
adc
shl
jno
mov
adc
push
sub
sti
lds
loope
test
dec
jbe,pt
sub
mov
mov
jb
or
push
aam
cmpsb
mov
fstpl
test
js
sub
pop
lock
cmp
mov
mov
jmp
jmp
in
cs
mov
gs
mov
scas
call
jle
in
xchg
std
int3
popf
stos
mov
mov
loopne
xorb
xlat
repnz
or
jb
jp
test
inc
mov
mov
cwtl
outsl
fsubl
sub
aad
cmpsl
js
lods
sbb
push
cli
pop
mov
push
cli
dec
or
adc
or
imul
mov
bound
into
ljmp
mov
hlt
sti
iret
push
rorl
cld
pop
inc
pop
scas
xchg
popf
pop
cmpl
call
in
pop
xchg
aaa
mov
stos
dec
js
or
cmc
test
pop
inc
test
leave
sarl
cmpl
fildll
rorl
inc
jnp
push
insb
mov
jp
sub
mov
imul
cmp
sub
mov
dec
lea
int3
sub
xor
jmp
pop
in
sub
aas
mov
xchg
test
shlb
cld
or
push
cmp
xor
outsb
jp
popf
jl
xor
lret
and
out
loopne
imul
pop
jmp
and
xor
jns
ret
push
divl
jns
lret
xchg
iret
fistps
sub
imul
sbb
mov
jg
pop
addr16
xchg
sbb
and
stc
adc
cltd
repz
push
dec
inc
inc
mov
in
mov
movsl
pop
or
sub
adc
cmpsl
mov
and
aaa
xor
pop
iret
mov
xchg
insb
or
push
xor
stos
xchg
loopne
mov
mov
sub
xchg
sbb
mov
inc
xchg
outsb
cmp
sbb
sbb
mov
dec
test
icebp
and
aad
mov
popf
dec
rcrb
push
and
push
lea
movsb
jge
int3
popf
jnp
mov
jb
inc
addr16
jmp
pop
ja
les
je
into
loop
sbb
dec
fwait
popa
aaa
sbbb
add
push
push
jg
push
jno
rolb
mov
enter
mov
clc
xchg
sub
fnstcw
sbb
test
cli
loope
cmpsb
inc
cmp
fcmovnu
in
dec
roll
and
out
jp
je
daa
adc
popa
xor
fcoml
adc
jnp
jecxz
shll
sub
into
aas
in
jb
scas
arpl
clc
or
lret
cmpsl
add
icebp
bswap
ljmp
iret
insb
inc
stos
leave
and
jl
xchg
nop
push
ja
xlat
sti
pshufw
sbb
add
lahf
xchg
adc
gs
mov
dec
scas
insl
adc
imul
push
mulb
fnstcw
gs
inc
int3
jbe
and
hlt
mov
out
test
inc
pop
ja
lcall
bound
movsb
mov
cltd
mov
xchg
jb
push
push
jno
and
jle
inc
and
jb
sbb
xchg
movsb
je
cmpl
xor
mov
mov
daa
dec
inc
outsl
and
pop
adc
pop
pusha
push
test
stos
into
lcall
mov
xor
sbb
fistl
xchg
jb
inc
push
inc
clc
or
add
aaa
in
mov
ja
push
clc
rcrb
movsb
cli
push
shl
mov
repz
sbb
xor
mov
mov
imul
ljmp
inc
fs
mov
cmpsb
cs
cli
mov
add
pushf
adc
sbb
ja
mov
neg
pop
in
les
lds
xor
out
rorb
dec
aaa
js
and
popf
add
aad
jne
jns
sub
icebp
das
pop
and
imul
jg
dec
lock
lahf
mov
lret
adc
pop
inc
ss
jl
rclb
cmp
push
push
imul
test
movsb
jge
subl
xchg
rcr
jb
imul
popa
cs
shrl
pop
jp
jne
out
add
and
xchg
sub
push
xchg
fcmovnbe
ja
and
aam
add
dec
fs
xchg
loopne
xchg
cwtl
sahf
std
pop
aad
mov
mov
push
mov
aam
sbb
sub
mov
mov
push
cmp
imul
inc
in
jae
pop
xor
adc
sahf
mov
push
in
nop
pop
and
mov
stc
dec
adcb
mov
mov
sbb
lret
es
sarl
ds
cmp
sub
in
jb
and
mov
pop
mov
sahf
push
lds
repz
dec
and
mov
cld
lret
or
cwtl
xor
aas
jp
mov
xchg
add
test
jle
pusha
sbb
cmp
push
and
lock
cli
pop
call
loope
or
and
int3
clc
and
cmpsl
and
outsl
ret
mov
iret
or
inc
inc
mov
jmp
nop
push
sbb
xorb
es
xor
or
testl
mov
inc
pusha
push
cmp
adc
cmp
cmp
movsb
mov
lea
gs
test
jo
inc
test
loopne
mov
pop
out
mov
je
add
loopne
xchg
cmp
lcall
mov
push
dec
xor
inc
pop
pushf
aaa
sbb
jae
add
sbb
add
pop
jno
or
cmp
outsl
flds
stos
gs
ds
aaa
jp
mov
push
fists
iret
dec
cmpsl
xchg
je
mov
js
adc
js
addr16
inc
inc
call
mov
pop
cmc
iret
in
or
repnz
in
jg
mov
sbb
sbb
mov
jne
lcall
outsl
ja
int3
sti
adc
push
loop
scas
mov
mov
push
aaa
xor
sub
es
inc
sbb
xchg
movsb
popf
adc
adc
addr16
or
jb
divl
xchg
out
jmp
int
cmp
pop
jmp
mov
fwait
mov
mov
mov
fs
or
mov
cmp
je
xchg
add
test
mov
jmp
adc
lods
test
jecxz
push
jle
fdivs
adcb
movsb
xchg
push
sbb
mov
stos
sub
mov
push
cmp
imul
or
in
xor
and
mov
cmpsb
and
cmp
movsb
cmp
jge
movsl
mov
push
lahf
mov
lcall
loope
xchg
in
popa
lcall
sbbb
cmp
repz
lods
jge
lahf
shlb
sti
pop
test
inc
fidivrl
pop
aas
cli
jnp
cmp
call
push
fst
gs
xchg
mov
ljmp
negl
gs
cmp
lret
dec
cmpsb
jae
mov
std
in
sahf
jp
xchg
dec
je
fcomps
test
mov
inc
inc
bound
int
adc
or
add
jmp
jbe
js
inc
cmp
ja
lret
lea
jge
ss
add
jmp
loope
stc
rcl
nop
jae
je
mov
jp
fcompl
jnp
pop
xor
call
mov
mov
adc
or
aaa
add
or
in
mov
loope
jp
dec
popf
hlt
and
dec
pop
push
mov
cmpl
fwait
clc
push
repz
ret
dec
std
cmp
sbb
or
out
cltd
mov
and
mov
sahf
outsb
mov
repz
sub
xor
in
sarb
inc
testb
jp
imul
ret
jae
test
mov
inc
pop
mov
xor
mov
jg
xor
cmp
xchg
test
sub
xchg
pushf
repz
sti
sbb
lock
push
xchg
pop
leave
aas
add
mov
pushf
enter
xor
mov
pop
jge
jge
or
test
fdivrp
sub
add
or
dec
pusha
stc
fmuls
movsl
xchg
mov
les
repnz
and
push
ud0
mov
add
cmp
or
mov
jnp
sti
mov
stc
or
rcll
sub
test
or
outsl
mov
out
jp
fildll
jmp
out
jb
int
inc
aad
test
add
imul
mov
ret
mov
xchg
int
ror
aaa
notl
test
sbb
stos
scas
iret
out
sarb
outsl
mull
icebp
or
insb
aas
test
loope
lahf
inc
xor
clc
icebp
mov
xchg
jg
dec
inc
mov
pop
dec
clc
mov
cwtl
cs
pop
fs
sub
xchg
jmp
sti
es
adc
sbb
xchg
inc
into
inc
pop
xor
lock
xchg
loopne
lds
cmpl
icebp
emms
sbb
dec
and
push
lds
jb
xchg
mov
pop
fwait
ret
pop
cmpsb
arpl
adc
dec
push
cmpsb
adc
outsb
fcomip
inc
sbb
test
pop
add
sti
jbe
orl
adc
lret
mov
insl
fimull
mov
outsb
in
xor
xlat
pop
fisubrl
cmpsb
leave
adc
dec
fistps
lret
add
in
and
cmc
dec
pop
mov
and
pushf
inc
push
test
inc
daa
cmp
je
sbb
shl
inc
pop
or
jmp
sub
clc
stos
hlt
sub
test
pusha
int
jno
out
add
loope
imul
call
ret
aam
fs
ret
addb
repz
sti
dec
xchg
xchg
mov
icebp
insl
pop
out
pop
arpl
or
out
stos
ds
xchg
mov
cs
das
fwait
lods
mov
mov
into
mov
mov
jbe
mov
mov
add
je
rolb
movsb
fs
out
sub
and
orl
adc
insl
sbb
xchg
xchg
mov
push
test
xor
push
or
mov
inc
sbb
dec
lods
push
cmpsl
test
or
sbb
jne
jl
scas
mov
adcl
roll
cmc
xchg
adc
loop
repz
scas
ja
mov
int
out
jle
outsb
xor
push
jb
int3
and
xchg
adc
repnz
fmull
cmp
sbbb
lret
popa
sti
xor
push
iret
jl
add
or
cmp
mov
repz
pop
dec
jnp
int3
jg
lock
filds
gs
out
je
or
fiadds
pop
les
test
jns
and
lds
lods
adc
and
imul
sbb
dec
cltd
push
pushf
inc
pushf
cmp
into
lock
jl
lcall
mov
bswap
bound
pop
mov
stos
cmpsb
aad
pop
nop
mov
xor
daa
or
mov
dec
rol
movsl
ja
inc
cmpsb
xor
adc
ds
ret
lcall
pop
jns
xor
inc
fisttps
lahf
fistl
hlt
mov
push
mov
lock
push
add
cmp
aad
pusha
cmp
rcrl
mov
sbb
loop
movsb
call
cmp
stos
jecxz
xchg
fwait
adc
mov
and
jmp
add
push
cltd
in
pop
inc
test
cmp
fistpll
leave
in
arpl
scas
dec
stos
sahf
cmp
push
testl
stc
cmpsl
push
push
push
mov
aad
sbb
test
jecxz
ds
pop
hlt
jo
fadds
xor
mov
sub
or
js
jecxz
xor
push
push
xor
loope
mov
popf
xchg
nop
test
iret
jmp
pushf
lods
scas
pop
in
sbb
mov
daa
pop
sub
or
mov
mov
cmp
push
mov
xchg
inc
pop
je
push
and
lret
orb
mov
xchg
data16
popa
add
push
mov
lods
cmp
mov
sbb
adc
fcoml
add
xchg
stos
negb
jecxz
cmc
sbbb
shlb
dec
hlt
mov
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
mov
sub
push
push
sub
push
push
fwait
lret
sub
gs
aaa
sbb
cmp
push
lret
adc
imul
cmpsl
lock
rorl
mov
je
pop
int3
xlat
push
adc
out
cmp
mov
inc
and
push
mov
roll
dec
jo
jp
mov
ror
mov
jne
loope
push
add
jmp
aas
icebp
out
push
mov
shrb
push
repz
test
lret
push
push
std
mov
loopne
test
sbb
std
cmp
cld
mov
decb
mov
cmp
mov
std
ljmp
pop
fcmovne
lods
frstor
adc
jp
sbb
jp
cwtl
ret
popf
ja
push
mov
cmp
iret
mov
cmp
call
cltd
mov
iret
mov
xchg
inc
lret
mov
in
sbb
out
gs
cmpsl
dec
dec
es
adc
jmp
sbb
xor
adc
mov
dec
xchg
xor
cmp
mov
adc
xchg
add
jge
add
mov
cmp
ja
mov
push
and
jo
jge
outsl
push
lods
int3
dec
pushf
js
and
cli
icebp
gs
mov
dec
pop
mov
mov
xchg
enter
or
and
shll
adcb
daa
out
add
jmp
lea
xor
scas
lock
pop
xlat
mov
and
adcl
es
stc
sbb
xchg
and
iret
lret
mov
adcb
aam
cmpsb
push
lret
mov
movups
sarb
xor
les
popf
pop
push
mov
xchg
shlb
ja
clc
add
dec
mov
cmp
orl
sub
pushf
and
aas
xchg
scas
push
and
jb
lea
pop
call
jno
popa
and
dec
mov
mov
out
inc
push
lcall
or
int3
mov
xchg
pusha
xchg
icebp
leave
xchg
adc
and
loopne
push
and
repz
addr16
imul
addl
shl
dec
dec
jg
dec
inc
outsl
aas
outsl
addb
sub
push
add
ja
cwtl
pop
mov
fidivl
jecxz
or
mov
mov
jae
and
mov
pop
daa
dec
dec
into
sti
ja
leave
in
cmp
div
add
inc
mov
mov
jecxz
aam
mov
mov
pushl
add
push
sbb
mov
mov
mov
outsb
es
mov
int
mov
adc
mov
xchg
test
aas
cmp
push
ja
mov
mov
das
es
icebp
out
addr16
inc
fstps
fisubs
lds
jo
sub
sub
idiv
mov
xor
and
or
jne
aas
mov
imul
movb
in
shlb
int3
out
rolb
scas
mov
dec
xor
test
inc
push
scas
cmp
xor
xchg
push
jb
incb
or
fimull
test
jne
pop
repnz
enter
and
test
xchg
adc
dec
dec
sbb
adc
adc
daa
pop
clc
mov
mov
xchg
cltd
mov
xor
push
push
push
push
and
adc
and
mov
rcll
ror
std
test
shrl
pop
or
xlat
add
inc
loopne
adc
enter
ror
pop
cmpl
aas
fbld
push
dec
sub
lds
push
add
rorb
loopne
xchg
fidivrs
or
movsl
adc
push
and
fidivl
iret
leave
fiaddl
cmp
mov
sub
gs
ds
mov
lahf
ja
push
cld
dec
enter
mov
or
data16
cli
dec
gs
and
fbld
ds
xchg
insl
enter
dec
fwait
testl
mov
int
sbb
and
cmp
dec
jle
mov
xchg
repnz
mov
lret
gs
enter
gs
add
xchg
cmc
cmpl
push
dec
mov
push
cld
aas
mov
ret
scas
inc
xor
arpl
mov
or
pop
mov
lahf
cwtl
outsl
scas
xchg
fldcw
mov
pop
aam
add
adc
xor
enter
daa
in
pop
mov
fidivrl
lahf
mov
sbb
and
mov
pop
mov
popf
jg
push
ds
sbb
das
cmp
sti
or
inc
pop
aaa
adc
jns
sub
sub
lret
pop
scas
mov
out
push
frstor
fdivr
loopne
cmp
push
cmp
scas
nop
mov
mov
scas
data16
les
mov
pop
in
insl
adc
subb
out
lret
aad
bound
mov
ficoml
or
xchg
repz
cmc
sub
fldcw
daa
std
insb
xor
mov
cltd
lods
fiadds
xor
mov
jb
cs
xor
push
sub
mov
pop
shll
int
ficoml
ret
and
notb
fdivrp
ret
popa
nop
pop
adc
mov
stos
add
out
in
rcrl
push
cmc
push
inc
mov
xchg
shlb
in
dec
dec
in
sbb
mov
sbb
dec
imull
mov
sub
jge
dec
cmpsl
fcom
stos
mov
mov
out
cmp
call
xor
pop
sbb
dec
inc
mov
lds
jg
cltd
sti
scas
mov
cmpsb
sti
sar
adc
jg
sbb
fidivl
push
fwait
jmp
mov
scas
in
push
dec
xlat
fsts
hlt
add
shrl
aam
dec
enter
pop
imul
xchg
nop
es
test
aaa
adc
dec
push
shrl
loope
insb
loop
out
jl
push
adc
jp
mov
clc
in
add
push
lock
out
xor
outsl
mov
dec
pop
mov
sbb
sbb
or
aas
test
lods
fmull
arpl
outsb
push
and
inc
mov
or
enter
test
sarb
ss
sarl
shll
scas
xchg
mov
aam
cmpsb
imul
shrl
xchg
push
jmp
jno
add
cmp
push
faddp
sub
push
jge
sbb
jb
daa
adc
dec
push
cmp
mov
mov
mov
sbb
xor
pop
dec
ja
lock
jg
mov
icebp
mov
out
dec
bound
jo
loop
xor
outsl
pop
bound
andb
popf
adc
mov
sbb
sar
decb
xlat
pop
call
inc
bnd
jae
in
pusha
pop
int3
sahf
gs
or
ss
minps
jmp
jmp
div
dec
orl
pop
and
or
pop
sub
sti
xchg
data16
les
mov
popa
dec
inc
pop
test
into
push
icebp
ljmp
test
cmp
mov
dec
lods
imul
nop
mov
in
leave
cmp
call
push
mov
test
lods
loop
aaa
dec
sub
xor
sbb
stc
lahf
mov
les
cmp
imul
gs
dec
mov
jg
mov
push
aam
outsl
lahf
add
mov
and
cwtl
push
nop
push
ret
cmp
clc
test
ljmp
shll
dec
xor
ljmp
subb
or
loop
inc
xor
mov
dec
ret
imul
addr16
inc
push
negb
xor
and
andb
cmp
movsb
loop
push
cmp
dec
rcl
int
cmp
out
cwtl
decl
pop
jnp
ljmp
ljmp
and
add
and
out
iret
inc
hlt
fbstp
xor
stos
std
fadds
or
push
clc
lods
xchg
fs
inc
dec
or
xchg
fists
xchg
in
push
aaa
pusha
sub
cmp
mov
and
arpl
inc
push
sbbl
push
cmc
or
cmp
leave
dec
mov
pop
lret
cmpsl
leave
fcoml
outsb
int
mov
inc
mov
aas
cwtl
mov
jmp
mov
or
fwait
iret
lcall
xchg
popa
ror
dec
pop
rorb
sarb
pop
lcall
sti
and
test
push
inc
das
pushf
pop
adc
dec
add
fisttpll
pop
adc
push
aas
sahf
pop
cld
shr
xor
mov
jl
shl
mov
test
fcomi
fidivrl
imul
loope
pop
push
and
lock
jmp
push
dec
sbb
mov
and
dec
mov
xchg
mov
mov
jb
or
cmpsl
lcall
xchg
repnz
mov
push
pop
scas
jl
std
fistpl
insl
into
imul
xchg
loopne
xor
push
push
and
cmpb
out
and
cmp
pop
bound
mov
inc
lods
roll
aam
call
ljmp
out
mov
mov
insb
scas
jbe
and
push
decl
sbb
dec
roll
rcl
xlat
push
ja
ja
cmp
leave
cmp
mov
cmc
pop
sbb
and
lret
lgs
jecxz
ja
pop
sub
dec
xchg
sbb
or
mov
mov
aad
loope
in
in
pop
ljmp
jl
xchg
mov
dec
xlat
xor
xchg
push
inc
xchg
mov
mov
inc
mov
gs
push
pushf
loop
add
lea
mov
dec
inc
xor
fbld
stos
push
fwait
loopne
mov
cmp
inc
add
jb
std
in
xchg
sub
push
push
mov
xlat
pop
and
sub
lret
mov
mov
outsb
fwait
mov
and
and
xchg
psubd
adc
sbb
push
and
subl
sub
movl
cltd
mov
mov
jo
add
xchg
lock
or
cld
xchg
loopne
test
pop
loop
add
push
jo
pop
rorb
lret
or
out
hlt
pop
push
pop
in
inc
xor
enter
pop
insl
rorl
aad
cwtl
in
push
aaa
inc
insb
ja
mov
mov
sbb
outsl
out
scas
aas
jmp
push
dec
btr
aas
repz
mov
and
jne
clc
outsl
pushf
popf
pusha
jl
sbb
mov
in
aam
lahf
out
xchg
xor
adc
jb
ret
or
mov
push
pop
inc
or
movsl
ret
test
xor
mov
ret
pop
push
adc
cli
push
adc
daa
out
in
scas
mov
out
xlat
cmp
int3
movsl
sbb
addr16
inc
in
sub
leave
cwtl
sahf
testb
cli
repnz
jno
push
sbb
add
repnz
lods
sbb
xchg
iret
xchg
out
sbb
or
pop
daa
mov
inc
push
repnz
adc
rcll
mov
pop
aas
cmpsb
push
das
out
push
jmp
into
push
popa
mov
cmp
leave
jno
add
shlb
jb
loopne
scas
nop
mov
pop
adc
int3
into
aas
sbb
jb
imulb
mov
addl
shrb
jl
or
and
hlt
test
out
add
andb
stc
pushf
xor
sbb
push
fisttpl
push
dec
ret
push
scas
push
pop
ret
jmp
out
iret
sarl
push
jbe
fbld
ret
xor
sbb
iret
inc
inc
xlat
fs
jmp
iret
pmullw
xor
ret
cmpsb
stos
xchg
sub
pop
test
out
push
and
sti
and
sbb
mov
aam
jb
pop
cli
dec
test
sbb
pop
dec
movsb
mov
or
test
sub
lods
xchg
not
test
bound
cmp
out
js
push
cltd
pop
mov
bound
mov
adc
mov
jecxz
std
pop
xor
cwtl
pop
ror
outsl
inc
or
sub
daa
inc
sub
aaa
sub
sub
mov
aam
inc
dec
mov
xchg
add
test
call
test
scas
pop
call
mov
vphaddbd
ds
cmp
imul
js
pop
adc
cltd
nop
stos
rcl
in
clc
mov
test
leave
cmc
cmp
jge
ds
lahf
stc
jmp
std
and
int
fucomi
jge,pt
shll
and
mov
cmpsl
mov
mov
sbb
xchg
push
xor
ret
dec
aas
loope
adc
sbb
mov
decl
fwait
xlat
imul
dec
push
mov
mov
mov
idivb
sub
jecxz
add
int3
inc
leave
cmpsb
mov
je
fwait
mov
test
dec
arpl
ds
or
inc
push
mov
or
pop
or
and
repnz
scas
and
pop
std
hlt
fildll
out
rorb
inc
jg
xchg
pop
insl
rcll
out
mov
xchg
adc
mulb
aaa
pushf
inc
dec
les
call
loop
mov
call
hlt
dec
out
cmpsl
jmp
sarb
push
fisubrl
mov
mov
in
or
inc
add
push
dec
xchg
imul
ret
inc
adc
push
test
ljmp
in
xchg
sub
xor
fstps
stos
rclb
cld
out
cld
mov
cmova
mov
aas
leave
add
out
or
out
cmp
pop
pop
cmc
ss
lahf
mov
fs
sbb
cmp
mull
sub
sbb
loopne
sub
mov
sub
mov
daa
mov
inc
xor
xchg
add
ss
enter
or
inc
xlat
add
iret
jns
and
lret
xchg
shll
insb
jo
mov
out
adc
loope
mov
clc
mov
sti
xchg
sti
hlt
mov
xor
out
add
cmp
jb
sbb
add
scas
adc
sarl
clc
jns
mov
xrelease
mov
xchg
push
mov
dec
bound
sub
dec
rcrl
pop
push
scas
je
sub
lahf
adc
lcall
sbb
insb
lods
in
dec
sar
push
mov
mov
out
jg
int
outsl
cli
sub
push
cmp
cmp
rcll
std
cltd
mov
pop
or
es
iret
push
orl
mov
imul
outsb
leave
dec
adc
fdivs
imul
xor
imulb
es
xor
daa
rcll
inc
fistpll
adc
orl
insb
loopne
push
xchg
into
das
sub
out
adc
adc
mov
mov
xchg
jae
push
lcall
push
idiv
or
jne
sbb
push
pop
stc
leave
fdivp
je
bound
sbb
test
adc
pusha
inc
xor
and
jge
jbe
mov
sbb
scas
fisubrs
sbb
dec
aaa
inc
jle
mov
cmpb
je
mov
xor
lock
cwtl
orb
pop
sub
imul
xchg
loopne
adc
jmp
arpl
es
cmpb
fisubrs
mov
inc
fmul
js
cli
icebp
dec
push
push
jecxz
int3
dec
xchg
cwtl
sbb
nop
into
hlt
mov
jo
popf
dec
mov
repz
or
cltd
pushf
decl
cmp
andl
aaa
push
pop
push
bound
push
add
lahf
ror
cmpsl
rorl
dec
and
notb
mov
inc
mov
push
push
aas
dec
cmp
mov
clc
insl
add
mov
adc
and
sti
ficoms
cmp
push
call
cli
push
adc
cmpsb
mov
syscall
mov
dec
mov
push
popf
add
sbb
mov
int
pop
dec
sub
xlat
scas
cli
mov
stos
vmovapd
stc
jg
imul
testb
js
filds
test
and
dec
or
aam
fstpl
sahf
cltd
pcmpeqd
push
loope
or
xor
mov
jno
fwait
push
stc
lds
rcll
sahf
rolb
push
adc
mov
ja
xchg
outsl
cli
add
xor
in
stos
js
pop
clc
push
cmp
pop
rcrl
xor
filds
shrl
cmp
xor
adc
aad
lcall
data16
xor
fmul
ljmp
fmull
mov
aad
adc
xor
loope
push
xor
in
mov
mov
sub
xor
or
leave
aaa
lret
jns
popf
pop
daa
cmpsl
xchg
rorl
nop
stc
out
ljmp
mov
sbb
mov
mov
jg
pop
andb
fsubrl
cmp
int3
lods
push
or
jb
outsb
mov
aam
cli
mov
pop
aad
cmp
out
fidivl
test
adc
lret
xchg
xchg
pop
mov
xchg
mov
sbb
adc
shrb
ljmp
dec
rclb
sbb
xor
ds
sbb
mov
pop
mov
inc
enter
mov
mov
ss
lret
mov
pop
mov
lret
fucomi
aas
dec
xlat
movsl
std
mov
pop
jbe
sbb
dec
push
out
xchg
xor
sahf
sbb
fcmovbe
xchg
or
push
daa
pop
push
cmp
bound
jbe
sub
xor
jecxz
mov
popa
out
jge
xchg
or
lea
das
pop
mov
sar
movsb
leave
inc
push
jbe
or
add
int
ret
insl
sub
mov
mov
xor
mov
mov
cli
ret
in
xchg
popf
rorb
scas
stos
enter
mov
mov
dec
sub
add
idivb
lahf
pop
mov
ds
cltd
adc
xor
cltd
rclb
xchg
sbb
in
ja
rclb
lret
sbb
mov
add
mov
lahf
jmp
arpl
jp
outsl
xor
andl
inc
mov
fwait
dec
add
dec
push
test
cmp
inc
sub
fwait
push
inc
xorb
movsb
or
xchg
pushf
daa
enter
xor
fstl
mov
ficompl
fs
hlt
push
test
loopne
out
xchg
cmp
popf
adc
ja
in
test
sbb
and
enter
jecxz
bound
xchg
ret
in
pslld
push
jae
test
sbb
inc
insl
pop
inc
lds
fldt
mov
push
sarb
mov
jnp
push
mov
adc
push
dec
cwtl
add
jecxz
imul
push
push
mov
ficomps
sbbb
mov
pusha
mov
out
fsubrl
repnz
stc
adc
jecxz
xchg
addl
pop
xor
add
xchg
inc
sahf
xor
add
bound
mov
std
or
inc
scas
jnp
xor
xchg
push
push
dec
push
mov
hlt
xlat
inc
iret
xor
jno
data16
mov
inc
test
lock
std
xchg
xchg
mov
jne
add
push
test
js
jne
out
arpl
lret
arpl
xlat
rcll
xchg
mov
xor
inc
out
mov
jecxz
stos
fimuls
dec
cmp
dec
es
clc
fildll
nop
mov
jmp
idivb
test
aas
adc
loopne
cmp
cmpsb
cmpsl
adc
xor
jl
inc
push
cwtl
jmp
mov
and
push
push
dec
and
into
mov
dec
mov
ret
mov
xorl
fmuls
outsb
inc
insl
leave
dec
mov
add
cmpsl
fstp
in
fisttpl
inc
shrb
nop
fnsave
cmp
fidivl
push
nop
lahf
test
ja
sub
jno
in
mov
idiv
mov
and
adc
movsl
cltd
push
cmp
jle
sbb
and
icebp
jo
push
mov
outsb
daa
dec
stos
push
dec
mov
scas
xchg
cmp
lret
or
cmp
dec
mov
dec
inc
call
sbb
fsubl
xor
lret
mov
enter
mov
ds
cmp
lods
xor
sub
sub
sub
out
ja
lods
dec
xchg
clc
jno
sbb
movsl
mov
xchg
jecxz
insb
hlt
and
lock
add
repz
jmp
cmp
out
dec
nop
dec
sarb
xchg
cmp
push
xor
cmp
xchg
mov
cs
cmc
test
out
add
data16
cmp
les
jbe
ljmp
call
dec
dec
mov
mov
mov
enter
fldenv
fidivrl
cmpsl
push
cmp
cwtl
jno
aad
jnp
mov
mov
inc
adc
enter
lods
movsl
rorl
push
xchg
pop
xchg
jb
lret
rorl
mov
nop
push
enter
add
add
add
jo
leave
aad
fs
sbb
dec
out
call
add
sub
inc
addr16
sbb
insb
mov
add
adc
jmp
mov
xchg
sub
mov
sahf
divl
enter
lea
pop
pop
add
mov
mov
cli
ret
scas
pusha
xchg
jmp
push
push
lods
stos
and
cmp
and
fcmovnb
fadds
xor
lret
push
shlb
jno
xchg
xchg
sub
sbb
fisubs
iret
in
mov
mov
pop
and
xchg
outsb
in
lret
aas
mov
movsl
mov
xor
fnstsw
adc
loopne
and
nop
ds
outsb
js
iret
pushf
bound
test
cmp
cli
sti
adc
pop
movsl
jne
es
xchg
push
or
in
cli
ficoms
add
jmp
stc
ficomps
or
out
pop
xchg
push
packssdw
xchg
int3
dec
inc
fcoml
nop
jmp
and
insl
loopne
or
iret
icebp
in
popa
leave
mov
arpl
push
std
mov
mov
push
mov
repnz
sub
addb
iret
mov
cmp
jge
xor
pop
mov
ja
pop
cmp
or
shrb
mov
outsb
leave
bound
cmpsb
aaa
pop
jnp
sub
xchg
ret
stos
sti
adc
xor
adc
pop
mov
popf
out
aas
in
mov
push
mov
pop
jb
push
stos
add
xlat
sbb
cmp
imul
mov
or
fwait
outsl
cltd
mov
xchg
push
jl
mov
sub
cwtl
cmp
sub
sahf
jecxz
adc
mov
mov
mov
shl
mov
decb
jl
inc
or
pop
jb
stos
or
push
fwait
out
jmp
fnstsw
sahf
mov
mov
xchg
pop
sub
push
mov
sarl
stos
mov
scas
xchg
into
xchg
jmp
outsb
loopne
out
fisttps
xor
cmpsl
push
sahf
in
cmp
mov
fistl
test
mov
popa
pop
out
xor
pusha
jbe
jge
pop
cmp
movsl
ret
mov
cmp
adc
xor
push
and
adc
sub
mov
xor
push
xchg
hlt
outsb
or
cmpsl
insl
add
bound
mov
add
lds
sbb
inc
call
or
ret
aad
out
add
xor
pop
gs
aaa
aad
mov
loope
repz
lahf
cmp
loope
ret
clc
loope
lcall
jne
and
je
sub
test
test
xor
enter
push
push
inc
bound
repz
stc
pop
mov
negb
mov
pop
and
sbb
adc
int3
test
in
mov
aas
mov
movsb
xchg
add
mov
adc
jb
xor
mov
sarb
xchg
test
jg
push
pop
mov
cmpsl
or
add
add
dec
push
inc
pop
in
popf
xchg
lahf
fstpt
jo
lret
arpl
mov
push
icebp
add
shrb
jle
std
imul
sub
sub
adc
mov
test
mov
loopne
movsb
and
imul
push
xchg
add
mov
jnp
or
push
loop
jae
ss
mov
testl
lods
mov
mov
or
sub
xchg
rorl
ja
xor
rolb
fidivrs
icebp
movsl
add
aad
cld
xchg
jmp
inc
mov
loop
lods
push
js
push
sarb
inc
mov
fninit
or
pop
cwtl
push
sub
bound
icebp
mov
sti
arpl
leave
daa
pop
jnp
jbe
lods
out
inc
push
adc
mov
sbb
xchg
pop
push
jg
cmc
adcb
fldcw
adc
leave
rcrl
push
mov
mov
test
mov
out
bswap
push
stc
mov
or
fwait
mov
push
mov
in
sbb
mov
xor
fs
or
bound
xchg
cltd
in
sbb
negb
push
and
rcrb
test
adc
aam
xlat
sbb
mov
dec
mov
es
pop
fnstenv
notb
clc
ret
xchg
cltd
add
push
arpl
in
mov
clc
mov
or
or
movsb
sbb
jo
adc
iret
mov
repz
cwtl
push
push
sar
mov
outsb
in
pop
cmpsb
mov
jae
hlt
adc
or
push
mov
popf
insl
adc
dec
mov
jbe
in
ljmp
dec
mov
xchg
ds
sbb
sbb
and
fs
leave
sbb
hlt
outsl
jno
push
xlat
jecxz
stos
ret
scas
or
cs
fidivrl
and
mov
pop
ja
add
repz
aaa
orb
cmc
into
xor
arpl
icebp
dec
aas
sti
xor
add
sbb
rcrb
jp
testl
sbb
daa
outsl
iret
mov
sbb
jno
pushf
or
roll
rol
add
mov
mov
and
mov
stc
add
adc
in
aam
je
jl
pop
xor
mov
and
bnd
cmp
mov
ficoms
aas
dec
idivl
fmul
ljmp
mov
insb
loopne
push
mov
test
mov
sub
sub
mov
pushf
cmp
jbe
rolb
or
mov
ret
mov
das
popf
pop
rol
orl
lock
in
ds
add
es
iret
or
movsl
push
pop
lods
fsubr
pop
lret
mov
test
test
push
sbb
scas
mov
xor
std
cli
cmp
dec
cmp
mov
rcrl
repnz
mov
jge
sub
aas
das
and
mov
xlat
dec
int3
xchg
lea
inc
sub
sub
push
mov
fidivrl
push
jge
mov
sub
mov
sahf
fistl
fstp
push
cs
mull
push
int
popf
sti
xchg
xor
repnz
addr16
pushl
lock
loope
jp
icebp
mov
push
icebp
leave
xchg
es
pushf
fsubrp
stos
lods
pop
fcompl
pop
ljmp
mov
shlb
les
jno
and
jbe
int3
test
fisubl
stc
xlat
lods
pop
shl
cmpsb
imul
add
inc
outsb
fimuls
mov
repz
int3
xor
stos
dec
mov
lahf
pop
sbb
bswap
jp
and
mov
and
iret
insl
lcall
in
in
rorl
and
and
fwait
in
das
insl
enter
adc
gs
imul
imul
cltd
push
stos
pop
fcmovnb
adcb
rclb
in
or
add
add
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
add
dec
in
and
nop
adc
cmc
mov
bound
mov
add
mov
push
idiv
fnstcw
int
testb
mov
adcb
mov
push
or
orb
pop
loopne
sbb
test
roll
stos
icebp
xor
fdivl
mov
jae
std
xlat
test
xchg
jb
stos
add
out
push
test
aas
jae
adc
adc
dec
into
mov
sbb
test
je
mov
and
or
aas
shrl
push
aad
jae
daa
stos
movsl
lahf
test
or
int3
lods
mov
adc
or
xchg
call
inc
mov
mov
xor
bound
cmpsb
sbb
fsubl
and
sahf
inc
ss
xor
shll
fnstsw
out
sub
jecxz
lcall
movsl
push
rorl
pop
fyl2xp1
and
js
lods
rorb
add
loopne
lret
lret
inc
mov
lret
outsl
nop
ljmp
jbe,pt
dec
gs
rol
cmp
push
sahf
xchg
std
mov
andl
rorl
push
jnp
out
js
gs
iret
loopne
push
push
into
xor
mov
xchg
shrl
and
test
call
data16
jo
std
mov
mov
fwait
mov
std
sub
lock
dec
xor
xchg
loop
mov
cmpsb
inc
sahf
test
std
lds
and
shlb
stos
add
mov
out
rorb
jbe
nop
mov
sti
jo
pop
mov
mov
sub
lcall
sub
jle
es
cmpsl
adc
pop
jno
pushl
data16
inc
pop
xor
xor
das
sbb
mov
insb
sbb
dec
push
mov
adc
jo
push
jmp
shlb
addr16
in
movsb
or
mov
jo
pop
popa
and
pushf
or
push
fdivrs
loopne
aad
inc
push
mov
mov
loop
scas
mov
lret
inc
xchg
xor
testb
dec
fisubs
daa
int3
nop
lret
icebp
cmpsl
arpl
jae
inc
lahf
test
clc
jg
cmp
mov
rcrb
repnz
sbb
addr16
xchg
jne
xor
sub
aam
ret
xchg
cmp
aas
mov
adc
scas
shr
addl
mov
and
int3
gs
xchg
jle
in
inc
imul
cs
ret
sub
daa
lret
xlat
subl
mov
mov
cltd
mov
outsb
jmp
nop
push
lods
hlt
cmpsl
aad
add
scas
cmpsl
cmp
enter
cmp
inc
or
cmpsb
in
lock
jmp
xor
add
xlat
daa
stc
aas
pop
repz
xor
jne
and
ficomps
incb
jge
in
or
and
sub
mov
xchg
xor
cmp
or
int3
cli
leave
jg
cli
in
push
in
daa
inc
pusha
sar
xchg
call
je
xor
xor
lahf
rorl
div
jl
push
cmp
add
mov
rorb
jl
test
jns
loopne
xor
jo
pop
call
inc
pop
clc
rcl
adc
sub
xor
sub
pushf
cmp
loopne
jne
sub
mov
andl
push
xchg
mov
push
movsl
push
mov
add
into
jb
stc
cmp
inc
je
push
inc
sub
cmp
adc
std
xchg
pop
ljmp
test
loop
add
lock
jno
xor
cmpsb
pop
lea
and
cmc
and
and
std
arpl
in
jle
jnp
scas
xor
lcall
std
lcall
sub
inc
stos
ret
jae
mov
ret
movsb
iret
loop
fsubrs
shlb
rcr
nop
fbld
movsl
icebp
mov
stos
outsb
ja
xor
sbb
jo
push
or
inc
sbb
divl
push
pop
cmpb
adc
rcl
inc
mov
mov
mov
push
loopne
mov
cli
fsubl
mov
mov
push
outsl
in
mov
jnp
sub
xchg
push
pop
and
cmc
and
enter
dec
xor
mov
pop
ja
or
imul
mov
mov
adc
shrb
mov
inc
and
inc
sbb
and
sbb
and
cmp
shll
enter
shll
pop
push
and
fidivl
es
pushf
dec
or
aam
xchg
inc
notb
jmp
fbld
mov
int
stos
sub
xchg
cmp
shl
aaa
ja
xchg
je
sub
fld
in
dec
and
pop
jecxz
scas
cltd
pop
jmp
shll
cmc
fs
cli
push
jnp
aaa
jecxz
ss
mov
aad
int
scas
stc
ss
aam
jae
je
pop
loopne
vcvtdq2ps
sbb
not
stos
push
or
aaa
addr16
rep
mov
sub
int3
ds
iret
push
sub
in
je
stc
ja
test
jmp
xor
jp
dec
mov
movsl
cwtl
pop
push
mov
into
pop
xchg
in
and
test
fs
mov
jle
out
jb
mov
push
push
sbb
adc
cmp
cmpsb
out
pushf
add
dec
repnz
cwtl
sbb
femms
mov
sbb
scas
pop
mov
cmp
imul
or
imul
ret
daa
cmpsl
xchg
xorb
aad
mov
mov
lcall
sub
aam
inc
out
test
mov
pop
inc
into
or
fwait
clc
push
sbb
leave
and
push
sub
cli
lret
or
insl
lcall
in
add
lea
les
mov
pop
loop
pop
and
push
dec
mov
jg
xor
add
push
mov
cwtl
aas
jae
xor
subl
cmp
scas
inc
pop
dec
mov
cmc
and
lods
xchg
frstor
outsb
scas
jmp
fsubs
cmpb
sbb
push
sbb
mov
jno
testl
jmp
movsb
jecxz
mov
mov
xor
mov
adc
push
inc
jecxz
lahf
or
mov
test
in
ljmp
xchg
mov
mov
dec
mov
sub
iret
arpl
jl
cli
lea
jp
inc
fistpl
mov
stos
cwtl
mov
ljmp
cmp
inc
pusha
add
and
mov
or
and
or
xchg
repnz
addr16
and
xchg
jp
adc
sub
mov
js
test
shll
xor
push
ds
sub
or
mov
mov
test
lret
pop
or
inc
sub
fcmove
bound
test
lods
lds
xchg
adc
lcall
xchg
pop
outsb
sbb
xor
xchg
cli
push
add
sahf
fmul
clc
subl
daa
loop
scas
popf
les
ds
jo
xchg
stc
es
cltd
cmp
or
pop
imul
mov
mov
in
fs
fwait
gs
push
cmp
add
inc
add
push
jo
cld
jle
call
and
in
mov
popa
pushf
fldenv
xchg
fisttpll
test
sti
outsb
sub
scas
mov
push
lds
in
inc
xchg
pop
scas
aam
pop
aad
imul
insb
and
jne
adc
scas
ss
dec
int3
sub
sub
sub
into
in
mov
lock
sub
test
jecxz
insl
ss
int
xorl
push
frstor
xchg
add
dec
lds
movsb
fs
sub
jmp
mov
xor
ret
fcmovb
inc
ret
cmp
cmc
lcall
xor
jns
jmp
stos
pop
adc
lcall
mov
mov
hlt
pop
pop
mov
pop
pop
jbe
addr16
mov
into
inc
cltd
inc
dec
inc
push
push
incb
mov
xor
push
lods
orb
jl
mov
push
movb
mov
xchg
adc
je
ficomps
ret
cmpl
mov
pop
filds
fildll
push
out
test
add
sub
push
push
dec
pop
insb
insb
repz
addr16
cmp
jno
lea
jg
or
jae
adc
inc
lret
add
stc
mov
popa
cmp
xor
insb
cmp
mov
jg
xor
pop
pop
hlt
push
iret
into
mov
sbb
sbb
lahf
sbb
xor
cmp
shl
outsl
jno
xchg
outsl
push
pop
sti
pop
movsl
insl
mov
hlt
push
push
inc
hlt
push
jmp
adc
cmp
movsl
mov
jmp
jecxz
and
divl
outsl
daa
xchg
popa
lods
mov
sub
mov
pop
mov
dec
orb
gs
mov
inc
dec
and
enter
cli
mov
mov
movsb
inc
pop
inc
and
je
scas
push
sub
test
ds
insl
add
sbb
fbstp
adc
adc
std
dec
and
sub
sbb
cmp
jne
pop
or
es
push
mov
xchg
movsb
jno
int3
std
mov
xchg
jge
gs
push
xor
jmp
pop
arpl
imul
xchg
cmp
pop
imul
pop
shr
mov
mov
popa
jg
in
in
sub
pop
movsl
push
adc
mov
xor
mov
pushf
xchg
or
fimuls
pop
mov
sbb
and
aad
sbb
es
jl
mov
xor
mov
cmc
or
add
dec
int3
pop
or
stos
fucom
or
dec
pop
in
gs
lret
fsubrp
repnz
sbb
jecxz
inc
pop
lods
in
xor
out
jbe
push
lock
rorl
mov
test
std
xchg
popf
sub
ret
jnp
aas
adc
aaa
inc
sti
jae
subl
lcall
das
repnz
fnstsw
xor
ljmp
mov
inc
sub
out
or
inc
jle
xchg
cmp
or
mov
xchg
cmp
sbb
cmp
aad
sub
cmp
cmp
or
inc
cltd
loopne
hlt
std
and
mov
fwait
and
xchg
rorb
jg
xchg
repz
push
roll
fcompl
repnz
push
sbb
into
and
nop
xor
cmpsl
dec
and
sbb
pop
add
mov
or
movl
pop
cmpsb
int
mov
rorl
rorl
cld
fidivs
xor
mov
shl
sbb
fisubl
push
aam
fcoms
xchg
pop
fdivr
fimuls
nop
mov
pusha
pushf
shrl
or
imul
cmp
dec
and
mov
or
aaa
insl
ret
adcl
xchg
fsts
aas
cmp
inc
cwtl
pop
sub
cltd
lahf
dec
mov
mov
out
imul
stc
push
push
mov
add
pop
je
ret
sub
js
sbb
cmc
push
popl
leave
mov
mov
fdivrs
lods
dec
sub
inc
outsl
fidivrs
ds
adc
pop
push
xor
jns
outsl
mov
xor
cmc
mov
rolb
cmp
mov
lods
sbb
lods
jb
ds
or
negb
sbb
lods
mov
aam
insb
or
std
dec
dec
xchg
adc
mov
std
dec
les
jae
sub
popa
or
lret
movsb
and
shll
cmpsb
out
sub
ss
lret
test
cmp
jp
popf
mov
cli
mov
or
adc
mov
imul
fildl
mov
out
sub
clc
sub
lock
in
lcall
add
in
aad
push
int
lret
dec
mov
shlb
in
adc
ljmp
ret
gs
jbe
add
aas
mov
lods
shr
and
jge
das
push
cmp
xchg
fistpl
dec
in
or
xchg
xor
cmpsl
scas
dec
pusha
push
mov
jge
out
dec
pop
rclb
popa
lret
pop
mov
push
pop
mov
jo
das
sbb
push
jnp
nop
xor
xor
aaa
jl
clc
xor
pop
aam
push
jbe
or
mov
or
call
or
jecxz
je
cwtl
aam
cmp
jge
mov
roll
in
adc
sti
movsb
adcb
imul
cltd
mov
stos
cmpsb
mov
mov
push
sbb
push
and
pop
int3
aas
inc
insb
push
pop
adc
out
inc
test
dec
lods
popa
fisubrs
dec
lods
inc
mov
xchg
int
pop
js,pn
sub
sub
cli
ret
les
lods
test
dec
inc
push
cli
clc
lock
lea
rclb
sub
adcb
sbb
sar
pop
pop
mov
dec
jne
mov
mov
and
xchg
sahf
aad
pop
jg
push
sub
iret
loopne
and
jo
ss
pop
pop
icebp
add
push
negb
sub
stos
xchg
jb
dec
inc
pop
adc
int3
push
mov
jno
sbb
xor
fdiv
clc
outsl
sub
pop
mov
gs
mov
ret
imul
ljmp
jnp
aam
adc
jnp
and
iret
add
clc
mov
ljmp
push
and
clc
jo
mov
dec
mov
xlat
push
scas
mov
xor
lret
mov
cli
or
hlt
icebp
mov
btr
out
out
cmp
lods
sbb
push
jo
pop
inc
adc
pop
push
xchg
mov
xchg
sub
ja
fstpt
dec
fdivrs
popa
cwtl
sti
jno
sbb
add
sbb
icebp
sub
mov
pop
lret
testb
in
jl
pushf
enter
aas
mov
mov
cmpl
ficoms
imul
and
fidivrs
sbb
mov
lods
xchg
jae
lock
out
dec
popa
pusha
sti
aaa
pushf
je
adc
dec
jmp
aas
sub
outsb
fadd
cmpsb
repz
pop
clc
fsubrl
cmpsl
jnp
pushf
mov
inc
inc
xor
sbb
fsubs
mov
mov
sub
aad
rclb
push
and
xchg
dec
lahf
and
sub
int3
sub
out
fisttps
xchg
push
mov
xor
dec
xor
cwtl
loopne
adc
lcall
repnz
cld
push
enter
pop
insl
aam
pop
push
std
popf
and
scas
xchg
add
jbe
in
aaa
xchg
std
mov
inc
dec
es
push
ljmp
inc
cltd
sub
push
jo
cmc
stos
xchg
cmpsb
cli
and
cmp
mov
sbb
push
sbb
mov
adc
cmp
loop
xchg
out
jno
inc
into
pushf
mov
sub
jg
movsl
nop
and
mov
es
ret
loope
aad
icebp
mov
inc
inc
mov
fldenv
leave
frstor
sub
insl
pop
hlt
xchg
test
add
inc
cmc
pop
cwtl
sarb
mov
cmp
loopne
dec
fdivs
dec
inc
mov
je
jns
jbe
insl
mov
outsl
out
pop
cmp
inc
leave
test
in
sub
or
inc
repz
scas
ret
mov
fnstcw
ucomiss
push
scas
stc
in
jno
daa
push
jge
ljmp
jnp
add
add
cmp
push
test
push
jnp
lods
mov
popa
sub
or
stos
ret
mov
mov
sbb
mov
pusha
push
lahf
xor
xor
ss
out
push
jb
xchg
xlat
xchg
mov
inc
push
ss
inc
imul
pop
mov
mov
push
out
lret
jnp
push
imul
lods
jg
lcall
sahf
mov
cmp
xor
mov
mov
out
cmc
dec
stos
je
mov
xchg
inc
ucomiss
inc
add
cmp
loopne
out
xchg
mov
mov
mov
aas
dec
loop
lods
lock
sbb
and
fidivrl
sub
inc
xchg
imul
dec
cmp
in
aad
mov
xor
dec
dec
pop
pop
lds
cs
add
int
jnp
mov
mov
cld
xchg
cwtl
repnz
stos
sbbb
data16
stos
cmp
rorl
mov
mov
push
out
shl
rorl
fwait
stos
push
in
mov
push
push
mov
shll
lret
out
insl
lods
cmp
mov
popa
mov
add
sbb
aad
xchg
xchg
cmp
pop
loop
fisubl
daa
ficoms
push
xchg
cmp
inc
fs
je
inc
icebp
add
lods
dec
loop
pop
sbb
jg,pt
sti
xor
dec
mov
sub
popa
sub
cmpl
shrl
xchg
mov
and
mov
inc
mov
cmp
bound
sbb
jbe
inc
xchg
mov
jmp
mov
ss
mov
test
or
notb
or
inc
lods
imul
inc
les
xchg
aam
js
out
mov
loope
xchg
loopne
cmpl
pushf
or
xor
test
jnp
xor
inc
inc
inc
mov
sub
pop
adc
pushf
mov
sahf
adc
xchg
stos
lods
pop
adc
mov
push
scas
lcall
insb
inc
test
add
cmpsl
out
lds
xorl
add
clc
mov
neg
xor
stos
inc
ja
xchg
push
mov
cmp
imul
daa
loop,pn
adc
adc
ja
mov
sbb
mov
pop
mov
xor
add
xchg
lahf
imul
loopne
fisubs
xchg
mov
push
sub
lock
movb
mov
vpshufhw
mov
fisttps
adc
repz
or
sbb
mov
dec
and
orb
test
push
imul
mov
mov
jge
addl
sub
test
adc
adc
or
sete
sub
in
scas
xor
inc
jne
xchg
pop
mov
ffree
add
outsb
rclb
rcl
jp
pop
movsl
fucom
aam
ss
into
push
xchg
mov
mov
insl
fildll
xchg
jne
roll
movl
jp
mov
sub
loopne
out
jo
js
xchg
daa
push
ljmp
iret
pop
adc
sbb
lods
out
sbb
sub
push
dec
sar
lods
scas
push
das
xlat
and
jecxz
test
and
pop
lods
xlat
inc
out
mov
mov
cmp
aam
dec
data16
xchg
inc
bound
cmp
dec
repz
push
jle
pop
neg
push
xchg
outsl
popf
adc
or
push
add
xchg
mov
fwait
xchg
push
in
loope
sahf
xorl
data16
push
iret
adc
mov
clc
lods
sbb
or
int3
push
push
push
xlat
fldt
or
rcrl
sub
jae
push
push
lock
es
ficompl
int
mov
aas
lcall
dec
push
movsl
push
mov
fistpl
das
jnp
lcall
add
dec
sbbb
lods
jp
pop
mov
inc
in
icebp
shl
mov
mov
and
lcall
jo
lahf
fistl
xchg
outsl
or
push
pavgw
shl
jb
aas
lahf
mov
fists
in
jo
aad
or
test
mov
out
sbbb
daa
lcall
iret
int
mov
je
ljmp
xchg
shlb
lahf
mov
push
inc
call
adc
push
jl
in
xchg
sub
pop
lock
cmpsl
in
pop
and
xchg
sbb
nop
repnz
popf
ret
xor
xlat
adc
and
mov
cmp
mov
pop
mov
mov
fcoml
push
jmp
loopne
inc
mov
mov
clc
inc
test
repnz
push
pop
sbb
push
sbb
xor
dec
sub
imulb
stos
xor
addb
mov
jle
mov
add
jns
fwait
add
dec
addr16
and
dec
cli
mov
lea
cmp
inc
inc
inc
lret
dec
cmpsl
cmp
popaw
xor
push
add
or
aad
jp
shlb
mov
push
data16
jo
xor
jno
mov
arpl
pop
inc
mov
das
jg
jg
mov
rcl
pop
dec
dec
in
sbb
sarl
rcl
dec
jmp
cmp
incw
nop
scas
and
jmp
sbb
jmp
in
repz
mov
push
push
push
jecxz
fwait
xchg
loopne
sub
mov
dec
data16
outsb
adc
jno
hlt
sub
data16
push
or
les
add
fsubrs
cs
lret
insb
int3
xor
lret
sti
inc
xchg
mov
loopne
mov
rcr
cmp
popa
xchg
mov
std
aas
ds
xchg
sbb
jg
dec
lds
xor
cmpsb
lret
sub
jno
push
push
cli
rcr
stos
xchg
int
jmp
cmp
data16
jns
scas
nop
push
mov
inc
je
mov
sbb
adcl
inc
sub
loop
sub
and
jl
push
test
mov
jle
cmpsl
xor
push
mov
in
mov
mov
test
test
mov
test
xor
mov
addr16
bound
stos
loopne
mov
lret
xchg
inc
clc
test
jmp
xchg
inc
js
xchg
lods
dec
hlt
mov
jne
xchg
xor
and
loopne
lret
repz
mov
xchg
sub
cld
sub
push
pop
push
fs
mov
int3
inc
loopne
adcb
movsb
popa
scas
pop
add
sahf
addr16
int3
and
fwait
inc
lret
cmpsb
fucomp
add
and
je
popa
inc
inc
xchg
push
mov
pop
push
jmp
mov
or
sbb
test
shll
pop
sub
jae
adc
scas
popf
inc
sbb
lds
mov
fcmovb
dec
out
fnstcw
pop
stos
lods
xor
roll
push
pop
mov
and
jmp
and
jmp
sti
in
les
out
push
cs
mov
and
mov
sbb
jge
lods
xchg
inc
mov
popf
push
sbbl
pushf
lods
iret
scas
repnz
xchg
imul
fcmovnb
pop
and
lds
push
lock
fmull
mov
xchg
les
mov
lret
mov
lret
movsb
popa
jae
aaa
mov
sub
stos
inc
scas
jmp
cmp
sti
rcll
xchg
scas
rcl
jmp
pushf
mov
sub
dec
stos
mov
js
popf
lods
mov
scas
jns
loopne
push
rclb
lods
xchg
lods
mov
arpl
popa
loope
orb
stos
sub
mov
nop
jmp
xchg
rep
mov
sub
rorb
cmp
stos
loope
cmp
add
xchg
and
insl
xchg
loope
jae
clc
add
mov
dec
xchg
mov
repz
mov
sbb
push
or
js
movsb
dec
ret
mov
stos
fs
nop
pop
pop
aam
cltd
shll
fmul
and
sbb
popf
cmp
pop
push
dec
gs
notb
or
fdivr
mov
dec
orb
mov
std
xchg
aad
pop
rcr
push
imul
lcall
sub
aad
add
jecxz
int3
push
sbb
cmp
mov
fisttps
xchg
cmpl
fistpll
lcall
decb
fcomp
rclb
pop
into
cmp
mov
bswap
sarb
out
fnstcw
xchg
xor
lret
in
adc
mov
adc
jnp
ja
mov
pop
xchg
cmp
rcrb
aas
sub
and
xchg
int3
push
sub
shl
jno
inc
jecxz
xchg
pop
mov
sbb
and
inc
rolb
xchg
sub
jg
mov
mov
cmpb
inc
aas
push
jle
dec
add
outsl
mov
jae,pt
xor
xor
aas
dec
je
scas
popa
xor
mov
push
jb
mov
out
rsqrtps
cld
ret
jae
xor
cmp
fldcw
das
add
or
pop
mov
add
std
adc
or
dec
pushf
nop
jmp
xor
jo
cmp
aad
int
pop
das
in
sbb
imul
add
cwtl
add
test
call
inc
out
inc
pop
xchg
cltd
in
pop
ret
mov
dec
jmp
pusha
sbb
push
cmp
fadd
mov
sahf
xchg
je
pop
push
sbb
sti
xor
outsb
push
add
push
lcall
lcall
cld
lret
stos
cltd
imul
sbb
jno
data16
push
jp
ss
pusha
ds
in
fstpt
jmp
cmp
fisttpl
mov
sub
add
lret
movsb
stos
imul
mov
sbb
xchg
dec
enter
shlb
sbb
sbb
and
push
fcmovne
mov
lret
sub
push
dec
lods
jns
js
dec
pushf
xor
jecxz
cmp
mov
xor
xor
fldt
icebp
mov
jb
ljmp
aaa
jecxz
pushf
aaa
jmp
mov
out
mov
sbb
in
mov
mov
test
xchg
nop
pop
shrl
xor
jne
pop
cmpsb
xor
dec
push
jmp
inc
push
cmp
pop
aam
push
xor
mov
mov
shrb
xchg
div
mov
xchg
push
sub
lahf
mov
mov
imul
adc
push
enter
adc
sbbb
fnstcw
or
stos
ret
shll
jle
out
test
jne
push
pop
lea
movsl
scas
cltd
xlat
cs
dec
xchg
cmp
addl
leave
push
stos
aad
mov
aad
lods
add
je
jb
jg
jl
jne
bswap
push
shlb
dec
xor
mov
sub
sub
xor
xchg
addb
adc
es
pop
ret
mov
cmp
adc
andb
sub
inc
loope
push
mov
cltd
pop
arpl
or
gs
out
mov
mov
in
shl
fwait
cmp
pop
mov
fbstp
jne
fldenv
hlt
pop
loopne
loope
verr
je
adc
push
shrl
sbb
sub
pop
pop
cmp
mov
mov
inc
mov
mov
pop
stc
outsl
add
xchg
into
mov
rcrb
sbb
cmpsl
into
mov
stos
pop
fidivrs
sbb
rol
jl
dec
sub
add
out
loopne
loop
cmp
push
cmp
adc
pop
dec
adc
gs
repnz
loop
cmp
mov
mov
repnz
sbb
imul
aaa
and
xchg
lods
loope
aam
andl
lods
mov
int
xchg
lea
jmp
negl
mov
pop
mov
sbb
gs
out
dec
cs
push
or
sub
cmp
jmp
and
mov
stc
mov
and
mov
out
arpl
cwtl
mov
mov
mov
cwtl
cmpsl
fld
gs
add
push
lds
lock
orb
and
cmpsl
mov
test
xor
out
or
lds
xlat
movsb
xlat
pop
pop
xchg
adc
dec
jae
mov
test
out
pop
gs
push
or
aaa
js
xor
mov
mov
xchg
ds
jge
jae
mov
adc
jno
mov
es
hlt
enter
sbb
cmpsl
jg
sbb
add
test
inc
pop
out
mov
pop
in
pop
lock
and
xchg
or
aad
xor
inc
add
and
push
or
pop
loopne
xchg
jbe
clc
aam
ljmp
or
clc
jmp
jmp
mov
inc
add
add
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
ficoml
test
dec
push
push
sub
push
push
mov
fistps
xchg
lahf
xlat
pop
in
orl
shll
cmp
mov
mull
push
roll
or
mov
mov
pop
lahf
adc
lret
test
mov
lret
cmpsb
ficompl
xchg
pop
out
inc
mov
je
cltd
das
xor
repz
shll
dec
popl
ja
sahf
pop
pusha
nop
mov
xchg
jg
jns
cmp
cmp
mov
sbb
mov
pop
sbb
xchg
les
in
pop
sahf
cmc
fmull
loopne
stos
cltd
movsb
cmp
mov
into
xor
mov
aam
add
cmp
lods
add
aad
mov
lea
cmp
cmpsb
in
adc
jne
jne
adc
shrl
adc
jnp
imul
sbb
jl
out
sub
mov
movsl
jle
ja
inc
xchg
lret
insb
pop
inc
xor
mov
push
lods
xor
add
and
mov
inc
lahf
mov
pop
mov
imul
loopne
cmc
mov
je
xorl
loope
push
add
xor
mov
fs
xorb
jg
sbb
frstor
in
ds
scas
push
fadds
xchg
cld
in
ret
out
nop
dec
pop
cmp
mov
lea
subl
dec
mov
pop
jb
mov
mov
iret
dec
xor
verw
in
xor
outsb
cltd
imul
fcoms
or
mov
sub
sbb
les
aas
push
mov
insl
mov
xor
es
fsubrl
xor
or
or
xor
pop
aad
jg
adc
push
xor
and
jne
push
scas
jno
lds
xchg
push
pop
imul
mov
inc
js
dec
cmpl
cmp
pop
les
xchg
adc
gs
movsb
or
mov
shll
push
ret
inc
pusha
in
inc
lret
mov
jmp
arpl
push
fdivl
pop
mov
loope
aas
or
sbb
dec
sbb
mov
xor
add
push
inc
jbe
fistpll
cmpsl
loope
daa
mov
push
cmp
xchg
xor
cs
icebp
mov
add
mov
fstps
lock
cmp
scas
ja
xorl
movsb
jg
adc
inc
sub
fucomi
pop
cwtl
and
jg
lods
dec
insb
das
inc
lods
add
cmpsl
imul
xor
jg
push
test
in
dec
lret
bound
inc
fstpl
jl
xchg
mov
addl
ret
aas
xor
cmp
shll
sbb
mov
sbb
imul
scas
push
out
inc
or
xchg
inc
cli
or
and
std
add
push
orl
mov
aam
jbe
mov
pop
xchg
jg
mov
inc
icebp
xor
shll
and
insb
mov
sub
jbe
fiadds
in
xchg
cwtl
add
clc
xor
push
ss
clc
jo
or
inc
and
or
inc
mov
pop
movsb
inc
call
pop
aaa
rcr
xorl
mov
sub
cmp
arpl
push
and
xlat
cmp
xchg
fst
mov
sbb
jne
testl
shll
adc
add
jecxz
loopne
les
imull
jl
test
push
lods
inc
subb
mov
rorl
push
lea
sahf
mov
rorb
mov
shlb
arpl
jbe
jnp
rcrb
cmpb
fwait
dec
lret
dec
add
pop
xlat
arpl
lahf
filds
cwtl
dec
addr16
xor
mul
cmp
pop
add
cmp
lods
push
inc
xchg
and
and
push
data16
ja
cmp
inc
dec
and
adc
daa
inc
enter
lock
lret
loope
movsl
loop
arpl
scas
ret
not
and
ds
testb
das
pop
pop
dec
push
gs
push
andl
pop
in
cmc
mov
inc
pop
movsl
mov
mov
cmp
hlt
mov
fstl
movsb
mov
push
mov
add
fisubl
xchg
sub
cmpsb
mov
inc
lahf
inc
testl
out
pop
xchg
pop
xchg
outsb
mov
pop
mov
aad
mov
inc
mov
dec
dec
mov
daa
lcall
xor
adc
fisttps
shlb
lods
push
jb
sbb
pop
pushf
sub
mov
or
push
pop
mov
cmp
out
xor
sbb
clc
aas
std
sub
push
pop
push
pop
cmpsl
lods
inc
pop
cmp
clc
mov
loope
cltd
adc
cmp
jae
outsb
mov
sbb
ds
cmpneqps
decl
and
imull
pop
inc
sub
aas
xor
dec
or
push
outsl
sub
ret
fldl
jno
call
in
popa
dec
xchg
rorl
sbb
jecxz
mov
mov
sub
mov
aas
dec
imul
popf
adc
mov
in
in
cmp
jne
xor
mov
fcmovbe
dec
sub
jg
gs
xchg
mov
sub
in
leave
cwtl
test
xchg
les
je
xorb
aad
arpl
jmp
mov
cmpl
out
xchg
minps
or
adc
loope
imul
jo
movsl
dec
cli
xor
push
and
xor
into
add
or
inc
std
lcall
nop
lret
pop
sub
aaa
mov
ds
lods
mov
movsb
add
cmp
jmp
cli
imul
xchg
jo
xchg
lldt
jecxz
or
negl
rcr
int
mov
pop
mov
sub
je
into
ret
adc
dec
jns
add
mov
sahf
aad
pop
jnp
sarb
mov
out
pop
mov
mov
xlat
xchg
stos
jnp
lock
iret
loop
jp
adc
ljmp
fdivr
sub
cmp
jne
scas
mov
mov
xlat
daa
inc
cmp
cmp
and
mov
cmp
mov
pusha
dec
dec
into
sbb
popf
mov
inc
mov
insl
sti
arpl
pop
xchg
jmp
out
clc
add
inc
in
dec
push
dec
cmp
aas
cmpsl
fdivrs
hlt
or
push
xchg
clc
push
cmc
cmp
xchg
adc
scas
ficompl
out
jae
fstpt
loop
repz
cld
out
jg
push
rol
fsubrs
call
inc
stos
pop
sarl
fiadds
and
loope
roll
popf
iret
sahf
cmpsl
negl
push
mov
xchg
popf
fisubrl
xchg
in
push
hlt
adc
fildll
sti
cmp
xorb
mov
inc
lea
loopne
adc
into
aaa
mov
inc
mov
xchg
mov
icebp
in
loopne
push
pop
je
cld
std
mov
mov
dec
out
in
push
cmp
test
mov
xchg
pop
fs
xchg
push
pop
negb
sbb
test
dec
loopne
sti
and
into
inc
adc
cmpsb
xchg
into
ja
popf
in
or
fildl
xchg
mov
enter
dec
js
jg
stc
testl
xchg
pop
in
sbb
enter
in
out
inc
bound
lahf
jne
lods
xor
add
or
lret
push
pop
test
mov
stos
or
push
mov
adc
aaa
mov
lcall
xor
divb
rcrb
jmp
inc
xchg
and
inc
jno
test
test
push
loope
xchg
adc
xchg
mov
stc
sbb
arpl
sbb
js
mov
popf
gs
ret
pop
test
dec
fnstcw
push
test
push
xchg
dec
gs
fstps
xor
jl
int
inc
stos
jns
adc
lret
xchg
js
jbe
dec
ja
ret
pop
in
mov
ret
imul
jl
push
add
loope
mov
push
stos
addl
cmpsl
addr16
loop
outsl
sbb
push
jge
or
xchg
test
ja
cs
adc
imul
mov
testl
jecxz
sahf
imul
dec
pop
mov
lret
xor
mov
jl
sub
das
dec
cltd
mov
fdiv
fistps
push
insb
or
adc
mov
xlat
repz
lds
xchg
push
mov
subb
test
cmc
jo
adc
out
or
xchg
xchg
rcrb
je
hlt
add
lods
cmp
loope
loopne
stos
int
xor
xchg
mov
xor
in
xchg
iret
cmpsb
movsl
xor
dec
test
sub
jmp
pop
jg
xchg
adc
iret
sbb
ret
cmc
outsl
xchg
test
test
lahf
int
xor
out
imul
jb
loope
mov
imul
cmp
inc
daa
xchg
insb
sub
dec
shrb
int
or
add
aas
or
cs
mov
or
mov
nop
daa
pop
adc
je
das
or
mov
sbb
aad
adcb
add
out
shll
aad
lds
loop
add
insb
arpl
aam
bnd
les
pop
dec
mov
shrl
fs
and
les
xchg
jnp
xor
adc
inc
dec
mov
rclb
dec
inc
or
cs
iret
repz
lahf
cwtl
inc
fadds
imul
daa
and
ljmp
popa
push
insl
mov
mov
sub
ret
mov
ja
aam
inc
mov
stos
sarb
faddp
xchg
jae
icebp
push
enter
in
inc
lcall
inc
hlt
dec
sub
arpl
cmpsb
test
in
xlat
pusha
sbb
inc
adcb
js
add
mov
sbb
mov
xor
xor
je
inc
xor
scas
and
sub
fwait
insb
xor
cmp
rorb
inc
mov
ret
das
ja
jg
and
ljmp
aaa
push
mov
xchg
in
jge
mov
aad
imul
jmp
sub
xchg
push
inc
dec
cwtl
clc
and
xor
ds
dec
pop
lahf
mov
mov
lcall
lock
lret
lcall
sbb
inc
roll
pop
in
xor
add
inc
jg
mov
sbb
xlat
cmpsl
mov
fcompl
xor
fs
push
mov
iret
jmp
cli
insb
mov
pop
sbb
cmpl
mov
pop
ljmp
mov
mov
jmp
repz
stos
xchg
test
mov
fiaddl
inc
xlat
les
int
test
xlat
sub
mov
ficompl
jb
mov
int3
xchg
push
adc
sbb
push
pop
xchg
dec
push
pop
cli
mov
imul
dec
ds
sbb
loope
jo
add
lock
arpl
or
mov
jo
xor
lret
xor
test
int
adcb
in
xchg
adc
push
test
test
sbb
sub
or
pop
fsubrp
test
sbb
and
mov
popf
inc
sahf
pop
out
push
cmp
push
mov
mov
pop
pop
xorb
movsl
scas
outsb
pop
shrb
fadd
rcrb
ret
xor
mov
sub
and
lods
movsl
mov
nop
mov
push
int3
jnp
aaa
iret
mov
outsb
cmp
or
add
pusha
jmp
sub
pusha
xchg
pop
fimuls
pop
push
shlb
sbb
lods
push
or
lods
rorb
fmuls
loope
sub
loope
lds
lfs
ret
and
pop
inc
popf
and
mov
int
mov
inc
fs
push
shlb
jae
jge
dec
jl
adc
repnz
aad
pop
pop
add
sahf
add
aad
xor
js
fwait
xchg
test
mov
mov
ror
adcl
call
adc
enter
xor
pop
mov
pop
push
pop
or
mov
pop
jg
aaa
aad
jecxz
inc
pushf
and
pushf
push
adc
mov
cmp
jge
mov
sbb
xlat
addr16
sbb
std
scas
cmp
push
push
mov
lods
outsb
imul
jmp
pop
aam
push
pop
pop
pop
insb
push
xchg
and
push
scas
sub
rcr
mov
push
enter
into
jns
push
icebp
orb
es
dec
add
mov
xchg
or
xchg
mov
add
lahf
xor
arpl
adc
scas
jg
mov
cmp
cmp
outsl
clc
lahf
in
test
je
xor
out
add
adc
adc
psubsw
mov
mov
dec
sbb
pushf
xchg
dec
les
stos
stos
add
pop
inc
fcoms
idivb
in
in
lods
push
lock
sub
leave
test
fisubl
mov
cli
push
sub
incb
xlat
divl
cli
movsb
dec
and
and
dec
xlat
imul
cmpsl
enter
xchg
inc
cmp
inc
pop
test
inc
and
cmc
xor
fs
faddl
pushf
sbb
icebp
mov
xlat
in
out
and
xchg
shlw
insl
shll
cmpsb
insl
mov
jle
xchg
out
xchg
sub
jp
sub
sub
adc
or
pop
xchg
push
ss
jno
adc
adc
and
jbe
lahf
jne
add
jl
into
movsl
pop
and
scas
testb
scas
xorl
icebp
je
push
orl
mov
add
and
cwtl
in
mov
test
xchg
outsl
adc
mov
fsts
sub
scas
jg
add
sub
aaa
jbe
test
hlt
push
insl
aam
mov
jecxz
aas
enter
leave
jecxz
cmp
mov
mov
mov
push
push
jae
pop
jno
sub
add
jae
lcall
fisttpl
jecxz
ljmp
popa
mov
fidivl
out
pop
push
mov
mov
je
pop
lea
adcl
or
ror
adc
pop
and
aad
cmp
inc
and
sti
fadds
xchg
les
imul
outsl
ret
mov
dec
sarl
arpl
jne
jmp
mov
push
shl
add
into
cmpl
or
xor
es
adc
ljmp
xor
and
in
test
xor
adc
cmpsl
jns
jmp
stc
loopne
pushf
jae
cwtl
adc
sti
movsl
enter
pop
shll
fwait
adc
cwtl
aam
push
lahf
and
jo
int
mov
adc
push
clc
inc
lea
stos
mov
lock
and
adc
xchg
rcl
and
ss
xchg
xor
xchg
mov
lock
sbbb
add
movsl
mov
fdivrs
push
cmp
notb
repz
push
jmp
cwtl
mov
mov
push
icebp
push
int
dec
sbb
and
outsl
pop
and
push
mov
and
mov
jle
mov
push
pop
das
and
call
add
loop
mov
pop
andb
cmpsl
sahf
ja
add
aas
xor
or
dec
push
sub
lea
loope
cwtl
fwait
xor
test
mov
repz
jmp
mov
xchg
adc
popf
push
mov
ds
fcmovb
popa
push
cmpsb
loopne
or
push
push
cmp
sbb
pop
dec
pop
or
sar
in
mov
add
mov
xor
lcall
cwtl
outsl
or
push
sarb
push
popf
xorb
sti
cmp
and
cmp
mov
jge
addb
push
loop
pushf
jo
pop
jmp
sub
jo
inc
cmp
subps
gs
clc
ljmp
repnz
xchg
ret
popa
cmp
test
icebp
add
xor
sub
std
pop
dec
xchg
rol
lods
mov
inc
out
movsl
mov
and
mov
inc
pop
fwait
movsl
push
inc
shlb
lock
mov
xchg
pop
cli
mov
loope
inc
fiaddl
fildl
mov
popf
and
fisttpll
jns
mov
loop
test
inc
adc
stos
mov
pusha
xchg
sbb
mov
mov
fnsave
mov
push
xorb
mov
xchg
test
and
test
bound
dec
insl
fisubs
dec
cmp
sub
sti
sub
dec
pop
mov
adc
test
mov
add
addb
sbb
xor
inc
and
cmp
lret
xchg
popa
and
pop
mov
filds
push
fdivrl
aaa
xchg
push
out
adc
lea
pushf
ljmp
pop
scas
jnp
out
fldlg2
lods
mov
lcall
pushf
cs
xchg
insb
dec
mov
ss
push
dec
mov
xchg
rcrl
pushf
mov
fdivl
leave
sti
iret
jge
lds
fldcw
jne
fsubl
popa
int3
push
daa
dec
test
or
pop
int
cltd
or
xchg
pop
dec
ret
mov
pusha
mov
aad
jl
xchg
outsb
movsb
enter
fdiv
mov
imul
dec
adc
je
cltd
ss
inc
mov
dec
dec
test
rcr
scas
jno
sub
inc
or
sub
mov
push
leave
pop
mov
popa
mov
mov
sub
inc
xchg
sbb
cmp
enter
das
mov
sti
mov
adc
cvtps2pi
and
stos
sbb
movsb
push
int3
enter
and
lret
lret
inc
pop
sub
jbe
mov
je
cwtl
push
xor
test
mov
or
xor
ljmp
or
xchg
jb
and
dec
fxch
mov
into
loop
or
adc
jmp
xor
mov
mov
fistpl
and
xor
mov
and
xor
pop
in
flds
jnp
dec
and
push
adc
mov
rcr
cmpsl
mov
sbb
aam
aam
lahf
sbb
xchg
aam
inc
adc
jle
hlt
mov
repnz
mov
jg
xor
cld
ljmp
add
jns
adc
dec
int
pusha
or
xlat
mov
aad
in
data16
pop
lock
add
push
add
add
xchg
and
ja
dec
nop
and
cmc
mov
dec
mov
mov
add
ja
sub
inc
pop
xchg
in
xchg
xor
mov
sub
mov
mov
outsb
pop
cli
out
lret
mov
adc
test
or
pop
push
push
and
adc
push
mov
mov
cli
inc
frstor
mov
push
mov
outsl
daa
xlat
xchg
add
or
pop
adc
js
dec
scas
call
xchg
push
repnz
pop
enter
in
fsubrp
adc
mov
and
fs
scas
shrb
lahf
notl
add
popa
je
out
mov
ret
out
push
sub
mov
mov
xor
pop
mov
cs
sub
lock
repz
jecxz
cld
and
gs
mov
jne
stc
lods
aas
and
and
into
imul
xor
das
out
pop
popa
xchg
test
mov
dec
adc
sub
les
arpl
insb
add
push
lea
adc
xchg
jbe
push
popa
jne
inc
outsl
xchg
push
push
out
aas
mov
out
fstps
cmp
js
lahf
cmpsl
xchg
add
mov
sub
xlat
and
lds
cmpsl
xlat
loopne
xchg
mov
or
movsl
out
movsl
nop
pop
mov
insl
jge
cmpsl
and
mov
jnp
push
sub
lcall
leave
mov
pusha
lret
lret
mov
sub
shlb
dec
xchg
and
push
out
or
cmp
dec
js
nop
insb
jae
mov
cwtl
divb
mov
inc
nop
out
jno
fucomp
test
inc
xchg
jl
sub
push
cmc
sub
fcmovbe
lods
push
fists
mov
push
sbb
dec
enter
sbb
mov
cltd
jle
scas
inc
jg
jo
out
inc
jg
popf
jbe
jl
mov
cmp
sbb
into
inc
inc
fsubr
sub
jo
adc
mov
push
sub
mov
sti
dec
sub
mov
ret
cmpsb
outsl
popa
movsl
mov
xchg
loop
sbb
out
loop
lock
andl
push
pop
push
mov
aad
pop
loopne
les
cmp
int
fildll
std
inc
pop
cmp
icebp
adc
cmp
mov
adc
std
jge
and
test
mov
cwtl
pop
leave
ret
xchg
dec
js
mov
jle
jge
loopne
pop
cld
in
xchg
jmp
in
push
mov
insb
lds
bound
cmp
out
stos
mov
call
aam
add
mov
inc
jecxz
xlat
sti
add
loop
mov
mov
adc
in
rorl
lretw
ljmp
mov
jns
jbe
sbbl
adc
sarl
lret
scas
push
mov
aam
dec
push
xchg
fidivrl
popf
dec
jo
dec
popa
cltd
test
push
jge
sbb
mov
mov
scas
xor
sub
out
in
xlat
fcmove
repz
add
stos
push
adc
mov
pushf
rcrb
inc
jp
xor
inc
loop
sub
movsb
fnstsw
mov
in
push
fucom
sarl
fisubl
sbb
xor
push
mov
jge
shr
data16
pop
lret
or
inc
xor
outsb
fwait
mov
les
or
lret
in
cmp
fcompl
lock
pop
mov
ror
cmp
inc
add
ja
mov
test
add
arpl
insb
int
daa
and
into
ja
pop
push
pop
lahf
jno
jae
test
outsl
lcall
xor
and
jae
dec
inc
lock
add
pusha
adc
mov
sbb
rol
push
jns
out
fdivp
imul
imul
sbb
xchg
cmp
lods
push
insl
dec
lock
js
sub
outsl
pop
imul
cli
out
leave
adc
mov
and
or
aam
push
xchg
xor
xchg
sahf
jl
lret
ljmp
pop
insb
dec
lock
and
mov
shl
mov
pop
xor
fs
mov
filds
and
ja
or
into
inc
in
stos
xchg
outsl
add
out
jo
ljmp
push
push
pop
rcrl
pop
jne
addb
int
add
sti
test
leave
loope
std
insb
mov
cmp
mov
fstl
and
rcrb
mov
dec
sub
push
enter
mov
cs
pop
xlat
inc
mov
bswap
xor
test
xchg
in
cmp
frstor
sbb
jne
mov
or
and
test
xor
push
sbb
mov
dec
add
in
lea
and
fdecstp
orl
lret
cli
hlt
jne
stc
jo
jb
mov
jns
adc
loope
cltd
xchg
jmp
mov
mov
sub
scas
cmp
lds
scas
push
cmp
dec
jmp
and
aad
adc
dec
sbb
cwtl
xchg
roll
stos
stc
cmp
add
cmpsb
clc
call
aaa
enter
lods
pop
cmp
xor
out
and
push
mov
adc
inc
mov
pop
xchg
push
inc
mov
repnz
mov
aas
mov
mov
inc
fwait
pop
ds
mov
pop
pop
lods
xchg
pop
sbb
scas
or
adc
lods
xchg
pop
movsl
mov
mov
out
cld
out
adc
jle
movsb
ljmp
jmp
dec
leave
xor
add
push
enter
andl
int
out
cmpl
clc
repz
popa
adc
subl
fcoms
mov
push
popf
and
pop
insb
cmp
loop
test
dec
scas
sub
push
sbb
mov
xor
je
pop
imul
insb
xor
add
mov
clc
push
mov
insb
xchg
xchg
pop
ret
call
sub
fistl
mov
scas
and
imul
icebp
jge
mov
lds
addr16
cld
ret
pop
bound
mov
push
mov
add
fwait
push
mov
rolb
dec
cwtl
test
mov
fdivrp
jge
dec
or
push
dec
daa
cmp
addr16
push
add
xchg
ret
dec
xor
sbb
mov
ja
or
imul
dec
jnp
inc
adc
faddl
sti
sub
lods
push
dec
fwait
lmsw
inc
ret
cmp
cmp
or
outsl
bound
add
sti
sqrtps
inc
dec
mov
mov
aad
push
iret
int
or
js
cmc
ds
xchg
and
lahf
subb
in
das
insb
fcompl
es
test
cmp
pop
and
pop
or
sbb
mov
cli
sub
popa
lea
xor
movsb
mov
scas
fdivl
fsubrs
xlat
add
xchg
xchg
adcl
in
add
in
push
sub
xor
push
cmpsl
inc
xlat
push
out
xor
or
aad
xchg
popf
scas
or
aad
int
push
ds
mov
incb
jecxz
mov
jo
divl
jbe
cld
push
inc
or
inc
mov
rcrl
sub
mov
lods
mov
cmpsb
inc
cmp
rorb
cld
inc
cmpsb
js
out
fwait
or
test
xchg
sti
rolb
push
je
sub
mov
mov
fsubrl
lahf
in
notb
pop
xor
lret
mov
dec
cmp
pusha
hlt
sbb
inc
xchg
xchg
push
or
fs
dec
outsb
xchg
jae
ds
std
fwait
pop
sarb
ljmp
out
jg
jge
add
pop
mov
rcll
mov
xor
cmpsb
in
nop
mov
pop
jecxz
pop
iret
cld
pop
cmpsb
sub
pop
xchg
cli
pushf
mov
jno
js
inc
xor
out
daa
mov
call
push
in
int
mov
nop
add
movups
inc
mov
sbbl
andb
mov
push
sbb
std
mov
push
arpl
adc
lret
rcll
pushf
ds
into
jge
add
dec
into
cmp
pop
scas
data16
and
mov
and
inc
jmp
jecxz
sub
xchg
xor
jg
dec
leave
mov
inc
scas
fldcw
cltd
adc
das
outsb
mov
mov
mov
jmp
nop
rorb
in
or
dec
dec
add
lock
in
xlat
rcrl
dec
and
pop
into
shlb
add
shl
sti
xor
jp
jb
push
pusha
pop
shll
jae
lret
loopne
push
lea
aaa
xchg
or
lret
test
fldt
pop
or
addr16
dec
mov
test
ljmp
pop
sbb
sbb
mov
sub
xchg
inc
mov
mov
pusha
push
sub
fnsave
addr16
call
aas
popf
aam
sbb
dec
repnz
test
mov
adc
into
mov
roll
testl
mov
dec
sbbl
pop
pop
ja
fs
inc
xor
dec
test
sub
or
lcall
jmp
push
cmp
or
jae
push
dec
and
rcl
xchg
sbb
dec
add
pop
push
push
and
jno
mov
andl
shl
dec
sbb
push
mov
andl
jbe
andb
aaa
pusha
jbe
pop
push
je
rcl
mov
leave
or
xchg
and
mov
pop
fbstp
xor
adc
xchg
in
insl
inc
fcom
ret
adc
push
mov
or
mov
in
or
or
inc
add
cld
cmovae
lock
inc
add
lods
roll
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
in
cmp
pop
or
push
push
sub
out
adc
xchg
jge
xchg
or
in
sbb
cmp
and
clc
sub
jne
int3
xor
out
lock
loopne
push
add
xor
inc
pop
and
fcomps
push
xchg
jg
es
cmp
xchg
dec
sub
lock
aam
pop
adc
movsb
int3
fsts
push
ja
repnz
les
pop
ja
outsb
dec
shl
xchg
shrl
sbb
fwait
jle
cmc
xor
cmp
xor
add
loop
inc
push
daa
lahf
leave
fcompl
mov
adc
mov
movsb
test
mov
rcll
mov
popf
or
jle
push
lret
ret
stos
stc
loope
mov
lods
cld
and
fnsave
mov
inc
movsl
push
iret
fs
mov
adc
dec
push
mov
ja
fs
or
fsubs
gs
fldcw
leave
scas
fsubrl
dec
push
imul
rorl
mov
push
cmp
dec
mov
iret
sti
shrb
rorl
cmp
push
jmp
cmp
notb
jge
mov
sbb
cmpsl
mov
leave
push
cmpsl
and
cld
out
push
sbb
lods
xor
dec
repnz
cmc
std
xlat
pusha
rcrl
mov
pusha
dec
aas
inc
lods
cmp
nop
into
pop
scas
ja
dec
aaa
inc
sub
and
or
push
mov
adc
xor
aaa
and
lock
jae
sahf
stos
adc
jns
stc
cmpb
scas
and
cmp
jp
leave
cltd
jl
call
imul
sarb
adc
and
add
sti
push
cli
repz
sbb
push
jg
dec
mov
scas
ret
mov
rcll
stc
les
lods
int3
jp
jb
scas
in
stc
ret
dec
shrl
xorl
in
mov
xchg
jno
adc
jnp
inc
lods
cmp
mov
jp
sub
sub
fnstsw
xchg
aam
out
lods
xor
adc
add
adc
ret
stos
sbb
fwait
gs
icebp
pop
cmp
pop
out
cmc
out
jge
sbbb
jb
dec
jo
sub
and
andl
or
push
and
setnp
xchg
fistpl
insb
cwtl
adc
push
lret
xchg
push
xlat
dec
lock
sbb
jg
fs
sbb
push
comiss
inc
fdivp
nop
mov
mov
pop
stos
data16
adc
xchg
adc
scas
sbb
fwait
add
or
imul
aam
push
in
dec
cs
dec
add
xchg
dec
sbb
stos
push
sahf
lock
nop
pop
stos
in
cmp
pxor
fincstp
gs
jecxz
dec
stos
in
cld
clc
iret
cwtl
jae
mov
push
or
mov
mov
pop
mov
and
mov
fwait
adc
out
xor
js
pusha
xchg
jmp
jae
push
pushf
lret
pop
inc
xchg
sbb
mov
push
adc
inc
stc
les
roll
xrelease
cmp
push
clc
inc
int3
inc
cmpsb
jo
das
loope
fsubr
jo
jle
or
mov
icebp
int3
jmp
cmp
mov
cld
dec
pop
ret
repnz
nop
mov
xchg
mov
push
jnp
imul
hlt
inc
pop
dec
or
ss
loope
jmp
call
shr
dec
mov
cmc
mov
xor
inc
pusha
insb
shlb
mov
mov
mov
xlat
xor
out
and
xchg
testl
inc
push
out
fcoms
pop
sub
or
cld
or
cmp
jbe
pushf
add
fldenv
mov
in
lds
xchg
cmp
icebp
and
outsl
icebp
mov
xor
sub
lcall
notl
lahf
jne
loope
adc
fcoml
call
sbb
scas
arpl
stos
jge
enter
add
outsb
js
sti
mov
sti
pop
jmp
dec
dec
adc
xchg
sbb
xor
fisubs
cmp
cmp
push
adc
iret
imul
mov
jnp
cli
orb
mov
pop
push
movsb
test
jnp
cmpsb
dec
and
icebp
xor
mov
adc
insl
add
aas
mov
stos
ss
hlt
dec
mov
out
jl
lock
outsb
mov
pop
fmul
inc
sarb
mov
cltd
push
pop
shrl
rclw
enter
sbb
pop
lock
imul
and
pop
jle
pop
sbb
mov
loope
shlb
xchg
dec
inc
subb
add
dec
inc
jb
pop
out
xchg
push
jae
xor
and
aam
ljmp
mov
jns
lods
bswap
das
dec
lea
aaa
cld
or
push
push
mov
pop
xchg
adc
cmp
lret
sbb
inc
out
sbbb
loopne
jmp
push
jg
fnstenv
jo
xor
xchg
inc
jp
push
jne
pop
popa
sub
mov
cmp
inc
and
inc
cmpsl
inc
inc
ret
mov
push
int
insb
dec
pushf
mov
arpl
mov
enter
sbb
lds
pop
jno
jbe
mov
ror
mov
enter
mov
jo
pop
pop
dec
repz
js
insl
xor
pop
mov
jnp
rcr
add
mov
mov
xor
outsb
mov
sub
adc
lods
pop
test
jge
push
cmp
clc
cmp
test
mov
add
sub
scas
xor
roll
popf
xorb
push
scas
mov
mov
dec
cmp
repnz
dec
xor
test
xor
inc
int
loopne
push
dec
int
in
dec
into
sbb
xchg
mov
mov
je
mov
cmp
inc
hlt
dec
repnz
mov
rcr
lahf
movsl
dec
movsl
mov
scas
sbb
in
dec
jb
std
aam
ja
pop
push
andl
dec
mov
jne
xor
add
je
inc
sarb
push
mov
sbb
mov
sti
mov
cmpsb
lret
cltd
mov
and
fildl
lcall
int
gs
mov
push
adc
incl
dec
stc
mov
ret
pop
jns
test
dec
sub
push
scas
cmpsb
popa
xchg
mov
inc
pop
pop
cld
or
sub
fcmovnb
cmpsb
arpl
push
mov
cltd
xchg
and
and
xorl
sub
in
push
pop
pop
dec
loope
adc
sbb
in
pop
xchg
add
inc
das
mov
enter
scas
imul
push
adc
xor
pop
cmp
jbe
std
cmp
sar
fisubl
cld
aam
lret
mov
scas
mov
adc
leave
fsubrl
jns
adcl
mov
iret
test
rcll
pushf
std
cld
js
pop
inc
cmp
cld
mov
adc
lods
icebp
mov
int
and
cmc
iret
xor
int3
dec
pushf
pop
jno
xor
cs
push
loopne
jno
cmc
jl
pop
mov
xchg
or
adcl
lods
mov
cmp
nop
jmp
jae
aaa
mov
push
aas
repz
mov
add
int
pop
xchg
mov
xlat
or
inc
shlb
sub
out
sub
stos
mov
adcl
jg
jb
cmp
xor
repnz
mov
call
add
arpl
aaa
jle
test
les
test
mov
mov
mov
popa
icebp
inc
ljmp
mov
jbe
pop
divl
pop
cmp
enter
mulb
adc
test
ds
push
jle
pop
ja
daa
xchg
lret
push
cs
inc
add
gs
sub
cmp
lret
icebp
rol
jecxz
and
std
jb
pop
sbb
or
gs
pop
dec
imul
cmp
or
mov
cmpsl
push
mov
mov
and
ss
sbb
lret
cli
or
shll
daa
mov
stc
xchg
xlat
test
je
inc
movsl
aad
xlat
lret
or
inc
push
or
rcrb
jns
sbb
xchg
pop
addr16
outsb
cltd
inc
insb
inc
ja
jle
loope
pslld
outsb
push
cs
rolb
aam
push
or
sahf
push
mov
fiadds
add
mov
ficomps
je
cmp
cmp
and
mov
pop
mov
lea
stos
add
cmp
inc
pop
mov
mul
sbb
loopne
in
jl
arpl
les
push
lahf
adc
loop
inc
xchg
insl
sti
push
xlat
cmc
adc
test
or
adc
leave
in
out
pop
arpl
call
mov
cwtl
outsb
push
outsl
dec
loope
xlat
sbb
inc
rcr
rclb
fldl
vmread
in
mov
popa
cmp
lret
cmpsl
out
popa
mov
lret
jno
xor
es
mov
mov
jbe
inc
jno
jmp
dec
pop
stos
fldl
jb
movsb
out
rorb
leave
xchg
mov
lahf
or
mov
hlt
inc
ljmp
cmp
sub
shlb
dec
fwait
xchg
stc
xor
out
jmp
aam
mov
jle
or
push
stos
push
aad
fs
ljmp
pop
adc
cmp
add
jo
cld
add
and
or
adc
mov
add
mov
sbb
add
out
ss
mov
mov
ljmp
mov
pushf
leave
pop
mov
scas
mov
mov
pop
adc
fprem
imul
andl
in
ljmp
push
cmp
lcall
jg
or
mov
xchg
push
or
mov
xchg
mov
mov
pop
iret
adc
sub
mov
push
mov
in
lock
xchg
ja
xor
mov
sub
add
mov
mov
or
rclb
faddl
arpl
int
incb
or
pop
mov
notl
mov
jne
lret
sbb
jl
aaa
pop
dec
mov
fadd
mov
pusha
sbb
scas
cmp
mov
test
dec
insl
jbe
xor
push
call
sub
sbb
mull
in
mov
aas
ljmp
add
dec
addr16
dec
out
push
fldcw
push
add
mov
dec
mov
lods
lock
movsl
cmpsb
in
das
or
movsl
mov
adc
popf
clc
loopne
aaa
cld
push
sub
adc
scas
mov
mov
imul
sahf
imul
add
lret
aaa
cli
imul
push
xchg
mov
mov
stos
loopne
adc
cmp
out
rclb
outsb
jae
stos
pusha
push
inc
adc
lret
push
xchg
push
rcrb
jg
fstl
mov
dec
mov
shlb
xor
pop
shlb
jno
icebp
xchg
inc
xchg
xor
call
ficomps
push
test
lods
push
add
mov
xchg
fstl
xchg
or
adcl
lock
sub
clc
jo
scas
mov
negb
aaa
cld
pop
adc
xchg
les
adc
pop
int
mov
mov
scas
stc
xlat
out
fldt
loop
xchg
call
shll
pop
dec
mov
xchg
into
imul
sbb
lret
ret
js
imul
std
lods
mov
push
hlt
pop
jne
mov
push
imul
xchg
arpl
in
movsb
jb
xor
push
in
mov
lock
push
pusha
fdiv
push
push
jmp
xor
pop
iret
inc
xchg
xor
add
pushf
ljmp
inc
fstpl
xor
das
push
hlt
inc
lret
or
jae
jne
sti
test
sahf
sbb
xchg
loopne
adc
and
ss
shrl
shrb
outsl
in
and
adc
pop
subb
mov
repz
add
shlb
cmp
pop
mov
inc
shlb
or
movsb
xchg
das
jae
loop
pop
pop
pushf
ret
push
adc
outsl
stc
hlt
add
sbb
and
rorb
add
push
adc
sbb
mov
lcall
sbbl
push
popf
sbb
in
nop
pop
mov
or
sbb
lcall
rcrl
xchg
push
repz
and
int
jns
sub
js
xchg
std
inc
mov
int
mov
aam
cs
xchg
jl
pushf
movsb
push
cmp
mov
and
and
sbb
mov
pop
outsl
ljmp
mov
imull
mov
adc
sarb
pop
adc
pusha
mov
in
sbb
out
jecxz
adc
cli
dec
inc
fcoml
mov
sub
xlat
cmp
mov
call
rcll
cmp
mov
in
aam
mov
xor
clc
xchg
xchg
imul
sub
dec
push
fs
mov
sbb
loopne
mov
cmp
inc
in
jecxz
dec
xchg
dec
je
sbb
es
pop
daa
mov
cwtl
mov
push
ret
cmp
int3
xor
jmp
add
mov
cmc
mov
nop
mov
jge
gs
inc
mov
aas
rolb
mov
and
inc
repz
jmp
movsl
jbe
jnp
mov
push
and
xor
cwtl
push
lods
dec
sbb
daa
or
push
js
sub
xor
and
add
xchg
fidivrl
loope
cmp
push
movsl
repnz
dec
and
add
test
push
xor
inc
cltd
mov
into
icebp
push
inc
pusha
mov
inc
testb
fcoms
ficoml
xchg
jbe
test
insb
mov
mov
ret
push
pop
mov
imul
xor
outsl
movsb
sbbb
and
orl
jno
sub
dec
cmp
gs
add
je
cmp
mov
mov
or
cmp
cmp
cmp
xchg
aam
in
data16
daa
lds
scas
rclb
pushf
movsl
mov
xchg
flds
int
dec
out
pop
mov
lret
mov
pop
aad
movsb
mov
push
cmovnp
dec
push
xchg
jnp
inc
pop
testl
in
ret
inc
xor
loop
ds
xchg
test
xor
test
hlt
ss
jbe
push
gs
movsb
or
sub
inc
popa
mov
jnp
mov
addl
scas
push
pop
cltd
shll
out
or
bound
out
les
ja
adc
mov
sbb
ds
pop
lret
inc
push
cli
insb
xor
mov
nop
ds
mov
loope
dec
fisttpl
mov
imul
mov
ret
pop
movsl
mov
sbb
mulb
mov
dec
sti
int3
xchg
fwait
inc
fwait
mov
lahf
cltd
inc
imul
xchg
loopne
add
dec
pop
jl
mov
mov
adc
and
stc
push
ljmp
jno
arpl
xchg
nop
inc
xor
int
jmp
cmp
lret
adc
shll
push
mov
cmc
movsb
cmc
mov
stos
sub
and
leave
sahf
addr16
dec
mov
sarl
dec
xchg
cmc
sbb
xchg
ljmp
or
dec
push
leave
sub
xor
xchg
mov
lds
shrl
or
out
repnz
stos
mov
jmp
cltd
adc
popa
data16
popf
xor
mov
test
cmp
cli
cmp
mov
inc
adc
and
clc
and
and
mov
imul
push
imul
mov
add
cmp
fmuls
mov
cmpsl
stos
cwtl
mov
ss
fdivs
adc
sub
xor
mov
sub
aam
std
mov
or
std
pop
jle
and
push
jl
fildll
mov
xchg
pop
int
adc
mov
mov
movsl
push
mov
add
mov
or
add
js
cwtl
push
sbb
cli
sbb
mov
lods
push
scas
mov
in
and
xchg
mov
sub
outsl
sbb
callw
lea
cmpsl
mov
fiaddl
dec
dec
jnp
pop
xor
push
add
imul
xchg
lret
lds
push
cmpsw
inc
push
xchg
push
mov
jns
and
nop
xchg
xor
sbb
insb
scas
sti
cs
mov
or
or
inc
pop
xchg
out
mov
mov
xor
aad
jbe
push
enter
xor
in
sub
or
jge
cmp
pop
int
pop
mov
sahf
adc
dec
xchg
pop
adc
cwtl
adc
andb
fstps
jno
ret
jle
insl
jns
push
enter
pusha
sub
mov
andl
dec
scas
cld
jae
insl
push
dec
pop
inc
or
xchg
iret
aas
mov
fsubl
lahf
pop
popf
not
jnp
mov
xor
push
xchg
or
jl
dec
ja
inc
push
jno
cld
push
mov
mov
nop
fimuls
loop
lahf
sbb
mov
cwtl
xor
loopne
push
leave
xor
inc
and
pop
lods
jne
push
xor
jo
cmpsl
movb
pop
xorb
or
shlb
in
lock
call
add
ss
cwtl
pusha
aaa
jo
in
scas
push
test
add
test
pop
xor
in
inc
cmp
cmpsl
movsl
scas
imul
mov
adc
mov
pop
or
or
sbb
lock
aam
dec
flds
ret
mov
les
sbb
adc
xchg
jp
int
aad
mov
push
shl
sub
pushf
ljmp
lock
xchg
sbb
incb
arpl
and
rclb
adc
stc
in
fwait
fnstcw
lea
xchg
xchg
int
fs
ret
sub
jp
cwtl
push
pop
scas
fdivs
int3
add
and
ret
imul
xchg
adcl
xchg
xor
mov
adc
cmpsl
jle
test
lock
vcvtps2pd
mov
call
shrl
test
out
scas
out
xchg
sub
sub
adc
enter
mov
mov
movsb
insb
in
insl
cwtl
mov
mov
pop
out
lret
inc
out
fldenv
or
sarl
cmp
xlat
fidivrl
dec
aas
mov
cmp
or
xor
ds
jge
outsl
pop
pop
mov
adc
mov
out
xchg
mov
jecxz
add
mov
xchg
mov
xor
stos
push
and
jecxz
adc
arpl
jg
repnz
cmp
test
add
data16
xchg
gs
cmp
or
enter
jae
dec
sbb
fsubr
aam
int3
xchg
and
ror
xor
movsl
popa
sbb
jmp
cli
shl
repz
je
cmp
repz
adc
mov
and
sub
and
pop
push
push
pop
lods
adc
xchg
inc
and
jl
push
out
lret
cmovns
push
inc
cltd
jno
stc
cmpsl
xchg
ret
fcmovb
orb
inc
repnz
int3
sub
out
mov
push
fiaddl
xor
shll
cwtl
iret
adc
cld
and
push
add
jnp
sti
sub
cmpsb
enter
movsb
push
push
pop
fisubrs
test
mov
fs
lahf
in
jecxz
jbe
fsubs
or
add
idivb
sub
add
mov
loop
fbstp
sbb
ret
push
dec
xchg
fisttps
pop
pushf
cmp
scas
stos
adc
cmp
leave
inc
or
pop
and
inc
es
cmc
addr16
imul
xchg
ret
aam
into
leave
loope
add
mov
jmp
loop
adc
addr16
into
jg
mov
inc
or
repz
imul
jno
jg
jb
mov
nop
mov
cmp
or
ret
stos
and
stos
in
xchg
cmc
out
xchg
cwtl
inc
lock
shl
cmpsl
int
xchg
sbb
or
repnz
bound
fsub
pop
data16
dec
inc
repnz
repz
push
mov
fcmovnbe
aaa
mov
add
popf
mov
rcll
loopne
shrl
int3
lock
mov
lcall
cs
gs
or
jecxz
insl
mov
lea
cmpsl
add
rorl
lods
movsl
sti
ret
pop
mov
adc
adc
test
sahf
pop
popf
sti
loopne
out
inc
mov
jb
mov
push
popf
push
movsl
test
lcall
adc
mov
inc
shll
cltd
int3
cmp
ja
pop
lahf
into
dec
push
negl
inc
ret
cmp
ret
out
sub
mov
mov
dec
cmp
adc
jne
insb
pushf
add
xchg
mov
dec
mov
jb
sahf
ljmp
movsb
ret
mov
or
shl
test
pop
xchg
adc
pop
insb
out
add
fbld
sar
sub
mov
sbb
jae
ljmp
test
insb
cmp
pop
stc
insl
pop
add
pusha
sub
outsb
lock
push
test
fnstsw
nop
das
push
inc
enter
insb
sbb
push
adc
add
es
rcrb
aaa
in
shlb
adc
mov
js
movsl
andl
xchg
ds
out
inc
mov
stc
dec
outsl
std
enter
pop
int3
cwtl
adc
into
sti
lahf
pop
and
dec
iret
xor
inc
data16
outsb
push
push
lods
jo
or
aad
scas
fdivl
data16
or
mov
cmpsb
mov
jge
dec
mov
lods
jmp
test
shrb
or
call
inc
mov
popf
mov
dec
movsl
sub
pop
add
rcrb
inc
sbb
addr16
in
sahf
out
outsl
jmp
push
mov
pop
fisttpll
sbb
sub
adc
cltd
mov
xor
xchg
loop
adc
push
ja
xchg
scas
mov
mov
mov
xor
fildll
scas
out
std
sbb
lea
adc
jns
icebp
cltd
clc
and
out
xor
aas
dec
mov
mov
lock
mov
je
jge
int3
fnstcw
xor
ljmp
gs
mov
push
shll
and
add
jl
dec
ret
ss
cwtl
xchg
cmpsl
mov
jecxz
mov
lods
push
mov
test
xchg
in
icebp
xor
push
push
mov
ds
call
xchg
jle
test
push
mov
sbb
insb
movsl
and
enter
push
scas
lret
daa
ljmp
sbb
xlat
jle
cmp
or
dec
fiadds
enter
inc
fcoml
mov
pop
mov
lds
xchg
stos
xor
andl
loope
pop
jnp
insl
adc
out
lahf
sbb
es
pusha
icebp
and
xor
aaa
sti
cmp
push
mov
cmp
call
loope
aad
es
loop
notl
bound
aaa
mov
pop
cmp
push
sbb
xchg
jle
aas
mov
mov
jns
push
cmp
push
mov
std
shrb
mov
jne
lret
mov
loope
adc
mov
xor
rclb
lret
insl
ret
jmp
xchg
jp
lahf
hlt
mov
push
dec
sbb
fnstcw
pop
or
dec
cwtl
xchg
mov
lcall
cmpsb
stos
mov
aaa
loop
and
xchg
jle
adc
push
xor
mov
test
icebp
es
sbb
cmpsb
push
stos
push
push
lahf
or
pop
paddw
fst
cmc
and
ljmp
int
cld
lock
nop
sbb
mov
and
jo
cmp
dec
sub
mov
mov
push
lds
sbb
mov
addr16
jge
dec
sahf
pop
movsb
lods
and
stos
adc
lds
inc
and
adc
sub
je
jp
inc
mov
lret
push
cmpsl
pop
popf
pusha
push
push
push
jns
xchg
pop
add
pop
lret
loop
je
sub
call
push
dec
xor
icebp
test
lds
lea
in
xor
jno
enter
mov
push
sahf
leave
sbb
sbb
mov
orb
lods
dec
popf
test
dec
mov
sub
push
jae
cmpsb
sub
xchg
movsb
mov
inc
clc
mov
movsb
shr
repz
stos
in
cmp
sahf
xor
loop
dec
lret
pop
cltd
mov
icebp
jmp
mov
adc
js
push
xor
leavew
jl
je
out
test
cmp
pop
repnz
je
mov
negb
fnstcw
xor
jne
mov
push
cmc
int
mov
and
xchg
xor
sbb
sub
xlat
stos
shr
or
cmp
imul
fwait
int
xchg
cmp
stc
inc
cltd
or
push
shll
fistpl
cmpsb
mov
mov
movsb
dec
sub
add
lock
xchg
enter
jns
mov
loop
xorl
ja
pop
dec
sbb
pop
jecxz
mov
test
xchg
std
jmp
fs
mov
fcompl
movsb
jnp
addr16
jae
xchg
push
mov
inc
outsl
mov
cwtl
cmp
hlt
mov
adcb
mov
cmp
or
pop
cmp
xor
fbld
adc
idiv
stos
jp
mov
xchg
cltd
and
movsb
mov
cmp
and
mov
call
pop
pop
fildll
mov
enter
je
lds
xchg
fs
gs
imul
loopne
cmp
leave
test
and
or
fstpt
mov
lds
pop
xor
xchg
imul
dec
sbb
pop
mov
push
jl
pop
fildll
add
sbb
aam
test
mull
sti
xchg
inc
xor
repnz
test
xor
dec
jo
lock
sahf
lea
and
and
sti
pop
addl
push
sub
inc
or
jns
add
push
in
add
or
mov
push
xchg
call
lds
mov
mov
xor
in
inc
les
rcr
jmp
cmpsl
or
push
mov
xchg
ret
push
xchg
adc
sbb
jb
jmp
leave
test
xor
ficomps
aam
or
push
iret
fidivrs
pop
sbb
mov
mov
out
lahf
scas
xchg
incl
inc
dec
je
aaa
pop
inc
data16
and
dec
int3
xor
stc
loope
cmpsl
push
push
jmp
adc
or
sbb
cli
out
ljmp
adc
cmp
aam
ret
mov
pop
jbe
subb
push
or
arpl
gs
in
sti
or
aad
push
push
sbb
pop
add
sub
test
stos
fnop
call
inc
test
das
mov
enter
jp
inc
insb
sahf
int
scas
inc
cmpsb
jno
cwtl
xchg
repz
out
popf
xor
scas
sar
ja
in
cmc
stc
inc
in
shrl
rcl
popa
jp
out
ret
stc
jne
sarb
or
jnp
add
ficoms
inc
or
cmp
gs
cmc
sbbl
add
xchg
ret
scas
jne
shlb
mov
test
adc
movsl
pop
jg
mov
nop
mov
cmp
cwtl
jbe
lock
stc
in
or
push
imul
add
aaa
jne
xor
je
dec
sub
clc
fxch
out
dec
xchg
addl
xorl
mov
pop
out
hlt
lods
shlb
sbb
sub
iret
add
ljmp
mov
mov
and
xor
pusha
jg
mov
or
xor
arpl
stos
xchg
fisttpll
cmpsb
inc
int
out
pop
xchg
fstl
adc
cmp
push
movsl
xchg
aad
fstl
and
inc
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
sub
les
sub
push
push
xchg
mov
push
jbe
les
sub
sbb
sbbl
cld
pop
gs
inc
push
pushf
mov
sub
mov
punpcklwd
sub
or
pop
dec
mov
jg
mov
xchg
icebp
jns
cmp
adc
inc
sarb
aam
out
fcompl
insl
push
pusha
sub
icebp
sub
andl
adc
dec
sub
and
or
jecxz
and
sub
movsb
ljmp
push
xchg
dec
insl
ss
stc
ret
jle
sti
mov
xchg
dec
jl
adc
mov
test
inc
lock
shl
int
lods
outsl
rorl
lock
cmpsl
jnp
mov
jle
stc
shr
push
jmp
dec
pop
lea
push
and
faddl
iret
mov
pop
cmpl
iret
push
sub
andl
sub
ljmp
rcl
jge
and
push
xor
add
add
aam
sbb
aaa
in
lds
mov
sub
lret
addb
insl
sbb
push
shl
aad
in
test
sti
inc
and
jle
push
mov
jne
out
aas
dec
insl
cmpsl
insl
inc
sbb
imul
sub
push
sbb
movsb
pusha
mov
lahf
mov
movsb
lods
pop
pop
and
or
loopne
fisubl
popa
pop
mov
into
mov
ret
push
ret
xchg
jb
mov
sti
cmp
mov
addl
pop
rorl
sub
mov
stos
lret
call
inc
loope
fwait
jns
scas
xor
inc
push
enterw
pop
scas
out
stos
lahf
push
adc
pop
jmp
or
movsl
push
push
test
cs
pushf
std
or
xor
scas
cmp
push
popf
pop
in
lcall
enter
dec
xlat
hlt
std
in
pop
int
cmp
lock
cmp
jp
add
inc
dec
rcrb
cmp
jp
push
cltd
cltd
push
aam
push
ja
jp
out
pop
movsb
lods
dec
inc
lock
jecxz
into
add
jae
xor
xchg
pop
rcll
jle
push
push
pop
dec
aam
int3
and
gs
push
insl
xor
sub
xchg
scas
jbe
xchg
int
fldt
mov
pop
mov
outsl
es
mov
outsb
adc
aas
fs
mov
pushf
stos
aad
loope
sub
xchg
cmp
inc
mov
xchg
cwtl
xchg
stos
xor
es
lods
adc
add
and
sub
add
pop
push
and
mov
adc
ret
xchg
ljmp
mov
outsl
xchg
adc
lods
adc
or
cltd
dec
jno
popa
add
xchg
testb
nop
aad
lret
cmpl
incl
inc
mov
mov
push
enter
insl
pop
icebp
adc
dec
popa
and
cmc
sahf
mov
cmc
inc
jmp
mov
out
icebp
cmp
stos
inc
stos
jno
out
daa
sub
ret
mov
imul
cmp
lods
mov
jl
xchg
mov
pop
loope
fldl
xor
in
xor
loop
lock
sbb
bound
pop
fsts
add
push
push
ljmp
inc
jo
ret
sub
std
imul
fstpl
fisubrl
mov
or
test
lock
lods
inc
bound
mov
fs
cmc
xor
sub
push
psllq
pop
jno
lcall
loopne
loop
lock
ss
jnp
mov
inc
inc
ja
cmpsb
push
or
sarb
mov
in
mov
lahf
lods
popf
xchg
sub
mov
in
mov
add
jns
loop
movsb
lods
or
jne
aad
ss
cmp
xchg
and
dec
loop
insb
flds
sub
jle
stos
add
rcrl
nop
cmc
outsb
mov
pop
outsl
jne
ss
popf
repz
pop
jne
int
or
into
adc
dec
imul
std
xor
ficomps
mov
sub
sub
mov
cmp
xor
clc
cmp
imul
leave
imul
pop
sub
lods
lds
xchg
mov
imul
xor
fsubp
out
das
lea
or
adc
xchg
nop
adc
xchg
jmp
pop
enter
xchg
imul
push
adc
js
add
je
test
push
test
call
pop
bound
mov
cmp
frstor
loop
mov
jne
shl
add
jno
jno
test
xchg
add
lock
jmp
add
xlat
ror
and
sub
push
popf
clc
or
fwait
js
es
push
dec
in
loopne
or
insl
sbb
repz
xchg
pop
loopne
xchg
subb
mov
push
icebp
dec
stos
int
cmpsl
sub
movsb
mov
mov
mov
nop
sahf
enter
adc
inc
xchg
xchg
pop
xchg
sarl
cltd
iret
fcoms
xchg
insl
adc
xor
push
stc
pop
adc
ljmp
stos
loope
stos
mov
fdivrl
repz
outsb
divl
int3
pop
jle
insl
xor
push
cmc
cmp
repnz
clc
push
stos
push
pop
push
cmpsb
mov
dec
jns
ret
aaa
xor
pop
fs
fisubs
add
sahf
jl
xchg
lret
jo
outsb
std
sbb
xchg
mov
pop
cmc
addr16
test
in
or
mov
and
ss
fnstcw
mov
mov
xchg
mov
sbb
xor
call
and
out
jp
jne
adc
push
pop
push
in
imul
jns
pusha
mov
ds
test
mov
pop
jle
jge
xchg
push
mov
add
push
sub
repz
xorl
inc
mov
and
rorb
idivb
popf
jns
mov
ficoml
pop
push
mov
std
adc
test
mov
mov
add
ja
ss
pop
cltd
mov
mov
inc
inc
mov
fwait
cmp
mov
cltd
push
in
inc
lea
pop
fisttps
cmpsb
mov
jb
sub
inc
inc
inc
mov
dec
xor
jne
adcl
add
lods
xchg
add
repz
adc
cmp
in
xor
pop
in
sbb
movsl
rcrb
lret
jae
xlat
out
popa
dec
adcb
fwait
ret
inc
cld
fstpl
mov
or
repnz
push
push
dec
stos
mov
mov
ljmp
sub
lea
mov
repnz
or
cmp
sbb
xchg
xor
pop
mov
in
xor
xchg
test
sub
in
andb
mov
popf
sbb
sub
jbe
jnp
jmp
push
push
popf
sub
addr16
jnp
or
mov
movsl
aas
arpl
mov
out
cli
repz
or
xchg
stc
insb
dec
test
popf
out
inc
dec
and
nopl
cmp
mov
rcll
xor
arpl
xchg
jno
sti
aas
cmp
ja
adc
sub
dec
icebp
insb
scas
stos
cltd
push
stos
js
imul
jnp
int
js
push
shll
mov
aam
add
inc
xlat
icebp
idiv
aam
subb
mov
dec
sub
jb
jl
mov
jne
aas
dec
les
fidivs
imul
stos
and
pop
or
js
cmp
mov
in
mov
cmp
jo
sub
cmp
sbb
cli
fisttpll
inc
mov
mull
and
in
popf
out
out
ds
fpatan
andb
ja
add
adc
mov
cs
mov
fwait
xchg
pop
pop
pop
lds
in
popf
enter
aas
lea
jge
roll
fwait
movsl
repz
daa
mov
ret
movsl
xorb
in
daa
adc
mov
mov
adc
gs
jg
pop
push
outsb
mov
ret
adc
movsl
popf
jno
mov
or
cmp
push
outsl
push
fnstsw
push
sbb
fs
cli
jns
xchg
push
sub
loop
adc
ss
add
out
aas
in
xor
pusha
fwait
les
ja
insl
lret
lret
mov
jae
jle
ret
jg
pop
test
dec
cmp
add
push
sub
fs
mov
add
jecxz
or
xor
movsb
add
imul
les
stos
scas
pop
mov
add
loop
fdivrl
inc
icebp
outsb
and
jg
loopne
push
pop
cmp
pop
add
mov
sahf
adc
addb
fstp
dec
lea
xchg
jp
dec
lods
sub
cli
xor
jnp
adc
mov
addb
adc
cmp
call
ret
push
adc
sbb
jle
xchg
cmp
sub
push
cmp
adc
adc
test
jns
jge
dec
xor
lods
idivl
js
pop
int
mov
adc
out
test
out
sti
jp
sub
jmp
jmp
cmp
mov
movsb
sbb
fucomp
cmp
xchg
cltd
popa
fwait
inc
lds
ss
ss
add
imul
or
mov
or
inc
mov
lock
push
sub
punpcklbw
rclb
insb
cli
insl
fsubl
cli
sbb
and
dec
aaa
div
mov
insb
or
or
push
dec
inc
pop
in
jb
popf
push
ds
push
fldt
inc
in
xor
jmp
xlat
shrb
and
pop
shll
negl
jge
fwait
mov
incb
nop
sbbl
test
mov
fucom
push
int
test
loop
lods
add
lret
mov
dec
mov
int3
mov
dec
mov
add
fnstenv
repnz
sbb
push
adc
int
inc
dec
cmpsl
mov
out
mov
inc
das
in
jl
sbb
icebp
mov
xchg
jae
or
adc
das
mov
pop
mov
loope
cld
and
jge
jmp
adc
mov
xor
pop
movsb
adc
xor
lret
lods
shrl
adc
dec
dec
loop
add
imul
out
adc
sub
push
hlt
or
loop
sub
es
sub
sub
mov
xor
push
pop
arpl
insl
mov
outsb
sahf
push
sub
das
mov
mov
cmpsl
jle
add
ja
push
shlb
dec
dec
or
or
imul
dec
push
jae
scas
scas
mov
xor
into
pop
jae
lret
fdivs
int3
xchg
dec
in
sub
outsl
gs
push
mov
sti
rolb
mov
cmpsb
pop
icebp
repnz
pop
mov
mov
and
loopne
mov
jns
div
iret
mov
cmp
inc
adcb
sub
adc
lahf
cmpb
enter
add
dec
jecxz,pn
frstor
add
lahf
test
popa
inc
test
xor
push
outsb
add
fxch
adc
loop
lahf
inc
xchg
lahf
pop
xchg
xchg
bound
pusha
lods
mov
jb
inc
adc
add
mov
imul
jg
scas
mov
xlat
pop
in
adc
lods
xor
inc
cmp
push
mov
ret
or
cld
test
rcrl
js
movsb
inc
jae
and
in
outsl
inc
xor
adcb
inc
or
mulb
fisubs
fstpt
jb
inc
xlat
hlt
fst
enter
pop
leave
adc
lret
jo
xor
inc
lret
jo
jns
mov
pop
out
scas
jno
fildl
push
and
nop
repnz
cwtl
adc
outsl
inc
pop
and
popf
icebp
cmp
mov
sbb
and
mov
sarb
jl
fcomp
lret
inc
cmp
in
sub
outsl
outsb
dec
in
mov
sub
mulb
push
add
xor
sahf
inc
pop
aaa
push
aam
pop
jns
aaa
stos
js
add
mov
out
mull
popf
mov
fnsave
arpl
inc
mov
std
ds
adc
bound
mov
push
test
or
cs
cmc
mov
pop
fildl
or
lahf
sub
andb
aas
dec
mov
cmp
lods
ljmp
xor
imul
push
lcall
jmp
cs
mov
in
loop
aas
sbb
pusha
ljmp
cmp
ffree
outsl
and
or
popf
lds
arpl
xor
mov
inc
mov
dec
or
lcall
mov
cli
dec
jb
das
aam
xor
out
aas
push
xchg
mov
fstpl
rcrl
neg
popl
lret
cmp
rorl
pushf
mov
jle
scas
inc
add
adc
sbb
js
scas
stc
call
cmp
pop
add
testb
push
out
xor
mov
lahf
mov
imul
cmp
dec
inc
mov
je
cmc
or
adc
mov
mov
lea
add
and
lret
adc
aas
jae
mov
int
cmp
adc
ds
push
jne
xchg
mov
jb
xorb
testl
dec
lcall
lods
and
inc
fbstp
mov
in
jns
xor
sbb
int3
test
out
stc
jo
sbb
and
ffree
and
or
cmp
imul
ret
xlat
inc
pop
sahf
cmp
or
jecxz
fmull
cli
sbb
lahf
sbb
pop
jl
cmp
jp
pop
mov
aad
adc
dec
adc
sbb
orb
add
ss
pop
test
jo
fisttpl
pop
nop
adc
add
xchg
adc
jmp
cwtl
xlat
xchg
mov
lds
cmpb
adc
aas
divb
cmpsb
sbb
cmpsl
iret
out
adc
sbb
dec
test
test
fadd
lahf
outsl
loope
insb
fstl
push
inc
jge
cltd
ljmp
popl
outsl
nop
movb
cmp
repz
xorl
loope
mov
sub
cwtl
sti
iret
inc
pop
jp
cli
test
push
fildll
or
jecxz
inc
add
cld
gs
sub
cmp
dec
stos
out
push
clc
paddsb
add
jo
andb
pop
sub
mov
insl
and
in
add
repz
stos
push
in
sub
mov
or
xor
mov
mov
outsl
loopne
push
movsl
mov
sbb
add
and
push
push
stos
mov
push
daa
push
dec
and
arpl
js
adc
adc
push
outsb
inc
das
out
out
rorl
jge
cmpsb
mov
ljmp
sub
and
data16
repnz
push
cmpsl
scas
adc
jae
inc
add
cmp
repz
repz
outsl
movsl
inc
ror
cmp
push
dec
in
shlb
pop
movd
dec
andl
adc
sti
pushf
xchg
mov
push
jge
sbbl
dec
fwait
sbb
jmp
jl
xchg
addb
lods
sub
es
push
shlb
bound
jmp
or
adc
leave
or
loope
in
jle
push
in
pop
ficompl
cmpsl
sub
lret
aas
pop
mov
jb
mov
mov
aaa
aaa
xchg
push
pop
xchg
xchg
or
push
out
aad
add
dec
xchg
push
jle
pop
mov
fs
js
xchg
push
lods
fstpl
push
adc
mov
cmpsl
xchg
xor
aad
in
lods
xor
jecxz
and
mov
cmp
out
gs
sub
add
sub
push
test
aaa
jl
mov
or
pop
clc
mov
jnp
add
outsl
fisubs
mov
fldt
je
push
psubsb
sbb
sbb
cs
xor
roll
addl
fsub
mov
nop
sub
rol
jnp
xor
jne
mov
mov
push
cmp
push
rorl
inc
aad
test
jecxz
ss
xor
sbbl
sbb
hlt
lret
out
xchg
add
daa
jmp
out
sbb
daa
jo
cmp
ja
xcrypt-ecb
cmpsl
or
or
dec
xchg
sub
sbb
pop
es
xchg
jecxz
mov
inc
sbb
adc
je
icebp
xor
push
mov
lods
cmpsb
out
popf
add
dec
aad
xlat
push
enter
mov
push
xor
or
loope
test
insl
and
aam
sub
inc
xchg
repz
xchg
test
gs
add
out
ret
andb
call
fistps
daa
les
test
test
loop
xchg
inc
bswap
xorl
mov
dec
xchg
push
sub
popa
dec
mov
das
push
rorb
or
fnstsw
and
pop
bound
xor
pop
sti
mov
jle
jno
jnp
gs
out
ret
xchg
push
inc
divl
pop
and
scas
xchg
leave
push
movsl
xor
and
and
pop
pop
add
push
movsl
adc
sub
pusha
roll
incl
std
cmp
push
pushf
in
push
dec
int3
test
popfw
int3
push
push
xorl
popf
fwait
jno
stos
lahf
leave
pop
pop
fs
push
push
and
push
xor
cmp
push
push
pop
je
aaa
imul
into
pop
popf
jecxz
ret
shrl
lcall
jg
cltd
into
nop
lar
out
nop
loope
pusha
mov
jo
iret
dec
push
inc
lcall
jno
adc
leave
out
sbb
mov
ljmp
xorl
cmpsb
xchg
xchg
xchg
jae
out
mov
jecxz
mov
inc
je
test
mov
pop
xor
xlat
adc
nop
push
test
cmp
test
mov
lds
sub
notl
hlt
push
xor
stos
hlt
lea
and
test
imul
lock
pop
mov
sbb
mov
and
in
int3
test
pop
xchg
xchg
rcr
inc
out
push
sub
push
add
mov
and
aam
or
push
jmp
xlat
sbb
mov
and
pop
fsubl
faddl
ret
cld
add
cmp
shl
cmc
dec
jo
jnp
xor
enter
xchg
xchg
ret
mov
sub
jmp
scas
or
inc
out
loope
mov
sbbl
mov
mov
arpl
into
pop
and
js
nop
adc
and
and
setl
imul
and
adc
xlat
cmpsl
out
xor
out
out
cmc
in
push
fnstsw
and
jnp
lcall
sti
das
sbb
add
push
pop
push
daa
cld
mov
adc
fidivl
push
xchg
sar
lret
add
dec
xchg
test
dec
mov
pop
xchg
jle
pop
sub
aas
sub
mov
rcl
outsl
imul
inc
jae
jle
arpl
and
es
pop
or
filds
lock
xchg
pushf
add
inc
push
xchg
sbb
or
and
mov
pop
and
mov
jne
shlb
jbe
pusha
sbb
dec
repz
scas
pop
mov
mov
and
jb
fsubrs
out
pusha
enter
or
sub
xchg
enter
jmp
sub
mov
cmp
add
mov
pop
scas
imul
outsl
sarb
mov
sbb
and
popf
lret
cmp
test
inc
outsb
jno
addb
lods
daa
fimuls
in
mov
mov
jmp
push
je
add
subl
idivl
cmp
xlat
or
aaa
pop
adc
in
imul
iret
ja
dec
mov
push
push
fwait
inc
leave
mov
jns
fdivl
ds
or
jmp
dec
push
mov
mov
cs
mov
or
jp
sub
sub
xor
sbb
pop
push
data16
xor
cld
scas
fwait
inc
jns
push
cmp
loopne
ret
test
adc
aad
ja
inc
cmp
push
adc
outsl
in
outsl
sub
jns
fsubl
lret
ror
out
es
mov
mov
pop
lods
push
jmp
pop
and
jmp
or
lret
jne
jbe
call
ret
daa
sbb
jecxz
ret
pop
push
sbb
ds
ss
sub
gs
push
out
push
pushf
mov
add
xor
cwtl
inc
mov
test
loop
cwtl
lret
lahf
push
cmpsl
je
pop
dec
scas
pop
adc
adc
mov
negb
into
bnd
mov
cmpsb
inc
mov
stos
adc
ja
mov
cltd
dec
sbb
fnstenv
lret
and
insl
int
mov
shl
jb
movsl
mov
pushf
rolb
daa
dec
enter
enter
mov
gs
sub
mov
adc
jge
test
ret
pop
neg
ret
add
jle
lds
cmp
push
add
fstpl
aas
icebp
xchg
lds
pop
aad
in
cmp
into
pop
ret
pop
repz
sahf
sahf
or
cmp
aad
fisubl
jl
jo
dec
mov
jne
mov
lcall
sti
cs
scas
push
mov
adcb
ja
xlat
cmp
push
leave
out
addr16
xchg
mov
add
in
add
rcll
jle
stc
cmp
mov
jns
dec
sub
inc
jl
sub
dec
outsb
jb
in
push
fisttpl
fiaddl
and
jl
int
mov
js
xchg
xchg
pop
out
fcom
testb
sahf
xor
out
or
mov
cld
and
pop
xchg
mov
inc
jae
jg
mov
sub
repnz
in
ret
sbb
rcl
sbb
ret
mov
les
sub
jecxz
dec
cld
idivl
mov
xchg
repnz
push
sbb
mov
aam
adc
div
filds
jne
dec
fcoms
xchg
sbb
adc
dec
pop
jg
sbb
imul
adcl
mov
pop
mov
and
push
sbb
mov
outsl
or
mov
cmpsl
mov
popf
cwtl
adc
lret
cmp
repz
push
outsl
std
sbb
dec
je
push
jg
push
fists
jo
cs
adc
aad
adc
xor
iret
ret
push
rcr
jg
mov
leave
dec
out
xor
mov
into
xlat
sti
fwait
dec
movsb
inc
mov
movl
cs
add
out
or
dec
cmp
pop
cwtl
mov
push
jb
int3
mov
push
add
jl
pop
and
mov
insb
fwait
push
das
jne
and
jno
push
repz
cmp
fidivl
sahf
mov
lock
aaa
les
mov
mov
sub
popa
ljmp
jns
cmp
xchg
aas
xor
shll
insb
sbb
xchg
pop
enter
adc
fidivrl
add
les
pop
negb
sarl
lahf
outsl
and
jno
add
or
sbb
sahf
inc
cs
dec
dec
xchg
imul
lahf
add
sub
or
in
fisubs
fmuls
lds
add
es
adc
xor
jno
mov
in
xor
imul
pop
fs
mov
movsl
push
xor
or
pusha
sbb
mov
xor
jle
int
cmpl
iret
bound
mov
scas
int
push
mov
mov
xchg
mov
jae
fdivrp
sbb
dec
inc
add
fwait
sub
movsb
mov
pop
cs
sbb
jp
inc
jno
ljmp
lds
mov
insl
mov
mov
stos
pop
sbb
add
mov
arpl
mov
jle
cmp
mov
xchg
in
movb
xor
jl
mov
cli
clc
int3
jle
jnp
pop
ret
lods
lcall
loope
sub
mov
cli
ss
pushf
popf
stc
add
scas
sbb
and
ss
jns
push
js
pusha
push
fs
bound
xor
adc
xor
dec
xchg
sbb
stos
add
cmpsl
rcl
incl
push
mov
dec
mov
rorl
jl
fs
sub
bound
adc
jae
mov
sbb
int3
pushf
pop
push
add
stos
das
or
xchg
mov
fwait
movsl
cwtl
or
jne
cmpsb
cmp
cmp
fucom
sbb
xor
fs
movsb
das
std
outsb
in
cwtl
arpl
jbe
pop
fsubs
test
daa
daa
pop
fcom
push
push
jp
sbb
out
pop
stc
push
fstpl
roll
cli
sbb
add
xchg
xchg
lret
mov
cli
cmp
subb
arpl
mov
mov
out
cmp
call
insl
cltd
lcall
xchg
in
and
int
adc
out
cli
mov
inc
sbb
outsl
dec
lret
lret
daa
pop
add
push
in
aaa
test
jbe
fdivrp
jge
inc
sub
sub
or
adc
push
test
dec
popa
roll
inc
and
xchg
mov
and
xor
lods
jmp
dec
xlat
jne
outsb
test
mov
push
jae
into
jp
cmp
aad
mov
push
push
or
rcll
mov
xchg
loopne
xor
inc
mov
inc
fists
scas
stos
repnz
mov
pop
cmp
sbb
mul
and
xor
cwtl
nop
popf
dec
xchg
jnp
inc
pushf
sub
mov
les
lds
stos
aaa
mov
das
les
jle
sub
scas
push
xchg
sub
clc
fistl
inc
cmc
sbb
mov
cmp
popf
fnstenv
es
cs
mov
push
lea
mov
jmp
aam
pop
popa
arpl
jg
ret
and
pop
ficompl
ret
cld
scas
jnp
lcall
mov
pop
lea
sub
aaa
inc
pop
aaa
setbe
or
fsubr
or
push
push
push
cmp
fisubl
pop
push
sbb
cmp
pop
stc
sbb
in
pushl
dec
xchg
xchg
add
outsl
xchg
mov
dec
xchg
pop
pushf
mov
push
dec
adc
mov
inc
mov
mov
sbb
jbe
insl
popf
xor
pop
int3
dec
add
sub
loop
stc
xor
cltd
aaa
repz
mov
pop
pop
shlb
lret
push
sbb
and
xchg
fnstsw
mov
ror
adc
outsb
out
pop
jge
or
inc
mov
jge
fs
mov
push
push
clc
mov
sub
rcr
fwait
mov
xchg
mov
lret
imul
dec
add
xchg
inc
mov
xorb
push
lahf
roll
stc
fisttps
inc
sbb
mov
bound
jae
out
pusha
lret
imull
sbbl
push
push
mov
jo
lds
add
shll
sbb
gs
imul
sbb
scas
add
fstpl
push
out
pop
in
test
enter
sahf
or
lea
lds
and
add
daa
cmp
ret
outsl
shrl
frstpm(287
mov
gs
insb
and
jge
mull
adc
dec
dec
out
xchg
mov
cmpb
das
fneni(8087
sti
and
mov
dec
fldenv
lods
jbe
inc
insb
jb
sbb
lret
pop
or
jnp
jbe
xchg
sub
mov
sbb
pop
test
lahf
adc
lret
adc
mov
cs
daa
sbb
cwtl
xor
loop
xchg
jmp
imul
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
out
movsb
jb
mov
push
sub
push
push
adc
stos
fcoml
cld
jno
ret
dec
inc
fsubr
pop
cmp
icebp
insb
jle
adc
sti
jge
jmp
into
idivl
push
pop
adcb
or
adc
and
mov
pop
pop
inc
call
mov
mov
enter
je
adc
popf
inc
or
mov
mov
jecxz
repnz
bound
icebp
sub
mov
dec
stc
ret
adc
mov
lret
fldl2t
vunpckhps
cs
jne
xrelease
mov
arpl
mov
std
js
cmpsb
dec
jo
cmpsb
cmc
ds
sbb
pop
xchg
in
ror
inc
inc
inc
or
into
lcall
inc
icebp
push
test
daa
mov
and
aam
ljmp
adc
in
ret
popa
fisubrl
sbb
fsubl
pop
movsl
add
insl
pop
cmpsb
dec
aaa
fimuls
icebp
adc
push
test
inc
sbb
pop
das
movsl
mov
clc
jo
andb
idivl
fwait
sub
fistps
mov
hlt
xor
fildll
adc
imul
xchg
cmp
adc
xor
outsb
mov
sbb
push
or
outsb
add
mov
fmuls
xlat
xchg
dec
cmc
sbb
cmpsb
daa
stos
mov
mov
leave
mov
std
test
es
dec
sbb
add
add
lret
enter
bound
lods
imul
mov
lret
mov
arpl
fnstsw
adc
sub
outsl
int3
adc
inc
clc
xor
mov
neg
jb
adc
je
out
ja
scas
imul
mov
addr16
leave
icebp
jb
sub
add
mov
hlt
mov
dec
lahf
cmpsb
jo
data16
leave
iret
dec
fsubs
movsl
xchg
and
push
int3
cld
inc
sub
and
mulb
mov
add
je
jecxz
mov
and
mov
jnp
jmp
pop
fdivrs
xchg
sbb
xor
aam
jne
jns
inc
mov
push
repnz
push
ror
mov
int
pushf
cld
cli
mov
mov
add
add
push
mov
dec
inc
add
dec
pop
cmp
dec
push
sahf
pop
cmp
cmpsb
and
in
mov
mov
sahf
mov
ror
aaa
insl
mov
les
incl
mov
and
movl
aaa
and
repz
into
xor
xchg
call
lret
and
adc
out
sub
repnz
cltd
dec
sbb
lods
mov
sbb
imul
lods
addb
or
aam
cmc
lods
adc
loop
push
dec
sahf
pusha
gs
mov
hlt
jo
xchg
ljmp
fiadds
cmp
and
sbb
in
push
and
hlt
repnz
pop
add
pmullw
bound
adc
call
fnsave
int
jo
ss
push
andl
test
and
add
popa
sub
je
mov
and
popf
jmp
jle
stos
scas
lods
addr16
sub
repnz
rcrl
fwait
in
sbb
add
dec
ret
sti
xor
dec
stos
push
xchg
stos
inc
pusha
sub
dec
mov
add
mov
push
sub
test
scas
xchg
lret
dec
lock
imul
add
repz
fdivrp
ja
pop
adc
repz
push
push
adc
pop
jb
in
scas
push
mov
fimuls
mov
and
lahf
subb
in
imul
test
jg
in
jg
jns
xchg
cmp
popf
adcl
jne
pusha
mov
adc
xor
scas
fisttps
push
mov
pop
push
fcom
movsb
or
stos
sbb
adc
mov
xchg
add
pusha
and
mov
loopne
cmp
pop
fidivs
test
or
lods
mov
mov
add
outsb
subl
jp
inc
xchg
sbb
imul
pop
xchg
pop
pop
in
push
insl
jne
cmp
dec
inc
jecxz
sbb
dec
dec
sbb
pop
xchg
xchg
sbb
pushf
repz
xchg
int3
mov
mov
mulb
aas
fadd
cli
bnd
cmp
cmc
inc
push
fs
movsb
ds
sub
flds
in
sbb
mov
inc
push
cmp
ret
ret
std
inc
xchg
jb
cld
std
scas
out
fmuls
aaa
dec
mov
dec
mov
aad
xchg
daa
js
shrl
call
out
and
bound
lds
push
loopne
mov
sbb
push
pop
cld
mov
xor
jg
sbb
inc
and
sub
push
lock
test
mov
inc
sahf
test
imul
xchg
cwtl
push
pop
jae
pop
das
sbb
psubd
test
mov
insb
in
inc
test
mov
mov
fmul
subl
mov
lock
push
sbb
inc
xor
jns
vrcpps
stc
lahf
push
push
scas
mov
push
or
xchg
cmp
jl
jle
fnstenv
jae
aam
xchg
roll
das
cld
fcomps
cwtl
ror
xchg
cmp
xchg
ret
sub
shlb
pop
adc
adc
sub
movsl
sbb
aam
repz
mov
cli
popf
xchg
icebp
add
loope
jno
ja
idivl
mov
mov
lods
pop
daa
adcb
aad
sbb
pop
and
mov
enter
add
or
iret
pop
popf
and
or
or
pushw
xor
bound
lock
xchg
cwtl
test
jb
pop
push
lret
push
jecxz
push
sub
pop
sub
lods
push
cmp
mov
sbb
jecxz
push
icebp
test
xchg
es
sub
and
out
pop
data16
in
jg
sarb
or
mov
dec
mov
sarb
das
and
pop
sub
ss
inc
and
jecxz
loop
mov
icebp
rorb
out
repz
xlat
shlb
lea
or
or
cmpsb
outsb
pop
repnz
pusha
push
inc
leave
mov
in
push
test
mov
and
and
imul
cmpsl
or
adc
das
and
pop
dec
xchg
push
loopne
inc
sahf
andl
cli
and
add
mov
or
cmp
out
cld
cmp
mov
arpl
mov
pop
add
or
push
and
sahf
mov
cli
and
and
jmp
jns
sarb
adc
jl
out
inc
mov
and
movsb
lock
and
inc
rolb
sub
icebp
movsb
jne
xchg
dec
dec
pop
mov
mov
mov
mov
mov
in
daa
stc
xchg
addr16
sbb
mov
mov
sbb
xor
add
jle
pop
sbb
in
mov
dec
loop
scas
fbld
shl
xchg
jo
xor
push
lea
push
adc
push
xchg
bound
inc
lods
xchg
cmp
dec
mov
xor
and
int3
jo
add
std
loop
adc
mov
ja
mov
push
jno
call
shlb
and
sbb
or
mov
sahf
push
mov
xchg
mov
xchg
int
lcall
cltd
fcompl
xor
cltd
push
add
and
aam
aas
pop
sbb
push
cmc
stos
inc
lods
lods
xor
sub
int3
mov
cli
rcr
or
lock
xchg
ss
inc
clc
nop
cmpsb
lahf
or
jmp
test
mov
and
sbb
outsl
xchg
loop
test
movsl
and
or
sub
mov
mov
sarl
xchg
stos
andl
mov
call
and
xorb
outsb
mov
dec
cmp
fsubs
sarl
sub
xlat
push
das
mov
add
test
sahf
rcrl
lods
lahf
mov
out
xchg
dec
jmp
xor
gs
cwtl
xor
xor
lcall
cwtl
jno
ret
and
fdivrl
push
mov
aad
int
sbb
dec
pusha
jmp
and
insb
fs
xlat
test
in
data16
ds
cmpsb
xor
bound
lcall
push
andl
ljmp
das
sbb
das
push
xchg
jno
inc
insb
repz
jno
push
xchg
and
in
jb
lcall
add
push
dec
pop
mov
mov
fwait
sbb
lods
dec
xchg
rcr
cli
jmp
lret
cwtl
rclb
mov
mov
adc
ret
mov
inc
loop
fistpl
xchg
xchg
mov
inc
push
pop
inc
insl
jns
jmp
and
dec
mov
int
comiss
stos
adc
imul
adc
or
arpl
cmp
cwtl
mov
inc
lds
test
and
xchg
sub
lret
push
test
imul
cmp
pushl
lahf
adcl
mov
sub
mov
les
xchg
shl
mov
repnz
xor
mov
xchg
repnz
idivl
daa
push
dec
xchg
mov
push
sahf
pop
dec
ljmp
xchg
adc
daa
inc
mov
cmp
jmp
pop
mov
cld
aam
dec
insl
mov
and
fdivrs
inc
ljmp
and
jp
jge
inc
mov
scas
xor
jne
sti
test
or
adc
sbbb
and
sahf
mov
ret
sti
mov
or
lret
xchg
imul
das
mov
insb
push
xchg
cmpsw
jo
shlb
jp
inc
jp
jecxz
int3
adc
inc
stos
aas
pop
push
roll
cmc
sbb
xor
popl
cli
mov
cmp
mov
call
lods
push
mov
cwtl
cwtl
sarl
es
mov
push
cld
push
les
cmp
adc
mov
iret
movsb
ds
mov
iret
pop
leave
jno
aam
je
fldl
lahf
insb
leave
xchg
pop
bound
dec
pop
shlb
negl
subb
adc
scas
in
fcmovne
and
mov
cmp
sarb
lcall
test
push
inc
cltd
sub
dec
add
push
enter
xlat
mov
pop
loopne
xchg
xor
push
or
test
popa
cld
mov
sub
ds
int
inc
sub
sahf
push
stc
mov
mov
aaa
add
in
jnp
test
xor
dec
or
and
mov
insb
xor
js
push
xchg
scas
dec
mov
sub
xor
cmp
rcll
sub
ret
bound
out
inc
insl
scas
mov
adc
mov
mov
clc
xchg
mov
and
imul
in
xorb
inc
inc
mov
sbb
sbb
sti
mov
popf
addr16
adc
in
adc
mov
incl
roll
xchg
and
int
xchg
inc
ret
push
lahf
xlat
mov
stos
lcall
dec
repz
ret
scas
imul
add
add
sub
lock
mov
inc
dec
pop
cmp
std
push
les
shlb
cmp
mov
dec
mov
cmpl
dec
jl
ss
ficomps
sahf
cld
in
and
fisubrl
stos
into
jp
push
je
insb
mov
dec
jg
in
negb
scas
xor
cmp
mov
dec
pushf
mov
adc
jp
mov
push
mov
sub
add
rolb
pop
and
jle
cmp
test
je
xchg
or
or
push
inc
es
xor
loopne
sbb
scas
or
add
icebp
push
icebp
sbb
push
pop
hlt
aas
xchg
adc
jge
pop
mov
ds
pop
into
test
push
ljmp
dec
mov
jns
pop
inc
lahf
lret
pop
pop
mov
shrl
or
push
call
bound
pop
in
inc
mov
cmp
mov
inc
dec
cld
stc
loop
std
repnz
enter
or
mov
idivb
ds
nop
inc
xor
mov
xor
in
shll
pop
xchg
inc
scas
ret
push
std
das
into
rcrb
mov
lods
sbb
mov
loope
sahf
lret
inc
movsb
daa
lea
adc
andl
lret
scas
stos
test
repnz
mov
dec
push
fsts
sbb
xor
mov
dec
stos
adc
gs
xchg
popa
mov
scas
or
xchg
ljmp
pop
in
adc
fldcw
in
clc
jo
pop
out
sbb
mov
sub
push
xor
out
sub
scas
lock
cmp
mov
mov
mov
rcr
je
aaa
clc
iret
jle
jle
cwtl
cmp
xchg
dec
cli
hlt
jg
out
mov
add
mov
lret
mov
jmp
jmp
cmp
cmpsb
jae
add
xor
lcall
fstl
or
or
decl
rol
xor
pop
xor
ret
cmpsb
loope
cmp
ret
mov
insl
mov
fcompl
push
andb
cmc
and
js
adc
pop
sti
pop
pop
cmp
bound
sbb
movsb
nop
imul
add
pop
dec
lods
ljmp
jg
sbb
pop
dec
call
jl
sub
cmp
jns
jecxz
xor
push
dec
sbb
sub
push
push
dec
xlat
cmpsb
out
jle
cmpsl
pop
stos
sub
test
repz
jp
ja
sbbl
or
insl
jg
mov
pop
sbb
mov
es
xor
xlat
nop
ret
push
jae
add
and
cmp
and
xor
mov
and
call
shll
es
icebp
pop
xchg
mov
or
stos
adc
rorl
rcll
adc
out
pop
adc
cmp
cltd
mov
xchg
pop
xor
popa
jnp
cli
mov
test
lea
subl
mov
jle
test
push
jnp
jae
adc
mov
imul
add
bound
or
push
push
das
mov
test
inc
pop
lods
jmp
in
pop
stos
add
mov
sub
mov
pop
mov
cmpsl
xlat
mov
jmp
scas
insl
inc
es
dec
xchg
mov
sarb
fisubrs
adc
pop
pop
ds
jo
test
std
push
xor
fisubrs
add
cld
jns
in
jp
aad
pop
or
call
push
orb
sbb
or
adc
inc
or
aas
roll
mov
cmp
inc
jg
xor
mov
cli
enter
sub
lea
dec
rcrb
cli
fisttps
fdivr
add
sbb
out
stos
adc
ret
pop
and
mov
jns
add
sub
jmp
ds
mov
jecxz
and
cs
xchg
test
mov
scas
push
mov
mov
dec
pop
mov
push
fs
mov
out
fs
cltd
rol
cmp
ss
add
push
push
xchg
popa
ljmp
xchg
pop
xor
mov
sbb
cmpsb
mov
xor
and
inc
adc
jne
xchg
fisttpll
cmp
bound
pop
outsl
push
pop
xchg
xchg
xor
orb
xchg
outsb
scas
pop
fdivrs
aad
aas
jnp
sbb
jae
fistl
sahf
lahf
dec
dec
xchg
adc
xor
sub
into
inc
sbb
dec
pop
mov
or
fld
notl
xor
shrl
mov
out
scas
or
xchg
leave
mov
jne
mov
xchg
pop
mov
hlt
push
sbb
lea
xchg
mov
mov
xlat
test
inc
test
nop
mov
dec
sbb
xchg
pusha
aam
lret
std
mov
test
das
loope
hlt
dec
popa
cld
jle
pop
repz
pop
jp
insb
dec
mov
roll
stos
push
sahf
xchg
in
orl
pop
jnp
mov
mov
lea
repnz
adc
ja
jae
or
xor
jl
aam
loope
sahf
mov
sbb
into
stos
xchg
mov
sbb
sbb
pop
xchg
outsb
mov
scas
out
inc
lea
push
dec
pop
stc
xchg
sbb
cltd
and
clc
sbb
jne
xchg
mulb
and
sub
mov
lahf
jnp
ljmp
pushf
sbb
jg
mov
cld
and
dec
dec
add
xor
jo
push
iret
repnz
testl
add
sbb
mov
add
push
pop
mov
xchg
scas
addl
or
mov
fcmovbe
pusha
inc
pop
jle
out
xor
data16
add
push
repnz
pusha
pushf
sub
imul
movsl
adc
sub
jne
loop
shrl
cmc
jo
jnp
jno
repz
mov
nop
push
imul
add
jl
jecxz
dec
cmp
fs
or
pop
arpl
roll
outsl
sbb
ljmp
pop
dec
int
mov
push
lahf
mov
mov
dec
mov
mov
insb
loopne
mov
ja
rclb
sub
ss
dec
in
and
inc
push
and
insb
into
jp
mov
jecxz
aas
or
mov
clc
xlat
lock
push
inc
and
out
xchg
mov
mov
cmp
addr16
jae
xchg
sbb
adc
jmp
lret
fldenv
jnp
sub
pop
xchg
pop
es
push
inc
enter
loopne
pusha
adc
shlb
stos
pop
or
cmpsl
sbb
int3
loope
test
cld
xor
icebp
data16
mov
cmp
stc
inc
cwtl
and
push
cltd
ds
pop
lret
ret
push
fisubs
bound
int
mov
dec
insb
faddl
inc
repz
les
adc
or
mov
fimuls
sahf
dec
sub
mov
and
dec
ret
sub
aad
jb
or
jmp
adc
fwait
add
stc
sub
inc
mov
jbe
lds
outsl
mov
push
hlt
push
or
sahf
call
jne
sahf
sub
into
test
test
sbb
lea
jg
mov
cmp
mov
insb
cmc
loope
jb
data16
fsubrs
inc
scas
push
insl
mov
inc
xchg
and
sub
pop
mov
mov
mov
push
add
dec
push
mov
rcrl
test
sbb
or
inc
inc
ja
fiaddl
jnp
lret
aad
test
sub
test
cmpsl
adc
fcompl
jecxz
mov
pop
jmp
adc
sbb
fisubrs
dec
pop
popf
ljmp
out
and
mov
shrb
adc
mov
out
sub
repnz
mov
mov
adc
dec
data16
xchg
int3
shll
lods
test
lds
mov
dec
adc
ljmp
cmp
mulb
xchg
add
sub
in
cmc
cmc
dec
inc
push
repz
fdiv
and
cs
xchg
xchg
dec
data16
outsl
icebp
push
lds
movsb
sub
lea
hlt
into
push
pop
mov
sbbl
outsb
ljmp
jmp
xchg
fabs
jo
add
push
aam
mov
jmp
and
push
filds
je
xor
jns
test
sbb
add
shlb
arpl
and
or
xchg
inc
cmp
jb
pop
out
jecxz
shlb
fdivl
repz
insb
pop
cltd
sti
lock
mov
aam
es
mov
ss
and
push
mov
les
in
jge
in
call
and
cmp
mov
jg
mov
pop
sub
pushf
inc
jle
sbb
loopne
daa
fdivrl
xchg
out
xor
xor
sub
jnp
mov
or
ffreep
push
jl
data16
xchg
xchg
inc
loopne
sub
subb
or
icebp
scas
pop
jecxz
js
lahf
shrb
ret
out
sti
cmp
dec
xchg
xor
scas
push
inc
cmp
in
jmp
repz
jb
xor
hlt
push
ja
lea
popf
fsubrs
nop
push
fcoms
mov
orb
stos
or
loopne
sti
pop
mov
sbb
shlb
xor
repnz
mov
stos
pop
clc
jnp
aad
pop
orl
data16
scas
mov
xor
or
test
shl
jns
jnp
gs
push
mov
adc
inc
mov
sbb
enter
inc
xor
out
xchg
cld
mov
and
lods
lds
and
shlb
shrb
mov
les
dec
rcl
std
xchg
repnz
sbb
cld
pop
push
dec
jbe
loop
sti
cwtd
cmpsb
pushf
icebp
std
dec
das
clc
and
mov
jmp
imul
jmp
dec
push
cmpsl
jae
aam
push
sub
jge
test
push
or
and
xchg
cmp
cltd
les
push
loop
pop
ret
xchg
bound
push
aam
int3
insl
inc
ret
fs
aam
ljmp
fldcw
push
and
pop
mov
mov
in
cwtl
out
orb
int
orl
pop
xchg
repz
dec
cmp
fisubrl
icebp
sub
cmpsb
pop
push
sbb
cmpsb
daa
push
xor
nop
fs
add
inc
mov
jae
mov
xlat
enter
jae
xchg
pop
repz
gs
xor
lods
dec
icebp
push
movsl
leave
arpl
scas
pop
xchg
jle
icebp
mov
fcomi
cmp
and
test
sbb
and
sti
adc
sub
sbb
pop
and
push
filds
fstpl
mov
or
pop
cs
pusha
and
and
push
sub
lret
and
test
and
adc
shlb
xor
or
shl
sub
fcomps
sub
jo
xlat
push
in
sub
aas
sub
in
out
fdivrs
stc
in
and
inc
pop
sbb
mov
lods
cmp
xlat
stos
test
sub
stc
pop
xchg
pop
mov
pop
sbb
dec
insl
jmp
int3
mov
rep
xchg
call
mov
or
pop
sub
jnp
sub
iret
sbb
or
add
add
scas
add
mov
jno
gs
push
sarb
pop
gs
push
cs
or
or
mov
orb
pop
fsubs
xchg
push
mov
sub
ucomiss
sbb
call
imul
popa
testl
cli
or
pop
mov
and
push
xchg
insl
fdivrs
loopne
pop
shll
adc
jnp
daa
popf
js
loop
xchg
sar
jae
jp
mov
out
aam
and
fstp
les
ljmp
dec
or
xor
ret
adc
push
jae
mov
cs
loop
lcall
rcl
push
sbb
gs
fisttpl
pop
rcl
push
sub
mov
pop
test
out
and
pop
roll
popf
jge
xchg
arpl
xchg
popa
mov
xor
sti
out
cltd
mov
gs
push
jg
shll
inc
out
inc
das
aad
adc
popa
sar
fadds
and
pop
ja
pushf
aaa
das
mov
not
cld
enter
lea
sbbl
es
nop
imul
and
adc
pop
cmpsl
push
nopl
xor
lds
mov
int
jl
adc
iret
pop
xor
adc
inc
and
or
outsl
jecxz
sbb
push
test
mov
ret
jge
sbb
leave
ficoml
push
out
bound
adc
adc
imul
mov
pop
movb
sbb
and
test
iret
test
push
add
pop
pushf
ret
sti
into
scas
and
in
xchg
shr
test
jo
fidivrs
inc
ljmp
lret
xchg
test
inc
les
jg
sbb
mov
in
xchg
iret
push
sub
bound
add
cmp
fchs
sahf
and
jne
fcmovbe
cmpl
scas
pop
pop
lds
sbb
das
adcb
push
stc
popf
jbe
out
inc
sub
sarb
jno
test
and
outsb
pop
fwait
jmp
fstpl
push
daa
mov
pop
iret
xor
or
pop
call
pop
cs
clc
add
mov
cmp
aas
out
int3
aad
mov
or
arpl
adc
push
fbld
cmp
les
sub
xchg
adc
popa
stos
fwait
adc
sbb
pusha
and
iret
and
sbb
sti
lret
jg
mov
or
nop
cmpsb
jae
xchg
rcll
imul
and
std
enter
push
jg
gs
jno
jmp
or
ss
or
inc
pop
push
rclb
outsl
dec
sub
in
mov
sbb
ja
xchg
push
movsl
test
add
rcrl
sahf
xor
fisttpl
sub
imul
push
int3
pop
ss
push
fiaddl
das
mov
jl
jecxz
aaa
inc
loop
fs
pushf
mov
adc
mov
mov
repnz
orl
mov
pop
fwait
inc
ret
cmp
pop
push
mov
repnz
outsb
divb
push
jae
je
lcall
fstl
mov
and
mov
hlt
cltd
or
cli
adc
pop
add
loopne
push
mov
popf
loope
jne
inc
data16
adcl
mov
jbe
xor
clc
fmuls
xchg
push
pop
pop
std
inc
clc
jb
jmp
jecxz
mov
gs
mov
loopne
ret
jb
mov
mov
add
pop
test
jecxz
xchg
sbb
mov
jnp
mov
add
adc
stos
andl
insl
aaa
lahf
sub
nop
push
add
push
lods
in
mov
mov
dec
add
inc
pop
xor
pop
mull
lock
insl
bound
cmp
jecxz
add
xor
rclb
out
and
or
aam
fdivrp
mov
adc
dec
pop
outsb
stc
jle
sub
into
mov
js
xorb
and
data16
or
xor
xlat
xor
jge
or
repnz
push
push
fcoml
popf
xchg
mov
out
push
nop
mov
dec
sbb
push
orl
out
xchg
dec
pop
sbb
xor
int3
dec
jmp
push
adc
notb
push
push
out
nop
jbe
xchg
data16
mov
repnz
mov
inc
outsb
adc
jmp
aad
jbe
das
outsl
mov
fimull
jnp
mov
add
lock
or
push
xchg
out
inc
test
pop
repnz
or
loope
mov
pop
mov
fdivs
out
cmp
jno
mov
scas
clc
jg
dec
repz
lds
adc
insb
flds
enter
mov
in
in
nop
leave
in
adc
push
pop
jmp
sti
fcmovnb
mov
es
sbb
xor
loopne
dec
les
jle
push
mov
mov
and
mov
sub
enter
dec
lahf
shrb
cs
jecxz
mov
and
or
add
lock
cltd
jns
push
push
minps
push
arpl
fisttpll
xchg
lahf
dec
outsl
sbb
es
xchg
jbe
aaa
xor
cs
outsb
mov
xor
mov
mov
jge
fs
pop
mov
sbb
push
adc
dec
js
shll
popf
xchg
cmpsb
cmpsl
aad
cmp
inc
cli
xchg
xor
ja
rorb
mov
lods
add
jbe
dec
add
adc
nop
inc
mov
bound
fiaddl
jns
adc
fildll
sub
js
bound
je
xchg
ja
inc
push
adc
jo
xor
insl
insb
push
lahf
mov
xor
lahf
pop
add
mov
mov
xor
iret
cld
or
icebp
push
add
add
sub
inc
adc
jmp
mov
or
jmp
pop
insl
sub
cmp
icebp
or
jb
push
push
push
sub
push
push
mov
pusha
out
mov
mov
pop
mov
dec
ret
orl
xchg
ss
int3
int
int
cmp
jmp
cmp
push
aad
data16
sub
sbb
sbb
daa
or
cli
jne
movsb
push
dec
adc
imul
pop
movsb
push
inc
mov
out
ljmp
jl
aas
loopne
pop
mov
int3
jno
bswap
and
jnp
movsl
dec
inc
or
loope
enter
cli
icebp
ret
sub
fbstp
add
pushf
add
pop
rol
es
ljmp
shll
rorb
sar
shlb
jg
sar
cmp
cmp
push
js
test
inc
ret
int3
sub
and
je
push
shrl
out
or
and
sub
nop
mov
fstpt
cmp
cmp
sbb
outsl
js
mov
ds
add
sbbl
cmp
and
jne
addr16
stos
ret
mov
lods
adc
xchg
jb
mov
dec
es
cli
mov
adc
add
xor
filds
ljmp
lds
cli
mov
mov
sbb
and
pop
rorb
cmp
jle
push
and
clc
hlt
add
aam
pushf
sbb
shl
dec
push
push
cmp
pop
fisubs
popa
jl
loop
mov
movsb
xchg
mov
cmp
loope
pop
shrb
pop
int3
cmp
dec
pop
stc
pushf
lret
adc
or
add
cmc
xchg
in
sbb
push
jo
stc
dec
cwtl
repz
shll
movsl
mov
mov
daa
xchg
repz
sub
andb
pop
push
xlat
pop
test
push
scas
dec
mov
sub
pop
sub
dec
in
aam
aam
adc
mov
jns
dec
loop
add
in
fistpl
mov
add
mov
jne
xor
jnp
clc
cmp
pop
dec
sub
adc
icebp
fdivrs
add
addr16
xor
out
pop
lea
mov
out
push
test
mov
ja
mov
fwait
xchg
mov
push
cmpsl
bound
sti
pushf
cmp
in
lods
std
dec
sbb
cwtl
inc
mov
mov
mov
cs
push
mov
pop
pop
fsubs
pop
jbe
xchg
xadd
int
xchg
jg
add
lock
in
add
aad
dec
repnz
aas
dec
fwait
or
mov
dec
ja
inc
xor
jmp
cltd
xchg
loop
sti
gs
ret
lret
aaa
and
negl
sub
fs
jp
loop
sub
mov
or
mov
xor
pop
mov
insl
out
sub
dec
sub
mov
iret
in
push
xchg
stos
xchg
shrl
rorb
pop
mov
dec
aam
loop
fneni(8087
jmp
enter
rolb
sub
adc
push
or
addr16
or
push
aas
popa
insl
ds
or
mov
cmpsl
xchg
xor
cwtl
fucomp
jmp
sbb
cmp
hlt
js
push
fsubr
js
xchg
mov
xchg
sbbb
jecxz
out
mov
mov
outsb
sub
sbb
das
fsubrl
jmp
aas
push
or
outsb
add
inc
fsubs
out
loope
mov
jae
lret
shr
sub
in
in
push
mov
xor
mov
fildl
pop
cmp
repnz
ljmp
and
aad
mov
jno
jmp
sbb
pusha
aad
fs
xchg
adc
bound
xchg
in
sub
and
sti
mov
arpl
xchg
sub
push
push
mov
jle
mov
adc
pop
cld
frstor
cmp
adc
shll
adc
test
arpl
test
jnp
icebp
lods
in
mov
mov
repz
adc
mov
push
gs
add
inc
sti
sub
subl
cmpsb
mov
xor
xor
int
or
mov
dec
adc
and
pushf
pop
fldl
push
jne
and
imul
xchg
lret
or
outsl
in
push
or
inc
in
dec
push
and
icebp
cmp
push
fwait
mov
pop
push
fmul
enter
flds
push
call
mov
push
fidivs
jecxz
xchg
out
dec
adc
or
jbe
xchg
clc
pushf
arpl
cltd
sbb
xchg
push
arpl
add
ljmp
xor
push
loopne
xchg
bound
pop
push
pop
frstor
fcmovu
xchg
mov
out
daa
xchg
data16
mov
test
dec
mov
insl
mov
jae
and
repnz
mov
nop
pop
popa
sbb
icebp
and
lret
rolb
ljmp
aam
sahf
shl
inc
mov
jb
lcall
jp
pop
popa
gs
rcrl
mov
cltd
dec
jns
mov
dec
movsb
cmc
jp
loop
js
aad
sub
jp
mov
push
out
aaa
mov
dec
jo
adc
cmp
inc
jmp
ljmp
inc
dec
cltd
and
pop
jae
push
shl
jecxz
push
lcall
mov
sahf
cmp
dec
aad
insl
mov
aad
lods
jne
arpl
mov
jns
in
pop
iret
cmp
loope
call
xor
cli
mov
imul
out
bnd
cltd
mov
pop
aas
adc
mov
test
mov
outsl
jmp
push
xor
push
es
mov
int3
mov
arpl
inc
subb
out
popf
sub
cs
xchg
into
es
mov
out
fdivs
push
andb
imul
mov
fisttps
mov
orl
out
fcoms
sbb
xor
fsts
push
xor
lret
jmp
in
pop
out
stos
xchg
inc
imul
inc
sbb
jp
roll
cmpl
clc
pop
outsl
loopne
sbb
fistpll
cli
or
jle
int3
shll
cmp
loope
pop
cld
ret
mov
mov
jl
adc
sub
fcoms
add
jmp
pushf
mov
popa
ljmp
pop
loopne
cwtl
and
ret
xchg
push
push
movsb
sti
pop
loop
jae
lock
idiv
out
mov
pop
xchg
pop
mov
mov
mov
invd
cmp
adc
sub
es
lahf
lahf
push
add
sbb
fsubrl
aad
iret
jg
sub
xchg
pop
daa
cmp
inc
in
mov
mov
es
pop
daa
andw
add
and
rcrl
pushf
mov
nop
mov
sub
pop
test
mov
push
sub
xor
jecxz
cltd
popa
push
dec
mov
xor
aaa
daa
daa
mov
movsl
insl
scas
js
subb
cltd
and
xchg
xchg
iret
sbb
in
pop
nop
lret
mov
push
into
lret
popf
int3
pop
or
add
mov
jae
cwtl
sub
push
or
dec
push
jae
jno
cmc
pop
and
scas
push
test
cmp
push
lods
loopne
dec
jge
push
cltd
aas
fnstcw
push
ss
adc
add
cmp
iret
cvttps2pi
jmp
mov
push
adc
sbb
push
test
test
lcall
push
ja
push
fwait
test
mov
inc
add
out
jo
dec
cwtl
lahf
xchg
pop
xchg
xchg
ds
dec
jbe
add
mov
sub
popa
mov
mov
sti
test
pop
andl
push
daa
lahf
mov
aas
pop
push
xchg
sbb
adc
popa
mov
mov
xchg
jmp
and
test
pop
inc
inc
dec
adc
in
movsb
adc
adc
mov
cmp
lds
movl
fwait
jns
into
or
and
add
cmpsl
mov
cwtl
enter
faddl
imul
or
pushf
in
xchg
xchg
xor
insl
add
push
inc
and
mov
ja
cmp
dec
cmp
sub
dec
mov
lea
pop
sahf
pop
incl
or
je
cmpxchg
int
rcll
dec
or
push
js
insb
fnsave
or
loopne
push
sarb
pusha
int
push
les
xchg
jnp
and
mov
mov
sbb
adc
loopne
inc
push
sub
les
in
sbb
sbb
inc
sub
dec
loope
pop
ss
cltd
incb
xlat
push
arpl
pop
xchg
pop
sub
jbe
jbe
mov
int3
adc
jge
dec
ds
xchg
jp
and
pushf
mov
hlt
rcll
int
mov
punpckldq
pop
jns
mov
ja
pop
dec
ret
jo
inc
stos
xchg
xchg
adc
mov
fidivrl
mov
fcompl
repz
xchg
stos
enter
xchg
scas
stos
ss
push
mov
stos
xchg
lods
daa
cmp
movsl
inc
es
in
push
data16
out
pop
jp
or
mov
pop
loope
mov
data16
jbe
jnp
jecxz
pusha
outsb
dec
arpl
nop
add
cmpsl
inc
push
cltd
sbb
aaa
dec
xchg
std
negl
jnp
xor
shll
fisttps
xchg
push
push
mov
mov
mov
stos
xchg
jg
imul
xor
mov
lea
iret
decb
jb
insb
test
or
mov
push
add
mov
fwait
cs
jbe
into
in
cmc
xor
movsl
scas
aaa
push
add
add
sbb
into
outsb
mov
arpl
ljmp
mov
or
xor
stos
jl
sub
push
dec
xchg
fistpll
mov
sahf
imulb
js
jb
lret
inc
push
inc
mov
icebp
push
mov
jae
test
sbb
pop
or
mov
and
imul
mov
jle
sbb
sbb
xor
dec
test
xchg
ss
and
xor
pop
mov
scas
inc
sbb
add
push
and
jbe
inc
adc
add
sub
and
pop
cmp
test
jb
out
cs
in
aas
and
xchg
pop
jmp
out
popa
mov
imull
jmp
lahf
decl
inc
mov
movsb
lods
lahf
mov
test
mov
jmp
lods
jo
sti
fcomp
xchg
jmp
jbe
clc
lea
sahf
mov
out
push
ds
mov
out
cmpsl
inc
jbe
repnz
lock
jmp
adc
or
dec
dec
movsb
or
adc
pusha
pop
mov
push
dec
addb
sub
pop
sbb
lods
push
inc
inc
aas
fs
push
fistps
stos
pop
xchg
incl
sbb
pop
divl
ja
cli
andl
dec
pushf
cmp
stos
add
xor
fldt
adc
movsb
test
adc
lods
test
out
rol
mov
lods
addb
gs
test
lcall
add
imul
dec
outsl
nop
dec
pop
mov
insl
out
imul
cmp
sbb
ja
loopne
xor
outsb
mov
rcrb
repnz
in
push
dec
sub
repnz
mov
push
cmp
mov
adc
inc
xchg
jb
pop
pop
inc
push
out
xor
inc
stc
xor
mov
repnz
xlat
or
jnp
sbb
xchg
imul
stos
jl
pop
sahf
sub
insl
add
test
les
push
adc
mov
shll
xchg
cmp
mov
rorb
int3
int
and
test
add
repnz
insl
dec
sub
in
mov
xchg
ja
lahf
ljmp
fistl
sub
out
cmp
aad
xchg
xchg
push
ds
push
and
call
push
pop
cmpsb
sub
test
add
xchg
je
mov
lock
mov
nop
clc
xor
pusha
sbb
xchg
test
xor
dec
xor
add
aam
or
cmpsl
test
mov
mov
ret
xor
adc
mov
push
inc
dec
ret
jp
mov
xlat
les
xchg
mov
push
pusha
push
push
lods
test
mov
jle
mov
and
mov
fsubl
sub
jg
loope
je
fwait
rcr
add
out
lret
push
adc
dec
shlb
push
pop
adc
out
std
incl
lahf
test
enter
movsl
jno
ds
shl
ror
enter
shl
cmpl
fsubs
insb
add
pusha
jl
pop
cmp
or
push
inc
dec
or
jo
into
mov
dec
popf
pop
data16
stc
pop
fmull
jl
xchg
ds
xchg
jmp
jle
test
pop
fldt
push
pop
inc
xchg
adc
in
add
lret
loopne
jmp
pusha
fbstp
nop
shll
inc
lcall
imul
push
leave
repnz
sbb
sbb
negb
lods
outsb
or
sbb
sahf
mov
aam
cmpsl
mov
movaps
imul
pop
mov
pop
mov
and
fstl
lcall
xchg
dec
adc
dec
ret
int3
out
in
lcall
pop
mov
scas
loopne
mov
outsb
movsb
add
pop
inc
pop
mov
int3
add
and
mov
icebp
or
lcall
popf
cmp
out
aam
rcll
sub
xchg
push
mov
xor
jmp
idivl
repz
sbb
dec
and
pop
xor
cmpsb
pop
add
push
sub
in
add
popf
je
jne
leave
pusha
push
imul
dec
xor
mov
bound
push
pop
cmpsb
or
pusha
cld
mov
cmp
addr16
shrb
scas
cltd
dec
frstor
dec
test
pushl
and
pusha
ljmp
pushf
cmp
movsb
mov
cmp
push
pop
push
jno
xchg
cld
add
cmp
test
call
iret
jle
cwtl
cltd
test
popf
xchg
mov
jle
dec
lea
clc
and
imul
mov
incl
push
sbb
outsb
scas
inc
mov
fmull
cld
mov
mov
int
xchg
sbb
jbe
insl
sbb
jne
std
dec
loopne
rorl
fists
add
ja
pop
fisubrl
xor
pop
mov
inc
bnd
lock
test
lods
js
jo
mov
in
pop
fdivs
pushf
mov
push
cmp
arpl
test
lods
inc
addb
sub
inc
dec
mov
jae
pushaw
test
xchg
inc
icebp
int3
adc
mov
mov
inc
xchg
sbb
or
push
dec
push
ret
adc
cmp
and
xchg
call
popa
stc
lea
sub
inc
jno
inc
mov
stos
add
add
jp
jg
lret
xchg
cld
jge
in
add
imul
add
xchg
cmc
sbb
sub
and
fwait
adc
lods
test
mov
cmp
sbb
inc
push
inc
outsb
pop
jl
lods
or
dec
mov
fsubl
dec
mov
jbe
dec
pop
loopne
pop
lods
and
lods
pop
xor
mov
xchg
mov
and
xor
xor
or
orb
jge
outsl
mov
fldenv
mov
pop
mov
les
daa
in
icebp
cmc
fistps
mov
filds
pop
loope
loop
ret
adc
sub
sbb
test
add
sub
pop
outsb
adc
dec
adc
cs
fsubrl
jne
aaa
fstpt
jecxz
push
sbb
fwait
inc
int
dec
jbe
mov
jo
mov
mov
xlat
ds
pop
rcl
imul
cmpsb
lock
mov
lock
roll
add
xchg
fildl
jmp
mov
mov
xchg
adc
repnz
in
adc
fs
clc
add
mov
push
cmp
pop
pop
xorps
push
fidivl
push
xor
inc
xor
outsb
jp
or
lret
cmp
stos
push
loop
lds
arpl
ds
mov
mov
jne
inc
pop
sub
movsl
fwait
or
mov
in
push
loop
lret
sub
and
test
mov
icebp
cli
cs
jle
adc
dec
push
lret
idivb
jmp
iret
xorb
sub
test
std
cmp
xchg
scas
pop
mov
fwait
add
push
iret
mov
jp
mov
mov
or
js
xchg
in
stos
imul
aas
gs
daa
out
add
dec
clc
push
xor
cmpsl
ret
mov
push
aas
shrl
sbb
sub
cmpsl
mov
mov
fucomp
pop
repz
adc
ja
and
movsb
dec
fldcw
xor
stos
mov
push
nop
mov
mov
pop
leave
add
pushf
mov
addr16
movsb
pop
xor
push
out
add
sub
xor
dec
inc
stc
scas
mov
jno
scas
mov
in
sub
stos
fnsave
in
hlt
mov
mov
bound
lret
mov
icebp
cmpsl
arpl
fcmovbe
dec
lret
mov
std
add
cltd
es
je
inc
mov
scas
fcompl
addr16
jl
in
add
clc
fnstsw
jns
mov
adc
xlat
adc
lods
pushf
int
push
adc
bound
mov
mov
lret
popa
mull
sahf
add
fldt
jecxz
sub
cmc
xor
lea
les
insb
pushf
xor
sarb
hlt
xchg
jmp
mov
dec
or
jae
mov
test
int3
and
xchg
mov
lock
adc
mov
lcall
out
fadds
cli
aas
mov
cmp
xchg
pop
es
sub
int3
rcrb
out
andb
jmp
stos
push
cmpb
and
popf
int3
iret
xchg
xchg
sub
push
iret
cs
dec
mov
cmp
notb
pop
jb
faddl
jge
xchg
icebp
lret
push
xchg
shlb
mov
mov
out
mov
xor
xchg
jb
mov
sub
stos
rcrl
jns
jg
pop
pop
dec
jns
ret
das
in
inc
ds
cltd
fsubr
scas
scas
mov
dec
ret
sub
xchg
dec
daa
jg
lcall
fstps
inc
js
add
mov
repnz
fcmovnbe
bound
ja
rcrb
stc
adc
mov
inc
fmull
in
mov
push
xorl
cs
in
inc
xor
fidivs
jns
or
outsb
cmc
icebp
sbb
mov
pop
fnsave
stos
arpl
adc
fisubrs
jbe
jne
testb
mov
pop
pop
test
jg
lea
in
ret
jb
adc
push
xor
shll
jae
and
dec
sub
cmp
push
pushf
fisttpl
cmpsl
inc
xor
mov
fdivrs
int
mov
or
mov
add
data16
sub
clc
sbb
jecxz
rcr
dec
and
std
xchg
leave
in
popa
cmp
repz
mov
xor
pop
lret
mov
or
mov
sbb
fisttpll
adc
add
std
cs
inc
mov
jmp
xor
sbb
add
jae
pop
and
shll
cmpl
in
dec
mov
push
sub
shlb
push
fldcw
test
call
rcrl
mov
test
je
add
pushf
cmp
jne
sub
xor
call
data16
cmp
pop
sbb
adc
sub
test
jge
xchg
ret
sbb
cltd
jb
adc
popa
shrl
xchg
mov
xchg
cmp
pop
pusha
jmp
popa
xchg
fildll
push
icebp
push
push
in
inc
scas
ret
dec
dec
aad
das
fs
fcoml
insb
mov
popa
std
cmp
ror
pop
xlat
scas
or
faddl
mov
cmp
push
pop
pop
mov
subb
rcrl
or
pop
hlt
jns
in
mov
repz
or
push
sbb
and
fucomip
xchg
xchg
push
cltd
nop
daa
movq
into
jae
cld
mov
sub
xchg
ja
push
and
sbb
jmp
insb
or
mov
add
xor
in
jne
jb
push
xor
gs
insb
ds
pop
ja
mov
jb
xchg
jecxz
inc
mov
imull
or
inc
outsb
and
outsb
mov
xchg
popf
push
jo
mov
insb
and
cmp
push
stc
je
add
out
mov
dec
sbb
pop
fmuls
clc
pop
or
js
sub
cwtl
sbb
pop
movsl
add
fnstenv
add
add
paddd
cmp
insl
lret
sti
xor
inc
sub
hlt
std
outsl
sahf
lods
xor
xchg
sbb
add
xchg
mov
leave
adc
js
in
push
push
imul
sub
pop
push
call
shll
pusha
aam
push
xor
adc
stos
sub
shll
lea
adc
push
shr
sub
nop
pop
jg
pop
in
xor
and
inc
pop
xor
mov
in
add
cmp
inc
lret
add
mov
cmp
and
jne
in
mov
stc
stos
jge
scas
sbb
cmp
xchg
out
pop
jle
inc
mov
test
xor
scas
int3
mov
insl
cmp
lock
call
mov
pop
icebp
fsts
cmp
xchg
mov
ret
xor
fdivs
imul
pop
dec
dec
and
test
mov
add
inc
fmull
pop
push
imul
cmpsb
imul
test
push
or
out
add
cmp
orl
shr
loop
aaa
insl
inc
inc
cs
sbb
mov
inc
mov
lods
inc
push
clc
out
mov
adc
push
fs
lret
jecxz
or
rorl
mov
outsb
dec
mov
movb
mov
xchg
outsl
in
out
leave
xchg
push
loop
lds
andb
loope
jne
jl
lea
mov
and
or
push
jmp
jnp
or
push
mov
aaa
jno
test
sbb
xchg
jmp
loope
mov
lock
popf
pop
iret
sbbb
mov
add
jg
fcomps
lds
data16
jb
push
xor
jge
fstps
nop
mov
stos
inc
fists
lret
ss
in
mov
xchg
addl
mov
sbb
iret
in
mov
and
sub
pop
jns
outsb
pop
gs
dec
insb
inc
std
shlb
pop
xlat
and
fildll
ja
in
ret
js
jne
or
insb
scas
iret
ds
push
push
xor
lcall
divb
pop
loop
mov
call
ss
je
popaw
sahf
movsb
or
pop
sbb
cmp
push
arpl
scas
pop
subl
and
or
lea
push
mov
pop
lds
add
stc
popf
push
or
and
mov
sarl
adc
std
mov
mov
xlat
in
fnsave
push
ficompl
mov
dec
cli
push
clc
pop
sbb
cmp
push
shl
lret
fmull
push
pushf
sar
mov
pop
loop
push
pop
push
mov
ja
ret
jbe
dec
mov
and
test
pop
cltd
push
sbb
aaa
in
cld
jbe
push
push
sbb
je
push
xor
push
jbe
nop
daa
push
outsl
add
clc
mov
sub
sub
lods
inc
xchg
sub
lret
sbb
mov
int3
sub
int3
aad
in
jne
hlt
dec
adc
jge
or
fdivl
in
outsl
add
repz
sar
and
adc
xlat
adc
xorl
cli
lea
imul
push
test
pop
push
cmp
xlat
icebp
movl
loope
shll
pop
mov
mov
xor
leave
in
jle
dec
in
sub
aam
push
rolb
cmp
jecxz
subl
lea
sub
mov
enter
jmp
test
inc
inc
testb
data16
into
inc
pop
in
stos
and
dec
lods
adc
sbb
in
cmc
xchg
lret
iret
scas
xor
das
jl
mov
ret
push
popf
test
adc
mov
dec
jb
cmp
add
dec
cmpsb
push
int
sti
je
ret
inc
aas
icebp
pop
fsts
test
stos
dec
sar
popa
jae
cmp
lock
insb
leave
test
jno
out
lods
xor
jg
ret
sbb
inc
inc
stc
leave
imul
std
push
pop
jle
push
fiadds
aas
adc
xor
orb
xor
push
testb
sub
sbb
mov
xchg
push
or
push
loop
test
pop
mov
imul
inc
out
insb
insb
insb
mov
xchg
pop
dec
nop
inc
scas
add
out
fisubs
mov
mov
dec
jnp
sub
fwait
inc
inc
inc
lret
xchg
xchg
push
inc
pushf
push
pop
stc
imul
fisubrl
aam
int3
js
jne
push
push
cmpsb
add
mov
pop
add
push
or
push
mov
insb
data16
inc
add
das
dec
xchg
xor
lcall
pop
in
adc
and
in
sbb
cld
rcll
xchg
push
leave
mov
or
aaa
sti
insl
gs
hlt
das
sbb
pop
mov
in
lret
or
fs
xchg
aas
mov
push
sub
adc
cmp
sarl
cmp
mov
or
mov
mov
aam
push
jge
jo
push
imul
add
pop
ret
out
cld
mov
and
pop
dec
je
insb
insb
hlt
sarl
scas
mov
adc
fisubl
xor
lock
out
cmp
and
fcmovb
xchg
adc
jnp
sub
jmp
repz
mov
mov
aam
in
pop
out
jae
pop
mov
sahf
ret
mov
in
out
lds
xchg
inc
test
jno
jecxz
imul
jmp
lea
jmp
sbb
arpl
stos
mov
sbb
insl
lods
dec
mov
inc
testb
aas
jb
leave
dec
xchg
mov
jo
inc
pop
fdivrl
jl
inc
lods
test
jb
cltd
idivb
lea
mov
push
incl
fcomps
imul
mov
vmovaps
pop
fdivrl
jbe
pop
mov
fwait
mov
shrb
call
adc
mov
mov
aas
sub
and
fwait
add
rcll
cwtl
lods
loop
in
lret
out
and
sbb
ja
adc
xor
pop
xor
lock
add
scas
mov
subb
fwait
aam
sub
cmpsl
adc
pop
lods
mov
imul
or
sbbl
xchg
in
xchg
pop
mov
dec
in
cmp
in
mov
insb
or
and
cmp
and
cmp
int
xor
push
or
xchg
push
and
adc
pop
add
jne
jbe
lcall
ret
mov
xor
idivl
ret
iret
fwait
xor
and
cmp
divb
loope
mov
fdiv
xchg
dec
push
in
jg
push
xor
movsb
outsb
adc
outsl
lods
es
xor
or
test
pop
adc
sbb
or
fsubp
hlt
xchg
mov
and
dec
cmp
in
popa
fsubl
add
scas
jecxz
clc
mov
and
jge
fsubrs
mov
xchg
fisubrl
lods
cmpsl
jle
mov
push
iret
movsl
mov
inc
sbb
repnz
stc
add
cmpsb
divb
pop
inc
mov
mov
pop
aaa
lret
xor
jb
jb
xlat
add
aad
ja
arpl
xchg
push
ss
sub
pshufw
and
jo
pop
es
cwtl
pop
xchg
in
jl
inc
add
lods
xor
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
add
cmpsb
adc
sub
push
push
cmp
sahf
or
out
mov
push
sbb
sbb
and
or
xchg
jl
mov
ljmp
sbb
lock
pslld
mov
push
cmp
adc
adc
pop
scas
out
call
adc
mov
enter
sub
je
sarl
jb
pop
mov
adc
icebp
rcll
ret
mov
cmp
aas
rclb
xchg
add
test
or
mov
ljmp
cmp
dec
add
pop
add
popa
scas
add
push
adc
and
pushf
xchg
xor
mov
jmp
scas
cmp
add
out
jle
jbe
sub
arpl
jne
es
sub
dec
js
inc
nop
and
cmc
jo
out
ret
mov
jle
dec
or
dec
pop
dec
mov
in
add
jno
iret
es
dec
mov
popf
xchg
in
bound
lcall
orb
inc
pop
xchg
or
mov
sti
stc
jmp
push
cmpsb
in
xlat
push
int3
pop
or
outsb
inc
pop
imul
sarl
mov
mov
push
sub
rolb
dec
movsb
rep
loopne
in
mov
and
imul
or
inc
jle
mov
push
jo
jae
inc
repz
push
mov
adc
insl
jg
mov
out
jp
fbstp
aaa
repz
push
push
or
mov
sbb
out
outsb
push
and
push
mov
js
pop
addb
mov
sbb
clc
mov
test
sbb
and
shl
xchg
mov
jns
into
addb
aad
push
dec
out
fs
pop
cmp
idiv
sub
hlt
insl
dec
iret
add
int
test
dec
dec
mov
imul
in
fdiv
mov
xlat
das
shlb
lods
cs
das
lea
adc
or
jg
rol
dec
pop
lret
jnp
add
mov
fisubrs
in
mov
jns
jne
mov
int3
and
das
lret
xor
lcall
sub
icebp
cmpsb
pop
sbb
test
add
loop
pop
push
and
stc
and
lcall
ja
cs
idivb
lock
mov
mov
stc
and
mov
ljmp
xchg
xor
add
stos
pop
lock
adc
addr16
fnstsw
je
fdivrs
cmp
xor
lret
movsb
cmp
fistpl
mov
jne
cmp
js
out
je
dec
add
fnsave
notl
jnp
test
xlat
push
leave
test
fcmovb
mov
jo
movsb
in
in
int3
dec
in
cmp
sub
mov
inc
xor
lds
push
out
enter
in
jg
outsb
dec
aas
or
leave
push
sahf
add
push
sahf
jno
mov
adc
movsb
ss
cmp
inc
testl
mov
mov
stc
mov
mov
sbb
dec
sbb
adc
mov
outsb
dec
xchg
popa
jne
cld
mov
data16
int3
ds
adc
cld
repz
push
sarl
and
jbe
fxch
fmul
push
pop
in
in
insl
loope
gs
ja
sbb
stc
push
xor
mov
je
cmpsl
aam
cmp
push
lcall
cmp
int
jns
mov
clc
and
shrb
mov
jb
daa
popf
adc
dec
sbb
cmp
push
xor
mov
mov
outsb
cmp
and
pushw
mov
ljmp
dec
orb
sbb
fwait
adc
out
outsb
pop
mov
cmp
add
ret
dec
jl
dec
dec
outsl
insl
idiv
pusha
pushf
cltd
adc
sub
les
mov
int
pinsrw
inc
cmpsb
dec
repz
pop
jns
lods
push
and
pop
and
int3
out
lret
sub
mov
xor
pop
cwtl
out
daa
dec
fs
int3
inc
xchg
jne
push
mov
jns
xchg
fwait
adc
out
arpl
std
xor
pop
pop
int3
shl
in
call
sbb
and
mov
test
mov
ret
iret
and
xor
outsb
test
popf
and
xchg
orl
lds
jne
rorl
popf
sub
sub
add
xor
ret
inc
or
std
and
mov
lahf
cmp
shlb
ret
jnp
push
aad
jg
jle
flds
mov
jle
xchg
pop
cmp
jle
add
pop
mov
mov
push
inc
sub
sub
mov
adc
adc
dec
stc
push
push
dec
inc
mov
test
mov
adc
mov
cltd
or
jnp
bound
leave
sbb
sub
rcrl
out
dec
sub
fisubrs
sub
lea
inc
xchg
cmp
cwtl
lret
push
mov
call
lret
scas
lea
adc
cmc
andb
cmpb
and
and
mov
pop
mov
xchg
jmp
pop
xchg
adcl
shr
dec
ja
cmpsl
jg
and
leave
add
call
or
jae
inc
jb
pop
mov
adc
xchg
adc
movsb
fsub
addr16
pop
test
ja
xchg
movsb
pop
test
dec
xlat
cmp
xlat
dec
enter
jmp
scas
out
xor
jo
sbb
fwait
jle
inc
mov
pusha
pop
shrb
xchg
imul
int3
outsb
or
mov
lahf
out
insl
adc
lods
cmp
inc
pop
pusha
pop
ror
stos
jecxz
dec
loop
fscale
cmp
adc
ljmp
fs
xchg
rep
fistps
cli
out
les
adc
pop
lds
mov
xor
xor
xchg
call
inc
lcall
cmp
bound
xorb
scas
ljmp
add
out
cmpsb
push
jae
jge
mov
fs
cmp
xchg
xlat
dec
inc
and
lret
lret
dec
push
inc
inc
mov
mov
dec
dec
mov
cli
mov
cli
push
mov
jns
cwtl
cwtl
sub
jecxz
xchg
cmpsb
push
push
ficoms
push
pop
jns
ficomps
fnstenv
fsub
or
mov
repnz
lea
and
sti
add
ljmpw
sbb
adc
lret
rcrb
sub
divl
frstor
jnp
and
pushf
and
pop
hlt
ljmp
repnz
inc
xor
dec
pop
js
icebp
repnz
mov
cmp
dec
lods
cmc
lret
xchg
ret
jno
sbb
enter
and
lcall
test
ret
pop
mov
mov
orb
imul
filds
adc
push
inc
xchg
je
pop
daa
hlt
xlat
xchg
xor
mov
adc
loop
push
jnp
sbb
mov
pop
pop
rcl
or
adc
fs
cwtl
push
fs
push
out
jns
jmp
and
xchg
xor
mov
shlb
daa
jge
js
xor
into
lret
sub
dec
rclb
adc
push
mov
and
out
push
cmp
or
xchg
or
popl
xchg
adc
sbb
cmpsl
dec
mov
cwtl
inc
movsb
pop
movsl
fs
jl
add
inc
jp
pop
xor
enter
ja
imul
les
lea
aas
sub
jl
mov
int
xlat
jg
push
testl
sub
test
jecxz
and
stc
imul
repnz
xchg
cwtl
or
lcallw
mov
mov
or
cs
sbb
pop
dec
mov
js
cmp
in
addr16
out
sahf
repz
xor
pusha
cmpsb
and
loop
adc
aam
jno
push
and
xchg
das
dec
test
mov
jb
xor
mov
gs
ret
adc
xlat
lahf
xor
xchg
scas
lcall
add
lock
cld
mov
pushl
lods
ret
or
push
push
lret
pop
insb
push
das
ret
pop
pop
test
or
mov
inc
and
outsb
ss
test
test
push
cs
sub
shrl
sub
inc
dec
push
jmp
mov
je
inc
push
cli
adc
xchg
push
and
dec
lret
rcrb
repz
stc
stos
mov
add
sub
addl
mov
push
push
or
xor
stc
cmp
pop
sar
dec
mov
lock
push
outsl
jecxz
repz
pop
cld
mov
adc
hlt
clc
loopne
pop
outsb
sub
test
cmp
stc
lods
pop
sub
popa
adc
mov
shrl
cli
loopne
xlat
outsl
inc
jge
jnp
fldl
shrl
ds
jg
xor
xorl
mov
mov
lret
iret
andl
outsb
mov
sbb
dec
js
pop
push
aas
mov
ljmp
mov
popa
test
data16
push
add
mov
cmc
mov
pop
lds
nop
fwait
pushl
lahf
sbb
sub
sbb
fstps
jae
scas
push
push
iret
sbb
fnsave
xor
aas
lret
js
fldl
jbe
hlt
popf
iret
in
xchg
adc
push
adc
cs
rorb
aaa
cmp
dec
fistpl
popf
dec
pop
xchg
mov
xor
mov
test
fimull
jo
test
jecxz
and
sub
movsl
call
cmp
in
xor
test
ljmp
adc
jo
insl
fsubs
notl
cmp
xchg
jb
lods
loope
jg
mov
cmp
pushf
gs
adc
arpl
roll
test
hlt
sub
rdpmc
lods
test
mov
loop
pop
stos
dec
pop
dec
je
jns
aam
xchg
sbb
idivb
and
cmp
fcmovu
hlt
sub
or
dec
outsl
rcr
inc
fmull
and
jecxz
jb
std
lds
mov
and
mov
loope
sub
lds
xchg
lret
lock
mov
push
add
dec
mov
daa
add
adc
fcompl
or
ss
inc
push
rcrl
xchg
fnstcw
mov
loop
fildl
psubq
sbb
mov
xor
mov
loope
movb
fistpll
and
xor
sbb
call
jae
jp
pop
icebp
shlb
mov
ds
xlat
jmp
push
nop
xchg
mov
or
hlt
add
mov
jg
push
xor
cmc
sbb
push
adc
std
and
lea
sti
mov
lea
jb
mov
je
xchg
test
cmp
pop
mov
movsl
mov
jo
lock
mov
pop
jbe
enter
pop
sub
stos
sub
movsb
mov
in
adc
xchg
scas
xchg
sbb
shll
sub
push
push
mull
push
pop
out
dec
inc
jns
ret
inc
in
into
jns
inc
enter
xchg
pop
xor
jl
mov
mov
rcll
jbe
data16
in
xor
and
cmp
fstl
out
int
call
daa
mov
out
mov
pop
test
shr
ss
dec
and
pop
mov
push
and
add
xchg
pusha
in
xchg
sub
xchg
aad
or
xor
shll
jl
sahf
ds
leave
jmp
mov
push
lahf
stos
cmp
rcll
mov
inc
out
and
in
push
sub
or
rcpps
jmp
mov
dec
iret
aad
pop
pop
mov
pop
xchg
jg
add
repnz
shrb
icebp
out
jle
pop
outsb
jbe
add
inc
xor
mov
pop
test
mov
test
mov
mov
jp
fidivs
je
xchg
in
int3
push
sub
xlat
fsts
stc
fwait
push
xchg
cmc
push
pop
push
sbb
mov
add
ret
lods
pushw
cltd
push
sub
or
jp
xchg
xchg
mov
filds
arpl
dec
shll
movsl
mov
sbb
xchg
hlt
mov
cmp
fs
mov
sub
or
xchg
and
add
jge
ret
scas
sahf
mov
dec
scas
andl
push
test
aaa
xchg
or
fidivl
cmp
jmp
push
iret
rcrb
les
add
mov
mov
aam
adc
adc
sbb
jl
mov
xchg
js
cmp
daa
ret
dec
lods
imul
jns
mov
add
imul
into
dec
fcmove
mov
repnz
out
imul
jge
loopne
xor
stos
mov
mov
hlt
and
inc
scas
inc
popa
pop
lock
pop
pop
cmp
imul
add
add
pop
roll
stos
push
aad
std
aas
mov
jb
push
dec
or
es
sbb
inc
mov
in
jb
or
jo
mov
mov
in
jge
mov
sti
loopne
push
inc
leave
push
cmp
ljmp
push
shrl
out
jno
push
mov
data16
fcoml
push
fsubr
mov
popa
into
std
clc
jo
scas
ljmp
lods
adc
xor
mov
adc
je
loope
pop
in
inc
push
jg
lds
clc
mov
jnp
inc
xchg
data16
cli
jne
pop
out
or
movsl
mov
inc
movb
or
xorb
jp
mov
push
leave
sub
lret
sarl
cmp
mov
and
cmp
hlt
mov
sbb
jg
or
mov
cmpsb
pop
test
jne
sbb
and
jo
loope
xchg
lret
sub
roll
and
daa
in
mov
dec
xchg
push
stc
sub
xor
mov
cmp
loopne
leave
dec
or
mov
adc
add
xchg
xlat
pop
out
test
das
mov
ja
fdivr
xor
sbbl
inc
add
and
and
push
push
ss
cwtl
sbb
enter
addr16
pop
sarb
arpl
nop
sub
fucomi
add
cwtl
loop
xor
xchg
pop
sub
int
push
insb
lock
lea
cmp
pushf
or
dec
mov
addr16
pop
cmovo
outsl
mov
test
aas
rorl
xor
pop
inc
push
inc
sti
test
hlt
jp
cmp
popf
sub
addr16
inc
pop
sbb
shlb
or
jno
stc
sbb
mov
push
inc
jb
out
popf
sbbl
jg
test
fwait
into
sbb
test
ss
xchg
pop
stos
sbb
div
jecxz
in
adc
std
adcb
pushf
es
scas
push
push
sub
jmp
in
fwait
xchg
adc
cli
pop
jg
adc
scas
es
dec
inc
dec
mov
xchg
or
loop
imul
daa
les
jnp
and
mov
xchg
cmp
imul
bound
jbe
fsubrl
ds
loopne
mov
xor
sbb
and
push
imul
daa
sahf
xchg
addl
push
push
mov
ret
pop
xchg
enter
stos
sub
outsl
inc
shrb
lret
mov
push
or
imul
repnz
mov
addb
int3
fs
js
in
lret
movsl
je
repz
adc
ja
call
lods
lret
mov
aam
mov
or
jnp
add
pop
mov
xchg
sub
jno
cld
xorb
les
mov
mov
call
adc
or
sub
mov
adc
adc
call
jb
loop
out
inc
mull
jmp
adc
dec
and
out
or
test
mov
adc
lcall
ds
xchg
adc
push
lret
pop
cmp
dec
sub
or
imul
sub
mov
mov
dec
jp
popf
dec
and
mov
inc
daa
or
jmp
or
loopne
imul
out
adc
cld
dec
push
jg
mov
jl
fs
gs
nop
inc
push
jle
loope
sbb
hlt
push
push
inc
xor
lds
cmpsb
xchg
fsubrl
adc
out
loopne
adc
imul
add
xchg
or
insl
pop
and
fdivrp
jecxz
pop
mov
xlat
in
xor
jne
inc
test
push
lods
sub
xor
xchg
gs
inc
inc
xchg
stc
sete
fisttpl
lahf
popf
es
inc
adc
leave
stos
loope
fbstp
lods
cmpsl
aad
sbb
mov
xor
adc
icebp
or
in
loopne
das
cmp
xchg
fimuls
fimull
jae
add
test
and
mov
cvtdq2ps
sbbl
cmc
and
dec
mov
and
aas
jp
jg
lea
mov
lret
call
in
and
cwtl
cmc
xor
movsl
mov
and
cmc
or
mov
xor
aaa
std
xchg
push
dec
and
shrl
adc
insb
add
cmpsb
lret
push
inc
test
lds
in
mov
mov
aad
push
xlat
mov
xor
jns
out
scas
dec
pushf
fs
in
sbb
jno
sbb
mov
pop
push
test
inc
pop
sub
jge
xlat
push
movsl
test
and
inc
cs
in
movsb
push
xchg
jno
mov
test
addr16
jl
xchg
pop
lock
lret
sbb
cwtl
aas
xchg
push
mov
jnp
xor
cmp
hlt
mov
push
mov
adc
dec
psllw
mov
stos
fistps
add
stc
add
xor
push
mov
iret
daa
pop
fildll
mov
sub
jp
xor
test
mov
test
mov
inc
popf
out
sub
or
add
mov
push
stos
add
mov
in
ret
imul
ret
or
xchg
push
mov
std
add
sbb
lcall
mov
xchg
jne
sti
pop
push
jg
andb
or
stos
test
sbb
mov
scas
and
jns
inc
add
rcr
scas
dec
dec
sar
icebp
insl
mov
pop
mov
mov
inc
cs
pop
dec
add
or
pop
pop
stos
pop
mov
xchg
and
rcll
xchg
pop
imul
cmp
stos
ja
mov
mov
lcall
dec
popf
rcl
mov
sub
jae
ret
xchg
fwait
test
mov
mov
mov
es
ret
adc
cltd
outsb
inc
test
cltd
out
push
repnz
je
or
es
and
xchg
icebp
jge
push
mull
jae
dec
scas
insb
xor
pop
ret
or
sbbb
pop
out
insl
mov
cltd
mov
int3
xorb
mov
push
lret
add
fdivrl
pusha
repz
inc
adc
adc
js
mov
sbb
outsl
sub
test
mov
mov
push
sbbb
jno
lret
sub
pop
mov
xchg
ss
cmpsl
add
or
xor
mov
dec
add
sbb
and
subb
rclb
dec
and
and
fdiv
push
add
mov
or
push
mov
push
pop
test
loopne
ret
cli
iret
aaa
fsincos
push
and
sarl
xlat
mov
sub
push
test
arpl
jbe
sbb
pop
aaa
jp
les
xchg
test
ror
jne
repz
lea
and
jecxz
roll
pushf
mov
pop
fsubr
push
js
cs
std
faddl
xor
ret
mov
sti
adc
sub
dec
lods
dec
ficompl
dec
stos
add
jl
enter
and
push
lcall
out
sub
loopne
pop
cmp
lds
inc
fcomps
adc
sub
mov
es
sub
mov
in
fcomps
out
xchg
mov
dec
mov
inc
jp
ja
or
jo
jg
xor
mov
xorb
pop
decl
cmp
pop
lods
incl
ret
dec
test
push
aas
test
cs
nop
lock
xlat
mov
test
cmp
jle
shll
xchg
xchg
adc
inc
jb
mov
pusha
es
gs
xchg
pusha
adc
xchg
jmp
jno
imul
ret
xchg
ja
in
sub
xor
lds
in
repnz
sbb
ja
sub
cwtl
daa
rorb
mov
pop
aas
dec
je
mov
mov
inc
jb
push
lock
inc
stos
xchg
cltd
dec
add
out
push
adc
roll
mov
sbb
xor
jg
in
push
arpl
add
outsb
mov
jecxz
jg
or
fs
sub
push
mov
fisubrs
jle
test
mov
in
or
or
call
or
into
mov
ret
scas
sbb
lret
cmp
mov
push
shlb
cmp
outsb
sub
jne
stc
or
rol
lret
jp
jae
or
cs
adc
lds
cmpsl
mov
ret
cmp
xchg
or
sub
xchg
pop
cmp
hlt
jmp
ret
inc
xor
std
cwtl
xor
pop
movsb
aad
rcrb
xlat
shll
jle
fmuls
xchg
cmp
cmp
roll
iret
shl
xchg
pop
push
test
popf
aad
push
xchg
dec
add
enter
mov
test
test
out
and
pushl
and
fisttpl
sbb
adc
jno
add
sti
xlat
or
sahf
imul
lret
imul
mov
push
jecxz
loop
lods
cmp
push
and
xchg
loope
and
pop
cwtl
popa
in
jp
push
hlt
sarl
and
test
cs
xchg
pop
push
xor
movsl
xchg
xchg
mov
or
aam
out
orb
mov
push
fs
fisttps
pop
pop
aas
cmp
inc
mov
cmc
ss
fisttps
cli
fs
fstp
push
add
lret
push
lods
push
mov
sbb
subl
sbb
adc
dec
cmp
nop
or
aas
jae
int
les
int3
jg
sub
mov
fisubl
leave
fs
addr16
mov
inc
pop
sbbl
adc
bnd
mov
push
and
and
mov
addl
pushf
jecxz
push
xor
push
and
ja
sub
repnz
xor
test
lods
call
inc
push
icebp
push
or
shll
call
iret
pop
add
in
jge
push
and
flds
outsl
scas
push
push
jns
inc
or
fs
int3
ja
cltd
bnd
notl
ljmp
sbb
pop
xchg
cld
xchg
xlat
push
scas
xchg
popa
jae
xor
xor
mov
jle
or
test
repz
push
out
pop
stc
push
or
cwtl
negb
in
pop
xchg
sbbl
insl
aaa
sub
mov
fwait
xlat
push
outsb
jp
loope
hlt
es
xchg
push
inc
xchg
xlat
repz
test
add
push
sarb
jbe
fwait
mov
mov
jle
mov
pop
in
in
pop
jo
sbb
cltd
jmp
xchg
jo
mov
cli
imulb
xlat
mov
jge
movsl
in
mov
fistl
pushf
mov
lret
scas
xlat
scas
iret
xor
orl
or
loopne
pop
dec
dec
mov
sbbl
sbb
int3
sbb
jb
pop
cmpsl
adc
add
imul
push
push
mov
inc
test
popf
push
pushf
dec
push
andl
jp
jbe
ffree
add
scas
mov
mov
dec
mov
add
cmc
xlat
rorl
dec
fistpl
jge
and
imul
mov
push
xchg
lds
fisttpll
dec
mov
xchg
add
mov
or
inc
sbb
push
pop
mov
push
mov
lods
cmc
pop
push
adc
add
jnp,pt
ds
ret
scas
and
inc
jae
push
js
stc
adc
inc
dec
lea
dec
push
out
mov
and
fsubrl
lods
pop
aad
push
gs
lret
jmp
cmp
fcompl
daa
xchg
imul
iret
mov
test
int
mov
scas
mov
push
jns
push
das
lcall
inc
xchg
loopne
sbb
and
mov
pop
xchg
push
cmp
mov
adc
stc
inc
hlt
hlt
jbe
dec
dec
mov
data16
pop
sub
mov
add
in
repz
xor
in
fwait
sahf
xor
xchg
into
pop
xor
lock
ss
leave
mov
or
dec
jge
jp
stc
cmc
mov
int3
dec
in
mov
push
movsb
pop
sbb
dec
push
mov
dec
rcll
pop
cmp
lret
cmp
ss
das
and
mov
pop
adc
and
sbb
sub
loope
inc
ror
lds
out
mov
cmp
outsb
sti
rorl
or
call
movsl
stc
test
pop
inc
push
adc
aas
insb
inc
sub
inc
pop
and
pop
repz
test
jo
in
push
sbb
adc
adc
popa
aad
out
jmp
mov
dec
sub
push
add
sbbl
jmp
push
dec
xchg
mov
and
pop
jmp
lea
xor
loop
pop
push
mov
push
fiaddl
mov
daa
and
push
pusha
subb
pop
mov
mov
jb
or
mov
sub
or
lahf
in
adc
xchg
cmp
cmp
adc
dec
xchg
loopne
int3
sbb
sbb
fcomps
std
or
or
out
mov
mov
push
pusha
cli
pop
mov
dec
cs
and
imul
out
mov
and
adc
jbe
fmull
sbb
xchg
ss
or
fmull
lods
test
js
or
bnd
dec
sub
in
sub
bound
cmp
fstpt
call
stos
xor
test
pop
cmpsb
lods
js
sub
xchg
xchg
out
pop
arpl
cmp
movsb
pop
mov
sti
andps
mov
in
call
sbb
pop
adc
cs
cltd
std
sbbb
sub
lods
aam
rcrb
bnd
sbb
add
dec
xor
dec
test
xor
cmpsl
cwtl
and
in
push
clc
in
xchg
ret
xchg
in
pop
sahf
std
cmp
in
sbb
fstl
ror
pop
jmp
popf
insl
jbe
adc
sbb
test
leave
aad
jg
cmp
daa
jg
xchg
lahf
flds
sarb
pop
xor
cmp
out
xchg
inc
cmp
mov
xor
stos
out
std
or
js
inc
jp
aam
mov
dec
mov
cmp
fs
aad
sbb
mov
daa
sbb
dec
inc
push
sarl
stos
ja
jmp
inc
lock
adc
fisttpll
shl
dec
int3
ficoml
mov
push
lock
xor
ljmp
je
popf
lds
adc
jns
hlt
stc
jle
pop
fimull
sbb
and
jae
insb
addr16
pop
mov
ja
aaa
inc
xchg
sub
shlb
cmp
lock
js
int3
push
cmp
cmp
push
push
repz
sbb
inc
cwtl
in
sti
nop
fisubl
scas
gs
rorl
sub
inc
mov
aaa
add
sarb
aaa
insb
int
or
cmp
pusha
inc
mov
cmp
gs
jmp
fimuls
add
xlat
ljmp
cmp
jb
movsl
mov
xchg
jb
add
jo
add
pushf
mov
adc
xor
xor
mov
and
ds
pusha
inc
inc
jmp
mull
xchg
fldl
mov
jp
sub
andb
jae
in
ja
iret
stos
pop
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
repnz
out
mov
adc
bound
inc
adc
sbb
pop
mov
stos
or
sub
outsl
pop
or
lods
adc
imul
bound
cmc
fisubrl
rorl
jne
add
and
xchg
cmp
add
aam
lea
dec
xor
out
mov
iret
cld
fwait
cwtl
cwtl
sub
and
lahf
lret
and
sub
or
dec
scas
fisubrs
les
mov
or
inc
cmp
addr16
adc
lahf
insl
dec
in
rcll
dec
dec
mov
add
aas
movsl
pop
xchg
iret
lea
jmp
mov
mov
stos
jl
mov
inc
int3
and
adc
mov
cmpsb
cmp
mov
sbb
cmc
out
adc
mov
mov
pusha
push
mov
enter
into
push
pop
xchg
sarl
lods
call
xor
jecxz
mov
add
or
cld
mov
jae
mov
insb
test
jo
xorl
dec
mov
add
jle
push
loope
pop
xchg
add
hlt
out
loop
xchg
testl
out
dec
test
jnp
pcmpeqw
hlt
sub
inc
mov
movl
scas
jp
aam
std
xchg
and
and
jle
add
sbb
in
push
shlb
fs
adc
sub
and
cld
inc
push
jmp
cmpsb
pop
cmp
mov
pop
dec
imul
arpl
cmp
push
add
inc
dec
and
add
cld
addr16
aam
fisubs
push
shrb
sbb
cltd
es
cwtl
xchg
or
mov
pop
jmp
std
rcrl
test
xchg
rcll
stc
cmp
sbb
xchg
mov
ja
push
and
les
or
xchg
dec
push
xchg
pop
jno
dec
pop
push
cwtl
cmp
shlb
jmp
adc
and
aam
pop
mov
xchg
push
flds
jg
pop
or
flds
imul
cmp
mov
hlt
push
inc
dec
xor
jge
in
icebp
iret
loopne
mov
add
hlt
mov
cmp
cmp
aaa
mov
lods
andnps
fs
pop
nop
jl
nop
out
xor
jge
rorl
test
adc
sbb
add
sahf
add
xchg
lahf
or
int3
inc
mov
mov
fwait
lret
rcrl
loopne
add
ret
jge
lahf
sub
imul
divl
push
mov
fisttps
div
and
mov
dec
inc
mov
jne
fs
sbb
mov
sbb
sbb
icebp
es
outsl
xchg
mov
clc
mov
movlps
fdivs
icebp
xchg
in
and
ja
dec
mov
std
jnp
sahf
cld
pusha
ja
inc
mov
cmp
cmp
sarb
sti
add
xor
aaa
dec
cmp
jbe
push
xchg
jl
sahf
in
movsl
cmpsl
sarl
sarb
mov
mov
pop
adc
cmpl
sahf
cltd
or
jnp
test
in
cs
popl
outsl
je
scas
and
and
xchg
fptan
push
and
rcrl
xor
xchg
pop
inc
mov
popa
mov
cltd
fs
aad
pop
push
jge
mul
lods
bnd
incl
sbb
loop
js
mov
inc
lods
cs
and
xor
mov
inc
pop
jle
aaa
jne
pop
leave
sub
dec
iret
xor
cltd
mov
inc
repz
adc
in
in
push
gs
adc
out
data16
mov
test
xor
sbb
and
jb
repz
dec
mov
add
sbb
iret
stc
add
mov
fistpl
push
dec
out
nop
callw
std
sti
push
es
push
pop
mov
inc
mov
fidivrl
test
add
jnp
push
stos
push
movsl
gs
insb
sub
mov
mov
mov
aaa
dec
lahf
movsb
imul
xchg
ss
cmc
lods
mov
xlat
cmp
cmp
jo
inc
xor
push
fld
movsl
mov
mov
roll
iret
pop
pop
xor
inc
fwait
sub
xchg
push
sbb
push
sahf
push
ficompl
je
mov
sub
xchg
data16
mov
cmp
xchg
jno
ret
pop
xchg
cmc
xchg
xor
lret
sub
inc
inc
inc
dec
pop
dec
maskmovq
notl
bound
add
mov
adc
or
adc
bound
xchg
xchg
sub
add
outsb
sbb
jbe
jge
mov
and
lds
pop
int
jle
cmp
or
aad
or
ficoms
ss
sub
out
or
and
lock
push
push
loope
inc
std
xchg
ret
ror
iret
mov
adc
sub
repz
sbb
mov
dec
enter
mov
notb
mov
gs
mov
pop
sarl
dec
insb
and
xor
add
sbb
inc
stos
xchg
aas
mov
mov
out
loopne
push
inc
sub
sbb
mov
cs
ret
mov
cltd
loope
sub
std
add
mov
aaa
mov
scas
je
jl
cmpsb
push
rcll
mov
mov
or
mov
std
pop
repz
stos
fsubrp
push
hlt
loope
pusha
data16
rclb
pop
call
sub
adc
aaa
mov
mov
add
mov
add
add
jg
ljmp
es
inc
xchg
addr16
into
xor
add
mov
xlat
shrb
decl
and
lcall
loopne
pop
scas
fisubl
lret
mov
dec
lcall
es
and
or
adcl
dec
rcll
cmc
sbb
push
xor
jne
xor
popf
movsb
mov
cwtl
pop
mov
movsl
mov
xchg
imul
push
or
cwtl
into
es
cltd
clc
andb
mov
stos
daa
cwtl
inc
jg
xor
sarl
mov
jge
hlt
cmpl
lahf
cmp
add
imul
sbb
out
mov
test
pop
and
cltd
enter
or
rorb
imul
inc
shr
pop
rcrb
mov
push
sbb
or
fcmovbe
mov
test
std
and
jne
aad
sbb
mov
or
f2xm1
xchg
xor
sbb
mov
xchg
dec
dec
call
sahf
sub
int3
xchg
xor
cmp
data16
in
jge
xchg
ret
adc
int
movl
cwtl
or
test
push
iret
push
nop
fadds
pushf
arpl
pop
cmp
sub
idivl
and
imul
leave
jge
bound
xchg
fidivl
push
sbb
cmp
enter
push
mov
and
rolb
push
std
out
mov
lret
mov
push
lds
cmp
fldcw
mov
ja
inc
cmp
insb
lcall
enter
rcr
fwait
repz
dec
sbb
xchg
xchg
repz
inc
je
and
or
frstpm(287
add
les
mov
notb
rcrb
mov
std
mov
push
ss
pop
stos
scas
inc
mov
sbb
mov
fnstsw
sub
mov
cmp
cmp
and
stos
mov
gs
scas
lods
mov
testl
jne
mov
ja
js
inc
lret
cmpsl
aas
dec
pop
int
mov
fistpll
cwtl
aam
roll
push
jo
sub
jno
xor
repnz
int
jae
and
outsl
or
mov
push
add
aaa
mov
in
jp,pt
mov
in
mov
repz
nop
bound
inc
cmp
repnz
push
daa
xchg
adc
cmp
sahf
adc
cmc
mov
pop
shl
scas
ret
adc
andl
dec
fdivr
pop
stc
test
scas
fbstp
je
or
fldt
or
repnz
add
dec
stos
lcall
inc
push
inc
xor
cmp
pop
inc
mov
mov
test
in
and
lcall
xchg
lcall
jge
jno
bound
sti
mov
cmp
push
inc
pop
mov
out
shll
fldl
xchg
sbb
cmp
ja
xchg
ds
and
push
not
push
mov
cmp
dec
xchg
mov
pop
xchg
fcoml
push
jnp
and
and
mov
cmp
aad
push
jecxz
outsl
cld
mov
gs
cmpsb
push
mov
jne
ds
pop
adc
scas
push
or
pop
lock
cmpsl
pop
push
add
test
mov
and
movsb
into
and
dec
in
sahf
mov
dec
out
push
shlb
scas
push
outsl
enter
repnz
bound
inc
push
inc
data16
pop
in
push
clc
xchg
or
iret
loope
jnp,pt
arpl
hlt
das
out
pop
sub
sub
push
mov
fmull
jecxz
pop
mov
ret
hlt
lret
iret
mov
outsb
popf
push
inc
mov
pop
adc
test
cmpsl
ret
lret
mov
push
inc
hlt
leave
lcall
fcmovbe
cld
nop
pop
mov
sbb
sbb
sarb
popa
sub
push
mov
in
pop
repz
push
and
adc
shll
frstor
push
sbb
adcl
cmp
inc
xchg
and
or
dec
loop
add
out
xchg
jb
int3
or
mov
sub
push
fwait
cmp
push
enter
into
sti
jle
or
and
dec
sub
data16
cmp
ljmp
out
push
mov
mov
jge
fbstp
xchg
pop
xor
movsb
cmp
test
jne
inc
movsb
out
mov
popf
test
int3
push
loopne
xchg
push
sbb
jbe
movsl
dec
das
jg
or
fistps
fiaddl
test
cld
shlb
or
shll
jae
and
int3
add
fimull
out
in
test
sbb
xor
fisttpl
in
fistps
mov
adc
les
add
jo
add
mov
cltd
xchg
push
inc
xchg
das
mov
daa
mov
mov
jecxz
movb
mov
mov
pushf
mov
int
mov
cmp
daa
dec
out
incl
push
lds
cmpsl
std
push
mov
xor
fbld
mov
xchg
repz
je
repnz
dec
rcl
jg
mov
dec
dec
mov
lret
or
or
mov
in
adc
movsl
incl
xor
push
sarb
mov
cltd
jbe
inc
push
adcl
sbbl
mov
inc
adc
mov
outsb
or
bound
adc
cmp
pop
xchg
loope
cmpsb
pusha
aam
or
scas
push
cli
sub
jmp
enter
push
xchg
or
push
dec
movsb
out
pop
iret
aad
xor
cmc
inc
cmc
test
jmp
sub
rcr
cmp
xor
push
mov
and
mov
jae
sbb
sub
int3
test
scas
out
mov
adc
fstpl
cmpl
rorb
mov
int
mov
pop
pop
sbb
lret
push
cmp
jmp
stos
or
and
xor
mov
cvttps2pi
push
pop
or
ret
mov
xor
shrl
loopne
out
scas
adc
pusha
mov
out
cmp
xor
les
icebp
or
mov
xor
cmp
mov
lea
aad
adc
pop
stos
sub
in
jmp
or
in
loope
mov
mov
js
and
cmp
int3
sub
dec
add
jmp
mov
xlat
push
repnz
call
lods
cli
xchg
repnz
cld
mov
mov
jno
mov
adc
aad
xchg
mov
cmp
jge
jno
xchg
nop
inc
cld
stc
mov
cld
or
sub
cltd
ds
pop
es
jg
outsl
stos
sbb
lods
enter
xchg
mov
xorl
icebp
sub
adc
scas
fisubl
mov
imul
cmp
push
xchg
leave
je
mov
xchg
jge
adc
adc
mov
mov
adc
shlb
mov
adc
or
enter
mov
xchg
dec
adc
aad
or
pop
push
fdivp
sub
sub
paddsb
leave
sub
pop
scas
int3
movsb
fld
mov
jne
mov
and
cmc
dec
test
pop
ret
push
repnz
inc
pop
lcall
js
in
rcll
out
insl
cmpsb
imul
loop
js
sahf
divl
fstp
movsl
sbb
data16
pop
add
movsl
jo
push
in
mov
cld
inc
jns
mov
insb
mov
dec
mov
nop
imul
jp
sahf
pushf
and
xchg
ljmp
dec
mov
cli
sub
jnp
fmuls
xchg
and
mov
sub
test
sahf
pop
in
jns
mov
hlt
sbb
arpl
jb
adc
pop
and
xchg
add
outsb
movsl
mov
push
nop
stos
and
scas
sub
jo
dec
mov
dec
subl
dec
dec
arpl
cli
xor
and
or
dec
fidivs
push
dec
imul
cmpsb
lahf
mov
jl
mov
pop
mov
add
outsb
leave
mov
mov
out
push
stc
popf
imul
xchg
scas
adc
pop
iret
push
fists
xchg
jb
cs
repz
mov
xor
std
outsb
out
test
inc
pop
test
jae
pusha
sub
adc
lock
mov
addr16
stos
and
imul
adc
jge
out
mov
mov
mov
clc
fnstcw
fiadds
adc
mov
or
leave
test
sbb
cltd
shrl
mov
daa
lds
repnz
in
pop
inc
andl
sbb
cwtl
test
mov
pop
sbb
les
cld
std
mov
xor
xor
imul
xchg
sarl
jecxz
inc
mov
call
dec
ds
mov
cmp
stos
mov
aad
rclb
test
mov
adc
les
push
xor
adc
mov
cmpb
pop
or
inc
xor
iret
mov
jbe
shll
iret
jle
scas
jge
xchg
mov
push
jbe
js
push
sti
mov
jge
daa
mov
xchg
jmp
pusha
das
int3
vaddsubps
jne
idivl
aaa
mov
movsb
sti
pop
inc
arpl
scas
add
pop
in
outsb
pop
mov
dec
adc
icebp
ss
or
xchg
idivl
movsb
lahf
xchg
push
stos
loope,pt
pop
cmc
jp
mov
mov
rcl
das
faddp
js
jle
dec
jmp
mov
testl
loop
sbb
pop
je
jne
loopne
mov
push
shrl
mov
fcomi
sbb
popf
push
arpl
cmp
push
repz
jbe
inc
xchg
jmp
imul
jb
add
test
ja
stos
or
add
cmp
add
mov
pop
pop
push
out
jle
popf
pop
inc
add
or
xchg
mov
adc
xlat
sbbb
pop
adc
lea
stos
pop
js
jl
inc
cmp
stc
outsb
lock
add
test
insl
addr16
ds
arpl
pop
push
orb
adc
push
inc
insl
xchg
lahf
pushf
pop
push
cwtl
jl
fisubs
xor
bound
out
pusha
sbb
pop
clc
jmp
les
incl
sti
add
dec
movsb
in
and
iret
scas
es
ret
jne
push
mov
mov
and
imul
cmpb
shlb
push
jecxz
fcomp
add
imul
xor
sbb
or
sub
jl
fcmovne
cmp
mov
xchg
fucomp
mov
scas
cmp
outsb
cmp
imul
jbe
jge
dec
cld
or
rcrb
call
jp
xor
ljmp
mov
xor
insl
mov
clc
jge
aam
scas
orb
mov
aam
insl
mov
fisubl
sub
ror
sbb
mov
into
ja
cmp
repz
and
jl
jb
or
ss
arpl
iret
jo
pop
sti
js
popf
into
rcll
xchg
jbe
fwait
push
xchg
rcl
xchg
dec
push
adc
nop
pop
insb
or
jnp
mov
cld
pop
sarl
pop
ds
mov
lcall
push
and
packuswb
jbe
gs
inc
fyl2xp1
mov
ret
repz
cld
pushf
sbb
jp
insl
mov
out
lds
cli
gs
cmp
or
push
xor
push
int3
into
stos
adc
jno
hlt
pop
cmp
sub
test
test
pop
fcom
pop
je
mov
and
mov
or
xor
jne
lret
cmpb
mov
mov
stos
push
call
faddl
mov
pushf
or
xor
jo
int
add
xchg
scas
inc
enter
stos
rcll
xor
mov
push
sub
sahf
xchg
in
adc
inc
fs
in
xchg
test
addl
push
dec
gs
movsb
andl
fwait
add
mov
cmp
jbe
decl
dec
loope
jns
jecxz
mov
insl
movsl
add
pop
dec
xchg
mov
push
arpl
daa
inc
enter
cmpsb
inc
fcomps
mov
inc
pusha
call
sbb
sub
dec
inc
pushl
popf
add
cmp
ret
sub
jg
mov
jmp
add
xor
push
push
or
aad
and
stc
in
into
cmp
rcl
movsl
xchg
inc
iret
mov
mov
and
fwait
popf
adc
lds
mov
and
repnz
cltd
jecxz
push
adc
aas
jp
jo
cmp
jne
fsub
scas
mov
xor
gs
fists
pop
aaa
lcall
lock
xchg
or
cmp
xor
push
aas
push
fs
rorl
aam
insl
add
or
ds
jmp
in
cmp
mov
jle
push
fisttpll
mov
sarb
imul
mov
dec
jnp
push
cmc
dec
stos
xlat
or
mov
jb
push
int3
inc
scas
push
mov
jg
in
iret
cltd
pop
cmpsl
xlat
outsl
movsl
mov
cmpsl
jmp
icebp
rcll
hlt
adc
add
jae
push
sbb
aad
outsl
hlt
sbb
jge
jl
fcompl
lret
push
mov
into
call
jp
adc
xchg
popf
fwait
outsb
add
and
xchg
push
xchg
sbb
xor
mov
je
sub
mov
jge
sub
add
add
mov
addl
xchg
sbb
push
mov
in
ss
xor
xor
adc
sub
xor
xchg
push
loopne
or
mov
std
in
cmp
popa
es
insl
popf
jmp
fdivrl
rcrb
loop
loopne
addb
xchg
sbb
es
dec
jge
xchg
loopne
sbb
inc
jmp
je
dec
and
jne
xor
inc
inc
dec
jae
add
ret
cmp
insb
std
pop
push
fists
mov
cwtl
xchg
rclb
testb
in
xor
cli
sbb
iret
xchg
sbb
aas
sub
jp
xor
mov
inc
into
add
test
xchg
cmc
mov
xchg
aaa
out
testb
xchg
fwait
out
arpl
lcall
jae
scas
mov
icebp
mov
add
jmp
or
andb
mulb
inc
sbb
cld
bound
and
push
sub
addr16
jnp
mov
xor
push
cmp
ja
jmp
mov
movsb
out
adc
rorl
fdivrl
cld
jmp
jecxz
cwtl
subl
loope
adc
mov
dec
mov
mov
ret
aaa
xor
aam
inc
shrl
aas
aam
or
std
and
pop
xchg
mov
sbb
adc
neg
mov
mov
pop
xlat
push
and
inc
test
shr
jle
imul
lea
sar
insl
addb
lock
cli
or
cmp
adc
or
je
in
jecxz
adc
xor
cmp
inc
jae
mov
jbe
stc
hlt
pushf
mov
imul
xor
add
pop
jno
fidivs
out
pop
push
shrb
jb
push
loop
sahf
push
cmc
jns
testl
jno
jo
jne
inc
cwtl
jecxz
push
mov
mov
iret
dec
rclb
es
mov
xchg
and
aam
and
enter
pop
iret
movsl
sahf
stos
mov
sbb
popa
data16
mov
into
xchg
sahf
inc
es
jb
sbb
adc
cmp
in
rorb
mov
mov
jbe
xor
sub
mov
pop
je
cmp
xor
clc
fwait
adc
or
notb
movsb
bound
dec
sub
in
fiaddl
mov
ret
sbbb
arpl
xor
in
mov
cwtl
faddl
sub
out
cmp
or
lcall
das
loop
xchg
scas
je
shll
shll
mov
mov
out
ds
out
out
mov
sarb
sbb
add
shl
mov
push
imul
mov
popf
adc
lods
loop
jmp
mul
shl
and
pop
mov
mov
shrl
in
mov
rorb
mov
inc
jmp
mov
arpl
mov
jno
outsb
popf
and
inc
mov
push
or
lock
or
jecxz
add
mov
cmp
jg
xlat
ficoms
test
fadds
inc
mov
rcrl
leave
jge
test
pusha
test
inc
incb
inc
aaa
mov
lahf
stos
pop
mov
jmp
adc
push
loope
lock
mov
mov
lahf
out
lret
inc
push
or
adc
push
push
cld
movsb
pop
lods
xchg
pop
stc
xor
pop
lcall
lock
dec
pop
pop
lret
sbb
pop
adc
dec
fldl
lds
adc
lods
inc
inc
jmp
in
testl
cmp
cli
xor
or
add
ret
sub
rcr
movsb
cli
sbb
push
inc
cmp
mov
int3
js
movsb
pop
sbb
mov
jae
popa
push
push
ficoms
xchg
mov
aad
pusha
std
adc
inc
xor
int3
push
lcall
pushf
sbb
add
fcmovb
sub
into
incb
sub
push
pop
add
xor
and
mov
inc
inc
bound
inc
aam
xlat
mov
and
pop
mov
dec
xchg
lea
mov
jge
pushf
adc
enter
mov
daa
cmpsl
in
add
push
outsl
jo,pt
pop
xchg
jo
mov
jo
imul
add
xchg
cmpl
mov
sub
sub
jg
mov
add
xor
jle
jle
out
adc
fsubrs
push
mov
sbb
rcrb
addb
lock
sub
int
fists
jnp
movsl
aas
insl
or
rorl
jle
jmp
adc
pusha
dec
pop
pop
ja
pop
pop
sub
stc
mov
iret
dec
out
popf
pusha
clc
in
out
rcrl
sbb
lds
or
cs
adcl
push
push
std
xor
sub
mov
es
decl
leave
cmp
jmp
shl
mov
ljmp
or
std
mov
lcall
and
dec
dec
pop
enter
sbb
xchg
inc
scas
leave
shl
push
or
adc
sub
shrl
push
sub
stos
inc
xor
cmp
mov
jns
pushl
sbb
loope
aas
pop
movsb
nop
insl
sub
popf
mov
or
icebp
xchg
inc
rcrb
lahf
jmp
mov
out
test
and
xchg
sbb
push
xor
inc
xor
mov
in
adc
shlb
dec
ss
andb
movsl
add
nop
lea
rcll
nop
sbb
int3
loop
jle
mov
xchg
and
imul
imul
and
push
dec
rclb
scas
inc
call
bound
cmp
push
movsl
dec
xchg
and
and
dec
add
int3
jnp
ds
rclb
arpl
std
cmp
xor
lock
sub
xor
push
xchg
pusha
clc
xor
rorl
jne
lahf
loop
outsl
fs
dec
int3
cmp
je
inc
dec
ficoml
inc
cli
xor
push
iret
dec
and
xor
or
test
add
inc
inc
roll
rcrb
sub
mov
out
push
dec
shl
push
cmp
xor
push
inc
sub
jmp
mov
jecxz
push
pop
jle
xchg
insl
sbb
sub
movsb
hlt
std
sub
adc
mov
mov
jl
bound
aam
dec
add
fimuls
idiv
imul
jg
and
and
data16
mov
arpl
add
sar
xor
test
cmp
lods
xchg
and
mov
daa
xor
push
lods
push
aad
aas
xchg
mov
push
js
xor
sub
xor
adc
test
and
outsb
popa
jo
loope
fucomi
xor
roll
jne
jg
aaa
in
rorb
pop
add
jae
sub
ficompl
push
je
lds
cltd
punpckhwd
inc
aad
sbb
ds
ds
ret
bound
shl
inc
and
jne
push
negb
dec
mov
call
rorb
push
adc
xor
or
test
shll
daa
mov
daa
stos
xchg
adc
outsb
fwait
cmpsb
push
scas
dec
jmp
inc
clc
xchg
int
dec
mov
dec
or
rcrl
pop
xchg
ret
pushf
and
and
prefetch
cwtl
cmc
sub
fs
xchg
mov
lahf
jb
in
mov
jae
xchg
sub
mov
aas
ds
fcomip
sbb
in
jp
xchg
adc
push
mov
dec
sub
repnz
popa
jg
mov
adc
jns
xchg
xorl
sbb
push
pop
leave
dec
rcll
aaa
push
hlt
pop
in
adc
push
stos
push
loope
paddw
loop
jp
xor
cmc
cmp
les
mull
dec
jge
or
cmpsl
pop
cmp
and
scas
clc
pop
aaa
pop
mov
and
test
pop
push
int
stos
push
dec
outsb
repnz
stos
pop
scas
fstp
jne
adc
sbb
jne
hlt
xor
mov
lea
xor
pop
push
push
jnp
loopne
jge
lods
gs
mov
sbb
mov
lcall
cmp
testl
pop
adcl
dec
mov
push
dec
clc
sub
add
fcoml
xchg
jecxz
scas
mov
push
out
lds
cmp
call
aam
js
fwait
pop
cmpsl
sbb
loopne
dec
out
movsl
push
mov
or
repz
test
rcr
or
mov
sub
lds
push
or
out
mov
stos
lea
rclb
push
xchg
jns
cld
test
dec
in
pop
push
pop
mov
jae
xchg
pusha
das
push
cs
shlb
add
mov
inc
fwait
push
adc
lret
xchg
fcompl
dec
mov
adc
pop
mov
push
or
in
fbld
out
mov
jnp
pop
mov
stos
cs
add
movsl
or
fdivl
sbb
fwait
inc
and
aaa
sbb
aam
cmp
mov
mov
fcom
pop
push
lahf
ja
sub
cltd
fbld
add
test
mov
in
xchg
fisttpll
sub
sahf
dec
call
pop
mov
jne
mov
jecxz
jle
shr
mov
cmpsb
scas
lods
mov
cltd
aad
pop
jno
leave
mov
mov
fisubrs
adc
mov
je
repz
or
pop
add
cmp
sti
mov
ret
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
loope
mov
or
sub
push
push
clc
sub
in
mov
push
ja
mov
stc
lcall
aam
shl
imul
inc
pushf
lds
xor
pusha
mov
or
jg
cmp
lods
xchg
dec
out
add
mov
aam
adc
mov
push
js
cmp
ret
test
lods
pop
into
dec
stos
jne
in
cmp
in
jmp
sahf
out
ds
sbb
mov
add
ja,pt
cmp
mov
lock
aaa
mov
stos
aas
push
sbb
push
mov
lods
aas
inc
inc
mov
or
or
test
and
add
cmpsl
leave
faddl
out
adc
nop
leave
dec
add
sti
imul
pop
xor
ficomps
incl
dec
stc
addr16
sahf
or
jb
adc
and
aam
cmp
lds
jmp
pop
fs
or
cmp
mov
popa
aam
divl
aad
jp
popf
loopne
pop
lods
or
jb
ja
je
pop
pop
sub
sub
ficoml
hlt
push
nop
inc
lea
rolb
jmp
insl
jns
dec
mov
ljmp
pop
xchg
cltd
pop
imul
inc
loop
inc
mov
mov
and
bound
not
cltd
mov
lds
imul
inc
or
push
push
and
in
and
jo
int
dec
aaa
sub
dec
adc
fwait
hlt
push
iret
jmp
fs
idiv
xor
mov
xor
out
lret
fimuls
dec
test
mov
cwtl
and
mov
aam
lock
push
rcl
insl
add
cmp
xchg
mov
push
lcall
fimull
arpl
and
pop
cmpb
lret
test
add
ret
mov
or
mov
dec
pop
orl
xchg
xor
jnp
mov
mov
push
jno
dec
movsl
into
lods
imul
leave
inc
pop
jno
pop
adc
fwait
xchg
repz
jp
cli
icebp
jg
and
dec
inc
movsb
xchg
pop
pop
cmc
leave
xor
xchg
leave
pop
iret
shr
scas
cmpl
out
mov
in
or
insl
arpl
or
or
movsb
dec
jg
daa
sbb
inc
stos
in
mov
lahf
dec
xchg
lds
ret
push
les
sahf
adc
rclb
dec
movsl
sbb
fldl
sub
adc
xchg
cmp
shlb
and
test
dec
sbb
ljmp
outsb
mov
sbb
stos
mov
subl
push
push
aad
lods
nop
movsb
xrelease
out
popa
fwait
xchg
out
jmp
adc
push
jo
stc
jae
roll
addr16
jge
dec
mov
ficomps
ret
and
imul
test
xchg
ja
jecxz
dec
mov
dec
dec
stos
mov
cmpsl
adc
xchg
stos
jl
popf
stc
popa
les
push
data16
xchg
inc
sbb
sub
clc
stos
ret
mov
xchg
jecxz
push
mov
into
and
fildl
data16
lahf
lcall
pop
cmpsl
orb
adc
dec
test
xchg
js
pop
pop
inc
sub
cmp
cli
jl
mov
fcoml
ljmp
xor
arpl
mov
aad
add
test
mov
into
mov
lods
repz
sahf
push
icebp
jo
das
sbb
xchg
out
hlt
negl
sub
adc
add
pop
loope
jl
adc
les
mov
popa
inc
jbe
call
add
out
rorl
leave
loop
fdivs
fistps
movhps
jp
xor
aaa
int3
xchg
mov
push
push
sbb
cmp
push
loope
dec
jmp
jnp
cli
fldl
jge
aam
inc
dec
dec
cs
sarl
lret
sub
out
sub
cld
ret
sahf
sub
xchg
roll
test
or
add
lods
out
int3
inc
dec
mov
jl
pop
push
aam
arpl
push
ja
arpl
ja
out
scas
xchg
movsb
bound
add
gs
mov
fdecstp
hlt
lds
stc
je
push
mov
stos
stos
hlt
xlat
xchg
int3
xor
in
xor
stos
fisubs
push
movsl
scas
lock
es
push
out
cmp
pushl
cwtl
movsb
dec
loop
mov
sub
cmp
fidivrl
jecxz
dec
mov
aam
iret
in
xor
std
mov
mov
xor
cmp
testl
adc
sub
push
dec
jne
mov
mov
cwtl
stos
ret
xchg
sahf
aas
inc
add
xor
jno
mov
addr16
cmp
pop
das
in
cmpsl
les
stc
mov
mov
xchg
cmpsb
fsubl
mov
pop
adc
mov
pop
cmp
cmp
mov
jbe
or
or
aad
lods
repnz
lea
mov
and
imul
fdivs
mov
scas
pusha
in
clc
insb
mov
xor
xlat
and
mov
scas
testl
mov
push
dec
push
sarb
fwait
ss
lret
jle
add
and
cmp
repz
add
divps
adc
push
rorl
sbb
and
and
adc
clc
pop
ja
jb
xchg
imul
fsubrs
imul
xchg
cltd
mov
mov
inc
cmpl
cmp
outsb
push
mov
xchg
in
lock
mov
jbe
and
je
mov
sbb
aaa
inc
test
sub
les
or
jb,pn
imul
xchg
popf
sahf
inc
bound
mov
scas
or
jecxz
in
or
xchg
xchg
iret
mov
cmpsb
sti
popf
jmp
xor
xchg
xchg
mov
adc
movsl
sbb
cmp
mov
sub
dec
and
adc
xor
stos
pop
or
mov
adc
and
call
addr16
pop
or
xor
aaa
fldenv
xchg
in
sub
and
sahf
add
pusha
imul
lahf
pop
divb
orl
mov
daa
stc
mov
mov
movsl
icebp
nop
inc
pushf
dec
xor
pushf
and
mov
jb
rol
jecxz
mov
inc
imul
pusha
and
jp
in
shrl
in
ret
daa
data16
jb
pop
pushf
int3
mull
mov
rcrb
ss
ss
pop
adc
jp
and
scas
popf
jle
aam
xchg
pop
popa
dec
push
mov
pop
aaa
insl
sahf
inc
inc
subb
aam
decl
mull
mov
and
inc
jmp
in
enter
fdivp
push
movl
lea
lea
cmp
cs
in
or
or
jns
adcb
cwtl
lcall
dec
popf
jns
pop
push
mov
push
pop
add
or
mov
fdiv
cmpl
mov
jle
imul
lods
call
push
xor
fistl
fstps
jns
add
xchg
mov
repnz
pusha
inc
sbbb
push
push
adc
adc
into
mov
or
ret
adc
rclb
mov
xor
mov
hlt
ljmp
pop
outsl
cwtl
sub
sti
xor
sub
push
xor
xchg
js
jnp
dec
daa
insb
jp
daa
mov
repz
inc
das
xchg
stc
xor
fcoms
cmpsl
sbb
dec
mov
mov
subb
cmp
cs
aad
dec
decl
jae
push
mov
inc
int3
mov
add
or
in
das
mov
addb
jae
sub
cli
cltd
dec
xchg
mov
mov
jge
lahf
test
mov
mov
pop
fisubl
sub
sbb
mov
dec
and
dec
mov
and
test
xchg
cltd
into
mov
or
fcoml
mov
mov
xchg
jne
mov
pop
inc
lock
roll
loopne
sub
shll
cs
loop
mov
mov
add
jnp
fcomps
mov
adc
sarb
in
iret
adc
adc
jecxz
cmp
rolb
cs
push
mov
dec
rcrl
test
cmp
popa
mov
dec
adc
adc
inc
dec
or
jl
shll
lret
fs
aad
jnp
pop
jne
mov
fldcw
push
mov
pop
icebp
leave
and
inc
daa
std
cmc
clc
in
jno
cwtl
pop
mov
test
in
mov
lock
mov
add
push
data16
cmp
subl
jbe
dec
adc
aad
imul
adc
in
clc
ret
andb
mov
std
lret
mov
mov
and
sub
sti
cmp
mov
std
adc
add
lcall
hlt
stos
xchg
js
ja
xor
add
xor
ficoml
iret
mov
loope
cwtl
mov
or
rcrl
inc
mov
rorl
fcompp
repz
push
mov
jl
push
lea
inc
and
and
mov
mov
mov
mov
rol
jno
cltd
jae
push
divb
pushf
sbb
jecxz
lods
sbb
or
aad
xchg
in
lds
pop
icebp
mov
in
lea
cmpsl
inc
and
dec
and
pop
adc
add
push
fadds
icebp
jg
xchg
lahf
flds
jo
mov
fistpl
push
je
into
mov
inc
sahf
inc
sbb
movsl
movsb
xchg
mov
mov
xor
ss
add
mov
mov
movsb
dec
mov
in
mov
loopne
push
adc
sti
enter
or
mov
add
fs
sbb
push
push
lahf
sti
insl
aaa
push
dec
jbe
or
pop
lock
dec
daa
addr16
inc
mov
push
enter
mov
inc
mov
scas
aas
mov
stos
ss
pop
cmp
leave
in
shlb
dec
in
sub
insl
jmp
cmp
dec
nop
addb
cltd
fwait
das
ljmp
pop
in
repz
fnstsw
pop
loop
aam
mov
repz
mov
iret
pop
and
std
aam
imul
ljmp
pop
mov
nop
fbld
inc
adc
xchg
add
push
pop
aam
mov
push
push
es
mov
dec
mov
repz
add
stc
inc
push
loope
js
in
shl
dec
cmp
hlt
femms
pop
js
mov
mov
dec
movsb
pop
fwait
xor
push
xor
xlat
xorb
mov
scas
es
mov
or
mov
jge
xor
cmp
pop
cli
mov
or
loope
in
test
cmp
jno
das
push
popa
fnstsw
popf
outsb
stos
in
adc
in
loop
jne
cmp
xchg
add
pop
lea
mov
inc
outsl
pop
cs
xchg
and
xor
dec
orb
scas
lret
push
push
idivb
unpckhps
cmc
cmpsl
scas
mov
into
adc
xchg
lahf
icebp
add
pushf
mov
push
jecxz
xchg
pop
jnp,pt
sbb
push
enter
mov
roll
lods
jmp
mov
das
test
addl
push
outsl
ret
xor
imul
test
inc
cmp
ljmp
mov
xor
mov
xor
and
stos
ljmp
push
inc
clc
sub
shl
xlat
jg
fnstsw
out
jo
repnz
sub
xchg
sub
loopne
divb
sub
pop
or
sub
wbinvd
mov
insl
int3
fs
cmp
xchg
ss
sarl
sbb
jns
cmp
cmp
and
lcall
sub
xchg
lret
cmp
mov
mov
jbe
xchg
popf
cli
pop
or
jge
jg
xchg
add
add
add
or
xchg
loop
arpl
cwtl
jo
push
mov
inc
ds
fisttpll
incl
fdivl
xor
or
cmc
nop
jge
add
out
xchg
push
icebp
testb
loop
jnp
xlat
stos
pop
fmul
pop
pop
iret
dec
jp
cmp
stos
inc
shlb
add
mov
pop
inc
pop
lods
data16
pusha
push
mov
popf
cmp
loopew
test
xchg
hlt
inc
dec
mov
nop
movsb
push
pop
push
rolb
add
les
mov
cltd
pop
or
xor
loopne
loopne
lahf
sarl
xor
adc
pop
cmp
repz
and
xor
dec
out
jb
mov
pusha
jne
xor
lods
je
pop
jb
vpsrlw
xchg
fs
fdivrl
out
sub
and
and
push
adc
push
mov
inc
repz
mov
pop
stos
aam
icebp
test
dec
mov
ret
sub
mov
mov
nop
bound
adc
out
imul
mov
fstpt
or
out
lret
daa
jmp
sti
imulb
add
leave
pop
dec
lods
test
or
pop
xor
or
fsubr
mov
push
loop
mov
pop
push
out
jnp
outsl
xchg
jbe
mov
daa
clc
jmp
iret
outsb
out
jmp
jnp
aas
into
leave
and
jle
aaa
xor
in
and
inc
xor
add
cmp
lcall
ret
sub
push
je
jno
cwtl
lcall
and
dec
js
add
enter
fists
push
aam
stos
jle
mov
stos
repz
aad
mov
popf
inc
add
hlt
sub
mov
mov
adc
popa
or
in
bound
iret
jne
mov
mov
jecxz
push
and
rorb
cmp
movsb
mov
jns
mov
sbb
cmp
mov
shlb
add
fmul
pusha
mov
pop
sarb
xor
sbb
sbb
stos
out
dec
inc
push
imul
idiv
xchg
test
and
js
xchg
scas
mov
jecxz
int3
push
repnz
pusha
enter
push
xchg
mov
subl
sub
dec
js
adc
fildll
test
bound
sub
adc
xchg
imul
and
mov
je
pop
mov
pop
or
mov
out
rcll
sub
aad
inc
or
rcrb
ljmp
stos
jne
pusha
test
dec
mov
push
jbe
lret
pop
lds
fwait
push
mov
subb
sub
pop
mov
jne
add
xchg
enter
imul
stos
js
ret
mov
xchg
jl
xchg
in
sub
filds
scas
pop
stos
push
and
ljmp
in
cmp
dec
push
fiadds
and
rcl
and
cmp
pop
jecxz
push
add
sub
mov
pop
xchg
push
dec
jecxz
fcoms
stos
adc
xorb
mov
cvtps2pd
vdivps
dec
pushf
cmp
and
pop
sub
test
stos
add
fmull
fisttps
test
ds
icebp
sbb
clc
mov
mov
data16
push
dec
jb
jno
dec
fstl
sbb
xor
das
and
jecxz
insl
popa
loopne
push
dec
sub
mov
leave
push
or
mov
and
xchg
frstor
in
adc
xchg
cmc
stos
inc
push
sub
add
loop
pop
mov
insl
cmp
inc
jge
pop
and
das
imul
in
adc
ds
dec
shl
cmp
add
jp
fadds
sub
jbe
pop
sti
mov
dec
dec
push
mov
mov
lret
out
mov
xchg
sbb
mov
ljmp
fs
shufps
ficoms
push
ficoms
pop
sahf
mov
mov
loop
mov
mov
cltd
test
aas
adc
sub
mov
cs
mov
jno
out
jne
mov
kmovb
idivl
hlt
push
push
cmpsb
or
imulb
cmp
sub
shlb
orl
mov
test
or
or
mov
fiadds
notb
aad
xchg
dec
in
outsl
fists
test
daa
test
add
mov
push
pop
jmp
pop
sbb
je
fldcw
imul
in
sbb
mov
xor
xchg
into
cmp
add
pop
dec
test
pop
scas
push
out
shl
loope
xchg
dec
sbb
or
jg
xchg
add
push
sub
leave
cmp
pushf
les
mov
fs
mov
clc
push
and
imul
push
mov
movsb
icebp
lods
dec
mov
aam
xor
dec
adc
and
shr
movsl
lret
inc
scas
sarl
ss
push
mov
ret
das
push
mov
lock
cmp
pop
out
push
jmp
arpl
fdiv
sub
ja
cs
mov
out
mov
or
xlat
lods
sub
out
lret
adc
jne
jo
data16
sbb
ret
dec
mov
xlat
popa
and
cli
and
ss
push
insl
fst
ret
inc
xchg
repnz
add
jecxz
repnz
into
dec
pop
test
sbb
cltd
add
adc
rcrl
mov
adc
rclb
adc
or
inc
out
fstpt
xor
in
sub
push
fstp
sbb
loopne
aad
int
and
cmp
enter
das
inc
mov
add
sbb
cmp
aas
jne
and
cld
mov
fnsave
insb
iret
es
cmpsl
shlb
mov
mov
adc
xchg
adc
mov
pop
pop
sbb
dec
ss
mov
sbb
cmp
mov
or
jmp
popa
mov
jne
mov
cmp
repnz
mov
or
pop
xchg
inc
mov
inc
lret
mov
pop
clc
cmp
jmp
sbb
cli
jecxz
adc
xchg
hlt
sub
cltd
sbbb
pusha
xor
add
inc
mov
aad
stc
mov
icebp
inc
cmpb
popl
arpl
ret
fists
in
pop
enter
inc
leave
imul
loope
imul
adc
pop
pop
pop
and
jb
push
cmp
push
sbb
mov
nop
sbbl
fstl
adc
stos
jmp
adcb
ja
mov
daa
adc
scas
and
ret
popf
in
cmpsb
enter
xchg
inc
cmpsb
mov
jecxz
pop
push
adc
mov
mov
jp
jnp
dec
inc
xlat
sub
stos
call
out
out
mov
dec
mov
lahf
mov
std
js
push
cs
sub
stos
insl
mov
inc
scas
lds
test
pop
jp
jg
pop
dec
jg
push
and
es
sbb
aas
scas
jno
push
dec
mov
mov
or
fcoml
dec
push
xchg
or
fbstp
inc
cmp
iret
xor
mov
loope
popa
jb
add
repz
jg
adc
in
imul
push
and
sub
xor
jecxz
inc
movsl
movsl
push
jbe
data16
cs
adc
xchg
test
les
ss
es
dec
xor
lods
mov
cmp
adc
aas
pop
cmp
mov
inc
sub
or
push
addb
push
mov
test
xor
push
imul
in
aad
mov
rorl
les
push
mov
push
mov
js
out
pop
call
sti
adc
adc
pop
and
inc
xor
pop
inc
clc
outsb
negl
test
mov
sub
fstsw
inc
ficompl
rep
mov
inc
daa
pusha
das
mov
jmp
int3
pop
insl
je
hlt
lock
fidivl
inc
push
iret
mov
xchg
and
and
fwait
mov
xor
loope
aam
cmp
lcall
mov
jae
out
pop
repnz
jb
cmp
fistps
mov
addr16
push
mov
mov
jge
cmc
cld
add
mov
dec
lods
sub
test
gs
dec
jecxz
xlat
rcr
mov
jmp
jae
test
rcr
dec
mov
mov
jmp
and
lea
xchg
cmp
ja
and
xchg
and
test
pop
or
dec
jl
js
jns
jns
mov
sub
ficomps
mov
scas
push
xchg
jne
jnp
cmp
stos
in
lods
out
adc
cmpsb
ret
pop
movsl
aam
mov
addr16
mov
dec
int
cmpsb
jno
jns
inc
push
ljmp
fstps
test
xor
int
movsb
lea
shll
add
adc
xchg
mov
stos
pop
call
clc
sub
xor
roll
mov
dec
push
aam
dec
inc
or
sbb
leave
les
add
jne
mov
aaa
fisttpll
cwtl
jl
test
cmp
jnp
and
dec
roll
fsts
lods
mov
cmp
insb
pop
mov
pop
fisubrl
xor
mov
jmp
movsl
stc
in
mov
shlb
sbb
rcll
dec
and
aas
adc
sub
jecxz
enter
cmp
xor
popf
clc
mov
sbb
movsb
xchg
push
loope
jl
ds
adc
pop
jno
cmp
or
xor
pop
into
aas
xor
and
movaps
mov
push
jmp
mov
ljmp
pop
mov
cmp
mov
and
enter
push
sahf
lods
mov
mov
push
jnp
mov
fcmovb
mov
loope
lahf
pop
xlat
inc
xor
lods
mov
mov
jge
movsb
imul
lahf
xchg
sub
xchg
js
test
es
jae
mov
and
out
or
ds
stos
pop
sub
clc
push
cmp
dec
dec
mov
cmp
mov
xchg
jl
mov
mov
lock
xor
inc
fcmovnbe
repnz
jmp
in
dec
mov
loop
inc
push
adc
mov
nop
pusha
fidivrl
xor
inc
push
inc
aad
or
rcll
inc
hlt
xor
pop
inc
and
data16
lea
cwtl
mov
inc
insb
loop
popf
loope
and
dec
xlat
mov
outsl
out
xchg
movsb
orl
xor
aaa
add
rol
inc
or
nop
dec
sti
mov
push
arpl
cwtl
fcoms
cmp
push
adc
xchg
shlb
add
or
inc
cltd
ret
adc
dec
out
test
pop
adc
cld
jmp
imul
dec
xchg
outsl
push
sbb
int
push
iret
xor
xor
sub
lret
push
lret
cmp
jmp
jge
es
and
xchg
pop
mov
rcll
mov
inc
sbb
mov
push
mov
stos
jmp
pop
fwait
add
dec
and
pop
mov
sub
fmull
adc
and
lods
or
fcmovnu
xor
ficoml
shr
shlb
adc
repz
or
lods
and
aam
and
mov
mov
imul
and
fdivr
pop
aad
xchg
repz
nop
jmp
outsl
jmp
dec
push
sbb
sbb
ss
dec
pusha
cwtl
sbb
cmpsl
cmp
add
mov
fcoml
fiaddl
cmp
xor
icebp
cld
out
rorb
xor
fisubrs
xor
push
mov
movsb
fwait
xor
and
mov
mov
fnstcw
adcb
aad
adc
mov
cwtl
imul
jae
adc
int3
pop
pop
xor
xchg
xor
add
in
fwait
mov
out
sbb
inc
aad
test
idivb
fdivl
sahf
insb
pop
or
outsb
and
xor
and
xor
lock
scas
and
out
addr16
lea
pop
push
ja
xor
gs
pop
mov
push
xchg
addr16
ret
or
adc
push
shlb
jno
lcall
repnz
pop
xchg
cwtl
or
fbstp
xchg
loope
mov
push
popf
into
pushf
stc
mov
mov
pop
mov
push
push
rcrl
lock
cmpsl
fstpt
push
out
push
cmp
rcll
repnz
es
add
in
insl
fdivs
arpl
out
and
mov
push
dec
outsl
mov
test
xchg
dec
pop
or
repz
jmp
rcrl
pop
adc
sahf
xor
pushf
rcll
sbb
push
xchg
cmpsb
and
stc
push
shlb
test
adc
push
inc
inc
popa
pop
push
mov
std
in
cld
stc
lods
cli
mov
fbstp
push
or
xor
or
or
test
into
vminpd
mov
bnd
das
sbb
mov
outsb
sbb
sub
xchg
adc
jne
pop
pop
sbb
xor
cwtl
mov
mov
out
xchg
push
add
add
insb
and
xor
xchg
mov
or
mov
es
rcr
sahf
inc
fcomps
cli
xor
mov
cmpsb
pop
pop
and
xorl
xor
adc
sbb
mov
js
aas
mov
add
or
add
repnz
jmp
imul
mov
sub
lods
rcl
je
imul
stc
rcrb
mov
xor
insb
mov
subl
notl
daa
jmp
lretw
dec
sub
xor
mov
fistps
and
fwait
dec
outsb
hlt
in
add
xchg
movsl
popa
clc
repz
inc
lret
dec
fld
adc
pop
adc
in
sub
sbb
sub
cmp
pop
lret
push
sub
xor
hlt
xor
addr16
inc
ret
iret
fwait
sub
jp
jg
xchg
inc
sub
ret
lock
subb
mov
into
insl
mov
test
addr16
imul
inc
adc
call
inc
xor
lods
pop
movsl
jb
inc
jae
dec
movsb
cmp
xchg
pop
shl
mov
cli
mov
jg
jb
int3
inc
mov
inc
les
sarb
cmc
lea
sbb
dec
mov
sub
loope
loope
mov
inc
in
lcall
into
arpl
scas
lahf
cmp
pop
pushf
cmp
lret
andb
sbb
cmp
mov
mov
sbb
mov
xor
xor
cld
enter
dec
cli
ficompl
into
pop
pop
pop
int
push
xchg
dec
pusha
scas
jp
inc
jmp
mov
sbb
popa
es
jg
movsb
xchg
lret
popf
lahf
in
and
in
test
mov
out
mov
pop
in
xor
data16
sub
in
ficompl
lods
es
ret
js
sbb
adcl
imul
mov
bswap
xchg
sbb
cmpsl
rcr
or
idiv
adc
scas
cltd
addr16
notb
loopne
jecxz
ljmp
imul
xor
jmp
pop
setge
mov
rolb
cmpl
sti
push
popl
inc
dec
in
into
add
pop
dec
outsl
xor
inc
lock
xchg
cmp
aas
push
mov
cmp
sbb
jp
into
dec
cli
into
sbb
cmp
mov
adcb
dec
xlat
mov
cmpsl
cmp
or
lcall
outsb
mov
push
data16
adc
cmp
push
lcall
jmp
lods
setg
mov
mov
jmp
outsb
clc
mov
add
add
lret
das
je
repz
xlat
xor
notl
lcall
sbb
cmp
dec
lahf
pop
sub
cli
fstps
sbb
lds
add
out
sub
cmc
xor
inc
popf
adc
call
push
loop
sub
jl
mov
jo
dec
inc
and
cwtl
stos
pusha
and
test
or
aaa
fs
mov
lahf
adc
add
lods
rolb
ss
or
jns
sub
mov
or
lods
add
mov
aas
jns
mov
ljmp
into
test
pop
xchg
pop
lret
pusha
push
sti
xor
sbb
pop
push
rcrl
packuswb
mov
stos
push
cmpsl
fwait
jecxz
push
jl
or
pop
inc
test
mov
xchg
fnstenv
pop
cmp
fistpl
mov
enter
push
and
int3
lods
nop
mov
cmpsb
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
test
inc
or
xchg
int
push
add
pop
add
cwtl
int
jge
or
fcoml
aas
sub
adc
pop
or
int3
fmull
mov
sbb
sub
xchg
jecxz,pt
shl
imul
xchg
cld
mov
jg
jne
repnz
jno
fildl
lock
js
dec
or
or
mov
sub
dec
outsl
test
or
xor
fimuls
nop
add
repz
cltd
or
mov
xor
fmuls
decb
push
stos
and
in
mov
scas
and
xchg
jbe
ljmp
jno
stos
sbb
mov
xchg
jnp
adcb
testw
popl
arpl
sub
push
je
xchg
mov
mov
int
add
in
scas
ja
out
mov
xlat
in
inc
cmc
fs
sbb
xchg
pop
push
xchg
mov
lea
stos
mov
sub
movsl
outsl
test
movsl
push
mov
and
pop
lds
stos
push
jle
popf
adc
xor
xchg
xchg
stos
xchg
mov
cmp
sub
ss
enter
stos
mov
pop
add
paddsb
mov
pushf
in
js
mov
mov
sbb
cmp
or
jmp
aas
ret
mov
imul
cmp
push
scas
mov
sbb
lods
rcrl
or
sbb
movl
mov
xchg
in
push
inc
adc
jmp
adc
pop
das
mov
cmp
cmpsb
loopne
call
cmp
jo
call
jmp
sbb
mov
pop
clc
and
pop
cmc
scas
xchg
pop
aam
sbb
insb
sti
stos
aam
jp
jns
lret
jae
pop
stc
sub
shlb
dec
or
xchg
jae
xchg
lea
bound
and
add
jl
addb
cltd
addr16
cmp
cs
xlat
mov
mov
movsb
addr16
or
mov
inc
xchg
aad
pop
sub
ror
jp
push
into
data16
popa
push
push
lea
mov
xor
lods
decb
or
pop
jp
mov
and
lds
pop
cli
outsl
push
stos
inc
push
mov
or
loopne
adc
or
sub
jp
xchg
add
stos
mov
andb
sarl
or
sub
ss
push
pop
inc
mov
in
mov
movsl
ss
addl
pop
push
cmp
fidivl
pop
notl
cmp
pop
or
cmp
and
sbb
sbb
into
ret
xchg
xlat
lods
xchg
xchg
sbb
add
sarb
fwait
rorl
repz
faddl
jecxz
mov
pop
adc
pop
ds
pushf
int3
mov
decl
jo
mov
es
sub
out
out
cltd
xchg
rclb
xor
imull
hlt
sbb
wbinvd
dec
testl
loop
in
mulb
cs
sbb
rcrl
xlat
inc
xor
xchg
inc
or
ret
pop
xor
inc
sbb
and
daa
mov
out
ja
mov
icebp
int
arpl
sub
addl
dec
imul
adc
addr16
int
push
mov
inc
push
sarb
cltd
pop
push
or
loopne
push
aas
inc
or
or
inc
insl
jns
mov
lret
mov
push
pop
mov
push
ret
xchg
hlt
xor
nop
mov
inc
fldcw
in
mov
inc
lcall
imul
mov
mov
iret
leave
out
xchg
mov
fmull
mov
sub
mov
sub
inc
xchg
fnstcw
sub
push
ret
fwait
movsb
jp
les
push
out
jl
stc
shrl
sbb
jle
jo
inc
pop
xor
lret
push
nop
loop
mov
or
jmp
sahf
or
stos
mov
mov
aam
mov
sbb
cld
repnz
out
pop
lahf
fabs
adc
cmp
sub
arpl
cmc
push
cmp
test
sbb
in
outsb
cmpsl
xchg
cltd
std
and
xchg
add
test
jns
ret
xchg
xchg
ss
push
hlt
call
jge
insw
push
leave
imul
test
xor
dec
cmc
cmp
jo
imulb
mov
pop
pop
mov
ret
push
dec
inc
bound
in
je
add
fdivl
dec
fwait
jg
fisttps
pop
fwait
push
jne
mov
test
add
jne
sti
mov
cmp
mov
mov
push
pop
adc
aad
cltd
sahf
and
cmp
cmpsl
div
pop
mov
mov
repz
sti
xchg
mov
aas
lock
sahf
jns
sahf
xchg
and
inc
lcall
jecxz
push
ss
pop
inc
mov
push
fdivr
loop
aaa
data16
push
fsubrl
inc
cmp
lret
ljmp
les
imul
fsubp
dec
addr16
addr16
and
dec
cmp
sub
push
divl
cmp
movsl
jle
shrl
ret
pop
jbe
fmul
jae
cli
pushl
ljmp
jp
xlat
popa
and
int3
cmc
pop
cmp
cmp
inc
jle
cmp
stos
mov
fldcw
out
hlt
mov
addb
push
shl
add
mov
inc
pop
es
int3
sub
xchg
adc
push
jnp
mov
sub
inc
add
jp
jmp
repnz
cld
dec
and
jne
jns
daa
in
stc
movsl
fidivl
sub
std
inc
ljmp
mov
xchg
arpl
in
inc
sub
mov
add
loope
mov
mov
sahf
jmp
sub
and
xor
mov
jne
inc
mov
mov
notb
pop
add
pop
xchg
sbb
and
in
adc
lea
or
mov
int3
push
mov
or
sub
mov
jl
or
jmp
cmpsb
iret
mov
in
adc
pusha
movsb
in
mov
shll
xchg
dec
lods
mov
mov
fwait
cmp
cmc
mov
jae
lock
sbb
adc
jae
pop
sbb
dec
sbb
and
xchg
mov
cmp
xchg
xorb
jns
push
lock
lretw
into
adc
xchg
popf
test
jns
mov
enter
jg
cmp
repz
rorb
addr16
rolb
cmp
movsl
jo
dec
test
jg
jne,pt
ja
insb
in
and
test
pop
gs
push
and
pusha
lds
jge
lea
lock
icebp
es
add
repz
lds
dec
dec
std
mov
push
pop
xlat
xor
aad
sahf
or
dec
mov
adc
mov
rcrl
jle
mov
and
or
nop
dec
aas
test
xchg
scas
push
pop
mov
jb
or
pop
mov
pop
push
push
cbtw
sub
mov
mov
rorb
pop
inc
sub
xchg
aad
movsl
jb
popa
icebp
test
dec
push
out
inc
aam
mov
push
pop
add
or
sub
mov
out
jp
ja
faddl
loop
cmp
inc
imul
sub
imul
shlb
sbb
sub
inc
addb
cli
pusha
bound
aaa
dec
jo
lahf
out
ret
pop
add
sti
and
pop
xchg
lcall
pop
hlt
addr16
out
mov
in
mov
inc
xchg
add
sub
xchg
loopne
jno
adc
sub
out
xchg
mov
and
adc
push
xor
es
adc
xor
adc
xchg
pop
cmp
pop
repz
cltd
cmp
orl
pop
shr
std
adc
add
icebp
xchg
pop
fs
pop
in
int
push
test
rcr
or
xchg
add
insl
clc
or
std
mov
ja
repz
add
in
mov
js
loop
fwait
xchg
sarb
fcomps
cmp
or
mov
sub
push
test
cmp
addb
ja
call
and
pop
movsb
sbb
dec
add
push
notl
mov
in
xor
iret
je
xor
inc
jp
aas
mov
sbb
fdivrs
enter
aaa
jmp
lea
xor
mov
and
out
sti
out
mov
xchg
ds
and
or
add
cld
lods
push
mov
pop
cltd
mov
into
out
frstor
ljmp
in
jp
pop
pop
push
lcall
cmp
dec
addb
cmp
add
call
fisubrs
popa
imul
fbstp
and
mov
mov
out
add
outsb
es
or
int3
push
shlb
jecxz
js
jecxz
ds
mov
loopne
lret
add
jo
aaa
mov
xor
aas
and
nop
add
cmp
loop
fbld
jl
cwtl
cmp
mov
mov
jmp
into
scas
jae
xchg
pushl
sub
shll
pop
push
je
xchg
xor
stos
stos
shlb
leave
push
push
mov
ret
sub
add
mov
mov
rclb
mov
aas
xor
outsb
lret
sbb
insl
mov
jae
je
hlt
test
mov
dec
leave
aam
cld
lock
jp
add
push
pop
outsl
sbb
mov
xor
std
adc
repnz
scas
mov
adc
add
cmp
jb
lret
shlb
mov
inc
inc
shrl
lods
icebp
dec
push
imul
sbb
push
mov
cld
mov
out
jnp
dec
pushf
daa
es
cmpsl
and
inc
or
andl
outsb
sbb
adc
dec
pop
xor
cmc
dec
mov
xor
std
or
mov
repnz
push
xor
jecxz
and
stos
out
mov
cmpsl
dec
dec
jg
fimuls
dec
arpl
sbb
xchg
in
rcll
loope
idiv
mov
pop
je
or
dec
in
test
aas
les
cmpsb
xchg
xchg
out
shrb
cmp
xlat
sbb
ja
dec
imul
roll
lcall
int
jo
mov
popf
inc
test
arpl
in
mov
mov
push
and
and
outsb
repz
out
cs
dec
xchg
rol
mov
dec
xor
lret
test
mov
scas
inc
cmp
out
lcall
mov
dec
jno
jle
xor
les
xlat
pop
mov
cmpsb
sbb
insb
push
stos
dec
and
sub
jne
scas
iret
xor
je
dec
sahf
pop
dec
and
mov
sub
in
mov
mov
mov
lods
outsb
mov
enter
in
lret
jne
dec
jg
or
aad
add
sbbb
cmc
popa
in
imul
mov
ret
jge
jnp
or
fs
jg
ficomps
jo
je
pop
and
outsb
repnz
aaa
cmp
xchg
cmp
or
or
js
mov
in
cmp
shlb
lea
divl
ss
bsf
xlat
popa
scas
mov
and
adc
add
enter
dec
shll
cmp
mov
pusha
jecxz
add
jle
hlt
fdivrl
out
mov
push
or
popa
mov
sti
out
jb
or
mov
xorl
loope
fcoml
shrb
stos
dec
loopne
mov
aas
mov
pop
in
add
xchg
andl
inc
mov
stc
push
mov
clc
and
out
mov
inc
out
mul
repnz
testl
or
bound
xchg
aas
es
mov
mov
cwtl
sub
inc
pop
pop
lock
in
nop
sub
out
sbb
mov
inc
in
mov
push
das
push
push
in
and
dec
mov
scas
stc
push
rcrl
sbb
adc
stos
insb
and
lock
jbe
clc
in
jb
inc
cmpsb
cwtl
das
faddp
jno
jnp
icebp
outsl
push
sub
les
or
adc
cmp
les
bound
xor
add
jne
aaa
inc
das
xor
mov
loope
adc
sbb
inc
jno
mov
push
movsb
sub
mov
stc
push
addr16
orl
xor
mov
pop
cmp
aas
int3
loope
sub
pop
shll
fs
scas
ss
mov
push
push
loope
lret
sbb
sbb
inc
fcomps
cmpsb
ljmp
xchg
xlat
fdivl
int
pop
addr16
data16
shll
das
shll
xor
xor
jbe
cmpsb
fs
pop
push
scas
or
add
pop
notb
repz
dec
cli
dec
bound
cmp
cmp
mov
cmp
sub
mov
inc
movsb
mov
popf
cld
sbb
test
mov
fstps
out
pop
pushf
outsl
inc
adc
in
das
jne
and
pop
pop
mov
sub
mov
xor
imul
xchg
fstpl
cmp
cmp
jecxz
int3
cmpsb
xchg
sarl
sti
push
mov
lds
sub
and
pop
adc
subl
scas
mov
inc
out
pop
jp
or
mov
cmpl
push
sbb
xchg
imul
sbb
jg
sub
and
inc
sbb
dec
push
xor
inc
xchg
and
mov
and
dec
push
ljmp
cmc
mov
imul
in
je
aas
jne
lds
inc
mov
adc
imul
cmp
loope
add
push
insb
inc
data16
adc
notb
jp
xchg
into
adc
push
hlt
mov
cli
or
cld
add
xchg
gs
or
movsl
pop
dec
mov
rcrb
xchg
nop
fnstsw
aas
adc
loope
mov
fists
xchg
xlat
lods
push
shll
xchg
cmp
sub
cmpsl
jbe
or
scas
add
jmp
insb
popf
and
shlb
mov
dec
test
pop
xchg
popa
mov
lcall
out
aam
out
out
je
loop
pop
xor
stos
jb
sub
loope
xor
decl
adc
out
into
aas
mov
dec
rol
test
stos
mov
div
sub
fstpt
lret
ficomps
add
or
sub
rorb
push
adc
mov
pop
mov
dec
adc
add
mov
mov
pop
lcall
lcall
roll
jne
nop
decb
fwait
inc
jnp
insl
insb
jp
aam
repz
fsubr
mov
xor
scas
imul
dec
call
adc
sbb
mov
adc
cmp
into
mov
adc
xlat
jnp
test
jne
stos
mov
inc
add
or
insb
ja
sbb
sahf
mov
add
cmovge
ds
fldt
and
std
mov
add
add
fnstcw
or
dec
fwait
movsl
sbb
insb
std
scas
add
outsb
xor
inc
in
mov
pop
mulb
loop
cmp
jnp
xor
cmpl
cld
mov
dec
mov
xchg
sub
and
xchg
mov
pop
sub
sub
test
push
movsl
lcall
mov
sti
lea
lock
lods
shrb
in
or
sahf
cmc
lret
adc
inc
dec
arpl
andb
shll
testl
pop
pushf
mov
push
stos
add
ljmp
add
sub
and
pop
inc
scas
daa
cli
inc
pop
push
push
push
pop
in
jg
scas
aaa
nop
divl
aad
lret
inc
lret
mov
enter
pop
in
cmp
add
push
xor
iret
ja
js
out
push
jbe
int
mov
enter
xor
fistpll
outsl
adc
std
or
leave
jecxz
ja
in
jl
mov
xor
inc
lods
scas
jne
inc
or
and
daa
jbe
mov
xchg
cmpsl
pop
push
mov
push
and
popa
sub
out
ljmp
and
ds
dec
mov
inc
fcmovu
ficompl
add
icebp
pop
sbbl
jecxz
or
xchg
cmp
dec
jne
mov
sub
sbb
out
ja
aaa
loopne
mov
mov
js
enter
test
cmp
cmpsb
mov
xor
add
insl
and
and
pop
xor
in
rorl
push
mov
jl
sbb
mov
lds
lock
inc
mov
sahf
dec
add
lea
dec
xchg
shrb
addr16
fdivrs
jno
mov
icebp
adc
inc
push
cmp
enter
pusha
jne
fadds
insl
push
or
xchg
xchg
lahf
push
lahf
mov
pop
cmpsl
sub
mov
xor
cmp
scas
out
sti
or
rclb
sbb
mov
imul
in
test
idivb
jmp
mov
ja
std
daa
and
mov
enter
mov
mov
out
movsb
pop
shll
sbb
pop
and
std
jl
push
mov
or
fidivs
adc
sbb
pop
xchg
xchg
dec
pop
push
cwtl
adc
fisubs
mov
iret
or
leave
repnz
add
popf
popf
mov
and
sub
mov
outsb
mov
pop
xor
adc
test
into
dec
out
sbb
out
fadd
out
pusha
push
pop
push
pop
out
mov
mov
dec
int
jl
mov
out
and
and
mov
sub
pop
mov
int3
rclb
mov
push
mov
std
leave
rcrl
pop
add
into
fidivrl
sbb
pop
dec
inc
mov
add
xchg
movntps
xchg
xchg
cmpb
inc
dec
push
mov
rcll
and
mov
dec
or
outsl
int3
jl
mov
xchg
push
jnp
call
cmp
arpl
pop
in
or
push
leave
call
push
cmp
cli
sub
rcll
out
jo
push
pop
xchg
jb
xorl
mov
push
mov
jge
pop
adc
cmp
movsl
cli
push
bound
push
cmp
jp
cwtl
mov
imul
fwait
pop
int3
popf
cmc
divb
dec
xor
xchg
leave
adc
ja
add
jg
iret
arpl
enter
or
mov
jns
mov
mov
inc
flds
xchg
iret
cmpsb
or
in
cmp
adc
mov
bndldx
movsl
out
movsl
int3
mov
pop
aad
dec
pop
pusha
cmp
dec
mov
clc
cmp
push
jnp
mov
popa
and
jl
cmp
fbld
adc
or
ret
inc
mov
and
icebp
fs
xor
movsl
pushf
loopne
inc
mov
push
lds
test
mov
into
adc
jp
cmp
cmp
xlat
sti
sub
stos
loope
mov
jge
out
popa
jle
jecxz
repnz
sub
mov
cli
mov
push
xorl
jp
std
in
ret
inc
xchg
test
xor
push
inc
mov
test
rcr
out
test
clc
push
les
cld
orl
out
mov
lret
shrl
adcb
dec
and
adc
movsb
sub
movsb
lds
shlb
or
jae
dec
or
mov
push
xlat
gs
repz
incb
dec
cli
inc
xchg
mov
insl
xor
sub
test
push
arpl
mov
xchg
and
stos
inc
clc
pop
jecxz
cmc
addr16
jb
iret
jg
pop
stos
icebp
jnp
int3
scas
jmp
ret
pop
lods
dec
sbb
mov
inc
stos
and
cmp
fsubr
dec
jno
lret
ss
push
sbb
repnz
adc
cmp
icebp
dec
pop
scas
loope
fsts
outsl
and
mov
sub
repz
or
cwtl
daa
leave
or
fucom
inc
dec
xchg
mov
mov
or
mov
in
inc
adc
inc
push
cmp
scas
jle
movsl
inc
cmpsb
and
or
insl
add
call
and
arpl
sub
lret
stos
mov
dec
scas
ljmp
lods
xor
or
fs
jmp
cmp
ds
loop
scas
stos
sub
ret
push
loopne
fs
xor
sub
push
jg
daa
xor
jne
xor
sub
stos
call
adc
mov
and
jne
stc
das
sub
lock
fxtract
push
push
dec
and
aam
add
fidivs
add
inc
aaa
mov
mov
shl
mov
pop
inc
mov
je
mov
sbb
movsl
sti
fbstp
push
jg
jmp
jl
insl
jbe
pcmpgtd
sub
mov
inc
aad
sbb
cs
ret
sub
mov
fistps
cmp
fs
cmp
test
add
outsl
mov
sar
mov
cmp
xchg
push
cli
push
out
sub
mov
sbb
pop
pop
inc
dec
cwtl
mov
shl
es
in
sbb
adc
cmpsb
aad
das
nop
inc
jg
inc
leave
push
adcb
test
lods
mov
test
mov
jecxz
out
and
pop
xchg
das
cmp
push
push
mov
jge
push
inc
cmpsl
pop
push
int
stos
mov
fdivl
das
xor
jbe
jno
je
cmc
sahf
bound
test
movsb
pop
js
subl
sub
pop
xor
jbe
push
inc
das
push
mov
stc
dec
jns
or
push
jo
add
ljmp
push
cmp
stc
dec
ret
pop
sub
movsb
daa
dec
imul
xor
and
add
popf
dec
jae
xchg
xor
aaa
dec
leave
inc
jl
adc
repz
xlat
adc
roll
arpl
sahf
mov
dec
repnz
inc
cmp
lock
mov
mov
mov
out
push
ss
and
mov
flds
enter
rcr
aas
mov
and
mov
xchg
mov
andl
lods
push
push
add
mov
mov
sub
mov
inc
push
out
jae
mov
mov
outsl
in
ret
popf
rorl
mov
fmull
mov
sbb
adc
lret
adc
outsl
cmp
pop
popa
add
dec
mov
sbb
popa
scas
mov
mov
daa
mov
les
in
adc
sub
out
add
lock
sarl
or
jnp
adc
cmp
pop
xor
sub
outsb
push
sbb
popa
push
and
das
jmp
mov
or
sub
push
sti
push
and
inc
sub
fwait
mov
dec
fisubl
jg
mov
pushw
xor
sub
lahf
cli
cmp
ficoml
adc
jecxz
dec
lea
push
add
inc
adcl
or
jo
cmpb
test
aam
jmp
popa
dec
sub
out
stos
in
sarl
add
es
ficoml
dec
cs
add
call
daa
mov
push
lods
imul
aad
jl
dec
filds
adc
xchg
mov
or
leave
pop
or
cmc
mov
mov
push
cld
lods
xor
mov
in
pop
lods
xchg
ret
mov
test
aad
xchg
dec
test
mov
loop
adc
loopne
adc
jne
push
mov
inc
gs
movsl
push
or
sub
loop
cld
shrb
pop
stos
dec
daa
jl
or
add
cs
aas
xchg
lahf
nop
sub
movsl
jg
push
xchg
dec
adc
pop
sbb
push
pop
jns
adc
sti
push
xchg
inc
and
push
jmp
add
es
leave
mov
xlat
sbb
pop
push
xor
mov
xchg
mov
in
push
sbb
aaa
jno
in
aam
xchg
cmpsl
add
adc
adc
sarb
jmp
dec
leave
fstpt
outsb
shl
jb
pop
lret
sbb
cld
ror
or
sub
ljmp
mov
repnz
aam
out
jb
dec
mov
sbb
hlt
dec
icebp
mov
fcomps
cld
out
mov
pop
jns
das
mov
fldl
popf
mov
dec
std
scas
and
mov
jg
movaps
xchg
je
leave
daa
call
mov
fdivs
sbb
sbb
sahf
arpl
movsl
mov
mov
lret
pop
push
adc
imul
cmp
dec
nop
mov
popa
xchg
cmp
cmp
fdivrs
push
sbb
pop
push
imul
js
ds
loope
push
sti
mov
insl
enter
lods
iret
test
pop
es
cmp
mov
jns
pop
xor
push
fldt
outsb
js
pop
test
test
xchg
pushf
in
push
ja
popf
aas
cltd
mov
dec
dec
rolb
inc
pop
ds
push
mov
push
push
addr16
dec
inc
push
dec
add
sahf
sbb
xor
fidivrs
sbb
sub
fmull
push
sbb
jo
push
jmp
xchg
inc
in
jb
xor
in
dec
sahf
or
js
push
movsb
cmp
stos
aaa
or
pop
push
imul
xor
scas
xor
mov
ljmp
xchg
repz
push
in
loop
pop
xchg
mov
pop
xchg
push
xchg
add
stos
mov
pop
pop
test
mov
dec
sbb
shrl
or
shll
xor
dec
sarl
sub
xchg
fadds
orl
push
dec
and
jne
cmp
cld
rorb
adc
jno
inc
notl
lahf
or
sbb
into
mov
pop
fs
js
mov
xor
insb
xor
ljmp
jbe
fmul
jns
leave
lret
xor
jo
inc
imul
sar
add
rorl
and
lcall
popf
daa
sti
outsb
test
scas
xchg
sbb
and
rorl
push
fldenv
sbb
insb
cmp
nop
mov
in
mov
test
jmp
lret
in
dec
push
insl
or
jne
scas
inc
daa
push
lock
cltd
in
mov
repnz
cmp
arpl
test
xchg
arpl
mov
filds
or
lahf
daa
push
mov
orl
or
aaa
cmp
adc
divl
vpackuswb
sub
dec
orl
cmp
push
movsb
stc
lcall
cmp
shl
inc
test
mov
mov
out
fsub
mov
leave
jmp
and
add
imulb
pop
insb
fiadds
popa
jne
or
movsb
or
outsl
aam
mov
ja
outsb
shr
add
add
mov
inc
push
test
add
pop
paddsw
dec
cmpsl
mov
push
lret
pop
pop
push
daa
adc
outsl
jo
loope
and
gs
inc
popa
xor
dec
in
inc
lret
cmp
popa
push
mov
out
addr16
enter
out
jnp
jo
pop
repnz
mov
dec
in
in
aam
fstpl
std
push
jmp
gs
push
shl
inc
adc
xor
addr16
ljmp
mov
fisubl
cltd
and
jnp
out
out
cs
add
pop
dec
js
and
fnsave
mov
inc
sbb
test
jae
aad
or
dec
mov
popa
je
mov
jmp
xchg
out
out
ljmp
leave
sbb
adc
or
ficoml
into
push
outsb
adc
xlat
popw
lret
in
cmpsb
inc
mov
sbb
pop
sahf
cmpsb
fsubrs
xchg
insb
cs
sub
test
stos
mov
jl
or
add
mov
daa
shrl
fwait
mov
fcompl
pushf
mov
cltd
inc
call
std
out
jno
add
cltd
mov
in
aaa
cltd
adc
jne
fwait
popa
xor
mov
mov
cmp
enter
mov
aad
xchg
cmpsl
dec
outsl
and
fs
mov
clc
shrl
enter
sbb
ss
cmc
iret
adc
aad
push
ljmp
js
sub
mov
js
xchg
dec
pop
mov
subb
aam
dec
xchg
repz
pop
pop
pop
popf
hlt
push
addr16
sbb
movsb
adc
pushf
pop
adc
sub
xorb
enter
mov
jo
shlb
out
cmp
mov
sub
push
lahf
push
xchg
loopne
enter
scas
stc
mov
inc
stc
stc
fucomi
xlat
sbb
adc
rorl
push
stos
pop
aam
push
push
in
mov
dec
xchg
mov
out
mov
ljmp
push
aam
negb
and
jge
jp
push
jge
pop
lea
cmp
mov
push
out
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
mov
or
mov
mov
out
adcb
mov
mov
hlt
pop
sti
sbbl
out
cld
and
aaa
cmpsl
int
pop
lcall
repz
push
mov
jmp
push
or
cli
pop
xchg
or
jge
cld
imul
lds
or
rorb
lods
adc
push
lahf
cwtl
scas
mov
mov
jns
pop
orl
cs
ret
je
in
out
mov
iret
in
push
jo
test
mov
sbb
aaa
sbb
sbb
lods
xor
mov
movsl
dec
popf
mov
mov
sub
push
ror
push
add
test
and
int3
cwtl
xor
push
rolb
sbb
xchg
sarl
loopne
ljmp
sbb
mov
mov
xor
inc
ficomps
idivl
mov
or
cmp
stos
in
into
lods
xor
and
push
mov
mov
ljmp
xor
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
