add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
test
bswap
adc
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
push
cld
lock
fldl
xlat
je
popf
add
lret
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
pop
scas
mov
jl
jl
sarl
sbb
adc
lret
cmp
mov
fucomi
fisubrl
and
or
mov
cmp
mov
pop
scas
inc
popf
fidivs
test
fidivs
inc
and
pop
icebp
fwait
pop
cmp
pop
push
aaa
das
lds
ds
sti
jae
outsb
cmpsb
test
in
movsb
and
inc
repnz
outsb
jae
or
cli
mov
mov
pop
jge
jecxz
pop
mov
mov
dec
in
dec
fdivrs
jb
fcoml
lcall
lret
arpl
xchg
and
test
adc
add
adc
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
ds
jl
mov
shl
jno
out
cli
xor
loop
pop
ja
insl
cld
push
dec
rorb
and
sub
lahf
dec
mov
loop
nop
int3
add
and
dec
fisubl
push
xor
sub
inc
ljmp
xchg
in
pop
test
mov
pop
or
fs
test
lret
cwtl
inc
pop
outsl
int
dec
push
ret
call
mov
jmp
xor
loop
inc
mov
push
jle
mov
out
sarl
jg
inc
mov
pop
icebp
frstor
inc
cmc
int
mov
int3
push
adc
push
ffree
mov
xchg
push
insl
jp
push
mov
dec
lcall
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
pop
ljmp
mov
mov
daa
xchg
test
fildl
dec
or
jg
mov
push
inc
aad
mov
jg
cmpb
add
mov
scas
outsb
xchg
push
xchg
sbb
repnz
fidivs
ret
aas
sub
xor
insl
loopne
hlt
rol
lods
mov
outsl
ja
mov
aam
or
jbe
xchg
in
jmp
and
jle
cwtl
lds
adc
cli
imul
sub
sbb
fbstp
out
dec
pusha
cmp
and
mov
xchg
and
xorb
iret
shlb
inc
in
lahf
jne
lods
fidivrs
bound
add
inc
jnp
mov
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
sub
pop
inc
jle
jl
jl
jl
in
mov
and
pop
sub
outsl
mov
jne
rclb
push
out
jo
xchg
mov
iret
dec
mov
jecxz
js
loopne
dec
xchg
dec
jg
pop
dec
push
daa
es
daa
sub
into
cmc
dec
arpl
out
adc
adc
mov
cmp
xchg
sbb
inc
mov
out
jo
in
fnstsw
lcall
jae
ret
mov
ja
jb
das
scas
pop
adc
fbstp
cwtl
cmp
cli
test
fsubrs
jae
jp
sub
xor
icebp
fs
movsb
cmp
call
jno
inc
out
rcrb
dec
call
inc
add
inc
add
enter
pop
inc
add
add
add
add
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
mov
jno
jl
jl
jl
iret
jp
aad
pushf
std
xor
movsl
lretw
syscall
leave
sarb
mov
loop
pop
adc
cs
adc
sub
jne
imul
pop
daa
cwtl
pop
jbe
in
pusha
dec
mov
lods
fwait
xchg
mov
rcl
roll
lods
mov
sbb
adcb
sarl
jl
pop
loop
sub
push
cwtl
xlat
cmp
mov
xchg
scas
sbb
sbb
inc
cmpsl
inc
jmp
inc
or
push
cmp
bound
insl
repz
mov
repnz
xor
pop
add
adc
add
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
lret
jae
xor
jo
jl
jl
jl
iret
mov
int3
leave
fisttpl
or
bound
sub
fstpl
cmp
sub
shll
clc
scas
imul
xchg
aad
inc
clc
popa
mov
mov
data16
mov
or
outsl
fmull
arpl
gs
mov
xor
adc
dec
out
movsl
aaa
or
sar
call
bound
sbb
mov
ljmp
cwtl
sbb
fwait
push
add
xchg
mov
sbb
shrb
mov
inc
pop
add
pop
inc
sub
call
inc
cld
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
jl
mov
cs
mov
xor
push
cmp
movsl
jle
fwait
jb
cwtl
mov
mov
data16
stos
mov
and
gs
inc
mov
mov
out
fnstsw
ljmp
sub
xor
dec
mov
xor
pop
jns
out
pop
or
sub
pop
int
imul
and
jae
push
cmp
fnstenv
mov
sbb
or
jnp
sbb
jmp
and
popf
xchg
ss
cmp
jge
xchg
enter
nop
shl
mov
scas
pop
fidivl
or
mov
into
add
add
mov
mov
dec
mov
aad
adc
jl
mov
pushf
in
arpl
and
mov
jo
mov
inc
push
dec
dec
xchg
sbb
cmp
jle
pop
xchg
mov
out
ret
roll
adc
add
or
cli
or
mov
xor
out
cmpsl
shrb
add
adc
cld
inc
scas
sub
sbb
test
out
shll
stos
dec
incb
dec
xchg
mov
jnp
adc
out
stc
push
cmc
dec
add
std
and
xchg
sar
and
dec
out
repz
fnstsw
jmp
mov
lods
fsubrp
hlt
mov
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
sbb
jl
mov
sbb
lock
mov
fdivrp
mov
jo
faddl
aam
leave
mov
xor
call
add
mov
dec
imul
push
aam
fs
arpl
daa
inc
inc
add
fldenv
fistpll
shlb
sar
sahf
sbb
sbb
mov
sub
enter
out
cmp
in
jmp
jno
mov
aaa
cld
lcall
clc
push
bound
aaa
add
ds
call
cwtl
dec
mov
sbb
xlat
cmp
mov
lret
dec
in
inc
jg
push
cmp
jne
ret
and
mov
mov
mov
add
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
fldl
sub
jne
jl
jl
jl
or
xchg
xor
and
pop
out
jle
xchg
mov
mov
in
jno
adc
inc
xchg
rcl
int3
push
dec
sub
aad
pop
lds
aad
sbb
aad
test
mov
cmp
or
orl
ret
popf
sti
rcrb
pop
dec
jbe
stos
inc
out
mov
pop
rcll
pop
and
mov
negl
inc
in
enter
pop
jmp
outsb
rcrl
jp
sub
cwtl
iret
push
out
sbb
repz
add
clc
nop
outsl
and
jecxz
add
sbb
test
in
es
sub
lret
in
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
xlat
dec
push
jne
jl
jl
jl
cwtl
add
ja
cmp
push
push
mov
xchg
mov
sahf
sbb
sbb
scas
xor
idiv
pop
pop
mov
jno
pop
mov
das
std
subl
int3
mov
push
cwtl
mov
cli
and
mov
in
cs
or
fs
cmpsl
xor
jae
int3
pushf
xchg
fxch
add
aas
adc
mov
aaa
and
mov
push
adc
testb
or
cmc
add
xchg
stos
fmull
mov
test
lea
je
jo
inc
fcomip
mov
pop
mov
pop
jg
cld
cmp
fmuls
mov
dec
rclb
jne
jmp
pop
jecxz
xchg
mov
jb
daa
inc
mov
jl
mov
int3
inc
jae
or
pop
push
xchg
fnstsw
mov
dec
inc
xor
aas
stc
pop
cmp
push
loop
add
roll
sub
fmul
in
movsl
xchg
jne
pop
imull
scas
sysexit
mov
loope
cmp
jbe
sbb
push
das
inc
push
mov
hlt
sub
out
cmpsl
push
movsl
in
popa
adc
movsb
mov
add
jecxz
sbb
movsb
xor
jl
jmp
lods
pop
lods
ljmp
and
fildl
stos
scas
add
dec
or
stc
or
inc
test
cmpsl
mov
iret
insl
int
sub
sti
fidivs
jmp
or
mov
mov
push
int3
xchg
xchg
int
and
jl
mov
pushf
push
add
xor
popa
repnz
jle
dec
fmull
fdivrl
mov
dec
sub
push
sbb
sarl
sbb
test
sub
dec
cld
adc
mov
lret
add
mov
inc
in
or
or
retw
push
sti
sub
push
sahf
adc
pop
sbb
fsub
and
pop
in
mov
scas
xor
mov
test
cmpsl
stos
orb
push
das
fwait
mov
lods
out
fnsave
and
or
jnp
inc
jae
ja
mov
mov
in
inc
pop
xchg
mov
mov
repnz
mov
jbe
mov
and
push
dec
or
test
sahf
nop
roll
mov
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
dec
pusha
ja
jl
jl
jl
js
ja
dec
int
test
lcall
cmpsl
jbe
sbb
adc
dec
mov
push
repnz
jge
inc
sbb
adc
mov
cmp
cli
ljmp
in
lods
fcompl
xchg
shll
add
xor
fildll
shll
and
leave
mov
dec
or
mov
cltd
imul
aaa
sarl
aad
addr16
xchg
fs
cld
cld
sub
or
aad
xchg
fsubrs
fwait
scas
shlb
mov
les
sub
and
inc
popf
dec
prefetch
or
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
push
sbb
jl
jl
rorl
int3
sub
add
je
movsb
mov
and
xor
sub
inc
insl
mov
stc
dec
mov
call
cmp
pop
push
das
sbb
push
add
lret
pop
iret
enter
popf
lea
mov
mov
mov
aam
add
and
mov
adc
fadd
xor
fwait
pop
loop
xor
add
fistps
sub
jge
pusha
out
jb
xlat
xlat
les
and
daa
pop
ja
mov
xor
xchg
pop
out
fidivs
aas
decl
movsb
nop
aaa
aaa
jecxz
add
scas
dec
aaa
shll
inc
cld
mov
jmp
xchg
sub
cltd
cmp
mov
popf
test
fmull
jl
mov
mov
sbb
jmp
lahf
mov
imul
dec
and
jnp
nop
inc
add
pop
jne
xchg
clc
pop
lret
aaa
ret
add
lret
push
adc
stos
and
push
and
loopne
cld
mov
mov
fsubs
fbstp
sarb
dec
cmp
sub
mov
pop
fs
sahf
add
shrl
sbb
push
or
aas
test
cmp
iret
or
cli
fidivs
loopne
mov
std
jp
pop
jnp,pn
imul
ja
mov
jb
add
push
inc
dec
jbe
push
pop
pop
not
rclb
push
or
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
cli
and
jl
mov
pop
aaa
repnz
fs
test
arpl
cmp
xor
data16
mov
dec
push
lea
sbb
into
adc
adc
frstor
sahf
fisttpll
push
dec
push
adc
xor
inc
mov
xor
dec
or
and
ret
push
out
push
aad
dec
pushf
xchg
xor
js
sbb
dec
fdivr
js
inc
mov
hlt
fcoml
add
test
cltd
xchg
pop
stc
add
xchg
cmp
dec
cmpb
mov
mov
orb
add
or
sub
push
decl
add
mov
jmp
and
rep
lods
sti
pop
xorl
add
jl
jl
jl
nop
imul
and
xchg
lods
mov
sub
jne
test
sbb
out
adc
push
mov
push
sub
pop
in
push
push
outsl
ljmp
out
daa
cwtl
dec
push
jnp
popf
orl
and
scas
add
fidivrs
xlat
mov
ret
or
lods
xor
and
mov
sub
loop
mov
pusha
jno
test
test
sahf
test
std
aam
dec
in
sbb
out
adc
fucomi
imul
inc
and
sbb
mul
mov
cli
adc
pop
xchg
fwait
dec
imul
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
pop
scas
and
or
jl
jl
sbb
imul
lcall
in
sbb
rcll
xor
jns
outsl
sahf
fsubr
jns
testl
mov
imul
or
lea
jns
jbe
dec
das
imul
mov
mov
iret
adc
out
mov
out
mov
lock
mov
push
lahf
daa
sub
bound
mov
sbb
shrb
fcmovb
add
fcmovne
test
insl
fwait
mov
inc
je
out
sbb
js
mov
push
dec
test
cmpsb
and
les
fsubrp
add
sahf
jb
add
or
jmp
fsub
mov
clc
mov
push
cmp
jl
mov
sbb
nop
pop
sbb
sbb
mov
mov
jp
adc
hlt
mov
or
loop
inc
add
or
jbe
mov
sub
outsl
mov
call
jno
adc
movsb
xlat
push
push
and
adc
sbb
sub
fldcw
or
push
jne
add
mov
movsl
push
xchg
dec
adc
popf
clc
mov
dec
imul
and
mov
lods
dec
ds
out
movsb
push
hlt
arpl
mov
xchg
insl
out
mov
add
jecxz
cmp
ret
mov
jmp
pop
fimuls
cltd
push
mov
pop
ret
push
jl
mov
out
dec
jp
int
xor
mov
jae
ja
push
stos
inc
mov
push
push
cmp
rolb
sbb
push
add
cmp
ljmp
sbb
mov
mov
dec
loopne
xchg
loope
xor
test
jbe
test
popa
out
push
rol
daa
mov
cwtl
push
je
pushw
nop
pop
jle
or
loopne
pop
xor
arpl
push
lcall
adc
fistpl
fwait
cmpsl
inc
loope
add
out
dec
push
dec
out
inc
push
in
or
xor
inc
test
jp
or
jns
int
pop
xchg
push
jmp
mov
faddp
xchg
fidivs
fisttpl
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
orb
pop
nop
or
jl
iret
sbb
sbb
aas
jge
mov
aaa
imul
pop
hlt
dec
sahf
inc
scas
jmp
mov
cmpsb
xchg
lock
add
inc
jg
pop
ret
push
je
mov
dec
cmp
pop
aas
out
repz
in
adc
sub
xchg
sub
daa
push
pushf
push
xor
and
ja
inc
out
sbb
jp
fisttpll
pusha
xchg
dec
in
add
lcall
test
dec
adc
fwait
push
mov
and
mov
rol
mov
int3
inc
mov
dec
cmp
xchg
loope
clc
adc
cmp
mov
jl
or
test
add
add
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
inc
add
lret
or
jl
jl
jl
sahf
mov
jns
xor
adc
or
dec
xor
jno
es
mov
mov
jmp
in
out
aaa
pop
aas
mov
popf
fwait
xor
add
push
xor
ficoml
stc
hlt
inc
out
fidivl
pop
push
sbb
sub
cmpsb
fldt
lds
xlat
dec
mov
clc
fbstp
jnp
pmaddwd
mov
int3
lods
mov
sti
test
cwtl
sub
repnz
add
jmp
push
mov
pop
hlt
popf
ds
mov
div
pop
xchg
lret
pop
inc
inc
xor
mov
pop
outsl
dec
inc
add
jmp
in
test
sti
mov
cmpsl
and
jl
mov
dec
lcall
hlt
je
push
ds
push
sub
fildl
fdivs
lahf
ret
repz
stos
pop
into
and
or
outsb
xor
pop
gs
xchg
sahf
add
cmp
xchg
fidivrl
aad
xor
out
inc
add
or
cmp
xor
push
incl
int
mov
mov
aam
xor
mov
push
div
jbe
repz
mov
or
adc
test
int3
aam
mov
adc
sub
stos
mov
daa
call
push
repnz
test
pop
lea
xor
add
jmp
dec
jge
cmpb
jge
push
loope
pushf
cmpsb
dec
cmp
mov
push
imul
ret
ret
and
push
rol
subb
jge
dec
fimull
jae
xchg
cld
bound
je
sbbb
data16
cmc
or
mov
rorb
cmpsl
dec
jbe
inc
shll
pop
xchg
sub
adc
lock
add
popl
add
ljmp
in
lds
insb
inc
movsb
mov
cmp
dec
mov
mov
popa
in
pop
cmpsl
in
movsl
push
out
mov
and
push
cli
stc
inc
cwtl
je
or
mov
lock
cs
in
sub
inc
hlt
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
in
dec
sub
push
jl
into
jg
jl
mov
jmp
sub
mov
jle
mov
out
inc
xor
push
add
out
inc
sub
or
sbbb
mov
mov
cmp
cmpsb
sbb
test
cmpsl
mov
push
repnz
stos
lock
dec
rorl
jbe
jge
pop
jo
aam
lahf
mov
cltd
mov
dec
push
rclb
pop
subb
pushf
fildl
aad
dec
aad
loope
or
ss
sbbl
xchg
test
test
mov
pop
test
mov
mov
sub
movsb
loopne
sbb
sbb
push
fimuls
ret
dec
int
test
xchg
jmp
cmp
and
sbb
push
xchg
ret
jo
dec
ss
adcb
push
or
jl
jb
inc
jae
dec
pop
daa
pusha
pop
inc
and
in
cmp
lds
or
fcompl
and
cli
clc
add
xchg
pop
xlat
push
jg
fimuls
ret
mov
and
push
cmp
and
lret
in
sahf
call
add
or
lds
inc
movsl
and
pop
insb
mov
inc
mov
mov
xor
jne
in
xor
add
sahf
jb
add
cld
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
je
ss
dec
add
jg
jl
sub
inc
add
frstor
push
dec
jae
pop
xor
cmpsl
xorps
pop
popf
jmp
sbb
incl
pop
rcrl
jbe
jno
add
and
jb
pop
sub
adc
out
push
fnsave
push
mov
in
mov
cmp
fsts
xorl
adc
mov
pop
sub
lds
cmp
sub
jl
pushl
inc
inc
movsl
in
xchg
xchg
xchg
sub
aaa
shr
push
loope
mov
cmpsl
cmp
lret
ljmp
es
imul
clc
sarb
xor
xchg
pushf
dec
loopne
jg
icebp
mov
scas
pop
push
cmp
mov
ja
cmc
lcall
jnp
shrl
add
into
fisubrs
dec
int3
or
mov
mov
jp
fildll
out
es
adc
mov
push
das
jle
idiv
jmp
pop
cmc
inc
dec
shrl
mov
test
jbe
jg
pop
mov
loope
jmp
insl
cmpsl
aad
repnz
lods
push
in
fwait
adc
mov
popf
xchg
jl
sub
push
mov
xchg
lcall
xor
pushf
clc
jmp
jno
in
cli
insl
cmpl
push
lahf
push
sbb
jl
into
jg
jl
jbe
mov
enter
pop
inc
int
sbb
sarb
and
xchg
fisubs
scas
cs
aaa
lret
mov
push
lahf
jbe
push
pop
stc
popa
add
mov
test
stos
sub
scas
xchg
inc
push
and
sbb
push
shrb
out
cmpsl
hlt
mov
stos
sbb
in
sti
push
cmp
adc
cmp
lods
js
cmc
push
add
pop
pop
xor
pop
sbb
in
aad
mov
sub
push
add
cmc
or
sti
ret
sti
dec
xchg
rcl
add
int
les
inc
mov
pop
push
or
pop
or
insb
push
sbb
test
dec
cmp
cmp
in
mov
jno
mov
rclb
mov
and
xchg
xor
lcall
and
rorb
leave
hlt
loope
sbb
cmp
jmp
scas
daa
cmpsb
jecxz
mov
sub
push
push
mov
rcl
and
icebp
adc
adc
mov
jp
ljmp
inc
mov
insl
in
fmul
xchg
push
or
adc
push
movsl
mov
sub
loope
mov
je
pop
xor
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
jb
dec
test
add
jl
jl
es
das
ss
add
repnz
jnp
stc
cmp
outsb
jmp
push
loop
out
push
ljmp
xchg
cmp
or
cmp
pop
ds
cmp
lds
lret
cli
xchg
ficompl
mov
inc
adc
in
or
mov
inc
icebp
hlt
mov
cmpsl
icebp
outsb
aam
adc
dec
test
in
and
add
xchg
and
sub
inc
or
cmp
jne
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
dec
test
data16
jl
jl
jmp
dec
lods
dec
mov
lds
cs
jl
dec
xchg
jecxz
mov
sbb
fsubs
sub
dec
inc
sbbb
sub
cmp
mov
sub
or
mov
inc
jae
xchg
xor
sti
faddp
std
mov
sbb
xor
rcl
sbb
cld
add
xchg
rcrb
orb
scas
inc
fincstp
sbb
mov
pop
and
pop
cmp
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
lea
incb
jl
pop
call
xor
sbb
aam
ljmp
int3
mov
movsb
add
in
push
and
pop
mov
loop
push
dec
and
ret
or
sbbl
daa
repz
jb
mov
or
xor
js
inc
add
pop
jg
mov
pop
cmpsl
out
and
jge
and
cmp
les
lods
pop
push
ret
cmp
leave
mov
iret
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
xor
jl
jg
jl
lea
dec
adc
mov
or
rcl
sti
pop
and
lods
mov
shll
js
iret
cmp
sbb
lods
lods
xchg
imul
cmp
or
jb
adc
cltd
lods
xor
xchg
testl
cwtl
pop
andl
nop
jmp
pop
mov
lahf
cmc
xor
popa
jo
push
jmp
filds
xor
xchg
sbb
and
mov
push
jecxz
or
mov
mov
mov
adcl
int3
mov
outsb
xchg
adc
pop
dec
push
mov
cmp
push
and
jp
jns
rcll
adc
test
std
xlat
jb
sbb
inc
dec
jo
test
or
insl
ja
bound
cmp
insl
out
sarb
or
jp
cmp
sub
xchg
dec
xchg
mov
call
fsubs
push
inc
testl
adc
mov
subb
lahf
or
aaa
mov
ds
es
cs
push
fldl2t
jmp
cmc
adc
js
outsl
test
insl
and
add
mov
xor
mov
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
push
addr16
into
pop
jl
xor
jl
in
clc
into
outsl
outsb
fwait
aaa
lods
pop
push
jmp
cmp
pop
popaw
sub
imul
mov
sbb
mov
repnz
dec
jle
gs
push
pop
pop
call
popa
decb
mov
dec
outsl
in
mov
test
pop
jne
and
mov
inc
adc
sub
dec
fwait
xchg
inc
add
xlat
enter
les
xor
push
fwait
push
pop
jle
sub
inc
push
inc
xchg
dec
ret
or
xchg
cmp
inc
rep
int
sti
inc
lods
lcall
inc
push
std
push
add
pop
clc
enter
xchg
pop
in
ss
outsl
sbb
pop
inc
mov
dec
push
mov
mov
fwait
dec
outsb
iret
cmp
shll
fldenv
or
dec
movsl
push
test
mov
xchg
cmc
or
inc
mov
je
ret
jo
mov
push
dec
xchg
sbb
xor
les
in
movsl
imul
push
jle
mov
lea
dec
jno
mov
jae
jl
outsl
fsubrl
adc
fsubrs
cli
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
ja
fs
xchg
jl
xor
jl
pop
sub
lret
lods
dec
add
pop
jnp
mov
add
xchg
xor
pushf
cmp
cs
jle
sbbb
insl
cmp
outsb
cmp
mov
add
rcrb
jns
out
sbb
rolb
xor
sub
fs
fists
iret
fwait
push
or
mov
jge
enter
aam
sub
jo
ret
int
sub
push
mov
call
push
in
jmp
and
mov
cmc
negl
and
loopne
adc
xchg
enter
mov
adc
aad
cld
and
inc
jo
inc
clc
jae
fimuls
loopne
sbb
in
cmp
mov
adc
jle
sbb
pushf
std
icebp
mov
test
lcall
and
imul
nop
pop
push
inc
rorl
icebp
inc
pop
xor
mulb
leave
mov
adc
adc
push
enter
cmp
cmp
stos
loopne
lahf
sub
adc
mov
test
daa
push
adc
sti
dec
fs
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
inc
or
jl
xor
jl
xchg
inc
and
iret
mov
sbb
mov
sub
fldenv
arpl
push
push
leave
mov
in
mov
adc
stos
out
jns
cmp
push
call
fadds
jp
loop
aam
arpl
into
fdiv
testl
inc
sti
mov
cmp
ss
push
and
test
nop
sti
push
add
mov
or
sbb
push
mov
push
adc
and
adc
and
dec
adc
int3
inc
out
mov
iret
test
mov
cld
pop
adc
dec
push
mov
mov
xchg
cli
jne
repz
dec
add
pop
rclb
or
jnp
outsl
dec
cmp
inc
add
iret
inc
sbbl
enter
sub
and
test
out
stc
jne
sub
int3
mov
into
roll
sti
jno
call
cltd
sub
divb
add
pushl
inc
push
stos
xchg
xor
aaa
jmp
add
fs
pop
jb
call
xchg
inc
jge
lcall
lret
fadd
mov
jnp
and
sub
shlb
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
leave
cmc
aam
sbb
jg
jl
xlat
mov
xor
je
push
inc
xor
loop
dec
inc
cmp
dec
daa
fwait
nop
popa
mov
test
push
sahf
cvtdq2ps
test
sahf
dec
xor
movl
movsl
lcall
and
mov
mov
sub
jbe
adc
xchg
xchg
jmp
adc
add
xchg
and
stc
or
sbb
int3
sub
aam
pushf
and
adcb
arpl
dec
and
cmpsb
mov
in
and
xor
dec
push
lret
lock
inc
mov
push
mov
mov
inc
movsb
cli
in
xlat
fwait
pusha
into
fdivr
inc
imull
add
inc
sbb
bound
cld
or
pushf
ss
xchg
aad
lret
jne
cli
push
icebp
aas
nop
xor
sarb
cmp
inc
mov
loope
mov
in
fbstp
lret
mov
cmc
daa
pop
in
clc
pop
in
xor
std
ja
push
clc
and
sbb
gs
in
aad
adc
or
push
ret
scas
cmpl
jbe
push
mov
jne
loop
xchg
dec
mov
xor
push
ja
mov
jmp
mov
mov
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
repz
dec
lods
out
sbb
jg
jl
stc
lfs
cld
std
adc
bound
rorl
ja
notb
mov
clc
dec
or
xchg
mov
int
clc
ficoml
or
into
sub
movsl
stc
aam
adc
lahf
fiadds
adc
adc
or
mov
je
ja
into
fldenv
inc
outsl
pop
pop
cmp
imul
icebp
leave
out
sbb
xor
stos
repz
lret
rcll
adc
inc
das
adcl
insl
cmp
jnp
mov
repz
stc
xchg
mov
scas
add
dec
mov
xor
movsl
adc
leave
sarb
mov
mov
or
lcall
and
xchg
lahf
jbe
or
pop
push
inc
psrlq
jae
mov
or
arpl
insl
pop
pop
push
cmp
or
push
lcall
cmp
hlt
negl
leave
cltd
xor
dec
pop
movsb
xchg
cld
mov
or
into
adcb
sub
lock
repnz
inc
mov
je
outsl
mov
dec
shl
lock
jl
xchg
icebp
or
gs
mull
sti
or
mov
rorl
scas
xlat
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
pop
jge
in
sbb
jl
push
lods
mov
in
dec
cld
fadds
subb
mov
pop
mov
dec
push
test
cmove
aam
ja
jbe
cmp
and
mov
fistpll
or
pop
ja
aam
shrl
or
stc
and
test
jecxz
data16
scas
sti
xor
pop
lret
in
push
cmp
pop
mov
or
out
cmp
pop
xor
ds
aaa
adc
js
push
lret
pusha
sbb
dec
lods
dec
cmpb
lahf
mov
lods
adc
jns
mov
shrl
ljmp
jbe
stos
std
pop
lock
lret
mov
xchg
xchg
sbb
or
mov
mov
mov
test
int3
testb
dec
sbb
cli
xchg
inc
sub
ret
jo
mov
repz
mov
cmp
sbb
push
push
out
out
aas
mov
inc
popf
mov
push
xchg
or
mov
addr16
sarb
dec
mov
jp
scas
mov
adc
hlt
cwtl
or
imul
sbb
mov
jmp
psraw
out
frstor
aad
loop
jle
jl
xor
jl
or
je
or
xchg
push
adc
and
das
scas
dec
sub
mov
push
inc
repz
je
xor
xchg
clc
mov
jp
rorb
iret
divl
mov
cmp
imul
lcall
ret
jo
cwtl
add
push
add
cmp
stc
and
adc
cwtl
mov
lret
add
imul
clc
sarl
cmp
adc
fnsave
mov
xor
mov
mulb
pop
fbstp
outsb
bound
test
pushf
and
mov
lret
xorb
xchg
mov
div
jae
pop
mov
or
repz
xor
xor
push
xor
leave
rcrl
jge
shlb
mov
add
loop
sbb
push
push
adc
cld
mov
shll
rorl
adc
aad
in
cmc
mov
or
jo
es
frstor
mov
bound
lcall
push
fstpt
addl
stos
lahf
fadd
hlt
mov
pusha
jnp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
flds
jns
insb
push
and
jns
cmpsb
sbb
jle
xchg
dec
stos
cmp
xchg
imull
push
mov
push
lods
inc
lods
imul
sbb
sub
xchg
xor
adc
sbb
sbb
push
adc
in
xor
add
andb
ret
sarb
jo
scas
cli
cmc
mov
hlt
mov
addl
mov
push
or
call
fsubrs
adc
jge
cwtl
push
xor
pop
jmp
xor
gs
movsl
sbb
adc
xchg
repz
cmp
lods
xchg
pop
stos
repnz
sbb
add
push
pop
xor
loopne
jb
ret
ficomps
xor
jmp
call
or
xchg
adc
push
clc
adc
jp
arpl
rcrb
or
and
dec
std
xchg
rclb
push
adc
fs
adc
pop
cmp
xor
mov
insb
push
cmp
mov
ficoms
lds
inc
or
mov
into
pop
icebp
jmp
pop
leavew
stc
jne
test
jge
pusha
xor
in
push
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
mov
adc
jg
jl
jp
mov
out
int3
sbb
sub
and
or
pop
jns
imull
mov
fdiv
sar
sub
xor
icebp
lods
repnz
popl
leave
mov
adc
xlat
clc
mov
cs
stos
imul
gs
mov
es
inc
int
or
stc
repnz
sti
fsubrl
xchg
test
jmp
movsl
addr16
push
mov
mov
jbe
push
lds
push
aad
lret
enter
dec
xor
jno
ret
dec
push
sub
dec
push
out
cmp
pop
aaa
daa
and
push
insb
cwtl
hlt
test
jecxz
mov
xchg
inc
add
shll
iret
pop
dec
and
out
stos
cmp
movsb
fwait
lods
xchg
fisttps
mov
fcoml
shl
subb
mov
roll
pop
pusha
lds
les
xor
inc
mov
insb
pop
aam
xor
lock
or
jge
xchg
xchg
sub
jg
mov
imulb
scas
je
cmpsl
nop
inc
test
dec
arpl
pop
out
or
dec
cmp
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
lcall
dec
and
cmc
xor
cmp
in
jnp
mov
mov
or
aaa
subb
push
aas
inc
sub
xor
add
jge
xchg
xor
mov
pop
push
jmp
xchg
fs
iret
jp
lcall
scas
mov
xor
lcall
fstps
jmp
iret
and
lahf
or
inc
mov
sub
nop
pop
repz
aad
cli
sbb
ljmp
sub
movsb
fwait
and
sub
mov
sub
jbe
enter
mov
in
in
mov
mov
inc
aaa
or
test
js
cli
mov
jle
int
xor
ficoms
lahf
xchg
sub
rolb
insb
hlt
pop
dec
pop
sarb
in
dec
fistpl
or
test
sub
ret
add
cmpl
loop
incb
arpl
pop
pop
stos
mov
jno
icebp
and
aas
loopne
in
imul
mov
mov
dec
aam
sbb
js
mov
jns
cmp
les
int3
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
pop
cmp
dec
xchg
leave
or
ljmp
push
div
repnz
pop
xchg
icebp
or
fxch
mov
jb
stc
and
xor
adc
sub
jmp
movsb
fistl
sbb
cmpb
add
and
imul
stc
xlat
call
aaa
addr16
add
repz
outsl
daa
and
fmuls
ss
insl
xchg
and
push
xor
in
xchg
repnz
rcll
xor
and
jecxz
and
cmc
sarb
add
cmp
xchg
cmp
stos
test
dec
stos
addr16
sbb
and
out
fdivrl
popl
lea
fwait
mov
int
xor
pop
icebp
sub
outsb
jg
test
mov
xchg
and
js
mov
mov
xchg
xor
out
data16
cltd
or
inc
xchg
push
frstpm(287
addl
push
inc
inc
sbb
push
pop
in
lock
in
ret
movsb
inc
jbe
and
dec
jecxz
int
mov
in
xor
lret
dec
mov
addr16
pop
xchg
mov
ljmp
pop
outsl
les
mov
mov
mov
jmp
or
push
cmp
dec
rcll
jle
adc
jl
add
push
andb
cmp
mov
pop
cmp
je
mov
mov
icebp
mov
shrl
pushf
ja
sbb
push
mov
pop
pop
loope
adc
push
aam
push
repz
or
aas
ret
aam
and
dec
inc
cld
inc
mov
jmp
outsl
xlat
xchg
mov
movsb
cmp
repz
jno
jo
pop
add
fnsave
mov
out
mov
dec
sahf
push
cli
lret
mov
es
or
and
insb
negb
imul
ret
xchg
mov
and
lods
arpl
or
xor
repz
mov
push
aad
lds
push
lods
push
mov
loope
stos
xchg
jae
cmp
rcll
mov
loope
inc
out
in
pop
test
mov
xchg
popf
cmp
repnz
imul
scas
insl
js
and
addl
add
mov
lods
inc
insl
mov
inc
test
xchg
add
lcall
imul
fstl
add
mov
adc
rolb
rorl
scas
xlat
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
pusha
out
xchg
jg
jl
cmpsb
sub
inc
mov
mov
and
ficoms
sub
xor
mov
addb
imul
outsb
les
push
lret
pop
arpl
mov
and
and
push
testb
cmp
mov
mov
imul
adc
push
cwtl
xchg
lret
pop
jl
inc
data16
dec
jbe
jge
xchg
cltd
roll
lahf
fstpl
sub
or
inc
jp
inc
inc
shlb
dec
mov
cmpsb
mov
jno
loopne,pn
jbe
in
das
bound
dec
dec
adc
inc
fisttpll
xor
pushf
jmp
sub
dec
sub
pop
leave
mov
push
test
ja
jecxz
aas
and
std
rclb
push
js
xchg
mov
out
push
pop
in
outsb
icebp
clc
fnsave
adc
push
push
and
jmp
lret
jne
inc
jg
rcrb
push
lcall
sub
popa
fwait
mov
mov
in
test
jmp
push
jno
cld
mov
out
sbb
cmp
sbb
pop
nop
jp
je
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
sbb
repz
xor
ss
test
in
jge
pop
orb
pop
sub
fcoml
jp
mov
je
sbb
jp
lahf
and
sub
adc
xchg
test
cmp
into
lahf
decb
push
push
fbstp
ss
lds
repz
push
lock
jne
outsb
movsl
jl
push
cmp
fcmove
push
je
cmc
xor
int3
xlat
shlb
popf
int
ret
mov
mov
leave
push
popf
pop
stc
repz
xlat
inc
sti
jmp
dec
xor
mov
rep
aas
in
popf
cmpsl
mov
push
mov
rcll
mov
fadd
test
xor
in
ja
adc
xor
addr16
shlb
mov
push
scas
movsl
push
cwtl
mov
cld
ret
sti
fidivl
stc
mov
cmpsl
sbb
sbb
dec
and
or
mov
and
and
push
cmp
mov
sarb
out
sbb
icebp
cmp
sub
subl
call
jecxz
push
mov
push
jp
lea
insl
cli
adc
sub
add
mov
sub
xchg
inc
mov
lahf
rorb
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
lock
jl
jl
jl
dec
dec
push
pusha
repnz
lea
loope
je
sub
arpl
jnp
dec
jl
jae
sbb
xchg
test
inc
add
xchg
es
les
es
inc
stos
inc
xor
adc
rorl
mov
movsl
pop
xlat
push
je
mov
dec
insl
fbstp
dec
xor
mov
imul
enter
push
pop
jmp
idivl
addr16
pop
sbb
daa
mov
and
mov
xlat
ret
mov
notb
pop
add
negb
in
dec
dec
std
lahf
xchg
jge
pop
out
outsl
int
xor
or
fcmovbe
or
add
cmp
mov
or
mov
xchg
add
imul
loop
push
sbb
xchg
dec
repz
inc
cmpsl
repnz
xchg
and
movl
add
shl
xchg
fs
jns
adc
jne
inc
orb
jl
or
pushf
add
lods
dec
arpl
xchg
pushf
push
push
lret
jo
fcom
mov
lds
and
jl
xor
idivl
xchg
or
sub
or
push
sbb
sbb
xor
sbb
shrb
cmpsb
lret
adcb
inc
pop
jmp
movsl
arpl
int3
mov
and
jns
xchg
lahf
inc
and
insb
xchg
scas
in
sub
sti
and
fsubrl
or
push
int3
cmp
cmp
out
pop
out
mov
sbb
adc
ret
push
push
fcoml
push
movsb
test
ret
jo
add
mov
jecxz
pop
fstpt
sbb
pop
dec
dec
add
mov
mov
clc
cld
cmpb
inc
sub
scas
sbb
js
sbb
cmp
pop
push
das
xchg
cwtl
xchg
fbstp
mov
pop
ja
xor
gs
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
pop
lahf
pop
sub
jl
bound
out
sahf
and
or
sbb
cltd
or
jo
imul
frstor
insl
in
lret
fadd
mov
xlat
mov
mov
addb
dec
xor
ret
mov
sbb
lret
test
sahf
pop
xor
pushf
cmc
call
dec
loopne
mov
fbstp
je
test
test
inc
stos
or
push
fcmovbe
sub
xchg
data16
jb
inc
xor
add
ret
mov
jb
sub
int3
mov
lahf
test
mov
outsl
ret
stos
add
add
rcrb
mov
pop
inc
xor
sub
cli
add
enter
pop
fcoms
sub
cmpsb
insl
and
cmpl
adc
push
add
jns
pop
mov
sti
sub
in
or
push
div
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
sahf
adc
jl
sbb
jl
sub
mov
bound
cmp
add
xchg
dec
ret
push
cmc
cmpsl
dec
or
and
mov
push
mov
inc
imul
mov
jg
testl
and
cli
jmp
sub
push
pop
cmp
dec
pop
gs
mov
ret
nop
inc
jae
and
cwtl
pusha
sub
dec
imul
cmpb
adc
xlat
push
fcmovbe
xchg
aam
lock
je
push
popf
iret
stos
jecxz
add
xor
xchg
push
or
jae
mov
mov
xor
pop
pop
test
xlat
xor
jne
mov
imul
mov
xchg
outsb
movsb
or
mov
pop
pop
push
jecxz
jp
mov
and
jecxz
push
data16
sbb
push
xchg
cld
scas
sub
sbb
clc
fsubs
pop
push
pusha
adc
inc
gs
je
cmpsb
stos
daa
mov
jecxz
test
ret
push
xchg
mov
inc
cld
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
outsl
push
cmp
jl
sbb
jl
xor
loopne
push
mov
insb
mov
inc
lahf
push
mov
sub
inc
mov
sub
fists
es
mov
pop
xchg
mov
scas
mov
sahf
mov
in
xchg
test
xchg
fmulp
pop
fisttpl
adc
in
inc
lahf
sarb
icebp
dec
rclb
repnz
push
mov
push
pushf
aam
adc
jecxz
sti
or
dec
lcall
aas
inc
ret
mov
sbb
adc
pop
int
bnd
aam
dec
es
cmpsb
jno
cmp
sub
jns
mov
sti
mov
stos
or
leave
mov
enter
xlat
pop
movsb
xor
adc
aaa
cmp
loope
outsl
inc
mov
sbb
ljmp
mov
jno
arpl
daa
aaa
lret
mov
arpl
lock
push
scas
cmp
dec
imul
cmp
daa
xchg
insb
cmpsb
cmpsl
push
xchg
push
js
sbb
add
xor
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
rcr
sub
jl
jg
jl
cmpl
push
inc
add
jo
push
nop
and
inc
lcall
adc
sahf
sbb
mov
jbe
mov
cmp
cmpsb
mov
lods
pop
notl
pop
jmp
in
jnp
ja
jno
push
repnz
sbb
test
jns
cwtl
jb
jbe
aas
push
out
xor
decl
pushf
aad
sub
and
in
repz
shlb
xchg
pop
adc
xchg
clc
jnp
xor
fists
movsl
jno
and
inc
cmpsb
daa
test
sub
push
mov
mov
sbb
ror
or
mov
xchg
ret
push
das
jae
xchg
dec
xchg
mov
fsub
repnz
fdiv
and
imul
or
mov
fcomip
fdivrs
les
addr16
jmp
jmp
inc
fsubrs
pop
or
out
stos
inc
lahf
xchg
int3
adc
or
cmp
mov
dec
pop
or
inc
or
inc
and
adc
test
jmp
pop
loope
sbb
lret
mov
or
xchg
in
jl
sbb
jl
loope
mov
pop
leave
cmp
aad
fcmovbe
push
mov
call
pop
ja
sahf
or
cmp
dec
je
iret
adc
popf
add
add
inc
mov
outsb
pop
pop
es
adc
cli
sbb
pop
lods
push
insb
mov
cld
jp
push
cltd
jmp
ljmp
test
aaa
mov
add
or
lods
outsl
rolb
imul
xchg
bound
cld
and
aas
dec
xor
ret
dec
xlat
inc
ret
mov
addr16
rol
mov
cmp
addr16
repz
add
pop
push
ret
mov
mov
or
adc
adc
fcomps
enter
outsl
inc
bound
fisttpll
popa
addr16
sub
or
gs
dec
push
arpl
inc
sti
sub
adc
and
scas
std
inc
cs
cmp
aam
ret
rorl
dec
in
fstps
adc
fistps
mov
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
xchg
and
jl
jg
jl
inc
dec
aas
dec
mov
sub
movsb
ds
in
pop
mov
lock
push
xchg
mov
out
sbb
or
fdivrs
or
call
push
dec
aad
inc
out
sbb
dec
inc
ds
sbb
out
add
jmp
fdivr
mov
repnz
sub
icebp
mov
xchg
dec
aas
fldenv
pushf
mov
scas
test
fs
test
mov
addr16
repz
push
xlat
popf
mov
aam
addr16
dec
bswap
push
test
fcomp
jle
adc
stos
in
mov
jae
mov
adc
popf
or
dec
mov
clc
stos
pop
mov
pop
jo
fs
and
lock
inc
in
push
adc
jecxz
add
imul
mov
nop
or
mov
rcrl
testb
jb
stc
mov
fisttpl
push
inc
add
push
inc
add
add
mov
add
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
xchg
sub
jl
or
jmp
movsb
or
icebp
cmp
mov
and
ja
or
in
mov
cs
cs
test
push
mov
sub
jae
pop
aas
repz
call
jg
xorb
and
xor
fbstp
mov
push
pop
mov
cmp
les
cltd
xchg
fs
cmp
fs
inc
rcrl
xchg
pop
mov
jmp
clc
mov
and
sub
out
push
add
cmpb
adc
fwait
mov
insl
fiadds
loope
es
xchg
ret
jl
dec
std
add
cmpl
mov
or
sub
mov
bound
aad
inc
inc
ja
rcll
repz
imull
repz
mov
fiaddl
dec
sbb
icebp
fimuls
sbb
push
pop
cltd
aas
xor
xor
push
mov
mov
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
repnz
jl
or
xchg
mov
mov
mov
cmp
out
les
dec
jecxz
and
lods
pop
mov
lock
jl
cmp
push
push
add
sbb
test
xchg
push
ret
test
sub
push
inc
or
jno
and
popa
xchg
push
xchg
in
idiv
mov
jmp
lret
imul
stos
jle
lock
push
or
xchg
inc
jg
cmp
fildl
push
mov
rclb
add
pop
mov
sub
data16
jecxz
adc
pusha
shlb
je
pushfw
lea
out
mov
test
jne
movsb
mov
inc
push
pop
dec
jbe
mov
mov
inc
sti
adc
fucom
and
flds
stc
xor
rolb
aaa
cmpb
call
pushf
cmpsb
mov
xchg
inc
push
cmp
pop
mov
adc
dec
push
in
movsb
addl
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
sub
or
and
xchg
pop
mov
arpl
mov
enter
out
out
lret
mov
mov
cmp
adcl
in
addl
lcall
es
inc
add
mov
insl
xchg
mov
sbb
fadds
imulb
hlt
test
or
fldcw
pop
pop
lret
repnz
sahf
mov
mov
sbb
sbb
lahf
mov
rorb
cmp
test
dec
jne
pop
cwtl
mov
test
cld
mov
roll
xchg
aaa
xchg
xchg
pop
fadds
xor
pop
xchg
imul
inc
adc
push
out
es
or
sub
jmp
push
pop
stc
or
shll
pop
insb
xchg
aad
rcrl
out
stc
xor
sbb
sbb
hlt
les
fdivr
sub
ret
jb
iret
adc
pop
fucom
xchg
stos
push
cvtps2pd
jg
aam
test
lea
addl
push
orl
pushl
addl
jmp
push
repz
adc
jo
dec
and
jg
jl
scas
sarb
fsub
mov
mov
orb
in
pop
in
mov
mov
xor
jno
out
push
sbbl
or
jne
jmp
pop
test
fs
cmp
mov
sub
iret
cwtl
push
pop
ret
inc
mov
lcall
lret
inc
iret
enter
jge
dec
dec
cmpb
cltd
push
scas
movsl
and
adc
mov
stos
xor
in
pop
jae
or
cmp
int3
es
sbb
imul
int3
mov
mov
mov
scas
push
jb
movb
add
es
outsb
and
dec
xchg
push
pusha
orb
dec
int3
andb
and
xchg
arpl
rorb
cmp
lahf
fwait
outsb
pushf
aad
fidivrl
jg
lret
out
cmpsb
inc
adc
mov
add
dec
ljmp
push
dec
jnp
jl
popf
aas
pop
push
push
pushl
jmp
xchg
pop
cmpsl
inc
adc
sub
jl
pop
and
jl
push
inc
cmp
adc
out
adc
xor
int3
push
ljmp
inc
inc
rolb
cli
push
xor
pop
adc
sub
jle
dec
push
xchg
les
lahf
shll
iret
jae
adc
popf
xor
test
imul
icebp
mov
sahf
sbb
test
hlt
fsubr
repz
stc
scas
jne
sahf
inc
add
mov
sub
add
test
in
addl
add
xchg
or
iret
push
nop
ret
sub
aas
sbb
adc
out
bnd
push
jnp
cmp
inc
imul
xchg
push
inc
sbb
std
call
out
mov
dec
xchg
dec
push
sbb
xor
xchg
sub
into
loope
stos
sbb
clc
cmp
cmp
mov
ss
test
and
and
push
xchg
jne
bound
xchg
call
test
je
sbbl
lea
push
mov
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
xchg
popf
xlat
pop
push
jl
or
and
cmpsb
and
add
inc
or
cmp
gs
test
adc
lret
into
sub
test
xchg
pop
cmp
aad
and
dec
push
mov
or
mov
jnp
lret
scas
ss
push
movsb
aad
sbb
jge
cli
pusha
pop
aaa
hlt
das
repnz
xchg
out
xor
push
loope
dec
cmpsb
sbb
sti
inc
lahf
stos
hlt
ret
movsb
dec
jne
jo
cmpsb
icebp
ja
mov
js
int
push
outsl
push
inc
sub
fs
dec
mov
adc
adc
arpl
add
mov
cmp
push
pop
mov
inc
dec
mov
in
and
addl
pop
push
sub
sub
mov
fdivrs
in
popf
sbbl
mov
mov
inc
cmp
fcoms
adc
push
mov
es
js
iret
pop
jp
repnz
pop
nop
pop
sbb
outsl
sub
xlat
rolb
stos
add
add
daa
add
add
dec
into
hlt
jge
jge
fnstenv
pop
ljmp
jl
ret
mov
fldcw
daa
test
jbe
lock
mov
jo
or
insl
push
jb
idivb
imul
jle
adc
in
jle
lret
sti
stos
and
out
mov
pop
mov
mov
sbb
push
out
mov
cld
pop
scas
aad
pop
lds
inc
dec
push
rorb
cmp
sub
mov
push
scas
test
fstpt
int3
push
xor
movsb
movsl
clc
inc
cmp
scas
jg
scas
or
clc
popa
js
aam
pop
adc
jne
retw
iret
jo
vunpcklpd
pop
push
pop
push
adc
mov
jo
imul
insb
add
xor
mov
jnp
jnp
ja
lods
jns
lret
mov
mov
xchg
ljmp
pop
gs
mov
dec
sub
jmp
aas
imul
shll
inc
shrl
mov
push
fldl
inc
lock
jmp
shr
dec
pop
pop
jns
insl
adc
inc
xor
or
jl
or
add
push
ss
push
ljmp
add
lret
dec
mov
or
lahf
sub
mov
aam
fs
outsl
ss
mov
or
mov
sub
mov
mov
arpl
data16
mov
mov
xchg
fisttpl
jae
push
out
int3
adc
icebp
xor
pop
mov
popa
dec
xchg
push
out
fmulp
lds
sahf
orl
sub
loope
cwtl
lcall
lods
jecxz
out
test
cmp
jmp
cmp
cmp
addb
cmpsl
into
shll
stos
aam
insb
mov
add
jae
xchg
sub
push
ficoms
add
fistpll
pop
outsb
icebp
aam
xchg
stc
mov
sbb
loope
and
adc
inc
enter
dec
rcrl
inc
sub
addr16
push
xor
xor
add
xlat
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
push
jl
fcomps
cmp
jg
jl
or
lds
xor
mov
xchg
fst
cmpsl
not
xchg
push
pop
imul
and
push
pop
cmp
stos
out
movsl
pushf
xor
aam
jg
subl
add
pop
in
dec
push
xorb
stc
scas
arpl
out
ja
add
mov
test
push
sub
pushf
pusha
and
mov
cmpb
pop
xor
and
jo
pop
cmp
mov
and
das
or
hlt
inc
jp
in
xchg
pop
jle
insb
mov
pop
lods
rclb
ljmp
mov
pop
call
add
int3
jmp
sub
xor
add
mov
ds
dec
sbb
hlt
movsl
lods
pop
sbb
adc
pop
fwait
xor
out
inc
dec
xchg
jecxz
inc
shrb
cli
jns
jns
int3
push
push
adcl
ret
adc
ja
pusha
jmp
jns
xchg
cmc
lods
inc
add
mov
movsb
daa
call
mov
xor
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
mov
jl
jg
jl
ljmp
mov
lahf
daa
sub
int
mov
ds
mov
cltd
jg
mov
inc
xchg
les
or
push
adc
adc
mov
jnp
call
jl
and
cmc
fldl
mov
mov
js
lret
sbb
mov
ds
cmp
shrl
inc
jae
pop
jecxz
mov
cmp
bound
mov
pop
dec
adc
stc
jo
sub
mov
mov
xor
jno
push
mov
cli
mov
sbb
in
fs
dec
pop
inc
fcmove
mov
mov
aaa
clc
scas
es
out
ss
jle
test
dec
aas
cli
pop
pushf
mov
repnz
lds
enter
hlt
add
adc
imul
outsl
sbb
stos
in
adc
dec
sbb
mov
loopne
xchg
decl
pop
out
lea
and
mov
inc
clc
mov
add
jmp
xchg
out
std
push
gs
repz
jb
daa
cmp
jg
jl
pusha
push
jl
repz
mov
bound
pop
jnp
adc
pop
sub
fldcw
add
pop
mov
fwait
dec
jae
mov
jg
pop
inc
ficompl
jo
xor
mov
push
call
clc
push
mov
mov
mov
mov
dec
xor
pushf
movsl
je
std
dec
dec
imul
jle
push
add
mov
ret
sub
popf
bnd
or
xchg
inc
xor
sti
outsl
inc
les
mov
test
mov
mov
mov
cli
rolb
cmp
sub
sub
aas
pop
add
rcr
movsl
test
test
fcoms
call
call
lret
sbb
lahf
imul
jb
lods
dec
je
rol
pop
and
stc
cmp
mov
dec
push
inc
or
inc
enter
pushf
xor
call
dec
add
clc
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
sub
add
cmp
jl
xor
test
pop
jecxz
adc
push
add
js
dec
push
les
rorb
popf
test
in
int
inc
inc
adc
bnd
mov
sbb
sbb
hlt
rcrb
jb
push
xlat
cmc
ljmp
dec
popf
sti
in
push
xor
jne
dec
inc
jns
mov
cmpsl
mov
in
pop
and
add
inc
outsl
cli
cmp
adc
stos
popa
stos
push
jnp
cmp
cmpsb
fs
lahf
pop
adc
outsb
xchg
push
xor
dec
inc
xchg
lahf
mov
push
hlt
cmc
nop
hlt
pop
sbb
shl
les
or
adc
inc
xchg
iret
lods
aaa
fnstsw
mov
imul
jbe
ljmp
cli
cld
mov
cltd
xchg
cmp
mov
iret
xchg
pop
rcll
shll
mov
sbb
outsl
fcoml
adc
xchg
int
add
xchg
scas
lret
mov
xor
add
xor
add
xor
add
xor
daa
add
add
lret
mov
insl
lods
test
in
lds
jl
jg
jl
lods
add
shlb
sub
fidivl
int3
mov
pop
inc
xor
adc
mov
cmp
mov
cmp
xor
aaa
lcall
dec
push
mov
mov
dec
outsl
mov
jge
cltd
dec
mov
fadds
orl
aaa
jg
test
notl
cld
stc
inc
pushf
jp
inc
int
jg
pop
fwait
xor
mov
pop
loop
cmp
arpl
lret
lret
inc
loope
mov
stc
lods
or
adc
mov
es
lods
loop
push
lret
jns
cmpsl
fwait
movsl
leave
xchg
je
push
cmpsl
add
adc
ficoml
add
pop
push
incb
add
adc
rorb
shll
add
mov
bound
call
aam
popl
push
les
add
call
out
and
fistpll
inc
push
push
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
fmull
jl
or
cwtl
fisubl
push
aad
popa
das
popf
stc
sar
gs
enter
dec
mov
and
dec
inc
imul
add
in
mov
insl
and
int
stos
or
fdivs
fdivrl
sti
add
shlb
fmulp
loope
es
ficoms
outsb
jno
out
sbb
insb
sbb
dec
sub
mov
sbb
into
fstl
and
mov
pushf
scas
lret
je
push
js
pop
mov
xchg
mov
adc
aad
and
or
pop
jae
mov
icebp
inc
xchg
add
push
sub
sti
fstps
sub
stc
js
movsb
or
sub
ficomps
lcall
push
loope
fisubrl
xchg
andb
cmp
shrb
or
jmp
or
fdivrl
mov
or
cmp
push
mov
or
dec
shl
dec
adc
or
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
outsb
insl
scas
cmpsl
jecxz
jl
push
jg
jl
mov
adc
mov
xor
fistpl
mov
test
sub
xchg
lret
or
cmp
lock
pop
mov
inc
jnp
les
lret
aas
paddd
ffreep
popa
push
ja
push
adc
jge
mov
push
leave
lahf
sub
sbb
mov
mov
mov
test
repz
push
mov
jb
adc
repz
int
inc
or
int3
imul
mov
mov
nop
and
cs
or
cli
imul
push
sbb
in
xor
xorl
mov
sub
mov
mov
aas
fcomps
add
test
rol
add
push
xchg
xchg
pusha
mov
shrb
and
negl
aam
cs
sbb
pop
cmp
or
inc
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
pop
adc
mov
cmp
mov
push
xlat
adc
jno
push
add
mov
ds
cmc
pop
and
les
xchg
stc
fwait
dec
ss
pop
je
testb
repnz
das
les
sub
cmp
pop
or
inc
jne
cltd
add
fstpl
add
jl
lods
push
fs
mov
xor
and
sarb
js
push
sub
cmp
scas
jnp
subl
out
mov
push
jae
lock
mov
mov
scas
loopne
jno
fcom
add
sub
stos
cmp
addb
insb
nop
jp
or
popa
sbb
lcall
pop
test
call
sbb
sub
or
mov
pop
das
mov
xor
or
dec
ja
mov
push
cli
movsb
popa
and
and
dec
adc
call
cmc
lret
inc
xchg
inc
in
jns
adcl
add
add
flds
xor
arpl
jg
jl
subb
enter
ret
cmp
out
aas
jbe
mov
jl
out
aam
sahf
push
int
mov
dec
sbb
adc
mov
push
mov
mov
cbtw
mov
pushf
mov
fs
popf
sub
ret
rorb
jl
lock
dec
pop
shlb
out
popf
xor
xor
sub
cmp
adc
fsts
pop
je
outsb
call
mov
xchg
je
adc
lahf
and
xor
dec
pusha
mov
xlat
xchg
inc
dec
push
cwtl
lods
push
cs
loop
xor
les
adc
lahf
scas
push
inc
cmp
out
cmpl
das
lods
cmpsb
xchg
or
hlt
out
add
sarb
out
pop
aaa
pushf
mov
jne
ret
sahf
mov
jle
mov
or
out
lret
push
sub
mov
add
imul
iret
shll
imul
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
pushf
cwtl
clc
js
xor
jg
jl
xchg
rolb
in
inc
insl
jno
and
sahf
push
pop
leave
dec
pop
mov
inc
ja
cmp
mov
outsl
fiaddl
jle
aas
ds
cmpsb
xor
cmp
mov
sub
imul
stos
dec
sub
push
mov
push
stc
fists
jne
mov
mov
pop
push
cmp
xor
rcll
iret
inc
mov
lret
or
cwtl
xorb
sti
nop
push
and
adc
int
int
or
outsl
lret
add
inc
dec
pusha
popa
jno
and
inc
bound
mov
inc
adc
xchg
cmp
inc
or
fcmovbe
lods
call
sbb
scas
imul
jo
nop
inc
sbb
or
out
addl
pushf
xchg
cs
jne
in
and
cld
pop
and
enter
push
popa
data16
pop
aad
js
pop
mov
arpl
sbb
and
sub
dec
push
rcll
test
xchg
xor
mov
fld
add
sbb
rolb
add
push
add
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
and
pop
xor
jg
jl
mov
cwtl
cmpb
sub
push
xchg
fs
out
sub
push
lods
dec
cmpb
stos
shl
loope
stc
adc
fistpl
not
mov
push
push
mov
jb
push
icebp
ss
js
xchg
repz
daa
xlat
xor
in
fsubr
xor
imul
lcall
xchg
or
mov
inc
rorb
push
dec
adcl
push
inc
mov
cmp
loopne
cmp
popa
aaa
dec
sbb
xor
mov
int3
fimuls
dec
ret
outsb
lock
sub
adc
cltd
ds
or
mov
pop
daa
popa
mov
daa
jae
inc
xlat
xor
mov
into
imul
lock
jp
les
xchg
out
jmp
pushf
xchg
das
fcmovb
mov
test
sbb
ds
sbb
fdivl
or
sub
bound
adc
inc
div
mov
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
xchg
push
pop
xor
jl
push
jg
jl
xor
add
adc
ret
mov
ljmp
add
xor
pop
xchg
pop
fsts
movsl
or
adc
xor
jns
sbb
cmpsb
sub
repz
mov
mov
mov
xor
mov
mov
pop
data16
or
adc
sbb
dec
pop
adcl
push
cmpl
bnd
hlt
sti
pop
repz
pop
mov
or
jp
push
mov
pushf
xor
sub
orb
mov
rclb
jmp
in
rorb
cmp
stos
push
sub
cmp
xchg
shll
call
pop
out
lock
mov
lcall
fwait
push
add
pop
cld
sbb
fs
out
les
xor
dec
jge
lea
clc
iret
mov
es
pop
adc
inc
inc
ret
int
aas
pop
call
enter
cs
mov
inc
lock
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fisttps
cmp
getsec
jl
push
jg
jl
xor
xchg
mov
stos
iret
and
or
cmp
nop
jecxz
cmp
dec
or
push
in
sub
insl
std
gs
clc
shll
pop
loopne
rclb
cwtl
cmp
jmp
jg
xor
sub
nop
cmp
sbb
push
dec
sub
outsb
rcll
cmp
lods
xor
sbbb
adcb
lret
rolb
nop
cmc
push
jmp
pop
adc
jne
mov
call
das
mov
rorl
mov
add
clc
cwtl
cs
icebp
das
push
popa
jp
fwait
xor
popa
dec
xchg
add
bound
jae
in
and
add
jo
jno
ret
icebp
adc
adc
cmc
push
cmp
or
mov
mov
out
gs
mov
int3
mov
and
repz
stc
mov
les
test
test
jno
jle
lods
nop
push
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
not
fs
cmovae
cmp
dec
pop
scas
xchg
push
jl
sbb
lret
jnp
shr
jbe
lea
xchg
xor
lea
imul
sbb
xor
std
jo
test
es
sub
mov
incl
mov
popa
rcr
fstp
stos
push
inc
push
imul
mov
or
popf
nop
lret
sbb
sbb
rol
movsb
dec
dec
dec
flds
sahf
xchg
leave
pop
outsb
div
inc
addb
mov
inc
sbb
and
inc
cmp
mov
imul
adcb
fmull
out
sub
stos
pushf
in
lods
sub
inc
scas
mov
jb
sub
push
sbb
add
movsl
rcl
fcomp
adc
fildl
pop
adc
adc
int3
sbb
sbb
add
stos
sbb
in
movsb
cmp
and
test
mov
cwtl
mov
push
sub
stos
and
call
insl
decl
test
add
mov
jmp
push
add
jge
jnp
and
in
leave
jl
push
jg
jl
nop
popa
cmpsb
and
sub
aas
inc
adc
mov
mov
cmp
cmp
sub
or
push
leave
push
cmc
dec
call
repnz
lcall
sub
cmpsl
xor
and
pop
jo
loopne
push
dec
out
lret
imul
inc
bound
je
mov
fwait
les
jbe
out
vmovntpd
sub
in
dec
gs
sub
test
outsl
cmova
addr16
mul
loop
sbbl
pop
mov
add
inc
or
inc
jmp
mov
lret
cli
jae
mov
sbb
in
bnd
fdivrs
out
aad
je
or
and
dec
dec
jae
mov
xor
outsl
xor
fcmove
xor
mov
call
cli
aam
xchg
xor
xor
movsb
into
loopne
fsubr
jnp
cmp
jecxz
mov
inc
mov
jmp
js
xor
inc
std
jmp
inc
cld
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
jl
push
jg
jl
and
outsl
fcom
xlat
imul
test
call
add
pop
dec
mov
aam
xorl
leave
hlt
mov
cmp
adc
loopne
pushf
jnp
cs
bound
add
pop
ljmp
clc
ja
xlat
cltd
les
or
fnop
cmp
in
insb
fstpl
fiadds
pop
shlb
pop
loop
idivb
lds
inc
insb
aaa
dec
pusha
repz
daa
cmpsb
mov
pusha
outsb
dec
insl
dec
push
and
xchg
popa
mov
sbb
fisttpl
cltd
aad
jmp
mov
dec
xchg
add
mov
jmp
lea
pop
adc
gs
mov
orl
add
fcomps
lods
insb
int
sahf
push
das
lock
inc
or
cli
mov
sub
fsubr
jne
pop
or
cmp
test
pop
dec
repz
mov
cmp
inc
shlb
clc
cli
jno
inc
out
and
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
push
push
dec
sub
lret
jl
mov
or
dec
cmp
pop
out
lods
mov
daa
push
add
shrb
cs
dec
jae
ret
inc
outsl
repz
sbb
and
push
dec
inc
mov
and
cmp
sub
or
loop
lods
pop
testb
mov
jecxz
xchg
enter
int3
mov
dec
addl
or
imul
sub
mov
adc
pop
and
xchg
pop
repz
cmp
mov
in
pushf
cmpb
xor
int
mov
dec
add
imul
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
mov
jl
mov
xchg
cmc
loope
aad
jg
jecxz
fisubl
push
jecxz
mov
incl
push
loope
mov
mull
orl
and
mov
lds
lret
and
loopne
or
add
jne
sahf
mov
movsb
inc
cwtl
out
and
sti
xor
loopne
push
inc
inc
mov
lahf
enter
mov
adc
xchg
mov
stos
adc
sub
xor
pop
addl
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
leave
sub
hlt
sub
xchg
out
xchg
cld
repz
cmp
push
ret
stos
mov
fs
mov
imul
test
je
mov
mov
sbb
sbb
jmp
xor
shlb
and
sub
fsub
or
push
divb
or
pop
adcl
pushf
mov
dec
jecxz
mov
pop
and
scas
out
fwait
lods
mov
xor
ret
pop
push
mov
mov
mov
jl
inc
leave
xor
adc
popa
sti
xchg
push
xchg
in
mov
sbb
push
mov
mov
pop
out
push
jle
adc
pop
fistpl
push
mov
cmp
or
mov
mov
clc
movsb
loop
or
inc
sbb
jmp
mov
inc
mov
loope
das
and
xchg
aaa
pop
cltd
js
adc
push
clc
push
and
dec
clc
cmc
ljmp
dec
stc
mov
test
out
lret
cmp
mov
stos
or
dec
cmp
addl
and
pop
cmpsl
cmp
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
and
mov
mov
jl
daa
jg
jl
mov
cmp
mov
or
add
cld
xchg
arpl
lods
in
pop
push
jnp
mov
ss
in
adc
and
add
cmp
fiaddl
sub
xchg
cmp
out
jge
loop
mov
push
imul
lea
arpl
call
inc
cmp
adc
out
pop
icebp
jo
rcrl
sub
nop
jl
sub
add
div
pop
inc
pusha
xchg
adc
out
js
shr
stos
sti
sbb
nop
nop
cld
mov
jecxz
adc
mov
test
rcr
ret
and
mov
vpmacssdd
mov
arpl
ret
xchg
sbb
jle
sbb
cmpsb
lret
notb
inc
xchg
jno
cmpsb
loop
stos
adc
aaa
mov
imul
fcompl
cmpsb
sub
daa
lret
dec
xchg
push
inc
sub
or
inc
arpl
fcomip
mov
bound
aad
movsl
push
jl
or
or
xor
subl
gs
jns
inc
jne
xor
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
shlb
jl
jg
jl
push
push
add
jns
mov
in
leave
xchg
inc
ljmp
rolb
and
mov
push
dec
repnz
and
sahf
and
cmpsb
xor
xchg
out
insl
aad
inc
and
cmp
cmp
mov
push
stc
xor
xor
loop
idivl
out
push
shr
fs
pop
in
xor
or
lds
dec
hlt
in
sub
push
jne
insl
xchg
lods
cs
int
and
mov
mov
outsb
in
pop
pop
pop
pushf
adc
xor
dec
mov
dec
inc
mov
pop
xchg
jecxz
push
inc
cmp
sbb
jge
popa
fwait
mov
jns
or
mov
jnp
mov
stc
add
loope
cmp
pop
mov
test
jb
fcoml
ret
inc
mov
sbb
aas
stos
adc
add
ss
test
fiaddl
incl
push
scas
cmc
cs
mov
addps
jmp
add
stos
mov
daa
pop
in
les
push
in
insb
xor
cmpsl
sbb
jge
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
dec
shlb
jl
jg
jl
cmp
fdivl
xchg
std
inc
xchg
add
mov
fisubl
pop
and
inc
mov
sub
push
mov
int
jnp
sbbb
inc
movl
int3
sbb
leave
aad
jge
adc
loopne
jae
sbb
push
arpl
shrd
jle
push
inc
cmp
lods
lods
cmp
cld
call
jmp
add
sbb
jge
add
xor
out
jle
icebp
lcall
mov
fldenv
das
sti
cwtl
fidivs
adc
inc
sahf
movsl
ret
mov
loopne
pop
daa
adc
repnz
js
xchg
xchg
leave
mov
inc
mov
push
fildl
dec
sbb
fdivrl
roll
push
test
das
and
jns
mov
idivb
dec
mov
ja
cmp
mov
sub
pop
subb
in
mov
xor
dec
and
ds
out
icebp
arpl
test
popf
xchg
xor
xor
adcb
loop
dec
pmaxsw
mov
inc
call
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
cli
push
popf
jecxz
jl
lret
jl
push
mov
in
xor
push
je
lock
lcall
xchg
jp
rcrb
mov
lahf
insb
je
nop
gs
and
pop
das
sub
in
and
imul
and
xchg
sti
cmp
sbb
xor
pop
cmp
jnp
fcomi
inc
xchg
xor
and
repnz
in
or
mov
adc
hlt
sub
out
add
hlt
lret
inc
mov
mov
mov
shlb
lock
cld
aaa
xchg
dec
sbb
inc
sbb
inc
or
test
add
in
daa
pop
cmpl
js
jmp
xchg
shl
imul
jns
loope
jl
inc
adc
pop
mov
or
test
xor
dec
aas
lock
mov
mov
jecxz
push
mov
and
mov
inc
test
ret
mov
loope
mov
int3
push
adc
and
sub
xor
pop
mov
jae
out
push
movlhps
mov
or
xchg
loope
xor
jle
rcll
dec
inc
add
mov
add
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
mov
mov
leave
subb
and
pop
fildl
ret
into
or
cmpb
ds
xor
sbb
or
add
and
jg
in
cmp
mov
adcb
jp
test
add
std
push
loop
jecxz
or
mov
xchg
push
decl
into
lock
cmp
jbe
lea
rolb
jno
cmp
jle
repnz
jmp
sub
shrb
push
mov
shlb
daa
jp
dec
out
mov
or
mov
filds
outsb
cwtl
je
adc
lahf
cmp
loopne
int3
mov
pop
push
add
jns
mov
lock
add
cwtl
test
mov
int3
test
ds
inc
sub
fstpl
dec
pop
js
divb
outsb
in
out
adc
mov
push
jg
fisubrs
in
xchg
pop
and
mov
push
or
nop
out
adc
int3
adc
stc
out
insl
str
push
and
cmp
jecxz
inc
fcoms
xchg
mov
inc
push
mov
aam
mov
clc
out
mov
ret
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
stos
xlat
dec
push
inc
std
jno
dec
and
lods
sbb
fnsave
out
insb
jns
inc
inc
popa
loopne
mov
adc
dec
pop
xlat
xlat
pusha
gs
mov
mov
add
je
mov
pop
popa
and
sbb
lret
je
flds
or
sbb
or
out
sti
lods
and
lret
cwtl
lea
add
loop
jecxz
dec
pop
and
andb
repz
dec
stc
gs
popw
int
lcall
and
mov
push
xor
cld
arpl
sub
mov
xchg
push
xor
cmp
scas
nop
mov
mov
inc
cmp
adc
lret
mov
ret
sbb
or
mov
out
mov
jo
out
and
xchg
iret
pushf
dec
aam
xor
mov
insb
arpl
lret
sub
mov
test
imul
repnz
outsb
out
jnp
pop
dec
fwait
inc
pop
lahf
data16
cmp
mov
in
pop
out
xor
imul
int3
push
int3
add
adc
sub
mov
inc
ret
and
cmp
loopne
insl
int
or
mov
fldl
sbb
xchg
call
push
test
adc
std
cmp
je
mov
jmp
jmp
xchg
test
loopne
bound
add
mov
jl
lret
jl
cld
lock
mov
inc
loope
xor
jmp
icebp
inc
cmp
sbb
mov
in
mov
in
es
ds
dec
mov
inc
mov
psrlw
sub
mov
lods
add
or
imul
xlat
dec
push
push
cltd
dec
les
add
inc
mov
lea
cld
push
fildl
ds
rcrb
leave
adc
mov
and
test
and
mov
aad
cltd
rcrl
add
cli
lods
out
lret
fsubrs
out
mov
in
or
mov
mov
in
or
testl
ret
into
aad
lret
repnz
fcoml
xchg
addr16
in
push
xchg
insl
xchg
sbb
cmp
cmpsb
test
sti
out
jo
mov
pushf
shr
ret
lock
pop
int3
lahf
popf
push
test
outsb
int
pusha
or
sbbb
push
mov
pop
xchg
mov
loop
xor
adc
ljmp
outsl
inc
push
add
jne
and
add
inc
outsl
ret
mov
mov
mov
popa
cli
sub
add
adc
dec
mov
inc
cld
jmp
aam
rolb
pop
fs
jge
ficomps
lods
bts
jl
lret
jl
es
test
sub
lods
out
push
push
or
mov
aad
jle
pop
dec
shrb
lods
or
pop
dec
out
sbb
insl
aad
and
repz
push
gs
push
push
mov
push
jnp
js
popa
movb
cmc
dec
enter
and
insl
inc
repnz
dec
fisttps
lret
dec
sahf
sub
cmp
xchg
int3
imul
sub
ljmp
cmp
sub
outsb
pop
push
ljmp
loop
pop
xchg
ret
mov
inc
push
repz
mov
sub
xor
push
bound
sub
rep
mov
sti
pop
cltd
out
ds
adc
stos
mov
icebp
cmp
lea
mov
lcall
and
call
mov
fisttpll
movsb
dec
ljmp
clc
pop
cld
je
cmc
iret
adc
cmp
jbe
dec
addl
inc
mov
inc
daa
les
dec
jp
jb
jle
dec
jo
hlt
push
dec
test
cltd
shrb
xchg
mov
inc
xor
ret
popf
mov
dec
sti
pop
test
std
jbe
fdivrs
sbb
dec
cld
adc
stos
sbb
movsb
xlat
or
ret
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
or
loope
add
inc
cs
mov
add
int
scas
fsubrs
outsl
popf
pop
mov
stos
add
jp
insb
pop
ds
inc
cwtl
iret
cwtl
mov
pop
ds
int
or
rolb
loop
loope
daa
xchg
aaa
jns
sbb
lea
std
add
mov
jnp
mov
cmc
cmp
mov
test
or
in
inc
push
mov
aaa
mov
xchg
mov
shlb
fsubrl
mov
adc
push
enter
jae
stc
mov
pop
sbb
lods
xchg
adc
inc
jge
stos
les
stos
lea
imul
sbb
fldl
test
shll
dec
inc
inc
cmp
jle
inc
cmc
pop
andl
jp
sub
int
scas
out
mov
out
lods
or
mov
sbb
jle
xchg
stos
pop
mov
jp
mov
mov
outsl
lret
lods
cmp
inc
lea
bound
iret
jbe
cmp
ffreep
add
adc
push
into
pop
ss
movsb
les
adc
fs
push
ja
js
stos
lods
lret
sbb
adc
insl
xchg
ja
xchg
adc
push
or
xorl
cmp
fidivrl
mov
pop
stos
ret
mov
dec
jecxz
test
fidivrs
je
cmp
mov
leave
pop
lret
movsb
fidivs
les
xchg
ljmp
mov
cmp
mov
mov
sbb
cmp
cwtl
xchg
movsb
insb
sub
stos
call
cvtdq2ps
add
arpl
pop
sub
push
roll
pop
ja
add
adc
sbb
push
das
fs
insb
adc
adcl
aaa
ljmp
jmp
hlt
or
aaa
sub
ret
mov
push
jo
cwtl
mov
jno
push
push
push
xchg
pop
sarb
adc
daa
xlat
mov
test
mov
bound
adc
ret
jge
aaa
inc
mov
cmp
and
inc
mov
arpl
inc
mov
jge
imul
outsl
cmc
sbb
jmp
ja
or
mov
fs
adc
fbstp
mov
lock
jbe
inc
cmp
mov
and
jne
push
subb
lock
add
ja
pop
push
cmp
out
in
push
mov
or
push
test
ljmp
jno
mov
xchg
adc
aaa
les
dec
fcoms
sbb
add
jg
sbb
out
mov
mov
add
mov
rorb
loop
in
int
int
ljmp
enter
fcomi
shl
jbe
jp
pop
dec
movsb
lods
xchg
das
jno
and
lret
cwtl
fs
sarl
in
inc
into
mov
addr16
mov
cmp
pop
cmp
sti
adc
call
mov
movsl
xor
jne
and
adc
testb
xchg
jp
repz
cli
lcall
pushf
lods
neg
xor
add
imul
test
addl
in
popa
jbe
mov
out
jle
cmp
mov
sbb
enter
std
out
adc
test
pushl
xchg
sub
cmpsb
push
sti
xchg
std
frstor
lahf
jbe
repnz
add
test
in
test
shlb
lea
arpl
aaa
stos
sahf
int
or
sbb
cwtl
sub
add
movsl
add
out
stos
icebp
out
cmp
push
pop
cmp
ret
popa
rol
and
fmull
shlb
push
stos
stc
push
jnp
inc
mov
sub
aam
test
mov
lcall
aam
pop
xchg
jnp
jb
clc
add
out
xor
test
out
mov
ss
xor
push
xchg
fsub
stos
sbb
gs
push
lret
sub
pushf
test
xchg
scas
push
arpl
and
cs
xchg
xchg
mov
mov
adcb
and
fmuls
repz
jge
not
and
xor
in
and
addl
mov
mov
push
rolb
dec
inc
fdivrs
pop
das
fnstsw
js
repnz
hlt
mov
dec
fcoml
mov
fstps
jecxz
cwtl
js
adc
repz
sbb
rolb
or
mov
cmp
dec
into
arpl
rcrb
fsts
lahf
int
mov
cmpl
lds
pop
es
mov
push
mov
sbb
cmp
adc
jae
mov
test
cmpsl
jae
data16
sub
into
std
fnstenv
mov
or
sbb
out
push
mov
xchg
add
mov
shl
int
aam
scas
and
xchg
aaa
fdivl
xchg
subl
push
movsb
sbb
cwtl
jo
outsl
into
cmp
jmp
divps
cmc
or
mov
push
nop
cmpl
xorl
maskmovq
jecxz
xchg
bound
add
mov
sbb
inc
shrb
cmp
jmp
sub
dec
add
xlat
push
pop
xchg
aaa
xlat
ja
sbb
dec
sub
ret
cmp
push
pushl
ds
shrb
adc
aad
xor
or
pop
cmp
aam
xor
mov
push
cmc
mov
call
out
mov
xor
ret
xchg
or
mov
call
in
in
and
pop
xor
xchg
scas
xor
inc
cmp
call
inc
out
call
scas
popa
pop
pop
sub
sbb
std
fisubrs
xor
int3
frstor
pop
and
pushf
outsb
test
pop
push
outsl
lea
mov
sub
mov
sub
insl
jge
inc
insl
lret
mov
loope
ja
leave
leave
aaa
stc
aas
jnp
sbb
xchg
push
imul
outsb
jae
push
xor
xchg
xchg
ficomps
call
fnstcw
shl
dec
das
leave
and
movsb
or
sub
adc
xor
adc
mov
lret
pop
mov
pop
inc
lcall
xchg
inc
sbb
xchg
jle
xchg
inc
or
in
pop
iret
test
hlt
inc
pop
icebp
out
and
inc
inc
push
lds
ds
dec
pop
lods
mov
dec
fidivl
add
lcall
mov
xorl
add
push
mov
push
js
adc
xor
stos
sahf
mov
pop
mov
xchg
dec
push
or
mov
xchg
and
outsb
pop
pop
push
and
push
pop
jg
fwait
sbb
repz
je
and
jb
mov
cltd
inc
and
cmp
add
dec
into
and
out
add
mov
cs
lock
iret
ret
insl
xchg
cmp
push
negb
ret
mov
jbe
mov
sub
or
mov
jnp
daa
scas
shl
pop
fcmovnb
inc
pop
lcall
pop
bound
test
icebp
stos
sbb
adc
call
out
ss
dec
cmp
push
filds
out
adc
and
rol
bound
pop
pop
mov
sub
pop
add
gs
pop
or
fsin
dec
add
dec
mov
add
and
loop
cmp
push
jp
mov
repnz
lcall
add
imul
sub
pop
xor
mov
pushf
das
lods
xor
je
je
pushf
xor
sbb
outsb
aam
in
test
push
jle
add
jno
mov
jle
sbb
shlb
je
rclb
add
rorb
pop
sub
scas
inc
cltd
aam
inc
mov
popf
and
cmp
sbb
loop
pop
repnz
jae
loopne
icebp
mov
fldt
pop
or
or
and
fldl
inc
xchg
shll
ja
in
cmc
roll
loop
dec
pop
jne
cmp
xor
pop
jno
pop
mov
lret
clc
sbb
cltd
dec
pop
mov
imul
movsl
push
inc
outsb
orl
add
jge
in
inc
test
push
pop
dec
xchg
je
dec
or
sub
or
dec
outsl
add
aam
jae
sti
or
rclb
fmull
pusha
add
scas
xchg
daa
xchg
in
mov
sbb
lahf
sbb
lret
or
bnd
pop
and
sub
mov
pop
sbb
fldl
jo
cmpsl
pop
mov
mov
inc
icebp
mov
fisubs
icebp
or
in
in
mov
dec
dec
pop
loop
pop
jle
shlb
pop
xchg
sub
ficomps
repnz
and
and
insl
arpl
enter
jnp,pt
sahf
std
aam
js
call
sub
sbb
xor
sub
push
xchg
cmc
pushf
or
in
dec
sub
push
push
dec
out
sub
dec
insb
dec
outsl
lods
push
jmp
movsb
pushf
and
lret
repz
pop
xor
movsl
mov
cmp
push
or
mov
sahf
mov
add
mov
mov
outsb
fsubs
mov
mov
push
push
xchg
xchg
mov
or
bswap
mov
mov
inc
out
dec
xchg
inc
add
aaa
jge
fwait
jmp
sub
daa
test
std
repnz
mov
and
int
lret
inc
mov
pop
jbe
sti
cmc
pop
loope
push
mov
push
mov
add
sbb
jnp
adc
pop
add
negl
push
ret
test
in
cmpsb
sub
nop
popa
or
adc
fcompl
mov
mov
shrl
lahf
in
jle
jno
and
cmp
add
jge
arpl
fcmovu
sahf
pop
pop
add
sbb
xchg
add
clc
xor
aam
sub
push
lret
or
fists
sti
lods
pop
cs
mov
push
add
stc
jg
jg
iret
sbbl
dec
cmpsb
insb
dec
fmull
call
es
jmp
rclb
in
loope
or
jmp
push
fistl
out
mov
addr16
icebp
sub
xor
int
daa
or
jnp
jl
negb
push
push
cltd
push
adc
mov
js,pn
jp
cmp
lahf
fdivs
push
jno
in
andb
icebp
aad
subb
out
or
mov
in
jns
add
mov
jecxz
pop
popa
dec
inc
imul
sbb
add
pop
jmp
or
bound
loopne
adc
les
test
pop
insl
push
push
mov
mov
popa
mov
cmp
dec
dec
bound
jge
aam
out
mov
fcomip
jg
ja
movsb
dec
lret
int
mov
into
inc
inc
jne
ret
test
fisttpll
hlt
loop
testb
or
mov
jno
inc
mov
rdpmc
mov
or
loopne
dec
mov
mov
bound
fcoml
and
pop
pushf
out
dec
jecxz
xor
sub
jmp
negb
push
dec
inc
xor
push
out
sahf
in
add
and
cltd
jae
xchg
out
pop
fmull
fcoms
iret
cmp
jb
jno
sbb
push
test
into
lock
push
les
or
stos
mov
xchg
xor
mov
push
popf
push
insl
and
test
scas
xor
sub
pop
xchg
jb
mov
in
mov
mov
lret
fdivrs
roll
xor
inc
punpckhbw
xchg
jmp
mov
call
das
or
sti
sbb
aam
xor
pop
inc
jo
imul
stc
fildl
sbb
gs
adc
xchg
xchg
testb
movsb
add
imul
pop
add
cltd
sahf
insb
dec
dec
sub
mov
jnp
inc
adc
push
jo
int3
sbb
mov
testl
pop
je
das
or
push
iret
lds
mov
or
mov
into
cs
and
mov
inc
and
decb
push
sub
xchg
shl
xchg
ja
push
mov
xchg
fisttps
and
iret
cmp
cli
outsl
dec
rcll
push
stos
cli
pop
imul
lcall
sbb
shlb
sbbl
js
and
xchg
test
add
push
pop
das
adc
sbb
or
and
sub
mov
or
adc
mov
insb
out
pop
push
push
fs
and
roll
add
fs
mov
aam
call
lock
and
jle
leave
fstl
jo
sub
fcoms
xchg
mov
and
pushf
je
add
mov
push
pop
fldt
dec
ficoms
sbb
jae
dec
lret
sbb
stc
sub
adc
jge
jl
cmc
pop
pop
loope
fcoml
xor
dec
cmp
pop
lea
or
out
mov
push
popf
dec
push
xor
call
leave
lock
div
les
sbb
or
mov
popf
adc
ja
mov
stos
dec
sub
aad
mov
jle
cmp
jl
in
mov
push
jmp
mov
cmp
jns
pop
enter
cld
sub
cltd
push
fnstenv
popf
or
lods
dec
ljmp
mov
push
sbb
pop
popa
inc
push
out
sub
mov
enter
push
movsl
in
lock
into
in
js
add
das
rcr
popl
add
js
je
fldl
lock
inc
push
or
xchg
sbb
and
xchg
cmp
sbbl
repnz
enter
or
mov
clc
shrl
cs
mov
scas
orb
nop
inc
push
pop
and
dec
cmp
lcall
fistpll
dec
stc
or
fldcw
out
cmpsl
pop
lds
sti
mov
xchg
popf
not
xor
or
jp
out
push
jge
sbb
shrb
push
shll
jmp
xor
dec
inc
fldenv
ret
lea
or
lret
popa
mov
xchg
ds
fwait
dec
push
std
xchg
dec
dec
idivl
call
xchg
add
jle
shlb
sti
sbb
decb
int3
and
push
shll
ja
or
and
fs
jnp
push
xor
or
sahf
js
xchg
adc
movsb
incb
or
fldenv
sbb
mov
mov
xor
mov
sub
push
cltd
lods
inc
or
scas
pop
adcb
sub
sbb
jbe
sub
adcb
push
mov
sub
es
or
loopne
cmp
movsb
int3
mov
mov
lahf
lds
adc
xchg
push
fcoml
pop
mov
pop
mov
ja
test
lret
shll
roll
hlt
pop
sbb
cmp
jne
mov
add
mov
xchg
loop
push
test
ds
jg
or
push
popf
stos
push
pusha
cmp
xchg
pushf
mov
loop
int3
cld
hlt
push
pop
push
add
cmc
jnp
out
aam
in
mov
int
inc
movsl
or
hlt
ljmp
addb
test
inc
in
inc
add
imul
out
pop
repz
dec
mov
xchg
mov
sub
xchg
inc
mov
push
mov
pop
push
rclb
pop
es
jns
repz
shl
lcall
xor
lcall
or
mov
dec
push
xor
sahf
xor
pop
sbb
aam
enter
dec
test
jp
push
xor
testb
cmp
jg
andl
aad
nop
rcrl
sahf
imul
popa
mov
test
call
test
cld
pop
in
adc
pop
sbb
mov
xor
sbb
cmp
ss
xchg
jae
jo
inc
push
loopne
push
dec
push
sbb
fidivrs
add
xor
sbb
leave
inc
shlb
ljmp
mov
outsl
lds
xor
imul
cmp
inc
jns
push
jecxz
sbb
mov
push
out
mov
jne
rolb
scas
out
sbb
jb
jecxz
daa
xchg
jne
sbb
cmp
sbb
adc
rcl
scas
mov
lret
xor
mov
adc
inc
xor
sub
aas
xor
loope
movsl
mov
sbb
sub
cmc
cmp
pop
insb
stos
fld
sbb
es
pop
outsb
add
mov
test
scas
adc
cmp
jae
push
mov
mov
mov
jmp
sub
mov
cltd
inc
sub
scas
and
xor
xor
mov
mov
sub
out
ds
push
mov
js
fwait
xchg
cmpsb
mov
jnp
fs
inc
sbb
add
xchg
and
mov
inc
out
xorb
xchg
add
push
mov
pop
mov
orl
jo
and
add
mov
or
test
sbbl
sbb
test
mov
sbb
sub
rcr
cmp
imul
lds
xchg
xchg
xor
mov
into
xlat
lock
mov
lcall
arpl
rorb
or
inc
xchg
sub
mov
les
adc
mov
gs
jecxz
fsubl
cltd
xor
lahf
fmul
mov
imul
or
jne
inc
xor
mov
jnp
inc
jg
lcall
cmp
dec
pop
mov
ret
in
int
push
in
pop
jl
xor
and
mov
test
jno
mov
rclb
pop
jmp
push
imul
or
cmpsb
xchg
loopne
fdivrl
jl
pushf
aam
adc
xchg
pop
cwtl
push
xlat
daa
push
or
inc
stos
or
cwtl
xor
enter
push
inc
xchg
mov
jge
mov
adc
cmc
out
ds
jle
or
int
fnstenv
sbb
and
fiadds
sub
mov
jno
push
movsb
sbb
and
pop
pop
push
xchg
xchg
sbb
xlat
mov
scas
push
test
enter
ror
out
sarl
inc
dec
inc
ffreep
dec
xor
jmp
fiaddl
mov
lcall
mov
jbe
lods
or
pop
aaa
out
mov
fnstcw
out
push
data16
lcall
lock
push
cld
scas
jge
outsb
int
mov
aaa
sbb
ss
mov
pop
jne
cmpsl
or
sti
xchg
cmpsb
and
cmp
nop
xor
mov
dec
fs
inc
movsl
test
mov
ret
add
ss
or
pop
in
testl
jg
sub
add
and
cmp
js
push
pop
loopne
inc
gs
mov
mov
popf
in
lea
pop
std
popf
sub
mov
lret
dec
mov
sub
pop
int3
stc
in
mov
dec
or
fisttpll
mov
orb
sub
push
test
adc
pop
je
aas
cmp
in
mov
mov
into
arpl
call
sbb
cmc
and
mov
mov
jns
out
sar
push
adc
xor
ror
test
scas
std
mov
sub
jecxz
mov
or
jp
sarb
mov
hlt
bound
adc
push
mov
dec
jbe
gs
sub
push
add
in
jecxz
cmp
into
jl
xchg
sahf
pop
pusha
repz
jge
cwtl
push
pop
shrb
hlt
imul
adcl
mov
inc
cltd
cwtl
fucom
in
jo
cltd
testl
aad
mov
cmpsb
mov
lret
out
fisubrl
bound
cmp
pop
sbb
and
or
sub
fidivs
in
push
bound
popa
loop
scas
cmp
leave
lds
xor
test
mov
mov
inc
sbb
and
mov
add
sub
inc
push
std
cmpsl
enter
push
jbe
lock
inc
sbb
mov
lcall
pop
aas
or
mov
pop
xor
pop
push
cld
push
dec
xchg
cmp
or
cld
rorb
bound
push
clc
repnz
fdivs
in
daa
sub
xchg
out
nop
popa
dec
insb
shl
jo
cmp
movsl
sahf
cwtl
dec
fcom
lods
dec
movsl
lret
adc
cmpl
insb
loopne
pushf
jp
or
addl
cli
xchg
and
movsl
jecxz
pop
push
push
dec
jae
xchg
sbb
test
fldt
les
mov
dec
shl
dec
inc
pop
out
lret
stc
pushf
repnz
aas
movsb
jo
aas
aam
popf
mov
sbb
mov
cmp
aad
or
jo
push
inc
sub
sub
testb
hlt
mov
jae
stos
mov
dec
subb
aad
lds
dec
pop
in
sub
sbb
mov
cmpsb
cltd
ror
cmp
popa
push
test
loope
scas
out
jmp
mov
ja
xor
data16
or
test
mov
imulb
dec
mov
ror
push
fdivrp
dec
adc
rcrl
lea
pop
mov
stos
les
cmp
xchg
in
vmulss
in
pop
xorl
adc
add
cld
xor
push
mov
mov
call
outsb
jmp
gs
ret
sbb
add
jae
lods
call
aad
push
sub
arpl
sbb
mov
leave
pushl
jnp
and
lds
jb
sbb
push
in
leave
inc
mov
adc
cwtl
enter
jg
adc
push
pop
mov
call
mov
jg
addr16
in
popf
push
lcall
jb
add
lret
cwtl
out
mov
repnz
je
sahf
adc
adc
push
jmp
sub
or
cltd
xchg
sbb
xchg
and
mov
mov
out
jl
cmp
rorl
xor
sbb
adc
lahf
call
testl
pushf
out
arpl
stc
mov
xchg
lret
imul
dec
xor
mov
pop
jl
imul
jp
out
jecxz
jle
les
push
push
fisttpll
lcall
sbb
mov
and
mov
inc
xor
pop
dec
ret
stos
push
nop
fcoml
nop
inc
test
ds
mov
mov
or
jle
inc
movsl
jae
adcb
test
add
int
out
cmc
in
xchg
mov
inc
js
scas
es
mov
jmp
cmp
push
mov
or
pusha
rep
out
cmp
pop
adc
push
cmp
ret
inc
pop
pop
repz
add
fnstcw
fadd
mov
pushf
push
js
repz
xchg
mov
imul
and
jno
inc
gs
sbb
mov
mov
cmp
and
xorl
push
repnz
pop
and
shl
dec
cmpsb
xor
mov
shrl
mov
jo
hlt
clc
test
lock
mov
stos
leave
rcll
or
and
flds
xchg
bound
jle
or
jg
pop
pop
movsb
sbb
pop
pop
cmp
and
repz
outsb
mov
or
in
xor
push
dec
addr16
imul
adc
mov
inc
jnp
pop
push
cmpsl
shll
cmp
jle
and
aad
xor
xor
pusha
and
pop
and
sub
ja
jne
loopne
cvtps2pi
pushf
mov
mov
sti
mov
inc
xchg
negl
inc
sbb
adc
adc
inc
xlat
add
inc
pop
cmp
adc
lods
int
shll
dec
fidivs
repz
mov
dec
cltd
repnz
mov
pop
mov
es
mov
test
cmp
pushf
xchg
push
pop
lahf
xor
jge
lret
pusha
push
mov
pop
lea
out
mov
pop
inc
mov
mov
push
ss
mov
jl
test
scas
js
into
test
nop
xchg
mov
mov
add
rorb
ret
repnz
xchg
test
mov
pop
lock
nop
or
mov
imul
jno
xchg
mov
dec
jae
and
jne
pushf
push
aaa
andl
push
mov
fnsave
movsl
adc
dec
fldt
shrb
int3
sbb
and
cmp
or
cs
pop
mov
cmpsl
adc
outsb
cmp
and
add
jnp
sub
pop
nop
mov
scas
pop
jo
sub
int
push
aad
jge
jbe
add
mov
scas
mov
test
loopne
jb
sub
out
js
adc
pop
mov
jno
cltd
adc
insb
cmpb
add
adc
jnp
int
ficoms
inc
insb
dec
incb
add
jmp
sbb
mov
add
pop
flds
lahf
push
outsl
ja
arpl
inc
sahf
inc
lock
call
lock
jo
push
pop
jns
fsubrl
frstor
data16
sbb
rcr
divl
xchg
jg
into
je
aaa
sub
les
sarb
dec
insl
test
lret
shlb
and
mov
add
push
add
lods
imul
adc
dec
scas
int
std
loop
fdiv
loop
je
cmpsl
aad
aas
sbb
in
xchg
nop
bound
xchg
repnz
jbe
mov
pop
pop
adc
jb
xor
ret
mov
push
ds
lahf
cld
inc
in
daa
nop
lods
adc
bound
sbb
sub
pop
dec
pop
outsb
sbb
stc
xchg
scas
iret
fs
push
je
mov
daa
stos
into
les
mov
inc
loopne
fcomps
pushf
shrb
jle
ret
xor
mov
xchg
xchg
fs
rcrl
push
dec
lret
xor
pop
push
mov
mov
jmp
add
mov
fiadds
insl
int3
fwait
inc
pusha
test
jb
or
imul
and
sub
les
notl
dec
or
fdivrs
in
popa
and
mov
cmpb
scas
data16
enter
shrb
fisubrl
in
xchg
nop
jne
call
sbb
movsb
ret
jno
mov
icebp
das
mov
loope
lods
fscale
mov
jne
xor
sub
popf
jg
jmp
mov
outsl
and
mov
hlt
mov
rclb
pop
xchg
jge
mov
push
and
xchg
pop
lret
out
andb
inc
mov
shrl
pop
js
ss
cmp
into
sahf
lcall
adc
fwait
test
cmp
in
test
pop
test
sbb
cld
and
enter
jb
icebp
jle
adc
aas
int
xor
ja
or
rolb
cmp
fs
popf
pop
pushf
push
popa
mov
add
mov
sahf
cwtl
sbb
fiadds
mov
insb
pop
mov
popf
call
insb
aas
pop
gs
pop
sbb
mov
mov
jmp
adc
push
xor
add
out
mov
addl
adc
inc
mov
mov
out
xor
pop
popf
push
loopne
addr16
xor
mov
jnp
pop
sbb
mov
and
cmp
xor
or
jnp
jo
add
add
inc
fdivs
shrl
repnz
dec
bound
mov
mov
out
add
cld
mov
xchg
pop
loop
or
lss
pop
jp
xor
pop
bound
jmp
mov
xchg
inc
mov
jge
lcall
xlat
stos
out
pusha
pushf
mov
cmc
sub
sbb
add
mov
icebp
xchg
mov
out
jo
mov
sbb
add
pop
xor
pop
data16
insl
push
stos
mov
xor
jbe
or
push
xchg
cmp
fldlg2
adc
dec
pop
xor
mov
into
jecxz
cmp
and
insb
out
push
sbb
scas
int3
or
or
and
jmp
jno
dec
aas
out
mov
pushf
pop
inc
out
sub
js
push
inc
ret
fimull
jle
pushf
repz
mov
subl
lods
dec
xchg
icebp
stos
mov
outsb
inc
dec
cwtl
and
add
xchg
stos
xchg
mov
jecxz
in
test
push
lret
fiadds
push
sti
mov
fadd
jge
out
jb
cmc
iret
adc
jnp
pop
scas
aad
sar
test
fdivp
pop
push
jns
fbstp
cltd
jle
push
test
int
and
ja
jo
ds
lcall
jo
pop
adc
cmp
push
dec
fwait
lahf
notb
rorl
or
mov
fists
sub
out
pop
push
sub
and
aas
add
ret
fistpl
push
setbe
xchg
daa
xor
inc
ret
testl
aas
push
push
ret
mov
xchg
mov
xchg
push
loope
jl
hlt
pushl
or
les
push
leave
or
xchg
lods
aad
testl
and
das
in
cs
fsub
sub
pusha
xor
pushf
dec
int3
fists
xchg
shll
jecxz
nop
xchg
xor
lea
push
inc
les
enter
aaa
jge
mov
cmc
popa
mov
jbe
nop
add
bound
aad
or
daa
stos
mov
lods
int
sahf
inc
and
stos
lahf
ljmp
mov
les
jo
mov
lea
xor
fld
stc
jl
cmc
xchg
shll
ffree
adc
pop
out
pop
dec
out
cld
dec
adc
les
ret
cmp
test
pop
in
sbb
jl
mov
addr16
cmp
mov
lds
imul
jbe
add
push
out
fidivrs
out
sub
cmp
mov
sub
mov
cwtl
test
divb
idivl
fmuls
inc
cmpsb
loopne
dec
icebp
jle
dec
mov
jb
push
insl
mov
hlt
push
dec
inc
imul
push
inc
outsb
push
stos
dec
adc
int3
mov
push
adc
mov
bound
xor
icebp
mov
cmp
mov
pop
lret
arpl
adc
mov
nop
pop
jmp
shrb
xor
in
adc
pop
pop
cld
das
into
mov
cmp
repnz
cmpsl
fistl
push
jge
lock
test
jg
or
fdiv
xor
lret
mov
inc
sti
xor
sarl
xor
dec
pop
pop
pop
pushf
xor
adc
xor
aas
aam
iret
outsl
aad
movsl
addl
or
cmpsb
pop
sub
ror
out
push
pop
decl
imul
rol
fwait
mov
or
mov
inc
ror
jb
inc
cmp
push
lahf
out
or
stc
mov
imul
push
data16
loopne
andl
lahf
jmp
rcl
int3
or
add
add
daa
jbe
idivl
mov
cmp
add
pop
dec
nop
jo
sbb
cli
adc
xor
xor
mov
lock
rolb
loop
sub
hlt
mov
pop
int
mov
out
pop
stc
push
sbb
inc
into
jnp
or
gs
add
xlat
aam
in
push
aad
adc
push
cwtl
and
sbb
adc
sbb
cmpsb
xchg
jo
push
insl
and
adc
push
and
xor
pop
fists
mov
pushf
test
stc
mov
mov
cmc
jnp
mov
jle
hlt
sub
outsl
icebp
pushf
add
mov
mov
pop
loope
add
addr16
scas
cltd
mov
dec
pusha
xchg
mov
ja
xor
push
sub
loopne
std
ss
fisubl
dec
arpl
rclb
push
test
inc
inc
xchg
pop
sub
mov
js
cmp
jle
add
jne
movsl
mov
lods
das
pop
pushf
add
mov
cmp
add
dec
imul
or
inc
out
pop
lret
prefetcht1
jns
repnz
aam
shll
out
test
jo
push
xchg
sarl
adc
inc
in
das
arpl
pusha
ja
and
adc
ljmp
xor
ljmp
inc
mov
fiaddl
jl
mov
clc
and
in
cwtl
in
gs
lea
add
out
sbb
in
insb
pop
gs
fcomip
test
in
push
decl
fisubs
mov
aam
mov
push
rcrb
fs
cwtl
outsb
xchg
add
imull
dec
push
cld
mov
imul
cmp
imul
mov
repz
or
jae
mov
je,pn
xor
lret
lcall
push
pop
out
cmp
push
inc
xchg
in
dec
pop
divl
daa
mov
mov
bound
cmp
jb
mov
or
xchg
pop
test
dec
outsb
stos
inc
pusha
cwtl
mov
addr16
outsb
cwtl
mov
popf
stos
dec
cmp
or
cwtl
push
jne
cmp
lods
jmp
inc
dec
ljmp
jle
std
js
and
fs
mov
inc
cs
and
clc
pop
cld
pop
xchg
testb
out
pusha
mov
mov
idiv
mov
add
js
jae
pop
pusha
popa
mov
fucomi
xor
addb
dec
imul
imul
divb
and
ret
int
sbb
mov
test
dec
ror
mov
adc
cmc
pop
fcmovbe
push
jle
insb
and
xchg
push
lcall
outsl
subl
cmp
add
fdivrp
pop
mov
xor
enter
sub
sub
push
sti
push
repnz
aas
fmuls
into
fists
jecxz
ficoml
add
lods
jae
cmpsl
mov
in
scas
fcoms
lcall
mov
xchg
std
push
fadds
jnp
inc
mov
push
int3
subl
ss
or
bound
xor
xor
jmp
shrb
jns
lahf
jecxz
jg
adc
push
rclb
xchg
pop
adc
scas
or
loop
dec
push
xchg
dec
push
mov
cld
jns
int
mov
imul
inc
dec
cmpsb
sub
loopne
loope
sub
pop
fidivrl
jno
aaa
insl
dec
cli
adc
sbb
or
mov
imul
dec
rorl
sbb
sub
ljmp
rclb
sbb
ss
std
push
sbbl
add
mov
cmp
add
cwtl
in
ss
test
test
decb
js
sbb
lds
xchg
inc
jecxz
insb
pushf
fildll
mov
ds
gs
nop
mov
xor
test
ret
mov
fisubs
orl
sbb
mov
aaa
inc
xor
sbb
push
leave
in
xor
js
fldz
movb
sbbl
cmc
repz
or
in
dec
sub
popa
cmp
out
clc
bound
add
andl
dec
sbb
ret
iret
stc
cs
test
xor
rol
jae
ret
mov
lret
cs
push
mov
inc
and
movsl
nop
or
lods
je
and
sti
lret
add
out
sbb
loop
xor
in
push
cwtl
int
dec
nop
dec
roll
repz
jl
xchg
rclb
push
dec
movsl
xchg
lods
jae
popa
sub
and
cmp
ljmp
jae
or
arpl
fsubl
mov
testb
lret
jle
jl
mov
sbb
sbb
push
imul
aas
adc
push
outsb
add
popf
push
xchg
test
std
or
jo
inc
cmp
fistps
fnstenv
test
insl
adc
fimull
mov
adc
repz
jmp
jns
mul
dec
mov
push
cli
cmp
jg
ss
fisttps
in
inc
sub
ficoml
shl
test
add
cmp
sub
jl
cmp
bound
sbb
pop
in
jg
or
outsl
mov
das
sarl
add
xchg
rcl
push
pop
add
mov
stc
adc
add
movsl
jp
sub
mov
adc
inc
dec
lea
mov
pop
push
mov
jl
pop
adc
push
loope
sbbb
je
rorl
popf
lea
cmc
mov
xchg
dec
pop
test
sarb
mov
pop
cld
lods
pop
fwait
push
mov
mov
push
push
fwait
lret
mov
std
aas
cli
sub
inc
hlt
jnp
and
adc
add
in
lock
jg
mov
or
push
outsb
loop
and
mov
outsb
scas
push
testb
mov
ja
push
jl
xchg
rcl
pusha
push
cmpsl
lret
sbb
jnp
sbb
call
ss
fisttpll
lds
icebp
shl
ja
mov
in
and
sbbl
fdivs
mov
mov
lock
adc
push
push
and
add
lds
or
iret
and
dec
inc
mov
add
fprem1
push
add
add
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
push
add
add
pop
add
cs
add
test
add
rolb
add
add
add
xor
add
pusha
or
adcb
cmpb
subb
adc
add
call
add
sbbb
add
dec
or
addb
add
sbb
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
bound
add
jp
add
mov
add
andl
enter
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
repnz
add
fstpl
add
adc
add
sub
add
add
add
add
add
add
add
push
or
addb
addb
add
add
add
add
add
add
add
dec
or
sbbb
subb
jo
add
mov
add
add
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
nop
or
cmpb
add
mov
add
xor
add
add
orb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
shrb
add
add
add
add
add
add
add
add
xor
add
mov
add
andb
add
test
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
xchg
or
sbb
add
lock
addb
add
add
add
add
add
add
add
int3
or
orb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
ret
add
or
add
add
add
add
add
sbb
add
add
add
add
add
and
add
in
add
add
add
or
add
add
add
in
add
add
add
or
add
sbb
add
add
add
add
inc
add
adc
add
in
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
add
add
sbb
add
in
add
add
add
jae
add
adc
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
int
add
adc
add
in
add
add
add
fisubs
add
add
add
add
add
movsb
add
adc
add
add
add
add
scas
add
adc
add
in
add
add
add
and
add
sbb
add
in
add
add
add
cmp
or
add
add
add
add
add
add
adc
add
in
add
add
add
pop
rolb
add
add
add
add
add
add
sbb
add
in
add
add
add
and
add
in
add
add
add
sahf
in
add
sbb
add
add
add
add
or
add
add
add
add
add
incl
add
or
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
add
pop
add
add
inc
add
inc
add
aaa
add
xor
or
push
add
xor
pop
add
push
add
add
add
add
add
pop
add
add
add
cmp
cmp
push
add
add
or
inc
add
add
xor
add
add
add
add
xor
xor
add
add
add
cmp
inc
add
add
push
add
pop
add
xor
dec
add
cmp
or
push
add
inc
add
xor
add
add
xor
dec
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
add
inc
add
add
push
add
dec
add
pop
add
add
inc
add
or
push
add
add
add
add
push
add
add
or
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
push
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
dec
add
push
add
dec
add
add
pop
add
inc
add
add
add
xor
xor
add
add
add
add
add
add
add
inc
add
add
dec
add
or
dec
add
dec
add
dec
add
xor
pop
add
add
dec
add
add
cmp
xor
pop
add
add
add
add
dec
add
push
add
xor
inc
add
push
add
add
pop
add
xor
inc
add
add
pop
add
pop
add
add
push
add
cmp
xor
add
pop
add
push
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
dec
add
add
push
add
pop
add
inc
add
add
add
push
add
inc
add
dec
add
inc
add
xor
push
add
push
add
pop
add
inc
add
dec
add
pop
add
push
add
dec
add
add
push
add
add
add
add
add
add
push
add
inc
add
cmp
pop
add
pop
add
add
inc
add
pop
add
aaa
add
pop
add
push
add
push
add
add
xor
xor
pop
add
add
add
cmp
push
add
xor
xor
dec
add
cmp
pop
add
add
cmp
add
add
pop
addl
shlb
daa
or
pop
add
and
loopne
enter
iret
mov
xchg
out
daa
inc
pop
ja
sti
dec
gs
push
lock
sbb
ficoms
jp
mov
inc
adc
and
mov
aas
or
jp
pop
jne
mov
pop
pop
push
or
dec
data16
mov
or
scas
mov
pop
jo
or
fcmovbe
jbe
add
mov
cmp
xchg
mov
filds
loopne
enter
cmp
repz
cmpsb
mov
jnp
enter
inc
lret
adc
pop
sbb
clc
dec
out
sub
sub
push
cmpsb
push
pmuludq
push
out
mov
cs
lret
push
push
fidivl
xor
jns
sbb
jg
inc
push
aam
rorb
add
inc
push
adc
sbb
rolb
std
sub
shrl
and
std
jmp
mov
jbe
push
shlb
outsl
push
mov
cmpsl
jg
adc
mov
cs
or
mov
ja
jle
push
mov
cmp
jbe
cmpsb
in
sub
cli
add
ljmp
jmp
xchg
sub
cmp
sub
xchg
push
mov
or
fildl
gs
in
adc
arpl
test
xor
lret
lea
ret
fwait
xor
inc
aad
and
xchg
test
popf
inc
add
sub
out
sbb
pop
mov
xor
outsb
sbb
mov
jns
mov
push
lea
mov
fstpt
jb
mov
mov
mov
sti
enter
mov
lret
or
dec
push
mov
std
xchg
fadds
mov
pusha
push
popa
cs
nop
pop
push
clc
in
jl
or
jnp
adc
cmp
stos
jl
mov
les
mov
fisubl
mov
rorl
pop
fdivs
sbb
aam
sti
cmpsl
mov
jmp
stc
fisubrl
popl
dec
xchg
add
push
test
in
sub
inc
pop
xchg
cmc
stos
stc
inc
inc
adc
addl
pop
ja
imul
inc
int3
xor
inc
addr16
shrl
sub
popf
pop
es
bound
add
and
or
dec
mov
cmp
adc
js
inc
js
dec
jecxz
ret
cwtl
push
rcrl
pop
or
je
aad
mov
dec
rolb
add
add
jecxz
out
mov
mov
jle
jmp
leave
and
fiaddl
push
cmp
cwtl
shll
call
jp
fisubrl
js
or
lret
sti
xor
testb
mov
sbb
or
push
cwtl
xchg
insb
int
push
jns
nop
xchg
sub
cmpsl
xchg
pop
cmp
out
imul
fs
movsl
addr16
ret
mov
mov
jl
out
mov
jecxz
ret
out
test
in
into
mov
cli
cmc
inc
call
inc
add
mov
xor
dec
jle
aam
gs
push
loopne
and
insl
loope
loopne
in
mov
mov
bound
jge
adc
sarl
add
cmpsl
lods
lods
mov
xchg
mov
popl
xchg
pusha
lret
jge
push
cmpsl
mov
in
aad
sti
int
sbb
mov
jno
movl
aam
subb
inc
loop
add
pop
cwtl
enter
mov
cmpsb
push
or
push
and
inc
movsb
mov
or
jl
mov
icebp
xchg
xchg
jmp
cwtl
jns
fs
add
fldcw
fistpl
or
cmp
ficoml
dec
and
notb
pushf
loopne
sbbl
test
cmp
adc
es
sbb
dec
and
dec
fwait
dec
lcall
inc
je
inc
jnp
es
push
out
in
push
jmp
dec
stos
stos
jg
push
sbb
mov
pop
add
test
push
cwtl
add
and
aaa
jmp
mov
mov
dec
testl
mov
mov
enter
and
pop
push
mov
push
push
in
ss
orb
imul
mov
xchg
adc
iret
loopne
xor
mov
and
xchg
add
iret
dec
sbb
mov
fwait
outsb
mov
push
loop
testb
push
push
aas
sub
aad
jp
outsb
dec
gs
jmp
nop
fwait
rcll
jno
sub
xchg
in
std
fwait
jl
ds
sbb
inc
mov
gs
lea
fs
ljmp
or
out
notl
out
add
es
pop
ds
aam
mov
lea
xor
dec
fldenv
lcall
in
das
fdivl
ret
mov
sti
loopne
mov
jnp
push
pop
inc
mov
les
sub
or
out
lock
jmp
cmc
inc
xchg
clc
pop
pop
int
stos
fwait
scas
pop
insl
shrb
fcmovnu
inc
dec
jmp
lret
test
lock
sub
sbb
jns
or
and
int
sar
push
lea
iret
popf
lahf
fidivrs
ret
rcl
xchg
inc
popa
pop
hlt
push
xor
in
psadbw
out
xlat
pop
test
xor
dec
push
sub
jp
mov
enter
sub
pop
repz
call
mov
leave
int
imul
xchg
pop
lahf
sbb
loop
pop
mov
cmp
ret
pusha
dec
fldl
add
mov
cltd
pop
inc
cs
movl
dec
inc
cmc
and
cltd
jne
mov
lods
and
aas
jno
mov
scas
inc
loopne
test
mov
loope
jno
sub
cs
push
adc
cltd
dec
dec
xor
stc
out
cmpsb
hlt
int
fadds
in
jb
or
dec
or
scas
aas
pop
jmp
xchg
jae
sub
xor
jno
in
sarl
xor
cmpsb
xor
jnp
lods
or
nop
pop
dec
lods
inc
std
add
and
scas
lds
sub
nop
fstpl
push
sbb
lahf
out
jl
rcll
je
in
or
cmp
jge
sub
repnz
loopne
mov
shl
scas
shl
or
pop
pop
or
xor
push
addr16
cmp
add
add
lahf
arpl
mov
mov
rolb
and
mov
clc
mov
jne
outsb
fisttpl
call
dec
push
jne
stos
lods
je
loop
push
mov
jnp
add
dec
mov
mov
cld
xor
dec
pop
xchg
sub
and
jecxz
dec
enter
inc
stos
sbb
adc
mov
or
sub
sbb
and
xchg
adc
mov
les
sub
fimuls
shlb
jns
ret
push
add
test
enter
popa
fmul
jno
repz
pop
test
jae
test
repnz
icebp
pop
dec
cmp
cmp
jp
inc
leave
push
je
push
or
jns
jl
jge
out
test
dec
fnstenv
add
fnstcw
lock
loop
sarl
pop
adc
jno
and
cmp
pop
mov
mov
dec
lret
shll
add
popf
into
je
cmp
mov
adc
mov
mov
aas
ret
mov
lea
add
aaa
jge
xor
in
mov
cmpsl
inc
xchg
mov
icebp
sbb
lahf
fsts
vmovaps
fbstp
cmpsb
popa
push
pop
pop
inc
sub
or
addl
sarb
emms
xchg
dec
sar
push
scas
adc
pop
scas
pop
cmp
jnp
jle
inc
das
push
cltd
inc
xchg
push
add
inc
mov
dec
add
sub
bound
stos
jbe
mov
daa
fstpt
push
push
adc
mov
xor
packssdw
cmc
or
loope
lds
xor
mov
mov
jmp
pop
xchg
sarl
xor
jecxz
fnstsw
leave
jb
inc
push
vpor
andl
movsl
call
push
sub
xchg
shlb
stos
gs
pop
mov
repnz
jb
dec
jbe
xchg
inc
ficoms
xchg
inc
or
leave
xor
add
jmp
bound
lds
pop
add
xor
popf
push
enter
pushf
dec
shrb
repz
mov
push
pop
mov
xlat
stos
jnp
mov
jecxz
fnsave
mov
add
xchg
pop
call
inc
lahf
in
inc
jmp
fdivl
lock
add
scas
arpl
dec
dec
outsb
xor
push
push
adc
mov
sbb
pop
scas
es
inc
gs
cmp
pop
test
mov
imul
pop
cmpsb
sub
mov
adcl
sub
mov
sbb
sub
gs
sub
in
into
insb
out
repz
pop
imull
lea
insl
sahf
push
xchg
nop
jns
ja
xor
jge
leave
daa
jecxz
mov
outsl
test
mov
xchg
jle
hlt
mov
std
rol
cmp
imul
sbb
add
adc
sub
rorb
mov
push
sub
push
fsubs
adc
mov
sar
ss
xor
ret
iret
stc
sbb
xchg
cld
mov
or
les
repz
mov
adc
movsl
xor
repz
adc
xor
mov
repz
xor
jo
fsubrs
movsw
mov
out
mov
cmp
out
inc
xchg
jl
sbb
dec
pushf
fs
cmp
mov
daa
aad
mov
pop
std
push
out
push
loop
repnz
sahf
ljmp
push
sahf
cmpsl
aaa
sub
sbb
sti
sti
mov
jge
es
inc
out
xor
sub
fnstenv
xor
inc
ja
std
imul
mov
xchg
or
or
pop
cmp
arpl
lret
cmp
dec
aas
inc
jg
jl
or
ljmp
pop
std
pop
xchg
rep
call
and
cmp
and
ja
arpl
data16
mov
fistl
push
jne
push
int
nop
inc
jae
test
and
enter
imul
mov
mov
roll
sub
adc
xchg
add
push
mov
mov
mov
popf
je
decl
hlt
mov
xchg
mov
aas
addr16
inc
sbbb
add
adc
arpl
repnz
sbb
bound
cmp
nop
dec
loope
adc
xchg
pop
adc
or
scas
xchg
cmpsb
pop
outsb
test
adc
sbb
sub
xlat
loope
in
in
pushf
cmp
stc
jmp
pop
mov
loope
sbb
cs
push
sbb
jae
stc
in
pusha
mov
sti
xchg
cltd
ss
repnz
out
adc
setns
adc
add
mov
fucom
aaa
push
stc
mov
imul
cmc
test
mov
and
xor
or
cmp
pop
xor
push
imul
jnp
mov
or
in
dec
or
pushf
mov
lds
sti
in
les
shlb
fidivl
adc
sbb
lock
lea
push
clc
xlat
xchg
scas
mov
xchg
adc
cld
dec
or
or
xchg
and
xchg
lahf
shll
xor
mov
dec
cltd
push
inc
pop
mov
xor
in
jp
dec
mov
pop
insb
cmp
xchg
xchg
or
push
fbld
out
aam
fisttpl
mov
mov
pop
xor
adcb
fimuls
push
xor
fldt
shl
test
lds
mov
test
shrb
xchg
push
stos
mov
sbb
pop
icebp
sti
and
and
pop
mov
insb
popa
cmc
xor
outsl
out
inc
test
inc
sub
cmpb
push
sub
cmpsb
dec
repz
mov
clc
addb
aam
jno
stc
add
rcl
add
xchg
dec
mov
push
sub
popf
cmp
push
fldl
loop,pt
ss
repz
pop
add
xchg
add
and
addr16
adc
jecxz
jg
adc
int3
scas
dec
lds
push
adc
dec
xor
sub
stos
or
pop
or
add
jecxz
imul
popf
mov
sahf
fs
into
repnz
fbstp
cmp
xor
repnz
sbb
call
jmp
test
cmp
xchg
push
sbb
insl
les
mov
jae
iret
xlat
daa
fwait
add
and
add
xor
nop
aas
pop
dec
cld
in
js
punpckhbw
mov
stc
jp
movsl
rorl
out
ds
or
mov
push
sbb
subb
lret
xor
xchg
aaa
negb
shll
imul
cmp
mulb
mov
dec
mov
cmp
stos
adc
scas
cld
mulb
mov
frstor
js
cmp
sarb
jg
or
push
add
pop
icebp
jp
adc
push
rorl
aad
dec
jp
aad
xor
xchg
jnp
das
push
ja
les
inc
pop
loop
xor
repz
jae
hlt
jl
or
insl
scas
rcrb
add
jp
je
aas
cmpsb
xchg
sub
pop
sub
pop
fmuls
or
rorl
punpcklwd
loopne
mov
mov
in
adc
jo
adc
dec
mov
and
ljmp
jp
cmp
pushf
push
stc
xor
stos
pop
push
sbb
push
or
sahf
sub
mov
and
pusha
pop
push
sub
in
fsts
push
lods
clc
int
pop
sbb
cs
cld
push
sbb
xor
sub
pop
cmp
adc
mov
rorl
ja
sbb
lret
sub
jecxz
loopne
sti
das
lret
test
push
addl
fimuls
sub
jnp
pushf
int3
repz
repnz
jp
out
mov
insl
int3
or
aaa
jg
imul
or
mov
dec
fstpt
ja
jmp
negl
xchg
jne
dec
inc
fisubs
outsb
mov
stos
repz
fnstcw
nop
cmp
idivl
imul
push
xor
push
aaa
lods
xorb
lds
jp
sbb
lods
and
xor
fs
lret
pop
add
fs
mov
inc
dec
and
mov
pop
into
push
lds
jnp
sub
ljmp
sti
mov
call
push
jmp
imul
dec
out
shll
stos
adc
adc
xchg
lgs
mov
out
adc
jae
hlt
andb
push
push
mov
ljmp
cmp
or
pop
fucomip
xlat
jle
cmp
lock
lret
in
orb
dec
in
popa
pushf
xchg
gs
loope
movl
rcl
lret
jne
and
xchg
cs
jns
sbb
jmp
and
and
testl
rcll
aas
out
out
int3
in
xchg
scas
mov
mov
fisttpll
shlb
cmc
inc
pop
mov
pop
popf
pop
push
mov
jo
dec
xor
lret
inc
ret
das
pop
ret
rcrl
outsb
in
mov
and
jae
subb
mov
shlb
or
insb
pop
and
int
cmpl
mov
shl
mov
loopne
sbb
push
xchg
pop
inc
lcall
mov
movsl
dec
push
popl
dec
rorb
xchg
cs
push
add
hlt
ret
imul
clc
das
out
pop
movsl
jmp
xchg
nop
repnz
ret
iret
mov
orl
loope
stos
or
inc
cs
xchg
ds
fsubp
sub
jle
sahf
addr16
cld
js
add
xchg
and
xor
mov
arpl
in
xchg
add
and
lea
mov
stos
fmull
and
in
lock
sub
cmp
mov
cmp
mov
mov
pushf
push
and
lret
rorb
and
add
in
adc
pop
add
mov
repz
mov
es
add
lcall
in
lea
test
xchg
shll
sub
lock
xor
shrb
xchg
and
add
subl
xchg
imul
or
mov
mov
pusha
inc
outsb
js
add
ds
dec
mov
or
gs
mov
cmpsl
daa
ds
jecxz
xchg
mov
adc
stos
mov
in
aas
ficoml
inc
sub
shll
das
hlt
and
and
jne
pushf
cwtl
cmpl
inc
stc
cs
fildl
lods
dec
jmp
out
sub
sub
aas
jae
lret
outsl
sahf
ficompl
rcrl
mov
mov
and
sbb
push
pop
jno
mov
test
cwtl
scas
xchg
dec
out
dec
pop
pop
pushf
jl
xchg
jns
xor
cmp
pusha
enter
xlat
orb
jmp
imul
mov
loopne
jns
pop
pop
push
add
xchg
adc
push
pushf
sub
call
mov
aad
pop
xor
inc
fistps
xchg
and
fwait
mov
push
cwtl
push
inc
mov
stos
enter
fdivrp
sub
orb
pop
mov
loopne
rolb
sbb
cltd
mov
test
mov
test
int3
imull
ret
arpl
vpunpcklqdq
push
adc
fldt
pusha
xchg
std
cmpsl
jle
fdivs
gs
pop
testb
stc
lahf
jbe
jp
dec
repnz
in
xchg
push
clc
jne
stc
xor
fwait
push
inc
or
or
pop
je
pop
in
cld
push
sti
repnz
adc
inc
push
cwtl
inc
or
adc
in
cld
bound
lret
clc
lret
lahf
pop
in
int
lods
sub
pop
mov
add
adc
cmp
out
mov
jne
mov
ficoms
mov
insb
pop
cmp
in
out
std
movsb
cmp
test
cltd
adc
pop
insb
and
movsb
push
decl
and
xor
mov
push
cmpsl
and
adc
cmpl
sub
mov
push
outsb
push
and
cs
jp
or
vsqrtss
data16
iret
loope
and
lret
cmpsl
push
pusha
cltd
stos
jp
push
mov
popf
mov
mov
fs
cmp
dec
or
scas
jl
sbb
call
jl
outsl
pop
lds
rcrl
mov
sub
int3
xor
lds
sti
stc
dec
dec
mov
xor
mov
clc
xchg
mov
decb
mov
in
pop
ja
imul
pop
mov
mov
pusha
repz
pop
add
or
mov
or
pop
stos
fsubr
sub
xchg
xchg
int
mov
push
add
adc
mul
cs
packsswb
mov
dec
add
mov
or
add
jno
std
adc
lods
loope
mov
nop
pop
xchg
add
jge
outsl
movsb
cwtl
add
dec
push
ss
cwtl
push
fcomps
sbb
sub
in
or
mov
in
pusha
mov
fs
inc
and
jecxz
shll
jp
and
jmp
and
pop
pop
leave
mov
aas
jno
adc
sub
popa
lahf
mov
setle
pop
xor
ljmp
lods
inc
loopne
shlb
les
add
ds
pop
push
jo
mov
arpl
ffree
push
nop
sbb
jbe
imul
or
bound
into
add
dec
stc
sbb
xor
push
jg
xor
sbb
daa
out
scas
mov
cli
imul
jg
jp
test
push
cltd
inc
shr
mov
cmp
scas
out
sti
xchg
aas
cmp
into
adc
imul
push
fistpl
gs
jns
lock
iret
jo
pop
cmp
mov
test
loop
jne
loop
xchg
or
into
movsb
shl
aas
pop
mov
push
mov
rcl
dec
out
ljmp
pop
scas
lret
shlb
push
insl
dec
and
aam
ret
leave
sub
mov
dec
aam
div
jae
das
mov
mov
dec
std
xchg
addl
in
inc
sbb
mov
xor
mov
cmp
inc
adc
lret
cmp
cmp
into
lds
mov
mov
push
ret
xchg
call
or
cmp
mov
rcrb
mov
or
xchg
imul
pop
pop
rcl
sarb
addr16
mov
outsb
inc
loope
push
ficoml
popf
mov
sti
dec
ja
cltd
sbbl
mov
sub
call
lods
insb
aad
cmp
pushw
dec
or
hlt
adc
mov
scas
jno
push
pop
push
mov
and
xor
add
push
lods
sub
dec
inc
movsl
push
dec
dec
push
or
and
fidivs
jb
aad
cmpsl
jne
cmp
pop
adc
out
repz
xor
pop
xchg
in
outsb
and
mov
adc
cmpsl
mov
aad
or
cs
pop
lret
xor
pop
imul
xchg
das
outsb
das
pop
add
stc
fsubs
push
add
fisttpll
sub
ds
or
in
adc
lcall
pop
lock
adc
and
addr16
insb
icebp
sub
adc
into
push
lret
mov
pop
das
or
out
ja
divb
dec
lcall
add
stc
dec
sbb
daa
xchg
and
add
dec
add
fisttps
mov
xchg
dec
sub
arpl
mov
les
jle
mov
outsl
in
out
mov
idivb
das
in
repnz
mov
mov
inc
xchg
mov
lds
sub
mov
mov
sub
sbb
jb
mov
push
add
jae
mov
push
fwait
lahf
xor
add
hlt
jnp
add
lret
daa
cmp
or
add
adc
xchg
and
mov
arpl
push
push
outsb
leave
addl
ja
aam
cmp
in
movsb
movq
inc
and
addr16
cs
mov
lret
push
scas
dec
push
jp
ja
mov
fnstenv
and
mov
push
imul
hlt
pop
jae
aas
sub
mov
jbe
mov
xchg
repz
lcall
and
xchg
push
jnp
data16
mov
sub
xor
mov
int3
dec
xor
sarb
push
push
xor
jnp
stos
or
movb
pushf
or
dec
nop
mov
shl
jne
cmc
xor
insb
and
xlat
sub
testl
fcomps
mov
or
lret
push
dec
xchg
call
cmp
inc
pusha
mov
xchg
rep
pop
xor
or
subl
dec
push
dec
inc
pop
fucom
fnstenv
sub
xchg
xchg
ds
mov
push
add
jl
xlat
add
pop
xchg
add
sub
fdivrl
xor
icebp
mov
cmpsl
mov
popf
out
test
js
mov
mov
arpl
popf
addb
push
adc
out
mov
xlat
xchg
lods
fidivrs
mov
jb
xchg
cmp
loopne
add
lods
repz
sbb
movl
xchg
push
cmpsb
jae
fwait
mov
clc
xlat
popa
das
mov
cmp
shlb
jp
adc
jle
xchg
lret
pop
fs
push
adc
enter
push
jns
and
push
inc
jge
dec
int3
mov
xor
lods
loop
knotb
je
repz
dec
mov
sbb
mov
dec
cmp
into
sbb
adc
mov
out
cmc
or
dec
outsl
mov
jne
lock
shlb
cmp
fnstcw
imul
pop
repz
push
pop
mov
shl
nop
or
imul
push
scas
aas
rol
pop
pop
jne
xlat
add
cmp
pop
lods
jecxz
mov
lcall
mov
stos
adc
les
popf
inc
les
adc
inc
fimull
sbb
js
aam
hlt
xlat
stc
stos
jg
lahf
cmp
pop
divb
pop
testl
or
pop
pusha
mov
lea
mov
xchg
and
lahf
mov
sub
enter
add
subb
jno,pn
call
popf
jae
mov
jno
jle
test
mov
add
pop
jno
call
hlt
and
sti
xchg
and
mov
inc
and
dec
inc
faddp
rorl
imull
sbb
arpl
pushf
add
and
hlt
outsb
and
xchg
rcrb
aas
out
mov
es
popa
stos
aad
in
enter
or
jecxz
cmpsb
adc
mov
test
loop
jbe
add
and
pop
test
push
stos
aad
data16
push
out
mov
push
sub
mov
mov
insl
push
or
adc
cmc
mov
mov
dec
repnz
mov
xor
or
out
adc
jl
imul
inc
leave
add
mov
jo
incb
xlat
sbb
mov
push
jbe
jg
pushf
push
and
cmp
xchg
es
jno
in
cld
sbb
incl
jle
jmp
les
sub
in
xchg
adc
lret
xchg
iret
loope
dec
inc
rorb
mov
dec
and
sbb
or
pop
call
dec
nop
insb
mov
enter
nop
dec
sub
jno
sbb
and
or
mov
fcmovbe
ret
loop
notl
rcll
xchg
pop
fsubrl
mov
enter
dec
ret
and
adcb
int3
jg
xchg
xchg
push
leave
jmp
pop
adc
insl
xlat
lcall
pusha
movsb
test
push
shll
xor
sbb
dec
ret
test
and
sbb
out
std
push
pop
mov
aas
stos
out
pop
inc
push
add
inc
pop
sbb
in
pop
vphsubwd
les
adc
in
lret
mov
imul
outsl
cmpsb
inc
fs
pushf
fisttps
test
pop
push
push
pop
fbld
lods
xor
xchg
xor
push
sbb
sgdtl
fisttpll
mov
fst
aas
adc
xchg
push
hlt
mov
push
cmp
stos
hlt
and
or
mov
scas
push
adc
enter
fsubp
aam
xor
bound
mov
mov
clc
and
xchg
xchg
lret
mov
test
or
pop
ds
addl
int
es
adc
out
cli
addr16
and
xor
cli
inc
lret
xor
mov
test
psadbw
into
or
mov
aaa
jmp
call
aad
xor
cwtl
call
call
adc
sti
push
int3
ret
mov
aaa
les
xor
cld
cmc
push
adc
add
dec
adc
xor
mov
jp
sub
fidivl
add
stos
mov
adc
mov
aad
movsl
cwtl
das
and
neg
out
jecxz
push
nop
in
xor
out
jl
xchg
daa
mov
das
cmc
lea
jle
mov
xchg
xchg
aam
rolb
in
mov
cmp
push
sub
mov
dec
ret
fcoms
stos
ret
fldenv
addb
je
jge
cltd
jb
dec
je
js
js
sub
shlb
mov
mov
xor
les
popa
aas
shrb
mov
arpl
jbe
pop
and
mov
mov
add
push
mov
jo
mov
in
pop
std
inc
imul
xor
add
xor
xchg
repz
adc
push
pop
std
divb
mull
orb
jecxz
loopne
sbb
push
dec
cmpsl
mov
jne
mov
lds
inc
mov
ficoms
out
movb
xor
push
out
shlb
sub
imul
jbe
pushf
js
xchg
imul
adc
fsubr
or
loop
stos
in
ss
add
and
out
repnz
xor
mov
xor
popa
movsb
pop
push
add
popa
lret
add
cmpsb
dec
pop
js
or
xor
inc
clc
add
movsb
insl
xor
mov
push
sbb
subb
scas
sub
xchg
in
push
mov
sbb
cwtl
dec
inc
fadd
dec
rorl
je
jecxz
addr16
loopne
mov
loope
negb
adc
loopne
movsl
je
jge
mov
lcall
and
mov
mov
adc
pop
sbb
sbb
push
add
pop
lods
adc
sub
dec
leave
sbbl
pop
aad
push
inc
jmp
inc
dec
movsl
cmp
data16
jb
adcb
inc
adc
sbb
xchg
inc
cmove
mov
or
negb
dec
sbb
or
cmp
xor
and
and
loope
jbe
popl
sub
xchg
ret
scas
inc
cmp
jb
mov
cli
cmpsb
arpl
inc
movsl
stos
inc
inc
push
pop
xchg
inc
leave
sub
leave
inc
incb
push
idiv
addr16
dec
test
mov
enter
aad
xchg
pop
cmpsl
out
xor
bound
iret
fs
dec
ljmp
xor
ret
dec
mov
add
cmp
sbb
add
mov
dec
insl
dec
pop
and
es
mov
mov
dec
xchg
and
add
xlat
xlat
jmp
mov
mov
popf
popf
mov
jmp
push
stos
bound
mov
dec
adc
and
jnp
pop
test
xlat
popf
in
outsb
xor
mov
xor
inc
pop
jp
imul
nop
shlb
repnz
mov
cs
imul
stos
lahf
jb
and
mov
cmp
outsb
aas
ficoml
xor
or
cmp
imul
xchg
xchg
adc
jne
jecxz
mov
xchg
pop
es
test
mov
push
aad
dec
push
mov
jne
push
mov
xchg
dec
or
in
xor
imul
rcr
mov
jp
cmp
fwait
mov
lds
inc
aam
xor
mov
cli
ljmp
into
sub
jl
mov
or
lods
cld
cmpl
adc
std
jl
xchg
xchg
jl,pn
inc
push
add
sub
adc
xor
sub
add
mov
ss
adc
mov
shrd
jno
add
jmp
mov
xor
and
mov
sbb
loopne
xchg
testb
sti
jns
xor
das
insl
add
les
xor
adc
fwait
inc
je
xchg
push
mov
filds
icebp
imul
shl
lcall
add
or
pop
cltd
shrl
ja
or
and
out
push
leave
nop
xorb
mov
push
call
push
cmc
shll
out
xor
test
cmp
pushf
int
dec
fstpl
xchg
add
cltd
mov
fistl
fadd
pop
es
mov
imul
into
mov
int3
aas
xlat
test
inc
fistpll
movsl
cmc
adc
jns
mov
lcall
fwait
scas
xchg
nop
add
stos
mov
inc
push
rcrl
test
lds
xchg
popa
dec
adc
xor
hlt
cli
xor
popa
subb
inc
mov
call
or
shlb
inc
nop
dec
mov
pop
lods
mov
pop
std
push
jl
fwait
add
jl
fsubl
arpl
lock
cltd
sbb
ljmp
ret
psubusb
jo
add
cmp
jecxz
filds
jmp
in
sbb
xor
push
mov
xchg
leave
push
dec
outsl
mull
sub
repnz
filds
jmp
popa
ja
popa
inc
sub
iret
ljmp
pop
dec
aas
xchg
ljmp
call
mov
mov
push
stos
pop
in
repnz
adc
push
push
mov
mov
push
ror
mov
adc
rcr
pop
popa
mov
push
insb
imul
stos
push
dec
sbbl
lods
sub
dec
push
jmp
leave
or
push
mov
mov
xchg
and
add
xor
pop
sbb
sub
fsubrl
ficomps
hlt
mov
inc
repnz
pminsw
je
and
jge
fdivrp
lret
mov
pop
jmp
pop
cmpsl
clc
mov
in
int3
adc
daa
jle
lea
add
push
movsb
leave
prefetch
or
mov
xor
hlt
xor
add
xor
jo
inc
lret
cmp
inc
inc
adc
inc
or
push
xchg
fcoml
mov
es
pop
push
popa
clc
and
xchg
pop
nop
cmp
mov
clc
fcmovu
mov
rclb
dec
mov
test
or
mov
sbb
in
push
dec
add
mov
add
dec
sti
jg
iret
xchg
lea
testb
ljmp
inc
pop
rorb
xor
adc
pop
mov
jb
add
stc
nop
scas
mov
lea
out
leave
push
mov
stos
push
clc
adc
cmp
and
and
sub
lahf
aas
mov
pop
xchg
movsb
jae
out
sti
sbb
xchg
sub
cmp
inc
cmp
pop
xchg
sub
add
lods
jno
out
stos
stos
sub
add
iret
dec
lret
leave
insl
and
jmp
mov
dec
movsb
xchg
cmp
sbb
dec
adc
cmp
mov
ret
xchg
mov
es
mov
cmpsb
cs
add
dec
insl
cmp
mov
lret
inc
pop
lret
enter
jne
mov
inc
jg
jnp
xchg
push
jne
mov
push
iret
push
adc
sbb
or
sub
xchg
in
mov
push
in
cmpsb
nop
pop
pop
jbe
mov
scas
fcomps
int3
dec
cmp
push
call
call
inc
cmp
rcll
lahf
jg
xor
stos
mov
movsb
push
xchg
loop
jne
ss
xchg
and
scas
lea
clc
negb
ds
jecxz
lea
imul
lea
xor
loop
testb
mov
inc
orb
repnz
fcmove
jl
int
cmp
rcr
jge
leave
inc
gs
cmpsl
mov
in
mov
rep
pop
jge
add
fidivs
in
fcmove
adc
repnz
add
ljmp
cld
mov
jnp
or
mov
ror
pop
outsl
call
andb
cmc
lds
nop
shl
test
fsub
daa
cmp
mov
push
lds
ljmp
sub
inc
fnstcw
nop
pop
mov
mov
mov
lahf
rcrl
pminub
xchg
aaa
and
shlb
movsl
in
push
jecxz
cli
fwait
lods
pusha
jg
push
mov
push
out
adc
popa
mov
and
jae
push
or
dec
mov
fimull
cld
inc
int
scas
imul
mov
nop
test
sbb
shl
addb
mov
ljmp
push
test
mov
dec
es
sti
int
push
push
xchg
cld
mov
in
test
cmp
inc
mov
mov
mov
xchg
out
mov
test
clc
cmp
popf
push
dec
bound
mov
sub
mov
ja
mov
mov
xor
adc
add
mov
add
ds
mov
outsb
outsb
jo
aam
xchg
xor
push
stos
fwait
inc
ss
jmp
cwtl
and
mov
jne
inc
fsubrl
out
mov
ss
loopne
and
adc
mov
daa
repnz
xchg
mov
xchg
xor
stos
mov
lock
les
mov
push
xchg
cli
push
ret
cld
cmp
adc
jns
or
rcll
pop
mov
push
pop
ret
push
ljmp
or
pusha
adc
fisubs
lret
and
mov
fcomi
xchg
shrb
lret
xlat
lret
addl
jecxz
lods
fcmovb
sbb
mov
ret
int
jno
fstps
ret
dec
lods
aam
push
dec
js
repnz
cmp
mov
jo
arpl
rcll
and
aam
jmp
xor
pusha
lcall
lret
push
subl
out
mov
push
sarl
cld
scas
fdivs
or
ss
dec
push
in
pusha
jge
push
xchg
mov
adc
loopne
pop
test
sub
data16
pusha
cmpsb
xor
mov
pop
fstpt
movsb
in
rolb
xor
movsl
out
jbe
and
jae
push
mov
ljmp
mov
adc
xor
cmp
mov
inc
cmpsb
inc
icebp
add
sbb
xchg
jle
add
jecxz
add
ja
xchg
popf
mov
push
test
add
das
lea
jo
pop
adc
mov
inc
pop
sbb
add
or
jb
icebp
popf
iret
pop
sub
daa
jnp
in
subb
jnp
iret
jbe
int
adc
outsb
stc
push
icebp
insl
jl
jno
xchg
fsubrs
dec
bound
dec
add
mov
or
ss
cmpsl
add
outsl
sub
loop
dec
pop
add
test
sub
push
cltd
push
mov
mov
pop
cmp
mov
mov
xor
in
push
xchg
test
jns
adc
mov
or
loopne
pushf
fstl
jecxz
ljmp
rolb
dec
pop
push
or
add
jne
dec
push
sahf
daa
adc
xchg
sti
inc
or
aaa
out
cltd
leave
int3
adc
xor
loopne
push
sub
in
out
jo
out
incb
lods
xchg
inc
repnz
out
cwtl
clc
push
push
fildl
push
mov
pop
and
imul
shrb
sub
je
adc
stc
inc
pop
into
lock
jg
pusha
out
xor
setnp
sub
ljmp
or
or
mov
mov
add
aad
mov
sbb
xchg
sbb
hlt
ljmp
push
ds
pop
divb
jmp
jne
pop
jp
and
and
aaa
xchg
scas
pop
cmpsb
in
rclb
mov
inc
push
scas
das
fnstsw
ja
sahf
sub
adc
popa
mov
cmc
nop
loope
pop
shlb
xchg
aam
in
adc
sbb
jb
jle
insl
mov
leave
or
ja
cmc
mulb
xchg
rcrl
cmp
xchg
mov
fbstp
dec
pop
dec
cmc
mov
cmpsb
test
loope
test
loope
or
inc
jne
push
push
fcompl
sarb
es
int3
cs
clc
push
push
in
sbb
repnz
pop
mov
lock
mov
cmp
mov
or
xchg
andb
push
out
sbb
mov
cmp
out
lock
xchg
ja
into
repnz
addr16
dec
jecxz
fistpl
adc
lahf
test
cli
roll
mov
add
ljmp
scas
pop
inc
or
xor
aaa
fcoms
rcrb
jecxz
mov
fsubl
xlat
stc
loop
push
lock
shl
inc
leave
sti
fiaddl
pop
adc
ds
push
stos
shl
jns
je
cmp
mov
mov
inc
jmp
adc
xor
jb
jge
in
jecxz
popa
mov
jecxz
adc
cmpsb
or
push
xor
iret
push
adc
movsb
faddl
mov
jbe
aas
ds
int3
clc
fwait
add
insb
testb
mov
shll
cmp
mov
dec
mov
mov
out
mov
mov
sbb
add
dec
lret
xor
jp
jno
popa
jp
test
mov
adc
mov
icebp
je
fimuls
pop
mov
arpl
add
enter
faddl
push
fwait
xchg
movsl
loopne
jne
sub
faddl
repz
mov
mov
outsl
or
mov
mov
in
jge
jns
xor
mov
mov
xchg
popf
sub
pop
or
repz
pop
flds
in
mov
cli
sub
cmp
shll
adc
xchg
cli
ret
pop
push
insl
iret
cmc
xchg
xor
jl
or
js
jg
push
push
and
inc
shll
xor
add
sbb
xchg
mov
popa
rcrb
jo
stos
add
cmp
cwtl
dec
and
jo
cs
cmp
dec
imul
nop
xchg
cmp
add
mov
cltd
pushf
pushl
gs
mov
xor
loopne
jge
mov
mov
in
divb
in
scas
loopne
test
int
mov
sub
sbb
xchg
stos
out
lret
dec
dec
and
push
and
or
fcompp
enter
xor
stos
xchg
dec
popa
loope
js
and
popf
xchg
stc
mov
mov
push
movsl
jecxz
mov
std
sarl
cli
aaa
movsb
sbb
imul
jp
and
loope
fildl
in
std
jecxz
movsl
lcall
retw
pop
pop
sbbl
mov
aaa
mov
cmpsl
inc
mov
aad
in
pusha
push
fchs
loop
xor
xor
loope
stc
push
lcall
or
sbb
stc
sub
stc
push
jle
cld
stos
bound
push
lret
nop
and
add
cmp
imulb
imulb
pop
dec
or
inc
into
mov
cmc
xor
sbb
sub
push
in
xchg
or
jbe
inc
sub
pushf
add
jmp
cmc
or
push
pop
jne
movsb
push
mov
xlat
add
cld
out
cmpsl
aaa
pop
pop
sub
mov
outsb
adc
ljmp
pop
and
mov
mov
push
push
push
insb
fiadds
cltd
xor
xchg
sub
mov
daa
xchg
imul
sbb
jecxz
shrb
push
jne
iret
dec
insb
aaa
incl
movsb
add
jns
mov
pop
dec
push
sub
xchg
cmp
sub
xor
cmp
shlb
orb
lret
loop
lcall
jl
gs
fs
cs
stc
adc
pop
push
ja
mov
mov
arpl
lock
faddp
aam
xchg
pushw
lahf
cmpb
lahf
mov
mov
stos
lret
bound
inc
and
xorb
mov
adc
shrb
and
add
cmp
cmpsl
jo
insl
imul
fneni(8087
sbb
or
ds
pop
in
rolb
pop
mov
xchg
and
into
sbb
xor
sti
int
stc
mov
mov
cmp
cltd
mov
mov
inc
fsubs
sbb
xchg
jo
imul
sbb
packssdw
xchg
cmpsl
es
mov
test
cld
aas
fwait
div
cmp
daa
sub
nop
xchg
test
imul
jb
sub
xorb
or
shrl
add
add
fcomip
rcl
aaa
push
push
mov
add
add
clc
sahf
out
or
loope
aam
imul
add
in
jae
roll
lds
fs
sbb
jae
add
loopne
pop
mov
fists
jp
ds
pop
jle
outsl
add
outsb
movsl
or
aas
adc
add
cmp
popf
ja
mov
adc
or
pop
pop
inc
cmp
aam
sbb
movsb
push
lcall
aaa
repz
test
lods
ror
aaa
adc
or
cli
add
cmp
lock
cmp
dec
mov
pop
adc
xchg
sub
mov
dec
inc
pop
sbb
fldcw
lret
mov
mov
fiadds
popa
mov
addb
ljmp
jl
mov
dec
rcl
mov
testb
xchg
test
sarb
pop
loopne
mov
xor
mov
dec
outsb
and
add
ficompl
leave
sbb
adc
pop
sub
mov
dec
adc
ss
mov
cmp
push
sbb
or
and
fcoml
adc
les
push
dec
ss
call
lds
aas
inc
mov
fisttps
mov
cmp
iret
insl
sub
rcr
xchg
loopne
lea
rolb
sbb
xchg
adc
mov
movsb
inc
js
int
je
cmp
mov
int3
lret
xlat
sahf
push
js
jge
mov
aas
sbbl
push
and
xchg
sbb
shrl
movsb
and
jb
fldl
mov
orl
test
sbb
sbbl
pcmpgtb
pop
insb
aam
inc
imul
dec
jl
cmpb
push
fisubrs
scas
mov
insl
adc
lods
cmp
mov
hlt
cmp
inc
les
movsb
mov
xor
jbe
imul
add
mov
xstore-rng
cmpsl
ret
jmp
dec
and
or
mov
clc
inc
jg
pop
jg
sub
lods
dec
push
jecxz
rorb
jnp
mov
repz
or
push
and
inc
arpl
lea
jbe
icebp
jb
pop
insb
lods
xor
test
add
movsb
cmpsl
es
adc
roll
and
mov
mov
jbe
xchg
sbb
ret
xchg
mov
popl
out
push
and
add
add
inc
mov
jo
mov
mov
and
sub
adcl
fdivp
xchg
shl
pop
inc
movsl
push
decl
enter
xchg
movsb
bound
jp
clc
repz
jne
dec
rol
sbbl
pop
jno
das
clc
inc
out
daa
jg
into
bound
or
mov
pop
sbb
into
aad
aam
cs
test
shll
int3
dec
ds
mov
rcr
out
or
arpl
cmp
nop
mov
or
mov
lcall
push
mov
mov
icebp
xlat
mov
pop
enter
aaa
add
std
daa
inc
jno
or
popa
out
rcll
add
arpl
mov
dec
fstps
addl
into
test
fwait
cld
inc
and
dec
repnz
pop
dec
cltd
jecxz
add
arpl
mov
shlb
cwtl
ret
enter
lret
and
mov
cmpb
pop
flds
jns
je
imul
inc
jmp
out
inc
cwtl
mov
xchg
or
test
mov
xor
mov
fwait
imul
add
movsl
call
fs
pop
dec
shr
dec
mov
and
pop
dec
cmpsl
push
clc
leave
fiadds
pop
fiaddl
repnz
xchg
cmp
add
inc
lock
ss
push
icebp
std
lods
rcr
jle
cwtl
test
test
adc
cmpsb
sarl
sub
incb
push
testb
movsb
jecxz
dec
inc
mov
aam
add
inc
int
lods
mov
jmp
or
inc
test
sbb
cmp
cmpsb
stos
std
int3
sub
pop
jae
mov
out
jo
sub
adc
xor
stos
imul
movsl
notb
jg
popa
dec
es
or
fdivs
jbe
data16
xor
mov
and
add
mov
jb
push
sti
push
mov
jae
loope
out
dec
fistpl
nop
testl
jecxz
xchg
pop
xchg
or
cmp
stos
push
inc
into
jp
sub
xchg
mov
aaa
mov
add
jmp
jge
lods
rorb
data16
jp
adc
sbb
xchg
ss
das
mov
or
pop
sub
adc
mov
cmp
xchg
shll
xor
das
and
inc
popf
lahf
sub
int3
lods
fisubl
and
mov
stos
out
sub
sbb
movswl
pop
loope
filds
mov
mov
jmp
pop
push
aam
cmpsb
loop
mov
mov
mov
fidivl
enter
test
dec
lea
popa
mov
shlb
out
nop
push
es
adc
pop
test
xchg
orl
xchg
cmp
cmpsl
popa
dec
mov
sbb
xchg
sbbl
inc
loope
popf
xor
sbb
or
mov
stos
jge
sub
push
jnp
cmpsl
cwtl
insb
or
xor
scas
or
pop
shrl
xor
inc
rclb
and
repz
pop
hlt
sub
cli
shll
inc
icebp
roll
mov
sub
rclb
mov
mov
stc
add
jo
test
dec
cmpsb
inc
int
jcxz
sub
fbld
push
mov
sbb
mov
das
mov
or
push
pushf
fisttpl
sub
orb
and
jecxz
repz
sarl
dec
int
jecxz
sahf
imulb
ret
rcrl
jmp
xor
adc
push
push
dec
jge
jo
push
xor
or
ss
fldcw
subl
xor
pop
fiadds
jne
jae
fcom
movsb
add
stos
lods
lods
mov
dec
testb
pop
sub
test
pop
jns
fs
dec
insb
lock
cs
cmp
hlt
xor
inc
push
push
inc
mov
cmc
test
mov
xchg
add
xchg
push
dec
lds
dec
xchg
xchg
mov
dec
in
jle
ret
repz
std
jle
loope
mov
sbb
add
and
mov
ds
jns
into
loope
push
sub
sti
pop
js
adc
in
cwtl
adc
mov
shrl
adc
sbb
mov
sbb
scas
mov
xor
cmp
mov
cmc
cmp
sbb
jle
jno
outsb
insb
mov
mov
scas
ja
fdivr
loop
shl
mov
sub
pushf
mov
fstl
xchg
xor
aas
dec
jecxz
in
roll
mov
pop
rorl
insb
push
xchg
sub
and
xchg
test
loopne
add
das
mov
mov
mov
or
mov
mul
fimull
dec
movl
ret
stos
or
push
cmp
movsl
mov
jl
mov
imul
mov
xor
xchg
loope
cld
mov
lret
sub
repz
pop
adc
adc
movl
and
jp
cmp
hlt
inc
xor
add
lds
mulb
ljmp
xchg
insl
cltd
out
mov
andnps
jle
jp
cmc
les
movsb
sub
in
cmp
and
dec
test
xadd
adc
or
insl
notl
ret
jae
sub
and
popa
nopl
sarb
or
pop
mov
xchg
mov
adc
sbb
jne
add
jmp
mov
or
xchg
mov
inc
and
rcll
movsl
mov
dec
enter
xchg
loopne
mov
outsl
pop
fnstcw
sub
std
cwtl
mov
dec
add
mov
outsl
or
fiadds
jnp
or
fwait
test
addr16
popa
ljmp
imul
cs
add
ret
in
or
cmp
sti
repz
movsb
push
stc
cmp
pop
movsb
test
sti
push
mov
fnsave
cltd
fdivrl
jl
cltd
sub
mov
mov
std
sahf
dec
dec
add
movsb
je
int3
and
ljmp
insb
cmp
jnp
adc
std
lcall
iret
dec
push
xor
and
shl
and
imul
sbb
pop
adc
rcr
outsb
dec
pop
sbb
lcall
in
cld
mov
cmc
mov
xchg
sar
arpl
ror
mov
cld
dec
insl
movsb
fidivl
jg
lcall
mov
inc
or
dec
ror
dec
and
xchg
and
sub
dec
test
loope
loope
jbe
jge
sub
xor
push
pop
xchg
cmp
pop
and
test
sub
mov
jp
and
or
mov
adc
xchg
lods
shl
or
mov
mov
push
lcall
in
bnd
rorb
sti
sbb
jg
xlat
jecxz
orl
or
inc
orb
dec
xlat
femms
ljmp
movsl
ret
addr16
jg
cmp
sbb
inc
xor
daa
xchg
sub
sbb
cltd
icebp
clc
jmp
pop
add
cmc
dec
cli
fs
jns
test
sub
mov
pop
inc
xor
outsl
sub
sbb
mov
mov
push
leave
aas
or
adc
rolb
outsl
push
jnp
xor
push
jns
popf
in
inc
movsb
and
pop
pop
push
sahf
ficompl
jae
mov
cmp
jbe
inc
push
push
and
push
xchg
xchg
out
push
or
sub
leave
dec
add
cltd
xchg
pop
pop
leave
lods
hlt
fs
sbb
es
mov
std
in
xchg
fidivl
dec
xchg
fcmovnu
test
mov
adc
mov
sbbb
xchg
adc
pop
repnz
mov
repz
call
push
dec
mov
lcall
subl
or
pop
mov
dec
sub
inc
cmpsb
jnp
fisubrs
mov
xor
mov
cmc
repz
ss
mov
sbb
jle
ret
sbbb
test
aaa
pop
jno
les
inc
push
imul
jmp
xor
insl
stos
cmp
insb
and
aam
mov
stc
or
lods
xchg
imul
cmp
insl
cwtl
jmp
sahf
icebp
adc
sub
movsb
cltd
lods
lods
or
cmpsb
ja
mov
mov
pop
addr16
arpl
mov
mov
jmp
add
shl
push
inc
mov
xor
pop
data16
mov
aam
push
sub
nop
sbb
inc
add
inc
add
mov
xor
movaps
push
sub
andb
iret
sub
test
lds
sbb
popf
imul
ret
mov
cmp
inc
pop
insb
fwait
and
imul
js
mov
mov
stc
mov
les
sar
pop
call
lea
lea
mov
inc
adc
xor
or
mov
into
test
cmp
popa
lcall
mov
pop
out
repnz
push
pop
mov
cmp
mov
sbb
adc
xlat
mov
std
cmp
pop
imull
icebp
push
lds
add
xor
dec
movsb
pop
mov
adc
and
push
aad
jge
imul
jns
cmc
cld
mov
dec
lock
imul
adc
in
adcb
imul
std
scas
enter
loop
dec
mov
cmp
fisttpll
lds
add
xchg
fisttps
xor
in
xchg
fsub
out
inc
push
xor
test
es
ret
sbb
insl
or
cmpsl
mov
mov
int
std
fnstsw
or
cmp
sahf
inc
mov
add
fstps
faddp
mov
xor
push
inc
icebp
mov
testb
out
jo
insb
mov
mov
pop
fwait
les
lods
mov
add
push
add
nop
test
enter
imul
in
cmc
rclb
cmp
mov
inc
shll
add
out
notb
mov
push
inc
inc
add
decl
bound
popa
sbb
or
mov
and
cmpb
fstpl
push
out
and
daa
loope
jp
pop
out
or
pop
insl
fs
outsb
repnz
dec
movsb
push
lods
lcall
push
sub
cmp
add
add
shlb
jg
stc
ficoms
inc
and
add
loop
jo
add
lret
stc
sti
fsubs
in
loop
imul
mov
xchg
jg
stos
roll
cld
into
das
ja
xchg
xchg
into
xchg
jg
leave
mov
xor
mov
xor
mov
mov
sub
push
mov
xchg
in
xor
in
jne
pop
dec
scas
test
pushf
cmpsl
div
dec
adcb
rolb
jae
mov
pop
imul
fwait
sbb
mov
and
sbb
mov
jg
jo
inc
loope
bound
int
push
push
xor
sbb
scas
mov
call
xor
add
lea
insl
xor
mov
jmp
movsb
movl
mov
inc
pop
mov
es
sbb
xchg
add
mov
add
inc
insl
outsl
mov
xor
add
cs
mov
ljmp
jp
inc
sbb
jne
test
leave
jmp
test
mov
add
dec
pop
adc
call
inc
jl
sub
and
push
mov
mov
sbb
lods
lods
mov
jae
adc
jo
xchg
dec
std
out
pop
cwtl
sahf
loopne
and
mov
mov
pop
inc
cmp
add
repnz
pop
sbb
int
dec
lods
add
jbe
inc
fwait
lret
pop
fs
frstor
es
shr
cwtl
mov
out
jle
pop
bound
adc
rorb
push
mov
lea
fistpll
into
mov
pop
xchg
mov
adc
lock
das
jne
mov
test
addr16
loop
flds
jbe
aad
sti
mov
dec
jmp
mov
pop
outsl
sbb
dec
scas
or
fldcw
jae
aam
int3
sub
mov
cmp
mov
dec
cmpsb
insb
sti
aam
jp
int3
push
xchg
mov
stos
mov
ret
cmp
aad
adc
gs
jmp
jmp
shlb
mov
out
iret
adc
cmpsb
add
push
repz
mov
dec
fisubs
dec
icebp
push
bound
lds
pop
ja
mov
and
lret
push
mov
mov
adc
or
inc
call
or
lods
adc
xchg
mov
fbld
adc
aas
inc
add
lret
std
pop
sbb
out
or
arpl
cs
add
outsb
mov
add
push
outsb
pop
mov
add
xor
insl
fcompl
xchg
mov
outsb
pop
push
mov
es
loope
in
jae
shr
cli
mov
and
xlat
fwait
sti
cmc
imulb
and
pop
mov
add
std
insl
or
fs
jns
pop
lock
adc
roll
mov
pop
xchg
mov
mov
add
imul
out
add
inc
or
les
ljmp
decl
sub
bound
fabs
mov
mov
jb
lea
mov
loopne
and
nop
inc
iret
int3
pushf
jp
adcb
inc
in
inc
fistl
in
jmp
repnz
pop
ret
xchg
nop
gs
push
xlat
pop
lds
icebp
push
jp
cmp
jl
loop
sub
scas
inc
sbb
or
mov
outsb
mov
js
adc
jge
popf
push
xor
jno
inc
ficompl
xchg
sbb
and
mov
xchg
add
lret
nop
jae
fisubs
out
push
jno
sub
jne
mov
jae
pop
and
rorl
hlt
or
pop
out
mov
inc
repnz
sub
clc
mov
xor
lds
add
jns
push
dec
aaa
lods
enter
fmuls
outsl
mov
js
dec
dec
ret
mov
shr
sub
pusha
pop
ja
stos
push
bound
pop
in
xor
adc
push
sub
or
jg
rcrl
adc
sub
and
mov
call
push
repnz
cmp
push
idiv
lahf
hlt
mov
mov
xchg
std
dec
in
stos
xor
jb
cmpsb
popl
lcall
or
in
outsb
jb
into
cs
test
mov
push
inc
idivb
jle
iret
dec
nop
cmp
xchg
inc
cltd
adcb
sbb
jmp
scas
sti
pop
sbb
xor
mov
mov
and
pop
das
and
xchg
push
lods
adc
test
je
fidivrs
mov
repz
add
xchg
sub
mov
ljmp
out
sbb
cmp
jbe
xlat
push
add
loopne
or
push
add
or
cmp
scas
imul
lea
jno
cltd
push
mov
popf
fsubs
and
out
mov
jnp
out
cmp
xor
mov
sbb
das
push
mov
jge
rcl
inc
add
mov
xchg
xlat
inc
rolb
movsb
out
push
and
lret
lret
mov
idivl
jb
add
stos
mov
push
mov
sbb
mov
in
dec
hlt
mov
pop
das
orl
jl
int
mov
mov
loopne
xor
mov
mov
mov
movsb
pop
push
test
lock
xchg
mov
mov
enter
pop
xchg
je
pop
cmpsb
ss
mov
inc
lcall
mov
xor
dec
jecxz
xor
sbb
lock
test
icebp
fdiv
jle
xchg
push
out
mov
add
mov
test
icebp
icebp
or
lods
pop
pop
sbb
xor
mov
test
scas
pop
push
mov
mov
loope
pusha
jo
mov
xchg
fimuls
or
bswap
repnz
stos
mov
push
movsb
dec
rcrl
mov
ds
xor
and
xor
inc
cli
xor
lcall
mov
push
rcr
jge
mov
jbe
dec
test
into
push
pop
cmp
add
cmpsl
lcall
xchg
rcll
mov
xchg
push
out
push
cs
lahf
cmp
mov
xor
and
and
cmp
dec
out
jecxz
lret
xchg
repz
or
mov
mov
or
roll
cmc
js
in
pop
xchg
dec
mulb
mov
pusha
xor
mov
add
mov
in
idiv
jg
and
ljmp
pop
movb
and
xchg
cmc
mov
popa
jnp
nop
scas
jae
bound
pop
fnsave
imul
pop
adc
mov
add
icebp
push
or
sbb
pop
dec
jbe
cmp
add
mov
sbb
jno
movsl
add
cmpb
bnd
pop
push
das
test
or
pop
shrl
pop
dec
fwait
rcl
adc
or
pusha
xchg
cs
daa
push
mul
jo
adc
mov
sub
ss
test
enter
andb
roll
mov
out
mov
test
into
movsl
ds
repnz
xchg
aam
lock
or
pop
push
xchg
xchg
sbb
movsb
arpl
call
lahf
scas
cmc
mov
sbb
mov
cmp
jmp
mov
inc
add
loopne
xchg
mov
or
jp
lods
int3
xchg
jle
xor
ljmp
out
ror
xchg
xor
sub
dec
scas
push
xor
in
pop
jle
pop
rclb
sbb
inc
cltd
mov
ret
mov
inc
sbb
pop
repz
dec
leave
push
insl
inc
xor
outsl
sub
inc
jnp
jge
mov
repz
cmp
jb
imul
movsb
jb
rolb
cmp
push
test
cmp
jne
jnp
cs
mov
cmovo
test
loop
inc
test
sbb
push
fldt
sub
jl
mov
scas
push
scas
mov
push
cmc
cmp
or
sub
ss
adc
lods
push
mov
insl
pop
data16
leave
xor
jp
dec
jmp
mov
jnp
sahf
lret
jno
xchg
cmp
add
xchg
mov
push
fidivrl
ljmp
sti
in
xor
ds
inc
pop
lea
popf
jp
pop
orb
inc
dec
add
rcl
cmpsl
dec
xchg
cld
loop
xor
inc
dec
int
mov
scas
push
jb
jp
aam
imul
dec
cmp
fcompl
jp
jle
stos
add
push
mov
repz
flds
es
pop
ljmp
push
test
inc
push
pop
addr16
ljmp
xlat
inc
loop
xlat
fcoml
lret
jns
cmpsb
enter
sahf
pop
fdiv
and
adc
ljmp
xor
out
adc
dec
xor
pop
sbb
roll
lods
bound
dec
mov
add
fstps
imull
in
loop
insb
fsubrp
and
and
leave
sarb
add
mov
mov
ljmp
inc
fdivrp
adc
mov
cmpsb
addb
adc
push
out
sbb
dec
popa
push
pop
cs
mov
lods
rcll
ss
shrb
push
push
clc
xchg
ja
scas
sbb
mov
mov
loopne
repz
gs
cmp
dec
pop
mov
mov
and
pop
push
mov
sbb
mov
test
pop
fstpl
gs
out
es
js
sub
adc
jne
sbb
pop
add
stos
inc
push
and
cmp
push
getsec
cmpsb
xchg
mov
jno
fs
ds
pop
lret
ja
push
icebp
push
adc
out
repnz
lea
pop
jae
aam
mov
test
cmp
sub
fists
xchg
out
push
int3
inc
pop
test
jno
ret
mov
and
inc
add
cmp
lcall
mov
inc
std
or
scas
test
cs
inc
imul
and
and
stos
pop
inc
xor
sbb
xchg
out
incl
repz
jo
mov
sbb
jecxz
stos
filds
movsb
pop
add
outsb
or
sahf
sahf
stos
pop
pop
xchg
dec
xchg
sbb
inc
pop
mov
dec
mov
lcall
test
cmpsb
adc
adc
cmpsb
or
movsl
push
inc
jno
cmc
mov
ja
fsts
inc
out
stc
inc
emms
scas
outsl
or
fistpl
mov
dec
sti
andl
int
into
lock
shll
dec
sbb
lods
outsl
sub
or
push
popa
jns
add
fwait
out
je
or
or
pop
xor
aad
ljmp
ret
dec
sbb
xorb
adc
dec
mov
xor
dec
push
call
scas
inc
mov
jae
push
pushf
popf
dec
sbb
loopne
daa
cmp
popf
or
aas
adc
sub
fadds
push
jmp
add
pop
mov
push
cld
fisubrs
xchg
push
sbb
popf
jmp
dec
mov
push
lahf
daa
mov
add
test
mov
xor
jno
int3
add
sub
jle
jo
cli
hlt
and
jl
and
push
add
pusha
dec
into
push
jae
push
or
jnp
out
cmp
lret
out
add
test
inc
xor
in
mov
fisttpll
xor
mov
xchg
push
push
sbb
leave
hlt
cmp
inc
sub
out
arpl
arpl
xchg
push
jmp
and
jns
mov
inc
pop
insb
mov
cs
mov
outsl
mov
sub
add
mov
aad
outsl
imul
scas
cmpsb
add
lret
xor
sbb
test
jnp
add
js
pushf
pop
out
xor
pushf
jns
call
inc
or
imul
add
mov
pop
vcvtdq2pd
daa
cmpsl
pop
pop
imul
cmp
add
cmp
sub
fmul
lcall
xchg
loope
lods
pop
jecxz
sub
hlt
lcall
int3
iret
ds
jmp
mov
fdivr
pop
fisttpl
and
adc
push
out
aaa
jle
test
or
insb
pop
mov
push
lods
jg
jns
mov
mov
lcall
xchg
or
add
xor
xchg
ja
add
stos
std
jo
lret
fs
cs
mov
shrb
jmp
pop
out
cmp
adc
push
sar
lcall
fisubs
mov
jns
mov
push
test
cmpsl
dec
or
jae
call
pop
add
lock
pop
jmp
jo
add
inc
inc
jmp
xchg
or
aad
rcrb
insb
sub
imul
icebp
scas
arpl
lcall
repnz
adc
add
gs
test
mov
inc
cmp
enter
iret
mov
rcrl
testl
mov
adc
dec
pop
cmp
fistl
sbb
fmull
inc
xchg
and
out
sub
rorl
push
das
push
sbb
imul
xchg
sub
dec
and
inc
fistpl
fstpt
or
adc
mov
mov
add
stc
push
scas
outsl
mov
pop
inc
fildl
adcb
push
cmp
in
or
cmp
jae
pop
loopne
or
pop
pop
xchg
jp
xchg
mov
jo
adc
xchg
mov
mov
outsb
in
fnstenv
xchg
repz
mov
scas
xor
stc
shlb
dec
dec
mov
xchg
insl
daa
jp
add
push
sbb
xchg
push
loop
push
push
mov
pop
fistpll
sub
sbb
sub
adc
sahf
rolb
mov
orb
adc
mov
jbe
inc
push
push
test
pause
ljmp
and
imul
in
and
ss
aad
and
and
je
jmp
sbb
out
cld
shll
orl
nop
push
push
cmc
pop
jnp
enter
jb
jb
adc
and
cs
insl
repnz
adc
mov
jle
fildll
mov
popf
std
cmp
int
out
jl
sbb
or
pop
jb
mov
ljmp
clc
jecxz
push
divb
dec
add
xchg
add
das
mov
adc
out
mov
daa
lahf
sti
mov
mov
push
push
test
and
push
push
jmp
mov
sbb
addr16
into
mov
xor
add
scas
sub
inc
popa
cmc
xor
out
jb
jb
and
addr16
scas
ljmp
pop
dec
inc
scas
xchg
sbb
test
stos
hlt
adc
scas
xchg
lcall
dec
lcall
pop
data16
pop
jl
cli
pop
loope
movsl
push
sahf
test
mov
jne
or
and
lcall
divb
int3
lds
cmp
in
jle,pt
ret
mov
push
fnsave
loopne
sbb
inc
xchg
or
xchg
mov
sub
outsl
sub
mov
stos
xchg
push
cli
sub
add
add
cmpl
sub
sbb
adc
xchg
inc
mov
mov
jmp
ss
mov
lahf
outsb
mov
adc
push
test
loopne
inc
testb
ss
cmpsb
out
lret
aaa
cli
sub
fxch
lcall
dec
pop
out
mov
gs
insb
fwait
xchg
add
mov
imul
imull
daa
xchg
add
js
outsb
test
pop
hlt
mov
mov
enter
push
mov
in
dec
and
dec
sbb
dec
inc
adc
frstor
in
rep
or
xor
cmovle
imul
cli
sub
jne
cmp
jne
in
cli
shll
outsl
pop
sub
in
lock
push
loope
cltd
and
nop
lds
iret
mov
outsl
aam
pop
js
xchg
push
jl
js
lods
xchg
sub
pop
cmp
mov
adc
out
out
aad
divb
push
adc
pop
dec
dec
ret
test
and
fstpt
push
cmc
sub
xor
adc
scas
inc
dec
inc
imulb
cmp
add
inc
inc
outsl
xchg
push
cmp
push
and
sbb
xor
fstl
imul
mov
stc
arpl
mov
pop
and
pmulhuw
push
scas
sub
cmp
add
std
cmp
add
out
jle
bound
inc
push
icebp
inc
out
loop
call
xchg
jp
mov
pop
ds
xchg
dec
orl
ret
cs
fnsave
rclb
fists
lahf
push
inc
push
cmp
push
sbb
lds
inc
pop
pusha
fistpl
push
mov
ds
sbb
jns
cltd
leave
pop
adc
hlt
lcall
daa
lock
xor
lcall
mov
xor
call
jmp
inc
pop
jl
out
jecxz
inc
sbb
loop
and
insl
cmp
cmp
ds
ss
add
adc
pop
sbb
repz
mov
xor
sbb
scas
mov
dec
sub
or
dec
fwait
push
lods
data16
jge
les
or
sti
int
jge
push
out
outsl
add
cltd
adc
adc
lea
or
mov
add
or
jle
stos
bound
adc
ds
js
cld
cwtl
dec
add
test
hlt
es
cld
or
pop
fdivs
dec
popf
adc
das
cs
mov
xor
sub
int
outsl
and
inc
sbb
fdivl
pushf
mov
pop
push
jns
fwait
sub
xor
test
adcb
dec
xchg
sbb
and
rorb
and
jmp
push
cmp
push
adc
sub
xor
or
imul
in
pop
bound
insb
adc
and
fwait
fs
ret
add
push
cwtl
push
mov
pop
addr16
sbbb
pop
sbb
mov
adc
leave
sub
or
mov
and
adc
sbb
add
outsb
dec
or
cmp
cltd
cli
xchg
inc
arpl
je
fldcw
inc
cwtl
mov
jbe
repz
lock
jmp
imulb
jnp
xchg
fistps
xor
shll
cmc
pop
lret
outsb
fldenv
data16
in
sbb
fwait
xchg
sub
repz
adc
inc
lds
std
aad
push
out
cmp
aaa
mov
jmp
repz
dec
pop
dec
jno
fdivl
cmpsb
xchg
mov
ds
jno
iret
or
sbb
push
lods
xor
call
cmp
pop
dec
out
call
loope
int
loope
add
mov
dec
and
test
scas
jge
loop
les
es
aaa
sub
cmpsb
cmp
mov
inc
cmpb
sbb
stc
and
pushf
sbb
push
sahf
fidivrl
add
test
adcl
mov
add
dec
roll
popf
stos
mov
sub
cmp
pop
inc
outsb
jno
xadd
nop
lea
jmp
popa
testb
mov
and
ds
xchg
adc
sbb
pop
int3
lods
xchg
ja
lcall
aam
sub
jae
add
movsb
mov
adc
mov
pop
in
in
outsb
out
aaa
js
mov
xchg
cmp
fldcw
adc
sbb
sub
addr16
shrb
out
xlat
add
cmp
outsb
stc
stc
dec
push
adc
iret
cmc
xchg
mov
andl
add
dec
adc
movb
mov
mov
sub
inc
pop
cmpl
mov
mov
xor
cmp
es
pop
jecxz
imul
test
ret
jecxz
mov
outsl
out
inc
cmp
cmp
xchg
push
adc
mov
rcrl
mov
filds
dec
xor
lods
inc
movsb
sbb
push
je
aas
aaa
dec
das
je
cmpb
int3
int3
insl
es
mov
fwait
xchg
int3
xchg
lods
mov
test
mov
je
jg
out
jecxz
mov
dec
dec
testl
pop
shlb
push
sahf
or
dec
aam
movsl
xor
lahf
sub
neg
int
pop
shlb
int3
sub
clc
orb
mov
and
jne
jno
push
call
in
push
lea
and
je
adc
pop
pop
aad
dec
dec
inc
inc
fadds
xchg
jo
inc
shlb
test
outsb
pop
dec
stc
sbb
test
xor
mov
in
mov
test
xor
test
ja
sub
shlb
cmp
call
mov
sbb
sub
sti
pop
fwait
sbb
mov
sub
adc
jne
dec
xor
add
repnz
mov
jnp
sbb
ljmp
mov
dec
mov
cwtl
xchg
sbb
and
fdivrl
pop
xchg
add
lods
pop
fmul
outsl
add
mov
xchg
xor
add
gs
sub
dec
mov
lret
add
cli
jns
mov
std
andb
add
cltd
sbb
dec
cltd
repz
frstor
push
aam
xchg
out
cli
pop
push
add
cli
mov
aas
dec
and
pop
pop
aam
jnp
sarl
jge
mov
mov
add
dec
nop
mov
int
push
push
int
xchg
mov
out
jnp
mov
add
jno
pop
orl
lods
clc
jnp
icebp
mov
push
or
ret
cmp
nop
out
loope
mov
cs
xor
cli
rep
xchg
mov
imul
mov
xchg
xchg
jmp
testb
mov
push
sahf
dec
sub
inc
in
cmc
mov
add
stc
in
dec
dec
je
cmp
arpl
add
ja
adc
jmp
jno
scas
xor
adc
movsb
sbb
movsb
and
sbb
aas
mov
xor
sti
stos
lods
sbb
andb
xchg
rcll
push
xor
gs
aam
imul
push
in
push
imull
push
push
insb
fidivl
inc
fcomps
push
lods
jns
scas
and
xchg
mov
mov
ljmp
dec
ret
shl
cmpsb
into
sahf
adc
mov
std
adc
push
xchg
int3
lret
shlb
push
and
jno
sbb
xchg
adc
and
inc
or
adc
test
negb
adc
mov
adc
mov
adc
pop
pusha
lods
stos
fdivl
adc
inc
dec
cmpsb
pusha
mov
sub
mov
sub
sbb
cmpsl
std
addr16
test
loopne
push
jne
test
fistpl
dec
in
fldt
repnz
inc
cmp
cltd
push
movsb
add
push
pusha
pop
scas
mov
push
fistpl
mov
cmpsb
mov
daa
xchg
fildl
xor
cmp
mov
sbb
mov
mov
icebp
rcl
clc
xchg
sub
stos
add
mov
sub
mov
push
push
dec
cmp
cltd
mov
outsb
dec
lods
xchg
mov
out
inc
and
gs
das
ljmp
negb
andb
push
hlt
sub
push
mov
xchg
icebp
sbb
add
ret
cmp
sti
pop
out
and
jo
push
pop
xor
nop
in
orl
jo
mov
cmc
rol
movsl
test
cmp
gs
mov
out
enter
cmp
cmp
jb
in
rcr
push
ljmp
ficoms
loope
jge
cwtl
stos
les
mov
outsb
dec
sub
push
cmp
gs
cmp
inc
rcrb
push
stc
adc
mov
xor
lods
fadds
jl
jmp
js
loop
inc
pop
pop
pop
popf
lds
shl
push
and
lcall
push
mov
inc
repz
push
dec
stos
lret
enter
xchg
pop
das
dec
rorl
mov
aad
jo
push
add
loop
dec
lahf
pusha
adc
stos
popa
iret
push
icebp
cmp
fs
fldcw
sbb
cmp
movsl
mov
mov
pop
xchg
mov
stc
fdiv
xchg
test
imul
mov
mov
stos
adc
pop
scas
xor
packuswb
and
and
sbb
mov
jnp
aas
xchg
cmpsl
mov
mov
pop
and
sub
fcompl
fs
jno
call
cmc
scas
dec
jecxz
pop
ss
xor
cmpsb
adc
mov
shrb
xchg
insb
and
ret
pop
cmp
fimuls
pop
cwtl
into
xchg
jnp
lret
ljmp
pop
pop
lret
lea
pop
aad
fisubrl
and
push
lods
fimuls
popa
dec
jmp
or
loop
push
mov
je
flds
mov
add
enter
inc
int
nop
sbb
pop
out
sbb
xchg
inc
and
ss
xchg
xchg
jg
rorl
dec
adc
and
cmc
data16
push
addl
xor
cmpsb
inc
cltd
movhps
and
cmp
int
inc
aas
pop
pop
and
out
mov
outsl
dec
call
mov
jg
mov
dec
jecxz
lcall
inc
dec
push
paddw
dec
lods
xchg
lahf
mov
add
stc
out
inc
std
fidivrs
movsb
dec
cmp
mov
add
and
pushf
sub
insl
mov
repz
jl
aaa
addr16
or
in
rcll
mov
mov
out
push
int3
jp
push
jne
push
into
or
ror
mov
in
and
dec
repnz
movsl
lods
add
cli
icebp
imul
dec
out
pop
enter
aam
push
cmp
adc
jne
loope
lods
sbb
lds
movsl
dec
mov
mov
hlt
xor
adc
stos
jge
lret
aam
or
or
ret
sub
ja
pop
cs
push
add
cmpsl
hlt
jb
pop
push
or
pop
ret
jmp
lret
sbb
scas
jb
push
ss
out
ret
clc
mov
push
in
je
sub
add
inc
pop
rcll
jl
pop
scas
cltd
iret
mov
fnsave
leave
sbb
pop
sub
mov
dec
sbb
cmpsb
sbbb
dec
cmp
dec
and
aad
inc
or
pop
pop
fadds
jg
outsl
hlt
dec
aaa
stos
fdivrp
stc
jmp
add
fildl
cmpsl
and
fcmovnu
or
outsb
fbld
lcall
sbb
mov
into
sahf
pop
inc
lret
sub
int
xchg
mov
fimuls
or
in
rcll
mov
jo
mov
jnp
fdivrl
mov
sbb
lahf
mov
sub
aaa
xlat
mov
hlt
addr16
jp
aad
xor
repz
lret
mov
sbb
shll
or
jne
fstl
aaa
or
jae
lods
aas
scas
outsl
dec
out
xchg
enter
jle
or
imul
in
sbb
add
and
test
jge
test
xor
add
push
mov
mov
mov
gs
inc
lea
add
pop
mov
loopne
fcoml
pop
movsb
jae
mov
stos
aas
pop
rorl
in
sbb
movsb
adc
mov
pop
ss
push
ja
add
outsb
dec
aam
add
lock
ret
clc
sub
out
sbb
in
stos
add
jae
jnp
outsb
addb
scas
inc
pop
mov
loope
xchg
aad
inc
jecxz
xor
imul
sub
scas
and
jns
jne
xchg
or
dec
mov
lahf
sarl
dec
fldcw
pusha
leave
dec
cmp
or
inc
xor
push
bswap
adc
test
push
xchg
pop
fs
mov
fsubrl
orl
xor
popf
and
xbegin
mov
cmp
bound
jmp
mov
shlb
inc
bound
fs
mov
or
and
arpl
cltd
fs
sbb
leave
aam
xchg
sysexit
negb
in
mov
insl
insb
dec
fisubl
sbb
out
jne
add
std
adc
fucomp
or
pop
mov
push
andb
add
jmp
aam
adc
jne
aam
or
mov
scas
dec
cmpsl
jnp
pusha
xchg
mov
mov
add
lret
mov
jne
or
xchg
scas
dec
and
xchg
cmp
lock
mov
rcl
push
movsb
mov
hlt
mov
xchg
loope
cwtl
jb
repz
lock
out
outsb
mov
imul
xchg
test
mov
ret
adc
and
mov
pop
sbb
in
dec
jo
shl
push
fwait
shl
ljmp
iret
in
mov
mov
dec
mov
push
stos
subb
sbb
inc
lods
dec
imul
or
sahf
add
test
xchg
fsubr
pop
mov
jo
test
pop
xor
cmp
cmp
idivl
mov
popf
outsl
jp
mov
cmp
push
jno
xor
jnp
and
pop
jo
jmp
mov
push
or
js
das
dec
arpl
daa
push
sbb
add
test
push
xchg
cmpsb
xor
inc
xor
loope
mov
cld
out
sti
lret
jno
test
and
push
sub
mov
lods
pop
sti
sbb
dec
mov
add
inc
pop
push
shlb
les
mov
or
imul
push
mov
xchg
fcoml
out
add
les
inc
imul
mov
cmc
pop
push
bound
or
and
mov
jmp
in
jmp
pop
add
sbb
cltd
int3
mov
mov
in
stc
mov
mov
mov
loopne
fildll
fmull
sub
jb
jns
rol
and
push
ret
mov
lret
lock
mov
les
aaa
and
mov
insl
orb
cmp
cmpsb
imul
aam
popa
jecxz
add
xorl
add
sub
scas
mov
rorl
movsl
sbb
inc
add
dec
adc
lea
iret
repz
es
xchg
cmc
das
jmp
nop
jecxz
pushl
dec
sub
lret
mov
pop
push
test
mov
cmp
in
daa
sub
fwait
xor
into
push
and
jnp
push
mov
cmpsb
pop
sub
adcb
shlb
popf
and
stc
hlt
cmp
xor
add
mov
repz
lods
cmp
pop
or
push
mov
mov
xor
cmp
addr16
xor
das
clc
inc
and
push
hlt
jp
mov
xor
sbb
push
add
icebp
pop
dec
push
pop
push
sbbl
in
inc
inc
and
in
jmp
jne
clc
xlat
dec
xlat
or
pop
push
int
fwait
pop
mov
in
in
in
push
xlat
cmc
scas
lock
xchg
sti
mov
pop
adc
fists
fbld
jbe
mov
fidivrs
das
push
nop
popa
cmpl
adc
cmp
mov
mov
and
pop
movsb
jns
pop
in
movsb
fdivrs
sub
popa
xbegin
pop
jmp
pushf
int3
pop
xchg
or
incb
jns
mov
xchg
aas
inc
xchg
je
pop
inc
ja
jne
fists
mov
inc
loope
lea
jg
daa
mov
jno
pop
mov
lods
clc
notl
loop
add
test
add
mov
mov
cmp
push
sub
hlt
ljmp
adc
mov
push
stc
in
stos
mov
push
cmp
es
mov
pop
xor
push
lret
inc
cltd
pop
jg
dec
mov
jnp
cmp
mov
filds
add
add
in
and
aas
fcomip
out
or
out
or
add
and
jns
cld
push
lret
add
jnp
xor
cmp
pop
int
cmp
div
xor
shlb
add
out
mov
add
leave
int
mov
mov
jo
bound
lods
xchg
xchg
adcl
jp
int3
push
xor
mov
iret
push
and
out
dec
popa
test
inc
dec
push
ret
xchg
adc
inc
mov
jns
mov
pop
imul
scas
aas
inc
push
scas
pop
or
mov
pop
add
test
dec
shll
std
xchg
jecxz
add
xchg
aam
ja
add
popa
negl
jle
pop
inc
les
dec
mov
and
lcall
insb
imul
pop
adc
mov
jl
sti
addr16
mov
gs
push
jns
hlt
gs
xor
pop
xor
decl
incb
inc
jo
pop
cmp
push
or
fucom
or
push
loopne
pop
add
xlat
arpl
outsl
shll
ljmp
xor
cli
in
push
sub
cmp
xor
xchg
popf
cwtl
mov
pop
insl
cmp
jne
mov
xor
and
icebp
out
jbe
dec
jmp
loopne
or
xor
adc
call
inc
jne
std
popf
shl
inc
sahf
and
jmp
subb
and
in
or
add
or
dec
std
xchg
lret
add
lock
jmp
push
test
outsb
lods
pop
ret
jle
jne
xchg
xchg
sahf
sahf
and
mov
test
dec
inc
add
clc
inc
sarb
aad
adcl
push
es
in
aas
push
cmp
into
mov
jle
mov
movsl
fisubl
inc
jo
mov
and
andl
sbb
jmp
ljmp
adc
add
and
mov
fisubl
inc
inc
sbb
jge
jg
pop
call
int
fcoml
push
and
push
cmp
adc
jg
stos
mull
sub
movsl
jecxz
cmp
xor
cltd
sbb
ljmp
push
xor
pop
inc
add
add
in
or
jle
jb
jmp
cmc
jbe
jle
mov
int3
mov
in
movsb
fldt
mov
jb
dec
sbb
into
je
nop
pop
clc
mov
push
mov
rcl
lahf
imull
dec
iret
leave
subl
sub
test
sbb
inc
adc
add
sbb
aaa
adc
sti
sub
insb
out
pop
scas
test
sbb
mov
jns
in
push
dec
mov
mov
pop
bound
das
rcll
xlat
test
push
mov
and
je
les
dec
imul
push
mov
mov
fistpl
jp
add
addb
jmp
scas
xchg
jae
lea
inc
sub
or
jmp
push
es
ret
int
sub
push
fisttpll
xor
mov
xor
push
push
push
mov
mov
loope
sub
mov
mov
addb
push
lahf
fwait
imul
pop
xchg
shll
cltd
xor
nop
xchg
loopne
pushf
dec
jmp
insb
xchg
inc
jl
int3
mov
roll
cld
push
je
push
iret
mov
sti
mov
xor
add
subl
notb
lea
adc
sbb
push
andb
xor
ja
jns
dec
or
shrl
int
daa
movsl
fildl
lahf
int3
xor
mov
lods
adc
arpl
cmp
and
imul
es
mov
out
cmovp
fcmovne
les
int3
mov
enter
dec
sub
xor
std
movsb
inc
outsl
fistpl
cmpb
lods
push
enter
lret
push
cli
push
jae
push
test
xchg
inc
cmpsl
in
mov
adc
cmp
xor
shr
into
outsb
addr16
xchg
sti
add
mov
subl
lahf
mov
cltd
push
pop
in
insl
pusha
mov
rcr
sub
push
gs
outsl
and
inc
xchg
dec
popa
out
ficomps
test
cld
pop
adc
add
inc
jnp
cmp
in
movsl
sub
and
adc
mov
cltd
push
xchg
sarl
jbe
popf
xchg
mov
pop
imul
jp
cmpsb
popa
loop
pop
mov
adc
fisttpl
out
call
add
inc
xor
sbb
ss
pop
add
out
lods
adc
and
xor
out
sti
add
shrb
xor
lock
shrl
push
mov
stc
mov
loop
push
mov
dec
jecxz
push
frstor
adc
cmp
or
adc
test
decl
movsl
sbb
int3
repz
or
repnz
sahf
cs
sti
test
fists
int
cmc
les
mov
xchg
clc
test
jmp
jbe
stos
adc
mov
and
pop
inc
jle
sbb
scas
mov
pop
sbb
lahf
push
xchg
in
loopne
scas
inc
shr
pop
rcll
lcall
outsb
lcall
xor
add
jge
fadds
inc
aad
mul
jns
scas
fcmovb
pop
jp
aaa
dec
shll
jp
pop
dec
orb
cmpsl
add
inc
sub
aaa
mov
pop
jno
mov
movsb
or
pop
cmpsl
xor
sarb
out
sti
push
jl
add
aaa
test
repnz
mov
fsubs
or
les
arpl
push
sbb
add
aaa
pop
mov
lcall
mov
jb
ljmp
dec
lahf
adcb
cmp
inc
mov
inc
call
lret
imul
add
xorl
stos
mov
or
fldt
mov
mov
mov
daa
stos
rorb
mov
fistpll
ss
in
imul
sub
cmp
sbb
jne
orb
or
inc
cmp
in
repnz
fs
nop
xchg
int3
das
repz
nop
aas
adc
and
cmp
addr16
or
mov
scas
call
sbb
int3
imul
popa
add
cli
jns
test
outsb
lods
ljmp
dec
or
jmp
out
xchg
icebp
mov
out
aad
adc
shlb
and
lods
mov
pop
fmull
pop
dec
fwait
pop
adc
outsb
push
xor
adc
in
xor
call
cmc
mov
xor
mov
xor
sub
cwtl
push
or
aad
xchg
gs
mov
mov
in
lret
mov
xor
in
cltd
xor
jmp
jmp
rcrb
divb
and
or
jge
ret
int
sti
cmp
mov
div
or
add
push
les
pop
jl
jp
or
inc
and
or
mov
stos
mov
sbb
pavgb
pop
sti
inc
xchg
shll
faddp
lods
cli
fcmovne
sub
inc
fidivrs
ds
lret
loope
add
mov
mov
jno
stos
inc
mov
mov
push
mov
inc
pop
mov
push
int3
sub
movsl
int3
add
jge
xor
aas
jnp
push
scas
in
in
pushf
sahf
inc
dec
subl
or
ja
sub
cmpsb
sarb
test
or
push
lcall
adc
mov
lret
fsub
jge
push
mov
popa
gs
das
fiadds
shrl
dec
sbb
add
adc
pop
imul
xchg
jnp
test
nop
jle
inc
push
and
insb
mov
mov
popa
stc
jmp
mov
outsl
adc
mov
dec
sub
cmp
fsubr
jae
mov
jmp
stos
xor
sub
sahf
out
pop
nop
pop
or
outsb
stc
pop
mov
xchg
test
xor
mov
cmpsb
cltd
cmp
xor
add
add
jno
js
push
test
xor
ret
imul
out
cwtl
stc
xchg
xchg
movsl
mov
call
inc
out
adc
pop
xor
fiadds
and
out
fldenv
pop
inc
outsl
jns
orl
cld
xor
jmp
push
jbe
mov
in
hlt
repnz
mov
sbb
pop
xchg
push
adc
mov
xchg
inc
popa
pushf
fsub
stos
clc
or
jecxz
adc
mov
repz
minps
mov
out
je
fldt
testb
shlb
pop
dec
push
adc
decb
push
lods
xor
insb
mov
insb
andb
dec
add
dec
imulb
mov
add
and
sbb
jg
xor
adcl
dec
and
jmp
mov
negl
and
rcrl
loop
push
pop
pusha
sub
into
outsb
push
push
mov
mov
lahf
dec
mov
shr
sahf
and
shl
push
xor
nop
cwtl
dec
pop
stc
or
js
push
mov
cs
mov
pop
popf
ss
enter
dec
mov
rorl
into
xor
test
pop
pusha
cmpsb
xor
js
pop
pop
ss
pushf
cmc
adc
jne
ljmp
loope
in
movsb
adc
in
cmpsb
scas
shrl
je
int
addr16
pop
repnz
cmp
mov
lods
add
add
jae
push
sahf
add
pop
fimuls
push
dec
jmp
cltd
cltd
push
pop
jmp
or
outsb
mov
jmp
and
mov
popa
or
dec
jecxz
movsb
add
dec
mov
sub
mov
cmpsb
or
add
pushf
xor
fisubrs
push
test
xchg
sbb
inc
nop
in
adc
in
dec
sub
scas
mov
fwait
xor
sbb
aas
jae
jb
mov
dec
in
mov
leave
loop
dec
dec
fistpll
sti
push
adc
mov
aam
sub
dec
add
mov
mov
mov
and
fsubrl
idivl
aaa
dec
or
es
in
jecxz
xchg
mov
fs
xchg
shrb
popf
inc
imul
mov
and
out
push
add
adc
jg
aas
jns
pop
mov
mov
add
repnz
mov
cmpsl
push
aad
mov
mov
pusha
repz
xchg
bound
xchg
pushl
loop
xor
inc
stc
xchg
daa
mov
mov
fistpl
push
inc
lock
lds
jnp
dec
adc
mov
pop
adc
pop
mov
sub
push
rcl
adc
jne
and
xchg
inc
mov
aad
pop
fnstsw
fdivs
pop
xlat
das
mov
scas
mov
aas
movsl
cmpsb
loope
push
cmp
inc
rcll
mov
cmpb
adc
repnz
mov
or
and
dec
sahf
cmp
push
jns
jg
xchg
xchg
or
iret
and
and
pop
rolb
repnz
adc
push
push
gs
loope
imul
rclb
lret
nop
outsb
fisttps
fcmovb
jecxz
sbb
cmp
loop
sub
adc
and
lcall
or
stos
jne
fisubrs
loopne
jle
loopne
cmpsl
add
or
insl
test
call
push
xchg
lahf
rclb
lcall
adc
imul
rcrb
or
repz
stc
stos
xchg
and
cmp
or
mov
bound
and
dec
push
cs
iret
rcrl
push
arpl
out
jae
lahf
ficoms
mov
enterw
adc
and
clc
addl
adc
ret
rolb
push
xchg
or
popa
cld
std
cmp
mov
xor
test
movsl
mov
jl
repz
sbb
pushf
add
aas
fstpl
pop
std
mov
pop
in
mov
and
jecxz
loopne
pop
or
leave
dec
aas
lds
inc
dec
lret
sahf
ja
gs
hlt
das
mov
inc
mov
lock
rcrb
mov
aas
cmpsl
mov
pop
pop
in
mov
nop
inc
push
sbb
adc
fwait
mov
fildll
jl
or
add
xchg
mov
in
xchg
sbb
mov
pop
mov
push
inc
cmp
xchg
pop
scas
and
ret
bnd
inc
jecxz
out
xchg
mov
shlb
ds
cmp
mov
jae
pop
loopne,pn
inc
stc
jno
and
sbb
scas
dec
mov
lcall
ret
or
mov
xchg
dec
int
scas
imul
add
jbe
dec
jbe
ja
sub
lret
inc
daa
cmpsl
push
add
or
add
lock
dec
push
mov
xlat
mov
rolb
add
and
stos
fisttps
ss
jbe
sbb
or
sbb
xor
outsb
mov
mov
aad
fsubrl
add
dec
sub
add
push
fdivrl
sub
lcall
popa
orb
shll
sahf
in
xchg
fcoms
pop
in
xor
repz
imulb
dec
inc
mov
and
out
stos
bnd
cmp
rclb
sahf
and
repnz
push
pusha
insb
or
mov
aam
shlb
sub
ss
fists
pop
outsl
aas
add
mov
inc
cmc
loop
mov
imul
cwtl
push
jecxz
add
gs
adc
xor
in
ret
cltd
sub
subb
jg
push
aad
sbb
out
jbe
jne
jecxz
pop
mov
ja
inc
adc
loopne
mov
adc
ds
dec
loopne
cld
sub
dec
jo
adc
mov
jbe
push
mov
sbb
mov
or
imul
mov
test
pushf
xchg
inc
lds
fs
insb
push
movsl
mov
test
daa
pop
out
mov
testb
push
dec
fldl
pop
jp
and
sbb
les
jge
pop
mov
pop
push
lds
ret
das
and
jle
cmp
xchg
fstp
push
mov
jne
jne
test
sbb
andl
dec
xchg
into
fcomp
ret
cmpsl
pop
ret
mov
jb
ljmpw
or
push
movsl
xor
jmp
add
inc
popf
mov
sbb
xor
sbb
push
bound
nop
clc
fmull
loopne
xlat
loopne
adc
ret
cmp
in
xchg
pop
test
sbb
sub
xor
cmp
push
pop
outsb
xchg
cli
dec
mov
inc
push
mov
shlb
jbe
ret
push
push
cmp
cmp
dec
mov
aad
mov
xlat
cli
cwtl
cwtl
into
sahf
cli
mov
pop
shll
mov
xchg
aas
pushf
jge
daa
les
dec
add
lcall
andb
mov
cmp
pop
loop
mov
stos
xchg
call
in
jno
jle
aas
repnz
dec
gs
add
fs
test
mov
adc
cmp
add
out
sti
pop
sbb
or
and
push
mov
mov
sbb
mov
add
adc
pop
fmull
pushf
push
inc
inc
jge
subl
sub
add
push
stos
cmp
ljmp
scas
mov
adc
inc
xlat
sti
fwait
push
mov
inc
dec
arpl
outsb
cmp
inc
pop
stos
push
adc
hlt
into
fstl
mov
mov
pop
scas
adc
mov
rcll
loopne
movsl
sahf
lcall
pop
nop
cld
add
mov
lahf
in
rorb
fucomp
mov
dec
xchg
lods
negl
sub
or
lahf
call
xor
fwait
add
cmpsl
cli
cmc
add
lahf
andl
pushf
fsubl
sub
addr16
sbb
xorl
cwtl
xor
addb
mov
sub
out
cmc
cli
lcall
mov
es
mov
fsubrl
or
ret
sbb
mov
sbb
mov
xchg
call
push
xor
sbb
push
mov
jmp
testl
shlb
sbb
outsb
inc
jge
or
out
repnz
mov
fwait
and
cmp
sarb
scas
pop
jns
fistps
adc
cltd
les
into
jl
ror
repnz
fsubp
lea
push
mov
xchg
pop
cmp
or
dec
stos
ror
ret
dec
mov
enter
out
testb
aas
das
gs
cmp
push
mov
movsw
hlt
mov
clc
push
push
std
or
sbb
push
mov
aad
jnp,pt
in
xor
test
and
pop
cwtl
jmp
sbb
adc
ds
inc
mov
pop
cmp
stc
xor
add
mov
push
cltd
test
fmuls
or
jo
or
in
and
sbb
pushf
std
mov
dec
inc
pop
enter
rclb
jbe
pop
pusha
sub
pushf
out
dec
cwtl
stc
ss
repnz
loopne
imul
inc
addr16
dec
lahf
and
inc
leave
rolb
mov
push
and
mov
jle
das
push
pop
shrl
xor
clc
popa
sahf
xchg
std
cmpsb
mull
or
sbb
imul
sbb
push
sub
stos
jecxz
fimuls
xchg
mov
add
arpl
sub
fistpl
jns
andb
and
adc
pop
loopne
cmpl
rcll
mov
sarb
in
push
andl
mov
and
das
fwait
lahf
push
xor
adcl
push
sub
inc
cmpsb
mov
pop
pushf
insb
into
fmull
sub
sub
jmp
push
cmp
xchg
and
mov
out
std
shlb
sbb
pusha
jg
loopne
fisubs
sub
pusha
jmp
imul
or
inc
loop
dec
outsl
xor
roll
lret
add
mov
psraw
aam
jae
scas
jle
sbb
add
test
jl
sub
cmp
cmc
mov
fldl
sbb
repnz
xchg
xor
sub
adc
xchg
shrl
mov
jmp
pop
inc
fcomps
rol
push
xchg
cmp
cmp
cmpsl
addl
lea
bound
inc
mov
int3
hlt
pop
inc
loop
clc
dec
js
add
sbb
fists
fxch
jne
mov
pop
dec
popa
test
xlat
jle
loopne
fwait
clc
xorb
pop
xchg
jnp
scas
sub
iret
mov
aam
fcmovbe
mov
fstl
sbb
and
inc
outsl
inc
sbb
or
sub
mov
sbb
arpl
adc
push
fisubrs
dec
test
mov
addr16
sbb
pushf
pop
cmp
add
mov
and
repz
movsb
adc
movsb
das
cmpsl
filds
pop
add
sub
push
lret
ljmp
fisubrs
ret
mov
xchg
push
mov
popf
stc
jb
mov
loop
mov
pop
sub
popf
lret
fs
aaa
cmp
xor
push
xor
or
sarl
popa
iret
adcl
rol
in
popa
outsb
mov
pop
dec
mov
xchg
stc
iret
int
repnz
mov
xor
lcall
or
cmpsl
jp
mov
daa
sub
mov
test
inc
icebp
and
jbe
add
roll
rolb
jge
lods
nop
mov
js
das
ja
inc
lds
pop
rol
inc
mov
and
leave
imul
sub
insb
sub
dec
fwait
sub
dec
je
xchg
js
push
imul
add
adc
lcall
dec
mov
fcom
adc
lahf
rorl
mov
stos
stos
inc
jmp
in
cwtl
inc
jmp
divb
rcll
lcall
call
sarb
shrb
aam
int3
lock
out
adc
pop
adc
scas
negb
fldenv
ja
xchg
and
es
push
cwtl
bound
add
add
pop
cmp
sbb
push
xchg
notl
int
rorl
std
or
loopne
push
fimull
jl
loopne
loope
push
aad
fldenv
inc
inc
int
xchg
xor
scas
in
ficoms
aam
dec
jmp
sub
cmp
push
sub
ljmp
pop
std
mov
mov
mov
aad
mov
add
imul
aaa
add
mov
ret
loope
xor
icebp
dec
dec
add
pushf
jnp
fbld
jg
fidivs
cli
es
inc
mov
pusha
stos
mov
jae
mov
lea
jne
pop
adc
jbe
sahf
and
adcb
stos
stc
sahf
dec
adc
inc
xchg
lcall
jmp
and
and
sbb
cmp
jp
fbld
mov
out
daa
js
pushf
add
mov
fnstsw
sarb
xchg
jge
push
sub
dec
add
push
addl
or
pusha
mov
sub
in
pop
mov
dec
jl
dec
cmp
dec
pop
dec
sar
fiaddl
sub
mov
popf
pop
pop
ja
jns
ljmp
lret
mov
stos
adc
and
jb
idivl
push
cmpsl
sar
cld
mov
cmp
incb
pop
adc
iret
add
insb
mov
mov
and
repz
inc
repnz
sub
pop
mov
xor
dec
in
jg
loopne
loop
or
mov
outsl
fiadds
mov
inc
xchg
mov
std
and
mov
adc
out
call
repz
push
mov
jge
xor
xor
adcl
mov
adc
cmc
cli
mov
fdivrl
mov
test
out
mov
loopne
fdivrs
mov
movsb
mov
ret
rcrb
push
repnz
and
lahf
out
ss
int
or
dec
and
mov
adc
std
fnstenv
imul
sahf
add
shrb
jl
push
mov
mov
in
jp
mov
test
cmp
repnz
leave
fisubrl
inc
cmpsl
or
pop
dec
leave
mov
call
xchg
sub
bswap
rorl
out
rcl
addr16
cmp
sbb
gs
pop
lretw
ja
stos
cmpsl
push
les
adc
ficompl
nop
dec
push
sbb
push
aam
aam
sub
mov
in
fbstp
xchg
aad
inc
aad
jo
cmp
add
add
jmp
mov
jae
xor
adc
mov
dec
pop
xlat
and
sbb
stos
outsl
and
dec
movsb
mov
add
testl
sbb
inc
lods
mov
loop
fcompl
adc
pop
ret
adc
pop
xor
and
and
xchg
add
jmp
push
movlps
into
dec
aaa
pop
stos
leave
mov
cmc
rcl
aad
jecxz
push
push
shll
sub
rorl
or
cmp
fcompl
pusha
ficompl
into
mov
ror
sbb
jnp
sar
mov
incl
xchg
lods
shlb
xorb
outsb
mov
sub
testb
outsl
addr16
sub
add
jl
pop
lods
cs
jo
daa
jnp
mov
imul
int3
cmpsb
shlb
std
add
mov
scas
dec
mov
ja
xor
pop
pushf
xchg
adc
xorps
jb
adc
dec
clc
jle
adc
or
inc
adc
cmp
pop
push
pop
shlb
push
in
dec
lret
jbe
outsb
sbbl
outsb
dec
pushf
inc
jbe
mov
jecxz
xchg
xor
jno
push
push
inc
ds
jno
and
out
xor
dec
pop
sub
sub
xchg
imul
mov
loopne
scas
mov
adc
push
jmp
lret
xor
aas
mov
cli
add
or
and
lods
fs
dec
in
inc
push
mov
push
jp
sti
ss
push
xchg
pop
test
movsb
test
mov
into
mov
mov
push
sbb
rcrl
or
mov
push
jo
rcr
sub
push
sub
or
mov
pop
loop
mov
in
pop
mov
mov
jg
sti
inc
rcrl
std
cltd
inc
gs
std
ret
jecxz
add
and
mov
clc
lock
loopne
inc
lods
cmp
xchg
rorb
dec
push
jle
outsl
jo
out
out
std
or
pop
js
mov
or
push
lods
xchg
dec
aas
xor
and
loop
data16
popf
jle
adc
or
dec
dec
sbb
push
cmp
sbb
lcall
and
add
and
dec
imul
push
adc
daa
xor
popa
xchg
pop
js
mov
cmpb
test
xor
loope
icebp
mov
in
pop
dec
mov
add
in
std
clc
outsl
nop
cltd
push
lcall
and
lcall
cs
pop
or
insb
mov
imulb
out
scas
cmp
ds
xchg
push
lock
repz
cmpsb
mov
adcb
aad
das
lret
rcr
scas
mov
iret
in
and
jo
aaa
mov
jg
std
sbb
insl
es
jno
outsl
ds
mov
scas
in
btc
in
cli
cmp
mov
mov
daa
stos
mov
xlat
pop
lds
sbb
andb
xchg
cli
imul
ret
mov
ja
jnp
shlb
test
push
mov
mov
inc
mov
push
popf
imul
rcr
or
cmp
movsb
jge
push
movsl
push
mov
test
xchg
hlt
jnp
cmpsb
jmp
sub
outsb
out
cs
add
testl
cld
pop
decb
mov
jmp
pop
mov
test
lahf
cwtl
stos
cwtl
xor
adc
out
add
movsl
fadds
xor
call
cmp
sbb
adc
loope
mov
sbb
fimull
dec
jecxz
adc
mov
sub
xchg
jp
jl
push
mov
sub
and
adcb
mov
cmp
and
getsec
mov
dec
sbb
mov
xor
cwtl
push
push
cwtl
push
ja
loop
dec
jne
clc
sub
fcmovu
pop
in
mov
pop
in
cmc
xchg
pop
fcomip
push
push
pop
add
hlt
call
jl
inc
aaa
jg
mov
xchg
lods
mov
pop
xchg
inc
movsb
jl
pusha
dec
jae
dec
xchg
clc
adc
fstpl
notl
xor
in
mov
xchg
sbb
shlb
popa
pusha
and
in
push
sub
or
push
cmpsl
mov
into
fwait
adcl
stos
jle
sbb
iret
loope
sarl
das
sub
lret
je
shrb
and
mov
in
cmpsl
add
stos
xlat
lcall
js
and
daa
xorb
test
mov
sbb
mov
cmp
add
aas
pop
bound
or
in
fldcw
js
aad
aad
pop
cmpsb
stc
loope
mov
insb
jo
pop
push
stos
in
ud0
adc
or
inc
push
sub
rclb
scas
xchg
addr16
adc
push
push
enter
cmp
push
rorl
push
mov
in
sbb
sbbl
stc
aad
mov
inc
sbb
data16
push
or
inc
imul
fidivrs
jle
xlat
push
cmp
nop
enter
insb
addr16
or
dec
xchg
scas
mov
imul
jns
fwait
insb
mov
inc
push
pop
out
mov
rcl
out
adc
pop
jmp
lods
adc
stc
leave
stos
sbb
outsl
ss
in
in
mov
sbb
mov
orl
dec
outsl
jbe
and
in
and
cmp
xor
sub
pop
ljmp
in
adc
xor
adc
lds
and
push
or
gs
push
adc
inc
and
lock
or
loopne
aad
and
and
lcall
cmp
pop
cld
xor
repz
imul
push
aas
dec
sub
sbb
jbe
xor
pop
sbb
or
fwait
cmpsl
rorb
mov
std
cmp
and
movsl
int3
das
sub
mov
repz
inc
imul
pop
add
push
xor
jge
adc
mov
cmpsb
jmp
loop
mov
aad
loope
cmp
shl
mov
jns
cmp
mov
push
fsts
repnz
sti
das
gs
and
loop
push
imul
sub
mov
adc
data16
int3
int3
mov
scas
mov
into
pop
shll
daa
xor
mov
push
or
sub
add
lods
divb
das
xchg
xor
adc
pop
add
insl
mov
inc
fwait
push
xor
mov
dec
cmp
nop
loopne
push
ja
cwtl
lcall
cli
iret
fnstcw
testb
mov
imul
xchg
daa
mov
fistpl
out
cmpsb
push
adc
xchg
sbb
inc
jno
out
add
jg
stos
mov
xchg
push
sbb
pop
lea
inc
lods
aaa
rcll
pop
lcall
sarb
mov
adc
jo
fbld
fsubrl
dec
fcomps
fwait
push
jge
or
mov
hlt
cmp
xchg
pop
insb
push
repnz
scas
xchg
and
dec
int3
cmpl
outsb
cli
xor
rcl
jnp
dec
jp
repnz
mov
adc
sbb
cmpb
mov
das
cmp
stos
cwtl
outsl
sub
and
pushl
pop
xlat
push
adc
pop
dec
call
rcrb
dec
add
mov
leave
sub
pop
mov
bnd
fcmovu
sbb
cmpl
mov
dec
cs
aas
add
or
or
lret
pop
fs
hlt
dec
mov
add
lds
or
out
and
scas
mov
clc
xchg
add
iret
inc
mov
push
jge
mov
push
daa
push
xor
push
add
lret
fwait
mov
movsl
mov
lods
dec
movsl
stos
adc
sub
sahf
mov
xor
push
inc
xchg
sbb
lret
and
pop
sbb
push
mov
add
jcxz
jecxz
inc
push
hlt
pushf
fiadds
outsb
or
loope
jo
jmp
ret
xchg
in
xor
fwait
mov
loopne
push
mov
and
in
add
out
enter
jno
adc
push
test
lcall
addr16
add
out
cmp
aam
add
leave
mov
add
adc
cld
mov
lock
frstor
lds
aam
and
or
jl
dec
es
in
aad
int3
cwtl
sub
in
inc
jae
repnz
repz
adc
adc
stos
mov
jge
push
push
sub
adc
xlat
repnz
mov
sldt
add
adc
mov
cli
cmp
mov
xchg
cmp
pop
add
out
int
test
cmp
or
arpl
and
icebp
jle
ret
push
pop
std
push
mov
pop
loopne
push
xchg
cmpsl
inc
rclb
inc
inc
cli
dec
sahf
adc
jno
ja
mov
out
jle
mov
adcl
sub
mov
test
inc
decl
adc
jb
pop
cmp
inc
das
jp
cmpb
out
aaa
std
lret
push
out
lds
pop
jge
ljmp
aam
cmp
popa
mov
jbe
jno
rorb
jo
and
mov
fiadds
ljmp
movsl
inc
insl
ffree
sbb
sub
test
pop
int3
sbb
cli
sbb
mov
or
sub
imul
mov
lret
and
lret
lret
jae
out
add
out
loopne
sub
sbbl
mov
cltd
pop
or
dec
insl
sbb
xor
mov
jl
pop
repz
mov
dec
jle
add
jge
aaa
push
test
pop
or
lahf
xchg
repnz
into
cmc
shrl
fwait
add
je
ja
in
add
popa
xor
lahf
cmpb
and
pop
push
adc
in
flds
je
pop
out
lret
ja,pn
adc
jne
hlt
jno
push
or
mov
xchg
ja
xchg
icebp
jp
add
stc
fwait
xor
xor
mov
sahf
push
push
stc
das
mov
pop
cmp
add
or
mov
mov
lret
mov
repnz
mov
sbb
or
out
add
pop
stc
test
dec
mov
push
ljmp
jnp
sbb
mov
das
ljmp
das
mov
jno
rcrl
dec
testl
xchg
dec
mov
push
punpckhwd
enter
xchg
sti
jo
mov
les
pop
out
repnz
stc
repz
dec
mov
push
sub
pushf
jae
sbb
and
test
fwait
cmp
mov
in
pop
and
sbb
push
in
loopne
orl
add
cltd
cs
sti
es
ja
sub
inc
adc
jg
adc
adc
sub
push
ja
and
imul
mov
adc
sub
add
scas
xor
repnz
test
and
rolb
xor
push
jecxz
into
stos
rclb
in
jl
stos
fcmovnbe
inc
outsb
pop
xor
mov
movb
pmullw
mov
test
or
fidivrl
lret
insb
mov
popa
inc
stc
xchg
add
lret
pushf
lret
mov
add
add
popf
rorb
and
xor
call
lret
fildll
lret
xchg
ja
cmp
sbb
jns
xor
loope
out
dec
lret
lret
and
and
dec
jl
dec
popa
in
xor
mov
lret
push
popa
xor
pop
sub
inc
mov
and
int
jge
leave
xchg
out
lods
mov
ret
pop
jne
cmp
sbb
push
cmpsl
cmp
inc
jnp
aaa
push
rclb
adc
xchg
add
and
mov
div
ja
inc
popa
pushf
imul
mov
test
lcall
pop
pop
push
repz
cmp
pop
outsb
or
call
xor
xchg
jno
stc
lock
cmpb
sbb
adc
ljmp
cmp
dec
jmp
ljmp
aaa
sbb
addb
cmp
shr
in
push
xchg
aam
cmp
sti
idivl
cmc
mov
sbb
js
test
cmp
adc
mov
xor
and
fyl2x
push
mov
lret
mov
ja
cwtl
mov
scas
insl
and
aam
ds
ret
insb
xor
cs
push
mov
xchg
sbb
cs
xchg
aas
loopne
dec
stos
std
add
lock
ja
lahf
dec
ljmp
and
repnz
stos
and
cmp
cmp
mov
add
dec
mov
aad
scas
lods
push
cmp
xchg
lds
sub
lds
xor
add
add
stos
pop
cltd
repz
cmp
test
bound
lods
sub
dec
dec
scas
sahf
ss
test
jo
sub
ja
bound
fisubrs
pop
mov
shl
inc
pop
cwtl
jmp
leave
outsb
pusha
adc
pop
lret
pop
incl
lea
cmc
xor
out
ljmp
mov
sbb
cs
cmpl
xorl
push
mov
sbb
sti
lock
int
pop
lds
in
adc
fdivr
pop
test
fwait
pop
mov
push
pop
popa
out
xchg
js
pushf
aas
sbb
push
shlb
dec
xchg
insb
mov
add
dec
hlt
out
out
leave
jg
xchg
xchg
ja
pop
inc
js
inc
jecxz
sub
add
incb
iret
lods
addl
sbb
pop
dec
dec
and
lods
pop
pop
repnz
and
lods
movsb
mov
push
xchg
mov
push
or
int
add
inc
popf
lret
mov
pop
orb
dec
pop
push
xor
mov
test
dec
sub
idiv
dec
cmc
inc
and
mov
cwtl
mov
aad
push
dec
fcomps
and
aad
fwait
or
fwait
mov
mov
sbb
xchg
and
clc
sub
and
ficompl
cmp
idivb
push
xor
rol
inc
shll
mov
jnp
in
addr16
pop
adc
dec
or
movsb
mov
pop
mov
aam
pushf
and
cmpsl
dec
mov
push
loopne
dec
pop
rorb
stos
pop
push
out
jo
pop
into
adc
js
in
adc
xor
and
imul
adc
movsb
adc
jbe
mov
mov
fldenv
test
test
mov
adc
cltd
movsl
fidivl
and
adc
cmp
add
ret
gs
cmpsl
repnz
ret
xchg
or
push
shr
out
lret
push
scas
add
fimull
add
pop
sub
sbbl
push
xor
cmp
out
in
imul
inc
jmp
popa
mov
jp
push
int
lock
add
adc
aas
pop
push
jb
stc
mov
adc
pop
add
sbb
ret
xor
push
scas
mov
mov
mov
dec
push
mov
xor
pop
aad
xchg
insb
dec
scas
mov
jo
inc
inc
out
jno
mov
addr16
jnp
fnsave
and
incb
cld
loopne
fidivrs
mov
lods
sbb
iret
sbb
pop
push
fldt
loopne
lcall
sbb
loope
xlat
jb
and
sahf
loope
into
std
or
jg
sahf
repz
rcrl
nop
arpl
fs
shrb
in
pop
arpl
dec
jmp
fldl
cmp
jl
test
shll
lret
loope
cli
sbb
cmpsb
lds
cmp
mov
test
pop
sbb
or
push
xor
cmp
ljmp
aas
adc
adcb
push
or
insb
or
aas
jb
dec
stos
adc
je
jne
mov
xchg
jecxz
xchg
pop
ja
and
dec
rclb
negb
or
push
mov
mov
dec
aaa
sbb
xorl
mov
cmp
fadd
mov
sbb
mov
xor
nop
faddl
mov
ret
testb
lret
add
jg
dec
sub
jne
add
pop
popa
pop
push
sbb
pop
sbb
shlb
push
aaa
add
jno
je
aaa
pop
scas
loope
and
pop
nop
pop
into
inc
push
shll
dec
out
out
cmp
lret
cmp
fists
cld
cmp
push
jb
popf
sub
or
int3
out
dec
loope,pt
fs
push
lds
jno
mov
or
pushf
xor
cmp
sbb
loope
push
mov
sbb
test
aad
fisubl
lods
scas
setle
dec
add
stc
loop
sbb
push
lea
stc
sbb
popf
cmp
sub
xchg
inc
out
xor
jno
add
ja
xchg
je
popf
push
insb
sbb
pushf
scas
movsl
movsb
in
adc
dec
mov
adc
sbb
orl
jb
sahf
xlat
add
mov
movsb
mov
adc
lds
mov
subl
sbb
lcall
jmp
pop
xchg
outsb
jno
jae
inc
pop
mov
sub
mov
cmpsl
mov
xor
imul
insl
jb
test
outsb
jl
adc
pusha
inc
mov
xchg
sti
lcall
and
push
and
pop
jg
xor
xchg
movsb
add
xor
sub
in
fimull
pop
loopne
sbb
add
ret
data16
cmpsb
rcrl
int3
dec
and
fcomip
pop
popa
scas
pusha
add
pop
push
cmc
jle
in
lret
inc
xchg
cmp
pop
enter
sar
lahf
dec
jbe
sar
inc
push
sbb
cmpsb
lea
xchg
das
cld
pop
out
jmp
sbb
cmp
xchg
inc
mov
mov
daa
jl
jle
fimull
mov
imul
repnz
jns
shr
out
clc
push
cmp
add
push
add
sub
push
leave
movsb
mov
cmp
push
mov
cmpsb
rorb
je
arpl
mov
xchg
cmpb
inc
mov
aaa
out
aad
ficoml
lock
sti
mulb
sahf
push
fidivrs
enter
nop
cld
xchg
sub
lock
dec
cltd
inc
mov
icebp
decl
cmc
inc
sbb
loopne
sarl
mov
mov
int3
pop
pop
je
sar
mov
jl
cltd
xchg
dec
inc
in
xor
stc
mov
cmpsl
xor
mov
sahf
mov
xchg
jns
ret
and
xchg
jae
xor
rcll
push
sbb
ret
ja
push
rcrl
add
bound
xor
jge
pop
jmp
cld
mov
arpl
xchg
call
sbb
mov
push
adc
pop
push
sbb
imul
repnz
add
es
ret
or
fdivr
scas
adc
push
jg
sbb
aam
fadds
and
fadd
inc
aam
ss
adc
ds
xor
dec
jge
inc
lds
sbb
mov
xor
out
adc
mov
adc
sahf
test
push
inc
add
push
js
out
push
cmpb
cwtl
stc
lret
pop
bound
push
mov
mov
add
fcmovnb
fs
adc
xchg
pop
push
iret
mov
in
inc
clc
cmp
jmp
int
insl
ja
or
cltd
or
cltd
and
call
fildl
sub
inc
mov
daa
mov
mov
mov
xchg
xor
mov
cmp
push
repz
aam
dec
push
les
shlb
adc
subl
xor
dec
sbbl
or
xchg
push
mov
insl
or
psrld
push
jg
sub
and
xor
in
insb
imul
mov
test
mov
pop
loopne
mov
loope
out
xchg
popf
and
test
or
pop
xchg
push
shlb
dec
jg
pop
cs
cmp
shrb
add
cmpl
inc
imul
push
push
mov
test
pop
sub
vcmpps
and
pop
cmpsl
nop
xorb
xlat
lret
sub
jnp
test
cmc
fucomp
or
sub
mov
scas
test
mov
int
loope
adc
mov
repnz
xor
adc
imul
enter
inc
ljmp
das
inc
xor
and
dec
mov
lret
sbb
sbb
test
xlat
dec
mov
rol
mov
pop
out
sub
sub
push
and
daa
push
add
or
cld
mov
dec
sti
out
add
mov
jb
pop
icebp
js
push
popf
fwait
stos
add
outsb
mov
jge
and
mov
lock
mov
push
mov
fistl
ret
fldcw
sti
xchg
stc
adc
or
add
cmc
ud0
jno
or
sarb
sbb
repz
push
ljmp
pop
stos
sbb
push
enter
test
jecxz
nop
and
dec
jne
mov
inc
cli
frstor
gs
je
cmp
call
jno
dec
cmp
gs
inc
incb
push
jecxz
arpl
pop
xlat
or
pop
add
push
aad
cld
imul
test
je
adc
push
in
andl
jp
mov
push
push
stc
cmp
out
stc
out
jg
cwtl
push
leave
xor
push
dec
rcr
out
sbbb
lock
mov
mov
movsl
dec
loope
adc
enter
dec
dec
xor
out
adc
imul
lret
mov
fistpll
push
or
test
or
leave
jno
mov
cmp
pop
aad
pop
xor
sbb
imul
sbb
pusha
mov
pop
aas
sub
pop
hlt
cld
mov
ss
or
imul
add
test
pmulhuw
inc
call
stc
mov
ja
outsb
pop
and
or
aaa
xor
inc
in
repz
mov
idiv
dec
mov
xchg
jbe
dec
cmp
cld
cmp
mov
mov
jp
inc
add
cmp
movsl
jp
scas
hlt
lcall
and
test
icebp
test
inc
dec
testb
xchg
mov
icebp
pop
adc
nop
repnz
rorl
setns
les
push
push
dec
addr16
xor
xor
addr16
es
cmp
je
std
sahf
inc
or
add
mov
js
negl
jle
pushf
push
xchg
in
sbb
fmul
popf
xchg
xor
lret
mov
adc
js
test
jb
add
aas
cwtl
xchg
xor
jmp
mov
test
aam
jo
pop
loop
int
in
xchg
test
mov
and
mov
push
jge
popa
push
pushl
in
jo
ret
aam
jp
mov
in
fsts
loopne
call
lahf
pushf
adc
xor
xchg
pop
int3
rcll
or
in
sub
xchg
sub
xchg
pop
mov
mov
add
xor
aad
sub
xchg
lods
adc
sbb
fidivrl
loopne
popl
pop
popa
inc
je
add
sbb
xchg
push
sbb
out
int
or
out
lcall
pop
mov
mov
adc
add
sbb
and
or
popf
lret
jno
aas
shlb
push
or
cmp
imull
mov
jle
pop
outsl
jno
sbb
int
jns
jg
fnstenv
fcmovbe
sar
aad
mov
mov
shrb
cld
ja
or
jbe
stos
mov
arpl
cs
aam
ds
rorl
lea
mov
pop
xchg
mov
dec
fimull
out
sub
js
xor
push
stc
repz
or
mov
add
dec
shl
divb
ret
jp
imul
lods
mov
sub
fimull
pop
inc
sbb
in
adc
push
fsubrl
mov
sahf
lods
mov
dec
xchg
mov
adc
pop
mov
jbe
cmp
in
cwtl
subb
mov
seta
adc
dec
fwait
mov
fstpl
ss
or
jno
cmp
push
mov
notb
dec
vpmacsdqh
mov
or
jp
lret
sbb
dec
repz
add
fwait
dec
and
pop
ss
out
sub
xchg
scas
cmc
xchg
adc
sbbl
jmp
cld
mov
mov
push
jp
xchg
mov
sahf
or
dec
inc
in
push
add
xlat
scas
or
push
call
mov
xchg
inc
or
and
add
loopne
push
push
imul
lahf
push
or
and
pop
cmovge
pop
mov
jecxz
scas
xchg
inc
cmpsb
insl
sti
jb
xor
data16
mov
fs
adc
jb
imul
fwait
push
iret
push
nop
into
fnstcw
pop
or
and
mov
jo
ret
jmp
push
dec
mov
mov
dec
int3
lcall
mov
xor
loope
add
das
jmp
add
adc
je
fwait
mov
xorb
jg
adc
pop
in
and
and
out
hlt
and
test
std
sbb
mov
mov
stos
jmp
mov
sbb
popa
fadd
fiaddl
aas
mov
pushf
push
or
mov
lret
loope
cwtl
stos
mov
pushf
pop
jmp
and
pop
adc
popf
out
adc
clc
int3
scas
pop
repz
add
sbb
cmp
jmp
mov
fcmovnb
jnp
pop
jb
lret
mov
fistl
mov
xlat
jg
gs
adc
jg
les
cmp
xchg
mov
popa
test
fwait
push
shll
loop
sbbb
js
adc
lock
imul
out
sub
inc
stc
xlat
xor
push
es
jns
pop
mov
movb
cwtl
adc
out
adc
dec
ja
inc
adc
popf
xor
push
ja
rcrb
xor
in
testb
inc
cmpsb
cmc
sbb
loope
xchg
ret
xchg
popa
sbb
mov
movsb
aas
divl
dec
addr16
in
ljmp
mov
divl
sub
sti
and
mov
push
adc
jo
mov
xor
out
repnz
in
dec
into
arpl
mov
inc
insl
dec
pop
aam
fnsave
push
sub
pop
or
les
ljmp
jl
dec
or
push
out
mov
jb
mov
sbb
adc
sub
mov
movl
test
mov
mov
addr16
or
mov
lret
pop
popa
inc
mov
jnp
lret
dec
fadds
jnp
mull
push
dec
dec
fsubs
and
ret
pop
cs
cwtl
ror
cs
and
sahf
ret
bound
mov
sbb
js
xchg
dec
pushf
aam
pop
dec
test
addr16
cmp
sub
idivb
jge
nop
clc
jmp
call
shll
push
in
jecxz
pop
in
call
adc
pop
das
sbb
emms
cmp
int3
sub
add
leave
test
dec
jns
aas
pop
push
jp
lret
cmp
aam
sbbl
je
aam
pop
add
repz
sbb
xchg
cmc
pop
mov
mov
and
aas
push
scas
adc
add
push
pop
mov
pop
es
das
or
fildl
add
imul
lea
and
jmp
pop
push
scas
xchg
lock
mulb
pusha
and
rsqrtps
popa
mov
dec
in
stos
hlt
popa
cmp
pop
jge
dec
sub
test
push
mov
adc
cmp
mul
jge
and
cli
loopne
add
jle
xchg
lds
arpl
ss
into
ret
dec
add
dec
adc
mov
dec
adc
out
insb
dec
adc
in
out
or
out
loope
clc
mov
xchg
pop
ds
shl
cli
mov
stc
in
jge
push
jg
mov
imul
mov
fs
pop
popaw
xchg
sub
sub
inc
push
jns
movsl
scas
jbe
jae
lea
fstpl
xchg
loopne
push
cld
stos
cmp
das
jp
je
dec
pop
test
fwait
dec
mov
iret
add
test
push
cmp
adc
int
ja
fnsave
and
adc
cmpsl
inc
cmc
cmp
mov
push
int3
jnp
adc
cmp
sbb
xchg
into
push
xchg
stos
cld
fwait
movsb
jnp
flds
cmp
addr16
and
in
xchg
fdivr
mov
inc
cwtl
sarl
outsb
jne
in
hlt
fisubrl
xor
or
dec
inc
cli
cmpsb
test
orl
or
sub
pop
inc
in
mov
fldt
mov
outsl
mov
pop
in
cmpsl
cmp
negl
js
add
in
loopne
insl
and
aas
and
push
insl
aam
inc
and
cmpsl
push
or
sti
lret
or
cmp
xchg
jmp
push
mov
incl
add
mov
and
jg
push
add
and
pop
repnz
mov
aaa
sub
dec
adc
imul
inc
mov
mov
lahf
test
jae
daa
add
fwait
dec
cmp
int
andl
ljmp
ret
fucomip
cmp
cmpsl
jb
adc
ja
cmp
cs
neg
push
push
cmp
sbb
mov
cwtl
aaa
das
cmp
std
test
jae
jp
scas
test
mov
imul
jle
push
sub
sub
push
xor
pushf
mov
mov
rolb
add
inc
inc
adc
decb
inc
or
mov
xchg
orl
negl
idivb
out
fistps
dec
fcoml
mov
mov
dec
pop
mov
or
inc
lret
xor
scas
add
mov
sub
jno
jp
jl
fsubp
inc
outsl
adc
xchg
jb
mov
fs
push
and
enter
out
or
mov
subl
pop
xor
je
jae
push
xchg
in
or
sbb
pushf
cli
loopne
sub
pop
test
cld
insb
arpl
dec
sbb
sti
or
in
ljmp
push
inc
nop
daa
into
mov
int
add
xor
jne
or
xchg
add
jmp
mov
pop
push
cltd
dec
mov
mov
xchg
dec
imul
popa
popa
sbb
adc
stos
in
pop
cmp
cmp
jmp
out
jne
dec
daa
mov
int3
xchg
or
int3
rolb
fldcw
stos
push
std
adc
or
inc
jbe
clc
clc
test
jae
add
xor
sbb
push
or
xchg
xor
jge
xor
xchg
sub
or
or
ss
mov
clc
push
testb
add
inc
adc
sub
sub
pop
or
dec
loopne
push
mov
daa
jbe
adc
adcl
lret
addr16
imul
sub
or
stc
fstl
or
ficoml
aam
das
inc
ljmp
jo
outsl
aaa
adc
shrb
out
push
lcall
push
dec
cmp
adc
push
mul
inc
push
jae
mov
iret
xchg
xor
xchg
inc
cli
fnstenv
push
mov
scas
or
and
mov
mov
jbe
popa
call
push
sub
push
xchg
ror
adc
dec
addr16
add
out
or
cmp
pop
dec
in
fidivl
mov
lods
inc
jns
push
pushw
mov
dec
cltd
mov
movsl
test
std
fsubs
xchg
gs
or
pop
jp
in
xchg
nop
mov
and
in
push
sahf
jmp
adc
sbb
mov
test
fcom
add
test
fchs
enter
xchg
cmp
lret
jns
aad
jae
pop
fstps
out
out
adc
lret
sbb
dec
inc
mov
xor
sar
dec
scas
mov
int
lcall
inc
pushf
hlt
jmp
sub
cmpsb
loope
sbb
sub
pop
rcll
inc
and
sub
push
sub
rcrb
push
xchg
inc
pop
xchg
stos
push
mov
leave
cmp
cmpsl
xorb
adc
sarl
xor
pop
lahf
dec
ret
mov
sub
insl
mov
xchg
mov
leave
mov
gs
mov
idivl
movsb
and
cmp
popf
loopne
adc
xchg
add
lahf
jns
cmp
test
dec
incb
mov
jecxz
push
adcl
and
or
cltd
push
nop
dec
lock
loopne
cs
cmpsl
xchg
lea
add
inc
sbb
pop
dec
lcall
pop
inc
mov
and
int3
imul
jecxz
fwait
mov
sub
cmpb
leave
test
xor
jae
cmp
inc
roll
stos
lcall
push
push
aas
xchg
ret
rolb
or
mov
loop
stos
imul
js
into
and
mov
ficoml
cmc
jecxz
push
cmc
outsb
leave
stos
popa
in
addr16
std
ret
add
cmp
jae
xor
nop
arpl
mov
test
call
mov
fmul
push
xlat
mov
xchg
cmpsb
fxch
mov
mov
adc
cli
mov
push
jnp
hlt
and
outsl
lcall
lock
pop
data16
xor
push
sbb
dec
jb
mov
push
scas
mulb
mov
add
cs
mov
loop
mov
mov
scas
ror
push
pop
mov
cmp
sbb
loop
add
xor
xchg
xchg
sub
das
mov
dec
test
jo
sub
out
dec
nop
pushf
push
adc
les
or
xchg
fimuls
rcrb
cmc
xor
gs
outsl
rsm
ret
jns
call
dec
jl
repz
rcrb
jbe
in
or
cmp
sbb
xlat
popa
repz
testl
mov
lods
jg
ret
mov
sbb
adc
shl
jno
dec
adc
test
jle
pop
in
dec
retw
test
aam
in
xchg
cld
push
nop
mov
inc
xor
jmp
jbe
add
out
jae
popa
pop
add
mov
cmpsb
fildl
mov
testb
lret
les
push
dec
loope
jb
out
jl
push
push
fistl
pop
repz
loop
stos
pop
test
dec
ret
adc
and
adc
push
inc
mov
xchg
push
stos
cli
les
jo
in
mov
dec
dec
das
push
rcrl
adcl
das
push
xor
add
or
ret
pop
roll
flds
mov
dec
orl
imul
cs
inc
ss
fwait
mov
popa
ret
cmp
scas
jnp
imul
les
sbb
dec
aam
inc
loop
ficomps
xor
mov
inc
xchg
sub
rcrb
aad
popa
lock
pop
in
dec
and
out
les
mov
add
pop
jae
aaa
mov
push
push
icebp
lods
sub
mov
xorl
push
cmp
dec
test
pusha
fildl
jl
lods
aas
fsubrs
and
dec
adc
inc
push
fstl
xor
ret
jg
fdivrs
lcall
mov
cltd
ljmp
loope
or
gs
and
jnp
sub
in
enter
mov
arpl
pop
adc
adc
adc
fdivrl
rcl
imul
sahf
push
sbbb
les
in
ds
movsb
jae
sbb
cmp
cmp
js
lock
mov
xchg
push
imul
pop
insb
lea
scas
test
lods
inc
sub
mov
test
fldl
in
out
xorl
cld
int
out
popf
fcoml
movsb
xor
push
out
or
jno
mov
xchg
sub
fisubrl
les
push
push
fwait
stc
mov
cmpsb
dec
pop
and
sbb
xor
jp
mov
or
das
mov
in
shlb
pop
xchg
lahf
push
jbe
aam
repnz
mov
mov
pop
or
jle
jo
cmp
nop
lahf
repz
fdivl
cmp
adc
or
sub
mov
nop
fs
lea
jne
adc
ljmp
div
mov
insb
cwtl
jo
cmp
or
lret
cltd
lods
pop
stc
mov
and
aad
cmp
jp
insl
push
jnp
sub
lea
std
ret
mov
ss
idiv
adc
stos
push
sub
dec
push
std
std
loope
jge
mov
movsb
lods
inc
jmp
pop
test
sub
jg
fisttps
mov
push
subl
push
movsb
or
xor
jg
pop
int
xchg
cmp
jl
gs
les
sub
outsb
inc
pop
in
test
ljmp
popa
push
test
sub
cs
xchg
icebp
jns
repnz
lahf
lahf
mov
xlat
test
jge
js
or
aaa
pop
ret
pop
push
mov
push
out
inc
mov
or
movsl
int
jg
insl
out
ss
faddl
cld
push
fwait
mov
add
inc
hlt
ret
je
push
fucomi
push
mov
movsl
adc
lea
popa
xor
cltd
movsl
xor
mov
xor
cmpsb
aaa
test
adc
adc
incb
or
aam
or
int
aas
lock
mov
push
lock
jle
lods
lds
notl
ljmp
testb
inc
sarl
incb
test
sub
lcall
push
cmp
jl
lret
dec
cltd
jne
cmp
add
ret
inc
jne
jmp
mov
sbb
hlt
les
das
ja
imul
dec
in
sub
xchg
pop
jo
cmc
mov
ds
sti
xor
addr16
notl
dec
jbe
int3
jl
popf
imulb
in
and
and
lahf
mov
movsb
repnz
arpl
cli
mov
sub
mov
maskmovq
testl
into
aam
fnstenv
add
ja
mov
adc
jl
mov
pop
or
out
mov
add
push
out
mov
adc
mov
sub
mov
adc
sub
xchg
mov
jnp
inc
loop
push
push
movsb
pop
cmp
lods
and
mov
add
dec
mov
test
inc
push
lcall
and
add
inc
mov
les
xorb
outsl
int3
enter
and
mov
jae
gs
lea
cwtl
add
in
in
cmp
and
lcall
cli
xchg
sbb
filds
test
push
loope
sbb
movsw
lea
xor
xchg
mov
lods
sti
mov
pop
pop
push
fwait
outsl
iret
test
in
push
mov
push
ret
nop
adc
aad
xchg
pop
mov
and
inc
loopne
cmp
mov
repnz
ds
aas
mov
jb
mov
push
xchg
mov
aas
and
push
loope
int
xchg
arpl
add
adc
inc
adcb
push
push
xchg
pop
xchg
enter
mov
cmpsl
xchg
clc
xchg
dec
xchg
pop
inc
mov
imul
push
inc
dec
mov
jge
in
cwtl
insl
jb
bound
test
push
out
fmull
push
dec
add
rcll
dec
je
int3
in
jo
in
xchg
into
js
lods
mov
pusha
mov
pushl
out
daa
cmp
out
pushf
fwait
rolb
inc
sub
mov
dec
stos
cwtl
pop
js
lea
sub
and
sahf
mov
cmpps
test
inc
add
jmp
fs
sbb
dec
push
adc
fsubrs
cs
inc
mov
lret
arpl
ds
loopne
inc
fwait
and
mov
jg
movsl
mov
push
je
pop
sbb
movsb
xor
inc
pop
dec
lret
ja
daa
inc
call
adc
add
or
lea
pop
out
lcall
mov
dec
xor
mov
sub
push
testl
mov
cmc
cwtl
xorb
gs
shl
divb
gs
nop
push
or
rcr
jb
mov
movsb
mov
xorb
mov
or
and
sbbb
jmp
jge
sahf
jmp
mov
xchg
aam
cmp
mov
iret
pop
and
fbld
inc
aam
sub
push
pop
insb
insl
test
inc
addr16
sarl
lods
mov
pop
sbb
push
push
push
and
cli
lock
aas
jle
push
xchg
and
add
lret
xorb
roll
xor
cld
cli
mov
and
jnp
popf
xchg
addr16
inc
loopne
inc
push
cld
loop
push
out
push
xchg
fidivs
in
mov
mov
mov
push
lahf
in
bound
push
jecxz
dec
cmp
cmp
xor
loop
in
inc
in
xchg
jo
and
dec
pop
out
stos
push
int3
mov
push
imul
cmpsl
fsts
adc
cmpsb
fidivrs
sub
ja
frstor
pop
iret
in
cmp
xchg
loop
mov
dec
je
iret
sbb
cwtl
pop
push
xabort
aas
lods
mov
dec
call
outsb
and
xchg
jmp
xchg
test
adc
shlb
push
adc
cld
roll
inc
aad
outsl
sub
sbb
imul
push
aas
stos
cmp
xor
daa
rcll
mov
nop
xor
aaa
fisttpl
sbb
xchg
xchg
or
cmp
inc
xlat
adc
test
jb
sbb
and
pop
dec
int3
mov
jl
and
mov
sub
mov
fldenv
or
and
sbb
dec
in
adc
lea
xchg
pop
lods
out
popf
inc
nop
dec
push
xor
push
aas
mov
xor
mov
pop
inc
pushf
pop
pop
sub
xchg
pop
mov
push
sub
sbb
sub
jg
jmp
inc
out
adc
add
pop
or
mov
sbb
pop
fisttpll
cmp
sub
enter
mov
push
inc
repnz
mov
or
outsl
jmp
fsubrl
inc
outsb
movsl
dec
popf
sbb
aaa
in
out
leave
or
inc
mov
lods
ljmp
jge
cmp
cmp
stc
mov
inc
arpl
or
jns
sarb
push
adc
adc
mov
xchg
adc
out
leave
mov
xchg
repz
dec
xchg
or
test
hlt
imul
mov
retw
lock
mov
and
mov
xchg
mov
jg
inc
mov
cmp
xor
ss
imul
jle
xor
dec
inc
mov
aam
lret
shll
les
out
mov
mov
or
data16
scas
call
sub
sub
xor
or
mov
mov
xchg
repnz
mov
dec
inc
dec
add
ljmp
mov
push
dec
xchg
sub
and
jl
mov
or
ss
jecxz
stos
repz
nop
mov
lret
push
sub
mov
fdivrp
popa
or
data16
repnz
and
ret
lahf
xor
movsl
imul
add
cltd
pop
lret
nop
jp
lock
lret
lea
addr16
stos
sbb
inc
mov
ret
adc
xchg
mov
scas
mov
clc
mov
negb
xchg
adc
dec
or
pop
fstpl
test
xor
or
enter
test
insl
jmp
in
push
and
mov
jmp
or
lcall
clc
gs
sahf
ret
scas
icebp
ss
cmp
leave
mov
xchg
push
insb
stos
pop
inc
aaa
jb
mov
gs
lret
xchg
push
gs
loopne
popa
xchg
mov
mov
add
or
out
out
ja
popf
lods
ret
mov
fwait
jmp
jae
mov
mov
and
jo
bound
sbb
mov
fisubrs
scas
push
jge
negl
lods
xchg
clc
cmovg
insl
scas
or
fbstp
add
inc
jns
and
xchg
imul
ja
sbb
ret
adc
sub
and
adc
sbb
daa
clc
mov
iret
ret
es
inc
cmp
and
sbb
add
inc
jge
or
repz
mov
aam
push
xchg
pop
out
sbb
dec
sub
inc
inc
hlt
xor
out
shll
add
and
sahf
adc
add
mov
stos
jmp
jb
gs
loope
in
lods
sbb
xchg
pop
imul
and
imul
enter
cmc
push
arpl
mov
ss
adc
fcmovb
sub
jmp
shrb
push
jge
xor
loop
mov
pop
and
or
xor
push
dec
movsb
cmp
scas
dec
addr16
sbb
pushf
xchg
cmp
pop
sbbl
in
movsb
xor
mov
push
xchg
bound
pop
sub
cmp
std
xor
sbb
fucomip
test
push
insb
mov
int3
pusha
in
jmp
push
cmpsb
xor
pop
fdiv
xchg
test
inc
imulb
movsb
mov
or
adc
bound
gs
pop
fnsave
test
test
jno
add
cmp
inc
mov
sub
cmp
adc
outsb
aam
mov
ror
out
add
sti
cmp
test
mov
and
inc
insb
lods
push
jp
iret
push
loop
hlt
popl
fwait
enter
pop
and
pop
pop
add
or
mov
mov
addr16
das
push
mov
mov
bound
mov
sbb
shrl
cmp
int3
scas
mov
outsl
mov
shl
adc
int3
in
ljmp
mov
std
faddp
push
add
lret
iret
gs
in
loop
xchg
lahf
jg
push
sbb
mov
mov
add
add
sti
mov
ds
ret
sub
jl
add
and
sahf
out
cmc
loop
sbb
add
pop
mov
pusha
push
js
xchg
xchg
jg
out
or
jmp
sub
ljmp
fwait
in
sub
shrb
add
test
inc
sub
fbld
gs
test
insl
and
push
xchg
stos
iret
push
xchg
pop
inc
sbb
lods
lock
add
stos
add
dec
mov
cmp
push
or
and
in
add
xor
pop
sub
push
mov
xchg
stc
mov
mov
push
lcall
or
movsl
adc
sub
popf
inc
push
inc
pushf
shll
and
lahf
jo
mov
addr16
sbb
loope
sahf
pop
stos
xchg
lods
mov
mov
or
leave
and
test
ja
xchg
lods
xor
cltd
rcll
stos
jmp
je
jge
fstpl
sbb
sbbl
add
dec
add
add
add
movsl
push
lret
adc
mov
orl
test
mov
xlat
hlt
cmp
pushf
jge
add
xor
cmp
ja
out
dec
popf
fmul
xchg
outsb
sbb
xlat
cltd
or
mov
out
es
xor
adc
pop
jnp
pop
loopne
and
clc
shl
rep
stos
imul
cmpsb
push
cmpsb
mov
and
cli
dec
repnz
cmp
mov
sbb
xor
mov
push
push
xchg
push
iret
fdivl
call
and
inc
ret
jle
push
fidivl
mov
xor
shlb
mov
dec
fwait
test
shll
push
rcrl
hlt
mov
push
fs
cld
call
inc
test
add
push
push
inc
sub
xor
pop
test
jp
dec
je
pop
jecxz,pt
inc
add
leave
push
imul
int3
mov
cwtl
pop
jne
sbb
pusha
sbb
push
sbb
or
push
mov
jb
adc
push
push
dec
fiadds
xor
xchg
loopne
scas
mov
lods
jae
out
fisttps
nop
out
jg
push
or
push
mov
insb
and
insb
scas
fs
cmp
cmp
mov
into
movsl
fidivl
cld
sti
stos
and
ficoml
daa
fsubp
cmp
jns
shll
fists
mulb
popf
ss
xchg
je
or
inc
add
jg
dec
adc
outsl
fs
daa
mov
jg
push
mov
and
mov
cli
mov
cmp
mov
xchg
loopne
push
pop
add
mov
xlat
and
jae
cwtl
mov
stos
testl
pushf
fimull
mov
cs
sub
push
add
cwtl
lods
jno
enter
inc
paddd
push
dec
aaa
or
aaa
jnp
imul
mov
ja
or
pop
jg
sahf
lcall
xor
adc
inc
add
aaa
jmp
pop
push
mov
adc
imul
xor
loopne
pop
test
in
cmp
mov
cmp
add
add
loopne
pop
mov
add
shrb
xor
lea
mov
adc
lods
in
xor
adc
lods
xchg
or
push
daa
or
jnp
in
cmc
stc
adc
mov
adc
int
or
pop
stos
xor
adc
bound
pop
jg
aaa
sbb
pop
sub
xchg
mov
dec
shll
mov
repnz
cmpsb
dec
rcrl
dec
int
push
adc
cmp
aaa
inc
movsl
jno
cmp
cmp
jle
test
ds
rolb
push
sub
andb
inc
stos
cmp
adc
outsb
pop
ficomps
lods
rcr
and
jnp
je
push
sub
push
mov
mov
add
adc
pop
pop
jmp
das
and
lret
nop
lcall
mov
int
mov
jns
xor
jmp
mov
aaa
insb
mov
and
fdivrs
jnp
pop
lret
push
int3
xchg
dec
int3
push
dec
jnp
mov
ret
fucomip
dec
mov
repnz
sbb
pusha
xor
loopne
test
mov
push
cmp
add
aaa
dec
xor
fwait
jnp
movsl
ret
jae
xchg
js
repz
jl
shll
hlt
cli
add
scas
push
iret
loopne
nop
fwait
das
lahf
add
xchg
xchg
outsb
daa
std
insl
xchg
aaa
mov
xor
lock
push
mov
imul
mov
repz
push
out
sbb
inc
mov
out
dec
sbb
dec
pop
ja
aaa
and
cmpsl
mov
jb
and
hlt
sub
out
gs
dec
and
lods
cmc
jno
inc
lahf
fs
popf
cmpsb
movsl
push
sahf
push
sub
or
lret
add
jl
call
push
adc
sub
call
inc
push
and
pop
out
stc
scas
xchg
push
dec
dec
add
test
loop
cs
cmp
jl
loop
pop
out
mov
inc
ja
ja
jne
jns
lret
insl
pop
loop
stos
push
push
cmc
sbb
mov
mov
jl
fdivl
lcall
lret
dec
fistl
jle
cmp
js
xor
push
dec
inc
sub
dec
test
add
dec
ds
outsl
cwtl
jnp
sub
fnstenv
cmp
fildll
jo
mov
jg
xlat
mov
jp
popa
push
cmpsb
sahf
xor
out
in
fs
dec
dec
fdivl
cmp
jg
xor
ret
pop
push
pop
xchg
inc
cmc
aam
ror
cltd
cmp
ja
repnz
jne
lods
xchg
fcmovnb
lea
and
mov
push
adc
push
and
pop
les
and
inc
adc
stos
xor
les
pop
push
mov
aad
pop
jmp
sbb
pop
inc
push
add
imul
xor
or
popa
pop
std
mov
roll
leave
mov
pop
mov
clc
dec
cmc
or
test
dec
add
aad
les
xor
arpl
sub
xchg
subl
add
iret
cmpsl
add
pushf
xor
mov
fs
out
js
xorl
and
aam
cmp
mov
cld
cmp
std
lea
add
add
and
mov
pusha
popf
inc
test
ja
add
jns
and
sbb
add
lcall
xor
adc
adc
xchg
mov
push
or
or
outsb
or
xor
and
insl
lods
mov
dec
es
adc
pop
lds
popf
sbb
mov
jb
sbb
push
pop
in
gs
dec
nop
lods
mov
dec
sbb
lods
std
repnz
jnp
lock
sbb
lahf
gs
dec
push
enter
fldl
mov
mov
mov
nop
int3
sub
push
movsb
mov
rcrl
call
ss
dec
ss
cmp
popa
roll
xchg
push
sub
inc
clc
jo
nop
fnstcw
jl,pt
jge
mov
push
xor
aaa
pop
fisttpll
repnz
dec
push
aaa
inc
jl
add
imul
test
ss
stos
pop
cmp
sub
gs
sbb
adc
mov
or
ret
popf
push
and
pop
hlt
sub
shrl
mov
add
adc
enter
insb
jg
fmul
lock
mov
sub
sar
gs
or
xor
sbb
or
daa
mov
and
mov
push
scas
and
and
loope
mov
fldt
mov
aad
pop
repnz
mov
xor
out
sub
stos
cs
inc
mov
iret
mov
sub
jo
insb
pop
aas
rcll
sbb
mov
add
mov
sti
fisttps
hlt
in
cmp
mov
lret
cmp
mov
jo
testl
cmpsl
les
mov
movsb
and
or
cmp
sbb
fisubs
std
inc
out
or
xchg
dec
mov
dec
test
sti
imulb
cmp
push
pop
xor
inc
sub
mov
sub
and
pop
pop
out
sub
xchg
fstpl
imul
and
enter
pop
cmpl
sar
and
inc
stc
inc
and
fistps
mov
out
test
sbb
adc
jns
leave
inc
repz
addb
xchg
daa
xchg
cmpsl
popa
dec
rclb
lods
jnp
sarl
or
les
sbb
adc
cmp
hlt
out
popf
out
mov
and
out
aad
pop
sahf
filds
fneni(8087
loop
add
mov
mov
cwtl
and
jle
add
lret
mov
in
outsb
cld
jnp
xor
xchg
icebp
xor
push
inc
lds
dec
jl
call
fdivl
shll
jnp
cmp
and
movsl
les
cwtl
or
mov
enter
push
and
loope
cmp
jge
push
inc
lcall
lds
rclb
jmp
and
xchg
add
xchg
lods
mov
lret
mov
jno
ss
xchg
inc
pop
in
jle
dec
ds
into
ss
into
xlat
sti
sbb
in
ds
fldenv
lret
add
shl
push
test
mov
mov
add
push
cwtl
cmpsb
jmp
addb
mov
push
fcoml
dec
mov
movsb
repnz
sub
xchg
daa
pop
mov
mov
mov
xchg
mov
add
movsb
jns
mov
loope
std
sub
adcb
lds
movsb
mov
xchg
int3
push
lock
rorb
xor
sbb
les
mov
test
mov
xor
inc
adc
movsl
pop
cmp
cltd
test
pop
inc
fsubs
repnz
nop
jg
cwtl
xor
jge
add
int
lret
and
mov
sbb
push
push
iret
lock
insl
add
mov
mov
leave
push
pop
rcrl
jnp
push
or
xchg
or
mov
push
pusha
xchg
aaa
mov
out
jns,pn
dec
mov
sub
mov
call
jle
popf
xor
sarl
and
or
rclb
jb
jp
loope
add
jo
adc
out
je
cmpsl
test
popf
xor
ret
pop
xor
jmp
js
in
push
and
insb
stos
repz
popa
stos
push
or
aam
lret
push
arpl
pop
sub
or
clc
ss
xor
outsb
iret
mov
fdivrs
leave
pop
adc
insl
inc
jmp
sub
loopne
sub
xchg
inc
ret
push
pop
sub
int3
inc
das
xchg
addr16
push
or
sub
vcmpsd
adc
mov
push
adc
lds
call
xchg
sub
negl
sbb
inc
xchg
dec
jge
mov
popf
fs
test
push
cmp
cmp
jnp
push
inc
icebp
cmpsb
in
xchg
popa
rcrb
inc
mov
sbbb
lea
pushl
lods
sub
cld
push
xlat
fstps
and
hlt
or
xchg
dec
mov
fiaddl
mov
xchg
stos
jle
loop
or
retw
outsb
add
jns
cmp
xor
pop
mov
jns
mov
sub
xchg
sbb
insl
or
and
or
shlb
ljmp
fcmove
fwait
icebp
outsl
lahf
call
imul
jnp
mulb
xchg
dec
les
sti
add
sti
fdiv
imulb
add
stc
mov
xor
inc
cli
mov
mov
lret
mov
push
xor
adc
dec
insl
jmp
xchg
xchg
jno
sub
outsl
sub
pop
inc
cmp
mov
adc
ss
add
loop
js
xchg
xor
pop
push
loop
mov
fbld
xlat
repnz
push
xor
cld
add
or
icebp
xchg
sub
shl
daa
popa
cmpsl
loope
pop
mov
cmp
int
mov
dec
vmread
dec
or
xchg
movsb
shr
aaa
dec
icebp
call
leave
jne
fsubrs
push
xchg
mov
arpl
dec
mov
pop
xor
push
in
int
or
int3
loopne
jmp
fstp
sbb
mov
mov
mov
pop
jbe
cmp
dec
in
insb
and
outsb
add
mov
fldt
or
mov
dec
mov
push
rorb
xchg
jp
xchg
bound
icebp
or
mov
aam
and
add
lret
sub
xchg
push
stos
dec
sbb
add
add
jmp
jle
js
aam
xchg
cmp
add
shrl
cld
xchg
test
mov
pop
in
sbb
push
jecxz
add
mov
loope
ds
xor
xor
out
roll
jbe
jo
mov
sahf
xchg
push
pcmpeqb
inc
mov
xlat
and
xchg
stos
mov
inc
fiadds
notl
out
imul
cmp
or
lods
fdivp
test
mov
loopne
mov
push
mov
pusha
push
add
mov
aas
jb
sub
dec
das
jns
cmc
sub
sbb
pop
in
or
imul
scas
es
movb
xchg
cld
cs
jne
repz
outsb
add
jmp
call
mov
cs
xor
icebp
outsb
pushf
test
add
push
mov
lret
pop
loopne
out
pop
push
pop
rolb
and
gs
mov
cli
idiv
lret
popf
mov
adc
sub
fildll
push
out
and
and
jp
fdivl
gs
push
addr16
xor
mov
aam
push
sub
jno
daa
xchg
xor
cld
adc
xor
out
dec
cmc
or
vaddsubps
mov
mov
lods
mov
shlb
mulb
mov
rcl
jg
or
inc
dec
or
out
idivb
mov
xchg
and
sbb
cmpsb
mov
loop
dec
out
lock
or
fcomp
ds
mov
jne
inc
out
and
xchg
jno
iret
push
mov
push
push
ret
xchg
add
popa
enter
push
aad
pop
cmp
popf
lods
pop
scas
fcomps
or
or
mov
ret
dec
inc
push
loopne
popa
sti
push
sbb
movsl
mov
or
xchg
and
push
cmpsb
dec
push
xchg
pop
mov
pop
loopne
enter
mov
jle
inc
dec
push
jge
jb
cltd
sbb
xchg
xchg
loopne
ljmp
repz
aam
cs
mov
stos
cltd
shrb
add
test
mov
inc
or
push
mov
pop
and
push
lods
movsl
inc
jno
jo
xchg
mov
push
mov
push
movsb
sbbb
xlat
jecxz
loope
orl
xchg
insb
ds
or
es
or
mov
inc
data16
mov
aam
mov
movsl
pushf
outsl
cs
fdivrl
gs
push
mov
sti
cmpl
out
loopne
xchg
inc
jle
dec
scas
cmp
jge
adc
push
sbb
inc
test
aas
jle
in
push
xor
jmp
push
xchg
push
or
addr16
jae,pn
dec
pop
mov
pop
cmp
cltd
or
aas
inc
insb
pop
data16
fistpl
jmp
pop
lods
dec
js
xor
sarb
cmpsl
xor
aas
and
xor
push
jnp
cmp
sub
test
lret
fisttps
rclb
hlt
loope
dec
cmp
adc
call
xchg
mov
leave
jo
xor
insl
lret
das
outsl
inc
movsl
adc
rcrb
inc
aad
sbb
sarl
in
je
jle
cmpl
out
mov
lret
int3
add
fwait
push
cmp
mov
mov
pushf
bound
jbe
pop
insb
push
lods
pop
dec
lock
sub
push
or
push
xor
or
icebp
stos
mov
loop
xchg
or
push
dec
or
fs
repnz
xor
sub
xor
int
lock
imul
int
xor
enter
iret
add
fcomps
cld
call
cmpsb
mov
pop
loope
orl
mov
ja
je
mov
adc
fsts
jae
into
and
push
and
adc
add
jecxz
and
jl
push
pusha
push
or
inc
dec
mov
and
jno
daa
mov
lret
pop
sbb
dec
fadds
fistps
adc
nop
dec
sbb
pop
js
adc
mov
jbe
mov
xchg
out
test
pop
jecxz
das
cmp
inc
jnp
cmp
fucomp
mov
pop
pop
loopne
dec
dec
sub
call
mov
sbb
arpl
lods
sti
in
pop
inc
loop
mov
fucomi
dec
repnz
addr16
int3
jae
jmp
jb
or
sti
leave
add
ds
bound
cmp
push
xchg
int3
cmpb
in
xor
in
pushf
in
mov
and
cmp
mov
mov
mov
leave
or
sub
sbb
lret
pop
add
cld
or
add
mov
adc
inc
dec
xchg
nop
out
cmpsl
test
sbb
sub
je
jbe
insb
and
cmp
call
mov
mov
bound
mov
mov
or
jp
fs
inc
jo
in
clc
out
add
dec
imul
sbb
out
pop
add
repz
add
inc
xor
push
xchg
cmp
pop
xchg
fstpl
mov
cmp
cmp
jge
mov
push
insb
sti
pop
cwtl
test
jp
fs
pop
dec
loop
movsb
jl
sti
test
rcrb
cmpsl
adc
stos
adcb
aam
out
rol
sahf
pop
dec
scas
push
test
test
and
pop
fcoms
mov
xchg
mov
int
dec
mov
add
add
lea
fldt
ds
popf
push
adc
fidivrs
xchg
js
cmp
in
je
andl
pop
xor
mov
popa
mov
push
test
lret
divl
pusha
stos
jb
sti
xor
movsl
or
call
sub
mov
stc
xor
imul
inc
addr16
out
pop
xchg
or
sbb
sbb
sub
push
sub
in
adc
dec
or
cs
or
pop
popf
inc
lret
lret
lods
pop
mov
mov
adc
cmp
sarl
idiv
clc
enter
adc
or
mov
inc
mov
ljmp
sbb
mov
push
adcl
or
add
add
lea
into
out
popf
adc
add
and
push
outsb
and
addl
ds
test
fsts
les
cmpl
sbb
or
std
pop
cmpsl
out
dec
adc
pop
andb
jne
lea
sub
mov
out
vphsubwd
inc
enter
add
cmp
xchg
in
enter
sbb
xchg
add
jnp
data16
cmp
sbb
xchg
jo
mov
mov
loopne
into
in
imul
test
aad
mov
sub
pcmpgtb
mov
add
stos
insb
test
loopne
mov
and
lea
dec
push
aas
cmp
cs
or
xchg
push
push
xlat
aas
sbb
jae
and
sbb
mov
xor
or
arpl
xchg
dec
loope
loop
xchg
in
ret
divb
mov
lods
div
stos
mov
mov
or
jb
cmp
in
mov
test
add
xor
daa
rclb
and
mov
mov
push
pop
mov
les
and
hlt
sub
in
or
fcoml
ret
call
sbb
add
cmc
mov
jns
dec
adc
xchg
bound
cmpsb
lods
aam
dec
fadds
push
push
in
fcoms
mov
andl
cmpsb
xor
fistl
sbb
imul
je
and
stos
or
jbe
fdiv
mov
nop
cwtl
daa
pop
adc
add
jge
dec
into
mov
xlat
jmp
xor
ss
pop
cltd
jns
mov
sub
xchg
adc
and
inc
xlat
add
dec
sar
cmp
loop
lds
cmpsl
add
add
loop
mov
add
out
jne
addb
cld
xchg
roll
outsl
mov
and
inc
mov
repnz
lahf
mov
ljmp
mov
sub
add
lret
pop
and
pop
or
call
fcoms
aas
mov
scas
and
fs
shrb
xor
sub
das
or
sti
jns
inc
lcall
cli
push
xlat
xor
cltd
lret
and
shrb
pusha
jge
pop
out
jle
inc
sbb
enter
sbb
andb
test
adc
loop
cmp
sbb
and
push
jno
repnz
loope
das
test
push
mov
xchg
mov
jb
sub
pop
cmpb
inc
cmp
jp
cmp
fisttps
and
rorl
cmpsb
test
cmpsb
push
lret
mov
in
orb
loope
cmp
fs
adc
jl
jge
and
lock
je
push
gs
jbe
in
ret
pop
mov
cmp
pop
lret
lods
pop
je
repnz
xor
fbstp
or
sar
cmp
mov
inc
push
fildl
mov
adc
push
addr16
push
cmp
sbb
mov
pop
lock
pop
sbb
rorl
fdivrs
or
bound
inc
pusha
mov
cmp
fidivs
ds
push
stos
cld
mov
mov
imul
iret
enter
jl
push
add
xchg
sbb
xchg
mov
cmp
mov
out
ss
push
or
arpl
push
clc
mov
leave
jp
sbb
scas
pop
dec
sahf
pop
aaa
icebp
subb
xor
sub
add
in
das
inc
add
mov
mov
icebp
adc
add
jo
push
icebp
mov
imul
inc
filds
ss
xor
xchg
pop
sarb
add
sub
inc
fs
push
fistl
jle
iret
mov
mov
add
adc
loopne
mov
pop
aad
mov
jae
imul
xchg
cmpsb
cmp
inc
cmp
cmp
jmp
negb
icebp
mov
nop
cmp
enter
push
insb
fists
xchg
cmpsl
mov
dec
aaa
push
cltd
inc
or
push
xchg
push
sahf
push
pop
push
sub
adc
xchg
lea
push
sub
mov
adc
test
mov
jae
dec
int3
or
add
stc
mov
testl
ds
dec
loope
std
jno
xor
mov
sbb
in
mov
mov
out
shrb
test
sub
jg
orl
mov
dec
xor
ret
lcall
cmp
push
lret
mov
mov
lea
cmpsb
push
mov
pop
cli
aam
addr16
xchg
fwait
add
add
inc
clc
sub
add
or
mov
jbe
cmp
out
xor
repz
loope
xor
jno
ja
pop
sub
int3
adc
cmpsl
jae,pt
fstpt
dec
dec
lods
rcrb
push
jle
aad
add
jle
dec
pop
iret
push
leave
mov
jbe
cli
mov
in
out
and
xlat
int
rcrb
pop
scas
jno
scas
rolb
mov
pushf
iret
gs
sbb
les
xchg
xor
aaa
dec
jp
ss
xor
scas
rorl
out
out
push
lret
movsl
or
mov
pop
sbb
outsb
adc
cmp
insb
xchg
pop
add
enter
rcrb
lods
ss
sub
or
or
push
add
iret
in
outsb
mov
inc
mov
jmp
push
cmp
push
test
and
insb
faddp
subb
inc
jo
movsl
test
xchg
cli
scas
xchg
movsb
add
sbb
das
sub
mov
or
rcl
pop
adc
pushf
inc
push
pop
cmp
push
int
enter
lcall
fisubrl
inc
jl
sub
cwtl
xchg
push
sbbb
pop
sbb
pop
in
cmp
cld
out
arpl
ret
push
xor
cmp
shlb
dec
sarb
into
sar
jnp
out
dec
ja
mov
sub
push
mov
fwait
mov
ss
ss
ds
es
sbb
inc
pusha
stos
add
fs
in
mov
pop
fcomp
adcl
push
ror
and
push
sbb
sub
scas
add
cwtl
das
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
mov
xlat
lea
or
mov
cwtl
or
add
xchg
dec
push
push
fisttpll
xchg
pop
mov
jns
lret
stc
mov
js
cmc
icebp
aas
cltd
cmp
jb
and
xchg
dec
es
push
loopne
or
mov
int3
loopne
rcll
push
fstpl
cmp
mov
cmp
push
jne
bound
xchg
les
jge
pop
jl
pop
pushf
push
iret
das
xchg
xchg
add
cmp
imul
pop
cld
fidivrl
fwait
mov
int3
mov
lock
out
add
pushf
cltd
and
dec
cld
pop
jno
popa
pop
push
dec
xchg
mov
dec
ds
aaa
cmpsl
inc
sbb
jns
insb
inc
sbb
ds
xlat
and
decb
rclb
mov
or
adc
mov
sbb
in
or
xor
mov
jmp
xchg
inc
pop
adc
test
jge
pop
cmp
sti
push
out
in
adc
xor
outsl
pop
mov
jb
xchg
fadds
push
xchg
or
in
add
and
ds
jle
or
aam
movsl
sarb
adc
pop
push
rclb
sub
ret
pop
inc
pop
jnp
test
pop
push
test
mov
xchg
adc
or
xchg
test
mov
mov
push
dec
jb
cmp
pusha
pop
cwtl
xchg
adc
cmp
mov
into
sub
mov
xor
out
lods
sbb
int
dec
dec
lret
out
mov
movsl
mov
stos
insb
push
mov
movsb
in
mov
jae
xchg
pop
push
mov
mov
jg
jle
push
ja
dec
fbld
mov
fidivrl
xchg
ret
or
push
popa
movsl
mov
sub
dec
or
xchg
in
jle
or
push
push
dec
xor
bound
inc
loop
or
cli
es
roll
jg
mov
jne
loope
sahf
push
fwait
mov
divb
sbb
test
negl
push
ss
aaa
call
addr16
rclb
xor
sarl
arpl
scas
cmpsb
xchg
mov
xchg
cmp
or
pop
mov
lcall
add
adc
cltd
push
xchg
or
pop
inc
stos
in
cmpsl
and
jg
sub
cltd
movsb
or
fnstsw
es
jns
stos
mov
sbb
cltd
dec
dec
rcll
sbb
adc
aam
adc
enter
out
fstp
adc
push
jl
inc
push
mov
stos
xor
addb
push
repz
mov
stos
xor
out
lcall
sub
pop
imul
ds
ss
out
mov
mov
mov
sbb
xor
es
out
mov
jle
mov
mov
pop
xor
ret
cmc
dec
cmp
or
popa
lods
xlat
aaa
sub
push
xchg
dec
push
dec
stc
push
rorb
jge
jns
je
xor
jg
cmp
pop
ds
icebp
or
or
shll
or
push
fbld
cltd
sbb
xchg
fidivrl
sub
push
ror
push
fsts
pusha
mov
lcall
pushf
or
loop
idiv
fistps
stos
lods
and
add
and
aad
rcr
icebp
pop
int
xor
lock
call
xor
sub
cmp
mov
jp
aas
xor
popf
xor
scas
fcmove
loop
imul
into
sub
mov
ja
mov
sub
decl
cmp
ljmp
dec
xchg
nop
cmpl
pusha
addb
cmc
sbb
add
mov
lds
and
cmp
mov
fs
cmpsl
xchg
push
clc
mov
out
mov
push
idivb
out
pop
in
push
pop
lods
es
push
xor
fldenv
pop
pushf
fldenv
int3
push
cmp
add
adc
inc
enter
lret
push
dec
int
fdivrp
push
sub
xorl
xchg
enter
ficomps
shld
pop
dec
sub
into
dec
ss
cmpl
sbb
out
pop
stos
pop
adc
and
push
mov
scas
xchg
mov
push
insb
repz
addr16
or
mov
fstl
xchg
ja
je
iret
popf
out
pop
out
sbb
cmp
lods
pop
lock
adc
inc
in
movsb
mov
js
mov
cs
fcom
js
daa
push
movsb
and
sbb
adc
and
cmp
adc
mov
fdivl
jmp
mov
jb
mov
xchg
rol
add
adc
dec
insb
xor
or
jns
push
fwait
imul
aas
stos
movsl
xor
repnz
pop
lcall
xor
xchg
xlat
pusha
dec
pusha
mov
jne
xor
or
dec
mov
jne
or
lds
repz
cld
sarl
scas
scas
jo
fdivs
stc
jno
lock
inc
jl
enter
ds
roll
and
mov
inc
pop
outsl
dec
pop
sub
adc
sbb
bound
mov
adc
loope
call
int
popf
pop
aam
aad
mov
jae
je
cltd
sahf
xchg
dec
xchg
in
pusha
push
cwtl
iret
fsubl
femms
rcll
fimuls
lret
sahf
cmpsl
stc
pop
fisubl
adc
sbb
xchg
cmp
lret
and
testl
push
fnstenv
xchg
inc
test
gs
xor
jle
je
adc
mov
rclb
pop
or
fwait
imul
pop
xchg
xlat
xlat
mov
lods
dec
mov
push
aas
inc
fstpl
jmp
movsl
ret
cmp
and
mov
xchg
or
jp
or
dec
leave
push
xchg
call
jne
jl
pop
push
jbe
int3
sbb
test
add
mov
sarl
fmuls
push
jp
xchg
and
aam
lds
rorb
push
out
insb
sub
pop
cld
and
lcall
mov
jbe
hlt
adc
rorl
rcrb
add
jne
and
call
mov
inc
leave
aad
sbb
sbb
testl
add
adc
jg
stos
mov
pop
inc
mov
pop
add
sub
cmpl
push
mov
jmp
add
sbb
ds
add
mov
cli
pop
hlt
sahf
pop
mov
or
xor
jns
stc
dec
mov
inc
pusha
add
push
outsb
mov
sbbl
lea
popf
or
cmpb
je
add
test
add
ja
add
cmp
call
lcall
sbb
fdivp
jl
pusha
dec
iret
ss
mov
push
nop
xchg
inc
sub
add
cmpsb
stos
and
inc
add
iret
jns
popf
or
mov
nop
insb
add
inc
adc
push
dec
cmp
xor
lds
inc
enter
and
cmpsb
adc
push
imul
pop
adc
jecxz
cli
mov
data16
push
cltd
push
inc
sbb
inc
push
rclb
mov
loopne
rorb
push
mov
cmp
adc
and
inc
sbb
popf
bound
jb
daa
orb
lods
mov
aam
mov
es
popa
divl
push
inc
mov
decb
in
cmpsb
bound
adc
push
jns
jo
push
ljmp
repnz
imul
inc
out
mov
sub
jge
pop
lahf
and
mov
daa
sti
stos
push
jno
push
dec
rorb
fsubrl
mov
sub
or
fisttpl
repnz
mov
push
push
mov
ds
xor
push
cmp
scas
mov
jns
jge
shrb
sub
jns
pop
out
sub
mov
push
mov
jbe
hlt
shl
mov
mul
adc
push
inc
mov
xor
mov
fildll
mov
push
push
jns
jl
mov
mov
xchg
adc
lret
mov
loope
int3
inc
jno
cmp
lods
jno
sbb
ljmp
xor
std
xor
xor
push
sbb
cmpsb
jno
fldl
lret
rcrb
and
filds
push
lds
xchg
cld
mov
or
mov
lret
in
leave
shrb
lahf
mov
into
imul
add
cvtps2pi
lahf
or
xor
int
lret
dec
addl
push
sbb
out
lock
out
sbb
dec
je
les
mov
xchg
pop
enter
mov
add
jne
lret
les
mov
jp
cs
ljmp
mov
hlt
pop
inc
bnd
jp
inc
mov
mov
ror
mov
xchg
ret
cmp
ret
pushf
lea
movsb
test
push
and
call
jle
std
mov
in
mov
ljmp
jae
je
repz
div
dec
xor
rol
imul
rcrb
in
and
sbbl
adc
mov
mov
mov
pop
mov
shrb
loop
andb
mov
inc
mov
mov
xchg
jne
in
enter
push
adc
loope
dec
imul
mov
add
ret
and
arpl
xchg
pop
jp
mov
cmc
insb
adc
icebp
xchg
adc
jae
dec
insb
sbb
dec
je
mov
xor
arpl
or
pop
dec
mov
sbb
lods
shrl
fmul
pop
and
or
sarb
xchg
push
cld
insl
add
out
or
adcb
js
roll
jmp
movl
ja
jmp
clc
imul
cmpsb
ljmp
adc
cwtl
pop
sarl
testl
adc
outsb
cs
mov
dec
push
aad
cmp
jp
mov
decl
lcall
cmp
dec
orl
movsl
sub
add
xchg
push
call
or
mov
imul
cmp
adc
lock
jmp
popf
ss
imul
mov
inc
repz
inc
adc
sub
cld
fdivp
add
scas
push
xor
lahf
mov
pop
gs
daa
lahf
sti
push
sub
push
sbb
mov
mov
sbb
andb
jl
inc
inc
pop
into
les
jle
mov
push
mov
push
jno
test
lock
lods
and
adc
orb
mov
test
add
push
push
and
fs
xchg
pop
shlb
movsb
pop
setge
jnp
cltd
loop
jns
and
fisubl
and
mov
inc
push
mov
push
push
and
dec
repnz
fidivl
adc
jg
mov
mov
jecxz
push
jecxz
push
stos
lcall
cmc
dec
stos
mov
vpinsrw
stos
sbb
imul
add
xchg
arpl
sti
push
pushf
xchg
inc
jnp
mov
mov
xor
jg
mov
repnz
mov
cmpb
sub
add
xchg
ds
inc
mov
sbb
xchg
pusha
out
bnd
sub
sbb
xchg
fiadds
std
push
adc
out
or
cli
popa
in
push
dec
xor
mov
addr16
daa
int
pop
inc
jp
cmc
lods
fdivrs
mov
dec
jbe
cmp
jg
inc
scas
dec
mov
mov
and
jb
mov
mov
pop
pop
pop
inc
mov
fisubl
adc
arpl
cli
jmp
xchg
mov
inc
push
and
add
jg
les
mov
in
inc
jb
jle
in
pop
pop
mov
pop
aam
cmpsl
jbe
sbb
outsl
lds
mov
sbb
jge
lret
rcrl
push
aad
pop
xchg
cmp
mov
xor
push
xchg
sbb
rcll
outsl
xchg
push
lret
adc
ljmp
mov
movsb
inc
test
mov
subb
enter
popa
mov
mov
jae
cmpsl
addr16
dec
mov
das
movsb
pop
xchg
mov
cltd
mov
cmp
jecxz
mov
jl
shlb
shlb
xchg
mov
xchg
hlt
mov
gs
dec
cs
into
inc
data16
cmpsb
shl
or
in
out
rcl
push
rclb
in
fsubl
push
sarb
mov
pusha
pushf
jecxz
cld
pop
rcrb
sbb
ret
xorl
inc
repz
test
pop
mov
test
insl
stc
lock
lahf
rcl
jge
ret
fnsave
add
add
je
out
cmp
repnz
mov
inc
loop
add
and
incb
cmp
cs
test
or
sub
push
in
popf
sub
and
sarb
or
loope
int
std
outsl
daa
fs
dec
mov
loop
mov
loopne
xor
xor
lahf
pushf
movsb
cmp
enter
cltd
fucomp
sub
imul
nop
sahf
push
mov
pop
pop
call
ret
jmp
cmpb
xchg
mov
mov
loopne
vfrczps
mov
jmp
pushf
aaa
lcall
jae
pop
xor
mov
xchg
int3
nop
dec
rcll
mov
xchg
leave
mov
sub
sbb
adc
mov
lret
pop
fwait
sub
lods
xchg
lahf
or
push
ljmp
jbe
popa
sbb
leave
add
push
mov
stos
pop
test
subb
ja,pt
ret
dec
lahf
bound
aas
cltd
imul
lea
cmp
add
jle
mov
jg
xchg
out
std
sbb
xchg
insl
adc
ret
daa
mov
pop
jno
jb
in
jmp
pop
arpl
adc
inc
nop
es
jbe
and
xchg
mov
and
mov
add
pop
lock
inc
inc
aam
or
and
inc
and
out
push
aas
repz
int
and
push
stc
and
and
mov
pusha
outsb
xchg
mov
and
sub
push
data16
push
test
push
testb
subb
loop
mov
stos
add
xchg
scas
jmp
push
add
int
dec
cwtl
in
rcrb
mov
jns
insb
jecxz
and
pop
xchg
rorb
cmpsl
xchg
xchg
lahf
out
mov
push
leave
imull
stc
add
shll
lret
or
pop
sub
mov
nop
adc
pop
movsl
fisubl
test
inc
dec
les
js
inc
xchg
mov
rorl
pop
add
push
cs
mov
mov
xor
inc
shl
xor
dec
neg
jne
push
test
mulb
adc
add
setae
cld
test
adc
scas
xor
jp
push
pop
jmp
lock
xchg
adc
xchg
pushf
pop
mov
testb
and
sub
out
aas
movsb
das
pop
jno
aaa
pop
outsb
lock
pop
test
xor
test
shll
ja
push
jne
test
push
sbb
mov
cmpsb
outsl
shrl
lret
dec
or
inc
out
pop
ja
or
jo
shll
ficompl
inc
inc
daa
pop
ja
gs
fisubs
cmc
xor
mov
push
jne
test
pop
outsb
mov
mov
push
sub
cs
shlb
cmp
sub
mov
xor
stos
testl
mov
adc
cmc
jbe
mov
mov
push
mov
enter
pop
lock
xchg
aaa
jmp
inc
cmp
popa
pop
addb
mov
repz
and
mov
iret
sub
xchg
lahf
and
fimull
and
les
outsb
sbb
lock
test
shlb
mov
jecxz
dec
sub
or
shl
aaa
enter
cmp
scas
clc
pop
movsl
loopne
rorb
stos
ret
inc
sub
xor
jno
pop
iret
add
icebp
xchg
adc
icebp
std
inc
int3
call
hlt
mov
mov
loope
fcomp
and
jp
in
leave
dec
push
mov
mov
sbb
mov
cmp
jp
inc
idivb
mov
frstor
outsb
mov
notl
cmp
subl
popf
shl
and
out
aas
bswap
pushf
loop
loop
add
sub
or
ja
pushf
lock
dec
mov
and
or
arpl
enter
dec
test
aam
adc
sahf
fwait
dec
mull
insl
das
dec
andb
sbb
push
jo
ret
out
xor
jmp
mov
sbb
and
mov
push
cltd
lods
stc
enter
addb
sbb
sbb
cmpsl
into
les
or
mov
stos
in
inc
and
xlat
inc
scas
fwait
mov
xor
push
push
and
mov
aas
pusha
fsubl
cltd
fnclex
pop
cmp
mov
outsb
fmuls
sub
sub
push
jge
adc
jnp
adc
pop
mov
pop
lret
push
ror
hlt
adc
stos
sbb
addr16
dec
push
mov
sub
inc
sbb
pusha
fimuls
stos
arpl
int3
push
in
jecxz
mov
test
or
xor
adc
adc
call
dec
insl
mov
pop
mov
push
in
jl
pushf
mov
sbb
jae
lds
cmpb
mov
inc
sbb
pop
sub
sub
add
dec
push
sbbl
push
divb
out
int3
dec
mov
xchg
push
mov
push
push
inc
addr16
fadds
mov
and
jecxz
mov
cltd
mov
cmp
sbb
sbb
in
xor
jb
call
xchg
iret
fistpl
jl
push
jae
jle
test
fdivs
int3
sbb
test
je
jmp
dec
mov
test
dec
rorl
jae
es
orb
aad
aaa
jl
sub
cs
add
rcl
ret
jl
sub
popf
push
and
mov
in
sti
mov
inc
mov
shrl
cmp
pop
test
or
mov
inc
and
das
or
or
shrb
in
xchg
out
xor
push
and
loope
hlt
push
cmp
cltd
and
rolb
jb
push
out
jae
test
mov
repnz
imul
add
fcoms
fbld
xor
rcl
jbe
add
pusha
loop
inc
enter
pop
fldt
ret
mov
out
fldl
repz
jb
imul
push
xchg
in
scas
jle
imul
sarb
adc
decb
dec
pop
pushf
out
mov
jecxz
push
pop
ds
in
insl
imul
mov
xchg
ret
mov
add
add
andb
cld
les
dec
mov
and
add
imul
push
std
ljmp
hlt
andl
js
lret
lcall
or
push
mov
pop
adcb
inc
loope
imul
ret
int
imul
std
outsb
ds
test
rol
and
mov
push
ret
mov
in
cltd
rclb
sub
out
std
sti
decb
scas
jmp
mov
or
mov
fcoml
jb
pusha
xchg
test
idivl
int
mov
lock
xchg
mov
add
xchg
inc
inc
inc
and
xchg
cmp
out
and
scas
popf
jae
add
cltd
test
mov
and
xchg
or
inc
mov
push
adc
shlb
aaa
pop
push
jecxz
mov
xchg
pushf
aam
and
imul
fwait
pop
cltd
add
sti
fcmovnu
sbb
andl
sub
and
mov
stc
and
add
rcll
bound
dec
cld
clc
pop
gs
rcl
aad
jle
and
insl
sti
pop
mov
adc
adc
push
mov
jb
add
xchg
lods
ss
jp
and
or
cli
xchg
fistpl
pop
stc
and
mov
mov
in
push
dec
out
jb
test
insl
sub
inc
adc
jmp
dec
sbb
and
adc
enter
and
inc
sub
add
mov
lods
rorl
out
push
pop
and
into
lods
xor
add
std
fwait
nop
cmp
test
fsubl
mov
xor
xor
ds
test
neg
sbb
mov
inc
or
mov
fildl
mov
aaa
xchg
adc
cmp
dec
jle
mov
sbb
push
mov
int
icebp
xor
das
xor
aas
xor
inc
pop
cmp
xchg
jno
lret
flds
mull
mov
outsb
call
test
or
sbb
insl
mov
test
push
enter
jle
ficomps
adc
mov
or
test
stc
jg
fidivs
push
dec
ja,pt
mov
mov
lods
movsl
xor
lea
xchg
or
cwtl
jns
jne
xor
pop
imul
mov
mov
sbbb
popf
mov
fidivs
ret
pusha
test
mov
sbb
dec
add
push
pusha
inc
scas
outsb
lods
stos
inc
adc
inc
xor
or
popa
mov
cwtl
loop
cs
mov
xor
jo
gs
mov
fxch
mov
sahf
rcll
jg
sahf
cmp
sub
iret
popf
push
out
addr16
or
jae
push
enter
adc
dec
inc
scas
mov
mov
or
les
cmpl
cmpl
adc
and
insl
sbb
sub
roll
sub
pop
cmpsl
sti
les
mov
aad
fistpl
test
pusha
les
pusha
jae
pushf
lcall
jnp
mov
mov
aas
sub
imull
mov
test
les
sub
imul
fwait
pop
into
lahf
mov
push
in
pop
mov
add
mov
das
xor
xchg
enter
fs
add
std
fiadds
and
mov
xor
jb,pn
fmuls
mov
dec
or
into
rorl
dec
sahf
and
imul
mov
pop
jle
orb
jb
in
roll
sbb
ret
xchg
push
cmpsb
push
int
mov
sbb
sub
loope
fxch
sbbl
jg
ds
adc
push
push
popa
nop
arpl
pop
in
xchg
es
sbb
test
ret
or
arpl
es
cmp
pop
push
push
or
ss
push
and
daa
pop
adc
test
xlat
fwait
loopne
lret
fisubs
sub
push
imul
adc
sub
mov
add
popf
lret
ret
jg
dec
xchg
sbb
pop
xor
adcl
pop
bound
xor
cmp
xchg
gs
daa
sbb
inc
cmp
add
mov
test
xchg
outsl
and
or
imul
pop
aad
jno
out
cmp
jns
dec
loope
mov
stos
movsl
cmp
popf
xor
nop
add
iret
lcall
es
sbb
mov
test
xlat
adc
mov
xchg
lds
jmp
inc
inc
lds
pop
add
mov
mov
fmull
mov
or
jne
sub
cwtl
scas
movsb
call
insl
cs
and
hlt
sbb
dec
cmp
jbe
xchg
fsubrl
mov
xchg
in
mov
das
dec
push
dec
mov
movsb
ja
push
cmp
and
inc
js
inc
add
ja
jae
push
push
push
jg
cmpsl
sub
dec
es
pusha
mulb
ds
and
pop
dec
and
mov
cmp
adc
sar
dec
push
or
xchg
shlb
mov
lahf
mov
push
mov
int
in
daa
dec
imul
jne
outsb
and
pop
cltd
rcr
or
mov
arpl
cld
scas
cmc
cmp
jmp
clc
lods
pusha
mov
loope
out
adc
into
inc
adc
sbb
call
rcll
fisubrs
add
mov
rolb
xchg
xchg
dec
mov
jge
xchg
mov
icebp
fldl
pop
xchg
inc
paddsw
lret
test
shl
sub
dec
pop
xorl
popf
sub
inc
sub
in
xor
sbb
daa
flds
lahf
and
xchg
sbb
bound
clc
hlt
sbb
bound
mov
in
add
stos
inc
mov
sub
sub
cmp
inc
lds
or
dec
testl
fmull
jns
and
xchg
dec
out
popf
push
and
sbb
push
roll
push
lret
add
sub
test
cmp
push
sbb
jg
andl
add
mov
mov
sub
add
and
jb
lret
dec
sbb
add
out
xchg
xchg
cs
xor
dec
orb
push
xor
in
aas
ljmp
inc
pop
arpl
in
pop
push
aad
add
aaa
adc
push
jbe
cmp
fnstsw
mov
pop
or
add
mov
int3
scas
jo
add
fisubrs
mov
and
xor
shll
and
out
and
pop
movsb
sti
inc
out
inc
adc
or
sub
jg
xor
mov
jmp
inc
jmp
sub
lea
xor
jnp
push
inc
xchg
jbe
dec
adc
mov
leave
stos
gs
mov
fisttpll
mov
and
mov
rclb
rep
xchg
and
lret
repnz
shlb
xchg
push
pop
scas
imul
stos
mov
sub
adc
pushf
sbb
in
test
or
aad
aam
ljmp
mov
push
repnz
insl
inc
dec
out
jno
or
xchg
push
add
cmpsb
in
sbb
popl
clc
mov
jne
icebp
sti
daa
int3
ss
add
jmp
cmp
jbe
rcrb
mov
mov
inc
test
push
data16
and
cmc
and
mov
stos
push
sub
hlt
adc
sbb
inc
push
icebp
int3
icebp
sub
adc
outsb
pushf
or
insl
loop
jno
mov
sub
pop
sbb
rol
addr16
jecxz
mov
and
pop
sbb
fisubs
mov
jne
mov
dec
je
out
mov
outsb
cs
call
in
dec
jno
test
lret
hlt
imul
pop
push
mov
lods
pop
mov
test
mov
or
mov
mov
out
pushf
mov
ror
fldl
jle
jle
icebp
push
aam
imul
push
or
jp
leave
mov
sbb
push
inc
mov
xchg
push
pop
or
stc
xchg
push
fdivs
js
lea
cmpsb
mov
aam
inc
mov
xor
jmp
mov
mov
xor
movsl
jnp
jg
sbb
pop
mov
shl
imull
cmp
jne
inc
divb
add
mov
mov
out
jge
mov
test
sub
addr16
pop
or
popa
add
sbb
or
das
ror
push
stos
inc
aaa
mov
dec
outsl
dec
jmp
mov
js
mov
mov
push
lcall
aas
push
stc
sbb
inc
mov
lcall
imul
pop
fildll
xlat
ret
movsb
fisttpll
add
push
test
jae
lret
les
cmpsb
xor
inc
lods
add
scas
cmp
pop
push
sub
lret
lcall
xor
xor
fnstsw
xchg
jb
adc
dec
cmpsb
aaa
shlb
mov
or
jne
sahf
imulb
mov
xchg
enter
dec
add
jns
bound
out
call
adc
jo
xor
or
mov
cmc
xchg
js
mov
ds
sub
aam
out
xchg
jl
xchg
jo
pop
insb
imul
add
inc
cli
mov
shrl
mov
push
test
nop
stc
enter
movl
movsl
cs
jge
sub
add
jg
jne
iret
pop
ret
movsb
pop
push
clc
and
into
mov
or
fists
inc
or
cwtl
inc
mov
add
arpl
xchg
das
leave
or
inc
movsl
push
popf
test
jl
shl
fxam
in
ss
test
dec
daa
cmp
jmp
lahf
xchg
pop
out
jl
jbe
pusha
pop
in
into
stos
adc
sub
mov
xchg
sub
mov
push
adc
cld
iret
and
inc
jg
dec
dec
out
test
xlat
lds
pusha
cmpsl
repz
dec
sbb
dec
mov
fnsave
rorl
data16
lret
scas
pop
outsl
mov
sub
dec
xchg
and
and
orl
or
xchg
jp,pn
jmp
mov
adc
fs
xchg
cs
mov
xchg
movsl
dec
rolb
int3
xchg
cmp
pop
jne
aaa
push
mov
sarb
sahf
ficompl
arpl
enter
mov
shrb
cmp
push
icebp
cmpsl
int
stos
jo
in
lret
xor
and
fimuls
jp
loop
adc
push
push
jle
and
pop
nop
mov
mov
stos
and
xor
in
shl
inc
mov
sbb
cmp
inc
inc
dec
xchg
lods
call
mov
aam
aaa
xlat
std
mov
jae
mov
frstor
add
inc
cld
push
hlt
jnp
sub
sbb
hlt
test
mov
leave
js
sbbl
or
repnz
addr16
xor
inc
ds
or
xor
repz
icebp
call
cltd
jne
mov
cltd
mov
inc
mov
or
mov
mov
es
ficompl
in
jb
adc
dec
testl
pop
and
dec
arpl
iret
ja
jns
in
and
movb
sub
imul
nop
popf
call
test
adc
cli
xchg
cmp
sub
pushf
xchg
les
or
jle
pushf
adc
std
andb
adcb
lahf
inc
xchg
mov
je
lahf
std
subb
mov
or
mov
dec
push
in
scas
xchg
stc
arpl
cmp
dec
je
jno
pusha
outsl
repz
dec
fiaddl
test
mov
mov
in
jne
mov
ds
and
mov
ds
or
xchg
dec
jmp
mov
mov
sub
xor
into
aaa
rcr
popa
or
adc
movsb
test
je
pop
out
push
enter
outsb
sub
xchg
enter
sahf
add
sbb
jae
aas
push
sbbb
push
pop
or
or
into
cs
test
icebp
push
aam
ret
jecxz
cmp
mov
jecxz
cmp
and
push
mov
sub
mov
inc
or
xchg
loop
inc
mov
movb
dec
sti
icebp
repnz
cmp
jnp
cmp
aas
mov
pop
int
cmp
add
push
lea
sti
pop
lods
into
fisttpl
mov
mov
add
xchg
mov
daa
popa
cmp
mov
xor
mov
mov
jo
int
scas
in
repnz
jl
ds
sub
lcall
mov
loop
aad
iret
cmp
cld
jns
push
in
pop
mov
rolb
cmpsb
and
cmp
mov
popf
add
pop
mov
sahf
in
icebp
addr16
mov
dec
or
icebp
and
mov
cmp
push
imul
iret
and
xchg
and
dec
cmp
push
movsb
push
test
out
cmp
xor
sub
jp
xlat
test
or
jl
lock
mov
cmpsb
dec
xchg
sbbl
insl
pop
dec
movsl
xchg
cmpsb
stc
mov
xor
mul
mov
loopne
clc
fmul
pop
addb
pop
ja
and
iret
pop
cs
call
mul
roll
inc
jno
leave
xchg
je
mov
outsl
popf
jo
inc
pop
push
xchg
fisubs
daa
popa
or
outsb
ss
jne
adc
loopne
xor
mov
in
in
xor
mov
stos
out
lock
test
aad
out
pushf
jno
dec
xchg
out
inc
pop
and
aaa
mov
stc
insb
push
int3
in
mov
jb
daa
imul
lret
sbb
sub
mov
sbb
pop
stc
dec
ds
inc
cmpb
sbb
xor
in
scas
mov
dec
ret
scas
out
sbb
jle
lret
add
mov
fsubl
add
stc
shrl
sub
sbb
insb
pop
mov
call
ret
sub
jle
inc
mov
divb
lret
xor
mov
shr
lret
sti
xchg
push
mov
jb
jmp
cmpsl
lea
adc
pop
push
or
xchg
sbb
adc
push
mov
push
cld
mov
stos
incl
fwait
mov
cmp
adc
inc
fsts
in
xlat
mov
xchg
mov
out
xor
in
ret
sbb
mov
aas
and
movl
filds
fldl2e
xor
sahf
cmp
add
xor
xlat
mov
ss
xor
imul
arpl
sahf
pop
cmpsl
fisubrs
xor
enter
imul
push
lahf
jl
push
mov
and
scas
mov
icebp
and
stc
pop
jmp
std
shr
add
hlt
mov
or
sub
push
push
and
inc
adc
je
hlt
pop
pop
dec
out
mov
mov
adc
out
or
or
jb
push
jmp
xchg
sub
push
or
sub
sub
pop
jns
lods
pop
jmp
fsubs
jge
xchg
sarl
cli
test
push
aaa
lahf
xchg
fs
daa
xor
sbb
jmp
adc
cltd
lds
das
or
mov
jmp
rcll
inc
jg
jnp
fs
ficoml
je
popa
lret
loopne
xchg
push
jp
pop
and
out
scas
repz
xchg
ret
cld
fildl
gs
daa
les
push
add
popf
xorb
push
scas
xor
adc
ret
int3
pop
imul
dec
insb
push
orb
xchg
sub
push
lcall
fidivs
push
je
push
mov
and
ljmp
sub
icebp
mov
fs
test
sbb
cmp
in
jle
fcomps
sahf
sbb
or
outsl
xorl
outsl
int
js
jg
or
dec
jecxz
dec
test
add
pop
mov
add
pop
stc
enter
add
pop
insl
pusha
insl
add
shl
and
subl
movsl
in
iret
mov
xor
cmp
je
imul
testl
mov
mov
mov
dec
outsb
sbb
jo
or
es
popf
notb
xchg
in
test
jae
out
xor
out
pmaxub
jne
add
iret
xchg
dec
push
stos
mov
xchg
lea
cmp
jle
cmc
imull
std
sbb
gs
arpl
pusha
pop
mov
out
ds
cmp
cmp
movsb
in
ja
stos
push
inc
in
xchg
jno
std
js
sbb
push
mov
mov
adc
in
and
xchg
cmp
push
push
mov
iret
and
adc
dec
inc
gs
lea
cmpsb
mov
enter
or
loop
inc
test
enter
cmp
in
test
decl
inc
fisttpll
lock
insb
les
mov
jno
add
or
dec
ret
xchg
loop
into
xchg
test
clc
dec
inc
sbb
inc
inc
js
adc
jl
aad
and
or
mov
or
xchg
mov
and
in
in
or
jl
mov
out
dec
test
push
stos
and
mov
ss
iret
push
push
sbb
adc
aad
cmp
mov
lret
outsl
scas
loope
push
mov
stos
fnstcw
or
jb
pop
jecxz
sbb
imul
out
mov
js
add
adc
jnp
xor
pop
pop
pop
in
push
cmc
aas
or
fimull
fwait
inc
rorl
and
cmpl
loope
aas
adc
jmp
sbb
aas
jns
mov
cmp
jp
out
mov
out
cmp
mov
jo
xchg
add
decb
pop
jmp
cmpsl
inc
repz
mov
call
lcall
xchg
jae
or
add
and
add
out
jge
mov
sub
adc
or
add
aaa
sbb
xor
xchg
js
in
fisubrl
inc
arpl
int
ljmp
fdivr
and
mov
cmp
in
dec
test
inc
cmp
or
in
mov
stos
mov
and
fwait
adc
gs
stos
outsb
xchg
in
ds
cmp
jmp
push
mov
xor
mov
out
xlat
pop
es
xchg
addr16
montmul
cmpsb
add
add
add
add
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
addb
add
add
mov
cmp
cmp
cmp
mov
add
add
add
ss
ss
ss
add
add
or
