push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
gs
sbb
sbb
sahf
adc
sbb
push
sub
mov
mov
cmp
cs
mov
adc
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
aam
push
or
and
lcall
cmp
movsl
inc
add
jmp
and
lretw
sbb
push
mov
inc
fsubrs
mov
jmp
and
fldl
mov
shll
dec
aas
pop
and
andb
dec
repnz
cltd
notl
out
aam
wbinvd
cli
pop
inc
fdivs
pop
mov
stc
std
nop
add
shr
imul
lret
inc
cmp
cltd
dec
mov
push
lock
jmp
adc
repz
repz
mov
out
popf
popf
xchg
mov
mov
shll
ret
pop
and
adc
and
mov
mov
popf
and
or
stos
cmp
hlt
sahf
cmp
cmpsb
push
add
jo
lcall
pushf
sti
ds
inc
or
lods
sub
mov
mov
mov
xor
inc
mov
sub
pusha
jns
jns
inc
jnp
les
fs
out
push
push
enter
push
sti
jo
les
pop
ja
movsb
leave
bound
test
shll
hlt
dec
loop
scas
pop
add
test
cmpsb
xchg
faddl
pop
jle
xor
movsl
adc
pop
xchg
rcr
inc
jecxz
or
lea
xor
xor
enter
inc
int
inc
ds
repnz
addr16
pop
jno
inc
sbb
sbb
inc
mov
pop
xor
and
idivb
add
hlt
lcall
iret
fstpl
outsb
int
pop
in
jl
aaa
loope
jbe
sarb
xchg
rcrl
pop
sub
dec
mov
xor
xchg
adcl
dec
sahf
jp
mov
lods
jno
mov
mov
dec
sarl
in
pushf
cmpsb
xchg
nop
outsb
lods
icebp
sti
pop
jbe
and
orb
std
inc
fwait
imul
lock
loope
mov
ja
fisttps
divl
and
xchg
cmp
adc
push
mov
xchg
xlat
push
pop
sbb
mov
adc
div
push
mov
jg
in
test
pop
xlat
push
pusha
push
cmpsb
dec
and
push
scas
scas
or
aas
sti
cld
xlat
mov
sbb
movsb
stc
add
les
js
mov
or
enter
dec
std
ljmp
cmp
push
and
push
mov
pushf
imul
loopne
movsl
pop
iret
jge
dec
imul
ds
scas
aad
push
mov
dec
add
cld
jbe
roll
popf
mov
in
gs
add
pop
aas
sahf
xchg
repz
in
mov
leave
cmp
lods
sub
xchg
call
loop
cmpsb
ds
stos
addb
loope,pn
fisttpl
adc
pop
stos
filds
aaa
lods
jecxz
outsl
cmpsb
push
dec
push
scas
mov
addr16
int3
pusha
js
jecxz
cmp
cli
dec
and
xchg
imul
insb
cmp
xchg
mov
in
cmpsl
inc
or
push
jmp
int
mov
popf
sbb
aad
js
sub
ljmp
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
jl
adc
sbb
imul
popa
daa
std
iret
lods
jbe
push
stc
leave
out
je
testb
xlat
movsb
in
cmp
xor
and
stos
ja
adc
lods
lahf
jo
mov
iret
mov
pop
inc
pop
in
cmp
ficomps
mov
dec
xchg
jle
stos
push
neg
inc
pop
pop
scas
mov
dec
sar
out
add
add
push
popa
adc
cs
pushf
mov
adc
sub
jmp
xchg
mov
je
jle
test
mov
es
lock
or
adc
mov
hlt
jnp
adc
lods
fisttpll
fld1
ja
jl
sarb
dec
push
fsubrl
aam
stos
loop
sbb
xor
cltd
inc
in
test
arpl
pop
lahf
loopne
xor
jb
mov
push
push
jl
in
sbb
das
xchg
loop
jne
xchg
nop
and
loopne
mov
test
fs
mov
cmpsl
decb
pop
xor
imul
pushf
mov
adcb
mov
adc
inc
pop
add
cmp
mov
cmp
iret
adc
cwtl
stc
jmp
sub
add
push
sbb
mov
movsbl
std
adc
xchg
outsl
out
faddp
cmp
mov
popf
jne
sub
movsl
ret
push
mov
mov
and
ss
pop
scas
lock
mov
mov
xchg
mov
enter
dec
decl
xchg
test
arpl
in
iret
mov
fcmovnbe
inc
je
xor
jle
pushf
lods
stc
pop
popa
std
pop
xor
lock
pop
jp
adc
cmpsb
dec
iret
cmp
mov
xlat
jb
cmp
sbb
jne
insl
xchg
repnz
cmpsb
rcrb
movsb
pop
pop
pop
lret
scas
shll
pop
out
out
mov
pop
and
imul
xor
lret
xchg
fimull
popf
dec
pushf
flds
push
add
shlb
xchg
jne
or
popf
xchg
cmpl
jge
push
mov
sbb
cmp
mov
adc
stc
pop
adc
lods
push
mov
cmpl
out
jns
jns
or
add
test
mov
jg
sub
insb
mov
and
cld
jp
ss
sahf
fadds
sbb
xchg
adc
scas
test
addr16
add
pop
bound
mov
inc
movsl
cmp
adc
xor
in
xor
fbld
popf
les
insb
cmp
cmpsb
js
push
dec
fwait
inc
xchg
cmp
and
clc
lods
mov
in
lds
jns
sbb
xorb
call
jp
call
std
pop
add
xchg
add
adc
mov
add
or
and
in
sbb
adc
cmp
mul
xchg
rcrl
push
cmovg
scas
xchg
lock
movsl
repnz
push
fildll
popa
xchg
bnd
xor
fwait
inc
pushf
lcall
xchg
push
stos
xchg
inc
xchg
push
push
push
mov
lret
es
push
pushf
mov
jns
adc
jle
loope
xlat
lret
push
xor
xchg
fldl
push
jp
pusha
aam
cmp
mov
ljmp
gs
repz
adc
inc
mov
jmp
pop
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
mov
sbb
sahf
adc
sbb
sbb
stos
dec
mov
ljmp
jno
jle
push
fstpt
lods
in
popa
xor
dec
mov
sub
and
and
loope
mov
lea
lods
mov
sbb
push
inc
pop
and
add
mov
mov
dec
std
out
mov
in
jno
das
sarl
scas
push
les
ficoms
stc
pop
out
mov
xchg
loope
mov
fs
cmp
xchg
pushf
sbb
xchg
cmp
repnz
lea
std
fidivrl
pusha
loope
scas
sbbb
cmp
sbb
sub
cmpsb
js
pop
out
scas
mov
cmpsb
andl
push
mov
inc
jno
dec
ja
repz
ja
mov
dec
test
jb
mov
scas
into
mov
movsb
ljmp
xlat
jle
mov
roll
pop
cwtl
jae
imul
jecxz
jno
and
jecxz
add
subl
inc
or
das
adc
sbb
out
fdivrs
pop
xchg
je
xchg
sub
sub
add
xor
in
jne
cmpsl
loope
or
or
pusha
bound
mov
lods
orb
push
or
std
jns
mov
dec
repz
push
insl
les
inc
lods
mov
int3
aas
mov
cld
lcall
ror
in
or
neg
xor
enter
mov
xchg
adc
sub
jge
mov
cli
fwait
pop
int
jge
sub
iret
subl
jmp
mov
jne
pop
or
mov
jnp
shl
fdivs
ljmp
cmp
int3
scas
add
mov
fcomps
bound
fcomps
or
xor
xchg
or
out
dec
stos
sahf
mov
cltd
aaa
jle
stos
pop
adcb
jp
out
push
push
negl
xor
dec
jl
mov
lods
xchg
sub
pop
movsb
push
cmc
cmp
mov
pop
call
jae
arpl
mov
pop
mov
add
testl
arpl
out
cmp
inc
cmp
dec
outsl
out
insb
push
mov
andb
std
inc
movb
cmpsl
sbb
iret
dec
sub
lret
enter
shlb
or
mov
fsts
adc
add
or
push
dec
dec
and
pop
test
arpl
dec
cmp
stos
addr16
test
jbe
subb
fists
movsl
adc
ja
insl
je
xchg
lods
in
pop
mov
push
jmp
mov
jp
out
adc
cwtl
sbb
and
fstl
sub
out
sub
inc
shll
sbb
mov
mov
mov
mov
mov
pop
scas
movsb
add
sub
and
dec
fimuls
push
mov
jmp
mov
dec
and
cs
sbb
inc
and
jae
test
ret
scas
or
push
faddl
icebp
adc
out
xchg
daa
or
int
mov
dec
add
mov
stc
push
jp
inc
fdivl
leave
int3
xchg
dec
xor
cmc
outsl
cmp
mov
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
divb
movsb
jmp
dec
dec
es
mov
test
or
std
xor
sub
int
mov
ss
xchg
pop
cmp
cli
push
sub
enter
push
mov
popa
ret
cmc
movsb
mov
lds
aam
xchg
ds
inc
add
jne
adc
fwait
or
xor
loope
fdivrl
and
orl
test
push
scas
mov
inc
stos
or
push
xor
mov
fstpl
push
inc
fistpl
cmp
scas
leave
and
add
jbe
jb
in
push
dec
rcll
dec
adc
and
insl
cmc
mov
stc
sti
aas
rolb
push
jbe
xlat
in
mov
xlat
call
and
sub
ss
push
out
aaa
jno
dec
adc
lods
fsts
ds
ret
pop
loopne
mov
cmp
sti
test
jge
shlb
push
push
cwtl
xchg
adc
cmp
stc
mov
je
mov
cmp
add
loop
jmp
xchg
pushf
lret
mull
or
jo
lods
dec
xor
jle
data16
daa
sub
leave
repz
std
sub
in
lahf
imul
jb
jb
enter
sarb
xlat
ja
dec
aam
push
sbbl
js
push
cmc
aad
jo
inc
jmp
test
dec
pusha
xchg
into
pop
movsb
aam
dec
adc
inc
test
stc
mov
mov
cmc
jmp
pop
mulb
pushf
and
xlat
out
xor
xlat
js
pop
dec
adc
inc
lea
or
dec
sub
push
rcl
sbbb
or
pop
jno
sub
lea
mov
inc
fisttpll
lods
lahf
sub
dec
adc
out
or
mov
jle
xor
cmpsb
add
in
adc
lock
andl
mov
mov
clc
outsl
sbbb
cmp
ja
mov
das
js
in
jecxz
or
and
jl
jmp
push
aas
xchg
fmuls
mov
cmpsl
xor
les
add
xchg
ret
add
fisttpl
mov
pop
mov
xchg
xor
sbb
fnstcw
imul
mov
aad
xor
enter
or
aam
add
push
jno
push
inc
into
cmpb
inc
pusha
inc
pop
mov
xor
addr16
dec
pop
scas
insl
lret
bound
lods
xor
inc
leave
jp
loop
xchg
jne,pt
cltd
in
mov
scas
inc
add
push
push
mov
in
or
dec
sbb
pop
lea
repz
in
xor
fcmovu
les
inc
dec
es
arpl
push
cli
sub
add
rcll
dec
jge
mov
fildll
rclb
inc
add
mov
fcoml
push
xchg
adc
cmp
fdivrs
in
mov
cld
insl
pop
mov
and
jne
test
mov
vcmpps
inc
pop
insl
mov
mov
sahf
xor
mov
in
jb
cwtl
addr16
fadd
cmpsl
xchg
and
aaa
sub
int3
add
dec
fisubrs
sub
mov
ret
mov
and
mov
cmp
pop
push
in
push
dec
or
out
mov
cmp
add
mov
aas
addl
add
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
mov
sahf
adc
sbb
push
fists
lea
jns
mov
sub
dec
or
mov
mov
imul
or
dec
pushw
cwtl
pusha
pop
rorb
ljmp
stos
pop
mov
loope
or
mov
dec
clc
jne
and
dec
scas
mov
nop
add
and
pop
lea
negb
sbb
in
int
mov
inc
xchg
popa
mov
sub
outsl
gs
dec
roll
pop
cld
mov
repnz
popa
jns
in
jge
mov
sarb
jecxz
xchg
dec
mov
or
add
insl
cmp
sub
ja
jmp
jge
cltd
push
pop
xchg
adc
aaa
xor
int3
hlt
ret
leave
lcall
bnd
out
pop
add
ljmp
xchg
lock
insb
shll
std
gs
or
das
mov
sbb
shr
and
or
cmpsl
push
jae
inc
dec
add
mov
cmp
mov
sub
cmp
repnz
xor
xchg
in
fisttpl
push
push
aad
lds
adc
pop
mov
repnz
repz
add
pusha
push
sqrtps
addr16
or
or
add
adc
insl
out
xor
and
sub
pusha
dec
lcall
jp
add
xor
adc
xchg
push
es
lcall
pop
into
sbb
cli
inc
in
test
lret
xchg
adc
cmpsl
mov
mov
es
mov
and
clc
rcr
dec
xchg
mov
out
add
xchg
xor
or
fwait
fwait
adc
xlat
push
clc
rclb
push
push
sub
jno
bndldx
add
cmp
fld
scas
jl
cmpsl
mov
xor
jg
xor
push
lods
addr16
pop
adc
not
cmp
add
push
movsb
dec
mov
fildll
xchg
inc
fbld
aad
cmpb
arpl
adc
jne
divb
pop
repz
cltd
inc
repnz
add
jbe
mov
dec
and
mov
mov
push
sti
inc
add
jbe
pop
in
rolb
mov
mov
mov
mov
xchg
ja
cmpsl
push
mov
xor
sbb
jecxz
cld
push
andb
lret
jae
cmp
xor
shlb
sub
ret
mov
dec
pusha
js
mov
fcmovnbe
sub
lds
fldenv
mov
add
fnsave
cmp
test
xchg
dec
loop
je
mov
push
dec
inc
mov
mov
pop
data16
jecxz
call
out
sahf
inc
pop
ds
add
fsubrs
pushf
aas
pop
sahf
push
push
jb
lret
jae
pop
leave
mov
add
xchg
mov
addr16
cltd
sahf
xchg
inc
jmp
xchg
sub
or
lret
mov
add
pop
lret
cmc
add
ljmp
sub
xor
jmp
mov
out
push
pop
jb
mov
mov
rolb
lock
inc
and
mov
pushf
hlt
ljmp
paddusw
in
mov
jns
sbb
in
mov
fisttps
xlat
addl
inc
add
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
mov
sahf
adc
sbb
out
mov
notb
sbb
mov
xchg
inc
xor
ja
cli
ds
fcoml
test
imul
dec
add
andb
bound
cld
push
xchg
sub
pop
xchg
cmpsb
add
xor
jo
cmc
xlat
ja
mov
sti
jno
and
push
out
dec
fisttps
inc
mov
repnz
xchg
into
stos
mov
into
ret
jae
jns
andb
add
shlb
fistpll
lods
dec
js
addl
ljmp
sti
aas
ja
in
mov
mov
icebp
mov
inc
aad
jae
push
jbe
dec
xchg
xchg
xor
jge
pop
inc
pop
out
outsb
push
jb
adc
dec
dec
push
imul
xchg
and
in
ja
pop
sub
lahf
adc
xor
popf
dec
jmp
adc
es
std
adc
inc
jp
add
popa
push
pop
aad
mov
or
jg
sub
cmp
and
xor
aas
fistps
mov
decl
sub
pop
dec
shll
fs
scas
mov
je
xlat
cmc
fucomp
test
pop
inc
lock
negb
test
lods
mov
clc
pop
inc
add
push
movsl
sti
stos
ret
stos
test
cltd
and
mov
fs
inc
xchg
in
fistpl
ja
aaa
clc
adc
idivl
mov
and
bound
leave
insb
mov
xor
mov
sub
pop
loopne
call
test
sahf
negl
mov
fiadds
in
data16
xchg
out
je
mov
movsl
ljmp
lcall
stos
imul
xchg
sub
nop
bound
cltd
ljmp
xchg
sbb
pop
push
xchg
push
cmp
inc
icebp
cltd
mov
sbbl
jmp
jle
or
pop
sub
sub
jecxz
ret
cmp
pop
out
and
pop
cs
push
adc
ficomps
loopne
daa
icebp
ja
mov
test
cld
cmp
cld
shrb
out
mov
clc
in
and
cltd
push
test
or
daa
xchg
xor
aam
outsb
or
outsl
out
daa
inc
imul
xor
adc
pop
jb
lods
ss
sbb
mov
mov
test
fcmovbe
jo
sub
adc
xlat
arpl
stos
sub
jno
test
into
outsl
xchg
push
push
js
dec
sub
push
dec
popf
ror
lods
push
push
das
and
xor
fyl2xp1
fcmove
stos
test
adc
jo
pop
loop
stc
add
add
es
cmp
cmc
mov
push
mov
enter
push
movl
lret
adcb
lds
dec
mov
inc
les
pushf
mov
adc
cwtl
add
movsb
pop
loop
push
cli
push
or
adc
ror
adc
mov
in
idivb
test
or
add
jle
fcoml
push
jne
fimull
aam
mov
andl
in
cmpsb
mov
std
push
jmp
popa
shll
std
mov
scas
jecxz
cmpsl
jno
xor
lahf
testl
rorb
stc
xchg
and
loopne
mov
cmp
mov
inc
adc
out
int
jnp
adc
int3
inc
or
movsl
loopne
daa
or
scas
sbb
fisttpll
fstpl
fimull
and
add
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
add
stos
cmp
adc
sbb
dec
daa
fildl
fcompl
or
imul
xchg
mov
or
add
pop
popa
sti
mov
or
cmpsl
addl
in
stc
icebp
mov
push
pop
jo
mov
and
sahf
inc
and
aam
push
push
add
cmpsl
or
movb
stc
shll
cmc
inc
test
inc
aas
loopne
adc
sbb
sub
repnz
xchg
mov
mov
and
sar
mov
jg
push
mov
daa
jno
push
fldl
mov
cs
and
add
lret
jl
aas
insb
lds
push
stos
es
push
jp
ret
inc
fdivr
ffree
add
lea
subb
fs
ret
aas
add
test
xchg
mov
push
sbb
cs
or
pop
fdivl
mov
sub
pop
stos
lods
pop
ja
push
jo
or
push
jle
repnz
pop
fxch
sti
fwait
jle
insb
jno
cmp
call
pop
fstpt
sti
mov
push
int3
stos
es
fmulp
inc
jno
lock
out
clc
or
add
sahf
mov
pusha
icebp
mov
mov
test
mov
dec
mov
sub
fimuls
sahf
inc
sub
cmpsb
jmp
jl
dec
dec
shlb
push
jl
mov
dec
les
popf
mov
enter
cld
ret
pop
add
pop
mov
sahf
movb
and
scas
xchg
stc
mov
add
mov
lds
fldenv
jbe
rcrl
pop
out
xchg
js
jmp
aam
es
jge
sub
cmpsl
xorb
jne
cmp
push
test
out
test
test
enter
pushf
outsl
and
lds
pop
push
fmuls
pusha
sti
jo
mov
adc
in
in
and
cmp
mov
sbb
jbe
lret
dec
les
outsb
mov
fucomip
xchg
stos
jns
pop
dec
shll
testb
adc
jg
sbb
push
inc
dec
scas
xchg
lds
xor
mov
into
lret
push
adc
push
or
mov
sbb
stos
pop
xor
lds
sub
nop
cmp
mov
sarl
mov
or
mov
dec
fdivl
cld
nop
push
arpl
movsb
testl
pusha
lods
mov
cli
and
bound
ret
push
sub
cmp
lods
aad
iret
and
and
loop
in
dec
xchg
aad
and
or
jl
jecxz
xchg
ficompl
mov
test
mul
roll
out
stos
mov
jle
mov
sbb
mov
out
jmp
sub
pop
jne
xor
sub
xorb
push
xchg
sbb
cmpsl
test
in
enter
ret
lcall
adc
js
adc
jne
mov
and
fcom
jne
dec
test
inc
mov
std
ret
pop
mov
es
mov
mov
ljmp
mov
ret
cmp
cwtl
or
icebp
je
hlt
add
aam
cmpsl
xlat
fs
push
enter
dec
in
cmp
movl
jne
jmp
sbb
fldt
sbb
or
adc
sbb
sti
mov
sbb
xchg
cwtl
mov
or
pop
mov
xchg
sbb
cltd
je
mov
jge
in
lret
test
aam
jbe
xlat
mov
ljmp
lods
out
aas
mov
add
push
test
add
lcall
das
jl,pn
inc
add
jl
jne
pop
or
int3
call
xlat
jmp
xlat
fmul
cmp
cmc
sbb
punpcklbw
mov
mov
je
dec
pop
sub
subb
and
int3
or
out
pushf
dec
rorb
call
mov
loope
in
and
bound
insb
mov
mov
inc
or
sarb
dec
xchg
mov
sbb
sub
rcl
out
popa
push
rolb
adc
push
dec
imul
xchg
inc
and
stc
fucomi
adc
loope
adc
ja
xor
je
shl
mov
jl
enter
jg
dec
push
push
jle
cmp
dec
sub
std
jns
stos
arpl
pop
xor
inc
stc
popa
gs
aam
fcoml
jle
or
in
aas
andl
lods
mov
xor
sub
lds
sahf
fidivrs
aam
mov
in
mov
cmp
inc
or
enter
inc
call
pop
fcomi
sub
cli
icebp
pop
xchg
mov
sub
add
roll
xchg
add
sub
mov
out
mov
push
gs
lret
test
mov
lret
xchg
mov
mov
adc
jle
dec
sbb
out
divb
push
push
scas
xchg
aaa
push
pop
add
dec
pop
pusha
or
scas
jmp
ds
xchg
dec
clc
movsl
mov
jae
jg
inc
sub
imul
cmpsb
jb
dec
mov
fcomps
lock
mov
test
movsb
rclb
das
arpl
roll
mov
mov
jnp
cmc
ret
xor
xchg
pop
cmpsb
fcomps
cmp
jne
cmp
cwtl
lahf
sbb
std
jmp
movsb
lahf
sti
mov
xor
lods
cmp
cli
cmp
push
shlb
sbb
lcall
ljmp
test
pushf
and
out
nop
adc
fs
aas
rol
daa
into
xchg
mov
xchg
loop
inc
pop
dec
std
inc
push
mov
out
sub
arpl
sub
dec
movsl
mull
push
pop
adc
in
xchg
pop
sahf
cmpsb
add
aas
icebp
or
dec
cli
dec
mov
sbb
fstpl
dec
sub
outsb
das
in
out
mov
push
mov
pinsrw
sbb
nop
cli
push
cwtl
aad
roll
in
sub
push
jp
jae
cmc
jb
clc
fs
test
push
sub
nop
fcoml
movsl
iret
sub
mov
cmp
sbb
jecxz
jb
xchg
xor
dec
push
push
mov
push
mov
cli
fisttpl
into
lret
iret
ja
jbe
jecxz
mov
pop
cmpsl
xchg
mov
mov
mull
loopne
or
lea
arpl
jns
cmp
push
dec
fwait
sbb
or
push
sbb
add
pop
xor
sbb
test
inc
dec
and
jnp
and
jns
sbb
std
repz
mov
lds
ret
mov
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
xchg
sub
mov
fbstp
je
inc
jbe
test
adc
loopne
dec
xchg
or
add
mov
push
fildll
rclb
je
jno
daa
mov
hlt
aad
lahf
adc
fsubrp
arpl
sahf
out
xchg
cmp
pop
add
adc
out
inc
cmp
fwait
nop
bound
ret
negl
sub
lret
and
iret
outsl
lods
and
mov
sbb
adc
jg
inc
les
push
mov
mov
negl
mov
gs
mov
lret
mov
enter
mov
adc
add
sub
dec
cmp
add
cwtl
in
jns
pop
mov
push
sbb
outsb
sub
fists
add
stos
push
xchg
es
mov
jns
in
xor
xchg
jp
jbe
jle
jbe
ljmp
sbb
sbb
test
adcb
push
adc
jle
roll
inc
xor
sbb
scas
ljmp
ds
inc
mov
cmp
dec
jnp,pn
out
add
pop
cltd
sahf
dec
push
lcall
ja
ja
xchg
cmp
stos
je
mov
scas
pop
nop
lcall
sbb
pop
cmc
and
fsubl
push
add
inc
push
jp
cmc
ret
pop
xor
nop
sbb
mov
test
push
imul
lea
xor
cli
test
loopne
jp
pusha
pop
dec
lret
sbb
jns
xchg
mov
jnp
or
sbb
call
xchg
test
pop
fs
js
or
rorb
in
push
mov
std
das
scas
fidivrl
push
fimuls
mov
test
gs
add
dec
push
and
mov
lret
les
xor
dec
rep
mov
sbb
push
enter
mov
cmp
cli
mov
aad
or
or
mov
jno
push
push
pop
test
and
es
push
sub
in
inc
adc
jo
test
cmp
int3
shrl
lds
or
insb
xor
jge
cmp
cmc
xchg
cmpsb
fdivl
aaa
sub
adc
mov
xchg
iret
hlt
addr16
push
sbb
andb
sub
cmpsl
mov
pop
mov
inc
inc
loope
aad
mov
or
clc
mov
adc
inc
push
jp
out
jo
popa
cmp
cmp
push
sub
mov
int
fdivl
daa
aad
pusha
cli
repz
xchg
push
fisttpll
test
mov
jmp
fwait
or
aam
hlt
dec
jge
sbb
jo
mov
mov
outsb
pop
mov
pop
in
push
shll
mov
or
repz
mov
mov
pop
mov
push
dec
out
sbb
movsl
cmp
iret
pop
cmp
or
sti
mov
mov
stos
push
lods
or
mov
xor
test
jge
das
mov
psubb
scas
hlt
sub
scas
sub
mov
movsb
or
decb
pop
adc
xchg
push
xchg
ljmp
sub
ja
jmp
sti
cwtl
add
jmp
pop
push
ret
sub
cmp
cmp
test
fldcw
ret
inc
aad
push
add
pop
insl
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
mov
sahf
adc
sbb
jne
test
stos
adc
outsl
pop
repz
js
sahf
adc
mov
aad
scas
fdivl
outsb
cltd
ss
test
shll
cwtl
fwait
aam
xchg
jg
movhps
pop
pop
mov
jp
adc
cwtl
cmp
sbb
xchg
repnz
test
fwait
adc
inc
lods
jo
out
mov
mov
dec
jg
or
push
sahf
pop
and
dec
and
into
sbb
orb
fdivr
add
jnp
cwtl
imul
sbbb
sbb
add
inc
cmp
fistps
divl
rorb
int
jne
cli
mov
dec
push
push
inc
lea
roll
or
das
repnz
inc
cmp
pop
pop
nop
xchg
push
aam
jl
mov
or
cmc
sub
scas
dec
int3
add
dec
inc
cs
imul
ret
mov
dec
xchg
mov
jg
pop
add
push
or
cmc
xor
fwait
sub
push
add
mov
mov
jle
dec
jmp
add
add
mov
xchg
cwtl
js
or
aaa
cld
out
aad
orb
jne
hlt
inc
aad
sti
cmp
jge
sarb
xchg
adc
mov
cmp
dec
cmc
mov
ljmp
dec
xchg
xchg
inc
gs
test
and
je
pop
fldl
xor
pop
xor
inc
mov
dec
fsubs
fnsave
pop
xor
and
or
xor
cmpsb
in
adc
ret
inc
ja
sbb
mov
sub
fdivrp
stos
addb
add
fbstp
in
or
nop
ret
xor
add
test
cwtl
ljmp
stc
hlt
ds
sahf
das
addl
pop
mov
sbb
cmpsb
xor
inc
push
add
sub
push
or
mov
xor
movb
ror
imul
pop
push
movsl
enter
xchg
pop
roll
cwtl
mov
sarl
scas
adc
sarb
xor
cmpsl
add
mov
movsb
scas
pop
out
andb
push
call
pop
test
je
insb
adc
pop
es
push
push
adc
sub
mov
scas
or
insb
jmp
dec
cmp
push
popa
icebp
xor
adc
std
jno
fwait
push
insl
call
jne
push
addps
adc
pop
das
cmc
mov
xchg
inc
aaa
add
mov
iret
in
test
push
and
fnstenv
inc
push
nop
fwait
ss
fidivrl
lock
dec
jbe
push
inc
mov
bound
mov
xchg
push
jge
fiadds
insl
nop
push
xchg
or
int3
cmpsb
dec
or
push
jno
aad
xlat
pmaxsw
or
mov
fldt
sbb
in
push
push
aaa
adc
repz
xlat
mov
rolb
lods
mov
sbb
in
int
cmpl
je
pop
add
and
pop
dec
adc
adc
pushf
lcallw
cmp
xchg
aas
and
jge
or
mov
mov
int
in
dec
fdivp
xor
adc
mov
fstl
or
outsb
icebp
enter
in
adc
neg
stc
push
das
decb
push
aaa
cmc
cmp
jmp
and
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
xchg
adc
mov
iret
sbb
sahf
adc
sbb
iret
outsb
add
add
mov
add
mov
xor
adc
lods
fstps
pop
push
addl
mov
pop
sbb
pop
push
xlat
stc
fildll
push
or
fistps
mov
fiaddl
mov
adc
mov
push
push
je
xchg
hlt
fisubrs
dec
insl
jge
mov
push
mov
andb
fisubs
dec
leave
xor
sbb
pusha
stc
scas
mov
fisubrs
out
cmp
jmp
insb
ss
add
fcomi
xchg
mov
mov
push
xchg
imul
pop
mov
cs
mov
mov
or
adc
in
mov
dec
lahf
xchg
lret
xchg
or
pusha
jmp
and
jne
cmp
xchg
jnp
push
mov
mov
imul
cld
das
push
push
inc
push
push
leave
pop
bswap
into
cmp
or
jmp
xor
in
adc
dec
incl
jmp
adc
jle
and
test
loop
push
mov
outsb
and
mov
sahf
sub
mov
mov
test
adc
mov
outsb
sbb
ds
pushf
sbb
jae
and
xor
mov
inc
jp
dec
fistps
inc
int
mov
stos
and
push
sub
les
imul
fbld
dec
push
fisttps
mov
loope
push
sub
cli
enter
sbb
hlt
mov
mov
cmp
and
loop
mov
lods
clc
cmp
inc
fcoms
sub
push
ljmp
add
mov
push
test
imul
in
movsl
mov
mov
rorb
scas
cmp
leave
scas
xchg
push
add
fildll
jp
add
dec
mov
addb
pop
loop
sub
cwtl
pop
add
ja
aas
test
stos
mov
ss
sbb
movb
and
aad
aam
mov
jbe
cs
testl
add
push
fcompp
rcll
stc
mov
pop
loope
xchg
aad
cmpsb
lods
xlat
sub
out
in
in
lock
or
xor
xchg
shrb
je
and
gs
lods
pop
xchg
add
xchg
loopne
mov
or
pop
xchg
sbb
jnp
movsb
stc
movsl
faddl
fsubp
cmp
pusha
push
mov
xchg
sbb
in
std
push
mov
mov
mov
sub
sarl
pop
imul
fs
loop
test
xor
push
jecxz
sti
inc
lahf
jnp
lcall
aad
adc
imul
lcall
lcall
jno
and
pop
push
shrl
or
or
xor
sbb
mov
mov
mov
push
push
test
daa
lahf
lahf
sub
pop
add
sub
cmp
cmp
adc
push
cmpsl
stos
pop
mov
xor
xor
imulb
sbb
pop
mov
pushw
xchg
push
or
cmp
inc
mov
and
cmp
loopne
ret
out
shlb
mov
lods
popf
ror
add
lcall
cmp
xlat
shrd
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
pop
icebp
xor
subl
xor
push
rcl
jmp
enter
mov
gs
pusha
rclb
push
sets
shrl
push
or
lods
xchg
fwait
sub
insl
stos
cmp
push
sbb
push
pop
push
xchg
repz
mov
push
daa
sbbl
lahf
popa
mov
xchg
arpl
ret
hlt
mov
dec
mov
dec
jecxz
sbb
lea
inc
pop
jmp
push
or
addr16
jns
shll
inc
es
pusha
push
je
je
push
icebp
mov
fstpl
mov
gs
inc
dec
fsubs
nop
mov
cmp
inc
ljmp
and
int
jo
mov
pop
push
add
faddl
stos
lods
jae
fs
out
lock
or
xchg
outsl
mov
sub
movsb
jecxz
mov
insb
incl
xchg
sti
fstps
stos
ret
sar
loopne
lret
jg
mov
pop
loop
xchg
mov
xor
test
shrl
push
lea
inc
pop
xlat
lock
mov
xchg
xchg
jbe
adc
in
jle
dec
inc
imul
mov
adcl
mov
repnz
sarb
cmpsl
inc
scas
roll
lret
repz
sub
sub
push
leave
push
lea
in
sub
aam
fs
cs
loopne
jl
or
dec
frstor
xchg
fadds
int3
pop
ret
jl
pop
sub
ret
push
cli
fmull
mov
dec
mov
js
in
xchg
sub
add
lahf
outsl
ffreep
adc
mov
cmp
sahf
jp
dec
idivb
std
rcrl
cltd
pop
xor
fimuls
jne
enter
out
lods
dec
hlt
fistl
fwait
arpl
test
jae
adc
adc
f2xm1
dec
jb
fdiv
or
insb
or
cmpsb
add
xor
loope
stos
add
dec
adc
add
ret
pop
cmp
push
call
clc
into
scas
mov
xor
mov
addr16
mov
into
data16
fidivs
icebp
inc
out
loop
inc
fiadds
enter
outsb
jne
inc
dec
ror
cltd
mov
mov
clc
or
jecxz
sbb
cmp
add
shlb
cs
scas
pop
push
pop
fstps
push
xchg
inc
mov
xor
fmul
pop
push
sbb
pop
imul
repnz
lcall
add
and
out
xor
xchg
clc
ret
mov
xchg
jo
dec
fwait
cmc
pop
cld
daa
push
mov
outsb
push
mov
sahf
sub
mov
out
loopne
outsl
pop
or
insb
sub
movsb
stc
add
lret
cmpsb
push
push
dec
cmp
movsb
fwait
nop
imul
scas
mov
stc
popa
ja
mov
push
popa
pop
out
xchg
adc
mov
test
pop
orl
jmp
pop
and
dec
ds
push
scas
in
jg
cmpsb
jb
repz
and
enter
sub
add
fwait
stos
aam
lret
aaa
cmp
push
sbb
mov
insl
jns
or
cmp
lds
push
mov
sub
add
outsb
mov
jmp
lcall
sbb
repz
loope
in
icebp
ret
imul
lods
mov
hlt
push
inc
mov
xchg
push
xor
lds
or
in
add
aaa
addl
shr
flds
add
scas
ds
and
sbb
fsubrp
push
stos
jbe
repnz
rcrl
sahf
adc
sbb
subl
rcl
mov
xchg
dec
addr16
in
iret
out
pop
fildl
mov
push
sub
lcall
add
xchg
scas
popa
pop
test
inc
dec
inc
mov
sub
or
in
xchg
xchg
cwtl
stos
in
je
bound
xchg
mov
mov
ja
repnz
clc
push
push
xchg
lock
xor
push
add
sbb
rorb
cmp
inc
sarb
push
push
add
hlt
ret
addb
mov
push
xlat
dec
push
out
je
imul
js
loopne
movsb
mov
cmp
sahf
scas
add
mov
xor
xorl
jle
inc
push
in
jo
mov
mov
out
imul
fimuls
dec
push
push
cwtl
lahf
xchg
sahf
test
dec
sbb
add
xchg
inc
add
push
jg
mov
out
addr16
enter
mov
insb
adc
ret
stos
fsub
mov
xor
jbe
shrd
lea
pop
xor
ret
sti
mov
add
loope
pop
lea
dec
add
cmc
mov
xchg
sub
push
bound
cmp
jne
inc
aam
jae
fld
movsb
popf
mov
jmp
fisubrs
stos
movsl
addl
ret
stos
gs
jo
imul
dec
push
clc
and
call
cmp
aaa
pop
rcrl
lret
call
mov
repnz
cmpsl
lods
xor
stos
inc
adc
rcrl
pusha
testb
push
mov
dec
cmp
adc
push
adc
cmpsb
ljmp
jae
pop
int
cmp
pop
addb
push
inc
loop
mov
std
pop
or
divb
rclb
add
mov
call
pop
jns
dec
add
push
sub
mov
mov
mov
and
push
lods
add
adc
je
out
xchg
push
ror
sub
in
cli
xchg
ret
and
leave
dec
rcll
in
imul
fmuls
shl
push
call
push
out
jg
inc
mov
les
jae
lock
sbb
mov
imul
cwtl
movsb
in
scas
mov
or
call
sbb
test
shr
addr16
clc
xlat
in
pop
or
repz
mov
adc
xchg
mov
rcrb
jne
je
outsb
mov
jne
cmp
std
jl
inc
out
cmp
jecxz
lods
fisttpl
jnp
cltd
jb
andl
push
xor
bndldx
mov
int3
add
cs
adc
addr16
loope
mov
ja
adc
lock
xchg
rorl
and
sbbl
inc
and
mov
movsb
push
xor
cld
mov
sbb
mov
aas
aam
inc
je
xor
cld
mov
xchg
addr16
ret
mov
mov
sahf
andb
mov
add
push
jo
test
jbe
test
mov
unpcklps
sub
mov
adc
push
jno
fbstp
int3
je
lds
jecxz
ljmp
sbb
addl
jmp
and
repnz
mov
mov
das
in
or
mov
rsqrtps
mov
sbb
or
sbbl
shl
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
mov
jmp
sbb
adc
pop
dec
mov
outsl
ss
mov
shlb
mov
pop
mov
add
push
cmp
jne
fnstcw
push
in
pop
outsl
sub
push
cld
jnp
ljmp
inc
push
dec
and
or
sbb
fdivr
in
test
mov
xor
sub
out
jle
mov
sti
movsl
repz
inc
repz
push
mov
adcb
sub
inc
out
pop
repnz
arpl
add
ja
loopne
loopne
jmp
adc
sbb
in
test
mov
ljmp
cmp
stos
dec
jmp
stos
sbb
or
enter
rorb
lods
div
movsl
scas
xor
es
pop
cmp
cmp
test
push
push
xor
rcll
into
mov
push
outsb
aam
jno
adc
test
mov
rorl
add
lock
scas
fdivl
gs
fisubrl
adc
adc
inc
xchg
add
jbe
and
mov
add
sbb
sbb
inc
jne
loope
sub
xchg
cbtw
mov
sbb
jl
leave
mov
cltd
pop
jge,pt
daa
iret
mov
lahf
adc
dec
xor
cmpsl
out
es
std
jno
sbb
aaa
mov
lods
adc
lock
popf
orl
and
in
cwtl
psrad
mov
push
or
cld
lds
or
into
jae
push
bound
fcoml
jecxz
testl
rcll
or
clc
enter
sti
or
push
mov
mov
push
andl
addb
sbb
lock
bound
jnp
xor
dec
mov
mov
mov
jmp
push
aas
adc
in
sub
mov
jbe
mov
inc
ret
mov
and
test
mov
mov
or
xchg
and
pusha
js
add
mov
rol
xlat
add
adc
push
mov
adc
dec
push
aas
outsl
fisubrs
jp
or
out
insb
push
pop
pop
push
ret
loop
fwait
mov
mov
iret
pop
mov
sub
jae
popa
mov
push
inc
insl
sbb
call
sub
xor
xchg
pop
in
orb
iret
inc
cmp
movsl
or
push
push
cwtl
outsb
shrl
inc
out
fs
out
test
adc
imul
xor
or
jns
fs
push
dec
ret
stos
mov
adc
cmp
and
arpl
inc
ds
sub
cmpb
fildll
scas
fimuls
cmp
scas
sub
push
push
lods
and
adc
ficoml
insb
mov
cmpsl
lret
in
add
mov
fdivl
loopne
stc
jae
mov
jb
das
daa
xor
add
push
push
pop
mov
fisubs
mov
mov
movsb
jb
es
pop
icebp
in
and
ret
out
imul
out
pop
mov
fs
bound
jbe
imul
mov
sbb
test
cmp
sbb
divb
sub
jp
sbb
ljmp
jecxz
mov
icebp
mov
fisttps
xlat
decb
push
or
gs
cwtl
rcrb
add
repz
out
pop
dec
sbb
sti
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
call
sbb
sahf
adc
sbb
popa
das
pop
in
and
mov
mov
jns
add
fcomps
push
mov
jo
ja
test
pushl
bound
mov
scas
add
mov
stc
ss
sti
fsubr
clc
sbb
dec
sti
jmp
mov
fdivl
add
cld
js
cmp
es
cmp
xchg
out
xchg
dec
pushf
mov
fnstenv
mov
sub
sbb
fsts
fwait
lahf
in
cltd
imul
push
inc
and
cmp
in
out
addr16
sbb
sub
cmp
aam
add
or
push
adc
aad
cmp
out
and
shl
dec
cmp
xor
mov
lcall
cld
in
repnz
sahf
fucom
mov
fsub
test
cmp
mov
mov
push
lret
loop
xlat
mov
ret
mov
mov
call
int
or
jne
sbb
cmc
xchg
cld
idivb
add
fsubl
mov
ret
repz
dec
fxch
iret
in
adc
or
ret
adc
repnz
lret
pop
sub
mov
shll
lret
inc
fildl
ret
cmp
and
mov
dec
or
pop
push
lods
int
xchg
mov
dec
lahf
mov
cmp
push
enter
leave
mov
iret
cmpl
leave
push
fisttpll
pop
mov
push
decb
jl
push
mov
fildl
cmp
lcall
in
push
and
mov
int3
mov
mov
loopne
dec
adc
pushf
or
es
push
mov
jle
push
and
pop
hlt
imull
sti
imul
insb
cmp
int
inc
xor
mov
cmpsb
and
mov
mov
leave
or
out
mov
push
inc
in
jmp
outsl
sub
outsl
sbb
rol
push
mov
inc
pop
cmp
jbe
fldcw
int3
pop
fldenv
cltd
fldcw
lods
and
add
clc
jns
int3
push
and
push
dec
adc
sub
fbstp
int3
jbe
or
in
dec
sub
outsl
jecxz
cld
aaa
jle
imul
loope
dec
in
lcall
stos
or
push
or
jecxz
sti
jmp
inc
or
lcall
mov
xor
adc
sub
les
xchg
jae
or
pop
in
add
inc
cltd
dec
leave
test
fwait
jno
insl
sub
xchg
xchg
xchg
jmp
popf
push
cmp
xchg
testl
and
fldt
scas
sub
sub
cs
sbb
push
rcll
mov
pop
sbb
int
test
and
mov
xchg
mov
adc
int
sub
dec
xchg
jge
pop
pop
xchg
xor
xor
push
jmp
shrl
imul
mov
sbb
mov
nop
jnp
or
inc
lcall
pop
in
es
fisttpll
jg
fst
fwait
push
lahf
mov
into
xchg
fbstp
nop
mov
xchg
test
cmp
fists
addr16
icebp
add
sbb
pop
inc
or
jns
loopne
movsl
jns
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
iret
arpl
adc
sbb
hlt
mov
aas
mov
in
cmpsb
cmpsl
les
test
mov
dec
les
push
adc
mov
dec
in
int3
gs
or
cltd
leave
aaa
xchg
rclb
das
xor
out
mov
std
nop
ucomiss
xchg
stos
je
clc
or
dec
xchg
enter
inc
daa
mov
cmc
mov
jnp
mov
stc
sub
lret
xor
lods
cmpsl
gs
scas
xchg
pop
inc
fwait
ja
dec
loope
mov
add
dec
int3
sbb
movsb
adc
ljmp
outsl
repnz
faddl
shll
dec
xchg
and
imul
or
xor
mov
and
movsb
lret
push
addr16
sbb
popf
and
jecxz
mov
pop
ljmp
pop
out
sub
addb
std
aad
in
inc
xchg
fimuls
in
ds
xor
pushf
jns
fistl
pop
jp
inc
popa
std
fsts
sbb
dec
push
punpckhdq
mov
and
mov
addr16
incl
ja
xchg
leave
sbb
stos
lods
jno
lar
push
xchg
or
fisttpl
xchg
sbb
repnz
mov
hlt
jle
sbb
fwait
jne
jmp
enter
clc
lock
cmpsb
jae
mov
mov
stc
jo
pusha
jl
inc
or
jp
or
ds
sbb
mov
xchg
mov
loop
sbb
sub
jecxz
imul
mov
arpl
add
loop
dec
push
mov
or
mov
cmpsb
test
test
xchg
mov
mov
cmp
xchg
pop
cltd
mov
or
xlat
xchg
out
cmp
add
xlat
rolb
mov
mov
insl
imul
stc
xor
push
dec
adc
and
mov
pop
mov
jbe
add
cltd
xor
repnz
movsl
cmp
push
inc
and
dec
scas
push
aam
adc
pop
imul
mov
pop
fisubs
loope
adc
lods
mov
les
mov
mov
roll
dec
in
sahf
loop
xorb
in
sbb
jae
orb
ljmp
mov
test
mov
notb
sub
popf
pusha
jecxz
ljmp
sub
pop
lret
hlt
sub
orb
xlat
push
xsha256
cmpsb
adc
gs
xor
aaa
mov
aad
bound
lret
pop
je
xor
cmp
arpl
adc
dec
popa
jb
push
mov
push
das
fwait
and
pop
mov
ret
in
jmp
jbe
pop
sub
imul
jae
dec
aam
sub
aad
leave
mov
stos
push
fwait
pop
xchg
mov
and
mov
sbb
outsb
sub
xchg
imul
call
xchg
dec
aam
add
push
repnz
fmull
xor
add
sub
adc
dec
or
aam
sbb
call
lea
rcl
mov
pushf
lret
pop
mov
xchg
fmul
push
enter
push
scas
jle
jns
insb
jno
xchg
clc
iret
jecxz
cmp
fistpl
xadd
mov
movsb
cmp
dec
cltd
fdivl
fsts
or
call
ret
mulb
inc
add
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
xor
imulb
mov
sbb
push
xlat
xchg
sub
or
xchg
xor
mov
pop
and
mov
cmp
int
loop
adc
sarl
push
push
mov
cmp
or
xchg
push
sub
sub
repz
pop
or
icebp
divb
clc
enter
paddd
and
mov
push
push
stos
cmpsb
sub
inc
stos
leave
mov
lcall
pop
imul
stos
push
inc
lahf
test
inc
cmp
xchg
xchg
adc
out
aaa
cmp
fdivl
sub
xor
imul
shll
daa
mov
dec
pop
xorb
sbb
lds
sub
mov
pushf
pop
xchg
pop
or
pop
data16
and
sub
pop
movsb
in
xor
jbe
iret
cmpsb
outsl
hlt
comiss
lods
mov
fisttps
jecxz
loop
add
mov
rorb
pop
dec
or
push
pop
jg
test
dec
dec
out
inc
leave
clc
push
call
xor
or
clc
insl
test
pop
xor
sub
jmp
insl
dec
rcrb
dec
inc
inc
lahf
lret
sbb
inc
jns
and
lods
orl
test
add
mov
or
call
cmpsb
test
inc
mov
out
dec
push
jo
cmp
fists
inc
xchg
das
pop
and
repz
cmp
xor
push
xlat
test
jbe
pop
test
mov
ficompl
or
mov
out
outsb
movmskps
aaa
addl
into
inc
xchg
popf
jae
dec
inc
insl
sub
mov
pop
mov
add
lods
test
js
pop
notb
inc
ljmp
xlat
mov
jmp
test
inc
psraw
in
xchg
sbb
cmp
cmp
pop
outsl
aam
cmp
inc
dec
and
push
mov
and
aam
push
pop
test
popf
pushw
std
jmp
cmp
mov
cmp
negl
dec
or
in
cmp
mov
inc
into
sub
xor
ja
in
and
pop
in
pop
fwait
arpl
test
std
aam
loopne
addb
or
mov
jbe
pop
pop
add
gs
xchg
and
push
pop
sub
sub
test
cmp
enter
mov
or
es
call
pop
sti
and
in
mov
pop
or
sub
adcl
clc
jno
sbb
and
push
mov
and
cltd
mov
iret
sbb
add
pop
popa
incl
jo
xchg
in
dec
pop
inc
stc
cmp
pop
pusha
gs
repnz
popa
mov
ret
daa
mov
ja
mov
pop
shr
push
push
jp
dec
xchg
pop
xchg
xchg
lret
jmp
push
push
inc
mov
push
mov
mov
popa
lods
lahf
or
popl
xchg
dec
repz
cmp
sahf
dec
pop
fstp
pop
jns
push
xlat
dec
cli
cmp
dec
push
jle
jne
pop
loop
into
mov
fbld
ja
cmp
or
jne
lods
daa
jp
pop
xchg
test
push
not
mov
out
fnstsw
push
dec
sub
cmpsl
inc
inc
lods
ja
push
cmp
inc
ja
push
adcl
xlat
jle
ljmp
frstor
sub
popf
add
mov
out
inc
in
ret
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
leave
icebp
mov
adc
add
fisubs
fst
cmpsl
mov
push
mov
dec
data16
pextrw
mov
movsl
mov
aad
jecxz
lea
jmp
int3
or
pop
sub
jns
and
adc
rcrl
jno
xor
lock
call
ret
mov
push
mov
mov
adc
xchg
aad
jl
push
into
xchg
jmp
cmp
mov
mov
rorl
and
sbb
icebp
into
loope
mov
in
sbb
push
sti
pop
pop
rcll
loopne
cmpsb
repz
xchg
mov
insb
fcomp
jns
jl
rorb
popf
cs
inc
scas
mov
sbb
dec
cmc
mov
cld
dec
or
clc
jbe
ja
cmp
cmc
rcr
hlt
mov
push
pop
and
out
or
cmp
bound
pop
add
mov
scas
test
sbb
fidivl
loope
test
je
dec
loope
inc
mov
jle
jecxz
scas
cmp
sbb
cmp
adc
aas
add
pop
mov
xor
lret
inc
sbbl
inc
jle
out
enter
loopne
int
cmp
aam
sub
mov
or
mov
sub
aaa
dec
aad
push
xor
mov
and
xor
inc
pop
lahf
dec
pop
aaa
pop
xchg
pmulhw
je
mov
in
fwait
xor
lret
mull
mov
aas
push
sbb
inc
mov
inc
cmp
push
daa
push
test
cli
lahf
inc
inc
aad
jmp
sbb
mov
scas
cld
sbb
xor
stc
xor
pop
lcall
aad
outsl
or
ret
push
jmp
stos
data16
add
adc
mov
adc
pop
rcr
sti
pop
lahf
mov
mov
addb
push
sbb
push
xchg
xor
nop
insl
cmp
pushf
xorl
lock
mov
sub
mov
cmp
ret
xchg
test
lcall
xor
cmp
xor
insl
sbb
cmp
pop
out
pushl
dec
daa
jmp
push
mov
out
les
loop
scas
push
push
testl
mov
cli
xor
dec
inc
in
lds
inc
add
pop
nop
adc
cmp
inc
outsl
mov
dec
fstpl
outsl
sub
mov
xor
shr
adc
xchg
lods
sti
add
nop
push
gs
mov
pop
mov
lock
adc
cmp
in
cmp
les
out
es
clc
stos
xchg
xchg
test
mov
inc
repz
movb
mov
cmp
jmp
lcall
ja
jecxz
add
xchg
das
sarb
inc
mov
mov
test
jno
popf
xchg
cmpsl
test
lret
sub
loopne
pop
pop
mov
xchg
push
fistpl
sub
fisubs
add
jb
sub
xchg
push
push
mov
xchg
push
and
mov
out
jbe
pop
mov
scas
jecxz
cmp
das
subl
sbb
fsts
push
lds
decb
rcrb
aas
sti
jb
fnstenv
sbb
push
and
lods
lock
pop
add
hlt
cld
orl
divl
lcall
fdivr
in
inc
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
add
dec
aam
jnp
pop
jbe
pop
dec
fcomp
into
xchg
out
cltd
lock
push
jno
in
cmp
jo
je
jnp
sahf
daa
jg
jp
dec
fneni(8087
fs
addb
inc
cmpb
ljmp
mov
mov
sbb
xchg
mov
sarl
arpl
repz
xor
and
push
out
inc
xor
inc
jns
xchg
dec
pop
mov
mov
ss
jle
jns
iret
pop
loop
push
sub
push
outsl
iret
in
mov
mov
mov
js
mov
rol
gs
mov
lcall
ljmp
lret
out
xchg
daa
ja
mov
and
push
sbb
push
aas
xor
cmc
push
mov
mov
ret
out
mov
pop
dec
mov
ret
add
cmc
lahf
call
std
push
fs
sbb
and
pop
pshufw
ficompl
mov
aad
aaa
push
out
testb
jmp
or
mov
leave
adc
mov
push
test
call
aaa
insb
push
jge
aam
cmpb
or
mov
add
rcrl
insb
dec
or
cwtl
mov
mov
or
cwtl
mov
icebp
mov
cld
jle
sahf
inc
jle
mov
sbb
sbbb
fs
or
adc
xlat
adc
add
cmp
and
jle
sub
aaa
jno
std
xor
int3
jns
shlb
sti
jecxz
hlt
mov
sbb
ja
cmpb
xor
addl
js
clc
add
setbe
xchg
mov
push
and
push
jae
pop
outsb
jo
xor
lods
jg
lahf
mov
or
lods
in
push
and
jge
ret
notl
push
jp
add
xchg
or
out
iret
imul
dec
pop
and
data16
mov
mov
movsl
adc
fdivl
cmp
lds
ljmp
sub
xor
stc
mov
cmp
push
sbb
stos
shlb
jo
dec
daa
pushl
xor
cltd
stos
hlt
sahf
lahf
fisubrl
addr16
lods
lock
xchg
inc
pop
mov
fildll
pop
out
pop
adc
enter
push
mov
mov
inc
cmpsl
test
sub
in
or
add
sub
or
xchg
jg
ss
adc
push
imul
std
cmp
pop
or
mov
repnz
jae
mov
loope
lret
xchg
inc
std
les
and
test
inc
jg
add
hlt
pop
pop
std
pop
in
orl
fiaddl
stos
ss
add
push
sub
xchg
mov
adc
sarl
fwait
dec
xor
xchg
push
cld
jno
dec
sbb
ljmp
iret
fistpll
ret
shr
pop
pop
cmp
les
add
xlat
fcomps
jg
dec
dec
push
push
jae
sbb
fistps
scas
cwtl
push
mov
in
pop
mov
and
mov
push
jl
pop
pop
xorb
adc
pop
xchg
xor
sub
mov
xchg
imul
sbb
jmp
fmull
es
pop
cld
fmull
jno
ds
sarb
bound
add
mov
or
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
aad
mov
sahf
adc
sbb
int3
cmp
push
enter
incb
in
pop
jno
sub
push
test
add
add
clc
jno
cs
je
imul
and
or
mov
push
pop
add
fwait
or
cmc
test
or
sbb
mov
jle
jbe
pop
inc
inc
jne
std
jnp
pusha
cmpsb
fwait
testb
sub
xchg
push
dec
fnstcw
lock
lods
sbb
arpl
sahf
mov
addr16
lahf
out
add
stc
and
in
and
mov
scas
pop
push
call
stos
push
mov
je
mov
jmp
add
pop
fcoml
cmp
pop
fdivr
std
mov
jg
loopne
iret
adc
shll
int3
and
xor
mov
test
dec
std
lahf
mov
xor
or
sub
xchg
pop
or
mov
pop
call
sub
mov
loopne
sar
adc
rolb
pop
jb
adc
shrb
nop
adc
sbb
fldt
loopne
outsb
and
lods
xor
xchg
sbb
aas
cmp
jmp
repz
pop
test
stos
jp
jbe
push
fldt
xchg
gs
mov
and
lods
or
loope
and
fs
mov
or
in
popa
dec
mov
outsl
mov
jbe
add
jg
or
enter
inc
push
dec
push
sahf
leave
lret
dec
in
cld
fstl
cmc
jae
scas
mov
mov
mov
jle
cmp
cltd
int
ljmp
in
dec
and
mov
enter
int3
pop
lcall
cmp
push
jns
jecxz
int3
mov
fcomps
test
inc
das
pop
push
aaa
jbe
aas
sbb
sub
out
fsubrs
popf
inc
mov
jmp
cmp
cmp
mov
sbb
rorb
jecxz
sub
notl
rcll
mov
cltd
adc
in
mov
jl
inc
xor
jmp
enter
hlt
mov
or
mov
mov
jns
mov
pop
dec
int
js
in
icebp
out
lcall
mov
lds
rolb
or
js
imul
ret
js
and
cli
movsl
clc
outsl
mov
add
pop
pusha
sbb
ljmp
pop
pop
jbe
shl
out
mov
into
jno
push
shr
cld
outsl
mov
lods
push
or
test
pushf
jg
adc
mov
lods
aas
inc
test
enter
repnz
push
push
pop
outsl
or
negb
sbb
icebp
shll
int
sarb
inc
fs
inc
into
xchg
inc
pop
fbstp
aam
loop
adc
mov
iret
add
sarb
sar
sbb
mov
aas
mov
fidivs
mov
cmp
mov
fs
cmpsl
and
xchg
insb
aas
xchg
add
cltd
lret
add
lea
cs
push
imul
jo
adc
mov
ljmp
add
dec
lea
into
lcall
repnz
push
inc
inc
nop
lods
xchg
mov
jns
jno
divb
jmp
arpl
fstl
cmpsb
pop
or
mov
jge
cmp
cwtl
enter
xor
mov
sbb
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
cmpsl
ret
fwait
jo
test
sbb
mov
xor
decl
or
add
popf
dec
rcr
dec
movsb
mov
ljmp
fsubs
xor
out
enter
cmp
packsswb
dec
mov
or
jmp
push
movsl
subb
add
test
fdivrs
adc
int3
jecxz
cmpsb
or
test
cmc
push
adc
stc
cltd
or
push
xor
sbb
push
xlat
inc
or
xor
out
lods
inc
sub
icebp
mov
je
mov
mov
sub
ret
or
cmp
cmc
dec
cmp
dec
push
cmpsl
addr16
inc
out
fistps
sub
push
push
xor
adc
add
push
adc
bound
add
pop
mov
jo
mov
lods
xchg
adc
daa
scas
adc
xchg
sub
fisttpl
idivl
or
xchg
popa
rcrl
scas
or
xchg
or
adc
call
add
addr16
jno
cli
sbb
cmpb
xchg
sbb
inc
fbld
addb
scas
test
dec
pushf
call
aas
jle
xchg
xor
aaa
sbb
or
adc
inc
inc
dec
inc
ja
fmull
mov
sbb
jecxz
stos
repz
or
pop
outsl
or
adc
xchg
cmpsl
testl
lock
ror
or
out
push
and
sbb
lock
mov
jmp
testl
fs
sub
and
add
xchg
mov
pushf
lods
es
inc
jmp
xor
arpl
jl
or
add
ds
cmp
test
fsubl
enter
adc
xor
out
dec
mov
lods
lods
into
jo
into
enter
jns
mov
or
mov
xorl
mov
hlt
mov
push
repnz
addr16
mov
pushf
ficompl
fistpll
inc
xchg
pop
inc
lcall
cmp
push
imull
fcmovnu
js
loopne
lods
movsb
in
push
jbe
jb
shlb
adc
sub
inc
into
xchg
cmp
shrb
inc
inc
mov
add
cmp
xchg
in
ljmp
test
addb
push
cmp
movb
out
mov
lods
jl
and
pop
dec
mov
cmpsb
in
cmp
neg
jl
lods
cmp
nop
inc
adc
push
notb
sbb
gs
dec
mov
xchg
ret
mov
in
adc
mov
cmpsb
int3
mov
out
xor
jb
adc
xor
mov
fdivrl
shr
mov
push
pop
out
sbb
nop
das
mov
dec
and
pushf
push
arpl
sbb
xor
pop
add
push
xchg
add
outsb
popf
xor
cmpsl
xlat
movsl
add
push
adc
test
iret
lods
dec
pop
push
sahf
xchg
lahf
or
jns
fsubs
fcomps
fldpi
cmpsl
pop
out
sti
stos
dec
lea
jl
mov
sub
cltd
test
icebp
add
ljmp
jne
mov
jg
cmp
mov
and
jecxz
mov
inc
dec
adc
loop
push
loope
loop
add
mov
mov
dec
fnstenv
jl
out
lret
dec
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
fstl
sbb
dec
cld
fucomip
mov
mov
adc
enter
push
cmp
inc
rol
pop
and
add
fstpl
add
ficoml
das
int3
clc
mov
adc
lcall
adc
and
mov
adc
arpl
mov
ja
addl
push
scas
outsb
js
imul
jnp
sbb
push
push
inc
dec
mov
xchg
jno
pop
into
out
stos
inc
or
sub
inc
xor
or
lret
xchg
stc
lods
xchg
cwtl
push
jns
lock
repz
js
jecxz
nop
es
lea
or
or
push
jb
les
in
pop
jbe
mov
push
fnstenv
in
das
in
outsl
movl
mov
fisubrs
mov
mov
repnz
lock
les
cld
jns
pop
hlt
sbbl
mov
in
pop
rcrl
jg
mov
cmp
and
out
sarb
add
test
push
nop
cmp
push
push
pop
mov
xchg
outsl
mov
fwait
movsl
test
cmpl
sub
in
cld
fcomp
add
ds
je
sbb
adc
call
dec
dec
ss
es
cmp
shlb
int
roll
aad
mov
jne
divb
loope
outsb
lock
or
popa
add
sbb
mov
call
pop
int3
roll
and
rorb
push
jmp
imul
push
dec
or
sub
xor
in
fwait
mov
inc
in
push
pop
lret
push
inc
mov
roll
out
fldl
ret
sbb
shll
inc
cs
mov
cmp
push
call
mov
sbb
jg
idivb
mov
mov
ret
outsb
mov
pop
or
imul
mov
shr
outsb
cmp
fimuls
imul
pushf
add
clc
add
mov
xlat
jmp
mov
cmp
xor
push
xor
stos
mov
std
fwait
sub
lds
arpl
xor
pop
mov
bound
mov
xor
pop
fistps
sub
repz
sub
fisubrs
out
incb
int
push
push
xchg
sub
pop
sbb
cmpsb
xor
add
sub
xor
cmpb
push
adc
sbb
push
out
insb
pop
mov
adc
daa
in
fisubrs
lock
fistpll
rcll
int
lahf
mov
js
mov
jns
scas
push
jp
cmp
lock
push
mov
in
pop
inc
jmp
push
jmp
fbstp
aas
cmc
and
lods
or
push
decb
repz
jb
push
sub
mov
sahf
mov
fidivl
sub
insl
xchg
test
pop
pop
out
imul
inc
dec
xchg
imul
jge
pop
sti
jne
addr16
mov
jmp
scas
data16
popf
xchg
push
es
jns
lcall
push
mov
xlat
ret
sbb
scas
sbb
xchg
gs
adc
xor
mov
into
and
mov
jmp
repnz
jmp
imul
pushf
pop
jle
pop
pop
jo
jne
sbb
test
lods
push
mov
dec
mov
lret
setle
add
inc
inc
mov
xor
or
and
xorb
stos
rcrl
cmp
lret
sub
into
xchg
mov
sbb
subl
movsl
loop
insb
lret
iret
bound
dec
cli
mov
xor
xchg
iret
add
mov
xchg
pusha
lret
jl
addr16
call
aas
std
in
inc
daa
cmc
inc
out
stos
mov
sahf
dec
fildll
or
pop
inc
std
push
inc
cmpsb
add
imull
or
into
sbb
xchg
jo
mov
test
in
fs
gs
pop
dec
push
out
jmp
xchg
loopne
lret
stos
xor
imul
lcall
lock
cmp
dec
cmpsb
mov
mov
mov
add
jg
and
and
jmp
mov
or
hlt
dec
inc
add
test
xor
mov
imul
clc
cld
movl
int
arpl
pop
mov
pusha
sti
fucomip
mov
mov
std
sar
loopne
out
mov
dec
mov
adc
cmp
inc
out
data16
stos
jl
xchg
pop
call
popa
int3
and
testb
cmpl
jo
pop
dec
inc
les
lret
xchg
iret
incl
push
adcb
lods
sub
sub
pop
sbb
and
jmp
xchg
add
mov
fstpt
repz
dec
xlat
jo
push
sarb
cmp
add
js
shl
into
jg
cmp
dec
cs
clc
dec
bound
in
adc
shl
add
xor
imul
inc
and
idivb
xchg
repnz
mov
cmp
pop
bound
mov
dec
je
cmp
push
dec
add
popf
in
dec
add
ja
and
pop
in
mov
sub
cmp
pop
aaa
orl
mov
pop
repnz
jbe
push
or
hlt
jecxz
and
lds
out
bound
out
sub
jo
mov
inc
adc
mov
test
mov
das
fldenv
aaa
movsb
dec
rcr
mov
imul
je
daa
dec
sbb
ljmp
scas
and
sbb
stos
sbb
mov
les
dec
imul
dec
ret
xlat
adc
mov
filds
add
decb
movsl
xchg
jno
repz
addl
inc
cwtl
mov
dec
mov
outsb
mov
mov
lods
mov
mov
lret
push
pop
mov
dec
les
dec
sti
test
and
pop
ljmp
mov
push
add
add
test
cli
push
push
das
mov
jb
lods
pop
mov
negl
sbb
xor
xor
add
cmpsb
xor
test
xor
addb
fwait
adc
inc
push
in
mov
loope
fistpl
push
cmpsl
std
insl
outsb
aaa
xchg
roll
sub
les
sbb
nop
mov
sbb
mov
xor
dec
xchg
repz
aam
jle
test
jl
mov
xor
jl
loope
inc
jle
pop
cli
inc
push
pop
jnp
enter
rorl
add
loop
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
mov
sahf
adc
sbb
data16
pop
lds
pop
mov
rcrl
inc
push
sbb
daa
mov
add
sub
stos
pusha
mov
or
sbb
insb
lret
rorl
loope
fstpt
movsl
ffreep
cmp
add
add
cmpb
outsl
leave
xchg
and
ret
fdivrs
mov
pop
sbb
mov
out
ret
xchg
sub
xor
cmpsl
pop
clc
push
enter
lock
outsb
mov
stc
push
fidivs
mov
dec
pop
jo
fxch
fidivrl
push
dec
aas
xchg
push
in
lds
inc
fs
fisttpl
mov
sub
ss
adc
ret
mov
out
cmpl
sub
std
adc
out
sub
fwait
sbb
jmp
mov
sub
pop
aad
mov
cmp
dec
movsb
rorl
and
movsb
jge
xor
jae
aad
pop
pop
sahf
xchg
sarb
inc
jno
jne
push
ja
flds
out
xor
out
test
adc
add
scas
out
add
xor
mov
and
mov
pushf
adc
mov
xchg
push
pop
inc
nop
stc
inc
fcompl
mov
fldl
inc
stc
or
in
pop
cmpl
adc
jl
mov
or
inc
push
cli
js
in
and
jne
out
ret
push
mov
pop
jmp
fisttps
stos
pushf
xchg
sbb
dec
cmp
jae
call
call
jmp
xchg
testb
cs
inc
aaa
fists
cmp
aam
mov
stos
aaa
cli
leave
test
cmp
xchg
mov
xor
or
xor
and
iret
shlb
lret
incl
ffree
mov
jno
lds
mov
orb
outsl
push
test
jno
jnp
mov
movb
leave
sbb
push
sub
adc
xor
pop
or
sahf
andb
mov
sahf
insb
lea
pop
push
subb
inc
test
mov
pop
mov
sti
inc
or
fiaddl
scas
out
mov
ljmp
outsb
add
out
mov
fwait
adc
jmp
cmc
jle
xor
ret
and
lcall
test
mov
shl
fldl
cmpsl
mov
jmp
test
cmp
add
jl,pn
sbb
lock
and
shrb
adc
sahf
xor
je
pushf
jno
fnsave
cmpsb
lcall
xchg
lock
mov
jno
imul
and
mov
fldcw
ficoml
fisubl
xchg
aam
and
iret
mov
sbb
cli
lds
repnz
shrb
jmp
and
shrb
pop
and
and
pminsw
add
or
mov
ljmp
test
pop
nop
faddl
loop
popa
leave
inc
pop
fnstenv
cmp
mov
repnz
pop
xchg
pusha
jbe
push
repnz
sti
shl
loope
xor
pop
lds
jge
push
push
cli
mov
jo
adc
movnti
push
addl
aaa
jbe
add
out
pop
sub
stos
lret
mov
rolb
leave
je
mov
push
mov
aad
sub
lds
jecxz
jo
nop
sub
je
xor
push
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
xchg
jo
sbb
sahf
adc
sbb
xor
cs
in
imul
scas
jo
mov
fldcw
ja
mov
inc
mov
and
int3
xchg
push
pop
xchg
push
movsl
movl
imul
imul
mov
push
das
lahf
hlt
sub
push
aaa
flds
or
mov
lret
xor
dec
jno
insl
popa
jle
fdivr
adc
xchg
data16
js
mov
lods
jae
sub
lds
stos
into
jo
push
xor
adc
jmp
fwait
cmp
inc
mov
adc
jns
in
xchg
dec
mov
cmpsb
mov
iret
mov
test
dec
into
push
and
push
adc
iret
sbb
rclb
orl
xchg
sti
ds
ja
add
xchg
leave
insl
sub
sub
push
js
rcrl
cmp
std
test
pop
mov
out
and
neg
icebp
testb
sti
fimuls
movsb
hlt
jne
in
lds
and
or
pusha
mov
and
and
push
mov
pop
mov
pop
jecxz
int3
add
fsubr
xchg
stos
in
xor
inc
loop
addr16
fwait
in
rcr
enter
inc
mov
xlat
pop
loop
dec
lahf
dec
sbb
in
into
jl
not
mov
icebp
mov
mov
mov
psubb
nop
xchg
pop
into
pop
xlat
bswap
data16
pop
jae
jecxz
stos
adc
push
mov
xchg
cwtl
sub
or
je
scas
dec
fdivs
scas
jp
adc
stos
mov
pusha
arpl
and
push
push
pop
imul
or
in
pop
mov
fdivl
imul
cmpsb
mov
adc
dec
test
mov
fcoml
pop
insl
in
sti
pop
lds
xchg
mov
lahf
xchg
test
jecxz
subb
sbb
fcmove
out
pop
and
mov
jno
sub
jle
popa
mov
push
shlb
cmc
arpl
mov
rcr
popa
inc
dec
loop
mov
or
testl
push
xor
add
mov
cmp
into
fwait
out
push
outsb
into
push
xor
push
xor
insb
add
lret
lahf
cli
lret
das
int
iret
sarb
in
out
hlt
mov
and
mov
popf
xsha1
cmpsb
or
cmp
cmp
and
je
mov
sub
xor
outsl
xorl
adc
rorb
mov
popf
shlb
out
mov
scas
cmpsb
inc
lods
ljmp
imul
fimull
dec
push
fwait
imul
cltd
popa
fcomps
out
lea
xchg
pop
push
adc
add
jae
sbb
cmp
fidivl
mov
je
pushf
sub
pop
and
sbb
adcl
dec
dec
sbb
aas
push
daa
out
imul
flds
mov
test
aam
test
adc
jge
dec
out
cmc
loopne
mov
cs
in
mov
mov
sbb
jle
jecxz
in
lahf
lcall
jmp
dec
lahf
lods
sbb
fstl
fisubrs
rclb
aad
mov
in
xchg
mov
test
xchg
xchg
dec
dec
xchg
loope
lret
push
imul
fildl
xor
sbb
mov
into
xchg
jg
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
jbe
mov
adc
ljmp
aaa
jecxz
icebp
cmp
jnp
sbb
bound
pop
loope
addr16
dec
cmc
shrb
add
mov
and
jnp
push
scas
mov
hlt
adc
pop
mov
cmp
jae
mov
loopne
fidivl
popa
add
add
inc
pop
inc
scas
addr16
fisubs
jge
inc
into
jecxz
test
push
rorb
inc
mov
jmp
enter
repnz
xchg
in
imull
test
pop
shll
or
test
pinsrw
or
jg
cld
out
jb
and
add
cmp
push
jbe
icebp
into
shrb
orl
pop
test
aam
es
pushl
xchg
fucomi
iret
dec
mov
lahf
loop
pop
lahf
dec
inc
loopne
jno
mov
shrl
in
cmp
jmp
mov
ljmp
sub
jbe
pop
inc
movsb
mov
xor
and
jle
cmpl
add
clc
scas
xor
sub
jbe
jbe
sub
add
jg
inc
xlat
jno
repnz
movsl
mov
cmc
stc
lods
mov
orl
sbb
cmp
pop
push
pop
in
cmp
fsubrs
into
push
cmp
aad
sbb
aad
movsl
aaa
jae
and
cmp
cmp
loopne
add
clc
mov
or
jg
call
aam
lock
sti
or
cli
push
cmpsb
ds
lods
xchg
mov
and
adc
xor
add
inc
dec
mov
and
add
fldl
iret
in
jl
scas
pop
popa
bound
jle
ret
add
das
add
and
cld
pop
cmpl
leave
movsb
in
iret
cmp
cmp
xchg
pop
mov
add
fcomps
sub
clc
aam
mov
std
addr16
lret
xchg
inc
mov
lea
sbb
mov
xchg
insb
and
popf
xor
lret
adc
lret
lret
fdiv
dec
mov
leave
cli
shl
inc
mov
les
sbb
ss
sbb
jo
pop
ffree
add
sbb
mov
push
pop
cs
in
mov
xor
dec
pop
pop
cs
mov
jle
gs
das
xchg
mov
insl
xor
cmp
mov
fisttps
fs
addl
rcr
in
jne
in
adc
shll
dec
dec
ja
sbb
lret
iret
repnz
test
jmp
enter
push
mov
fadds
mov
popf
pop
sub
sbb
loop
xor
pop
mov
or
rorl
lret
mov
add
sub
mov
xor
sub
or
paddsw
add
fstpt
dec
push
ss
or
mov
cmp
inc
xor
std
les
push
mov
sarb
cs
jmp
test
test
pop
shr
int3
lahf
push
rcll
std
push
xlat
in
nop
clc
lret
stos
sbb
inc
inc
pop
sbb
arpl
cmc
in
mov
mov
stc
jb
mov
jg
push
jnp
xchg
cli
call
adc
mov
loope
insl
imul
mov
mov
jmp
pop
jno
mov
xchg
mov
sbb
les
fisubs
test
mov
lret
mov
cld
push
imul
andl
mov
jno
mov
hlt
loop
pop
loopne
add
outsb
popf
dec
dec
adc
je
add
mov
inc
mov
pop
and
pop
cmc
clc
cs
les
cs
inc
cmp
or
jl
cmpsb
scas
fcoms
loope
shll
pushf
push
ja
call
mov
imul
jb
jae
lods
leave
push
in
push
mov
jbe
nop
or
mov
arpl
subl
ja
cmpsl
cmp
mov
lock
push
pop
sub
push
dec
cmc
testb
in
xor
adc
mov
or
cmp
fwait
aaa
pop
mov
pop
xor
adc
sbb
nop
pop
xorb
sub
mov
icebp
mov
int3
or
movsl
xchg
sbb
mov
addr16
push
inc
js
inc
jp
shll
bound
cmpsb
gs
and
sar
inc
mov
mov
movsl
cwtl
icebp
aam
fiaddl
adc
leave
add
pusha
mov
cmpsl
sbb
sub
dec
xchg
push
stos
xor
mov
xor
cli
jge
insl
xor
dec
push
add
xchg
cwtl
cmp
add
xchg
es
adc
stc
xchg
pop
jmp
mov
movsb
icebp
sbb
rclb
inc
xchg
lret
aaa
mov
ss
ljmp
pop
test
inc
lret
cs
mov
in
mov
into
ss
add
push
xor
inc
cltd
fwait
dec
pop
jno
rcll
mov
sub
xorl
or
adc
add
pop
sub
sarl
shrb
int3
clc
addr16
sub
out
mov
push
or
test
frstor
push
cmp
pop
lock
dec
xchg
movsb
pop
cmp
jno
cwtl
inc
cmp
jecxz
xor
sahf
and
xlat
add
rcrb
mov
inc
sub
in
and
clc
push
fisubl
lods
in
mov
sub
dec
ljmp
insl
inc
mov
inc
sub
sahf
add
ja
adc
cld
cmp
dec
iret
mov
mov
jo
sbb
jle
xchg
push
or
adc
mov
or
jb
cs
inc
or
dec
cmp
jae
ss
leave
adc
jecxz
stos
pop
cmp
pop
xchg
pop
pop
push
sub
inc
dec
add
and
ja
dec
in
ret
icebp
dec
adc
aaa
test
mov
ffreep
sbb
mov
xchg
push
movsl
inc
call
int3
fadds
mov
add
inc
movb
cmpsb
out
cmp
lcall
sbb
or
out
dec
adc
cli
cmp
aad
das
xchg
nop
mov
inc
push
js
cmp
adc
add
jle
inc
fs
cmp
dec
xchg
stos
add
mov
cmp
push
adc
sbb
dec
xlat
push
pusha
mov
jmp
nop
push
movl
cmp
addb
dec
or
adc
xchg
data16
mov
divb
ficoms
int
mov
lea
dec
lahf
dec
test
xlat
icebp
mov
jns
jb
and
adc
push
lds
cmpb
add
in
inc
jo
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
pop
cmp
jo
push
sbb
sahf
adc
sbb
insl
nop
xchg
jb
int
push
adc
xor
and
sbb
push
stos
fwait
push
sbb
mull
aaa
addb
xor
cmp
in
pop
jge
cmp
jns
aad
cmpsl
mov
sub
or
mov
sub
mov
stc
add
sbb
mov
dec
and
outsb
aaa
add
idivl
pop
cld
pop
iret
int
pop
jnp
inc
and
test
inc
mov
mov
lret
cmp
cmp
fcomp
push
aad
bound
jmp
push
jo
and
in
notl
mov
fucomi
ljmp
fnsave
push
xor
shr
push
cwtl
das
push
xor
and
xor
and
add
cmp
sub
push
icebp
aas
test
xchg
lods
sbb
pushf
dec
out
and
add
push
in
xchg
mov
mov
sub
les
jmp
pop
sub
rol
mov
inc
or
cmp
bnd
dec
bound
bound
mov
jecxz
je
inc
sub
xchg
sub
or
cmp
xor
cltd
sub
mov
int
xchg
mov
add
out
ret
clc
push
cmp
std
rolb
cmc
dec
fisubrl
lods
or
pushf
es
out
add
mov
aas
test
imul
mov
stos
ja
je
push
sbb
dec
fnsave
fisubrs
mov
adc
scas
lret
iret
popl
loope
rolb
push
loopne
pushf
test
add
in
xchg
data16
mov
sub
jnp
repz
gs
movsl
jb
fcmovb
lahf
nop
lret
dec
add
aam
inc
out
call
cltd
jecxz
cmp
add
sbb
cmp
loop
outsl
mov
std
roll
mov
jle
shll
cmp
jl
adc
xor
flds
dec
mov
lea
stc
pop
or
sarb
xorb
push
lock
mov
push
outsb
in
rcl
push
or
or
xchg
pop
lods
scas
lock
cmpsb
push
mov
js
push
mov
mov
scas
sub
hlt
movsb
mov
movsl
stc
dec
mov
mov
lret
pop
or
push
dec
jl
js
jae
inc
jmp
rcr
sub
mov
pop
scas
je
xchg
daa
add
mov
test
fsubr
push
imul
inc
nop
ret
xorl
aas
movsl
dec
push
sub
mov
cltd
or
std
pusha
scas
jmp
fsubrl
push
xor
out
or
adc
pop
xlat
es
ljmp
or
sub
mov
or
push
sbb
pop
sub
dec
sahf
adc
mov
xor
orl
xor
jmp
fstpl
fcomip
dec
je
out
mov
cltd
xchg
in
xchg
js
mov
or
pop
out
sbb
pop
dec
cmp
mov
jge
jecxz
fs
adc
idiv
ret
jmp
les
imul
lods
insl
jmp
test
add
pop
into
ss
out
jl
xchg
cs
out
jmp
jle
xchg
or
mov
popa
xor
shld
xor
mov
jmp
loop
es
mov
jle
dec
sbb
sahf
adc
sbb
and
lret
hlt
mov
cmp
lea
rep
inc
je
mov
jg
es
mov
stos
testb
test
inc
loopne
testl
xorb
icebp
rolb
rclb
dec
or
xor
pushf
int
imul
dec
repnz
popa
jne
aad
sub
lret
push
pop
sbb
adc
mov
addr16
jo
pop
lcall
pop
jno
cltd
sbb
jb
shrb
popa
add
cwtl
stos
jo
daa
add
pop
dec
sbb
mov
ds
pusha
pop
mov
xchg
stc
mov
cld
pushf
push
outsb
std
repz
push
into
mov
test
addb
in
sti
or
push
mov
movsl
aaa
mov
test
rorb
fdivrl
jb
push
cmp
andl
jmp
push
rorb
adc
repz
lret
int3
aaa
inc
and
outsb
popa
xchg
aam
mov
jne
pop
nop
pop
stc
adc
imul
rcl
sbb
jle
xchg
cmp
in
jmp
inc
test
sahf
jb
and
into
mov
cmc
stos
stos
dec
test
pop
xchg
ja
mov
push
push
sbb
cli
out
xchg
adc
icebp
xor
sub
adc
fstpl
mov
sbb
incl
sbb
push
sbb
loop
adc
adc
mov
pop
pop
xchg
test
test
insb
dec
push
test
test
jle
pushf
lea
dec
push
fmuls
sub
addr16
xchg
dec
jmp
push
adc
aad
fwait
cmp
dec
dec
sbb
push
outsb
imul
popf
dec
scas
pop
mov
repnz
adc
int
and
pop
jbe
jle
sub
int3
lret
daa
or
outsb
sub
repnz
into
std
jne
nop
in
cmp
rcll
jne
lea
lret
cmpsb
cmp
out
sub
popf
int
push
xchg
xor
imul
jnp
sbb
aad
sbb
idivl
dec
and
sti
sbb
xlat
aad
inc
aaa
das
jp
sbb
pop
movsb
xor
sub
outsb
or
pop
out
fs
lds
fbld
sub
lods
jecxz
xor
add
das
xchg
fwait
inc
and
out
sbb
mov
push
addr16
hlt
lods
sahf
and
mov
std
ret
cli
out
jnp
icebp
out
add
mov
add
shrl
push
daa
fsub
test
cmpl
pop
test
popa
and
jbe
insl
or
ss
into
inc
sbb
fs
mov
inc
scas
cli
fcomi
mov
dec
fninit
xchg
mov
das
mov
ss
inc
add
loopne
insb
ljmp
jecxz
mov
std
movsl
push
movsb
ja
iret
mov
fdivrs
pop
mov
fnclex
xchg
mov
or
leave
aam
arpl
inc
push
xchg
in
inc
pop
not
iret
fsubr
loope
sbb
hlt
push
cmp
add
aam
pop
xchg
mov
std
lea
jne
mov
xchg
pop
enter
dec
dec
pop
push
pop
cwtl
push
insb
gs
arpl
pop
aam
xor
sbbl
enter
push
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
jg
mov
sahf
adc
sbb
push
loope
mov
pop
xchg
jl
rorl
xchg
inc
mov
pop
xor
cmc
lahf
sahf
out
xor
sbbb
xchg
in
push
jbe
sbb
shr
mov
xchg
ja
lcall
mov
inc
imul
xlat
mov
aad
subb
mov
loop
rolb
sub
and
mov
pushf
adc
add
sub
jl
xor
shrb
stos
imul
adc
inc
dec
push
stc
and
sub
out
adc
data16
inc
lret
jo
movsl
pop
xchg
inc
mov
xchg
aaa
add
insb
jno
cs
cli
out
das
or
sub
pop
cmp
pushf
jle
lock
out
mov
sub
mov
ret
mov
mov
add
xor
dec
test
shll
pop
test
aam
mov
aaa
outsl
add
lods
xchg
push
xchg
mov
push
push
push
mov
testl
lahf
mov
pop
pusha
bound
jno
hlt
ljmp
pop
and
add
mov
push
xchg
cld
andl
loope
add
stos
adc
stos
test
mov
les
cmp
jb
add
inc
add
push
dec
aaa
fldl
cmpsb
mov
dec
sub
or
in
call
cli
pop
pop
add
jp
xchg
xchg
mov
fldcw
and
outsl
mov
jns
mov
xchg
es
inc
jno
pop
std
mov
dec
push
xchg
incl
sub
sub
mov
xor
lret
xor
jb
pop
cmpsl
and
and
jle
mov
call
movsb
inc
movsl
sub
cmp
in
je
jne
popf
fwait
and
push
lock
pop
mov
sub
push
pop
push
stc
cmc
xchg
mov
jmp
inc
imul
movsb
or
outsl
sahf
ljmp
inc
daa
jp
jbe
jb
icebp
push
dec
loopne
adc
loope
ljmp
insl
mov
dec
xor
jnp
xchg
push
mov
xchg
stc
fxch
loop
ljmp
pop
sub
ljmp
sbb
repnz
sbb
add
movsl
out
lock
mov
stc
hlt
jmp
in
pop
test
pop
loop
push
fcmovnu
pop
stos
sbb
or
sbb
add
pop
dec
mov
adc
inc
rcrl
jno
inc
hlt
int
shlb
mov
xor
sub
xchg
mov
pushf
push
mov
aas
push
shlb
push
mov
pop
mov
push
out
mov
sbb
lcall
icebp
outsl
jecxz
and
leave
sub
int
fwait
insl
ret
mov
jecxz
pop
pushf
mov
adc
imull
and
fwait
sbb
stos
jnp
cs
in
imul
cmp
cmpxchg
test
and
push
inc
mov
or
lahf
dec
ret
stc
dec
cmp
pop
mov
lds
out
insl
outsb
adc
dec
rolb
sti
jmp
out
ljmp
data16
rcl
in
les
insb
int3
sti
sahf
cltd
dec
insl
dec
or
popl
rorb
ret
enter
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
mov
sahf
adc
sbb
pop
loope
cs
lock
inc
jb
pop
scas
sbb
ret
jb
jp
push
cld
xchg
cs
pop
xlat
xchg
inc
cmpsb
dec
popa
and
sbb
fstpt
incb
lock
pushf
aad
mov
mov
inc
push
sub
pop
lock
popf
stc
add
mov
cwtl
pop
or
ljmp
paddsw
sub
pushf
adc
mov
push
push
rclb
outsl
xchg
loop
add
aam
lds
sahf
dec
jg
fadds
lcall
test
aaa
pop
mov
aaa
push
sbb
push
mov
sahf
movsl
dec
jmp
jle
mov
cmp
test
sbb
jge
nop
dec
or
sbb
push
mov
sbb
mov
mov
xchg
mov
pop
push
and
xor
cltd
repnz
mov
mov
push
in
xchg
es
and
jo
push
loopne
xchg
and
iret
or
shl
xchg
stos
fnsave
sbb
jecxz
lock
cwtl
mov
mov
das
dec
mov
or
xor
and
dec
fnstsw
int3
stos
cli
cmpsb
stos
aad
ret
sbb
adc
stos
sub
movsb
mov
loopne
or
lods
popf
or
or
call
es
movsl
pusha
mov
int3
cmpsl
inc
sub
fdivr
icebp
aas
mov
ret
inc
pop
loop
add
sti
dec
das
pop
xchg
lcall
jne
or
js
push
fs
xlat
mov
push
push
cli
sbb
fisttpll
inc
fwait
pop
sahf
push
cmp
inc
mov
jg
cmp
je
ss
sub
lds
in
inc
sub
movsl
inc
movsb
jo
dec
das
int3
inc
push
mov
push
add
xor
mov
loop
xchg
pop
scas
or
xchg
xor
sbb
xor
push
imul
sub
dec
cmp
sahf
in
jbe
add
sub
cwtl
add
cmp
call
roll
mov
lahf
adc
pop
es
shld
sub
mov
pop
shr
pusha
jp
nop
sbb
adc
jne
int3
fbld
out
mov
movsb
inc
icebp
jo
or
add
add
add
add
ret
mov
adc
es
sti
cs
sbb
fadds
movsl
push
adc
lret
jns
daa
lds
xor
sti
xchg
adcl
and
pushf
xor
scas
add
mov
and
sub
dec
mov
fimull
imul
inc
push
je
dec
xor
lds
xchg
add
aas
pop
js
pop
cmpsl
xorb
mov
mov
aas
adc
jno
imul
or
enter
mov
xor
andb
ss
in
mov
test
repz
xor
push
sub
dec
stos
jns
lret
outsb
xchg
sbb
mov
mov
dec
pop
add
jo
cs
pop
cmp
xchg
out
imul
lock
movsl
and
nop
popa
sar
fcoml
ljmp
inc
push
jbe
loop
jbe
inc
sbb
fsubs
faddl
xchg
adc
or
push
mov
dec
mov
data16
push
dec
push
sarl
jle
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
dec
add
sbb
mov
xor
xchg
lret
aad
call
inc
js
xchg
clc
dec
outsb
outsb
xor
ret
out
adc
fs
sahf
dec
lods
dec
lock
push
jns
cmp
pandn
pop
pushl
xor
or
push
jge
mov
inc
movsl
xchg
adc
dec
out
sahf
inc
cmp
or
jb
dec
insl
cmp
pop
lods
std
or
out
xor
out
stos
adc
dec
mov
jecxz
xor
rorb
rcrl
leave
out
mov
loope
ss
pushf
fwait
in
test
pop
arpl
mov
pop
pop
push
jbe
xor
and
push
jge
rorl
add
aam
cmpsb
and
inc
inc
test
inc
daa
mov
xchg
or
jnp,pt
cltd
stc
dec
inc
imul
fcmovnu
pop
and
mov
out
addl
xor
fwait
inc
repnz
sbb
add
fcmovbe
sbb
je
dec
call
pop
xor
sbb
test
adc
xor
and
add
adcb
jp
imul
loop
call
in
lcall
cmc
pop
xorb
in
add
mov
nop
clc
cli
jo
pop
shl
roll
mov
cmpsl
jns
in
pop
push
sub
jo
xchg
jle
repz
in
inc
xlat
das
test
mov
jp
fcmovu
jle
pop
jb
rcr
out
subb
popf
pop
outsl
sbb
mov
push
and
add
mov
jae
adc
and
addr16
dec
pop
das
fists
cmpl
jle
mov
mov
fmull
adc
xor
fwait
jae
iret
lods
insl
lea
mov
cmp
sbbb
lock
adc
in
popa
or
cmp
clc
cmp
pushf
sub
iret
mov
mov
rclb
pop
or
pop
mov
mov
in
scas
cmp
icebp
sahf
stos
idivl
fildll
xor
mov
adc
pusha
cmp
or
xchg
push
pop
dec
inc
and
jmp
movsb
jns
pop
jb
repz
sahf
add
out
repnz
xor
jbe
mov
sub
in
call
adc
push
aas
cmp
dec
xor
xor
in
dec
pop
fwait
sub
mov
xchg
mov
adc
cmc
enter
mov
das
decb
or
jns
lcall
scas
push
cmp
repnz
jo
or
xchg
lock
push
adc
idivb
pop
xor
jle
cmp
inc
stc
or
or
mov
ljmp
in
add
sbb
xchg
pop
add
dec
lods
aas
adc
or
pusha
jle
adc
push
rcrl
cld
push
jg
aad
xor
xchg
outsl
in
addr16
xor
or
lret
jl
inc
fwait
insl
mov
jne
lock
pop
cmp
fidivs
test
ds
aam
les
aam
loope
dec
jns
and
push
pop
pop
mov
in
popf
adc
fdivs
in
push
mov
push
adc
inc
mov
sbb
test
and
insl
cmp
jbe
scas
bound
jmp
or
xchg
jb
adc
mulb
fsubl
add
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
adc
fsubrs
sbb
sahf
adc
sbb
mov
leave
pop
clc
mov
inc
jge
sahf
sbb
push
fisttpl
out
gs
lock
jb
pop
insl
aas
pop
sub
lcall
jle
xor
mov
std
cli
mov
dec
addr16
mov
and
xchg
loope
fsts
outsb
std
inc
jge
sub
std
sbb
and
inc
pop
push
cmpsb
mov
xor
cld
and
mov
out
repnz
es
aam
rcll
test
lret
cmp
daa
mov
jae
pop
scas
dec
mov
cmp
mov
mov
pop
xchg
gs
pop
loope
xor
jecxz
repz
adc
loop
aam
lock
mov
push
clc
and
mov
sarl
mov
sub
je
inc
sbb
pop
adc
sbbb
insl
jne
gs
pop
dec
push
test
insl
dec
adc
mov
in
stos
out
stos
sbb
or
mov
cmp
mov
xor
xchg
popf
out
es
mov
adc
add
mov
pop
mov
xor
fstl
sbb
dec
dec
loop
and
sbb
inc
xor
add
push
sahf
or
push
inc
mov
in
and
lahf
enter
cmp
sub
add
pop
xchg
jecxz
mov
out
push
pop
in
sub
jb
sbb
cmc
xor
scas
adc
jbe
pmaxsw
sti
lea
pop
pop
lods
mov
out
jl
mov
xor
push
sub
std
push
sbb
sbb
pop
cmp
add
cltd
mov
xchg
jnp
jmp
xchg
repz
bound
data16
divl
popf
mov
add
test
aas
iret
in
rclb
leave
sbb
fmuls
in
xchg
mov
divb
pop
mov
mov
pop
mov
push
cmp
mov
cmp
mov
mov
xchg
push
or
and
shl
push
aaa
jmp
int
mov
jmp
repz
xchg
or
ret
test
mov
lock
stos
jo
mov
adc
xchg
mov
inc
and
or
es
dec
out
xchg
push
cmp
cmp
insb
fsub
aas
xchg
fdiv
rcrb
pop
loop
sub
lods
aam
or
popa
adc
imul
sbb
cmp
imul
mov
sbb
xchg
xchg
fistpl
inc
and
pop
push
push
mov
jno
ss
aad
mov
jmp
cmpsl
std
dec
test
fwait
push
or
jmp
loop
int3
sbb
pop
mov
fcomp
aam
sbb
ror
push
rcl
shrl
jp
mov
mov
adc
pop
and
pop
xchg
jecxz
aad
adcl
adc
sbb
pop
mov
adc
ret
insl
or
test
xchg
xchg
inc
fwait
add
xor
xchg
mov
dec
int3
addr16
and
pop
push
outsl
and
test
cmc
jb
pop
cs
mov
mov
ds
adc
ljmp
paddusw
popf
and
or
dec
add
cmpsl
pxor
addr16
jmp
mov
repz
adc
or
pop
icebp
cs
jae
mov
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
mov
stos
pop
and
sbb
sbb
loope
dec
daa
push
mov
roll
dec
dec
add
xor
sub
xchg
xchg
jns
mov
push
add
and
cwtl
xchg
test
nopl
jge
inc
jno
adc
into
push
dec
xchg
out
mov
sub
cmc
hlt
xor
leave
add
mov
sub
ss
push
les
stos
in
fs
cmp
push
xchg
dec
mov
and
repnz
jge
fldenv
ja
andb
stc
xchg
ds
xchg
das
arpl
xchg
push
daa
and
mov
jle
sub
ret
xor
mov
test
xchg
dec
scas
in
xchg
out
cli
sti
and
pop
mov
out
inc
push
sbb
insb
xchg
leave
cwtl
and
xor
cmp
outsl
aam
push
dec
ljmp
push
mov
xchg
mov
outsb
mov
add
dec
xchg
loopne
jbe
or
inc
inc
loopne
aas
jns
pop
test
lds
push
mov
push
test
stos
jo
sbb
ja
push
push
gs
adc
call
ja
mov
shrl
fsubl
or
sub
push
ja
imul
mov
inc
mov
mov
lret
int3
cmpsb
add
mov
cwtl
pop
inc
popa
dec
call
jle
jge
dec
inc
mov
dec
iret
dec
adc
and
or
ds
mov
mov
or
fsubrl
sbb
or
cs
jo
rorb
push
outsb
js
mov
in
arpl
stos
xorb
in
mov
dec
pop
out
js
stc
mov
mov
ss
inc
mov
fabs
mov
sarb
imul
test
outsb
mov
push
pop
add
bound
xlat
out
test
stos
out
sbb
testb
lret
ja
jge
and
call
xchg
jmp
cmp
sti
jns,pt
sbb
cld
insl
leave
pop
icebp
jge
loop
push
mov
and
test
outsb
scas
dec
add
fxch
mov
dec
pop
mov
rorl
sbb
cmp
jns
imul
mov
push
out
pop
mov
mov
jno
js
jmp
enter
pop
lods
sahf
fdivrl
test
adc
jno
xchg
or
xor
and
dec
inc
popf
lret
mulb
imul
jge
push
shll
or
jbe
cmpsl
inc
out
lods
mov
xchg
xor
adc
out
push
mov
inc
cmpsb
scas
xor
lea
loopne
sbb
mov
bound
xor
lahf
ss
pop
out
into
jecxz
icebp
or
pop
sbb
or
mov
inc
lahf
jle
test
sub
sbb
jb
pop
mov
hlt
push
cmp
imul
out
hlt
test
pop
xlat
push
data16
jmp
sbb
loope
pop
mov
daa
lods
pop
mov
and
or
jmp
xor
xchg
adc
inc
xchg
or
xchg
jbe
cld
mov
lret
jge
sub
xchg
push
movsl
push
cmp
mov
stc
rorb
xorb
jnp
loope
jg
insl
rcl
dec
sub
push
and
mov
xchg
mov
icebp
fucomip
push
sbb
pop
mov
insb
push
aas
loop
mov
add
out
sbb
inc
loopne
outsb
add
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
xchg
jo
sbb
sbb
sbb
pop
jp
fisttpll
push
in
jns
jg
dec
aam
ds
adc
jnp
xchg
mov
movsl
test
xor
rol
sbb
sub
sarb
push
cwtl
lods
add
inc
retw
pop
pop
add
jl
pop
xchg
lea
sub
daa
adc
cmp
xlat
xor
iret
xchg
xlat
sbb
cmp
push
pop
repnz
inc
outsb
jb,pn
roll
jl
jae
mov
sbbb
out
xchg
pop
cmp
mov
xchg
ss
cmp
cwtl
repnz
mov
pop
cmp
push
insb
sub
xchg
cmpsl
adc
fnstenv
punpcklbw
je
out
push
cmp
xlat
mov
mov
push
outsl
sbb
out
cmp
nop
xchg
pop
hlt
and
sub
dec
mov
popf
xchg
neg
dec
daa
xchg
cmp
int3
stos
add
adc
popl
and
push
call
jle
sbb
add
sub
sub
push
inc
cmp
mov
loopne
ds
mov
fcomps
int3
testb
sub
xchg
in
mov
cmp
dec
jmp
adc
fwait
add
jno
mov
inc
mov
outsl
addr16
xchg
scas
rorl
xchg
test
mov
cmp
adc
jp
mov
fidivrl
pop
rcl
or
daa
test
in
outsl
cmp
jnp
out
fmuls
movsl
mov
std
insb
cs
dec
and
out
adc
jg
sub
jl
dec
xor
loop
mov
jae
sbb
sarl
jp
and
fisttpll
xchg
mov
and
inc
mov
cld
cmp
icebp
bound
ficoms
mov
jno
ds
mov
mov
sub
sub
mov
out
inc
dec
les
cmpb
outsb
jae
cmpb
scas
into
js
aam
jl
mov
scas
jns
ljmp
adc
cltd
lcall
mov
cli
into
je
sub
lcall
sub
mov
stc
int
mov
push
icebp
enter
push
jno
xlat
push
imull
inc
xchg
mov
int3
into
xor
jge
add
pop
cmc
sar
adc
js
shlb
mov
jmp
jg
inc
mov
icebp
or
push
cmpsl
mov
lahf
cmpsb
insb
mov
rcrl
repz
xchg
jmp
push
rcr
sub
ret
mov
pushf
sbb
inc
dec
clc
lret
jmp
xor
mov
rclb
out
les
push
and
test
jo
or
fldt
fiaddl
cld
or
mov
dec
movsl
adc
sbb
adc
mov
xchg
inc
mov
cmp
jg
lock
test
mov
mov
or
push
or
stos
ret
inc
jno
push
push
pop
and
roll
and
push
mov
jmp
shr
movsl
sub
mov
hlt
fdivrl
les
pop
aaa
les
inc
xchg
pop
push
mov
out
inc
mov
add
add
add
adc
cmpsb
fdivrs
icebp
jb
ja
sub
scas
das
mov
jnp
out
enter
and
pop
sub
cmpsl
les
dec
pop
loopne
mull
ljmp
ljmp
xor
enter
call
mov
push
mov
mov
repnz
sub
inc
add
cld
mov
xlat
addb
dec
loopne
xchg
add
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
enter
adc
sbb
sbb
push
lahf
test
fwait
xor
and
sahf
and
sti
inc
adc
xchg
fists
stos
jmp
adc
push
out
aas
fidivrs
stos
pop
out
fcomp
imul
push
inc
scas
fdivl
and
out
adc
and
loop
jg
mov
xchg
div
and
mov
test
dec
ljmp
mov
scas
jle
jns
mov
push
mov
in
cli
xor
sbb
lock
or
andb
dec
mov
adc
sahf
mov
sub
cmpsb
loopne
aam
orl
mov
mov
inc
stos
mov
je
mov
xchg
inc
and
mov
lahf
xchg
aaa
ss
mov
xchg
incl
xor
divl
jns
arpl
scas
adc
xchg
insb
in
add
push
lret
insl
popa
popf
sub
xchg
ss
subl
mov
push
pop
pop
neg
push
je
mov
jbe
aam
cmp
shr
test
popf
or
jne
repz
inc
iret
xlat
push
push
std
or
mov
cmp
jno
fdivrl
and
arpl
mov
add
inc
push
jecxz
cmp
jecxz
mov
or
xlat
aaa
dec
xchg
push
and
loop
pop
xchg
fcomi
add
jbe
jo
loope
inc
lcall
les
add
push
loop
fs
or
lret
xor
and
add
or
fptan
xorl
pop
push
lret
and
mov
cld
cmp
sub
aam
enter
scas
and
dec
mov
lea
mov
stos
sti
jnp
push
test
ljmp
loope
mov
sub
xchg
sub
js
aas
sbb
cmp
and
enter
aam
add
add
arpl
inc
std
pop
shl
mov
dec
cmp
fdivrl
scas
or
mov
sbb
pop
test
mov
mov
or
jb
fildl
or
lods
or
fwait
rcrb
pop
adcb
int
pop
sub
sub
mov
jbe
adc
nop
inc
mov
and
cmp
cltd
mov
dec
loopne
rorl
xor
inc
repz
sub
jae
cmpsb
xchg
insl
mov
pop
repnz
popa
xor
loope
sub
dec
xor
adc
sub
fsubl
dec
ja
push
pushf
inc
pop
pop
divl
dec
inc
popf
push
mov
ret
es
lcall
loop
pop
pushf
mov
pusha
filds
sub
xor
mov
dec
dec
cmpsb
daa
jns
sarb
cmp
and
pop
ljmp
fcoms
roll
adc
ret
popa
sbb
movl
jns
sub
add
xchg
push
les
mov
cs
test
jbe
cmp
loope
shl
pop
pop
sahf
jge
cmp
and
ficoms
xchg
std
aaa
cli
fisubrl
in
and
pusha
and
je
jnp
loopne
int3
sub
pop
xor
out
das
in
cmpsl
add
pop
push
jbe
adc
test
push
adc
fdivrs
nop
ror
adc
mov
push
xchg
jmp
jns
aaa
fcom
sub
mov
neg
fnstcw
mov
pop
adc
in
pop
jmp
test
sbb
xor
and
add
add
add
ret
lock
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
sbb
or
sbb
jno
scas
das
aam
mov
ret
push
adc
in
repnz
sbb
cmc
pop
xchg
pop
and
mov
mov
pop
scas
xor
mov
call
ljmp
mov
xchg
or
mov
sub
push
sub
sahf
sbb
inc
jmp
and
pop
or
push
sub
jmp
insb
fcoms
add
push
push
in
xchg
out
and
pop
xchg
les
xor
add
sbb
out
lock
arpl
mov
adc
add
scas
cmpl
push
xchg
mov
shlb
mov
out
out
add
push
into
movsl
push
loop
mov
push
fcoms
xchg
or
xchg
gs
hlt
cmp
jnp
dec
xchg
push
scas
xchg
sahf
popf
in
xor
popf
cmpb
adc
and
popa
add
push
mov
ss
sbb
or
xor
mov
dec
fs
lock
movsl
inc
out
or
pusha
loop
loope
icebp
push
dec
jo
aad
add
out
cld
xchg
mov
or
inc
mov
pop
loope
push
mov
dec
nop
inc
cwtl
dec
cmp
xchg
sarl
push
lock
sbb
mov
notl
xor
ret
pop
or
push
outsl
fisubl
arpl
xchg
inc
or
jb
jp
push
and
movsb
imul
testb
aas
sbb
mov
inc
jl
or
sub
cmp
ljmp
cmpsb
loopne
aas
out
adc
dec
in
push
mull
push
dec
mov
mov
sbb
sub
xor
push
es
adc
cwtl
mov
jnp
inc
out
call
pop
ja
mov
sahf
mov
push
cmp
mov
xor
fcoms
ja
push
dec
push
lods
mov
gs
and
lcall
mov
shrl
jmp
shl
orl
push
nop
bound
xor
adc
pop
mov
ljmp
lods
jae
mov
nop
push
scas
ds
iret
push
movsl
mov
and
stos
dec
fsubr
cld
in
orb
xchg
add
pop
gs
and
sbb
lcall
inc
mov
adc
lods
sub
jge
or
out
pop
inc
enter
inc
das
jle
mov
push
cltd
sbb
loop
inc
lods
fdivp
hlt
inc
push
sbb
inc
mov
js
lret
insl
xor
pop
mov
xor
mov
jmp
mov
adc
adc
sbb
dec
ret
jge
aaa
lds
stos
jne
mov
dec
push
int
mov
add
int3
mov
divl
gs
cltd
aam
cmp
repz
mov
mov
orb
push
pop
xchg
cmp
rcr
xor
xchg
jns
imul
xor
inc
cs
scas
in
mov
popa
mov
imul
add
call
jns
push
adc
shll
rorb
cmp
dec
leave
xor
ret
sahf
pushf
sub
out
lea
lods
sbb
push
lock
int3
std
gs
into
pop
lds
lds
jbe
mov
fists
imul
aas
dec
adc
jle
adc
pop
shr
sbb
xor
das
push
fstl
mov
dec
mov
add
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
add
mov
outsb
adc
sbb
or
mov
mov
mov
and
push
jge
decb
xor
outsb
inc
pop
and
mov
xlat
pop
insb
jno
mov
scas
lods
orb
test
lret
push
xchg
mov
out
push
daa
fucom
jns
lret
sub
sub
inc
mov
sub
dec
dec
lret
mov
pop
int
or
lret
xchg
cmp
dec
push
leave
loopne
adc
fisubl
repz
cmpsb
mov
jb
pop
ret
lods
ret
jle
ret
cmpsl
stc
aam
cmp
cmp
adc
fs
dec
inc
mov
popf
jnp
lods
adc
idiv
subl
test
add
sbb
jle
pop
jae
lds
xchg
mov
push
mov
sbb
imul
imul
inc
jno
dec
sub
ret
pop
aas
mov
inc
or
imul
movsb
jp
cwtl
gs
sbb
jo
and
cmp
shrb
daa
fucomp
xor
xor
dec
jl
idivb
mov
je
stos
les
xor
sub
rcrb
xor
push
pop
cwtl
xor
cs
sbb
lret
bound
mov
imul
movsb
jl
int3
adc
or
repnz
out
pop
add
pop
xchg
pop
das
adc
mov
sub
and
or
inc
test
sbb
pop
aaa
add
adc
data16
inc
pop
fwait
aam
adc
ficoml
in
pop
pushf
push
rcr
cli
inc
mov
cmp
mov
push
add
pop
mov
hlt
loopne
lcall
lds
add
movsl
pusha
bound
daa
dec
xor
pop
sbb
lods
pop
mov
cmpsb
mov
dec
gs
in
sbb
push
lods
xchg
xor
fs
cli
pop
xchg
out
sub
jl
push
and
mov
cmpl
push
inc
cmpsb
shl
ds
test
loop
into
call
dec
insl
movsl
call
mov
cli
loope
pop
sbbl
in
lcall
mov
pop
out
fstp
xchg
add
daa
out
mov
fists
jmp
leave
and
sahf
push
mov
xor
xchg
mov
call
shrl
sarb
stc
ja
fcmovbe
mov
pop
sbb
aad
pop
cmpsl
shl
stos
mov
xor
rcll
inc
and
lods
cmp
das
ljmp
jns
push
or
mov
pop
xor
clc
cmp
adc
aad
or
das
xor
sbb
out
dec
jnp
sbb
mov
int3
pop
filds
int
int
pusha
data16
cmpsl
iret
rcll
mov
lock
sarl
xchg
xor
push
scas
idivb
push
ljmp
xor
jge
sub
cmp
adc
cli
cltd
cmp
repnz
jno
xor
cmpl
leave
sbb
scas
xorb
insb
xchg
add
lret
out
sarl
push
fisttpl
dec
rcr
mov
movsb
push
and
cmpsl
xchg
pop
sbb
cld
inc
int
mov
idivb
jl
adc
jge
shlb
xchg
inc
ret
sub
rorb
mov
ss
add
jp
add
and
aam
aam
push
xorl
popf
or
divb
lea
sub
lcall
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
into
enter
std
sbb
outsb
adc
sbb
aad
dec
mov
xchg
or
outsb
cld
xor
and
data16
leave
rclb
rcl
pop
push
push
lods
xorl
inc
out
mov
in
add
aad
lret
pusha
xchg
inc
std
lea
jg
mov
cmpsb
jp
cmp
fists
sbb
lea
negl
les
xor
jg
cwtl
add
in
jbe
lods
and
insl
shrb
sbb
pop
cmp
xchg
pop
jns
sbb
orb
xchg
addr16
or
push
lret
dec
dec
dec
adc
and
sub
push
push
inc
sahf
and
mov
inc
jge
xchg
in
dec
xor
add
lret
sbb
ljmp
cld
rolb
jle
sub
dec
push
vpsubsw
sub
push
pop
cmpsl
jno
sub
and
pop
out
xor
imul
cmpsb
nop
pushf
loopne
loop
leave
sbb
xchg
inc
addr16
js
das
xchg
into
data16
sub
dec
movsl
inc
pop
add
in
pop
in
js
dec
sub
and
mov
pop
mov
movsb
js
mov
xor
addb
ds
fisubrs
test
stos
mov
sbb
push
mov
inc
adc
divl
hlt
lret
je
orb
stc
mov
shl
inc
mov
fidivs
std
mov
jmp
mov
xchg
mov
jg
movsb
or
aam
imul
lret
push
jbe
add
dec
pop
subb
sub
adc
fcoml
adc
call
sbb
cmp
push
push
pop
lock
test
mov
jge
dec
cs
negb
loop
mov
sbb
stos
shll
mov
xchg
dec
cltd
lods
pop
gs
xor
mov
add
push
sbb
jmp
adc
das
imul
adc
or
inc
add
rolb
pop
negb
movsb
jbe
xor
and
into
dec
lock
sub
add
xlat
std
adc
or
test
mov
data16
cwtl
rol
jge
and
and
hlt
adc
aam
ret
dec
cmp
sti
sbb
jle
sub
mov
lods
jbe
mov
and
mov
pop
ljmp
push
sub
repz
clc
sub
and
loope
js
pop
sarb
mov
mov
jecxz
out
fidivs
insl
sbb
cwtl
popa
pop
and
shrb
jp
in
enter
lcall
push
lret
sub
cmp
cli
inc
sub
sahf
sbb
ficompl
mov
inc
sbb
mov
fiadds
aad
popa
mov
push
adc
movsl
jl
push
jo
cltd
fdivr
jp
stos
add
pminsw
push
sbb
lea
sbb
daa
bnd
adc
dec
loopne
adc
mov
loop
cltd
xchg
js
mov
mov
sbb
mov
sub
ret
arpl
fs
shrl
mov
add
jns
les
dec
xchg
sub
xchg
outsb
mov
mov
dec
outsb
cwtl
inc
cmp
mov
jb
dec
subl
lock
fwait
in
xchg
and
stc
pusha
mov
pushf
dec
adc
cmpsb
sbb
push
aaa
out
and
pusha
js
sub
xor
inc
inc
shrl
jg
cltd
push
popa
push
fmuls
mov
pop
cltd
cmp
inc
lret
mov
daa
ljmp
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
jo
cmc
sbb
outsb
adc
sbb
repnz
jmp
push
iret
jl
dec
pop
jbe
scas
xor
cld
xchg
sub
into
pop
out
scas
insl
clc
dec
out
cmpsb
aam
mov
add
inc
xchg
in
mov
rcr
pusha
mov
and
push
aas
adc
movsl
cmp
push
or
sub
pop
mov
push
mov
xor
subb
dec
push
fstl
push
shl
adc
add
mov
sbb
xchg
js
or
mov
inc
test
into
idivl
inc
mov
inc
cmp
mov
push
or
cli
jmp
add
iret
dec
scas
daa
inc
jle
pop
test
cmpsl
pop
inc
and
sbb
and
loopne
cmp
mov
cmp
mov
popa
in
aaa
stc
mov
jne
or
mov
insb
lock
and
sub
cmp
ret
mov
mov
in
or
ss
aam
inc
pop
jb
lret
popf
sahf
pop
les
cmc
cmpsl
dec
xchg
pop
mov
sbb
inc
xchg
mov
in
cltd
loop
jnp
scas
inc
dec
jne
sub
pop
dec
out
jnp
sbb
test
xchg
sub
mov
push
push
mov
inc
scas
fprem1
int
sub
aam
jl
sub
mov
xor
in
lds
xchg
addr16
lahf
pop
sub
shrl
clc
in
sbb
sbb
dec
inc
xchg
mov
mov
pop
pushf
pop
nop
add
pop
mov
xchg
mov
jle
ret
test
movsl
add
out
and
scas
scas
in
sbb
repz
push
arpl
cld
in
push
ja
ljmp
faddl
mov
mov
aas
dec
lods
xor
and
xlat
repnz
aad
insb
gs
adc
imull
dec
jl
cmpl
jne
movsb
pop
inc
jge
jo
cmp
out
adc
pop
mov
jl
lds
pusha
cltd
or
add
int3
les
and
popa
out
sarb
pop
mov
xchg
xchg
iret
mov
pop
repz
cs
and
cmpsl
push
sub
arpl
pusha
stos
cmp
adc
pop
dec
xchg
xor
mov
inc
mov
orb
test
pop
jg
adc
cmc
sbbl
mov
je
dec
enter
mov
arpl
inc
ret
test
mov
xchg
aas
orl
sbb
lea
push
sub
fdivl
sub
scas
mov
jnp,pn
dec
cltd
movsb
dec
fldl
xchg
xchg
and
dec
push
fldln2
mov
das
xor
cmc
jg
inc
push
and
stos
fsts
jge
pop
ret
jns
outsl
fcmove
push
imul
fmulp
das
lcall
testl
into
jne
push
jb
add
in
jmp
lahf
inc
gs
xorl
outsl
inc
retw
loopne
jp
mov
jne
fcomps
xchg
push
xchg
fistpl
dec
jecxz
inc
bound
in
mov
and
test
repnz
fistpl
out
mov
cld
dec
std
je
data16
insb
jl
cli
movsb
in
or
push
and
gs
mov
push
lock
mov
push
or
push
sub
repz
gs
nop
jmp
pop
outsb
les
lcall
dec
pop
dec
sub
aaa
cmp
mov
pop
andl
add
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
outsb
xor
inc
stos
sbb
inc
xor
or
cmp
cmc
add
pop
cmp
repz
adc
dec
mov
rorl
mov
lcall
mov
inc
fbstp
lock
out
push
or
pop
fisttps
cli
adc
jp
rclb
lods
mov
mov
call
rcl
inc
mov
lcall
stc
and
loope
stos
jmp
into
lcall
add
mov
mov
mov
push
scas
mov
ror
ljmp
insb
decl
adc
andl
sub
rcrl
push
sub
cld
int3
pop
lea
je
inc
xchg
pop
rorl
enter
mov
addr16
aad
adc
leave
adc
jnp
and
push
or
mov
add
pop
mov
jnp
pop
bound
or
aam
pop
addr16
lock
cs
rorl
sub
pop
push
mov
mov
imul
mov
mull
jp
cmpsl
xor
ficomps
dec
mov
mov
ret
sub
movsb
xchg
ror
pop
mov
out
pop
fldcw
loopne
popf
or
sbb
jecxz
scas
ret
mov
gs
and
outsl
jge
pop
or
out
or
fists
or
inc
inc
pop
inc
dec
mov
xchg
xchg
xor
pushf
add
push
mov
pop
arpl
ss
push
addr16
neg
push
test
cmc
mov
test
cmp
dec
insb
inc
inc
and
sarl
repz
pop
xor
ret
cmpsb
imull
pop
sahf
pop
mov
mov
pop
pushf
fiaddl
xor
and
jl
mov
or
mov
cmp
les
cld
add
jne
pop
call
sbb
cmpb
aam
stos
jne
nop
popf
test
sbb
add
sub
test
data16
enter
jecxz
enter
rcll
pop
rcll
pusha
mov
enter
jns
cmp
int3
cmpsb
jmp
fsts
sub
sub
mov
xor
mov
or
test
test
mov
ret
out
and
and
aas
test
cli
cmpl
mov
or
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
shll
adc
sbb
adc
test
jns
push
out
sahf
ret
je
push
xchg
jns
das
bound
and
and
inc
rcrl
movsl
sub
jecxz
jbe
popf
call
or
repz
data16
dec
in
outsb
dec
in
stos
sbb
ljmp
sbb
sub
iret
adc
and
sbb
repnz
call
in
dec
add
jl
jle
imul
scas
lods
jno
lcall
and
mov
rcrl
icebp
pop
mov
mov
jle
js
fcoml
sbb
mov
outsl
or
bsf
in
pop
ja
mov
outsl
imul
xor
inc
subb
jb
mov
and
cmpsl
or
sub
outsl
fidivrl
inc
mov
shrb
mov
and
mov
sarb
out
mov
notb
fldenv
inc
cmpsb
test
into
mov
fistl
push
mov
adc
movsb
call
dec
mov
in
pop
idivl
mov
pusha
dec
adc
jne
inc
ja
daa
ljmp
loopne
call
or
mov
test
bound
xchg
sahf
bound
aas
shll
and
es
lahf
dec
pushf
push
cmp
jbe
jle
inc
push
push
inc
sahf
mov
mov
outsl
shlb
or
or
add
xchg
lret
das
push
in
in
xor
je
add
and
mov
clc
into
mov
in
out
adc
scas
xchg
add
adc
push
mov
mov
loopne
shrl
or
mov
pop
stc
cmpsl
insl
test
shrb
lock
cwtl
mov
or
or
push
fildll
test
dec
jnp
adc
lcall
sub
jbe
jp
je
xlat
popa
gs
and
les
jp
lds
inc
enter
or
sbb
or
sti
jge
mov
outsb
sub
xchg
sub
scas
aad
clc
movsb
mov
xchg
mov
and
inc
sbb
dec
movsl
in
jp
jecxz
fsubr
pop
mov
hlt
pushf
jae
stos
jo
and
push
xor
cmp
mov
sbb
fucom
gs
aaa
popf
adc
sarb
fistps
std
jbe
shll
mov
pop
mov
push
mov
sbb
push
mov
push
pop
inc
pop
mov
in
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
jge
xchg
mov
rclb
sbb
bound
fildll
rclb
add
aas
stc
cmp
cwtl
sub
push
xorps
add
push
lock
insl
sub
pop
jae
xchg
add
test
fstpt
lcall
jp
aad
xchg
in
outsb
loop
jecxz
cmpsl
out
mov
add
push
inc
xor
add
and
or
testb
cli
and
test
cmpsb
jecxz
aam
inc
int3
mov
mov
push
mov
movsl
jp
les
sub
sub
cltd
mov
mov
inc
push
pop
sub
movsb
mov
sub
or
rclb
adc
pop
cld
shl
pop
mov
push
mov
flds
fiadds
in
cs
dec
mov
jl
adc
dec
jae
jg
mov
push
inc
fstpt
push
xchg
mov
ds
ret
and
pop
js
shrb
stos
pop
xor
inc
jne
jo
mov
xchg
pop
fildl
shrl
jge
cld
icebp
movsl
imul
push
pusha
mov
loop
and
clc
sub
out
nop
dec
jb
icebp
aas
jg
push
ret
lock
pop
call
sti
mov
xchg
sub
cld
subb
xor
xor
test
je
ficompl
fwait
adc
inc
lret
cmp
fcmovnb
dec
rorl
sub
or
enter
pop
mov
dec
test
inc
sbbl
leave
jno
mov
imul
sahf
mov
dec
scas
push
and
es
xchg
lret
dec
cmp
xchg
mov
insl
lret
pushf
pop
sbb
aam
pushf
lret
fldenv
sub
add
xlat
mov
lock
stos
mov
clc
mov
daa
xor
cmpsb
test
and
dec
push
xchg
mov
insb
sti
out
enter
ret
xchg
mov
inc
fwait
test
or
and
adc
movsb
jns
inc
xchg
inc
sbb
push
movups
mov
cmp
push
pop
xchg
sbb
inc
std
xor
dec
and
test
cmpsb
inc
outsb
mov
in
incb
test
xchg
lods
enter
xor
lcall
add
test
push
mov
add
and
out
js
loopne
mov
fiaddl
mov
cmp
fcomi
cwtl
push
mov
xor
jmp
pop
fdivs
sbb
pop
into
sbb
jae
test
xchg
sbb
rclb
sbb
pop
aad
stc
push
orb
adc
hlt
stc
sub
xchg
and
push
int3
add
lcall
sbb
pop
stos
mov
add
lods
cmp
inc
imul
pop
arpl
aad
sub
dec
jg
mov
xchg
xchg
mov
aaa
inc
or
movsb
or
lret
movsb
fcomp
loop
xchg
cmpsl
aad
sbbl
imul
mov
cmp
das
dec
xchg
repnz
sbb
pop
pusha
cmp
and
lea
pop
push
mov
lcall
jae
jne
aam
jnp
or
shll
xor
sbb
dec
pop
mov
mov
loope
pop
cli
jbe
pop
push
lcall
dec
icebp
adc
icebp
cmp
test
or
fsubr
inc
rorl
add
cmp
xchg
dec
outsl
jp
jle
xchg
movsb
pop
mov
int
enter
arpl
adc
stos
xor
test
cmpsb
adc
lds
fcoml
mov
push
mov
mov
jl
call
inc
and
shrb
stc
mov
adc
cmp
sub
nop
cmp
pop
pop
notl
das
mov
psadbw
add
iret
mov
and
pop
jecxz
jb
adc
cmp
and
popf
xor
adc
cmc
sub
dec
stos
jecxz
movsl
inc
jmp
test
pop
arpl
inc
mov
jmp
imul
test
inc
mov
es
xor
xor
inc
mov
cmc
stos
mov
push
mov
mov
jecxz
dec
dec
xor
movsl
fs
xchg
fstpl
in
fistpl
mov
mov
pop
stc
inc
push
ret
scas
adc
dec
loop
cmc
daa
rorb
push
stos
in
xchg
xchg
fnstcw
loope
add
lret
mov
or
jb
shrd
inc
pop
dec
cmp
sub
sti
dec
icebp
addr16
stos
xor
pop
mov
push
push
push
mov
fwait
pusha
sbb
shr
xchg
leave
clc
pop
jp
scas
shll
sbb
bound
sbb
xchg
loope
test
pop
jno
cmp
mov
xchg
xchg
pop
fs
add
mov
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
mov
fcomps
sbb
adc
sbb
pop
lds
and
mov
insb
bound
fstl
or
ret
mov
adc
roll
xlat
sbb
lea
dec
faddl
add
dec
xchg
mov
ljmp
mov
inc
mov
frstpm(287
push
test
mov
loopne
movlps
lahf
loop
in
mov
pop
mov
and
stos
pop
mov
mov
lret
call
mov
lods
cltd
xor
mov
mov
pop
orb
inc
addb
lods
push
es
pushf
pop
jg
leave
sbb
inc
xchg
movsl
in
test
pmuludq
pushf
icebp
inc
pushf
push
fidivrs
mov
push
ffree
movsl
lcall
push
cmp
icebp
repz
sub
arpl
mov
push
ret
bound
sahf
mov
add
push
sub
pop
cli
enter
and
mov
fldcw
cmp
sub
rcrl
sub
mov
aas
dec
or
ret
sar
xchg
push
ja
jg
xchg
mov
pop
xchg
test
push
mov
in
add
mov
push
popa
inc
mov
pop
subl
popf
imul
push
mov
jl
mov
dec
flds
mov
fisttps
jns
lock
loop
mov
push
cmp
hlt
mov
push
test
xchg
and
sbb
inc
pop
jmp
sbb
sub
imul
rorb
imul
lret
in
adc
push
and
incl
pop
daa
jne
mov
mov
insb
out
pop
add
pop
sub
jns
repz
sbb
imul
lock
mov
in
sbb
inc
and
or
dec
test
stos
lcall
sbb
inc
xor
or
dec
std
adc
mov
xor
int3
push
jmp
sub
jns
mov
call
sbb
adc
mov
xchg
mov
mov
adc
imul
lods
mov
out
mov
add
icebp
mov
cmp
ficompl
pop
enter
push
mov
rclb
inc
or
add
add
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
es
jo
rcrb
sbb
adc
sbb
and
imul
fprem1
mov
not
push
lret
xchg
ds
cwtl
mov
adc
cmp
xor
cmp
fisubs
jne
lahf
mov
ficoms
adc
inc
rcrl
stc
ljmp
das
cmpb
jbe
int3
sub
test
jae
push
pop
xchg
cmp
pop
dec
pop
or
sti
add
cmp
sub
fwait
sbb
lret
sbb
icebp
dec
int
jecxz
call
xor
xor
xchg
fcomi
fadds
cmp
jecxz
negb
mov
mov
push
push
ljmp
mov
cmp
add
dec
mov
pop
out
outsb
into
sub
pop
hlt
test
cmc
xor
pusha
into
sbb
xchg
ret
jne
cmp
mov
dec
xchg
lret
xchg
outsl
mov
push
fdivrs
std
rolb
pop
cmp
movsb
sahf
pushf
jecxz
add
adc
xchg
add
out
std
sbb
jg
icebp
orl
pop
adc
cwtl
outsl
or
jg
in
adc
cmpsl
dec
mov
call
push
sub
rolb
and
mov
xorb
repz
call
outsl
cmp
xchg
xchg
pop
mov
xor
jno
ret
mov
repz
fwait
aaa
sahf
popa
out
cmp
mov
rcrb
out
dec
push
addl
xchg
pop
xor
mov
mov
outsl
addr16
xchg
xor
sahf
mov
mov
loopne
movsl
cmp
into
nop
shlb
jo
jecxz
ret
cltd
xor
out
jp
pushf
mov
mov
stc
out
scas
out
jne
lock
fcoms
clc
lock
and
adc
icebp
mov
mov
repnz
cli
xchg
push
mov
sbb
jns
push
sbb
xor
dec
arpl
and
jp
mov
test
gs
imul
or
fildl
enter
xor
inc
lods
mov
adc
inc
insl
cmp
cmp
hlt
cmpsl
mov
dec
out
pop
sub
mov
mov
out
and
jle
arpl
push
or
aas
jle
push
imulb
loope
mov
or
push
jo
add
jle
mov
cmp
enter
cmp
jg
mov
in
in
inc
xlat
out
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
add
adc
sbb
rclb
sbb
mov
and
inc
mov
pop
xchg
idivl
pushl
aaa
sub
lds
test
aad
adc
jnp
cmp
icebp
ja
rcll
adc
pushf
leave
or
jns
sbb
call
es
in
xchg
jg
out
sub
out
cli
test
mov
fs
push
add
sub
inc
je
xor
and
cs
jo
jge
add
ja
jle
stos
out
jb
in
in
add
cmp
dec
jge,pn
xchg
gs
xchg
cli
jle
mov
push
adc
inc
sbb
mov
inc
dec
lret
sub
xchg
jns
xorb
push
mov
ss
outsl
sbb
test
scas
addb
rcr
js
insb
stc
addr16
dec
pop
ret
cmp
pop
call
mov
mov
adc
orl
xchg
out
sbb
lret
ljmp
xor
bound
hlt
push
push
testl
fwait
jno
cli
in
push
in
les
lds
inc
dec
push
cltd
fldenv
cmp
mov
sub
ja
jge
test
dec
fcompl
aas
xor
jg
push
jnp
mov
adc
js
mov
and
insl
popf
and
lock
xchg
xchg
out
mov
jmp
or
roll
lods
xchg
data16
jmp
jne
repnz
and
and
mov
xchg
in
sahf
mov
and
out
fcom
push
mov
mov
inc
mov
sub
fldt
cmp
push
insb
sub
or
push
lcall
dec
add
enter
jbe
pop
mov
aas
jnp
inc
inc
jmp
cmp
mov
add
pop
or
cmp
idivl
jno
inc
xor
fs
je
leave
dec
aad
std
or
pop
jl
out
fldz
xchg
pop
adc
gs
leave
aam
mov
sti
cmp
add
add
jnp
in
repnz
and
jno
adc
rorb
cmc
pop
cmp
mov
imul
in
push
cwtl
vhaddps
jbe
decl
xchg
push
and
cmp
cltd
in
inc
std
aam
int3
aas
mov
cmp
bound
std
pop
negb
pusha
daa
inc
adc
inc
sti
aaa
lods
mov
xor
add
jmp
sub
mov
inc
pop
and
leave
out
jle
popf
jns
into
enter
adc
sbb
fsubp
movsl
inc
clc
mov
ja
fisubrl
push
xchg
pushf
xor
in
pop
in
adc
jno
repz
lods
jle
lret
add
sbbb
lds
mov
loope
pop
inc
ret
add
hlt
sub
adc
push
cmpsb
and
imul
fstl
add
rcll
or
cld
scas
inc
xchg
stos
lods
xchg
mov
addr16
mov
cmp
cmpsl
add
and
cmp
add
and
push
push
scas
and
fidivl
mov
or
pop
insb
sbb
ret
mov
mov
lods
fcmovbe
dec
cs
rcl
movl
ret
shrb
pop
mov
sbb
jg
repnz
adc
jo
inc
push
mov
xchg
rcl
and
cmpl
popa
sbb
adc
sbb
pusha
inc
in
ret
mov
sarb
jge,pn
xchg
pop
hlt
mov
sbb
xchg
sub
mov
repz
jns
mov
repz
mov
mov
js
repnz
enter
rorl
pop
push
ja
xchg
ss
frstor
test
cmc
out
lret
mov
sahf
add
sub
jp
mov
rorl
sahf
std
test
mov
pop
fcompl
sub
cmp
repz
mov
lret
cmpsl
subl
pop
inc
into
fwait
and
inc
mov
push
andb
jg
push
dec
aas
inc
sti
cmp
push
xchg
pop
out
inc
fcoms
repnz
mov
ret
jl
imul
sbb
shrl
jb
int
sbb
inc
or
and
jne
dec
sub
cmp
call
loop
aad
shlb
sbb
dec
cmp
mov
and
insb
cmp
fisttpl
jnp
ret
mov
ret
sub
gs
lea
mov
ret
insl
andb
nop
inc
ret
adc
pop
pop
in
enter
and
fcoml
call
rol
scas
pop
nop
mov
xor
inc
xchg
sub
pop
fiadds
mov
fwait
inc
pop
pop
jge
cmc
add
pushf
hlt
cmpsb
lcall
push
mov
or
test
jmp
jno
mov
mov
cmp
adc
adc
das
mov
divl
shlb
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
inc
mov
inc
sub
xchg
scas
repnz
in
insl
add
adc
push
dec
mov
mov
push
stos
cmpsb
jne
mov
mov
inc
sahf
test
in
daa
mov
mov
das
into
sub
shl
ret
dec
mov
fildll
dec
mov
test
add
mov
mov
mov
call
ret
jae
sbb
jge
int3
mov
add
sub
inc
stos
inc
ja
xor
lock
pushf
loop
in
or
cmpsb
in
push
das
stos
xchg
insl
pop
mov
aam
adc
jb
sbb
mov
jne
cmpsl
fcomps
mov
xor
push
cld
rolb
dec
jbe
ljmp
push
or
fidivl
lret
adc
cmp
roll
mov
imul
test
mov
jo
xchg
jge
test
cmpb
ficompl
dec
cmpsl
hlt
mov
or
mov
sbb
div
jne
dec
test
test
jecxz
shll
bnd
pop
mov
xor
cmp
in
push
sarl
pop
jle
pop
adc
inc
insl
mulb
and
clc
jle
fcomp
orl
or
sub
outsl
das
insl
inc
mov
mov
jo
cmp
xor
scas
push
jno
popf
insb
ja
cmpsb
les
push
test
mov
lods
xor
push
insl
loopne
mov
out
int
loop
ljmp
cmpsl
cmp
xchg
popf
xorb
push
add
push
test
arpl
inc
jl
inc
test
ret
ficoms
inc
sete
lcall
fstps
aam
loope
and
in
xchg
mov
dec
lods
int
inc
inc
add
mov
aaa
psrld
dec
push
fst
je
test
lea
adc
jl
out
gs
mov
rcl
ret
into
xor
cmp
jecxz
out
and
mov
xchg
jne
sub
xchg
jnp
xor
inc
sub
adc
xor
dec
aaa
cmp
sar
mov
jmp
sbb
fucomip
aaa
mov
pop
dec
into
push
sub
ds
inc
xor
lahf
mov
aam
mov
out
daa
cwtl
jae
jmp
lods
dec
adc
mov
lea
imul
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
fwait
mov
inc
mov
sbb
ja
jg
xor
mov
and
dec
sub
mov
dec
inc
mov
mov
pop
cmp
xchg
xor
mov
enter
pop
into
leave
ljmp
test
fisttps
or
std
addb
inc
xchg
fbld
insl
mov
cmp
xchg
rorl
mov
ljmp
push
jnp
xchg
or
add
mov
xor
rol
out
cld
add
xor
xchg
hlt
loop
inc
sbb
ja
cmp
and
cs
aaa
mov
sub
gs
dec
lea
sub
sarb
jno,pt
xchg
dec
sahf
jmp
sti
shrb
lock
test
mov
nop
stos
dec
push
jmp
and
cmc
out
enter
ja
shlb
xorb
add
iret
enter
xchg
enter
adc
xchg
cltd
scas
xor
insb
xlat
jle
cli
jecxz
cmp
hlt
dec
pop
jl
jg
add
ja
push
cld
inc
sbb
add
mov
negl
sub
push
lcall
data16
imull
push
cmc
sub
pushf
mov
movb
add
inc
lds
ja
aas
and
pop
xor
adc
jnp
push
insb
mov
fwait
movsl
cmp
ljmp
test
aad
sar
or
popl
pushl
js
fdivrl
inc
mov
and
loopne
push
cmp
mov
sahf
mov
nop
in
mov
jno
cmp
mov
lret
clts
dec
popa
cmp
cmp
add
sahf
fmuls
push
and
and
xor
orl
mov
sahf
int
add
bnd
mov
testl
movlps
mov
push
iret
andl
sbb
pushf
add
stc
ss
push
push
arpl
mov
mov
ljmp
add
sbb
stc
loopne
aaa
pop
pushf
xlat
push
movsb
dec
in
cli
sbb
push
movsl
adc
push
lcall
enter
fiaddl
out
adc
inc
fstpt
daa
shll
or
jnp
jmp
jmp
and
push
ret
movsb
out
lea
adc
lods
and
sbb
aam
push
push
sub
adc
mov
shll
xor
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
movsb
mov
sbb
adc
sbb
xchg
jecxz
loope
lret
jne
mov
js
stc
and
sub
pop
enter
and
mov
lcall
sbb
xorb
iret
mov
stc
jnp
orb
push
pusha
mov
add
repnz
push
clc
jp
mov
inc
aas
test
and
insb
loope
int
ret
fnsave
push
pop
jg
cmp
ss
test
jb
xchg
je
adc
xchg
sbb
jl
jbe
cmp
lret
cmpsl
ret
divb
adc
rcrl
sub
cmp
mov
lods
and
adc
adc
and
fnsave
insl
jbe
jmp
add
xchg
pop
push
mov
sarl
enter
cmp
mov
aam
xacquire
pusha
xor
lds
sbb
cltd
xchg
add
inc
mov
mov
adc
xor
and
cwtl
stos
out
lods
inc
fisubrl
stos
ss
add
mov
out
inc
pop
inc
mov
xor
and
rol
xor
sbb
lcall
std
gs
dec
outsl
fstpl
fsubrs
movsb
jmp
fnstcw
push
loop
test
movsl
out
push
inc
xchg
ja
shrl
cmp
pop
adc
push
repnz
mov
out
mov
clc
scas
pop
rclb
pop
push
sbb
aad
test
pop
mov
mov
popa
cltd
sbbl
dec
cmp
mov
mov
jle
ret
push
pop
sbb
fsubrl
mov
mov
jo
stos
xchg
test
fisubrs
mov
std
fwait
pusha
sbb
fwait
cltd
iret
lods
imul
mov
pop
mov
sbb
xchg
ss
leave
call
sahf
push
mov
and
jno
adc
out
adc
sbb
hlt
mov
stos
mov
mov
or
mov
xor
into
cmp
jecxz
push
sbb
jge
lret
cmpb
out
idivl
ja
jne
dec
mov
xchg
pop
jae
loop
in
ret
scas
jb
push
lret
aam
mov
pop
cmp
jecxz
lret
sbb
js
pop
adc
push
das
scas
scas
test
jo
xor
iret
lea
mov
and
add
xor
add
cmp
jmp
cmp
daa
sub
fcoml
sbb
adc
sbb
dec
add
adc
mov
int3
add
fidivs
and
jecxz
arpl
ror
dec
imul
mov
loop
loop
mov
loopne
sahf
mov
es
pop
dec
mov
fs
lods
push
fimull
repnz
xchg
sub
add
and
push
cmp
cmpsb
les
dec
mov
xchg
xchg
sbb
xor
dec
jo
test
pop
stos
add
sahf
sbb
xor
out
mov
mov
js
or
sarl
dec
addr16
sub
mov
mov
dec
mov
js
enter
cmp
cmc
hlt
jo
sub
fsubrl
cmpsb
add
or
or
fs
fwait
jmp
fs
dec
hlt
cmpsb
call
or
dec
pop
dec
orl
inc
pop
push
test
hlt
in
iret
movl
call
jo
mov
jp
mov
lret
mov
insb
lcall
jnp
fdivl
test
fnstenv
sub
jo
and
aas
les
loopne
sbb
mov
mov
sbb
insb
dec
jne
scas
je
jae
imul
jl
repnz
gs
sar
cmpsl
popf
sub
stos
or
xchg
push
xor
sub
and
ficomps
mov
adc
aas
loope
push
inc
jno
mov
xchg
mov
dec
psubsb
mov
scas
bound
cmp
in
pop
cs
mov
xor
out
jg
xor
inc
orb
call
sub
adc
jnp
mov
xchg
shl
add
movsl
mov
adc
pop
sbb
sbb
mov
dec
test
inc
mov
xor
dec
lods
xchg
testb
push
pop
aaa
push
adc
insl
iret
hlt
addb
adc
xchg
xchg
jns
jae
lret
dec
dec
adc
and
mov
xchg
lods
jbe
lret
imul
and
push
push
push
fsts
xchg
jae
pusha
pop
jp
out
int
lahf
loopne
add
sti
pop
in
flds
fwait
and
fcomip
pusha
jb
aas
data16
dec
loop
jae
arpl
test
adc
mov
xorb
sbb
mov
int
ret
ljmp
js
es
icebp
mov
test
idiv
lcall
mov
mov
inc
lcall
in
jo
sbb
rclb
sbb
cmp
movsb
ljmp
sub
xor
shll
fs
xchg
mov
and
xchg
jne
fs
out
cwtl
lea
repnz
add
pop
dec
mov
mov
xor
fdivrp
push
in
inc
in
xor
mov
mov
ret
pop
inc
push
into
push
jo
loopne
xlat
adcb
adc
rolb
mov
pop
and
mov
push
int3
add
mov
or
std
inc
fisttpll
in
mov
inc
sbb
inc
outsl
insb
mov
dec
pusha
pushf
adc
pop
cmpsb
push
mov
pop
cmp
add
popa
fsubrl
ret
dec
push
into
fisttpl
mov
push
mov
xchg
mov
pushf
aas
add
in
or
xchg
xchg
stos
xor
push
cmp
inc
jle
sub
sbb
test
mov
mov
lds
mov
into
xor
sbb
fwait
les
cli
ret
data16
jecxz
addr16
dec
add
ss
mov
out
out
mov
loopne
push
sub
lcall
xlat
cmpsb
in
pop
cmp
out
fwait
subl
sbb
popa
arpl
inc
jecxz
das
lahf
cltd
sti
ljmp
sahf
jno
and
imul
fcoml
enter
dec
push
lods
pop
cld
scas
out
ffreep
iret
push
push
xchg
mov
jb
and
add
fwait
inc
sub
push
mov
mov
test
mov
xor
push
hlt
or
xchg
sub
push
ret
mov
add
mov
push
mov
xor
test
js
pop
mov
pop
jmp
jp
xchg
mov
test
ja
pop
imul
or
test
mov
enter
cwtl
and
pusha
out
push
stos
jb
pop
aad
inc
mov
add
enter
and
cmc
cld
push
mov
push
jbe
inc
mov
push
sbb
dec
add
or
mov
call
and
into
das
imul
adc
popa
movsb
iret
sub
mulb
push
test
jb
jnp
push
xchg
mov
stc
lret
leave
and
jb
ret
subl
sbb
stos
or
mov
cmp
inc
ret
lret
rorl
loop
push
xor
aad
imul
lock
into
mov
pop
loope
fstpl
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
lods
or
sub
sbb
mov
loope
jl
imul
push
mov
aas
sub
jb
mov
and
out
pop
mov
and
out
lahf
inc
dec
inc
mov
or
dec
sti
pop
cmp
mov
scas
cmpxchg
jle
xlat
ja
sub
adc
clc
xor
xchg
gs
xchg
std
leave
or
sti
ss
test
sub
into
or
dec
jae
dec
mov
jg
mov
mov
jns
inc
fstpt
adc
lret
or
cmp
and
or
loop
sahf
pop
push
cmp
jmp
cmpsb
ds
xchg
filds
mov
add
jg
out
lret
lea
test
clc
mov
addr16
lods
ss
insl
test
add
fwait
inc
fdivl
mov
push
fwait
jecxz
cwtl
aam
jecxz
inc
mov
stc
outsl
push
insb
or
mov
pusha
add
arpl
sti
pop
add
sub
mov
mov
adc
sub
int3
jb
ja
pop
sti
inc
and
sub
pop
adc
push
les
and
movsb
mov
lret
mov
push
fistpll
jmp
fidivrs
jmp
push
lds
cmp
jl
addr16
pop
pop
push
loop
or
inc
fildll
xchg
fsubl
mov
push
test
ss
adc
repz
mov
shrb
testl
in
fstl
call
mov
cmp
sub
cwtl
imul
lods
mov
xchg
stc
lods
jl
sbbb
mov
inc
pop
repz
fbld
popa
mov
clc
test
lahf
jp
ja
out
jno
jg
rcll
sbb
enter
aas
jmp
call
mov
xchg
ss
aam
xchg
sub
inc
ss
incb
jnp
cli
gs
pop
out
aaa
leave
rcll
bound
das
adc
into
mov
sub
and
dec
aaa
cs
add
imul
ja
jge
xlat
xchg
jo
adc
fyl2xp1
outsb
mov
out
add
xchg
jne
push
pop
aas
jae
jl
dec
popf
in
in
sbb
cmpsl
cltd
add
or
xchg
xchg
xor
mov
outsl
add
pushf
sbbl
cmp
pop
cmpsb
mov
cs
lret
lods
inc
cmc
jo
aad
mov
mov
jmp
lods
inc
mov
pop
jns
scas
lea
inc
iret
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
pusha
repz
fistpll
fbstp
cmp
mov
mov
mov
mov
push
push
nop
int3
mov
inc
push
adc
cmp
mov
lock
je
sbb
jge
repnz
xchg
aas
cld
jl
dec
sbb
jo
jae
daa
aam
push
xor
mov
cmp
int3
sub
and
jmp
lret
insl
mov
movsl
sbb
icebp
push
push
enter
jns
dec
inc
pop
pop
popa
int3
mov
ret
loop
shll
jp
imul
addr16
mov
jl
inc
cmp
cmp
inc
mov
pop
mov
sar
arpl
dec
xchg
push
xor
sub
inc
xchg
in
sub
repnz
cmp
inc
and
lods
xchg
js
mov
jp
push
loop
js
add
stc
push
addr16
leave
mov
enter
stos
dec
insl
inc
jp
jg
stc
adc
mov
mov
push
pop
sub
mov
loope
push
addr16
mov
je
ret
xor
and
inc
aas
idivb
int
imul
sub
roll
adc
cs
mov
jge
mov
mov
xchg
aaa
test
mov
xchg
fs
mov
imul
cli
cmp
nop
push
lods
shl
jb
cs
lcall
cmp
test
inc
test
insb
jbe
pop
or
ret
loope
test
mov
jnp
clc
push
shll
sub
pop
cmpl
xlat
mov
add
inc
mov
leave
dec
lret
in
daa
imulb
jecxz
rcrl
adc
inc
jg
fwait
sahf
out
loope
enter
pop
loope
xchg
mov
cmpsb
pop
lock
lea
loop
test
data16
repnz
push
xchg
mov
in
xchg
jno
xor
cltd
mov
or
lods
push
jp
sbb
sbb
pop
lcall
mov
sbb
cmp
inc
out
out
cli
or
jecxz
push
jo
adc
dec
push
mov
jecxz
cmp
jmp
sub
insb
int3
sub
xchg
dec
int
in
mov
jecxz
rcll
or
xor
arpl
push
jge
movsb
inc
jns
push
enter
lret
movsb
das
mov
or
jbe
or
lcall
pop
push
jmp
ds
add
in
mov
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
jl
sahf
sbb
mov
jg
loopne
pop
or
mov
cltd
jns
fld
add
test
pop
jne
push
mov
and
or
add
dec
ds
lods
enter
aad
in
cltd
lcall
mov
add
ds
adc
inc
lds
icebp
mov
stc
bound
xchg
cmpsl
stos
xlat
dec
push
gs
dec
repz
and
int
mov
fidivs
enter
mov
loope
and
movsl
xchg
sbb
rcl
push
push
jge
ret
add
dec
cmp
sbb
or
cmp
cmp
pop
lea
jge
mov
xchg
inc
jmp
movsb
pushw
movsb
push
jns
mov
in
ja
push
push
arpl
sarb
push
cmp
and
pop
iret
inc
add
addr16
pop
lods
test
sarb
adc
xlat
jge
cltd
jp
cmpsl
lods
fiadds
and
outsb
mov
fcomi
mov
xchg
push
gs
lods
fcmovu
ljmp
push
orl
jno
in
int
inc
and
push
mov
and
cmc
inc
dec
outsl
xchg
clc
je
idiv
out
jns
push
cmp
in
icebp
fcmovnu
xor
sub
inc
adc
daa
adc
aad
test
push
push
cmpsl
lods
push
pop
dec
push
stc
xchg
jno
scas
out
jnp
mov
scas
movsl
xchg
sbb
iret
in
mov
je
ja
dec
insl
and
or
adc
in
mov
cmp
repz
fstp
mov
scas
sub
dec
add
fwait
inc
or
sbb
xor
rcrl
jne
xor
leave
inc
xlat
cltd
in
push
sbb
addr16
and
dec
adc
in
in
daa
add
xchg
pop
jle
pop
enter
or
pop
mov
push
inc
fstpl
push
test
mov
faddl
xorl
pop
mov
stos
inc
fcomip
movsb
lea
std
imul
sti
xchg
push
fisubrs
pushf
movsb
add
mov
sub
xchg
push
push
loop
sahf
push
inc
enter
arpl
aaa
test
scas
addl
xor
jp
dec
ja
mov
popf
sub
mov
sbb
lock
nop
lods
sub
pop
jne
inc
test
test
rorb
dec
cmp
mov
clc
shlb
mov
in
call
rorl
cmp
add
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
adc
sbb
cmc
dec
loope
or
fbld
andb
inc
mov
test
movsl
push
rclb
mov
sbb
loopne
psllw
pop
ret
push
jmp
mov
clc
add
loopne
jo
fmuls
ficoml
hlt
addr16
lret
dec
ljmp
pop
xor
sbb
jecxz
fwait
xor
add
sub
sub
xor
je
shl
decl
mov
iret
int
in
and
push
cmp
jae
xor
gs
fisubs
sbb
sbb
insb
adcl
xor
shll
loopne
jnp
or
inc
or
les
lock
cmp
fs
push
and
cmpl
leave
popa
xchg
and
std
mov
jge
repnz
dec
sub
mov
adc
pop
sbb
mov
mov
aas
mov
xor
loop
int
jne
jne,pn
scas
cmc
inc
rclb
mov
testl
jb
adc
add
push
sub
push
fldcw
adc
fidivrs
sarl
pop
pop
xchg
xlat
cmp
frstor
das
mov
xchg
stos
jbe
fstpl
adc
lods
pop
dec
mov
adc
sbb
fmul
and
jp
nop
mov
cmp
and
inc
incl
insb
gs
loopne
movsb
and
push
push
jnp
sub
loope
fmull
aad
adc
aaa
rclb
jno
repz
loop
pushf
or
les
jbe
or
cld
xchg
stc
popa
adc
and
ljmp
mov
in
mov
mov
pop
jmp
fdivrp
jnp
push
jge
inc
out
stos
sqrtps
lock
out
push
jecxz
dec
fwait
insb
mov
xlat
mov
mov
cmp
int
rolb
inc
push
aas
jbe
mov
xchg
mov
inc
lcall
mov
cmpsb
test
xor
rcrl
pop
pop
xchg
je
mov
sti
dec
xor
test
sbb
leave
aas
mov
mov
jmp
inc
lret
mov
dec
cmp
mov
int
std
out
add
shll
jle
or
mov
loop
push
hlt
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
roll
sbb
aad
xchg
scas
lods
call
mov
jbe
xlat
push
psrlw
sbb
mov
in
mov
and
pop
popf
insb
outsb
add
aas
mov
pop
je
nop
pop
inc
mov
add
mov
ret
jbe
std
inc
sub
ljmp
jb
jl
mov
mov
sub
lock
pop
rcrl
rorl
jg
loope
mov
lret
inc
lods
mov
outsb
xchg
ret
mov
movsl
cs
out
mov
rol
repnz
push
shrb
lods
repz
jg
out
dec
sbb
sbb
lds
movsl
es
hlt
cmpsb
out
add
dec
insl
xor
out
cltd
and
adc
out
adcl
repz
sbb
call
std
data16
pop
clc
push
dec
pop
out
cmp
dec
jg
lret
or
mov
adc
cwtl
cli
test
push
lahf
sahf
inc
leave
decl
in
mov
jmp
bnd
hlt
mov
sbb
fisttpll
orl
push
push
add
arpl
mov
mov
xlat
cmpsb
push
or
adc
sub
test
pushf
push
sahf
sbb
les
xchg
subl
jns
jle
xor
inc
pop
mov
incl
inc
insl
jmp
es
mov
add
cmp
std
adc
jecxz
lret
jo
ret
flds
stc
lahf
out
cmc
dec
ljmp
stc
fdivrs
cmp
movsb
push
pop
repz
inc
adc
cmp
movsl
mov
sbb
insb
out
push
xor
rorl
and
mov
cmpsb
inc
imul
inc
dec
clc
fistpll
push
dec
lock
in
pop
in
sahf
loop
dec
js
lods
adc
cld
cmc
cld
xor
jno
clc
inc
xchg
dec
jle
cmp
mov
aaa
jnp
add
cwtl
xorb
nop
and
fnstcw
fnstsw
inc
and
sti
inc
jns
popf
mov
out
incl
lods
mov
mov
sub
popl
lret
and
mov
jmp
je
test
aad
push
outsb
shlb
or
cli
adc
mov
cmp
mov
out
sarl
sub
mov
cmp
aam
inc
and
xchg
push
xor
mov
movsb
mov
and
xlat
rcll
mov
scas
pushf
movsb
xchg
push
insb
imul
icebp
fists
adc
fs
decl
lock
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
pop
inc
cld
mov
lcall
clc
dec
jne
adc
inc
push
dec
xlat
inc
cmp
dec
xor
imull
mov
jnp
xor
rol
push
test
jno
rclb
add
jmp
mov
clc
or
hlt
pusha
pop
mov
cmp
stc
cs
pop
inc
dec
iret
and
xchg
pop
xchg
ljmp
or
dec
xchg
imull
adc
add
xchg
pop
xor
jbe
jecxz
push
xor
fildl
daa
cmp
add
mov
jb
and
jae
stos
mov
aad
fimull
lret
xchg
push
add
movsb
add
or
nop
push
mov
mov
sbb
dec
scas
jnp
add
mov
pop
push
iret
jg
xchg
sbb
sub
data16
dec
mov
daa
mov
mov
mov
mov
mov
and
push
push
lds
repz
fld
lcall
das
push
inc
aad
cmc
loopne
xchg
ret
stc
faddl
inc
or
sub
xchg
addl
push
jmp
andl
sbb
ja
out
adc
mov
in
dec
rorb
cmpsl
mov
sbb
fsubr
inc
lock
and
adc
outsb
pop
dec
dec
lea
sub
and
fnsave
jne
fs
sub
dec
dec
and
mov
sub
sub
cld
mov
cli
lods
push
sub
jecxz
mov
lds
das
cvtps2pi
add
nop
cwtl
jbe
sbb
sub
sub
es
je
add
jl
sarb
mov
xor
aam
sahf
out
and
mov
jo
lods
jbe
push
inc
aad
jno
push
outsl
lcall
pop
sbb
test
xor
lret
fs
dec
loop
mov
aaa
cmpsb
movsb
roll
cmp
js
or
std
mov
test
ror
mov
and
cmp
inc
jmp
std
push
push
les
sbb
pop
push
divl
daa
jmp
dec
pusha
jle
arpl
out
cmpsb
mov
adc
jmp
lods
test
mov
push
test
xlat
sub
in
push
hlt
or
adc
push
pop
pop
push
int
sub
inc
fistpll
mov
ffreep
es
pop
ja
adc
xor
mov
pop
mov
les
add
add
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
lods
jb
cmp
cld
sar
nop
ret
lock
iret
mov
fnstsw
popa
faddl
mov
popf
xorl
xor
cmpl
cmp
dec
xchg
arpl
imulb
adc
and
mov
mov
mov
rorb
xor
lcall
mul
mov
push
inc
scas
pusha
stos
mov
outsb
in
cltd
push
mov
pop
sub
push
sub
fs
enter
and
jb
imul
lcall
sub
leave
test
sbb
cmpsb
mov
rcr
add
xchg
lea
adc
lods
xor
sub
inc
lahf
dec
push
imul
cmp
into
mov
mov
xchg
adc
testb
ljmp
in
idiv
dec
stc
ss
fwait
mov
or
gs
add
dec
cltd
out
sti
push
inc
xchg
add
std
push
sbb
inc
add
dec
cmpsl
mov
dec
or
fldenv
ds
imul
out
add
call
movsb
ds
stc
adc
and
xchg
cmp
xchg
in
mov
popa
inc
test
fldl
push
push
inc
mov
cwtl
dec
mov
xchg
gs
lcall
test
insb
fnstenv
and
adc
addl
clc
icebp
loop
push
add
mov
xor
inc
mov
push
clc
and
in
push
pop
out
jecxz
ficoml
sub
dec
ror
or
jp
or
pushf
mov
adc
ss
lahf
xchg
icebp
pop
lahf
pop
mov
and
ljmp
cmp
sahf
dec
mov
adc
in
mov
leave
in
or
mov
add
cmp
pushf
jno
mov
and
fcompl
cmpsl
test
lods
repnz
mov
sbb
cltd
loopne
inc
mov
xor
lcall
xor
decb
popa
ds
and
lods
clc
cmp
ficompl
cmpsl
sbb
jo
sbb
push
lret
in
adc
or
sti
insb
cltd
xor
je
mov
xchg
cld
cmp
repz
jns
mov
inc
jecxz
jbe
cmp
mov
mov
pop
xchg
mov
sbbl
xchg
mov
mov
movl
mov
mov
sub
jmp
test
mov
push
jmp
mov
sbbb
lcall
xor
inc
cld
negl
lods
lds
hlt
push
ss
loope
jb
mov
sbb
adc
scas
mov
notl
add
cmp
mov
popf
cmp
jbe
or
dec
jecxz
addr16
rorb
fadds
outsb
sub
xchg
lcall
cli
in
xchg
jo
cmp
mov
add
adc
pop
pop
in
rorl
mov
xor
mov
push
sbb
and
cltd
or
or
test
xor
es
fwait
pop
adcl
sti
pushl
mov
cs
pop
cmpsb
inc
cmp
rorb
pop
pop
and
sbb
mov
pushf
aam
xlat
xchg
add
insb
movsl
sub
faddp
sbb
push
cs
pop
inc
call
xchg
cli
sub
push
jbe
nop
inc
jmp
xchg
pusha
pushl
or
mov
mov
pusha
rcrl
xor
sub
xor
fisubrs
orb
adc
cld
push
adc
cmp
sub
icebp
sub
jne
movsb
insl
insl
leave
icebp
inc
mov
and
mov
pop
pop
sub
pop
les
adc
lods
xchg
insl
shlb
sub
mov
lahf
in
outsb
ret
mov
mov
add
push
in
jbe
ss
push
add
ret
rcr
and
ficomps
or
mov
push
arpl
inc
mov
lret
fst
mov
add
push
shll
out
dec
mov
int
and
pusha
sub
in
ret
dec
inc
push
gs
adcb
vmovapd
out
dec
les
inc
movb
pop
lahf
or
pop
sbb
xchg
sub
dec
mov
int3
leave
out
pop
sbb
stc
jo
cmpsl
mov
pop
pusha
imul
imul
xchg
shlb
test
cmc
cld
cmp
sbb
jp
add
jae
jnp
cmp
stos
fistl
sbb
lret
xchg
inc
pavgw
mov
inc
jl
cmp
cld
movsb
cmc
jbe
cmpsl
mov
and
loopne
mov
ds
add
scas
jns
idivb
lods
daa
inc
out
cltd
push
cmc
push
lcall
xchg
cmp
hlt
mov
or
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
inc
xchg
mov
jno
sbb
and
repnz
jnp
ja
loopne
jo
xor
loopne,pn
fiaddl
int
pop
fmull
outsl
push
sbb
push
sub
mov
lods
test
and
xchg
arpl
cmp
mov
ss
test
loope
in
inc
test
push
mov
sbb
subl
fadd
out
sbb
sahf
daa
test
mov
cmpsb
fdivrs
push
loopne
cs
and
icebp
cwtl
jne
xor
inc
mov
and
xor
adc
inc
insb
pop
jne
push
out
imul
ret
test
repz
push
mov
jmp
outsb
sbb
pop
cmp
fistps
in
mov
ds
inc
lods
mov
shlb
add
jmp
mov
call
pusha
arpl
ds
sbb
adc
jno
outsl
enter
sahf
ds
inc
lock
icebp
and
cmp
fucom
stc
repnz
cmp
daa
mov
fildl
push
sbb
ret
popf
iret
push
jecxz
cmc
or
push
xor
inc
ss
icebp
push
sarb
push
pop
dec
sub
sub
cmp
subl
xorl
std
push
bound
imul
cmp
imul
adc
lds
rcrl
aas
sbb
div
dec
sub
cmpsb
lods
icebp
mov
sub
jae
sbb
icebp
push
adc
mov
mov
ret
lods
push
or
scas
clc
inc
push
in
push
xchg
fcomps
and
sbb
sbb
jnp
enter
mov
dec
inc
test
addb
aad
xor
les
push
outsb
push
jb,pn
lret
pop
fnstenv
pop
mov
and
or
jl
cmp
movsb
xchg
mov
xchg
dec
adc
cmp
dec
dec
mov
dec
cli
imul
adc
test
movsl
movzwl
pop
repz
add
shll
sbb
lods
pop
cmp
cmpsl
test
xchg
dec
fsubl
not
and
daa
or
or
xor
aas
jl
imul
movl
movl
movl
movl
movl
movl
movl
movl
push
jmp
dec
sub
sub
mov
sbb
sbb
xchg
sahf
jle
dec
jnp
dec
push
pop
xchg
inc
mov
sub
adc
mov
and
dec
fisttps
out
pop
ljmp
and
lcall
insb
imul
insb
shll
inc
fildll
push
dec
xchg
jge
mov
popl
call
pushf
push
outsb
add
and
push
stc
push
mov
or
dec
mov
pop
aam
icebp
insl
mov
nop
add
ret
jnp
cmp
ds
cmp
jnp
psubw
lcall
push
push
ds
ret
sbb
ret
and
fdivl
pusha
push
lds
mov
pop
mov
jo
pop
inc
mov
and
stos
sub
push
ja
repz
fimull
jg
jl
imul
arpl
cmp
mov
sbb
shrl
jns
sarb
aaa
pop
das
out
loop
inc
cmpl
mov
pop
popa
sahf
add
js
sub
std
aaa
sbbl
inc
icebp
mov
shll
test
pop
jno
mov
out
dec
in
push
mov
cmp
into
mov
push
into
inc
lods
lds
xchg
movl
cmpsb
les
daa
test
xor
sub
les
fiadds
mov
push
push
movsb
loop
jp
pop
bound
pop
xor
cmp
lret
cmp
cld
loopne
inc
mov
and
push
mov
xchg
xor
femms
cmc
andl
cld
or
movsb
mov
or
into
mov
pop
loop
sub
add
fmuls
xchg
mov
add
mov
xchg
xor
sbb
inc
xchg
cmp
dec
rcr
and
adc
sti
and
sub
cmp
adc
mov
shrl
pop
mov
push
jl
mov
testb
dec
es
inc
adc
and
cmc
call
cltd
pop
mov
test
mov
fistpl
mov
out
fistpl
xor
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
ja
sahf
je
sbb
sbb
scas
mov
in
xchg
and
pop
scas
bound
add
pop
dec
out
and
xchg
xchg
imul
push
jp
or
stos
adc
cmp
push
fnstcw
adc
jge
or
cmp
pop
or
fistpll
mov
cmp
and
int3
mov
sub
fwait
cmp
xchg
ljmp
mov
rcll
add
jge
sub
adc
or
inc
ds
sbb
cmp
mov
rclb
sbbb
enter
inc
adc
pop
push
add
out
popa
and
imul
mov
loope
rcrb
lods
call
call
jne
test
mov
out
mov
sub
repnz
loop
push
jno
inc
sbb
push
sbb
jo
sub
push
jne
mov
scas
mov
adc
sub
cwtl
mov
and
adc
fildll
dec
add
lret
sub
fiaddl
rcrl
cmp
add
or
xor
loop
or
cmp
fprem1
into
cmp
clc
adc
scas
xchg
push
fildll
mov
cwtl
sub
es
cld
cmc
clc
sub
sub
inc
mov
stc
ret
hlt
int3
gs
in
in
jns
dec
sti
out
pop
testl
fs
adc
outsl
jbe
push
mov
movsb
push
outsl
aaa
call
pop
mov
imul
pop
mov
pop
and
sub
xchg
out
and
ficoms
mov
push
xchg
jns
ret
rorl
icebp
fwait
inc
cmp
xor
imull
out
cwtl
push
out
test
je
hlt
jb
mov
loope
psubsb
xorb
loope
jle
loop
xchg
mov
daa
in
cmpb
pop
jg
xorb
scas
pop
pop
push
insb
mov
push
aaa
dec
dec
cmp
xchg
int3
out
rol
sahf
lods
mov
pop
sbb
lret
loope
jbe
scas
mov
popa
xchg
adcl
adc
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
jbe
jl
fisttpl
mov
and
int3
pushl
sahf
xor
sub
loopne
and
imul
pushf
inc
popl
repz
popa
inc
add
hlt
sahf
stos
in
inc
pushf
mov
and
and
dec
push
test
cltd
lret
xchg
pusha
sbb
jmp
pusha
rcrl
movsb
xorl
mov
cmpb
mov
mov
sarb
dec
lds
lret
imul
xchg
into
hlt
xchg
ds
mov
cmp
lea
ret
cmp
xor
popa
mov
xchg
cltd
adc
mov
xor
pop
clc
incl
push
inc
lds
push
push
aam
cs
mov
and
mov
mov
rclb
pop
mov
inc
ss
mov
or
mov
mov
and
sarb
xor
bound
or
dec
lods
test
rcrb
jae
mov
loope
les
jmp
mov
dec
into
icebp
ret
cmp
or
or
aam
aam
xchg
adcb
push
sbb
test
in
inc
outsb
jbe
pusha
inc
cmp
pop
movsb
mov
or
fstps
mov
cmpsb
pushf
inc
and
sub
mov
stos
repnz
mull
adc
push
pop
in
fldl
lahf
push
aaa
cmp
adc
add
jnp
pushf
mov
mov
movsb
sub
addb
in
ss
cmp
cltd
dec
cmp
jp,pn
sbb
dec
nop
leave
jge,pt
mov
or
dec
fiadds
add
sub
dec
sti
sti
push
add
and
dec
js
addl
xchg
pop
in
xor
push
mov
mov
pop
enter
loopne
outsl
movsb
popa
ficompl
inc
push
pushf
jp
adc
jecxz
in
sbb
aad
and
dec
jecxz
and
adc
push
inc
enter
push
mov
mov
lock
into
lds
mov
lds
outsb
or
sbb
fwait
popa
pop
mov
mov
pop
loop
mov
mov
mov
add
adc
or
mov
jmp
pop
and
xor
pop
sbb
pop
jo
push
sbb
sbb
scas
cmp
cs
fucom
add
enter
jnp
jle
ss
xor
lret
outsl
int
bound
imul
filds
bound
jo
mov
pop
insl
pop
adc
lcall
jle
xor
mov
inc
cmpsb
xchg
in
cld
dec
icebp
cmp
pop
mov
jmp
sub
fists
iret
dec
mov
xor
lods
xchg
in
loop
push
mov
mov
stos
inc
loopne
insb
xor
movsb
jae
mov
sbb
jmp
imul
mov
xlat
test
inc
mov
imul
add
push
mov
pop
sbb
test
hlt
dec
imul
xor
insl
pop
aad
stos
pop
gs
iret
ja
xchg
xor
loopne
icebp
mov
xchg
dec
repnz
orb
dec
lcall
sub
jb
push
or
pop
lock
inc
inc
addr16
rcrb
jle
xor
mov
mov
out
call
aad
or
push
lahf
and
dec
out
hlt
ljmp
xchg
aas
add
push
fnsave
imulb
ret
loope
mov
sub
iret
or
mov
cmp
xor
push
ret
mov
ret
dec
jmp
repnz
sbb
mov
in
sub
cwtl
lods
pop
and
xorb
ret
mov
add
or
xchg
pop
xor
not
loop
adc
pusha
sar
testb
jmp
push
cmpsb
aas
xchg
outsl
mov
jae
mov
leave
pushf
mov
out
cmc
and
jns
imul
sub
scas
rcll
fimull
ds
cwtl
cwtl
xor
push
sub
das
mov
add
or
mov
test
push
arpl
rcrl
and
sbb
out
xchg
jg
aaa
inc
sti
pop
notl
test
dec
icebp
and
popf
push
or
gs
subl
cltd
rolb
pop
sub
adc
leave
mov
cmp
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
jne
inc
mov
jno
sbb
push
and
imul
pushf
idiv
fstps
sbb
dec
sub
aam
mov
adc
rcl
rcrl
or
insb
clc
aad
loope
sub
mov
lret
mov
loope
pop
dec
inc
push
adc
xchg
js
xchg
inc
pop
and
inc
add
pop
adc
iret
sbb
scas
fmulp
test
out
sbb
mov
or
fldt
add
loope
scas
pop
jl
or
in
and
out
mov
xorl
pusha
rorb
pop
gs
mulb
aad
lods
mov
test
xor
jno
std
out
mov
push
loop
inc
xchg
xlat
cmp
cmp
mov
add
sahf
ret
mov
inc
pop
loope
push
mov
mov
aad
outsb
mov
inc
cld
sbb
add
cmp
int3
xchg
popf
dec
shlb
and
pop
xchg
pushf
sahf
shlb
add
mov
dec
add
pop
mov
gs
adc
int3
mov
add
sbbb
cmp
pushf
jecxz
mov
mov
mov
lock
out
ret
dec
push
cld
push
mov
and
push
cmp
lods
pop
dec
shrl
sahf
push
and
mov
popf
or
insb
out
push
dec
ds
loope
inc
ss
add
aam
cmpsl
pop
xchg
xchg
fbstp
mov
xchg
mov
fidivl
sbb
jne
jb
adc
dec
imul
out
mov
jo
orl
sub
jp
lods
in
mov
das
mov
xor
and
xlat
into
mov
aaa
cmp
dec
pop
push
inc
sub
fldenv
icebp
leave
jns
xchg
int
add
bound
inc
fnsave
loope
adc
xchg
mov
push
loope
fs
movsb
mov
or
das
sbb
pop
inc
mov
cmpsl
bnd
icebp
into
sub
das
mov
add
pop
mov
inc
loope
data16
mov
enter
iret
aaa
loopne
mov
sub
jle
xor
aad
sbb
and
in
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
mov
pusha
sbb
jno
sbb
popa
lea
sbb
daa
mov
jp
mov
scas
xchg
jbe
ljmp
push
pop
adc
mov
sbb
push
decl
cmpsb
sbb
ja
arpl
call
jae
bound
nop
adc
into
lds
dec
pop
lret
dec
fisubrs
movsb
or
dec
nop
fimuls
repnz
mov
fimuls
xchg
jp
mov
cwtl
je
out
xor
movsb
into
pop
jp
cmpsb
pop
mov
or
xchg
aad
cmp
xchg
outsb
popa
mov
cmp
cltd
mov
sarb
xor
cwtl
jnp
movsl
mov
leave
pop
xlat
sbb
pop
or
sub
dec
dec
sub
mov
push
cmpsb
cmc
aas
lret
xor
imul
jns
cwtl
orps
repnz
imul
out
icebp
sub
sahf
js
mov
add
mov
push
ret
inc
test
lods
leave
roll
adc
into
and
scas
lret
hlt
adc
sub
xchg
jbe
ss
push
cwtl
loop
punpcklwd
and
sahf
icebp
stos
sarl
lcall
ja
and
pop
pop
pop
xchg
jne
frstor
outsb
test
adc
xchg
lcall
adc
sarb
test
and
in
lea
ficomps
dec
ja
mov
adc
mov
sub
into
inc
outsb
adc
push
out
lock
fmull
inc
sbb
insb
mov
mull
jne
dec
push
lahf
push
scas
aas
pushf
lret
adc
shll
lea
or
dec
and
das
lock
jmp
lahf
jae
pop
push
aaa
std
inc
test
rcll
das
cld
in
jae
mov
cmc
dec
mov
outsl
hlt
jnp
icebp
pop
mov
mov
mov
out
lds
jg
es
jnp
insb
icebp
pusha
jae
les
test
outsb
mov
clc
add
in
test
popf
out
push
test
sbb
ljmp
test
rclb
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
and
push
pop
sbb
jno
sbb
pop
aaa
loop
jge
sbb
mov
jae
test
in
dec
stos
jp
or
xchg
xchg
out
dec
stc
inc
inc
addr16
mull
or
test
lcall
mov
push
fistps
add
sahf
push
sub
ss
mov
jno
push
out
xor
in
sbb
dec
mov
lock
sub
mov
mov
fstpl
cmpsl
test
dec
xchg
adc
sub
dec
jg
outsb
fsub
sub
clc
push
xlat
xchg
cmp
in
vpcmpeqb
pop
xor
cmp
mov
add
xor
stos
out
shll
stos
mov
fwait
cmovg
and
dec
mov
jno
clc
pop
inc
sbb
dec
add
cmp
lret
int
inc
mov
xchg
adc
mov
mov
adc
push
loopne
leave
and
and
jmp
fidivl
push
cmp
fisttpll
mov
xor
cmp
push
int
pop
or
pop
repnz
dec
mov
lea
mov
jb
xchg
cmp
jg
outsl
xchg
aaa
xchg
mov
jo
mov
shrb
inc
sub
inc
rorl
std
xor
or
pop
and
cmpsb
movsl
or
cmp
push
out
ffreep
loopw
ja
jp
add
dec
fistpl
test
mov
sbb
out
mov
dec
imul
rcrb
mov
ret
jno
add
sub
adc
sub
cmp
mov
mov
loop
mov
add
jmp
push
jno
mov
mov
int
je
dec
iret
out
aam
jecxz
push
fmul
insl
shlb
arpl
sub
jge
lret
fsubrl
repz
sbb
ljmp
rclb
into
sti
mov
in
cltd
adc
xchg
and
lds
mov
inc
jb
cmpsl
jge
sti
cli
lock
scas
fdivp
xor
inc
out
aam
adc
adc
sti
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
push
push
loope
es
cld
imul
jg
sub
and
ljmp
inc
in
adc
cmp
daa
cs
xchg
mov
push
movsb
sahf
test
std
lret
or
and
stc
mov
outsl
lret
fldcw
fnstcw
and
push
jmp
jecxz
jb
sahf
js
fdivr
mov
xchg
cli
inc
sti
std
lret
inc
mov
lock
mov
and
in
hlt
aad
cmp
jo
adc
xor
mov
dec
mov
push
inc
aaa
dec
aaa
cmp
sub
int
push
addl
sub
add
imul
scas
sbb
inc
arpl
jno
xor
jg
cmp
mov
xchg
adcl
ficomps
pop
mov
pop
add
mov
psllq
pop
bound
cmp
test
xlat
mov
jnp
addb
cltd
xorb
out
pusha
xchg
mov
aam
xchg
daa
cmpsl
into
fs
mov
xor
and
pusha
sahf
xchg
adc
add
icebp
popf
xor
ret
adc
cmp
adc
and
test
mov
push
mov
mov
aam
inc
in
and
pop
pop
ss
mov
fucomip
adc
xchg
mov
add
rcrl
shr
std
lret
xchg
and
xchg
arpl
mov
pop
cmc
mov
sub
popf
xchg
outsl
into
jge
cmpsl
test
movsl
cltd
test
insb
ljmp
imul
mov
push
push
inc
and
enter
pop
fs
in
cs
call
jo
cltd
iret
gs
push
mov
xor
cmp
leave
cmpsl
sbb
cmpsl
cmpsl
mov
cmpsl
mov
and
and
mov
mov
ret
lds
mov
decb
popl
pop
imul
ds
sbb
cmpl
mov
sahf
test
fs
test
dec
out
adc
ja
sbb
mov
add
xchg
fisubs
jle
jg
pop
inc
in
jl
bound
xchg
add
push
or
xchg
mov
fiaddl
pop
mov
imul
enter
insb
cmp
scas
add
lea
rcrb
call
fstpt
leave
xor
out
mov
push
jecxz
call
bound
pusha
cli
adc
xor
mov
movntps
leave
add
cli
jp
xchg
sahf
push
repz
scas
dec
lea
pop
add
movsl
xor
or
fisubl
cmp
out
sahf
cli
push
dec
inc
loope
inc
adc
sub
sbb
xchg
add
mov
or
movsl
jmp
push
dec
jg
ss
adc
idiv
lret
cmp
sbb
lcall
lods
xchg
pop
test
cli
xor
rorb
push
and
adc
adc
xor
jb
loop
dec
mov
pop
repnz
sub
sbb
mov
arpl
mov
in
inc
scas
add
add
pop
push
push
pop
pop
test
pusha
lret
sbb
fidivrl
sub
fnstsw
add
fdivs
lods
pop
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
inc
daa
mov
pop
pop
jne
pop
stc
shrb
and
mov
dec
fstps
mov
sbb
push
push
jg
dec
and
sub
cmp
dec
push
jmp
call
je
rclb
mov
sbb
xchg
inc
xor
aaa
cmp
sbb
sub
icebp
mov
setno
jo
xor
lcall
jae
xor
ret
rcll
xchg
test
and
inc
aaa
jbe
push
mov
mov
sbb
lods
aad
daa
aas
shrb
mov
nop
loop
or
lret
mov
stos
push
test
add
mov
pop
push
mov
inc
pcmpgtd
mov
mov
pushf
and
sti
shrb
pop
hlt
nop
cld
mov
orl
pop
sub
data16
mov
dec
into
int
mov
pushf
jge
aad
imul
and
or
andl
fildl
sub
pop
cmpsb
mov
adc
dec
mov
sbb
sbb
pushf
mov
adc
or
pop
cld
push
outsb
scas
push
negl
jns
iret
addb
mov
push
and
adc
outsl
insl
sub
mov
xchg
das
lds
enter
and
dec
dec
or
sti
push
in
pop
stos
mov
testb
int
sti
dec
jo
mov
sub
cmc
fldl
fwait
jo
jcxz
add
dec
add
dec
dec
inc
mov
out
pop
mov
xchg
mov
dec
xor
fwait
in
cmp
dec
scas
rcrl
sub
fidivs
inc
and
cmp
fimuls
jp
pop
fistps
add
xchg
add
xorb
nop
sub
jns
in
ret
xor
pop
cmp
lods
movsl
xchg
mov
js
jmp
repnz
cltd
mov
sarb
aaa
lods
mov
pop
aad
add
mov
xchg
pop
jb
pop
mov
enter
sbb
rorb
push
je
and
popa
cmp
dec
iret
mov
xor
or
jg
mov
lret
and
mov
int
mov
rcll
push
push
enter
push
adc
out
mov
and
js
sbb
or
out
ljmp
enter
mov
out
sub
add
mov
or
push
jns
add
mov
mov
loope
xchg
jmp
or
inc
xor
fldl
pop
push
fsubs
xchg
hlt
lds
pop
inc
cmpsl
aaa
and
xor
scas
std
jae
add
inc
lea
xchg
movsl
pop
xchg
nop
dec
enter
add
mov
repnz
xchg
into
push
dec
sbb
push
test
or
inc
out
pop
sub
out
adc
pop
push
or
pop
xchg
out
or
cmp
sub
mov
call
and
js
mov
cmp
in
ret
cmp
mov
pop
xor
in
mov
sbb
dec
leave
jb
xchg
stos
les
inc
addr16
in
mov
add
xor
xchg
push
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
or
dec
sbb
stos
adc
sbb
cmp
sub
cmpb
cld
inc
push
mov
aam
mov
xchg
push
push
sub
add
dec
inc
mov
adc
je
adc
enter
push
in
lock
add
fmuls
popf
jge
xchg
lods
ds
pop
cmpsl
into
cmc
mov
cmp
jno
inc
jo
add
sbb
shr
shll
dec
pop
shll
ret
dec
lcall
dec
jp
mov
leave
lcall
sub
jmp
or
testl
or
mov
sbb
pop
add
inc
lcall
add
ljmpw
test
pop
daa
inc
push
inc
jns
ret
ds
in
xchg
fdivrp
lret
movsl
dec
clc
mov
push
lods
dec
lock
arpl
adc
sbb
call
pop
xor
adc
mov
cwtl
jbe
fstl
or
or
or
pop
pop
and
xchg
xor
jp
push
mov
add
or
fists
dec
scas
fs
and
nop
mov
fstps
sub
stos
repz
out
popf
mov
data16
into
jae
push
pushf
push
add
pop
xor
pop
inc
mov
pop
bound
cmc
scas
mov
jge
out
push
test
movsl
add
jb
add
mov
sti
cmp
mov
enter
cmp
rcrb
push
mov
fstpt
jns
xorl
cmpsl
mov
call
in
aam
test
add
jp
in
mov
in
test
push
cmc
scas
je
les
js
mov
lea
xchg
imul
shrb
fistpll
jl
mov
icebp
stos
sahf
dec
jle
sbbl
mov
cli
dec
xor
sub
loop
in
sub
aaa
fistps
jne
xor
sarb
ret
repnz
adc
push
sbb
fiadds
lahf
roll
sti
popa
ret
out
xchg
out
shl
inc
cmp
movsl
inc
loope
fwait
js
mov
insb
jo
sbb
insb
js
push
in
enter
stos
icebp
inc
or
jae
mov
push
xlat
xlat
push
and
sbb
inc
mov
nop
jle
orb
jno
push
and
loope
pushf
push
mov
orl
lods
dec
shll
jo
or
popf
jne
xor
or
into
inc
inc
mov
mov
sub
mov
add
mov
loopne
jne
adc
adc
orb
lock
lcall
jmp
jbe
lods
push
lret
and
mov
mov
pop
cmpsl
arpl
addl
test
cmpsl
push
jb
push
pop
sahf
sub
pop
insb
ja
ret
jno
repz
in
shlb
out
pop
cmpl
scas
cltd
xchg
in
dec
mov
xchg
fwait
adc
stc
ljmp
and
imul
gs
cmp
or
les
icebp
add
mulb
cmp
mov
mov
ds
jbe
insb
add
out
add
aas
stos
adc
popf
inc
and
dec
gs
ja
add
in
cmp
lods
pop
enter
push
sar
jbe
sub
or
movsb
enter
jbe
enter
mov
add
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
jno
fs
sbb
stos
adc
sbb
dec
andb
xlat
pop
lret
leave
xchg
mov
jo
push
arpl
inc
pop
mov
mov
hlt
jge
mov
add
sub
ja
icebp
pop
mov
repnz
js
mov
or
mov
adc
out
div
mov
mov
cmpl
push
or
and
addl
pop
imulb
push
pop
sub
xor
mov
xor
into
mov
fistpl
pop
cmp
dec
mov
adc
mov
ljmp
sub
mov
inc
test
pop
xchg
aaa
lea
jmp
je
mov
cwtl
dec
outsb
cmpsl
into
pop
pop
push
aaa
push
and
rclb
std
insb
cs
pop
push
add
mov
aas
ret
xchg
fisubl
push
gs
push
bound
adc
xchg
data16
mov
call
jo
mov
test
loopne
outsb
stc
hlt
call
xchg
bound
in
adc
lcall
scas
call
and
sub
xor
fmull
scas
xchg
jge
cli
adc
out
and
ror
lods
aaa
push
jg
push
fldt
adc
std
orb
or
push
mov
rcrb
movsl
cmovb
ret
sti
push
xchg
sbb
stos
shlb
cmc
stos
faddl
xchg
dec
out
dec
ljmp
mov
xor
mov
sub
mov
mov
out
xor
add
clc
out
or
push
cmpsb
jp
setge
sbb
sub
mov
mov
pop
mov
mov
push
icebp
sbbb
mov
rorl
jmp
es
loope
in
adc
pop
cmpsl
mov
xchg
lcall
lret
scas
sbb
fxch
call
inc
lods
lahf
jnp
add
dec
xor
rcl
or
cltd
cltd
adc
fldt
mov
mov
adc
sbb
or
pop
cmp
xchg
inc
ds
lret
and
out
adc
mov
scas
push
push
and
stos
sbb
mov
and
mov
icebp
das
dec
aad
sbb
lods
icebp
sbb
shlb
lock
cmp
xor
dec
mov
inc
push
out
xchg
adc
insb
int
ljmp
movsb
pusha
inc
jmp
loopne,pn
test
sub
mov
or
or
std
imul
ret
push
push
or
imul
pushf
movsl
pusha
jno
inc
dec
mov
int3
mov
sarb
cli
inc
xchg
pop
add
pushf
inc
push
scas
bound
xchg
es
arpl
hlt
repnz
or
lods
cmp
hlt
xchg
imul
shll
dec
std
xlat
cmp
loop
lds
lahf
push
lea
and
subb
shrl
lods
pusha
repz
aas
in
dec
cmp
pop
jg
cmp
outsl
or
xor
cmp
dec
movsl
arpl
pushf
xchg
push
xor
sub
push
cmpb
outsl
les
xor
xchg
test
ja
jecxz
dec
inc
xchg
sub
cwtl
and
mov
xor
mov
ret
movsb
inc
dec
pop
cmpsb
jnp
mov
out
xchg
sub
jmp
addr16
aaa
inc
sbb
das
push
mov
pop
in
icebp
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
jae
stos
idivl
sbb
stos
adc
sbb
js
sub
xchg
enter
out
and
mov
mov
das
adc
iret
inc
mov
out
call
inc
jmp
test
xor
jne
out
xor
jbe
pop
pop
testb
addb
nop
testl
rcll
mov
dec
inc
or
xchg
div
loope
ja
pop
loopne
es
jp
sub
inc
pop
pop
mov
int
int
sub
sbbb
rcrl
mov
adc
pusha
jp
les
cmc
jae
jns
lods
jg
pop
cmp
enter
fcomp
lds
in
xchg
shr
xchg
enter
inc
xor
mov
sbb
push
sub
fnstcw
jns
mov
sbb
sub
dec
std
das
out
jg
inc
in
ja
insb
xchg
loop
jg
nop
pusha
das
into
test
pop
adc
or
adc
pop
mov
fnstcw
lcall
lret
imul
adc
lods
std
cmp
and
sub
push
pop
fsubl
testb
mov
andl
mov
out
xchg
jns
sub
cld
movb
sbb
clc
rorb
addr16
adc
loopne
jae
jno
pop
jl
jnp
inc
xlat
lock
outsb
xor
movsl
adc
adc
jp
dec
xlat
scas
jno
fmull
push
xor
bound
mov
cmp
sub
mov
jbe
test
xorl
fidivrs
clc
call
dec
mov
adc
cmpsb
shrl
enter
insb
clc
xorb
int3
ret
xor
cmp
sbb
scas
adc
adc
sub
adc
push
xchg
jno
mov
cld
xorl
jo
lret
scas
adc
dec
pusha
fstpl
sbb
cmp
or
jno
xlat
mov
mov
subl
orb
push
js
cwtl
call
inc
jno
shl
mov
cmp
add
mov
cwtl
adc
xchg
jbe
xchg
adc
mov
mov
mov
jbe
fwait
sti
nop
jle
ficomps
scas
fnstcw
push
jle
aam
popa
push
inc
pop
push
push
popf
popl
mov
xor
bound
insb
aas
fxch
jae
mov
sub
xchg
cltd
nop
loop
adc
rorl
call
test
xor
sbb
mov
jecxz
pop
and
cmpl
xchg
rcrl
sbb
inc
xchg
xchg
sbb
fcomps
push
cmc
shll
test
add
inc
xchg
orb
enter
in
cmpsl
jle
nop
adc
scas
cmpsb
sub
enter
fwait
lret
outsl
pushf
sti
sahf
push
jo
int
call
jge
stos
insb
adc
mov
sub
ja
je
outsl
popa
push
pop
and
mov
add
cs
xor
enter
aaa
mov
and
fnsave
mov
or
sub
sub
or
adc
mov
dec
lods
inc
ss
or
add
leave
cmpsb
repz
dec
cwtl
or
add
xchg
cmp
mov
xchg
call
pusha
inc
jl
neg
jmp
dec
fcoms
pop
add
add
fimuls
icebp
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
push
jmp
jl
xor
sbb
xchg
loopne
test
mov
add
ja
xchg
fstpl
int3
aas
cmp
iret
mull
ljmp
call
out
and
dec
stos
cltd
sbb
fs
inc
dec
and
adc
sub
cld
jle
sahf
imul
lret
lret
pop
xchg
xor
loope
fdivrl
cmp
nop
mov
sti
jns
or
mov
enter
mov
adc
inc
mov
inc
push
sbb
push
cmpsb
inc
mov
dec
dec
adcl
or
aad
mov
push
mov
push
cmpsb
fndisi(8087
into
and
cmp
xlat
decb
or
fcoml
pushf
mov
nop
cli
jbe
ds
mov
mov
sub
and
in
out
sbb
test
int3
out
push
pop
aaa
into
adc
xor
adc
add
jnp
add
dec
lcall
mov
dec
lahf
das
mov
fincstp
icebp
faddl
test
xchg
lret
lret
popf
pop
pusha
jecxz
cmpsb
pop
or
sbb
pop
push
ss
je
push
pop
sbb
imul
out
sbb
mov
pop
not
adc
mov
insl
add
inc
fnstenv
mov
popf
cwtl
pop
push
sti
mov
mov
popa
dec
mov
cmp
imul
ljmp
jmp
push
aad
mov
or
out
pop
or
mov
cmp
sarb
mov
shlb
inc
in
nop
into
adc
popa
lods
iret
cmpsb
and
sbbb
call
rorl
jl
cli
xor
shrb
dec
call
stos
stc
push
jle
repz
jp
mov
sub
and
jmp
fnstcw
repnz
hlt
inc
fcomip
cmc
sbb
imul
leave
mov
icebp
mov
call
pop
jmp
mov
xchg
shlb
jmp
mov
out
incl
jmp
dec
stc
sbb
jl
jg
push
add
and
mov
mov
push
clc
icebp
cmp
sarb
sub
lods
ljmp
iret
aaa
sub
xor
imul
mov
aam
push
mov
mov
pop
and
mov
idivb
scas
sbb
jns
sbb
mov
push
jb
jge
sub
out
jmp
sti
loop
loop
push
in
test
and
adc
jecxz
jno
or
fnstenv
imul
xchg
dec
sbbb
dec
mov
sub
stos
mov
cli
repnz
or
ss
shll
pop
xchg
test
data16
sbb
popf
aam
dec
cmp
jle
sub
xor
xchg
pusha
ficoms
cmpl
mov
ljmp
mov
adc
cmp
mov
adc
xchg
push
lods
shll
jns
cltd
jmp
fcmovbe
lcall
cltd
icebp
xchg
nop
icebp
test
orl
fbstp
iret
and
xchg
test
cmp
jmp
cmc
add
push
xor
fiaddl
xor
sbb
nop
lds
sahf
and
xlat
pusha
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
fwait
jo
sub
sbb
adc
sbb
and
xor
jmp
daa
out
aaa
aaa
js
xor
and
fwait
nop
fwait
std
sti
mov
pop
push
es
xchg
jg
ds
lea
jb
or
pop
cli
pop
stc
movsl
add
aaa
sub
aad
cmp
cmp
and
js
or
ret
fistl
jno
int3
mov
stos
mov
xchg
das
adc
sub
xchg
out
mov
pusha
mov
arpl
call
mov
and
mov
mov
test
adc
outsb
mov
in
stc
aas
cs
pop
or
sbb
cmc
pop
dec
insb
mov
ja
dec
cmpsl
sub
or
test
mov
test
addr16
inc
xor
dec
test
ret
mov
pop
jb
mov
mov
loope
xchg
bound
loope
lea
cli
lods
push
or
mov
cmp
push
cmpsl
add
inc
mov
insb
push
outsl
xor
aad
xchg
or
inc
pop
les
out
fldcw
call
xchg
pop
push
and
popa
and
loop
fdivl
aam
scas
xor
xchg
sub
mov
xor
shll
inc
push
sub
mov
cmp
into
paddusb
lret
adc
xor
adc
out
imul
ficomps
dec
dec
push
aas
jbe
popf
mov
mov
fdivs
jecxz
mov
clc
xchg
fwait
inc
data16
mov
push
mov
lds
mov
jle
sbb
mov
jns
push
jb
or
and
les
mov
lods
add
fildl
pusha
inc
nop
test
push
lahf
shl
xchg
sarl
mov
or
xchg
imul
sub
and
stc
loop
sub
and
xchg
data16
in
push
mov
xor
dec
jnp
mov
add
inc
pop
rcrl
mov
loop
mov
inc
stc
nop
xchg
das
ret
arpl
mov
inc
add
push
cld
push
pop
cmp
mov
or
mov
sbb
cmp
xchg
jge
cwtl
xorb
fwait
shll
mov
mov
sbb
mov
or
sbb
cmp
xchg
mov
rcll
mov
mov
dec
add
gs
test
sbb
aam
out
lahf
ja
jo
repz
push
loopne,pn
add
lahf
mov
loope
scas
mov
ja
mov
jge
mov
mov
xlat
lret
and
mov
xchg
mov
jns
xchg
dec
push
xchg
mov
xchg
mov
push
fwait
cmp
xor
loope
cwtl
sbbl
frstor
imulb
imul
int3
adc
dec
leave
mov
mov
sti
outsb
fcmovnb
add
mov
jo
mov
jo
in
mov
cmpsb
clc
in
mov
sub
xchg
push
cmp
cmp
sahf
outsl
stos
inc
xor
jmp
push
mov
mov
jg
ss
mov
cmp
imul
and
add
fistl
mov
in
mov
xchg
inc
clc
add
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
ret
shlb
sbb
adc
sbb
mov
es
mov
cmpsl
lahf
int
adc
jns
jnp
jecxz
lds
xlat
jns
out
or
mov
mov
hlt
dec
jno
dec
and
sbb
or
mov
adc
adc
dec
int
faddl
daa
movsl
adc
ss
les
movb
jle
out
lret
jnp
in
incb
cmp
cld
jbe
xchg
dec
scas
and
pop
mov
rcrl
push
dec
insb
push
lds
out
leave
in
mov
lods
dec
dec
cli
mov
xchg
pop
mov
fistps
xchg
add
add
push
fdivrs
pop
je
pushf
pop
xor
outsl
lods
add
pop
mov
mov
lods
or
hlt
fcoml
test
cmp
add
pushf
imul
pop
std
and
stos
jl
sub
icebp
or
jae
jmp
mov
subl
outsb
xchg
mov
xchg
int
xor
pop
dec
aaa
mov
cvtps2pd
or
adc
and
das
dec
and
loopne
mov
lcall
and
mov
pusha
stos
movsl
jnp
push
pop
pop
fs
mov
sbbl
inc
push
inc
sbb
xchg
fildll
nop
mov
sbb
loope
xor
push
cs
ret
mov
loope
dec
xchg
lock
cmp
and
jbe
rcr
loopne
inc
out
add
stos
sub
xor
mov
jnp
in
rcl
shlb
fsubs
sbbl
push
nop
test
ds
mov
or
arpl
cmc
mov
out
dec
dec
mov
insl
js
cmp
mov
push
xchg
push
jb
mov
pop
out
int3
cltd
or
xor
icebp
fstpl
mov
pop
add
cmpsl
push
addb
or
mov
mov
in
cmpsl
or
adc
push
out
mov
jmp
dec
add
pop
es
push
inc
das
sahf
mov
aas
repz
cmp
fimuls
cmp
add
icebp
sbb
rcl
stos
dec
add
push
iret
cli
cwtl
sub
mov
dec
filds
mov
aam
in
ja
jmp
test
or
popa
inc
roll
inc
and
xchg
call
add
inc
cmp
add
ja
lods
xchg
xchg
enter
shll
mov
and
xchg
pop
daa
sahf
inc
scas
adc
arpl
pop
imul
add
push
jns
cmpsl
pop
ja
mov
jmp
inc
sbb
mov
mov
pop
imulb
mov
mov
adc
mov
mov
scas
nop
rcrb
icebp
mov
push
aaa
dec
lods
popa
dec
jmp
test
sub
imul
or
xor
or
xor
js
add
rol
fs
push
aam
insl
dec
outsb
mov
pop
jp
cmp
cmpl
mov
jl
in
add
sbb
test
shr
mov
xchg
lea
push
out
mov
js
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
outsb
lret
jo
sbb
sbb
adc
sbb
out
jnp
out
pushf
mov
cmpsl
xor
push
out
aaa
aam
lock
ret
adc
fs
mov
dec
mov
add
or
aam
adc
mov
andl
insl
dec
std
xor
outsl
fdiv
dec
out
jg
adc
ret
in
mov
jbe
repnz
pushf
ficompl
mov
out
sub
lods
inc
pop
outsl
pop
dec
sbb
shrl
cli
jb
sub
push
out
push
cwtl
into
mov
adc
push
sub
popa
lods
add
xchg
fldt
mov
aam
pop
and
stos
leave
jmp
mov
cmp
sahf
push
push
js
rclb
sbb
in
std
inc
add
into
cmpsb
pop
ret
sahf
or
mov
cmp
neg
call
hlt
inc
or
xor
mull
fdivl
sub
scas
jge
inc
xchg
add
shll
sbb
ljmp
cmpsl
add
dec
mov
jne
dec
add
insb
sbb
jmp
adcl
data16
inc
push
sahf
and
mov
push
jmp
push
push
xchg
pop
mov
mov
frstor
xchg
js
in
and
lahf
test
dec
pop
popa
and
lcall
mov
pop
pushf
mov
mov
jge
dec
pop
dec
ss
scas
inc
cmp
mov
jmp
ljmp
mov
rcrl
test
or
mov
imul
bound
adc
and
mov
imul
clc
xor
lock
mov
arpl
and
gs
mov
pop
inc
insl
add
ss
mov
int
sbb
mov
outsl
int
lcall
movsb
in
je
std
test
ljmp
dec
mov
inc
cmp
xor
faddp
xchg
in
lret
ret
icebp
inc
loop
jmp
dec
push
js
inc
mov
outsb
scas
xchg
xor
test
pop
push
clc
xor
fistl
rclb
dec
inc
mov
rcll
and
or
mov
stos
test
sub
pop
into
push
jbe
stos
in
mov
cld
addb
lock
dec
pop
or
ss
fidivs
mov
mov
xor
movsb
pop
adc
and
sbb
mov
aas
add
enter
cwtl
mov
push
mov
aad
lahf
mov
lods
bound
adc
leave
inc
mov
pop
mov
inc
add
sub
mov
xchg
xor
iret
xadd
out
and
imul
in
repnz
ja
je
dec
sub
cwtl
fisttps
repnz
cmp
fstpl
or
jmp
add
shrl
stos
pop
out
add
cmp
or
leave
ret
rcl
mov
cmc
jecxz
lahf
rclb
pop
jae
and
icebp
arpl
stos
xchg
and
dec
mov
jge
inc
and
cmp
push
or
sbbb
mov
lret
jl
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
jge
mov
push
push
sbb
lret
call
mov
ljmp
xchg
xchg
adc
scas
mov
mov
dec
mov
push
xchg
or
lock
jb
int3
ficoml
sbb
cli
xchg
fstl
icebp
inc
jo
push
fwait
dec
mov
push
in
mov
dec
jnp
push
jno
mov
xor
xor
stos
inc
xor
ret
jbe
sbb
sub
or
push
mov
in
cli
mov
xchg
sarb
int3
fnsave
gs
rol
fidivrs
stc
xlat
pop
mov
popf
ret
jecxz
mov
shrl
xor
fneni(8087
adc
popf
push
dec
dec
mov
or
jg
dec
loope
lds
leave
mov
push
outsb
add
js
je
les
pop
adc
pusha
mov
in
insb
mov
mov
add
mov
mov
add
push
mov
mov
mov
and
mov
mov
int3
sbb
pushf
push
xchg
addr16
cmp
dec
enter
add
pusha
push
leave
lcall
addr16
enter
dec
sub
test
popw
pop
add
xor
stos
pop
push
jmp
popf
jns
dec
stos
int3
inc
and
sbb
push
in
popf
rcr
xchg
add
sub
or
bound
std
sahf
cli
bound
icebp
leave
pop
sub
popf
mov
add
sbb
jg
fnstenv
scas
and
bound
add
aam
mov
lock
cli
sbb
dec
push
scas
mov
ss
out
mov
shl
pushf
ds
aad
mov
aaa
dec
mov
ror
mov
loope
enter
pop
dec
stc
push
pop
out
add
pop
push
out
xchg
aas
aaa
stc
sbb
imulb
outsl
lea
fistps
pop
jmp
cmp
movsl
xchg
lds
call
pop
test
mov
mov
mov
pop
movsb
cmpsl
loop
sub
inc
and
cs
ds
jmp
ja
les
out
dec
sub
cmp
adcl
pop
dec
cwtl
or
repnz
aas
cmp
loope
dec
in
idivb
gs
cmp
xorl
roll
bound
mov
xor
fidivrs
mov
int3
adcb
pop
mov
sub
filds
nop
cmpsb
mov
jmp
jne
out
add
xchg
aam
pop
mov
xchg
cwtl
push
or
test
push
sbb
loopne
and
dec
xor
imul
in
arpl
int
mov
xchg
add
pop
outsb
mov
jo
arpl
cmp
inc
mov
sbb
in
or
rcr
fistpll
mov
sub
scas
or
fidivrl
ds
stc
lock
imul
mov
in
scas
pop
outsl
pop
cli
jne
push
sahf
stc
sahf
add
jge
jecxz
pusha
das
mov
inc
adc
stos
jg
sub
add
sti
aad
xchg
rcrb
popf
movsb
aaa
js
mov
repz
test
dec
inc
jecxz
push
arpl
pop
pop
je
es
out
das
inc
jbe
dec
ficomps
fwait
orb
idivl
lahf
out
insb
aad
cmpsl
lret
fnstenv
push
xor
rclb
incb
shrl
inc
insl
jnp
push
and
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
dec
push
stos
mov
adc
sbb
jmp
push
call
addb
pop
test
sbb
cltd
test
jno
lea
loop
mov
or
or
xchg
sub
pushl
push
mov
out
or
cltd
pushf
sub
mov
or
lret
out
sbb
sub
mov
xchg
sub
xor
out
cmp
loopne
mov
push
xchg
xor
xor
loope
or
pop
movsb
mov
mov
xor
xchg
ret
xlat
mov
pop
in
push
andl
xchg
insl
xchg
sub
ja
cmpsb
les
push
pop
mov
pop
xchg
mov
mov
in
push
aad
or
and
pop
sahf
es
addl
mov
sahf
lock
mov
and
ja
sahf
rolb
outsb
pop
shll
insb
mov
cmc
test
test
dec
pop
outsb
jno
push
push
adcl
imulb
iret
jb
mov
movl
loop
mov
mov
pop
xchg
je
xchg
cmpsb
and
pop
xchg
adc
dec
and
pop
push
loope
jns
enter
sahf
insl
iret
fs
cmp
push
jmp
icebp
pop
push
data16
jl
xchg
jbe
lret
adcl
xor
add
insl
outsb
loope
out
mov
add
mov
sbb
push
mov
int3
loop
mov
lret
mov
or
jb
jne
push
sti
pop
push
push
ss
and
das
push
mov
dec
xchg
loope
jae
lods
andl
push
mov
mov
adc
or
jo
addb
hlt
jmp
mov
les
jnp
and
pop
fistpll
out
adc
pushf
cmp
add
sbb
ja
cltd
inc
xchg
fcomi
movsb
xchg
mov
lock
mov
mov
scas
or
jmp
roll
test
addr16
xor
and
inc
fsubrl
decb
scas
insl
xor
inc
loop
inc
adc
fistpl
fisttps
jnp
clc
out
andl
outsb
stos
call
sti
adc
cli
add
pop
push
push
push
cmp
cmp
push
inc
shr
lea
out
pop
ljmp
mov
dec
enter
stos
push
into
sbb
cwtl
sub
fdivrp
sbb
mov
push
aaa
cmp
mov
pop
stos
adc
out
int
add
cld
lea
jns
and
cli
pop
or
add
lahf
inc
out
aam
jnp
lods
jmp
cltd
loopne
out
jnp
xor
outsb
pusha
ret
shrb
aas
arpl
out
movsl
cmpsl
xchg
pushl
in
jbe
inc
dec
sub
ret
and
cmp
clc
jo
aas
pop
push
xor
jne
subl
andb
inc
push
xor
shrb
push
and
mov
scas
xor
ds
repnz
adc
or
mov
fisubl
jb
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
gs
pop
or
sbb
sub
stc
dec
lcall
dec
fstps
fadd
imul
xor
mov
in
pop
xchg
pop
fs
aaa
fstl
lods
pop
dec
jmp
shll
xor
mov
sti
imulb
andb
arpl
fistpl
out
es
cmp
pop
sti
jl
lahf
out
lds
and
insb
dec
push
xchg
movsb
push
xor
imul
cmc
xchg
orl
sub
adc
daa
inc
xchg
and
and
rcl
jnp
mov
fldenv
xor
psrlw
push
pushf
std
insl
pop
mov
dec
mov
adc
or
outsb
leave
cli
pop
orl
rcl
lea
data16
mov
hlt
aad
cmc
sub
aas
sub
nop
cmovno
outsb
loope
out
push
mov
sub
adc
rcll
scas
jno
imul
inc
push
jle
sub
mov
stc
xchg
pop
aad
lds
repz
jmp
stc
adc
cli
js
add
mov
xchg
lcall
pop
xor
lods
ffree
and
push
idiv
mov
jle
mov
ljmp
pop
insb
xchg
outsb
call
add
adcb
add
jl
jbe
ret
std
loope
and
and
and
or
and
xor
aas
mov
frstor
sub
adc
add
std
mov
jb
mov
fdiv
repz
stc
jp
lds
mov
ret
mov
jmp
test
leave
cmp
dec
sbb
out
cmpsl
pop
jg
or
stc
and
dec
js
jo
cmp
xchg
ret
shrb
mov
push
dec
xchg
jle
cmp
mov
inc
xchg
sti
aaa
xchg
fimull
lods
xchg
adc
push
repz
leave
push
jmp
sarl
jnp
cmpsl
adc
or
pop
lds
lock
mov
aaa
fistpl
mov
xorps
mov
fbstp
sti
and
bound
out
loop
jle
pushf
push
data16
shr
iret
jle
jbe
ss
popl
sub
inc
pusha
jbe
lcall
xchg
std
lods
scas
push
sub
daa
loop
xchg
into
addr16
decl
fidivs
lret
adc
stc
jno
cs
sub
inc
mov
inc
outsb
jno
daa
dec
aam
scas
shll
pop
jmp
in
push
mov
clc
out
sbb
mov
js
pop
xor
dec
ljmp
fldcw
imul
cmp
sbb
sub
pop
lods
addl
mov
mov
push
insb
xchg
dec
mov
jmp
cwtl
xchg
repnz
add
or
mov
mov
mov
mov
lea
nop
mov
scas
loopne
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
in
subb
hlt
add
sbb
mov
notb
mov
test
stos
sbb
in
sbb
gs
aad
in
pop
push
test
inc
popf
dec
push
lea
cmp
lcall
lds
mov
inc
mov
inc
in
sbbl
ljmp
lock
inc
jnp
mov
popa
inc
sub
jp
adc
sbb
add
cmc
xchg
cmpsb
dec
mov
sub
and
js
mov
dec
in
sbb
in
mov
std
mov
enter
jno
insl
fadd
fcmovnu
popf
jns
out
cmp
push
in
jle
data16
leave
or
int
add
pop
mov
add
outsl
add
jnp
bound
mov
call
inc
inc
inc
mov
jp
jge
adc
imul
dec
loope
das
or
push
shlb
mov
pop
adc
ljmp
dec
inc
clc
lea
sub
xor
or
ss
mov
lds
das
dec
jae
push
mov
lret
push
pushf
cmc
push
mov
popf
or
xchg
adcb
mov
loop
jo
test
or
mov
aas
lods
les
insb
pop
or
sahf
dec
repnz
sub
mov
adc
mov
mov
mov
test
dec
adc
dec
xlat
sub
inc
mov
out
gs
ret
push
sbb
out
jbe
out
cmp
push
xor
add
xchg
adc
shlb
push
pop
fidivrs
lds
lcall
and
lcall
lock
sub
push
mov
push
outsb
mov
insl
and
xchg
daa
gs
cs
pop
pop
cmp
adc
das
xchg
ljmp
test
mov
cmovg
pop
clc
aam
mov
or
hlt
ds
and
xor
inc
push
sbb
and
add
aas
lods
jno
fs
cmpsb
cmp
pop
inc
test
jp
js
fmuls
aam
fldcw
and
shrl
push
shll
push
dec
mov
jo
movsb
mov
mov
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
mov
fwait
adc
sbb
psraw
stos
addb
idiv
mov
or
push
shll
in
cs
push
sub
pop
sub
sbb
xor
mov
add
out
sbb
mov
xor
aad
dec
xchg
adcb
sarb
scas
xchg
rclb
dec
jg
in
lea
int3
ds
mov
shlb
shl
and
push
test
mov
inc
ljmp
loop
loope
aas
ficoms
xor
ret
pop
rorb
xor
xor
cmp
in
je
sti
xchg
ret
mov
sahf
mov
repz
fidivrl
and
leave
jo
xchg
mov
mov
lea
push
outsl
jle
scas
scas
push
addr16
shlb
mov
outsb
push
lods
inc
jge
mov
out
add
sub
push
mov
ret
data16
and
jno
mov
sub
xor
inc
and
and
cmc
insb
cmp
mov
cmp
pop
pop
imul
add
cmp
test
cmp
addl
xchg
out
push
fimull
ljmp
pop
imul
aaa
pop
push
aad
imull
repnz
sub
pop
xchg
or
dec
add
cmp
push
adc
paddusb
xlat
jle
mov
repnz
push
les
adc
mov
test
subl
mov
xor
push
mov
pop
push
aad
xchg
sub
ds
adc
cltd
xor
mov
jnp
das
push
lods
es
popa
fistpll
push
stos
ret
cmp
imul
mov
or
and
jge
insb
scas
xor
add
gs
jb
push
dec
mov
adc
jecxz
adc
imul
fnsave
sub
pop
fistpl
cmp
pop
pop
test
sbb
cmpsl
push
daa
mov
lcall
mov
ret
pop
in
jge
mov
inc
pop
mov
or
jno
aaa
clc
fwait
adc
dec
pop
lcall
and
adc
daa
dec
fstl
sub
out
mov
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
inc
loope
testb
cmp
inc
out
ljmp
mov
adc
scas
push
subl
out
rcrb
jno
jmp
addr16
fld
and
outsb
fnstenv
loop
jg
jp
movaps
outsb
cmp
adc
cmp
sarb
into
and
pop
out
jecxz
mov
mov
push
push
adc
pop
test
xor
mov
nop
in
cwtl
hlt
leave
sbb
mov
jecxz
int
lea
sub
push
cmp
jg
xor
loope
mov
out
dec
mov
dec
xor
xor
or
mov
mov
sbb
loopne
cmc
xchg
cli
and
or
pushf
jle
pop
insl
xlat
mov
out
popf
js
inc
mov
lea
push
mov
in
test
xlat
inc
jp
add
xor
int3
stos
xchg
inc
sbb
pop
jae
push
pop
cmpb
in
pop
fcmovne
rcrl
in
mov
sbb
nop
jmp
sbb
jnp
fisttps
sub
popa
data16
mov
jl
add
stc
stos
push
andb
sub
mov
fmuls
inc
or
mov
mov
jns
cmp
fistpll
mov
sbb
out
pop
sbb
fisttpll
sub
mov
sbb
adc
push
cmp
adc
or
subl
add
mov
xor
lds
rclb
xchg
mov
sbb
popf
call
mov
jmp
mov
int3
fstl
shlb
pop
xor
filds
add
push
mov
out
jns
ljmp
xor
outsb
out
loopew
cmpl
sbb
jo
inc
or
mov
imul
fdivrs
inc
mov
xor
lods
inc
mov
sub
and
pop
cwtl
push
sub
in
in
cs
dec
inc
adc
ret
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
cmpsl
jnp
jp
push
sbb
adc
sbb
daa
movsl
das
mov
outsl
sahf
inc
scas
mov
inc
adc
mov
popf
test
nop
clc
inc
sub
xlat
test
inc
add
mov
fsubr
and
mov
add
xor
jmp
mov
inc
and
cltd
xchg
les
mov
pop
pop
int3
mov
mov
out
sbb
mov
adc
mov
je
sbb
adc
negl
out
pop
cltd
fs
and
test
inc
fisubrl
adc
aam
xchg
inc
btc
aad
jg
xchg
sar
scas
and
cmc
subl
fdiv
int3
mov
ret
push
jg
insb
inc
fimull
xchg
cmp
popf
add
push
xchg
jge
xchg
mov
push
pop
push
or
sbb
sbb
xor
neg
in
and
push
xchg
sub
or
popf
cmc
add
dec
dec
aad
cmpsl
push
pop
xor
adc
push
add
out
les
or
cli
cmp
and
push
and
imul
sub
pop
add
in
roll
ja
dec
idiv
pop
outsl
pop
repz
sub
fdivrl
stc
dec
mov
cs
in
fnstsw
cwtl
leave
mov
and
mov
sarb
ret
out
loop
adc
push
adc
and
loope
nop
arpl
insb
cmp
mov
adc
cwtl
insb
inc
pop
arpl
adc
add
push
xor
mov
stc
les
mov
or
cli
mov
loop
in
push
lods
adc
enter
leave
mov
jnp
adc
out
mov
jo
je
call
daa
jnp
and
push
fs
lods
push
adc
out
cli
push
arpl
pop
inc
mov
cmp
mov
pop
cmpsb
jne
add
xchg
jb
movsl
pop
sbb
les
add
push
mov
nop
idivb
hlt
cmp
add
adc
sahf
ret
das
inc
popf
lock
fnstsw
adc
stos
and
sbb
dec
xor
mul
mov
sub
mov
clc
leave
cmpsl
fldt
popf
cmp
fmull
jbe
xchg
mov
lcall
call
dec
ret
cwtl
icebp
inc
cli
push
cld
scas
cmp
mov
imul
xchg
push
xor
xor
dec
fistps
adc
sbb
add
lret
ret
cld
pop
fnclex
call
sub
jno
xor
pop
inc
add
or
cmp
aaa
ret
pop
mov
pushf
and
jae
in
imull
jbe
dec
sbb
loope
jecxz
jmp
xor
jb
dec
insb
pop
fwait
pop
fwait
daa
in
dec
xchg
leave
pushf
insb
sahf
sub
jecxz
inc
lock
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
sbbb
pushf
jo
jbe
imul
jecxz
mov
mov
sbb
loope
scas
mov
cmp
loop
lcall
cmp
nop
xor
xchg
cmpsl
fmull
mov
into
test
stc
popa
dec
mov
adc
jecxz
hlt
aas
popa
jnp
and
std
daa
shrb
jmp
push
jg
enter
sbbb
sub
cmp
lahf
fsubs
or
mov
loope
mov
sbb
xchg
pop
dec
loope
in
mov
and
pop
inc
rorl
ficoml
sbb
cmp
loope
push
leave
add
adc
xchg
pop
aas
adc
dec
mov
leave
mov
xchg
jnp
jp
or
fmull
cmpsl
mov
popf
arpl
or
push
imul
jle
cmc
and
xchg
inc
test
push
mov
lea
mov
pop
nop
mov
ret
sub
outsb
or
jmp
popf
mov
loopne
inc
xchg
jmp
mul
mov
out
ret
pop
jge
stos
push
fbstp
jns
aad
sub
inc
movsl
pushf
dec
popf
sahf
inc
loopne
pop
inc
fisubl
clc
cld
popa
xorb
sti
mov
test
mov
xchg
jb
mov
push
ljmp
ret
jb
xchg
jnp
jae
jnp
pop
xchg
adc
and
push
mov
js
rcll
dec
lock
in
int3
mov
xchg
aam
and
pop
push
lret
xchg
lods
ret
fs
mov
inc
and
lcall
std
sbb
les
sbb
arpl
pop
loope
push
into
cmp
sub
daa
inc
sub
xor
jp
jns
pop
pusha
adc
or
or
cmc
push
adc
push
sbb
sahf
mov
arpl
and
mov
vpmulhuw
cld
repnz
cmp
xchg
cmpb
push
outsb
dec
push
clc
sub
pop
stc
leave
adc
addl
sub
das
mov
mov
push
negb
arpl
cmc
out
call
nop
jnp
shrl
xchg
mov
mov
mov
or
add
shr
sahf
outsl
addr16
rcrb
mov
push
push
lods
pop
test
or
imul
add
push
cld
repz
cltd
and
push
dec
dec
scas
inc
jl
in
adc
sbb
mov
ljmp
cwtl
push
adc
push
loopne
in
cwtl
push
mov
insb
out
xchg
sub
adc
adc
cmp
push
cltd
pushf
ror
das
push
into
movsl
out
in
and
inc
mov
sahf
js
mov
fsubl
sbb
aad
cmp
stc
shrl
push
dec
xchg
pop
mov
xchg
dec
cwtl
loope
aam
out
jo
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
xchg
adc
outsl
jmp
pop
incb
adc
js
or
les
adc
test
mov
test
repz
dec
add
hlt
add
stos
jne
mov
cmp
fwait
push
pushf
out
pop
dec
inc
aaa
add
shlb
cmp
lret
cld
inc
fldt
movl
call
mov
xor
sbb
push
subb
in
rcrb
push
push
xor
cmc
lods
mov
xchg
sub
in
and
xorl
and
lret
shlb
add
fsubl
dec
xor
lcall
sahf
or
or
test
pop
and
sub
or
iret
test
push
lcall
mov
and
xor
jae
sub
inc
scas
pusha
ret
pushf
sbb
in
push
cltd
pop
inc
xchg
les
pop
hlt
jp
std
std
mov
stos
orl
gs
mov
stos
inc
xchg
call
cmp
mov
pushf
andl
cltd
aas
hlt
cltd
jbe
inc
das
mov
jno,pt
sbb
mov
sub
jle
or
es
cmp
push
in
arpl
mov
mov
data16
jb
test
je
fmull
xchg
je
and
xchg
ret
pop
call
push
cmpsb
jns
lahf
sbb
call
out
mov
push
push
mov
sub
push
push
jmp
dec
movsb
dec
xchg
push
in
pop
push
push
jecxz
inc
cli
add
sub
popf
push
mov
scas
and
mov
test
pusha
mov
lods
stc
in
or
testb
dec
mov
scas
xchg
outsb
push
adc
jae
lahf
cmp
sub
add
adc
sahf
sar
in
jcxz
test
push
push
cltd
cltd
sub
mov
leave
shrl
sub
test
test
dec
or
mov
arpl
cmc
aam
in
fwait
and
out
mov
sub
push
sub
adc
push
sti
jecxz
xchg
lcall
insl
inc
loopne
scas
jo
lds
iret
lahf
xor
ret
mov
test
mov
jnp
jp
pop
adc
test
hlt
pop
enter
mov
mov
adc
push
arpl
fs
add
icebp
xor
cmp
and
lock
mov
mov
cld
les
inc
pop
xchg
inc
and
mov
aas
cmp
leave
inc
jg
movsb
sbb
jle
jae
push
int
out
cwtl
fmul
into
pop
push
lret
jg
cmp
stos
test
add
fldt
adc
out
mov
cld
enter
jns
lret
pop
jns
jmp
xchg
jnp
shlb
sbbb
cmpsl
jp
filds
shll
mov
jo
hlt
incb
pop
fbstp
rcl
pop
push
mov
sub
xchg
loope
xchg
xchg
and
xchg
ss
jp
inc
inc
or
jg
mov
lahf
jmp
imul
or
lds
adc
addb
xchg
repnz
testb
push
lock
neg
mov
sti
jge
mov
adc
pop
repnz
test
and
mov
add
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
das
cs
dec
dec
and
cmc
out
and
inc
es
inc
pop
repz
fwait
xor
adc
push
pop
mov
loopne
add
and
add
leave
jp
rolb
shrb
xor
dec
mov
shll
inc
and
xor
mov
cmpsb
jmp
sub
out
jge
fadds
xor
popl
jo
subb
sbb
ja
mov
bound
xor
inc
aam
mov
mov
push
add
inc
imull
inc
or
aam
xchg
push
call
ds
mov
fs
cld
xchg
in
push
push
fistps
or
cmp
lahf
and
adcl
push
int3
lds
rorl
or
insl
jmp
mov
sub
out
push
push
jne
into
inc
xlat
lcall
out
sti
lret
dec
jge
add
cmpsl
adc
pushf
int
repnz
stos
shrl
pop
mov
mov
ficoms
push
add
out
movsl
mov
adc
add
test
pop
mov
push
test
es
pop
add
pop
int
jns
imul
bound
or
pop
mov
stos
outsb
es
mov
cmp
xchg
add
lds
arpl
mov
ja
xchg
cwtl
xor
xlat
fimuls
inc
sbb
daa
sar
or
mov
fadd
inc
cmp
push
into
inc
pushf
stc
in
push
cli
sbb
loopne
cmpb
jmp
jp
lcall
fsubr
lret
push
iret
insl
mov
lock
fbstp
or
adc
inc
shll
mov
aad
pushf
push
mov
cmp
and
pop
or
pop
jge
jl
std
stc
jl
fcoms
dec
das
mov
cs
iret
push
faddl
ret
nop
xchg
mov
inc
fcomps
pusha
push
or
xchg
je
and
jne
and
lods
test
dec
add
shrl
stos
jp
xchg
dec
add
pop
lret
popa
imul
push
sti
inc
inc
test
ss
incl
mov
inc
in
fcmovb
int3
xchg
push
lock
pop
std
stos
sub
cmpl
add
into
or
cmp
push
popf
sub
div
xchg
pusha
cmp
fsubrp
movb
sbb
push
testl
cld
jbe
or
add
push
add
scas
and
icebp
sub
push
xor
mov
adc
inc
adc
cmp
inc
repnz
push
adc
test
add
jne
jecxz
push
shrl
cmpsl
or
lods
xchg
push
fdivr
adc
jne
imul
pop
dec
or
shrl
cs
mov
imulb
popa
out
cmp
sahf
jnp
ret
lods
push
adc
or
in
cmp
fidivl
cmp
jb
jno
push
cmp
insb
push
daa
call
cmpsb
xchg
aaa
or
jae
dec
int3
stc
call
dec
aas
insl
rorb
xchg
lock
iret
xor
jnp
xchg
out
jle
aaa
add
or
push
inc
jnp
adcl
pop
mov
cmc
inc
jb
xor
mov
or
adc
fists
insl
out
leave
das
and
mov
rol
inc
and
aad
add
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
dec
jge
push
fsts
sbb
lahf
das
jl
or
jb
cmpsl
stos
mov
std
or
rclb
insl
adc
sahf
push
sub
leavew
call
xor
pop
adc
xor
xorb
cmp
outsl
mov
popa
cmp
in
xchg
or
stos
rorl
dec
mov
ds
jne
jl
sub
push
ret
or
adc
xchg
scas
lea
mov
sahf
jbe
sub
cmovs
jle,pn
loop
sbb
adc
mov
pop
rcrb
idivl
pop
aas
out
and
or
push
mov
mov
xor
in
jmp
mov
or
dec
jmp
sbb
test
pop
stos
arpl
rcll
repnz
jp
ss
int3
out
dec
arpl
jge
sti
cmp
or
out
sbb
adc
mov
fcmovb
mov
clc
daa
mov
in
cmp
mov
in
fildll
pop
andl
cld
xchg
fwait
call
jge
adc
adc
insl
out
dec
mov
xchg
repnz
mov
pop
xor
dec
bound
cwtl
add
inc
cmpsl
and
mov
cmp
aad
jno
jg
in
and
adc
xor
loope
xor
aad
inc
push
inc
mov
jns
push
into
aad
push
lods
aam
sbb
jl
sbb
dec
fwait
cld
push
js
jb
push
outsl
push
ss
jo
call
cmpl
mov
mov
addr16
inc
mov
call
inc
aaa
data16
sub
addr16
movsl
mov
lea
pop
jae
loop
inc
jns
mov
arpl
jmp
push
pop
mov
cmp
adc
notb
stos
scas
add
dec
shlb
and
rcr
mov
xor
out
add
pushl
mov
stos
sub
shl
jnp
out
add
sub
sbb
and
pop
mov
lock
lret
leave
outsb
and
in
jo
xor
ds
add
aam
sub
fistpll
int3
fbstp
cmp
fmull
outsl
aad
js
std
jmp
pop
inc
stos
pop
movsb
sbb
pop
into
sub
inc
xchg
add
jae
nop
mov
in
imul
lods
push
sbb
fstp
jle
xchg
pop
test
dec
push
fsubl
je
cld
addr16
int
sub
icebp
sbb
cmp
sti
stos
inc
sbb
insl
adcb
iret
dec
jb
andb
sbb
out
jno
or
adc
jmp
leave
push
ljmp
dec
sub
shrb
ja
pop
add
push
shrb
fwait
out
jmp
pop
popa
lret
andb
pop
stos
ljmp
mov
and
mov
mov
cs
test
scas
cmpsl
aaa
sarb
sub
sti
loope
lods
in
dec
insl
pop
hlt
pop
iret
adc
cwtl
cld
sub
add
push
out
add
pushf
adc
fwait
scas
push
clc
add
and
lret
ljmp
inc
and
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
mov
rcll
sbb
shrl
in
xchg
cltd
jae
imul
dec
jmp
call
xchg
xor
dec
jecxz
out
add
sub
xor
jns
sti
fs
std
xchg
es
fs
lock
ja
dec
add
mov
imul
out
lret
jnp
push
adc
out
jnp
or
mov
ds
sahf
jns
fstpt
cmp
das
cli
in
add
pop
es
rclb
shl
and
add
dec
push
mov
jle
stos
lret
sbb
or
lods
xchg
xor
ljmp
fdivl
xor
jbe
testl
xor
cmp
pop
xlat
or
cld
mov
or
loopne
mov
jecxz
push
insl
dec
jb
add
daa
test
lock
cmp
cmp
xchg
push
sarb
sahf
push
mov
mov
hlt
mov
add
xchg
push
mov
xor
add
xlat
mov
jge
cmpsl
dec
dec
mov
cwtl
enter
mov
xor
dec
lcall
fcompl
push
fwait
pop
scas
cld
loop
cmp
popf
sub
je
movsl
gs
popa
dec
mov
and
push
repnz
das
xchg
xor
inc
imul
lock
iret
dec
dec
mov
int
fidivrs
adc
lea
dec
push
outsl
mov
push
push
in
je
sbb
sbb
movsl
adc
arpl
sbb
nop
mov
icebp
popa
imul
ljmp
out
or
add
popa
xchg
clc
pop
orb
add
addb
push
mov
cmc
xor
je
repnz
fmull
hlt
and
xchg
repz
xor
inc
push
push
sub
mov
mov
xor
fdivl
test
dec
adc
mov
pop
sub
adc
push
in
xchg
popa
or
or
decl
dec
mov
enter
lds
adc
push
pop
xor
add
jns
popf
addb
lods
stc
test
fcomps
mov
scas
enter
jno
or
mov
jmp
das
dec
call
pop
pop
mov
loop
and
inc
cmp
xor
mov
ret
jns
mov
or
addr16
jne
push
xchg
mov
jo
push
sbb
adcb
divl
cmp
es
rcrb
adc
mov
cmpsl
mov
cmpsl
mov
out
add
int3
data16
shll
scas
or
fimull
mov
popa
mov
lods
sbb
dec
daa
push
lret
ret
xchg
add
mov
cltd
xor
and
shll
mov
or
pusha
out
inc
sbb
test
or
test
mov
mov
ljmp
int3
mov
loop
mov
add
clc
fcompl
inc
daa
mov
cmp
jmp
inc
pop
in
mov
jg
adc
xchg
mov
cmp
clc
es
test
xchg
lock
jecxz
lret
or
fisttps
adc
scas
mov
and
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
fs
lcall
sbb
fisttpll
pushf
inc
pusha
add
mov
xchg
fcoml
shll
xor
rorb
fnstenv
andl
pop
xor
or
and
rclb
test
int3
mov
lods
scas
test
fidivrs
mov
and
adc
pop
movsb
fstpl
incl
aaa
dec
insl
xor
mov
inc
stc
cltd
cmp
jle
imul
adc
sbbl
out
lret
sub
xchg
arpl
jge
mulb
popa
jnp
mov
dec
pop
nop
cmp
iret
inc
inc
negl
or
mov
cs
pop
mov
mov
aad
repnz
sbb
lea
jo
fistps
loope
hlt
fadds
lds
mov
in
inc
fnstenv
test
pop
std
pop
pusha
push
inc
sub
sahf
pop
data16
pushf
scas
adc
add
pop
fcoms
imul
pop
fildll
sbbl
xor
sbb
inc
std
roll
push
fistps
mov
lds
inc
inc
pop
push
mov
inc
and
jl
xchg
and
pop
loop
add
lcall
push
pop
inc
lahf
sbb
mov
pushf
inc
pop
xchg
sub
sub
lea
sbb
jbe
xor
test
fsts
cli
mov
aaa
clc
pushf
dec
je
jp
imul
mov
jo
sarb
aas
hlt
mov
int3
push
mov
sub
dec
fld
inc
pop
dec
std
aam
repz
dec
pusha
mov
jle
cmpsl
idivb
ja
and
and
daa
adc
and
xor
in
fisttpl
stos
pop
into
inc
decb
fldcw
sar
or
cli
lock
out
add
icebp
pop
inc
cs
and
cli
dec
mov
pop
push
add
add
repnz
into
add
mov
scas
js
pop
imul
stos
jb
insl
mov
cmpsl
fsts
pop
ret
bound
es
push
mov
nop
aam
inc
jmp
adc
ja
mov
int3
jns
cmpsb
and
cmp
jecxz
or
sbb
mov
and
or
fwait
dec
adc
add
mov
ljmp
or
inc
pop
sbb
je
add
jbe
daa
in
mov
fcompl
or
add
imul
pop
sub
pop
lret
les
sub
and
mov
mov
popa
mov
push
cmp
movsl
xor
xor
sub
sahf
xchg
stos
daa
insl
adc
mov
fdivrs
mov
aas
inc
sti
and
shlb
push
xchg
xor
fldl
es
divb
and
xlat
adc
int
cli
mov
inc
rcl
movsb
cmp
inc
add
and
inc
mov
data16
cmp
adc
dec
pop
lock
or
stc
jmp
ljmp
loopne
rcr
add
inc
xchg
in
xorb
jno
out
add
je
jp
inc
addr16
push
push
or
outsb
sbb
testl
andl
mov
shll
cmp
push
cmp
xor
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
push
jle
ret
push
sbb
fdivp
out
call
aaa
inc
loope
adc
add
enter
test
pop
es
js
or
mov
mov
mov
test
cmp
sub
cwtl
cmp
out
mov
push
jmp
fldl2e
fs
jae
xorb
mov
loop
dec
setb
lock
scas
das
aas
xchg
jns
lods
sti
cmpsl
dec
out
mov
jne
inc
pop
cmp
inc
roll
sbb
ret
mov
jg
cmpsl
sbb
imul
push
mov
adc
rclb
pushf
setno
cld
cmp
cld
pop
in
dec
sub
adc
push
out
lods
pop
fildl
movsb
ficomps
out
sarb
test
filds
in
xlat
fbld
and
xorb
mov
dec
pop
sbb
jne
jnp
dec
imul
lods
push
in
ss
adc
mov
adc
aam
push
repz
test
cld
outsl
ror
aam
or
loope
adc
popf
push
mov
outsb
mov
out
lcall
lret
mov
mov
xchg
dec
js
out
icebp
std
ljmp
std
dec
mov
sbb
push
push
jmp
mov
jge
push
cmp
out
cli
in
xor
lds
add
jbe
ficoml
cmp
sbb
sbb
test
aas
iret
hlt
mov
pushf
pop
pop
insl
enter
add
gs
pop
push
insb
imul
sub
pushf
pop
mov
cwtl
stc
pop
or
xor
and
in
fcompl
clc
or
mov
xlat
or
jmp
icebp
gs
sbb
out
test
sub
ret
push
mull
ret
es
movsb
stc
cmpl
jg
stc
aam
jns
clc
cmp
sahf
loope
mov
mov
xchg
inc
mov
das
xor
and
xchg
leave
cmp
loop
sti
in
loop
lret
or
mov
add
push
push
cmp
out
sub
enter
xor
stos
pop
ljmp
dec
and
scas
sbb
pusha
les
int3
fcmovnb
repnz
sub
popf
push
cwtl
rorb
mov
sahf
and
mov
inc
push
jl
xor
lret
inc
and
pop
out
repz
out
das
je
fstpt
mov
jle
sbb
fwait
cwtl
dec
dec
cmp
or
outsl
in
lods
mov
jo
jbe
mov
xacquire
dec
jno
mov
sub
push
push
push
mov
xor
pop
stos
aam
xchg
pop
mov
movsl
lea
inc
add
jg
in
test
cmp
shll
inc
fwait
jecxz
push
mov
imul
inc
mov
lahf
jg
arpl
bound
sub
xor
mov
push
ret
les
movsb
dec
loop
xchg
push
sbb
mov
dec
cmp
in
inc
ss
lods
xor
mov
insl
jne
iret
and
lds
jns
jg
fldenv
jle
xchg
fldl2e
or
imul
pop
insl
mov
mov
sub
sub
xorl
movsb
ret
out
mov
inc
enter
add
leave
mov
test
add
shrd
cmpl
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
pop
arpl
adc
sbb
inc
inc
fists
test
mov
loope
xor
sub
shlb
push
movsb
jns
push
jnp
fwait
lahf
aam
pop
hlt
loop
outsl
push
outsb
ror
jno
loop
dec
add
imul
ficoml
outsb
mov
pop
mov
fisubl
push
fs
sahf
mov
scas
enter
arpl
sbb
cmp
lods
inc
rcrb
shrl
popf
xor
dec
out
sbb
jmp
jb
or
std
test
in
mov
popa
loope
or
inc
adc
push
cs
ret
mov
cmp
outsl
popa
inc
xbegin
cmpsl
cli
and
hlt
jns
inc
lods
adc
cmp
mov
loope
xchg
sub
jmp
dec
pop
xor
idivl
ret
cmp
sub
lock
mov
xchg
mov
divb
mov
mov
sbb
sub
ljmp
mov
jmp
aad
add
test
das
nop
imul
aaa
inc
sbb
pop
dec
cmp
pop
sub
pop
out
das
xor
sbb
dec
dec
out
scas
push
mov
jmp
or
inc
sub
fnstsw
fcomps
imul
or
cmp
jns
pop
cmp
loopne
jge
add
add
iret
fisubs
xchg
adc
test
aaa
sti
cmp
or
stos
movsb
mov
mov
fiadds
cmpl
mov
insb
xchg
xchg
stos
mov
adc
xchg
insl
adc
sbb
sbb
fwait
imul
repz
mov
cld
jne
arpl
les
pushf
movsl
xchg
add
fnstsw
insl
mov
ja
mov
pop
adc
adc
add
mov
rcrl
or
fcmovnb
idiv
sarb
sbb
stc
pop
mov
jg
mov
push
mov
adc
adc
cmp
aad
int
repnz
jo
jp
nop
test
dec
adc
mov
cmp
fs
or
fucom
jae
push
scas
xor
daa
dec
in
pop
insb
int
push
jno
and
out
cs
shl
ss
push
adc
mov
scas
cmpl
jl
loopne
ficomps
pop
add
mov
enter
mov
test
or
imul
mov
xchg
orb
adc
xor
or
sbb
repz
std
xchg
xor
outsl
ret
and
cmpsb
cwtl
orb
fcomps
inc
dec
jl
in
inc
add
lods
or
fsubrs
sub
outsb
shll
subl
scas
xchg
pop
stos
jno
ret
inc
aaa
rclb
lods
fwait
mov
ss
je
mov
enter
stos
pop
out
jge
loop
cmp
bound
idivl
call
cmp
test
movsl
lret
push
popa
push
pop
inc
pop
inc
je
scas
dec
inc
dec
mov
xchg
sbb
test
insl
into
std
movsb
mov
outsb
adc
pop
fbld
mov
clc
push
pop
and
int
mov
add
mov
jmp
xor
fs
sub
arpl
cwtl
in
sub
cmp
sub
ss
xchg
sahf
dec
outsl
pop
std
inc
jne
iret
test
jg
xchg
adc
xor
xchg
mov
fisttpl
and
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
into
ret
cmp
mov
pop
dec
pop
cmp
xchg
mov
xchg
fidivrs
sti
and
pop
xor
fists
out
ret
adc
and
call
jmp
mov
je
stc
hlt
mov
out
inc
mov
hlt
movsl
in
dec
test
adc
mov
push
ljmp
mov
es
mov
sub
sub
pop
loopne
shll
repnz
aaa
fidivl
mov
icebp
cs
imul
cmc
and
lret
dec
mov
movsb
push
das
daa
cs
xor
add
push
pop
jmp
inc
xor
xchg
mov
mov
jnp
fdivl
ds
dec
add
push
fisttps
cmp
push
out
ljmp
test
jl
or
inc
out
imul
mov
fcomps
jnp
push
or
imul
lret
jo
mov
ja
or
sbb
movsb
mov
ja
div
cmp
xchg
lahf
cltd
jb
out
fsubl
jl
pop
out
lds
xchg
cli
subb
or
sbbl
xor
sub
shr
sbb
inc
mov
and
js
mov
dec
aad
decl
in
cmpsb
jb
mov
xor
jnp
lcall
xchg
cmp
pop
movsl
sbb
fs
mov
inc
jl
add
addb
int3
mov
out
mov
sub
push
into
loopne
dec
in
inc
out
dec
scas
xchg
gs
xchg
loope
ss
and
mov
aad
xchg
fldt
mov
push
jp
push
sahf
out
lcall
cld
fistpl
jl
push
int3
outsb
sub
ret
setnp
jp
fildll
mov
out
cmp
insl
lahf
xchg
add
lods
test
mov
popf
lret
out
add
push
orl
push
fcomps
inc
add
icebp
pop
in
and
xchg
mov
jne
flds
xor
dec
add
ljmp
test
scas
outsl
adc
out
fdivr
fwait
cmp
sbb
xchg
inc
jb
fwait
js
je
scas
mov
mov
fmuls
and
cld
rol
inc
imul
and
int
stc
or
sbb
fwait
and
das
ljmp
mov
stc
addr16
cmc
loopne
xchg
push
add
outsl
orl
lahf
inc
mov
lods
mov
mov
inc
jno
add
loop
enter
sub
sub
inc
insb
sub
jno
fldcw
rcll
test
pop
mov
mov
or
int3
mov
outsb
lods
add
cs
xchg
cld
rorb
xchg
sub
not
sub
clc
sub
je
pop
int
lcall
in
jne
jmp
and
dec
cmp
test
ficoms
adc
xchg
adcb
add
mov
xchg
imul
dec
or
mov
or
push
popa
imull
les
push
lea
iret
clc
sbb
leave
cmpsl
jo
rolb
xchg
popa
lods
and
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
mov
lods
push
sbb
aaa
stc
push
jns
cmpsb
test
lock
cmpsb
div
pop
and
pop
dec
adc
mov
icebp
cmp
scas
lods
mov
pop
mov
pusha
vcvtsd2ss
mov
mov
in
addr16
dec
pushl
cwtl
sub
outsb
push
lock
push
jge
stos
mov
test
loope
jne
repnz
mov
mov
iret
jae
adc
or
aad
dec
dec
negb
scas
pop
or
imul
mov
ret
enter
cmp
rorb
push
dec
jne
xchg
lock
int3
inc
or
lds
mov
sbb
ss
xchg
scas
jo
xchg
push
enter
sbb
jo
in
out
mov
jb
mov
scas
push
loope
repz
mov
js
lret
js
sbb
cli
xlat
mov
cmpsl
xor
cmp
cld
adc
into
xchg
jbe
fcompl
test
pushf
pop
sarb
mov
inc
sbb
jmp
ss
and
add
das
cmp
inc
cmp
loop
and
and
xchg
fwait
cmpsw
adc
out
subb
add
add
pop
inc
or
shrb
imul
jo
pop
lds
orl
test
je
mov
lock
daa
mov
pop
dec
das
pop
fcomps
cs
movsl
jle,pt
mov
adc
xchg
mov
mov
or
iret
pop
jp
dec
pslld
repz
ds
sub
loop
jg
mov
sti
sbb
dec
cmp
std
fildl
das
imul
das
cld
cltd
push
adc
loop
push
xor
adc
sbb
test
int
xor
inc
imul
or
fs
inc
mov
mov
fstl
mov
add
push
shl
enter
add
push
add
xor
xlat
repz
in
pop
addl
cmp
jle
out
sahf
shlb
pop
outsb
jp
int3
or
adc
imul
xor
shlb
pushf
xor
xchg
xor
outsl
lods
ja
mov
cmp
enter
lods
adc
imul
xor
push
sbb
adc
shr
mov
jg
mov
push
out
cli
pop
out
mov
jbe
xor
ret
iret
mov
jns
clc
mov
pop
xchg
repz
xchg
mov
mov
push
adc
dec
mov
push
cltd
insb
sbb
mov
push
inc
push
mov
outsb
icebp
cs
leave
inc
loopne
pusha
cs
mov
sbb
pop
gs
cwtl
mov
mov
dec
shll
push
int3
cmc
rcrl
xchg
ret
inc
jbe
dec
lods
dec
sbb
adc
and
movsl
test
rcll
add
leave
dec
jge
sub
mov
lods
test
jle
and
cmp
lock
add
arpl
cmp
cli
mov
add
clc
jmp
rcl
adc
adc
pop
rolb
pop
arpl
inc
pushf
repz
inc
jl
gs
iret
outsb
scas
inc
or
jecxz
cltd
ret
push
mov
enter
mov
push
xor
ss
loopne
xchg
mov
rorl
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
movl
sbb
or
scas
jb
adcl
jb
enter
adc
test
flds
pop
adc
push
pop
repz
lods
push
or
ja
in
dec
cmp
cmp
repnz
xchg
pop
shrl
or
les
pop
jg
cmp
cmpsb
adc
cmp
nop
fimuls
call
pop
aas
aam
jle
dec
mov
mov
fisubs
pop
cli
mov
stos
sub
mov
sbb
mov
iret
shrl
mov
lods
repz
lcall
add
add
sub
stos
cmc
loopne
mov
or
pop
and
loop
or
xchg
imul
and
data16
ljmp
mov
pop
in
stos
test
sbb
mov
clc
jp
or
sub
stos
punpcklbw
and
in
loopne
mov
sub
mov
lcall
adc
inc
sub
in
outsb
cmp
and
cmp
cld
sub
stos
test
jne
movsb
in
cmp
pop
cmp
dec
mov
mov
mov
or
enter
in
mov
inc
fnsave
shr
movsb
loopne
shlb
imul
jle
call
adc
sti
or
mov
add
or
loop
sbb
push
xor
lock
popf
adc
inc
cmc
rcr
stos
sti
ret
fwait
jmp
cmpsl
and
cltd
js
mov
jno
mov
cmpsb
lcall
mov
add
addr16
xchg
xor
pcmpeqw
push
pop
les
xchg
call
push
cmp
repz
gs
cmp
jle
mov
dec
dec
rep
mov
mov
jp
das
movsl
cli
out
xchg
arpl
lock
pop
outsl
add
dec
push
leave
mov
adc
inc
fwait
xchg
jp
shrb
cmc
xchg
pop
mov
or
mov
cmp
loop
dec
inc
dec
mov
pusha
sub
shr
mov
pusha
xchg
cmp
sub
pop
outsb
push
or
push
outsb
xor
jecxz
mov
inc
and
stc
mov
pop
movsl
sub
add
je
fbld
or
pop
dec
ja
repnz
pop
sbb
leave
dec
and
enter
leave
sahf
les
ljmp
mov
jge
mov
bnd
je
stos
test
rclb
sub
add
push
aaa
sub
out
pop
push
test
jmp
xor
faddl
lcall
cmpsl
outsb
jmp
jns
xor
in
loope
sahf
xor
insb
sub
addr16
cmpsl
add
xchg
or
xchg
sub
cmp
clc
in
add
jae
or
pusha
pop
cmpb
jne
test
fs
aaa
aad
inc
or
sub
imul
sbb
lock
mov
adcb
rcrl
test
outsb
popw
pusha
jg
enter
sub
mov
dec
xor
pop
bnd
imul
mov
mov
mov
pop
jns
fldenv
shlb
mov
in
mov
pop
fcompl
pop
lea
and
jb
pop
and
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
jge
neg
push
fbld
and
mov
or
xor
test
jl
dec
mov
push
iret
cwtl
popa
dec
jbe
inc
mov
imul
xchg
inc
adc
js
jne
adc
push
mov
mov
and
jmp
negl
in
xchg
cli
rcll
lahf
ficomps
or
inc
jle
jae
sub
dec
cmp
push
push
xchg
test
jnp
cmp
inc
mov
les
mov
dec
shl
pusha
stos
xlat
xor
les
mov
pop
mov
pop
xlat
repnz
adc
mov
mov
sub
enter
bound
les
mov
sti
je
loope
or
jne
sub
mov
push
mov
pop
je
dec
sbb
inc
mov
and
xchg
adc
and
jne
lds
add
jbe
pusha
cli
pop
lock
mov
push
test
xchg
xor
mov
cmp
pusha
dec
outsb
or
out
test
loop
hlt
aad
push
mov
mov
add
cmp
cmc
xor
or
push
loop
xor
fisubrl
es
jge
pop
mov
jbe
scas
in
pop
addr16
lods
and
push
lods
mov
stc
jo
imul
shlb
xchg
xchg
daa
pushf
xor
dec
pop
pop
mov
jnp
scas
sbb
or
sbb
sub
dec
outsb
fs
and
imul
ror
mov
or
stos
sub
cmpsb
xchg
aad
jmp
inc
in
push
or
notb
stc
or
enter
mov
and
sub
pop
sub
mov
and
stos
push
or
cwtl
lds
mov
cmp
jp,pt
xor
scas
sarl
and
fstps
cmp
jne
jne
mov
inc
movsb
enter
push
xor
or
inc
fs
clc
les
and
pop
pop
cwtl
aam
add
jmp
xorb
jne
dec
nop
jae
cmpsl
jmp
dec
jmp
mov
in
addr16
fcompl
das
xor
rorb
mov
sahf
jo
cmp
push
cmp
and
aaa
cmp
push
call
push
jle
xor
lcall
stos
adc
cwtl
xchg
repnz
andl
push
testl
sti
sbb
xchg
scas
icebp
shrb
in
das
mov
pop
out
rcr
or
and
mov
test
sbb
in
je
addr16
xlat
xor
bound
in
adc
sub
cmovno
mov
and
sbb
and
jnp
jne
dec
and
dec
aad
or
das
int
fimull
loop
loopne
ret
es
int3
stos
iret
std
decb
aas
pop
jnp
or
repz
sbb
rorb
std
insb
xchg
cmp
imul
mov
sarl
lcall
in
jg
into
pop
mov
sbb
inc
cld
cmp
fsubs
shr
test
bound
sub
cld
jne
inc
pop
jge,pt
scas
mov
push
add
call
mov
xor
in
inc
movsb
xchg
out
lea
adc
add
push
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
jl
jle
xchg
push
sbb
out
imull
jg
mov
xchg
push
stos
xchg
pop
jge
insb
and
xor
pop
rcrb
xchg
fcomps
lahf
loopne
add
sar
test
pop
push
mov
test
push
clc
daa
sub
ds
cmp
inc
mov
fistpl
cmpsl
loop
mov
jecxz
xor
test
dec
lea
fwait
jmp
and
sub
iret
int3
adc
add
sub
lahf
flds
adc
cmpsl
jnp
hlt
loopne
ja
sbb
ljmp
dec
mov
popa
sahf
js
out
mov
inc
pop
loope
mov
rclb
leave
mov
cli
xchg
xor
fadds
aad
sub
ret
push
sbb
fisttpll
mov
push
xchg
repnz
lods
mov
imul
ja
sbb
fcompl
daa
add
mov
rolb
cmp
insl
xchg
aam
inc
mov
ss
pop
out
xchg
mov
sub
stc
loopne
aas
push
xchg
adc
push
sbb
push
imul
mov
roll
jecxz
jg
jg
mov
mov
in
call
pusha
loopne
pop
test
mov
mov
add
jbe
ret
mov
jne
xor
ret
mov
hlt
mov
icebp
push
aaa
jo
fldt
push
sbb
adc
cltd
push
push
or
sub
mov
push
xchg
sbb
out
xor
xchg
lods
stc
jo
mov
cli
cmp
outsl
push
and
sbb
fnstenv
push
movsl
mov
lret
scas
push
shl
add
or
enter
cmp
dec
fldl
adc
dec
mov
cmp
and
out
ljmp
inc
mov
scas
ret
sbb
mov
lahf
fbld
xor
pop
push
jb
mov
aam
les
loop
cs
lea
shrb
arpl
pop
mov
xor
or
mov
push
pop
out
push
cmp
or
xor
or
cld
in
cli
and
cmpsl
jno
dec
lods
inc
xchg
hlt
mov
push
pop
out
mov
adc
xor
js
xchg
rolb
mov
in
fs
lock
das
lahf
xchg
xchg
mov
pop
push
adc
mov
je
jp
mov
popa
or
cmpsb
push
daa
mov
inc
cmpsl
lahf
jbe
xor
xchg
subb
test
mov
dec
xchg
adc
and
xlat
movsl
or
add
fs
pop
and
in
es
push
sbb
stc
stc
je
fs
enter
testl
ret
addr16
cmp
add
lea
aad
ja
xchg
daa
jecxz
in
sar
std
int
cmp
aas
outsb
stos
jmp
mov
sub
adc
push
mov
and
out
icebp
cmpsl
push
mov
xor
and
xchg
jecxz
mov
es
lcall
gs
add
cld
sbb
rorb
or
pop
push
dec
or
imul
sbb
lock
sub
pop
xchg
cmp
push
fwait
shl
shl
xor
shrd
shr
mov
mov
mov
jmp
push
or
sbb
inc
dec
aas
mov
mov
push
mov
imul
jle
inc
popf
xorb
es
mov
pushw
xchg
psubusb
jo
cs
inc
add
mov
lock
cltd
lcall
scas
je
mov
lret
pop
insl
mov
cmp
subb
fidivs
sub
lcall
and
mov
lret
aas
repz
or
in
hlt
xchg
xchg
xor
jp
adc
data16
xlat
inc
out
fisttpl
mov
js
push
clc
stos
mov
test
scas
jns
sbb
movsb
pop
and
stos
loop
xor
add
dec
and
jno
xchg
vmptrld
fdivr
shlb
xor
stos
add
inc
push
loope
pop
cmp
aas
repz
stos
subb
sub
mov
test
imull
imul
ss
cmpl
jmp
and
push
js
addb
sub
pushl
push
mov
and
push
push
push
loope
xor
sbb
mov
mov
mov
call
icebp
js
sub
xor
jne
enter
sub
bound
aam
dec
lahf
cli
lret
xor
mov
shlb
xor
inc
inc
inc
jle
cli
jne
xchg
ljmp
aas
fwait
add
jns
jg
mov
jle
rcrb
sarl
sub
adc
test
fistpll
fcmovnu
fisttpll
in
popf
ret
roll
xchg
into
ds
sbb
call
insl
sub
cmp
mov
sti
arpl
lea
sbb
adc
xlat
into
cmp
cltd
lea
add
mov
jmp
imul
and
iret
sbb
sbb
dec
fistps
or
pop
out
add
mov
mov
data16
cmp
aaa
inc
dec
xchg
fwait
clc
aad
inc
ss
jnp
movsb
jmp
shrl
data16
jne
dec
pushl
test
lea
pop
test
ds
outsl
incb
and
imul
push
pop
push
and
pop
ja
cs
mov
sub
sub
jb
dec
jns
jnp
in
iret
icebp
cmp
daa
je
cmp
jp
and
mov
call
sbb
mov
addr16
fs
sbb
inc
sub
and
pushf
test
cmpsl
loop
sbb
mov
jp
pusha
movsb
xchg
mov
aam
xchg
fisubs
loop
and
int
addr16
std
jecxz
mov
xor
xchg
insl
dec
push
add
mov
dec
xor
arpl
pop
cmpsb
sub
out
dec
int
jge
push
loope
test
mov
in
dec
push
mov
lret
movsb
adc
je
push
or
stos
pop
jl
or
jno
test
xchg
xchg
cli
adc
push
pop
and
mov
xor
ja
lods
sbb
cli
fs
push
and
testb
idivb
incb
mov
aad
or
data16
jmp
or
jge
pop
adc
stc
leave
loope
test
fidivrs
cmp
ss
test
mov
jb
or
ret
xor
mov
gs
inc
in
xchg
or
push
stc
adc
sbb
loopne
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
fistl
stos
pop
mov
sbb
adc
test
addr16
mov
inc
fadds
sub
cmpsb
pushf
add
cmp
idivl
sbb
sbb
pop
dec
xchg
pop
push
iret
dec
mov
popa
sbb
inc
push
adc
cmp
loop
sub
jb
mov
cmpsb
adc
mov
jg
dec
sub
out
or
pushf
dec
and
mov
ret
cmp
ss
cld
inc
out
insl
push
cmpsb
cwtl
leave
cmp
mov
jmp
sub
xchg
stos
pop
out
rol
lods
into
push
inc
jmp
jmp
xor
ret
xchg
mov
adc
and
gs
inc
fsubrl
clc
cmp
push
call
mov
push
mov
inc
cmp
cmp
rcrb
movsbl
xchg
inc
mov
sub
dec
repnz
and
xchg
xchg
jg
aad
push
cli
cltd
pop
sub
out
pop
pop
cmp
jmp
pop
pop
imul
mov
mov
cmpsl
push
pop
adc
xor
lods
lret
fwait
add
shl
lods
in
pusha
rcrb
adc
out
mov
and
scas
fldl
mov
orl
jle
in
or
or
int3
sub
rcrb
cmp
mov
daa
mov
push
dec
movsb
shrl
movsl
mov
inc
push
ja
or
xor
mov
std
test
mov
adc
dec
test
jl
int
das
pop
dec
xor
and
mov
fcmovbe
arpl
sarl
les
por
lods
sqrtps
sahf
cmpb
push
rcrl
or
jno
jge
xchg
mov
jge,pt
rcrl
push
hlt
fsubrs
out
mov
pop
xorb
adc
lea
ljmp
bound
xchg
jle
mov
call
sbb
push
cwtl
sbb
cmpsl
add
push
sar
sub
jmp
and
cmp
je
inc
std
jne
adc
popf
mov
imul
repnz
push
es
sub
push
inc
stos
mov
pop
jb
push
mov
or
jg
popa
bound
dec
dec
inc
jecxz
inc
test
jne
in
iret
mov
and
mov
fldcw
sbb
fimull
hlt
es
jg
lret
xchg
cmpl
aam
nop
mov
sbbl
sti
bound
clc
xor
push
dec
push
scas
movsl
les
incl
mov
movsb
lret
mov
adc
lds
jne
mov
xchg
and
and
daa
int3
mov
dec
out
mov
mov
pop
xor
outsl
xor
ljmp
adc
mov
push
roll
lahf
andb
cltd
loopne
pop
imul
shl
xchg
inc
je
jbe
mov
adc
enter
fisubrs
mov
test
lahf
inc
gs
sbb
xchg
wrmsr
or
cwtl
in
lock
cltd
adc
rolb
xchg
jb
and
push
stos
jno
mov
fdivrl
lock
pop
fdivrp
jns
mov
and
icebp
jne
mov
adc
sbb
mov
and
cmp
loopne
sahf
xor
cmp
inc
movsb
sub
enter
lret
mov
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
push
jmp
mov
adcl
sbb
xchg
pushf
xor
mov
cli
loopne
and
dec
inc
in
sub
sbb
xchg
inc
xor
inc
and
xorl
and
xchg
push
push
push
dec
mov
inc
add
sbb
bswap
jge
mov
xor
imul
pusha
mov
rorl
dec
cmp
adc
mov
push
or
imul
dec
dec
sbb
testb
push
leave
adc
loope
xor
aam
adc
sub
push
push
pop
or
loopne
rcll
mov
daa
add
add
push
jmp
fcoms
inc
call
inc
mov
fistl
xchg
sub
push
lcall
fidivrl
movsl
fsts
fisubrs
sbb
rorl
xor
mov
loopne
imul
cmpsb
mov
mov
loop
or
into
and
push
je
cmp
lds
mov
cld
adc
cli
sub
xor
push
sarl
sbb
enter
pop
and
cmp
push
mov
pop
add
or
mov
pop
xor
sub
adc
jp
das
jb
fbstp
pop
test
les
insb
fstp
je
sub
push
or
xorb
inc
push
int
add
icebp
aaa
aam
sahf
xchg
jp
and
outsl
mov
or
cli
rorb
les
xchg
cs
and
adc
ror
adc
lds
icebp
sbb
inc
outsb
call
cmp
jecxz
outsb
xorb
int
arpl
push
push
or
adc
hlt
test
ljmp
jne
ds
out
fistps
jns
or
jne
ljmp
or
dec
pop
and
push
adc
ret
icebp
adc
popa
andl
dec
xorb
ljmp
dec
adc
push
mov
sub
or
out
sbb
xchg
xchg
jmp
leave
inc
pop
xor
sarb
mov
xchg
push
cmp
jb
pop
sub
inc
mov
lea
push
lret
aaa
fistl
cmp
rolb
fldenv
mov
push
inc
mov
out
lds
add
sbb
push
inc
ljmp
lahf
mov
or
cld
mov
and
aad
sub
jo
js
pop
stos
stos
ret
inc
adc
jb
sub
subb
mov
aam
inc
mov
lahf
adc
or
sub
loopne
cmp
and
les
adc
pop
fisubl
pop
subl
dec
scas
mov
in
add
cmp
scas
gs
mov
jo
sbb
stos
mov
ss
sahf
cmp
out
sub
xchg
ret
dec
sub
dec
and
jmp
inc
mov
insl
leave
ja
pop
sub
mov
ret
sbbb
idivb
cmp
cmp
adc
mov
fldenv
dec
add
lods
and
jmp
jnp
pop
imul
adc
push
imul
and
push
lods
sub
cmp
add
loop
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
ffree
adc
cmpsl
jns
sbb
cld
sub
shlb
xchg
inc
scas
lods
fimull
inc
outsl
mov
scas
int3
add
jnp
iret
sub
cmp
decl
repnz
add
cld
dec
daa
cmp
rclb
dec
pop
sbb
mov
stos
cmp
scas
cmp
mov
jne
sub
jecxz
sbb
xchg
lcall
inc
xor
vmwrite
out
fbstp
fxch
push
dec
xchg
push
jbe
xchg
insb
popa
jg
mov
fwait
pop
adc
cmp
pop
pop
aad
call
inc
push
pop
roll
push
addr16
pop
sbb
and
fimull
shrb
mov
ja
sub
jae
pop
loopne
imul
add
incl
ja
xbegin
xlat
cli
dec
jns
loop
xchg
jb
icebp
out
cltd
sbb
mov
add
bound
sbb
loopne
adcl
mov
insb
push
sub
xchg
jo
loopne
andl
xor
out
xchg
fldenv
add
mov
push
ja
sti
out
lock
pop
dec
jns
add
jle
js
shlb
repnz
frstor
mov
xchg
fdivr
mov
jae
clc
adcl
dec
or
xchg
adc
or
popf
sarb
fists
sbb
adc
cmpsb
mov
mov
and
cwtl
or
ret
inc
adc
es
mov
and
inc
sbb
push
andb
data16
js
mov
or
jmp
inc
je
int
sbb
sub
sub
pop
andl
fisttps
outsl
mov
insb
xor
test
fldcw
mov
out
ja
in
aas
mov
or
js
popf
ficompl
ljmp
out
in
enter
lock
pushf
xor
cmp
and
shll
mov
fsubr
jb
pop
inc
cltd
xor
out
or
fwait
mov
clc
jo
shr
xchg
decb
sarb
push
ljmp
jns
je
push
cmp
arpl
loopne
fnstcw
mov
test
ss
iret
loope
test
or
aad
ljmp
movsl
nop
push
les
adc
icebp
push
mov
arpl
mov
dec
shl
mov
repnz
xor
and
pop
jb
adc
pop
je
sbb
and
not
push
inc
ret
scas
mov
andb
push
jle
popf
lahf
cmpsl
xchg
adc
push
inc
sbb
pop
or
addr16
add
or
cmp
jnp
ret
dec
aam
mov
into
fidivrl
jno
adc
leave
in
add
fimull
fidivrs
cmp
lods
aaa
fnstenv
arpl
sub
xchg
jne
data16
mov
xor
mov
mov
push
scas
ds
fldcw
iret
push
push
sub
mov
jg
dec
jl
pop
mov
push
mov
inc
dec
inc
xlat
cmp
clc
and
cmp
push
sbb
mov
xor
lods
mov
inc
pop
jbe
test
sti
into
movb
and
pushf
add
dec
sub
mov
cltd
test
cmp
push
in
loope
movsb
lea
gs
mov
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
rep
mov
jae
sbb
pusha
xor
pop
pop
push
imul
jmp
dec
push
fsubrl
imul
dec
add
fmul
sub
fldl
addr16
or
or
clc
arpl
sub
leave
or
int
dec
sbb
loop
inc
rcll
insl
out
and
dec
inc
fimuls
mov
sbb
mov
xchg
mov
xchg
nop
jmp
push
xchg
and
xchg
dec
and
and
push
or
inc
inc
sub
xor
or
mov
test
int
ja
nop
popa
and
lods
stos
push
insl
sbb
pushf
mov
testl
mov
pop
jne
pusha
jl
sub
outsl
sti
into
stc
xlat
mov
pop
aaa
and
in
push
pusha
mov
out
cmpsl
js
movsb
mov
sbb
and
shr
notl
sbb
roll
pop
pop
dec
ja
adc
cltd
insb
shl
dec
testb
cmp
pop
or
aas
push
int3
push
xchg
pop
mov
out
hlt
xchg
cli
lahf
ficoms
movsl
mov
jmp
sub
fwait
xchg
xchg
xchg
sub
inc
xchg
fnstenv
lock
insb
jnp
jl
fidivl
ss
dec
cmp
or
fidivs
call
push
inc
mov
cwtl
aaa
fwait
xlat
rcl
ja
mov
cmpsl
add
mov
rcr
fs
stos
es
ret
pushf
push
inc
pop
mov
add
xchg
fists
sti
ret
adc
mov
dec
fisttpl
jmp
and
inc
push
aad
pop
and
loope
xchg
testb
ret
decb
lret
fidivrl
and
rorl
and
sub
and
pop
add
mov
mov
jmp
pop
mov
in
stos
xchg
and
int3
test
xchg
mov
dec
jl
shll
jecxz
call
int
sbb
fildll
jg
add
sub
orl
mov
push
jno
dec
adc
sti
loopne
sbb
in
sbb
imul
push
mov
mov
insb
sbb
push
and
movsb
sbb
xchg
fistps
jns
pusha
mov
test
pop
std
pop
imul
cmp
pop
mov
ret
sbbl
fwait
push
pop
ret
pop
cld
loope
icebp
popa
sub
shlb
mov
jl,pt
and
jp
frstor
cmp
lock
out
mov
mov
jle
push
cmp
sarb
sub
shrl
adc
andl
aam
cmp
push
xchg
int3
insb
stc
repnz
bound
out
xchg
and
pusha
out
pop
repnz
int
lahf
add
shll
mov
lea
mov
adc
out
jns
xor
movsl
movsb
xor
push
sub
or
jb
mov
jl
cs
out
adc
dec
shrb
pop
frstor
cltd
push
call
int3
je
xchg
into
inc
fsts
inc
popf
inc
sbb
sbb
xor
idivb
cs
push
and
adc
cmp
leave
mov
int
iret
jae
add
fstpl
and
outsl
dec
rcll
gs
daa
cltd
add
sub
jmp
xchg
daa
shlb
lcall
mov
out
in
sti
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
push
in
mov
mov
sub
cmp
pop
inc
sahf
mov
mov
mov
psubsw
inc
icebp
push
jecxz
in
pushf
pop
lods
fmul
call
loop
cs
mov
add
jl
cmpb
ret
cs
mov
dec
pop
cmpl
push
pop
cmp
ja
lods
xor
pop
xor
sub
add
lock
inc
add
jle
mov
pop
jp
test
xchg
mov
cmp
xchg
hlt
and
fiadds
add
xor
lds
mov
jle
inc
cmpb
outsb
out
jne
xor
in
push
fisubs
loopne
fs
leave
sbb
test
popf
mov
sti
sahf
in
mov
push
leave
stc
nop
dec
ficoms
scas
sbb
push
sub
imul
jno
push
in
fnstcw
cmc
or
mov
loop
mov
xor
xchg
scas
dec
in
mov
aas
mov
fistl
mov
and
mov
loopne
out
add
jp
add
clc
jno
test
aad
imul
mov
cmp
push
lcall
lods
test
mov
shrb
stc
jmp
mov
shl
cmpl
stc
mov
jno
xchg
in
in
xor
sahf
dec
xchg
pop
cmpsb
dec
leave
and
sub
push
inc
cmp
insb
pop
stc
lea
fstpl
add
test
push
adc
inc
cmp
scas
push
adc
dec
pop
sbb
jbe
mov
stos
sbbb
push
and
cmp
rorl
inc
pop
add
outsl
insl
aaa
jmp
iret
jb
mov
mov
adc
lds
adc
mov
adc
mov
out
add
jmp
dec
fucomp
imul
and
cmpsb
sub
daa
sahf
adc
js
cli
dec
sbb
inc
daa
push
mov
fdivl
mov
adc
pop
cmp
nop
loopne
ds
ds
jle
iret
enter
ljmp
fdivrs
sbb
ds
pop
mov
int
inc
movsb
mov
outsl
movsb
ds
imul
popa
or
push
clc
and
xlat
mov
xor
xor
repz
loope
fsubrs
sti
mov
sub
cmpsb
dec
mov
or
out
lret
lea
sbb
fs
idivb
adc
sbb
pop
inc
dec
aaa
pop
fidivrs
nop
and
dec
imul
mov
mov
xchg
int3
sbb
mov
xor
mov
sarl
add
enter
in
adc
mov
into
fwait
ret
out
stos
mov
out
addr16
testb
arpl
repnz
push
push
pop
lret
cli
mov
int
bndldx
sub
cmp
shlb
jge
adc
out
pop
xor
sbb
fdivr
or
lret
mov
repnz
les
lods
push
mov
daa
and
shrb
add
mov
adc
movsl
mov
push
aam
dec
shrb
lret
jbe
cmpsl
cmc
insl
or
movb
rorl
push
xorl
nop
imul
call
clc
mov
stos
xchg
aaa
mov
insb
movsl
testl
add
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
movsl
das
pushl
outsl
popf
fld
gs
sbb
out
fmull
mov
hlt
ficoms
lret
imul
add
inc
in
pop
icebp
sti
hlt
cmc
in
loopne
mov
dec
pushf
pop
pop
shlb
cmp
jns
xchg
popf
gs
adc
mov
mov
clc
movsl
call
add
loopne
test
cmp
cmp
cmc
decb
jae
je
scas
pop
cwtl
pop
xor
mov
xor
inc
dec
popa
rcrb
adc
adcb
stc
sahf
pusha
or
hlt
jno
std
outsl
jg
xlat
mov
cmp
leave
jne
cmc
and
pop
sub
add
leave
aaa
mov
sub
xor
push
inc
gs
ljmp
push
add
call
sahf
std
add
int
xchg
pop
jbe
adc
xlat
push
dec
pop
jg
sbb
in
and
in
or
dec
fmull
scas
in
std
mov
hlt
inc
insb
cmpsb
or
ja
jns
jmp
sub
sbb
mov
or
icebp
popa
test
pop
jmp
ja
cmp
pop
jo
adc
push
loop
dec
inc
repnz
cltd
mul
mov
loopne
xlat
or
stos
and
shlb
in
mov
mov
inc
or
mov
fdivrs
mov
inc
adc
xchg
inc
enter
mov
push
lcall
movsb
insb
stc
fwait
enter
add
enter
jo
lds
clc
cs
and
push
xor
sbb
mov
and
and
xchg
fsubrl
pop
mov
dec
out
ds
add
jnp
jle
jmp
fldenv
into
clc
pop
mov
mov
out
sbb
sbb
or
inc
inc
sub
fisttpll
ret
adcb
stos
into
in
and
jnp
xchg
mov
xchg
cwtl
dec
add
cld
dec
loope
pop
ffreep
mov
mov
mov
mov
shlb
pop
repnz
jle
imul
lcall
sahf
in
into
in
pop
aad
push
xchg
cli
test
fnsave
inc
push
aad
and
fisttps
or
int3
mov
cld
lds
in
xchg
shr
ljmp
and
inc
xor
in
testl
aad
add
in
aaa
xchg
pop
mov
cmp
or
cmp
int
outsl
ljmp
xor
xchg
cmp
jbe
out
jle
icebp
mov
std
push
mov
cmpl
jge
int3
aad
add
mov
add
out
into
pop
fdivrl
pop
jae
cli
push
imul
inc
push
sbbb
jns
aaa
cmpsl
lock
outsl
in
mov
in
leave
inc
cmpsl
mov
dec
in
inc
ljmp
nop
arpl
sbb
pop
mov
xorl
test
repnz
lret
notb
adc
xchg
cld
mov
cmp
pop
push
ret
push
nop
jle
push
and
xchg
repnz
jle
out
mov
out
aaa
or
dec
add
mov
call
sub
sarl
sti
push
into
lcall
incl
mov
sbb
scas
andb
push
or
sarl
and
aam
sub
and
sbb
jl
or
cmp
cli
popf
fisubrs
rorl
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
sbb
ss
push
sbb
ljmp
scas
jo
dec
pop
cli
lods
imul
and
addl
cmp
add
insb
sub
test
and
add
xor
je
insb
fistpll
push
pusha
out
mov
and
pop
or
sbb
mov
lea
ja
ret
mov
and
rol
outsb
aas
das
pushf
jg
popl
loope
mov
jp
jno
cmp
fdivrp
sbb
mov
xor
and
sub
daa
push
jecxz
fcmovnb
mov
pusha
scas
xor
je
xchg
inc
lea
iret
push
pop
lock
mov
dec
push
imul
xchg
shll
scas
fsubrl
in
scas
inc
in
outsl
das
sti
pop
test
daa
lods
pop
into
cmpsb
pop
mov
pop
repz
pop
sti
push
jns
dec
sbb
movsl
fsubrs
push
xlat
adc
dec
sbb
xlat
mov
insb
ficomps
fildl
and
lret
or
stos
jno
jae
sti
mov
fldcw
stos
gs
pusha
xor
pop
or
js
sbb
mov
hlt
imul
adc
pushf
and
gs
ja
xchg
cmp
cmp
push
insb
cmp
mov
roll
aam
push
cmp
pop
data16
ret
xchg
and
dec
push
daa
mov
cmpsl
add
mov
loop
loope
shll
leave
push
mov
dec
dec
and
add
inc
js
mov
mov
pushf
pop
sub
push
fcmovnb
xchg
sub
repnz
popf
xchg
cmpsl
inc
sub
push
or
xlat
fsubs
cli
test
pop
dec
xor
or
mov
dec
sub
push
lods
push
dec
aad
addb
stos
mov
stos
testb
cmc
and
adc
cmp
jecxz
sbb
pop
push
xchg
movsl
cltd
into
dec
fldl
inc
mov
inc
stc
push
into
js
add
sub
sbb
xchg
stos
fucomip
cli
arpl
sub
scas
stos
ljmp
jle
push
js
adc
pop
cs
lea
pop
fnclex
movb
sbb
ljmp
mov
adc
sub
jge
incb
cmpsb
sbb
push
mov
dec
mov
testb
mov
and
jmp
fsubp
mov
les
psubd
push
add
cmp
mov
fcmove
inc
push
xchg
cmp
sub
aas
push
mull
mov
sti
aam
js
xchg
loop
inc
cld
jecxz
test
sub
and
push
pop
push
pop
pop
jo
cmp
stc
iret
outsl
mov
repz
lods
and
dec
adc
lods
and
and
pop
add
es
xchg
aaa
sub
or
cmovnp
fistps
mov
repz
mov
rcrl
and
push
mov
mov
daa
das
add
roll
add
and
push
mov
dec
mov
aam
sub
rclb
cmp
push
push
scas
adc
arpl
cmp
sarb
jns
lods
sbb
popa
jp
ret
push
in
loope
cmp
sti
xchg
shrl
push
mov
je
xor
lods
push
push
fwait
lds
test
add
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
jno
jle
push
push
sbb
and
pop
push
insl
pop
ss
cli
push
jo
insb
cwtl
sbb
lahf
or
mov
mov
pop
daa
fcomp
jns
orl
lods
sub
inc
sbb
mov
sbb
and
adc
pop
or
jmp
icebp
aad
insb
cmpsb
sbb
mov
ja
push
jg
lret
mov
xchg
pop
jmp
sarl
addl
icebp
divb
aad
pop
addr16
xlat
xchg
mov
xor
fwait
jecxz
mov
push
scas
test
mov
or
cmp
dec
pop
adc
push
xchg
scas
imul
fsubp
xor
jae
out
pop
clc
mov
and
mov
xorb
lods
mov
sub
cltd
dec
dec
dec
xchg
mov
cmpl
cmp
push
sub
cmpsb
mov
xchg
movsb
mov
aad
sahf
imul
insl
jb
popa
add
or
dec
xchg
mov
lret
jns
jns
mov
push
xchg
in
add
mov
fidivrs
ja
mov
dec
mov
jp
cmp
sub
cltd
enter
rorl
aad
mov
add
mov
icebp
add
mov
xchg
rol
repz
pop
pop
push
dec
jmp
mov
es
rorl
jg
mov
or
or
mov
jle
sbb
aam
cmp
imul
nop
pop
adc
cmp
sarb
ss
push
dec
out
add
outsb
repnz
sahf
mov
jae
ds
stos
fdivs
mov
fistl
inc
stc
inc
push
push
stc
xor
dec
dec
dec
rcl
cmp
pop
xchg
ja
dec
xchg
in
mov
leave
mov
mov
call
or
andb
dec
repz
jge
fimuls
je
jnp
xchg
insl
jge
sub
sub
arpl
lahf
xor
lods
mov
movsl
adc
lar
push
add
in
adc
loopne
std
in
mov
adc
push
repnz
fidivl
mov
xor
pop
aaa
popa
pop
cmp
fcmovnu
dec
gs
sub
xor
lea
sub
lcall
dec
push
idivl
add
stos
cmp
in
orb
inc
mov
aam
das
das
xchg
test
and
jl
mov
jno
mov
push
mov
or
cld
in
outsb
lret
dec
ficompl
cmp
pop
in
xor
jmp
testl
fsub
xchg
rorb
and
add
mov
or
ficomps
pop
inc
cmpsl
ret
lahf
aas
ja
rolb
dec
xchg
repnz
cmpsb
mov
inc
sbb
and
inc
sbb
out
sub
pop
mov
jmp
xchg
xor
lcall
aad
imul
add
push
bound
in
mov
and
jg
jmp
xchg
mov
or
gs
xor
and
mov
ss
jo
fdivl
inc
and
leave
imul
mov
test
cmp
jg
cmp
inc
adc
stos
cld
push
push
xchg
mov
or
cmpsl
push
sub
addr16
cmp
adc
filds
jns
dec
xor
cmp
jmp
jb
xchg
add
push
and
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
jl
dec
push
sbb
xchg
mov
add
pushf
ret
push
adc
pop
cs
mov
cwtl
add
xor
push
cmp
xor
pop
mov
add
inc
idivb
fldlg2
mov
pop
mov
or
jle
jb
and
xor
sub
push
cld
mov
in
in
cmpsl
fisubrl
or
inc
sbb
ja
icebp
xor
push
pusha
hlt
enter
pop
daa
and
pop
xor
in
add
sub
rcr
popf
shll
cltd
lods
mov
test
jne
sbb
lock
add
pop
adc
les
adc
iret
mov
sbb
cmp
add
nop
rorl
mov
adc
repnz
sub
aaa
sub
orl
mov
mov
aaa
or
fistl
test
pop
mulb
pop
test
aaa
mov
cli
iret
fidivrs
sti
jns
fsubr
sbb
pusha
adcl
push
in
pop
int
push
jb
jns
pcmpgtw
mov
jge
ret
xchg
outsb
mov
out
in
shl
lock
clc
push
inc
pop
loopne
flds
pusha
lods
adc
xchg
lods
or
jne
mov
stos
out
add
xor
xlat
scas
std
mov
sahf
dec
out
mov
jns
inc
adc
push
in
or
mull
out
imul
xchg
inc
sub
mov
inc
cli
out
leave
inc
pop
pop
pop
fldcw
or
stc
arpl
dec
out
xchg
std
xchg
push
in
adcl
aaa
iret
insl
pop
repz
arpl
mov
xchg
xor
mov
test
xchg
gs
pop
ljmp
jnp
adc
ret
rcl
loop
stos
adc
xchg
es
cmp
mov
scas
cmc
outsb
inc
mov
les
lcall
jge
adc
xchg
call
xorb
xor
in
cmpsb
cwtl
dec
dec
std
pop
jg
sbb
arpl
jne
lahf
scas
enter
cmp
das
add
pop
cmp
jnp
pop
lods
repnz
push
xor
or
push
xor
jmp
jp
jne
fs
adc
or
mov
xor
das
pushf
and
xchg
sbbl
stos
or
mov
addr16
push
test
add
jge
das
je
add
in
mov
sbb
cmp
sbb
jecxz
fucomp
std
jbe
or
jb
mov
nop
cmp
idivl
mov
loop
popa
out
fwait
daa
push
pop
lds
cld
out
subb
adc
jmp
cltd
sub
mull
xchg
test
pop
lret
cmp
cli
add
insl
mov
shlb
xchg
mov
stos
imul
lods
sbb
push
pop
out
imul
insb
loop
fisubrs
notl
test
inc
movsb
aas
xor
cmpsl
cmpsl
dec
jbe
sbb
sti
insb
sbb
iret
or
jecxz
repz
mov
adc
test
push
cmc
pop
fisubl
mov
icebp
scas
xchg
ss
mov
jne
pop
aas
add
sbb
enter
sub
imul
pop
sbb
xor
lret
jo
or
lods
lds
shlb
sbb
jb
ja
inc
cmp
adc
jae
test
mov
loop
xor
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
dec
jo
inc
push
sbb
in
sbb
mov
xchg
fnstsw
and
mov
loopne
dec
add
sbb
arpl
cmc
gs
dec
cld
call
jb
dec
mov
or
xchg
mov
movsb
lcall
add
sbb
cmp
ficomps
ficoms
out
mov
or
push
call
or
jnp
aad
jle
in
in
and
in
xchg
stos
lods
jg
repz
call
xchg
mov
xchg
fildl
arpl
inc
shrl
cmp
sti
xchg
jmp
into
jmp
shll
ss
jge
ljmp
iret
inc
pop
jl
lea
loop
inc
sub
lcall
mov
mov
sbb
cmpsb
jbe
push
and
adc
xchg
test
out
xchg
cmpsl
and
push
ss
jno
inc
fdivrl
ror
in
push
into
push
shll
or
xchg
cmp
sbb
mov
sbb
push
adc
adc
daa
xor
repz
notl
dec
out
loope
in
sub
into
mov
push
and
mov
xchg
loope
int3
ret
inc
jbe
popf
lahf
popa
out
mov
jle
ljmp
pop
sbbb
iret
inc
aas
cmp
or
sub
push
loopne
sub
loopne
shll
mov
xchg
lcall
movl
inc
ficoms
xor
pop
pop
dec
call
notl
popf
mov
call
stos
shlb
cmc
xchg
push
mov
sub
inc
or
fstp
pop
fwait
imul
popa
or
call
cld
push
das
popf
jle
cmp
fisubl
add
out
popf
lods
insl
into
popf
inc
jg
or
push
loop
iret
movsb
hlt
xor
into
cltd
mov
mov
xor
jg
jae
jecxz
fldt
data16
lea
dec
lods
out
fs
arpl
jge
and
fnstenv
cmp
pop
dec
pop
xor
mov
inc
subl
pop
je
jmp
xor
jmp
cltd
pshufw
inc
push
loopne
xchg
fdivrl
inc
add
push
aas
gs
sub
in
mov
ficompl
fs
fwait
cmp
jg
xor
jl
out
aaa
mov
mov
inc
mov
adc
mov
or
push
xchg
int3
dec
add
cmp
push
fists
and
or
mov
pop
pop
mov
xor
push
pop
lods
or
adc
daa
inc
rcll
test
inc
inc
push
out
cmpsl
fnstenv
cmpsb
or
mov
xchg
xchg
cmpsb
xor
add
xor
mov
lret
add
mov
cld
popa
loopne
mov
loop
jl
jg
mov
mov
ss
fiadds
fcmovnb
dec
cmpl
jo
xchg
xchg
cmp
xor
jl
jnp
xor
ret
or
or
pop
mov
mov
cmp
daa
in
jmp
out
aaa
insb
xor
inc
sub
out
stos
inc
mov
ljmp
push
les
add
pop
test
mov
adc
gs
adc
jae
in
jle
pop
hlt
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
and
lret
jo
aas
push
sbb
in
ss
clc
adc
jns
push
dec
push
negl
scas
addl
aaa
add
sub
dec
dec
push
add
adcl
mov
mov
push
lahf
inc
sub
add
cmp
sub
enter
cwtl
mov
dec
pop
or
jle
inc
cmp
data16
mov
mov
rolb
es
adc
popa
dec
filds
jge
dec
pop
mov
ja
cs
repz
lret
bound
fneni(8087
adc
in
cmpsb
and
sarl
sahf
cwtl
nop
push
adc
pushl
pop
or
aas
mov
in
clc
xchg
shll
xor
push
jp
int3
mov
push
fsubrp
mov
aam
jmp
sti
dec
xor
in
outsb
lds
inc
lods
pop
mov
jg
or
repz
insb
clc
inc
mov
mov
and
jbe
xchg
mov
pop
jecxz
outsb
jae
andl
loopne
je
pop
test
and
mov
stc
jecxz
bound
adc
popf
enter
adc
mov
je
jno
sub
out
je
fisubs
cmpl
cmpb
mov
xchg
bnd
ret
lcall
adc
into
les
mov
xchg
sbb
mov
sbb
sbb
xchg
pop
mov
pop
pop
cmpsl
out
addl
inc
sarb
cmpsl
jo
int
sahf
dec
inc
push
lcall
lret
xchg
inc
mov
rcrb
fucomp
xor
xchg
push
jg
inc
sub
jns
popf
scas
fiadds
das
mov
inc
inc
mov
pushw
hlt
clc
mov
sub
fcmove
das
cmp
ljmp
testl
xchg
shlb
sbb
sub
scas
test
in
arpl
pop
dec
push
jbe
movsl
mov
dec
mov
insb
loopne
jmp
jp
sub
divl
mov
pop
jno
popf
lock
fs
adc
dec
xchg
jle
xor
add
sbb
cmp
das
add
hlt
mov
sub
mov
and
lods
sub
divb
cmp
stos
mov
mov
aam
or
aaa
test
out
jnp
ret
push
xor
repz
int3
popa
push
inc
into
xchg
pop
aas
fs
push
or
pop
insb
jo
ret
icebp
or
sarb
xor
and
scas
sub
sub
xchg
sbb
cmp
dec
and
push
inc
sbb
sub
cmp
test
pop
xadd
out
push
imulb
test
cmp
cmp
dec
sub
icebp
adc
mov
xchg
mov
pop
adcl
add
scas
pop
arpl
pusha
stos
nop
insl
addl
mov
cmc
cmp
xor
cs
dec
mov
lods
add
sbb
xchg
insl
mov
dec
fiadds
movsb
mov
in
pop
jecxz
add
je
pop
pop
mov
ret
call
mov
cmp
lea
icebp
jb
adc
xor
sahf
mov
mov
xor
in
lods
jl
push
xor
inc
arpl
nop
into
jg
push
add
loopne
or
jmp
test
nop
lahf
jp
and
xor
add
imul
sbb
test
xchg
lret
fs
loopne
add
lret
xor
gs
dec
int3
jl
out
jg
lahf
popf
shrb
and
sub
loope
movsbl
sub
sbb
mov
cmp
pop
iret
out
push
jb
push
or
push
dec
mov
inc
push
test
repnz
jmp
je
xor
xor
lret
sti
push
mov
out
bound
es
icebp
sbb
dec
sub
pusha
or
inc
xchg
mov
cmp
mov
ss
sub
jp
inc
popa
dec
mov
mov
cwtl
pop
cld
add
sub
and
jecxz
lds
pop
jl
sub
repnz
js
cmp
sbb
cmp
les
test
inc
jecxz
pop
imul
ret
popf
int
inc
enter
pusha
push
ljmp
push
xchg
and
jmp
jo
adcl
xchg
mov
pop
xor
shrb
and
xchg
adc
lret
and
jae
cmp
rcrb
mov
aaa
stos
cmp
dec
shll
mov
icebp
mov
dec
mov
sub
nop
and
and
scas
les
mov
ret
loopne
add
mov
cmpsl
daa
outsb
xchg
push
xor
rolb
pusha
pushf
sbb
fisubrs
inc
xchg
aam
cmp
arpl
pop
xchg
ret
fcmove
mov
movsb
inc
or
jle
int
xchg
pop
pop
movsl
adc
mov
sbb
in
sub
pop
mov
and
cmp
adc
push
scas
fistpll
loope
enter
mov
mov
mov
popa
sub
adc
dec
sub
cli
shlb
into
push
push
pop
gs
mov
stos
inc
xorl
push
xor
aam
jl
out
push
dec
add
rcrb
cmc
mov
mov
sub
sarb
aaa
xor
lods
jl
cld
sbb
cmpsb
xor
cli
loopne
xor
ljmp
lock
inc
test
adc
out
and
add
pop
sbb
mov
mov
aas
push
shlb
ds
insb
jbe
fmul
mov
pop
jnp
frstor
or
jle
push
test
in
aad
cmpsl
icebp
push
xchg
push
mov
add
fcoms
outsl
dec
inc
xchg
sbb
pusha
movsl
adc
pop
mov
out
aas
aaa
jne
popf
xchg
iret
and
push
jg
es
pusha
mov
bound
mov
fcmovnu
scas
ror
sbb
dec
inc
stos
stos
ret
jne
aad
mov
jns
mov
imul
aaa
jae
das
imul
lret
xchg
fisttpll
out
sti
idivb
add
stos
push
in
fistps
and
leave
lcall
mov
fsubrs
xor
in
pop
push
and
scas
lock
int3
in
and
mov
aad
pop
mov
mov
fdivrp
sub
mov
in
push
mov
xor
int3
sahf
lock
add
dec
or
mov
sub
jp
movsb
or
iret
sbb
xor
xor
inc
xor
mov
scas
ljmp
sub
sbb
dec
jle
mov
adcb
decb
mov
push
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
bnd
push
das
push
sbb
js
faddp
xchg
adc
shl
xor
je
scas
loopne
lahf
nop
dec
inc
test
mov
pop
pop
lahf
sub
sbb
mov
outsb
sbb
jecxz
pop
jb
jl
push
push
test
and
in
cs
cmp
in
jo
add
push
push
pop
lret
shlb
sub
in
xchg
out
add
dec
test
test
icebp
addr16
jmp
push
jbe
outsb
nop
test
dec
ret
push
fwait
adc
jne
dec
mov
je
dec
and
jle
dec
arpl
ret
inc
mov
push
inc
xor
inc
pusha
add
adc
mov
dec
sahf
adc
test
xlat
mov
fdivrl
cwtl
and
jns
sub
add
adc
out
and
mov
inc
scas
hlt
rcl
neg
adc
bound
dec
adc
hlt
iret
inc
or
sbbl
and
push
fldenv
es
in
cwtl
push
jnp
add
sub
pop
in
hlt
push
pop
mov
aad
lcall
inc
sub
pusha
movb
xorb
iret
push
lret
lods
jmp
imul
int
push
es
ficoml
lret
mov
dec
repnz
mov
call
or
scas
push
test
inc
aad
xlat
hlt
test
movsb
lret
mov
test
ucomiss
addb
imul
xchg
outsl
jl
movsb
out
xor
pop
add
mov
pop
push
inc
mov
push
add
mov
or
das
jbe
inc
cmp
jmp
inc
orl
inc
pop
jg
cmp
and
leave
cltd
sbb
push
fimuls
sbb
lcall
jmp
aam
sarb
add
js
imul
in
xchg
xchg
aas
mov
addr16
jmp
mov
std
lcall
fcompl
outsb
jmp
add
nop
sbb
pop
cmp
clc
aad
ds
mov
inc
scas
insl
mov
insl
push
adc
pop
cld
insl
aas
data16
xchg
fbstp
xor
add
jge
sub
mov
xchg
sbb
jno
inc
imull
test
scas
fcoml
xor
mov
aad
in
lock
push
jecxz
and
cmpsb
push
and
mov
ds
bound
pop
int3
dec
cmc
pop
dec
add
or
fistpll
pop
xor
icebp
xor
push
jg
std
adcl
xchg
lds
inc
mov
pushf
sub
mov
ja
in
nop
mov
rcrb
pop
mov
sbb
fwait
sarl
dec
iret
not
adc
cs
jl
imul
jns
jne
push
imul
and
aas
jne
or
loop
bound
lret
stos
mov
or
lods
ja
int3
scas
flds
out
imul
mov
adc
xchg
xor
add
test
incl
add
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
jo
sub
sbb
cltd
sbb
lahf
movsl
pusha
inc
xlat
xor
xlat
paddq
stos
pop
test
xor
cmc
or
mov
pop
mov
es
out
das
stc
rcrb
sub
int3
rorl
xchg
mov
data16
mov
subb
sbb
je
dec
cmpb
mov
data16
mov
divl
ret
sub
xchg
dec
dec
mov
xchg
lea
pop
sbb
loop
adc
push
sbb
subb
dec
pop
push
sbb
leave
into
popf
pushf
fwait
out
jae
mov
lahf
inc
cmp
repz
and
sub
fs
sub
out
outsl
jo
inc
lea
dec
loop
leave
mov
shrl
jo
sbb
aaa
movaps
clc
mov
push
rcrl
xchg
adc
mov
mov
jmp
bound
shl
sbb
js
xchg
jno
incl
cmp
loopne
outsl
jbe
xor
sbb
imul
push
add
shll
push
sub
daa
addr16
mov
cmp
mov
arpl
outsb
push
and
push
ljmp
lock
stos
out
inc
sub
gs
sub
jbe
add
iret
into
sti
sub
test
push
mov
ret
stos
test
jno
pop
xor
or
aas
sub
loope
push
jno
pop
adc
push
sbb
add
add
xchg
xchg
or
aas
ja
les
out
dec
enter
pop
dec
and
scas
gs
ret
fbld
and
xchg
jne
mov
push
lret
xor
imul
mov
dec
data16
sub
sbb
mov
xchg
jo
mov
jae
add
sbb
pop
mov
or
lods
iret
pop
call
shlb
adcb
inc
gs
scas
stc
test
ljmp
cmp
mov
inc
fst
shrb
add
shrd
out
adc
iret
xchg
mov
sti
or
fnsave
push
and
xor
test
test
jg
or
fbstp
nop
xchg
mov
inc
adc
cmpsl
xor
flds
lock
test
jmp
in
imul
xchg
ljmp
xchg
jo
add
dec
sub
int3
loop
jnp
sahf
icebp
cmp
rcrl
hlt
imull
xchg
mov
mov
lea
leave
jbe
cmpl
pop
mov
std
insl
sub
pop
jl
scas
pop
into
push
rcrl
mov
repz
push
pop
pushw
mov
clc
dec
push
xchg
xchg
movsb
mov
xchg
jbe
mov
sar
push
movsb
push
pop
jge
mov
stc
jmp
xlat
lret
sarl
inc
nop
mov
add
add
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
xor
sbb
mov
xor
std
mov
push
das
and
inc
scas
fsubrp
and
fwait
mov
push
or
pop
lahf
jb
sub
shrb
loope
xor
push
mov
cs
xor
icebp
adcl
incb
and
xchg
mov
es
xor
sub
loopne
in
or
jmp
xchg
push
in
inc
jg
push
outsl
das
xchg
jno
mov
xorl
jmp
push
pushf
pushf
stc
mov
frstor
loop
or
call
cli
or
xchg
or
loopne
jge
sti
pop
les
int
mov
mov
ja
pop
stc
rclb
fistpll
and
lea
pop
push
mov
dec
or
ret
xchg
int3
into
movsb
add
test
shlb
insl
dec
dec
lahf
push
lret
or
xchg
mov
and
cmp
mov
je
hlt
pop
scas
ret
sbb
mov
and
mov
sbb
movsl
inc
inc
jmp
mov
daa
idiv
add
xor
sarb
cmp
sbb
popf
jns
inc
sbb
xchg
mov
push
jge
idivb
jne
mov
fistps
addr16
shll
xor
cmp
jb
xchg
test
popf
jbe
sub
and
mov
dec
popf
cmpsl
out
in
stos
int
mov
mulb
jb
aam
xchg
iret
cltd
jb
dec
and
cmp
jmp
lds
cmc
push
cmp
inc
jno
into
pop
jge
imul
cmc
pusha
sub
mov
sub
adc
push
in
mov
push
scas
push
sub
mov
mov
ss
ret
push
aad
or
popf
hlt
mov
ds
push
push
enter
movsl
push
dec
test
les
out
pop
xchg
push
fbstp
int
test
andb
lds
mov
aaa
pop
mov
sub
jmp
insb
sub
clc
jo
jle
pop
xchg
or
out
loopne
les
mov
jg
cmpsb
iret
inc
dec
add
xor
fs
mov
dec
add
fidivrl
sub
and
jg
cmpsl
xchg
cmp
push
xchg
and
orb
push
cs
int3
cmpsl
mov
fisubs
ds
addr16
jmp
pop
and
dec
sti
insl
or
pop
jns
pop
dec
fidivrs
push
ss
rcrl
lcall
sahf
sub
aam
and
daa
es
dec
push
dec
testb
mov
pop
or
push
fs
fdivrs
outsb
fiaddl
mov
js
xor
popf
cltd
adc
repnz
cmp
arpl
pop
cltd
mov
roll
mov
xchg
cwtl
jge
mov
mov
pop
sbb
incl
add
inc
add
rorl
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
fcomps
mov
mov
push
mov
mov
hlt
xchg
or
fwait
std
sbb
add
xorb
jae
mov
or
xor
out
jmp
xchg
lods
cmp
imul
popa
loopne
xchg
clc
mov
addr16
scas
sbb
adc
mov
out
icebp
addl
inc
in
xor
lea
or
rclb
fsts
mov
sub
sar
fstpt
add
les
mov
fwait
shrl
out
lret
sub
fwait
scas
add
cld
arpl
clc
xchg
mov
vmovdqa
sahf
lods
ljmp
xchg
repz
imul
dec
fwait
pop
mov
icebp
imul
or
insl
leave
mov
movsb
cmp
xor
roll
adc
push
repnz
ja
cmp
test
push
cmp
mov
or
xchg
sbb
rcrl
andb
loop
mov
or
aam
fwait
pusha
lock
movl
fisubl
mov
gs
adc
shr
popa
mov
mov
xlat
icebp
sti
cwtl
movsb
xchg
outsl
ljmp
push
loopne
lods
movsb
loopne
jo
fs
nop
iret
pop
shlw
xor
pop
cmp
jmp
shll
xchg
insl
xor
inc
mov
retw
push
das
lret
add
cmp
lods
mov
aaa
jl
rorl
movsl
int3
or
mov
jl
push
scas
lods
scas
sub
push
mov
pop
jo
mov
mov
scas
or
and
pusha
xor
pop
adc
inc
es
inc
stc
push
push
jmp
aam
ljmp
aas
xor
jns
jnp
cmp
jb
leave
fnsave
cmp
adc
sbb
pop
sbb
ret
mov
popa
outsb
add
repz
les
xor
push
add
ret
sbb
xchg
enter
dec
pop
push
lret
icebp
lea
mov
lods
adc
lahf
jl
call
shl
in
in
push
jmp
mov
or
pusha
xlat
test
mov
sbb
or
push
xor
cmp
add
push
jns,pn
mov
sub
adc
add
dec
push
pop
jns
sub
cmp
sbb
push
and
ss
out
dec
pusha
dec
mov
loope
mov
gs
sbb
test
pmaxub
popf
repnz
and
adc
ret
lret
cmpsl
cmpsb
mov
push
ljmp
mov
push
jmp
sub
in
cmp
or
or
shrl
lcall
jp
jmp
push
cmc
mov
in
fmuls
adc
cmpsb
add
outsl
xor
sbb
xor
sti
test
cmp
add
addr16
insl
cmp
stos
repz
mov
pop
test
lcall
add
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
test
sbb
data16
popf
ds
jne
jecxz
andb
cmpsl
lcall
lock
js
add
jo
jp
jne
or
add
pop
ret
inc
jl
shrb
xor
pushf
jle
insl
cmp
pop
ret
mov
push
and
leave
xor
leave
push
xchg
xchg
movsb
fstpt
and
shrl
push
pop
inc
mov
jp
inc
jae
test
xor
jno
pop
jg
pop
inc
loope
push
sbb
xchg
cmpsb
inc
call
mov
subl
push
cmpsb
jnp
cmp
sti
and
push
stc
adc
pop
or
xor
cwtl
mov
push
inc
cwtl
arpl
push
hlt
popa
stos
psubsb
cmp
pop
pop
pushf
jb
loop
adc
jae
mov
incl
pop
dec
mov
rcll
push
cmp
stos
rclb
add
push
pop
xchg
jecxz
dec
fs
in
xor
jno
leave
xor
test
stos
scas
sbb
push
bnd
out
ja
lcall
push
lea
mov
lcall
insl
jo
adc
es
sub
popf
popa
ficompl
jbe
cs
fucom
sbb
mov
sbb
mov
jb
outsl
jae
cmp
in
adc
in
iret
xor
adc
sar
xchg
aam
mov
mov
pushf
test
pop
dec
rcll
pushf
test
xor
or
jnp
jno
mov
push
mov
mov
mov
popf
or
mov
mov
xchg
loopne
push
mov
pop
pop
cltd
das
xchg
movsb
push
mov
movsb
int
push
leave
jb
jge
test
cmp
xchg
adc
mov
adc
cwtl
or
pop
mov
adc
das
ret
shl
xchg
jb
pop
push
cmp
mov
jne
push
dec
jnp
fistl
mov
andl
sub
add
mov
ficoml
inc
out
inc
int
orb
leave
add
pop
js
jae
mov
pop
mov
mov
testl
push
mov
push
fimuls
sbb
add
ds
dec
jbe
scas
ret
lcall
out
stc
xchg
pop
int3
lret
xor
cld
mov
cmp
fistps
inc
mov
das
pusha
mov
jp
cs
imul
mov
lds
mov
mov
pop
imul
out
push
cwtl
jbe
mov
ja
xchg
jb
xchg
mov
cmp
lock
xchg
loopne
jmp
popa
mov
inc
dec
imul
pop
push
jecxz
xlat
dec
rclb
mov
les
addr16
mov
lret
fldt
pushf
mov
xor
jo
ljmp
loopne
ljmp
lret
addl
inc
add
scas
rolb
add
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
into
jge
rorl
sbb
sbb
mov
mov
and
filds
jp
fnstenv
xchg
xchg
inc
bnd
movsb
cwtl
movsb
or
or
test
xchg
push
in
test
inc
sahf
jmp
cmp
dec
sub
testb
xchg
into
mov
push
test
or
fldcw
and
push
fnstsw
idiv
cmp
push
pop
or
mov
add
addr16
shll
or
pop
int3
add
inc
sub
sbb
cli
inc
stos
ds
dec
pushf
mull
fbstp
mov
out
inc
xor
aad
push
sahf
rolb
mov
enter
aam
cmp
int
loopne
bound
lods
adc
pop
sub
shrb
inc
sub
ret
xchg
xchg
rcrl
dec
pusha
xchg
sub
dec
lret
and
pushf
call
int3
cmpl
xor
dec
push
testb
inc
sbb
push
outsl
lret
push
loop
gs
mov
push
lahf
push
xchg
xchg
outsb
shrl
push
inc
jge
out
push
cmp
aam
inc
test
pop
push
push
cmp
iret
or
cmpsl
pop
adc
pusha
jp
sahf
stos
int
aad
inc
inc
std
lret
mov
repnz
pop
xor
in
lea
cmp
jecxz
mov
test
mov
inc
shl
mov
jb
bound
notl
fldlg2
fs
stos
add
mov
adc
pop
push
jno
lds
ss
xchg
pop
das
aad
sub
jg
mov
mov
add
cmp
inc
and
add
in
inc
xchg
lret
xlat
ffree
jge
cltd
push
std
outsb
sbb
push
lret
push
mov
in
jl
jb
fdivr
mov
iret
xorl
and
popa
test
outsl
jb
in
jb
insl
in
sti
cmpsl
pop
jmp
push
pop
ss
xor
mov
cmp
movsl
lahf
incl
sub
sbb
inc
push
mov
das
push
dec
out
lea
push
mov
inc
sbb
push
mov
dec
mov
xlat
adc
fnstsw
or
push
sub
lods
cwtl
pop
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
add
add
add
cmp
cmp
sub
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
insb
and
dec
insb
gs
arpl
push
outsl
inc
jne
jae
jb
hlt
and
mov
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
and
add
inc
add
inc
add
inc
add
es
add
jg
add
daa
inc
add
inc
add
es
add
es
add
push
movsb
scas
or
movsb
xor
inc
add
es
add
es
add
daa
inc
add
daa
inc
add
inc
add
inc
add
es
add
daa
inc
add
inc
out
cwtl
es
add
es
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
movq
ja
pop
xor
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
adc
inc
add
loop
js
lcall
and
add
adc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
inc
add
sti
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
addl
lahf
addl
cmpsl
addl
scas
addl
mov
inc
add
addl
movl
inc
add
addl
fildl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
nop
lea
add
add
add
add
add
add
add
add
orb
add
xchg
add
add
add
push
xchg
add
add
add
add
rolb
add
cld
xchg
add
xchg
add
xchg
add
add
xchg
add
add
pop
xchg
add
add
addb
add
xchg
add
add
in
add
testb
add
mov
add
mov
add
mov
add
add
add
insb
mov
add
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
mov
add
add
add
jb
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
dec
mov
add
add
add
test
add
test
add
mov
mov
add
mov
add
mov
add
add
adc
add
mov
add
add
push
mov
add
add
jbe
add
orb
add
add
fimull
add
clc
mov
add
add
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
data16
add
add
orb
scas
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
lea
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
add
add
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
xchg
add
add
add
push
xchg
add
add
add
add
rolb
add
cld
xchg
add
xchg
add
xchg
add
add
xchg
add
add
pop
xchg
add
add
addb
add
xchg
add
add
in
add
testb
add
mov
add
mov
add
mov
add
add
add
insb
mov
add
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
mov
add
add
add
jb
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
dec
mov
add
add
add
test
add
test
add
mov
mov
add
mov
add
mov
add
add
adc
add
mov
add
add
push
mov
add
add
jbe
add
orb
add
add
fimull
add
clc
mov
add
add
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
data16
add
add
orb
scas
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
lea
add
add
