mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
test
rclb
nopl
jmp
mov
xlat
les
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
idiv
iret
out
ljmp
push
aas
mov
ret
ficomps
sub
and
xchg
add
pop
jo
xchg
andb
and
ja
cmpsb
jae
jecxz
xor
fs
jae
mov
loopne
fstps
fmul
mov
inc
loopne
pop
popf
fnsave
mov
adc
addb
movaps
repnz
mov
shl
stos
mov
pop
addr16
push
sub
dec
sub
xchg
mov
movsb
in
push
add
pop
cmp
pop
xor
push
cmpsb
dec
vpsrld
mov
icebp
push
popa
adc
push
idiv
mov
and
loope
inc
fistps
mov
add
out
stos
push
lds
dec
and
divl
out
sbb
lock
mov
mov
sti
sub
imul
add
xor
mov
xchg
mov
roll
jnp
and
out
rorl
in
out
push
into
cmp
jnp
fidivrs
ds
ret
inc
ljmp
add
lods
sub
adc
fcmovne
loopne
sbb
mov
fcmovu
sub
ljmp
dec
or
in
push
jae
cmp
in
int3
pop
out
scas
addr16
mov
repz
in
movb
dec
sti
push
sub
jne
loopne
jns
pop
adcl
inc
fidivrl
dec
pop
call
sbb
scas
jge
repnz
add
jno
cmpsb
leave
gs
movsb
dec
push
rcrl
insl
push
push
mov
dec
and
inc
pop
div
cs
cmp
leave
jae
mov
mov
sbb
jg
mov
push
in
cmpsb
faddl
shr
fcomps
and
mov
and
sbb
fsubr
test
jmp
sbb
inc
adc
scas
test
dec
cli
in
cli
adc
stos
stos
or
mov
pop
xor
pop
dec
and
out
push
sbb
and
popf
jmp
dec
sub
push
xor
call
jae
mov
mov
adc
es
or
js
mov
sarb
cmp
shll
jno
pop
cld
ja
mov
jbe
pop
incb
stc
or
mov
xor
test
fwait
jp
loopne
xchg
in
push
hlt
push
sar
sbb
inc
and
mov
or
xor
cmp
xor
test
cmpsb
pop
repnz
negb
push
in
jle
rcrb
std
cmp
jnp
lock
rorb
rcrb
push
add
pop
ja
mov
int
es
je
push
sbb
aas
cwtl
jg
mov
jmp
shll
xchg
loope
mov
faddl
or
mov
andl
mov
mov
jb
cld
dec
rcrb
ds
adc
inc
push
iret
repnz
push
lahf
mov
dec
xor
inc
addr16
add
sub
pop
rcrl
into
arpl
mov
insl
xchg
xchg
daa
mov
sbb
scas
in
pushf
add
xlat
stos
popf
test
dec
repz
stos
fdivr
push
sbb
inc
int
js
mov
or
enter
loop
cmpl
imul
ffreep
inc
test
hlt
loop
mov
xchg
jge,pt
push
mov
mov
pop
fidivl
je
outsb
shll
nop
push
in
sub
int3
push
mov
jl
in
lds
push
add
mov
out
lret
xor
out
testb
std
popl
mov
movsb
push
hlt
outsl
pop
add
imul
mov
mov
jno
test
adc
or
push
or
inc
lds
add
xorl
and
xchg
scas
sbb
sbbb
sahf
sarb
jns
sub
adc
add
or
cmc
divl
dec
dec
push
hlt
dec
inc
clc
xor
xchg
sbb
out
dec
jb
sbb
pop
xor
imul
jg
ljmp
mov
cs
mov
lahf
pop
adc
and
jae
lea
and
mov
sub
jae
out
sbbl
shld
xchg
adc
pop
popa
and
xlat
orb
test
fcomip
sbb
mov
js
cmpsb
enter
aaa
in
sub
lret
dec
mov
xchg
test
test
cs
jno
icebp
fadds
mov
rcrb
push
repnz
xchg
les
dec
fsub
lock
push
pushf
shll
mov
outsb
pop
clc
push
in
xchg
insb
leave
mov
fwait
mov
insl
cmpsl
fwait
dec
pop
cld
or
jns
es
sub
sarb
dec
cmp
pop
and
mov
cmp
je
dec
imul
push
hlt
rcrl
outsl
xor
add
xor
push
ret
inc
sub
sbb
adc
lods
and
cmp
mov
xchg
bound
cmpb
scas
dec
push
pop
mov
xor
mov
call
stos
clc
clc
xchg
pop
rcrl
imull
pop
mov
xlat
cmpsl
int
sub
mov
push
es
ret
mov
das
mov
cmp
lret
rcll
cwtl
xchg
shll
sbb
mov
sbb
xchg
pop
insl
mov
or
cmpsb
cwtl
jl
or
mov
enter
bound
add
loopne
cs
jno
hlt
insl
nop
inc
adc
movsb
iret
sbb
jmp
sbb
out
lret
in
sbb
dec
mov
push
insl
inc
adc
loopne
add
adc
pushf
sub
add
pop
lret
sub
and
in
push
test
shlb
cmp
lods
lock
cwtl
pushf
mov
test
pop
call
mov
fisttpl
push
sarl
xchg
das
mov
jg
mov
ds
mulb
pop
das
enter
or
or
fidivrl
jge
sbb
inc
ret
ja
in
jb
xchg
mov
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
subps
xlat
jmp
jo
pop
mov
push
inc
or
adcl
push
dec
xlat
rorl
js
in
test
mov
push
fldl
nop
sti
shll
mov
xor
fmulp
sbb
lcall
or
repnz
loop
add
sub
inc
and
push
lret
imull
xchg
ror
and
lds
mov
shl
add
popf
ret
and
nop
mov
mov
in
fcoms
mov
lds
or
mulb
adc
in
and
mov
dec
jge
mov
out
in
inc
cld
cmpsl
sbb
sbb
rcll
test
mov
sbbl
cld
add
stos
imul
mov
pop
pop
cmpsl
aas
and
fcompl
push
shl
pop
and
fstl
dec
sbb
ret
pop
cwtl
jmp
jne
test
add
push
pop
mov
mov
cwtl
inc
and
and
cmp
and
adc
ja
xchg
insb
and
hlt
jmp
inc
fisttps
sbb
xor
sub
push
xchg
sbb
xor
adc
lods
xchg
cwtl
cmp
pushf
movsl
xor
push
xor
cmp
into
orb
out
xchg
js
cwtl
test
lock
add
mov
mov
xchg
bound
cmp
shlb
gs
cwtl
xchg
sbb
in
mov
ja
loope
sub
rcrb
lods
lods
cmp
push
cmp
iret
mov
dec
dec
cmpsl
pop
xchg
inc
dec
cmp
pop
out
sub
sbb
push
ret
inc
sbb
lds
mov
sub
lds
jb
add
mov
jg
loop
push
es
add
cmp
popl
lds
jne
cmpsl
or
fistl
aaa
leave
xor
add
repz
mov
mov
mov
into
mov
and
pop
ret
jmp
shll
jns
ds
sub
in
and
out
adc
add
dec
xor
xlat
mov
in
and
xchg
inc
jmp
xchg
adc
mov
aam
insb
inc
push
add
mov
adc
ljmp
fcmovu
pop
int
dec
mov
test
push
or
arpl
cwtl
push
ror
jecxz
es
jb
add
in
xchg
or
repnz
inc
insl
jae
decb
inc
xchg
push
nop
imul
je
out
lock
xor
test
cmp
test
lods
adc
or
ret
xchg
push
lea
out
out
ret
and
add
xchg
add
pop
ret
cmp
fwait
jp
or
ja
ja
shl
sub
inc
jne
das
push
dec
repz
or
mov
jae
lods
outsl
notl
xor
cwtl
inc
cli
mov
mov
pop
sub
jmp
add
and
inc
shrl
lret
cmp
push
mov
mov
lea
test
lea
leave
stc
cmp
mov
je
dec
xor
pop
add
xor
cs
sub
test
faddl
jo
pop
mov
bound
fdivl
adc
or
pop
cli
les
dec
push
jp
sti
xchg
jnp
lahf
pop
jl
scas
cmp
sbb
out
mov
jbe
rcrl
iret
sbb
shrl
jle
add
push
imul
outsb
push
je
loope
cs
push
shr
push
or
out
cmp
inc
stc
ds
jp
jecxz
int
nop
xor
jo
rcrl
decb
sbb
insl
out
sets
std
xchg
push
ret
dec
pusha
inc
or
ljmp
enter
or
dec
pop
stc
pop
pop
inc
ret
push
lahf
jp
test
pusha
fxch
test
adc
test
jle
andb
adc
add
mov
push
movsb
aaa
test
add
sub
out
xchg
aam
xchg
neg
je
mov
jae
cli
or
pop
add
outsb
pusha
cmp
xor
lahf
inc
pushf
pop
subb
bound
mov
dec
dec
inc
cli
sub
push
lods
imul
shlb
hlt
fmulp
mov
mov
push
mov
data16
les
mov
mov
stos
xchg
loope
fwait
out
out
mov
aas
xor
lcall
add
pop
fnstcw
int
xor
gs
incb
gs
pop
pop
push
daa
push
out
mov
adc
xor
out
pop
les
sti
xchg
into
mov
jge
shrb
mov
lcall
inc
int3
icebp
outsl
push
imul
add
dec
sbb
rorb
adc
adc
test
fdivl
aad
adc
test
pop
mov
inc
enter
rcll
sbb
mov
add
pop
outsb
lock
mov
les
mov
cmp
cltd
mov
imul
dec
mov
in
dec
pop
dec
xchg
test
leave
push
fsubr
shll
or
imul
jg
cmp
or
push
xchg
inc
ret
in
mov
mov
adcb
fwait
or
inc
iret
inc
sbb
adc
mov
add
shr
das
scas
addps
mov
sbb
or
jbe
pushf
bound
push
aad
mov
pop
mov
gs
test
jp
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
jnp
mov
pop
mov
jecxz
std
inc
movsl
or
lods
mov
inc
fs
sbb
into
cmp
bound
stc
pushf
xchg
sahf
flds
aas
js
sub
stos
push
test
in
inc
stc
ret
jmp
pop
jb
fsts
jo
pop
std
ja
adc
jge
dec
mov
jne
jne
scas
and
mov
xchg
in
jl
or
mov
notl
hlt
and
pop
sbb
imul
fsubr
fisttpll
aam
icebp
jns
inc
ja
insb
dec
inc
sti
mov
sbb
fcmovne
jno
mov
sbb
inc
in
sbb
cmpsl
stos
push
fdivl
cltd
mov
fists
mov
arpl
push
jno
pop
jae
mov
or
scas
rcl
cmp
pop
imul
jp
inc
push
js
scas
stos
xchg
insl
or
rorl
and
aaa
aaa
push
jnp
sbb
bndstx
add
push
jae
clc
jge
push
jle
or
daa
aam
loope
push
push
ds
mov
imul
jno
jle
notb
jmp
sub
adcl
orl
iret
stc
push
mov
mov
pop
inc
lock
or
stos
cmp
cmp
outsb
xor
sub
push
jo
stos
jecxz
shrl
jne
stos
mov
shl
aas
imul
adc
cmpsb
xchg
sbb
pop
mov
pop
cmpsl
inc
adc
ret
imull
xchg
pop
jnp
xchg
jg
sub
mov
adc
inc
not
jge
mov
out
aad
xchg
adc
iret
aad
aam
or
sub
mov
xchg
add
or
xor
jae
jno
sarb
cmp
sub
orl
jb
out
sub
pop
mov
push
jbe
fwait
push
and
loope
inc
pop
addr16
std
int3
cmc
divl
scas
sahf
repz
xor
add
sahf
adc
cli
sub
adc
stos
ret
xchg
decb
aad
inc
lods
add
push
xchg
xorb
sub
and
mov
pop
fsubrp
call
jnp
sub
mov
aas
addb
loop
pop
and
shrl
cli
dec
negb
add
ret
leave
mov
dec
shlb
bound
and
sahf
xor
cmpsl
leave
rol
push
cmp
push
call
enter
imul
bound
mov
sub
std
push
inc
add
xchg
cmp
loop
mov
stos
dec
jnp
das
cltd
cmpsl
imul
dec
add
fstl
stos
xchg
fisubs
and
jmp
movsb
dec
xchg
ja
dec
into
jp
jecxz
inc
pop
push
cmp
mov
scas
insb
popf
test
jl
mov
push
push
sub
lahf
sbb
jns
in
int3
aad
sbb
ss
dec
out
outsb
std
out
rorb
sbb
xor
xchg
adc
pusha
sub
ret
decl
mov
insl
mov
jns
xchg
je
lods
insb
inc
int
scas
jbe
jge
and
sarb
xchg
mov
jno
scas
mov
bound
dec
mov
jne
shl
mov
jge
sbbb
adc
add
icebp
sti
sub
inc
cmp
ret
dec
pop
lods
test
insl
xor
icebp
dec
push
divb
dec
xchg
inc
andb
and
lea
mov
jmp
push
loop
das
sbbl
repz
lcall
add
pop
mov
mov
cld
sti
push
nop
sub
cwtl
xchg
repz
leave
adc
fstps
jno
add
arpl
dec
mov
lret
add
outsb
rcrl
mov
xor
movsb
jmp
dec
and
jne
push
jle
xchg
test
mov
pop
das
push
lods
int3
cmpl
mov
movsl
mov
pushf
dec
sahf
xor
dec
loopne
insl
rorl
pop
inc
mov
mov
jns
repz
sbbl
inc
add
mov
sub
nop
sbb
stos
imul
into
pop
mov
dec
in
enter
lods
fdivs
subb
cmp
jo
mov
call
outsb
adc
xchg
or
fnstsw
push
lds
mov
and
shrd
jmp
and
and
or
mov
repz
xchg
data16
mov
dec
fistps
jecxz
out
mov
loop
pop
orb
inc
cmpsl
xchg
es
xchg
jnp
mov
sbb
sahf
arpl
dec
shl
stos
and
push
int
dec
stos
cwtl
mov
int3
in
stos
inc
mov
lfs
arpl
pop
cmpsb
jp
lcall
cli
mulb
sbb
pop
or
loop
mov
sub
mov
push
loopne
or
pop
repnz
test
dec
jae
shrb
push
mov
mov
jo
cmc
sub
jae
jne
push
cmp
mov
test
cmpsb
sti
jb
push
push
push
mov
mov
mov
pop
add
arpl
test
add
inc
push
lcall
cwtl
inc
mov
adc
scas
dec
mov
lds
sbb
mov
rorb
fidivs
sub
mov
jne
stc
inc
iret
es
std
inc
in
xlat
dec
loope
scas
test
rep
and
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
sbb
mov
add
xor
rcrb
lret
push
imul
push
in
or
push
jnp
ret
rcr
adc
hlt
pop
inc
fimull
lds
xor
scas
push
sub
dec
xor
mov
dec
mov
pop
lea
inc
mov
push
in
popa
shrl
in
fcomi
lods
mov
mov
ds
ja,pn
adc
fistl
in
jecxz
cwtl
addr16
cmp
enter
test
cmpsl
pushl
jge
les
mov
xchg
pop
mov
mov
pop
adc
xlat
and
test
bswap
jmp
into
mov
pop
je
pop
jg
aam
fcomps
inc
movsb
pop
jp
push
addr16
pop
nop
movsb
lock
xchg
pop
call
lret
sub
adc
shr
enter
enterw
fimull
add
jmp
dec
movsb
mov
jmp
cltd
or
data16
sti
cmpl
mov
push
mov
sub
push
les
mov
scas
leave
adc
pop
mull
ljmp
movsb
jb
sbb
in
pushf
dec
mov
mov
test
leave
dec
loop
and
addl
icebp
mov
in
and
dec
mov
dec
adc
les
popf
pushf
and
and
movsl
repz
insb
or
inc
adc
lds
or
push
in
cli
mov
lods
fists
movsl
in
je
addr16
inc
pop
cmp
fisubrs
and
out
addb
mov
and
jge
sti
aas
and
cmp
push
and
sbb
movsb
push
js
mov
stc
andb
xchg
repnz
lret
mov
xchg
jno
stos
test
inc
xchg
rcr
repz
stos
js
out
jns
mov
daa
adc
add
pop
cmc
inc
cmp
lcall
jnp
or
insl
jne
mov
pop
cs
jno
scas
repnz
sub
in
sub
add
xlat
push
pusha
inc
nopl
daa
jo
sbb
inc
imul
pusha
sub
lret
add
ficoml
sub
dec
es
insb
dec
aam
movsl
nop
es
in
xchg
xor
std
loopne
call
icebp
or
push
inc
repnz
lods
cltd
mov
test
leave
andb
cmp
pushf
in
and
cli
int
cltd
push
je
into
mov
dec
out
cs
loopne
xchg
inc
mov
sahf
dec
lret
lods
scas
pop
sub
insb
xor
scas
pusha
dec
push
arpl
mov
mov
sbb
mov
mov
sub
fwait
mov
loop
jge
lods
or
loope
popf
cmpsl
pop
scas
xchg
leave
ficoms
lods
adc
int
jmp
aam
scas
out
mov
enter
adc
mov
jmp
mov
inc
lahf
sub
mov
jno
xchg
sarl
cmp
xlat
adc
xor
push
sbb
fidivl
mov
loope
iret
mov
sub
fisttpl
mov
fdivrl
shl
je
mov
sbb
add
sub
mov
jo
ficomps
jl
dec
xchg
cmp
mov
push
jno
push
mov
xor
sub
push
push
or
nop
cmp
xor
pop
call
inc
bound
stos
pop
std
push
lock
ja
dec
push
ljmp
dec
add
loop
out
and
test
pop
dec
xchg
sbb
and
sub
cmp
dec
dec
cmpsb
jge
sti
push
fildl
adc
lds
jb
xchg
inc
inc
sbb
cmp
adc
pop
push
insb
shlb
sub
mov
mov
test
dec
xchg
xlat
lret
das
pop
fsubl
test
push
imul
mov
pop
mov
sbbb
xor
iret
push
jmp
mov
mov
xchg
push
xchg
ret
pop
xor
mov
push
loopne
sbb
test
sub
mov
pushf
xor
test
add
out
push
repz
ret
fmuls
fstpl
push
dec
testl
test
sbb
push
mov
mov
test
loopne
jmp
lret
insl
lret
popa
test
cwtl
dec
mov
mov
movsb
inc
idiv
xor
push
iret
popl
dec
adc
xchg
mulb
mov
jno
hlt
lock
lret
inc
faddl
add
xor
fstps
or
notrack
mov
xor
bound
mov
jb
fs
fsub
lods
daa
fdivl
insb
insb
dec
sbb
popa
or
jp
divb
enter
test
divl
movsb
dec
outsl
cmpsl
xchg
mov
lods
sub
cmpsb
or
push
icebp
xor
push
out
cli
sbb
sbb
fadd
fwait
lret
push
ds
push
xorb
push
loop
je
mov
movsl
negb
shll
xchg
mov
and
push
jecxz
faddl
sub
xor
stos
fwait
and
push
rorb
in
mov
in
xchg
push
loopne
xor
push
xchg
mov
cmp
push
setns
sbb
lods
pusha
jnp
xor
push
add
aas
xor
bnd
dec
faddl
and
mov
push
and
fwait
adc
add
outsl
ja
cltd
js
imul
loope
ror
mov
imul
mov
std
mov
icebp
jae
pushf
sbb
lret
popa
in
sub
out
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
lret
loop
pinsrw
movlps
pop
rcl
and
mov
insl
or
mov
xchg
xor
adc
mov
shr
das
push
inc
mov
psubw
insb
and
pushl
in
insb
out
cmp
std
aaa
lea
and
mov
sub
fwait
neg
ja
push
or
lods
int3
dec
lock
ror
sub
lods
or
into
mov
popf
enter
in
fstpl
xorb
and
bound
jmp
mov
pop
pop
and
fcoms
das
ds
jbe
add
push
or
out
aad
xchg
outsb
push
fidivrs
out
mulb
out
add
jl
xor
jb
leave
xchg
dec
xor
lds
icebp
mov
mov
push
sahf
testl
xor
jge
mov
lods
dec
jns
cmpb
add
mov
push
daa
repnz
xor
dec
xchg
jp
icebp
push
pop
xor
push
mov
pop
pop
and
in
jle
and
add
sbb
and
mov
stos
enter
dec
popf
or
jmp
jmp
leave
mov
mov
cwtl
jl
xchg
ljmp
mov
push
idivl
mov
jo
je
sub
xlat
push
test
mov
loope
dec
pop
test
xchg
inc
testl
stc
inc
mov
sti
fs
cs
std
incl
xor
cld
sbb
bnd
aaa
pop
xlat
mov
mov
cmpsl
mov
stos
add
out
sub
adc
push
mov
decl
daa
or
mov
lods
inc
or
fwait
enter
in
fbstp
pop
stc
fwait
push
idiv
sbb
lods
cmp
cwtl
dec
scas
arpl
mov
dec
aam
loopne
int
lods
jnp
iret
fdiv
int3
mov
push
or
sbb
les
shrb
xlat
add
daa
lcall
pop
mov
rol
mov
wbinvd
add
and
cwtl
pop
stc
enter
fadds
cmc
xchg
push
es
ss
ds
insb
cld
out
ds
pushf
or
push
pop
mov
std
and
mov
jae
out
xchg
mov
jecxz
imul
pop
mov
data16
push
das
adc
ds
std
add
cmpsb
imul
out
test
push
insb
ret
mov
add
stos
lret
push
and
stos
cmpsl
shlb
mov
fidivrs
push
and
loope
lods
push
sub
daa
iret
mov
sbb
sbb
shr
pop
sbb
mov
fwait
out
repnz
outsb
hlt
je
inc
ljmp
loope
push
sbb
mov
test
fsub
pop
jecxz
cmpsl
mov
xchg
sbb
push
and
inc
mov
mov
cltd
mov
lods
test
inc
imul
add
shr
test
push
jp
inc
mov
flds
loopne
mov
daa
adc
ror
inc
stos
dec
icebp
lret
arpl
sbb
and
ret
push
pop
loope
cli
icebp
mov
push
sbb
mov
mov
test
cmpsb
sbb
mov
add
cmpsl
mov
dec
sbb
xor
add
leave
int3
pop
sub
les
sub
xchg
sbb
and
xor
dec
daa
incb
sti
repz
push
cmpsl
aaa
mov
xchg
sub
xor
jbe
cltd
lcall
pop
and
fwait
rcrl
sub
arpl
inc
mov
out
mov
pop
push
mov
and
sub
add
and
dec
in
fildll
dec
addr16
and
icebp
pop
xor
inc
sbb
test
jmp
cli
sarb
xchg
int
in
imul
in
cs
dec
stc
roll
add
inc
lahf
in
out
and
mov
fiaddl
icebp
add
sub
pop
pop
mov
aam
lret
ret
mov
inc
or
pop
loop
cmpsb
push
mov
xchg
das
xor
push
sub
inc
adc
sbb
daa
scas
popa
fidivrl
stos
mov
das
push
xor
ret
shrl
push
and
or
aad
sub
dec
stos
add
mov
call
loope
mov
sti
mov
pusha
outsb
dec
jo
and
popf
mov
pop
dec
mov
pushf
jo
arpl
sbb
or
or
adc
push
outsl
lods
sbbl
ljmp
adc
and
outsl
sub
fidivrl
rol
outsb
add
out
out
cli
push
data16
call
push
mov
push
mov
stos
mov
xor
add
xchg
and
gs
mov
adc
dec
rcll
clc
aam
rolb
push
repnz
xchg
outsb
jmp
idiv
je
dec
sub
pop
out
push
popf
xchg
loopne
ret
subl
js
sarl
adc
sbb
imul
or
stos
frstor
outsb
and
decb
push
in
jl
hlt
mov
imul
ficomps
inc
pop
repz
idiv
arpl
cmpsl
mov
jno
cli
pop
ret
sbb
add
or
sub
in
mov
mov
imulb
jg
js
adc
mov
cmp
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
movsb
js
rorb
pinsrw
pxor
mov
lret
adc
mov
fcmovnb
and
mov
cmp
cwtl
les
add
pop
mov
shrl
inc
pop
adc
push
mov
sahf
push
iret
cltd
mov
insl
adc
mov
fsubs
inc
jge
and
jcxz
jmp
mov
iret
mov
cltd
push
scas
arpl
shl
lock
js
push
jp
aas
rol
or
jecxz
adc
xorb
push
es
xchg
mov
int
xchg
pop
stc
jp
out
pop
adc
jle
fwait
stos
fnstenv
push
sub
ss
adc
mov
sbb
or
mov
pop
das
imul
push
dec
fdivrs
xor
out
cld
or
lret
ret
mov
adc
xor
in
inc
jge
mov
add
inc
jno
mov
jae
push
pop
or
in
nop
out
inc
adc
xchg
mov
pop
xor
cmpsl
cld
shl
mov
adc
xor
dec
sbb
fidivs
mov
popa
in
jb
mov
outsb
mov
mov
fwait
dec
and
loopne
jo,pn
jmp
mov
pusha
pop
mov
neg
jg
lret
mov
adc
and
adc
lock
dec
cmc
push
push
cs
cmp
dec
cmpsb
pop
xorb
xor
cmp
ja
mov
xchg
inc
push
shl
data16
loope
adc
imul
in
jne
xchg
outsl
xor
repz
sub
push
jbe
pop
shl
std
pushl
popa
out
rcr
xorb
jo
mov
sti
mov
pop
data16
fld
cmpsb
pop
lret
shll
cmpsb
cmp
mov
xchg
jae
lods
aaa
pop
fiaddl
cmp
pop
dec
inc
push
rorb
mov
cmp
push
cmc
ss
pop
push
or
enter
mov
jle
jg
jg
movsl
aad
cmp
lahf
sbb
push
mov
xchg
mov
jo
or
sti
repnz
push
ja
mov
xchg
roll
out
cwtl
stos
push
pop
xor
push
scas
and
push
cli
xchg
push
jle
inc
inc
pop
lods
pop
push
loopne
add
jno
cmp
es
js
pop
dec
sti
je
popa
jmp
jne
fcmovnbe
aam
cwtl
inc
pop
rorl
test
xchg
push
lret
daa
iret
push
lcall
pop
cmp
ljmp
push
xor
mov
mov
cmp
loope
pop
and
and
fidivrl
pop
pop
cmp
xchg
xchg
adc
jns
sbb
js
enter
stos
lods
faddl
mov
call
or
mov
call
imul
popa
mov
mov
mov
cmp
lahf
mov
pushw
loope
imul
adc
or
rorl
and
sub
sbbb
call
rcrb
mov
xchg
jns
cmc
push
mov
sbb
adc
and
push
mov
pop
aam
cmpsl
xchg
je
jg
and
and
jp
mov
mov
xchg
and
orb
stos
push
cmp
es
mov
arpl
stos
cs
pushf
add
fwait
cwtl
arpl
cmp
jbe
xlat
rolb
dec
and
sub
je
add
aad
movsb
ds
out
loope
push
add
mov
add
push
dec
addr16
roll
pop
ljmp
lods
test
shl
insl
in
mov
pop
xchg
xchg
or
sarb
jl
adc
bound
addr16
jmp
jno
into
in
sub
out
scas
sub
loopne
pop
inc
ljmp
fcompl
cld
dec
xchg
mov
mov
xor
cld
jmp
je
cmp
stos
std
jbe
mov
test
popf
sbb
dec
cmpsl
ss
xchg
mov
mov
pop
shlb
sub
icebp
cwtl
data16
push
xor
mov
lcall
dec
call
loope
and
xlat
cmc
jge
lods
aam
out
rcrb
push
dec
ljmp
pop
sbb
xchg
scas
lea
repz
lcall
nop
push
in
jl
mov
cmp
inc
inc
add
outsb
pop
ror
or
rorb
mov
cwtl
std
outsb
push
cmp
mov
scas
aaa
andnps
in
jno
sub
fwait
xchg
and
imul
jne
mov
push
fstps
mov
ljmp
mov
dec
mov
inc
aam
sub
popa
hlt
mov
mov
rorb
dec
ss
in
fists
lods
dec
push
lret
sbb
push
imul
adc
jbe
pop
xchg
lods
dec
mov
pop
jmp
pop
lods
scas
addb
inc
cld
ret
lock
pop
xor
fadds
stos
xor
mov
fdecstp
les
dec
xchg
cmovge
adc
xchg
sti
icebp
adc
sbb
cmpsb
aaa
mov
sub
and
mov
push
js
aaa
loopne
cwtl
xchg
add
cmpsb
dec
fnstcw
cmp
and
or
pop
mov
xor
push
sbb
sahf
stos
daa
sahf
pop
push
leave
inc
lcall
jg
out
add
sahf
mov
jg
out
lock
mov
add
xchg
ljmp
xor
or
xchg
push
cli
sub
cmpsb
lods
insb
push
mov
or
ss
push
rcrb
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
push
mov
xchg
add
ja
add
and
push
rolb
mov
xchg
int3
pop
sbbb
mov
push
es
xor
dec
xor
push
test
les
mov
push
xor
pop
adc
sbb
mov
mov
push
nop
jecxz
outsl
xchg
dec
push
lds
jbe
adc
shrl
mov
mov
add
mov
add
roll
pop
out
jne
mov
xchg
insl
andl
xchg
dec
bound
and
sub
out
mov
pop
mov
sbb
mov
cwtl
lock
andl
jmp
movsb
rorl
inc
sarl
push
cmp
or
jecxz
mov
clc
andb
leave
ljmp
adc
fldt
pop
or
pop
dec
pop
pop
xor
dec
inc
mov
cs
ja
sti
jge
cmp
sbb
movsb
mov
sti
inc
hlt
lcall
loope
sub
jb
addl
rorl
inc
hlt
mov
mov
fldcw
ljmp
xchg
sbb
cmc
jmp
cwtl
ds
push
or
leave
adc
add
mov
movsb
test
je
pop
jp
and
lret
jl
mov
add
dec
mov
sub
mov
jno
pop
jae
outsb
cli
pop
xor
push
sbb
cmp
loope
enter
aam
fldlg2
shlb
dec
push
shll
adc
icebp
cmp
in
repnz
lret
mov
hlt
jnp
mov
bound
mov
int
loope
push
pop
mov
movsl
out
xchg
insl
aam
add
test
gs
or
jbe
lret
ret
adc
les
test
mov
fidivrs
mov
sbb
popa
sbbb
inc
fwait
testb
leave
jno
in
gs
aam
clc
xor
stos
add
inc
jne
xchg
ja
imul
cmp
sub
outsl
stos
and
dec
inc
jns
shll
cmpsl
sbb
pushf
add
jb
popf
outsb
loop
outsl
xor
jmp
in
fldenv
lcall
mov
cs
jo
ret
pushf
push
and
jmp
pushf
mov
dec
loope
jnp
or
clc
imul
insb
sahf
ljmp
jne
xchg
rcr
ret
push
jge,pn
push
xor
xor
rorl
mov
cmc
out
xchg
xor
jmp
or
mov
add
test
lds
dec
test
add
dec
dec
aam
inc
rorl
arpl
jg
mov
pop
jmp
iret
jns
mov
lcall
push
lods
roll
push
jge
rcrb
imul
xor
mov
divl
aaa
add
sbb
xchg
lahf
sub
outsl
loopne
pop
outsl
sub
mov
ss
mov
pop
add
mov
jnp
pop
or
fs
repnz
adc
flds
icebp
mov
inc
cli
orl
fstps
dec
jmp
pop
int
sbb
es
inc
in
inc
mov
out
push
aaa
lods
lret
fisttpll
rorb
sub
imul
inc
repz
push
mov
jb
jmp
mov
leave
mov
loope
int
stos
or
loopne
xchg
inc
out
mov
and
push
mov
pushl
es
jg
fs
stos
and
jne
aad
test
or
mov
pop
sahf
pop
push
std
mov
push
pop
daa
aas
jno
std
scas
out
inc
mov
enter
sub
arpl
inc
sub
push
cld
mov
test
xchg
div
sub
outsb
xchg
sub
rcrb
mov
movsb
push
sub
jp
cltd
mov
sbbb
data16
add
in
xchg
dec
xchg
cs
call
sbb
test
loop
push
add
cltd
dec
enter
lods
add
loope
ret
fiadds
lea
jbe,pt
cmpl
scas
imul
jle
into
js
sti
clc
aam
out
jne
hlt
sub
jbe
or
popa
push
fidivrl
and
arpl
dec
jl
jl
mov
sub
pop
ret
sbb
xor
cmc
or
mov
push
pop
and
cmc
and
fiaddl
ret
push
and
jo
sub
cmp
and
adc
push
cltd
xchg
mov
mov
dec
lods
inc
int
mov
popa
sti
fnsave
inc
pop
and
sbb
push
sbb
push
in
sbb
andl
pusha
mov
sbb
test
mov
movsb
xchg
pop
fsts
push
sar
leave
repnz
xchg
shlb
repz
popa
dec
xchg
mov
add
lret
loop
out
xchg
nop
icebp
inc
cmp
mov
int3
adc
xchg
sub
outsl
loope
cmc
cmc
fcmovu
test
adc
dec
mov
repnz
cmpsb
das
sbb
shl
pop
push
mov
inc
ret
sbb
jl
jge
outsb
mov
lods
sarb
or
lahf
mov
not
mov
pop
repnz
in
sbb
arpl
pop
insl
lock
and
in
clc
out
loope
or
adc
fdivl
clc
xchg
sbb
dec
pop
jl
int
pusha
cmp
mov
out
psubd
mov
sbb
test
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
pop
cltd
std
xchg
pinsrw
js
jne
fwait
mov
push
stc
stos
inc
out
inc
xor
mov
xchg
lret
push
lcall
cmp
or
adcl
sub
xor
xor
int3
imul
pusha
sbb
iret
mov
or
int3
push
sbb
ret
mov
pop
inc
lods
sub
dec
mov
test
imulb
xor
cmp
xchg
inc
popf
loopne
dec
or
or
std
int3
sub
sbb
stc
dec
mov
scas
hlt
lret
mov
loope
sub
jmp
adcb
and
push
xor
out
ss
mov
icebp
aad
in
jnp
and
adc
jmp
cmp
hlt
add
adc
addr16
dec
push
scas
inc
xor
enter
fildll
cmp
gs
dec
inc
lret
ficomps
out
ficoml
cmpsl
nop
push
sbb
sarb
lahf
cmpsl
shrl
aas
mov
add
iret
dec
xchg
sbb
ret
sti
out
jnp
push
enter
rorl
dec
inc
ja
mov
loopne
fs
mov
sub
jl
sbbl
lcall
push
adc
cmpl
mov
cld
push
push
sub
xor
mov
push
lret
jns
dec
repnz
cmpsb
dec
lret
fldenv
in
sub
imul
or
jae
jmp
arpl
pop
sub
mov
xchg
cli
mov
mov
fidivrl
pop
push
mov
loop
jge
out
adc
xor
int3
icebp
inc
fs
mov
inc
dec
ljmp
xchg
movsl
test
jns
cmpb
lock
nop
gs
call
test
xchg
dec
dec
rcr
and
rclb
pop
in
js
mov
push
in
add
fiadds
cs
into
fucomp
pop
xchg
mov
lret
in
mov
dec
cltd
push
push
mov
sbb
jp
jbe
pop
and
dec
iret
xchg
notl
je
push
mov
rcrl
add
outsl
fwait
mov
mov
adc
mov
jecxz
cli
jge
lds
nop
push
call
int3
aaa
rolb
or
outsl
push
jo
sbb
jecxz
push
fimull
push
and
jno
inc
or
sub
daa
sbb
pop
insb
repnz
lock
mov
mov
or
push
mov
lods
mov
in
repz
imul
movsb
xchg
sub
xor
and
scas
loopne
xor
xor
mov
jl
add
std
pop
push
adc
mov
test
pushf
cwtl
movsb
mov
jnp
dec
pcmpeqb
cmp
in
or
adc
xchg
push
xor
mov
pop
jge
negl
adc
repnz
dec
loop
rcll
push
and
push
mov
test
lcall
or
mov
mov
jle
int3
js
push
inc
nop
scas
inc
fdivl
jns
mov
sbb
inc
pop
push
add
or
jb
ds
xor
loop
mov
mov
mov
fsubs
cwtl
sbb
pop
jbe
mov
addr16
sarb
mov
dec
inc
jae
jnp
xor
loopne
aam
pop
leave
call
mov
push
pop
adc
sbb
negb
popa
pop
test
push
fwait
aad
jns
pusha
or
jg
sbb
je
loopne
push
xor
push
pop
stos
sarl
add
mov
into
je
rorb
out
out
push
pushf
aaa
push
sbb
dec
lods
arpl
inc
ljmp
push
mov
xchg
push
pusha
jne
mov
sub
xchg
in
mov
mov
ret
xchg
arpl
sbbl
les
and
hlt
cmpsl
imul
ja
xor
repnz
fisubs
fnsave
sbb
and
std
sahf
lcall
aad
sbb
insl
in
jno
jle
insb
inc
mov
xchg
push
aad
jp
hlt
ret
bound
sub
cltd
pusha
je,pt
je
lods
out
jmp
jg
pop
xchg
dec
mov
pushf
or
inc
push
cmpsl
fisubrs
or
push
jecxz
in
or
xor
adc
adc
cmp
fidivrl
push
inc
stos
pop
addr16
pop
dec
fldt
out
jle
mov
sbb
mov
push
cs
and
int3
pop
add
or
dec
sub
roll
inc
sbb
outsl
out
jnp
xor
mov
fimull
add
push
add
ljmp
test
jns
add
test
out
jo
ret
pop
cs
xchg
mov
xor
xor
arpl
mov
pop
ljmp
or
in
es
and
push
daa
in
xchg
loope
adc
clc
cmp
aad
add
or
les
adc
dec
rcl
jno
dec
mov
les
daa
inc
pop
pushf
mov
push
xor
xchg
mov
sbb
js
cmp
jp
lea
push
repnz
mov
xchg
push
bound
adc
cwtl
sub
and
loopne
add
enter
inc
or
xchg
inc
idivl
clc
adc
add
subl
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
addr16
pinsrw
pmaxsw
pop
mov
xor
mov
push
cwtl
and
mov
or
jbe
cmp
or
xor
mov
aas
jns
inc
js
insb
jecxz
fnsave
dec
repnz
inc
pop
rorl
jl
movsb
inc
pop
jge
sub
inc
fcomps
pop
inc
cld
fisttpl
loopne
andl
xchg
gs
push
xchg
out
test
roll
in
ja
mov
pop
sbb
pusha
out
push
cmc
arpl
ror
outsl
or
movsb
fiaddl
dec
mov
sbb
dec
cmpsb
sbb
loopne
ds
jecxz
pop
fsubs
in
dec
shrl
jmp
imul
xor
loop
push
cli
mov
jmp
mov
mov
movl
jbe
sbb
mov
xchg
sub
and
lock
add
lods
pop
int3
test
add
add
fidivrs
xchg
data16
test
bound
clc
mov
dec
test
and
pop
orb
addr16
sbb
lods
push
pop
movsl
push
pop
cmp
inc
xchg
scas
adc
sbb
xor
iret
inc
int
xchg
scas
pop
xlat
mov
cltd
xchg
imul
add
out
inc
mov
fwait
or
pop
test
xchg
or
jno
cltd
and
lods
dec
stos
incl
repz
pushf
fsubrl
int3
pop
inc
divb
inc
xor
out
pushf
adc
enter
and
lret
mov
into
pop
sbb
ret
dec
idivl
lock
or
adc
test
shlb
hlt
jle
mov
xor
stos
push
cmp
rcrb
movsl
fistl
or
pop
mov
cmpsb
add
int
pop
pop
mov
je
ljmp
imul
cmp
push
mov
sbb
pop
cld
pop
nop
mov
cltd
xchg
pop
push
xchg
lahf
fxam
scas
sub
push
dec
jne
adcl
ds
test
hlt
ja
ret
pop
cs
rcrl
or
fcomps
xchg
push
dec
mov
jl
test
mov
pop
les
inc
daa
inc
fimuls
push
push
sub
pop
mov
inc
inc
stos
ja
sub
xchg
lds
adc
mov
fwait
out
dec
imul
sbbb
es
je
adc
cmp
and
inc
dec
jmp
fcompl
fistl
int3
push
and
add
xchg
mov
adc
mov
out
fisttps
lahf
jae
imul
mov
mov
arpl
dec
mov
mov
pop
rorl
xor
leave
fcoms
sbb
push
jno
xor
mov
lods
xchg
push
pop
sbb
pop
leave
fnclex
jge
fisttpl
in
mov
push
shlb
dec
or
pop
xchg
fxam
adc
xchg
hlt
pop
mov
ss
pop
sti
dec
cmpsl
and
mov
and
or
push
fsubrs
inc
clc
jne
pop
call
hlt
loopne
mov
mov
ret
inc
xor
mov
push
or
aam
enter
pop
es
mov
stc
cmpsl
xor
push
es
rorb
repnz
sbb
cmpb
xor
adc
mov
sub
call
pop
xor
jbe
inc
sub
mov
xor
and
lcall
inc
xorl
adc
divl
movsl
pop
mov
ds
dec
or
ss
push
sahf
dec
dec
pop
sbb
xchg
add
push
call
sub
inc
adc
dec
nop
adc
jbe
ret
jae
mov
loop
addr16
daa
std
xor
adc
dec
or
cmp
dec
cli
dec
cmpl
lcall
cmpsb
fadd
fdivrs
gs
scas
add
bound
and
lock
fisubrl
ja
aam
dec
jge
sti
stos
pop
push
or
mov
mov
scas
dec
nop
jno
or
mov
std
push
in
xchg
jo
and
int
dec
cmpsb
mov
sub
adc
pop
ds
out
mov
jmp
add
nop
mov
jecxz
push
dec
ljmp
pop
mov
loope
fmuls
popl
outsb
xor
hlt
sti
in
call
fnstcw
clc
add
inc
cmp
xlat
fisubrs
call
push
sub
lock
push
pop
inc
adc
aad
xchg
in
add
fstpl
cmpsb
ret
mov
sarl
add
data16
stc
lods
std
pushf
mov
xor
pusha
xchg
test
fwait
push
xor
daa
and
jae
mov
cmp
repnz
orb
push
push
jl
fcmovu
mov
sbb
shrb
mov
outsb
jp
sahf
cmp
fs
sbb
push
jno
hlt
int
bound
push
dec
dec
push
pop
push
ds
in
adc
pushf
rolb
outsl
addb
and
imul
es
inc
fadds
mov
xchg
push
outsb
imul
stos
xchg
pop
mov
push
test
stc
push
dec
jp
xor
stos
repnz
jmp
popf
mov
fwait
lea
add
loop
lret
sbb
xchg
add
pop
lods
or
and
loopne
push
sub
pop
adc
repnz
mov
das
fwait
inc
in
mov
bound
jo
mov
imul
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
pop
sub
js
mov
movups
mov
cmpsb
jno
rcrl
xor
lock
test
dec
ds
mov
inc
pop
ficompl
sub
push
mov
pushf
mov
dec
jbe
cmp
jle
lods
and
call
in
jp
or
repnz
jb
inc
mov
call
daa
aaa
dec
lcall
xor
fisubrs
push
fdivrl
std
mov
jns
es
jp
mov
mov
pushf
cmp
cmc
cmc
scas
addr16
cmpsb
sti
loope
and
repz
mov
shlb
and
in
jg
push
adc
in
lock
sub
call
rolb
enter
mov
push
shlb
imul
mov
jl
sub
in
push
sbb
pop
cmc
data16
aas
mov
jnp
mov
mov
jl
cmpsb
push
xchg
pop
ljmp
cmpsl
mov
add
addr16
jnp
js
stos
inc
enter
mov
loope
xor
inc
aad
mov
stos
mov
add
or
int
bound
push
mov
cmp
mov
cwtl
bound
adc
idivb
jno
mov
dec
xor
mov
cmp
pop
sub
mov
and
xchg
sub
push
mov
test
popa
sub
popa
bound
push
inc
test
dec
scas
and
cmc
out
mov
pop
in
mov
enter
add
and
pmulhrw
flds
cmpsl
in
int3
sub
lds
adc
stc
jmp
mov
and
cli
out
push
outsb
cli
insl
addr16
cmp
and
ja
andl
imulb
leave
and
js
add
pop
xchg
aaa
jb
xchg
pop
xchg
out
cmp
mov
add
fwait
sarl
hlt
push
push
int3
dec
xor
addb
or
mov
mov
mov
and
and
test
scas
out
pop
fmul
xor
aad
rclb
inc
jge
lret
mov
jo
push
pop
cmpsl
or
xchg
pop
or
lcall
stos
mov
fildl
sbb
pop
cmp
jge
bswap
ds
iret
xor
mov
rorl
cmpsl
in
mov
mov
xchg
fmul
in
inc
popf
in
dec
les
mov
daa
pop
push
xchg
fwait
pop
xchg
das
decb
lock
rcll
pushf
cmc
add
push
push
sub
mov
out
ffree
insb
stc
in
xchg
mov
aas
mov
lock
les
insb
inc
cmp
sbb
push
xor
push
mov
cmp
mov
outsb
int
jnp
or
sub
sbb
cmpsb
xchg
fisubrl
dec
add
mov
pop
loope
fisubrl
xchg
mov
or
pusha
fstpt
imul
imul
aam
cwtl
into
stc
mov
addl
outsb
jmp
int
in
xchg
inc
sub
arpl
push
pop
xchg
ret
xor
or
pop
inc
mov
outsb
out
std
jns
loop
xchg
mov
cld
iret
inc
adc
dec
jae
clc
aam
mov
mov
shrb
into
mov
xchg
js
sbb
mov
jnp
mov
ds
mov
pop
jbe
xor
push
jl
jae
dec
out
sbb
shrb
and
and
mov
mov
and
fadds
cmp
lcall
stos
bound
add
ret
ljmp
sbb
stos
movsb
stos
cmp
aam
aas
inc
jbe
sub
pop
xor
test
rcll
sbb
fsubl
pop
mov
jns,pn
or
mov
leave
pop
popa
movsb
jno
cwtl
jnp
mov
push
fcmovb
xchg
int3
lea
lods
ds
push
pop
pop
out
stos
ss
lret
mov
jae
psubw
cmc
lods
xor
push
shlb
cld
pop
pop
movsl
pop
ljmp
mov
pop
in
mov
je
dec
les
dec
loopne
std
sbb
mov
ja
cmp
push
cmpsl
clc
ja
push
enter
std
jp
xor
gs
movsl
mov
mov
xchg
inc
xchg
cwtl
xchg
or
int
out
and
sbb
scas
movsl
mov
lcall
mov
loope
out
popa
jp
cmc
dec
mov
loope
test
arpl
cvtps2pd
mov
push
js
jge
notb
movsb
testb
lods
lret
outsl
pop
xchg
loop
cmpsl
pushf
pusha
daa
cmpl
or
pusha
jne
push
mov
mov
mov
or
cmp
and
shlb
lret
adc
clc
call
dec
stos
add
ret
testl
imul
stc
or
rolb
xor
insl
in
popa
out
xchg
aaa
and
sbb
inc
imulb
repz
or
outsl
sti
cmc
add
or
xor
or
js
jbe
mov
push
loopne
jo
dec
or
sbb
iret
divl
fmul
jne
mov
rorl
adc
loopne
xchg
lds
inc
xchg
sbb
aaa
popf
out
dec
stc
jnp
negb
jmp
cmc
mov
int3
movsb
push
inc
lahf
imul
mov
ss
add
in
inc
pop
xchg
inc
cltd
les
sahf
roll
movsb
out
test
test
movsb
cmp
es
ljmp
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
decl
mov
add
movhps
in
push
repnz
pop
addb
sar
mov
inc
xor
in
or
in
je
mov
inc
lds
or
xchg
mov
scas
inc
nop
pop
jmp
shrb
aam
fcomps
mov
mov
push
sbb
in
loopne
add
int
arpl
ljmp
dec
in
ja
jecxz
mov
fs
std
arpl
ret
lahf
gs
mov
pop
std
xor
jnp
loopne
push
lahf
xchg
enter
arpl
cmc
dec
sub
mov
dec
sub
inc
cmp
out
in
cltd
dec
stos
pushf
sti
cmp
in
sub
out
cmpsl
push
add
jo
cmp
adc
or
leave
xchg
notb
orb
or
or
outsl
aas
xorl
or
jg
add
rcll
pop
call
test
mov
jbe
add
jae
fldl
or
enter
push
xchg
scas
xor
sahf
in
xor
mov
jne
adc
push
add
inc
xchg
mov
test
sarb
mov
cmpsl
mov
xchg
or
xchg
ret
jno
add
mov
push
aas
je
jnp,pt
sbb
jae
sarl
stos
push
insb
jle
xchg
movsl
mov
mov
mov
add
jl
insl
sbb
inc
fistl
jg
imul
imul
and
push
sub
es
testl
pop
inc
or
pop
jp
into
pop
gs
lods
mov
decb
cmp
dec
es
xchg
das
fdivr
pop
fisubrs
mov
mov
sub
xchg
enter
sti
pop
mov
dec
inc
jle
pushf
cwtl
bound
scas
dec
jp
cmp
fcompl
addl
inc
and
es
outsl
xchg
mov
mov
inc
cmpsl
out
sbb
mov
or
lret
pusha
adc
xchg
xor
cmpsb
push
ds
push
xor
ss
cmc
lret
jno
cli
add
adc
out
rorl
and
movsb
in
push
dec
int3
or
xor
js
mov
xor
add
jg
pop
pop
fisubrs
push
fildll
sub
pop
int3
movsl
icebp
ss
push
ss
xor
jae
hlt
rorb
les
imul
ss
push
out
arpl
out
scas
adc
adc
fs
ds
mov
ret
sahf
lcall
addb
or
and
std
pop
jo
arpl
cmpsb
pop
mov
push
fistpll
inc
mov
mov
or
test
pop
enter
inc
lods
int
sbb
roll
pop
stos
xor
ljmp
sub
sti
push
dec
clc
xchg
fildl
fcomp
neg
ja
enter
cwtl
and
add
lcall
inc
inc
js
mov
adcl
ret
pop
push
fld
lock
cmp
fbld
mov
xchg
or
aad
ret
addr16
pop
xchg
jle
xchg
sbb
arpl
jns,pt
sbb
leave
jb
xor
lock
rcrb
rolb
and
add
cmp
jmp
int3
aam
dec
add
fisubrl
add
push
or
push
jb
or
test
out
shl
imul
add
cmp
js
xchg
cmp
fldenv
pop
fwait
sbb
enter
pop
push
cmpb
sub
outsb
mov
fcmovu
aaa
dec
movsl
pop
sbb
cmp
ljmp
ret
mov
and
sub
loope
inc
adc
mov
xor
jo
rolb
loop
mov
out
je
loope
add
ss
in
mov
pop
jmp
xor
sbb
leave
or
adc
sti
stos
out
sub
inc
out
arpl
cmp
outsb
outsb
stos
addr16
fs
jb
daa
push
rcrl
xchg
pop
lods
mov
stc
ret
or
xorl
jns
stc
icebp
movsb
rolb
div
inc
xchg
movsb
nop
xchg
idivb
inc
movsb
xor
shl
out
call
aad
sbb
inc
xchg
stc
xchg
daa
jae
out
or
lret
daa
enter
mov
imul
xor
movsb
int
in
jp
dec
sub
scas
push
jb
lea
daa
push
dec
divl
mov
xchg
mov
xor
jae
mov
sarb
std
in
mov
jb
divb
out
cmc
aad
sbb
in
test
jmp
std
sub
pop
lds
loopne
scas
or
testb
mov
in
fsubl
pop
cmp
inc
mov
leave
sub
and
je
mov
or
notl
sub
push
pushf
imul
mov
cmp
loope
and
je
gs
fiaddl
sbb
cmp
dec
and
jbe
dec
mov
in
js
cmpsb
jge
test
adc
lcall
pop
and
cmp
lahf
daa
out
repnz
dec
repnz
mov
imul
shlb
mov
jp
in
inc
push
fsubrs
inc
in
int
in
scas
rorl
inc
les
ljmp
repz
sub
filds
dec
xchg
cmc
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
repz
xor
add
xor
rolb
jmp
xor
neg
add
dec
dec
jecxz
sub
mov
dec
and
mov
loop
or
jl
test
inc
dec
jno
or
dec
fdivr
dec
pusha
loope
cmpsl
push
jb
push
cmpsb
or
in
ficompl
std
sub
dec
xchg
pop
sbb
mov
sbb
inc
fisttpll
jmp
icebp
sub
cmpsb
push
popf
stos
mov
mov
cli
dec
push
repz
les
or
cmp
sub
loop
pop
aaa
mov
mov
pop
jl
inc
js
or
movsb
loopne
cmpsl
outsl
dec
mov
and
incb
adc
aad
outsb
imul
and
jno
outsl
or
mov
pop
xchg
ja
stos
sub
xchg
std
push
mov
mov
pop
out
fcompp
mov
xorb
dec
flds
fists
aad
push
out
sbb
sahf
push
sbb
push
les
ds
xorb
jmp
test
mov
fadd
add
and
mov
popf
sub
jecxz
dec
add
add
mov
adc
mov
je
jne
mov
xor
sti
xchg
xchg
mov
mov
sub
pop
in
call
sub
dec
inc
mov
jnp
in
xchg
and
loope
fcomps
mov
fldcw
cmp
sbb
in
fs
loope
shlb
mov
loop
flds
adc
pop
xchg
xor
nop
int
xor
jnp
xor
mov
pop
rolb
push
bnd
or
fistpl
mov
dec
movsl
sub
repz
jns
ljmp
mov
mov
les
cmpsb
aaa
sub
inc
or
push
jg
dec
loopne
imul
jecxz
xchg
cli
lahf
mov
stos
pusha
sub
xchg
mov
push
sbb
outsb
push
lods
sub
jg
sti
xchg
xlat
les
popa
inc
fwait
xor
rcll
or
jns
mov
aad
push
stos
cli
pop
pop
repnz
sbb
jae
and
leave
shr
iret
push
in
clc
pop
cmpsb
and
rolb
in
lcall
int
pop
pushf
jo
out
lret
jge
cmp
push
fdivrl
scas
cs
popf
cltd
pop
cmpsb
stc
lcall
cltd
add
fsubrl
ja
movsb
jb
jecxz
stc
pop
jle
xchg
loope
test
test
lods
in
fwait
int3
xor
fmuls
mov
bound
jg
jecxz
cs
mov
or
jnp
fnstsw
mov
cld
jle
pusha
mov
and
xchg
jbe
add
mov
test
sbb
fisubrs
push
jo
mov
js
in
inc
and
andl
mov
int3
hlt
mov
mov
mov
push
in
sub
ds
sbb
sbb
and
scas
mov
rcrb
or
pop
inc
stos
mov
insb
jbe
mov
adc
sbb
sbb
add
sti
sti
rep
jg
aam
les
mov
and
sbb
iret
es
sub
add
popf
repnz
sub
inc
sarl
or
lret
mov
ret
das
clc
subl
loop
imul
add
stos
cmpsb
imul
add
out
addr16
xor
shlb
aam
mov
les
jo,pn
rcrl
push
scas
test
ror
cwtl
mov
repz
test
ds
nop
movsb
pop
int3
fdivrl
int
fsubs
push
add
sub
imul
subl
stc
xor
lahf
sub
mov
sbb
cwtl
xchg
dec
int3
or
addr16
cmp
and
insb
in
outsb
ja
push
es
jmp
sub
cmp
into
xor
inc
gs
cmpsb
lret
movsb
fstpl
push
cmc
lret
xor
push
movsb
xchg
pushf
push
add
icebp
mov
lret
cmp
mov
mov
xchg
add
pop
sub
push
in
fdiv
jae
lret
lock
imul
xor
dec
sti
sub
ret
mov
in
mov
inc
in
insl
das
jns
and
popa
stos
lcall
hlt
jmp
out
mov
es
lahf
das
dec
jg
enter
lahf
out
insb
mov
jb
and
jb
hlt
int
jno
lods
in
imul
push
test
cwtl
jae
push
std
data16
pop
xchg
inc
repnz
push
xchg
in
mov
stos
clc
addr16
sub
cmpsb
insb
filds
xchg
jno
data16
fisttpll
leave
add
jp
or
sbbl
mov
mov
pop
mov
pop
test
loopne
push
mov
lock
leave
mov
mov
pushf
cmc
movsl
mov
mov
in
jmp
das
jae
mov
mov
push
cmp
push
xchg
cmp
xor
inc
inc
cwtl
dec
lret
push
mov
arpl
jmp
es
inc
mov
popf
in
mov
cmpsl
push
sahf
dec
in
lret
jo
sbb
mov
push
push
movsb
mov
add
cmc
mov
ja
mov
mov
pop
mov
das
mov
loopne
add
sbb
sti
into
fucomip
cld
test
pop
imul
rol
and
and
movsl
aaa
in
fcmovbe
sub
jp
xlat
push
cmpsl
scas
pop
xor
mov
shlb
lea
inc
fists
bound
xor
pop
dec
pop
xorl
imul
jo
inc
mov
dec
jl
sbb
jne
cmp
push
and
cltd
and
hlt
es
aaa
push
ja
ds
iret
ja
outsb
sbb
in
push
in
ret
shll
std
mov
ds
sub
xchg
and
adcl
idivb
and
enter
cmpsb
pop
xchg
insb
and
push
rolb
or
mov
dec
pop
mov
inc
jb
test
mov
dec
sub
shll
dec
push
aad
xchg
arpl
xchg
push
adc
pushf
subl
mov
or
pop
dec
mov
insb
jmp
xor
orb
lea
push
test
idivb
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
mov
add
xor
sarl
repnz
dec
dec
inc
out
pop
cwtl
jb
adc
out
mov
les
dec
lods
sbb
sub
sbb
hlt
or
xchg
pop
int
into
lea
pop
xchg
ret
in
xor
mov
shl
mov
imul
cmp
inc
xchg
int
xor
xor
mov
mov
mov
xchg
and
loopne
push
pop
sahf
pop
dec
loope
lods
mov
push
ljmp
fisttpll
or
cltd
stc
or
push
nop
mov
push
mov
jle
and
dec
mov
in
cmpsb
add
adc
push
xchg
leave
fildl
jl
aaa
fadd
mov
aad
int3
loope
popf
mov
mov
pop
jae
add
mov
addr16
sbb
repz
xor
push
daa
aam
push
and
pop
mov
xchg
adc
pop
and
mov
hlt
aad
test
xchg
cmp
lock
mov
sub
push
pop
xor
daa
xlat
inc
mov
or
push
enter
cwtl
inc
fidivrs
mov
test
sub
add
mov
fidivrs
out
fbld
push
xchg
icebp
iret
lret
xchg
push
jns
lods
in
f2xm1
xor
fists
xlat
sbb
add
xor
push
popf
inc
push
movl
call
ror
mov
adc
cmp
sbb
sub
push
jae
xchg
aad
lret
jo
fstp
arpl
adc
fdivr
ret
xchg
sbb
outsl
push
out
mov
ficoms
and
mov
add
out
xchg
test
loope
push
dec
mov
mov
mov
mov
icebp
pop
sub
mov
xor
mov
insl
push
fists
in
scas
add
pop
sbb
jo
setge
dec
xchg
adc
adc
mov
mov
lahf
int
mov
push
xor
cld
jns
bound
mov
dec
mov
sbb
mov
out
adc
call
bound
jp
push
shlb
outsb
pop
add
sahf
fwait
loope
ss
ds
jno
lds
cltd
push
mov
rclb
push
pop
cmpsb
fldenv
lods
cmp
jae
mov
lods
into
cwtl
loope
cld
push
pop
xorl
jl
mov
std
lea
adc
int
cmp
jmp
scas
pop
loopne
rolb
inc
out
sbb
movsl
repnz
add
xchg
pusha
out
sbb
xor
sbb
mov
jae
xchg
push
cmpsb
xchg
cmp
cld
push
in
push
adc
rcrb
pop
sbb
xor
xchg
loope
adc
jae
cmp
push
ficoms
sub
inc
push
mul
insl
inc
outsb
out
addr16
cltd
xor
push
into
jbe
mov
movsl
movsb
out
pop
add
pop
aas
imul
sar
jmp
xchg
mov
hlt
imul
push
add
dec
cmpsl
faddl
jb
bound
ret
dec
frstor
push
xlat
scas
out
pop
xor
or
hlt
pushf
clc
test
cmp
jle
les
in
sbb
out
xor
mov
es
jo
mov
sbb
xchg
fsts
push
sub
jge
pusha
lds
je
call
imul
cltd
sbb
test
fcoms
add
sahf
pusha
idiv
add
cmp
fnstenv
cltd
test
mov
paddusb
mov
mov
fimuls
sbb
xor
das
outsb
xchg
mov
inc
decl
repnz
popa
or
and
mov
add
cmpsb
pop
push
or
outsb
stos
insl
mov
xor
xchg
push
int
leave
pushl
lahf
aaa
rorb
sbb
pushf
jecxz
push
or
pop
cmpsb
aad
lret
mov
movb
mov
push
mov
dec
cmpsb
mov
js
adc
stos
jmp
pop
into
mov
outsb
and
lret
mov
dec
cltd
sbb
jecxz
std
jnp
repnz
adc
add
inc
mov
or
fildl
or
dec
movl
mov
add
add
mov
enter
lods
mov
xor
loopne
inc
gs
push
sti
out
and
cmp
dec
outsl
test
pop
insl
mov
stos
stc
in
sub
cli
or
or
mov
xchg
lahf
into
pop
ja
cs
out
cwtl
and
sbb
orb
and
out
pushf
add
push
imul
inc
and
sbb
fsubs
repz
test
sub
nopl
push
xchg
data16
inc
ja
dec
icebp
mov
dec
xchg
lahf
jne
das
inc
inc
inc
xchg
push
adc
scas
push
cli
push
dec
in
fidivs
ljmp
sub
mov
fstpt
popf
cltd
or
je
bnd
mov
adc
repz
aaa
push
lea
or
js
pop
inc
and
xchg
jge
jl
fistpl
ljmp
fdivl
js
mov
jo
das
ficoml
adc
sub
lcall
add
dec
xchg
int3
imul
sub
ret
pusha
sub
in
addb
arpl
cmp
pop
in
pop
loopne
jbe
mulb
mov
xor
or
imul
mov
movsb
lods
fcomps
mov
outsl
aam
add
jns
clc
inc
inc
mov
mull
lods
out
push
dec
movsb
mov
pop
cmp
loope
dec
adc
mov
push
sub
fldenv
inc
sbb
jbe
outsl
adc
hlt
or
aam
xchg
ffreep
jmp
jo
sbb
out
push
jg
mov
mov
repz
mov
jle
push
pop
aas
xchg
dec
lcall
sti
jnp
fistps
pop
sti
mov
mov
call
dec
les
movsl
pop
jge
inc
std
popl
or
mov
call
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
inc
adc
stos
pop
add
jb
sub
flds
bound
test
xchg
ud0
cmc
mov
aad
insb
lahf
iret
xor
clc
clc
and
dec
push
out
lret
jp
lea
jno
je
jp
dec
clc
xlat
mov
inc
ljmp
mov
or
stos
in
mov
xor
repnz
adc
minps
add
lret
in
enter
push
lock
sbb
fsubrl
out
je
movntq
cld
xchg
imul
enter
xchg
int
mov
mov
lcall
dec
mov
dec
and
les
mov
js
mov
inc
push
xor
cmp
testl
pop
scas
sti
pop
cmpsb
rorb
jno
loope
test
jl
and
xor
lea
mov
js
cld
pop
dec
imul
rcrb
flds
scas
cmovb
xchg
fcomps
stos
xchg
or
push
cmp
std
and
jno
out
inc
add
push
loopne
call
inc
rcl
dec
fbstp
popf
sub
lds
cmp
mov
sbb
stos
lea
xchg
jns
das
rclb
push
stos
mov
mov
mov
dec
sub
cmpsb
sbb
pop
adc
xchg
adc
xchg
adc
daa
and
xor
out
cmp
inc
ret
std
in
mov
jle
add
shlb
inc
xor
les
mov
inc
inc
insl
dec
cmpsl
cld
pop
or
sub
test
pop
loope
ficompl
loope
bound
fsubl
mov
jnp
sbb
test
and
sub
pop
add
inc
in
or
mov
sub
sub
clc
adc
adc
push
stc
push
shlb
ss
movsb
call
cmp
sub
jecxz
mov
out
adc
mov
lods
enter
xor
sub
fistps
inc
fs
and
cli
popa
dec
xor
pop
les
rolb
jmp
setl
mov
outsb
xchg
pop
lret
mov
out
mov
pop
sbb
push
lds
dec
repnz
fs
lret
sbb
and
in
dec
mov
incb
inc
sub
push
cmp
mov
or
dec
rcll
push
scas
outsl
or
xlat
mov
mov
cmpsl
mov
mov
ja
add
push
fnstsw
and
insl
mov
pop
out
pusha
out
jl
loopne
movsb
adc
repz
cmp
add
push
enter
sbb
test
lret
jns
aad
icebp
shll
rcl
mov
dec
pop
push
mov
sbb
js
add
nop
dec
add
or
xor
mov
fstpt
adc
xor
sub
dec
jl
loop
in
call
or
in
mov
mov
movl
test
sbb
and
das
xor
and
mov
jo
out
scas
and
in
inc
jl
jae
into
xchg
dec
mov
dec
inc
xchg
mov
out
xchg
cltd
inc
repnz
cmp
bnd
cmpsl
add
fcoml
movl
jle
popf
mov
xchg
lea
cli
sarl
xchg
loopne
xchg
cltd
std
add
loope
rcl
or
aaa
ljmp
push
and
xchg
push
mov
mov
lea
push
dec
repnz
jp
std
es
sbb
or
enter
push
enter
xchg
or
push
sbb
in
or
out
xchg
out
add
or
lea
add
inc
dec
outsl
call
mov
dec
mov
cwtl
pop
mov
fnstenv
jne
mov
sub
test
mov
iret
push
pop
cmp
mov
push
inc
pushf
mov
xor
jmp
rcrb
aas
xlat
jge
adc
sub
cs
mov
fs
daa
ljmp
jp
es
call
mov
popa
push
inc
inc
sti
sbb
xchg
out
pop
and
mov
mov
adc
xor
add
icebp
aaa
push
jp
cwtl
xchg
into
jo
inc
push
mov
cmp
pop
popa
es
flds
pusha
stos
or
lcall
mov
add
jle
and
lock
sti
call
pop
mov
cwtl
jp
or
movsb
mov
pop
lcall
mov
aad
dec
shll
insl
sbb
fnstsw
sbb
adc
ret
sub
sub
xchg
jbe
or
adc
div
push
push
push
push
mov
jl
mov
adc
mov
jmp
push
mov
test
dec
lea
rcrb
loope
mov
mov
mov
inc
movsb
mov
ficoml
sbb
leave
xlat
inc
inc
cmp
lods
popf
mov
jns,pt
lds
or
scas
mov
dec
sbb
pop
and
sbb
push
fidivs
mov
add
stos
lret
pop
mov
scas
push
sub
cmp
into
shrl
jb
cmpsb
mov
push
sub
mov
clc
mov
xlat
les
mov
add
pop
test
inc
sar
mov
jb
lock
adc
adc
sahf
lahf
add
incl
push
xor
scas
test
xor
xchg
mov
adc
xor
cmp
scas
rcr
push
jmp
xchg
cwtl
aas
andl
or
add
adc
mov
mov
add
cmp
test
aaa
loope
mov
adc
nop
jns
xor
movsb
mov
pop
pop
test
mov
lods
mov
aad
jge
sbb
push
imul
add
xor
ret
aaa
ja
jp
lods
xchg
popf
call
dec
jg
mov
in
outsb
int3
enter
mov
sbb
iret
adc
xchg
add
xchg
cld
cmpsl
jae
imul
mov
pop
cmp
shlb
jo
pop
insl
in
push
dec
adc
enter
enter
cwtl
data16
clc
inc
shll
xlat
adc
out
gs
rclb
and
xchg
mov
sbb
cmp
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
enter
push
add
cltd
loope
loop
mov
in
push
add
xchg
aas
fdivs
sub
pusha
sbb
fimull
js
mov
or
subb
ja
xchg
pop
lret
inc
movsb
push
lock
shrb
inc
out
popf
cltd
pop
push
xlat
fcomps
loope
inc
fbld
and
inc
dec
shrl
test
nop
jne
insl
push
mov
lahf
dec
data16
dec
mov
cmpsb
and
lock
js
push
rcrb
push
jno
cmpsl
push
mov
sub
jae
pop
es
imul
addr16
sub
fadds
sbb
call
sub
mov
lods
jne
mov
push
call
clc
add
ja
inc
pop
pop
jns
scas
std
pushf
mov
out
dec
idivl
push
mov
js
mov
and
sti
dec
cmpsb
jp
or
pop
add
das
pop
jecxz
push
add
pop
repnz
lods
inc
es
push
mov
cltd
sarl
xchg
adc
icebp
add
adcl
dec
addr16
jge
push
call
mov
ljmp
dec
jg
pop
jl
mov
sub
xor
jno
addr16
lock
add
into
pop
movsb
pop
icebp
or
std
add
xlat
dec
or
inc
pop
lahf
repz
mov
pop
mov
ret
mov
mov
cld
orb
movsl
pop
insl
in
sahf
mov
leave
lret
rcrl
and
dec
lahf
lods
pushf
or
ret
xchg
pop
mov
xchg
pop
jl
popf
pushf
ljmp
dec
ljmp
int3
push
sbb
ret
or
iret
jne
lds
test
add
push
ret
xchg
lock
lea
test
jmp
push
imul
sbb
les
cwtl
ret
mov
jle
cmpsl
push
jnp
pop
out
std
sbb
test
adc
mov
aad
not
inc
add
filds
pop
sub
dec
dec
outsl
pop
mov
sub
mov
inc
add
sub
std
dec
fiadds
js
popa
in
bound
sub
dec
mov
xchg
jo
into
sub
mov
into
xor
rcl
and
push
pop
pop
lea
loope
jg
dec
aam
fstl
xorb
sub
add
dec
fdivrs
mov
jg
jmp
cld
call
loopne
cmp
jbe
jno
push
push
filds
int
mov
jp
push
xor
shlb
das
jns
xor
dec
add
aam
nop
sub
incb
in
pushf
clc
ds
adc
dec
mov
dec
xchg
ret
xchg
cmc
xchg
jne
xorl
add
popf
in
sub
negl
mov
rcl
or
mov
ret
popf
xchg
out
nop
xor
dec
repz
inc
sti
test
xchg
dec
and
jae
scas
test
sti
fadd
outsl
mov
add
push
sbb
and
mov
nop
orb
adc
mov
mov
pop
scas
inc
or
aaa
jnp
mov
fcmovne
and
mov
jo
dec
movsb
xchg
xchg
mov
outsl
int3
cltd
sarl
lock
mov
andl
cmp
clc
dec
jl
jae
gs
lret
cmp
push
sub
int3
pushf
lock
popa
push
insb
xchg
stos
jae
fwait
mov
fs
jle
pop
pop
mov
add
xchg
mov
push
dec
xor
adc
xor
mov
xlat
pop
int
stc
popf
and
dec
lcall
cmpl
out
inc
mov
hlt
push
pop
mov
mov
sub
lret
push
and
pop
jo
rcll
mov
jmp
push
jle
dec
pop
jl
xor
daa
das
mov
clc
lret
daa
push
ret
xchg
loopne
daa
mov
mov
jg
sarl
xchg
add
cli
mov
movsl
and
adc
jecxz
mov
jno
lret
jl
popa
fisubrs
mov
add
aad
stc
pop
fldt
call
fistps
hlt
sub
jmp
dec
cli
andl
push
add
ret
in
adc
inc
cmp
or
leave
stc
sbb
cmc
dec
loope
mov
popf
imul
jo
xchg
minps
mov
mov
cmp
add
lret
frstor
inc
add
push
cmp
mov
mov
addb
je
je
xchg
xor
pop
jns
imul
in
decl
inc
and
aas
in
sbb
push
mov
push
dec
xchg
mov
jle
sub
fisubrl
jmp
push
jo
mov
push
adc
subl
or
push
add
inc
jno
or
cmpsl
xchg
aam
adc
aas
lret
test
rcll
out
dec
pusha
popf
lahf
outsb
sbb
jle
mov
pop
pusha
mov
inc
push
imulb
lock
dec
cmp
dec
shl
and
mov
jl
adc
add
jmp
nop
jle
in
cli
xchg
xchg
fwait
lret
dec
jnp
mov
push
add
inc
dec
mov
xchg
cwtl
adc
subb
xchg
jae
jbe
adc
dec
nop
clc
sahf
outsb
insl
jmp
mov
decb
jbe
xchg
out
repnz
push
cmc
mov
rclb
and
pop
frstor
sbb
sarb
out
mov
push
bound
cltd
sahf
xchg
test
jecxz
lods
mov
pusha
mov
inc
adc
cmp
inc
xchg
and
ja
test
jno
mov
popa
push
add
push
cmpl
jecxz
divb
ss
mov
pop
dec
iret
adc
and
shlb
ss
pop
lock
out
cmp
in
aam
xchg
adc
cmpsl
shl
jmp
sbb
fsubrs
pop
outsb
in
lods
or
pop
enter
inc
jl
add
sbb
movsl
loopne
jle
cwtl
jg
subl
push
mov
hlt
leave
data16
shrl
xchg
sub
test
cltd
ss
pop
sub
push
pusha
addb
imul
pop
xlat
push
stos
fwait
mov
adc
pop
roll
in
jl
lea
inc
rolb
xor
lods
xor
mov
arpl
sbb
or
sbb
inc
pop
sub
test
xor
scas
loope
mov
jbe
and
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
adc
xchg
push
add
shlb
push
ficomps
fadds
addr16
push
push
mov
call
test
push
sub
jmp
jns
adc
cmp
xchg
aam
pop
test
jl
mov
adc
js
xchg
lock
pop
or
popa
jg
sti
pushfw
sbb
jno
aam
or
test
xchg
jnp
sbb
xlat
cmpsb
icebp
imul
xchg
iret
or
sbb
arpl
mov
xor
mov
fildll
xchg
push
xchg
mov
jb,pn
clc
dec
lock
mov
dec
push
cmp
dec
sub
cmp
es
xchg
add
test
outsl
iret
repz
ficompl
repz
or
in
mov
mov
jl
cld
addr16
popa
xor
pop
in
adc
ret
pop
jmp
sbb
cmp
xor
dec
stc
inc
out
into
repz
pop
fcoms
inc
or
jmp
js
ds
nop
nop
insl
inc
out
test
mov
jnp
sti
repnz
add
mov
scas
jp
addr16
add
sarb
sti
sbb
mov
hlt
shlb
dec
lods
fs
sbb
inc
push
adc
das
and
loop
cmpsb
or
filds
lods
nop
frstor
or
pop
push
iret
int3
ret
xor
cwtl
adc
repnz
fdivrp
add
jnp
test
inc
cmp
mov
push
push
bound
das
dec
sar
dec
or
loope
fcompl
sub
mov
mov
xor
imul
mov
mov
xchg
cld
decb
add
je
xchg
sbb
push
sbb
gs
xchg
push
xlat
cmp
sarl
xchg
mov
pop
push
gs
xor
in
jl
scas
sub
je
push
divl
mov
add
push
or
jne
pop
out
in
mov
mov
dec
sbb
and
mov
sub
imul
xchg
loopne
push
lods
mov
sub
add
or
or
xchg
sub
repz
sbb
xchg
pop
cwtl
mov
sbb
add
stos
insb
movsl
mov
test
bnd
shll
jb
push
out
jns
icebp
out
mov
rcr
jle
mov
add
inc
test
push
je
mov
mov
je
stos
cmpsl
inc
dec
repnz
je
xchg
nop
test
and
xchg
jbe
inc
rolb
inc
in
rcrb
push
pop
sarb
jns
cmp
push
loopne
mov
sbb
in
sub
stos
dec
xor
scas
xchg
mov
adc
jns
mov
jo
inc
in
mov
aad
push
lahf
jno
jp
lods
test
adc
and
shlb
xchg
xchg
sti
adc
or
cld
cltd
inc
ljmp
dec
cmpb
test
xchg
push
jp
xor
jnp
and
pop
ret
clc
lcall
sbb
cmp
mov
fs
ret
jmp
xchg
int
int
xchg
mov
push
call
inc
inc
in
icebp
or
or
insl
rcll
sahf
aam
in
pop
ret
push
fwait
arpl
xchg
push
sub
and
add
ljmp
mov
repz
cmpsl
sub
in
xchg
shll
adc
movsb
cmc
out
adc
outsl
mov
sub
in
sbb
dec
fs
add
cmc
out
addb
pop
xchg
push
mov
mov
cs
cmp
imul
cmpsl
movsb
js
cmp
xchg
dec
bound
cld
dec
ja
pop
test
cmc
notl
jp
iret
push
push
test
lcall
lods
jnp
sub
lcall
mov
frstor
mov
sbb
sub
cmpsl
dec
adc
mov
out
repz
cmc
out
jecxz
sbb
jno
in
ds
sbb
ss
cmp
in
idivl
xchg
aad
and
mov
int
loop
js
int
jnp
cmp
les
cld
jecxz
push
idivl
ljmp
sbb
inc
arpl
and
ret
mov
hlt
cs
add
pop
mov
in
stc
mov
loope
cmp
cmp
gs
les
xchg
or
popf
aam
push
in
cld
ret
mov
clc
jecxz
sbb
jns
pushf
aam
push
add
jae
lea
ljmp
sbb
push
adc
push
sub
cmpsl
bound
fnsave
cltd
dec
mov
push
sti
push
jnp
loopne
movl
out
xchg
cld
js
mov
mov
dec
xchg
cmp
int3
dec
xor
das
jmp
int3
or
pop
out
scas
neg
or
jmp
mov
jb
jg
rolb
sub
outsl
movsb
sub
or
fists
or
sbb
loopne
sub
jnp
pop
mov
dec
loope
push
imul
sbb
imul
iret
es
sub
push
sub
test
xlat
fisubrl
sbb
jp
cmp
push
pop
test
xchg
mov
push
mov
test
jp
mov
cmp
push
xchg
fs
sub
or
cwtl
push
mov
xor
inc
es
mov
jns
xchg
loopne
in
push
mov
jmp
or
adc
xchg
call
push
inc
add
leave
mov
and
repnz
lret
aaa
or
lock
mov
push
and
bound
jb
ss
mov
mov
add
mov
mov
mov
icebp
hlt
xchg
sub
lret
rclb
mov
cld
js
adc
adcl
sub
fldl
adc
sub
dec
dec
in
cli
mov
xor
aad
roll
js
jo,pt
lock
dec
cmpsb
daa
cmpsl
push
sub
icebp
hlt
arpl
jg
iret
add
das
mov
xor
sarb
sbb
mov
outsb
enter
ret
jnp
cmp
or
inc
imul
js
ficompl
mov
in
or
cli
add
mov
dec
rorb
arpl
inc
ror
dec
mov
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
add
add
aam
and
pop
movsl
sbb
cwtl
sbb
xchg
jge
data16
or
in
sbb
push
mov
and
cmpsl
clc
aas
aad
jae
pusha
mov
xor
mov
imul
adc
cs
add
dec
jle
ja
sub
xchg
mov
pop
ljmp
mov
jecxz
cmpsl
fs
pop
in
ret
jnp
shr
leave
mov
ja
fs
cmpsl
lea
aas
add
mov
cwtl
sbbl
sbb
in
cmp
icebp
imul
cmc
pop
xchg
or
sbb
sub
int3
inc
insl
dec
jns
daa
sub
mov
gs
fwait
shl
mov
add
push
cmp
mov
inc
add
pop
push
sbb
jbe
je
pop
test
ss
mov
in
adc
pusha
arpl
lcall
xor
ficoms
and
pop
cltd
fcoml
cs
lret
mov
xchg
ljmp
orl
loopne
addr16
stos
sbb
mov
dec
frndint
pop
jns
push
adc
jbe
popa
push
jmp
dec
jp
adcl
mov
push
and
mov
repnz
sub
pop
jge
es
push
mov
xchg
ljmp
pop
aam
pop
bound
add
sti
add
jg
pop
leave
fwait
lahf
insb
and
loopne
ficomps
std
in
daa
loope
mov
daa
test
cmp
jp
push
sub
dec
jmp
sbbl
jl
sub
pop
or
jno
push
or
loope
cld
cltd
imul
test
aaa
add
popa
call
out
mov
fdiv
push
dec
mov
xor
mov
push
loope
or
push
out
popf
pop
and
das
dec
jnp
mov
lgs
xor
rclb
jl
pop
lcall
test
xor
stos
mov
jo
frstor
cmp
mov
xchg
gs
stc
pusha
jmp
call
jbe
add
shr
mov
repz
push
lods
jg
mov
xchg
sbb
cmp
into
in
test
mov
mov
mov
xor
mov
jbe
fstpt
add
and
aad
add
jb
sbb
fcomp
lret
fmull
je
fidivl
cmp
in
adc
loope
inc
jl
fcoml
in
cld
jo
xor
in
or
or
pop
adc
fldl
dec
xchg
call
mov
les
lods
pop
ss
mov
mov
sbb
inc
pushf
arpl
push
xor
daa
jmp
movsb
loopne
mov
push
aas
decl
call
iret
mov
mov
and
stc
add
push
sbb
pop
and
pop
or
movsb
test
cmp
push
int3
mov
pop
mov
dec
adc
enter
scas
inc
pop
mov
dec
mov
insl
fcomip
mov
jl
hlt
sbb
lret
push
aaa
jo
cmp
xor
xor
xchg
push
sbb
mov
jle
fwait
inc
in
ds
das
sarl
xor
push
int
ret
decb
ret
sbb
sbb
leave
mov
inc
adc
inc
in
jbe
cld
imul
jg
xor
shlb
and
pusha
dec
and
adc
iret
inc
fsubrs
mov
push
nop
adc
cmp
add
imul
stos
ret
mov
hlt
cld
fs
pop
jp
xchg
pop
jbe
and
popa
sti
cld
sbbl
dec
jb
mov
or
ss
sub
mov
cmpsl
mov
fcomp
pusha
cmp
xchg
cmp
sub
cld
inc
xor
lock
sbb
icebp
pextrw
test
rcrb
jae
xor
pushf
adc
hlt
push
push
jne
bound
inc
mov
or
inc
cmpsb
insl
jbe
adc
rclb
dec
jecxz
jecxz
pushf
test
inc
add
and
jge
repnz
jbe
mov
mov
push
cmc
mov
mov
or
inc
pop
jl
mov
aam
dec
xchg
xchg
and
scas
push
pop
pop
mov
dec
dec
std
push
movsb
stc
out
gs
xor
xorb
push
lock
push
mov
es
lret
iret
adc
mov
loopne
mov
shl
loop
pop
pop
jns
sbb
sub
jno
and
pop
adc
repnz
pop
mov
or
push
or
inc
fs
outsb
out
pop
ret
pop
sub
adc
adc
mov
lret
add
sub
out
ja
xor
out
movsb
out
push
xchg
xchg
sub
fnsave
mov
andl
push
testl
push
rcr
or
and
dec
fdivrp
repnz
test
call
jns
adc
ret
repz
pop
ja
and
shrl
sub
hlt
test
stos
pop
js
mov
sbbl
and
ret
stc
cltd
stc
popf
leave
stos
jecxz
outsl
sbb
cmpsl
cmc
mov
push
scas
pop
jp
mov
pop
loope
xchg
repnz
sbb
mov
jns
mov
lods
lret
push
xor
out
loope
add
jl
pop
jo
fwait
jge
shll
push
fimuls
es
adc
in
pushf
push
mull
test
jg
pop
xchg
push
adc
dec
push
cmp
inc
push
push
or
jne
sbb
aad
xor
scas
pop
add
pop
mov
mov
add
jmp
sbb
dec
jbe
shrb
cmc
inc
push
and
mov
add
movsb
lods
int3
ret
addb
cmp
xor
push
cli
jl
mov
fistpll
or
scas
and
fs
int3
add
outsb
or
jge
aas
jmp
xchg
repz
clc
cmp
xchg
lock
addb
lcall
out
fmuls
cmpsl
or
imul
pop
mov
sub
add
rclb
sub
jmp
xlat
sbbl
dec
adc
js
mov
shlb
in
inc
jmp
mov
fiaddl
stos
push
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
mov
add
xor
sbb
inc
call
cmp
lods
lds
out
test
out
in
mov
xchg
popf
int3
repnz
add
mov
mov
xor
movsl
cmp
jne
pop
lock
cmp
ja
repz
push
ds
jecxz
test
jg
pop
jecxz
push
mov
mov
test
vaddsubps
add
cld
fbstp
in
out
add
js
out
adc
leave
jecxz
xor
mov
mov
scas
popf
stos
sbb
cmp
clc
ret
outsl
arpl
outsb
pop
movsl
inc
lret
std
jmp
or
lods
hlt
out
push
stos
adc
aam
adcb
dec
ficoms
ss
sbb
inc
test
pop
call
ss
cmpsl
mov
jl
jp
sbb
push
sahf
mov
push
jp
lret
addr16
inc
jmp
jle
cli
stos
adcb
cmp
push
mov
or
lea
xor
imul
push
mov
mov
jle
jg
out
pop
fcoml
lahf
xchg
jbe
pop
mov
data16
std
xchg
or
sbb
lods
mov
mov
xchg
cs
push
inc
inc
xor
xchg
addb
mov
pop
test
push
or
ror
cmp
int3
sarl
inc
fdivl
loopne
push
cmp
push
sbb
mov
xor
adcl
sbb
int3
stc
add
mov
cwtl
xor
enter
mov
dec
shrb
inc
jg
push
adcb
mov
xchg
or
pop
push
or
std
test
or
jno
cmp
adc
inc
sarl
push
xor
and
into
or
dec
in
out
cmp
adc
mov
jmp
test
jnp
and
inc
outsb
sub
mov
mov
xchg
adc
inc
inc
xor
jp
mov
mov
add
test
les
add
push
cmpsb
dec
mov
jne
fcompl
loopne
mov
push
dec
aaa
insb
icebp
out
xchg
mov
xor
fdivl
lods
and
push
adc
shrb
jp
push
jmp
mov
shll
imul
cli
mov
into
insl
xor
mov
fs
lret
mov
test
mov
rcrl
fiadds
add
sbb
addr16
mov
or
cmp
mov
pop
cmpsl
pop
push
mov
inc
in
adc
rcl
in
sbb
and
pushf
lea
inc
inc
xchg
test
inc
popa
sbb
push
fwait
pop
jb
repnz
ss
sbb
jmp
pusha
imul
test
xor
xor
xor
jmp
sub
pop
aaa
into
mov
fildl
dec
in
mov
cltd
addb
gs
test
ljmp
dec
hlt
aaa
inc
in
pop
inc
pop
test
lock
in
in
and
test
cmpsl
sbb
and
scas
ds
arpl
dec
jp
mov
mov
scas
or
or
rclb
cmp
insl
pop
dec
ss
push
int
xchg
xchg
sbb
sub
ds
add
jecxz
in
add
in
sub
cmp
add
inc
sbb
push
mov
repz
lods
stos
in
lret
mov
jbe
cmpl
repz
push
aas
jl
scas
inc
mov
push
rolb
stos
add
std
xchg
lock
fidivrl
call
jle
scas
sbb
cs
sbb
int3
or
dec
flds
sub
pop
rcll
sub
pop
cmp
dec
inc
sub
mov
test
push
jl
pop
bound
pop
or
stos
pop
mov
in
adc
xchg
aas
fst
cmpl
jmp
ljmp
xchg
mov
nop
ret
sub
and
xchg
sub
and
inc
icebp
xchg
inc
pop
pusha
flds
lods
mov
stos
loopne
lahf
aad
jl
jp
pusha
fisubl
mov
mov
dec
push
pop
pop
call
into
scas
mov
push
jnp
xchg
cltd
pop
add
mov
addb
hlt
xchg
sbb
cwtl
icebp
rolb
mov
sbb
fsubp
icebp
or
imul
fldpi
mov
idivl
xchg
fs
jnp
push
add
pop
mov
push
xchg
xor
sbb
gs
sahf
push
or
inc
mov
mov
add
call
ljmp
test
xchg
rclb
and
add
mov
dec
fcmovnbe
lea
push
shlb
cs
bound
out
mov
and
pop
dec
fsubrl
jnp
mov
mov
in
fnsave
xorb
mov
repnz
pushf
push
pop
shll
dec
cmp
mov
into
hlt
jae
pop
mov
stos
or
test
cs
mov
rcll
dec
push
adc
xor
jns
gs
mov
jp
fidivrl
and
push
mov
div
out
call
pop
ss
jne
es
enter
mov
and
popa
lahf
cld
dec
std
mov
mov
cmp
inc
cmp
or
gs
xchg
xor
cli
out
cld
arpl
leave
pop
sub
xor
pop
cwtl
gs
xchg
or
jg
repnz
repz
fstl
lods
in
data16
call
xchg
add
mov
xor
lcall
dec
repnz
repz
pop
fsubrl
jmp
sub
movsl
faddl
das
push
fwait
xor
jecxz
lcall
movsl
sahf
ljmp
push
jg
push
repnz
xchg
loope
das
push
int
dec
inc
mov
dec
gs
push
mul
stos
inc
bound
outsl
adc
sbb
inc
addr16
outsl
scas
pop
mov
repz
bound
je
lods
jnp
mov
adc
hlt
aaa
adc
dec
shll
xor
inc
sub
xor
es
in
and
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
mov
xchg
jg
add
push
les
dec
cmp
scas
cmp
dec
scas
shl
jecxz
pop
push
sbb
mov
pop
jnp
lock
rolb
lea
mov
loop
cmp
loop
test
add
adc
fld
outsl
in
sti
mov
mov
pop
mov
sbb
fs
fwait
sub
or
adc
out
dec
add
mov
inc
add
dec
mov
in
fsub
mov
hlt
insl
fistpl
je
pusha
or
rolb
and
and
rcrl
cmp
sbb
sub
pop
sub
arpl
stc
mov
xor
cmp
popa
pop
aam
push
sbb
cmp
js
mov
in
push
jns
stos
jge
repnz
or
xchg
into
push
lret
or
mov
adc
and
adc
sub
dec
pop
mov
addl
inc
sbb
in
xchg
dec
add
inc
and
add
imul
cli
scas
push
or
test
push
sarb
cs
pop
in
aas
mov
mov
sahf
xchg
loope
cmp
xor
mov
add
ss
or
mov
pop
clc
cli
pop
ds
adc
adc
add
stos
insl
jne
pushf
iret
loop
test
daa
sub
add
fstps
das
fiadds
adc
fsubp
in
inc
enter
inc
mov
xchg
or
sar
xchg
push
test
lods
testl
cmc
jmp
add
sahf
into
jecxz
test
clc
mov
inc
mov
mov
test
and
jbe
mov
cvtdq2ps
xor
add
fadds
xchg
sbb
mov
xor
mov
je
fdivrl
inc
in
mov
rcrl
mov
sti
xchg
inc
outsl
sbb
xchg
xchg
icebp
movsl
push
stos
loope
cmp
aas
ffreep
add
sbb
cld
pop
xorb
dec
push
dec
push
mov
bound
cs
pop
xor
aaa
mov
dec
sub
stos
arpl
enter
jo
mov
pop
mov
out
xor
enter
cs
xchg
cmpsl
jmp
idiv
pop
out
push
inc
sub
test
in
cmp
pop
ficoms
pop
mov
call
scas
adc
sub
xchg
jns
push
insl
xchg
addr16
inc
mov
or
ds
mov
mov
and
adc
cmpsb
mov
inc
lock
aam
sarl
das
popa
cmp
mov
push
mov
fs
data16
out
sbb
mov
add
fdivl
movsb
sub
iret
cmp
jne
ljmp
and
mov
xchg
xchg
ljmp
dec
or
and
ret
dec
mov
xchg
sbb
sarl
push
scas
decl
mov
mov
aam
mov
ficompl
dec
xor
cmp
jae
cltd
xchg
pop
jmp
push
shrl
aaa
testb
push
mov
stc
imul
leave
out
int3
xchg
lcall
inc
notb
leave
je
outsl
outsl
adc
rcrl
es
outsb
pop
mov
xor
and
movsl
cmp
mov
inc
fwait
test
push
arpl
jmp
lret
sbb
addl
scas
scas
inc
ret
lret
test
pop
jb
ret
jg
daa
arpl
lock
xchg
nop
in
push
inc
out
mov
dec
rolb
paddb
xchg
push
cmpsb
and
dec
ljmp
xchg
repnz
mov
cmp
lds
xor
push
cmp
into
int
mul
jne
lahf
pop
adc
jge
adc
cmp
mov
inc
lcall
or
stos
daa
dec
cltd
cltd
int
insb
inc
mov
mov
push
dec
bound
mov
mov
in
popf
xchg
sub
sub
insb
mov
mov
dec
ret
mov
das
xchg
fs
shrl
pop
pop
out
sbb
pusha
hlt
mov
jns
in
push
shl
scas
inc
lcall
mov
fiadds
popf
ljmp
dec
jnp
fwait
jmp
popf
mov
or
and
outsl
dec
aaa
sub
jne
xchg
insb
gs
and
jbe
or
cli
rorl
popf
xchg
bound
mov
mov
ret
cmpb
xchg
enter
insb
push
cmpsl
and
jo
movsb
xor
idivb
sbb
xchg
adc
cmc
jae
or
dec
loop
push
adc
mov
mov
std
cmp
aaa
hlt
gs
or
pop
lahf
xlat
pop
lcall
jle
xchg
rcll
push
sub
mov
cs
or
adc
add
cmp
lods
mov
or
mov
out
lods
sub
lock
ficoml
xor
pop
lock
inc
jnp
push
cld
mov
sbb
and
popl
call
and
mov
mov
pop
xlat
push
pop
das
out
movsb
test
jbe
popa
sbb
stos
push
insb
xor
outsb
push
pop
inc
leave
pop
adc
dec
rorb
mov
cmp
jmp
add
xchg
mov
pop
out
inc
arpl
xchg
xchg
sub
pop
std
loop
outsb
jne
mov
jno
lods
ss
imul
fcom
aad
shlb
xlat
int
push
stos
push
nop
sub
push
xchg
loopne
enter
dec
ja
iret
in
frstor
loop
push
sub
pop
mov
ds
sub
mov
fidivrl
and
mov
cli
jne
out
fidivrl
cli
subb
mov
rep
testb
xchg
push
cmp
pxor
mov
jbe
test
in
fnstenv
pop
push
roll
lock
cmpsb
je
push
loope
fwait
data16
cmp
add
cmp
popf
aad
stc
ret
pop
xchg
cmp
jge
int3
or
xor
imul
mov
shrl
imul
add
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
movb
add
in
sti
sbb
popf
add
scas
pop
js
lret
outsb
pop
frstor
push
in
xchg
dec
jns
jbe
pushl
addr16
push
pop
jnp
test
add
mov
sbb
movsb
mov
stc
lods
or
arpl
inc
out
mov
cmp
cld
cli
mov
scas
arpl
test
sub
sti
add
imul
mov
es
ss
dec
adc
repz
pop
jnp
fwait
addr16
pusha
add
mov
insb
jnp
pminub
pop
sub
mov
cmpsl
pop
jns
mov
iret
sub
icebp
shll
scas
mov
nop
mov
xlat
inc
mull
mov
add
jge
mov
jmp
sub
dec
popf
xor
pushl
jnp
sbb
mov
subb
rcrb
gs
popa
je
sti
call
dec
cmp
sbb
push
and
or
cmp
call
push
xchg
mov
roll
sarl
pusha
or
cld
aaa
inc
addr16
xor
shll
lds
inc
xchg
mov
mov
outsb
aaa
xchg
fucomi
sub
or
mov
push
mov
adc
push
pushf
push
dec
rep
mov
out
sarl
popf
cld
rolb
out
and
flds
xchg
adc
sbb
cmpsl
das
sub
ljmp
mov
std
fwait
push
jnp
int3
jp
lahf
jae
jle
lcall
jmp
jno
mov
cmpsb
jnp
and
and
xchg
lret
pop
adc
clc
mov
out
fldt
das
mov
std
push
lcall
aam
outsb
mov
xor
inc
fdivrs
insb
fcoml
jg
std
icebp
popa
stos
push
xchg
sbb
hlt
jnp
mov
into
mov
dec
outsl
jne,pn
pop
cwtl
stos
out
add
out
jae
adc
push
push
and
add
std
cmp
jp
pop
adc
psraw
mov
dec
into
or
lds
push
add
adc
cmpsb
sub
jb
fsubrs
lea
aad
jnp
mov
jp
in
das
loopne
ret
cmp
jbe
inc
or
repnz
adc
xchg
add
pop
cld
mov
add
pop
es
lods
jns
rcrb
stc
pop
adc
fcomip
mov
nop
adc
or
je
dec
int
mov
mov
jnp
pop
push
pushf
and
sbb
mov
cmp
pop
scas
orl
or
adcl
aad
inc
cmp
cmp
mov
test
mov
sahf
push
pop
fwait
enter
fst
jg
mov
adc
ja
out
sub
push
cmovge
aad
sbb
pop
movsb
out
jg
rorl
stos
shr
stc
test
xor
repnz
dec
inc
xor
mov
test
nop
mov
jecxz
ret
cmpsb
fistl
clc
in
cwtl
push
and
jl
fs
imul
ljmp
mov
xor
push
lret
fwait
repz
cmp
xchg
cmpsl
mov
mov
and
mov
add
jp
inc
sub
push
adc
dec
imul
testl
leave
dec
dec
jmp
inc
js
jl
sbb
cmc
cwtl
outsl
cmp
leave
pop
icebp
insb
mov
aam
xchg
je
dec
popf
sbb
and
leave
test
iret
in
mov
imul
push
ret
aaa
xchg
inc
cltd
rcl
lret
dec
sbb
inc
ss
add
dec
aam
loop
call
push
jl
mov
cwtl
xor
pop
cmp
sub
xor
sbb
push
idivl
mov
rcrl
add
cmp
aaa
test
and
push
fmull
mov
dec
pop
out
mov
sbb
enter
mov
sub
push
imul
aad
pusha
pushf
sarl
inc
iret
incl
gs
pop
cmp
push
sbb
mov
cwtl
add
lahf
test
repnz
divl
xchg
ja
jmp
pushf
ss
or
cmpsl
stc
pop
and
scas
dec
mov
lds
pop
in
lock
mov
xor
fucomip
dec
mov
fs
mov
add
jne
ja
lea
pop
xor
inc
cmp
mov
xor
mov
out
fisttpll
pop
fwait
xor
xorb
pop
adc
push
adc
mov
int3
push
xor
insl
test
int3
mov
insl
cmp
imul
jmp
pop
add
mov
fadd
in
adc
insb
add
or
or
cli
and
popf
push
imul
cltd
and
mov
and
inc
testb
movsl
sbb
push
or
jb
add
loop
xchg
scas
insb
sbb
shlb
aas
sbb
cmp
stos
dec
ficoml
lret
jle
in
and
fcomps
fadds
les
cltd
jle
sbb
mov
pop
call
and
xor
fsubp
push
sub
mov
lock
xlat
mov
in
mov
mov
lods
clc
mov
sub
lds
in
push
push
adc
xor
sub
shlb
inc
das
cli
cli
mov
cmp
cmp
lcall
jnp
dec
pop
dec
jnp
pop
mov
imul
inc
leave
cmp
dec
lea
aas
and
cwtl
mov
or
jg
mov
mov
or
xor
shlb
push
mov
and
mov
dec
insl
cmc
or
addl
adc
push
xchg
xchg
mov
aaa
adc
pushf
add
mov
cwtl
sbb
sbb
dec
stc
cltd
push
mov
and
xchg
inc
shrl
xchg
or
or
mov
dec
fmuls
arpl
test
push
push
jge
sub
xchg
pop
jae
push
xchg
std
clc
push
in
aam
jle
sub
loope
fstpt
mov
int3
cwtl
js
pop
iret
idivl
pop
testb
xchg
add
cltd
stc
jns
dec
data16
pop
mov
out
mov
add
add
pop
pusha
xor
add
cli
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
push
mov
cli
add
in
lcall
mov
adc
jbe
or
rcrl
jmp
push
cmp
jle
dec
loop
mov
clc
fsubr
and
sti
subb
es
pop
sub
clc
xor
push
stc
jmp
clc
shrb
adc
addr16
ja
jne
fmull
testb
gs
cs
int
mov
sub
xor
mov
pop
push
int3
popf
mov
imul
call
inc
and
or
cmp
fidivrl
push
or
inc
aaa
es
xchg
and
mov
mov
mov
or
int
mov
push
mov
lcall
insb
mov
push
dec
popf
push
cmpsb
pusha
cltd
push
mov
pop
xchg
cli
mov
and
cmp
or
cld
dec
mov
xchg
sbb
aaa
push
les
xor
ja
bound
mov
jecxz
clc
xor
dec
das
xchg
loope
sub
dec
mov
sub
sub
icebp
cmp
xchg
pop
mov
ret
scas
pop
mov
inc
imul
rcll
jne
test
jns
mov
outsb
sbb
xlat
popw
pop
mov
ret
es
in
fidivl
test
add
and
cmpb
xor
insb
jmp
stc
loopne
ret
mov
leave
sbb
jg
orl
and
mov
jecxz
lret
adc
repz
aam
or
insb
adc
mov
enter
repz
das
cs
adc
jo
dec
outsl
aaa
in
and
inc
inc
inc
sbb
pop
mov
and
dec
popf
xchg
sbb
jne
and
push
push
gs
or
mov
sub
lods
fildll
aaa
jecxz
stc
xor
ljmp
xor
mov
or
rorl
dec
cmpsl
stos
push
call
xor
inc
xchg
out
adc
or
or
movsb
inc
sub
cmp
cmpsb
out
jecxz
cld
outsl
rcrb
mov
xchg
sar
loop
in
ja
loope
sbb
adc
rorb
lcall
pop
pop
int3
mov
mov
test
and
dec
xor
jne
add
test
sbb
fsubrs
cmp
jmp
jmp
xchg
cltd
test
fisubrs
xchg
jne
inc
addr16
xchg
jg
cmp
vcvtps2pd
repz
jmp
push
rorl
test
in
and
cmp
lods
and
daa
mov
es
pop
mov
cmp
mov
sbb
aas
callw
test
push
push
scas
mov
or
movsb
sub
sbb
dec
cmpsb
cmp
inc
adc
into
mov
shll
jg
mov
mov
nop
or
fisttps
std
fnstcw
jmp
xchg
stc
inc
iret
sub
scas
outsb
dec
int
cmpb
xchg
or
push
mov
push
test
fwait
push
ljmp
or
sub
adc
pop
sahf
clc
mov
mov
fstps
cmp
lea
sbb
subb
jo
or
pushf
fsubl
sub
int
lea
andl
lahf
jnp
mov
rolb
add
cmc
sbb
jbe
outsl
sub
adc
push
pop
dec
mov
in
test
add
dec
icebp
lcall
sbb
push
fmuls
push
mov
iret
xchg
or
daa
in
mov
mov
es
ds
cltd
add
sub
cs
push
xor
outsl
ret
loop
xor
movsl
daa
add
rorl
sub
ret
call
pop
xchg
dec
pusha
scas
mov
xor
lods
aaa
sti
sbb
mov
lahf
in
fcoms
stc
cmc
dec
jne
into
shl
in
iret
cmp
mov
sti
inc
popf
sub
dec
les
jl
frstor
cmpsl
and
das
pop
test
mov
stc
and
push
pop
out
lea
cmp
sub
add
sbbl
pop
inc
daa
testb
movsb
lods
neg
mov
sbb
mov
dec
lahf
push
adcb
jne
out
leave
pop
call
jno
test
mov
test
cwtl
rcll
mov
pop
adc
push
in
sbb
push
fcmovne
lcall
insb
cmp
scas
adc
mov
pop
inc
or
rsqrtps
cmpsl
les
push
data16
sti
stc
sbb
hlt
pop
mov
shlb
lock
or
frndint
hlt
pop
es
push
cmp
dec
and
sbb
xchg
mov
sub
mov
add
sbb
ret
aas
xor
sets
xchg
aaa
sti
jecxz
xchg
in
popa
ret
and
cmp
push
fidivrs
fs
aas
xor
insb
xlat
dec
xchg
insl
mov
adc
add
imul
fs
int3
adc
outsl
inc
popfw
pop
or
js
dec
push
xor
push
and
dec
fnstsw
std
push
aad
mov
fidivrl
fnstsw
jl
xchg
xor
clc
das
rcrb
test
cmpsl
and
out
add
mov
mov
out
test
mov
jo
orl
cmp
mov
fstpt
dec
xchg
lds
icebp
js
fists
jge
sbb
cmp
outsl
andb
pop
jae
dec
mov
adc
and
fcomip
push
insb
ret
adc
dec
inc
pop
sub
mov
stos
sti
imul
les
jg
cmp
out
inc
rcrl
ljmp
xchg
addr16
aas
mov
rol
sbb
js
test
jg
xlat
sbb
xor
out
xor
push
inc
add
jno
dec
test
or
js
test
cmp
lds
gs
add
pop
loope
cmp
test
gs
cmc
xchg
out
pop
outsl
repz
imul
pop
in
cmc
out
test
test
in
pop
xchg
add
gs
lret
xlat
jmp
cmp
aaa
mov
mov
in
xlat
scas
call
xchg
das
iret
sub
stos
ret
loopne
xchg
or
test
xchg
ret
mov
jl
cli
les
dec
cmp
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
repnz
pop
js
call
pextrw
pop
nop
repz
mov
clc
arpl
insl
repz
and
scas
icebp
aaa
arpl
imul
jmp
repnz
into
enter
shll
icebp
pusha
in
divb
mov
adc
nop
mov
adc
dec
mov
fcoml
stos
rcrl
push
jecxz
enter
filds
lods
jecxz
cmp
ljmp
icebp
iret
cmpsl
and
data16
inc
xchg
jge
rorb
rep
jp,pt
imul
dec
pusha
rcrb
add
mov
div
ljmp
dec
aas
mov
ja
inc
pop
pop
in
lcall
xor
xor
lret
loopne
add
jae
loop
pop
es
xchg
mov
and
mov
arpl
rcl
loop
mov
mov
mov
mov
or
mov
jg
sub
outsb
mov
inc
dec
mov
dec
add
aas
lret
push
rorb
mov
lods
sbb
jg
or
mov
fadds
pop
mov
aam
add
test
pop
mov
adc
inc
gs
or
scas
cmc
mov
dec
lea
leave
test
jg
jmp
sub
jbe
inc
fbstp
push
stos
mov
mov
fucomp
pop
pushf
shll
lds
sub
lds
imul
push
jne
std
mov
inc
int3
xchg
jae
cmp
push
jbe
xor
xor
xor
aaa
xor
mov
jno
xchg
sub
jo
pop
ds
mov
imul
pop
jbe
jne
dec
cmp
dec
fistps
scas
dec
mov
roll
adc
adc
aam
adc
and
and
dec
mov
dec
ficomps
call
fldenv
inc
cwtl
repz
loopne
daa
dec
and
xchg
in
xchg
push
jg
pop
std
repnz
in
idiv
and
sub
fiaddl
inc
pop
mov
and
in
mov
stos
jae
or
mov
sub
addr16
adc
mov
ljmp
mov
jbe
push
test
add
lods
out
je
push
into
xlat
mov
incl
push
xlat
jg
ret
mov
cwtl
mov
and
arpl
outsb
adc
mov
ret
inc
out
and
mov
decl
lods
pop
dec
daa
push
sub
call
fistl
ret
cmp
mov
in
dec
popf
push
inc
repz
adc
xor
test
loope
out
aam
dec
test
je
pop
ret
pushf
loope
imul
mov
pop
fimull
lahf
adc
sub
mov
cmp
sbb
add
insl
fnstenv
outsl
lea
inc
add
pop
ret
add
insb
dec
pop
fdivrs
mov
arpl
jle
aam
lret
dec
cwtl
fwait
gs
and
add
aad
test
mov
xchg
imul
lods
cltd
cmp
movsl
jno
movsb
mov
leave
pop
lods
jmp
push
stos
idivb
adc
movb
xchg
add
loop
or
arpl
mov
xchg
scas
mov
cli
push
enter
ret
jbe
js
pop
rcr
push
mov
push
daa
pushf
ljmp
rclb
sahf
stos
inc
adc
out
jp
or
lret
adc
test
fsubl
pop
inc
jb
clc
sub
leave
daa
cmpsl
pop
jle
jecxz
fdivr
mov
dec
int
testb
mov
loop
cmp
push
xchg
aad
cmp
pop
and
jnp
test
sbb
js
outsl
fisubl
add
ss
insb
bound
sub
shlb
in
dec
xor
lea
cmp
stos
mov
and
inc
pop
enter
subl
or
mov
cmp
mov
dec
jmp
mov
cmpsb
cmp
xchg
in
xchg
xchg
xchg
stos
adc
mov
fcmovnu
xchg
adc
dec
ss
ljmp
out
cs
int
push
jmp
in
popf
mov
mov
test
xor
push
and
push
pop
mov
jmp
xchg
mov
mov
mov
shrb
cwtl
rcrb
sub
pop
into
cltd
fimull
jne
ja
xor
lods
dec
sbb
xchg
xor
jno
pop
or
dec
mov
cmpl
cli
fcmove
in
push
stos
jmp
rclb
cmpsl
mov
xor
fildl
pop
neg
push
inc
adc
aam
lcall
lods
stc
xchg
xor
imul
pop
mov
imul
pusha
inc
pop
add
out
xchg
sbb
icebp
test
rolb
mov
inc
stos
xchg
pop
mov
cmp
pop
hlt
out
stc
in
pusha
mov
aam
sarl
negb
subl
sub
pop
jnp
pop
movsl
ffree
mov
mov
pop
data16
push
xchg
mov
fcompl
sbb
arpl
dec
mov
pop
movsl
std
xor
std
push
mov
pop
add
stos
jl
in
cli
test
sub
push
outsl
jns
bound
loop
sub
fdivl
cwtl
out
or
flds
sbb
mov
xchg
xorl
cld
jl
sub
imul
fcompl
in
aad
ja
pusha
add
cs
mov
sub
fldt
dec
test
sub
sbb
pop
push
test
rcrl
lods
in
mov
xchg
push
push
imul
jo
sub
xor
aaa
clc
jo
push
mov
std
lea
adc
adc
out
or
or
adcb
dec
int
mov
mov
sbb
mov
imul
inc
lret
insb
mov
mov
repz
dec
pop
hlt
xchg
mov
dec
gs
sbb
fs
xlat
shlb
mov
sub
mov
adc
inc
in
add
fwait
add
pusha
sub
sbb
xchg
jmp
imul
inc
and
je
jg
loope
leave
cmpsb
push
inc
add
jmp
negl
xchg
rorb
fucomi
jo
pop
mov
dec
and
inc
mov
rcl
ljmp
jmp
lock
and
xchg
xchg
mov
out
dec
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
ud1
jbe
inc
addr16
lods
ret
hlt
repz
movsl
and
ret
xor
pop
dec
std
fiaddl
repz
lea
cmp
cmp
jo
jle
cmc
repz
cmpsb
insl
bound
lds
pop
cld
push
xor
cmp
ljmp
loop
inc
sub
scas
push
mov
stc
mov
nop
mov
sub
stc
stc
loope
stos
lahf
or
add
sub
ret
xchg
jo
cli
xchg
cmp
in
jno
and
out
out
mov
or
cmc
xor
xor
sub
iret
jae
sbb
pushf
lods
repz
sub
rcrl
mov
jns
sub
decl
xlat
sbb
mov
mov
add
jnp
add
xchg
or
jne
test
pop
pop
js
mov
ja
mov
imul
dec
inc
adc
and
pushf
adc
mov
nop
or
mov
mov
negl
shrl
hlt
fidivs
pop
adc
insb
in
xlat
xchg
xchg
mov
pop
pop
push
mov
cltd
adcb
sti
mov
subl
ficomps
adc
hlt
sahf
adc
jl
sub
push
adc
rorl
cmc
mov
mov
icebp
add
push
addr16
pop
in
mov
xor
popa
in
inc
arpl
cmpsb
pop
es
sahf
pushf
movsl
es
or
dec
fdivl
shl
xlat
jge
in
shlb
ds
lcall
push
jl
pop
pop
stos
lret
ds
mov
dec
cmp
lea
pop
loope
lcall
jge
aaa
movsb
stc
loopne
out
xor
xchg
pusha
sub
sub
loopne
pusha
incl
pop
mov
mov
or
lock
out
loope
ljmp
pop
sbb
cs
xchg
adc
xchg
nop
rorb
or
daa
or
pop
vmovlps
cmp
push
sbb
jecxz
cltd
fimuls
xorb
out
jmp
and
pop
out
fnstcw
int
inc
mov
test
sub
sti
jne
ja
add
out
sbb
int
add
adc
fnstenv
in
inc
popa
lds
mov
sti
aad
ja
test
xchg
mov
mov
pop
loop
push
dec
pop
xchg
lret
sbb
lret
popl
in
rcll
mov
ljmp
adc
jo
lea
addr16
mov
add
or
mov
movsb
imul
rcrb
fsubrl
sub
push
sti
sbb
insb
fwait
and
test
std
and
adc
dec
xchg
std
sub
out
inc
inc
aam
jge
pop
cwtl
sub
push
cmp
pop
sub
out
add
mov
outsl
ret
subb
sub
xor
mov
add
dec
and
mov
lret
shll
or
jl
xor
xchg
in
adc
mov
lods
jae
repnz
loopne
fidivrl
jmp
push
repnz
pop
sub
jae
cwtl
cmp
xor
xchg
and
mov
sbb
shlb
xlat
ss
xor
ja
pusha
inc
and
sahf
and
jge
repz
jae
fbstp
ss
loop
mov
rcll
xchg
adc
sbb
cmc
mov
fldl
arpl
loop
hlt
in
cmpsb
xor
jecxz
and
cmp
aam
sbb
xor
cmp
cmpsb
das
jbe
jmp
jb
mov
and
flds
shll
inc
sub
mov
es
jae
mov
mov
int3
stos
xchg
xlat
mov
inc
cmp
fsub
add
push
scas
or
les
int3
call
dec
xor
sbb
test
adc
mov
lods
push
incb
test
shrl
cmp
loopne
std
fidivrl
jl
in
mov
ret
scas
repnz
subl
loope
pop
hlt
mov
xchg
shlb
ss
cltd
xor
push
pop
js
xor
leave
movsb
jp
les
imulb
add
and
in
mov
lds
push
mov
and
aas
xlat
pop
inc
sub
inc
aas
int3
arpl
movups
xchg
push
gs
ret
popa
jnp
sub
jns
mov
repnz
jns
das
lret
sbb
mov
push
dec
jge
or
scas
sbb
fwait
pop
sahf
dec
push
sarb
iret
pop
or
in
loopne
and
pop
pop
jecxz
inc
mov
xlat
sarl
ret
pop
repz
inc
push
ret
lahf
cmpb
jecxz
dec
push
cs
xorb
and
and
fmull
rcrl
out
push
and
xchg
in
lcall
and
je
jge
add
xor
mull
jns
cld
add
addr16
lret
outsb
mov
xchg
outsb
aam
jle
mov
icebp
mov
sahf
jbe
or
xchg
jmp
int
movsb
xchg
sub
daa
rolb
dec
sti
mov
sbb
jno
nop
bound
sub
push
mov
lods
pushf
notl
ret
xor
pop
int3
movsb
mov
aad
or
mov
pop
out
jae
mov
int
daa
arpl
in
push
and
push
dec
xchg
movsl
jg
lret
iret
dec
or
lea
enter
test
add
fs
mov
nop
insl
mov
jp
leave
jo
negl
jl
sbb
mov
xchg
mov
xchg
push
dec
jnp
das
outsb
negb
cwtl
add
lea
cli
mov
fsubr
outsl
idivl
sbb
and
cmc
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
and
bound
invd
add
setno
lock
fidivl
cltd
push
nop
dec
xor
pushf
lcall
out
add
mov
pop
xor
cmc
movsb
shll
std
mov
mov
fidivs
xchg
push
scas
lock
dec
cmp
ret
adc
cltd
dec
in
lahf
jb
add
sbb
jecxz
xor
mov
cs
and
aaa
imull
sub
sbb
pop
mov
hlt
and
and
push
scas
push
lds
daa
out
xor
es
idivb
sbb
ret
sbb
mov
dec
push
iret
outsl
scas
mov
mov
iret
out
or
jmp
popa
push
addr16
pop
jmp
jge
rorb
inc
cwtl
add
in
xor
ror
das
and
pop
inc
das
add
test
push
aad
xchg
push
popa
ret
inc
in
mov
ljmp
inc
mov
cmp
sbb
or
pop
add
ss
data16
daa
outsb
jb
fsts
push
pop
mov
scas
push
fs
jle
inc
sub
fwait
cmp
lods
cltd
or
push
icebp
loope
lods
js
inc
xchg
ss
dec
pop
lret
mov
mov
orl
test
cli
lret
jp
inc
xchg
xchg
fwait
jne
jecxz
out
xchg
jnp
add
lcall
add
ret
add
fidivrl
mov
pushf
icebp
xor
mov
sbb
aam
outsb
mov
ror
xor
insl
dec
lahf
jno
aad
and
push
cmp
aam
dec
add
jno
add
and
xlat
sbb
cmpsl
add
jecxz
xchg
loopne
push
aaa
inc
pop
dec
sbb
xor
outsb
push
test
add
inc
mov
xchg
lock
mov
or
jmp
in
inc
push
iret
mov
arpl
test
cltd
dec
in
test
push
push
pushf
mov
jle
inc
sbb
inc
mov
add
pop
scas
add
js
xchg
shlb
in
inc
out
addr16
sarb
adc
sarl
dec
daa
xlat
xchg
sbb
cwtl
cmp
aas
nop
dec
pop
mov
imul
arpl
ficoml
add
repz
or
and
inc
aas
pop
and
mov
or
and
mov
cwtl
fnsave
jle
lahf
nop
pop
xchg
sub
push
cmc
adc
and
mov
into
rcll
pop
xor
push
push
lahf
sahf
rorb
mov
or
dec
push
in
mov
sbb
gs
jmp
cmpsl
xchg
sbb
mov
push
aad
jp
cwtl
rcrb
jge
bound
imul
ret
adc
push
xor
inc
stos
jb
or
es
fwait
pop
inc
or
div
fdivl
mov
into
arpl
aam
push
inc
fs
rcr
pop
inc
bound
and
lret
pop
push
sarb
sbb
mov
aad
jbe
ss
orb
inc
popf
xchg
ja
mul
inc
sbb
pop
jmp
out
push
aam
inc
push
enter
push
push
and
in
mov
push
mov
aas
pop
lret
sub
pop
rclb
pop
mov
scas
mov
sbb
and
ja
je
aam
cld
mov
jae
cmp
add
push
cmpsl
ficoml
push
mov
push
pop
negl
sub
movsb
sbb
pop
add
jns
xchg
inc
jle
insl
jne
leave
mov
inc
sbb
sub
aam
sub
or
jle
je
xchg
and
repz
mov
test
lret
es
fbld
cmp
pop
sti
add
imul
pusha
cli
jmp
ret
pop
ja
pop
mov
mov
enter
fdivrl
aas
lods
mov
sub
adc
mov
dec
inc
inc
rcrb
dec
inc
jbe
sti
jl
inc
xchg
out
je
add
xchg
mov
jmp
sti
dec
cli
add
sahf
rclb
lds
push
int
into
pop
fimuls
push
and
aaa
sbb
popa
pop
es
sahf
out
inc
xchg
in
cmp
xlat
mov
call
sub
mov
xor
out
out
xor
push
or
lods
jo
mov
push
repz
add
nop
push
aaa
addr16
repz
dec
dec
pop
sub
adc
mov
ss
jg
daa
hlt
or
mov
lret
loop
movsb
sub
ss
jno
scas
rolb
stos
cmpsb
push
xor
scas
mov
inc
xor
aam
sbb
icebp
xor
test
dec
xchg
scas
xchg
fnstsw
inc
pop
sti
cmp
scas
stc
and
ja
push
mov
cwtl
mov
jp
inc
addr16
lcall
repnz
cmp
xchg
sub
out
lods
outsl
rol
filds
bound
mov
adc
mov
jmp
mov
mov
push
jns
jmp
adc
mov
inc
ret
fs
shrb
mov
call
pushf
outsb
jno
movsb
dec
insl
clc
mov
jae
lock
rorb
ja
repz
pop
loope
xor
rcrb
clc
xor
leave
pop
bound
out
outsl
pop
fisubs
push
mov
xor
cmp
push
cmp
rcr
adc
jne
std
pop
add
and
dec
push
dec
rcrb
jecxz
inc
ret
fcomp
cmpsl
imul
addr16
lods
je
sarl
test
mov
cmp
dec
inc
xchg
xor
mov
sbb
inc
dec
frstor
mov
cmpsb
jge
movsb
dec
mov
in
mov
cs
in
aas
call
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
fs
iret
invd
add
xlat
mov
mov
jbe
add
inc
sbb
scas
fs
inc
test
add
psubusb
xlat
mov
mov
aam
repz
inc
cmp
shrl
xchg
data16
xor
pop
mov
sahf
pop
cmp
repz
cmc
movsb
repz
inc
xchg
xor
jg
add
negb
adc
and
std
int
xorl
cmp
xor
mov
int
clc
sti
push
mov
adc
mov
pop
sub
xor
or
xchg
mov
add
lcall
mov
fs
loop
imul
ss
mov
push
in
aas
int
xchg
adc
sbb
inc
inc
dec
ret
sbb
pop
enter
push
fwait
xchg
push
mov
call
das
jecxz
arpl
in
xchg
xor
jle
out
dec
out
cmpsb
sub
cmp
xchg
cmc
cmp
jl
push
mov
fwait
pushf
rolb
cltd
lcall
mov
cmc
out
je
jp
sub
sub
sbb
inc
jae
test
cmp
mov
out
gs
sbb
test
mov
mov
ljmp
mov
mov
mov
rol
data16
mov
xchg
popf
ljmp
mov
fs
push
push
or
fnstcw
in
jo
enter
mov
test
jge
push
pop
inc
cmp
fcmovnu
push
leave
aas
lcall
adc
xchg
xchg
insl
fstpt
cs
daa
xor
rcll
in
jle
xchg
jecxz
mov
sar
mul
stos
ret
shll
xchg
std
out
push
cmp
shlb
push
pop
sbb
pop
push
pop
mov
cli
stos
cld
pop
stos
lahf
icebp
add
jge
sub
pop
pop
push
ljmp
xchg
std
adc
ds
inc
pop
push
xchg
iret
hlt
and
and
push
and
lahf
aaa
adc
shl
enter
ret
jl
xchg
add
xor
fxch
jl
xchg
ds
xor
jnp
pop
call
sbb
adc
repz
add
pop
je
or
into
xchg
jno
jae
stos
test
ljmp
aas
and
xlat
ret
cltd
ficomps
dec
leave
jmp
lds
rol
pop
cltd
add
add
lds
xor
idiv
mov
imul
dec
in
lret
stos
sub
mov
add
jns
jo
setbe
jbe
inc
mov
inc
jl
sbb
scas
push
jns
imull
icebp
sahf
push
js
adc
data16
lcall
sahf
jne
adc
icebp
push
pop
mov
mov
inc
cltd
adc
jne
sub
xchg
test
hlt
cmp
push
adc
enter
popf
adc
js
and
pop
ljmp
dec
adc
mov
and
pop
pop
jecxz
xor
add
sub
cltd
cmp
call
jno
sbb
sub
push
jno
sub
xor
xchg
int3
ljmp
cmp
test
loopne
push
mov
pushf
adc
and
es
imul
or
mov
sub
or
cmp
inc
fs
mov
fistps
add
mov
fadds
outsb
pop
jl
pop
pop
xor
inc
push
and
jp
in
loope
push
scas
in
pop
out
jecxz
je
inc
bound
jle
push
loope
cmpsl
sti
cmp
aad
testb
jge
hlt
push
arpl
push
push
or
iret
int3
lahf
insl
lock
imul
mov
sbb
jl
mov
push
stos
fs
add
fists
jae
pop
pop
jnp
fwait
rcrb
add
or
hlt
test
pop
cmp
xor
jb
mov
je
mov
pop
cmp
xchg
add
out
dec
dec
loope
adc
pop
cltd
pop
dec
mov
cmp
lock
mov
imul
into
test
cmp
sub
mov
add
mov
dec
pop
in
stos
lods
enter
jb
mov
rcll
call
pusha
incl
sub
into
jo
and
aam
dec
out
and
daa
mov
jmp
clc
cmpsl
popa
inc
inc
mov
jo
push
cmc
fisttpl
push
cmp
lret
sbb
dec
dec
lods
test
cld
bound
into
add
xor
ja
inc
loope
loope
ret
shlb
lret
lret
fldl
mov
insb
push
rolb
clc
cmc
mov
inc
sub
mov
mov
mov
outsb
pop
insl
int
dec
cwtl
dec
mov
insl
imull
rclb
xor
sbb
sub
push
mov
cmp
faddp
mov
jno
mov
aas
mov
sbb
in
dec
cmpsl
popf
mov
lods
push
xlat
in
scas
or
les
mov
cmpsl
lods
cmp
push
push
out
or
in
div
pop
cmpsb
insb
jae
add
sub
call
mov
test
aas
int3
mov
loopne
test
sbb
je
movsl
adc
xor
pushf
insb
and
outsl
push
fnstenv
xor
jmp
jle
orps
mov
push
call
in
pop
lahf
jb
daa
adcb
fistpll
fsubrl
gs
add
mov
mov
ja
jnp
xchg
mov
mov
and
lods
xchg
add
mov
pop
leave
nop
fsubrl
sub
dec
leave
popf
outsb
add
dec
mov
fidivs
das
cwtl
data16
xchg
addb
scas
mov
push
fimull
dec
mov
mov
sub
rorl
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
nopl
add
and
repz
popf
mov
or
loopne
cmp
stc
xchg
mov
scas
andl
sahf
ljmp
pop
or
sbb
hlt
cmp
add
cmp
mov
psubb
orb
loop
push
xchg
pop
or
and
push
popl
jl
bound
test
out
mov
loope
hlt
bound
je
nop
in
mov
notl
dec
mov
daa
push
sbb
sub
and
fwait
sbb
cwtl
mov
insl
sbb
imull
cli
test
loope
jl
xchg
or
sbb
jo
cmp
movsb
pop
test
ficomps
mov
xor
in
lcall
inc
je
sbb
dec
loope
dec
and
add
sbb
shrl
out
sub
lea
xorl
ja
rclb
sbb
rcrl
mov
push
int3
add
neg
pop
xchg
jo
mov
mov
inc
es
mov
mov
std
mov
push
bound
in
jne
out
cmp
addr16
fnsave
add
jecxz
cmp
out
xchg
dec
and
pop
jnp
dec
faddp
xor
dec
std
and
cmp
and
icebp
test
insb
stos
mov
inc
outsl
int
popa
hlt
cmp
jl
sbb
lock
hlt
inc
and
pop
mov
jl
adc
cmpsl
push
jle
out
inc
stos
or
out
int
cmpsl
jno
lret
icebp
xlat
lock
push
xchg
push
out
inc
push
insb
lds
sub
push
push
insl
adc
mov
test
std
das
dec
in
cmc
cmc
pop
ja
mov
add
cmp
in
test
xchg
xor
lret
sarb
or
mov
cs
xchg
bound
movsb
les
and
stc
mov
shrb
cs
jecxz
jl
jne
daa
cmp
push
in
dec
iret
mov
push
out
cmp
pusha
aad
mov
pop
or
out
loopne
das
loopne
popf
xchg
inc
nop
mov
push
pusha
mov
push
sbb
push
aad
cmpsb
loope
xor
lret
outsl
je
out
xchg
sbb
dec
and
iret
mov
inc
xor
in
pop
leave
dec
sbb
test
enter
test
push
adc
dec
xchg
in
ret
test
xchg
dec
mulb
outsl
push
out
imul
ja
pushf
cmp
jle
loop
testb
pop
mov
and
inc
ds
adc
in
imul
in
lock
outsb
xchg
pop
lock
mulb
mov
sahf
es
mov
ret
cmp
lahf
adc
into
pop
das
cwtl
adc
add
shr
push
dec
jl
insb
lahf
or
jns
adc
lods
adc
xchg
outsb
add
pop
lea
fbstp
pop
int3
sbb
xchg
popa
test
pusha
nop
aaa
inc
lods
xchg
or
cmp
mov
fcom
enter
jecxz
int3
xor
inc
mov
cwtl
adc
xor
xor
addr16
dec
in
movsb
adc
cmp
mov
push
push
sub
jns
inc
jae
aam
pop
xor
dec
or
mov
jo
xchg
add
pop
mov
push
mov
sub
pushf
sub
cld
hlt
stos
out
cwtl
adc
out
dec
xlat
xlat
and
lds
mov
mov
popa
outsb
dec
popf
gs
push
maskmovq
xor
mov
sbb
outsl
nop
push
nop
mov
jmp
shl
inc
or
rcrl
loopne
jp
jo
mov
dec
mov
push
push
xchg
adc
inc
dec
jns
addr16
add
scas
pop
push
out
sbb
out
jbe
xchg
adc
call
out
pop
add
mov
pop
pop
fstps
test
ret
stos
mov
mov
or
push
into
shr
insl
mov
iret
mov
mov
das
std
mov
dec
sti
sub
cmc
inc
or
mov
push
pusha
mov
push
pop
loop
sbb
dec
dec
into
pusha
or
cmpsl
mov
xchg
in
subl
xchg
scas
pop
pusha
push
xchg
js
add
nop
xor
addr16
fstl
push
rorl
adc
lahf
popa
ja
xchg
push
lds
leave
jecxz
adc
jne
xchg
or
out
mov
mov
sub
and
push
dec
and
popf
cmpsl
pop
mov
ds
sbb
fidivrs
mov
or
lret
fdivr
push
mov
pop
mov
ja
mov
mov
push
ret
pushf
repz
lock
les
xchg
call
loope
jne
cmp
mov
push
inc
jge
sbb
minps
imul
xor
dec
xchg
push
mov
jge
sbb
xchg
mov
mov
in
mov
clc
jecxz
or
arpl
loope
xlat
icebp
dec
xchg
sbb
stc
lret
cmpsb
dec
push
clc
cmp
push
mov
dec
jmp
cmp
aaa
mov
xchg
sahf
and
xchg
lds
sbb
mov
jb
in
mov
pop
sahf
push
adc
cmpsb
test
push
cmc
es
ret
xor
push
fstpt
and
or
mov
insl
push
xchg
xor
add
movsb
das
push
sub
push
adc
mov
cmpsb
inc
mov
cmpsb
test
add
mov
xor
mov
jno
sarl
ja
into
and
jne
es
mov
aaa
pop
cmpsb
jb
testl
mov
test
pop
lcall
mov
lock
sub
add
dec
pusha
das
nop
and
adc
push
dec
jbe
cmpl
dec
cmp
cmpsb
bound
adc
xchg
pop
sub
add
add
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
pop
add
invd
add
minps
daa
cmpsl
popf
sbb
dec
ljmp
dec
cs
jno
xchg
and
and
sbb
rorl
ljmp
xchg
mov
shl
popl
out
fadds
outsb
sub
add
sub
cli
out
pushf
push
and
incl
mov
adc
dec
xchg
adc
lcall
loope
mov
rorb
shlb
daa
lds
sub
dec
in
sub
inc
mov
sbb
iret
cmc
inc
leave
sub
lock
rcll
loope
adc
or
or
jg
movl
int3
hlt
lock
test
clc
add
mov
out
mov
loop
jl
cmp
rorb
rcr
movsl
mov
xlat
xchg
inc
add
cmp
add
mov
add
aad
in
mov
fnstenv
push
cmpsl
sti
scas
or
repz
xchg
xor
xchg
inc
mov
sbb
push
mov
push
push
push
cmp
sbb
mov
test
scas
xchg
aad
mov
xor
mov
fdivl
add
sbb
push
sbb
shlb
ljmp
jae
inc
push
push
cld
leave
and
bound
outsl
jecxz
push
aas
push
xchg
pop
aas
in
push
add
fists
and
fldcw
stos
adc
or
in
gs
xor
xlat
pop
scas
mov
mov
push
fwait
rorl
sub
sub
inc
jb
pop
orl
icebp
loopne
ss
popa
cmp
loopne
sbb
xbegin
pop
hlt
add
out
cmp
fs
push
jle
aam
jns
stos
pop
inc
add
popa
in
mov
arpl
dec
push
int3
aas
jmp
decb
aaa
into
sub
data16
lret
cmpsb
pop
and
mov
mov
jmp
dec
sahf
add
test
mov
es
icebp
fsubl
push
pop
sbb
sbb
mov
xor
clc
mov
mov
cmp
inc
push
shll
cmpsb
jmp
pop
jg
rorl
lock
insb
dec
mov
loopne
pop
popf
mov
clc
aad
movsl
sti
mul
enter
dec
inc
xor
orb
std
aaa
cld
mov
push
sbb
ljmp
lret
adc
out
jl,pt
xchg
ss
mov
insl
scas
cld
and
xor
add
inc
sarb
shld
addr16
jmp
jne
cwtl
sub
icebp
xor
ljmp
aam
pop
xchg
mov
and
or
aaa
sbb
test
xchg
cmp
stos
loope
cld
lods
mov
pusha
scas
mov
mov
dec
xchg
xor
loopne
lods
out
cmp
push
stos
xchg
jge
notl
xchg
icebp
mov
stos
sti
mov
mov
xchg
fwait
stc
in
xor
jb
cmp
out
stc
stos
out
pushf
inc
jmp
fsubl
rolb
xor
push
fwait
cmp
push
pop
push
cmc
fwait
mov
lds
adc
lret
cmp
push
imul
roll
xchg
in
scas
les
inc
inc
fisttpl
inc
pop
pop
adc
pop
push
or
push
push
sub
repz
jno
jg
cs
mov
bound
cmp
fldl
aas
mov
je
addb
in
push
add
xor
test
ds
xor
or
mov
xor
inc
push
int3
jmp
push
push
lret
std
push
jno
jb
fmul
sub
shr
cld
or
loopne
scas
loop
and
push
push
mov
add
mov
cli
mov
rclb
inc
out
pop
std
frstor
sbb
popf
add
out
mov
jp
dec
add
addb
add
inc
int3
aas
shrb
leave
inc
sbb
xchg
jb
mov
sbb
jne
mov
repz
pushf
popf
dec
loop
mov
daa
adc
fnstsw
xchg
int3
mov
in
jge
mov
add
lds
enter
sti
or
nop
test
cmp
ljmp
sti
mov
movsl
test
push
push
xchg
xchg
add
dec
movsb
lods
xor
push
les
xchg
repz
mov
adc
sbb
jge
cwtl
cmpsl
sub
dec
mov
mov
js
pop
add
cmp
ss
inc
cs
fwait
out
adc
jb
add
push
inc
lock
xlat
and
in
adc
bound
push
es
shlb
ret
mov
lret
mov
fisubrl
iret
adc
filds
aaa
cli
mov
cli
jecxz
pop
mov
leave
pop
jge
adc
mov
js
jecxz
sbbl
ficoms
push
inc
inc
adc
lds
sub
fsubl
loopne
hlt
data16
shrl
clc
xchg
insl
or
mov
add
mov
push
xor
push
push
mov
lcall
or
push
mov
fnstenv
int
adc
jecxz
mull
xchg
lds
push
or
mov
jb
jne
outsl
inc
jmp
rorb
cmpsl
shrl
lahf
loope
lret
pushf
mov
xchg
xchg
mov
in
jne
xor
dec
ljmp
in
inc
jl
sub
pop
xchg
mov
cmp
mov
jnp
mov
into
dec
add
push
pop
and
ficomps
jne
xor
es
pop
loope
xchg
jae
add
add
aam
test
in
out
dec
aam
push
std
testb
lahf
add
stc
jmp
mov
xchg
mov
mov
invd
add
mov
push
mov
adc
jge
xchg
jo
divb
mov
hlt
jbe
or
iret
inc
pop
insl
cmp
xor
xchg
pop
xchg
push
fldt
cmpsl
imul
test
adc
xchg
mov
ja
sbb
out
dec
out
push
or
daa
mov
dec
dec
mov
xlat
jnp
pop
cmp
cmc
repnz
push
hlt
inc
scas
pop
shrl
mov
mov
and
pusha
mov
iret
imul
mov
out
push
pop
sub
or
ds
std
and
leave
sub
imul
sbb
sbb
pop
rorl
lret
xlat
pop
rol
les
lahf
les
orb
pop
ljmp
popa
xor
push
fcoms
orb
sbb
pop
xchg
xchg
xchg
fistl
stos
jo
push
dec
sbb
sbb
xchg
mov
inc
in
faddp
sbb
std
adc
movsb
cmc
scas
cli
dec
jb
and
sub
aam
push
outsb
rolb
scas
cwtl
insb
xchg
mov
mov
out
push
sti
shlb
jle
pop
sbb
scas
outsl
clc
inc
test
xor
fstpl
es
lcall
mov
jo
mov
pop
orl
jp
mov
dec
inc
movsb
pop
aam
or
pop
rol
xchg
mov
aam
inc
add
cwtl
out
mov
push
das
popa
shlb
subl
fbld
repnz
pop
and
cs
push
ljmp
rorl
lret
xchg
push
inc
into
into
push
imul
and
xor
mov
adc
fs
sub
lret
sub
lock
push
mov
out
dec
xchg
loopne
rcll
imul
push
or
js
lcall
int3
xor
mov
je
jg
add
fidivrs
es
cmp
inc
shrb
sub
pop
push
je
mov
dec
jg
and
inc
jbe
insb
jbe
cmp
sbb
jmp
in
in
xor
and
loope
inc
in
sub
pop
repz
subb
push
fcmovu
aam
data16
mov
pop
cwtl
pop
cmpsl
stc
inc
outsl
mov
loop
out
xchg
into
repz
out
mov
and
xchg
adc
decb
je
hlt
jae
fimull
jmp
pop
push
ja
loopne
lods
dec
call
mov
pop
dec
mov
add
sti
xor
mov
scas
mov
push
dec
sub
mov
cmp
push
and
or
or
xlat
stc
sbb
sub
ficoml
mov
les
pop
and
pop
pop
out
pop
fnstsw
out
push
lcall
and
and
leave
leave
in
mov
imul
lock
mov
mov
dec
dec
in
roll
dec
adc
cmp
push
push
dec
inc
aas
cmp
je
scas
jno
mov
jne
fwait
inc
aad
pop
ret
sub
mov
loope
jmp
xchg
fmuls
cs
cmpsb
out
cli
addr16
int3
mov
jecxz
popf
rolb
jns
mov
dec
sub
or
ljmp
xor
out
ret
hlt
add
or
push
adc
fmulp
xchg
das
out
les
sub
cli
out
stos
jae
jecxz
xchg
pop
jae
out
outsl
loope
pop
sub
fwait
inc
insb
sbb
jns
push
inc
xchg
push
imul
fldt
decb
ret
notl
pop
sbb
ljmp
repnz
js
lds
adc
mov
push
push
pop
cld
test
jb
sbb
dec
adc
and
lahf
jnp
jmp
push
leave
sarb
rcrl
or
xchg
fwait
rcl
inc
pop
or
jb
pop
jns
push
lods
mov
into
pusha
jo
xor
loope
xlat
out
movl
pop
je
xchg
aad
imul
inc
lret
repz
inc
out
lds
into
je
and
into
popf
imul
stos
mov
sub
ljmp
sbbl
ja
and
loopne
jecxz
in
mov
in
sbb
xchg
ret
cwtl
add
fldl
scas
loopne
mov
xor
pop
fucomip
mov
cmpsl
xchg
inc
ljmp
cmp
mov
jnp
jo
outsb
push
mov
and
or
gs
pop
ljmp
or
fwait
mov
jmp
sub
cld
and
stc
fwait
jne
xchg
out
clc
bnd
add
add
dec
jbe
cld
hlt
fldl
pusha
subl
and
sbb
inc
les
xor
jle
jno
dec
loopne
imul
out
xchg
ret
and
mov
mov
push
into
lret
pop
stos
xchg
call
jg
and
xchg
cmp
testl
cmc
lahf
das
lcall
push
sbb
sbb
mov
add
adc
xor
test
fucomp
jmp
push
mov
lods
cmp
idivb
cmp
xor
jb
lods
mov
dec
shlb
dec
ds
add
cmc
mov
mov
outsb
into
sub
ja
xor
imul
fidivrl
xor
mov
mov
dec
inc
pop
in
push
out
add
and
mov
cmc
fsubl
insl
or
mov
adc
xchg
enter
inc
pop
dec
out
insl
sub
pop
in
pop
aaa
or
mov
push
inc
push
fs
pop
add
outsb
and
adc
stos
lret
dec
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
xchg
test
invd
add
mov
adc
mov
push
cmp
test
pop
pop
loope
xchg
pusha
arpl
outsb
pop
ja
sbb
mov
ds
push
pop
fildl
add
dec
inc
hlt
dec
bound
je
jb
inc
dec
mov
mov
mov
xor
lret
stc
stos
jmp
shll
dec
imul
sub
cmc
dec
mov
push
mov
push
add
rorl
shl
cmp
jge
shll
mov
jae
mov
or
mov
sahf
jle
leave
lcall
xor
cmp
adc
arpl
mov
int3
test
inc
and
lods
pop
mov
int
int
mov
repnz
cmp
or
push
shlb
or
jg
movsb
mov
jne
je
rol
xchg
mov
movsb
adc
xor
sbb
cmc
and
mov
fsubrl
ret
hlt
fdivp
or
shll
pop
push
sbb
cs
or
push
clc
and
or
lea
mov
xchg
pop
add
ret
cmp
jp
xor
adc
xor
cli
pushf
xchg
popf
and
test
mov
imul
clc
cltd
dec
xchg
mov
push
out
lds
push
push
sarb
xor
mov
inc
fdivl
jnp
in
adc
pusha
cmp
add
jae
or
fs
pusha
test
ret
aas
cmp
arpl
mov
adc
inc
loope
dec
sub
ret
jb
aas
jl
adc
loope
hlt
in
jo
xor
xchg
add
jmp
mov
mov
lret
mov
dec
fiadds
push
ljmp
cmpl
stc
adc
addb
ret
int3
push
add
sbb
sbb
and
sbb
jl
inc
aad
sbb
andb
add
dec
sub
dec
jae
jp
xchg
mov
inc
push
xchg
xor
imul
xchg
jecxz
aam
adc
test
xor
inc
mov
bound
xchg
adc
mov
cmp
mov
icebp
in
out
add
leave
pop
pusha
sahf
stos
xchg
mov
mov
or
inc
pop
sbb
add
lock
sbb
mov
xchg
adc
dec
xchg
out
mov
aas
sub
or
sbb
xchg
sti
sbb
xor
sahf
mov
lea
sbb
push
fs
iret
and
pusha
dec
std
lea
push
rcrb
mov
cmp
in
push
mov
xlat
push
repz
sbb
jne
pop
sbb
aad
sbb
push
mov
mov
jnp
mov
sbb
clc
or
mov
sar
out
lahf
sub
outsl
pop
dec
bound
jmp
sub
fcoml
push
clc
xor
mov
mov
cmp
xor
sbb
mov
repz
lea
jecxz
sub
loop
mul
jbe
test
mov
jb
aam
mov
aaa
andb
mov
mov
mov
movsl
adc
and
dec
push
js
loop
adc
cs
inc
and
jge
ljmp
in
jo
dec
mov
inc
push
icebp
jle
sbb
test
mov
mov
fsubrs
push
rcrl
xchg
jge
sbb
aad
inc
pmullw
out
jns
lods
pushf
inc
xchg
and
push
cli
pop
das
add
jl
shlb
adc
loopne
subl
mov
dec
sbb
aas
push
adc
sahf
mov
dec
sub
adc
cmp
nop
push
sbb
mov
jne
push
sbb
push
push
lds
cmp
lahf
jge
mov
mov
mov
inc
and
mov
xchg
pop
pop
pop
and
js
jl
mov
mov
rolb
int
aam
inc
ds
in
xor
or
test
popf
add
shlb
enter
push
inc
mov
ss
xor
xchg
pop
insb
sbb
mov
jge
mov
pusha
icebp
jmp
dec
inc
sub
inc
nop
aad
mov
cwtl
xor
inc
push
in
testb
inc
inc
xchg
add
push
data16
fdivp
in
mov
test
xor
fs
cmp
mov
div
pop
cwtl
mov
mov
push
testb
pusha
rolb
inc
xor
mov
fnstsw
jae
call
rcrl
fwait
jl
lret
sahf
ret
dec
push
fildl
and
mov
fcoms
pop
jecxz
and
shl
mov
leave
jno
in
sbbl
mov
cmp
push
jl
mov
fdivrs
jae
xor
jmp
pop
or
lcall
push
lcall
or
pop
fs
push
fisubs
xchg
ret
fs
daa
pop
pop
ljmp
push
test
addr16
or
dec
mov
jno
jecxz
sub
adc
mov
arpl
and
std
push
jmp
repnz
sbb
adc
xchg
inc
aaa
jp
xor
pop
clc
xchg
cmp
jbe
stc
mov
loop
inc
sahf
lods
add
or
les
mov
jae
dec
cltd
mov
push
push
xor
movsb
xchg
xchg
cmpsb
push
cmp
into
lcall
or
add
jne
adc
mov
xor
cli
dec
popf
imul
jo
out
cmp
mov
js
fxam
fcompl
jle
js
das
add
adc
shrb
test
pushf
cmp
mov
clc
repz
or
dec
mov
mov
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
bound
dec
mov
add
cmovle
jge
mov
js
ja
dec
jle
loope
pop
xor
cmp
test
std
out
div
xchg
cmp
cltd
psubb
or
out
cld
mov
sti
adc
add
inc
xchg
std
lods
pop
jle
mov
pop
lods
aaa
fdivs
ss
mov
push
mov
jne
test
xchg
iret
sarb
enter
xchg
xchg
and
test
inc
mov
push
lcall
pop
clc
stos
pusha
jbe
insl
xor
cmpsb
es
cltd
sub
inc
xor
ljmp
xchg
cmp
adc
pop
dec
mov
nop
js
mov
cs
lret
dec
cmpsl
xor
loop
sbb
aaa
dec
jne
and
js
xchg
mov
mov
pop
sahf
push
jns
int3
std
push
int
lret
push
sub
and
xchg
adc
push
cld
pop
mov
gs
lret
fsubrl
sbb
popf
or
dec
movsb
inc
mov
testl
inc
mov
push
subl
add
mov
mov
sub
push
aas
iret
cmp
lds
push
sbb
mov
dec
cltd
mov
addr16
bound
lea
xchg
xchg
sub
inc
fidivrs
ja
push
mov
mov
unpckhps
fdivrl
cli
cmpb
push
ja
xchg
stos
mov
pop
xchg
push
add
std
pop
dec
and
and
jecxz
fiadds
lahf
sarb
mov
int
sarb
into
repz
nop
or
nop
pminub
repz
ficompl
lock
je
loopne
push
and
pmaxub
scas
stos
jbe
and
xchg
mov
les
scas
jmp
xchg
data16
fwait
mov
mov
cmpsl
fwait
add
lcall
xor
pushf
outsl
pop
xchg
ret
addb
cmp
mov
jg
xor
or
std
pop
or
nop
imul
fcmovnbe
dec
jmp
mov
ret
and
inc
dec
sbbl
repnz
jno
mov
jmp
into
xchg
add
sub
push
mov
sti
lret
lret
into
mull
xor
xor
add
rolb
push
fstl
pop
test
ret
jno
cmp
jp
ret
cmc
pop
mov
pop
fcoms
push
fstenv
jo
pop
or
iret
cwtl
jnp
cwtl
jl
jns
xchg
cmp
out
fdiv
int3
xchg
sarl
xchg
jecxz
sub
pop
or
xlat
add
mov
je
pop
pop
push
pop
push
xchg
sbbb
inc
mov
cmpsb
aaa
push
push
inc
ret
popa
and
mov
call
popf
fsubrl
mov
arpl
cmp
add
xchg
mov
cmp
push
sti
mov
lock
bound
outsb
into
cmpsl
sbb
fdivl
dec
out
or
or
repz
das
mov
jmp
ds
lret
cli
pop
xor
fs
sub
rcrl
jmp
loope
lahf
inc
addr16
dec
ja
mov
xchg
js
aam
add
cwtl
mov
jg
jo
push
or
in
cmp
shll
out
lcall
ljmp
adc
jns
mov
pop
fsubrs
pop
mov
loopne
xor
fs
outsl
lods
adc
insb
sarb
xor
clc
cs
push
out
jge
and
xchg
js
insb
daa
cltd
popf
fsubrs
adc
pop
pop
addr16
sbb
xor
sbb
inc
mov
sub
sbb
cmp
inc
xlat
int
or
mov
add
mov
jnp
and
inc
in
out
or
dec
loop
in
aaa
xor
div
mov
xchg
ds
jns
cmp
test
rolb
push
fiaddl
jge
inc
roll
mov
bnd
enter
pop
xchg
mov
push
movl
push
mov
pusha
cmp
pop
mov
lods
inc
sub
pop
dec
mov
cli
dec
mov
xchg
mov
mov
test
pop
mov
push
negl
sub
shl
lret
in
adc
jp
mov
aam
imul
std
in
jl
cwtl
test
xor
pop
cmc
daa
mov
mov
jo
xor
scas
jle
xor
lahf
ja
in
and
ficoml
les
lret
daa
stc
outsl
out
dec
or
sub
ret
mov
fsubp
sahf
out
js
test
add
popa
xor
in
mov
jae
pop
sub
fimull
aam
cmp
mov
rcl
into
add
mov
xchg
mov
sub
xor
jl
inc
xor
inc
rcl
loop
cli
jo
int
xchg
lea
jnp
pop
push
test
mov
aas
testb
nop
insl
pop
mov
add
mov
pop
les
mov
jb
pop
xchg
mov
in
jns
ds
rol
in
xchg
mov
in
push
mov
add
scas
and
aad
mov
arpl
out
outsl
movsl
pop
push
push
mov
sbb
neg
in
shrb
cmp
xchg
mov
loop
mov
test
mov
add
push
adc
or
sub
jp
and
out
fadds
cmpsl
and
push
mov
rcr
xchg
sbb
leave
movsb
mov
xor
inc
bound
jmp
jecxz
aam
inc
xlat
fdivs
xor
aas
outsb
jp,pt
jge
popa
in
pushf
dec
xlat
lret
scas
out
in
repz
pop
mov
out
push
popf
mov
adc
or
xor
cmp
dec
or
test
std
fsts
cmp
int
inc
sub
loope
loope
inc
xor
inc
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
pop
mov
invd
add
btr
pop
xchg
arpl
filds
mov
ret
xor
movsl
mov
incl
gs
jle
fnstcw
jle
push
repz
mov
pop
cmp
das
insb
rcl
das
mov
mov
cmp
push
and
fmull
lock
cmpsb
into
dec
lcall
ret
mov
mov
add
aas
idiv
pop
sub
outsl
xchg
push
aas
scas
add
adc
fsqrt
xchg
mov
pop
cmp
ss
sub
jns
mov
leave
xlat
dec
imull
dec
lea
arpl
scas
cli
mov
mov
out
daa
orb
in
xchg
lret
sti
dec
xor
pop
fistl
pop
call
cwtl
jle
mov
sub
rcrb
mov
pop
imul
mov
cltd
mov
sbb
add
lea
cmp
sub
push
push
aad
lahf
std
add
push
push
dec
inc
dec
stos
in
inc
clc
clc
cmp
xor
rorb
aad
imul
popf
lds
sbb
in
adc
imul
jecxz
xchg
mov
xlat
sarb
ror
xor
add
int
repnz
lret
cmpsl
arpl
les
mov
adc
stos
sub
and
pop
jmp
mov
lods
imul
hlt
pushf
cwtl
xor
jge
into
in
push
fbstp
inc
sbb
insb
popf
imul
lods
imul
add
cmp
push
out
mov
adc
xor
mov
add
fdivrl
sub
outsl
push
jnp
sub
sbb
push
arpl
pop
mov
jno
scas
movsb
sbb
xor
add
rcll
or
cmp
adc
xor
sub
je
inc
and
push
in
fisubrs
mov
out
mov
inc
adc
dec
push
sahf
gs
shll
push
daa
rorb
fdivr
ret
cli
aam
push
divb
jnp
dec
mov
arpl
in
cmp
jp,pt
cmpb
adc
jg
aaa
rcrl
ja
mov
rorl
adc
lcall
xor
pcmpeqd
xor
mov
or
movsb
mov
mov
scas
clc
sub
ss
lods
push
sub
sub
cltd
out
mov
int3
int
inc
mov
in
negl
mov
sub
leave
xor
data16
sti
aaa
add
pop
test
cld
fucomip
stos
insl
sub
xor
ja
add
and
sub
sarl
scas
sbb
pop
cmpsl
adc
data16
cli
int3
sbb
mov
dec
mov
frstor
sub
and
in
jmp
sub
or
pop
jae
int3
inc
aad
and
jecxz
leave
pop
push
daa
jp
sub
xchg
pop
xor
inc
int3
frstor
push
or
fld
ljmp
inc
iret
jbe
imul
ss
outsb
push
test
xlat
cmp
pop
test
pop
ficoml
int
push
cs
sub
clc
push
loopne
popl
movsb
leave
xor
pop
loope
nop
call
movsb
aas
lea
iret
inc
xchg
sub
inc
adc
fidivrl
jle
inc
sbb
fnsave
mov
xor
inc
out
repnz
push
push
xchg
jg
movsb
stos
dec
mov
jmp
mov
imul
call
xchg
lret
imull
ja
lods
movsb
mov
jmp
push
rcll
js
out
lock
mov
xorb
movl
arpl
out
rclb
insb
mov
jecxz
rcll
cmp
or
jecxz
das
lds
push
push
ds
pop
xchg
push
stc
movb
sub
loope
fs
loopne
repnz
std
mov
mov
xor
add
icebp
imull
jmp
scas
sbb
xchg
iret
mov
fs
rcll
rolb
dec
mov
ljmp
sbb
pusha
xchg
out
int3
pop
cmc
mov
inc
jns
sbb
addr16
cmp
data16
std
adc
sar
cmp
push
icebp
rol
sbb
rcl
ss
rcl
dec
clc
dec
mov
rclb
sti
jns
pusha
fsubs
pop
rcrb
pop
add
test
sbb
mov
inc
or
jnp
mov
or
dec
add
mov
jg
and
fldcw
aam
xor
inc
lea
push
bound
add
xor
mov
sbb
clc
inc
push
sbb
mov
or
sahf
sahf
sbb
xchg
cmp
loopne
cmp
lock
lock
sub
je
jge
jae
pop
gs
xchg
jg
xlat
jl
fisttps
mov
add
repz
aad
rorb
bsr
sub
testb
repz
sbb
add
imul
jns
fistps
fadd
lock
pop
cmp
mov
xchg
xor
mov
ss
les
inc
dec
sahf
push
push
add
scas
js
and
pop
mov
xchg
jle
imul
pop
push
test
jp
les
mov
mov
loop
mov
mov
fistl
adc
adc
jo
jne
arpl
xchg
mov
xor
dec
repz
fwait
aas
pushf
clc
xor
xlat
mov
or
pop
push
iret
and
fsubrs
loope
lret
mov
shlb
shrb
mov
dec
test
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
btc
jl
arpl
sbb
xor
push
jle
lds
sbb
pop
fdivs
cmp
es
xor
or
lds
lret
dec
jl
test
or
lret
and
push
adc
inc
jp
cwtl
jno
mov
xchg
js
bound
rolb
test
filds
push
les
inc
jb
add
jo
mov
sahf
shrl
daa
push
cmp
cwtl
gs
shlb
aad
mov
lret
lret
mov
inc
loopne
pop
jo
aam
das
mov
jnp
sbb
sarb
dec
and
out
lcall
push
frndint
dec
pushf
repz
mov
lea
mov
sub
int3
mov
push
xorl
call
add
and
pop
adc
pop
test
mov
cltd
or
jno
push
in
xor
js
fbstp
xchg
mov
cmp
stc
or
sub
jl
insl
ljmp
adc
sbb
cmpsl
jle
push
jb
add
scas
mov
push
movsl
icebp
shl
xchg
push
das
mov
lahf
nop
adc
pop
and
outsl
addl
xlat
pop
dec
jb
jo
and
inc
xchg
adc
std
outsl
idivb
mov
adc
xchg
outsb
mov
andb
pop
das
or
mov
enterw
adc
sub
mov
stos
adc
or
inc
pop
mov
fildl
sti
loopne
pop
inc
push
cmc
stos
bound
mov
mov
insl
cmp
cltd
pusha
pop
jbe
fidivrs
lahf
mov
imul
and
cmp
xchg
hlt
pop
adc
cmp
xchg
push
sub
test
jns
xchg
loope
add
call
in
mov
adc
ret
test
aam
cmp
aad
push
push
aaa
cli
pop
add
push
aad
out
sub
jmp
cmp
sbbl
movsb
push
lea
jl
stos
xchg
call
or
mov
popa
iret
pop
js
mov
cwtl
add
movb
faddp
push
pop
aam
inc
push
and
test
cwtl
push
cmp
icebp
ds
cltd
mov
add
or
das
sbb
into
stc
fwait
pmulhuw
adc
call
lea
lret
test
inc
cmpsb
pop
pushf
mov
jns
stos
fstpt
rcrb
dec
jecxz
push
dec
xor
sbb
shrb
mov
lods
pop
shr
mov
mov
outsb
or
xchg
imul
mov
mov
shl
mov
sahf
mov
push
xor
fidivrl
imul
rclb
mov
sbb
xchg
xchg
ret
mov
leave
sbb
shlb
sbb
inc
push
xchg
jp
cld
jecxz
movsb
outsl
sbb
or
lea
jo
in
fs
adc
add
fld1
pcmpeqd
xor
jmp
inc
mov
arpl
mov
outsb
mov
pop
xor
mov
push
xchg
ror
leave
pushf
pop
int3
fdivrl
stc
sub
dec
xchg
xor
mov
lcall
fstps
outsl
add
je
fdivrp
pusha
jg
mov
pop
jae
sub
jno
sahf
fwait
test
lret
leave
out
negl
xchg
mov
ror
mov
leave
gs
push
add
push
xchg
in
aas
adc
mov
ret
repnz
js
dec
rorb
inc
or
pop
clc
lds
lock
pop
fildl
movsl
pop
lods
jmp
pop
mov
les
sbb
dec
mov
ret
dec
adc
jmp
inc
loope
xor
add
cmc
lea
call
aaa
inc
adc
sub
pop
mov
add
sbbb
xor
sub
cmp
push
setnp
cwtl
push
test
test
push
mov
or
inc
xchg
ljmp
test
fstps
mov
arpl
iret
das
jl
incl
je
cld
lret
xor
pusha
adc
mov
arpl
jecxz
push
dec
mov
out
sbb
add
push
fs
add
out
lods
mov
cmp
loope
cli
mov
ds
scas
sti
mov
mov
into
roll
das
and
cmp
and
fbld
mov
repz
and
lock
jmp
cmp
call
push
shlb
pop
loope
loopne
adc
data16
mov
sub
pushf
or
dec
cltd
leave
mov
fistpll
pushf
insl
jle
enter
mov
adc
fdivl
test
jg
and
xchg
mov
xchg
jne
out
adc
or
xchg
jne
cmpsl
fdivl
xchg
inc
sti
xchg
gs
inc
insl
aad
or
sbb
xor
js
jo
mov
mov
pop
in
cmc
and
inc
push
sbb
cmpb
dec
repnz
out
jne
test
rolb
or
in
lea
mov
add
int
in
arpl
dec
add
add
dec
xor
cmp
xlat
lods
lea
xlat
js
adc
sbb
adc
or
orl
jge
dec
scas
dec
fwait
stos
pop
push
sbb
into
in
jnp
aaa
insl
test
test
pushf
jl
push
faddl
js
xchg
sbb
lret
fwait
sub
std
jne
mov
sub
iret
and
cmp
repnz
dec
xchg
jle
fmull
aas
addr16
dec
mov
ja
pop
mov
mov
mov
pop
pop
xchg
pop
jecxz
xchg
dec
and
test
dec
sub
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
jmp
push
invd
add
setnp
ljmp
sahf
inc
xchg
fwait
jmp
pop
push
mov
cmp
add
xchg
loope
pop
jecxz
sbb
fs
xor
push
or
mov
jo
cmpb
stos
inc
or
subb
sti
jne
adc
cmc
jl
test
pop
mov
sbb
outsb
jns
shlb
into
sbb
inc
ror
icebp
inc
test
test
mull
ss
aas
push
mov
pop
clc
loop
divl
out
clc
sar
adc
iret
push
clc
jnp
mov
sti
mov
into
mov
aas
lock
test
and
xchg
repnz
add
cmpl
inc
jge
aad
push
adc
dec
add
dec
jle
push
std
shrl
into
push
nop
xlat
lds
mov
imul
arpl
lods
lea
xchg
add
int
es
pop
dec
mov
cmc
std
mov
or
xchg
xchg
leave
insl
sbb
scas
cmp
mov
pop
dec
push
xchg
ljmp
mov
scas
mov
jmp
out
cmpsl
jnp
call
sub
sbb
fisubl
sbb
push
xchg
outsl
xor
adc
dec
dec
mov
mov
and
idivl
sub
mov
jg
into
mov
lods
nop
sub
cmc
xor
negb
cld
and
js
xchg
sub
adc
mov
cld
ljmp
loope
je
mov
push
adcl
jmp
test
xchg
gs
mov
lods
jbe
add
stos
hlt
in
or
or
xchg
cmp
xor
pop
stos
lock
push
pop
rol
xor
imul
ss
test
out
xchg
push
aas
or
jns
mov
sbb
xchg
push
xor
in
pop
fidivrl
insb
das
cmpsb
bound
or
aad
inc
je
sbb
scas
inc
jmp
dec
dec
dec
pushf
sbb
sahf
repz
mov
xchg
insb
xchg
sub
jnp
sub
dec
push
inc
xor
xchg
sub
andl
inc
cmp
ljmp
mov
push
ret
movsb
movsl
mov
mov
inc
or
jnp
cltd
xchg
push
mov
or
xor
xor
enter
cmc
cltd
push
cwtl
test
test
adc
fists
xchg
aaa
adc
idivb
sub
xlat
movsb
mov
cltd
push
adc
jbe
lock
xchg
scas
xor
mov
pop
es
ret
cmc
icebp
push
in
stos
jne
sbb
test
cwtl
stc
sub
xchg
dec
mov
lods
cwtl
add
sub
pop
rorb
in
jecxz
fs
call
leave
pop
nop
adc
mov
popa
push
mulb
movsb
mov
imul
imul
push
movsl
out
lahf
andl
pop
dec
fstpt
dec
lret
jecxz
imul
jmp
cltd
mov
pop
push
mov
push
pop
jbe
jp
add
dec
add
xchg
mov
xor
adc
cmp
movsb
pop
push
je
clc
repz
jp
rcll
sbb
xchg
jae
cltd
adcb
aas
jns
mov
sbb
and
ret
gs
adc
aad
xor
aaa
mov
sub
insb
dec
xchg
notb
stos
mov
leave
repnz
out
aas
mov
in
les
pop
les
mov
xchg
repz
into
xchg
mov
pusha
adc
pop
stc
inc
fstl
sbb
ss
out
aaa
jne
mov
fwait
nop
cmp
mov
cltd
aad
jle
lahf
inc
frstor
aas
jae
addr16
ret
mov
mov
cli
jo
push
jp
or
inc
sbb
add
inc
icebp
iret
pop
and
adc
out
push
out
les
in
pop
and
adc
notb
shlb
int3
push
cmpsb
inc
or
leave
lock
in
jns
pusha
jo
mov
fsts
adc
cmc
lea
imul
movsl
cmp
lret
daa
jo
pop
movsl
push
fwait
jp
push
mov
mov
popf
data16
outsb
loopne
data16
mov
dec
ljmp
xor
or
pop
hlt
adc
dec
ret
lea
imul
jno
dec
lret
sahf
out
adc
fistps
rcrl
xchg
dec
mov
mov
add
into
sbb
jnp
aam
cmp
cmp
mov
pop
sbb
imull
dec
decl
insl
mov
je
subl
xchg
cmp
cwtl
dec
xchg
aam
pop
scas
mov
mov
loope
cli
ja
adc
mov
lahf
test
out
stos
and
jge
push
loopne
fnstenv
stos
add
sub
or
notl
fcomip
jno
push
scas
movsb
iret
into
inc
pop
or
je
popf
fwait
and
imul
loopne
xchg
test
hlt
push
xchg
push
inc
loop
push
mov
push
or
aam
mov
shll
add
pop
mov
or
iret
loope
stc
rcll
movsl
pop
cmpsl
sub
sbb
rolb
loope
mov
xchg
das
push
cmpsl
or
mov
jge
outsl
inc
std
call
test
add
mull
xchg
sub
scas
push
popf
cmp
xor
adc
dec
jecxz
test
call
bound
add
fmull
leave
sbb
jg
adc
mov
out
cmp
push
pushf
add
leave
les
push
lahf
cmpsl
addr16
loop
and
xor
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
out
gs
dec
invd
add
pmuludq
pop
movl
cmpsl
leave
in
adc
mov
or
loop
out
xchg
ds
mov
mov
aad
int3
xchg
pop
shll
loope
dec
cmp
xor
adcb
dec
cs
pop
fidivrl
add
xor
icebp
xchg
xchg
ds
cmpl
jb
mov
nop
adc
imul
mov
loopne
mov
sub
test
cmp
imul
cmc
cmc
sbbb
xchg
fs
cmp
fdivs
push
out
and
mov
mov
cld
leave
insb
outsb
daa
fsubl
mov
outsb
pop
orl
out
ljmp
add
mov
pop
cmpb
loop
loop
sbbb
sub
clc
pop
imul
xchg
pushf
sbb
ss
cwtl
mov
aad
xor
inc
mov
sbb
xchg
and
ljmp
cmp
dec
dec
imull
sbb
in
sub
sbb
xor
sbb
gs
mov
test
lret
mov
mov
jne
rcll
pop
dec
aaa
sub
xchg
sbb
pushf
cmc
mov
mov
jle
lahf
mov
lea
fucom
mov
movsl
je
std
in
shr
pop
sub
imul
rcr
popf
lods
and
ljmp
dec
lahf
mov
jns
jg
data16
insb
addr16
hlt
push
paddusb
sub
push
cmpl
sub
js
xabort
nop
dec
mov
cs
xchg
lcall
iret
ds
cmp
push
fwait
add
sub
imul
and
dec
lea
shlb
inc
shrb
shrb
cwtl
jo
dec
in
dec
jno
mov
xlat
sub
sub
icebp
push
rol
sbb
out
sar
outsl
cmp
nop
pushf
ljmp
pop
sarl
movsl
dec
test
fcomps
sbb
psubsb
icebp
repnz
daa
dec
sub
or
pusha
loopne
jb
mov
out
sbbl
sub
daa
jl
sub
mov
add
mov
sti
mov
mov
das
imul
jp
jns
cli
mov
xchg
repnz
in
adc
mov
imul
filds
shrl
popf
shll
mov
into
sub
daa
pusha
out
sbb
and
in
jns
fcmovnbe
div
cmp
add
popf
into
dec
jmp
divb
mov
nop
lret
dec
xchg
xchg
jecxz
mov
mov
xchg
xchg
xchg
fsubr
sarl
mov
and
and
add
das
xchg
xchg
cld
push
fstp
mov
rcrl
jmp
mov
push
test
push
mov
sarl
mov
ret
sbb
loope
mov
mov
pop
jno
es
mov
dec
mov
push
decl
arpl
push
pop
xchg
dec
out
data16
rcll
mov
ret
fnsave
lahf
jmp
cld
cmp
rorb
mov
rcr
enter
sub
lret
daa
outsl
adc
notb
out
pop
adc
lods
lret
inc
jmp
xor
jno
mov
mov
out
test
ja
test
mov
and
mov
pop
loopne
popf
in
push
stc
xor
and
jmp
inc
fwait
test
mov
test
sbb
ret
sub
in
xchg
imul
xchg
sub
xchg
cli
mov
mov
js
sub
jge
inc
mov
xchg
inc
fildll
jecxz
and
sbb
adc
pop
enter
sub
jbe
dec
or
inc
push
stos
mov
push
mov
cltd
out
jns
fwait
mov
das
adc
sub
adc
fisubrl
nop
clc
add
sub
xchg
xor
lret
dec
outsl
cmp
js
cs
je
jo
arpl
mov
push
loop
popf
push
xchg
testb
adc
dec
test
jae
sub
cmpb
jns
sbb
mov
out
push
test
mov
xor
add
mov
shl
pop
inc
add
push
insb
dec
cld
in
xchg
jno
scas
lcall
lock
popf
lods
fnstenv
cmp
xor
shll
and
mov
lods
and
sbb
in
das
cmpb
inc
pop
jo
cwtd
dec
hlt
dec
test
lahf
add
repz
cld
ret
xor
iret
pushl
aas
insl
movsb
clc
xor
cmp
mov
xchg
mov
ds
adc
pop
test
push
fidivrs
or
movsl
mov
inc
push
mov
xor
xchg
xchg
push
out
add
outsl
test
pop
sub
add
adc
cmp
bound
nop
mov
test
test
adcl
xor
fdivrs
xor
add
call
pop
inc
fdivs
jns
pop
cmp
pop
sbb
into
pushf
jb
lcall
in
mov
iret
adc
mov
cmp
xchg
pop
cmp
mov
jmp
push
push
push
cs
std
imul
and
jns
mov
mov
or
pop
mov
jns
push
push
leave
gs
stos
inc
mov
imul
in
ficompl
mov
fadd
pop
inc
pop
stc
nop
push
xchg
xor
js
adc
cmp
inc
or
xor
push
fdivs
push
gs
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
setae
push
xchg
adc
jle
sub
sub
int
popf
mov
loopne
aas
jo
push
rcrb
cmp
push
pop
pop
enter
jb
push
add
xor
dec
int3
push
lock
xor
lret
cwtl
cs
jmp
mov
add
inc
cmc
mov
xchg
ja
lret
cmp
dec
out
xlat
fwait
insb
cmp
movsb
xor
insl
divl
xchg
clc
inc
and
sbb
clc
mov
xor
adc
inc
mov
loopne
sarl
cli
xlat
dec
neg
fs
mov
inc
gs
lcall
scas
lock
out
cwtl
out
and
cmp
pop
gs
add
cwtl
xchg
dec
movsl
sbb
ljmp
pop
ja
pop
xchg
mov
out
sbb
mov
mov
sbbl
lds
pop
and
inc
pop
push
dec
stos
and
shll
mov
aaa
mov
daa
pop
nop
frstor
int
lods
clc
fistps
insl
in
xchg
maxps
pop
aad
cmp
inc
sub
ret
es
je
jb
loope
cmp
iret
xchg
mov
pop
dec
sub
clc
pop
lret
xchg
mov
sub
mov
inc
movsb
xor
cs
add
ret
mov
mov
ficomps
pop
and
icebp
xchg
ds
stos
mov
pusha
inc
mov
adc
push
and
ffree
bnd
or
push
popf
mov
inc
ljmp
push
cmp
xor
aad
jp
rep
ret
jns
sahf
mov
ja
call
pop
dec
pop
ljmp
inc
je
push
mov
pop
xlat
inc
ds
mulb
daa
jecxz
orl
xor
adc
je
inc
jecxz
in
hlt
imul
mov
adc
cmp
out
mov
inc
mov
in
flds
nop
mov
mov
xchg
fistpll
mov
iret
arpl
fucom
cmp
or
imul
dec
dec
mov
shl
js
je
lea
nop
push
cltd
xchg
xchg
sbb
xchg
mov
aas
or
or
rol
ljmp
repz
mov
hlt
insl
or
stos
les
movsl
sub
subl
test
push
mov
or
add
mov
lods
fstps
jb
popa
shr
loop
fidivs
or
fadds
xchg
add
pop
fdivl
cmp
push
adc
fists
mov
or
xchg
outsl
sbb
cmp
xchg
xchg
jb
sub
sbb
mov
in
dec
or
xchg
mov
xor
pop
mov
pop
lret
inc
xchg
repnz
into
je
xor
out
and
lock
sbb
add
mov
push
mov
movsl
and
fsubrl
scas
clc
imul
mov
ja
cwtl
jecxz
dec
mov
jg
mov
out
and
sbb
xchg
dec
jl
add
jo
lahf
pop
std
popf
cmp
jo
lret
sub
adc
pop
mov
adc
shrb
dec
mov
mov
fadd
imul
repnz
xchg
xchg
in
ret
sbb
sbb
cltd
nop
xrelease
mov
ja
shll
jg
xorb
ffreep
mov
inc
sarb
jg
daa
je
mov
sbb
push
mov
inc
out
std
fmulp
fcmovnbe
shll
add
push
xlat
adc
push
xchg
loop
jo
sahf
daa
cmp
testb
add
jge
dec
sahf
loopne
call
es
jne
in
dec
sub
push
loop
or
insl
and
push
pushf
popa
scas
andl
and
aas
cli
mov
cli
xor
mov
adcl
jne
fistl
inc
xchg
aam
and
mov
xchg
insb
jge
rcll
fdivs
notb
repz
fisttpl
mov
repz
add
ret
arpl
lret
sub
mov
jle
inc
mov
add
lds
loopne
cmpsb
ja
lcall
subl
fidivs
xor
adc
iret
cmp
push
cmp
cmp
es
pop
pop
ret
cmp
das
add
ficompl
xor
adc
mov
xlat
lret
xchg
dec
add
pop
fstps
adc
scas
test
cmp
je
jmp
out
add
int3
mov
push
xor
dec
mov
inc
mov
adc
into
jns
add
fwait
movsb
xor
out
movb
stos
inc
aam
fisttpl
repz
shrb
jmp
mov
sub
pop
call
sarb
lock
xchg
in
lret
je
out
ret
mov
xchg
xchg
cmp
sbb
lret
mov
mov
mov
stc
pusha
xchg
jp
hlt
dec
jmp
inc
idiv
decl
jbe
lahf
cmp
sbb
test
pop
fistl
jp,pt
pop
mov
outsl
cwtl
insl
addb
clc
adc
in
add
sub
fwait
dec
ljmp
xchg
jb
mov
pop
sub
pop
xchg
pop
aam
out
jle
mov
or
in
out
stos
sub
mov
add
sbb
clc
lret
adc
aas
mov
mov
loop
jp
mov
jecxz
jp
mov
mov
cmp
fstpl
popa
xchg
in
je
xchg
pop
in
notb
mov
in
pop
adc
cmp
imul
shlb
sbb
mov
pop
and
stos
push
adc
jecxz
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
unpcklps
lock
invd
add
movntps
in
enter
imul
jbe
lahf
dec
insl
pmullw
into
imul
pop
xchg
ret
add
int
xchg
mov
decb
mov
repz
in
lock
sub
xchg
cmpsb
xorl
das
inc
aas
in
jmp
ja
and
cwtl
popf
pushw
sbb
pop
or
mov
adc
aaa
sbb
adc
fs
lahf
fadds
cwtl
negb
adc
pop
push
xchg
dec
pop
imul
ljmp
mov
sbb
outsl
and
pop
jb
push
cwtl
xlat
push
flds
add
mov
leave
hlt
jmp
ss
or
fisubl
int3
subb
pop
fwait
mov
xchg
sbb
sbb
push
test
xchg
push
test
mov
mov
fidivs
and
push
jge
pop
sub
mov
out
sub
jp
icebp
out
in
mov
les
xchg
sti
repz
repnz
aam
movsb
cmp
dec
xchg
mov
cld
mov
mov
into
push
jge
andb
pop
inc
jb
pop
sarb
popf
testl
mov
test
sahf
fcmovne
std
inc
adc
inc
es
fs
sub
outsb
repz
add
adcb
sbb
inc
sub
test
pushf
sarb
mov
ffreep
sbb
loop
out
inc
aaa
mov
ljmp
mov
hlt
mov
cmp
dec
loopne
sbb
xchg
pop
fucomp
shlb
dec
lds
jmp
mov
pop
jbe
aam
sub
mov
fistl
mov
call
or
shl
jl
sub
int3
push
xchg
ss
js
pop
sarl
shlb
sbb
xchg
notl
mov
faddl
inc
mov
in
jmp
jbe
cmc
mov
je
leave
imul
lret
sbb
outsl
fnsave
test
inc
hlt
stos
mov
xlat
xor
jp
mov
int3
movsb
aas
or
ljmp
and
xor
sub
and
mov
xorb
stc
cmc
sub
test
push
test
test
loope
mov
xor
and
sbb
loopne
push
fdivl
adc
addr16
pusha
hlt
cmp
jg
aaa
popa
fcoms
xchg
dec
popf
adc
dec
cmp
arpl
xchg
jb
pop
dec
xchg
test
out
scas
mov
jo
jo
jge
or
shll
add
rorl
into
test
push
loop
sub
mov
xchg
jnp
loopne
dec
xor
jo
ret
data16
lock
adc
hlt
cmp
mov
int
pop
pmaxub
std
jne
xor
xor
mov
lahf
sub
ds
nop
test
cmpsl
out
adc
push
out
cmp
add
lods
sbb
sub
and
inc
int
xchg
sub
icebp
push
and
out
xchg
inc
sbb
push
inc
mov
xchg
fcomps
scas
cmp
pop
jge
sub
cwtl
mov
sub
out
push
mov
push
insl
es
fs
mov
outsb
add
and
inc
adc
imulb
js
mov
push
xchg
bound
in
push
inc
leave
imul
mov
aad
loop
nop
mov
leave
inc
mov
push
mov
sti
in
ds
adc
dec
int3
test
jo
aaa
addr16
lods
jo
or
movsl
imul
aaa
out
mov
or
lcall
jl
inc
dec
or
mov
or
cmp
lock
cwtl
jl
icebp
je
dec
decl
movb
int
aas
loop
dec
fstsw
jg
mov
and
jge
fs
ss
xor
arpl
scas
and
nop
push
jg
sub
add
andl
lods
testb
pusha
sub
jb
mov
mov
mov
rcr
mov
les
das
cmp
add
in
jns
scas
jg
mov
jns
stos
cmp
outsl
fildl
push
faddp
insl
mov
push
dec
mov
insb
push
les
outsb
loope
cmc
xchg
jb
jno
dec
paddusb
mov
sub
rorb
and
insb
jge
sub
xor
jns
adcl
mov
sbb
inc
aaa
out
ljmp
xor
test
jge
xchg
int
js
or
imul
and
xchg
jbe
ss
icebp
and
mov
lods
test
push
and
hlt
mov
adc
xor
push
testl
mov
in
sub
adc
fdiv
out
rorl
nop
daa
test
leave
mov
mov
in
pop
pusha
cmp
pop
test
in
call
sub
or
mov
mov
cltd
cmp
push
mov
outsb
push
cmpsl
jl
fwait
sub
in
xchg
mov
pop
mov
subb
push
inc
mov
aad
pusha
dec
imul
mov
in
and
aam
inc
js
mov
mov
sub
jp
dec
in
adc
xor
fst
sbb
xchg
rcll
and
dec
mov
iret
fcoml
jo
xor
or
cmp
adc
xor
jle
jne
adc
cli
iret
out
inc
push
dec
cltd
dec
pop
mov
push
fstpl
jno
outsb
mov
ljmp
cmp
addr16
mov
imul
dec
cld
outsb
fisubrs
loop
out
or
cmp
std
push
sahf
gs
jo
std
add
roll
xchg
jb
sarl
stos
insl
or
cmp
push
jo
nop
out
jp
insl
mov
fucomp
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
loopne
out
mov
pfrsqrt
add
orb
mov
test
das
sbb
ficoml
xchg
adc
sbb
sbbb
mov
cmpsl
imulb
mov
mov
addl
push
jno
stos
jge
addr16
int
jae
push
mulb
sbb
pop
loope
mov
test
push
push
inc
ss
sub
imul
mov
adc
out
add
dec
cmpb
cmp
lods
inc
nop
ja
or
push
push
jb,pn
dec
stos
icebp
pop
je
loope
adc
fcoms
inc
dec
popa
mov
hlt
push
imul
loop
push
js
mov
mov
mov
aaa
and
pop
mov
add
std
mov
xchg
fwait
push
dec
cmpsb
cltd
fildl
and
push
sbb
mov
arpl
lret
pop
add
or
pop
ud0
es
repnz
repnz
jb
pushf
in
mov
out
cwtl
hlt
repnz
repnz
aas
adc
pop
sbb
cmp
push
movsb
es
mov
cmp
mov
or
inc
add
test
leave
dec
je
dec
push
mov
and
idiv
or
dec
ja
and
push
test
ljmp
xchg
jmp
aad
orb
scas
and
enter
cmp
jno
pop
std
add
pop
lock
addr16
test
sub
mov
packssdw
or
and
mov
cmp
test
fmul
in
test
in
xlat
addr16
adc
filds
mov
inc
outsb
je
rcrb
cld
mov
mov
sub
jge
aad
sbb
mov
or
xchg
cli
xchg
cmpsb
cltd
add
inc
mov
or
or
push
push
xlat
xchg
push
and
in
xchg
iret
pop
rclb
push
xchg
and
sub
dec
sub
or
outsb
mov
js
shll
and
outsl
ret
fmul
mov
out
jg
jns
lods
push
subb
pusha
loope
dec
cmc
xorb
or
or
cmp
jb
sbb
jno
xchg
mov
sbb
cmpsl
sub
and
jbe
inc
arpl
and
out
xlat
dec
mov
sahf
mov
or
cs
jbe
xchg
enter
scas
movsb
movsl
sbb
cmp
xor
xchg
jge
lods
pop
popa
movsb
jb
xor
mov
sarb
inc
push
add
cmc
fadd
imul
mov
mov
add
xchg
mull
insl
xchg
cld
rorl
push
insl
and
aad
sub
or
out
sbb
sbb
leave
filds
aam
ss
sti
lds
jnp
push
leave
push
sarb
xor
push
pop
cmp
outsb
aad
int
jb
imul
repz
add
ljmp
iret
je
sti
ljmp
xor
pusha
fiaddl
sub
or
ss
loopne
outsb
jge
add
lret
pop
test
xchg
dec
sbb
iret
xchg
or
sub
bound
xor
out
pop
loop
inc
pop
pop
loope
push
ficompl
shrl
xlat
mov
loope
cmp
scas
push
imul
inc
sbb
movsl
jmp
xchg
add
xchg
lcall
xor
jg
fs
adc
mov
ljmp
jno
mov
mov
inc
movl
data16
push
or
xor
xor
adcb
lcall
popf
inc
push
rclb
insl
mov
mov
hlt
cmp
ret
adc
cli
dec
mov
xor
inc
ret
jns
movsb
add
xor
shl
dec
arpl
call
fisttpl
xchg
sbb
mov
pop
adc
fadds
cmp
cmp
inc
call
inc
repz
or
jb
cmp
rcr
mov
addr16
sbb
sub
popf
and
lods
adc
fwait
mov
jne
add
mov
imul
lock
rcll
push
fcoml
mov
test
cmp
js
mov
imul
mov
mov
jle
push
in
call
lods
push
mov
sub
mov
sahf
daa
mov
sbb
pop
xchg
rcrb
push
jb
ds
int
pop
dec
inc
imul
push
es
fists
adc
and
mov
sub
pop
sbb
out
out
loop
sbb
push
cwtl
or
in
scas
add
dec
std
js
call
sbbb
pushf
inc
dec
rcrl
add
cltd
insl
popa
and
jmp
push
nop
jb
push
movsb
adc
cmp
sub
jle
int3
aas
icebp
and
xchg
cs
data16
lea
inc
xchg
lret
movsb
loope
into
sbb
rorl
outsb
push
jp
jl
xor
jno
aad
fstps
dec
push
xchg
in
in
fwait
sahf
sbb
cmp
jecxz
lcall
loop
sub
popf
icebp
or
iret
sub
int
lods
nop
adc
mov
popf
lods
adc
insb
jne
mov
jb
inc
jmp
push
hlt
xchg
icebp
jg
push
ds
jp
mov
or
cld
aas
jae
addb
jle
mov
testb
sbb
dec
xchg
sub
xor
jecxz
in
iret
add
add
adc
lea
add
sbb
jne
add
incb
inc
jmp
leave
pop
sbb
hlt
or
ficoml
out
shll
aaa
sbb
scas
mov
repnz
mov
in
adc
int
aad
je
jge
or
xorl
push
push
sub
lods
and
leave
pop
fnstsw
shr
iret
or
sahf
jmp
popa
sbb
jbe
xor
dec
test
pushf
enter
xchg
movsl
dec
jns
sub
mov
jno
test
fidivrs
mov
test
and
mov
aaa
cmp
adc
ret
adc
sub
aaa
dec
inc
test
push
sub
push
test
sub
push
jmp
decl
xchg
inc
out
cmc
mov
jl
sub
scas
xor
lods
mov
loope
sub
xor
xchg
insb
jg
dec
mov
mov
mov
sti
lret
mov
fs
fld
adc
ds
mov
lds
xchg
sub
dec
cmp
cltd
pusha
xor
add
fwait
aas
shll
pusha
mov
cmpsb
xchg
mov
lret
aam
imul
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
pop
testl
gs
adc
add
lcall
orb
outsl
jmp
fwait
lock
int
imul
movsb
orb
test
mov
mov
and
or
aaa
test
ficoml
out
cmpsl
imul
sbb
xor
push
mov
sub
pop
hlt
hlt
lahf
andb
add
dec
and
popf
int3
adc
hlt
sub
rcrl
xchg
popl
stos
mov
stc
jnp
hlt
pop
popa
cmp
lods
aam
mov
inc
insb
adc
xor
or
in
cmc
notl
and
cmp
and
jp
test
xor
rorl
and
insl
mov
daa
mov
adc
arpl
mulb
cmpsb
dec
lret
ja
loopne
stos
inc
jo
dec
insw
fcmovu
push
in
fwait
or
leave
mov
fstpl
inc
cmp
jbe
inc
insb
inc
ror
iret
inc
movsb
inc
insb
pop
inc
aaa
jg
mov
movb
shrb
mov
fwait
aas
jns
in
push
mov
xchg
mov
fs
enter
inc
popa
push
lcall
or
outsb
call
out
sub
or
add
jecxz
repnz
sti
sub
pop
rorb
mov
jno
pushf
add
fildll
mov
cmc
repz
loope
lods
or
adc
gs
gs
adc
fimuls
mov
pop
imul
or
notl
mov
repnz
icebp
add
dec
xchg
repz
rcrb
xor
stc
shlb
dec
andl
outsb
dec
xor
sub
xlat
fisubrl
xchg
les
xchg
and
lock
data16
inc
xor
movsl
bound
xchg
cli
pushl
repz
cmp
rclb
adc
loopne
inc
or
mov
xchg
adc
xchg
add
dec
stc
adc
inc
repnz
fldenv
push
aam
push
adc
cmp
out
push
push
int3
insl
hlt
enter
push
imul
mov
dec
xchg
mov
and
shl
test
add
xchg
in
aad
jne
imul
mov
or
mov
stc
inc
pop
mov
pusha
mov
repz
push
loopne
pop
and
mov
push
int
xchg
or
sbb
sahf
hlt
pcmpgtd
repz
jb
test
jo
fs
ja
sub
sbb
hlt
xorb
sti
xor
cmp
ljmp
out
pusha
fcoms
mov
push
xchg
xchg
sub
xchg
jne
jo
xor
dec
push
cmp
push
sar
test
dec
add
push
and
push
sti
sub
jnp
out
mov
je
xchg
lods
loop
fidivrl
test
mov
jg
dec
in
sbb
ljmp
lock
push
cmc
cwtl
mov
enter
insb
aaa
and
sbb
mov
push
in
xor
xor
xor
sub
and
xor
push
pop
xor
pop
orl
addr16
adc
adc
sbb
sub
leave
sub
popa
jno
jb
xchg
cmp
mov
sahf
mov
pop
push
addl
jge
xor
sub
fidivrl
xchg
mov
xor
imul
mov
lods
jecxz
or
int
mov
jbe
sub
clc
shl
xchg
inc
xlat
mov
orb
sbb
or
lods
xchg
cli
cmc
notb
mov
adc
jno
addl
push
arpl
pop
fsubp
jbe
sub
cltd
cmpsb
pop
fistpl
cmc
into
adc
adc
inc
aas
cwtl
dec
or
stos
ja
mov
gs
adc
aaa
xchg
cltd
or
cmp
cmpsl
mov
out
jmp
mov
and
jg
fmuls
pop
arpl
fisubs
jno
mov
dec
jno
adc
inc
data16
xchg
push
lahf
inc
fcomip
mov
sbb
pop
mov
push
push
mov
into
divb
popf
pop
jmp
xlat
push
mov
adc
mov
dec
lret
xor
mov
jmp
sub
in
ficoml
xor
pusha
lcall
and
and
fimuls
lret
and
sahf
je
mov
daa
xor
iret
and
pop
jmp
adc
xchg
pusha
push
xchg
pushf
jge
add
mov
inc
xor
popf
shll
sbb
xchg
adc
aaa
add
mov
mov
sbb
loope
ss
jmp
push
push
mov
fstl
lods
mov
popf
xor
ja
imul
fcomp
mov
loopne
mov
pop
pop
inc
jle
ljmp
xor
les
dec
add
outsb
xchg
in
inc
xlat
ljmp
popa
cmpsb
cmp
jbe
mov
popl
xor
mov
mov
enter
push
stos
cwtl
stos
inc
fisubl
cmc
addl
pop
lods
int
cmc
mov
pop
mov
pop
cmp
xchg
fcompl
jo
lods
and
cmp
ljmp
pop
pop
aas
repnz
ficoml
jns
rcrb
imul
jo
leave
leave
inc
stc
ret
and
xchg
lods
popa
sub
inc
adc
add
mov
jns
bound
aaa
insl
push
xchg
shll
xor
leave
movsl
pop
add
mov
mov
inc
aaa
aad
add
pop
xlat
mov
fst
fwait
adc
mov
cmpsb
sub
adc
and
pop
mov
and
repnz
cmp
fbld
ret
inc
icebp
es
and
inc
into
mov
shr
mov
outsb
sub
mov
xor
jne
inc
ret
pop
xchg
loope
jns
jmp
xor
add
addb
aas
cli
or
add
sti
xchg
inc
xchg
outsb
in
mov
cmp
inc
sbb
aas
or
xchg
pop
mov
xor
push
stc
mov
negb
faddl
cmp
xchg
push
aam
fwait
das
lods
push
pop
sarl
inc
jne
test
push
and
stc
nop
cmp
icebp
cmpb
xchg
and
mov
dec
icebp
jg
iret
mov
sti
inc
sub
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
jecxz
rclb
mov
jns
std
cmpsl
stos
dec
mov
pop
bound
loop
outsb
faddl
sbb
filds
stc
cmc
imul
out
fbld
dec
pushf
or
jno
xor
ret
les
bound
and
push
jnp
jp
pop
sub
sbb
sub
dec
pop
dec
mov
push
clc
fidivrl
fucom
jae
shll
cmp
outsb
sahf
loope
mov
adc
sbbl
sub
lea
sub
cltd
inc
jmp
or
and
push
jne
hlt
jge
lahf
arpl
out
cltd
je
mov
xchg
cvtdq2ps
ret
pop
sarl
pushf
sub
es
mov
or
jns
fiaddl
push
mov
push
xchg
push
out
mov
xorb
jo
popl
aaa
rolb
in
mov
xchg
jmp
fcoml
nop
popf
mov
add
stc
jb
loope
push
jae
test
and
data16
mov
arpl
das
lahf
ljmp
xchg
jnp
loop
das
loopne
and
js
cmp
aad
out
push
inc
mov
cmp
mov
stos
jmp
rcrb
xchg
popf
fs
sub
out
pushf
jp
inc
mov
add
xor
test
sbb
lahf
out
lods
loopne,pt
popf
in
sub
mov
orb
adc
int
imul
mov
cli
or
push
xchg
ds
clc
inc
jo
inc
sub
sub
mov
mov
popf
shrl
sarb
data16
leave
add
repnz
or
fstpl
shrl
fcmovnu
lahf
xchg
mov
andb
ret
test
out
jp
imul
inc
imul
xchg
ret
sub
xor
fcoms
ret
nop
mov
ja
fists
les
pusha
or
xchg
cli
xlat
mov
rorb
xchg
in
mov
leave
xchg
in
inc
out
push
lods
js
mov
xor
xchg
lock
mov
int3
add
dec
xlat
dec
out
ret
jne
mov
aam
pop
mov
imulb
dec
pop
cmc
mov
mov
mov
daa
sbb
in
fldenv
fsubrl
mov
mov
inc
mov
nop
js
fs
dec
mov
xorb
push
sbb
les
add
das
out
or
adc
inc
mov
sbb
sbb
push
or
xchg
xor
add
call
pop
xchg
pop
leave
xor
repz
jnp
pop
jle
pushf
mov
fisttps
inc
sub
scas
dec
xlat
adc
out
stos
in
ljmp
cs
cmpsb
out
and
lock
enter
out
fs
inc
daa
or
pop
cmp
mov
xor
fldcw
fisttps
mulb
pop
mov
shlb
inc
dec
push
push
bound
std
dec
icebp
xlat
dec
scas
es
mov
pop
mov
outsb
stos
jnp
and
cmpsb
in
loop
mov
dec
lret
add
xor
dec
test
pop
andb
scas
movsl
fbstp
ljmp
dec
and
jns
fsubrs
add
insb
mov
xchg
daa
mov
xor
add
gs
sbb
mov
mov
xchg
ss
fdivrs
repz
xchg
jne
jb
push
in
dec
pop
jo
jge
adc
movsb
jns
xor
mov
dec
jle
lods
out
mov
leave
mov
mov
rcrl
std
and
mov
mov
iret
mov
mov
daa
dec
es
and
push
in
shll
clc
cmp
pop
mov
pop
lock
loopne
adc
loopne
jle
jnp
push
fwait
and
ficomps
lods
outsb
lcall
sub
adc
dec
push
sbb
mov
sub
xlat
dec
cmpsb
mov
call
inc
cmp
or
push
fisttps
mov
pop
xchg
aas
popa
aad
out
roll
imul
fs
xchg
dec
mov
pushl
shlb
jl
fisubs
sbb
std
sbb
jno
or
push
outsb
fwait
cmp
sub
and
cmp
push
fs
pushf
clc
das
push
and
test
aas
rcrb
arpl
out
sahf
or
cmp
push
pushf
subl
data16
inc
fildl
jmp
ficoms
jne
mov
pop
xchg
push
fwait
mov
fsubl
pop
cmp
inc
lahf
mov
mov
jne
jle
xchg
pop
xchg
imul
or
nop
and
rorl
mov
rorb
sbb
push
sbb
hlt
mov
xchg
out
aas
push
mov
push
cmp
push
or
adc
pop
mov
ror
orb
sub
sub
test
ja
out
mov
out
push
inc
pop
jle
mul
scas
and
add
mov
fcomp
push
and
and
pop
mov
nop
lret
rorl
repz
imul
xchg
mov
or
prefetch
sub
outsl
dec
shll
pop
fwait
mov
aas
pusha
out
inc
ret
ret
mov
or
adc
sub
cmp
adc
cs
jle
fcmovnu
lret
ja
imul
sbb
inc
and
in
xlat
lods
push
loope
xor
sbb
rcrl
fisubrl
test
data16
pop
jne
lds
aas
test
push
push
ds
outsb
xchg
cwtl
cmp
mov
fwait
adc
mov
push
jg
jg
std
loop
data16
movsb
cmp
xchg
sbb
clc
sbb
fmuls
mov
xor
fdivl
jne
mov
mov
xchg
aaa
mov
pushf
xchg
es
mov
push
sub
push
adc
testl
js
es
or
mov
popf
jnp
stos
andb
pop
mov
adc
test
aaa
insl
outsb
fmul
xchg
jmp
jge
mov
out
xor
rorb
hlt
pop
pop
jp
repnz
test
imul
or
adc
xchg
notb
shll
rcrl
and
aam
or
dec
and
xchg
mov
gs
pushf
mul
mov
fs
sahf
aas
push
xchg
lahf
pop
cmp
pop
pop
addr16
int
ret
jo
jno
out
ret
push
sahf
lds
out
push
inc
jmp
hlt
je
dec
test
pop
cmp
pop
xchg
data16
fwait
xchg
pop
icebp
xchg
jne
and
test
xchg
mov
adc
jmp
into
add
or
cwtl
js
notl
mov
movups
and
and
leave
xchg
add
inc
out
test
sbb
push
xchg
xchg
cs
xchg
pop
nop
adc
mov
in
or
xor
xor
jecxz
leave
fcoms
push
sbb
shlb
dec
lret
and
mov
ret
add
sub
xchg
lahf
push
js
imul
xchg
mov
ret
pop
mov
sbb
ret
jmp
inc
push
adc
fsub
push
cmovg
incb
push
dec
mov
pop
mov
mov
out
test
and
cmpl
sub
fwait
mov
dec
jo
xchg
mov
hlt
sub
xor
icebp
stos
call
xchg
jno
mov
mov
test
adc
repnz
mov
cs
pop
mov
mov
rcl
pusha
loope
rcrb
jmp
sahf
xchg
xor
sbb
mov
xchg
pop
mov
add
lret
adc
add
lret
jmp
mov
loope
outsb
fdivl
sub
popa
int
jns
loopne
rcrl
std
pop
js
push
lods
enter
dec
gs
lret
bound
stc
xchg
insl
pop
cmpsb
mov
xor
mov
jne
testb
pop
push
push
jl
pop
dec
sbb
sbb
mov
out
dec
loop
adc
xor
xor
fidivl
add
inc
iret
inc
sbb
jae
adc
mov
lds
dec
int
push
dec
jp
xchg
push
neg
gs
lahf
add
jmp
xchg
jo
ljmp
icebp
and
adc
clc
mov
jg
mov
xchg
dec
dec
adc
fwait
push
fisttpl
les
sub
push
in
mov
add
imul
mov
xchg
push
adc
push
ljmp
and
lods
int3
fstpl
test
or
scas
aaa
jmp
mov
insb
cmc
mov
sbb
test
mul
xchg
inc
sub
sti
cmp
pop
dec
push
push
ds
adc
jno
movb
or
and
pop
movsb
jecxz
add
push
ret
or
jp
fstps
inc
rcrb
repnz
xor
insb
push
pushl
das
aas
dec
jo
mov
int3
in
loop
xlat
jp
imul
adc
cmp
xor
push
aas
push
inc
mov
and
in
ljmp
mov
mov
aaa
sarl
sahf
jnp
pop
push
fwait
pop
mov
xor
xlat
add
gs
in
sbb
mov
gs
in
imul
lock
dec
mov
icebp
dec
js
xchg
lods
mov
pusha
pop
movsl
adc
shlb
add
mov
lea
inc
push
jb
cli
cwtl
sbb
inc
or
movsb
lahf
stos
pop
and
cmp
xorb
cmp
aaa
jne
gs
lds
shl
movsl
fwait
pusha
inc
pop
sbb
lret
fwait
dec
dec
lret
lock
mov
daa
push
sbb
test
imul
sub
cmp
test
lahf
in
jmp
xchg
mov
insl
addl
test
cli
es
aas
ljmp
sbb
dec
movsl
push
repnz
cltd
jb
ja
xor
pop
xor
pusha
and
jnp
aas
loope
arpl
pop
in
inc
inc
out
das
add
pop
mov
mov
insb
mov
shr
js
je
jne
scas
cmp
call
inc
cmpsb
xlat
out
gs
stos
or
dec
jle
mov
aad
push
mov
or
dec
jns
add
sbb
test
divps
pusha
gs
mov
cmpsb
add
leave
sti
int3
es
out
add
mov
xor
ret
fs
test
push
xchg
adc
popf
mov
mov
xchg
cbtw
lret
mov
sbb
daa
or
insl
mov
and
in
fisubl
mov
aas
push
mov
pop
fisubrs
mov
fildll
lcall
cs
aaa
mov
xchg
xchg
imul
mov
in
fcmovnbe
sbb
lret
mov
or
mov
add
or
sti
fists
push
lahf
cmp
or
jg
stos
out
mov
movl
mov
xchg
or
fs
pop
scas
jne
xor
sahf
stos
stos
cmpsb
adc
pop
push
cs
dec
pop
mov
sbb
arpl
aam
std
or
mov
sub
pop
jns
sub
xchg
ret
push
fisubs
xor
inc
xchg
pop
and
fsubrs
mov
aad
fucom
insl
inc
pop
sub
aam
das
loopne
nop
pop
sub
sbb
mov
sub
and
int3
cmc
pushl
push
sahf
or
or
cmpsl
outsl
into
xchg
or
xor
cmp
push
mov
imul
out
lret
rcll
jecxz
ss
lret
push
mov
dec
xor
in
std
fnsave
sbb
ss
lahf
xorl
setns
ror
mov
arpl
cmp
test
das
shrb
inc
in
xchg
push
cmp
push
mov
sbb
inc
push
jp
mov
cli
aas
xor
cmpsl
out
add
sti
clc
mov
icebp
cs
loopnew
cmp
push
cld
pushf
ja
dec
jl
jnp
arpl
retw
pop
sarl
lahf
cmc
test
xor
mov
lock
mov
cmpsl
imul
lock
lret
push
lock
xlat
call
adc
push
ds
rcrl
les
je
cs
push
aam
jo
push
push
inc
jo
clc
leave
loopne
shr
adc
insl
dec
dec
sbb
mov
rcrl
push
in
bound
fsubrl
xor
lock
sbb
cmp
es
mov
add
xor
movb
ret
in
xor
lds
icebp
das
mov
dec
cmpsb
jno
mov
mov
xor
mov
cmc
mov
push
xor
jmp
out
int3
xor
push
dec
xchg
outsb
inc
fstl
mov
inc
pop
dec
out
fcmovnb
repnz
ret
ret
or
dec
pusha
lods
in
and
pusha
mov
rolb
std
mov
push
cmp
pop
cs
fsubrs
jno
hlt
xchg
push
xor
je
scas
adc
xchg
fisttps
mov
outsl
orb
lea
and
sbb
xor
mov
je
jno
jge
jns
pop
lret
gs
mov
gs
pop
adcl
data16
bound
pop
movsb
sub
out
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
add
adc
and
dec
mov
push
or
insl
xchg
call
iret
adc
imul
xor
test
xor
cmpsl
addr16
pop
push
dec
inc
jae
cld
mov
mov
call
sbb
test
out
add
aas
adc
pop
mov
in
mov
in
push
dec
mov
jmp
insb
mov
out
sub
insb
push
mov
jne
popf
dec
push
inc
jbe
int3
push
cmp
fstpl
mov
loopne
inc
fcoms
cs
out
push
push
dec
iret
pop
cmp
rorb
cmp
rcrl
cmp
add
or
enter
ror
andb
mov
fwait
cmpb
mov
jo
adc
sti
mov
jmp
xchg
fadds
dec
fs
jns
xchg
gs
pop
popf
push
mov
popf
popa
mov
dec
gs
add
fcmovb
repz
pop
mov
ljmp
arpl
insl
jg
and
scas
rol
sarb
or
call
fcoms
clc
dec
mov
jmp
xor
pop
inc
xor
lret
sbb
cmp
into
mov
pushf
out
jbe
pop
jecxz
dec
lcall
jno
fisttps
pop
lods
add
fistpl
cmpsl
movsb
movsb
and
jbe
jmp
cmp
push
xchg
xor
mov
faddl
rolb
pop
sarb
mov
cltd
pop
or
lret
lds
xor
jmp
repnz
in
jle
sbb
out
arpl
dec
mov
into
movb
popf
test
or
xor
out
mov
nop
pop
mov
jge
je
enter
ja
test
sub
addr16
mov
int
sub
push
add
inc
lcall
inc
inc
das
push
sub
cli
adc
popa
pushf
cmpsl
pop
sub
mov
mov
lea
jne
adc
divb
push
cs
push
and
mov
dec
cld
ret
adc
mov
xchg
stos
mov
ss
dec
imul
xchg
rclb
aad
add
in
xchg
cwtl
cs
dec
push
push
mov
inc
movsl
pop
cltd
jae
popl
push
testb
sbb
outsl
orl
scas
mov
pop
dec
loopne
mov
int3
fwait
lret
mov
cmp
adcb
in
mov
loop
mov
js
adc
add
mov
cmp
stos
push
out
push
and
pop
or
into
sub
je
stos
adc
inc
test
xchg
lods
sub
in
bound
insl
enter
fdivrs
shll
clc
lds
negl
ja
sbb
fldenv
mov
sbb
sub
scas
fucomp
mov
btr
mov
rcl
ret
sub
jg
push
cwtl
mov
push
xchg
or
sti
push
push
mov
mov
cmpsb
insl
pushf
sbb
and
jle
popa
jg
cmp
aad
add
cli
fbstp
rclb
movsb
ror
mov
sbb
cwtl
ds
lret
sub
popa
and
pusha
xor
call
or
sbb
mov
cmpsl
lret
add
std
fimuls
push
inc
jl
cwtl
dec
cmp
mov
pop
js
push
addr16
scas
stc
add
inc
lret
add
fwait
push
xor
testb
dec
dec
in
hlt
decb
inc
aad
jbe
xchg
adc
pop
gs
scas
movsl
sbb
fbstp
adc
lcall
test
push
sub
addb
icebp
ret
add
fucomip
mov
sbb
repz
mov
rorb
lods
arpl
sub
test
clc
pop
xchg
shll
cmpb
aaa
adcl
fisttpll
pusha
jg
adc
xchg
into
pop
pop
fisubrs
xchg
rorb
sbb
jno
shlb
sbb
add
sub
sbb
dec
and
movhps
sub
inc
popf
add
mov
or
gs
xchg
mov
mov
mov
or
shrl
dec
mov
lahf
mov
or
jecxz
and
lds
ja
cwtl
ja
fstpl
jns
inc
les
and
push
push
jo
inc
add
les
ja
cmpsl
sbb
cmpsb
add
xor
dec
ret
jns
mov
mov
bound
incb
jb
lods
inc
or
out
sti
aad
push
pop
mov
out
inc
outsl
xor
stc
inc
outsb
fldt
lds
push
pop
push
mov
ret
loope
aaa
dec
pusha
hlt
sbb
pop
or
cmpl
pushf
inc
push
fst
ficomps
sbb
ds
xlat
add
roll
or
pushf
lds
pop
adc
mov
shll
or
mov
insl
insb
shlb
mov
hlt
xor
pusha
into
jmp
xchg
or
arpl
cwtl
and
mov
dec
xor
push
cs
adc
cmp
mov
mov
popf
pop
mov
mov
and
mov
jne
mov
sbb
iret
addr16
fildll
ret
addb
push
repnz
imul
fs
testl
jle
xchg
add
xor
cmp
jbe
inc
pop
leave
jle
repnz
inc
dec
pop
add
gs
add
cmp
push
in
nop
rcl
sub
cmp
adc
cmp
out
mov
sub
xchg
jne
cmp
and
adc
jge
mov
mov
repz
and
push
outsl
dec
fnstcw
iret
es
xor
jp
notb
bound
mov
xchg
push
mov
mov
jl
outsb
aam
mov
sub
std
pusha
inc
out
add
inc
inc
or
mov
inc
inc
loope
or
xor
ja
popf
fsubs
loope
xchg
out
bound
lret
lret
lret
mov
fisttpl
insb
push
inc
push
pop
mov
sub
call
les
test
lods
scas
push
pop
pop
aaa
xor
mov
mov
sbb
cmp
mov
repnz
out
fists
cmp
jnp
push
push
jecxz
mov
cld
cmp
jmp
dec
or
sbb
sub
pusha
jg
popf
pop
inc
pop
mov
dec
fwait
xchg
pop
int3
orl
test
or
xor
jge
scas
mov
jp
into
jne
mov
lock
decb
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
cli
iret
push
xchg
ficoms
mov
jl
out
push
jo
rcl
jae
sbb
aam
xlat
inc
or
jg
cmp
cli
mov
test
and
rcll
int3
dec
xchg
ss
add
dec
add
push
xchg
std
enter
inc
xchg
gs
fildl
movsl
popa
sub
les
mov
add
adc
sbb
pop
mov
bnd
ljmp
lea
mov
dec
and
cmp
mov
out
sbb
push
mov
sbb
testl
and
ret
xchg
inc
shlb
sti
je
fst
push
cmp
xchg
push
pop
adc
stos
test
cmpsb
out
dec
and
push
xor
lea
mov
movsl
ss
movsl
shrb
addb
jg
out
jle
jge
push
nop
inc
test
xchg
dec
aam
add
xchg
jecxz
dec
and
nop
jae,pt
popf
iret
push
ja
je
rorl
jne
shlb
and
mov
dec
adc
js
or
inc
push
dec
mov
int3
sub
xor
xlat
add
add
xlat
scas
shl
dec
pop
and
jbe
dec
jbe
jns
imul
push
xchg
jge
push
mov
cltd
aas
and
fsubrs
testb
fisubl
stos
lock
ja
sarb
cmc
int
imul
popa
cmp
dec
pop
xor
sahf
lahf
gs
pushf
js
xchg
push
mov
lods
adc
xor
cmp
bound
mov
mov
inc
aad
mov
sub
cmp
mov
xlat
out
xlat
adc
push
mov
xor
xchg
jb
mov
lods
aaa
pop
xor
push
jmp
push
push
or
mov
push
jmp
cmp
push
xchg
jle
cli
dec
pop
dec
and
leave
push
in
mov
movsl
outsl
dec
out
inc
xor
pop
adcl
sub
cmp
jb
lock
jno
mov
cmpl
xor
mov
call
and
pop
lret
sub
mov
sub
int3
mov
dec
push
int
movsl
jp
aam
cmp
dec
xor
loopne
sarb
inc
rorb
sub
sub
sub
mov
push
icebp
sub
sbb
ljmpw
push
int
jnp
fwait
pop
fdivrl
jp
xor
adc
nop
sub
ljmp
push
std
pop
aad
jae
aas
add
jns
and
imul
or
addb
out
les
jl
sbb
jge
mov
push
xchg
jo
adc
lock
or
sahf
sbb
aad
jno
add
imul
ja
pop
out
sti
sbbb
add
or
xchg
repnz
mov
mov
sbbl
lret
jp
mov
ss
lock
mov
mov
in
xchg
push
mov
fcomp
xchg
add
scas
add
ret
jae
aaa
adc
inc
and
jge
nop
out
adc
ds
pop
es
xchg
das
fs
push
jge
aas
into
pusha
notl
mov
loopne
jp
jns
gs
xor
sub
movsb
in
cs
lret
repz
or
pop
dec
jbe
aas
dec
jl
mov
mov
jbe
or
mov
icebp
xor
push
cli
jo
insl
sar
sub
sbb
xor
loope
or
dec
jnp
pop
addr16
clc
cmp
pop
adc
ret
repnz
sahf
icebp
pop
mov
fwait
sub
movsl
dec
and
mov
scas
xchg
loopne
out
and
xchg
call
cmc
add
mov
push
pop
and
sbb
dec
xchg
mov
int3
ljmp
push
sub
outsb
jns
movups
mov
mov
push
aas
and
cltd
xchg
fistpl
xchg
lock
adc
lods
or
test
aas
aam
stos
sbb
jne
adc
je
imul
add
xchg
mov
adc
sti
mov
inc
xlat
aaa
cs
ljmp
sub
nop
fidivl
and
dec
inc
add
mov
mov
push
icebp
lahf
mov
jg
loop
rorb
mov
dec
stos
fs
hlt
fildl
in
sub
push
pop
pop
mov
pop
sbb
push
orl
sbb
inc
jecxz
aas
mov
sbb
inc
cmp
mov
pop
mov
pop
movb
jb
push
inc
xchg
movsl
roll
in
outsb
popa
ds
cmp
sbbb
in
out
pop
pop
sbb
sbb
mov
inc
fmul
xchg
mov
movsl
or
fisttps
fstps
incb
mov
mov
in
pop
out
sub
pop
xchg
pop
lret
in
mov
sbb
sub
add
out
push
sub
sub
addl
push
adc
sub
cmp
pushf
jns
push
add
mov
push
fldl
in
pop
push
outsl
xchg
mov
into
lods
pop
jl
mov
shll
bound
push
mov
insb
mov
imul
scas
mov
dec
sbb
mov
lods
xor
adc
pop
or
sub
dec
fnstsw
iret
stc
stc
cmc
xchg
mov
dec
cmc
cmc
lcall
leave
and
inc
or
stos
mov
jge
outsb
insl
mov
jle
daa
mov
add
add
insb
pop
iret
stos
xor
addb
xor
dec
in
sub
pop
jno
popa
movsl
in
mov
imul
iret
push
mov
xor
adc
mov
dec
stc
cmc
pop
fists
std
mov
mov
mov
jecxz
les
shrb
aad
decl
adc
add
hlt
add
xlat
mov
fbld
hlt
jge
cwtl
jo
and
jne
mov
idivb
jno
loope
ret
clc
dec
adc
mov
add
mov
xchg
mov
push
mov
inc
pushf
dec
fcoms
jl
cmp
xchg
jle
add
dec
cmp
stos
fdivr
or
xor
lods
xor
mov
pop
cmp
mov
xor
mov
push
lret
in
pop
pop
cs
xor
pop
and
or
mov
pop
popf
sub
fsubrs
mov
cmpsb
sbb
mov
pop
movsl
fcoms
xchg
xor
mov
xchg
or
cmp
inc
cmp
dec
pop
stos
jl,pn
xor
hlt
inc
inc
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
cmp
movb
mov
lar
jno
pusha
push
dec
or
daa
jmp
mov
out
mov
imul
jns
and
imul
frstor
lahf
pop
lds
mov
mov
xor
push
pop
push
out
js
xor
push
xchg
xchg
jmp
cld
shl
fs
pop
xor
lret
push
xor
pop
out
cmp
call
out
leave
rolb
xchg
lock
js
or
push
cli
xor
push
push
or
xor
push
jae
sahf
sahf
cmpsb
or
loopne
or
aas
jmp
or
push
fbstp
loope
lret
inc
mov
jmp
add
imul
outsl
cwtl
jbe
sbb
dec
dec
cmpsb
sbb
sub
push
sbb
pop
fidivl
jp
dec
xor
xor
in
mull
popa
sub
pop
jmp
push
dec
insb
out
jle
sub
cmp
inc
cli
xchg
and
bound
lahf
push
jne
inc
lret
ljmp
aam
xor
shll
cmp
out
mov
cld
pop
bswap
jmp
aaa
arpl
fidivrs
xchg
mov
icebp
xor
es
pop
adc
int
mov
aam
xor
sub
outsb
inc
inc
and
lock
decb
xlat
mov
jmp
add
out
mov
stos
stos
into
fiaddl
push
xlat
sbb
cmp
cld
std
cmp
insl
test
notb
cmpsl
push
sbb
inc
out
mov
arpl
bswap
cmp
test
lock
push
out
mov
stc
mov
adc
push
lock
es
sbb
xlat
out
std
jae
cltd
adc
sub
dec
pop
pop
or
dec
cmpb
mov
mov
movsl
int
inc
scas
or
pushf
jb
push
stos
adc
mov
lds
scas
out
and
psraw
js
outsl
and
mov
xorl
xchg
dec
cmp
ret
lahf
push
dec
shrb
lds
xchg
pop
jns
popf
stos
inc
cmp
in
add
in
jnp
js
pop
hlt
test
cld
xchg
test
sub
adc
push
out
adc
daa
sbb
shl
cld
fimull
push
sub
into
xor
inc
jb
int3
cmp
daa
in
xchg
test
shll
or
outsb
mull
les
dec
or
xlat
fnstcw
dec
sbb
or
mov
jecxz
out
addr16
cmp
clc
push
dec
adc
les
outsl
pop
pop
and
mov
lock
xchg
ds
mov
test
addr16
les
ja
or
dec
dec
aas
aaa
add
mov
and
orb
in
jmp
nop
push
and
fdecstp
idivb
jge
pop
sub
inc
mov
xlat
push
xor
and
out
xor
rclb
pop
mov
add
inc
cmc
cmp
mov
out
or
cld
cmpsb
dec
pop
dec
mov
ret
xlat
rcr
sbb
adc
cmp
and
jo
pop
and
xchg
test
out
pop
and
ss
mov
xor
fisubrl
shr
aam
inc
fsubl
aaa
sbbb
divl
jne
lcall
mov
cmp
arpl
in
mov
out
add
cmp
jmp
jmp
adc
pop
cmp
inc
jae
aas
outsl
test
cli
popf
in
subb
nop
cld
adc
sar
imul
movsl
stc
js
jl,pn
pop
sahf
mov
or
sbb
add
add
and
mov
and
cmp
dec
dec
fldcw
aas
ret
pop
pop
std
or
pop
ret
lcall
sti
rcrl
dec
pop
adc
jbe
adc
add
fcoms
push
mov
es
mulb
mov
inc
ja
or
fs
shll
jmp
jmp
dec
mov
mov
andb
mov
lret
pusha
dec
in
test
out
sub
test
inc
fs
push
mov
jb
jns
and
adcl
loop
jge
or
mov
xor
loope
lock
xchg
orb
sbb
fdivrs
add
or
inc
cmpl
mov
mov
xchg
sub
xor
pop
sub
push
inc
mov
stos
pushl
dec
sbb
loope
pop
insb
ret
out
fldt
repz
pop
rol
fdiv
mov
xchg
push
ja
sbb
popa
or
sarl
fcmovnbe
mov
mov
xchg
sti
pop
fwait
mov
cld
pop
jmp
into
movsl
imul
gs
movsb
mov
insl
lret
addb
insl
fisttps
fs
pop
cld
mov
xor
mov
dec
mov
repnz
sarl
xchg
jb
jne
pop
mov
push
movsb
sbb
fdivp
test
negb
bound
loope
inc
in
movl
test
xchg
and
pushf
arpl
mov
ljmp
ret
jp
int
sbb
pop
mov
ror
cltd
lea
fmuls
push
xchg
jns
cs
push
movsb
subl
stos
inc
lcall
insb
aam
mov
xor
push
incl
mov
call
ret
and
hlt
imull
testl
push
data16
rorl
cmp
loop
cmovnp
push
inc
faddl
xlat
sbb
scas
sbb
mov
mov
es
cmp
lret
mov
sub
add
mov
jbe
aas
test
and
jge
dec
fadd
sub
add
out
clc
scas
adc
and
addr16
hlt
push
cmp
sbbl
mov
mov
pop
inc
and
dec
jle
outsl
push
repnz
in
and
sub
xchg
cli
cwtl
jne
js
adc
scas
cmpsl
pop
cmc
subl
dec
cmp
sbb
push
mov
sar
mov
fcmovne
mov
in
fnsave
inc
ret
mov
dec
sahf
push
jb
jae
mov
inc
sub
je
mov
xor
dec
and
out
or
lahf
adc
adc
inc
mov
iret
pop
mov
pop
loope
shll
lods
and
int
sbb
pop
lods
and
movsl
jbe
ret
xchg
xor
movsl
jns
cld
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
inc
mov
pop
mov
packsswb
mov
loop
jne
je
inc
and
mov
test
loope
mov
xor
lods
xchg
fidivl
or
sbb
mov
outsb
mov
jge
mov
dec
push
pop
push
rcrl
jmp
enter
jnp
mov
dec
stc
hlt
cmp
repz
daa
cmpsl
in
or
gs
cltd
call
pop
cmc
push
xchg
out
call
jb
pop
sub
xchg
addps
jno
and
aaa
or
in
mov
xor
ret
push
sahf
stc
int
pop
sti
js
dec
int
ds
stos
int3
mov
cmp
push
sti
fs
je
es
xchg
jmp
ret
or
neg
xlat
scas
mov
test
mov
out
in
pop
jbe
inc
mov
sbb
rclb
push
dec
mull
add
mov
lds
ja
push
sarb
clc
stos
or
inc
ljmp
mov
push
or
add
or
fst
pop
xchg
or
push
sahf
dec
loopne
pop
adc
dec
cld
pop
push
mov
into
add
loope
shlb
jmp
cmpl
out
es
lds
jg
pop
inc
adc
mov
jnp
cs
xchg
pop
repz
outsl
pop
adc
clc
pushf
mov
sbb
lcall
ljmp
test
pop
sbb
ret
pop
in
cmp
je
inc
pop
mov
mov
dec
xor
cltd
push
sub
jae
push
addr16
mov
pop
or
loop
out
call
push
arpl
in
and
or
sbb
xchg
cmp
into
mov
scas
cmp
hlt
sub
mov
xor
adc
jb
push
sub
sbb
repnz
dec
mov
lahf
sbb
lods
xlat
arpl
and
test
cmpsl
scas
lock
stos
jb
inc
mov
mov
sbb
xor
pop
data16
cwtl
fwait
loope
shl
add
add
pop
and
test
jbe
mov
and
dec
sub
xchg
pop
insb
or
pop
mov
sub
lret
and
std
loop
jno
ja
notl
mov
add
dec
addr16
jp
decl
add
imul
insl
cmpsl
inc
and
bndldx
popa
push
stos
add
mov
sub
imul
adc
push
call
inc
shl
ja
out
adc
cs
jmp
stc
outsl
gs
test
xor
sbb
enter
repnz
and
mov
push
add
push
xor
gs
add
je
xchg
add
xchg
xor
popf
fdivl
sti
jno
inc
out
cmp
mov
mov
rep
nop
or
pushf
cmp
lret
sti
lea
push
mov
xchg
out
insl
push
cwtl
cmp
pop
jb
dec
pop
push
out
dec
arpl
sub
cmp
inc
out
push
mov
test
jg
andb
fcmovnb
cmp
sbb
dec
cmc
cmp
push
adc
mov
ret
or
sbb
push
pop
pop
insb
inc
xchg
xlat
stc
push
aam
fstpt
scas
pop
jmp
ret
mov
cmc
jge
sti
es
fdivl
imul
jge
mov
adc
pusha
dec
jnp
dec
push
mov
lods
jo
data16
sub
movsb
and
ret
and
std
cmp
mov
add
inc
icebp
push
inc
add
mov
cmpsb
mov
cmp
jne
outsl
hlt
enter
int
scas
push
xor
mov
hlt
mov
outsl
hlt
push
dec
scas
or
sub
lods
add
lcall
dec
mov
popw
push
jecxz
add
dec
aaa
sbb
clc
fstpl
loope
aaa
xchg
les
xor
cltd
mov
and
xchg
sbb
nop
jae
cmp
repnz
inc
or
insl
maskmovq
divl
sbb
iret
repz
sub
loopne
imul
addr16
mov
sarb
mov
repnz
or
cs
push
fistpl
mov
mov
mov
and
cli
shrl
xchg
and
xchg
mov
out
inc
daa
add
pop
sub
jne
mov
jp
js
jl
add
outsb
stc
out
xchg
jnp
jbe
xor
or
add
push
pop
sarl
sub
aam
out
inc
push
xchg
sub
xor
loop
and
pusha
dec
push
pop
xchg
lcall
pop
jnp
sarl
aad
cmp
mov
mov
add
out
add
pop
pop
push
in
loope
setbe
repnz
inc
inc
or
add
sarl
test
push
push
cmc
cmp
lea
and
cli
out
dec
cmpb
shll
jg
jl
push
mov
mov
clc
mov
mov
sub
adc
dec
sbb
cmc
out
jle
dec
pop
int3
inc
jae
fsubrp
inc
outsb
mov
push
push
dec
mov
inc
stos
push
mov
fwait
shlb
jnp
inc
pop
mov
leave
test
xorl
inc
cmp
ficoml
mov
push
xchg
ret
xchg
scas
mov
js
inc
mov
iret
push
out
pop
jp
aad
sub
xchg
ret
fnsave
mov
cmp
leave
loope
movsl
ja
int3
adcb
mov
aaa
and
stc
fwait
mov
and
insb
scas
adc
js
outsl
mov
xchg
cld
xchg
fdivs
xchg
inc
hlt
push
cmp
out
lods
inc
mov
jns
add
dec
xorb
push
js
xor
nop
pop
out
adc
fsubl
cs
xchg
scas
add
aam
adc
push
cmp
mov
or
dec
dec
pop
stos
adc
in
cmp
jnp
pop
aad
loopne
fcomps
leave
lcall
mov
or
push
push
xchg
sub
add
scas
gs
add
addr16
sbb
ja
sub
movsb
arpl
gs
or
sbb
fists
cs
fdivrs
in
in
outsl
outsb
mov
mov
std
mov
data16
mov
jo
bound
sub
or
jo
test
cmc
push
imul
xchg
xchg
push
adc
rorb
bound
xchg
es
push
cmpsb
jmp
cltd
gs
and
push
push
jbe
in
xor
dec
lods
jbe
mov
adc
imul
inc
adc
lahf
int3
test
outsb
mov
movsl
push
out
cmp
sub
mul
pushf
mov
sub
push
jae
out
sbb
shl
sti
rcrl
xor
and
jmp
jne
add
subl
xchg
jp
pushf
xchg
addr16
and
stos
popa
mov
pop
int
dec
ret
loope
lret
das
cmpsl
loop
cmp
test
inc
push
pop
movsl
cmp
dec
sbb
icebp
int
popa
sub
lea
push
mov
lods
cmp
lock
out
insb
pop
popf
lods
push
es
jle
mov
pop
pop
shll
push
xchg
lret
xor
add
push
cmp
mov
mov
sub
scas
data16
sub
xchg
fwait
inc
or
lods
xlat
pop
dec
repz
xor
mov
push
popf
xor
push
jne
push
cs
imul
push
divl
xchg
cmp
mov
mov
cmc
add
test
or
mov
jne
pop
nop
cld
mov
out
fsubl
lods
lret
test
jb
test
sub
mov
or
fdivl
mov
pushl
cmp
rolb
daa
adc
ret
or
aad
mov
pushf
ret
inc
sti
outsb
test
aad
push
push
add
jle
in
loop
out
nop
gs
xor
in
fbld
leave
xchg
mov
outsw
fwait
push
ljmp
dec
pop
fists
lahf
adc
or
imul
pop
btr
push
mov
orb
push
lods
movsb
in
push
and
mov
std
and
cmc
jnp
scas
out
gs
out
roll
imul
ljmp
xor
xchg
add
mov
int
add
or
pop
sub
jno
data16
nop
dec
pop
testb
jl
call
loopne
in
imul
mov
mov
add
cmp
pop
mov
movups
xor
mov
jle
sub
loope
roll
into
pavgb
pop
push
mov
mov
pop
lret
sar
xor
scas
mov
xor
sbb
push
jge
decb
lock
out
notl
icebp
jno
jbe
mov
hlt
and
mov
dec
xor
jle
je
repz
add
push
adcb
mov
push
adc
sub
sub
in
or
lds
cli
pop
or
xor
daa
fwait
adc
shrb
test
stos
movsb
loop
addr16
rcrl
sbb
sti
cwtl
call
call
lahf
add
out
fistpll
push
sub
push
dec
cmp
stos
lret
jecxz
push
loopne
fdivrs
add
mov
push
xor
ficoml
dec
push
cmp
mov
sbb
sub
jmp
pop
stc
inc
icebp
andl
jnp
cmp
pop
pusha
ljmp
int
mov
shll
out
mov
pop
lret
aam
push
cmp
idiv
mov
jl
movsb
stos
int
out
loopne
dec
mov
pop
mov
xchg
inc
testb
andl
push
das
sbb
loopne
scas
cs
popf
xlat
adc
mov
xchg
sahf
mov
movsb
sub
pop
pop
arpl
mov
inc
pop
shll
adc
adc
loopne
dec
add
jmp
or
mov
scas
xchg
pop
das
xchg
add
xor
popa
lds
jl
iret
sbb
movsl
outsl
xor
dec
sbb
pop
mov
lcall
jns
mov
icebp
jmp
in
fadds
movsl
and
in
std
mov
shrl
xor
jo
arpl
leave
and
sahf
sbb
mov
mov
inc
sub
stc
pop
out
lock
jb
jecxz
jmp
mov
jmp
fldenv
jp
lods
pop
lea
iret
cmpsb
or
jo
paddsw
sub
shlb
in
notl
aaa
std
sub
jmp
lds
pop
push
xchg
mov
push
push
outsl
movsl
jnp
into
push
addr16
mov
jle
popa
pop
xchg
fidivl
outsl
aam
add
push
inc
dec
dec
fstp
cmp
sbb
xor
cwtl
jns
negl
cmpsb
sbb
push
fidivrs
xchg
jmp
mov
cltd
movsl
xchg
icebp
inc
xchg
jg
push
sbb
imul
sbb
aad
push
mov
jo
outsb
push
cmp
ret
mov
outsb
out
mov
int
xchg
mov
inc
xchg
mov
cwtl
inc
push
sbb
dec
imul
dec
inc
pop
rolb
in
sub
xlat
sub
adc
add
sahf
jp
cmp
cli
mov
inc
pop
cwtl
xchg
fsubrs
xchg
out
bound
mov
cmpsb
jge
fdivp
into
xor
insl
mov
aaa
mov
inc
imul
loop
mov
lods
dec
rcrb
cwtl
or
or
push
loope
popa
mov
lods
aad
out
xchg
dec
sarb
mov
dec
call
push
sahf
adc
call
cmc
xor
mov
mov
jbe
lahf
aas
xor
push
cmp
inc
out
fsubrs
into
mov
push
sbb
dec
stc
and
shlb
out
sbb
pop
cmp
mov
std
dec
sbb
je
mov
or
shl
inc
cmp
and
dec
mov
xor
and
mov
sub
dec
jo
scas
imull
aaa
loope
fwait
dec
add
jmp
sqrtps
jno
cmp
int
test
cmp
mov
aam
cmp
xor
fcompl
andb
inc
jg
sahf
pusha
or
ljmp
cmp
lock
jae
sahf
out
inc
rolb
pop
jle
push
sub
jecxz
and
fnstenv
pop
push
std
fldl
std
out
push
cmp
jno
dec
xorl
cmp
jno
call
rcll
stos
mov
fdivr
mov
lret
test
fiadds
pop
imul
and
jmp
push
js
ss
dec
negl
lret
cs
push
sub
adc
inc
shrl
mov
lret
jb
and
inc
sbb
push
pop
sub
xor
ficoml
dec
call
test
mov
pop
xor
inc
sub
stc
xchg
jmp
shll
inc
xor
lcall
jno
mov
ljmp
insb
push
push
dec
stos
stos
int
mov
test
and
iret
sbb
inc
lods
fistpll
inc
pop
mov
hlt
xchg
sub
loop
pop
scas
ficomps
loop
out
pop
pushf
bound
fsubr
dec
in
jne
stos
cmp
or
lret
aad
cmp
and
and
test
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
dec
outsb
insb
xchg
js
adc
and
xchg
push
hlt
ja
imull
js
push
lcall
imul
scas
out
cmp
pop
adc
and
aam
dec
and
add
pop
sub
lods
test
std
mov
sub
mov
sub
sbbl
push
dec
outsl
add
adc
xchg
inc
jbe
out
fwait
insl
sti
pushf
scas
mov
sbb
int3
pop
in
in
movsl
or
test
in
or
inc
mov
pop
ffree
cltd
outsl
xlat
insb
lods
int
jo
push
repz
ret
jp
pushf
shll
out
jno
ret
push
pop
js
data16
sahf
inc
sbb
fcmovu
jne
pop
mov
int3
push
jb
rolb
mov
xchg
mov
xchg
das
push
adc
jl
shrb
pop
dec
int3
mov
idivb
xchg
lret
cmp
cmpsb
scas
lret
stos
aas
fildl
clc
iret
cmp
xor
enter
out
mov
sub
pop
lcall
out
mov
push
xor
dec
ljmp
sbb
lahf
bnd
sbb
mov
in
ret
inc
in
push
jmp
and
push
jbe
cwtl
rclb
or
add
sbb
pop
shrb
pop
pop
fcomps
pop
dec
dec
data16
sub
xor
push
dec
daa
mov
mov
mov
mov
jbe
fwait
cli
add
jne
xchg
xlat
sub
adc
bound
aad
jl
cwtl
dec
sbb
mov
or
test
jecxz
jne
jp
cmc
mov
test
sar
push
test
in
mov
sub
rcll
int
jo
sbb
test
jo
mov
in
xchg
mov
clc
ljmp
mov
insb
dec
sub
out
in
aad
icebp
mov
jl
into
ret
ja
fldcw
mov
lods
fnstenv
stos
push
bound
jle
imul
es
aad
or
faddl
sub
dec
sbbb
aad
std
mov
nop
push
sbb
je
push
je
stos
and
and
scas
inc
and
xchg
xchg
and
sbb
in
mov
sbb
leave
sub
jnp
lods
pop
cmc
rol
scas
push
fwait
mov
scas
and
jmp
dec
push
or
pop
in
mov
and
out
bound
fisttps
pop
and
mov
mov
and
out
ljmp
cmp
inc
add
push
clc
inc
inc
les
test
les
outsb
or
add
out
xor
test
cmp
movsb
fwait
mov
scas
scas
dec
sub
dec
pop
and
pusha
aaa
sub
mov
fwait
jno
jno
jmp
or
int
stc
sub
mov
pop
inc
dec
jmp
push
sbb
fs
cld
cmp
xor
test
pop
xchg
xchg
add
cmp
sub
fwait
cmp
or
popf
sbb
mov
int3
cmp
push
sarb
pop
int3
lahf
les
repnz
push
test
ds
xchg
call
pop
int3
lret
dec
cli
mov
dec
inc
in
push
movsl
sar
add
popa
jle
mov
test
adc
xor
sbb
sub
in
jg
scas
jmp
insb
cmc
dec
fimull
inc
call
adc
aad
into
rorb
stos
mov
jbe
enter
jg
push
sbb
dec
pop
enter
mov
add
pop
or
unpckhps
gs
fwait
mov
bnd
cmp
int3
adc
jns
popf
jmp
test
out
or
popa
mov
iret
jge
jecxz
or
cli
push
pushf
lret
frstor
and
lret
inc
inc
test
mov
addr16
outsb
xchg
cmpsl
xor
std
mov
les
mov
stos
testb
sbb
data16
xchg
popf
adc
xor
mov
ret
lcall
push
fcomp
leave
mov
mov
das
add
cmp
repnz
into
pop
out
mov
int
sahf
jno
cmovl
inc
ja
add
adc
js
lcall
push
imul
jp
js
fbstp
xchg
sub
lods
mov
inc
ja
nop
add
inc
out
fidivrl
adc
lret
imul
insl
mov
inc
lret
popa
repz
jge
arpl
sub
fcmovne
mov
mov
sti
rcr
lret
aaa
mov
popf
jns
dec
dec
pop
pop
pop
lcall
push
movsl
fbld
out
dec
shll
adc
das
push
cmp
adcl
outsl
jne
xchg
xor
lahf
ss
outsl
lock
inc
and
jge
cmp
mov
ficoml
lret
push
dec
xor
pop
pop
add
pop
mov
fsqrt
sbb
dec
popf
cld
jmp
test
nop
orb
sub
adc
into
ret
ret
test
and
repz
xchg
xchg
fstps
pop
pop
insl
add
clc
adc
pop
push
and
sub
repz
cld
pop
stos
jb
dec
mov
xchg
cli
popl
push
cmp
push
xor
movsb
sub
out
aas
aam
lock
adc
mov
dec
mov
movsl
inc
add
inc
mov
out
mov
mov
push
sahf
scas
push
cmp
add
int3
cld
add
fildll
pop
fisttpl
lret
into
aad
outsb
imul
movsl
lcall
hlt
shll
xchg
xchg
adc
mov
push
or
test
cld
and
into
out
out
jne
xlat
adc
je
les
pop
or
jmp
mov
out
add
mov
xchg
test
outsb
sub
aaa
pop
add
jg
xchg
pusha
movsl
jp
movsl
out
ficoms
jecxz
test
and
or
imul
lahf
addr16
int
outsl
cmp
push
data16
jo
xchg
pop
adc
xchg
cwtl
mov
xchg
test
fwait
movl
stos
mov
fisubrl
repz
push
xlat
test
push
insb
pop
int
out
mov
mov
leave
sbb
lods
xchg
cltd
gs
inc
mov
dec
gs
int
sbb
popa
hlt
jle
adc
jns
ret
in
xchg
inc
fisubs
jne
das
jge
mov
pop
out
sub
push
lret
notl
lret
sub
dec
orl
popf
jae
aam
les
in
or
sahf
sub
inc
xorb
mov
lcall
shrb
jns
or
pop
daa
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
jle
xchg
pfcmpeq
mov
xchg
mov
int3
das
shll
add
scas
iret
adc
push
cmc
dec
stc
loopne
fucomi
jle
repnz
out
xlat
adc
cwtl
cmp
insb
mulb
mov
clc
mov
es
inc
sti
inc
sub
push
sbb
mov
mov
mov
gs
pop
dec
mov
xchg
jno
shrl
or
add
sbb
pushf
push
lock
lock
ficompl
xchg
sahf
sub
and
add
sbb
mov
pop
sbb
mov
xchg
lods
lret
daa
xor
sub
fwait
sub
xor
add
insb
mov
das
and
add
jb
popf
lretw
fsubrs
pop
or
or
mov
or
cmpsl
lret
jp
pop
repnz
dec
jae
inc
test
xor
addr16
daa
pop
ds
repnz
repz
jnp
mov
pusha
iret
loope
lock
fstl
or
lds
enter
inc
add
xchg
jno
call
mov
inc
push
movsl
and
mov
arpl
mov
xor
sbbl
pushf
add
fbstp
inc
sub
inc
cmp
in
fsubrl
push
add
mov
mov
sbbl
popl
ret
cmp
mov
out
packsswb
pop
repz
xchg
mov
cmp
imul
std
or
leave
xor
sub
jno
and
scas
add
out
popa
lods
inc
mov
push
pop
or
fbld
aam
pop
jno
mov
pop
jns
push
xor
and
push
loop
push
repnz
and
pop
clc
loope
test
jg
push
xor
mov
stos
jbe
sub
adc
popa
xor
popf
add
lods
xor
pop
mov
and
push
lods
sub
or
bound
jmp
lds
sub
add
aad
int3
stos
jecxz
or
xchg
lock
call
or
pop
mov
sub
sub
add
aas
push
cmpb
pop
aad
out
push
push
dec
sbb
jae
lahf
jecxz
cmp
loope
out
mov
mov
gs
ret
clc
mov
aad
mov
dec
mov
popa
int3
xchg
loopne
jae
or
pop
push
icebp
cld
pop
lds
test
mov
nop
push
or
rclb
fcomps
push
leave
or
cltd
mov
pusha
mov
jns
or
in
mov
mov
or
pushf
pop
aad
mov
push
ror
push
test
inc
sub
mov
aas
sbb
popf
dec
cmc
loopne
outsl
pop
mov
xchg
cltd
cs
mov
sub
pop
in
insl
push
or
push
ja
in
nop
mov
jg
jae
idiv
out
jns
into
xor
xchg
jmp
fdiv
dec
ja
test
mov
test
cmp
stos
aad
sbb
pusha
adc
push
sbb
inc
push
dec
cmp
jno
mov
xchg
push
std
rcrl
xor
dec
xor
cltd
lock
cmp
mov
shlb
idiv
add
cmpsb
mov
iret
dec
jb
imul
push
push
add
sbb
out
data16
clc
pop
pop
jl
shlb
shrd
icebp
ret
aaa
lret
xor
mov
jb
call
lock
dec
orb
inc
aad
inc
fwait
sbb
stc
xchg
in
or
and
jb
pop
hlt
pop
jl
cld
lret
mov
push
shll
mov
or
mov
ljmp
push
xchg
ds
das
shlb
repz
insb
lds
xchg
arpl
notl
jg
push
sub
cwtl
push
decl
jl
gs
ret
fsubl
in
mov
out
xor
mov
inc
fdivrp
enter
push
mov
fidivs
push
fisttps
cmp
adc
iret
sub
rep
enter
xlat
ror
add
leave
mov
pop
les
add
clc
mov
ds
jne
nop
pop
int
mov
dec
lahf
mov
dec
push
and
into
lret
dec
outsl
jbe
inc
je
fidivs
loope
xchg
pop
cmp
out
pop
fstpt
jo
ss
pushf
and
jns
sarb
les
adc
ljmp
pushf
mov
lcall
add
mov
mov
leave
cmp
pusha
add
pop
lods
repz
js
mov
loope
push
cmc
cld
outsb
cmp
mov
daa
add
add
cmp
push
enter
pop
pop
mov
out
std
mov
mov
ss
mov
in
cs
jge
mov
inc
sub
jae
and
pop
fcoml
fisttps
xchg
push
mov
dec
pop
push
in
clc
scas
test
inc
mov
adc
fisubrs
mov
out
and
stos
and
mov
inc
into
or
mov
scas
adcb
ret
aad
sbb
cld
test
filds
ficoms
or
sbb
data16
cltd
out
sub
cmpsb
mov
sub
das
cs
ss
xor
movsl
jb
testl
movl
pushl
inc
out
in
mov
in
fucomi
jg
cmpsl
imul
mov
adc
or
jnp
cmp
cmpsb
xor
adc
sub
repz
rcl
nop
inc
in
in
stc
jle
mov
gs
fwait
push
or
mov
jge
loope
lret
jns
shlb
iret
mov
mov
push
xor
fldt
in
aas
dec
aam
jne
pop
and
into
out
xchg
dec
test
in
xchg
lods
fisubrl
push
mov
adcl
shl
inc
xchg
cld
clc
cmp
int3
test
lods
mov
inc
adc
imul
not
jmp
inc
insl
gs
scas
xor
pop
nop
push
xchg
xchg
pop
xchg
mov
push
xor
ret
push
pop
jno
popf
add
mov
bound
xor
lahf
popa
rol
mov
rorb
xor
inc
mov
xchg
repz
mov
das
neg
int
xor
mov
adc
lcall
in
mov
pushf
cmpsl
aas
movsl
push
xchg
and
xchg
scas
aaa
mov
test
dec
int
sub
and
sub
or
jae
jmp
jg
fwait
into
push
and
pop
int3
mov
xchg
sbb
pop
imul
in
add
mov
jbe
and
xchg
inc
adc
and
ja
ss
test
push
push
jmp
sbb
push
adc
xchg
int3
xchg
nop
adc
and
lds
cmpsb
into
mov
jbe
lret
sbb
dec
inc
push
lods
repz
mov
sbb
pop
mov
adc
in
xor
je
xorl
push
jecxz
sub
das
adc
jnp
outsl
mov
lods
inc
pop
addr16
cmpsb
mov
cwtl
cmp
fdivrs
dec
push
jo
gs
add
xchg
push
stos
shlb
push
jp
dec
dec
insb
mov
out
and
jns
mov
mov
sbb
mov
mov
bnd
mov
lods
out
adc
ret
int3
cwtl
out
and
ret
outsb
push
pusha
xchg
les
jb
cmp
xor
cltd
pop
movsb
int
pop
subb
inc
jo
outsl
in
inc
dec
fisubrs
jmp
adc
ret
scas
push
jecxz
rorl
shlb
pop
push
push
push
mov
sub
add
js
adc
pop
nop
stc
inc
pop
push
jp
adc
hlt
cmp
ds
inc
cmp
in
jns
push
inc
push
lods
sbb
push
lret
push
pop
mov
call
out
out
inc
scas
or
sbb
add
xlat
test
or
lods
add
sarb
enter
cmp
ds
mov
int3
mov
jne
sbb
fs
adc
xor
mov
pop
mov
or
add
in
dec
nop
add
adc
arpl
mov
sar
cltd
lds
push
insl
dec
mov
or
insl
leave
inc
mov
push
and
mov
rolb
mov
or
aaa
out
pop
jns
sahf
push
sub
push
mov
push
mov
js
insl
ret
fldl
mov
and
xchg
pop
xchg
xchg
pushl
sub
sti
pushf
shlb
pop
lahf
sbb
outsl
out
or
in
push
mov
push
stc
jae
xor
lods
arpl
daa
out
iret
or
mov
or
xlat
popf
loope
pop
fmul
adc
cmp
lea
dec
add
cmc
sbb
scas
fs
mov
pop
mov
pop
fdivs
jle
hlt
dec
outsb
pop
dec
xchg
mulb
sub
fadd
addl
xchg
sub
insb
out
movsb
jno
lahf
jbe
push
inc
jno
jno
inc
bound
and
stos
dec
fwait
adc
mov
inc
xchg
jl
mov
enter
jg
sbb
les
insb
mov
and
mov
mov
push
bound
fwait
mov
mov
lds
xor
and
addl
loope
shlb
les
adc
imul
daa
fnstcw
xor
lret
push
sub
cmp
xchg
mov
faddl
pop
stos
pusha
inc
pop
cltd
mov
inc
test
cmp
dec
popa
bound
sbb
mov
pop
mov
fwait
cmp
xlat
push
mov
dec
sbb
shlb
push
cmp
inc
lock
pushf
push
cltd
mov
pusha
cld
xchg
lock
mov
push
aad
cwtl
xor
sbb
cmc
and
iret
es
into
adc
add
fsubl
inc
xchg
cmp
daa
lret
aaa
scas
insb
ror
lret
sub
lret
pushf
or
and
xor
mov
dec
mov
das
mov
stc
ja
popf
adc
ret
fadd
stos
ss
jbe
sbb
addr16
pop
addr16
lds
jl
cmp
inc
mov
lahf
and
pop
lods
xor
fucom
sbb
pop
pop
sub
dec
test
jecxz
xor
cmp
fbld
xor
stos
stos
fidivrl
imul
sbb
iret
xchg
scas
sti
ret
stc
lock
insb
xor
test
sbb
popf
and
outsl
in
pop
leave
bnd
cmp
add
or
imul
sub
out
xchg
jo
leave
mov
dec
xor
fidivrl
xor
enter
sbb
xchg
fisttpl
jp
dec
js
data16
int3
fdivrl
dec
addr16
cs
in
push
inc
jg
dec
sahf
dec
mov
sub
int
lcall
in
out
or
mov
push
ja
and
mov
xor
adc
fldt
int
in
outsb
or
inc
sti
pop
jnp
dec
rcrb
xor
add
fsts
fistpll
movsl
xor
fistps
sti
addb
adc
dec
add
mov
xor
subb
hlt
jb
add
inc
push
movl
out
mov
add
mov
mov
outsw
mov
fucomp
movsb
andl
inc
cmp
ja
inc
dec
mov
jl
or
stc
inc
jne
jle
hlt
test
sub
sbb
cmp
xchg
loope
pop
jecxz
mov
sti
xchg
mov
add
insl
mov
call
repnz
inc
xchg
dec
repnz
sbb
sbb
decb
inc
jns
jae
es
push
and
lds
repz
shlw
movsl
pop
int3
shrb
push
ret
push
insl
and
mov
out
sti
je
bound
fdivp
adc
fsubr
pop
ret
in
pop
pop
mov
dec
lock
bound
xlat
dec
sarl
jmp
jl
and
test
dec
mov
add
cli
stos
fs
imul
call
sbb
inc
aas
cmpsl
mov
or
mov
cmp
mov
xlat
lret
sub
fldcw
xchg
mov
xchg
repz
stc
add
push
add
inc
gs
into
fadds
pusha
mov
pop
mov
rorb
or
push
outsb
or
jl
fistps
cltd
mov
cmp
add
or
sub
scas
cmp
push
shll
mov
mov
add
mov
xor
jo
mov
lret
xor
push
aas
and
sti
leave
aas
aam
dec
cmp
jne,pt
jge
mov
bound
inc
jmp
loop
rolb
mov
addb
xor
adc
mov
aaa
and
add
xor
sbb
pop
call
fwait
lds
lcall
clc
mov
mov
push
ret
inc
rcrb
rcrb
leave
sbb
je
cmp
pop
jnp
jg
push
mov
imul
rcr
jge
mov
adc
pop
xor
adc
push
mov
inc
or
jmp
mov
ret
nop
push
xchg
xchg
inc
mov
cli
pusha
sbb
jecxz
testb
jo
xchg
jb
sbb
jns
lods
enter
and
out
and
dec
xchg
pop
pop
sub
push
adc
mov
inc
loopne
loopne
push
jecxz
pusha
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
sub
xchg
jno
fcmovnbe
jl
fs
xor
lea
or
andb
push
push
xlat
pushf
mov
lods
mov
jmp
jo
sub
popf
jge
lsl
or
out
mov
cwtl
daa
and
jne
test
push
dec
mov
das
lock
adc
stc
lret
pop
test
into
xchg
lock
sbb
xchg
sub
imul
mov
icebp
sub
je
or
lret
mov
lcall
popf
push
pop
pop
mov
lock
cli
push
lods
sub
cwtl
ret
cwtl
mov
jmp
adc
lods
data16
mov
std
and
xchg
xchg
movsb
push
loop
push
lods
frstor
pop
or
movlps
mov
les
sbb
xor
shlb
inc
mov
cmc
test
stos
sbb
push
add
mov
data16
insl
sub
out
lahf
ss
sahf
mov
and
icebp
out
cltd
adc
xchg
and
fwait
dec
adc
lds
jnp
push
xchg
sbb
and
sbb
or
stos
add
push
mov
inc
shlb
pop
jne
mov
sbbb
iret
movsl
rorl
cmp
or
shll
repz
jno
clc
addr16
xchg
sub
adc
mov
clc
add
cmp
loopne
mov
insb
sbb
leave
xor
fcmovne
call
and
jecxz
dec
pop
aaa
pop
pop
movsl
or
and
mov
in
repnz
dec
or
imul
ds
dec
stos
jbe
popa
js
aas
loop
lea
and
std
movsb
lahf
sub
xchg
sub
mov
enter
or
pop
ficoml
xchg
loopne
movsb
ljmp
mov
enter
iret
add
pop
jl
inc
mov
xor
cltd
pop
sti
cmp
sub
insl
lahf
dec
sbb
jp
dec
push
push
rcll
aad
mov
mov
icebp
jns
daa
std
jle,pn
sub
cmc
and
fcoml
add
push
inc
mov
cmp
xor
jo
adcb
jbe
inc
bound
mov
xchg
fs
sbb
or
jb
mov
pushf
jp
insl
lret
fisttps
inc
ss
push
les
scas
sbb
out
push
stos
push
decl
xchg
sub
and
mov
repnz
jmp
popf
jo
out
ret
push
lods
lods
xor
ficoml
xchg
jl
mov
sub
jo
loopne
add
gs
cmp
notb
rolb
or
outsb
icebp
adc
adc
lahf
add
cmp
push
fs
add
jg
hlt
aaa
jns
mov
rcll
out
aaa
hlt
cmpsl
sub
cwtl
sub
sub
lods
int
mov
and
shll
xchg
sarb
mov
mov
push
scas
xor
nop
fiadds
push
lea
jg
rorl
jp
fstpl
ficomps
insb
xchg
or
mov
outsl
xchg
push
std
arpl
stos
jmp
cmpsb
lds
push
and
xchg
arpl
and
scas
movsl
clc
sub
jo
js
nop
imul
xor
or
stc
aaa
pop
cmp
cmp
inc
mov
xchg
shrl
push
cmp
in
jmp
lods
mov
imul
mov
roll
int
xor
xchg
rcrb
adc
mov
fs
mov
leave
push
lcall
xchg
lret
cli
mov
inc
sub
movsl
dec
and
mov
jne
popf
add
ljmp
daa
sub
jno
jae
shl
and
mov
mov
push
or
pop
xor
xor
test
push
insb
xor
push
scas
add
cmp
sbb
cmp
out
je
dec
mov
scas
rcl
xchg
mov
or
movsl
rcr
pop
pushf
pop
and
mov
shrb
sbbl
test
outsl
push
aaa
in
cld
aad
fwait
cltd
and
scas
mov
sahf
adc
or
push
sbb
jno
shll
insl
xor
sbb
in
sub
aad
in
xchg
lds
std
fistl
mov
jo
jmp
fcomi
cmp
or
in
fildl
cmc
cmc
cmp
fs
cli
mov
les
mov
and
cli
pop
inc
or
fstps
dec
cmc
insb
mov
addl
pop
nop
xchg
inc
in
jns
xchg
sbb
and
cli
movsb
xchg
mov
sbb
add
adc
pop
mov
mov
inc
fdivl
push
or
lds
loop
mov
aam
inc
push
jne
ljmp
shlb
xchg
push
sbb
sub
clc
jl
sahf
addr16
aas
pusha
mov
add
cmc
cli
xchg
mov
or
in
add
jbe
dec
or
subb
int3
xor
fidivrl
xor
sti
xlat
out
mov
cs
mov
push
test
loopne
xchg
mov
jnp
mov
mov
adc
shl
out
push
aam
push
mov
fstpt
mov
aaa
and
xchg
inc
fwait
add
and
lcall
adc
xor
inc
cld
or
cltd
insl
cmp
lahf
mov
out
sub
mov
icebp
jg
cs
inc
aaa
ret
inc
insl
jecxz
out
xchg
scas
sub
and
in
mov
jl
mov
cmp
sub
pop
rcr
jns
ss
pop
imul
mov
ss
and
pop
movsl
jbe
pushf
sub
and
gs
movsl
mov
or
jb
dec
dec
jnp
notl
xchg
adc
and
and
sub
push
lcall
ja
mov
lcall
pop
fs
xor
scas
movsl
xchg
sbb
sub
cmp
loopne
or
es
xorl
sub
repz
jns
jecxz
or
enter
xchg
sub
flds
or
stos
sbb
dec
fwait
mov
je
outsb
div
sbb
sub
jbe
jecxz
sbb
xchg
ja
imul
jp
cmp
cmp
popf
sahf
mov
fwait
xchg
repnz
inc
arpl
jecxz
dec
dec
pop
push
fxch
ret
mov
push
pop
loopne
mov
lods
mov
bsr
test
imul
adc
sbb
push
icebp
fsts
inc
data16
cmp
dec
dec
in
mov
addl
xchg
cmp
mov
clc
mov
icebp
ret
ljmp
push
test
leave
mov
loop
cmp
arpl
xor
dec
jnp,pt
cmp
sbb
pop
scas
ret
arpl
hlt
ret
pop
jecxz
insb
fisubrl
sub
cmp
pop
mov
fsts
vandnps
insl
push
push
or
adc
inc
je
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
out
stos
js
jbe
jno
aas
cwtl
xchg
enter
out
pop
pop
push
mov
ljmp
jbe
fsubr
xor
add
jne
sub
fstpt
cmpsb
imull
jmp
or
or
sbb
or
scas
jle
pop
arpl
inc
jb
adc
jno
adc
and
push
stos
imul
add
cmp
mov
insl
mov
jmp
xchg
xchg
daa
mov
cli
sbb
or
int
pusha
orb
pop
mov
aam
adc
mov
stos
mov
add
and
ljmp
nop
and
jecxz
lret
cmp
mov
push
add
push
push
hlt
xchg
js
mov
push
mov
mov
lea
clc
xchg
xor
out
inc
jecxz
lods
fiadds
lock
daa
out
fadd
stc
mov
mov
xchg
insb
sbb
jecxz
mov
inc
mov
fdivrl
xchg
into
jns
lret
cli
mov
or
sub
aam
push
jl
push
dec
mov
arpl
xchg
jb
xor
movsb
mov
or
add
jns
cmpsl
inc
fisubrs
repnz
ret
mov
or
lods
movq
lods
xor
stc
xchg
xor
loop
dec
addl
shll
arpl
inc
add
pusha
inc
sub
imul
nop
cmp
add
ret
push
xor
fdivl
push
cli
ret
or
and
mov
xor
or
jnp
cwtl
inc
jno
jmp
shlb
push
push
lods
jge
shlb
push
cmp
sub
cmp
xchg
aad
jp
vmread
xchg
popf
mov
mov
pop
inc
fildll
push
bound
inc
jmp
and
testl
popa
ficomps
push
int3
inc
stos
clc
mov
pushf
mov
mov
push
mov
jmp
xchg
fcoml
cmp
sub
leave
push
aam
mov
adc
jne
cwtl
je
inc
xchg
mulb
sub
ss
mov
xchg
std
dec
lock
cmp
sub
jae
or
cltd
test
nop
sub
sbb
mov
lea
xor
or
arpl
add
sub
sbb
add
in
mov
add
out
lea
es
addr16
xor
clc
orl
stc
jbe
sub
shll
sub
xor
lods
out
adc
scas
insb
pop
out
add
iret
jns
mov
push
lret
push
add
jae
push
mov
movsb
out
shrb
fidivrl
pop
dec
dec
xor
or
js
sub
lods
push
cwtl
fcomps
dec
ret
icebp
sbb
push
xor
stc
mov
and
mov
mov
adc
xor
mov
leave
icebp
imul
out
and
fbstp
clc
inc
cmp
popf
loop
testb
add
sub
and
fcom
adc
xchg
push
inc
or
out
jg
in
int3
subb
pop
sbb
aaa
and
cs
je
cmpb
sbbb
pop
in
or
hlt
xor
xlat
repz
out
notl
xor
add
xchg
jb
aaa
aaa
and
loope
adc
dec
push
jecxz
pop
cmp
inc
sub
movsb
mov
fsubrs
cli
inc
jae
imul
push
out
mov
jno
push
lcall
or
add
roll
rclb
ret
push
lods
and
hlt
mov
cmp
dec
jle
sbbb
mov
push
sti
sub
fisubl
jg
aam
scas
cltd
lods
mov
cmc
jmp
add
lahf
jno
pop
sub
js
xchg
in
xchg
aam
int3
lock
cwtl
movsb
pushf
sub
rorl
in
fld1
ret
imul
jecxz
stos
cmp
xor
jo
pop
xor
xchg
cmp
inc
jno
fucomp
andb
xor
adc
xchg
dec
fsts
fs
xor
pop
icebp
cli
aam
test
mov
push
dec
test
scas
cld
scas
adc
daa
cmp
pop
popa
dec
xchg
inc
popl
neg
add
xchg
pop
mov
pusha
mov
ds
xor
popa
cmp
mov
das
xor
imul
dec
aaa
aam
jg
fmull
in
scas
add
jge
lods
adc
daa
dec
or
sbb
jmp
mov
jl
xor
jp
sub
dec
enter
fsubrl
gs
jno
pop
mov
scas
sbb
mov
push
movsb
xchg
test
mov
mov
dec
ljmp
and
sub
sub
push
dec
mov
out
ret
xorl
xchg
test
push
fbld
mov
aaa
stos
fsubrs
jge
mov
xchg
out
imul
enter
movsb
mov
cmpsb
add
and
roll
cmpsb
hlt
xchg
fdiv
mov
sbb
addr16
mov
add
je
dec
lods
add
add
cmp
mov
sbb
adc
mov
adc
arpl
ljmp
pop
cmpsb
pop
in
addb
adc
jg
pop
mov
dec
sub
icebp
mov
push
movsl
aam
push
sub
cmp
inc
xor
adc
es
adc
xchg
push
jno
shll
mov
mov
and
push
or
lods
nop
pop
ret
pop
pushf
cmp
push
mov
push
mov
mov
dec
fstps
cmp
je
aam
hlt
out
addb
mov
lcall
cmp
ja
icebp
jb
into
je
sar
pop
sub
cmp
pop
or
lahf
popl
shlb
mov
lds
cmp
push
or
xchg
sbb
movl
sbb
adc
out
jns
sub
sub
stos
mov
popf
or
mov
stc
or
jecxz
jb
inc
pop
int
dec
imul
jle
sbb
xor
stos
frstor
xchg
loop
xor
mov
neg
lds
movsb
sub
faddl
mov
leave
xor
add
mov
mov
pop
and
fistpl
push
cs
scas
push
loope
ljmp
int3
inc
fsubrp
pop
cltd
mov
xor
aas
sbb
testb
stos
inc
lock
push
sub
test
rorb
sub
in
cmc
lods
inc
pop
lcall
mov
fs
cmc
xor
adc
push
inc
loop
lods
sbb
push
sbb
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
lahf
jmp
adc
addl
enter
inc
mov
mov
push
or
inc
and
xchg
add
pop
js
outsb
or
add
loop
sub
clc
xor
dec
push
ret
daa
repnz
sub
iret
push
test
dec
shrb
pop
sbb
add
mov
xchg
call
ficomps
sbb
scas
clc
inc
data16
sub
sbbl
and
movsl
and
cmp
fwait
xor
fdivrl
enter
xor
jmp
inc
xchg
frstor
xchg
or
jo
xchg
pop
sbb
sbb
lock
xor
scas
mov
mov
cmp
dec
js
jns
sarl
jl
and
xchg
and
mov
xchg
mov
sahf
fildl
mov
inc
arpl
xor
pop
fs
iret
dec
int
rolb
sbb
cmpsb
or
or
push
pop
push
pop
and
and
dec
push
mov
jnp
xchg
mov
loop
push
dec
pusha
popa
cmovg
dec
addr16
pushf
cwtl
jge
xchg
add
popa
fdivs
movsb
mov
test
out
add
sub
lret
pop
inc
adc
mov
mov
add
fwait
xchg
out
sub
mov
pop
or
pop
out
and
adc
andb
lea
popl
mov
nop
and
sbb
push
test
orb
jno
push
inc
lods
add
lods
es
rcl
movsb
out
fists
pushf
std
add
xor
pop
or
fdivs
insl
scas
ds
xchg
lea
out
and
ret
mov
jg
push
xchg
push
shll
hlt
subl
xchg
pop
sahf
sarb
and
xchg
adc
loope
dec
imul
pop
pop
sub
addr16
pop
aas
push
cmpsb
clc
dec
fwait
cmp
mov
lock
sbb
or
fwait
pop
loop
sub
ja
mov
rorl
and
outsl
jb
jbe
push
xor
jle
inc
aaa
push
push
mov
fcmovbe
inc
pop
fld
leave
fstpt
clc
movsl
sub
fstpl
lahf
loop
stos
dec
push
cmpsl
mov
push
imulb
mov
xchg
mov
mov
adc
fld
mov
jb
cmp
mov
cmc
in
adcb
icebp
inc
or
pop
dec
loope
repz
lahf
sub
jecxz
jmp
or
or
std
cli
jb
scas
fs
popf
mov
jge,pt
inc
cwtl
mov
pop
movsb
fwait
movsb
movsb
lock
insb
enter
in
sbb
jle
mov
mov
adc
cmp
sub
loopne
pop
mov
or
jge
cmp
idiv
add
popf
sbb
cltd
sbb
popa
shlb
sbb
insl
sub
dec
push
aaa
outsb
add
push
or
and
pop
mov
jns
faddl
into
jbe
clc
pop
adc
cli
lahf
aad
jnp
xchg
inc
mov
fucomip
and
outsb
dec
pop
mov
xchg
xor
into
lea
mull
in
pop
jb
and
push
jge
or
xchg
jle
leave
push
aas
sbb
push
stos
jp
dec
adc
sbb
add
lret
or
sbb
dec
xchg
push
and
xor
mov
in
xchg
mov
test
lea
push
mov
sbb
mov
push
pop
xor
add
push
pop
enter
push
sub
push
or
add
test
sti
test
jo
in
mov
repnz
dec
dec
xchg
dec
push
jmp
mov
int3
incl
repnz
mov
test
push
mov
or
daa
test
pop
out
xchg
test
cmp
dec
cwtl
and
xchg
lahf
cmpl
ja
dec
xchg
mov
add
xor
push
arpl
or
jbe
fs
sbb
das
leave
sbb
mov
add
in
xlat
ljmp
jg
out
xor
cld
adc
jecxz
pop
aad
repnz
jo
out
mov
shl
iret
xlat
xchg
adc
lret
aad
pop
negb
cmpsl
inc
adc
shlb
sbb
add
sti
sub
sub
sarb
and
pop
xchg
pop
jbe
mov
xchg
and
pop
imul
mov
stos
mov
xchg
popa
xchg
arpl
filds
gs
mov
sbb
xor
inc
in
mov
pop
ljmp
or
add
push
cli
xchg
hlt
aas
rcll
shlb
jbe
ret
insb
insb
xchg
test
mov
scas
jns
mov
or
lds
cli
jbe
ret
pusha
adc
and
push
add
std
mov
je
push
sub
into
daa
or
mov
les
or
fsubr
in
dec
movsl
fistl
in
nop
test
sti
jb
imul
xchg
mov
frstor
imul
mov
adc
add
mov
adc
and
call
mov
xchg
adc
sbb
jmp
ds
insb
sub
jp
inc
and
adc
mov
out
mov
mov
sub
sub
xchg
sub
xchg
and
xchg
push
je
scas
leave
jbe
jae
subb
jb
jnp
sub
repnz
rorl
les
dec
pop
fcomps
out
jns
fnstenv
lods
dec
popa
fstpl
xchg
inc
xor
ds
int
xchg
push
repz
or
mov
jnp
arpl
ret
test
testl
cmpsl
loope
mov
mov
testb
insl
loope
mov
dec
inc
dec
movd
cltd
fisubrs
xchg
jno
mov
mov
and
pop
add
xchg
movsb
sub
out
pop
jmp
cltd
jmp
fcomps
sub
int
jp
cmpsl
push
fisubs
sahf
inc
lods
jmp
imul
icebp
leave
mov
pop
mov
repz
lea
shll
int3
xlat
mov
fsts
jbe
cmp
es
xchg
movsb
inc
jle
sbb
mov
push
adc
cmpsl
iret
xchg
subb
xor
stos
pop
das
mov
xchg
pop
adc
lret
inc
xorb
add
inc
rcrb
ljmp
pop
addr16
imul
insl
jge
sub
scas
jae
stos
cwtl
cli
sbb
arpl
jns
lds
scas
mov
xchg
sti
ljmp
pop
lcall
mov
popf
xor
mov
ret
xor
pop
data16
jno
or
repnz
jne
mov
filds
mov
add
ljmp
mov
leave
clc
jp
dec
cmpsb
fnstsw
xchg
lock
pop
cwtl
cmpsl
xor
icebp
jge
mov
dec
or
sbb
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
repz
add
add
stc
fildll
cmp
cmp
mov
arpl
negl
sub
out
inc
push
test
nop
int
pop
mov
and
orb
add
mov
push
gs
bound
cmp
xchg
mov
push
xchg
cld
hlt
dec
push
sbb
adc
xchg
inc
hlt
push
repnz
pop
inc
movsl
xor
dec
sub
push
inc
and
dec
jne
popf
mov
sbb
push
jmp
data16
inc
in
or
arpl
das
dec
mov
mov
popa
pop
aad
loop
mov
xor
insb
mov
pop
push
ljmp
push
sbb
scas
je
xor
push
jle
lcall
mov
rorb
in
fcomps
stc
dec
ds
xchg
andb
cmp
mov
scas
mov
lods
iret
adc
cmpl
jg
movsb
icebp
pop
cmp
fwait
sbb
push
outsl
mov
xchg
push
pop
mov
mov
inc
mov
inc
mov
xor
inc
adc
and
or
dec
fnstcw
into
mov
xchg
pop
sbb
shrl
push
xor
cmp
push
add
cmp
fscale
add
ret
mov
mov
cltd
push
ret
adc
jne
xchg
sbb
inc
orl
adc
jmp
jbe
cld
jmp
cmp
push
mov
mov
jb
pop
int3
ret
jmp
sbb
insl
jns
in
nop
lret
inc
out
aaa
xchg
inc
add
jmp
add
cmpsl
in
xor
cs
sub
xchg
scas
imul
xchg
out
es
xchg
pop
mov
fstpl
imul
mov
pop
inc
scas
in
add
std
int
movsl
stos
jmp
push
js
xchg
scas
icebp
pop
jno
jl
jnp
xchg
and
out
iret
mov
lods
jmp
aad
hlt
sahf
outsb
push
jmp
clc
push
out
or
shr
sub
mov
lahf
jo
mov
daa
bound
lds
sbb
sub
or
movsl
stos
adc
push
test
jg
push
loopne
mov
lcall
mov
xchg
sub
psubsw
add
jb
pop
aad
in
mov
cli
add
push
mov
sub
inc
mov
aas
mov
test
in
mov
inc
xor
fistpl
mov
decb
stc
nop
mov
pop
fbstp
push
arpl
outsb
mov
clc
pop
gs
inc
outsb
xchg
fidivl
in
push
outsl
pop
outsb
sar
sarl
rol
in
sub
xchg
popf
mov
dec
mov
and
xor
jmp
add
pop
xchg
cmp
bound
sahf
sbb
shlb
jl
in
inc
cmp
or
popa
out
push
push
je
and
xlat
rcl
push
and
out
dec
jg
test
mov
xchg
addb
outsl
leave
cmp
dec
enter
out
es
push
repnz
mov
sub
maskmovq
notl
aas
sbb
test
sbb
jne
pop
xor
or
xchg
rorb
mov
or
sbb
xchg
dec
loope
pushf
dec
popf
mov
je
stos
pop
enter
and
mov
xorl
scas
enter
movsb
fdivs
xlat
fsubs
insl
add
pop
mov
jnp
in
in
push
sub
out
clc
sbb
cs
pop
inc
jl
add
loopne
daa
ret
or
add
xchg
cltd
push
push
fnsave
and
push
adc
pop
push
cwtl
or
loop
mov
fs
ss
fisubs
pushl
sub
scas
or
push
sub
push
ficomps
icebp
test
nop
adc
aam
in
adc
int3
mov
insl
xor
pop
pushf
int
mov
mov
insb
lds
mov
mov
adc
call
push
mov
adc
adc
push
sti
add
je
jmp
call
test
sub
insl
fs
add
in
xchg
iret
dec
lock
pop
adc
sub
in
je
or
cmp
push
adc
or
xchg
push
stos
and
jecxz
sahf
call
shlb
int3
dec
int3
adc
cmpsl
fchs
dec
lods
lds
xchg
mov
and
iret
xor
loopne
pop
xchg
mov
pop
dec
mov
pop
outsl
bound
iret
daa
outsl
dec
pop
ds
adc
or
inc
mov
aad
jl
lea
icebp
sub
loopne
fildl
test
sbb
dec
pop
pop
mov
dec
nop
scas
dec
and
sub
aad
mov
ss
xchg
popa
push
mov
xchg
sub
call
mov
or
ja
stc
adc
pushf
movsl
enter
cmp
inc
sbb
mov
mov
sbb
add
xchg
daa
jmp
cmp
popa
jne
out
xchg
adc
movsb
jb
cmpsl
movsb
sub
push
or
fstl
leave
cmc
cld
xchg
jl
loopne
inc
mov
dec
dec
std
and
mov
cmc
insl
aad
jg
mov
push
sbb
inc
inc
jecxz
cs
add
mov
pushf
popa
xor
add
in
jmp
sbb
rol
pop
mov
cmp
sbbl
inc
inc
fisubrs
movsl
lods
jg
mov
jo
mov
pmaddwd
mov
cli
jle
in
ljmp
cmp
ljmp
add
inc
jp
xorl
in
out
subb
imul
xor
inc
pop
lcall
test
lods
icebp
out
enter
icebp
inc
sahf
fidivl
daa
lret
push
test
outsb
xor
pop
cmp
push
in
movsl
and
jbe
rclb
shr
out
lea
dec
shrl
bound
jp
push
xacquire
push
shll
push
and
or
push
mov
test
lahf
lock
cmp
aam
ds
xchg
sbb
mov
mov
insl
mov
es
push
cmpsb
arpl
jmp
lret
mov
int
mov
outsb
xchg
push
push
cmp
mov
je
test
out
mov
mov
sub
jg
ja
dec
xlat
xlat
cs
cwtl
jle
cltd
shrb
pusha
iret
sub
jmp
dec
fisubl
jmp
push
fisttpl
and
repz
rclb
adc
jmp
sub
repz
jp
mov
xor
mov
pop
mov
out
mov
rcrl
jae
shl
repz
pop
push
mov
fadd
inc
cmpsl
push
jns
daa
mov
mov
cwtl
add
cmp
adc
and
pop
xor
jb
or
lods
dec
lds
popf
cmp
test
dec
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
cmpsl
sbbl
sbb
push
and
xchg
cwtl
xor
adc
insl
xlat
mov
sbb
ss
rorb
inc
dec
mov
jmp
and
mov
mov
cwtl
mov
fisubrl
stc
xrelease
aas
nop
mov
mov
adc
mov
cmp
mov
and
or
dec
fadds
aam
cmp
xchg
cmp
daa
push
mov
xchg
jl
push
cmp
add
push
ret
leave
shrb
mov
xor
sbb
ret
decl
jnp
ds
out
test
test
sahf
ret
ja
imul
mov
dec
insl
rorb
sub
es
push
in
push
cmp
cmp
btc
jae
mov
cmpsl
mov
add
add
inc
sub
enter
cmp
sarb
mov
pop
dec
test
cwtl
xchg
or
fsts
dec
xchg
or
xchg
ss
stos
xor
jle
ret
mov
or
pop
and
jmp
fisttpl
std
adc
pop
jp
mov
mov
mov
mov
xchg
gs
rcrb
jo
inc
cmp
mov
mov
pop
mov
mov
pop
and
shr
in
fldt
cs
xlat
subl
inc
mov
or
mov
rcr
jo
push
test
shrl
aaa
inc
push
adc
mov
mov
or
push
dec
lcall
add
mov
add
outsb
sub
das
add
sarl
mov
out
xor
sahf
adc
cmpsb
pop
popa
iret
subb
daa
jae
mov
push
add
arpl
je
and
ds
and
scas
lret
sbbb
popa
xchg
pop
mov
aad
iret
fnstsw
sbb
mov
mov
jne
int
mov
lock
sbb
lretw
mov
pop
popa
mov
ror
adc
inc
orl
aas
and
cmc
fdivr
sbb
insb
imul
mov
mov
adc
mov
stc
pop
lret
adc
mov
cmp
dec
jns
xor
xorb
loop
xor
xor
pop
hlt
jmp
rcrb
mov
ss
mov
stos
lret
ss
pop
call
cmp
lahf
loopne
stc
pop
or
imul
mov
je
xor
xchg
mov
int
add
dec
dec
sahf
shrb
fs
fldenv
cmp
dec
xor
repnz
aas
sbb
roll
push
mov
push
mov
test
inc
mov
fcmovu
ret
in
jbe
cwtl
sbb
mov
jl
shll
insl
or
in
inc
lahf
cmp
mov
inc
pop
xlat
cmpsb
popa
jmp
mov
and
popf
mov
test
setp
xor
xor
daa
sub
jne
clc
and
int
and
push
add
cs
or
add
cmp
movsb
jmp
cmpl
dec
out
xor
xor
sbb
mov
mov
leave
ret
inc
sti
call
pop
lret
mov
xor
movsl
mov
jns
sbb
jbe
mov
inc
andl
pop
adc
sbb
iret
sbb
inc
jbe
adc
icebp
push
jne
cmp
jo
push
mov
and
leave
lret
dec
mov
lods
mov
data16
adc
xor
in
dec
loope
or
fs
push
add
dec
mov
adc
in
mov
lds
lret
lods
shll
cs
aam
js
mov
sbb
test
sub
shr
fdivrs
push
lea
add
int
inc
push
in
pop
sub
jl
mov
sub
or
mov
xchg
xor
or
daa
pusha
insb
and
pop
mov
out
and
out
popa
fsubrp
mov
mov
outsb
mov
stos
dec
js
lds
loope
leave
push
ret
int
in
lret
xchg
pusha
sub
cmp
jae
cmp
mov
das
cmp
sub
pop
or
int
jmp
imul
sti
xchg
inc
pop
leave
adc
cltd
mov
sti
adc
sub
enter
push
mov
fcom
xchg
pop
loop
xor
sbb
mov
mov
insl
cs
jo
pop
mov
dec
inc
outsl
pop
push
into
nop
xchg
mov
add
call
sub
mov
cld
lock
das
lahf
int3
or
insb
push
sar
test
mov
jmp
inc
js
mov
int3
cltd
mov
icebp
push
clc
sbb
sub
or
pop
fmull
push
xlat
mov
aas
xor
jle
xchg
lea
cmp
jg
lret
popa
nop
cli
inc
adc
adc
mov
and
push
mov
test
xchg
popa
xorl
mov
mov
xor
lods
lea
in
fs
jo
test
jnp
mov
mov
dec
pop
xchg
rorb
push
subb
dec
imul
test
ss
xor
xor
mov
inc
imull
pop
mov
sbb
push
pop
xchg
inc
and
mov
ss
dec
push
jecxz
loopne
lea
mov
add
outsl
jle
test
loopne
gs
mov
cli
or
dec
loopne
cmpsl
pop
mov
aam
inc
or
mov
pop
mov
daa
mov
and
push
push
stos
ss
sahf
insb
sub
push
xchg
cmp
dec
mov
push
sub
loop
fisttps
cltd
jne
dec
insb
xchg
adc
push
adc
mov
jnp
or
adc
fcomp
pop
jmp
daa
xor
mov
out
sti
mov
xchg
popa
test
stos
je
les
mov
xlat
and
loop
fmuls
add
in
hlt
and
xchg
or
cli
iret
xor
mov
add
or
xchg
dec
shlb
push
rorl
cmpsb
mov
cmpsb
cmpsl
push
in
mov
jno
sub
inc
sahf
out
push
repz
push
inc
push
cmpsb
jbe
aaa
pusha
adc
push
fbld
xchg
pop
and
clc
and
cmp
lock
sbb
inc
jecxz
push
in
push
pop
or
mov
jo
scas
pop
add
mov
in
sub
sbb
cs
jmp
lcall
test
movsb
frstor
insl
pop
and
cmp
sub
cmpsb
ss
fldcw
les
int
sahf
jns
cmp
mov
or
leave
cld
stc
and
cmp
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
and
jbe
addl
mov
inc
jne
xchg
xchg
jnp
jno
cli
dec
loope
adc
xchg
jl
arpl
xor
jmp
js,pt
inc
scas
shlb
lret
or
push
cmp
out
testb
repnz
imul
outsl
lahf
inc
orl
lea
pop
les
inc
scas
sbb
out
cmc
out
and
jmp
or
arpl
test
pop
and
fcmovb
jge
subb
subb
fldt
ficomps
or
fmulp
inc
cmp
dec
test
mov
aas
pushf
notb
lahf
jns
sub
xor
cli
mov
std
movsl
pushf
adcl
int
fst
sub
push
insl
mov
mov
mov
sub
pop
mov
ljmp
mov
pop
punpckhbw
jns
sub
ror
mov
dec
add
mov
pushf
xchg
adcl
repz
push
loope
xchg
lahf
xor
inc
insl
lea
mov
dec
sub
pop
in
pusha
aaa
jnp
icebp
in
sbb
mov
pop
mov
mov
adc
pop
mov
inc
push
pop
fs
adcb
jp
enter
cmp
or
jmp
and
and
in
jle
notb
enter
in
cwtd
test
fs
int
jo
push
sub
sti
cmpsl
loope
cltd
repz
adc
rclb
xor
aas
inc
inc
xchg
pushf
mov
adc
add
out
dec
jno
dec
push
inc
push
testb
andl
sub
and
jmp
mov
xor
fldt
sbb
sub
pushf
dec
in
or
and
cmc
fucomip
sti
mov
jp
bound
adc
xchg
push
and
lock
push
or
push
adc
insb
movsb
scas
mov
in
inc
mov
ret
out
and
xor
into
shll
faddp
add
xor
shlb
or
pop
or
push
xchg
or
sbb
push
shl
jg
fs
sub
in
mov
addb
jle
mov
outsb
add
pop
daa
mov
nop
xchg
sub
and
mov
or
pop
out
lahf
aam
std
movsl
xchg
sbb
sub
in
cmpsb
cld
push
jl
dec
jae
mov
movsl
pop
jno
jmp
test
dec
cmp
xchg
sub
xchg
sti
push
cld
adc
sbb
out
add
dec
dec
push
cs
adc
stc
cmpb
jno
fsubrl
clc
mov
push
loopne
add
rcl
xchg
dec
hlt
enter
into
mov
jle
test
stos
push
out
fsubrs
xor
pusha
sbb
xchg
fsqrt
mov
mov
cwtl
inc
fldt
sti
lcall
xchg
sbb
mov
test
clc
in
gs
std
fidivs
test
push
jbe
mov
cmc
int
push
jo
out
dec
mov
sti
push
and
mov
in
in
movsb
push
cmp
cmp
imul
xchg
xchg
adc
xor
test
and
adc
fsts
inc
sarb
jo
int
pop
mov
lret
imul
aam
jb
imul
out
dec
pop
push
inc
fbstp
inc
cmc
mov
jecxz
mov
data16
insb
mov
dec
mov
or
sub
es
lea
xchg
mov
sbbb
jp
jle
push
add
dec
xor
jecxz
dec
lds
cmc
lea
jne
jl
leave
push
sub
rorl
push
dec
bound
xchg
add
xor
pop
dec
push
xor
push
pop
mov
fstps
xor
mov
pop
sub
add
jp
test
jle
shll
popf
cmpsb
sahf
ficoml
add
xor
inc
lea
xor
rcl
fdivl
test
lds
mov
adc
xor
push
addb
jg
inc
adc
pop
lcall
out
mov
addr16
lret
repz
push
insb
inc
addr16
leave
cmp
mov
add
popa
pop
rorb
pushf
js
leave
add
jbe
xchg
aam
jbe
adc
ret
outsb
dec
pop
insb
push
adc
mov
pop
inc
je
cltd
js
cs
push
stos
mov
mov
and
inc
pop
out
inc
test
inc
pop
dec
rolb
push
rolb
mov
pop
ret
test
jbe,pt
insl
push
inc
pusha
lock
dec
les
mov
js
aas
lea
das
lret
push
and
clc
call
lods
adc
jb
lcall
ss
add
in
mov
fidivs
pop
push
js
pop
repnz
out
jecxz
xor
into
adc
add
or
xchg
lods
jecxz
jno
add
pop
loop
test
dec
lret
inc
sub
stos
mov
fcompl
test
mov
cmpsb
test
shr
scas
int
push
mov
inc
mov
push
mov
push
jo
aas
cld
fisubrs
jne
mov
jno
pop
jl
cmovl
adc
gs
cli
ljmp
or
sbb
cmp
dec
in
idiv
ljmp
add
push
rcl
sbb
xchg
ret
add
mov
adc
xchg
imul
ss
xchg
sbb
mov
push
cltd
das
outsl
or
dec
lret
dec
int
mov
jg
iret
xchg
adc
sbb
movl
or
repnz
cli
push
test
fistl
and
out
lahf
testb
inc
sub
out
or
push
jnp
push
and
sbb
jno
jg
xchg
mov
or
xchg
in
add
xor
push
and
mov
fcmovu
lock
cwtl
pop
sbb
inc
lock
dec
leave
mov
inc
mov
jb
lret
jg
loope
mov
jmp
jb
mov
in
inc
jo
mov
icebp
shll
fildl
dec
hlt
scas
dec
cmp
scas
sbb
mov
xlat
push
xor
addb
mov
adc
xor
notb
dec
mov
push
fisubrl
mov
xor
rcr
cmpl
mov
pop
loop
jmp
cld
sbb
insl
mov
xchg
stc
jp
xor
mov
xor
push
sti
fistps
jae
add
add
inc
mov
ficoml
inc
or
dec
pop
xor
mov
add
mov
movsb
int3
scas
push
xlat
mov
mov
dec
or
loope
daa
jno
lock
test
xchg
sub
xor
pop
push
adc
fsubrp
inc
mov
pushf
and
fsubrs
jg
pop
push
mov
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
in
sbb
lods
aaa
in
jecxz
dec
dec
cmpsl
pop
jl
arpl
jne
in
idivb
stc
into
mov
out
fwait
xlat
cmpsl
inc
inc
das
jb
ljmp
repz
sbb
push
push
out
cld
xor
adc
rorl
mov
pop
in
xchg
aaa
ds
add
in
add
xchg
pop
jmp
enter
enter
mov
shrb
iret
loope
sbb
rcrl
push
xchg
test
shl
in
std
aaa
sbb
scas
insb
and
out
inc
rolb
jmp
lods
adc
addr16
add
lods
cmpb
cs
adc
repnz
lods
mov
inc
imul
out
push
xchg
dec
dec
subl
sub
push
xchg
mov
dec
lea
stos
stc
adc
push
pop
mov
imul
shl
repz
out
dec
sar
push
cmp
jge
sub
xchg
mov
sub
jge
and
sub
pop
repz
inc
fisubrs
push
adc
stos
or
adc
int3
push
dec
stos
mov
rcrb
pop
mov
ficompl
cmp
rcl
nop
mov
cli
shll
jnp
dec
xor
ret
dec
addb
lret
stos
mov
and
sbb
xlat
pop
jecxz
scas
jmp
mov
aaa
shrl
inc
mov
mov
fwait
in
loop
or
pop
mov
mov
popf
cmp
push
sti
imull
imul
push
jns
cmp
xor
dec
pop
dec
dec
xor
lahf
stos
push
push
stos
xchg
inc
xor
enter
cmp
xchg
inc
add
jle
aaa
push
sub
or
shlb
sbb
aas
xchg
jg
add
leave
insl
and
adc
sarb
stos
xchg
push
testb
aaa
push
out
shlb
pop
pop
pop
pop
clc
shll
pop
jl
jge
cmp
mov
jl
daa
xchg
push
loop
or
push
jne
inc
mov
in
sahf
cld
js
int3
sub
movsb
repz
or
inc
fcmovnu
imul
test
cmp
repnz
cmp
sbb
pusha
pop
jge
pusha
add
enter
insb
das
mov
iret
mulb
ss
sbb
aam
or
adc
cmp
jne
mov
mov
les
sbb
and
subl
pop
push
mov
cmp
mov
adc
pop
pop
xor
jnp
cwtl
or
mov
sarb
stos
dec
imul
push
out
scas
test
inc
decl
dec
or
pop
inc
data16
jl
cmpsl
dec
or
sub
and
fidivrl
xor
addb
fistps
push
inc
dec
push
lds
xlat
xchg
adc
mov
test
push
fldcw
jg
movsb
pop
xchg
xor
hlt
enter
sarl
pop
jl
pop
in
outsl
fwait
dec
inc
aaa
push
inc
jno
push
sbb
cmp
mov
repz
js
mov
push
xchg
push
mul
clc
dec
shll
jp
xchg
xchg
add
jne
and
les
insb
test
xor
addb
xor
inc
sub
jb
jecxz
xchg
aam
push
cmp
les
jecxz
xor
inc
pop
jbe
or
out
cmp
or
ljmp
xor
cwtl
lods
fs
loopne
cmp
outsb
stos
mov
shll
cmp
and
gs
std
xor
in
xor
out
imul
sub
mov
cwtl
enter
jb
pop
sub
inc
outsb
loopne
push
fwait
mov
push
aas
test
pop
out
mov
jae
loopne
fldpi
lds
test
xor
mov
sub
dec
loop
adc
mov
or
cmp
inc
pop
mov
sbb
sbb
adc
sbb
push
mov
jo
addr16
aaa
sarl
loope
pop
pop
push
xchg
mov
adc
mov
jae
jns
scas
adc
xor
lock
loope
je
movsl
jg
addl
add
cmp
or
cmp
pop
dec
sbb
and
ret
out
jnp
pop
jmp
mov
fcompl
mov
push
fmuls
data16
lods
mov
push
dec
xchg
cmpsb
shl
cmpsl
lret
mov
or
jle
and
test
adc
incb
and
bound
jnp
iret
lea
mov
sub
movsl
leave
in
xor
subb
xchg
icebp
out
sahf
mov
je
inc
int3
fldl
cmpsb
push
adc
push
hlt
and
xchg
subl
cltd
das
or
cmpsl
push
lcall
cmp
mov
mov
mov
clc
call
jmp
out
dec
sub
or
mov
addb
or
lock
and
orl
std
mov
lahf
lcall
dec
adc
inc
ror
mov
mov
cmpsb
adc
cmpsl
cmp
mov
add
mov
fwait
push
xor
pushf
jns,pn
clc
ret
mov
or
jl
lahf
mov
ja
xchg
add
cltd
dec
nop
pushf
push
inc
pop
incb
mov
mov
jmp
cmp
mov
xchg
mov
cmc
push
loope
adc
xchg
lret
cvttps2pi
movsb
mov
fimull
xchg
xchg
fldcw
addr16
movsb
push
ret
pop
add
into
adc
inc
pop
jle
mov
and
lods
jbe
dec
pop
add
xchg
fdivrl
mov
adc
inc
xchg
push
es
lds
and
mov
pusha
lock
insb
cmp
outsl
sub
test
fs
lahf
dec
cmp
cmpsl
cmpl
dec
mov
push
aaa
inc
jno
jb
fmul
lret
adcl
stos
dec
aas
or
loope
std
sub
xor
pop
call
sbb
jbe
dec
add
sub
jp
subb
add
lock
scas
data16
pop
js
or
orl
add
lods
push
out
dec
or
push
fs
push
lods
loope
mov
push
cmp
popf
cmp
push
adc
hlt
sbb
repnz
aaa
sbb
enter
loope
mov
aad
cmp
out
xchg
add
cmc
cltd
cmpsb
xor
or
outsb
fnstenv
into
es
mov
sti
loope
cmpsb
cmp
sbb
xchg
adc
daa
or
stos
jae
adc
push
ja
lock
inc
mov
sbb
data16
iret
jecxz
jbe
sbb
test
pop
sub
dec
push
outsl
out
sbb
jbe
adcl
rclb
fbld
das
jle
inc
enter
xlat
and
mov
sub
inc
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
lds
jno
xorl
pop
mov
ss
lods
mov
int3
lret
cmc
aas
xor
stos
xor
clc
sti
or
sbb
in
lret
xlat
cli
fsubp
jo
push
sbb
push
addr16
mov
insl
jge
insb
inc
cmp
inc
idivl
push
testl
jecxz
movsl
stc
das
pop
bts
cmp
or
xlat
daa
fstpt
sub
rorb
mov
cli
xor
sub
out
and
imul
out
sub
or
pop
mov
adc
mov
xchg
ja
push
aas
and
push
hlt
hlt
xchg
mov
scas
pop
add
cmp
scas
jne
mov
cli
fcoms
jg
cmpsl
ret
data16
scas
or
xchg
js
jle
fmuls
push
mov
test
inc
mov
add
sub
loop
lcall
repnz
dec
xor
inc
xor
gs
pop
cmp
int3
outsb
mov
pop
in
inc
loopne
and
mov
addr16
or
outsl
das
out
pop
add
ljmp
dec
jmp
dec
cmc
movsb
mov
cmp
cwtl
fwait
push
mov
call
or
mov
jmp
fiadds
rdpmc
sbb
pop
sub
xor
das
in
sahf
mov
rorb
jno
out
popf
mov
cmp
call
ficoms
gs
and
sbb
dec
es
mov
mov
sbb
ss
inc
mov
mov
popa
push
subl
lods
test
jg
aas
lret
inc
dec
test
cmpsb
inc
cmp
lds
popf
or
loop
subl
clc
or
loopne
xor
mov
add
or
push
fst
adc
sbb
mov
enter
imul
push
dec
fnstenv
xor
in
adc
mov
scas
pop
mov
je
fmuls
enter
inc
cmp
jo
sub
cmp
mov
xchg
sar
test
inc
test
cld
int3
sbb
in
das
test
clc
and
push
mov
add
push
cmp
mov
and
ret
and
adc
push
adc
and
leave
inc
mov
fidivrl
mov
fwait
lods
pop
jecxz
cmpsb
js
dec
jne
jge
jmp
and
loop
mov
js
bound
jmp
push
sub
loopne
and
mov
xchg
fcoms
les
ljmp
inc
sub
ss
adc
mov
and
inc
into
leave
adc
pop
sti
mov
ret
mov
mov
fdivrs
xor
adc
lret
lret
add
adc
daa
loop
lahf
stc
aam
inc
jg
aaa
enter
cs
fwait
ljmp
and
push
je
cmp
adcb
stos
sahf
pop
xor
sub
push
mov
inc
in
mov
sbb
loop
lret
cs
cmpb
sbb
cmp
xchg
cmpw
sub
mov
icebp
mov
sarl
out
inc
pop
mov
sub
cmpsb
jo
sbb
xor
cmp
push
mov
jecxz
push
shlb
lahf
xchg
icebp
adc
xchg
test
cmp
aad
xchg
lcall
fbstp
push
scas
add
ror
ja
out
xchg
out
push
inc
imul
popa
out
or
lcall
xchg
jb
sarl
dec
daa
stos
adcl
ret
xor
push
cmp
fidivrl
ja
in
ret
cmp
aaa
out
in
mov
es
push
jecxz
or
ja
imul
inc
cli
in
ret
xchg
cwtl
mov
xchg
addl
idivb
xor
sbb
cmp
ds
lret
dec
pop
sahf
and
lods
repnz
adc
sub
fwait
incl
sub
dec
jge
jg
xchg
inc
mov
and
addb
inc
mov
inc
rcrl
pop
mov
push
cld
sbbl
cmc
subb
mov
and
xchg
mov
gs
jne
jb
mov
adc
or
add
repnz
les
sub
addl
dec
ds
aad
or
lcall
aam
mov
cmp
inc
aad
xor
dec
ljmp
test
sub
add
or
and
or
repz
andl
lret
pop
and
stos
mov
arpl
inc
popf
rcrl
movsl
add
xchg
sub
cltd
sub
mov
mov
pushf
repnz
out
jp
ret
mov
push
cld
xchg
enter
sub
loope
cmc
xchg
bound
clc
add
das
xchg
or
push
pusha
xlat
push
mov
loope
xchg
cltd
pop
and
inc
push
mov
jne
nop
popa
mov
mov
divl
push
adc
in
movsl
sub
rcrl
outsl
lock
in
inc
scas
add
mov
outsb
jns
jmp
in
or
push
push
mov
shr
pusha
mov
mov
jnp
idiv
enter
scas
addb
mov
lock
cld
mov
int3
addl
les
pusha
ja
pushl
adc
popa
xchg
inc
mov
iret
jno
test
xchg
jg
cmp
sub
fimull
and
in
add
lods
fdivs
cmpb
mov
sub
pop
xchg
pop
cmc
rolb
cwtl
mov
insl
adc
mov
icebp
or
mov
jns
dec
sahf
cld
fadds
or
mov
jne
add
or
dec
xchg
sti
pop
mov
enter
pop
mov
cmp
loopne
dec
pop
jns
sti
sbb
scas
mulb
out
jno
in
pop
cmp
dec
ss
xorl
sub
std
dec
mov
scas
add
pop
fisubs
xchg
dec
pop
dec
enter
rcr
jb
mov
mov
push
inc
outsb
sbb
jnp
xchg
test
dec
push
jmp
push
rol
roll
scas
dec
and
inc
mov
push
jnp
insb
int3
arpl
sti
or
push
or
lds
in
xchg
daa
das
sub
inc
adc
and
lret
je
lcall
sub
jl
shlb
mov
dec
xor
jge
icebp
mov
inc
jg
dec
pop
xchg
out
call
lahf
popa
mov
cmp
jo
out
aaa
mov
popa
leave
icebp
sar
ds
inc
add
fiaddl
push
jge
push
je
loopne
jno
pop
xchg
inc
sub
cmp
cwtl
or
movsl
mov
mov
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
xchg
pop
cmp
pop
cli
adc
jge
prefetchnta
pushf
pop
push
sub
dec
sbb
popl
es
or
mov
out
ret
cli
shll
jge
push
cltd
xchg
cmc
les
adc
jo
test
int
or
cmp
lahf
cmp
hlt
sbbl
jle
xacquire
out
xchg
lods
or
not
sahf
and
dec
or
sub
and
divb
dec
popf
adc
popf
cs
mov
out
inc
push
pop
jmp
xor
xor
adc
and
mov
adc
sbb
push
mov
inc
xlat
ret
dec
das
stos
fldt
jmp
in
fsubrl
in
adc
jp
mov
loopne
aas
sbb
sbb
hlt
mov
and
fcomi
fbld
std
mov
inc
cmpsl
and
loopne
jo
mov
pop
bound
fbstp
hlt
sbb
inc
adc
fcmovb
dec
js
inc
dec
imul
or
jne
add
sbb
mov
int3
or
je
push
and
leave
jl
pop
inc
xchg
cmp
hlt
iret
int
test
add
loopne,pt
aas
ret
repnz
lock
sub
jae
add
jno
fwait
int3
cmpsb
daa
lods
jo
in
push
fwait
mov
frstor
jg
mov
inc
icebp
dec
inc
inc
inc
std
scas
push
jbe
fwait
inc
push
in
adc
bound
das
pop
jb
fisttpll
jo
cmp
sbb
xor
cmp
sub
int3
movsl
mov
cmp
roll
repz
mov
and
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
