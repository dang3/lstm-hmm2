push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
xor
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
jmp
lret
sbb
or
sub
inc
testb
addl
xor
je,pn
jo
dec
jo
jae
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
and
cmpsb
jb
repnz
loop
inc
lret
pusha
add
jecxz
std
clc
popf
dec
or
ds
inc
test
dec
lods
pusha
inc
add
or
jmp
mov
mov
xor
call
pop
std
in
test
lods
push
push
pop
imul
mov
lcall
das
jg
data16
loop
and
sarb
std
cld
push
mov
push
fsubrl
add
aaa
xor
xchg
inc
jo
imul
js
mov
push
lea
pop
popa
dec
mov
and
das
lret
sbb
jmp
xchg
cmp
andb
xchg
outsb
lds
cli
jl
ja
pusha
lret
fmul
outsl
xchg
dec
jge
adc
fwait
and
in
lahf
cmp
mov
add
call
hlt
jnp
in
js
fldl
fcoml
or
loopne
addb
dec
imul
icebp
mov
inc
insb
add
pop
jnp
add
shl
lcall
mov
mov
sub
adc
inc
hlt
mov
xchg
ja
in
mov
lahf
pop
and
or
sti
pop
cmc
cmp
addr16
fisttpll
pop
lock
fldl
rclb
cltd
aam
testb
icebp
xchg
lods
mov
pop
cmp
fcmovbe
jg
fists
test
adc
pushl
test
cli
mov
cld
sub
mov
cli
lahf
ror
jns
inc
and
or
cmp
jns
pusha
mov
jae
bound
fdivrs
push
mov
push
dec
sbb
push
ljmp
xchg
xchg
daa
mov
lahf
push
leave
dec
fsubl
lds
hlt
addr16
adc
and
popf
in
jmp
ret
push
or
movntpd
xchg
mov
cld
mov
popl
jbe
inc
xor
insb
dec
aad
fnsave
push
gs
mov
adc
lcall
divl
xchg
stc
cwtl
fsubs
shlb
mov
iret
pushf
pop
rcrl
xor
push
pop
scas
aaa
dec
or
xlat
int3
sub
lock
xchg
cmpsb
insl
push
inc
inc
xor
in
push
loop
and
push
shll
lods
push
push
mov
pushf
pop
lea
les
aam
mov
clc
aam
or
je
pop
sbb
mov
mov
mov
popf
dec
sbb
pusha
movsl
mov
xlat
xchg
xor
lea
in
inc
xchg
and
push
pop
xchg
jle
movsb
jae
mov
call
pop
and
and
inc
adc
decl
mov
sbb
push
movsb
popf
jecxz
mov
fidivl
hlt
sub
in
ljmp
lahf
push
and
xor
fcomps
loopne
ffree
ror
inc
adc
test
and
pop
scas
xchg
rcrl
and
lcall
stos
clc
mov
xchg
out
ret
rorl
mov
mov
xor
push
pop
cmpsb
push
push
mov
test
mov
jge
sbb
cmpsl
lcall
outsl
nop
sti
out
cmp
cltd
jns
ret
aad
rol
xchg
and
dec
add
js
jns
pop
cmp
in
ss
jae
cwtl
xchg
or
lock
sub
inc
outsl
pop
jg
mov
xchg
push
iret
addr16
stos
sbb
jne
sub
gs
mov
mov
and
shll
mov
adcb
fildll
xchg
xlat
dec
loopne
out
outsl
std
sbb
pusha
dec
dec
mov
mov
and
mov
popf
pop
loop
sub
lcall
movsl
xchg
sbb
outsb
js
mov
jnp
sub
fiadds
pop
cmp
cmc
mov
inc
daa
aaa
pop
and
pop
cld
xor
add
push
mov
popa
sub
daa
or
out
pop
or
mov
mov
inc
mov
adc
xchg
fcmovb
aas
mov
push
lret
sbb
mov
or
dec
test
test
and
in
movsb
scas
sbbl
in
fldenv
adc
mov
pop
fstps
fs
mov
dec
sub
mov
pop
call
xchg
adc
adc
pop
dec
fcoms
sbb
rorl
dec
adc
cmp
in
xorb
scas
cld
xor
repnz
fmul
cmp
pop
aaa
dec
inc
imull
cld
testl
rcrl
or
rol
sub
dec
lret
mov
mov
pop
xchg
xchg
ja
xchg
ds
adc
dec
lret
pop
adc
iret
inc
icebp
mov
mov
sti
cmp
dec
mov
test
mov
lcall
xor
mov
jne
inc
clc
sbb
jl
dec
hlt
hlt
inc
mov
inc
dec
arpl
outsb
adc
std
sub
fidivs
push
cmp
mov
hlt
ret
or
pmulhw
sbb
mov
addr16
fld
fwait
xchg
add
in
mov
mull
cli
pusha
jecxz
aaa
and
mov
xor
clc
in
imul
push
mov
pop
jl
je
xchg
cmp
lock
sti
bnd
mov
cmp
pcmpgtd
fmuls
mov
out
inc
loope
pop
addr16
push
add
mov
hlt
and
leave
jne
es
inc
cli
sub
push
leave
push
pusha
add
pop
push
int3
push
mov
pop
js
rcrb
pop
mov
add
mov
pop
mov
rcrl
imul
ret
dec
add
xchg
mov
jp
pop
mov
mov
sub
pop
lds
xchg
cli
int3
aas
movsb
push
or
jl
loope
jle
jmp
stos
inc
out
in
mov
or
in
std
gs
in
scas
and
adc
and
or
sub
ret
fwait
mov
xchg
inc
mov
out
popa
dec
test
sbb
loope
fsts
xor
adc
lahf
test
fcoms
popa
gs
jle
pop
sbb
jmp
inc
xchg
lahf
test
sub
cwtl
or
cltd
cmp
loopne
pop
insl
mov
or
dec
mov
adc
repnz
adc
sbb
inc
pop
jnp
leave
ret
and
dec
add
pushf
sub
add
pop
flds
mov
cltd
out
mov
lar
pop
xchg
test
ret
into
outsl
sbb
jne
xchg
lea
xor
mov
sarb
xchg
mov
rorb
fsubrl
movq
jno
mov
testl
push
xlat
or
sbb
mov
iret
add
and
je
or
inc
test
or
data16
int3
cmp
ja
cmc
fisttpll
mov
add
bound
mov
pop
pop
jb
pop
lock
adc
movsl
mov
shrb
adc
test
stc
leave
mov
mov
movsl
dec
out
xchg
mov
loope
xor
adc
leave
fnstenv
and
mov
sbb
sbb
add
fwait
dec
sbb
and
xchg
or
popf
sbb
bswap
push
jp
dec
inc
push
cli
adc
fcmovb
lret
push
lds
xchg
xor
lcall
nop
mov
push
adc
popf
scas
mov
into
aas
lcall
inc
fstpt
adc
and
xor
mov
lods
clc
das
jb
cli
cmp
in
pop
sarl
movl
jmp
xlat
mov
loope
ds
pop
je
sbb
xor
push
push
das
mov
dec
push
jnp
sub
stos
outsb
inc
arpl
lods
stos
sub
mov
add
test
jl
fwait
sbb
xchg
nop
and
movsb
rcr
fildl
imulb
pop
call
or
inc
ret
mov
out
xor
push
cmpl
loope
leave
in
and
movsl
jb
subl
lret
add
insl
adc
nop
push
imul
adc
mov
sbb
fdivl
gs
xor
cmp
sti
bound
ret
pop
pop
aam
push
bnd
std
insl
inc
fildl
psubq
into
sahf
inc
inc
or
mov
rcrb
outsb
iret
mov
loopne
sub
data16
add
pusha
sbb
cmp
jg
lods
and
stos
mov
xchg
shlb
sti
mov
das
sbb
leave
xchg
dec
mov
mov
lcall
adc
out
adc
push
sub
fdivrp
outsl
cmc
cmc
or
mov
nop
std
push
in
jle
cmp
jne
fsubrl
movsl
setge
adc
ss
jmp
sub
mov
fcompl
repnz
lods
outsb
incl
jae
xchg
inc
stos
xchg
mov
sahf
dec
adc
insb
dec
loop
lret
lea
cwtl
jp
dec
jno
xchg
dec
inc
pop
clc
subb
cmc
mov
sub
inc
xor
test
popf
and
repz
dec
cmpb
arpl
call
mov
scas
cmpsl
pop
jnp
dec
lret
pop
cmpsl
scas
jbe
test
subb
or
cld
repnz
push
pop
xchg
adc
pop
jmp
imull
push
cmpsb
test
pop
pop
add
ja
or
fiadds
xchg
mov
push
hlt
xchg
stos
test
cmp
jno
xor
repz
xchg
dec
dec
dec
sub
and
mov
jo
adc
mov
cltd
push
xchg
lds
push
imul
test
ret
xchg
out
xlat
repnz
pop
push
xchg
sbb
dec
sub
add
faddl
bound
int
cmc
add
or
vhsubps
scas
mov
mov
and
adc
cmp
cmp
and
insb
lret
es
xchg
cmp
cmp
and
cmp
ret
fsubrs
push
in
cltd
dec
sub
dec
int
add
test
mov
pop
les
inc
xor
lock
lahf
insb
push
aaa
jnp
push
cmp
sbbb
jmp
push
jge
adc
aam
add
in
stos
dec
add
push
push
mov
mov
repz
push
push
lcall
xchg
test
ret
cmpsb
sub
sub
pop
ficoml
or
pushf
pop
outsb
fists
xor
dec
mov
es
sbb
les
in
outsl
cltd
lods
andb
nop
mov
data16
sub
mov
cld
mov
in
and
mov
or
mov
mov
add
sbb
jmp
cld
adc
test
sahf
pop
adc
xchg
fidivrl
sub
mov
push
sbb
ljmp
push
cwtl
lds
pop
xchg
scas
add
loopne
shll
icebp
jl
out
sbb
pop
nop
int3
dec
push
les
icebp
and
jmp
testb
mov
mov
xchg
mov
cmp
xchg
and
mov
xchg
dec
ret
les
jno
hlt
fldt
test
push
jecxz
popf
jp
or
in
popf
push
ficomps
clc
sub
sbb
fmull
js
push
mov
mov
shlb
sbb
jp
das
nop
cmp
movsb
or
popf
movsl
xchg
jb
add
pop
in
xor
add
xchg
lret
adc
outsb
lcall
iret
xchg
test
stos
inc
sbb
inc
xchg
and
test
pop
lods
xor
sarl
push
mov
jge
sbb
adc
stos
aad
movsl
sbb
and
rcr
mov
outsb
sub
cwtl
movsl
js
in
aad
mov
inc
xor
in
out
rorl
scas
cwtl
push
lock
mov
adc
mov
mov
ret
pop
jbe
dec
push
pusha
aaa
cmp
cmp
es
jo
pop
fwait
add
push
mov
aas
add
dec
mov
xchg
cmovnp
rcrb
fcoml
rcl
xor
iret
dec
push
movsb
add
mov
outsl
or
or
out
sbb
dec
ljmp
in
rcrb
jp
lods
fstpl
out
popf
push
push
xchg
pop
xor
mov
inc
orl
sbb
mov
add
leave
sub
xor
pop
scas
xor
in
and
xor
mov
insb
jp
lret
push
xchg
out
xchg
mov
push
leave
pop
jo
hlt
mov
aad
push
loopne
dec
xorw
push
and
fdivl
jae
xchg
ret
pop
inc
test
or
lods
shr
pop
mov
and
inc
xchg
insb
ljmp
popa
mov
ret
imul
cmp
mov
pushf
popa
or
mov
cmp
stos
adc
das
imul
and
sbbl
out
pop
cmp
outsl
lret
jnp
or
mov
cmp
outsb
and
pushw
mov
xchg
nop
add
or
das
fidivs
mov
xchg
arpl
imul
popf
xor
adc
sbb
imul
mov
push
sub
xor
sub
dec
mov
or
pop
push
out
data16
xchg
shlb
fidivrs
imul
clc
mov
mov
mov
mov
arpl
clc
lahf
faddl
push
scas
cwtl
aam
ds
insl
imul
adc
cmc
insl
rclb
mov
mov
gs
mov
adc
lret
dec
decb
enterw
xor
mov
mov
cmp
mov
adc
cmpsl
fistpll
lret
sbb
xor
jge
cmp
jns
lods
push
mov
jge
and
cli
lea
in
adc
shrb
lock
sub
and
leave
and
push
push
pop
xchg
loope
pop
leave
lds
mov
add
lahf
shlb
movsl
cmc
sub
mov
xchg
push
orb
ret
mov
mov
mov
rcll
cmp
mov
pop
xchg
jne
xor
or
and
pop
sbb
std
sbb
adc
jmp
add
lods
pop
pop
dec
and
add
adcl
jnp
lret
outsb
add
cli
mov
clc
add
test
sub
push
fstl
shrb
stc
push
push
daa
add
fmull
push
scas
test
ljmp
int
pop
cld
and
sbb
ljmp
stc
xchg
pop
dec
cld
lret
into
push
push
or
insb
pop
lret
mov
jle
mov
dec
and
loopne
fcoml
xor
and
xchg
add
pop
pushf
push
enter
fimull
lret
sbb
cmp
and
mov
mov
fcomps
popa
arpl
mov
imul
lret
push
xlat
ja
push
scas
push
shrb
pop
popf
push
in
out
out
jae
and
pop
jmp
mov
das
xor
lds
je
pop
lahf
xchg
push
pop
jns
xor
or
or
xor
jbe
adc
inc
data16
shrb
mov
mov
adc
or
out
bswap
mov
inc
inc
aad
mov
stos
data16
lahf
bnd
xor
ja
ficoms
lds
loopne
xor
jns
mov
jmp
mov
pop
scas
push
adc
or
test
dec
push
dec
pop
inc
bound
or
mov
and
inc
mov
pop
insb
popa
lods
ss
push
and
xchg
mov
cmp
pusha
jge
jns
daa
mov
stos
jb
mov
cmp
sbb
adc
sti
mov
test
cmpsb
into
ret
insb
fidivs
out
test
loope
adc
call
or
xchg
ljmp
dec
lahf
cmc
pop
mov
cmp
fsubrl
cmpsb
or
loop
xor
add
push
xor
pop
fwait
inc
mov
insb
jge
mov
xor
pop
sub
sbbl
ror
sti
test
scas
xor
into
pop
movsl
ja
popf
jbe
sahf
andb
push
ja
cwtl
stc
adc
fwait
xlat
sub
mov
inc
cmp
mov
add
pop
sbb
mov
jle
mov
lds
imul
inc
inc
mov
ljmp
gs
test
cmp
jmp
daa
lahf
mov
sub
fdivrl
adc
hlt
xor
imul
fs
lahf
add
fcmovnbe
xor
ss
jbe
addl
adc
sbb
bound
adc
dec
stc
incb
shlb
aas
iret
cltd
jno
jae
mov
pop
sti
popa
out
jbe
jle
adc
xchg
jge
fcomps
sub
in
inc
cmpsl
leave
adc
add
push
pop
push
pop
stos
push
jecxz
dec
push
xor
rcrb
xorb
mov
imul
data16
adc
and
imul
jge
jbe
setbe
scas
es
inc
push
insl
dec
xchg
sub
mov
lret
clc
cwtl
inc
or
pop
test
int
inc
out
jge
sub
out
adc
lahf
das
fcoml
sahf
movsl
mov
repz
add
pop
imul
fs
sbb
fistpl
jo
mov
jmp
lea
call
xor
inc
js
rorb
mov
jl
enter
and
ror
pop
sub
push
cmp
out
fimull
popf
cli
push
filds
push
fdivrs
cmp
or
jne
loopne
insl
insl
neg
int3
jnp
sub
mov
push
adc
xor
jo
jge
pop
pop
cmp
subb
jne
mul
mov
cmpl
hlt
adc
call
shr
std
push
or
fiadds
ret
mov
sub
push
daa
js
jns
jge
sahf
xor
mov
mov
xor
and
arpl
enter
jb
jle
and
mov
cmp
call
xlat
int3
jns
pop
outsl
push
sub
jge
mov
rcrl
cmp
movsb
fs
rcrl
or
jmp
mov
movsb
popf
inc
inc
movsb
cmpsb
mov
gs
in
mov
pushf
adc
and
dec
clc
in
sti
shl
push
bsr
loopne
stos
in
sbb
inc
jb
lock
lret
push
js
mov
jg
out
imul
push
scas
dec
cmpsl
xchg
mov
sub
popf
mov
add
fwait
sub
and
imul
inc
js
or
sub
repnz
pop
add
aas
mov
push
imul
mov
cmpsl
add
dec
hlt
add
or
jmp
test
cmp
lock
cmp
mov
testb
cmp
daa
inc
mov
jno
push
dec
add
inc
jp
icebp
jp
and
ljmp
cmp
jmp
imul
aad
lahf
sub
js
cltd
popa
xchg
dec
xchg
mov
or
jmp
nop
xor
cmp
push
lea
rolb
pop
fcomp
push
sub
pop
outsb
sahf
leave
sbbb
inc
jp
or
lock
jg
jg
clc
int3
cli
int
and
mov
daa
shll
inc
mov
xchg
or
cmp
xlat
clc
das
push
fisubl
and
rcrl
cmp
js
sbb
in
xchg
ja
push
cmp
shrb
add
je
bound
mov
pusha
jmp
cvtdq2ps
mov
subb
in
dec
dec
push
and
adc
jle
lret
pminub
fsubs
fiaddl
aaa
mov
push
sbb
cmp
push
das
mov
mov
sbb
iret
cmp
notl
jmp
xchg
sahf
jl,pt
mov
sbb
cmpsb
add
xchg
xlat
jecxz
and
test
mov
and
movsl
pusha
xchg
jp
mov
out
push
lods
in
mov
or
or
and
mov
lea
xchg
fistps
es
test
and
into
cmpsb
stos
and
pop
xchg
scas
and
dec
insb
and
gs
or
mov
or
xchg
pop
jbe
pop
imul
adc
mulb
mov
fadds
xchg
dec
push
imul
mov
jbe
xorl
or
aas
pop
sbb
mov
add
xchg
mov
nop
push
arpl
sub
mov
lea
insb
dec
lea
cmp
movsb
inc
sahf
movsl
pushf
jns
xchg
jnp
jo
repnz
jne
test
jge
sub
push
mov
int3
fsts
fucomi
sbb
dec
roll
pop
lods
xchg
sbb
imul
mov
mov
dec
adc
test
stc
inc
daa
xorb
mov
shlb
mov
mov
adc
inc
inc
inc
andb
and
mov
int3
dec
xor
fbld
add
pop
mov
xor
pusha
lcall
jmp
xorb
sbb
mov
or
je
pop
xchg
add
mov
aas
push
movsl
imulb
cld
mov
jne
sub
or
cmc
push
sbb
and
icebp
mov
cltd
cwtl
push
loopne
adc
std
orl
cld
into
in
sbb
lds
xlat
arpl
pop
sbb
std
adc
mov
sbb
test
adc
clc
lahf
cwtl
rcll
push
xor
push
and
push
push
mov
pop
test
ficomps
stc
out
inc
lods
pusha
xchg
cmpsb
mov
test
out
repnz
movsl
mov
cmp
lret
or
shll
repz
mov
pop
inc
fildl
jns
test
xchg
lahf
xchg
xchg
and
in
icebp
daa
das
adc
xor
fdivl
adc
cmp
mov
jp
iret
mov
je
sahf
shl
subl
les
push
fstl
imul
outsl
cs
lods
icebp
xor
lods
sbb
int
cltd
mov
cmp
mov
addr16
notb
ds
je
std
pop
std
dec
scas
mov
mov
jp
mov
fisttpll
lock
pop
out
insb
xchg
jb
orb
sbb
mov
and
aad
adc
mov
jb
ret
push
loope
ja
pushf
test
data16
jae
inc
fwait
lcall
outsl
fadd
ds
push
pop
popf
not
fs
pop
adc
std
mov
mov
and
mov
lods
lret
add
loopne
fs
rcll
test
cs
mov
imul
bound
aad
les
je
insl
scas
je
lcall
ret
ja
mov
sub
push
fcoms
addb
sub
push
push
test
ss
sahf
lds
in
xchg
fisttpll
sti
mov
cmp
repz
add
pop
mov
or
bound
pop
or
jmp
jae
push
jbe
icebp
sar
movsb
mov
addr16
nop
iret
sarb
and
push
data16
fs
mov
mov
int
and
sub
fisubrl
push
frstor
push
mov
xor
xor
jecxz
cmp
arpl
jle
in
pop
in
ja
cli
cs
cs
jo
movsb
imul
cmpsl
inc
mov
xor
dec
add
ficompl
mov
in
mov
jmp
inc
stos
adc
jl
adc
sbb
leave
mov
and
push
jmp
daa
aam
loopne
insb
outsl
pop
sbb
andb
adc
pop
xchg
and
in
popf
xchg
pop
arpl
stos
mov
outsl
or
and
loop
es
call
lcall
dec
xor
mov
xor
leave
mov
les
dec
xorl
insb
pushf
shrl
std
lahf
dec
insb
js
dec
stos
mov
std
xchg
mov
lahf
cmp
hlt
sar
or
inc
out
aad
call
insb
mov
cmpsl
xor
adc
jge
je
fwait
test
pop
das
stc
ljmp
leave
loop
addr16
mov
mov
add
inc
int
lea
xchg
sub
fnsave
iret
andb
std
cmpsb
inc
sub
ss
out
mov
xchg
cmp
sub
sbb
xor
mov
dec
push
jae
insl
test
xor
movsb
inc
out
pop
ret
sbb
out
pop
or
and
jne
inc
jb
idivb
dec
lods
bound
fcoml
stos
ret
adc
je
cmp
xor
fwait
in
or
ja
add
mov
or
jecxz
and
fsubl
jb
sbb
cli
jno
or
movups
add
jns
outsb
adc
cltd
add
inc
ret
add
push
push
jp
data16
inc
shll
lahf
mov
lea
nop
pusha
jbe
stos
aas
clc
adc
dec
ror
ss
lret
lods
dec
enter
inc
lahf
pop
jge
mov
push
fst
es
sub
adc
jbe
inc
addr16
or
data16
mov
push
xor
push
xor
cmp
xchg
shll
or
lcall
sub
lds
pop
add
shll
jne
out
data16
push
mov
in
insl
cmp
jge
daa
push
cwtl
mov
or
fists
xor
jae
sarl
push
pop
rcl
sbb
js
nop
imul
sub
pushf
mov
mov
rcl
mov
adc
dec
sbb
sahf
adcb
xchg
jmp
aam
jb
rcl
inc
lods
clc
xor
cmc
xor
fisttpl
sub
lahf
jp
pop
leave
jne
sub
pop
imull
adc
sti
cmp
and
iret
test
fbld
lods
fldenv
xchg
cmp
cmp
jo
mov
fdivs
scas
and
push
mov
shrl
pop
adc
or
pushf
sbb
adc
clc
mov
stos
lret
sahf
sub
pop
leave
andb
stos
outsb
mov
pop
hlt
cltd
push
xor
add
sub
lret
incl
adc
orl
jbe
mov
sbb
cmp
push
mov
dec
mov
adc
pop
ret
in
push
and
ret
pop
mov
xor
sub
and
xlat
adc
pushf
arpl
das
sahf
outsb
in
dec
push
in
mov
mov
inc
pop
mov
add
push
in
popa
adc
dec
xor
push
out
leave
sub
or
stos
pop
pop
cmpsl
test
fwait
insl
rcrl
sbbl
int3
mov
outsb
xchg
movsb
das
syscall
cwtl
dec
ds
push
fcomp
out
jno
pop
insb
mov
in
adc
cmp
out
sub
ss
aam
orl
out
scas
and
push
pop
fmuls
sbb
mov
mov
popa
cmp
pop
ljmp
nop
rolb
movsl
adc
inc
lock
das
pop
stc
or
lock
stos
mov
or
push
mov
mov
aaa
nop
out
mov
jg
cltd
sub
xlat
testb
push
sbb
inc
inc
test
movsl
push
mov
pop
cmc
daa
mov
in
call
faddl
or
cmpsl
dec
lret
xor
push
inc
das
mov
or
xchg
loopne
stos
sbb
cmpsl
test
inc
add
sub
xor
xchg
bound
mov
aad
pop
ljmp
and
in
pop
test
add
int
imulb
push
lea
xchg
inc
jae
push
inc
adc
or
in
js
mov
fisubs
inc
lahf
xchg
fsubrs
rcr
out
in
dec
sbb
imul
sub
call
sub
mov
jmp
es
xchg
jb
adc
iret
lods
push
ljmp
add
push
mov
mov
imul
dec
cltd
jb
xlat
sbb
xchg
movsl
in
mov
loopne
sbb
dec
and
xchg
inc
imul
leave
cli
add
fadds
lds
cld
inc
mov
ja
out
iret
daa
enter
leave
dec
cld
and
mov
jecxz
clc
or
push
push
cmpsl
incb
push
jb
in
sbb
adc
push
pusha
sti
add
push
adc
xor
adc
out
movsl
sbb
xchg
xor
scas
and
and
push
push
mov
cld
int3
fnstenv
mov
es
push
repz
dec
cmpsb
stos
or
pop
add
imul
in
and
cli
adc
bound
loope
mov
pop
sbb
mov
mov
loop
inc
jl
iret
mov
testb
pop
in
nop
in
scas
iret
test
sub
push
cmp
jae
mov
mov
pop
pop
test
xchg
pop
je
mov
push
fiadds
inc
dec
mov
mov
mov
xlat
lret
sahf
xor
pop
sarb
leave
cmpsb
addr16
data16
add
int3
dec
sub
scas
lods
and
xchg
xchg
dec
mov
add
xchg
roll
int
mov
icebp
hlt
imul
cmc
nop
cwtl
pop
jo
repnz
mov
out
xor
sub
ljmp
ror
in
inc
rcrl
and
rclb
cmpsl
mov
sbb
lods
sbb
in
jnp
or
mov
xchg
sub
insb
xor
into
sub
push
xchg
rcrb
or
sbb
add
lds
movsl
pop
xor
stc
dec
cmc
and
ja
les
dec
inc
jl
ret
or
push
test
fwait
sub
ret
scas
sub
ljmp
mov
cmp
xlat
mov
ret
push
movsb
cmp
into
out
push
push
mov
int3
nop
sbb
scas
lock
xchg
fnsave
and
testl
mov
dec
stc
popa
je
sbb
fldcw
ss
mov
cmc
xor
mov
dec
in
outsb
cli
enter
pop
es
loopne
scas
or
push
lret
mov
and
pop
je
jno
mov
jg
popa
mov
pushf
outsl
xor
cmpsb
xchg
xchg
mov
xchg
inc
pop
cmp
lods
mov
ret
inc
cmp
add
jge
xchg
ds
sbb
push
cmp
popf
mov
dec
pop
add
pop
xor
add
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
movl
mov
mov
xor
mov
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jne
mov
neg
mov
adc
jmp
inc
nop
jl
rolb
mov
and
out
pop
addl
xor
jne
in
arpl
jno
xor
xchg
or
arpl
dec
mov
insl
dec
sub
icebp
jle
testb
adc
aas
daa
movsb
jp,pt
je
sbb
push
xor
fldenv
inc
adc
sub
pop
enter
push
mov
adc
add
mov
cmp
or
xor
sub
jbe
adc
sub
mov
test
outsb
cmp
shr
in
xlat
pop
shlb
mov
sbb
pop
or
dec
pop
ja
dec
mov
bnd
push
mov
dec
lea
xorl
ror
sub
stos
add
cmp
repnz
dec
pop
and
sub
adc
sbb
scas
cs
mov
std
in
push
push
push
aaa
sbb
jne
cmp
xor
xchg
sbb
add
gs
iret
mov
push
ljmp
push
notw
jno
xor
or
push
rolb
sti
dec
pusha
fnstenv
mov
bound
sbb
or
cld
stc
inc
sub
movsl
xchg
pop
insl
ret
aad
adc
jg
cmc
shl
cmp
cwtl
sbb
aam
pusha
adc
mov
adc
or
cltd
jno
rcrb
sub
inc
adc
xor
mov
xor
sub
adc
movsb
pop
insl
fwait
iret
iret
rolb
sbb
js
adc
ja
push
xorb
pop
arpl
cmpsl
sub
test
jae
dec
in
xor
jnp
addr16
xadd
push
in
cmpsb
loop
int
cmp
orl
push
add
loope
adc
mov
mov
mov
xchg
jne
xor
insb
cmp
arpl
sti
push
ficoms
jo
popa
in
mov
xor
push
psubd
dec
cld
and
lret
push
dec
nop
retw
dec
mov
lret
jb
mov
movhps
dec
sbb
mov
out
lret
pop
divb
jl
mov
and
data16
loop
mov
adc
lock
and
loope
cmp
movsb
daa
fistl
mov
cmp
xor
push
sub
roll
jp
into
daa
dec
mov
and
loop
jmp
inc
xchg
fldt
mov
mov
data16
and
or
movsb
mov
inc
in
adc
xor
iret
movsb
inc
sahf
mul
jmp
pop
inc
sub
fneni(8087
fwait
cltd
add
xor
or
fwait
mov
and
mov
inc
pop
or
jno
fcomi
int3
inc
inc
out
clc
fistpl
sub
insl
pop
sub
xor
cld
leave
and
inc
or
adc
cld
xor
fstpl
and
adc
mov
jns
insb
and
movsl
jmp
add
je
rcrb
xor
push
cld
push
ds
dec
fs
shrl
or
mov
xchg
into
or
jae
pop
mov
xor
cli
mov
sbb
add
dec
push
das
inc
repz
or
mov
pop
testb
pop
adcb
fsubrl
ja
lock
or
insl
or
mov
scas
mov
jge
pushf
add
jl
lret
add
cmp
cmp
push
aad
loop
nop
xchg
xor
mov
bound
stos
in
icebp
cltd
inc
adc
fisubs
popa
cmpsl
xlat
add
sbb
nop
sub
xor
or
cmp
lret
xor
jnp
cmp
jo
lea
xor
pop
fxch
mov
in
lock
sub
sbb
push
add
test
repz
push
cmc
cmp
push
jp
push
dec
pop
add
xor
icebp
sub
add
mov
xchg
rorl
push
cmp
cmp
insl
mov
jp
mov
out
push
sbb
jg
jle
mov
stc
jmp
mov
xchg
imul
mov
sub
fcoms
sti
out
aam
push
adc
sub
fcom
mov
popa
cltd
fsts
gs
sbb
and
and
sahf
fisttpll
and
inc
pop
inc
xor
fs
es
hlt
clc
inc
out
cmp
dec
aam
lods
fisubs
fucomp
mov
inc
enter
mov
mov
mov
sbb
cwtl
dec
mov
cmpsb
mov
lret
jmp
xchg
aas
faddl
out
pop
dec
loopne
sbb
dec
push
popf
inc
sub
lods
and
or
push
andb
test
stc
maskmovq
divl
fistl
mov
add
xchg
dec
xchg
cmp
inc
int3
aad
in
jmp
cmp
or
cmc
lds
js
xchg
pop
mov
mov
aam
push
push
cmpsl
mov
cs
cmp
adc
bound
inc
mov
std
sbb
push
aam
mov
movsb
insb
lods
cwtl
loop
stc
daa
pop
loopne
jecxz
sarl
add
xchg
mov
push
mov
mov
jbe
mov
xchg
call
cmc
dec
jo
sub
test
xchg
adc
hlt
loop
xor
mov
stos
add
inc
mov
mov
and
cld
call
cmp
cwtl
rclb
pop
outsb
lock
cmpsl
and
cmpsl
lret
int3
lods
add
inc
or
lahf
fbld
cmp
mov
and
adc
and
cmp
je
adc
sub
outsl
pop
sbbl
or
scas
icebp
repnz
xor
cmp
dec
jg
fnstsw
loop
jns
stos
test
int
jae
inc
inc
inc
data16
out
sub
mov
int
lea
xchg
lahf
xchg
scas
lea
das
adc
jmp
adcl
push
sub
push
ret
mov
sub
pop
jge
dec
jns
test
add
out
xchg
inc
dec
xor
pushf
in
rcll
scas
imul
leave
adc
ss
fstl
icebp
cmp
jb
daa
push
idivl
cmp
push
jecxz
mov
fcomps
mov
mov
fsubrs
setne
xor
inc
mov
or
inc
and
daa
dec
loope
pop
pop
stc
inc
xchg
call
in
xchg
repz
iret
add
mov
sub
cmp
dec
push
outsb
leave
add
int3
xor
ljmp
sbb
imul
cmpsb
dec
dec
data16
sbb
mov
jb
bound
add
jns
inc
int
jb
bound
add
insb
or
xchg
mov
and
lret
jl
sub
rcl
push
xor
jno
push
cmpsl
in
mov
aam
mov
rolb
jo
xchg
dec
sub
pop
push
stos
dec
mov
adc
mov
andl
push
mov
shrl
jae
xchg
cwtl
in
mov
xchg
es
call
lods
and
pop
mov
add
out
jae
cwtl
xlat
push
xchg
and
ja
sbb
aad
clc
sbb
cmpl
in
xlat
loopne
stos
loope
cmp
and
mov
out
fcoml
outsb
push
scas
fildll
mov
icebp
fcompl
es
adc
xor
cmc
popa
push
movsl
test
dec
mov
inc
sbbl
xchg
dec
loopne
fs
lods
adc
mov
lods
and
mov
inc
in
sbb
std
push
leave
pop
daa
add
jns
push
jb
inc
jne
daa
rol
xchg
outsl
lods
cmp
leave
push
xchg
movsl
cld
sub
mov
mov
cmpsb
inc
or
pop
jl
sub
cmp
psrlq
push
jne
mov
es
add
cmp
mov
cld
mov
sbb
enter
push
enter
pop
dec
mov
xlat
addr16
mov
addr16
sbb
cmp
mov
in
stos
pop
lds
jle
dec
sarb
mov
adc
adc
sub
out
mov
cwtl
mull
and
js
cmp
pop
inc
and
pusha
fimull
or
push
jae
add
xor
dec
mov
cmpsb
mov
add
arpl
push
mov
into
cmpsb
mov
dec
dec
inc
in
scas
ficoml
jo
and
inc
imulb
leave
sbb
inc
mov
or
mov
scas
dec
test
xor
and
out
dec
lret
cmp
or
push
lcall
mov
fisttps
xchg
mov
insb
fcomps
inc
xchg
fcoml
cltd
lahf
push
test
inc
sbb
loope
vcmppd
jbe
or
fimull
jb
mov
data16
adc
fiadds
jne
dec
mov
scas
fidivl
insl
or
lea
mov
pop
lods
fildl
push
daa
lcall
dec
xchg
ja
sub
pop
xchg
mov
pop
or
ret
ret
inc
cmp
pusha
or
lds
cmp
sahf
mov
cmpsl
push
adc
push
pop
aam
push
or
mov
mov
cmp
mov
sar
dec
call
push
mov
xchg
dec
mov
dec
decl
mov
adc
dec
adc
cmp
add
cs
lock
cmp
popa
fcom
xchg
cmpsb
or
mov
mov
test
cli
xchg
xor
jne
imul
ss
pop
push
jae
xchg
in
pop
outsl
sbb
dec
mov
cmp
sahf
pop
xor
ja
ret
pop
stos
aaa
fcomi
pop
dec
adc
insb
loope
hlt
jns
sbb
inc
inc
pushf
mov
lods
js
je
xchg
add
imul
icebp
and
push
jno
xor
ja
dec
mov
into
popf
es
sub
jno
jmp
js
icebp
jecxz
pop
pop
shll
daa
negl
incl
xchg
push
mov
repz
jo
insb
je
mov
xor
mov
cmp
jb
in
pop
cwtl
mov
mov
sbb
aad
xor
lret
jbe
movsb
push
sahf
xor
jb
jmp
lds
jnp
push
lods
inc
dec
insl
mov
insb
xchg
mov
inc
inc
hlt
das
js
shl
sahf
mov
dec
and
stc
int
mov
push
and
and
pop
or
sbb
cmpb
and
dec
jge
xchg
cmpsl
into
insb
lret
adc
add
or
lds
inc
xor
cli
mov
shl
lret
jmp
push
jne
mull
pop
add
push
or
pop
mov
cmp
nop
pop
or
xor
cmpsl
pusha
jmp
inc
xchg
mov
es
mov
jmp
jno
int3
mov
mov
rcr
inc
cli
dec
dec
aad
push
aas
mov
xchg
sub
fnsave
add
sbb
xlat
mov
lcall
ljmp
aam
xorl
xchg
ljmp
daa
mov
je
mov
fsubs
clc
ss
repz
ja
test
scas
pop
mov
int3
sahf
and
inc
nop
mov
jmp
inc
sbb
xchg
xchg
div
out
adc
xchg
setb
adc
daa
cmovo
ds
jnp
jmp
mov
dec
inc
loope
test
pusha
adc
int3
push
aam
lds
je
and
sub
cmc
lods
or
add
insb
fcompl
adc
mov
pop
imul
icebp
sahf
push
orl
leave
adc
adc
aas
into
cmc
movsl
aaa
outsb
movhps
lret
fisttps
out
or
xchg
fsubr
mov
jbe
movsb
dec
setp
and
sub
cli
outsl
jmp
mov
pusha
orb
add
in
adc
sub
push
inc
in
repnz
popf
test
sbbb
xchg
xchg
repnz
outsl
xor
cmpl
repnz
mov
std
inc
and
lea
xor
adc
adc
mov
or
xbegin
mov
adc
xchg
int
das
ljmp
mov
outsb
pop
pop
mov
mov
cli
leave
add
loop
cs
push
fnsave
mov
mov
push
in
stos
ss
mov
push
addl
ss
cmp
jp
push
jp
test
arpl
mov
sbbb
jns
mov
clc
popaw
popf
movsl
lods
pop
fwait
xchg
push
stos
adc
mov
ret
and
adc
inc
mov
dec
dec
mov
sbb
addb
ja
das
mov
mov
jmp
mov
adc
rol
and
add
cltd
ljmp
jl
sub
pop
int3
adc
shrl
stos
cmp
pop
in
and
psubw
out
lds
pop
cli
mov
shrl
cmpl
cltd
pop
cmc
daa
in
mov
inc
push
orl
shrb
subb
dec
pop
pushf
sbb
rcrl
cmp
push
sub
punpckhdq
push
repnz
sahf
xchg
or
mov
inc
arpl
enter
xchg
lea
dec
ds
push
jno
aam
in
bound
test
arpl
ds
aad
pop
mov
jnp
outsb
and
xchg
and
rol
pop
sub
or
pop
aam
sub
rcrb
insl
pop
sub
insb
sub
adc
hlt
dec
and
rolb
lcall
scas
push
push
mov
xor
hlt
data16
imul
stos
mov
imul
sub
add
xor
pop
decb
aaa
call
dec
adc
xor
ficoml
jo
lock
xor
push
pop
imul
jne
ret
add
imul
or
mov
pop
adc
and
mov
je
stos
add
dec
ret
jne
cmp
fstpl
inc
push
mov
scas
mov
dec
sub
dec
inc
jl
adc
xor
mov
stc
inc
js
ss
clc
int3
sbb
pusha
adc
sbb
adc
jnp
sti
and
lret
push
out
ja
sub
addr16
lock
ljmp
push
in
divb
dec
cmp
out
fdivrs
jl
scas
sbb
xor
and
adc
pop
stos
test
rclb
dec
mov
mov
lret
dec
xor
add
jne
dec
into
add
mov
xchg
or
dec
movsl
jno
mov
mov
push
adc
and
inc
cmp
xor
or
cwtl
push
inc
pop
push
roll
ljmp
cmp
push
xchg
insb
mov
clts
loope
xchg
mov
mov
mov
stc
sti
ffree
dec
sub
mov
cmp
mov
sub
bound
push
rcrb
xor
lret
fisubrl
xor
add
mov
adc
data16
push
jmp
or
lock
lahf
pop
int
imul
inc
cmp
ffree
adc
imul
mov
xor
fwait
iret
mov
scas
lcall
movsb
popf
push
insl
jmp
inc
and
xchg
inc
mov
int3
daa
addb
rcrl
in
enter
in
das
mov
xchg
inc
aaa
loope
in
fsubrp
sub
in
push
push
in
dec
pop
xor
dec
decl
and
cmp
sahf
popl
mov
xchg
pop
push
fnstenv
push
add
adc
jge
push
int3
add
add
wrmsr
in
adc
bound
call
mov
fwait
mov
jmp
into
das
xchg
xor
jnp
cmpsl
in
movsl
ret
scas
pmullw
cmp
in
out
fisttpl
pop
adc
rorb
sahf
jmp
mov
fwait
orps
inc
jg
mov
jne
mov
mov
adc
xor
jno
add
icebp
in
jnp
add
dec
add
popa
popa
sub
in
lret
pop
or
lcall
std
jb
fs
hlt
push
pop
mov
lea
sbb
cmp
add
jbe
dec
aas
sub
pop
dec
sar
xlat
jge
outsl
and
push
xor
jcxz
adc
movsl
sub
add
loope
sbb
pop
or
les
cs
pop
inc
repz
xchg
loope
push
inc
push
shl
cwtl
xor
dec
leave
loope
mov
sti
xchg
lahf
dec
rcr
inc
lods
addl
pop
je
lods
daa
jmp
cmc
movsl
stc
inc
xchg
cmp
lods
add
ja
jb
pushf
fwait
sbb
adc
sbb
rol
aam
cmc
mov
mov
mov
test
dec
je
add
xchg
xchg
sarb
sbb
and
stos
inc
cld
and
lods
and
or
add
mov
mov
movsl
cs
jl
ds
je
fstps
sub
rcr
sbb
lds
fcomip
mov
fisubrl
inc
jo
shll
jg
sbb
jl
mov
mov
loopne
sbb
aam
out
shll
rcl
pop
dec
dec
stc
and
xchg
cmp
adc
mov
xchg
pushf
add
xor
mov
push
cmp
mov
lock
dec
imul
scas
and
jl
inc
stc
mov
mov
push
fisttpl
mov
and
dec
outsb
fs
fldenv
xchg
pushf
fnstsw
shll
or
sub
test
mov
je
fmuls
mov
adc
and
push
clc
ja
mov
xlat
out
pop
std
or
insb
sahf
mov
pop
add
outsb
in
pop
ja
arpl
ss
gs
clc
inc
sub
loopne
sbb
mov
sbb
scas
fstl
pop
hlt
scas
inc
fdivs
cmp
cld
xlat
xchg
sbb
cmpsb
add
mov
in
xchg
pop
mov
loopne
lds
pop
daa
enter
add
inc
pusha
pusha
cli
js
sub
push
add
or
orb
data16
push
xchg
iret
cli
mov
insl
dec
inc
mov
cltd
xchg
out
mov
add
hlt
push
inc
sbb
addr16
call
mov
out
pop
outsb
sbb
loopne
sub
add
and
push
adc
jns
leave
ficomps
push
push
pushf
inc
pop
adc
in
loop
and
xor
dec
and
int
push
mov
inc
jnp
push
sub
in
pushf
push
xor
mov
or
rcll
int3
lods
pushl
push
out
push
inc
push
pop
mov
jo
adc
xorb
pop
lahf
cmc
std
mov
loope
lods
pop
xchg
fiaddl
daa
jno
mov
mov
ret
xor
mov
dec
and
mov
std
push
push
cs
fstpt
xor
xchg
inc
adc
mov
mov
daa
pop
aas
add
ljmp
sub
ljmp
mov
inc
dec
dec
popf
data16
add
loopne
mov
shrb
ret
push
push
mov
inc
in
jbe
ljmp
jae
mov
jp
pusha
jmp
dec
jl
mov
add
mov
add
jl
add
subl
movsb
sbb
gs
adc
mov
xchg
in
mov
clc
fs
clc
sbb
sub
push
mov
adc
std
xor
and
mov
mov
or
adc
loopne
loope
outsb
out
jno
movsl
or
mov
lret
push
xchg
push
cmpsb
mov
aaa
insb
es
jbe
std
pop
mov
fwait
rorl
repnz
shlb
bound
lods
adc
jns
and
jge
ret
daa
stos
inc
cmp
cmp
mov
mov
mov
mov
inc
mov
cmpsl
mov
fdivl
fiadds
or
leave
out
sub
pop
cmp
xchg
loope
jle
ljmp
mov
nop
mov
pop
inc
adc
or
dec
loopne
push
pop
ljmp
cmp
push
jmp
mov
fnstsw
subl
xor
aad
jecxz
pop
pop
mov
jl
daa
bnd
js
aaa
pop
pop
ljmp
pop
pushl
adc
jo
push
iret
sub
int
mov
push
jo
inc
cmpb
mov
and
jns
xor
inc
inc
xchg
cmp
mov
das
jmp
push
lock
cmpsb
sub
mov
push
das
push
ret
pop
adc
sub
das
sub
mov
xor
daa
adc
shll
pop
insl
idivb
pop
adc
rcrb
adc
push
pop
popa
xchg
cld
xchg
cmp
cmp
cmpsl
lcall
push
jae
stos
popf
push
sub
adc
clc
push
pop
adc
in
xchg
push
dec
ret
xlat
jae
or
mov
test
push
push
cmpsb
imul
push
dec
xor
decl
push
pop
lahf
loopne
loope
nop
js
and
dec
add
imul
add
out
es
ds
xchg
pop
push
cmp
jg
fdivl
mulb
add
cwtl
push
popa
pop
mov
pop
pop
inc
jecxz
mov
ja
cmp
enter
mov
mov
arpl
mov
aaa
loop
stos
mov
push
movsl
test
fcomps
sarb
cmp
and
xor
mov
stos
stos
setne
cs
fnsave
sub
jp
pop
adc
mov
xchg
xchg
xor
lock
jge
bound
in
jle
xchg
ret
loopne
je
fwait
das
push
push
ficomps
push
shrb
or
jmp
ds
sti
jl
loope
lds
dec
aas
jb
xor
insb
push
out
leave
jecxz
mov
dec
sbb
std
sub
mov
mov
repnz
addr16
or
insl
push
add
scas
lret
push
pop
iret
or
dec
and
mov
loope
mov
pop
and
fwait
xlat
fwait
pop
shr
arpl
dec
ficompl
cmp
ds
sahf
push
and
data16
dec
mov
sub
incl
xchg
cs
js
mov
adc
bound
int
scas
inc
or
adc
lods
je
fimuls
xchg
repnz
fsubrs
jmp
add
in
pop
in
and
lods
rclb
test
mov
pop
fimuls
adc
jns
or
loope
das
xchg
stos
pop
cmp
mov
inc
inc
insl
clc
mov
into
loopne
pop
hlt
push
or
sbb
shrb
mov
aad
pusha
and
iret
sahf
insb
loopne
inc
inc
adc
call
and
sub
je
adc
outsb
arpl
pop
popa
dec
rol
popf
xorl
fldenv
clc
mov
add
xchg
sbb
outsl
dec
fscale
pushf
cltd
sbb
imul
test
sub
not
cmp
xor
cmp
add
pop
mov
std
mov
jae
add
clc
imul
into
es
lret
pop
adc
jmp
adc
ret
xchg
mov
jmp
inc
sub
mov
ret
lods
xor
dec
xchg
subb
lods
dec
jnp
lret
mov
outsb
pop
ljmp
pop
push
jbe
je
fdivrs
imul
cmp
jbe
notb
xor
jne
andnps
mov
cmpsl
cltd
adc
shrd
sub
insl
mov
inc
or
xor
iret
call
add
idivl
lret
push
mov
outsl
aad
hlt
das
mov
movsb
sbbb
pop
push
lahf
adc
add
fcoms
in
xor
aam
repz
cmpsb
cmp
int3
sub
cmp
pop
pushf
test
push
andl
fnstcw
scas
sub
loop
xor
xchg
mov
adc
inc
mov
hlt
fdivrp
pmaddwd
mov
or
pop
divb
mov
pop
fnstsw
or
add
jg
adc
imul
pop
in
rcrl
and
rcr
inc
cwtl
push
bnd
mov
jno
fidivrs
popa
and
sub
test
pop
icebp
sti
and
dec
cmp
sbb
call
in
call
cmp
or
adc
adc
popa
cmpb
bound
jl
aas
in
mov
mov
mov
pop
out
jecxz
or
sub
sbb
imul
mov
xchg
std
sub
popf
andb
insb
mov
inc
inc
dec
push
add
cli
negb
mov
sbb
stos
into
push
jp
jmp
and
es
lods
jg
sbb
scas
rcrl
push
mov
mov
pushf
cmc
test
cmpsb
mov
and
adc
imul
les
ss
mov
cld
ret
out
sub
or
jo
int
nop
mov
cs
inc
jns
fidivs
daa
insl
idiv
cld
addr16
jo
ljmp
mov
lea
adc
gs
sti
lods
and
lahf
adc
push
push
pop
jne
sub
call
out
mull
push
jb
icebp
cmp
lods
repz
test
std
cld
push
sbb
xor
ficoml
mov
mov
mov
and
inc
add
sub
cmp
inc
adc
fs
pop
movsl
fucomp
or
movsb
cmc
jmp
jno
pop
xchg
adc
adc
inc
call
push
jle
fldcw
dec
jb
leave
ficoml
outsl
mov
aas
bnd
push
cmp
lock
gs
fmull
lea
icebp
lea
dec
jbe
inc
hlt
mov
or
xchg
shrb
push
mov
mov
dec
scas
or
out
push
inc
or
cmc
sub
loopne
inc
push
push
out
jo
push
and
and
adc
and
enter
jmp
pop
push
mov
xor
inc
mov
insl
mov
adc
and
leave
add
mov
sub
mov
mov
jbe
mov
jnp
mov
xlat
cmp
ficomps
cltd
xor
cmp
mov
mov
lock
fimull
adcl
pusha
add
fnstenv
punpcklwd
mov
mov
push
ret
push
jmp
mov
cmpsl
lret
data16
mov
pop
ret
mov
into
fmull
jb
jns
mov
call
aad
jns
loope
mov
cmp
push
stc
push
dec
jbe
out
and
or
pop
stc
scas
add
ret
cmp
scas
add
lcall
std
sarb
jns
mov
in
mov
push
mov
add
cmc
push
arpl
xor
add
lds
idivb
movsl
fsubs
xchg
fadds
jmp
xor
mov
aam
or
jbe
mov
popf
fiaddl
scas
hlt
outsb
stos
testb
lds
int3
ja
jnp
in
data16
out
jge
sub
stos
repnz
and
das
repnz
jne
dec
insl
add
sub
add
mov
nop
into
out
lock
dec
pop
aad
fbld
sbb
mov
stos
push
cmpsb
push
je
cmp
cmp
dec
add
cltd
push
leave
pop
inc
adc
mov
into
sbb
mov
std
ret
xor
push
std
pusha
mov
ret
add
mov
outsb
add
dec
pop
xorb
mov
lods
push
adc
addr16
mov
pusha
int3
mov
scas
aad
cs
xchg
ja
push
xor
add
xor
test
bound
jg
outsb
and
arpl
aam
lods
jo
imul
push
jo
xchg
and
and
cltd
or
and
sbb
arpl
jecxz
cmp
fsubl
pop
lea
adc
xchg
xlat
out
dec
sarb
stos
test
push
push
pop
stos
test
dec
xchg
sbb
push
and
out
call
lret
pop
mov
pop
insb
cmc
and
leave
cmp
mov
xor
mov
push
push
bound
push
xor
and
data16
push
and
es
movsb
or
bound
fidivrs
xor
mov
aam
dec
jns
icebp
mov
adc
jp
shl
dec
into
inc
pusha
xor
fsubs
popf
add
jmp
cli
movnti
xchg
mov
mov
call
mov
test
cmp
das
mov
xor
in
sahf
and
jmp
mov
pop
sub
cmpsl
iret
test
push
idivb
call
fistpll
and
sub
stc
call
mov
aad
mov
pop
mov
dec
and
in
imul
fs
inc
push
insl
xor
adc
popa
out
adc
fiaddl
test
sbb
lock
pop
lcall
dec
mov
xorb
cmp
outsb
mov
sti
jb
test
movsl
push
push
mov
insb
mov
subb
idiv
xor
das
push
addr16
addr16
insb
sub
push
pop
sbb
daa
xchg
cmpsb
stos
pushf
xchg
in
int3
xchg
ljmp
pushf
mov
ret
imull
push
jo
jne
pop
push
jb
push
mov
xor
scas
fwait
loop
leave
xor
pop
ss
into
xchg
and
cmp
fimull
push
push
cld
mov
adcl
loope
pushf
jo
pop
mov
jno
xchg
daa
and
ds
and
or
aam
inc
pop
cmp
jecxz
jmp
push
out
imul
xchg
addr16
pop
cmp
fnsave
and
or
cmp
adc
dec
mov
and
dec
mov
dec
aad
lcall
mov
dec
jg
lret
inc
and
incl
data16
push
mov
in
pushf
pop
sbb
jae
or
sarl
cmp
add
and
pop
cmpsl
sub
or
icebp
inc
arpl
ret
sub
push
lea
jge
mov
dec
jne
rorl
cwtl
mov
dec
mov
xor
out
push
sbb
push
jne
sbb
in
sub
insb
test
lods
mov
inc
into
decb
fwait
dec
pop
or
cwtl
jne
cmp
pop
push
pop
mov
int
xor
jecxz
scas
sti
mov
enter
aam
lea
pop
sbb
sbb
in
mov
dec
add
cmp
adc
inc
mov
aam
inc
sbb
sub
mov
das
jle
loop
jb
jo
sub
out
xor
loop
or
sub
or
mov
mov
hlt
push
dec
repz
mov
rorb
call
inc
add
movb
dec
or
add
into
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
push
pushl
pushl
call
cmpl
jb
mov
jmp
test
addb
dec
mov
addl
call
pop
imull
jns
jae
es
dec
jle
in
testl
shll
mov
sbb
test
pusha
push
sarl
sahf
mov
jbe
das
jbe
imul
sbb
into
pop
push
dec
shl
xchg
and
scas
jbe
mov
mov
es
mov
mulb
add
adc
loope
sbb
lahf
rcr
jg
add
sahf
add
std
std
mov
dec
cmpl
in
stc
mov
adc
sub
and
push
fwait
mov
arpl
add
pop
cs
mov
dec
mov
add
push
rclb
xchg
call
and
test
sbb
mov
ja
dec
outsb
mov
xchg
pushf
popf
lock
rorb
ror
cmc
dec
inc
jg
pop
movsl
mov
sub
pusha
movb
insb
or
cmp
xchg
pop
out
out
sub
fistps
mov
add
shll
push
mov
add
iret
push
imul
daa
inc
mov
dec
xchg
adc
add
aad
dec
insl
rolb
imul
mov
ret
jle,pt
lds
pop
lea
sbb
movsb
mov
insb
inc
out
pusha
dec
or
mov
push
es
pop
or
xlat
pop
jmp
cmpsb
jnp
stos
and
push
xchg
mov
cmp
repnz
outsl
xchg
popa
pop
arpl
mov
add
cltd
push
shlb
mov
into
adc
lods
sbb
mov
jbe
adc
mov
inc
pcmpgtd
jb
mov
mov
mov
sub
outsl
mov
fildl
andl
out
pop
jno
pop
out
mov
add
push
mov
dec
mov
inc
mov
jmp
idivb
cmp
cli
xchg
pop
in
xor
bound
lods
repz
out
sbb
jl
jns
mov
sahf
scas
and
inc
shrl
mov
mov
lahf
enter
ret
or
mov
mov
sub
fs
xchg
jae
mov
dec
aaa
xchg
fisubrs
mov
cmp
push
and
push
pop
sbb
in
jns
cld
aaa
dec
fs
jae
mov
dec
mov
push
pushf
xchg
push
mov
push
ja
adc
sub
les
pop
jo
add
loop
dec
mov
int
fptan
dec
fsubp
js
scas
and
inc
inc
js
mov
rorb
gs
pushf
inc
add
ljmp
int3
push
repz
lcall
into
dec
dec
cmpsb
loope
mov
mov
outsb
jbe
cmc
inc
loopne
repnz
sub
adc
and
cmpl
scas
aam
outsl
xor
mov
inc
icebp
bound
adc
fdiv
pushf
sub
and
jl
or
lahf
jo
dec
pop
push
shr
mov
mov
or
xor
mov
adc
ret
scas
add
es
jle
mov
hlt
cwtl
es
or
adc
hlt
and
or
dec
dec
or
movsl
sub
sti
out
or
cmp
ds
mov
dec
cmc
push
xchg
orl
daa
xchg
lahf
jle
call
call
popa
xchg
es
sub
ds
lret
dec
lret
icebp
int
or
fwait
out
dec
jmp
add
sub
dec
insl
push
cmpsl
pop
in
and
sti
es
daa
insl
das
fucom
mov
jae
and
shrl
into
jae
ja
push
or
fisubrs
jb
nop
movsb
lahf
clc
je
mov
cmp
lods
je
icebp
xor
aaa
hlt
cmova
dec
mov
lahf
out
out
popa
push
cwtl
jmp
lods
mov
or
loopne
pop
fidivrs
pop
xchg
aaa
xchg
adc
icebp
bound
or
les
bound
push
lods
lret
roll
mov
enter
fwait
mov
cld
jbe
int
cmp
scas
cmp
inc
add
mov
push
xor
sub
out
inc
cmp
scas
daa
sbb
mov
mov
dec
jns
repnz
mov
lods
into
mull
or
icebp
out
mov
jbe
in
fcoms
jle
mov
mov
and
or
shr
push
cmpl
push
pop
rclb
scas
mov
cmp
aaa
jnp
cmp
jnp
imul
mov
loope
scas
jae
repz
or
ljmp
lods
repnz
xor
dec
arpl
insl
scas
stos
fidivrs
mov
sbb
or
cmp
and
lods
out
popa
push
fs
push
leave
movsb
in
in
add
inc
xchg
dec
mov
sub
pop
into
lea
mov
imul
data16
cmp
ret
adc
adc
and
fldl
mov
dec
and
or
pushf
enter
pop
fistps
add
xorb
outsl
rcr
decl
dec
sbb
popa
mov
jp
cld
dec
movsl
pop
add
sub
push
lock
xor
cmp
sub
int3
fwait
mov
mov
fldl
jg
push
pushl
data16
inc
in
ljmp
movsb
shll
cld
cmp
xor
add
xchg
mov
or
inc
bound
push
jg
add
std
pop
js
ficoml
addr16
mov
notl
inc
ja
lods
rcrb
xor
inc
xor
out
js
mov
jl
aad
cld
int
inc
and
lock
jae
outsl
dec
fildll
aas
mov
sahf
or
mov
inc
inc
imul
jmp
mov
mov
add
les
sub
push
push
lock
hlt
in
inc
repz
movsl
xor
fnstsw
or
dec
dec
stos
ss
push
sar
cmc
cmp
ja
pushf
insl
insb
iret
scas
mov
mov
mov
popa
sahf
xchg
arpl
dec
push
test
add
out
popa
mov
cltd
cmp
sbb
jge
inc
jecxz
sub
sub
dec
sub
lods
mov
fistl
inc
dec
jg
sub
jnp
jae
push
sarl
xor
dec
lea
jl
cwtl
add
bound
call
popa
push
lcall
in
mov
cmp
insb
cmp
lcall
adc
negb
fistps
test
mov
mov
sub
adc
imul
fcoms
ljmp
mull
pop
jnp
lock
cmp
sbb
stos
sub
jne
loope
mov
sub
xchg
mov
adc
dec
sub
jle
push
jae
mov
mov
cmp
mov
mov
mov
cmp
mov
xor
cmp
cli
in
mov
enter
shl
mov
mov
addr16
iret
popf
mov
add
mov
or
lods
sub
xchg
mov
and
mov
sub
jae
outsb
add
js
and
mov
je
sub
jb
jbe
dec
mov
pop
insl
or
dec
lret
nop
ja
imul
das
push
mov
dec
fnsave
pop
jecxz
and
jnp
push
incb
pop
into
pop
jmp
mov
andb
negb
cmp
jno
sbb
xor
inc
aas
xchg
sarb
xchg
insl
lds
add
sbb
mov
std
lcall
popf
cmp
mov
cld
xor
jb
outsb
clc
js
lods
xor
insb
data16
cs
and
push
lret
mov
in
push
into
cmp
cmpsb
test
jge
std
xor
addr16
cmpsb
mov
push
popa
imul
jle
cmpsl
subl
mov
loop,pn
adc
js
jecxz
data16
sbb
and
hlt
cmp
cmc
bound
fimuls
lods
mov
iret
cld
add
sbb
mov
scas
inc
or
idivb
lea
sbb
fsubl
loope
inc
lcall
lea
cmpsb
sub
jo
mov
jle
push
insb
cmp
mov
jl
cmpsb
pop
or
out
arpl
mov
mov
dec
dec
ret
pop
clc
clc
pop
ret
sbb
leave
dec
push
subb
ds
or
add
ja
mov
ret
push
xchg
add
or
test
lret
das
or
inc
hlt
rolb
dec
je
sbb
xchg
xor
or
lods
dec
dec
xchg
or
xchg
test
je
fsubrs
xor
mov
mov
or
add
dec
xchg
loop
xchg
aas
adc
lret
push
divl
push
pop
pop
or
jne
int
push
mov
dec
test
and
cwtl
cmpsb
inc
mov
js
std
daa
mov
mov
repz
fldz
cmc
call
int3
sbb
das
mov
cli
or
mov
icebp
or
mov
push
jge
pop
xchg
cmc
stc
jbe
jle
sbb
in
enter
cs
inc
or
pop
sub
leave
enter
lock
gs
add
lret
out
loop
shlb
inc
jmp
cmpsl
xchg
pop
adc
aas
cwtl
lods
adc
insl
cmp
mov
cltd
adc
jns
xchg
push
jl
xchg
loop
mov
add
arpl
xor
outsl
or
add
xchg
or
lds
sub
dec
sbb
mov
cmp
adc
loop
lods
push
jnp
inc
ja
xchg
xchg
loop
push
sub
stc
aaa
adc
dec
imul
dec
inc
cmpsl
add
ds
sbb
mov
out
adc
cmpb
adc
jge
dec
and
xor
jbe
push
jae
pop
aas
and
call
scas
or
jge
pop
addr16
pop
fwait
adc
add
jp
dec
push
xor
rorb
int3
lret
and
mov
js
sbb
xchg
sbbl
mov
outsl
inc
mov
sbb
mov
loopne
mov
jle
mov
adc
and
lds
notl
loope
jne
loopne
add
mov
in
imul
and
jmp
pop
lret
mov
das
push
dec
loope
mov
inc
xor
iret
loope
xor
push
lcall
xchg
mov
aam
lea
data16
pop
fs
sub
fucomi
push
mov
out
in
xchg
cmp
outsl
push
and
aam
mov
mov
inc
rclb
push
cwtl
es
cmp
ret
les
inc
mov
push
lahf
fsubl
hlt
pop
aam
mov
push
xorb
adc
inc
lds
ss
inc
or
bound
movsl
push
xchg
xor
xchg
add
ficoms
mov
or
xchg
and
mov
pop
pop
outsb
fwait
sub
or
xor
fcomip
cs
loopne
mov
ret
stos
loop
hlt
ds
xor
loope
addr16
shll
dec
bound
lods
adc
popf
or
or
sub
push
test
scas
or
movsl
mov
xchg
or
int
push
mov
nop
daa
xor
xchg
cltd
iret
out
ror
subb
dec
adc
mov
aam
insb
inc
and
scas
inc
and
jp
orb
ja
mov
lea
sub
mov
mov
nop
cmpsb
shll
push
push
jecxz
sub
lods
mov
and
ljmp
xchg
inc
insl
jbe
adc
mov
sub
rorb
inc
mov
mov
fildll
jg
xor
cli
adc
inc
fisttpll
arpl
or
dec
and
mov
jmp
jle
int
sbb
addl
mov
xchg
rorl
loopne
pop
jge
sbb
pop
lea
je
stc
jae
js
pop
mov
fcoms
jmp
sti
dec
lods
addr16
jl
mov
fwait
jge
adc
jle
imul
into
sub
addr16
xchg
rcrl
ret
lods
lahf
push
push
js
pop
into
pop
pop
mov
outsl
sbb
and
mov
outsb
sbb
imul
cltd
add
lea
mov
push
mov
pop
sub
mov
roll
mov
xchg
or
mov
outsb
add
add
daa
push
lret
add
push
jge
push
xor
inc
ss
or
dec
cmp
shl
insl
push
and
dec
and
and
lock
mov
outsb
mov
sub
aaa
aam
aaa
jo
cmp
dec
loop
divl
insb
sti
clc
push
xchg
out
sub
das
mov
lods
mov
mov
pusha
imul
mov
fldl
ret
mov
or
scas
rcl
loop
sbbb
xchg
icebp
fidivl
fcompl
mov
mov
loope
sub
cld
dec
repnz
jmp
push
and
imul
add
inc
jle
add
loopne
adc
push
aad
xor
cs
push
into
xchg
sub
dec
dec
xchg
jecxz
shrb
imul
push
add
inc
adc
fstps
pusha
cmpsl
imul
stos
mov
cs
mov
jnp
stos
fld
push
pop
outsl
lds
xstore-rng
cmpsl
les
inc
clc
mov
jns
les
pop
mov
xchg
jae
loopne
adc
pop
cmp
fldenv
test
fs
sbb
pop
testl
aas
outsb
mov
pop
shll
movsb
dec
push
out
xor
aad
adc
push
cmc
out
mov
sahf
not
push
adc
mov
mov
test
nop
gs
push
sti
je
imul
fdivl
sbb
shlb
jae
jo
data16
mov
and
dec
fldcw
test
mov
dec
sub
scas
stos
mov
adc
inc
clc
lret
lods
sub
add
mov
pop
push
je
fcmovu
jg
pop
inc
cmp
call
or
mov
incl
push
call
inc
inc
sub
testb
mov
jecxz
xlat
jns
pushf
sbb
or
sti
and
mov
mov
imulb
xor
pop
cmp
push
sub
pop
xor
mov
dec
push
cmpsb
mov
push
add
and
pop
ds
sbb
das
fcoms
stos
mov
cmp
jl
das
dec
js
clc
mov
pop
fdivr
in
bound
mov
mov
jecxz
jne
dec
aas
xor
shll
cmp
loop
fxch
and
sbb
out
mov
cli
sbb
jmp
andl
mov
push
cld
mov
and
and
push
sub
hlt
jge
out
sbb
ret
cmp
cmp
insl
sub
xchg
dec
jne
mov
xchg
lahf
sahf
insl
fstpl
lret
enter
lea
test
push
sbb
pop
clc
int3
push
lea
and
inc
pop
pop
add
outsl
int
add
imul
insl
mov
sbb
movsl
bound
fldt
hlt
or
sbb
scas
insl
sarb
testb
outsl
movsl
loop
das
cmpsb
lret
loope
popf
add
icebp
lahf
fwait
outsl
xor
aaa
ret
es
xchg
mov
into
add
in
testb
jge
and
in
dec
xchg
mov
pop
jge
movsb
jg
es
mov
jecxz
arpl
out
mov
daa
pop
shll
pop
inc
dec
ret
and
popf
mov
add
sbb
dec
mov
and
subl
daa
ds
scas
adc
push
test
sahf
pop
divl
or
sbb
dec
inc
mov
insb
pop
push
add
lret
sbb
fildl
mov
jae
fmuls
lods
pushf
es
leave
inc
mov
outsl
into
push
and
or
add
and
popf
push
test
sbb
or
cld
mov
outsl
hlt
das
sahf
pop
push
jecxz
pop
add
aad
xor
test
cmp
cmc
xor
cmp
sub
das
shrl
in
cmpsb
add
in
dec
cmpsl
cmpsl
lahf
pushf
je
mov
out
insl
pushf
adc
ficompl
loopne
ja
ret
xchg
xor
icebp
push
sahf
dec
inc
push
sub
xchg
fsubr
jmp
mov
test
orl
inc
cmp
and
cltd
dec
iret
xor
sbb
loopne
push
mov
add
inc
add
fdivs
iret
push
das
punpckhbw
lock
ficoms
push
gs
pop
js
test
mov
add
aad
shrl
pop
xor
xor
in
rol
xor
fisttps
scas
vmulpd
mov
cltd
add
fwait
and
stos
stc
jnp
inc
fmull
xchg
in
xchg
jmp
pop
cmp
cmp
cwtl
in
and
adc
ljmp
call
fcoml
xchg
int3
cmp
ja
pop
mov
push
dec
cmp
push
sub
clc
sahf
xchg
movsb
sbb
adc
cmp
repnz
mov
xor
jecxz
test
jns
and
cmpl
xchg
insb
mov
pop
mov
ss
int3
stc
rorb
adc
out
xchg
pushf
add
and
push
pop
jo
jo
pop
repz
dec
lods
in
jl
adc
popf
ret
das
mov
ret
in
xor
insl
add
fimuls
nop
adc
cmpsb
sbb
test
cli
cmpb
imul
sub
sbb
sbb
adc
or
iretw
jne
cmpsb
xorb
and
jp
divl
es
sbb
xchg
shrb
sbb
xchg
xlat
mov
adc
stos
adc
xchg
out
cmc
push
ficoml
xor
sbb
daa
sub
cmpb
sbb
out
mov
push
jae
imul
xor
lret
jg
sbb
xor
int3
adc
call
sbb
stc
or
inc
int
imul
fildll
test
xchg
rol
sbb
and
jp
dec
icebp
mov
sub
repnz
or
jne
sub
les
into
ret
subb
lods
stc
xor
mov
mov
and
scas
lret
fsubs
mov
jl
add
xchg
dec
ret
sbb
adc
xor
sbb
ja
pop
fdivrl
mov
int3
decb
mov
mov
jl
inc
cmp
sub
sbb
dec
push
xlat
insl
mov
imul
push
test
xor
sbb
mov
cmpl
push
movsb
in
ss
sahf
or
cmp
aad
jge
rcll
movsl
push
fmul
js
scas
dec
cmp
addr16
mov
cmc
cmc
mov
jmp
dec
mov
adc
add
sub
adc
lret
stc
fs
ljmp
mov
rep
repnz
dec
outsl
sbb
stc
lret
ljmp
and
rolb
lcall
pop
movsb
adc
adc
cmp
leave
fldenv
inc
lret
outsb
xorl
push
sub
pop
popa
mov
sbb
or
and
es
push
mov
jns
out
shll
mov
xor
outsl
xchg
into
sub
mov
mov
loop
shrl
sub
repnz
mov
divl
pop
jl
lods
outsl
adc
mov
push
cmp
out
outsb
push
xchg
dec
jge
into
dec
call
push
or
lods
mov
or
scas
gs
imul
push
adcl
jmp
xlat
ret
incb
test
jg
stos
lahf
cmpsb
sub
add
lahf
aas
cmp
lea
fstl
mov
xchg
xor
mov
aam
fcomi
sbb
pop
inc
mov
and
outsl
daa
cld
je
push
pop
jmp
faddl
pinsrw
inc
repz
lods
mov
jmp
xchg
das
ret
iret
insb
in
mov
and
or
in
xchg
inc
push
or
sbb
call
xor
mov
mov
and
andb
test
lods
std
add
sub
in
ret
jns
xor
sbb
std
pop
adc
in
mov
arpl
mov
jne
mov
fwait
inc
push
shr
fldt
repnz
xchg
sbb
lahf
jns
add
repz
xor
ljmp
pop
icebp
cwtl
or
xor
mov
sbb
loop
sahf
and
ds
mov
sbb
dec
mov
repz
cmp
cltd
mov
jne
xchg
repnz
jecxz
cmc
push
stos
in
mov
mov
pop
dec
int3
repz
adc
scas
scas
and
repnz
xchg
xor
cs
push
outsl
mov
mov
inc
mov
mov
into
dec
lahf
mov
js
mov
cmc
cltd
ja
xchg
add
sub
xor
in
mov
add
mov
rclb
das
mov
push
mov
addr16
mov
cmp
les
in
inc
adc
lcall
jnp
push
subb
outsb
cmp
leave
pop
inc
ja
jno
lods
pop
dec
push
sbb
mov
pop
inc
cld
js
and
pop
cmp
cmp
jne
data16
adc
push
loop
adc
stos
jno
into
movsl
add
icebp
fdivrl
add
sub
arpl
notl
mov
push
fidivs
in
gs
imulb
rcrb
sub
enter
call
std
mov
sbb
daa
lods
or
aaa
jmp
aam
inc
cmpsb
sub
inc
sti
push
in
ss
imul
push
das
fsts
push
and
cwtl
mov
jmp
sub
rcrb
in
xchg
fidivrl
mov
mov
call
insb
imul
dec
mov
enter
clc
sub
or
out
xchg
scas
sub
int3
add
mov
stos
imul
mov
scas
xchg
and
dec
sbb
cmp
mov
jnp
dec
pop
mov
stos
inc
push
jo
pop
pop
stc
out
cmp
sbbl
push
shlb
lds
adc
and
add
ret
std
or
pop
ljmp
adc
shl
xchg
xor
jmp
ret
loope
pop
lds
xchg
adc
iret
mov
icebp
or
mov
pop
pop
jl
dec
enter
out
in
jp
pop
cli
lds
sti
call
cmp
lods
fiadds
fmull
test
inc
scas
cld
fadd
inc
and
add
mov
pusha
stos
out
jns
xor
fs
repnz
out
cmp
rcl
xor
test
inc
xor
cmp
lods
dec
mov
data16
insb
xchg
lret
push
jnp
push
test
jb
jbe
adc
adc
xchg
mov
sahf
pop
xor
pop
out
xchg
pusha
int3
adc
fimull
into
inc
mov
cltd
mov
lcall
inc
std
mov
arpl
shlb
loopne
ds
daa
fbld
lcall
les
movsl
ljmp
std
fmuls
push
div
lret
mov
in
mov
push
mov
dec
push
loope
jo
test
jg
cmp
incb
ss
inc
testb
pop
imul
mov
jns
xchg
jnp
pop
fadd
push
xchg
mov
dec
stos
dec
mov
call
sbb
cmp
dec
mov
data16
or
xchg
mov
xorl
and
in
cmp
inc
lret
xor
sahf
rcrb
lods
es
sub
pop
mov
rorb
pop
mov
ficomps
jp
lcall
mov
mov
xor
outsb
call
movsl
pop
xchg
mov
jne
mov
cmp
push
loope
sub
sti
stos
sbb
iret
daa
sub
test
orl
adc
cmp
sub
mov
cmpsb
aaa
push
inc
aad
rcrb
adc
out
js
xchg
xor
imul
fstpt
mov
fsubrl
mov
les
imul
push
sbb
jns
nop
xor
xchg
clc
ret
cmp
fbstp
sbb
sub
pop
mov
inc
ds
repz
adcl
xchg
daa
sbb
ss
mov
loopne
popf
add
jl
repz
shrb
sbb
outsb
push
xchg
xor
and
xor
push
xchg
lahf
pushl
lcall
rol
aas
int
mov
xchg
imul
mov
stc
add
inc
dec
push
xchg
push
cmpsl
cld
or
je
shl
mov
xchg
mov
jg
sbb
jge
xor
mov
dec
imul
xchg
push
jl
std
mov
jo
sbb
pop
movsb
nop
inc
cltd
add
mov
push
jnp
sub
arpl
int3
xor
stos
xchg
jnp
incb
fists
cmp
stos
je
xchg
lahf
jl
scas
mov
mov
mov
pop
sub
loop
mov
inc
iret
scas
out
mov
mov
clc
les
lahf
dec
sbb
push
mov
sub
icebp
and
arpl
jecxz
into
test
sbb
or
in
in
imul
mov
pushf
jp
je
or
sub
stos
or
cltd
adc
in
cmp
fcoml
mov
mov
mov
shrb
sub
jae
pop
cltd
mov
add
mov
sub
push
test
inc
clc
sub
insl
adc
movsl
adc
dec
in
add
lahf
pop
jle
xor
adc
xchg
pop
int3
cli
jmp
mov
popa
dec
in
and
gs
xor
push
add
stos
push
ror
inc
out
lahf
ja
mov
imul
popaw
cmp
sbb
in
or
pop
jnp
xor
inc
adc
scas
je
pop
inc
or
jno
cmc
mov
inc
adc
lcall
xchg
das
jmp
sub
fs
out
fisubs
imul
rep
inc
cltd
jge
mov
in
not
adc
add
add
adc
xchg
movsb
xchg
insl
aad
sub
pop
cmpsl
push
mov
mov
xchg
pop
adc
push
ret
decb
insl
cmpsb
sub
fldenvs
inc
outsb
lcall
stc
xchg
cmc
nop
pop
jp
test
lret
in
mov
popa
pop
lods
mov
inc
outsb
pushf
fiaddl
fnstenv
mov
adc
push
mov
mov
xor
mov
xchg
sub
repnz
sub
mov
dec
jnp
andl
enter
sub
orb
fs
push
mov
jne
xchg
pop
add
jo
pop
cmpsl
jno
cmpsb
inc
xlat
xor
inc
lods
es
mov
add
lods
bsr
push
roll
imul
bound
out
sub
fsubs
leave
cld
ret
cmp
jmp
cmp
clc
xchg
and
xchg
gs
jns
xchg
test
jl
nop
xchg
subb
fadds
lret
rcr
popf
adc
xchg
jae
clc
leave
xor
sbb
jg
inc
mov
in
pop
adc
ror
jo
int3
fwait
outsb
mov
mov
iret
xchg
jbe
xchg
mov
rclb
outsb
dec
repnz
fistpll
mov
inc
ret
iret
cmp
sub
mov
shll
insb
push
cmpsb
hlt
ds
int3
add
rcll
stos
sub
and
pop
cs
inc
rcrl
xor
mov
inc
mov
dec
mov
dec
das
mov
xlat
xchg
jns
ret
aam
imul
mov
mull
sub
sub
lods
cltd
js
movsb
push
iret
lcall
into
test
insb
stc
sbb
subl
mov
in
imull
or
or
into
mov
add
pushf
insl
push
lcall
dec
and
and
bound
jo
inc
and
or
add
push
daa
mov
bound
insb
imul
inc
push
daa
scas
je
cmp
cs
pop
dec
dec
dec
pop
add
mov
stos
and
adc
jl
shr
xchg
sbb
cmp
mov
out
mov
xchg
pop
scas
push
pop
loopne
mov
inc
adc
add
cmp
or
arpl
xchg
inc
dec
mov
imul
cmp
out
push
xor
dec
std
jle
cmp
enter
dec
ds
in
inc
adc
xchg
aaa
imul
add
add
sarb
sub
imul
jl
sbb
pop
cmp
xchg
jge
sbb
add
jmp
imul
cli
aad
jl
dec
scas
leave
cmc
fnstenv
call
cld
jmp
pusha
test
jnp
fisttpll
push
pop
dec
mov
inc
divb
jmp
sub
clc
cmp
xchg
push
addr16
icebp
pop
aas
xchg
fimull
pop
mov
lret
int3
or
inc
aas
icebp
fiadds
adc
dec
cwtl
in
inc
inc
flds
js
jb
push
ss
push
xchg
mov
or
into
fld
xchg
sbb
or
mov
pop
imulb
loopne
xor
call
mov
adc
add
mov
cmp
ja
dec
shrl
pop
adc
imul
into
push
mov
hlt
push
pop
jmp
loope
movsb
dec
leave
outsl
int3
arpl
in
mov
add
ja
mov
mov
mov
push
idiv
out
popa
test
mov
xor
mov
outsl
push
dec
push
xor
mov
dec
pop
mov
push
adc
mov
ds
stos
insb
xchg
jnp
lds
fidivl
clc
ds
and
dec
je
mov
out
fnstsw
mov
mov
ja
sbb
mov
cwtl
ret
and
mov
aas
cmp
adc
int3
test
xor
int3
testb
rorb
push
dec
rorl
inc
jmp
or
inc
hlt
stos
xchg
inc
or
jle
xor
testl
inc
into
sbb
movsb
fidivs
cmc
stc
in
pop
addb
sub
bound
subb
ds
sbb
testl
xor
cmp
pop
xor
lahf
mov
sub
sar
scas
iret
jnp
fcomi
ljmp
jae
ja
sbb
lock
dec
push
clc
pushf
movsb
push
inc
jne
xor
xorl
fidivs
inc
add
push
dec
pop
dec
adcb
or
push
sbb
idivl
xchg
jecxz
or
lahf
cmc
ljmp
dec
inc
outsl
popf
mov
cmpsb
mov
xorb
fisubl
mov
add
aas
dec
ret
testl
mov
mov
jecxz
pop
aaa
fldt
jae
dec
negb
xor
inc
and
adc
out
pop
jmp
cmp
test
push
cld
insb
mov
inc
mov
stos
xor
push
gs
sub
push
addl
je
sub
cmp
inc
mov
sub
sbb
inc
int3
xorl
xor
mov
sub
xorl
add
or
mov
xor
sub
ror
sub
xor
mov
subl
mov
adc
jmp
or
mov
hlt
jne
fldl
push
adc
addl
gs
sub
cmp
mov
add
inc
test
fmul
ljmp
rcrl
xchg
inc
jae
insl
iret
jb
aaa
add
xor
pop
or
xlat
adc
mov
das
xlat
cli
cmp
loop
ret
sub
pop
xor
jmp
jmp
jmp
mov
mov
insb
aam
test
sbb
or
sti
jmp
dec
repz
paddb
pusha
mov
stos
mov
and
enter
xchg
cmp
jne
rorb
adc
dec
mov
nop
mov
pushw
mov
add
addl
xor
xchg
sub
loope
or
push
insl
repz
lahf
in
imul
dec
nop
les
insl
enter
lahf
cs
mov
imul
pop
or
adc
xchg
xchg
iret
mov
xchg
lahf
jo
or
mov
nop
sti
out
fstl
dec
push
pop
xchg
scas
movsl
adc
dec
jg
xchg
loopne
dec
adc
pop
inc
xorl
imull
lds
jo
sbb
mov
sub
cmpsl
push
push
mov
rcl
and
xor
dec
pop
test
cs
mov
mov
add
addl
jge
push
outsl
and
add
pop
xor
mov
aas
jbe
call
mov
inc
orb
test
push
mov
test
sahf
adc
pusha
push
mov
jb
push
pop
cmpsl
push
and
pop
cs
out
ds
sbb
out
scas
dec
clc
pop
into
sbb
mov
and
repnz
ret
ret
push
cld
sbb
mov
mov
imul
mov
lea
inc
je
aas
stos
in
xlat
or
add
xchg
mov
sub
mov
and
shlb
rclb
jo
add
push
cmp
sti
push
cli
cmp
pusha
cli
push
stos
in
push
fcmovnb
push
dec
xchg
push
jnp
cmc
lret
je
mov
jae
or
lea
hlt
mov
sbb
sub
mov
push
popl
or
stc
ret
test
cmp
fsubl
pop
shlb
sar
inc
adc
mov
mov
push
pusha
cmp
daa
enter
stc
push
mov
and
insb
xor
jae
popf
adc
lods
xorl
push
ljmp
xchg
adc
cmp
fisubrs
out
or
inc
stos
fldenv
pop
xor
xchg
repnz
xor
and
and
mov
incl
fwait
sti
sub
cld
shlb
push
imull
nop
call
mov
hlt
cmpsl
jp
or
aas
jne
and
adc
decl
and
lret
dec
daa
push
dec
or
and
xchg
and
lahf
xorb
lahf
mov
clc
ja
xor
xor
ja
adc
sub
and
popa
idivb
lahf
pushf
iret
xchg
and
push
mov
mov
sub
fiadds
push
jge
inc
ljmp
inc
fnsave
sbb
popf
in
nop
sub
cltd
ds
in
stos
jl
mov
jl
fwait
jp
ja
jae
jnp
fsubr
xor
fdivs
sub
sub
ss
dec
out
outsb
jbe
mov
int
dec
in
in
push
test
jl
mov
adc
outsl
mov
into
add
and
adc
std
xor
in
fdivrp
jmp
mov
add
mov
pop
jae
pop
gs
mov
adc
sbb
stc
sbb
mov
outsl
adc
jp
jecxz
cmp
jns
xchg
shrb
cmp
push
push
ss
add
fwait
stos
sub
cmp
pop
call
jl
xchg
jecxz
add
insl
and
inc
push
cs
pminub
addr16
and
mov
test
cltd
imul
add
out
scas
adc
pop
lds
xlat
cwtl
mov
test
lcall
shlb
loop
into
jl
in
mov
test
mov
cmp
push
in
cwtl
or
push
or
aam
xchg
dec
xchg
stc
roll
xchg
add
xchg
add
jb
xor
xchg
loope
fstpt
fs
cmpsb
repnz
pop
and
loop
and
xchg
xchg
mov
bound
mov
sub
mov
xlat
ret
mov
js
negl
sub
mov
mov
fwait
add
lea
jb
pop
sarb
dec
jp
or
or
jno
shrb
adc
sti
ja
stos
lods
jp
mov
inc
dec
sub
imul
sub
scas
mov
add
mov
and
cmp
insl
inc
adc
mov
out
psubsb
mov
jl
stos
adc
dec
in
jg
addr16
rcll
or
es
adc
sbb
lret
dec
adc
in
sbb
xchg
jo
bound
rcl
add
rcr
mov
lock
in
pop
adc
push
pop
xchg
sbb
inc
adc
push
xchg
mov
iret
adc
pop
fwait
sub
and
pop
stos
cmp
mov
adc
in
jnp
mov
pop
mov
in
fnclex
jo
jl
fldl
jne
sahf
outsl
or
and
test
sub
leave
and
mov
add
ja
repnz
inc
inc
xchg
lods
loope
mov
nop
adc
cmp
adc
push
xchg
cmpsl
push
ds
pop
or
cltd
adc
add
cmpsl
sub
and
adc
aad
addr16
inc
jmp
pop
adc
xor
jns
xadd
fistl
test
out
xor
and
inc
push
fldenv
sbb
or
mov
aad
push
pop
inc
ret
lret
mov
cmpsb
out
rcl
clc
fstps
pushf
imul
enter
xor
mov
jo
mov
mov
xchg
mov
test
dec
pop
repz
sbb
dec
lret
out
popa
dec
iret
scas
push
ljmp
je
pop
imul
fiaddl
jmp
enter
xorl
cmpb
jmp
jmp
lret
xor
or
lds
bound
lret
sub
mov
jmp
lahf
ds
fnstenv
jg
push
popf
and
adc
das
push
mov
push
pop
repnz
js
jmp
add
lahf
pop
js
cmp
jmp
mov
rol
dec
sbb
bnd
movsl
mov
into
ljmp
aas
and
imul
jbe
adc
in
hlt
pop
inc
hlt
daa
icebp
sbb
dec
xor
fmulp
test
std
xor
xchg
jg
jmp
push
adc
lcall
sub
mov
pop
test
fsub
pop
aad
mov
cmc
das
imul
fucomip
je
pop
xchg
out
pusha
xchg
add
push
or
add
cmp
loopne
adc
or
jns
mov
inc
mulb
clc
lret
jg
inc
cmp
or
mov
notl
mov
sbb
test
sahf
mov
mov
cs
loop
xor
jmp
shlb
inc
insb
add
pop
push
jge
shlb
and
and
cmpl
or
icebp
scas
xor
push
or
mov
ret
pop
mov
cmp
fcomps
push
cmp
dec
imul
push
fwait
cwtl
sbb
in
push
movsl
mov
mov
xchg
mov
jp
stos
pop
daa
fstpl
inc
jb
cmpsb
jae
sub
in
cli
sub
cmp
sub
pusha
adc
sbb
push
imul
into
and
shl
pop
call
std
pop
mov
dec
cli
es
jle
push
jmp
sub
dec
and
leave
lea
mov
test
jb
lods
ret
leave
test
xchg
outsb
add
jl
shrl
sub
jmp
arpl
mov
stos
push
jb
lahf
dec
lret
frstor
fwait
ret
movsb
hlt
int
dec
imul
pop
pusha
and
shl
and
cmp
stos
repz
in
rcll
pop
popa
dec
pop
push
cltd
jl
or
push
inc
test
out
int3
je
or
push
xor
dec
sub
mov
sbb
mov
push
sbb
sub
mov
lock
nop
lcall
shrl
andl
jge
jp
int
cmpsl
outsl
xor
mov
adcl
pop
fisttpll
pop
fisttps
and
xlat
je
shlb
arpl
pop
test
movsl
out
mov
mov
lds
add
push
pusha
lahf
sub
mov
sub
mov
sub
mov
dec
fadd
pop
push
ss
cmp
iret
adc
int
je
push
popa
dec
and
mov
adc
or
test
testl
push
jne
ss
inc
arpl
bound
jae
inc
ss
push
jl
mov
mov
inc
pop
push
pop
mov
push
ror
insl
cmp
cmp
std
push
jne
loopne
rcrb
test
mov
jo
jo
sbb
out
push
aaa
mov
and
dec
inc
adc
adc
es
neg
je
ror
leave
jecxz
xchg
or
sub
repz
test
adc
pop
repz
push
fcomip
and
fs
sbb
xor
mov
outsb
push
adc
mov
pop
negl
repz
icebp
ret
jl
loop
imul
inc
xchg
cmp
shll
into
lods
mov
movsb
out
inc
mov
jne
cmp
fsubrl
leave
test
xchg
pop
lds
cmp
int3
pusha
rcll
dec
push
mov
add
inc
pcmpgtd
aam
dec
xchg
fstp
shl
mov
mov
sahf
or
add
xor
xchg
cmpsl
push
repnz
mov
dec
test
in
out
and
outsb
xchg
mov
les
sbbl
addr16
imul
sbb
inc
jmp
mov
jbe
mov
sub
sbbl
fs
adc
sub
icebp
cld
or
mov
addr16
icebp
inc
or
data16
push
adc
mov
add
sbb
cmpsl
lea
mov
mov
cmpsl
int3
jp
stc
and
fdivr
mov
mov
mov
mov
fwait
sbb
js
aam
add
jo
pop
cmp
in
push
and
bts
cmpsl
imul
jg
stos
enter
insl
es
mov
popf
mov
inc
push
pushf
lds
lock
pop
jnp
mov
cmc
pop
test
and
push
dec
nop
inc
repnz
movsb
or
mov
imul
gs
aad
push
push
movb
mov
pop
pop
stc
dec
xor
cmpsb
js
jp
add
adc
cmp
mov
xchg
daa
sahf
xor
ss
out
lods
mov
xchg
cmp
jle
shrb
push
sahf
mov
inc
inc
outsl
bound
push
jp
pop
xchg
fistpl
repz
pop
jmp
repnz
ud0
repz
or
out
js
movsb
cmp
std
mov
mov
xor
and
dec
pusha
inc
xor
repnz
add
jae
sti
push
and
adc
lods
lea
repnz
enter
cltd
enter
and
mov
pushf
pop
int
mov
sbb
and
loope
mov
bound
mov
add
rorl
adc
ja
add
cmp
cwtl
out
cli
in
rcrl
mov
jnp
pop
cld
les
loopne
adc
shll
jl
in
xor
jno
jb
mov
sahf
pop
ficoms
insl
loopne
sti
cltd
adc
mov
stos
dec
fnstsw
stos
fldcw
arpl
push
push
push
test
lods
icebp
je
add
push
ljmp
daa
ficoms
ss
lret
pop
or
cwtl
popf
xchg
mov
data16
in
push
cld
adc
jle
sub
add
je
cmpsb
mov
cmp
bound
cmpsl
mov
inc
jo
loopne
outsb
mov
icebp
xor
jg
fsts
std
les
add
icebp
mov
mov
jg
imul
loop
cmp
int3
or
inc
add
lcall
fmull
ret
push
mov
popa
dec
nop
andb
jns
imul
test
inc
enter
jne
adc
arpl
push
xchg
mov
ffreep
je
adc
test
out
mov
mov
jo
sahf
cmp
sbb
das
adc
xlat
es
pop
add
xor
pop
stos
sbb
xchg
and
mov
cmp
flds
cltd
jo
subl
loopne
fucomi
or
adc
jle
pop
push
lods
xor
loope
rep
and
xor
push
sbb
jne
ljmp
imul
std
loope
inc
scas
mov
outsl
add
int
dec
stos
lds
mov
sbb
xchg
fmuls
and
and
dec
add
dec
out
mov
fisubl
movsb
aam
or
push
pop
sub
pusha
mov
mov
and
pop
loop
frstor
xchg
sahf
lds
add
add
mov
not
aam
shr
mov
fstl
sbb
sbb
fdiv
inc
jp
push
and
mov
and
jns
xchg
scas
nop
mov
sbb
sbb
sbb
sbb
fcom
jnp
inc
iret
sbb
cmpb
pushf
push
mov
jl
push
inc
sbb
mov
repz
scas
lcall
sbb
lock
cltd
jbe
fmuls
cs
mov
loop
push
jmp
mov
mov
movsb
mov
ss
rcr
push
icebp
lds
rcrb
das
int3
pop
xchg
aas
clc
lds
ret
mov
imul
jae
decb
xchg
stos
dec
fisubrs
mov
jae
or
sbb
mov
adc
xor
aam
add
ss
arpl
or
sahf
gs
loope
cs
adc
push
test
dec
xchg
xchg
icebp
cmp
pop
xchg
pusha
adc
pop
imul
xchg
icebp
leave
or
sub
movsl
push
ja
mov
cli
sbb
add
add
push
jle
icebp
or
sti
sub
dec
pushf
mov
shrl
mov
cmp
mov
mov
repnz
mov
cmc
xchg
push
notl
call
xlat
sarl
mov
inc
xor
jo
stos
call
add
xchg
push
hlt
mov
adc
pop
rclb
push
pop
fiadds
test
xchg
sub
into
pop
cmp
lahf
adc
pop
fwait
popf
ret
add
jnp
mov
ret
movsl
sbb
and
movsl
mov
and
mov
adc
pusha
push
push
xchg
mov
ror
adc
js
mov
ja
xchg
loope
sbb
lods
out
xchg
sub
jecxz
or
mov
xchg
aaa
mov
gs
test
test
ficomps
ja
sbb
push
adc
addl
pop
jmp
pusha
mov
shr
mov
dec
pop
push
mov
pushf
push
mov
ss
fwait
xor
dec
mov
popa
or
mov
insb
gs
scas
insb
xchg
fcoms
mov
push
popf
mov
scas
sub
jg
test
push
rorl
jbe
movsb
sahf
fistps
and
mov
inc
loopne
mov
sbb
push
mov
jns
jl
in
mov
sti
lahf
xchg
imul
mov
lret
loop
jno
decb
outsl
mov
mov
adc
add
pop
aam
pop
out
shl
sbb
lea
fnstcw
fwait
insb
fdivs
fidivrs
nop
js
jge
push
stc
inc
push
cwtl
xor
pop
loopne
clc
adc
mov
and
sbb
jbe
ja
push
jnp
lcall
fisttpll
mov
pushf
add
xlat
leave
inc
and
mov
pop
push
pop
push
and
lds
and
cli
cmp
test
cli
cmpsl
jecxz
imul
or
mov
jl
ror
mov
cwtl
inc
inc
and
jns
pusha
pop
push
sbb
push
mov
mov
jle
mov
cmp
xor
dec
push
mov
aam
hlt
data16
dec
fwait
imul
pop
lahf
xchg
out
xor
or
pop
jbe
add
adc
cld
arpl
std
ret
and
mov
mov
mov
lret
insl
cmp
ljmp
push
push
enter
and
stc
fisttpl
inc
int3
push
pop
xchg
js
ja
in
das
jb
add
in
pop
sub
ljmp
ds
sti
repz
xchg
and
out
ret
mov
cli
out
xor
cmpsl
mov
ficompl
xorb
mov
jne
inc
and
insb
lcall
les
pop
lahf
rcrb
lds
lret
movsl
sbbl
pushf
mov
hlt
rcl
mov
imul
mov
out
cmpsb
dec
dec
inc
inc
and
xchg
mov
xchg
pop
dec
adc
data16
enter
je
popa
aam
xchg
lcall
popf
dec
insl
add
jle
cmpsb
shl
push
pushl
outsb
out
cmp
ss
fpatan
arpl
sbb
fsubrs
cmp
inc
or
fxch
xor
out
test
cmp
out
push
cwtl
ret
xchg
aam
test
adc
sbbb
adc
cmpsl
mov
add
cmp
mov
test
push
ret
cmc
imul
jmp
adc
fimuls
adc
pop
in
and
mov
pop
movsl
repnz
iret
aad
jmp
dec
mull
popa
push
dec
xor
push
xchg
jno
icebp
fisttpl
lods
adc
xchg
push
jmp
cli
inc
lcall
mov
add
call
in
mov
jae
rcrb
and
dec
mov
sbb
cmp
and
fldl
ret
adc
cmp
fmulp
xchg
jnp
lds
mov
stc
insl
das
mov
mov
inc
hlt
push
push
outsl
je,pn
xlat
subb
sbb
test
pop
push
pop
leave
add
pop
ds
add
lcall
repnz
dec
into
pop
inc
or
pop
rcr
xor
in
jne
jmp
add
ja
mov
pop
insl
push
cmp
ljmp
cld
testb
push
adc
cmp
adc
and
leave
pop
sarl
fsubl
and
and
xor
lret
push
cmpsb
xlat
sbb
loopne
std
loope
loope
lret
fsubrs
dec
roll
in
push
or
test
leave
jo
dec
or
aam
and
js
xchg
cs
push
mov
add
adc
xor
pop
stos
in
push
push
mov
fs
add
js
out
jle
icebp
mov
frstor
mov
sbb
out
dec
and
mov
mov
dec
add
jle
aas
cmpl
or
mov
aaa
jge
jno
lcall
adc
in
in
xchg
out
adcl
inc
shlb
cmp
cmp
in
adc
and
mov
fcoms
mov
sub
shlb
dec
and
push
outsb
and
jbe
sbb
lea
sbb
hlt
jp
repnz
lret
es
pop
push
popa
inc
mov
aaa
pop
in
clc
inc
das
and
pop
jle
jl
sub
mov
jle
pusha
int
shlb
les
xchg
loope
jbe
inc
sub
cmpsl
inc
data16
mov
imul
loopne
xchg
pop
add
icebp
xchg
insl
xchg
int
aam
notb
cltd
je
and
mov
pop
cmpb
test
mov
inc
xchg
hlt
sahf
pop
sub
in
and
xchg
mov
push
lret
dec
mov
shrl
arpl
or
push
mov
ret
adc
mov
push
pop
test
jno
inc
dec
push
mov
pop
out
jmp
test
rolb
loopne
imul
inc
ja
and
es
addl
push
cmp
aam
dec
dec
call
nop
popa
mov
push
clc
xchg
repz
in
cltd
adc
sti
cmp
repz
loopne
xor
daa
mov
push
jnp
lret
jecxz
jmp
mov
xor
push
mov
cmc
pusha
int
popf
es
and
cmp
add
int3
pop
xchg
jno
sti
mov
jae
sbb
fimull
insb
push
sbb
popf
cmpsl
call
stos
xor
jno
or
jbe
dec
movsb
add
sub
sbb
sahf
mov
ljmp
movsl
mov
mov
mov
repnz
pop
push
push
mov
cwtl
push
ja
notb
add
scas
sahf
xchg
in
dec
dec
push
mov
fwait
cmp
popa
pop
sub
into
test
mov
dec
test
fadd
adc
cmp
out
jb
ja,pt
int
push
fwait
outsl
in
call
shll
mov
in
fisubrs
into
insb
cmp
lret
sub
mov
mov
out
leave
mov
repnz
mov
in
fisttpl
mov
jns
dec
xchg
ljmp
xchg
pop
push
aaa
adc
dec
js
notl
inc
pop
inc
arpl
mov
push
loopne
cs
inc
insl
pop
add
pushf
out
les
hlt
xlat
cmpl
ds
jo
add
in
mov
cwtl
mov
xchg
dec
int
nop
jge
or
push
or
movsb
sub
insl
int3
ss
fs
xor
dec
test
mov
inc
jmp
xchg
mov
imul
dec
dec
push
std
pop
jp
loopne
loop
fwait
jge
icebp
dec
dec
xchg
cwtl
data16
add
shll
repnz
gs
movsl
push
mov
in
cmp
or
xor
sbb
nop
mov
mov
sbb
mov
xor
gs
mov
or
pop
sbb
dec
or
pop
repnz
sti
mov
daa
test
xchg
ud1
mov
xchg
jno
lcall
inc
pusha
mov
mov
in
mov
test
in
outsb
xchg
stos
push
lret
and
and
lcall
push
inc
js
addr16
stos
ret
pop
cltd
in
imul
vucomisd
out
std
dec
leave
mov
call
cli
mov
fnstenv
lret
inc
lahf
pop
jae
jb
push
lret
xchg
cmp
mov
iret
push
scas
gs
dec
nop
lahf
movsl
out
in
mov
dec
dec
xchg
inc
sbb
and
or
sbb
lock
and
xchg
pop
and
cmc
jbe
gs
jle
pop
aad
add
sti
stos
adc
and
add
leave
aad
xchg
jg
mov
or
aaa
mov
into
mov
popf
inc
bound
jg
lock
sbb
ficompl
adc
mov
mov
ficoms
pop
push
and
outsb
subl
nop
inc
push
ja,pn
sub
add
fildl
ds
mov
adc
rolb
xor
sbb
int3
ret
xor
sbb
sub
daa
cmp
cmp
xchg
fimull
inc
je
inc
lea
cltd
enter
sti
std
outsb
pop
pop
mov
gs
pusha
outsb
dec
inc
xchg
adc
xchg
adc
mov
xchg
inc
jp
adc
sbb
out
and
repz
mov
lds
hlt
push
lcall
lret
sbbl
das
test
sub
cmpsl
lods
lods
pop
mov
cmpsl
pop
fsts
push
icebp
add
and
leave
dec
sub
aaa
xor
push
sub
iret
ja
popa
mov
js
sahf
repz
push
inc
mov
shl
sarb
loope
pop
add
jmp
stos
fmull
cmp
mov
and
cwtl
insb
mov
popw
cmpsl
loopne
jo
dec
addr16
shll
mov
fcmovnb
outsb
loope
push
lds
push
cli
cmp
pop
push
or
sti
loop
xor
repz
push
int
cmp
and
je
add
inc
mov
inc
adc
jle
add
and
enter
or
jecxz
sub
jno
outsl
sar
xor
pmulhw
xchg
dec
push
pop
call
stos
xchg
adc
adc
arpl
dec
repz
mov
pop
xchg
inc
lock
and
and
lods
sbb
mov
outsl
push
fdivrp
push
pushf
and
sbb
mov
mov
inc
in
fs
add
idivb
xor
cmp
test
mov
outsl
push
dec
cwtl
fcoml
loop
jge
push
jmp
jmp
cmp
in
push
or
jmp
jmp
sarb
mov
add
addr16
mov
mov
and
inc
lods
pop
jl
aam
cmp
or
inc
test
out
test
hlt
mov
call
adc
leave
or
pop
gs
pushf
test
fwait
out
test
js
test
in
inc
imul
mov
into
cld
es
jo
dec
jg
cmp
and
notb
xchg
mov
mov
mov
push
mov
push
jae
mov
push
sub
popf
adc
dec
push
subb
test
cmp
aaa
loopne
jmp
sbb
cmpsl
mov
cmp
subb
or
popa
repz
es
mov
aas
pop
and
push
mov
sub
and
shl
jle
inc
sub
mov
jge
fdivr
addr16
in
aam
xlat
dec
ljmp
mov
sub
and
sti
xor
mov
ja
lret
xor
adc
inc
movsb
mov
cmp
jecxz
test
or
pop
in
pusha
addr16
mov
insb
mov
jge
aam
leave
pop
imul
push
push
shrl
mov
outsl
stos
push
pop
push
inc
and
incb
xchg
aas
xchg
and
stos
mov
or
sub
gs
mov
arpl
push
lods
and
fcmovu
imul
inc
add
and
in
mov
rcll
pop
xor
sub
scas
shrl
pop
mov
fdivrs
xor
inc
fcompl
repnz
push
mov
sbb
clc
mov
cmc
cmpsl
shlb
cmpl
jge
insl
and
sti
into
imul
mov
inc
dec
ja
ficoms
jg
push
mov
adc
lods
mov
in
rclb
mov
mov
aaa
fwait
pop
popf
sub
inc
int
aam
mov
xchg
pop
push
or
mov
xor
sbb
aad
lock
hlt
inc
out
adc
add
push
cmp
popf
cmp
test
popa
xchg
or
sbb
or
ljmp
sti
xor
pop
data16
les
insb
insl
fldcw
mov
ja
aas
fwait
insl
lock
pop
add
es
insl
int3
cmpsl
and
pop
lcall
sub
adc
test
mov
push
in
add
ja
adc
aaa
and
inc
outsb
es
std
inc
popf
daa
xchg
xchg
jns
lock
inc
repnz
push
and
xlat
daa
dec
cltd
cmp
les
push
lods
incb
xchg
add
xchg
fxch
icebp
pop
ljmp
and
xchg
pop
movsl
push
cli
rcr
movsb
lock
cmpsb
cmp
imull
in
je
jne
xchg
stos
ljmp
xlat
jecxz
jge
pop
xchg
fcoml
and
inc
jge
jp
jmp
rorb
xchg
es
jg
test
rclb
mov
push
push
adc
mulb
loope
mov
dec
xor
idivb
loopne
fdivr
cmc
push
fwait
in
or
sub
push
add
dec
lret
test
dec
int
sahf
mov
push
int
bound
push
dec
insl
xor
sbb
into
loope
enter
pop
addr16
imul
fildl
rolb
insb
xchg
and
adc
dec
sbb
xor
push
jns
pushf
lods
xchg
jge
jo
xchg
ljmp
repnz
jl
stos
aad
mov
pop
sub
or
ret
in
int3
and
jno
fisubrl
add
aaa
sub
outsb
pop
std
push
pop
ret
mov
fwait
scas
fwait
lock
popf
xchg
mov
dec
shlb
jae
stc
push
xchg
imul
call
add
iret
mov
push
dec
add
or
mov
shl
xchg
jmp
inc
scas
fdivs
mov
pushf
scas
sbb
leave
clc
pop
cltd
push
fsubrl
movsb
cli
sbb
xlat
in
add
sub
jno
jnp
hlt
pop
dec
rolb
inc
ret
xchg
movsb
ret
and
neg
aam
pusha
and
lret
jnp
dec
imul
fwait
push
sub
cmp
inc
inc
xchg
dec
xchg
aam
pop
xor
cld
dec
flds
into
lcall
add
js
xor
pop
mov
add
dec
mov
cmc
push
jmp
call
lock
ss
sarb
insb
es
xor
xor
or
xor
xor
lods
sahf
out
insb
xchg
sub
gs
adc
xchg
lock
fisubrl
daa
daa
fistl
mov
pop
les
shl
or
lret
addr16
test
pusha
dec
xchg
loop
lods
dec
cmpb
test
lods
jne
jmp
popfw
in
dec
xlat
bound
test
pop
mov
push
mov
push
fisubrs
add
push
jle
fistpl
clc
dec
lds
push
dec
pop
xor
dec
mov
mov
nop
xchg
testb
mov
fsubrp
clc
and
jbe
or
rorl
cmp
and
add
add
dec
repnz
shrb
clc
arpl
push
aad
pop
rcrb
jbe
and
ljmp
xchg
call
push
lock
pop
int3
test
and
lds
shll
jg
xchg
jmp
mov
orb
add
sub
push
jbe
test
pop
insb
lds
ljmp
xlat
jnp
ret
xchg
dec
sub
inc
hlt
adc
mov
subl
sub
andl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
andl
xor
sbbl
inc
ret
push
mov
sub
movzwl
sbb
movl
push
addl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
jmp
mov
orl
push
xor
xor
or
mov
mov
xor
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
pushl
call
jmp
mov
subl
test
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
subl
mov
adcl
xor
add
mov
mov
and
mov
adcl
mov
xorl
xor
add
decl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
movzwl
or
add
mov
mov
sbb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
call
jmp
add
mov
sbbl
sub
adcl
lea
incl
xor
xor
cmp
movl
je
mov
xor
add
movl
cmp
jne
xorl
pushl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
addl
jmp
sub
mov
pop
xor
inc
add
icebp
addl
jne,pn
xor
dec
test
pusha
jns
mov
mov
push
das
push
jmp
dec
aas
insb
mov
push
adc
ja
jb
xchg
xor
push
or
les
jae
sbb
cs
lahf
cmp
sbb
lds
sub
mov
out
push
dec
jge
mov
mov
movsl
icebp
dec
outsl
testb
mov
cwtl
push
repz
stos
in
mov
pop
mov
mov
cmp
insl
and
add
bound
shr
xchg
divl
aas
cmpb
jns
cli
ljmp
movb
std
dec
mov
leave
push
loope
bound
loop
jecxz
stc
xchg
jnp
es
js
jp
xor
dec
sub
imul
adc
sub
daa
leave
mov
pusha
dec
aaa
adc
sbb
cmc
aas
aad
cmpxchg8b
fistl
mov
mov
in
or
xor
xchg
loopne
cmpsl
xchg
xor
aas
lea
add
fcoml
addr16
xchg
aaa
sbb
rolb
push
push
in
jns
mov
mov
add
xor
mov
js
jecxz
fucomip
or
sub
sbb
xchg
or
jecxz
add
push
pop
in
mov
stos
xor
push
add
and
in
add
push
popf
mov
mov
lret
movsb
push
pop
add
cmp
clc
lahf
ret
push
loop
test
and
xchg
flds
test
into
fildll
mov
or
out
out
repz
dec
repnz
jge
add
inc
out
rol
outsb
outsl
jl
jl
sub
cltd
popa
push
test
pop
cwtl
mov
loopne
jp
lcall
mov
fdivrs
jp
pop
or
loopne
fstl
mov
js
sub
mov
cld
or
push
repnz
mov
inc
cli
icebp
bndstx
loop
push
fimuls
dec
int3
pusha
mov
mov
shll
mov
jg
leave
inc
fdivs
pushf
insl
push
insb
les
sahf
ja
push
or
cmp
rclb
xchg
cltd
pushf
movsl
adc
mov
cwtl
xchg
pop
lods
xor
jnp
leave
or
outsb
stos
or
lods
xchg
lds
mov
mov
add
or
lods
jbe
jmp
es
xchg
dec
lret
addr16
addr16
test
mov
and
loop
and
jp
fmull
aas
mov
stos
aas
loopne
mov
lds
pop
insb
sub
shll
les
mov
adc
mov
into
repz
mov
cmp
cmp
out
not
xchg
jno,pn
test
pop
rorb
dec
and
lods
inc
inc
xchg
sar
or
in
movsb
popa
xor
pop
add
xorl
dec
pop
mov
mov
or
push
push
int3
pushf
mov
push
inc
in
ficoms
cli
and
cld
cmp
cmpsb
and
cmp
xchg
push
adc
push
jb
dec
jmp
mov
insb
in
fidivl
ds
js
dec
cli
in
sarl
adc
sbb
and
adc
mov
loop
xchg
mov
mov
and
mov
in
sub
in
push
xchg
xchg
dec
cmp
sbb
out
mov
fisubs
sbb
jno
insb
fistps
outsb
test
cmpsb
push
mov
add
scas
cmp
sub
dec
jb
popf
dec
aas
jecxz
dec
mov
lods
std
adc
push
push
mulb
mov
jmp
stos
sbb
pop
inc
push
cs
iret
jno
mov
mov
in
or
mov
popa
and
out
mov
scas
xchg
imul
mov
dec
sbb
mov
xchg
sbb
mov
mov
pop
xlat
es
fimuls
dec
push
cmp
adc
or
out
add
cmp
rcrl
into
or
popa
enter
pusha
lret
or
mov
ficoms
int
mov
fwait
sub
mov
lea
test
xchg
fcmovnbe
enter
sahf
and
add
cld
xlat
insb
fistpl
fisubrs
rcrb
jb
in
stc
xchg
push
pop
loope
scas
rol
mov
iret
addr16
leave
xchg
popa
xor
mov
xor
dec
jo
sub
shl
in
jns
pop
push
and
xchg
push
insb
inc
dec
push
dec
int
int
cmpsb
jp
gs
shll
mov
jl
inc
into
imul
leave
sti
jae
sbb
das
test
outsl
dec
je
add
jmp
icebp
inc
ljmp
mov
enter
cwtl
in
push
pop
imul
push
add
jne
pushf
repnz
nop
test
jo
inc
mov
data16
jecxz
mov
fstps
out
clc
mov
adc
outsl
and
test
mov
add
adc
cld
mov
pushf
icebp
xor
xor
sbb
dec
loope
pop
mov
xchg
bswap
sbb
mov
test
cmp
mov
lahf
add
test
bound
add
xchg
jns
data16
jbe
ljmp
jnp
jle
or
mov
and
sbbb
cmp
add
add
push
outsl
inc
and
add
push
adc
inc
xchg
sbb
or
xor
cwtl
nop
out
inc
jmp
xchg
sub
loope,pn
jl
popf
ljmp
and
imul
imul
cmc
xchg
jne
push
addl
gs
and
push
dec
mov
popl
sbb
sub
mov
imul
mov
and
push
out
imul
loop
ret
cmp
jmp
sub
xlat
cmpsl
mov
xchg
cs
lahf
jmp
ret
into
cmpsl
sbb
jp
movsb
jno
subb
orb
cwtl
inc
sarl
or
adc
xor
push
xor
ss
xor
jb
les
mov
mov
push
mov
push
jne
mov
xor
loopne
adc
in
arpl
scas
or
add
sub
sti
cltd
jecxz
rcll
and
leave
icebp
jl
inc
orl
lods
xchg
mov
mov
test
addr16
sbb
push
inc
sub
rcr
out
ljmp
xor
lods
adc
inc
mov
js
and
aad
arpl
push
inc
repnz
mov
inc
je
or
pop
xchg
stc
inc
mov
int3
mov
cmc
in
and
inc
mov
push
xor
dec
push
loope
hlt
sbb
dec
or
repz
jmp
inc
dec
inc
adc
addb
andb
out
sbbl
cmp
clc
pop
pop
leave
cltd
out
jge
dec
sbbb
inc
push
nop
loop
mov
loopne
movb
sahf
dec
cmp
adc
cmp
lods
rorb
scas
shr
adc
popa
les
nop
sti
pop
scas
sub
js
inc
mov
cmc
push
ja
ds
mov
pusha
fucomp
dec
cmp
pop
sar
pusha
out
in
pop
xor
push
out
mov
std
imul
out
cltd
pop
xchg
inc
repnz
sub
dec
mov
lods
xchg
aad
add
push
cmp
push
iret
cmpsl
les
and
jns
xchg
nop
cmpsl
mov
sbb
aad
push
out
and
ljmp
add
mov
push
into
jmp
out
lods
sub
sti
jl
rcl
in
call
add
cmp
adc
ret
pop
mov
mov
pop
sahf
scas
sub
inc
jl
jbe
add
or
sub
aaa
insl
cmp
cwtl
stos
in
push
push
dec
bswap
add
cmp
pop
enter
movsb
cmp
sub
push
push
fisubrs
cmp
imul
stc
mov
lret
mov
xchg
xor
lahf
mov
dec
jbe
popa
adc
popl
cmp
jmp
cmp
gs
fsts
int
cld
cmp
xor
ss
repz
clc
push
loop
fninit
inc
inc
aas
jne
mov
out
in
lods
pop
sub
xchg
iret
js
movsl
xor
cld
adc
cmp
aad
aam
push
out
in
mov
xor
push
xchg
fstpl
scas
rol
add
lods
ret
je
outsb
outsl
cmc
loop
subl
dec
js
ljmp
cmp
ds
adc
insl
xchg
ret
cs
cltd
div
jo
xor
adc
mov
and
mov
jbe
std
lds
cmpsb
loope
aas
jle
in
mov
mov
mov
mov
ret
jg
push
insb
int3
insb
xlat
les
stc
outsb
sub
fbld
stos
subb
adc
cmc
sub
mov
popa
and
mov
mov
adc
pop
jne
xchg
push
adcb
sub
in
rep
mov
add
ret
imull
sbb
shlb
inc
cmpsl
dec
mov
mov
out
shrl
sbbb
push
xor
and
jp
sub
dec
cmp
in
jmp
xor
ljmp
ss
in
vmovshdup
outsl
dec
push
popf
sbb
sahf
sbbb
mov
pushf
aaa
mov
rdmsr
jbe
loop
xor
dec
pop
int
sub
mov
add
cmp
scas
fwait
out
mov
pop
or
or
addr16
jmp
add
subl
cmp
sbb
aaa
pop
jno
xchg
leave
lret
adc
mov
adc
mov
mov
mov
mov
dec
test
jb
out
dec
jecxz
xchg
xchg
push
icebp
cli
mov
push
fwait
pop
stc
into
roll
xchg
or
mov
or
and
cmc
dec
shrb
jp
cmp
cmpsl
orb
out
dec
sub
push
test
push
into
and
push
ficoms
mov
sahf
outsl
xchg
cmpsb
mov
jg
xlat
call
mov
lock
jno
cmpsl
dec
mov
aad
mov
jecxz
mov
mov
mov
jae
mov
mov
dec
sub
sub
xchg
jecxz
dec
sbb
divl
sbb
jl
xor
das
test
das
jecxz
mov
iret
pop
xlat
jl
and
sub
cmc
or
es
push
adc
sbb
fucomip
lret
jl
es
bound
add
and
mov
push
mov
dec
pop
pop
xchg
push
sbb
stos
pop
mov
je
push
popf
push
lret
pop
sub
lcall
mov
scas
and
cmp
cmp
mov
push
neg
nop
lock
inc
cwtl
jne
jp
lds
je
sahf
mov
in
sub
fisubl
hlt
mov
jp
or
xchg
jmp
sub
sbb
test
insl
push
js
cmp
adc
shlb
xchg
arpl
inc
stc
push
lock
movl
xchg
push
adc
and
outsb
dec
fucomp
lea
ss
inc
int3
sub
popf
lods
pop
push
and
cmc
xor
iret
push
cmpsl
add
mov
stos
fcmovb
inc
repz
mov
and
fbstp
mov
sub
sub
clc
xchg
ret
mov
hlt
jb
nop
xor
adc
pop
mov
jmp
pop
push
xorb
cmp
jle
cli
or
rcll
push
cwtl
rorb
jge
mov
mov
aas
mov
mov
popa
arpl
ds
cmp
pusha
pop
in
lods
add
pop
inc
ljmp
sub
leave
cmp
pop
pop
loop
je
fldt
maxps
and
sub
mov
inc
scas
dec
mov
mov
std
sbb
or
jp
cld
ss
mov
aam
pop
xchg
xor
mov
fistps
adc
outsb
sti
jns
xor
sbb
mov
sbb
push
or
scas
inc
out
outsl
stos
cmpsl
pop
aam
jnp
loope
or
mov
xchg
jmp
push
ret
push
push
inc
inc
push
cs
fwait
jl
dec
and
into
pop
test
movsb
jbe
or
fsubp
fcomps
lea
out
xchg
mov
std
mov
push
outsb
push
aas
dec
lcall
xchg
ret
inc
pop
aad
push
mov
ja
sbb
notb
pop
test
lcall
sbb
mov
test
test
jg
aaa
push
xor
cli
sarl
rcll
fldenv
js
subb
gs
push
imul
outsl
scas
in
xchg
mov
xor
sbb
divl
ficoml
fisubrs
fisttpll
adc
mov
arpl
mov
add
int3
daa
pop
pop
lret
mov
pusha
mov
or
aaa
js
mov
loope
cmpb
pop
popa
sub
icebp
sub
pop
adc
mov
xor
fcom
inc
sub
lahf
pop
add
jne
or
icebp
pop
movsl
jb
scas
mov
xchg
call
bound
pop
xchg
loope
gs
jb
and
add
icebp
dec
xor
pop
pop
cmp
jp
and
push
movsl
sbb
shlb
cmc
jns
pop
or
push
rorl
icebp
mov
enter
sbb
push
rcll
stos
push
dec
popl
in
xchg
sub
inc
test
mov
mov
into
mov
fadds
fdivr
fadds
ljmp
push
sub
push
pop
cmp
ret
mov
je
mov
test
orb
cli
enter
adc
divl
add
push
xor
sbb
insl
fnstsw
js
push
shrl
fnstsw
xor
sahf
sub
aad
or
wrmsr
jne
insl
rcrb
inc
fsqrt
xchg
sbb
jp
pop
iret
sub
adc
dec
stos
repz
shl
rcrl
adc
sahf
into
inc
cli
mov
pop
inc
and
xor
adc
pusha
mull
mov
xchg
fdivrl
pushf
and
imul
dec
adc
loope
dec
sti
cmp
cmp
cmc
out
dec
sub
xchg
sbb
sub
in
dec
pop
mov
nop
cli
jmp
xchg
jp
jl,pn
mov
sub
test
jnp
push
xor
sub
pushf
push
push
out
shlb
or
adc
push
dec
mov
push
cmp
jo
mov
sbb
xor
into
xor
jbe
aam
stos
outsl
jmp
mov
outsl
push
mov
subl
inc
push
cmp
sub
add
xor
rcll
add
add
leave
mov
adc
and
inc
data16
inc
and
loop
scas
add
test
jmp
es
xchg
xor
jl
ss
popa
out
loop
lods
pushf
cmpsl
leave
lret
stc
popa
test
sub
sbb
imul
pop
dec
lds
xor
or
hlt
mov
ss
negl
sub
aaa
and
in
push
jge
adc
pop
out
jmp
push
or
lahf
cwtl
cs
fstpt
les
lods
adc
push
leave
xchg
out
ret
rolb
sub
push
fsubrs
out
push
je
stc
movsl
pop
xor
stc
push
inc
pop
lret
iret
insb
lahf
movlps
addr16
and
jmp
push
sub
jmp
je
xchg
jbe
push
push
les
xlat
sbb
repz
inc
sub
dec
sub
movsb
repnz
jle
mov
jno
dec
jo
int
fsubrp
xchg
mov
jbe
adc
push
in
push
or
add
rcl
inc
mov
jae
pop
jp
leave
movsb
dec
int
mov
and
fnstenv
out
lods
ds
adc
repnz
dec
dec
lods
add
or
lods
or
push
movsl
xor
inc
inc
adc
loope
sysret
scas
pop
jns
push
add
mov
xor
mov
test
jne
rcrb
cmpsb
jl
xchg
jg
daa
xchg
sbb
cmp
mov
stos
cmp
ljmp
xchg
and
push
out
mov
adc
push
sbb
dec
jno
mov
sub
jecxz
lods
inc
aad
out
ret
push
stos
xor
or
adc
fwait
mov
aas
movsl
cmp
inc
sarb
cmp
sbb
sub
cli
mov
pop
mov
jae
or
fimuls
std
jbe,pn
adc
leave
repz
iret
xor
cmp
cmpsb
sbb
mov
loope
lods
jmp
test
pop
fsubl
xchg
pop
add
mov
add
xchg
dec
mov
mov
inc
shll
xlat
mov
jb
test
fistpl
mov
loop
daa
fcmovnu
flds
fldcw
lock
and
mov
sub
stc
and
std
inc
ds
aam
into
daa
subl
mov
outsl
inc
sub
adc
popf
push
and
data16
mov
and
cmpsl
xchg
subb
adc
lds
push
icebp
cld
mov
imull
insb
iret
test
pop
pop
xchg
jno
sbb
popa
xor
mov
subl
mov
cmp
daa
pop
lahf
mov
dec
adc
pushf
rorl
push
shl
dec
xchg
enter
stos
cmp
xor
aas
inc
adc
jmp
sub
add
popl
sub
lcall
mov
sub
ret
stos
or
lea
mov
lret
sahf
mov
aam
inc
add
js
fs
ret
fs
fwait
movsb
in
inc
adc
repz
add
lcall
and
sbb
sub
in
mov
ud1
xor
inc
leave
out
sub
jp
lea
and
ljmp
js
mov
jne
adc
jno
jbe
push
pop
aam
test
xor
outsl
pop
jae
mulb
push
ret
xchg
scas
mov
in
sahf
fcoms
push
mov
push
and
jecxz
scas
push
setl
xchg
sti
and
inc
or
mov
cmp
lods
pop
mov
les
mov
mov
sahf
sbb
clc
push
push
iret
rcll
jno
jnp
sbb
std
add
push
movsl
cwtl
xchg
push
lock
iret
sbb
stos
loopne
dec
shlb
add
mov
push
les
cmp
sub
in
aad
fs
or
jecxz
mov
mov
pop
div
daa
xchg
dec
inc
and
out
mov
push
js
mov
insl
inc
pop
sbb
xor
into
aaa
inc
mov
pop
add
xor
or
aaa
mov
mov
stos
ret
pop
xchg
mov
es
lsl
or
repnz
stos
cltd
in
fsubrs
and
shlb
mov
enter
jb
xchg
cli
insb
iret
ds
jmp
inc
dec
lea
pop
adc
stos
and
xchg
lea
popf
pushf
jbe
popa
push
test
jp
repnz
test
jae
xor
les
or
out
pop
mov
rcrl
inc
mov
xchg
mov
roll
fwait
add
mov
testl
ffree
movsb
mov
ret
loop
jae
xchg
out
mov
or
test
ficoml
test
popa
adc
pop
mov
ret
and
jmp
aas
mov
arpl
lock
outsb
dec
mov
adc
stc
xor
mov
repz
jb
bound
out
fadds
cmp
daa
pop
cmp
aad
fisubrs
js
sbb
lret
shrl
ja
jns
js
or
push
mov
leave
outsl
fidivrl
xor
loop
arpl
inc
fistpl
mov
cltd
rcrb
arpl
das
int
loop
fwait
mov
cmp
xor
mov
sbb
jns
in
pop
cmpsb
sti
xchg
pop
popa
or
sbb
imull
mov
in
push
insl
cmp
dec
in
movsl
and
push
fists
inc
xchg
pop
pop
je
leave
sbb
adc
rclb
dec
addr16
jge
or
inc
inc
push
imul
stos
outsb
pop
adc
mov
mov
cmp
adc
aas
movsl
test
sub
loope
lret
lods
test
cmpsl
shrl
outsb
jmp
xorl
mov
adc
fdivs
fnstsw
ret
cwtl
mov
jo
push
mov
movl
popf
cld
and
or
inc
lcall
ffree
sar
push
mov
insb
inc
or
mov
negl
adc
cltd
fsubrs
sub
cmp
int3
add
mov
jb
dec
jecxz
or
mov
adcl
je
push
stos
mov
xchg
adc
outsl
jae
test
push
mov
push
icebp
insl
shlb
xor
sub
lods
call
les
aam
repnz
cwtl
call
stos
pop
lods
xchg
push
out
sti
lcall
sub
xor
addr16
mov
add
mov
cmp
es
insl
scas
les
ret
jnp
push
inc
add
xchg
push
ljmp
mov
enter
mov
or
sub
xor
sbb
push
jp
ss
sub
inc
call
test
repnz
ficoml
add
in
out
dec
sbb
fs
sub
imul
mov
mov
lods
mov
mov
test
loopne
test
mov
push
xchg
aam
cmp
filds
out
icebp
and
inc
pop
mov
mov
xor
repz
mov
push
bound
sahf
jle
pop
sub
sub
inc
mov
pop
daa
jne
xor
adc
add
out
cmp
aas
jnp
xchg
lahf
and
loope
mov
jle
movsb
xlat
push
pusha
and
pop
or
jmp
dec
test
pop
insl
ficoml
cmp
arpl
jno
mov
inc
push
xor
fcmovnbe
cmp
push
in
loope
cs
jno
fdecstp
jl
dec
mov
test
add
xchg
or
scas
mov
jecxz
mulb
stc
xor
in
mov
out
cli
jnp
inc
push
and
jp
stos
xor
leave
insl
shlb
mov
pop
jge
loope
sbb
sti
sti
add
xchg
fwait
ljmp
in
pop
insl
mov
out
mov
push
add
gs
jns
movsl
in
mov
pop
idivl
inc
pop
jbe
je
pusha
inc
jmp
mov
mov
es
jmp
mov
insl
sub
int
or
sbb
pusha
mov
mov
pushf
adc
dec
popa
push
xchg
stc
inc
add
jnp
cwtl
sbb
shll
clc
lods
int
mov
inc
cmpsb
out
xchg
pusha
dec
hlt
mov
mov
jl
push
mov
bound
out
xchg
pop
and
testl
loop
jp
xchg
pop
cwtl
mov
push
in
dec
xor
sbb
hlt
ljmp
mov
adc
insb
pop
add
push
lahf
outsb
insb
add
push
out
jnp
sub
pop
mov
dec
mov
sub
xor
call
aad
xchg
in
pop
xor
mov
enter
sub
cwtl
sub
es
mov
sbb
cmp
xchg
mov
loop
push
das
xchg
inc
add
repnz
jbe
push
inc
mov
test
push
cwtl
or
lds
mov
movsl
pop
jge
push
fadd
ror
cmp
inc
mov
cmp
pop
xorl
cmp
xor
fnsave
xchg
ret
bnd
push
or
or
imul
xchg
js
movsl
and
cwtl
cmp
push
cmp
inc
rcrb
js
adc
adc
pop
repnz
and
add
pop
cwtl
add
mov
lahf
or
lahf
inc
loop,pt
mov
push
cmp
pop
mov
shlb
out
imul
test
out
xchg
fisubrs
popf
lahf
inc
shlb
nop
xor
int
mov
cwtl
jl
cmp
or
rcrl
movsl
test
or
jl
jp
inc
ficoms
xchg
pop
push
mov
aam
fdiv
push
je
shl
xlat
aas
mov
jecxz
andb
mov
in
push
jmp
sub
sbb
dec
stos
push
aaa
push
repz
std
xchg
jmp
gs
jle
xchg
jl
pop
lods
sub
dec
into
cwtl
mov
mov
xchg
xor
hlt
push
fldcw
xor
sub
ret
xchg
add
or
xchg
pop
pop
std
ja
mov
adc
mov
xor
hlt
fldenv
xchg
mov
pushf
pop
push
imul
push
pop
adc
int3
mov
push
imul
in
filds
jecxz
push
or
addps
icebp
pop
adc
mov
lock
lcall
lock
leave
pop
push
hlt
inc
cmp
cld
push
lock
fdivl
arpl
jb
mov
add
rclb
clc
ss
lds
inc
sbb
mov
ljmp
dec
jle
ss
imul
imul
dec
mov
add
movntq
out
or
lret
pop
int
pop
mov
or
lret
jge
push
add
fstpl
mov
pop
xchg
mov
testl
testb
ja
pop
cmpb
jmp
cmc
imul
imul
ret
cmp
sbb
push
cli
popa
pop
in
cmp
in
jbe
mov
push
mov
fs
add
cwtl
and
mov
xchg
or
cs
xcrypt-ecb
cmpsl
mov
cmova
insb
fsubrs
add
icebp
sbb
fcoms
out
lods
movsb
ja
pop
jecxz
daa
xchg
jns
mov
jb
aaa
mov
pop
cmp
enter
addr16
cmp
enter
mov
lds
out
sub
nop
inc
mov
pusha
dec
mov
push
xor
mov
add
push
gs
addr16
jg
incl
or
mov
mov
stos
and
popa
jle
movsb
sbb
decl
pop
aam
hlt
pushf
pop
cmp
daa
xor
push
arpl
test
pop
addb
jns
in
mov
test
jae
push
es
and
fs
xlat
aad
dec
pushf
cld
jp
push
ds
jp
in
xchg
pop
aam
mov
mov
xchg
jge
faddl
and
jae
or
lahf
jg
stos
xor
jl
ret
or
or
sbb
jmp
sbb
arpl
shlb
shlb
sub
test
adc
pop
push
loop
xchg
out
dec
push
cld
ret
into
jecxz
sbb
or
dec
or
cmp
xchg
popa
or
outsb
dec
orb
rclb
jle
ljmp
pop
stos
lret
jnp
jo
je
xchg
lcall
mov
stos
int
push
pop
nop
adc
lods
dec
out
mov
and
push
iret
cli
call
stos
jge
mov
adc
test
pusha
test
jae
add
fsubrs
adc
jno
ljmp
fldenv
push
scas
dec
outsb
mov
out
jmp
cltd
adc
inc
adc
mov
pop
and
bnd
cmp
cmpsl
or
sbb
sub
xchg
cmp
and
stc
xchg
adc
filds
jae
jecxz
inc
push
and
mov
pushf
mov
mov
pop
adc
fwait
mov
xor
sub
cltd
icebp
gs
or
fnstcw
das
fists
xor
mov
cmp
ljmp
mov
clc
sbb
cld
cltd
jp
bound
jmp
js
cmp
pop
inc
mov
mov
cmp
pop
insl
adc
jg
adc
rol
outsb
xchg
insl
push
jae
insl
adc
adc
fwait
sbb
cwtl
mov
test
movsb
icebp
sub
xchg
xchg
pop
push
inc
jge
pusha
add
scas
pop
xchg
mov
aam
scas
int3
dec
daa
rcrl
and
cmp
sbb
cli
scas
add
in
aas
std
cwtl
mov
add
in
out
outsb
insb
mov
adc
inc
lret
dec
das
test
xor
push
test
push
in
popa
and
repz
mov
jno,pn
pop
dec
mov
bound
outsb
ljmp
aam
rorb
sub
pop
inc
pop
xor
mov
cmpsb
incl
cmp
mov
or
push
cwtl
fidivs
fldl
mov
jmp
aad
lds
cmp
mov
mov
lret
push
or
mov
adc
mov
lcall
lock
cmpsl
int
out
and
insl
xchg
xchg
mov
xchg
and
in
insl
jmp
adc
mov
jno
lods
pop
clc
cmc
jp
add
and
pushf
cmpsl
hlt
xchg
adc
mov
andb
add
jns
loope
dec
add
das
xchg
inc
sub
cs
cmp
sarl
sub
and
out
inc
mov
add
sbb
add
mov
add
ret
and
cli
xor
adc
dec
push
mov
mov
jmp
adc
jmp
jge
jbe
negl
movsb
adc
dec
iret
xchg
out
test
imul
or
mov
cs
xchg
int
inc
sbb
xchg
repz
jle
push
mov
divl
and
movsb
cmc
push
shrl
icebp
or
xchg
aaa
pop
and
shrl
fnstcw
mov
cld
cmp
icebp
lock
loop
dec
push
mov
add
imul
aaa
pushf
out
xor
cmp
mov
into
fwait
test
adc
jnp
pop
xor
xchg
popf
cltd
cmp
mul
rcll
repnz
insl
jmp
inc
fcmovnu
jno
sub
sbb
outsb
sbbb
xchg
lret
mov
jnp
push
adc
outsl
mov
div
lds
fldt
adc
cmpsl
aad
adc
das
int3
xor
jl
sub
pop
or
dec
jge
pop
adc
mov
or
cmp
jne
mov
test
mov
shll
push
push
notb
int3
mov
sarl
std
inc
cwtl
popf
adc
or
jle
ja
dec
cmp
and
sarl
cmc
lods
pop
mov
loope
rorl
movb
mov
sbb
pushf
sbb
mov
inc
push
scas
pop
mov
mov
lret
cltd
xor
xorl
add
movl
cmp
je
xorl
pushl
pushl
call
sub
jmp
scas
cltd
and
add
cwtl
int
rclb
addl
and
cmpsb
pop
xchg
xchg
pop
sbb
push
pop
int
testb
jbe
dec
dec
mov
mov
fcmovu
pop
or
mov
iret
jne
add
mov
jno
outsl
enter
jp
pop
inc
cmp
push
jne
daa
push
lock
push
sarb
inc
in
mov
xchg
xchg
xor
push
dec
xchg
fdivr
adc
loopne
mov
push
cmp
aaa
lahf
sbb
in
jb
sub
add
inc
jecxz
jo
or
cmp
inc
sub
lret
mov
pop
int
pop
fs
push
sub
jo
scas
mov
jne
call
cltd
ds
xor
pop
jg
and
jb
xchg
outsl
rol
lods
adc
bound
addr16
mov
mov
gs
imul
mov
push
pushf
mov
and
pop
jle
sub
mov
outsb
ljmp
push
xor
push
dec
mov
iret
lods
inc
push
and
ffreep
and
pop
xchg
jnp
inc
rorl
insb
dec
popa
cs
xchg
and
ret
syscall
into
fldl
jno
xchg
pushf
inc
adc
arpl
mov
add
mov
cmpsb
les
sub
jns
lahf
cmp
hlt
inc
xor
adc
pusha
das
add
dec
jmp
xor
inc
stc
cmp
shlb
mov
pushf
movsb
jnp
inc
fdivl
jp
dec
mov
mov
fisubl
subl
hlt
jp
pop
test
pop
mov
call
cmp
insl
je
enter
add
ljmp
mov
das
sbb
adc
adc
pop
add
inc
xchg
push
jae
lret
mov
push
inc
add
cmp
jno
int
das
push
notl
sbb
adc
inc
in
arpl
xor
mov
sar
imul
xor
sbb
jnp
mov
fdivl
sub
push
xchg
hlt
adc
mov
lret
push
aas
popa
inc
jmp
rorb
lcall
ret
out
lret
add
and
add
mov
sub
cmpsb
fwait
push
or
test
popf
cmp
int3
mov
xchg
aas
adc
mov
jnp
push
push
stos
sahf
ljmp
push
sarl
jne
pop
cmpb
outsl
push
imul
dec
sbb
dec
iret
or
hlt
xchg
fsubl
cmp
inc
or
adc
sar
mov
or
dec
cli
and
lahf
mov
scas
outsb
aad
xchg
push
in
inc
rol
and
incb
faddp
lods
dec
sarl
push
sbb
push
lahf
not
outsb
divl
popf
lods
rolb
xor
xchg
scas
and
add
pop
lret
imul
or
incl
adc
add
es
mov
imul
insl
popl
test
cmp
cmp
adc
xchg
cli
sbb
insb
pop
cli
lret
mov
adc
aaa
fisubrl
sbb
dec
imul
mov
or
inc
adc
es
cli
push
fs
cli
scas
adc
mov
jecxz
bound
mov
adc
subl
push
mov
out
shr
inc
pop
xor
jge
out
hlt
out
dec
push
mov
and
mov
pusha
pushf
adc
pop
outsb
pushf
out
xor
mov
insb
daa
fwait
xor
sarb
xchg
call
pushf
or
cld
and
jno
ret
sub
ret
shlb
lret
xchg
or
scas
cmpsb
xor
lret
std
sbb
imul
icebp
sub
inc
or
inc
lret
sub
mov
lds
js
xchg
ja
lock
pop
inc
or
cmp
adc
mov
popf
pop
int
cmpsl
daa
insl
sub
xchg
repnz
pop
lea
fsub
push
xchg
jnp
jg
shlb
push
inc
andl
mov
or
push
rolb
add
push
bswap
fnstcw
and
ljmp
sbb
icebp
mull
add
inc
add
xlat
rolb
clc
mov
and
mov
and
jnp
or
fldt
scas
loope
jp
push
aad
mov
cli
xor
loop
repnz
daa
es
lds
dec
je
mov
mov
pop
flds
xchg
inc
aas
adc
jp
cld
test
or
mov
insl
rclb
pop
aaa
mov
movb
push
push
insl
test
sub
imul
pop
js
paddusw
shl
enter
popa
out
je
cmp
dec
idivl
mov
sub
adc
xchg
int3
leave
ret
jmp
adc
push
dec
pusha
sbb
lock
and
cld
jg
adc
sysexit
dec
mov
aad
enter
mov
stos
adc
add
cltd
fldt
sub
out
mov
sub
mov
rcrl
fnsetpm(287
mov
add
mov
test
and
ja
les
mov
int3
outsb
jno
scas
hlt
out
jp
xor
jp
fisubrs
fdivs
dec
sub
fs
lret
lock
add
mov
jbe
mov
loope
in
insl
push
icebp
fnstsw
jb
or
lds
xchg
cmp
fdiv
pushf
dec
xchg
dec
sbb
xchg
mov
inc
sbbl
pop
enter
pop
jl
mov
pop
in
clc
add
js
push
outsb
scas
scas
outsl
cli
test
repnz
xchg
and
ret
mov
test
cltd
ret
jecxz
in
in
enter
aam
jl
pop
imul
addr16
ss
pop
mov
fsubs
out
iret
jbe
mov
lock
pop
mov
icebp
jae
adc
outsb
ret
loopne
pop
mov
lea
test
sbb
jl
sub
nop
sbb
lret
fisttps
mov
jbe
fstl
push
dec
fnsave
cmc
jl
inc
jno
lods
mov
and
cmpsb
mov
repz
fs
push
sub
and
mov
mov
repnz
sarb
mov
nop
ss
mov
out
iret
cltd
dec
and
push
out
or
mov
push
xchg
cld
in
out
iret
addr16
xchg
xor
movsl
mov
mov
jle
lcall
lock
adc
push
test
imul
jae
outsl
pop
insl
fbstp
fwait
subps
lock
mov
sbb
push
arpl
pop
and
xor
inc
cmp
std
mov
xchg
or
xchg
add
notl
pop
inc
test
push
ss
cmp
fdivrl
pop
cmp
nop
cmpsl
sub
aaa
adc
xchg
enter
stc
and
push
lds
pop
std
fstp
clc
or
adc
adc
std
lods
nop
pop
lds
mov
cmpsl
call
mov
loope
ljmp
inc
mov
inc
mov
daa
call
sub
pusha
jecxz
adc
movsb
sbb
xchg
push
sub
add
fadd
dec
data16
test
or
mulb
stos
es
jg
xor
lock
in
hlt
mov
xchg
aam
or
pop
popl
pop
xchg
push
outsb
ds
pop
sbb
call
iret
fidivl
pop
jne
mov
xor
scas
sub
notl
sub
in
stos
mov
in
xchg
adc
aas
xor
mov
xchg
pop
dec
std
sub
sti
adcb
mov
inc
pusha
pop
cmp
aam
clc
fdivp
scas
cmpsb
cs
stc
rcr
mov
sti
xchg
movl
nop
fcomip
mov
js
fimuls
inc
xlat
and
sbb
pusha
pop
call
rcll
xchg
sub
xor
jno
or
stos
adc
outsl
xchg
jl
sbb
sub
pop
pop
xchg
popa
popa
or
js
mov
mov
lods
or
pop
test
sahf
mov
cld
lea
aaa
stos
cli
ret
fists
sbb
inc
std
or
dec
rcll
push
mov
aaa
aaa
inc
xchg
jno
outsl
lods
or
or
mov
cmp
add
mov
movsl
mov
add
sbb
fadd
sub
outsl
jg
pop
mov
stos
xlat
jl
xor
mov
insb
mov
push
scas
and
cmc
addb
push
popf
xlat
out
jno
add
enter
mov
and
dec
cwtl
pop
mov
pop
mov
push
sbb
xchg
xchg
mov
dec
mov
and
mov
fidivl
and
and
pop
movb
xchg
repz
daa
enter
or
bound
inc
xlat
jmp
and
sub
jno
les
jno
jae
dec
cmp
push
push
or
iret
mov
sti
mov
adcb
sbb
push
fs
mov
aam
mov
fistpll
cmp
push
aad
cmp
sub
xchg
aaa
or
in
adc
test
mov
loope
xor
fwait
pusha
insl
cmp
fs
es
mov
pop
andl
cmp
adc
insl
mov
mov
mov
and
inc
push
mov
and
inc
xchg
pop
cmpsb
xchg
imul
cmpsb
cmp
adc
roll
mov
popf
jge
lds
imul
cmpsl
cltd
jno
ret
lods
aaa
clc
bound
inc
inc
or
je
and
lahf
sub
add
icebp
push
pop
shl
sahf
mov
push
jmp
cs
sub
jbe
bnd
jle
popf
sbb
add
push
sbb
test
xchg
add
popa
sbb
inc
push
add
cmp
xchg
loop
and
add
sub
xchg
cmpsb
loop
sti
popa
jnp
lcall
lcall
int3
push
gs
add
and
je
scas
mov
sbb
xcrypt-cbc
cmpsl
nop
mov
sbb
push
in
mov
xchg
sbbb
rcll
lods
pop
mov
mov
mov
mov
inc
add
sbb
xchg
ja
movl
out
mov
cmpsl
xchg
jecxz
js
repnz
popa
fcomps
xchg
aad
jecxz
fsubr
push
or
shlb
aas
xorb
sub
push
push
jns
mov
dec
adc
fistpl
les
ret
cmp
fwait
push
cmp
pop
cmc
ljmp
jecxz
mov
jecxz
sbb
mov
sbb
adc
adc
mov
pop
ror
addr16
aad
mov
out
js
cli
xchg
fisubl
push
cmp
push
adc
xchg
mov
outsb
adc
shlb
inc
push
lcall
pop
mov
xlat
call
push
arpl
xor
mov
outsb
test
adc
movsl
incb
cld
sbb
push
xchg
pop
testb
out
xchg
ja
xor
shrl
and
mov
mov
sbb
adc
daa
inc
nop
xchg
in
push
clc
mov
into
sub
leave
cmp
jns
lods
rcr
xchg
data16
xorl
cmp
repz
inc
pop
adc
cli
push
in
scas
and
cmp
out
ret
rcrb
dec
orl
stc
push
cs
pop
pop
or
cmpsl
ljmp
repnz
in
into
pop
sub
sbb
fisubrl
cli
and
outsl
ret
in
pop
xchg
lods
add
and
sbb
pop
and
sbb
repz
or
add
imul
sub
repz
push
sbb
or
hlt
sbb
xor
aad
repnz
leave
in
scas
pop
xor
add
aas
jecxz
and
ja
inc
mov
inc
sub
lea
dec
dec
mov
andl
mov
imul
std
sub
mov
ficoml
and
loop
xor
mov
fcmovu
out
mov
in
xchg
fiadds
hlt
ja
xor
ss
pushf
data16
js
sti
push
out
lcall
fcmovnu
xorb
xchg
dec
mov
lods
adc
jnp
neg
push
pop
pop
pop
sbb
outsb
test
xchg
ss
ret
dec
in
sbb
push
adc
or
scas
loopne
lods
xchg
loop
and
fwait
dec
inc
inc
push
xchg
add
scas
lock
in
pop
shlb
or
int
jl
mov
fmuls
movb
sub
popa
jp
mov
add
mov
icebp
data16
pushl
mov
data16
inc
mov
lds
cs
pop
pop
lds
push
in
jmp
push
xor
lods
jnp
dec
ss
or
inc
aad
or
bound
jl
icebp
stos
rcl
nop
push
test
lret
sbb
cmp
icebp
js
fcomps
cltd
aaa
scas
mov
jl
pop
out
xor
fisttps
insl
gs
add
ret
push
ds
fs
adc
mov
dec
or
mov
nop
or
lock
jmp
test
dec
inc
fidivrs
lods
inc
stc
stos
xchg
sbb
dec
in
cmp
out
and
dec
xor
ret
cmc
lea
jne
fstpl
xor
data16
and
pusha
jae
out
and
icebp
mov
cmp
add
and
test
sahf
out
jg
fs
sub
inc
add
xchg
jne
push
xlat
loop
sbb
rorl
arpl
push
sbb
jg
or
jbe
jle
mov
pop
pop
adc
push
rcr
xchg
fs
pop
xor
and
nop
add
loop
es
xor
add
xchg
cmpsb
int3
imul
jl
popf
mov
scas
cmpsl
xchg
mov
lods
dec
lea
test
frstor
and
cmp
mulb
push
insl
jnp
imul
lret
out
sbb
cld
pop
adc
clc
movsl
sub
mov
imul
out
addr16
insl
inc
cmp
and
jge
jmp
xchg
mov
lock
or
lods
sbb
add
scas
mov
aaa
jecxz
xor
movsb
es
sub
adc
sbb
mov
call
std
aad
xchg
decb
outsl
push
mov
rcll
subl
sbb
add
sbb
inc
jnp,pn
push
mov
gs
pop
pop
pop
cmpsb
bnd
fdivrl
rcl
insl
insb
dec
repz
mov
setae
pop
data16
inc
les
push
xchg
or
inc
mov
test
fwait
repz
adc
icebp
int
cld
jmp
xchg
mov
stos
mov
sarl
es
xchg
mov
dec
mov
test
ret
out
shll
insl
mov
dec
sti
test
push
das
repz
stos
clc
loop
pop
dec
in
sbb
add
mull
stos
jb
push
jno
push
xor
push
out
cmpsl
pop
rclb
or
cmp
push
xchg
ror
scas
insb
gs
mov
xchg
fmuls
imul
scas
jmp
pop
jmp
ficomps
push
jae
mov
arpl
jo
popl
xor
insl
jbe
outsb
repnz
jecxz
xor
mov
fmuls
sub
mov
dec
sbb
add
xchg
or
daa
mov
pop
mov
dec
xchg
and
popf
jo
enter
inc
inc
mov
inc
int3
mov
mov
movsb
outsb
mov
mov
pop
fstpt
or
es
xorl
adc
loop
hlt
je
mov
and
xor
lret
jne
scas
pop
dec
cmp
dec
xchg
pop
ret
jg
and
pop
ja
fstps
pop
xchg
jmp
mov
push
sub
adc
cmp
push
in
sub
shrb
into
jp
cmp
out
test
rol
test
dec
ret
lds
dec
jno
mulb
jo
lods
out
mov
xchg
jnp
ljmp
out
daa
addr16
mov
pop
fidivl
leave
in
aas
jne
rorl
and
inc
lret
pop
cmp
add
sbb
and
fcoms
adc
ja
std
jne
loopne
xchg
jo
jb
hlt
lret
decb
imulb
dec
lds
imul
push
pushf
add
loopne
jno
cmp
mov
sbb
adc
mov
loop
adc
dec
shll
or
sbb
or
mov
pop
add
xor
ss
mov
sbb
fdivl
leave
cmp
sarl
inc
cmp
jge
xor
inc
or
les
fwait
lock
enter
xchg
fstps
aas
cs
jge
add
cwtl
inc
add
ss
mov
inc
jb
lods
jecxz
push
jb
imul
mov
inc
mov
js
adc
ficoms
cwtl
in
icebp
fsubrs
fldenv
gs
jp
jo
cmp
popf
rorb
push
and
inc
int
sbb
and
pop
roll
sub
adc
or
int
cmpb
aam
and
xchg
jecxz
xchg
xchg
push
sbb
or
mov
adc
repz
mov
or
in
mov
push
cld
orb
fidivs
sti
push
divb
ja
mov
jbe
ss
rorb
int3
inc
jecxz
lahf
das
add
jl
sbb
cmpsb
cmpsl
inc
jne
sub
push
xchg
outsb
shl
ficompl
ljmp
dec
out
js
nop
out
stos
out
testb
fidivrs
push
icebp
out
rclb
xor
cmpsl
scas
pop
stos
push
popa
repz
idiv
pop
xchg
adc
imul
call
dec
aam
dec
cmp
and
cwtl
or
rcl
pop
lea
and
je
mov
sub
scas
je
dec
fstl
out
es
fnstsw
jns
arpl
adc
out
push
or
sbb
jge
mov
pop
or
mov
push
aad
dec
cmp
xor
rolb
in
mov
in
jo
lahf
test
pop
bound
inc
int3
ljmp
jns
xchg
in
jmp
dec
jne
aad
imul
out
iret
in
out
inc
aas
push
call
aam
sbb
inc
mov
and
fstp
mov
lea
push
pop
inc
repnz
mov
mov
xchg
in
mov
and
inc
push
mov
clc
cwtl
pop
loop
or
arpl
xchg
jbe
and
js
jmp
test
pop
pusha
loopne
addr16
adc
mov
mov
out
push
popf
add
inc
js
push
lods
cwtl
fsubrs
mov
and
out
jnp
mov
shlb
bound
pop
arpl
adc
cs
pop
xchg
or
pop
enter
test
jb
incb
aaa
mov
movsl
imul
out
push
out
rcrl
popl
xlat
es
pop
aaa
sub
out
or
lret
cmpsb
gs
push
mov
mov
push
push
jecxz
push
xchg
xor
jecxz
shr
fcmovnb
ljmp
add
inc
add
sti
push
enter
pop
dec
in
jle
jecxz
jnp
out
fisubs
jnp
cmp
sub
js
pop
jno
cmpsb
cwtl
sub
mov
pop
mov
test
inc
ret
add
mov
ret
mov
pop
mov
dec
data16
je
dec
aaa
roll
or
mov
mov
cli
outsb
imul
ds
push
adc
xor
mov
dec
lahf
lods
push
daa
xor
repnz
stc
sub
outsb
adc
jo
dec
cmp
sbb
fsts
clc
xchg
push
ret
fistpll
pushf
je,pn
mov
cmp
sub
hlt
ficomps
ret
adc
out
fstp
repz
fistpll
gs
jge
sbbl
and
push
xlat
dec
mov
sub
mov
cmpsl
mov
jo
push
fsubs
cmp
pop
cmp
in
jle
sti
mov
and
and
sub
mov
test
lea
cmp
lahf
xchg
dec
sub
mov
insb
in
jp
mov
xor
sub
xor
inc
sahf
mov
jno
iret
sub
fbld
std
inc
jmp
or
push
jg
negl
mov
test
adc
mov
cmp
sbb
sub
xchg
enter
into
mov
iret
stc
add
popf
xchg
sbb
or
stos
jp
lock
inc
inc
imul
scas
add
outsl
fcomi
pop
lods
sbb
imul
in
ret
addb
push
mov
insb
or
mov
pop
negl
lods
adc
rclb
ljmp
jns
dec
test
push
int
hlt
pop
fnsave
neg
lods
rcl
adc
fdivrl
cmpsl
mov
cwtl
cmp
xor
push
mov
insb
mov
push
push
test
in
shrl
adc
push
lock
inc
dec
jle
lahf
insb
cmpl
add
dec
lds
rorl
lret
sub
mov
rclb
inc
mov
test
in
sbbl
mov
xchg
test
jbe
xchg
adc
imul
or
test
andb
sub
sub
push
sub
push
ret
ret
pop
imul
ss
add
sbb
int
jmp
enter
pop
rorb
jp
aaa
mov
pop
out
jmp
or
or
pop
xchg
add
out
push
in
mov
andl
ficoml
sub
push
or
bound
mov
sbb
dec
pop
cmp
rolb
setns
lret
call
adc
test
sub
rcrb
cmpsl
mov
cmp
mov
filds
outsl
or
jle
cmp
dec
sbb
mov
and
mov
cmpsl
mov
mov
fcmove
xlat
fldl
adcl
push
lret
in
push
pop
and
add
aam
or
fiaddl
pushf
jle
and
jp
cmp
pop
ret
xor
xchg
inc
and
cmc
sbb
xor
and
movsl
pop
or
lret
xor
jl
in
ljmp
idivw
jbe
lahf
rclb
jg
xor
loopne
add
shlb
ljmp
jbe
pop
jno
sub
mov
xchg
scas
jp
subl
dec
dec
push
inc
push
and
cmc
cmp
scas
pop
inc
mov
test
pop
and
stos
je
shl
test
mov
push
pop
cld
aaa
mov
or
ljmp
mov
cmp
aas
enter
jge
call
inc
int
dec
jnp
mov
test
pop
adc
dec
fidivrl
rolb
mov
adc
fstpl
pop
fadd
cld
xor
cwtl
add
inc
leave
jb
pop
fistl
into
push
sub
mov
scas
fildll
cmpsl
mov
xor
cli
adc
pop
pop
movsl
orl
jne
and
stos
mov
lcall
ljmp
dec
cmp
fs
aam
push
in
and
jl
ljmp
loope
iret
cmp
lods
fwait
movsb
xor
cltd
lock
and
push
imul
dec
push
call
ror
pop
xchg
add
out
mulb
and
xchg
mov
imul
inc
add
sub
dec
jp
inc
mov
lods
loop
sahf
xor
add
mull
lds
dec
mov
insl
js
xor
gs
push
pop
out
and
and
cmp
clc
dec
scas
faddp
xor
add
sbb
sub
xchg
popf
aas
or
pop
push
sbb
mov
xchg
out
and
int
fsts
adc
mov
hlt
pop
mov
dec
in
orb
adc
andl
leave
or
jmp
inc
out
mov
mov
mov
pop
mov
inc
xchg
xlat
jl
and
sbb
xor
push
push
les
push
adc
inc
adc
ret
sbb
add
leave
insb
sub
push
adc
mov
add
mov
adc
cmpsl
data16
bound
sbb
outsb
adc
fisttpll
fucomp
push
and
or
or
or
clc
icebp
movsl
jbe
ljmp
adc
xchg
sti
inc
xorb
fisubs
aaa
mov
mov
inc
cmc
inc
gs
inc
imul
inc
fldt
aaa
je
aas
mov
jae
sub
ret
sbb
xor
jmp
push
inc
ret
push
xor
popf
adc
push
ret
dec
int3
inc
mov
inc
je
sbb
lods
cwtl
jle
ret
dec
sbb
mov
mov
jecxz
mov
mov
mov
out
out
lcall
cwtl
or
push
mov
sub
sbb
sarl
jp
xor
mov
jle
fmuls
mov
xchg
test
cwtl
repnz
pop
add
fprem1
pusha
pop
mov
mov
test
jbe
loop
fs
mov
nop
add
or
dec
inc
movsl
outsb
sti
dec
jbe
mov
push
jns
pop
cmpsl
dec
outsb
xchg
push
lret
outsb
lcall
sti
mov
dec
ret
xchg
out
aam
lea
das
lds
jg
inc
movsb
jle
push
push
in
add
adc
lds
scas
rclb
sbb
mov
cld
lods
and
pop
mov
or
gs
outsw
xor
sub
jle
stos
fbld
lret
xchg
scas
cmp
jbe
xlat
test
test
jl
in
movsb
sub
es
jg
loopne
push
xchg
inc
dec
mov
lock
dec
jns
js
inc
sbb
jl
push
xchg
sbb
aam
sbb
cmp
push
or
mov
cmpsl
inc
push
mov
and
imul
int3
sahf
mov
mov
mov
adcl
imul
out
xor
std
cltd
mov
jge
int
cmp
pop
pushf
lret
sub
ss
ret
ljmp
enter
inc
jl
cmp
cwtl
or
or
cmp
sub
adc
mov
fdiv
mov
shr
adc
lcall
jecxz
mov
in
stos
inc
adc
and
mov
out
inc
pop
push
cmpb
lahf
mov
clc
sbb
les
mov
fcoms
fistpll
pop
lret
mov
les
nopl
mov
xchg
jmp
daa
xor
jge
push
into
into
xchg
out
repnz
xchg
or
imul
push
cld
mov
popa
mov
ret
ss
dec
pop
aad
sahf
pop
test
mov
imul
lret
sbb
jbe
cli
push
sbb
sub
sbb
cmpl
xor
sarb
inc
jmp
in
pop
stos
pop
pop
inc
dec
ret
lods
fs
cmp
xor
lods
xchg
pop
es
xchg
stos
mov
sub
mov
xlat
cmp
es
push
cmpsl
push
jne
mov
sub
dec
mov
std
xchg
ljmp
cld
lret
inc
add
pop
aaa
jg
push
lret
test
mov
ret
lods
or
sarb
inc
in
fnclex
leave
xabort
dec
add
outsl
add
dec
inc
shll
insb
movsb
sub
rorl
or
pop
inc
out
insb
xchg
sbb
movsl
aaa
and
mov
mov
fs
clc
jmp
xorl
dec
mov
icebp
inc
fwait
in
inc
xlat
cmp
dec
loopne
aas
pusha
cmp
cmc
mov
adc
jns
add
shl
pusha
lcall
test
popf
roll
cltd
cmc
sahf
push
sub
loop
popa
out
test
sbb
ret
outsb
push
push
cli
test
fs
fstps
adc
inc
popa
push
sub
les
int3
mov
xchg
repnz
dec
aas
jne
cmp
popa
mov
gs
push
xchg
cmp
shll
mov
push
hlt
dec
pop
add
mov
out
jg
dec
mov
sub
lret
sahf
divps
shrb
fimull
outsb
in
sub
out
mov
pop
addr16
lods
icebp
bound
and
inc
or
sbb
sahf
popa
dec
xchg
pop
cmp
push
in
inc
pop
jmp
mov
dec
les
xchg
push
insl
in
push
push
inc
movntq
lock
aad
mov
pusha
jo
and
sbb
stc
xchg
jo
scas
enter
incl
jge
mov
push
pop
pop
push
sub
sarl
outsb
push
xchg
rorl
xor
movsl
or
lock
arpl
adc
mov
std
loopne
jmp
jb
stos
fidivrs
jne
dec
scas
es
dec
sbb
and
scas
scas
loop
les
std
jp
mov
loopne
lcall
sbb
push
ljmp
mov
sub
push
mov
mov
imul
jno
xor
cmc
lock
mov
fidivs
dec
ja
sti
jmp
push
into
jbe
xor
or
enter
cmpsb
and
ja
aaa
movb
push
xchg
dec
stos
fcmovbe
push
inc
stos
and
xchg
aad
push
xor
mov
sub
jb
xlat
cmp
mov
push
push
push
ss
outsl
xchg
frndint
cmp
xchg
call
mov
aas
cs
add
icebp
jle
pop
mov
loop
sub
cld
and
xchg
sub
cmpsb
dec
add
xor
xchg
pop
cmp
icebp
jae
outsb
clc
add
stc
pop
xor
sti
and
xchg
popa
add
cmp
repz
cltd
pop
cmp
mov
mov
xchg
or
mov
adc
pop
adc
xor
adc
roll
adc
shl
mov
mov
lret
mov
scas
xchg
mov
push
xchg
xchg
adc
jbe
mov
push
push
fldenv
pop
loop
mov
dec
adc
xor
xor
out
jne
and
imul
jg
jb
pushf
test
sub
repz
or
or
lds
mov
cmpsl
sub
stc
sbb
mov
movsl
xorb
les
std
nop
push
push
int
lret
int3
sbbl
inc
mov
leave
adc
mov
sti
scas
mov
sub
inc
sbb
and
sbb
scas
cmp
mov
pop
push
add
add
mov
scas
mov
xlat
icebp
jmp
xchg
loope
aad
inc
cwtl
xor
fwait
xor
mov
dec
xchg
jae
sub
sub
ret
es
cmp
inc
in
movl
cmpl
je
cmpl
jg
jmp
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
mov
subl
xor
xorl
add
movl
cmp
je
xor
mov
xor
mov
mov
mov
xor
or
xor
mov
xorl
add
mov
mov
and
mov
mov
adcl
add
xorl
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
jmp
or
inc
mov
insl
mov
jno
addl
mov
int3
or
push
mov
jmp
outsl
mov
call
sub
repnz
hlt
insl
xchg
push
sub
mov
mov
sbb
stos
mov
pop
add
mov
out
inc
test
dec
pop
sub
or
movsl
cmc
cmp
cmp
inc
jle
outsb
or
ss
imul
ror
popf
insl
xor
xor
pop
ljmp
out
mov
push
sbb
std
rol
add
adc
push
cmpsb
ljmp
and
cmp
lds
xchg
mov
inc
lds
cmp
fnsave
cmpsl
inc
mov
cmp
xchg
arpl
fs
adc
loopne
sub
in
lcall
int
pusha
or
push
mov
sbb
xor
shll
sub
lret
dec
add
xlat
xchg
xchg
pop
mov
iret
mov
sbb
cmp
adc
mov
dec
or
scas
dec
idivl
fs
xchg
dec
mov
aas
popf
push
loopne
fimull
lock
push
push
aam
lods
ljmp
bound
adc
jb
push
aam
jg
pusha
call
sbb
mov
lods
icebp
inc
jb
lea
cmp
cltd
mov
in
mov
xlat
cmp
imul
sbb
fabs
push
imul
sbb
mov
imul
pop
dec
add
sbb
ss
push
test
std
fimuls
jo
pop
dec
mov
stc
int
lret
jp
outsb
adc
outsb
pop
mov
adc
inc
mov
outsl
cmp
xchg
ja
iret
cmp
adc
fsubrs
dec
cmp
fldenv
sti
add
sub
cmp
sub
pop
mov
push
fildl
aas
int3
push
dec
push
ds
cmpsl
dec
adc
cmpsb
adc
mov
orl
push
inc
sub
in
popf
outsl
jmp
pop
subl
mov
cld
jl
lods
add
inc
outsl
int3
jbe
loop
in
std
js
jle
adc
adc
jl
jp
add
cld
mov
lahf
dec
out
sbb
push
inc
pop
mov
inc
jnp
icebp
cmc
leave
out
and
dec
pop
and
sbb
fmulp
jb
adc
test
subb
or
inc
fimull
jp
pop
sahf
insl
adc
inc
cli
sbb
clc
pop
sti
shl
and
mull
movsb
cmc
add
jns
enter
repnz
addr16
push
jne
xchg
or
dec
push
sahf
lock
mov
mov
mov
les
je
cmp
out
cld
outsb
jb
ja
pop
lods
into
push
out
lret
or
push
in
into
and
call
mov
sub
aad
shlb
mov
js
dec
ret
in
adc
adc
mov
movsb
push
rcr
in
gs
lods
jg
jb
jl
and
sbb
iret
rcl
cmp
sub
adc
mov
cs
mov
sbb
fwait
cli
add
pop
iret
cmpsl
lods
jecxz
jne
pop
out
xchg
sbb
inc
jb
fdiv
or
xorl
mov
add
bound
jge
js
jne
popf
mov
lahf
pop
add
rol
jno
mov
loope
adc
imul
and
push
insb
aad
cli
popf
into
idivl
out
fisttps
in
andb
sub
cmpsl
mov
fdivrl
js
sub
xor
test
sbb
cmpsl
jle
mov
or
jmp
mov
lcall
pop
mov
stc
addr16
out
adc
cmp
cmpsb
in
scas
mov
push
pop
pop
les
mov
call
jne
out
sub
aad
popf
jmp
rclb
negb
jg
lahf
daa
dec
xchg
inc
jp
adc
pop
cmp
jle
cmp
je
inc
jecxz
push
imul
fxch
inc
sub
jb
cmp
jl
lret
mov
dec
mov
mov
je
push
mov
fdivrl
repnz
out
cmc
add
ja
popa
cmp
adc
ja
cli
cmp
xchg
jle
out
shlb
mov
mov
shrb
leave
lods
shrl
push
nop
movsl
cmp
addr16
fidivrl
cwtl
repz
push
and
clc
addr16
fiadds
int3
push
xchg
push
mov
add
cld
popa
sub
call
adc
ljmp
xchg
pop
jl
gs
pop
pusha
out
movsl
dec
pop
sbb
call
push
jle
cwtl
scas
add
fucom
or
lret
enter
jne
in
pop
mov
adc
sti
push
push
mov
pusha
movsb
xchg
adc
mov
stos
cli
lret
pop
push
jg
xorl
std
icebp
addr16
jmp
aas
pop
push
jecxz
mov
lret
out
inc
dec
mov
mov
clc
dec
popf
ror
adc
adc
push
test
incl
out
jmp
je
inc
dec
mov
cmpsl
repnz
sbb
mov
xor
dec
je
popf
les
sub
aaa
fwait
insb
pop
call
jo
jg
cmpsl
cmp
cmp
and
jmp
ds
ret
dec
jmp
or
ret
push
insl
rcll
pop
push
inc
hlt
lods
push
std
mov
idiv
cltd
push
sti
mov
sub
push
daa
sbbl
dec
adc
mov
and
mov
rcrb
loope
push
bound
rorl
cmp
jg,pt
xorl
les
movsb
pop
or
mov
fisubs
imul
add
ds
ret
cmp
pop
fistpl
mov
and
ljmp
fdivl
mov
stos
cwtl
decl
mov
fcmovnu
and
jo
push
lds
push
and
add
xor
mov
jno
cmp
sub
imul
data16
clc
popa
push
fsub
out
xor
xchg
inc
sti
push
adc
jp
push
mov
sahf
sbb
out
inc
pop
xchg
mov
sbb
das
fbld
lret
in
or
cwtl
cmp
mov
rclb
je
xchg
xchg
in
pop
pop
cmpsb
mov
ljmp
adc
sti
add
mov
add
popa
push
pop
cmp
and
mov
repz
push
fadds
mov
aam
test
cld
fidivrl
mov
push
lret
xor
pusha
stc
mov
mov
aaa
dec
sti
dec
sub
mov
inc
jbe
sub
fcmovbe
in
or
insl
fisttpl
dec
ja
shrb
rolb
les
dec
stos
and
dec
jl
repnz
cwtl
sbb
sbb
insb
mov
dec
add
loope
pop
les
adc
lahf
clc
dec
sub
mov
pop
fisttps
mov
mulb
cmp
roll
mov
fcompl
imul
fnstenv
cmp
clc
mov
or
ucomiss
icebp
bound
sbbl
jo
out
stos
fsubrl
or
jns
ja
jne
jge
mov
xor
mov
stos
aam
repnz
inc
movsb
out
out
mov
add
xchg
aaa
and
mov
xor
ror
xchg
cwtl
jge
and
sub
push
movsl
lret
das
fs
int3
jl
das
into
mov
push
imul
and
or
pop
adc
dec
jae
ret
xchg
outsl
repnz
inc
jmp
hlt
lea
in
flds
sbb
cmp
or
jge
daa
lahf
inc
lods
cmp
subl
dec
movsl
inc
cmp
pop
ds
insb
in
outsb
sub
push
mov
push
xor
cmp
mov
dec
and
cmp
fistpll
les
fldl
and
sbbb
imul
fs
je
mov
sub
mov
mov
stos
fmull
shll
fidivrs
jnp
faddl
cld
jecxz
xor
imul
insl
pop
pop
icebp
sbb
inc
into
adcl
add
and
pusha
in
or
xlat
js
test
cmpsb
es
xor
mov
div
sub
dec
orl
aam
mov
mov
mov
out
dec
jmp
shl
insl
mov
mov
loop
pop
cmpxchg
popa
inc
testl
push
in
sub
fs
mov
xor
movsl
xlat
pop
bound
push
daa
push
mov
dec
sub
fnstsw
cs
sub
jo
repz
es
hlt
mov
mov
in
xor
repz
addl
inc
popf
jmp
mov
loop
int
mov
fisubrs
xor
add
shlb
mov
not
inc
pushf
inc
hlt
inc
test
xor
push
dec
jl
hlt
aaa
js
mov
stos
adc
sub
sub
test
bound
insl
xorb
shll
jo
outsl
and
ja
xchg
divb
pop
js
mov
inc
mov
stc
lret
mov
outsl
testl
das
mov
mov
adc
pushf
pushf
out
into
push
fsubp
lret
cmp
mov
inc
mov
andl
pop
cld
jno
jge
xor
fldt
stos
fsubl
inc
dec
stc
imul
dec
fbstp
scas
mov
add
adc
insl
adc
xor
test
out
and
or
inc
adc
int
sbb
scas
and
push
add
xor
jg
xor
cltd
push
mov
push
das
adc
xor
push
adc
or
int
cld
lret
mov
fwait
mov
pop
inc
movsb
jnp
dec
mov
sti
fstpt
popf
aaa
xchg
cmp
xchg
cmp
push
inc
cmp
or
inc
push
sarl
inc
addb
mov
pop
push
xchg
adc
dec
and
add
dec
xchg
cmc
pop
les
into
fstl
daa
shl
enter
int
ds
pusha
lret
jmp
cmp
ss
or
mov
push
shll
nop
and
jne
or
push
out
adc
nop
aas
into
dec
inc
cmpl
jae
dec
jo
cmpsb
pop
push
xor
pushf
pushf
dec
jge
add
lret
out
in
sbb
iret
mov
jno
xor
inc
sub
clc
je
xlat
fisubrl
out
pop
cwtl
dec
dec
stc
mov
mov
xorl
les
mov
adc
dec
ffree
mov
push
mov
daa
add
push
dec
movsb
sbb
xchg
dec
jo
or
std
fisttpl
cmpsb
lods
dec
scas
repz
dec
out
fwait
mov
rorb
popf
lret
insl
int
or
jl
mov
jns
pop
rcl
push
inc
ret
pop
outsl
popl
ret
pop
mov
mov
test
push
sbb
xchg
daa
psrlq
sarl
and
push
or
jo
lock
push
aad
push
and
ficoms
fidivrs
pusha
cmpsb
pop
mov
daa
inc
scas
dec
cmp
jp
shll
lahf
and
mov
and
iret
out
in
xor
in
out
mov
in
mov
out
xor
arpl
pop
mov
shlb
gs
jp
out
xchg
add
lret
mov
inc
or
xorb
add
inc
int
icebp
cmp
dec
mov
adc
xor
xchg
add
mov
scas
mov
lcall
in
lock
gs
mov
pop
ret
and
lock
push
add
lret
dec
loop
inc
sub
xchg
push
sub
pop
popf
cmp
les
sub
pop
jae
xchg
xchg
push
icebp
inc
pop
pop
xchg
mov
push
rorb
stos
in
lahf
inc
mov
mov
ret
testb
push
insb
add
lds
les
lahf
adc
or
andl
bnd
data16
inc
outsl
xchg
std
decl
mov
outsl
fadds
addr16
pop
xchg
aad
fcoms
cwtl
add
push
clc
cmp
arpl
sub
push
orb
loopne
mov
cmp
or
add
inc
idivl
dec
insl
dec
lea
and
mov
test
movsb
xor
lcall
sbb
mov
outsb
cmpsb
mov
pop
mov
add
test
loopne
push
dec
sbb
sbb
stos
stos
int
jns
rclb
sti
js
push
xchg
cltd
dec
arpl
adc
mov
push
xchg
repz
pop
lret
dec
mov
in
pop
icebp
cmp
lret
es
iret
das
sub
adc
outsb
xchg
add
mov
sbb
out
fs
leave
jmp
add
leave
push
pop
pop
sahf
or
scas
push
and
push
cmc
std
and
add
mov
jb
xchg
rorl
movsb
sbbl
cmp
mov
test
loope
adc
inc
es
js
dec
mov
xchg
lret
mov
sub
or
lock
mov
imul
aad
lods
jp
int3
cltd
dec
rcpps
xor
jl
in
lahf
es
out
push
out
adc
aam
fldenv
shr
cmp
out
or
pop
lods
mov
sbb
xchg
xor
rcl
push
pop
out
test
xor
popa
pop
test
fimuls
rorb
lods
sbb
lods
cmp
cmp
or
mov
jbe
in
jbe
mov
or
mov
jg
sbb
jle
ffree
adc
xchg
cmp
rcll
xor
add
mov
push
fcoml
inc
test
mov
sbb
loopne
outsb
sbb
rol
pop
gs
sub
mov
dec
push
jp
push
cwtl
lock
pop
xchg
bound
jmp
mov
leave
bound
mov
mov
cmp
cmp
cwtl
aas
movsb
mov
sub
lret
lcall
pusha
int
rcrb
mov
stos
mov
stos
sub
pop
xchg
xor
add
aam
cmpsb
cld
jo
in
inc
into
inc
es
cmp
stos
jno
fiaddl
xor
mov
jns
ss
xor
adc
cwtl
lret
cld
daa
mov
and
std
leave
loope
mov
fidivs
mov
cmp
sub
dec
cmp
sbb
aaa
add
push
mov
mov
movsb
xchg
push
dec
pop
mov
cld
lea
mov
mov
aad
leave
lahf
test
ret
in
pop
pusha
mov
movsl
add
rcll
shll
lea
ret
sbb
inc
sbb
mov
outsl
ja
mov
ss
push
aam
shrl
or
insl
in
mov
mov
sbb
inc
int
fnstcw
xor
testb
mov
sbb
pop
orb
in
sbb
mov
popl
sub
mov
pushf
cltd
hlt
adc
aam
dec
repnz
mov
add
push
and
add
inc
pop
lahf
rcr
mov
jecxz
xchg
ret
mov
mov
pusha
cltd
xor
sub
pop
fadd
jbe
adc
cmp
jno
shlb
es
stos
xlat
sub
jmp
sahf
test
fisubl
xchg
jl
pop
fwait
mov
in
push
mov
outsb
sub
push
dec
or
jns
loope
rcrl
adc
sub
dec
mov
stos
inc
adc
divb
mov
push
std
lods
fnsave
jge
or
sbb
incl
aad
repz
in
mov
lds
clc
rcll
mov
adc
or
fwait
cmp
lahf
adc
add
sub
in
dec
aam
pushf
addr16
mov
cmp
add
cmpsb
sbb
js
jle
es
mov
adc
ja
js
bound
jp
adc
fldl
ja
pop
fildl
mov
push
or
mov
repz
sbbl
adc
jp
push
xor
fnstsw
dec
dec
pop
filds
cmc
out
push
xchg
lret
mov
int
adc
mov
test
jecxz
lcall
mov
or
pop
and
mov
in
call
loop
popa
mov
jbe
sbb
mov
push
xchg
adc
nop
insb
cmp
pop
std
xchg
lods
movsb
mov
out
mov
cmp
push
jne
test
inc
xchg
push
jo
jmp
mov
out
xor
cmp
sti
das
inc
popa
xor
adc
int3
popf
out
jo
je
outsl
andb
popf
jl
icebp
xor
or
mov
hlt
inc
clc
mov
cld
push
mov
push
adc
and
stos
xchg
xchg
imul
push
sahf
int
inc
add
xchg
mov
push
in
imul
fnstsw
loopne
xchg
push
repnz
add
xchg
cli
sub
out
pushf
loopne
jae
scas
pop
dec
sbb
shlb
adc
sub
or
out
jecxz
or
into
pop
popa
mov
mov
xchg
mov
push
add
icebp
les
sbb
fdivrs
insb
lcall
pop
xorb
xchg
pusha
xchg
cmp
movsb
mov
mov
daa
pop
in
jo
jmp
ror
cld
in
jo
jb
mov
mov
iret
loopne
setbe
dec
adc
or
or
cs
call
jmp
jmp
xchg
mov
dec
cmp
inc
sub
aad
test
in
push
nop
fneni(8087
xor
in
mov
dec
mov
leave
fdivs
int3
jmp
cmpsl
sub
test
pop
push
ret
or
add
inc
fldl2e
out
icebp
sub
mov
idivb
ficomps
or
cwtl
push
int
add
in
lret
enter
inc
dec
jecxz
mov
dec
mov
call
cltd
outsl
hlt
pop
movsb
aam
fs
push
cmp
arpl
cwtl
aas
dec
add
arpl
cmc
mov
fidivrl
mov
inc
xrelease
fcomp
enter
iret
cmp
fstl
and
xchg
jg
call
repz
cli
xchg
cmp
push
mov
idivl
push
push
or
addps
andb
fcoml
pop
xchg
mov
popa
addr16
mov
adc
popa
test
sbb
lock
je
pop
jmp
in
push
push
mulb
cld
hlt
fisubl
movl
push
lea
or
pop
jae
clc
pop
sbb
fs
cmc
jmp
pop
shlb
lds
jmp
add
and
jae
ret
jecxz
xor
repnz
adc
testl
cmp
movsl
js
fadds
mov
fistpll
icebp
pop
push
scas
inc
in
dec
cmp
ljmp
dec
sbb
xorl
fiadds
out
pop
push
mov
xchg
jo
in
and
or
mov
lret
stos
jle
leave
rcr
jecxz
popa
mov
int3
fists
test
jle
mov
adc
lods
xchg
add
pop
push
xor
push
mov
test
pop
xlat
call
mov
mov
mov
std
xor
mov
stc
push
pop
ret
jmp
mov
lea
sub
push
add
lods
sti
push
pop
lahf
jbe
jle
push
shll
xor
subb
test
xor
int3
mov
ljmp
fstl
mov
pop
dec
mov
xor
pop
adc
jns
pop
add
call
adc
aaa
cwtl
adc
add
loope
adc
sarb
loopne
lea
and
mov
and
aas
std
pusha
js
jmp
loop
xchg
in
int3
push
popf
jmp
mov
push
loope
sbb
sbb
cmp
std
or
in
or
jp
jecxz
adc
lcall
ljmp
jp
xor
gs
cmp
push
arpl
jg
insb
cs
sbb
cld
add
stc
or
or
push
mov
jle
jns
push
frstor
dec
xor
je
cwtl
cmp
dec
jne
mov
aaa
add
and
pop
mov
dec
es
mov
dec
mov
adc
loop
and
or
and
gs
jmp
xchg
daa
and
pusha
ja
xchg
test
icebp
insl
pop
xchg
pop
mov
sub
ljmp
cmp
lds
nop
and
addb
sub
sbb
rclb
jl
xchg
leave
mov
or
dec
ljmp
out
mov
pushf
mov
outsl
inc
jne
mov
in
leave
test
ret
sar
int3
mov
fmuls
sti
or
inc
adcb
stc
pop
add
push
jae
fs
iret
sub
cli
notb
mov
or
bound
cmp
cltd
out
push
ds
out
pop
cwtl
insl
imul
sbb
in
xchg
data16
sub
jne
inc
push
rcr
push
xor
mov
lods
in
icebp
lahf
mov
add
movsl
mov
popl
repz
rclb
adc
fistps
sbb
lahf
rol
pusha
cmc
and
or
cmp
les
jg
ss
jp
std
les
ficoml
out
sub
push
data16
imul
jmp
mov
jno
and
sub
mov
repz
enter
int
xor
cs
xor
bnd
and
inc
mov
cmpsl
mov
mov
dec
xchg
sbb
inc
fsubr
add
add
mov
shrl
sbb
and
int3
jecxz
or
or
popf
scas
push
or
jmp
dec
adc
or
bound
mov
je
jnp
push
inc
lret
mov
jbe
bound
sub
lcall
and
in
adc
sbb
dec
dec
cmc
jecxz
pop
cwtl
xor
fs
test
data16
ret
xchg
sub
data16
mov
scas
and
aaa
sub
test
add
dec
orl
xor
sub
push
pop
push
jae
dec
push
adc
imul
gs
lods
stos
xchg
mov
push
rclb
xchg
or
add
sbb
jb
push
dec
dec
add
fisubrs
ficoms
xchg
mov
dec
jo
mov
or
out
inc
or
pop
shlb
dec
mov
cmpsl
sbb
faddl
adc
lret
pop
inc
adc
idivl
ret
cmp
and
adc
jnp
dec
out
mov
pop
fstl
xchg
mov
mov
sub
and
jo
aad
pop
sbb
stos
xlat
adc
roll
mov
sub
ljmp
lret
xor
adc
pop
ret
push
push
sti
xor
adc
jb
mov
or
add
insl
sbb
pop
dec
cmpsl
repz
and
out
and
cmp
loope
divb
pop
sti
leave
and
cld
icebp
dec
xchg
ret
ficoms
inc
adc
test
stos
inc
sub
mov
in
psubb
cld
or
insl
das
out
sti
mov
mov
mov
jmp
adc
ljmp
dec
cmp
jae
das
cld
lods
call
js
loope
jbe
dec
pop
lret
popa
imul
sahf
add
xchg
and
sub
imul
mov
inc
aad
cmpsl
in
jae
sti
adc
fs
cwtl
imul
adc
lods
push
icebp
lods
repnz
ljmp
les
push
xchg
subb
daa
cmp
lcall
xchg
or
outsl
roll
cmp
or
or
cmc
rol
jge
or
inc
mov
enter
adc
sub
mov
testl
pop
mov
jp
cmpsb
pop
mov
xlat
test
aam
mov
pop
inc
sub
enter
xor
ficomps
popf
mov
sti
adc
dec
out
call
popa
adc
xlat
add
ss
push
or
pop
push
test
cltd
lahf
mov
loope
lret
ret
js
or
push
int
lea
fnstcw
repnz
inc
fwait
add
sbb
popa
ja
cs
adc
scas
imul
mov
pop
sbb
loop
or
movsl
xor
enter
int
cwtl
test
hlt
sbbb
popf
push
repnz
jbe
inc
repnz
mov
dec
das
adc
popf
out
movsl
lods
mov
mov
fwait
aam
sub
adcb
lcall
in
in
pop
jb
jbe
addl
fisttps
jecxz
sbb
mov
cmp
std
lret
cmpsb
fs
imul
add
int3
addr16
sti
jb
lds
arpl
push
xchg
push
rolb
mov
adc
addr16
jmp
repz
pusha
inc
icebp
mov
ss
je
inc
cwtl
pop
fs
jp
pop
and
hlt
jno
ljmp
rorb
lods
sarb
bnd
fadds
mov
hlt
ds
mov
test
inc
inc
movsl
hlt
fistl
aas
out
add
nop
pop
movsb
jle
in
int
inc
mov
movsb
icebp
cli
faddp
inc
movsl
clc
int
into
mov
mov
aam
xorl
mov
inc
lods
or
sub
lcall
mov
or
ljmp
dec
loope
ss
push
and
jnp
fisubrl
push
int
lods
fmull
push
out
mov
fnsave
fistpll
fsts
in
jb
mov
gs
ds
add
out
xor
cmc
mov
jo
and
iret
iret
adc
icebp
inc
mov
dec
lcall
inc
push
add
rcll
mov
xchg
imul
iret
mov
pop
stos
adcl
or
mov
sti
pop
xlat
pushf
cs
xchg
sub
adc
cmp
test
add
cmp
test
jl
xchg
cmp
dec
outsl
loop
jp
movsl
push
fisttpl
ss
ret
in
scas
pop
mov
pop
test
inc
pop
mov
aam
pop
idivl
mov
xor
pop
cmovb
add
insb
inc
cmpsb
js
mov
jp
push
push
pop
mov
dec
pop
and
ret
ret
jge
xor
sti
in
push
in
lea
or
jmp
inc
mov
dec
movsl
jmp
add
in
ja
cltd
xorb
or
mov
or
xchg
addr16
cmp
xchg
sub
fsubrs
in
das
sbb
or
jnp
and
fidivrs
dec
or
scas
aad
lods
popa
pop
inc
dec
cmpsb
gs
test
not
pop
lods
xor
pop
mov
pop
insl
cmp
stos
cld
inc
mov
add
stos
push
lods
push
scas
outsl
cmp
mov
mov
icebp
sbb
dec
lcall
cmp
xchg
addr16
ret
ficoms
ja
sub
or
lds
cmp
sbb
inc
cmc
jmp
movsl
push
push
pop
cmp
mov
out
jp
les
popa
and
lcall
test
xchg
xchg
scas
jbe
dec
rorb
cwtl
jnp
pop
dec
fstpl
sbb
dec
int
pop
xor
mov
fstpt
mov
sub
imul
and
or
bound
shll
or
daa
pop
sub
fwait
adc
int
popf
lcall
dec
xchg
fwait
cmc
jg
inc
ja
icebp
test
push
ss
scas
mov
push
movsl
xor
out
xchg
and
loope
int3
sbb
and
cmpsb
dec
jb
aaa
mov
mov
clc
cmp
fstpt
adc
mov
inc
push
inc
enter
jmp
std
lahf
jge
jb
jle
test
push
lds
js
inc
xor
sti
scas
xor
sbb
loopne
bound
and
lahf
shrb
je
xor
cld
xlat
or
mov
dec
pushl
or
popa
or
sar
loopne
jo
xor
loope
addr16
cld
sbb
shrb
dec
cmp
lods
lock
inc
jne
mov
sbb
iret
cwtl
sahf
mov
mov
jno
cld
daa
pop
xor
iret
sub
inc
shrl
push
adc
mov
loopne
inc
fisubrl
jl
mov
addr16
xor
aad
sarl
ret
fildl
fists
dec
aad
test
jecxz,pt
out
imul
cmp
dec
xor
cmc
xor
aam
into
popa
push
mov
push
jne
fisubrs
push
mov
out
mov
mov
ss
jp
mov
jae
lock
push
and
xchg
inc
jno
imul
call
out
cmp
or
mov
mov
xchg
and
sub
dec
iret
pop
outsl
and
cmpsl
les
mov
or
xor
aam
and
xchg
mov
adc
dec
mov
icebp
insl
mov
fsub
sub
push
testb
xchg
inc
xor
into
fimuls
test
or
xchg
jle
pop
xor
cmp
jp
sbb
lock
xchg
mov
pop
inc
sub
fildl
xor
insl
bound
sub
cmp
imul
in
adc
ficoml
mov
xor
push
vmread
push
fbld
aaa
push
jmp
into
movsl
push
and
das
fnstsw
mov
loop
jno
cmc
push
or
fists
jmp
pushf
and
sub
mov
dec
sub
or
dec
out
pop
call
aas
cltd
movsb
xchg
jg
outsb
stos
es
lods
enter
xchg
and
aam
or
cmp
mov
outsb
mov
or
daa
std
and
cmp
cmp
xor
inc
push
ret
dec
push
jns
xor
cmpsl
dec
leave
mov
repz
int3
fnsave
cmp
shrb
les
sub
jns
dec
sub
sub
out
cmc
xor
call
rclb
in
mov
fs
mov
pop
jp
mov
out
ja
pop
test
pop
ja
mov
cmc
dec
and
out
lods
in
loopne
loope
shrb
mov
dec
in
jmp
xchg
xor
add
aas
arpl
mov
popf
daa
pop
or
fistl
pop
sbb
jge
daa
js
mov
test
adc
pop
ja
clc
inc
lahf
add
lcall
add
jne
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
jmp
mov
loope
addb
es
mov
addl
push
add
in
rcrb
push
pop
jp
lret
mov
jle
bound
push
jp
jne
sti
adc
pusha
fwait
shlb
ds
inc
mul
dec
or
lds
pop
stos
dec
sbb
lods
fidivs
ja
aas
test
push
js
jo
mov
enter
cmpsb
sub
int3
and
mov
shll
shll
jne
add
int3
dec
inc
sbb
aaa
ficoms
lods
js
sub
push
ret
adc
and
fdivrl
mov
adc
cwtl
rcl
fidivl
sbb
hlt
test
inc
sti
inc
test
adc
xchg
lahf
imul
inc
ror
scas
xchg
push
pop
out
and
fcmovbe
pop
aam
stos
adc
pop
and
in
jne
ror
std
push
pop
or
push
pop
sub
add
dec
js
sub
mov
ret
dec
popa
mov
enter
int
inc
dec
push
sbb
out
jg
fists
dec
popf
loop
test
outsb
push
xchg
popa
call
aad
aam
movl
mov
out
hlt
js
add
and
xlat
bound
movsb
and
test
add
bound
fwait
xchg
imul
adc
jle
clc
movsl
jb
in
lret
std
pop
inc
jp
test
insl
dec
lret
push
loop
fstp
jbe
dec
inc
ja
sub
dec
dec
ss
mov
dec
lret
sbb
pop
xor
icebp
push
xchg
push
iret
pop
mov
out
data16
cmp
out
mov
mov
inc
jbe
ja
dec
sub
mov
out
xchg
mov
pop
rorb
xor
outsl
mov
mov
ret
adc
ret
inc
jo
push
subb
movsb
xor
ja
mov
dec
movsb
fcoml
cmp
cli
call
aaa
mov
arpl
jno
sbb
aaa
leave
xchg
or
ljmp
add
xchg
stos
data16
test
cmp
xchg
mov
test
sub
mov
ljmp
lahf
xchg
test
sub
mov
ss
scas
mov
xchg
das
daa
adc
dec
aad
ljmp
bnd
cld
in
mov
mov
iret
into
js
and
cltd
inc
sub
mov
dec
and
movsb
ss
pminub
xchg
push
add
jl
mov
inc
jmp
idivb
sbb
lcall
jns
mov
add
xchg
inc
sub
mov
scas
jo
sbb
cmpsl
fs
out
mov
mov
or
pop
js
daa
mov
mov
and
and
dec
es
or
mov
and
mov
push
fidivrs
pop
popf
lret
push
push
sbb
jg
aad
rcl
bound
cmpsb
fcomip
push
sarb
pusha
repnz
sbbl
pop
jge
in
and
mov
movsb
cltd
push
ja
pushf
orl
das
jno
mov
or
xor
aam
ret
shlb
es
pop
push
insb
movsl
sbb
in
dec
xchg
add
mov
push
dec
pop
pop
add
sbb
cmp
xchg
ljmp
ss
jecxz
aaa
mov
push
and
and
xchg
cmp
bound
popf
das
dec
cmp
mov
xchg
jecxz
jle
fsts
xchg
pusha
test
pop
out
inc
pop
das
or
push
dec
ficoml
insb
mov
jecxz
xor
pop
es
dec
cmpb
js
sbbl
mov
lcall
sbb
insl
sub
sbb
out
js
insb
jge
lock
inc
in
or
mov
jae
loopne
nop
setne
sbb
xchg
js
xchg
mov
jle
mov
repz
cmp
loopne
fmul
mov
sbbb
out
lahf
jno
xchg
push
jbe
or
lods
mov
mov
mov
sub
divb
cmp
aad
mov
inc
adc
insl
movsl
and
loop
ss
jmp
das
mov
mov
lods
xor
adc
dec
sub
sbb
pop
xlat
es
out
sbb
stos
xchg
mov
shrl
or
ljmp
test
cmc
repz
dec
cmp
sub
loopne
xchg
leave
sbb
push
push
dec
push
pop
dec
dec
mov
enter
out
xor
xchg
aas
imul
and
mov
insl
push
pop
cmpsb
lret
mov
pop
sbb
jmp
jl
bound
pusha
popf
mov
sub
fadds
or
jne
pop
jle
in
out
add
lahf
imul
orl
daa
ljmp
and
test
push
in
inc
push
or
test
cld
pusha
mov
andb
je
shl
vdivsd
loope
mov
int3
dec
clc
std
imull
cmc
mov
arpl
loop
orl
loop
jl
and
mov
mov
clc
int
enter
sbb
sbb
jge
popf
mov
mov
arpl
adc
inc
push
xor
fwait
ja
ret
jo
xchg
sbb
shr
rcrb
mov
push
mov
lahf
mov
inc
outsl
and
ret
cmc
fsubrl
ljmp
pop
dec
pop
sub
outsl
iret
sub
addr16
add
and
outsb
mov
sti
fldcw
adc
aas
lret
or
mov
xchg
sbb
in
xorl
jge
add
negb
add
add
scas
cwtl
mov
pop
inc
ljmp
or
lods
mov
adc
fstpt
pop
cmp
mov
stc
decb
scas
sbbb
rcrb
sub
div
pop
imul
aaa
adc
mov
fisubrs
rcrb
sbb
int
mov
pop
mov
add
fisttps
into
push
push
sbb
insb
or
or
xor
cmp
mov
movl
cmpsb
in
lret
push
push
stos
xor
lods
insb
cwtl
out
push
jle
jl
mov
jle
inc
xor
cmp
fs
mov
fwait
arpl
mov
or
imul
xchg
jp
ds
pop
xchg
mov
rcrl
xor
test
hlt
mov
mov
mov
jne
adc
enter
fwait
test
repnz
mov
adc
pop
mov
ret
mov
adc
ja
jle
pop
jge
mov
push
xchg
stc
and
and
xchg
xlat
fwait
ja
outsl
out
cmp
push
mov
cmp
je
mov
xor
inc
das
imul
sbb
mov
mov
jae
sub
loope
inc
in
imul
push
xorl
cld
fwait
popa
stc
mov
jo
add
pop
ret
shlb
sahf
imul
pushl
and
ljmp
mov
test
js
cs
out
shrb
enter
sbb
mov
cmp
aas
les
mov
aam
xor
inc
pop
popa
insb
push
xchg
das
mov
add
loope
ficomps
testb
aad
mov
push
push
cli
imul
mov
push
mov
push
out
mov
push
imul
js
cmc
flds
imul
cld
lret
popf
out
push
sub
jb
jb
ja
outsl
pop
cmp
jp
jno
int
cmp
ja
arpl
cmc
pop
adc
xchg
and
jo
faddl
test
push
decb
mov
and
mov
adc
dec
push
inc
add
cmp
test
out
add
xor
push
lds
sbb
jecxz
xor
sbb
mov
xlat
repnz
lret
rcrl
sbb
dec
stc
in
pop
in
daa
mov
pop
lock
push
mov
adc
and
sub
insl
lcall
std
fldenv
pusha
js
mov
test
outsb
subb
in
jb
fsub
aaa
popf
inc
pop
sbb
sub
add
mov
mov
xor
sbb
ds
pop
mov
pusha
dec
jne
xchg
flds
pusha
bound
in
icebp
jne
dec
sub
sbb
test
cld
push
inc
add
sub
in
sahf
nop
pop
ss
cmc
lock
push
pop
sub
push
ret
xor
fnstcw
mov
lock
xor
add
mov
lcall
sbb
push
xchg
imul
arpl
push
pop
mov
and
cmp
out
jecxz
push
fsub
ret
popl
iret
jae
mov
popf
das
jo
mov
in
rcrl
adc
fwait
mov
adc
popf
fs
sbbb
test
dec
lea
cmc
outsb
push
sbb
mov
adc
sub
sbb
je
sti
scas
orb
bound
popa
pop
adc
pop
mov
shl
xchg
xchg
inc
dec
stc
jl
xchg
mov
adc
pop
out
jmp
push
aam
bound
inc
jecxz
inc
jbe
cmp
mov
mov
lahf
rcrl
add
sbb
je
std
push
push
je
xchg
jmp
xor
mov
inc
mov
stc
adc
cwtl
add
jo
fcoms
iret
stos
aam
push
int3
popa
ljmp
cli
xchg
xchg
push
popa
outsl
or
data16
in
adc
hlt
mov
out
jne
jmp
dec
insb
in
adc
scas
adc
repnz
inc
fbld
out
repz
fisubs
js
in
xchg
aas
jne
mov
aam
add
or
xchg
in
pop
xchg
loop
push
cmp
xchg
test
push
sub
insl
push
mov
sub
mov
jns
sub
dec
mov
pop
rcrl
sbb
call
aam
sbb
or
imul
xchg
icebp
sbb
mov
pop
inc
data16
scas
inc
push
std
call
bound
cs
jge
clc
xchg
xchg
pop
add
rcrb
and
jb
and
and
scas
jl
dec
xchg
mov
cltd
dec
sub
out
inc
pop
out
pusha
lods
and
adc
mov
addr16
add
inc
es
push
xor
faddl
xchg
xor
push
adc
sti
xor
aad
ljmp
pop
andb
popf
sub
ds
sub
cmp
mov
pop
mul
je
xor
push
jns
and
add
ljmp
pop
or
out
sub
daa
or
and
addr16
shlb
sti
and
out
out
lret
cmc
cmp
jl
push
inc
sbb
sub
jne
pop
xor
jbe
jne
xchg
mov
xchg
pushf
cld
pop
addr16
out
xor
cltd
sbb
mov
jge
add
loope
push
es
dec
and
andl
lcall
les
xchg
mov
adc
rcrl
fnstcw
fldl
imul
sub
add
mov
adc
mov
fnstcw
jg
dec
add
inc
mov
mov
fwait
cltd
pop
mov
es
sub
sbb
adc
es
cmp
push
hlt
inc
and
push
adc
out
arpl
dec
dec
xchg
cmpb
decl
pop
pop
imul
bound
call
cmp
lret
popa
dec
test
cwtl
out
subb
daa
jae
cmpsb
sbbl
mov
mov
shll
and
fadd
movsb
sbb
mov
gs
lret
jmp
lret
and
cmpb
fisttps
rolb
ja
xchg
inc
mov
out
mov
add
sub
xchg
addl
js
and
push
mov
out
sub
sub
cmpsl
loop
test
lea
aam
add
outsb
sbb
xchg
fcompl
sub
hlt
mov
xchg
xor
mov
xor
subb
outsl
xor
adc
fucomp
jbe
or
adc
push
mov
pop
or
in
add
sub
jmp
cmp
orb
mov
insl
dec
out
lret
lds
mov
mov
jmp
add
mov
or
jnp
fs
and
ficompl
add
lahf
stos
loop
loope
push
popf
xchg
imulb
test
push
test
mov
sbb
sbb
mov
inc
in
mov
test
sbb
pop
push
out
lcall
or
out
sbb
les
cwtl
mov
fsubl
mov
dec
push
fcmovb
sbb
jb
cmp
frstor
adc
sti
ss
fdiv
or
push
ljmp
out
and
or
cwtl
fs
dec
fsubl
pop
jl
sahf
mov
lods
sub
rcrl
or
stos
dec
xor
movsb
iret
fwait
pusha
mov
aaa
dec
adc
cs
notb
dec
in
cmp
push
cmp
aad
push
mov
repz
shlb
movsl
mov
rep
dec
enter
insb
rcrl
sbb
sub
xchg
in
mov
mov
mov
dec
cmc
sbb
pop
push
sbb
dec
mov
add
movsb
lahf
xchg
das
cmp
pop
daa
movsl
pop
pop
inc
stos
insb
pusha
inc
jle
dec
mov
add
ja
orb
xlat
int
xchg
push
ds
jp
cltd
out
dec
add
outsb
arpl
mov
lret
add
mov
bound
add
pop
int3
aad
jae
sub
xchg
cmpl
imul
and
lods
dec
or
imul
xor
push
dec
mov
cmp
cmp
xchg
into
into
mov
inc
cmp
addb
sbb
pop
test
sbb
addr16
loope
mov
pop
ds
test
pop
jp
in
lods
xor
push
icebp
jbe
icebp
mov
mov
pop
mov
pop
bound
rcrl
repnz
sbb
pusha
sub
or
mov
mov
adc
add
mov
mov
dec
cltd
addr16
out
add
pop
lahf
or
mov
mov
add
and
xor
out
pop
jmp
ret
aas
inc
or
xchg
movsb
call
inc
fisubs
and
testl
ror
or
jno
jg
out
data16
xchg
push
push
jb
sahf
int
mov
pop
xchg
mov
jne
pop
mov
jp
test
int
cli
lcall
cli
dec
pop
mov
cmpsb
pop
mov
push
or
inc
in
das
push
sbb
out
push
outsl
sub
sub
cmp
xor
mov
fwait
sbb
nop
mov
pusha
fimuls
push
lods
icebp
mov
loop
stc
or
stos
mov
push
and
push
jecxz
dec
aaa
and
andb
lock
xchg
pushf
and
sbb
mov
rol
mov
mov
push
and
adc
imulb
xor
imul
xchg
lret
jne
lea
sbb
insl
pop
ret
imul
and
mov
and
sahf
pusha
push
in
test
mov
adc
clc
rcll
sar
fcmovu
int3
int
inc
movsl
in
fstp
mov
add
loopne
in
aaa
cmp
cmp
loopne
mov
mov
ds
and
xchg
dec
xchg
add
mov
push
pextrw
and
dec
push
add
sub
xor
jae
dec
cmp
pop
xchg
les
xor
outsl
out
pop
sub
jnp
in
leave
cmp
in
inc
fnstenv
pop
mov
add
pop
sub
cmp
mov
push
loopne
inc
mov
xor
jle
jo
nop
mov
cmp
scas
mov
push
je
inc
subl
ret
cmp
gs
mov
push
jge
dec
mov
xor
cmp
rcr
shrl
sbb
lods
shlb
xchg
xchg
jg
push
add
arpl
and
dec
insb
add
icebp
pop
nop
cltd
stos
outsb
mov
mov
shll
pushf
popl
mov
jecxz
push
out
xlat
inc
lods
sbb
popa
adc
data16
push
push
sbb
nop
nop
add
sub
jl
mov
mov
xchg
sbb
nop
jae
jns
rcrb
pop
dec
jge
cmp
lret
cs
rcll
in
lahf
add
je
in
stos
aam
dec
sbb
icebp
sub
insb
es
sbbb
mov
into
push
push
pop
sarb
mov
movsb
adc
pop
lret
cmpsl
push
xor
sbb
data16
in
pusha
add
lock
lret
xchg
and
xchg
cli
cld
sbb
jle
iret
js
push
movsl
test
inc
xchg
jo
dec
pusha
repnz
pop
sbb
xchg
inc
fimull
mov
adc
jno,pt
sub
mov
orl
pop
andl
inc
jmp
imul
push
push
sarb
js
es
dec
outsl
mov
fsubrl
push
in
or
pop
pop
jno
sbb
shlb
insb
xor
lods
xchg
cmpsb
add
push
outsl
pusha
pop
mov
push
mov
lss
gs
decl
cmp
ljmp
loope
ds
lock
push
shlw
pop
sbb
mov
cmp
lds
jmp
fisttpl
repz
push
outsl
daa
fimull
inc
mulb
cmp
pop
jo
mov
repnz
and
ret
xlat
jp
fisttps
out
pop
test
pop
outsb
sbb
sahf
push
scas
imul
push
cmp
inc
js
aad
xchg
jno
jecxz
ss
lds
jns
fsubrs
loop
push
ds
or
inc
pop
je
insl
cmp
call
add
pop
popf
jne
xchg
imul
push
push
mov
and
addr16
dec
out
test
popa
xor
adc
inc
roll
or
lods
xlat
dec
cmp
into
fadd
xchg
std
xor
les
xor
push
push
loopne
iret
xchg
rolb
movsl
or
out
cmpsb
or
jno
mov
mov
and
jmp
adc
shr
cmc
leave
add
mov
daa
repz
loopne
xchg
sbb
fbstp
scas
inc
jg
add
fadd
jmp
popf
enter
das
sub
lds
jbe
pop
inc
popf
jbe
popf
lods
out
sub
mov
addr16
pop
jle
popf
xor
jge
shll
lds
leave
scas
mov
adc
bound
test
nop
add
mov
or
daa
dec
and
sub
mov
mov
popf
lret
subb
and
ret
mulb
pop
push
std
jne
dec
lods
iret
cmp
mov
inc
rcrl
inc
and
jne
outsb
call
add
mov
fildl
out
add
xor
std
ss
mov
push
lock
cmpsl
mov
imul
inc
pop
pushf
add
fsubrs
mov
sub
lea
sub
jmp
adc
jl
addr16
pushf
jb
pop
outsb
xorb
dec
lret
cmpsl
jmp
adc
fimull
rcrb
pop
fisubs
cmp
jb
inc
das
mov
sub
mov
push
clc
fs
lock
movsb
and
add
inc
add
loope
lahf
jg
notl
idivb
and
mov
inc
enter
inc
mov
jmp
js
stos
pushf
cmp
mov
pusha
repnz
xor
rclb
fsubr
int3
mov
mov
inc
call
inc
dec
adc
or
loop
mov
rorl
add
mov
mov
or
cs
aaa
imull
mov
sahf
inc
in
call
pop
gs
xchg
jg
pop
scas
cmc
sbb
xor
xchg
pop
jp
push
cs
cmc
add
jmp
stos
push
test
test
jecxz
inc
icebp
nop
pop
xchg
mov
int
lds
je
mov
mov
int3
adc
and
pop
adc
mov
cs
shlb
out
mov
mov
jg
xchg
loope
jo
sub
rcll
push
cmp
add
stos
lret
cld
dec
push
mov
adc
jno
mov
pop
inc
dec
rol
ret
cmp
adc
lods
cld
add
testb
push
jne
mov
cmp
addr16
lock
lock
dec
xchg
push
push
test
or
mov
adc
lcall
mov
sbb
dec
push
fld
adc
rcrl
std
jmp
fwait
dec
mov
and
xchg
xchg
add
or
icebp
repnz
or
lcall
aaa
sub
jp
ret
ret
and
ljmp
add
mov
push
jmp
mov
pop
mov
icebp
mov
mov
ds
pushf
dec
sbb
lcall
lcall
and
imul
push
and
and
xor
push
outsl
push
lret
xchg
jle
and
cmpsl
adc
add
mov
mov
test
or
in
cmp
pushf
xchg
hlt
clc
jns
fsubs
out
inc
push
sub
jb
das
in
jb
sub
popa
xchg
sub
push
push
pushf
je
mov
fs
cmc
nop
aaa
xor
pop
fwait
adc
push
xchg
cmp
inc
test
or
mov
jne
jnp
mov
xor
push
shlb
imul
cltd
pop
lret
add
xor
inc
lds
leave
iret
push
jb
popf
and
jno
mulb
cltd
cmp
inc
xchg
outsl
and
mov
orb
outsl
leave
imul
sbb
leave
stos
test
pop
cld
pop
iret
mov
aad
int3
inc
adc
jl
cmp
add
mov
sub
xchg
pop
pushf
pop
fisubl
sbb
popf
ljmp
in
shll
pusha
mov
add
aas
push
fwait
pop
mov
adc
push
rcll
inc
dec
push
lahf
insl
or
fadd
popa
mov
lods
mov
call
or
leave
test
push
push
pop
fiaddl
or
insb
popa
adc
lods
push
test
jbe
fimull
ja
js
add
sub
bound
cmp
loop
jne
xchg
dec
ret
cmpb
enter
ret
push
xor
loopne
cli
add
daa
lds
push
mov
cltd
fidivl
xchg
cmc
loop
jbe
pop
xchg
sbb
mov
inc
cli
into
cld
adc
loope
mov
daa
leave
test
loope
ret
movsb
jb
lahf
stc
push
insl
pop
ret
dec
pop
mov
xchg
mov
aas
das
sbb
jb
mov
or
out
jge
mov
sti
scas
fwait
cwtl
mov
inc
cmpsl
mov
in
jns
xchg
and
mov
xchg
inc
je
inc
test
arpl
jns
pop
sti
jge
sub
fistpll
adc
notl
lock
lods
insb
xor
cli
mov
cmp
jmp
arpl
adc
test
jmp
mov
push
mov
outsl
dec
sbb
xchg
jle
cs
aad
xchg
aaa
pop
shlb
inc
out
test
test
xchg
and
or
sar
es
mov
jp
pop
pop
mov
pop
mov
push
or
mov
hlt
lcall
mov
pushf
jp
call
add
outsb
insl
pop
mov
or
fldcw
in
in
mov
mov
cmp
movsb
or
into
push
adc
mov
ret
in
dec
ja
mov
add
fdiv
scas
xchg
mov
pop
push
and
xchg
add
ret
jae
mov
xor
cmp
fisubs
test
loop
add
cwtl
std
fistps
loopne
jmp
push
and
mov
pusha
xchg
jmp
int
push
push
into
xchg
mov
cmc
mov
add
cmp
mov
mov
mov
stc
xchg
sti
mov
in
fidivl
push
inc
push
or
jle
mov
sub
and
jae
rol
jbe
rcrb
xchg
cvttps2pi
inc
leave
mov
dec
mov
js
int
push
mov
decl
mov
icebp
jnp
cmp
sub
push
xchg
dec
cmp
jb
pop
loop
push
mov
popa
inc
cmp
les
add
fwait
mov
inc
hlt
gs
jp
push
xor
test
cli
into
sbb
xor
xchg
xor
mov
push
std
shll
mov
mov
subb
scas
stos
sti
push
fs
js
ds
lret
je
or
les
cli
mov
popa
out
cmp
mov
bound
cld
imul
xchg
repz
out
xchg
sahf
cmpsb
push
add
jo
rolb
bound
testb
lds
inc
in
je
loope
notl
sarb
inc
xor
ficompl
or
repz
push
orb
adc
sub
gs
out
jnp
adc
push
fiaddl
sub
and
clc
mov
mov
add
sub
mov
insl
in
hlt
repz
dec
rorl
xchg
xor
and
insl
inc
mov
out
popf
adc
jno
std
stos
je
mov
jp
jge
and
push
mov
xchg
fwait
pop
sub
adc
push
inc
rolb
fstl
sbb
sbb
cmp
push
mov
in
iret
adcl
dec
mov
negl
fmull
pop
movsb
out
jle
mov
daa
xchg
pop
fldlg2
inc
mov
lds
fdiv
adc
lock
cmpsb
dec
dec
lods
add
pop
jbe
or
outsb
incl
mov
jbe
addr16
gs
enter
out
outsl
scas
fwait
daa
jae
push
adc
lcall
xlat
sub
leave
dec
pushf
int3
mov
call
loope
into
stos
mov
sub
pop
std
push
push
mul
popa
mov
lods
mov
push
sti
imul
cltd
mov
xchg
shrl
cmc
ficomps
lret
hlt
sub
lahf
stc
cmpsb
pop
cs
sbbl
jle
test
mov
xchg
pop
mov
mov
ds
loop
call
mov
mov
mov
call
xchg
add
std
or
dec
xor
daa
xchg
dec
push
lods
jnp
xor
jo
mov
add
aam
pop
fcomi
xlat
test
push
push
mov
call
popf
shrb
mov
inc
and
mov
mov
adc
das
xor
jp
outsb
jmp
inc
mov
into
and
test
loopne
pop
xchg
add
jge
pusha
sbb
cmp
loop
int
ja
add
popl
rcrb
lea
insb
xchg
sub
daa
fidivl
sarb
add
sub
in
aas
addl
lahf
xor
push
add
out
insb
cmp
adc
scas
jns
mov
xor
rcll
or
pop
push
ret
jecxz
dec
mov
adc
or
das
aaa
lods
push
into
dec
filds
pushf
dec
add
xchg
dec
jmp
jg
cmp
push
adc
cwtl
lods
stos
repz
mov
xchg
and
lahf
push
mov
xchg
mov
dec
inc
flds
inc
test
test
ret
loope
pop
cmp
pop
and
icebp
imul
test
loopne
mov
sub
sub
mov
cmp
sub
call
ljmp
mov
ffree
sarb
sbb
es
bound
mov
cmp
sbb
gs
sub
mov
hlt
fistps
xor
shll
in
xchg
fisttpl
sbb
adc
out
test
xor
outsb
sar
aas
loopne
mov
enter
enter
jne
xor
jmp
movsl
push
add
mov
mov
in
push
imull
xor
insb
add
mov
ja
cmpsl
fidivl
fadds
fdivs
les
aam
push
insl
push
fldenv
adc
add
or
adc
sbb
cmp
push
cmp
jnp
xor
mov
lret
sbb
cmp
aad
fs
stos
add
inc
dec
and
pop
cli
es
cmpsl
pop
loope
insl
adc
jge
xor
pop
sub
add
punpcklbw
mov
jl
fcmovu
sub
jae
mov
popa
movsl
pop
jae
repz
cs
pop
lods
sahf
scas
push
ljmp
gs
mov
test
cmp
stos
jo
dec
daa
fwait
pop
jo
sub
imul
inc
jecxz
or
pop
popf
loop
decb
add
push
jae
sub
push
and
push
xor
lock
repnz
cmp
mov
sub
or
inc
lcall
inc
or
jg
shrl
mov
lods
fidivl
lea
mov
jmp
jg
jg
xchg
xor
gs
popa
iret
lret
cli
inc
push
cmp
mov
inc
and
mov
ret
loope
jmp
sbb
cmc
repnz
adc
in
add
aad
or
dec
imul
out
pushf
bound
arpl
inc
mov
daa
or
lret
pop
adc
repz
pusha
mov
jns
mov
mov
test
pop
cmc
rcrb
cmc
xchg
ret
cmp
ror
mov
fldt
out
adc
ret
jle
rolb
pop
xchg
enter
xchg
jo
pop
xor
repz
adc
sti
mov
gs
or
lahf
call
inc
in
adc
mov
xchg
adc
mov
adc
and
dec
xlat
lock
push
loope
xor
sbb
stos
sub
sbb
inc
inc
jmp
push
mov
mov
mov
xchg
push
js
dec
cmp
jg
jge
lret
shrb
ja
in
rcl
xchg
ss
or
dec
dec
data16
adc
inc
mov
imul
cmpsb
sub
jnp
movsb
jb
ljmp
xchg
enter
xor
and
mov
xchg
ret
clc
lock
into
repnz
lret
cmp
sbb
js
inc
aam
loop
out
push
call
rorb
adc
js
push
sub
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
mov
adc
mov
xor
subl
add
mov
movzbl
sub
mov
mov
xor
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
add
mov
adcl
xor
mov
adcl
add
movzwl
sub
mov
movb
sbb
lea
mov
mov
sbbl
mov
xor
xorl
inc
andl
mov
add
movl
addl
push
movl
mov
push
mov
mov
sub
or
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
addl
add
movl
jmp
mov
addl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbbl
add
addl
movzwl
xorl
mov
sbb
mov
movzwl
orl
xor
add
movzwl
mov
mov
movl
inc
mov
mov
movl
cmp
movl
jne
or
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
mov
sub
xor
and
add
adcl
mov
mov
xor
add
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
xor
xor
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
movl
neg
movl
movl
mov
mov
adcl
mov
xor
xor
add
mov
mov
mov
je
mov
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
adcl
xor
sub
subl
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
or
mov
xorl
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
call
mov
dec
mov
jmp
mov
add
subl
imul
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
add
subl
or
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jb
mov
sbbl
mov
mov
andl
add
addl
xor
mov
sbb
mov
add
mov
movl
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
call
jmp
mov
mov
adcl
lea
adcl
mov
mov
neg
mov
sub
add
mov
mov
mov
and
mov
xor
movl
add
jne
jmp
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
sub
xor
xor
sub
mov
subl
mov
mov
movl
xor
andl
xor
sub
orl
sub
xorl
xor
movl
mov
mov
movl
mov
jmp
andl
xor
or
inc
mov
cmpl
jge
jmp
push
pushl
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
adcl
xor
addl
xor
sbbl
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
inc
arpl
and
xchg
sahf
pushf
ja
jnp
inc
jmp
cmp
movsl
adcl
inc
push
iret
jmp
mov
xchg
out
movsl
adc
aad
xchg
xor
cmp
cmc
and
lea
sub
add
mov
add
shll
sbb
lds
outsl
dec
popa
pop
mov
sub
mov
loopne
sub
out
mov
in
dec
cmp
pushf
push
sbb
sbb
sub
jnp
xchg
mov
sbb
sbb
test
pop
lods
xchg
idiv
mov
xchg
das
nop
mov
pop
or
loop
stos
xchg
enter
mov
mov
lret
shrb
mov
push
mov
enter
inc
xchg
jg
fsubs
mov
js
movsl
test
movsb
sbb
insb
sub
jnp
mov
xchg
mov
addr16
scas
out
pcmpeqw
xchg
shr
ja
xor
xlat
dec
jmp
or
std
adc
lods
mov
xor
aaa
mov
sub
lahf
bound
pop
stos
inc
pop
push
cwtl
or
imul
call
ljmp
insl
adc
xchg
jnp
pop
jne
jo
mov
jge
inc
loopne
dec
jnp
les
stos
repnz
push
divl
or
les
sbb
and
test
mov
insl
ror
xorl
mov
rorl
adc
mov
dec
xor
paddb
les
jb
jb
fwait
sub
clc
pop
lods
in
xchg
sbb
dec
outsb
nop
mov
lock
shlb
cmp
xlat
out
pop
adcl
pushf
loopne
call
cmp
mov
mov
jg
hlt
inc
daa
xlat
test
stos
stc
xchg
jnp
mov
jge
cmp
pop
jle
popf
insl
cltd
pop
arpl
data16
push
orl
inc
xchg
pop
decb
iret
and
inc
lret
add
or
jp
iret
jnp
mov
insl
fstpt
pusha
aaa
xor
push
push
jge
loop
ficoms
mov
xor
test
int3
leave
add
cmp
push
lock
jmp
add
mov
lods
aad
mov
mov
sbb
mov
shll
xchg
lds
mov
pop
xchg
insb
sub
lcall
test
fsubrl
push
rclb
jg
es
psubb
fimuls
pop
pop
popa
cmp
sub
xor
fstpl
mov
xor
lods
push
cwtl
inc
xlat
leave
pop
shlb
sub
mulb
loope
fucomp
xor
mov
pushf
dec
mov
call
inc
xchg
xchg
pop
adcb
mov
shl
loope
es
add
es
and
xor
and
fwait
fs
or
dec
xchg
inc
mov
mov
gs
cmc
ret
bndstx
rcll
push
and
cmc
dec
sbb
or
ss
xchg
sahf
aad
cwtl
push
std
rcr
jp
add
pop
insl
inc
loopne
mov
jg
jmp
jp
fs
cmp
lret
sahf
leave
or
push
hlt
shll
clc
stos
dec
xlat
fistps
push
inc
insl
sub
mov
add
gs
xor
lds
inc
pusha
and
mov
xchg
jle
xchg
shlb
cmp
jbe
dec
loope
mov
and
pop
and
and
das
lret
mov
xchg
push
ret
jae
xor
mov
pop
mov
adc
faddl
aaa
cs
loope
inc
push
or
jo
std
xorb
sbb
mov
pusha
xchg
jle
inc
int3
jo
mov
lahf
add
xor
push
xor
push
or
lret
imul
outsb
push
call
js
push
xor
add
adc
call
sub
jae
sbb
cwtl
sbb
mul
popf
fists
jbe
fwait
cs
cmp
xchg
pop
sbb
add
out
and
das
pminub
inc
jge
loop
dec
lds
sbb
mov
or
js
push
aam
lret
cmc
loope
sub
ja
dec
xchg
push
rorl
xchg
cltd
jmp
hlt
js
mov
mov
mov
cmp
dec
sbb
ret
out
std
call
or
dec
lcall
inc
adc
ljmp
psrad
repz
lahf
lcall
xchg
or
vmwrite
lods
adc
pop
mov
ror
sbbb
or
jge
sahf
fcoml
or
call
js
and
pop
sub
sahf
mov
repnz
mov
stc
sbb
out
cmp
imul
std
mov
push
sbb
ljmp
adc
push
cmp
test
jns
cli
popa
stos
sbb
pushf
cmp
scas
mov
imul
ret
pop
push
mov
out
roll
orl
push
stos
fistl
sub
icebp
adc
jb
lea
pop
call
and
jle
vxorpd
mov
jge
jmp
shrb
imul
jp
test
jge
insb
mov
and
mov
aam
adc
arpl
adc
cwtl
pusha
sahf
jmp
adc
rcl
int
loope
aaa
fstl
xor
and
pop
pop
push
jg
addr16
enter
inc
add
icebp
shrb
mov
add
in
lea
jg
push
and
and
and
xchg
fisubl
aam
sub
in
sub
scas
cmp
mov
or
repnz
push
jnp
push
push
jg
xor
cmp
cmpsl
mov
add
inc
nop
dec
fldl
lret
xrelease
jle
adc
je
in
push
mov
dec
pop
in
mov
mov
jg
adcl
dec
sub
in
inc
popa
add
sbb
or
ljmp
popf
test
cld
lods
in
in
icebp
outsl
mov
clc
cmp
add
jb
dec
xchg
adc
rol
dec
vprotq
or
ret
ds
xchg
xor
mov
icebp
dec
faddl
lods
ds
adc
sti
mov
imul
mov
sbb
mov
leave
or
sbb
movsb
or
imull
jp
pop
fstps
repnz
mov
jae
sbb
movsb
cmp
jle
cmp
inc
dec
inc
jge
jmp
fdivrp
in
scas
or
mov
ret
cli
xchg
dec
je
ret
adc
cmpsb
mov
jno
cmp
daa
dec
aam
and
js
xchg
add
popa
ljmp
mov
loopne
dec
mov
adc
loopne
dec
sahf
or
push
je
mov
jmp
nop
lods
nop
inc
mov
sub
mov
push
xchg
bound
inc
adc
add
shl
ror
rcl
aaa
in
mov
test
cmpsb
push
das
dec
add
sti
xor
xor
push
std
mov
movsl
sbb
mov
inc
and
sub
mov
xor
or
or
fimuls
in
popf
clc
arpl
mov
ror
scas
notl
sbb
mov
push
push
mov
add
aad
inc
les
mov
ljmp
pop
push
or
inc
lock
outsl
test
cmpb
dec
dec
test
test
xor
jcxz
mov
jmp
cltd
push
jg
cmp
jle
cmpsb
sbb
add
test
mov
scas
fcomp
subb
and
out
das
shll
mov
sti
pop
cmp
test
sahf
ja
dec
jae
pop
ficompl
or
ret
sub
pop
xlat
fisubs
aad
in
cmp
sub
dec
sbb
sub
push
fimull
xchg
mov
mov
test
pop
fiadds
sub
dec
pop
adc
mov
pop
fadd
jnp
jg
and
outsb
lret
shr
dec
lahf
mov
push
arpl
or
or
adc
or
inc
in
lcall
outsl
sub
mov
nop
xchg
push
fcoml
lret
insb
xchg
mov
mov
orl
inc
pop
mov
test
push
nop
push
mov
pop
aam
add
pop
cmp
jb
fs
sub
aaa
jbe
push
pop
or
shlb
lret
xor
xchg
xchg
xor
repz
outsb
cld
stc
cmp
xchg
mov
sub
mov
xor
frstor
xchg
mov
push
negl
std
iret
stos
push
cld
push
jmp
add
sbb
add
mov
push
xor
lock
into
fcmovnu
inc
les
mov
insl
pop
sarb
adc
mov
sbb
push
adc
pushf
jbe
xor
fistpl
jns
inc
stc
mov
pop
idivb
mov
sub
sub
mov
hlt
ljmp
rolb
cli
test
icebp
add
repnz
fmuls
lret
or
push
mov
out
sub
ss
icebp
sbb
mov
adc
dec
ret
cwtl
jae
push
jmp
mov
cs
jno
mov
int
pop
inc
movb
adc
pop
push
or
inc
das
rorl
jnp
idiv
mov
sbb
adc
sub
dec
ret
imul
in
add
out
sti
repz
fsub
ja
repz
repz
cli
scas
hlt
iret
dec
mov
jl
aaa
mov
or
cmpsl
and
jb
xchg
lcall
punpckhbw
and
mov
test
xor
aad
outsb
popa
lods
cltd
xchg
sarl
jne
or
jl
aad
int3
repnz
mov
stc
cmp
mov
cmpsb
js
mov
pushf
stc
sub
push
rcrl
out
sub
mov
xor
dec
test
inc
push
jnp
jbe
std
int3
rcrb
xor
adc
or
insb
ljmp
adc
ja
xchg
lds
inc
in
adc
leave
dec
pop
mov
adc
jmp
or
in
pop
and
sbb
xor
sub
sub
lea
xor
in
mov
jmp
call
sbb
xor
push
mov
out
cmp
mov
sahf
in
aaa
adc
inc
jno
mov
adc
pusha
fsts
push
sti
flds
call
xor
out
rorb
mov
push
xchg
fadds
rol
rcrl
std
negl
and
cmp
aaa
mov
roll
aad
enter
mov
bound
negl
sub
dec
and
lcall
repz
pop
arpl
test
leave
les
add
pop
dec
aas
mov
xor
inc
scas
add
in
inc
cwtl
jb
inc
inc
sub
das
pop
pop
mov
lods
arpl
cld
mov
orb
push
mov
lock
mov
cmp
jnp
cmpsb
mov
or
mov
adc
ret
hlt
enter
dec
mov
cmp
sbb
xor
mov
mov
mov
test
sbb
push
out
mov
jnp
hlt
xchg
pop
pop
clc
in
daa
aam
sbb
add
adc
sbb
add
and
mov
or
dec
mov
cmpb
test
mov
jno
or
or
in
cmp
and
xchg
in
and
enter
out
fsubl
push
repnz
sub
mov
notl
stos
cmpsb
jno
in
popf
outsb
xchg
lock
test
stc
cmp
pop
in
push
js
xlat
pusha
jmp
mov
pop
cltd
ret
dec
ds
fs
scas
pop
addr16
pushf
fmull
jmp
adc
jno
and
or
ljmp
sub
pop
push
mov
cmp
call
dec
mov
pop
aad
jecxz
testl
xchg
sahf
orl
into
scas
stc
pop
cwtl
adc
leave
dec
adc
and
xor
push
and
repnz
lcall
insb
imul
sbb
adc
xchg
jl
clc
mov
adc
bound
cmpsl
mov
dec
jle
cmpl
popf
or
jmp
ret
inc
movsl
push
adc
bound
inc
add
sub
or
inc
mov
jns
jecxz
arpl
sbb
gs
in
out
xchg
icebp
in
mov
call
ret
mov
out
dec
cmp
std
lods
mov
mov
nop
addr16
push
das
lock
js
mov
add
inc
leave
pusha
ja
mov
imul
cmp
mov
jg
ljmp
cmc
movsl
fadd
and
out
dec
mov
divl
dec
sub
mov
into
lea
test
outsb
dec
push
pop
and
pusha
jae
cmp
rcr
or
pop
push
vpaddb
xchg
rorl
add
lea
out
aas
cmp
ret
mov
mov
pop
jg
mull
mov
add
inc
in
out
xchg
cmp
sbb
push
adc
fnsave
repz
sbb
repz
mull
ret
enter
cmp
cs
repnz
mov
push
insl
mov
jge
call
mov
add
lock
loope
mov
xor
mov
pop
movsl
inc
push
mov
imul
xlat
inc
out
arpl
adc
lret
ret
mov
mov
popa
in
jmp
mov
inc
out
push
stc
pop
fisubrs
cmp
xor
pop
repnz
sub
cmp
call
mov
cwtl
sarl
stos
outsl
fnstenv
cltd
jmp
stc
mov
ljmp
shlb
aas
dec
int3
mov
ljmp
fmuls
ljmp
adc
in
push
lret
mov
adc
adcb
push
pop
scas
in
mov
popf
pop
iret
jecxz
ficoms
loopne
pop
popa
pop
push
in
mov
sbb
pop
mov
xchg
mov
cld
xor
xchg
stos
or
test
jge
loop
sub
insb
cmpsb
jno
clc
call
sbb
jno
ss
ds
pop
int3
test
dec
popf
jae
ret
xor
pop
push
pusha
xor
repnz
shl
das
dec
push
jmp
dec
outsl
std
jg
add
test
mov
push
dec
mov
and
push
loope
and
push
call
dec
lahf
pop
ret
mov
insl
dec
xchg
jns
or
pushf
mov
in
mov
jle
add
icebp
jne
sbb
xorl
dec
jo
sbb
insl
pusha
call
dec
add
daa
into
push
scas
int
or
insl
ds
mov
lods
mov
pop
or
cmp
jne
inc
mov
outsb
sbb
push
stos
negl
pop
add
jbe
push
pop
xchg
mov
sub
dec
or
inc
ds
pop
ljmp
jmp
pop
cwtl
mov
sarb
jmp
sbbb
les
mov
cs
ja
push
lret
sbb
jae
mov
mov
xchg
jae
jecxz
inc
mov
enter
mov
xchg
xor
adc
xchg
add
cmp
push
lret
les
pop
lret
jge
imul
arpl
std
and
ss
cmp
inc
xchg
mov
push
mov
mov
xor
cli
popa
mov
xchg
mov
inc
lock
push
or
sub
les
xchg
call
shrl
out
cmp
inc
bound
add
insb
or
enter
xchg
lret
xor
faddp
dec
scas
jp
inc
mov
jecxz
dec
push
adc
not
mov
or
movsl
stos
cmp
jnp
inc
or
mov
in
dec
jge
dec
ds
cmp
pop
cmp
fs
int3
data16
sbb
cs
movsb
int
out
cmp
addr16
ret
xchg
stos
adc
push
push
mov
fs
xchg
inc
dec
push
fwait
out
xchg
arpl
jmp
fiaddl
mov
pop
sub
pop
movsl
aas
lods
mov
sub
xchg
jne
subl
setno
insb
jge
test
lds
fldl
mov
repnz
inc
sti
mov
mov
imul
sbb
orb
mov
and
xor
mov
xor
and
and
icebp
lods
dec
rcll
lea
xor
mov
bswap
cmp
or
js
sub
jo
jmp
sub
scas
add
push
sub
add
sahf
in
or
add
jmp
mov
jge
xchg
jne
fucomip
cmpsl
mov
jecxz
andl
psubq
push
pop
jl
pop
mov
pop
cs
xchg
pop
arpl
clc
push
movsl
push
out
out
xlat
imul
inc
dec
pop
pop
jle
les
cmc
in
repz
sub
add
bound
out
inc
sbb
fbstp
in
mov
repnz
negb
addl
mov
fbld
nop
xor
test
mov
dec
adc
pop
push
jne
in
scas
movsl
aaa
jae
shrl
mov
jp
popf
xchg
mov
push
mov
jle
icebp
cs
sub
or
adc
add
aaa
mov
cmp
mov
add
insb
inc
sbb
cwtl
mov
lret
adc
subb
jnp
rolb
push
and
sbb
nop
mov
fwait
enter
inc
cmc
jbe
xor
sbb
stc
fcomps
fimuls
pop
out
and
push
data16
int
shll
cmp
xchg
cmpsb
pop
xchg
js
jl
shlb
jnp
xor
pop
adc
sub
mov
in
ljmp
dec
or
shrb
jl
lds
mov
imul
sysenter
nop
jne
adc
push
pop
inc
xor
aam
inc
stc
pop
fadd
subl
sub
mov
or
mov
mov
jge
dec
into
jge
mov
mov
pop
shl
test
stos
xor
push
pop
mov
insl
add
movl
insb
or
cmpl
jge
add
addr16
das
mov
rolb
dec
pop
in
or
mov
dec
fildll
stos
and
ret
faddl
xor
inc
scas
mov
fs
xchg
stos
pop
into
xchg
aas
popa
xor
shlb
mov
cld
sub
xchg
lret
mov
jecxz
mov
imul
mov
xchg
test
test
add
scas
cmpsl
inc
daa
and
or
out
outsb
test
mov
addr16
leave
cmp
lea
mov
push
stc
dec
stos
cltd
push
pushf
xor
aad
add
pushf
in
inc
mov
sub
movsb
xchg
or
rorb
mov
popa
mov
adc
rorb
mov
aad
adc
fildl
fstps
and
cs
aam
sti
lret
ffreep
push
sti
movsl
pop
loopne
dec
adc
push
mov
in
sub
adc
adc
push
cwtl
pop
add
out
loop
xchg
sti
icebp
push
mov
mov
add
sub
lock
filds
inc
mov
sarl
mov
push
dec
sbb
xchg
aaa
sub
xlat
ss
test
test
dec
xchg
push
xor
stos
xchg
push
insb
lret
loope
lahf
je
mov
test
pushf
inc
ja
cmp
jb
mov
cmp
aaa
loope
fidivl
ljmp
or
pop
pop
cmp
inc
push
jne
outsl
push
cli
enter
mov
jae
adc
lea
jo
into
pusha
sbb
jb
mov
orb
js
pop
idivl
popf
mov
imul
cs
adc
mov
shrb
mov
xor
js
aas
inc
push
out
and
mov
mov
sbb
sub
movsl
mov
cmpsb
or
ret
negb
popf
movsb
add
ss
aad
lret
mov
out
insl
xlat
cmp
add
mov
push
cmp
vpunpcklwd
pushl
jbe
lret
mov
aad
inc
push
add
pop
iretw
jns
mov
sbb
sahf
gs
dec
mov
cwtl
jb
iret
lahf
fs
lods
decb
jl
and
sub
cmpsl
cmpl
mov
addr16
cmp
or
xchg
into
mov
lahf
sarl
xor
bnd
lock
fs
popf
out
repnz
sbb
jle
push
adc
sahf
xchg
mov
pop
xchg
mov
mov
int
mov
mov
fs
xor
jmp
enter
ljmp
lods
inc
enter
ftst
lret
adc
test
stos
addl
jb
or
lea
cmpsl
lret
dec
xor
mov
pop
adc
gs
cmp
out
xchg
push
scas
sub
pop
andl
lds
mov
repnz
repnz
and
push
ss
out
fldenv
or
jle
pop
pop
mov
cmp
or
mov
mov
pop
pusha
fstl
add
sbb
call
xchg
push
pop
in
or
addl
repnz
xchg
fxch
or
sub
in
test
cmc
test
cs
jmp
sahf
fsubl
int3
aas
hlt
outsb
hlt
cld
mov
pop
dec
cmp
repnz
cmpsb
fs
mov
fwait
pushf
inc
cmp
adc
sbb
cmpsl
push
jo
pushf
sbb
ret
repz
addr16
subps
stos
mov
xchg
int
cmp
inc
jno
loope
mov
fldt
jp
cmc
xor
lock
cmp
mov
jecxz
cmp
int3
mov
orb
je
jge
add
mov
mov
adc
mov
orb
outsl
loope
fucom
cltd
and
mov
clc
sbb
std
xchg
mov
mov
or
sti
push
mov
xchg
popa
gs
fcmovnu
cld
std
cmp
or
sbb
mov
jbe
je
sub
enter
and
xor
out
and
xchg
stos
scas
insl
mov
adc
addb
and
jp
cmpsl
push
dec
sub
ror
divb
ret
inc
sbb
addr16
hlt
movsl
and
sbb
sub
adc
dec
mov
pop
les
dec
mov
push
lock
lea
ret
mov
sbb
mov
jnp
fisubrl
sbb
xor
mov
rep
outsl
pop
imul
adc
inc
pop
mov
nop
push
cmp
dec
daa
cmp
pushf
cmc
scas
test
fs
je
ret
xchg
sub
mov
pop
movsb
imul
ljmp
fs
push
dec
sub
sub
scas
aas
outsl
adc
mov
insb
ds
repnz
mov
mov
outsb
mov
xchg
mov
test
jge
cmp
inc
mov
cmp
movsl
cmp
sbb
pushf
aaa
xchg
popf
sbbb
jne
lea
and
lods
mov
push
idivl
outsl
sbb
or
lea
mov
jp
rorl
xchg
cmpsl
fnstcw
xorb
into
xchg
jns
push
ret
jg
das
repnz
lock
push
add
rol
nop
sbb
loope
std
enter
push
mov
and
gs
mov
dec
mov
ja
adc
ljmp
lods
icebp
pop
repnz
jl
ljmp
xchg
mov
xor
icebp
mov
cmp
rcrb
insb
jg
push
hlt
cwtl
xlat
pop
fldcw
cmc
imul
pop
arpl
or
push
cmp
or
mul
and
test
jg
mov
fstl
lcall
popa
xlat
sahf
dec
dec
cli
sub
idiv
movsb
pop
inc
push
mov
scas
or
shrl
and
enter
jb
ror
repnz
icebp
stos
pushf
add
cmp
arpl
push
mov
add
xchg
ficoms
mov
xchg
dec
pop
int3
mov
jge
imul
mov
jle
test
popa
pop
cmpsl
and
lahf
dec
imul
loope
pop
pop
rcrb
add
sub
or
dec
xchg
inc
dec
repz
mov
fidivrl
test
xchg
and
rcr
addr16
pop
cwtl
mov
push
bound
and
cwtl
das
adc
sahf
cmpsb
scas
and
mov
es
mov
add
ds
sbb
hlt
mov
jp
movsb
mov
sub
sub
in
adc
mov
fmull
xlat
incb
outsl
pop
add
mov
jb
mov
or
add
push
xor
xchg
in
pop
push
push
jb
or
movsb
scas
add
mov
stos
and
les
cmp
xor
lret
cmp
cld
sub
pop
cmp
sub
mov
dec
stc
lods
cmp
pop
adc
movsb
mov
mov
sarl
test
add
ja
aaa
sarb
jmp
test
jp
adc
rcrl
into
ljmp
bound
sbb
ljmp
hlt
data16
cmp
and
dec
out
dec
xor
aas
jno
subl
cld
les
icebp
pop
inc
push
mov
lea
jle
loop
sbb
incl
fmull
sbb
xchg
aaa
dec
loopne
aas
push
mov
loop
xlat
sahf
ret
insl
cltd
lret
jns
cld
popf
add
insl
iret
movsb
aad
dec
adc
cli
gs
sbbb
pop
or
pop
adc
adc
ss
aas
inc
mov
iret
leave
push
mov
imul
jns
push
xor
mov
mov
jl
iret
aad
fwait
lret
mov
xchg
or
into
out
leave
rcrl
icebp
negl
adc
out
mov
adc
mov
stc
test
jno
lahf
js
sub
mov
popl
not
jle
fistpll
or
fcomps
xchg
inc
in
loop
insb
lahf
out
loope
cwtl
ljmp
cmp
lret
mov
and
movsb
iret
xlat
push
xchg
aaa
addr16
pusha
dec
lock
filds
mov
mov
mov
mov
jnp
int3
cmp
jge
xchg
mov
stc
mov
jle
je
cld
push
add
dec
xor
loop
sbb
scas
rcrl
push
xchg
bound
rorl
fisubrs
lods
lds
pop
lods
iret
jne
pusha
xor
pusha
mov
sub
add
mov
cltd
sub
dec
shrb
test
sbb
test
gs
cltd
fnstcw
add
dec
mov
ljmp
cli
jnp
pop
jns
xchg
and
arpl
test
outsl
pop
lods
xor
jp
mov
aas
mov
push
dec
or
dec
jmp
add
aas
inc
cmp
jbe
adc
je
mov
sarb
out
clc
int
mov
das
loop
shl
insb
std
clc
xor
fnsave
fsubrs
fildll
repz
mov
insb
test
mov
inc
xor
mov
daa
jecxz
sub
inc
ljmp
orb
mov
leave
jg
lret
or
xor
stc
stos
shr
jns
push
lret
xor
add
jge
cwtl
mov
sub
mov
jno
scas
enter
lret
xor
stos
dec
sbb
popa
mov
pop
aam
cmp
push
cwtl
std
mov
sbb
fisttpl
or
stos
roll
jl
mulb
shl
and
repnz
inc
cltd
mov
cmp
cmp
cmp
leave
pusha
xor
jl
push
pop
arpl
insl
hlt
push
dec
sbb
fcoml
inc
aaa
cli
pop
jns
xor
xor
pusha
sub
xor
pop
adc
test
cmpsb
xchg
jb
push
xchg
cltd
add
and
and
cmc
lahf
dec
iret
sbb
sub
arpl
jg
jo
repnz
movsl
sub
adc
xorl
dec
and
shlb
xor
add
rorb
shll
sub
jo
mov
cli
add
or
mov
fisttpl
pop
adc
ljmp
mov
jne
test
addr16
and
mov
cmp
or
sub
mov
lea
aas
mov
jge
add
repz
cmp
add
out
xlat
xlat
xor
mov
les
mov
pop
mov
mov
imul
mov
cmp
dec
sub
jge
pusha
push
pop
fmuls
push
add
push
dec
push
ja
cwtl
mov
ret
sahf
arpl
lods
lea
rcll
pop
js
inc
outsb
sarl
test
add
cli
outsb
mov
mov
lahf
std
call
xor
sub
enter
jb
sub
sub
cmp
sbb
mov
xor
vpcmpeqw
push
inc
sahf
fs
aas
lea
or
inc
mov
jecxz
out
and
jp
add
cmc
jmp
pop
jnp
outsl
push
jb
fwait
pop
mov
adc
mov
out
jne
jp
movsl
in
mov
push
ja
ja
mov
repnz
jne
sbb
enter
mov
mov
rcrb
xchg
mov
pop
or
in
imul
aaa
cmpsl
nop
cmp
fldcw
imull
mov
movsw
xchg
push
sahf
lcall
repnz
outsl
mov
out
add
pop
incl
inc
inc
roll
mov
push
movsb
ss
cmpsb
xchg
cmp
fs
mov
inc
cmpsb
cmp
out
mov
out
inc
ss
addl
or
xchg
jae
push
ret
fisubl
test
add
mov
jecxz
and
out
psllw
sahf
xchg
jo
adc
jno
ds
aad
outsl
cmp
dec
mov
loope
in
jns
lea
test
aaa
cmp
clc
pop
daa
iret
jp
jge
xor
or
cmp
cs
mov
leave
adc
xchg
inc
pop
mov
add
testb
jb
gs
xor
sub
fnstcw
xor
mov
push
rcll
mov
push
mov
loopne
scas
pop
sub
repnz
adc
push
int
aas
pop
les
bswap
jge
xchg
xor
jnp
ja
dec
pop
sbb
lds
popf
jne
sub
mov
dec
outsb
gs
cmp
js
pusha
sahf
fmuls
outsl
adcb
cmc
inc
xchg
jl
ret
inc
lock
inc
stos
loope
aas
pop
sbb
or
hlt
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
jmp
test
pop
sahf
andl
fs
or
jl
cmp
adc
mov
mov
rcrb
and
shll
xor
pop
js
rorl
or
or
insb
xchg
push
mov
jo
out
add
mov
xchg
fnsave
push
cmp
outsb
imul
stos
jbe
jne
mov
icebp
xchg
rol
sbb
testb
rcrb
icebp
shll
ja
outsl
push
inc
leave
xlat
int3
mov
dec
std
aas
inc
and
sbb
mov
sbb
jns
int
mov
gs
sti
jnp
sub
bound
xchg
int
insb
idivl
mov
dec
fldt
lret
ret
cs
xlat
pop
ljmp
xor
ja
and
in
clc
inc
jge
fidivrl
aam
cli
push
or
jbe
jns
out
repz
pop
movsl
test
push
lahf
xchg
xor
push
repnz
aaa
jbe
xlat
lock
mov
jae
sub
pop
dec
loopne
add
andb
xor
pop
dec
aaa
cmp
mov
das
mov
movsb
push
sti
xchg
aam
inc
mov
inc
test
int
fimull
push
cs
mov
mov
outsb
outsb
jge
xlat
push
aad
fwait
add
mov
rclb
jne
jle
mov
add
lods
jns
lahf
and
adc
dec
out
lret
push
jl
adc
mov
or
mov
jge
insb
pop
or
out
int
pop
push
popa
cmp
push
pop
push
mov
cwtl
xor
mov
xchg
cs
sub
js
cmpsb
pop
push
fmuls
data16
xor
adc
shrb
roll
repz
sub
ret
jecxz
adc
fsts
lock
int
add
lahf
dec
mov
dec
mull
push
or
shl
mov
jns
out
imul
decl
mov
repz
mov
push
int
add
cs
adc
xorl
pop
push
pop
ds
jp
loope
xlat
inc
jp
psubsw
bound
adcl
nop
push
or
add
pop
mov
sbb
mov
aas
insb
cmp
sbb
jmp
ja
adc
negb
jns
and
pop
jbe
mov
cmp
enter
fisubl
push
imull
mov
icebp
sbb
push
popa
lret
fucom
xchg
gs
and
arpl
out
lret
or
dec
cmpsb
daa
pusha
mov
repz
inc
push
sbb
imul
adc
mov
popf
and
int
daa
loopne
push
pusha
jbe
push
loope,pt
add
mov
add
in
pop
mov
sub
fwait
push
shlb
cmp
adc
pusha
or
cwtl
adc
jecxz
cmp
lahf
mov
push
mov
std
xlat
pop
loope
test
jnp
ret
pop
inc
or
add
jbe
inc
cmpsb
icebp
or
or
test
jge
cwtl
pushw
add
inc
lahf
outsl
xchg
sbb
xchg
push
lods
lds
movsl
cwtl
unpckhps
inc
adc
aas
xchg
lcall
lahf
movsb
xor
test
rcrl
adc
mov
sub
adc
or
push
ds
inc
or
scas
mov
aas
inc
sub
jp
and
clc
sbb
fsubp
outsb
stc
icebp
add
std
pop
xchg
rcll
jo
pop
dec
incl
and
sahf
call
jb
rcrb
mov
pusha
popf
push
dec
sbb
push
cmp
insb
mov
hlt
imul
paddw
mov
mov
fstps
jmp
jge
adc
mov
push
or
cltd
fsubl
cmc
lds
popf
mov
inc
cmpsl
pop
mov
inc
push
sub
inc
int3
test
xor
pushf
xorb
and
insl
mov
fsubrs
pop
rep
push
or
movsl
pop
pop
in
mov
mov
sbb
gs
ret
out
cvtdq2ps
xchg
ret
or
jge
nop
xchg
pop
bound
clc
xor
mov
mov
or
xchg
addr16
cmc
dec
iret
cmpsl
push
pushf
mov
jne
or
dec
mov
aas
add
sub
and
cmp
pushf
jb
push
sub
adc
sbb
insb
scas
lock
jns
pop
inc
test
das
sub
pop
lcall
rorl
and
aam
push
jae
sahf
sti
fisttps
jp
push
push
repz
jbe
push
lods
dec
pusha
call
loop
sbb
cltd
inc
pop
out
inc
mov
jb
inc
dec
mov
push
inc
sar
mov
pop
data16
out
enter
and
jno
imul
movb
vpaddusw
cmp
pop
dec
aas
fistpll
mov
jne
or
push
or
and
aaa
pop
pushf
push
ret
movsl
mov
xchg
imull
lret
adc
sarl
lds
jecxz
mov
adc
nop
in
or
sbb
orl
add
fidivl
outsl
decb
xchg
subl
test
ja
mov
outsb
aad
jl
sbb
xchg
jge
in
imul
sub
daa
setb
addr16
mov
adc
sub
ss
jne
push
cmp
in
adc
or
aam
xlat
inc
sbb
dec
ret
inc
jmp
xchg
cs
pop
inc
xchg
xchg
and
push
hlt
out
adc
out
das
cmp
mov
inc
imul
les
inc
adc
xor
stos
fstl
xor
adc
mov
lock
mov
cs
lret
gs
fninit
mov
les
testl
adc
rcrb
push
fmul
inc
daa
mov
adc
mov
rcl
sbb
jb
pop
ficoms
xchg
xchg
mov
out
sbb
mov
fwait
cltd
push
pop
xor
add
les
xor
shll
xchg
or
cwtl
mov
ret
xor
outsb
add
mov
fucomi
iret
cltd
adc
jbe
out
cmp
dec
mov
adc
jne
cmpsb
leave
into
add
in
lret
je
aas
cs
pop
es
shlb
mov
scas
pushf
pop
jo
scas
pop
aaa
mov
fadds
pop
add
daa
push
imul
jle
push
adc
repz
in
inc
push
adc
sbb
inc
mov
sub
pop
mov
dec
mov
dec
inc
add
cmp
scas
mov
movsb
mov
cmp
sahf
sbb
push
stos
mov
test
dec
call
add
cltd
jb
jns
pop
movsb
in
cltd
mov
or
out
pop
pop
nop
cwtl
rcll
cs
jmp
xchg
dec
jae
stos
aaa
roll
shl
out
out
jle
xchg
or
or
mov
push
in
lcall
dec
rcr
lret
jb
nop
mov
xchg
add
and
ret
in
push
out
sbb
das
xchg
cmpsl
inc
testl
daa
pushf
mull
and
add
les
or
cmp
repnz
lods
mov
push
mov
in
jo
mov
cmp
xchg
xor
leave
in
adc
mov
cmp
notl
xor
outsl
xor
cmpsb
pushf
notb
fistl
jmp
filds
filds
shrl
adc
clc
fsub
stos
mov
xor
and
aad
mov
pushf
fadd
mov
push
jmpw
push
sub
rcrl
cli
orb
mov
inc
insl
pushf
pushf
add
sbb
and
xchg
in
dec
aaa
inc
mov
cmpsl
daa
fs
or
adc
sbb
jmp
stos
xchg
sbb
push
mov
add
pushf
inc
jmp
mov
inc
roll
arpl
jl
mov
pop
mov
and
or
add
jnp
stos
adc
test
dec
nop
jl
xor
jle
dec
dec
aad
aaa
test
fwait
lods
std
or
push
mov
mov
sarb
mov
fwait
es
jl
mov
loope
xlat
xor
loope
xor
jl
shl
pop
jnp
push
sub
jecxz
clc
pop
and
or
mov
sub
arpl
or
pop
push
dec
fidivrs
pop
mov
push
push
or
sub
fcoms
or
pop
ret
jns
fiaddl
cmp
cmpsl
cs
adc
inc
mov
push
adc
sub
mov
in
xlat
inc
cmpsl
int3
sbb
hlt
scas
fldl
scas
mov
jl
mov
pop
xchg
gs
dec
in
leave
jae
shlb
cmp
inc
inc
shll
xchg
in
jno
stc
push
in
out
inc
jne
icebp
pusha
xchg
cmpsb
jo
mov
lods
ret
pop
cmp
icebp
push
arpl
jg
cli
or
inc
push
loopne
imul
or
insl
int3
leave
imul
xor
mov
loopne
stc
mov
movsb
xchg
jno
sbb
xor
flds
cmpsb
dec
lcall
sub
and
lcall
dec
jmp
push
jg
cmp
add
ja
xchg
ss
std
and
call
push
mov
lret
and
shl
or
mov
sbb
jne
sub
stos
sub
aad
xchg
repnz
clc
ja
cmp
cltd
outsb
xchg
xchg
mov
jmp
cmp
nop
sub
push
jp
dec
out
aad
pop
mov
mov
pop
call
xchg
adc
enter
dec
pop
ljmp
jns
add
pop
add
movsb
out
inc
js
ficoml
push
push
inc
lcall
mov
jle
adc
in
fldt
adc
pop
imul
lea
xchg
aam
lahf
icebp
dec
mov
jp
mov
push
mov
or
stos
cli
mov
cmp
and
cmpsb
mov
mov
push
mov
mov
pop
dec
push
in
lds
popa
mov
fldl
das
jmp
out
mov
or
and
xchg
jno
jns
stos
cmp
push
shl
mov
ss
add
and
cmp
addl
out
jo
sub
das
xor
leave
add
scas
push
scas
fiadds
push
fwait
xlat
mov
jl
or
daa
adc
xchg
inc
mov
cld
cwtl
or
pop
mov
inc
sbb
ljmp
js
mov
das
jl
jo
push
repnz
sub
arpl
add
ljmp
adc
xchg
jb
andl
jbe
sbb
dec
mov
add
call
add
test
sbb
clc
mov
push
or
fdivs
jg
jns
add
test
lods
mov
bound
ljmp
insl
mov
jp
cli
mov
outsb
dec
test
xor
inc
jle
pop
inc
adc
addr16
sbb
adc
popf
adcb
adc
icebp
sti
ret
inc
std
in
xchg
cld
adc
mov
ljmp
in
cmpl
mov
xchg
std
inc
fldt
scas
and
cmp
mov
iret
dec
or
fbld
xor
sbb
fwait
lods
or
adc
pop
pop
jnp
xor
lret
mov
mov
cmp
push
repnz
popf
mov
cs
into
xchg
je
xchg
cmpb
pop
xor
ss
jnp
jle
lea
std
pop
mov
xor
adc
dec
xchg
jae
xchg
jmp
mov
mov
loope
fstl
or
sub
xchg
inc
fucom
test
ds
ret
xchg
adc
lods
mov
mov
adc
addr16
jne
adc
xor
add
fs
pop
gs
push
test
out
inc
je
insb
cs
ds
dec
pop
xor
xor
imul
repz
popa
pop
pop
nop
movsl
pop
leave
jle
push
adc
incb
cmp
jne
in
and
pop
in
cmpps
pusha
repnz
int3
add
xor
push
imul
bound
lock
xor
adc
popa
mov
cmp
mov
fsubrs
pop
inc
adc
mov
push
sbb
sub
pop
mov
inc
andl
jecxz
adc
shlb
push
movsl
repz
push
or
and
call
in
pop
rcl
sub
loopne
sahf
loop
aad
inc
pop
lahf
enter
mov
fwait
inc
cltd
cmc
mov
jmp
jl
idivb
xor
in
pusha
inc
or
jecxz
in
fimuls
arpl
push
jle
mov
jno
xlat
push
lods
in
pushf
lods
pop
clc
pop
mov
push
inc
stc
adc
test
jp
sahf
fisubrl
out
sbb
adc
dec
shrl
lods
and
shl
mov
leave
cmp
orl
sub
mov
inc
sub
filds
adc
pop
pop
icebp
xor
stos
push
push
and
adc
ficoml
xor
sahf
add
xchg
mov
pop
cmpsl
xchg
paddd
insb
push
sbb
sti
push
jns
dec
fsubrp
in
mov
or
pop
mov
fwait
stos
add
idivb
pop
scas
or
xchg
mov
dec
pop
dec
fimuls
std
movsl
test
repz
inc
ljmp
fs
push
mov
xor
jl
cmp
fs
test
mov
dec
push
aad
xlat
xor
xchg
and
pusha
popf
push
mov
testb
mov
xchg
mov
xor
repnz
xchg
push
xchg
pop
inc
ljmp
add
mov
lods
or
xor
push
push
jnp
xchg
leave
sub
insb
xorl
jns
push
ja
sbb
dec
add
call
sub
lock
xchg
shlb
push
cltd
fadds
pop
mov
inc
mov
ja
mov
in
mov
fmuls
push
int3
mov
dec
cs
loopne
data16
pop
shrb
sub
pop
lods
adc
mov
repnz
enter
mov
lret
mov
sub
mov
lret
inc
sbbb
mov
mov
dec
jae
jp
in
sbb
dec
jecxz
popa
xchg
add
push
gs
fcomps
int
push
out
cld
add
sarb
xchg
and
mov
fdivrs
outsb
fwait
rol
mov
pop
jecxz
aaa
or
mov
sbb
pop
cmp
push
xchg
dec
or
mov
ja
int
ret
ds
pop
aam
pop
sub
push
cld
mov
imull
push
mov
sub
xchg
inc
aaa
xchg
mov
inc
sbb
lret
cltd
test
xchg
xchg
test
or
ret
dec
test
clc
in
push
mov
ror
mov
in
aad
push
ds
cs
mov
jb
in
insl
push
data16
stc
dec
lds
int3
enter
xchg
fldcw
jns
xlat
lar
adc
and
js
pop
xor
int3
xor
lea
rol
rcl
sarl
std
add
mov
sub
lea
clc
push
mov
jl
pusha
sub
ret
cmp
xchg
xchg
cli
jl
sarl
cmp
dec
shll
or
cwtl
andb
fnsave
push
jnp
sbb
add
xor
inc
je
push
xor
mov
jae
inc
test
pop
inc
fs
xorb
sbb
fcmovnu
lcall
in
mov
sub
rcrl
mov
push
int
sub
sub
repnz
mov
loop
mov
lahf
push
mov
or
andl
lock
pop
aad
add
scas
jl
pop
repnz
stc
xorl
and
and
sub
bound
cmp
icebp
mov
or
or
sbb
cmp
inc
mov
test
mov
push
push
icebp
adc
jge
xor
mov
mov
push
mov
jge
leave
push
ja
inc
les
mov
inc
mov
sbb
xchg
xor
mov
lock
push
pop
mov
mov
leave
sbb
cmp
dec
pushf
sarb
mov
mov
push
lds
outsb
aas
loop
xchg
push
jge
jbe
jge
pusha
in
mov
cltd
sbbl
jg
push
rorl
ss
loope
jae
push
xor
push
mov
mov
mov
outsl
ss
xor
stos
pop
aaa
aam
push
mov
inc
lock
dec
mov
jecxz
sbb
loop
lods
mov
loop
inc
ret
jns
push
jle
sub
pop
jbe
mov
mov
in
mov
mov
div
add
cmp
call
les
inc
movhps
pusha
imul
add
adc
xlat
ss
sbb
sub
fs
dec
push
aaa
push
xchg
clc
xor
xor
lcall
fmulp
push
lcall
xlat
repz
dec
ljmp
adc
scas
dec
inc
and
sub
in
and
ljmp
and
scas
cmp
outsl
jge
add
jle
fsubs
pushf
adc
cltd
jbe
jb
mov
test
mov
out
xor
or
insb
and
fstpt
add
inc
in
or
mov
cli
sti
and
push
add
xchg
fcomps
jmp
scas
push
inc
enter
or
fstps
cli
daa
push
out
fidivl
pop
popf
sti
in
xor
out
dec
addr16
scas
incb
dec
fsubs
jb,pt
std
push
daa
iret
out
mov
cmpsl
arpl
adc
xchg
nop
inc
jbe
pop
cmp
roll
push
pop
lods
jp
scas
sub
in
cmp
into
push
or
inc
jbe
outsb
stos
dec
mov
inc
das
xchg
scas
pop
adc
add
loopne
movsb
inc
jne
pop
jge
xchg
cmp
pusha
mov
sub
sub
inc
outsl
or
test
call
mov
ja
ret
scas
fnsave
add
lods
fcmovb
out
int3
scas
inc
cli
dec
inc
adc
push
adc
int
xor
int
xor
fs
lea
shr
cmpsb
sub
insb
or
into
or
jl
mov
mov
jb
xchg
and
dec
mov
adc
mov
dec
mov
fdivrp
adc
and
leave
lret
jne
sahf
sub
sbb
repz
int
cmpsl
das
mov
xorb
into
mov
out
pop
sahf
add
or
or
and
mov
adc
add
negl
push
aas
fs
mov
fsubrs
stos
xchg
test
mov
fmuls
push
nop
arpl
clc
jl
imul
sub
lods
stos
jnp
inc
pop
incb
sbb
adc
and
shlb
push
lods
adc
roll
inc
xlat
push
mov
aas
hlt
and
dec
and
sbb
jg
subb
jno
mov
sti
scas
or
mov
repnz
mov
dec
inc
jle
xor
push
cmp
scas
xchg
mov
inc
xchg
je
pusha
clc
inc
xor
sub
push
inc
add
dec
add
sub
inc
add
cmc
xor
jp
les
xchg
or
mov
loope
pop
lahf
aaa
sbb
popa
inc
inc
jp
lahf
adc
adc
push
mov
pop
cmp
add
flds
js
jb
dec
jle
jb
rorl
cmp
xchg
mov
les
dec
je
insl
xor
in
mov
jg
push
jp
and
repz
ret
pop
mov
xor
scas
insb
jo
roll
in
xor
mov
or
gs
int
sti
dec
add
iret
mov
inc
xor
xchg
lahf
adc
mov
andb
movsb
outsl
rclb
xchg
lds
lock
sbb
rcl
je
fwait
push
stos
movsb
repnz
iret
add
lahf
pop
in
ficoml
mov
or
jecxz
pop
xlat
cmp
xchg
pop
addr16
dec
xor
xchg
xchg
jmp
cmpsl
push
or
ret
mov
inc
push
inc
lcall
sbb
out
stc
jg
ss
iret
movsb
and
lret
imul
push
push
cmp
outsb
and
fnstenv
icebp
sub
mov
mov
das
inc
dec
fbstp
or
fists
insb
pop
jne
popf
shll
movsb
cmp
cmp
xor
das
cmp
sbb
xchg
or
fwait
adc
lds
and
push
dec
lock
adc
add
popa
adc
arpl
fnclex
inc
xchg
mov
out
dec
fcmovnbe
push
repnz
je
pshufw
mov
ds
and
mov
ljmp
int3
outsl
test
add
push
rcrl
xor
sbb
add
and
test
and
xchg
das
scas
pop
add
cmp
sahf
or
mov
das
adc
sub
xor
enter
movsl
cmp
xchg
sbb
outsb
outsl
push
mov
fwait
add
aad
xchg
mulb
pop
and
arpl
je
movsb
ret
mov
push
jmp
es
or
rcrb
pop
or
cmpsb
push
ret
test
mov
pop
push
add
inc
dec
iret
movsb
add
sahf
fmull
mov
bound
in
dec
mov
hlt
mov
and
lcall
cmc
dec
sub
or
cmp
pop
gs
vsubpd
std
decl
jb
lea
idivb
imul
xchg
ss
push
in
xor
push
adc
cmp
jge
dec
dec
data16
loope
ret
mov
mov
xor
xchg
popa
pusha
fiaddl
test
xchg
popa
fiadds
fiaddl
push
popf
data16
jge
mov
cmc
jb
push
shll
pop
shlb
mov
outsb
std
test
fs
cld
arpl
xchg
push
les
movsl
sbb
aad
loope
xchg
sub
pop
push
sbb
pop
sbbb
inc
int3
sti
subl
push
jno
push
sbbb
dec
xchg
mov
loop
sbb
add
pop
loope
dec
fwait
inc
jns
lock
push
lcall
pushf
xchg
mov
iret
cli
imul
push
lods
jge
mov
dec
jb
adc
aaa
int
xor
roll
lret
fcoml
adc
mov
adc
jmp
push
cmpb
sbbb
sbb
adc
push
aas
aad
ja
inc
es
test
bound
mov
cmc
pop
mov
xor
stc
movsb
lods
mov
and
repz
adc
jo
out
jno
jecxz
les
mov
pop
arpl
imul
std
outsb
and
jg
inc
leave
and
mov
add
ljmp
pop
popf
mov
inc
stc
xchg
into
add
aas
enter
mov
mov
mov
das
dec
mov
xor
xchg
mov
sti
sub
xchg
or
inc
fwait
pop
dec
fcompl
cld
cmp
nop
cmp
xlat
push
sub
fisubrl
lods
cmp
bound
das
mov
vprotd
dec
sub
inc
cmc
add
andb
mov
fsubs
sbb
out
push
sub
fs
js
cld
inc
dec
dec
popa
xchg
inc
mov
js
mov
iret
pop
movsb
das
jge
mov
xor
mov
push
push
inc
mov
outsb
popf
sub
test
xor
sub
pop
inc
in
ret
leave
mov
adc
push
shrb
rclb
sub
push
pop
xchg
insb
inc
rolb
mov
bound
mov
jb
out
lea
dec
jecxz
pop
je
xchg
fstl
gs
or
lahf
pop
inc
and
jmp
ds
adc
and
lea
pop
jle
mov
fidivl
lods
stos
and
xchg
andl
not
jp
sub
or
pop
mov
fdivrl
cmp
cmp
ffree
das
outsb
sub
cmp
pop
adc
vmovhps
scas
int3
jne
jae
mov
push
sbb
pop
inc
sbb
adc
dec
and
pushf
dec
bound
gs
xor
pop
adc
jno
fwait
xor
out
int
inc
dec
stos
mov
cmp
inc
dec
bound
jns
outsl
shl
add
pop
arpl
add
stos
lods
mov
jbe
pop
mov
xor
or
ja
sbb
shll
push
cmp
jae
jno
adc
lea
sbb
mov
stc
mov
cwtl
jo
or
lcall
jae
icebp
push
add
and
lods
shl
mov
xor
xchg
or
lahf
scas
sub
insb
shrb
jno
sub
push
iret
andl
in
mov
in
loop
icebp
cmp
test
pop
xchg
ljmp
je
andb
nop
mov
push
push
xchg
mov
fcmovnbe
sub
mov
xor
push
xchg
insl
mov
dec
jle
lock
pop
fsts
arpl
movsb
lcall
inc
decl
inc
bound
faddl
loope
mov
ja
jno
push
testl
cmp
cmp
call
cmc
mov
ret
std
shrl
mov
or
test
mov
jbe
lcall
and
adc
pop
cli
cli
dec
inc
imul
jmp
or
sbb
sub
ret
sbb
scas
sub
std
push
mov
adc
loopne
test
push
ss
ljmp
push
cmp
mov
cwtl
loopne
and
addr16
outsb
cli
fisttpl
repnz
arpl
pop
xchg
mov
insb
mov
pop
dec
dec
cmp
flds
loope
jp
push
mov
outsb
lret
pop
add
mov
ss
gs
mov
ljmp
pop
adc
lret
gs
in
dec
adc
out
mov
jmp
je
out
ret
mov
mov
daa
xlat
test
movsb
jecxz
mov
daa
ds
sub
inc
inc
mov
and
sub
lahf
pop
ret
sub
and
fldcw
shr
jp
shll
cmp
add
mov
mov
push
inc
addl
jns
add
mov
cs
fadds
xchg
xchg
rcr
stc
leave
scas
addr16
mov
repz
jb
push
test
push
stc
orl
and
mov
mov
inc
out
lock
stos
inc
mov
and
cld
mov
cmc
mov
dec
scas
dec
fucomip
das
xorb
pop
mov
out
mov
jae
inc
jne
xchg
push
cmpsl
inc
mov
adc
ret
cltd
mov
out
mov
xchg
inc
mov
mov
hlt
lcall
out
push
loop
pop
test
dec
xor
test
pop
out
outsl
or
ds
mov
cmpsb
inc
mov
imul
inc
xor
cmpsb
sbb
inc
and
mov
or
mov
cmp
jle
bound
loope
scas
mov
hlt
rol
dec
jle
push
test
xor
sub
mov
sub
jo
fdivs
mov
jmp
out
lcall
sub
xchg
lock
xchg
inc
sub
movsl
iret
fcmovbe
jl
gs
rcl
adc
push
in
mov
in
mov
dec
pop
mov
pop
xchg
lret
fadds
lcall
inc
add
jbe
and
jle
out
aas
xor
lret
jns
and
cmpsb
pop
mov
data16
enter
adc
pop
mov
fwait
notl
sahf
jmp
jae
xchg
mov
sub
sub
mov
mov
dec
and
scas
imul
arpl
rolb
je
xchg
fwait
or
subl
xor
arpl
pop
decb
leave
mov
mov
test
lahf
inc
insb
popa
dec
cmp
sub
inc
xor
out
pop
xor
movsl
clc
adc
or
ret
inc
icebp
or
and
pusha
mov
into
lret
sub
jne
cmp
mov
xchg
enter
cmp
mov
pop
sub
or
push
je
mov
int3
insb
add
mov
or
movsb
cmpsb
cltd
leave
inc
sbb
sti
jb
push
mov
clc
pushl
inc
xor
sub
lret
call
sub
gs
inc
hlt
lret
out
or
lods
push
jne
rcl
mov
bound
sbb
jno
test
call
xchg
sbb
sbb
fstp
lret
stos
sbb
mov
xlat
int
mov
add
fsts
jecxz
push
addl
add
and
pop
mov
inc
nop
add
add
rcrb
das
not
dec
jb
aam
dec
sarl
imul
jo
mov
mov
adc
pusha
add
repz
inc
xchg
test
adc
and
jbe,pn
pop
lds
pop
mov
inc
dec
mov
dec
das
sbb
mov
stc
imul
xor
xchg
aad
test
sbb
addr16
xor
inc
ljmp
rol
out
mov
pop
push
lods
in
or
cmc
scas
das
mov
or
cmpsl
add
push
stos
test
insb
sub
mov
and
int
cmpsl
sbb
sbb
xor
jns
out
inc
push
cmpsb
lret
mov
cmpsb
cwtl
ret
xorl
xchg
xchg
jle
aad
and
out
jae
xor
repz
movsl
mov
jp
add
cli
loopne
sarb
or
mov
mov
mov
fstpl
inc
push
and
fmul
xor
mov
sbb
divl
add
jns
add
lds
scas
shlb
xor
stc
sbb
add
cmp
mov
xor
sbb
leave
push
iret
pop
movsl
in
or
shlb
je
or
fcomp
dec
jl
push
mov
xor
sbb
jmp
jl
out
pop
stos
movsb
push
and
sub
push
cmp
fs
testb
stos
aam
add
cmp
je
add
dec
mov
inc
inc
add
adcb
mov
mov
cwtl
mov
cmc
sbb
stos
fldl
mov
loopne
push
cli
test
jp
cmp
lods
cmp
roll
adc
int3
stc
pop
mov
jns
repnz
into
sub
cmp
fsubrs
shrl
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
adc
jl
mov
bound
cmp
jl
cmp
push
mov
and
out
lret
and
aam
mov
jmp
mov
add
out
aam
mov
sbb
xor
fcmovbe
call
jmp
hlt
add
cmpsb
jmp
icebp
mov
fildl
xorl
push
fnstcw
pop
fimuls
jb
arpl
in
hlt
cmpsb
cmp
pop
and
sbb
in
xchg
xchg
cmpsl
shlb
fdivs
icebp
lods
add
mov
stos
add
pusha
pop
mov
jmp
dec
xchg
sub
mov
xchg
lock
cli
ss
mov
jg
test
mov
enter
test
xchg
jp
mov
mov
call
in
in
out
sub
fimull
out
lahf
gs
jmp
fiaddl
xor
xchg
cmp
pop
fstpt
pop
and
das
xor
les
outsl
ljmp
fnstsw
adc
adc
fwait
or
sahf
push
xchg
xchg
cmp
loope
inc
fistpl
push
jno
mov
or
mov
mov
jb
pushf
sub
xor
or
mull
neg
inc
test
jno
lahf
add
cmp
mov
cmp
dec
pushf
negl
hlt
xor
mov
cli
enter
rol
ja
cmp
imul
leave
stos
std
insb
cmpsw
lret
xor
xlat
in
outsb
push
inc
mov
cmp
popa
push
xor
data16
xor
pop
std
call
mov
rorb
adc
jns
inc
sbb
daa
test
mov
fidivrl
loope
fnstsw
push
inc
xchg
mov
xor
push
jge
lea
insl
scas
sub
fstpt
addb
cmc
out
out
arpl
popa
sub
idivb
roll
jnp
lods
test
add
lret
push
imul
push
push
add
cmp
mov
notb
jmp
lret
iret
jno
outsl
aaa
jecxz
fidivl
shl
dec
inc
jl
jo
stc
lods
pusha
or
fidivl
push
out
insb
xor
mov
std
pop
aas
aad
icebp
mov
bound
bound
je
cmp
fisubl
mov
or
add
push
loopne
jno
clc
cmp
add
mov
and
je
leave
outsb
pop
test
and
imul
xor
mov
popa
inc
pop
cmp
or
or
pusha
int
lods
leave
xchg
inc
cmp
mov
data16
rol
aad
into
pop
sbb
dec
push
push
es
mov
int
push
xchg
pusha
adc
or
adc
mov
xor
jge
cmp
mov
jns
mov
xchg
aas
xchg
adc
xchg
adc
in
lea
js
clc
xor
lcall
shlb
cmp
push
push
pushf
scas
adc
jns
call
and
mov
add
imul
or
push
loopne
mov
inc
dec
rorl
xchg
or
xrelease
jg
lea
jmp
mov
or
vpmacswd
mov
sub
imul
cmp
leave
fcoml
ja
xor
movsb
inc
ljmp
aad
lret
pop
icebp
xchg
repnz
adc
pop
push
movd
sub
outsb
fildl
daa
adc
push
inc
xlat
jo
dec
xchg
xchg
dec
fstps
inc
cmp
jg
adc
xor
cltd
test
cwtl
jl
ljmp
loop
addr16
mov
dec
sub
stos
dec
notb
sbb
jo
sub
adc
xchg
jo
adc
bound
popf
mov
sbb
inc
sub
aad
cmp
into
mov
iret
add
gs
add
rcll
lods
dec
imul
fmuls
jbe
xchg
test
lret
mov
fxch
jne
cmp
lret
roll
lds
test
imul
scas
or
aaa
mov
cwtl
sbb
jl
mov
stc
adc
cli
ds
sahf
ss
push
jns
pop
addr16
pop
das
int
imul
adc
adc
mov
mov
stc
xor
pop
xlat
add
inc
xchg
push
xor
aaa
push
mov
pop
mov
call
mov
mov
dec
dec
aad
popa
leave
les
cmp
mov
add
adc
dec
div
ret
sbb
jno
jl
sti
adc
lock
cmp
mov
xchg
cltd
out
cmp
jg
fwait
movsb
inc
lahf
sbb
pop
in
ret
test
outsb
jp
or
loopne
push
jle
in
stos
add
lods
jbe
loop
xchg
gs
mov
cli
sub
ffreep
pop
lcall
jmp
pusha
cli
cli
mov
test
cmp
jns
mov
into
mov
sub
ret
push
push
jb
loop
cmp
aas
dec
pop
adc
scas
xorl
mov
lock
sbb
daa
lds
pop
xchg
cmp
xchg
int
lock
mov
test
aaa
test
test
mov
ja
std
mov
and
inc
sbb
mov
pop
and
hlt
in
out
dec
loop
lea
add
out
lahf
js
jne
jno
mov
inc
into
insl
loope
cli
loop
sti
enter
sbb
shlb
mov
cld
pop
sti
or
jecxz
jl
cmp
push
rcrb
pmulhw
mov
or
sbb
mov
sahf
scas
ficoml
movsb
out
mov
aaa
xor
adc
xchg
jb
fildll
push
imul
jg
push
les
aas
jmp
cmpsl
inc
push
pop
xchg
dec
rcll
mov
mov
imul
fstps
pusha
pop
bt
lret
and
xchg
pop
and
rcl
std
sub
dec
mov
gs
and
test
sbb
xor
lds
xchg
fsubrs
pop
inc
fdiv
movsl
sub
cwtl
loope
jbe
mov
out
in
lea
mov
lcall
or
cmpsl
sub
stc
pop
sbb
imull
mov
and
sub
cld
orl
out
enter
add
xor
scas
lods
lods
mov
jb
leave
insl
lcall
pop
lea
mov
test
mov
or
fstpl
nop
and
adc
fmuls
push
sbb
xor
dec
cs
pop
mov
or
adc
cmp
xchg
dec
push
inc
pushf
je
xor
cld
sub
add
push
das
mov
mov
push
lock
mov
in
xchg
jmp
push
xor
xor
ret
out
mov
mov
imul
push
and
mov
sbb
rolb
outsb
jl
jno
inc
and
and
mov
jbe
movsb
pop
sbb
xlat
es
push
outsb
adc
mov
aam
lods
repz
mov
or
cmpsl
mov
push
int
jbe
in
leave
mov
cmpsb
pop
jle
xor
test
inc
mov
dec
xor
fldl
or
data16
push
test
add
and
push
stc
jg
arpl
imul
or
in
or
clc
into
pop
or
and
push
mov
add
sbbb
adc
mov
lcall
dec
out
mov
aam
xor
pop
cmp
and
andb
adc
enter
xchg
cwtl
fadds
cmp
lea
insb
test
cmp
fs
lret
dec
xchg
ljmp
sub
mov
stos
pop
cmp
mov
add
xchg
sbb
outsl
push
or
cmc
repnz
and
incl
imulb
cli
mov
in
fsubrl
test
jne
inc
sbbl
inc
imul
fisttps
adc
out
mov
adc
clc
cltd
push
mov
aaa
jne
pop
xchg
fcmovnb
mov
lahf
in
jno
mov
cmp
cmp
std
mov
inc
aas
cmp
pop
mov
leave
pop
ljmp
mov
jbe
das
mov
jb
push
xchg
dec
call
sub
movsb
out
lock
test
mov
xchg
sub
push
sbb
sbb
and
push
push
ret
mov
lods
jns,pn
int
lcall
jp
lret
adc
addr16
jp
lret
inc
mov
je
xchg
mov
scas
mov
pop
sub
dec
cmpsl
dec
subl
call
clc
sub
mov
int
mov
jle
call
add
icebp
cltd
or
lahf
gs
sbb
sub
cmp
int3
or
pushf
adc
inc
arpl
and
jge
lods
sub
hlt
in
adc
or
daa
xchg
sbb
and
pop
dec
adc
xor
incl
insl
hlt
std
or
lret
jl
sbb
and
jge
lock
pop
idivb
push
ret
out
aad
cmp
ret
into
and
pop
iret
hlt
cmp
out
lods
pop
jp
add
mov
jl
jne
int
stos
adc
pop
or
ja
inc
mov
jno
negl
jmp
cmpsl
mov
lods
mov
add
push
daa
sbb
or
lcall
cld
pop
lods
sub
es
push
aaa
and
test
mov
xchg
pop
lcall
cmp
xchg
in
movsb
leave
dec
xchg
shlb
mov
loope
std
jecxz
jmp
into
sbb
mov
ds
gs
sub
add
pop
mov
out
sbb
adc
pop
lret
scas
jnp
pop
test
inc
push
xchg
xor
add
or
push
es
jle
push
fxch
or
push
rorl
out
insl
mov
int
or
sbb
js
ja
pop
mov
push
jae
std
dec
in
mov
imul
sub
aam
enter
push
outsb
cltd
and
add
ret
jnp
ja
int
xchg
adc
or
jecxz
xchg
pop
pop
jnp
pop
dec
pop
call
dec
mov
dec
in
hlt
call
push
jmp
mov
insl
insb
inc
cltd
cmpsb
paddd
push
std
cli
enter
xorl
in
and
adc
fwait
jo
ds
stos
jo
lret
mov
xchg
xchg
jnp
outsb
rcl
jmp
sub
or
movsb
cld
ja
jmp
and
sub
inc
int3
adc
in
jmp
push
test
cmp
xchg
mov
push
pop
push
cmp
lea
sub
jo
sahf
cmc
aas
cmp
jl
pusha
pop
jle
in
push
inc
int3
adc
xchg
dec
mov
gs
das
pop
pop
ss
out
and
inc
mov
cmp
rorb
loopne
dec
lds
jecxz
xlat
jo
sbb
out
jno
pusha
jmp
lds
sub
fsubl
jns
fcoml
mov
lcall
dec
xor
cltd
sti
out
cmc
cltd
jecxz
xchg
and
xchg
shlb
xor
aas
xor
jecxz
fmuls
xchg
shlb
or
xchg
int
sub
add
je
fmuls
cmp
int
xchg
enter
and
cwtl
adcb
push
mov
adc
add
call
add
cld
jne
inc
cli
xchg
addr16
pushf
scas
aaa
mov
pop
stos
add
add
jl
push
jno
outsb
inc
mov
int
jmp
addb
or
inc
rclb
inc
pop
adc
test
les
adc
dec
iret
push
sub
xchg
push
jg
and
push
push
fldcw
cld
jb
mov
mov
push
mov
jg
push
inc
xor
in
cmp
jnp
push
xchg
push
jb
pop
dec
and
repnz
stc
pop
push
mov
push
lds
xchg
xchg
inc
push
cmovg
filds
jmp
divb
sbb
sub
out
pushf
ss
xor
in
arpl
and
loop
ficoml
xchg
repnz
mov
push
lods
dec
jne
jge
and
aad
sub
pop
sbb
sahf
push
out
or
and
rorb
xchg
add
dec
stos
dec
sbb
xchg
rcll
xor
inc
mov
pop
dec
out
push
fimull
cmp
cld
pop
cmpsb
dec
pop
or
stos
pop
cltd
popf
fdivs
jmp
jae
jg
push
mov
aas
jg
push
lahf
jmp
out
sbb
flds
lcall
and
mov
pop
jp
arpl
sub
cs
sub
mov
sub
outsl
int
jne
xchg
mov
pop
and
popa
shl
je
pusha
mov
cld
mov
mov
sbb
cs
xchg
inc
fmulp
push
cli
mov
xchg
cmp
mov
rcll
cmp
call
iret
xchg
pop
fisubl
push
iret
ret
into
cs
fadd
mov
ss
fmulp
roll
insl
fdiv
sbb
sbb
adc
inc
push
add
clc
cld
pop
inc
jae
push
in
iret
sbb
stc
fsubs
pushf
cltd
and
lods
pop
xchg
jle
pop
pop
mov
inc
add
movsl
repnz
les
dec
adc
negb
add
les
xchg
int
mov
sbb
pop
add
int
cmp
mov
xchg
mov
jo
loopne
push
or
mov
mov
imul
aaa
call
loopne
repz
lahf
fwait
xchg
push
push
lret
dec
dec
and
inc
je
dec
mov
xor
sub
andb
cltd
push
cmp
test
mov
mulb
loop
pushf
cmp
fisubrs
sub
in
testl
sbb
fiadds
cmpsb
cmpb
lcall
adc
stos
and
push
adc
mov
inc
mov
rorl
mov
xchg
jb
insb
in
jl
out
popf
xchg
daa
mov
add
rcrl
pop
pop
loopne
aas
movsb
bound
sarl
aam
aas
mov
mov
addr16
sub
das
adc
add
jae
stos
cmp
std
and
jnp
inc
fistpll
mov
pop
and
bound
and
popf
cmp
xchg
mov
dec
data16
daa
bound
dec
sbb
push
iret
jb
xchg
icebp
pop
push
mov
pop
xchg
iret
sub
pop
cmp
add
push
test
sbb
pop
nopl
idivl
pop
pushf
inc
rep
mov
xchg
fmuls
pop
adc
mov
mov
xor
jp
dec
pop
pop
loop
pop
jmp
repnz
test
xor
sahf
xor
lods
mov
fisttps
ret
jbe
push
pop
pop
arpl
mov
loop
scas
mov
xor
cs
iret
dec
jns
mov
jae
jmp
fs
or
push
mov
lods
pop
sbb
xor
pop
addb
and
push
daa
push
pop
shl
and
stos
enter
ljmp
shrl
mov
popa
loopne
pop
jg
and
mov
dec
cs
push
fiadds
mov
inc
or
and
jmp
cmp
sub
fisubs
mov
stc
cmp
cmp
lods
inc
add
pop
sub
push
loope
push
repz
inc
and
xor
lds
cwtl
stos
fistpl
push
arpl
pop
mov
int
mov
aaa
insl
dec
fwait
jbe
ret
inc
adc
inc
mov
cltd
imul
aas
sbb
sub
je
xchg
data16
mov
fbstp
pop
adc
int3
dec
adc
push
fsubrl
xchg
clc
bound
in
les
mov
xchg
inc
mov
fstps
mov
mov
mov
xor
into
add
daa
xorl
jbe
hlt
mov
jae
xchg
cmp
xchg
inc
hlt
or
out
push
call
scas
loop
das
shlb
inc
mov
xchg
hlt
inc
icebp
out
mov
dec
sbb
dec
les
addr16
push
dec
push
dec
or
xor
scas
mov
ja
out
xchg
fscale
push
mov
pop
fs
push
jge
lea
or
mov
xor
in
inc
idivb
cmc
adcl
out
outsl
mov
cmp
int3
cmp
out
cli
push
fnstsw
add
sub
aam
jp
sbb
repnz
aas
test
or
test
enter
sbb
and
popf
cmpsb
out
shlb
mov
or
mov
stos
xor
mov
cmp
adc
lcall
lret
fnsave
fucomip
lods
cmpsb
rol
xlat
notl
and
adc
inc
xor
cmp
dec
andb
dec
fdivrs
adc
lsl
sub
outsb
popf
add
add
sub
scas
dec
cmp
push
test
sub
push
push
pop
mov
and
mov
in
push
push
add
xchg
jg
xor
cmp
js
inc
adc
jle
add
xor
xor
sbb
mov
push
cmpsb
xlat
ds
lods
and
pop
add
je
out
xchg
gs
fcompl
in
cmp
cmp
fiadds
pop
aaa
in
js
jle
jecxz
push
fistpl
push
add
and
lods
sub
fsubl
sbbb
aas
or
mov
mov
imul
add
mov
icebp
sub
jo
xor
cmp
je
fmull
in
lret
mov
aam
adc
inc
jg
mov
xchg
mov
ror
inc
popf
jno
mov
jae
outsl
mov
andl
loopne
jne
xchg
sub
lahf
pop
fs
into
out
xchg
adc
outsb
cmpsb
or
jle
or
icebp
xlat
adc
orb
lods
out
rorb
push
mov
loope
sub
insb
arpl
mov
movb
mov
into
push
in
mov
add
mov
test
les
sbb
add
mov
adc
mov
jo
push
xor
sbb
inc
or
pushf
shrl
pop
imul
push
push
popa
call
mov
mov
cmp
sbb
cmp
mov
mov
push
jno
test
daa
cli
pop
xchg
movsb
mov
xchg
xchg
ss
inc
push
add
or
loope
leave
aam
dec
imul
mov
add
push
dec
iret
scas
lock
fldcw
pop
jg
fisubrl
jns
push
test
pop
sti
sub
testl
or
or
or
add
pop
lret
loope
jmp
aas
sbb
inc
nop
lret
idivl
mov
xchg
fadds
test
cmpsb
push
xor
dec
repz
aaa
out
adc
sbb
push
lret
xchg
cs
imul
mov
imul
jmp
lcall
cmpsb
xchg
xchg
shlb
aas
mov
pop
adc
enter
test
scas
shll
fwait
fwait
or
add
imul
or
lahf
or
inc
cmp
dec
push
inc
lahf
test
adcb
fisubrl
jge
call
jns
adc
div
movsl
cmpsb
jns
inc
and
frstor
or
fwait
jo
push
jbe
fnclex
cmp
mov
xor
sbbl
xor
mov
sub
cltd
xor
mov
and
sti
xchg
out
in
sbbb
test
dec
ror
stc
xchg
push
cmpl
pop
orl
push
and
fwait
daa
mov
xchg
test
dec
sub
in
add
daa
lret
es
sub
and
mov
sbb
dec
mov
and
mov
cli
scas
inc
inc
dec
nop
dec
std
mov
out
push
flds
jne
test
xchg
inc
or
int
adc
adc
xchg
lods
inc
cmpb
imul
pop
fildll
sub
mov
jns
je
ficompl
hlt
dec
xchg
cbtw
addb
push
shlb
jl
cmpsb
inc
and
stos
mov
xchg
subb
gs
les
fiaddl
pop
mov
cmp
gs
loope
subb
adc
daa
xlat
xchg
cmp
imul
sub
ret
cs
dec
aas
test
mov
mov
out
loop
clc
adc
out
jp
movsb
lods
cmp
mov
inc
mov
adc
je
pop
popa
mov
in
dec
les
test
dec
dec
jl
stos
repnz
sti
fdivrl
lods
adc
dec
ret
aam
push
call
insl
lea
jle
sbb
cmp
and
mov
and
adc
xchg
das
pop
ds
sub
jb
faddl
or
push
xchg
clc
sub
and
das
xchg
mov
lcall
inc
cwtl
sbb
dec
mov
add
cmp
ja
repz
ret
das
sarb
lods
movl
push
and
in
popf
add
mov
mov
outsb
jp
aam
cltd
es
fnsave
pop
daa
insl
adc
sti
dec
int3
cmp
fisttps
adc
mov
push
clc
daa
cld
add
outsb
or
lods
aaa
dec
inc
scas
lcall
inc
adc
popw
mov
mov
jnp
push
mov
loopne
jnp
or
xor
push
imul
adc
lds
orl
inc
jmp
dec
pop
inc
jmp
popf
enter
sub
jmp
dec
push
xchg
into
pop
pop
fnstcw
jne
mov
pop
mov
stos
cs
out
xorl
or
cmp
adc
xor
push
aaa
sub
fisttpll
xchg
ss
dec
scas
pusha
cmp
movsl
push
adc
sub
jmp
adc
push
insl
popf
xchg
or
dec
push
inc
mov
xor
bound
test
mov
ret
jle
sbb
cmp
push
jbe
std
je
cmpb
in
mov
jmp
mov
aad
mov
int3
movsl
xor
mov
iret
push
shll
pop
push
xchg
into
lods
insl
xchg
sbb
jns
loope
push
push
out
push
fstpt
es
push
sbb
cltd
aaa
and
outsl
xlat
mov
or
lahf
jns
in
adc
scas
ret
pop
jae
bound
adc
add
lock
mov
jne
push
js,pn
sbb
jae
pop
push
push
addr16
in
dec
lcall
out
push
cld
rcr
lahf
jg
push
push
lret
push
out
push
and
add
mov
cmc
dec
push
out
xchg
inc
inc
lea
cmp
in
loop
shr
add
ss
xor
test
out
fcmovu
pop
cmc
es
leave
push
in
mov
fstp
jle
std
push
cmp
aas
bound
lahf
adc
jns
aam
fstpl
xchg
idivl
lods
mov
xor
enter
test
push
les
hlt
ja
jno
jmp
xchg
fwait
ja
aad
dec
daa
mov
loop
bound
and
outsb
leave
sub
pop
int
mov
fucom
mov
mov
add
adc
pop
push
ror
add
inc
add
mov
shr
push
lock
inc
scas
pusha
dec
psraw
cmp
shrb
mov
je
mov
sub
in
insb
mov
jecxz
sahf
mov
push
dec
xor
cltd
movsl
push
mov
aam
stc
ret
mov
in
out
mov
lcall
push
nop
xor
nop
stos
fdiv
jmp
cmp
mov
adc
out
mov
stc
mov
push
es
and
mov
test
and
xchg
mov
rorl
inc
xchg
jge
dec
jge
loope
mov
lret
in
xchg
inc
in
push
adc
jne
xchg
jg
test
pop
add
mov
fstpl
cwtl
stos
outsl
rcrl
push
out
pop
pop
xor
pop
lret
inc
fcoms
xchg
xchg
inc
lret
xchg
in
mov
xlat
sti
dec
loopne
inc
sub
xchg
sub
ljmp
in
xor
arpl
or
lret
mov
scas
and
add
insl
shll
adc
sbb
lods
and
fs
or
push
sub
int3
and
adc
adc
insb
inc
and
sbb
xchg
cmpsl
cmp
xchg
and
lods
inc
ret
inc
xchg
xor
or
ret
xchg
xchg
call
add
push
daa
popa
jb
push
pop
fnstenv
add
mov
sbb
loope
inc
sbb
xor
mov
shrb
pop
daa
adc
and
shll
sahf
in
dec
xchg
pop
popf
jge
push
adc
mov
mov
in
mov
push
out
cmp
mov
sbb
adc
dec
or
adcl
int3
jo
jb
and
pop
push
xchg
pop
pop
mov
inc
xlat
cld
out
mov
jno
bsf
push
cmc
mov
mov
js
adc
rclb
loopne
or
popf
in
adc
sbb
mov
popf
mov
addl
lcall
pop
repz
ljmp
mov
addr16
cmp
sti
xor
mov
ds
dec
cmp
data16
cmp
lret
jl
shrl
fucomp
lods
data16
aaa
push
mov
or
sahf
mov
in
negl
adc
add
cmp
lea
pop
xchg
pop
push
inc
jmp
and
pop
enter
sub
dec
stos
subl
incb
rorl
push
pop
in
les
sub
andb
push
mov
shlb
jo
xor
adc
xlat
bound
mov
jecxz
mov
mov
adc
pop
jg
and
add
gs
test
lea
faddl
add
jo
vpaddb
loope
mov
bound
js
xor
scas
xchg
cmp
mov
lcall
sahf
mov
mov
and
xor
adc
mov
xchg
dec
xor
jno
push
stos
stc
bound
adc
or
ja
dec
mov
outsl
cmp
xchg
jne
add
outsl
sbb
stos
mov
mov
mov
sub
outsb
scas
sbb
cmpsb
or
add
inc
jle
pop
mov
pop
mov
popf
cs
roll
nop
sbb
and
sarl
mov
loop
das
and
cwtl
adc
jge
mov
test
push
add
div
ja
jp
jmp
sti
or
in
mov
ret
into
dec
adc
xor
cwtl
mov
stos
fs
jne
mov
inc
mov
inc
jnp
push
repnz
out
jbe
loope
cmp
cli
lahf
ficompl
in
mov
pop
test
push
jbe
fsubs
pop
mov
mov
fcoml
insb
cmp
jg
rolb
sub
and
mov
mov
sbb
in
or
jb
adcb
fcoms
adc
jmp
push
jo
std
adc
jg
jae
jns
call
loope
rorl
loope
aaa
mov
test
pop
pop
cs
sub
es
pop
jl
sub
jmp
negb
xchg
and
lods
stos
jae
lods
xor
mov
adc
insl
jo
jmp
mov
xchg
cmp
mov
dec
scas
xchg
dec
xor
mov
loop
negl
enter
xor
push
mov
cmp
add
adc
mov
sbb
loope
arpl
xchg
mov
pop
mov
std
xchg
push
jnp
xchg
mov
or
jbe
xchg
cmp
out
xor
add
andl
and
jo
dec
mov
mov
rcl
fcoms
and
out
iret
and
cmp
mov
adc
pop
rorb
ret
mov
xlat
lds
sbb
jmp
add
imul
xchg
xor
pop
dec
mov
cmc
mov
mov
jne
pusha
lods
mov
and
lock
jge
cmp
cmpsl
mov
int3
into
inc
push
push
pop
ficoms
push
sbb
in
xchg
ja
xor
in
loop
outsl
xchg
add
inc
mov
mov
jmp
pop
cmp
repnz
dec
mov
and
outsb
les
adc
mov
mov
adc
inc
mov
cmp
push
movsl
xor
fwait
mov
mov
lahf
and
lock
push
push
test
push
mov
inc
sbb
nop
mov
stos
repnz
xor
shrl
xchg
testl
insl
lcall
inc
shr
xor
fldt
or
push
data16
cmp
jno
sub
cltd
sbb
mov
jge
adc
dec
shll
hlt
iret
jno
in
push
push
sub
xchg
stos
inc
cltd
pop
decl
cmp
jne
mov
fsubp
jno
and
push
call
push
js
jl
mov
in
cmp
lea
or
lods
das
jp
outsl
repz
mov
inc
pop
mov
flds
xor
inc
leave
lds
mov
lahf
mov
insb
loopne
in
popf
pop
push
push
insl
mov
shll
iret
or
outsb
daa
dec
xor
and
inc
cld
add
lret
cmp
fdivs
test
sti
mov
pop
push
jns
ror
adc
cli
add
push
or
mov
jle
dec
mov
das
push
or
adc
jp
int3
jae
fildl
sbb
cmp
jmp
fwait
sarb
aas
inc
xchg
pop
and
popf
addr16
push
lods
stos
in
pop
lret
inc
mov
mov
in
mov
cmp
scas
xchg
mov
jl
lds
pushl
push
stc
lock
sti
mov
xlat
mov
xor
daa
jge
shrl
aaa
cmp
mov
adc
in
scas
fdivs
jecxz
icebp
mov
dec
test
pop
sbb
test
fisubl
dec
mov
rcrb
mov
test
add
ficomps
sub
push
insb
inc
sbb
aam
mov
jns
int
repnz
dec
or
out
movsb
mov
data16
xchg
test
push
sbb
pop
es
imul
cltd
sub
pop
es
push
mov
inc
cmc
ret
pop
mov
pop
test
ret
push
add
scas
rorl
or
cwtl
clc
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
test
jl
out
mov
sti
loopne
push
inc
inc
in
clc
jl
cmp
jo
push
inc
pop
or
js
je
jae
decb
lods
mov
ficoms
or
leave
sub
cmc
ljmp
fbld
xchg
test
fwait
xrelease
or
inc
push
push
mov
sbbl
xchg
and
jmp
push
ds
sbb
addr16
inc
push
shrb
fwait
sub
jge
out
in
test
call
xor
fnstsw
and
dec
cmp
xor
iret
mov
addr16
mov
jmp
fwait
push
bound
cmp
xor
mov
pushf
repz
mov
movsb
mov
push
inc
imul
xorb
dec
push
adc
sbb
movb
lods
inc
cmp
jecxz
xor
xchg
adc
mov
arpl
nop
lock
enter
int3
adc
xchg
rorb
dec
in
adc
call
stos
je
lret
arpl
fldcw
aad
stos
xor
cmp
xchg
and
adc
push
dec
mov
xor
sub
push
xor
xchg
cmc
sub
ds
arpl
and
lds
pop
outsl
sub
insl
inc
fimull
insb
mov
addr16
pop
stos
adc
cli
sub
sbb
cmpsl
testb
cmp
xchg
push
push
and
xchg
popa
jge
fcmovnu
cmpsb
adc
or
js
insl
bound
inc
jne
movsb
adc
hlt
or
adc
stc
pusha
sub
hlt
dec
mov
sbb
xchg
stos
cmp
dec
xchg
xchg
test
push
sub
xor
test
sbb
fisubs
ja
mov
cmp
cmc
pop
dec
push
jecxz
fwait
call
and
icebp
jmp
jle
andb
mov
out
movsb
push
sub
mov
test
pusha
out
push
mov
ds
ss
insb
dec
mov
pop
xchg
daa
mov
adc
inc
jecxz
ror
aam
mov
dec
adcb
loope
inc
inc
mov
out
or
or
loope
rcrl
sti
movsb
sbb
shll
jbe
mulb
jg
outsl
sahf
inc
xchg
ret
sarb
inc
adc
push
or
and
push
dec
aam
fldl
dec
xchg
lea
stos
jp
pop
subb
dec
test
lock
jle
mov
sbb
mov
jnp
inc
mov
inc
push
int3
push
and
leave
loop
or
mov
rclb
add
or
stc
adc
aas
pop
vmwrite
add
mov
pop
std
jecxz
lret
enter
jbe
std
jl
mov
push
mov
adc
adc
dec
cmp
popw
js
mov
jmp
sbb
jmp
out
pop
repz
push
es
jge
xor
iret
mov
jecxz
cmp
xor
cwtl
aad
sarb
out
fisubrs
dec
push
adc
push
mov
loop
lahf
inc
loop
rorl
imull
test
xchg
insb
es
idivl
imul
fsts
and
dec
jo
xchg
adc
xchg
es
fildl
sbb
enter
push
cmp
sub
cmp
pop
cmp
es
and
adc
mov
sbb
xchg
and
jns
push
mov
ss
rorb
mov
add
sub
ss
inc
clc
cwtl
mov
out
fisttps
mov
mov
ljmp
shlb
mov
lds
outsb
and
inc
pop
outsl
pop
pop
sub
cmc
lods
add
lds
mov
ja
jmp
sub
in
add
xor
das
ja
fwait
push
in
test
sub
pop
lret
test
push
enter
out
shll
lods
adc
xlat
fdivrs
cmc
enter
mov
inc
push
loope
push
xor
mov
xchg
movsb
ficomps
shll
push
cmp
dec
mov
add
xchg
ret
jp
dec
add
dec
nop
leave
jge
int3
subl
sub
dec
mov
inc
lahf
sub
lock
sub
inc
xchg
push
add
popa
add
mov
popa
sbb
mov
outsl
ss
and
movsl
sbb
call
add
xchg
sbb
fs
xor
add
cli
xchg
clc
clc
cwtl
pushf
add
push
jle
out
jnp
mov
push
ret
cmp
bound
jb
aad
loop
addr16
add
sub
push
mov
fisttpll
andps
pop
jge
leave
inc
cmp
dec
fidivrs
push
inc
or
ret
push
aad
xlat
sub
out
lret
cmp
es
in
in
loopne
or
jmp
in
push
add
inc
jns
movsb
jb
mov
mov
lret
cmpl
int
mov
js
ret
les
sub
mov
pushf
adc
pop
cmpsb
scas
jnp
cmp
cwtl
fimull
jp
xor
inc
imul
push
cmc
jmp
or
or
in
scas
jg
push
jp
lret
into
ds
dec
inc
adcb
arpl
push
loopne
mov
fisubrl
test
dec
mov
xor
in
lret
mov
push
icebp
mov
inc
mov
adc
jp
push
jg
mov
or
mov
in
repnz
andb
mov
push
rcll
shlb
addb
inc
sbb
movsb
ss
insb
mov
cwtl
pop
pop
push
mov
cmp
loopne
pop
mov
testb
push
push
in
push
sbb
popf
or
rolb
dec
ljmp
test
adc
and
jge
jg
mov
push
push
aaa
iret
dec
mov
lock
imul
sbb
loop
pushf
jbe
or
mov
popf
sub
lock
lret
lret
arpl
in
sub
lods
test
adc
dec
mov
mov
ficompl
clc
mov
test
faddl
into
xlat
mov
sti
adc
imul
mov
and
dec
mov
push
shl
dec
aam
sbb
inc
mov
shll
fldenv
mov
stos
mov
lock
cmp
in
xor
adc
xchg
imul
push
jmp
outsl
xchg
xor
cmp
fs
sbb
mov
jl
sbb
loop
inc
das
jae
into
or
inc
mov
fmull
or
xor
enter
test
inc
jns
cmp
int3
rorl
outsl
cmp
fwait
push
mov
arpl
mov
imul
test
push
xchg
xchg
adc
push
mov
mov
jecxz
loop
pop
cwtl
lea
jne
mov
les
andl
mov
sub
fisubs
pop
xchg
cs
scas
lods
lea
int
xor
push
pusha
mov
aaa
hlt
cmp
adc
mov
jns
incl
mov
cmpsb
fidivs
daa
sti
sub
nop
mov
mov
mov
lea
pop
push
fdivs
add
add
pop
dec
sbb
ds
dec
jl
cmp
gs
jecxz
mov
or
pop
pop
dec
sbb
jnp
lret
xchg
int3
jnp
pop
sub
xor
int3
xchg
inc
cwtl
stos
into
adc
sub
fiaddl
mov
inc
bound
jl
addr16
int3
adc
sub
xchg
push
push
add
mov
imul
sub
jae
lods
dec
inc
cmc
xor
pop
jecxz
mov
shll
push
cmc
incl
leave
fwait
adc
subb
fcoms
stos
jns
aaa
push
loop
scas
sub
mov
xlat
xchg
dec
and
mov
sar
jmp
jge
mov
adc
push
push
out
pop
fnstenv
in
inc
fildll
int
xchg
push
inc
loop
loope
int
out
jo
dec
mov
movsl
mov
jbe
jg
pop
shll
inc
mov
adc
in
mov
inc
stos
nop
sub
loope
push
jbe
imul
push
push
outsb
fldcw
mov
push
mov
xchg
add
and
rolb
stc
lods
adc
jecxz
mov
jmp
pop
incl
push
inc
pushf
mov
and
daa
div
mov
je
outsb
and
pop
mov
out
out
xchg
sub
xor
or
or
pop
push
sbb
inc
push
xlat
dec
pop
cmp
xchg
xchg
int
inc
mov
rcll
jae
jne
fildll
stc
cwtl
pusha
mov
jl
out
inc
mov
lods
mov
jo
es
mov
addb
pop
adcb
xchg
movsl
adc
imul
push
xor
xchg
mov
sub
push
mov
aad
ds
loop
js
roll
cltd
sbb
mov
or
cld
xchg
negl
fbstp
push
cltd
popa
inc
xor
xchg
ja
mov
inc
std
stos
mov
or
and
stos
inc
xchg
popa
sub
insl
nop
jb
adc
js
pushf
cmp
jle
or
fstl
mov
push
enter
cmp
push
sahf
fstps
sbb
arpl
jb
push
pop
xrelease
sbb
outsl
js
and
adc
into
sub
push
cs
push
jg
sub
lods
and
and
mov
lret
add
imul
jl
add
mov
mov
in
test
pop
add
cmp
mov
lods
sub
test
cmpsl
mov
xchg
dec
into
ljmp
inc
mov
mov
mov
push
popa
pop
fisttps
jb
pusha
jle
ljmp
mov
and
adc
cmp
cmp
or
iret
jmp
and
mov
cmp
mov
push
push
cmc
outsl
movsb
sub
and
push
lds
adc
cld
neg
add
into
call
pop
pop
inc
push
cli
add
lret
call
jbe
sub
and
or
faddl
jbe
mov
fldcw
addb
lcall
inc
add
lock
push
inc
mov
into
pop
sbb
js
sub
pushf
aam
movl
jmp
mov
xchg
loopne
dec
cmc
push
scas
mov
mov
dec
mov
sub
and
aad
ds
out
and
add
push
mov
mov
pop
ds
push
das
push
out
adc
mov
cli
shl
bswap
dec
push
or
or
jmp
js
lahf
fs
mov
in
mov
adc
jae
xor
jle
mov
add
ret
pop
or
xchg
lcall
inc
fs
fsts
xchg
lods
leave
add
clc
mov
sbbb
scas
dec
insl
sahf
xor
enter
sub
in
mov
push
jl
sbb
jl
fcmovne
frstor
ret
sub
xchg
insl
lods
test
pusha
into
outsl
add
jge
xor
ds
jmp
stos
pushf
add
sub
into
arpl
mov
jno
mov
jge
and
aam
xor
dec
mov
scas
sbb
imul
aas
lea
bound
imul
loop
out
dec
push
xor
push
pop
clc
inc
lahf
scas
cwtl
pop
or
mov
or
loopne
imul
aaa
lock
in
dec
cmp
inc
jl
jnp
fwait
mov
addr16
add
rcr
and
ja
xor
mov
shll
leave
loop
xor
jecxz
cmp
leave
scas
mov
jg
xchg
mov
inc
loope
in
pop
not
leave
sbb
and
pop
dec
mov
popa
sbb
cmpsl
outsl
ds
mov
jne
mov
inc
pop
cmp
mov
jmp
in
repnz
js
or
sbb
jns
repz
pop
sub
rcr
mov
jg
cmp
fisttpll
jne
loop
pop
dec
icebp
ret
lods
mov
push
dec
stc
push
iret
push
std
pop
inc
inc
in
sti
sarl
movsl
fadds
dec
jmp
add
rcll
and
icebp
inc
roll
inc
stos
hlt
fcom
mov
xorl
and
add
lock
rcrb
xchg
les
xchg
xchg
push
mov
movsl
sbb
mov
js
mov
fs
push
in
ds
lahf
bnd
dec
pavgw
adc
jp
pushf
cmp
sub
out
pop
push
cmpl
imul
inc
dec
push
pop
outsl
or
push
jo
shlb
cs
aad
mov
xchg
mov
sbb
mov
mov
push
cmp
shlb
xor
pop
sub
daa
or
bnd
cmp
or
fiaddl
test
dec
out
std
cmp
push
and
sbb
sub
fwait
mov
inc
push
and
xchg
xchg
cmp
roll
fsub
adc
ja
add
sub
lods
sub
add
popa
test
xlat
rcll
sbb
int3
aaa
gs
outsb
cmp
push
mov
jo
iret
jg
pop
cmp
mov
arpl
jae
pop
inc
les
insb
daa
cmp
xorl
xchg
mov
sbb
jae
mov
scas
sbb
out
popf
jg
popa
xor
bound
sub
test
sub
mov
lea
xor
sarb
mov
imul
cld
and
ljmp
xchg
jge
mov
adc
rdtsc
inc
adcl
push
ljmp
mov
sbb
jne
loope
inc
jne
xor
pop
sbb
mov
loope
jns
sub
and
add
roll
inc
scas
lock
dec
mov
daa
sub
xchg
push
imul
popf
stos
pop
fdivrp
jmp
sahf
mov
decb
fwait
inc
cmp
sti
and
jb
nop
mov
nop
add
sub
std
push
xlat
test
and
sub
xor
int
jg
dec
sbb
push
loope
mov
cmp
and
addr16
lods
mov
ljmp
or
dec
lea
jecxz
inc
sti
xchg
and
jno
stc
jle
fadds
loopne
cmp
push
inc
js
adc
or
jo
lret
xorb
dec
jno
mov
pusha
jns
dec
cmp
xchg
addr16
pop
test
fs
stos
enter
or
jp
pushf
or
test
rol
outsl
push
or
add
jmp
int3
fists
stc
das
or
movsb
call
cmpsb
add
dec
ja
fsubrs
clc
pusha
lds
jmp
xor
cmpsb
loope
add
pusha
or
es
leave
add
jne
test
push
leave
fs
jmp
into
inc
mov
rol
cli
lret
loop
stc
pop
adc
out
fiaddl
mov
pop
shll
repnz
notl
lret
cmp
out
sbb
neg
mov
jnp
test
and
xchg
mov
inc
shl
jns
cmpsl
aaa
fisttps
jno
addr16
pop
lcall
shrl
pop
jae
push
push
subps
and
xlat
inc
lods
hlt
lret
xlat
int3
int
mov
rorl
ds
jns
insb
ljmp
aad
mov
daa
js
and
xchg
sub
xor
in
pop
push
mov
fxch
in
inc
dec
jae
pop
push
stos
jg
jmp
dec
into
mov
lret
inc
cmp
sarb
std
dec
push
push
shll
rclb
push
inc
stos
rcl
shlb
xchg
std
inc
icebp
std
xchg
push
out
mov
nop
pop
loopne
sub
dec
jbe
fbld
pop
sub
adc
sbb
mov
inc
in
rcll
scas
call
fsub
mov
movsl
lea
sarb
and
cmc
jmp
or
pop
push
fists
fs
mov
and
lret
sbb
push
stos
dec
ficoms
dec
mov
out
sbbb
push
rorb
rcrb
cmp
stc
push
loopne
push
xchg
dec
ss
dec
movsl
es
cmp
int3
push
je
dec
sbb
enter
test
movsb
pop
cmp
pop
dec
mov
push
test
iret
aas
mov
movsl
mov
rclb
pop
dec
mov
or
std
mull
insl
dec
xchg
jnp
push
cs
adc
or
addr16
ret
push
or
jnp
cmp
imul
cmpsl
lods
je
fstpt
sbb
sub
push
loop
push
lea
lcall
pop
mov
jp
jecxz
mov
push
es
test
mov
adc
jl
sub
jns
imul
div
aam
mov
lods
and
mov
popf
or
addr16
or
in
rclb
mov
push
and
leave
jne
addr16
lcall
sbb
fwait
jns
fsubs
movsl
and
add
ljmp
je
mov
cmp
inc
xchg
xor
add
test
mov
loope
xchg
add
jns
pop
push
out
and
movsl
gs
decb
push
out
jb
adc
add
sub
das
mov
lods
add
lcall
mov
imul
push
mov
dec
mov
insl
popa
out
into
add
in
mov
lock
mov
mov
nop
sbb
jbe,pn
mov
mov
outsb
int
sub
pushf
sarl
jle
push
sub
gs
push
std
ss
cmp
jg
outsl
leave
xor
int
inc
lret
dec
mov
mov
cmc
mov
outsb
mov
cmpsb
push
inc
mov
insl
mov
dec
ja
fucom
dec
popf
mov
xorl
cmpsl
jl
cmpsl
fisubl
jecxz
lods
cmpsb
xchg
js
enter
inc
std
lods
rcll
in
js
mov
pop
and
xor
js
loop
fdivs
jp
sub
les
pop
mov
push
dec
scas
push
lods
dec
adc
sahf
jge
jns
adc
or
sub
aam
std
xchg
shrl
pop
lock
fadd
xchg
mov
jp
sub
cwtl
mov
cmp
xor
jl
cmp
cld
sub
jecxz
imul
in
cmp
cmp
adc
jmp
fsts
imulb
dec
xchg
pop
cmc
mov
inc
mov
push
imul
pop
lods
push
pop
xchg
dec
test
fnstenv
aas
push
adc
cmp
ds
fpatan
push
bound
lret
mov
pop
imull
cmp
sbb
pop
clc
sbb
scas
or
push
rolb
fsts
or
pop
daa
push
mov
je
das
shrl
shrb
in
cmp
mov
push
cmp
popa
call
insb
xchg
jae
pop
cmpsl
sbb
jge
cltd
and
lcall
icebp
test
cmc
enter
and
adc
sub
jle
sbb
jmp
and
or
or
add
and
jno
movhps
xlat
into
daa
shl
pop
push
mov
sbb
lds
mov
out
sbb
das
ret
jnp
cmp
es
sbb
outsl
data16
pop
frndint
or
mov
sbb
cmp
lds
pop
sub
add
fs
fistpl
fsubs
pop
pusha
fwait
scas
fdivs
test
lock
cmp
aaa
fs
test
push
fcomip
daa
push
mov
dec
imul
jle
jne
lds
push
adcl
lcall
add
test
and
stos
in
pop
pop
test
push
ja
fcom
mov
jbe
sbb
mov
aad
sbb
pusha
push
inc
inc
push
std
adc
pop
or
jne
inc
cmp
adc
ficomps
or
dec
dec
mov
push
fidivs
jmp
es
sbb
sub
mov
imull
or
jle
push
mov
sub
mov
mov
mov
cmp
sub
jle
sbb
rorl
fdivrl
jge
or
imul
cmpsl
cmpsl
dec
daa
dec
fimull
inc
stos
adc
mov
gs
cmpsl
pop
rolb
mov
sbbb
fmuls
xchg
faddl
dec
mov
out
fs
mov
pop
mov
fstl
fsubrl
imul
mov
pop
or
stos
cwtl
xor
or
mov
aas
cmp
stc
and
dec
push
push
push
xchg
call
and
fsubr
leave
add
xor
xchg
rorb
in
out
push
push
add
xor
enter
rcl
aad
pop
divl
les
outsb
add
adc
lret
and
mov
sub
orb
pop
adc
xchg
mov
jne
xchg
pop
push
rclb
jne
aam
dec
and
pop
jge
fidivrl
aas
jbe
loopne
dec
mov
les
std
fwait
lret
cmpsl
out
pushf
mov
jbe
repnz
cmp
rcll
lds
add
gs
mov
test
xlat
lods
inc
stos
js
add
or
cmp
loope
sbb
loop
sbb
movntps
bound
int3
mov
in
cmc
stos
push
mov
xorb
mov
ss
das
push
sahf
jb
stos
mov
test
es
push
add
pop
test
sub
sarb
and
push
mov
flds
sbb
pop
sbb
leave
arpl
push
les
stos
inc
push
xchg
gs
fidivrl
push
cmpsb
inc
or
lahf
jae
pop
cld
xchg
in
sbb
lock
cmc
mov
inc
xchg
xchg
ds
sti
xor
jbe
inc
jae
ret
ror
cmp
movsl
pop
inc
xchg
mov
jae
mov
dec
and
xchg
sbb
sub
dec
cs
loope
mov
xor
popa
xlat
ja
cld
mov
mov
andb
pushf
imul
xor
sbb
pop
dec
pop
pop
push
ret
cmp
loop
mov
mov
mov
notb
push
sahf
es
add
sub
or
sub
dec
scas
push
and
sbb
sub
or
rolb
aam
loopne
jle
lock
push
cmpsb
pop
jb
cmpsb
test
add
rorb
and
arpl
pop
ja
lods
add
push
add
icebp
fildl
jecxz
fs
push
mov
stos
aaa
or
xor
in
pop
stos
xchg
add
dec
mov
pop
sbb
sbb
inc
movsb
pusha
and
stos
or
push
pop
ds
pop
cmp
adc
popa
outsl
xchg
inc
fstpt
fwait
sub
ret
rcl
mov
mov
and
repz
testb
and
insb
sub
insb
xlat
fisubs
push
cltd
cli
cmp
int3
mov
repnz
sar
push
int3
and
pop
jae
lods
and
das
lds
xchg
pop
fs
adcl
test
hlt
les
xor
or
cmpsl
or
xor
push
outsb
das
mov
dec
mov
lcall
pop
imul
mov
pusha
push
cld
xor
outsb
sub
test
js
push
outsl
xor
cmpsb
ficoms
aaa
ss
int
int3
les
cwtl
adcb
xchg
div
sti
jns
inc
out
mov
cmp
xor
and
xchg
fisubl
xchg
inc
dec
bound
dec
sbb
movsb
jb
icebp
sti
fabs
int3
dec
shl
mov
mov
dec
push
cwtl
cmpsl
in
lods
push
cli
jmp
iret
idivb
clc
fsub
mov
stc
mov
lcall
mov
ljmp
imul
lcall
movsl
and
pop
into
xlat
and
movsb
imul
lock
incb
test
cs
scas
out
xchg
mov
loope
cmpsb
pushf
sahf
cwtl
mov
iret
js
inc
data16
and
adc
loop
in
dec
pop
push
ja
jae,pn
mov
sub
js
movsb
xlat
mov
xlat
mov
int
inc
xchg
push
jae
lods
push
jle
out
pop
dec
hlt
iret
stos
pop
popa
int
dec
mov
cmp
add
xchg
mov
insl
cmp
mov
add
or
stos
adc
nop
lret
insl
stos
cmpsl
repz
push
add
cmp
inc
lods
and
in
test
fstpt
dec
pop
push
xchg
lock
test
add
cltd
or
repz
and
fcoms
and
dec
subb
push
out
addr16
adc
cmp
in
adc
negl
aaa
les
stos
xlat
inc
int3
adc
mov
inc
in
decb
sbb
mov
dec
or
fwait
enter
add
mov
dec
xor
push
aad
decb
xorl
dec
dec
adc
push
shll
imul
inc
lock
xchg
scas
ss
mov
and
xor
sub
mov
push
outsl
jo
xor
adc
mov
stos
lret
stos
mov
ja
mov
jno
fs
aaa
or
add
mov
inc
cmp
xor
dec
pusha
jle
stc
and
adc
sub
loope
movsb
cmp
pop
fs
xchg
mov
adc
jl
mov
add
jbe
and
aas
adc
pop
out
sub
ret
es
pop
cli
loop
test
pop
clc
mov
lahf
mov
mov
xchg
lahf
dec
jp
add
int
fisubrs
sbb
or
rol
scas
ja
add
imul
pop
dec
push
push
jb
lret
mov
push
inc
xor
mov
inc
cmp
sbb
cmp
jnp
daa
fistps
call
mov
mov
aas
adc
xor
mov
xor
mov
xchg
mov
in
adc
adc
mov
in
insb
fwait
out
mov
xor
xchg
inc
aad
adc
sub
add
andl
subl
sub
fs
addr16
mov
test
pusha
addr16
mov
fsts
sti
aam
pop
idivb
cmp
out
cmp
sbb
rep
mov
or
fldcw
inc
push
je
push
sbb
out
jbe
loopne
xor
inc
fisubs
lcall
pushfw
aaa
js
shll
sub
or
shlb
fnstcw
fcmovne
xor
aad
mov
lods
nop
push
lods
and
add
push
pop
mov
xor
mov
xor
scas
popf
xchg
inc
jno
xor
pop
sub
mov
fnstcw
pop
ret
add
aas
and
leave
jbe
jle
sbbb
insb
mov
fcmovbe
xchg
push
imul
mov
cwtl
fildl
push
outsb
stos
xor
imul
pop
in
scas
jb
int3
push
inc
fistpll
push
lret
inc
sahf
cmp
push
xchg
xor
faddl
xchg
dec
and
dec
inc
jle
jnp
idivb
mov
lods
aaa
push
test
lock
mov
cs
aam
lret
gs
testb
mov
aaa
ret
jecxz
pop
pop
and
imul
mov
cwtl
clc
sbb
dec
xchg
fs
scas
rcl
mov
and
insl
insl
sahf
sub
outsl
adc
cmp
jge
shl
mov
mov
and
arpl
in
pop
jbe
inc
xchg
les
in
push
pop
imul
int3
pop
mov
into
ror
lret
lcall
scas
nop
ds
mov
jns
sbb
pop
sub
jecxz
mul
mov
push
or
imul
mov
clc
mov
cmpsb
cli
imul
cmpsl
rolb
pusha
mov
mov
jecxz
adc
inc
jmp
fists
mov
fiaddl
mov
pop
xchg
fidivs
movsb
pushw
pop
xchg
mov
cmp
into
add
bound
and
in
mov
mov
mov
xchg
pop
or
stos
mov
jg
test
int3
xor
in
filds
push
xchg
mov
push
dec
daa
mov
lock
xlat
in
in
ljmp
add
adcl
mov
mov
sbb
xchg
jbe
xchg
cs
mov
cmp
ret
xor
mov
std
jl
push
shl
sbb
push
scas
pusha
jnp
adc
cld
jle
scas
push
mov
xor
stc
ja
clc
pop
repz
popa
imul
cld
test
fwait
adc
push
fabs
mov
repz
jecxz
mov
mov
jno
sub
or
xor
scas
sbb
or
out
mov
sub
jg
mov
adc
mov
sahf
testl
loop
xchg
mov
ljmp
inc
sbbl
test
jmp
add
xchg
psubsw
pop
shrb
repz
and
mov
add
outsb
cwtl
xlat
xor
sub
push
cld
aad
ss
cli
idivb
or
lods
or
sub
pop
leave
inc
js
sub
rorl
inc
fstpt
and
adc
push
cltd
cli
push
mov
cmp
lcall
cli
push
movsl
push
mov
repnz
mov
or
pop
cmp
aas
shlb
jp
lods
or
jle
inc
out
pop
ret
pushf
mov
xchg
rolb
icebp
cmp
jnp
lods
and
jp
adc
push
shlb
add
pop
negb
jb
push
adc
cltd
sarl
mov
popf
xor
xchg
inc
imul
lds
pop
push
in
dec
inc
or
call
stos
mov
call
out
lahf
leave
out
imul
fsubrl
add
mov
fsubr
mov
fisttps
lahf
ljmp
into
inc
jno
or
cwtl
push
lahf
sub
mov
ret
sarl
insb
inc
out
jle
mov
outsl
dec
sbbb
dec
enter
jno
sbb
ds
jmp
dec
dec
jno
cmp
iret
out
cmp
xor
push
dec
mov
in
cld
mov
in
hlt
test
mov
jbe
inc
fsubrl
add
mov
das
mov
repz
xchg
aas
push
xchg
movsl
inc
addl
inc
jne
dec
sbb
jne
xlat
dec
fwait
adc
lods
push
imul
add
fs
push
push
stc
cmp
cmp
enter
inc
and
push
cmp
fsubs
out
dec
mov
repz
and
jecxz
push
jg
inc
mov
and
arpl
jmp
les
jo
leave
cli
or
mov
imul
shrb
jmp
lret
fcmovnb
aad
xchg
in
mov
add
lcall
clc
cli
fwait
mov
sub
mov
mov
add
jmp
popf
add
xchg
adc
pop
in
mov
jnp
fstpt
pop
addl
xlat
call
divb
lahf
add
sub
pop
jp
aad
xchg
aad
push
dec
and
cmp
cmpsb
ficoms
mov
inc
fadd
push
psrlq
jo
outsb
lcall
inc
lods
cltd
jp
ficomps
sub
nop
das
dec
jle
fwait
xchg
cmp
ret
adc
bt
xchg
cmc
mov
std
cwtl
adc
es
fldcw
aas
mov
jo
cwtl
insb
dec
adc
fwait
lahf
popf
loopne
cmp
movsl
mov
stos
mov
jge
aad
fwait
and
jp
mov
cltd
or
addb
or
sbb
xor
inc
ds
inc
mov
sub
sub
mov
mov
xor
in
mov
pop
sbb
fisubl
jnp
push
mov
jl
inc
push
iret
loopnew
xlat
mov
and
mov
sub
mov
add
adc
bound
mov
and
adc
bound
fbld
loope
xchg
repz
mov
xor
outsl
ss
jnp
adc
rorl
imul
mov
out
icebp
pop
fdivl
dec
or
jl
xchg
pop
xchg
inc
push
rcl
xchg
addr16
and
stc
movsb
cmpsl
aam
stos
add
insl
cmp
push
xchg
addb
or
or
pop
push
test
out
aas
daa
mov
repnz
pusha
jl
popa
into
movsb
dec
push
pop
mov
fbld
in
sahf
leave
jns
js
jmp
cmp
dec
fimull
mov
xchg
addr16
imul
xlat
add
data16
rcr
xchg
das
lods
fs
push
mov
mov
sti
mov
icebp
movsl
arpl
mov
xchg
inc
mov
pop
jno
adc
xchg
cmp
xor
mov
mov
adc
nop
faddl
enter
lea
jns
adc
push
in
xor
inc
inc
cwtl
xor
xor
lea
aad
outsl
xchg
das
iret
mov
outsb
ljmp
xor
xchg
add
lods
int3
test
jns
jmp
push
xchg
pop
push
cmp
sub
add
pop
in
outsb
jo
cmc
and
in
stos
cwtl
and
fstpt
mov
inc
cld
loop
gs
ss
rcr
sub
mov
in
scas
push
repz
xor
cwtl
mov
aad
or
push
and
clc
push
push
sbb
jbe
fnstenv
and
dec
push
mov
dec
cmc
cmp
mov
ret
jne
inc
xlat
stos
fs
cld
insb
cmpsl
lahf
mov
ljmp
lret
jg
lods
fwait
sbb
xor
mov
lret
add
out
push
or
hlt
inc
sub
outsb
ret
xchg
and
fsubs
add
mov
jl
mov
sbb
jg
jl
daa
stos
aas
outsb
push
or
push
mov
and
sub
clc
mov
cmp
mov
inc
sub
cmp
jecxz
movsl
mov
stc
pop
or
or
sahf
dec
scas
das
cmpsl
dec
mov
mov
cmp
xor
pop
and
jle
dec
ja
clc
sub
das
pop
xchg
stos
cli
xchg
js
mov
stos
cmp
in
pop
popw
dec
and
adc
outsl
add
mov
adc
lret
gs
aas
imul
mov
dec
sub
xchg
shll
mov
xlat
pushf
aam
clc
in
xor
fstl
adc
dec
push
jns
jp
push
pop
data16
aad
std
mov
pop
leave
pusha
outsl
cmp
jmp
stos
dec
mov
arpl
sarl
inc
mov
pop
mov
push
and
mov
xchg
jb
popf
addb
add
adc
add
mov
push
add
sbb
mov
sti
mov
pop
cmp
and
clc
mov
or
xchg
mov
lock
inc
mov
mov
clc
jmp
gs
stos
arpl
xor
cmc
insl
incl
pop
sub
imul
cmp
and
dec
divl
pop
repnz
pusha
jb
jns
ret
fnstenv
fstps
in
hlt
pusha
je
mov
mov
loop
out
inc
cmp
repnz
or
jmp
sub
mov
cli
jbe
iret
push
insb
sbb
std
ljmp
jne
push
das
packsswb
or
arpl
or
mov
inc
mov
adc
sbbl
pop
add
and
fst
xor
jae
sbb
out
test
mov
outsl
icebp
pop
adc
es
mov
hlt
pop
pop
inc
insb
aam
jbe
xchg
mov
fimuls
fdivl
fildll
cmp
cmp
mov
out
daa
cmp
packuswb
inc
mov
iret
inc
or
inc
xchg
fwait
mov
dec
push
ds
add
jl
dec
sub
or
fcomip
pop
and
fcomps
cmp
aad
cmp
daa
xchg
jg
mov
fisubrs
mov
leave
pop
dec
cmp
mov
mov
jecxz
mov
outsl
inc
push
notb
cmc
xchg
jae
cmp
mov
les
rcr
mov
add
mov
inc
cmp
push
rcrl
push
cld
jb
push
call
dec
lret
sbb
jle
aaa
in
mov
pop
cwtl
or
push
loope
mov
xlat
rorl
xlat
loop
pop
jno
push
das
ljmp
jo
push
dec
in
sbb
dec
repz
pop
movsb
xchg
fdivp
mov
cmc
stos
insl
xor
rcrb
push
int3
lahf
xchg
inc
sarl
addr16
xor
les
je
bound
mov
and
mov
imul
out
nop
jbe
fisttpl
xchg
sbb
pop
add
fld
push
mov
cld
mov
jno
stos
jmp
cmpsl
cmp
mov
loope
nop
jo
imul
fsubrl
subl
int3
pop
inc
push
aaa
pushf
dec
dec
adc
cmc
call
jae
pop
fildll
cmc
cmpsl
fstps
pop
xor
fldt
movl
hlt
enter
daa
cmc
cltd
mov
dec
cs
clc
adc
aad
popf
dec
xor
push
es
test
packssdw
jae
in
stos
imul
push
inc
lcall
or
mov
push
mov
push
popf
inc
xor
divb
pusha
mov
xor
mov
call
mov
cltd
ss
jp
push
pop
jo
mov
xchg
or
mov
push
jmp
cmp
xchg
jmp
push
and
leave
inc
cld
enter
add
xchg
jle
adc
jns
push
daa
outsl
mov
lds
notb
sbb
orl
cmpsb
repz
addr16
mov
lret
xor
jmp
adc
jmp
leave
adc
popa
mov
cmpl
aam
adcb
lret
or
dec
mov
sti
cld
out
aas
push
mov
and
mov
jmp
fstpl
cld
in
sub
insb
flds
leave
fidivrl
jnp
cmp
fwait
dec
pop
xor
xchg
out
insw
insb
lret
mov
jge
test
jmp
arpl
mov
push
adc
arpl
scas
stos
push
xor
out
xorl
les
xor
ja
addl
fldl
jae
jecxz
sahf
add
imul
cwtl
inc
test
mov
cmp
add
and
lahf
leave
into
inc
adc
push
lock
lcall
cmp
pop
jns
and
lods
popf
mov
dec
xchg
or
dec
inc
mov
out
sti
dec
scas
aam
push
inc
and
movsb
cmpsb
mov
aaa
xchg
or
xor
mov
rolb
adc
sahf
inc
or
hlt
lcall
add
mov
fcmovnbe
push
je
icebp
mov
mov
leave
sahf
loop
xchg
adc
mov
jo
xor
or
movsb
pop
lret
and
adc
push
sub
push
pop
dec
xchg
mov
xor
loope
mov
sbb
outsl
add
ret
sub
cld
stos
inc
ss
test
int3
adc
imul
movl
push
aaa
in
jmp
in
into
fbstp
and
loope
push
cmp
xchg
shll
xchg
sub
pop
imul
adc
and
movzbl
dec
adc
sbb
pop
adc
loopne
into
sub
daa
jmp
mov
arpl
sub
sbb
test
mov
adc
pop
jp
mov
popa
jbe
mov
mov
xor
mov
jo
stc
shll
fnstenv
dec
mov
dec
and
sub
scas
clc
clc
inc
and
sahf
sahf
and
sub
cmp
jns
daa
xchg
pop
mov
mov
loop
sbb
push
and
inc
inc
fistl
shlb
stc
cs
pop
jns
mov
mov
and
lcall
mov
movsl
jnp
sbb
cltd
fcompl
xor
ljmp
push
in
andb
iret
daa
dec
jbe
lret
and
mov
lcall
imul
cwtl
push
mov
fists
xchg
ds
roll
imul
imul
outsl
xchg
insb
sbb
push
push
push
push
pushf
call
sar
sub
inc
sub
mov
jecxz
ss
mov
xchg
movsl
pushf
mov
test
mov
sbb
out
xchg
sub
stos
adc
jnp
insb
scas
cli
mov
sti
popa
ljmp
adc
and
jcxz
dec
xor
andb
mov
jb
rcl
mov
pop
add
or
sbb
jmp
add
std
fmulp
rcrl
inc
sub
pop
fcom
push
es
int3
push
inc
sbb
stos
scas
mov
popf
push
xor
outsl
repz
lret
cmpsl
mov
imul
xchg
add
movsl
xchg
jbe
cmpsl
enter
out
inc
cld
push
mov
data16
outsb
addl
out
jbe
xchg
lea
xor
jmp
fwait
pop
jno
adc
pop
stc
mov
push
stc
add
cmpsb
sar
mov
idivb
pop
sub
sbbl
inc
js
stos
std
shrl
or
push
fwait
sbb
push
inc
lret
xchg
aam
ljmp
or
jge
into
mov
dec
xchg
inc
add
insb
push
sbb
loopne
xor
pop
xor
dec
subl
loopne
jmp
hlt
pop
cmpsl
cltd
jecxz
add
lods
adc
dec
sub
in
sbb
pop
dec
fisttpll
jae
fldcw
inc
mov
test
cs
decl
ss
incl
mov
adc
sahf
xor
jo
int3
addl
sub
into
pusha
mov
cmp
int3
in
mov
push
test
jp
fwait
xor
xchg
mov
xchg
test
faddl
pop
fadd
mov
sbb
in
enter
dec
sbb
add
jle
jbe
add
pop
lods
mov
and
aaa
sub
lock
mov
jns
mov
aas
cwtl
lahf
scas
xchg
jmp
adc
jg
push
int
pop
push
or
vphaddudq
mov
scas
mov
jp
int3
ret
add
mov
push
cmc
add
dec
out
bound
or
sbb
adc
dec
mov
negl
repnz
cmp
and
stc
aas
sub
sbb
inc
out
mov
dec
inc
movsb
sti
icebp
or
adc
subl
pop
out
mov
adc
xchg
pop
adc
call
lock
cmpb
sbb
movsl
pop
jne
mov
int3
jae
jl
adc
mov
sbb
cmp
lods
push
adc
push
test
mov
enter
pop
mov
sti
xor
jge
stc
mov
inc
adc
inc
or
xchg
mov
bound
test
mov
push
ljmp
lea
arpl
and
outsl
jbe
pop
xor
dec
cmpsb
out
mov
and
xchg
pop
mov
sub
nop
adc
int
jbe
xchg
or
xchg
scas
movsb
daa
imul
sbb
mov
jbe
test
shl
cld
clc
data16
lds
icebp
pusha
mov
gs
enter
jmp
mov
imul
mov
push
in
test
xor
xchg
mov
call
rol
mov
ret
mov
mov
std
mov
rcrl
jl
or
aam
adc
daa
data16
xor
pop
pop
out
ljmp
cmpsb
jnp
cmpb
xor
push
fcoml
int
movsl
nop
adc
mov
lods
lea
mov
pop
jge
loop
jbe
adc
daa
add
dec
jge
nop
push
daa
sbbb
insl
xchg
int
rcll
mov
dec
xchg
pop
out
dec
sub
outsb
adc
push
lahf
xor
outsl
push
add
adc
shrl
out
pop
orb
call
sbb
push
aam
mov
push
push
push
mov
mov
jo
jo
inc
repz
cld
push
iret
daa
cmc
xchg
scas
out
cmp
outsl
icebp
sbb
scas
mov
or
adc
imul
outsl
lahf
das
cmp
add
pop
jnp
jp
dec
mov
lds
pop
xor
or
push
popf
push
push
ds
xor
arpl
dec
enter
gs
outsb
inc
lods
cmpsl
xchg
push
in
sbb
mov
rcr
mov
movsb
ds
pop
mov
aam
push
popf
cmp
jb
fs
inc
xchg
cmp
sub
iret
ss
daa
int3
adc
scas
adc
sbb
xchg
ficoms
test
in
and
jnp
paddd
jns
lret
aaa
jle
push
dec
nop
call
ds
mov
loopne
push
push
fdivl
add
dec
fwait
pop
mov
sti
into
push
pusha
mov
xor
outsl
jge
scas
push
xor
cmp
ds
mov
and
aam
jle
mov
cmpsl
pop
dec
test
hlt
mov
push
or
add
ror
mov
xor
mov
mov
daa
cmp
and
imul
and
sbb
adc
sub
in
sbb
push
xorl
inc
scas
bound
sbb
outsb
xor
push
out
inc
fwait
cmpsl
cld
into
push
dec
jle
je
scas
mov
sbb
push
sub
dec
add
movsb
xlat
xchg
inc
lret
ja
xor
repnz
rcl
out
jae
shl
fists
aad
mov
pop
out
dec
pop
int
adc
js
rclb
fadd
mov
or
xchg
lret
nop
cmc
je
es
jbe
pop
inc
lods
adc
xchg
inc
xchg
cmp
mov
iret
inc
js
inc
cmp
jns
pushf
int3
inc
inc
and
jl
and
mov
inc
les
adc
ljmp
mov
xor
negb
popf
notl
xchg
pushf
cld
dec
or
push
js
lret
iret
sub
shrb
pop
call
ret
jnp
mov
insb
jecxz
or
sbb
sbb
call
hlt
xor
rcrl
xchg
out
cmpl
xor
dec
xchg
inc
mov
imul
pop
mov
inc
cmp
jne
dec
shr
out
lods
xor
loop
add
cld
add
cmp
addr16
pop
gs
andl
mov
sbb
fcoms
fucom
scas
pushf
mov
pop
scas
xchg
jle
mov
mov
push
das
test
sti
subl
ret
out
lods
cmp
icebp
cmp
andl
aad
out
shrl
xor
pushl
stos
sbb
mov
sub
mov
inc
cmpsb
fwait
cmp
add
mov
inc
mov
pop
addr16
fstpt
loop
add
movsl
imul
or
hlt
xor
cld
scas
sbb
mov
xor
sbb
mov
xchg
stos
jne
movsb
jo
lods
pop
loop
andl
xor
inc
popf
inc
push
fimull
mov
adc
int3
jge
pop
lcall
xchg
pop
add
in
sahf
mov
loopne
xchg
mov
or
add
loop
and
jno
mov
lret
or
sub
mov
rcl
mov
sub
insl
aad
cmpsb
and
inc
scas
sarl
lds
stc
xor
mov
or
into
roll
imul
in
mov
mov
xor
orl
cmp
xchg
sahf
jl
das
arpl
mov
xor
mov
or
xchg
xor
jnp
adc
cmp
shlb
fistpll
repz
push
out
mov
shrl
pop
xor
in
and
xor
dec
pop
int3
rolb
jecxz
in
imul
jae
jmp
xchg
sbb
adc
jns
adc
mov
lea
cmpsl
adc
mov
mov
sbb
pop
clc
cltd
push
jmp
mov
movsl
xor
mov
sti
mov
mov
sbb
test
xadd
repnz
ret
outsl
sub
jb
bound
push
push
inc
popa
test
outsb
xchg
fwait
mov
xchg
cmpl
xchg
test
bnd
mov
negl
mov
mov
outsl
sbb
rorb
mov
mov
jg
and
ret
fildll
push
inc
loopne
xchg
push
push
jae
mov
jp
sub
stos
xor
push
sbb
mov
daa
sub
pop
or
or
and
mov
sub
pop
and
or
std
aam
inc
sub
cmpl
inc
and
imul
test
je
ret
xlat
jecxz
mov
adc
lcall
jecxz
pop
ss
xor
es
pop
and
push
int
outsl
mov
test
cmp
mov
mov
add
je
repz
aam
aad
mov
xlat
add
pop
in
cmpsb
sub
mov
jge
sbb
or
lods
or
lret
mov
bnd
add
cmp
pop
push
outsb
cmp
or
lahf
xlat
cmpsb
gs
mov
in
movsb
into
icebp
and
js
or
outsb
jno
sti
cmp
pop
push
xchg
test
push
scas
sub
xchg
orl
dec
mov
sbb
sbb
leave
sub
pop
pop
mov
daa
cmp
imul
ret
mov
cltd
pop
mov
loopne,pt
cmc
adc
push
xchg
sub
mov
inc
les
xor
xor
pusha
cmp
xor
dec
or
fsubl
fistps
aaa
mov
mov
sahf
or
lea
push
xor
lock
repz
cltd
pop
xchg
arpl
fwait
cmc
mov
sbb
xor
call
aaa
and
mov
leave
push
inc
and
or
scas
sub
pop
dec
add
mov
leave
mov
iret
addr16
adc
sahf
ja
bnd
pushf
in
insb
adc
stos
jo
xchg
push
fwait
push
sbb
jl
jecxz
je
cmp
xchg
push
jnp
add
mov
xchg
das
cmp
jno
js
add
adc
pusha
in
arpl
sub
xchg
fldl
fwait
xchg
int3
loopne
mov
cs
ss
sbb
test
fs
loopne
push
jecxz
in
cld
sbb
daa
dec
mov
cs
int3
sbb
aad
fs
imul
pop
mov
and
cmpsl
inc
popf
cmp
lods
mov
sbb
inc
test
std
stos
adc
popa
cmc
fidivl
pop
in
subb
mov
mov
and
dec
pop
xlat
sti
xor
das
adc
xor
xchg
xchg
xor
and
arpl
gs
and
cmp
cwtl
dec
or
call
sub
push
add
jae
fidivrs
ret
xchg
mov
popf
bound
lahf
push
cmp
inc
stc
xor
or
push
mov
call
ljmp
fisttps
popf
sub
jecxz
jecxz
test
add
fbstp
add
and
and
push
mov
and
xor
das
or
aam
inc
lret
inc
add
jae
mov
mov
dec
stos
inc
ljmp
test
loope
add
daa
dec
cli
test
imul
push
rolb
add
dec
or
fsubl
xor
cmp
clc
mov
aam
popa
cmp
dec
sub
fwait
leave
mov
std
xor
jo
mov
repz
lret
and
xlat
push
mov
rcr
push
cwtl
fwait
ret
mov
add
sbb
flds
fidivrs
mov
outsb
testb
add
fisubl
dec
test
xor
cmp
mov
fwait
mov
jge
popf
sbb
fisubrs
xlat
movsb
lcall
loop
or
les
int
stc
and
ret
dec
leave
jno
clc
iret
xor
adc
mov
jg
and
ljmp
std
fiaddl
jmp
lock
sbb
mov
test
dec
in
ss
mov
pop
test
mov
fsubrs
dec
pop
cmc
and
fiaddl
dec
jecxz
inc
lods
outsb
popf
movsl
and
xor
decb
jp
xchg
insl
test
sbb
les
and
into
mov
jle
out
js
stc
ss
xor
pop
arpl
mov
ds
jmp
cmpsl
repz
sub
inc
ret
jl
dec
sbb
in
jno
xchg
mov
mov
xchg
sub
sahf
xor
test
sub
push
rorb
sub
addr16
data16
pop
or
dec
into
jmp
rcr
scas
jl
lods
sub
dec
jno
iret
cltd
push
xor
jecxz
outsb
and
movsl
push
loop
icebp
popf
pop
and
inc
xor
sbb
mov
lea
xchg
sbb
cmp
jns
dec
sarl
lret
xchg
in
dec
push
xchg
test
ds
ret
dec
int
in
stc
fidivl
dec
dec
dec
ss
push
and
sbb
andb
xchg
pop
iret
stos
movsl
jp
fisubl
dec
xor
cmp
push
cli
leave
cmp
xor
push
xor
adc
mov
adc
arpl
scas
movsb
pop
inc
je
push
insl
pop
inc
sbb
mov
cli
aaa
pop
clc
movsl
sbb
lahf
sbb
out
aas
sub
mov
lods
movsl
sarl
incl
pop
sahf
jmp
pop
adc
out
inc
cmc
lods
xchg
arpl
addr16
scas
xchg
mov
fld
mov
outsl
int3
pop
cmp
xor
into
jnp
stos
cmp
filds
xor
lret
jmp
xor
and
cmc
lods
in
clc
lods
arpl
pop
mov
cmp
mov
dec
call
insl
into
push
inc
xchg
cli
mov
pop
ja
and
mov
data16
sbb
adc
or
adc
xchg
rcrb
lods
hlt
cmp
inc
jb
pop
int
rclb
mov
cmpsb
push
mov
adc
mov
inc
testb
jns
xor
and
fcmovne
pop
sbb
fs
data16
shll
mov
loop
adc
xchg
sub
dec
pop
pop
enter
xlat
cmp
orl
insl
pop
bound
sub
inc
sbb
push
cld
mov
ss
xchg
fadd
loopne
xor
mov
das
push
jo
push
inc
push
and
in
jle
enter
arpl
jnp
idivb
xlat
out
cmp
inc
mov
xchg
imul
push
push
rcrb
or
jge
and
adc
mov
xchg
jmp
xor
sti
leave
in
cs
xchg
sbb
xor
dec
mov
inc
jo
or
ret
mov
enter
dec
or
test
popf
outsl
ljmp
in
iret
dec
ret
and
sub
cli
sbb
cwtl
sbb
int
hlt
lret
xchg
sub
jmp
or
daa
xchg
or
test
mov
mov
sbb
xor
and
cmp
mov
xor
dec
daa
lds
ret
lods
in
punpcklwd
pop
mov
les
lods
jmp
sarb
push
out
outsb
stos
bound
dec
inc
pop
scas
ljmp
pop
mov
xor
rol
xchg
push
dec
lahf
mov
lret
dec
ret
scas
inc
aam
xchg
aam
fisubrs
dec
iret
xchg
jg
jmp
xbegin
fildl
movsb
outsb
pop
xchg
fcoml
cmp
pop
bound
out
int
cs
fstl
subl
mov
psrad
cli
loopne
pop
xchg
testb
jecxz
push
cltd
adc
sub
sub
add
stc
test
mov
jnp
and
add
cmpl
and
sbb
fidivrs
mov
fs
lret
repnz
jge
ds
pop
popl
dec
ret
test
push
and
cmp
push
ljmp
sahf
sub
pop
iret
cmpsl
repz
adc
les
adc
mov
loop
mov
push
jo
call
ret
cs
pushf
pop
aad
pop
icebp
mov
add
push
pop
in
fcoml
xchg
aad
push
mov
repnz
mov
jg
call
ret
push
jbe
mov
rcr
cli
mov
bound
imul
rcll
mov
inc
jns
imul
jp
inc
mov
xor
sar
dec
ja
adc
cmpsb
inc
inc
or
out
inc
pusha
pop
push
mov
cmp
jmp
lcall
lods
add
cwtl
imul
ds
out
mov
mov
cwtl
xchg
jmp
mov
lods
fisttpl
or
mov
and
in
mov
mov
icebp
adc
mov
mov
cwtl
pop
and
and
pop
orl
dec
sub
lret
jbe
sub
mov
lods
test
adc
in
xchg
cmp
insl
ljmp
mov
mov
fsubs
adc
mov
xor
pop
bound
fistpll
dec
popa
push
xchg
jp
push
ljmp
or
inc
sbb
mov
mov
inc
jl
shll
xchg
dec
lret
cmpsl
loop
xor
mov
dec
mov
dec
mov
call
dec
nop
cmp
mov
sbb
fsubr
enter
outsb
ret
fisubs
sub
add
jg
xor
or
xor
jb
mov
pop
xchg
dec
pop
icebp
pushf
xchg
push
call
outsb
sbb
cld
das
xchg
mov
xchg
aam
and
and
push
incb
inc
cli
and
jbe
sbb
mov
movsl
cltd
cli
stc
xchg
adc
mov
sti
stc
xchg
sbb
pop
jnp
mov
cmp
out
xchg
shll
or
or
add
notl
pop
icebp
adc
pushf
xor
shll
test
pusha
fcmovnu
rclb
mov
call
mov
fimuls
pop
mov
xchg
hlt
add
pop
iret
aas
mov
arpl
fincstp
jae
test
xchg
roll
out
cmp
shr
lret
mov
ret
and
int
sub
mov
jecxz
outsb
cwtl
xor
shrb
adc
cli
xor
in
int
lds
sbb
or
dec
ljmp
pop
iret
int3
ficoms
aad
inc
aaa
mov
call
test
xor
dec
dec
fldl
jecxz
push
push
lret
dec
dec
insl
mov
mov
pop
int3
or
xor
movsl
jnp
testl
in
shl
xchg
adc
scas
xor
sti
das
adc
inc
js
ljmp
lea
mov
pop
xor
sub
ds
push
ljmp
out
arpl
repnz
iret
jg
add
cmc
loopne
fwait
cmp
sub
aas
jle
mov
out
or
sti
mov
rcll
outsb
xor
icebp
mov
pmaxsw
cmp
int
sub
pop
dec
lcall
sbb
adc
lock
rol
sub
jmp
lods
sub
popf
pop
mov
imul
ret
daa
dec
daa
pop
dec
xchg
and
dec
adc
addl
push
ljmpw
in
ljmp
orb
fidivs
ja
gs
dec
mov
data16
cmp
sub
jne
inc
insl
cmp
scas
pushl
mov
scas
loope
cmc
cwtl
into
repz
test
pop
jae
lahf
cltd
stc
xchg
insl
imul
push
out
lock
outsl
mov
call
loope
lret
aaa
add
push
sbb
ljmp
test
or
pushf
inc
fimull
adc
xchg
mov
or
adc
aam
aas
mov
jg
enter
inc
jle
or
fs
mov
popa
fbld
and
mov
mov
test
test
pop
push
mov
xchg
pop
inc
sub
mov
outsb
sbb
mov
aad
jae
add
pop
push
cmpsb
nop
dec
ret
pop
pop
pop
test
mov
pop
iret
out
xchg
cmp
xorb
je
sub
rcrl
das
or
push
fimuls
add
roll
xchg
and
xchg
movsb
int
fdivs
pop
xchg
mov
dec
shll
mov
imul
add
xor
mov
pushf
mov
xchg
pop
test
xchg
jmp
test
sbb
outsb
cmp
ret
and
fisttpll
insl
ja
sub
jo
inc
out
add
pop
mov
jle
inc
divl
pushf
js
out
inc
push
insb
inc
mov
pop
fsts
pop
sub
int3
lcall
gs
mov
sbbl
stc
int
pop
mov
mov
mov
loope
xchg
negl
div
fistpl
sub
aam
cld
xchg
sbb
popl
cmp
je
test
jo
lock
cwtd
sbb
insl
and
add
fsubp
or
sub
shlb
lcall
cmp
xchg
jb
int3
lods
rorb
or
and
ficoml
xor
adc
cltd
dec
fnstsw
shrb
imul
mov
push
pop
pop
leave
sub
addb
and
clc
hlt
cmpsb
imul
and
icebp
mov
sbb
push
mov
push
push
ficomps
pop
dec
and
xor
xchg
and
shll
ljmp
dec
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
fistpll
lcall
fs
mov
cmpl
add
push
mov
loopne
data16
pop
lock
pusha
in
mov
andb
enter
je
pop
fnsave
stos
dec
loopne
dec
mov
push
shll
inc
or
cltd
sub
pop
test
and
aam
sbb
or
mov
leave
jle
jb
adc
test
lahf
aas
nop
cmpb
push
and
dec
lods
and
ret
jmp
xor
add
aaa
cmpsl
in
popf
pusha
pop
pop
jecxz
testb
inc
pop
or
imul
scas
inc
lret
sbb
loope
lock
int3
mov
dec
or
sbb
aaa
lds
js
pusha
mov
pushf
jbe
popf
mov
push
out
sbb
cmp
mov
jo
push
cli
movsl
inc
mov
sub
arpl
adc
hlt
and
jnp
stos
xor
cmp
sahf
dec
mov
sbb
mov
lods
aas
ljmp
into
mov
push
sar
sub
pop
lret
das
mov
dec
cltd
negb
cld
mov
enter
ss
mov
mov
js
jns
lods
push
pop
push
fildl
gs
lods
push
pop
rorl
stos
lock
pop
lret
cli
ljmp
cmpsl
movsl
adc
jno
popf
ljmp
ja
scas
in
cmp
mov
push
fucomi
test
cmp
orb
jmp
or
stos
jbe
popa
outsl
out
jmp
das
xchg
push
or
xor
mov
nop
ss
fimuls
cmp
pop
xchg
jg
xor
cli
rcrb
shll
ja
mov
add
jno
aad
sbb
inc
jno
and
dec
push
iret
mov
pop
stos
mov
mov
inc
out
jae
add
je
cs
mov
mov
in
clc
mov
xor
lcall
mov
push
pop
push
test
aam
xchg
add
andl
shrb
ja
repz
mov
push
jnp
divb
pushf
jo
jecxz
aad
xchg
and
mov
shr
lods
adc
mov
adc
add
ljmp
repnz
and
dec
in
or
stos
inc
adcl
outsb
sub
test
pop
outsl
loop
out
or
repz
mov
andb
fiaddl
pop
pop
mov
jae
sahf
stos
dec
mov
mov
daa
rdpmc
popf
sub
je
das
inc
cld
inc
inc
mov
jnp
xchg
or
js
xchg
mov
pushf
mov
or
sbb
xchg
push
xor
lret
lea
cmp
jge
push
add
imul
and
xchg
inc
push
fs
aaa
fldcw
cmp
insb
push
xor
or
xchg
mov
xlat
sbb
xor
mov
mov
mov
loopne
cmp
gs
add
mov
push
jae
cmpb
sbb
loop
stos
jg
mov
cs
or
push
mov
repz
pop
push
mov
sti
add
sbb
add
xor
js
mov
test
push
mov
pop
punpckhwd
dec
push
arpl
sbb
cmp
mov
and
add
dec
add
jno
cmovg
lods
shlb
in
adcl
stos
and
push
xchg
pusha
xor
jmp
mov
cmpsb
xchg
push
jmp
cs
lods
icebp
hlt
or
sub
loop
iret
scas
xor
xor
add
push
inc
aam
lods
cs
and
fnstenv
xor
jb
loop
push
imul
sbb
adc
cmp
ret
js
std
imull
lods
std
and
sub
cmp
sub
idivb
mov
add
leave
push
xchg
pop
and
stos
sub
sub
and
test
and
jle
ret
ds
std
jae
loopne
decb
addr16
nop
xchg
sbb
clc
inc
push
dec
in
in
int3
int
xchg
jge
mov
mov
jmp
mov
inc
mov
push
out
fisubs
mov
fistps
dec
iret
movsl
lea
es
xchg
mov
add
imul
in
xchg
xchg
cmp
push
or
les
repz
inc
sbb
add
or
mov
loope
mov
xor
and
mov
sbb
mov
pop
add
cmp
push
mov
and
rolb
test
daa
push
cwtl
pop
or
adc
repnz
fstpt
clc
pop
scas
stos
sbb
jbe
call
add
or
adc
jle
jb
mov
push
leave
cs
and
fcoml
jmp
outsl
stos
xor
xchg
mov
and
dec
sub
mov
sub
cmp
shll
lds
push
gs
xchg
and
jno
test
sbb
or
pop
jae
out
cmp
les
jmp
pop
and
fdivl
mov
xchg
push
lcall
inc
mov
add
lea
mov
fdivrl
in
pushf
adc
pushf
mov
hlt
cld
sbb
pop
je
adc
in
scas
mov
int3
in
je
jmp
cld
and
clc
cmp
lock
push
fcomps
shll
and
jo
out
or
lds
jp
pop
dec
or
pushf
sub
jmp
or
or
into
mov
jb
loop
sbbb
enter
mov
add
cmp
cwtl
xor
sbb
mov
inc
jns
mov
sbb
adc
fcoms
cmpsl
outsl
cmc
ret
into
mov
mov
and
mov
xchg
jecxz
jge
fisubl
fstpt
mov
or
rol
mov
popf
je
test
mov
inc
pmulhw
add
sbb
sub
int3
movsl
dec
arpl
mov
push
inc
bound
loop
cmp
jb
jns
mov
sub
enter
xor
mov
or
mov
and
imul
add
fbld
fists
imulb
mov
push
mov
daa
mov
sbb
shlb
sbb
repz
jle
or
lret
adc
das
ds
adcl
inc
scas
repnz
in
push
and
xchg
lcall
dec
inc
mov
loop
mov
mov
out
sbb
stc
orl
jb
cs
sbb
xchg
in
sbb
mov
xchg
dec
and
int3
jp
fnstenv
lcall
or
cmpsl
mov
sub
xchg
push
mov
dec
fwait
imulb
pop
aam
lds
imul
pop
test
setl
pusha
lahf
fdivs
stos
dec
clc
arpl
mov
jp
popf
or
push
icebp
pusha
rcrl
or
fdivrl
xchg
fwait
insb
push
mov
repnz
push
lea
xchg
lret
sub
into
out
cmpsb
jae
jmp
dec
mov
mov
lock
jmp
in
pop
lcall
xor
lea
das
xor
mov
scas
movsl
out
sub
popf
cmp
out
jo
popa
divb
xor
lock
xor
push
or
in
dec
and
mov
or
leave
jnp
or
rorl
dec
sub
pushf
bound
inc
daa
lods
and
outsl
insl
loop
rolb
enter
out
inc
jo
xlat
mov
sbb
jmp
dec
push
lods
sar
call
and
lret
inc
jecxz
sbb
enter
lcall
imul
fst
mov
lock
mov
imul
ret
insl
pop
mov
ret
adc
lret
sar
push
or
imul
repz
out
jge
mov
push
mov
nop
xchg
jmp
cs
lret
adc
leave
cld
jp
adc
enter
test
mov
mov
sbb
movsb
cmp
icebp
out
js
or
repz
or
jg
mov
sbb
and
add
add
out
dec
mov
jp
xchg
lods
inc
and
or
cmp
add
xor
into
inc
sub
sub
xchg
and
js
movsl
jp
mov
inc
xchg
out
notl
inc
xor
enter
or
mov
fidivl
jb
push
xor
mov
push
jb
jno
cmp
popa
mull
xchg
jbe
or
jns
pop
scas
pop
sbb
dec
lods
mov
jb
add
loopne
mov
mov
sub
or
shll
sbb
adc
call
xchg
lods
cld
bound
add
mov
jmp
xor
mov
ds
data16
xlat
inc
mov
out
int3
test
into
mov
mov
bound
xor
xchg
inc
dec
mov
sub
das
add
add
mov
mov
jbe
not
adc
lahf
je
jne
mov
sbbb
sub
hlt
outsb
jno
sub
fisubrl
adc
mov
push
test
inc
idivb
dec
inc
test
cmc
cmp
adc
push
lret
mov
into
or
jns
rolb
lods
int3
and
mov
sti
push
stos
dec
push
sbb
xchg
adc
xor
sub
hlt
adc
sub
pop
mov
lods
jl
aam
cltd
clc
mov
and
dec
cwtl
xchg
stos
movsl
mov
jle
mov
xchg
mov
loop
das
cmp
out
push
data16
push
adc
cmpsl
xchg
mov
inc
add
and
aam
pop
cmp
movb
shll
lea
push
daa
add
addr16
testl
ds
cld
mov
mov
movsb
loope
push
fidivl
sbbb
mov
out
cld
nop
push
cmp
pop
xchg
scas
call
popf
xchg
xor
daa
hlt
shll
jns,pt
dec
insb
adc
shl
int3
xorl
mov
xor
mov
imul
push
xor
stos
adc
hlt
xchg
jne
and
rorl
cs
insl
sbb
fidivl
mov
lods
pop
movsb
add
js
inc
xchg
cmp
mov
aad
mov
outsl
pop
cli
or
or
mov
xor
popa
add
or
xchg
mov
jl
sub
test
sub
rcrl
inc
cmpsl
sub
or
cld
int
cmpsl
insl
std
imul
mov
sbb
mov
jnp
pusha
mov
into
inc
mov
mov
popa
call
mov
push
cmpsl
push
clc
mov
xor
push
mov
lock
push
mov
xchg
stos
popf
arpl
fsubrp
sub
mov
inc
loopne
xlat
aas
imull
or
add
jae
jb
jbe
iret
iret
shll
loope
enter
shlb
imulb
pop
jno
lds
xchg
sbb
aas
stc
cli
out
cmp
fdiv
pop
and
cmpsb
jg
add
mov
xchg
cwtl
mov
jns
fcmove
mov
cmp
test
cmp
jne
outsb
sub
or
repnz
into
ds
mov
stos
add
in
outsl
ljmp
aaa
pop
sub
loop
sbb
rolb
shr
xor
inc
repz
dec
test
dec
jmp
mov
cmp
shll
leave
xor
lock
enter
cmp
lods
movsb
pop
mov
lcall
and
std
aaa
daa
out
test
call
push
ficoml
and
aaa
bound
mov
dec
lahf
loopne
ds
push
pop
inc
mov
cmpsb
ljmp
inc
das
cmpsl
in
scas
push
fistpl
pop
fisubs
dec
and
and
popa
xchg
cmp
call
das
add
inc
ficomps
lods
xchg
mov
cmp
mov
mov
adc
push
lds
decl
or
lods
stos
imul
jge
cmpsl
dec
fsub
fld
mov
pusha
icebp
sbb
pop
mov
in
clc
add
jne
and
xchg
sti
shlb
movsb
cmp
ljmp
pop
cmp
dec
insb
shll
cld
inc
push
das
ljmp
lahf
dec
pop
mov
add
inc
rcll
dec
les
pop
scas
shll
push
cwtl
mov
mov
adc
xor
das
inc
sub
dec
sub
push
xor
movsl
mov
push
stos
push
int
xchg
xchg
or
mov
jmp
ljmp
lcall
lret
je
jb
pop
jne
jns
bound
push
ds
xorl
inc
and
cwtl
loop
push
xchg
daa
mov
int
dec
push
cmp
sbb
stos
xlat
cltd
fwait
roll
fs
imul
repnz
mov
sti
rcrl
psllw
imul
dec
and
mov
mov
dec
test
mov
aad
bound
lods
pop
mov
int
xor
dec
enter
lret
test
xchg
ret
dec
fisttps
idivb
into
mov
cmp
adc
pop
xchg
pop
xchg
repnz
out
ror
fstps
lret
lods
pop
cmpsb
je
xor
and
xchg
popa
shrb
pushf
xor
punpckhbw
repz
adc
jle
mov
ret
mov
pusha
iret
jb
aas
jp
and
mov
shlb
adc
scas
fistpl
inc
lock
adcl
push
repnz
pusha
inc
movsl
dec
push
jno
fmull
pop
mov
xor
inc
roll
and
add
mov
cmpsl
sahf
xchg
fisubs
dec
insb
or
inc
pop
jo
gs
push
mov
adc
cmpsb
jecxz
xchg
gs
mov
mov
insl
and
sbbl
lcall
pop
dec
xchg
mov
add
xor
jnp
push
mov
xchg
mov
xor
adc
cmpsb
cmp
adc
outsl
je
mov
fsincos
outsl
sbb
xchg
pop
js
mov
popa
or
lcall
in
jno
pushf
adc
pop
lret
add
stc
lds
xor
div
sbb
sub
push
mov
xchg
jns
scas
lcall
repz
fisubrl
cmp
sbb
mov
cltd
fldl
mov
sbb
sub
sbb
push
aad
dec
das
or
cli
cmp
cmp
lods
gs
adc
sub
not
pop
add
mov
sub
jl
data16
dec
insb
packsswb
clc
or
es
xchg
xor
jle
add
cmp
sti
xor
lret
adc
and
jno
dec
push
addr16
loop
mov
mov
or
ja
test
jae
mov
cmp
enter
notb
scas
ficoms
push
test
cwtl
insl
cmpsl
ja
xchg
fildl
sub
jbe
sti
lret
ja
loop
rclb
adc
xchg
mov
push
pusha
ss
aaa
es
push
mov
jae
movsl
into
movsb
fdivr
iret
cli
popf
xchg
int
ret
push
sbb
cmp
inc
sub
pop
push
iret
jp
mov
pusha
cmpsb
inc
mov
pop
cmp
push
scas
repz
pop
adc
mov
sub
push
mov
jp
push
mov
dec
or
inc
das
cmp
stc
or
and
iret
xchg
push
test
jns
jo
aas
and
ljmp
std
mov
jns
jno
cltd
add
adc
fdivs
mov
stos
scas
std
xchg
xor
imul
cmp
insb
dec
push
adc
and
inc
cld
xchg
inc
fimull
mov
cmpsl
int3
lcall
mov
jmp
adc
stos
jp
call
imul
dec
adc
and
imul
out
inc
inc
cmc
imull
jl
and
cmp
pushf
or
mov
scas
insl
xor
push
add
mov
aaa
adc
out
sbb
xor
movl
inc
xchg
ret
pop
jae
mov
adc
aas
xchg
mov
mov
mov
mov
popa
in
movsl
xchg
sub
adc
movsl
and
jg
pop
bnd
push
jg
movsb
jb
add
jmp
cmp
sub
insb
xchg
cmpsl
in
cli
imul
fwait
dec
cmpsb
jle
stc
addr16
pop
sub
dec
sub
push
jbe,pn
filds
rcrb
rep
movsl
rol
icebp
lea
push
daa
add
int3
test
dec
cltd
cltd
sub
fdivrs
outsb
lock
ret
movsb
mov
inc
sub
sbb
cmp
or
unpckhps
frstor
pop
mov
jno
out
cmp
leave
rcl
test
pusha
cld
shlb
pop
xlat
push
dec
push
cmp
fcoms
and
dec
add
cmp
lods
fwait
es
pop
add
xor
insl
in
push
or
jg
int
mov
andb
sub
cs
sbb
xchg
pop
push
sub
jne
xor
int3
je
sti
lock
das
sbb
std
cwtl
xchg
pop
and
xchg
lcall
lcall
andb
sbb
cwtl
cmp
or
jne
push
or
xchg
cwtl
jp
sbb
pop
fwait
or
ret
jp
cmp
shlb
pusha
add
stc
mov
pop
add
push
addr16
dec
xchg
xor
inc
loop
inc
inc
dec
popa
pop
cltd
repz
or
aam
data16
xchg
mov
enter
adcl
jecxz
sbb
repnz
cmp
daa
lods
push
inc
ss
adc
mov
cld
or
sbb
jbe
mov
dec
pop
sbb
xlat
insb
fnstcw
mov
out
jnp
gs
mov
mov
test
sbb
addr16
mov
enter
shll
inc
loope
cmc
cmp
shll
xor
dec
insb
cmp
mov
cmp
inc
xor
sub
imul
or
imul
mov
inc
insl
jbe
push
mov
pop
repnz
hlt
push
in
dec
mov
push
sahf
stos
sub
push
outsl
pop
dec
orb
inc
mov
shl
lcall
test
cmp
push
sete
mov
xchg
pop
xor
lock
dec
cwtl
sbb
stos
aam
xor
movsb
movsl
lret
test
lahf
push
iret
fst
mov
jne
imul
sub
mov
aas
push
movsl
push
pop
inc
bound
xchg
dec
fiaddl
lods
fcoms
jle
mov
mov
jnp
neg
lret
idivb
sbb
jp
cmp
repnz
sbb
enter
test
cmp
pop
pop
insb
shlb
push
adcb
mov
lods
sahf
or
xchg
jge
movsl
dec
stc
xor
data16
pop
imul
dec
dec
std
mov
ss
insb
add
add
jno
outsb
repz
cmc
dec
inc
movsb
lcall
seto
and
inc
sbb
inc
mov
adc
out
xchg
mov
fstpt
setge
daa
addb
xor
xchg
push
mov
fwait
test
xor
xchg
fildll
xchg
repnz
rorb
shrl
inc
pop
das
inc
insb
out
mov
jle
inc
mov
popa
test
push
and
dec
lret
add
and
mov
outsb
and
mov
xchg
bound
mov
push
sbb
je
fldcw
jns
cmp
inc
inc
pusha
gs
inc
lret
pop
and
int
fcompl
loopne
invd
mov
xchg
cmp
negb
add
xor
lods
jns
aas
sub
or
or
test
popa
cmp
aam
mov
xchg
adc
test
jmp
jb
scas
cwtl
push
xor
out
xchg
jbe
add
push
loope
shll
sub
shl
mov
mov
mov
mov
aam
leave
sub
or
adc
pop
sahf
and
dec
stos
ret
shlb
iret
rorl
mov
aaa
es
sar
xorb
mov
das
movsb
jbe
add
into
mov
cld
xchg
push
adc
pop
xchg
inc
mov
mov
pop
dec
out
clc
jecxz
pop
and
inc
inc
das
int
mov
and
sbb
clc
out
jae
iret
mov
cwtl
xor
test
mov
sbb
sub
mov
mov
popf
cmpsb
mov
outsb
mov
jnp
adc
inc
cmp
pop
mov
in
add
out
sbb
inc
mov
jecxz
jge
sar
pop
jb
data16
sti
fnstcw
sbb
sahf
repz
cmp
lods
jecxz
insl
dec
loopne
inc
or
daa
and
xchg
add
fucomi
testl
mov
lods
xor
test
sub
jge
inc
es
mov
xchg
jmp
rcl
insb
stos
cmp
lcall
stos
cmp
int
inc
jb
mov
lods
adc
in
adc
cmp
lds
adc
lds
test
xor
cltd
pop
shlb
cmpsl
add
push
rorb
xchg
mov
jl
mov
rcr
popa
data16
inc
jae
cmp
inc
mov
enter
jl
andb
pusha
jge
xchg
xchg
repz
or
mov
pop
testb
insl
sahf
mov
aas
xlat
xchg
add
aaa
push
add
lret
pop
jae
mov
lea
pusha
push
or
mov
dec
fnsetpm(287
mov
movl
push
mov
enter
ret
sahf
lcall
sub
hlt
push
ret
xchg
mov
jns
orb
mov
mov
loope
lret
xor
lret
mov
adc
push
mov
or
dec
adc
popa
adc
rolb
aaa
out
test
xor
aam
outsl
rclb
adc
jns
rcrl
adc
and
mov
xchg
jns
inc
xchg
aaa
mov
mov
cmpsl
dec
mov
rcrb
xor
negl
dec
ja
pop
pop
push
sarb
and
and
std
push
mov
jl
leave
stc
dec
lret
sub
push
stc
sub
or
xor
sub
push
mov
pop
aas
leave
cmp
inc
out
sub
lret
sahf
loopne
xor
ret
mov
xor
xchg
outsl
daa
and
movsb
scas
dec
push
mov
inc
pop
rorb
scas
jb
fcoml
lret
mov
imul
push
sub
dec
enter
in
fstl
push
push
xchg
popl
aas
push
mov
mov
repz
push
ret
inc
push
inc
leave
repnz
mov
ja
mov
fsub
push
lods
pop
loope
cs
cmp
imul
jne
xchg
dec
ja
fsqrt
sub
xor
outsl
cmpsb
jne
out
lea
pop
in
or
insb
sbb
inc
pop
int3
fdivl
stc
pop
fs
push
inc
or
cmp
loope
xor
rcrl
add
cmp
mov
stc
adc
sbb
xchg
dec
pop
pop
cmp
repnz
mov
sbb
in
arpl
mov
xchg
adc
and
or
insl
cmp
fmulp
mov
fistpl
scas
pop
fidivrs
sub
mov
fstl
push
shll
pop
mov
ja
jne
mov
dec
sti
bound
mov
es
call
out
leave
leave
adc
lds
cli
cli
ret
pop
rcl
insl
sub
popa
iret
adc
pop
in
pop
fwait
jae
cltd
inc
cli
hlt
xchg
bnd
outsl
sbb
push
add
les
fidivrs
cmp
and
xor
pop
stc
xchg
test
mov
jae
sub
jbe
ja
adc
test
cmp
cmp
je
inc
cmp
push
out
push
movsl
lock
jge
imul
inc
enter
jmp
pushf
cmp
mov
mov
adc
and
xlat
push
dec
pushf
mov
xchg
lcall
sahf
mov
lock
test
in
subl
hlt
cs
sbb
arpl
lahf
cmp
lret
pop
popa
pop
test
enter
cltd
jno
jmp
jg
fsubl
mov
lods
mov
xchg
xor
loope
mov
testl
xchg
mov
ss
jae
in
sbb
aam
push
subl
insb
stos
mov
ljmp
fidivs
mov
in
out
sti
loopne
mov
mov
pop
stos
and
xor
subl
daa
push
mov
cmp
xchg
xchg
enter
lods
dec
test
cmp
punpcklwd
fs
shlb
adcl
test
and
cmp
and
mov
fbld
faddl
mov
ret
xor
or
jg
and
call
fistpll
sub
int3
jg
xor
adc
mov
test
test
xlat
and
lods
xor
pop
xchg
mov
adc
lods
int
and
mov
loope
sarl
xchg
test
pop
loopne
es
into
loop
add
add
gs
lock
ret
aad
mov
bound
mov
push
pop
or
insb
fidivl
xchg
sbb
aam
mov
sbbb
fs
xor
inc
xchg
mov
pusha
iret
inc
jmp
hlt
mov
andl
aas
xchg
sub
movsl
lret
pushf
jo
iret
les
pusha
adc
mov
loopne
shl
xorps
repnz
mov
mov
sbb
pop
je
lods
sbb
stos
jne
xchg
rcr
mov
leave
mov
pop
notl
das
ljmp
add
sub
hlt
fwait
jb
jb
push
cmp
stos
xchg
stos
mov
stc
mov
jno
ljmp
loopne
or
mov
or
mov
loopne
jne
push
inc
push
cmpsl
call
xor
inc
mov
in
mov
pop
mov
arpl
in
mov
dec
mov
xchg
idiv
in
fsubrl
ret
addr16
mov
dec
mov
lret
aaa
or
cmp
jo
mov
lock
xlat
push
jmp
jle
xchg
cmpsl
xor
imul
push
push
mov
and
inc
bnd
test
mov
test
shll
bound
filds
addr16
addl
push
adc
pop
lret
mov
adc
notb
fidivrl
mov
or
push
lock
loopne
bound
movsl
test
add
and
mov
jp
inc
lahf
lock
push
movl
sub
arpl
insl
xor
shl
lea
lahf
rorb
sub
mov
fistpl
pop
or
xchg
shr
push
sub
or
subb
mov
xchg
dec
lret
inc
icebp
cmp
sti
or
ja
sti
lahf
fmul
adc
in
aaa
sub
sub
mov
add
icebp
cwtl
sahf
je
cmpsb
cltd
fistps
mov
stc
mov
mov
scas
pop
aad
loope
jl
jo
rcll
lock
xchg
inc
mov
sbb
imulb
pop
xchg
xlat
adc
xchg
push
insb
xchg
out
cmp
mov
add
dec
jne
ljmp
dec
or
out
nop
sub
or
push
les
mov
rcrl
subl
mov
std
cmc
pusha
outsb
mov
fldt
ljmp
jle
inc
add
pop
imul
ja
xlat
test
ret
pop
add
aas
cld
jbe
pop
xchg
and
inc
mov
dec
xchg
pop
inc
pop
outsb
in
and
stos
dec
subb
add
outsl
mov
out
lahf
xchg
addl
leave
pop
cmp
dec
inc
sbb
cmp
mov
inc
mov
cmp
fs
das
and
nop
jno
mov
add
jmp
les
fdivr
mov
mov
ljmp
sub
sub
dec
out
loope
movsb
popf
fists
das
bound
repnz
scas
sub
mov
xor
orb
sbb
jb
idivb
ss
push
mov
jnp
cmpsb
hlt
mov
shl
lahf
stc
adc
cmpsb
int
clc
aad
jne
push
clc
test
pusha
add
clc
inc
add
out
fstpl
aas
es
rcl
push
mov
jnp
inc
mov
mov
bound
aas
ss
push
ds
inc
ds
push
mov
xchg
scas
push
stos
inc
pop
sbb
sar
add
gs
stc
jae
test
fiaddl
shlb
add
aas
and
jo
stc
xchg
scas
xchg
adcl
xchg
rclb
mov
sub
adc
arpl
pop
cmc
rep
dec
push
fbstp
fstpl
pop
pop
sub
jl
in
rclb
daa
iret
pop
sbb
daa
inc
int3
and
rcrb
sub
pop
mov
mov
lea
out
mov
dec
call
fwait
jo
mov
fs
sbb
mov
sub
insb
lea
out
mov
aas
jne
lods
shll
aas
out
loop
jo
mov
adc
adc
dec
loope
mov
sub
outsb
sbb
es
icebp
pop
inc
sbb
movsb
idivb
aaa
jle
push
ljmp
xchg
jno
cmp
imul
mov
dec
add
inc
cwtl
cltd
int
in
out
push
jge
adc
adc
pushf
and
xchg
ficoms
lahf
xor
xchg
and
mov
push
addb
pop
dec
or
add
mov
or
pop
js
lock
cltd
xchg
xchg
std
xchg
xor
mov
mov
iret
dec
cli
push
insb
ja
sbb
xchg
mov
bound
mov
aad
popf
mov
add
and
sub
es
adc
and
and
scas
clc
xor
mov
push
fsub
cld
xlat
cmp
mov
orl
push
gs
sbb
sub
cmp
push
sahf
lret
dec
fwait
aam
xor
jb
imul
mov
jl
int3
lock
gs
xor
ja
js
divb
imul
xchg
push
cmc
aas
cld
cmp
into
in
xor
xor
loop
pop
imul
xchg
mov
pop
cmp
bound
pop
into
rol
add
xchg
dec
xlat
lods
clc
mov
aad
je
mov
mov
fnsave
bound
bound
mov
loopne
jo
dec
pop
mov
sub
mov
out
jecxz
dec
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
movl
sbb
movl
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
call
jmp
mov
movl
sub
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
jmp
mov
xlat
and
mov
js
fldl
jmp
andl
cmp
div
xchg
loop
iret
repz
pop
mov
push
cmp
in
xlat
cmp
push
enter
lds
push
stc
and
aas
sbb
xchg
dec
cmp
cmc
imul
cmp
bnd
out
xchg
repnz
ljmp
xor
mov
dec
sub
mov
or
mov
lea
and
icebp
dec
push
sbb
sub
outsb
test
xchg
addr16
repz
dec
mov
mov
bound
arpl
pop
mov
jne
ss
lods
arpl
adc
leave
and
mov
js
add
cwtl
pop
sbb
xor
xchg
xchg
sub
lret
jnp
mov
adc
and
xlat
push
pop
bound
aad
in
xor
fsubr
mov
test
push
mov
mov
pop
cmp
in
inc
jp
in
or
fsubrl
enter
mov
cmp
imul
xchg
imul
subl
cmpsl
cwtl
insb
sub
and
add
inc
mov
lock
push
push
sti
sub
addr16
outsb
jae
out
push
je
ror
shrl
mov
mov
stos
mov
daa
fistpl
mov
js
cltd
insl
mov
pushf
sbb
sub
ja
and
gs
or
gs
shll
decb
xchg
lret
popa
ljmp
add
test
aaa
push
xchg
jecxz
lahf
js
aad
and
popa
jl
out
test
call
add
movsl
mov
into
daa
and
and
sub
cmp
clc
cmpsl
sub
pop
je
int3
adc
daa
imul
adc
push
jmp
mov
pop
test
inc
xchg
mov
mov
mov
jmp
sbb
lods
mov
mov
mov
lret
pusha
stc
popf
mov
mov
sbb
push
stc
jb
mov
sub
shlb
hlt
test
push
aad
rorb
lret
mov
fs
xchg
stos
jns
arpl
test
push
insl
ja
and
sub
enter
jae
fdivrs
adc
lret
int
pop
lea
lahf
pop
lds
idivl
lods
cmp
andl
inc
fildll
jg
mov
movsl
outsb
scas
inc
sub
xor
jns
jp
lea
jmp
adc
stos
mov
xchg
scas
out
push
dec
in
cwtl
loope
mov
loopne
test
mov
jmp
pop
fnstenv
jmp
mov
iret
jnp
pop
inc
shrb
cmp
dec
or
xor
test
jle
fnstenv
xchg
jg
test
jnp
imul
mov
arpl
popa
sbb
cld
filds
sub
xchg
pop
or
fsubrp
pop
inc
sti
xchg
insl
cmp
int
push
aad
ss
dec
push
sbb
movsl
push
dec
loopne
dec
addl
dec
cli
hlt
xchg
pop
ret
add
mov
jno
mov
adc
movsl
cmpsl
pop
inc
and
es
out
xchg
divl
pusha
inc
push
xor
cmp
iret
divb
test
in
adc
sti
pop
push
xchg
dec
mov
push
mov
cmp
push
mov
cmpsl
jle
aad
jg
ud2
xchg
push
das
mov
mov
pop
leave
and
dec
push
lock
repnz
add
pop
pop
jle
adc
pop
hlt
add
out
mov
and
addr16
xchg
dec
lods
imul
fcmovnb
mov
mov
sbb
jo
push
add
jmp
cltd
fnclex
inc
stos
mov
test
pop
lock
dec
mov
push
jmp
lcall
and
xor
pop
test
push
insb
cmp
xchg
sbb
cltd
mov
sub
ret
js
in
aas
sub
lock
cmp
jnp
je
lock
and
add
test
xchg
sahf
cmp
pop
xchg
ds
data16
inc
sbbl
out
in
jbe
imul
xor
aaa
lods
aas
sti
ror
mov
stc
ja
pop
lods
pop
dec
test
push
lcall
mov
out
or
xor
sub
and
or
movsb
xor
pushf
fbld
xchg
push
mov
int3
scas
lea
shlb
inc
push
cmp
sub
fldt
mov
inc
pop
dec
stos
push
inc
pop
shrl
iretw
arpl
in
mov
mov
adc
mov
pop
lock
mov
xor
cmpsl
rcrl
mov
fdivs
shlb
es
jecxz
test
loopne
or
inc
test
cs
jg
cmp
call
cmp
pop
fsubs
scas
pop
hlt
cli
xor
mov
imul
mov
stos
inc
xchg
or
cltd
orl
imul
push
in
push
push
sub
or
cmp
or
inc
mov
push
mov
fcoml
out
dec
mov
xor
push
push
lret
mov
ja
push
jecxz
out
pop
adc
inc
icebp
rclb
fstpl
scas
mov
add
pop
negl
sbb
imul
mov
xor
and
out
and
add
xor
push
and
pop
fnstcw
add
mov
mov
iret
mov
mov
icebp
mov
dec
imul
test
ficomps
jle
xor
or
sarl
lds
fs
mov
push
cmpsl
push
mov
cmp
mov
mov
push
jg
inc
xor
lret
inc
lods
mov
sbb
push
daa
cmp
sub
pop
inc
sub
into
xchg
out
pop
mov
mov
iret
sub
mov
add
mov
loopne
cwtl
lock
xchg
call
ja
sub
mov
addl
and
stos
mov
inc
cmp
stos
cltd
stos
sbb
sbb
mov
inc
mov
notl
fs
mov
and
loope
addr16
nop
xchg
cmp
pop
xor
int3
mov
imul
jo
or
cli
mulb
mov
or
cmp
inc
stos
and
push
add
lret
jg
cmovl
sub
sub
subl
mov
lods
xorb
and
lcall
outsb
adc
jne
jns
pop
add
mov
or
dec
jecxz
and
jg
aad
adc
and
popf
in
sbb
popf
outsl
imul
enter
push
and
daa
xchg
jne
or
into
pop
dec
mov
shlb
dec
adc
arpl
fwait
or
cmc
ss
mov
into
cmp
mov
xor
sbb
aam
scas
cmc
sar
imul
and
pop
std
sub
jne
push
xchg
gs
sbb
pop
or
jbe
popf
inc
out
jbe
nop
mov
jp
mov
test
jge
sbb
and
fcomps
mov
fxsave
cmp
inc
add
sti
xor
dec
bound
mov
shlb
fdivs
jne
popa
gs
push
cwtl
cli
in
jbe
loop
je
jp
idivb
jg
int
add
inc
pushf
lods
jp
mov
mov
mov
or
in
xchg
pusha
mov
repz
jb
push
push
repz
or
xchg
ret
inc
or
clc
adc
pop
imul
jo
aad
iret
icebp
sahf
pop
out
pusha
or
pop
inc
das
or
stc
adc
sbb
insb
jl
je
cs
jge
mov
mov
mov
jno
dec
aam
ds
fnsave
mov
aaa
xor
xor
pop
jbe
sub
cmp
jmp
dec
sbb
outsb
rorl
ret
mov
les
jb
repz
push
dec
xchg
jnp
aam
mov
xchg
loope
dec
or
mov
pop
jns
andl
mov
jne
adc
inc
adc
test
dec
sbb
ret
mov
xchg
cld
test
cmpl
ficoms
into
xchg
outsb
jmp
sbb
mov
mov
lods
push
shll
lods
mov
pop
xchg
sbb
or
shrl
stos
and
cmp
jl
rep
mov
xor
inc
out
mov
push
sbb
xchg
call
lret
into
arpl
add
cmc
pop
pop
cmp
test
pushf
pop
dec
add
ljmp
enter
stos
jb
jg
inc
sbb
add
shl
lock
push
adc
xor
mov
xchg
shrb
pop
or
mov
jns
jecxz
mov
add
loopne
cmp
scas
cmp
sub
popf
dec
ljmp
cltd
dec
stos
in
adc
dec
or
pop
and
pop
inc
fwait
dec
sub
inc
hlt
inc
mov
lea
int
inc
leave
in
cli
xorl
aas
and
out
sub
mov
stc
sub
push
in
pusha
xchg
inc
and
xor
mov
jge
ret
lods
lods
jecxz
fcmove
cmp
cmp
mov
xlat
jnp
pop
lock
andb
negl
mov
mov
loopne
ret
xor
xor
aam
arpl
adc
loope
jne
neg
push
mov
fwait
dec
pop
out
sbb
sahf
movsb
lret
aam
add
aas
test
mov
sub
sbb
adc
pushf
icebp
xor
adc
jecxz
test
push
push
pop
jns
shll
aad
out
outsl
ret
pop
test
aaa
jne
int
sbb
fs
or
lods
pop
cmc
cmp
gs
xlat
imul
or
push
pop
mov
or
sar
cwtl
sbbl
cmp
sub
pop
dec
stc
xor
adc
shr
jns
xor
sub
cmc
xchg
fs
rorb
and
sar
call
or
test
das
sbb
out
and
movsl
pop
shr
iret
sbb
dec
stos
push
icebp
adc
cmpsb
scas
lock
ss
insb
push
in
es
push
cld
stos
cmp
jecxz
fs
mov
lret
repz
mov
adc
cli
jns
xor
pop
jo
push
out
sub
jge
pop
add
loope
mov
popa
leave
fcmove
push
sbb
mov
bound
out
xor
lock
aad
sub
repz
adcl
mov
dec
sub
out
in
and
xchg
mov
sub
cli
repnz
rol
ds
test
cs
cld
repnz
push
xchg
jbe
dec
xchg
push
dec
add
sysexit
mov
mov
rorb
sbb
cltd
sbb
clc
jp
loope
xchg
inc
ret
leave
ljmp
in
xchg
mov
cli
sahf
ja
lods
push
lea
scas
jle
xor
or
jne
sub
sbb
xchg
addr16
or
insl
fdivrl
movsb
mov
enter
mov
stc
rclb
adc
lock
jne
cmp
psadbw
xchg
inc
jb
pop
je
adc
rcrb
mov
sbb
pop
test
mov
ds
and
sbb
outsl
mov
jae
sbb
inc
shll
or
dec
push
inc
jecxz
jmp
ret
xchg
or
icebp
jne
and
sbb
xor
push
mov
mov
pop
mov
xchg
sub
lcall
mov
xor
push
jmp
mov
add
dec
mov
xchg
stos
or
imul
jecxz
in
lret
mov
pop
inc
sbb
dec
fcoml
pop
stos
add
lret
in
push
fldl
adc
sbb
arpl
mov
lock
push
fimuls
xor
insb
data16
add
clc
aaa
je
cli
mov
cmp
jae
mov
mov
mov
xchg
ret
push
les
popf
xor
mov
lods
fucomi
adc
loop
ja
jno
sub
shl
cmp
test
inc
xchg
xor
sub
cmp
jge
pop
mov
pop
dec
push
jecxz
outsl
jo
mov
ljmp
pop
js
dec
push
imul
jbe
xor
loop
jg
jp
sub
mov
xor
pop
cmpsl
popa
imul
xchg
iret
mov
int
nop
ja
std
subl
push
stos
iret
jae
mov
jl
mov
jb
add
dec
pop
mov
jns
cmpsb
mov
ja
cli
jne
jg
mov
lahf
and
cmp
aad
dec
xchg
adc
xchg
adc
in
call
dec
iret
mov
jmp
xchg
aas
or
std
xor
sahf
stos
lret
dec
xlat
movsb
pop
rcrl
ds
inc
xchg
lods
andb
test
push
pop
pop
inc
dec
add
in
sub
js
lret
push
mov
mov
mov
pop
clc
xchg
out
dec
dec
inc
dec
sub
xchg
pop
fcomp
mov
rcrl
mov
pop
ret
lock
in
movsb
out
ss
and
adc
jae
scas
mov
and
paddusw
outsl
sti
xor
aaa
cmc
mov
sub
and
pusha
jb
xchg
and
xor
mov
jmp
adc
and
jb
das
fiadds
stc
push
pop
xchg
push
mov
push
cmp
dec
mov
push
out
movsb
pop
xchg
mov
std
out
and
insl
icebp
clc
xor
jns
mov
dec
int
jmp
lock
int3
push
push
fstl
xchg
pop
repnz
pop
pop
push
or
dec
cmc
cmp
fwait
jbe
jns
jmp
and
mov
lods
movsl
fmull
pop
push
mov
mov
das
push
ja
pop
popl
jp
jns
push
xor
push
push
in
sar
dec
loope
dec
insl
mov
add
in
test
fsubrl
pop
jle
ss
ja
pop
sbb
fs
imul
iret
jne
jle
jnp
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jb
movl
lea
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
movl
andl
xor
xor
inc
mov
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jb
lea
xor
mov
or
mov
and
mov
movl
mov
xor
subl
add
mov
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
sub
push
sub
mov
mov
mov
mov
xor
or
mov
adcl
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
add
sub
xor
mov
andl
add
push
movl
adc
movzbl
adc
mov
xor
xor
cmp
jne
cmp
movl
jne
push
jmp
mov
xor
adcl
add
movl
xor
xorl
add
adc
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
add
mov
movzwl
xor
xor
addl
add
mov
mov
mov
xor
add
xorl
imul
movl
mov
subl
xor
adcl
add
movl
cmp
movl
mov
je
mov
subl
add
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
addl
push
movl
push
push
xor
adcl
push
sbbl
push
andl
push
call
orl
mov
andl
lea
push
movl
push
call
movl
cmp
movl
je
xor
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
pushl
pushl
push
call
cmpl
jb
mov
push
lea
addl
push
adcl
push
subl
push
push
sbbl
call
adcl
imul
movl
cmp
movl
jne
lea
subl
push
push
call
movl
cmp
movl
jne
pushl
push
andl
call
movzbl
and
mov
sub
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
lea
add
mov
lea
mov
and
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
sub
mov
mov
movzwl
adc
mov
xor
orl
mov
movl
add
movl
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
mov
subl
xor
add
sbbl
mov
xor
mov
adcl
xor
addl
add
mov
movzwl
sub
mov
mov
andl
xor
add
orl
mov
sbb
mov
mov
xorl
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
mov
mov
subl
movl
mov
movl
decl
mov
xorl
xor
sbbl
add
movl
jmp
lea
push
addl
push
call
cmp
movl
jne
push
subl
lea
push
sbbl
push
subl
push
addl
push
call
imul
cmp
movl
jne
adcl
lea
xorl
push
push
call
movl
cmp
movl
jne
mov
mov
xor
addl
lea
adcl
push
mov
orl
xor
lea
push
xorl
mov
pushl
andl
call
mov
mov
xor
lea
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
xor
adcl
add
mov
sbb
mov
mov
xor
movl
lea
mov
movl
cmp
movl
jbe
adc
mov
add
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
push
call
mov
dec
mov
jmp
mov
or
mov
mov
sub
xor
mov
adcl
lea
sbbl
mov
lea
mov
lea
push
subl
push
call
cmp
movl
jne
push
subl
lea
xorl
push
push
addl
push
adcl
push
call
movl
imul
movl
cmp
jne
lea
andl
push
adcl
push
xorl
call
movl
cmp
movl
jne
orl
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
mov
mov
or
movl
add
mov
movzbl
adc
push
or
mov
xor
xor
movl
cmpl
je
cmpl
jb
jmp
pushl
call
mov
dec
mov
jmp
mov
adcl
push
adcl
mov
addl
add
movl
cmp
movl
je
mov
adc
mov
mov
xor
sbbl
xor
add
xorl
add
movl
adc
sbbl
xor
adcl
mov
push
dec
xor
xor
mov
mov
and
mov
add
adc
movl
xor
incl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xor
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
adcl
movsbl
adc
mov
andl
sub
mov
addl
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
push
mov
mov
movl
movl
push
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
leave
dec
jns
add
add
add
add
xor
add
rclb
add
inc
add
add
add
push
push
inc
push
test
and
and
inc
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
