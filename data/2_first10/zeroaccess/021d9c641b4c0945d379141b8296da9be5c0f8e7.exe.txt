push
mov
sub
xor
mov
xor
mov
adc
mov
sub
push
mov
mov
mov
mov
jmp
mov
or
inc
pop
ret
outsb
xor
push
clc
adc
and
fimull
mov
fsubl
int3
or
adc
jo
movsb
xchg
jle
dec
mov
mov
xchg
mov
daa
and
push
sbb
sbb
pushf
dec
out
sbbb
add
sbbb
inc
ret
mov
movsb
in
jne
loopne
jno
aas
xchg
in
rolb
pop
or
sbb
notl
add
pop
fidivs
cli
xchg
cmp
or
pop
or
cmp
inc
cld
mov
leave
push
jbe
push
fdivrs
sub
dec
mov
sbb
xor
xchg
fisttpl
sbbl
ljmp
mov
add
xchg
mov
push
clc
aas
push
inc
aaa
jmp
inc
imul
push
xlat
jge
inc
jnp
icebp
sbb
cmp
pop
fsts
test
sub
aas
inc
or
jo
pop
imul
sti
leave
adcb
lret
jmp
xchg
es
shlb
push
sub
fcmovnb
xor
pusha
sahf
je
mov
mov
rorl
insw
inc
xchg
inc
xchg
lods
push
xor
cmp
mov
push
fisttpll
add
or
adc
pop
loopne
mov
cwtl
push
mov
sub
mov
jecxz
movsl
cmp
mov
sub
pop
sbb
jg
in
jmp
fsubrl
or
into
jns
dec
jg
ficoms
jnp
pop
out
or
sbb
and
dec
bound
pop
test
inc
out
dec
aad
insl
stos
fadds
imul
aad
push
lret
mov
adc
outsl
xor
fidivs
cmpsl
push
cli
into
mov
pop
neg
sub
dec
adc
mov
pushf
and
fistpll
dec
stc
movsl
ret
pop
mov
enter
sub
or
maxps
int
pop
mov
icebp
je
sub
fdivs
shrb
pop
mov
lahf
and
iret
imul
in
insb
iret
or
sub
cmpsl
mov
xor
cld
aaa
inc
dec
jo
cmpsl
xchg
xor
test
add
adc
jb
sub
dec
data16
mov
mov
sbb
mov
jbe
enter
mov
adc
dec
icebp
mov
lahf
push
inc
stc
add
xchg
or
mov
xor
inc
repnz
fidivs
aad
ret
dec
lds
aas
inc
and
je
mov
stos
xor
adc
fcmove
test
lcall
outsb
xor
and
mov
imul
repz
push
jo
dec
dec
stos
push
mov
pushf
js
mov
add
dec
lret
add
ds
dec
sub
daa
mov
or
enter
push
mov
aad
repz
subb
cltd
adc
mov
xchg
testl
in
xor
and
dec
in
pop
clc
lds
lods
push
xchg
add
jno
repnz
pop
outsb
xchg
out
cltd
jg
pop
sub
shlb
lods
fidivrs
mov
adc
add
xchg
xchg
pushf
js
into
int
mov
or
mov
xor
push
or
imul
or
pop
sbb
popa
push
mov
lea
jb
lret
mov
rclb
push
iret
add
loop
lret
daa
cli
xchg
push
out
sbb
out
dec
movsl
mov
bound
test
pop
lret
insb
mov
sub
gs
call
push
cld
insl
fdivrl
subl
push
adc
inc
loopne
cs
mov
test
add
pop
in
jge
push
inc
stos
cli
int3
lahf
pop
add
imul
ja
cmc
xchg
leave
sahf
push
mov
pop
roll
adc
daa
adc
sbb
out
enter
inc
js
ljmp
addb
mov
bound
in
jge
mov
sbb
enter
andb
fs
cmpsl
jbe
jmp
call
add
or
cmc
push
and
lock
mov
mov
arpl
jns
cmpsb
addb
pushf
icebp
in
test
ret
icebp
mov
or
nop
xor
loope
hlt
sbb
int3
shll
mov
fsubs
loopne
push
int3
int
cmp
adc
bound
jmp
xorl
xchg
or
mov
sbb
cld
xchg
add
mov
imul
fildl
push
cmp
ficomps
std
stc
pop
inc
sbb
inc
add
pop
xchg
filds
lahf
inc
mov
jp
xchg
adc
scas
ljmp
push
in
rcrl
ja
sbb
add
mov
inc
outsl
stc
lret
and
out
stos
test
jl
int3
mov
clc
movsl
push
cwtl
fdivs
sbb
fstp
sub
xchg
enter
xor
ja
mov
push
inc
pop
cmp
and
mov
icebp
iret
icebp
insb
inc
dec
lret
lock
ret
out
inc
lds
iret
cmp
jb
stc
xor
mov
jnp
cmp
push
ja
scas
test
jne
rol
insl
ret
out
dec
pop
lahf
xor
cmp
inc
xchg
pop
inc
push
and
mov
test
mov
sub
mov
push
pop
scas
push
insl
icebp
cld
sbb
lret
mov
and
fwait
xchg
adc
xchg
and
xor
adc
fucomp
aam
mov
xchg
stos
xlat
ret
js
inc
mov
ds
ret
cli
bound
jg
roll
mov
out
mov
jbe
push
enter
ret
dec
daa
fcmovne
or
stos
test
imul
jae
dec
and
push
push
loopne
call
lahf
mov
xchg
push
repz
outsb
cmp
idivb
cmp
roll
sbb
mov
lret
adc
jg
and
aam
add
mov
shlb
call
or
xor
push
add
adc
loop
cmc
cmp
out
sbb
mov
orl
orl
orl
mov
cmpl
movl
movl
jmp
movl
jne
push
push
push
call
xor
adcl
sbb
mov
and
sbbl
xor
adc
mov
sbb
mov
inc
mov
sub
mov
sbb
cmpl
mov
not
mov
jmp
movl
jg
pushl
call
sbb
or
adc
xor
or
or
sbbl
mov
orl
sub
orl
cmpl
mov
mov
movl
jmp
movl
jbe
pushl
push
pushl
call
and
and
xor
add
and
movzbl
add
mov
add
mov
sub
movl
lea
cmpl
mov
movl
jmp
movl
jg
push
call
movl
xor
add
sbb
or
and
xor
mov
addl
mov
and
mov
or
mov
mov
add
mov
add
orl
mov
mov
mov
or
mov
movzbl
or
shrd
cmpl
mov
mov
mov
mov
jmp
mov
jl
push
pushl
push
push
push
call
and
or
adc
mov
sub
shr
andl
mov
cmpl
not
notl
jmp
mov
movl
jne
push
call
movzbl
adc
and
movl
sbb
xor
add
adc
mov
mov
xor
orl
xor
or
mov
movl
sbb
jmp
push
test
pusha
stos
xchg
nop
hlt
idivb
lods
add
adc
clc
adc
mov
inc
add
add
mov
xchg
inc
clc
pop
shll
test
ja
test
adc
mov
push
ret
cmp
outsl
adcl
adc
enter
sub
jge
repnz
xor
pop
iret
fisubl
repz
in
mov
test
xchg
lods
inc
push
and
pop
cmpsl
adc
jp
mov
mov
sub
movsl
pusha
pop
inc
imul
insl
jmp
jge
push
inc
jle
pop
pusha
push
insw
add
insl
fwait
lret
arpl
cli
lcall
sbb
lods
subb
scas
sti
dec
popa
je
xchg
jo
pop
shld
adc
and
sar
fisubrl
aam
cwtl
shr
loop
pop
inc
jne
cmp
insb
dec
mov
fsubs
in
leave
xchg
cld
ja
mov
push
pop
and
xor
out
lods
aad
inc
dec
dec
push
lahf
mov
outsl
outsl
mov
pop
mov
roll
arpl
cmp
push
push
inc
shlb
jecxz
push
cltd
jne
subl
enter
mov
rorl
lret
mov
repz
lds
jle
inc
push
cmpsl
ret
xchg
or
ljmp
data16
or
clc
incb
aas
mov
cmp
leave
pusha
inc
rcrb
and
add
stos
rcrb
ficomps
xchg
test
push
xor
adc
scas
pusha
test
add
clc
leave
xchg
icebp
inc
lods
dec
adcl
jl
sub
xchg
fidivs
movsl
and
jg
imul
sbb
mov
mov
dec
mov
xlat
aam
ret
mov
sarl
call
xchg
fsubrs
pusha
pop
adc
mov
gs
movsl
int
cs
lea
xchg
out
cmp
rolb
repnz
in
negl
loope
test
sti
loopne
fstpt
xchg
xlat
fsubrs
cld
sub
pop
sbb
stos
inc
arpl
push
add
pop
jne
mov
cli
loopne
dec
mov
mov
mov
xchg
cs
and
mov
add
rep
jmp
lds
jae
cld
push
into
xchg
sti
out
and
imul
and
pop
adc
xor
xor
adc
out
int3
frstor
call
xchg
push
pop
xor
mov
cmc
mov
pop
das
inc
push
xor
cmp
sbb
pop
cltd
adc
jnp
mov
xor
jo
mov
cltd
sbbl
sbbl
lahf
scas
gs
fiaddl
xchg
sbb
dec
mov
ja
xor
push
std
stos
nop
cmp
mov
pop
or
sub
mov
sahf
jl
push
mov
inc
arpl
rorb
out
add
in
inc
stos
jmp
call
sbb
movsl
es
data16
adc
shrb
mov
ret
jnp
ja
mov
repnz
sub
enter
push
mov
movl
scas
mov
out
push
rorl
push
pop
push
repz
cwtl
inc
add
ds
clc
aad
mov
mov
jmp
fs
push
cs
add
stos
sbb
jl
iret
jo
xorl
jno
fiadds
mov
add
gs
addl
stc
add
push
sbb
jns
fwait
adc
or
xchg
stos
dec
leave
dec
push
add
neg
jle
lds
les
push
int3
jo
nop
adcb
fimull
push
push
push
push
jle
cmp
inc
stos
out
inc
push
inc
inc
imul
outsl
or
pop
xor
fwait
je
out
mov
push
cmp
or
movsb
lds
jl
jno
lret
pop
sbbl
nop
ja
push
hlt
cltd
jo
xchg
enter
fs
movsb
hlt
jecxz
sti
mov
ja
loopne
jb
add
fmul
negb
inc
adc
jg
sub
fnstsw
aam
out
cmpsl
stos
sub
mov
test
cmp
test
inc
daa
fldt
flds
dec
mov
pop
jp
sbb
testb
mov
in
pop
add
in
mov
xchg
adc
loop
xor
test
adc
cmp
shlb
mov
stos
add
jl
movsl
sbb
test
add
and
out
mov
xchg
inc
imul
mov
mov
cli
sub
lcall
xorb
xchg
push
push
rep
xchg
lcall
mov
aad
dec
ret
iret
jae
mov
daa
outsb
or
mov
or
pop
in
iret
lods
cltd
xor
xchg
pop
and
pop
nop
mov
dec
movsl
sti
sub
fwait
jle
xlat
andl
mov
fimull
dec
and
push
faddl
call
in
cmp
lret
mov
xor
fisubrs
cmc
fistps
movb
push
pop
fisttpll
outsb
add
ss
and
mov
arpl
hlt
cmp
sbb
dec
pop
sub
add
stos
xor
cmp
push
aas
scas
adc
pop
aad
lods
xor
jbe
popa
push
aaa
jecxz
loopne
sub
xchg
pop
adc
cmp
pop
sub
jns
je
aad
xchg
mov
sub
mov
out
movsb
daa
inc
jge
xor
jbe
cmp
xor
add
push
inc
mov
call
mov
outsb
stc
call
aaa
sti
mov
jo
sub
es
fists
mov
or
push
mov
fmuls
fwait
or
and
lret
movsl
mov
movsb
cs
mov
daa
popa
aaa
das
mov
xor
dec
sub
pop
out
add
or
popf
push
jmp
or
mov
je
xchg
sbb
cmp
out
jg
hlt
rorl
or
push
sub
stc
cmpsb
fldcw
sbb
pop
aas
js
dec
outsl
cmpl
std
ljmp
dec
sbb
jmp
decb
push
push
mov
es
cmc
push
inc
inc
add
push
jae
push
cmpsb
adc
outsl
inc
add
negl
movl
neg
movl
neg
movl
movl
add
movl
or
movl
mov
adc
movl
cmpl
movl
mov
jmp
not
mov
jle
pushl
call
sub
orl
movl
andl
movl
and
adcl
and
movl
movl
jmp
push
sbb
sbb
sbb
sbb
cmp
add
adc
insl
in
sti
dec
imul
mov
mov
popa
in
mov
jle
mov
outsl
add
inc
dec
mov
lahf
fstpt
pop
cmpsb
fcoml
pop
movsl
je
andb
mov
pop
push
xchg
mov
cmp
cli
int
sub
mov
stos
pop
inc
and
into
and
adc
ds
test
stos
dec
sbb
or
pop
inc
nop
cmp
and
mov
fs
popa
mov
cmp
or
notb
leave
divl
out
lods
mov
mov
rcll
add
pop
nop
and
fbstp
rcrl
lcall
inc
add
push
xor
jp
mov
xchg
ss
xorl
jb
shrb
or
in
sahf
int3
pop
cmp
loop
ret
sbb
jb
in
jns
insb
xchg
imul
or
dec
sbb
lcall
inc
inc
xorl
lea
dec
inc
jp
xorl
test
xchg
adc
and
mov
inc
or
gs
push
mov
xchg
add
sahf
pop
adc
test
inc
push
push
int
imul
mov
leave
cltd
test
int3
pop
jmp
sub
inc
pop
inc
pop
mov
ffreep
lcall
fneni(8087
in
aad
in
or
fs
out
stc
dec
js
jne
lea
repz
pop
cld
mov
and
and
pcmpeqw
imul
fnstenv
and
fisubrl
out
adc
scas
out
orb
pop
or
hlt
sub
stos
cmp
jle
ss
lret
or
pop
scas
rorl
cmpsb
xchg
jl
ret
jmp
mov
in
push
lock
add
jns
mov
mov
clc
leave
out
loopne
cli
arpl
mov
mov
inc
sbb
mov
or
mov
push
fistl
mov
sbb
lret
mov
add
xlat
xchg
cmp
pop
mov
sub
popw
mov
mov
dec
jne
adc
es
icebp
gs
and
bound
fstpt
or
push
dec
or
xchg
jle
out
repz
mull
lods
fs
lahf
in
mov
jns
xor
clc
push
push
push
inc
sub
push
jmp
and
pusha
or
das
shrl
mov
int
add
imul
inc
dec
sub
sarl
fcomps
outsl
int
xchg
lahf
mov
push
je
ds
sub
pop
fwait
xor
daa
int3
jge
pop
and
in
mov
rcr
sub
dec
fwait
int3
xchg
sahf
fucomi
and
loope
arpl
and
and
dec
xor
mov
push
adc
sti
lods
mov
adc
lret
push
pushf
add
pusha
dec
push
sbb
test
cmp
call
adc
inc
jg
dec
cltd
subl
sbb
inc
roll
cmp
inc
pop
test
fsubrl
lods
arpl
iret
mull
adc
into
clc
xchg
cs
inc
lcall
sbb
out
add
out
loope
mov
mov
fs
pop
in
jne
test
cs
scas
cs
call
jg
mov
push
jae
lds
pop
into
aas
out
sbb
mov
je
out
cmp
out
dec
arpl
shrl
sbb
push
and
mov
adc
push
jmp
mov
das
inc
inc
lret
and
cmp
sub
xchg
int
jae
mov
repz
fs
les
push
outsb
inc
int
xchg
pop
outsl
cmp
dec
outsb
sub
push
sbb
lgs
jle
pop
mov
out
ds
ja
sbb
fnstenv
push
test
mov
mov
mov
pop
and
adc
mov
scas
cmc
dec
jmp
push
fsubr
ljmp
aad
xchg
or
adc
jmp
in
mov
sub
adc
pusha
orl
jo
ja
in
or
sti
andl
and
xchg
sbbl
jno
fdivrl
lods
test
ret
inc
or
imul
test
in
dec
test
aas
mov
push
push
ss
cmp
cmp
push
cmp
test
or
inc
ret
arpl
out
lret
lods
fwait
add
daa
jg
rolb
in
dec
mov
sub
jmp
mov
out
pop
xor
movsb
test
test
hlt
insl
add
in
sub
adc
mov
fdiv
xchg
pop
lret
test
repnz
jns
dec
push
test
cmpsb
mov
cltd
mov
div
ss
and
popa
add
mov
mov
add
mov
or
inc
pop
mov
or
add
ss
jne
jg
adc
sbb
jle
shll
push
fisttps
dec
sbbb
popf
daa
popa
lea
mov
mov
xchg
and
pusha
adc
rcr
jle
popa
in
xchg
rcrb
stc
push
icebp
mov
sub
and
jle
and
sbb
xlat
nop
inc
cmp
int3
pop
cld
out
or
adc
sbb
xchg
pop
loop
movsl
orl
imul
xor
decb
out
and
into
sbb
loop
cmp
ja
shrl
test
mov
push
sbb
in
mov
sub
push
mov
mov
sbb
in
jb
insb
add
mov
sbb
jmp
mov
daa
sbb
jp
add
jno
std
les
sbb
mov
adc
mov
enter
mov
push
xchg
test
loope
mov
je
in
push
push
nop
nop
jle
in
sbb
jmp
fcompl
jecxz
into
repnz
push
jl
pop
push
jns
pop
fdivl
push
sbb
jnp
mov
neg
mov
mov
lea
xchg
shrl
jne
xlat
rol
inc
xchg
mov
inc
cwtl
inc
sbb
add
inc
pushf
jge
add
not
movl
cmpl
movl
movl
jmp
movl
not
je
push
push
push
push
pushl
push
push
pushl
call
sbb
negl
orl
subl
subl
orl
movl
movl
movl
sub
movl
jmp
loop
in
gs
ljmp
aam
adc
push
clc
adc
in
inc
adc
xor
jecxz
leave
pop
test
jle
mov
pop
inc
add
or
jae
shll
ljmp
lea
xchg
cwtl
movsl
dec
movl
mov
outsb
test
push
data16
popf
sub
nop
add
lret
aad
ja
add
mov
push
jb
popa
cmp
bound
push
ficoml
xchg
fiadds
xor
push
dec
pop
mov
push
mov
mov
lods
mov
pop
or
pushf
cmp
jl
inc
test
stos
std
mov
roll
adc
jno
icebp
push
dec
leave
aaa
or
sbb
es
cwtl
push
int
xchg
cmp
mov
sub
or
lds
sub
and
lcall
push
test
and
jns
inc
inc
and
add
int3
es
arpl
pop
loop
out
ja
bound
jp
std
xor
scas
ja
add
xchg
icebp
out
insl
push
or
and
mov
inc
pop
rclb
ljmp
lcall
xorl
shlb
sub
test
mov
mov
mov
cmpsb
popa
mov
mov
or
xchg
inc
cld
cmc
ret
push
or
pop
fwait
ret
in
in
xor
arpl
or
pop
xor
fmuls
psubsb
nop
sbb
push
xor
mov
ficoms
and
aad
xor
mov
mov
sbb
mov
pushf
xor
mov
mov
and
rorb
repnz
cmp
lea
mov
orb
mov
inc
lcall
inc
push
sub
outsb
notb
xchg
push
ret
add
jbe
stos
push
xchg
xchg
push
add
xchg
sbb
mov
lret
clc
dec
in
out
adc
clc
gs
adc
out
enter
je
pushf
rorb
cmc
es
fistpl
loop
into
mov
fidivrs
mov
das
jnp
imull
stc
icebp
faddp
xlat
push
ss
cmp
mov
loop
repnz
inc
das
pop
nop
imul
nop
xchg
add
or
sub
dec
fistpll
jl
fcomi
cwtl
mov
test
popf
test
and
arpl
and
xchg
nop
arpl
dec
jp
pop
pop
cmp
mov
pushf
add
iret
lods
dec
mov
xchg
fiaddl
pop
cmpsb
push
mov
arpl
jns
inc
mov
mov
sub
mov
lods
loope
adc
fiaddl
popf
sbbl
xor
inc
cmpsb
pop
ja
inc
insl
xlat
jmp
popf
ficoml
add
push
ja
sub
pushf
mov
shll
jo
mov
roll
xorl
lock
in
pop
mov
mov
mov
dec
rorb
inc
jne
aad
xchg
mov
ss
les
pushf
and
adc
sub
and
pop
loopne
jns
inc
push
dec
inc
sub
mov
ffree
cmc
stc
add
or
lret
xor
sahf
inc
idiv
popa
dec
and
jl
cmp
xchg
test
mov
jmp
lock
cwtl
mov
cli
inc
pop
xchg
lock
push
add
cwtl
inc
fcoms
push
daa
or
and
pop
sbb
jbe
scas
mov
cmp
test
dec
inc
test
sub
add
outsb
in
aad
fiaddl
pop
add
mov
sub
or
adc
jo
adc
adc
sti
mov
or
add
jns
xchg
cs
int3
daa
lds
outsl
inc
xorb
dec
xchg
scas
inc
hlt
sub
jge
fcompl
cmp
cmc
ss
lods
xor
ret
in
clc
sbb
add
add
add
xor
xor
xor
cmp
xor
dec
mov
fisubrl
pop
dec
test
leave
add
mov
int3
dec
test
mov
sub
popf
test
out
std
ljmp
cmp
or
xchg
and
bound
ficoms
sbb
add
aas
fmull
popf
adc
push
inc
or
mov
daa
ss
and
jo
cwtl
insl
dec
lods
pop
adc
ss
cmc
mov
sbb
mov
enter
out
sub
aam
in
fstl
mov
ljmp
fs
push
cmp
insb
das
mov
push
cli
mov
mov
inc
enter
fwait
jge
lcall
add
cmpsb
jbe
mov
lret
xor
inc
sbb
sub
insl
sbb
stc
mov
xor
jae
adc
in
ret
sub
mov
add
xor
cmc
sbbb
stos
fs
mov
mov
insl
pop
jge
outsl
out
jo
sbb
pop
xchg
enter
and
mov
repz
insb
int
xchg
pushf
xchg
nop
push
adc
repnz
mov
stos
insb
enter
mov
sub
cli
sub
and
mov
xchg
fisubs
jb
bswap
jo
and
inc
xchg
data16
aaa
aas
mov
xor
cmp
adc
loop
mov
mov
sub
out
fdivl
inc
push
adc
in
pop
das
mov
nop
sbb
ja
decl
inc
stos
inc
dec
xor
inc
into
in
je
out
sub
or
push
das
xchg
nop
push
sbb
mov
jl
jmp
cltd
mov
lahf
mov
adc
add
inc
lahf
roll
push
test
sub
push
daa
ljmp
es
cs
add
lock
mov
enter
push
cmp
adc
lahf
or
fisubl
out
mov
sbb
jge
mov
inc
repz
movsl
or
xchg
in
testl
sbbl
xlat
jp
and
or
jmp
jo
mov
push
xor
outsl
testl
mov
mov
fbld
adc
xchg
hlt
jbe
xchg
xchg
jp
inc
mov
movl
movl
mov
adcl
shl
xor
or
and
mov
push
xorl
push
sbbl
push
push
call
mov
mov
xor
mov
and
mov
orl
xor
mov
cmpl
mov
not
movl
not
jmp
movl
movl
jb
pushl
push
push
call
sub
and
subl
xor
andl
add
orl
xor
or
mov
adc
mov
cmpl
mov
movl
movl
jmp
movl
jg
push
push
pushl
call
or
sbbl
and
xor
not
subl
cmpl
movl
movl
mov
jmp
movzbl
jge
push
pushl
push
push
call
xorl
sbb
sbb
movzwl
xor
xor
xor
and
sub
not
mov
lea
cmpl
mov
mov
jmp
movl
ja
push
push
pushl
call
sub
mov
or
sbb
or
adc
or
cmpl
mov
movzbl
jmp
mov
jl
pushl
call
xorl
mov
mov
xor
add
xorl
mov
mov
orl
or
andl
and
cmpl
mov
movl
movl
mov
jmp
movl
movl
jne
pushl
pushl
call
adc
movzwl
sbb
add
mov
sbb
mov
or
or
xor
or
or
mov
or
xor
cmp
jne
mov
and
mov
or
shrd
shr
mov
sbb
mov
shl
orl
xor
subl
xor
or
mov
cmp
jmp
pop
fdivrs
sbb
cltd
es
punpckldq
adc
clc
adc
adc
fnstcw
call
jo
cmp
pop
or
jge
pusha
movsl
hlt
int3
fs
mov
and
pusha
divl
sbbl
in
add
and
pop
dec
cltd
jns
shlb
ja
push
lods
pop
popa
call
mov
repnz
and
cmp
jne
je
push
out
es
subb
shll
subl
jne
cmp
ds
inc
call
mov
aaa
int3
sub
inc
cltd
stos
mov
cmc
mov
jle
jmp
mov
andl
sbb
mov
add
rcrl
jnp
cmp
cmpsl
push
xor
cmpsb
int3
subl
mov
ss
mov
inc
cmpsl
mov
out
add
mov
sahf
test
scas
push
cmpsb
dec
inc
pop
pop
mov
les
push
mov
jl
sub
lods
lret
jns
adc
adc
fnstsw
push
xor
arpl
jne
insb
pop
mov
das
and
fbld
push
inc
pop
iret
out
mov
stos
push
cmpsl
mov
mov
xor
adc
test
ljmp
or
cmpsb
cmp
sbb
testl
cmp
mov
int
push
data16
out
mov
dec
fsubs
cld
adc
mov
inc
pop
mov
dec
stc
dec
sub
subb
lods
ret
cmp
mov
mov
push
test
sbb
mull
mov
cli
bound
push
fstpl
int3
jle
sarl
cs
pop
daa
movsb
gs
add
sahf
xor
add
pop
das
jmp
scas
mov
sbb
cmpsb
sbb
jb
pushf
js
daa
add
aaa
gs
xchg
adc
fildl
pop
outsl
sti
dec
and
xchg
cmp
dec
dec
lcall
clc
es
enter
mov
in
rcrb
cld
and
rcrb
ja
int3
sub
pop
cmp
sub
xlat
mov
dec
aad
jbe
push
push
xchg
lock
cli
mov
lahf
xchg
fisubrs
cmp
xchg
sbb
rcrb
aaa
push
mov
push
loopne
das
lcall
xor
fwait
test
pop
mov
or
mov
cmp
adc
xchg
inc
sbb
pop
hlt
pop
dec
js
in
jmp
dec
or
pop
dec
sarb
cmp
fdivl
ljmp
lret
repnz
mov
popl
xlat
mov
push
andb
xor
fldz
pushf
ret
pusha
xor
inc
mov
cld
mov
mov
ret
dec
pop
xlat
sub
jno
push
aad
fldcw
fildl
sbb
loop
fistpll
leave
test
sbb
push
icebp
fistpl
call
into
push
mov
nopl
add
cltd
ja
loopne
inc
inc
out
dec
nop
out
jle
push
jg
or
dec
int
daa
xchg
daa
jecxz
call
filds
aad
rolb
movsl
sbb
outsb
mov
int3
sub
fists
lcall
add
lahf
rcll
adcb
xlat
rcrl
jge
jmp
hlt
lods
cmp
loop
inc
lret
shlb
cmp
mov
int3
pop
sbb
cmp
xor
out
jmp
or
jnp
sbb
aad
pushf
xchg
sahf
cmpsl
mov
pop
lock
outsl
testl
add
xchg
das
jb
rorl
mov
mov
mov
lcall
and
lock
in
cwtl
stos
jg
pusha
sti
lods
sub
mov
adc
fsub
and
xor
subb
addb
lds
jle
loope
cmp
mov
inc
dec
orb
enter
shr
out
jnp
mov
fmulp
cs
jno
pushf
mov
data16
inc
adc
test
jb
movsl
push
adc
and
push
in
fisubl
ss
cmp
sbb
dec
sub
mov
mov
mov
cmp
ret
movsl
div
fistpll
xchg
or
sbb
mov
mov
push
xor
adc
outsb
mov
or
xor
rcll
xchg
cmp
jl
sbb
mov
dec
lahf
rcll
pop
dec
into
sbb
and
mov
mov
testl
mov
inc
mov
hlt
xor
out
mov
adc
mov
stos
or
js
jo
mov
pusha
addr16
pushf
jbe
or
shl
js
pop
sarb
push
test
mov
outsl
adc
cmp
fcmove
insl
fisttpl
sub
add
stos
add
mov
std
adc
fimull
inc
sub
pusha
jno
pop
js
mov
dec
mov
stc
icebp
jae
int
rolb
mov
push
mov
mov
inc
lods
sub
stos
inc
inc
jne
inc
sub
mov
sbb
push
rorl
adc
xchg
aaa
cltd
dec
or
mov
sub
push
mov
loope
mov
mov
cmp
aad
inc
inc
cmp
or
jl
mov
aad
and
popa
jecxz
mov
or
adc
test
jle
stos
mov
test
jecxz
or
incl
and
aaa
or
jno
les
repnz
mov
leave
xchg
inc
pusha
adc
int
cwtl
movsl
popf
mov
pushf
test
movsb
xor
int
fstps
dec
and
xchg
inc
fdivs
les
ss
out
xchg
pop
lcall
jmp
ret
push
imul
push
mov
stos
arpl
in
pop
jg
and
aaa
mov
push
jmp
fildll
jmp
inc
mov
pop
outsb
push
and
scas
cmp
ficoms
ljmp
cmpl
movl
mov
mov
jmp
movl
jae
push
push
call
inc
addl
sbb
mov
xor
mov
negl
sbbl
mov
cmpl
movzwl
mov
mov
jmp
movl
mov
jle
push
push
push
push
push
push
call
subl
xor
add
sbb
mov
xor
addl
mov
jmp
std
fnstsw
pop
sbb
cmpsb
pop
decb
cs
push
rcll
push
clc
adc
sub
and
cmc
add
lock
jo
add
jmp
lds
cmpsb
cmpsb
cli
inc
mov
sub
mov
pop
stos
sbb
mov
jmp
sahf
inc
fs
lret
add
inc
testb
leave
inc
fxch
inc
stos
sbbb
mov
pop
xchg
cmc
popf
sub
in
add
outsl
push
bound
mov
mov
sbb
xchg
das
cmc
pop
mov
lods
dec
repz
inc
je
shll
inc
aam
sub
inc
insb
inc
or
loope
pop
mov
sub
arpl
sbb
xchg
insb
mov
lret
mov
ljmp
jnp
sub
xchg
insl
mov
adc
lret
push
outsl
mov
lock
xor
pop
test
xchg
push
sbb
orb
push
mov
xchg
or
dec
lods
js
cmc
dec
std
add
pop
xor
std
mov
dec
test
xchg
sbb
icebp
bound
jno
out
sub
adc
push
mov
sub
mov
lea
xor
in
push
or
cmpsl
dec
stos
or
dec
shrb
lret
pop
xor
call
fistl
xor
fdivrp
enter
mov
mov
int3
push
mov
add
shl
xor
pop
in
lock
sub
subl
xor
dec
icebp
les
xchg
fstps
add
frstor
mov
iret
xor
push
popf
dec
fisubrl
pop
xor
movsb
jl
xor
int
sahf
lahf
mov
in
cmpsl
imul
pop
stos
pop
test
xor
cmpsb
and
dec
sbb
mov
sbb
mov
mov
dec
add
dec
stos
lods
inc
cmpsb
jne
xchg
pop
adc
push
mov
stos
inc
loopne
add
push
mov
int
test
ds
pop
jno
and
int3
mov
mov
mov
adc
nop
pop
adc
mov
or
fistl
sub
into
mov
mov
inc
scas
pushf
pop
lea
loope
in
sbb
imul
repnz
pop
daa
sbb
lcall
inc
push
psrld
iret
repnz
test
out
out
shl
in
in
mov
imul
lods
and
call
insb
xchg
xchg
imul
xchg
mov
cmp
mov
add
mov
add
sub
shrl
xchg
leave
enter
xchg
inc
push
push
push
xchg
pop
push
out
ret
xchg
test
xchg
gs
pop
popa
xchg
xchg
lret
xchg
into
int3
loopne
and
lahf
divl
insb
rorl
fnstcw
and
lcall
lds
aas
lret
push
sub
mov
or
dec
jo
jecxz
mov
rclb
add
scas
test
gs
mov
pop
inc
push
mov
dec
shll
push
mov
dec
inc
jle
xchg
pusha
or
fiaddl
ds
dec
push
xchg
lret
jns
addr16
pop
imul
ss
and
push
adc
into
xor
or
rcll
add
mov
movsl
cmpsb
lods
repnz
dec
mov
jp
scas
xchg
addr16
in
mov
cmp
pushf
jp
ds
sar
hlt
test
daa
flds
inc
pop
push
sbb
mov
mov
ret
mov
or
push
push
lea
sbb
shrb
sbb
sbb
xor
test
sbb
out
repnz
repnz
jp
outsb
mov
pop
sbb
cmp
cmpsl
test
fs
push
xorl
lods
pop
mov
insb
or
dec
fs
dec
adc
pop
dec
mov
lret
add
rcrl
fildll
lret
mov
outsb
mov
shl
test
push
mov
negl
inc
jl
xchg
xchg
out
leave
cmpb
outsl
dec
ja
jl
xchg
jecxz
mov
imul
dec
add
jb
cmpsb
xchg
pop
divb
mov
xchg
xor
mov
mov
outsl
or
out
loopne
int
loopne
jl
dec
dec
imul
stc
into
mov
sub
outsb
or
inc
push
cmpsb
jne
sub
and
popa
mov
insl
movsb
push
and
fistpll
ljmp
jbe
ret
out
fnstsw
add
negb
sbb
filds
cwtl
subb
ret
inc
and
jno
mov
incb
cmp
insb
call
add
je
sbb
mov
std
lds
dec
dec
push
mov
div
mov
xchg
sub
andb
pop
xchg
jle
or
fdivl
jno
push
unpckhps
stc
sub
lea
movsl
les
jge
mov
xor
xorl
adc
push
outsb
aad
lea
cmp
add
pop
jp
mov
jo
sub
mov
push
je
xchg
iret
xchg
jle
mov
cmpsb
adc
imul
inc
dec
out
fisttpll
pop
icebp
xchg
stos
xchg
push
iret
scas
pop
ret
xchg
cmp
push
mov
fldcw
flds
mov
rolb
int3
xor
xchg
dec
imul
inc
mov
push
xchg
and
repz
jg
rol
test
mov
xchg
ficoms
daa
mov
lods
inc
sbb
ret
ret
in
and
loop
mov
inc
sbb
mov
add
fstl
mov
cmp
dec
push
test
sbb
adc
lods
lahf
cmp
mov
mov
negl
pop
iret
cmp
adc
sub
dec
ret
and
mov
xchg
inc
mov
xchg
push
xchg
inc
xchg
push
stos
pop
cmp
xchg
adc
xor
and
inc
sbb
sbb
leave
jnp
pop
rcll
enter
aas
jl
inc
xchg
cmp
shrl
mov
xchg
adc
sub
push
push
addr16
mov
dec
inc
movsb
lock
mov
or
lahf
out
add
xchg
daa
and
jo
aaa
lcall
sbb
shlb
adc
add
mov
shrd
incl
mov
cmpl
movl
mov
mov
not
jmp
movl
movl
jne
pushl
call
sbb
neg
or
add
or
mov
adcl
xor
shr
mov
xor
or
shl
sub
mov
mov
mov
orl
add
mov
sbb
mov
sub
mov
shrd
or
jmp
je
stos
cmc
sub
inc
mov
fs
xchg
ret
adc
push
clc
adc
and
cmp
fistl
test
in
pusha
fimuls
mov
enter
xor
call
sub
aas
bound
movsl
inc
ret
push
and
inc
inc
call
and
faddl
enter
pop
push
iret
mov
aad
dec
sub
int
or
inc
movsb
adc
xor
aad
push
scas
pop
mov
mov
rcl
ja
nop
xchg
je
jo
test
lods
dec
aaa
lahf
out
loope
idivb
pop
sbb
icebp
popf
lods
dec
out
mov
xchg
and
pop
and
stc
inc
cs
fstcw
jns
xchg
outsb
and
fs
xchg
movsb
lods
mull
cmp
push
es
jge
iret
jmp
push
into
sub
or
test
add
cmp
xor
mov
inc
inc
xorl
pushf
or
sbb
sbb
cld
mov
popf
sbb
xchg
pop
xchg
lods
test
inc
addr16
out
mov
dec
dec
lret
dec
mov
ja
xor
in
xlat
add
je
mov
add
cli
popa
xchg
jb
out
loop
call
push
xchg
xor
fisubl
adc
arpl
cmpsl
rcrb
push
inc
rorl
xchg
sbb
jae
jns
jns
xlat
pop
push
mov
jg
ret
lock
adc
or
ljmp
ficompl
mull
mov
jo
repnz
inc
into
jg
popa
pop
adc
cmpsl
dec
mov
cltd
sub
inc
test
dec
cmp
inc
cli
pop
dec
inc
test
pop
jle
jle
sbb
jne
sub
xor
mov
jno
in
jno
nop
stc
push
inc
into
push
inc
ss
mov
cmp
std
xchg
mov
jle
sahf
leave
loope
out
lods
add
ret
daa
sbb
out
adc
inc
jmp
push
inc
jns
mov
mov
lock
add
aas
add
pop
mov
ret
call
popa
aaa
add
repz
aam
mov
hlt
lahf
push
lcall
mov
test
sbb
cmp
dec
add
cwtl
xorl
pushf
cli
and
nop
insl
daa
pop
out
cmpsl
lods
push
scas
jl
and
gs
insl
add
xchg
push
imul
icebp
jecxz
add
incl
call
dec
bound
cmp
ret
and
shrb
mov
sub
pusha
test
inc
cmpsb
sub
push
fimull
pop
pop
or
push
jae
sti
arpl
shrl
inc
xchg
andl
outsb
push
aad
lahf
push
sbb
shll
aaa
js
stc
mov
xor
pop
push
hlt
sub
clc
movsb
call
xchg
mov
xchg
gs
xor
lret
in
and
push
in
xor
movaps
scas
or
into
sti
loopne
insb
mov
das
pushf
aas
push
shr
mov
sub
ds
or
cmp
and
inc
imul
sub
add
push
adc
xchg
dec
cmp
mov
inc
into
jbe
add
stc
sbb
sub
jno
adc
mov
incl
mov
jae
aas
sub
inc
dec
int3
loop
popa
sbb
out
int
cmp
ljmp
pop
shlb
xor
and
and
mov
sti
push
shl
ffree
xor
mov
mov
les
add
ret
loopne
pop
outsl
adc
xchg
adc
aaa
repz
push
add
imull
sub
repnz
inc
popa
sbb
popa
clc
jns
jne
fs
loop
mov
in
pop
mov
sbb
jle
mull
jnp
rorb
mov
mov
movsb
push
int3
cmp
lcall
out
dec
inc
push
mov
popf
fisubrl
pop
mov
idiv
push
inc
iret
push
jmp
jns
xchg
rcrb
idivl
xor
fsubrs
gs
sbb
add
xor
adc
sub
inc
and
push
cmp
pop
icebp
shll
add
in
push
outsb
arpl
fdivrs
stc
aad
mov
cmp
bswap
dec
cs
push
xchg
cmp
jns
mov
rcrb
inc
push
push
mov
mov
dec
push
lods
push
pop
sub
repnz
lret
inc
add
iret
fdivl
pop
push
cmp
dec
js
pop
movsb
popa
insl
addr16
notb
push
stos
push
es
testl
push
mov
fnsave
xlat
lods
mov
ds
outsl
and
shl
mov
in
stos
lahf
xchg
es
lock
pop
lods
adc
rclb
mov
lret
sahf
mov
mov
les
lret
test
and
cwtl
mov
andl
pop
outsb
sub
dec
jle
cmp
icebp
or
mov
adc
mov
sub
dec
and
push
xor
je
sub
sbb
lret
sbb
add
in
cmp
lcall
add
and
pushf
icebp
ficomps
push
sbb
sahf
jle
pop
fidivrs
shll
test
jns
scas
ret
rorl
cmc
mov
lods
mov
aad
lods
sbb
out
push
aaa
mov
pusha
shll
andb
mov
vmread
push
mov
xchg
sti
test
daa
mov
mov
lcall
rcll
push
lret
dec
into
stos
adc
push
jmp
inc
inc
repz
adc
enter
mov
outsb
lock
out
add
mov
stos
test
fiaddl
imulb
scas
add
lcall
sub
inc
xor
out
mov
mov
rorl
out
mov
pop
cmp
inc
adc
xor
cld
test
jecxz
and
scas
xchg
adc
dec
in
sub
adc
cmpsb
sub
test
call
es
add
movl
movl
mov
jmp
movl
movl
jb
push
pushl
pushl
push
pushl
push
pushl
call
incl
mov
and
mov
xor
xorl
sbb
movzbl
sbb
mov
mov
sub
sub
mov
cmpl
movl
mov
jmp
mov
mov
jb
pushl
pushl
push
push
call
movzwl
xor
adc
add
inc
mov
mov
adc
mov
xor
notl
shl
cmpl
not
mov
mov
jmp
movl
jl
pushl
call
or
xorl
xor
sbb
adcl
movzbl
sub
xor
sbb
or
cmpl
movzbl
mov
mov
jmp
movl
not
jae
pushl
pushl
push
call
mov
sub
orl
adc
neg
mov
or
mov
mov
or
mov
and
mov
notl
shrd
xorl
shr
mov
cmpl
mov
mov
mov
jmp
movl
mov
jl
pushl
pushl
push
pushl
pushl
call
mov
mov
adc
xor
or
sub
addl
addl
mov
cmpl
movl
not
jmp
movl
jle
push
pushl
call
adc
xorl
or
subl
movl
or
add
add
mov
orl
xor
xorl
xor
or
shl
negl
jmp
test
out
pop
mov
mov
mov
mov
adc
clc
adc
cmp
test
loope
cld
cmp
push
cmpl
sti
pusha
js
into
cmc
nop
mov
cld
je
mov
scas
jmp
outsl
lock
cmpsb
sub
pop
cmpsb
jmp
stos
mov
andb
daa
xor
xchg
enter
fnstcw
mov
iret
pop
pop
mov
pusha
int
push
movsl
mov
add
stc
xor
xchg
repz
adc
loopne
orl
insb
into
mov
jmp
outsb
push
dec
jp
sbb
pusha
inc
cltd
cmpl
fstpl
or
stos
dec
mov
cwtl
rolb
xor
xchg
cmp
aaa
lods
and
pop
push
loop
cs
xchg
jp
sarb
sarb
loopne
inc
xchg
fidivrs
or
sbb
test
scas
pop
rol
or
or
pop
cmc
andl
sbb
xor
xlat
jo
pop
cmp
mov
jo
or
jecxz
sbb
shrl
fwait
inc
jae
jg
sarb
mov
mov
ffreep
lods
fs
pop
xchg
and
mov
adc
sti
push
out
lods
fsubrs
js
sarb
inc
pusha
imul
mov
adcb
sub
jecxz
stos
dec
xor
adc
out
flds
xchg
push
loop
or
scas
mov
sub
stos
xchg
xor
inc
out
pop
leave
sub
iret
test
scas
call
push
lahf
inc
aad
mov
lods
mov
mov
or
xor
loop
mov
inc
out
xor
jecxz
xchg
ret
jae
inc
cmp
das
jmp
shrb
rorl
in
pusha
out
in
clc
or
fidivrl
xchg
push
adc
aas
add
push
and
hlt
or
sub
lds
loope
stc
mov
dec
in
sbb
mov
lcall
mov
jb
inc
orl
out
mov
sub
xor
dec
mov
dec
sub
aam
and
jmp
insl
pop
repz
sbb
xor
daa
stc
mov
pusha
jb
mov
sbb
cmp
aaa
popa
sbb
cli
leave
lods
rcr
pop
jp
in
fldlg2
ret
insb
jmp
sbb
lods
jne
pusha
call
mov
nop
in
lcall
cmpsl
adc
ja
mov
and
call
mov
lret
cmp
mov
iret
in
sbb
fcmovb
mov
mov
dec
in
cmpsl
dec
dec
fidivrl
in
test
push
aas
push
add
loop
popf
jg
add
xchg
xadd
and
int3
stc
cmp
fwait
pop
jmp
jl
pop
sbb
fmull
push
pop
jl
enter
push
in
or
mov
jae
into
fidivl
pop
xor
dec
sub
sub
mov
adc
inc
sarl
xchg
adcl
xchg
xchg
shl
or
push
popf
jmp
outsl
or
inc
mov
fstps
jg
jo
adc
dec
aad
test
stos
pop
pop
xchg
aad
ror
jle
int
aam
imul
lcall
test
inc
dec
data16
pop
jmp
and
rcl
sub
in
aas
out
lret
testb
adc
mov
loopne
xor
mov
xor
icebp
mov
xchg
adc
iret
sahf
movsb
or
push
out
and
add
decb
mov
into
movsl
aad
into
incl
es
pop
sahf
stos
cmp
insl
inc
sub
mov
int3
ret
flds
adc
cmp
subb
mov
jne
outsb
mov
out
inc
mov
mov
testl
jno
sarb
sub
sub
sbb
ljmp
push
inc
add
xor
adc
inc
je
idiv
mov
aam
add
or
mov
adc
mov
minps
lods
je
pusha
cld
push
stos
shll
iret
dec
cpuid
xchg
outsb
fdivrs
outsb
dec
pusha
stc
call
mov
and
mov
sbb
dec
pusha
push
inc
or
loop
lea
imul
gs
dec
pop
mov
push
inc
xchg
lcall
pop
xorb
jp
out
mov
rcrl
ror
xor
sbb
movsb
mov
jo
repnz
repz
leave
and
and
out
imul
xchg
xor
sub
dec
sbb
int
pop
xchg
mov
mov
sub
movsb
arpl
ja
pop
jae
rol
mov
in
push
aam
fnsave
pop
mov
jae
testb
test
xor
int
fadd
adc
mov
add
dec
xor
rcr
lds
movsb
xchg
dec
cmc
int
stc
dec
and
lds
mov
pop
pop
cwtl
mov
mov
fldl
icebp
inc
jecxz
xor
add
sbb
cmp
mov
cmp
out
call
xchg
mov
test
es
mov
xchg
loopne
mov
sbb
push
inc
sti
jno
clc
gs
cmp
mov
xchg
loop
imul
mov
psllq
imulb
dec
lahf
movsb
mov
test
cmp
repnz
cmpsb
add
sub
int
cmp
int3
in
cmpsl
imul
imul
js
xor
inc
inc
cmp
mov
lcall
cli
adc
movsl
pop
adc
xor
and
xchg
imul
mov
jmp
xchg
xchg
mov
lods
incb
push
adc
imul
pushf
in
lret
dec
adc
addl
ljmp
cmc
shlb
pop
xchg
push
movsb
movsl
iret
les
push
insb
inc
std
xor
push
dec
jg
xor
mov
adc
outsb
mov
fisubrl
lock
sbb
mov
mov
xchg
fimull
jecxz
jae
mov
jae
jns
test
lea
or
mov
xor
or
sub
mov
subl
shrd
shr
mov
cmpl
mov
movzbl
jmp
movl
jb
push
push
call
mov
xor
sbb
sbb
andl
sbb
sbb
mov
mov
cmpl
mov
mov
notl
jmp
movl
mov
jne
pushl
push
push
push
call
add
mov
or
addl
xor
mov
add
mov
adc
adc
xor
mov
andl
xor
adcl
or
shl
or
imul
mov
mov
addl
shrd
xorl
mov
incl
mov
andl
xor
shr
incl
mov
cmpl
movzbl
movl
mov
mov
jmp
movl
jg
pushl
push
push
call
adc
mov
or
mov
dec
andl
adc
adc
sbbl
mov
xor
or
subl
shl
sub
jmp
jl
mov
xor
lret
add
adc
push
clc
adc
and
sub
scas
gs
dec
add
jg
aas
sbb
insb
sub
xchg
out
mov
movsl
ret
jle
sub
imulb
cmp
jp
pop
inc
cmp
push
sbb
out
js
and
dec
and
or
pop
hlt
bound
or
daa
adc
sbb
mov
fldl
xchg
in
inc
insb
repz
push
jmp
xchg
adc
jne
add
push
inc
in
pop
add
out
mov
ss
cmpsb
aam
ret
cmp
divl
dec
mov
add
jge
jbe
js
dec
fstpt
dec
outsb
mov
cmc
lds
or
cmp
add
mov
jb
add
ds
sbb
in
mov
xor
mulb
mov
icebp
mov
cmpsl
mov
cmpb
rclb
xchg
stos
lea
push
aam
push
sbb
mov
pop
jno
push
sub
lds
icebp
aas
xchg
stos
andl
pop
stos
add
int
mov
mov
lock
mov
aad
mov
movsl
sub
pop
jmp
cwtl
cmc
adc
clc
out
add
xchg
push
hlt
xchg
jns
push
push
ret
fldenv
jp
hlt
xchg
cltd
jle
cld
xchg
cmp
int3
mov
les
xchg
aas
imul
outsl
mov
lcall
in
jbe
inc
xor
je
int
imul
lds
pop
cmp
mov
inc
lret
pop
mov
scas
jp
sub
jns
and
add
xchg
inc
mov
xchg
dec
mov
gs
push
pop
push
dec
dec
dec
inc
icebp
jae
into
cli
mov
jae
mov
int3
mov
and
cmc
adc
pop
adc
sbb
adc
jae
mov
nop
lea
mov
jae
sub
out
or
mov
loop
inc
pop
sub
ss
movsl
cld
fwait
rol
jg
hlt
cmp
lods
mov
jecxz
mov
mov
xor
mov
imul
fsubs
aam
push
mov
jno
jg
xor
add
or
jbe
jno
rorl
cmp
mov
jo
stos
jp
pusha
out
bnd
inc
dec
call
sub
adc
xlat
push
push
jmp
imul
cmp
push
jp
jns
pop
jp
fidivrl
pop
sub
shrb
popf
xchg
daa
cld
test
lods
pop
adc
loope
test
sub
xchg
and
mov
or
sbb
ljmp
lcall
loop
push
mov
movsl
push
jns
push
clc
xlat
inc
sbb
cmp
div
mov
push
mov
mov
pop
mov
push
std
fisttpl
adcb
outsb
lds
add
add
lods
int
mov
jp
jmp
sub
call
cld
jle
fstps
js
out
xchg
stos
insb
sbb
inc
sahf
push
mull
pusha
mov
out
lock
jg
sbb
outsl
addr16
popl
xor
pop
inc
push
dec
int3
xchg
jmp
mov
arpl
ret
bound
inc
lea
fldcw
ljmp
ja
aad
push
insl
call
insl
dec
dec
dec
bound
gs
cmc
mov
mov
xchg
cmp
ja
loopne
pop
mov
push
test
xorl
mov
cmpb
in
shl
mov
aaa
mov
cmp
or
or
das
dec
mov
arpl
shld
cmc
jae
clc
mov
xor
mov
nop
inc
jecxz
int
sub
je
and
ficompl
xchg
data16
inc
rolb
lods
ret
jne
cwtl
fld
ret
stos
div
push
dec
addl
dec
adc
addl
xchg
or
cmp
std
xor
sbb
jno
add
jmp
push
rcrb
add
pop
fisubs
js
ficoml
xlat
jnp
popa
test
out
daa
sbb
cmpsb
in
mov
fcmovnu
out
jecxz
inc
dec
dec
rclb
scas
mov
dec
mov
scas
pop
mov
nop
nop
sub
or
adc
mov
fiaddl
cmpsl
sbb
inc
or
add
sub
sub
sbb
movsb
imul
mov
mov
sbb
push
xchg
sbb
adc
cltd
push
mov
fwait
xor
hlt
lods
cld
shrb
loope
test
sub
mov
pop
movsl
outsb
ljmp
dec
inc
inc
inc
jl
aaa
pop
cmp
int3
pop
in
loop
sbb
cmp
sub
add
cmp
popa
mov
mov
push
mov
fwait
imul
cmpsl
imul
mov
push
adc
mov
push
iret
enter
push
pop
fisubrl
cli
nop
sub
repnz
ret
idivb
push
imul
mov
pop
stos
xor
sub
dec
sbb
mov
inc
or
testl
xchg
enter
popf
xor
adc
inc
sub
push
aad
or
sub
in
push
aam
mov
pusha
nop
mov
and
cmp
mov
or
aam
fwait
jg
ja
sub
jp
jl
add
xchg
add
mov
mov
mov
mov
pop
mov
repnz
mov
mov
cmpsl
sbb
icebp
pop
sbb
gs
je
xchg
jle
pop
xor
mov
addr16
sub
push
pop
push
movl
adc
pop
loop
and
out
mov
lds
hlt
out
aam
lock
mov
sbb
in
xor
ret
sub
pop
popf
jnp
outsb
mov
sbb
mov
out
jp
aaa
or
je
sahf
sub
adc
stos
add
aad
lods
fcoml
pop
push
push
sub
inc
hlt
movl
cmp
mov
movl
jg
or
mov
orl
mov
shrd
xorl
mov
mov
subl
xor
shl
addl
xor
subl
or
addl
shr
mov
mov
sbb
mov
and
mov
shrd
shr
mov
and
mov
mov
xor
subl
xor
andl
jmp
pop
leave
sti
subl
xlat
or
push
inc
push
mov
push
clc
adc
fisubrl
sub
ja
mov
into
fidivrs
push
lods
sub
lock
lea
cld
or
mov
jae
test
xlat
jne
lds
jl
lock
cmp
xor
imul
inc
xor
push
int3
aam
mov
dec
or
popa
mov
add
pushw
push
pop
std
call
popa
add
aam
xchg
das
ja
and
outsl
sti
pusha
mov
xchg
and
sbb
mov
inc
mov
ja
push
fistps
sub
in
fwait
pop
fisubl
adc
or
and
xor
shl
mov
movsl
xchg
mov
add
in
and
ret
rcrb
pmaxub
mov
pop
jbe
xor
rol
sub
push
pop
mov
in
popa
lret
push
cmp
mov
or
mov
inc
add
push
inc
xor
imulb
lock
mov
pop
jl
and
mov
mov
out
mov
or
lods
mov
loope
push
sub
mov
sub
dec
nop
movsb
lahf
outsl
test
or
psllw
mov
pop
out
les
xchg
mov
pushf
cli
lret
sub
sub
sarl
in
pop
adc
in
cld
push
mov
mov
das
mov
out
test
pop
mov
popa
jne
mov
mov
mov
pop
push
cld
das
cmp
jnp
test
shlb
scas
push
xor
fnstenv
clc
xchg
fnstsw
mov
ret
pop
pop
sbb
xor
imul
inc
mov
push
sahf
scas
jo
adc
sti
mov
push
icebp
jg
mov
test
scas
mov
out
bound
roll
arpl
sbb
outsl
sub
data16
xor
das
clc
imul
and
add
lahf
sub
add
fld
ja
faddl
cld
aad
negl
lret
xchg
mov
xchg
out
dec
pop
ds
adc
pop
stc
or
push
adc
ret
ljmp
or
sbbb
jp
or
pop
call
cmpsl
fmull
cs
cltd
pop
cmpsl
add
scas
xchg
hlt
or
rclb
addb
add
dec
push
ficoms
add
loope
lods
mov
mov
cmp
repz
roll
outsb
ds
lahf
test
sub
ret
push
ss
stos
addb
dec
repnz
jbe
call
push
mov
xor
xor
loope
mov
dec
mov
stos
stos
cmp
test
insl
out
mov
cmp
xor
int
pop
jmp
mov
jnp
sub
call
mov
sbbl
push
xchg
mov
stos
sub
dec
js
and
xchg
dec
cmp
cmp
ss
inc
and
jl
in
or
iret
fwait
repz
sti
outsb
inc
adc
jecxz
daa
jmp
push
addr16
cmp
out
out
cltd
js
mov
push
fildll
pop
mov
stos
mov
repz
test
pop
adc
or
fistpll
mov
frstor
icebp
xchg
stos
nop
hlt
hlt
ret
fmul
or
inc
enter
jmp
xlat
mov
or
sahf
sbb
cmp
scas
hlt
outsb
outsb
loopne
inc
pop
cmc
scas
mov
daa
sbb
xor
mov
int
inc
add
in
fstpl
test
add
mov
loop
jmp
pop
clc
cmp
frstor
stos
outsl
push
inc
xchg
mov
push
xchg
xchg
xchg
jne
mov
inc
cld
push
lcall
stos
mov
push
int3
push
lcall
inc
ljmp
stos
cld
or
xchg
sarb
popf
dec
and
sahf
push
xor
inc
cmc
mov
and
push
test
cmpsb
mov
iret
mov
mov
cmovbe
sub
xor
dec
aad
fidivrs
das
jmp
ficompl
mov
pop
mov
mov
pop
mov
dec
or
dec
arpl
into
jge
repnz
cmp
fwait
addb
movsl
roll
inc
out
xor
test
mov
nop
lods
pop
mov
push
mov
es
das
inc
test
in
jp
out
arpl
jb
rcrb
xor
gs
push
mov
fnstcw
or
out
sti
mov
mov
fwait
mov
nop
jb
cli
enter
sbb
incb
lret
mov
pop
sahf
adc
cli
pop
or
add
pop
push
js
and
mov
adc
mov
out
cwtl
mov
jno
pusha
leave
mov
adc
repz
adc
je
xchg
scas
adc
ljmp
addr16
loopne
mov
xchg
jnp
les
fs
out
je
pushf
mov
shr
cltd
xlat
jg
pop
adc
jg
lods
test
mov
fbstp
xchg
subl
in
out
inc
or
push
adc
mov
notl
int
ror
pop
xor
in
stos
andl
dec
pop
mov
mov
out
pop
jae
mov
push
arpl
mov
out
fs
cmp
adc
inc
mov
out
mov
icebp
dec
fbld
mov
adc
adc
fidivrl
adc
or
int
add
in
add
adc
mov
mov
popf
sub
das
cmp
stc
lock
dec
shll
xchg
pop
cli
idiv
mov
mov
and
popf
jae
ds
sbb
stc
aam
fistpl
dec
ja
les
aaa
out
mov
ret
ja
mov
add
add
out
out
sbbb
leave
cmp
sbbl
loope
sbb
mov
xchg
fistl
cmp
jp
cmpsb
jle
xor
test
push
xor
push
scas
rolb
dec
lea
pop
inc
stos
out
rcr
mov
push
mov
mov
sahf
jg
loop
imul
mov
sbb
push
mov
jb
fmull
push
in
loope
andl
imul
jmp
mov
or
push
and
ljmp
inc
xchg
jge
adc
clc
adc
mov
aad
dec
jl
push
out
fnstsw
mov
lret
jnp
fmulp
inc
mov
lds
scas
add
jns
insl
mov
in
sar
rcrl
sti
xlat
loop
pop
jnp
jnp
fwait
inc
lcall
push
or
push
or
gs
inc
jb
lds
jne
mov
add
jb
lcall
xchg
mov
push
xor
ss
xchg
mov
sarl
push
cs
inc
ds
out
xor
push
test
notl
push
pusha
frstor
or
cmp
scas
push
repnz
mov
push
nop
jae
add
bound
cmpsl
ss
jo
loopne
repz
mov
in
mov
xlat
aam
pop
pushf
dec
mov
aaa
popa
mov
loop
das
js
aad
jp
cmp
iret
loop
xchg
mov
ret
sbb
js
lret
push
inc
daa
cmp
xorl
cmpsb
mov
popa
lock
nop
pop
lahf
in
jo
lcall
pop
repz
push
xchg
cld
repz
sbb
add
lods
jl
push
dec
mov
cmc
inc
mov
dec
inc
cmpsb
pop
aam
xor
mov
es
pop
les
mov
orb
xchg
std
lret
cmpl
mov
aad
cwtl
stc
ss
in
add
mov
data16
gs
and
in
add
sub
mov
push
mov
pop
iret
aaa
push
ljmp
mov
dec
sub
rcr
dec
inc
outsb
mov
lods
or
jae
ja
dec
ds
xchg
mov
mov
pop
sub
loopne
push
jnp
stos
stos
add
into
bound
insb
jns
stos
or
jo
push
lods
pop
lret
movsb
test
inc
leave
sbb
and
cmp
insb
jno
push
sub
orl
fwait
pop
mov
loopne
or
insb
mov
adc
in
ss
fs
xor
push
enter
mov
pop
push
pop
cli
jp
rcll
add
adc
movsl
jns
push
mov
shrl
rcrb
call
addr16
scas
unpcklps
sbb
cmpsl
mull
lret
ret
sub
cwtl
inc
adc
dec
mov
aam
jb
pop
sub
lock
popf
pusha
sub
ja
cmp
jbe
mov
lcall
ljmp
cmp
jmp
dec
shlb
push
stc
mov
or
mov
lcall
sarb
std
xchg
push
gs
cmp
adc
sbb
repz
scas
dec
pop
mov
adc
add
int3
sti
and
pusha
lret
and
imul
mov
mov
pop
shll
bound
xor
enter
fsubl
mov
movsb
lret
js
sbb
push
repz
test
ljmp
inc
scas
scas
ret
xor
nop
dec
lahf
addr16
mov
scas
not
or
pop
mov
mov
mov
notb
push
push
add
mov
inc
pop
inc
cltd
mov
pop
dec
mov
sbb
add
dec
shrb
fcomps
test
push
pop
rol
lcall
cmc
dec
push
jno
and
push
mov
nop
sub
adc
test
sbb
fmul
sbb
pusha
and
roll
adc
bound
aad
jle
sbb
fisubrs
ds
fsubs
xor
and
mov
into
popf
mov
sub
out
hlt
addr16
and
mov
aam
jmp
mov
add
sbb
pop
pop
loop
data16
mov
cmpsl
sbb
ss
loopne
adc
lock
inc
ja
add
jmp
fists
test
fadd
pop
imul
fidivrs
sub
cmpsl
addb
ljmp
jno
out
int3
jg
mov
or
leavew
vmovddup
xor
call
outsl
adc
add
lods
xlat
fnsave
js
xorl
push
pop
dec
pushf
xchg
jnp
sbb
mov
pop
dec
ds
sub
inc
jg
xchg
lret
mov
add
lcall
rcrb
cmp
cld
sbbl
xchg
cmp
mov
imull
mov
push
fdivp
gs
pop
add
fmuls
call
push
dec
push
mov
cmp
fnstsw
push
in
add
mov
inc
aaa
jne
jge
inc
inc
jns
jb
clc
enter
dec
imul
out
cmpsb
sub
add
lret
in
into
aas
add
jae
hlt
mov
mov
clc
push
fs
das
enter
repz
dec
jae
jp
and
loope
dec
cmpsb
test
stos
adc
popa
sbb
inc
push
sbb
xchg
xchg
inc
mov
loope
fistl
mov
or
lock
pop
jmp
out
std
lock
hlt
arpl
push
xchg
mov
dec
outsb
lret
cmp
out
mov
pop
leave
outsl
pop
out
jl
shlb
sbb
imul
and
and
test
stc
sub
adc
jbe
lods
mov
sub
sbb
push
mov
insb
lods
sbb
jge
xor
push
mov
xor
sti
pop
sub
mov
aas
hlt
gs
pushw
adc
mov
adc
ss
loop
int
cmp
ljmp
adc
adc
jmp
jg
xchg
outsb
imul
repnz
pop
mov
inc
push
mov
mov
ds
and
or
and
xchg
inc
loope
and
ss
jl
mov
ror
and
mov
ds
decl
inc
fistl
pop
xorb
shl
movsl
fdiv
ljmp
inc
daa
shrl
insb
or
sub
cwtl
lret
xchg
loopne
shrb
inc
push
push
rcll
xor
mov
in
test
sbb
pop
mov
ljmp
or
pop
lcall
stos
cmpsl
lock
aam
jmp
punpckhdq
sbb
jle
mov
mov
insb
xchg
or
bound
in
jmp
sub
jmp
mov
xorl
mov
orl
shrd
mov
orl
jmp
or
dec
addr16
adc
push
into
add
outsl
adc
push
clc
adc
movsl
in
std
push
jge
out
sbb
popf
inc
pop
adc
mov
insb
xchg
add
test
add
aam
mov
sub
rclb
idivl
mov
mov
jne
scas
lcall
push
adc
mov
lahf
shrl
cmovae
mov
pop
xchg
pop
lcall
aaa
jge
jmp
jo
out
repnz
push
mov
mov
mov
xchg
jne
inc
mov
out
xchg
add
jmp
adc
into
fs
repz
fstpt
xchg
jno
xor
arpl
sub
inc
lret
inc
aam
pop
and
push
and
lock
inc
nop
cmc
loop
call
push
xor
cmp
sbb
pop
push
imul
orl
sbb
ja
pop
popa
jne
or
popa
incl
mov
ret
push
sbb
and
mov
sbb
ja
imul
add
stc
mov
cmpsl
cmp
ret
cmc
cmp
jb
in
cs
aas
mov
mov
mov
loopne
jnp
mov
popa
arpl
outsb
xchg
hlt
adc
push
clc
jae
mov
push
xchg
xor
inc
fcmovnb
dec
pop
arpl
fwait
mov
ret
int
add
sub
ja
jle
les
incb
push
or
in
add
cwtl
es
cmp
imul
sub
xchg
mov
dec
push
xor
and
mov
cld
push
mov
hlt
adc
movsl
arpl
insb
sbb
rorl
movsl
xor
or
xchg
xchg
mov
jb
adc
adcl
pop
cli
test
sarb
popa
sbb
add
jne
jb
lea
fidivl
stc
call
iret
rorb
nop
mov
add
mov
jmp
adc
nop
repnz
fadds
jae
adc
mov
xchg
adc
xor
shlb
fidivs
adc
pop
sbb
xchg
repz
js
into
inc
in
and
scas
in
test
pop
inc
jle
lods
push
add
shr
push
adc
gs
stc
sbb
jmp
mov
jnp
mov
dec
test
movsl
movsl
dec
sahf
or
dec
mov
pop
call
test
leave
lret
sbb
int
mov
ret
shrl
add
xchg
lret
cmp
push
repz
aad
push
jae
aam
mov
adc
pop
pmovmskb
xchg
fldcw
in
dec
mov
jae
inc
out
dec
out
rolb
adc
sub
pushf
repz
ret
test
orl
rorl
inc
jge
in
add
stc
aad
roll
in
repz
mov
jne
aam
mov
iret
scas
in
loop
std
dec
movsb
xchg
or
popf
xchg
int
fdivrl
aas
ja
nop
sbb
lret
test
outsb
add
xchg
adc
or
adc
xchg
fstpt
and
jns
int
aaa
mov
sbb
jmp
clc
sub
mov
or
or
push
sbb
iret
xchg
movl
push
movsb
jnp
inc
xor
dec
cltd
mov
jb
jo
stos
push
adc
fwait
dec
pushf
cmp
fwait
add
jmp
ja
insb
push
ss
adc
sbb
inc
add
aaa
sbb
popf
mov
loopne
push
arpl
das
sub
add
aas
sbb
shll
por
movsl
dec
or
out
or
stc
pop
pop
testl
loop
fbld
out
jbe
xor
pop
inc
push
adc
sbb
sarl
rolb
daa
stc
inc
mov
sbb
mov
push
cmpsl
jb
mov
sub
stos
cmpsb
adc
imul
mov
or
mov
pushf
sti
ds
inc
mov
enterw
add
mov
divb
cli
push
jmp
dec
shll
xor
sarb
sti
cli
cmp
xor
lcall
mov
les
arpl
sbb
enter
inc
call
add
mov
fwait
or
push
mov
mov
pop
cmpsb
dec
adc
sbb
and
popa
pushf
imul
and
mulb
xchg
push
mov
or
inc
jnp
add
xchg
xor
push
pop
add
jmp
inc
pop
inc
out
pop
xchg
lahf
negl
lret
mov
mov
dec
dec
bound
imul
lods
enter
jecxz
cli
das
pusha
hlt
out
jo
js
hlt
pop
sub
jle
lret
cwtl
loopne
sbb
out
dec
ret
out
mov
loope
mov
push
mov
fwait
cs
insb
arpl
je
dec
xlat
xchg
mov
mov
pop
jge
xchg
fiaddl
or
insl
and
jno
cmpsb
fprem1
fdivl
mov
loope
push
aad
test
sarl
sub
jnp
push
addb
jns
movsl
outsl
ljmp
inc
hlt
adc
mov
repz
arpl
bound
xchg
fidivrs
jl
mov
fldcw
ss
mov
lods
lcall
inc
mov
push
fcmovu
addb
pop
push
fcomps
dec
subl
adc
push
inc
xor
or
dec
mov
and
push
shlb
loop
inc
pop
adc
cmp
popf
xor
addr16
idivl
jle
xchg
icebp
mov
add
repnz
push
jmp
ja
xchg
xor
jae
fprem1
mov
jmp
push
imul
xlat
sbb
pop
cmp
rorb
les
lods
cmpb
lock
popf
aas
jns
push
add
ret
shrb
inc
push
xchg
es
jo
mov
and
dec
fcompl
jno
int
data16
mov
repz
lret
inc
dec
repz
add
push
jl
scas
sub
adc
mov
addl
xor
orl
shl
xor
orl
or
shr
xorl
mov
sub
mov
mov
mov
shrd
shr
jmp
ljmp
sub
sbb
dec
inc
adc
clc
adc
pop
xchg
movb
jmp
xor
ret
or
and
bound
inc
aad
stos
xorl
icebp
jnp
xor
bndstx
loopne
jnp
ljmp
scas
out
push
adc
rorl
in
test
pop
push
mov
inc
fmull
in
gs
ds
mov
rclb
xchg
lret
je
popa
lcall
sete
mov
jecxz
out
sarl
xlat
pop
xor
jecxz
addr16
cmp
sub
xchg
subb
and
add
fildl
sub
mov
out
pop
dec
cmp
popf
pop
pop
in
repnz
adc
les
pop
push
dec
cli
push
gs
mov
push
movsl
test
out
cmc
pop
adc
xchg
inc
sub
lods
or
jmp
push
test
lcall
mov
les
into
xorl
adc
xchg
pop
test
mov
push
add
out
lds
and
dec
fsubrl
sbb
imul
pop
xlat
pop
fcompl
subl
aaa
inc
jle
cld
xlat
add
sub
cmpsl
stos
inc
cmp
adc
stc
in
movsl
sti
jb
dec
push
push
test
mov
and
pop
push
loopne
pop
adcb
pushf
add
mov
out
es
jno
fistps
scas
imul
out
rcr
sbb
mov
loopne
xor
mov
pop
mov
cmp
add
fwait
sub
out
or
fwait
pop
int
arpl
js
xor
pop
mov
add
fwait
imul
stos
fdivp
jl
or
or
nop
test
out
xor
shrb
cmovs
fmuls
iret
cmp
data16
jmp
leave
push
aaa
mov
adc
mul
jo
pop
jbe
aas
push
push
sahf
test
dec
lods
fldt
jmp
xchg
mov
inc
clc
outsl
pop
cmp
mov
repnz
out
inc
jbe
es
cmp
aam
adc
out
test
dec
inc
cmp
into
test
iret
clc
pop
out
ds
xchg
scas
movsl
pop
dec
dec
cmp
loope
xchg
mov
stos
das
in
cld
or
bound
das
aad
in
loopne
jb
stos
cld
lret
add
inc
lea
xlat
lahf
dec
cmp
mov
aam
fisttpl
and
daa
jmp
ficomps
in
push
push
xor
iret
ret
add
cmpsb
adc
andl
and
and
sahf
cwtl
int
xor
imul
fwait
inc
xor
cmpl
or
in
iret
ror
adc
xor
dec
insb
stc
or
sub
push
sbb
mov
sbb
mov
mov
mov
cmp
xor
pop
fnstsw
and
or
pop
jnp
or
subb
dec
cmc
xor
enter
xchg
fadds
lret
sbb
pop
dec
imul
les
or
aam
cwtl
into
jg
mov
push
jne
cmpsl
shrb
xor
inc
fs
outsb
insb
gs
add
je
sub
stos
int3
popf
jbe
xchg
xchg
lret
mov
cmpsl
pop
mov
cmp
jno
jns
pop
sbb
inc
lahf
xchg
adc
ret
lea
pop
imul
imul
je
lea
add
push
out
cld
mov
lea
mov
mov
push
pushf
or
fisubrs
pop
mov
repz
dec
sbb
mov
in
inc
jae
lea
push
jo
dec
cs
sub
xchg
or
inc
push
lock
shlb
cmpl
nop
mov
and
pop
orb
fbstp
fwait
inc
mov
jne
sbb
push
mov
stc
in
call
add
adc
push
loope
out
ficomps
inc
fucom
in
cmp
push
call
jp
fs
and
dec
addb
int
data16
dec
cld
mov
push
xor
repnz
push
shll
and
add
js
or
loop
mov
inc
fstl
add
push
mov
fistpll
jl
test
inc
xchg
cmpsb
pop
mov
out
jne
jle
add
jno
adc
inc
fcmovu
fmuls
js
rorb
sub
adc
push
jno
popl
and
cmpsl
jecxz
in
into
mov
pop
data16
pusha
jne
xor
addr16
dec
insb
loope
inc
lods
push
push
sbb
nop
and
rcr
into
ljmp
inc
mov
mov
mov
shrb
add
subl
push
stos
bound
out
ljmp
jle
push
dec
pop
inc
arpl
hlt
jo
jmp
mov
es
add
ror
push
dec
mov
nop
clc
fsubs
xchg
dec
xchg
ja
inc
or
fmuls
mov
test
scas
fs
sub
mov
leave
jo
mov
inc
imull
jg
das
xor
inc
popf
sbbb
cld
loope
mov
shll
imul
test
cld
and
sub
add
in
cltd
push
or
lds
jmp
cmpsb
idivb
loop
out
push
xor
or
jae
sub
pop
pop
and
outsl
lcall
cli
popa
mov
aad
jp
sub
pop
addb
jl
xor
mov
cmc
mov
call
push
inc
orb
sbb
aas
outsb
negl
mov
xor
call
push
mov
subl
mov
ds
or
outsb
gs
stos
add
add
pop
push
pop
xchg
push
insb
shlb
clc
cmp
xor
mov
add
inc
jmp
xor
repnz
in
js
sub
pop
aas
or
cmp
cmp
pushf
and
dec
pop
jb
push
scas
daa
ljmp
shrb
mov
xor
mov
xor
add
sub
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
out
add
and
xlat
es
test
inc
inc
push
arpl
push
clc
adc
adc
cmpsb
dec
sbb
pop
sub
aaa
loop
std
movsl
shll
lcall
in
test
ret
jno
jae
or
mov
jle
iret
enter
mov
mov
repz
pop
adc
push
push
test
mov
mov
test
imul
cli
and
cmp
out
popa
and
aad
fs
out
outsb
mov
pop
or
fdivl
and
sbb
or
fs
loopne
addb
gs
dec
repnz
sub
andb
aas
push
test
push
scas
pop
hlt
bound
adcb
sub
mov
scas
or
enter
outsl
jae
aad
cmp
div
shlb
pop
daa
xlat
stos
or
test
icebp
rorb
enter
movsb
pop
cmpsl
jl
jae
outsl
jle
xlat
stc
sub
mov
mov
xor
daa
push
mov
lock
aas
ret
imul
dec
mov
mov
stc
dec
adc
mov
nop
aaa
sub
inc
imul
sub
repz
clc
inc
xchg
sub
fcomps
fs
imul
dec
sub
cmp
jno
scas
xchg
push
sbb
jp
xchg
insb
rcrl
shlb
jmp
in
fimull
scas
dec
or
in
cmpl
fsub
push
mul
or
inc
ret
mov
std
push
popa
aaa
sub
das
xchg
xlat
out
movsb
inc
lret
jne
cmp
cmp
xor
pop
shll
adc
inc
and
nop
addr16
push
scas
jnp
mov
ss
cmp
pop
xchg
or
ljmp
push
test
push
pop
out
test
sub
xchg
cmpsb
jo
inc
jg
push
or
adc
sub
es
pop
xchg
mov
mov
stos
mov
mov
jns
mov
ss
push
mov
dec
sahf
out
call
add
mov
movsl
cwtl
iret
mov
movsb
pop
sbb
or
push
in
cwtl
lock
jns
xchg
push
lret
pushf
mov
cmp
fwait
dec
adc
jle
test
jmp
mov
push
cwtl
adcl
test
sbb
ljmp
push
sub
cmc
lret
adc
jg
cmp
jns
mov
into
pop
jne
sbb
pop
popf
sarb
ds
psubd
jge
dec
pop
jb
movq
mov
jb
pop
jo
sub
lcall
lods
or
fcoml
ficoms
cmp
inc
ffreep
jno
dec
jge
pusha
or
xchg
jle
or
pop
dec
fs
jne
pop
inc
out
mov
imul
es
mov
rcrb
sbb
cmp
loopne
popf
addl
adc
mov
in
dec
cltd
ljmp
hlt
mov
add
adc
cmp
pop
popl
jae
leave
mov
add
lret
clc
mov
mov
fwait
dec
pop
add
sub
inc
mov
and
mov
loop
and
stos
xor
enter
pop
cmp
lahf
inc
cmp
fwait
std
add
jmp
out
add
movsl
ss
jg
adc
dec
xchg
adc
cmpsl
popf
jge
sub
jg
mov
xchg
pop
xor
jl
mov
jae
cmpsb
call
rcll
in
popf
dec
pop
leave
shlb
adc
xor
push
test
ljmp
test
inc
shlb
add
cmp
in
fsubs
adc
mov
fmul
mov
sub
rcll
fidivrl
cld
insl
adc
push
and
sbb
add
add
lods
pushf
push
aaa
xchg
fcompl
sub
inc
call
inc
enter
lods
add
sti
or
jne
in
into
test
pushf
jmp
and
dec
sbb
push
test
sub
cmp
adcb
inc
mov
mov
adc
pop
addr16
mov
jl
jcxz
lds
mov
cmpb
jle
mov
test
cmpsb
mov
das
adcb
sbb
mov
mov
bound
icebp
mov
xor
push
nop
ds
ret
in
sub
sbb
cmovbe
int
mov
xor
cmp
and
lcall
sbb
jmp
mov
add
mov
mov
rcll
in
mov
notb
outsl
jno
lds
ljmp
mov
fdivl
pop
sbb
jbe
pop
jbe
push
dec
sbb
mov
xchg
orl
push
mov
in
jmp
add
in
loop
loopne
push
rorl
xlat
aad
jmp
lahf
xchg
jle
int
cmovne
adc
sub
leave
push
out
lret
daa
test
sbb
addr16
adc
imulb
xchg
jmp
insb
fiaddl
lods
sub
test
jns
push
or
jnp
cmp
push
cld
je
sub
imul
lret
test
pop
mov
xchg
int
xor
sub
inc
lods
mov
fwait
xchg
xchg
fwait
xor
mov
adc
jle
adc
xchg
mov
addr16
lock
andl
inc
mov
mov
lcall
sbb
mov
arpl
mov
inc
jg
leave
subb
rorb
fcoml
fisttpl
jne
push
popa
jmp
add
or
or
imul
xor
stos
sbb
mov
call
sbb
popf
testl
leave
lret
cmp
out
fistl
stos
lods
inc
sub
into
ror
and
cmp
sar
push
adc
xchg
stos
in
push
bound
int
pop
mov
add
xchg
idivl
mov
add
add
xchg
cmp
mov
cmp
cmp
dec
sbb
pop
dec
push
jbe
dec
ss
movsl
or
subl
bts
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
jmp
inc
mov
mov
movsl
stc
pop
xchg
push
adc
push
clc
adc
stos
sub
ret
pop
lahf
stos
pop
jle
scas
fwait
adc
cmp
lods
mov
out
xchg
pop
xor
or
test
jns
and
daa
arpl
adc
enter
add
in
sub
dec
leave
inc
in
mov
pop
xor
ljmp
int3
jp
fsts
stc
pop
nop
lcall
int
xchg
test
test
sbb
push
mov
jne
push
xor
stos
xchg
sub
sbb
pop
sub
jno
mov
pop
xchg
std
inc
adc
jg
ljmp
ljmp
mov
push
mov
push
stos
test
subl
and
inc
jle
mov
pop
sarl
add
je
and
inc
into
inc
push
popf
lret
mov
cmp
cmp
cmp
call
xor
movsb
enter
mov
rcrb
sub
lret
imul
fisttpll
roll
mov
out
add
and
and
adc
cmp
jg
mov
xchg
inc
xchg
xchg
adc
add
pop
data16
mov
les
mov
mov
in
call
sbb
mov
into
stos
sbb
insl
adc
add
push
sub
and
shr
jecxz
jge
es
pusha
imul
pop
sbbl
rorl
xchg
lds
mov
adc
sbb
cmpsb
insb
fwait
aas
inc
mov
dec
and
pop
jg
add
jbe
int
lahf
lods
cmpsb
test
sub
adc
fiaddl
std
mov
xor
rolb
loop
adcb
add
or
das
pop
imull
or
sarb
popf
cmc
sti
push
es
ja
stos
adc
dec
inc
pop
and
and
ror
or
pop
xor
mov
pop
mov
lcall
out
mov
or
clc
xor
and
adc
mov
and
mov
and
push
or
mov
xor
iret
or
outsl
xchg
xchg
std
pop
adc
add
push
jne
lds
cmc
xlat
aas
loope
cmp
cmp
or
les
lds
sbb
lock
daa
push
icebp
addr16
ss
fwait
mov
and
in
adc
sub
mov
dec
push
lret
lret
stos
xor
push
sarl
xchg
icebp
outsb
mov
ljmp
add
les
pop
je
cmp
popa
in
sahf
ja
in
mulb
std
mov
cmc
mov
call
testb
mov
xor
xchg
mov
lock
aad
adc
adc
cmpsl
repnz
mov
jmp
mov
popf
daa
add
jns
push
and
mov
mov
inc
or
insl
imul
mov
mov
fstpl
push
mov
or
test
out
xchg
scas
aaa
rcr
add
mov
and
lret
dec
push
sub
cmp
in
adc
jo
dec
add
mov
xchg
mov
rclb
dec
shrl
add
fmuls
aad
fyl2x
push
pop
cmp
push
and
rcll
addr16
adc
xorl
lods
adc
mov
movsl
les
sbb
and
sub
lods
adc
out
test
push
add
outsl
fsts
sub
iret
lcall
sub
jno
ret
pop
or
sub
adc
lcall
jns
cmp
xchg
push
and
nop
push
jae
push
js
xchg
xchg
push
jne
pusha
mov
imul
mov
daa
shrl
aas
daa
lods
inc
lcall
test
lret
xchg
mov
xor
fwait
cmp
add
cmp
addr16
add
scas
inc
xchg
ja
push
mov
call
adc
mov
cli
popf
jp
xchg
mov
sub
jbe
stc
mov
xchg
cld
call
std
repz
mov
cwtl
adc
shlb
call
stc
dec
cltd
or
sub
lods
aam
insl
loope
ret
mull
cld
mov
mov
xchg
dec
fucomp
mov
out
sbb
mov
jecxz
push
sarb
or
sub
js
mov
leave
sub
sbb
sbb
add
stos
push
sti
test
mov
fs
xchg
jbe
sbb
iret
push
fs
cmp
dec
or
pop
std
push
jbe
or
loop
ret
dec
fstpt
out
adc
orb
in
repnz
cmp
jbe
mov
xlat
mov
mov
cli
add
jns
mov
std
fwait
clc
lret
pushf
inc
xchg
cmpsl
mov
mov
pop
sbbl
and
or
inc
test
sub
es
dec
test
mov
in
fistpll
test
jb
xchg
inc
jo
lret
ljmp
push
or
pop
jge
jbe
mull
popf
es
pop
jb
dec
hlt
insb
adc
xor
sbb
out
xor
jae
mov
mov
movl
cmc
rolb
ret
add
outsl
mov
xor
pop
xchg
jl
dec
jne
pop
out
jne
mov
subb
dec
fs
push
push
inc
dec
jp
mov
jnp
mov
sbb
fwait
icebp
xor
and
roll
inc
adcl
xchg
add
adc
popa
adcb
mov
sbb
stos
or
xchg
arpl
ror
sti
jecxz
jmp
dec
mov
aaa
ret
mov
cld
push
lret
ret
repnz
clc
aam
loopne
jg
sbb
je
fcmovbe
int
popa
sbb
mov
fdiv
inc
scas
outsb
cld
test
dec
push
mov
add
mov
xor
es
cld
sbb
imul
or
stos
jae
mov
fdiv
mov
cltd
cld
xor
or
mov
jmp
add
mov
sbb
dec
ss
add
inc
adc
push
clc
adc
in
ljmp
jno
push
insb
mov
data16
inc
orl
xchg
cs
ret
adc
sub
add
sbb
inc
dec
fnstenv
sub
pop
les
adc
xor
addb
std
test
js
sub
gs
mov
scas
sti
shlb
adc
outsl
xor
sub
adc
and
push
jmp
icebp
jo
mov
aad
movsb
and
sub
adc
adc
dec
or
xchg
outsl
pop
pushf
aaa
sbb
lods
int
lock
dec
mov
jg
rcl
add
jle
add
test
and
cld
dec
out
jp
and
repz
fstps
inc
aaa
sbb
stc
push
aas
push
xor
xchg
xor
fsubrl
int3
jle
stos
in
test
icebp
je
mov
cwtl
or
jp
inc
sub
dec
fstl
out
push
out
push
cmp
pop
fdivrp
rclb
das
popf
scas
jg
nop
test
test
aaa
test
ljmp
scas
lcall
adc
popa
cltd
outsl
movsl
fucomi
adc
mov
or
movzbl
bound
mov
dec
xchg
pop
clc
fimull
imul
lea
pop
sub
popf
xchg
lock
mov
lret
rcrb
lods
fucom
and
arpl
add
push
push
cli
imul
or
mov
xor
cmp
bound
loope
repz
mov
jmp
xchg
aas
das
pop
loop
pop
je
sahf
sub
fsubl
sarl
loope
pop
pop
dec
push
push
outsb
jnp
and
sbb
jmp
je
addl
into
sbb
cmc
mov
xchg
jmp
push
aas
inc
jg
mov
call
mov
xchg
test
sbb
es
pop
cmp
shrb
dec
xlat
and
ss
xchg
leave
in
jne
push
js
jo
add
popa
aas
movsl
cmpsb
add
lret
scas
push
aam
and
xor
lcall
std
test
mov
mov
adc
xchg
in
push
push
out
add
sbb
sbb
xor
xor
add
fmull
jno
cs
fidivrs
inc
mov
outsl
sbb
shll
and
inc
stc
add
icebp
orb
inc
sti
ljmp
mov
adc
loopne
xchg
adc
inc
dec
add
fwait
mov
push
shrb
fsubl
enter
loop
aas
and
jecxz
aas
test
fisubs
sub
mov
add
ss
push
test
pop
orb
mov
loope
addr16
inc
xchg
mov
movsl
pop
fwait
mov
shlb
xor
psubusw
scas
sub
mov
fidivs
mov
mov
pop
pop
jg
xor
or
adc
xchg
shlb
jb
sbb
mov
in
pusha
loop
into
add
xchg
test
test
orb
pop
or
cmpb
cmp
cmpsl
push
pop
ret
sub
loopne
mov
jmp
cld
push
xchg
pop
rep
adc
cmpsl
dec
inc
cmpsl
shl
pop
xor
lods
sarl
testl
fdivl
popf
mov
xchg
adc
loope
dec
imul
sbb
sbbb
jbe
mov
cmpb
adc
and
jecxz
cmpsb
mov
adc
fs
mov
inc
sbb
push
pop
push
pop
mov
loop
out
fs
xchg
and
mov
jmp
scas
not
inc
orl
or
insb
push
ret
ja
mov
shll
filds
cmp
pop
fsubp
xor
imul
or
es
adc
push
xchg
outsb
xor
jmp
out
fimuls
push
mov
sub
push
cmpb
push
out
jns
clc
stos
jno
daa
push
jg
js
scas
and
mov
jmp
dec
xlat
ret
and
int3
push
xchg
sub
jbe
xchg
dec
push
rorl
std
or
mov
incl
mov
clc
adc
fndisi(8087
add
xchg
imul
in
testb
in
imul
in
popf
pop
js
sbb
dec
insb
sub
inc
pop
fadds
push
push
notb
stos
iret
mov
adc
inc
loopne
jle
orb
dec
iretw
enter
pop
cli
xor
push
scas
cmp
call
jle
inc
xor
lods
insb
shrl
mov
hlt
sub
ja
push
push
lods
std
mov
inc
xor
div
in
aas
cmpl
xchg
loopne
xchg
jnp
adc
int3
aaa
stos
iret
adcl
add
stos
sub
lods
mov
lods
mov
movsl
and
lahf
cmp
mov
faddp
int3
xor
push
mov
rorl
inc
sbb
std
cmpsb
cmpsl
add
pop
and
cmc
gs
aad
ds
xchg
jbe
mov
lret
mov
ret
push
dec
mov
sub
jbe
push
dec
jle
loopne
cmpsb
jae
addr16
mov
loop
out
and
es
mov
push
faddl
daa
out
test
push
inc
cmp
les
pop
adc
arpl
lcall
xor
cli
mov
jge
jmp
insl
pushf
push
out
das
aad
leave
roll
fnstsw
dec
xor
ljmp
test
aad
mov
loop
dec
in
sub
push
mov
xchg
jae
shll
das
xchg
aad
insb
sbb
dec
dec
sbb
movsl
ret
loop
dec
mul
pop
sub
cmp
jne
pop
out
pop
ret
aaa
xchg
or
pop
lods
jg
mov
scas
push
or
inc
in
sbb
mov
add
ja
xlat
bnd
xor
add
xchg
fstps
mov
add
jge
and
pop
aad
mov
mov
or
frstor
mov
sub
stos
aaa
inc
dec
xor
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
fs
xor
push
fs
fisubrs
adc
adc
push
clc
adc
jmp
hlt
push
jb
or
repz
testb
imul
sub
fistpll
add
mov
cmp
inc
mov
sarb
mov
lcall
scas
mov
in
aas
in
repz
push
push
xor
aas
cmp
jo
dec
jb
jg
cs
jae
and
mov
lcall
mov
bound
mov
add
popa
cmp
mov
pop
das
fdivp
fcom
aam
push
stos
and
jmp
pop
outsb
cli
scas
push
jp
mov
jl
stos
sbb
inc
mov
jnp
xchg
packssdw
inc
adc
sahf
push
mov
inc
fldenv
mov
adc
xchg
movsl
test
fsubr
pop
es
sbbb
xchg
call
adc
or
shlb
jns
push
mov
jb
scas
xlat
fisttps
xlat
jecxz
lods
push
adc
outsb
cmp
orl
sahf
mov
inc
lea
test
aaa
cld
dec
push
inc
imul
out
lcall
mov
push
pop
lods
or
push
dec
inc
lret
movsl
add
movsb
hlt
sub
lods
sub
shlb
adc
xchg
insl
rorl
pop
dec
loopne
lret
inc
ds
mov
sub
sub
jp
add
lock
aam
cmp
or
mov
ds
mov
cmp
rol
lods
cmpsl
out
add
js
pop
jmp
jg
js
inc
mov
rorl
xchg
test
inc
jge
jle
out
stos
xlat
mov
mov
lahf
xor
and
adc
scas
and
loope
cmp
or
xor
in
or
lret
pop
jge
pop
lahf
dec
pop
push
mov
inc
push
stc
and
mull
inc
cmp
pushf
xor
lds
sbb
data16
adcb
xchg
pop
rclb
sti
stos
ds
iret
mov
push
inc
xor
sub
shll
mov
inc
frstor
or
cmp
movsb
sbb
xor
jnp
sub
cmp
int
shl
pop
cmp
out
mov
fdivrl
fiaddl
repz
out
stos
insl
inc
shrl
fwait
mov
and
xchg
arpl
cltd
mov
insl
fsubr
mov
popf
push
ss
iret
xorl
repnz
mulb
cs
movsb
hlt
or
hlt
ret
mov
ljmp
scas
int3
lret
repnz
mov
xchg
add
mov
insb
jo
adc
bound
lret
jmp
ret
imul
and
dec
mov
mov
mov
in
orb
mov
loope
es
iret
leave
and
data16
and
add
ss
cmc
xlat
dec
mov
outsl
and
insl
das
push
and
int
jnp
in
das
mov
pop
aaa
jecxz
fistpll
inc
sub
outsl
sub
and
sahf
es
and
push
sbbl
jl
jecxz
std
xchg
outsb
sbb
xor
ds
jecxz
aas
mov
in
xor
mov
or
lret
sbbb
inc
mov
push
dec
xor
filds
jmp
push
addb
aam
xor
hlt
push
jne
cmp
out
mov
iret
push
ret
mov
scas
dec
push
push
dec
cwtl
xor
push
jne
jne
loope
xor
out
sti
in
sbb
jg
push
push
adc
and
outsl
in
mov
lret
subl
push
out
and
xor
neg
mov
xchg
rorb
push
adc
call
clc
pusha
test
xchg
fidivrs
sbb
std
push
pop
mov
push
pop
pop
jmp
mov
cltd
out
xchg
test
insb
dec
popf
sbb
xchg
xchg
cwtl
inc
nop
cs
lock
xchg
or
pop
mov
sbb
fsubl
mov
xchg
icebp
sbb
mov
xchg
lea
imulb
inc
inc
add
jp
inc
daa
ja
sbb
xor
daa
mov
das
xor
test
cmp
push
push
lds
dec
jno
out
or
cmp
or
jmp
mov
cmp
push
sub
cmp
test
sbb
jge
sub
jmp
jb
mov
ss
jb
pop
xor
icebp
add
adc
mov
and
push
jb
insl
mov
adc
in
mov
leave
and
fs
mov
fisttpll
push
mov
in
jp
mov
xor
jnp
add
mov
leave
add
stos
cmp
inc
enter
mov
aad
pop
mov
gs
jecxz
sti
pop
ret
lea
or
stos
sbb
fucomip
sub
sbb
mov
and
lret
std
ret
dec
mov
psubd
shl
daa
xchg
mov
mov
icebp
sub
push
outsb
testl
pop
sub
xchg
cwtl
xchg
or
cwtl
in
sub
leave
rcll
and
ja
mov
xchg
mov
movsb
into
cmp
add
cmpb
bound
cmp
cmpsl
shrl
add
outsb
imul
ret
sub
xor
out
les
mov
or
cmp
mov
aaa
aaa
cmpsb
in
aam
add
in
pushf
mov
sbb
cmp
pop
jne
mov
xor
int
jmp
rorl
roll
andb
sbb
fbld
lahf
pop
adc
xchg
in
gs
mov
sbb
outsb
dec
mov
mov
pusha
push
hlt
out
mov
pop
add
out
mov
inc
jns
lcall
pop
xchg
ljmp
push
sub
pop
dec
push
sti
ss
cmpsb
add
fildll
ret
mov
repz
daa
dec
movb
push
stc
cmpl
xor
out
cwtl
stos
adc
jbe
mov
test
lea
mov
negl
mov
and
xor
pusha
cmp
mov
fs
out
lahf
xchg
pop
out
and
sub
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
rcr
out
xchg
xchg
push
inc
es
nop
hlt
cmp
sbb
adc
lret
cmpsb
xor
ret
pop
jge
push
popf
out
xchg
mov
xor
pop
test
xchg
dec
mov
xor
xlat
stos
fadds
xchg
add
or
js
stos
sub
aaa
lahf
in
movsb
or
repnz
pusha
and
cmc
sbb
adc
sub
and
lock
ret
movsb
cwtl
mov
out
xchg
outsl
or
push
inc
fsubrs
sbb
int
les
daa
mov
fimuls
cmp
out
jmp
das
pop
or
sub
aas
bndstx
mov
aad
or
loope
mov
nop
inc
pop
fildl
push
lea
push
jnp
jecxz
pop
and
sbb
leave
cmp
pop
xchg
inc
cmpsb
movsl
lahf
lods
pop
bound
mov
out
insb
xchg
fdivl
mov
inc
add
insb
jns
ret
mov
scas
rol
dec
pop
cli
lods
sub
popa
jecxz
pop
adc
in
insb
adc
out
lods
je
mov
mov
aas
jns
enter
mov
jg
push
stos
adcl
adc
pop
add
addl
sar
hlt
inc
or
jg
inc
imul
in
mov
push
das
mov
mov
es
mov
bound
repz
scas
fisubl
rol
pusha
pop
mov
test
mov
pop
insl
mov
pop
fsubp
andnps
xor
mov
xchg
push
push
loopne
adc
jno
test
shll
notb
mov
sbb
dec
cmp
stc
ljmp
mov
mov
jns
mov
jbe
enter
sub
inc
or
inc
repnz
loop
cli
xchg
add
sbb
lret
mov
stos
jmp
push
addr16
aaa
out
fbstp
data16
out
push
mov
pop
das
ds
xchg
or
push
sub
sbb
das
sahf
inc
lods
adc
fcmovnu
pop
lcall
pop
cmp
mov
and
mov
lcall
mov
mov
repz
xor
clc
adc
ret
fdivs
mov
inc
add
stos
les
mov
xor
lea
inc
popa
sub
push
jmp
in
xchg
xor
sub
aaa
sub
push
ret
sbb
adc
jp
jecxz
mov
into
adc
and
fucomip
rcll
add
jmp
mov
dec
sub
mov
mov
in
inc
out
or
and
daa
cmp
cs
scas
imul
aas
fisttps
dec
lret
pop
pop
xor
sub
loope
xchg
andb
push
test
in
cwtl
jo
mov
fmuls
dec
sub
cltd
enter
fwait
mov
cmp
jae
pop
lds
pop
fmull
xchg
fists
in
xor
mov
jns
sbb
fs
lock
mov
hlt
lds
mov
imul
gs
fldenv
rol
jnp
subl
mov
dec
add
popa
xchg
mov
cmp
aam
xchg
shrb
pop
push
jp
ret
nop
shlb
data16
fwait
xchg
fldt
add
add
jmp
xchg
mov
inc
into
pop
fisttpll
addb
iret
mov
and
jne
test
icebp
stos
inc
adc
cmp
inc
in
loopne
jmp
incl
push
and
pop
pop
and
pop
lahf
lods
out
xlat
mov
xor
call
ljmp
cwtl
ss
test
cld
push
popf
sub
repz
dec
rorl
iret
or
test
fistps
sbb
daa
daa
mov
adc
push
xor
in
xchg
cmp
movsl
rclb
dec
sti
xchg
pusha
icebp
mov
hlt
or
in
jecxz
jae
dec
sbb
inc
sub
ficoms
adc
movsb
dec
fcomip
pop
jl
icebp
mov
add
lods
clc
bound
push
popl
sti
mov
and
mov
popf
test
mov
out
dec
aam
dec
out
out
nop
int3
movsl
popf
out
out
mov
scas
icebp
jmp
mov
mov
jmp
inc
mov
jg
fsubs
js
cmp
sbb
orl
jl
lahf
int3
inc
sub
cwtl
xorb
out
xchg
das
add
ficomps
and
fmull
es
scas
inc
mov
test
nopl
mov
lcall
in
rorb
xor
pusha
sub
fcmovnu
std
sbb
inc
push
mov
sti
add
fstl
mov
out
inc
mov
outsl
or
xor
jmp
lds
lods
add
jb
cld
scas
test
fs
xchg
xchg
popl
lea
out
outsb
out
into
mov
cmpsb
and
imul
stos
mov
popa
faddp
xchg
jnp
movsb
pushf
aaa
pop
xchg
jmp
repz
in
xor
call
ret
jmp
jne
cs
int
mov
mov
sti
arpl
adc
cmpl
inc
ret
and
jl
sub
cmp
push
xchg
imul
jno
gs
cmp
push
idiv
jecxz
in
movl
test
mov
dec
pop
sub
sub
cs
mov
jns
jae
dec
cmpsl
lcall
out
cltd
stos
aam
push
call
test
fisubl
icebp
and
add
ss
mov
pop
and
push
cmp
popf
xchg
insb
pop
ffreep
cmp
mov
mov
loope
mov
sbb
xchg
mov
out
mov
xor
inc
push
daa
sbbb
or
adcb
and
add
mov
jns
dec
add
dec
jnp
mov
sub
sub
mov
sub
adcl
or
out
fdiv
popf
xor
mov
cmpsb
stc
push
sub
test
pop
push
xor
movsb
sub
das
mov
dec
test
mov
and
scas
xchg
cmp
cli
int3
pusha
jle
bound
ret
jbe
push
pop
and
push
sub
ja
add
add
mov
add
jns
push
rcrb
or
dec
cld
je
dec
hlt
shrd
shr
mov
mov
xor
shl
jmp
add
xchg
rorb
jl
add
adc
cli
add
data16
rclb
popf
aaa
xor
jmp
cmp
mov
cmpsl
jecxz
enter
fs
in
adcl
lods
sbb
mov
lock
sbb
shlb
sbb
mov
stos
jge
push
stc
xor
bound
les
nop
fwait
sbb
sbb
lcall
xchg
out
xor
test
add
out
movsb
jne
lods
sub
addr16
sbb
or
mov
push
or
sbb
cmp
and
sub
sbb
das
xor
cmp
mov
test
xchg
adc
xor
fiaddl
out
inc
inc
sbb
or
dec
int3
mov
push
xchg
jnp
sbb
out
pop
fidivrl
sbb
jl
add
lods
xor
xchg
out
outsl
lods
popa
xchg
testl
xchg
add
mov
pop
cwtl
fnstcw
sbb
fs
jbe
mov
mov
sub
jle
push
movsl
std
xchg
lea
jmp
out
cmpsl
push
dec
pop
fmul
andb
xchg
cmp
in
jp
bound
les
and
xchg
sub
xlat
flds
cwtl
xor
inc
es
call
inc
out
add
xchg
sub
xchg
test
pop
icebp
adc
das
jae
nop
movsb
and
adc
cs
xor
add
fsubs
outsl
jne
adc
or
pop
and
mov
lcall
jb
fnstsw
and
sbb
xchg
mov
mov
mov
or
repz
call
gs
pop
or
ja
std
or
xor
pop
or
test
cmp
ret
inc
ficoml
cwtl
dec
je
movsb
out
ljmp
xchg
jmp
jge
dec
xor
sub
and
pop
pop
adc
cwtl
jnp
cmp
loope
mov
jmp
dec
lods
lock
mov
add
pop
lods
mov
mov
popf
push
arpl
push
sub
bound
mov
mov
sub
push
aam
mov
pop
movsb
in
lcall
add
fcomps
xchg
mov
negb
enter
mov
lds
dec
imul
shl
hlt
push
sti
call
mov
mov
push
xor
loop
outsb
jmp
insb
adc
pop
scas
push
jp
xor
xchg
jp
sti
mov
push
push
sub
fiadds
pop
mov
jne,pn
cmp
insl
loop
movsb
mov
ret
repnz
cmpsb
pop
push
add
repnz
stos
repnz
cltd
es
fcompl
icebp
std
orl
fcomps
push
jno
mov
movsb
outsl
filds
subb
xchg
pop
inc
scas
sahf
inc
pop
in
push
cmpl
stos
xchg
cld
mov
mov
push
or
shlb
cmp
sbb
and
loopne
or
push
movsl
sti
xor
fcoml
aaa
xor
notl
xchg
inc
lcall
push
inc
addb
ret
or
mov
clc
andb
jb
ret
ds
rcrl
add
mov
lods
adc
ja
sarl
cmp
aam
ja
inc
dec
push
popf
sahf
int3
out
movsl
in
lcall
test
data16
loope
dec
sti
add
cwtl
adcl
punpckhbw
add
rcrb
xchg
xchg
adc
fisubl
lods
dec
push
divl
cmp
je
xor
inc
push
and
in
test
jmp
pop
push
inc
cmp
inc
sub
lods
push
sub
mov
mov
jmp
lahf
sub
in
cmp
pop
stos
rclb
aas
sub
xchg
mov
subl
les
xor
sub
inc
repz
cmp
iret
inc
adc
sub
mov
jae
cmp
popa
adc
test
imul
jl
push
xchg
and
das
xchg
popa
out
inc
in
jo
test
and
jmp
leave
dec
add
fsubrs
xor
sbb
aad
jecxz
mov
mov
xchg
in
cmpsl
adc
cmpsl
inc
stc
outsb
fadd
inc
fs
out
push
sti
push
je
jns
cmp
mov
pushw
xor
jae
mov
rcll
and
jno
mov
inc
out
cld
jg
notb
push
lret
enter
imul
stos
xchg
decl
movsb
in
ljmp
jmp
jns
jb
mov
lcall
jmp
push
nop
xlat
mov
cmp
mov
mov
fimuls
orl
mov
pop
aad
mov
xchg
jnp
pop
or
add
cmp
sti
scas
mov
in
lret
xchg
inc
pushf
cmpsb
insb
insl
sbb
mov
lret
lret
sub
loopne
fdivl
sbb
pop
and
adcl
fs
dec
xchg
jne
stos
inc
fs
nop
push
shrb
stc
daa
fiaddl
jb
stc
sub
rep
call
sbb
pop
sbb
lret
mov
sti
xor
or
push
clc
push
pop
je
cmp
push
sub
call
pop
push
fwait
pop
sbb
mov
enter
decl
push
and
aad
daa
fcomps
xlat
jae
cmp
imull
jo
hlt
scas
out
out
inc
popl
sub
or
adc
lods
push
mov
add
mov
xchg
mov
outsb
sbb
ret
lds
sbb
shlb
add
cld
add
popa
cmp
push
fwait
pushf
test
imul
sbb
inc
sbb
sub
xchg
lds
lret
fwait
xor
cmp
repnz
inc
mov
xchg
daa
jnp
sub
shll
test
push
inc
loope
add
and
mov
inc
inc
sub
popa
cmp
fs
mov
adc
jl
xor
or
lea
mov
mov
mov
shrd
jmp
aaa
aas
lods
and
andb
inc
aam
adc
push
clc
adc
pop
jno
cld
scas
mov
test
sbb
sbb
inc
scas
ljmp
xor
pop
cmc
lock
aam
in
in
or
aam
leave
xchg
in
mov
mov
ljmp
addb
sbbl
mov
mov
push
shl
ljmp
scas
subb
shl
jns
inc
sub
push
test
pushf
insb
test
addb
es
jno
call
sti
jmp
push
xchg
out
daa
lds
inc
mov
inc
nop
cld
adc
lcall
mov
xor
aas
sahf
push
ss
inc
mov
jl
xchg
in
mov
mov
xchg
arpl
or
fadd
lds
xchg
xlat
xor
fisubrl
jnp
out
dec
andl
out
imul
repz
cli
push
ret
xor
cmp
arpl
clc
add
sbb
es
lret
in
lock
pop
mov
push
popf
das
test
mov
sbb
jle
add
pop
cmp
jno
jo
pop
push
inc
dec
xchg
dec
ret
stos
and
fisttpl
pop
sub
fldenv
adc
out
lods
rcll
and
push
lahf
and
adc
lahf
mov
jge
sbb
add
pop
mov
and
push
and
pop
pop
mov
xor
int
inc
jmp
cli
cmp
mov
xlat
cmp
cli
daa
rol
call
or
mov
lahf
lcall
jne
into
jno
popa
mov
shl
add
in
or
cltd
lahf
imul
jnp
in
ret
lods
dec
jp
pop
out
xor
dec
repz
in
pop
dec
xor
jae
dec
inc
pop
jmp
and
mov
or
cltd
mov
inc
ss
aad
jo
int3
stc
ds
adc
dec
inc
add
js
mov
dec
cld
pop
mov
jae
sub
adc
test
pop
sbb
push
sbb
mov
mov
je
jb
sub
pop
dec
mov
les
cs
stos
daa
popf
enter
xor
sbb
fst
jae
movsl
or
push
ljmp
add
jl
inc
es
inc
mov
orb
std
cmp
mov
lods
lret
std
icebp
rol
jecxz
movsl
push
jnp
faddl
andl
mov
add
inc
bound
ljmp
movsl
mov
lahf
xor
xor
mov
sub
ss
mov
mov
pop
mov
jmp
mov
jb
arpl
add
inc
push
arpl
mov
inc
sbb
sbb
cmp
push
pop
outsb
js
fistpl
sbb
mov
jg
lret
ret
sbbl
das
data16
test
sbb
cli
push
push
xor
fidivrl
add
push
push
stos
sub
mov
sarb
mov
lock
jo
js
sbb
cmp
les
stos
cld
jl
loopne
ss
dec
popf
subl
bound
adc
or
xor
push
rcrb
adc
ja
into
enter
lods
lock
sub
fstpl
pop
push
mov
pusha
int3
popf
sub
fwait
xchg
xor
push
cmc
push
xchg
jnp
xor
jns
mov
repz
test
repz
sbb
xorb
in
lret
lcall
add
lret
dec
push
pusha
mov
mov
sete
js
jecxz
pcmpgtd
push
pop
out
and
cs
sarb
fiaddl
lret
mov
push
mov
js
jge
xchg
fs
xor
cmp
sbb
push
fcmovu
orb
pop
or
std
mov
js
pop
jnp
pushf
mov
in
das
dec
push
mov
dec
xchg
arpl
xchg
inc
add
xor
add
jge
movsb
add
popa
jmp
jno
jg
mov
add
push
push
scas
lcall
jge
pop
out
out
flds
jmp
test
lcall
lahf
pop
in
mov
ljmp
sbb
add
xor
fwait
ret
dec
dec
and
adc
shrl
stos
pop
add
in
gs
mull
mov
in
cmp
hlt
loop
xor
notl
xchg
je
mov
pop
jno
mov
mov
pop
xchg
mov
push
mov
add
out
shrb
aad
jge
sub
stos
lgs
pop
mov
int3
sar
adc
fsubrs
shl
arpl
loopne
inc
push
jne
jl
hlt
xor
or
loope
hlt
and
fidivs
mov
ljmp
adc
push
sub
lret
icebp
add
sbb
xchg
push
push
mov
fwait
cld
mov
add
cmp
sbb
inc
fcmovbe
fsubrl
cli
mov
inc
fistps
sbb
scas
jno
daa
xchg
lret
adc
gs
sub
cmp
iret
iret
popf
cmp
inc
cmp
cmp
test
mov
jge
arpl
cli
sbb
iret
push
cltd
arpl
cli
pusha
inc
sbb
xor
lods
int3
or
mov
cltd
ret
das
add
dec
pop
push
iret
inc
mov
addb
dec
adc
stos
iret
sub
mov
mov
mov
mov
or
pop
imul
jecxz
cmc
pop
pusha
movsl
xor
dec
test
rolb
test
inc
xchg
jb,pt
cmc
pop
pop
test
xchg
subl
test
mov
shl
aad
add
lret
outsb
addr16
jp
push
push
out
inc
mov
sbb
dec
dec
jns
sbb
mov
shlb
movsb
or
jnp
cmp
xor
inc
xor
lods
xchg
jbe
fstp
mov
xor
imul
and
lcall
sti
mov
mov
arpl
mov
dec
push
or
or
std
and
sbb
dec
sub
add
sbb
stos
pop
popa
cwtl
mov
jno
mov
mov
mov
pop
scas
repnz
or
ret
lods
jae
push
jg
cmp
call
jecxz
das
ror
xor
push
sub
or
jmp
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
jmp
dec
jmp
dec
xchg
and
mov
inc
adc
inc
adc
clc
adc
ret
jmp
add
data16
dec
cmp
inc
dec
jge
loope
jo
inc
lock
inc
cmpsl
rcrl
cltd
mov
pop
imul
mov
dec
ljmp
adc
ror
mov
pop
sbb
push
jle
sahf
lock
enter
fdivs
loope
lcall
xor
dec
aam
mov
rclb
lea
lds
fsubs
or
outsl
repnz
cwtl
sahf
jg
mov
adc
es
test
adc
repz
sub
mov
jo
fcomps
sbb
mov
stc
addr16
mov
out
cmp
sarb
imul
inc
dec
out
fwait
addr16
mov
xchg
scas
insl
pop
into
add
sub
lret
nop
int
inc
mov
fistpl
shrl
div
add
scas
jg
mov
adc
or
cltd
jge
pop
ja
adc
xor
xor
lcall
dec
sbb
gs
jo
dec
mov
hlt
outsb
sub
jmp
stos
or
pop
pushf
inc
push
pop
stos
or
or
cs
inc
inc
xor
and
cltd
pop
push
repz
stos
pop
mov
pop
cli
roll
dec
inc
into
add
sub
outsl
adc
mov
xlat
jns
dec
jns
in
insb
mov
imul
ret
and
fwait
rolb
xchg
xchg
inc
mov
jmp
push
jbe
shl
sub
pop
mov
push
push
pop
cmp
xchg
push
cmpsl
cs
sub
mov
push
fnstcw
xchg
adc
outsl
loope
aam
jge
popf
mov
ss
popa
adc
dec
lock
inc
pop
fdivs
ljmp
pop
inc
mov
test
xchg
inc
mov
sahf
jbe
cmp
out
arpl
lcall
jge
scas
les
pop
stos
das
jp
mov
push
fscale
aam
repz
loop
cmp
push
stos
cmpsb
out
adc
cmp
loopne
out
fisttpll
test
xor
dec
dec
mov
shll
movsb
mov
xor
in
or
imul
into
out
sub
hlt
imul
pusha
push
sub
into
leave
push
cmpsl
push
adc
movsl
jmp
mov
mov
sbb
in
add
xor
pop
and
or
dec
sbb
jne
mov
outsb
cmp
mov
sub
or
push
filds
dec
jb
out
pop
in
inc
leave
push
pop
lds
jmp
out
add
movsb
sub
and
mov
mov
mov
cmpsl
xor
jns
mov
nop
vpaddq
mov
cli
in
dec
jle
js
cmp
mov
push
inc
mov
dec
sahf
enter
dec
aas
push
out
mov
pop
xchg
jg
popf
pop
xchg
rorl
inc
push
imul
adc
adc
fiaddl
enter
mov
and
push
in
sbb
js
test
mov
adc
sub
xchg
cmp
push
outsl
jmp
stos
sti
pop
dec
add
imull
fs
int3
mov
js
add
mov
int
jge
iret
insb
shll
fstps
ret
jle
pop
push
push
push
in
lcall
push
dec
repz
and
xlat
xchg
push
enter
jmp
mov
cmp
pop
test
add
xor
out
clc
xchg
push
pop
xchg
popa
cmp
jle
loop
pusha
test
mov
and
pop
icebp
dec
shlb
ljmp
mov
loopne
out
movsb
mov
push
fldl
inc
lahf
test
xor
test
in
orb
dec
jge
cld
sub
hlt
jns
mov
rcrl
adc
push
mov
arpl
loopne
dec
pop
aaa
sarl
lret
cmp
int3
repnz
cmp
sub
or
jl
lds
pop
jae
push
stos
int3
out
fwait
inc
cld
fcomi
dec
aaa
insl
icebp
xchg
xor
sbb
ds
pop
cmp
mov
jo
jae
out
dec
pop
jns,pn
std
pushf
push
rclb
stos
dec
inc
cmpsb
sub
insb
jecxz
push
inc
test
mov
pop
inc
sbb
mov
sub
ds
fcomi
ret
mov
mov
xorb
jnp
sbbb
bound
fadds
aaa
loop
es
fdivrs
pop
pop
dec
jns
in
arpl
into
add
sbb
sbb
jno
mov
add
pushf
xor
and
push
rcrb
pop
in
loope
jl
push
aaa
mov
sub
jecxz
and
int
pop
aad
xchg
popa
mov
lds
adc
fwait
dec
pushf
cmpsl
xbegin
shll
les
xchg
add
stos
xchg
out
xor
and
mov
stos
mov
add
lcall
fistpl
test
arpl
cmp
cmp
jbe
scas
and
les
rcrb
push
mov
dec
popa
inc
cmpsb
mov
pop
push
dec
push
dec
lcall
or
and
popf
ret
insl
scas
dec
shll
lcall
mov
jg,pt
sub
add
in
cld
adc
mov
repz
je
or
sbb
xor
push
mov
aam
cmpsb
jb
test
dec
push
mov
dec
jp
add
rorb
rorb
inc
dec
mov
movsl
mov
scas
out
in
je
sbb
adc
fs
push
adc
test
cmp
lea
mov
popa
xor
mov
cmp
std
test
mov
in
lods
out
lock
out
push
dec
testb
dec
pop
repz
in
and
loopne
xchg
pop
or
jmp
aaa
in
jl
lahf
mov
mov
ds
pop
pop
lock
mov
add
xor
movsl
cli
push
mov
arpl
lods
hlt
xchg
fistl
and
mov
rcll
cli
in
mov
inc
mov
dec
movsb
shrd
shr
mov
mov
jmp
pop
inc
inc
mov
aas
push
sbb
cmp
cmp
push
cmc
adc
push
clc
adc
fldt
sub
push
imul
or
dec
inc
inc
mov
lods
mov
xchg
movsl
scas
out
fimull
adc
adc
popa
cmp
inc
mov
cwtl
and
adc
out
cmp
jg
or
push
call
fildl
and
pop
mov
orl
aad
hlt
xchg
push
test
and
add
mov
sbb
icebp
icebp
mov
stos
fwait
sbb
call
insb
push
adc
sbb
ljmp
mov
or
inc
mov
sbb
dec
push
push
and
lds
push
and
test
push
addr16
lcall
call
adc
pop
pop
inc
adc
out
pop
in
jb
test
sahf
jge
adc
dec
in
add
orl
push
jnp
aas
mov
cmp
dec
mov
loopne
xchg
mov
sub
movsb
inc
insb
loopne
out
mov
pop
ror
inc
mov
mov
mov
mov
enter
dec
stc
sbb
fbstp
jp
pop
jecxz
and
push
popf
lods
andb
xor
sbb
out
orb
cli
cmp
cmp
mov
mov
in
call
movsl
xor
call
fcmovnu
pop
stos
pop
xor
jge
xor
sahf
cmp
jnp
sub
mov
adc
dec
xchg
dec
xchg
repz
es
xchg
mov
ret
lea
out
push
sbb
xor
mov
inc
jns
leave
or
imul
sub
and
push
cwtl
dec
into
das
dec
ret
inc
xchg
sar
pushf
push
mov
in
jo
divl
lods
adc
push
jmp
rclb
das
es
scas
or
push
or
js
jg
push
cltd
sbb
cltd
cmp
inc
sbb
xchg
ljmp
xchg
sub
ucomiss
mov
lret
xchg
fisubrs
mov
jp
pushf
cmp
into
test
testl
dec
pop
cmpsl
adc
mov
mov
frstor
repnz
stos
adc
mov
arpl
jne
jns
mov
andl
lea
mov
inc
sub
xchg
and
add
pop
sbb
mov
lret
nop
mov
es
rcrb
push
cmp
pop
pop
ds
pop
or
jg
xor
pusha
mov
inc
lcall
out
mov
inc
mov
mov
fdivrl
shr
xor
sahf
lret
pushf
mov
push
add
bound
in
inc
inc
ss
addr16
and
dec
or
xor
jnp
mov
mov
jmp
cmp
xor
sub
ss
repnz
aas
inc
lret
icebp
xlat
inc
stos
push
lcall
sbb
xchg
leave
imull
xchg
jbe
lock
pop
inc
jo
sbb
pushf
cmpsl
xchg
pop
pop
aam
scas
xchg
cs
mov
fwait
enter
sub
inc
mov
out
inc
xor
adc
addr16
shll
outsl
jle
pop
cwtl
push
aam
xlat
push
mov
cmp
mov
popf
cmp
and
jbe
gs
test
jne
inc
cmpsb
or
push
lea
packuswb
or
lods
mov
imul
fistps
and
xchg
dec
sub
jl
mov
jmp
aam
std
add
pop
xchg
testl
add
jo
int3
bound
push
cwtl
jmp
jmp
shll
add
xchg
inc
stos
icebp
xor
add
add
inc
stc
jne
push
jo
in
add
jp
hlt
aad
jo
shrl
mov
jl
xchg
inc
adc
lea
sub
lods
mov
push
sbb
inc
fs
je
int3
ret
pop
rorl
xchg
in
inc
pop
xchg
ret
cmp
inc
pop
and
gs
nop
inc
adc
fsubrs
fidivrl
or
mov
or
cltd
jae
jne
stos
sbb
scas
xchg
sbb
push
enter
push
lret
pop
push
cmp
dec
cltd
movsb
cwtl
sti
int
xchg
xor
sub
daa
xchg
mov
daa
test
mov
out
xor
mov
jg
in
cltd
xor
inc
or
xor
push
jo
adc
and
lods
test
dec
fdiv
sub
aaa
cmp
icebp
loopne
in
insl
hlt
mov
roll
ja
cmp
decb
jle
xchg
mov
jb
jmp
sti
and
mov
sarb
stos
addb
pop
mov
aad
sarb
adc
mov
and
loopne
xchg
rcl
sub
inc
and
cmc
ljmp
out
xor
xchg
test
cmp
imul
mov
leave
inc
movsl
lahf
mov
out
sbb
ret
repz
test
mov
rcrb
cli
shll
mov
or
adc
mov
lret
daa
jmp
xchg
jg
adc
popf
stos
adc
mov
lcall
aam
std
fs
mov
jl
cs
xchg
outsb
sbb
dec
jp
or
cmp
xchg
xor
out
mov
pop
push
addr16
mov
jecxz
les
mov
aaa
lods
mov
jnp
leave
sub
mov
stos
lret
mov
xchg
pusha
jbe
inc
lods
adc
pop
or
xor
mov
inc
dec
xlat
iret
subb
arpl
add
sbbl
pop
cs
aaa
mov
fiaddl
pop
leave
mov
mov
lea
jnp
adc
pop
mov
jmp
pop
divl
lods
daa
lret
insl
mov
clc
andl
andl
jb
ljmp
and
daa
add
mov
inc
out
stos
lahf
and
movsl
add
and
add
outsb
sub
or
add
es
push
jb
shrl
movsl
jbe
mov
pop
aaa
clc
rcl
sbb
dec
sub
sub
test
iret
dec
cmp
jb
push
shll
or
mov
shl
jmp
push
xchg
push
pop
push
es
sbb
movb
adc
push
clc
adc
arpl
add
leave
push
and
cmp
pop
inc
or
inc
fisubrs
push
dec
push
imul
sti
sbb
mov
adc
add
test
cmp
cmp
add
je
ljmp
call
cmp
inc
mov
sub
lea
jecxz
ret
movsb
movb
pusha
add
lret
cwtl
xor
sbb
icebp
jle
out
mov
outsl
aaa
mov
pop
adc
push
cld
scas
pop
int3
mov
dec
push
stos
ljmp
push
call
xchg
stos
dec
lahf
jp
les
fidivl
jp
sbb
out
test
mov
out
mov
add
hlt
mov
loop
sub
xchg
cmp
dec
jl
cmp
cmpb
push
scas
js
dec
xor
mov
mov
inc
mov
cmc
ret
inc
loope
shlb
ret
xchg
sbb
xor
cmc
or
adc
testl
scas
dec
xor
aam
jecxz
mov
adc
cli
out
ret
dec
sahf
nop
adc
popf
pop
push
jle
inc
sbb
push
push
cmc
and
sbb
dec
lahf
fsubr
dec
sahf
cmp
ljmp
cmc
pop
ret
adc
sti
and
and
roll
fnsave
pop
fsubs
lahf
not
inc
popf
negb
fwait
cmc
xchg
fcmove
xor
imul
das
je
push
jbe
cmp
mov
stos
bound
xor
aad
adc
or
xchg
out
dec
pop
shlb
test
rcr
mov
xor
shlb
out
cwtl
xor
pop
adc
mov
ffreep
push
push
and
or
xorl
push
cmpsb
and
mov
cmpsl
js
inc
pushf
push
xor
add
cld
sub
add
jne
jg
insl
jle
mov
sbb
jns
add
jbe
in
sbb
or
hlt
mov
xchg
cmp
inc
sub
xorl
daa
add
cmp
xor
mov
mov
inc
js
jl
add
xor
add
addb
push
lret
out
push
pusha
fwait
xlat
rcl
orl
dec
lods
jnp
jg
sub
adc
lock
inc
pop
pusha
sbb
adc
js
sbb
add
cwtl
jp
mov
mov
stos
scas
dec
imul
cmc
andb
daa
loope
xchg
pop
in
jbe
outsb
mov
mov
inc
inc
ja,pn
lahf
xlat
mov
mov
jmp
push
xor
int3
jo,pt
imul
mov
push
outsb
insb
pop
push
out
xchg
jne
test
mov
and
jnp
adc
sbb
push
out
gs
les
sti
negb
in
mov
pop
cmpsl
push
int3
jbe
outsl
rep
or
int
pop
sbb
jbe
cmp
repnz
loop
and
fnsave
push
lods
das
sub
ja
loop
test
jno
clc
add
mov
push
out
fidivs
push
ret
hlt
cmp
push
pop
pop
jmp
popf
dec
cwtl
or
out
jle
or
sub
test
push
inc
add
adc
imul
sub
mov
sub
out
popa
loopne
movsb
popf
mov
loope
sbb
les
sti
jnp
call
mov
ss
cmp
jmp
roll
adc
sub
sti
insl
xor
cmpsb
dec
inc
popa
sti
push
inc
jl
jae
outsl
jmp
std
mov
movsl
daa
daa
lret
sbb
add
dec
mov
call
jo
and
adc
sbb
adc
out
lret
mov
jge
enter
and
add
jg
icebp
jae
lret
push
insl
mov
pop
imul
popf
fisttps
aaa
inc
pop
subb
adc
jnp
cltd
lock
inc
and
stos
mov
sub
adc
add
popa
xchg
scas
lods
mov
pinsrw
mov
ss
jge
xor
mov
out
les
xchg
pop
in
mov
inc
adcb
aaa
je
jl
outsl
sbb
or
lret
mov
jbe
fucomip
mov
and
fisttpll
push
lods
sbb
ret
or
imul
out
shrl
push
sbb
sbb
scas
or
iret
xchg
mov
movsl
das
or
jb
mov
fsts
xor
test
jmp
sub
cs
inc
shll
stos
imul
aas
repz
out
push
fsubl
xor
or
add
sti
jle
lds
test
dec
pop
adc
xchg
arpl
scas
sahf
jle
xchg
jp
cwtl
push
idivb
enter
sub
pop
shrl
and
iret
jg
mov
dec
sub
jecxz
cld
xchg
lahf
enter
dec
inc
dec
inc
cwtl
push
sub
shl
pop
iret
loop
xor
lahf
popa
lcall
xor
and
test
enter
mov
cmpl
mov
cltd
shll
inc
dec
or
mov
adc
leave
cmc
pusha
pop
or
jae
rcr
cs
out
movb
int3
sub
push
jecxz
fisubs
inc
jnp
mov
pop
xor
dec
xchg
mov
mov
dec
jno
mov
jmp
rorl
jp
loope
test
in
adc
insb
adc
jno
divb
add
rcr
jle
test
adc
or
add
pop
jae
sbb
mov
sub
or
arpl
xor
push
fsubp
gs
jl
fcomps
int
dec
repz
sub
add
mov
inc
popl
jg
jno
jg
divb
sahf
enter
ret
fcmovnbe
xlat
adc
ret
pop
pop
sub
popa
cli
inc
jmp
pop
mov
testl
sub
outsb
jns
dec
in
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
pop
mov
push
xchg
enter
movb
aad
adc
push
clc
adc
repnz
daa
push
push
ret
aam
ss
dec
cmp
outsb
bswap
hlt
les
mov
movsl
test
mov
sbb
xor
lea
mov
or
cwtl
ds
or
adc
mov
mov
stc
adc
mov
and
hlt
subl
sahf
xchg
jmp
jle
je
mov
popa
stc
std
xchg
ds
push
out
out
aas
cmpsl
in
test
outsl
jae
rorb
lock
push
jle,pt
mov
js
jg
fisubrs
in
arpl
outsl
cwtl
stos
and
fcmovb
shll
fmull
jbe
add
sarl
test
mov
jmp
jl
mov
repnz
lea
fildl
in
shll
sbb
mov
movsb
std
jb
mov
jbe
fstpl
mov
ds
out
xchg
xchg
in
movsl
inc
push
pop
rol
push
inc
psraw
icebp
xchg
das
jle
pop
push
pop
stos
test
mov
int3
clc
daa
pop
pop
hlt
insb
in
leave
xchg
xchg
pop
jg
outsl
into
out
hlt
sub
mov
xor
flds
push
out
movsb
addr16
sbb
mov
std
and
inc
ja
insl
movsl
fs
or
mov
jecxz
lock
imul
jno
jno
fildll
movsl
test
mov
test
jge
mov
pop
in
shr
dec
jno
mov
adc
leave
sub
nop
pop
jecxz
jge
mov
push
into
jmp
sub
stc
xacquire
add
lsl
aam
xor
pop
inc
sahf
mov
xchg
out
adc
xchg
xchg
leave
xchg
leave
lods
jae
pop
pop
pop
or
pop
lea
aaa
dec
scas
mov
xor
mov
outsb
dec
shrb
clc
add
push
or
pop
into
cmpsb
or
lret
cmpsl
xor
stos
push
xchg
sub
jae
mov
pop
and
ret
sbb
ljmp
mov
fidivrl
pop
inc
popa
jg
pop
je
out
mov
sub
add
pop
mov
inc
push
jp
roll
aad
jecxz
outsb
mov
imul
pushf
dec
push
insl
inc
and
je
fcoml
jne
mov
push
aas
gs
icebp
lcall
daa
xlat
loop
call
test
push
fmuls
cmp
loop,pn
icebp
jmp
or
jl
dec
or
and
jae
xorb
adc
iret
es
inc
je
stos
js
negl
mov
mov
lock
clc
sub
stc
popa
push
lret
lods
aas
gs
xchg
cli
mov
and
mov
imul
xor
sbb
mov
sbb
das
mov
jp
stos
mov
imul
jp
push
jle
das
stc
xchg
lret
out
sti
cmc
daa
inc
cmp
jg
shlb
in
dec
fxch
fidivrs
std
or
adc
xor
es
mov
inc
cmp
mov
adc
arpl
inc
mov
out
cltd
lods
mov
std
push
add
test
adc
test
repz
sub
lea
cmpsl
xor
adc
sbb
jnp
pop
sahf
movsb
jo
test
lret
xchg
addr16
dec
stc
jbe
and
ljmp
lea
shll
jmp
xchg
movsl
jae
test
adc
cli
or
xor
filds
call
xchg
push
inc
jae
push
rorb
ret
inc
fistl
pop
pop
out
pushf
sbb
iret
in
xor
insl
jne
jae
or
sbb
cmp
pop
mov
ds
nop
into
test
iret
rcrb
push
pop
cs
push
stos
dec
xchg
je
mov
stos
push
iret
divb
sub
and
sub
fwait
imul
add
or
ja
and
adc
add
jo
jecxz
scas
push
push
cmc
sahf
push
jecxz
push
lods
fisttpl
adc
mov
icebp
jno
and
sarl
xor
lods
or
inc
adc
pop
arpl
jnp
dec
sbb
mov
imul
fnstenv
pop
or
mov
push
pop
mov
pop
fs
push
mov
xor
aam
sarb
rclb
cmpl
jecxz
jmp
mov
sbb
xchg
lods
gs
mov
stos
dec
jg
pop
aaa
repz
cmp
arpl
addr16
pop
adc
out
cmp
xchg
xor
addr16
adc
mov
fstpl
fsubrp
orb
bound
adc
xor
jns
lret
or
pop
xlat
popf
movsb
pop
pop
xor
bound
inc
sti
mov
pop
test
and
mov
jecxz
insl
lds
xor
pop
sbb
mov
fld
movsl
cmp
dec
aam
inc
bound
mov
xchg
jbe
pop
out
push
xchg
jno
lcall
ja
xchg
sub
xor
pop
or
cli
bound
je
mov
cmp
pushl
mov
cmpsb
fdivr
xor
inc
lret
mov
adc
sub
ljmp
or
mov
dec
dec
sbb
bound
das
dec
inc
icebp
pop
rcll
test
jae
cmovs
fimull
stos
cmpsl
addl
dec
movb
xor
stc
fimull
call
mov
mov
mov
cwtl
sub
inc
push
pop
push
cs
cmc
pop
fmuls
lods
es
lods
lods
dec
rcll
xchg
mov
test
in
outsl
aam
ja
dec
xchg
push
jne
mov
mov
inc
push
and
je
sbb
jp
cwtl
out
cwtl
push
cmp
push
mov
out
mov
scas
inc
mov
jle
js
fsubrs
xor
sti
jo
test
pop
add
outsl
dec
cs
fsubp
mov
test
sbb
loop
lds
sbb
jl
and
or
test
cmp
push
lahf
in
mov
jmp
pop
mov
shll
arpl
push
cmp
sti
jbe
rcl
xchg
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
jmp
lds
jno
push
push
or
inc
cmpsl
sbb
adc
adc
push
clc
adc
jae
into
cld
dec
adc
in
js
outsb
rol
lret
dec
insl
add
or
insb
cmpsl
not
mov
add
and
xchg
test
or
out
jl
xor
nop
dec
sub
popa
js
pop
shll
or
arpl
lods
lcall
inc
jmp
push
fidivl
iret
cmp
mov
iret
cwtl
enter
cld
sub
sub
into
cmpsb
rcl
cmp
adc
inc
fs
cmp
and
cmp
bound
push
xchg
mov
or
or
or
pop
mov
jne
int
xor
fists
scas
andl
and
jae
push
push
sti
xor
add
fiadds
push
aad
je
nop
cmpsb
xchg
out
pop
inc
xchg
xchg
add
push
jae
push
sub
lods
or
mov
xor
scas
pop
xor
cmpsl
rcrl
popf
pushf
ror
lods
inc
mov
pop
pop
mov
fwait
xlat
mov
into
test
push
int
ss
fstpt
ror
fwait
int
add
dec
out
aad
push
lods
loop
add
fucom
and
mov
cld
das
sti
sahf
adc
pop
fistpll
stc
cwtl
dec
xchg
inc
inc
and
test
es
enter
mov
pushf
inc
les
xrelease
movsb
sbbl
mov
scas
inc
push
add
mov
pop
movsb
jo
jno
mov
mov
jo
mov
push
cmp
int3
orb
test
je
push
mov
xchg
cli
ja
xchg
jo
dec
push
xchg
xor
xchg
sub
sub
inc
cltd
dec
xchg
lahf
repnz
aam
dec
xor
mov
and
test
mov
pushf
xchg
or
cmp
lock
dec
mov
or
cmovno
mov
bound
repz
mulb
mov
push
dec
pop
lods
or
push
push
scas
add
push
push
cltd
insl
ljmp
stos
ret
sbb
fsubs
xchg
mov
jmp
and
adc
and
dec
xchg
push
pop
add
jp
add
xchg
lahf
lcall
out
mov
stc
inc
push
and
sub
enter
stos
dec
sub
fisubrl
shr
fstpt
xor
into
pushf
data16
adc
and
jle
aas
sub
imul
sbb
ljmp
roll
imul
out
mov
jg
push
sbb
subb
sti
add
or
sarb
mov
pop
mov
xor
sbb
in
arpl
sbb
inc
adc
rorl
mov
scas
or
xor
mov
out
ret
cmp
sub
adc
cmpsl
pop
vpshldvq
imul
jp
xchg
pusha
or
pushf
sbb
loopne
cmpsb
pop
nop
bound
lcall
jecxz
cwtl
pop
jge
inc
push
out
push
mov
popa
push
lods
push
xor
or
pop
mov
xor
xor
idivb
imul
into
push
movl
push
cmpl
mov
push
add
fnstsw
xchg
fdivl
jp
mov
lods
push
idivb
cmp
fs
jnp
xchg
inc
dec
cwtl
add
xchg
fsubs
ss
clc
aad
mov
popf
lret
fisubrs
cmp
dec
add
xchg
dec
out
mov
outsl
or
xchg
in
dec
xor
dec
mov
push
jle
fildll
push
rcrb
push
cld
cmpsb
pop
pop
das
lods
mov
cld
push
and
fidivs
sub
dec
push
add
je
in
ss
jo
or
sub
test
dec
cmp
xchg
rorb
push
inc
or
jmp
je
inc
xor
or
movsl
pop
clc
imul
or
stos
neg
jg
mov
and
hlt
or
movaps
add
andb
rorb
iret
lods
inc
test
fimuls
cmp
push
testl
lock
jno
loope
out
aam
aad
xor
in
jg
loope
movsl
nop
insl
pusha
cmp
movsl
or
out
outsl
xor
mov
leave
scas
mov
lods
xchg
or
shlb
add
dec
and
enter
je
jae
imul
call
addl
daa
pop
rcll
dec
call
outsb
push
ljmp
lock
sti
push
cmpsb
ljmp
sbb
dec
stc
ds
addb
sahf
lret
std
int3
inc
mov
cwtl
popa
sub
mov
aas
push
pop
push
pop
add
dec
arpl
mov
push
inc
mov
xchg
inc
setp
mov
add
lock
jp
rclb
xchg
mulb
push
cwtl
inc
jecxz
subl
jns
add
jecxz
loope
test
insb
psubb
pop
loop
dec
outsb
bound
inc
jp
ja
mov
pop
lods
popf
adc
xchg
enter
arpl
mov
gs
mov
mov
jge
dec
jl
ds
fildll
mov
xchg
stc
sub
jns
jo
ss
int3
dec
adc
sbb
pop
xlat
lret
ljmp
mov
jecxz
sub
mov
aam
mov
mul
mov
fwait
dec
arpl
xchg
pop
jle
jno
sti
pop
data16
stc
push
add
cmp
xchg
repz
pop
fldt
mov
std
stos
adc
test
test
xor
dec
add
xchg
lcall
loopne
inc
out
add
add
loopne
cs
push
imul
outsb
lahf
imull
cwtl
inc
popa
loope
lret
test
sub
inc
jae
cli
cli
pop
data16
push
int3
cmp
enter
lock
mov
lods
fld
divb
rolb
mov
mov
lret
fcomps
mov
daa
sbb
hlt
lods
jne
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
jmp
inc
jle
add
add
add
aaa
jmp
adc
clc
adc
push
mov
sub
mov
push
pop
mov
dec
xor
nop
in
adcb
xchg
add
or
lock
dec
fcomi
jb,pn
fwait
xor
adc
jg
das
sbb
pop
test
mov
pop
iret
insl
push
jo
cs
scas
sahf
flds
std
mov
fdivl
rorb
out
sub
test
jnp
xor
outsb
or
aam
imul
test
outsb
jne
push
adc
mov
imul
testl
push
jo
pop
incb
out
or
mov
sub
or
mov
xchg
filds
repz
jno
sub
aaa
aas
sbb
xchg
cmp
and
sub
je
xchg
mov
xlat
mov
movsb
mov
cmp
popl
dec
mov
inc
add
clc
mov
dec
sarb
lock
fsubrl
repnz
or
mov
xor
scas
daa
int
jno
hlt
push
leave
cmp
das
mov
push
adc
mov
in
dec
pop
pusha
roll
cmp
repz
mov
jne
and
xchg
std
inc
mov
mov
cmp
push
add
out
cwtl
pushf
std
cmpsl
xchg
scas
and
ret
std
in
sbb
inc
or
cmp
xor
sbb
mov
repz
mov
sahf
xchg
sub
adc
jmp
js
push
jbe
je
jg
shll
cmp
stos
lock
xchg
mov
cmp
inc
andb
scas
inc
inc
cmpb
addr16
mov
icebp
inc
movsb
lods
mov
and
cmp
dec
sbb
inc
inc
int3
bound
bts
aad
cmpb
clc
das
scas
nop
mov
hlt
test
sub
xlat
movsl
in
push
pusha
cmp
mov
push
cltd
pusha
push
add
push
jb
lea
push
pop
pushf
add
inc
pop
mov
inc
push
shll
loop
enter
hlt
jns
aam
mov
stc
mov
sub
repnz
dec
mov
adc
sbb
add
ja
aad
outsl
add
sub
repnz
lret
pop
mov
aaa
lret
pop
sbb
test
movsb
inc
sbb
dec
rclb
into
js
and
out
lods
fnstenv
ss
cmpsb
mov
dec
mov
inc
std
pop
out
repz
pop
nop
scas
js
ficoml
xor
cli
loopne
adc
div
repnz
add
add
mov
sti
pop
mov
lds
sar
lock
xchg
xchg
push
xchg
cmp
mov
mov
mov
adc
int
inc
sub
cmp
stc
mov
mov
mov
sub
hlt
cmp
xor
and
xchg
in
inc
sub
dec
in
stc
clc
pop
dec
and
lcall
mov
das
aaa
js
adc
mov
inc
notb
leave
xor
enter
xchg
adc
mov
das
nop
int3
cld
adc
push
push
jbe
add
dec
adc
jb
xor
in
and
jno
fcomp
jns
push
je
mov
and
nop
arpl
push
popa
mov
sub
adc
xor
in
sti
push
mov
mov
ljmp
in
cmp
leave
out
cmp
stos
in
push
pop
aam
mov
out
mov
push
adc
insb
out
push
pop
push
ljmp
mov
push
jle
mov
lcall
fxch
add
cmpsl
jns
xor
and
aas
enter
mov
xor
fnstsw
push
mov
fnstcw
loop
and
or
lcall
rcll
xchg
nop
push
inc
subl
sub
xchg
call
inc
aam
arpl
cmpsb
sahf
jno
jl
sarb
cld
push
fiadds
xlat
mov
xchg
lock
lret
sbb
popa
stc
sbb
fld
xchg
mov
out
inc
sbb
cld
test
pop
das
jmp
and
cmp
cwtl
add
fwait
lock
add
iret
fnstcw
inc
or
shll
mov
cmp
jne
push
mov
xorl
enter
xchg
jnp
popa
lock
mulb
dec
leave
mov
mov
mov
lret
mov
mov
stos
shl
fldenv
out
inc
repz
mov
cmpsb
adc
je
jb
repnz
pop
mov
jp
lret
shlb
jno
mov
or
mov
inc
xchg
popf
mov
jnp
adc
pop
sub
sarl
push
sub
addl
jmp
imul
jne
sbb
mov
pop
push
insb
jnp
leave
dec
mov
insl
lret
push
push
out
xchg
and
jmp
jnp
or
sub
cmp
dec
fcomp
cwtl
ja
dec
mov
pop
movsb
inc
addr16
mov
shl
mov
push
mov
and
sub
mov
xchg
mov
stos
xchg
pop
lret
inc
sbb
dec
out
xchg
xchg
inc
mov
pop
adc
and
cld
sbb
or
into
sbb
inc
sbb
sbb
movsbl
jo
or
add
mov
ljmp
dec
mov
dec
aaa
jle
imul
xchg
cmp
clc
xchg
jnp
mov
test
rol
mov
mov
pop
idivb
xlat
addr16
sub
loopne
dec
pop
xchg
pop
xchg
aas
sub
into
and
fs
bound
jge
or
xchg
and
pop
popa
sub
js
pusha
dec
sbb
push
mov
ficoms
fwait
clc
es
pushf
stos
pop
and
and
xchg
or
push
mov
loopne
mov
pop
das
lods
test
and
sbb
xchg
jecxz
jno
push
jle
jl
int
mov
add
aam
daa
mov
inc
int3
jmp
pusha
test
push
adc
mov
sbb
imulb
into
mov
mov
sbb
add
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
jmp
test
and
push
mov
repz
std
pop
cmp
xchg
mov
adc
clc
adc
lret
sub
xchg
mov
mov
or
mov
and
add
push
int
jmp
xchg
int
cwtl
loope
dec
add
jle
fbstp
call
lcall
dec
dec
cmpb
pop
dec
fwait
call
add
jmp
add
arpl
ljmp
jl
shlb
or
xchg
push
scas
xchg
outsl
ret
mov
dec
sbb
cli
push
mov
stos
shll
movsl
hlt
mov
iret
movsl
mov
sbb
idivb
rcrb
mov
rcrb
popf
push
cmpsb
sub
lcall
jecxz
or
int
jecxz
jecxz
jbe
mov
mov
jl
popa
out
mov
push
mov
jecxz
loope
xor
mov
xor
fimull
and
and
mov
insb
cmpsb
hlt
cmc
or
into
cmp
adc
test
ret
cwtl
in
jnp
sub
push
add
and
stc
xor
adc
and
orl
mov
xchg
sub
scas
push
insb
movsb
cmc
pop
shlb
out
mov
pop
dec
out
push
ljmp
mov
jo
mov
and
dec
xor
and
push
push
ss
in
adc
xor
mull
lcall
faddl
test
out
test
xchg
or
dec
push
pop
sbb
cmpsl
fcoms
mov
es
ds
xor
out
dec
daa
cltd
cli
xchg
insl
dec
lret
jbe
insb
inc
sub
pop
push
jge
pushf
push
movsb
jg
xor
inc
cmc
mov
mov
lcall
inc
imul
push
ja
icebp
mov
loope
sahf
xor
cli
lods
pop
scas
call
sbb
aam
ss
jno
lahf
fsubrs
add
cmpsb
out
js
mov
mov
xor
sbb
and
push
popf
push
pop
mov
cmc
push
test
push
jl
lods
jg
and
notl
pop
int
push
inc
push
aad
mov
pop
and
insl
push
loop
scas
lret
cmpsb
inc
lods
outsl
push
ret
jae
in
bound
les
and
add
insb
mov
test
cmpsb
jne
stos
out
ret
adc
dec
xor
mov
repz
xchg
xor
shrl
rorl
pop
je
repz
jo
cmp
jle
cs
stos
shlb
loope
push
lds
dec
or
sub
inc
lods
sub
aaa
decl
push
cmp
pop
ds
jb
paddsw
pop
sub
das
lods
out
push
dec
test
mov
push
add
xchg
jb
ret
pop
stc
or
push
mov
cli
push
je
inc
xor
pop
fcompl
xchg
mov
pop
into
cs
or
aad
pop
repz
ljmp
sub
adcl
xchg
mov
rcrl
adc
int3
je
mov
orb
xchg
mov
stos
out
lock
xchg
sub
ficompl
fdivl
sbb
xor
xchg
xchg
or
in
xlat
inc
mov
xchg
movsl
in
and
jmp
xchg
filds
jo
mov
xchg
push
sahf
mov
mov
xchg
xlat
mov
sub
je
jne
aad
ret
pop
add
and
cli
sbb
imul
sahf
pop
shr
les
mov
mov
fcmovnb
cmpsb
lahf
dec
push
aas
push
mov
je
sub
mov
in
stos
fildl
pushf
pop
pop
cmpsb
or
outsb
loope
adc
sahf
cmp
das
iret
int3
pop
ficoml
xor
fidivrl
pop
and
jle
dec
xor
push
jb
subb
dec
leave
adc
or
pop
pushl
push
jnp
dec
mov
xchg
mov
dec
xor
cmp
cmpsb
ljmp
out
subl
mov
push
ds
push
aas
adc
pop
jl
insl
and
inc
lcall
arpl
pop
jne
movsb
out
into
loopne
mov
aas
test
fnstsw
add
outsl
fsubrs
inc
dec
hlt
ret
xor
inc
jbe
pop
pop
push
mov
sub
stos
insl
sub
pop
inc
mov
ficoml
scas
insl
jl
pusha
fucomi
add
mov
fwait
fwait
mov
lcall
cmpsb
ja
adcl
stc
xor
std
mov
sub
xchg
xor
decb
mov
xchg
xchg
mov
sbb
popf
mov
rcrl
push
cld
jg
inc
aam
scas
test
jne
mov
adc
cmpsl
sbb
in
ljmp
pop
sub
popf
add
and
std
lea
or
ficompl
sbb
or
out
add
inc
and
mov
adc
dec
jnp
pop
pop
iret
cmpl
jecxz
add
adc
push
sub
pop
icebp
jecxz
shrb
loope
nop
cs
push
fcomi
cmc
mov
popa
xor
adc
loopne
push
mov
add
mov
push
push
xor
cmp
push
test
jmp
cwtl
sub
add
jne
loop
adc
pop
lods
scas
ljmp
xor
xchg
stos
addr16
mov
mov
or
idiv
mov
jl
stos
dec
rcll
cmp
adc
shlb
popa
mov
sub
mov
ret
push
jp
dec
xorb
call
add
jbe
mov
sbb
lock
jb
sti
mov
std
push
mov
fldl2t
lret
sub
xchg
ret
mov
ficompl
push
mov
int3
aad
xor
fsubl
xchg
cwtl
pop
mov
mov
out
pop
sarl
out
jl
sbb
movsl
xchg
mov
dec
js
lahf
jg
test
cmp
in
iret
fwait
and
and
jecxz
cld
adc
popa
imul
nop
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
movsl
mov
mov
inc
repz
lcall
adc
clc
adc
les
cmp
cmp
and
fcmovne
cmp
in
push
pop
push
lock
js
mov
sbb
sbb
outsb
jb
push
imul
sbb
fs
jl
jae
inc
pop
xchg
add
outsl
stos
ret
sahf
push
rcll
dec
mov
or
jne
out
sahf
rolb
fsubrl
ds
loop
imul
negb
test
out
pop
sub
mov
mov
cmp
sti
xor
clc
repnz
shl
push
push
adc
xlat
clc
nop
dec
jp
ret
dec
adc
icebp
pop
jae
sub
test
add
jge
mov
cmpsl
les
fisttps
push
mov
add
int
cmp
repnz
cwtl
lret
les
and
pop
sbb
lock
mov
cld
out
or
dec
daa
pop
mov
lods
jg
xchg
adc
es
jecxz
jmp
fcompl
mov
push
ss
cmp
push
xchg
pushf
mov
pop
inc
pop
sub
xorb
push
and
repnz
in
jnp
adcb
shlb
daa
mov
cltd
subl
icebp
or
push
jge
aaa
mov
jl
cli
dec
mov
sub
ja
pop
or
push
fs
mov
and
pop
pop
or
out
and
cmp
sub
or
js
imul
or
pop
bound
imul
mov
jl
sub
popa
lret
cmc
fs
scas
sub
test
push
mov
cltd
cmp
or
push
cltd
lods
out
xchg
lret
std
fdiv
mov
loopne
call
or
jo
xor
cbtw
ja
xchg
pop
ret
xor
out
ret
es
dec
push
iret
outsl
sub
stos
sub
pop
pop
dec
or
shlb
push
and
mov
aas
imul
out
push
xchg
push
lods
sub
out
pop
lahf
shrb
add
mov
adc
outsl
mov
aas
je
inc
jne
aad
dec
fld
int
and
adcl
fidivrs
mov
into
jno
dec
int3
stos
mov
or
or
sub
out
push
mov
fwait
fcomps
outsb
push
loopne
imul
icebp
dec
pop
xor
ja
or
mov
gs
cwtl
xchg
frstor
jnp
dec
push
std
xchg
or
pop
mov
jg
dec
lea
and
or
fstl
jg
mov
movsb
insb
mov
out
sub
cmpsb
out
add
enter
xchg
ds
inc
pusha
addl
outsb
or
adc
inc
mov
adc
lods
ror
mov
in
neg
inc
jae
xchg
push
push
bound
xor
pop
xchg
or
pushf
jo
adcl
adc
repz
xor
mov
hlt
push
add
sarl
lahf
add
mov
mov
rcll
scas
cmp
mov
dec
jbe
or
cmp
or
and
mov
imul
stos
cmpsb
mov
xlat
mov
cli
lcall
jg
in
les
pop
dec
sbb
mov
subb
mov
andl
and
xchg
mov
lret
inc
cltd
and
fdivr
mov
lcall
sbb
xchg
dec
je
daa
sub
faddl
pusha
jmp
cld
mov
bound
outsl
add
inc
add
mov
xchg
dec
ja
clc
rclb
fcomps
push
push
pop
movsl
or
movsl
das
test
pop
clc
sub
loope
es
xchg
fcoml
aas
insl
cmc
mov
jge
pop
push
sub
out
aaa
arpl
icebp
jg
cmp
fadds
nop
mov
pop
add
shl
lods
and
mov
loope
push
pop
sahf
movsl
xchg
dec
mov
lret
lret
xor
inc
lahf
rcrl
dec
mov
xchg
outsl
nop
dec
jp
dec
cld
dec
lods
push
cmp
add
and
sub
jecxz
mov
rorb
pop
mov
mov
mov
andb
pop
jbe
vcvttpd2dq
xchg
shrb
std
ja,pt
cltd
mov
aam
sub
outsl
push
cmp
pop
ljmp
ljmp
scas
test
xchg
scas
add
dec
push
sbb
sbb
je
sub
inc
cmc
mov
mov
push
push
sbb
mov
adc
popa
cmp
test
jmp
push
insb
cmp
pop
mov
repnz
lcall
jb
iret
fimuls
inc
dec
clc
lds
leave
aaa
mov
rclb
popf
scas
cmp
jae
jg
mov
push
cmp
fisubs
pop
or
dec
iret
mov
je
push
and
mov
jl
jge
mov
pop
adc
cmpsl
lods
jne
mov
dec
jg
shlb
dec
mov
cmpsb
sbb
jp
sub
cmc
enter
and
enter
sbb
mov
inc
or
cmpsl
movsl
gs
xchg
jp
rcl
lea
pop
aaa
jbe
insl
cmp
fs
movsl
cs
push
lods
cmp
lods
xchg
out
in
sbb
xor
arpl
mov
aaa
pusha
movsb
cmovg
aaa
ficoml
out
jbe
xchg
js
fildll
loop
je
pop
sub
insb
cmp
aam
inc
fs
adc
adc
stc
xor
push
or
imul
adcb
mov
dec
lods
mov
ss
ja
enter
mulb
cmp
or
xchg
push
fbld
hlt
in
jno
inc
inc
divw
push
jno
and
or
bound
mov
in
iret
add
pop
cs
daa
mov
sub
mov
mov
daa
popf
testl
mov
push
sbb
and
push
jo
shll
std
sbb
je
cmp
movsl
or
aaa
icebp
cmc
mov
iret
jne
add
daa
fwait
pop
scas
push
push
dec
nop
jp
insb
jl
jp
popa
mov
lock
inc
xorl
dec
push
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
jmp
xchg
inc
aad
les
push
fmuls
add
fxch
pop
adc
clc
adc
mov
cltd
incl
ficomps
dec
sbb
out
rclb
mov
shll
jae
xchg
xchg
add
jbe
lcall
inc
push
cmc
or
dec
add
hlt
imul
stos
mov
andb
out
or
jmp
mov
in
xchg
out
enter
cmpsb
adc
sbb
pop
lahf
nop
cmpsl
out
in
inc
outsb
mov
lods
outsb
repz
test
dec
or
or
add
outsl
jle
and
lea
stc
das
xchg
add
sub
gs
cmp
aad
arpl
addl
or
and
addl
lock
lahf
insl
xor
inc
repnz
cwtl
push
sbb
xchg
cmp
sbb
or
std
outsb
cmc
and
mov
add
pop
adc
sub
cltd
inc
xchg
int
and
inc
cmp
inc
xchg
iret
in
cltd
mov
fidivrs
jecxz
negb
inc
std
sbb
mov
daa
insl
inc
bound
jmp
inc
jmp
clc
cli
xchg
cld
sbb
xor
fs
cmpsl
hlt
subl
clc
mov
cltd
scas
dec
dec
rcrl
es
dec
mov
out
jge
mov
lret
ss
xor
dec
xchg
add
jns
aam
ljmp
adc
ret
mov
sahf
add
loopne
sahf
popf
sbb
add
cmp
lods
daa
pop
jbe
outsb
jl
push
ja
testb
xchg
xchg
adc
sub
int3
ret
dec
push
pop
call
adc
cmp
cli
pop
inc
mov
inc
das
in
mov
xchg
adc
jbe
mov
movsl
insl
push
jno
jo
push
mov
and
mov
mov
pusha
inc
dec
fnstcw
or
add
jecxz
sbb
icebp
mov
inc
cmc
aam
call
mov
or
test
cwtl
jmp
or
mov
cmp
negl
movsb
enter
lds
clc
insl
pop
or
cli
int
movsb
xchg
jmp
sbb
loop
cmp
in
stos
js
adc
rorl
xor
push
addr16
xchg
mov
dec
cmpsl
cmpsb
popa
mov
mov
hlt
or
jmp
jnp
pop
testl
mov
shrl
and
mov
arpl
mov
in
mov
rcl
mov
sub
mov
pop
movsb
arpl
inc
test
jnp
repnz
das
adc
jns
dec
sbb
sbbl
and
repz
sbb
loope
add
ficoml
dec
mov
icebp
movsb
repz
or
pop
repz
xor
sbb
jp
mov
mov
cmp
adc
cmp
imul
iret
lcall
js
add
rolb
and
iret
int3
add
mov
leave
fs
sarl
jb
xor
xchg
sub
roll
mov
cmpsb
and
out
cs
stos
in
push
das
and
std
shlb
ss
ljmp
icebp
add
lds
jbe
mov
dec
repz
mov
adc
jmp
out
test
xor
jl
cmp
mov
mov
jbe
jle
add
imul
dec
lahf
jle
sub
adc
in
cmp
add
into
xlat
adc
jno
sbb
outsb
jmp
push
int3
sbb
jle
mov
sti
aad
pop
and
mov
xchg
jl
or
insl
out
mov
xchg
rcrb
test
add
out
dec
push
aad
pushf
add
jp
add
jmp
xchg
jp
inc
jle
jae
cmc
scas
adc
rclb
dec
cmp
out
jne
aam
cltd
sti
ds
dec
and
icebp
jo
jmp
xor
movsl
call
cli
jg
out
jmp
xor
shll
lcall
xchg
sbb
mov
fsubrl
cmp
push
jecxz
xchg
or
inc
mov
xor
xor
push
ret
insb
sbb
xlat
inc
dec
adc
ret
dec
in
sub
pop
mov
jno
out
push
push
add
ret
aaa
or
mov
mov
repnz
rcrl
sti
add
nop
ljmp
stos
sub
dec
out
lods
fcmovu
rclb
cmpsl
or
fistps
jbe
std
jne
adc
fcoml
mov
arpl
xlat
negl
test
mov
push
nop
and
aas
fldt
sub
sub
cmpsl
inc
int
aas
dec
repnz
xchg
push
ja
test
mov
mov
loope
push
pop
in
jle
xchg
flds
or
mov
jmp
inc
fisttpll
cmp
mov
dec
std
inc
xchg
outsb
sti
mov
ds
popl
pop
xchg
xchg
lock
push
cs
jbe
ds
or
and
mov
adc
push
rcrl
iret
pop
pop
mov
cmp
inc
jbe
fildl
loope
stos
push
mov
lods
adc
adc
inc
jg
aad
and
imul
out
repnz
and
ds
out
lds
push
mov
stc
lock
in
cs
bound
xchg
repz
popf
add
loop
mov
mov
ljmp
scas
jp
dec
xchg
test
adc
push
push
loopne
out
shlb
ljmp
push
dec
mov
or
sbb
push
sub
aas
sub
adc
lcall
mov
push
sbbb
sub
sub
test
and
loop
dec
lahf
and
cltd
js
es
mov
and
pop
jl
cmc
and
or
cmp
arpl
out
imul
lahf
and
or
add
out
mov
in
repz
mov
add
cmp
jg
cmp
xchg
jne
leave
pop
test
or
pushf
stos
jb
xor
dec
mov
xor
shld
xor
mov
mov
shl
jmp
lret
xchg
cli
icebp
mov
fiadds
cmp
push
xchg
push
clc
adc
hlt
out
sub
jg,pt
xor
in
inc
or
mov
outsb
jns
inc
jbe
sbb
or
mov
stos
fimull
pop
movsl
adc
push
pop
scas
insb
sbb
mov
mov
xor
mov
addl
mov
int
inc
jbe
imul
dec
dec
stc
mov
dec
pop
imul
enter
adc
dec
xchg
imull
sub
pop
in
lock
push
push
notb
jp
icebp
lds
loope
pop
xor
adc
sbb
aaa
push
jmp
call
gs
stc
mov
jecxz
pop
in
lds
int
test
jne
xchg
aaa
test
ljmp
scas
mov
test
jb
repnz
insb
mov
inc
lcall
cmp
sbb
push
sbb
arpl
out
popa
cli
dec
aam
pop
es
das
mov
adc
jne
movsb
dec
shlb
jp
xor
imul
xchg
mov
cs
clc
dec
adc
lret
adc
cmp
into
out
repnz
mov
sub
cli
add
and
xchg
fmulp
roll
fbld
inc
adcb
arpl
jge
mov
mov
push
enter
test
shrl
pop
xchg
out
rorb
push
out
test
shrb
pop
push
in
pop
imul
fbld
add
push
and
add
idivl
repnz
dec
sbb
and
pop
es
mov
push
sub
popf
inc
ret
inc
outsl
shlb
scas
iret
js
push
data16
test
pop
fldenv
pusha
lea
hlt
arpl
add
repnz
movsl
out
adc
dec
xor
add
jne
out
mov
test
shll
lea
jecxz
mov
addb
in
data16
push
or
dec
cmp
stos
lret
addr16
aas
xor
in
or
jmp
pop
faddl
movsb
inc
cmpsl
jo
inc
ficompl
pop
cmp
push
mov
shrb
sbb
andl
xchg
or
sub
push
into
mov
xor
dec
sar
cmc
lcall
leave
shr
push
cmpsb
mov
test
cmpsb
ja
data16
cmp
sbb
popf
lock
xor
jae
shrb
es
mov
mov
xchg
fnstsw
ret
add
lret
outsl
lret
jne
or
test
in
icebp
adc
rcl
bound
pop
mov
mov
bound
scas
es
bound
adc
ja
mov
or
in
cmp
cwtl
mov
jno
lahf
sbb
fcompl
dec
clc
fwait
cmpsb
inc
jnp
insb
dec
mov
sahf
mov
ret
lods
or
mov
aaa
pop
xchg
arpl
or
fcmovne
subl
dec
or
add
pop
mov
push
fcmovu
mov
mov
dec
addr16
mov
lahf
pushf
push
loop
sub
cmp
mov
or
xchg
xorb
push
cmp
fwait
repz
mov
es
xchg
movl
cmp
xor
cwtl
mov
js
repnz
std
mov
pop
cmc
ss
add
fisttpll
fsubrp
imul
push
arpl
inc
movsb
popf
dec
rcl
or
add
cmpb
dec
test
mov
xchg
xchg
mov
xor
fwait
mov
mov
xor
mov
stos
jp
jecxz
mov
pop
fs
nop
adc
in
push
je
mov
outsb
rorb
add
xchg
jp
jp
ljmp
cmp
or
repnz
imul
movsb
push
cli
xor
ljmp
inc
inc
xor
dec
loope
inc
adc
sti
and
jl
or
xchg
enter
xchg
mov
mov
aas
mov
test
add
fs
aas
int3
or
jge
decl
pushf
iret
xchg
shr
add
mov
leave
cmp
mov
es
aam
pop
addb
adc
fs
or
fwait
in
sub
xchg
inc
or
push
mov
mov
dec
and
subb
inc
pop
cmc
add
ret
xor
icebp
mov
dec
imul
and
arpl
lret
mov
imul
inc
push
lret
jp
or
ret
or
or
lret
insb
push
in
xchg
repz
ljmp
dec
lret
pop
out
scas
cmp
lea
bound
push
sbb
test
xchg
push
jmp
sub
and
dec
add
fistps
add
jg
xlat
add
mov
mov
xchg
sub
mov
sub
sti
fs
jno
mov
stos
adcb
xor
sti
dec
jne
add
and
aad
pop
rcll
fisubl
jbe
and
or
dec
lock
movsl
aaa
pop
cmp
mov
scas
mov
ficompl
sub
ret
xor
mov
fisttpll
xor
adc
ret
test
xchg
mov
pop
lods
sahf
cs
jne
fstp
mov
nop
mov
pushf
aad
pop
dec
push
cmp
mov
outsb
inc
mov
push
jmp
into
sbb
xchg
gs
aaa
cwtl
pop
dec
or
mov
push
add
hlt
movl
or
idivl
ja
cld
repz
int3
inc
add
jne
test
mov
sub
cmp
cmpsl
loope
loopne
and
pop
nop
adc
pusha
mov
sbb
push
outsb
mov
xchg
jno
adc
loopne
mov
pop
data16
xchg
aaa
lods
scas
pop
inc
push
andb
aaa
testl
jl
push
inc
push
ficoms
fbld
and
pop
decb
push
movsl
lahf
mov
loopne
pushf
in
dec
push
cmp
jo
subl
repz
xchg
repz
adc
mov
and
cmpsl
cmpsl
push
mov
bound
fidivrs
daa
jp
jno
stos
in
push
inc
mov
xchg
inc
lret
push
adc
xchg
addr16
inc
adc
test
ret
push
add
mov
imul
push
shl
xchg
push
adc
aam
pop
push
movsb
mov
stos
lahf
inc
mov
jnp
push
pusha
push
and
sub
mov
or
int
sub
inc
mov
sbb
and
iret
cmp
fsts
sti
and
mov
mov
add
sarb
jnp
push
popa
clc
stc
pop
push
jb
dec
stos
sbb
pop
cmc
mov
inc
cmpsb
push
sbb
mov
jge
int3
inc
setae
push
push
add
lret
mov
cmpsb
out
dec
jmp
imul
dec
cmp
testb
cmpsb
push
rorl
adc
dec
mov
sub
daa
xchg
pop
push
or
insb
ret
aas
mov
sub
andl
dec
pushf
push
rcl
sbb
leave
loopne
mov
mov
xlat
movsb
dec
les
pop
sbb
fistps
pop
popf
sub
add
ret
push
inc
add
fdiv
ss
xor
popf
call
mov
jl
push
testl
mov
jmp
add
cmp
or
and
mov
mov
mov
xchg
mov
mov
and
sbb
pusha
jl
pop
sahf
ja
xchg
mov
cmp
sbb
push
in
sarb
scas
rcrb
xchg
push
or
inc
pop
mov
inc
cmpsl
dec
or
dec
pusha
fmulp
pop
lea
insl
stc
gs
push
in
xchg
insl
dec
push
sbb
push
outsl
xchg
add
cmp
mov
sarl
mov
cmp
fwait
sbb
adc
loopne
adcb
push
mov
clc
push
mov
fwait
cmc
and
arpl
mov
in
loop
icebp
lods
loop
mov
movsl
dec
xor
or
imul
out
lahf
js
in
xchg
std
nop
stc
jl
shrb
mov
adc
into
mov
aad
les
sarl
test
jl
ds
add
cmc
aad
sub
data16
test
daa
add
mov
adc
sar
cld
pop
inc
test
adc
rcr
mov
lock
lods
ja
mov
faddl
sub
mov
sbb
xor
mov
dec
loope
jge
pop
test
push
sti
sub
es
int3
icebp
inc
xlat
daa
dec
vdivss
sub
jne
mov
insl
sub
jp
dec
insl
xchg
jmp
outsl
adc
push
in
lea
xchg
mov
inc
cmp
ds
roll
scas
cmp
adc
adc
sbb
adc
mov
outsl
cmp
pop
xchg
add
xchg
arpl
mov
stos
pop
xchg
cmpsb
xor
ds
xchg
shlb
imul
test
inc
cwtl
pop
push
movsb
jecxz
add
mull
rol
into
mov
lcall
subb
stos
and
enter
aad
push
adc
xchg
inc
mov
and
mov
pop
adc
or
mov
aam
jecxz
ja
and
or
popa
fs
hlt
insl
in
adcl
sbb
insb
xchg
cmp
jmp
cmp
test
sbb
mov
pop
add
and
hlt
int3
mov
sub
ljmp
ljmp
sbb
ja
loopne
rol
in
les
mov
pusha
pop
les
push
mov
sub
mov
test
jnp
and
out
or
xchg
adc
imul
call
fs
ss
lret
xchg
xchg
pop
mov
sbb
fcomps
dec
mul
inc
lret
mov
xchg
adc
adc
xlat
shll
jae
jge
or
mov
pop
insb
ficompl
sub
leave
insb
ljmp
pop
in
push
mov
mov
inc
adc
pop
lods
push
mov
pop
mov
mov
dec
mov
jg
pop
jb
fists
lods
loop
pop
fs
push
je
inc
adc
inc
mov
sub
pop
icebp
cmp
pop
lcall
sbb
movsb
fistl
xor
dec
cmp
xor
or
and
xchg
sbb
out
xchg
xchg
inc
clc
lret
in
sbb
jbe
unpcklps
das
sbb
rorb
sbb
fmull
pop
push
shufps
jae
pop
pushf
mov
addr16
mov
or
mov
andl
mov
inc
data16
pop
inc
pop
xchg
stos
inc
icebp
jnp
push
xchg
fs
arpl
and
es
aad
add
addb
jae
cmpsb
sub
push
in
nopl
cmp
add
mov
scas
test
test
adc
imul
ret
lret
aam
sub
xchg
push
and
imul
aaa
sub
cli
mov
and
push
jne
movsl
out
xchg
push
cmc
push
or
scas
fldenv
mov
arpl
pushf
sbb
nop
ds
xorb
imulb
pushf
pop
mov
shl
pop
fildll
ljmp
mov
xchg
daa
repnz
xchg
pop
add
inc
pop
lock
test
shlb
mov
les
mov
mov
mov
add
jns
jne
cmpl
and
lcall
pop
iret
jns
pop
shr
jge
sub
loopne
pushf
push
dec
add
rorb
mov
inc
addr16
inc
aad
rol
lock
out
mov
repnz
out
fwait
pop
mov
adc
mov
dec
ja
gs
xor
stc
imul
mov
popa
jnp
mov
mov
aad
mov
sub
xchg
or
out
xchg
pop
mov
pop
pop
xor
loope
fmuls
sbb
sti
mov
stos
push
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
jmp
dec
lds
stc
or
loopne
and
adc
push
clc
adc
cmp
cwtl
jle
and
pop
pop
movl
mov
scas
test
dec
ja
jge
shll
mov
mov
je
mov
int
cmp
test
outsb
sti
sub
or
inc
ja
test
pop
sub
cmp
pop
xor
stc
or
xor
subb
and
roll
jp
fsubrl
repnz
test
arpl
sbb
pop
aaa
inc
pushf
add
push
movsl
pminub
mov
cld
inc
incl
pop
xorl
aad
or
jo
pop
jb
push
lcall
push
cmp
and
push
adc
mov
pusha
pop
sbb
outsl
or
popa
cmc
push
outsb
and
movsb
std
sarb
stc
in
loop
xlat
std
ret
daa
mov
cs
loop
sbb
in
cmp
or
cs
mov
jle
testl
dec
enter
jo
push
pushf
mov
gs
outsl
sahf
out
xor
inc
mov
xor
je
movsl
or
inc
add
popa
outsl
adc
adc
hlt
aaa
aam
adc
xchg
inc
pop
push
lods
xor
arpl
mov
dec
jg
out
xchg
xchg
cmp
push
xorb
sbb
lods
addr16
scas
xchg
cld
mov
test
mov
adc
iret
fadds
bnd
dec
xchg
outsb
sbb
and
xchg
arpl
dec
and
xor
jmp
popf
add
enter
pop
xor
mov
or
mov
cmpsl
pop
or
jp
movsl
pop
xor
cs
mov
cmc
lods
test
xor
push
cltd
push
daa
sub
dec
pop
xchg
inc
les
or
jle
pop
mov
fnstcw
fmulp
xor
loope
nop
shlb
fmuls
dec
sbb
cltd
ljmp
daa
push
aaa
push
sub
and
add
push
aad
repz
pop
xor
mov
pop
push
add
lret
mov
pop
in
loopne
cmp
shll
jg
scas
lahf
adc
mov
test
pop
je,pt
stc
rolb
popa
ss
cmc
xor
sub
mov
das
xor
pop
shll
test
and
mov
inc
xchg
lahf
dec
call
mov
in
pushf
sti
rolb
push
sub
out
xchg
sbb
sub
fwait
pop
sbb
and
fisttpll
or
xchg
dec
pop
push
adc
lret
inc
icebp
std
inc
mov
jl
push
daa
mov
adc
cltd
addr16
fcmovb
and
cmpsl
ja
adc
loope
push
orl
les
mov
dec
xchg
test
inc
cwtl
stos
test
fildl
push
pop
loop
rolb
lock
mov
cwtl
or
mov
jne
loopne,pn
or
adc
fnstsw
cmp
test
pop
jl
mov
enter
in
sub
jmp
iret
hlt
add
dec
icebp
pop
int3
mov
es
fisttpll
inc
add
mov
mov
in
adc
add
cmp
mov
mov
and
call
fists
mov
imul
jle
mov
push
sub
inc
leave
mov
cmp
add
loope
sub
adc
out
push
jecxz
ja
imul
sbb
leave
mov
gs
jle
xor
mov
ljmp
loopne
xchg
pop
mov
insb
or
cld
mov
sbb
outsb
pusha
cltd
loope
int
sub
test
pop
repnz
outsb
mov
add
lods
push
in
arpl
mov
lcall
je
and
jl
sub
addr16
mov
adc
jecxz
int3
dec
pop
movsl
lds
xchg
dec
adc
xchg
out
pop
rorb
cmp
xor
xor
mov
and
pop
dec
je
inc
fs
jle
lods
lea
xchg
dec
divb
push
nop
inc
ss
vmovntps
push
insb
dec
push
cmpsb
cs
repnz
popa
pop
xor
mov
stc
imul
cmpsl
mov
lods
inc
xchg
sub
cli
aas
add
ss
jp
dec
lret
or
gs
fs
loope
test
pushf
cs
jae
rorl
mov
xor
adc
lea
xor
xchg
jg
cltd
mov
push
push
mov
or
cmp
ds
jl
fwait
cmp
call
fisubs
repnz
int3
insb
icebp
hlt
dec
push
sbb
aad
mov
hlt
push
test
ss
fdivrp
mov
push
pop
sub
mov
int3
pusha
cmp
je
dec
jo
push
sahf
xrelease
push
sbb
and
aam
pushf
xchg
aaa
hlt
add
rolb
pushf
xchg
dec
incl
dec
push
mov
hlt
rclb
sbb
psllw
shrb
dec
jle
inc
push
jl
testb
jge
cld
test
hlt
cmpsb
out
sti
and
mov
pop
cmp
or
and
sbb
mov
jge
jae
sub
aad
out
fistpll
in
cmc
xchg
lock
in
sub
loop
mov
ds
inc
iret
push
out
int3
or
mov
add
leave
scas
mov
mov
xchg
lds
inc
or
fsts
or
sbb
sbb
cli
jne
leave
push
pop
and
adc
and
jo
repz
insb
push
pop
nop
gs
scas
test
jl
cmp
jle
jg
pop
arpl
and
inc
jmp
cmp
pushl
xchg
mov
inc
sbb
or
repz
das
mov
mov
mov
js
or
aam
inc
xchg
sbb
or
testl
sub
cmpsl
pop
leave
dec
ds
divb
jnp
divb
leave
cmp
test
in
fisubrs
orl
icebp
shl
sub
lods
mov
xor
hlt
pop
jle
sbbb
push
add
cld
push
add
cmpsl
sbb
jbe
es
sbb
std
pop
adc
adc
push
clc
adc
dec
mov
pop
ret
cmp
xor
xor
lds
rcll
sub
shr
faddl
test
add
cmp
popa
or
cmp
xor
xchg
ret
or
aad
xchg
sub
mov
mov
fcomps
pusha
xchg
sbb
inc
pop
xchg
movsl
push
sub
sub
pop
pop
shrl
mov
outsl
stc
jno
outsb
pop
add
leave
shll
sub
cmp
cs
dec
cltd
xor
inc
sbb
sahf
lret
cltd
aam
inc
int
mov
fnsave
xchg
lret
jno
imul
xor
jge
lahf
fmull
das
sti
add
fscale
mov
in
add
and
dec
aaa
xchg
pop
pop
ret
fnsave
jmp
xchg
mov
testl
jg
jo
icebp
mov
in
mov
jb
xor
sub
out
mov
lcall
cli
icebp
push
cmp
rcrl
xchg
scas
cli
adc
dec
iret
jbe
cwtl
pop
shll
add
and
and
xor
fchs
xor
in
sub
in
jb
jb
aad
and
cmp
and
aaa
outsb
jecxz
ds
aam
or
mov
fucomp
ret
adc
dec
mov
mov
scas
jnp
arpl
and
cmp
lret
xor
add
movsb
mov
sarl
lea
jb
cmp
add
roll
xchg
stos
ljmp
pushf
int3
cmp
xchg
out
mov
cmp
adc
movsl
mov
dec
insl
in
mov
pop
adc
add
insl
jle
shll
fs
cli
fcompl
xchg
and
pushf
dec
dec
scas
mov
fldt
sar
mov
inc
popf
sbb
fnstsw
scas
into
icebp
xchg
mov
jg
or
mov
stos
stos
leave
add
mov
roll
xchg
cmp
inc
dec
rorl
loope
adc
sub
sti
cmp
push
push
rcll
jae
fsubr
push
sub
mov
lds
jnp
sub
fst
pop
in
push
test
and
outsb
inc
jne
dec
cmp
cmpsb
stos
pop
inc
jmp
mov
mov
sub
fildl
cwtl
sub
or
les
scas
jle
lock
std
add
pop
outsl
push
mov
pop
mov
daa
ja
pusha
sbb
and
aad
mov
inc
sbb
cmp
pushf
je
repnz
pushf
dec
fiaddl
add
sbb
dec
ss
mov
mov
xor
cwtl
fs
cmc
andl
bound
jmp
pop
icebp
test
inc
xchg
fmull
push
out
sbb
inc
jmp
lods
iret
inc
and
and
jo
cmp
or
xor
jge
test
call
push
ficompl
shufps
mov
lds
popa
ret
inc
stos
insl
ja
in
pop
cli
xchg
outsb
push
cmp
add
fistl
sbb
pop
push
sub
out
inc
ret
cmp
jle
mov
add
mov
or
push
xor
rclb
xor
lods
pop
in
dec
std
adc
mov
je
mov
cld
cltd
cld
fists
outsb
or
jg
mov
jb
pop
and
jg
loope
movsb
pop
insl
call
inc
mov
pop
je
mov
xchg
adc
xor
sbb
sub
add
sub
push
xchg
and
movsl
mov
repnz
adc
sti
cmp
push
pop
and
js
gs
arpl
xchg
in
loope
inc
cmc
into
daa
stos
mov
mov
fdiv
idivl
pop
insb
cld
aam
and
push
add
xlat
inc
cmp
sbb
pusha
dec
or
cmp
das
nop
mov
cmc
jge
or
or
movsl
dec
xchg
or
daa
cltd
arpl
insb
dec
ret
pop
ss
fwait
in
mov
push
push
pop
sbb
decl
insl
and
stos
mov
or
cmp
cli
sbb
jmp
add
mov
xor
scas
stos
test
pop
mov
xchg
xor
mov
fdivrs
mov
in
sbb
popf
sub
incl
call
sub
test
js
cmpsl
xor
or
mov
xchg
cld
mov
pop
pop
lea
xchg
imul
jb
js
lahf
test
inc
or
pop
or
out
sahf
mov
add
mov
gs
les
out
out
sbb
dec
sub
std
push
fsub
sub
enter
or
pusha
inc
inc
mov
or
nop
sub
aam
xor
pop
push
sbb
add
adc
sbb
mov
sub
mov
add
popa
das
or
aad
dec
push
or
lret
cmpb
jne
mov
cmp
jg
mov
orb
das
stc
jp
push
mov
in
xor
push
inc
addr16
ret
cmpsl
adc
xchg
inc
dec
inc
sub
push
dec
int3
scas
mov
jns
cmp
rclb
cmpsl
lods
addr16
pop
and
push
mov
push
or
icebp
test
xor
dec
enter
inc
fiaddl
mov
push
jnp
mov
jmp
popf
mov
or
inc
out
insb
cmpb
and
or
not
movsb
xchg
lods
movaps
or
cmpsl
mov
nop
xchg
ja
add
cmp
sarl
or
ret
dec
clc
jmp
jne
imul
lea
subl
mov
xchg
fldenv
fwait
sbb
es
dec
fsubrl
sub
push
cwtl
mov
sbb
dec
orl
cs
in
shlb
js
mov
pop
cmp
dec
es
pop
jb
mov
iret
push
in
in
add
movsl
jp
pop
sbb
push
cmp
into
outsl
xor
jg
movsl
sub
push
cmp
call
mov
and
xchg
cld
inc
out
mov
or
cwtl
jl
add
outsl
and
pop
mov
add
jbe
push
mov
lods
mov
addr16
enter
adc
jmp
mov
or
mov
mov
push
jmp
adc
outsb
mov
mov
loop
hlt
push
push
adc
push
clc
adc
insl
inc
dec
push
aad
nop
out
and
mov
loopne
test
sbb
ss
xchg
cmp
mov
fwait
dec
fsubrl
sbb
xchg
in
xchg
cmc
sbb
fmul
std
in
adc
pop
enter
sub
lahf
out
add
or
cmp
adc
je
test
lret
insb
mov
pop
bnd
dec
mov
mov
lahf
xchg
xchg
data16
sarb
std
cld
mov
ja
xor
mov
aad
pop
xor
dec
out
dec
and
lods
out
imul
xlat
fnstsw
push
cmp
jns
jnp
sub
pop
dec
jl
add
sub
add
push
xchg
sbb
pop
fbstp
dec
cs
cmp
xchg
push
outsb
cli
sahf
pop
imul
xchg
pop
mov
dec
lea
pop
cmpsl
sbb
pop
cmp
fcmovu
fnstsw
xchg
push
xor
mov
andl
jae
xor
shll
insl
bound
xor
es
stos
mov
xor
int
jecxz
cmp
fwait
xchg
mov
mov
push
pop
and
xchg
repz
data16
cmpsb
lcall
mov
cmpb
xchg
cwtl
xor
test
xchg
movsb
ds
fs
and
int3
xlat
lock
lcall
cmp
movsl
sbbl
aas
adc
dec
pop
xor
outsb
aaa
insb
xlat
cltd
mov
gs
rcll
ds
xor
jae
sbb
sbb
lretw
testl
sub
inc
iret
mov
pop
push
inc
push
movsl
nop
stos
ss
in
mov
push
cmpl
sbb
add
stc
xor
movsl
cmc
dec
and
and
fs
insl
fs
sti
in
xchg
negb
popf
pusha
jg
les
popa
inc
push
jno
aam
push
or
loopne
fdivrs
mov
lods
outsl
push
dec
test
add
andb
pushf
lock
shrb
movsb
lahf
mov
inc
pop
cmp
and
mov
jecxz
xor
push
fst
mov
add
cmp
or
jecxz
clc
arpl
nop
and
subl
sahf
cltd
fwait
pop
bound
or
or
mov
mov
fildll
add
sbb
cli
mov
jg
add
addb
mov
sbb
addr16
pop
mov
imulb
in
mov
pop
add
inc
js
push
outsl
je
gs
ret
iret
shll
shr
jns
adc
pop
mov
in
sub
xor
push
xor
sub
sti
fnstcw
es
into
daa
adc
jnp
mov
in
gs
clc
jno
mov
fisubrs
ds
pop
add
add
ds
jnp
pop
push
xor
mov
ljmp
mov
daa
inc
enter
test
iret
xor
out
adc
movsb
subb
xchg
mov
xor
ja
loopne
pop
pusha
cmp
cmp
rorl
dec
lret
lcall
adcb
jecxz
mov
popf
cli
inc
pop
ret
sub
add
push
js
pop
stc
ds
pop
addr16
xchg
mov
inc
pop
mov
or
shl
movsb
dec
inc
add
mov
jo
sub
push
sbb
jmp
mov
rol
mov
inc
adc
mov
xchg
xor
cmp
xchg
dec
int
sub
outsb
repz
inc
popa
dec
jnp
jbe
sub
testb
lds
and
cmpsb
mov
mov
xor
inc
push
xchg
and
icebp
loope
rorb
out
pop
xchg
or
push
mov
inc
mov
and
insb
in
adc
dec
mov
scas
dec
aam
xor
pop
pop
adc
aas
jecxz
and
rcll
push
inc
or
add
push
pop
leave
pusha
ds
pop
xor
sub
add
ret
dec
imull
sub
and
or
loop
pushf
or
dec
lret
mov
jp
cmp
movsl
lret
outsl
cmp
pop
imul
push
pusha
cld
scas
fwait
dec
hlt
cmp
push
lret
sarb
cmp
mov
stos
out
clc
sub
mov
call
insl
jno
or
int3
mov
and
int3
fs
movsl
mov
gs
shll
icebp
decl
sub
lret
lods
lahf
outsb
js
adc
push
mov
mov
lock
movsl
outsl
add
pop
mov
mov
mov
cwtl
lods
inc
push
mov
or
aad
stos
xlat
adc
dec
cmp
mov
pusha
push
pop
and
int3
push
pop
subl
lods
sub
add
xchg
insl
shll
inc
nop
ret
mov
push
add
ljmp
push
dec
push
cmpsb
int3
leave
adc
dec
or
mov
mov
mov
mov
xchg
ljmp
fs
inc
jns
ret
cmp
sub
xchg
mov
fsubrs
or
sbb
sbb
shr
scas
mov
xchg
sub
sarl
daa
mov
sbb
and
sti
mov
aad
into
xor
and
mov
insl
inc
mov
cmp
dec
or
xor
xchg
mov
mov
sbb
add
popf
movsb
cwtl
gs
cmp
in
sub
cmp
push
mov
dec
ret
cmp
mov
imul
inc
add
mov
pop
aas
lahf
into
mov
pop
loop
ljmp
mull
arpl
add
pop
movsl
js
pop
xor
inc
sub
imul
add
mov
pop
clc
out
cli
lds
paddw
test
or
mov
dec
loopne
xchg
pop
dec
add
sbb
loope
xor
mov
insb
les
add
push
iret
shlb
idiv
jne
jmp
add
mov
inc
insl
inc
pop
and
test
xchg
inc
adc
push
clc
adc
inc
sub
rorl
xor
lock
inc
fldl
mov
dec
test
fidivrs
pop
dec
mov
push
enter
ja
mov
jbe
push
pop
mov
xor
xchg
push
mov
push
mov
push
ret
add
jb
inc
nop
mov
push
loopew
repnz
adc
iret
and
sbb
bound
sti
xchg
and
je
mov
mov
jnp
mov
hlt
mov
je
push
shrb
mov
sbb
mov
clc
mov
cs
outsl
call
and
mov
jnp
gs
daa
pop
mov
inc
adc
mov
scas
pop
dec
mov
in
inc
and
imul
xor
dec
cmp
xchg
xchg
rorl
jmp
scas
cmpsl
dec
sbb
jg
mov
push
inc
leave
cltd
jb
and
in
imul
pop
push
sub
jnp
sub
lahf
rorl
sbb
jbe
int3
xor
test
andl
hlt
and
xorb
orb
cmp
pushf
pop
in
mov
xchg
mov
push
or
lods
aam
in
sti
jle
jge,pt
xchg
and
jnp
mov
out
adc
xor
or
fisttpll
popf
pop
in
adc
mov
in
js
hlt
dec
jbe
and
popa
movsl
lods
ret
push
rcll
mov
daa
xor
inc
sbb
pop
inc
fwait
rolb
mov
jmp
jg
and
jno
adc
insb
and
xor
adc
sub
push
mov
ds
clc
mov
ss
push
inc
or
mov
lret
inc
xchg
jns
fistpl
or
xchg
or
movsb
and
jnp
into
adc
popa
pop
jp
into
add
sti
push
adc
sahf
test
cmc
add
sbb
movsl
je
inc
mov
insl
fsubrl
push
mov
xor
shll
dec
daa
je
push
in
adc
imul
xor
adc
cmpsl
adc
sbb
orb
fs
inc
insb
imul
lock
sub
inc
xchg
icebp
add
mov
push
sbb
fildll
addr16
jp
or
jl
test
mov
ja
push
mov
xor
push
jo
les
lret
adc
lea
call
lods
or
add
xchg
sbb
ss
jae
sub
dec
push
dec
inc
cld
and
fwait
dec
outsl
popf
xlat
out
aad
xchg
xorl
fbstp
pop
push
mov
dec
add
adc
aaa
sub
push
sbb
xchg
jmp
in
pop
mov
inc
jle
sub
clc
sub
dec
int3
or
and
out
fstpt
pop
sub
jae
rolb
sbb
push
ret
negl
andb
dec
lret
stos
mov
jns
imul
cmp
out
adc
xor
mov
daa
ror
std
out
popf
adc
pop
lock
mov
mov
pop
mov
movsl
pop
les
stos
or
jp
adc
dec
and
mov
outsl
xor
mov
sbb
pop
fdivl
mov
cli
mov
imul
subl
dec
lcall
in
sbb
jl
mov
mov
pushl
popf
int
mov
movsb
jmp
clc
das
xorl
mov
mov
jno
add
add
je
out
in
push
jmp
adc
jle
push
movsl
jl
test
icebp
call
push
cmp
mov
cmp
clc
pop
scas
jno
cmp
incl
inc
popf
cmp
stc
int
jne
leave
test
xchg
ret
or
stos
cmpsl
aad
mov
xchg
std
loope
pop
inc
mov
in
mov
jbe
xchg
lock
dec
jl
jae
insl
bound
fisttpl
pop
stc
pusha
std
jo
push
adc
loope
sbb
sub
fnsave
and
out
loope
jle
jns
test
mov
aam
sahf
jmp
and
dec
dec
cld
fmull
icebp
cltd
mov
jle
mov
adc
movsb
setnp
aas
fistpl
jmp
lahf
cmp
ret
add
out
jmp
insl
and
dec
adc
or
in
cmp
dec
adc
inc
test
jge
or
outsl
mov
sub
xchg
jno
xchg
lea
shlb
out
notl
fcoms
inc
orb
mov
mov
cs
subb
ds
sbb
or
cmp
or
mov
pushf
sbb
pop
xor
pushf
rol
fs
pop
jns
pop
pushf
and
ss
xor
mov
push
add
pop
inc
xchg
gs
ret
sbb
fsubs
fimuls
pop
dec
pushf
sar
adc
enter
mov
fmull
ret
inc
lods
stos
insb
adc
add
cmp
sbb
xchg
sub
xor
pop
push
add
out
dec
mov
inc
int
out
hlt
addl
xor
mov
scas
push
arpl
mov
pop
push
fcomps
dec
adc
lret
leave
jge
mov
dec
fldt
mov
mov
cmp
adc
adc
aas
push
out
add
fidivl
xor
xchg
scas
rcr
addr16
xor
test
dec
or
push
mov
xchg
daa
sti
clc
hlt
mov
jle
cmp
in
add
out
popl
lods
faddl
aad
addr16
push
add
dec
and
push
cs
repz
sti
out
cmp
scas
cltd
int3
jmp
inc
push
xor
lcall
stos
mov
sbb
je
xchg
push
sub
pandn
push
xchg
mov
adc
scas
in
cmpsb
mov
xor
in
les
lret
mov
pop
or
dec
aas
je
out
movsl
repnz
add
in
inc
popf
ret
mov
daa
sbb
gs
add
sbb
notb
jno
lds
pop
rorl
push
mov
cld
dec
push
lods
jbe
or
daa
xchg
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
jmp
jae
jmp
dec
movsb
xchg
hlt
sbb
adc
push
clc
adc
mov
outsl
lahf
xchg
pop
rcll
mov
ja
pop
and
push
jnp
sbb
xchg
ljmp
lock
jecxz
aad
popf
scas
sub
lahf
adcb
lahf
bound
stc
mov
aas
arpl
dec
xchg
cmp
scas
jno
clc
jg
push
push
adc
cmp
test
cmp
dec
pusha
ss
pop
insl
xor
add
cmpsb
mov
fcoml
jl
fmul
aas
loope
call
addb
mov
sbb
cmpsb
rolb
hlt
mov
pop
fdivl
push
xchg
fwait
xlat
fisttpll
pop
jmp
sub
xor
xor
cmpsb
mov
sbb
xor
sub
leave
pop
stos
nop
sbb
pushf
push
leave
inc
mov
sub
and
mov
repz
mov
mov
push
xchg
jl
gs
add
lea
sub
xchg
push
jns
add
mov
jbe
lret
cmp
rorl
rcll
ja
fnsave
stos
jmp
fsubrl
iret
xchg
cmp
mov
sub
scas
rol
inc
pushf
sbb
fbstp
sub
dec
stc
push
int
out
and
and
xchg
cmp
cmc
xor
aam
cmp
add
movsb
movsb
xor
lahf
mov
xchg
pop
shr
cli
push
sub
pusha
sbb
imul
ljmp
addr16
push
out
mov
arpl
lods
add
xchg
loopne
icebp
jnp
sar
push
and
mov
fistpl
cmpsb
aaa
cld
and
push
push
popf
test
push
cmp
sbb
in
cmp
in
rolb
test
ss
jae
ss
cmpsl
sub
sbb
ja
or
lods
in
sub
xor
insb
test
push
pop
push
stos
jmp
lods
cmp
inc
xchg
push
sub
lret
sub
sbb
and
adc
xlat
xor
add
and
add
aas
jle
mov
popa
add
add
dec
pop
sahf
xchg
push
or
aas
jns
pop
fldcw
adc
cwtl
dec
xchg
ljmp
push
or
inc
dec
cmpsb
sarb
hlt
jno
cmp
pop
sub
fwait
mov
add
das
out
test
mov
sbb
lcall
and
fs
dec
int
xchg
inc
fmull
lret
cmp
dec
jo
jle
cmpsl
push
mov
iret
add
jge
xlat
and
dec
jl
jbe
or
ljmp
mov
mov
pop
xchg
in
sahf
pop
das
ljmp
inc
and
ss
mov
push
les
ljmp
jae
cmp
mov
icebp
push
test
aam
and
int3
jb
push
testl
cmpsb
xchg
stos
sbb
mov
lahf
mov
pop
xor
pop
prefetch
sub
mov
xchg
std
cmpsl
lods
adc
mov
jnp
sbb
ret
leave
adc
dec
arpl
mov
mov
outsl
call
shl
inc
add
scas
adc
out
cmp
pop
jnp
mov
add
mov
sbb
jecxz
mov
pusha
clc
sbb
fldcw
fsubp
js
out
jae
xchg
fisttpll
bound
dec
loopne
fistpl
dec
sbb
mov
lea
push
push
jp
lods
cwtl
xchg
sub
insl
insb
sbb
jnp
inc
xor
dec
pop
pop
mov
jo
orb
sub
mov
movsl
cmp
sar
dec
jecxz
in
mov
out
xchg
mov
fidivrl
jo
jecxz
cli
pop
add
ljmp
test
jmp
cwtl
cmp
fists
nop
fisttps
mov
addl
mov
adc
cmp
test
mov
xor
add
not
in
arpl
cs
cmc
mov
aad
sbb
cmc
scas
dec
popf
mulb
out
cwtl
xor
jmp
adc
mov
mov
mov
scas
sub
jns
dec
mov
and
xor
pop
js
xchg
out
adc
bound
ror
xor
out
and
movsl
loopne
mov
jl,pt
sub
std
gs
cmpsb
cmp
push
dec
push
sbb
inc
push
xor
mov
jo
hlt
adc
jo
jp
inc
mov
or
and
shl
or
pminub
jne
add
ret
push
sub
adc
xor
scas
dec
add
jle
pop
fisubs
pop
cltd
pop
jo
outsb
push
outsb
call
movsb
cmp
xchg
scas
repz
out
lock
pushw
and
daa
mov
adc
xchg
sbb
or
popa
jo
lds
fbstp
out
mov
dec
mov
fisubrs
jg
push
mov
jbe
xchg
push
xchg
cld
xchg
xlat
shll
sub
mov
adcb
xchg
out
int3
xchg
mov
test
mov
adc
jb
sbb
pop
mov
js
push
les
popa
sub
cmp
xchg
lcall
daa
cltd
and
xchg
movsl
mov
clc
in
dec
mov
sbb
insl
mov
sbb
mov
gs
mov
jge
or
adc
call
pop
mov
xchg
out
pop
mov
mov
fbld
int3
and
nop
mov
add
iret
xchg
add
nop
sbb
and
or
lahf
and
fs
push
int
cli
sahf
outsb
movsb
and
hlt
vdivsd
and
pop
insb
daa
mov
lahf
xchg
xor
pop
sahf
frstor
pop
xlat
pop
test
mov
mov
out
and
xchg
clc
mov
fisubrs
dec
xor
mov
fwait
jmp
repz
roll
repz
test
lret
dec
das
mov
mov
stos
adc
leave
loope
pop
addl
inc
sub
fdivrp
lret
imul
loope
mov
fildl
pop
mov
pop
les
xchg
add
out
dec
int3
bound
sbbl
mov
pop
scas
mov
or
lods
enter
add
or
mov
push
add
lods
jmp
nop
cmp
push
add
sub
adc
clc
adc
pushf
out
sub
dec
and
mov
mov
mov
push
test
cmc
dec
cwtl
sub
mov
notb
call
aaa
xchg
sbb
clc
dec
hlt
pop
or
sub
push
mov
ljmp
lret
push
adc
fwait
pop
pushf
arpl
ret
push
imul
xchg
das
xor
add
fidivl
cmp
cmpsb
dec
loope
insb
inc
shrb
mov
xor
adc
movsb
adc
dec
cmpsl
jg
ret
fdivrs
addl
cwtl
add
scas
inc
lret
jns
loope
lret
inc
dec
adc
add
pop
dec
or
dec
mov
jp
or
pop
in
mov
pop
xor
pop
loop
into
xchg
pop
mov
pop
cmp
pop
movsl
dec
cwtl
mov
rcrl
stc
mov
add
aad
int3
jbe
xchg
xor
xor
outsb
pop
js
pusha
pop
xorps
xor
aaa
mov
repnz
jmp
add
xchg
fisubl
adc
fcoml
daa
in
push
push
outsl
rolb
push
xlat
or
iret
mov
out
call
gs
xor
ljmp
fs
cmp
rcll
in
fs
cwtl
sbb
pop
sub
int3
sub
iret
mov
jge
mov
scas
fidivs
out
sbb
addr16
add
lcall
mov
fs
and
ret
cmpsb
dec
repz
pop
mov
push
int3
mov
repnz
add
lods
jecxz
sbb
and
cmc
or
cmp
mov
mov
mov
cmp
ds
jle
pop
or
xchg
push
cs
or
sub
enter
aas
out
in
add
push
adc
or
fistl
shrl
add
movsl
in
pop
ss
inc
mov
push
mov
mov
mov
icebp
ss
xor
int3
arpl
insl
sahf
fdivl
rorb
adc
lahf
jp
push
jecxz
into
lahf
or
inc
push
or
insl
or
je
sub
mov
and
jge
popa
or
jmp
jnp
fnsave
sbb
push
xchg
addb
mov
sub
sahf
mov
dec
or
dec
jnp
jl
and
dec
fs
cmp
icebp
ja
imul
lds
xor
push
cmp
mov
lock
rsm
xchg
adc
test
sbb
adc
sub
fcoms
lds
jo
clc
out
and
mov
cli
pop
stc
inc
leave
inc
loop
iret
cmp
sbb
mov
add
pop
bound
pop
in
jae
mov
arpl
push
mov
sbb
bound
add
data16
stos
ds
fldl2t
xor
cmp
or
cmp
pop
repz
out
aas
cwtl
pop
mov
fucomip
jnp
pop
add
fwait
sub
cmpsl
rol
clc
lahf
ss
xlat
mov
cltd
mov
call
cmp
sbb
hlt
fstpl
pop
shll
xchg
adc
cmp
push
mov
das
loop
scas
or
sub
gs
pop
mov
jmp
testl
stos
fcomi
fs
push
dec
inc
test
sbb
jle
push
add
push
sbb
popa
pusha
sub
imul
sarl
xchg
push
sahf
xlat
xchg
pop
test
dec
out
mov
mov
pop
aad
sbb
mov
xchg
adc
sti
jge
inc
mov
call
jno
cwtl
aas
insl
repz
iret
sbb
enter
cmp
adc
ss
adc
mov
repz
aam
repnz
push
sti
fwait
jb
aaa
and
xor
xor
inc
pop
insl
pop
sti
inc
and
in
mov
mov
sub
or
jl
insb
icebp
sbb
shrl
sub
std
mov
sarl
aad
popf
in
cmp
insl
in
fwait
mov
mov
pop
dec
adc
sarb
mov
enter
sbb
xor
jmp
data16
lcall
xchg
xchg
popa
out
dec
fmull
popa
in
pop
jb
pop
pop
test
cmp
insb
dec
push
pusha
sub
jecxz
push
lods
lea
mov
cltd
jae
leave
xor
inc
movsw
mov
sub
inc
xchg
ret
loopne
dec
xor
inc
xchg
and
mov
mov
jmp
stos
add
mov
xor
popa
pop
addr16
xchg
pop
mov
dec
jp
out
stc
fwait
push
jcxz
out
outsl
aas
dec
sbb
cmp
add
mov
mov
and
pop
mov
xchg
enter
dec
insb
cmpsb
sub
cmp
xor
nop
aad
push
aam
testb
shr
shll
inc
inc
push
jmp
jbe
test
and
leave
enter
test
mov
pop
mov
mov
int
shll
loopne
sahf
sbb
mov
pop
lret
pop
push
fsubrs
and
sbb
mov
push
xor
cwtl
mov
ja
dec
jp
mov
dec
inc
mov
xchg
lahf
sub
ja
aas
andb
aad
add
test
lret
jae
out
adc
hlt
roll
sbb
mov
cmp
and
xor
aas
jns
xchg
mov
push
mov
rclb
xor
addr16
popa
bswap
add
cmp
test
xchg
fsub
mov
pop
scas
test
std
mov
cmp
int
jp
xchg
jnp
and
inc
cmp
ljmp
aad
cltd
movsb
pushf
xchg
loopne
pusha
imul
and
loopne
ret
mov
push
fisubrs
jo
jp
cmpsb
mov
scas
hlt
mov
xchg
dec
push
dec
cmp
adc
jns
mov
sahf
gs
or
and
mov
sbb
in
push
jg
mov
push
sbb
jne
lret
pop
or
add
xchg
push
frstor
push
test
insb
sbb
mov
mov
rorb
ret
add
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
jmp
mov
push
pop
or
sub
push
or
push
clc
adc
movsb
mov
push
adc
cmc
xchg
imul
das
inc
lea
pop
mov
jg
or
call
mov
cltd
mov
push
mov
imul
mov
js
mov
stos
dec
xchg
lcall
outsl
sbbl
sbb
inc
pop
inc
inc
dec
fcmovu
and
mov
leave
add
outsb
orb
mov
arpl
fwait
insb
add
jb
cmp
adc
inc
xchg
int
popa
and
cwtl
adc
fwait
lods
out
inc
call
into
sub
pop
test
dec
sbb
stos
lock
pop
jae
repz
int
iret
xchg
mov
jno
xor
cld
shr
stc
dec
dec
rclb
cs
dec
xchg
pop
ds
jmp
loopne
rcrb
push
pop
idivl
aas
insl
xor
xchg
or
jle
mov
pop
clc
stc
or
bound
inc
push
movsl
fsubrs
add
outsb
sub
sub
enter
mov
in
insl
dec
adc
mov
into
mov
lods
pusha
mov
push
stos
sbb
mov
add
test
xchg
add
sti
xor
cmp
xor
jle
mov
dec
stos
lret
out
xchg
fdivrl
fldl
push
adc
xchg
inc
sbb
mov
mov
sbb
shll
pop
pop
insb
shlb
aad
or
xchg
scas
and
inc
lea
popa
iret
mov
xor
sub
test
outsb
jmp
sub
mov
inc
or
mov
addl
or
test
sbb
cwtl
fcomps
int
sub
fcmove
jle
divb
mov
lods
addr16
and
incb
add
add
mov
xchg
mov
xchg
pop
sub
inc
sbb
insb
lahf
xor
fwait
mov
push
dec
pop
xchg
inc
lret
or
and
inc
imul
mov
push
dec
xchg
xchg
test
out
popf
xor
pop
push
cmc
int3
gs
enter
rcrb
ljmp
sbb
xor
or
dec
xchg
movsl
mov
mov
imul
dec
xchg
and
sbb
xor
push
roll
and
bound
frstor
in
sub
pop
lcall
adc
fbld
inc
clc
lret
das
push
cmp
dec
sub
xchg
push
jg
pop
pop
mov
or
cld
loop
or
data16
in
cwtl
or
in
sbb
fdivrs
out
ret
cmp
adc
or
fnstcw
adc
xor
nop
sub
dec
jno
sub
sahf
xor
ret
ja
inc
lea
push
cmp
mov
xchg
and
outsb
lds
jecxz
mov
push
push
sub
fistps
cmp
lea
daa
jae
xor
fidivrl
subb
roll
sarb
daa
adc
xchg
mov
xchg
int3
cli
xor
push
inc
push
mov
ja
sahf
shl
or
jns
sbb
adc
imul
push
scas
push
mov
cmp
sub
aas
scas
leave
sbb
adc
scas
enter
jle
dec
fld
in
dec
inc
mov
dec
imul
jae
push
rorb
int3
test
mov
pop
mov
nop
fwait
jg
stc
insb
in
jmp
fistps
popa
fistpl
cmp
mov
push
addb
aaa
pop
jbe
xchg
scas
fdiv
jmp
mov
push
sub
rcll
gs
add
js
loope
mov
dec
fisubrl
sbb
cmp
xchg
loop
movb
push
jmp
mov
inc
je
data16
mov
jmp
in
lea
sub
cld
dec
les
mov
mov
mov
dec
ljmp
pop
xlat
dec
arpl
repz
pop
adc
rorl
in
leave
loope
sbbl
loope
out
fldl
stos
ret
dec
mov
repnz
rolb
test
xor
sti
pop
jp
cltd
jge
sbb
rcl
in
push
cmc
add
pop
les
jb
push
fsts
cmpsl
pop
dec
mov
sub
pop
mov
jge
jns
xchg
push
sbb
int3
fiaddl
sub
sbb
dec
sub
mov
test
mov
xchg
adc
cld
out
gs
imul
sbb
fs
push
mov
insl
push
or
cmc
div
pop
les
xlat
insb
push
lret
cltd
repz
cmp
jl,pt
jecxz
inc
in
fs
mov
shll
sbb
in
dec
mov
pop
or
bswap
sarb
xchg
insl
add
xchg
dec
shlb
ljmp
incl
addr16
repz
mov
push
ss
ret
mov
arpl
xchg
sub
cmc
pop
inc
lock
fstps
fcomps
mov
dec
out
ficoml
fsubrl
push
cmpsw
mov
xlat
stos
popl
js
test
leave
dec
add
or
lods
nop
mov
sbb
and
je
xchg
mov
test
push
push
stc
mov
cs
or
inc
pop
fldl
divb
and
shl
jge
pop
mov
ja
addr16
push
ror
mov
xor
mov
je
jne
push
out
out
insb
shlb
add
pop
inc
std
jno
ret
sub
or
out
rorb
mov
fdivp
fisubl
fcomps
cli
pop
jne
mov
fmuls
pop
inc
sti
xor
sub
push
stos
das
imul
cld
out
dec
fbld
loop
icebp
aaa
adc
xor
das
add
inc
lret
push
push
pop
arpl
mov
mov
pop
and
int
mov
xchg
push
or
sti
dec
hlt
cs
add
mov
jle
jge
inc
adc
inc
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
jmp
loopne
rcl
mov
mov
add
adc
clc
adc
mov
pop
cmp
js
inc
xor
cmp
in
pop
xchg
stc
iret
lods
in
lods
cmp
and
outsl
in
insl
push
sbb
scas
push
sbb
cmp
ret
jp
xor
ficomps
adc
daa
mov
jns
fbld
pop
or
movl
roll
lock
dec
add
push
insb
xor
bound
test
movsb
shrl
add
inc
xlat
rcr
imul
dec
fisubs
cmp
mov
cmp
sbb
test
push
gs
sarl
jp
insl
decb
out
mov
cmp
loop
call
xchg
and
xchg
pop
clc
popa
cs
sub
sbb
iret
andb
inc
mov
sahf
and
scas
inc
xor
cmc
inc
sub
fidivrs
lds
nop
adc
es
imul
out
pop
in
mov
mov
clc
push
xor
and
insl
repz
pop
mov
out
dec
sbb
or
push
les
and
jmp
popa
sbb
dec
imul
pop
ss
adc
pop
out
adc
sbb
pushf
iret
or
lret
push
mov
push
outsl
pop
outsl
aas
xor
ljmp
push
or
imul
movb
cltd
mov
call
js
jmp
mov
fs
jbe
cmpsb
pop
pop
or
test
sahf
sbb
sub
mov
xchg
add
fcoms
fcom
pop
mov
test
adc
mov
mov
pop
sub
inc
movb
shlb
and
cli
in
outsl
jnp
or
faddp
jae
and
pushf
loop
stc
cmp
add
rol
pop
jns
fmull
push
sbb
push
mov
dec
mov
push
sub
and
pushl
mov
les
xor
or
sti
bound
dec
inc
pusha
cmpsl
mov
daa
js
jecxz
sbb
adc
shl
mov
fisubs
mov
daa
pop
dec
mov
fnsave
cld
xchg
and
pop
adc
mov
jmp
aad
sub
mov
or
mov
or
add
pop
int
cs
popf
mov
and
xchg
lret
icebp
dec
in
lods
bound
aam
ja
pop
mov
cld
mov
stos
mov
sbb
jecxz
mov
rolb
xchg
mov
test
ja
icebp
push
scas
sbb
jb
sbb
pop
aam
or
cmpb
jno
stos
stc
add
sarb
push
push
jnp
cmp
jbe
std
data16
cs
and
dec
jbe
orb
loop
int3
in
and
daa
push
add
jp
testb
mov
push
push
sbb
shll
adc
inc
mov
xchg
mov
and
iret
add
in
dec
dec
imul
repz
imul
push
into
dec
xor
xchg
lcall
xorl
aad
pop
or
sub
adc
mov
jnp
in
mov
jae
push
outsb
lahf
in
xor
adc
xlat
cmpl
in
enter
mov
lods
fisubs
adc
mov
mov
mov
fidivrs
shrl
dec
loope
sahf
xor
pushf
lahf
pop
sbb
mov
shlb
mov
cmp
scas
and
jae
fisubs
add
inc
push
cmp
in
ret
jbe
fists
dec
lea
mov
lods
adc
adcb
arpl
sbb
pusha
cwtl
add
pop
xchg
data16
and
pop
inc
inc
pusha
and
jecxz
js
or
xchg
in
mov
xchg
fisubrl
cld
movsl
cmpsb
lret
push
pusha
cmp
cld
clc
mov
add
daa
fs
inc
out
jle
and
movq
sub
cwtl
out
test
test
loopne
imul
add
insl
scas
adc
push
mov
xchg
xchg
xor
add
mov
rol
push
cltd
sbb
test
xor
jge
in
js
fildll
aas
and
das
mov
cmp
sub
movsb
sbbb
mov
inc
jg
jecxz
push
sti
cmp
dec
inc
mov
cmp
ret
cmp
jnp
leave
or
add
imul
fcompl
or
or
pop
mov
stos
shrb
fdiv
jns
ljmp
dec
xchg
cld
test
popa
xchg
push
xor
mov
out
push
in
aas
mov
movsb
or
xchg
pop
rol
cmp
icebp
push
shll
jp
lock
adc
lret
lods
xchg
ljmp
int
dec
leave
pop
scas
dec
xchg
subb
or
cld
mov
xor
mov
pushf
fimull
push
lret
mov
jbe
add
xchg
add
dec
loopne
movsl
cwtl
inc
cli
cli
call
cmp
dec
pop
fidivrs
fisubrl
daa
mov
scas
sbb
and
pop
inc
orl
movsb
out
and
scas
stos
aam
fnstenv
mov
pop
xor
add
js
jl
fsubrl
push
mov
or
jae
inc
in
lock
dec
dec
jge
pop
push
push
and
push
cmpsl
movl
sbb
shll
imul
mov
push
stos
cltd
cli
cmp
scas
addr16
fwait
dec
arpl
inc
push
sub
and
pushf
mov
mov
xor
loopne
pop
enter
pushf
inc
push
dec
jno
adc
mov
fwait
shrb
ljmp
or
mov
adc
icebp
in
push
add
arpl
mov
push
stc
pop
aas
insb
popa
or
push
scas
pop
xor
cmp
add
and
mov
mov
or
mov
iret
mov
pop
cmp
loopne
imul
int
les
adc
or
mov
shr
mov
mov
xor
xor
jmp
xchg
hlt
rol
xor
mov
xor
push
clc
adc
and
mov
faddp
adc
or
mov
jno
mov
pop
in
mov
fwait
test
es
inc
out
cmpsl
cmp
dec
arpl
pushf
ficoms
int3
xchg
divl
inc
mov
test
stc
and
daa
inc
mov
fidivl
insl
xchg
call
dec
jno
jle
leave
mov
adc
push
imul
nop
sub
lcall
mov
mov
gs
mov
aas
pop
lock
jno
adc
fdivs
dec
test
or
aad
jne
pop
jmp
sbb
fdivl
lods
mov
dec
scas
xor
adc
dec
ror
lods
xor
mov
data16
in
add
cmp
mov
pop
outsb
negl
insb
popf
xor
xchg
fs
jb
lahf
mov
mov
insl
lret
sbb
aam
icebp
dec
mov
addr16
cmp
cmp
push
imul
and
cmp
lret
inc
fldcw
jbe
fst
stc
mov
fisttpll
insl
fsincos
jb
xchg
movsb
pop
xchg
movsl
fldcw
and
dec
ljmp
lods
std
imul
and
andb
xor
mov
cmp
popa
repz
aad
mov
sbb
mov
loope
xchg
sub
sbb
fildl
lret
fdivl
orb
ret
in
push
and
into
xor
loopne
cmc
mov
sbb
pop
cs
fldl
repz
jnp
mov
xor
push
jae
aas
mov
jo
jg
adc
ret
stc
inc
cwtl
adc
daa
repz
xlat
int3
mov
jp
fidivl
fisttpll
push
add
mov
sbb
mov
jne
or
shlb
mov
daa
cltd
subb
fldt
iret
andb
dec
sub
fsubl
jb
fidivrs
les
inc
out
mov
dec
pusha
shrb
jnp
insl
scas
xchg
imul
movb
jne
sub
sbb
adc
pop
insl
movsl
movsb
arpl
aam
mov
inc
xchg
xor
aad
jo
cmpsb
dec
aam
push
sub
add
pusha
xchg
mov
bound
or
ret
xchg
inc
xlat
hlt
jae
xchg
in
xlat
test
mov
aas
outsb
int3
out
iret
cld
outsl
iret
jbe
mov
and
lock
in
int
mov
mov
add
pop
adc
and
subl
cwtl
cmp
das
and
push
insb
dec
pop
sbb
cmpsb
popf
inc
pop
push
leave
aad
sub
push
cmp
loop
inc
xorb
popf
clc
cmpsb
sbb
push
jge
loope
push
adc
dec
sub
and
scas
pushw
not
push
movsb
arpl
cmp
adc
push
es
rcrb
std
cmpsb
aaa
lahf
scas
add
aaa
dec
adc
mov
and
or
push
hlt
aad
pop
add
pop
push
sbb
int3
cmp
mov
push
pop
mov
andl
imul
sbbb
cld
rolb
inc
je
or
shrb
push
mov
hlt
out
out
popf
sbb
pop
mov
jg
inc
mov
shl
ds
ret
sbb
or
in
mov
aas
adc
lcall
pusha
je
ss
lcall
movsb
jno
pop
nop
mov
sbb
add
stc
pusha
pop
sub
cmp
sub
add
mov
inc
repnz
test
adc
insb
mov
sub
mov
mov
jp
movsl
mov
adc
jg
fistpl
sbb
lret
jae
xchg
sub
xchg
ja
adc
cs
data16
repz
mov
push
or
sbb
call
int3
lahf
repnz
cmp
jb
imul
sub
mov
addl
shr
xor
lcall
inc
sbb
adc
popf
cmp
fmuls
int
xor
add
incb
cmpsb
ret
and
and
decb
loope
sub
inc
sub
lahf
xchg
or
test
inc
cmpsb
cmp
mov
mov
lcall
pminub
jns
dec
idivl
ljmp
jge
sbbb
adc
and
orb
jge
gs
stos
popa
setae
dec
adc
roll
add
std
test
ja
xchg
loopne
jbe
xor
dec
dec
pusha
jns
and
pushf
push
les
or
es
adc
jb
xor
xchg
push
pusha
into
pop
cs
dec
mov
push
adc
pop
dec
mov
jb
jl
lret
mov
inc
jnp
cmp
lret
xchg
imul
into
sahf
pop
xor
and
xor
mov
aam
jns
loopne
mov
pushf
mov
mov
lds
mov
mov
and
adc
popa
shrl
sub
scas
mov
fcomps
sarl
jo
into
push
and
inc
es
xlat
test
inc
push
or
xchg
movsb
mov
dec
add
pusha
mov
lea
jg
mov
es
cwtl
mov
jle
sbb
mov
cmc
xor
xor
sarb
shr
insb
sbb
mov
int3
js
xchg
into
jmp
int3
cld
push
sub
sbb
jno
adcl
jl
sbb
gs
js
test
popf
inc
fisttps
jnp
xchg
sbb
adc
addr16
mov
addr16
push
lea
into
dec
jl
mov
mov
sub
dec
sarl
sarl
dec
enter
xor
outsl
inc
jnp
sahf
cmc
outsl
rsqrtps
sbb
divb
inc
out
cs
sti
inc
or
cmpb
iret
sbb
loop
cmpsl
adc
scas
fldcw
out
or
das
sub
lret
loope
leave
sub
xor
cld
sub
push
xchg
ds
sahf
sub
test
fucomip
jle
enter
sub
out
fimuls
ret
cwtl
and
shl
mov
mov
mov
shrd
shr
mov
mov
jmp
jecxz
fstl
inc
xor
sbb
adc
adc
clc
adc
mov
call
sti
pop
lds
cmp
jmp
mov
push
outsb
xor
popa
pop
out
mov
aam
fmull
icebp
add
nop
int
adc
dec
hlt
jne
jo
xor
cmpl
lahf
pushf
jbe
sahf
push
shlb
mov
out
sub
test
movb
sti
add
enter
fidivrl
cmpsl
fcmovne
das
pop
adc
clc
push
cmp
mov
adc
inc
rcrl
addl
sub
orb
addl
loopne
popf
rclb
scas
std
loope
jecxz
or
mov
add
sub
push
andnps
jne
shl
or
ret
and
and
and
movsl
adc
cmpsb
fiaddl
clc
inc
or
inc
imull
cmp
adc
mov
cmp
cli
mov
fcomps
loope
sbb
clc
adc
jne
or
push
cli
adc
xor
pushf
pop
and
and
jle
imul
int
sbb
std
notl
pop
inc
pop
push
and
sub
cmpsl
sbb
rcrb
jl
xlat
ja
adc
hlt
mov
stos
lret
aam
push
xchg
and
fwait
mov
add
mov
je
xor
mov
sbb
xchg
inc
fildl
out
cmpsb
xchg
arpl
fwait
jne
out
notb
jp
dec
addr16
mov
xor
insl
ss
push
and
and
jo
clc
stos
loop
xlat
roll
jbe
or
das
inc
xor
and
mov
mov
adc
adc
push
fistpll
add
pop
adcl
xchg
sbb
out
pop
test
sub
pop
lahf
cmp
dec
mov
and
push
jbe
roll
xor
sub
sub
add
xor
stos
clc
fisttps
adc
pushf
popa
iret
cmp
push
cmp
fildl
loope
push
inc
outsb
mov
imul
jne
jp
push
and
mov
cmp
loop
pop
inc
cmp
ds
dec
sbb
xchg
cmc
sbb
mov
repnz
dec
pushf
es
outsb
es
int3
rcrb
jmp
xchg
xlat
jecxz
jl
test
enter
movsb
movsb
in
fsub
cmp
hlt
sbb
push
mov
push
movsb
ret
pop
pop
pusha
push
adc
cmp
ret
mov
stos
dec
js
jns
mov
fwait
jns
scas
pop
jnp
mov
fsubl
addr16
cld
subl
dec
ss
fistps
sub
or
js
lods
daa
jno
sub
pop
add
push
add
pop
je
push
ja
outsl
push
or
xchg
mov
adc
sbb
mov
fadd
inc
adcb
pop
stc
sbb
cmp
jle
inc
mov
xor
enter
jb
jmp
inc
sub
jns
mov
adc
xlat
dec
scas
mov
sub
push
push
lods
xor
ljmp
nop
push
xor
popa
cmp
mov
jp
sbb
mov
cmc
xorb
jmp
cmp
clc
out
push
pop
sbb
bound
adc
adc
shlb
mov
mov
loop
xorb
cltd
ret
imul
pusha
push
pop
movl
jmp
push
fiadds
fildl
out
loope
sbb
dec
int3
pop
faddp
rcrl
mov
adcl
sbbl
mov
pop
push
sub
popl
int3
push
mov
mov
test
outsb
adc
jne
dec
mov
xchg
ss
or
jne
mov
test
adc
jne
icebp
inc
xorb
enter
loopne
movsb
icebp
clc
lcall
leave
push
mov
pop
cmp
aas
sbb
xor
enter
and
xorb
xor
ja
adc
cltd
xchg
fldenv
gs
xor
cwtl
fsubrl
push
jbe
xchg
cmpsb
sub
mov
push
xchg
pushf
push
or
xchg
mov
mov
jg
mov
lds
popa
jae
cmp
mov
dec
aam
aad
cmpl
push
divb
fiadds
out
stc
fmulp
dec
shrb
cwtl
movsl
xor
add
push
loopne
push
xchg
into
cltd
push
popf
sub
dec
int
stos
sub
and
and
sahf
out
jmp
js
cs
lret
out
sbbl
mov
cmpsb
cmc
jmp
push
addr16
mov
ret
addb
xlat
jns
sub
dec
into
arpl
adc
adc
push
sbb
pop
scas
push
lock
test
cwtl
lcall
jbe
in
inc
sti
xlat
cmp
lock
inc
push
inc
mov
lcall
mov
stos
mov
push
call
sub
xchg
xchg
dec
mov
or
mov
into
lods
mov
sub
mov
sbb
adc
insb
push
cmp
rorb
push
les
xor
and
dec
mov
mov
orb
mov
in
inc
imul
pop
cmp
jl
dec
bound
jmp
jb
gs
xchg
xchg
pop
xchg
sbb
mov
push
sbb
xor
lea
jg
jne
jnp
outsl
jnp
pop
mov
or
jg
jle
pushf
imul
sub
lret
loopne
ret
sub
icebp
test
testl
sbb
push
testb
enter
xchg
sbb
in
inc
mov
mov
roll
push
pop
or
jb
test
in
xor
push
mov
sbb
push
lods
push
lods
sbb
pxor
sahf
nop
loop
dec
mov
ds
incb
lods
repz
cmp
movsl
pop
and
ljmp
sbb
xor
xchg
sti
mov
push
or
xor
mov
and
cmp
push
movsb
pop
leave
insl
adc
or
add
mov
jb
mov
adc
ret
mov
adc
testl
cwtl
add
rol
jne
and
outsb
in
aam
jg
xchg
lcall
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
jmp
pop
mov
push
or
pop
in
fucomip
lea
push
jecxz
adc
clc
adc
mov
ss
pop
xchg
xchg
xor
mov
xchg
mov
pop
xor
add
push
adc
insl
jb
cmp
das
mov
out
fnstcw
cld
test
dec
xor
popa
push
fsubrl
push
pop
sub
xlat
cmp
aam
aaa
imul
sbb
in
mov
lods
sahf
aas
nop
lahf
xchg
pop
shrl
mov
sti
in
mov
movb
jne
mov
mov
cmpsb
in
xlat
rsqrtps
sti
mov
xor
or
orb
adc
pushf
xchg
fbld
mov
out
mov
jb
push
cld
add
xor
ficoms
xchg
or
xor
or
mov
ret
cwtl
iret
out
cli
repz
mov
xor
mov
sti
dec
sahf
xchg
and
xor
inc
mov
js
pop
lods
sub
int3
cmp
cmp
jle
push
fsubrl
fs
add
jp
aam
outsb
in
les
jns
pop
xor
add
rcr
pop
enter
mov
mov
jp
mov
cld
fisttpll
js
lods
hlt
inc
inc
add
mov
js
sub
push
lcall
jno
out
sbb
xchg
cltd
and
lcall
sub
lea
cmp
repnz
push
test
shrb
outsb
mov
mov
nop
clc
pop
jge
es
mov
in
pop
cmp
movsb
pop
aaa
mov
nop
sub
push
or
mov
and
outsb
fisubl
into
and
je
out
imul
popf
sub
sbb
mov
leave
fimuls
fimull
test
scas
test
aam
std
adc
cmp
imul
xor
fimuls
sbb
adc
iret
cs
sbb
enter
jg
adc
es
fsubp
sub
xor
sarb
lret
ficomps
sbb
adc
nop
push
and
imul
fidivrs
xor
in
inc
or
dec
cmpl
cmp
dec
insl
clc
sti
pusha
shl
lcall
push
into
rcr
or
cltd
adc
insl
adc
jle
inc
xlat
or
mov
add
push
and
mov
xchg
rsm
push
mov
pushf
jp
movsl
sbb
add
jmp
addl
test
xchg
rcr
mov
std
je
subb
xor
je
adc
add
icebp
mov
inc
imul
cmp
xor
or
out
pop
and
jp
insl
arpl
inc
push
inc
leave
push
xchg
push
jns
daa
fcom
push
stc
jle
cmp
add
xchg
nop
out
es
std
mov
sub
ja
jmp
ds
sbb
xor
inc
lds
mov
hlt
lds
data16
cld
sub
and
mov
jmp
rcr
movsb
xchg
out
xchg
adc
cmovp
or
mov
aad
inc
in
icebp
push
or
inc
test
mov
test
mov
mov
jnp
add
mov
xor
xor
pop
fistpll
dec
jl
icebp
mov
js
pop
fsubl
rolb
and
pop
ja
insb
xor
cltd
mov
pop
xor
push
ljmp
nop
pop
xor
add
fsubs
mov
je
call
sahf
fisubs
out
jnp
ror
sub
ljmp
nop
iret
movsl
iret
inc
jnp
mov
sub
mov
stc
or
and
dec
add
jbe
fbstp
mov
aaa
pop
outsb
or
pop
orb
popf
out
adc
movsl
lea
and
mov
jbe
mov
xchg
adc
gs
outsl
pop
test
push
dec
rorl
call
dec
lods
in
mov
jge
jae
sbb
test
sbb
sub
or
or
jne
inc
imul
hlt
push
push
sub
in
sti
test
cli
ficoml
add
ja
jbe
stc
sub
and
fidivl
push
int
pop
in
in
mov
cli
dec
jbe
jmp
mov
fwait
sbb
fistpl
ja
negb
lds
jle
dec
xsave
or
xor
xor
fdivrs
cmp
mov
das
lcall
dec
and
and
pop
fnstenv
xchg
movsb
ljmp
push
adc
ljmp
rolb
jmp
push
xchg
sbb
mov
fbstp
lods
shll
scas
adc
mov
push
mov
xor
lods
aaa
stos
or
add
dec
mov
into
stos
jge
push
or
xlat
mov
sub
and
mov
test
mov
pop
sbb
movsl
inc
pop
arpl
lock
mov
or
sub
mov
inc
mov
enter
push
mov
cmp
pop
mov
mov
cmp
dec
movsl
add
adc
cmp
out
ja
lods
xchg
stc
repnz
out
lcall
push
subb
notl
dec
and
lods
clc
pushf
into
movsl
loopne
add
and
cli
insb
shlb
inc
add
out
nop
les
mov
movsl
inc
adc
xor
shll
lea
call
lock
aad
fwait
add
sub
in
testl
fs
cmp
bnd
jne
or
dec
mov
mov
jbe
mov
icebp
jns
mov
dec
sbb
aad
mov
inc
xor
mull
lret
xchg
jnp
dec
push
fadd
out
enter
movsl
and
in
dec
jl
iret
sub
and
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
xor
mov
push
and
mov
out
daa
out
xchg
aad
adc
clc
adc
aam
out
sub
pop
shl
inc
cmp
push
cmpsl
jmp
movsb
shrl
jl
or
aam
dec
cmc
pusha
xlat
jb
and
cmp
push
mov
jge
cli
mov
xchg
fs
add
xchg
adc
adc
add
rolb
inc
jne
push
add
stos
pushf
stc
pusha
les
enter
xchg
iret
inc
sub
pop
or
push
frstor
jle
cltd
jmp
dec
bound
out
gs
xor
and
jle
add
dec
cltd
adc
test
data16
xchg
lock
lods
nop
cmp
lahf
push
subl
mov
lea
std
pop
mov
mov
pop
sbb
dec
sub
rcrb
cmp
dec
mov
aas
ja
lahf
adc
jnp
andl
push
dec
lds
iret
movsl
fisubrl
add
or
fs
aam
push
mov
leave
fsub
sbb
or
enter
test
xchg
insl
mov
sbb
addr16
adc
ficompl
dec
mov
xchg
bound
enter
dec
inc
add
push
popa
out
lea
jae
dec
sub
add
xchg
add
sbb
ret
repz
popf
dec
xor
adc
lahf
cmp
roll
push
jl
mov
add
mov
push
sahf
add
aam
movl
dec
jae
push
mov
adc
xor
and
cmp
test
fs
js
sub
lods
std
ljmp
inc
inc
adc
mov
fbld
jno
cmpsl
mov
movsb
xchg
adc
push
sbb
test
cs
mov
dec
mov
int3
int
lock
xchg
or
nop
inc
aam
pop
jo
inc
add
addr16
rorl
int3
add
data16
xor
add
int3
andl
lock
or
mov
fcmovu
lds
es
pop
add
add
mov
flds
mov
out
xor
iret
dec
and
outsl
or
push
lahf
jb
xor
repnz
int
js
pusha
stos
dec
dec
or
add
repz
push
cmp
jnp
adc
ja
jmp
enter
jno
mov
cmpsb
clc
sbb
in
cld
xchg
jbe
or
or
add
xchg
ljmp
mov
xchg
popf
popf
aas
testb
push
pop
and
ret
stos
stc
mov
test
pop
cmpsl
xor
mov
push
mov
enter
in
dec
fwait
adc
jbe
sub
fcmove
sbb
lcall
bound
fstl
mov
and
dec
cmpsl
inc
popa
out
cs
stos
movsl
movsl
dec
inc
inc
repz
stos
repz
push
out
movsb
cltd
mov
jo
sbb
imul
add
stos
sbb
orl
pop
sub
mov
dec
inc
popa
cmp
pushf
cmpsb
mov
frstor
out
jl
ja
bound
lods
mov
das
pusha
das
xchg
fimull
dec
dec
and
push
cmp
xor
mov
bnd
popf
cmp
push
adc
pop
shrl
es
movsb
loopne
cli
adcb
pop
fnclex
jp
xor
mov
or
dec
sbb
add
mov
add
test
dec
outsw
xchg
or
push
add
fcoms
xor
or
mov
mov
mov
rol
xlat
sahf
pop
xchg
shll
push
bound
pop
jns
push
out
popa
loopne
pop
dec
dec
xlat
mov
sbb
int
mov
mov
arpl
adc
inc
sbb
fcoml
shlb
add
xor
xor
and
andb
sbb
or
rorl
movsb
pusha
popa
xchg
jb
test
ja
add
test
pop
jmp
call
orl
arpl
xchg
jo
mov
xadd
not
mov
add
xor
xchg
jnp
sub
cmp
xchg
lahf
gs
pusha
lret
and
nop
inc
test
nop
jmp
add
sub
repnz
cmc
xchg
adc
dec
or
and
pushf
pop
out
js
add
cs
or
mov
push
imul
arpl
push
xchg
mov
paddw
sub
cmpps
ja
push
daa
lahf
mov
stc
in
aam
sub
mov
and
cmp
pop
xchg
sbb
inc
and
cmp
rep
lea
fdivl
gs
inc
ret
sub
bound
xchg
fldcw
push
cmpsb
sahf
add
add
gs
mov
inc
test
cld
iret
cmp
sbb
leave
sub
icebp
dec
mov
in
pushf
sub
mov
sar
push
clc
mov
popf
add
aas
ja
sub
stos
mov
popf
std
xor
notb
mov
or
xchg
out
push
sti
cmp
jl
sbb
aad
sahf
testb
dec
cwtl
cmp
addl
in
in
fldenv
dec
add
sbb
xor
sti
mov
dec
fwait
adcl
mov
orb
repz
test
fwait
stc
in
aas
push
aaa
xchg
jo
and
mov
shr
or
arpl
xchg
dec
jns
push
mov
movsl
arpl
xchg
xor
js
lea
mov
cmpsb
xor
movsl
xor
inc
push
out
rcr
int
sub
xchg
adc
sbb
and
pop
xchg
adc
mov
fwait
arpl
push
inc
subl
xchg
jmp
xchg
lret
loopne
leave
mov
je
shrl
imul
sub
mov
out
out
lret
in
adc
ficompl
icebp
mov
xchg
je
hlt
mov
int
cli
cmp
dec
jns
fwait
dec
mov
mov
or
shl
shl
mov
mov
xor
xor
mov
mov
jmp
popf
scas
add
mov
aaa
shlb
adc
clc
adc
xchg
ret
fimull
lods
ljmp
cmp
ds
gs
lock
sub
mov
xchg
test
enter
pop
cld
into
pop
mov
mov
cwtl
mov
cmp
pop
nop
gs
xchg
call
xchg
or
xchg
lcall
jge
cmc
test
rcrb
mov
mov
flds
notb
and
adc
mov
push
cmp
cltd
ret
cmp
repnz
jg
adc
sbb
add
stos
jg
xor
fs
or
lret
jb
popf
cmc
pop
jecxz
aam
cltd
imul
jmp
test
in
jle
add
ds
test
mov
lcall
push
or
andb
fimull
add
loop
out
mov
aam
mov
dec
lds
ds
xchg
add
cmp
jle
fistps
adc
xor
jp
inc
cltd
jae
lret
scas
push
scas
in
cld
adc
jmp
mov
int3
roll
mov
loop
test
dec
std
adcb
je
adc
jo
jbe
ret
or
into
mov
xor
push
mov
push
cltd
sbb
xchg
popf
fsubs
sub
inc
test
xchg
fcoms
popa
push
test
xor
push
in
adc
cmp
push
lods
mov
jecxz
mov
sub
test
mov
adc
lods
stc
xchg
aas
ja
in
mov
test
mov
fwait
push
ljmp
or
jae
movsl
out
jae
sbb
xchg
insl
cmp
adc
inc
pop
sub
fildll
sub
mov
sti
test
or
mov
cmpsb
sbb
push
sbb
push
out
loopnew
repz
aas
add
adc
popf
loopne
out
mov
jle
scas
sbb
pop
icebp
sar
out
fstps
stos
mov
cwtl
je
xor
out
jecxz
hlt
es
pop
mov
sbb
xchg
push
mov
cmp
popl
pop
fildl
add
stc
cmpl
xchg
cmpsb
repz
mov
sub
mov
jne
mov
stos
and
cmpsl
push
stos
adc
movsl
rclb
mov
and
ficoml
dec
hlt
and
mov
inc
shrb
subb
pop
cmc
movsb
sbb
pop
add
xchg
cwtl
nop
cltd
lahf
mov
push
or
mul
jno
pop
cwtl
lcall
xor
mov
dec
fucomip
mov
shlb
mov
shll
or
hlt
mov
jne
or
pop
dec
sub
mov
mov
dec
ficoml
dec
cwtl
sub
and
lret
pop
aaa
adc
outsl
cld
or
pop
movsl
insb
jne
cmp
or
and
sbb
hlt
daa
sub
mov
pop
xchg
mov
mov
mov
inc
movsl
adc
jg
idivl
stc
cmp
dec
or
xchg
ds
jne
jns
andl
fisttps
pusha
adc
in
ret
sub
xchg
shlb
mov
cltd
mov
movsb
cli
pop
movsl
aas
xlat
nop
lcall
int3
cli
mov
aaa
sbb
inc
cmp
repnz
push
sub
dec
jl
mov
xchg
pop
and
sub
pusha
test
out
xchg
or
push
iret
pop
or
out
inc
stos
pushf
aaa
xor
mov
ss
dec
cmpsb
jl
dec
adc
clc
jae
sub
adc
mov
arpl
mov
ljmp
push
push
insl
ljmp
jge
ljmp
mov
test
dec
mov
and
mov
mov
jmp
jp
repnz
nop
rorb
pop
adc
and
jge
fs
cmpsb
ret
loopne
test
sub
push
test
xor
fstpt
add
arpl
aad
inc
arpl
addb
movsl
dec
test
sbb
je
xor
push
xchg
push
jae
pop
inc
jp
sub
adc
insb
push
jb
adc
jae
repnz
testb
sbb
mov
mov
test
push
push
repnz
movsl
stc
mov
fs
inc
mov
cli
pop
fidivrl
jno
adcl
mov
pop
aad
nop
stos
push
pusha
push
mov
adc
cmp
xor
scas
in
or
in
sub
in
arpl
fdivs
sbb
or
loop
mov
fs
jp
stos
jecxz
inc
mov
or
rcll
mov
mov
test
push
pop
adc
fistps
sub
rolb
jle
push
push
push
fadds
fimuls
dec
mov
nop
push
cmpsl
mov
imul
outsl
pop
and
subb
sub
leave
rorl
cmp
stc
arpl
mov
call
mov
mov
mov
jg
lock
cmp
push
mov
dec
or
out
adc
mov
loopne
sub
push
inc
jne
out
cmc
test
mov
mov
xchg
inc
xchg
in
dec
sub
push
pop
pushf
mov
jmp
loope
enter
mov
mov
rcr
ret
pop
add
jle
xchg
fstpt
arpl
js
imull
ja
les
sti
sbb
pop
sub
pop
icebp
xor
mulb
js
call
outsb
dec
not
sbb
cmp
inc
mov
movsb
inc
popa
gs
addb
push
dec
inc
lods
jb
shlb
js
and
icebp
orl
sub
jge
and
cli
mov
mov
jnp
outsl
push
pop
loopne
sbb
test
dec
fsubs
pop
hlt
push
cmp
xor
rolb
std
jnp
js
jo
shrl
sarb
push
enter
jae
test
lret
jecxz
push
dec
xor
rorb
lods
cli
add
out
add
jge
xor
or
jmp
lea
cwtl
sbb
sbb
leave
loope
inc
adc
clc
adc
sbb
nop
add
lods
inc
std
or
aam
lahf
push
jno
mov
push
jbe
push
rcrb
sbb
adc
cwtl
cs
jmp
test
push
fwait
pop
mov
dec
outsb
jns
dec
mov
popa
popf
xor
outsl
int3
lea
or
lea
int3
fnstsw
fisubs
lods
sbb
pop
repnz
shlb
mov
sub
mov
push
or
leave
lcall
aas
fildll
pop
in
mov
std
pop
dec
je
sbb
sub
jmp
mov
dec
mov
xchg
xchg
pop
out
stos
pop
imul
adcl
jl
fldenv
or
jb
fdiv
inc
mov
mov
jns
lret
cmc
ret
loope
fldenv
rcrb
pusha
jmp
ljmp
lcall
xor
insl
lcall
fs
sahf
enter
stc
jl
xchg
dec
push
jb
dec
or
inc
sbb
inc
mov
mov
rorb
pop
adc
lret
xchg
pop
in
xlat
test
cmpsl
mov
mov
pop
fsubrl
cltd
pusha
leave
mov
ljmp
push
js
fnstcw
push
xor
push
xor
in
xchg
pop
stos
mov
xchg
jb
aam
loopne
mov
jp
sub
popf
lcall
pop
shll
fisttpl
xor
cmp
sarb
mov
dec
or
nop
out
jecxz
out
roll
add
push
inc
inc
cmpsb
mov
push
loop
enter
mov
popa
pop
pop
pop
pusha
es
xor
out
and
lcall
add
popa
mov
push
jge,pt
dec
mov
shll
xchg
stos
jno
inc
xchg
into
incl
das
std
ret
hlt
jo
loopne
pop
push
icebp
cs
loop
subl
or
sbb
mov
popf
in
mov
inc
sbb
shll
insb
cmpsb
loop
xor
pop
cmp
dec
pop
int
cli
mov
push
mov
pop
insb
fildl
xchg
ss
into
or
fwait
jl
xchg
movsl
addr16
in
jmp
add
or
test
shrb
xchg
cld
mov
xchg
adcb
pop
mov
lcall
and
xor
stos
cmp
lea
mov
xor
cwtl
insl
gs
dec
orl
mov
dec
mov
aad
jmp
js
push
cld
or
divl
xchg
pop
cmpb
pop
add
xor
icebp
fs
xor
roll
enter
jmp
pushf
popa
mov
mov
dec
filds
pop
pop
call
push
repz
sbb
or
inc
sub
add
or
add
lea
shll
hlt
fwait
push
push
sbb
add
xor
es
subl
lock
dec
mov
dec
in
mov
sub
loope
jo
xorb
sbb
orb
mov
push
loop
pop
mov
pusha
scas
adc
push
xchg
fisttps
mov
pop
mov
jecxz
cld
cmpsl
int3
push
test
dec
jo
mov
push
les
xor
cwtl
rclb
fists
sbb
add
loopne
sub
push
sahf
nop
rolb
or
in
cmp
inc
aad
or
out
loope
pop
iret
cmpsb
pop
jp
and
enter
mov
mov
push
into
sub
enter
sar
jecxz
addr16
mov
jge
cmp
ljmp
test
mov
mov
imul
mov
add
push
ret
fsubrl
in
xlat
inc
push
aas
adc
ret
pusha
scas
clc
fsts
pop
ror
sbb
inc
popa
mov
mov
push
fadds
addr16
ss
jae
and
in
mov
jbe
out
mov
xor
sub
mov
jns
inc
xchg
divl
pop
es
in
cmovl
int3
xchg
cmp
lods
xchg
je
insl
or
outsb
test
loop
test
add
sahf
push
cmpsl
or
jb
int3
outsl
xchg
xchg
xor
cmp
imul
sahf
test
ja
in
subb
dec
cli
in
push
nop
cmp
and
mov
mov
bound
sbb
jg
shrb
lcall
test
mov
shr
dec
sub
adc
push
iret
lcall
pusha
sub
add
pushf
mov
and
inc
push
mov
mov
data16
add
insb
adc
pop
mov
pop
imul
push
pop
cmovb
jecxz
mov
add
dec
sbb
std
scas
inc
stos
and
inc
jnp
mov
pop
movsb
adc
add
inc
inc
aad
sbb
div
popa
cmpsl
dec
std
out
test
jns
xchg
xlat
in
clc
inc
jne
das
aaa
mov
and
hlt
clc
cmpsl
test
sbb
gs
clc
mov
cmp
add
sbbl
sub
fcompl
shld
jo
ja
sub
mov
adc
pop
mov
mov
mov
mov
fisttps
pusha
repz
add
divb
dec
repz
and
stc
mov
test
mov
or
push
push
mov
cmpsb
inc
sbb
pusha
outsl
call
inc
iret
mov
xchg
jmp
lock
std
mov
mov
mov
mov
jb
jl
jecxz
xchg
mov
and
xor
lret
cmpb
ret
inc
push
and
dec
jns
ja
jbe
mov
mov
cli
js
mov
in
in
sahf
mov
xor
jne
add
add
xchg
lds
pop
in
test
mov
inc
stc
jne
daa
push
movsl
and
mov
and
cltd
test
adc
pop
insb
sub
or
mov
sbb
mov
lret
fstl
and
cmp
das
or
push
mov
loopne
xchg
cmp
mov
mov
xor
shl
xor
jmp
dec
fisubs
dec
dec
push
out
xchg
repz
sbb
inc
push
fwait
adc
clc
adc
pop
jle
adc
and
push
sti
loope
in
mov
mov
cmp
shll
pop
mov
cld
arpl
push
mov
add
push
ljmp
es
sahf
cmc
xchg
cmp
xchg
cltd
pop
enter
sub
push
or
daa
push
nop
div
jmp
mov
popa
aas
icebp
push
adc
je
mov
mov
jecxz
std
fwait
push
iret
mov
clc
test
push
aad
fstp
and
push
fcoml
test
xchg
les
lds
arpl
fsubl
add
lret
mov
pop
push
xchg
or
xchg
mov
push
xchg
fldl
pop
mov
fstps
pmullw
mov
leave
das
repnz
xchg
bound
outsl
adc
rclb
push
and
dec
ret
out
xchg
xchg
push
xor
and
inc
std
mov
add
sub
repnz
mov
adc
lock
fsubrs
inc
pop
sti
xchg
mov
adc
iret
addr16
lret
dec
loop
push
sub
call
pop
sbb
mov
mov
or
dec
mov
imul
push
fidivrl
cmp
inc
pop
add
enter
ret
sbb
std
or
int
clc
pop
dec
adc
adc
sbb
dec
jno
lcall
sahf
popa
out
mov
repnz
loopne
movb
lea
sbb
mov
pusha
call
xlat
or
add
sbb
mov
add
stos
xchg
cmpsl
ljmp
lock
fs
nop
sub
arpl
xchg
xor
lret
mov
imul
inc
mov
adc
add
xchg
lcall
cmp
scas
lret
loop
movlps
pop
ficompl
jg
test
hlt
aad
push
mov
call
sti
leave
in
inc
test
insl
loope
insl
int
outsb
int3
push
jns
clc
jg
push
lcall
xchg
push
sub
fdivs
insl
aas
stos
cmp
and
lret
orl
lods
divl
ja
fsubl
movsb
imull
into
ret
lods
mov
lret
push
lock
or
das
loope
in
sahf
or
aam
jns
cmp
pop
aam
outsb
pop
cmpsl
adc
sub
int3
cmc
adcb
into
xchg
push
adc
lds
jmp
pop
push
xor
arpl
enter
icebp
test
stos
inc
sub
xor
out
outsb
divb
mov
aaa
rolb
and
adc
adc
cmc
jo
xor
sbb
mov
push
dec
fcmovnb
xchg
cld
xor
roll
stos
je
inc
je
pop
shll
subl
inc
xorb
clc
ficompl
cmp
enter
xor
pop
es
dec
lcall
mov
fs
nop
mov
cmp
jae
xor
dec
ljmp
adc
cmp
test
out
jmp
or
or
adc
push
jge
icebp
or
aas
jne
or
push
adc
dec
inc
cmpsl
or
cli
mov
fnstsw
lret
and
mov
lock
pop
inc
nop
lock
dec
mov
mov
jmp
and
sub
js
add
jb
sub
in
ret
shrb
jbe
es
inc
cld
inc
test
mov
dec
sbb
pop
sti
adcb
jbe
hlt
mov
pop
mov
popa
loop
push
loopne
sub
cltd
and
cld
fs
rcrb
popf
ret
sarb
mov
or
xor
mov
adc
and
ret
ret
dec
pusha
cltd
ljmp
std
xlat
xlat
loope
mov
xor
outsl
sarl
aaa
cli
ljmp
ljmp
dec
out
xlat
xchg
lea
mov
xchg
push
adc
cmp
and
sbb
mov
pusha
jnp
les
xor
cltd
pop
ljmp
sbbl
enter
and
hlt
or
dec
and
xchg
sti
nop
mov
pop
xchg
iret
rcrl
test
push
loop
in
in
sub
addl
lcall
pop
lret
bound
outsb
sbb
add
xor
sbb
pop
popf
sub
movsb
int3
dec
mov
popl
sarl
jge
adc
jle
testl
mov
or
negb
jae
xor
add
dec
xor
repnz
xchg
pop
dec
jns
mov
cwtl
jns
mov
push
lret
cltd
and
mov
mov
imul
decb
ds
cli
cwtl
push
dec
daa
into
dec
lock
pop
fildl
mov
xchg
mov
jne
stos
cmp
enter
into
popf
dec
adc
js
cltd
ds
inc
xchg
stos
pop
jb
or
adc
inc
jg
jb
lock
arpl
pop
loop
inc
jne
xchg
cmp
dec
in
call
stc
mov
push
mov
fcmovu
or
fildll
jnp
mov
sub
push
test
pop
imul
push
mov
scas
dec
cmpsb
and
test
mov
cmp
int3
push
xor
mov
adcl
dec
lret
xchg
jno
mov
mov
mov
daa
movsb
fdivl
shlb
push
push
adcb
scas
pop
sub
jns
test
pop
gs
hlt
or
cmp
aaa
nop
pushf
cmp
push
cmp
mov
aam
and
sbb
jae
or
push
inc
push
je
xor
shll
addb
jb
fisttpll
mov
or
dec
push
lock
jmp
out
push
sahf
in
aas
lock
cmc
sbb
add
xor
push
or
repz
negb
add
popa
mov
fildll
mov
jl
xchg
cmpsl
and
sub
or
in
outsb
in
xchg
insb
jge
push
lcall
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
jmp
cmp
sub
jae
xor
adc
clc
adc
adc
sub
xchg
jae
sbb
pop
mov
sub
adc
mov
add
inc
nop
mov
repnz
add
pop
gs
adc
js
sbb
ds
lret
aam
cwtl
jae
xchg
pop
pop
es
inc
into
jmp
jg
sub
xchg
inc
jbe
mov
dec
jle
push
aam
mov
es
mov
fcomps
mov
sbb
and
jmp
jnp
jp
scas
fisttpll
add
push
in
cltd
jnp
cmpl
mov
lods
test
sar
rolb
xor
mov
call
enter
cmpsb
inc
loop
inc
add
rorb
xlat
ficoml
iret
mov
xchg
pop
cmp
icebp
std
jg
cs
inc
xor
fcoml
dec
push
push
mov
sub
xchg
sub
in
push
or
jae
leave
scas
mov
pop
push
icebp
push
outsb
das
xor
subb
dec
xchg
push
inc
hlt
rolb
mov
xchg
inc
dec
ds
adc
das
fstpt
cmp
sbb
lock
ficoms
xor
adc
jne
lods
pop
in
adc
push
andl
xor
aaa
pushf
loope
stc
jno
loop
and
arpl
sub
imull
mov
idivb
sub
and
in
jp
andb
pop
out
popf
add
sti
stos
add
sub
shr
test
jge
lds
sbb
or
pushw
cli
cltd
sub
push
insl
cli
sti
and
xchg
cmp
mov
mov
js
jg
pushf
add
pavgw
outsb
ds
pop
adc
adc
stc
xor
pop
je
push
pop
cmp
int
and
js
xchg
mov
xchg
iret
loopne
popf
cmp
in
inc
sbb
pop
cmp
push
addr16
rcll
sbb
lahf
push
arpl
mov
sub
loope
dec
je
mov
dec
ja
daa
out
loop
loop
mov
call
and
insl
inc
mov
fwait
lcall
frstor
cmc
cmpsl
jae
jmp
xchg
sar
sbb
inc
shrb
xor
outsb
aas
rcrl
pop
jp
jae
aas
xor
clc
inc
clc
mov
pushf
or
push
imul
loopne
fcmovnbe
add
scas
push
cmp
and
loop
jbe
out
jne
add
dec
cmp
mov
push
test
add
sbb
movsl
loope
xor
ljmp
cmp
popf
insb
fcmovb
fwait
add
mov
out
mov
ret
lods
sub
mulb
mov
cwtl
int
mov
lcall
cmp
push
scas
jnp
je
and
xchg
mov
insb
mov
xchg
inc
popa
mov
adc
jno
push
pop
adc
cli
shrl
leave
dec
aam
mov
add
pop
pushl
mov
mov
pop
mov
out
push
outsl
in
shrb
je
mov
lds
cmp
sahf
sub
pop
xor
jecxz
push
jl
mov
fisttpll
mov
lock
pop
popf
jmp
push
nop
inc
ds
cmp
popa
xor
fisubrl
roll
push
mov
jb
test
pushfw
fmull
xor
dec
add
ret
dec
cmp
sbb
mov
leave
and
outsb
hlt
movsl
sahf
jnp
mov
lods
daa
dec
pop
jge
jle
lret
sahf
and
cmp
xchg
push
sub
popf
stc
pushf
lcall
dec
rcrb
dec
cli
mov
cmp
sub
push
cli
pop
sti
mov
xchg
or
loop
hlt
lea
in
movsl
and
cmp
pushf
xchg
sbb
imul
or
in
fs
aad
test
inc
cmp
xchg
pop
punpcklbw
leave
int3
es
xchg
mov
mov
pop
and
loopne
mov
cmp
push
mov
pop
or
mov
enter
movsl
clc
xchg
xchg
imul
cmp
add
adc
sti
popf
fldt
in
and
push
sbb
jno
fadds
xchg
push
pop
call
cmpsl
insl
push
mov
out
fisubrs
aas
pop
mov
fisttps
lock
test
sub
xchg
iret
mov
nop
xchg
gs
sub
add
ret
out
xchg
or
int3
mov
pop
scas
arpl
sub
leave
pop
xor
dec
jns
push
fsubs
cmc
hlt
scas
push
mov
add
mov
imul
mov
ljmp
nop
call
pusha
push
pop
je
cmpsb
adc
repz
push
insb
mov
or
sub
outsl
lahf
stos
addr16
rcll
mov
mov
sub
mov
data16
push
push
sbb
int3
dec
mov
andl
sub
sbb
xchg
push
iret
xchg
pop
dec
pop
jle
or
pop
push
mov
aam
lds
xchg
loopne
icebp
cli
xor
in
push
fwait
lret
and
jmp
pop
cmp
mov
xlat
mov
jp
mov
leave
sub
xchg
cmc
imul
push
jl
adc
xchg
test
arpl
fldenv
and
pop
xlat
mov
xor
dec
dec
mov
call
inc
fistps
arpl
popa
fwait
hlt
aaa
push
xor
ljmp
pop
loopne
test
xor
pop
dec
and
mov
sbb
in
das
popf
mov
cmp
scas
xor
out
sub
lods
lret
in
xchg
cwtl
js
jle
jno
jnp
test
adcl
jbe
push
pop
dec
cwtl
cli
jl
in
dec
repz
sbb
mov
xchg
pop
and
aaa
repnz
or
jge
jmp
jg
xchg
sahf
pop
and
mov
in
mov
outsb
fcompl
ss
adc
hlt
push
cmp
xchg
pop
ficomps
inc
pop
pop
and
jb
sub
or
shr
mov
mov
or
mov
mov
push
pushl
push
jmp
jmp
or
aam
mov
xor
push
clc
adc
inc
push
loopne
xchg
add
clc
adc
push
mov
dec
jo
aam
and
jl
mov
outsl
testl
inc
sbb
xchg
idivb
cli
lret
fwait
jl
or
xchg
sub
shl
inc
fucomip
hlt
out
into
mov
fistl
cld
and
ja
mov
aad
or
test
and
pop
out
cmpsb
ljmp
fs
and
or
negl
pop
jg
jp
push
jl
ret
xor
push
push
loope
lds
pop
xor
daa
ret
fs
sarl
mov
fimuls
mov
xor
adc
loop
cld
ljmp
mov
add
fisubs
jg
pop
out
mov
xchg
push
mov
mov
mov
fistpll
dec
jne
mov
jns
push
rclb
hlt
sbb
jbe
sbb
push
sbb
outsb
cmp
sar
into
loopne
ss
test
shll
ret
sahf
pop
dec
outsb
repnz
jge
nop
xchg
push
fisubs
sbb
xorl
push
mov
sub
sub
in
shr
mov
inc
sub
rolb
scas
or
mov
lds
andb
pop
stc
or
les
test
in
fildll
pushf
dec
je
imul
test
cld
xor
inc
mov
pop
cltd
cli
sub
rcl
push
cmp
loope
add
divl
adc
and
shrl
jle
in
jp
repz
pop
fcomip
cmp
cmp
shrl
repz
test
stc
mov
in
add
ljmp
shrl
push
pop
mov
adc
mov
insb
mov
or
lret
xor
enter
cld
xchg
or
out
xor
push
insl
je
shlb
imul
sub
cmpsl
lahf
inc
cs
cmc
cwtl
repz
cltd
cmpsl
lock
mov
mov
hlt
loop
jecxz
pushf
pop
dec
je
sar
pop
lret
mov
cmc
repz
jmp
mov
clc
xor
mov
dec
jae
iret
jns
dec
gs
sbbl
rol
add
jnp
rorb
hlt
pop
push
stos
inc
out
mov
das
pop
aas
out
leave
inc
rsqrtps
cli
sbb
loop
sub
sub
fldt
mov
mov
sti
jmp
cld
xchg
cmp
in
pop
in
or
movsl
movsl
pop
insb
in
mov
cmp
out
sahf
mov
mov
aad
sub
test
push
xchg
inc
mov
jmp
stos
outsb
add
cmp
mov
or
mov
mov
outsl
cmp
push
mov
cli
cmp
ds
shll
add
mov
aas
test
xchg
sti
cmpsb
mov
dec
cld
in
sbb
imulb
xchg
mov
mov
out
pusha
mov
es
mov
xchg
mov
push
and
mov
je
lock
ret
lcall
icebp
jl
sbb
cmp
jne
fiadds
addb
xchg
jecxz
orb
or
mov
inc
popf
or
jo
pop
adc
loope
and
jmp
push
out
sti
jns
cmp
stos
outsb
adc
xor
loop
int3
aam
out
mov
test
jle
scas
pop
rorb
jb
jmp
pop
xor
mov
mov
push
inc
ficoms
push
mov
jae
fucomip
xchg
mov
sub
sub
clc
hlt
xchg
sub
es
data16
adc
out
cld
push
test
pop
lds
jp
inc
dec
pop
outsl
jp
fisttpl
iret
add
mov
fcmove
adcl
cmpsb
cmp
sbb
out
ja
and
imul
mov
inc
xor
pop
sbb
push
xorb
jle
out
xchg
cmp
hlt
inc
sbb
rcl
scas
dec
mov
in
call
lret
fldl
push
daa
out
jl
or
push
enter
js
mov
mov
mov
adc
movsl
jge
scas
dec
mov
push
sub
stos
enter
push
sub
and
dec
add
jl
lods
cmp
mov
dec
mov
sbb
out
sub
mov
xor
or
roll
push
mov
in
stos
pop
fnstcw
test
adc
shrb
cmpsl
jnp
mov
outsl
cld
mov
cmpl
mov
sub
cmp
cwtl
data16
loopne
mov
repnz
enter
rcrl
repnz
dec
sti
daa
sub
test
inc
dec
lahf
or
fwait
sbbb
sbb
xchg
adc
cwtl
std
mov
xchg
leave
rol
adc
mov
ljmp
jl
jno
bound
pushf
xchg
cmp
sub
je
insl
mov
pop
in
inc
test
rclb
icebp
fdiv
add
pop
fidivl
jns
rcrb
je
inc
mov
or
scas
les
xchg
sbb
and
push
sbb
ja
aad
pop
aad
fnstsw
inc
pop
push
shll
xor
out
xor
fcoms
loopne
frstor
xchg
and
rcrl
push
pop
xchg
mov
outsb
and
and
adc
fdivrl
add
imul
divb
dec
out
push
pop
in
or
jnp
xchg
out
xchg
lods
paddusw
gs
mov
dec
or
mov
imul
xchg
stos
insl
jae
sbb
add
pop
xchg
test
cs
hlt
mov
pop
out
divb
mov
xchg
pop
dec
mov
roll
or
cmp
addr16
and
pop
mov
decl
mov
fisttpl
dec
mov
adc
jno
and
enter
lret
lods
or
mov
mov
int
jle
sti
mov
mov
insb
nop
in
inc
add
imul
jle
xchg
push
shl
mov
repz
test
scas
jg
or
xor
inc
xchg
xor
loope
sbb
inc
ss
lds
cld
push
add
or
in
enter
imul
add
adc
clc
adc
mov
mov
stos
pop
inc
inc
pusha
fwait
jne
pop
rorb
jp
jbe
adc
jae
inc
je
outsb
jae
xchg
movsb
sub
sub
sbb
xor
leave
std
in
xchg
pop
popa
add
pop
test
sub
ss
and
push
lret
enter
out
test
iret
push
mov
les
xchg
cmp
add
lahf
xchg
push
lock
insb
idivb
xor
mov
je
cmp
push
jo
sbb
icebp
mov
add
xchg
jnp
mov
inc
xor
mov
jb
xor
jmp
push
iret
and
cmp
cmp
cmp
outsb
mov
pop
leave
xor
lcall
js
jg
inc
mov
daa
push
fiadds
repz
cmp
pop
xchg
mov
popa
int3
subb
repnz
inc
leave
pop
sub
sbb
dec
jns
adc
imul
dec
lods
gs
mov
lods
into
bswap
fidivrs
xor
inc
fwait
jo
inc
sub
lcall
fidivrs
rorl
ss
out
mov
es
inc
mov
sahf
mov
pushf
xchg
xor
push
mov
fcomps
pextrw
adc
dec
les
ja
fcoml
adc
ret
pop
push
jg
xchg
mov
repz
mov
cmpsl
shlb
hlt
ficoms
pop
leave
dec
xchg
cmpsl
mov
cmp
pop
out
sarl
push
and
inc
cltd
sbb
nop
mov
test
jmp
mov
mov
dec
inc
aas
subl
mov
repz
test
out
mov
test
out
popf
mov
jecxz
fisttps
xlat
test
std
pop
outsb
add
cmpsl
popf
loop
mov
cmpsb
jae
fcomp
sbb
adc
xchg
into
cmc
lcall
scas
out
pop
sbb
in
adc
std
or
push
adc
in
mov
fdivrl
mov
adc
pushf
stos
xor
cmp
and
in
mov
jnp
inc
aam
jl
xchg
xor
mov
mov
adcl
lahf
loopne
sbb
ss
pop
sti
xor
cwtl
nop
push
xlat
dec
and
cli
pushf
pmulhw
dec
aas
and
stc
dec
icebp
pop
hlt
sbb
xor
stos
mov
mov
outsl
jmp
cmp
imul
mov
push
push
lcall
inc
sbb
or
mov
push
cwtl
pop
addr16
pop
xchg
test
mov
aas
out
scas
loope
je
aam
mov
arpl
pushf
cmpb
or
ljmp
sbbb
popf
mov
pop
outsl
lds
sub
jne
data16
xchg
mov
adc
insb
pop
fcomps
push
xchg
jno
and
sub
loope
scas
cli
fistps
imul
repz
hlt
fisttps
ds
push
fs
fildl
pop
add
mov
jle
and
xor
pop
lret
daa
or
cli
and
fwait
testl
or
insb
cmpsl
ljmp
shr
push
mov
mov
idivl
or
outsb
fcoms
push
mov
xor
and
movsb
pop
jbe
ror
scas
ret
aaa
stos
mov
outsl
xchg
addr16
mov
insl
mov
repz
or
ror
sbb
mov
mov
inc
lock
and
rclb
mov
test
cmp
push
push
jo
leave
in
int
and
dec
test
jae
cmp
fnstsw
mov
mov
mov
or
adc
call
adc
xor
pop
icebp
imul
push
adc
ja
rclb
stos
xor
sahf
mov
jbe
push
xor
stos
dec
mov
xlat
mov
xchg
fbstp
icebp
xchg
pop
sub
cmpsl
xchg
push
jg
cwtl
scas
insb
jo
sarl
jae
dec
jge
imul
outsb
aam
and
aas
jle
sub
cmp
call
and
pop
cmp
out
ljmp
popa
fs
mov
std
test
mov
paddusw
or
dec
lods
mov
fldcw
shlb
fwait
jge
add
ss
gs
cli
bound
into
push
leave
add
inc
push
pop
adc
xor
pop
mov
xchg
stos
xchg
mov
xchg
cmp
clc
jae
add
mov
xchg
fistpll
pusha
sub
imul
mov
lcall
sub
sub
shrl
mov
sahf
jg
jecxz
push
jne
pop
push
cli
sub
cmp
cmp
das
orl
insb
stc
adc
mov
inc
sub
pop
pushf
inc
lock
enter
nop
pop
in
dec
cmp
sbb
pop
dec
fstl
int3
dec
fcompl
or
cld
ret
jo
jne
mov
into
sbb
sbb
imul
ds
mov
popf
xor
or
ss
sbb
sub
and
jp
sahf
and
xchg
jp
push
inc
cmc
mov
cmp
and
cld
or
fsubl
lea
inc
push
inc
add
addr16
aam
movsl
mov
cmpsb
dec
jle
xchg
pop
mov
ret
pop
fs
mov
add
aad
xor
jbe
fbstp
movsl
mov
popf
pop
pop
loope
push
jmp
sub
sub
sbb
jecxz
jmp
lds
scas
les
mov
jl
ljmp
inc
push
jp
out
cmp
and
push
xchg
and
cmp
jno
pop
jo
inc
cmp
push
sbb
add
sbbl
inc
inc
adc
add
sbb
push
inc
in
add
or
in
jns
mov
and
dec
xchg
lret
cs
xchg
test
jg
pop
push
push
mov
sub
sbb
add
jmp
in
cmc
dec
stos
dec
sub
add
dec
hlt
push
jne
adc
clc
adc
adc
jbe
jae
add
jns
xchg
lods
push
lods
rcrl
loopne
jne
fs
pop
das
sub
arpl
mov
inc
or
test
xchg
fsubs
sub
adc
adcb
pop
in
sub
cs
mov
xchg
shr
into
lea
cwtl
pop
cmp
ror
popf
imul
in
dec
divb
mov
pushf
lods
sub
mov
aam
ficomps
sbb
push
add
pop
adc
pop
xor
jo
or
mov
repnz
lock
pop
cmp
jle
cmp
stos
jge
stos
call
pusha
pop
mov
pop
xchg
cld
add
cmp
aad
faddp
and
out
xlat
mov
notl
xchg
fdivp
test
dec
dec
or
insl
aam
es
insl
cmp
mov
inc
iret
adc
mov
or
jmp
or
push
test
inc
pop
push
clc
loopne
out
jp
or
push
pop
lds
dec
loope
lahf
sub
mov
add
and
dec
xchg
sbb
fistl
cwtl
testb
pushf
or
xchg
cmc
stos
mov
filds
pop
fcmovnb
loopne
inc
pop
mov
mov
cmc
icebp
xchg
rol
imul
scas
mov
or
push
sbb
rcll
mov
enter
daa
mov
sbb
add
mov
icebp
roll
xor
fcompl
push
cmp
xchg
insb
pop
pop
add
mov
ja
add
xor
jno
sbb
cmp
jecxz
jmp
push
pusha
stos
fldl2t
jge
mov
addr16
or
fisubrs
nop
lea
mov
pop
add
dec
inc
out
bound
movb
imul
mov
jg
dec
cmpsb
inc
and
sbb
mov
jge
arpl
inc
sahf
adcl
push
or
xchg
add
pop
xchg
mov
int
test
test
xor
fwait
dec
fnstenv
adc
cmp
es
arpl
out
jmp
xchg
mov
out
inc
dec
jb
push
mov
mov
add
push
inc
jl
std
sti
fiadds
loop
inc
jle
test
adc
sub
ret
push
out
jo
pop
push
sbb
mov
xor
test
pop
cmc
cmp
lods
push
mov
xchg
jmp
in
fcomps
jbe
add
dec
out
repnz
adc
adc
inc
mov
imul
jle
movsb
xchg
mov
jp
push
cs
sbb
xchg
movb
and
mov
jge
ljmp
add
mov
cwtl
mov
pop
sti
adc
insb
mov
pushl
js
stos
mov
and
jp
sbb
mov
es
sbb
jge
jo
dec
fdivrl
adc
mov
inc
or
lds
pop
or
js
fstl
fidivrs
push
or
leave
insl
mov
mov
push
dec
push
das
or
xchg
sbb
test
es
js
xchg
popw
div
packssdw
in
inc
mov
mov
mov
cmp
sti
aam
inc
faddl
jo
fidivs
bound
jnp
jae
stos
pop
jg
or
ret
jg
ficoms
repz
or
lods
dec
data16
sub
inc
jne
shlb
adc
aad
mov
idiv
popa
lret
outsl
ret
leave
cmpsl
inc
aad
push
sbb
fistpll
push
pextrw
cmp
sub
mov
or
das
leave
adc
cwtl
test
dec
push
test
adc
push
cwtl
loop
scas
out
push
movsl
loop
ficoms
xchg
fcoml
scas
and
lret
mov
sub
mov
in
rorb
adc
dec
fstps
mov
jns
mov
test
jecxz
pop
gs
hlt
mov
cs
in
mov
dec
xchg
or
sbbb
xchg
lcall
in
adc
pop
adcb
sub
jecxz
push
or
mov
or
gs
stos
dec
xor
call
inc
enter
ret
int
mov
jg
add
jnp
call
jecxz
imul
xor
pop
mov
dec
jg
cs
xchg
inc
nop
and
dec
subb
mov
xchg
in
pop
movsl
or
xchg
sbb
push
and
sub
sub
dec
mov
leave
ja
pop
outsl
fwait
pop
cmpb
adc
push
movl
sbb
out
int
push
cld
mov
or
xchg
fwait
push
lea
mov
mov
or
xor
outsl
xor
jle
cmpsl
cmpsb
mov
jbe
in
xor
sub
fmull
leave
or
sub
pop
jmp
js
add
sub
push
pop
jns
dec
int
mov
cmc
and
xchg
sub
mov
gs
popa
daa
sahf
fbstp
stos
fdivl
clc
xchg
pop
push
xor
jbe
lods
adc
sbb
lret
jne
rcr
xchg
nop
insl
mov
pop
int
pushf
leave
stc
mov
jmp
in
mov
mov
sbb
add
mov
daa
orb
mov
xor
and
fwait
mov
sti
mov
in
out
mov
xchg
push
mov
ret
aas
pop
cmp
dec
adc
xchg
pusha
jmp
push
sub
test
popa
xor
adc
add
scas
out
out
adc
add
test
lahf
add
add
push
push
ljmp
xor
stos
jno
icebp
lcall
and
jecxz
sti
loop
rolb
test
shl
sbb
fcoml
mov
pop
inc
mov
xchg
xor
push
fs
jbe
cmovae
or
mov
push
push
repnz
call
icebp
lcall
push
inc
fnstenv
jge
rclb
mov
shrd
jmp
sbbb
pop
mov
pusha
push
push
out
cmp
add
adc
push
clc
adc
lods
je
sti
jmp
or
mov
sbb
pusha
mov
out
loop
sub
cmc
mov
and
mov
add
lea
adc
mov
rclb
mov
out
aad
ret
sub
addr16
arpl
push
into
mov
lea
aaa
inc
push
sub
cli
push
iret
dec
inc
sub
mov
fwait
xor
aam
xchg
and
sbb
adc
subl
popa
mov
dec
pop
add
add
std
stc
ljmp
push
fiaddl
push
ss
sbbl
mov
and
adc
pop
push
cld
push
pushf
shr
mov
xchg
pop
sbb
xchg
into
imul
test
pushf
cmp
push
mov
pop
xor
adc
jmp
jle
mov
cmp
xchg
test
ds
sub
pushf
lock
jl
and
test
je
sbb
inc
fisttpl
pop
ljmp
and
into
xchg
mov
push
cli
xchg
sub
adc
sbb
dec
es
mov
pop
repz
push
mov
mov
mov
dec
dec
xor
mov
dec
inc
inc
dec
popf
pop
add
pop
sbb
fsubl
xchg
dec
sub
loopne
and
cmp
cli
xchg
push
testl
and
jns
pusha
pop
xor
jnp
jle
cmpsl
lds
add
rcll
mov
je
ret
cmp
stos
pop
sub
dec
fstpl
in
or
outsl
dec
push
shr
les
enter
push
das
pop
out
sub
adc
inc
inc
repz
cld
push
test
mov
adc
sbb
add
adc
and
and
pop
int
jns
dec
xchg
test
cli
cs
test
lods
and
hlt
nop
mov
pusha
jne
test
dec
xor
jo
lds
sbb
jae
popf
lcall
inc
in
add
movsl
cmp
xor
dec
aas
and
mov
mov
adc
jnp
jne
sbb
mov
pop
shll
jmp
xchg
or
sub
mov
adc
sub
xchg
pop
psrld
sbb
out
push
int3
imul
ljmp
scas
fisttps
sub
sub
pop
and
mov
sbb
pinsrw
adc
xor
xchg
inc
sti
jne
mov
lahf
dec
adc
sub
adc
stos
movsl
test
hlt
insb
scas
cmp
adc
ja
cmp
mov
mov
aas
insl
shrb
dec
xchg
js
icebp
in
dec
push
mov
mov
inc
js
lods
bound
push
mov
xchg
in
in
int3
xchg
sub
jle
je
mov
ljmp
cmp
cld
js
nop
jne
andl
lea
sub
pop
enter
dec
test
test
push
mov
stc
jb
gs
test
stc
sub
mov
push
mov
fs
sbb
pop
sub
xchg
pop
and
outsb
int
mov
ss
imulb
out
fisubs
testl
rcl
sti
movl
cltd
test
inc
mov
sub
cmpsb
mov
adc
es
xchg
in
push
xchg
xchg
cmp
fst
shrb
sbb
sbb
leave
xor
out
roll
mov
or
sub
fisttps
lock
push
decl
pop
das
out
sub
push
lahf
mov
or
push
xlat
xchg
pop
cmp
addr16
or
lock
and
addr16
loope
in
inc
xchg
add
fisttpll
in
adc
lret
mov
aas
cmp
sbb
jo
push
xor
test
jl
sub
enter
gs
gs
adc
in
push
js
dec
inc
fimuls
lahf
xchg
pop
mov
jno
mov
xchg
adc
mov
mov
or
xchg
adc
xchg
lret
inc
dec
mov
aam
push
or
repnz
outsb
mov
adc
popa
test
dec
cmc
mov
dec
insb
push
repz
pop
ss
dec
call
loop
sub
rcr
in
bound
je
rcrb
mov
push
dec
orb
xchg
jnp
mov
jle
or
xchg
mov
repnz
mov
clc
cmc
pop
mov
mov
sti
push
stc
test
orl
arpl
and
mov
push
shrl
mov
adc
adc
inc
fdivrl
bound
nop
xchg
lods
ss
sbb
xchg
push
or
inc
ffreep
sub
cmc
pop
ret
add
icebp
mov
dec
and
push
sub
loope
fisubrs
repnz
sbb
jecxz
jecxz
sahf
lret
sbb
jne
mov
add
fiadds
aam
xor
loope
popa
shl
ja
testb
imul
gs
xor
lods
xchg
outsl
and
pop
cmc
out
sbb
lods
icebp
inc
mov
orl
inc
xchg
sbb
test
jp
jmp
mov
pop
fs
icebp
and
cmp
or
push
in
ficompl
mov
xor
sti
out
inc
mov
out
cmpsb
jo
xchg
das
shl
mov
gs
sbb
fldl
mov
push
dec
call
leave
addr16
or
in
stc
inc
dec
rol
lcall
mov
inc
btr
sbb
mov
test
arpl
por
rcll
insb
in
mov
or
fwait
test
sub
add
cmp
jmp
lock
das
dec
fnstsw
ds
insl
sbb
out
and
cmp
mov
lods
ret
fstl
sbb
and
push
fldenv
xchg
push
and
idiv
pop
adc
fcmovnu
nop
jg
jbe
pushf
gs
cmc
ret
jb
cltd
jnp
lock
push
rcll
daa
loopne
stc
mov
jge
mov
jge
stos
shr
shr
xor
push
xor
jmp
mov
push
push
push
mov
mov
adc
clc
adc
mov
inc
add
cmpsl
or
mov
hlt
xchg
cltd
push
mov
add
add
cmp
inc
js
inc
add
or
xor
loop
mov
fists
sub
ja
jp
and
mov
adc
rcr
inc
jnp
add
lret
add
add
xchg
or
and
popa
xorl
or
pop
push
aad
pop
sub
and
or
or
ret
push
sub
add
mov
dec
and
or
xchg
jne
pop
add
cltd
sti
clc
loope
loopne
popf
inc
xlat
push
jns
and
rcrl
adc
xchg
fldl
dec
cli
pushf
sbb
adcb
sbb
jo
cmp
xchg
dec
inc
rclb
add
test
mov
scas
or
mov
jbe
pusha
adc
cs
mov
cmp
push
pop
and
aam
inc
jb
cmp
flds
adc
out
push
lods
in
dec
inc
scas
in
or
bound
xor
pusha
roll
mov
imul
or
fucomi
pop
std
popf
mov
pop
rorb
xchg
stos
jno
scas
mov
mov
repz
lahf
cltd
jle
outsl
mov
or
enter
xchg
dec
out
ds
idivb
push
sbb
ja
pop
or
test
cli
push
pusha
lahf
dec
and
push
dec
sub
notrack
mov
outsb
int3
insb
or
lock
add
in
dec
dec
out
dec
xchg
adc
std
test
mov
push
mov
icebp
lea
divl
ds
dec
stc
out
xchg
lahf
jae
mov
mov
sub
sbb
dec
and
sbb
pop
push
addb
daa
mov
jbe
mov
gs
add
sbb
cmp
arpl
add
sbb
pop
out
sub
cltd
inc
sbb
test
jae
cmp
push
add
cmpsb
sbb
cmp
mov
or
inc
xchg
stos
insl
inc
addl
or
xor
outsb
lret
inc
xlat
popf
sub
imulb
arpl
push
mov
inc
push
mov
scas
xchg
xlat
mov
js
das
inc
adc
xlat
lock
mov
xchg
xor
push
mov
pop
cltd
jl
xor
ret
pop
das
push
test
mov
into
lds
lret
addl
orb
insb
inc
roll
rcrb
movb
fsubrs
mov
iret
mov
push
add
aad
and
and
outsb
pop
int
hlt
test
sahf
imul
fists
lods
movsb
xchg
fidivrl
sbb
mov
or
push
mov
sbbb
adc
cltd
mov
cli
xorb
push
call
pop
or
aaa
out
mov
cld
dec
cld
cwtl
mull
sub
or
cmp
add
cli
jg
mov
mov
ja
fadd
cld
popa
lcall
or
fldenv
or
sub
rorl
aas
ficoms
xor
popf
push
ffree
xchg
sub
add
or
pop
lods
add
pop
jg
lcall
imul
clc
popf
cmpsl
js
jns
xchg
shrl
adc
pop
jnp
push
das
fmuls
and
or
or
xchg
jge
aaa
jl
shlb
stc
jg
mov
test
adcb
stc
or
xor
test
movsl
lds
jmp
das
test
mov
dec
or
cmp
push
mov
jno
mov
filds
mov
pop
bound
pop
rorb
jb
pop
inc
push
xor
clc
lea
mov
shl
jecxz
xor
and
icebp
pushf
movsl
test
and
lcall
data16
out
lret
pop
lea
or
sub
inc
movsb
imul
insl
add
push
outsb
les
jle
push
cmp
pop
ret
xor
pop
mov
orb
or
lds
pop
loopne
jg
call
xor
jge
je
jg
cmpsb
out
xchg
add
imul
imul
push
fwait
loope
pop
outsb
inc
cmp
enter
mov
and
js
cmp
test
ret
leave
hlt
inc
into
cmpsb
jmp
add
lds
rolb
ss
or
xor
sub
femms
js
ss
cmp
jg
mov
sbb
add
icebp
out
filds
xchg
add
xchg
loopne
sub
jae
mov
pop
inc
cli
out
adc
rcrb
stos
cltd
pop
ja
cli
xchg
cmp
jb
insl
add
lods
flds
cmp
sub
jmp
and
sub
lods
pop
cmp
push
testb
movsl
fstl
repz
mov
leave
shrb
mov
nop
mov
pop
shrb
adc
cmp
add
push
bound
xor
push
add
gs
call
into
adc
int3
or
in
nop
fidivrl
sub
popf
imul
dec
add
pop
into
mov
pop
in
cmp
js
in
les
sahf
daa
enter
jge
mov
jg
adc
faddl
rcrb
loop
bound
ja
clc
cmc
pop
jp
add
mov
mov
je
mov
push
cs
test
cmp
add
jmp
dec
lret
adc
push
int3
nop
push
xchg
js
in
sbb
add
sarl
mov
fcomps
call
sbb
in
mov
and
xchg
jle
cmpsl
loopne
out
out
loop
not
sub
cmpsl
pop
out
iret
dec
push
ret
lock
cmp
adc
popf
push
xchg
addl
adc
dec
test
add
xchg
cmp
movsl
mov
ja
pop
sti
xor
jle
pop
addb
cmc
jl
testl
mov
mov
push
push
push
call
shld
shl
mov
jmp
push
hlt
jmp
push
or
movb
hlt
dec
sbb
push
clc
adc
or
cli
add
clc
jg
stos
sbb
add
dec
sub
jns
mov
push
jecxz
xor
inc
mov
sub
jle
mov
enter
insl
mov
mov
test
push
outsb
adc
mov
jmp
dec
push
insl
ja
cmpsl
cmp
out
das
int
fmull
xor
hlt
dec
sub
mov
imul
adc
xchg
xchg
mov
fdiv
lahf
push
cmp
adc
dec
mov
movl
sub
scas
je
sub
mov
push
gs
dec
jno
jle
punpcklwd
iret
mov
bound
xchg
rorb
fsubl
enter
adc
iret
iret
arpl
push
push
jb
mulb
and
pop
sbb
fs
mov
sbb
testl
inc
dec
sub
int3
jge
sbb
mov
mov
in
pop
inc
js
lea
lahf
xchg
cmpsb
in
jb
sub
sub
or
add
xor
mov
imul
lods
stc
fiaddl
push
int
dec
addr16
sub
dec
fistpll
mov
stos
dec
pop
cmpsb
xchg
push
lock
and
and
out
test
cmp
data16
inc
jmp
push
jp
and
and
mov
daa
enter
stos
add
sub
rcrl
es
stc
mov
push
adc
orl
dec
jmp
ret
mov
adc
mov
inc
test
jnp
sub
mov
xor
mov
enter
xchg
test
or
into
pop
add
xor
imul
jge
or
cli
nop
jle
imull
enter
pop
hlt
push
inc
cmc
insl
into
xchg
sub
clc
loope
hlt
outsb
in
jno
pop
lods
test
sti
cmpl
mov
pop
stos
test
dec
inc
adc
cltd
mov
jp
pop
jmp
mov
adcl
dec
shll
jecxz
dec
xchg
mov
jmp
cwtl
fsubrs
jo
mov
loope
jmp
add
push
rcll
std
xchg
and
push
xchg
outsb
add
jo
push
sub
popa
repz
jp
in
mov
jns
pushf
cli
insb
push
push
test
add
jle
mov
stos
imul
jmp
mov
and
mov
addr16
stos
sub
sti
pop
push
enter
insl
mov
xor
ja
fdivrs
arpl
in
inc
cmp
fwait
mov
jmp
inc
inc
cmc
stos
out
clc
in
push
adc
pop
inc
pusha
popf
call
cmp
shrb
movsb
xchg
add
int
xor
push
sub
bound
les
outsb
mov
jmp
xchg
inc
add
scas
jmp
std
sbb
icebp
and
les
jae
jecxz
rorb
inc
push
imul
js
dec
andl
sbb
push
cmp
jle
xchg
add
mov
cmpsl
mov
cltd
and
mov
into
imul
adc
es
jo
mov
or
and
stos
jne
fucomip
scas
jmp
add
addr16
jbe
jp
xchg
inc
ret
aad
jp
movsl
addb
push
popf
dec
or
lds
jge
addb
lods
stc
add
jns
imul
inc
iret
bswap
leave
jmp
roll
mov
sbb
cltd
pop
jne
lods
add
shll
das
jbe
mov
js
inc
aam
out
imul
inc
test
sub
enter
inc
clc
or
xlat
imul
notb
fldt
adc
xor
inc
rcll
mov
mov
add
stc
adc
jmp
insb
adc
mov
popf
push
mov
ficompl
ds
int3
adc
mov
sub
out
lds
insl
mov
cmp
mov
cltd
mov
outsb
pop
xor
mov
mov
sub
loope
cmp
mov
notb
mov
in
dec
dec
pop
test
cs
mov
outsb
lea
xchg
inc
pop
inc
cmp
xor
cmc
mov
in
push
xchg
sub
pop
xchg
or
inc
std
jmp
stos
lcall
sar
das
sub
fs
inc
repz
lea
pop
cmp
mov
sbb
cmp
inc
sti
mov
addr16
xor
imulb
cwtl
jmp
fistpll
dec
outsb
add
dec
js
pop
and
xlat
addb
sbb
fiaddl
pop
jno
mov
mov
je
mov
jo
out
int
in
add
daa
adc
repnz
imull
out
hlt
clc
std
or
mov
or
leave
mov
inc
dec
fstl
and
or
int3
ljmp
mov
push
bound
push
dec
mov
mov
into
daa
faddl
push
into
pop
aam
imulb
adc
mov
ret
fdivrl
push
aam
fwait
pop
shl
push
xor
sti
mov
or
aam
cmpb
popf
testl
lea
mov
sbb
iret
jns
lods
lcall
cmp
mov
push
push
xchg
cmp
mov
push
pop
fsts
out
lock
cltd
mov
fwait
insl
imul
aad
mov
addb
popa
test
and
inc
cld
pop
filds
push
jno
mov
adc
into
inc
mov
mov
shll
push
sub
pop
scas
test
addr16
cmp
push
int3
sbb
xchg
fwait
mov
mov
cmpsl
adc
pop
inc
pop
cmp
into
stos
lahf
mov
aaa
dec
xchg
xor
lods
jmp
inc
arpl
fstps
icebp
in
stos
mov
lods
adc
lcall
test
aad
or
or
enter
scas
aaa
dec
sti
pop
lcall
mov
pop
mov
push
inc
fistps
and
mov
jbe
push
inc
pushf
imul
movswl
or
sbb
out
addr16
scas
add
rorb
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
inc
mov
cs
jmp
insl
test
push
clc
adc
mov
es
das
dec
repnz
imul
xor
and
int
fidivrl
sbb
ds
pop
je
add
sbb
aam
add
pop
mov
jnp
aas
je
ljmp
pop
add
add
ja
push
push
leave
sahf
arpl
jl
adc
push
add
aas
popf
push
hlt
daa
lock
xor
mov
dec
cwtl
jecxz
popa
call
mov
aam
mov
sti
pop
cmp
or
insb
shlb
ret
add
les
push
inc
and
xchg
xor
dec
popa
add
push
sbb
inc
pop
pop
inc
mov
lahf
movsb
mov
aad
inc
adc
cmp
jecxz
dec
fidivrs
in
mov
cmp
repnz
pop
dec
sbb
push
adc
es
lret
cmp
fwait
xor
adc
std
inc
and
and
mov
mov
mov
hlt
shlb
sub
lods
xor
popa
scas
and
add
sti
adcl
cmp
stos
push
and
mov
pop
mov
jno
ljmp
jle
jecxz
std
jmp
hlt
hlt
sahf
pop
xchg
mov
int3
push
dec
lahf
push
mov
fldl
pop
lods
cmp
cmp
fs
imul
repnz
out
loope
in
aaa
outsl
xchg
xor
sbb
xor
push
cmp
jno
cmp
dec
fwait
add
inc
push
mov
call
loopne,pn
xchg
jmp
xchg
aam
enter
rcr
ficomps
andl
and
xchg
je
or
cwtl
insb
in
scas
aad
pop
mov
jg
push
leave
and
sahf
jl
sti
pop
lcall
iret
pop
dec
dec
mov
nop
mov
ljmp
mov
je
push
jb
mov
xchg
sbb
idivb
rcrl
psllq
mov
mov
sbb
aad
add
sbb
xchg
mov
dec
jle
jl
cmp
adc
pop
scas
loope
scas
inc
lds
test
inc
test
push
lret
xchg
sbb
jnp
add
adc
imul
je
rorb
out
mov
aaa
inc
das
sbb
lahf
xor
repz
mov
xor
or
mov
es
xchg
leave
sti
scas
or
lods
fcompl
loop
sarb
fdivl
pop
add
fisttpll
xor
stc
fucom
idivl
adc
or
scas
cs
mov
lock
pop
lods
mov
push
push
jmp
mov
mov
test
mov
and
sbb
inc
add
stos
inc
xchg
pop
lods
insl
push
lcall
lahf
sahf
out
mov
mov
mov
rcl
call
mov
mov
or
jl
or
test
test
add
es
filds
pop
cmp
arpl
xchg
cltd
daa
jle
push
sub
ja
push
pop
adc
lods
lods
jno
dec
mov
gs
or
into
int3
sti
and
dec
mov
fwait
dec
jge
aas
es
cmp
pop
or
into
out
shll
push
push
jl
sbb
dec
insl
popf
ss
xorl
popa
mov
jns
loope
cmp
and
cld
fwait
ss
aaa
outsb
mov
loop
push
dec
xchg
popa
ret
and
enter
stos
xchg
fisttps
jmp
mov
repnz
jno
sub
aaa
jecxz
in
push
push
movsb
xor
and
add
mov
ss
fsubr
call
ds
push
imul
sahf
rcr
xor
cmp
mov
adc
dec
cmovne
stc
add
out
inc
sbb
xchg
popf
stos
dec
into
sti
aam
xchg
push
adc
bound
mov
fcompl
jbe
mov
rolb
aam
sbb
cld
rol
and
nop
inc
jle
pop
shll
out
pop
lret
xor
mov
mov
or
sub
ficoml
mov
cmp
vcvttps2qq
mov
hlt
jg
mov
xor
push
fnstcw
sbb
cmp
test
jns
cmp
dec
out
aad
push
mov
sub
adc
pop
mov
push
leave
mov
or
adc
aas
push
cwtl
and
cwtl
mov
stos
js
adc
loopne
popf
add
cwtl
insb
push
push
adc
jae
pop
daa
outsb
pushf
mov
push
imul
sbb
cld
jbe
rorl
push
jae
cmp
jle
aad
push
subb
cs
adc
addb
add
adc
ss
test
fbstp
and
adc
ret
cmp
cmp
sbb
sbb
cli
int3
pop
add
mov
loop
pop
leave
movsb
mov
mov
or
dec
xor
dec
cmovbe
scas
mov
das
movsl
adc
rolb
loope
and
mov
xorl
jbe
fwait
or
and
loope
nop
sti
or
into
push
dec
das
stos
rcr
mov
lds
sub
movsb
scas
add
movsl
add
jae
das
out
dec
and
push
fdivrl
notb
pop
inc
js
push
cld
leave
mov
mov
fcomps
sub
add
sub
movsb
seta
bound
cmc
cwtl
or
jnp
xchg
mov
xchg
lea
iret
pop
inc
or
stc
imul
push
cmp
add
cwtl
push
push
or
push
js
pop
push
lret
lods
aaa
xchg
mov
pushf
mov
aas
fisubl
sbb
ss
mov
icebp
repz
xchg
lret
sti
jp
add
xchg
push
jbe
jns
xor
sub
gs
fidivrs
push
mov
rolb
mov
pop
scas
or
pop
and
mov
jl
jno
loop
jp
mov
fadds
daa
push
out
jns
call
mov
pop
sbb
stos
lods
or
test
jne
mov
or
ljmp
sub
ds
xor
lea
leave
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
jmp
jmp
dec
int
xchg
jle
or
xor
push
clc
adc
fstpt
out
rcrl
ljmp
mov
call
push
sub
gs
pop
add
inc
hlt
inc
cmp
call
leave
fucom
add
pop
push
mov
dec
dec
leave
testb
insl
mov
pop
ret
mov
int3
gs
loop
add
mov
sbb
inc
inc
outsl
and
movsb
sub
loopne
add
imul
push
lret
in
out
mov
jp
adc
sbb
and
imul
push
pushf
lret
sbb
aas
mov
test
inc
arpl
or
push
pop
pop
rolb
cltd
insb
test
rcr
push
daa
sti
jne
lock
testl
sti
xchg
lret
jns
push
popf
int
mov
cmp
push
addl
mov
jecxz
ja
daa
sbb
int3
es
inc
nop
out
sub
cmp
adc
cmp
dec
inc
jae
out
inc
mov
pop
mov
popa
fsts
mov
iret
nop
call
xchg
mov
lahf
add
sub
jge
mov
int3
dec
je
out
sarl
jnp
enter
pop
mov
lea
into
pop
js
add
les
outsl
imul
cltd
outsb
sti
or
cmc
hlt
clc
out
adc
cs
adc
adc
jns
jo
out
fisttpl
jle
jecxz
inc
aaa
cltd
adcb
mov
dec
out
imul
jae
shlb
push
test
xchg
pop
dec
out
fs
sub
push
push
cwtl
cltd
sahf
pop
ds
fldcw
ss
stos
inc
sub
sub
lret
pop
xchg
aas
roll
inc
test
push
dec
fsubl
dec
mov
mov
inc
inc
out
jnp
daa
imulb
xchg
xchg
popa
out
sub
mov
fnstenv
dec
push
cwtl
in
int
jle
mov
dec
push
mov
push
ds
stos
adc
dec
push
jae
mov
cmpsl
shrb
pusha
repnz
outsl
fs
lds
xchg
popa
call
mov
jnp
addl
jl
xor
add
dec
jp
dec
xor
add
and
les
push
mov
xor
popf
mov
add
xor
push
pop
cmpsb
pop
leave
aaa
xor
rep
push
outsb
pop
popf
mov
or
aas
iret
hlt
aam
or
fstl
call
and
pop
mov
add
push
or
mov
mov
pop
dec
movsb
mov
mov
push
orb
xor
test
and
mov
xor
and
mov
push
lds
and
enter
and
and
shrb
cmpl
xor
add
mov
addr16
jae
lcall
xchg
gs
mov
lea
and
ret
ljmp
fstpt
push
push
push
fidivrs
xchg
jae
pop
test
mov
shll
dec
into
push
jae
mov
test
cmpsb
add
out
mov
fmull
cmpb
pop
cmpsl
mov
mov
into
push
fistps
out
inc
int3
inc
mov
mov
dec
jg
adc
sti
mov
xor
inc
bound
dec
into
mov
dec
shll
pushf
rcrl
push
cmp
mov
subb
sub
daa
xchg
insb
mov
mov
scas
adc
push
add
xchg
adc
sub
rolb
or
sub
loope
addr16
outsl
adc
and
mov
or
aam
stos
sub
shll
pop
jecxz
rcrb
sti
xor
and
dec
push
out
cmp
gs
jne
lret
dec
jge
ss
jmp
jmp
movsb
dec
cmpsl
jecxz
lcall
or
mov
movsb
push
jl
adc
int3
xor
adc
dec
sbb
iret
in
jmp
xchg
and
lret
push
inc
or
xor
addl
push
popa
pushf
pusha
mov
cmc
mov
mulb
in
mov
xlat
and
pop
dec
testl
imul
icebp
xchg
push
xlat
fnstsw
and
jg
lahf
sub
jns
inc
lahf
enter
cmp
aas
or
outsl
dec
fwait
inc
stc
xchg
cmpsl
pop
test
sub
jae
sub
aas
test
jg
pop
iret
dec
cmp
push
insb
ja
hlt
mov
lcall
push
gs
push
xchg
xor
nop
pop
pop
gs
push
mov
and
jbe
sti
inc
aad
inc
cli
aam
pop
push
ds
jb
cwtl
jmp
adc
mov
xchg
int3
outsb
mov
into
subl
pop
inc
lcall
loopne
jecxz
inc
movsl
and
lds
inc
repz
cmc
mov
filds
mov
xor
je
stc
inc
std
add
lret
gs
loope
add
xchg
enter
or
xchg
in
js
adc
or
stc
lea
subb
jp
imul
mov
daa
sbb
xor
xor
jp
mov
or
xchg
loop
lcall
cld
and
inc
in
pop
inc
loop
inc
adc
jbe
push
imul
jp
cmc
sbb
mov
enter
jg
dec
fldt
dec
jecxz
jl
repz
mov
mov
inc
call
loopne
arpl
sbb
in
pop
lea
outsb
cwtl
dec
dec
jp
or
std
js
in
and
xchg
mov
mov
push
mov
mov
jne
std
daa
cmp
cmp
in
das
adc
jnp
das
add
dec
dec
lds
loop
scas
and
rclb
repnz
cmpsl
call
in
xchg
sbb
sti
pusha
cs
jecxz
out
dec
push
aaa
inc
popf
push
dec
scas
loopne
sub
repnz
xchg
out
fnstsw
fistl
je
popf
xor
arpl
jp
cmova
or
loope
lods
xchg
pusha
fcomps
das
jae
sbb
sbb
push
push
mov
cmp
xor
adc
sbb
mov
jecxz
push
call
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jmp
ret
icebp
imul
scas
sbb
xlat
mov
aad
adc
push
inc
add
jbe
gs
push
outsl
stos
test
loope
lret
repnz
jmp
jo
mov
hlt
pushf
les
push
scas
push
adc
mov
gs
mov
mov
mov
dec
dec
shl
mov
jae
jnp
shr
and
xor
mov
xor
push
movsl
xchg
inc
data16
out
xchg
adc
sub
pushf
in
in
hlt
scas
subb
scas
jbe
adc
aaa
cmp
and
subb
pop
or
test
ret
hlt
pop
les
xor
shrl
xor
pop
pushw
jnp
push
pushf
icebp
out
xchg
cmp
push
and
mov
or
xchg
adc
adc
xchg
pop
jno
xchg
in
hlt
cs
subb
lock
sbb
mov
jg
sub
jle
and
push
adc
dec
in
lret
add
dec
cs
push
sbb
ror
fnstcw
pop
movsl
mov
pop
or
cmp
ficoms
sti
outsb
dec
addl
dec
sub
push
repnz
jo
xrelease
adc
loopne,pn
mov
sub
mov
stos
fcmove
int3
jne
addr16
shlb
lds
xchg
xor
adc
inc
dec
fnstsw
adc
lea
push
push
mov
add
add
adc
rorl
xlat
jg
mov
and
or
movsl
mov
push
lahf
aad
mov
mov
sub
daa
lods
scas
dec
bound
lods
jmp
cs
iret
int3
nop
sub
mov
push
jb
sti
lahf
movsl
xor
jb
leave
mov
rorb
inc
fiaddl
cmpsl
stos
insb
pop
dec
popa
cmpsb
or
jl
outsb
sbbb
mov
adc
sahf
push
xchg
pushf
pop
pop
shll
rorb
jo
ljmp
cmp
mov
hlt
loopne
push
out
add
lods
mov
inc
daa
mov
inc
popf
inc
data16
imul
cmp
sub
loope
fidivrs
incl
push
add
pop
shrb
aas
hlt
inc
rcrb
jp
push
iret
test
rol
test
stos
ja
cmp
scas
decl
push
sub
fs
sarb
lds
pop
ljmp
and
and
push
pop
jae
mov
push
cmp
aad
test
mov
fsubrs
pop
imul
jbe
add
lret
xor
mov
addl
out
xchg
jge
aaa
lods
es
fs
das
aad
unpcklps
sbb
pop
cmp
bound
mov
pop
mov
sti
add
bnd
and
push
xorb
xchg
inc
mov
xchg
add
cmp
mov
mov
mov
dec
outsl
dec
lea
fisubs
sbb
movsb
aas
imull
jg
in
dec
mov
cli
push
rcrb
arpl
call
stos
push
and
jnp
mov
mov
xor
test
andl
enter
pop
mov
mov
shrl
mov
fwait
inc
loope
and
test
outsb
xor
sbb
lret
movsl
and
insl
mov
pop
addr16
insb
bnd
js
pusha
lds
test
ficoms
cmc
push
mov
lds
call
test
dec
xchg
inc
pop
cmp
push
stos
add
xor
xchg
test
outsb
push
add
jge
repz
cli
add
and
aas
into
leave
popf
xchg
push
jo
iret
cmp
imul
adc
mov
es
sub
pop
cld
and
lods
and
scas
imul
std
mov
je
dec
loop
jo
test
dec
enter
cmp
push
cmc
mov
adc
mov
lcall
mov
sbb
bound
inc
adc
dec
sarb
xor
add
es
stos
inc
cmp
sbb
hlt
lds
idivb
subl
xor
sub
leave
inc
lret
mov
mov
repz
pop
lds
jp
dec
lods
lock
mov
and
dec
adc
and
cmp
and
push
dec
xor
out
sar
inc
sbb
mov
sub
xor
pop
movsl
std
xchg
sbb
sub
repz
mov
xchg
sarb
cmp
and
into
imul
out
ja
adc
push
xor
sahf
push
or
jp
or
dec
loop
stos
fs
xlat
setl
xchg
pushf
mov
xchg
daa
mov
ret
mov
dec
inc
pusha
inc
fisttpl
mov
add
pcmpeqb
sahf
mov
imul
mov
test
mov
dec
mulb
js
mov
rorb
pop
pslld
cwtl
mov
loopne
lcall
int
push
neg
mov
cltd
mov
packsswb
jl
xor
ja
imul
insl
xchg
xchg
jne
in
push
jo
dec
out
sahf
leave
int
push
shll
push
cmp
xchg
mov
stos
add
push
inc
cmpsl
cmc
je
pop
jne
insb
les
bnd
lods
fisttps
pop
ja
pop
xchg
sti
shrb
das
or
and
sub
repnz
xchg
jge
arpl
sti
popa
std
mov
in
cmp
dec
les
call
sbb
sbb
jae
outsb
mov
leave
test
pop
xchg
ss
stos
dec
outsl
mov
jl
push
aad
icebp
add
add
mov
fbld
cwtl
jmp
adc
sbb
lret
and
lahf
shll
cs
hlt
jmp
sbbl
scas
lcall
pop
nop
arpl
fsubrs
mov
cmp
into
sbb
int
adc
and
push
idivb
ja
add
and
pop
call
and
or
adc
js
popf
xchg
jmp
adcl
push
int
in
popf
mov
in
lea
cmp
cmpsl
test
cmp
jmp
lret
pop
inc
jmp
pop
addl
lcall
cmp
in
repnz
mov
or
std
mov
mov
and
fisubrs
test
xor
sbbl
add
sbbl
shrd
movl
shr
ret
mov
xor
orl
and
jmp
add
ss
ss
cs
mov
cmc
inc
adc
dec
hlt
or
clc
adc
std
mov
imul
mov
xor
cmpl
lahf
loope
cli
mov
lret
xor
adc
sub
mov
cmp
cmp
fcoml
and
cmpsb
push
jmp
cmpps
adc
sbb
push
ret
adc
cmp
lods
xchg
add
mov
movsb
movsb
ds
fidivl
inc
xchg
sbb
mov
fdivl
push
addr16
test
mov
jns
cmp
roll
jecxz
in
cs
out
fs
jmp
andb
jg
stos
jmp
ja
dec
mov
test
std
mov
loopne
loopne
cmp
js
jae
fisttpl
push
adc
or
repz
stc
pop
icebp
xor
jge
jnp
lret
stos
lcall
in
add
xor
xchg
xchg
sub
inc
stc
das
dec
pushf
rcll
pop
sub
add
imul
jmp
and
lret
jae
pop
sbb
push
adc
mov
outsb
push
mov
fstl
pop
cmp
fmuls
adc
mov
inc
mov
push
xchg
rcrl
mov
imul
arpl
mov
inc
inc
ret
xor
mov
ds
inc
ds
hlt
pop
pop
fisttps
stc
ds
or
jge
mov
adc
popa
jmp
mov
call
mov
mov
mov
addl
cmc
fiadds
xor
arpl
jl
mov
mov
cmp
pop
mov
cmp
xchg
sub
fidivl
and
push
push
fwait
and
fprem
xor
adc
sbb
rclb
pushf
inc
les
push
dec
es
adcl
inc
dec
mov
and
mov
sub
push
add
jp
jae
dec
cs
das
fisttpl
insl
pop
loope
inc
push
jae
lcall
loopne
loope
mulb
fbstp
shrl
add
and
test
pop
cmpb
ja
notb
mov
stos
pop
xchg
adc
fildll
std
inc
jl
sub
in
and
xor
lods
add
cmp
cld
scas
sbb
in
mov
lret
xchg
jmp
push
in
sub
pusha
jmp
jmp
dec
pop
ss
ja
jno
fadds
sbb
sub
repz
cmp
jnp
adc
xor
std
cmp
inc
xchg
xchg
fs
arpl
sbb
sbb
push
jge
std
out
sbb
pop
fwait
jle
stc
cmp
insl
mov
adc
out
or
pop
mov
cmp
push
pop
sbb
arpl
inc
iret
ret
xchg
outsl
fwait
mov
jmp
pop
cmp
xchg
repz
xchg
pushf
add
stc
les
les
cmp
mov
mov
and
mov
rcrl
les
xchg
push
ret
inc
push
push
inc
xchg
dec
cwtl
call
adc
mov
cwtl
xor
add
inc
add
add
lods
movsl
mov
pop
loope
adc
push
cmpsb
icebp
mov
mov
cmp
mov
inc
xor
sbb
mov
pop
inc
xor
pop
shlb
mov
cli
jno
shrl
adc
gs
shrl
sub
jmp
test
orb
out
lea
xchg
test
js
call
hlt
xchg
rcll
insl
push
scas
aad
jecxz
inc
js
push
sbb
jle
fisttpll
ret
test
xor
ds
sbb
stos
pop
mov
js
sub
fisttpll
and
je
lret
push
icebp
push
and
daa
cmp
xchg
xor
inc
or
pop
jnp
pop
pop
mov
or
adc
inc
or
out
and
jg
fnstsw
leave
cs
adc
sbb
and
int
mov
ja
scas
pop
repnz
stc
fldl
fwait
repnz
lock
cltd
fs
push
mov
in
ret
mov
dec
xchg
scas
mov
fnstsw
adc
xor
and
xchg
repnz
sbb
outsb
push
or
negb
int3
fcoml
mov
and
xorl
xlat
repnz
out
mov
mov
dec
ja
aas
mov
sub
in
test
inc
mov
jle
cmp
lds
mov
xor
int
inc
mov
aam
gs
imul
fistps
jno
lods
adc
pop
and
adc
push
dec
fdivr
test
lcall
lret
mov
inc
scas
lahf
aas
addb
inc
push
popf
xchg
fs
jmp
mov
xchg
or
addr16
in
cmp
mov
negb
ret
jnp
mov
or
punpckhwd
inc
xchg
call
pop
test
push
pop
mov
out
repnz
fmull
or
shll
pop
mov
jle
lret
or
mov
and
mov
jmp
dec
or
sbb
pop
sahf
in
sbb
push
sahf
xchg
enterw
push
mov
xlat
push
xor
jl
mov
mov
mov
insb
mov
push
mov
test
or
sbb
das
shrb
xor
xor
xor
xchg
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
jbe
pushl
pushl
call
adcl
subl
sbbl
add
xorl
incl
movl
xor
xor
add
mov
mov
movl
andl
mov
movb
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
pushl
push
call
incl
subl
xor
xorl
orl
orl
or
orl
or
movb
subl
movb
movzbl
mov
addl
sub
addl
imul
cmpl
mov
mov
jmp
mov
jne
pushl
pushl
push
pushl
pushl
pushl
call
movzbl
xor
sbb
orl
andl
subl
orl
movzbl
subl
push
adcl
and
mov
movb
orl
movb
andl
movb
sbbl
movb
andl
mov
mov
add
adcl
imul
mov
or
mov
subl
and
mov
movl
cmp
movl
ja
mov
and
mov
sub
mov
cmpl
not
mov
jmp
mov
ja
push
push
push
pushl
pushl
push
pushl
pushl
push
push
push
pushl
push
call
movzbl
and
sbb
xor
xor
or
adc
mov
sub
mov
not
mov
mov
movzwl
movl
movzwl
shr
andl
or
xorl
sub
andl
mov
movb
xorl
movb
mov
mov
xor
add
movzbl
cltd
push
pop
idiv
mov
movb
movb
mov
mov
add
movzbl
movzbl
cltd
idiv
mov
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
mov
push
push
push
call
mov
mov
mov
or
mov
mov
shl
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
orl
push
add
push
xorl
mov
dec
mov
shrd
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
or
xor
or
mov
sub
xor
adc
sub
xor
xor
adcl
neg
shr
xor
mov
not
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
pushl
push
call
addl
movzbl
sbb
sub
xor
xor
mov
xor
or
mov
notl
mov
shl
subl
mov
xorl
shrd
add
xor
movl
shr
adc
mov
mov
xor
mov
sbb
or
mov
or
mov
sbb
mov
mov
mov
mov
add
mov
cmpl
movzwl
movl
jmp
mov
notl
jae
call
adc
sub
and
xor
sub
adc
movl
mov
mov
add
mov
addl
mov
cmpl
movl
mov
movl
jmp
movl
jne
push
call
neg
xorl
or
xor
xor
or
or
add
incl
inc
mov
add
shl
xor
shld
movzwl
or
mov
shl
mov
xor
xor
movl
movl
movl
movl
cmp
jne
cmp
movl
je
mov
and
mov
mov
cmpl
mov
mov
not
jmp
movl
je
pushl
call
adc
or
incl
subl
sub
mov
movl
xor
shld
orl
shl
sbbl
xor
decl
xor
movl
cmp
jne
cmp
movl
je
mov
mov
sub
and
mov
mov
add
mov
addl
shl
mov
addl
xor
andl
shr
addl
or
mov
cmpl
mov
movl
movl
jmp
not
jl
push
pushl
call
add
and
or
adc
and
adc
adc
sub
mov
orl
mov
adc
mov
xor
add
mov
add
mov
sub
mov
orl
push
adc
pop
orl
sub
mov
add
notl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jb
push
push
push
pushl
pushl
call
orl
or
mov
adc
dec
sub
sbbl
lea
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
pushl
pushl
pushl
call
movzwl
and
xor
adc
neg
subl
xor
mov
movzwl
add
mov
mov
orl
xor
adcl
shr
addl
shl
or
mov
adc
movl
cmpl
mov
movl
not
mov
jmp
not
movzbl
je
push
call
sbb
xor
or
add
and
mov
mov
movl
xor
shr
addl
shl
andl
or
push
lea
push
lea
xorl
push
adcl
call
cmpl
movl
mov
mov
jmp
mov
movl
jge
pushl
push
push
push
pushl
push
call
sub
adcl
movzwl
adc
or
movzbl
sub
mov
mov
xor
or
sub
and
mov
add
mov
xor
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
adc
mov
mov
or
adc
and
adc
orl
notl
shr
cmpl
mov
movl
movl
jmp
movl
movl
je
pushl
pushl
pushl
call
subl
or
sub
neg
notl
adc
shl
cmpl
movl
movl
mov
jmp
notl
mov
ja
push
pushl
pushl
call
movzwl
sbb
xor
and
sub
sbbl
adc
or
push
lea
adcl
push
or
mov
mov
or
shrd
xorl
shr
sbb
mov
mov
adcl
xor
adcl
xor
xorl
or
subl
lea
adcl
push
shl
orl
call
dec
mov
and
mov
xorl
xor
mov
sbb
mov
shl
shr
movzwl
sbb
or
or
push
lea
xor
xor
sub
push
add
mov
neg
mov
and
shrd
cmpl
movl
not
mov
jmp
movl
movzbl
jge
push
push
pushl
push
pushl
pushl
call
mov
mov
or
sub
movl
movzbl
sbb
mov
or
mov
xorl
xor
xor
sbb
shr
mov
or
mov
xor
andl
shl
sbbl
xor
addl
or
xorl
lea
push
call
inc
mov
adc
mov
movzwl
or
xor
xor
shl
shr
cmpl
movl
movl
jmp
mov
mov
jg
pushl
pushl
push
pushl
pushl
pushl
call
movzwl
xor
inc
or
inc
mov
xor
add
sub
or
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
andl
or
mov
movl
jne
cmpl
movl
movl
jmp
movl
not
jl
pushl
call
and
adcl
subl
andl
movl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
push
call
pushl
call
test
jg
movl
movl
movl
mov
adc
mov
sbbl
imul
orl
or
and
mov
xor
mov
movl
movl
mov
or
mov
subl
mov
push
subl
add
movl
push
movl
adc
orl
push
push
andl
call
add
mov
adc
mov
movl
or
movl
cmpl
mov
mov
jmp
mov
movl
jle
push
call
adc
movzwl
sub
adc
subl
adc
mov
mov
sub
mov
and
and
movl
xor
movl
cmpl
notl
movl
movl
jmp
movl
jae
pushl
pushl
push
push
call
movzwl
adc
mov
sub
andl
xor
xor
and
cmpl
mov
movl
jmp
mov
mov
jbe
push
pushl
call
addl
xorl
adc
sbb
add
add
movl
movl
and
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jne
pushl
push
call
sub
mov
adc
mov
adc
xor
add
xor
mov
xor
mov
mov
mov
movl
and
cmpl
movl
mov
movl
movl
jmp
movl
movl
ja
push
call
subl
sub
andl
adc
sub
xor
or
sbb
cmpl
movl
movl
movl
jmp
movl
jne
pushl
push
call
mov
add
neg
sbbl
or
subl
sbb
cmpl
mov
mov
mov
jmp
movl
je
pushl
call
adc
add
inc
or
and
add
mov
and
mov
movl
or
andl
or
add
adc
and
and
subl
xor
mov
orl
xor
movl
cmp
movl
ja
movl
jb
cmp
ja
cmpl
mov
mov
jmp
movl
ja
push
push
call
xor
sub
subl
xor
or
sub
add
movl
or
movl
movl
add
movl
cmpl
movl
mov
mov
jmp
notl
movl
jg
pushl
push
push
call
not
sbb
or
or
xorl
add
movzwl
sbb
mov
xor
or
mov
sub
or
movl
cmpl
movl
mov
jmp
mov
movl
jne
push
push
pushl
push
push
call
xor
movzbl
or
xorl
mov
add
or
and
adc
movl
movl
sbb
mov
mov
subl
sub
incl
and
and
or
mov
sub
adc
pushl
cmpl
movl
mov
movl
jmp
movl
not
jl
pushl
push
call
sbb
xor
sbb
or
adc
mov
and
mov
cmpl
mov
not
movzbl
jmp
movl
jae
pushl
call
xor
sbbl
mov
mov
sbb
or
mov
xorl
lea
sub
push
pop
subl
xor
div
add
mov
sub
xor
pushl
mov
movzwl
or
pushl
cmpl
mov
mov
movzbl
jmp
movl
mov
je
pushl
pushl
push
call
xor
or
add
xor
adcl
xor
or
addl
adcl
mov
sbbl
pushl
and
or
pushl
mov
addl
pushl
addl
xor
xor
pushl
adc
mov
sub
pushl
orl
call
movl
add
movl
mov
or
movl
xor
movl
mov
mov
or
mov
mov
subl
sub
xor
mov
and
mov
orl
xor
shr
imul
pushl
call
xorl
dec
cmp
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
call
movzwl
sbb
movl
xor
xor
and
xor
add
add
xor
adc
neg
movl
cmpl
movzwl
movl
jmp
movl
movl
jbe
call
negl
xor
add
xor
neg
xor
adcl
cmpl
mov
mov
mov
jmp
movl
movl
jae
push
call
xorl
xor
adc
add
and
movl
adc
or
mov
movl
mov
andl
movl
mov
sbbl
call
cmpl
movl
not
movl
jmp
not
not
ja
pushl
push
push
push
call
mov
mov
sub
and
neg
adc
sub
or
add
sbb
lea
cmpl
not
mov
jmp
mov
jae
push
pushl
call
adc
mov
mov
sbb
andl
adc
adc
adc
mov
addl
lea
cmpl
mov
movl
mov
jmp
mov
movl
jge
push
pushl
push
pushl
push
call
xor
and
movzbl
and
mov
and
addl
mov
mov
sbb
mov
and
mov
sbb
mov
and
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
push
push
pushl
call
orl
addl
xor
add
xor
xor
sub
add
mov
mov
sub
or
sub
xor
cmpl
movzbl
movl
movl
mov
jmp
movl
movl
jne
push
push
push
call
or
sub
xorl
xor
or
mov
mov
or
sub
shl
cmpl
movl
movl
mov
jmp
mov
movl
jg
pushl
pushl
call
mov
xor
xor
sub
imul
mov
mov
sub
and
sub
add
not
shr
dec
or
mov
xorl
mov
sub
mov
mov
xor
add
or
mov
mov
mov
sub
shrd
shr
cmpl
mov
mov
jmp
movl
jg
push
call
adc
xor
add
adc
adc
or
adc
xor
and
mov
mov
xor
xor
or
mov
push
pushl
lea
push
shl
call
lea
push
mov
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
push
push
sbb
push
movzbl
sbb
movl
movl
or
movl
movl
neg
mov
mov
mov
mov
xor
and
subl
mov
cmpl
mov
mov
jmp
movl
movl
jb
pushl
call
and
adcl
mov
and
add
dec
xor
and
subl
add
mov
xor
xor
movzwl
xor
mov
orl
movl
neg
movl
adcl
mov
xor
cmpl
movl
movl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
sub
add
sub
mov
mov
or
mov
mov
sub
sub
cmpl
mov
movl
movzwl
mov
jmp
movl
movl
jge
pushl
push
push
call
add
inc
movzwl
and
adc
and
sub
subl
mov
add
imul
not
xor
or
mov
div
adc
sub
mov
mov
sub
and
mov
or
movl
movl
mov
mov
and
movl
movl
add
movl
sub
movl
movl
mov
mov
imul
add
or
and
sub
sbbl
mov
sub
andl
mov
sub
mov
sub
andl
add
sub
mov
andl
xor
subl
div
mov
adcl
sub
mov
add
movzwl
sub
mov
sub
movl
xor
movl
mov
mov
sub
and
movl
add
mov
xor
cmpl
mov
mov
mov
jmp
mov
je
push
call
and
or
sbbl
mov
adc
addl
movl
adc
add
mov
xor
div
cmpl
mov
movl
mov
mov
jmp
movl
movl
jb
push
call
or
mov
sub
xor
or
adc
andl
dec
sbb
and
cmpl
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
push
push
push
pushl
call
sbbl
sub
sbbl
mov
sub
mov
and
mov
or
and
sub
sub
mov
movl
and
movl
mov
mov
xor
movl
sub
movl
mov
cmpl
mov
movl
movzbl
jmp
movl
ja
pushl
push
pushl
call
mov
sub
movzbl
add
mov
orl
xor
mov
xor
mov
and
mov
xor
adc
xor
adc
push
xor
pop
movl
div
cmpl
mov
mov
movl
jmp
movl
movl
je
push
push
push
pushl
call
inc
inc
xor
sbbl
mov
xorl
xor
orl
div
movl
mov
movl
or
sub
sub
cmpl
mov
mov
movl
movl
jmp
movl
movl
jb
push
pushl
push
pushl
pushl
pushl
push
push
call
negl
xor
mov
and
mov
adcl
mov
adcl
movl
mov
cmpl
movl
movl
movl
jmp
movl
mov
jle
push
push
push
call
andl
addl
andl
sbbl
sbb
sbb
mov
andl
xor
orl
div
andl
imul
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
push
call
or
and
adc
or
neg
xor
orl
xor
sbb
imul
add
xor
mov
sub
mov
mov
subl
movl
movl
subl
movl
sbb
mov
cmpl
movl
mov
jmp
movl
jge
pushl
call
adc
subl
xor
xor
mov
sbb
adcl
or
cmpl
mov
movl
movl
jmp
notl
movl
jg
pushl
push
pushl
call
orl
sub
sbb
xor
xor
adc
andl
add
orl
or
and
or
mov
addl
xor
sbbl
div
sub
mov
sbbl
imul
or
add
xor
mov
incl
sub
cmpl
movl
movl
movl
movl
jmp
movl
je
push
pushl
call
addl
movl
subl
or
xor
andl
mov
cmpl
mov
mov
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
pushl
call
xor
add
sbb
or
adcl
mov
mov
adc
sub
xor
movl
mov
and
and
cmpl
movl
mov
jmp
mov
movl
jge
push
push
pushl
push
pushl
push
call
orl
xor
xor
adc
mov
xor
add
xor
mov
not
movzwl
sbb
sbb
add
cmpl
movl
notl
mov
notl
jmp
movl
jb
push
pushl
push
push
push
call
adc
movzwl
sub
adc
add
adc
andl
mov
sbb
or
xor
cmpl
mov
mov
jmp
movl
je
pushl
call
movzbl
or
mov
andl
mov
adc
addl
mov
sub
mov
movzbl
adc
adcl
sub
mov
mov
xor
add
sub
imul
movl
cmpl
mov
movl
jmp
notl
movl
ja
push
call
sbbl
mov
sbb
sub
sub
add
xorl
movl
xorl
movl
neg
mov
adc
and
mov
adc
add
adcl
add
add
or
cmpl
not
movl
jmp
mov
mov
jl
push
push
call
mov
adc
movzbl
adc
sub
notl
sbb
add
or
xorl
sub
mov
movl
xor
movl
adc
movl
cmpl
mov
mov
jmp
mov
mov
jg
pushl
push
pushl
call
andl
orl
not
add
add
mov
shr
sub
xor
xor
mov
lea
movl
push
orl
call
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
call
or
neg
add
sub
xorl
xor
add
cmpl
mov
mov
mov
jmp
not
jl
push
pushl
push
call
mov
xor
xor
or
xor
xor
sub
or
or
xor
or
mov
sub
and
or
mov
mov
sbb
or
xor
add
sbb
and
lea
mov
mov
mov
sub
or
movl
sbb
movl
cmpl
movl
mov
mov
jmp
mov
movzbl
ja
push
push
pushl
push
call
mov
mov
sub
imul
mov
mov
and
sbb
subl
xor
movl
movl
movzbl
adc
mov
movl
movl
movzwl
sub
movl
movl
subl
mov
add
mov
and
dec
sub
mov
sub
lea
mov
orl
mov
mov
sub
mov
imul
sbb
and
cmpl
mov
not
movl
movl
jmp
movl
movl
ja
pushl
push
push
call
add
orl
adcl
negl
andl
subl
movzwl
and
not
imul
cmpl
mov
not
jmp
movl
jl
pushl
pushl
call
adc
add
adcl
sbb
subl
mov
or
mov
lea
mov
cmpl
movl
mov
movl
jmp
mov
jbe
push
call
sbbl
and
movzwl
adc
sub
mov
mov
sbb
xor
or
and
mov
cmpl
mov
movl
not
jmp
movl
mov
jge
pushl
push
push
push
pushl
push
call
add
orl
sbb
add
neg
addl
sub
movl
adc
movl
movl
cmpl
mov
mov
mov
movl
jmp
movl
jg
pushl
push
push
call
sbb
xor
sbb
mov
sub
mov
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
pushl
push
call
mov
mov
sub
or
inc
add
sbb
or
and
add
mov
mov
mov
xor
xor
xorl
mov
addl
call
adcl
mov
orl
mov
orl
mov
cmpl
movl
mov
mov
jmp
movzwl
mov
jl
pushl
push
pushl
pushl
push
call
add
movzbl
adc
mov
xor
add
add
mov
sub
add
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
not
push
push
cmpl
mov
movl
movl
movl
jmp
mov
mov
jge
push
pushl
pushl
push
push
pushl
call
xor
add
subl
adcl
add
sbb
mov
sbb
mov
xorl
or
movl
jne
xor
xor
mov
sub
or
mov
mov
cmpl
movl
mov
movl
jmp
movl
je
push
push
pushl
push
pushl
push
push
push
push
pushl
push
push
push
call
or
decl
andl
adc
sbbl
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
andl
subl
cmpl
movl
je
and
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
notl
shl
ret
mov
xor
mov
decl
xor
and
shl
ret
xor
xor
ret
