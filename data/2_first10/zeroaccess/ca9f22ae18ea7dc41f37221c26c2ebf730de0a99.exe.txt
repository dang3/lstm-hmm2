push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
aad
loope
jo
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
cmp
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
outsb
test
mov
js
mov
jge
sti
xlat
das
hlt
push
gs
cs
mov
gs
and
adc
mov
cmpsb
jb
push
add
push
inc
add
in
xor
lods
es
add
pop
mov
xchg
in
aas
adc
pop
push
cmp
sub
xchg
mov
xchg
hlt
aas
pop
xlat
or
imul
inc
dec
les
mov
out
inc
push
xchg
stc
lea
cmp
jns
mov
pop
mov
data16
inc
out
mov
nop
dec
out
cmp
sbb
outsl
shrb
popl
push
push
mov
test
dec
pop
cltd
cmpsb
sub
xchg
leave
push
pop
pop
push
das
sbb
lock
and
imul
dec
int
aas
in
add
pop
pop
pop
or
ss
loope
push
test
push
cmpsl
dec
adc
jmp
aad
push
inc
push
sbb
hlt
enter
sbb
sbb
leave
mov
pop
adc
pop
shl
xchg
add
bound
subb
or
cmp
add
pop
or
mov
pop
pop
sti
or
cli
inc
sbb
xor
mov
jmp
clc
icebp
mov
icebp
ficompl
inc
ja
jle
jo
jle
jo
fwait
push
push
xchg
jl
out
fsubs
pop
sbb
fs
sar
inc
cmp
imul
pop
data16
and
xor
cmc
and
divl
fnstenv
pop
xchg
push
orps
into
xlat
test
movsl
cmp
jo
add
rcrb
js
adc
or
out
orb
leave
dec
pop
movsl
pop
int3
xor
icebp
pop
out
repnz
cmpsl
adc
jne
fstps
and
adc
rcl
add
adc
scas
in
call
jl
push
cmp
pop
into
sarb
in
jne
arpl
int3
ror
in
fimull
andb
popa
les
out
push
clc
pop
je
or
and
in
mov
js
ljmp
sbb
xchg
shrb
outsl
and
mov
pop
add
or
xor
shlb
xchg
fstl
dec
dec
push
mov
push
add
adcb
add
insb
or
cmpsl
je
adc
dec
scas
out
xor
shrb
mov
mov
nop
loop
adc
push
mov
shufps
mov
push
fwait
inc
lods
sub
mov
or
rorb
jno
pop
or
cmp
lcall
push
jp
loope
mov
xor
inc
mov
std
les
pop
clc
shll
clc
repnz
xor
divb
gs
sub
push
cmpsb
lret
inc
fdivp
test
add
mov
sbb
ss
js
xor
test
or
mov
cmp
cmp
movsb
xor
shrb
sub
loopne
fsub
movsb
lods
enter
cwtl
adc
fs
jne
jo
aam
sti
xchg
mov
cld
pop
xchg
cmpl
mov
jns
repnz
data16
xchg
lret
adc
icebp
adc
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
sahf
add
jo
jo
popa
adc
stos
mov
add
cmpsb
scas
out
pop
aaa
jne
std
fbstp
add
movsl
cmpl
push
cwtl
movsl
push
mov
loope
mulb
xchg
iret
mov
les
adc
gs
xchg
and
ret
mov
push
cmp
mov
xchg
lds
xchg
lahf
xchg
ret
pop
call
cmp
push
stos
push
mov
sar
fistpl
xchg
mov
mov
jbe
outsl
jns
andl
ss
loop
mulb
xor
push
dec
aad
insb
in
adc
push
lock
and
fnstcw
sub
movsb
xor
add
sub
dec
sub
cmp
rol
xchg
fists
mov
mov
adc
jns
pop
xchg
dec
jns
mov
repnz
icebp
in
cmc
mov
xchg
add
bnd
mov
xor
pushf
mov
mov
add
fimuls
or
insb
mov
icebp
pusha
cld
insl
cmp
xchg
ficomps
out
cs
xchg
les
popf
cli
pop
push
stc
xchg
popa
ja
jb
mov
shlb
ret
inc
or
push
mov
add
push
daa
cmp
les
xchg
ljmp
les
test
imul
sbb
mov
xchg
cmp
cmpsb
aam
xchg
mulb
aaa
and
loopne
add
mov
pop
adc
insb
stos
xchg
aas
pushf
rcrb
fcoml
pop
sti
add
sbb
pop
lock
std
fdivr
push
imul
pop
inc
negb
scas
adc
pop
xlat
out
jg
in
imul
pop
cwtl
aas
adc
sahf
ss
push
mov
add
ret
adc
ret
jo
xchg
mov
push
leave
in
insb
mov
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
jecxz
push
jo
jo
jo
jo
sti
cmp
xchg
outsb
lret
xchg
test
sbb
or
and
sbb
pop
adc
mov
dec
or
push
dec
mov
push
loopne
jo
or
hlt
int3
xchg
in
push
mov
repnz
int3
movsl
push
les
fistpl
movsl
and
dec
cmp
mov
mov
cmc
sti
sbb
ljmp
push
addb
dec
lods
cmpsl
push
and
jl
mov
add
dec
movntps
push
xchg
mov
scas
push
fcmovbe
inc
enter
lods
sbb
jecxz
xchg
fwait
add
or
xor
pop
pop
jmp
sbb
mov
loop
dec
movsb
xor
pop
push
outsb
insl
popa
mov
mov
ja
mov
inc
lcall
shl
sub
call
ja
cmpsb
call
xor
push
outsl
adcl
fstps
ljmp
leave
sub
fiaddl
xchg
pop
and
mov
icebp
ss
shll
xchg
shlb
fimull
stos
mov
clc
or
jp
sbb
shll
xor
mov
adc
sub
mov
std
in
loope
inc
mov
test
mov
jb
outsl
cmp
into
fisubs
mov
rorl
jne
cmpsb
lret
movsb
bound
add
dec
dec
jmp
xchg
sbb
sub
call
mul
push
sub
push
xlat
pop
into
lcall
sti
mov
inc
push
inc
jmp
jecxz
mov
pop
stos
dec
sarb
fidivrs
lahf
out
outsb
mov
mov
xor
arpl
fdivrl
push
aaa
mov
mov
test
ljmp
adc
push
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
pop
mov
js
jo
jle
jo
push
scas
or
stos
pop
ficoml
push
ljmp
jl
or
cmp
test
mov
mov
sahf
xor
push
jecxz
lods
fcomps
ret
sbb
test
hlt
jo
push
cmp
jae
lock
mov
push
push
sbb
loopne
push
and
js
xchg
ret
cmp
inc
aam
push
adc
sub
arpl
mov
ror
xchg
test
add
nop
aas
sbb
test
push
aaa
fwait
xor
pop
icebp
loop
imul
ja
and
lcall
mov
loop
push
leave
lret
xchg
pushf
fdiv
lcall
lahf
sub
sub
lea
lods
into
fs
mov
jg
lods
push
lret
shrb
dec
push
js
cmp
pop
lds
push
or
ja
test
fisttpll
cmp
repz
mov
jmp
pop
mov
pop
add
sub
fstpl
sub
loope
es
cli
fisttpll
sti
fmulp
dec
inc
movsb
mov
cmpsl
and
orl
adc
xor
inc
jne
or
fs
subl
lock
ds
out
xchg
push
insb
adc
sbb
lock
aas
jle
shll
add
mulb
dec
int3
rorl
push
inc
xchg
out
dec
out
test
das
fsubl
ficompl
mov
sbb
rcrb
pop
xor
jmp
inc
gs
rcrb
mov
pop
sbb
jnp
sarb
push
lret
cs
lret
jp
jb
cwtl
sbb
push
mov
dec
sub
or
dec
inc
mov
or
jns
push
int
arpl
sarl
adc
negb
inc
fidivrl
ljmp
adc
ret
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
xchg
jo
jo
outsl
push
mov
out
cmp
dec
rolb
xchg
xlat
push
lods
in
xor
lea
cmp
pop
mov
sbb
or
out
adc
push
sahf
cmpsl
rorl
cmpsl
mov
push
and
pop
test
xor
cmp
enter
or
cwtl
mov
or
inc
add
or
jl
adc
imul
pop
cmp
and
sti
lret
adc
test
xchg
push
mov
cmp
mov
pop
add
push
cwtl
sbbb
stos
jg
jo
enter
cmp
add
fstpl
xor
jg
lods
movsl
mov
ficomps
fldcw
sbb
shll
fistl
cmp
imul
popf
lock
dec
push
ret
fs
dec
jae
sbb
rcll
cmp
movsl
idiv
loopne
add
sahf
xchg
mov
sahf
das
mov
or
mov
xchg
and
mov
data16
pop
enter
inc
xlat
pop
stos
out
and
inc
out
add
enter
test
cwtl
push
jo
sub
pop
mov
jae
or
inc
and
in
push
adc
jmp
aam
jne
addr16
lcall
es
mov
jg
inc
push
aaa
aad
popf
fsubp
pop
jno
fmuls
xor
cwtl
pop
call
push
jns
adc
xor
or
push
push
cmpsb
mov
cwtl
adc
or
icebp
imul
loope
adc
cmpsb
das
scas
push
not
rolb
movb
and
jo
sbb
jb
ret
adc
jbe
jmp
out
push
imul
sub
or
push
sbb
loope
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
cmpb
jo
jle
jo
mov
sbb
cmpsl
inc
sub
pop
jp
xchg
pop
ss
enter
popa
test
mov
pop
movsb
jbe
mov
nop
daa
pop
jno
sub
lcall
popa
sub
mov
subb
push
mov
xchg
mov
scas
cwtl
sub
paddb
and
adc
push
push
arpl
insb
pop
std
mov
mov
fwait
push
mov
inc
jb
test
pop
imul
jmp
or
lock
adc
pop
aas
mov
mov
cmp
and
pop
mov
sub
push
cmp
popa
jb
mov
pop
sub
sub
jp
testl
jo
cmp
xor
jnp
mov
and
into
sub
in
sbb
sub
push
pop
and
bound
add
jns
in
std
and
cs
addr16
cmpsb
mov
fadds
mov
add
lret
inc
sub
dec
ja
shrl
push
sbb
loop
mov
fsubrs
dec
dec
in
out
hlt
inc
mov
push
pop
negl
or
popf
cmp
jo
arpl
jae
fmuls
test
cli
loop
and
enter
cmp
sub
setne
testl
loopne
fs
sub
cld
shrl
jne
ljmp
add
sub
or
mov
mov
out
roll
imul
pop
add
fists
in
xor
ljmp
outsb
lods
sub
ret
stos
xchg
inc
sarb
and
shlb
cmp
mov
rcr
das
into
dec
xchg
std
cmp
and
and
les
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
popf
shll
jo
jo
jo
and
int
pop
clc
dec
mov
gs
add
out
xchg
into
scas
xor
sbb
out
in
insb
xor
pop
negl
fisubl
cmp
int3
dec
dec
in
lret
outsl
movl
pop
and
jnp
lea
pop
cmp
jge
push
in
or
xor
aaa
aas
je
sbb
mov
xor
cmc
jb
shrl
insl
std
in
loopne
nop
inc
adc
xorb
test
push
and
adc
sub
xchg
cmc
and
cmp
and
mov
loopne
repnz
jge
and
sub
fidivrs
int
cmpsb
repz
jo
sbb
pushf
cmp
es
aad
xor
stos
fcompl
xor
jae
jmp
andl
push
fstps
notb
cmp
es
dec
pop
adc
sbb
cmpsl
xchg
inc
push
rcrl
js
aam
cmpsl
dec
test
cltd
jns
js
jecxz
or
sub
out
loope
fs
xlat
out
mov
and
mov
adc
push
sbb
jnp
fldt
add
cld
sub
sub
add
sbb
jmp
std
sub
mov
lahf
jp
push
push
ljmp
sti
pop
lock
pop
mov
and
inc
sahf
lods
mov
sbb
cli
pop
jbe
cmp
cmp
inc
dec
jbe
stos
sub
adc
adc
pushf
mov
jae
test
pop
or
xchg
mov
clc
mov
test
jne
out
out
lret
in
dec
add
ds
les
sub
fstps
dec
add
cmc
push
aad
add
or
bnd
mov
data16
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
shll
jo
jle
jo
ss
mov
bound
sub
add
pop
stc
dec
icebp
idivb
dec
mov
fsts
out
shl
lcall
rclb
icebp
and
inc
mov
test
ja
int
and
ljmp
ljmp
fisubrl
xor
sahf
adc
pop
xor
fwait
outsb
cltd
cmpsb
out
enter
stc
xchg
jns
adc
adc
dec
in
xorb
push
jecxz
push
sarb
lds
adc
sub
lea
or
push
pushf
pop
mov
push
ret
mov
stos
in
imull
adc
fsts
cmc
setl
push
dec
out
test
idiv
jg
arpl
mov
lock
aam
or
or
jno
pop
lea
add
mov
mov
inc
cmp
sub
subl
push
push
in
inc
and
loop
out
nop
push
clc
xor
imul
inc
mov
icebp
sbb
aaa
dec
add
push
insl
sbb
lcall
pop
adc
sti
movb
xchg
lea
xor
js
sbb
xchg
ja
adc
cltd
shlb
fnstsw
xlat
mov
cmc
dec
jnp
dec
inc
dec
push
fldt
push
mov
lods
xchg
mov
leave
jmp
dec
jp
daa
mov
sbb
lods
push
clc
pusha
mov
and
test
in
lock
ss
mov
jnp
mov
jmp
dec
add
jle
dec
mov
adc
pop
xchg
sahf
insb
cmovle
cmp
in
bound
and
mov
push
nop
mov
loop
mov
lds
push
cmp
lcall
fidivs
mov
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
lcall
cld
mov
out
ds
dec
out
lret
fdivl
int
ret
and
sbb
js
push
sbb
or
mov
sub
xchg
mov
rorb
outsl
hlt
shlb
mov
mov
jo
into
sub
enter
jp
mov
inc
out
aam
fwait
cmc
les
mov
pop
or
sahf
mov
and
pusha
loope
lea
jmp
insl
xlat
add
or
jg
test
stc
sbb
aad
mov
push
inc
push
negb
aaa
mov
push
or
repnz
test
adc
push
cmp
mov
jmp
xor
push
insb
xchg
or
sub
rorb
xchg
ljmp
lret
inc
jp
stos
or
mov
outsb
mov
nop
pop
imul
dec
mov
jmp
push
xor
in
push
mov
mov
fildl
lds
dec
pop
daa
xor
push
push
inc
in
fdivs
sbb
test
lret
xor
adc
movsb
dec
test
cmp
lea
aaa
scas
insb
mov
pop
or
jp
ljmp
sahf
sub
xor
pop
std
inc
sbb
and
jle
add
ss
les
add
pop
dec
mov
hlt
sub
add
js
test
test
mov
cwtl
xor
and
das
xchg
fistpll
jecxz
fiaddl
pushf
dec
sub
loopne
cwtl
sbb
pushf
lock
lret
mov
sub
adc
xchg
push
cli
pop
mov
lds
add
js
jecxz
ss
sub
je
arpl
fwait
test
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
pop
rolb
mov
test
adc
cmp
daa
mov
popa
icebp
ret
pop
roll
insl
rcl
sub
cmp
and
in
pop
mov
mov
xchg
sub
dec
bound
sub
push
jl
mov
or
jns
jge
or
push
pusha
or
inc
jne
pop
pop
mov
pop
outsl
inc
push
js
dec
enter
lds
add
jge
mov
push
or
push
mov
dec
paddw
dec
and
mov
mov
aaa
std
and
aad
ficomps
inc
outsb
sub
lods
cmpsb
push
test
insb
jns
mov
push
mov
pop
xchg
aad
fildll
clc
dec
xchg
clc
adc
stc
xor
sti
and
push
and
sbb
and
lods
push
jb
cmp
inc
aad
mov
lea
push
nop
mov
ret
jle
insl
ret
jae
adc
jl
or
pushf
xor
sub
pop
push
push
jge
inc
test
inc
xor
push
les
in
mov
mov
lock
mov
movsb
sub
fnstenv
cmp
aam
mov
lods
test
ljmp
adc
jb
add
push
test
jecxz
pop
jle
xor
das
cwtl
fwait
ljmp
jno
mov
fisubrl
pushw
push
pop
add
jl
add
stc
ds
loop
aam
clc
gs
and
pop
mov
mov
mov
fsubr
test
xchg
add
dec
scas
sbb
pop
rcl
fsubl
sbb
and
int
cld
push
xorl
rolb
fmuls
std
pusha
xor
insb
sbb
sub
leave
jmp
or
sbb
sub
mov
pop
dec
sbb
and
push
lcall
xor
enter
cmp
fucom
cmp
jecxz
movsl
les
js
jle
cmp
dec
xor
pop
dec
or
stos
mov
outsb
mov
adc
fstp
inc
mov
cli
mov
mov
fldenv
cmp
push
sbb
sub
push
out
imul
imul
pushf
imul
xorl
push
sub
mov
popa
mov
fisubs
test
loope
pushf
dec
xorl
loop
add
mov
fbstp
repnz
out
or
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
mov
or
mov
enter
add
push
cwtl
mov
fs
lret
shrl
dec
call
xchg
mov
xchg
pop
pop
and
xchg
xor
popf
xchg
and
movhlps
repz
sti
mov
and
mov
out
cltd
inc
hlt
pop
or
fistpll
adc
andl
ds
cmp
insl
out
std
mov
cmp
scas
jbe
or
loope
popf
std
shll
xlat
rcrl
push
arpl
ljmp
jns
mov
js
jmp
mov
loope
out
stos
scas
cmpsl
fwait
nop
negb
pushf
movsl
mov
adc
mov
sub
mov
cmp
dec
sbb
jae
jg
xchg
out
add
loop
pop
and
pop
lcall
popf
in
stc
mov
vfmsubadd213pd
imul
xchg
mov
jae
dec
sbb
stos
bound
mov
fmulp
int3
dec
add
xchg
add
int3
pop
scas
enter
pop
divl
sub
mov
loop
aaa
xchg
repnz
dec
loop
sub
and
fisubl
mov
enter
pop
sub
cmpsl
scas
xor
lret
in
test
jnp
adc
lret
nop
loopne
je
add
pop
inc
or
loope
dec
xlat
xor
dec
sbb
mov
mov
mov
addl
and
fisubs
inc
pop
mov
xchg
nop
or
lods
pop
dec
out
pop
les
scas
int3
push
sbb
out
loop
gs
mov
rcll
das
push
je
adc
leave
sub
add
add
cmp
ss
repz
inc
repz
lahf
inc
repz
or
ret
outsb
dec
mov
sti
dec
lret
fidivrl
sbb
js
mov
adc
mov
mov
nop
add
cs
shrl
rorl
mov
test
fstl
shll
cmpsb
stc
xor
adc
sbb
mov
adc
or
lret
cli
add
pop
pop
jae
jmp
mov
int
xchg
fucom
rorb
aam
pop
cmp
rclb
outsl
mov
mov
add
cltd
xchg
push
push
ret
sbb
ljmp
jns
xchg
icebp
and
ds
movsb
shll
pushf
jb
add
cld
xor
add
jmp
fistl
loope
lds
add
add
jo
jle
jo
loop
lcall
or
pop
mov
push
add
and
jae
cmp
sahf
adc
push
cmp
cmp
mov
into
cmp
mov
cmpsb
cmp
loop
mov
aaa
idivb
jns
dec
add
sti
sbb
test
mov
sub
fwait
adcb
sbb
sub
stos
loop
movsb
cwtl
into
xchg
pop
out
cmpsb
jbe
sbb
lcall
icebp
insb
push
push
sub
sub
mov
fnstsw
adc
jmp
in
or
ss
nop
push
iret
or
mov
dec
aaa
jbe
inc
xor
inc
or
mov
pop
xor
insb
sub
outsb
inc
or
xor
lcall
sub
xchg
mov
mov
imul
jne
sahf
jns
cld
js
ljmp
fdiv
rol
push
adc
lds
inc
ja
inc
mov
push
nop
push
and
cmpsb
jns
xor
add
push
les
faddp
pop
jle
mov
sbb
cmpsb
mov
add
jecxz
lods
or
push
aam
sarl
push
mov
pop
xor
arpl
lds
rcll
push
addr16
sbb
mov
cli
loop
out
jmp
jae
cs
ret
sbb
inc
icebp
mov
or
jo
aaa
jns
fisubrs
mov
push
rorb
sbb
jg
sbb
sub
pop
inc
mov
in
inc
sub
pushf
movl
das
sbb
pop
shrl
xchg
shll
sbb
cwtl
shrl
enter
leave
js
fldl
cmp
mov
test
pop
gs
lods
pushf
mov
sub
lcall
dec
es
mov
loop
pop
sbbl
or
and
mov
bound
insb
lock
push
sarb
adc
ss
mov
fldl
or
daa
fxch
retw
add
cmp
fwait
dec
add
push
push
aas
jb
fcomip
hlt
sub
out
add
aam
xor
pusha
xor
sti
clc
push
inc
ss
lret
and
or
ja
enter
loopne
inc
cmp
mov
jecxz
arpl
pop
mov
aam
push
jecxz
inc
jns
jns
aaa
es
in
leave
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
mov
adc
jo
jle
jo
dec
sub
cwtl
jle
adc
arpl
cmp
xlat
mov
stos
pop
dec
add
arpl
sbb
jb
mov
iret
dec
stos
jl
js
icebp
cltd
cmp
std
xor
jecxz
flds
and
in
mov
test
mov
sti
fwait
imul
rclb
loop
cmp
jne
xor
inc
lsl
lahf
mov
mov
shrl
pop
arpl
out
clc
arpl
inc
dec
loop
cmp
fdivs
add
dec
add
xchg
and
xchg
cmp
push
add
mov
arpl
out
nop
jp
std
imul
and
flds
or
mov
rcrl
cmp
lds
neg
mov
fildll
xor
iret
mov
ficoml
push
add
jg
call
sub
mov
lods
icebp
push
push
fildll
aaa
ret
sti
out
inc
test
out
mov
aam
dec
mov
push
mov
mov
cltd
mov
stos
xchg
dec
sub
jmp
out
nop
add
cwtl
xor
or
pop
xchg
dec
inc
mov
cli
or
aaa
ss
dec
sub
inc
xchg
sbb
aam
int3
popa
mov
mov
dec
pusha
gs
adcl
test
stc
repnz
movsl
rorl
sbb
jp
stos
orl
and
insl
sbb
jmp
enter
ret
cmp
lock
decb
testb
fldt
mov
add
es
xor
js
out
rcll
jmp
xlat
pop
shll
xor
shr
js
add
flds
xlat
mov
xchg
out
jnp
and
in
pop
loop
or
pop
loop
sbb
mov
mov
cs
outsb
sbb
xor
js
cmp
lahf
cmp
dec
ljmp
es
dec
inc
mov
mov
xor
or
insl
sbb
add
test
sub
repz
enter
bound
outsl
mov
bound
adc
shl
cmc
out
dec
add
ficoml
scas
xchg
push
push
and
or
xor
stos
or
xchg
mov
mov
adcl
mov
adcb
pop
scas
nop
and
icebp
adc
popf
jnp
dec
push
scas
adc
dec
cld
ret
popa
xchg
pop
cmc
adc
mov
lahf
roll
dec
mov
rclb
test
mov
mov
fs
test
addr16
fsubs
test
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
lods
sub
js
jo
cmp
mov
dec
pusha
adc
adcl
arpl
add
addb
add
aaa
enter
cwtl
mov
jb
fs
repz
test
pop
sbb
fstps
mov
fdivrl
dec
fstp
mov
imul
xor
les
jno
xlat
push
je
and
je
pop
mov
repnz
inc
pop
in
lds
dec
push
pusha
lahf
or
mov
jae
pop
test
sbb
fsubrl
jno
fisttpl
jae
push
sub
je
push
ret
jmp
fists
pop
lods
or
sub
cltd
sub
dec
cld
sub
adc
jmp
out
inc
jmp
adc
jmp
jge
xor
pop
fdivl
push
push
mov
bound
push
mov
jg
fmull
jge
sub
imul
fsubrs
jecxz
mov
loop
or
cmpsb
lods
and
push
or
scas
dec
jbe
loopne
outsl
popl
rcr
push
pusha
mov
jno
fldl
clc
ret
sarl
or
or
mov
mov
leave
dec
push
jle
aas
push
insb
xchg
mov
sbb
in
lods
inc
mov
jnp
cmc
dec
sub
adc
or
ljmp
push
jl
jne
and
add
out
fstp
mov
loopne
cltd
pop
dec
sub
push
leave
aas
dec
pop
push
scas
xchg
inc
js
ret
shrl
push
popf
jae
mov
sub
push
xchg
add
or
sub
arpl
stc
stos
jl
loop
cmc
mov
add
or
fwait
mov
and
ret
pop
outsl
and
faddl
jns
xchg
sarl
xchg
addr16
sti
lcall
stc
cmp
std
test
mov
jl
dec
lods
sub
pusha
adc
jo
lea
aad
js
fsubrl
cmp
aaa
enter
scas
ret
xchg
lret
clc
xor
lea
xchg
icebp
cld
rcl
mov
mov
push
insb
add
stc
sbbl
dec
rolb
cwtl
xchg
mov
and
ljmp
xchg
inc
or
rcrl
shrb
push
fadds
int3
test
test
stos
sbb
leave
pop
add
sti
sbb
int
aam
dec
clc
pop
pop
pusha
ljmp
sbb
loope
push
dec
out
dec
push
mov
cmp
js
int
dec
push
jnp
cltd
sub
shlb
sbb
ret
jp
pop
inc
add
mov
sub
xlat
imul
jecxz
cltd
adc
mov
mov
pop
mov
cmp
fs
mov
mov
sbb
mov
andb
xor
and
out
add
mov
sub
movzwl
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
sbb
push
jo
cmp
mov
mov
jbe
daa
adc
add
cmp
mov
jl,pn
pop
or
leave
stos
iret
mov
inc
in
adc
scas
repnz
lcall
les
mov
cmpsl
in
les
insl
xchg
lret
cltd
pop
icebp
pusha
data16
ds
or
jp
js
mov
es
add
fildl
icebp
inc
jle
sbb
lds
testb
loopne
xchg
loope
cmc
sub
movsl
sarb
xor
arpl
jp
mov
pop
lret
std
sub
dec
rclb
ret
ljmp
loope
lret
mov
stos
sarl
dec
enter
addr16
div
mov
cmp
mov
add
mov
and
leave
inc
pop
pop
mov
push
test
mov
dec
mov
iret
push
int
lods
push
nop
aaa
shl
das
cmp
jmp
out
cmp
jbe
push
jl
add
ljmp
sub
js
pop
arpl
loop
rcl
dec
test
sahf
xor
jle
sbb
rol
adc
dec
sub
cli
add
daa
outsl
jbe
iret
enter
rcl
fimuls
in
movsl
fs
mov
scas
ret
mov
mov
adc
dec
pop
test
cs
dec
cwtl
hlt
leave
mov
out
inc
push
in
test
inc
adc
js
ds
dec
cmp
hlt
outsb
sti
nop
leave
lret
mov
orl
sbb
jae
cwtl
add
mov
into
nop
inc
lods
aas
mov
jmp
lock
mov
and
in
orb
or
inc
adc
push
ds
das
jne
push
jl
fs
not
shrl
loop
lds
push
rcl
out
fsubrl
xorl
adcb
lcall
lods
or
dec
int
stos
cmp
repz
mov
jmp
imul
in
inc
shll
push
rep
jae
notl
push
scas
mov
xchg
add
je
out
cmp
push
mov
xchg
mov
sbb
out
add
fsubrs
cmp
mov
mov
cmp
jnp
xchg
shlb
push
or
jle
dec
push
inc
in
clc
insb
mov
fildl
out
sub
outsl
sub
fistpll
xor
sbb
nop
pop
push
jbe
xor
fistpl
push
rorl
imul
mov
lods
data16
not
sbb
inc
jmp
push
push
mov
in
rcrb
es
or
mov
inc
inc
fwait
leave
mul
lock
inc
or
xor
ja
outsb
rcrl
push
ds
sub
bound
sub
and
jae
std
xchg
xor
and
movl
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
imul
jge
jo
jl
mulb
into
mov
iret
xchg
stc
addb
test
cmp
push
jo
mov
and
or
hlt
idivl
pop
divl
loop
jns
cmp
loope
lcall
jmp
cmc
andl
mov
cmp
ror
enter
sbb
aam
or
push
insb
pushf
mov
push
out
enter
sub
dec
lret
clc
xor
loope
or
sub
jnp
pop
jmp
dec
cmp
rclb
jge
pop
mov
push
lods
mov
mov
xor
pop
xor
and
push
dec
or
pop
or
leave
xchg
or
test
shrb
imul
out
push
jge
cmp
lds
testb
cli
inc
popa
dec
jmp
gs
add
inc
shlb
mov
mov
clc
xor
mov
push
repz
add
mov
mov
repnz
adc
jmp
pushf
push
inc
bsf
jns
pop
xchg
push
imul
and
jg
xchg
inc
popa
aad
pop
jle
mov
roll
repz
jge
push
cwtl
xorl
outsl
insl
inc
jmp
das
or
sub
cmpsb
stos
dec
dec
arpl
xchg
jg
lds
fsubl
mov
sub
mov
push
adc
pop
adc
xchg
mov
mov
test
mov
icebp
sbb
sbb
sbb
push
scas
push
mov
and
lea
sub
mov
ljmp
push
aam
loope
stos
addl
mov
jp
clc
cld
xlat
cmp
xor
testb
push
lret
imul
sbb
pop
jl
mov
xlat
loope
mov
inc
jmp
lret
jl
pop
rorb
and
int3
cli
into
pop
stos
testl
ljmp
push
mov
push
jecxz
xor
adc
push
clc
mov
out
push
hlt
lret
insl
adc
pavgb
pop
dec
pop
cld
sbb
adc
ljmpw
test
jmp
pop
scas
lods
xor
mov
leave
call
pop
std
xchg
jb
xchg
cmp
test
mov
xchg
mov
push
lock
shll
fimull
imul
cs
stc
lfs
push
pop
in
mov
les
xchg
lock
pop
fistl
push
adc
popf
inc
pop
lret
adc
popf
dec
fstpt
test
and
lods
xchg
imulb
repz
mov
es
lock
cmp
push
iret
int3
loopne
cmp
jne
rorl
xor
mov
xor
xor
mov
mov
mov
xchg
sub
ds
mov
pop
fstl
inc
adc
les
outsb
rolb
clc
inc
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
fsubrs
dec
sbb
cmp
cmpsl
test
stos
das
add
lods
outsl
fs
sbb
pop
inc
in
addr16
jbe
cmp
jbe
loopne
call
mov
out
xor
shll
fisttpll
lret
sahf
mov
pop
es
dec
scas
mov
pop
push
xchg
out
lahf
inc
aad
insb
mov
push
xchg
lea
sub
cmpb
inc
ror
mov
clc
sbb
dec
adc
mov
insb
cs
jge
and
mov
pop
mov
roll
fisttps
sbb
rcrl
sub
xchg
dec
pop
inc
stc
cli
or
hlt
lock
or
hlt
leave
nop
repz
xor
mov
test
xchg
sbb
outsb
mov
adcb
xor
mov
sbb
cmpb
xchg
movsl
and
jnp
inc
mov
arpl
mov
je
call
sbb
arpl
into
cwtl
lahf
movsb
mov
add
xchg
aad
or
test
hlt
loope
push
cmc
fcmovu
movsl
imul
jno
dec
xor
iret
fldenv
dec
outsl
add
mov
sbb
movsb
mov
mov
stos
in
out
jae
mov
jne
mov
add
aam
and
iret
dec
push
aad
pop
cmpsl
xchg
mov
lea
mov
setbe
push
addl
cmp
sub
push
xchg
pop
popf
scas
jle
sub
dec
loopne
std
lret
mov
cmp
das
imul
rclb
scas
pop
pcmpgtd
jmp
mov
lret
or
orl
sbb
jl
pop
rcrl
jg
and
cmpsb
sbb
notl
cld
inc
cmp
mov
nop
movsb
subl
fmulp
inc
bsf
insb
sar
dec
push
xor
sbb
adc
jecxz
into
dec
clc
enter
add
scas
or
into
xchg
fimull
repnz
cmpsb
in
lcall
or
mov
mov
addr16
mov
fwait
leave
cltd
xlat
nop
jb
sbbl
mov
adc
addr16
xorl
inc
ds
outsl
lcall
shlb
cmp
mov
scas
repnz
mov
repnz
sub
pop
ja
lods
push
negb
testl
lcall
sbb
push
dec
pop
cmc
mov
xor
cmp
push
xchg
mov
mov
and
mov
cmpsb
pop
adc
add
fidivs
sbb
sbb
xchg
inc
xchg
mov
popa
xchg
or
mov
aaa
mov
add
mov
and
xchg
jle
sbb
mov
fsts
imull
inc
cmp
stc
ret
hlt
stos
or
in
outsl
out
mov
pop
int
test
ret
loopne
insl
pop
mov
inc
divb
mov
jb
and
mov
jmp
push
jge
add
jb
inc
sbb
pop
sub
or
jo
cmp
test
pop
bound
test
rorl
add
bound
pusha
out
cs
pop
and
push
add
mov
subb
or
pop
jo
daa
ss
xlat
jg
std
imul
sbb
outsl
xchg
cltd
xor
test
sbb
cmp
je
cmpsb
imul
xchg
pop
jo
pop
inc
adc
and
rcll
add
adc
test
mov
mov
mov
mov
hlt
inc
mov
test
fwait
loope
adc
sub
mov
sti
xchg
sbb
stc
add
xchg
dec
test
gs
fstcw
cmp
sub
pop
pushw
in
add
sarl
fidivrl
and
inc
dec
cmpl
aam
jmp
and
jecxz
sbb
pushf
pusha
dec
shlb
pop
push
out
lods
and
addl
mov
mov
mov
imul
sarb
into
fsubs
mov
dec
xchg
cmp
push
cmp
or
icebp
jmp
mull
mov
into
lret
mov
cmp
sub
outsb
in
ret
inc
aaa
adc
ret
mov
iret
mov
pop
pop
fwait
and
inc
cli
mov
shl
push
jo
dec
xchg
aaa
fwait
ror
jmp
bound
mov
loope
mov
sub
mov
pop
lret
mov
cmp
mov
aam
inc
js
std
leave
stos
cld
push
popa
int
mov
push
inc
pop
mov
adc
mov
mov
iret
nop
call
jb
insb
lods
loop
leave
out
ret
sbb
dec
int
mov
je
ret
mov
xchg
and
inc
icebp
nop
std
xor
xlat
mov
decl
fsubs
int
jge
stos
add
movsb
pop
sub
les
sarb
imul
ja
mov
sarl
jae
sub
xor
aaa
out
cmpsl
ja
mov
push
cmpb
xchg
or
sbb
inc
xchg
scas
ret
int3
jbe
pop
js
outsb
mov
pop
and
call
sub
jb
mov
adc
loope
xchg
sub
xchg
add
push
xor
jmp
loopne
lods
filds
and
dec
push
cmp
push
test
pop
repz
rorb
and
sub
in
push
mov
or
add
ret
movsl
add
outsl
outsb
jg
iret
daa
jns
push
mov
sub
push
mov
ffree
mov
clc
insl
sub
aad
ret
test
inc
ficomps
lds
sub
scas
jl
sbb
dec
inc
insl
fldl2t
jl
movsb
push
sarl
clc
movsb
test
int3
int
addr16
iret
fldl2e
cmpsl
repz
mov
cmpsl
fiaddl
mov
rolb
inc
jmp
mov
mov
xchg
sti
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
xchg
repnz
leave
and
cmp
scas
lcall
sarl
jg
adc
or
mov
or
jo
add
jo
or
jl
pushf
orb
sahf
test
fmuls
std
inc
jne
ss
mov
cmpsb
pop
add
push
out
dec
lahf
pusha
in
push
push
iret
dec
adc
jno
adc
pop
test
movsl
lods
mov
inc
std
mov
mov
fcompl
inc
insl
test
mov
xchg
aad
cmp
xchg
xorb
loop
int3
scas
or
xor
pushf
sbb
rcrb
add
out
in
or
jnp
ret
xchg
mov
mov
mov
mov
out
int
jbe
dec
fcoms
fcomi
cmc
insl
sub
ret
sti
add
sarb
call
outsb
mov
push
mov
xor
mov
pop
push
ss
aam
ljmp
das
sub
jnp
cmpsb
jno
add
jbe
test
les
stos
jb
std
insb
test
fdivl
in
daa
cld
sub
imull
cmc
dec
fcmovu
cli
jne
insb
xchg
push
int
sub
xor
jns
pushf
shll
and
push
dec
jge
test
popf
mov
mov
bnd
enter
fwait
ja
xor
iret
push
es
xlat
jmp
xchg
cmp
sub
cwtl
sub
adc
push
xchg
popf
mov
adc
xorl
mov
inc
xor
sbb
dec
xchg
std
sbb
add
mov
into
pushf
add
mov
fbld
cmc
pop
scas
js
fdivl
fsubr
sbb
cmpsl
xchg
and
insb
push
mov
repz
sub
lds
fadds
sbb
arpl
into
jle
xchg
pop
lods
cmp
negl
add
fidivrl
add
xchg
mov
scas
fst
mov
push
jle
mov
jne
push
out
dec
insl
stos
movsl
xchg
cmpsb
pop
xchg
dec
push
pushl
xchg
ret
dec
bound
and
pop
xchg
cmp
repz
enter
iret
aad
adc
sub
or
xor
xor
sub
push
add
lds
imul
pop
cmp
out
imul
in
jae
and
push
add
pop
mov
out
mov
adc
test
ja,pt
sub
cs
dec
into
mov
pop
test
repnz
rorb
xchg
fwait
sub
aas
aam
mov
cmp
xchg
jl
adc
mov
clc
and
imul
ret
pop
imull
or
push
andl
ret
cmp
fsubl
mov
lret
mov
sbb
lret
js
jecxz
dec
popf
repnz
xor
shll
orl
or
push
dec
scas
pop
aam
pusha
imul
add
dec
mov
ja
sub
ljmp
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
outsl
pop
push
xchg
jo,pn
cmp
cmpb
fnstenv
jbe
imul
sbb
push
popf
inc
stos
aaa
pop
mov
cmpsl
aaa
push
inc
and
test
xor
inc
cmpsb
mov
dec
pop
mov
mov
push
les
mov
xor
pop
leave
insl
push
jecxz
pop
call
popf
aaa
add
push
fwait
lds
aad
insl
dec
or
jecxz
fisttpll
sti
push
sbb
dec
xchg
cmp
in
jg
outsb
cmp
xchg
adc
xor
out
mov
stc
mov
pusha
adc
stos
scas
jp
and
repnz
shlb
lret
sahf
cmp
mov
out
je
dec
push
sub
sahf
pop
call
adc
xor
arpl
dec
jg
pop
jae
push
iret
test
test
cmp
add
jns
sbb
and
sti
push
push
dec
xchg
mov
loop
inc
pop
push
pushf
pop
pop
mov
pop
pop
dec
cmp
mulb
das
add
adc
xchg
jnp
cli
cmpsb
dec
aaa
xchg
cli
mov
xchg
jae
mov
outsb
cmp
mov
lahf
push
or
fstl
loop
sbb
sbb
xchg
movsl
and
and
lds
in
divl
lret
stos
fcmovne
mov
outsb
jecxz
insb
mov
mov
sbb
iret
outsb
or
inc
fwait
lret
lret
inc
cmpsl
je
pop
mov
cs
cltd
movsl
pop
and
sub
icebp
sub
sub
xor
inc
push
sti
js
iret
jg
scas
bound
and
mov
test
pop
cmpsb
jns
sahf
mov
rorl
sub
dec
jae
mov
mov
mov
sti
lods
outsl
inc
out
pop
cld
pop
dec
aaa
sti
out
mov
enter
jne
rcrl
insl
cmc
add
mov
push
ja
fcomip
or
out
sub
sub
pusha
mov
mov
mov
cmp
test
rclb
and
ret
inc
xchg
or
aas
xchg
in
and
mov
insl
popf
lods
mov
push
in
fstpl
mov
test
out
daa
pop
lret
ret
lahf
add
repnz
leave
icebp
jg
xorl
fsubrp
mov
std
aad
sbb
inc
pop
push
sub
jecxz
and
jle
pcmpeqw
push
insl
push
and
inc
push
sbbl
mov
loop
pop
outsb
fwait
inc
push
mov
sti
jmp
lods
jge
popa
shl
and
xchg
inc
adc
or
and
ror
call
ss
testb
aad
leave
cmp
imul
and
jl
ljmp
int3
es
xor
jbe
out
push
mov
mov
and
mov
xchg
cmpsl
push
cwtl
xchg
mov
inc
sbb
cmp
repnz
sbb
add
mov
mov
sub
jne
or
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shrl
jo
cmp
mov
lahf
cmpsl
cmp
jb
push
and
xlat
test
sbb
mov
inc
inc
loope
dec
call
push
mov
xor
xchg
xchg
add
imul
mov
out
or
mov
add
sub
and
xchg
loopne
cmc
sahf
mov
mov
push
inc
sar
cmpb
ljmp
adc
sbb
fisubs
inc
ret
inc
cmp
xor
das
movsb
jae
and
push
mov
aas
push
add
push
out
dec
mov
cwtl
push
shufps
jbe
sub
sub
xchg
cmp
addl
lock
outsl
fnsave
inc
mov
repnz
cmp
cmc
lret
push
lods
pop
loop
sub
mov
or
outsl
mov
icebp
cmp
xchg
mov
notl
jmp
movsl
push
or
hlt
mov
or
ret
inc
clc
jp
mov
inc
enter
test
dec
testb
sub
aaa
jb
adc
push
mov
or
mov
xor
push
mov
fsubl
xchg
insb
push
xor
cmp
les
sbb
jl
sbb
in
clc
ret
and
cltd
push
xchg
jecxz
sbb
add
pushl
jge
es
xchg
xchg
roll
insl
sbb
mov
cmc
xchg
jne
push
jno
scas
frstor
push
xchg
cmp
dec
sbb
sbb
jae
lahf
lock
sub
mov
loop
add
pop
lods
cs
clc
std
lods
mov
xchg
jno
fisttps
lods
and
push
jns
jo
add
mov
icebp
pop
push
adc
stos
inc
aam
xchg
fdivrp
imul
out
inc
scas
nop
fadds
ja
cmpsl
push
cmp
fcomip
inc
fwait
cli
mov
adc
sbb
int
pusha
stos
sub
rorb
add
jg
jp
int3
stc
push
stc
xchg
push
mov
xchg
repz
inc
lret
ljmp
mov
std
mov
rolb
stos
lods
mov
divb
inc
pushf
subl
inc
dec
aas
pop
or
pop
lret
call
iret
mov
xchg
cmc
add
sub
xor
shll
mov
jecxz
mov
adc
or
push
or
mov
and
mov
push
sbb
les
jl
and
pop
pop
ficoms
mov
add
and
rcrl
scas
cmp
add
out
dec
jmp
ss
daa
or
jnp
dec
pop
sbb
or
arpl
inc
insb
mov
lret
test
bound
sbb
int3
cltd
pop
pop
cld
mov
add
sbb
out
test
loope
mov
xor
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
rorl
jo
jle
jo
and
inc
ret
movups
mov
push
xor
push
movsb
pop
sub
movl
sarb
addr16
sti
xor
lret
rcll
pusha
or
xor
mov
mov
ljmp
lahf
inc
sti
rorl
xchg
ds
push
es
ret
inc
idiv
imul
insb
push
xchg
add
adc
adc
lcall
popa
push
xlat
ds
pop
je
movsb
stos
sub
imul
push
outsb
jge
addr16
sbb
lcall
imul
stos
sti
mov
and
push
dec
dec
and
insl
nop
push
mov
push
outsb
dec
push
mov
or
and
inc
test
add
dec
mov
jno
das
shlb
xor
loop
sub
rcrb
fnsave
pop
dec
fwait
push
mov
movq
inc
daa
mov
movsb
ror
andl
mov
or
or
pusha
mov
test
in
shrb
push
popaw
andl
xor
enter
mov
in
jp
xchg
sbb
int3
mov
js
mov
dec
jo
and
fsubrl
jmp
pop
or
dec
pop
inc
or
shlb
popa
mov
push
adc
cmp
adc
lods
jns
mov
mov
mov
mov
out
hlt
into
xor
stc
fwait
ljmp
mov
lods
and
dec
xchg
and
sbbl
and
or
mov
lret
jb
pusha
push
stos
sbbb
addb
cmp
jg
loopne
fdivr
loop
push
adc
add
js
xlat
mov
aas
push
mov
cmpsl
arpl
ret
pop
test
addb
or
stos
test
test
scas
repz
aaa
add
je
in
add
mov
adc
mov
ret
dec
and
inc
push
and
outsb
outsl
mov
adc
out
aam
imul
cs
fildl
bound
bound
or
ret
data16
sbb
fcmovne
add
mov
jge
insl
xlat
clc
sar
jne
mov
mov
es
pop
je
jmp
lds
pop
jno
lcall
cmp
jns
fdivl
dec
loopne
pusha
rolb
mov
sbb
mov
xchg
inc
add
add
mov
jmp
ja
and
dec
xchg
adc
dec
xor
jo
mov
xchg
rclb
pusha
inc
xchg
pop
out
lds
pop
gs
mov
jle
cmpsl
sbbl
cmc
ja
jg
mov
mov
cmp
inc
andl
adc
or
cmp
nop
mov
jmp
jo
and
xchg
sub
dec
mov
push
jmp
and
or
mov
fisubl
out
insb
or
dec
push
mov
pushf
repz
add
mov
aam
add
les
mov
jae
mov
cmp
and
and
sub
sbb
add
adc
dec
and
sbb
xchg
or
or
stos
mov
leave
jmp
call
and
scas
ds
sbb
in
mov
movsl
pop
out
push
adc
fld
lcall
xchg
test
je
inc
push
outsb
mov
push
jl
mov
jmp
dec
sub
xlat
push
cmp
das
pushf
mov
push
and
roll
int3
jge
or
lcall
rcr
sbb
mov
push
test
xlat
inc
cmp
pop
les
in
xchg
aad
out
int
jge
push
xor
xor
push
mov
inc
idivb
inc
mov
mov
rcrb
aam
iret
ljmp
jge
call
and
stos
push
add
in
pop
lret
jo
ss
cld
mov
adc
rcrl
rcr
mov
sub
jnp
adc
push
cs
dec
xchg
lock
mov
dec
imul
xlat
daa
mov
cmpsl
loop
pop
orl
int
aaa
push
dec
data16
sub
jb
stos
xchg
loopne
sahf
push
xor
arpl
and
cmpsb
add
jl
lcall
jns
aaa
mov
push
jb
mov
rcl
es
je
sub
shlb
push
into
mov
mov
mov
in
pop
test
mov
in
sub
xchg
out
mov
in
inc
icebp
in
jbe
jb
stos
jnp
cld
mov
adc
mov
add
in
fldt
mov
scas
repz
stc
insl
pop
cmpsl
sub
gs
fildl
cmc
pusha
test
push
sbbb
inc
dec
adc
or
inc
cmpsb
jl
xchg
in
lret
mov
lds
mov
loope
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
cmpsb
pop
test
jo
stos
jle
jo
neg
push
shrl
cli
jge
pop
popa
push
aaa
fstpt
insl
mov
out
leave
push
jl
jbe
lods
in
pop
sbb
movsb
lret
mov
movsb
test
imul
sub
mov
push
mov
loopne
out
sbb
pop
idivb
and
sub
xchg
cmp
cmp
push
jg
dec
sbb
aad
jp
dec
mov
or
xor
cmp
stos
xlat
cwtl
ljmp
es
decl
sbb
jno
cmc
sub
and
push
mov
lcall
lret
push
jne
adc
xor
movsb
addr16
dec
es
mov
adc
or
or
jge
jp
jmp
in
xchg
pop
sub
stos
xchg
push
push
sbb
fdiv
fistpl
adc
mov
out
mov
cwtl
cli
sub
mov
mov
dec
inc
mov
xchg
imul
pop
mov
fs
push
and
out
leave
sub
popf
mov
sub
ljmp
cmc
lret
sbb
push
cmpsl
hlt
sbb
mov
push
rorl
gs
dec
cmpsb
pop
mov
mov
adc
pop
hlt
adc
pusha
pop
cmc
ss
adc
mov
mov
adcl
mov
cld
mov
imul
imul
fstl
mov
gs
cmp
popf
cmp
inc
push
ss
mov
fistl
or
and
push
subb
jae
inc
xor
cmp
mov
jg
aad
pop
leave
cli
push
and
lcall
xor
xchg
repz
add
add
mov
cmp
jecxz
sti
je
add
subl
lods
shlb
fmuls
std
sub
pop
in
inc
sbb
flds
xchg
das
cmpsl
pop
iret
in
test
add
mov
dec
sub
adc
xchg
dec
out
jl
jg
cmpsb
test
inc
jb
dec
rcrl
test
sbb
out
dec
lret
or
mov
dec
je
sbb
loope
xor
or
insl
insb
mov
dec
or
lret
dec
testl
cmpb
adc
dec
xchg
fs
cmp
push
adc
aad
jge
rclb
xor
pop
mov
xor
jbe
push
mov
call
mul
lret
dec
outsl
fstpl
mov
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
das
mov
ds
jo
cmpsl
jg
jo
sbb
cmc
push
xlat
daa
int
dec
pop
je
jl
cmpsl
and
xor
sbb
and
xor
jno
aad
adc
movsb
movsl
add
inc
mov
decb
jle
insb
arpl
mov
cmp
mov
aaa
jbe
xchg
lds
ret
cmp
cmpsb
jl
int3
data16
jns
addr16
sub
mov
mov
mov
inc
imul
jbe
cmp
mov
das
jne
jle
sbb
xor
loope
jns
std
out
movl
fisubrs
ret
int3
mov
mov
outsb
dec
lds
sbb
pop
aad
jns
loop
int3
clc
sbb
sbb
mov
fxch
jl
push
cs
or
stc
mov
cld
daa
fadds
cli
fimull
jmp
inc
cmp
lcall
pop
and
fiadds
xchg
mov
mov
sbb
or
push
mov
add
inc
repz
loope
cmp
xor
adc
xchg
pop
enter
mov
in
leave
sub
cltd
dec
lods
xor
sub
xor
sub
dec
int
imul
inc
clc
push
adc
pushf
push
not
sahf
ljmp
add
sbb
push
in
fldcw
adc
incb
inc
mov
nop
push
dec
mov
dec
jecxz
sbb
inc
mov
xor
jae
pmulhw
mov
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
hlt
gs
cmpsl
jg
jo
subl
mov
fistpl
nop
push
rcrl
sub
iret
sbb
fisubl
jp
out
mov
movsb
inc
jb
xor
xchg
or
push
fstps
jecxz
mov
inc
jae
outsl
insb
iret
lock
lock
jp
sahf
jbe
or
sbb
add
add
lods
std
js
popf
imul
arpl
sahf
or
xchg
leave
xlat
movswl
sbb
cmpsl
adc
aam
xchg
shlb
add
out
fimuls
cmpsl
mov
out
xor
stos
sub
lods
ljmp
sbb
lret
xchg
lahf
enter
pop
cli
pop
jns
lds
push
adc
xchg
jg
cld
xor
loope
decl
mov
xor
pop
outsl
add
add
add
pop
sub
add
inc
out
cmc
sub
data16
or
mov
mov
sub
cmpb
and
push
push
fldcw
add
xor
stos
inc
adc
add
pop
cli
stos
fwait
xlat
xchg
mov
xchg
ja
pop
sub
clc
inc
xchg
addr16
rcrl
scas
jl
push
lret
jmp
adc
inc
sub
push
mov
icebp
aas
insl
in
sub
sahf
out
orl
adc
fstpl
push
lret
shlb
movsl
imul
push
push
push
mov
popf
mul
mov
inc
mov
add
mov
mov
stc
js
pop
in
inc
sbb
or
inc
add
inc
or
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
jecxz
jne
mov
jo
jg
jo
es
popa
orb
pop
icebp
pop
stos
mov
inc
mov
mov
cli
sbb
sti
inc
call
movsb
add
cmp
stc
mov
cmpsb
outsb
sbb
test
sti
enterw
dec
push
mov
leave
sbb
or
inc
jae
push
fdiv
lret
xor
adc
movsl
push
jae
inc
sbb
repnz
pop
dec
movsb
popa
enter
mov
std
push
cmpsb
mov
inc
or
xchg
and
push
mov
add
rolb
xlat
rcll
scas
sti
fs
test
dec
jecxz
xchg
mov
xchg
cmp
test
dec
cmpsl
sbb
inc
loopne
cmpb
aad
data16
add
iret
dec
sarl
shld
outsl
aas
xchg
ret
sbb
push
inc
adc
repnz
es
pop
xor
in
pop
call
and
dec
loope
cmpsl
mov
fisttps
pop
fnstsw
jle
mov
or
es
or
mov
or
pop
sbb
test
push
jae
jmp
ja
xchg
test
mov
imul
or
jb
loopne
add
jne
test
daa
inc
mull
int
inc
lahf
add
mov
iret
lahf
and
test
push
fdivrs
lret
mov
insl
and
cmc
cs
sub
or
xchg
and
xchg
push
into
xor
and
mov
sbb
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
loopne
lret
xor
jo
loop
jo
pop
aad
int3
pop
or
hlt
es
sub
cmp
inc
or
jle
adc
mov
jle
std
stos
or
ds
stos
fisttpll
pop
scas
mov
leave
int3
fistpll
mov
cmp
adc
stos
xor
mov
mov
jb
mov
cmpsb
int
rcr
jmp
xchg
push
mov
add
fs
mov
inc
push
or
mov
test
hlt
sub
add
sbb
jns
int
sub
popf
xor
lcall
ljmp
cmp
dec
push
cmp
push
sub
ljmp
push
sbb
xchg
mov
mov
pop
mov
out
mov
pushf
xor
test
mov
cmp
clc
mov
fcmovbe
clc
clc
inc
fmul
cs
call
outsl
fbld
ds
in
add
push
cmp
adc
push
vmovddup
insl
test
jmp
add
mov
jb
jl
mov
push
or
sbb
jg
fildl
jb
push
mov
outsb
mov
xchg
sbb
push
pop
adcb
adc
loopne
and
mov
push
jge
mov
lcall
call
movsl
int3
push
add
cmp
dec
aad
mov
dec
jae
call
cmp
push
popf
shll
sti
fildl
or
and
pop
sub
in
jae
pop
mov
popa
bound
push
aam
mov
arpl
or
cmc
pushf
adc
ret
adc
popf
das
imul
lret
dec
dec
dec
mov
xor
dec
inc
out
inc
decl
sbb
adc
xchg
cld
hlt
push
dec
out
bound
jge
and
aad
addb
lds
pop
iret
push
sbb
addr16
and
sub
pop
or
sbb
jo
mov
test
jo
lret
bound
inc
add
ret
inc
jg
mov
dec
push
fadd
cli
div
test
or
outsl
push
stos
js
inc
push
or
pop
out
sbb
push
inc
jbe
xor
shlb
je
xchg
cmp
mov
ja
adc
adc
xchg
stc
xlat
sub
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
pusha
push
fcmovne
movsl
cmp
loop
jo
std
aas
fsubl
icebp
insl
loope
aad
ret
subl
jmp
xchg
out
mov
insb
daa
pop
xchg
adc
ret
test
xor
jbe
push
fldenv
ret
xchg
lahf
inc
ret
sub
mov
loope
hlt
or
adc
stos
daa
les
fisttps
mov
push
add
stc
xor
hlt
mov
mov
movaps
mov
mov
mov
sbb
outsb
popa
cmp
mov
into
xchg
xchg
push
dec
stc
xchg
push
xor
push
imul
or
test
sub
jno
sbb
jns
add
xor
fadd
fsubrp
test
cld
xchg
loop
test
data16
mov
seta
xchg
rorb
iret
mov
cwtl
call
add
pop
xor
int3
lds
dec
cmpsl
push
ljmp
jg
jp
or
outsb
test
into
xor
push
adc
std
mov
orb
mov
xchg
pop
mov
dec
pop
pop
std
lcall
scas
adc
repnz
xchg
adc
xchg
das
pop
mov
repnz
js
and
lcall
mov
push
aad
popa
adc
andb
negl
jp
cmp
inc
mov
scas
mov
leave
jle
scas
xor
test
or
and
imul
or
mov
inc
pop
ret
les
outsb
out
aaa
aam
xchg
jmp
shr
xor
pushf
add
dec
push
cmpsb
ja
hlt
push
push
ja
ret
les
push
mov
sub
int3
sub
loop
in
xor
jb
aad
jmp
pop
int3
mov
out
pop
or
psadbw
push
add
jno
imul
xor
dec
add
xchg
adc
push
dec
sub
sahf
cwtl
dec
dec
xchg
mov
ret
cmp
pop
sbb
fucomi
add
lods
xchg
pop
cld
mov
pushf
out
mov
fsubs
fimuls
dec
fistps
out
movl
ja
fbstp
jo
addl
ds
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
and
pop
lds
and
jo
add
ror
call
jl
lret
dec
or
dec
mov
adc
pusha
sub
xlat
push
loope
lret
push
ret
pop
and
push
sbb
decb
in
ret
dec
pop
push
int
addb
and
xchg
lea
and
pusha
pop
mov
mov
test
push
jle
fwait
sbb
stos
outsl
adc
xor
xor
mov
mov
adc
popf
adc
push
jnp
push
ret
pop
push
adc
mov
subl
push
into
cmpsl
test
stos
mov
pusha
orl
push
xchg
ss
ds
fildll
jmp
xchg
xor
gs
imul
mov
enter
xchg
sahf
lock
jo
cmp
jge
sbb
ljmp
gs
sub
orl
mov
mov
mov
cmp
dec
mov
je
jg
sbb
aam
out
xchg
push
jp
in
mov
sbb
add
outsb
xor
ss
imul
cmp
scas
nop
jle
mov
addb
aam
fisttps
mov
inc
pop
sbb
rorb
int
cmp
sub
mov
xchg
mov
clc
in
and
inc
sbb
je
jno
lahf
jns
sbb
arpl
fwait
push
push
bound
pop
ret
or
jne
into
jns
pop
stc
mov
xor
dec
ret
add
mov
add
sub
nop
xchg
dec
dec
xor
push
out
cmpsl
loop
jecxz
int
arpl
out
fdivr
jnp
pop
fistpl
fdivr
icebp
push
stos
int3
out
and
mov
and
das
and
mov
and
add
stos
leave
mov
jecxz
cmp
jmp
scas
jle
mov
dec
pop
jnp
aam
out
dec
pop
mov
ljmp
clc
xor
ljmp
int3
xor
push
mov
ret
mov
xchg
mulb
sar
aad
pop
xchg
inc
pusha
pop
or
test
in
push
adc
mov
mov
pop
pop
pop
movsb
jp
mov
icebp
lret
sub
aas
jg
sub
lds
cmp
fildl
iret
dec
dec
in
inc
sbb
hlt
jle
or
pop
or
mov
sub
fadd
sub
mov
cmc
insl
and
cli
daa
mov
es
mov
js
enter
cmp
insb
inc
jno
push
sbb
lcall
test
push
stc
cmc
mov
cmp
xchg
or
fnstenv
adc
adc
int
or
dec
sbb
xor
test
cmpxchg
add
int
pop
push
hlt
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
xor
ret
and
jo
ja
add
fimuls
mov
sub
xchg
inc
fs
insb
sbb
inc
pop
jp
std
int
or
add
cmp
jp
sti
inc
mov
popa
lcall
mov
hlt
popa
cs
test
dec
stos
nop
ret
inc
adc
jns
sahf
inc
and
cmc
loop
jp
or
adc
loope
fdivl
subl
fwait
push
sub
inc
aas
push
imul
push
arpl
je
mov
lea
mov
sub
mov
mov
stos
sub
fwait
stc
scas
mov
mov
pop
mov
in
jmp
in
lcall
push
out
push
sbb
inc
popa
lods
sbb
in
mov
sahf
fneni(8087
and
aam
sbb
or
std
xchg
sbbl
sub
or
pop
sub
xlat
ds
insb
inc
repnz
sub
lret
sbb
mov
enter
aaa
jmp
cltd
push
sarb
dec
out
dec
xchg
iret
add
dec
out
and
lods
in
and
and
lods
pop
pushf
push
inc
sbb
push
out
mov
and
arpl
filds
insb
or
jae
pop
and
jno
push
add
mov
adc
or
xchg
inc
pop
add
loop
mov
loopne
sbb
xor
mov
daa
jo
ret
out
les
pop
pop
psubq
jl
aam
mov
pop
pop
push
or
mov
sarl
xor
sbb
fldcw
rcrb
jle
mov
jl
decl
ljmp
cmp
test
sub
pop
setge
rcrl
jo
xchg
dec
scas
clc
rcll
jne
lret
in
int3
push
push
pop
push
stc
flds
or
push
sub
xor
cmp
inc
das
sub
ljmp
lret
bound
mov
mov
xor
sbb
push
sub
jl
je
pop
dec
mov
or
mov
jae
add
mov
cmpsl
cwtl
stos
xchg
sarb
lahf
pop
loope
sbb
jmp
jne
jne
adc
dec
xlat
pop
aam
cwtl
cmp
xchg
pop
leave
fistpll
lods
mov
adc
lret
fisubrs
lcall
outsb
jb
cmpb
add
push
or
sub
daa
lds
je
cmp
sarl
aas
jp
in
orl
xchg
mov
cmpb
notb
pop
mov
xchg
mov
sarb
push
pop
or
shll
icebp
dec
pusha
sbb
ret
push
mov
mov
aas
jae
push
mov
idivl
pop
out
ret
or
gs
test
pop
mov
cmc
mov
clc
decl
adc
cmp
push
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
bnd
shl
jo
and
jo
mov
xlat
xchg
add
jmp
test
int3
sub
xchg
into
scas
mov
dec
data16
pop
mov
jg
xchg
and
arpl
out
xchg
sti
in
lock
aad
or
xchg
les
adc
cli
jp
cltd
mov
fwait
sub
clc
xor
or
add
out
jo
sarl
mov
shl
jle
lock
pop
das
lret
movsb
xchg
jae
or
dec
into
fcomps
mov
dec
inc
les
insl
mov
or
mov
cmpsl
xchg
mov
push
cmp
xchg
ss
cld
sub
into
lock
rcr
jle
push
mov
and
dec
jg
mov
movsb
ja
addl
mov
jae
xchg
stos
jp
pop
xchg
pop
sub
je
fdivl
push
loop
scas
or
js
mov
jbe
pushw
add
cltd
xchg
mov
shll
aad
js
xorb
mov
shl
das
adc
arpl
imul
jge
cmp
xchg
xchg
mov
cmp
pop
push
mov
push
add
enter
bound
sub
subl
adc
cld
gs
addl
push
mov
orl
stos
pop
jecxz
inc
addl
or
adc
jae
jg
stos
movsb
xchg
cs
dec
dec
lret
inc
lret
lret
in
xchg
and
push
ss
lret
fwait
int
bound
rcrl
shl
movsl
jmp
sbb
out
das
std
add
lods
pushf
nop
pop
sbb
sbb
mov
sbb
push
and
jo
and
xor
loope
mov
mov
insb
mov
arpl
xor
jle
mov
adc
cmpsl
int
cmp
mov
adc
push
dec
aad
add
push
filds
mov
inc
in
fimull
pop
add
mov
xchg
cli
jp
insb
imul
je
outsb
xchg
inc
imul
sub
pop
mov
out
push
dec
imulb
icebp
and
pop
mov
cmc
and
mov
push
and
pop
inc
clc
or
cwtl
or
psubusw
outsb
xchg
pop
push
pusha
mov
lods
imul
test
movsb
mov
mov
lahf
fwait
out
pop
fildll
repnz
jnp
negb
add
lock
cltd
and
stos
add
shlb
fs
sbb
scas
add
rorb
adc
mov
cmp
sub
jae
fdivp
mov
jecxz
sub
int3
fmul
cwtl
unpcklps
jle
idivb
cmpsb
sub
sahf
sbb
xchg
in
cmpsl
inc
ss
addb
in
mov
and
jo
int
mov
insb
inc
mov
inc
movl
cld
add
js
mov
inc
fdivl
movb
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
sbb
jp
cmpsl
int3
jo
and
jo
add
xchg
mov
jo
lahf
lods
int3
jp
xlat
ljmp
sbb
addr16
and
and
fidivl
fcmovbe
int
adc
out
int
mov
mov
xor
shlb
push
loop
mov
xchg
and
jns
dec
push
sbb
and
pushf
mov
add
imul
push
or
mov
cmc
sbb
negb
jl
add
sub
adc
cltd
pop
and
adc
daa
xor
mov
jae
push
sub
xchg
sbb
mov
andl
ja
adc
push
xchg
int3
shlb
push
xor
imul
push
cli
dec
push
pop
xchg
clc
push
in
rcrl
add
push
shl
out
test
popf
adc
xchg
mov
fcoml
mov
jae
lret
push
sti
mov
leave
hlt
push
cltd
repnz
scas
fimull
mov
push
movsb
push
cmc
in
add
idivb
inc
mov
xor
xor
mov
out
outsl
mov
fmul
decb
jle
mulb
mov
xchg
lret
xchg
fwait
or
mov
icebp
add
push
sub
jge
mov
mov
ficoms
or
push
fwait
nop
fimull
cmp
lret
popa
jnp
aaa
sub
mov
pop
fisttpl
jno
sbbb
xchg
mov
fs
fcomps
pop
mov
lret
shrb
pop
xor
divl
add
push
add
insl
arpl
mov
les
fidivs
mov
jmp
arpl
mov
ret
shr
xor
call
outsb
dec
pop
leave
xchg
out
sbb
adc
mov
sbb
aaa
mov
outsb
std
filds
lock
pop
cmp
xbegin
push
into
loope
in
mov
out
cmp
xor
xor
insb
pop
stos
mov
or
movsl
sub
ficoms
inc
pusha
inc
inc
out
out
jb
lcall
mov
test
push
std
int
loop
cli
lahf
cmp
enter
orl
push
push
stos
jns
push
lret
hlt
outsl
in
idivl
inc
xchg
mov
push
cwtl
shrl
xchg
pop
xor
mov
push
mov
lahf
out
lahf
aam
xor
outsb
pop
dec
sub
cltd
testb
rol
les
pop
cmp
dec
xchg
loopne
stc
pop
les
daa
loopne
mov
jne
call
push
mov
imul
fdiv
xor
push
jb
enter
mov
test
idiv
fdivs
pushf
dec
loopne
push
cmp
push
insl
jnp
and
cmp
int3
fcomps
cs
mov
scas
or
dec
dec
xchg
mov
xor
lods
or
xchg
and
mov
jle
mov
xchg
inc
mov
in
lea
add
sbb
sbb
add
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
hlt
les
jo
jge
jo
jp
sbb
xchg
ds
je
sub
cld
and
jp
mov
jg
jae
mov
sbb
imull
dec
mov
xchg
push
les
test
iret
or
xchg
add
xcrypt-cfb
cmpsl
mov
aaa
cmp
addr16
dec
pop
pushf
js
dec
addl
mov
fwait
in
jle
inc
add
xor
sub
inc
push
popf
lea
in
shr
inc
repz
stos
pop
imul
adc
adc
and
loope
xlat
sub
out
cmp
cltd
adc
inc
jmp
cmp
or
pop
mov
mov
xchg
push
inc
pop
cmp
ss
sub
sub
mov
iret
lea
push
mov
jae
sub
mov
inc
frndint
popf
inc
hlt
js
push
push
mov
add
mov
mov
jo
inc
fistps
inc
and
dec
iret
or
pop
call
pusha
jge
cmc
lock
loopne
pop
mov
addr16
and
roll
aad
movsb
mov
jne
das
inc
mov
or
mov
jae
aaa
jge
or
stos
cld
mov
fsts
cwtl
es
int3
mov
xlat
adc
addb
stos
nop
mov
cmpsb
jns
stos
insl
addr16
or
xor
jmp
fwait
ss
inc
mov
cmp
sub
lret
cmc
pop
push
fcoms
stc
pusha
cli
les
loopne
push
pusha
movsl
inc
sbb
fistpl
xchg
add
xchg
mov
push
xchg
cmp
fadds
les
inc
inc
mov
xchg
pop
mov
imul
in
inc
leave
lods
xlat
fimull
jmp
mov
cmp
xchg
inc
sbb
gs
jmp
jecxz
adcl
or
cld
sub
pop
lret
jmp
test
lret
add
mov
stos
out
rclb
mov
sbb
and
pop
in
gs
push
lock
movsb
mov
into
fwait
icebp
push
nop
negb
sahf
pushl
scas
pop
mov
xchg
mov
clc
and
jns
out
mov
dec
cmpsb
jg
jmp
sub
add
enter
test
je
cld
pop
enter
xor
pop
mov
cmp
aad
pop
ljmp
inc
imul
shlb
xor
inc
or
les
mov
and
pmuludq
add
in
add
inc
loope
pusha
sahf
clc
mov
ljmp
or
divb
les
push
les
enter
inc
in
pop
or
iret
xchg
cmpsb
mov
cmp
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
jbe
jns
pop
aad
jo
jge
jo
loopne
ret
out
call
or
jb
divl
ret
out
mov
or
insb
std
lret
clc
push
icebp
stos
and
cmp
jb
imul
xor
jmp
fs
mov
fisttps
add
adc
cli
mov
cmpsl
nop
mov
inc
pop
dec
fdivs
sub
sub
sub
adc
mov
dec
pop
push
push
xchg
pop
xor
mov
xchg
mov
or
sbb
pop
testl
imul
xor
cmpsl
adc
insl
scas
add
lret
dec
ret
jns
pop
daa
sahf
ljmp
fdivr
mov
inc
push
out
push
cmpsb
shrl
push
xchg
test
xchg
dec
mov
or
inc
pop
cmp
push
in
cmp
mov
in
insl
add
sbb
pop
rcll
mov
out
cmc
outsb
inc
cmc
adc
call
add
inc
push
pop
scas
or
mov
int
xchg
sbb
xor
jecxz
inc
cs
mov
std
mov
jge
aaa
test
in
ja
mov
sub
add
adc
mov
adc
xor
xchg
sub
into
pop
inc
add
mov
fisttpl
lea
dec
xor
inc
pop
dec
in
mov
pop
or
mov
dec
dec
std
xor
mov
mov
shlb
and
and
cmp
jnp
lock
and
xchg
jle
ss
fidivs
repz
sti
xchg
js
mov
pop
negl
iret
daa
dec
jae
add
incb
stos
jecxz
clc
mov
push
stos
mov
pop
inc
das
push
pushf
inc
mov
add
push
cmovo
adc
add
iret
cld
arpl
cli
jnp
mov
in
lods
shll
or
xor
jbe
or
test
shl
push
adc
mov
ds
mov
notl
add
sti
xchg
pop
call
test
das
orl
pop
nop
add
stc
mull
stos
jae
call
fmull
sub
add
into
xchg
jbe
imul
or
arpl
notb
nop
ret
cwtl
sub
xor
or
or
shrb
xchg
test
fcoml
inc
mov
xchg
pushf
cmpsb
dec
movsl
cmp
pop
jl
push
pop
cmpsl
inc
ljmp
icebp
mov
rcr
addr16
jl
loopne
push
xor
leave
stos
insb
and
lret
mov
xor
subl
jne
pop
ja
scas
rorl
test
jle
jne
jecxz
push
into
cmpb
mov
xchg
sub
pop
int3
aam
iret
std
lea
jo
mov
xor
pop
xchg
xlat
hlt
stos
mov
push
and
and
icebp
mov
imul
mov
aad
dec
or
sbb
mov
popa
fsub
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
lret
inc
out
aaa
shlb
and
jo
dec
in
push
into
int3
jg
movsl
test
pushf
sbb
cld
mov
negl
lock
imul
aam
dec
int3
pop
repnz
cltd
add
fnstenv
mov
pop
inc
loopne
ljmp
push
fs
mov
cli
decb
pop
push
rcr
in
into
rcll
lods
inc
fists
aas
fistl
mov
sbb
scas
cmpsl
mov
push
in
lret
daa
xchg
jo
mov
fistps
shlb
outsb
fistpll
in
ljmp
loopne
cmp
push
jne
cmp
xor
das
cwtl
pushf
jbe
pop
dec
inc
mov
cmp
xchg
push
cli
pop
cs
pop
jg
jo
xchg
xchg
pushl
adc
fildl
leave
adc
mov
fcoml
lock
jae
sbb
adc
loopne
pop
cwtl
xchg
orl
mov
popa
sbb
xlat
jl
lahf
pop
in
pusha
adc
sbb
stos
iret
pop
xchg
int3
clc
mov
xor
jns
rcrl
js
lcall
push
mov
push
stos
xor
adc
test
cmpsl
xor
lock
sahf
add
cs
shl
mov
fisttps
jecxz
ds
push
testb
xor
push
bound
aas
mov
jne
repz
stc
jae
into
addb
fs
rcll
lods
cmp
push
fwait
movsl
js
cltd
ret
lret
ss
jge
cwtl
cld
sub
int3
lods
add
lahf
dec
and
xchg
jmp
push
pop
xchg
shrl
push
sar
cmp
mov
xchg
mov
add
cwtl
cld
cwtl
xor
test
pusha
int
icebp
ficomps
inc
stos
sti
xchg
or
mov
sub
inc
pop
mov
popf
add
pop
call
es
jnp
lds
pop
dec
jne
cwtl
mov
pop
jo
rol
pop
je
into
sbb
shrl
in
mov
pop
xor
and
adc
lock
pop
jmp
mov
lret
adc
fnstsw
mov
jecxz
daa
ds
or
sbb
and
jmp
imul
movsb
cmp
jge
rcrl
sbb
jae
sub
aaa
test
xchg
inc
call
xor
sub
push
mov
fldl
xor
std
pop
insb
lds
adc
or
enter
shrb
sbb
ds
orl
pop
dec
sbb
add
jmp
lock
lcall
pop
movsl
mov
push
loopne
andl
xor
and
dec
inc
add
xor
test
sbb
push
fcompl
ja
arpl
and
push
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
cmp
add
mov
shl
aam
add
imulb
inc
and
inc
mov
mov
outsl
mov
rorl
or
js
jle
jb
cli
xor
inc
mov
xor
xlat
pop
sub
loopne
add
add
xchg
pop
mov
push
in
jb
add
out
jae
out
jmp
inc
jle
pop
mov
sbb
test
lea
shrl
outsb
jmp
enter
push
sarl
cltd
and
shr
inc
out
or
stos
and
cmpsl
test
push
push
ror
cmpsb
insb
inc
les
ds
xlat
aas
arpl
gs
adc
aas
mov
pop
addr16
insl
lahf
dec
rorl
pop
ror
dec
daa
xlat
push
pop
jbe
rolb
js
sahf
pop
into
cmp
js
cli
cmpsl
xor
cmp
pop
and
push
repz
sbb
inc
orl
mov
push
add
out
mov
stos
cmp
mov
ja
cmp
cs
rcl
xchg
xchg
inc
ret
leave
cmp
mov
ds
pop
mov
andb
call
cmp
sbb
or
fs
enter
mov
jge
int
enter
pop
movsl
cmpsb
idivb
js
mov
int3
cmp
push
sbb
lret
jge
es
lea
inc
add
xchg
xor
adc
xlat
std
sub
cld
pop
in
jno
cmp
add
in
cmp
cmp
scas
negl
dec
sbb
xchg
dec
outsl
gs
pusha
out
mov
loopne
mov
jne
aaa
aaa
mov
idivl
sbb
lods
jnp
sahf
insl
xchg
repz
scas
mov
and
lods
mov
jp
fisttps
sbb
iret
cli
and
pusha
ror
call
mov
cld
lahf
or
fwait
ja
mov
cli
incl
jno
fisttpl
and
mov
inc
dec
dec
movsb
pop
push
mov
xlat
lods
mov
mov
push
cmp
push
inc
jns
push
call
sub
inc
jb
loope
hlt
dec
fdiv
fsubr
sub
mov
adc
sub
inc
xchg
cwtl
addr16
mov
dec
mov
cltd
sub
ljmp
inc
jns
xchg
push
inc
adc
sbb
out
std
sbb
test
jge
fildll
pop
sbb
push
outsl
incl
gs
enter
ss
lock
insl
and
xchg
stos
int3
inc
test
psubq
fildl
mov
popa
in
push
xchg
data16
ficoml
icebp
scas
cmovno
test
add
test
dec
cmp
cmp
mov
mov
pusha
dec
popf
movsb
movsl
or
pop
pop
popa
jl
shl
nop
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
inc
ret
fdivl
and
jo
jo
lea
push
add
add
aam
sub
or
add
or
js
cmp
ror
shll
loop
jg
out
cld
lods
inc
xchg
push
inc
cmc
mov
das
cmp
xchg
addr16
sbb
aaa
orb
fdivl
std
push
pop
scas
movsl
push
sbb
sub
cmp
repnz
hlt
movsl
stos
dec
cmp
scas
stc
or
scas
sbb
test
add
add
jl
xor
cmp
xor
jg
sahf
cs
insl
pop
jo
mov
push
sahf
in
push
aaa
mov
dec
shl
sub
and
pushf
ss
sbb
stos
xor
adc
and
jl
or
sub
jne
lret
fdivs
mov
je
mov
or
out
test
sar
and
cmp
cmp
fsub
mov
ja
nop
adc
mov
testb
repz
cmp
scas
and
jnp
ljmp
imul
repnz
sub
ffreep
xchg
jl
test
popa
dec
mov
rcrl
pusha
daa
shl
daa
jl
push
and
cmp
adc
dec
js
ret
pusha
adc
addr16
loop
sbb
sbb
stos
movsl
js
lods
inc
fisttps
cmpsl
aaa
sbbl
test
mov
addr16
and
jmp
pop
ret
pop
mov
je
ret
jle
mov
push
lock
es
negl
movsb
pop
fwait
dec
dec
fstl
pop
mov
cmp
jo
push
stos
cmpb
mov
fildl
hlt
push
sub
loopne
popa
dec
or
sbb
lods
cltd
mov
push
cmp
jge
jmp
lret
je
fucomip
and
ja
mov
and
xor
xchg
jge
sub
xchg
dec
cmp
inc
js
mov
movsl
jne
xchg
testb
out
cltd
cmp
clc
push
mov
test
dec
push
or
fcoml
sahf
mov
hlt
jbe
faddp
pop
jne
mov
mov
pop
cmpsl
popf
js
jno
and
fists
xchg
sbb
mov
inc
dec
push
mov
pop
jmp
out
fldenv
bound
int3
les
cmpsb
dec
add
loope
xlat
adc
push
push
xchg
rcrl
and
or
add
cli
cltd
push
pop
cmp
xor
fadds
dec
or
notl
mov
jp
addr16
or
pushf
pop
xchg
fstps
jle
mov
xchg
or
fcomps
add
in
test
adc
mov
or
hlt
push
hlt
jmp
jnp
inc
add
cmpb
or
jne
mov
mov
pushl
lea
jmp
mov
push
mov
mov
je
fnstenv
and
jo
sbb
loope
xchg
mov
adc
cld
scas
or
shl
movb
sbb
xorb
ret
dec
inc
es
ss
ret
jmp
mov
cmc
scas
add
test
push
lods
imul
jae
sti
mov
lahf
push
ficoml
out
fsubrs
scas
mov
out
pop
imul
xchg
sub
push
jb
outsl
push
aaa
mov
shl
mov
sbb
sub
adc
mov
cmp
sbb
jl
inc
jecxz
andl
adcl
push
mov
cwtl
xchg
shrl
movsl
xchg
xor
mov
mov
int3
add
mov
add
outsl
insl
fwait
jno
xlat
xchg
push
gs
push
cmpsl
shll
push
callw
roll
jmp
pop
scas
pop
dec
xor
fsubp
pop
push
ss
fidivrl
ja
push
mov
movsb
shl
pushf
cmpl
imul
aaa
sar
mov
in
inc
mov
pop
push
add
and
insb
dec
push
mov
lods
or
adc
bound
push
mov
xchg
popa
mov
les
enter
xchg
lock
xor
mov
jg
push
dec
pop
mov
ja
icebp
and
pusha
jmp
sub
xor
push
bound
xor
ret
add
popf
int3
pop
inc
xchg
aaa
xchg
das
mul
pop
jne
adc
lods
mov
nopl
loope
lods
les
add
fsubr
fdiv
and
mov
pop
pop
sub
bound
lock
divb
rolb
mov
xchg
inc
dec
jge
sbb
test
es
jmp
mov
mov
aad
lods
dec
outsb
dec
push
push
or
mov
or
adc
mov
scas
adc
cmpsb
pop
inc
movsb
mov
pcmpgtd
int
xor
inc
lret
jl
popa
push
stc
sub
shr
mov
or
gs
fmull
push
mov
sub
test
xor
mov
loopne
push
in
dec
dec
push
mov
mov
lods
adc
fsubp
fcompl
jecxz
imul
xor
pushf
lcall
test
mov
pop
in
pop
push
das
js
mov
pop
aam
pop
jae
out
popa
insl
repz
daa
pop
fiaddl
mov
int
inc
jnp
mulb
lods
dec
ljmp
stos
js
mov
inc
dec
sbb
icebp
jl
rcr
outsl
sub
push
xchg
or
push
and
int3
sub
mov
int
inc
fistpl
cmp
adcb
fcompl
fcomp
inc
pop
ret
repz
stos
shlb
xor
out
sbb
ljmp
lods
sub
cli
nop
and
pushl
lea
jmp
add
out
out
xor
call
repz
out
out
jo
jge
jo
test
jge
sbb
push
out
cs
arpl
add
inc
lods
jmp
dec
loopne
jge
pop
out
fldt
stos
cmp
jmp
imulb
mov
inc
adcb
push
or
xor
jg
xor
movsb
iret
jne
cmpsl
push
add
rcrl
jp
pop
pop
leave
xor
mov
jmp
sbb
pushf
push
jmp
push
add
sbb
cwtl
push
cli
push
lahf
mov
or
inc
nop
pop
ret
xchg
cmp
lods
movsl
stos
sbb
sbb
sbb
push
jg
pop
pop
xor
pop
sub
mov
test
mov
mov
cli
xchg
aad
lock
adc
fld
aad
xchg
push
lds
lret
sbb
aas
inc
cwtl
call
dec
ret
fisubs
xchg
sub
push
test
jp
lock
ja
jg
jo
jae
movsl
xor
sub
pop
roll
fs
xchg
nop
nop
and
sub
popa
push
out
dec
test
cmp
mov
mov
lret
mov
push
loop
in
xchg
jge
insb
jle
je
lods
aad
adc
and
jecxz
add
into
not
repz
lock
test
xor
push
and
xorl
cs
mov
sub
iret
leave
inc
ds
mov
and
outsl
ljmp
fisttpl
cmp
lds
pop
and
mov
cmp
dec
ja
push
in
movsl
lock
sbb
jmp
pop
sbb
adc
add
lcall
stc
stc
jo
mov
mov
inc
or
out
bound
push
pop
clc
mov
jp
fdivs
cmpsb
incb
rcrb
mov
flds
rcrb
loopne
jnp
ret
lret
mov
not
movsl
sub
cmp
cmp
test
xor
xchg
and
mov
test
ljmp
or
pop
xchg
cmp
or
xlat
aaa
mov
cmp
add
pop
xchg
enter
jb
scas
inc
dec
ss
cwtl
push
lock
adc
pop
lret
test
fwait
sub
hlt
pusha
push
stc
movsl
les
inc
loope
sbb
pop
sub
gs
adc
and
ljmp
xchg
dec
fwait
nop
cmp
pop
push
outsb
push
dec
mov
lds
lsl
aas
clc
aaa
lods
ret
or
mov
pop
lods
xchg
adc
mov
and
aam
sbb
popa
xchg
mov
push
pop
ljmp
cmc
pop
pop
cmp
cmp
mov
stos
inc
cmpsl
and
lds
pop
je
ljmp
jo
in
xor
mov
xchg
pop
pop
fcoml
mov
clc
xor
mov
loopne
inc
scas
dec
push
pop
insb
hlt
pop
daa
mov
in
ja
scas
xlat
cmc
add
sbbb
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
push
lods
pop
inc
daa
loop
jo
jge
jo
sub
jecxz
xor
rorb
sbb
sub
aad
mov
cmpsb
mov
and
mov
or
push
mov
fidivl
mov
mov
insb
cld
movsb
mov
out
xor
insl
shlb
ss
out
leave
imul
mov
dec
js
loopne
or
mov
js
jb
fidivrl
sbbb
push
popf
jno
mov
jbe
push
out
arpl
cwtl
dec
adc
mov
jmp
or
pop
mov
inc
dec
push
je
cmp
cld
push
dec
stos
adc
xchg
jno
movsl
stc
jae
stos
leave
ret
inc
mov
adc
cld
out
mov
repz
push
push
aad
cmp
in
push
xchg
add
push
paddusb
data16
xchg
ja
outsl
data16
test
rorl
cmp
dec
cmc
sbb
push
stos
icebp
sub
or
ret
ret
sbb
pop
add
cmp
adc
jno
inc
negl
int3
or
stos
outsb
mov
lret
push
std
sub
ljmp
push
neg
cmp
add
test
cld
cmp
push
outsb
cwtl
stos
shll
mov
sahf
aaa
sbb
pop
cltd
sub
pop
fldenv
jns
mov
or
fildll
pop
mov
adc
es
in
xor
dec
aad
jo
repnz
mov
pop
aam
push
xchg
push
xchg
pop
sahf
cmp
es
sbb
insl
mov
mov
jge
ljmp
dec
sub
data16
push
dec
xchg
stos
cld
repnz
add
jbe
pop
test
cmpsl
pop
push
pop
test
adc
inc
jo
sub
jl
addr16
adc
cs
mov
xchg
sbbb
je
cmpsb
xchg
jecxz
out
fldt
mov
mov
cltd
cmp
cs
dec
sbb
sub
mov
and
xor
xchg
test
loopne
in
mov
cwtl
push
addb
into
popa
aaa
js
pop
rolb
call
adc
ss
fdivrl
push
gs
pop
mov
adc
mov
adc
add
out
call
pop
push
cmpsb
aad
xor
shll
insb
inc
push
sbb
xchg
insb
sbb
mov
imul
jae
sub
dec
loop
and
xchg
and
mov
cmpsl
inc
pop
push
jle
inc
nop
shl
dec
cmp
pop
push
jae
jns
sti
mov
aam
and
pop
mov
das
arpl
push
sbb
mov
add
imull
mov
xor
pop
sub
sbb
in
std
mov
lods
mov
lcall
dec
xor
cmpsb
test
lods
mov
mov
mov
fldt
push
sub
push
iret
adc
sarl
xlat
and
aad
sub
push
jge
iret
call
mov
mov
jmp
out
mov
ja
add
xchg
out
jo
and
jo
xor
inc
xchg
xchg
stos
cmp
pop
mov
dec
out
out
mov
clc
xor
jae
inc
sbb
cwtl
inc
shll
push
pop
push
dec
and
and
ficoml
pop
fstl
leave
movsl
lret
dec
icebp
mov
pop
adc
jo
pop
push
insl
jmp
test
and
rcl
fdivr
sbb
mov
das
fldenv
sbb
fsubs
and
mov
pop
test
jne
sahf
fstpl
jl
push
xchg
ret
mov
adc
cwtl
sbb
mov
mov
popa
movsl
adcb
sahf
fldcw
mov
jns
cli
je
push
cmp
call
fcomps
subl
xchg
and
mov
dec
js
dec
insb
jbe
out
push
daa
lret
pop
add
fsubs
sbb
mov
xor
and
xchg
push
outsb
mov
fsub
out
and
dec
add
out
mov
add
mov
cmp
push
in
dec
push
mov
gs
and
sbb
xchg
jmp
mov
jno
popa
ret
adc
rcll
out
mov
jnp
loop
fsubl
pop
aad
loop
mov
loopne
repnz
mov
shlb
outsb
aam
orl
idivb
jge,pt
dec
mov
xchg
mulb
cld
and
in
fwait
aad
scas
mov
arpl
fs
pop
jecxz
sarl
in
push
cmp
inc
mov
jnp
add
xlat
insl
xchg
xor
mov
pop
not
andl
add
arpl
mov
shll
add
faddl
jmp
xchg
shrl
orl
outsb
jne
hlt
cld
jnp
leave
dec
mov
cmp
sbb
push
inc
gs
jmp
nop
mov
jecxz
sub
loope
hlt
mov
xchg
sbb
mov
jnp
mov
mov
mov
cwtl
pushf
inc
arpl
push
jns
in
and
and
outsb
cmc
jg
ret
push
icebp
lock
rolb
cmp
test
lahf
push
adc
int
fistpll
sbb
test
test
add
and
pusha
cltd
xchg
repnz
xor
or
iret
push
mov
mov
or
in
or
add
push
fdivl
dec
stc
sarb
and
cmp
xchg
repz
pop
in
dec
dec
sub
addr16
loop
icebp
fwait
and
pop
jbe
arpl
and
mov
setp
adc
clc
cmp
inc
adc
rol
xchg
lods
test
push
or
xchg
in
pop
xlat
rclb
sahf
jmp
jns
into
push
jmp
jb
and
dec
cmp
aaa
popa
out
lods
std
rorl
lds
sub
add
int
outsb
sub
out
roll
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
imul
repz
ss
jo
lahf
jge
jo
imul
cmp
inc
stc
mov
out
int3
lea
push
popa
sbb
imulb
sarb
in
lret
mov
shl
insl
mov
jl
icebp
sbb
js
mov
ss
cmpl
jecxz
mov
out
call
jle
jg
push
push
xchg
ss
repz
hlt
ja
dec
jecxz
jge
leave
xchg
jp
pop
mov
pop
xchg
mov
dec
pushf
or
clc
xchg
xchg
pop
rcrl
xchg
adc
jg
xchg
inc
fisubs
dec
xchg
int
out
pushf
xchg
lea
das
fimuls
jb
mov
push
pushf
jne
and
iret
stc
into
push
inc
js
ja
aas
arpl
inc
data16
xchg
cmpsb
aad
dec
jle
dec
adc
lahf
inc
or
inc
popa
adc
test
or
sub
lret
aas
cmp
push
jle
mov
into
loopne
fmuls
push
outsl
mov
cvtps2pd
lahf
cmp
push
mov
adc
in
cltd
enter
test
push
pop
bswap
sti
imul
js
sti
addr16
and
xlat
addr16
imul
add
mov
mov
sbb
pop
push
imul
rorb
jo
xlat
clc
inc
ljmp
lahf
cmp
icebp
push
jo
lds
adc
gs
and
insb
test
xchg
dec
xchg
mov
shll
push
cmpl
fldl
loope
into
sbb
cmp
xor
ds
adc
out
into
mov
push
push
xchg
cmpsl
cmpsl
push
pop
inc
test
jl
into
mov
sub
sbb
sbb
mov
lods
mov
popf
sbb
popa
dec
push
mov
adc
mov
jb
jl
bound
shl
push
int
fstpl
aam
xor
adc
xchg
push
xor
cwtl
mov
sbb
jmp
jp
std
add
jnp
push
gs
popf
dec
or
fsubs
jl
pop
imul
out
jge
xchg
dec
aas
inc
aas
push
push
push
fdiv
cmpsb
insb
sub
insb
arpl
dec
scas
jb
hlt
or
mov
pop
adc
add
dec
sub
adc
mov
repz
aad
mov
cmp
ljmp
mov
mov
sub
int
sbb
add
sahf
ss
jo
stos
mov
dec
imul
outsb
or
push
sarl
repz
mov
jecxz
cmp
hlt
es
mov
mov
mov
int
sahf
iret
idiv
adc
test
ja
les
sub
sub
xchg
roll
sbb
adc
add
ss
dec
add
jbe
aam
cs
push
into
adc
push
movsl
or
add
aam
negb
xorb
fistpl
sub
adc
fwait
jno
in
fidivl
scas
cmp
mov
imul
cmpsl
add
cli
jp
test
clc
dec
mov
adc
or
sbb
adc
loopne
jae
ljmp
pop
jns
cmpb
add
jae
cs
mov
mov
lock
sbb
dec
movsb
pop
fbld
dec
xor
scas
xchg
push
outsl
push
ret
int3
lods
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
dec
aam
es
jo
aas
test
out
inc
mov
stos
jae
sub
or
push
leave
ja
pusha
pop
lods
repz
pop
adc
xor
mov
daa
mov
fdivrp
outsb
cvtdq2ps
and
mov
jae
je
pop
inc
fimuls
push
mov
xor
xchg
je
jp
jmp
lahf
inc
test
in
xchg
cmc
cmp
cwtl
popf
lods
lods
sub
ja
lcall
call
jne
dec
mov
lods
xorl
cmpb
cmp
sbb
loopne
xlat
add
in
dec
sub
jo
popa
in
pop
ja
fldt
cmpsl
bound
mov
hlt
or
cltd
enterw
cmp
inc
notb
jmp
xor
mov
jbe
dec
sub
inc
shll
add
pop
ret
push
adc
pop
sub
sti
test
int
in
mov
or
mov
mov
negb
arpl
loope
jge
mov
arpl
mulb
xchg
pop
pop
out
dec
or
fcom
inc
adc
lret
sbb
inc
loopne
sbb
and
leave
mov
dec
sub
pop
shll
andb
inc
mov
jo
xor
out
outsb
sti
dec
imul
ljmp
push
in
or
ret
mov
xor
xchg
leave
aam
test
inc
idivl
push
lea
aas
xchg
mov
xor
out
inc
cs
fldln2
xor
scas
sub
xchg
or
push
jo
daa
jnp
mov
daa
and
pop
mov
sbbl
cmp
or
popa
insl
stc
rol
cmp
adc
int3
data16
movsl
in
xchg
push
imul
jo
adc
add
scas
daa
cwtl
call
push
jge
push
mov
mov
jle
xorb
lcall
sbb
shrb
cld
sub
and
xchg
adc
push
repnz
and
push
mov
cld
imul
fimull
mov
mov
pop
sbb
movswl
mov
imul
xor
in
inc
xchg
daa
dec
ret
xor
mov
repnz
pop
nop
push
and
inc
in
xchg
leave
int
in
jmp
and
iret
mov
rcpps
jns
sbbl
and
lock
imul
mov
add
xchg
lea
xchg
pusha
pushf
pop
mov
dec
repnz
push
sahf
inc
sahf
add
jmp
pushf
aas
ja
lods
sub
adc
divl
mov
pop
and
dec
add
mov
das
jo
inc
movsb
in
cltd
addl
or
mov
mov
ficomps
mov
cltd
dec
and
mov
cwtl
xchg
inc
xchg
sub
movsb
xchg
ja
mov
inc
test
sbb
push
mov
cmpsb
sub
xor
popf
lds
mov
sbb
adc
je
pop
js
and
add
pop
sub
imul
lea
ljmp
xchg
dec
inc
xor
pop
mov
jp
add
sub
outsb
sbb
mov
leave
mov
mov
jnp
popf
sub
mov
int3
mov
call
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
xchg
stos
in
inc
cmc
jo
lahf
jge
jo
jo
popa
xchg
cltd
scas
ss
gs
lret
int3
imul
mov
jb
scas
repz
push
push
addr16
fucomp
push
pcmpeqw
mov
leave
ss
pminsw
push
sub
sub
int3
nop
push
lea
iret
lahf
pushf
or
int
es
es
sti
dec
pop
adc
call
xor
pop
test
ja
inc
add
mov
push
mov
ss
pusha
inc
xor
insl
outsl
jmp
mov
aas
shrl
mov
testb
fisubl
fldpi
mov
mov
jg
movsb
xchg
pushf
aas
shr
cmp
ds
test
inc
unpcklps
dec
repz
icebp
dec
subl
fisubl
rolb
push
imul
push
add
or
stos
cmp
xchg
and
push
movsl
loop
imul
loop
lea
cmpsl
add
add
cli
mov
pop
adc
popl
insl
adc
stos
mov
imul
mov
sbb
or
add
call
add
jbe
out
loopne
inc
ds
pushf
pop
sbb
subl
ds
xor
cmc
xor
push
aas
and
dec
mov
inc
sbb
hlt
movsb
cmp
jl
inc
dec
imull
repz
gs
pop
mov
lock
ret
sbb
dec
movsl
jbe
pusha
xor
push
lret
xor
inc
insb
mov
outsb
lret
sub
imul
add
mov
call
out
test
xor
scas
xchg
push
adc
jo
inc
fs
call
xchg
popf
lret
test
fists
push
dec
xchg
leave
jns
and
pop
or
icebp
sub
sub
and
inc
out
cld
movsb
out
sti
out
lret
adc
loopne
fbld
lret
xchg
ljmp
jl
add
ret
jmp
mov
jae
push
jae
dec
aad
mov
inc
inc
push
fyl2xp1
push
pop
add
loope
je
adc
gs
fstpt
repz
rcll
lret
mov
shld
or
pop
and
es
jo
outsb
jg
popa
cmp
jbe
xor
in
jbe
ret
call
popa
cmpsl
gs
shll
lods
in
in
daa
push
cs
leave
shl
pop
pushf
sahf
pop
pop
rclb
xchg
push
gs
xchg
sbb
xchg
add
sbb
pop
xor
inc
stos
imul
xor
test
xchg
mov
pop
out
push
jo
test
pop
fisubrs
mov
cmp
xor
push
cmpsb
std
push
sub
mov
pop
xchg
adc
dec
js
call
mov
push
jns
inc
adcb
lcall
dec
sbb
mov
ror
repnz
and
xor
jl
out
rolb
mov
mov
scas
xchg
leave
xchg
bswap
mov
in
sub
cwtl
adc
test
lods
inc
dec
mov
dec
mov
mov
icebp
push
hlt
pop
icebp
xlat
cmp
push
ds
popl
jmp
test
rcll
xchg
mov
sbb
shlb
pushl
or
jnp
sbbb
adc
arpl
fld
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
xchg
sbb
jo
lahf
jge
jo
or
xlat
xadd
fnstenv
cmp
sbb
xor
push
test
fucomip
mov
xor
int3
add
pop
sub
hlt
jmp
jecxz
xor
bswap
jno
in
rcll
xchg
jae
mov
rcrb
or
cmpsl
pop
add
aas
add
push
xor
sbb
xchg
sbb
fcmovne
sti
shrl
xchg
pop
add
out
xchg
jle
jmp
sbb
sbb
cmp
fwait
and
and
outsb
lea
movsb
add
lods
add
pop
adc
xor
std
push
movsl
mov
xchg
cmp
jo
mov
cmpsl
cwtl
xor
jecxz
adc
pop
stos
or
enter
xor
mov
and
test
push
sub
or
fdivs
fiadds
dec
aad
adc
adc
push
test
scas
mov
xchg
clc
pop
into
cmp
sarl
add
cmc
aas
arpl
adc
push
out
add
mov
sahf
cs
icebp
pop
adc
jns
test
mulb
and
mov
xchg
por
rcll
fs
xchg
push
mov
dec
js
push
pop
pop
int
sarb
push
sbb
push
iret
test
xchg
adc
jl
mov
pop
js
dec
iret
cmp
fsubl
gs
sub
adc
test
mov
movsl
mov
and
adc
push
shll
mov
lahf
xorl
cmp
movsb
pop
mov
inc
pop
mov
push
mov
loope
imul
iret
cmp
xchg
fwait
or
jl
je
inc
push
mov
lock
stos
mov
sbb
cltd
push
adc
fisttpl
sahf
mov
dec
jb
scas
stos
dec
in
pop
push
data16
idiv
mov
push
sbb
inc
and
mov
rclb
stc
add
pop
mov
and
clc
xor
mov
lret
dec
lcall
stos
adc
lds
fwait
add
popf
sti
gs
or
adc
adc
push
leave
cmp
adc
adc
sti
js
fbld
sbb
mov
inc
dec
cs
iret
sbb
bound
fadd
shrl
repz
push
lods
pop
pop
or
aaa
ja
scas
sub
leave
cmp
xlat
mov
das
pop
or
loopne
pop
sti
mov
test
xchg
mov
daa
pop
add
mov
mov
aad
sbb
jge
adc
lea
and
and
stos
or
test
in
inc
push
mov
dec
cmp
hlt
sbb
fsub
idivb
mov
jl
incb
mov
lcall
sbb
testb
dec
cmp
arpl
lret
lods
data16
dec
jg
scas
int
int
push
pop
sbb
xor
lret
jno
lret
aas
imul
out
or
and
pop
aaa
mov
push
cmp
sbb
in
adc
or
stc
movl
into
jo
inc
cmp
and
push
pop
adc
jmp
lds
dec
push
inc
addr16
push
sbb
mov
rolb
add
call
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
lret
ret
std
jo
lahf
jge
jo
fldt
push
in
add
sub
sub
dec
add
pop
xchg
lcall
fwait
mov
into
ret
inc
lret
cmp
loopne
sbb
inc
js
hlt
or
pop
int3
sbb
or
mov
push
repnz
sub
cli
fucom
call
mov
pop
bound
mov
fcoml
push
dec
pop
xor
ja
xchg
mov
mov
pop
out
pop
outsb
in
inc
and
dec
and
pop
andl
add
fs
mov
xor
fsubr
jle
jmp
fisubrl
sarl
pop
and
inc
stc
jge
jge
add
pop
inc
adc
sbbl
pop
movsl
pop
fwait
mov
pop
inc
xchg
adc
push
cli
mov
icebp
insb
aaa
xlat
mov
pop
jge
pop
sbb
jge
push
jmp
push
mov
mov
add
in
ss
sub
pop
data16
jmp
addr16
js
push
sahf
outsl
pushf
sti
push
test
adc
test
imul
mov
les
cld
lods
xchg
test
jl
mov
js
add
ljmp
ljmp
mov
shll
test
mov
lods
jl
cmpsl
aam
jnp
into
sub
ja
stos
repnz
sbb
loop
lods
pushf
fnsave
sub
and
adc
mov
aaa
mov
mov
lds
lods
mov
add
out
je
mov
ret
or
sbb
imul
movsb
mov
pcmpgtd
dec
mov
jns
gs
push
mov
xor
or
sti
dec
rclb
inc
add
pop
cs
stos
dec
pop
imul
mov
loopne
aad
popf
sar
leave
int3
test
inc
loop
or
and
neg
mov
stos
mov
les
in
popf
push
movsl
add
loop
xlat
ss
or
jle
cmp
xor
dec
loop
adc
dec
push
out
sahf
das
jle
mov
je
xchg
xchg
inc
test
ret
xchg
fwait
pop
lret
jb
dec
adc
push
cltd
mov
push
repz
cwtl
and
xor
call
mov
push
jns
lahf
fldcw
call
daa
jg
add
outsl
cltd
pop
cli
mov
in
xor
sub
adc
jg
lcall
lods
loop
out
pop
push
lock
push
movsb
sbb
movsb
scas
repnz
ret
or
stos
mov
or
aaa
xchg
pop
inc
dec
subb
and
add
daa
hlt
inc
aaa
dec
clc
clc
mov
adc
inc
cwtl
leave
fidivrs
into
call
jo
dec
xor
jns
hlt
sbb
add
xor
mov
lret
dec
ljmp
loop
not
movsb
push
cmc
inc
sub
and
dec
pop
popf
jmp
push
push
les
adc
filds
pop
xchg
dec
lret
sahf
mov
ss
mov
icebp
scas
pusha
inc
or
pop
pop
add
fsubrl
mov
jno
and
out
mov
test
mov
shll
mov
jne
sub
lret
and
lock
mov
jge
jo
pop
push
cltd
pop
rorb
pop
mov
mov
rdmsr
inc
push
xor
in
data16
xchg
push
pop
jno
adc
es
call
cmp
icebp
xchg
outsl
lods
push
stc
insb
int
movsb
mov
inc
ja
cmp
aad
fistps
jb
pop
push
xor
and
pop
sub
xor
mov
mov
ret
push
int
test
xorl
inc
in
mov
in
mov
sbb
imul
mov
in
test
fwait
je
ljmp
call
call
pop
xor
outsl
or
push
insl
daa
fwait
cs
mov
dec
jae
sbb
ret
pop
aam
lret
dec
mov
pushf
ret
adc
cmp
and
rcl
cs
lret
inc
lret
cli
mov
xchg
jo
dec
xchg
int3
fidivrs
ds
mov
int
into
ja
icebp
iret
mov
jnp
adc
sub
sub
push
imul
shll
loopne
adc
pusha
dec
xchg
add
mov
pop
mov
cmpsl
sub
addb
adcb
dec
dec
push
scas
or
sub
xchg
push
bound
aam
test
mov
rol
int3
sbb
clc
push
xor
pop
std
mov
inc
repz
add
std
cli
sub
sbb
mov
mov
push
sub
jmp
stos
adc
push
jbe
outsb
mov
or
mov
xlat
or
fisttpl
rcll
fcmovb
cmp
add
arpl
mov
jp
rep
fdivp
add
jle
jmp
mov
jle
xor
int
mov
loopne
loopne
push
mov
in
fdivrl
cwtl
add
fwait
xchg
fsubs
nop
mov
fcomps
cmc
es
add
jecxz
outsl
loop
movsl
andl
test
cmc
sbb
inc
push
addl
xorb
scas
pushf
daa
cli
pop
push
pop
cmp
decb
nop
pop
mov
div
dec
roll
adc
das
pop
mov
sub
xchg
cmpsb
mov
mov
jnp
push
out
sarb
fildll
cld
push
aas
cmp
or
push
jbe
jbe
sbb
mov
push
nop
sahf
adcl
cmp
test
rcrb
push
stc
jb
mov
jge
mov
cmc
push
popf
add
jnp
movsb
jmp
into
popa
cmp
insb
mov
aam
mov
adc
inc
add
sbb
sub
sarl
sbb
repz
jg
jg
les
pusha
in
adc
mov
add
enter
scas
jbe
dec
in
add
ja
ret
dec
insb
push
fcom
jae
lret
adc
jmp
xorb
call
lea
xchg
nop
ret
adc
xchg
xor
xor
jo
or
mov
lcall
ds
sbb
jbe
dec
mov
jmp
dec
rcrb
dec
fdiv
lahf
test
mov
les
and
jae
jle
sub
addr16
das
scas
xchg
fstpl
sub
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
adc
mov
jo
jge
jo
mov
sbb
push
mov
xor
pop
scas
int3
rcrl
loop
fmulp
jg
cmpsb
rcl
jno
dec
pop
in
adc
jb
clc
xor
mov
xchg
xchg
adc
pop
ret
insl
sti
int3
fstl
sub
pcmpgtd
in
fidivl
xor
iret
pusha
push
call
pushf
add
mov
mov
pushf
imul
lahf
sub
jl
in
shrl
adc
and
scas
and
fmul
test
leave
in
xor
jle
mov
stos
rorl
sub
push
cltd
and
add
mov
xor
sub
lea
sub
test
sbb
inc
jmp
data16
xor
and
inc
enter
ljmp
push
in
xor
jns
js
std
adc
jae
addr16
mov
in
jne
neg
out
ret
sbb
dec
ret
fs
and
inc
rolb
adc
out
pop
cltd
hlt
jb
jle
test
lfs
sub
xor
mov
stos
lret
in
enter
push
jle
push
mov
adc
xchg
push
and
inc
pop
push
imul
sub
dec
xorl
out
call
jmp
testl
rcrb
popa
mov
mov
insl
push
aaa
mov
and
cmp
inc
roll
mov
cld
jle,pt
mov
dec
fisttps
xor
cmpsl
pop
ja
fs
rcrb
cmp
jl
xchg
fmuls
push
nop
pop
or
mov
or
insl
jno
sbb
jmp
push
sbb
xor
jp
shll
xchg
iret
or
push
pop
mov
loope
jo
mov
out
jge
bound
xor
sub
mov
lahf
mov
out
pushf
pop
movsb
mov
push
fldenv
sti
push
dec
and
add
inc
cld
ja
mov
cmc
lahf
jg
stc
cmp
scas
lcall
sbb
setge
aaa
ret
jl
xchg
jbe
xlat
adcl
sbb
cli
cmp
cmp
xchg
sub
and
pop
mov
dec
clc
fstpl
mov
in
out
outsl
test
ret
out
push
stos
stos
lods
std
test
jg
icebp
sti
ficompl
jnp
push
negl
lea
shll
adc
loop,pn
jle
icebp
mov
jecxz
dec
lcall
je
sub
add
push
xchg
push
and
mov
pop
mov
ljmp
shlb
js
popa
cwtl
or
mov
icebp
cs
jmp
jb
in
cmp
sbb
hlt
pop
xor
enter
xor
sub
push
push
std
stc
mov
ja
movsbl
pop
push
ss
das
push
movsb
cmp
jno
fisttpl
sub
data16
or
int
div
loop
cmp
andb
kortestw
xor
repnz
sub
inc
lock
lods
jno
js
xchg
mov
dec
testb
lock
xor
pop
lods
es
push
int3
xor
insl
push
mov
jne
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
pop
inc
pusha
xorl
jge
jo
in
aas
movsb
xchg
nop
lds
add
cld
aam
shl
sub
arpl
jp
ss
push
dec
pop
xor
jnp
cld
adc
or
push
cli
mov
xor
outsb
jg
int
xchg
shrb
into
push
sub
loop
mov
rorb
int
pop
xchg
jle
mov
ret
ficoms
cmp
shlb
data16
dec
pop
arpl
subb
icebp
jno
cld
and
add
mov
and
adc
ds
jmp
shrl
pop
push
cmc
mov
je
dec
ret
fwait
inc
jnp
pop
mov
mov
stos
imul
add
jecxz
call
cmc
das
cmpsb
sbb
test
mov
es
xchg
test
icebp
lcall
ret
xor
xor
mov
aaa
mov
pop
and
insb
cmpps
and
push
ret
adc
std
sub
and
dec
mov
mov
jb
mulb
imul
cmc
leave
or
add
push
js
lods
mov
fmull
pusha
ljmp
push
pop
and
lret
mov
mov
mov
test
inc
insb
mov
and
mov
lahf
mov
stos
movsl
jb
mov
sbb
push
xchg
dec
movsl
or
sub
jno
pusha
dec
pop
adc
pop
xor
imul
cld
mov
push
mov
adc
dec
sub
lahf
cmp
xchg
fwait
or
cmp
dec
ja
mov
mov
adc
xorb
rclb
xor
jno
mov
fs
lret
dec
inc
dec
inc
aas
test
push
push
push
nop
push
outsl
incl
sbb
outsb
loope
pop
xlat
inc
jmp
mov
mov
test
cmp
mov
call
mov
fidivs
cltd
pop
or
mov
cmc
xlat
rcll
sub
outsb
aaa
sarl
jle
and
mov
mov
sbb
or
pop
cmp
add
push
mov
sbb
xchg
mov
rolb
jbe
lret
xor
mov
lea
pop
in
fnstenv
mov
push
scas
cs
jnp
xrelease
repnz
test
mov
mov
jno
add
sbb
loopne
push
mov
test
xchg
test
mulb
or
inc
imul
fdivs
gs
jecxz
cmp
lods
cld
and
pop
fnstsw
arpl
pop
pop
cmpsl
cmc
lret
les
lahf
cmc
jmp
cs
lods
ds
inc
add
fs
xor
negl
rcl
push
rcrl
dec
jns
jo
in
xchg
xlat
push
cmp
cmp
adc
dec
popa
data16
daa
ja
jb
mov
or
shll
push
inc
jae
data16
call
shll
mov
jno
push
cmpsl
lods
mov
fisubrs
scas
mov
cmpsb
sub
sbb
xor
out
and
dec
and
dec
test
insl
shrl
ja
inc
mov
scas
int
icebp
outsl
fidivs
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
jo
jge
jo
xor
scas
add
clc
repz
mov
cld
rorb
pop
nop
sbb
sbb
mov
xor
fwait
clc
nop
scas
lahf
xchg
sbb
in
gs
andb
inc
cmpl
pop
ljmp
add
lret
mull
int3
dec
cltd
or
jnp
jae
mov
in
mov
xchg
pop
iret
jno
das
xchg
loopne
pushf
xor
mov
outsl
inc
clc
cmp
add
loop
mov
ljmp
hlt
lock
xchg
mov
pop
shlb
stc
jge
sar
dec
xchg
mov
sbb
div
insb
push
aas
icebp
inc
xchg
cwtl
and
lahf
test
incb
xchg
aad
adc
mov
fadd
jge
xchg
lcall
bound
sub
mov
dec
loope
sub
xor
jmp
xor
adc
mov
push
test
fistpll
add
pop
out
xor
lcall
jle
dec
mov
fbld
xor
ficoms
sub
jae
call
pop
arpl
mov
fists
in
stc
mov
ljmp
pop
or
mov
aam
push
cli
fadds
dec
xor
and
cmpsl
cmp
xchg
cmpsb
stos
call
xlat
jb
mov
gs
pop
inc
scas
leave
inc
inc
bound
cwtl
dec
aam
jl
mov
dec
aaa
xor
dec
add
ret
cmp
jp
mov
jno
popf
loope
fisubrs
outsl
into
loope
jae
adc
lods
loopne
add
movsl
pusha
dec
sub
pop
sbb
mov
jne
or
xor
xor
rcrl
out
jnp
das
mov
dec
or
cmp
nop
ss
or
xchg
mov
cmp
jp
cmp
xor
xor
les
xor
push
fisubs
dec
mov
xchg
test
les
inc
pusha
pop
int3
cld
pushf
and
jmp
icebp
push
jecxz
fsub
loope
jae
cmp
in
mov
lock
xchg
inc
xor
push
inc
mov
push
mull
mov
adc
movsb
inc
mov
xchg
sub
push
in
or
dec
jno
fcomps
ss
push
cmp
dec
mov
inc
sub
lahf
out
jle
test
jae
sahf
fwait
mov
sbb
mov
pop
sub
hlt
in
repz
bound
and
ror
add
js
ret
mov
roll
testl
or
mov
out
fisttps
and
fdivs
ret
outsl
inc
xor
add
mov
insl
data16
cs
lods
jg
pop
inc
add
add
pop
add
lret
test
out
fistl
pop
mov
xlat
xor
mov
pop
pushl
movq
out
movsb
xor
lret
scas
dec
lcall
inc
das
call
js
mov
cmp
xchg
lods
push
ret
or
add
call
sub
and
xchg
fimull
rcll
pop
mov
fstp
popa
std
aas
xor
and
outsl
scas
pusha
sbb
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
mov
lahf
jge
jo
inc
rcrb
test
daa
jl
sarl
in
mov
push
adc
rorb
js
rolb
aam
pop
jle
fisttpl
aaa
std
mov
and
daa
sbb
inc
in
inc
mov
push
dec
xchg
int3
orb
xor
push
inc
xor
mov
divl
and
popa
ret
ret
mov
push
xchg
leave
xor
and
out
mov
addr16
cmp
and
sarb
stos
scas
ret
aaa
cmp
sub
jo
icebp
pop
lcall
and
je
lock
cltd
das
shrb
mov
out
xchg
and
nop
arpl
mov
and
je
pop
sub
xchg
pop
mov
popw
test
lods
iret
and
in
xchg
cmp
rorb
fcomps
into
jge
mov
jmp
rclb
and
in
imul
cmpsb
cmc
push
mov
xchg
out
adc
jmp
mov
jl
fidivs
sbb
pop
adc
adc
and
push
xchg
popa
xchg
bound
and
loope
sti
xchg
dec
adc
xchg
pop
out
pushf
push
xlat
jecxz
sbb
cmp
jns
ljmp
in
scas
cmp
int
hlt
jbe
out
push
loopne
cmpsl
xor
scas
scas
pop
fisubrs
addr16
addl
cld
pop
hlt
pop
push
ds
pop
and
and
adc
fists
ret
cmp
inc
outsl
das
ss
mov
jae
push
and
lea
mov
je
testl
std
cmp
outsb
push
dec
xor
mov
movsb
scas
xchg
out
mov
sub
push
shr
aaa
mov
rorb
pop
outsl
into
dec
or
jbe
xchg
fcmove
movl
add
or
cli
sub
outsl
sarb
inc
mov
dec
movsl
adc
push
or
sbb
loopne
jmp
mov
mov
gs
pop
es
push
push
lods
push
mov
bndstx
jmp
jns
cli
addl
lahf
cmp
mov
add
cmpsb
mov
movsl
mov
dec
or
cltd
push
mov
dec
jle
cli
aam
aad
jae
cwtl
jae
dec
push
out
inc
dec
mov
mov
dec
je
gs
push
push
arpl
and
int
mov
push
jmp
cltd
lods
jle
xabort
insl
movsl
js
xchg
in
fisttpll
jnp
stc
jmp
scas
aad
fucom
cmpsb
cmp
int
mov
or
cmp
add
aam
ja
mov
mov
inc
push
dec
add
pop
out
push
sbb
fs
xchg
addr16
rolb
inc
mov
ficoms
adc
push
dec
jne
mov
sbb
decl
in
push
loop
iret
sbb
xchg
dec
mov
sahf
loop
pop
loop
or
clc
sbb
scas
inc
cld
rcl
lock
xchg
and
xor
xchg
aas
fsub
cld
push
out
lods
nop
rcll
lods
adc
leave
in
push
popa
sarl
jge
xor
decb
push
clc
cmpsl
mov
mov
lods
inc
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
mov
jg
dec
mov
lahf
jge
jo
cmc
jle
add
jb
xchg
out
push
push
push
in
adc
movsl
lock
in
mov
aaa
xchg
mov
xchg
dec
int
sbb
movsl
dec
push
pushf
jp
arpl
xchg
inc
jnp
aaa
add
adc
aas
add
xchg
out
inc
scas
or
jmp
vhaddpd
dec
cmc
imul
fcomip
test
xchg
and
imul
add
push
inc
mov
jge
rcl
sbb
push
hlt
in
repz
sub
mov
mov
test
jp
hlt
int
ljmp
mov
loop
insl
sbb
push
sbb
decl
xor
adc
outsb
push
movsl
outsl
sbb
rcrb
pusha
sbb
mov
sbb
sahf
push
mov
sbb
dec
jns
movsl
pop
jb
lret
xchg
aam
fbstp
out
xchg
lock
and
dec
nop
and
push
test
out
mov
xor
mov
fsubrp
and
push
pop
dec
xor
cs
repz
dec
imul
mov
jno
test
jb
mov
and
sbb
fmull
rcr
or
add
xlat
cmp
inc
out
mov
loope
rolb
mov
and
pop
sub
call
or
xchg
push
push
sbb
movsl
or
jo
cmp
fldt
dec
xor
idiv
xchg
mov
jne
mov
pop
cmp
lea
mov
pop
or
mov
bound
lods
dec
stos
stos
jno
shrb
inc
push
cmp
and
jmp
inc
dec
cmp
xor
push
jmp
das
mov
inc
test
clc
aam
jno
test
xor
xor
jne,pn
jl
dec
addr16
sub
pop
out
loopne
or
mov
sahf
push
sbb
or
push
nop
cltd
sub
fisttpl
add
notl
pop
insb
jl
pushf
mov
hlt
inc
sbb
fdivl
scas
out
jp
pop
mov
sahf
pop
sbb
xchg
aad
pop
mov
ret
dec
cmpsl
cltd
lds
sbb
js
push
inc
ret
sbb
add
and
fldcw
add
add
mov
ret
add
xchg
push
fwait
cmp
rcrb
lret
mov
mov
popa
and
fs
lret
fcomps
shrb
loope
adc
lret
dec
sarl
mov
add
addr16
mov
cmpsl
outsb
sbbb
into
repz
xor
sub
lods
out
mov
adc
ret
mov
pop
push
stos
adc
add
or
stc
xchg
sahf
dec
fldt
stos
movsb
lds
roll
fdiv
xchg
icebp
sbbl
js
sub
mov
add
pop
xchg
pop
mov
mov
das
push
out
jbe
jno
xchg
and
lock
scas
loope
adc
mov
xchg
xor
push
nopl
insb
mov
outsb
mov
fs
sbb
jmp
lcall
into
lret
mov
test
in
mov
cmp
inc
arpl
mov
into
fldcw
dec
jae
mov
in
clc
cmp
js
test
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
repz
or
in
xchg
jo
lahf
jge
jo
rcll
xor
jmp
shll
mov
repnz
in
int3
loopne
mov
sub
mov
push
pop
test
dec
in
or
cmpsl
jp
lods
inc
sbb
icebp
shll
das
pop
pop
stos
inc
aas
add
cmp
sub
jb
rol
aas
pop
aas
dec
int3
mov
out
fwait
pop
add
outsb
cmp
xchg
pop
add
pop
fnstenv
push
inc
je
arpl
cmp
add
enter
inc
adc
sbb
test
push
and
xchg
iret
int
or
inc
call
dec
add
out
and
bound
jo
push
xor
inc
mov
add
mov
popf
lahf
test
jecxz
insb
repz
lods
mov
xchg
in
or
fs
and
mov
push
fld
or
fidivrs
pop
mov
mov
jne
leave
icebp
xor
dec
imul
ds
sahf
decl
fcmovne
test
sbb
xchg
or
loopne
ds
jecxz
push
stos
jnp
sub
sahf
shlb
sub
sbb
lcall
fimull
dec
pop
push
fbstp
pop
sub
dec
stos
jbe
dec
add
jmp
pop
jmp
mov
ljmp
sub
jg
repz
jae
push
aaa
loopne
dec
xlat
xor
sbb
cwtl
push
mov
mov
sbb
mov
fildl
push
insl
in
pop
or
fadd
xchg
xchg
cmp
jbe
cld
push
ja
daa
sti
hlt
ret
ret
jno
stc
xchg
xchg
push
outsb
sub
sti
sbb
sarl
stos
gs
ss
xlat
pop
aam
mov
imul
adcb
repnz
outsl
enter
ret
stos
inc
iret
out
out
rcll
cmp
gs
pop
cld
test
cmp
mov
aam
shrb
xchg
jge
lea
fisubl
cmpsl
stos
add
xchg
fsubs
xchg
stc
add
pop
adc
rcll
xchg
outsl
push
inc
insb
mov
mov
outsl
shrb
jne
adc
pushf
imul
loop
stos
adc
or
pop
negl
shlb
and
into
sbb
in
or
xchg
test
mov
mov
ret
cld
or
fdivrl
inc
fsubrl
aad
iret
pop
loope
xor
shlb
shl
xchg
sub
test
and
pop
jae
push
dec
mov
mov
push
lahf
lods
xchg
push
inc
and
mov
jmp
loope
fwait
fs
aas
xchg
lds
adc
or
lods
jmp
jg
aad
adc
xlat
pop
fwait
loop
inc
iret
iret
fcmovbe
jb
xorl
inc
jg
jp
mov
jb
mov
out
pop
enter
xchg
sti
insl
jmp
inc
sub
cmpsl
into
nop
rep
pop
fsubl
pop
stos
sarb
and
pop
movsb
lret
das
cli
repnz
int3
ds
ljmp
sub
in
dec
mov
js
cld
pop
cmpsl
add
or
xchg
std
mov
and
loopne
mov
mov
lds
psrlw
and
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
sbbl
mov
jo
jge
jo
mov
add
in
mov
aaa
cmp
icebp
jmp
lea
ret
jg
xchg
cmp
xor
cli
sbb
adc
adcb
and
push
clc
cmpsl
sub
jne
out
jmp
gs
aas
xchg
mov
loopne
pushf
jge
lahf
push
pop
push
or
sub
cld
xchg
and
in
das
stos
sbb
xor
cltd
xchg
mov
inc
sub
push
ds
pop
adc
inc
cltd
mul
orl
and
out
les
cli
scas
loopne
pop
pop
push
gs
int3
mov
mov
adc
cli
add
aad
in
dec
popl
lock
inc
pop
xor
imul
push
insb
fcoml
push
xchg
repnz
mov
stc
scas
outsl
mov
js
out
pop
xchg
adc
pop
inc
push
movsl
xchg
add
cli
xchg
jp
cmp
and
popf
fwait
mov
lock
or
jae
pop
push
fld
dec
jnp
or
mov
xor
loope
mov
ljmp
pop
movl
lahf
or
cli
loopne
or
cmp
leave
dec
cmp
inc
aam
xor
sub
add
xlat
int
jae
sub
add
and
cmc
fistl
dec
jge
pop
outsb
push
jle
and
mov
jge
ret
or
mov
pop
xor
into
mov
cs
fimuls
loop
mov
jo
add
xchg
test
outsb
mov
fidivrs
jno
adc
and
sbb
xchg
in
cmp
push
sub
cmp
or
xchg
test
mov
es
push
mov
jl
xor
movsb
pop
hlt
mov
adc
mov
aam
jl
add
push
leave
add
adc
push
mov
aaa
in
xor
and
mov
mov
mov
stc
push
je
les
sbb
dec
jecxz
mov
and
jge
or
scas
shlb
jno
cmp
jl
jp
movsl
fst
xchg
leave
mov
popf
jl
jg
or
rcll
ret
aad
add
fld
test
jle
mov
ficoms
fwait
lods
mov
test
mov
scas
ja
repnz
into
sahf
adc
xor
and
inc
das
test
std
in
push
jle
nop
clc
adcl
cmp
sbbl
and
call
or
mov
or
outsb
push
loop
iret
and
negl
xchg
mov
mov
mov
push
xchg
add
clc
mov
mov
ficoms
push
repz
or
add
xor
daa
adc
jno
xchg
dec
loopne
dec
movsl
bound
sarb
cmp
or
push
mov
insl
je
lcall
sbb
sub
jmp
adc
jmp
mov
adc
rclb
iret
aad
fdivrl
pushf
setno
adc
push
mov
out
cltd
ja
in
cli
hlt
in
xor
xor
push
push
lods
adc
stos
sbb
sub
mov
mov
lods
or
mov
sub
movsb
mov
fimull
movsb
ja
dec
add
stos
inc
add
xchg
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
iret
inc
mov
popf
jo
lahf
jge
jo
adc
orl
push
js
mov
or
mov
cmp
das
adc
dec
fxch
add
lods
push
adc
outsl
or
cli
outsl
sbb
je
cmpsl
pop
sbb
jae
imul
push
addr16
sub
rorl
rcrb
repnz
aaa
dec
jecxz
add
inc
data16
aam
int
push
or
add
xor
stos
fldcw
dec
movsl
ret
add
mov
adc
iret
movsb
loopne
imul
sbb
lock
pop
dec
cld
mov
sub
dec
xlat
xchg
dec
xchg
pop
nop
mov
mov
push
mov
insl
cmp
or
popf
or
repz
gs
fnstsw
mov
mov
es
fsubs
loop
push
dec
call
inc
jg
and
xchg
insl
jmp
aas
stos
pusha
int3
push
sbb
sahf
add
ret
mov
sbb
shrb
jmp
int
mov
lods
outsb
in
lret
dec
incl
rcr
testb
mov
xor
sbb
sbb
popf
out
pop
sbb
and
inc
add
pop
shll
sub
outsb
scas
out
jo
stos
lea
xchg
frstor
or
int3
outsb
lea
fwait
or
dec
xor
push
jnp
int
dec
test
out
jmp
rorb
addl
roll
fs
sbb
and
ja
cmp
scas
shlb
jg
and
or
pop
xchg
cmc
sti
inc
cmpsb
mov
inc
enter
notb
xorl
ret
mov
add
mov
loop
xor
outsl
fwait
push
jbe
sub
test
push
lret
int
in
test
mov
jge
ds
dec
loop
jne
xchg
jne
loopne
aas
lretw
ja
nop
cmc
inc
in
and
divl
out
or
inc
lea
mov
repnz
fcmovnbe
xorb
add
pop
cmpsl
outsb
mov
int
jmp
fimull
pop
sub
jg
insb
fwait
add
mov
outsl
inc
mov
pop
mov
dec
or
push
std
rolb
add
and
xor
andb
push
loop
cwtl
pop
inc
mov
movsb
inc
lock
sub
adc
cmp
fimull
mov
lret
mov
fadd
xchg
inc
maxps
mov
dec
jb
sub
mov
add
and
inc
aaa
cmp
sahf
cmpl
lcall
dec
repz
cltd
sub
mov
bswap
ljmp
test
lahf
inc
push
xorb
rcll
outsl
or
jl
in
sarb
inc
inc
fdivl
aas
dec
dec
fidivrl
in
or
push
add
ljmp
cltd
sbb
push
lods
jle
lods
ficompl
enter
mov
sbb
sahf
mov
mov
aam
insb
lahf
dec
add
in
and
les
mov
imul
out
push
xor
outsb
fidivrl
add
push
idivl
clc
xchg
daa
test
jmp
fsubs
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
push
divb
leave
cltd
jo
lahf
jge
jo
xor
popa
adc
push
mov
popa
je
inc
pop
aaa
mov
popa
mov
or
pop
mov
jp
les
cmp
mov
adc
lfs
out
stos
nop
repnz
jno
mov
rclb
jp
dec
cmp
leave
mov
add
pop
lods
pushf
cmp
push
popa
mov
es
out
mov
inc
push
ret
lock
jle
xchg
jne
repz
xor
or
dec
clc
popf
icebp
out
xchg
push
mov
lcall
insl
iret
jb
out
xor
enter
jo
xchg
stc
fsts
mov
xor
mov
adc
xchg
mov
inc
mov
and
test
dec
stos
outsb
and
pop
repnz
das
xlat
test
mov
xchg
cmp
lret
popf
stc
xchg
cmp
xchg
rclb
lods
adc
push
xor
lea
jmp
leave
cs
into
xlat
out
loopne
mov
outsl
push
adc
xchg
xor
push
out
out
pop
loope
push
dec
jle
fwait
and
mov
jge
nop
loope
add
xor
out
add
cs
test
mov
nop
inc
inc
adcb
pop
xchg
call
ds
orb
loopne
repnz
rolb
push
or
jmp
pop
mov
cld
ret
sub
mov
and
daa
pop
mov
push
sub
ss
inc
mov
add
add
sbb
iret
lret
sti
pop
and
aam
jo
outsl
data16
jge
aad
enter
lds
aad
in
sub
cltd
jle
sub
xchg
pop
xor
sub
mov
rcrb
outsb
jl
dec
pop
cmp
loopne
inc
test
je
push
jbe
jb
push
dec
sbb
jae
stos
xor
movsb
stos
aad
xchg
rorl
jge
cmp
arpl
cmp
mov
mov
dec
cwtl
hlt
popa
xchg
pop
cld
fs
add
push
daa
int
icebp
bsf
sub
int3
mov
cwtl
pop
jmp
jnp
add
xchg
mov
mov
lea
movsb
jae
fcmovnb
add
xor
pop
insl
and
sahf
cltd
out
sbb
bound
adc
mov
stos
mov
and
push
lods
inc
xor
jnp
dec
dec
cmp
add
mov
add
leave
push
xor
jb
leave
sbb
iret
dec
and
push
jg
push
mov
pusha
fdivrs
ds
push
ss
rclb
jb
filds
pop
mov
dec
adc
imul
mulb
lea
inc
sahf
push
dec
lcall
outsl
int
dec
stos
cld
adc
sahf
cmpsb
inc
cmp
mov
loop
inc
jmp
nop
leave
lret
inc
sbb
and
gs
inc
cmp
xor
or
add
aam
push
adc
jge
rolb
jb
pop
addl
cli
sub
jecxz
xchg
es
xchg
movsb
mov
inc
push
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
repnz
ret
jg
jo
dec
xlat
and
mov
sbb
xchg
mov
loop
xor
cmpsb
sub
add
push
into
xchg
dec
xorl
scas
call
pushf
test
mov
push
push
lods
fisubl
gs
cmpb
cwtl
out
jnp
sub
iret
adc
adc
idivl
sbb
outsl
push
push
in
xchg
test
sub
add
movsb
rorb
adc
aaa
sub
jbe
inc
subb
loopne
outsb
outsl
xor
orb
pop
dec
jecxz
add
mov
icebp
xchg
nopl
jne
cmp
movsb
pop
aas
test
into
addr16
ja
call
aam
out
cmp
pop
lods
jnp
push
cli
stos
cmpsl
lods
pop
loop
jp
xlat
fs
xor
cmp
cs
test
lods
mov
mov
stos
lret
and
aam
pop
mov
sub
cmc
adc
test
xchg
rcl
and
aaa
jne
movsl
pop
popa
pop
test
rorb
pop
xorl
mov
cwtl
outsb
filds
mov
cmpsl
mov
iret
daa
xchg
xchg
js
jmp
out
or
out
mov
iret
in
loope
add
std
std
inc
add
add
add
add
or
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
enter
cmp
jo
in
sub
lods
ret
sub
in
insl
insb
dec
popa
lods
adc
leave
jmp
movsb
lods
enter
rol
addr16
pushf
fcoml
adc
repz
repnz
xor
inc
pand
push
paddd
cmp
and
ds
mov
push
push
mov
testb
lds
jl
mov
push
and
xor
das
pop
mov
jge
sbb
scas
or
pop
scas
imul
rorb
mov
push
orb
push
mov
jb
pushf
inc
fimull
push
xchg
filds
ja
sbb
push
and
xor
inc
mov
call
repz
jl
mov
jecxz
mov
adc
mov
in
shlb
push
jnp
push
jno
test
inc
js
mov
cld
rorb
shlb
and
rorb
fwait
dec
not
imul
popa
cltd
sub
leave
ds
iret
dec
mov
inc
fidivs
push
jne
push
jbe
mov
pusha
inc
mov
cld
roll
hlt
and
psadbw
dec
icebp
push
inc
stos
js
or
add
mov
int
aaa
dec
pmuludq
pop
and
leave
mov
dec
lcall
test
scas
movl
and
lea
mov
jmp
rorl
sbb
adc
mov
jo
or
jne
in
test
test
push
sub
pop
sub
ja
dec
and
xor
rcl
push
movsb
std
dec
fcmovnbe
mov
jo
gs
push
push
jbe
mov
lds
nop
int
push
mov
into
xchg
xchg
cltd
sub
xor
jge
aas
and
pop
mov
test
dec
jo
mov
dec
les
fwait
popf
mov
icebp
stc
pop
xor
js
add
imul
leave
cs
cli
dec
jge
mov
lds
push
jb
push
and
jno
sub
push
adc
push
insb
mov
xor
out
adc
sub
dec
inc
mov
jle
pop
repnz
lock
andb
jnp
or
mov
xlat
cwtl
cli
lods
imulb
mov
sub
outsl
orl
out
add
arpl
lahf
fidivrs
cmpb
xchg
jl
inc
jne
dec
xchg
cld
sbb
and
sti
pop
fidivl
js
gs
jp
push
iret
xchg
xor
filds
jp
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
mov
mov
jo
and
adc
inc
or
cmpsb
mov
mov
and
in
mov
andb
cltd
popa
repz
sbb
in
cmpsb
jge
sub
mov
jns
xchg
inc
sbb
mov
fmuls
adc
rcrb
imul
and
shrl
scas
xor
bound
adc
mov
mov
je
enter
lock
mov
mov
jb
lea
stc
xchg
xchg
push
mov
loopne
sahf
jae
fnstsw
or
inc
mov
lret
stos
adc
movsb
pushf
mov
shlb
in
cmp
sahf
push
add
shr
lret
jmp
mov
adc
inc
pop
ss
repnz
sub
sub
adc
add
scas
test
mov
adc
jns
in
push
ljmp
clc
stos
mov
pusha
adc
xchg
jl
lcall
mov
sub
adc
mov
push
lahf
dec
pop
out
sbb
test
stc
and
cmp
nop
sub
sub
mov
xor
sbb
sti
and
rcrb
sbb
std
inc
add
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
inc
push
pop
cmp
mov
jo
mov
out
mov
push
pop
pop
cmpl
mov
mov
cmp
xor
into
xchg
sub
adc
sbb
popf
xchg
mov
push
sti
enter
xor
je
leave
sbbl
imulb
add
adc
pop
push
rep
xor
and
arpl
mov
call
scas
jmp
adc
fsubr
sti
pop
or
ljmp
loop
movsl
stos
adc
outsl
push
cli
rcrl
push
or
jmp
mov
dec
jp
mov
mov
lcall
xor
push
inc
fdivs
inc
add
xlat
pop
sbb
lds
xor
cmpsb
stc
and
adc
xor
pop
repnz
or
add
hlt
test
ret
repnz
mov
mov
add
cli
cmp
pop
aaa
pop
mov
adc
cmpsl
test
mov
xchg
pop
hlt
pop
test
lcall
adc
mov
or
cwtl
push
push
pop
push
fwait
adc
push
hlt
dec
and
and
jne
mov
mov
sarl
inc
xchg
inc
or
ljmp
xchg
jne
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
lahf
imull
jo
inc
mov
lods
jbe
jp
inc
add
xor
or
add
sbb
and
lock
int
xchg
in
fadds
ljmp
into
test
dec
ljmp
dec
mov
fsubrl
lea
dec
jg
in
movsl
mov
jnp
add
and
adc
leave
jns
jecxz
pop
mov
mov
jmp
jg
mov
repnz
shr
mov
mov
ss
roll
push
cmp
incb
faddl
clc
jns
sbb
arpl
pop
cmp
mov
cmpsb
or
sahf
test
sbb
dec
jns
in
dec
imul
shlb
jns
jge
inc
add
inc
jb
pop
jbe
inc
std
push
mov
movsb
out
pop
pop
andb
jnp
es
add
daa
push
scas
push
movsb
cmp
movaps
add
aad
sbb
imul
xor
cs
and
out
and
adc
dec
shll
cli
and
lret
test
cwtl
call
jae
add
shlb
lcall
push
xchg
xor
or
dec
xlat
pop
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
push
shlb
scas
jo
ret
jg
jo
adc
lods
inc
idivb
push
xor
jp
adc
and
xchg
fs
fnsave
in
iret
push
and
pop
and
iret
inc
push
fwait
sti
clc
dec
call
or
repnz
pusha
hlt
stos
std
in
nop
sub
test
das
adc
lock
add
push
shrl
adc
mov
mov
addr16
stos
mov
ret
rcrl
sub
sbb
lods
inc
push
push
movsb
or
push
and
cmp
pop
jo
jl
and
jge
lahf
incb
outsl
mov
out
shlb
mov
xchg
xor
dec
sub
inc
inc
mov
pop
or
mov
pop
dec
lcall
std
sti
sub
pop
sub
fildll
imul
sub
inc
gs
pop
add
adc
pop
push
stos
je
sbbl
insl
pop
enter
test
dec
mov
dec
cmp
push
shrl
sub
movsl
or
push
sbb
in
sub
pop
adc
or
add
and
and
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
sub
jo
jg
jo
cs
fcom
test
std
cmp
mov
iret
call
push
push
push
mov
test
mov
addr16
mov
outsb
push
cmp
pop
mov
sbb
sub
mov
sub
sbb
clc
pop
push
xchg
sub
repz
inc
mov
xor
in
sbb
insb
pop
cmp
cmp
inc
jge
xor
adc
shrl
adc
ficoms
fnstcw
outsb
xor
lcall
or
mov
adc
cwtl
jle
xchg
inc
js
inc
mov
xchg
repz
xor
iret
mov
xchg
sbb
mov
or
iret
imul
dec
mov
addr16
cmp
stos
callw
out
frstor
and
pop
mov
dec
fxch
or
push
mov
les
push
inc
xchg
fucomi
push
fsubrs
daa
fsubrl
pop
fwait
push
leave
fcmovbe
add
mov
movsl
adc
mov
jmp
cmp
pusha
jno
push
popf
jne
lret
mov
mov
xor
xor
loop
cmp
sub
fld
popa
cltd
sbb
adc
jge
xor
ss
xchg
mov
sahf
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
pushf
jl
shrb
jo
into
xchg
fists
pop
sbb
and
mov
push
xchg
leave
sbb
mov
push
cmpsl
int
rolb
xchg
cmpsb
scas
mov
loope
lcall
in
enter
call
or
int3
xor
hlt
dec
xchg
shlb
pusha
dec
sbb
and
fwait
out
pushf
mov
pop
jmp
inc
mov
cmpsb
push
repnz
xchg
ss
mov
adc
sub
mov
inc
call
sbb
fwait
sub
jle
sbb
jnp
jp
sub
xlat
test
shrl
add
mov
scas
je
jl
inc
push
jne
aad
rol
adc
int3
test
shr
xchg
xchg
nop
ficomps
fcomp
sub
add
jl
add
cmp
cmp
mov
push
insb
jae
mov
and
ret
xor
cmp
pop
cmp
xchg
adc
out
adc
push
outsb
out
lret
mov
xchg
aam
out
xchg
insl
decb
pusha
scas
cld
pop
push
addr16
push
or
les
and
xchg
out
push
sbb
inc
mov
jmp
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
insl
fsubl
jg
jo
into
mov
dec
data16
test
inc
mov
mov
xchg
repz
cwtl
cmp
dec
js
xor
pop
icebp
sub
and
gs
lods
push
pop
scas
cltd
call
test
and
add
mov
fxch
pop
mov
cmp
xchg
jmp
push
shrl
cmp
xor
leave
jge
fimull
cmp
mov
aam
sahf
imull
xor
aas
test
je
jno
mov
dec
outsl
and
aad
ret
pop
xchg
stos
ljmp
and
xor
xchg
mov
cmp
dec
inc
mov
cmp
ds
adc
cmc
mov
jp
jp
dec
fildl
add
clc
ret
sub
test
test
sbb
movsl
cmp
dec
or
aaa
into
inc
cld
adc
out
sti
int
fisubrs
inc
and
jae
mov
fiaddl
popf
outsl
dec
add
scas
popa
inc
fwait
push
sbb
cld
sbb
idivb
js
mov
jno
pop
hlt
push
xor
pop
adc
movsl
lods
lahf
push
add
sbb
stc
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rclb
outsb
sahf
jbe
jo
ret
jg
jo
ss
pop
add
sbbb
ffree
rol
mov
bound
roll
xchg
add
lock
or
pop
pop
xor
lods
mull
mov
fcompl
sub
sub
in
ss
fs
rcrb
sub
xchg
jp
inc
mov
xchg
mov
repnz
inc
and
mov
push
push
sub
and
inc
shlb
int3
and
rolb
fs
fisttps
mov
movsb
mov
adc
popa
dec
xchg
adc
pop
cs
and
orl
out
scas
movsl
repnz
sbb
xchg
pop
iret
jno
ljmp
inc
lods
push
andb
lcall
stos
stos
imul
iret
pop
adc
adc
jae
shrb
rcrb
imull
xchg
enter
loop
in
clc
mov
sbb
sub
imul
outsb
fsubr
mov
add
pop
sub
lahf
loop
mov
push
pop
lock
scas
push
out
cmc
and
aad
jp
sbb
cmp
dec
jo
mov
or
pop
push
push
testb
jnp
xchg
dec
cmp
xor
jmp
inc
gs
icebp
imul
outsb
cmp
ret
jg
jo
mov
loope
aam
mov
sbb
xchg
insl
stc
adc
mov
cmpsl
jne
out
test
out
push
dec
insl
inc
xor
jb
mov
push
fnstenv
call
fmull
mov
xlat
or
push
or
push
adc
arpl
mov
push
jecxz
fs
rolb
fdivrl
call
add
pop
lods
fs
ficoms
xchg
lock
addr16
mov
bound
call
jno
jb
in
dec
jne
adc
jg
cmp
call
shr
scas
sbb
orb
push
sub
fstl
lret
std
out
pop
jno
or
cld
push
clc
pusha
or
or
jle
aam
pop
xchg
sub
stos
xchg
daa
sub
jg
fiadds
push
push
fldcw
mov
mov
aad
sbb
cmp
xor
sub
xor
cmp
subl
cwtl
dec
push
mov
arpl
push
pop
fcmovnb
scas
inc
and
add
jecxz
add
cmp
and
mov
jbe
cli
popf
into
data16
leave
and
xor
decb
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
enter
mov
jo
mov
scas
lods
cltd
push
lea
ss
pushf
mov
add
dec
insb
fisttpll
adcl
es
pop
jmp
cli
js
xchg
test
into
mov
pop
es
mov
ret
xor
cmpl
loop
lahf
cmove
cwtl
loop
push
inc
fucomip
jge
in
pop
push
and
adc
out
in
rorl
xchg
ret
add
lods
jae
ret
inc
mov
mov
les
jbe
adc
cmp
lods
mov
mov
mov
insl
nop
std
dec
mov
movsb
jne
fildl
mov
inc
push
xor
push
clc
lcall
lcall
out
cmp
xchg
in
mov
mov
inc
mov
in
inc
pop
jmp
shlb
mov
inc
inc
push
inc
jmp
repz
cli
cli
out
push
fucomi
add
mov
sbb
sti
cmpsb
mov
loope
dec
sbb
idivb
jg
fstpl
enter
lea
or
mov
mov
ljmp
iret
xchg
out
push
cmp
movsl
lods
mov
jns
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
dec
xchg
jo
mov
je
adc
sahf
loope
dec
mov
call
loope
imul
push
jno
push
call
push
pushf
adc
cwtl
insl
push
scas
add
jl
inc
and
insb
mov
pop
inc
fiaddl
lods
scas
pop
lret
mov
pop
mov
cmp
shlb
rclb
push
xor
push
sub
rcrl
adc
into
es
sbb
add
mov
lret
inc
push
push
into
stos
pop
pop
xor
in
jb
or
outsb
sbb
push
insl
mov
sbb
xchg
mov
ja
inc
or
xchg
lcall
mov
push
dec
mov
int3
rorl
sti
insb
sbb
xchg
dec
xor
push
js
repnz
inc
xchg
fnstenv
xor
xchg
xchg
lea
out
arpl
aam
movsb
mov
pop
adc
or
mov
es
xchg
movsl
testl
lds
jo
jns
rolb
lahf
push
cmp
add
jecxz
jbe
xor
fsts
sub
mov
jno
subl
mov
pop
inc
addr16
stos
rcl
shll
sub
ret
pop
cwtl
inc
cld
mov
pop
sbb
sbb
jno
adc
out
iret
loope
and
mov
stc
jl
adc
mov
mov
xchg
ja
icebp
adc
add
inc
call
mov
or
jp
outsl
test
mov
pop
pushf
icebp
and
popa
int
pop
into
cmc
leave
mov
lahf
dec
gs
repz
cmp
cld
push
ds
in
fsubrs
dec
icebp
rcll
add
mov
divl
ds
out
filds
int3
call
pop
test
cwtl
mov
push
je
jl
pop
fsubp
push
sbb
or
sti
clc
outsb
icebp
mov
pop
cli
iret
je
add
sub
mov
aas
mov
xchg
push
pop
call
shl
jecxz
ja
xlat
pop
daa
dec
cmp
in
xchg
outsb
push
lock
jb
out
sub
mov
pushf
or
in
mov
xchg
pop
pop
gs
ret
or
push
les
loope
stos
xor
dec
inc
adc
mov
mov
insb
sbbl
lock
arpl
fsubs
jbe
jbe
jnp
daa
jo
pop
arpl
repz
jmp
lds
inc
jp
jno
mov
mov
subb
or
lods
daa
cwtl
jecxz
mov
mov
call
test
jle
call
xor
jb
sub
mov
shll
or
cmp
mov
push
mov
xor
jns
imulb
mov
fsubl
or
sbb
mov
push
pop
mov
je
mov
addr16
shll
sub
pop
sbb
popa
in
pop
cmc
jmp
orl
and
inc
aaa
add
adc
inc
xor
jbe
pop
movsb
test
fadds
shl
mov
xchg
pop
dec
inc
cli
pop
aam
sti
adc
lret
jo
fldt
push
negl
jmp
mov
cli
xor
testb
rcrb
xorb
jo
rcrb
xor
subb
mov
pop
jecxz
push
data16
and
cli
and
mov
arpl
int
dec
rorb
fcmovu
sub
fisubs
xchg
pop
dec
sub
sahf
mov
pop
xchg
insl
jmp
dec
pushl
mov
mov
jl
jecxz
sbb
lret
out
arpl
inc
jge
movsb
addr16
or
jecxz
aam
push
outsb
hlt
aas
mov
fucom
jne
pop
leave
bound
mov
sbb
stc
push
adc
loopne
in
xchg
jns
into
mov
enterw
aaa
cli
sbb
jns
adc
jo
and
ss
test
mov
jge
sub
xchg
jp
cmp
clc
or
xchg
inc
adc
outsb
daa
adc
lods
pop
mov
sbb
test
movsl
fsubrs
scas
rolb
movsb
pop
lret
inc
repz
jns
cmpsb
mov
cmp
test
imul
nop
sbb
and
xlat
mov
push
mov
addr16
push
call
xchg
jecxz
pop
mov
sub
call
push
and
add
xor
jae
ret
mov
out
xlat
lret
xchg
test
fdivrl
xor
mov
or
fstpl
cs
xchg
push
in
pop
cmp
cmp
gs
push
ret
pop
outsl
leave
mov
lcall
mov
andb
mov
sar
sub
xchg
cmp
pushf
adcb
lret
push
aam
mov
shrl
daa
adc
insb
js
scas
xor
push
dec
dec
insb
gs
inc
mov
into
cmpsb
mov
out
test
xor
cmp
pop
stos
shrl
mov
aas
je
mov
pushf
cwtl
pop
add
cmpsl
addr16
mov
add
call
pop
push
addr16
adc
data16
sbb
mov
and
add
scas
push
outsl
jge
scas
mov
inc
xor
cltd
enter
dec
dec
jg
sub
loop
lods
loope
push
loop
sbb
jo
cmc
clc
call
or
pop
fdiv
xlat
leave
outsl
cmpsl
push
mov
sti
out
xor
sbb
push
pop
cmpsb
ds
xrelease
xchg
enter
lods
and
mov
xchg
dec
out
or
jns
dec
mov
cmp
arpl
mov
jmp
shll
mov
pop
cltd
in
mov
dec
push
mov
sub
sbb
lods
and
jb
shll
xor
popa
push
fisubl
and
adc
xor
cmpsb
push
jge
cmp
enter
fsubrs
mov
sti
movsb
popf
or
mov
dec
jmp
mov
movsl
je
sbb
leave
addl
and
push
jle
ret
das
ret
lahf
in
xchg
dec
call
mul
pop
pop
push
or
xchg
fdivrl
sbb
aad
and
lods
in
mov
fldt
inc
dec
jb
adc
or
pop
mov
call
mov
push
dec
sub
mov
dec
lcall
sbb
push
ret
fsubrl
imul
aas
jnp
sub
or
dec
push
mov
add
inc
cld
xor
or
loop
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
and
jo
jge
jo
scas
into
pushf
dec
sbb
imulb
pop
sub
imul
out
adc
add
bound
mov
push
mov
int
jg
xor
test
mov
fbld
cmp
iret
and
cmp
mov
mov
xchg
outsb
jp
fists
ds
aaa
adc
rol
pusha
out
int3
mov
cmp
in
popf
jmp
inc
cltd
loopw
jne
cmpsb
in
sub
mov
jo
or
loopne
sahf
rcll
jp
push
inc
and
testb
sbb
jecxz
xchg
dec
orl
fdivrs
pop
sub
fs
shll
push
std
scas
sub
repz
or
addr16
fistpll
cwtl
mov
sbb
add
mov
sbb
push
out
addr16
aad
or
and
inc
nop
push
cmp
scas
into
xlat
sarl
jnp
pop
add
xchg
mov
loop
nopl
dec
xor
jle
stos
popf
mov
movsb
sbb
add
add
in
and
mov
pop
js
push
decb
adc
jge
or
pop
mov
scas
out
jno
sbb
xchg
pop
mov
imul
loop
xor
ljmp
insb
arpl
inc
popl
incl
sbb
adc
push
gs
jbe
leave
sbb
cwtl
test
xor
movsb
mov
in
mov
pop
fsubrs
movsl
xor
pusha
mov
mov
aam
je
push
call
iret
ss
and
mov
jb
jg
mov
mov
xlat
fwait
push
or
push
mov
call
sti
mov
sbb
pop
lahf
and
jmp
in
popa
lds
xor
sti
jle,pt
les
xchg
jne
out
iret
xor
pop
sbb
push
xchg
bound
xchg
sbb
add
push
loope
fsts
dec
push
adc
pop
xchg
and
mov
cwtl
pop
mov
aaa
xchg
icebp
aaa
fs
mov
jno
mov
push
lds
movsl
test
xorl
int3
jbe
movsb
jge
sub
imul
sbb
sbb
inc
pusha
popa
add
mov
orl
outsb
popa
cltd
pop
lahf
adcl
cmpsl
loopne
test
mov
sbb
jbe
push
sti
inc
iret
pop
int
or
sbb
cld
adc
mov
dec
sbb
sarb
ja
daa
lret
inc
xor
cs
cmp
cltd
cmp
in
mov
mov
add
std
and
outsb
test
pop
es
std
pop
push
hlt
fiaddl
lods
ret
adc
aad
out
xrelease
xchg
sub
jmp
outsb
mov
rcll
jno
push
lcall
aad
mov
or
aaa
fstpt
pop
dec
sahf
ja
mov
outsb
push
lock
scas
dec
iret
fisttps
sub
push
cmpsb
mov
sahf
lea
aam
rorl
mov
std
push
push
cmp
mov
xor
and
push
out
and
mov
arpl
jmp
fsubrl
push
fs
sbb
push
add
and
fwait
mov
dec
or
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
fsubrl
sub
shrl
test
in
mov
xchg
cmp
popf
jne
es
aaa
inc
rorl
bound
inc
adc
aam
pusha
mov
lret
jle
int3
cmp
sti
sbb
jno
in
mov
sub
xor
sbbl
push
insl
and
dec
dec
out
xor
popa
cmpsb
or
pop
loop
jns
add
fisubl
lcall
mov
mov
or
or
xchg
ljmp
out
iret
push
pop
push
out
movsb
push
pop
and
cs
pop
push
or
jmp
jo
cmp
pop
xchg
push
xchg
pop
rcr
es
shlb
shll
mov
and
sbb
nop
enter
dec
movsb
imul
out
lahf
idiv
adc
fadds
jle
xchg
test
fdivp
xorb
xorb
sbb
cwtl
xchg
xchg
sub
or
jnp
insb
ljmp
mov
rcrl
mov
dec
push
sahf
insb
sahf
in
pop
push
cmp
mov
push
push
cli
sti
or
inc
repnz
out
push
fcmovnb
adc
fsubrs
jno
mov
push
ja
scas
mov
ja
jp
mov
js
mov
sub
andb
sbb
push
ljmp
fnstcw
aam
cmp
mov
pop
or
insb
testl
dec
adc
pop
xlat
fadds
lahf
mov
adc
fwait
sbb
btc
ds
cwtl
imul
int3
mov
hlt
cmpb
in
inc
xor
in
cli
and
dec
dec
push
repz
lcall
lock
aad
xchg
lahf
stos
outsl
xchg
out
mov
faddl
dec
in
in
mov
fists
lock
xchg
movsb
dec
mov
cmp
add
outsb
mov
cmpl
bound
in
mov
adc
inc
fildll
pop
pop
sbb
scas
imul
sub
sahf
push
jl
ficoms
js
pop
sbb
inc
inc
sub
add
xchg
xchg
cli
add
je
mov
scas
aaa
cwtl
mov
cmp
jbe
xchg
adc
movsl
movsb
rcr
push
das
mov
add
es
dec
adc
das
sarl
xchg
mov
hlt
test
pop
cmp
outsl
jmp
dec
lods
lock
das
push
arpl
xor
and
xor
mov
lods
xchg
loope
lods
popf
cld
inc
int
mov
shll
sub
or
jo
jecxz
bound
pop
andl
jbe
mov
rcll
dec
lahf
mov
jns
in
rorl
cmpsl
jg
add
iret
add
mov
scas
cmp
dec
adc
int3
insb
js
cltd
adc
cmpsl
bound
push
fwait
sbb
inc
test
aam
cs
jno
int3
dec
mov
mov
adc
imul
mov
sahf
loopne
mov
sbb
call
cmp
inc
or
inc
icebp
adc
add
add
idivb
fs
jl
pop
sbb
fmuls
in
adc
test
jns
sti
fisubl
gs
popa
ret
dec
lahf
test
dec
jecxz
xchg
fwait
movsl
sub
and
mov
sbb
mov
add
jmp
outsl
mov
or
imul
inc
outsl
pop
rorl
jge
jo
jge
mov
and
xchg
push
push
cmc
fisttpl
adc
mov
xor
dec
add
ret
in
jmp
push
roll
xchg
push
sar
call
hlt
cwtl
push
mov
mov
cmc
ljmp
pop
xor
lods
dec
insb
cmc
sbb
test
les
adc
xor
stc
pop
cli
dec
mov
adc
sbb
bound
stos
fs
cmp
pop
mov
mov
adc
mov
adcl
sub
insb
cmp
shufps
mov
jecxz
lds
xor
mov
add
adc
lret
mov
sub
push
mov
sbb
into
ret
jge
or
sbb
shll
inc
bound
xlat
pushf
xor
mov
inc
movsb
stc
add
add
dec
mov
jns
mov
push
sti
mov
in
dec
adc
and
pop
aaa
test
cmp
jae
cs
incb
xlat
inc
sbb
xor
xor
in
nop
lcall
in
cmp
cmc
mov
test
int3
inc
aam
mov
les
loope
and
jmp
dec
push
jb
add
sbb
ss
cmpsb
fstp
jle
dec
je
ds
cltd
icebp
jp
cmc
out
or
push
dec
lea
sub
aad
cmp
and
sbb
jbe
cmp
jmp
inc
int
xor
fsts
out
add
ret
int
xchg
or
aas
sbb
out
addr16
mov
fimull
cmc
xor
call
fcmovu
ret
push
ficoms
push
hlt
inc
in
dec
add
or
xor
mov
subb
cmp
cld
mov
push
mov
stos
cmpb
fucomp
pusha
jbe
lret
daa
jbe
in
lock
orl
xchg
test
dec
add
shrl
insb
inc
and
hlt
xchg
in
lods
lods
sub
rol
and
ss
cmpsb
dec
adc
dec
mov
mov
and
xchg
add
movsl
push
out
insb
out
fmull
jg
out
test
fadd
jl
lods
int3
cmp
in
add
and
test
cmc
loop
sub
out
sbb
rcrl
lock
mov
fistpll
jns
pop
fiadds
fisttpl
iret
mov
inc
sbb
or
mov
and
sbb
fwait
repz
lret
fnstenv
sbbl
pop
ljmp
mov
sub
mov
mov
sub
add
dec
fisttpl
dec
mov
jle
and
pop
stos
addr16
es
push
cmp
push
sbb
mov
out
or
jle
int3
add
push
icebp
divl
and
jo
cmpsl
bound
aaa
mov
xchg
dec
and
jge
out
cltd
jnp
test
xchg
stc
pop
sbb
aad
lret
adc
adc
jg
lea
sub
mov
dec
sar
ficomps
rcrb
mov
popa
bound
lds
adc
dec
xchg
and
js
push
mov
inc
mov
testl
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
cmpsl
lahf
ds
jo
pop
jge
jo
pop
adc
testl
out
int3
mov
add
andb
iret
test
mov
clc
and
in
add
dec
inc
cld
mov
mov
cmpsl
cmp
cmp
scas
sub
fists
imul
and
aaa
xchg
xor
cmp
cmp
enter
sub
sub
dec
dec
sbb
jmp
mov
cmp
mov
mov
cmp
xor
jne
lds
jge
fnsave
push
pop
sbb
xchg
add
inc
mov
out
xchg
mov
addr16
mov
mov
xchg
repnz
pop
push
mov
cld
inc
out
adc
mov
adc
popa
mov
mov
sbb
or
stos
mov
shlb
imul
jmp
and
sbb
mov
nop
dec
inc
pop
inc
or
lcall
mov
xchg
pop
lods
repnz
inc
inc
inc
add
push
dec
lock
icebp
je
push
pop
imul
test
inc
dec
movsb
sbb
push
push
out
mov
sbb
out
shlb
mov
push
popa
cmp
aaa
push
stos
lods
fdivrl
fbld
fwait
adc
add
addr16
xchg
adc
stc
mov
inc
out
push
hlt
in
jae
inc
out
jo
fisubl
sub
sbb
jge
dec
sarl
push
pop
xor
push
bound
sbb
mov
shl
xchg
icebp
xor
icebp
cmp
scas
dec
cs
cmp
out
mov
stos
mov
ret
push
pop
fs
scas
shr
in
push
add
loopne
sbb
add
lock
add
and
stos
adc
adc
in
push
sub
mov
mov
shrb
xor
adc
ja
repnz
fildll
cld
lcall
mov
push
push
mov
pop
sub
jmp
adc
inc
xor
mov
sub
push
ret
xorl
xor
lock
orl
int
dec
arpl
popa
shll
iret
push
lcall
lock
adcl
push
popf
mov
dec
add
loope
mov
push
mov
mov
push
pop
inc
mov
mov
andl
or
dec
mov
outsb
lahf
ret
dec
jl
leave
cmpsb
mov
jo
mov
stos
sub
and
sbb
imul
lods
aaa
inc
lea
fidivs
add
add
cld
cli
es
je
les
mov
movlhps
repz
sbbb
call
add
jmp
lcall
mov
xchg
adc
jae
adc
inc
pop
fprem1
lret
movsl
int
dec
stos
sub
add
push
push
sbb
mov
sbb
loope
scas
push
loope
push
dec
pop
mov
jle
into
xor
ja
pop
scas
sahf
adc
iret
cmp
repnz
sub
incl
jp
fs
push
test
enter
in
or
mov
inc
mov
aad
call
and
addr16
add
dec
outsl
icebp
loopne
shrl
inc
add
lcall
into
jb
cld
outsb
ficomps
popf
clc
mov
fsubl
xchg
xchg
mov
cmp
fldt
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
sub
out
cli
sti
mov
xor
inc
or
in
sub
jns
mov
aad
int3
adc
jne
push
dec
fwait
xchg
pusha
idivb
inc
hlt
sbb
pusha
ja
ja
pop
mov
xor
inc
outsl
std
shll
popa
iret
gs
ds
inc
mov
repz
test
loop
sub
mov
jle
in
push
pop
jl
push
ds
jb
dec
xchg
xchg
jno
iret
mov
jg
js
andb
push
pop
popa
jg
mov
insl
jnp
test
or
xor
aas
add
cld
stos
push
popa
out
sbb
cmpsb
jg
mov
or
scas
lcall
jmp
jge
mov
and
pusha
adc
sub
sbb
xchg
mov
cli
xchg
sub
out
cmp
test
pusha
mov
cmp
jmp
dec
sub
add
into
stos
mov
nop
repz
out
sbb
test
test
xchg
fisubrl
cmp
sbb
mov
mov
or
sub
jg
fidivl
pusha
pusha
addr16
test
mov
loop
ja
push
fwait
adc
mov
lahf
or
in
nop
data16
sub
out
aaa
jb
popa
pop
sub
lahf
scas
push
sub
in
repnz
arpl
adc
ret
xor
loope
add
push
cmp
dec
fldcw
shrb
movsl
shll
loop
push
cmpsl
cmpsl
leave
cmp
mov
or
fnstenv
jl
in
push
out
sub
test
sti
ret
jge
push
loopne
or
and
pop
mov
es
or
incl
add
enter
pop
cs
filds
jnp
mov
std
sub
mov
loopne
pop
pop
pop
mov
enter
sbb
aas
je
out
loopne
mov
mov
out
push
inc
mov
push
fstpl
mov
mov
pop
dec
mov
out
jp
aas
ljmp
sarl
aaa
mov
cmc
sar
dec
imul
lods
pop
push
inc
push
sbb
adc
mov
cwtl
inc
lahf
xchg
add
pop
mov
jmp
add
sahf
pop
jl
and
xchg
xchg
or
cwtl
dec
scas
fldcw
loope
ds
gs
mov
aaa
add
outsl
mov
lods
adc
push
mov
cmpsb
cmp
mov
push
pop
cmpsb
int
xorl
jecxz
pusha
pop
aas
std
and
outsb
push
mov
push
xor
sub
pop
imul
ret
ja
sub
dec
repnz
inc
leave
sub
mov
dec
xchg
mov
mov
bound
stos
dec
sub
addr16
pop
inc
push
cwtl
push
mov
mov
mov
pop
sti
out
pop
mov
xchg
mov
sarb
repnz
cmc
mov
sub
adc
sbb
xchg
insl
incb
jl
adc
pop
or
stc
pop
mov
sti
xchg
roll
jp
xchg
stos
sbb
jno
cmpl
pop
call
adc
mov
nop
fwait
pusha
pop
scas
scas
leave
push
mov
sbb
pop
clc
rorb
fcomps
popa
push
test
jnp
sbb
mov
adc
cmpsl
ljmp
pop
mov
dec
xor
dec
stos
inc
imul
push
inc
ja
dec
push
xchg
testl
xor
and
decb
daa
sub
icebp
std
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
pop
cmp
jo
pop
jge
jo
xor
lret
roll
incl
jl
mov
inc
movsl
cs
inc
mov
nop
std
lret
das
data16
push
shrl
mov
into
mov
out
ljmp
lock
mov
mov
dec
mov
je
mov
shl
fstpl
mov
xor
mov
add
pop
idivb
mov
lret
xor
sbb
jae
mov
mov
jbe
jne
mov
xor
js
cmpsl
f2xm1
bound
test
pop
push
in
pop
push
je
push
mov
jle
mov
sbb
pmovmskb
push
adc
inc
sub
pop
push
mov
xchg
sub
push
lea
pop
outsl
mov
fimuls
push
add
or
clc
dec
call
aad
cmp
mov
xchg
in
fisubrs
inc
sub
ret
push
aas
push
inc
pop
sbb
testl
pop
test
adc
pop
add
jmp
sub
dec
push
es
fcomp
stc
lods
jns
nop
dec
cwtl
or
pop
mov
or
mov
insl
push
cmp
ss
push
sti
cs
push
sub
lcall
jno
mov
mul
sub
adc
push
cmp
xor
shlb
les
in
jmp
push
shll
test
xor
sbb
sbb
lcall
bound
lods
imul
xor
mov
or
aas
jo
in
outsb
aam
mov
into
add
cmp
xchg
xor
out
sbb
jbe
xrstors
push
mov
xchg
sub
mov
test
fldt
movb
sub
adc
out
dec
fldcw
cmp
xchg
adc
cltd
ret
mov
mov
mov
xor
leave
xor
aaa
sbb
mov
mov
jge
pop
sub
shlb
es
sar
and
sahf
or
push
in
jecxz
mov
mov
jo
jae
iret
int3
das
shlb
pop
jmp
cmpsl
outsb
inc
pop
or
sub
pop
lods
test
leave
loop
movsb
jmp
ret
fdivs
inc
or
add
lcall
js
aad
dec
dec
out
inc
aas
xchg
bound
push
mov
jge
adc
rdpmc
nop
outsb
add
arpl
mov
inc
mov
jbe
es
pop
xor
xchg
rolb
push
out
jle
xor
stos
push
adc
or
into
test
mov
lock
add
mov
or
add
jno
cmc
gs
ret
jle
daa
test
dec
jge
test
das
jl
mov
push
test
dec
mov
cmp
push
xchg
pusha
ljmp
rclb
inc
iret
sub
pop
add
js
or
lock
fisubrl
mov
sbb
shrb
push
clc
hlt
imul
adc
inc
add
xchg
xchg
pop
js
inc
popa
iret
mov
mov
fldl
dec
and
lret
dec
lcall
sub
and
in
mov
clc
cmpl
xchg
jbe
mov
xorl
inc
jle
loopne
sahf
aam
daa
mov
xor
aas
pusha
movsb
mov
mov
lret
fisttpll
xchg
test
mov
and
cmp
test
repz
popf
arpl
jno
in
fmull
dec
in
sub
dec
sub
push
test
mov
dec
repz
cli
mov
add
das
mov
jae
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
mov
pop
jge
jo
jecxz
lahf
lret
pop
test
call
adcb
mov
stos
insb
fdivs
dec
push
mov
or
sub
es
adc
and
repz
leave
xchg
enter
push
mov
in
or
pop
fnsave
mov
rcl
xor
add
outsl
dec
push
imul
cmc
xchg
out
lods
enter
loopne
and
fisttpl
jmp
xchg
or
in
fst
cltd
add
push
lods
pop
dec
repnz
mov
inc
dec
sub
aas
lea
lds
mov
mov
or
sbb
daa
inc
xor
test
cltd
xor
sbb
dec
mov
jbe
into
js
sbb
out
mov
movsl
pop
mov
loopne
push
sub
jnp
mov
push
pop
pop
imul
hlt
mov
gs
and
xchg
fildl
jmp
hlt
scas
push
stos
bnd
lahf
dec
rcr
cs
pop
xchg
jnp
inc
es
adc
lret
jle
xchg
inc
mov
push
add
stos
fildll
inc
aad
aas
mov
mov
fwait
and
pop
jp
leave
and
or
dec
or
push
mov
push
xchg
mov
outsl
lock
sub
ret
push
push
mov
or
lret
dec
inc
xchg
fdiv
out
test
mov
add
push
and
pop
jno
arpl
push
les
lret
xor
lods
pop
cmp
sbb
ret
pop
xchg
call
notl
jecxz
fisubl
jne
and
popf
loopne
jmp
lret
push
int3
test
dec
pop
test
sbb
push
cmp
adc
clc
sub
out
fmul
pop
pushf
imul
jo
hlt
ljmp
fs
jne
push
int3
mov
rep
pushf
mov
rcrb
xchg
jle
aam
jb
jge
lret
in
pushl
push
xor
ljmp
dec
or
scas
jmp
mov
add
scas
jp
in
dec
xchg
or
cmpsb
in
xor
xor
lret
mov
xchg
jg
xor
cmpl
lock
gs
bound
wbinvd
pop
lods
jl
insl
dec
mov
jno
cmpsb
jb
orb
inc
jbe
lret
cli
mov
jg
inc
fucomi
or
cld
adc
fcoms
mov
sub
sub
call
insb
dec
stc
or
inc
enter
stos
jle
xlat
cmpsl
jmp
jbe
lret
fwait
or
mov
stos
js
pop
cli
push
cmp
lcall
clc
push
pop
inc
mov
pop
std
mov
cmpsb
imul
test
push
pop
dec
mov
out
add
es
mov
jl
add
xor
sub
cmp
lcall
gs
add
adc
push
pop
dec
movsb
or
lds
scas
jg
in
into
mov
and
roll
cmc
mov
rclb
cmpsl
sbb
nop
cmpsb
pop
xor
jle
aas
in
std
es
dec
inc
je
lahf
std
add
jnp
mov
and
jno
jp
and
jge
mov
in
cmp
and
pop
cld
cmp
sbbl
sbb
test
testb
sbb
out
stos
adc
sbb
sbb
jmp
mov
xchg
jl
into
mov
inc
add
call
jb
mov
mov
jmp
sub
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
and
jo
pop
jge
jo
add
push
movsb
stc
jnp
mov
xchg
fbstp
shl
or
sub
in
and
and
loopne
pop
lcall
inc
pushf
inc
aaa
div
movsl
out
cmp
fwait
xor
dec
jnp
and
sub
jbe
out
mov
repz
fildll
in
xor
cwtl
das
xor
inc
pop
pop
loop
loop
rcl
jl
adc
push
roll
loope
outsb
and
popa
or
mov
cmpsb
and
test
dec
in
pop
mov
divl
frstor
fs
aad
repnz
repnz
fcmove
xor
icebp
mov
mov
push
mov
mov
bswap
iret
jmp
jne
dec
cmp
repnz
data16
lods
je
pop
push
stos
pop
imul
push
push
test
dec
outsl
pop
mov
or
xchg
stc
add
add
ss
scas
adc
jecxz
dec
mov
jns
mov
adcl
rorb
cwtl
mov
add
cmpsb
push
jno
push
inc
lahf
sbb
lret
add
xor
cmp
or
rclb
add
outsl
out
xchg
mov
push
clc
imul
or
int
shrb
fistpl
fcoms
inc
jecxz
mov
cld
pop
fs
loopne
insl
dec
mov
mov
jmp
cwtl
mov
jmp
rcl
mulb
cli
loop
sub
xor
fdiv
add
in
inc
dec
in
inc
stos
inc
cli
cmpsl
xchg
sti
lods
dec
addr16
fimull
and
jle
fimuls
push
iret
test
push
mov
push
lods
jae
ss
jp
outsb
inc
jmp
and
xor
fstp
outsl
mov
xchg
inc
hlt
or
testl
cmpb
sbb
in
scas
in
push
mov
mov
xchg
addr16
inc
cmp
jmp
cmp
lret
repz
out
int
push
sbb
mov
mov
iret
into
inc
out
lret
push
lea
adc
fmuls
mov
dec
in
decb
dec
xor
cmp
pop
cmp
push
mov
data16
pusha
adc
cmp
pop
pushl
mov
add
movsl
inc
cmp
jbe
adc
inc
sub
enter
sub
mov
cmpl
lret
aad
sub
and
loopne
lods
fimuls
sti
mov
ret
rorb
repz
xor
loop
pushf
nop
dec
in
popf
insl
notb
shr
pop
mov
pop
push
cli
mov
mov
dec
mov
xchg
std
enter
xchg
sbb
cmpsb
sub
push
mov
sbb
mov
xchg
jg
jne
mov
push
xor
shrb
test
jb
ret
push
call
int3
jo
xor
push
adc
shll
jns
jmp
test
sysret
fnstsw
push
stc
in
nop
push
push
and
call
add
daa
and
lret
mov
leave
pop
sahf
push
xlat
push
cmp
test
repnz
sahf
stos
in
negl
xor
imul
xor
jmp
jl
out
test
test
cmp
or
sub
jo
notb
pop
cmp
sbb
push
pop
xchg
adc
popf
std
mov
test
adc
add
mov
or
xchg
mov
lock
inc
adcb
and
lahf
sbb
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
repnz
xor
inc
pop
jo
mov
and
test
sar
dec
or
mov
mov
js
enter
push
and
int
orb
inc
insb
sbb
mov
ret
xchg
fisubrl
adc
pop
lret
mov
roll
iret
and
ljmp
xlat
les
mov
jp
gs
mov
inc
cmp
jns
jb
mov
out
push
mov
mov
mov
fwait
lret
inc
cmp
test
outsl
mov
mov
dec
lock
cmp
cmp
inc
mov
in
ret
mov
push
orb
stos
dec
pop
xor
inc
cs
shrl
ficoms
lds
das
sub
in
rorl
adcl
xchg
or
and
mov
aam
jne
orb
pop
xchg
xchg
leave
test
lret
mov
sub
sbbb
and
in
in
jmp
push
das
jbe
mov
dec
fistpll
cmpsb
or
movb
fildll
outsb
lcall
ljmp
fisubl
subl
aas
shll
dec
cmp
dec
add
push
sbb
push
or
jne
push
ds
sub
stos
push
aaa
cmp
scas
ror
dec
dec
punpcklwd
ss
aas
popa
adc
bound
sbb
jmp
fmull
lahf
mov
scas
push
lea
addr16
or
stc
push
test
xchg
stos
sbb
popa
jge
icebp
rolb
pop
and
or
sub
push
or
mov
cltd
mov
nop
ljmp
cld
cwtl
int
mov
fiaddl
lock
das
and
hlt
imul
call
stos
mov
cli
popf
insb
pusha
mov
cmp
shr
movsb
jno
in
test
and
dec
imull
cld
enter
imulb
jno
rcrb
imul
xchg
enter
pop
inc
aam
int
rol
cmp
icebp
imul
mov
pop
or
jns
loopne
fsubrs
and
out
stos
mov
stos
cmc
cmc
sub
leave
cmp
push
idiv
jp
out
dec
icebp
mov
aam
mov
mov
xchg
mov
mov
pushf
and
loope
dec
xor
add
in
daa
clc
push
mov
pop
test
cmp
into
fwait
in
call
jnp
adc
out
push
mov
lret
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
adcb
pop
jo
mov
add
repz
push
push
fisttps
mov
shlb
outsl
mov
sub
mov
xlat
jg
lock
fwait
repz
dec
xchg
pop
cli
mov
xlat
cmp
sbb
test
jge
lods
push
sbb
push
lahf
imul
in
xor
cmovnp
insb
nop
into
int3
fidivl
sbb
into
xorb
movlps
add
shrb
or
in
orl
xor
es
xor
pop
cmp
pop
pop
jno
lcall
aad
mov
loopne
aad
call
ret
pusha
jl
mov
test
and
test
sub
ret
push
jnp
sbb
enter
outsl
pusha
es
adc
iret
add
in
cmc
fnstcw
in
pop
fwait
jmp
cltd
mov
cmp
out
add
cmc
mov
test
xchg
mov
mov
sub
jp
in
ds
push
jmp
fimuls
stos
arpl
push
mov
and
dec
jecxz
xor
inc
jae
aad
cmp
or
dec
fiaddl
fldt
les
inc
dec
stos
iret
outsb
and
jecxz
dec
inc
lret
cmpsb
dec
test
adc
fsubrl
fs
test
pop
hlt
mov
xlat
mov
push
mov
pop
mov
mov
stc
out
fildll
ret
pusha
jmp
int
push
lret
pop
and
nop
add
add
push
sbb
jp,pt
add
jl
cs
pushl
fmuls
iret
xchg
stos
ds
xchg
out
pop
jg
jmp
mov
xchg
lret
pop
pop
pop
pop
xor
loope
xor
insb
dec
mov
cltd
pushf
clc
pop
pop
xor
mov
enter
adc
pop
cmpsl
mov
jno
dec
sbb
lret
or
and
mov
or
jnp
adc
movsl
xor
xchg
test
popa
and
pop
pop
mov
hlt
popa
mov
sub
mov
cld
in
cmp
add
fimull
mov
into
loope
dec
mov
mov
out
mov
mov
mov
sub
je
jp
clc
dec
repnz
xor
jecxz
sbb
dec
push
push
cs
mov
pusha
loope
xchg
pop
push
addr16
ja
into
enter
xor
mov
or
push
sub
into
sahf
jl
mov
icebp
imul
xchg
movsl
or
std
sub
enter
push
pushf
dec
jb
xchg
jmp
fcoml
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
out
and
enter
mov
out
repnz
sbb
aas
addr16
ret
fsts
scas
adc
dec
inc
adc
push
push
lods
push
popa
test
mov
loop
inc
cmp
nop
jecxz
popa
les
imulb
fwait
lds
in
pop
or
push
pop
imul
mov
rcrl
push
cmc
jecxz
faddp
push
sbb
les
dec
jbe
and
mov
int3
pop
dec
pop
lahf
sbb
rorl
imul
negb
out
std
add
shl
inc
cltd
pop
ficoml
xchg
xchg
push
sub
mov
fbld
add
movsb
mov
movsb
xorl
mov
push
hlt
imul
fnstenv
es
lcall
imul
xlat
ficomps
ja,pn
subl
aas
inc
inc
pop
xchg
pusha
js
cmp
and
sbb
dec
pop
dec
xlat
shlb
fs
lea
jns
pop
jo
nop
push
ljmp
fisubrs
imul
xor
data16
inc
scas
push
sub
xchg
lcall
rclb
js
inc
sbb
stos
cwtl
sub
sahf
xchg
cs
ss
cmpsl
stos
inc
nop
into
inc
lret
pop
leave
dec
lahf
xchg
jns
or
fsubr
xor
sub
sbb
jne
xor
sarb
hlt
jnp
fiadds
xor
scas
sbb
lret
into
out
sub
test
mov
daa
dec
mov
stos
sbb
and
test
dec
inc
and
hlt
es
jl
int3
fisttpl
cmpb
dec
mov
lret
inc
repz
fdiv
sti
testb
xor
insb
lret
cmp
push
pop
aas
jb
movsb
sbb
mov
ret
push
jmp
and
nop
rcll
or
lcall
jno
lahf
lret
mov
stos
call
negb
push
scas
sub
jne
out
mov
std
push
mov
pusha
push
movsb
inc
hlt
lahf
int
aad
inc
mov
and
and
adc
add
out
or
add
clc
outsb
or
mov
int3
out
sbb
aad
add
out
jno
aaa
push
xor
mov
icebp
iret
mov
iret
inc
stos
dec
sub
mov
push
jge
add
je
icebp
cwtl
mov
ss
xorb
inc
sbb
pop
sbb
sti
test
inc
in
test
add
add
and
inc
add
dec
in
add
pop
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
jg
sbb
data16
mov
inc
add
sub
jp
add
and
rolb
mov
fistpll
sub
and
cld
sbb
pop
mov
or
fsubrl
imul
push
xor
shlb
lods
xchg
leave
mov
cmc
mov
in
pop
aam
and
adc
dec
pop
inc
rolb
cmp
shll
jo
mov
inc
mov
pushf
leave
mov
cmp
es
mov
push
pop
sbb
mov
daa
inc
jnp
jmp
mov
jl
fcmovb
mov
nop
dec
xchg
dec
div
adc
jbe
scas
fnstenv
movsb
enter
fisttps
jae
add
faddl
pop
pop
add
orl
pop
inc
scas
sub
cmc
ret
cmc
gs
jns
and
cli
xchg
xchg
fsubrl
cmp
sbb
dec
roll
ljmp
xor
ret
push
adc
fistps
push
jns
mov
das
push
dec
rcr
dec
or
mov
je
jl
leave
mov
and
fbld
mov
shll
rcr
or
fwait
mov
ljmp
sbbb
shlb
ret
mov
xor
mov
mov
pop
in
andl
mov
dec
sub
push
adc
js
repnz
aaa
shr
sub
jecxz
insl
jge
imul
xchg
jo
sub
mov
adc
pop
inc
adcl
push
and
icebp
aaa
push
dec
dec
test
sbb
jecxz
enter
sti
or
mov
movsl
cmp
lds
ret
int
call
pop
pop
or
xchg
sbb
hlt
jnp
ret
lret
imul
jo
subb
xor
cld
nop
cmp
push
bnd
sub
sahf
call
outsb
jmp
aad
test
mov
cmpl
inc
rsm
xchg
ret
enter
test
cmovnp
xor
jp
add
pop
movsl
mov
dec
ds
cmpsl
add
push
adc
call
hlt
lea
xchg
jge
or
mov
pop
add
rorl
pop
outsb
cltd
lret
push
rcrl
cltd
imul
push
fisttps
dec
movsb
mov
shll
mov
push
mov
push
or
cmpsb
dec
xlat
sbb
or
push
add
les
xorl
fldcw
in
lret
iretw
xchg
adc
mov
nop
xor
and
add
add
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
fs
mov
nop
push
inc
pop
mov
out
stc
add
outsl
dec
insl
xchg
jp
xchg
dec
pop
mov
sub
leave
lods
xchg
cli
add
jo
cmp
push
and
xchg
pop
and
mov
push
loop
xchg
mov
into
lea
das
test
addb
stc
cmp
rorl
cmp
dec
xchg
cmp
cmpsl
sbb
adc
fidivrl
pop
push
es
jns
push
fildll
es
andb
xor
cs
jl
das
les
arpl
xor
xlat
or
xor
das
dec
inc
xchg
xchg
loop
and
pop
or
pusha
push
out
or
adc
enter
cmpsl
movsb
imul
mov
leave
lret
stos
outsb
adc
or
jecxz
les
sub
or
and
les
sub
lcall
icebp
rorl
es
jecxz
mov
sbb
sti
xor
int3
jmp
fcmovbe
outsl
orb
aad
add
ljmpw
or
stc
lds
add
push
dec
aas
es
xchg
mov
or
fists
je
cmp
dec
push
daa
mov
scas
lods
cmp
fcoml
loopne
and
rcr
fcmove
mov
bound
mov
cld
or
lock
and
xor
add
loopne
sub
pop
push
or
scas
sbb
mov
jnp
in
inc
jb
fldt
add
ljmp
xchg
hlt
push
mov
ljmp
in
pop
jnp
xchg
cmpsl
fnstenv
call
adcb
mov
sbb
sub
rolb
push
and
adc
dec
push
sub
jb
call
xor
xchg
mov
push
aas
and
pop
call
pop
adc
inc
dec
jmp
jbe
jecxz
and
xchg
fwait
adc
dec
jmp
xchg
test
jle
mov
jbe
aad
pop
ret
in
movsl
push
xchg
mov
leave
ret
sarl
xlat
jbe
subb
in
pop
mov
loope
or
mov
jmp
dec
and
mov
inc
add
and
test
mov
jae
mov
ljmp
cmpb
lret
mov
add
lahf
loope
neg
dec
jle
push
out
and
pushf
pop
adc
bound
sub
stos
ss
xor
fistpll
fmuls
in
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
movsl
or
das
mov
jle
jo
mov
xor
pop
cwtl
sahf
std
push
inc
xor
fimuls
cmp
fldl
dec
cmpsl
pusha
add
and
pop
decb
dec
mov
adc
fadds
lret
mov
mov
cwtl
jbe
divl
enter
lahf
dec
jmp
push
pop
subl
mov
cld
cmp
push
pushf
mov
add
aad
shll
arpl
stos
sub
mov
or
pop
sbb
in
scas
out
push
scas
push
fiaddl
dec
int
and
jns
xchg
push
aas
mov
dec
sbbb
mov
lods
cmpsb
leave
sub
pop
test
out
in
pop
mov
or
push
xchg
ret
sub
fnstsw
inc
mov
sub
or
inc
outsb
jbe
sti
jge
mov
ja
test
cmp
fstpl
xlat
push
mov
iret
adc
add
push
shl
cmp
fildll
jg
movsl
mov
push
dec
and
jnp
daa
into
negl
rcl
loope
jo
stos
insl
cld
inc
push
sti
fs
gs
mov
cmp
jp
and
pop
mov
cli
sub
xchg
and
or
dec
jle
cmp
rorl
add
shlb
cmpsb
jge
adc
pop
xchg
nop
mov
cmp
push
sub
fldl
cmp
or
prefetcht0
mov
inc
sbb
stc
out
loopne
push
lret
sub
xchg
xchg
call
incl
pop
mov
cli
lahf
icebp
xchg
outsb
xor
repnz
pop
fstpl
pop
jne
sub
inc
and
inc
pop
filds
js
adc
std
cltd
sub
cmp
mov
adc
add
push
scas
xchg
stos
call
xor
xor
cmpsl
rclb
out
push
ljmp
xchg
sub
dec
mov
push
jge
ljmp
nop
lds
outsb
hlt
mov
or
push
aaa
adc
insl
or
ret
lcall
cmp
sbb
int
cwtl
jmp
subl
cmp
adc
int3
sub
dec
es
lret
jecxz
popa
mov
daa
adc
sub
fisubrl
pop
cld
lea
jne
icebp
pop
negb
rcrl
pop
inc
push
ss
pop
pushf
cmpsb
les
das
pop
sub
mov
loopne
mov
in
es
lahf
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
jb
outsb
jo
mov
jecxz
inc
jae
inc
mov
jae
push
mov
mov
jno
xchg
fdivs
loopne
add
mov
mov
lret
cs
xor
lret
test
lods
mov
or
mov
or
or
mov
rolb
add
and
es
sti
out
cmc
lods
in
xor
lods
pushf
inc
lds
xchg
imul
inc
out
rcl
mov
or
int3
in
mov
pop
ja
andb
pop
aas
xor
push
in
femms
xchg
imul
sub
out
jecxz
das
in
repz
aaa
test
lea
das
pushf
loope
mov
out
sub
add
adc
les
cmc
aam
add
insl
sub
sti
pop
pop
stc
pop
aam
mov
push
ret
or
in
int3
in
push
out
mov
in
cmp
popa
ret
popf
adc
cmovl
or
xor
xor
imul
leave
mov
push
bound
xchg
aaa
out
into
inc
xchg
bound
lods
ret
or
jnp
lcall
lock
arpl
mov
movsl
mov
test
cmp
sbb
outsl
test
mov
inc
push
jmp
or
inc
icebp
inc
and
out
ds
jo
mov
mov
fsubr
mov
dec
jmp
push
icebp
test
mov
popf
push
mov
bound
imul
pusha
lret
int
mov
xor
loopne
sub
cmp
cli
inc
fwait
popw
clc
prefetch
fs
pop
out
jge
jb
adc
xchg
jle,pn
lods
pop
cwtd
movsb
mov
fwait
arpl
idiv
mov
mov
sub
cld
loop
dec
sub
clc
mov
dec
and
dec
inc
nop
inc
in
icebp
mov
test
mov
sub
movsl
pop
xchg
aam
fldt
fmulp
cltd
addr16
pop
cmpl
pop
push
in
and
fst
and
fwait
jp
shlb
cmp
inc
insb
das
mov
sbb
test
mov
pop
fcomps
nop
movsb
sahf
and
jb
fcmovnu
push
lds
movsb
loopne
mov
pop
hlt
fildl
imul
mov
jno
movsb
ljmp
or
mov
mull
test
in
lahf
inc
int3
jp
mov
nop
bound
push
cmp
fidivrl
clc
jne
pushl
jmp
and
lods
shrb
in
movsb
nop
push
sub
jle
jo
in
fs
adc
dec
out
inc
xor
fbld
sub
aas
ret
inc
adc
rolb
jl
jae
mov
shrl
xchg
in
out
sbb
std
fildl
mov
test
pmuludq
js
insb
hlt
sbb
popa
mov
mov
andb
out
xor
cmp
add
pop
stos
and
push
or
adc
ret
jnp
inc
bound
sub
cmp
sbb
mulb
fdivs
fsin
ffree
jg
outsb
enter
ficompl
repz
push
lods
test
ds
in
popf
mov
inc
or
loop
and
cmpsb
mov
xchg
sub
sbb
pop
je
xor
xor
jle
or
nop
lock
shl
or
test
or
cmp
push
pushf
dec
inc
inc
xchg
movsl
mov
pop
and
les
std
enter
jl
push
imul
lock
loope
push
mov
clc
xchg
mov
lds
ja
add
lock
jge
or
xor
lods
out
pushf
ror
jmp
lea
adc
imul
ds
mov
psubusb
mov
push
or
push
aam
insb
xor
add
xor
lret
ret
mov
pop
push
xchg
and
orl
cmp
cwtl
in
cmp
ljmp
fildl
shlb
pop
leave
mov
adc
push
jns
cmpsl
dec
pop
enter
push
jb
mov
adc
or
mov
fisubrl
lds
outsl
into
pop
jbe
push
xchg
imul
movsl
popf
stos
sbb
push
xor
test
and
into
loope
out
jle
loopne
inc
add
jle
in
dec
popf
mov
ljmp
sub
push
dec
mov
stos
sbb
mov
jae
push
aam
sbb
shlb
ss
std
arpl
or
jns
icebp
jno
notb
cld
jns
fcmovu
add
cmp
add
mov
ficoml
or
fistpl
jo
push
sbb
aaa
push
xlat
inc
scas
xor
cmp
sbb
dec
mov
sub
pushf
or
addl
stc
jno
pop
dec
or
lock
aad
iret
or
or
pop
rolb
and
test
pop
jb
addl
call
jmp
pop
insl
and
xor
insl
jp
or
jne
push
jle
jo
mov
aaa
inc
scas
mov
add
push
or
jns
adc
pushf
pop
or
aaa
rclb
mov
sub
in
and
xchg
xchg
fsubr
in
movsl
lods
ja
nop
add
jle
js
and
sahf
cmpb
mov
clc
mov
inc
in
cmpb
mov
fwait
or
xchg
aas
push
adc
pusha
repnz
xor
repnz
or
xchg
lods
out
popf
fs
mov
mov
or
dec
sub
pushf
data16
mov
jae
movsb
ficoml
jmp
movsl
jne
adc
push
fdivrs
inc
cmp
mov
dec
mov
xor
mov
clc
sti
leave
in
pop
rcl
aam
xor
sbb
jmp
push
pushf
or
inc
inc
mov
aas
adc
data16
call
and
ds
jo
jne
push
mov
gs
dec
out
testl
iret
imul
jg
data16
fwait
stc
stos
aas
pop
and
shr
cs
fmul
mov
jne
or
arpl
add
push
xchg
fimull
and
addl
jne
mov
adc
add
nop
mov
sbb
insb
cmp
imul
mov
mov
insl
inc
outsb
ret
mov
aam
add
lcall
push
or
aad
push
add
out
rcrb
stos
sbb
mov
bound
inc
je
sbb
aam
inc
inc
inc
mov
outsb
int
xchg
jle
adc
pop
xor
push
push
mov
adcl
nop
sub
add
xchg
insb
dec
or
or
lret
xchg
xor
adc
repnz
xlat
leave
adc
adc
push
jnp
negl
pop
fcmovbe
adc
shlb
outsl
rcrl
sub
inc
fstl
ds
jno
push
mov
and
add
sbb
cwtl
movsb
aam
dec
fs
bound
xchg
mov
xchg
push
loop
mov
dec
sub
movsl
jno
and
rolb
cmp
push
adc
or
xor
or
mov
dec
std
insl
adc
mov
fwait
cmp
arpl
shrl
mov
in
stos
pop
xor
xor
sub
push
das
and
hlt
loope
loope
mov
sbb
push
fwait
xchg
sub
movsl
lods
stos
xlat
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
popl
jbe
jo
jle
jo
aas
hlt
jbe
xchg
in
ja
push
cmc
xchg
cltd
jl
movsb
imulb
xchg
cmpsb
fs
fsub
fs
xor
pusha
and
dec
inc
leave
xchg
sbb
movsb
mov
jle
mov
xchg
mov
push
fdiv
gs
xor
cmp
insl
sbb
cmpsb
xlat
sub
mov
cmp
loope
mov
sub
bound
xchg
mov
push
cltd
push
mov
jge
push
mov
in
dec
pop
lea
inc
inc
enter
mov
push
in
pop
sbb
jmp
call
or
fs
push
nop
repnz
mov
push
jl
ja
aas
mov
nop
or
inc
int3
xchg
and
mov
xchg
inc
imul
add
add
repz
les
ds
jo
pop
lods
fldenv
dec
mov
nop
fmul
or
ficompl
jg
loope
xchg
nop
mov
xor
or
iret
adc
dec
and
out
cmc
js
and
popa
push
cmp
in
dec
in
mov
cmpsb
out
pop
shr
adc
mov
gs
ret
mov
xchg
test
das
test
inc
inc
mov
jmp
xor
pop
or
adc
imul
push
bound
push
mov
sub
rcll
jl
sub
mov
ret
aam
xchg
imul
adc
push
sub
mov
xor
bound
or
iret
xor
subl
shrl
push
push
faddl
je
fsubs
dec
or
ret
inc
lret
adc
fcompl
sti
dec
mov
leave
mov
cmp
out
in
das
data16
xchg
mov
or
mov
mov
xchg
out
xor
sahf
add
dec
inc
pop
xchg
jmp
mov
pop
mov
jmp
and
dec
data16
jnp
hlt
push
jle
insb
sahf
add
jecxz
sti
cmp
cltd
inc
icebp
xor
stc
jo
loopne
jno
hlt
fbstp
or
add
in
sarl
mov
xchg
jecxz
ljmp
jle
fcmovne
repz
ds
js
dec
out
cmp
test
add
lahf
cmpsl
cld
nop
pop
cmp
test
dec
insb
sarl
ljmp
push
inc
out
scas
jno
or
xor
jnp
mov
mov
ja
adc
hlt
imul
cmpsb
xchg
int
inc
in
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
mov
jo
jle
jo
mov
sbb
sub
lods
sub
mov
ret
cld
ret
pushl
mov
mov
pop
adcl
inc
cwtl
push
insb
stc
sbb
pop
push
dec
pop
or
pop
addr16
mov
jae
mov
out
mov
mov
insb
mov
jae
das
inc
and
out
repz
mov
stc
or
cmp
jb
call
out
inc
mov
lods
cli
jle
sub
and
fsubs
mov
sbb
out
imul
jns
cmpsl
repz
mov
cmp
mov
pop
ret
in
adc
test
inc
or
dec
add
xchg
mov
fstpt
fcmovb
rorb
xchg
dec
or
or
mov
repz
insl
push
cs
add
leave
aaa
dec
mov
cmp
loope
jb
push
ret
mov
imul
enter
inc
mov
push
rolb
mov
sarb
add
in
cltd
addb
scas
adc
lcall
bound
push
sub
dec
xchg
add
mov
dec
popf
imulb
rolb
popa
or
arpl
mov
mov
incl
fs
dec
mov
cmp
add
aaa
imul
clc
dec
push
int3
lods
xor
test
jae
or
add
fmull
psllw
push
jae
mov
xor
push
stos
je
sahf
lret
push
rcr
out
mov
adc
cmc
movl
stos
cwtl
imul
int3
clc
filds
xlat
mov
and
icebp
adcl
or
mov
mov
divl
adc
cmp
arpl
xchg
add
popf
leave
mov
add
imul
jo
sahf
push
cs
pop
xchg
jmp
inc
jb
push
adc
or
add
arpl
test
inc
hlt
xchg
jae
mov
js
push
mov
xchg
fstl
in
xchg
add
cmp
ja
clc
movsb
add
mov
lock
nop
mov
addb
in
cmp
xor
call
mov
cwtl
in
pop
dec
fcoms
lods
cmp
mov
inc
sub
test
fidivs
mov
inc
push
jle
cli
insl
sub
aas
mov
or
adcl
mov
inc
sti
loopne
loop
mov
mov
ja
sub
mov
xor
loopne
mov
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
fwait
jo
jle
jo
movsl
add
xlat
clc
aam
xchg
jo
adc
inc
repnz
lahf
push
in
jge
lret
dec
cmp
cmpsl
inc
mov
cmp
lahf
or
scas
jl
and
ja
int3
or
jecxz
out
adc
cwtl
sqrtps
cltd
xor
and
insb
dec
xchg
dec
icebp
arpl
in
outsl
inc
or
jge
mov
leave
outsb
push
loop
inc
adc
fwait
xchg
push
andl
jle
cmc
xchg
fnstenv
pusha
cwtl
lret
inc
dec
fnsave
sub
cmp
imul
int3
ja
push
add
cmp
mov
mov
xchg
adc
xor
mov
fcom
mov
outsb
mov
xchg
imul
das
data16
xor
cs
cmp
jnp
sbb
subb
jp
movsl
enter
clc
cmp
aas
ret
or
xchg
adcb
xor
clc
jne
subb
mov
mov
adc
stc
repnz
push
push
mov
mov
rcl
push
dec
test
push
fsubrl
insb
jnp
fsub
lret
sub
sub
cmpsb
test
sbb
sub
jge
aad
push
jnp
shrl
mov
cltd
or
mov
and
cmp
push
outsw
dec
cmpsb
nop
addl
or
fisubl
jg
fwait
cmpsl
mov
jbe
inc
dec
insb
jae
dec
lods
popl
sti
jmp
mulb
lret
mov
add
inc
xor
or
movsb
jae
decl
test
and
sbb
test
mov
fadds
rcrl
jg
xor
dec
jno
mov
in
dec
pusha
pop
inc
sbb
jmp
outsb
std
and
popa
xor
jge
mov
mov
int3
mov
adc
and
lock
sbb
add
inc
enter
iret
daa
out
xlat
and
fwait
shll
jne
fldl
xchg
int
xchg
cmp
inc
ljmp
mov
adc
aas
or
ljmp
rclb
mov
dec
loope
xor
cs
lds
cmpsl
test
icebp
mov
xor
xchg
arpl
or
sub
cmpsl
push
imul
inc
imul
pusha
fcoms
and
and
jl
imul
rclb
adc
add
call
mov
xor
sti
adc
pop
mov
out
jl
stos
sub
out
mov
jle
cmpsl
imul
jb
jno
shr
mov
mov
xor
jmp
add
mov
jb
jge
jge
nop
xorb
jge
jo
jle
jo
mov
icebp
in
mov
cwtl
rol
add
into
fisubs
xchg
repnz
cmp
sti
lret
sbb
mov
mov
les
sti
cs
adc
mov
movsb
mov
int
dec
jb
mov
xchg
dec
and
cli
fsubs
pop
insb
sahf
cli
and
notb
scas
dec
xchg
scas
int3
cmp
lods
xor
or
jne
inc
outsb
cmp
mov
mov
or
in
fsubl
jnp
push
call
pop
jbe
out
sahf
and
push
loop
ljmp
lods
mov
inc
jle
xorl
outsb
mov
loop
mov
jns
add
cmpsb
popf
cmp
loopne
mov
pop
cmpsl
inc
inc
aam
fsts
ret
imul
lods
mov
add
sbb
cmpsl
sub
scas
sub
mov
add
sahf
lock
mov
sbb
icebp
xlat
pop
xchg
or
pop
ret
sbb
lea
lret
push
imul
push
cmp
xchg
pop
adc
push
sub
cmp
iret
xchg
mov
popa
sub
add
cmpb
push
or
gs
into
pusha
pop
sub
push
jg
push
jp
out
xor
sub
loop
jne
icebp
push
imul
inc
mov
push
mov
add
and
mov
nop
inc
shlb
ljmp
in
xchg
adc
outsl
mov
es
leave
ja
movl
dec
shl
in
les
push
test
dec
mov
sbb
mov
xlat
stos
loopne
mov
and
fucomp
xchg
hlt
les
pop
test
orb
insb
mov
add
jl
je
dec
and
das
seto
push
inc
push
ret
jle
mov
shlb
pop
inc
je
int3
int3
or
pop
aad
pop
fnstenv
jbe
inc
xchg
mov
mov
push
sbb
and
sbb
cmpsb
out
mov
push
pop
ficompl
adc
and
mov
pop
data16
push
sahf
mov
jns
jns
cmp
jo
bnd
or
lret
imul
inc
dec
xchg
lds
adcl
jo
mov
in
out
imul
push
and
dec
bound
and
cmp
sbb
fldl
fistps
jg
sub
xor
es
pop
mov
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
ficoml
or
mov
outsb
xchg
push
mov
loop
jo
bound
sbb
hlt
and
or
push
push
out
data16
xchg
sbb
lret
ds
xchg
in
ret
ljmp
inc
mov
mov
loop
mov
mov
mov
pop
std
cwtl
cmp
jle
dec
xchg
jbe
push
leave
pusha
leave
iret
jg
and
nop
divb
mov
xchg
cmp
das
fcoms
movsb
add
add
out
xlat
pop
mov
and
out
and
iret
in
mov
les
call
iret
sub
sbbl
mov
arpl
mov
or
jo
mov
into
movsl
jmp
std
sbb
jp
repnz
fdivp
daa
lcall
outsl
or
sti
and
test
sub
inc
or
jns
jmp
aad
rcrl
fisubrs
idivl
test
shrb
xorl
inc
rcll
decb
mov
sahf
xchg
lea
mov
gs
pop
fnstcw
mov
xchg
pop
xchg
sbb
mov
xor
ds
add
fisubrl
jo
call
mov
pop
jg
mov
push
mov
cmp
fidivs
insl
lret
in
xor
jg
sbb
mov
jge
rorl
fdivr
out
inc
xchg
ret
push
xor
sbb
dec
mov
xchg
test
xchg
repz
inc
test
loopne
out
lcall
aas
out
xlat
add
nop
pop
fildl
movl
jmp
mov
jge
inc
fmul
cmp
jns
repz
or
adc
jae
imul
and
xchg
decl
fnstenv
daa
jo
mov
filds
lret
push
dec
pop
sbb
dec
in
xor
enter
cmp
mov
test
jae
mov
fmul
sbb
sub
cmp
cli
mov
inc
gs
inc
iret
lret
scas
je
and
pop
pop
mov
xchg
mov
jl
loopne
bound
fcompl
pop
adc
shlb
test
jmp
lock
aam
inc
test
test
insb
fsubr
sbb
es
xchg
mov
or
scas
jmp
mov
inc
lods
adc
pop
inc
push
fs
jns
pop
movsb
cltd
imulb
mov
lahf
test
or
je
mov
and
imul
mov
ret
leave
jge
cmpsl
push
push
xor
aad
cmpsl
rolb
or
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
push
in
insb
movsb
js
jo
jle
jo
pop
cs
mov
and
dec
jo
cltd
es
lea
nop
insb
and
inc
lcall
adc
insl
mov
pusha
test
int
popa
iret
mov
sub
and
mov
mov
in
mov
cmp
test
fcoms
and
mov
sbb
jge
xor
jmp
mov
pop
stos
aas
adc
mov
xchg
insb
pop
xorl
lea
mov
and
push
add
xchg
cmp
pop
lods
rcrl
inc
jne
lret
repnz
movsl
loope
aas
jmp
aas
pop
mov
gs
inc
addr16
pop
push
jbe
fisubl
aad
push
jno
test
cmp
jecxz
repnz
inc
mov
cmp
out
or
dec
inc
in
mov
mov
inc
sbbl
push
leave
add
xor
fdivrl
cmp
lahf
test
out
int3
xlat
jmp
fidivrl
dec
outsb
dec
mov
xchg
es
xor
or
ja
int
pusha
out
ret
pop
sub
je
dec
inc
aad
inc
mov
dec
adc
inc
and
and
mov
jle
mov
sahf
scas
jnp
pushl
lock
testb
imul
clc
sub
cmpsl
sarl
mov
push
push
aaa
aaa
pop
push
aam
stos
icebp
decl
aam
mov
leave
adc
push
sub
adc
das
nop
xorl
sahf
xor
sub
adc
icebp
outsl
push
ret
mov
or
out
dec
sub
jae
gs
cmp
addl
sar
mov
sub
js
mov
sub
cmp
dec
int3
fcoml
dec
mov
aaa
cmp
rsm
adc
xchg
in
pop
pop
pushf
jb
fdivl
inc
xor
sbb
sbb
popa
rol
push
mov
test
xchg
mov
push
fsub
mov
lcall
fcmovnu
or
adc
nop
movsb
dec
mov
lcall
dec
or
cmp
cmp
sbb
cmp
sti
xchg
int
fwait
inc
adc
sbb
dec
addb
xchg
out
mov
jl
repnz
popa
and
inc
lahf
mov
lock
inc
lahf
mov
orb
mov
push
add
lcall
fldenv
lds
mov
test
xchg
mov
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fldenv
add
jo
in
rol
lea
clc
in
iret
test
xor
mov
loop
sub
sbb
pop
pop
add
xor
xchg
fisttpl
aas
stos
mov
cmp
bound
andl
fistpl
inc
add
inc
add
sti
cmp
pusha
jne
push
xchg
movsb
mov
sbb
lea
lahf
negl
mov
mov
scas
sub
sti
sbb
sbb
mov
cltd
pop
and
int
xchg
pop
add
inc
cmp
xlat
fdivp
mov
pushf
fs
cltd
cmp
out
shl
dec
cmp
cmp
lock
push
aad
jl
sbb
cmp
pop
es
sub
jecxz
xchg
cmp
out
pop
loope
mov
loopne
xor
push
jbe
es
sub
mov
cli
push
stc
inc
imul
xor
pusha
in
add
es
adc
jmp
adc
push
sub
jge
movb
adc
and
push
fwait
sub
shl
out
mov
int3
fsubl
stos
mov
out
enter
sub
leave
testb
in
js
mov
ja
or
inc
lfs
lods
insl
jae
mov
push
or
or
mov
outsl
sar
adc
jge
push
cmp
stos
add
dec
add
insb
loop
stc
mov
stos
mov
lock
dec
jg
lcall
cld
fidivrs
and
stc
or
jecxz
or
xchg
push
inc
xchg
add
add
cmp
shl
and
dec
lea
movsb
or
sub
cmp
gs
pop
jl
xorl
ja
sub
into
repnz
and
sarb
lcall
addr16
in
push
jne
imul
cmpsb
mov
jle
mov
pop
jle
pusha
ss
aam
stos
into
pop
stos
adc
push
ds
out
sti
sbb
mov
icebp
ret
sbb
mov
mov
ja
or
imul
sti
arpl
out
mov
repz
test
jl
adc
pop
in
es
shlb
ret
test
call
in
mov
or
fidivrl
in
aas
incl
pop
sbb
mov
fsubp
pop
pop
xchg
or
pop
shlb
imul
jae
jp
ret
mov
xlat
mov
pop
push
les
out
adc
or
mov
cmp
repz
in
cli
inc
push
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
add
jg
mov
call
jp
push
dec
xor
rolb
je
jmp
ljmp
call
mov
push
or
fidivrs
push
sub
out
cmc
popf
fistpll
mov
sbb
jo
inc
sbb
jb
push
mov
mov
jne
mov
mov
jl
cmp
adc
mov
dec
adc
fistl
dec
push
sbb
push
popa
gs
mov
lahf
notl
add
adc
mov
ficompl
xchg
dec
out
loopne
mov
js
mov
iret
mov
pushf
jg
sahf
and
into
cmp
bound
pop
inc
popa
bound
adc
inc
stos
mov
sub
inc
mov
icebp
cld
cmovs
mov
push
lods
cmp
add
repz
dec
scas
je
sub
push
adc
and
cli
sub
out
aas
lock
lds
or
pop
xor
pop
pop
mov
stc
fisttps
aam
jge
data16
sbb
stos
std
shll
xchg
pop
jl
out
xchg
stos
inc
subb
loop
push
lea
test
mov
mov
repnz
xlat
stos
lcall
pop
cmp
cmpsl
mov
jo
scas
stos
rcrb
scas
sbb
fldcw
xchg
rol
dec
outsl
ljmp
mov
add
fwait
mov
in
add
aas
aaa
xor
test
jo
jl
shll
std
inc
hlt
cmovge
xorl
jne
ret
lcall
or
dec
xor
test
add
fs
mov
ds
data16
stc
dec
add
sub
mov
arpl
push
js
or
test
or
or
push
out
imul
mov
mov
adc
sbb
jmp
int
sub
data16
sbb
sbb
inc
int
in
mov
push
fisttpll
dec
inc
dec
fstpl
xor
sub
add
arpl
test
push
lcall
imulb
mov
fdivs
ds
loope
mov
dec
fs
push
aad
popf
mov
into
test
mov
or
mov
out
cmp
outsl
mov
imul
push
lods
jbe
inc
std
adc
jmp
fstpl
dec
cmp
mov
in
stc
dec
xchg
shrl
push
out
loopne
hlt
test
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
mov
mov
xor
insb
xchg
sub
popa
xchg
adc
xor
movsl
dec
mov
roll
fadds
nop
clc
into
sub
lods
and
fcoml
fsubrl
mov
fidivs
push
enter
and
ss
adc
sbb
sarb
arpl
cltd
inc
stos
dec
sahf
cmp
adc
fstps
mov
fstps
or
aaa
and
and
aam
ja
jp
cmc
gs
xchg
jns
or
lock
int3
aad
jecxz
loope
jno
cli
mov
sbb
inc
movsb
lea
cli
lock
bound
pop
dec
push
orl
test
xlat
loopne
fisttpl
mov
loope
lods
adc
repnz
inc
xchg
push
pusha
cs
sbb
jno
out
inc
daa
ja
jnp
or
xchg
or
in
pop
cmp
pop
insl
int3
or
xor
mov
mov
hlt
inc
into
dec
dec
out
sbb
and
in
adc
lods
enter
pop
xlat
xchg
mov
stc
lret
jno
xchg
aaa
arpl
pop
jns
popf
jb
push
test
sbb
cmp
pop
scas
xchg
sbb
and
fildll
jle
fsts
cmpsb
lock
imul
pmaddwd
fdivrp
or
or
enter
xlat
js
fdivrl
mov
icebp
push
fisubs
lahf
mov
jecxz
fwait
pop
adc
add
and
inc
out
xor
jbe
mov
pusha
dec
xor
dec
addr16
sbb
or
xchg
cmpl
stos
or
mov
scas
not
mov
push
aad
sbb
push
push
push
cmp
push
cli
shr
dec
sarl
dec
mov
sbb
int
push
xorb
xor
lret
xchg
inc
mov
int
aas
repz
dec
addr16
sbb
mov
mov
frstor
je
mov
int
mov
dec
fsubr
sbbl
dec
mov
mov
aaa
or
push
sub
imul
shl
out
filds
xchg
and
cmpsl
loopne
rorb
cmc
ljmp
scas
xor
jae
into
pop
icebp
out
adc
mov
fsubr
dec
insb
sti
inc
lcall
cwtl
dec
and
mov
shl
scas
and
enter
fsubrl
xchg
jbe
dec
sbb
fisttpl
push
clc
push
movsb
enter
inc
pop
lret
rcll
cmp
stos
pop
loopne
lea
inc
daa
outsl
in
mov
dec
jb
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
jo
sub
mov
jle
jo
test
fsubrl
sub
mov
imul
lea
movsl
jno
sti
jbe
cmp
mov
mov
xor
inc
adc
xchg
rorl
cmp
and
ret
cmpsl
sahf
add
stc
mov
ds
lea
xchg
push
rcrl
daa
cmpsl
mov
stos
dec
or
jno
leave
pop
sti
rcr
out
lods
mov
push
call
add
mov
xchg
or
mov
mov
or
dec
shl
inc
stos
adc
mov
fs
aam
mov
adc
out
sbb
and
lock
paddusb
loop
jns
xchg
sahf
add
xor
mov
adc
push
or
xor
insl
xchg
xchg
in
ljmp
loop
pop
aaa
lods
leave
xor
cltd
pop
mov
dec
pop
sub
test
jge
adc
push
subl
dec
cmp
movsb
icebp
shll
dec
mov
in
stc
xchg
loopne
movsb
clc
dec
cli
int3
les
adc
dec
xorl
shrl
mov
and
insl
call
push
jne
mov
dec
lcall
idivl
mov
int3
testb
jnp
sub
pop
in
iret
lea
xchg
std
test
sub
mov
xchg
push
aad
sub
daa
es
cld
call
outsb
aad
jmp
sbb
repz
mov
sub
dec
dec
and
dec
jno
pop
out
js
sahf
lods
aad
xchg
dec
push
mov
fists
cli
mov
loopne
dec
mov
testl
dec
pop
imul
push
push
outsb
in
mov
mov
push
repz
test
cltd
int
out
pushf
lods
add
dec
pushf
pop
mov
push
stos
dec
lock
out
int
and
pop
call
xchg
out
subb
pushf
or
iret
mov
xor
int
sbb
sbb
dec
std
dec
int3
dec
popa
push
test
testb
iret
push
ret
das
pop
sbb
dec
sbb
iret
les
imulb
push
loop
ret
dec
or
jmp
add
mov
adc
outsl
test
iret
inc
sahf
arpl
mov
call
icebp
es
enter
xchg
mov
jg
mov
cmp
ds
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
imul
jg
mov
jb
outsl
sbb
sub
hlt
fstpl
movsb
push
int
in
adc
ljmp
sub
adc
jg
iret
clc
adc
adc
sahf
mov
xchg
les
out
push
incb
lcall
inc
mov
enter
mov
cmp
dec
mull
ss
loop
xlat
cmp
sub
popf
iret
jnp
fdivs
in
mov
lret
and
scas
xor
jge
fs
fistl
cmc
sub
sub
mov
push
and
mov
cli
pop
cltd
cmp
sbb
test
sub
lds
mov
xchg
stos
cmp
movsb
in
and
stos
pop
jmp
inc
jecxz
mov
roll
stc
rcl
mov
orl
lods
xchg
ds
dec
mov
cmpsl
add
push
jnp
push
cmp
pop
jno
lret
bound
scas
pushf
dec
das
mov
bound
inc
in
adc
dec
int
int
lock
xchg
out
fwait
or
nop
int
dec
or
mov
icebp
mov
push
jbe
jp
cmp
push
into
mov
ds
insl
lods
inc
scas
sarl
ret
test
sub
jecxz
mov
lea
cmp
lock
add
sub
mov
into
mov
and
out
fsts
cmpsl
ds
in
dec
xchg
imul
inc
outsb
fldt
cmp
mov
addr16
call
sub
arpl
sbb
loopne
rcl
xor
pop
mov
aas
adcb
mov
xchg
test
popf
lret
jl
out
insb
loop
je
push
pop
lahf
nop
cltd
push
fsubr
pop
in
pusha
or
test
sub
and
testb
jp
jmp
jnp
xor
dec
icebp
dec
add
int3
xor
xor
pop
sub
frstor
movsb
inc
in
aad
or
and
mov
pop
loopne
lret
cmpsb
xlat
lods
xor
dec
aas
hlt
pop
ja
push
mov
lds
jmp
jg
iret
adc
fld
ret
fcoml
pop
xchg
das
andb
stc
dec
dec
mov
js
xchg
lds
das
into
cmp
ljmp
pop
mov
cld
or
jbe
push
outsl
aam
mov
cmc
cmp
lret
scas
out
cmc
mov
push
cmp
js
xchg
movsl
xchg
je
loope
pop
out
mov
out
xchg
loope
push
pop
pop
sbb
dec
push
fs
push
fwait
loop
or
mov
push
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
and
mov
sbb
arpl
jle
hlt
not
ljmp
xchg
jne
xor
out
xchg
adc
mov
ss
or
mov
sub
xchg
scas
clc
mov
jbe
mov
stc
xchg
lods
cmp
and
mov
jo
int3
fwait
mov
out
bound
std
and
loopne
in
mov
ss
das
xor
mov
sbb
sub
in
or
add
in
mov
popf
cs
mov
pop
ret
pop
mov
mov
or
push
into
adc
dec
ret
sub
or
mov
and
cmp
mov
scas
sbb
jbe
mov
daa
test
sbb
pop
test
and
xlat
aas
out
mov
jbe
nop
mov
mov
and
pop
fistpl
xor
mov
push
stc
fwait
jl
cmp
push
lret
fldcw
sub
mov
ret
loopne
pop
lahf
or
sub
les
pop
pop
ret
das
jnp
addr16
out
cmp
cmp
xchg
mov
lret
inc
cld
outsb
addr16
out
rcr
cltd
sub
inc
stos
mov
or
pop
movsl
mov
xor
jne
ficoms
or
vandnps
mov
mov
inc
mov
mov
iret
ljmp
xor
push
mov
hlt
xchg
jae
nop
mov
sbb
pop
inc
sbb
and
repnz
sbbl
and
cld
fimull
dec
pop
jns
cmpsb
ret
stos
pop
and
cli
fnstsw
inc
cmpsb
push
or
push
jge
cmpl
xor
inc
mov
mov
cmpsl
cs
inc
sub
sbb
js
addr16
test
jge
pop
test
ja
leave
inc
hlt
mov
cwtl
cmp
nop
mov
xor
adc
cmp
pushl
xchg
jno
inc
pushf
fwait
xchg
or
mov
or
sbb
fiadds
add
fwait
lds
test
inc
mov
les
cmp
pop
xlat
not
push
dec
add
jge
push
jbe
adc
fimuls
mov
ret
mov
cld
movsb
cmp
push
repz
mov
mov
xchg
popa
nop
iret
popf
roll
dec
jbe
jp
or
test
int3
and
repz
jns
shr
outsl
aas
flds
sahf
jnp
xchg
cmp
fistl
push
clc
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
iret
cmp
adc
jo
jle
jo
inc
or
mov
pop
ljmp
loop
xchg
inc
clc
call
and
mov
sbb
icebp
mov
xor
xchg
outsb
int3
inc
pop
js
icebp
psubusw
or
adc
jle
notl
sbb
scas
addl
sub
stos
push
xor
jmp
cmc
xchg
sbb
mov
das
sbb
addb
xchg
pop
lret
test
xchg
fdivrl
push
popf
cld
int3
jg
test
xchg
ret
addr16
xchg
cltd
aam
fadds
aaa
sti
stos
fcoml
pushf
hlt
inc
loope
dec
and
negb
in
inc
sub
cltd
pop
mov
pop
shll
or
push
mov
pop
lods
pop
lock
cmp
push
daa
xchg
push
out
jno
testb
xchg
out
mov
mov
test
dec
add
aas
or
nop/reserved
js
jge
sbb
icebp
cs
xchg
mov
jne
or
mov
mov
xchg
dec
dec
loope
and
cld
cmpsb
push
dec
stos
adc
jecxz
fimull
or
cs
jle
fdiv
aas
in
lock
push
mov
aam
insb
dec
fcos
rorl
sti
cmc
pop
add
repnz
bound
sub
xchg
pop
test
in
in
fdivl
sub
pop
or
adcb
pop
stos
fs
or
push
fwait
push
sarl
xchg
hlt
iret
xchg
cmp
mov
jns
test
daa
dec
adcl
std
mov
inc
add
mov
push
shrb
push
movl
test
mov
jae
xchg
cmp
repnz
insb
pusha
push
es
and
jle
out
scas
xchg
xor
imul
mov
sbb
cld
rcll
push
mov
push
outsb
notl
mov
sub
iret
jmp
xorb
adc
and
jnp
mov
ja
ja
test
loope
xchg
xlat
push
fcomps
pop
xor
pop
cli
repz
adc
rorb
fcoml
jmp
std
jno
ret
or
ret
ja
pusha
mov
lds
mov
lods
std
xchg
pop
rcrb
push
xchg
cld
fucom
dec
pusha
add
lock
std
and
std
roll
add
adc
xor
jns
inc
push
cmp
push
mov
fisubl
adc
cltd
subb
rolb
lcall
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
arpl
jo
jle
jo
lea
or
outsb
dec
inc
mov
movzbl
push
dec
dec
rcrl
xchg
dec
pop
lds
popa
shrl
and
ja
inc
rcrl
shll
fiadds
mov
or
jae
pop
mov
cltd
jecxz
lods
mov
in
sub
push
iret
cmp
test
or
pop
movsl
mov
pop
pushf
push
cli
out
dec
movsl
lock
dec
add
dec
lcall
in
jbe
jge
push
push
cmc
aam
inc
scas
inc
addl
sub
rcl
cmp
cmp
divb
ficompl
rolb
sub
icebp
mov
xor
aaa
int
mov
xacquire
mov
cmpsb
mov
pop
mov
mov
push
push
in
mov
icebp
mov
add
mov
subl
jnp
lret
jb
add
inc
push
inc
pushf
xchg
xor
sub
insl
or
sub
sbb
xor
bound
xchg
xor
into
or
push
stos
movsl
test
mov
inc
inc
cmpsl
push
lret
cmp
adc
push
or
jp
lods
jp
mov
neg
push
lea
mov
xlat
and
push
inc
aad
aam
and
mov
mov
int3
leave
inc
js
sbb
inc
daa
iret
ss
ja
sub
pusha
pushf
aam
int
jnp
pop
pxor
xor
das
fbld
arpl
jno
movsb
mov
sub
mov
adc
mov
or
aam
rep
aas
jb
or
test
mov
mov
outsl
mov
mov
mov
arpl
stos
add
popa
neg
pop
addr16
pop
pop
lret
mov
mov
pushf
jo
std
imul
sti
push
inc
ja
mov
out
aaa
data16
dec
xchg
clc
int3
cmc
or
lahf
loop
xchg
dec
dec
pmulhw
pop
pop
in
push
stos
outsb
mov
inc
movsl
add
repnz
inc
jno
aad
mov
cmp
test
and
ds
inc
aam
push
fcmovnu
bound
fcoms
jae
lcall
and
mov
icebp
xor
in
adc
adc
pop
test
aad
into
enter
pop
dec
ds
arpl
ljmp
push
int3
dec
jbe
mov
movsb
cld
sbb
out
jbe
jl
mov
cmp
mov
jbe
cmpsb
hlt
push
fsubrl
push
imull
je
xorb
rol
pop
dec
ja
add
cmc
std
fs
jno
mov
and
jg
mov
es
in
cmp
or
push
jns
pop
aas
insb
iret
xchg
push
adc
pop
mov
cmp
mov
lods
daa
push
jmp
rclb
test
sahf
outsb
mov
lock
stos
or
or
out
rorl
fsubr
or
jg
lahf
dec
out
fdivs
cwtl
and
aad
xorl
jle
push
add
std
notl
sbb
clc
shrb
and
mov
mov
daa
lret
mov
add
enter
std
mov
rolb
xor
imul
aas
push
or
lods
inc
sbb
cmpsb
xorb
sar
jecxz
sar
shlb
dec
sub
movsl
adc
sbb
aaa
sbb
inc
mov
lcall
les
test
movsl
imul
outsb
pop
data16
subl
hlt
ljmp
jle
push
jmp
sahf
inc
fnsave
push
sub
lcall
jae
mov
ret
push
push
push
dec
mov
adc
xor
push
jnp
adc
jae
imul
les
dec
pop
push
sar
mov
mov
inc
sahf
sub
popa
scas
xlat
out
fsubl
and
xor
cltd
shll
lret
test
into
push
pop
inc
div
repnz
cmc
jae
jo
and
and
sbb
mov
xchg
incl
cmp
dec
push
xchg
mov
jmp
jecxz
mov
push
aas
loopne
pop
popf
jne
int3
sbb
pusha
sub
add
pop
mov
pop
test
pop
jnp
xchg
cmp
jo
xor
mov
xchg
pop
test
test
loopne
adc
adc
fcompl
xchg
test
or
jo
jp
flds
sub
or
lock
sub
cmp
push
out
xchg
pop
mov
dec
xchg
inc
cmp
dec
loopne
sbb
lahf
addr16
outsb
or
shlb
fsubrs
das
insl
sbb
ret
pop
dec
std
movsb
add
cwtl
cmc
fstl
stos
xchg
sbb
rclb
xor
pop
jne
inc
lcall
ds
mov
std
mov
dec
adc
sub
test
xor
jne
lahf
xor
mov
fs
idivb
mov
scas
sbb
in
loope
fnstsw
ficoml
jecxz
xor
xor
jle
push
popa
mov
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
andl
out
sbb
jo
jle
jo
addr16
push
orl
mov
pop
sub
fcoms
dec
mov
and
and
mov
lahf
add
or
in
arpl
or
and
mov
repnz
repz
sbb
pusha
sub
xor
pop
popa
shll
pop
in
adc
mov
lret
sbb
or
in
pop
addb
sub
xchg
lcall
lret
lea
hlt
jmp
mov
cli
mov
push
shlb
sbb
lock
pushf
xchg
test
mov
pushf
lods
xchg
cmp
jge
or
popf
popf
into
adc
jno
push
and
ss
pop
iret
inc
xor
adc
cmpsb
out
jge
loop
jmp
push
xchg
jl
push
cs
xchg
cmp
cmpb
sarb
sub
mov
inc
popl
loope
popf
cmp
and
inc
icebp
cwtl
add
push
jo
je
pop
loop
leave
ds
repz
int
int3
push
jns,pn
sbb
mov
cmp
dec
mov
movsb
sbb
dec
repz
shlb
add
lea
imul
jle
sbb
aam
push
xchg
pusha
lret
mov
cld
pop
in
mov
jg
ret
and
test
stos
xchg
mov
mov
inc
mov
popf
divb
xchg
push
outsb
mov
loopne
dec
sbb
and
dec
nop
sub
mov
mov
loope
pop
out
inc
pop
ljmp
cmp
dec
inc
pop
mov
in
popf
out
sbb
les
sub
and
cmp
xor
mov
bound
call
dec
jg
sub
jle
addr16
js
jle
lcall
outsb
jne
lahf
sub
enter
mov
sub
mov
fwait
pop
xchg
sub
mov
adc
jbe
rcll
lods
inc
lret
rol
ret
arpl
pop
mov
xchg
in
push
in
in
leave
xchg
into
pushl
sbb
adc
pusha
mov
cmpsl
sbb
cmp
xchg
pop
xchg
dec
xchg
test
dec
ret
out
out
cmpsl
icebp
outsl
popf
and
fwait
xor
jae
cmpsb
xor
fstp
cltd
jmp
cmp
outsl
aad
sbb
xchg
push
movsb
insl
test
cltd
cmp
inc
pop
cmc
push
push
lcall
cmc
inc
popa
mov
mov
jb
adc
in
xor
jl
pop
jge
jmp
push
or
scas
shrb
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
js
mov
jo
jle
jo
leave
iret
fisubrl
std
addr16
fcoml
aad
mov
aad
insl
push
push
into
shll
mov
aaa
xor
add
mov
test
and
movsb
incb
imul
js
inc
xlat
addr16
add
and
fwait
scas
sbb
sbb
cmc
jbe
inc
sbb
in
and
add
fadd
jp
sbb
push
subb
push
sbb
std
pop
push
mov
insb
icebp
push
jg
add
scas
nop
or
push
xchg
scas
mov
scas
rclb
pop
mov
out
addb
movsl
out
movsb
push
dec
pop
and
mov
outsl
push
sbb
ret
cmpsb
outsl
adc
mov
dec
push
lock
mov
push
popf
xor
push
stc
add
out
bswap
cmpsl
cmovl
popa
shll
test
sahf
daa
mulb
mov
std
fchs
je
int3
test
push
sbb
out
or
mov
and
pop
mov
sbb
pop
pushf
call
cmp
push
mov
popa
cmp
lea
pop
mov
sbb
ret
lcall
jecxz
xor
je
int3
hlt
mov
test
cmpsl
call
pop
dec
jo
ret
pop
xor
push
mov
aaa
jnp
and
or
or
stc
inc
cmp
mov
jg
add
in
mov
xchg
loop
out
insl
test
popa
aaa
in
adc
mov
stos
loopne
jg
xor
adc
mov
jnp
arpl
dec
aad
sarl
inc
pop
test
fcoms
shll
int3
and
fisubs
mov
pop
or
add
pop
xchg
jno
dec
out
sbb
xchg
jnp
cwtl
addr16
lahf
push
lock
cmp
push
call
sub
xorl
or
cmpsb
xor
lahf
mov
jge
int
sub
popf
xlat
sub
aad
lods
xor
xlat
aas
out
lret
jp
out
mov
dec
jge
pop
fs
adc
iret
mov
sbbb
mov
cmp
out
inc
push
mov
or
cmp
push
sub
mov
aaa
and
cmp
sbb
jne
sahf
xor
sbb
in
cmp
daa
fiaddl
shll
xchg
movsb
xchg
add
push
lret
mov
test
xor
aas
xlat
inc
and
mov
jbe
cmpsl
out
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
pop
add
je
es
mov
stos
lods
movntq
out
xchg
int
mov
loope
lea
sub
add
shll
loope
sbbb
jl
popf
xor
xchg
imul
mov
add
jnp
ret
cmc
dec
jg
push
push
pop
xlat
or
fsubrp
push
mov
dec
inc
out
xor
inc
mov
loope
ja
int3
mov
movsl
mov
pop
lock
mov
enter
rcl
dec
push
repnz
sbb
pop
std
and
push
dec
imul
inc
sbb
dec
add
and
shl
out
in
je
pusha
lods
push
cs
xorl
push
call
jl
mov
popa
xor
shll
in
aaa
mov
in
push
mov
adc
xlat
mov
ret
xlat
and
mov
jp
scas
mov
aad
orl
fldcw
xchg
push
xor
jne
fisttpl
rcrb
shl
jg
ret
xor
inc
mov
sbb
dec
repz
outsb
loopne
into
xchg
stos
pusha
mov
aaa
lea
xor
cmp
jmp
or
jns
cmp
shll
lret
mov
sbb
fldcw
sbb
mov
leave
repz
cmpsb
mov
jbe
std
cmp
sub
fstps
sbb
mov
dec
cld
rclb
lea
add
jle
xor
ficomps
in
cmp
fstps
add
ret
bound
lcall
cmp
shll
xor
sti
out
pop
lea
wrmsr
cwtl
outsl
arpl
and
inc
sbb
lret
iret
repnz
sbb
fs
cmpl
pusha
dec
jg
push
jno
aaa
inc
shll
cli
and
or
xchg
cmp
scas
in
in
lahf
pop
push
enter
dec
jle
leave
fmul
fdiv
dec
adc
or
fidivrs
adc
aas
mov
je
imul
lods
lahf
sbb
mov
int
inc
iret
mov
into
sbb
fstl
push
and
sub
or
jnp
outsl
lcall
jns
push
inc
jmp
or
push
xor
xchg
sbb
ficoml
test
lcall
dec
iret
dec
and
mov
lea
lds
pushf
jmp
aam
adc
push
pop
mov
and
test
lcall
dec
jno
jno,pn
mov
xchg
js
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
loop
and
jle
jo
lock
enter
outsb
loop
sub
pop
mov
lock
pop
cmc
arpl
clc
roll
mov
arpl
xchg
cltd
dec
sbb
shlb
jg
or
je
xchg
cmp
push
push
test
adc
ss
sub
adc
andl
mov
lea
pop
or
roll
sbb
iret
add
sbb
xor
gs
stc
out
sbb
and
push
std
out
cli
push
xor
into
int3
repnz
orl
pop
sbb
outsb
flds
pop
add
sbb
sti
cmc
popf
outsl
xor
cli
pop
xor
jnp
scas
dec
push
js
lock
jns
lock
adc
push
insb
jge
push
pop
mov
push
mov
pop
dec
xor
out
xor
mov
xchg
mov
imulb
or
sub
insl
int
push
or
inc
or
test
fdivrs
in
mov
mov
pushf
push
push
ss
mov
rcr
movsl
pop
mov
cmp
adc
mov
push
out
xor
lock
into
xchg
repz
pushl
add
cmp
nop
pop
xlat
mov
sub
adc
mov
fmuls
cmpsb
cmp
call
arpl
xchg
sub
into
int
inc
imul
fs
inc
cmc
and
leave
mov
jne
add
lret
jge
imul
clc
nop
dec
imul
lret
aaa
jmp
push
dec
test
or
pushl
inc
mov
subl
mov
dec
push
push
mul
test
lcall
sbb
jl
cmp
testb
cmp
sub
out
ljmp
jmp
mov
jb
out
in
mov
or
fisttpll
mov
xor
lds
rclb
jp
lock
pop
je
insb
pusha
pop
ja
dec
pop
and
daa
jnp
pushf
push
aas
std
lea
add
inc
das
lds
xchg
sub
data16
xchg
sbb
add
hlt
divl
mov
push
ficomps
pop
dec
push
outsl
dec
aaa
pop
cmp
pop
push
hlt
push
inc
cmp
shlb
rol
mov
sbb
test
popa
lret
into
mov
or
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
