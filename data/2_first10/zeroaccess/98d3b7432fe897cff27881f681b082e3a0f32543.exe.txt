push
mov
sub
mov
mov
jmp
adcb
shrl
push
jle
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
add
ret
in
xacquire
cld
mov
cmp
mov
enter
popa
lea
scas
out
or
fs
sbb
je
mov
mov
pop
pop
mov
lock
mov
lahf
sti
xchg
dec
dec
inc
lock
sub
daa
movsl
ja
stos
cmpsb
mov
fucomip
lret
inc
test
gs
fcoms
test
or
pop
bnd
inc
pop
mov
push
aaa
andb
sti
mov
jmp
rcr
test
push
sub
neg
jge
icebp
dec
cwtl
add
imul
pop
xor
sub
sub
movsl
cmp
fcoms
cmp
dec
test
mov
inc
jl
jb
push
testl
add
mov
arpl
mov
rcll
pop
fisttpl
pop
push
js
dec
pop
xchg
pop
daa
repz
int3
xchg
sbb
or
fsub
and
les
sub
or
ss
fdivrs
add
cmp
dec
xlat
pop
fsubrl
push
in
mov
push
ja
mov
fldl2t
roll
mull
rolb
dec
outsl
jno
sbb
push
mov
ja
sub
xchg
push
lds
xchg
out
and
outsb
test
lods
int
mov
insb
mov
lahf
lock
push
out
pop
and
mov
adc
xchg
je
call
mov
mov
mov
inc
push
es
loope
mov
in
xchg
repnz
ljmp
adc
jo
xorl
inc
mov
mov
adc
push
dec
and
mov
jo
in
loop
std
pop
lcall
xchg
std
js
mov
xor
test
int
loope
jns
clc
mov
mov
xchg
je
dec
xor
sbbl
inc
jl
insl
fwait
sahf
xchg
insb
fisttpl
out
mov
pop
notb
pop
lods
dec
fcmovb
mov
fidivrs
out
mov
movsl
mov
js
mov
dec
inc
sahf
aad
adc
ret
lret
shl
pop
jae
and
pop
pop
imulb
mov
mov
mov
dec
adc
lcall
mov
out
insl
inc
bound
out
adc
pop
stos
dec
fnsave
or
xchg
xor
sti
jns
into
jno
xchg
addr16
mov
ds
jmp
movsb
shlb
pushl
xlat
xor
xchg
outsl
stos
fildl
push
inc
xchg
je
xor
gs
cmp
push
mov
inc
sbb
data16
fcomps
fstps
fldenv
dec
lret
movsb
ds
mov
mov
cmpsb
inc
sar
mov
sub
cli
les
aas
dec
jmp
test
push
sub
add
jbe
jp
xchg
dec
bound
inc
pop
jl
adc
insb
repz
mov
mov
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
sbb
sub
jle
outsl
jge
jle
adc
cmp
cmp
sub
out
cmp
add
ss
in
mov
outsl
or
jae
inc
add
test
jne
leave
mov
jb
fcompl
mov
push
jp
jo
jb
loop
addr16
push
insl
aad
and
xor
stos
sub
int
lret
pop
mov
es
sbbl
and
outsb
fdiv
jb
sbb
mov
fstpt
and
jno
popa
dec
lret
shr
pop
inc
sbb
or
jge
icebp
jecxz
test
jbe
leave
mov
call
pop
inc
xchg
jp
push
mov
shll
hlt
vcmpnlt_uqpd
mov
in
call
filds
cmovne
inc
and
outsl
test
push
fwait
ret
mov
imul
aaa
mov
xchg
out
mov
daa
ljmp
pop
pusha
jbe
push
hlt
or
and
call
out
push
xchg
lds
lock
push
mov
dec
dec
sub
pop
cmp
dec
xchg
xor
xor
test
dec
sub
scas
add
inc
mov
icebp
dec
inc
sub
sub
adc
xor
jno
add
iret
xor
orb
ss
adc
popa
shrl
jns
les
push
sbbb
xchg
pop
and
mov
test
insl
xor
faddl
or
add
jmp
out
xchg
rcll
lret
mov
pand
repz
xchg
dec
jae
int
addb
dec
dec
repz
cwtl
push
fwait
pop
push
mov
leave
mov
shrl
jnp
or
arpl
repz
xchg
sub
mov
inc
push
shl
shlb
repz
pop
or
aad
xor
inc
dec
xchg
jno
dec
cs
sbb
scas
lahf
jp
filds
dec
fdivrl
notb
xor
lods
or
sbb
ficoms
cmp
jae
inc
scas
loop
xor
dec
mov
into
xorb
dec
mov
push
mov
ret
push
xor
stos
xor
sub
test
cwtl
gs
js
cmp
mov
daa
mov
out
push
pop
dec
lods
jp
cmp
lcall
mov
rolb
fcom
test
xchg
push
hlt
jns
sbb
push
mov
adc
push
mov
mov
ret
out
sbb
sbb
adc
or
add
and
sub
cmp
xchg
cmpsb
adcl
lret
dec
mov
iret
jl
mov
xor
or
int
icebp
xor
out
outsb
sub
adc
sar
xchg
jge
inc
or
cltd
cmp
jg
or
jg,pn
sub
loopne
pop
in
dec
adc
retw
inc
inc
stos
jp
testb
das
fidivrs
xchg
jge
jae
jge
and
stc
cmpsl
test
fldcw
stos
arpl
xor
test
dec
cli
dec
ffreep
add
test
and
mov
jmp
lcall
shlb
xchg
cltd
movsl
mov
test
cli
jl
mov
inc
inc
jne
push
mov
sub
sahf
loope
inc
xchg
jge
pusha
push
sub
jnp
jle
leave
and
or
mov
loopne
data16
xor
lds
aas
mov
icebp
mov
xchg
cltd
sbb
hlt
int3
dec
stos
add
xchg
fs
push
fwait
js
xchg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
mov
jle
outsl
jge
jle
pop
in
lret
fistl
sbb
adc
dec
push
lods
in
ljmp
notb
loopne
mov
repz
mov
outsb
xchg
inc
pop
mov
mov
cmp
mov
sub
xchg
and
in
pop
popf
lds
and
inc
push
idiv
iret
push
int
inc
das
scas
ss
adc
push
add
lock
cmpsb
dec
push
cmp
mov
cmp
out
xlat
mov
test
xchg
dec
push
mov
sub
inc
jge
xchg
pop
mov
out
mov
inc
das
inc
sbb
xchg
sbb
in
sub
inc
xor
lds
dec
repz
rclb
and
loop
mov
dec
int3
stc
push
out
mov
mov
mov
and
pop
enter
mov
mov
push
out
or
adc
mov
imul
xchg
shrb
inc
xlat
sub
jo
popl
sub
add
mov
cli
mov
mov
repz
inc
fs
call
or
xchg
jge
fdivs
jl
call
aad
jmp
push
es
fimull
jecxz
xor
cmp
dec
mov
nop
cmc
in
cmovge
sub
sbb
rcr
lea
sbb
lods
push
xchg
jb
jns
cld
jle
cmp
adc
push
xchg
loope
pop
aas
xchg
in
test
jo
shl
ljmp
inc
push
or
pushf
std
iret
in
test
mov
ljmp
or
or
pop
mov
cmpsl
and
out
xchg
lahf
and
jo,pt
inc
xor
sbb
lock
data16
xor
sbb
mov
lock
mov
sub
jae,pn
ret
and
pop
pop
test
aas
push
sub
dec
pop
or
je
enter
lret
xchg
les
popf
iret
adc
xchg
data16
pop
cltd
fisttps
mov
mov
pop
mov
add
pop
lcall
hlt
aas
mov
stos
adc
shlb
cmp
divb
dec
dec
xor
ja
and
ljmp
pop
xchg
mov
fnstcw
dec
lods
outsb
sbb
jbe
xchg
sbb
lods
mov
cwtl
bound
add
das
jl
cmp
out
out
arpl
push
xchg
ds
push
jecxz
add
mov
nop
mov
mov
fsts
cmpsl
iret
cmp
iret
insb
das
fcoml
pop
cmp
stc
repnz
jae
in
push
jnp
jne
sbb
jle
lods
in
cmp
cld
jno
lods
loope
insl
jmp
in
fidivrl
push
adc
push
imulb
outsl
or
stos
aas
push
push
add
inc
sti
add
stos
sub
and
in
xchg
fs
or
pusha
aam
mov
add
mov
sub
pop
sub
in
xchg
daa
jns
gs
insl
mov
xchg
cli
xor
out
icebp
aaa
das
mov
repnz
dec
out
lea
xchg
inc
mov
int
inc
in
lahf
mov
sub
and
sub
cmpsl
cltd
cmpsl
cltd
mov
sub
add
ss
fs
out
pop
pop
cmp
or
xchg
or
cwtl
mov
push
jo
adc
xchg
mov
out
pushl
mov
xchg
or
cmp
gs
xchg
dec
stos
in
sbb
mov
loope
pop
fisttpll
fcomps
and
lahf
sub
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
mov
fwait
xchg
dec
add
jle
xorb
daa
mov
xor
in
jo
and
xchg
pop
dec
add
push
mov
pop
inc
sub
jle
mov
xor
sub
lcall
mov
ss
rclb
shll
cmp
sub
mov
jbe
pop
adc
int
bswap
repz
adc
jnp
xchg
jo
or
jecxz
cwtl
xchg
xchg
imul
push
aam
lds
xchg
cmp
add
mov
pop
test
loope
jnp
sbb
push
das
fcmovnbe
scas
fiadds
stc
inc
mov
hlt
pop
cli
cltd
cmp
jo
dec
inc
lret
dec
hlt
jp
cltd
add
arpl
dec
sbb
push
std
data16
inc
dec
sti
and
push
jle
test
or
and
les
push
sbb
add
pop
leave
adcl
mov
xchg
mov
cmp
cmp
cwtl
fnstenv
int3
mov
add
pop
adc
outsl
sar
dec
insl
call
mov
push
lods
dec
gs
jge
jl
sub
in
pop
fadds
lahf
sub
sar
mov
jg
cmpb
cmp
sub
push
push
or
sub
and
jge
xchg
iret
js
push
adc
test
test
jge
in
cmp
outsb
pop
enter
or
in
insl
add
mov
hlt
aam
cmp
inc
push
insb
movsl
inc
aad
sbb
sbb
roll
mov
inc
xchg
mov
sahf
mov
dec
int
sub
pop
aaa
mov
negb
or
shll
and
in
mov
movsl
shll
push
leave
addr16
mov
test
je
sbbb
loope
pop
in
mov
or
hlt
mov
outsl
jg
cmc
add
rcrl
and
lods
mov
popa
insb
in
test
jae
mov
push
add
test
add
mov
push
faddl
enter
divb
add
out
inc
fwait
aaa
xor
xchg
cld
call
pop
mov
int
sbb
jmp
inc
jne
adc
add
cwtl
cmp
lcall
push
int3
jge
imul
fwait
cli
pop
js
mov
mov
jle
call
dec
das
cs
shlb
sub
sub
insl
jbe
cmp
ja
pop
std
fadds
test
mov
enter
jns
ficompl
addr16
mov
sbb
jmp
rorl
mov
movsl
add
pop
and
adc
jns
push
cld
mov
jne
cs
stos
loope
ljmp
xor
jne
xor
or
repz
cld
js
movq
jae
cld
arpl
push
or
lds
divl
dec
rorb
fimull
jge
jbe
push
jnp
xchg
js
out
xchg
testl
pop
cli
pop
sbb
cmp
out
xchg
cmpsb
and
mov
xorb
insb
movsb
jecxz
pop
pop
mull
rclb
or
into
imul
add
or
xor
mov
cmpxchg
mov
sbb
out
mov
sub
addr16
mov
mov
popa
cmp
test
push
xchg
insl
out
mov
push
mov
scas
xchg
push
mov
mov
jo
cmc
cmp
out
lret
add
push
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
aad
mov
jge
jle
push
pop
push
insl
stc
or
sub
fmuls
inc
jmp
cmp
int
pop
jmp
xchg
movsl
popa
add
xchg
xor
test
push
mov
aam
xor
mov
mov
sub
lock
push
imul
test
lods
loopne
xlat
out
add
and
xor
dec
push
test
ljmp
push
je
push
xor
cltd
push
and
jno
or
sahf
sub
push
mov
fdiv
cli
in
cmc
mov
lret
mov
out
or
loopne
movb
pop
out
xchg
add
or
rcrb
imull
test
call
inc
or
and
and
jle
add
jnp
xchg
lret
and
es
cmp
bound
aaa
cmpsb
out
je
push
test
mov
push
pop
xchg
mov
das
pop
call
mov
push
sbb
sub
jmp
lret
repz
adc
adc
loope
rcrl
mov
jle
mov
cmp
jnp
in
mov
and
mov
or
jns
cmp
mov
mov
jle
ret
testb
out
lods
lock
pop
aam
fstpt
test
fimull
push
addps
xchg
fcom
dec
jo
xlat
dec
out
mov
xchg
fbstp
in
mov
in
add
and
cmp
adcl
rolb
or
or
ss
add
push
out
cltd
arpl
subb
jne
xchg
mov
icebp
push
inc
rcrb
cmp
mov
dec
inc
add
imull
out
push
scas
orb
out
cmp
sub
shrl
imul
out
or
test
xor
jbe
popf
push
stos
add
sub
sbb
mov
push
sbb
jge
sub
scas
stos
outsb
cmp
cmpsb
fdivp
sub
fistps
push
mov
and
stc
mov
outsb
lds
push
push
filds
inc
mov
arpl
std
fucomp
xchg
pop
push
or
imul
sahf
mov
leave
jo
int
imul
cltd
rcll
xchg
fimuls
jmp
insl
call
cmp
xor
movsb
cmpl
loopne
jg
xchg
roll
lds
cmp
push
aam
jno
mov
je
add
inc
iret
aad
cmpsb
out
jge
sarb
call
int
add
push
jecxz
jle
js
std
imul
dec
pop
ja
lcall
rol
jmp
insb
ss
or
out
test
shr
lea
ret
ds
icebp
pop
data16
adc
movsl
ficoml
jmp
lret
xchg
jg
mov
shrb
jecxz
adc
or
mov
leave
push
mov
arpl
add
inc
test
jmp
scas
or
pushf
xor
cmp
fmull
lret
adc
xchg
pop
mov
mov
fists
lret
sbb
jmp
push
pop
fstps
pop
in
mov
add
test
fs
pop
in
push
mov
mov
mov
lcall
leave
cmp
fiaddl
or
out
leave
pop
pop
insl
pop
mov
ja
es
repz
adc
fbld
and
push
cmpsl
fisttpl
rorb
or
inc
int3
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
cmp
fbld
call
jmp
push
shrb
fwait
pop
pushf
add
pop
and
insb
stos
outsl
imull
push
sbb
pop
inc
fmulp
add
or
sub
xor
dec
outsl
test
and
pusha
testl
pop
cmp
insl
adc
fwait
push
adc
dec
les
jp
lret
leave
adc
movb
and
dec
fists
loope
fisubs
insb
dec
sbb
popa
rcrl
cltd
aas
subb
xor
shlw
and
add
add
add
pop
mov
pushf
jl
ljmp
xor
repz
push
sbb
cli
test
je
gs
pop
orl
dec
fisttpl
adc
nop
xor
out
out
pop
jo
cmp
adc
shll
sub
mov
add
or
outsl
mov
push
mov
sbb
and
aaa
lret
and
mov
icebp
adc
jne
mov
stos
sti
test
fiaddl
push
inc
pop
add
es
push
adc
repz
fsubl
dec
xor
dec
mov
sub
push
test
loop
mov
mov
pusha
pop
sub
lcall
call
dec
repnz
scas
and
jecxz
test
sub
lods
sub
jb
cvtps2pi
das
mov
pushf
fidivl
jmp
lds
and
mov
lcall
xchg
pop
sbb
jne
in
push
rclb
pop
pop
movsb
push
ja
mov
and
fstpl
in
mov
cs
or
push
sti
lahf
push
push
sbb
in
cmc
and
aad
int
mov
ret
clc
xchg
adc
popf
lds
dec
inc
pop
std
movsb
lods
loopne
sbb
mov
cli
xor
mov
imul
leave
add
mov
jno
dec
or
shr
out
push
int3
adc
frstor
mov
mov
and
and
mov
jno
push
mov
push
inc
mov
jg
imul
pop
adc
loopne
xor
push
jecxz
aas
and
jne
aam
insl
cmp
dec
fmul
push
push
inc
add
icebp
sub
xchg
dec
ret
add
cmp
dec
jecxz
sbb
in
sbb
repnz
xchg
movsl
daa
aas
or
ja
jno
iret
insl
in
out
sub
leave
xor
imul
in
cmp
pop
dec
into
daa
insb
out
ss
pop
inc
lret
dec
icebp
add
mov
inc
xchg
scas
sbb
lahf
lock
mov
fstp
fmull
cli
popf
loopne
jge
push
inc
lea
push
xchg
xlat
adc
ret
push
fs
or
add
mov
hlt
int3
leave
popf
pop
lock
xchg
xlat
pop
outsb
lods
pop
add
dec
mov
ret
add
jl
movsl
js
in
lock
mov
rcll
push
lods
js
jp
loopne
test
push
outsb
mov
out
push
adc
or
xchg
insb
dec
add
imul
inc
xor
mov
aas
pop
ds
xchg
xor
lock
inc
xchg
nop
mov
add
setge
pop
jns
enter
popf
sti
test
xlat
gs
fldpi
mov
bound
adc
lcall
fdivs
xor
test
aas
jne
lahf
call
movb
in
stos
adc
push
dec
push
jl
mov
ljmp
xlat
shlb
xor
add
add
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
movsb
or
fs
or
outsl
jge
jle
pop
or
or
fistps
or
mov
jle
pop
sbb
addr16
outsb
aam
mov
int3
adc
arpl
icebp
lods
pop
push
sub
dec
idivl
in
xorl
int
cmp
stos
std
sbb
jae
sahf
mov
loope
adc
sti
jmp
and
jae
and
and
xor
shrl
push
xor
loope
sbb
lds
sub
in
inc
shrb
and
adc
lea
sub
push
jl
xor
mov
sbb
adc
sti
xchg
int3
cli
hlt
scas
mov
mov
inc
mov
lcall
push
mov
fistpll
cmp
popa
pop
out
xchg
pop
dec
inc
jmp
movl
fdivrl
cmp
push
negb
test
lret
mov
or
jae
ret
leave
mov
xchg
sub
sub
mov
jns
iret
je
test
jl
push
xchg
bound
mov
imul
xor
hlt
rcrl
jnp
imul
add
sub
add
es
dec
mov
lods
jb
mulb
imul
sbb
in
outsb
hlt
in
and
movsb
jae
xchg
fsubs
dec
cmp
adc
adc
jb
push
clc
add
jbe
movsb
inc
movsl
push
jb
sbb
cmpsb
adc
mov
or
pop
repz
mov
ja
and
pop
test
ret
push
fsubs
pop
cs
mov
mov
enter
out
jg
jp
mov
xor
sbb
push
sub
inc
test
jmp
pop
dec
and
fsin
inc
adc
adc
jmp
push
sub
sub
pop
mov
mov
fcmovbe
imul
push
pop
dec
imul
or
xchg
fmul
popa
xor
js
sbb
xchg
sub
and
scas
loope
inc
cmp
pusha
and
mov
jp
mov
cmp
daa
mov
jne
push
push
movsl
jge
call
adc
subps
add
cmp
fiaddl
dec
lret
mov
into
fs
push
jbe
xchg
mov
jns
lret
mov
out
dec
push
pop
sub
ss
ret
out
push
outsb
mov
movsb
out
push
std
in
and
sahf
pusha
jl
inc
mov
add
mov
fisttps
jmp
loopne
sbbl
mov
push
mov
push
adc
mov
sbbb
call
aaa
mov
popf
inc
enter
mov
sub
push
adc
in
scas
or
test
test
out
stos
fs
lahf
cwtl
sub
int3
xchg
jg
mov
push
push
call
in
mulb
add
cltd
add
push
xor
popa
xor
jns
aad
or
adc
push
fdivrl
loopne
add
rolb
cmp
popa
push
xor
stc
jle
movsl
movsl
or
or
or
sbb
fcoms
call
outsb
lea
fldl
cli
mov
sbb
add
cli
negb
sub
into
pop
loop
ss
imul
jmp
sar
mov
icebp
sbb
adc
sub
clc
push
ja
push
cmp
in
xchg
das
jo
leave
xchg
daa
cmpsl
sarb
hlt
inc
cltd
les
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
pop
adc
mov
jle
imul
push
sbb
add
loope
in
jge
sub
add
push
into
sub
or
cmp
mov
mov
mov
pop
insl
adc
xchg
add
fstl
jle
loop
out
aam
and
into
lds
xchg
ljmp
jg
je
int3
les
push
push
or
out
or
sub
idivb
pushf
adc
insl
jmp
sub
sub
ds
nop
cmp
add
icebp
xchg
loope
pop
mov
cmc
jmp
fdivs
mov
xchg
stos
adc
dec
jbe
mov
gs
mov
fcmovb
inc
mov
sbb
aam
or
mov
adc
ret
xor
jo
sahf
shrl
push
push
fisubrl
xchg
mov
xchg
pop
xchg
sahf
sbb
pop
lock
loope
rorl
push
dec
aam
cs
push
mov
mov
cmp
fucomip
fsubrp
and
lods
inc
xchg
rcrl
xorb
lret
pushf
arpl
aam
out
in
mov
pop
adc
jg
loopne
lods
adc
and
lods
call
and
ret
push
scas
inc
pop
mov
add
mov
mov
bound
lahf
int
inc
enter
jl
jmp
mov
lahf
hlt
cli
pop
xor
cs
lods
or
js
test
maskmovq
mull
out
and
mov
dec
andb
in
ljmp
pop
xchg
jg
xlat
jp
and
loopne
or
test
rclb
aad
mov
outsl
ret
in
push
and
sbb
imul
ret
jae
push
mov
xchg
xchg
stos
push
stc
int3
sbb
shr
push
and
in
dec
cltd
insl
das
mov
mov
add
cmp
mov
jne
add
enter
xlat
mov
enter
adc
jg
aas
cmc
gs
dec
mov
or
push
in
gs
cmpsb
in
cld
ret
imul
jbe
jnp
pop
das
inc
jecxz
xchg
mov
fsubs
aaa
rcll
lcall
add
dec
and
sbb
dec
mov
loop
mov
lret
or
scas
mov
bound
adc
in
mov
adc
pop
fs
push
and
pop
mov
mov
fisubrl
adcl
or
popa
xchg
fcmovbe
cwtl
imul
shlb
pop
mulb
mov
dec
stc
mov
cmpsb
sbb
push
cmpsb
mov
imul
xchg
insb
or
inc
dec
mov
adc
mov
add
loop
pop
dec
pop
outsb
jecxz
sbb
addb
or
adc
and
mov
mov
pusha
push
mov
xor
outsl
add
sub
jno
mov
outsl
or
xchg
sub
out
notl
lret
sahf
stos
aas
pop
mov
push
mov
mov
push
or
xlat
mov
mov
mov
sahf
je
das
inc
aas
cmpl
push
push
in
xchg
fsubl
add
dec
xor
or
jp
and
pop
and
dec
xor
jb
ss
fmull
xor
fldenv
popa
mov
push
cmp
aaa
aaa
jb
dec
clc
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
and
adc
outsl
jge
jle
pop
stos
arpl
andb
and
mov
das
xor
dec
mov
loope
addl
mov
frstor
inc
jo
sbb
mov
inc
and
or
mov
std
mov
cmc
add
xor
sbb
and
xchg
subb
dec
xor
mov
mov
fsubs
movsb
or
jae
adc
jmp
xlat
jne
mov
lret
faddl
pop
enter
out
stc
jns
mov
sbb
and
idivb
and
push
and
inc
or
stc
mov
test
fistps
clc
pop
pop
jp
lcall
push
jb
int3
imul
jnp
mov
pushf
mov
mov
rcrb
or
negb
mov
sbb
aad
cmpsb
imul
lock
pop
psubsb
xorl
stos
jl
ficoms
orb
lock
orb
and
sub
test
add
xchg
sub
mov
dec
add
lds
jg
inc
cld
scas
push
add
ret
mov
jno
out
ja
enter
and
mov
sbb
pop
insb
test
pop
jmp
clc
test
mov
mov
mov
and
push
dec
sbb
arpl
fdivrl
dec
dec
cmp
or
fs
mov
aam
mov
add
outsb
imul
lahf
jns
mov
mov
out
xor
outsb
cs
jo
inc
jne
insb
jmp
aas
stos
dec
dec
mov
cs
cwtl
sub
lahf
cmp
icebp
into
subl
fsubl
xor
push
test
sahf
jle
sub
inc
mov
or
incb
mov
out
test
les
adc
insl
aaa
and
into
xchg
xor
pop
arpl
mov
jno
cmc
pop
sub
arpl
push
into
call
ret
imulb
mov
fildl
iret
js
lcall
jbe
lock
mov
mov
lods
dec
cmp
popa
jp
push
imull
xor
call
jo
cmp
mov
inc
push
lcall
fstl
fcmove
sub
dec
fsub
dec
jmp
test
test
xchg
mov
push
aad
jmp
ds
or
xchg
push
mov
mov
rolb
ss
enter
repz
dec
push
insl
data16
lds
xor
adc
sub
push
cmc
mov
adc
in
inc
loope
sbb
shl
pop
lods
or
xor
inc
or
dec
ret
aas
mov
cltd
fldl
add
out
sub
out
add
test
and
push
imul
shrl
imul
jb
push
ja
movsl
jle
inc
xor
pop
cs
cmp
jg
call
xchg
inc
fwait
outsl
dec
inc
insb
sbb
or
inc
mov
in
pop
bound
pusha
push
int3
clc
xlat
popf
scas
fdivrl
jae
dec
inc
jmp
sub
frstor
jge
mov
lcall
add
jno
add
test
or
imull
pop
pop
out
out
cmp
mov
fstpl
mov
lahf
cs
jns
ror
inc
lds
jbe
push
mov
int3
sbb
mov
pop
push
mov
dec
sbb
sub
hlt
ss
insl
stos
jmp
push
xchg
in
rorb
ss
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
adcl
jle
jge
jle
pop
push
ret
inc
int3
cmpsl
xchg
fxch
movsl
mov
mov
inc
fmull
jmp
mov
fstps
jne
ficompl
js
jne
dec
jb
pop
xor
cmp
xor
in
cmpsl
lods
adc
cld
addr16
ljmp
adc
or
loope
sbb
add
imul
sbb
mov
jne
ds
cmpsl
push
dec
loope
add
adc
xlat
mov
and
add
ss
je
orb
jo,pt
pop
fwait
mov
out
ret
pop
dec
movsb
or
ret
dec
stos
orl
inc
mov
loope
cmp
sub
xchg
mov
aas
lock
inc
loopne
fwait
inc
xlat
incb
scas
push
icebp
imul
add
out
inc
repz
mov
loopne
loop
in
hlt
stc
cmp
jo
leave
enter
jae
cmp
fwait
out
daa
xor
ret
aad
mov
loop
jl
in
int
pop
push
je
cmp
aad
imul
mov
aam
sub
orl
cld
stc
fwait
adc
outsl
or
cwtl
fsubr
mov
mov
xchg
ret
es
cmp
jbe
xchg
pop
roll
lret
add
mov
and
fidivs
pop
mov
or
pop
cltd
into
nop
data16
in
pusha
popa
pop
xchg
cmpsl
inc
adc
cmp
mov
jns
cmpb
sahf
adc
filds
push
jo
lea
pop
cmp
ficomps
jbe
inc
loopne
fwait
aam
jb
xchg
dec
inc
adcb
emms
sbb
sarl
sub
incl
ror
mov
xchg
test
or
dec
hlt
mov
xor
lret
lods
sar
inc
or
add
pop
sbb
ja
call
sub
add
push
or
and
bound
scas
xchg
xorb
sahf
pusha
cmp
mov
aam
mov
pop
push
mov
adc
dec
stos
insb
cwtl
jns
lock
mov
push
gs
adc
je
cmp
fbld
data16
or
jbe
lods
sbb
inc
inc
xor
bound
mov
jns
ljmp
add
lea
pop
sbb
mov
jle
mov
xor
or
pop
outsb
imul
js
jns
pop
ljmp
push
add
adc
or
sub
push
shl
adc
jl
pop
rcrl
xor
out
mov
add
push
adc
xor
out
and
mov
stos
lahf
into
pusha
adc
rol
xlat
jnp
aaa
add
into
jnp
jb
pushf
in
mov
into
repnz
decl
cmp
jmp
fimuls
sub
in
pop
pop
aas
nop
insb
mov
xlat
popa
insb
outsb
sbb
lds
sub
test
std
jmp
xor
push
mov
push
xchg
int
fistpll
pop
stos
jns
insb
mov
dec
lea
sbb
or
movsb
int3
add
je
sub
flds
mov
cltd
push
test
push
pop
loopne
jbe
lcall
clc
mov
outsb
adc
aaa
pop
sbb
out
adc
cmp
fsub
mov
pop
xchg
or
out
add
lret
into
cmp
push
mov
data16
lret
pusha
stc
addl
xchg
fnsaves
jg
or
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
sbb
outsl
jge
jle
sbb
mov
mov
popf
call
icebp
stc
enter
ret
inc
inc
inc
fists
ffreep
mov
sahf
popf
and
movsl
or
xchg
jo
aad
cs
into
fcoms
js
test
adc
inc
ret
mov
stos
mov
mov
pop
aam
and
push
push
mov
into
lock
dec
cmc
mov
sti
fs
xlat
mov
sar
test
push
popa
ss
add
imul
daa
popf
cli
sbb
outsl
repz
xor
sarl
xor
or
sub
shlb
dec
inc
and
fsts
lret
pop
in
jbe
xor
push
mov
shlb
push
into
cmpsb
xchg
enter
xchg
imul
iret
pushf
subb
mov
xorb
scas
jmp
lods
ret
daa
lret
pop
mov
pop
adc
inc
mov
pushf
hlt
fidivrs
xor
jo
or
sub
ss
pop
idivl
fcoms
pop
lret
cmp
add
sub
in
or
cli
mov
dec
push
jl
in
mov
out
std
scas
jns
jb
enter
and
pop
lea
loop
or
xlat
insb
rorl
mov
lds
or
mov
inc
push
aad
cmp
sbb
or
jbe
cs
xor
icebp
bound
das
adc
push
mov
mov
jmp
sub
loope
mov
add
and
fists
pop
and
xor
lret
imul
les
test
cltd
xchg
add
push
mov
and
jl
mov
out
bound
adcb
popa
mov
loopne
cmc
test
xchg
test
out
jl
fbstp
das
out
lret
xchg
outsl
dec
daa
mov
xchg
addl
leave
bound
dec
push
js
stc
sub
push
sub
jg
add
in
dec
mov
test
and
ss
jno
xor
jne
fistpl
js
sbb
mov
sbb
jns
outsb
lock
adc
mov
inc
adc
add
sbb
cmpsb
cmc
adc
lods
stos
adc
movsl
pusha
pushf
dec
jbe
adc
cmp
repz
xlat
stos
jne
cmp
mov
pushf
lds
mov
insl
fdivl
sub
pop
xchg
push
mov
add
popa
int3
sub
add
pop
sbb
push
fistpl
push
cld
pop
jp
cmp
jne
lock
pop
push
lahf
jge
aas
cmp
sbb
fldl
les
dec
push
popa
lahf
jecxz
mov
mov
imul
lahf
sbb
or
outsl
mov
test
xchg
mov
test
push
push
ds
inc
push
loop
cmp
lahf
jg,pn
aas
pusha
xchg
jl
dec
ret
dec
dec
aas
xlat
add
add
pop
inc
cmp
xchg
data16
stos
pop
jecxz
or
sbb
outsl
sarb
popf
shl
std
rcll
out
dec
mov
insl
jno
inc
mov
pop
adc
push
pop
repz
insb
popf
sahf
xchg
mov
xor
pop
aad
pop
xor
push
std
mov
jmp
fcomps
aam
into
ljmp
gs
lock
dec
sarl
mov
hlt
fstpt
push
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
xchg
and
jle
dec
repz
cli
rcr
mov
andl
add
add
mov
mov
and
push
sub
mov
mov
mov
sub
jge
enter
jp
add
sbb
xor
jmpw
arpl
mov
out
dec
testl
fcmovnb
ror
cmp
rcl
pop
repnz
jb
jge
call
pop
dec
sub
scas
dec
adc
mov
je
les
popa
les
or
push
stc
push
popf
pop
out
icebp
mov
je
fdiv
outsb
orb
in
mov
movsb
inc
jno
cwtl
fs
lds
mov
js
sbb
sbb
out
int3
xchg
arpl
adc
sub
inc
in
sbb
mov
sahf
add
and
lcall
sbb
stos
and
lods
pop
icebp
mov
sbb
loope
pop
mov
mov
gs
insl
inc
pushf
jmp
mov
xchg
fsubp
cmp
flds
cmp
jge
std
mov
or
mov
lahf
fwait
pop
fimull
ret
scas
fistpl
ss
jno
enter
push
sub
inc
dec
sbb
je
jecxz
inc
pop
inc
les
call
test
push
data16
gs
push
icebp
mov
mov
outsl
stos
cmpsl
int3
jne
and
jo
pop
ss
cmp
icebp
roll
push
add
imul
xlat
sub
jbe
aam
inc
in
mov
fisubrl
adc
jp
xorl
leave
cmp
daa
in
push
gs
andl
into
inc
js
mov
cmpsb
sub
add
jl
rcll
jecxz
mov
push
cmp
mov
outsl
std
fcompl
and
pop
idiv
inc
add
add
lea
sbb
add
dec
mov
jl
adc
mov
fwait
inc
add
lahf
js
bound
mov
insb
fldcw
or
cmp
dec
mov
gs
lret
inc
pop
fnstcw
movsb
cmp
cld
pop
loop
out
bound
sbb
pop
fs
jns
jge
into
xchg
mov
sub
push
rcrl
pop
jle
icebp
or
adc
sbb
inc
cmp
stos
mov
in
aam
push
out
cmpsl
fbstp
test
int
pcmpgtb
movsb
aas
jp
push
cld
movl
je
mov
aam
xchg
pop
push
icebp
or
scas
or
xlat
lds
push
xchg
lock
sbb
sti
push
repnz
repz
pop
fwait
outsb
sub
lods
pop
sbb
lods
mov
addr16
mov
outsl
enter
pop
or
mov
cmpsl
dec
mov
xchg
mov
inc
push
ljmp
ret
loope
dec
outsb
inc
cmp
jmp
xchg
inc
xchg
pop
inc
cmp
pop
movb
adc
mov
sbb
out
daa
int
cmc
movsl
pop
stos
enter
in
push
testl
cmp
mov
sahf
xchg
xor
rcr
mov
mov
mov
jecxz
mov
push
mov
in
mov
or
movsb
dec
add
out
in
inc
pop
iret
mov
push
sbb
dec
pop
lahf
inc
js
mov
test
cmp
pop
and
push
ds
sub
iret
hlt
dec
ljmp
insl
and
mov
hlt
pop
and
scas
add
pushl
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
mov
and
outsl
jge
jle
pusha
inc
inc
pop
mov
insl
xchg
mov
or
stos
das
lahf
jmp
pop
gs
les
xchg
push
testb
popf
test
and
test
mov
inc
cs
sar
div
int
push
push
dec
leave
cli
pop
scas
xlat
jge
mov
ss
les
bound
push
mov
clc
add
sub
cltd
adc
mov
xchg
mov
cs
cmp
das
mov
push
pop
in
dec
or
jmp
pop
shlb
shlb
movsl
aad
xor
adc
iret
mov
dec
mov
ret
outsb
push
std
rcrb
pop
addr16
shlb
popa
lahf
cmp
gs
push
and
fists
rcr
adc
in
call
xor
sar
mov
decb
dec
movsl
in
ret
test
rcll
sub
sub
ret
stos
mov
mov
inc
data16
and
and
les
sbb
xchg
loopne
mov
jb
mov
cmpsb
in
cld
fbld
mov
daa
insl
shlb
sub
xchg
inc
and
out
lcall
movsl
add
scas
sub
xchg
push
xchg
ds
adc
jo
xadd
icebp
test
mov
scas
mov
adc
cmpsl
or
dec
faddl
aam
data16
int
cmp
fisubs
test
xchg
imull
int3
scas
js
bound
cmp
shlb
cmp
pop
jne
dec
shrb
cltd
mov
roll
mov
out
dec
dec
sub
fistps
rol
cs
sub
push
inc
adc
push
scas
push
mov
mov
mov
repz
push
sahf
jnp
jne
fldcw
call
lret
stc
imul
outsl
pop
scas
ret
xor
std
mov
mov
das
push
rclb
push
jno
jecxz
add
mov
lret
int
jbe
fildl
and
dec
scas
outsb
mov
lods
out
test
prefetchnta
dec
mov
cmp
inc
ljmp
cmp
sarl
push
pop
push
js
in
pop
xchg
mov
xor
pop
dec
in
or
sub
adc
cmp
lret
sbb
mov
xchg
jg
push
sbb
gs
inc
aad
mov
loope
out
mov
add
xor
jl
outsb
test
sub
xchg
adc
lods
lcall
pop
sub
sarb
and
pop
jae
mov
sub
jne
jo
outsb
push
push
aam
int3
ljmp
jae
fdivrs
adc
push
mov
sub
xchg
sbb
pop
mov
push
inc
pop
fadds
mov
xchg
xor
jle
loope
movsb
inc
lahf
mov
outsb
hlt
xchg
pop
push
mov
das
push
test
sub
mov
adc
or
jle
push
popf
std
aam
shlb
push
nop
cli
insl
cmp
mov
out
fistpll
out
push
pop
out
iret
loope
jo
push
push
and
or
sbb
call
stos
in
mov
pop
xlat
ljmp
jb
fxch
icebp
sbb
add
aad
xor
pop
fwait
pop
cltd
cmpsl
ljmp
lea
mov
sti
mov
xor
nop
adc
sbb
pop
outsb
imul
or
adc
stos
test
shlb
and
inc
sbbl
pushf
rorl
cmp
push
push
adc
out
jbe
jae
pop
adc
movsb
lock
pushf
pop
pop
push
push
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
pusha
inc
dec
sub
jo
test
mov
push
add
xchg
pop
cmc
nop
les
mov
and
push
push
loope
outsl
xchg
icebp
fisttps
js
mov
add
jns
xchg
pop
data16
lahf
sbb
loope
shrl
sbb
mov
call
cmpsb
jbe
lret
and
and
ficoms
push
xor
fadd
mov
aad
repz
adcl
add
sti
sbb
xchg
fs
lds
mov
lds
shr
dec
mov
jnp
movsb
mov
loopne
into
and
adc
add
add
jae
lock
xor
sbb
fsubrl
dec
imul
dec
jge
shll
repz
add
mov
sbb
or
jge
arpl
jle
mov
push
outsl
insl
sub
push
out
sub
xor
xchg
aas
cs
scas
mov
push
pop
xchg
stos
mov
xor
jno
insb
je
mov
xchg
mov
pop
mov
popf
inc
test
mov
stc
jg
cli
hlt
jbe
inc
inc
push
pop
bndldx
or
sbb
push
aas
push
dec
xchg
andb
test
aad
insl
in
fisubs
imul
push
xchg
jge
std
lcall
orl
pop
sub
xchg
and
andl
pusha
call
xchg
test
lods
subb
xchg
jg
insl
leave
pop
push
sub
addr16
call
mov
out
mov
or
pop
xchg
cmove
faddp
cmc
jne
leave
push
mov
and
xchg
and
sub
std
ja
out
xchg
leave
shl
dec
test
dec
adc
mov
sbb
mov
sbb
lods
in
sub
insl
sahf
xchg
xorl
pusha
insb
mov
iret
cmpsl
inc
lret
jge
mov
push
sahf
or
push
jno
scas
fistl
pop
mov
dec
inc
aas
lcall
pop
arpl
addr16
out
jle
cmpsb
add
test
repnz
adc
mov
dec
xchg
or
in
sbb
test
xchg
loop
mov
jo
push
xchg
sbb
fcoml
jne
and
push
movsb
gs
mov
cmp
pop
outsb
lret
dec
enter
mov
adcb
mov
js
outsl
push
ds
jae
push
imul
mov
push
inc
fildll
jl
xor
mov
gs
pop
mov
jmp
mov
sub
test
push
xor
sbb
cmp
into
push
add
dec
lret
rcll
and
pop
neg
push
pop
jbe
in
push
pop
arpl
or
xchg
sub
mov
mov
and
adc
fists
jg
mov
leave
cmp
call
mov
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
hlt
xor
jle
jge
jle
lods
pop
mov
sub
fwait
addr16
shrb
movsl
insl
adc
mov
and
addb
lds
jg
scas
cmc
cmp
iret
cmp
xchg
and
cmc
jno
or
mov
lods
dec
cmpsb
mov
jo
and
stos
rorl
jmp
aaa
sbb
fldenv
fsubs
pop
sub
pop
call
sti
imul
sub
aam
mov
cmp
sbb
or
pop
mov
mov
outsl
fimuls
movsl
incl
add
jne
insl
imul
test
xchg
mov
mov
and
adc
stos
and
jp
int3
mov
adc
sub
out
adc
jmp
and
pop
add
xor
mov
adc
sarl
pop
push
data16
jne
mov
out
mov
jge
in
enter
mov
pushf
inc
push
push
ret
sbb
loope
jae
jg
push
adcb
aad
std
int3
lret
shrl
jmp
pop
jp
lret
cmp
popf
and
mov
aam
outsb
rol
fistps
xor
add
jbe
mov
jae
jl
or
mov
push
in
iret
inc
mov
js
xchg
int
xor
nop
sub
and
lahf
cvtps2pi
lret
test
outsb
mov
fsubrs
mov
mov
push
aam
imull
in
mov
cmp
popa
fisubl
sbb
fdivrs
cs
jl
and
jno
addr16
loopne
add
roll
xchg
adc
adc
xchg
addb
mov
jne
notb
test
mov
mov
inc
sub
test
jae
add
mov
cld
test
mov
sub
or
push
scas
lds
repz
dec
add
pop
adc
or
rcl
mov
xchg
inc
lea
ds
loope
push
ss
dec
cmpsl
ret
loope
xchg
aas
dec
mov
push
dec
cmc
addb
fcomp
mov
fnsave
inc
jecxz
icebp
pop
or
pop
push
mov
dec
int3
xchg
mov
lret
push
into
clc
xchg
add
inc
jnp
xchg
inc
add
push
outsb
jnp
mov
inc
test
and
pop
stc
shlb
sub
repnz
xchg
cmp
inc
mov
mov
dec
fistpl
bound
xor
pop
or
addr16
rorl
push
or
or
mov
std
loopne
dec
sub
mov
les
or
outsb
shll
mov
in
sub
xchg
xchg
push
in
and
lock
in
cwtl
mov
mov
mov
stos
addr16
clc
pusha
bound
lods
add
jmp
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
push
mov
and
rol
push
add
jmp
sub
and
mov
fistpl
ret
or
sbb
sbb
popf
mov
stos
pop
pop
sub
add
inc
bound
xchg
fcomps
cmpsl
test
rol
push
cwtl
add
jns
dec
dec
rorl
mov
or
dec
mov
lea
das
jmp
jl
pop
jb
fadds
fcoml
sbb
ret
inc
mov
es
fabs
scas
repz
stos
outsb
das
out
mov
and
push
lahf
push
cli
lret
nop
xorl
fisubrs
imul
cltd
jp
and
xchg
dec
jo
mov
cmpsl
out
xchg
push
sbb
fcoml
cmp
pop
jp
dec
push
dec
jecxz
mov
inc
adc
mov
aad
inc
mov
loopne
sahf
popa
ds
incb
imul
pop
call
out
pop
inc
sub
mov
es
jno
arpl
mov
shll
adc
stos
mov
outsb
dec
rorb
sub
in
jne
cmpsb
cmp
jb
inc
imul
add
mov
test
not
jge
sub
movsb
cmpsl
pop
or
or
fsubrl
cltd
and
daa
cwtl
mov
aam
xchg
js
fs
scas
jle
cmp
mov
jno
mov
divl
xor
leave
data16
es
shrb
rcrb
or
jne
test
sub
lods
cmp
mov
sbb
fsts
cs
mov
mov
in
sbb
add
sbb
jp
into
pop
mov
scas
cmp
inc
sub
hlt
sbb
xor
es
mov
fidivs
push
aaa
insb
dec
push
mov
xchg
iret
movsb
movsb
xchg
adcl
or
push
mov
xchg
ficompl
mov
ret
or
out
push
in
push
dec
jp
xchg
fsubrl
in
cmp
in
dec
mov
adc
jne
pop
xor
out
mov
dec
lods
pop
or
xor
jno
fimull
mov
sub
lods
cmc
or
inc
rol
aas
pop
fsubp
and
movsb
divb
sub
mov
mov
cli
dec
push
clc
fcomps
outsl
scas
jg
jbe
das
lahf
fcompl
std
cld
in
and
and
incl
loop
hlt
ficoml
fstl
sub
xchg
xchg
xchg
dec
mov
aam
inc
add
mov
mov
into
cmpsb
dec
rcrb
fisttpl
cltd
repnz
mov
adc
dec
ret
int
enter
sub
jg
in
cmp
mov
stos
scas
xchg
jmp
popa
mov
or
mov
sub
pop
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
push
jge
inc
push
jle
xor
jle
mov
pop
sub
cmp
and
sarb
addr16
xor
mov
sbb
xor
mov
enter
xchg
ja
in
push
mov
push
jmp
xchg
insb
les
cmc
adc
loope
jae
sub
jne
add
inc
mov
shrl
in
push
pop
xlat
subl
cmpsb
lcall
mov
orl
ret
rcrl
aas
fsubs
sbb
sub
cwtl
inc
sbb
lcall
xlat
addr16
cmp
leave
lahf
ficompl
or
jb
jg
inc
push
jae
add
sti
sub
in
movb
stos
mulb
fimull
aas
jbe
in
fistpll
lcall
inc
inc
in
mov
mov
push
add
sbb
insb
jle
test
cli
leave
popf
jae
dec
xchg
pop
sbb
scas
lds
movsb
fildl
jnp
inc
fidivrl
aas
xlat
push
xchg
fstpt
cmp
sub
pop
jg
mov
aam
jg
add
pop
jmp
mov
mov
xchg
jp
or
sbb
jae
ficoms
mov
dec
xchg
inc
cld
ljmp
outsb
jle
movsb
fimuls
mov
mov
xchg
push
sbb
add
popa
mov
stc
loope
jo
dec
push
mov
fmuls
arpl
jb
lods
mov
sbb
mov
mov
sub
mov
mov
add
mov
sbb
mov
js
stos
rcrl
jmp
adc
inc
adc
mov
call
push
fwait
cmp
into
dec
mov
call
mov
in
dec
xchg
mov
aas
popf
cwtl
and
ja
adc
push
push
cld
xchg
push
xor
dec
xor
jg
pop
daa
out
inc
ret
inc
loop
mov
and
and
fstpl
mov
cmpsb
jg
aad
test
js
shll
popa
stos
xchg
repz
jnp
sub
out
mov
pop
cwtl
dec
test
pop
data16
mov
fucom
aad
into
int3
jecxz
cld
jb
adc
pop
mov
clc
test
or
roll
push
mov
xor
inc
frstor
loopne
xchg
mov
push
or
xor
and
je
cmpb
xlat
and
xchg
xor
jne
mov
ds
mov
test
comiss
push
sub
cmpsb
sbb
and
jbe
mov
stos
fists
mov
fstl
shlb
fisubs
ss
ss
mov
adc
lcall
push
clc
jns
popa
mov
int
mov
mov
cmp
popf
daa
xor
popa
pop
in
adc
inc
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
dec
dec
mov
das
jle,pt
xor
jle
cmpl
popl
hlt
rcrl
fwait
mov
xchg
cmp
je
imul
push
into
xor
mov
call
scas
stos
jmp
lea
push
pop
fsubs
fidivl
aam
je
pop
push
pop
xorb
je
mov
mov
aaa
sub
lret
dec
adc
mov
fisttpll
aas
mov
and
dec
mov
rcrb
or
xor
out
push
add
mov
outsl
mov
incb
inc
jo
mov
and
pop
je
inc
mov
std
in
sub
or
jbe
aaa
js
jnp
fcompl
jne
adc
aaa
leave
dec
stos
sbbb
jne
popa
add
and
jno
arpl
inc
rclb
jl
pop
sbb
loop
jecxz
push
out
cmc
outsl
lret
cmp
les
jb
dec
call
fisubrs
mov
jecxz
push
sahf
ds
push
adc
leave
push
imul
mov
scas
inc
xor
jno
int3
jp
adc
pop
mov
or
mov
mov
xchg
lock
movsb
xchg
popa
daa
mov
sbb
outsb
or
dec
pop
iret
repnz
sbb
js
lahf
mov
into
sahf
mov
xor
adc
xchg
cmc
sub
lcall
mov
xchg
dec
shl
popa
dec
loope
int
pop
insb
aad
ret
jne
mov
xchg
xchg
mov
mov
mov
xor
push
clc
es
insb
mov
jnp
loop
xor
cmovno
mov
std
add
xchg
push
lds
fcmovnu
sti
ret
jo
add
and
ja
fcomi
sahf
sub
xchg
pop
xchg
push
mov
ds
test
mov
sbb
in
insl
push
out
js
add
add
push
out
adc
hlt
cmp
lahf
dec
jns
lock
inc
adc
xchg
ret
add
lret
lahf
ja
dec
or
adcl
xor
cmp
stc
dec
std
jae
sbb
pop
mov
push
ficoms
test
lcall
jl
fwait
xchg
sub
ja
pop
aas
sbb
data16
jne
outsl
jl
rcrb
daa
dec
aad
jns
cmc
push
rolb
fnstcw
gs
cmp
mov
push
es
sub
pop
mov
xchg
call
rcll
les
sub
mov
ret
jecxz
pop
mov
out
xchg
nop
jecxz
or
ficompl
pop
add
imul
repz
lds
xor
mov
mov
insl
xor
mov
cmc
cmp
test
or
scas
xchg
je
mov
sub
dec
lods
cmp
mov
jmp
test
jno
ja
shrb
sub
jle
xor
jle
enter
jns
mov
dec
adc
push
fwait
movsb
mov
cwtl
add
jnp
test
out
in
pop
sbb
pusha
les
dec
rorb
nop
xchg
movsl
fcomi
nop
mov
int
leave
xchg
cmpsl
outsb
push
or
loope
jmp
dec
lock
cld
outsb
add
and
int
pop
mov
hlt
into
or
pop
ja
imul
xor
sbb
pushf
jnp
jl
sbb
inc
xor
adc
push
in
fidivs
out
dec
in
push
inc
andb
test
insb
adc
sarb
addr16
push
jmp
inc
jecxz
sti
sbb
cmp
mov
lcall
je
fdivrs
adc
cmpl
addr16
test
cmp
mov
adc
add
shlb
mov
inc
jne
popa
mul
insb
mov
lods
je
inc
and
mov
mov
insl
mov
aaa
push
mov
inc
pop
in
jl
stos
loopne
cmp
jmp
outsb
dec
and
push
rcll
jns
rcll
xor
cltd
sub
add
push
lds
ret
fdiv
cmp
lea
cmp
inc
jb
mov
int3
stos
sar
or
orb
in
dec
xor
pop
nop
jmp
in
mov
movsb
dec
inc
mov
sbbl
mov
jmp
jnp
int
pusha
push
inc
ss
push
mov
push
rcrl
push
inc
insb
dec
pop
pop
mov
popa
js
cli
sub
aam
inc
imul
rcl
lds
fdivrl
cmp
xchg
cltd
jmp
xor
sbb
xchg
xchg
mov
mov
cmc
arpl
in
inc
scas
das
xchg
push
jge
insb
inc
lcall
into
sub
sbb
sub
jp
or
outsb
push
rolb
lahf
bound
clc
dec
dec
das
and
jae
adc
jo
outsb
cltd
out
push
cli
dec
fsubp
int
dec
jp
stos
insb
pop
iret
iret
sti
adc
int
mov
mov
mov
clc
in
out
add
lret
push
sub
enter
rorl
test
lret
lar
or
xchg
into
popa
ljmp
sbb
push
lahf
inc
push
sub
jnp
xor
jge
or
cmp
cmp
mov
cmpsb
ret
cmp
popa
in
inc
inc
addb
pop
dec
nop
aad
sub
shll
cli
xorl
movsb
outsb
lahf
aaa
or
lods
cwtl
sub
ret
adc
dec
sbb
ds
xor
pusha
psrld
mov
pusha
scas
addr16
lahf
lds
popf
push
fcoml
sbb
push
push
fisttpl
mov
cmp
fcmovnbe
lcall
pop
jle
xchg
add
add
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
jp
sbb
movsl
cmp
xor
jle
cld
jnp
jl
push
xchg
stos
mov
sbb
aad
xchg
fimull
jecxz
lods
jl
xor
into
subl
jno
sbb
dec
jg
push
push
jbe
sub
int
mov
sub
cmp
xchg
dec
test
sarl
mov
xor
cmp
xchg
popf
dec
mov
sub
je
mov
std
lret
cmp
push
out
sbb
lret
out
inc
subb
ret
notl
dec
aas
addr16
dec
add
and
push
lock
leave
inc
mov
fs
mov
fsubrs
test
push
mov
sub
pop
pop
mov
mov
sub
popf
push
fs
fs
sbb
test
mov
jge
pop
mov
xchg
xchg
and
adc
adc
lret
les
das
test
inc
cmp
pushl
pop
push
inc
jg
dec
push
sahf
xor
into
push
outsb
loop,pn
jmp
popa
sti
mov
outsl
daa
sub
cmp
cmp
int
gs
jno
add
les
xabort
push
dec
lock
mov
jg
adc
je
add
js
mov
nop
push
dec
mov
or
xor
jnp
sbb
or
mov
mov
pop
pop
mov
jg
and
xlat
fstps
adc
cmp
xor
add
mov
fidivrs
push
test
mov
mov
jl
lods
iret
sub
das
or
xchg
test
fs
push
xchg
pushf
mov
xor
adc
ljmp
jbe
push
or
and
test
fbstp
sbb
push
and
sub
repnz
std
adc
movups
mov
mov
popa
stos
push
ret
or
adc
inc
insb
fsubrs
pop
jb
xchg
lds
std
sbb
inc
inc
xor
es
adc
push
lea
mov
cld
and
and
rolb
mov
outsb
cmc
lea
mov
aas
iret
ret
sbb
push
stos
scas
jbe
inc
jbe
adc
sbb
test
and
sub
dec
xchg
inc
dec
test
imul
das
cltd
lds
mov
add
sbb
mov
flds
dec
notb
jle
or
test
outsb
arpl
in
in
into
xchg
push
mov
lds
pop
push
pop
shlb
xor
nop
mov
dec
dec
cmpsb
in
mov
fimull
in
test
push
sbb
mov
add
movsb
daa
in
gs
in
add
cmp
add
fidivl
jmp
addb
jo
or
mov
popf
or
data16
pop
stc
adc
js
insl
cmp
sub
mov
lea
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
into
jmp
data16
jle
fistpll
sbb
insl
pop
push
push
mov
xor
cltd
xchg
push
sarb
xor
or
push
test
sbb
dec
out
mov
movb
filds
leave
or
out
mov
outsb
scas
cltd
push
aaa
out
push
in
ret
xor
dec
testl
out
pop
push
sub
mov
movsb
test
pop
sub
lock
clc
addr16
mov
int3
xchg
add
sub
sub
fildl
or
repnz
mov
jb
sbb
or
notb
inc
pop
xor
and
inc
push
and
lds
mov
dec
push
aam
sbb
loope
push
xorb
clc
push
pusha
mov
ds
and
cltd
dec
mov
ret
jmp
mov
jae
adc
dec
jecxz
mov
push
fs
xchg
out
add
add
in
xor
sub
outsl
arpl
rclb
andl
int
out
mov
jmp
test
xor
adc
xor
data16
adc
mov
xlat
dec
rorb
lods
shlb
mov
push
adc
hlt
cmc
movsl
xchg
inc
lret
rorl
mov
fs
jecxz
jp
loopne
insl
fcmovu
mov
dec
dec
shrl
mov
in
test
mov
mov
or
movsb
xchg
push
sahf
aam
loope,pn
mov
fs
mov
leave
xor
add
test
pop
ss
dec
inc
lahf
subl
rcrb
mov
popw
and
nopl
mov
pop
pop
cmp
xchg
push
xchg
pop
int
scas
pop
nop
lds
cmp
ficompl
add
add
fidivs
adc
jp
mov
ljmp
xor
sub
flds
cmp
cmp
sbb
cmp
not
ss
test
lahf
or
inc
pop
push
std
subl
push
xlat
call
aaa
and
ds
sub
adc
lahf
mov
jnp
mov
in
pushl
sub
lods
xchg
inc
push
jp
and
repnz
lcall
add
add
xor
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
push
pop
mov
jle
jg
inc
sub
push
or
xor
jbe
cmp
es
mov
cmpsb
in
aaa
pop
leave
mov
out
popf
jecxz
jg
xchg
push
sub
shl
mov
mov
xor
sahf
sidtl
pop
ja
inc
mov
adc
or
popf
das
cmp
xchg
push
popf
int3
mov
out
scas
aas
cmpsb
outsb
jmp
push
bound
xor
cltd
inc
punpckhwd
mov
mov
sti
sub
lcall
into
jnp
fdivl
in
cmpsl
mov
jg
outsl
jle
pushf
loopne
scas
in
jne
sub
inc
mov
cltd
add
adc
ss
mov
pop
jecxz
inc
or
dec
cmovns
or
mov
or
gs
shl
mov
pop
cmp
fdivrs
int
scas
push
lods
dec
jne
xor
test
inc
movsl
pop
jns
movsb
es
nop
pop
jmp
dec
add
jge
stos
xor
inc
and
idiv
cmpsl
jmp
popf
je
pop
jb
sub
adc
in
aam
test
xchg
stc
ret
fdiv
pusha
mov
ds
scas
push
movsl
data16
push
fsts
idivl
into
andb
jae
jmp
mov
xor
push
fs
hlt
stc
jl
sbb
pop
icebp
ss
out
sbb
pop
sbb
out
mov
push
std
sti
adc
pop
add
mov
push
jne
inc
stos
xor
cmpsb
jne
es
sti
ljmp
bound
push
push
inc
jo
in
scas
mov
int3
fldcw
pop
das
out
inc
rorl
jg
jbe
lcall
xor
mov
imul
push
ljmp
outsb
popa
lods
repnz
fwait
bound
sub
push
sbb
push
insl
jnp
pop
push
in
jecxz
sub
lods
sarl
jno
push
jbe
jg
sbb
mov
jb
mov
pop
jmp
lcall
dec
ret
rolb
bound
xchg
xor
pop
push
pop
pop
and
movsl
call
scas
or
mov
cmpsl
sub
inc
adc
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
adc
xchg
movsb
sarb
jge
jle
or
xor
test
jb
xchg
scas
pop
and
mov
loope
addr16
into
mov
mov
and
mov
sti
test
mov
xchg
filds
pusha
loopne
repnz
test
dec
arpl
pop
cli
lret
into
push
ljmp
mov
pop
pop
sarl
mov
sub
xchg
xor
imul
jmp
cmp
sbb
adc
cli
imul
aas
sub
lahf
sub
push
push
push
mov
ds
jge
test
insb
jge
mov
loopne
cld
add
sbb
dec
insl
popf
call
mov
scas
add
lret
fcoms
jl
pop
mov
dec
jecxz
ja
push
adc
or
or
lock
es
dec
test
cmp
xchg
pop
out
loop
fsubl
push
mov
xlat
movsl
out
mov
push
insb
add
gs
cs
jp
mov
pop
int3
mov
push
push
mov
jecxz
jg
cmp
push
fst
out
rorl
xchg
dec
xchg
pop
xchg
out
jno
dec
jbe
out
push
mov
xchg
cwtl
repz
cmc
pop
repz
push
pop
pop
ret
jle
dec
insb
jmp
push
push
insl
mov
cmpsb
icebp
insl
add
xchg
add
fmuls
imul
dec
out
inc
adc
daa
lcall
inc
sbb
adc
sbb
inc
lret
outsl
adc
mov
inc
cmp
cmp
scas
sarb
push
pusha
cwtl
repz
jo
cmp
gs
and
lret
dec
dec
fwait
data16
push
jmp
movsb
xor
jne
in
scas
inc
or
dec
les
lret
mov
dec
test
sbb
adc
repnz
lock
xor
lret
adcl
mov
push
xor
push
xor
mov
lea
or
jg
fdivs
ljmp
les
xchg
les
or
outsb
adc
push
push
insb
adc
stc
mov
imul
call
pop
dec
lahf
lea
xor
push
inc
pop
data16
sbb
arpl
and
test
add
jae
push
aas
dec
sub
mull
xchg
push
pop
mov
sub
out
out
push
add
sarl
mov
insb
fsts
scas
pop
nop
mov
in
xchg
roll
sub
shll
loopne
xchg
in
jp
xor
fs
jne
mov
bound
int3
fldcw
cmp
inc
adc
mov
mov
cmp
cltd
cmp
cmp
xchg
sbb
cli
mov
sti
je
push
mov
xor
mov
sbb
inc
add
mov
comiss
push
mov
lcall
js
dec
adc
adc
sub
dec
cld
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
pushf
adcl
jle
jbe
andl
ss
and
aad
push
pop
incb
int3
push
int3
xlat
cli
lea
and
shll
neg
inc
mov
inc
mov
mov
fsubr
jl
clc
jne
add
in
in
fmull
mov
andl
sub
mov
loop
into
jno
push
insl
sub
mov
xor
xlat
div
push
cmc
jb
add
jp
icebp
mov
mov
mov
cmp
ja
jg
js
enter
xchg
mov
mov
ret
arpl
rcr
xchg
int
sbb
and
dec
out
popf
arpl
xorl
mov
inc
negl
pop
xchg
fwait
lods
repz
into
bound
aas
mov
inc
push
insl
xor
pop
shl
xor
data16
cmp
clc
test
mov
addr16
jb
mov
xchg
push
out
mov
dec
out
or
faddl
je
add
pop
cmpsb
xor
xchg
out
cmp
jecxz
fsubrp
js
addl
xchg
lret
jo
out
inc
pop
pop
fnsave
call
cli
ja
aam
imul
icebp
insl
push
shlb
in
test
cmpsb
push
xchg
push
scas
ljmp
cmp
cmp
dec
dec
mov
nop
sahf
shrl
mov
push
xlat
pop
jns
in
flds
jb
jo
int3
insl
lods
test
lods
jne
jp
enter
cltd
adc
dec
cmpsb
push
aas
cmpsb
sub
dec
add
or
loopne
clc
insb
sbb
or
push
movsb
push
fstpt
mov
xchg
movsb
mov
mov
popf
jge
push
in
push
mov
push
cmp
mov
add
fmuls
jbe
cmpl
fs
xlat
mov
inc
jl
jae
fs
push
mov
adcl
stos
xchg
and
cwtl
mov
in
mov
leave
lret
sub
mov
sti
sti
test
in
adc
mov
xchg
mov
je
mov
ret
mov
jp
pusha
cmp
aad
test
push
ljmp
je
in
adc
sbb
cs
pop
xchg
fidivrs
mov
push
sbb
scas
adc
call
dec
sbb
movsb
ljmp
fwait
or
push
mov
in
jecxz
std
mov
push
inc
dec
mov
cmpsb
jmp
push
push
mov
push
jmp
out
sbb
ds
aaa
cmp
es
mov
mov
mov
adc
fidivs
lods
pop
sub
into
rclb
in
jmp
out
or
add
notb
sub
arpl
in
xor
orl
fistps
add
dec
mov
mov
stc
mov
inc
push
mov
pop
fnstcw
fwait
cmp
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
sub
jo
lret
jle
and
jle
testl
xchg
cmp
test
cld
int
gs
lods
and
mov
into
push
xchg
in
adc
mov
outsb
jmp
dec
xchg
das
push
xchg
int
cmp
int3
push
bndstx
or
in
insl
bound
pop
fistps
push
push
mov
pop
loop
std
xchg
and
and
scas
jg
mov
mov
mov
cmp
leave
fisttpl
mov
outsl
cs
lahf
in
add
fadd
mov
ljmp
sbbb
rorb
or
test
or
fsts
popl
inc
das
lcall
rolb
dec
out
sbb
rcrb
mov
mov
mov
ljmp
fdivl
fiaddl
mov
dec
ret
in
mov
insb
inc
ja
shl
pop
jne
mov
notl
pushf
adc
dec
xchg
mov
aas
adc
mov
loope
xchg
pop
dec
mov
ret
fidivrl
lret
je
xor
lcall
stos
gs
mov
inc
mov
test
sub
les
data16
mov
xor
mov
arpl
movsl
adc
mov
fs
repnz
ds
and
ret
jmp
popa
into
mov
inc
inc
cld
cmc
std
mov
rcll
pop
in
rcll
xchg
fsubr
in
shlb
and
mov
xchg
dec
call
loop
sbb
stos
insl
fcmovnu
sbb
fstpl
add
sbb
dec
adc
je
xchg
lds
pop
pusha
push
int3
mov
and
dec
jl
or
inc
or
xchg
xchg
adc
add
test
mov
in
dec
jp
lcall
cmpsb
xchg
dec
xor
popa
inc
pusha
addr16
add
sub
rolb
mov
inc
mov
movsb
jl
push
mov
sbb
jnp
inc
fcomps
in
cmpsl
sub
xchg
dec
xor
aas
movsl
fsubr
push
push
pop
dec
inc
andl
sub
pop
dec
xor
xor
cmp
fidivrs
mov
cltd
push
lock
lock
and
pop
mov
xor
je
mov
add
mov
dec
push
lret
cmp
int
lcall
mov
push
cmp
sbb
repz
adc
push
push
lds
clc
jae
outsl
enter
lods
mov
mov
jo
test
loope
mov
mov
cmc
lahf
rcl
xor
jb
add
ds
adc
cmp
dec
push
push
fmuls
mov
mov
mov
jae
icebp
xor
aas
sahf
clc
sbb
outsb
cli
das
push
fisubrl
mov
inc
and
mov
idivl
jne
mov
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
mov
shrl
in
jle
cmc
or
xor
cmc
lret
add
aam
int3
scas
mov
aaa
cmp
xlat
adc
test
aad
dec
cwtl
mov
xchg
dec
imul
lods
cli
inc
sbb
adc
xchg
jbe
fsts
stos
and
adc
jns
psllq
cli
stos
sub
pop
sbb
push
push
xor
dec
aam
pop
dec
mov
bound
je
mov
xor
pop
mov
jp
or
xor
mov
dec
and
mov
lods
jle
pop
leave
popa
push
sahf
mov
aad
out
addb
mov
jmp
or
lcall
addr16
int
ja
andb
data16
pusha
dec
push
cmp
movsb
mov
dec
and
adc
lret
popa
daa
insb
pop
iret
test
fucom
rorl
jno
cmp
fdivl
push
in
dec
in
popa
test
lret
lahf
ds
out
ficoms
inc
mov
stc
loope
add
imul
jns
scas
ljmp
les
pop
inc
ja
cmp
and
mov
mov
cld
imul
out
test
adc
andb
push
and
inc
jg
pop
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
dec
nop
xlat
jle
in
jle
xor
enter
jb
ficomps
jp
aad
mov
cmp
or
outsb
mov
mov
cwtl
rol
scas
dec
insb
adc
cmpsb
js
sbb
sahf
or
add
jle
sub
mov
and
mov
push
jmp
in
add
dec
lods
icebp
mov
xchg
xchg
push
sbbb
pusha
dec
dec
sbb
jns
xchg
rorb
in
sahf
xchg
lods
subl
xchg
xchg
popf
push
mov
mov
mov
or
sbb
sub
aas
jmp
inc
fcmove
test
mov
dec
dec
out
mov
and
or
les
cmpsl
fstps
jmp
scas
lret
pop
mov
inc
cld
ss
dec
adc
cmpsb
and
and
or
out
xchg
pop
jo
add
dec
push
sbb
loope
jg
fsub
sub
adc
and
rolb
mov
fdivs
mov
call
adc
nop
rorb
mov
div
xor
ficomps
imul
stc
and
subl
xchg
or
jbe
sub
clc
jecxz
and
dec
shlb
mov
rcrb
insb
push
inc
pop
rclb
lret
cld
jle
in
xor
roll
jo
add
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
stc
mov
lds
insl
jmp
or
add
imul
pop
fwait
in
push
pop
adc
out
jbe
jno
jle
outsl
mov
adc
lds
imul
jno
fs
cmp
mov
and
mov
stc
loopne
cmpsb
pusha
loop
and
fdiv
mov
mov
push
ret
mov
stc
inc
lods
hlt
sub
sbbl
jge
push
and
add
pop
out
add
idivl
movsl
add
xchg
sub
push
pop
add
cmpsl
inc
imulb
push
nop
ljmp
lahf
jno
mov
cmp
hlt
iret
fisubl
mov
fnsave
ret
jae,pt
push
push
sub
out
mov
pop
mov
add
mov
ret
out
andb
pop
mov
sarb
les
jns
dec
or
ret
adc
mov
movl
stc
pop
cs
mov
pop
out
out
or
shll
push
in
repnz
rcrb
mov
jecxz
imul
jae
gs
out
dec
xor
and
sbb
iret
stos
lret
stos
les
jbe
mov
inc
mov
push
nop
out
sahf
sub
loop
mov
cld
ds
cmp
imul
aam
and
test
add
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
stos
jle
dec
in
sarb
in
jle
mov
push
aaa
cld
fidivrs
push
lret
scas
dec
push
imull
ja,pt
inc
leave
jno
gs
cmp
add
xlat
out
int
test
jecxz
ret
stos
jns
mov
mov
push
loopne
inc
test
in
xorl
in
movsl
or
clc
inc
cld
pop
sbb
cli
xchg
push
fmull
jb
rcr
cmc
pop
cmp
xor
or
enter
xchg
mov
insl
popl
enter
and
jne
fistpll
or
cmp
stos
sbbb
push
jp
out
mov
and
sub
jno
out
xchg
jo
std
cld
dec
add
fwait
pop
insb
cmp
push
mov
fstpl
mov
xchg
imul
xor
mov
lahf
and
shrl
sbb
xor
or
xchg
xorb
add
inc
lock
mov
mov
dec
pop
and
imul
sub
lret
les
je
pop
inc
mov
xor
test
orb
test
insl
imul
lods
jmp
cmpsb
sub
enter
lds
jl
into
scas
sbb
mov
idivb
rol
sti
vmulpd
sahf
aaa
cmp
inc
and
xor
add
jmp
adc
test
or
sarl
in
jle
mov
lea
mov
leave
push
dec
nop
sbb
std
test
lahf
push
outsl
ss
es
mov
leave
and
test
pop
sarb
mov
push
cmp
jge
push
fs
lret
addl
add
mov
test
lock
out
jmp
and
dec
sub
outsl
ljmp
lods
pop
dec
cmpl
ret
shl
jne
pop
dec
repnz
inc
dec
cs
mov
cmp
inc
cmc
out
and
add
push
iret
pop
sbb
push
jmp
out
sti
cltd
dec
cmp
inc
mov
and
cmp
pop
testl
pop
scas
int3
add
xor
dec
add
xchg
int
es
jo
arpl
gs
xchg
or
dec
iret
lds
out
dec
std
pop
jne
cmp
add
fnsave
into
xchg
in
in
mov
mov
pop
or
xor
bound
or
dec
out
int3
lea
cmp
and
aam
and
test
icebp
fstp
adc
push
into
mov
mov
dec
xchg
and
jno
adcl
jl
add
push
xchg
es
outsl
inc
pop
push
ljmp
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
mov
cmp
jle
in
jle
movsb
cmp
lds
push
cmp
sbb
nop
movl
adc
das
int
inc
xchg
fldt
mov
bound
dec
mov
cmc
lods
sub
enter
xor
je
shrl
ret
sti
add
popf
decl
subb
xchg
push
jl
jne
add
pop
mov
xchg
mov
xorl
push
xchg
pop
sub
icebp
lds
mov
push
jo
sub
outsl
mov
movsb
pop
xchg
jp
cmp
rclb
fstl
pusha
sahf
push
mov
in
mov
stos
sub
inc
repnz
cmpb
add
sub
jg
push
adc
push
mov
mov
cltd
fdivrs
mulb
pop
inc
xchg
push
xor
je
fldcw
cmpsl
ficoms
pop
dec
add
pop
fiaddl
xor
inc
call
xchg
aad
not
xchg
add
sarb
mov
mov
push
insl
jp
xor
cmp
xor
xchg
push
aam
mov
popf
sti
popa
inc
lods
mov
mov
cmp
test
add
jmp
fwait
clc
mov
and
imul
mov
push
repz
dec
aam
fcoms
push
pop
in
ficomps
cmp
xor
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
loope
sbb
jle
in
jle
das
rorb
push
cmpsb
pop
jno
mov
jns
cmpsb
pop
repz
mov
jae
and
ja
add
stos
and
sqrtps
pusha
leave
inc
adc
xor
mov
push
inc
cmp
std
fmuls
orl
daa
add
mov
jmp
jecxz
xor
pop
dec
xchg
jl
fwait
xchg
add
sub
ret
in
and
mov
cmp
sub
lahf
xchg
adc
xchg
das
jnp
xchg
and
pop
mov
cs
popa
nop
mov
or
dec
sub
je
jae
test
fdivrp
jbe
fdivl
mov
inc
shl
and
mov
mov
sbb
in
out
xlat
adcl
jle
pop
mov
mov
dec
rorb
fdivrs
sbb
and
sub
push
jle
out
out
ficoml
sbb
aas
sub
js
sahf
inc
sbb
inc
mov
adc
xchg
sub
inc
mov
pop
dec
mov
pop
aas
xor
fwait
jno
fsts
jmp
movsl
pop
hlt
divl
sub
fmuls
push
cmp
xchg
loopne
mov
in
xchg
inc
or
inc
adc
pushf
add
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
jmp
fdivrl
in
jle
cs
test
lock
jecxz
xor
cli
and
or
fistps
add
cmp
fwait
in
mov
or
mov
pusha
xchg
add
enter
sub
sub
mov
pop
pop
xor
or
push
ss
xchg
insb
rolb
out
cltd
test
stos
sbb
fwait
cmc
test
call
sahf
dec
mov
ret
pop
repnz
xchg
cmp
test
aaa
cmc
jg
mov
lahf
mov
int
mov
mov
sub
rcrb
repz
pop
mov
dec
popf
call
shrl
nop
pop
stc
subb
mov
jl
push
je
stos
iret
mov
mov
enter
pop
jge
adc
imul
jp
xorl
or
ss
mov
addb
jge
lds
cmpsl
mov
mov
fucom
daa
pop
popl
rorl
or
test
dec
dec
arpl
mov
fwait
mov
sub
fstps
xchg
shr
es
mov
xchg
lods
xor
stos
add
ljmp
sub
mov
jne
pop
jmp
jmp
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
dec
int
mov
add
int
xorb
xor
pushl
mov
xor
ret
jnp
sub
lods
pop
sbb
xchg
cmp
push
std
ja
inc
inc
jecxz
les
subb
cmp
mov
inc
mov
push
inc
inc
push
sub
es
fdivp
fwait
sbb
in
sbb
in
push
xorl
lods
jl
or
and
add
es
pop
cmpsb
mov
cmp
lods
push
test
sbb
xchg
stos
in
jmp
cmp
jg
xchg
push
mov
jl
add
xchg
imull
fidivl
sub
hlt
xchg
add
outsb
inc
and
frstor
ret
inc
dec
test
xchg
push
mov
or
mov
mov
cli
mov
aaa
and
std
dec
or
xchg
ret
xchg
add
adc
shrb
cltd
dec
repz
lret
push
mov
std
dec
shlb
and
ss
clc
sahf
ja
lret
mov
mov
out
mov
xchg
xchg
mov
scas
pop
xchg
pop
scas
shlb
push
cli
sbb
inc
gs
inc
movsb
fs
push
push
cmp
out
inc
pop
mov
enter
test
lcall
call
in
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
nop
idivl
pusha
fidivrl
jp
jle
lods
mov
sub
ret
pop
imul
sbb
xchg
lahf
rcl
test
push
jno
cwtl
pop
popa
pop
or
mov
dec
push
adc
adc
lahf
inc
mov
sbb
cmp
pop
lret
je
cltd
iret
lods
hlt
mov
jecxz
pop
mov
and
push
inc
lahf
test
push
fdivs
shll
mov
out
dec
rcll
dec
push
lods
jnp
xor
push
add
or
or
inc
mov
cmc
outsl
out
aas
mov
test
pop
jns
dec
push
xchg
mov
sub
in
pop
iret
ror
arpl
pop
clc
pop
and
aad
cmpsl
cmpsb
aam
xchg
push
imulb
ljmp
data16
adcb
ss
imulb
gs
sbb
dec
movl
dec
cmp
bound
add
pop
in
data16
dec
mov
or
mov
pop
mov
cld
popf
cld
add
or
xchg
mov
sub
imul
ja
call
mov
mov
pop
aad
dec
xchg
cmpsb
adc
xlat
in
ss
aad
std
cs
sbb
ja
jne
pop
outsl
inc
iret
cmp
ss
cli
rolb
mov
out
lods
addr16
cmp
mov
ret
test
mov
add
rcrb
or
out
sahf
cmc
cmc
add
mov
dec
sbbl
push
add
out
inc
mov
and
inc
xchg
aaa
popl
pop
push
stc
lret
incb
push
mov
xor
cwtl
add
push
out
dec
pop
adc
xor
rcrb
lea
repz
aas
pop
inc
sub
cmp
lods
out
adc
mov
inc
fstp
cld
fldt
fstp
xor
xchg
lock
dec
pop
mov
in
jns
mov
add
sbb
insl
mov
sub
mov
and
and
or
mov
push
jnp
lcall
out
jecxz
shrl
lretw
shrb
pop
cs
mov
pop
test
dec
out
and
or
insl
or
mov
sub
jmp
into
pop
and
adc
push
daa
ds
pusha
adc
add
dec
iret
shrl
jns
dec
cmp
or
sbb
out
stos
mov
xchg
in
lret
and
div
incb
jbe
in
addr16
xchg
pop
jg
daa
cmp
cmpsl
inc
cmpsb
shl
sbb
aam
jle
popa
adc
js
into
mov
push
lods
and
sti
sub
testb
xor
call
dec
pop
aam
mov
cltd
pusha
ja
mov
sbb
xchg
lock
jns
addr16
inc
in
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
or
jle
jge
jle
dec
subb
cmp
jge
stos
jge
xor
lods
call
adc
inc
sub
add
into
mov
dec
decl
test
xor
rcll
inc
adc
loopne
mov
cmpsl
popf
mov
mov
and
dec
jns
js
push
inc
inc
aad
cli
mov
jp
nop
and
inc
les
xchg
into
push
jp
add
jb
repnz
pop
cmc
sub
pop
mov
mov
loop
ret
repz
nop
in
out
enter
add
outsb
xor
addr16
jns
cmpsb
les
dec
inc
mov
mov
pop
inc
add
adc
loopne
sub
rcrb
insb
push
cmp
push
push
mov
loop
mov
shlb
cmp
xchg
mov
mov
and
aad
jle
sbb
xchg
leave
adc
inc
pop
bound
in
mov
adc
test
dec
push
mov
imul
xchg
push
roll
jge
movsb
repnz
test
and
inc
add
mov
in
and
mov
adc
test
cmp
sub
jnp
out
xor
and
fs
outsb
repz
cs
mov
daa
add
scas
xlat
or
push
push
aaa
ds
lods
jecxz
fwait
loope
out
push
push
xchg
or
and
dec
cmc
jmp
cltd
stos
pop
popf
xchg
loopne
ds
imul
mov
cmp
fcompl
pop
add
pop
sbb
inc
lea
push
scas
and
or
sbb
jl
xor
in
xor
aas
cmp
dec
jl
xchg
add
sub
xchg
aaa
xchg
xor
test
jnp
inc
jle
jge
xchg
add
jg
lock
push
std
iret
pop
add
loope
inc
dec
jecxz
pop
jo
xchg
xor
test
inc
dec
adc
cmp
sub
adc
jno
jmp
mov
call
sbb
and
mov
or
sbb
mov
cmpsl
flds
fwait
push
repnz
push
mov
xchg
pop
scas
aad
mov
jne
mov
dec
jg
lock
or
in
ljmp
into
ss
test
push
dec
test
push
sbb
jecxz
ds
int3
outsl
cmpl
jmp
push
push
fcoms
in
adc
gs
icebp
xchg
cmpsb
xchg
aas
mov
adc
mov
clc
xlat
fs
push
mov
or
inc
mov
sub
or
outsb
xor
std
sbb
push
dec
inc
insb
xchg
das
dec
xchg
rorb
mov
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
jle
jp
jle
dec
push
aad
jmp
mov
nop
add
cli
or
ret
lret
in
loop
mov
imul
adc
jbe
adc
pop
cmp
xchg
rol
sbb
dec
dec
xchg
into
mov
mov
mov
aam
inc
leave
pusha
mov
adc
jg
insb
les
inc
adc
les
lret
dec
mov
pop
fwait
mov
test
cltd
mov
mov
sbb
push
gs
sahf
push
movb
mov
sub
lret
and
out
int3
jmp
sub
cmp
sub
movsl
fwait
add
inc
push
pop
inc
pop
pop
fadds
cmp
int3
push
add
mov
jae
leave
push
dec
and
js
icebp
in
mov
cmp
out
leave
scas
push
jno
dec
mov
mov
addb
in
fiaddl
push
mov
fs
mov
outsb
sarb
cmp
pop
jbe
cltd
std
cmp
aas
adc
out
dec
and
add
xor
pop
xchg
rolb
dec
gs
jo
pop
sbbb
jo
cmp
sbb
xchg
add
addr16
adc
dec
pop
adc
pop
pop
mov
push
lahf
aas
fwait
add
jns
push
jmp
mov
cmp
stos
dec
dec
xchg
sahf
stc
mov
mov
mov
push
arpl
jg
lds
mov
sysret
xorl
insl
jge
not
mov
outsl
xor
pusha
movsb
adc
and
test
orb
push
sbb
outsb
inc
and
mov
lock
jnp
or
scas
sti
push
push
and
orl
cmpw
cwtl
lods
adc
mov
push
push
xchg
mov
dec
js
out
shl
add
push
lcall
loop
push
dec
push
mov
pop
mulb
add
pop
sub
lahf
popa
pop
cmc
mov
mov
ljmp
repnz
adc
shr
imul
add
popa
add
mov
xchg
pop
xor
dec
test
push
jp
inc
repz
shl
fscale
sub
mov
mov
outsb
seto
pop
neg
test
popf
jno
ds
stc
push
or
gs
sub
mov
daa
mulb
sub
repnz
jp
xor
jns
mov
lret
mov
aas
sbb
adc
inc
sub
sub
push
jb
pop
idivb
jge
and
jns
cli
pop
nop
ret
add
lret
xchg
mov
xlat
jbe
xchg
add
mov
jbe
ret
outsl
and
jmp
push
add
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
jmp
jecxz
jle
jge
jle
ja
xor
and
sbbb
mov
int
fidivs
adc
fs
xchg
or
daa
sbb
popf
sbb
dec
ljmp
mov
leave
sub
scas
add
icebp
fistpl
push
dec
dec
mov
cmp
test
mov
mov
test
pop
sub
int
mov
das
xchg
jae
hlt
adc
mov
mov
push
mov
das
push
mov
enter
mov
push
cwtl
jnp
adc
out
fldt
ja
out
sbb
xor
int3
sub
jnp
sub
xchg
or
or
sahf
jg
inc
adc
outsl
xor
cli
cltd
in
mov
pop
jmp
ljmp
dec
ja
xchg
loopne
jo
cmpsb
fcmovnb
mov
sti
enter
mov
mov
dec
pmaddwd
adc
test
filds
test
roll
xchg
mov
aas
shll
mov
mov
dec
mov
rolb
cmc
inc
or
fcmovu
int3
pop
push
dec
jo
stos
bound
int3
daa
orb
out
int3
push
pop
or
fisttps
sub
repnz
int
ljmp
dec
rolb
out
push
repnz
add
jne
cld
jecxz,pt
mov
leave
push
ret
inc
inc
test
fcoms
sub
mov
jne
repz
push
std
xchg
sahf
in
cmp
xor
add
negl
aam
pop
insb
dec
pop
pop
or
fs
je
test
add
test
or
xchg
aam
cmp
xor
nop
mov
daa
dec
jecxz
cld
scas
pop
rclb
jo
mov
dec
test
cmp
or
mov
outsl
movl
stc
dec
shrl
pop
adc
lret
pushl
push
add
jmp
or
mov
lret
cmp
sub
fdivrs
or
nop
push
push
aam
call
hlt
movl
or
or
lods
inc
rep
fildl
hlt
leave
mov
cwtl
scas
enter
mov
or
add
fdivl
cltd
dec
push
push
in
lret
nop
add
cmpsl
imul
and
pop
mov
jo
lret
mov
pop
loope
movb
andl
xor
add
sti
mov
pop
mov
fnstcw
imull
pushf
xor
stc
pop
imul
inc
mov
xor
add
mov
mov
mov
jmp
enter
enter
sbb
mull
lods
les
jo
jle
jp
jle
sbb
xorb
mov
cmp
and
imul
repz
cli
pop
repz
lods
mov
enter
pop
sbb
test
push
jb
hlt
mov
pop
loope
mov
test
xor
ljmp
dec
xchg
xchg
mov
and
jge
or
outsb
adc
sub
xchg
sbb
mov
das
insl
out
add
into
adcb
and
lahf
incl
cmpsb
or
mov
and
out
jl
sbb
ficoms
jg
pop
sahf
dec
and
pushf
pusha
mov
add
and
inc
mov
push
and
mov
lods
push
and
xor
inc
ljmp
xchg
and
aad
fcoms
scas
push
repnz
cmp
out
imul
shlb
xor
cmp
pushf
or
jb
mov
lret
bound
aad
ret
je
pushf
push
std
cmp
push
cld
add
std
dec
movsl
jns
mov
and
mov
insb
fs
inc
jb
dec
pop
outsl
xchg
mov
add
xchg
jb
mov
mov
push
mov
in
push
jns
inc
mov
ficoml
cmpl
std
fistpll
scas
push
sbbb
sub
adc
sub
xchg
sub
push
lds
xchg
mov
sahf
jge
xchg
lods
and
add
and
mov
into
sbb
filds
ja
imul
push
add
push
js
inc
cmpsl
int
cmp
test
jns
mov
xlat
xor
in
mov
ror
popa
and
popa
mov
mov
adc
pop
sbb
int3
pop
jl
in
shrb
into
jmp
pop
inc
insl
push
outsl
jle
inc
add
inc
fimuls
add
aaa
inc
sbb
addl
rcll
mov
jb
pop
mov
cli
mov
cmc
scas
xchg
sub
pop
xor
pop
enter
mov
adc
imul
fisttps
jmp
xorb
aaa
pop
fisubrl
pop
sbb
jmp
sarl
sbb
sub
movsl
add
add
push
int
inc
sub
rcrb
cmp
sub
adc
in
mov
out
loopne
push
push
fwait
fs
sub
xor
pop
stos
mov
insl
int3
ret
cmp
sub
sub
jo
sub
pop
jp
pop
aad
cs
xor
inc
outsl
mov
ss
test
lahf
sub
lds
jno
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
pop
jp
push
jl
jle
jp
jle
sub
mov
imulb
jb
mov
aad
adc
aam
mov
sbb
dec
aas
fsubs
fists
or
leave
cltd
incb
push
mov
into
mov
dec
sbb
ret
mov
xchg
adc
rcll
aad
cmp
mov
mov
sahf
push
imul
aad
xchg
fcmovu
sub
dec
ret
pop
pushf
pop
inc
mov
ds
call
leave
dec
mulb
rep
pusha
jne
ljmp
or
add
lock
inc
pop
adc
lcall
inc
or
out
lcall
cltd
pop
xchg
imul
out
lock
cmp
aam
scas
imul
jo
mov
adc
xbegin
mov
inc
add
into
mov
pop
pop
mov
imulb
rclb
mov
mov
jb
or
int
stc
fstps
xchg
dec
cmp
pop
fwait
das
sbb
daa
mov
call
add
ss
aad
sub
stc
testl
test
push
mov
mov
aas
rol
cli
ficoml
inc
aaa
scas
dec
lahf
lods
or
mov
ljmp
in
and
sbb
pushf
mov
adc
inc
or
and
xor
push
mov
mov
pop
xor
pop
pop
leave
adc
xlat
test
in
jg
sub
jbe
les
fidivs
sbb
enter
jmp
jge
sub
sub
mov
lret
andl
rcrl
push
testl
pop
push
lea
sub
bound
sti
frstors
ljmp
int3
mov
cmp
inc
pop
iret
xor
pop
jecxz
cmc
mov
popa
mov
pop
mov
or
popf
in
sbb
dec
pop
out
xor
push
out
jb
sub
and
insl
inc
xchg
aad
push
icebp
jno
jno
cltd
insl
cmp
mov
out
pop
lock
repz
les
pop
inc
xor
call
sbb
sub
outsb
cmp
pop
repnz
test
ret
int
cmpsb
inc
xchg
push
jns
les
test
test
mov
std
push
jbe
vmovsd
mov
cltd
fnstsw
sub
cmp
inc
repz
mov
out
xor
add
inc
clc
jbe
shll
push
popl
sub
scas
pop
fdivr
je
fistpll
cmp
decl
mov
dec
bsf
iret
ret
pushf
adc
out
inc
int
cmp
mov
lods
xor
ljmp
stc
and
push
push
out
xchg
jp
imul
add
in
notb
sub
mov
clc
js
jle
jp
jle
and
inc
jp
mov
mov
pop
xchg
cli
mov
icebp
or
pop
dec
pop
enter
or
ficoml
enter
imul
imul
cld
fsubrp
dec
mov
cmc
jns
mov
ret
ss
mov
add
mov
cmp
data16
out
iret
push
inc
test
dec
mov
mov
mov
push
jo
mov
or
ja
in
add
mov
or
pop
add
std
add
or
in
cld
ds
adc
or
pusha
jmp
daa
cmp
lret
sbb
mov
and
pop
pop
adc
jle
loop
out
lds
cld
pusha
push
jmp
pushf
into
cmp
xchg
sbb
push
lcall
mov
push
adc
fldt
mov
pop
mov
popf
sbb
fmul
ss
mov
xor
dec
or
test
xor
push
inc
fldt
cmc
xchg
das
jo
iret
add
add
rorl
mov
jnp
stos
push
movsl
cmc
jmp
push
ror
inc
cld
pop
or
sbb
jbe
mov
lret
pop
arpl
mov
jo
xorl
xchg
and
inc
sbb
inc
mov
mov
stos
or
insb
cmc
jp
adc
ja
add
scas
into
out
aam
and
out
or
insb
dec
fisubrs
rep
pop
sarb
cwtl
lds
cs
add
jmp
jmp
sub
push
ja
in
add
addr16
sahf
fisttpl
push
gs
inc
pop
scas
into
outsb
test
push
shrl
fiadds
adc
popa
lods
or
out
ja
notl
push
jb
jbe
adc
push
popa
xchg
push
inc
pushf
jae
mov
xor
iret
dec
ret
mov
sbb
insb
inc
sub
jnp
popf
outsb
add
cli
xchg
into
mov
test
hlt
jns,pt
pop
pop
xchg
xchg
cs
push
gs
cli
aad
push
jle
jle
outsb
and
cs
nop
xchg
inc
inc
push
fidivrl
mov
out
xchg
xor
aas
push
stos
xlat
test
popl
out
or
mov
loope
popa
mov
push
adc
into
shlb
pop
mov
push
dec
test
inc
idivl
or
es
aaa
stc
nop
add
xchg
fbld
mov
add
cwtl
mov
inc
popa
lret
mov
adc
dec
in
mov
testb
jg
push
aas
add
test
cmp
in
cli
pop
cmp
je
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
arpl
sub
jle
jp
jle
lods
test
daa
ret
lea
jl
leave
add
adc
das
hlt
cwtl
pop
test
call
jae
dec
pop
lcall
sbb
pop
mov
mov
jge
jne
fildl
pop
nop
or
cmp
mov
mov
xchg
aaa
out
sbb
stc
dec
lods
add
add
int
rcl
stos
pop
ljmp
add
xchg
shl
in
repnz
mov
inc
inc
or
cmp
pop
cld
adc
lcall
mov
xchg
ret
jmp
loope
adc
lahf
jnp
jmp
cmpsb
add
adc
push
test
imul
and
bnd
jae
sbb
dec
jb
fdivrl
lods
in
adc
imul
imull
cmp
pushf
pop
jg
jns
mov
stos
mov
repz
orb
fucomip
xchg
movq
mov
adc
shlb
imul
loope
enter
xor
imul
dec
gs
insl
rorb
jmp
ds
movsl
sbb
aad
in
sub
mov
xor
xlat
popa
mov
pop
cld
fiaddl
inc
jl
inc
lds
mov
pop
hlt
ss
mov
push
adc
mov
insb
mov
dec
jp
push
pop
jl
xlat
sbb
into
xor
adc
sbb
add
repnz
mov
in
fwait
mov
enter
imul
jb
mov
cltd
out
mov
movsl
negl
popa
mov
fs
jle
sub
jb
fldt
sub
mov
add
pop
ret
cmp
les
mov
pop
cmp
cli
jle
pushl
in
rcl
insl
or
pop
cmc
jns
loop
sbb
inc
add
sahf
mov
hlt
adc
iret
les
das
jecxz
sar
push
and
xor
lods
push
stos
pop
pop
inc
gs
xchg
cs
xchg
jns
mov
fidivrl
push
adcl
test
ret
sbb
pop
mov
dec
push
push
iret
fistpl
sub
xchg
push
jae
out
ficompl
adc
mov
test
in
lcall
mov
sub
mov
mov
mov
jecxz
jo
and
fidivs
addb
add
pop
push
pop
pop
sbb
cmp
push
inc
add
insb
arpl
lret
jbe
out
cmp
mov
mov
dec
or
inc
bound
or
testl
mov
or
or
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
push
add
jle
jp
jle
ja
jecxz
hlt
insb
leave
pop
mov
cltd
sti
inc
cmp
or
cmp
pop
stos
pop
add
insl
add
negb
inc
mov
mov
mov
mov
out
xchg
adcl
std
cmp
jno
and
push
mov
insl
shll
push
pusha
mov
jae
xor
or
pop
mov
sbb
lcall
outsb
pop
es
popf
pop
daa
or
lods
lret
addb
lea
xchg
aas
or
jmp
or
outsb
icebp
shlb
ficoml
ret
outsl
lock
jmp
loopne
imul
jecxz
adc
dec
jge
adc
adc
mov
js
hlt
sbb
mov
cli
fstp
sbb
loopne
add
scas
hlt
dec
sub
imul
cmc
sbb
pop
loope
notb
push
jl
ret
cli
leave
fwait
aad
bound
mul
push
push
lds
xor
faddl
fdivr
mov
dec
sbb
int3
ret
pop
adcl
sub
or
popa
jp
aad
push
into
and
into
adc
sub
das
je
lods
shlb
out
sub
add
dec
mov
pop
shlb
xor
scas
cltd
inc
ljmp
inc
fadd
xor
int
cmp
clc
xchg
outsb
add
cltd
arpl
lret
loope
jne
jo
push
inc
mov
dec
rcrl
setge
sbb
les
mov
ja
jno
jmp
divl
adcl
xchg
fcmovnbe
ds
mov
lods
stc
sbb
shrl
pop
mov
xor
inc
mov
out
in
lea
mov
mov
mov
mov
cmpsb
xor
xor
leave
lods
rcrb
rcll
aad
and
jg
inc
loopne
scas
cmp
les
pop
inc
cli
sub
cmp
daa
lods
add
push
iret
sbb
scas
xchg
jl
sahf
jne
movsb
imul
scas
sbb
cld
xchg
pause
or
lret
adc
imul
jae
sub
mov
shlb
in
jns
iret
adc
hlt
popf
into
cmpsb
int3
data16
adc
push
iret
aas
rolb
jns
inc
push
ret
imul
sub
lds
add
mov
dec
cmp
cmpsl
xorl
push
and
insb
test
clc
mov
inc
das
push
push
inc
xor
stos
mov
push
xchg
xchg
push
sbb
movsl
jno
repnz
mov
pop
sarb
nop
fwait
push
adc
mov
mov
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
daa
clc
cmc
orl
jle
pop
sub
lods
push
sbb
int
pop
sbb
cmp
std
hlt
push
mov
popa
xor
lret
imul
shr
cmp
ljmp
jg
xchg
mov
xchg
adc
test
mov
cmc
popf
andl
movsb
and
lock
dec
add
or
lods
mov
mulb
outsb
inc
xor
movsb
xchg
sar
inc
scas
jecxz
aad
loope
add
fimuls
test
imul
in
xor
cmp
sbb
cld
pop
push
adc
movsl
inc
jp
adc
movsb
jns
scas
fwait
lret
sub
mov
dec
dec
lods
daa
hlt
pop
xlat
push
mov
mov
sbb
loop
idivb
add
cmp
inc
les
jg
bound
mov
in
xchg
xchg
mov
stc
mov
fisttpll
clc
repz
mov
xchg
ljmp
insl
sarl
add
xor
es
add
xchg
rcll
lds
adc
shrl
les
mov
sbbl
das
xor
aas
mov
popf
ret
addr16
xor
add
push
jmp
aaa
adc
cs
mov
faddl
lods
mov
sub
rorb
push
je
add
or
dec
aad
sahf
push
xor
mov
imul
testl
imul
out
mov
cmp
xlat
into
xor
hlt
out
out
pop
xlat
in
fisubrs
xor
std
sbb
popa
dec
and
sti
adc
add
push
movsl
loop
sbb
outsl
mov
push
or
ljmp
xlat
rol
inc
fisttpll
out
and
pop
xchg
aam
mov
xchg
mov
sbb
add
mov
adc
sub
les
pop
repnz
add
repnz
mov
mov
push
jmp
adc
xchg
ror
cmpsl
nop
mov
add
ja
push
mov
int
clc
fisttpl
bound
fimull
push
mov
std
rol
shl
cmpsl
cwtl
gs
insb
movsl
pop
mov
jns
rclb
jns
aas
loopne
daa
mov
jbe
sbb
ds
lea
fwait
push
repnz
jne
fcoml
sub
imul
cmp
mov
mov
mov
orl
inc
test
xchg
push
sub
fidivrl
stos
or
pop
xor
stc
inc
pop
into
add
fcompl
bound
lds
mov
and
sub
xchg
mov
fcoml
int3
jae
call
adc
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
push
xor
cs
xchg
pushf
add
shll
shr
adc
icebp
scas
idivl
pop
in
adcb
es
pop
clc
pop
in
dec
mov
inc
xchg
roll
negb
inc
xchg
push
cmp
pop
xor
cld
jns
js
repz
decl
mov
sub
and
dec
jp
dec
xchg
and
ja
lods
insl
dec
pop
xor
mov
mov
movsb
lds
or
xor
lcall
xchg
rorb
jbe
fsubr
cmpsl
in
lcall
cmp
outsb
sbb
stos
inc
push
in
sbb
sbb
xchg
scas
sub
cmp
xchg
stc
mov
and
sub
inc
jne
lods
js
sti
lret
mov
popa
aaa
push
add
fwait
jnp
stos
xor
movsl
mul
les
xchg
rol
movsb
lret
repnz
inc
pop
fisttpll
stos
mov
pop
jl
jge
mov
mov
outsl
mov
jns
scas
out
ficoms
mov
jmp
push
or
pusha
inc
ret
adc
mov
inc
and
jmp
push
dec
call
push
pop
or
fisttpl
pop
and
cmp
into
pop
pop
cltd
mov
popf
lret
arpl
enter
stos
call
mov
jb
sti
std
shlb
mov
sbb
add
pop
call
pop
loopne
pop
sbb
mov
aad
push
test
adc
push
into
lods
mov
pop
out
inc
or
sub
cmpb
inc
cltd
sub
push
sub
adc
dec
inc
and
rorb
lcall
and
pop
cmp
jno
sbb
cld
nop
repnz
jmp
leave
jns
mov
cmp
lret
mov
mov
xor
jle
int3
cmp
ds
jb
je
es
imul
negl
aam
repz
sbb
fists
mov
push
in
icebp
pop
pop
push
lock
push
or
int3
and
lods
xchg
mov
inc
fsubs
adc
mov
or
addl
fucompp
jne
sbb
push
mov
push
mov
rclb
pop
jnp
test
pop
ja
xchg
sub
aas
aas
addr16
pop
or
pop
xor
adc
mov
bound
scas
xor
and
jge
jno
xor
dec
adc
or
out
nop
dec
sbb
mov
push
pop
jno
xchg
adc
es
ret
sub
inc
and
mov
arpl
out
lea
je
sbb
je
stos
mov
or
add
add
add
jmp
and
jnp
cmp
and
jp
push
mov
pop
mov
adc
jle
jp
jle
cmp
push
xchg
ljmp
and
outsb
lret
jo
imul
hlt
jae
addr16
adc
sbb
aad
and
std
push
enter
in
mov
cmp
or
sbb
mov
mov
lods
clc
dec
mov
bound
and
lret
adc
scas
ret
clc
xlat
and
ja
and
mov
jo
xor
repnz
cmp
sub
fwait
push
int
xchg
rcr
lds
sub
in
js
stos
cmc
int
sar
cwtl
cmp
movsl
ds
clc
outsb
data16
sbb
xor
mov
je
dec
roll
adc
mov
orl
adc
jne
test
aam
and
mov
xchg
pop
imul
ficompl
add
mov
xchg
mov
or
xor
xorb
cmc
sbb
or
nop
addr16
loope
mov
jg
lods
xchg
adc
push
pop
sbb
inc
test
mov
adc
arpl
or
dec
xchg
shlb
rcrb
loopne
ljmp
sbbl
mov
add
roll
lret
sub
add
stc
add
movsl
push
fsubrl
repz
push
sbb
outsl
outsl
pop
into
icebp
pop
xchg
das
adc
sub
or
stc
push
xchg
xchg
mov
mov
or
mov
mov
imul
dec
mov
pop
loop
lods
rclb
ss
sub
neg
jp
enter
jne
mov
xchg
lock
fsubrs
adc
adc
xchg
mov
repnz
mov
lret
cltd
lret
outsl
lret
jno
js
push
and
pop
mov
icebp
pop
mov
sub
jle
ss
sahf
ficompl
sub
in
jno
mov
flds
arpl
jge
jecxz
jnp
mov
call
jl
icebp
push
mov
loope
lds
scas
or
shlb
pop
lods
cmpps
xorb
jnp
in
sbb
push
sub
into
shl
push
rcrb
insb
shll
test
repnz
rcr
jg
pop
push
fwait
mov
jno
and
xchg
adc
das
adc
mov
sub
es
jmp
and
aad
pop
adc
pop
loope
add
fmuls
std
test
dec
push
add
dec
out
mov
movsb
clc
xchg
std
insl
sub
push
push
pop
mov
lods
sbb
mov
cmp
sbb
cmpsb
out
xor
repz
fldt
orb
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
sbb
insl
adc
jle
repz
sbb
sub
lods
ss
rolb
clc
dec
psadbw
popf
mov
cwtl
daa
jb
or
add
sub
inc
xor
adc
xor
iret
les
clc
sub
inc
xchg
mov
mov
pop
lahf
add
int3
fstl
sbb
sbb
shl
es
and
add
test
cs
sarl
lods
ret
lahf
jg
and
cmp
dec
loope
arpl
cmc
jmp
push
out
pusha
xchg
xor
mulb
sahf
add
mov
and
and
loop
mov
xchg
jmp
jne
pop
shll
mov
mov
push
mov
insb
and
push
dec
push
push
add
mov
int3
jae
pop
or
sbb
push
push
cld
shr
fidivrl
inc
xor
mov
xchg
xchg
jns
add
mov
jns
in
aaa
int
xchg
and
jmp
mov
dec
mov
das
adc
dec
hlt
mov
add
repnz
fnstsw
and
adc
scas
mov
insl
mov
and
pop
and
jno
mov
push
xchg
mov
adc
sbb
push
fdivp
mov
mov
enter
push
jmp
xchg
mov
jecxz
or
push
lahf
add
fadd
cs
rorl
insl
mov
ss
stos
adc
push
fstpt
pushf
aas
sbb
add
movsl
stos
test
jns
add
mov
jecxz
stos
test
xor
shlb
cwtl
or
dec
push
mov
mov
jb
out
mov
fistpll
nop
aas
cmp
stc
mov
and
cmp
mov
xchg
daa
lret
mov
pop
mov
xlat
into
mov
shll
ficoml
push
in
aaa
push
xchg
add
lock
dec
inc
int
decb
ja
int3
sarb
test
lret
xchg
daa
test
call
inc
imul
add
dec
mov
daa
addl
in
vpaddusw
mov
jle
xchg
out
or
mov
insl
or
sub
add
xchg
xor
movsl
aam
dec
sbb
std
jg
scas
xchg
nop
xor
cmpsl
adc
loopne
insb
mov
stc
mov
ljmp
push
sbb
push
push
imul
es
sti
push
cld
insb
adc
mov
pop
sbb
jnp
test
inc
pop
into
imul
aam
and
shll
in
lret
jl
dec
stc
mov
push
mov
cltd
cmc
icebp
mov
mov
jmp
out
xor
mov
loop
into
xor
xchg
push
add
jle
jp
jle
pop
cmpsl
xchg
jg
ret
xchg
mov
sti
inc
cld
push
xlat
lcallw
mov
mov
ficoml
out
jns
cwtl
pop
mov
ret
mov
cmpsl
xlat
movl
ja
daa
fs
or
pop
xor
fcmovu
adc
add
and
test
addr16
add
or
sub
je
pop
pop
lock
jae
rcll
popf
popa
mov
add
stos
jbe
out
jg
movsl
scas
insl
mov
xchg
xchg
jmp
inc
shrb
cmpsb
add
push
in
int3
and
xor
jl
jp
fdivp
notb
xor
jnp
clc
mov
aad
pop
data16
mov
ss
cmpsl
add
jbe
jecxz
pushf
xchg
lret
lods
or
mov
sub
ds
test
lods
les
iret
loop
add
sti
xchg
cmp
nop
xor
into
cwtl
mov
dec
mov
andb
xchg
xor
jns
out
lods
loop
or
jae
push
jmp
add
push
push
mov
or
in
dec
xchg
pop
mov
and
repnz
mov
mov
xor
add
arpl
int3
lahf
mov
cmpsl
rclb
xchg
push
addb
add
or
push
aaa
pop
push
sti
nop
pop
cmpsb
stc
adc
push
xchg
mov
adc
or
imul
loope
mov
mov
jl
lahf
cmc
mov
cs
sbb
cmp
call
mov
push
fs
insl
xchg
sub
scas
jge
add
dec
xorb
pop
clc
jne
popa
fs
pop
ret
add
cmp
adc
scas
cmp
adc
xadd
mov
push
mov
in
and
movhps
filds
xor
jg
jb
icebp
fwait
adc
mov
scas
enter
test
fstl
push
daa
cltd
aaa
xchg
loope
sbb
adcl
lods
jne
fwait
cmpsb
jge
mov
pop
not
into
dec
push
adc
push
stos
test
rcll
out
jle
cmc
lock
cmpsl
in
cmp
enter
stos
cmp
repnz
and
ljmp
mov
repz
cmp
inc
or
sub
sbb
xor
mov
mov
xor
cmp
mov
fidivrl
push
popf
inc
js
sub
mov
test
xchg
mov
pop
icebp
out
or
dec
jg
cmp
roll
sbb
xchg
sbb
dec
cmp
push
xor
lea
xor
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
mov
jle
jge
jle
flds
daa
ss
loopne
add
cmpb
or
inc
push
and
mov
jbe
dec
jecxz
add
sahf
stos
mov
lret
lds
push
arpl
fiadds
leave
lahf
out
aad
mov
and
fnstcw
adc
sub
fbstp
jno
adcb
or
js
push
add
jns
jmp
fisubs
inc
lds
xchg
pop
int
push
push
mov
mov
stc
xor
push
pop
pop
and
adc
mov
push
daa
loop
fcomps
cmp
pop
addl
imul
ljmp
xor
sub
dec
je
lds
mov
clc
pop
int3
cmc
popl
das
out
dec
or
les
adc
mov
or
ficoms
cmpsb
push
lcall
repnz
hlt
jbe
dec
outsl
test
add
je
inc
and
sub
fsts
cmp
sub
rcrl
into
xor
cltd
adcb
iret
aas
push
jne
and
pop
lahf
and
xchg
fiadds
ret
mov
add
xor
dec
xchg
jbe
inc
dec
cmp
ss
mov
mov
dec
xchg
loopne
xor
push
mov
mov
test
push
xchg
cmpsl
popf
mov
daa
pop
cmpsl
pop
push
pop
fldt
lahf
xlat
xlat
rcrb
pop
inc
cmp
pop
xchg
mov
push
stc
les
xchg
out
mov
ret
nop
repnz
push
call
xor
outsb
insb
jp
jle
mov
sbb
mov
je
imul
cs
fimuls
rolb
dec
cmp
nop
insl
das
daa
notl
add
xchg
test
and
push
test
stos
or
jl
dec
and
xchg
jne
xor
push
daa
sub
xor
mov
insl
movsb
ret
pop
or
les
nop
lret
aas
mov
loop
fdivs
int3
jl
inc
xchg
mov
dec
loopne
push
test
and
xchg
jno
pop
outsl
push
lods
adc
enter
mov
and
ret
dec
call
js
xor
push
dec
loop
loopne
dec
lods
sub
movsl
imul
imul
fcmovbe
pusha
or
or
stc
leave
mov
jp
cwtl
inc
clc
mov
xchg
push
push
adc
sub
push
ficompl
pop
aam
in
shrl
pop
push
cmc
pop
xor
movsl
daa
and
cmp
mov
lahf
mov
notb
cmpsb
xchg
dec
pushf
and
imul
out
or
fs
gs
icebp
cmp
mov
das
xchg
lcall
mov
out
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
les
jle
jge
jle
and
arpl
mov
xchg
std
add
stc
mov
sahf
xor
mov
inc
mov
mov
add
jo
and
jmp
push
jecxz
inc
pop
aas
sub
orl
fcoml
cs
mov
out
pushf
aad
pop
dec
pop
nop
or
scas
adc
mov
bnd
xlat
sbb
jnp
dec
iret
lahf
in
call
lods
pop
add
orl
cmp
outsl
mov
push
out
ja
cmp
jge
mov
pusha
cmp
adc
push
addr16
sbbl
imul
sub
jns
out
sub
adc
jecxz
inc
dec
jl
cmp
rcr
aad
les
pop
iret
cld
inc
ds
xor
stc
pop
sbb
lock
cli
test
pop
adc
xor
insl
lods
mov
sbb
jae
lods
adc
fistpll
arpl
notb
in
movsb
dec
xor
push
jp
dec
jne
mov
add
xor
jno
clc
das
aaa
inc
xor
imul
rcl
push
adc
mov
xchg
sarb
popf
pop
das
std
int
daa
push
jns,pt
pop
stos
fcomp
inc
or
je
loope
mov
mov
jbe
inc
add
mov
sub
in
mov
out
shl
push
xchg
int
mov
loop
pusha
mov
clc
mov
movsl
and
cmc
dec
popa
mov
lods
fisubs
jmp
lods
out
push
or
cmp
insl
cmc
notl
dec
fidivl
inc
in
dec
dec
push
push
int3
lret
jecxz
pop
mov
fwait
cs
loop
cmp
lods
mov
ret
clc
ficoml
jns
loope
adc
xor
bound
or
push
xchg
adc
pop
mov
jg
es
pop
jp
dec
ljmp
test
sub
icebp
add
out
cmc
fcomps
mov
mov
jne
pushf
or
arpl
test
jp
int
daa
filds
xchg
push
push
fs
pop
push
pusha
mov
inc
ret
mov
pop
and
pop
cmp
out
mov
hlt
mov
mov
inc
int
mov
xor
pop
xchg
push
pop
adc
mov
scas
dec
lret
adc
or
cmpb
jb
insb
fldl
fs
cmp
cmp
dec
xor
lds
mov
hlt
popa
cmpl
adc
mov
fistl
or
notb
lret
or
sub
es
mov
jg
ret
jmp
push
data16
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
inc
sbb
out
cltd
iret
lea
dec
ficoml
or
ret
cmpsb
push
inc
loope
jne
pushf
xor
sbb
add
sahf
mov
pop
lret
xchg
push
sub
pop
bound
jle
or
cmp
fildll
jle
fs
in
ljmp
rclb
mov
std
sub
mov
pop
popf
and
jnp
jecxz
mov
cld
out
jg
mov
sbb
cmp
insl
popf
jle
pop
loop
sbb
mov
xchg
pop
ljmp
push
scas
sub
repnz
arpl
cld
div
add
or
push
js
fsubr
dec
int3
mov
sahf
test
fmuls
jmp
add
mov
dec
insl
addl
out
jg
sbb
sbb
pushl
inc
push
lock
pusha
xor
add
xchg
mov
data16
push
sub
ss
pop
in
notl
and
test
insl
push
ds
pop
add
adc
inc
adc
pop
cmp
xchg
jg
cs
ret
adc
sahf
sub
xchg
fwait
dec
out
push
scas
add
or
mov
sub
mov
cld
out
fcmovne
fnsave
cmp
out
divb
jle
cmp
repz
xor
js
sti
or
add
xchg
movsb
out
hlt
sub
pusha
and
mov
testl
sub
rorb
stos
es
xchg
cmp
je
pop
outsb
jmp
fimull
mov
sub
push
mov
ja
sti
mov
jnp
push
aam
addr16
pop
cs
and
enter
add
adc
add
xor
xchg
sbb
cmp
inc
insb
and
ror
dec
lea
push
and
ss
push
or
xchg
stos
mov
test
xchg
es
clc
scas
outsb
dec
mov
das
das
out
insb
or
cmp
cmc
push
lods
dec
ja
push
mov
pushf
add
push
pop
mov
pop
dec
lds
aas
addr16
push
es
out
stos
lock
push
and
lahf
and
pop
popa
mov
sbb
lahf
fildll
insl
out
fistl
fldl
ds
in
mov
out
repnz
arpl
push
fidivs
out
outsb
es
aam
xchg
sub
popf
sarl
sub
dec
and
mov
dec
adc
and
das
jb
xchg
rorb
ficoms
xchg
push
jecxz
lds
inc
cmpsb
pusha
jl
les
jp
das
outsb
pop
imul
cmpsb
dec
into
mov
jge
shl
dec
notl
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
jle
sub
xchg
jle
jge
jle
mov
fadds
mov
mov
mov
lds
add
js
adc
xlat
fwait
mov
pop
inc
jmp
rdpmc
sti
or
pop
cs
jb
ss
stos
lds
lret
dec
push
push
cmp
jle
clc
mov
sti
mov
sub
cltd
and
fimull
sub
pop
hlt
xor
cmpsb
push
mov
bndldx
jp
lcall
xlat
mov
xor
es
lret
add
mov
call
gs
cmp
mov
dec
jp
cmp
xchg
lock
insb
jge
sub
push
aam
sbb
popl
int
jecxz
int3
lret
push
imul
fists
jno
lds
loope
xchg
ljmp
stos
add
inc
js
ret
jge
mov
mov
add
fdivl
cmc
jnp
push
mov
das
or
xor
insb
hlt
sub
out
jg
outsb
mov
pusha
and
aam
mov
mov
adc
insl
rorb
sbb
lea
xorl
mov
xor
and
jne
adc
fnstcw
xor
lcall
mov
cmp
scas
add
ljmp
scas
aas
mov
pop
ret
inc
nop
push
lock
into
orb
push
inc
pop
sbb
call
into
cmp
pop
jnp
clc
dec
jecxz
adc
mov
rolb
mov
and
bound
sbb
sub
out
aas
xor
mov
rorb
addb
adc
sbb
mulb
push
lods
jmp
dec
jbe
jmpw
imul
test
xchg
adc
bnd
jne
in
fildll
xchg
mov
mov
mov
sarb
fstl
mov
xor
or
dec
xchg
mov
ret
rcll
fisubrs
xchg
enter
sub
ret
cmp
adc
or
idivl
add
cmp
outsb
fidivrs
or
cli
jle
dec
xchg
sti
mov
je
jb
push
clc
add
adc
pop
jns
lods
mov
testb
leave
out
out
sub
addr16
push
and
sti
push
cmp
lods
xchg
mov
ret
push
mov
pop
cld
jnp
dec
in
sbb
xor
adc
popa
leave
loope
add
adc
jge
mov
scas
xor
insb
cmp
lods
cmp
mov
cltd
hlt
movsl
mov
es
scas
mov
imul
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
sbb
jle
jge
jle
into
adc
call
sub
icebp
test
cmc
aam
hlt
arpl
pop
fmuls
lea
ret
xor
test
in
bound
insl
js
push
inc
hlt
mov
fdivs
dec
sti
dec
fnstcw
in
xor
push
idiv
aad
xchg
xor
pop
and
scas
movsb
call
fstpt
pop
mov
movsl
fs
lret
xchg
ljmp
push
mov
sbb
int3
mov
fucom
cmpsl
jne
push
ficoms
pop
jg
pop
or
movsb
add
arpl
mov
clc
sahf
lods
and
insl
adc
xchg
cmpsl
cmpsl
dec
or
mov
jmp
cmc
enter
cld
lea
insb
dec
ds
cmpb
pop
dec
sahf
and
add
sbb
mov
cmp
outsb
sub
ja
aas
pop
sbb
in
inc
js
jns
mov
mov
addl
mov
jne
sbb
adc
jnp
clc
fstpl
stos
and
imul
sub
sbb
xor
shl
push
inc
cli
cmp
mov
lret
mov
fistps
add
mov
scas
pop
out
mov
xchg
sbb
ljmp
repz
test
sub
pop
cmc
sarl
push
hlt
xchg
pop
in
loope
lahf
nop
push
shll
inc
movsl
dec
and
cmp
mov
push
clc
cli
dec
fmull
lds
xor
mov
push
xchg
addr16
fsubrp
int3
push
ss
sub
fwait
xchg
adc
push
lods
xor
cmp
scas
xchg
xchg
sub
jl
jmp
pop
hlt
push
adc
push
mov
push
sub
out
cmp
sti
pop
shrb
sub
dec
ljmp
in
nop
into
int3
into
mov
dec
popa
repz
inc
out
fcompl
out
ret
jae
xchg
xchg
sub
cmp
dec
icebp
mov
push
shrb
into
mov
loop
iret
fmull
aam
int3
push
push
and
or
inc
jb
mov
or
mov
sarl
call
push
imul
loope
imul
mov
movsl
sbb
data16
lret
lret
test
loopne
mov
lret
mull
jbe
nop
cmc
mov
xchg
jp
push
mov
stos
fsubrl
cmp
cmpsb
iret
sub
das
mov
mov
out
xchg
fsub
in
jo
mov
bnd
pop
sub
scas
sub
xlat
gs
xorb
shlb
cmpsb
shrb
ret
or
xchg
and
ljmp
sbbl
addr16
xor
jp
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
cmc
and
sub
jle
adcb
add
push
add
mov
vmwrite
ds
callw
jle
adc
cld
je
scas
sbbl
add
xchg
mov
xchg
push
xor
mov
xchg
jle
scas
lods
hlt
mov
pusha
data16
mov
stc
in
outsb
out
xor
pusha
lret
lcall
lods
sbb
push
mov
dec
clc
in
pop
cmp
imul
aad
rcl
and
shll
insl
push
cmpsl
add
outsl
inc
pusha
push
jge
jns
mov
shl
popf
adc
loope
jnp
add
sahf
sub
xor
mov
push
pusha
sub
pop
mov
pop
jge
xor
and
enter
mov
cmc
mov
cmp
cltd
jns
fnsave
add
inc
xchg
arpl
mov
push
imul
fsubs
mov
cmp
in
sbb
and
sahf
fwait
sbbb
adc
adc
stos
enter
mov
sub
dec
insl
gs
lds
mov
cli
mov
inc
ret
push
xchg
fdivl
pop
ljmp
inc
adc
lea
nop
add
jge
sub
pop
movsb
cmp
pop
sbb
mov
shr
in
cmpsb
jns
mov
and
leave
loop
jns
mov
adc
out
bound
ficoms
out
xchg
imul
pop
adc
arpl
mov
push
out
outsb
addr16
leave
xor
clc
push
push
pop
ret
mov
sbb
xchg
icebp
jnp
push
dec
stos
inc
cmp
cmpsl
ret
loop
divb
jge
inc
sahf
cmpsb
adc
fsubrl
jl
sub
aaa
out
cmc
sti
push
cwtl
xorl
int
js
xor
mov
cmpsb
mov
xchg
push
pop
ljmp
mov
arpl
lock
imul
dec
aad
rcrl
dec
xchg
cmp
call
jbe
cmc
iret
jmp
xchg
lock
jb
in
lcall
out
stc
fdivs
fidivrl
aad
jnp
mov
push
testl
cmp
sbb
or
stc
and
jae
shll
mov
aaa
dec
pop
out
loope
repnz
repnz
imul
imul
mov
push
xchg
mov
sbb
roll
popf
popa
cmc
es
test
cld
or
pusha
pop
test
add
dec
sub
cmpsb
mov
pop
psrad
movsb
sub
push
push
cmp
inc
gs
dec
and
cli
mov
divl
aas
mov
push
sub
ret
or
fmull
mov
sub
ret
insl
shll
jb
add
sbb
add
das
subb
mov
xor
jg
leave
cli
ss
jle
jge
jle
pop
js
mov
cmpsl
fsub
sti
jo
in
cli
sahf
lock
loopne
data16
loopne
sbb
movsb
test
sub
aas
mov
popl
and
test
rolb
fsub
bound
frstor
popa
rolb
out
and
ret
inc
xchg
rcl
dec
int3
mov
push
sub
mov
mov
inc
xchg
xchg
sahf
or
mov
jmp
xchg
cli
inc
pop
inc
adc
fists
fsubrs
pop
mov
inc
pop
add
loope
ljmp
pop
pop
push
xchg
cltd
test
lahf
ret
ja
popa
scas
rcll
je
pop
sub
loope
cmpsl
int
jge
dec
sbb
jecxz
xor
test
jno
sub
mov
mov
adc
xchg
sbb
adc
loopne
fs
or
scas
cmp
adcl
mov
mov
mov
vdivpd
bound
dec
popf
or
into
sbb
inc
jl
push
pop
mov
mov
shll
push
adc
push
fwait
add
roll
sbbl
xchg
or
xchg
cld
in
xor
mov
arpl
insl
into
icebp
ljmp
dec
push
out
dec
cmc
fiadds
imul
and
add
repnz
or
aaa
adc
js
mov
mov
lret
lea
add
sub
shlb
mov
mov
js
ret
cmpsl
loopne
add
insl
stos
dec
aam
insb
filds
rcl
cmpsb
adc
sbb
inc
sbb
rcrl
jbe
inc
incb
jno
inc
mov
mov
push
outsl
sbbl
iret
scas
icebp
mov
dec
addb
pusha
pop
sbb
out
adcb
sub
sbbb
and
sub
inc
popl
cli
xchg
lcall
fnsave
sub
shll
lret
jge
fucomi
aaa
push
mov
cmp
int
es
enter
xchg
ljmp
mov
mov
add
jge
xchg
cwtl
and
xchg
nop
ret
pop
arpl
add
cmp
push
imul
in
std
pop
add
das
fwait
cmp
popf
repnz
call
insl
divl
jle
or
sub
stos
inc
fwait
es
sti
dec
push
xchg
outsl
push
shl
mull
mov
jb
bnd
out
or
push
repnz
adc
sbb
xor
push
fdivl
dec
das
pop
fisttps
cmp
pop
test
sbb
test
xchg
push
jb
add
ljmp
jmp
repnz
adc
aad
fcoms
cld
popf
xor
jge
jle
cmpb
xchg
scas
jmp
test
leave
test
mov
adc
inc
insl
dec
out
arpl
mov
lock
popa
mov
aad
sarb
out
dec
mov
repz
push
les
adc
bound
repnz
loop
push
and
and
scas
fcoms
aas
pop
clc
push
pop
push
rcll
loopne
ss
xor
adc
loop
negb
repz
jb
loope
lret
ja
test
gs
add
mov
mov
push
nop
ret
popa
mov
insb
out
mul
push
xchg
push
dec
mov
pop
jb
pop
orl
pop
repnz
cld
call
mov
add
xorl
shl
pop
stc
cmpsb
dec
xchg
xor
cmp
pop
insb
xor
subl
xchg
cmpsb
data16
stc
test
movsl
inc
movsb
lret
rorl
mov
pop
data16
test
shl
or
mov
jg
cltd
cmp
inc
enter
lods
inc
xchg
pop
push
jge
pop
xor
movsl
jle
sub
in
pop
mov
vmovsd
adc
dec
shll
inc
jmp
xchg
cmp
aam
jg
add
fs
aam
jl
mov
pusha
into
or
jae
fdivp
cmp
sbb
mov
mov
mov
lret
mov
xchg
out
push
lcall
push
repz
jb
mov
mov
push
push
int
les
mov
lods
push
inc
lret
inc
xor
sbb
or
iret
mov
aas
mov
inc
or
fistpll
fisubs
cmpsb
aad
adcl
cmp
pop
test
out
stos
add
mov
xor
push
push
shrl
cmp
push
push
mov
mov
shll
fmul
cwtl
sahf
mov
adc
rcrb
push
xchg
xlat
imul
push
jne
js
dec
inc
pop
sub
jnp
lods
dec
outsb
lret
lcall
cmp
push
and
negb
and
into
aaa
jns
push
dec
test
dec
jmp
and
sub
adc
jae
xor
rcr
popa
fsubrl
int
sub
mov
lahf
pushf
testl
stos
loop
je
aas
pop
add
cmp
lea
lea
adc
and
sbb
inc
lods
jecxz,pt
iret
cmp
and
daa
mov
jecxz
cwtl
leave
xchg
lock
into
cmp
mov
decl
sbb
test
sub
sbb
scas
in
loope
mov
mov
xchg
xor
push
scas
jnp
mov
hlt
adc
jne
mov
insl
jl
mov
add
sbb
xchg
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
andps
jle
jge
jle
push
orb
mov
inc
ret
rolb
inc
push
pushf
sbb
out
push
lahf
xor
push
adc
call
add
aaa
fadd
mov
test
sub
cmp
imull
jge
addr16
jp
or
cli
mov
ret
enter
loope
scas
aad
cmp
imul
dec
icebp
pop
xchg
fmuls
insl
xor
jg
pop
jbe
gs
jp
iret
pop
iret
push
mov
sahf
rcrb
repz
sbb
push
int3
jle
cltd
hlt
xorb
insl
push
call
stos
mov
add
cmc
inc
out
xor
and
fidivl
mov
or
sqrtps
fmuls
mov
mov
pop
sub
pop
mov
push
xchg
clc
adc
jo
dec
popa
test
push
inc
inc
xchg
jl
and
outsb
jmp
pcmpgtb
ret
scas
jbe
gs
hlt
xchg
repz
fisubrl
sub
xor
xchg
rolb
insl
sbb
jl
outsl
add
daa
out
hlt
push
test
popf
sub
push
maxps
mov
xor
arpl
cmc
scas
pop
sbbb
movsl
xor
ret
insb
xor
fistps
cmpsb
leave
dec
aas
xchg
mov
cmpsb
lret
sbb
subb
add
dec
movsl
mov
pop
fisubs
jge
sbb
leave
mov
mov
jl
nop
inc
fstps
xchg
mov
cmpb
add
es
sub
cmc
push
pushf
inc
aad
jg
xor
or
xor
fdivrs
adc
push
pop
imul
mov
jp
sarl
sub
sahf
popa
adc
cmpsl
dec
fdivp
enter
out
lock
lds
filds
jno
mov
pop
movsl
sarb
addb
bnd
adc
imul
dec
outsb
inc
xor
imul
sub
mov
add
in
fstpt
adc
mov
jp
add
push
push
add
mov
sbb
dec
sub
add
pop
jmp
ffreep
sbb
mov
sbb
fldt
push
sbb
cld
dec
imul
jg
cmp
popa
out
sahf
add
adc
aas
cmpsl
mov
sub
bound
in
imul
loope
jecxz
jno
lods
out
loope
clc
push
leave
add
xchg
fstl
xchg
aas
sbb
or
mov
loopne
sub
or
and
stos
cmp
jae
mov
mov
cmpsb
cmp
hlt
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
cli
cmpsl
test
movsb
jle
push
jg
jle
es
pop
cltd
clc
add
xor
out
pusha
xchg
inc
mov
fisubrl
push
mov
xchg
stos
mov
xchg
push
mov
cmp
pop
mov
and
pop
mov
movsl
xor
xor
imul
sub
out
idiv
xchg
pop
stos
push
xchg
add
pushf
adc
sub
rcrl
cmp
xchg
movsb
and
or
mov
lods
lahf
scas
out
fsubrs
imul
pop
shrw
push
out
imul
jecxz
rcr
fdivrs
jmp
loopne
icebp
test
inc
xchg
pop
sub
or
mov
mov
dec
mov
mov
and
nop
rorl
fs
dec
fbstp
cs
mov
dec
stos
xchg
sbb
xchg
mov
mov
push
xor
neg
push
rorl
mov
mov
rorb
cmp
jno
inc
rorl
test
add
add
add
inc
cld
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
mov
jle
jg
jle
adc
push
mov
lret
sbb
adc
mov
out
xor
pop
cmp
lret
inc
iret
shrb
cmp
or
push
xorl
out
shlb
fimuls
fnstsw
and
dec
jb
or
mov
dec
std
pop
lcall
or
mov
sahf
jo
clc
mov
push
rcrl
pop
cmpsb
lods
mov
clc
ret
jmp
adc
push
lret
push
jg
add
inc
cltd
cwtl
fndisi(8087
xor
sbb
push
push
scas
adc
add
push
lret
and
loope
xchg
adc
dec
mov
ja
icebp
sbb
push
xor
fs
cmc
sahf
push
dec
inc
mov
loope
and
mov
sahf
ret
hlt
jbe
nop
mov
jge
leave
into
and
js
or
iret
pop
fbstp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
jg
jle
stos
hlt
cltd
jnp
mov
or
orb
and
adc
rcll
test
dec
negb
sub
andb
jp
dec
ret
cmp
int3
out
add
bound
push
clc
stos
xchg
mov
dec
in
mov
xchg
mov
addl
clc
mov
mov
movsl
sahf
aas
and
push
into
push
pop
repnz
mov
mov
xchg
mov
mov
pop
lds
sbb
mov
outsl
dec
cwtl
adc
push
lcall
sub
jne
mov
pop
pop
adc
pushf
fimull
push
inc
in
or
stos
sub
out
lea
and
push
inc
std
loop
outsl
mov
xchg
xchg
or
inc
popf
push
sbb
cmp
pop
mov
cld
adc
dec
and
ds
inc
adc
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
cmpsl
jo
out
mov
jle
xchg
fadd
fsubs
or
cmp
cmpsb
mov
sbb
cmp
stos
out
jb
sti
jg
int3
add
jg
loope
mov
lea
arpl
mov
addr16
push
push
iret
arpl
push
in
imul
sub
push
xchg
mov
jl
cmp
jno
popf
adc
rcrb
fdiv
inc
jmp
mov
clc
and
imul
mov
sub
dec
mov
loope
and
jbe
adcl
add
adc
fs
loopne
push
or
jecxz
mov
fisttpll
arpl
jmp
xor
clc
cltd
dec
cmp
test
sub
subb
in
cmp
movb
hlt
rclb
fistps
push
dec
xchg
ja
xor
call
push
xor
xor
xchg
loop
iret
sub
xor
fstps
mov
cmp
int3
jmp
dec
out
push
jp
mov
imul
sbb
decl
xor
gs
or
adc
psllq
and
ds
and
call
rclb
adc
dec
jecxz
push
lret
and
insl
xor
in
test
sahf
jg,pt
mov
jmp
or
mov
jo
and
pop
add
adc
mov
dec
jae
rcrb
dec
push
cli
stc
xchg
loope
add
xor
push
lods
xchg
ret
sahf
aas
loope
pop
xchg
adc
aad
pop
inc
sbb
mov
xor
ja
pop
ret
jno
or
sub
push
mov
cvttps2pi
fcoms
out
push
shrl
and
ljmp
mov
xchg
addr16
ds
add
loopne
fimull
lret
imul
shll
add
xchg
aas
add
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
in
sbb
popa
or
push
fwait
and
sbb
ja
repnz
or
cltd
push
shll
movsl
aaa
jge
mov
ret
inc
push
ljmp
cwtl
xchg
sbb
mov
mov
mov
jno
adc
sahf
lds
jb
mov
imul
outsb
jg
mov
mov
addb
push
xchg
xchg
or
dec
xor
fidivrl
push
or
fcompp
adc
jb
add
xor
add
xorb
push
out
shl
mov
inc
nop
hlt
xchg
add
push
jbe
repnz
mov
out
sahf
mov
dec
adc
aas
add
add
push
rorb
mov
push
movsb
lea
sbb
loop
fstpt
mov
push
movsb
mov
in
add
scas
fs
outsb
or
repnz
movsb
daa
imul
xor
fcoml
dec
jnp
dec
sahf
add
add
cmp
push
inc
out
fdivl
xor
mov
lods
cmp
lret
and
jne
nop
jge
mov
fidivs
pop
or
push
in
pop
andb
dec
sub
ret
push
mov
shll
xor
outsl
jbe
int
mov
or
sub
clc
adc
mov
ret
loopne
push
test
rclb
loopne
fwait
xlat
xor
outsl
cmc
jae
ljmpw
lods
or
push
cmp
out
rcrl
mov
mov
sbb
cmp
gs
and
popa
push
xchg
rcrl
adc
and
jne
movsl
cmp
notl
add
adc
out
test
mov
and
or
push
adc
or
sbb
call
jne
shrl
popf
pop
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
imul
scas
dec
fs
xchg
sarl
mov
pop
movsl
push
frstor
or
adc
xchg
je
pop
xor
sbbb
lock
je
insb
xchg
icebp
pop
cs
aad
fdiv
aam
jno
dec
mov
out
push
fs
jae
add
push
dec
mov
mov
sbb
das
test
add
sbb
mov
inc
mov
xor
jp
aas
xchg
inc
mov
mov
clc
cmp
in
fcmovne
add
inc
jno
add
xchg
cmp
int3
jns
sub
test
insb
xorb
or
cmp
jg
movsl
aad
scas
push
pop
mov
push
push
dec
in
insb
int3
inc
push
scas
divl
pop
and
adc
cs
xchg
xlat
pop
jle
xchg
push
pop
jl
test
xchg
shll
xchg
inc
outsl
movswl
test
bound
inc
jns
das
or
sub
cmp
pushf
sahf
mov
or
pop
inc
inc
stos
das
jle
mov
mov
jge
jmp
loop
xchg
repnz
das
and
repnz
adc
fbld
push
stos
imul
insl
jne
add
hlt
or
loopne
xchg
pop
pop
test
xchg
or
std
mov
cmp
daa
sbb
or
mov
jae
rolb
rolb
sbb
out
dec
xchg
jle
or
outsl
out
jecxz
jne
and
ror
lods
jns
mov
or
jns
jno
lea
lea
jg
es
jecxz
rol
in
cli
mov
lock
sub
jg
stos
fxam
fdivr
mov
adc
cmp
and
lret
loopne
sar
mov
adc
scas
and
adc
add
aad
dec
xor
fidivl
loop,pt
popf
lods
out
lret
rorb
inc
fistps
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
mov
jmp
mov
dec
mov
test
stc
rcll
bswap
push
inc
lret
and
jbe
das
es
cmpl
mov
mov
lret
jns
sub
fs
into
and
lahf
sub
out
sbb
imulb
fbstp
adc
adc
movsl
mov
in
dec
add
test
xor
fcompl
lret
mov
movsb
sbb
jp
sub
push
inc
lea
xchg
push
mov
xchg
out
popa
clc
in
mov
cwtl
jo
fs
daa
dec
mov
adc
xchg
arpl
test
aas
mov
lcall
sbb
mov
inc
cs
popa
push
fmuls
dec
pushf
stos
dec
insb
into
imul
cmp
pusha
jge
mov
or
scas
inc
pop
push
fistps
adcl
enter
filds
or
icebp
shr
imul
outsb
repnz
cwtl
js
push
mov
pop
cmpsb
addb
and
adc
fldl
mov
or
xor
rcr
iret
inc
test
xor
out
enter
jbe
out
mov
out
iret
mov
jge
sub
repnz
xor
pop
or
xchg
cwtl
or
mov
sbb
xor
scas
pushf
xchg
inc
orl
imul
mov
dec
pop
xchg
pop
adc
int3
or
mov
sbb
mov
icebp
call
hlt
das
je
adc
adc
xor
jg
mov
pop
or
xchg
ss
pop
gs
dec
stos
insb
pmullw
dec
or
xor
lret
out
aas
inc
jecxz
adc
sub
mov
dec
sti
xchg
add
inc
dec
ds
mov
adcl
push
hlt
stos
push
jbe
jp
cmp
outsl
mov
pop
pusha
pop
push
cmpl
or
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
test
rcrl
jl
jle
sahf
std
mov
adc
or
stos
mov
or
fs
mov
inc
les
mov
out
int3
xchg
xchg
xchg
fcomi
lea
aaa
push
call
mov
icebp
dec
in
dec
lahf
xchg
movsb
mov
sub
adc
fnstcw
cmp
jl
and
jecxz
xor
pusha
jno
repnz
push
outsb
pusha
lcall
out
push
sbb
add
mov
imul
mov
inc
test
dec
jbe
jb
cli
stc
mov
cltd
out
xchg
fstpt
jb
or
mov
xchg
xchg
in
roll
mov
outsb
xchg
ja
cmp
cmp
hlt
cld
insb
cmp
xchg
xchg
xorl
xchg
mov
push
dec
cmp
mov
push
gs
sub
mov
push
push
or
ficoms
sub
out
ljmp
pop
xorl
pop
nop
xchg
enter
xor
sub
fdivrl
cmpsl
dec
inc
cwtl
lods
pusha
or
lock
or
pop
mov
out
cli
stos
or
cmp
lcall
xchg
pop
cmc
loop
movsl
in
sub
fimull
or
mov
fistpl
imul
xchg
in
insl
fbstp
fnstcw
cli
push
jne
mov
movb
lea
xchg
xchg
rcrl
push
scas
jg
test
scas
dec
mov
jne
inc
je
cmp
sbb
rep
mov
enter
shrb
cmp
sti
test
xchg
inc
orl
test
dec
aam
ja
jnp
loopne
mov
and
pop
xor
aam
dec
lock
mov
out
jbe
push
sbb
ljmp
adc
mov
call
out
sbbb
fwait
into
movsb
or
jle
lret
xchg
mov
or
fsubrl
or
pop
pop
outsb
int3
out
and
movsl
es
lret
sub
loopne
cmp
int3
lcall
nop
nop
mov
rsqrtps
xlat
cmp
pusha
rep
add
sbb
mov
push
cltd
mov
xchg
mov
mov
enter
pop
outsb
js
jmp
leave
rcr
insl
scas
ret
push
xchg
lahf
rcl
sbb
add
adc
dec
or
cli
add
sahf
stos
push
xor
sahf
mov
inc
cld
xor
daa
cmp
jb
add
mov
addl
jmp
insb
xchg
xchg
in
or
stc
xor
lods
jl
jle
xorl
add
cs
or
cld
add
add
mov
icebp
addb
cmp
xchg
mov
pop
mov
ror
into
popf
dec
bound
bound
xchg
or
mov
fldt
xchg
fcmovb
rcr
lret
add
push
xor
out
and
inc
and
loope
cld
and
push
rcl
mov
ds
or
mov
roll
cmpsl
js
mov
jmp
push
jo
or
pushl
cmp
lcall
push
leave
cmp
movsl
cmp
add
in
adc
negb
enter
out
cs
insb
outsl
add
loop
push
das
aaa
mov
dec
sbb
mov
mov
fwait
ljmp
mov
fisubl
out
push
scas
dec
fidivrl
sub
std
popf
bound
shl
jno
xor
adc
adc
lahf
mov
pop
out
or
mov
cmp
out
lock
add
pop
jno
loop
enter
sub
mov
mov
dec
mov
movsl
cmp
imul
enter
hlt
test
pop
cli
mov
or
mov
cmp
add
adc
pop
fdiv
push
std
mov
fmuls
xor
ret
insl
pop
cld
enter
dec
mov
or
mov
or
push
sub
sub
int3
mov
insb
mov
int3
cltd
aas
faddl
fs
or
sbb
popf
pop
ss
popf
lea
andb
pusha
loope
inc
mov
pop
addr16
roll
insb
sbb
test
je
inc
mov
mov
movsb
adc
cmp
mov
les
je
ror
pop
hlt
test
inc
in
test
movsl
adc
push
jg
jge
jne
jmp
int
mov
emms
loop
pop
jo
inc
push
mov
scas
aad
sub
out
xorl
test
imul
adc
sbb
test
jmp
mov
and
lret
adcl
clc
inc
sbb
xor
add
sub
dec
nop
pop
add
push
or
sbbb
popf
addr16
adc
inc
hlt
ss
lods
add
jmp
or
xor
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
inc
pop
mov
jle
jl
jle
ds
sti
push
pop
clc
lcall
fcompl
mov
pushf
lds
mov
xchg
stc
xor
int
inc
hlt
sub
or
cmp
test
xor
push
test
mov
lds
mov
and
lds
push
pop
jno
mov
daa
cmpsb
lret
jb
mov
lds
cmp
icebp
pop
hlt
adc
jbe
movsl
cmp
mov
and
or
pop
mov
rcl
call
arpl
mov
dec
std
mov
jg
xchg
ja
cmp
stc
arpl
mov
push
dec
bound
test
push
int3
int3
rclb
lea
fdivrs
dec
aam
mov
mov
ficoms
adc
stos
outsl
mov
xor
push
repnz
gs
sub
mov
jb
fbld
aam
mov
adc
cs
xchg
push
imul
insb
fcompl
or
and
shrb
loopne
les
in
xchg
pop
jle
das
add
add
dec
mul
das
sarb
sti
cli
pushf
movsb
lahf
daa
xor
rol
leave
clc
sbb
lds
cli
shr
bound
cmpsb
mov
adc
sti
scas
pop
sbbb
push
lret
cld
push
mov
bound
jns
add
shll
jns
in
mov
xchg
inc
popa
push
adc
xor
cmp
fnstsw
push
push
add
xor
cwtl
roll
xchg
int3
roll
push
pop
push
int
xchg
mov
rcr
push
sub
mov
cltd
xor
lret
ficoms
add
jns
ja
add
out
mov
lret
mov
push
loopne
sub
mov
jle
xor
lahf
mov
xor
fnstenv
data16
fldenv
jle
int
test
aam
pushf
std
mov
into
call
pop
cs
arpl
mov
cli
xchg
xor
xlat
sub
sub
pop
dec
cmp
int3
dec
pop
int
stos
lods
negb
imul
out
popa
scas
mov
cs
push
jge
ljmp
sub
js
sbb
xor
xchg
faddl
or
test
xor
xchg
pop
decb
mov
scas
push
jb
icebp
push
in
jecxz
das
or
add
inc
je
inc
cmp
icebp
add
jmp
lock
arpl
sub
scas
ret
shrl
mov
jl
jle
popf
out
mov
mov
int
pop
xor
mov
test
mov
mov
jmp
loop
imul
mov
bound
or
nop
adc
mov
and
pop
xchg
jbe
pop
movntq
mov
nop
lds
inc
mov
cmp
xor
lods
insb
push
sub
mov
dec
push
mov
ret
mov
mov
aad
shll
xor
xchg
scas
add
jecxz
clc
inc
out
dec
inc
mov
ja
lret
xchg
jo
mov
xorl
jno
adc
jbe
lea
sbb
xchg
loope
je
arpl
std
pop
sub
mov
xor
mov
cmp
dec
mov
stos
mov
inc
pop
lahf
into
adc
out
rcr
flds
dec
sbb
aas
inc
jne
sub
mov
outsl
aad
lahf
cmp
jno
jmp
arpl
pusha
xor
xor
int3
out
xchg
int
andl
arpl
mov
push
or
es
jae
das
mov
mov
dec
cli
js
xchg
popa
rcl
sub
cmpsb
gs
xor
int3
xchg
test
add
mov
das
mov
mov
gs
subb
in
push
mov
xor
addr16
popf
jle
sub
stc
jle
or
fmulp
rcrl
cmp
sbb
jne
aas
mov
int
sbb
daa
sub
pop
push
jmp
hlt
xor
jg
mov
sbb
icebp
jb
ret
rcr
jns
mov
cmp
push
add
pop
imul
sahf
jge,pn
repnz
mov
in
jnp
add
or
fistl
cltd
movsl
xchg
rcl
jo
lods
pop
xchg
mov
pop
xor
fcmovnb
cli
adc
idivl
cmp
push
cli
jle
fs
outsb
cmpsb
lods
cmp
mov
mov
sbb
dec
mov
push
or
sub
add
nop
or
mov
int
aaa
pmullw
jne
sahf
pusha
test
mov
in
mov
ficompl
sti
fstl
aam
add
lds
sbb
push
jb
test
call
call
mov
leave
imul
and
js
daa
jnp
in
push
sbb
pop
fcoms
mov
idiv
iret
jmp
mov
jae
inc
mov
outsb
cmpsl
cmp
sub
loopne
arpl
sub
jle
xchg
imul
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
add
idivl
jle
jns
shrl
mov
pop
inc
inc
repnz
and
push
dec
and
push
call
inc
push
push
lret
arpl
push
jae
pop
jle
inc
ret
pop
lock
cmp
adc
inc
jnp
xchg
cmpsl
push
jmp
xor
notb
push
xchg
fnstsw
std
pop
push
test
mov
cmp
jmp
test
xor
push
clc
fcomps
mov
fldenv
out
adc
and
cmp
cmp
pop
loop
and
xchg
add
xchg
mov
cmp
mov
sub
test
xor
loopne
mov
rcl
sbb
imul
pop
xor
mov
fdivl
testb
rcrb
and
mov
mov
fildll
pop
cmp
in
or
clc
enter
xor
stc
jmp
incb
lret
or
add
sbb
movsb
inc
imul
mov
add
pop
les
mov
into
sbb
mov
mov
sahf
cld
or
outsb
pushf
push
insb
adc
repnz
loope
shlb
lret
data16
stos
xchg
scas
mov
xor
adcl
outsb
incb
outsl
xor
mov
popa
inc
loopne
cmpsb
ror
push
arpl
push
xlat
ds
cs
and
mov
push
cltd
jns
xchg
push
sbb
jne
jno
ja
mov
or
sub
popa
pop
out
mov
adc
sub
comiss
jmp
call
jae
pop
inc
sbb
test
jo
jno
aad
sbb
enter
test
sub
dec
rcll
jns
dec
pop
movsb
xchg
loopne
push
call
testb
inc
mov
cld
test
jmp
xor
ljmp
rcrb
push
xchg
test
arpl
jg
or
daa
aaa
mov
dec
sti
cmc
loopne
mov
out
aas
inc
pop
imul
xor
push
popa
mov
cmp
mov
int
and
pop
inc
aad
imul
movsb
add
loope
and
xchg
div
dec
loopne
aas
scas
pop
sub
lods
xchg
setnp
mov
push
push
lret
jb
popa
popf
in
cwtl
xchg
adc
outsl
out
xchg
jge
xchg
xchg
mov
pop
pop
lahf
fnstcw
xchg
dec
mov
or
adc
fldl
jmp
mov
adc
xor
xor
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
xchg
sbb
sub
sub
push
test
push
out
das
and
fadds
sti
mov
xchg
lea
sub
mov
inc
cld
dec
jnp
fucomp
mull
dec
jbe
ds
xchg
jge
jbe
add
xchg
cmpsl
xchg
out
cmp
mov
int3
outsl
shlb
sub
or
inc
inc
add
out
imul
data16
mov
mov
sub
je
inc
rcr
leave
mull
xchg
scas
cmp
mov
cmpsl
frstor
mov
rcr
cld
stos
or
daa
outsl
out
test
fnsave
mov
bound
push
push
dec
arpl
jecxz
test
inc
add
aam
adc
inc
std
je
ret
xor
pusha
dec
sbb
jo
sahf
mov
inc
ja
xchg
andb
mov
popf
mov
pop
pop
pop
lods
sarb
cltd
shrl
jge
mov
popa
sbb
dec
xchg
pop
mov
add
into
mov
sub
push
inc
lret
or
ficompl
nop
sub
mov
mov
jns
roll
imul
nop
mov
repnz
dec
cmc
add
xchg
hlt
mov
leave
mov
filds
jbe
adc
pop
insl
push
cmp
hlt
mov
push
or
popf
cmpsb
orb
dec
xchg
mov
adc
sbb
cltd
sti
add
aaa
bound
lret
mov
dec
pop
popf
add
push
test
push
rolb
xchg
xlat
or
into
outsl
push
cwtl
xchg
sub
mulb
mov
or
test
push
movsb
pop
adc
cmp
cmpsl
cmp
scas
sub
mov
cmpsb
aad
out
mov
adc
andb
mov
and
jl
adc
pop
cli
jp
jecxz
inc
add
aad
es
jns
imul
movsl
pop
and
in
aad
fbstp
mov
pop
pop
mov
dec
and
sbb
push
adc
xchg
scas
sbb
int
mov
sub
hlt
xor
dec
mov
add
ret
test
push
adc
test
inc
add
add
add
add
adc
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
adc
notl
jl
jle
test
pushf
sbbb
into
adc
pop
call
mov
nop
sub
out
dec
in
xchg
mov
cld
outsb
ret
sbb
dec
add
fistps
sub
es
rorb
mov
fmul
sbb
insb
push
mov
in
mov
fildll
mov
or
stos
and
sbb
iret
cmp
mov
unpckhps
pushf
xor
int3
test
sbb
and
mov
das
sbbb
xchg
cmp
pusha
nop
cmp
ret
aaa
dec
pop
in
ljmp
mov
push
pop
sbb
nop
pop
sbb
leave
addl
xchg
scas
jno
jp
mov
adc
sti
lcall
clc
cmp
pop
aad
and
or
push
popa
pop
xlat
cmpsl
cmp
sbb
mov
bnd
mov
inc
bound
cld
and
out
push
ljmp
fistl
dec
in
pop
frstor
lods
push
test
sbb
inc
pop
cmp
mov
pushf
das
xchg
test
dec
mov
jae
stos
pushf
lcall
or
shlb
popf
ljmp
sub
sub
cmp
mov
insb
xchg
loop
les
cli
sbb
sub
mov
xor
scas
push
cli
lds
push
testl
loop
jnp
ds
adc
pop
and
push
jl
iret
sub
out
xlat
outsl
movb
fisubrl
jne
push
mov
int
mov
push
sbb
push
jmp
shrb
out
insl
push
imul
mov
dec
mov
out
jmp
mov
fimull
int3
nop
gs
outsl
cmpsb
pop
add
popa
pop
lret
popaw
cmpsb
push
add
cmp
shll
jbe
aaa
push
mov
xor
xor
pop
pop
xor
ja
jbe
jp
aas
gs
bound
xchg
popa
scas
xchg
sub
loop
mov
ss
test
add
push
out
xor
in
pop
adc
fscale
outsl
sbbl
call
cmp
addl
aam
sbb
jge
shr
xor
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
mov
inc
jle
icebp
jg
jle
sbb
arpl
dec
addb
daa
xchg
cmpl
or
mov
mov
mov
dec
sbb
xchg
pop
dec
pop
jo
mov
sub
or
jg
add
cmp
inc
xchg
mov
es
jne
subl
add
pop
negb
fwait
cmp
add
mov
into
lret
nop
leave
sub
jne
movsb
movsb
subl
mov
cmp
aad
lock
pop
pushf
and
push
out
test
cmc
push
push
pusha
fmulp
hlt
negl
push
test
mov
jno
pop
popa
mov
dec
jle
es
pop
mov
addr16
and
cs
ror
mov
lea
frstor
xchg
aad
jmp
dec
adc
test
dec
int
jnp
mov
dec
jno
dec
pop
or
lods
subl
sti
cmpsl
cld
add
out
adc
imul
push
out
inc
in
ficompl
daa
push
adcl
je
xor
cli
mov
xor
fnstenv
cmp
xor
cmp
jo
shll
jmp
in
clc
test
aam
sbb
xor
and
imul
loope
xchg
lcall
or
pop
fst
mov
or
xchg
clc
pop
sub
and
xor
test
lock
clc
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
mov
jle
jg
jle
test
test
lds
mov
addr16
sti
cld
shl
cmpsb
mov
or
ds
jecxz
mov
or
push
aad
das
dec
mov
sbb
inc
jnp
rorl
mov
xor
scas
mov
sub
mov
xor
mov
xchg
mov
dec
insb
jp
fwait
mov
dec
inc
fidivs
inc
cli
adc
and
sbb
iret
push
mov
je
popa
add
mov
stc
pop
mov
lret
mov
lret
test
xor
ret
mov
lea
xchg
cmpsl
and
ret
out
inc
imul
cwtl
mov
ja
repz
mov
stc
dec
xor
sub
mov
xchg
sub
sub
mov
ja
xchg
xchg
sbb
sub
scas
repz
pop
shlb
cmp
js
dec
cltd
adc
lcall
loopne
clc
jb
pop
in
loopne
mov
pop
data16
out
lahf
or
cltd
popl
dec
lahf
push
rclb
leave
jle
leave
mov
addr16
pop
popa
cmc
dec
lds
adc
and
notb
sbb
lret
mov
shrl
cmp
call
cmp
xlat
mov
sbb
pop
int3
mov
enter
mov
sbb
flds
cld
lahf
xchg
mov
mov
jno
testl
xchg
mov
add
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
je
pusha
adc
inc
jle
icebp
jg
jle
push
outsb
adc
inc
adc
aad
jmp
xchg
mov
outsb
push
leave
pop
out
shlb
incb
mov
inc
in
jp
int
push
popf
xchg
add
andl
pushf
int3
hlt
sahf
std
test
push
xor
aas
mov
and
jb
repz
pushf
das
dec
jge
mov
cmpsl
mov
fbstp
es
mov
imul
scas
sbb
push
mov
out
frstor
rcll
shlb
imul
icebp
push
fadds
call
rclb
xchg
push
mov
les
cs
push
lds
pop
inc
jbe
repnz
cmp
fstl
xor
repz
xor
mov
jl
inc
movsl
inc
sub
lds
dec
cmp
outsb
sarb
cs
jmp
daa
fidivrl
and
rclb
insl
mov
jne
jmp
in
loopne
cmc
lcall
pop
lea
sub
mov
cmp
insb
adc
pop
jnp
pop
and
mov
inc
and
cmp
ffreep
arpl
out
test
pop
xchg
cmp
ds
iret
cltd
sub
sub
jns
or
mov
xor
pusha
pushf
xchg
jae
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
push
lret
pop
mov
jle
jg
jle
and
xlat
arpl
shrb
inc
adc
icebp
sbb
sahf
and
into
lock
mov
ja
dec
mov
stos
aad
outsb
test
jo
pop
ja
add
int3
stos
jns
mov
and
cmc
int3
xor
gs
lret
push
scas
js
xchg
sti
aam
aad
inc
rcrl
int3
jne
mov
out
push
mov
dec
aaa
adc
stc
pop
add
xor
add
out
repz
rclb
and
cmpsb
fbld
jae
xchg
cmp
outsb
mov
out
aas
int
mov
mov
xchg
jg
insb
mov
mov
push
pushf
cwtl
or
aas
addl
jle
jo
pop
adc
cltd
push
mov
subb
popa
cmp
out
in
call
mov
int
into
inc
lock
xchg
movsl
aas
test
sbb
addr16
dec
adc
pop
rcrb
test
sbb
jo
push
xor
stc
push
sti
in
pushf
inc
rolb
or
or
cli
adc
ret
xchg
add
pusha
xchg
add
aad
mov
test
or
mov
gs
in
adc
jnp
add
test
push
lods
dec
mov
mov
mov
scas
jmp
in
xor
xchg
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
mov
icebp
jg
jle
cmc
scas
es
in
inc
dec
stc
bound
arpl
loop
sub
xlat
cltd
stos
mov
mov
add
xor
jns
shrb
out
adc
pusha
jno
enter
incb
rclb
pop
fs
movsl
pop
fcompl
cwtl
imul
sub
stos
mov
movsb
mov
push
push
jg
mov
lahf
addr16
pmaxub
js
or
in
andl
movsb
out
xor
in
mov
mov
xorl
mov
adc
jg
dec
das
mov
fstp
xchg
inc
push
rcrb
scas
mov
ss
mov
sbb
ds
es
jnp
mov
out
push
sub
jle
add
loope
or
jns
mov
test
test
insb
or
and
nop
fsubrl
or
nop
jns
or
push
fs
js
jae
xor
sbb
outsb
xor
mov
push
nop
xchg
enter
mov
xor
out
dec
add
rcll
das
xchg
int3
jbe
leave
cmp
int3
in
test
or
lret
mov
cmpsl
daa
dec
sub
addr16
lods
sbb
stos
clc
inc
pop
xchg
jge
xor
add
movsl
xlat
push
mov
xchg
lea
dec
fdivl
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
cld
out
jb
addb
icebp
jg
jle
jl
fs
or
pusha
lods
lcall
mov
sahf
mov
pop
rol
xor
push
fcomps
push
outsb
mov
stos
dec
and
adc
movsl
sub
xchg
cmp
pop
jb
scas
ficompl
fldl
cwtl
stos
stos
mov
or
mov
in
movl
out
adc
xchg
cmp
into
sti
ret
adc
sbb
jo
lret
dec
loop
sub
in
pop
add
or
jbe
lods
cmpsb
mov
xor
imul
loop
mov
xor
cmpsb
mov
outsl
lock
xor
shll
cs
icebp
jmp
mov
pop
push
enter
cmp
mov
and
jno
shr
mov
xchg
aam
or
pop
mov
in
sbb
cltd
std
rorb
sti
mov
dec
mov
ljmp
dec
sarb
xchg
jno
rclb
xchg
mov
mov
jle
push
or
loop
mov
sbb
jmp
jle
mov
clc
mov
lret
add
pusha
rcll
cmp
sti
jo
xor
inc
loope
mov
xlat
xchg
out
in
add
ss
lret
xchg
idiv
cmp
mov
mov
add
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
or
pop
mov
fimuls
or
fsubrs
ds
push
test
sub
dec
mov
imul
pop
fdivp
or
adc
adcb
fildll
loopne
aaa
lret
inc
pop
dec
xchg
xor
aas
jne
push
jae
mov
movsl
cmpb
cli
pop
movsl
sub
scas
xchg
mov
pop
jmp
bound
testb
idivb
xlat
pop
sbb
pushf
inc
outsl
adc
out
in
jbe
dec
push
jmp
xor
cmp
cwtl
xchg
out
loope
add
sub
mov
mov
xor
add
leave
dec
dec
push
mov
add
popa
dec
and
sub
mov
inc
icebp
mov
ja
and
popa
int3
divb
adc
cld
or
cmpsb
lret
jbe
xor
push
sbb
out
jg
popf
mov
push
ja
sbb
push
sub
xchg
clc
movl
bound
ret
mov
test
out
mov
ds
inc
fsubr
popf
add
cmpsb
lret
mov
xchg
sub
jp
stos
insl
sti
int3
xchg
jo
icebp
inc
cmp
mov
inc
mov
sbb
lods
cmc
mov
sub
dec
lcall
pop
ljmp
enter
fidivrl
bound
popa
add
clc
sti
mov
ja
xchg
pushf
push
jmp
dec
rorb
mov
ret
push
idivb
jo
mov
dec
add
cmc
les
scas
inc
jge
test
xchg
clc
sub
push
shrb
rorl
push
insl
aas
adc
push
mov
push
shrl
fldenv
setnp
sub
out
inc
and
daa
lcall
ds
movl
push
and
ror
fsubl
insl
pop
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
leave
sub
and
jl
jle
ljmp
mull
mov
xor
cltd
das
dec
pop
xchg
pop
std
ds
jecxz
out
inc
mov
inc
repz
mov
or
inc
fisttps
fmuls
jae
fisttps
popf
scas
pushf
shlb
mov
jmp
fstpl
fst
pop
ss
ret
inc
cltd
inc
pop
imul
add
cli
cmpb
testl
xor
scas
int3
xor
test
cld
into
imul
cmpsb
inc
inc
or
lods
pop
out
notl
pop
mov
jne
out
mov
lods
aaa
cmpsl
add
dec
popf
leave
leave
sub
or
es
fidivrl
aam
mov
shlb
cmp
push
ja
nop
add
jmp
and
cmp
push
loope
push
pushf
and
mov
sbb
add
xor
hlt
imulb
inc
or
sbb
daa
cmovs
mov
test
add
ja
pop
pop
and
sbb
add
pop
pop
insl
cwtl
ja
xor
lods
js
mov
xchg
push
cwtl
out
jae
inc
mov
lock
or
mov
mov
cmp
or
cmp
mov
scas
xorl
pop
aaa
and
pusha
jge
add
lea
xchg
iret
ret
shl
insl
xor
xor
xchg
mov
cmc
push
mov
pop
add
std
maskmovq
notl
imul
inc
mov
fdivrs
or
or
out
mov
sbb
or
mov
je
xor
sbb
sub
icebp
enter
jp
adc
jae
inc
enter
cs
das
mov
mov
subb
out
jecxz
add
test
cwtl
dec
mov
push
inc
js
add
sub
push
mov
mov
add
jmp
mov
imul
test
data16
dec
jle
adc
sub
lods
xchg
xchg
aam
imul
sub
xchg
xor
mov
repnz
pusha
cli
xchg
mov
or
popf
lahf
icebp
sbbb
test
not
popf
sub
mov
jno
ja
xor
aaa
enter
rcrb
dec
insb
mov
cmp
out
or
shrl
xchg
aad
out
fcomps
pop
pusha
lret
xchg
pop
pop
mov
movsl
and
dec
ret
add
mov
ljmp
cmp
mov
ret
ljmp
stos
loop
stos
pushf
mov
sbb
imul
mov
pop
in
inc
cmc
movsb
jb
or
or
dec
inc
inc
xchg
mov
enter
jmp
add
movsb
adc
fildl
data16
dec
and
nop
inc
adc
cmp
inc
push
outsb
xlat
sar
sbb
popa
lahf
bound
mov
test
ja
adc
enter
add
repnz
dec
xchg
pop
lcall
jecxz
cmpsl
in
and
lar
jp
sbb
ret
call
inc
stos
mov
rcll
sarl
jns
or
ljmp
mov
and
loopne
adc
fcom
insl
dec
das
insb
sti
test
add
push
repz
cmpsl
jnp
push
cmc
repnz
push
fimull
pushf
adc
roll
inc
sbb
push
rcrb
xor
inc
aam
outsb
outsl
pop
push
stc
ficomps
mov
add
or
sbb
std
jb
mov
aas
scas
xor
pushf
dec
sub
mov
fs
mov
sarl
add
inc
pop
rorl
outsb
jo
shlb
jmp
jl
or
aas
jae
jbe
fisubrs
jle
test
cli
push
mov
fs
adc
lret
add
sbb
std
js
ja
loope
mov
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
test
fmuls
xlat
add
add
add
lcall
cmp
cld
or
add
call
mov
lahf
daa
dec
inc
mov
dec
mov
imul
test
loop
fimull
or
repnz
hlt
mov
icebp
stos
and
stc
mov
testl
cmp
and
mov
inc
mov
adc
lea
aam
cmpb
fs
mov
or
pop
xorl
cld
stos
popl
xor
ror
idiv
mov
dec
in
ret
push
popf
xchg
add
mov
inc
xchg
popa
push
imul
fisttps
add
mov
push
sub
test
inc
or
popa
pop
cmp
mov
das
xor
sar
sub
incb
rcr
add
xchg
pop
inc
jl
jo
add
cmc
inc
or
add
pop
ficoml
in
jle
lcall
int
fadds
add
add
add
insb
fwait
mov
stos
into
xchg
jge
xor
leave
in
out
imul
in
jecxz
dec
fs
mov
addr16
out
jne
and
lcall
push
xor
out
imul
fwait
cli
mov
into
jae
rorb
or
add
fldt
sbb
mov
test
sub
or
test
jne
mov
push
mov
fstl
cmp
sub
lds
cwtl
dec
jns
mov
sbb
jbe
push
adc
rcrb
iret
loopne
mov
shll
mov
lret
adc
jmp
sub
mov
xor
lds
lahf
imul
out
xchg
imul
and
xor
sbb
js
or
adc
add
add
mov
push
cmp
add
add
add
loop
lock
cmp
pop
xchg
loopne
popf
jmp
popa
mov
pop
mov
out
test
cmp
in
sub
insb
cltd
ficoml
add
fdivrl
inc
inc
scas
pop
cwtl
inc
jae
out
dec
xor
sub
popa
je
popa
inc
pop
nop
je
xchg
adc
sbb
stc
in
lret
or
cmp
iret
jbe
add
aaa
jle
lret
mov
fninit
pop
pop
shrb
inc
gs
mov
mull
rcll
lds
rcrb
jae
pop
sub
mov
mov
xchg
dec
inc
icebp
mov
ss
cmpb
and
std
mov
enter
adc
add
popa
push
repz
dec
subb
mov
aad
and
cmp
cld
test
mov
jg
aas
notl
cmp
add
mov
roll
jmp
fiaddl
add
add
add
loop
cwtl
pop
test
jecxz
addb
lods
shr
neg
mov
ret
mov
mov
adc
add
xchg
pop
sub
mov
rorb
popf
sahf
les
cmp
add
sahf
push
loop
push
dec
xchg
push
daa
ret
adc
sub
int
aam
jmp
mov
pop
out
mov
repnz
or
rcrl
pushf
imul
cs
imul
jno
mov
mov
aam
push
jne
adc
xchg
leave
jecxz
mov
add
adc
bound
mov
and
xorb
call
adc
lods
cltd
cmc
jno
jae
inc
int3
push
push
insl
rcrb
ss
call
ret
xchg
scas
test
mov
test
mov
scas
or
cmpsb
inc
add
pop
jae
or
pop
dec
or
mov
add
add
add
sbb
das
stc
push
mov
xchg
and
pop
pop
mov
imul
or
mov
pop
pop
pop
xchg
xchg
aaa
pusha
pop
jbe
xor
push
pop
sub
mov
xchg
lcall
sbb
xchg
adc
cmp
xor
out
cmc
dec
cmpsb
mov
and
test
test
xchg
xchg
sarl
push
sahf
inc
test
pop
push
nop
lret
pop
cld
xchg
es
lea
xchg
sar
inc
mov
repz
push
jp
cmc
jl
lods
xor
mov
sub
loope
jecxz
test
test
popf
je
mov
loopne
dec
add
mov
and
fbstp
nop
mov
xchg
out
sub
push
sbb
add
ffreep
xchg
push
js
daa
icebp
dec
push
outsb
xchg
inc
inc
adc
and
loop
fwait
push
add
add
cmc
insl
cmc
out
lcall
enter
sub
mov
add
add
pusha
and
adc
enter
push
ret
dec
pop
lcall
inc
adc
inc
xor
pop
xchg
lock
sbb
les
xlat
out
out
out
iret
push
sbb
inc
adc
cmp
loop
push
xchg
iret
lea
outsl
xor
or
and
ljmp
mov
test
sbb
pop
xchg
cmpl
or
sub
cmpsl
shrb
or
adc
arpl
test
dec
add
fistpll
mov
mov
out
decl
push
mov
out
icebp
fwait
in
mov
lods
loope
xchg
repz
push
inc
or
and
mov
nop
adc
fcompl
dec
jns
je
push
jp
add
cs
in
lcall
aad
sbb
add
inc
iret
cmp
mov
fucom
enter
out
dec
pop
orl
add
jle
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
cwtl
sub
mov
xchg
pop
dec
push
jne
ss
mov
gs
and
mov
jge
push
neg
inc
adc
je
jle
push
inc
stc
add
adc
cld
int3
shlb
mov
rcrl
mov
mov
cmpsb
inc
in
mov
push
sub
inc
loopne
enter
test
push
sub
push
jle
nop
jne
arpl
mov
sbb
cmp
in
add
rclb
pushf
scas
imul
inc
pop
dec
pusha
mov
adc
inc
loope
aad
test
shlb
cmp
lret
lock
xlat
cs
lahf
push
adc
push
roll
xor
out
jbe
or
rcl
adc
rolb
sub
clc
sub
mov
movsb
push
daa
repnz
cmp
mov
cmp
out
in
fdivrp
xchg
mov
arpl
popf
or
and
scas
sti
jle
pop
push
pop
icebp
les
add
add
add
cs
and
scas
in
and
inc
lds
clc
das
jbe
movsl
jp
cmp
ret
or
add
cmp
daa
mov
int3
or
mov
fnstsw
icebp
dec
es
add
add
cmpsl
repnz
mov
jle
lret
or
push
adc
scas
repz
cltd
cmp
std
or
out
pop
push
loopne
cmc
jne
xor
cmp
cmp
adc
enter
mov
cmpsl
push
lahf
mov
cmp
adc
lea
test
fiaddl
lods
jb
push
aad
push
in
push
pop
sbb
xor
add
sub
cltd
lods
and
sarl
jb
mov
dec
push
jbe
sub
push
cli
icebp
inc
inc
sbb
sub
or
xor
shrb
pop
adc
jg
jl
cltd
adc
push
cs
fsts
add
negl
arpl
sbb
sbb
filds
add
add
add
mov
or
mov
cmc
push
popf
arpl
fadds
in
cmp
and
jns
pop
push
mov
push
lds
lret
ds
repnz
mov
xchg
rcrl
into
lock
mov
lods
jae
add
mov
inc
inc
sub
std
outsl
sub
cmpsl
mov
xchg
ss
enter
cwtl
mov
jo
and
fdivl
sub
enter
sbb
repnz
test
push
jge
loope
stos
inc
inc
jno
enter
inc
sbb
pop
es
mov
sbb
sbb
lea
sub
loop
push
xchg
imul
sbb
loop
and
popf
inc
pop
test
jl
int3
pushf
in
lods
inc
adc
inc
mov
and
insb
mov
and
pop
lods
fnstsw
push
test
out
sub
bound
add
add
push
jl
jle
insb
out
adc
loopne
add
add
add
pop
jg
mov
and
fsubrs
call
xchg
out
xor
xor
push
mov
enter
int3
into
jle
out
pop
mov
sub
mov
cmpsb
dec
insl
aas
inc
outsl
in
mov
xchg
andl
jg
push
pop
mov
xor
pop
lahf
in
es
adc
adc
es
pop
fsts
bound
jmp
pusha
scas
inc
and
push
nop
out
cmp
push
add
push
out
mov
stc
loopne
or
test
dec
jg
sbb
sbb
xchg
jno
mov
out
pop
fsubs
mov
cld
orl
leave
mov
adc
je
sub
mov
addl
loopne
add
hlt
sti
lcall
pop
adcb
inc
pop
inc
pop
addr16
int3
sar
adc
dec
mov
add
add
fwait
mov
in
xor
adc
loopew
add
add
add
add
flds
cmp
lods
mov
subb
test
xchg
adc
shrl
pop
adc
xor
pop
or
dec
sub
dec
dec
movl
lea
icebp
shlb
add
in
xchg
dec
xor
inc
arpl
and
lea
fisubrl
cld
push
sar
sti
jnp
into
or
adc
cmc
test
fwait
les
aaa
push
scas
pop
outsb
mov
mov
inc
scas
fidivrl
or
xorb
jp
out
jecxz
insb
adc
inc
pusha
adc
bound
gs
rorb
popa
sarl
inc
filds
mov
jge
and
enter
mov
ror
and
sbb
cwtl
jae
jae
mov
push
push
cs
test
jb
into
or
pushf
mov
lcall
les
add
aaa
data16
jne
mov
lcall
add
add
add
xor
loopne
stos
push
incb
mov
xor
xlat
pop
inc
test
add
testb
mov
scas
jg
pop
lock
test
cmp
push
push
add
jg
ljmp
movsl
lods
lret
mov
jecxz
in
shll
shlb
push
add
pusha
pop
jmp
sbb
xchg
int3
jmp
iret
rorl
jl
out
or
jge
fs
testb
jmp
test
xor
repnz
jne
popa
ljmp
neg
cmp
push
dec
and
inc
stos
sahf
xchg
test
sarb
xchg
aas
inc
test
pop
repnz
fcoms
hlt
fpatan
xchg
and
stos
inc
cmp
cmp
stos
lods
jg
or
ja
xor
mov
bound
sarl
test
fucomp
pop
or
sub
pop
pusha
repnz
fisttps
enter
imul
dec
xchg
or
add
add
jnp
add
jnp
sti
xchg
lahf
mov
addr16
jcxz
add
add
add
add
mov
int3
cltd
cmp
xchg
stc
adc
mov
lock
lcall
mov
xor
mov
and
push
push
repz
mov
pop
add
and
mov
les
mov
jge
add
mov
nop
add
incb
int
push
xor
jecxz
rorl
cmp
cltd
push
les
lock
hlt
test
xchg
xor
mov
adc
fcoms
loopne
sub
jg
add
fistl
lods
mov
or
js
outsl
icebp
jg
jne
cld
dec
decb
adc
cld
out
and
sub
adc
mov
enter
jp
call
jnp
xchg
mov
faddl
cmp
jge
or
rclb
icebp
mov
xor
lock
add
sub
pop
sarl
mov
stos
addr16
add
add
add
test
nop
dec
loop
pop
jmp
aaa
jo
inc
cwtl
daa
push
xchg
shrl
repnz
imul
aas
rcr
push
mov
int
es
jne
push
shll
pop
mov
divb
clc
jnp
jg
pop
or
es
outsb
jns
cmp
mov
sub
out
shl
cmpsb
loop
adc
mov
jecxz
shrb
je
mov
dec
outsl
sarb
mov
mov
inc
mov
cmpsl
jge
mov
cld
mov
in
xchg
and
push
popa
movsb
dec
call
data16
movsl
or
push
pop
leave
into
adc
push
pop
icebp
push
icebp
out
iret
ja
inc
ja
mov
and
and
add
shr
push
and
mov
adc
xchg
mov
icebp
and
dec
jne
jle
inc
jmp
mov
fsubs
rorb
or
hlt
or
negb
add
repz
std
repz
hlt
fdivs
in
add
add
add
jmp
mov
scas
sbb
fidivl
gs
mov
addr16
push
mov
ret
in
xchg
pop
mov
movsb
repz
jne
rol
sbb
jecxz
cltd
test
add
pop
mov
in
in
push
icebp
rcr
in
lahf
int3
ficoml
lods
dec
push
out
mov
jae
xor
push
mov
pop
add
pushf
mov
jae
rcl
mov
dec
shl
push
or
shl
gs
add
call
aad
icebp
sbb
sbb
mov
aam
into
push
mov
cmp
pop
mov
mov
jno
jno
cwtl
loopne
mov
fadds
cmpsl
xor
lcall
fdivrl
ss
js
lahf
stc
rolb
or
in
mov
xchg
in
dec
test
inc
jb
jae
adc
xchg
fcmovbe
mov
addr16
adc
das
or
xlat
and
add
lock
cmp
arpl
je
xor
imul
add
insb
pop
ret
aas
pop
lods
or
jnp
fistps
mov
lods
pushf
xchg
stc
push
pop
clc
and
jno
addr16
push
popf
jb
loop
jo
xor
or
out
daa
lret
xor
jno
pop
inc
cmp
lret
out
jg
mov
cmpsl
jbe
shll
xor
loop
lret
aad
testl
xchg
lods
add
out
inc
or
pop
std
cmp
adc
lcall
ret
jnp
jmp
pop
test
in
stos
test
cmp
loopne
sarb
dec
and
cmp
call
dec
es
loope
bound
movsb
addr16
les
inc
mov
xor
xchg
add
jbe
pop
jae
jne
pushf
sub
or
sub
sbb
sbb
dec
or
add
insl
lcall
mov
inc
sub
test
xchg
addr16
add
add
add
pushl
push
mov
loope
loope
and
cli
into
shll
in
add
xor
cmpb
push
leave
push
and
mov
popa
dec
sbbb
mov
mov
fstl
add
insb
adc
pop
hlt
jns
std
xchg
add
xchg
aaa
fiaddl
sbb
mov
mov
es
push
lods
pop
jae
sub
sbbb
fwait
xchg
xchg
jae
iret
and
cmp
test
adc
pushf
mov
cwtl
enter
add
imul
mov
xchg
mov
int
cs
pop
adc
push
insb
lea
loope
lods
xchg
jg
aaa
lods
add
mov
xor
js
mov
ret
call
pop
addr16
pushf
adcb
rolb
jl
cmpsb
es
or
fcom
sub
xor
add
add
xchg
in
mov
incl
rorl
call
add
or
in
aas
mov
push
cld
cli
mov
inc
pop
testb
imul
sbb
xchg
je
aas
or
pop
lahf
dec
arpl
scas
mov
popf
loope
dec
inc
mov
jb
xchg
push
lcall
push
rol
out
cmpsb
add
push
sbb
js
add
fsubrs
xchg
popf
lret
mov
and
fistpl
stc
cli
jp
daa
cmc
mov
sbb
ja
aad
insb
pushf
sti
int
call
cwtl
mov
movsb
cmp
jo
insl
les
jb
dec
int3
sbb
adc
stos
jae
lahf
sahf
pushl
outsl
mov
stc
pop
cmpsl
mov
sarl
mov
outsb
adc
lcall
dec
popf
sbb
adc
dec
adc
inc
mov
fisttpll
adc
add
add
sub
in
negl
sub
movsb
add
repz
add
xor
inc
ja
sbb
adc
mov
rcrb
mov
push
aas
push
out
out
inc
fbstp
aam
pop
js
cwtl
test
or
cwtl
cmpsl
xchg
cld
and
pop
or
add
in
xor
jnp
mov
or
xor
sbb
inc
sti
mov
rorl
and
xor
push
in
out
pop
es
cmpb
lock
sub
push
aas
or
les
mov
addl
nop
js
pop
sbb
add
jmp
mov
decb
pop
xchg
test
lea
data16
out
stos
outsl
jmp
push
dec
sub
or
lds
decl
pop
add
push
daa
fldt
out
pushf
std
xchg
xchg
cli
hlt
nop
xor
sbb
cmpsb
inc
mov
in
mov
subl
add
add
mov
stc
dec
push
fdivrl
ljmp
call
int
cwtl
and
mov
mov
jo
lods
add
jb
fsubp
push
jne
cld
lock
xlat
jae
mov
cmp
and
xor
jne
sbb
sub
rorl
push
popa
pop
cwtl
mov
or
lock
dec
fsqrt
into
jg
int
jl
jmp
xor
aam
jmp
jno
addr16
xchg
aas
and
clc
or
cld
adc
adc
sub
inc
jne
push
sahf
cmpsl
iret
incl
shrb
sub
test
and
faddl
mov
into
test
push
in
or
pop
lods
adc
cltd
xchg
sub
mov
scas
je
cmp
and
or
inc
push
sub
out
push
stc
jp
imul
sahf
inc
ja
loopne
mov
add
into
ss
popf
xor
push
push
int3
out
lea
adc
dec
dec
adc
add
add
adc
push
push
push
mov
jnp
jmp
add
add
add
fldcw
push
adc
mov
scas
push
inc
inc
sbb
xlat
sbb
cmpsl
rclb
cmpsl
lea
mov
lahf
adc
test
shll
adc
out
pop
pop
cli
nop
hlt
iret
bound
movl
imul
push
inc
and
inc
sbb
push
fdiv
xor
scas
call
jge
inc
loope
cmc
pop
mov
xor
jle
mov
pop
enter
adc
push
mov
ljmp
pop
and
pop
or
lods
adc
iret
cmpsb
inc
push
cmpb
xchg
inc
imul
imul
test
mov
mov
out
mov
inc
stc
roll
cmpsb
ret
dec
loope
push
pop
mov
push
cmpsl
test
xor
dec
shrb
stos
push
rcl
pusha
filds
pop
dec
int
xor
popa
push
jb
xor
dec
mov
add
add
repnz
add
pop
lcall
les
lret
push
mov
add
add
add
in
adc
push
cwtl
push
push
lcall
push
cmp
js
loopne
sbb
push
or
push
jmp
out
mov
rorl
xchg
pop
rcrb
stos
cli
and
ja
inc
repz
rorl
cmp
add
fs
mul
fs
mov
xorb
cmp
cmpsb
push
inc
jae
push
cmp
cmp
ret
add
shr
mov
dec
lcall
push
inc
adc
and
in
test
movsl
or
inc
ficoml
add
bound
xorl
cwtl
lock
jno
inc
movsb
loop
dec
cmp
sbb
xor
insb
imul
je
loope
aam
loopne
sbb
js
cmp
inc
dec
xchg
cmp
stc
ljmp
pushf
push
dec
pop
mov
push
decl
sti
jbe
test
add
add
dec
sub
out
dec
cmp
adc
inc
movsb
aad
test
gs
std
mov
cmp
mov
sub
jnp
nop
dec
xchg
ja
stos
lahf
mov
movsb
ss
movsl
stos
or
mov
popf
stc
xchg
mov
adc
enter
cwtl
sub
pop
outsl
mov
shlb
lahf
ret
mov
mov
fwait
out
mov
inc
and
mov
add
out
pop
adc
lcall
xchg
or
repz
push
xchg
loope
stc
add
ss
packuswb
stc
sbb
or
mov
or
or
imul
decb
inc
xor
cmp
into
je
mov
fadds
push
bound
sub
pavgw
xchg
insl
je
rorl
push
std
cmpsb
push
adc
cmpsl
mov
and
cmp
sti
fsubp
inc
push
sub
dec
addr16
add
add
add
mov
jne
mov
adc
adc
movsb
call
shll
push
pop
adc
popf
xchg
sahf
stos
mov
sahf
fistps
add
fidivrs
sbb
and
shll
jl
testl
add
mov
mov
cmpl
cmp
jge
and
aas
shl
and
mov
cwtl
stc
add
js
mov
pop
ja
mov
pop
lock
cmp
jb
leave
mov
jne
fadds
mov
xchg
test
loopne
xchg
sub
fcompl
dec
out
add
roll
xor
xchg
sub
sti
ljmp
out
hlt
push
mov
pop
lock
jle
in
sbb
andb
pushf
mov
mov
push
mov
data16
or
xchg
mov
and
and
mov
lcall
out
add
add
add
cwtl
and
pop
xor
fdivl
stos
je
lock
aam
inc
daa
int
pop
mov
ror
bound
xlat
jge
mov
mov
and
jecxz
dec
push
and
sub
movsl
je
shl
mov
push
into
out
push
and
dec
sbb
stos
mov
insl
das
xor
daa
inc
repz
jns
int
loop
mov
adc
inc
ljmp
incl
ret
pop
std
lock
or
cli
adc
push
push
cmp
leave
cmp
daa
sub
adc
add
jae
xor
and
adc
imul
sub
addr16
or
leave
repz
data16
repnz
cli
adc
xchg
jns
addb
dec
int3
sub
ss
sbb
outsb
sub
andl
addr16
sub
or
roll
add
add
inc
ror
lock
jnp
xor
xchg
adc
sbb
lock
add
add
pop
cmc
nop
stc
ljmp
rorl
xbegin
cli
fsub
inc
nop
aas
push
add
aas
push
push
pop
inc
xchg
cltd
cltd
int
sbb
stos
in
cli
sub
sbb
push
xor
or
pusha
push
xchg
pop
ljmp
lods
bound
lret
movsl
inc
punpcklbw
push
sti
xor
mov
inc
xor
into
ljmp
aad
repnz
mov
cld
pushl
mov
mov
test
jge
xchg
testb
jb
inc
xorb
pushf
imul
adc
lods
and
pop
pop
xor
xchg
and
cmpsl
mov
repnz
aad
movsb
jle
and
sbb
aaa
and
aas
aaa
xlat
or
jl
jecxz
cmpsb
bound
jnp
xor
mov
cmpsb
or
or
push
fistl
pop
cld
push
aaa
fs
dec
mov
add
and
repz
fisubs
sbb
mov
add
add
in
sub
aaa
pop
fisubrs
jge
mov
xor
pop
mov
aaa
sti
or
push
das
adc
inc
hlt
imul
jns
aad
pop
orl
scas
push
cmpsl
mov
mov
and
int
push
sub
push
leave
or
and
sub
js
mov
or
adc
popl
and
pop
or
outsl
ret
bound
adc
icebp
dec
rclb
in
nop
popf
mov
rol
imul
jo
pop
cmp
std
sub
test
inc
xchg
mulb
mov
xchg
adc
xchg
sbb
test
iret
mov
jge
jno
jecxz
insb
push
sbb
and
mov
adc
push
or
mov
pop
lock
pop
shlw
jnp
out
mov
dec
cmp
add
add
out
sbb
loopne
cwtl
mov
add
add
xchg
adc
mov
mov
pop
xchg
jae
jns
and
cs
imul
ljmp
shlb
and
xchg
pushf
cs
push
in
adc
push
out
mov
movsl
jo
leave
dec
xchg
jle
add
or
mov
and
add
adc
cmp
addl
and
sub
str
inc
xchg
push
scas
dec
adc
lret
rcrl
sbb
sub
bound
lea
int
int
call
xor
add
pop
or
andl
insb
xor
cmpsb
lock
mov
add
outsb
inc
cmp
aaa
and
jo
xchg
lret
inc
mov
jno
mov
leave
icebp
fsts
push
or
popl
enter
pop
push
sbb
repz
mov
push
mov
pop
xchg
inc
ficoms
add
scas
push
repz
cmc
scas
sub
mov
repz
add
add
sub
and
fimuls
addr16
jge
jae
repnz
adc
inc
ss
dec
jmp
mov
movsb
mov
scas
dec
mov
mov
dec
enter
pop
push
inc
sub
mov
mov
dec
int3
mov
adcl
dec
adc
pop
mov
xchg
pop
xor
in
in
xchg
sbb
bound
sbb
inc
xlat
push
cmp
stos
pop
mov
cmp
adc
pop
inc
dec
cmp
cs
xor
mov
cwtl
push
add
adc
sub
push
js
in
loop
cltd
pop
into
dec
mov
dec
push
scas
add
stos
repz
mov
insb
jp
rcll
or
mov
jne
xchg
dec
aam
call
ljmp
xchg
xor
push
or
mov
test
sub
clc
loop
add
add
pusha
rorb
cmpsb
mov
int
addr16
add
add
add
rclb
xor
enter
pusha
lret
or
cmovnp
and
push
adc
outsl
pop
hlt
cmc
jne
pushf
cmc
pop
fsubrs
stos
pop
pop
xchg
std
and
mov
mov
lods
test
jae
out
add
add
or
dec
lret
cmp
push
xlat
pop
fs
push
xlat
cmp
jbe
inc
add
xchg
std
xchg
dec
jno
xor
mov
fucomp
enter
sub
jge
stos
jo
dec
mov
lahf
loop
inc
xor
fiaddl
xor
xorb
xchg
inc
rorb
dec
rol
or
and
mov
divb
mov
loopne
lahf
xchg
ss
xbegin
incb
sti
adc
or
test
adc
ss
jo
sbb
int3
inc
lods
sub
imul
adc
loopne
xor
loope
xor
add
jecxz
push
testl
movsl
scas
mov
cmc
add
add
add
cmp
ja
push
sahf
push
ja
fisubl
mov
in
mov
lods
xchg
pushf
dec
pop
jns
in
clc
rclb
popf
cltd
mov
subl
stos
jb
adc
xchg
lret
cmp
sbb
or
stc
mov
rorb
es
ret
add
pandn
push
mov
sub
mov
dec
add
pop
in
adc
mov
imul
fldl
sub
sbb
pushf
add
jae
ds
cmpsb
add
push
cld
cmp
dec
sti
je
aaa
out
aam
dec
pusha
adc
xor
sti
sbb
shrb
adc
popf
mov
es
mov
idivb
out
add
dec
push
cmp
dec
inc
mov
std
mov
inc
mov
mov
push
inc
sbb
das
imul
pop
iret
cmp
pop
lock
or
add
add
xchg
mov
mov
pop
das
mov
fcomps
add
add
inc
orb
cwtl
int
aas
jo
cmp
pop
jecxz
sub
into
mov
fidivrs
int
mov
push
pop
pop
shlb
adc
out
mov
and
xlat
or
ljmp
xor
lahf
in
jae
dec
xchg
pop
adc
cld
push
dec
mov
xchg
mov
gs
and
roll
stos
ja
jmp
sub
mov
or
mov
cs
out
loop
pop
pop
or
push
ljmp
xlat
mov
adc
in
ljmp
mov
cmp
xor
imul
je
jbe
sbb
and
pop
inc
fs
push
in
adc
jno
divb
inc
xchg
and
jno
mov
outsl
dec
test
sbb
push
mov
xor
sahf
neg
in
movsb
push
into
cmp
stos
add
bound
add
mov
fucomi
xor
std
push
add
add
fadds
inc
test
test
in
xchg
inc
dec
cli
or
lcall
inc
adc
dec
mov
cmp
cltd
cmp
lret
pop
sub
push
insb
or
adc
cmpsb
inc
xor
xchg
outsb
sub
test
js
sub
jo
test
pop
push
mov
out
clc
fistpl
jns
mov
movsl
mov
pop
xchg
lock
xchg
clc
mov
faddl
add
mov
lea
jl
clc
lret
loope
in
daa
cmpsb
cmp
es
and
cmp
loopne
mov
idivb
mov
xor
loopne
jo
xor
mov
jne
sub
cmp
pushf
xchg
and
adc
xor
push
out
adc
fstp
pop
leave
sub
repnz
mov
pop
jbe
push
inc
pop
jns
aas
loopne
sub
add
add
add
or
insb
pop
push
cmp
jo
mov
movsb
mov
gs
enter
adc
cltd
call
in
jge
shll
sar
lods
pop
roll
cs
fs
mov
in
add
orb
xchg
mov
in
add
mov
pop
in
fisubrl
fwait
adc
ds
mov
sub
fwait
stos
dec
in
xorl
cs
inc
dec
dec
mov
add
out
add
sbb
add
icebp
dec
je
notb
das
pop
jg
mov
mov
leave
ss
scas
psllw
in
mov
sub
mov
xchg
mov
mov
out
rcl
push
iret
mov
jmp
lcall
mov
cld
in
mov
aam
sub
test
insb
jg
test
push
movsl
rcr
cmp
mov
in
out
fstpt
lea
add
add
jnp
mov
outsl
mov
add
add
add
cmp
sub
push
pushf
je
fadds
add
adc
pop
orl
mov
dec
jle
jae
hlt
cmp
test
shrb
pop
aas
sbbb
adc
ret
push
sahf
pop
stos
outsl
and
hlt
adc
rcll
mov
or
fsubrl
dec
sub
add
push
leave
and
xchg
push
fnstenv
inc
cmp
mov
push
inc
mov
insb
iret
pushf
mov
xchg
xchg
test
mov
inc
cwtl
pop
mov
aaa
fcmovne
out
inc
lds
adc
cwtl
push
cmp
mov
sub
pop
fldt
je
fistpl
shlb
fs
dec
cmp
mov
loopne
add
lret
and
cmp
cwtl
stos
cmc
add
push
pushf
rcrl
sbb
lahf
daa
mov
dec
sti
jmp
sub
dec
mov
imul
gs
subl
cli
add
add
add
imul
popa
jae
adc
in
rolb
jp
mov
push
add
inc
mov
mov
lret
cmpsl
ss
pusha
out
notb
jp
push
and
ds
jmp
out
inc
mov
les
push
jle
mov
adc
inc
dec
cs
sub
sub
shlb
daa
mov
lds
lock
pop
ss
sub
in
cmp
mov
and
cs
xchg
out
xor
cltd
inc
mov
mov
enter
loopne
pop
addl
jp
fildll
cmp
lcall
push
mov
mov
adc
icebp
sbbb
rorl
and
cmp
cwtl
fcmove
cmp
add
inc
sbb
outsb
test
out
push
cmp
jg
add
add
fdiv
mov
enter
addr16
add
add
add
inc
mull
jge
insl
jg
adc
push
jne
push
mov
cmp
and
jle
mov
or
sbb
out
mov
nop
jle
and
test
into
cmp
arpl
daa
shlb
mov
daa
mov
neg
adc
add
jg
dec
je
test
pop
fcmovbe
inc
jmp
sub
pop
in
aas
adc
add
sti
cwtl
pop
xor
jmp
push
and
das
popa
xchg
push
arpl
dec
cmp
xchg
ret
pop
jb
xchg
fidivrl
inc
iret
scas
or
imul
icebp
out
cmp
push
jmp
popf
aas
daa
cld
outsb
or
fists
or
or
adc
push
ss
lret
mov
push
inc
xor
into
cmpsb
dec
outsb
pop
xchg
lods
xor
scas
inc
mov
push
and
dec
mov
cmc
inc
out
hlt
test
mov
fidivrl
cld
add
add
add
fwait
cmp
push
in
popa
jnp
mov
cmp
sbb
jns
xorl
imul
fcomip
cmp
js
enter
imul
xor
hlt
jo
addr16
and
inc
push
les
jb
mov
pusha
adc
test
inc
fcmovb
sti
mov
or
ret
push
imulb
mov
int3
pop
outsl
lcall
mov
in
add
push
out
repnz
cld
mov
or
jle
cltd
scas
lds
cwtl
ss
addr16
fiaddl
mov
pop
mov
jcxz
dec
addr16
adc
aaa
xor
and
or
shrb
neg
add
add
cmp
jl
xchg
add
cmp
stos
push
addr16
dec
adc
cwtl
mov
addl
leave
mov
pop
xor
dec
aad
add
jmp
imul
lahf
repnz
xchg
push
out
addr16
add
add
add
cmc
outsl
inc
mov
inc
sbb
push
ljmp
jae
push
jg
mov
gs
sbb
or
into
mov
lret
pop
adc
adc
sub
jg
into
movsl
mov
leave
popa
pop
cmp
or
dec
add
xchg
testb
pop
shll
loope
test
fsubl
lahf
and
or
out
lock
in
enter
xor
push
daa
jb
cld
repnz
fldenv
sbb
jmp
rol
aas
inc
mov
je
sbb
sub
cmp
lret
js
fwait
and
sbbb
fisttps
xor
cmpsb
das
dec
loop
ss
sbb
sti
sbb
jg
rcrl
cld
fs
and
sti
sub
mov
sub
nop
psllw
mov
loop
inc
xchg
jmp
pop
lcall
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
adc
mov
add
add
add
rcl
pop
ss
fwait
mov
cltd
or
sub
stos
mov
cmp
adc
mov
dec
aad
insb
pusha
into
xchg
arpl
sbb
movsb
dec
adc
test
pop
lods
roll
imul
cltd
or
mov
mov
addl
imul
repz
aaa
adc
inc
dec
test
push
add
push
rolb
xlat
inc
add
xchg
adc
cmc
mov
sub
out
mov
mov
push
jns
scas
mov
scas
es
sti
fdivrs
subb
lds
jecxz
jnp
repz
and
inc
aas
test
aas
sub
mov
inc
lods
insl
and
adc
sbb
mov
push
jecxz
lock
xor
and
sbb
cmp
cltd
nop
rorl
gs
sahf
pop
ret
xor
cmp
psubw
sub
das
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
push
aad
jl
test
rcll
enter
lock
shlb
movsl
pop
stos
mov
mov
je
clc
ja
ret
sbb
mov
pop
shr
repnz
aam
int3
insl
mov
add
je
xor
mov
imulb
lods
inc
sbb
call
pusha
mov
imul
dec
adc
xor
xchg
mov
repz
scas
mov
jmp
sbb
pop
sbb
pop
loopne
sub
insl
cmpsl
aam
fnstcw
clc
mov
jnp
fs
test
stos
outsb
sub
adc
push
jecxz
sbb
inc
dec
pop
sub
jp
out
bound
inc
pop
push
fstl
mov
call
mov
or
fwait
lcall
mov
sub
pop
cmp
pop
std
lahf
in
jmp
jl
jl
xchg
xchg
shrl
xchg
xlat
gs
pop
mov
ret
add
mov
nop
test
aam
int
aaa
das
aam
jo
dec
add
add
add
add
lahf
incb
std
xchg
pusha
jb
sbb
movsl
imul
cmp
out
call
mov
jecxz
out
jne
xchg
insl
dec
fldt
mov
mov
dec
adc
fwait
enter
ljmp
mov
mov
mov
push
pop
mov
dec
sub
clc
dec
ss
cmp
push
popa
mov
mov
sub
xchg
jb
lock
push
insb
mov
sarb
ss
movsb
ss
and
std
and
sarb
or
mov
pop
clc
xor
adc
movsb
inc
add
adc
xor
jne
sarb
mov
popf
je
xor
or
loopne
push
lret
sbb
add
insl
xor
sub
incl
repnz
or
movsb
and
scas
sbb
movsl
mov
pop
arpl
addr16
sub
nop/reserved
add
add
add
pop
adc
std
stos
xor
cwtl
pop
cwtl
sbb
jnp
xchg
jg
out
jns
sub
xorl
xchg
adc
fadd
mov
js
fwait
mov
xor
xorl
mov
xorb
lcall
jg
not
enter
xor
repnz
mov
pop
nop
jns
xchg
mov
popa
int3
and
repz
mov
sbb
xor
cli
xchg
cmpsl
aad
mov
xor
mov
and
jmp
shlb
dec
popa
jge
sub
inc
ret
and
stos
pop
out
push
xchg
mov
popa
arpl
adc
mov
mov
push
inc
mov
pop
cs
push
int
dec
push
push
sub
push
sti
enter
loope
leave
sub
mov
addr16
imul
scas
add
loope
daa
cvtps2pd
pop
stc
test
xchg
push
scas
cltd
push
inc
stos
cmp
mov
add
out
out
pushl
xchg
xor
std
add
add
hlt
iret
sbb
loop
aad
or
adc
xchg
cmp
add
out
inc
dec
es
pop
in
mov
xor
push
in
mov
jbe
pop
sub
cmp
in
sub
fcomi
fdivs
mov
out
dec
adc
xchg
fucomip
inc
bound
jae
adc
cmp
inc
inc
jo
shlb
or
popf
push
addb
outsb
xlat
push
or
std
negl
push
cmpsl
add
movl
or
lcall
rep
inc
pushf
pusha
push
repz
stc
dec
jp
jg
test
inc
test
pop
sub
outsb
pop
sbb
push
pop
ret
mov
adc
sub
mov
out
pop
dec
lcall
adc
out
inc
movaps
xchg
movsb
movsb
out
sub
mov
and
or
stc
lahf
aas
cmpsb
repz
shll
add
push
scas
mov
mov
xchg
add
add
add
add
mov
adc
mov
out
mov
cmp
or
movl
testb
fimull
or
loop
rclb
cmp
sbb
pop
add
mov
or
ret
stc
pop
sub
jae
inc
rol
data16
mov
dec
add
sbb
testl
sbb
jb
sub
add
lret
pushf
sbb
addr16
xchg
mov
cli
add
mov
sub
sbb
fs
fisubl
adc
jns
mov
jmp
add
lea
mov
fildl
and
pop
lock
jbe
jl
xlat
add
js
pusha
sub
mov
std
push
mov
push
mov
fsubs
adc
ljmp
gs
aaa
xchg
and
movsl
mov
mov
mov
pop
mov
add
add
add
add
js
rclb
clc
ja
add
add
inc
or
inc
push
push
call
inc
mov
test
sub
loop
js
fistps
jecxz
xor
dec
mov
pop
sub
inc
dec
mov
pop
cmp
negl
lcall
add
test
cwtl
mov
ja
pop
ljmp
adc
scas
jecxz
les
gs
sub
sar
xchg
or
push
inc
ret
cmp
sbb
xchg
dec
mov
test
push
sub
inc
stos
or
loop
shlb
jbe
mov
clc
std
pop
mov
and
or
cmp
pushf
rdtsc
and
pop
sbbb
mov
mov
push
cmp
or
roll
fstps
dec
popf
dec
movsl
dec
lods
mov
xchg
popf
outsb
fdivl
mov
lahf
xlat
cmp
add
add
add
jne
mov
jmp
jp
or
shll
add
and
mov
inc
inc
pop
sarl
out
rolb
test
ret
mov
sub
xor
in
add
xor
jmp
xor
mov
out
movsl
ljmp
mov
dec
sbb
sarl
inc
jnp
lret
and
xor
or
mov
jno
rorb
lahf
call
out
or
adc
lahf
scas
gs
dec
push
adc
push
scas
es
test
xchg
movsb
popa
cmp
jne
stc
cld
nop
imul
xchg
mov
mov
repnz
dec
and
sbb
mov
xorb
stos
or
sbb
mov
and
dec
mov
pop
shlb
add
mov
mov
lods
imul
and
hlt
shll
add
add
add
mov
lcall
jbe
cwtl
sti
fidivrl
inc
rcrb
sbb
into
push
jne
sbb
pop
out
dec
and
mov
shlb
dec
mov
outsl
and
cmp
xchg
mov
xor
mov
imul
push
or
enter
pop
inc
push
orl
sub
mov
je
add
fmuls
cwtl
ret
aad
jg
bound
pop
ret
inc
cmp
hlt
scas
sbb
pop
adc
out
inc
std
jl
add
adc
inc
dec
test
fidivrl
sbbl
or
enter
faddp
lret
nop
out
xchg
or
pop
leave
loope
xor
pop
sub
xor
jae
in
test
pop
lahf
xchg
std
add
das
sarb
sbb
mov
cmp
imul
jo
repz
in
test
add
add
mov
cmp
ljmpw
add
add
add
out
xor
scas
dec
icebp
pop
insb
scas
cli
rdmsr
or
xorl
scas
repnz
pop
cmp
pop
adc
push
or
and
push
lcall
test
fstl
test
call
ja
mov
outsl
fs
cmpsb
ret
pop
stos
inc
dec
pop
les
cmpb
test
sti
xor
lods
adc
add
push
adc
dec
pop
std
aad
sahf
dec
cwtl
xor
shrl
push
pusha
or
lds
cli
xchg
cmp
shl
lcall
imul
mov
ljmp
in
insb
cmp
pop
rolb
repnz
cmpsl
jp
ret
shlb
pushf
sbb
xchg
mov
mov
scas
mov
xchg
lea
push
jmp
sub
push
imul
xor
xchg
enter
push
fbld
inc
jno,pn
or
add
add
add
mov
mov
lods
outsl
pop
jle
xchg
or
rcl
shrw
mov
pop
shrl
and
or
cmp
dec
mov
push
negb
adc
loopne
or
scas
movsb
push
jl
nop
and
lcall
sbb
sub
inc
int
jp
push
add
mov
push
aam
push
adc
pop
lock
lret
inc
push
jmp
sub
jge
mov
sti
jb
addb
fmulp
push
mov
mov
stos
push
sub
cmp
out
or
aas
repnz
out
adc
js
mov
or
mov
xchg
filds
sti
pop
pop
push
xlat
jmp
push
std
into
xor
adc
int
insb
fs
aas
mov
hlt
out
push
test
add
mov
into
fwait
add
mov
adc
add
add
add
mov
ja
and
fnsave
sbb
adc
not
mov
aad
fistps
jmp
xor
mov
adc
push
ret
test
pop
cmpsb
cmpsb
insb
mov
insl
outsl
jo
add
aad
loopne
sbb
mov
inc
jae
xor
push
pop
enter
add
subl
aaa
cld
pop
xchg
xor
jmp
push
sbb
jnp
and
lea
aaa
sbb
in
add
and
mov
pop
xor
mov
repnz
nop
and
sbb
sahf
mov
mov
movsl
cmp
cmpsl
in
addr16
jp
es
and
mov
stos
dec
and
ret
mov
sbb
add
or
push
cld
int
xlat
sarb
iret
fcmovb
mov
jp
les
pop
jbe
add
jb
bound
fmull
ds
push
je
jl
test
out
mov
pop
sarb
in
es
mov
add
add
add
into
int3
inc
and
out
shrb
out
dec
mov
pop
ds
cmpb
in
cmp
inc
jg
pop
and
dec
inc
cmp
sbb
sbb
fists
dec
rcll
inc
xchg
and
dec
push
enter
ret
push
xchg
lods
add
pop
daa
mov
pushf
je
imul
or
pop
xchg
lret
stc
mov
test
scas
sub
and
lahf
jle
andb
pop
lods
inc
mov
ja
xchg
mov
xchg
sbb
pop
push
push
test
dec
lods
dec
cmp
mov
gs
xor
aaa
jb
ss
dec
xchg
lods
out
pop
and
sbb
iret
sahf
xchg
fadds
fistpll
xlat
movsl
add
cmp
dec
jmp
lea
mov
mov
rcll
ret
cmpsb
bound
and
and
lock
test
loopne
jecxz
pop
stc
je
add
sti
inc
out
aas
mov
rcrb
or
add
add
add
xchg
call
loope
fs
mov
add
jle
int
hlt
cmp
fbld
inc
mov
roll
push
push
das
jnp
lahf
mov
jmp
repnz
adc
aaa
fs
cs
and
pop
push
add
outsb
adc
jmp
ss
xchg
push
repz
or
arpl
je
adc
leave
push
into
cli
dec
and
inc
and
mov
fsubr
stos
mov
xor
bound
jae
into
push
mov
ss
cli
xor
fs
mov
test
in
insb
lods
das
aaa
cwtl
scas
add
test
xor
pop
xchg
jnp
jae
pop
sbb
and
leave
dec
mov
outsb
fildl
pop
mov
lret
lcall
mov
cmpsl
dec
inc
loopne
repz
cmpsb
iret
ffreep
xor
mov
mov
mov
and
push
bnd
dec
leave
and
cmp
jb
or
add
add
add
mov
ja
pop
in
test
and
lock
pop
inc
mov
popf
jmp
je
out
mov
in
jl,pn
ds
clc
xchg
loop
inc
hlt
insb
inc
faddp
inc
mov
call
addl
sbb
fldcw
xorb
data16
sbb
and
cltd
add
cmp
adc
mov
cmp
cmp
and
enter
and
pop
mov
dec
lahf
shll
push
jnp
jge
cmp
lea
or
loope
mov
mov
add
xchg
lea
cmp
loop
lods
cmp
sbb
pop
xor
notb
adc
lcall
out
inc
test
test
jl
push
xchg
sub
rorb
jl
test
in
pop
or
cs
push
ljmp
mov
xchg
sbb
in
out
ja
filds
cltd
repz
addr16
add
lock
imul
xor
mov
pusha
nop
lods
mov
jbe
push
inc
pop
push
aam
inc
scas
jp
shlb
xchg
insl
jb
push
test
sbb
ret
mov
leave
mov
and
lahf
lods
lods
roll
xlat
jnp
es
dec
rcll
push
jno
push
adc
mov
out
push
lds
push
inc
inc
orl
jo
sbb
or
mov
aam
or
and
inc
lods
jmp
ss
outsb
lea
or
sub
sti
enter
popf
mov
dec
mov
inc
addr16
mov
shrl
cmpsb
jmp
aaa
scas
and
and
xchg
add
sbb
cwtl
or
fidivs
mov
and
rorb
jmp
xlat
and
adc
mov
popf
scas
ret
mov
jne
xchg
jae
push
sbb
add
add
pop
in
inc
push
or
push
add
add
add
insl
cmp
outsb
shrl
mov
out
icebp
test
jb
jle
arpl
rcr
push
xorl
les
dec
daa
lret
or
jp
popa
jo
lahf
mov
scas
pop
or
mov
pop
les
xor
push
bound
mov
mov
test
cmp
cmp
xor
arpl
cmp
dec
xchg
sbb
out
push
jg
sub
or
add
clc
cmp
into
add
jg
inc
add
fldenv
repnz
or
and
xor
push
push
and
adc
and
in
inc
mov
cmp
int3
in
out
and
ja
xor
cmp
outsl
jno
pop
aaa
shl
test
mov
out
or
icebp
outsl
stc
insb
inc
push
adc
in
hlt
push
call
ljmp
mov
mov
jg
neg
pop
daa
inc
stc
imul
add
add
add
lods
sub
mov
leave
jbe
and
xlat
popf
fnstcw
imul
repnz
lret
mov
rcrb
dec
loop
movsb
jae
cmp
test
cmp
mov
lret
lods
xor
loopne
les
push
sti
xor
rcll
movsl
out
sti
aaa
jecxz
dec
bound
push
clc
movsl
outsb
xor
fiaddl
stos
mov
in
and
push
imul
dec
sbb
adc
mov
je
add
dec
adc
icebp
pop
nop
das
mov
ljmp
mov
shll
icebp
push
fidivrl
imulb
inc
or
push
pop
mov
inc
xchg
pop
sbbl
push
cli
push
xchg
repnz
inc
int
and
add
dec
daa
lret
xor
add
push
inc
add
mov
add
add
sti
jg
cmp
je
mov
adc
add
add
add
sbb
dec
xor
lahf
jb
in
in
cmp
and
xchg
aam
add
pop
in
dec
int
outsb
sub
jnp
aaa
sub
out
mov
into
push
das
push
mov
mul
pop
loope
psubq
lret
jne
fsubl
or
clc
cmpsb
jp
nop
xor
push
jns
cli
add
iret
pop
mov
xor
enter
inc
sbb
sahf
loope
pushf
fidivrl
push
mov
aas
rorl
cmp
aad
imul
push
bound
shr
jne
mov
jmp
in
push
das
adc
xor
push
pop
arpl
mov
and
sti
popa
sbb
and
cmp
cltd
mov
popa
shlb
xchg
enter
push
not
ljmp
inc
aad
dec
sub
inc
mov
aaa
enter
and
xor
repnz
test
int
scas
aam
jnp
fstp
fcompl
mov
adc
add
add
add
add
sub
cmp
leave
mov
dec
aaa
mov
addps
xchg
mov
sbb
jno
clc
rclb
adc
xchg
pop
in
sbb
fmuls
outsb
mov
pop
jmp
mov
js
mov
ficomps
mov
mov
mulb
ds
xchg
mov
sbb
stc
lret
mov
pop
out
rorb
cltd
cmc
sbb
xchg
inc
sbb
pop
addr16
xor
scas
in
pop
daa
mov
inc
imul
je
aas
enter
mov
dec
sbb
mov
imul
fbstp
std
pusha
push
iret
clc
jmp
leave
dec
and
test
adc
adc
sti
cld
xchg
xchg
xchg
jno
shl
inc
fldenv
clc
lcall
jno
jbe
ss
enter
sub
sub
pop
jmp
add
scas
adc
inc
xor
or
sbb
add
add
outsl
mov
add
dec
mov
adc
add
add
add
jmp
daa
cmp
stos
mov
in
mov
mov
pop
jl
in
into
out
push
inc
inc
adc
data16
outsb
stc
xchg
outsl
pop
dec
xor
movsl
cmp
pop
mov
add
xor
sub
inc
lret
adc
push
mov
lret
js
cmp
add
xor
inc
push
xchg
mov
fs
push
or
cmp
rcr
inc
jo
xchg
push
pop
add
dec
push
inc
arpl
mov
fistl
lahf
pop
mov
sub
jle
inc
xchg
outsb
inc
popa
fwait
sbb
mov
jo
popa
inc
sbb
cltd
xchg
into
mov
addl
ds
adc
ficompl
fcmovnb
movsb
or
xlat
cmp
xor
jbe
mov
cli
inc
sub
inc
cmp
and
cmpxchg
leave
insl
pop
jno
jae
mov
xchg
mov
pop
stc
mov
sbbb
loope
jmp
fstpl
cmp
add
add
add
jae
push
stos
xchg
adc
cmp
sub
push
mov
subb
leave
lock
dec
cmpl
xchg
push
push
or
stos
sub
xor
sbb
pop
sub
cs
aam
dec
sbb
mov
mov
aam
jo
mov
xchg
push
mov
retw
jmp
scas
stos
pop
aam
ss
test
in
rcr
sti
test
divl
test
adc
dec
pop
shrb
mov
jecxz
or
jno
jmp
mov
mov
sarl
cmp
rorb
imul
xor
into
insl
in
mov
xor
fdivrs
enter
lahf
je
ror
pop
ret
imul
ss
sahf
sbb
pop
inc
jns
sub
les
mov
mov
loopne
xor
push
js
inc
adc
test
xor
xchg
lds
rcll
jge
adc
add
add
add
outsb
push
inc
clc
push
cwtl
das
inc
push
insl
xchg
push
or
adc
mov
cmpsl
je
stc
jle
outsb
mov
jb
mov
pushf
sbb
lahf
mov
lods
leave
push
mov
iret
movsl
lock
call
mov
jmp
sbb
add
lea
or
aad
fistpl
mov
inc
ss
popa
rclb
in
cwtl
cmp
popf
push
loopne
js
mov
mov
lcall
jecxz
es
flds
pop
mov
mov
add
sub
std
add
or
inc
mov
jb
mov
daa
pop
lock
jno
sub
stos
cmp
popa
and
adc
mov
enter
add
xchg
and
xor
dec
mov
cmc
mov
mov
push
int3
xchg
sbb
inc
xchg
lods
add
test
jecxz
add
dec
cli
inc
jg
int
xchg
lods
or
or
push
add
add
mov
cmp
push
icebp
pop
loop
xchg
and
mov
mov
sub
mov
xchg
popa
sarl
pop
lds
pop
daa
xor
notl
cmp
inc
or
fisttpl
sbb
mov
addr16
pop
cmc
fld
push
mov
test
cli
dec
dec
pop
inc
mov
mov
mov
sub
pop
lret
adc
lahf
pop
cmp
out
xchg
xchg
andb
ljmp
mov
push
or
sbb
mov
mov
sbb
cli
mov
xor
jnp
mov
mov
inc
popa
cmp
js
ja
test
xchg
stos
in
adc
sti
pop
jmp
ss
mov
push
subb
out
jl
dec
xchg
fcmovb
stos
inc
hlt
or
sbb
push
mov
dec
fsub
or
mov
scas
mov
add
xchg
std
cmp
jle
fistpll
fisubrl
bound
add
add
add
scas
ret
cmp
hlt
xor
cmpb
jno
xchg
push
test
cmp
lahf
adc
repz
addb
xlat
cltd
in
out
int
data16
je
sbb
xor
cmpl
in
loopne
in
add
pop
rolb
and
aas
ja
push
aam
mov
stos
cwtl
pop
inc
mov
les
jl
cmp
out
xor
push
in
dec
xor
adc
dec
outsb
pop
pop
cs
mov
jecxz
popf
les
in
icebp
clc
mov
pop
pop
mov
inc
insb
xor
inc
xor
cmp
sahf
jp
test
sub
call
mov
jmp
loop
movsb
cmpb
adc
inc
stos
cwtl
es
sahf
sbb
xor
ror
dec
mov
lcall
add
cmp
adc
ljmp
add
add
iret
xlat
ficompl
inc
pop
mov
add
add
add
test
pop
jo
les
sub
sbb
ss
inc
mov
out
arpl
outsl
js
in
inc
lahf
add
dec
vpmadcsswd
mov
sub
dec
ljmp
lods
dec
fnstenv
rolb
mov
repnz
push
nop
xor
jle
inc
cmp
or
ss
or
mov
jmp
aad
xchg
cmp
add
in
les
inc
xchg
pop
sbb
sbb
cmp
inc
int3
xchg
fs
inc
mov
lahf
sbb
cmc
xor
iret
daa
push
pop
xchg
pop
xor
mov
adc
scas
test
mov
test
pop
mov
xor
int
jecxz
pop
mov
inc
dec
add
sarb
mov
jg
repz
enter
sub
std
pop
fisttps
sbb
add
sub
iret
outsb
jmp
push
test
adc
add
add
add
adc
xor
mov
xor
jbe
cmp
cmp
mov
pop
add
int3
mov
fimull
fwait
xor
lret
xchg
mov
or
stc
repz
int
or
jb
mov
loope
stc
icebp
push
imul
mov
add
stc
jl
or
loope
aam
jmp
xchg
add
aaa
sbb
inc
inc
push
inc
pusha
dec
jmp
sub
xor
cltd
adc
es
ja
repnz
pop
sahf
aaa
test
mov
mov
adc
xor
pop
cmp
dec
mov
hlt
out
xchg
and
clc
adc
ret
lret
imul
fcmovnu
in
pop
call
iret
xor
jmp
jl
jo
negl
imul
ss
test
push
pushf
jnp
xchg
lcall
mov
and
gs
xor
jns
lds
add
add
std
sbb
stc
cld
or
cmp
sti
dec
sbb
add
add
add
sub
push
jb
dec
push
mov
push
inc
jnp
push
sub
jp
mov
sbb
ret
adc
jp
addr16
push
sbb
jnp
adc
out
je
xlat
loope
or
ss
mov
sub
insb
jp
call
lahf
push
sbb
sarb
sbb
push
leave
repnz
sub
mov
lds
or
pop
clc
xlat
push
sti
test
ds
cmp
add
pushf
adc
adc
addb
adc
mov
mov
add
mov
inc
imul
loopne
jno
cli
push
and
mov
js
aad
hlt
or
and
jge
aaa
xchg
lcall
ret
mov
xor
pop
mov
js
insb
mov
xchg
mov
data16
sbb
dec
pop
sub
mov
jno
mov
negl
adc
pop
xchg
cmpsb
incb
add
add
add
fcoml
mov
test
pop
sbb
fistps
mov
ret
das
xchg
addb
push
sbb
hlt
pop
push
or
stos
jne
pop
fcmovnb
repnz
push
push
mov
mov
inc
loop
in
push
scas
push
pushf
dec
xor
push
arpl
jmp
sub
cmpsb
jae
movsl
jle
or
addb
repz
cmp
aaa
or
ljmp
dec
fisttpll
mov
dec
popa
mov
push
mov
cmp
xchg
sub
or
cmp
jmp
or
imul
xor
cmp
sbb
cwtl
push
sub
push
push
jno
dec
add
repnz
jmp
lods
sbb
sub
cmp
hlt
xchg
adc
popa
jns
sbb
out
inc
mul
lods
cmp
mov
shrb
cmpsl
add
nop
or
mov
dec
pushl
lcall
add
add
jmp
adc
xor
cli
das
mov
aam
std
mov
and
stos
sub
xor
je
jbe
faddl
mov
ds
test
mov
sub
sahf
add
decb
jp
rolb
or
dec
ja
push
lahf
out
ret
xor
jl
and
inc
xchg
icebp
lcall
adc
mov
sub
orb
mov
jnp
mov
aaa
and
push
shr
add
push
jl
cmc
addb
lds
pusha
inc
push
dec
add
in
sbb
lret
or
daa
aas
std
scas
inc
adc
xchg
jg
lret
movsb
cmp
and
mov
jmp
mov
inc
test
out
call
mov
icebp
shll
push
leave
jmp
lea
outsb
xchg
outsl
out
xchg
dec
addb
add
pop
sub
inc
ja
pop
aas
dec
push
fsubs
add
add
add
bound
push
push
dec
dec
xchg
push
stos
ficompl
mov
sbb
gs
dec
inc
inc
mov
or
and
push
lcall
scas
pop
imul
adc
fcmovu
inc
dec
xor
cmp
mov
and
lds
popf
push
dec
or
mov
loop
scas
adc
mov
sub
shrl
push
and
push
pop
adc
cwtl
idivb
in
outsl
sbb
inc
xchg
movsb
cld
pop
sub
cmp
pop
and
jae
fdivr
adc
popf
imul
or
add
iret
jbe
rcrb
cli
fmull
stos
adc
pop
xchg
mov
out
inc
stc
fs
je
in
or
mov
leave
adc
mov
xor
inc
in
add
dec
adc
pop
sub
out
and
mov
mov
sbbl
shl
push
sub
adc
repz
jae
ja
div
mov
or
addr16
add
push
mov
dec
push
insl
dec
jecxz
dec
or
sbb
aas
xor
and
mov
jg
jo
cmp
je
mov
adc
jae
push
mov
adc
jb
imul
pop
bound
mov
mov
xlat
js
add
out
sub
add
fnsave
sub
dec
out
xchg
dec
dec
nop
std
mov
ljmp
rclb
pop
sub
dec
cmp
pop
inc
stos
adc
mov
jmp
mov
cmc
mov
mov
les
nop
jb
test
jne
lret
out
stos
repz
pusha
dec
outsl
xchg
mov
and
adc
adc
in
popa
iret
ror
pop
cmpsl
push
fisubl
pop
test
stos
lcall
mov
mov
add
sub
addl
sub
xchg
enter
add
add
cli
std
jg
push
pushf
dec
icebp
adc
in
addr16
add
add
add
popa
cmp
push
xor
aaa
mov
ds
rorl
xchg
xor
ja
xor
sbb
pop
mov
jbe
dec
pop
sqrtps
push
mov
pop
xchg
xchg
and
mov
xchg
test
push
pop
cmpsl
mov
and
das
stos
sti
add
xlat
lock
push
or
jo
cld
jle
movsb
shrb
mov
orb
pop
mov
sbb
cmp
push
inc
push
xor
xchg
xor
pop
mov
stc
data16
testl
and
stos
sbb
call
mov
test
inc
ljmp
mov
lret
out
jp
xchg
jo
push
leave
pop
fadds
mov
jnp
clc
lret
ss
mov
stc
cmp
ret
outsb
imul
lods
mov
dec
dec
inc
pop
jb
and
jae
outsl
int3
repz
add
testl
incl
sbb
jae
push
aas
addr16
add
add
add
xchg
dec
imul
ljmp
mov
enter
fwait
push
gs
mov
orb
test
add
xchg
dec
lods
mov
mov
mov
sahf
movb
push
fdivrl
cli
xchg
mov
or
fs
repnz
fisubl
xor
fs
sbb
mov
iret
ja
inc
mov
mov
cmp
mov
push
xchg
mov
sub
cltd
pop
loope,pn
or
cmp
mov
enter
int3
push
mov
and
neg
lahf
in
es
pop
mov
fsubs
lods
mov
mov
xor
pusha
mov
int3
sbbb
lods
fistps
popf
dec
fldl
add
lcall
adc
lcall
in
xor
in
jg
imul
shll
xchg
aaa
ss
sub
add
es
jg
pop
or
xor
sbb
and
add
add
add
bound
test
fldl
aam
cmp
sbb
adc
ffreep
test
fcoml
mov
push
push
pushw
std
add
clc
pop
outsw
enter
shrl
jmp
pop
fisttpll
scas
xchg
repnz
mov
and
lcall
lret
aam
cltd
bound
dec
and
adc
out
imul
jmp
into
movsl
es
and
into
shrl
fucom
sbb
jg
pop
repz
cld
push
mov
inc
sub
movsl
jne
lods
sbb
inc
lods
cmc
outsl
mov
scas
sub
add
pop
movsl
and
ljmp
movsl
jno
in
or
and
sub
cmp
frstor
movl
pop
pusha
fsubs
imul
xchg
mov
push
push
clc
or
dec
push
cmp
and
add
add
add
cmpsl
sub
mov
pushf
in
mov
fwait
xlat
xchg
inc
mov
ja
cs
add
in
aas
inc
mov
mov
out
sub
test
push
andl
dec
add
jne
into
loope
jmp
cmpsb
fdivrs
push
lcall
int
push
movsl
jno
insl
mov
mov
pop
ss
push
js
cmp
mov
loop
cwtl
mov
mov
xchg
hlt
jnp
sbb
jae
or
sub
shlb
dec
mov
insl
popf
in
mov
pop
adc
enter
loopne
mov
add
push
aaa
and
xor
scas
xor
or
push
hlt
sub
pusha
adc
pop
shll
jo
sub
dec
bound
push
inc
gs
jl
mov
imul
and
jae
data16
in
xchg
sbb
add
add
stc
lods
xor
mov
mov
add
add
add
rclb
lods
int
aaa
cmpsb
mov
mov
stc
sbb
mov
mov
js
jo
dec
mov
pop
loope
ret
rorl
add
lods
inc
xor
jmp
ret
shlb
adc
jbe
xorb
das
popa
jge
cmpsb
psadbw
into
roll
cmc
or
xor
ret
sub
div
mov
jne
icebp
inc
orb
jecxz
mov
call
fs
and
dec
into
or
push
and
inc
pop
mov
lret
movb
dec
inc
or
fwait
cwtl
lock
mov
fdivr
jns
pop
aaa
and
out
inc
test
mov
movsl
push
fwait
shll
pop
push
and
xchg
xchg
add
sti
cmpsb
xor
inc
negl
out
or
iret
loop
cmpl
cli
jmp
insl
adc
shll
stc
js
cs
ficoms
stos
sbb
call
mov
and
add
add
add
sub
mov
out
pop
js
es
clc
or
imulb
cmc
fnsave
fdivl
dec
test
adc
fsubs
repz
mov
bound
jcxz
lcall
pop
inc
fdivrs
cli
insb
mov
mov
push
movsb
add
imul
enter
sub
fs
pop
ds
sahf
xor
pop
test
out
mov
andb
subb
out
cmpsb
loopne
push
dec
pop
jge
std
mov
test
lcall
das
data16
sbb
fnstcw
mov
andb
pop
leave
ds
movsb
mov
mov
xchg
add
outsl
push
pop
push
addr16
stc
in
lea
insb
cmc
outsl
cmp
lock
sbb
rorb
icebp
loope
inc
js
pop
xor
orb
add
add
in
out
stos
jge
or
scas
out
addr16
add
add
add
popl
ss
pop
repnz
cmp
pop
fwait
inc
js
test
cs
sarl
push
ret
jo
js
and
pop
xor
xor
in
mov
sub
push
insb
or
out
cmp
jnp
dec
mov
cmp
jg
jns
sarb
jecxz
fucomi
sbb
push
movsl
cmp
into
jns
jge
aad
fcmovnb
repnz
stc
xchg
test
addr16
out
mov
xor
sub
mov
cmc
shl
or
roll
orl
ds
ss
shrl
shrb
xor
xchg
in
out
out
ret
jecxz
push
sarb
push
xchg
mov
sub
pop
mov
jle
scas
je
inc
mov
sub
jl
rol
mov
cmp
dec
sldt
add
dec
or
out
xchg
iret
push
aas
pop
cld
adcb
add
add
insb
add
std
push
or
and
ss
je
setl
clc
sbb
and
out
push
add
fstpl
sub
mov
cmp
sbb
in
dec
icebp
cmp
sub
push
push
test
sbb
mov
std
pop
cmpsl
inc
sub
fnstsw
into
sbb
popf
cmp
mov
dec
leave
sub
jl
aad
sbb
repz
sbb
lahf
imul
add
add
inc
jl
pusha
rcrl
push
repnz
test
jbe
mov
xchg
stc
mov
xor
mov
sbb
lock
ret
aam
imul
cwtl
pop
mov
fistps
out
daa
sbb
jge
jbe
cmp
mov
push
push
stos
lods
ljmp
add
add
in
add
cmp
out
loope
jns
ljmp
add
add
add
sbb
mov
adc
ja
xor
cld
ret
jns
pop
push
ret
das
and
out
imul
test
imul
insb
add
popa
or
mov
addr16
aaa
mov
leave
fcomi
test
push
jno
mov
jg
fidivrl
cld
mov
push
iret
sub
sbb
dec
imul
sub
mov
jge
sub
mov
loop
insl
inc
insl
adc
js
xchg
jge
rcr
xor
jb
adc
fists
push
push
aam
mov
dec
shlb
sub
jl
pop
je
popf
push
ret
add
sbb
sbb
push
mov
lea
decb
mov
cmpsb
sub
push
jg
xor
subb
cmp
loopne
lcall
mov
xchg
inc
movb
and
xchg
xchg
push
addl
scas
in
test
out
stos
test
sbb
sti
push
mov
cmp
daa
add
add
add
dec
movsb
lahf
add
ret
jo
lds
cmp
movsb
sbb
fwait
shll
mov
loope
pop
gs
popa
ret
add
jle
and
mov
cmp
sub
jmp
ret
out
fsubs
add
fwait
pop
icebp
xchg
push
push
jp
imul
xchg
dec
addr16
in
xchg
xchg
jo
dec
arpl
dec
loope
mov
mov
mov
mov
leave
sub
ret
jge
adcl
call
cmc
mov
aaa
pop
clc
fdivl
daa
jbe
frstor
pop
mov
fcmovb
jg
inc
enter
adc
mov
in
sbb
push
xchg
cmp
shlb
or
sub
jns
jbe
aam
subl
pop
add
fsubrs
inc
mov
lds
dec
leave
cld
imul
add
mov
dec
idivl
cld
ret
add
dec
add
add
add
add
loop
mov
xor
hlt
lds
mov
lahf
fcom
sub
fcompl
xchg
cmpsl
pop
cli
xchg
adc
lahf
out
dec
adc
push
aad
mov
push
popa
mov
call
lods
pop
sub
loopne
movsl
adc
outsl
pop
enter
in
jne
inc
adc
adc
push
pop
push
das
insl
and
gs
enter
sbbl
mov
fldt
loop
xchg
sub
pop
shrl
cltd
ret
aaa
lea
es
lods
mov
in
in
in
fadds
mov
inc
push
mov
pop
xor
mov
mov
push
sbb
inc
mov
adc
push
adc
mov
adc
add
sti
and
push
xor
sub
inc
sub
repz
fidivrl
push
stos
pop
ret
mov
iret
mov
push
scas
mov
add
add
add
bnd
in
pop
push
mov
and
push
out
push
repz
outsb
es
push
sub
jno
mov
adc
hlt
sub
popa
cmpsb
fisubrl
and
cltd
cmp
fs
aaa
push
call
cmp
add
sub
test
cmc
jg
out
inc
loopne
adc
and
jecxz
mov
jle
movb
les
inc
mov
mov
dec
pop
loop
decb
movsb
call
inc
sti
adc
scas
call
xchg
lret
shll
imull
sbb
and
xchg
jmp
xor
lret
mov
aam
xchg
mov
dec
out
fstpl
xchg
push
das
orl
sbb
cmpsb
std
add
xchg
adc
mov
outsb
out
push
lahf
cmp
mov
js
adc
pop
dec
push
or
div
stc
es
mov
mov
pushf
push
jnp
add
or
jg
arpl
arpl
andb
add
add
add
cs
sub
cmp
rcr
add
mov
pop
testl
mov
dec
stos
mov
jecxz
fld
and
xor
pop
adc
scas
adc
mov
xchg
ret
mov
std
add
and
or
cmp
push
sbb
loop
ljmp
test
mov
imul
shrl
inc
xchg
or
xchg
aam
pop
ror
out
xor
bound
lods
insl
mov
xchg
lcall
les
cs
icebp
mov
fwait
sbb
jl
and
js
adc
in
sub
or
imul
add
shrb
sbb
imul
xor
imul
add
add
mov
in
stc
fdivrl
sbb
shlb
cli
clc
cli
clc
sarb
sti
mov
cmp
sub
add
add
add
cmc
fstpt
out
jl
sbb
pop
mov
inc
mov
sbb
add
jmp
mov
repnz
lock
icebp
inc
push
insb
xor
pop
xchg
out
jae
stc
sub
nop
jbe
sub
cltd
add
mov
outsl
pusha
pop
shll
popf
and
in
mov
mov
out
imul
cmp
mov
pop
push
sub
dec
arpl
sub
in
sbb
cmp
mov
enter
scas
das
and
ss
in
daa
xchg
xchg
ja
sub
add
pop
or
pop
clc
pop
pushf
xchg
jge
mov
repnz
test
inc
lea
push
in
iret
mov
scas
outsb
mov
xchg
dec
cmp
add
stc
mov
in
dec
inc
movsl
fs
mov
pop
mov
xor
dec
lock
add
test
imul
mov
inc
dec
addr16
add
add
add
or
inc
adc
ret
cmp
shrl
adc
sbb
xchg
and
cmp
cmp
or
pop
push
lea
sti
iret
ret
hlt
in
xor
or
adc
fmuls
pop
sub
mov
xchg
or
cwtl
popa
gs
not
into
into
movsl
test
cmp
pop
xlat
aad
push
xor
mov
inc
fsubrs
xchg
or
dec
mov
imul
cwtl
js
lods
xor
jp
cmp
pop
cld
scas
dec
mov
xchg
push
aad
cwtl
mov
inc
bound
or
cmpsl
sbb
mov
sbb
or
stos
outsl
mov
pop
pop
or
push
mov
mov
and
or
inc
cmp
mov
cmpsb
cmc
imul
mov
test
sbb
scas
arpl
push
mov
sub
mov
jg
jle
iret
nop
lfs
pop
pop
fs
es
data16
insb
daa
mov
repnz
test
add
add
add
je
sbb
mov
push
jae
ja
lock
or
popf
adc
jge
xor
inc
jp
adc
nop
push
arpl
add
push
cmp
lahf
mov
xchg
loope
dec
mov
pop
sbb
push
loopne
or
cmp
cmp
adc
mov
lea
add
mov
rclb
aad
fdivs
mov
mov
je
sahf
jg
ret
into
pop
pop
xor
arpl
sub
rorl
jl
cwtl
repz
dec
test
and
andl
mov
iret
push
mov
fmull
push
push
sub
js
push
push
cwtl
jne
lret
je
pop
ret
or
add
push
mov
enter
cmpsb
push
adc
and
push
xor
mov
cmp
lods
sbb
clc
mov
fldcw
add
popa
add
add
add
dec
mov
jl
dec
inc
sbb
decb
das
fbstp
xchg
insl
aad
add
movsb
jmp
mov
repnz
xchg
inc
int
push
cmp
cld
sub
xor
mov
fsts
ds
and
call
jmp
loopne
add
cmp
in
mov
gs
adc
mov
movsl
aam
lods
jecxz
std
lahf
cmpsl
or
pusha
callw
addr16
insl
sbb
mov
inc
or
pop
cwtl
and
into
aad
setge
dec
xor
fs
xchg
and
sub
decl
nop
ljmp
lods
sti
push
popa
jge
cmp
and
lret
imul
sub
mov
sbb
push
js
test
adc
dec
push
push
test
cmpsl
not
xchg
in
dec
outsl
cmp
mov
dec
mov
push
jge
xor
ret
push
outsl
repz
push
sti
cmpsl
enter
mov
xchg
xor
add
add
add
ffree
dec
shll
enter
mov
in
xor
xor
jecxz
lret
push
cmc
rolb
sbbl
add
insb
pop
push
pop
inc
xchg
call
xor
ds
or
xor
movsb
mov
dec
into
pushf
fwait
mov
test
fcmove
sub
xor
pop
xchg
mov
loope
mov
inc
push
popa
rolb
loopne
movsl
addr16
push
dec
loopne
ret
cs
cwtl
pop
aad
pop
xor
scas
xor
inc
lea
cli
lret
cmpsb
mov
fdivs
push
pop
loope
hlt
jmp
and
test
lds
mov
and
popf
gs
in
pop
pop
xchg
xchg
jle
xor
hlt
xchg
aam
and
es
add
jmp
lock
cmc
mov
nop
inc
inc
mov
test
std
aam
sub
imul
repz
add
push
and
std
mov
dec
push
pop
cmp
xor
add
add
add
or
inc
jo
ret
xor
mov
test
xchg
add
loope
mov
xor
outsb
jns
dec
insl
cmp
adc
or
dec
adc
test
push
fcoms
movsl
jg
sub
lcall
or
popf
outsb
js
cmpsl
pop
cmp
push
leave
into
xchg
mov
repnz
sub
lret
push
push
dec
xor
mov
pop
es
inc
je
sub
outsl
and
jae
aad
mov
mov
inc
shll
iret
mov
sbb
or
repnz
je
mov
mov
hlt
pop
movsb
dec
fadds
sahf
sbb
or
and
push
xorb
xor
cwtl
leave
sarl
mov
fstpl
mov
fxch
mov
sub
hlt
mov
fidivrl
cmp
dec
sahf
add
dec
dec
js
jge
jns
add
and
jecxz
and
lcall
add
add
add
sub
lret
sub
les
or
loop
nop
rcl
cmpsl
aad
in
dec
or
data16
repnz
sarb
mov
ljmp
aas
dec
lahf
xor
ss
arpl
and
lea
test
iret
sahf
call
into
inc
xchg
nop
pop
stos
push
lahf
iret
or
dec
cmpsl
movsb
out
call
rorb
mov
ret
sub
xor
jne
aam
push
popf
fidivs
mov
push
lock
leave
xor
and
loopne
lcall
es
mov
dec
fwait
lcall
int3
sbb
dec
sahf
prefetch
xlat
xlat
imul
or
cmpsb
test
leave
cmp
pop
outsl
xchg
mov
cs
pop
ficomps
fs
out
pop
sbb
shrb
int
push
int
cmp
fdivs
ds
push
fisttps
fiaddl
ret
ficomps
cmp
lahf
rolb
add
add
add
xchg
cld
scas
jo
cmpsb
std
fcomp
dec
lret
cmp
dec
mov
out
and
fldl
xor
negb
je
xchg
mov
scas
mov
aam
inc
mov
outsl
jg
and
setle
jns
ror
and
mov
sub
addb
popa
lock
cmc
ja
xor
add
insl
mov
sbb
push
xlat
sub
cmp
rolb
je
jmp
addb
call
dec
inc
dec
imul
mov
test
insb
jno
in
mov
shlb
mov
lcall
movsb
push
repz
xchg
int3
jg
inc
stos
adc
push
cmp
lds
cmp
jle
dec
fdivs
xchg
mov
fsubl
loopne
cld
fisubrs
or
adc
inc
lcall
xchg
push
mov
aaa
call
scas
jmp
add
arpl
ja
sub
add
add
add
add
dec
pop
xlat
lret
stc
lea
jb
aaa
xchg
icebp
in
sub
lcall
lahf
lods
lcall
in
popf
lret
test
xchg
repz
inc
fsubrl
outsb
jb
push
stos
or
sahf
or
mov
jle
cmpb
sub
or
lret
int3
fs
bound
ficompl
dec
call
rcl
jle
pop
jmp
test
and
and
data16
sub
mov
sbb
xchg
outsl
push
test
add
xchg
push
sub
xchg
out
sub
mov
and
jae
mov
in
jmp
lcall
aam
pop
mov
mov
pop
dec
rol
mov
fsubrs
nop
fcmovnb
mulb
scas
push
outsl
add
imul
mov
lock
mov
or
mov
xor
add
add
add
push
mov
in
and
push
dec
sbb
mov
xchg
enter
lret
lcall
sub
adc
and
ja
pop
sbb
mov
fmul
mov
and
fstpt
dec
pop
add
cmpsl
mov
insl
dec
push
inc
add
push
leave
xor
call
jl
fnsave
inc
push
mov
jbe
insb
adc
rcrl
jo
xor
cmp
enter
fsubr
push
subb
cmp
xchg
mul
dec
call
jo
pop
dec
jl
and
daa
add
daa
repnz
addr16
ljmp
sbb
inc
mov
lods
jbe
inc
jo
adc
jp
push
pop
das
out
aam
push
xor
test
leave
flds
in
aam
ja
stos
xchg
mov
push
pushf
stos
arpl
nop
jecxz
and
fisttpl
push
fwait
sbb
add
add
sti
pop
jge
neg
hlt
add
cmp
add
add
add
push
lcall
out
pop
ss
pop
pop
add
mov
xchg
push
sbb
push
test
dec
ret
adc
lods
inc
sub
test
cwtl
pop
inc
sarb
stos
fs
sub
push
fists
mov
xor
mov
lcall
adcl
aas
movsl
sub
sub
mov
cltd
pop
push
sub
mov
inc
and
mov
clc
adc
cmp
enter
mov
aam
addr16
sub
jge
cmc
cmp
mov
mov
xchg
fisttps
push
push
outsl
nopl
xchg
insb
inc
push
mov
mov
pushf
jmp
xchg
dec
mov
xchg
lods
loope
movsl
loopne
sahf
pop
addl
adc
popf
xor
int3
push
push
out
loopne
add
add
fsub
std
in
popf
in
stc
jmp
stos
out
dec
add
add
add
jae
hlt
jge
pop
mov
push
popf
lods
xchg
hlt
fiaddl
cmpsb
sti
and
mov
mov
inc
scas
outsl
cltd
dec
pop
sbb
dec
out
outsl
pop
stos
add
cld
mov
sbb
or
xor
pop
push
insb
cmc
mov
mov
mov
or
or
xchg
jg
daa
into
xchg
sub
scas
cmpsb
in
inc
outsb
pusha
inc
xchg
int3
aam
insb
cltd
subl
jns
inc
pop
jecxz
mov
lret
mov
cli
bound
fstpl
sahf
std
push
pop
sbb
xchg
aaa
daa
addr16
push
icebp
ss
aaa
sub
mov
movsl
mov
jmp
xchg
ret
les
lods
ret
sti
xchg
jmp
mov
dec
idivb
inc
mov
fs
incl
sub
std
mov
dec
or
pop
jp
jnp
sti
xchg
jle
jp
lods
mov
aaa
add
add
add
xor
std
and
aas
cwtd
sbb
int
mov
inc
xor
push
movsb
xchg
cmp
mov
xlat
mov
shrb
xchg
mov
push
sub
sbb
lcall
icebp
cli
iret
jl
pop
or
nop
stc
and
jl
inc
scas
loope
fsubs
xchg
xor
xchg
dec
pop
jge
aaa
aaa
popf
jno
je
jge
addr16
pop
fcmovnu
mov
pop
or
mov
pop
nop
outsl
pop
dec
jnp,pt
sub
testb
inc
xor
repz
inc
stos
xchg
jne
and
jg
xor
mov
aaa
sbb
test
dec
push
pop
shr
ret
out
lahf
pop
mov
mov
sti
pop
ret
insl
push
xor
and
imul
mov
sub
push
mov
je
fiaddl
movsl
xchg
adc
movsl
add
and
mov
es
lods
push
clc
mov
push
sti
decb
mov
nop
cmp
add
add
add
mov
sub
cmpsl
or
adc
dec
fisttpll
addr16
pop
in
mov
mov
pusha
inc
fwait
test
cltd
shrb
inc
cmpsl
call
adcl
cmpsl
neg
mov
cs
inc
stc
mov
shlb
lea
out
or
rcrl
sbb
decl
out
push
xor
add
xlat
stos
pop
leave
outsb
xor
out
cmp
xchg
xchg
push
stos
nop
aam
dec
cmp
movb
popa
sarb
loop
popf
jo
mov
into
xor
in
shlb
outsl
mov
jne
adc
add
or
and
and
dec
and
std
call
pop
pop
pushl
or
pop
sub
mov
add
sbb
xchg
dec
scas
cmc
xor
adc
pop
adc
add
add
cmp
xor
hlt
inc
loopne
int3
cmp
add
add
add
mov
cmp
xchg
inc
test
push
stos
mov
adc
dec
dec
jle
and
arpl
stos
sub
ljmp
cmp
addr16
dec
jnp
lea
sub
dec
fdivp
loope
int
iret
sbb
cmp
sti
mov
jbe
mov
loop
fcompl
sarb
and
xchg
das
cmc
and
xchg
cmp
xor
push
imul
lock
jle
inc
push
cld
iret
xor
test
leave
jp
sbb
mov
sbb
iret
jle
orl
lret
sbb
xchg
repz
fnstsw
std
loope
mov
std
and
imul
sub
mov
push
mov
xchg
sub
mov
cmp
xor
rcrb
icebp
or
cmp
dec
fsubs
xor
push
adc
add
xchg
inc
inc
divb
add
add
cmp
jge
stos
lea
shrb
leave
daa
cmp
add
add
add
repz
xor
ja
add
movsb
xor
xchg
or
mov
test
testl
out
test
jne
pop
adc
jmp
push
mov
inc
imul
xchg
adc
add
and
cmp
push
popa
xchg
insl
out
cltd
leave
dec
test
inc
mov
pop
adc
mov
mov
pop
jle
jg
add
inc
xchg
cmpsl
in
es
addr16
stc
add
mov
cwtl
xor
jnp
cmpsl
jecxz
pop
sub
xchg
lea
sti
push
push
mov
int
das
cld
jmp
aas
cmp
out
pop
mov
sbb
add
and
movsb
and
std
xchg
inc
push
sbb
outsb
leave
mov
xchg
inc
enter
pop
xchg
mov
popf
or
aas
push
sahf
movb
gs
sbb
mov
xchg
dec
pop
stc
sbb
addl
sbb
lahf
incb
sldt
add
divb
rclb
nop
lcall
cmp
add
add
add
mov
mov
and
lea
loopne
fistpl
bound
arpl
fadds
imul
mov
add
add
xchg
ss
in
sbb
stos
and
cld
mov
repnz
xchg
cmp
loopne
push
out
mov
xchg
dec
cltd
sub
dec
sbb
mov
cld
or
cmp
push
jns
jl
cmp
nop
mov
push
xlat
mov
cltd
cmp
add
push
xchg
or
js
sub
sar
pmaxsw
mov
jae
xor
lcall
aaa
hlt
in
sub
jmp
dec
push
xchg
dec
sub
pushl
xor
scas
out
daa
cmpsb
inc
pusha
lcall
xor
scas
aaa
xchg
shlb
lods
pop
push
lret
jmp
sub
idivl
cltd
lods
jnp
mov
test
add
add
jbe
idivl
or
or
add
add
add
iret
pop
in
daa
lock
cmp
jg
jbe
call
addr16
inc
cwtl
das
lods
inc
dec
pop
lret
imulb
call
rcrb
stc
adc
adc
add
insb
loopne
daa
xchg
xchg
dec
aad
lcall
cmp
in
outsb
test
jle
in
dec
ret
out
frstor
xchg
scas
pop
cmpsl
xor
sarl
xchg
out
or
pop
mov
popa
mov
fs
clc
lcall
and
xchg
push
adc
mov
or
es
aam
inc
cmp
xchg
sahf
and
jnp
ror
les
stos
mov
mov
xchg
int
adc
push
loop
or
lock
mov
jp
dec
lret
add
dec
aaa
outsb
push
lcall
sub
adc
test
je
push
jp
mov
outsb
jnp
dec
and
addr16
xchg
flds
inc
lock
add
add
outsb
sub
stos
fs
jmp
leave
aas
xchg
pop
das
xor
add
add
add
lret
xor
repz
stc
mov
fs
stos
lods
in
adc
jne
push
clc
and
call
cmp
push
call
lret
push
or
push
sbb
inc
icebp
jecxz
or
dec
addr16
loopne
mov
cmp
out
adc
add
ss
test
cmp
fs
push
out
hlt
imul
stos
or
sbb
enter
mov
mov
adc
pop
int3
xchg
jbe
fiadds
jmp
adc
aas
je
leave
jp
ret
mov
and
add
xor
mov
sub
add
aad
arpl
or
dec
das
ljmp
pop
xorb
test
pop
push
jbe
fistpll
gs
jmp
sarl
sbb
push
add
jmp
jno
js
sub
mov
daa
dec
mov
cmp
stos
addl
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
test
add
add
add
nop
or
xorl
push
dec
repz
cmpl
mov
sub
jb
jecxz
cli
push
shrl
push
mov
lock
xchg
cmpsl
das
jns
lea
xchg
add
push
inc
filds
and
std
push
cmp
aas
cli
cwtl
pop
sbb
and
xlat
idivb
aad
and
push
pushf
add
lret
mov
cmp
or
popa
and
divl
sbb
mov
inc
add
scas
lods
insb
inc
xchg
or
jne
mov
jns
mov
mov
lods
loopne
push
out
dec
nop
lahf
les
out
shll
jecxz
into
cltd
iret
push
fldl
std
enter
vphaddbw
ror
jmp
pop
in
adc
sub
sub
cmp
clc
mov
and
xchg
inc
inc
rorl
leave
aam
jl
add
sbb
jnp
jnp
cmp
movsb
push
sbb
pushf
cmpsl
jo
aas
add
add
add
mov
inc
add
outsb
out
arpl
dec
mov
mov
je
jle
std
inc
jmp
into
test
inc
mov
fisubrl
push
mov
idivl
cmp
xchg
in
xorb
out
jmp
cld
dec
jge
cmp
sub
addr16
repnz
pop
sbb
insl
jl
push
jle
and
out
pop
pop
push
sti
mov
leave
adc
inc
outsb
dec
outsb
cli
pop
push
lods
testl
leave
je
dec
xchg
mov
lds
jb
mov
sbb
mov
iret
mov
testb
push
mov
xor
rcrb
cmp
mov
jo
or
shl
addr16
jb
mov
mov
or
mov
repz
mov
push
cltd
adc
pop
pop
lcall
push
push
clc
mov
mov
and
dec
and
add
add
adc
jmp
in
test
add
add
add
fcoms
mov
cmp
jle
xchg
out
std
daa
jmp
adc
out
mov
lea
jle
add
out
cmpsb
push
lods
pop
add
xchg
xor
jle
or
mov
inc
orl
push
xor
dec
cmpsl
cld
and
mov
ret
xlat
inc
orb
xchg
pop
insb
nop
mov
sti
add
or
dec
and
inc
jecxz
cmpsl
mov
xor
rorl
ss
loopne
fs
popf
dec
pop
xchg
push
sbb
call
in
ret
popa
dec
sbb
pop
hlt
jmp
push
sub
mov
pop
pop
or
lea
mov
pop
mov
stos
inc
pop
loopne
push
inc
sti
nop
aam
jge
test
add
mov
call
add
insl
je
pop
jle
and
das
cmp
lods
repz
mov
and
inc
add
add
add
loop
js
cmp
fwait
lds
inc
ret
add
loop
xchg
pop
orb
mov
mov
sub
lcall
jne
or
xor
lcall
jg
lret
sti
sbbl
cmp
cmpsb
sti
or
shl
cmc
push
test
and
adc
subb
ss
ss
in
xor
movsl
mov
jnp
les
mov
mov
xchg
stos
pop
shl
mov
xor
or
sbb
sti
add
adc
inc
mov
xchg
sub
lahf
or
mov
push
xlat
arpl
je
out
sbb
adc
xor
jl
xor
add
mov
sub
jle
pop
inc
mov
mov
std
mov
sbb
hlt
inc
dec
pop
out
inc
jne
scas
xchg
loopne
mov
cld
mov
aas
daa
push
cld
push
std
jmp
dec
push
adc
add
add
add
test
rorb
ret
pop
bound
push
jbe
xor
sbb
leave
fiaddl
or
in
inc
cmp
push
test
jns
repz
sub
push
popl
call
test
lods
lcall
add
mov
push
rclb
call
pop
adc
mov
jp
sub
xor
shrl
jmp
mov
insl
aad
test
cmp
clc
mov
or
ds
jecxz
std
insl
and
filds
mov
mov
loope
lods
ficompl
stc
pop
adc
std
pop
test
dec
cmp
ss
fcoml
push
pop
fcmove
cs
mov
mov
fwait
jno
js
pop
xchg
push
dec
popf
bt
cmp
push
pop
mov
pop
push
test
stc
movsl
xor
xchg
xchg
and
add
inc
cmc
mov
add
add
add
sbb
dec
push
out
aad
insl
call
add
add
add
adcb
mov
mov
imul
jp,pt
mov
repnz
add
xchg
sbb
dec
icebp
mov
push
mov
mov
push
jne
mov
ret
popa
out
sub
mov
sbb
shll
insb
inc
testl
adc
xchg
pop
pusha
mov
pop
mov
mov
movsl
and
sub
sti
xlat
xchg
ja
in
adc
hlt
outsl
push
test
inc
stc
xor
std
test
pop
out
xor
je
xchg
jbe
and
in
jg
sti
xchg
mov
pop
ja
cwtl
mov
inc
int3
in
icebp
xchg
addr16
fldl
test
push
mov
mov
inc
js
bound
leave
or
jecxz
and
adc
pop
mov
jp
bound
push
cmp
ja
stos
add
push
mov
or
cmp
mov
add
add
fsubl
movsl
sbb
push
imull
mov
ret
push
jae
cmpsl
pop
aaa
cmp
xchg
test
push
dec
dec
in
pusha
cmp
sbb
pop
or
insl
lret
movsl
push
roll
sub
enter
repz
push
sbb
stc
mov
lods
or
jbe
pop
pop
sbbl
out
mov
inc
jge
lods
lock
cmc
pop
js
and
cld
mov
cs
js
mov
sahf
popa
mov
out
call
xchg
les
sbb
lock
lcall
lahf
inc
lea
cmp
push
mov
ss
sti
jp
inc
ja
xchg
fcmovu
push
jne
pushf
popf
shrb
jmp
arpl
aam
cmp
push
sub
or
push
cmp
das
arpl
aas
fisubl
sbb
out
data16
rorb
mov
fsubs
mov
pushf
push
jmp
or
sub
mov
cs
jp
add
add
jg
xchg
orl
mov
add
add
mov
mov
xor
xchg
cmp
stos
cwtl
jle
in
orb
adc
daa
filds
ljmp
lea
lahf
shl
sub
or
cmc
inc
inc
cltd
xlat
pop
addl
sbb
adc
into
xchg
cmp
mov
dec
mov
shr
mov
pop
add
les
or
mov
movsl
rcl
pushf
jae
lret
pop
push
and
or
xchg
shrl
jge
and
enter
sbb
inc
fistpl
pushf
or
push
cmpsl
mov
pop
jns
repnz
enter
xlat
xor
insb
test
icebp
imul
imul
pop
outsl
in
jge
sub
sti
aad
mov
negb
add
into
cmp
mov
leave
pop
out
cmp
fstl
push
cmpsl
iret
popf
test
push
mov
sub
add
add
push
dec
lret
jmp
imul
aaa
je
pushf
sub
add
add
add
xchg
mov
cmp
test
mov
orb
mulb
sub
loop
pop
push
xchg
aad
lcall
xchg
adc
push
lods
in
push
mov
cld
das
jg
pushf
aas
adc
movsl
mov
ds
mov
jnp
ljmp
bnd
fldenv
imul
cmp
ja
cmp
mov
sub
adc
mov
out
mov
jns
ror
out
xor
xor
enter
aad
sub
lods
push
subb
in
xor
mov
lcall
push
test
cmp
fists
mov
push
out
jmp
or
mov
out
test
cmp
into
loope
sub
loopne
add
movsb
sbb
clc
fs
inc
cmp
pop
pop
icebp
lds
cmc
cwtl
xchg
push
sub
inc
add
add
add
pop
outsb
in
jbe
ficoml
sub
add
into
inc
sub
cs
push
popf
lods
in
pushf
pop
inc
pop
xchg
lret
and
test
mov
or
inc
mov
pop
insl
out
mov
mov
mov
shrl
loopne
add
loop
xor
cmp
popa
add
adc
cmp
pop
jle
into
xor
xchg
push
xor
sbb
mov
dec
imul
shlb
jb
adc
adc
or
mov
ds
out
mov
push
mov
cmp
and
jg
adc
ret
push
cmp
xchg
or
mov
std
xchg
mov
repz
pop
mov
push
sub
es
sbb
add
dec
cltd
int
cmp
sub
out
mov
jmp
sub
jecxz
outsb
cmpsl
jbe
cwtl
push
in
int3
or
add
add
jns
xor
jg
test
add
add
add
pushf
lret
jecxz
inc
mov
push
sti
mov
adc
or
add
std
sbb
pop
or
adc
push
testl
push
outsb
hlt
sub
sbb
inc
out
cmpsl
adcb
shlb
rclb
cli
cmc
sbb
lcall
mov
xchg
imul
jnp
mov
sbb
cmpsb
arpl
sbb
sub
add
push
je
or
nop
or
mov
pop
xchg
fdiv
shl
jo
lock
adc
mov
std
mov
dec
int
daa
imul
xor
xor
adc
and
adcb
aaa
cmpb
add
std
hlt
out
es
movsb
int
pop
les
and
stos
jb,pt
mov
pop
mov
xor
es
push
ds
cmp
imul
js
ret
jg
decl
rol
loopne
add
add
add
add
nop
ret
push
clc
mov
test
add
inc
adc
rorl
sbb
xchg
jne
sti
mov
add
mov
cld
repz
lds
xor
and
or
enter
xor
sub
push
adcb
push
movsb
call
fwait
adc
add
jns
les
movb
xchg
push
add
or
jmp
or
xor
das
js
sub
adc
adc
pop
das
and
outsl
inc
ss
repnz
pop
pop
xchg
or
xor
ficomps
les
fstpt
inc
xor
mov
iret
inc
and
andb
jbe
cmp
loope
fildll
lret
pop
and
dec
cmp
addl
rorl
inc
out
sbb
mov
hlt
stos
imul
xor
shl
test
sbb
cmp
sbbl
add
add
das
mov
out
aad
jne
outsl
addr16
add
add
add
push
jmp
inc
lods
lret
lret
insl
fadds
shll
push
xchg
out
push
or
pop
in
adc
adc
dec
lahf
xor
add
or
fstps
jno
sti
sub
mov
test
sbb
add
push
xchg
push
pop
sbb
repz
cmp
js
imul
in
rorl
std
cli
rep
out
mov
adc
bound
add
lcall
fldt
xchg
mulb
or
mov
sub
sbb
test
push
nop
out
push
sub
lahf
scas
adc
lret
jecxz
or
fnstenv
repz
pop
loope
push
or
push
sbb
fidivrs
mov
scas
mov
faddl
xor
int
outsl
sbb
cmp
std
push
pop
loopne
and
xchg
and
inc
shll
fsubs
sbb
inc
icebp
hlt
gs
dec
adc
and
add
add
push
push
std
notl
out
or
in
push
cmp
shll
sub
xchg
insl
les
imul
cmp
lahf
sahf
mov
shlb
repz
cmpsl
cmc
xchg
xchg
mov
or
ja
push
mov
fildll
push
pop
xor
pop
pop
sahf
das
adc
cmp
jecxz
aad
dec
adc
shlb
outsb
ret
mov
or
dec
loop
pop
fldenv
add
call
xor
lock
xor
dec
aad
add
pop
daa
pminub
leave
inc
fcomps
movsb
cltd
repnz
sarl
push
push
add
dec
push
sbb
in
mov
test
sub
aad
es
scas
mov
push
loopne
jae
iret
cmp
mov
xor
add
adc
push
je
mov
lock
xchg
mov
lret
add
xlat
push
add
add
aas
gs
pop
repnz
dec
add
add
add
xchg
icebp
push
push
jb
mov
cltd
pop
xchg
je
jo
sbb
shll
push
dec
insb
inc
push
mov
push
add
mov
pop
mov
lea
inc
add
add
and
rorl
mov
int
cmpb
jge
dec
arpl
push
inc
push
cs
insl
insl
lods
std
and
test
loopne
int3
xlat
mov
adc
sbb
inc
pop
inc
test
mov
int3
lret
xor
or
add
xorl
xor
mov
jnp
lods
ljmp
addr16
jmp
cwtl
les
xchg
pop
jbe
jg
fisubrs
and
push
push
out
or
jb
pop
js
dec
sub
push
imul
and
scas
insl
les
mov
cmp
jo
adc
fists
icebp
mov
js
jge
mov
add
out
fisttpll
lock
ret
dec
add
add
add
icebp
jge
inc
mov
call
xor
aaa
sub
adc
inc
mov
mov
and
arpl
inc
push
jo
pop
fsubr
xchg
jno
or
xchg
push
gs
in
push
cs
or
push
aad
movsl
test
in
lods
sub
mov
popf
and
dec
stc
outsl
sti
divb
jp
dec
data16
and
add
push
cs
xchg
ss
dec
nop
sbb
jne
add
pop
in
jno
ja
push
and
push
test
testb
xchg
sub
lret
mov
or
xlat
gs
or
add
mov
jmp
inc
loopne
mov
mov
adc
mov
xorb
cmp
das
pop
and
mov
iret
jg
mov
data16
jno
inc
jl
loopne
testb
add
fildll
mov
ljmp
add
add
add
pop
in
sub
jns
or
outsb
or
test
mov
xor
inc
pop
test
pop
pop
loop
adc
fstps
adc
mov
pop
pop
int
fwait
nop
xchg
ja
pop
push
jnp
xchg
ret
lea
lret
out
and
sarb
orb
aaa
dec
aam
lock
jbe
jae
dec
xor
add
leave
jmp
lret
ss
sbb
xchg
fsubrl
pop
jg
pop
movl
mov
and
inc
fistl
mov
cmpsb
jg
xchg
cmp
xchg
pop
xor
pop
movd
bswap
int
cmpsl
gs
pop
mov
and
inc
pushf
cmp
sub
bound
mov
dec
sarb
sbb
pop
xor
out
push
ficomps
add
add
jmp
out
aas
jo
sahf
jb
dec
inc
daa
addr16
add
add
add
push
xlat
add
xorb
into
mov
ljmp
mov
addr16
cmp
js
sub
pop
insb
jl
and
ret
dec
mov
and
mov
push
push
xor
mov
rolb
jns
jg
or
test
jae
mov
sbb
fcoms
gs
sbb
psllw
pop
jmp
cmpsl
or
pop
aas
dec
jle
out
sub
cmp
fcomp
push
jae
outsl
out
mov
nop
out
xchg
stos
gs
fsubp
js,pt
or
insb
aas
lahf
mov
xchg
addb
in
movsl
jnp
fidivrs
imul
jo
xor
decl
pop
daa
std
fidivl
enter
in
dec
mov
sbb
in
push
cmp
out
cmpsl
xchg
jns
call
jle
cltd
sarb
imul
scas
cmp
aaa
sarb
cmp
imul
out
mov
mov
xor
add
add
add
add
decl
sub
lock
push
adcb
ret
jecxz
rorl
or
adc
push
cld
and
mov
cmp
and
iret
sbb
xor
repnz
pop
jo
mov
xchg
lcall
dec
lock
es
out
push
pop
out
jl
cmp
jnp
mov
inc
daa
ret
in
ret
and
cmp
xchg
scas
cld
push
inc
fstpl
jae
divl
out
mov
les
ss
push
nop
inc
sbb
push
xchg
lods
jmp
mov
stos
rorb
dec
adc
sub
jne
lret
cs
dec
xlat
icebp
mov
add
xor
dec
inc
xchg
pop
aad
loopne
sub
jb
jns
sub
out
mov
das
out
mov
mov
movsl
jno
jb
cmp
insb
js
add
dec
stc
mov
ljmp
addr16
add
add
add
arpl
add
dec
and
rolb
pop
cmp
jp
mov
adcl
dec
xor
cltd
xor
popf
fcompl
in
clc
pop
jg
pop
rclb
mov
les
mov
es
mov
adc
xchg
stc
shl
cmc
or
ret
mov
int3
xchg
mov
push
sbb
ja
addr16
fsubr
ret
mov
insb
pop
fs
cltd
test
mov
push
jbe
pop
xchg
push
sbb
jl
sub
sub
bound
add
decl
inc
lret
cltd
push
test
shll
cmpb
jp
mov
push
xchg
dec
stos
xor
loope
pop
jecxz
fs
push
push
xchg
loope
mov
sbb
sbb
ja
bound
out
inc
cmp
jg
add
out
jmp
jbe
iret
inc
pop
dec
inc
push
xchg
inc
nop
pushf
testb
add
add
jg
cld
lcall
mov
add
add
into
imul
jecxz
imul
aaa
popa
icebp
mov
inc
cmpsl
jmp
sahf
xchg
clc
popf
fnstenv
sub
pop
sbb
jge
stc
add
xor
pop
shlb
mov
iret
or
adc
movsl
inc
out
jl
cmpsb
jnp
mov
rolb
and
mov
insb
data16
sub
es
add
pushf
lea
in
mov
cltd
mov
fsts
xchg
pop
fmuls
push
shlb
rclb
mov
shrb
out
insl
xchg
mov
sahf
loope
pop
mov
mov
dec
xor
mov
loopne
ljmp
stc
push
mov
repnz
stos
mov
and
dec
inc
mov
sub
sbb
xchg
outsb
mov
jmp
cli
rcrb
ret
shr
mov
mov
xchg
mov
pop
mov
sahf
addr16
add
add
add
not
cmp
sti
call
int3
cs
pushf
test
in
jo
push
out
fistl
sahf
jae,pn
imull
lods
adc
jmp
movsl
mov
or
mov
add
daa
in
fnstsw
mov
push
pop
subb
xor
mov
mov
mov
mov
call
movsb
mov
ss
hlt
aaa
pusha
in
push
pop
call
in
cli
and
add
or
inc
cmp
scas
mov
out
es
shrb
leave
movsb
jns
cmpsl
inc
loope
adc
hlt
daa
and
icebp
ret
pop
loope
mov
sub
sub
sti
push
jmp
sbb
mov
aas
cmp
sub
push
dec
das
sti
push
movl
push
insl
jns
ja
pop
xchg
fucomip
push
mov
jb
subb
lods
outsl
inc
sbb
iret
mov
jnp
or
mov
and
adc
addr16
add
add
add
jecxz
adcl
inc
pop
jge
add
lock
mov
cmc
aaa
sbb
sbb
cs
inc
xchg
or
dec
je
lods
mov
pop
lret
out
push
int
repnz
push
xlat
jle
pop
adc
movsb
and
imul
int3
movsb
push
loopne
cmp
xchg
cwtl
inc
addr16
imul
call
aad
push
mov
pop
sub
cmp
sbb
loope
lahf
mov
int
or
xor
sub
xchg
lret
shrl
mov
clc
data16
xor
add
or
mov
xchg
pop
shl
jb
mov
xlat
ret
popf
rcll
into
mov
push
icebp
xchg
movsl
clc
mov
push
sbb
mov
lds
cmpsb
mov
cs
leave
xor
mov
and
iret
addl
repz
add
add
sub
cmp
ret
or
rcrl
add
add
add
and
sysenter
or
filds
repz
in
loop
push
inc
movsl
mov
mov
ret
arpl
pop
xchg
test
sbb
xchg
shll
dec
push
mov
cmp
sbb
mov
enter
inc
aaa
push
add
and
imul
jp
xchg
js
daa
int
add
movsb
xchg
jae
divb
xchg
push
mov
sub
mov
xor
mov
sub
inc
out
xchg
icebp
xchg
loop
mov
xorl
cwtl
jge
add
mov
pusha
jmp
int3
inc
sbb
addr16
add
mov
stc
fwait
xor
dec
cmp
mov
mov
adc
add
dec
icebp
loop
jns
and
push
mov
sub
add
shll
dec
imul
sbb
std
adc
and
mov
cmp
or
push
shll
out
pop
pop
pushf
push
rcl
gs
addr16
add
add
add
mov
add
dec
add
addl
jnp
xchg
aad
loop
mov
cmc
ficomps
or
in
loope
adc
mov
jnp
add
mov
pop
or
push
scas
mov
sbb
jne
mov
mov
daa
mov
outsb
clc
mov
movsl
or
test
mov
jecxz
idivb
add
or
and
call
popf
sbb
mov
lods
into
scas
stos
lret
push
dec
and
add
or
xlat
out
or
mov
insl
in
bnd
outsb
ror
jne
das
or
pop
les
test
dec
test
rcr
jle
push
out
mov
rcr
sbb
inc
mov
popa
cmpl
in
popf
cwtl
stos
adc
fcmovb
jge
lds
mov
test
add
out
lcall
hlt
mov
icebp
mov
addr16
add
add
add
mov
popa
mov
mov
push
ljmp
cmpsl
ljmp
xor
adc
jp
push
fwait
mov
xor
cmc
mov
mov
aas
xchg
jae
push
inc
dec
mov
jp
pushf
sbb
leave
cmp
and
xchg
push
mov
sub
sahf
mov
pop
or
pop
lods
lods
testb
test
movsb
notb
jge
rcr
cmc
mov
mov
xor
fcomps
in
mov
xor
cmp
lret
bound
xlat
pop
push
stc
push
or
sbb
mov
scas
loop
xlat
iret
pop
dec
inc
cmp
mov
mov
xchg
jg
jns
xchg
js
insl
pop
dec
int3
add
ror
mov
mov
int
push
in
sub
pop
subb
inc
fs
rolb
mov
int3
pop
das
ss
cli
bound
imul
cmp
andb
add
add
add
inc
and
inc
in
iret
cli
iret
mov
bound
mov
insb
inc
xor
flds
and
inc
test
mov
cltd
jno
and
xchg
mov
aaa
or
jecxz
jne
mov
test
cmpsb
cmc
dec
pop
fwait
out
bound
je
jae
pusha
bnd
inc
inc
cmp
mov
scas
sar
cmp
fdiv
push
mov
imul
xlat
sub
lods
mov
cmp
ljmp
or
leave
lea
mov
push
xor
repz
fiaddl
mov
call
movsb
adc
jb
inc
inc
pop
rcll
cmp
popa
adc
jp
push
cwtl
repnz
orb
lock
cmp
inc
mov
and
test
and
push
xor
jp
in
pop
xchg
adc
nop
mov
fsubp
call
lret
je
mov
add
add
fwait
cmp
stos
sarb
addr16
add
add
add
mov
and
sar
testl
rcrl
lock
sub
test
pop
popa
iret
push
mov
popa
cmpl
sti
mov
cmc
xor
in
pop
addb
jae
sbb
rol
aaa
jge
std
mov
aas
push
xchg
lret
hlt
push
mov
mov
orl
mov
icebp
sub
sbb
add
adc
loope
mov
jae
ss
pop
in
cmp
imul
mov
outsl
ss
cmp
sub
jnp
mov
add
adc
cld
sti
mov
pop
in
dec
lods
mov
or
cld
inc
lods
mov
cs
or
arpl
pusha
jl
in
mov
lods
push
js
clc
add
jb
mov
aam
or
mov
sbb
jmp
mov
adc
add
add
clc
mov
and
hlt
pop
adc
addr16
add
add
add
int3
and
inc
addr16
dec
daa
sbb
iret
inc
mov
mov
std
cmc
outsb
addr16
sbb
out
pop
adc
nop
push
scas
and
fsubs
cwtl
and
xor
imul
mov
out
sbb
and
sub
or
clc
xchg
mov
inc
out
leave
cli
mov
imul
ret
mov
lcall
or
andl
mov
cmpsb
inc
cmpsl
pop
popa
cmpsl
jbe
xor
sarb
xlat
jno
mov
xor
jecxz
or
adc
sbb
push
rolb
mov
cs
popf
pusha
cmp
mov
pop
cmpb
jae
lods
or
xchg
scas
and
rcrl
and
cs
bound
pop
loope
out
lahf
mulb
mov
or
mov
xchg
mov
xchg
push
adc
or
stos
adc
scas
xchg
push
adc
out
mov
out
shlb
pop
add
add
add
out
jcxz
adc
pop
push
add
jecxz
aaa
and
adc
ss
mov
push
inc
sub
jl
test
mul
or
stos
iret
mov
mov
scas
ja
pop
or
xor
or
dec
fwait
xchg
lret
xor
adc
lods
add
push
jne
pop
add
pop
push
mov
mov
jno
stc
daa
xchg
imul
sub
inc
mov
inc
mov
dec
push
xchg
in
push
imul
cmpb
jbe
push
cs
in
lcall
enter
daa
mov
add
pop
xchg
mov
sti
into
jne
pop
and
daa
dec
clc
sbb
pop
mov
pop
jae
xor
add
jmp
cmp
fwait
ret
dec
pop
test
or
fdivs
mov
pop
add
add
add
sbbb
les
out
xor
scas
lret
xchg
cmp
fdiv
mov
and
out
in
sub
testb
xor
loopne
scas
sbb
cmp
out
mov
push
inc
lahf
jns
adc
leave
fcmovb
mov
and
fstpl
int3
pop
mov
sbb
inc
add
out
ja
rcrb
or
pop
lea
cmpsl
insb
or
inc
push
pop
stc
mov
jl
lods
jmp
iret
shl
jne
fistpl
xlat
icebp
cmc
lret
add
or
fstpt
lahf
and
es
and
hlt
mov
xor
jmp
pop
lods
mov
xchg
scas
and
bound
mov
adc
pop
mov
sub
outsl
adc
aas
push
push
int
icebp
adc
ss
pop
test
add
mov
and
das
cmp
pusha
add
movsl
sbb
pop
add
add
add
xchg
lahf
push
push
sbb
jmp
jb
or
fcomp
sub
add
test
rcr
and
insb
das
fildll
inc
xchg
push
ds
out
adc
notb
sub
cmc
xchg
ret
test
stc
add
pop
add
stc
loop
lret
pop
stos
loope
mov
or
xchg
mov
inc
mov
pop
inc
or
add
fisubs
mov
jmp
test
jp
out
dec
mov
loope
jl
mov
xor
push
push
sbb
push
cmc
aas
incl
adc
shrl
or
sub
push
ss
cwtl
xchg
dec
sahf
xor
cmp
in
push
sub
std
mov
dec
int3
shrl
int
jle
pop
shrl
dec
mov
push
mov
insb
fdivr
into
inc
int3
lea
idiv
sti
mov
daa
roll
stos
jne
aam
push
xchg
add
add
movsb
jae
jnp
mov
ja
mov
outsl
jns
addr16
add
add
add
pop
xchg
call
mov
xor
out
mov
push
pusha
leave
in
ds
sub
pop
icebp
fiadds
sbb
lds
adc
jecxz
mov
jecxz
test
jge
cmp
enter
xacquire
dec
jno
pop
or
xchg
and
ds
inc
clc
push
mov
scas
incb
les
jecxz
stc
and
push
inc
cld
les
mov
test
add
jmp
fwait
and
and
mov
jnp
sub
sti
or
push
jmp
jbe
pause
mov
ja
cmp
xchg
fcomip
jb
movsl
mov
and
sub
int
mov
jbe
cmpsb
mov
ret
rorl
mov
aaa
stc
outsb
mov
icebp
sbb
aad
mov
mov
dec
and
jne
out
rorl
ljmp
out
int3
xchg
cmp
add
xor
xlat
out
cld
jp
push
mov
pop
add
add
add
jg
clc
scas
xor
jecxz
sub
movsb
loopne
push
cmp
jl
lahf
jmp
add
or
mov
aam
mov
and
in
jp
add
mov
mov
or
test
dec
dec
jmp
or
jno
pop
pushf
jbe
xchg
mov
in
cmpb
inc
jns
pop
loope
inc
insb
jg
test
mov
push
jbe
adc
aaa
mov
movsl
icebp
aam
push
xor
xchg
lock
and
mov
adc
xor
ret
inc
pusha
scas
xchg
pop
adc
push
xchg
aad
lods
mov
adc
adc
jo
daa
sub
ja
fildl
pushf
shlb
pop
nopl
add
push
mov
sbb
jmp
jle
mov
popa
jp
arpl
mov
pop
mov
mov
jns
jns
pop
pusha
and
add
mov
mov
in
test
jge
pusha
add
add
add
pop
inc
and
add
loope
lods
xor
xchg
adc
roll
mov
stos
jge
xchg
je
xor
fdivl
mov
lods
pushf
sub
das
in
in
and
loopne
insl
ret
mov
push
sub
mulb
xchg
cmp
and
cmp
fwait
ss
fstpt
andb
cmp
aas
mov
movsl
and
dec
inc
mov
and
sbb
imul
dec
and
lret
idivb
mov
sbb
pop
sub
jns
pop
dec
cmp
sbb
dec
or
sub
push
inc
mov
mov
jmp
adc
ja
and
or
shrl
int
cmp
addr16
jmp
pop
ficomps
mov
out
adc
mov
jmp
mov
sub
ljmp
ss
int3
out
into
push
push
inc
lahf
mov
addr16
add
add
add
je
lock
ja
push
or
jb
pop
jb
ja
jns
and
in
ret
shrb
dec
and
movsb
jns
andl
insb
repnz
xchg
fsubrs
jp
sbb
test
jnp
push
pop
mov
dec
rolb
jnp
test
cmc
push
das
dec
dec
cmp
mov
dec
xchg
daa
icebp
scas
lds
add
jle
push
ss
enter
in
in
jmp
scas
inc
inc
inc
insb
mov
movsb
divl
lds
nop
clc
arpl
pop
add
and
stos
mov
cwtl
clc
sub
cwtl
mov
pop
jle
fsubs
pop
jne
xor
cmp
pusha
push
sub
sbb
xchg
aaa
xchg
jb
fmuls
aaa
cmp
lea
xchg
fnsave
inc
push
rcl
stc
jle
data16
xchg
dec
ljmp
add
xchg
inc
shl
xlat
mov
jg
or
bound
add
add
add
pop
std
lods
ja
dec
imul
sbb
nop
mov
je
sbbl
jo
adcb
mov
mov
jp
lcall
push
xchg
mov
lods
dec
push
mov
aas
pop
dec
loop
sub
xchg
loop
nop
pop
xchg
cs
and
repz
push
push
pop
jo
mov
pop
xor
adcl
and
cmp
mov
std
pushf
cmc
dec
mov
jnp
add
aam
pop
add
xor
adc
lea
xor
mov
and
lret
or
hlt
cmp
fdivrs
pop
add
mov
arpl
pop
lock
lahf
lret
arpl
mov
mov
std
rcrl
hlt
int
insb
pop
enter
xchg
jmp
adc
push
mov
cmp
aad
jle
arpl
aad
sub
add
lahf
pop
cmpsl
jne
mov
sbb
imul
add
xor
xor
clc
pop
sub
push
in
les
pop
loope
cmp
ljmp
push
movsb
lods
dec
in
iret
es
and
insl
rclb
aam
mov
inc
sti
sbb
inc
inc
pop
add
push
cmpsl
sub
ja
stos
push
mov
arpl
mov
addr16
jle
ret
push
dec
mov
xchg
jb
js
mov
push
aad
push
lea
inc
jae
add
int
xor
fildl
cmp
shrl
add
pop
push
test
mov
flds
std
daa
jo
or
jno
cltd
iret
stos
int
imul
rorl
xor
rcl
push
aaa
xchg
xor
push
int3
add
mov
gs
popa
add
lea
xor
leave
pop
js
in
lret
popf
jg
aad
and
je
jno
loop
dec
or
fadds
add
add
idiv
jg
sub
mov
add
add
add
gs
or
fcmovb
ret
das
inc
pop
ja
or
mov
push
fld
mov
sbb
adc
fnstenv
aaa
outsl
dec
pop
fists
fnsave
loope
mov
imul
fcmovu
add
sub
push
jbe
icebp
adc
mov
add
lahf
lret
jg
push
lret
pop
jbe
or
into
notl
or
or
xor
inc
cmp
xor
js
pop
test
lahf
jno
sbb
repz
fnstenv
add
xor
pop
dec
xchg
pop
jl
test
outsl
or
push
xchg
call
pop
popf
mov
repnz
or
xchg
fmull
dec
in
icebp
repz
dec
leave
das
call
pop
out
push
sbb
pusha
and
mov
xchg
push
hlt
cmp
dec
jl
mov
adc
push
and
push
lods
inc
pop
mov
fstps
adc
add
add
add
gs
in
push
sarb
mov
mov
xlat
xlat
jecxz
xchg
rcll
out
rcl
fs
pop
dec
insl
stc
dec
xor
add
add
or
leave
mov
ljmp
lods
push
stos
in
add
xchg
xlat
sahf
mov
ret
ret
movsl
jg
adc
in
inc
dec
push
ljmp
loop
mov
and
aad
dec
outsl
cmpsb
ss
jp
int
lea
scas
adc
insb
mov
mov
cli
inc
arpl
stos
sbb
mov
or
scas
cwtl
jns
mov
pushf
sarb
add
sub
mov
inc
ja
push
das
pop
pop
add
mov
jecxz
xchg
icebp
lock
mov
fisubrs
and
popf
add
ret
inc
nop
rcll
push
testb
das
xchg
es
cwtl
adc
or
push
push
lret
in
fwait
out
push
movsb
push
jo
mov
add
add
repnz
movsb
jle
arpl
mov
add
add
add
jle
mov
push
fcompl
push
add
pop
push
dec
cmp
test
sbb
mov
sti
aad
ret
xchg
jbe
mov
pop
ret
stos
mov
sbb
mov
in
cmp
mov
orl
push
rolb
sub
shll
push
inc
fs
sar
pop
loope
mov
pop
aaa
xchg
or
xor
sbb
jp
jmp
in
mov
mov
inc
add
add
add
fcmovnu
lea
out
stos
movb
mov
fistl
lahf
xor
adc
and
stos
xchg
cmp
mov
sbb
sub
xchg
and
scas
cmp
mov
out
outsb
pop
adc
lock
lret
lcall
mov
rcrb
ret
push
add
jmp
sub
pop
mov
add
add
add
fmuls
ljmp
shlb
mulb
daa
dec
loope
lods
mov
ljmp
rcrl
shrl
cmpsb
lret
out
lea
imul
inc
insb
xor
daa
lds
or
add
sub
mov
loop
mov
lods
loop
movsb
xor
repnz
lcall
cmc
adc
pop
sub
jns
addr16
into
or
fdivl
aam
in
enter
outsl
int
data16
icebp
rorb
test
inc
xchg
js
jb
icebp
sbb
jl
imull
push
popa
pop
popa
cmp
xor
outsb
push
and
out
ds
xchg
mov
es
out
jge
sbbb
cltd
jne
roll
scas
sub
hlt
sub
xchg
sti
scas
sbb
inc
and
int3
lock
inc
xor
loopne
xchg
sbb
push
push
sub
add
mov
or
xor
gs
add
add
mov
fnstenv
xlat
test
jmp
add
add
jg
insl
cmp
inc
fcmovu
jae
mov
dec
fdivrl
push
int3
fidivrl
call
pop
add
xor
mov
in
push
icebp
or
pop
loopne
cmc
je
xor
cltd
stos
or
jo
dec
pop
xchg
cli
fwait
iret
clc
sbb
rol
scas
sbbb
fisubl
xchg
mov
add
pusha
gs
xor
ds
shrb
pop
or
subl
jp
popa
lea
test
fdivr
or
or
mov
sbb
sbb
movsb
xor
dec
clc
pop
ficompl
xor
mov
lock
mov
jno
je
pop
cmp
ss
cmp
mov
jl
out
xorb
lods
mov
xlat
nopl
mov
xchg
fidivrl
mov
push
or
movsb
movsb
add
jbe
test
cwtl
popf
xchg
xchg
sbb
push
push
cwtl
movsl
cld
je
jbe
jns
sbb
sub
imul
add
std
add
cmp
mov
in
insb
adc
jo
stos
pop
arpl
adc
sbb
inc
pusha
out
arpl
jmp
jo
ret
xor
outsl
push
cmpl
cmpps
imul
or
aam
inc
test
push
mov
adc
xchg
ret
mov
cld
jo
cmp
lret
js
cmpsb
or
mov
pop
leave
mov
and
cmpsb
ljmp
jl
out
scas
int3
xchg
jmp
aam
add
nop
and
sub
cmc
mov
movsb
cli
mov
push
mov
add
cmpb
mov
lods
adc
test
aam
iret
iret
xchg
jnp
ret
mov
sub
in
xor
outsb
les
cltd
shld
aaa
dec
push
jecxz
repnz
out
push
insb
rcrl
push
add
movsb
jecxz
cmpsb
push
in
mov
addl
add
add
cltd
jmp
fildl
or
push
add
add
add
push
sub
push
imul
scas
push
xchg
xchg
movsl
imul
sbb
in
xchg
gs
mov
xor
xchg
xor
dec
lods
mov
ds
add
pop
jae
sub
inc
imul
leave
pop
jge
leave
lods
fisttpll
pop
inc
mov
jg
mov
xchg
pop
ret
xchg
sbb
pop
and
sbb
sar
xor
mov
or
mov
xchg
push
pop
cli
push
pop
mov
in
lods
mov
repnz
mov
mov
sbb
cltd
xchg
add
mov
imul
in
mov
mov
mov
add
sbb
push
shll
daa
sub
pop
mov
xor
jnp
fcomps
push
cmp
lods
cmpb
pop
icebp
daa
jne
fidivrs
mov
mov
push
jg
dec
xchg
dec
repnz
add
add
add
stc
mov
roll
cli
ficoms
adc
out
pop
lock
xchg
popf
lcall
ds
cmp
pop
inc
mov
test
inc
dec
adc
push
push
dec
add
jle
ljmp
push
sbb
push
cld
into
mov
pop
jle
ds
fsts
jecxz
subl
pop
push
xchg
dec
les
inc
or
jne
loopne
out
sub
pop
ss
imul
andl
sub
test
push
add
out
jnp
push
data16
mov
cmpsb
push
movsl
mov
scas
push
xor
sbb
adc
mov
sbb
mov
sbb
and
xchg
jmp
pop
loopne
movsl
das
insb
xor
jbe
add
jmp
test
cmp
fidivl
pop
jmp
mov
sbb
mov
xchg
pop
in
iret
mov
fucomip
push
insb
xor
xor
insb
add
add
add
scas
cld
lods
or
cmpsl
jae
adc
icebp
lods
daa
push
cmp
sbb
jg
loopne
inc
dec
mov
stos
jg
popa
test
inc
jecxz
push
fidivs
push
movsb
dec
cmp
test
dec
pop
and
sub
xorb
xchg
pusha
cmp
mov
pop
or
mov
or
cmp
nop
mov
adc
jns
mov
push
pop
xchg
cwtl
ret
shlb
lock
popa
ds
push
ljmp
mov
js
dec
dec
roll
dec
push
incl
pop
clc
into
lea
jns
and
je
dec
jnp
es
dec
sbbb
add
aam
push
mov
sahf
sarl
faddl
fisubrs
inc
repz
cli
rorb
xchg
inc
fcoml
mov
xor
jle
sahf
xchg
nop
push
aas
xor
outsl
addr16
xchg
clc
inc
repz
popf
popa
xchg
pusha
pop
add
imul
dec
out
iret
jmp
aas
in
push
data16
jns
insl
add
add
add
mov
jbe
aam
cmpsl
lahf
jne
pop
out
or
stos
pop
mov
or
mov
mov
loopne
and
xor
jnp
sub
or
das
test
movsb
pop
lcall
push
es
mov
scas
aas
adc
ss
jno
lock
cmp
xchg
cmp
pop
mov
pop
loope
sti
orb
push
dec
push
and
rcl
mov
cmp
add
mov
mov
xor
lods
out
mov
adc
into
xchg
mov
add
dec
imul
inc
test
pop
xchg
mov
and
insb
pop
out
add
cmp
cmp
mov
scas
imul
xchg
ficoms
xlat
mov
int3
inc
pop
add
lahf
mov
jge
cmp
ss
xchg
sub
das
andl
lods
stc
push
xor
addl
add
add
std
cmpsb
pop
dec
sub
sub
data16
add
add
add
in
push
xor
movsb
pop
stos
mov
and
push
add
cmp
and
testl
fsubrs
in
repz
cmp
mov
lahf
push
mov
jmp
bound
adc
data16
bound
in
xor
or
adc
fs
mov
sbb
jge
clc
jge
pop
add
pop
mov
mov
repz
in
cwtl
insl
mov
dec
xchg
push
arpl
and
ret
add
sub
xor
push
insb
mov
dec
mov
out
inc
popf
dec
cmp
mov
push
shrb
mov
sbb
imul
sub
fildll
mov
int3
pusha
outsb
mov
nop
inc
out
fstl
call
repnz
insb
ss
push
flds
fwait
xor
fnstcw
mov
inc
push
fiadds
add
add
neg
std
sub
dec
cmp
push
or
add
add
add
mov
inc
jecxz
js
ret
stos
jbe
js
pop
mov
sbb
out
jnp
hlt
fnsave
loopne
mov
cmp
xor
enter
cmp
sub
mov
cli
loop
test
outsb
addb
mov
push
sbb
pop
fldenv
outsl
cmc
sub
and
pop
dec
lods
outsb
repnz
lds
jns
movsl
out
test
push
loopne
push
jecxz
cld
mov
sub
cmp
mov
sub
clc
es
cmpsl
test
movsl
jmp
inc
cs
push
inc
xlat
es
push
pop
in
insl
push
movsb
call
loope
add
jbe
mov
inc
xchg
mov
push
gs
lods
enter
leave
mov
cltd
jl
add
push
rclb
push
jle
jns
adc
out
and
out
pop
cmp
push
ja
push
movb
add
push
subb
in
push
mov
or
jmp
addr16
add
add
add
fstpt
mov
out
dec
and
in
bound
test
lods
mov
xlat
mov
adc
dec
push
inc
cmpsb
ret
lock
xchg
dec
out
lds
mov
jecxz
gs
ja
sub
dec
or
in
stos
sub
lret
cmc
jge
in
mov
addr16
pcmpeqd
xchg
ljmp
inc
or
ss
mov
popa
mov
dec
xchg
cmpb
sbb
adc
sti
outsb
fldt
add
or
mov
xchg
mov
dec
xlat
add
jne
pusha
sub
lea
repz
rcrb
add
in
imul
cltd
or
je
push
mov
fistpll
xor
inc
inc
sbb
mov
in
xlat
pop
pop
xor
ss
aas
mov
adc
mov
pusha
int3
aaa
btc
in
mov
pop
pop
ja
lcall
out
sbb
hlt
fsubl
add
add
add
dec
mov
lahf
adc
push
sbb
lds
popf
lahf
dec
test
xchg
jne
jmp
mov
pop
add
mov
sub
jl
sbb
add
outsb
jg
popa
fdivl
mov
add
cmp
jns
pop
pop
popf
sub
lret
shrb
test
jg
adc
out
stos
inc
or
sbb
sub
inc
pop
jne
lret
ficompl
aad
fwait
rcrb
jmp
pop
mov
daa
inc
test
addr16
gs
cmp
repnz
out
xor
lret
es
fnstsw
jne
mov
mov
das
fwait
dec
xor
stos
pop
aad
cld
fcoml
jl
lret
mov
out
mov
push
iret
rcr
dec
aad
sub
push
sahf
cltd
and
pusha
imul
mov
sbb
and
mov
add
daa
sub
ja
mov
pop
int
addr16
add
add
add
sbb
sbb
push
mov
xchg
add
loope
push
movsl
xor
push
movsb
jp
notl
push
pop
repz
fnstenv
movsb
movl
sbb
xor
pop
leave
sbb
add
mov
cli
dec
jl
jae
in
dec
es
enter
push
add
push
xchg
pop
mov
inc
stos
scas
inc
daa
pop
dec
mov
mov
mov
stos
fs
repz
add
ja
jle
jg
add
fldl
movsb
xor
cmp
outsb
stc
imulb
pop
mov
sub
inc
xlat
aaa
decl
and
fisubl
cs
bswap
ss
mov
pop
adc
movsl
pop
rep
movsl
test
inc
mov
adc
arpl
and
xlat
jae
or
in
jg
lods
push
lahf
add
push
cmp
ret
mov
int
mov
jnp
outsl
cmpsb
loopne
inc
sub
addr16
add
add
add
push
xor
sub
xchg
mov
inc
sub
test
notb
jno
sub
add
pop
xchg
xlat
shrl
pushf
lock
add
ja
or
or
cwtl
imul
insb
add
in
insb
je
push
enter
fdivs
rol
or
pop
arpl
mov
add
data16
jmp
push
cmp
pop
or
lods
insb
or
pop
pop
and
aad
rorl
inc
push
sub
es
jge,pn
daa
popa
insb
xlat
ret
sbb
test
inc
jne
cmpsb
pusha
or
lahf
dec
cli
and
adc
into
add
cmp
pop
aam
outsb
pop
test
in
dec
je
pop
xor
mov
pop
lods
mov
inc
ret
jbe
xchg
and
mov
pushf
sbb
dec
enter
push
out
cld
call
add
cli
xchg
jle
push
je
push
je
add
add
add
sbbb
mov
cmp
stos
popf
out
push
xor
mulb
mov
mov
flds
mov
decb
shlb
popf
insb
clc
mov
cld
and
push
push
mov
mov
dec
js
pop
ds
adc
xchg
mov
minps
cmp
insl
adc
pushf
aam
adc
sub
in
adc
xor
cwtl
sbb
loop
jb
and
pop
stos
test
dec
nop
and
das
mov
rcl
mov
mov
fisubl
icebp
movsb
and
dec
mov
push
or
jne
imul
push
mov
les
lods
test
xchg
shrl
pop
fmuls
pop
xor
insb
adc
sbb
scas
lret
xor
add
add
fwait
jnp
aad
sbb
mov
addr16
add
add
add
arpl
inc
faddl
js
mov
add
mov
ss
call
ret
fdivr
sbb
jno
inc
inc
pop
add
in
push
test
pop
stc
and
std
out
int
ja
outsb
arpl
sub
push
cmp
lcall
ret
test
inc
stc
xchg
mov
mov
cmp
fldt
adc
movsb
sbb
test
and
test
jnp
xlat
push
cltd
aaa
or
jnp
xor
fdivr
xlat
fmuls
sub
int3
mov
roll
fwait
shr
add
es
mov
mov
ja
les
jae
inc
lcall
lret
adcl
mov
pushf
test
jecxz
outsb
lcall
mov
xchg
add
lods
out
sbb
mov
xchg
popf
push
in
inc
mov
insl
sub
add
add
std
mov
sub
push
dec
inc
addr16
add
add
add
cmpb
xchg
mov
lods
push
sbbb
fistpll
dec
mov
add
xor
dec
and
pop
fs
push
scas
sbb
shll
dec
lahf
cmp
fucomi
clc
push
adc
outsl
cmp
mov
out
hlt
pusha
cmpsl
repz
or
cli
cmp
jno
fs
cmp
pop
dec
pop
dec
sbb
sub
dec
out
dec
jmp
or
push
aad
lock
shll
sbbb
mov
mov
int3
fisubs
test
push
lock
and
mov
test
add
mov
inc
pop
cmp
fidivs
ss
cmp
xor
mov
add
das
popf
sbb
mov
dec
xchg
js
push
sbb
add
lock
dec
push
xor
adcl
xchg
fisttps
mov
out
xlat
addr16
add
add
add
mov
fldt
jnp
lods
mov
mov
cmpsl
clc
insl
enter
pop
out
aas
push
inc
in
jns
outsb
shrb
loope
push
lods
push
js
xchg
ja
sub
xchg
sub
sti
pop
loope
sub
stos
xor
mov
mov
test
int
cltd
xchg
pushf
test
aad
push
imul
pop
xchg
lret
or
jne
mov
mov
sbb
mov
lahf
icebp
mov
push
jns
push
dec
dec
lret
jl
sahf
insl
push
scas
cmc
push
inc
pusha
xchg
cmp
sti
popa
jb
mov
inc
hlt
mov
pushf
ja
jg
lcall
dec
ret
out
outsb
movsl
pop
cltd
mov
push
fsubp
jne
mov
mov
push
add
mov
mov
test
fsubs
in
jo
mov
cmp
fstps
arpl
imull
xchg
faddl
add
add
bound
sub
sbb
js
add
add
add
in
pusha
arpl
jb
sub
lods
iret
movsb
std
push
adc
std
add
sub
int
mov
mov
mov
jge
sti
jle
jmp
mov
daa
add
std
out
cmp
push
ret
dec
fldcw
inc
ret
pop
mov
rcll
adc
push
icebp
dec
lahf
sbb
mov
lods
or
pop
roll
and
icebp
in
sbb
pop
daa
mov
push
scas
cmpsb
and
jecxz
dec
hlt
std
mov
adc
imul
pop
fidivl
add
lods
aam
and
leave
dec
loop
adc
ret
jae
iret
or
inc
xchg
je
or
outsb
sbb
repnz
pop
popf
mov
fwait
mov
test
mov
pop
pop
and
and
jns
leave
outsb
jge
pop
add
pushf
adc
jle
and
or
add
add
divl
in
sub
addr16
add
add
add
pop
loope
sub
adc
aad
push
ja
mov
pop
inc
or
and
sbb
pop
pop
jne
test
icebp
xchg
mov
adc
and
jle
xchg
inc
ja
in
dec
jbe
add
push
and
aam
cmp
test
repnz
sub
mov
ljmp
or
pop
lret
stos
addr16
dec
je
push
dec
cmpl
xchg
cs
mov
ljmp
xchg
xchg
ds
addr16
or
ljmp
and
arpl
dec
pusha
or
pop
std
fsubrl
jg
jae
jg
cmp
mov
add
in
cld
das
cmp
movsl
inc
and
enter
or
inc
xchg
lods
sbb
cs
sbb
in
add
or
pop
jmp
and
clc
hlt
or
ljmp
pop
jle
lahf
pop
fistl
clc
fisubs
mov
mov
xorb
jp
add
add
add
enter
pop
lret
movsl
mov
or
fsts
cmp
sbb
addr16
popf
lret
push
addl
or
and
stos
pop
hlt
xor
gs
bound
cmp
adc
out
daa
mov
mov
jp
xchg
scas
mov
ljmp
push
sbb
xchg
pushf
mov
adc
and
dec
sub
aas
adc
cmp
scas
cmp
ret
aam
cmpsl
testl
clc
clc
out
das
cld
faddl
add
push
ret
shll
movsl
data16
imul
pop
jne
cli
cmc
cwtl
int3
lds
insb
jns
push
int
fnstcw
adc
lea
sbb
int3
jmp
aam
jne
or
xor
in
std
arpl
sarb
adc
idivl
push
in
push
into
xchg
outsl
gs
jmp
jmp
dec
fstpl
fnstcw
add
shlb
mov
loopne
or
jnp
add
add
add
mov
dec
sub
cmp
mov
imul
pushf
adc
dec
sbb
pop
jnp
inc
mov
xor
add
sub
lods
mov
mov
inc
xchg
shll
and
jp
cwtl
pop
ret
inc
outsb
push
cmp
in
xor
cld
or
test
xor
jge
mov
xor
mov
inc
cmpsl
outsb
fistps
xchg
adc
push
hlt
testb
xabort
lret
ret
inc
cmp
xor
test
mov
or
and
cld
cmc
icebp
cmovbe
mov
mov
cmc
jmp
mov
xorl
adc
or
push
sub
dec
pop
repnz
lock
rclb
gs
mov
inc
pop
mov
addr16
mov
sub
cmp
add
testl
adc
add
add
add
mov
mov
sub
sub
iret
mov
fcoms
add
push
xchg
jns
mov
lahf
sbb
cld
adc
out
ret
sub
lock
xchg
mov
adc
ljmp
mov
cmp
sub
adc
jo
mov
outsl
adc
mov
ss
dec
arpl
lods
insb
stos
es
scas
xchg
dec
rolb
scas
roll
push
xchg
sbb
js
cmpl
in
push
mov
jecxz
repnz
add
dec
dec
jns
mov
sahf
push
in
aas
sub
cmp
push
push
adc
push
add
sub
pop
test
ja
mov
ja
dec
jmp
lock
pop
push
out
ret
out
sbb
int
or
popa
or
mov
clc
rcl
mov
ffree
nop
fs
jp
addr16
cmp
xor
mov
push
push
xchg
ljmp
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
mov
es
into
stc
mov
notl
add
sbb
xor
movb
adc
ja
add
orb
das
dec
xor
jp
in
xor
lods
sbb
loope
ficompl
mov
xchg
mov
sub
jmp
adc
lret
and
ret
jae
pop
sub
dec
push
xor
jne
mov
daa
xor
in
mov
adc
fidivrs
xchg
push
sub
xor
mov
icebp
mov
dec
fwait
stc
ss
mov
pop
scas
cmpsl
sbb
jp
iret
mov
sbb
insl
lea
jmp
insl
rorb
cmp
insb
mov
nop
mov
test
lock
into
sub
or
and
mov
mov
cmpsb
push
sbb
push
shlb
add
add
add
call
hlt
cmpsb
or
fsts
xor
divb
pop
pop
ja
in
cmpsl
cmp
inc
imul
jge
sub
fiadds
jmp
pop
out
cmp
mov
sti
mov
jmp
xchg
cmc
and
pusha
adc
xchg
jge
lret
popa
scas
pop
jecxz
dec
int3
push
imul
cmc
mov
pushf
push
jmp
dec
pop
cmp
fidivs
out
mov
dec
xor
pop
lcall
in
mov
mov
scas
nop
push
xchg
in
add
mov
in
jp
ret
mov
sub
ja
xchg
pop
fmuls
or
pop
jge
fistps
pop
js
loop
and
cmp
add
fiaddl
mov
test
mov
fs
rorl
roll
pop
loop
fcmovne
jne
inc
in
lret
inc
cwtl
pushf
add
add
add
cmp
cli
mov
and
jg
add
add
add
cmp
movsb
dec
dec
xchg
adc
call
push
cmp
sub
push
fistps
xchg
repnz
aaa
add
dec
mov
lds
stc
dec
jbe
sahf
jle
lods
xor
jp
ds
mov
mov
iret
jg
xor
rcrb
xor
rcrb
test
and
mov
aad
sbb
aad
pop
add
adc
dec
insb
mov
pop
test
repz
scas
scas
stc
xor
push
xchg
leave
add
fcompl
inc
mov
push
and
inc
or
cmp
shrl
xorl
cmp
push
std
mov
lcall
ja
lods
fistpll
mov
and
out
test
cmpsb
test
mov
ljmp
fdivrl
and
mov
cmp
leave
loopne
faddl
out
loopne
xchg
inc
xchg
rcrb
xor
add
add
test
lcall
cld
bswap
addb
add
add
mov
bound
jl
sahf
out
pop
scas
mov
rcl
or
or
adc
out
aad
xchg
sbb
ss
call
test
iret
cmp
fldcw
mov
xor
inc
xor
loopne
repz
push
and
lds
cmp
sub
mov
outsb
xchg
loop
lret
aaa
out
xor
mov
mov
mov
push
push
loop
outsb
out
pop
xor
inc
cmp
out
lret
adc
int
push
jge
shrl
imul
or
inc
jp,pt
out
xchg
cli
jbe
mov
and
in
cli
aas
and
inc
sub
jmp
xchg
mov
jl
cs
int3
cmpsl
sbb
push
inc
in
sbb
cs
arpl
mov
add
pop
iret
call
sub
testb
daa
mov
in
addl
add
shll
leave
cwtl
in
add
loope
es
mov
xchg
es
mov
inc
cmpsl
ja
bound
cmp
pop
gs
test
xor
sub
dec
jle
jae
cmpl
xchg
mov
jmp
sub
inc
cmp
pop
cmc
mov
fistpll
sarl
mov
xchg
or
sbb
mov
pop
loop
cmp
movsl
add
pop
push
pop
sbb
out
pop
or
pop
dec
fucomip
adc
fsub
lahf
insl
push
jno
aam
popa
mov
fadd
ret
inc
test
clc
sbb
push
subl
cmpsb
and
inc
jmp
cwtl
aaa
jmp
mov
call
push
arpl
xchg
xor
sub
ds
jo
popa
inc
mov
pushf
inc
push
xor
nop
aas
dec
sti
pop
xor
jae
sub
add
add
lcall
aas
add
mov
addb
add
add
and
jmp
push
incl
clc
cmpl
popf
jo
dec
mov
iret
mov
and
or
push
js
lcall
pop
stc
jmp
lock
insl
jge
dec
adc
and
enter
mov
adc
dec
pop
sub
add
fidivs
cmpl
or
or
subl
popa
popa
cmp
jnp
std
jae
lods
or
std
sub
outsb
add
inc
ror
cmp
jge
js
push
jg
arpl
jecxz
dec
pop
pop
sub
popa
xchg
xchg
repnz
push
push
add
clc
test
mov
ljmp
cvtps2pi
js
ss
imul
call
xchg
bnd
jl
add
add
mov
idiv
jne
iret
pop
sub
addl
add
add
mov
pushf
and
mov
sahf
mov
jle
dec
or
mov
mov
xchg
inc
mov
ret
mov
cmc
mov
adc
mov
add
ret
sub
cmp
lock
movb
mov
push
pop
xchg
sub
and
pop
jl
pop
scas
dec
leave
nop
fiadds
xor
mov
cmp
aad
lret
sub
cwtl
xchg
mov
dec
ja
jbe
xor
sti
mov
loopne
scas
fnstsw
dec
pusha
loopne
imul
pop
push
sahf
mov
inc
dec
dec
mov
stc
add
sub
mov
pop
popa
call
add
adc
ret
pop
cwtl
ret
repnz
mov
mov
aad
testl
push
or
mov
cmpsl
xchg
pop
ret
dec
aad
out
aas
les
jb
add
add
pushl
sub
dec
or
test
add
add
add
lea
mov
mov
mov
icebp
push
cmpsl
push
xor
cmp
js
xchg
mov
sahf
pusha
mov
cmc
xor
pop
mov
pop
pop
cmp
pushf
aas
jb
mov
scas
repnz
mov
inc
sub
adc
and
push
dec
clc
add
jns
pop
xor
lods
sub
mov
cs
int
ja
push
push
pop
sbb
add
sub
jno
mov
stc
ljmp
sub
in
xor
jno
inc
mov
iret
inc
mov
stc
and
sbb
pusha
fcmovb
lods
mov
sub
cmpsl
mov
or
cmp
cmp
xlat
ja
in
and
inc
stos
icebp
xchg
push
dec
pop
jl
int
adc
pushf
in
adc
or
jbe
adc
fcomps
cwtl
pop
fadds
jl
out
or
xor
xor
aam
cmp
mov
jge
std
sti
iret
ss
push
jno
mov
mov
add
add
add
imul
rep
or
adc
icebp
or
fcoms
xchg
aad
adc
icebp
je
and
inc
inc
imul
xchg
jnp
dec
cmp
jae
icebp
xor
add
in
rolb
test
pop
xchg
out
and
sub
mul
jmp
sahf
add
mov
sbb
pop
fildl
mov
mov
rolb
xor
lret
jae
jge
clc
psraw
mov
cmp
sub
stos
add
xchg
xchg
enter
pop
xor
xchg
jmp
das
test
mov
mov
jmp
mov
jns
orb
sub
imul
lret
sbb
and
shlb
fld
repnz
mov
fisttpll
daa
xor
outsb
sbb
inc
dec
inc
inc
out
mov
psllw
pop
cmp
cs
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
lret
out
cltd
xchg
add
add
add
ljmp
iret
add
test
nop
in
adc
mov
inc
rcl
rcl
cmp
jno
inc
negl
jge
ss
nop
imul
mov
aam
sbb
xchg
jbe
int
std
pop
and
mov
or
test
sbb
cmp
jae
or
jmp
loop
aaa
lds
insl
sub
push
or
push
and
int
jge
imul
fbld
cltd
ret
push
shrb
clc
mov
mov
out
xor
dec
aaa
sbb
push
stc
int3
cmp
int
into
or
into
sarb
out
pop
push
insb
or
xor
mov
jp
mov
inc
xor
lods
popf
jne
lods
stos
pop
fdiv
xor
mov
in
cmpb
fisubl
imul
jle
lahf
mov
add
add
mov
mov
divl
xchg
add
add
add
ss
sbb
cmp
sub
dec
jne
cmp
sbb
icebp
jb
jb
mov
arpl
mov
mov
add
cmova
add
dec
pop
in
mov
xor
sub
and
repz
test
loopne
push
mov
pop
mov
push
sub
iret
adc
sub
ret
pop
iret
out
mov
dec
ret
dec
cmpsl
jge
inc
test
xor
xchg
imul
pop
stos
xor
and
arpl
stos
addr16
nop
sub
sub
lods
xor
fwait
addl
enter
sbb
je
loop
mov
xchg
jb
outsl
jmp
jae
fstp
test
pop
mov
in
mull
pushf
pop
enter
sbb
inc
adc
adc
repnz
in
scas
das
rcrb
lods
add
and
aam
test
add
and
out
ljmp
lock
xchg
lds
push
clc
mov
add
add
add
mov
xlat
pop
test
jg
adc
xor
pop
xchg
push
mov
lods
rcrb
pusha
pop
xchg
add
mov
fsubl
jle
hlt
movsb
hlt
or
pop
and
add
movsb
sbb
inc
jp
movsl
outsl
sub
mov
pop
add
cld
dec
in
lock
negb
int3
stos
fwait
int3
dec
fsincos
leave
shll
jnp
int
sub
lea
dec
mov
das
mov
lods
push
dec
push
xchg
sbb
pop
fcom
pop
cmpl
xchg
repnz
out
adcb
jp
mov
pop
jno
inc
sbb
jecxz
lret
insb
adc
repnz
sub
test
rcrb
faddl
dec
cs
xchg
and
push
jnp
push
test
mov
push
or
mov
out
pop
aad
add
add
arpl
jnp
sbb
push
xor
mov
add
add
add
mov
pop
in
cmp
jl
mov
push
fsubl
mov
nop
mov
rorb
dec
mov
fdivrs
lcall
mov
pop
cmc
inc
test
movsl
mov
rcrb
add
pop
xchg
xchg
jp
xchg
sub
mov
jl,pn
gs
cmp
ret
fistl
scas
jno
ja
mov
pop
fildll
stos
cmp
clc
xchg
test
out
sub
cld
xor
add
fmull
adc
cwtl
aam
loop
push
insl
push
ja
in
test
mov
push
pop
je
inc
push
mov
pop
mov
pop
pusha
into
fcomi
bound
inc
and
pop
xchg
test
and
jg
mov
push
pop
xchg
xchg
cmp
adc
push
rclb
inc
pop
jmp
push
add
mov
pop
cmpsb
enter
push
aas
or
mov
push
lods
mov
add
add
add
cmc
out
push
xlat
dec
pop
notb
adcb
inc
sbb
mov
cmp
outsb
xor
pop
movsb
test
push
dec
and
cmc
jge
push
mov
iret
push
out
mov
inc
jns
lret
ljmp
mov
mov
xchg
cld
mov
jle
push
jns
push
inc
sahf
je
mov
lret
jnp
push
js
sbb
in
dec
mov
add
lock
push
inc
fidivrl
in
ss
nop
push
adc
test
mov
mov
add
mov
push
mov
aad
jge
xchg
mov
cmpsb
push
aam
dec
fstps
cs
or
pop
aam
mov
adc
hlt
popl
xchg
mov
shrb
outsb
insl
mov
adc
mov
and
imul
fwait
hlt
pop
jns
add
add
push
outsb
fisubs
test
dec
out
adc
add
add
mov
and
mulb
mov
xchg
lods
fcompl
fimuls
sbb
or
std
mov
stc
in
cmp
add
int3
mov
mov
pushf
roll
out
lret
mov
pop
das
push
lret
lods
cmp
andb
in
iret
call
int3
push
xchg
sti
adc
scas
pop
and
int
call
lea
stos
xchg
mov
int3
mov
lahf
jg
pop
ja
inc
add
or
inc
shlb
lcall
test
scas
jg
ficoml
fs
add
xor
mov
loope
stos
jae
sub
sbb
shrw
dec
inc
outsl
daa
xchg
pop
adcl
in
sahf
stos
xor
mov
inc
test
popf
notb
and
and
cmp
mov
jns
sbb
mov
add
add
add
jbe
add
and
sub
rclb
clc
mov
imulb
sub
adc
mov
into
lahf
add
mov
pop
popf
int3
insl
jo
rorb
cmc
cmp
jbe
push
inc
cmp
nop
gs
ja
push
adc
bound
loope
loop
adc
imul
cmp
stos
jno
add
repnz
leave
or
adc
fst
pmaxsw
push
mov
test
insl
xor
push
lock
dec
test
shrb
test
inc
xor
out
nop
pop
adc
push
lret
cmp
sahf
dec
push
outsb
ss
hlt
mov
cmpsl
pop
push
lea
mov
outsb
adc
push
mov
mov
jne
lea
dec
nop
pusha
pop
les
cmp
scas
mov
rdtsc
adc
lahf
or
xchg
imul
adc
jl
push
jae
add
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
addr16
lea
add
add
add
mov
call
push
sub
test
sbb
scas
push
dec
loop
inc
movsb
jecxz
mov
pop
xor
push
push
jmp
xchg
jl
insl
xchg
and
add
icebp
pop
call
mov
sarb
mov
call
adc
pop
xor
or
adc
mov
mov
inc
mov
and
scas
cmp
mov
test
xor
sub
sbb
xchg
cmp
push
cwtl
mov
mov
mov
dec
out
jg
jns
outsb
inc
dec
test
jno
or
movl
xchg
mov
push
xor
adc
lods
mov
leave
add
rclb
into
adcl
add
pop
inc
fmull
or
das
push
or
popl
outsl
jne
add
add
adc
std
out
ljmp
mov
add
add
add
aas
pop
xchg
lock
sub
rolb
out
jae
push
rorb
test
inc
xor
jmp
addr16
mov
inc
and
adc
loopne
or
arpl
incl
add
cld
add
aad
pop
push
icebp
pop
or
ds
inc
sub
mov
sbb
jle
and
stc
sub
orl
pop
scas
in
add
sub
push
jb
pop
xchg
lret
cmp
pop
ja
popf
jecxz
in
mov
jmp
xor
mov
mov
int
sub
out
push
scas
sti
fimull
loope
popa
inc
jnp
xor
les
ljmp
ss
ret
fs
imul
pop
jne
add
mov
inc
out
jl
and
dec
dec
push
sub
inc
push
jbe
int
notl
lods
les
jnp
mov
icebp
je
sbb
add
add
in
shlb
aam
dec
jmp
push
pushf
xchg
or
sub
mov
mov
mov
sti
popf
in
xor
dec
jno
mov
ret
out
shr
dec
add
mov
call
pop
out
in
xchg
cwtl
lods
push
movsl
mov
lods
test
insb
clc
xchg
in
mov
shll
sbb
pushf
movsl
adc
aam
pop
lahf
stc
test
cmpsb
push
div
cld
jb
mov
into
scas
test
jg
mov
mov
jle
xor
pop
je
fwait
lds
mov
xchg
sbb
inc
mov
adc
and
mov
mov
sub
adc
sbb
xchg
xchg
call
lods
push
mov
pop
dec
mov
fisttps
ljmp
sti
and
fcomps
push
xor
movl
nop
in
inc
mov
xchg
idivb
cmovne
push
add
lods
mov
add
inc
or
test
fcomps
add
add
xchg
addr16
add
add
add
decl
fcoml
or
jmp
or
sub
and
aaa
std
test
push
push
mov
js
lods
pop
cmp
push
outsb
hlt
adc
gs
shl
mov
and
roll
addr16
nop
and
in
mov
mov
mov
jae
inc
cmp
sbb
jb
jns
mov
dec
mov
add
xor
push
push
int
sub
icebp
imul
mov
pop
xchg
jae
subb
icebp
jns
mov
sub
cmp
int
pop
gs
or
mov
je
cltd
pop
inc
or
arpl
dec
sub
adc
lock
sbb
sbb
or
nop
jl
inc
jns
sbbl
ret
in
mov
add
loopne
loopne
je
stos
push
mov
cmpsl
clc
mov
ss
into
shll
add
add
ljmp
dec
mov
jmp
add
add
add
hlt
in
xchg
add
pop
gs
pop
mov
int3
out
into
xchg
std
imul
dec
dec
mov
dec
testl
cmp
lock
sub
sti
out
or
jae
mov
cld
sub
xlat
push
mov
std
push
xchg
pop
mov
sbb
stos
fmuls
loope
negl
stos
les
mov
repz
stc
int
mov
jbe
dec
xchg
stc
jo
push
or
xlat
fisubrl
out
rorl
push
cmc
ret
mov
mov
js
shlb
inc
stos
dec
aaa
sti
and
and
and
movl
ljmp
xchg
out
inc
rol
xchg
push
inc
cmpsb
fstpl
mov
cs
cmp
jne
loopne
scas
sti
icebp
inc
or
inc
inc
or
jne
imull
aaa
shlb
cmc
div
testl
jns
xchg
add
add
add
jo
jle
roll
pop
insb
and
out
test
sbb
inc
xchg
dec
fnstcw
fs
mov
push
lock
lods
sub
das
xchg
push
jnp
pop
push
jl
push
sbb
cmpsl
ror
inc
sahf
sub
out
cli
outsl
pop
repz
xor
xchg
add
pop
adc
push
mov
shrb
sub
out
sbb
mov
pop
add
push
dec
jmp
ljmp
lods
cmc
test
jnp
fdivrp
pop
pop
xor
inc
pushf
bound
push
sti
xor
sbb
jnp
aad
push
fstps
cmc
nop
ds
ljmp
pop
orl
xchg
push
inc
fsubrs
test
inc
cmpsl
es
mov
jb
xor
cmpb
pop
xor
js
mov
or
imul
scas
stc
jno
outsl
mov
test
test
add
add
push
sahf
rcr
pop
adcb
xor
imul
add
add
add
add
cmpsl
mov
dec
sbb
jns
pop
mov
lret
mov
jecxz
xor
sub
and
mov
adc
sbb
push
cs
xchg
push
loop
int3
pusha
sbb
and
dec
push
das
cld
daa
inc
stos
dec
sub
sub
in
lock
cmp
fs
das
lret
or
or
fistl
bound
or
es
pushfw
out
movsl
leave
stc
xor
inc
push
aam
cmp
jb
jnp
dec
call
cmp
cmp
xchg
inc
or
xchg
test
repnz
xorl
xor
push
jno
cmp
mov
test
adcl
and
inc
insb
repnz
sarb
ljmp
lods
push
adc
test
dec
mov
inc
adc
cmp
inc
ljmp
add
cwtl
shll
cmpsb
jcxz
fimull
addr16
add
add
add
mov
and
int3
rcrl
outsl
dec
mov
jb
das
vpcmpeqd
pop
xor
lds
mov
and
sbb
jle
adc
lahf
aas
xlat
stc
pop
xchg
jb
pop
cmp
mov
sahf
je
jp
mov
jbe
repnz
pushf
sti
inc
sarb
cli
stc
mov
jb
fsubrs
andl
mov
inc
ja
lahf
repz
in
pushf
insl
push
inc
pop
adc
scas
and
jge
popa
sti
xor
inc
adc
and
sub
dec
jle
sbb
ljmp
mov
shrl
sub
xlat
lods
fisubrs
out
xlat
jmp
jp
xchg
fwait
stc
call
shlb
dec
aad
mov
stos
sub
sbb
mov
mov
mov
aas
xor
mov
imul
stos
mov
push
call
clc
jnp
jg
in
cli
enter
or
jns
addr16
add
add
add
xchg
sub
dec
ss
mov
in
aad
stos
and
mov
cltd
cmp
fisttpll
add
xorb
jne
pop
push
lcall
loope
stc
jle
xor
mov
mov
popl
data16
mov
inc
add
sti
rcll
sahf
jg
jmp
in
xor
lahf
loope
sti
mov
testb
orl
leave
mov
dec
pop
push
xchg
test
std
or
inc
test
xor
add
add
push
call
add
ja
jbe
jne
ret
mov
gs
xor
sbb
sub
sbb
stc
dec
mov
test
cmpsb
jae
push
rclb
cmpsl
adc
lock
insb
daa
in
test
into
mov
insb
stos
mov
leave
notl
inc
mov
add
add
lods
faddl
fbstp
cld
gs
mov
addr16
add
add
add
repz
jg
jg
xchg
aad
lock
pushf
rol
or
push
and
loope
and
arpl
loope
cli
loopne
data16
js
mov
mov
les
push
rorb
mov
fmull
test
pop
fs
out
cwtl
add
mov
js
daa
jb
outsl
in
fsub
mov
mov
mov
out
sbb
push
lea
adc
inc
insl
clc
fsubs
add
add
add
ljmp
fadd
aas
jmp
arpl
test
inc
jb
sbb
dec
lahf
cmp
std
xlat
imul
cmpsb
inc
orl
sbb
pop
hlt
dec
add
stos
aaa
xchg
test
out
fstl
dec
or
and
cmpsl
xor
cmp
das
nop
xlat
out
cmp
jl
adc
lret
test
cmp
pop
stos
sti
stos
rcrl
fwait
lds
add
add
jl
sar
std
jle
pop
popf
scas
ja
mov
add
add
add
test
movsb
xorl
xor
push
call
sbb
pop
subl
sub
pop
les
mov
cli
enter
or
push
mov
loop
mov
mov
jb
in
and
inc
or
nop
lods
push
or
dec
add
dec
enter
insl
and
adc
cli
sbb
ficoms
jmp
mov
xlat
in
movsl
xchg
and
jno
jns
leave
in
push
sbbl
adc
inc
cmpsb
scas
mov
repnz
mov
pop
inc
jecxz
test
or
stos
subl
adc
call
fcmovb
fstl
sbb
imull
or
in
mov
dec
jg
hlt
loopne
rcrb
mov
dec
cmp
cmp
in
pushf
icebp
mov
add
add
add
loop
adc
cmp
mov
sub
loopne
pusha
sbb
mov
or
mov
and
inc
icebp
jg
insb
aaa
mov
stos
pop
hlt
js
push
arpl
pop
xchg
sub
push
dec
push
add
mov
xchg
test
insb
mov
jmp
cmpsl
bound
cmc
addr16
hlt
daa
pop
bound
mov
lods
jle
insb
jmp
out
cli
pop
stos
xchg
daa
or
dec
inc
jb
lds
sbbb
adc
pop
sahf
sub
fsubp
ds
xchg
jbe
push
jno
mov
push
dec
lahf
fistl
pop
pop
push
mov
repz
decb
movsl
stc
lock
stc
mov
rolb
and
ljmp
mov
push
clc
ret
sbb
in
jne
and
mov
jne
xor
pop
sub
std
mov
jmp
icebp
jb
mov
lret
add
fwait
and
popa
mov
xorl
addr16
add
add
add
dec
and
add
jnp
test
add
aaa
xchg
add
popa
sub
mov
sarl
fs
dec
mov
out
outsb
xorl
mov
xchg
outsl
sbbb
jns,pn
xchg
jo
mov
ret
sbb
fwait
pushf
inc
nop
out
mov
insl
repz
push
leave
adc
dec
adc
cli
pop
mov
imul
ret
out
sti
lret
mov
mov
popa
pusha
stos
xchg
stos
mov
xchg
fnsave
jl
mul
jge
dec
lea
loopne
push
adc
pop
mov
mov
jg
cmc
outsl
and
dec
sti
sub
popa
or
mov
mov
popf
xor
lcall
or
stc
or
lcall
in
test
cmc
fimuls
pop
jecxz
push
test
mov
jo
pop
mov
outsb
scas
xchg
add
add
dec
std
out
xlat
aas
dec
sbb
or
addr16
and
int
jbe
push
decw
pushf
pop
lahf
ret
mov
push
movsl
bnd
leave
leave
aas
lock
pop
mov
push
pushf
fwait
mov
dec
xchg
ljmp
cmp
pop
adc
fwait
cwtl
idivl
in
inc
xchg
lods
add
pop
xchg
push
mov
pop
dec
mov
pop
fmul
shll
mov
les
cs
loop
pop
xor
xor
mov
adc
or
and
pop
in
imul
sbb
xchg
je
daa
insb
lods
test
mov
add
push
js
mov
sti
pushf
dec
xchg
rcll
jle
jle
cmc
in
mov
jno
lods
dec
lcall
adc
xchg
test
xchg
loop
mov
ret
rcr
rol
out
jae
jno
ja
pop
mov
adcb
xchg
rcll
dec
jmp
imul
outsl
vmwrite
in
fwait
add
add
add
push
mov
xor
add
push
sarl
cltd
push
jmp
fdivrl
sub
leave
dec
inc
xchg
push
aam
icebp
shlw
dec
push
dec
mov
imul
std
mov
dec
gs
arpl
inc
aad
or
mov
sbb
ss
cmc
jle
lret
push
aaa
lock
cmp
or
sub
push
fucomp
xchg
ret
outsb
jbe
and
andl
sbb
xchg
and
jo
dec
scas
mov
xchg
in
mov
push
icebp
adc
lock
xchg
int3
lcall
sbb
mov
add
inc
push
fucomip
mov
mov
jecxz
and
out
dec
movsb
lea
sbb
cmp
add
lea
xchg
ja
inc
jmp
test
add
add
lret
sbbl
popl
jne
addr16
add
add
add
mov
xchg
test
aas
arpl
jmp
shlb
addr16
push
leave
aaa
dec
sahf
repz
xor
push
leave
int
xorb
pushf
add
cmp
es
push
leave
test
and
cmp
subl
ret
pop
mov
xor
pushl
daa
jb
out
call
mov
xor
and
xlat
iret
out
xor
loopne
in
jbe
sbb
jmp
aad
jmp
dec
mov
test
rorb
and
or
cmp
mov
fdivl
insl
ja
hlt
cltd
xor
sub
cmpsl
xchg
insl
lods
sub
mov
pop
xlat
daa
cmp
mov
push
and
jnp
cmp
sub
fidivrl
loopne
push
lock
dec
ja
push
jo
xchg
mov
push
cmp
mov
adc
jp
stos
mov
sbb
add
mov
imul
movsb
and
xchg
leave
les
addr16
add
add
add
and
adc
pop
int3
adc
aam
sbb
xorl
pop
fisubrs
add
mov
add
mov
inc
loope
aas
cmp
stos
and
out
out
int
in
movl
inc
xchg
and
ret
xchg
incb
sub
jbe
scas
or
pusha
dec
add
fst
add
pop
mov
or
scas
push
jbe
popa
aas
aam
fistpl
lods
xchg
pusha
adc
fs
stos
cli
sub
and
mov
hlt
fstl
push
inc
repz
out
jb
cltd
mov
pop
push
lock
dec
out
adc
push
dec
mov
ds
and
and
pop
xchg
adc
push
add
lcall
shrb
imulb
mov
jge
jg
ljmp
in
lahf
mov
sahf
add
add
add
push
mov
and
dec
adc
idivb
sarl
lret
pusha
in
pop
pop
mov
out
fs
jo
stos
repnz
pop
jl
jbe
jg
mov
xchg
mov
lahf
sbb
jbe
jo
inc
mov
lret
loopne
sbb
mov
ror
in
aas
shlb
xchg
cmp
lods
mov
pop
xchg
stos
pushf
cltd
bound
das
xor
call
adc
adc
stc
adc
rorl
arpl
ljmp
xchg
cld
xchg
into
and
ret
xchg
cld
add
into
lods
fstps
inc
xor
lcall
xchg
fcmove
arpl
outsb
cmc
sti
mov
pop
inc
push
sbbb
mov
call
std
dec
jb
push
xchg
ret
push
jecxz
jb
cltd
test
fldenv
pop
xchg
add
neg
fsubl
insb
jb
add
add
ja
out
inc
sub
or
in
jp
lahf
add
add
add
adcb
lods
adc
pop
and
cmpxchg
dec
mov
mov
pop
in
shlb
sub
popa
and
out
cmp
leave
loop
inc
mov
orl
addl
xchg
sub
pop
xchg
or
fildll
jmp
xchg
stc
mov
mov
es
scas
xchg
mov
jmp
mov
pop
adc
loopne
adc
aam
fbstp
mov
jg
jb
loop
lret
push
sbb
jle
arpl
dec
mov
add
sbb
mov
rclb
pusha
add
movsl
fildl
int
negb
aam
mov
les
mov
mov
in
aas
jle
push
aad
rol
mov
inc
or
test
or
inc
xchg
xchg
jecxz
pop
test
lods
pop
adc
jp
iret
arpl
js
add
add
pusha
test
mov
cld
mov
addr16
add
add
cmpsl
ret
faddp
iret
stos
cmp
jns
in
cmp
push
fmuls
pop
idivb
inc
loopw,pt
ret
shll
sbb
sub
jb
inc
dec
pop
cmp
fsubrs
push
push
dec
int3
cmp
xchg
test
addr16
xchg
mov
jge
push
add
jg
int
sahf
push
pop
clc
push
shll
jb
lret
sbb
inc
ljmp
icebp
jae
rclb
rclb
pop
lock
adc
dec
enter
and
add
pop
add
sbb
add
mov
in
aas
ljmp
inc
inc
xor
cs
pop
cltd
jle
push
jbe
ljmp
in
cmpsb
mov
or
inc
fs
push
push
je
adc
test
data16
sbb
jo
jo
lock
adc
mov
cmp
or
or
lcall
sbb
test
add
add
sub
imul
and
inc
pop
insl
inc
test
mov
jne
xchg
sub
and
loope
loopne
mov
and
pop
adc
stos
push
ds
xchg
aam
or
popf
pop
add
mov
dec
cltd
lea
dec
mov
mov
loop
int
cmp
jbe
gs
mov
pushf
pop
pop
sbb
mov
sbb
push
popa
xchg
mov
push
jecxz
fsts
xchg
sbb
test
xchg
xchg
mov
dec
out
mov
popf
out
cwtl
loope
outsl
add
pop
sbb
mov
add
dec
and
add
jmp
aam
outsl
dec
jae
push
iret
pop
jae
aam
jbe
scas
mov
scas
test
inc
sbb
jnp
cmp
pop
inc
rol
xchg
sbb
lret
bound
sbb
xor
test
movsb
mov
mov
inc
inc
add
mov
add
pop
fsubr
adc
inc
nop
lds
fcmovb
into
dec
xor
xor
movsb
and
outsl
loopne
sbb
mov
push
cmpb
mov
loopne
inc
push
inc
xchg
mov
rcl
push
jno
arpl
and
lods
pop
lret
dec
mov
xor
adc
pop
jg
popa
out
gs
fmul
dec
inc
and
pop
mov
pop
cwtl
or
dec
enter
gs
cld
mov
cmc
and
pop
rclb
mov
dec
ss
arpl
cmp
inc
stos
pop
lahf
add
mov
ficoml
jecxz,pt
pop
ja
aas
ljmp
in
call
mov
mov
cmp
jecxz
and
aad
clc
push
out
pop
test
inc
out
loopne
jno
insl
dec
and
in
fldenv
scas
lcall
mov
and
pop
repnz
cltd
fistl
daa
jecxz
add
add
std
inc
mov
cwtl
lret
add
add
add
int3
mov
adc
jle
jl
inc
bound
ret
xor
test
stc
pop
xchg
mov
pop
or
sbb
xor
pusha
xchg
in
mov
popa
pop
sub
xor
stos
in
test
and
add
push
push
cmp
add
mov
les
sbb
mov
xchg
dec
mov
movsb
int3
pop
pop
idiv
mov
ds
adc
arpl
mov
mov
ljmp
jl
call
sub
or
vcvttss2si
push
pop
jbe
in
sub
dec
and
mov
stc
into
sub
jns
sbb
movsb
mov
push
dec
pop
dec
lret
test
push
xlat
mov
stc
bound
xlat
inc
movl
inc
or
mov
jo
cmpsl
or
outsl
mov
push
inc
fdivl
push
dec
mov
movsb
add
add
add
mov
pop
aam
fmull
insl
fwait
std
loope
cmp
mov
jmp
add
push
xor
add
ficoml
push
add
jmp
adcb
test
arpl
repz
mov
je
rorl
loopne
lret
adcb
nop
aam
add
pop
divl
push
cmp
xor
mov
mov
pop
mov
mov
mov
out
pop
jns
iret
in
adc
pop
push
mov
popf
pop
bound
push
popf
sub
mov
dec
mov
pop
push
test
or
mov
mov
lret
mov
lods
std
sub
xor
das
in
cmpsb
add
cmp
lds
adc
loopne
lock
add
sti
fdivs
push
lds
inc
int
sub
ljmp
ret
imul
add
sbb
mov
sbb
stos
daa
movsl
add
add
add
push
mov
jb
xchg
arpl
out
inc
add
jo
aas
neg
cli
sub
ja
in
xchg
cmp
stos
mov
stos
sbb
ss
xchg
sarb
mov
cmc
mov
xchg
hlt
loopne
xchg
int3
cs
push
lret
add
mov
scas
adc
pop
mov
mov
cmp
sub
sub
xchg
push
add
mov
push
cmp
out
jmp
xchg
pop
outsl
adc
fcomp
test
test
fstpt
mov
or
push
imul
pop
out
sub
fcomp
mov
cmp
insl
xlat
ja
push
xchg
test
mov
xlat
xchg
xchg
sarl
dec
out
fiadds
cmp
inc
pushf
aas
loopne
loopne
mov
add
faddp
add
xchg
dec
std
out
and
pop
lods
inc
pop
std
bound
pop
test
stos
hlt
jmp
cmp
jbe
mov
cmpsb
add
add
add
cs
loop
inc
mov
repnz
add
into
or
jnp
aas
inc
lds
inc
xchg
mov
jmp
adc
jae
and
aad
dec
pusha
pop
fmuls
sbb
fidivrs
lret
outsl
mov
pop
mov
arpl
cmp
sbb
icebp
and
mov
inc
lods
rol
arpl
add
add
xchg
loop
or
mov
lret
cmp
enter
mov
lods
xchg
je
xchg
ds
pop
div
aad
xchg
adc
fs
mov
cmp
fwait
nop
outsl
mov
shll
lcall
mov
xorl
outsb
clc
out
cmp
mov
out
mov
and
or
dec
dec
hlt
lcall
dec
push
lcall
xor
and
xchg
and
stc
and
dec
leave
adc
add
add
out
xlat
out
jg
in
xor
cmpsl
out
cmpsl
add
add
add
lret
fbld
lods
mov
clc
xchg
mov
xor
test
mov
inc
adc
push
xchg
cs
pop
pop
js
les
adc
ret
jbe
fidivrs
sarl
in
stos
fldl
pop
inc
pop
pop
push
inc
xchg
imul
or
outsl
xor
add
xor
push
cli
stos
shll
in
aad
push
dec
mov
movsl
push
mov
lret
aaa
or
ucomiss
cld
mov
adc
or
cmp
test
fimull
push
out
add
sti
mov
jg
cmp
jecxz
inc
mov
inc
cmc
lahf
sbb
in
and
lods
lds
cmc
xorl
mov
mov
loopne
push
mov
jbe
add
aaa
stc
push
movsb
xchg
add
insl
lret
ja
icebp
lods
sbb
pop
fbstp
fldl2e
xor
add
add
add
in
popf
insl
mov
mov
or
cmpsb
sbb
out
call
ds
movsb
bound
jo
add
inc
mov
jg
jb
std
jne
movsl
inc
movsl
cli
inc
add
dec
loopne
cmp
insb
and
stc
inc
sub
mov
xchg
mov
bound
xor
mov
add
pop
or
call
inc
push
push
mov
mov
xor
into
repnz
test
push
arpl
fldl
jl
psrlq
jb
jecxz
iret
jno
dec
repnz
adc
and
mov
inc
mov
xchg
repnz
push
and
pop
pop
jno
xor
clc
sub
clc
sbb
test
mov
mov
push
test
lods
sub
aas
jne
mov
in
fcompl
jb
xchg
fwait
adc
cmp
or
adc
mov
out
fwait
sub
add
add
mov
fadds
addr16
add
imul
cmp
and
cmpsb
les
icebp
adc
inc
mov
or
and
xchg
mov
stos
mov
mov
mov
out
les
pop
inc
nop
lret
ljmp
stos
mov
or
mov
dec
fcomp
inc
push
scas
ficoms
int
pop
xor
xchg
out
ret
idivb
jge
ret
clc
stc
push
lds
push
cwtl
xor
push
adc
xchg
fnstenv
cmp
dec
push
inc
mov
pop
mov
push
sub
pop
xor
or
frstor
push
fdivrl
cmp
mov
ret
les
cmpsb
out
sub
push
daa
dec
jecxz
popw
jno
xor
cs
sub
mov
hlt
ss
cli
sbb
and
mov
fmuls
inc
add
add
mov
push
sti
jmp
push
mov
mulb
dec
stos
mov
add
add
add
pop
stc
adc
imul
sub
shl
cmp
dec
dec
add
sub
das
mov
jb
mov
imul
xchg
inc
jo
cmpb
std
repnz
cld
ret
fisubrs
or
test
ds
mov
ljmp
insl
push
pop
adc
movsb
pusha
jl
sub
outsb
inc
shll
inc
push
adc
pop
mov
adc
push
std
add
repnz
movsb
popa
int
inc
pop
neg
cld
mov
cli
icebp
push
cmp
adcl
push
push
mov
pop
ljmp
xchg
xchg
lea
pop
push
push
rcll
push
mov
stc
lcall
push
mov
data16
rolb
insl
jecxz
stos
mov
fsubrl
adc
lock
mov
pop
dec
pop
cmc
push
jmp
fwait
pop
pushf
cmp
mov
add
xchg
jo
ljmp
pop
jecxz
add
add
jecxz
lock
mov
add
add
add
pusha
scas
dec
mov
push
mov
test
and
xchg
adc
ret
sbb
pushf
setne
je
push
xchg
arpl
call
sub
adc
repnz
mov
pop
dec
hlt
adcl
mov
cmp
xorb
cwtl
jnp
sbb
adc
push
inc
pop
dec
mov
je
mov
loop
test
ja
and
jmp
out
xchg
int3
mov
cmp
fiadds
rcll
xchg
xor
adc
aas
pop
jg
pop
test
inc
fmull
inc
push
fwait
inc
xor
test
push
xchg
sbb
js
cmp
mov
je
xlat
aas
rcll
or
das
call
jle
or
shll
xor
iret
test
es
push
lds
fmull
addr16
push
cltd
push
mov
jns
add
add
cld
mov
leave
push
mulb
add
add
xor
cwtl
adc
xchg
aaa
sub
jnp
xchg
cmp
adc
in
cmp
aam
nop
push
jp
or
push
pop
dec
sarl
loopne
xchg
sbb
pop
loopne
in
fiadds
sti
cmp
xlat
cmc
cmp
aam
xor
sbb
xchg
mov
mov
pushf
fadds
xchg
jo
mov
xor
xor
pop
pop
pop
js
ret
xor
mov
test
push
movsl
in
bound
sarl
popa
xchg
cmc
xchg
enter
movsl
push
popa
pop
lds
lods
sbb
outsb
xchg
mov
clc
lret
repz
pop
ljmp
jl
mov
xchg
shlb
aad
inc
adc
sbb
mov
xchg
mov
push
mov
cmp
out
xlat
mov
mov
and
sub
mov
enter
pop
jl
mov
pop
data16
mov
cmpsb
sar
lods
mov
dec
das
pop
out
cmc
mov
xchg
cmp
add
add
add
mov
or
negl
xlat
pop
xchg
ljmp
xor
pop
mov
movsb
sbbb
and
dec
mov
int
pop
es
cltd
jle
xchg
outsl
mov
ficompl
push
and
hlt
incb
adc
je
test
xchg
push
and
push
int
fucomip
inc
push
or
fdivs
lea
jp
xor
ret
inc
push
cmc
insb
add
sub
sbbl
sbb
adc
jno
dec
pop
bound
movsl
mov
xor
ret
or
lret
arpl
mov
mov
sbbl
and
add
xchg
xor
xor
push
cmp
into
dec
in
pusha
roll
pop
lods
mov
push
ds
sbbb
push
sub
pop
shlb
std
adc
pop
jp,pt
inc
cmp
imul
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
scas
ret
idiv
scas
add
add
add
inc
mov
push
fincstp
outsl
enter
nop
pop
inc
mov
or
out
pop
and
or
cmpsl
leave
leave
jge
loope
jns
dec
sub
cmp
fs
push
sub
sarb
in
repnz
push
jge
push
sti
pusha
dec
fldl
add
mov
shrl
imul
clc
xchg
push
jnp
jecxz
push
xchg
xorl
jns
out
xchg
push
adc
mov
insl
add
xor
sbb
cmp
cmpsb
bound
out
ljmp
jmp
cwtl
ret
mov
mov
push
mov
or
sub
push
leave
lea
and
cmp
stos
push
jno
push
stos
js
sbb
dec
mov
inc
popf
xor
pop
mov
sub
imul
pop
cmp
shl
jae
xchg
push
cmp
add
fidivs
loop
ljmp
push
scas
add
add
add
es
fisubl
cmpsb
sub
rcrb
mov
insl
repnz
repz
pop
aad
dec
push
pop
addr16
and
je
sub
adc
adc
fxch
jp
and
shl
nop
stc
pop
mov
sub
dec
mov
aad
sub
jo
popa
fidivrl
nop
mov
adc
leave
lret
pop
mov
sti
dec
mov
push
push
dec
dec
xchg
jb
and
adcb
stos
repz
lret
bound
mov
rcr
sub
stos
pop
jg
mov
xchg
cltd
orl
push
sahf
xor
xor
sbb
mov
fstl
mov
call
cmpsb
mov
data16
xchg
stos
jg
sub
pop
fmull
push
and
pop
xor
mov
movsb
inc
out
leave
jg
int
jnp
pop
or
adc
lahf
sub
jne
inc
fisubrl
jne
or
sub
aas
dec
mov
push
xchg
jg
jmp
std
mov
dec
repnz
add
add
sub
dec
push
cmp
in
or
sub
dec
push
cmc
xchg
push
sarl
shrb
mov
pop
mov
add
dec
es
jo
mov
mov
cs
or
stos
sub
mov
cmp
jno
pop
shlb
xchg
sbb
ds
xchg
mov
mov
mov
xlat
push
or
in
and
cmpsb
imul
sbb
js
mov
es
mov
cli
scas
inc
daa
xor
pop
ljmp
mov
in
mov
dec
inc
lcall
imul
in
sub
into
js
adc
test
inc
loop
lods
add
data16
fcmovnbe
popf
mov
adc
adc
sarl
shll
popw
ret
lahf
ljmp
xlat
push
divb
inc
mov
mov
add
add
add
adc
sbb
rcrl
repz
out
idivb
dec
mov
xchg
xorb
adc
scas
push
fcmovnbe
push
jge
sub
and
xor
dec
and
jmp
test
lcall
fisubl
int
je
mov
movsb
mov
mov
adc
adc
add
lods
cltd
fimull
lods
aaa
adc
jmp
adc
push
push
or
cmp
cmp
ficompl
into
data16
push
mov
shll
mov
stos
stos
in
inc
cmc
mov
sbb
fisubs
outsb
test
sub
mov
lock
mov
es
rorb
inc
fsub
outsb
ficoml
sar
cmp
adc
dec
ds
jb
enter
into
movsl
dec
cmpsl
and
lret
sub
add
imul
fisubs
add
push
pop
xor
cmp
inc
call
mov
add
add
add
cltd
and
cmp
jne
mov
incb
sbb
pop
adc
cmpsb
cmc
jns
push
lret
in
fdivl
cmc
xorb
cmp
les
rcrl
hlt
lcall
lea
mov
adc
sub
jae
pushf
std
push
jge
dec
cltd
test
mov
loope
mov
mov
push
cmpsb
adc
sbb
stos
xchg
xchg
aam
mov
adc
jge
pushf
sbb
nop
test
sbb
sub
popa
push
mov
lret
std
cmpl
xor
dec
cmpb
xchg
or
xor
jle
push
movsl
lock
call
out
call
push
shrb
iret
adc
in
push
test
shlb
mov
movaps
dec
in
or
es
les
mov
arpl
xchg
push
addr16
add
add
add
xor
cmpsl
push
movb
xor
mov
jns
iret
dec
fistl
stc
and
sbb
js
sub
xchg
push
movsl
std
dec
aad
aad
sahf
mov
lret
aas
test
or
jnp
pop
xor
fiadds
roll
fs
mov
xor
xchg
add
sbb
mov
mov
cld
mov
push
js
inc
push
pop
aad
xchg
arpl
mov
adc
test
lods
aam
scas
mov
mov
sbb
add
nop
sbb
dec
addl
and
dec
push
push
xchg
push
movsb
pushf
jno
jno
adc
jmp
lea
aam
lret
nop
icebp
mov
movsb
cltd
imull
cmp
nop
lea
pop
xchg
orl
daa
jge
add
add
clc
pop
stc
out
push
pop
bound
addr16
add
add
add
mov
fs
insl
cmp
and
mov
ss
and
sahf
and
jle
jo
jbe
fisubrs
mov
daa
sbb
pmullw
push
sbb
mov
push
in
ret
xchg
xor
loope
repnz
arpl
sub
cmp
cmp
pushf
mov
push
test
fisttpll
dec
adc
aam
push
cmp
or
shl
sbb
pop
mov
adc
repnz
enter
cld
and
jecxz
mov
mov
or
jmp
sub
add
clc
inc
fisttpl
or
fsubrs
test
jmp
out
mov
cmp
cmp
icebp
lret
xchg
test
lahf
push
mov
test
into
fstp
stos
pop
test
imulb
jb
mov
push
fstpl
adc
sbb
and
dec
mov
jbe
push
lds
cli
lcall
push
addr16
add
add
add
sarb
ljmp
jno
stos
and
dec
xchg
xchg
inc
loope
cmp
xchg
mov
inc
daa
outsl
dec
sub
fldt
inc
js
out
cwtl
cmp
nop
pusha
les
pop
push
cmp
ret
pop
mull
mov
xchg
popf
inc
ds
repnz
ljmp
add
xor
mov
mov
cmp
adc
mov
outsb
sub
int3
dec
xchg
clc
add
sbb
outsb
std
pop
sbb
aam
inc
sub
int3
enter
adc
rclb
mov
add
mov
lock
in
inc
je
push
pop
test
mov
pop
pushf
inc
pop
cli
pop
loop
jnp
int3
out
and
jns
or
out
int
stos
xchg
push
arpl
or
das
and
outsb
adc
aas
js
std
sahf
test
shlb
xor
mov
or
rcrl
xorl
insb
lret
cmp
add
add
add
mov
cmp
ret
int3
in
xchg
mov
jno
jl
clc
cmpsl
cmp
dec
les
icebp
push
push
jmp
nop
rcrb
mov
lods
inc
xchg
jo
popf
out
ss
or
pop
push
sub
out
repnz
fidivl
test
fistpl
and
jl
and
stos
sti
mov
xchg
pop
mov
dec
xchg
pushl
dec
add
jns
cmp
sbb
inc
cmc
lods
movsb
fsubrp
add
xchg
cli
filds
xor
stos
dec
and
inc
outsl
cmp
adcb
cmp
adc
sbb
test
or
out
jne
mov
sbb
test
loopne
daa
outsl
jne
add
pusha
dec
gs
push
aaa
ds
adc
push
jne
loopne
cmp
fs
xor
xor
mov
jbe
add
add
pop
sbbl
fstp
rorl
push
lcall
add
fmul
arpl
add
adc
xor
aam
jno
les
es
xor
mov
mov
xor
pop
gs
das
push
nop
repz
jmp
fs
insl
mov
imul
or
jb
sub
in
sbbb
push
adc
push
push
jne
cmpsl
push
push
sbb
test
clc
in
mov
popf
mov
pop
cltd
test
mov
pusha
out
mov
jne
cld
fxch
xchg
pop
loope
movsb
test
push
jle
insb
sub
add
mov
bound
jnp
in
cli
aas
jge
mov
test
out
or
iret
insb
popa
push
ret
xchg
lcall
jne
xor
ljmp
pop
not
int3
clc
fdivr
add
out
sub
gs
pop
fsubrs
add
cmp
ret
xchg
pop
loope
mov
jecxz
out
mov
cmpsw
xchg
addr16
add
and
int
xchg
inc
scas
xchg
rorl
push
xchg
jecxz
pop
outsb
xor
fldenv
repz
and
inc
hlt
jno
int3
mov
mov
jle
mov
cmp
shl
stc
jmp
arpl
scas
and
mov
das
leave
rorb
ret
loop
mov
in
idivl
les
repz
cwtl
mov
popf
and
xchg
add
and
pop
xchg
sbb
cmp
cmp
mov
xlat
out
frstor
shrl
inc
gs
cmp
repz
sbb
xchg
ja
jbe
das
mov
orb
lret
inc
out
shll
rorl
ja
jb
mov
jae
and
cmpsb
movsb
xchg
in
push
or
dec
mov
mov
fdivs
dec
es
lcall
stc
fiadds
push
jne
add
add
push
xchg
test
jg
into
lret
orl
add
add
push
int3
push
test
aad
aam
xchg
ficoml
shr
mov
jp
push
push
or
jbe
dec
faddl
jo
clc
dec
aad
sub
and
fisubs
push
fcmovnbe
mov
and
shrb
push
into
mov
loopne
xchg
and
jae
sub
sbb
adc
xchg
jle
scas
mov
push
mov
scas
dec
and
mov
lock
mov
lea
psllq
movb
pusha
sahf
push
cmp
cmp
pop
sysexit
aaa
outsl
pop
jp
cltd
fldl
add
push
lock
cmp
je
dec
mov
inc
jp
jge
pop
sub
adc
call
pop
mov
call
sbb
xchg
add
or
inc
rorb
jge
mov
jge
pop
cmp
jnp
inc
cmpsl
mov
mov
sbb
add
adc
in
lcall
jae
dec
mov
gs
addr16
add
sbb
dec
sahf
inc
pop
test
dec
fildll
mov
adc
sbb
mov
std
adc
cmp
lret
stc
movb
add
fbld
mov
pushf
mov
pop
jne
and
pop
lock
or
arpl
scas
aam
cs
mov
inc
jne
cmpsl
popa
js
mov
pop
shlb
ja
imul
xlat
jns
ret
call
mov
into
cmp
test
ja
sub
mov
pop
pop
mov
mov
lcall
fcoml
or
sbbb
std
test
dec
popa
sub
jle
sahf
jmp
shl
icebp
in
cmc
jmp
adc
xchg
shll
inc
ja
push
lret
and
sub
aas
int3
pop
js
sub
jg
add
dec
adc
adc
ljmp
insl
cmp
jp
jmp
pushf
dec
mov
mov
dec
or
jg
dec
arpl
inc
addr16
add
in
orps
clc
das
xchg
xchg
jne
xchg
into
sbb
pop
seto
add
cmp
fucomp
lcall
addr16
into
inc
in
add
xchg
cs
pop
and
pop
adc
mov
pop
pop
out
fnstenv
lods
cmp
sahf
lea
pop
push
lea
daa
je
cmovge
call
subb
jo
mov
push
mov
mov
out
andl
in
push
sbb
cmp
dec
push
pop
mov
popf
or
jecxz
and
xor
cmp
aad
int3
loopne
gs
xchg
add
sub
or
xchg
ss
xchg
or
xor
aas
enter
jecxz
lahf
cmp
test
adc
or
mov
jb
mov
std
xor
mov
fnstenv
mov
outsl
cmp
xchg
sub
add
add
out
idiv
outsl
mov
adc
add
addr16
add
fistpl
bound
es
fisttps
add
outsl
cltd
mov
stc
pop
add
addb
mov
and
jne
jl
in
rolb
mov
adc
insb
dec
cmc
xchg
inc
rcrb
loope
aas
mov
cmp
lock
insl
add
push
dec
popa
xor
xchg
test
add
int
lods
inc
sbb
ret
sbb
lods
sti
mov
call
mov
xorb
adc
in
ja
sub
mov
imul
cmpsl
es
lods
cltd
mov
fs
dec
jecxz
push
sbb
inc
xor
jl
pusha
jmp
xor
add
xchg
and
and
lcall
out
movl
fucomp
xor
mov
pop
adc
add
add
add
insl
pop
xchg
ffreep
jg
or
nop
cmp
mov
fistl
lahf
xchg
mov
xchg
aad
fsubl
xor
jno
xor
xchg
push
std
in
iret
dec
push
mov
adc
aas
jb
or
inc
mov
adc
mov
icebp
nop
pop
and
or
stos
daa
mov
or
les
ss
sbb
es
xchg
mov
jns
scas
hlt
sahf
cmpsb
push
and
mov
in
cmp
rcll
and
mov
mov
mov
jle
jns
push
outsb
pop
lahf
hlt
sahf
jg
stos
ss
sub
or
rcr
sti
scas
push
jno
push
loope
sbb
inc
lcall
mov
xor
jp
inc
mov
loopne
std
jge
adc
leave
aam
movsb
xchg
iret
jmp
loope
insl
mov
push
sbb
sar
movl
push
push
call
push
shufps
add
add
add
stc
and
push
lret
jb
mov
mov
xor
xlat
jecxz
dec
test
ret
sbb
test
sbb
pushf
jae
sub
pop
xor
icebp
push
cmp
xor
pop
jl
andl
jl
les
inc
int3
push
pop
add
inc
push
ja
cltd
pop
call
rcrb
lahf
out
dec
in
ret
jae
ror
addr16
jl
fwait
or
push
cld
adc
mov
stc
or
jb
pop
push
aad
jne
adc
in
sub
jp
in
sub
ret
loope
jns
push
adc
sub
leave
cwtl
mov
les
movsl
jmp
je
mov
or
push
inc
pop
sub
mov
repz
sbb
and
rcll
sbb
sub
lret
leave
inc
sub
int
cmp
test
xlat
into
std
sti
leave
sti
iret
jmp
sbb
dec
addr16
add
add
xor
sub
call
add
fwait
movsl
cmp
loop
xchg
sub
or
test
push
mov
push
iret
mov
or
les
cld
sub
cmc
push
mov
ficoml
outsl
add
mov
nop
cmp
push
jp
or
xchg
xchg
pop
mov
mov
dec
test
xchg
inc
push
ficoms
adc
addl
jmp
out
xorb
stc
pop
xlat
movsb
push
cmp
cmpsb
notb
std
jecxz
jo
jge
xlat
inc
gs
inc
jp
sub
bound
clc
shrb
xchg
int3
sbb
test
jns
imul
adc
es
lahf
pop
inc
test
dec
or
jbe
leave
jnp
mov
jg
ljmp
and
and
adc
lea
add
add
add
mov
xor
jge
jp
rolb
add
add
iret
addb
dec
lcall
mov
movsl
dec
inc
ret
adc
lret
hlt
sub
adc
faddl
dec
lods
dec
jnp
cmp
test
jp
popf
nop
mov
cmp
add
cld
das
es
xlat
rorb
sbb
adcb
scas
test
and
andb
sub
mov
xchg
mov
dec
mov
adc
dec
pusha
ds
xorl
mov
push
pop
pushl
cmp
roll
xlat
test
cmc
clc
and
add
pop
mov
int
push
xchg
sub
jl
mov
mov
push
call
popa
and
adc
decb
fldenv
add
repz
int3
adc
jb
adc
aad
lcall
jg
cltd
xchg
movsl
out
dec
adc
mov
add
sub
stos
aaa
push
das
in
fwait
mov
or
jg
mov
sahf
loop
pop
cld
out
roll
add
add
cwtl
mov
mov
cmpsb
stc
jae
ljmp
negb
inc
insb
inc
ja
sbb
jns
jno
movsb
mov
adc
sbb
mov
dec
test
push
inc
scas
ficoml
pop
lods
out
shll
repz
gs
cwtl
sbb
adcl
arpl
mov
insl
cmp
insl
jb
and
sub
and
fdivr
mov
dec
add
or
push
in
ljmp
insl
enter
mov
fmull
push
cwtl
pop
lods
lret
lret
addb
das
xchg
inc
aad
sbb
push
into
mov
ja
outsb
add
xor
pop
sahf
pop
add
adc
in
fwait
push
movsl
inc
test
or
mov
cmpsb
cs
dec
dec
fldenv
stos
cmpl
cmp
xchg
addr16
xor
aad
xor
xchg
daa
push
xor
push
cld
pushl
cld
sbb
addr16
add
add
dec
ret
out
ja
push
xchg
shlb
cli
add
mov
aam
and
pop
scas
mov
mov
sarb
jecxz
je
mov
leave
mov
adc
ljmp
add
dec
movsb
aad
int3
xor
sbb
insb
fsubl
clc
sub
cmpsb
pop
sahf
inc
jle
das
pop
mov
xor
outsb
in
dec
inc
sub
and
enter
push
dec
insb
aas
pop
es
dec
or
insb
dec
cmpsl
negl
test
inc
dec
fcmovbe
iret
ljmp
push
or
xor
nop
or
jle
out
lds
daa
iret
cmp
jmp
push
cmp
paddq
xchg
stos
mov
pop
gs
fisubrs
outsl
push
mov
and
add
cmp
repz
in
push
dec
insb
imulb
shlb
call
add
pushf
shrb
lcall
jg
cs
add
add
jae
add
pop
scas
rorl
ja
pop
dec
pop
lahf
mov
sbb
fdecstp
cmc
bound
add
push
sub
push
fisttpl
mov
stos
mov
cmpsb
xlat
fs
cs
push
test
inc
lea
push
repnz
mov
sar
inc
addr16
in
outsl
sub
or
insb
ss
and
pop
imul
jmp
xchg
repnz
push
push
sbb
jnp
rcrl
cmp
call
dec
fs
xchg
push
and
mov
js
js
aad
test
je
push
scas
mov
orl
jecxz
pop
mov
das
test
stos
test
js
dec
jg
popf
fcoms
add
or
mov
pushf
nop
pop
push
xchg
js
xor
fildll
addb
in
int
rcr
ret
inc
xor
cmp
sub
scas
mov
aas
scas
fsts
add
add
add
add
cmp
and
mov
sbb
cmp
in
mov
arpl
and
stos
mov
loope
nop
adc
repnz
xor
ds
adc
shlb
pop
mov
pusha
js
call
add
ret
dec
mov
imul
mov
imul
mov
out
and
mov
pop
inc
dec
inc
mov
add
out
pushf
adc
imul
lret
test
xchg
pop
mov
ret
xor
daa
lds
push
sti
cmpl
cld
leave
cwtl
fistpl
aas
jns
mov
lret
sar
jle
and
test
lods
mov
les
mov
in
in
imul
mov
out
mov
shlb
test
cmc
pop
pop
ljmp
aaa
shll
imul
fisttpll
repnz
inc
mov
jmp
sar
and
push
bound
jg
jne
jne
jg
loop
mov
inc
lds
add
add
add
xor
scas
xchg
sarb
push
mov
fwait
je
sar
xor
push
jg
mov
popf
xor
or
pop
sbb
xchg
adc
pop
addr16
jbe
sti
notb
inc
scas
repnz
lcall
push
dec
or
outsb
outsl
or
xchg
xor
in
into
xor
insl
aad
pop
lcall
xor
popa
cld
push
mov
mov
dec
jne
mov
xor
imul
add
insl
out
in
pop
or
std
ljmp
das
adc
pop
xor
out
xor
scas
add
incb
or
xorl
lds
insl
mov
sub
call
neg
add
aaa
jmp
lea
xor
mov
cwtl
stc
xchg
dec
xchg
adc
ljmp
movsb
bound
sbb
mov
cmc
mov
cmp
add
add
add
push
sbb
mov
shlb
sub
cmp
xor
mov
out
test
push
push
xor
movsl
addr16
sbb
sbb
daa
mov
push
dec
pushf
xchg
into
jne
pop
push
test
lret
sub
cwtl
jnp
xor
cmp
out
adc
sub
fstps
ret
xchg
jns
rcrb
xchg
lods
jns
add
push
and
mov
sbb
cmc
std
pop
repnz
stos
mov
and
jno
pop
pop
push
fdivr
int3
dec
mov
decl
loop
and
arpl
aaa
out
cmp
fwait
lret
aad
insb
inc
sub
lock
shll
pop
pop
loope
loop
pop
inc
mov
scas
test
dec
shlb
sahf
fidivs
add
mov
testb
into
adc
mov
in
adc
lahf
jle
dec
arpl
and
xchg
and
outsb
jle
lods
testl
movl
add
jnp
repnz
insl
imul
ds
push
call
iret
mov
rcll
sbb
hlt
loopne
xchg
lcall
fsubs
mov
loop
sub
ljmp
scas
int3
mov
pop
ret
nop
out
sbb
and
and
inc
test
test
rcr
lods
icebp
cmpsb
or
and
ret
jl
sub
es
dec
jno
aam
xchg
pop
sub
mov
and
jge
lea
fcoms
mov
mov
sub
dec
adc
adc
push
push
outsb
pushf
lcall
jmp
mov
data16
inc
mov
movsb
jno
cmp
adc
mov
push
leave
mov
pop
test
push
fildll
ss
sub
and
push
fmuls
add
cmp
iret
pusha
push
loope
and
and
mov
add
mov
xchg
insb
push
cld
and
add
add
add
adc
mov
rorb
jge
inc
cmpsl
and
inc
test
or
stos
jo
xchg
mov
xchg
cs
subl
lea
jmp
stos
rolb
and
aam
aam
stos
push
andl
fldl
sbb
test
push
jns
fwait
sub
inc
pop
dec
jp
cld
push
in
push
inc
mov
cld
enter
pusha
lods
pop
popa
mov
iret
lret
jne
push
cmc
mov
test
fs
mov
mov
push
xchg
mov
stos
sub
outsb
and
cmp
add
icebp
jecxz
and
or
mov
xor
jnp
lahf
mov
dec
aad
adc
add
mov
xchg
sub
cmp
jo
andl
dec
cwtl
fstpt
clc
add
jecxz
sti
pop
fwait
mov
add
add
out
sti
xlat
in
aad
fisttpl
fs
addr16
add
add
add
cmp
orl
push
pop
cld
push
cmp
aad
repz
lock
outsb
popa
ret
test
jmp
push
sti
mov
adc
or
dec
jo
add
sub
fbstp
lds
mov
arpl
jle
orb
repnz
jne
fcompl
dec
pcmpeqd
xchg
shl
ds
adc
test
push
xor
lea
cltd
std
inc
arpl
mov
int3
jno
fisttps
roll
inc
push
and
test
lds
in
add
inc
cmp
jns
pop
pushf
pushf
jae
test
and
popf
mov
sbb
jae
jnp
xor
ds
inc
outsl
rorb
adc
test
icebp
in
inc
xor
sar
scas
and
mov
xchg
dec
xchg
test
pop
rorl
sbbl
xor
add
ds
sub
cmp
jg
and
mov
or
add
add
add
jp
adc
loope
xchg
mov
sbb
adc
jns
testl
fsub
mov
pop
and
scas
aas
mov
nop
sbb
mov
popa
xchg
gs
xchg
call
mov
arpl
mov
mov
dec
das
mov
lret
bound
outsb
and
je
ficoms
sub
and
lcall
sub
iret
ret
lcall
out
cwtl
push
xor
scas
jmp
repz
sbb
jbe
xchg
xor
or
pop
daa
xlat
out
or
sbb
adc
faddp
or
dec
sub
imul
lock
pop
jbe
sbb
addb
inc
leave
or
push
leave
jle
sbb
lret
ja
adc
rorb
dec
sub
mov
pop
pop
dec
mov
mov
push
push
push
sub
sub
add
add
xor
fistpll
out
repz
fcoms
push
outsl
xor
addr16
add
add
add
add
lret
ljmp
xchg
mov
pusha
lods
mov
cmp
adc
adc
add
mov
jb
ds
sbb
ljmp
rcl
adc
xchg
jl
pusha
mov
shlb
mov
mov
adc
out
movsl
out
add
adc
mov
cld
xchg
pop
cmpsb
cmpsl
jae
mov
adc
push
lcall
jb
mov
lahf
lock
cwtl
fistps
jl
jmp
shlb
rcl
int3
lcall
js
test
imul
push
test
out
push
xchg
decl
xchg
out
or
push
pop
rorb
clc
jp
adc
adcb
mov
mov
jge
xor
arpl
out
sub
shll
popa
orl
idivl
dec
adc
add
mov
mov
mov
xchg
les
add
add
add
bound
dec
xchg
out
les
jbe
pop
out
aad
mov
add
aaa
jge
mov
gs
adc
adc
mov
stos
inc
push
jl
movsl
std
in
add
xchg
cmp
cvtps2pd
aaa
fistpl
pusha
bound
adc
push
or
cmp
arpl
aam
ss
cmp
gs
xchg
sbb
icebp
xor
or
fcoms
mov
adc
sarb
repnz
or
mov
or
jo
test
mov
mov
sub
fistl
clc
xor
jnp
jne
xchg
fildl
jne
or
shr
fdivl
inc
adc
adc
pushf
inc
inc
fisttpl
mov
and
xor
and
jle
push
lods
cmc
icebp
mov
stc
enter
in
sbb
push
inc
cmp
arpl
add
add
add
clc
sti
adc
ret
outsb
in
clc
cmp
mov
xlat
out
ror
lods
push
add
fldl
mov
mov
lods
loope
fdivrl
hlt
les
and
shrl
mov
lcall
pop
jg
fld
add
xlat
cld
pop
sbb
pop
loope
movsb
push
cltd
sbb
push
out
leave
mov
xor
dec
mov
add
roll
dec
mov
cmp
outsb
pop
hlt
mov
sarb
in
jg
lret
fmuls
adc
setne
dec
xor
xchg
or
inc
sbb
add
pop
xchg
test
xchg
aas
cmpsl
data16
arpl
inc
and
gs
add
push
mov
ds
jg
adc
int3
dec
mov
nop
and
imul
call
jno
enter
shr
jbe
jmp
xor
fwait
enter
cmpb
jp
jnp
xchg
inc
test
or
cltd
jne
imul
cmc
call
inc
push
popa
adc
add
add
add
mov
fidivs
mov
sbb
add
add
sbb
jns
push
push
add
adc
arpl
ds
mov
shll
pop
xor
inc
dec
cmp
xor
or
out
xor
lock
mov
lods
stc
or
imul
ror
sti
jle
lods
cs
xor
jg
xor
sub
adcb
int
mov
test
jo
add
push
lods
jecxz
add
ljmp
into
mov
push
adc
or
jbe
sbb
dec
aam
shlb
add
cwtl
mov
outsl
testb
pop
sbb
enter
fdecstp
cld
xor
enter
sbb
pop
subl
xor
inc
int
push
bound
fs
pop
and
jns
fcomip
ret
scas
and
ss
jle
mov
mov
jb
movsl
mov
iret
sub
test
add
add
add
cli
xchg
iret
scas
lock
dec
loope
push
xchg
fcoml
setge
sbb
adc
pop
lret
add
clc
ret
js
ret
js
jns
mov
cmp
and
aam
imul
adc
mov
je
loop
mov
xor
gs
cmpsb
insb
jmp
fdivr
xchg
lock
mov
xlat
cmp
dec
cmpsl
adc
out
repnz
adc
sbb
adc
out
popf
mov
push
and
fdivl
addb
mov
inc
pop
adc
jp
pop
clc
push
scas
mov
xchg
cmp
outsb
inc
inc
stos
adcb
dec
push
sbb
cli
and
add
lods
mov
out
adc
sub
pop
mov
mov
ss
leave
cmp
das
pop
mov
mov
out
dec
fisubl
adc
inc
call
dec
xchg
and
lods
add
jp
mov
out
out
out
into
gs
cld
test
mov
mov
add
add
dec
add
lcall
cmp
bound
cmp
out
mov
add
ret
xor
das
aad
ljmp
fisubrs
imul
js
fwait
mov
inc
outsl
inc
mov
mov
xor
mov
add
lods
dec
jl
repz
sub
push
xor
xchg
loop
shrb
pop
jns
loope
ds
inc
andb
cmpsb
pushf
ret
pop
push
mov
cltd
mov
sub
xor
test
test
dec
stos
sbb
adc
sbb
fsubrp
ficomps
and
je
mov
or
call
fildll
cmp
push
iret
lock
insl
iret
mov
cvtps2pd
xor
or
mov
jge
or
stos
imul
add
outsb
shrl
sub
mov
push
mov
rolb
and
mov
icebp
addb
add
loopne
and
je
out
mov
lcall
add
add
add
out
cli
jmp
mov
push
mov
inc
jg
not
adc
and
or
pop
mov
cs
negb
mov
mov
test
clc
subb
push
or
fwait
test
stos
ss
cld
mov
pop
adc
clc
sbbb
test
sub
cmp
movsl
sbb
jl
sbb
adc
mov
dec
or
iret
adc
ret
loope
xchg
fisttpll
in
inc
cmp
int
cwtl
test
and
ds
icebp
sbb
loop,pt
aam
mov
sbb
inc
and
test
xchg
and
div
mov
aam
push
mov
mov
stos
loopne
adc
push
xchg
cmpsb
ret
outsb
xchg
sub
jbe
or
jl
xchg
icebp
add
add
jl
outsb
pop
jno
or
sbb
lret
arpl
and
and
add
mov
add
dec
daa
dec
das
outsb
imul
push
xchg
push
pop
rolb
add
add
add
mov
lock
loopne
sub
pushl
insb
xchg
adc
lods
push
movd
lahf
aam
dec
push
jb
in
mov
pop
dec
mov
push
jo
jae
adc
mov
fadds
es
xchg
int3
mov
fbstp
repz
lahf
enter
or
push
add
xchg
lock
hlt
pop
std
daa
maskmovq
negl
mov
sub
pusha
cmp
mov
push
xor
lock
mov
mov
outsb
add
sub
or
adc
into
mov
cld
cmovb
fld1
and
xchg
adc
push
sbb
fistl
inc
jbe
enter
mov
aas
jmp
int3
lahf
adc
cmc
add
mov
fists
sub
ljmp
sub
or
lods
adc
xor
jns
flds
int
xchg
cmp
mov
mov
jmpw
call
out
lahf
ret
or
roll
add
add
add
xchg
jle
jecxz
test
dec
cmp
mov
or
push
xchg
pop
test
cwtl
mov
jmp
xor
sti
adc
gs
rcrb
inc
mov
and
inc
repnz
xor
daa
aad
sbb
or
push
imul
cmp
fiadds
lds
iret
les
cmc
xchg
arpl
inc
mov
popf
jecxz
or
xchg
jmp
mov
xor
sbb
addr16
outsl
mov
daa
lret
adcb
cmp
shl
fldl
ficoms
adc
imul
gs
sbb
repz
mov
and
push
xchg
dec
push
rorb
inc
xorl
jno
cmp
mov
xor
lahf
mov
cmp
repnz
mov
mov
mov
pop
xchg
or
cmp
ret
add
add
add
and
icebp
dec
insl
insb
xor
rcl
jbe
ret
aad
dec
fisubl
push
cmpsl
xor
mov
jp
xor
scas
adc
loop
pop
add
or
mov
jl
inc
fninit
jae
xor
sar
iret
and
or
aaa
mov
xchg
jp
mov
jnp
or
mov
sub
pop
aam
out
rclb
mov
sbbl
dec
add
imul
cs
mov
jo
into
push
cmp
clc
push
or
lods
sbb
xchg
push
and
jnp
xlat
jo
in
mov
incb
out
fsubrs
insb
dec
mov
lahf
negl
push
lcall
inc
movsb
mov
dec
imul
fsubs
dec
ss
sbbb
in
mov
pop
inc
lahf
lds
mov
mov
add
add
add
sbb
sub
dec
fcomi
fmuls
aad
add
add
add
xchg
leave
inc
cld
sahf
cmp
insl
orb
pop
and
fwait
pop
imul
imul
mov
or
mov
xchg
mov
pop
sub
jbe
andb
in
jbe
dec
push
lahf
jnp
outsl
mov
and
pop
adc
xchg
jnp
daa
dec
addr16
es
aad
push
insl
cltd
inc
jnp
je
ficompl
fisubl
cmp
outsb
outsb
mov
out
mov
sbb
stos
lock
inc
inc
mov
stc
mov
sbb
and
ret
add
cs
and
dec
xchg
nop
das
ljmp
cli
xor
push
iret
dec
je
ret
and
fwait
cmp
xor
push
les
xchg
sub
movsb
sub
pushw
outsb
cwtl
mov
inc
mov
cltd
outsl
mov
jns
fidivrs
repnz
pop
insb
xchg
nop
sub
sub
sbb
cld
pop
or
jle
and
mov
add
add
ds
jae
loop
aaa
addr16
add
add
add
mov
or
push
shll
nop
fst
mov
dec
rep
mov
xchg
imul
adc
and
add
in
jecxz
cs
insl
xchg
or
repnz
repz
mov
xor
mov
jne
jp
insl
not
lods
xlat
sub
mov
ja
push
ss
outsb
mov
fwait
test
or
mov
mov
out
sub
xchg
call
fdivl
les
imul
sbb
insl
andb
call
adc
push
cmpsb
jmp
sub
dec
push
sbb
mov
xor
shl
sub
pop
push
movsb
loopne
mul
jge
xlat
lcall
xchg
mov
les
jno
aaa
out
sarb
insb
or
xor
or
cmp
cmc
sti
mov
out
int3
jl,pn
xchg
and
idiv
lahf
insl
mov
mov
add
add
add
fcoms
pop
jge
ja
movl
sub
push
mov
cmp
gs
repnz
pop
xchg
xor
push
flds
test
fimull
mov
mov
jp,pn
push
add
pop
int3
out
push
sti
rol
adc
cmp
dec
lea
jmp
add
jp
dec
sub
mov
or
jle
pop
push
jae
pop
mov
shlb
ror
cmp
xchg
lds
hlt
lods
ret
loopne
sub
out
sub
and
or
nop
ljmp
hlt
or
jmp
pop
pop
fldenv
sahf
inc
push
cmpsb
mov
mov
jmp
gs
xchg
in
inc
pushf
xchg
sub
adc
mov
xchg
je
not
dec
testb
add
fnstcw
cs
mov
enter
loope
popa
out
icebp
data16
in
testl
add
cmp
jg
leave
or
cmc
fwait
xchg
mov
add
add
movsl
or
adc
int
test
mov
pop
pop
int
xchg
or
lds
out
adc
out
mov
fwait
scas
iret
mov
inc
adc
xor
inc
mov
leave
test
lcall
inc
sbb
push
mov
lahf
bound
cmpsl
imul
test
xchg
out
in
ss
ret
jmp
test
imul
clc
outsl
mov
mov
fdivrl
or
fisubrl
insl
mov
lret
std
pop
mov
lahf
sbb
mov
cltd
repz
push
lret
jge
lock
add
add
lret
cld
rol
mov
jnp
aaa
fcompl
int
repz
repz
sbb
nop
add
fsubr
stos
outsl
mov
inc
fadd
cltd
arpl
xor
rcrl
and
jns
sub
add
add
int
out
out
imul
nop
xchg
movsb
sub
flds
add
add
add
test
pop
and
shl
in
rorb
mov
outsb
jge
ror
sub
out
aad
mov
inc
cli
add
nop
xor
aas
jmp
adc
ficoms
movsb
inc
fwait
out
pop
imul
ljmp
mov
cwtl
cmp
lea
loop
loopne
stos
mov
sub
adc
adc
pop
adc
loop
push
jb
movsl
sub
mov
mov
dec
pusha
push
out
clc
popf
push
xor
sbb
add
jmp
repnz
pop
imul
imul
pop
addl
jle
repnz
pop
add
frstor
sbb
iret
jb
adc
popf
sti
std
xor
in
lcall
les
fcoms
sahf
dec
jl
test
daa
cmc
sahf
dec
cltd
mov
pop
push
or
inc
push
jp
filds
add
add
psubusw
push
in
sub
dec
fiaddl
add
add
add
pop
insl
jno
cltd
push
jno
mov
or
mov
popf
push
mov
sub
fnstcw
xchg
fldenv
mov
push
out
fs
sub
cmp
jmp
push
sbb
or
insb
lret
pop
xchg
stc
pop
mov
fiadds
cmp
fistl
inc
in
ljmp
daa
push
sub
jns
negb
sbb
mov
rcll
shlb
lds
sbb
movsl
in
mov
test
mov
es
pop
xchg
or
roll
add
and
mov
jne
les
pop
test
hlt
outsb
loope
sub
imul
in
pop
loop
push
pop
mov
fiadds
outsb
or
inc
insb
mov
mov
aas
push
mov
icebp
pusha
ret
daa
or
leave
or
outsb
fcoml
sbb
jo
subb
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
xor
add
add
add
mov
or
ret
push
outsb
es
xor
loopne
dec
push
jno
mov
jp
add
scas
out
adc
rcrb
push
aas
lret
mov
pop
repnz
mov
jg
arpl
test
cmc
xchg
sbb
sbb
inc
mov
push
fmul
sub
cmp
push
mov
call
outsb
jl
stos
roll
aas
push
and
lods
jno
rcll
sub
ljmp
cmp
dec
test
mov
jp
inc
shrb
lods
mov
fsubrp
std
and
gs
fisttpll
or
stos
ljmp
mov
dec
inc
lret
pop
dec
dec
jae
repz
insl
mov
sti
or
push
add
sbb
mov
xchg
out
leave
in
int
bnd
xor
add
add
jle
jg
std
fstpt
inc
enter
add
add
add
outsl
outsb
lods
xor
mov
idivb
iret
or
out
rorl
rcr
test
mov
popa
scas
jle
fidivrs
adc
insl
push
xor
xchg
and
pusha
pop
jnp
cmc
jle
cli
pop
jle
ret
pusha
out
test
adcl
repz
sub
pop
js
ret
testl
cmpsl
ret
jnp
cmp
xchg
mov
xchg
xchg
xchg
pop
out
inc
outsb
fdivrs
push
out
sub
jno
xchg
jp
sbb
ret
xor
imul
addr16
int
out
cli
out
adc
jp
and
daa
add
fwait
push
dec
jnp
js
fwait
movsb
shlb
jo
sahf
in
xchg
inc
cmp
dec
ss
sub
sbb
adc
sub
jne
mov
mov
sub
shrl
xchg
mov
jecxz
or
push
aad
hlt
mov
mov
add
add
mov
sti
idiv
lods
pop
sbb
mov
add
add
add
das
and
or
jl
jb
push
test
ret
inc
ret
out
test
mov
or
dec
xchg
aad
jo
ret
sbbl
mov
push
dec
push
pusha
jg
dec
pop
jb
clc
pop
adc
add
out
dec
test
inc
sbb
pop
jl
push
cmp
test
mov
movsb
adc
push
add
dec
jl
xchg
call
adcl
ret
xchg
mov
test
mov
fwait
push
cmp
or
jno
fs
cmc
fcmovnu
lcall
ret
lret
xchg
mov
push
mov
imul
aas
aad
add
sar
out
lcall
adc
jg
jle
pop
fbstp
push
cld
mov
cwtl
cmp
mov
arpl
add
add
sbb
jmp
scas
inc
call
fiadds
add
add
add
dec
hlt
xchg
std
shr
mov
pop
js
pop
loope
aad
imul
cld
addr16
pop
mov
stc
mov
fwait
int3
popa
and
dec
mov
or
sub
ret
push
stos
jle
jo
jae
or
or
mov
mov
rcrl
push
jne
and
xor
bound
int3
xchg
xchg
nop
repz
enter
mov
add
push
pop
insb
sahf
sbbb
hlt
push
std
lret
sbb
inc
enter
sub
sub
mov
in
jmp
rolb
in
sbb
stos
jmp
in
xchg
arpl
gs
idiv
jecxz
xlat
inc
les
push
std
aam
sbb
popf
popa
jg
mov
repnz
dec
out
aaa
mov
mov
cmp
sahf
mov
fldl2e
outsb
imul
add
cmpsl
fimull
faddl
test
add
add
xchg
xor
pusha
xchg
mov
or
xor
push
mov
insb
test
addr16
and
mov
or
push
mov
pop
adc
cmpsl
xchg
test
lods
push
mov
and
mov
lock
mov
cmp
cmp
hlt
cmp
push
mov
add
push
xlat
sbb
outsl
imul
mov
leave
mov
cmp
add
dec
movsb
dec
out
lods
cli
fisttps
test
notb
scas
stos
and
aam
xor
cmp
cmp
lods
mov
mov
ret
sti
insl
incb
pop
daa
test
in
xchg
cmpsb
lret
pop
mov
add
push
push
adc
mov
cli
or
cmpsb
mov
lcall
int3
ret
lds
sbb
jl
stos
movsb
and
xor
int
roll
mov
add
mov
lcall
fisttps
or
loopnew
add
add
add
in
ret
cwtl
pusha
jecxz
jno
ficomps
sti
icebp
adc
mov
cmp
sbb
test
aas
or
pop
xlat
addr16
jl
pop
insl
cmpsl
xor
das
gs
adc
mov
mov
cltd
inc
lock
jo
arpl
clc
cmovge
in
adc
popf
push
dec
and
les
ret
xor
sbb
cmpsb
jne
dec
jb
ror
cmp
clc
inc
mov
fwait
or
cwtl
mov
imul
pusha
xor
sub
outsb
scas
or
scas
jbe
das
aaa
pop
sub
mov
pop
mov
movsl
rcll
addb
push
sub
popf
jbe
cmp
hlt
stos
scas
out
jbe
lret
pop
jno
sbb
push
dec
sub
xchg
das
ret
addr16
clc
shll
lret
push
or
adc
sub
pop
movsl
jl
and
or
lret
sbb
add
add
imul
lds
add
add
mov
jns
xchg
xchg
mov
sub
xchg
loopew
add
add
add
add
add
jb
repnz
jb
xor
dec
push
xchg
xor
mov
inc
leave
cmp
nop
jl
js
mov
dec
lea
js
ficoml
lea
lahf
les
jl
outsb
mov
mov
jae
lret
imul
jbe
sub
loopne
daa
sub
inc
add
shll
dec
and
mov
stos
test
xlat
ljmp
push
mov
nop
int
sub
adc
scas
mov
outsb
add
hlt
xor
or
std
inc
cmc
mov
push
push
and
mov
cli
das
push
mov
xchg
int
jno
xor
stos
mov
dec
or
jl
cmp
or
adc
hlt
push
xchg
enter
addb
sbb
jae
les
add
pop
sbb
pop
imul
cs
add
add
fadd
fsubp
jnp
or
cld
les
loop
add
add
add
in
imul
sub
or
mov
mov
cmp
fs
jecxz
int3
xor
pop
popa
pop
and
les
cmpsb
out
scas
aaa
in
sub
std
sbb
pop
add
in
push
loop
cmp
mov
dec
bound
dec
xchg
add
cmp
cmp
inc
aad
shll
push
cmp
xor
test
flds
jl
xor
outsl
inc
mov
dec
or
pop
xor
hlt
adc
xor
mov
jge
cmpsb
push
push
adc
ret
arpl
shrl
inc
pop
xor
test
jae
lahf
pusha
lds
mov
jg
roll
test
push
mov
divb
jbe
lds
cld
sbb
pusha
push
loopne
divb
jp
ja
pushl
fstpt
neg
adc
lcall
add
push
cmp
sub
cld
cli
jle
dec
nop
xor
int
jecxz
add
add
add
push
adc
shrb
xor
icebp
inc
repz
out
jo
sub
dec
mov
test
xchg
push
pusha
ljmp
aam
xchg
decb
stos
addb
and
mov
sub
jno
rol
and
mov
aaa
xchg
cmp
inc
xlat
jne
movsl
adc
inc
pop
int3
adc
cmp
and
and
jns
sub
bound
or
jge
and
sub
je
ja
inc
xchg
sarb
nop
loop
loopne
test
dec
jge
stos
jge
test
in
pop
inc
lahf
loopne
pop
or
push
jp
into
imul
int3
sti
clc
push
fwait
and
xchg
push
lahf
inc
imul
nop
push
xorl
inc
mov
inc
shll
shlb
imul
std
jl
add
add
ja
sti
aaa
out
ja
jg
fbld
add
add
add
jno
inc
xlat
sbb
jns
add
xchg
out
rcrl
xchg
cltd
aam
test
push
adc
test
loope
into
sub
repz
notb
pop
add
xor
rcrb
stos
xor
test
sub
test
iret
roll
mov
adc
pop
cwtl
adc
inc
mov
leave
not
daa
test
mov
push
pop
cwtl
nop
mov
mov
bound
pop
shrl
addr16
sub
cmp
shl
pop
jb
xor
lahf
mov
je
adc
dec
out
lahf
or
cmp
jb
jne
cmpb
sub
pop
fldt
lea
add
pop
cltd
movsl
imul
shr
shl
ja
pop
nop
fs
cmpsl
mov
push
lret
jmp
and
cltd
pop
aad
mov
stc
mov
jae
inc
dec
repnz
add
ror
cltd
outsl
mov
aaa
pushf
xchg
aas
jl
addr16
add
add
add
sarl
sbb
mov
mov
inc
cltd
or
inc
dec
push
pop
aas
stos
nop
mull
mov
out
pop
cltd
cmp
jl
mov
lods
mov
cmp
cmp
mov
sti
outsl
arpl
dec
mov
popa
mov
add
dec
aad
cld
dec
sbb
xchg
cmpb
add
push
mov
fs
in
xlat
inc
jno
xchg
xor
fsubl
fs
xchg
sbb
dec
mov
adc
xchg
lods
insb
pop
adc
push
aaa
mul
sbb
popa
aam
ss
jbe
adc
scas
mov
pop
lcall
sub
add
ret
in
and
push
jp
cld
fcoms
jno
mov
mov
sbb
sub
cs
cmp
sub
loope
xor
push
ret
pop
or
imul
add
cltd
cmc
adcb
fcos
pop
mov
or
add
add
add
lea
mov
and
bound
and
pop
insb
pop
jne
and
adc
insl
xchg
pop
jnp
lods
or
mov
jno
fwait
hlt
jp
add
cmp
in
lret
mov
xchg
xchg
jle
xor
sbb
or
cwtl
lret
jg
add
pop
jmp
shr
mov
cli
dec
cmp
pop
cmp
inc
outsb
std
mov
sbb
xor
movups
mov
push
gs
xchg
outsb
xor
jno
xor
gs
push
lea
cmp
push
ss
int
pop
xor
add
leave
mov
test
and
iret
popl
scas
and
fsubrp
mov
vmovsldup
add
or
insb
mov
jmp
insl
push
subb
imul
mov
mov
xor
xchg
fildl
pop
andb
imul
andl
in
add
add
add
lock
jg
in
and
mov
test
add
add
add
repz
movsl
shlb
adc
add
lcall
popf
out
pop
or
into
lahf
loop
pop
ds
sub
mov
sub
outsb
mov
cmpb
jbe
fwait
inc
jb
mov
dec
mov
inc
fistpll
rep
push
pop
int
jno
out
or
cmp
popl
xchg
pop
dec
jp
pop
mov
icebp
rorb
or
pop
jnp
inc
dec
gs
in
dec
fcmovb
lahf
jb
or
fwait
adc
cmp
mov
dec
clc
daa
jns
aad
jp
mov
cs
adc
mov
call
or
cmpsl
in
sub
into
dec
test
mov
push
not
cmpsl
dec
jle
mov
iret
std
mov
mov
mov
je
push
xor
xchg
bound
xor
popf
jb
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
cmc
jle
addr16
add
sbb
xchg
sub
outsl
out
xchg
xchg
inc
mov
cmc
pushf
lret
dec
push
and
enter
out
das
jae
ret
rorb
sub
shl
jo
ss
sub
movsb
pop
bound
sub
dec
fnstcw
pop
cmp
mov
dec
mov
or
mov
adc
stos
ss
sbb
inc
adc
fs
fisubrl
es
fdivl
inc
test
lretw
pusha
mov
push
mov
mov
imul
push
into
ret
mov
inc
rol
inc
mov
jl
lods
mov
push
jns
jge
pop
stos
stos
int3
inc
shl
jnp
cmp
pop
sbb
and
jle
lock
loopne
sub
xor
mov
repnz
lds
fcoms
dec
adc
ss
cmpl
mov
pushf
insl
mov
jne
mov
add
mov
dec
js
stc
mov
dec
int
lret
and
jmp
add
iret
popf
mov
pop
repnz
cmpsb
mov
cmp
xchg
jp
adc
xor
faddp
mov
test
and
jmp
imul
sub
inc
rolb
sub
shll
jp
imul
jns
fidivs
sbb
into
cmp
nop
sbb
pop
or
aad
pop
idivl
insb
dec
jbe
mov
xor
mov
cmp
ficoml
sub
xor
mov
pop
fidivrl
add
mov
lea
cmp
fildl
mov
mov
in
xchg
sub
push
mov
add
inc
pop
shlb
mov
cwtl
pop
inc
jl
jmp
mov
fldenvs
test
mov
jge
jge
rclb
push
mov
and
jnp
jo
ss
push
into
adc
test
push
add
shlb
ret
out
out
add
add
insl
repz
fwait
jns
jns
out
shlb
add
add
add
xor
pop
cmpsl
cmp
das
popa
scas
nop
xor
aaa
cmp
sub
cmp
mov
jno
clc
add
daa
xorl
jecxz
das
cmpsl
sbb
ss
xor
setae
cmp
adc
mov
push
push
insl
mov
mov
xchg
in
mov
mov
sbb
add
mov
cmp
dec
cmp
repz
gs
icebp
sbb
data16
sar
jae
pop
dec
sti
sbb
shr
daa
or
data16
dec
inc
xchg
sbb
movsb
int
jns
psrad
ds
mov
lcall
fldln2
pop
jp
es
add
mov
in
xchg
mov
push
adc
push
fdivr
mov
sub
cmpsb
jne
xchg
sub
inc
mov
icebp
jge
and
leave
nop
fldl
add
add
mov
pxor
jnp
adc
jne
std
mov
add
add
add
xor
mov
cmp
cmpsb
ret
ss
jecxz
es
in
jmp
pop
sbb
stos
inc
cmp
xor
aaa
sbb
mov
jge
inc
fimull
rcll
jmp
mov
popf
cmp
popa
fmull
je,pn
cmp
lock
lock
push
rcr
push
addr16
sbb
push
scas
mov
incb
aam
fists
jp
jnp
xor
xor
gs
ret
loopne
cmp
mov
dec
adc
ss
scas
enter
mov
push
sarb
jecxz
cmovne
mov
push
stos
jg
jle
jb
loopne
mov
pmaxsw
fsub
fmuls
mov
mov
sub
dec
dec
pop
into
sbb
and
mov
add
divb
xor
or
add
add
subb
fistl
das
in
and
lret
add
add
add
aam
movsb
mov
xchg
pop
sub
jnp
mov
cli
adc
pop
or
iret
push
push
mov
mov
ret
fists
rcll
bound
int3
rol
stos
mov
push
rcrl
jle
sbb
pop
sbb
push
mov
call
push
mov
out
dec
mov
test
jbe
in
xchg
addr16
mov
stc
das
add
mov
repz
ja
repz
pop
and
jle
les
int
hlt
cmp
pop
loop
lods
lock
xlat
jnp
push
icebp
pop
push
mov
xchg
mov
test
scas
aad
into
ljmp
pop
jecxz
pop
and
fistpl
push
les
mov
enter
add
mov
adc
push
cmp
cmpsb
jns
mov
leave
jg
ss
push
push
jnp
imulb
cmp
stc
call
add
add
jb
scas
decb
fisttps
les
add
add
add
pusha
mov
lods
repz
imul
lret
call
pushf
mov
and
inc
fdivrs
mov
in
test
push
inc
mov
test
sbb
fs
dec
imul
lret
aaa
sbb
sub
out
mov
hlt
lds
rorl
or
xorb
into
push
incl
jge
xchg
lods
sbb
xchg
test
mov
jns
sti
mov
in
jbe
leave
imul
call
iret
popf
jns
pop
mov
icebp
lret
and
ret
cmp
dec
mov
dec
jo
ljmp
rcrb
jl
dec
popf
dec
inc
xchg
lea
outsb
xchg
add
inc
jl
sub
push
in
pusha
movsl
mov
jge
dec
lret
mulb
mov
outsl
fsts
sub
push
int
add
add
xlat
mov
xchg
fs
pop
mov
add
add
and
cmp
jle
ss
inc
jo
aad
orl
ds
shll
or
or
pop
pop
rorl
pop
mov
inc
insl
mov
addr16
cmpsb
sub
and
lds
pushf
pop
int
xor
or
scas
or
shrb
mov
adc
bound
aam
push
xchg
lret
mov
jo
cmp
and
push
push
pop
int
fidivs
pop
loop
movsb
cmpsb
jl
jne
rcrb
loopne
filds
jb
mov
imul
mov
repz
enter
jg
lods
popf
addr16
add
out
sbb
adc
sbb
psubq
mov
aas
xchg
mov
inc
int3
jle
inc
cmp
nop
ss
jecxz
movsb
stos
cld
xchg
jmpw
dec
xchg
or
add
mov
stos
mov
add
add
mov
aas
mov
jb,pn
addr16
add
add
add
popa
mov
adc
bound
div
xor
into
push
mov
pop
insl
xchg
mov
mov
std
ss
cmpsl
outsb
adc
das
data16
add
cmp
mov
xchg
scas
lds
mov
orb
mov
cmpps
adc
cli
testb
mov
and
mov
leave
cmp
outsl
cmp
aaa
mov
pop
mov
sbb
cltd
pop
or
adc
in
rcll
gs
cmp
cli
mov
pushf
mov
mov
daa
rcrl
lods
xchg
xchg
lods
lods
orl
mov
inc
push
xor
push
add
xchg
and
lcall
bound
xchg
xor
das
lods
pop
adc
cmp
xchg
popa
sbbl
in
fsubl
ret
stos
and
dec
and
and
adc
or
jne
add
add
mov
sti
mov
dec
scas
cmc
int
lock
add
add
or
pushl
jl
gs
arpl
pop
jmp
mov
and
cmpsl
rolb
bound
aaa
divl
rorl
sbb
cwtl
cmp
adc
cmpsl
test
cmpsb
stc
mov
xor
lds
inc
loopne
lods
jg
nop
adc
sbb
loope
not
loope
mov
sub
ljmp
in
dec
int
mov
mov
inc
lods
push
ljmp
adc
adc
rorb
adc
mov
std
xchg
add
ror
mov
js
adc
leave
sbb
xor
add
jg
or
outsl
dec
popf
pop
loope
nop
pop
jmp
aas
jb
push
mov
jl
ret
mov
arpl
lds
pop
dec
push
test
cli
and
fdivp
aaa
andb
mov
sub
subl
mov
jae
clc
pusha
xor
fs
enter
add
into
adc
neg
jge
xchg
jns
inc
inc
rol
icebp
add
add
add
inc
sbb
ret
movsb
mov
cmp
cwtl
mov
add
or
dec
pop
pop
mov
pusha
xor
sar
push
jecxz
aad
mov
add
lock
sub
rorb
dec
or
push
pop
jge
outsl
aad
jo
call
cli
mov
movsl
int3
pop
sbb
insl
inc
sbb
dec
push
push
mov
push
loope
insb
mov
xchg
lret
xchg
mov
scas
movsl
add
fdivrl
fsubr
xor
mov
ret
rcpps
and
call
xchg
in
pop
inc
add
mov
ret
jmp
jns
out
shll
aad
xchg
rcll
mov
outsb
leave
popf
lahf
xor
mov
jne
test
int3
dec
xchg
in
or
lock
mov
rcll
pop
cmp
outsl
jg
jg
sub
sub
repnz
add
add
inc
inc
mov
and
sub
sbb
jge
xchg
inc
pop
lods
or
popf
mov
push
test
mov
xchg
push
jae
movsl
jmp
pop
mov
add
lds
dec
push
and
loopne
push
sub
cmpsl
pop
push
sub
cltd
inc
stc
mov
cmp
jae
les
mov
adc
sti
push
les
lcall
fdivl
mov
push
mov
mov
add
fwait
aad
aas
icebp
sub
in
cmp
arpl
lcall
sbb
cltd
call
jbe
push
iret
add
sub
aas
sub
pop
dec
jb
rolb
jo
jbe
push
pop
mov
add
daa
cmc
jmp
xchg
inc
cwtl
jl
jbe
sub
iret
fisubl
std
and
cmp
ret
or
imul
add
add
ja
and
aaa
divl
xor
mov
repz
add
add
lcall
inc
iret
mov
xchg
cmp
lds
sub
xchg
push
inc
mov
jl
pop
xorb
add
roll
jmp
sub
test
mov
into
pop
xor
inc
add
push
addr16
dec
or
int
rcll
dec
jnp
sbb
in
scas
in
sbb
cmc
jg
aas
clc
aam
dec
cmp
and
add
in
cmp
cmp
mov
in
sbb
pop
adc
jns
and
lods
popf
pop
sbb
dec
mov
push
movsb
cmp
test
or
cmp
daa
push
dec
lcall
jg
bound
mov
push
pop
mov
xor
push
int
mov
lods
mov
sub
jmp
std
shlb
jnp,pt
fidivs
dec
and
movsl
xor
sti
mov
fisubrs
mov
add
add
mov
cmc
mov
sbb
push
in
hlt
add
add
add
stc
xchg
test
fists
pop
push
adc
imul
xchg
outsl
xor
add
inc
repz
adc
mov
call
ljmp
pop
scas
xor
icebp
xchg
xor
leave
pop
pop
cmp
loop
sbb
in
stc
test
push
lea
pop
or
mov
jmp
addr16
das
sbb
out
ret
or
insb
or
out
mov
ljmp
or
imul
inc
adc
inc
movsb
pusha
mov
jl
pop
adc
popa
jecxz
lods
dec
dec
adc
faddp
cli
push
in
sti
or
pop
adc
cmp
ja
iret
les
pop
dec
mov
in
stos
scas
and
dec
jl
or
clc
and
sbb
and
push
xor
jb
mov
and
shrb
jle
jne
pusha
popf
pop
xorl
add
add
add
add
xchg
or
adc
jmp
aam
fadd
sbb
mov
or
test
hlt
mov
mov
into
loope
or
xor
imul
movsb
push
xchg
pop
add
cmp
ret
daa
jo
mov
lock
xchg
comiss
xchg
pop
xlat
push
movsb
aam
mov
xor
inc
dec
in
cli
cmpsb
in
loopne
lcall
or
mov
inc
jg
dec
and
and
cmp
mov
pop
pushf
jl
adc
push
jl
outsb
xor
je
loopne
mov
clc
pop
mov
or
fimull
lret
and
add
adc
pop
add
inc
sub
and
sti
sub
loopne
hlt
mov
mov
xchg
dec
pop
cmp
jo
lods
xor
mov
mov
bound
pop
push
add
add
imulb
mul
xor
inc
testb
add
add
push
jne
lea
ljmp
and
sbb
jns
jbe
sarb
cmc
push
stos
push
sub
or
divl
cli
mov
pop
mov
mulps
sub
in
cmp
adc
icebp
xchg
popa
mov
pop
in
push
mov
xor
imul
fldenv
xchg
pop
insb
dec
adc
clc
aas
ja
jp
test
mov
je
jae
pop
ret
ret
es
lock
scas
mov
xchg
les
stc
mov
xlat
pop
jbe
popl
pop
cmp
lahf
xchg
clc
int
insl
lahf
and
pop
notb
push
sbb
roll
cmp
cltd
or
es
mov
pop
sti
sarl
or
mov
adc
push
loope
xorb
pusha
xor
ret
add
xor
jb
jae
notb
add
add
add
jl
adc
in
push
nop
clc
cmp
and
fstl
sub
fildll
ret
push
mov
fwait
bound
pop
pop
rolb
pop
push
vpavgw
out
jno
test
mov
inc
cmp
aas
cmp
ja
adc
jecxz
dec
or
sbbb
pop
je
push
inc
hlt
cwtl
es
psllw
or
inc
sub
sub
adc
aas
scas
je
pop
daa
movsl
inc
jmp
cltd
mov
in
xor
jno
into
clc
add
frstor
pop
cmp
push
sub
call
mov
sub
add
jbe
stc
mov
or
pop
adc
jl
rcl
adc
jne
dec
fdivl
shrl
inc
sub
loope
mov
push
jg
pusha
arpl
jno
lods
loope
enter
leave
pusha
nop
sub
cs
adc
je
inc
enter
jno
sub
out
in
cli
adc
int
in
idivl
js
mov
test
add
add
add
imul
cmc
jns
gs
pop
xor
ja
push
std
adc
and
aaa
ds
ss
cwtl
subl
push
mov
dec
lods
rclb
sbb
lods
add
jle
subb
les
and
nop
xor
cld
arpl
jne
test
outsb
fcmovnu
xchg
push
or
insl
or
mov
sub
jb
mov
or
pop
lcall
push
bound
aas
mov
insl
sub
xor
add
and
lds
pop
add
test
insl
sbb
jl
mov
repnz
push
out
lods
sbb
sbb
loop
sar
rcr
and
sbb
stos
dec
cmpsb
ss
mov
jns
in
xor
sub
or
push
in
arpl
mov
xchg
mov
popf
outsb
push
fldcw
cmp
or
pop
es
inc
cli
aas
into
lret
sbb
stc
add
add
add
dec
sbb
pop
aam
push
cmpsb
sbb
dec
dec
dec
imul
sub
ret
aam
xchg
popf
ljmp
aaa
arpl
iret
movsb
sbb
int3
cmp
mov
out
pop
sbb
pop
shlb
cmpsb
leave
xchg
and
add
es
scas
jns
mov
push
sub
push
mov
dec
fidivs
push
aas
out
push
or
shr
xchg
push
mov
je
ret
mov
add
mov
fwait
xchg
int
cmp
rorb
cs
sbb
hlt
jg
adc
stc
mov
fistl
daa
loop
in
and
adc
jno
clc
add
fs
out
jecxz
mov
loopne
inc
outsb
fsub
lea
or
cld
cmpsl
rcr
and
add
pusha
or
mov
jl
mov
fimull
repnz
mov
lcall
aaa
xor
fisubl
add
add
add
fs
cmp
cltd
dec
push
nop
xor
pop
bndstx
or
mov
xchg
jo
lods
add
imulb
sbb
pop
mov
movsb
and
das
push
and
fsubr
popa
and
xchg
cwtl
testb
cld
inc
lods
xchg
add
cmp
fdivrs
std
push
andl
das
aaa
addps
aad
add
test
pop
pop
and
cmp
inc
mov
out
add
test
or
out
sbb
pushf
outsl
je
sarl
pop
movsl
pop
pop
std
data16
or
add
movsl
ljmp
rolb
sbb
push
dec
dec
out
jne
mov
je
push
dec
imul
or
mov
push
shl
lret
xlat
jo
mov
mov
and
inc
cli
inc
imul
jp
std
dec
cwtl
std
xchg
dec
push
lcall
hlt
cld
sbb
je
ret
aaa
sbb
and
pop
mov
adcl
insb
xchg
imul
and
cmc
aaa
jae
cltd
dec
mov
jno
int
cmovb
add
add
add
sbb
mov
or
adc
add
and
stos
jecxz
pop
pop
and
ficoml
sub
cmp
inc
inc
loop
dec
outsl
jns
xchg
scas
sub
adc
movsl
inc
subb
dec
cltd
mov
xchg
jno
dec
push
insb
or
xchg
jns
pop
mov
pop
cld
hlt
addr16
lret
xor
cmc
push
fisubl
rcl
mov
popa
mov
mov
out
ds
fabs
popf
das
xchg
mov
inc
dec
and
sub
push
scas
das
loope
aad
mov
das
and
mov
xchg
mov
jl
add
mov
add
mov
dec
and
dec
xor
pop
loope
filds
mov
adc
pushf
sub
dec
push
inc
mov
cmp
arpl
rolb
xchg
mov
push
mov
shlb
jno
out
or
jmp
aam
xchg
cmp
mov
faddl
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
or
and
add
add
add
jo
mov
scas
ret
lcall
pop
sub
stos
adc
sub
inc
fdivrl
call
mov
push
push
test
ja
lock
les
and
adc
aad
push
xchg
icebp
pusha
add
nop
dec
inc
dec
and
pushl
dec
stc
jne
inc
mov
add
mov
out
xor
xor
scas
in
cmp
in
pusha
nop
sub
mov
sub
test
aam
popa
sti
mov
std
dec
add
push
cmp
push
push
xchg
dec
fcmovnbe
int3
outsl
out
xchg
lea
inc
fcmovbe
jmp
in
mov
rol
jno
push
xor
idivl
into
lds
or
in
int3
fcomps
inc
dec
inc
scas
std
lods
and
pop
mov
int3
inc
das
sbb
jmp
aas
into
mov
add
hlt
imul
jne
cmp
fistl
and
add
add
test
jg
push
pop
push
mov
addr16
add
add
add
jae
clc
xchg
fsubs
je
fistpl
scas
jmp
add
cmpsl
stc
sub
mov
push
pop
out
mov
ss
ss
aaa
sarl
push
mov
xchg
std
inc
in
sub
enter
repz
cmc
xor
sub
xchg
enter
dec
sbb
out
jbe
out
push
cmp
xchg
lcall
mov
cmp
dec
and
fisttpll
jo
pop
jnp
xor
cli
pusha
add
push
cld
jg
in
fidivl
and
test
sbb
insb
jo
push
rcrl
mov
dec
mov
mov
inc
push
outsb
xor
dec
arpl
pop
into
les
or
adc
jo
ljmp
pop
es
cmpsl
popa
pop
pop
mov
imul
mov
lcall
hlt
popf
fists
in
push
leave
jne
rolb
add
adc
movsb
push
in
cmc
jne
sbb
js
jo
xor
add
add
add
nop
pop
ret
out
pop
cld
stos
mov
jp
or
lret
std
inc
imul
imul
pop
xchg
loop
push
insb
sti
fwait
lods
dec
arpl
mov
pcmpgtw
les
pop
cmp
mov
and
fndisi(8087
rcrb
xlat
je
inc
dec
mov
ficomps
test
loop
inc
enter
das
movsl
lret
pop
mov
repz
insb
loop
fldcw
pop
lahf
mov
popa
jecxz
mov
and
std
clc
mov
sub
push
pop
dec
push
rcl
add
mov
lock
or
cwtl
rorb
mov
icebp
js
cld
mov
aam
xor
adc
push
pusha
fcoml
dec
imul
fsts
or
pop
xor
xchg
xor
jb
sub
mov
mov
insl
cmpsl
sti
sbb
ret
sbb
es
mov
pop
pushf
iret
dec
mov
jns
add
add
out
shlb
aas
out
int3
mov
pop
jp
and
add
add
add
add
xlat
mov
sbb
mov
ror
and
out
mov
aaa
xchg
mov
pop
jp
adc
insb
sarl
inc
push
add
xchg
rcll
insb
aas
imul
loope
xchg
lahf
xchg
dec
shrb
andb
shlb
push
mov
mov
sarb
xchg
fs
xor
mov
or
fcomps
mov
dec
das
mov
add
xor
loope
inc
int
pop
cmpsb
test
jnp,pn
js
xchg
mov
out
sbb
fwait
das
push
fmull
ljmp
push
stos
inc
loop
add
mov
in
sarl
xchg
repz
sub
int3
mov
push
rolb
or
inc
dec
push
ror
ds
iret
mov
and
mov
daa
fidivrs
adc
mov
stos
ret
mov
rep
cwtl
and
sarl
int3
or
mov
and
lcall
add
add
or
orl
xlat
sti
sub
decl
pop
mov
jb
cmp
cwtl
out
push
cmp
and
push
inc
pop
daa
or
jbe
mov
dec
out
lret
xchg
sub
test
sarl
mov
shlb
sbb
cmp
in
lock
inc
stc
jecxz
orb
std
enter
sti
popa
lds
orb
xchg
in
adc
fs
sbb
daa
xor
test
ja
or
fdivrs
mov
icebp
add
call
mull
add
jns
ss
dec
cltd
aas
mov
push
xchg
in
xor
push
lcall
jl
pushf
mov
mov
pop
push
push
push
loopne
ss
out
mov
jl
mov
in
mov
mov
test
add
shll
cli
stos
dec
rol
lret
clc
cmc
inc
stos
repz
int
add
add
add
add
xchg
adc
cmpsb
les
xchg
inc
jecxz
mov
pop
and
fcmovbe
adc
dec
push
leave
test
ljmp
inc
sar
push
rol
insb
cmp
xchg
and
rcrb
incl
and
sub
in
out
movsb
mov
cmp
push
or
in
imul
mov
mov
es
mov
jg
push
std
repnz
pop
push
dec
sbb
nop
in
mov
neg
xchg
push
vprotq
scas
call
push
inc
jns
cmp
test
cmp
add
repnz
mov
aaa
xorl
and
scas
push
hlt
fcomip
es
mov
cmp
pop
jno
ds
fisttps
push
pop
sahf
xor
mov
cmc
and
xchg
pop
sti
sbb
test
mov
cmpsb
pop
cli
jo
add
std
aaa
mov
shll
imul
add
mov
int3
neg
push
adc
xchg
or
fstl
push
int3
pushf
and
fs
test
out
or
int
pop
test
ret
lea
xchg
lods
adc
pop
out
inc
je
scas
mull
mov
cld
stc
jae
and
lea
and
xlat
xor
out
idiv
pop
shl
sbb
jbe
jo
sar
push
arpl
mov
mov
cmpsb
push
adc
testb
addb
hlt
or
sub
sub
jl
xlat
jp
das
repz
cmp
sub
mov
and
fs
push
mov
fldcw
dec
push
dec
push
push
sub
dec
mov
jns
fildll
fisttpl
pop
lret
stos
adc
std
jnp
hlt
pop
iret
push
add
mov
mov
add
add
insl
aam
mov
scas
add
push
daa
lret
add
pop
add
add
dec
cmpsb
mov
rol
gs
pushf
inc
in
add
scas
daa
or
add
cmpsb
add
nop
mov
scas
enter
mov
or
clc
ret
lds
sub
out
fs
xchg
cld
arpl
repnz
ds
jo
adc
and
les
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
cmp
adc
imull
stc
fldt
xchg
mov
push
cmp
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
