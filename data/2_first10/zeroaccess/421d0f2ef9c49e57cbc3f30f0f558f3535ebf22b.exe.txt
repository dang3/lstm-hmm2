push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
jne
arpl
fstpl
bound
sub
pop
add
pop
jne
lods
sbb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
ror
sub
jmp
lds
mov
fistpl
das
popf
jb
es
xchg
pushf
dec
mov
pop
sbb
lahf
out
lock
mov
loop
out
nop
sarb
daa
dec
xor
adc
mov
add
lds
pop
push
xor
inc
lahf
into
fadds
inc
jne
es
mov
cmc
in
mov
or
insb
mov
mov
or
mov
mov
shll
adc
out
pop
pop
mov
arpl
cmp
xor
jp
jmp
sahf
mov
add
sub
pop
jg
inc
sbb
stos
lcall
test
into
fidivrl
mov
xchg
pop
cmpsb
stos
sbb
fsts
clc
ss
pop
int3
test
ret
enter
dec
and
sbbb
sub
cmc
fisttpl
stos
adc
pop
push
sub
outsl
add
sub
push
shll
push
jbe
ljmp
or
pop
push
imul
xor
lods
xchg
mov
jnp
mov
dec
push
ror
jmp
repnz
dec
inc
sahf
fdivrs
sub
mov
rcrb
mov
test
cmpsl
dec
gs
xchg
loope
push
sbb
xchg
adc
sub
fldenv
std
xchg
inc
daa
dec
push
jp
inc
pop
sti
loope
mov
idiv
aam
pop
sarl
push
pop
cmp
push
inc
mov
movb
mov
cwtl
push
into
shr
fistps
push
add
pop
add
jle,pn
jecxz,pt
stos
add
ljmp
bound
popa
or
pop
in
adc
mov
dec
add
xchg
inc
xchg
adc
ss
aas
push
loop
bound
lods
add
hlt
and
fyl2xp1
ljmp
mov
hlt
xor
mov
add
dec
repnz
and
loope
adc
xlat
adc
sbb
daa
mov
pop
mov
mov
out
xor
addb
incl
cmp
add
sti
cmp
fbld
sti
dec
mov
roll
pop
stos
mov
jo
imull
adc
rolb
gs
cmpsb
pop
or
test
mov
pop
sub
inc
nop
adc
imul
inc
ret
icebp
sbb
insl
outsl
std
scas
das
subb
scas
cmp
movsl
pop
pop
adc
xor
sbb
ficompl
mov
mov
nop
lahf
out
sub
mov
fs
fidivs
dec
pop
stos
push
scas
xchg
sub
pop
paddw
hlt
adc
fnstsw
lahf
lret
mov
shl
xchg
addr16
xor
and
adc
jne
stc
lock
cs
pop
ja
add
int
fwait
mov
jo
movsl
jl
aad
hlt
and
adc
shrl
iret
adc
pop
cs
mov
jo
sbb
xor
push
push
cmc
sbb
leave
std
mov
in
les
mov
inc
jecxz
or
roll
and
cmp
jp
push
or
adc
sahf
inc
jle
sbb
fiaddl
rcr
lret
mov
mov
ss
pop
fnstenv
push
es
pop
xchg
xor
fs
or
roll
sti
rcrl
mov
add
shl
gs
fisttps
pop
jns
and
popf
jmp
fimull
orl
mov
mov
mov
mov
cli
sub
lods
add
xlat
mov
loope
mov
movl
rorb
adc
xchg
jnp
mov
jp
popa
mov
shlb
dec
lcall
dec
pushf
jp
adc
and
cltd
shlb
test
ja
cld
ret
pop
sub
push
inc
lea
adc
out
cmp
dec
aas
mov
inc
dec
push
xor
repz
jb
fisttpl
cs
inc
cltd
jle
pop
xchg
adc
xchg
sbb
pop
add
adc
xbegin
lea
subl
mov
or
dec
inc
and
dec
imul
repz
in
mov
jecxz
and
adc
inc
jns
lret
cli
lods
jae
stos
inc
shll
jl
xchg
inc
cmp
enter
dec
dec
popa
mov
or
mov
imul
pop
ffreep
mov
sbbl
inc
xor
iret
mov
push
aad
ret
cmpsb
cs
iret
adc
jge
xor
adc
mov
das
adc
into
dec
cltd
shr
jnp
jo
xchg
pop
inc
inc
test
in
jnp
adc
cwtl
push
cmp
jns
or
mov
aad
rcrl
push
lea
cmpsb
insl
fsts
mov
cmp
vpcmpgtw
pop
dec
xor
outsl
or
andl
push
outsl
popf
iret
in
dec
lock
shll
push
data16
fnstenv
mov
ficompl
sbbb
xor
push
xchg
cmc
ret
or
popa
xor
adc
out
pop
dec
jecxz
add
mov
mov
ret
in
mov
out
mov
aad
insb
mov
sub
insl
mov
adc
rorb
jno
clc
mov
mov
jne
movsb
inc
scas
fwait
and
adc
imul
mov
lcall
fbld
dec
cmp
jmp
sub
test
dec
repz
mov
aad
ret
dec
movsb
mov
addr16
pop
test
arpl
jl
stos
inc
fdivrs
ds
ja
sbb
dec
ret
ffree
push
jecxz
bound
cmpb
nop
mov
sub
lcall
jb
mov
fidivrl
cmc
jo,pn
loope
and
inc
push
les
stos
xchg
mov
fiadds
nop
push
test
jo
cmpsl
shll
movsb
icebp
loop
xor
dec
fcoml
and
das
das
add
mov
lods
ss
pop
sbb
sbb
lret
inc
xor
jmp
sub
lret
jbe
movsl
fldcw
xchg
jno
mov
jp
sarl
test
mov
push
xchg
mov
popf
aam
lahf
xchg
jecxz
push
bound
call
xchg
arpl
filds
cld
pop
jmp
pop
jno
xor
arpl
dec
test
lret
stos
leave
rorl
loop
ss
or
pop
nop
cmp
jb
dec
or
push
jp
sahf
jmp
icebp
imul
fcoms
cld
cmp
nop
jns
stos
add
and
xchg
mov
push
call
or
add
push
fnsave
mov
cmpsb
ss
mov
loop
psrld
mov
mov
inc
aam
sbb
mov
mov
shrl
sbb
adc
jbe
jbe
shl
inc
dec
jl
sub
les
sub
and
jns
mov
cmp
imul
pop
ja
fstpl
mov
movsl
and
leave
imul
cmc
fmull
test
or
jecxz
or
pop
cmpsb
xchg
in
subb
lds
popa
adc
mov
cmp
xchg
and
add
sub
call
sbb
add
insb
mov
std
divb
xchg
scas
and
mov
aam
cwtl
hlt
push
out
jmp
mov
sub
xchg
jmp
cltd
pop
xchg
lods
adc
mov
ret
loopne
xor
add
mov
jne
out
popa
or
in
and
jne
dec
xor
fsub
std
cmp
aaa
jbe
loopne
push
inc
clc
xchg
sbb
mov
loope,pt
push
loope
xchg
dec
rcrl
out
rorl
add
stos
clc
cmpl
lods
into
xchg
testl
adc
je
popa
xor
fistl
pop
fisubs
mov
sbb
adc
sub
jg
fisubrl
orl
pop
pusha
jl
ror
lret
in
jbe
sbb
jbe
mov
or
add
mov
rcll
mov
insb
adc
mov
inc
pop
dec
sub
adc
repnz
jae
mov
cmp
cmp
and
inc
jmp
aaa
dec
push
imul
or
mov
xchg
inc
add
fcmovnbe
gs
imul
int
lret
or
cmp
lret
rol
mov
daa
rcrb
xor
insb
cmpsl
dec
aad
outsl
flds
jecxz
cmp
imul
js
mov
dec
cmp
gs
push
push
fcomp
call
pop
push
sbb
jge
or
sbb
test
inc
jbe
mov
pop
mov
cltd
sbb
pop
insl
xor
test
jg
dec
js
or
cmp
sbb
sub
les
and
or
adc
pop
aaa
mov
sahf
movsb
xor
xchg
jg
sbb
xor
cmc
mov
inc
mov
test
push
jle
xchg
cmp
add
add
in
es
adc
sub
mov
sbb
and
or
jno
cmc
gs
add
jb
mov
divb
les
leave
xchg
pop
out
xor
sarb
std
nop
mov
pop
pop
dec
popf
scas
mov
lcall
add
loope
push
xchg
pop
mov
sub
test
arpl
xor
jae
std
testb
jno
aad
jbe
adc
les
push
jl
stc
fimuls
push
pop
pop
sbb
call
mov
sub
imulb
hlt
ret
push
lret
jnp
testl
add
fidivl
fbstp
or
addr16
and
repnz
xchg
nop
inc
sahf
lods
jge
sbb
js
jge
adc
xlat
mov
js
sbb
stos
push
out
mov
jnp
addb
xchg
insl
push
adc
push
pushf
leave
or
push
hlt
sub
jg
inc
ficoml
and
pop
mov
scas
mov
in
gs
push
push
mov
mov
lods
push
movsl
lcallw
fidivrs
test
push
jecxz
mov
add
movsb
stc
push
mov
imul
pop
jp
fsubl
out
rcll
push
data16
push
jle,pn
jge
mov
mov
cmpsb
mov
or
or
push
sbb
sahf
mov
pushf
loop
cli
sbb
mov
pop
sbb
jb
js
shr
push
dec
sbb
in
push
mov
loop
into
jmp
lods
pop
out
jnp
push
cmp
rcrb
sub
repnz
pop
jno
frstor
dec
dec
roll
enter
in
lods
pop
fcmovnbe
test
incb
mov
push
insb
jl
insb
mov
jne
cltd
das
shll
sahf
in
dec
xchg
in
bound
lods
and
dec
out
pop
pushf
shr
mov
movb
rcr
sbb
cld
jo
push
adc
aam
lock
sahf
das
popf
enter
xlat
inc
popa
sbb
mov
push
adc
aaa
push
insl
sub
cmpb
nop
mov
mov
mov
adc
sarl
jl
stc
aam
out
mov
mov
sbb
inc
mov
enter
testb
sub
jl
dec
popa
insb
and
fcompl
loope
mov
loop
xchg
rcrl
push
jns
mov
nop
lock
add
pop
pop
xor
sbb
cli
dec
insl
inc
jmp
pop
inc
ret
aam
mov
mov
rclb
clc
mov
inc
sbb
std
pop
dec
stos
lea
std
sub
adc
std
cmp
divb
lcall
imul
pop
cmpsb
mov
aas
push
dec
xchg
sub
adc
mov
enter
sub
cmp
jnp
pusha
aas
inc
in
and
xor
int
sub
push
ljmp
inc
and
fldcw
sti
cmpsl
mov
push
in
addr16
rclb
mov
lods
in
mov
in
mov
xor
adc
and
popa
inc
push
outsl
sub
adc
xchg
loopne
jns
gs
mov
sbb
cmp
xor
jnp
and
sub
xor
shlb
dec
iret
out
test
mov
ror
ret
push
or
add
lods
in
outsl
jbe
cmp
pop
repz
out
in
add
sbb
xor
mov
cmp
js
adc
mov
popf
dec
jmp
ss
mov
jne
ds
sub
jnp
ja
jp
and
std
cwtl
das
rol
mov
pop
idivb
std
mov
add
stos
std
fwait
outsb
pop
pop
adc
mov
jmp
jecxz
jno
cmc
push
pop
pop
test
iret
sbb
sub
shll
imul
pop
adc
js
cmp
xchg
jecxz
mov
mov
adc
xchg
jmp
gs
adc
mov
xchg
lea
sbb
xor
sti
mov
ljmp
adc
js
add
jne
pop
jae
jmp
xchg
inc
cmp
jmp
test
mov
or
out
jnp
dec
pop
and
jl
out
daa
xor
in
out
aad
cmpsl
or
es
and
jo
movsl
xor
stc
icebp
rcll
dec
xorl
sub
push
jo
out
clc
fnstsw
filds
xor
je
inc
xchg
jmp
aam
int3
jno
dec
sub
dec
cmpsl
mov
mov
mov
inc
inc
ret
mov
pop
xor
pop
aas
loopne
dec
mov
iret
popf
xlat
jb
pop
xchg
fcmovne
loope
movsl
jns
out
cmp
adc
add
ret
fsub
iret
and
cld
mov
cmpsb
mov
sub
cmpsl
cs
testb
outsl
pop
into
push
cli
mov
xchg
ret
in
jns
in
clc
xchg
xor
push
ret
push
out
add
stc
ficomps
inc
add
jnp
jmp
jo
ret
inc
pop
ror
aam
adc
and
mov
sub
notb
xchg
scas
dec
roll
xchg
jl
ds
push
mov
jge
inc
sub
loop
mov
pop
sahf
push
imul
xchg
adc
shrl
dec
repz
pop
imul
jb
insb
cs
adc
fisttpl
sahf
lret
in
mov
push
iret
incl
fcmovne
xor
push
jns
scas
cmp
dec
mov
sbb
xor
cltd
or
xor
imul
xchg
fdivrl
jne
movsb
ud2
fsubl
outsb
cmp
add
movsb
adc
mov
daa
loop
std
test
or
scas
pavgb
out
add
aas
xchg
out
cwtl
pop
rcrl
out
in
lock
clc
scas
std
mov
pop
andl
aas
mov
ds
ficoml
lods
push
movsb
inc
shr
adc
cmp
lds
loop
outsl
inc
sti
pop
push
adc
sbb
cmpsl
clc
rol
loopne
loop
sbb
out
aam
cmp
adc
negb
jle
roll
add
lock
loopne
inc
pushf
fcomps
in
aas
inc
jg
out
dec
arpl
in
jae
in
mov
xchg
add
jb
jbe
arpl
sub
jo
mov
sbb
lea
inc
sbb
or
pop
loop
xchg
push
mov
mov
sub
ljmp
pop
movb
xor
lods
sub
iret
dec
inc
or
or
adc
js
sub
and
cld
bound
jbe
push
jge
push
pop
or
in
cmp
jl
test
inc
out
push
mov
pushf
add
popf
cs
sbb
xchg
stos
das
jne
into
dec
in
out
mov
and
lret
cmpsb
imul
pop
popf
sbb
lods
in
push
inc
out
mov
mov
lds
lds
xchg
mov
or
out
add
sbb
dec
insb
and
mov
inc
dec
js
lea
cmp
mov
and
mov
lahf
fstpl
dec
jmp
adc
adc
xlat
ret
cld
arpl
inc
cltd
rclb
rcr
and
aas
pop
and
push
push
jmp
push
shlb
stc
add
iret
fsubrp
aas
mov
mov
inc
inc
ret
ds
dec
mov
cltd
cs
cmp
daa
lcall
das
sub
das
les
adc
in
mov
sbb
xor
repnz
ret
mov
add
arpl
out
mov
dec
cltd
xor
xchg
repnz
in
stc
inc
push
loopne
and
data16
jnp
stos
add
int
outsb
out
mov
sub
fisttpll
mov
pop
inc
mov
and
cli
xchg
mov
pop
lods
insb
pushf
lret
push
ret
mov
rcll
fcmovne
sarb
xor
fdivl
push
fisubrl
cmp
loopne
es
xor
adc
inc
cs
pop
pop
sbb
pop
stc
insb
mov
cmp
lret
imul
and
bound
lret
jecxz
cmpl
cwtl
popf
stc
insb
or
adc
sub
sub
and
cltd
sarb
ret
xor
sub
popa
inc
dec
xchg
pop
cmpsl
pusha
out
scas
adc
imul
inc
cmc
nop
xor
xor
sub
aad
mov
leave
int3
bound
shl
pop
jnp
sti
adc
dec
xchg
or
imul
add
addr16
and
sub
cwtl
mov
cltd
incb
sarb
aas
mov
inc
int3
mov
inc
mov
adc
add
testb
outsl
pop
jbe
in
ss
mov
out
xchg
stos
pop
mov
flds
mov
adc
sub
xchg
inc
jbe
and
inc
jno
ret
xor
dec
and
add
push
pop
fbstp
mov
ficomps
mov
add
or
mov
popl
adc
fstps
inc
pop
dec
cmp
push
jae
rcrl
cmp
call
and
into
sti
ficomps
pusha
pop
xchg
js
clc
das
imul
or
xchg
fsubrl
shlb
lret
jnp
adc
insb
hlt
xor
nop
lcall
dec
push
iret
add
push
mov
mov
stos
xchg
jl
mov
shl
fcmovu
xchg
lds
jns
insl
fdivr
mov
call
add
dec
ficompl
sti
and
fildl
fists
xor
xlat
lds
inc
mov
call
pop
nop
out
xor
mov
stos
push
push
aas
je
sbb
push
out
loopne
dec
inc
xlat
fwait
push
jg
add
rorl
sub
aam
fmul
mov
pop
shlb
aam
pop
push
repnz
in
lret
into
or
pop
and
push
adc
shrb
mov
sub
dec
pop
mov
mov
pop
scas
inc
xchg
or
in
std
pop
int
push
add
push
mov
mov
push
shrb
xlat
mov
nop
popf
ret
stos
push
inc
xor
push
adc
sti
jnp
inc
ljmp
mov
adc
mov
dec
repz
clc
ja
jo
popf
fdiv
cli
lods
inc
lret
call
sbb
add
pop
neg
mov
sub
ret
enter
add
mov
int
jno
out
nop
dec
pop
push
pop
cmp
popaw
popa
cmp
out
fmull
daa
pop
add
test
lods
std
jecxz
xchg
jle
cmpsl
addb
cltd
pop
lcall
ja
js
incl
and
leave
in
mov
daa
rorl
int3
loope
popf
xchg
dec
adc
imul
push
cmc
in
sub
xchg
adc
repnz
mov
xor
or
push
xor
daa
push
and
mov
add
add
push
jae
subl
dec
xchg
js
push
xchg
shl
arpl
jmp
add
or
sub
iret
adc
mov
mov
push
dec
stos
cltd
or
fstps
out
fcoml
dec
ja
es
clc
sahf
sahf
push
jle
fdivl
or
scas
in
testl
or
movsl
aam
pop
adc
ret
cmc
cltd
jne
nop
mov
sbb
ret
je
pop
enter
lds
sbb
pand
sub
insb
and
loopne
mov
popa
in
sub
push
cld
stos
and
das
int
sub
test
jno
xor
divb
mov
js
jnp
mov
aad
mov
sub
add
scas
jg
fwait
adc
ljmp
xchg
or
shl
insl
stos
push
inc
jne
mov
mov
push
push
das
scas
rorb
dec
dec
pop
ret
inc
nop
inc
mov
das
gs
add
jnp
lock
pop
shlb
mov
mov
add
mov
ret
mov
lahf
mov
xor
lods
mov
pop
mov
aas
xor
mov
js
lea
pop
loope
movsl
sti
mov
leave
and
sahf
adc
js
cwtl
mov
xchg
xchg
cmpsb
push
add
xchg
add
loope
mov
les
push
jmp
stos
push
cmp
mov
inc
jno
into
int3
jle
ret
ja
inc
cld
xor
inc
int
insb
fdivl
xchg
cmp
mov
andb
scas
xchg
shrb
hlt
in
cmp
lds
pop
dec
sahf
mov
cmp
add
mov
and
fucomi
pop
das
jl
jns
es
rol
loop
xlat
jnp
or
pushf
mov
popf
sbb
and
sbb
push
pop
nop
cltd
in
lea
loopne
sbb
fwait
xchg
lods
gs
jae
inc
in
lock
cli
push
test
stos
fisubl
add
or
shrl
sti
jo
loop
ret
call
add
mov
push
iret
fwait
adc
icebp
lods
add
add
pop
shrb
cmp
lret
cmp
ljmp
jb
sbb
inc
dec
or
cmp
mov
xor
test
aaa
jne
frstor
inc
sub
movsl
lret
scas
fdivs
sti
dec
std
out
push
fwait
jo
loope
push
insl
insl
das
das
cmp
jecxz
inc
fistpl
ret
dec
cs
ss
lahf
lret
cs
nop
das
cmc
shlb
jg
xor
mov
lcall
sarl
xor
mov
aad
sub
fcomp
imul
or
cmp
pop
sub
xor
imul
inc
xchg
lds
sbb
xchg
cmp
mov
out
push
xchg
fbld
jl
dec
xor
add
pop
fwait
lock
jl
lahf
mov
cmpsb
gs
ljmp
sbb
sub
fs
xlat
into
sub
lcall
lock
sub
cltd
cmc
imul
fs
iret
aam
mov
adc
inc
cli
stos
sub
test
icebp
or
sbb
cli
rcl
mov
movb
aaa
sub
test
out
pop
les
idiv
and
insb
xchg
nop
pop
or
jl
popl
in
and
incl
out
adc
popf
es
cmc
aad
push
test
icebp
lea
and
andl
fnstsw
test
jb
lret
outsb
jge
pop
pop
jne
ja
xchg
fs
mov
mov
jl
add
incl
aaa
push
stc
mov
cmp
aaa
push
jne
imul
push
ss
sbb
push
leave
mov
add
ds
mov
popf
int
jno
xchg
js
bound
xchg
mov
sub
iret
jmp
mov
fsubp
mov
fdivp
and
sti
dec
shll
push
sbb
add
data16
pop
insl
cmc
in
jns
enter
dec
jle
int3
mov
mulb
or
rclb
les
and
idivb
jo
fwait
hlt
in
std
cld
mov
and
fcomps
jo
mov
fisttps
mov
std
lahf
or
or
ds
popa
xchg
stos
ljmp
loope
rcl
fstpl
dec
mov
and
xchg
jb
rorl
loopne
push
dec
imull
daa
in
pop
ret
adc
mov
das
fimuls
xor
mov
je
dec
dec
sbb
test
mov
cmp
int
cmp
lret
fbstp
mov
lret
dec
jp
pop
push
inc
es
cmp
imul
fistl
rcrl
xor
dec
mov
in
adc
push
int3
outsb
inc
add
nop
mov
mov
ja
lods
lcall
jo
cltd
ljmp
or
dec
std
paddsw
fs
leave
jl
pusha
cmpsl
push
ljmp
jmp
aaa
push
pop
mov
push
pop
stos
xchg
js
aas
or
enter
cltd
cmc
pop
xchg
rclb
sub
dec
in
and
push
push
scas
idiv
xchg
inc
xchg
shl
inc
mov
jge
add
lds
shl
call
adc
push
icebp
dec
popa
jge
testb
mov
sub
xchg
add
outsb
sti
rclb
cmp
aam
shlb
push
adc
mov
je
js
inc
mov
mov
mov
jb
repnz
mov
xchg
sbb
sahf
sbb
inc
sub
cmp
test
stos
bound
js
scas
pop
push
or
jp
pop
dec
lret
pop
xlat
sub
imul
mov
leave
mov
loopne
cmp
bound
push
mov
loop
lds
sbb
jge
mov
shrl
loop
push
sbb
ret
cmp
clc
stc
iret
fisubrs
adc
jecxz
xchg
fsub
rcll
insl
loop
or
pop
aas
mov
mov
mov
popf
add
cmp
jae
sub
cmc
push
adc
mov
or
pop
cmpsl
jge
mov
sub
outsl
leave
mov
jns
dec
loop
sub
cmp
dec
sbb
fsubl
outsb
mov
adc
cmp
adc
loop
and
faddl
insb
std
xchg
adcl
test
pop
das
sub
arpl
out
ret
mov
lret
push
jne
pop
fsubl
iret
sti
sahf
xor
pushf
fdivr
and
aas
ljmp
dec
clc
adc
adc
into
testb
pop
pushf
out
mov
lret
mov
mov
add
ror
lea
lock
shll
aaa
adc
lret
movsb
ret
jle
fidivl
call
dec
shrl
mov
sbb
aas
mov
aad
mov
xchg
push
pop
ss
inc
fisubl
clc
jmp
inc
sub
add
jbe
mov
shrl
lds
xchg
mov
adc
bound
or
sbb
out
jbe
xchg
stos
dec
jno
ret
pop
jb
fisubs
inc
pop
jae
xchg
shlb
mov
add
out
sbb
pop
cmp
pop
pusha
xchg
and
je
fidivl
xor
lods
popa
inc
enter
fwait
iret
dec
outsl
outsl
std
test
push
adc
callw
cli
mov
xor
mov
mov
addl
adc
add
or
mov
lahf
or
aaa
xchg
mov
mov
in
or
pop
dec
push
mov
mov
cmp
ret
ret
aad
js
mov
push
xor
out
fstps
xor
push
push
sub
out
aaa
outsb
cmp
push
push
push
and
inc
int3
aaa
adc
in
or
dec
inc
mov
popf
ret
pop
scas
addl
stc
lock
mov
into
fcmovb
lds
fsubrs
push
call
imul
shlb
insl
stos
add
add
popa
int
push
mov
pop
lock
addr16
out
in
cmp
mov
out
lret
sbb
imul
fdivr
xor
sub
jmp
movl
dec
insb
ljmp
add
movsl
fdivrs
push
xor
data16
into
imul
sbbb
dec
or
aad
pop
pop
dec
call
fimuls
push
sti
pusha
cmp
test
jg
scas
cmp
pop
loope
fistpll
fsubs
mov
mov
mov
sti
adc
cltd
inc
out
add
pop
bound
jnp
push
les
aad
and
jl
in
loop
mov
hlt
out
enter
jb
cld
in
cmp
wrmsr
xchg
dec
ds
cmp
repnz
cs
or
repz
insb
add
insl
fsubrp
pop
pop
int
or
xor
push
jae
xor
pop
addr16
in
loop
clc
loope
dec
mov
inc
mov
in
jae
sub
cmpsb
and
push
mov
pop
push
loop
jb
xchg
insl
inc
mov
je
cwtl
cmp
jg
pop
mov
sub
jl
into
mov
shlb
mov
icebp
ficoms
xchg
lret
xchg
ljmp
inc
out
in
call
es
popa
enter
jns
inc
pop
push
movsb
fistl
or
jmp
add
test
add
aas
sbb
scas
adc
dec
iret
xchg
inc
push
cmp
orb
test
repz
int
repnz
data16
or
std
mov
fstps
adc
xchg
fimuls
mov
pop
xor
push
ret
and
fstpt
subl
mov
xor
push
xchg
and
cs
xchg
pushf
in
push
pop
cmp
mov
or
jecxz
cmpb
aam
movsl
out
popa
pop
mov
imul
pop
inc
pop
pop
push
xor
invd
lock
lods
lretw
into
jbe
frstor
add
push
cmovne
lock
imul
in
cs
inc
loop
xor
push
jb
sub
mov
and
cmpb
or
pushf
inc
or
xorb
mov
cmp
icebp
stos
push
xchg
or
lcall
iret
mov
cltd
ficoms
pop
in
repz
cli
bound
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fs
dec
inc
and
pop
bound
pop
bound
ret
cwtl
sub
and
or
mov
fisttpll
repnz
or
mov
xchg
pop
add
inc
sar
stos
mov
leave
jo
and
mov
and
in
lret
mov
cmpsb
movb
adc
jmp
gs
nop
cmpsl
inc
sbb
pushf
lret
or
dec
cltd
push
clc
xchg
popa
inc
inc
mov
mov
inc
and
sbbb
negb
pop
pusha
xor
jp
aam
out
pop
imul
jae
cltd
xor
mov
mov
jo
out
adc
lods
mov
sub
push
or
cmp
mov
mov
dec
adcl
inc
les
add
mov
out
js
mov
jp
hlt
jae
fidivrs
add
push
int3
pop
push
sub
push
xchg
daa
inc
mov
or
bound
or
pop
std
add
out
scas
sbbb
sub
and
push
ret
addr16
jle
out
dec
out
subl
orl
scas
dec
gs
int3
pop
cmp
aad
pop
inc
ljmp
arpl
sub
mov
jae
fwait
sti
add
mov
inc
std
aaa
scas
mov
inc
adc
shrl
and
mov
rcrb
sti
fdivrs
fwait
cmp
es
push
je
repnz
repz
les
test
xchg
ja
push
adc
adc
sahf
adcb
jg
pop
pusha
sbb
or
or
fs
cmp
lods
sbb
pop
pop
jo
sub
frstor
leave
mov
daa
inc
rclb
jbe
mov
push
mov
mov
ud1
dec
add
ss
out
xlat
sbb
or
push
imul
cltd
mov
pop
arpl
ffreep
rorb
aas
fs
cmp
faddp
push
and
std
movsl
lods
xor
lock
mov
fildll
mov
in
rol
pop
inc
jmp
sub
adc
clc
dec
or
scas
cmp
in
jo
or
std
adc
mov
fdivl
hlt
xor
sub
cmp
add
popf
stc
dec
arpl
sar
imul
add
cmc
push
mov
xchg
fcomps
mov
test
inc
ret
push
sub
push
push
and
roll
xchg
mov
mov
scas
xchg
test
out
addr16
mov
inc
ss
ret
mov
mov
pop
jle
sub
inc
pop
out
lret
mov
js
inc
xor
outsl
cmp
sub
sbb
clc
insb
add
outsb
mov
insl
aas
push
xchg
jno
in
popa
jnp
sub
pushf
stos
and
rclb
xor
lds
fidivs
cmpsb
and
outsl
dec
pop
and
xor
loop
fdivrs
mov
out
inc
insb
mov
jae
or
inc
adc
mov
mov
mov
jne
ljmp
jbe
repnz
adc
aas
fidivrl
xchg
shll
jns
lret
fidivl
xor
pop
rcll
dec
push
jae
fsts
jmp
jns
inc
sub
jb
repz
scas
stos
scas
dec
push
test
xor
xlat
test
mov
fs
sbb
push
cli
dec
insl
iret
nop
repnz
test
jle
leave
mov
mov
lret
cmp
cmp
mov
es
fistpl
adc
shrb
lret
add
cmpsl
xor
das
pop
mov
push
add
lret
dec
fdiv
mov
call
sbb
mov
or
leave
sub
rcrl
mov
insl
in
xchg
psubsb
adc
insl
cmp
shll
lods
stos
addr16
lods
cld
xor
xor
pop
mov
push
addr16
xchg
xchg
push
bound
adc
hlt
jo
clc
add
fidivrs
rol
outsb
jns
inc
into
add
add
decl
cwtl
adc
push
sbb
push
ja
cltd
ret
rorb
fidivl
dec
scas
jae
inc
xchg
sbbb
mov
arpl
jb
cmp
test
sub
pusha
adc
fimull
test
mov
inc
dec
shl
lret
jno
jo
jecxz
aad
int3
lods
jns
fldl
cmp
int
cltd
repz
inc
fstpl
inc
cli
test
and
rcll
std
dec
faddl
adc
pop
scas
aaa
jnp
or
dec
sub
dec
aam
loopne
enter
add
xchg
leave
decb
test
or
ss
out
jne
mov
mov
and
gs
sbbb
add
cmpsb
push
sti
int
aaa
ficomps
xor
out
inc
sbb
mov
dec
hlt
mov
cmp
dec
cmpsl
std
or
rorb
test
sbbb
jle
adc
pop
jl
pop
mov
fdivl
loopne
mov
mov
ja
das
shl
fstpt
push
jmp
in
mov
sub
sbb
ret
cwtl
ret
mov
pop
rcrl
push
jnp
dec
lret
test
xor
fs
fsubl
xor
sub
or
sbb
push
ret
fists
iret
push
or
cmp
xor
sti
js
adc
enter
sbb
pop
decb
repnz
adcb
adc
stos
pushf
xor
ret
cmp
pop
aam
jb
fistpll
pop
cld
popf
paddq
adc
ljmp
data16
loope
push
pop
gs
jg
inc
ss
movsb
mov
mov
imul
push
insb
pop
sahf
cmpb
jns
insb
adc
dec
fdivr
pushf
movsl
jno
lock
jb
repz
mov
jmp
inc
xor
fcompl
mov
stos
mov
mov
movsb
aam
cld
ss
divl
daa
sahf
push
lods
cli
into
insl
cld
lock
pop
xor
sti
and
stos
rcrb
ret
xor
mov
ficomps
in
push
push
loop
lods
loope
cmp
sti
fnsave
cmc
fdivs
pusha
movsb
test
and
into
shr
push
leave
push
sub
add
xchg
lcall
in
dec
or
adc
adc
out
xchg
push
xchg
xchg
dec
ds
lahf
movnti
sbb
pop
divb
add
shl
jbe
nop
mov
mov
push
aas
pop
test
jecxz
sbb
ja
push
out
call
jmp
icebp
insb
and
and
mov
inc
and
sub
addr16
lods
jno
int3
cmp
ret
inc
insb
out
adc
jle
inc
roll
and
cmp
jbe
sub
pushf
insl
shll
ljmp
and
int3
clc
pop
mov
call
inc
sub
je
cwtl
jae
insl
jnp
enter
enter
jg
je
mov
mov
imul
and
dec
movl
sub
push
sub
fiaddl
adc
dec
pop
subb
stc
std
icebp
pop
dec
jb
scas
inc
jmp
mov
cmc
or
add
loop
and
aam
mov
xchg
xor
xchg
push
loopne
frstor
sbb
or
dec
and
push
push
int
adc
into
jecxz
mov
mov
dec
daa
push
stc
pop
jp
fistps
cld
movsb
jb
push
mov
pushf
in
cwtl
jns
insl
sbb
repnz
subl
scas
push
mov
and
mov
fcomp
lds
cmp
or
ficoms
jmp
daa
pop
dec
fs
mov
sbb
lods
mov
lahf
es
popf
push
pop
sub
movsl
popa
mov
push
push
jns
push
jbe
sub
rcll
jo
scas
lahf
cmpsb
cmp
lea
out
or
lahf
inc
shll
psrlw
lahf
mov
daa
add
mov
xlat
in
test
faddp
or
adc
inc
or
rclb
mov
out
leave
imul
dec
pop
push
jle
fcompl
sub
rorb
imul
push
sub
sub
cmp
mov
xor
inc
sub
clc
inc
sbb
jmp
or
adc
cmpsl
adc
mul
mov
jp
cmpsb
dec
roll
mov
in
mov
mov
in
xchg
and
fmull
sbb
lds
mov
ret
dec
call
cmp
mov
inc
hlt
int3
ret
aas
inc
shlb
mov
mov
mov
push
test
out
imul
je
add
aam
push
andb
shlb
jmp
cmp
adc
add
mov
stc
dec
cmp
stos
push
fs
test
call
mov
push
pusha
scas
enter
iret
and
pusha
mov
dec
push
xchg
push
fs
sbb
mov
dec
push
cmp
or
push
shl
sub
std
or
mov
mov
jmp
push
cli
adc
mov
push
jb
cmp
popf
mov
cld
jnp
push
bound
loop
pop
test
imul
sti
xchg
imul
ret
mov
or
xor
insl
popa
addr16
adcb
jmp
stc
das
pminub
out
scas
enter
enter
mov
fwait
orl
sti
xor
and
aam
mov
mov
inc
lock
roll
loop
cmpsb
shl
add
sub
aad
into
lea
test
pop
shll
lcall
sbbl
dec
mov
cmc
lds
pop
push
xchg
dec
pop
mov
adcl
test
xchg
fmul
scas
dec
fdivs
imul
adc
fs
cwtl
mov
add
imul
fiadds
pusha
cmp
dec
pop
mov
sbb
push
xchg
xor
ljmp
loope
sti
add
adc
out
leave
outsl
mov
pusha
sub
cltd
rclb
dec
add
mov
cmp
and
int
push
lds
aaa
pause
push
pop
push
out
scas
or
fists
sbb
fwait
test
push
jae
pop
idivb
inc
push
xor
ror
daa
xchg
sbb
test
clc
mov
cmp
mov
mull
bound
call
pop
jo
inc
fidivs
fcoml
lahf
lcall
pop
sbb
xchg
jecxz
add
pop
add
sub
lret
in
divl
mov
pop
xchg
mov
push
push
out
ss
das
rorl
xchg
xor
or
add
leave
ljmp
ss
or
mov
aad
insl
xchg
out
clc
push
fucomip
sub
or
sub
cmp
inc
outsb
pop
or
xchg
mov
sahf
bound
xor
dec
insl
fs
and
int3
sbb
or
sbb
sbb
mov
ds
xor
ret
sub
adcl
repz
inc
and
lret
cmpsb
cld
xchg
jnp
dec
inc
sarb
and
mov
push
xlat
rcrb
mov
cli
mov
jmp
cltd
jb
ds
and
nop
mov
lods
call
push
push
cwtl
jmp
into
push
push
xchg
mov
in
lods
pop
and
xchg
dec
gs
jno
pop
out
inc
sub
mov
pop
push
fxch
xor
xchg
xor
lcall
pop
inc
lahf
in
test
xchg
push
inc
mov
inc
inc
add
jecxz
hlt
ja
xor
pusha
psubq
int
pop
pop
imul
into
nop
adc
mov
add
mov
arpl
fsubrs
push
pop
iret
mov
sub
and
aad
or
xor
scas
mov
jb
mov
pusha
pop
ds
push
test
dec
insb
bound
jle
addr16
jnp
sti
jb
data16
mov
jecxz
add
mov
data16
mull
fidivrs
mov
sahf
cmc
mov
test
xchg
idivl
pop
mov
xchg
leave
rcr
outsl
push
cmp
fistl
add
dec
or
mov
pushf
sub
mov
lret
ja
lret
inc
imul
lods
pop
inc
cmp
sahf
pop
icebp
cmp
mov
rcrb
and
arpl
mov
fimull
icebp
test
jae
fs
adc
imul
mov
lret
pop
pop
inc
or
scas
xlat
inc
xlat
cmpb
inc
loopne
inc
shrb
and
inc
jb
adc
add
push
call
inc
aaa
jbe,pt
bound
mov
sub
add
xchg
enter
xchg
and
mov
mov
cli
inc
shlb
stos
inc
or
cltd
mov
fcom
adc
cmp
jmp
into
in
loope
aam
sub
mov
cmp
call
ret
insl
lahf
and
fiaddl
jae
mov
mov
or
mov
xor
lret
popf
ds
and
jo
push
out
js
leave
test
testb
push
xchg
iret
daa
fildl
dec
mov
scas
push
in
sub
mov
mov
add
push
mov
pushf
sbb
inc
dec
in
inc
jge
xor
dec
out
sbb
pop
xor
cltd
pop
add
dec
xchg
xchg
jecxz
fdivl
hlt
scas
in
add
fsubrp
push
or
lcall
inc
jns
in
out
lret
xchg
xlat
cs
add
xor
jle
mov
push
jbe
cmp
cld
out
dec
mov
lea
rol
lock
jmp
hlt
jl
rorl
arpl
push
mov
sbb
cmp
mov
add
sbbl
add
cmp
sar
cwtl
std
jle
out
and
cld
insl
push
push
gs
mov
jmp
addr16
push
cmp
mov
pushf
xchg
sbb
pop
jg
dec
in
ret
fistpl
imul
out
loope
add
jl
jae
fistl
push
dec
and
enter
jle
jae
je
cli
stc
loope
pusha
popa
and
mov
mov
sbb
mov
aaa
cmp
das
out
sbb
aam
add
rcrl
fldcw
cld
in
lds
push
rorl
pop
lret
loopne
mov
jno
sbbl
out
mov
jge
arpl
sub
rcll
jbe
inc
xchg
inc
jle
mov
aas
and
push
jle
repz
pop
xor
ja
out
mov
mov
sub
lcall
mov
popf
xor
dec
fs
pusha
xchg
arpl
adc
xchg
cmp
sub
in
fstps
rclb
adc
push
movsl
xor
ret
pop
add
out
adc
shr
inc
insl
jl
sub
nop
leave
and
loopne
pusha
mov
pop
mov
ficomps
or
addb
nop
jb
js
inc
in
add
pop
hlt
popa
push
fildll
divl
inc
xchg
inc
out
insb
sbb
cmpl
aad
cli
jecxz
mov
ds
out
xor
dec
xchg
xchg
stc
gs
negb
mov
fdivs
jbe
cmpsb
sbb
push
out
mov
sub
inc
test
cmp
sti
mov
and
jnp
fwait
or
sahf
or
mov
mov
mov
hlt
popf
inc
adc
mov
add
loop
arpl
loopne
xor
jno
ret
mov
je
pop
ljmp
jbe
jg
stc
je
fwait
cwtl
mov
dec
lea
mov
fmuls
hlt
loope
sbb
xchg
cmp
and
push
inc
call
lds
lret
mov
jp
mov
sahf
ret
xchg
jne
jmp
das
enter
ja
xor
jecxz
int3
add
add
push
mov
sub
inc
mov
bound
lea
jle
movsl
sbb
inc
inc
xchg
inc
inc
push
rorb
jp
pop
mov
inc
sbb
adc
imul
xor
popa
or
gs
mov
leave
outsb
push
fisttps
daa
test
fs
in
orb
scas
adc
lret
cmpsl
xor
sarl
fldt
mov
arpl
pushf
xchg
mov
lahf
push
cmpsl
gs
ds
jp
mov
push
nop
adc
ds
inc
inc
lcall
xchg
imul
xchg
lds
push
inc
pop
subb
mov
mov
test
xchg
pop
pop
jo
mov
sbb
arpl
popf
loope
xchg
push
jmp
mov
addr16
cmp
repnz
push
mov
rorb
test
jae
jp
ret
mov
jge
fistpl
xor
popl
cltd
in
imul
jnp
mov
jno
ret
ds
fsubrl
lahf
sbb
push
addr16
push
ret
hlt
popf
rcrl
stos
jg
adc
mov
into
test
jbe
pop
loopne
sbb
ret
outsl
xchg
mov
add
shrl
call
iret
out
movsb
fadds
js
mov
jge
aaa
shr
nop
gs
arpl
fs
fsubl
ds
inc
lahf
mov
rcll
mov
sub
inc
stc
cmp
push
ret
xlat
scas
sbb
add
mov
mov
jge
jnp
ljmp
sbb
insb
test
mov
int3
and
mov
lret
sub
mov
inc
adc
mulb
sarb
out
and
sub
mov
add
loope
lea
setnp
test
mov
cmp
aas
pop
in
pushf
jo
push
outsb
add
fsubs
ja
cmpsl
pushf
xchg
popa
sarl
sub
andl
push
incl
push
mov
int3
jns
daa
adc
mov
push
call
xchg
out
and
and
test
shlb
pop
mov
jg
xchg
mov
lret
fldl
outsl
add
lcall
mov
ss
rclb
hlt
repnz
push
push
mov
jp
scas
nop
mov
adc
outsl
xchg
mov
ljmp
push
add
xchg
cmpsb
jae
daa
out
test
mov
push
jno,pn
lret
sbb
scas
jnp
jl
add
cmp
jmp
hlt
andl
test
pop
sub
lret
aad
mov
imul
movsl
pusha
clc
loop
bound
push
xor
mov
test
mov
iret
into
xlat
pop
mov
or
data16
cmp
arpl
push
lahf
xor
adc
sub
scas
push
cld
test
jmp
sbb
outsb
ret
les
cmp
loopne
daa
popa
xchg
pop
add
cmpsl
dec
test
rcrb
sbb
push
pop
lock
pop
cltd
outsl
mov
test
and
pop
cs
xor
fidivl
sbb
les
adc
dec
cs
cwtl
inc
in
cmp
jmp
xor
dec
push
shlb
jno
pop
clc
ret
mov
jmp
mov
push
movsl
or
or
out
sbb
lods
je
cmp
out
jle
and
lcall
int
mulb
imul
cmpsl
rcrl
fstl
lret
rclb
inc
mov
dec
and
mov
pop
pop
inc
sub
lret
icebp
push
lret
mov
adc
std
test
sub
pop
call
lcall
inc
xchg
sbbl
push
mov
mov
scas
out
mov
mov
mov
pop
fsubrp
pop
mov
cmp
sub
cmpsb
repz
lds
stos
adc
mov
xlat
xor
roll
lock
lock
push
inc
push
icebp
xor
leave
pop
push
xchg
sbb
pop
dec
arpl
stc
ret
cmp
shl
add
cmpsl
mov
shrb
pop
imul
mov
pop
mov
cmpsb
mov
insb
mov
mov
fmul
in
and
int3
mov
jp
dec
das
mull
or
lret
pop
or
cmp
mov
mov
jne
sbb
enter
push
jns
mov
ret
aas
fs
imul
xchg
ljmp
arpl
add
outsl
ret
jo
jmp
sbb
or
cmp
mov
je
fimull
fmuls
dec
push
or
sahf
adc
fdivrp
sub
inc
es
inc
jne
push
pmulhuw
repz
mov
pop
fwait
addb
js
xchg
mov
test
mov
pop
adc
or
cld
je
test
sub
lods
sub
inc
ret
push
xchg
outsb
daa
sbbb
dec
mov
jp
leave
clc
sub
fs
sbb
sbb
mov
jno
dec
mov
inc
push
adc
mov
dec
jbe
xchg
scas
or
in
inc
scas
mov
jns
sub
repz
sub
test
popf
xchg
arpl
add
daa
stos
cmpsl
roll
call
test
xor
leave
mov
xor
inc
or
pop
push
cmp
shrb
enter
jno
push
push
bswap
pop
jge
or
and
movsb
daa
xchg
xor
sbb
dec
les
push
rclb
add
cmpsl
call
adc
or
dec
xor
fsubr
lock
loopne
das
jecxz
cli
push
push
dec
pop
inc
mov
out
xor
xor
movsl
xor
or
scas
dec
fdivs
clc
xor
pop
subb
xor
sbbl
sub
stos
jmp
mov
outsb
dec
fwait
jb
push
fwait
mov
ffreep
cmovno
jne
stos
adcl
insb
mov
clc
aas
sahf
fistl
dec
movsl
imul
and
push
cmp
repnz
lods
mov
mov
add
addr16
les
xchg
and
hlt
add
add
mov
dec
pop
pop
jg
lret
es
jmp
outsb
jno
fcoms
pop
mov
or
leave
cmp
js
sbb
movsb
sahf
adc
or
sahf
sbb
adc
adc
push
cwtl
lret
jmp
push
push
mov
js
loop
pop
sbb
pop
and
mov
mov
loopne
mov
sbb
pop
mov
xorl
out
cld
int
fwait
cmpsb
xor
and
pop
stos
sbb
pop
jp
iret
lahf
aas
add
and
lahf
jnp
pop
rol
mov
pop
mov
icebp
jbe
addr16
stos
mov
mov
sbb
adc
shll
loopne
cmc
jmp
mov
cmp
sbb
push
push
and
fldl
repz
mov
sarb
add
rolb
dec
cwtl
aam
das
pushf
pop
into
loopne
cmp
cmp
xchg
sbb
in
imul
jno
scas
enter
xchg
push
shr
sub
mov
xlat
adc
ljmp
outsb
mov
loopne
and
jnp
push
out
lcall
and
push
cld
orb
and
repz
ss
jne
sbb
push
out
mov
into
cwtl
mov
ljmp
fidivs
pop
sub
jnp
mov
xchg
insl
icebp
sub
mov
dec
movsb
shl
add
mov
mov
push
xor
fs
cmc
add
shlb
iret
mov
push
adc
arpl
notb
push
arpl
test
leave
iret
inc
push
in
xchg
cmc
xchg
je
scas
xor
push
xchg
dec
or
loope
push
aad
cli
mov
repnz
pop
or
fdivl
dec
mov
scas
scas
lahf
or
aam
xchg
outsb
and
jmp
lds
mov
cli
add
mov
loop
pop
jb
add
sbb
jns
and
jmp
loope
jns
imul
shlb
push
adc
lods
je
ss
out
ret
inc
hlt
xchg
mov
lods
sbb
popa
in
das
loop
pop
push
cmp
lods
cmpb
inc
jno
cmp
inc
ret
fcomip
inc
lcall
pop
rol
xchg
adc
notb
inc
enter
jle
popa
inc
or
and
aad
add
or
mov
out
rcll
sub
cmpsb
test
pop
mov
adc
std
jge
repnz
insl
cmpb
jo
or
xchg
ret
and
xchg
loopne
mov
xchg
das
fcompl
scas
arpl
adc
pushf
sub
adc
xchg
adcl
and
arpl
or
cmpsl
mov
fwait
xor
dec
and
fsin
int
add
je
ja
jo
mov
stc
gs
pop
jmp
test
pop
movsb
mov
inc
stc
arpl
mov
in
shlb
int3
fwait
loop
andb
or
iret
xor
inc
int
xchg
xor
adc
mov
subl
inc
sub
mov
dec
xor
push
stos
dec
aaa
and
sbb
mov
test
mov
aam
pop
je
das
xor
mov
jo
cmp
mov
sahf
ja
pop
fucom
fwait
in
adcl
js
inc
loopne
mov
ljmp
aas
mov
cmp
ja
sub
into
dec
jo
jnp,pn
mov
pusha
loopne
mov
into
mov
jp
push
ljmp
cmp
fimuls
fsubs
xorb
scas
fldt
pop
pushf
insl
fcoml
mov
inc
ret
fcomip
mov
cltd
mov
bound
adc
mov
les
imul
inc
clc
cmc
sbb
movsb
mov
mov
mov
out
sbb
lret
out
or
push
mov
cmp
mov
addr16
lods
repnz
pop
push
loop
cmpsb
popf
notl
out
gs
adc
movsl
ret
dec
cmp
and
imul
sbb
int3
sbb
gs
arpl
mov
ja
xchg
jno
movsb
and
dec
rorb
fdivr
or
sbb
cmp
push
xlat
jge
fmuls
inc
cld
mov
sbbl
les
pop
movsl
sub
adc
fcoms
popf
xlat
outsl
fldenv
jmp
mov
mov
mov
mov
lock
or
xorl
or
test
aad
icebp
jmp
shll
mov
or
jo
cmp
dec
nop
lock
xor
pop
push
arpl
xor
mov
push
pop
fidivl
jmp
loopne
mov
pop
repz
xchg
xor
sbb
jg
cld
xchg
mov
adc
into
mov
add
sbb
jge
loopne
sub
mov
inc
xchg
sbbl
add
mov
loop
sti
repnz
getsec
pop
enter
sub
lods
ret
xor
xor
in
loop
xchg
jb
mov
dec
hlt
mov
lret
push
in
es
xchg
pop
push
jns
das
in
sbb
lods
or
test
arpl
add
scas
mov
add
cmp
repz
mov
push
ja
inc
cmp
add
imulb
stos
sbb
add
jecxz
mov
or
test
lock
jge
sbb
dec
stos
inc
sbb
cmp
pop
ljmp
pop
in
pop
pushf
push
lret
jmp
enter
shll
add
dec
xchg
loope
dec
lret
mov
jp
sbbb
adc
or
insl
arpl
xchg
ss
shlb
dec
fs
fwait
mov
mov
cmp
lock
mov
ret
fdivrl
orb
inc
dec
insb
push
ss
outsl
sub
jge
pushf
jmp
sbb
mov
push
imul
nop
into
mov
rorl
cmpsl
cmpsb
popl
test
cmp
stos
xlat
data16
dec
jp
or
lea
fwait
push
fmulp
loopne
ficoml
cmp
jmp
pop
xor
cld
pop
scas
cwtl
ret
mov
in
ficompl
jbe
sub
arpl
and
mov
inc
gs
fbld
mov
fldt
mov
fsubs
jmp
jecxz
dec
xor
lret
jnp
outsl
jecxz
cmp
adc
push
pushf
pop
push
pop
sbb
mov
int3
repz
mov
shl
outsb
sub
out
adc
cmp
ljmp
in
fsubrp
pushf
shlb
adc
mov
fisubrs
in
ss
mov
stos
jne
inc
sarl
push
sbb
pop
push
push
scas
dec
cmp
mov
xorl
lcall
aaa
dec
pop
jb
mov
repnz
gs
call
xchg
stos
hlt
and
gs
jecxz
pop
sahf
jg
in
inc
arpl
push
pop
jmp
lea
lods
outsb
push
insb
out
sub
push
xchg
or
movsb
mov
mov
aad
das
out
xchg
sub
mov
arpl
xor
leave
pop
add
dec
or
sub
test
test
jp
inc
mov
inc
adc
je
push
pop
pop
lret
sarl
mov
inc
cmp
insb
adc
cltd
push
adc
inc
push
adcl
nop
sbb
fildll
lret
sbb
pop
insl
pop
push
adc
frstor
aad
cwtl
aas
jo
dec
mov
or
notl
shll
shlb
not
xor
xor
push
inc
rorb
pop
popa
js
or
or
jnp
jne
adc
pop
jb
xor
in
test
outsb
fisttpll
add
mov
push
mov
mov
push
mov
push
outsl
ss
rolb
ficoms
and
mov
jp
xchg
sti
pop
in
sbb
aam
fucom
pop
std
popa
fbstp
pop
mov
repz
xchg
mov
ja
pusha
inc
inc
lock
jecxz
add
mov
in
push
cld
inc
push
outsl
call
popa
adc
jne
mov
add
and
scas
stc
adc
call
mov
lods
movsb
pop
dec
push
lret
jp
and
sbb
cmp
ss
adc
sti
add
push
pop
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
and
bound
pop
bound
adc
sbb
jbe
jns
xchg
cmp
inc
daa
ficompl
add
push
ret
popf
jmp
imul
jb
int3
pop
or
es
mov
sub
and
jecxz
sbb
fucomp
outsb
xchg
jb
xor
insb
xor
or
incb
incl
inc
les
andl
mov
ds
xor
push
push
mov
lret
pop
pusha
mov
lret
stos
pop
aas
push
loope
repz
call
imulb
jmp
scas
incb
fmull
lds
cmc
rol
add
sub
fcompl
fwait
cmpsb
popl
int3
in
mov
mov
add
push
stos
sub
mov
adcl
jge
lea
xlat
imul
pusha
jmp
imull
pop
ss
flds
mov
mov
adc
sbb
push
sub
test
mov
pop
adc
cmp
aaa
negb
fnstcw
xchg
out
pop
add
lock
cmp
sbb
pop
pusha
ljmp
lods
jae
mov
add
packuswb
into
insb
and
adc
repnz
pop
cmp
cmp
inc
clc
dec
add
mov
out
mov
jno
js
and
dec
cmp
mov
cmp
lds
mov
mov
scas
ljmp
xchg
cwtl
jmp
push
push
mov
ja
test
lds
cmpsl
stos
xchg
es
insl
stc
out
repnz
mov
mov
and
andb
sbb
xlat
rclb
out
pop
jmp
mov
mov
stos
dec
push
data16
stos
es
adc
jno
in
loope
push
adc
sbb
into
mov
xor
inc
in
fcmovne
jae
dec
pop
rcrb
or
fidivs
xchg
scas
cmc
mov
mov
hlt
dec
sti
push
adcb
mov
dec
or
jg
sbb
lods
ret
pop
jecxz
add
pop
outsb
out
cmp
insl
aaa
xor
imul
lret
int
inc
das
dec
cmc
mov
scas
xchg
xchg
push
gs
das
aas
stos
jecxz
fwait
stc
daa
repz
cmpsl
ja
adc
add
cmpsb
sahf
nop
sti
int3
xchg
xchg
sub
mov
aaa
sub
fisubl
rcrb
lret
mov
sbb
inc
add
pop
sti
sbb
mov
imul
and
clc
lods
addb
int
fldenv
pushf
adc
or
fbstp
xor
out
xchg
mov
and
in
adc
mov
mov
jp
testb
cmp
xor
inc
repnz
mov
xchg
inc
into
fnsave
iret
pop
ret
sub
gs
rcrb
mov
xor
adc
and
pop
fnstcw
jbe
mul
pop
jne
sub
add
int3
pop
cs
popf
int3
mov
js
aaa
in
xor
sti
xchg
dec
dec
sub
push
push
sbb
popa
divb
idivl
or
cmp
mov
dec
inc
sub
stos
inc
pop
push
or
ret
jp
in
stc
jl
sub
adc
or
int3
cltd
popf
jg
cltd
test
or
jle
ds
movsl
sbb
loope
and
sub
pop
js
jno
fsubp
mov
xor
pop
mov
fidivs
inc
int3
lds
pop
aas
lock
xchg
sub
sub
insl
xchg
push
and
je
fcoml
inc
out
sub
mov
or
jnp
in
jp
int3
fbstp
sbbb
cli
or
xlat
arpl
fisttpll
adc
pop
jp
test
add
cmp
fdivl
sar
pop
pop
scas
fisttps
sbb
popa
adc
scas
cld
fstpl
enter
cmp
adc
cld
add
subl
pushf
jl
cld
push
pop
pop
jne
outsl
xchg
mov
call
fs
arpl
push
repz
das
rcr
cli
pop
push
lock
sbb
xor
adc
or
test
push
xor
popa
sti
cmp
and
jmp
jae
push
jg
adc
cwtl
jb
clc
lds
fsubrl
mov
ret
jo
dec
inc
rcrb
mov
sahf
fildl
add
sub
je
mov
aas
imul
icebp
adc
inc
sub
sbb
mov
mov
pop
jmp
loopne
jne
shll
jno
cli
cltd
xchg
pop
sbb
push
mov
mov
daa
mov
out
addr16
decl
sbb
or
or
out
lcall
mov
rcl
ds
mov
orl
inc
push
pop
sti
xchg
pop
pop
in
mov
test
lock
add
sahf
xchg
dec
test
insb
pop
and
mov
xchg
pop
call
cmp
repnz
xor
pop
mov
divb
dec
jmp
aad
outsb
sub
inc
cmp
mov
ret
xor
add
push
or
fdivrl
lahf
pop
fisubrs
mov
movsb
cmp
pop
mov
imul
dec
xchg
in
or
sub
jne
push
test
and
xor
cmp
jecxz
jmp
pop
fs
push
jl
lds
pusha
ret
cmp
outsl
or
adc
enter
shll
aad
cmpsl
imul
xchg
negb
mov
jecxz
sbb
imul
rol
mov
aam
loopne,pn
push
std
mov
jae
sbb
daa
push
pop
or
fisubrs
xor
fsubl
call
lds
inc
mov
ret
dec
jb
cmc
fadds
mov
iret
push
ljmp
mov
adc
aam
outsb
imul
popl
cmpsb
fwait
cltd
inc
int
push
shlb
cwtl
lock
scas
jo
int3
ljmp
xchg
inc
push
std
jp
or
mov
out
pop
jmp
pop
fucomp
aaa
clc
add
cs
xchg
or
mov
ljmp
jne
xor
lods
int
int3
jecxz
adc
push
outsb
jmp
add
add
pop
push
aaa
pop
dec
cmpsb
stos
or
shl
adc
and
test
in
mov
sti
cmpsb
cmpsb
and
fcoml
sub
inc
outsl
in
daa
into
jle
mov
test
jp
push
mov
mov
int3
jmp
mov
pop
sbb
std
cmc
sbb
mov
and
pop
pop
push
addr16
scas
mov
add
stos
pop
push
xchg
mov
call
xchg
divb
subl
sbb
out
bound
xchg
sahf
bound
or
lock
pop
jle
jecxz
in
inc
adc
pop
stos
cltd
leave
out
inc
cmp
scas
dec
daa
mov
jbe
mov
pop
cli
movsb
pop
lahf
test
movsb
mov
ds
mov
shrb
pop
or
mov
clc
inc
xchg
jg
jp
xlat
mov
aam
ljmp
sbbl
xlat
pop
jb
dec
sbb
pop
shr
clc
stos
bt
inc
jae
mov
jb
inc
push
mov
stc
pop
loopne
ret
shlb
adc
inc
loopne
and
test
xor
loop
dec
xlat
repnz
cmp
xor
popf
mov
movsl
fcompl
push
out
outsb
and
das
lret
cmp
sbb
and
sub
xlat
jne
add
xchg
push
xchg
adc
imul
dec
jno
mov
cmp
cwtl
inc
dec
mov
inc
push
popf
or
cwtl
jne
lcall
insb
sbb
iret
in
add
mov
pusha
adc
xchg
addr16
mov
mov
js
fisubrs
out
add
inc
xchg
scas
xchg
mov
dec
or
pop
scas
cmp
mov
ret
cltd
data16
push
movsl
daa
inc
adc
movsl
call
ja
mov
pop
call
mov
mov
ja
shlb
xchg
or
out
and
lcall
into
mov
mov
push
sub
cmp
pushf
inc
sbbl
inc
and
sti
cmpsb
cmc
int3
enter
mov
mov
inc
pusha
sbb
shlb
adc
cmp
in
cmp
mov
lds
mov
cmpsb
pop
sub
mov
and
jmp
add
iret
sar
js
scas
or
imul
dec
popa
push
ret
adc
popa
sub
imul
push
lock
inc
fildl
call
mov
sbb
bound
mov
adc
into
mov
dec
mov
repz
sbb
ljmp
xchg
cmpsb
clc
push
push
pop
cltd
mulb
adc
push
jle
add
fbstp
out
repz
enter
popf
jecxz
mov
iret
sbb
in
imul
inc
dec
inc
inc
lahf
cmp
mov
cmp
lock
and
dec
mov
mov
pop
fnsave
push
xchg
sub
sub
cmp
dec
mov
jmp
and
sti
out
add
leave
mov
sub
add
or
aad
jne
sbb
push
inc
cmp
imul
inc
push
inc
add
pop
scas
and
mov
nop
adc
adc
pop
int
mov
jl
test
stos
push
out
pop
in
sbb
mov
sbb
xor
sbb
mov
iret
pop
xchg
mov
lcall
sub
scas
or
jb
testb
xor
and
cltd
xor
pop
std
call
cmp
dec
mov
pop
inc
orl
xchg
or
push
enter
pop
pop
in
movsb
das
push
aaa
lahf
xor
fmull
mov
push
div
ljmp
scas
jnp
std
sbb
aam
pop
daa
and
call
imul
aas
jmp
push
xchg
stos
sub
andb
xchg
insb
cmp
shll
mov
jmp
pop
shl
hlt
sti
or
scas
ljmp
push
mov
push
pop
cmp
xchg
sbb
dec
pusha
mov
repz
repz
mov
jmp
lahf
arpl
rcrb
xchg
mov
mov
mov
jns
pop
int
dec
divb
xor
addr16
imul
outsw
cmp
fwait
lret
or
adc
sbb
push
insb
movl
sub
test
inc
xor
inc
mov
mull
dec
sbb
sbb
fsts
lahf
es
into
pop
sub
imul
push
cltd
pop
xor
stos
js
mov
push
popa
int
sbb
das
jo
xchg
sub
les
jnp
adc
mov
dec
inc
and
loopne
pop
sub
xlat
je
test
mov
mov
add
pop
mov
xchg
lcall
mov
pop
leave
mov
imul
mov
mov
aam
lret
call
pop
mov
sub
test
int
push
add
es
mov
mov
adc
cmpsb
xchg
lret
sbb
jno
and
sbb
mov
mov
test
enter
mov
shlb
mov
jge
pop
xchg
mov
jge
dec
sub
rcr
mov
push
cmp
mov
lds
inc
sub
sbb
jmp
hlt
sbb
sub
imul
jns
rclb
push
xor
cmpsb
rdmsr
push
repnz
in
push
xor
push
lods
out
jae
rcrb
inc
xchg
cmpsl
insl
dec
js
lcall
imul
faddl
jmp
imul
addb
shll
sbb
repnz
xor
stos
xchg
rcr
and
or
dec
mov
or
inc
xor
shll
ror
mov
out
lea
bound
cmpsl
lds
fdiv
setp
add
repnz
aad
xchg
cmp
icebp
adc
sahf
lea
js
dec
cli
idivl
ja
or
push
movsl
push
mov
int
outsb
or
dec
rorl
in
fwait
and
push
ja
scas
stos
or
sbb
mov
insl
push
adc
stc
das
jnp
das
loope
fcomi
cmp
adc
push
cmp
or
jl
in
add
jo
inc
cltd
and
test
lds
mov
sub
iret
cli
push
cmp
aam
jb
xor
jns
fnstcw
dec
fdivs
aad
in
out
xlat
mov
jge
cmp
outsb
pop
lahf
pop
and
ud2
pushf
or
add
fmull
pop
jae
cmp
adc
lcall
fiaddl
sub
inc
incl
jl
adc
aas
mov
jle
es
mov
aad
clc
loop
mov
cmc
add
leave
insl
lahf
cmpsl
gs
mov
dec
jns
rcll
xchg
jbe
stos
cwtl
into
mov
sbb
mov
push
or
jb
loopne
sbb
testb
lret
pop
sbb
inc
call
test
cmpsl
test
repz
arpl
xor
sub
add
fimuls
add
sbb
icebp
mov
imul
sarl
lret
mov
cli
xor
mov
xchg
js
pop
frstor
add
test
lea
dec
sub
jae
or
aad
test
xor
inc
inc
mov
aaa
test
inc
fs
and
jne
xor
mov
dec
cmc
hlt
mov
xor
push
adc
sti
scas
cmpsb
in
out
pop
mov
sbb
sub
fimuls
test
fbld
jne
add
mov
add
sub
ja
movsb
fs
push
mov
mov
sub
fisubrs
negb
daa
shrl
add
cmp
mov
push
outsl
imul
pusha
push
divl
out
sub
pop
jge
in
push
and
mov
imul
xchg
mov
negb
das
jg
add
add
in
mov
xchg
dec
inc
in
dec
addr16
sub
and
mov
dec
and
and
andb
mov
cmpsb
xor
out
int3
pushf
sti
cmc
sub
mov
and
push
rcl
jnp
out
lods
jecxz
mov
sub
mov
ljmp
add
lock
adc
idiv
lock
and
sub
add
lock
fsubl
lret
mov
add
stos
aas
insb
fdivrp
jb
xor
inc
cmpsb
lods
test
pop
cmc
outsl
fwait
jmp
outsl
adc
movsb
push
add
jl
fwait
add
jg
insb
arpl
lret
hlt
pop
lock
mov
xchg
push
jns
push
je
cmp
or
aad
dec
leave
cltd
xor
cmp
aad
xlat
dec
cmp
imul
lret
imul
fistps
mov
cltd
mov
test
int3
xchg
fwait
mov
push
ljmp
xor
sub
pop
insl
ds
clc
sbb
xor
or
adc
mov
sub
movsb
pusha
xchg
mov
inc
es
rcrb
pop
xchg
cmpsl
repnz
and
pusha
popf
arpl
dec
gs
and
pusha
push
dec
dec
pop
into
mov
mov
xlat
mov
ja
dec
insl
xor
mov
lock
xchg
pop
adc
inc
push
jmp
loopne
push
data16
mov
jnp
cmpb
insb
lret
clc
jae
jle
push
inc
or
inc
loope
sub
int3
adc
xor
sbb
in
call
popf
movsb
addr16
adc
inc
jmp
adc
mov
push
call
xchg
daa
popa
mov
and
dec
jmp
gs
cmc
test
aas
in
jl
mov
int3
sub
lcall
pusha
scas
andb
cmpsb
cmpsl
fstpt
js
push
cmpsl
je
cwtl
mov
pop
cltd
or
std
lcall
btr
repnz
xlat
xchg
test
outsb
sub
jmp
pusha
rcrb
lock
push
pop
out
mov
hlt
lret
cs
imul
mov
mov
xor
mov
sub
dec
jns
cld
dec
movsl
mov
rorl
push
xlat
filds
cmp
and
adc
jb
testb
push
int
fcomi
rol
and
dec
inc
bnd
test
jo
int
in
inc
mov
imul
add
mov
jl
sub
ds
and
imul
push
mulb
out
xor
call
jg
xor
mov
cmpsl
dec
mov
dec
pop
jo
mov
push
xchg
iret
arpl
mov
xor
dec
inc
int3
mov
cmp
mov
fbstp
bnd
clc
pushf
inc
mov
inc
sub
aaa
dec
lds
push
and
jecxz
sbb
pop
mov
shll
rol
fwait
jo
push
pop
mov
mov
sbb
negl
adc
xor
mov
or
sbb
test
add
or
jmp
adc
arpl
rorb
outsl
cmp
adc
jmp
das
imul
rcll
cwtl
pop
cmp
cmc
cmp
inc
decb
or
out
dec
mov
cmp
cmp
test
push
push
scas
in
jge
push
pop
test
rorb
popf
icebp
jbe
sbb
jl
mov
sbb
lock
mov
out
dec
in
pop
repnz
int
iret
pop
les
push
test
pop
or
icebp
or
loope
lock
mov
cld
fmull
fcmovnbe
das
out
push
jmp
mov
out
imul
jge
sahf
adc
xchg
cmpsl
add
xchg
cmp
repz
jge
sbb
push
loope
jmp
xchg
loope
push
xor
cmpb
mov
dec
div
dec
dec
xor
jnp
xchg
out
int
add
fisubrs
aas
jp
mov
push
andb
adc
push
or
das
and
xor
pop
enter
xchg
push
test
out
and
adc
lahf
mov
add
mov
bound
xlat
int3
aaa
cmp
push
clc
adc
loopne
subb
fistl
mov
pushf
sbb
or
shrl
inc
pop
lods
iret
push
aas
mov
mov
adc
in
or
enter
xlat
ret
xor
sbb
add
clc
inc
xchg
sbb
push
es
jmp
sub
xor
pop
test
popf
and
pop
lahf
popa
hlt
mov
or
jae
cltd
mov
inc
lret
arpl
test
jmp
hlt
jge
dec
push
xor
sbb
inc
out
mov
test
stos
jae
jp
lods
cli
push
cmp
bound
inc
mov
pop
xchg
mov
inc
jb
lods
ret
mov
sbb
sbb
std
testl
push
scas
mov
mov
or
pusha
leave
add
mov
lcall
sbb
cmp
xor
jp
adc
xor
or
inc
sub
aas
adc
xchg
les
add
push
stos
insl
mov
out
sub
out
je
icebp
sub
mov
repz
cltd
push
xchg
and
clc
lods
jp
testl
fs
loopne
pmulhuw
fstps
and
adc
arpl
insl
pusha
outsl
pop
or
out
sub
bound
mov
stos
test
push
cmp
fcomps
outsl
inc
nop
pop
xchg
pushl
fsubs
out
bound
stc
xlat
dec
lock
jbe
sbb
cmp
jb
sbb
in
cmpsb
dec
cmp
shr
leave
addr16
int
xchg
xchg
popa
outsl
test
fildll
ja
inc
add
sub
enter
lds
shll
xor
pop
cli
sarb
ret
dec
mov
arpl
xor
inc
mov
stc
mov
or
lods
roll
aaa
arpl
add
shll
dec
jnp
mov
mov
aam
stos
mov
mov
pusha
dec
test
ficoms
into
adc
pop
sub
inc
popl
add
pop
aad
xchg
fisubl
lea
rol
cmp
adc
or
in
fiaddl
aaa
jp
push
sub
or
adc
ss
mov
mov
je
push
xor
test
shll
hlt
mov
jbe
sub
jg
sbb
out
loop
pop
lock
ja
cmpsb
enter
fiadds
cmp
ret
xor
icebp
movsb
ss
push
jne
hlt
sbb
xchg
addr16
test
push
dec
inc
fsts
loope
inc
and
or
pop
int3
xchg
sbb
lret
test
sarb
incb
xor
sub
mov
call
jno
mov
and
adc
push
mov
je
fstp
sbbb
cmp
out
mov
stc
fsubrs
iret
push
cld
scas
cmp
notl
or
push
movsl
jne
xchg
mov
mov
out
lret
pop
pop
negl
sbb
jg
pop
inc
xchg
dec
pop
xchg
sub
sbb
push
out
mov
fistl
ds
loope
sub
cmp
sti
mov
lahf
int
xchg
xchg
push
sub
xchg
ret
sbb
fnsave
out
mov
push
rol
push
pusha
adc
mov
xor
cmp
mov
rcr
xchg
repnz
pop
sti
mov
pop
pop
je
cmp
mov
pop
es
or
out
inc
int3
popf
imull
lea
xor
sbb
mov
gs
cmpsb
sbb
xor
pop
icebp
cmpsb
xor
dec
xchg
gs
lock
push
push
push
test
adc
sub
inc
sbb
jmp
jo
cmp
lret
mov
push
scas
test
mov
testl
movsl
mov
sub
jge
jne
mov
js
or
popa
sub
repnz
mov
leave
addr16
inc
in
insb
push
dec
setno
push
sbb
out
sahf
popa
arpl
les
rcll
xchg
dec
cli
push
pop
shl
lcall
xor
in
push
lods
outsl
insl
xchg
enter
es
mov
and
mov
add
lods
std
scas
push
mov
stos
xchg
into
lods
push
pop
lds
xor
lahf
jnp
push
xchg
pushf
mov
or
in
mov
mov
lcall
imul
icebp
addr16
lahf
and
add
jle
push
mov
fdivrl
xchg
or
pop
cmpsb
jle
fidivl
imul
stos
repz
popa
mov
fmull
ds
cmp
in
or
xchg
add
xlat
xor
xor
mov
outsb
imul
jle
arpl
sbb
mull
mov
cmp
push
gs
xchg
mov
pop
pop
pop
loope
movsl
fists
icebp
lock
and
push
sbb
push
pusha
mov
stos
dec
dec
dec
push
enter
std
sbb
dec
ds
inc
in
fldt
fcomp
test
cmp
sub
adc
lret
test
push
cmpsl
pop
xchg
insl
addr16
push
cmp
and
inc
pop
std
movsb
aas
pop
jne
jne
mov
scas
fdivl
pop
cmp
push
and
into
ficoms
insb
lds
rorl
xchg
push
jl
mov
into
call
pop
or
jmp
mov
add
adc
push
int3
add
cmp
mov
and
rep
xchg
jb
ret
inc
and
pop
jmp
add
stos
cmpsb
out
sbb
or
or
shlb
xor
lods
cs
or
cmp
mov
adc
movsb
fs
lods
insl
cmp
xor
out
inc
lcall
mov
imul
cli
into
negl
sub
mov
jl
mov
inc
dec
dec
scas
js
je
in
out
lcall
iret
mov
push
movsl
mov
mov
jae
imul
cltd
xchg
add
mov
inc
mov
cmp
adc
push
mov
rorl
add
loopne
in
stos
adc
cltd
push
icebp
adc
adc
stos
scas
mov
pop
pop
cmp
movsb
pop
xor
andl
loopne
stos
xchg
int3
push
sbb
imul
idivb
daa
push
add
jno
stos
in
lcall
sub
mov
or
daa
add
rorb
inc
nop
lds
dec
loope
inc
mov
inc
pop
loope
outsb
xor
sub
and
outsl
shlb
mov
imul
push
test
jmp
test
mov
inc
scas
push
mov
fwait
sbb
cmpsb
inc
insb
inc
dec
mov
pop
fdivrl
cmp
xchg
adc
arpl
jl
test
add
test
test
mov
sub
dec
and
cmp
add
mov
push
aas
vorps
jle
pop
cmp
jbe
sub
sbb
sbb
mov
fcomps
push
sub
add
jnp
fisubl
scas
fucomi
ja
push
push
cmp
push
cmpsl
sub
or
push
or
mov
sbb
adc
fnstsw
mov
ja
sti
loope
xchg
mov
mov
mov
in
cmp
inc
lcall
fsubl
xchg
xchg
sbb
popa
jge
xchg
xchg
sysexit
test
movsl
sub
or
stos
in
lods
cmp
fsubl
sti
call
es
les
and
out
pop
out
xor
out
xor
sbb
dec
fisubrs
mov
divb
lods
sbb
jnp
add
xchg
pop
ljmp
setnp
inc
test
push
mov
enter
and
ja
xchg
test
xor
call
jae
out
mov
mov
or
aaa
fwait
and
lahf
lds
add
outsl
add
inc
pop
dec
and
movsl
mov
jae
push
sub
gs
push
cmpsl
or
xor
scas
fs
mov
ljmp
fstpl
xor
mov
sti
pop
jge
sub
das
orl
addr16
add
lods
out
pop
and
popf
and
addl
dec
in
add
add
dec
push
in
test
mov
sbb
xchg
inc
push
cmp
jp
movsl
sub
sub
aas
mov
arpl
incb
cmpsb
decl
sarl
lret
mov
shrl
arpl
out
inc
pop
cmpsl
mov
mov
mov
push
repnz
pop
cmpsb
lods
sub
pop
cmp
hlt
addr16
adc
jecxz
mov
push
push
mov
lahf
xor
inc
popa
out
cmpsl
notb
xchg
adc
mov
jmp
dec
xor
fiadds
push
fsub
ficompl
or
inc
fisttpl
jg
dec
cmp
aaa
aaa
inc
push
mov
mov
stos
xor
adc
fistl
hlt
dec
ret
adc
push
arpl
mov
or
out
add
mov
jbe
mov
and
lcall
pusha
push
stos
dec
mov
test
pop
stc
lahf
lcall
arpl
jb
mov
sub
mov
in
or
push
lret
mov
jns
mov
imul
mov
xchg
push
filds
test
cmp
inc
mov
das
fsubp
scas
scas
insb
cmp
test
mov
cld
push
sbb
xor
negl
loopne
lret
repz
arpl
push
stc
int3
les
lret
dec
in
cmc
pusha
cmc
popf
pop
adc
add
xchg
shlb
out
inc
inc
aad
push
repz
push
jp
incl
adc
inc
cmp
in
lret
in
pop
mov
outsb
dec
push
aad
sub
sarl
pop
jmp
mov
mov
cld
pop
out
insb
mov
aam
arpl
xchg
aad
fwait
cmp
xchg
js
xor
pop
pop
shll
movb
lds
mov
in
push
jno
add
fs
mov
inc
adc
nop
jno
xchg
or
into
or
out
add
mov
inc
sbb
jne
mov
fnstenv
push
xchg
adc
imul
inc
push
mov
icebp
inc
adc
test
or
dec
cmp
mov
ret
out
push
push
mov
faddl
clc
dec
pop
popf
xchg
xchg
roll
loope
aad
xor
mov
outsl
mov
dec
jno
shlb
and
dec
ret
sub
repnz
adc
movsb
xchg
stos
inc
mov
fcmovb
xor
pop
ljmp
lahf
rcrb
lods
out
mov
stc
sbb
test
scas
jle
sub
mov
xchg
cmc
sbb
jmp
sub
add
dec
mov
fstps
pusha
mov
mov
jg
scas
xor
mov
dec
inc
icebp
repz
adc
xor
out
lret
mov
sbb
sbb
mov
sti
xchg
push
push
pusha
fs
sub
jmp
mov
dec
cld
bound
popf
xor
add
pop
push
loopne
pop
push
xor
sub
jne
cmp
inc
jl
pop
and
shll
sub
loope
or
subl
or
mov
jb
lcall
sub
leave
push
mov
fcoml
push
cmp
aaa
out
sar
insl
and
mov
out
xor
into
outsl
out
xchg
daa
test
fcomi
pop
inc
and
hlt
cmpsl
sub
pop
dec
sar
xlat
lds
cmp
push
pusha
add
aam
rorl
aad
jecxz
cmp
pop
out
push
cmp
xor
pop
xchg
fcoms
xchg
inc
aaa
inc
xor
cmp
mov
ja
xlat
mov
dec
out
cli
xor
leave
cmp
and
loop
pop
lds
jge
sub
shrl
stos
mov
sub
pop
mov
jmp
rolb
test
lahf
nop
inc
int
sbbl
or
fnstsw
in
xor
push
je
jo
lea
outsb
scas
push
fildll
roll
aam
cmpsl
repnz
sub
ficomps
andb
push
clc
shr
push
pop
jge
push
or
sbb
adc
or
test
xchg
lea
jno
insb
out
int3
mov
and
int3
imul
sbb
mov
imul
mov
lret
ljmp
push
or
xor
repnz
out
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
xlat
inc
repz
inc
dec
pminub
add
mov
mov
test
ret
cmpsl
push
sub
pusha
dec
fsubp
mov
xchg
xor
jo
fisttpll
sbb
in
pushf
pushf
push
and
mov
dec
pop
in
inc
out
lods
cmp
sub
sahf
fdiv
pop
mov
imul
mov
pop
js
mov
mov
inc
push
fldenv
inc
mov
sbbl
aas
xor
xor
repnz
imul
mov
dec
subb
cld
xchg
loopne
xchg
mov
test
adc
mov
sahf
push
cmpsl
cmc
pop
subl
adc
sub
xor
jle
inc
mov
mov
xchg
js
adc
mov
and
sarl
push
cmp
inc
xchg
jmp
cmpsl
pop
xchg
loope
lods
nop
pop
and
rcrl
mov
cs
arpl
pop
loop
sub
mov
push
and
adc
push
add
cmp
mov
testl
dec
mov
nop
jecxz
inc
adc
pop
jnp
ljmp
sub
lea
mov
nop
xchg
repnz
in
xchg
imul
lcall
lret
xchg
mov
mov
mov
sbb
jo
lock
out
cmpl
sbb
mov
push
daa
in
sbb
cli
pushf
pop
and
push
fxch
popa
sub
mov
inc
inc
ljmp
and
sbb
jo
cmpb
mov
lods
ss
data16
repz
jno
cmp
mov
xchg
mov
inc
mov
out
pop
icebp
xor
mov
and
and
xlat
jle
test
dec
insl
mov
or
js
or
hlt
nop
push
and
dec
or
pop
xor
sub
pop
mov
hlt
lea
cmc
call
sub
ss
pop
mov
stc
mov
adc
mov
mov
pop
mov
xchg
add
mov
inc
lret
pop
xor
mov
into
pop
adc
sbb
sti
mov
popa
cmp
push
inc
mov
movsl
xchg
push
pop
cmp
movsl
pop
mov
sbb
js
ret
or
flds
mov
sti
cmp
loope
sub
aam
push
mov
and
dec
push
cmp
push
or
jbe
ja
and
dec
movsl
mov
sbb
fbstp
mov
push
xor
or
test
dec
leave
sahf
stos
cld
xchg
mov
push
das
or
js
stos
imul
push
iret
sbb
pop
adc
lock
arpl
push
lahf
dec
arpl
sti
cltd
mov
repnz
xchg
cli
add
cltd
repnz
aas
lods
jge
xor
push
pop
mull
xchg
lock
cmp
test
negl
and
add
xchg
insb
in
movsl
daa
mov
ss
ficompl
lret
lcall
inc
std
adc
jle
push
fists
fmuls
and
mov
fs
cmp
nop
pop
adc
js
cmp
je
xchg
and
adc
cmpsb
lods
sub
stc
in
xchg
mov
dec
adc
mov
cmp
jae
hlt
cld
repz
enter
fsubr
cmp
mov
add
xorb
test
scas
xchg
shl
pop
jge
mov
add
mov
lea
mov
inc
cs
icebp
mov
jecxz
lcall
popa
dec
mov
stc
mov
rclb
cmp
js
ljmp
cli
xchg
cmp
xchg
rol
fwait
stos
mov
mov
loopne
daa
ljmp
xor
sarl
bound
mov
mov
fcomps
ds
shlb
in
xor
pushf
sbb
scas
xchg
pushl
inc
sbb
stc
adc
sub
xor
push
and
into
in
jb
dec
lock
xchg
addr16
add
or
and
cmc
xchg
adc
test
ljmp
or
mov
xchg
hlt
sub
repz
out
mov
xor
pusha
and
rcl
ss
jb
inc
loope
dec
xchg
and
add
sbb
push
jp
aam
arpl
adc
pusha
sub
lods
in
lods
in
inc
xor
shrb
fcmove
dec
call
add
fisttpl
imulb
push
mov
or
or
out
insb
je
push
dec
lods
pop
adc
jne
or
cmp
cmp
lods
mov
nop
xor
movsb
nop
mov
xor
jge
mov
mov
lret
mov
fwait
ds
iret
imul
push
or
sub
lds
repnz
lret
mov
sub
and
pop
ret
ret
xchg
mov
push
fldcw
xchg
movsb
pop
in
test
mov
nop
push
pop
iret
or
push
test
movsl
into
fwait
insl
push
pavgw
and
cs
dec
or
sti
xor
sub
stos
mov
repz
imul
and
cli
test
rep
xchg
cmp
fstl
sbb
pop
cmp
rcrb
mov
mov
xchg
aaa
cld
daa
sub
ret
rolb
leave
push
inc
popa
dec
xchg
loop
dec
dec
js
data16
outsl
or
push
cmp
or
mov
push
popa
clc
leave
arpl
cmc
adc
sti
scas
clc
sbb
bound
push
les
mov
sbb
mull
stc
test
dec
xlat
mov
push
das
lret
lock
cmp
addr16
push
jmp
aas
out
add
sarb
jnp
push
adc
das
js
pop
clc
lock
sub
sub
orl
les
adc
cmp
rorb
leave
inc
xchg
push
jb
test
jge
fnstsw
pop
out
adc
xchg
and
sub
fdivs
mov
pop
inc
or
lcall
popf
ret
sahf
push
jl
mov
mov
adc
imul
mov
sbb
repnz
nop
insb
test
mov
data16
cmp
push
mov
xchg
mull
aas
inc
cli
xchg
xor
test
mov
insl
pop
add
cs
mov
das
addl
add
mov
repnz
and
xchg
aaa
xchg
leave
xor
repz
ficoml
xor
loopne
cmpb
cs
outsb
jle
mov
and
nop
mov
dec
sbb
mov
icebp
fdivr
mov
jge
out
jbe
ret
ds
test
idivb
into
cmp
fisubrs
cmpsb
add
inc
mov
divb
call
imul
jecxz
jp
cs
inc
xlat
ljmp
in
popf
out
idivl
push
mov
gs
and
mov
lahf
inc
inc
shlb
test
push
cmpsb
imul
js
sbb
sbbw
test
sahf
jbe
in
mov
adc
or
mov
dec
fdivl
xor
add
mov
jmp
dec
inc
jge
cmpsb
cmp
sbb
das
mov
aad
sbb
jb
fcmovb
bound
repz
in
jae
push
dec
rclb
das
bound
xchg
mov
cwtl
pop
mov
jne
or
push
fwait
pop
push
mov
xchg
int
fidivl
pop
in
and
je
mov
mov
pushf
mov
inc
ljmp
pop
cs
ret
clc
aam
cmpsl
out
fistpl
cmpsb
push
test
int
outsb
and
das
inc
fs
pop
xchg
mov
pop
lods
call
ss
test
rorl
hlt
stc
bound
loop
fwait
jle
add
in
push
stos
mov
jo
sarb
fcmovbe
or
mov
jnp
das
push
mov
in
in
mov
cwtl
sbbl
lds
inc
out
sub
adc
sbb
xchg
dec
in
stc
inc
jecxz
jb
adcb
inc
cmpsb
mov
fisubrs
or
out
cmp
aam
adc
mov
xchg
sbb
inc
enter
push
pushf
lcall
add
fildll
sbb
xor
dec
outsl
cmp
movsl
fwait
int
jge
jge
das
out
mov
or
in
sbb
jno
jg
jbe
in
dec
rcl
scas
xchg
shrl
mov
mov
push
and
mov
xor
inc
xor
ret
mov
mov
leave
lods
shll
jge
in
cmp
lea
xchg
mov
push
sbb
insb
cmp
mov
test
cmp
xchg
add
outsb
loope
or
jge
outsl
dec
imul
mov
gs
je
push
push
push
inc
ror
subb
sbb
mov
xchg
sarb
adc
hlt
mov
xchg
and
scas
jns
add
dec
lret
add
mov
fwait
std
push
ret
gs
cmp
shll
jl
dec
jp
dec
cwtl
jno
xor
fs
pop
jbe
push
cli
mov
push
or
mov
sub
popf
jmp
out
jb
rorl
pop
not
outsb
in
stos
outsl
sbb
adc
xorl
jle
push
movsl
inc
cmp
insb
pop
sarb
push
pop
and
shlb
imul
or
pop
sti
and
sbb
jmp
cmpsb
popf
ret
in
jmp
push
xchg
xchg
cmpsb
adc
jo
imul
and
cmc
outsb
adc
sub
fwait
rcr
sub
pop
sbb
cwtl
nop
sahf
pop
push
insb
cwtl
rolb
bound
outsl
sub
adc
lahf
pop
push
lods
shll
insb
jle
in
stos
ret
insl
out
mov
imul
mov
xchg
dec
add
enter
adc
adc
jo
sub
je
push
mov
inc
out
in
ss
addl
aas
fiaddl
fcoml
fisubl
push
adc
inc
movl
jmp
dec
xor
aad
fimull
shll
sti
rcr
adc
iret
fcomps
jmp
stos
add
push
lahf
frstor
mov
aad
jmp
inc
pop
das
jle
roll
mov
jno
loopne
repnz
sub
push
mov
fwait
test
andl
lods
and
ds
mov
mov
push
push
dec
jl
int
push
in
mov
daa
js
shrb
test
add
cmpl
adc
sti
je
scas
add
xor
xor
inc
mov
into
ljmp
sub
pop
cmpsb
mov
adc
int
daa
and
mov
in
shlb
push
ret
mov
fdivs
pop
pushl
test
cmp
mov
in
pop
push
outsb
fistps
stc
jb
fisttpll
imul
add
lea
shll
pusha
dec
jns
mov
xchg
xor
insb
cmp
push
mov
mov
or
jecxz
imul
inc
pop
push
mov
or
inc
pop
mov
lahf
pop
lcall
mov
pop
outsb
sbb
mov
outsb
push
rcrl
je
or
xorb
sti
dec
leave
xor
push
mov
dec
jl
ror
dec
mov
in
je
arpl
pop
fwait
je
adc
pop
mov
mov
jmp
imul
pop
pop
fdivrs
jb
imul
add
loope
out
cmp
int
lods
cmp
in
ds
int
fisttpl
xor
loopne
int
out
mov
push
sarl
test
loope
inc
arpl
push
in
out
mov
shll
jno
mov
lret
dec
and
cmp
cmp
sbb
jmp
xchg
push
lahf
push
adc
cld
int
aam
push
pop
jg
das
fnstsw
insl
mov
mov
xchg
pop
push
sub
pushw
popl
mov
popf
or
test
pop
je
jecxz
insl
shlb
jg
pop
in
fisubl
test
or
jle
jae
inc
and
dec
or
icebp
push
loope
jp
rorl
inc
add
xor
test
je
mov
retw
cli
scas
subb
cmp
jmp
xchg
nop
aam
rol
sbb
xchg
out
js
mov
enter
sbb
adc
adc
inc
popa
sbb
pop
in
jns
repz
orb
lods
push
xchg
dec
clc
pop
lods
adc
push
xchg
movsb
pop
ffree
out
js
aaa
adc
add
dec
push
jecxz
xor
aam
push
aam
test
shlb
xor
aam
stc
cmp
pop
cmc
pushf
and
jns
jns
mov
mov
pop
add
push
les
adc
push
sbb
sub
push
js
mov
push
mov
jae
inc
lods
pop
in
and
pop
dec
push
add
ret
and
xor
in
mov
push
insl
ljmp
movsl
outsb
cmp
loop
sahf
leave
dec
movsl
rcrb
push
adc
inc
mov
jb
inc
lods
bound
jns
mull
cs
roll
lret
jg
shlb
push
push
pusha
and
xlat
inc
sahf
fistps
mov
push
int
out
icebp
filds
pandn
sub
shlb
scas
cmp
fneni(8087
adc
dec
lahf
fcmovbe
sbb
jmp
push
or
ds
or
and
scas
das
arpl
jb
jns
andl
jg
mov
or
mov
cmp
loopne
cmp
ret
pop
jecxz
jb
dec
or
mov
std
xor
jo
fcomps
pop
jne
dec
xor
aas
xchg
pop
cmp
sub
pop
xor
aam
cwtl
in
push
lds
fnstcw
ret
sub
fbld
leave
ds
mov
xchg
dec
test
push
pop
repnz
movsb
pop
push
flds
cld
pop
sub
push
ret
dec
sub
loope
repnz
orb
adc
pop
leave
shlb
movsb
inc
stos
pop
jg
imul
jmp
rorl
push
sbbb
ja
dec
sbb
notl
int
pop
into
pushf
clc
subl
xor
xchg
adc
lret
xchg
add
sbb
adc
or
cmpsl
inc
ds
in
outsb
adc
cld
xchg
popa
cltd
cmpsl
and
push
lds
adc
lahf
mov
sti
stc
sub
sub
mov
mov
stos
loop
or
or
jmp
and
out
mov
leave
hlt
pop
xchg
movsb
sub
les
jecxz
ss
test
xchg
fadd
push
xlat
inc
adc
cmp
mov
pushf
clc
add
jge
or
dec
fidivrl
in
xor
dec
pop
mov
cs
shll
mov
movsl
jnp
add
in
add
lret
inc
sbb
push
and
sub
push
les
adcl
pop
subb
iret
inc
mov
pop
mov
pop
jae
dec
sbb
xchg
sbb
lret
mov
dec
aad
add
ret
or
push
jno
mov
dec
stc
xchg
out
jmp
inc
mov
pop
orl
push
jns
adc
in
inc
add
mov
std
push
inc
adc
std
inc
add
adc
jo
inc
mov
pop
xchg
jmp
cwtl
mov
movsl
jl
into
add
lahf
mov
push
insb
outsl
push
push
flds
fwait
rcl
jae
push
lret
pop
add
push
mov
lea
cltd
addr16
pop
pop
outsl
sarb
xor
xor
rorb
and
lock
pop
es
mov
lock
fwait
mov
test
inc
andb
cmp
lret
cli
adc
ss
jne
dec
dec
mov
add
rcl
fcom
dec
imul
dec
mov
clc
lahf
dec
bound
mov
xchg
mov
add
dec
iret
pop
cmpsb
jg
adc
outsl
into
push
and
scas
out
inc
pop
inc
push
push
pop
or
in
stos
jnp
push
lret
cmc
cld
pop
jo
lret
and
bound
push
cltd
push
popf
dec
dec
fistl
bound
pop
stos
inc
add
sbb
js
push
jne
mov
jecxz
pusha
imul
movsl
jno
test
shlb
jae
sub
dec
pop
insb
jne
adcb
pop
mov
repnz
adc
jle
fstpt
push
pop
pushl
mov
or
shrl
in
ja
dec
lods
push
imulb
add
mov
fwait
sbb
sub
cmp
sbb
add
sub
pop
popa
es
je
pushf
jg
mov
mov
ret
pop
jno
jae
xorb
push
xor
cltd
lock
lret
jge
cmpsb
das
add
jge
ss
loope
and
ds
push
mov
ror
cmp
jno
push
jge
pop
lds
sub
xor
imul
or
out
mov
sub
das
jne
xchg
push
or
pop
or
movsl
mov
add
out
xchg
lahf
sar
xchg
dec
dec
jns
cmp
inc
cmpsb
cmp
rcrl
out
dec
loopne
lahf
inc
outsl
stos
ds
mov
push
test
xchg
sub
xchg
nop
push
pop
test
cmp
jmp
lods
push
add
jmp
mov
nop
lahf
addr16
loope
sub
pop
ret
xchg
mov
sbb
push
push
or
leave
stos
in
adc
push
imul
pop
mov
add
loop
hlt
xchg
xchg
out
ret
mov
clc
pop
fsts
in
out
xchg
push
loop
push
or
inc
ja
cmp
xlat
mov
xchg
data16
cmp
sahf
sti
mov
dec
or
cmpsl
xchg
mov
push
cli
stos
and
bound
jbe
jmp
mov
xchg
daa
jbe
mov
lods
add
lahf
sbb
xchg
popf
imul
sbb
push
sbb
dec
or
ja
fldcw
sub
frstor
inc
daa
mov
pop
scas
loopne
push
sbb
stc
fwait
pminub
sar
cs
mov
cmp
adc
or
pop
add
cmovb
push
xor
stos
gs
adc
sbb
sub
divb
stos
aas
ljmp
cmp
mov
pop
inc
imul
clc
jge
sbb
inc
cmc
and
shl
adc
xchg
scas
int3
xchg
xlat
dec
jp
inc
sub
sti
ret
mov
rclb
mov
xor
pop
fldt
movsb
ficoms
adc
scas
fbstp
or
or
mov
and
pop
and
out
sbb
pop
outsb
push
or
xor
pop
jge
push
jg
stos
cwtl
push
xchg
call
dec
sbb
push
jmp
xchg
out
push
cmpsl
dec
ds
iret
jo
or
pop
in
or
mov
jae
pop
shrl
jnp
add
fxch
push
cld
scas
push
mov
fsubl
sub
imul
js
pop
dec
imul
gs
scas
in
rclb
test
mov
lret
stos
aad
addl
loop
push
pop
and
dec
test
and
lret
dec
inc
imul
jno
and
mov
fadd
pusha
sbb
jo
push
in
sbb
lds
mov
and
xor
push
data16
jp
out
inc
stc
pusha
and
iret
in
adc
push
cmp
push
stos
push
xor
sahf
sub
add
cmp
push
xor
pop
add
in
xor
sub
into
incb
xchg
xchg
mov
icebp
sarl
fists
loop
loopne
sub
add
dec
loope
sti
shl
push
mov
pushf
stos
rcrl
jge
or
pop
shll
xor
xorl
xor
sub
pop
iret
xor
add
stc
mov
jl
out
shrb
outsb
add
cmc
xor
pop
inc
shrb
or
jne
stos
xor
inc
xlat
mov
cmp
pusha
lcall
out
pop
inc
and
mov
mov
mov
or
add
pop
cmpsb
ja
pop
mov
or
mov
pop
insb
sahf
jne
loop
push
nop
pop
sbb
setns
sub
out
test
mov
adc
in
pop
lret
push
aaa
aaa
pop
test
sub
dec
sub
cmp
je
aaa
xor
pop
stos
add
add
sarb
scas
mov
or
out
inc
aas
cmp
je
movb
mov
test
sbb
xor
out
insb
repnz
daa
xor
mul
call
mov
jmp
xor
mov
xor
mov
icebp
cmp
and
mov
shrb
shl
and
lcall
je
rcrl
pop
xchg
aad
mov
jnp
mov
mov
test
out
sahf
inc
pop
cli
sub
pop
xchg
pop
xchg
mov
shll
test
push
xlat
mov
sub
adc
sbb
aaa
addb
xchg
mov
pop
jns
push
je
mov
stos
lret
xchg
push
xor
popa
rorb
push
jmp
jle
shl
mov
in
aaa
mov
pop
adc
outsl
xlat
fstl
dec
pop
test
mov
jo
push
dec
pop
test
test
ja
ret
loopne
movsb
jno
add
pop
out
loopne
popf
das
fldenv
push
xchg
xchg
lcall
add
jge
test
fs
mov
sbb
cmc
aaa
sub
dec
flds
cltd
ficompl
mov
push
dec
adc
sti
jne
dec
mov
jmp
cmpsb
out
adc
js
jae
clc
adc
and
ss
stos
sahf
jge
inc
mov
jmp
fbld
and
or
mov
dec
sbb
clc
ficoms
sbbb
mov
mov
mov
lds
mov
stos
in
push
adc
shrb
cwtl
gs
mov
and
mov
pushf
dec
rorl
lahf
lahf
add
add
xor
and
sbb
daa
dec
cmpsl
fidivl
loop
mov
into
sub
sbb
fcoml
int3
lods
xchg
test
ljmp
mov
adc
adc
inc
ljmp
movsl
jae
pop
mov
sbb
add
test
dec
ss
shlb
cwtl
pop
int3
pop
lahf
jbe
ja
sub
notl
xor
pop
and
jno
inc
and
mov
pop
mov
in
xchg
adc
mov
roll
xchg
xchg
mov
xchg
cwtl
mov
push
ds
cmc
inc
jnp
clc
in
into
loopne
mov
je
shlb
cmp
fadd
call
xchg
jbe
out
xor
sub
mov
pop
adc
push
push
push
into
and
daa
notb
dec
mov
hlt
dec
ds
fbstp
dec
dec
jae
pushf
popa
xor
dec
or
in
in
or
movsl
xor
push
mov
mov
add
fisttps
daa
sbb
push
adc
jb
int3
in
icebp
ret
test
mov
mov
hlt
xchg
ret
movsb
jno
jp
sbb
sub
push
out
mov
in
out
jmp
sbb
push
das
jp
pusha
add
cmpb
cmovne
xchg
vpmacsdqh
or
loop
cli
push
dec
aaa
cmp
cmpl
mov
xlat
test
fwait
out
push
xor
mov
xchg
in
pop
mov
mov
dec
js
mov
ja
sbb
mov
add
inc
inc
std
int
mov
sbb
clc
xchg
and
pop
fwait
aaa
push
and
sbb
adc
dec
xor
or
mov
sbb
pop
xor
mov
gs
jb
jne
mov
jp
outsb
sbb
dec
sub
mov
popa
imul
jne
or
mov
iret
dec
scas
push
push
inc
mov
fs
pop
outsb
sbb
int3
adc
pushf
lock
jmp
fnstenv
sub
loop
mov
into
dec
cltd
call
sbb
roll
sub
idivb
mov
jmp
cmp
sbb
mov
sbb
cmp
stc
and
out
out
in
jmp
ss
and
jmp
sub
adc
and
mov
push
lock
xchg
aas
jmp
mov
jge
push
js
nop
icebp
enter
repnz
dec
jae
xor
repnz
adc
lahf
clc
leave
imulb
aad
lds
popa
insb
xchg
mov
cmp
xchg
dec
jns
pop
cmc
call
xchg
jns
sub
jmp
push
jo
mov
push
lock
loop
or
sbb
mov
mov
xchg
and
add
jmp
test
fs
sbb
push
ret
pop
push
jo
cmp
sub
sub
xor
jmp
test
jecxz
mov
push
push
stc
and
jo
fs
mov
pop
outsl
add
das
test
and
stos
shlb
dec
xor
imul
test
les
mov
push
les
loope
roll
repz
or
dec
cmpsl
lock
sbb
repz
jp
jo
push
mov
mov
lods
fxch
xchg
mov
pop
cltd
push
adc
in
and
addr16
mov
in
cmp
adc
sbb
and
imul
mov
add
lahf
es
mov
into
popa
sahf
mov
call
and
in
and
subb
dec
test
leave
call
xlat
push
xlat
roll
xor
mov
cmp
adc
pop
xorb
push
cmc
lock
cwtl
inc
andb
or
sub
aas
scas
idivl
xchg
push
jle
rorl
dec
push
int3
lahf
pandn
movsb
ret
out
xor
into
mov
or
or
or
iret
inc
imul
push
lcall
jne
sbb
data16
rcr
adc
adc
stos
lods
push
fiadds
xchg
popa
jl
outsb
mov
sbb
std
mov
sahf
into
and
inc
hlt
cmp
out
mov
sbbb
in
test
jmp
iret
data16
and
cmp
xchg
scas
lods
aad
dec
ret
movsl
in
rol
ljmp
out
aam
in
in
ds
gs
out
jne
jbe
xor
rcrl
cwtl
int3
mov
loopne
cmpsb
sub
sub
add
mov
fdivp
push
xor
adc
bound
movsl
push
lods
xchg
shrl
mov
mov
cmp
mov
dec
push
xor
push
dec
push
cmp
mov
mov
frstor
xor
mov
sbb
in
iret
es
into
inc
xchg
lcall
push
mov
fldcw
lahf
iret
or
add
adc
icebp
sbb
mov
mov
rcll
bound
pop
jle
loop
repz
lods
mov
adc
je
cld
fdivs
sbb
js
in
sub
push
inc
test
ror
push
dec
push
xchg
es
xcrypt-ctr
cmpsl
sbb
xor
push
lret
out
jg
push
jg
imul
movsb
dec
incb
pop
and
outsb
push
adc
cwtl
stc
add
out
or
movsl
test
gs
or
jo
or
pop
dec
jne
push
push
mov
sbb
jo
outsb
cwtl
in
je
iret
loop
les
mov
inc
push
mov
sbb
sbb
test
jp
mov
enter
inc
push
add
pop
mov
js
jecxz
imul
mov
cmp
pop
and
pop
test
ss
dec
jg
mov
push
imul
shlb
sbb
gs
jle
mov
mov
mov
xchg
push
clc
add
in
xor
inc
jmp
outsb
inc
push
mov
jmp
inc
jo
lock
xor
ret
cmpsl
popa
push
mov
xchg
jnp
or
adc
call
inc
mov
adc
mov
stos
or
xlat
rcrl
xchg
in
or
loopne
ds
xchg
les
mov
and
pop
mov
add
outsb
ja
fdivrs
mov
in
nop
in
cmpsb
in
sub
mov
fwait
adc
sbb
mov
int3
iret
dec
mov
mov
ss
pop
lock
xor
push
incl
add
xchg
loope
cmp
fstps
das
sub
insb
lds
test
xchg
rcrl
fcmovb
jge
fdivl
std
push
data16
dec
xchg
mov
aas
sahf
push
add
jmp
ja
pop
jecxz
int
clc
das
inc
push
out
imul
jp
andl
or
jo
pop
mov
push
test
loop
fstl
dec
mov
pop
push
sbb
mov
rdtsc
xchg
and
mov
pushf
xchg
jne
jae
jp
pop
mov
clc
mov
daa
sub
xchg
pop
ja
inc
adc
jp
repz
imul
or
ret
sbb
mov
test
subb
pushf
jg
mov
ret
mov
insl
jb
sti
inc
inc
imul
in
mulb
pop
add
xor
mov
pop
into
cmc
dec
dec
jmp
in
sbbb
mov
fdivs
std
xchg
adc
test
dec
mov
jecxz
mov
inc
outsl
jge
addr16
into
pushf
faddl
arpl
lcall
xchg
pop
call
rorb
sbb
adcl
pop
pop
pop
mov
daa
cltd
push
incb
jne
sub
add
add
loopne
arpl
movsb
insb
jb
mov
in
shll
and
or
in
es
and
popa
dec
add
ja
mov
pop
test
sub
adc
push
adc
push
jae
jbe
or
push
jbe
insl
pop
inc
or
mov
mov
mov
jnp
sub
or
cmp
xlat
push
stos
fistps
jle
arpl
jne
dec
out
movb
loopne
dec
xchg
push
inc
xchg
mov
stos
aas
in
sub
push
jle
mov
das
sbbb
jle
loope
cmp
xor
lds
and
lds
or
xchg
ret
cmp
adc
pop
je
dec
mulb
and
mov
add
sbb
in
dec
aas
imul
loope
out
pop
dec
iret
pop
lcall
dec
sbbl
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
xchg
push
hlt
bound
pop
bound
dec
mov
icebp
mov
gs
jp
adc
mov
shl
in
sub
ret
dec
clc
mov
dec
push
and
out
mov
push
lock
dec
mov
cmc
and
dec
cmpsb
cmpb
pop
cmpb
insl
xlat
les
cmp
fiaddl
mov
sub
sub
ret
adc
sbb
sbb
fistpll
xchg
xor
cltd
je
je
sub
add
call
lods
jecxz
pop
lea
jo
sub
cmpsl
outsb
mov
jno
mov
adc
add
cmp
fcompl
rorl
lods
jne
mov
xchg
sub
imul
nop
and
push
jnp
mov
inc
into
fsincos
sub
jmp
aam
xchg
shl
sub
xor
ljmp
imulb
xor
lahf
inc
dec
sub
inc
jne
ljmp
pop
pop
test
inc
jmp
imul
add
test
mov
sbb
loopne
mov
jns
cwtl
subb
adc
mov
pop
imul
and
mov
inc
movsb
call
mov
jge
icebp
ret
xor
stos
lahf
or
mov
push
daa
mov
rcll
pushf
sar
push
inc
sub
push
das
aad
loopne
insb
jne
es
sbb
mov
jo
ficomps
fcomip
mov
dec
lret
and
int3
insl
xchg
xlat
std
fmull
dec
dec
mov
popf
fstps
clc
xor
test
cmp
mov
mov
adcb
dec
inc
popf
inc
cmc
sub
push
adc
add
dec
inc
leave
cld
out
and
inc
stos
cmp
addr16
xchg
mov
jmpw
sar
dec
pushf
insl
push
add
orb
or
adc
jno
out
test
jne
lods
aas
mov
dec
adc
mov
inc
pusha
mov
stos
hlt
dec
mov
xor
push
ret
dec
adc
shlb
jae
in
das
add
push
sbb
stos
hlt
sahf
mov
rcrl
or
lret
and
hlt
clc
inc
sub
sbb
push
lods
or
pop
inc
jno
dec
push
add
or
out
add
push
push
jnp
xor
pop
mov
push
mov
hlt
inc
adc
push
inc
inc
xchg
pop
cli
sha1msg1
inc
jbe
inc
add
outsb
addr16
jo
mov
push
jmp
pusha
add
jno
sbb
adc
pop
sub
pop
fucomip
out
in
inc
dec
stos
fistpll
lds
mov
push
fildl
cmpl
lds
mov
pop
xor
pop
and
in
je
dec
sbb
or
jae
les
out
jnp
push
mov
shll
pop
int
xlat
push
test
add
jne
aas
lcall
mov
je
pop
and
ja
or
jno
into
test
add
push
ja
out
ficoml
and
mov
sbb
out
call
icebp
mov
sub
jns
insb
shrb
cld
xor
or
popa
mov
fisttps
dec
push
add
fmuls
outsl
mulb
into
sbb
shlb
movsb
bound
push
jo
nop
xor
cld
dec
cwtl
dec
inc
ds
jle
into
mov
mov
mov
xor
mov
cs
mov
shlb
loop
xchg
aam
sub
inc
cli
jg
sbb
mov
subl
mov
lcall
push
pop
jge
sub
fwait
xor
add
mov
aam
fs
out
cmpl
push
sub
popf
stc
repz
push
xor
test
bound
imul
or
jecxz
ss
and
inc
mov
push
push
lock
or
test
scas
adc
xchg
dec
call
sub
pop
add
cmpsl
iret
xorl
pop
jne
jne
mov
stos
iret
add
shlb
jg
jae
outsl
xchg
in
aam
idivl
scas
pusha
dec
mov
mov
outsb
mov
idiv
je
cwtl
lea
xor
imul
adc
je
addr16
imul
mov
cmpsl
mov
into
popf
dec
bound
dec
lods
aam
les
popf
imul
sbb
cld
les
sub
adc
push
xor
lret
pop
inc
mov
fcmovnbe
das
push
push
in
test
js
cmpb
adc
pop
outsl
ss
ljmp
pop
jne
inc
xorb
sub
push
jns
cwtl
and
shl
ret
jae
jo
sahf
call
adc
jp
push
pop
push
lret
lcall
push
mov
or
add
insl
jg
sbb
pop
cmp
in
subl
call
lret
lret
ds
jo
lock
or
cli
stc
test
sub
jne
push
xor
xchg
cld
jle
ret
xchg
pushf
in
cmc
stc
pop
in
and
mov
pop
push
push
xchg
mov
dec
xor
sbb
or
aas
mov
push
cmpb
loope
inc
or
push
adc
shld
add
nop
add
inc
test
loopne
sub
in
push
repnz
iret
scas
aam
imul
aad
pop
loope
xorb
test
dec
lret
ljmp
popa
je
aas
xor
popa
mov
arpl
xor
push
push
push
shlb
mov
or
xchg
fdivr
pop
in
test
mov
call
ret
movsb
pushf
jb
mov
jge
mov
sub
mov
pop
push
mov
daa
in
push
xlat
jae
mov
mov
pop
movsl
push
sbb
movsl
jns
jb
cmp
and
idivb
mov
jbe
xor
mov
and
or
xor
lods
dec
jbe
mov
pop
fiaddl
and
xor
mov
nop
mov
loopne
sar
or
arpl
sbb
mov
in
cmp
int
push
scas
outsb
daa
cmc
sub
out
in
adc
jae
and
mov
and
dec
and
xor
ret
out
sub
jmp
xorl
inc
push
repnz
add
hlt
stos
adc
lret
cmp
push
jo
cmp
xor
sub
xchg
mov
mov
pop
mov
cltd
icebp
das
sbb
or
cs
daa
divb
dec
mov
out
add
daa
test
mov
mov
pop
cs
jnp
mov
lcall
push
or
or
xchg
jg
pop
insb
cmp
dec
pop
xchg
addl
movsb
push
fucom
fldcw
pop
adc
call
hlt
adc
lods
fsubs
pusha
mov
sbb
cmp
or
mov
inc
fstps
cmp
in
lcall
sbb
xchg
jns
icebp
stos
rcrl
cmpsl
mov
mov
mov
dec
push
cmp
in
mov
leave
xor
jbe
xor
je
fstpl
inc
ror
mov
into
jb
lds
cld
adc
into
mov
sub
shl
ret
dec
aas
pop
sbb
sub
push
int3
xor
in
xor
sub
xchg
cmc
dec
jne
popa
cmpb
cmc
leave
jle
enter
sbb
mov
adcl
je
add
call
inc
or
fadd
loop
in
push
mov
inc
jbe
mov
sahf
cmp
xor
xchg
pop
outsl
push
and
inc
jb
fs
add
out
imul
mov
movsb
out
jbe
test
in
test
dec
enter
fildll
mov
mov
mov
mov
mov
repnz
loop
cld
lea
js
es
pop
testl
xor
push
pop
push
jne
pop
inc
insl
lcall
sti
xlat
add
scas
test
dec
dec
cs
fisubrl
sbb
pop
call
fcomps
mov
push
sbb
push
push
mov
stc
insl
adc
std
or
mov
shrl
mov
mov
push
push
fcmovnbe
push
int
bound
xchg
dec
adc
out
or
xchg
loop
jo
cmc
sbb
sbb
dec
ss
adc
dec
shlb
mov
mov
jl
sub
fcmovb
rcrb
pop
jae
mov
dec
adc
add
addr16
scas
xchg
hlt
fcompl
lods
mov
fwait
in
dec
pop
pop
mov
push
cmpb
inc
sahf
cmpsl
ds
xor
movsb
sub
sahf
lahf
xchg
int3
or
pusha
mov
hlt
aas
fstl
daa
adcl
or
aas
imul
adc
mov
push
and
jno
dec
inc
push
mov
sti
push
sarb
ret
es
lds
xchg
orl
jo
dec
mov
enter
adc
ss
or
scas
sahf
dec
lret
les
push
jecxz
cltd
push
pop
in
sbb
mov
push
mov
out
push
push
outsb
pop
lahf
lock
pop
or
fimull
mov
push
and
inc
in
aam
sub
sbbl
push
sti
lret
shrl
packuswb
mov
cltd
jne
movsb
sbb
int
push
inc
and
push
mov
add
push
rclb
adcl
or
addb
or
sub
dec
adc
fnstenv
inc
test
sbb
int
negl
imul
iret
inc
mov
lods
fistpl
mov
lds
data16
or
xor
arpl
jle
outsb
addb
jae
sub
popa
fistl
add
jbe
jne
ljmp
sub
jecxz
add
je
jmp
data16
or
test
dec
push
mov
push
insl
sbb
or
xor
inc
mov
add
sub
push
je
cld
rorb
sti
inc
mov
std
add
andl
sub
inc
les
dec
jg
jo
loope
jae
adc
sbb
pop
mov
imul
mull
cli
jo
mov
mov
fcompl
jp
push
xchg
mov
stc
jae
out
or
and
sbb
aam
lahf
cli
xchg
cmp
cmp
mov
jb
mov
jp
arpl
je
sarb
xchg
sbb
mov
pop
mov
outsl
loopne
fistps
mov
insl
adc
adc
or
shrb
xchg
lods
jle
adc
pop
inc
cmp
imul
xor
movsb
jbe
outsl
jo
mov
movsl
int
pop
inc
dec
rcrl
dec
and
loop
sbb
inc
adc
bound
shrl
popa
out
pop
insb
mov
mov
and
es
add
movsb
and
das
and
jg
add
sti
test
push
cmc
jo
add
loop
push
rolb
mov
cmp
push
subl
jne
mov
insl
stc
outsl
sti
sahf
repnz
dec
pop
cmp
lcall
mov
pop
cmp
fdivs
sarl
lods
cmpsl
dec
dec
aaa
cmp
test
mov
sarl
mov
sub
cmp
add
aaa
push
loop
sbb
jbe
adc
or
fincstp
pop
cmpsb
lret
nop
int
test
clc
cmpsb
sti
ss
leave
sti
movsb
aad
loope
ret
dec
enter
leave
movsb
roll
inc
les
and
shr
repnz
inc
cmp
pop
cwtl
movsb
mov
clc
inc
push
xchg
into
mov
movsb
idivl
cmp
lcall
jmp
jl
rorl
stc
jns
cmp
add
inc
or
xchg
insl
add
stos
cmp
dec
jl
insb
in
jmp
mov
rclb
sahf
push
add
and
enter
and
push
stos
pop
push
inc
movb
loop
jp
push
in
mov
cmpb
xchg
adc
lods
leave
pop
sbb
jae
fldt
movsl
sti
std
ret
push
fldcw
cmp
sub
push
out
jne
jbe
int
iret
clc
orl
imul
xchg
or
in
popa
jb
xchg
adc
or
xchg
arpl
push
pop
inc
push
dec
xchg
dec
jg
test
sbb
insl
inc
xor
xlat
push
xchg
js
shlb
xchg
xlat
jmp
cmpsb
clc
outsb
mov
ret
cmp
push
orb
adc
xor
popa
mov
xchg
add
jge
test
push
mov
and
pop
xchg
push
out
cmp
mov
jns
adc
add
inc
in
ja
mov
xchg
cmc
or
xor
jmp
push
jmp
repnz
sbb
out
popf
in
mov
repnz
cmpsl
push
fidivrl
push
loope
in
imul
push
add
hlt
add
mov
sbb
ss
outsl
cmp
adc
jbe
push
lahf
hlt
add
insl
fs
sub
cmp
xchg
cld
xchg
mov
jnp
inc
sbb
add
fdivp
lret
mov
xchg
push
in
xor
fldcw
mov
push
lock
or
jae
into
cld
dec
jb
outsb
mov
std
xchg
addl
and
adc
xchg
pop
jl
push
out
popa
rcrb
mov
in
jmp
add
addb
xchg
fs
xchg
loopne
pop
imul
and
fdivr
enter
fldcw
or
es
push
je
mov
xchg
add
cwtl
add
push
fldpi
test
cmc
shl
enter
xor
jp
fiaddl
js
ds
add
sbb
fidivrs
unpckhps
pop
adc
or
cwtl
popa
in
xor
dec
inc
loope
fstpt
subb
add
test
ja
lds
cmp
jae
adcb
and
out
aas
fsubr
xchg
mov
add
mov
cmpsb
sbb
fistpl
inc
rolb
inc
fsts
es
dec
scas
add
je
cltd
bound
jge
lahf
cmp
les
mov
cmp
adc
xchg
in
adc
mov
out
out
out
lock
push
fcompl
imul
mov
or
int3
mov
push
decl
pop
mov
xchg
lods
add
andl
js
je
ja
adc
fdivrl
clc
mov
fmull
shr
xchg
adc
mov
mov
push
les
mov
loope
insb
popf
push
xchg
mov
add
and
loop
mov
roll
adc
push
sbb
pop
test
inc
mov
ret
mov
mov
lret
rcrl
mov
adc
push
stos
dec
insl
push
js
in
aaa
cs
ds
shll
adc
movsl
xchg
inc
pop
loope
cld
xor
std
loopne
or
jl
pop
sbb
lea
mov
pop
pop
in
leave
or
xor
mov
pop
push
fdivl
divl
dec
popf
cmp
lea
roll
outsl
or
cmc
lcall
test
loop
mov
shlb
xchg
lea
andl
outsb
mov
xor
movsb
ss
fildll
push
cmp
jle
sub
push
sti
push
ja
mov
cwtl
rorl
cmp
test
adc
popf
arpl
jbe
or
xor
sbb
cwtl
push
dec
jne
mov
pop
mov
es
je
mov
add
sbb
push
adc
fstpl
xchg
mov
jnp
add
ret
dec
mov
loope
and
lahf
icebp
inc
insl
cmp
aad
negb
or
pop
add
rcrb
test
ret
movsb
sahf
repnz
jnp
shll
ds
loope
mov
cltd
pop
inc
jne
shll
movzbl
xchg
mov
jns
nop
mov
cmp
lcall
xchg
push
cmpsb
fcom
or
or
mov
xchg
out
lret
mov
jp
push
mov
xchg
mov
xchg
add
mov
sub
or
sub
call
clc
adc
lret
inc
inc
movsl
out
push
push
adc
stos
fldl
in
mov
xlat
push
jbe
fcomps
into
ret
xchg
xchg
xchg
outsb
data16
mov
movsb
add
pop
push
jl
popa
jns
cs
sbb
jno
movsl
xchg
adc
adc
repz
push
popa
sahf
call
icebp
xor
test
das
add
mov
inc
push
push
ljmp
push
pop
push
mov
mov
dec
cmp
push
xchg
cltd
add
mov
leave
loope
mov
ficoms
pop
inc
cmp
aas
lret
add
ja
dec
ds
sub
imul
jge
mov
inc
jg
push
lods
inc
jle
jg
xchg
out
xchg
sub
cli
mov
popa
push
jb
xrelease
testb
adc
and
insb
aam
pop
pop
and
xor
or
mov
hlt
and
fnstenv
enter
ds
push
out
cmc
dec
movsb
inc
jge
and
sbb
xor
or
adcl
xchg
ss
xor
inc
outsb
cwtl
out
mov
adc
inc
add
fs
xchg
out
daa
adc
mov
or
insb
mov
jg
mov
out
xor
cmc
push
lock
cli
cmpsl
cmpl
add
sbb
inc
adc
pushf
fcomps
sbbb
xor
jp
jmp
sub
push
leave
pusha
cmc
pop
rcrl
and
daa
fmull
mov
negb
sarb
sub
inc
aaa
push
pushf
lds
sar
mov
cmp
aam
mov
aad
mov
sbb
add
popa
andl
lds
mov
inc
cltd
stos
leave
shlb
shrb
fdivr
ds
fsts
aad
mov
adc
test
inc
movl
insb
pop
cld
adc
imul
rcrb
rol
cmp
add
jne
mov
cs
jg
sbb
jecxz
and
jle
std
xchg
sarl
sti
lods
scas
push
cmc
daa
loop
outsl
cmp
mov
push
movsb
cmp
and
movsl
jno
push
js
loop
push
or
pop
pop
mov
les
push
sub
push
mov
mov
std
into
mov
sbb
or
cmp
push
rcrl
add
sbb
sub
pop
imul
aaa
scas
dec
mov
pop
out
inc
or
jle
pop
das
std
mov
inc
test
aas
adc
rcl
xor
subb
cld
dec
inc
test
or
leave
adc
jl
mov
xchg
icebp
ret
lds
repnz
cmp
out
sub
stc
dec
jg
outsb
imul
shlb
inc
jge
dec
fimuls
das
mov
insl
pop
or
call
cmpsb
fs
sbb
sarb
or
cwtl
dec
popa
cltd
test
add
jno
mov
sub
cmp
xor
push
insb
repz
testl
pop
movb
lds
mov
pusha
mov
mov
hlt
pop
pop
mov
xor
lcall
test
popa
hlt
movsl
jmp
pop
pop
mov
ret
xor
xor
xor
je
rcll
mov
mov
repz
out
inc
clc
int
dec
inc
lods
int
loope
adc
clc
mov
dec
or
mov
es
mov
sarb
ds
sbb
sbb
push
inc
dec
adcb
lahf
inc
repnz
jne
dec
rorl
jbe
aaa
dec
xor
and
mov
lds
mov
inc
stc
mov
xchg
inc
lret
imul
hlt
adc
push
mov
push
push
enter
mov
stos
mov
adc
adc
mov
stc
faddl
cmpsl
test
lods
jbe
sub
jecxz
in
adc
xor
sub
xchg
add
pop
lock
add
sbb
and
sbb
pop
or
pushf
lods
iret
call
sub
mov
and
loopne
sub
sub
cmovg
subb
outsb
ljmp
into
add
les
and
cltd
lock
xor
mov
mov
push
or
sub
xchg
mov
das
fnstsw
in
and
pop
icebp
mov
sub
mov
pop
sbb
fisttpl
sub
subl
adc
mov
and
rcrb
mov
pusha
inc
or
inc
jmp
cmc
mov
stc
xchg
cld
adc
jae
mov
mov
mov
add
sbb
aad
mov
push
add
lods
xor
pop
jbe
and
mov
mov
add
insl
rcrb
in
or
dec
xor
mov
jbe
fwait
popa
mov
xor
cs
adc
out
imul
adc
fstps
pop
and
outsb
pop
mov
xchg
fwait
mov
popa
fstl
xchg
mov
cmc
pusha
dec
out
push
imul
push
mov
jb
scas
xchg
sbb
aam
mov
and
mov
or
dec
lret
inc
jo
jp
testb
xchg
cmp
dec
out
push
lea
sub
dec
imul
pop
sub
and
notl
inc
enter
pop
xor
xor
lahf
frstor
mov
ljmp
cli
cmc
jns
sub
cmp
cli
stos
inc
call
cs
mov
adcb
and
xor
dec
xor
dec
test
stc
repnz
cli
mov
lods
jecxz
and
negb
clc
sbb
mov
cwtl
fcomps
cmpsb
and
jae
std
xlat
pop
jge
adc
rcr
mov
and
ja
inc
mov
dec
cmc
dec
xchg
xchg
jb
pop
ret
cld
pusha
hlt
mov
gs
sub
jne
lods
jo
data16
push
cmp
cmp
rol
mov
mov
inc
pop
adc
push
cli
out
mov
pop
cmp
mov
sub
add
adc
xchg
iret
adc
lahf
jb
fmull
popf
dec
jecxz
pushf
cltd
hlt
xor
aas
pusha
sbb
add
sahf
stc
xchg
push
je
xchg
sub
inc
call
iret
add
sbb
shlb
pop
jae
pop
lret
mov
inc
cmp
pop
mov
addr16
jnp
or
arpl
mov
push
dec
imul
in
fidivs
adc
jns
cwtl
dec
add
mov
mov
rclb
stos
pop
outsb
stc
sahf
or
out
das
sahf
sbb
adc
js
mull
push
fisubl
pop
cmp
inc
stos
neg
mov
neg
ljmp
notb
mov
mov
jo
jg
sbb
and
push
add
test
shlb
scas
mov
adc
jbe
ret
pusha
mov
rcrb
mov
mov
adc
dec
inc
cmp
xor
and
xor
inc
mov
adc
mov
pop
cmp
call
dec
shlb
xchg
sbb
or
cmc
mov
mov
mov
pop
aam
leave
push
pop
xchg
arpl
ja
jae
push
inc
rclb
jg
lea
clc
ds
xor
scas
jb
jno
dec
jnp
sub
lea
daa
fdivl
in
int
daa
jns
mov
pop
add
je
xchg
add
push
inc
fistl
push
inc
and
enter
mov
clc
mov
cmpl
in
pop
push
push
adc
in
sbb
and
or
push
shl
in
test
out
clc
push
int
mov
pop
adc
jb
test
cmp
fcomps
mov
mov
dec
icebp
arpl
sub
in
xorl
rcrb
mov
decb
in
pop
mov
stos
mov
or
xchg
adc
sahf
xchg
inc
xor
enter
in
ret
ja
sbb
push
jg
lahf
shl
lds
mov
insb
sti
lret
leave
push
xchg
lret
fdivrl
data16
sub
jecxz
orb
mov
add
punpckhwd
aam
and
adc
jle
mov
and
mov
aad
fisttpll
cs
repz
push
out
inc
scas
cs
add
call
or
iret
jns
or
daa
push
leave
subb
dec
mov
inc
jb
push
xlat
movsb
fwait
call
push
imul
dec
xrelease
xchg
dec
data16
pop
jbe
shrl
imul
hlt
pusha
mov
push
inc
mov
dec
push
bound
out
inc
loop
adc
mov
mov
add
sahf
add
adc
loope
push
iret
add
aaa
int
addb
dec
in
sbb
into
ss
sbb
dec
fdivr
icebp
or
shlw
push
xor
cltd
mov
dec
or
arpl
lock
sbb
int3
add
mov
jbe
popa
adc
roll
or
xchg
jle
mov
movl
adc
shlb
pop
push
cmpxchg
jmp
adc
cmpsb
fiaddl
xor
xor
pushf
jp
aas
inc
jb
ret
fmul
gs
out
cltd
imul
sub
cmp
out
sbb
cmpsb
mov
cmp
sbb
jbe
call
int
and
dec
fidivs
xchg
sbb
mov
mov
ss
js
cmp
sub
mov
jmp
push
jecxz
mov
insb
repz
jns
adc
popf
jecxz
dec
mov
hlt
inc
push
cmp
aam
mov
stc
cld
imul
xor
leave
pop
data16
test
cmp
mov
sbb
add
xchg
mov
pushl
mov
loopne
xchg
lea
lcall
arpl
rcr
sbb
jo
pop
xchg
les
dec
xchg
rcl
test
das
sbb
and
dec
or
bndstx
pop
jb
sub
pushl
pop
movsl
pop
repz
pop
jae
pusha
adc
xchg
adc
cmp
mov
jne
scas
mov
inc
push
cmp
push
cwtl
fnstcw
sarl
shll
cli
inc
push
stos
and
filds
out
inc
jbe
outsb
pop
in
call
pop
sub
jne
push
fisubs
lcall
ja
leave
dec
icebp
hlt
incl
std
xchg
jbe
arpl
mov
pop
and
mov
cmpsl
mov
sti
xchg
pop
fcmovnbe
xor
mov
aas
mov
movsb
enter
adc
adc
arpl
repz
loopne
icebp
adc
stos
ja
dec
stos
xlat
xchg
aas
leave
adc
jae
imul
into
xlat
dec
arpl
in
jns
inc
inc
loopne
shlb
aam
push
pop
dec
inc
xor
pop
bndldx
outsb
jae
sub
ret
out
mov
fadd
xchg
rol
call
add
testl
push
jbe
sti
sbb
jl
sub
mov
mov
sub
pmuludq
jle
dec
rcl
lods
mov
mov
add
call
test
jns
jnp
jbe
dec
mov
negl
mov
testl
mov
fs
inc
pop
data16
push
sub
or
ds
jns
sbb
mov
jl
mov
adc
jle
xor
mov
movsl
xchg
or
aaa
xor
inc
arpl
adc
pusha
cmp
pusha
pop
mov
es
inc
lret
jne
add
inc
fidivrs
and
in
gs
dec
xor
loopne
stos
sub
data16
test
mov
jo
add
add
testb
in
ja
mov
scas
sahf
and
fs
adc
xchg
aam
js
inc
out
cmp
mov
xlat
dec
jo
mov
fisubrs
jno
fildl
mov
dec
and
dec
push
test
push
loope
jo
mov
cmpsl
jae
inc
jg
add
jmp
cmc
inc
mov
fldenv
dec
fwait
stc
sub
out
out
stos
and
fwait
jae
inc
cmc
mov
push
push
add
adc
addr16
push
xorb
loope
jg
cli
and
rcrb
ret
mov
jae
shlb
into
icebp
mov
ret
pop
mov
fucom
jnp
enter
cmc
jmp
cmp
loope
lods
dec
fsubs
ds
in
imul
pop
dec
add
out
xchg
inc
xchg
mov
ret
pushf
and
dec
ret
or
pop
mov
and
jmp
int3
lea
cmp
mov
mov
dec
push
leave
pop
xor
dec
adc
fcoms
mov
sbb
or
xchg
int3
insl
push
inc
inc
in
pop
outsl
cmp
push
mov
cs
mov
scas
notl
mov
sbb
fs
lock
add
lds
mov
push
and
mov
and
test
mov
mov
out
and
out
jne
int
mov
stos
fisubrl
fisttps
xor
imul
and
pusha
sbb
enter
enter
fisttps
call
mov
xor
lods
dec
push
repz
push
pop
mov
jecxz
out
push
pusha
out
stc
mov
ljmp
push
cmp
scas
mov
pushf
pop
inc
in
roll
xor
je
shrb
je
sti
add
pop
xlat
xchg
cmp
js
cld
cmc
push
out
jns
and
pop
mov
mov
adc
sub
aam
adc
pop
fisttpll
pop
iret
adc
jp
inc
dec
xchg
fstl
cmpsl
mov
imul
xor
aaa
xchg
cmpsb
iret
pusha
pop
out
jp
daa
cmp
push
pusha
enter
adc
inc
gs
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
aad
pop
pusha
ret
jmp
bound
fstpl
cltd
repz
jmp
mov
stos
sbb
je
std
jge
push
sub
repnz
xchg
daa
in
test
mov
je
lea
dec
scas
ret
push
mov
stos
cmp
cmp
dec
push
lret
loop
push
inc
rcrb
mov
sub
cs
fsts
sbb
imul
xchg
cmp
add
xchg
jl
lods
push
rcr
or
sub
push
loopne
fdiv
rclb
sub
scas
dec
jl
cld
push
hlt
xor
addr16
sbbb
in
data16
sbb
addb
pop
in
jne
add
movsb
xor
cmovns
shl
jmp
shlb
cmp
arpl
pushf
movsb
icebp
mov
aam
nop
xchg
mov
sbb
push
lds
mov
nop
cmp
out
mov
mov
xchg
sbb
lods
pop
dec
sub
or
inc
imul
test
in
inc
jmp
outsb
fstps
lret
sub
dec
test
jae
push
mov
mov
fdivs
mov
cpuid
push
cmp
test
mov
pusha
adc
mov
out
leave
popf
mov
push
adc
jmp
ljmp
and
aaa
jnp
sub
cld
and
mov
ss
movsl
mov
push
out
addr16
pop
xor
lret
jbe
cmpsl
xchg
mov
mov
push
inc
push
fldl
fisubl
cmp
aas
popf
lcall
push
pop
or
sub
sub
add
jae
aas
push
pop
xchg
inc
dec
cmpsb
lods
dec
cli
push
bound
xor
cltd
mov
xorb
xchg
stc
stc
ja
lods
jp
mov
push
and
loope
adc
ret
int3
push
mov
stc
pushf
push
nop
sub
xlat
into
sbb
sub
and
arpl
mov
adcb
or
outsb
mov
movsb
jne
or
xchg
push
aas
dec
sub
add
movsl
add
mov
sahf
adc
sbbb
std
dec
subl
mov
out
sbb
xor
cmp
jo
jmp
push
lret
xchg
gs
cs
out
sbb
je
push
adc
cmp
jp
push
in
arpl
fs
in
fwait
test
fnstenv
imul
cs
sub
dec
jne
out
lods
xchg
bound
xlat
or
pop
aam
mov
mov
cld
push
int3
pop
push
clc
enter
fstpl
jns
inc
clc
out
push
xchg
ret
pop
pop
in
dec
mov
push
out
mov
xchg
sbbb
xchg
xchg
test
shl
in
adc
js
lahf
jno
xor
clc
cmp
pop
rcr
and
loopne
pop
or
fsts
leave
mov
xchg
push
jg
pop
outsl
pop
mov
inc
out
cmp
pop
outsl
cs
cmc
pushf
cmp
sub
xchg
aaa
rcr
je
cmpsl
sub
xor
sbb
test
jecxz
inc
xor
les
mov
lret
dec
outsl
repz
xor
bts
lods
sbb
std
outsl
lock
cmp
xchg
sub
cmp
push
dec
fidivl
cmpl
scas
enter
mov
adc
call
je
push
scas
addb
inc
cmpsb
call
daa
mov
push
mov
enter
dec
push
inc
push
push
les
mov
mov
int3
lret
scas
and
scas
fsts
fs
insb
stos
add
in
popl
std
jle
mov
dec
mov
adc
popf
data16
push
and
sbb
dec
or
inc
out
or
out
and
sub
pop
xchg
out
jmp
mov
push
xchg
lods
les
lret
and
jmp
mov
lcall
xor
inc
push
movsb
lea
cmc
xchg
pop
and
jbe
xor
test
out
mov
push
ds
dec
ja
pop
in
jl
jecxz
xchg
pushf
in
push
ja
mov
xchg
inc
mov
jo
xchg
sub
pop
ds
cmp
pop
dec
push
adc
mov
mov
lret
fbld
mov
addr16
xorl
call
repnz
lret
add
int3
push
jae
mov
xchg
leave
repz
repz
push
std
aam
jmp
adc
pusha
das
inc
add
testl
popa
or
adc
push
xchg
inc
cmp
pop
sbb
mov
xchg
iret
sbbb
xchg
mov
or
out
sbb
jp
jno
pop
and
xchg
add
mov
pop
ret
cmp
cld
mov
mov
push
adc
or
inc
push
push
jne
xor
imul
mov
add
adc
bound
nop
push
aam
jecxz
loope
fsubp
popa
in
or
cmp
cmp
xchg
fnstenv
sub
pop
add
cld
mov
pop
push
jbe
into
sbb
rcr
repnz
and
xchg
je
fstpl
or
inc
ss
push
lcall
movsb
sub
jbe
rclb
mov
out
data16
inc
cmp
xchg
xchg
add
mov
sub
aaa
frstor
push
imul
icebp
insl
lcall
mov
ret
add
out
pop
pop
jmp
mov
js
in
or
in
int
xchg
in
dec
push
sub
xchg
add
push
shll
inc
lock
sbb
xchg
lahf
xlat
cld
push
dec
imul
adc
sbb
push
ja
adc
pop
cmp
mov
mov
sub
cmp
jbe
ret
subb
lret
xchg
int
clc
sub
adc
inc
jle
repnz
lcall
imull
xor
aaa
cs
and
add
in
mov
xor
jmp
fldenv
fsubs
fstpt
jmp
sub
fdivrl
cltd
test
divl
xchg
stos
daa
cltd
adc
xor
cmpsb
pandn
arpl
insb
lcall
jmp
push
fsubrl
mov
enter
fs
mov
add
insl
cmpsb
push
inc
pop
or
clc
mov
jbe
push
ss
int
ja
and
ds
out
push
call
mov
jmp
addr16
iret
sbb
mov
xchg
loop
sub
dec
leave
push
push
jp
shlb
pop
iret
out
sub
mov
into
dec
xor
adc
mov
jns
pop
sbb
mov
dec
dec
mov
insl
push
lcall
rclb
shrb
das
or
sbb
push
test
jle
leave
sbb
pop
cmp
lcall
jl
loope
sarl
cmpl
faddp
mov
mov
imul
aaa
divl
jle
ljmp
sub
push
cmp
jp
shll
div
cmp
lock
sbb
push
jbe
fisttps
aam
dec
clc
lahf
pop
in
aam
mov
xor
adc
cmp
in
xor
lahf
or
mulb
mov
cmpsb
add
xor
stos
arpl
or
xlat
inc
shrl
test
outsl
xor
add
mov
push
xchg
mov
fsubl
push
push
out
fnstenv
dec
shl
imul
test
pop
cli
jecxz
out
adc
les
or
push
out
dec
ja
mov
pop
mov
push
xor
cmp
rorb
enter
cmp
jb
lret
add
sbb
and
cmc
shlb
push
movsl
lret
add
bound
retw
lds
lret
lods
dec
and
stos
jns
xchg
lods
dec
jo
inc
roll
push
popa
test
mov
dec
xlat
mov
cmpsb
xor
xchg
shl
dec
rcll
mov
je
fnstsw
popf
pop
stc
imul
mov
mov
mov
cltd
push
aaa
sub
mov
inc
cmp
gs
cmp
lea
lcall
out
mov
loopne
sub
je
insl
xchg
sub
shll
in
mov
into
sti
out
cs
jne
mov
repz
in
and
repnz
neg
call
shl
xchg
hlt
mov
ret
insl
aas
push
and
lahf
enter
fimuls
movb
push
or
fs
scas
loopne
sbb
mov
jge
cltd
in
jae
cs
cmp
mov
jbe
outsl
sbb
inc
push
xor
insl
ret
mov
stos
cmp
mov
clc
xlat
fsts
jge
int3
and
mov
jae
jne
enter
ret
xchg
and
pop
jns
cmpb
jno
xor
int3
stos
popa
popf
loope
cmc
xchg
xchg
push
int3
inc
push
pop
dec
outsb
jl
and
ljmp
adc
std
and
xor
lcall
pop
aad
inc
push
and
in
sbb
cmp
test
pop
pushf
cwtl
xchg
or
mov
imul
in
pop
push
rclb
xor
sar
outsl
fdivl
cmpsl
mov
mov
dec
popf
mov
and
ds
add
jbe
and
aad
insb
nop
mov
out
mov
inc
aad
dec
mov
sbb
les
pop
ss
jecxz
rcrl
mov
movsl
insl
rolb
jmp
xchg
pop
popa
xlat
insb
sub
xor
js
pop
aad
inc
stos
bound
sub
pop
dec
xor
lods
jnp
or
push
push
lock
or
sarl
cltd
enter
movsb
sti
jge
pushf
lret
adc
in
push
mov
mov
and
int
aad
inc
jmp
ljmp
rcll
inc
out
and
lods
dec
jmp
std
cmc
mov
jge
pop
shrb
xor
daa
mov
xchg
jae
xor
mov
pop
dec
ret
outsl
xor
push
popf
push
in
cmpl
mov
outsb
out
fisttpl
lea
jo
pop
inc
aaa
loop
xor
faddl
sbb
mov
dec
shll
stos
inc
cmpsb
sub
pop
fmuls
pop
iret
adc
mov
cmpb
jbe
or
into
into
clc
mov
ret
jmp
bound
rorl
mov
adc
mov
lods
and
push
lds
dec
and
lcall
mov
leave
test
xchg
pop
pop
shlb
rcrl
pcmpeqd
out
int
xchg
xchg
mov
push
aad
and
sub
add
jle
adc
cmp
push
test
adc
push
mov
lret
outsl
and
inc
sbb
push
inc
cwtl
aas
movsb
shl
cwtl
std
push
mull
xorb
pushf
push
in
mov
mov
mov
sub
jbe
imul
sbb
repnz
scas
push
push
push
arpl
addb
jle
pop
xchg
jo
cs
pop
cmc
jp
ret
push
popa
adc
pop
xor
dec
mov
mov
mov
adc
pop
andb
lret
ljmp
jge
mov
aad
xor
adc
mov
test
jge
pop
addb
and
jno
outsl
shrb
arpl
das
cmp
or
xor
in
and
mov
sub
lea
sbb
xchg
outsl
dec
fidivl
out
or
es
push
repz
and
fs
cmpsl
into
mov
shl
dec
das
and
sbb
pop
repz
sbb
and
lret
adc
rcr
push
jb
loope
push
mov
sbb
push
pop
sahf
or
out
bound
fisttpl
pop
loopne
int3
jmp
xchg
enter
dec
ffree
pop
xchg
mov
add
sub
in
cmp
repnz
push
bound
push
pop
rcll
xlat
and
fiadds
jb
ss
into
xchg
nop
adc
std
andb
dec
stos
andb
mov
xchg
ljmp
or
ret
pop
call
sbb
xorb
std
pop
std
movsb
lcall
ljmp
fstp
and
sbb
shlb
ja
aaa
ds
xchg
mov
fucomi
out
adc
stos
fwait
xor
jg
outsl
inc
pop
lret
push
icebp
xchg
cmp
pop
xchg
cmp
xorl
bound
sbb
jae
push
inc
pop
mov
jmp
std
sahf
mov
or
bound
dec
not
xchg
test
pop
ss
pop
adc
pop
sahf
and
add
sahf
mov
mov
std
cs
mov
outsb
shlb
adc
loop
loope
mov
sub
int3
jg
xchg
clc
imul
pop
push
test
inc
xor
jl
into
adc
dec
sbb
movsb
fucompp
repz
nop
adc
icebp
adc
iret
dec
shlb
test
and
loop
mov
lods
and
sub
rol
scas
xchg
add
leave
push
stos
cmpsb
mov
fdivrl
aam
enter
push
sbb
or
sub
lahf
clc
lret
sbb
ja
sbbb
out
popf
or
mov
sbb
push
dec
jne
dec
and
dec
xchg
xchg
sub
je
mov
lods
pusha
and
movsb
and
fucomip
xrstors
xor
adc
mov
mov
pop
fchs
xor
shl
pop
mov
mov
push
jge
in
xlat
mov
mov
loope
out
and
sbb
push
mov
push
push
enter
sub
in
add
jp
xchg
daa
push
push
aam
xchg
fisubrs
js
in
in
push
std
lret
and
jo
push
mov
enter
ljmp
or
dec
adc
mov
sbb
outsb
mov
push
in
jo
jp
es
gs
adc
xor
aad
movsl
pop
into
add
jg
stos
xchg
xor
mov
mov
scas
aaa
adc
push
loop
aas
cmc
rsm
pop
test
jns
pusha
xor
adc
out
jbe
mov
mov
insl
adc
rcrl
add
xchg
dec
insl
or
cmp
test
out
mov
sub
scas
imul
sahf
xchg
mov
sti
ret
xchg
cmpsl
lods
mov
fistpl
mull
and
out
imull
fnstenv
add
mov
sbb
push
arpl
mov
push
xor
mov
mov
cmp
push
xchg
mov
sub
outsb
xchg
jmp
xor
pop
out
pop
js
insb
xchg
cld
shl
push
pop
into
loop
mov
cmp
bound
or
pop
movsb
push
push
inc
add
cltd
pusha
adc
jne
dec
cmpsw
cs
sub
lock
push
andb
xlat
repnz
ficompl
pop
daa
aad
pop
mov
ret
push
mov
xchg
leave
jnp
jg
in
les
adc
jmp
or
cmp
mov
dec
iret
mov
xor
and
out
adc
cmp
jg
xor
je
ja
fsubl
outsl
mov
xor
xchg
mov
in
jnp
mov
sbb
push
loope
out
mov
lods
ret
or
cmc
xorb
repz
mov
jb
pusha
ret
adc
cmp
ljmp
xor
jae
push
in
dec
or
cmp
test
icebp
pushf
aad
push
xchg
push
mov
ret
sahf
and
dec
sti
leave
nop
jl
sbb
cmp
iret
fisubl
movsb
outsb
idivb
aam
sub
mov
push
cmp
jp
pop
sbb
jno
fwait
sbbl
push
jo
out
in
xor
adc
repz
lcall
jne
lret
inc
mov
add
push
xor
pop
adc
pusha
lods
push
jnp
out
or
test
std
cmp
add
stc
mov
loop
js
stos
rcll
or
daa
mov
sahf
cs
mov
rolb
jl
es
jmp
mov
out
outsb
dec
lea
ljmp
fucom
pop
sti
lret
lret
movsl
outsb
vrsqrtps
sub
iret
adc
insb
mov
mov
mov
pop
pop
aas
fistpll
add
or
mov
lods
frstor
ds
sbbl
xchg
sti
push
leave
arpl
outsb
mov
scas
shll
scas
fdiv
xchg
pop
or
rcrb
test
xchg
mov
xor
les
push
bound
outsl
jno
out
and
mov
xor
enter
sub
mov
lret
das
inc
stc
jae
scas
pop
pop
shlb
jb
jge
fstpt
or
sub
fwait
dec
jo
add
jnp
jns
pusha
sub
inc
enter
ss
stos
lock
xor
fnsave
enter
sti
or
and
cmc
or
add
cmpb
inc
popa
shlb
outsb
or
xchg
xorl
add
fldcw
xor
bound
cs
dec
pop
jmp
ror
xchg
dec
inc
shlb
pop
loope
je
xor
cs
cmp
je
and
jp
imul
les
mov
and
jp
mov
rorb
scas
sbb
sub
cmp
scas
lret
cmp
xchg
cmp
cltd
aam
and
out
sbbl
dec
cmp
cwtl
mov
cmpsb
mov
daa
inc
adc
loopne
mov
out
cs
inc
lds
cmp
and
sahf
adc
rclb
inc
idivl
pop
rcrb
mov
les
repnz
js
mov
jb
divb
fstpl
xlat
mov
data16
dec
and
sub
cmpb
fwait
push
scas
jl
inc
and
xor
wrmsr
and
call
jl
pop
cmp
aam
shlb
add
pop
inc
imul
out
jbe
add
pop
enter
xor
xor
xchg
aam
out
cmc
shll
andl
pop
xor
pop
dec
jmp
lahf
inc
xchg
scas
cltd
push
sbb
lock
test
enter
gs
mov
ljmp
or
lret
test
push
std
and
mov
lahf
in
jns
mov
test
mov
lock
cmp
and
insl
xorb
add
orl
lds
testb
inc
sub
sub
fistl
fbld
fwait
inc
fistl
cmp
fimuls
repz
ljmp
mov
int3
cmp
stos
dec
push
rclb
mov
inc
test
incb
inc
dec
mov
in
mov
jmp
xchg
test
loope,pn
sbb
dec
addr16
lods
mov
sbb
sbb
mov
jl
addl
cmp
or
inc
arpl
xor
into
outsb
nop
inc
test
mov
xchg
inc
scas
mov
jb
imul
xchg
aam
movsb
rcll
clc
mov
mov
sbb
sahf
stos
xchg
inc
scas
xor
push
mov
jae
nop
mov
fwait
andb
imul
or
inc
lcall
mov
mov
movsb
push
xlat
fists
add
scas
lret
out
nop
push
loope
push
out
inc
add
inc
and
aaa
out
pop
out
xchg
xor
or
pop
mov
cmp
into
jg
test
movsb
outsl
add
adc
dec
lea
cltd
daa
adcb
fcoml
sub
lret
mov
xchg
push
fucomi
xor
in
lret
int
ss
pushf
in
or
je
cmc
adc
in
xor
pop
xchg
mov
add
movsl
outsb
mov
test
and
shlb
clc
mov
push
test
dec
and
out
aad
ror
movsb
jge
mov
push
pushf
push
int
repnz
loop
pop
push
sub
pop
sbb
ficompl
ret
sub
add
lods
mov
leave
loopne
cld
pop
subw
add
xor
add
jns
adc
dec
jbe
fistpl
inc
sbb
xor
sub
and
fistl
das
push
pop
add
in
dec
jne
jecxz
imul
fcomps
jl
cmp
jne
je
icebp
gs
in
add
or
fnstenv
scas
addr16
sbb
out
mov
or
int3
pop
aad
mov
push
fidivrl
in
je
out
cmp
mov
movsb
mov
sbb
push
stos
rcrl
mov
push
test
lea
pop
cmpsl
pusha
cwtl
cmpsb
dec
dec
pop
xchg
mov
mov
fcom
daa
sarl
jb
sub
data16
fcomp
mov
out
sub
mov
pusha
cmp
mov
fmull
or
adc
mov
out
add
shrb
pushf
ja
mov
in
mov
in
jl
dec
jne
inc
pop
jl,pt
lret
jp
pop
repnz
pop
xorl
mov
int3
and
roll
add
push
mov
mov
clc
aaa
aas
xchg
fnstcw
mov
fstps
mov
dec
lret
inc
idivl
sbb
or
cmpsl
in
filds
cmp
pop
test
bound
and
xor
lods
imul
mov
pop
jnp
movsb
icebp
add
int
daa
movsb
outsl
ss
inc
lods
orl
inc
imul
in
push
adc
cwtl
hlt
and
fst
mov
sarb
mov
mov
pushf
adc
inc
mov
sbb
sbb
xor
mov
add
mov
sbb
cmp
mov
aaa
pop
popf
pop
add
sub
leave
jle
cli
les
scas
ljmp
sbb
xor
mov
sbb
les
mov
mov
pop
mov
jle
je
scas
sbb
es
les
jl
in
sahf
dec
mov
ret
jmp
mov
fnstenv
je
inc
sub
mov
sbb
push
ret
mov
jmp
std
js
mov
inc
insl
xchg
fdivs
outsb
pop
fwait
lea
notb
sahf
or
icebp
push
cmp
sbbl
push
and
xor
test
cmp
pop
push
xor
ficoms
lret
fdivs
pop
lret
outsl
movsl
or
mov
fcmovb
into
je
mov
xor
xor
mov
fsubl
add
push
clc
jne
test
sub
nop
mov
aaa
into
test
daa
test
lahf
mov
movsb
xchg
in
in
jge
push
xor
hlt
pop
xchg
int3
mov
mov
adc
dec
icebp
imul
sti
icebp
or
lea
dec
stc
pop
inc
cltd
mov
cwtl
les
dec
cwtl
xchg
mov
stos
int3
int3
cmp
pop
push
icebp
mov
int
popf
rcrl
rclb
jmp
es
shr
dec
sbb
popf
push
pop
lea
repnz
rclb
and
mov
sbb
lds
leave
inc
push
adc
mov
mov
mov
and
push
cli
movsl
mov
sub
mov
xchg
addl
xor
call
lods
xor
cmp
cmc
jmp
gs
or
pop
xchg
not
aaa
dec
pusha
fcomp
aaa
xor
push
push
sub
push
repz
xor
and
cmp
addl
out
fwait
test
in
and
cltd
lcall
mov
test
movsl
add
outsl
inc
mov
jle
push
sbb
out
xor
pushl
mov
or
aad
mov
movsb
pop
loop
inc
lret
call
sub
test
insl
mov
stos
mov
pop
or
fisttpl
ret
add
mov
fcmovb
popl
icebp
pop
nop
lds
fbld
push
scas
push
and
xchg
fs
mov
jp
xchg
push
vdivps
or
incl
adc
push
pop
sbb
fs
pop
iret
imul
jo
call
nop
dec
mov
or
xchg
dec
enter
push
ss
xchg
out
out
add
fs
movsl
dec
xchg
sbb
inc
pusha
insl
aad
in
nop
lea
cmpsb
jo
cwtl
jne
enter
mov
in
adc
or
std
push
cmc
movsl
out
cmpsb
mov
cmp
lahf
adc
adc
sti
inc
pop
mov
xchg
xchg
mov
lahf
enter
mov
dec
pop
adc
and
ficomps
fs
into
scas
jge
mov
xor
xor
stc
stos
pop
mov
inc
mov
lcall
stos
loope
cli
xor
pusha
iret
mov
mov
pop
and
sbb
adc
inc
dec
lahf
cmp
sahf
push
repnz
stos
jnp
movsb
pop
les
cmp
daa
test
cmp
xor
fwait
cmp
push
sub
leave
data16
into
pusha
pop
push
cs
jbe
xor
bnd
jns
or
shll
popf
and
mov
mov
push
inc
fs
push
test
cmc
lea
mov
aaa
add
xor
mov
push
ljmp
arpl
jl
cmpb
test
and
xchg
mov
call
push
sub
dec
xchg
stos
xchg
xor
dec
cmpsl
cli
xchg
sarb
sub
cs
push
mov
aam
dec
mov
mov
pushf
and
push
jns
shrl
cmp
lret
push
jo
and
stos
insb
dec
pop
or
mov
xor
and
mov
dec
sub
cmp
xchg
pop
out
pop
and
loop
es
into
push
ror
jp
push
sub
xchg
mov
decl
sub
sarl
bound
adc
in
stos
push
xorb
xor
js
mov
rcrb
sahf
push
cmpsb
shrb
and
adc
ss
addr16
mov
in
inc
xor
xchg
mov
popf
xchg
mov
and
dec
or
aam
fcmovnb
dec
inc
xchg
imull
push
out
or
fs
and
out
push
icebp
and
arpl
daa
leave
stos
and
push
popf
inc
outsb
mov
xor
ret
xor
iret
sbb
mov
adc
and
adc
out
imul
negl
sub
mov
jl
pusha
cwtl
jnp
adc
movsb
xchg
mov
dec
mov
ja
dec
fcmovne
xlat
pop
out
xchg
lahf
ss
mov
fwait
adc
into
xor
cld
popa
xchg
loope
or
pop
xchg
jb
pop
xchg
pop
cwtl
mov
shlb
imul
dec
sub
jmp
pop
test
and
add
xchg
xchg
sub
jne
in
ret
cmp
push
pop
xchg
push
adc
in
xchg
dec
push
adc
pop
add
enter
pop
cmp
xlat
fbstp
icebp
mov
xchg
bound
jae
push
out
and
cs
out
pop
icebp
jb
nop
jno
or
and
sub
xor
stc
mov
pop
adc
push
aaa
adc
repz
hlt
xchg
jmp
and
dec
cld
mov
fcoms
sbb
xchg
push
add
ret
sbb
cli
add
push
std
mov
fs
scas
inc
adc
pop
fsubl
xchg
in
mov
adcb
ds
scas
ss
mov
out
das
adc
mov
iret
or
clc
add
mov
xchg
add
sbb
orl
outsl
or
lahf
lock
mov
pushf
inc
mov
cmp
adc
int3
inc
xlat
rorb
mov
test
sbb
test
pop
test
enter
fsub
pop
mov
add
arpl
cmp
das
out
clc
lcall
insl
xor
dec
jno
pop
in
cmp
add
out
lret
pop
sbb
or
cmp
sbb
sbbb
mov
sub
or
dec
dec
pushf
fidivs
xchg
gs
fld
inc
mov
loope
sbb
cmpsb
imul
fbld
pushf
adc
insb
dec
add
mov
xchg
call
sub
leave
xchg
add
pop
push
pop
pushf
mov
mov
outsl
incb
xchg
out
pop
imul
mov
sbb
pop
jp
repz
sahf
in
dec
inc
repnz
addl
jne
mov
inc
in
mov
push
aas
rcll
add
jbe
lods
sti
arpl
sub
rcll
shlb
pushf
bound
movsb
xchg
add
fcompl
shrb
fs
neg
addr16
mov
ret
sub
cmpsl
ljmp
mov
test
xor
repnz
fwait
add
jbe
or
dec
push
push
pop
in
lds
sti
or
call
notl
mov
fmuls
pop
mov
add
outsb
jmp
out
jge
in
sbb
xor
jae
pop
jmp
push
scas
arpl
jp
les
inc
push
in
stc
push
ret
push
int
mov
shrl
addr16
testl
dec
or
repnz
leave
pusha
in
sti
pop
jp
and
rorl
mov
add
xorb
repz
repz
cld
dec
xchg
fadd
jge
icebp
inc
and
pop
cltd
test
mov
xchg
adc
test
push
pop
sbb
pop
jg
jmp
in
add
pop
add
push
rcrb
fmuls
xchg
mov
cmp
push
and
push
xchg
dec
mov
int
into
aaa
or
movsb
inc
pushf
or
mov
cwtl
mov
test
adcb
jge
mov
dec
lea
shll
pop
cmp
jle
and
stos
jmp
pop
add
jecxz
mov
das
pushf
cld
test
pop
shufps
out
adc
sbb
jecxz
out
clc
jb
cmp
sbb
ret
rcl
dec
add
andl
outsb
loop
imul
cld
inc
test
pop
clc
pop
push
mov
mov
and
jb
mov
push
sbb
jb
mov
sub
inc
les
xchg
jo
add
int
xor
cmpsl
test
xor
cld
aas
mov
sub
xchg
pop
jne
gs
jl
arpl
in
mov
je
js
pushl
sub
sub
inc
xor
hlt
scas
pop
sbb
out
subl
or
lcall
mov
fldcw
inc
daa
push
mov
inc
roll
xchg
mov
xor
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
and
xlat
in
dec
lea
jmp
bound
mov
inc
daa
push
into
push
mov
ror
into
mov
mov
sbb
jge
ljmp
lods
js
push
repz
mov
in
dec
push
in
sbb
cmp
jg
dec
push
jno
cmp
lea
dec
fcomip
fs
stos
bound
jl
or
jmp
push
sub
int3
or
shll
xor
mov
lds
shll
inc
push
push
ficomps
push
popa
nop
cmpsb
inc
out
or
mov
sub
xor
repz
insb
dec
int3
mov
mov
ljmp
or
inc
stc
mov
and
dec
dec
inc
pop
or
adc
jp
xchg
mov
xor
dec
mov
mov
aaa
cmp
mov
ds
enter
addr16
jl
cmp
daa
cmp
aaa
sbb
decl
aad
pop
dec
sti
cmp
imull
add
lods
jp
push
xor
in
xor
xor
xlat
xor
pop
push
popa
in
pop
inc
out
test
movsl
jns
sbb
loop
cld
dec
cmpsl
mov
sbb
data16
mov
mov
sbb
popf
pxor
aas
ljmp
and
aam
pusha
and
ret
inc
fcom
in
arpl
mov
repz
fnstsw
divl
jmp
nop
cmp
cmpsl
jnp
in
xchg
mov
call
adc
or
sub
ficomps
fcmove
sub
cmp
pop
pop
jp
sub
test
xchg
push
pop
sbb
xor
dec
push
and
mov
bound
mov
xor
add
lret
xor
imul
bound
pop
lret
das
xchg
jp
sub
in
aam
cmp
push
adc
loope
nop
xor
xor
cwtl
push
mov
or
xchg
ret
mov
sbb
sbb
xor
add
out
and
ret
inc
scas
mov
pusha
ficoms
out
packssdw
data16
aam
aam
jne
lock
jae
inc
add
stos
aam
aam
xor
push
or
xor
idivb
mov
sub
fsubrs
push
xchg
mov
out
xchg
pushf
pop
sub
mov
adc
add
adc
xchg
sbb
movsb
mov
xchg
xchg
add
sahf
xchg
cs
nop
cmpsb
pusha
sub
jne
scas
cltd
loope
mov
jmp
fidivrl
jo
and
pop
out
clc
and
fcom
mov
jo
js
leave
iret
inc
loopne
mov
pop
repz
sub
sub
lods
jle
sub
test
adcb
negl
outsb
scas
sub
je
icebp
and
adc
pop
push
pop
dec
xor
jne
xor
xchg
push
or
sbb
sub
inc
adc
pop
cmpb
sbb
int3
mov
out
jg
popa
sahf
divl
pop
sbb
sti
mov
mov
leave
xchg
xor
repnz
call
push
sahf
inc
jne
shrb
xor
inc
mov
add
xchg
imul
shlb
inc
sub
setnp
cmpsb
in
call
mov
std
mov
lock
aaa
lcall
loopne
xor
sub
or
jne
dec
rolb
test
cmp
jmp
inc
mov
lods
push
cmc
or
dec
inc
dec
lea
outsb
ja
dec
sahf
test
outsl
into
aaa
jbe
scas
outsl
adc
mov
test
or
pusha
jbe
xchg
je
dec
mul
nop
ja
jge
lds
xor
mov
outsb
jg
js
sub
std
dec
pop
rcll
fsubs
xchg
inc
mov
scas
add
push
outsb
clc
pinsrw
sbb
cmp
xlat
outsl
insb
je
jmp
test
or
mov
jbe
add
shl
shl
pop
test
add
or
dec
loopne
popa
dec
mov
pop
jl
mov
and
cmpl
and
or
fsubrl
push
loopne
xor
inc
cmovno
paddw
cmp
xor
mov
jo
addr16
mov
jno
add
cmpsl
adc
or
shlb
sbb
orl
mov
dec
jns
out
fisttpll
les
in
arpl
movnti
mov
repnz
icebp
stc
jl
xor
sbb
aaa
add
push
pusha
pushf
jne
mov
aad
mov
imul
fstpt
inc
les
das
xor
repz
sbb
push
lock
sbb
xor
lcall
addr16
sti
pop
or
aad
rorb
test
mov
push
leave
ss
or
adc
rcl
bound
cmp
lods
loop
inc
xchg
cwtl
add
push
xor
cmp
push
xor
ret
int3
xchg
jnp
lods
data16
inc
pop
sbb
mov
xor
aas
xchg
gs
push
push
mov
call
push
lock
jnp
test
adc
dec
lods
or
mov
mov
lods
push
fwait
imul
xor
loope
cmp
xlat
push
mov
push
les
jns
stc
std
es
jae
fs
or
jnp
mov
xchg
jae
xor
fisubrl
and
lret
in
js
inc
sbb
jg
mov
or
pop
cmp
dec
outsl
xlat
mov
xchg
mov
into
pop
aad
outsb
lret
cmpsb
fs
dec
insb
leave
int3
mov
clc
mov
inc
ja
sbbl
sub
mov
into
mov
or
mov
mov
push
mov
and
movsb
in
jp
xchg
fdivrs
out
jg
cltd
lods
cs
cwtl
lea
mov
xor
lea
std
sub
sbb
out
pusha
and
xchg
add
js
or
dec
push
fwait
push
hlt
mov
test
push
pop
rcll
nop
das
mov
jecxz
mov
mov
das
lods
pop
push
leave
dec
mov
cmpsb
nop
mov
sahf
test
push
int3
into
popf
xchg
sahf
arpl
mov
xor
push
mov
shlb
adc
loop
loop
insb
dec
sbb
sahf
orb
cmp
xor
and
cmp
and
stc
test
dec
push
sbb
xchg
ljmp
dec
pop
jg
pop
add
push
arpl
xchg
cmp
inc
ds
shlb
jne
mov
pop
jno
mov
adc
lds
sub
add
pop
cmp
pop
scas
fcomip
lret
sbb
lahf
dec
or
jle
sub
sbb
xchg
sbb
dec
mov
push
ss
dec
in
push
xor
stos
xchg
dec
jle
orb
arpl
and
mov
aam
cld
loope
int3
dec
inc
bound
inc
je
xorb
jmp
and
icebp
jns
inc
loope
xchg
scas
inc
mov
pop
hlt
shl
je
sub
cwtl
mov
stos
push
imul
idivl
mov
js
mov
js
jle
or
or
xchg
xor
or
pop
sub
inc
out
dec
out
push
mov
insl
repnz
push
imul
sti
mov
mov
jecxz
add
adc
xor
iret
imul
rolb
or
pop
loopne
mov
xchg
mov
push
and
sub
call
sub
jbe
jbe
enter
push
sahf
dec
and
dec
push
sub
enter
push
cmp
jbe
insb
and
leave
jnp
xchg
add
cltd
xchg
lock
call
sub
xor
jns
dec
mov
xchg
mov
pop
ljmp
mov
popa
js
jg
pop
pop
nop
pop
adc
addr16
ficompl
hlt
lock
sbb
aad
in
int3
out
cltd
mov
jge,pn
lahf
pop
imul
xor
sbb
mov
xchg
jmp
sub
sbb
or
jns
and
mov
loope
lahf
xchg
cmc
pop
pop
pushl
fcompl
mov
cld
mov
xchg
stos
aas
in
xor
cmp
mov
or
rcrb
cmp
and
pextrw
dec
jnp
fisubs
cld
bound
movl
xchg
jmp
pop
rorw
sub
jbe
aad
call
fnstenv
stos
xchg
inc
push
ljmp
das
test
add
outsl
clc
xchg
inc
dec
movsl
cmpsb
ss
mov
into
sahf
ret
loopne
iret
add
outsb
aas
inc
dec
xchg
push
jo
adc
stc
mov
data16
cmpsb
mov
xchg
jne
arpl
push
ja
pop
into
std
pop
mov
cld
sbb
hlt
js
pusha
pop
ja
pop
stc
int3
xchg
out
adc
jnp
push
push
push
cli
pop
or
inc
cltd
jae
xor
je
test
push
ss
lret
pop
fs
decl
fisttps
and
and
stos
cmpsb
arpl
mov
cmp
sub
test
ss
movsb
mov
dec
sub
dec
sub
and
mov
jp
test
ret
jl
in
add
adc
adc
lock
fnstenv
aas
push
xor
lret
in
push
and
pop
fisubrl
cmp
cmc
inc
out
jo
fxch
mov
or
divb
adcl
popf
mov
in
aaa
cwtl
aaa
mov
inc
adcb
inc
inc
andb
jae
or
loop
pop
pop
subb
lcall
jmp
les
mov
xchg
movsb
add
mov
push
cmp
inc
loopne
dec
lret
ret
mov
outsb
movsb
sub
rcll
push
and
push
cwtl
add
cs
aas
les
and
test
fwait
out
dec
stos
lods
push
add
push
add
test
leave
adc
iret
xchg
popa
enter
add
dec
imul
shlb
adc
sahf
fstps
pop
add
jne
stos
fwait
dec
xlat
xchg
data16
out
call
sub
inc
mov
flds
aam
aad
je
aas
leave
dec
gs
pop
xchg
scas
in
add
inc
add
mov
scas
mov
lea
sub
lods
orb
loop
or
xchg
mov
push
mov
pop
pusha
mov
push
pop
add
adc
in
bound
pop
jbe
cltd
sub
dec
loopne
mov
test
in
cmc
insl
push
or
mov
mov
popa
mov
rcrl
cs
push
scas
push
loope
in
loop
xor
mov
dec
into
int
mov
mov
sub
xchg
sbb
sub
insb
ds
push
dec
fstps
xchg
inc
add
aam
shr
sbb
add
dec
pop
outsb
fsubp
mov
or
cltd
cmpsl
cmp
mov
mov
pop
pop
pop
mov
fwait
nop
pop
sbb
xchg
daa
inc
stos
jbe
lahf
cmp
aaa
jl
js
mov
popa
insl
fld
mov
dec
movsb
out
fwait
mov
jmp
jae
mov
or
mov
push
loope
adc
or
sbb
jmp
cmpsb
pop
cmp
sti
mov
arpl
sbb
or
daa
hlt
fs
inc
fdiv
push
roll
mov
imul
jbe
andb
push
das
outsl
push
sub
stos
adc
mov
and
xlat
cmpsl
or
push
dec
and
aam
sarl
inc
sbb
je
adc
ficoml
mov
mov
test
dec
rcr
clc
fs
je
inc
xor
mov
jge
repz
fsubrs
push
xchg
cmpsl
nop
xorb
jbe
jmp
aad
mov
aam
xchg
lcall
mov
aam
mov
xchg
cmp
outsb
fidivrl
lods
xchg
or
xor
daa
stc
cmp
hlt
add
xchg
repnz
loopne
dec
scas
xorl
jmp
inc
into
bound
push
stc
or
mov
mov
popa
xor
mov
idivl
push
sub
push
inc
adc
mov
sbb
xchg
je
push
cld
sahf
dec
cmp
pop
scas
lea
push
or
dec
mov
mov
insb
filds
out
or
movsb
movsl
enter
inc
addr16
mov
in
dec
xchg
mov
clc
sahf
sub
je
js
inc
jnp
jmp
pop
in
push
subb
mov
or
mov
into
lahf
pushf
jle
xchg
xchg
popf
push
mov
aaa
mov
pop
xchg
add
inc
mov
fnstsw
iret
repnz
js
jl
iret
lret
mov
mov
mov
repnz
inc
adc
rcl
fldcw
shll
dec
jmp
fcom
cli
push
push
push
push
inc
adc
mov
xchg
int3
mov
outsb
test
dec
inc
es
jmp
incb
adc
sarb
push
dec
sbb
out
icebp
cmpsb
mov
or
in
inc
into
rcrl
cwtl
add
adc
cmpsl
cmpb
xchg
mov
cmp
adc
in
hlt
lahf
and
add
popa
loop
inc
fcmovnbe
nop
and
jl
add
scas
and
xor
sbb
mov
popf
testb
ficomps
cmp
jb
xor
jne
mov
jnp
xchg
adc
sbb
pop
lea
or
out
je
cmp
mov
sbb
out
mov
test
insb
cld
add
push
popf
mov
mov
gs
roll
out
sub
push
jb
popf
sbb
add
xchg
aaa
sahf
mov
push
stos
mov
fisttpll
pop
repnz
xchg
push
insb
mov
jge
jns
insb
cmp
push
repz
jo
mov
dec
jb
cmpsb
es
cmp
mov
ror
mov
push
xchg
or
outsb
mov
fcomps
cmc
inc
roll
lock
sbb
cmp
adc
inc
int
push
int3
ss
movsl
repnz
jns
sub
cmp
scas
insb
sahf
fsubrl
jns
pop
dec
dec
addr16
jge
mov
je
and
xor
add
sub
jmp
dec
jg
push
add
cmp
mov
xchg
pusha
movsb
fcoms
jbe
aaa
jl
sub
mov
push
aaa
inc
repnz
push
fists
clc
pop
jecxz
aaa
cmp
xchg
fisubrs
hlt
jmp
cmc
pop
aas
clc
lcall
sub
sub
jg
std
es
mov
sub
push
xor
add
adc
push
shll
inc
cwtl
mov
hlt
bound
movsl
ficoml
movsl
loope
jmp
and
xchg
stos
es
mov
addb
xchg
sti
pop
xchg
push
aam
es
sbb
aam
in
xor
sahf
imulb
out
scas
ljmp
lods
pop
adc
fldt
ret
lcall
vmread
mov
pop
xchg
jg
cmp
in
pop
or
ljmp
data16
idiv
jb
fists
movsl
add
xor
jb
pop
pop
jp
dec
add
xchg
mov
adc
sbbl
mov
sahf
and
aam
pop
push
push
int
stos
stos
dec
sub
gs
jle
xchg
xor
pop
xchg
jno
imul
setae
and
imul
test
or
mov
das
push
pop
dec
or
cmpsb
cmpl
and
jnp
fiadds
lock
imul
bound
adc
outsb
fists
xor
and
push
in
orl
ss
sbb
jge
mov
ds
lock
adc
in
push
scas
ror
push
jecxz
jg
adc
icebp
dec
lret
lcall
xlat
mov
ja
sbb
mov
mov
inc
in
cmp
push
cmpsl
popf
inc
pushf
inc
shrl
imul
sbb
int3
leave
push
mov
iret
mov
sbb
xchg
das
aaa
fwait
loop
addr16
loopne
mov
adc
and
sub
fdivs
mov
pop
add
sub
ljmp
cmc
popf
cmp
clc
jnp
gs
lret
mov
mov
cmpsb
dec
fwait
mov
jnp
xor
dec
pusha
sbbl
mov
stc
cmp
pop
jbe
adc
mov
cmp
push
inc
or
jae
rcrl
std
jle
mov
sti
xchg
in
cmp
or
push
lret
and
dec
negl
lods
sub
es
xlat
mov
sbb
nop
movsl
scas
adc
neg
sahf
aam
lods
sbb
sahf
ja
mov
push
pop
cmp
jl
mov
ja
sub
je
xorb
stos
insl
sbb
mov
sub
ret
sbb
hlt
imul
push
mov
test
fs
pop
sbb
loopne
mov
mov
les
jp
xor
adc
mov
sti
adc
sbb
mov
xor
out
add
cmpb
fcomp
dec
push
pop
xchg
popf
lds
ret
fwait
jmp
push
pop
xor
or
pop
rcrb
jo
lea
mov
into
cmpsb
mov
scas
les
test
push
addl
pop
ljmp
ss
ljmp
cwtl
sub
mov
outsb
and
and
popf
jle
fabs
popl
rol
xor
jno
mov
addb
push
sub
aam
dec
add
pop
inc
ja
cmpsl
jb
pop
mov
sub
add
jmp
sub
movsl
cmc
hlt
xorb
or
mov
mov
push
fimull
clc
enter
cmpsb
adc
xchg
push
xchg
dec
push
hlt
mov
scas
sub
inc
dec
cmp
iret
mov
fwait
mov
jmp
imul
mov
rcrl
jecxz
adc
dec
lret
xor
cmc
pop
add
push
xor
movsb
stos
scas
jl
enter
imull
daa
clc
inc
pusha
outsb
cld
out
cltd
pop
cmp
cli
dec
fistl
xchg
inc
js
mov
mov
test
mov
add
stc
sub
pop
mov
dec
jmp
or
inc
pop
cmc
jecxz
jle
clc
mov
mov
lahf
mov
sarb
and
daa
xchg
into
and
dec
fwait
mov
dec
mov
out
add
iret
dec
add
xchg
repnz
dec
scas
inc
mov
xchg
xlat
ljmp
fwait
stos
test
adc
fcmovnu
int
pop
mov
adc
fadds
pop
mov
xchg
cmc
jmp
jp
nop
insl
aas
lahf
test
hlt
movsl
sub
scas
repnz
mov
adc
sub
or
data16
push
xchg
aas
mov
push
and
cmp
cmc
loop
ja
dec
jns
inc
or
test
stos
cmp
clc
push
les
mov
mov
scas
jg
stos
or
adc
nop
leave
pushw
or
rorl
push
cmp
lods
xor
jmp
cmpsb
mov
aad
mov
decb
push
push
mov
or
ret
push
jne
fdivrs
add
or
mov
dec
xor
push
es
dec
or
push
sub
pushf
xor
pop
ds
cmc
fidivl
fidivrs
pop
sub
mov
cmp
pop
sub
call
xor
stos
mov
dec
in
add
pop
adcb
mov
imul
in
cs
andb
cmpsl
mov
insl
xchg
insb
test
cmp
bound
cmp
mov
inc
outsl
lods
mov
sub
xchg
es
xor
mov
ret
add
mov
push
fstp
imul
cmc
cmp
push
lds
hlt
cwtl
pop
pushf
sbb
stc
outsb
movsl
cmp
ret
enter
enter
lds
fisubs
movsl
xorl
fs
loopne
mov
scas
adc
add
rorl
dec
sbb
js
jmp
clc
add
pop
sub
mov
stos
dec
sbb
pop
iret
dec
cmp
jp
rcrl
or
ss
and
rolb
icebp
add
sub
leave
cltd
xchg
imul
hlt
mov
jb
subl
dec
adc
imul
add
dec
outsb
sti
add
movsb
fisubl
test
scas
lret
hlt
movsl
in
mov
sub
aas
sti
nop
fcmovnb
and
mov
inc
xor
cmp
in
dec
mov
or
dec
ret
add
out
push
xchg
mov
or
in
push
mov
test
sarb
pop
mov
enter
dec
ror
cltd
xchg
jl
aas
mov
xchg
mov
xor
inc
sti
cmc
idivb
data16
ficoms
cmpsb
jns
stos
sbbl
fidivl
cmc
adcl
add
xchg
roll
arpl
pop
lret
mov
xchg
rclb
jle
inc
adc
clc
pop
out
add
repz
sub
sub
inc
lods
xchg
mulb
xchg
ja
mov
out
shl
pop
fidivrl
test
std
repz
lods
mov
out
in
rcl
cmc
repz
stos
mov
jp
iret
push
mov
push
jecxz
or
and
int3
shrb
xor
daa
lods
xor
fiadds
xchg
fisttpl
rcrl
dec
push
pop
data16
push
mov
sbb
lahf
adc
loopne
int
dec
push
arpl
aaa
xchg
gs
shrb
lock
and
stos
pop
sbb
mov
xlat
scas
andl
jbe
loopne
sbb
aad
je
imul
adc
aas
rclb
cmpsb
xchg
jo
add
repnz
jne
dec
and
arpl
rclb
and
outsb
repnz
enter
imul
jno
aad
push
mov
lods
pminsw
push
imul
mov
loop
sub
xor
clc
ret
aad
add
dec
xor
sbb
sbb
or
xchg
mov
cmp
xor
xchg
mov
cmpsb
adc
pop
and
fdivrs
add
adc
out
jp
cmp
mov
mov
push
fs
icebp
imul
xor
icebp
pusha
mov
jae
popf
shlb
pop
imul
cmc
clc
inc
push
dec
loopne
rcrl
mov
inc
xchg
insl
inc
jae
flds
and
leave
ds
or
lock
cli
pop
or
mov
cli
xor
cmp
scas
loope
outsl
cltd
mov
mov
inc
sbb
in
sbb
mov
test
push
or
imul
leave
adc
inc
pop
mov
mov
outsl
jb
loope
and
mov
int
cmp
dec
cs
das
lods
js
stos
sbb
pop
mov
popa
jge
repz
daa
xchg
push
push
mov
vcvtss2si
sbb
outsl
test
dec
xchg
ja
lcall
sbb
or
repz
bound
jno
jle
daa
outsb
out
inc
loop
push
call
push
xor
mulps
lret
pop
fcmovu
or
sbbb
aad
mov
push
std
int3
js
je
mov
sbb
cli
fwait
push
cmp
sub
jle
imul
adcl
scas
adc
inc
sbb
and
andb
add
filds
in
cwtl
and
lock
cltd
rcrl
fadds
jb
dec
lret
ficoml
jno
mov
pop
aaa
gs
cmp
lds
test
jbe
sub
mov
jmp
loop
pusha
push
sbbl
adc
push
push
rcl
lods
mov
in
aas
jae
lret
shr
jnp
xchg
pop
fmuls
adc
xor
int3
out
and
mov
clc
cmc
or
cmp
outsl
push
push
das
mov
cmp
hlt
std
hlt
cmp
dec
cmp
out
cmpsl
sub
les
cli
es
cmpsb
dec
repnz
add
dec
add
push
cmc
cltd
repz
test
mov
test
imul
push
add
cmp
cmp
ja
roll
jno
ret
into
adc
mov
dec
stos
mov
outsl
jle
lahf
xor
push
adc
xchg
pop
xchg
into
add
sti
and
lods
xchg
xchg
js
pop
icebp
and
fcomip
jmp
inc
lods
lret
mov
xchg
shll
jnp
lret
sbb
mov
inc
or
aam
div
out
lahf
inc
mov
out
mov
mov
pop
leave
cmp
adc
mov
out
fwait
icebp
fld
cmp
and
scas
push
aaa
fsts
scas
icebp
sahf
adc
mov
pop
xchg
adc
out
cmp
jmp
ds
xchg
xor
push
jnp
int
and
popf
sbb
test
or
dec
mov
stos
negb
pop
mov
xchg
and
adc
loope
pusha
push
and
ficoml
cmp
stc
leavew
test
fs
popa
xor
hlt
jmp
std
and
int
lods
push
sub
mov
cmp
mov
lea
popa
inc
pop
xchg
cmpb
dec
int3
sahf
pminsw
sub
scas
or
mov
pop
das
insl
loop
sbb
lock
cmpsl
jp
or
add
loope
dec
mov
jns
push
ja
mov
xchg
pop
mov
push
loopne
adc
jmp
pop
and
test
lods
test
popa
fs
inc
inc
iret
add
jecxz
push
mov
xchg
add
ja
test
enter
push
test
sbb
shr
jns
popf
jecxz
int3
into
out
cmp
xchg
jb
xor
sarl
sub
adc
pop
daa
sarl
loopne
scas
xor
xor
cmp
aaa
orb
and
or
adc
pop
clc
add
jns
sbb
loope
xlat
pop
push
mov
sar
inc
pop
loop
or
cmp
roll
les
movl
rclb
subl
push
int3
test
lea
cmp
popa
inc
pmulhuw
fsubp
pop
in
mov
aas
pop
push
mov
lea
aad
push
movl
push
jno
push
int3
mov
mov
cmpsl
aas
push
movsb
lcall
dec
ja
push
sahf
sbb
cmp
es
pop
mov
push
jge
aaa
movsl
pushf
and
jl
inc
popf
push
dec
xor
cmp
add
mov
mov
loope
push
cmp
pusha
imul
xor
rorl
jmp
mov
pop
popf
inc
fistps
scas
ja
sahf
sub
cli
scas
adc
sub
push
mov
iret
lahf
jge
mov
xchg
inc
pop
pop
ret
push
push
js
jl
cli
or
jne
add
pop
adc
push
sub
sbb
jle
or
leave
xchg
inc
cmp
xor
lret
ficoml
fldenv
mov
scas
nop
test
inc
push
lret
mov
or
mov
adc
cwtl
cli
pop
arpl
roll
std
ficoml
rol
ljmp
mov
std
sub
filds
loopne
out
je
jecxz
loope
std
mov
sbb
js
push
out
sub
jle
dec
popa
int3
xchg
in
or
sbb
sub
push
push
pop
sbb
fnstsw
les
adc
add
inc
popl
fsubrl
sub
sbb
or
push
add
xchg
popf
push
test
pop
lods
mov
lcall
enter
aam
or
and
je
jle
or
sbb
iret
mov
xchg
and
bound
push
inc
sti
add
out
int3
jecxz
test
nop
sbb
insl
loopne
cmp
jno
test
inc
mov
inc
add
xchg
xor
push
mov
sbb
xchg
mov
imul
imul
jns
cmp
mov
xor
jb
and
stc
add
cmpsl
inc
adc
outsb
cmp
shll
popa
lods
into
jnp
xchg
pop
aad
cmpsb
arpl
cmp
mov
jo
and
sbb
push
xchg
and
sub
cmc
movsl
stos
cmc
test
jle
jge
jns
pusha
push
inc
ror
jno
push
pop
dec
movsb
jmp
xor
cmp
mov
outsb
xor
pusha
lods
sub
out
pop
imull
pop
jne
ds
mov
fadds
add
cmp
cmp
test
xchg
popa
movsb
or
mov
add
pusha
popf
into
jns
out
mov
ffree
loop
inc
aaa
fs
push
cmp
mov
clc
dec
ljmp
adc
add
mov
ja
std
stos
pop
call
xchg
sbb
cmp
rcr
xor
add
xorl
clc
xor
out
inc
add
inc
rolb
pop
mov
pop
cmp
cmp
push
ja,pt
imul
pop
jg
rorb
adc
pop
and
dec
ficomps
pop
add
out
jg
stos
or
imul
xchg
sbb
outsl
xchg
scas
xchg
pop
push
lds
sub
jo
mov
lods
lret
mov
or
inc
mov
add
inc
mov
mov
adc
cmp
or
mov
fisubs
xchg
jns
mov
enter
add
sbb
pusha
dec
dec
mov
leave
sbb
test
add
icebp
dec
adc
fidivs
push
lds
add
add
mov
dec
xorb
aaa
sbb
in
cmpl
and
jl
add
or
inc
mov
mov
stc
or
jmp
aad
mov
cmpsb
jecxz
call
jle
jge
inc
hlt
pop
std
dec
pop
jo
sub
cmp
movsl
jne
shll
hlt
cltd
inc
inc
outsl
xchg
jmp
and
adc
mov
ficompl
inc
dec
jg
fistps
shlb
lret
fldl
cmc
lahf
push
lods
mov
fsubl
pop
cmp
pusha
inc
rorb
or
jge,pt
inc
sbb
mov
imul
adc
mov
std
mov
in
lods
pop
sarb
pop
push
jo
cmp
lock
jmp
sbb
sbb
mov
jl
mov
xor
pop
add
adc
stos
fistpll
aas
clc
jg
mov
sub
leave
jns
mov
jae
cmp
jge
push
ficoms
mov
fmuls
adcl
sbb
imul
aas
and
push
sahf
xchg
mov
dec
and
sub
decb
jle
cmpxchg
std
or
in
dec
shll
rol
loopne
and
xorl
push
pop
notb
ret
das
pop
pop
cmp
mov
mov
cld
push
rorb
clc
cld
loope
pop
and
add
cltd
loope
ja
add
roll
add
fnstenv
popa
sbb
dec
lods
jp
in
and
xor
fisttps
xor
jno
inc
lcall
and
pusha
cmp
scas
test
call
cld
xor
and
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
clc
outsb
hlt
push
jmp
bound
xor
pop
aaa
andnps
inc
sbb
dec
mov
arpl
mov
call
jle
add
aas
push
mov
dec
cli
mov
pop
stos
cmp
sub
dec
xor
jns
mov
int
shlb
xor
hlt
pop
out
sahf
xchg
lcall
inc
inc
mov
cmp
fucomip
movsl
std
xor
or
mov
leave
mov
jle
and
fstps
rol
stos
sbb
cmp
subl
xor
push
push
or
xor
pop
add
out
sbb
jbe,pn
sahf
lret
push
ret
jb
pop
or
leave
bsf
cmc
inc
insb
jb
and
adc
repz
dec
mov
cmp
mov
jl
dec
bound
inc
add
test
int
add
pushf
cmpl
aam
pop
pop
into
sbb
jg
out
and
jns
inc
rcll
out
xor
scas
mulps
fcmovne
mov
mov
lock
mov
testl
inc
mov
scas
mov
fadds
lods
mov
jl
adc
movsb
push
jb
fwait
push
jecxz
shl
ss
add
or
jmp
sbb
sbbl
mov
rcrb
std
fucomp
fcmovu
in
lret
punpckhbw
in
repnz
jmp
aad
mov
add
aaa
adc
in
add
mov
pop
pop
xlat
ret
adc
fucomi
push
ret
cmp
fnstenv
cmp
or
jle
rcll
mov
bound
and
mov
repz
mov
test
clc
mov
jle
lea
fisttpll
push
mov
cmpsl
lds
lds
xchg
dec
call
hlt
add
aad
pop
stos
mov
out
xchg
cmp
test
pop
pop
ss
adc
cs
icebp
inc
xor
pop
icebp
adc
pop
xchg
arpl
mulps
mov
xchg
mov
mov
mov
testb
dec
cmp
ret
fnstcw
test
sub
lret
aas
adc
sbb
sub
dec
test
fcmovnu
fbstp
and
lahf
cmpsl
cwtl
mov
sub
insl
jg
sbb
add
lcall
mov
add
mov
rorb
scas
dec
lods
ret
popfw
outsl
fsubr
jmp
xor
out
paddusw
jne
rclb
arpl
ss
mov
xor
mov
jb
nopl
and
fnstcw
cmp
stos
rcll
hlt
sub
popf
cmp
adc
push
js
ds
xor
ja
jl
sub
adc
subb
push
cmp
mov
and
inc
notrack
and
push
dec
add
je
jns
ret
push
adc
clc
mov
sbb
aas
bound
sbb
and
xor
lcall
push
push
jl
adc
movsb
cltd
cltd
push
push
aam
je
lret
sub
adc
adc
push
add
out
fbstp
jae
mov
lock
inc
mov
mov
ljmp
loop
push
test
and
sub
adc
es
mov
mov
cwtl
sbb
xchg
in
nop
pop
adcl
mov
loop
add
inc
xor
pop
lahf
fs
call
int
aad
adc
push
xchg
pop
hlt
aas
or
jge
and
enter
aaa
stc
pop
sub
pop
push
sbb
std
ss
inc
stos
mov
fnstcw
cmpsl
sub
mov
sbb
xor
adc
dec
push
out
push
mov
xlat
inc
xchg
stc
sbb
add
mov
dec
lds
adc
xchg
test
and
xchg
mov
mov
fldt
xor
dec
test
add
push
sbb
mov
jl
mov
sbbb
mov
xor
push
jmp
std
stc
decl
push
cld
adc
filds
sahf
jb
add
and
clc
and
or
movsb
sti
lock
xchg
popf
shl
inc
insb
inc
inc
loop
icebp
popa
xchg
sbb
sahf
scas
jecxz
imul
jle
adc
sbbb
pushl
mov
cs
int3
sbb
add
lahf
sbb
jns
cs
arpl
xor
mov
scas
push
inc
pusha
mov
addr16
sub
cwtl
test
inc
iret
cmp
adcl
out
cmp
sub
mov
xor
clc
scas
jl
daa
out
out
sbb
jp
jmp
sbb
cld
fwait
jnp
push
addr16
pop
loopne
xor
popf
and
push
mov
mov
ret
addr16
and
xchg
in
es
mov
mov
lret
inc
mov
das
sub
jle
pop
xchg
push
dec
shrl
and
fsubl
mov
dec
jp
fcoms
cmp
lret
lock
xchg
cmc
jbe
lcall
test
jae
xchg
inc
push
mov
dec
ret
adc
and
ja
ficompl
movntq
sub
push
cmp
dec
imul
loopne
out
pop
and
mov
std
mov
jo
outsl
test
fwait
lret
outsl
insl
mov
xor
aad
mov
orl
push
add
sbb
push
push
add
add
inc
xor
das
inc
or
das
xchg
pop
popf
sarb
mov
mov
sbb
in
ret
mov
in
mov
sysexit
gs
movsl
repnz
in
cmp
stos
lds
out
fsubrs
and
adc
cmpsl
ss
and
daa
mul
fadds
movsl
push
mov
testb
ss
das
cmp
jbe
pop
xor
subl
adc
test
xchg
add
loop
out
or
jno
inc
fdivp
out
sarl
jbe
cwtl
hlt
jno
push
adcl
pop
push
sub
and
in
stos
push
hlt
cld
and
iret
ret
xchg
lods
popf
xchg
std
and
rcrb
sub
repnz
mov
test
pop
jg
aam
inc
rol
inc
rolb
dec
test
mov
pop
cmp
xchg
cld
leave
or
in
or
add
inc
les
rcrb
mov
out
movsb
aaa
popa
xor
inc
pop
xor
loope
fwait
repnz
xchg
popa
jb
dec
mov
dec
fwait
mov
aad
sub
sbb
ret
loope
es
pop
jo
fists
loopne
push
cmpsl
jns
shrb
in
jecxz
dec
mov
lahf
adc
mov
test
or
fadd
adc
xor
push
cmp
lcall
cmpsb
fsub
andb
lret
pop
sbb
push
scas
test
xchg
sti
xor
icebp
inc
negl
mov
xor
movsl
inc
mov
andb
pusha
cwtl
out
into
fwait
test
jb
xlat
or
sub
pop
sti
mov
inc
cli
data16
insb
cmpl
or
dec
cld
inc
inc
sbb
arpl
xor
inc
aas
lahf
lds
loope
faddp
movsb
bound
or
or
jb
jp
data16
rolb
cmp
out
add
xchg
fimull
lahf
rep
dec
bound
xchg
adc
stc
in
cmp
mov
mov
push
ja
or
jmp
aaa
sub
sbb
xchg
or
xchg
cmp
cmpl
lds
add
popa
fwait
insl
jno
cmpsl
into
xchg
mov
push
pusha
jne
adc
stos
shrl
iret
pop
popf
lret
out
mov
loopne
lock
hlt
mov
aaa
push
push
xor
jo
and
pop
cmpsb
inc
test
lret
fistps
sub
sbb
push
mov
xchg
xchg
mov
nop
add
or
ja
lcall
popa
imull
fwait
push
mov
jmp
dec
aas
xor
push
push
mov
outsb
jecxz
ret
jns
dec
iret
loop
push
dec
scas
lock
rcll
shl
lods
sbb
sti
sbb
cwtl
mov
pop
ret
adc
mov
arpl
inc
ljmp
js
inc
fadds
push
add
mov
cmpsb
icebp
push
faddp
push
and
sub
cmpsl
mov
test
pop
enter
inc
lahf
stos
sub
jp
inc
sbb
mov
inc
arpl
inc
movsb
pop
add
xchg
lcall
in
sub
loop
inc
scas
int3
aas
add
mov
insl
pop
lock
cmp
lcall
mov
mov
int3
aam
xchg
cwtl
jns
cltd
filds
movsb
mov
aad
jg
or
push
out
sub
ja
cli
push
movsb
jp
mov
std
cli
jo
loope
and
pop
sbb
jle
mov
mov
adc
stc
dec
out
xor
in
jmp
mov
popf
push
mov
push
add
add
popl
fisubs
popa
stos
test
les
inc
sbb
push
insb
xor
and
sbb
ja
inc
push
in
and
sahf
outsb
add
scas
test
idivl
ret
mov
mov
sbb
ret
rcrb
sbb
lahf
dec
out
das
mov
xlat
pop
xor
shrl
cmp
cli
arpl
jl
loopne
mov
rol
into
mov
cmc
outsl
sbb
je
push
mov
push
adc
mov
jb
mov
les
out
ss
test
outsl
stc
fisubrl
sub
in
jae
jno
icebp
push
dec
loope
addr16
cmp
aas
ds
add
into
adc
insb
lds
daa
insl
xchg
cmp
mov
arpl
cmp
loope
cmc
sti
adcb
sbb
jae
sub
sbb
add
pcmpgtw
test
pop
insl
pop
fisubl
sbb
mov
mov
imull
adc
mov
add
jecxz
fcmovu
mov
or
xchg
scas
push
xchg
adc
mov
mov
xchg
dec
sbb
jnp
or
dec
ret
ret
push
mov
sbb
fs
mov
adc
in
in
jae
nop
mov
aad
sahf
stos
gs
out
cld
push
testb
sbb
test
shrl
shr
out
jl
mov
pusha
xchg
ret
icebp
adc
cltd
sub
sub
cmp
out
jg
sub
adc
cld
xor
ret
ret
popa
inc
imul
add
call
xchg
fpatan
push
mov
mov
cmp
fdivl
stos
sbb
sbb
inc
popl
mov
arpl
cmpsl
sbb
jne
sbb
pop
loope
aad
cmc
pop
adc
xor
push
filds
xlat
cld
fidivrl
xor
cmpsb
adc
sub
pop
aam
cmp
jmp
pop
fstl
arpl
jno
test
mov
push
vmread
cli
jb
add
outsb
jmp
pop
mov
xchg
test
inc
and
sub
sahf
sbb
imul
mov
in
ficompl
xchg
jns
xor
or
fadds
test
shlb
mov
pushf
pop
lods
orb
enter
or
cld
test
mov
dec
mov
idiv
pop
fimuls
fcom
fisttpl
repz
push
or
sti
inc
xor
insb
mov
jle
push
sbb
test
imul
popf
out
js
ja
hlt
inc
test
xchg
ficoms
mov
and
loope
sbbl
js
dec
pop
pop
cmpsb
sbbl
pop
and
cld
seto
sbb
inc
sub
pushf
inc
ret
jg
jne
fwait
jns
pop
pop
mov
xlat
fildll
js
jae
in
les
es
add
jge
out
insb
jg
in
fistl
push
sbb
push
fs
repz
mov
jl
mov
or
xor
popf
dec
popf
dec
mov
mov
in
sub
sub
sbb
loop
pusha
out
mov
pop
push
jbe
adc
outsb
jno
lcall
es
xchg
repnz
cmc
std
daa
hlt
pop
in
pop
lock
nop
out
or
repnz
enter
xor
js
jmp
jmp
push
icebp
lcall
push
repz
iret
jb
iret
adc
ds
push
hlt
fidivrs
pop
jbe
mov
mov
mov
adcb
stc
and
stos
lcall
bound
js
ljmp
add
cmc
fcompl
jae
pop
ljmp
push
dec
dec
mov
cmpsb
add
pop
inc
pushf
xchg
push
inc
std
pop
addr16
mov
mov
cs
cwtl
dec
add
in
xor
mov
mov
xchg
pop
fs
imul
cmp
mov
shl
and
pop
sub
mov
and
gs
pop
outsb
out
xor
mov
sub
push
inc
loope
sar
sub
movsl
fdivl
es
xor
dec
adc
jle
int
sti
jns
pop
bound
rolb
mov
mov
mov
pop
fcoml
nop
mov
or
stos
xor
adc
mov
sbb
data16
les
jae
lret
jae
and
mov
jp
std
push
mov
in
cld
pop
push
mov
push
xchg
xchg
push
sahf
cli
ljmp
lahf
xchg
mov
filds
dec
mov
sti
enter
popf
repz
icebp
popf
lock
jge
xchg
add
xor
addr16
dec
or
pop
inc
rcr
popa
mov
sub
push
mov
pop
dec
jg
push
popa
cmp
cli
fwait
mov
inc
xor
mov
push
jge
and
or
adc
xchg
ljmp
dec
xor
jo
out
je
jnp
lods
add
xor
cmp
sbb
dec
mov
jl
xor
iret
enter
lock
mov
ja
insb
pop
mov
nop
push
mov
cmc
jbe
adc
xchg
ljmp
les
and
ret
sub
or
lret
jo
imul
movl
fstpl
jnp
mov
les
xchg
aas
or
cmp
mov
mov
xchg
out
addl
int3
test
mov
cmp
jnp
inc
jb
pop
lds
lret
in
pop
out
jge
cwtl
cli
push
mov
jl
dec
stc
cwtl
xchg
xor
subb
add
in
cmp
lcall
out
inc
push
lahf
mov
add
inc
inc
and
cmp
enter
jp
cwtl
pop
cmpsl
roll
and
sarb
push
add
sahf
vmovhpd
add
and
je
or
adc
outsb
lcall
int
iret
cmp
sbb
jg
adc
adc
nop
dec
popa
mov
jb
sbb
inc
js
in
and
fsts
fld
cs
mov
je
negl
adc
jmp
fs
sub
jp
mov
cmp
push
mov
lods
in
repz
adc
test
enter
mov
push
ja
mov
in
adc
icebp
mov
push
sbb
or
and
aaa
adc
ljmp
in
lret
jmp
std
popa
adc
or
into
dec
pusha
cli
pushf
ljmp
cmp
add
pusha
push
or
jge
mov
shrl
cmpl
ljmp
cmpl
lahf
sar
fidivs
sti
push
mov
and
push
fimull
arpl
and
push
adc
test
adc
jns
mov
int
and
fldt
sarb
arpl
sub
icebp
out
push
movsb
xchg
jo
lret
push
mov
adc
cmpb
test
xchg
repnz
add
mov
les
ljmp
pop
fsubs
cmp
inc
mov
pushf
sbb
push
es
mov
fdivrs
lahf
adc
lds
jmp
jp
mov
lahf
mov
out
repz
cmp
and
pop
inc
jno
push
aas
inc
iret
push
jle
cs
mov
in
jecxz
int3
getsec
loopne
mov
lea
mov
pushf
xchg
and
or
add
xchg
jecxz
pop
push
ljmp
sub
flds
mov
arpl
cmpsl
sub
outsl
loopne
mov
xchg
fs
adc
test
imul
adc
jmp
into
imul
push
lahf
or
add
cwtl
out
mov
stos
cmpsb
sarl
jg
popa
mov
xchg
xchg
lods
dec
movsb
roll
sub
mul
mov
andb
lret
cmp
jle
es
outsl
lock
or
ljmp
div
push
sahf
cmp
mov
or
cmp
jne
mov
inc
add
adc
pop
ja
lahf
adc
outsb
and
ja
xor
scas
jnp
jae
sbb
fldcw
in
push
push
inc
out
jbe
bound
es
lods
scas
loope
mov
mull
les
loopne
or
mov
nop
mov
push
lods
push
iret
mov
push
test
mov
xchg
rclb
test
fucomp
lds
push
fsub
sbb
std
iret
lret
rorb
mov
jmp
insb
test
stos
jmp
incl
sub
cmp
lods
fwait
mov
jl
adc
mov
and
int
mov
jl
mov
add
push
mov
jp
and
dec
cwtl
inc
test
movsb
cmp
dec
pushf
fstps
mov
iret
testb
pusha
in
arpl
insl
decb
sub
xchg
test
je
jmp
aam
or
dec
jl
push
mov
xor
push
stc
flds
loop
jbe
nop
adc
scas
cltd
push
inc
int3
fcoms
pop
outsb
imul
jp
xchg
mov
les
pop
int
loop
sub
insb
call
xor
lret
imul
jae
popw
outsb
add
pop
test
add
shrl
mov
shrb
xchg
add
jg
and
mov
adc
inc
push
dec
bnd
jmp
mov
ret
fdivs
jmp
inc
mov
pushf
out
sarb
xchg
repz
fidivrs
out
and
sbb
push
pop
nop
and
cmp
jb
jmp
and
push
aad
mov
cmpsl
lods
mov
out
in
stos
jmp
outsl
mull
scas
fildll
inc
cmp
adc
cmc
push
insl
inc
sti
shl
idivl
adc
fsubs
push
cli
jp
out
cmpsb
out
add
imul
stos
xchg
adcb
stc
xor
icebp
add
cmpl
cmp
inc
pusha
fistpll
loop
and
mov
lahf
xchg
out
cld
test
mov
add
mov
shrb
mov
adc
incl
lds
inc
xchg
push
inc
fists
scas
rol
lock
mov
jae
xor
les
daa
leave
pop
sbbl
push
sbb
pop
out
fdivl
inc
sti
mov
enter
in
fistl
loopne
and
fwait
adcb
cmp
dec
lock
dec
push
xchg
jl
fsubrp
mov
xchg
icebp
ret
nop
cmp
pop
xor
pop
mov
ret
inc
mov
add
dec
pop
out
std
add
cld
lods
lods
test
fmuls
call
mov
js
fcmovbe
cmpsl
add
push
int
fnsave
mov
out
sti
jmp
fldenv
clc
loope
inc
xchg
jp
xor
je
enter
jo
es
adc
sub
mov
lds
mov
daa
pop
jge
xchg
jno
push
movsl
pop
mov
lret
loopne
ja
push
jbe
add
lret
mov
testl
in
fistpl
inc
cmc
jle
ficomps
pop
pop
jnp
lret
icebp
adc
sarl
xchg
leave
mov
sub
cld
cmp
rorl
insb
orb
cmc
adc
ljmp
xchg
test
lcall
xor
clc
lds
or
cmp
dec
out
test
xchg
stos
add
mov
inc
push
stc
push
cmp
out
dec
sahf
mov
jl
enter
fists
mov
outsb
into
out
imul
decl
inc
fidivs
cs
push
xchg
out
pusha
dec
push
jg
sub
mov
adc
push
loope
cmpsb
push
mov
test
notl
imul
movsb
xlat
test
cmp
lmsw
std
lds
das
sub
mov
out
int
les
inc
pop
shlb
pop
jecxz
sub
mov
ret
pop
and
mov
xchg
sub
mov
jbe
ss
ds
in
mov
jmp
mov
bound
cmpb
sub
mov
in
pusha
ljmp
and
jne
in
push
scas
push
lods
sub
out
xorl
push
jg
cmp
mov
jecxz
jle
ds
rol
in
mov
outsl
sbb
mov
imul
in
cmp
rep
dec
jmp
mov
pop
pop
fbstp
mov
inc
xlat
jmp
jmp
push
sub
mov
push
sti
xor
std
dec
ret
js
lahf
xor
add
unpckhps
stc
push
pop
mov
push
push
xor
test
mov
jns
sarb
popf
sub
cld
add
iret
es
lds
push
icebp
mov
hlt
iret
mov
insb
jb
inc
cmc
imul
push
jne
nop
xchg
mov
xchg
mov
imul
xor
test
xchg
sbb
xchg
xchg
cld
sub
or
adc
cs
xchg
in
test
add
jo
push
stos
push
push
leave
lret
jbe
cwtl
dec
fnstsw
xchg
mov
pop
xor
cs
and
cmp
mov
mov
jnp
pop
xchg
sarl
into
clc
stos
aaa
lahf
int3
int
push
addr16
sub
xchg
jne
notl
inc
mov
fs
jmp
jl
ja
arpl
aaa
mov
or
adc
jp
pop
or
iret
fsts
jmp
fucomp
das
mov
test
pop
xchg
mov
lods
sar
jl
push
fldcw
or
lock
and
xor
mov
mov
add
xchg
aad
xchg
or
pop
or
xor
cmp
push
mov
mov
mov
add
or
int3
lcall
mov
or
mov
loopne
int
ficoml
push
push
enter
mov
aam
add
inc
sbb
movsl
inc
stos
sub
add
je
inc
bound
adc
vrcpps
cmp
add
sarb
bound
jbe
sub
push
popl
test
jns
dec
push
xchg
push
out
pop
aaa
lods
fwait
adc
mov
adc
xor
gs
inc
add
push
mov
and
pop
mov
pop
int3
out
mov
testl
inc
inc
cld
faddp
pop
and
xor
jge
adc
sbb
jmp
int
mov
fildll
cmp
outsl
pop
fmull
jge
testl
inc
out
pop
enter
out
adc
sbb
push
cmp
divl
dec
movb
out
dec
mov
fwait
mov
mov
xchg
gs
clc
mov
push
mov
pop
fdivs
mov
ja
pop
dec
xor
sub
out
fwait
addl
mov
fmulp
out
dec
lods
test
add
in
dec
jle
pusha
cmp
mov
bound
add
cmp
rorb
xor
out
mov
rorl
repnz
divl
mov
insl
je
adc
pop
mov
jmp
int3
add
fsubl
adc
inc
jno
rorl
test
sub
xor
rorl
sub
gs
aam
cmp
xchg
insl
sbb
subb
popf
push
insl
xchg
inc
nop
add
int
jge
int3
cmp
xor
pop
mov
mov
push
lret
cltd
loopne
lds
mov
fdivr
sahf
ret
fs
cmp
jecxz
jb
lret
xorb
jp
xor
mov
cltd
call
pop
mov
or
test
or
add
xchg
dec
mov
xor
pop
cltd
int
inc
mov
push
pop
loopne
scas
lea
lcall
dec
jnp
jp
jne
pop
jne
js
mov
cmp
sbbb
jg
andb
mov
push
rolb
mov
pop
loope
iret
xchg
and
loop
pop
pop
dec
xchg
lea
jne
or
pop
test
inc
mov
movsb
ret
mov
and
or
cmp
aaa
lret
loop
dec
sub
jne
loop
das
and
in
add
xchg
inc
pop
repz
testl
and
incb
mov
lret
inc
pop
lahf
mov
mov
xchg
outsl
insb
in
pop
inc
pop
call
pop
sahf
ds
mov
jno
pop
les
pusha
mov
lods
sbb
and
insb
jle
cltd
gs
test
adcb
lods
popa
ljmp
negl
dec
insl
clc
leave
je
rol
pop
mov
sub
ret
mov
sbb
stos
mov
add
outsl
or
mov
pop
jns
mov
mov
or
xchg
pop
fwait
lcall
cmp
loope
outsb
jno
pushf
int3
jnp
lods
lret
enter
push
imul
mov
in
dec
in
mov
repnz
mov
sub
push
push
or
inc
insl
movsl
sub
bound
testb
or
shl
jle
sbb
jecxz
out
pop
jbe
es
bound
push
sbb
rcl
push
movsl
or
das
mov
pop
pop
gs
sahf
andl
in
jo
push
sub
jmp
jns
jp
or
test
jmp
xor
xor
shld
ja
mov
pop
int
mov
dec
scas
jae
or
int
lcall
popa
push
pusha
inc
dec
fbstp
inc
fmull
es
je
popa
leave
shll
adc
push
push
mov
shll
add
ds
popf
and
out
mov
push
test
and
jp
and
inc
cmp
into
mov
sarl
insl
xorl
mov
xor
jno
and
movsb
xor
jne
sub
pusha
mov
int3
insb
pop
mov
sub
pushf
fninit
test
or
cltd
push
aaa
mov
push
inc
lret
mov
fstp
aas
inc
testl
adc
lods
in
adc
arpl
lods
mov
mov
in
data16
das
ss
out
inc
mov
sub
push
ret
popf
cmp
or
fs
xchg
nop
or
adc
inc
dec
jae
icebp
mov
xchg
leave
cmp
pop
fistpl
pop
roll
pop
sar
movsb
pop
mov
in
mov
sahf
pop
and
add
negb
xor
inc
pop
sub
into
int
sti
add
loope
xchg
push
inc
dec
inc
xchg
jb
cltd
js
cmp
mov
mov
jbe
jae
pop
jns
rcll
push
lods
inc
cmp
add
dec
rol
sbb
out
scas
cmp
mov
jecxz
push
pop
enter
and
cltd
sti
and
and
scas
bound
lret
out
scas
push
test
jge
add
frstor
cltd
xor
fistl
shll
gs
inc
mov
sarb
mov
inc
and
adc
sub
mov
pop
pop
inc
test
jge
sbbl
jno
sbb
imul
sbb
inc
pop
movsb
lea
fsubs
cmp
iret
inc
in
lcall
xor
xchg
xchg
push
mov
aaa
mov
cli
sbb
jecxz
cmp
xchg
fdiv
sbb
xchg
inc
mov
hlt
push
rolb
cmp
loop
lret
fwait
xor
push
xchg
stos
push
sub
cmp
and
lahf
dec
test
xor
rolb
jle
jae
sbb
data16
lods
loopne
xchg
and
xchg
enter
mov
xor
imul
pop
ret
adc
mov
lcall
int3
inc
xor
ljmp
fcoml
jo
out
cmp
fisttpll
jmp
andnps
push
dec
jl
push
addr16
insl
xchg
jge
ja
sti
sub
or
sbb
xor
adc
inc
jecxz
loopne
cld
sbb
inc
jnp
fwait
out
sbb
aaa
out
adc
mov
mov
rorl
pop
mov
movsl
mov
popa
hlt
incb
push
inc
les
jno
push
pop
sbb
iret
xor
cmp
pop
ds
lret
out
jecxz
mov
fildl
pop
shl
int3
push
inc
sub
test
xor
ja
push
fsubrs
xor
in
push
in
imul
loop,pn
lds
lods
sub
mov
clc
fildl
fnstcw
xor
sarb
sti
iret
mov
dec
xlat
ficoml
fstpt
fistpll
inc
popf
mov
mov
cmpsb
mov
or
imul
push
mov
daa
jp
int3
in
ljmp
ret
rolb
pop
addb
adc
adc
out
adc
nop
call
dec
out
xor
lret
out
icebp
jecxz
adc
stc
in
repz
ja
fsubr
in
fsubrs
or
ja
jp
mov
jmp
pop
fdivl
inc
out
mov
in
testb
mov
testl
cmp
es
sub
pop
fsubl
adc
dec
adc
and
pop
adc
push
fldl
dec
jp
das
pop
ss
add
aam
popf
mov
daa
movsl
adc
in
lcall
imul
stos
int3
or
scas
test
push
push
jle
daa
daa
rclb
das
and
into
xor
push
add
pop
and
lret
popa
adc
fcoms
adc
xor
test
cmpsl
sub
test
out
xlat
jecxz
sub
nop
rorb
push
add
sbb
add
imul
add
es
sub
cmpsl
xor
push
stc
dec
mov
xor
in
jp
ficoms
xchg
stos
cmp
adc
pushf
mov
arpl
and
sahf
fcoms
inc
ficomps
fisubrs
xchg
pop
es
add
xor
shll
movsl
cs
shlb
push
aaa
rolb
or
cmove
jbe
outsl
jge
push
lods
push
xlat
dec
jmp
mov
hlt
push
in
ja
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
call
inc
popa
rcrb
push
push
pop
int
in
jmp
mov
enter
popf
inc
aas
inc
xor
and
nop
pop
arpl
dec
es
mov
jb
arpl
repnz
pop
in
add
popf
mulb
cmpsb
inc
lahf
fnsave
leave
sti
jne
or
jo
push
mov
sbb
out
cmp
dec
push
pop
mov
repz
pusha
cmc
lea
insl
repz
mov
add
jl
cmp
cmp
push
push
insb
push
cmp
cmc
jb
addl
fisttpl
xchg
add
dec
mov
sbb
test
sahf
into
call
movsl
mov
jmp
mov
pop
daa
cmpsl
or
fidivs
dec
push
jb
sarb
jno
xor
cmp
or
xor
popf
movsl
mov
adc
push
cmovno
mov
inc
jmp
dec
push
jb
lret
mov
cwtl
popf
dec
ss
and
lahf
and
lock
outsl
notl
movsb
sahf
push
jp
mov
outsl
fwait
pop
pop
add
mov
jbe
dec
push
dec
inc
xor
arpl
or
jg
lcall
adc
adc
jb
cld
xor
xor
lock
add
jnp
or
fdivl
js
sbb
pop
mov
das
cmp
adcl
mov
and
imul
jno
jbe
lret
pop
mov
imul
repz
daa
and
lock
or
mov
lret
stc
push
jae
adc
mov
xchg
je
jle
or
mov
sbbb
inc
cld
inc
xor
stos
pop
push
je
sahf
into
xor
aas
jle
lcall
mov
xchg
gs
mov
sub
dec
push
mov
mov
cmpl
mov
mov
push
mov
lret
xlat
sti
sbb
and
loope
mov
shll
jne
push
shlb
jg
xor
or
imul
mov
nop
xor
dec
pop
cs
pop
dec
and
inc
jmp
out
and
in
jbe
jne
cmp
loopew
lods
push
pop
lcall
dec
or
adcb
xchg
cmp
mov
enter
mov
cld
mov
je,pn
outsb
ret
in
mov
rcr
ret
mov
daa
roll
xchg
dec
lcall
bound
clc
xor
cmp
push
cvtps2pi
stos
dec
mov
movsb
cli
dec
shlb
divb
xchg
test
sti
fwait
dec
mov
in
int
idivb
out
jo
push
pop
mov
pop
aad
ljmp
stc
gs
mov
cmpsl
mov
scas
cmp
test
fadd
jmp
push
pop
adc
inc
insl
cld
push
mov
inc
sbb
xor
pop
mov
jbe
adc
push
cwtl
sbb
add
xor
cmpsb
mov
hlt
aad
adc
sbb
add
gs
sbb
cmp
xchg
jle
ljmp
xlat
add
outsb
pop
ss
mov
enter
and
shlb
loopne
push
cli
out
clc
dec
fs
xchg
jnp
and
sub
test
mov
push
test
test
aad
es
fs
push
inc
leave
xchg
stos
bound
movsb
negl
jbe
or
popa
and
insl
or
js
mov
sar
xlat
and
cli
xchg
pushf
xor
pop
pusha
movsl
sub
mov
adcl
add
out
test
fstp
jg
jb
lods
in
icebp
scas
sbb
mov
lea
les
popf
scas
mov
sub
cmp
xchg
scas
adcb
mov
jecxz
dec
mov
and
imul
aas
jge
fs
pmaddwd
mov
xchg
and
adc
mov
push
cmc
mov
push
clc
aad
testl
std
cltd
outsb
fistpll
push
mov
jp
and
scas
or
or
push
inc
ficomps
leave
push
testb
ljmp
fsubrl
add
xorl
or
inc
mov
cltd
inc
pop
fbstp
xor
sub
stc
push
imul
xchg
add
mov
subb
sub
outsl
popf
lds
push
cmp
jp
dec
rol
incl
in
negb
out
mov
push
pop
and
jne
lahf
mov
dec
enter
xor
movsb
and
rcrl
inc
add
aas
fs
sbbl
jns
fsubrl
test
and
adcb
dec
xchg
jle
adc
in
add
ja
sub
pop
mov
test
jge
aaa
daa
mov
xor
test
mov
inc
cmpsl
out
jo
shl
or
dec
std
ret
rorl
sub
lret
fisubl
inc
mov
sub
out
mov
ss
mov
lods
sub
popa
popa
call
mov
mov
or
shl
repnz
adc
shlb
clc
js
or
dec
inc
roll
inc
push
out
mov
mov
insl
adcb
sbb
mov
push
jbe
pop
in
fisttps
push
mov
push
adc
sar
push
mov
push
fisubrl
test
loopne
mov
popa
mov
xor
das
mov
mov
and
cmpsl
xchg
rorl
xor
and
stos
repnz
xchg
fcomps
test
sbb
pop
jns
inc
and
cli
push
and
ret
std
imul
xor
loop
dec
cmc
sahf
adc
bound
test
pop
cmpsb
cmpl
push
push
std
jle
mov
jnp
mov
gs
lock
mov
or
orb
xchg
rorb
mov
jg
jl
push
and
lret
mov
cmp
mov
loope
push
mov
test
push
push
sahf
xchg
sub
out
push
xor
and
mov
adc
pop
ljmp
lods
pop
stos
add
jno
rcrb
fcmovne
mov
clc
lods
gs
xchg
add
scas
out
mov
xor
and
cmp
xchg
mov
lret
movsl
and
scas
push
push
movsl
push
pop
push
ss
sbb
inc
mov
cmp
and
pop
or
xchg
pop
adc
repnz
imul
out
pop
clc
scas
cld
stos
cmpsl
mov
lea
xchg
xchg
jle
in
out
or
sbb
sub
loope
inc
xchg
xchg
xchg
popa
lods
fwait
sbbb
mov
insl
sti
mov
fsubrl
push
out
jno
jno
jb
dec
aad
mov
push
frstor
inc
cltd
in
fdivs
ljmp
lds
in
js
es
pushf
mov
mov
push
outsl
mov
jmp
inc
inc
push
jmp
dec
lock
sub
test
mov
inc
push
loope
out
mov
sbb
fwait
out
aaa
gs
pop
jmp
arpl
pop
and
repnz
mov
mov
adc
pop
xchg
lock
jae
xchg
iret
ffree
sbb
sub
test
jmp
push
push
ret
out
xor
and
cmpsb
dec
lock
outsb
mov
cmp
ljmp
aad
out
insb
dec
inc
and
test
push
enter
sub
test
in
in
mov
push
mov
cmp
inc
sbb
xchg
pop
test
je
aad
faddp
xchg
insl
xor
inc
jnp
dec
adc
lods
test
jno
adc
or
xor
int3
in
insl
push
cmp
negl
sbb
add
popa
mov
in
mov
in
adc
mov
and
and
xlat
ret
insl
mov
dec
mov
xchg
lret
jge
pop
icebp
fisubl
fcmovbe
cmc
imul
xchg
xchg
mov
in
and
mov
xchg
dec
pop
pop
and
pusha
mov
cld
cltd
testb
push
popa
pushf
or
outsb
xchg
call
jg
dec
push
and
pop
ds
mov
fwait
pop
jl
adcb
cmpsl
insb
out
lcall
sbb
and
leave
mov
nop
cs
pop
mov
sbb
jmp
xchg
adcb
iret
icebp
lcall
loope
addl
push
mov
dec
lret
iret
loopne
fstl
addr16
sbb
xor
outsb
cmpsb
fiadds
ss
in
out
mov
sarb
mov
arpl
sbb
movsb
push
pop
loopne
popa
mov
imul
and
insl
mov
ljmp
jle
pop
test
negb
sbb
sub
cmpsb
ja
stos
mov
out
xchg
mov
jmp
push
dec
bound
aam
ss
mov
push
cmp
mov
and
lods
scas
movb
test
les
hlt
xchg
cltd
idiv
adc
jge
imul
jp
mov
aaa
mov
dec
adc
mov
cmp
xor
pop
adc
adc
js
lret
arpl
lret
adc
into
jg
mov
xor
lret
xor
mov
pushf
in
mov
and
add
jnp
out
enter
push
repz
xor
pop
xchg
jecxz
bound
push
mull
pusha
mov
outsl
icebp
jae
jle
adc
xchg
xor
and
loope
flds
push
pop
mov
enter
fstpl
adcb
rcrl
push
or
rorb
dec
lds
xor
sbb
jae
adc
popf
xor
out
xchg
pop
bound
movsl
pop
xchg
pop
rolb
cmp
add
mov
sbb
scas
push
or
fisttpll
nop
out
jge
int
push
push
bound
dec
push
icebp
jns
leave
cmp
insb
popf
push
xchg
ror
mov
enter
adc
push
cmp
sahf
and
repz
mov
pop
pop
pop
lods
xor
je
mov
sbb
xor
std
mov
fstl
adc
and
jns
sub
test
pop
fnstsw
mov
push
jns
pop
out
push
daa
mov
into
pop
pop
cmp
jmp
mov
lock
jp
push
or
lea
xchg
loopne
arpl
insb
repnz
std
leave
mov
std
pop
aam
or
loopne
clc
cmpsl
enter
sti
call
push
sbb
or
or
jp
mov
mov
push
loop
sub
cmp
sar
outsl
sbb
inc
push
mov
in
lock
daa
sbbl
xchg
mov
xor
add
cld
nop
sbb
call
push
lahf
roll
cmp
js
imul
repz
jo
popa
xor
ret
adc
test
das
js
sub
lds
adc
and
test
lret
add
repnz
sub
xlat
push
fnstcw
adc
std
addr16
pop
movsl
ds
xchg
cmc
insb
in
lcall
pop
cmp
sub
jl
gs
movsb
cli
fsubr
mov
inc
cmp
jecxz
push
aam
jnp
pop
stc
mov
leave
push
jns
fsubs
imul
mov
mull
loope
leave
iret
repnz
adc
push
lds
fbstp
jo
repnz
pop
movsb
mov
cwtl
fldenv
xor
rol
xor
mov
cmp
cli
adc
orl
jno
testb
andb
clc
xchg
jbe
inc
clc
ljmp
sti
das
xchg
mov
fstps
hlt
ljmp
dec
cld
cmpsl
mov
jg
hlt
or
call
push
and
mov
stos
inc
lret
pop
je
enter
enter
jecxz,pt
fdivrs
xor
out
sub
mov
adc
or
stos
out
sub
int3
jmp
test
loopne
mov
mov
jecxz
jge
in
xlat
daa
call
xchg
stos
leave
mul
or
pusha
test
mov
and
je
dec
inc
pop
loop
inc
mov
out
mov
fs
xlat
or
cltd
sub
xchg
or
pop
rcrl
sahf
jne
fcmovbe
jne
dec
cmpb
xchg
jne,pn
add
lods
outsb
loop
sbb
pop
pop
jbe
adc
sub
imul
inc
mov
je
jmp
ret
dec
xchg
sub
rcr
sub
sbb
mov
xchg
arpl
dec
adc
addl
es
repz
aam
in
jne
test
mov
pushl
mov
jle
dec
loopne
pop
mov
ret
mov
xchg
jecxz
push
cmp
pop
mov
inc
adc
inc
mov
xchg
fcoms
xor
ret
mov
js
push
cmc
je
mov
sbb
jb
jae
sbb
jb
push
lock
sbb
movsb
adc
jg
adc
xchg
cld
pop
sbb
cmp
cmp
scas
cmp
stc
mov
or
jbe
xchg
jo
push
pusha
xor
out
push
adc
loopne
xor
push
jnp
or
mov
jmp
xor
imul
xor
cmp
sub
es
lea
mov
jp
pop
add
mov
push
shr
cld
sbb
jo
test
cmp
out
mov
mov
mov
mov
xchg
loope
mov
popa
cmp
inc
outsl
inc
and
loopne
cmc
fimull
add
jo
mov
int
lods
inc
inc
fldenv
jge
fs
mov
push
cmp
inc
stos
test
hlt
aam
and
adc
dec
daa
fstl
cmp
movsl
andl
push
dec
das
ds
sahf
cmpsl
pop
push
jb
mov
mov
sbb
lods
inc
xlat
inc
cltd
push
shlb
cwtl
cld
pop
xchg
push
fstl
xchg
sub
push
xchg
mov
mov
adc
xor
add
mov
or
jge
popf
scas
push
sub
out
inc
or
inc
xchg
or
and
fwait
repnz
out
jl
addr16
ss
jle
cmp
cmpl
rcrl
sub
cmp
dec
into
out
int
push
jmp
ljmp
ds
std
in
stc
nop
insb
stc
ret
xor
dec
rcrb
outsl
dec
pop
cltd
addr16
fsub
out
and
std
sahf
lods
sub
lret
lcall
shlb
int
mov
pop
xchg
push
mov
sbb
cmp
lds
loopne
adc
adc
sub
fisttps
push
push
fstpt
ret
xchg
push
out
aam
pop
leave
xor
pop
push
aaa
mov
stos
xchg
lods
popf
les
jmp
stos
add
scas
inc
cmpl
or
xchg
mov
ret
cmpsl
xchg
pop
cli
jb
cmc
jge
mov
xor
lret
mov
jmp
mov
sub
dec
xlat
cmp
mov
cmp
shlb
call
mov
subb
loop
or
stos
dec
cmp
into
scas
roll
and
adc
loopne
rcrl
push
hlt
lea
mov
xchg
push
mov
lds
adc
mov
push
into
scas
pop
add
mov
mov
ljmp
int3
and
cmp
fsubl
mov
hlt
daa
mov
inc
out
or
add
aam
mov
jle
xchg
mov
cs
fcmovnb
mov
rcll
stos
loope
fcos
loope
movsl
ret
lods
xor
push
xchg
dec
out
cmp
sbb
orb
addr16
sbb
movsl
clc
dec
add
lods
out
sbb
or
jge
add
xchg
js
pop
adc
es
mov
jnp
aam
or
xor
and
enter
clc
push
push
cmove
testl
fisubs
ja
adc
add
test
into
mov
pop
insl
dec
mov
cmp
pushf
popf
cltd
aas
push
xor
or
sbb
dec
loope
xchg
je
sub
and
add
repnz
jb
push
in
cmc
scas
pop
cltd
jg
sahf
mov
sahf
ror
ds
sbb
ficomps
push
xorl
dec
inc
flds
mov
push
imul
mov
je
mov
rcrl
and
fldcw
xor
pop
ret
movsb
dec
les
cmc
xchg
lret
cmp
push
iret
jb
sbb
mov
je
filds
push
push
hlt
lret
jae
rorl
mov
orb
mov
and
xchg
cwtl
adc
xor
dec
fmuls
pop
add
cmp
in
lahf
enter
arpl
cwtl
sub
bound
aam
gs
mov
subb
or
or
subl
insb
xchg
xchg
scas
sbb
push
clc
test
push
insb
sub
icebp
lods
incb
daa
mov
pop
stos
imul
dec
push
pop
push
sti
ret
mov
jp
out
test
pop
xor
test
push
and
xor
sub
inc
pop
mov
push
scas
or
mov
sbb
adc
fwait
mov
pop
mov
arpl
pop
outsb
aas
mov
fcmovb
stc
dec
dec
push
xchg
push
push
mov
jb
in
rorl
orb
pop
popf
jns
mov
inc
mov
in
lea
adc
inc
pop
xchg
aaa
lret
jecxz
and
jmp
pop
dec
jp
adc
dec
mov
outsl
jl
jns
insb
sub
mov
add
push
xchg
mov
push
jbe
gs
mov
fisubrs
xor
rcrl
xor
cmp
add
lock
jae
jo
out
rclb
sub
imul
stc
sahf
shrb
pop
jmp
inc
push
pop
arpl
pop
ror
pop
pop
or
lret
xchg
jae,pn
cltd
in
das
lret
xchg
loopne
cmp
repz
push
sbbl
mov
test
mov
mov
int3
ret
outsb
mov
ja
fistl
mov
lods
cs
mov
jae
sub
negl
ret
js
or
stc
int3
adc
das
and
sbb
adcb
and
push
xchg
sbb
xlat
je
sub
in
mov
push
stos
pop
std
imul
fsubl
jl
push
pop
jmp
mov
popa
push
sbb
insb
lcall
insl
pop
dec
in
mov
ja
sub
cs
aaa
fdivrs
nop
pop
sbb
pop
lock
cltd
push
dec
pextrw
cwtl
pop
out
push
inc
push
lret
xchg
and
loope
rcrl
lods
into
mov
fidivrs
push
sbb
mov
aam
and
jae
mov
jbe
bound
push
and
sbb
std
xorl
stos
lods
inc
movsb
sbb
aad
insl
jmp
pusha
outsb
xor
cmp
popa
mov
test
xchg
mov
dec
popl
cmpl
xlat
mov
fs
jne
fs
lods
ljmp
and
cmc
bound
xchg
jle
lret
fwait
outsb
enter
xchg
mov
mov
repnz
xor
push
ja
jne
jbe
mov
aas
filds
push
sub
pop
push
inc
or
testb
cmp
cmpl
ss
test
adcb
push
ret
stos
push
push
cmp
pusha
mov
jbe
movsl
xor
pop
scas
sub
sub
push
in
jo
push
pop
lds
jl
jecxz
rorb
inc
popa
cltd
int3
jecxz
sbbb
mov
sub
pmulhw
pop
popf
dec
push
sbb
sub
jecxz
movsl
cmc
adc
fucomp
es
dec
cmp
repz
daa
pushf
xchg
inc
pop
fwait
call
pop
push
cmpsl
xchg
jnp
fidivrl
cmp
mov
sbbl
xchg
mov
call
loop
rcrb
mov
or
scas
cwtl
jmp
pusha
push
inc
lahf
fwait
or
jne
or
loop
pop
fwait
jb
lods
mov
popf
mov
ret
outsb
jbe
iret
jo
pop
cli
mov
sbb
pop
sub
popa
xchg
mov
fisubrs
sub
repnz
fwait
arpl
mov
incb
adcl
jnp
jge
mov
test
fisttpl
dec
mov
push
movsl
movsb
jne
add
jg
outsl
add
or
scas
int3
or
pop
mov
lods
in
fadd
sbb
sub
mov
test
mov
divl
xchg
mov
sarb
mov
and
bound
jle
mov
cli
pop
pushf
push
xor
jl
mov
std
inc
stos
sbbb
lods
pop
pop
and
xlat
adc
sahf
mov
inc
or
lea
insb
fwait
xor
xchg
ss
loope
inc
inc
jae
sahf
pop
out
pop
adc
inc
add
stos
leave
aam
enter
hlt
ja
xor
in
push
mov
enterw
cld
cmp
mov
adc
leave
fstps
mov
ljmp
push
sbb
pop
xchg
cmpb
and
cmp
sub
sbb
nop
cmpsb
lock
xchg
mov
push
mov
scas
jg
add
fidivl
adc
shll
pop
out
mov
xchg
sbb
lcall
cwtl
adc
mov
fadd
and
sbb
jl
xor
ret
sbb
lock
je
sbb
sbbl
or
xor
mov
lods
and
push
mov
sub
shl
add
mov
adc
xchg
cmc
pop
call
div
jne
mov
inc
inc
push
and
and
ljmp
sti
lret
cmp
jo
jb
dec
push
xchg
mov
insl
popl
or
dec
pop
test
cmpsl
xor
mov
sbb
jns
movsl
in
fldcw
lods
nop
or
out
inc
dec
sahf
pushl
mov
dec
icebp
ljmp
js
mov
push
rol
cmp
sbb
imul
ret
xchg
inc
pop
mov
or
mov
mov
movsl
repz
dec
adc
test
pop
jae
ror
xchg
sub
js
sbb
push
insb
cltd
mov
mov
add
mov
shl
and
idivb
inc
sub
mov
xor
test
add
loope
push
sub
aam
addr16
mov
or
out
sahf
call
pusha
pop
out
data16
ljmp
xchg
jecxz
pop
divb
xchg
mov
xchg
clc
movsb
xor
mov
lods
pusha
mov
mov
roll
sbb
aam
mov
test
jo
gs
xor
ss
dec
pop
dec
mov
dec
sbb
adc
lcall
jecxz
add
bound
xor
mov
or
dec
mov
cli
and
pushf
jecxz
in
stos
xchg
fnstcw
lret
dec
xchg
adc
into
insl
xor
je
mov
xor
out
sarb
sub
repz
daa
push
pop
rcrb
into
or
nop
cltd
jnp
stos
dec
sbb
xchg
add
push
push
hlt
push
pushf
imul
int3
divl
lret
pop
cmp
pop
mov
mov
sub
movsb
arpl
test
add
add
jno
mov
xchg
es
lods
xchg
fld
push
ljmp
fdivrl
mov
sub
cmpb
lods
sub
mov
out
jae
adc
pop
shll
repnz
or
or
push
jno
push
shr
sbb
mov
add
push
add
loope
pop
sub
mov
es
and
int
inc
jmp
call
inc
inc
pop
cltd
data16
call
idivb
out
ds
mov
cmc
shlb
mov
pop
xchg
sarb
push
cltd
mov
mov
rcrb
leave
sti
cmpsb
lret
inc
roll
sub
jb
push
fimuls
mov
testl
les
xor
push
adc
test
mov
mov
pop
adc
js
xor
push
hlt
aad
sbbl
in
icebp
aad
sbb
lods
popa
fs
inc
xchg
pop
lcall
push
sbb
mov
loopne
cli
test
add
sbb
ret
in
scas
dec
sub
jae
mov
repnz
les
dec
push
jecxz
adc
xor
pop
push
pushf
cmp
aam
sub
test
push
push
jle
movsb
mov
out
loope
cmp
das
cmpsl
jl
inc
inc
adc
or
ficoms
inc
loop
mov
out
rolb
mov
je
test
test
pop
aas
push
cmpsb
in
pusha
inc
aam
aam
lret
ret
mov
lcall
dec
jecxz
ret
out
lock
orb
cld
in
call
jb
jae
sbb
daa
cmp
or
pop
movsb
mov
dec
ret
xchg
mov
popa
inc
mov
imul
arpl
or
push
shr
in
shlb
data16
std
fldt
ficoms
gs
pop
popf
fmull
std
or
pop
xlat
xor
sbb
loopne
jecxz
xlat
mov
pop
in
leave
adc
lock
stos
mov
cmp
inc
fcomps
inc
out
mov
dec
push
pop
sar
andl
mov
mov
xchg
mov
leave
or
test
shll
jbe
cmpsl
imul
icebp
out
xchg
inc
hlt
fs
lret
out
dec
pusha
xchg
and
data16
dec
je
push
fldt
jbe
pop
sbb
sbb
int3
mov
dec
push
test
data16
push
aam
mov
dec
xchg
sbb
je
repnz
sbb
dec
mov
mov
pop
lods
mov
cltd
outsl
pop
gs
push
mulb
lcall
out
mov
sub
inc
sub
xor
mov
and
mov
shr
pop
pop
sti
movb
xor
push
mov
xor
sbb
push
out
rcrl
scas
adc
push
lds
xor
sbb
mov
das
cmpb
leave
cmp
or
std
mov
pop
lcall
mov
popf
mov
inc
rorl
cmp
and
out
jbe
cmpsl
jo
mov
sbb
out
mov
fs
sub
mov
std
add
xor
mov
lcall
jecxz
pusha
lcall
insb
incl
shl
ret
call
push
or
jp
inc
xchg
popa
cwtl
mov
ret
adc
out
and
mov
jg
mov
cmpsb
lret
inc
or
lock
cmp
cld
cmp
mov
jge
push
pop
sti
pop
pop
xchg
push
in
movsl
jo
xor
pushl
mov
sub
pop
pop
std
xchg
pop
mov
pop
ret
mov
popf
cwtl
sub
xchg
movsb
mov
push
push
pmulhuw
jno
and
mov
stc
xorb
xorl
push
cmc
dec
pusha
cltd
mov
iret
lods
mov
popf
adc
loop
dec
ss
xor
pop
ljmp
mov
adc
jns
ret
shl
in
lahf
push
xchg
add
and
loop
xor
mulb
test
cmp
mov
sti
xor
pop
ss
cmp
add
out
fisubrs
mov
push
inc
mov
flds
add
mov
sbb
dec
xor
pop
dec
nop
orb
insb
out
cmpsl
popa
sub
lcall
imul
inc
shl
jp
xor
scas
and
and
pop
pop
fwait
dec
sbb
leave
movl
mov
gs
jnp
xchg
in
rcr
lea
or
cmp
pop
dec
dec
lcall
mov
orl
fimull
dec
mov
jns
repnz
xor
xor
rcrl
cmp
push
sbb
adc
std
add
cmp
lea
add
mov
mov
push
lahf
jmp
inc
out
jmp
inc
pop
dec
and
mov
aam
fnsave
leave
xchg
ret
ss
ljmp
mov
adc
push
fsubrl
sti
gs
mov
fsubs
clc
lret
divb
sti
pop
sahf
sbb
adcb
sbb
push
jp
lds
shll
xchg
aas
or
ss
fstpt
xor
stos
pop
fld
sbb
mov
pushf
icebp
mov
and
stos
imul
stc
jno
lret
dec
jg
push
ja
xor
ret
and
cmpsl
inc
push
push
and
mov
das
clc
test
inc
sub
mov
inc
xchg
or
in
in
mov
and
xchg
cmpsl
pop
fidivl
negb
scas
adc
sahf
xchg
rolb
mov
iret
mov
xchg
xchg
pushf
jg
popa
xchg
xlat
test
adc
int3
scas
rcrl
xor
shll
inc
xor
mov
dec
and
inc
clc
sub
push
outsl
xor
rcrb
adc
test
into
pop
and
test
xlat
mov
testl
insl
movsb
je
fisttpll
xchg
jbe
fdivl
movsl
sub
int3
loopne
mov
fnstcw
popf
push
imul
dec
xor
lahf
mov
and
sarb
fidivrl
dec
push
movsl
adc
ffreep
shll
push
sub
push
xor
xchg
or
xchg
cwtl
dec
daa
shlb
rcrl
or
fwait
dec
pop
fisttpll
xorl
test
daa
je
aad
dec
add
xchg
mov
xchg
xchg
adcl
int3
mov
sub
in
js
sub
cmp
jl
push
in
out
cmp
inc
lret
mov
pop
lcall
sbb
pop
and
mov
mov
cli
cmpsb
jae
mov
int3
cmp
xchg
push
dec
andl
lahf
push
or
xlat
adc
bound
mov
mov
std
out
cmp
leave
sti
das
out
inc
jge
jmp
stos
nop
fnstsw
inc
jecxz
mov
lcall
dec
sub
ficoml
xchg
add
in
xchg
rcrb
lods
dec
pop
and
fistps
cmpsl
xchg
das
cwtl
test
mov
scas
mov
aam
test
sbb
insl
add
pop
cmp
sub
ds
repnz
insl
sub
mov
mov
add
sbb
std
hlt
fsubl
in
insb
adc
subb
daa
mov
sahf
lock
sbb
imul
dec
scas
or
xor
ss
dec
cmpsb
inc
mov
data16
cmp
adc
popf
xchg
std
jo
aas
jl
notrack
push
pop
popa
repz
xor
cmp
das
sti
inc
jbe
fsts
adc
mov
push
dec
cmpsb
jle
jnp
pusha
imul
pop
sti
sar
popa
push
mov
fldenv
in
jmp
and
push
push
rcl
fldl2e
jecxz
sub
xchg
rol
pushf
dec
push
xor
dec
push
es
dec
xchg
gs
test
sbb
add
mov
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
call
popa
rcrb
add
in
fiadds
add
and
or
subl
xor
push
pop
xchg
sub
ljmp
into
jecxz
sub
mov
mov
jae
fwait
mov
mov
jbe
mov
icebp
std
loop
xchg
sub
cli
lahf
cltd
xor
dec
sbb
xchg
pop
mov
jns
fnstsw
sbb
and
jle
decl
dec
rcll
xchg
and
popa
lea
push
popa
insb
sarb
push
sbb
mov
sbb
pop
add
fwait
icebp
icebp
push
pop
dec
pop
cmpsl
mov
xlat
rorb
movsb
cmp
jmp
lock
push
pop
cmp
adc
cltd
rclb
lret
ja
jmp
push
sub
shrl
sbb
popa
rcrl
cmc
addr16
add
dec
pop
repz
sbb
incb
jge
or
adc
in
xor
add
and
clc
sub
sub
pop
rolb
repnz
repz
and
sbb
push
xchg
mov
and
les
and
divl
idivb
jo
fsubrs
outsl
clc
imul
pop
cmp
xchg
aaa
fildll
xlat
jecxz
cmp
xchg
xor
pusha
jmp
fisttps
sub
cmc
andb
adc
hlt
mov
out
in
xorb
mov
xlat
aaa
push
sbb
sub
fwait
push
pushf
lock
mov
into
in
xchg
jge
lea
cmp
xchg
sbb
mov
and
lock
test
outsb
mov
jecxz
push
lods
sbb
mov
xchg
mov
aam
jns
xchg
or
sbb
mov
jge
jl
sbb
loopne
test
cmp
in
add
pop
and
adc
lock
or
jae
fdivs
lds
jnp
cmp
mov
adc
pushf
out
mov
jmp
pop
ret
push
pop
and
pop
adc
jl
xchg
sbb
outsl
pop
mov
xor
and
cli
dec
scas
popf
mov
mov
fwait
inc
xor
add
mov
aas
and
je
ds
inc
pop
ret
mov
call
mov
dec
call
mov
adc
dec
mov
imul
cld
dec
xor
add
lods
call
mov
bound
jno
test
and
roll
in
sarb
rolb
je
xor
in
dec
mov
and
adc
or
aaa
mov
test
test
aas
loope
sub
cld
xor
inc
sbb
push
cld
jne
pusha
cmp
dec
xadd
xchg
jbe
adc
shrb
or
or
sti
push
sbb
cmpsb
cmp
loope
inc
or
dec
pop
pop
ficomps
xlat
sbb
cmp
mov
xchg
push
stos
lret
ds
add
pop
js
shrb
xor
test
inc
adc
test
cmpsb
out
mov
nop
lret
movsl
mov
jae
ds
or
sbb
loope
testl
fwait
test
push
xlat
fdivrl
fnsave
iret
pop
cmpsl
stos
inc
popf
push
pop
enter
adc
xchg
pop
mov
jno
popf
stos
popl
jg
jbe
jb
xlat
mov
insb
and
sub
enter
dec
mov
inc
dec
inc
xor
and
das
push
loope
sbb
mov
xor
or
jae
jns
push
repnz
nop
das
loopne
mov
add
rcrb
in
rolb
testb
aam
in
cli
repz
ss
sti
in
or
inc
ret
pop
aas
rcll
jne
jno
add
and
jb
inc
jnp
xchg
loop
ss
fdivrl
mov
fistl
sti
push
jecxz
xchg
lds
jge
fwait
mulb
jb
mov
pop
mov
inc
ret
bound
and
jecxz
mov
mov
jb
xchg
push
or
push
sub
push
out
inc
mov
mov
mov
add
pushf
pushf
lock
and
jmp
imul
push
int3
sbb
mov
std
xchg
add
not
xchg
inc
inc
lock
addr16
xlat
dec
andl
xchg
fistpll
test
scas
mov
movsl
inc
cmp
test
in
cltd
push
dec
cmp
mov
mov
mov
popa
xchg
ss
cmpsb
nop
xorb
mov
cmp
cmp
mov
or
push
sbb
mov
lea
adc
int3
pop
jne
enter
mov
sbb
pop
test
push
cli
xor
inc
jb
jmp
cmp
mov
into
imul
mov
lods
fnstcw
dec
jmp
push
stos
sbb
sbb
add
pop
stos
push
mov
movsb
adcb
sbb
stc
cwtl
xor
pop
popf
lock
rcrl
clc
js
ret
ret
nop
aad
lret
mov
mov
in
jo
pop
loopne
int3
cmpb
out
cs
aam
jns
cmp
cmc
std
pusha
dec
in
mov
cmp
xor
sbb
sti
jmp
popf
push
imul
loopne
loop
mov
adc
jbe
scas
outsb
lea
mov
jne
mov
sub
dec
inc
cmpsb
pop
cs
imulb
arpl
pusha
stos
jo
jae
jae
mov
fsubrp
out
inc
testb
pop
call
icebp
push
lds
ret
loope
push
cmp
adc
mov
stos
cmpsl
shrb
jns
sti
fcompl
adc
sub
idivl
mov
popa
add
stos
cltd
repnz
jp
mov
insb
pop
mov
xchg
aam
jae
pop
mov
mov
xor
mov
sbb
std
lods
insl
sub
ja
sti
dec
mov
mov
repnz
mov
aas
bound
test
mov
lods
dec
mov
cltd
push
cld
outsl
jne
stos
shrl
in
loopne
and
out
mov
in
push
pusha
outsl
lock
jle
inc
and
imul
rcll
ja
lds
das
jmp
aad
inc
cmp
loope
mov
ds
mov
push
push
shlb
push
or
sub
hlt
xchg
inc
dec
movsb
in
mov
dec
mov
lea
jl
push
and
mov
pushf
xchg
aas
aam
imul
negl
mov
push
pop
cmpl
cmp
lret
add
xor
pop
leave
je
cmpsb
jb
ret
pusha
push
mov
sbb
xchg
test
inc
shll
adc
outsl
sub
imul
insb
xor
jae
scas
inc
or
push
aad
xor
jl
out
mov
lret
jae
xchg
sbb
aam
sbb
mov
out
mov
movsl
lret
push
leave
push
imul
xor
jmp
xorl
inc
repz
test
xcrypt-cbc
cmpsl
adc
xor
inc
int3
mov
out
fwait
cmp
lret
lods
andl
or
insb
lret
daa
push
add
push
cmp
xchg
cmpsl
lds
pop
pop
pop
arpl
dec
lret
push
test
xchg
leave
rol
xchg
enter
jl
test
sub
sub
mov
pop
adc
dec
test
adc
sub
mov
pop
push
pop
adc
insb
cmpb
fwait
divb
xor
mov
and
fcompl
inc
sbbb
test
xchg
fstpl
mov
adc
gs
or
mov
cmp
cmpsl
insb
adc
notb
xor
orb
shll
mov
sub
adc
pushf
inc
mov
pusha
inc
xchg
push
sbb
and
adc
hlt
dec
lods
aas
adc
movsb
dec
ja
aaa
mov
sbb
mov
arpl
js
sarl
sub
test
fcmovnbe
nop
lahf
jno
andl
ret
mov
imul
das
jecxz
int
notl
test
pop
fstl
cli
mov
out
in
mov
out
lds
xchg
mov
inc
mov
jl
xchg
testb
nop
mov
cs
lret
jecxz
imull
lret
pop
push
xorb
mov
sub
mov
mov
inc
mov
movsb
rorl
jns
pushf
xchg
in
mov
pop
outsb
notb
add
movsb
jg
sti
insb
sub
rcll
imulb
outsl
or
xor
inc
jge
jl
push
xchg
lcall
mov
stos
fisubs
mov
and
int
sub
or
xchg
aad
inc
into
xchg
pop
push
lea
enter
in
cmp
inc
cmp
shl
fs
stc
stos
xchg
mov
sarl
push
daa
test
push
into
push
cli
add
gs
sbb
cmpsl
pop
mov
data16
shll
lcall
hlt
mov
lret
or
div
cs
dec
enter
push
or
mov
gs
sub
lock
push
push
fdivrp
or
hlt
mov
mov
repnz
popf
stos
and
in
sbb
push
mov
xchg
out
jg
inc
out
mov
fst
outsb
std
pusha
pop
push
icebp
push
push
jp
push
fidivl
es
mov
sbb
popf
lods
and
sbb
sarb
imul
in
test
pop
add
test
rcrb
xor
pop
adc
adc
push
dec
or
dec
mov
sub
int
pop
mov
ja
js
lret
sbb
popa
fistpl
dec
cmp
pop
insb
pop
dec
jge
pop
fs
adc
hlt
jnp
cwtl
fisubs
ret
dec
clc
jmp
pop
lods
rcrb
lcall
xchg
imul
adc
push
pop
pop
loopne
cmp
adc
nop
mov
sbb
repnz
and
push
push
imul
xor
inc
add
xchg
cmp
pusha
add
jmp
fwait
shll
or
or
cmp
popf
push
push
mov
dec
or
out
out
fldcw
sub
xchg
and
push
jb
xor
mov
inc
lahf
jge
sar
js
lcall
mov
lret
pop
jb
inc
jo
stc
shlb
pop
mov
cmpsb
cmp
jnp
cmp
pop
jle
mov
call
idivl
ja
andl
in
loopne
andb
popa
into
sbb
and
sti
jne
adc
int
inc
dec
xor
inc
and
and
test
xlat
shrl
outsb
frstor
ds
jb
pop
sub
addr16
sahf
out
stos
adc
sbb
fsubrl
sti
push
test
lret
pushl
xchg
loopne
int3
pop
orb
rclb
and
pop
xchg
xchg
jle
fisubl
cmpsb
jns
rorl
stos
push
ds
lock
dec
fsubr
into
ds
movsl
xlat
ficomps
out
sbb
pop
into
decb
adc
push
daa
sbb
sbb
or
int
in
mov
adc
lock
scas
bt
imul
push
mov
aaa
jg
and
mov
sbb
mov
sub
mov
sub
sahf
pop
cmpsl
jnp
sti
ja
repnz
jmp
jo
sbb
jl
or
inc
pop
sub
sbb
fldenv
stos
sbbb
mov
mov
and
dec
adc
fsubs
mov
ret
ds
jmp
loope
les
xor
es
out
xchg
dec
loopne
cwtl
inc
popf
mov
cltd
andl
jns
and
pop
lcall
in
iret
stc
ret
dec
mov
jno
and
mov
adcb
jb
or
push
sub
lods
cmp
loop
jns
mov
adc
test
mov
mov
negb
inc
lds
sbb
mov
dec
inc
or
xor
xor
push
xor
mov
shl
jno
aad
fs
jne
ljmp
dec
fstpl
xor
xor
pop
jo
shl
push
out
push
jl
call
mov
repz
adc
fidivrs
jo
mov
jbe
stos
das
push
sub
xchg
pop
sbb
pop
adc
jo
xor
mov
jo
push
push
pop
jmp
cmp
mov
dec
iret
outsl
and
lock
iret
imul
mov
pusha
mov
sbb
fdivp
loope
push
sbb
sahf
adc
aas
sub
mov
imul
sub
data16
xchg
outsb
fmull
ljmp
jg
add
jle
imul
dec
add
jnp
and
sub
sub
addr16
jns
ficomps
jbe
or
dec
rclb
outsl
lods
jo
add
or
jg
int3
js
jne
xchg
lods
push
addb
dec
xchg
iret
cmp
cwtd
push
xor
pop
inc
popa
sbb
jg
add
sahf
leave
scas
bound
lcall
mov
xor
insl
xchg
adc
outsb
lods
bound
mov
gs
jmp
add
pop
cmc
xor
insl
inc
rcll
ret
dec
mov
frndint
orl
cmp
sbb
in
cltd
jbe
xchg
cmp
aas
inc
sbb
adc
pop
inc
and
loopne
inc
daa
test
add
sub
adc
scas
aas
repnz
dec
push
jl
and
test
mov
andb
push
jle
movsl
dec
fs
add
xor
jmp
push
add
ljmp
xchg
inc
pop
stos
mov
mov
outsb
push
cmpsl
xor
xchg
das
sbb
test
stos
inc
jnp
push
inc
jb
out
mov
xor
inc
nop
push
dec
clc
test
outsl
fdivs
sbb
pop
add
adc
lret
xchg
cld
jns
repnz
shll
mov
mov
mov
lahf
testl
es
or
lcall
loop
shrl
cmp
cmp
aas
sti
add
js
imul
outsb
sbb
push
fdecstp
pop
outsl
or
add
cmc
xlat
fsub
pop
xor
insl
or
int3
push
mov
fildll
and
pop
pop
repnz
pop
jge
lcall
push
cmp
sbb
mov
xor
ret
or
mov
or
xor
rcll
andl
pop
das
mov
inc
out
movsb
in
jb
out
daa
mov
stc
adc
daa
jbe
inc
out
adc
add
in
xchg
cmp
cmc
inc
fistps
js
aad
hlt
mov
add
loop
xlat
sahf
jbe
add
pop
add
jmp
leave
sti
sbb
and
xchg
pop
xor
sub
inc
and
sahf
mov
jb
cmp
out
push
or
dec
mov
pop
mov
sbbl
jno
adc
not
sahf
jle
jne
cmp
cmpb
xchg
inc
addb
xchg
mov
or
test
rclb
stc
dec
xchg
loopne
ret
loope
mov
mov
bound
mov
jecxz
and
sbb
icebp
imul
icebp
loopne
lret
cmpsb
or
xor
inc
xorb
push
add
sub
insb
cwtl
addr16
iret
adc
lcall
das
pop
cmp
xor
sub
out
adc
push
adc
and
imulb
fs
dec
pop
or
call
mov
add
cmp
jns
in
fimull
test
cmp
xchg
add
xchg
ds
fld
adc
inc
pop
clc
and
ja
jbe
cmp
sbb
fwait
add
jge
add
stc
pushf
sbb
push
xor
and
sub
aam
icebp
movq
fdivr
loopne
hlt
mov
fs
mov
dec
mov
ja
mov
mov
pushf
in
dec
int
sub
pop
cmp
fdivs
repnz
and
in
sbb
pop
lret
pop
inc
adc
adc
je
in
loop
icebp
mov
cmp
je
or
xchg
mov
sub
movsb
mov
mov
loopne
inc
cmp
testl
hlt
movsb
frstor
dec
adc
hlt
add
push
sub
sbb
ja
dec
cli
nop
dec
jge
out
and
test
ret
fistps
jno
mov
or
mov
mov
push
xchg
jb
and
rcl
clc
cmp
daa
jae
sbb
add
dec
rcr
dec
std
push
pop
add
sub
push
ljmp
popf
or
cmp
fidivs
pop
mov
insb
addb
je
rorl
inc
popf
lret
mov
inc
sahf
pop
jae
mov
mov
sbb
or
dec
mov
sbb
cld
in
shrl
fmul
push
adc
ret
push
fisubrs
mov
shrl
scas
hlt
cmp
inc
mov
jb
sub
imul
cs
inc
lods
js
lods
sub
sbb
mov
je
shll
push
push
jmp
stc
pop
mov
mov
and
outsb
int3
inc
push
push
fucomip
sub
mov
test
pop
mov
cmp
mov
out
hlt
pop
cld
dec
pop
add
xchg
fcomps
adc
or
sti
pop
xchg
aas
add
or
test
je
sbb
ret
sub
repnz
sbb
push
out
ljmp
sub
jmp
sub
fisubl
clc
cmp
lods
cmp
js
call
jne
lods
adc
pop
shl
jmp
push
shl
incb
int3
xlat
shll
mov
repnz
cmp
mov
or
xor
mov
push
xlat
arpl
rolb
pop
ds
cmp
mov
adc
ljmp
loope
pop
in
sbb
mov
jp
push
pop
sub
andl
or
xchg
data16
daa
add
jp
outsl
mov
std
in
es
repz
test
sub
cmp
xlat
and
stc
out
gs
test
cwtl
movsb
mov
and
and
insl
jnp
imul
dec
gs
ljmp
sbbl
sub
and
fsubrl
sahf
aas
mov
or
ds
xchg
sbb
xor
mulps
sbb
movd
or
std
xor
mov
or
aaa
decl
ret
lock
pop
inc
in
lcall
daa
mov
inc
insb
out
xchg
and
lahf
sti
add
inc
aam
testb
loop
sub
adc
jg
dec
lahf
imulb
inc
and
push
inc
and
push
es
cld
push
ret
stos
aad
adc
jnp
imul
mov
or
popf
aas
mov
or
mov
scas
testl
dec
nop
xchg
fstpl
mov
xchg
mov
push
mov
mov
xchg
pop
iret
mov
xchg
out
int3
push
test
xchg
push
lods
adc
les
sbb
xchg
mov
mov
mov
push
jmp
add
or
mov
imul
jp
arpl
aam
sarb
push
sub
loope
add
sti
int
mov
jle
mov
jns
notb
ja
xor
cwtl
ret
push
sbb
or
or
and
repz
cmp
lahf
pop
push
xchg
cwtl
sbb
xlat
repnz
xorl
mov
jmp
dec
lock
mov
in
and
out
pop
push
sbb
pop
cmp
push
test
ror
loope
and
jmp
jne
int
mov
popf
xchg
cmp
xchg
pop
mov
insl
iret
xor
lock
lock
mov
mov
aad
int3
iret
sub
xor
cld
lea
movsl
mov
cmp
xor
add
jl
xchg
aaa
ss
std
aad
sbb
cs
ds
mov
push
lods
cli
inc
dec
aas
nop
mov
int
pop
xor
popl
cmp
sub
lods
jne
pop
sub
sub
or
movsb
jbe
popf
mov
or
or
lods
mov
outsl
out
push
xchg
sub
xor
xchg
push
mov
insb
lea
inc
cmpsb
js
clts
out
pushf
xor
xor
repz
ss
cmp
iret
lods
cwtl
push
xor
ss
and
inc
sbb
xor
cmpsb
and
sub
xchg
mov
pop
inc
push
mov
pop
mov
sbb
sbb
mov
into
mov
call
sub
out
mov
lcall
pop
fmull
out
call
fldz
sub
sahf
out
push
cmp
inc
add
jl
arpl
ja
fildll
dec
mov
jmp
pop
mov
add
jb
repz
mov
cmp
mov
imul
test
shlb
outsl
ds
and
jno
lret
cmc
jnp
xchg
inc
arpl
in
inc
pop
fdivl
sbb
xor
mov
pop
push
rcl
push
sbb
pop
movsb
mov
push
jp
pop
jo
clc
test
xlat
xchg
push
mov
pop
mov
jbe
push
jge
cmc
roll
lret
arpl
mov
adc
sbb
adc
dec
xchg
pushf
sarl
sti
in
mov
mov
push
sub
mov
fidivs
fmul
cmp
xchg
inc
scas
loopne
adc
jmp
lcall
aad
fcmovnu
mov
xor
repz
fldt
fdivrl
jnp
adc
movsl
stc
mov
mov
pop
xchg
ljmp
lret
ss
ljmp
or
out
aam
dec
aaa
cli
fldcw
add
xlat
jmp
jnp
and
outsl
mull
add
loop
add
adcb
cmc
mov
js
xchg
scas
lea
or
movsb
add
push
and
call
mov
cmp
xchg
repz
mov
or
cs
adc
das
out
mov
int3
fs
mov
dec
adc
test
cmp
mov
pop
jge
xchg
cmp
jl
pop
mov
std
aas
mov
cmc
clc
lea
dec
add
sbb
adc
or
mov
sbb
mov
enter
cwtl
adc
dec
gs
cmp
lods
out
push
xchg
sbb
mov
inc
scas
xchg
in
js
push
adcl
cmp
xor
movb
call
rorb
xor
adc
sub
iret
enter
outsb
addr16
sub
adc
int
negb
push
mov
movsb
into
adc
outsl
add
popa
inc
daa
lock
and
stc
sub
push
sub
pop
cmp
mov
hlt
mov
scas
ror
adc
jae
stos
shll
pop
rolb
arpl
adc
xor
into
push
pop
psubb
fldcw
gs
es
xor
cmpsb
push
mov
sub
jl
jns
jno
repz
inc
xlat
stos
pop
scas
lea
sub
add
or
mov
call
stc
cmp
push
xchg
ljmp
mov
lods
jmp
lods
into
roll
lahf
lock
push
daa
jmp
xchg
ficoml
or
adc
mov
add
imul
inc
daa
fists
cwtl
orl
mov
xchg
dec
loop
push
loopne
cwtl
or
pop
fs
xor
in
sub
sar
into
mov
cmpsl
int3
push
in
lcall
xchg
xor
add
arpl
add
dec
mov
fistpll
sub
lock
scas
leave
pop
into
fldt
cmp
lahf
addr16
mov
fmuls
mov
pop
cwtl
pop
std
sbbl
add
lock
jns
mov
out
xor
nop
repnz
xor
push
cmc
cmc
push
aam
cs
sub
xor
mov
inc
sbb
adc
sub
dec
jnp
aad
popl
mov
inc
jp
mov
lds
loop
and
jg
cmpsl
cmpb
cmpsb
jmp
bound
mov
or
mov
scas
loope
arpl
pop
ret
daa
or
or
jns
and
fldenv
testb
gs
mov
mov
add
xor
cmc
xchg
lret
mov
in
cwtl
cmpsb
add
mov
in
mov
sbb
and
repnz
imul
enter
lea
repnz
xchg
insb
cld
push
jno
in
loope
dec
in
scas
push
movsl
pushf
dec
xlat
jge
es
stos
push
in
data16
test
jnp
lcall
xor
lahf
jecxz
cli
and
jp
cmp
mov
adc
dec
sbb
lahf
cmp
jns
bnd
xor
and
pop
lock
loope
mov
jecxz
icebp
mov
push
lret
out
xor
or
add
insb
dec
xor
test
shll
push
push
in
add
mov
or
jmp
bound
mov
push
outsl
repnz
or
add
int
sti
ficomps
fcoms
js
imul
jbe
decl
push
fistl
jb
in
cli
fs
add
mov
mov
iret
inc
insb
pop
enter
push
xor
jbe
inc
cmpsb
sbb
jnp
stos
sbb
inc
arpl
lret
or
jp
shlb
test
aas
xor
fwait
roll
mov
lea
scas
popf
jne
and
mov
lret
rclb
xor
sbb
in
sarb
popf
arpl
es
xor
jge
sub
es
jle
stc
movsb
hlt
popa
gs
cmp
pop
insl
mov
out
xor
mov
mov
fistl
hlt
std
nop
jecxz
cmp
pop
test
inc
xchg
pmaxsw
and
mov
fistpl
hlt
pop
xor
andb
insb
or
cmp
enter
movsb
push
arpl
outsb
or
daa
xor
js
add
jae
cli
fldl
fwait
loop
decl
stos
sub
sbb
push
je
push
push
js
stos
hlt
in
ljmp
xchg
inc
dec
sub
outsb
daa
outsb
jne
fdivrs
jbe
aam
scas
fs
imul
jmp
xchg
jbe
jne
lock
sub
mov
dec
and
fmuls
or
push
cwtl
adc
ss
xor
sub
sub
fwait
dec
adc
mov
pop
out
xchg
lea
add
push
jno
int3
dec
adc
add
lea
add
loop
push
scas
sub
pop
test
ret
cmpsb
mov
out
lock
push
pusha
test
cmpsl
cmpsb
cmp
incb
test
aaa
jns
pop
popf
movsb
out
cltd
cmp
cltd
lcall
sub
sub
dec
ljmp
std
int
and
mov
sbb
jle
movsl
lahf
rol
lods
push
addl
data16
and
mov
test
cs
mov
push
es
mov
jb
jmp
push
pushf
cwtl
mov
mov
lcall
mov
loop
out
andb
lret
mov
std
arpl
mov
cmpsl
int3
or
fnstcw
scas
mov
out
mov
dec
fidivs
xlat
inc
fdivrl
add
pop
inc
adc
jno
leave
mov
mov
jns
pop
shll
push
dec
test
sub
xor
pop
cmp
dec
das
test
mov
jnp
pop
int3
ljmp
mov
sbb
xchg
mov
sbb
aaa
pop
popf
mov
or
add
dec
mov
and
loopne
pop
push
sub
ss
imul
shrl
cmp
and
jge
ror
xor
es
mov
aam
adc
inc
and
subb
shlb
inc
inc
mov
fs
enter
pop
call
xor
outsb
pop
add
int
dec
inc
jp
push
mov
push
xchg
xor
xchg
xor
cld
mov
in
ds
cmc
adc
mov
jo
push
mov
push
or
aam
shl
ja
andb
out
xchg
lds
dec
push
repnz
loope
add
xchg
sbb
test
sbb
cmc
pop
cltd
xor
inc
movsl
push
daa
sub
icebp
orb
sub
jmp
pop
push
push
push
inc
and
mov
fucomi
lods
cmp
mov
mov
add
dec
mov
cli
fldl
scas
cmp
js
push
ret
push
stc
movsl
sub
aaa
cmp
pop
bound
orb
mov
pop
addr16
movsb
mov
adc
mov
cli
hlt
sbb
stos
adc
xor
add
scas
inc
cmp
cmpsl
mov
push
cwtl
das
sbb
subb
push
test
dec
add
jb
pusha
outsl
addr16
movsb
clc
enter
dec
jmp
lret
sbb
sbb
or
adc
cmp
test
out
or
gs
jne
sub
inc
jb
mov
mov
cwtl
es
stos
inc
lret
hlt
pop
mov
mov
outsl
pusha
aas
fidivl
jbe
hlt
popa
and
jp
imull
sub
lret
mov
out
cmc
outsl
push
lds
clc
test
and
fs
and
mov
xchg
outsl
in
xchg
js
cmp
jae
das
and
movsb
movl
push
mov
mov
mov
mov
addr16
jge
mov
adc
inc
shlb
loopne
jbe
xor
test
std
push
xor
pop
shlb
cmp
or
in
inc
arpl
imul
add
inc
cmp
xlat
neg
and
pop
icebp
mov
inc
or
jb
mov
jnp
sub
mov
xchg
pushf
cmc
lods
inc
jg
add
mov
inc
push
jge
add
aaa
xor
fildll
inc
imul
cmp
into
imul
add
and
mov
inc
pop
hlt
or
clc
stos
repz
xchg
pop
xchg
lds
xor
dec
adcb
mov
push
les
shll
lds
and
inc
sbb
enter
mov
shr
jl
notb
fcoml
rcrb
arpl
movsb
lcall
cwtl
daa
and
mul
add
adc
mov
data16
bound
jns
sti
inc
jns
cmpsb
das
sub
ficomps
mov
mov
lods
jno
and
xlat
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
xchg
repnz
cmp
popa
rcrb
out
xchg
popf
inc
xor
icebp
mov
mov
pop
nop
jmp
popa
pop
sahf
lret
dec
pusha
jle
mov
fwait
jbe
mov
push
insb
xchg
aad
or
cmp
aad
jg
imul
push
xchg
stos
leave
fisubs
jl
ds
insl
sbb
ret
lods
sub
push
int3
adc
inc
push
inc
aam
in
lahf
out
or
fsubl
jno
call
xchg
cmpsb
movsl
xchg
add
in
inc
jo
cmp
xor
aaa
push
jo
fldcw
add
xor
ja
sbb
outsl
and
scas
or
mov
scas
dec
jb
int3
push
mov
dec
fisubrl
test
xchg
push
adc
jns
jns
inc
mov
test
lock
adc
adc
stos
mov
or
stos
cld
mov
leave
pushf
xor
cmp
cmp
jnp
das
pop
xchg
stc
jbe
or
pop
jb
xlat
idivl
sbb
inc
cwtl
dec
scas
or
cltd
popf
out
mov
rolb
test
lcall
sub
jge
mov
std
add
or
lret
in
push
mov
addb
xchg
sub
les
test
aad
out
mov
xor
pusha
je
cltd
out
je
int3
xlat
cmp
neg
sub
mov
jns
or
xchg
fistpl
mov
mov
or
jbe
cmp
cli
call
icebp
rolw
dec
insb
jg
xchg
test
into
add
or
nop
lods
clc
mov
dec
dec
imul
xchg
div
loopne
sarl
jae
mov
movsb
push
insl
inc
clc
jl
in
push
mov
adc
push
jns
cmpsl
hlt
lret
test
insl
daa
inc
add
adc
push
cmp
repz
mov
mov
out
adc
dec
cmc
dec
xor
mov
lds
sub
dec
inc
stc
xor
lds
xor
pushf
jae
xor
jg
mov
xor
adc
mov
fcmovnbe
jge
mov
xchg
test
daa
sti
mov
pushf
dec
loopne
inc
mov
ljmp
stos
stos
add
pop
lds
lock
mov
cltd
xchg
movsb
scas
add
subps
dec
mov
sarb
push
lret
mov
jge
adc
dec
nop
mov
and
fadd
addr16
xchg
inc
loop
out
add
iret
and
push
lahf
pop
xchg
dec
inc
aam
xchg
stos
arpl
inc
jecxz
aad
jmp
inc
pushf
stc
push
clc
shlb
lcall
shrl
aas
mov
in
popa
pop
cli
and
push
jmp
xchg
sbb
pop
scas
in
xchg
push
mov
cld
adc
adc
idivb
xor
out
adc
ja
mov
jno
jl
rcr
loope
jno
pop
cmp
arpl
add
data16
outsl
xorb
push
ja
sub
ds
mov
inc
or
hlt
cmpsb
pusha
sub
cld
rclb
push
xor
int
loope
cmp
in
xor
in
daa
jle
mov
dec
out
test
or
enter
lcall
in
dec
adc
mov
inc
and
inc
lcall
aam
cmp
inc
stos
pop
push
and
adc
fwait
insl
inc
mov
or
or
scas
xchg
xchg
xchg
ret
fildl
jecxz
mov
imul
test
push
test
loope
scas
or
out
lret
jbe
add
inc
out
xor
and
fs
mov
cmp
fcmovne
addr16
js
jecxz
xchg
ljmp
add
fisttps
fcomp
dec
int3
sbb
cli
movsl
in
lret
push
push
fcoms
out
xorl
mov
jno
pop
jge
inc
jb
push
mov
push
mov
das
fisubl
sbb
jne
cld
adc
fstpl
xchg
cmpsl
push
mov
adc
fwait
rol
adc
mov
sub
jg
inc
or
push
negb
sub
mov
popa
and
mov
fldenv
out
sub
inc
scas
hlt
push
and
adc
cltd
bnd
outsb
fsubrl
sub
mov
or
mov
mov
push
sub
jo
pop
filds
leave
mov
fmull
mov
cmc
fs
dec
arpl
adc
xchg
out
xchg
ffreep
int3
sahf
push
jns
leave
pop
mov
lock
inc
adc
sub
or
sti
fwait
repz
inc
out
jl
aam
in
sub
add
mov
imul
mov
repnz
in
inc
push
cs
stc
push
pop
add
push
iret
aad
inc
cmp
ret
or
scas
push
xchg
dec
push
lcall
fs
bound
iret
inc
call
or
pop
aad
scas
mov
fstp
shll
int
mov
and
xor
jo
and
adc
xor
shrb
fwait
lret
fidivrl
mov
notb
jp
out
cmp
adc
xchg
lcall
jbe
xor
cwtl
inc
repnz
ss
cmpsb
sti
push
out
inc
arpl
jge
lcall
dec
rcrl
xlat
iret
and
sub
jp
out
cmpsl
cs
and
mov
xor
popa
mov
in
lcall
dec
and
mov
arpl
jp
cmp
jecxz
fs
pop
mov
cld
insl
add
inc
movsl
add
push
cli
add
rcl
scas
aam
push
movl
cmp
jo
pop
xor
aad
dec
sbb
add
or
mov
push
jmp
xor
in
mov
inc
sbb
mov
imul
or
inc
pop
adc
ret
sub
in
sti
jl
fcoml
xor
xchg
fwait
subb
cmp
dec
mulb
in
xchg
jmp
fadds
jg
mov
pop
repz
mov
fs
xchg
and
and
repz
roll
lret
imulb
mov
adc
dec
mov
pop
fdivs
xchg
clc
mov
and
xchg
jmp
fwait
mov
jmp
cli
sub
out
fwait
jl
add
fsubrp
out
mov
les
push
cmp
and
jae
imul
add
movsb
in
scas
pop
mov
into
xorb
je
scas
mov
cmp
lcall
xor
pop
sbb
mov
aas
add
mov
inc
pop
dec
ljmp
mov
and
lcall
xor
lods
subb
test
cwtl
jecxz
mov
sbb
xchg
in
mov
inc
push
popf
dec
hlt
xchg
pop
pop
mov
testb
test
or
daa
xor
hlt
jae
insl
pop
movsl
fld
daa
fwait
adc
push
sti
adc
es
imul
aas
daa
lds
out
adc
pop
dec
cs
nop
daa
cmp
dec
daa
sahf
mov
stos
push
dec
mov
push
xchg
loopne
sub
mov
mov
test
xor
leave
aad
push
inc
notb
ja
push
or
test
nop
xchg
and
repnz
rorb
or
adc
inc
out
rorb
mov
cmpsl
addr16
imul
in
cmp
cmpsl
loop
mov
rorl
mov
or
add
scas
dec
xchg
dec
xor
jecxz
adc
test
pop
lock
in
jle
pop
mov
lods
mov
int3
fidivrl
jno
fimuls
repz
xor
sbb
sahf
mov
push
fisubrs
fs
inc
jno
adc
pop
mov
int3
dec
es
nop
cmp
mov
lds
push
scas
add
xchg
mov
mov
fnstcw
pop
inc
outsb
shrb
scas
idivb
jl
add
ficoml
sahf
push
or
inc
xor
comiss
aas
insl
mov
mov
lret
ds
xlat
jo
push
jb
jmp
pop
sarb
sbb
scas
rolb
mov
jg
and
cmp
sti
fnsave
cmp
or
lods
repnz
mov
ret
fsts
mov
jp
mov
cmpsl
in
cmc
cmp
or
cmpl
imul
fisubl
cmc
ljmp
add
sub
roll
mov
icebp
push
xor
xchg
sbb
andb
aaa
sbb
pushf
xor
cmp
pop
adc
mov
fcmovnb
jg
pop
insb
cmpsb
mov
dec
das
dec
sahf
subl
adc
mov
lock
and
adc
mov
sub
mov
mov
cmp
and
test
sbb
aam
mov
pop
lods
fcomps
stc
sbb
insb
sub
cmp
pop
sub
and
sbb
subl
xor
insb
dec
les
xor
mov
fs
sbb
mov
ss
insl
leave
inc
in
push
int
pop
pop
cmp
mov
shrl
shll
dec
test
adc
lods
les
mov
fucom
pop
add
fdivrl
dec
mov
lods
outsb
repnz
mov
xchg
mov
jo
adc
jnp
xorl
lods
inc
test
out
cmp
xchg
push
into
push
xchg
fcom
inc
loopne
jg
add
fsts
jl
cmp
shl
push
or
outsl
xchg
cmp
push
or
mov
repz
repz
mov
arpl
fsts
push
movsb
dec
push
daa
push
jo
ljmp
mov
pop
cltd
fdivrs
add
push
xor
dec
jmp
adc
fwait
pminsw
cmpsb
test
push
inc
add
and
mov
lea
push
adc
mov
pop
ss
sub
cmp
aas
shl
pushf
mov
add
filds
repnz
adc
mov
ds
jge
test
cmc
jns
mov
pop
xchg
adc
push
jbe
and
pop
add
push
je
scas
ret
cmp
jnp
rolb
testl
mov
mov
dec
sbbb
adc
mov
inc
adcl
lea
or
pushf
out
mov
es
xchg
push
jecxz
jl
and
lea
sub
mov
outsl
xlat
inc
add
mov
icebp
jge
or
cli
jo
cld
lret
mov
push
data16
pop
pop
or
iret
sbb
mov
sub
arpl
int3
mov
dec
sbb
mov
pushf
dec
push
gs
hlt
mov
sti
mov
fisttps
fs
iret
lods
ret
loope
sahf
movsb
stc
or
xchg
subl
fldenv
mov
cmp
popf
fcoms
pop
test
push
fisttpll
in
jno
dec
cmp
ficomps
cmpsl
pop
loopne
mov
lahf
push
xlat
xor
in
cmc
cmp
cmc
inc
xor
sbb
push
popf
inc
sbb
inc
sbb
adc
stos
es
cltd
call
mov
add
xchg
test
stos
clc
sub
imul
mov
arpl
stc
ss
roll
cld
jmp
repz
mov
pop
movl
jae
pop
popf
es
lods
es
mov
add
int
test
xchg
pop
movl
aam
push
int3
mov
outsb
pop
adc
pop
aad
lahf
cli
or
lahf
push
sub
lods
dec
data16
mov
aaa
sbb
dec
inc
iret
clc
dec
mov
add
movsl
ds
pop
xor
inc
addb
dec
gs
and
lret
jle
mov
ljmp
loop
pop
cmpb
xor
fwait
push
lock
clc
pop
sub
pop
pop
add
or
fisubrs
xchg
je
in
aad
or
sbb
dec
xor
pop
mov
mov
call
or
fisubrs
and
data16
push
cmp
mov
leave
jl
je
js
sbb
add
dec
sbb
cli
popf
mov
in
mul
daa
xchg
int
add
mov
sub
add
loop
in
inc
call
outsl
rcrb
je
lds
cmp
ds
fists
inc
xchg
ds
pushf
mov
add
jp
xor
inc
in
clc
pop
mov
aam
imul
stos
and
xor
push
stos
fmull
loopne
and
out
push
out
sub
pop
xchg
adc
mov
mov
xor
jp
mov
lods
lods
pusha
stos
xor
div
mov
ret
sbb
xchg
test
jle
or
les
and
hlt
push
xchg
jl
and
addr16
loop
pop
sub
add
adcl
in
xor
sarb
test
daa
insl
pop
fisubrs
pop
and
pop
in
aas
pop
add
xor
mov
leave
ja
and
inc
arpl
dec
dec
ja
mov
mov
out
push
xchg
mov
fisubrl
xlat
add
pop
sbb
gs
ja
es
xor
mov
mov
dec
sbb
or
push
int3
sbb
arpl
and
daa
pop
fsubs
push
incb
aad
pop
add
mov
mov
add
mov
xor
pop
daa
enter
inc
jo,pt
ja
or
outsl
dec
sub
pop
jl
sbb
jle
sub
fdivl
pop
lret
dec
in
repz
and
lret
outsl
and
jg
je
dec
loop
test
dec
and
jbe
jbe
sbb
movsb
into
repnz
xor
cmc
iret
sbb
jge
xor
dec
adc
fstpt
xor
repnz
clc
adc
push
lret
jae
adc
adc
sbb
fistpll
sub
ja
std
fstps
data16
xchg
inc
scas
xor
clc
hlt
dec
daa
popf
out
into
stc
mov
cmp
insb
ljmp
or
lea
jle
ss
push
ret
xchg
cmp
sbb
xchg
jmp
fwait
xchg
mov
mov
add
mov
nop
or
cmc
pop
push
or
push
jle
dec
mov
insl
lods
cmpsl
daa
mov
mov
xor
sti
pop
and
inc
stc
inc
mov
fldt
sti
sbbb
aam
repnz
mov
push
xlat
std
punpckldq
dec
stc
repnz
popa
loope
in
mov
sar
pop
je
inc
cmpsl
cltd
data16
icebp
push
adc
in
fnstsw
sub
shll
xor
test
test
std
movsb
cwtl
iret
pop
mov
out
or
loope
lcall
push
lret
fwait
sahf
push
mov
adcb
push
in
sub
xor
pop
mov
sub
sbb
inc
outsl
cmp
fcompl
inc
fldt
lahf
mov
das
lret
mov
xorb
or
outsb
lret
sub
and
inc
or
mov
mov
jns
push
cld
pop
xchg
push
dec
aam
adc
aad
loope
shlb
stos
cld
jp
es
mov
dec
and
loope
stc
lahf
fsub
push
int
cmpsb
cmp
mov
push
push
fnstsw
pop
jle
loopne
lods
push
lea
mov
cli
ljmp
inc
push
xchg
inc
out
and
pop
imul
sub
aam
and
cmp
mov
add
enter
cmpsl
push
push
lock
scas
mov
rcrb
or
or
insb
hlt
sahf
je
lods
out
sub
pop
dec
fwait
stc
dec
cmp
stc
sub
cwtl
int
fsts
call
pop
icebp
mov
xchg
stos
mov
cmovo
push
push
inc
pushf
stc
sub
rolb
fisubs
test
lret
aas
bound
test
xor
xchg
fwait
mov
or
in
fstps
lahf
sarb
xor
mov
ss
daa
mov
jp
mov
sub
pushf
cmpsl
xor
mov
imul
dec
cmp
xor
outsl
cmp
test
pop
dec
push
mov
pop
and
lock
cmc
adc
aaa
popf
fimuls
stos
jl
sbb
mov
xchg
adc
mov
pop
xchg
push
ret
sbb
mov
mov
xorl
test
lods
lret
sbb
cld
pop
sbb
out
ret
pushf
inc
outsl
add
inc
mov
jnp
dec
insl
movsb
xlat
lods
xor
iret
enter
xchg
iret
inc
push
roll
mov
hlt
pmuludq
das
or
add
xchg
jnp
sarl
push
fnstsw
out
mov
les
addr16
mov
arpl
mov
or
in
repnz
jno
das
rorb
mov
movsl
jns
sub
insl
mov
and
push
clc
sub
sahf
clc
ret
inc
inc
add
fisttpl
cs
sbb
shll
jno
je
stos
pop
dec
jl
out
loop
or
out
sarb
cmp
mov
dec
sub
rcrb
fisubrs
fs
inc
lcall
test
icebp
sbbl
test
scas
int3
jns
push
xchg
push
sbb
mov
pop
daa
movsl
sub
jle
sbb
sbb
xchg
pusha
push
je
mov
mov
loope
push
shl
daa
jnp
jg
aam
cld
xorl
int
popa
add
cmp
jns
out
test
call
xor
pop
dec
mov
push
in
lods
dec
fcmovbe
pusha
inc
shlb
xchg
mov
xchg
and
aam
cmp
mov
movsb
stc
rorb
movsl
aad
es
mov
pop
adc
ss
push
orb
loopne
std
sbb
fcmovbe
dec
sbb
icebp
ss
lods
mov
inc
lret
adc
mov
xchg
jne
pushf
stos
daa
adc
jl
or
popf
push
frstor
mov
mov
in
cmp
repnz
icebp
or
rcll
cmp
add
fld
add
xchg
dec
adc
repz
or
stos
add
mov
dec
fisttpl
ret
fmull
es
lods
xor
sub
lods
in
xor
pop
pop
sbb
pop
mov
aad
xor
or
sbb
mov
cmpsl
inc
push
call
jmp
aaa
inc
xor
fs
mov
dec
fidivs
mov
adc
sbb
mov
jp
fsubl
push
lcall
loop
mov
in
mov
rcll
repz
cmc
push
xor
mov
out
in
dec
gs
ud2
cs
jnp
mov
fs
sub
inc
add
out
xor
movsb
fwait
xchg
imul
pop
repnz
push
lidtl
clc
mov
lret
fldcw
cmp
add
test
sbb
push
sub
fwait
movsb
lret
daa
adc
mov
xchg
mov
hlt
xor
dec
testb
movsb
sub
and
in
xchg
jo
andb
sub
outsl
xchg
dec
fbstp
adc
and
inc
mov
insl
xor
fisubrl
lahf
push
xor
es
leave
dec
or
xlat
sbb
mov
es
and
and
jne
xchg
add
inc
add
inc
push
xchg
rclb
xorb
imulb
or
lret
ret
mov
push
mov
aad
mov
pop
mov
movsl
in
loopne
and
inc
arpl
gs
push
mov
add
cmpsb
lret
push
xchg
or
pop
test
out
xchg
adc
xor
push
mov
and
adc
pushf
lea
adc
fmul
cs
add
mov
test
test
add
xor
cli
cli
je
sbb
pushf
mov
rolb
push
push
jne
cmpsl
push
imul
iret
aas
jl
cmp
movsl
add
lret
loop
fstpl
insl
pop
xchg
aam
pop
add
jg
push
pop
out
mov
mov
dec
loope
in
jg
fbstp
adc
and
call
repnz
jmp
pop
jne
jne
add
rorb
pop
vpshuflw
ds
movsl
dec
lret
push
std
loopne
sbb
mov
data16
or
icebp
add
sbb
add
popa
fwait
dec
mov
push
rolb
xchg
xor
xor
and
mov
inc
outsl
jge
pop
inc
pop
sub
push
bound
or
sbb
sub
mov
fmull
lret
adc
loopne
jg
fwait
jnp
gs
fisttps
shl
inc
repz
test
mov
test
rol
jb
fistps
ja
clc
clc
and
xor
leave
mov
sub
shll
aaa
pop
pop
ret
int
stos
test
in
fs
or
and
dec
test
adc
mov
mov
jb
mull
push
jecxz
mov
dec
std
mov
xchg
xor
adc
inc
xor
orl
and
cli
popa
jbe
jl
out
jno
nop
popf
sub
cmp
fidivl
dec
out
sbb
iret
xor
div
mov
std
push
cmpsl
inc
int3
push
push
mov
test
addl
cmp
imul
inc
je
lods
xchg
andl
and
push
cmp
enter
ljmp
test
push
pop
mov
xor
arpl
mov
mov
xor
sti
test
sbb
pop
mov
xchg
and
lret
stc
mov
xchg
test
dec
fisubl
mov
adc
adc
cmp
out
outsb
pop
aad
push
mov
lret
ror
loop
lods
adc
ret
stc
mov
imul
dec
mov
jno
push
add
sub
inc
iret
and
adc
fbld
aas
xchg
lods
jne
and
mov
fwait
adc
jno
popa
xchg
hlt
mov
adc
add
roll
cmp
out
add
cltd
jno
push
lcall
mov
xor
sub
add
aad
push
insb
daa
lods
insb
sarl
dec
mov
sahf
sub
pop
sub
popf
sub
loopne
lahf
loop
sbb
enter
lahf
dec
inc
ljmp
fdivrs
mov
movsl
dec
out
pusha
mov
out
mov
cltd
jge
mov
jns
sbb
call
cld
out
lods
jp
outsb
test
jge
mov
lcall
jl
jecxz
ss
mov
repnz
pop
les
insl
and
leave
aad
lcall
aas
lds
mov
movsl
push
or
adc
out
sbb
into
out
scas
mov
pushf
int
in
or
mov
push
push
into
cmpsb
outsl
mov
sub
repnz
mov
shrl
jne
inc
ss
pushf
in
cmp
and
cld
cld
and
hlt
pop
pusha
das
filds
push
xor
leave
icebp
xor
icebp
jp
inc
cmc
adc
outsb
push
in
push
scas
push
inc
fwait
lea
mov
add
pop
lock
shrl
fs
sub
addr16
cld
mov
or
push
shrl
pushf
jmp
xchg
sub
fidivrl
add
movsb
push
scas
xlat
ret
iret
mov
jp
hlt
or
ds
int3
sub
adc
lea
push
jmp
jne
push
scas
dec
add
push
mov
xrelease
sub
adc
adc
clc
scas
insb
or
push
sbb
xchg
xchg
xchg
and
lods
loope
push
cmp
fisttps
out
dec
mov
out
fidivrs
cmp
adc
sbb
cmp
pushw
imull
sarl
pop
cmp
mov
mov
inc
mov
icebp
sub
cmc
add
movsb
xchg
mov
inc
pop
iret
mov
fisubl
das
pop
dec
jmp
testb
xor
dec
repz
or
jp
xorl
mov
out
cmpsb
scas
mov
sub
sahf
mov
int3
enter
jnp
xchg
repnz
sbb
pusha
mov
dec
mov
mov
rcrb
cmpsl
into
mov
bound
ret
popf
push
popw
or
aad
aad
das
add
cmp
jo
mov
sbb
inc
shl
fwait
pop
xchg
pop
lret
into
sub
push
and
xor
scas
cmp
ret
pop
pop
lods
idivb
cmpsl
sbb
enter
int3
nop
incb
test
repz
bound
push
adc
movb
mov
push
leave
adc
inc
xor
or
pop
fwait
ds
xchg
adc
mov
in
pop
mov
dec
fs
insb
adc
mov
popf
push
imul
push
mov
imul
in
jge
testb
test
mov
arpl
ss
arpl
out
scas
inc
movsw
aaa
jg
adc
ljmp
test
in
in
xor
dec
in
sbb
data16
rolb
stos
xor
std
jno
jl
cli
push
push
clc
out
mov
mov
xor
xor
push
lods
jne
addl
cwtl
lods
movsl
js
mov
in
xor
aas
fwait
sbb
pop
pop
xchg
leave
aam
fdivrp
daa
out
mov
push
jg
dec
push
dec
push
jle
or
mov
ja
aad
and
adc
xchg
xchg
es
adc
fiaddl
loopne
or
lcall
mov
lret
stc
cmpsb
jno
adc
and
or
sub
scas
cwtl
sub
lahf
xchg
psllw
pop
outsl
fwait
push
lret
sahf
xchg
cli
lock
push
xor
sbb
mov
rcrb
js
aas
scas
mov
or
xchg
push
push
jmp
xchg
sbb
mov
push
push
in
mov
pop
ds
das
jl
call
pop
xchg
push
scas
outsl
inc
sbb
dec
inc
arpl
or
loope
push
dec
sahf
rcll
lret
mov
adc
adc
jle
aad
popa
xchg
mov
cwtl
lds
fstpt
leave
in
pop
shl
sbb
stc
std
repnz
dec
xor
pushf
cs
mov
sub
test
cli
andb
test
jno
jecxz
loop
ret
xor
pop
stos
sahf
jge
push
add
mov
mov
sbb
data16
inc
cmp
jno
or
stos
add
lcall
mov
stos
mov
or
push
mov
fcmovnu
push
iret
mov
adc
add
inc
out
cmp
int3
popa
enter
xchg
cmc
iret
fsubrl
lret
les
add
lods
das
inc
pop
sbb
jne
mov
test
addb
xlat
leave
mov
jl
shll
sbb
inc
mov
imull
fisttpll
data16
pop
mov
and
mov
xchg
sbb
and
scas
mov
gs
clc
pusha
repnz
jge
jne
mov
dec
int
movsl
ret
or
mov
jo
push
out
rcrl
and
adc
jmp
lea
jp
mov
sub
mov
mov
jg
lds
les
mov
mov
jmp
cld
mov
popa
scas
std
jb
jmp
push
stc
fiadds
push
push
cwtl
xchg
imul
mov
sbb
jmp
xor
cli
and
and
inc
dec
daa
icebp
mov
sub
lahf
lahf
subps
insb
push
out
bound
clc
int3
sub
jo
dec
mov
outsb
pop
push
xchg
daa
cmp
cmp
lock
fxch
adc
cmp
lahf
add
fldcw
push
pop
loopne
cs
sti
cltd
popf
mov
test
fdivl
push
idivl
sbb
sbb
aad
lret
inc
bnd
adc
xchg
mov
fildl
jb
shlb
push
dec
sbb
push
cmc
mov
push
cmp
push
inc
repnz
and
arpl
in
lahf
and
rcrl
in
cmp
dec
jo
int3
xor
enter
dec
in
pop
jns
scas
push
or
cmp
imul
movsb
nop
adc
pop
push
sub
sub
lcall
jle
movl
call
xchg
daa
out
cltd
cmc
mov
pop
mov
inc
scas
iret
rcll
inc
lcall
xchg
add
ficompl
cli
push
add
mov
adc
bound
not
mov
xchg
lret
jl
test
mov
adc
sub
insb
aaa
lcall
dec
in
lret
sbb
cmp
sahf
add
lods
pusha
fmuls
jp
imul
mov
inc
in
inc
jp
sub
movsl
xchg
cld
ret
push
in
outsb
xorb
push
jl
in
add
add
cmpb
jg
cmp
sbb
flds
mov
clc
test
xor
mov
mov
inc
test
jp
ds
xor
push
jbe
std
jb
mov
into
cmp
cmpl
xchg
test
and
fwait
mov
stos
push
ljmp
sti
and
pop
jo
adc
aam
xchg
and
aam
inc
mov
sbb
mov
data16
xchg
push
add
lods
cmp
cwtl
inc
pusha
sbb
int3
xor
insb
push
out
xlat
rorl
jae
xchg
outsb
sbb
cmp
adc
int3
aaa
jl
sbb
dec
mov
pop
je
arpl
xor
dec
cs
jbe
fistpll
imul
adc
xchg
imull
scas
fmull
stc
add
mov
aam
push
mov
cli
arpl
pop
gs
movsb
loop
mov
add
and
mov
cmp
mov
xchg
int
jbe
xchg
scas
ficomps
sub
or
lahf
inc
inc
imul
ljmp
and
rcll
sub
js
mov
sub
push
sub
jb
mov
int
mov
dec
mov
xchg
xor
ret
sti
inc
xor
dec
jg
scas
scas
fmull
pop
inc
cmp
inc
xchg
icebp
or
dec
and
in
or
adc
adc
sbb
jmp
and
rorl
or
and
int
push
clc
add
mov
xchg
dec
mov
loope
fnsave
repz
call
lods
fisttps
inc
and
arpl
stos
mov
xchg
or
push
mov
popl
nop
or
movsl
pop
push
sbb
and
dec
cmpsl
xor
pop
outsb
loopne
lret
push
xchg
jne
clc
out
test
xorb
icebp
or
popa
ljmp
sbb
sarb
or
inc
dec
in
push
in
cmp
enter
movl
lret
mov
outsl
mov
mov
inc
and
jb
jg
insl
nop
inc
loopne
sub
jmp
pop
jo
jmp
dec
in
cs
loop
flds
mov
mov
pop
push
dec
mov
in
not
repz
aas
flds
test
jae
jmp
jecxz
push
idiv
push
repz
adc
adc
notb
cmpl
cli
aam
adc
inc
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
repz
xchg
cld
popa
bound
bound
jmp
and
or
rol
jno
lock
and
ja
cmp
in
jmp
ss
xchg
jg
sub
push
ret
pop
fistpl
out
cs
int3
adc
mov
xchg
loopne
fisttps
lea
int3
nop
outsb
xor
out
add
cli
push
scas
fcoms
dec
dec
cld
arpl
adc
or
add
aaa
daa
mov
test
orb
xor
inc
in
out
mov
add
aad
test
int
xor
pushf
into
in
push
mov
imull
dec
xchg
jb
cmp
xor
jbe
dec
sti
int
pop
arpl
adc
and
jae
xchg
bound
mov
sub
out
xchg
inc
push
dec
ss
mov
popf
sub
inc
sub
decb
pop
call
jb
dec
test
pop
mov
push
mov
pop
pop
popa
push
adc
jb
fsub
adc
inc
inc
cltd
pop
jae
mov
sbbb
push
pop
outsl
jnp
inc
scas
push
call
push
mov
pop
flds
or
adc
pop
dec
dec
scas
jmp
mov
lock
es
xor
lds
adcb
xchg
jmp
test
hlt
and
mov
nop
mov
loop
stc
inc
jle
add
mov
adc
add
ret
ror
stos
loop
addl
adc
in
jge
aam
sub
les
mov
lea
bswap
out
hlt
dec
rorl
scas
ja
sub
pop
jmp
dec
ljmp
adc
xor
sahf
xchg
add
or
imul
mov
pop
rorl
xchg
cmpl
adc
aam
stos
xchg
pop
decl
or
mov
pop
out
dec
push
cmp
inc
adc
mov
xlat
test
mov
and
cmpsb
sub
das
stos
mov
stc
addr16
mov
cld
outsl
addr16
xorb
lret
mov
movsl
mov
xchg
fiadds
mov
cmp
ficompl
rclb
push
mov
jno
xchg
and
cmp
loopne
inc
scas
andb
jle
sbb
movsb
in
jae
jb
lret
fstps
dec
outsl
add
inc
sbb
in
aad
pop
inc
cltd
es
pop
or
push
jle
mov
inc
loopne
xchg
nop
mov
mov
addl
jg
inc
dec
jmp
lds
jge
cmp
or
mov
sbb
pop
std
inc
leave
stos
nop
xchg
inc
dec
pop
js
xchg
push
mov
mov
in
mov
arpl
aad
push
jl
aaa
dec
popa
movsb
or
testb
mov
das
ss
out
bound
push
push
lahf
sbb
lcall
lret
fdiv
mov
dec
jb
adc
data16
je
xlat
lret
pop
xor
nop
mov
pop
pushw
ficompl
clc
mov
sbb
mov
js
gs
jmp
jg
fcoms
jl
push
pop
fisubl
lcall
mov
cmpsb
adc
roll
ds
cmpsb
push
add
xor
fcmovnu
pop
lds
jb
gs
sahf
xlat
inc
xor
push
cmp
dec
xor
push
stos
dec
dec
add
jo
cmp
sbb
push
scas
xchg
dec
push
dec
xor
sub
scas
push
lret
add
xchg
addl
lret
sbb
lahf
sarl
cwtl
lods
cmp
jmp
mov
sub
arpl
sbb
es
xchg
mov
mov
push
xor
push
jae
xchg
cmp
cmp
movsb
test
cmpsl
stos
out
inc
adc
push
sti
add
push
fildll
lret
or
rorl
leave
test
xor
call
mulb
sbb
sbb
and
pop
mov
jae
mov
fs
imul
loop
sub
clc
sbb
ret
mov
int3
add
mov
push
ret
lret
scas
mov
adc
mov
aas
xchg
mov
repz
mov
inc
dec
xchg
and
jmp
sbb
sub
xor
mov
and
ss
sub
mov
and
add
jmp
insl
adc
cli
aas
jbe
mov
xlat
push
in
leave
sbb
sub
pop
dec
pop
icebp
nop
sub
or
test
hlt
mov
dec
xchg
jl
dec
jno
add
or
xchg
imul
xlat
out
xor
inc
cs
lcall
xor
int3
imul
in
cmp
jae
cli
out
pop
jns
ret
cmp
shll
mov
leave
jb
test
lcall
mul
cld
iret
jo
pushf
lahf
loopne
sti
test
push
dec
fstpt
shll
mov
mov
cmp
lahf
out
imul
sub
and
repnz
adc
jge
cmp
jo
pop
subb
jnp
dec
fld
dec
mov
cmc
mov
lcall
push
mov
and
pushf
seto
xchg
lret
add
dec
scas
jne
add
xchg
mov
pop
pop
fs
cmp
jmp
bound
lahf
jmp
jb
aam
or
popf
jo
adc
inc
mov
xor
test
iret
cmp
shl
pushf
lcall
xorb
mov
arpl
aam
int3
es
jno
lahf
push
mov
add
lret
sub
inc
repnz
and
sub
mov
popa
sarl
mov
test
xor
std
push
jno
lcall
ss
dec
push
xlat
push
jmp
pop
jb
test
sbb
mov
and
mov
cmp
xor
shll
lret
cmp
in
fisubrs
mov
xchg
dec
js
xorb
loopne
inc
arpl
push
and
popf
add
add
mov
jbe
push
movsb
dec
cs
loopne
aaa
out
daa
inc
mov
subb
push
std
mov
bound
mov
add
xchg
mov
xlat
js
repnz
ret
sub
or
push
and
fiaddl
mov
mov
and
lret
subb
shll
cs
in
push
into
aam
cmp
sub
jae
adc
pusha
push
mov
repnz
push
andl
cmc
clc
fidivrl
stos
cltd
rclb
mov
ret
pop
loop
inc
addr16
insb
mov
loope
sbb
xchg
fwait
fcom
sbb
pop
pop
inc
inc
add
popf
gs
adc
jne
sbb
mov
imul
sub
push
hlt
movsl
push
add
sbb
mov
xor
add
xor
jl
lds
adc
inc
addb
stos
ja
sub
in
adcl
push
popa
pusha
das
stos
adc
repnz
rorb
in
outsb
lea
testl
xor
lds
insl
adc
nop
mov
and
in
or
into
hlt
js
fcoml
js
pop
repz
push
push
xchg
jnp
shl
lea
sub
movsl
movsl
repz
sub
roll
inc
loop
loope
inc
fdivrl
inc
ss
inc
fldenv
lahf
out
int
imul
aas
mov
push
pop
fldenv
cmc
ret
inc
lret
xor
xchg
sub
lea
jae
loopne
cltd
dec
add
mov
sub
mov
xchg
push
pop
ffreep
lock
mov
xor
negb
imul
insl
lahf
repnz
pushf
fsubrs
dec
enter
loope,pn
cmpsl
push
movsl
stos
jo
shlb
stos
test
push
push
stos
sub
lahf
in
ret
sahf
inc
into
rcl
and
stos
pop
xlat
outsl
mov
mov
xor
jp
mov
sub
xor
fs
cmc
jns
dec
xor
mull
adc
rorl
xchg
mov
inc
scas
inc
push
sti
aam
mov
mov
out
push
ficoml
mov
fwait
and
stc
popa
add
mov
loope
pop
es
adc
aam
gs
push
mov
xor
xor
jno
xchg
pushl
std
dec
stos
js
adc
xchg
mov
and
jmp
lahf
xlat
inc
movsl
out
mov
push
int3
out
xchg
cmp
xlat
sbbl
outsb
mov
xchg
stos
xor
in
dec
cltd
push
cltd
cwtl
outsl
mov
mov
and
shr
bound
cmp
iret
je
daa
xor
inc
xchg
pop
jg
or
dec
out
mov
imul
cmp
pop
js
adc
imul
hlt
inc
mov
xchg
repnz
mov
inc
adc
iret
mov
aad
and
rcrl
cmp
add
fstp
dec
inc
addr16
pusha
data16
lods
icebp
push
inc
lods
xor
or
dec
hlt
sub
and
cltd
inc
ficoml
mov
subl
in
jne
cmp
and
dec
mov
sub
imul
les
aaa
mov
sub
adc
es
icebp
adc
inc
inc
sub
pop
outsl
sbb
cmp
and
mov
dec
mov
shrl
nop
push
jns
push
adc
pop
cmpsl
cmp
sbbb
rcrb
push
sti
or
pop
sub
jnp
mov
out
xor
xor
cmc
cld
dec
sti
jge
jb
and
call
sbb
shll
sti
lret
adc
jmp
test
mov
cmpsb
gs
adc
cmpsl
sarb
rol
popf
mov
xlat
xchg
push
mov
push
and
add
outsl
call
mov
idivl
lret
adc
jmp
add
cmpsb
imul
sbb
pop
jge
std
push
xchg
aaa
es
ror
xchg
cmc
pop
pop
ljmp
push
mov
mov
iret
mov
cmc
dec
lret
mov
push
scas
pushf
adc
jo
jo
jns
inc
aaa
or
popa
dec
adc
push
rcrl
dec
bound
pop
aam
ljmp
push
dec
insb
pushf
mov
add
inc
mov
cmpl
jle
imul
out
sub
int
dec
cld
add
ds
stos
rcrl
jno
ret
or
int
addl
rcrl
imul
aad
rcr
add
mov
roll
and
xchg
arpl
jp
fiadds
inc
xor
push
xor
sbb
mov
addl
ficoml
and
pop
mov
sbb
in
movsl
sub
fnstsw
sbb
imul
dec
add
shrl
fmull
ret
gs
add
sbb
push
pop
test
cmp
inc
jmp
int3
imul
out
jbe
repz
xor
push
es
push
mov
popa
push
shll
mov
jns
stos
dec
add
push
daa
clc
add
cs
sub
adc
xchg
lcall
cltd
repz
lcall
cmp
or
jl
in
ja
icebp
fiadds
ret
stos
mov
shr
pop
stos
data16
cmpsl
push
inc
lret
mov
sbb
push
mov
cwtl
add
xor
inc
sbb
adc
mov
dec
outsl
das
and
test
pop
jb
dec
push
shrb
mov
mov
fcoms
inc
test
pop
fistl
sbbb
inc
rcrb
sahf
cmp
jl
cltd
ret
mov
cmp
mov
shl
mov
lods
jne
xchg
or
jecxz
inc
jne
xor
leave
inc
xchg
push
test
popl
aam
sti
fdivrl
cltd
icebp
pushf
pop
movsw
neg
and
test
mov
mov
fstps
push
arpl
mov
roll
mov
cli
in
cmpl
aam
aas
out
push
nop
jne
jo
xchg
jecxz
jns
cmpsl
mov
adc
les
jmp
xor
pop
js
adc
test
cmp
mov
ja
mov
adc
push
add
insb
adc
push
jl
pop
cmp
xchg
out
test
cli
pop
mov
fwait
xchg
lret
pop
les
hlt
ja
hlt
rclb
cmp
stos
xor
sbb
cmpl
sbbl
jbe
das
mov
sbb
push
jb
jns
jmp
cmp
out
ror
popf
pop
xchg
xchg
sbb
jmp
jbe
imul
insl
sbb
cli
in
mov
cld
and
in
inc
int
aaa
xchg
xor
or
mov
jge
push
loopne
pop
int
insl
cmpsl
int
inc
sbb
sbb
popa
stos
adc
test
je
push
adc
sbb
dec
sti
stc
in
xchg
aam
mov
ds
rolb
jmp
xor
cmovge
pop
and
sahf
in
sbb
scas
cltd
sub
test
pop
gs
xor
pop
outsl
xchg
aam
jne
daa
nop
or
dec
cld
mov
enter
mov
jb
test
es
cmp
xor
xchg
xchg
fwait
adc
mov
std
pushf
insl
or
mov
inc
mov
add
or
pop
push
in
xlat
or
or
pop
push
fmull
pop
xchg
mov
xor
pop
xchg
in
orb
jecxz
cmc
bound
pop
sub
sbb
ficoms
and
dec
clc
lods
inc
and
in
not
add
pop
mov
lahf
lock
pop
cmp
repnz
sub
jno
dec
cld
pop
clc
or
mov
in
xor
shlb
lret
add
pop
adc
xchg
or
and
sub
mov
xor
in
lcall
push
sub
mul
into
xchg
sub
test
outsl
cmp
ret
movsl
jl
daa
mov
repz
mov
cwtl
and
fdivrs
aaa
and
lret
fimull
sub
cld
call
lcall
mov
dec
mov
xor
jae
das
pushf
pop
mov
xchg
or
push
jp
sbb
hlt
push
shrl
dec
and
rcr
popf
add
outsl
lods
mov
popa
in
movsl
adc
jnp
sbb
jmp
pushf
mov
out
rorl
xor
rcll
and
cmpsb
repz
repnz
aaa
xchg
ss
into
ss
dec
pop
inc
jae,pt
cmpsl
mov
push
jbe
mov
sub
jbe
jbe
mov
pushf
xchg
fs
inc
imul
roll
xor
mov
mov
push
sbb
and
sahf
mov
mov
insl
in
sbb
mov
ja
sbb
pusha
jb
dec
inc
cmpsl
int
inc
add
or
cwtl
ud2
aad
mov
test
aas
in
cmp
cld
std
imul
jno
add
sbb
lea
int3
daa
es
js
pop
dec
stos
mov
or
sbb
jp
and
jmp
xor
out
out
je
imul
pusha
popf
aam
xchg
es
inc
push
leave
pop
push
mov
popa
cmp
addr16
adc
xchg
adc
stc
dec
nop
idiv
xchg
dec
push
xchg
fcmove
stos
xor
cmp
pop
push
sbb
mov
repnz
mov
and
stc
popf
out
and
scas
movsl
mov
hlt
inc
pop
fimull
fcompl
lcall
ds
adc
fcomps
mov
movsb
dec
sbb
push
xor
out
push
roll
popf
jg
ficompl
xor
cli
fsts
call
adc
insb
rorb
out
pop
inc
jae
lahf
xchg
stos
lds
and
and
xor
ljmp
into
dec
mov
mov
outsl
fcompl
test
xor
cmpb
jae
test
jnp
add
subb
das
mov
sub
aas
mov
loop
das
lahf
pop
push
out
das
mov
dec
inc
js
lcall
and
insl
gs
movsl
pop
cs
cwtl
mov
out
push
pop
je
sbb
xor
clc
cmp
or
leave
outsl
roll
push
adc
aas
ljmp
das
test
xor
daa
cmp
imul
pop
mov
adc
push
sbbb
outsb
jb
ds
leave
dec
pusha
cmp
xchg
inc
sub
icebp
aaa
adc
pop
sub
test
data16
cmp
xchg
les
call
pusha
outsb
cmp
ds
mov
and
rorb
pop
mov
das
lret
repz
pop
movsb
mov
lock
mov
push
jo
test
leave
push
mov
add
mov
shrl
push
inc
pop
dec
stc
fidivrs
or
in
adc
cs
lods
xchg
cmp
adc
test
adc
jge
ja
lods
sbb
sbb
in
xor
dec
bound
pop
or
sub
sub
dec
pop
and
js
jo
add
cmp
rcll
cmpsb
lock
dec
stc
push
jb
les
xor
ret
xchg
aad
cmp
in
add
sbb
out
inc
lret
sub
pop
lock
sub
xchg
test
jp
out
mov
gs
int3
push
stc
into
in
adc
xchg
scas
jno
out
movsl
loop
dec
mov
mov
push
adc
push
pop
and
sub
inc
mov
jb
std
jg
cmp
pop
and
jne
xchg
and
mov
pushf
mov
pusha
fs
add
sub
mov
adc
pushl
mov
sub
mov
add
pop
test
cmpsb
outsl
xchg
xchg
cmp
pop
push
xor
inc
push
xor
into
cmpsb
mov
and
mov
pusha
pusha
int
jecxz
mov
cmp
stc
or
cmp
pop
ret
lock
push
fidivs
adc
xor
sbb
sub
stc
and
or
popf
fstpt
cwtl
xchg
into
aam
mov
mov
and
fwait
dec
cld
pop
ret
scas
add
fstps
push
test
adc
repz
sub
mov
jle
lret
jne
cs
bound
and
add
inc
scas
xor
iret
out
dec
jle
imul
lock
push
or
push
xchg
ds
popf
std
adc
cli
xchg
popa
dec
cld
cmp
xchg
push
iret
mov
rorb
roll
cmpsl
cs
imul
jg
ss
push
and
popf
cs
imul
xchg
mov
aas
xor
xor
push
out
pop
cmp
ds
dec
fbld
add
xor
sub
cli
dec
cmp
into
jbe
adc
lods
loope
dec
lret
pusha
sbb
adc
ss
cmp
sub
in
scas
mov
lea
scas
addl
inc
jecxz
cmp
js
or
out
jb
xor
test
lock
movsb
or
mov
imulb
lcall
cmp
sub
arpl
add
gs
dec
in
scas
popf
mov
arpl
pop
inc
sub
pushf
mov
push
lea
out
fs
gs
movsb
into
dec
mov
int3
sbb
inc
out
dec
iret
ficomps
stos
mov
push
or
jno
rorl
mov
arpl
dec
xchg
cmp
mov
mov
int
adc
ja
cmp
add
fadds
xor
push
aas
mov
or
aas
fwait
outsl
jbe
gs
mov
adc
mov
xchg
inc
push
out
shl
xor
roll
dec
stc
inc
sub
inc
and
push
loope
pop
cmp
rcl
jne
mov
sbb
jno
sbb
and
fimuls
push
int3
sub
popf
pop
mov
dec
icebp
mov
or
insl
nop
out
push
out
scas
push
adc
shlb
pop
in
and
loop
jns
mov
dec
es
fs
ja
push
push
shrb
loope
in
xchg
pop
dec
jo
jnp
adc
xchg
test
cmp
fnstcw
and
sbb
jp
testb
repz
addr16
rcl
mov
add
push
repnz
add
push
lret
pop
and
aas
mov
hlt
stos
gs
or
pusha
push
lock
cmpsl
in
mov
repnz
jne
dec
scas
cmpsl
and
and
sub
lds
lds
mov
xor
stc
mov
mov
jmp
pop
popa
mov
call
and
jbe
cs
mov
ja
dec
add
mov
cmpsl
mov
in
jg
loope
popa
cwtl
test
pop
add
sbb
sub
mov
and
add
cmp
cmp
scas
add
out
les
push
adc
std
mov
ret
dec
enter
arpl
lret
ret
mov
int
xchg
bound
fisubrl
int3
xor
and
mov
inc
ret
mov
push
push
xlat
push
jle
in
inc
sub
push
dec
xchg
dec
push
or
sahf
xchg
loope
in
add
mov
xchg
mov
inc
sbb
std
pop
bound
movsl
push
fs
inc
cwtl
cmp
lahf
cmp
ja
xchg
cmpsb
add
jnp
lret
iret
xor
and
aaa
pop
fiadds
and
insl
cltd
jmp
fsts
cld
or
out
mov
jae
test
jbe
pushf
and
pop
mov
scas
fldcw
insb
cld
mov
jle
sub
loop
cmp
jbe
jmp
fldenv
sbb
fcoms
add
cmp
cmp
cli
wrmsr
cmc
jnp
aas
ss
in
add
insl
into
mov
xchg
adcb
xchg
popf
jne
push
jmp
iret
xchg
push
push
addl
cltd
jge
rcrl
push
jmp
sbb
neg
jmp
std
repnz
push
add
mov
mov
pop
cmp
inc
jbe
dec
mov
icebp
ja
lahf
jl
or
das
sub
outsb
mov
xchg
hlt
ret
pop
daa
jae
inc
fcoms
in
aam
cmovbe
stos
dec
jnp
aam
test
inc
sub
sub
mov
push
xor
sbb
jg
xor
sbb
lret
adc
mov
loope
inc
into
fnstcw
cmpsb
fwait
jl
push
icebp
scas
in
xchg
push
pop
mov
xchg
dec
out
adc
mov
mov
cwtl
jecxz
pop
cmpsb
addb
bound
adc
or
leave
mov
loopne
sub
sbb
shrl
xor
mov
push
sub
out
adc
inc
mov
cmpsb
test
mov
sbb
mov
sub
cmpsb
out
leave
push
push
adc
cltd
loopne
sbb
arpl
mov
sbb
push
aas
data16
mov
or
inc
les
sbb
insb
xlat
cli
jne
xchg
push
imul
or
fimuls
cmp
xchg
or
xor
aad
popf
clc
sbb
mov
ficoms
push
sti
std
xchg
jae
pop
enter
aas
dec
jge
cmp
rcl
dec
in
leave
xor
stos
sbb
xchg
jno
jnp
and
add
cmp
mov
or
and
mov
mov
jo
daa
sbb
mov
cld
adc
out
adc
and
sbb
jle
inc
push
xor
mov
xor
fs
lock
in
add
xor
xlat
outsl
arpl
pusha
lret
sbb
pop
jecxz
push
sbb
aam
testb
mov
sub
punpcklwd
pusha
and
push
adc
movsl
inc
and
push
jne
mov
add
pop
stos
addr16
sub
mov
sub
mov
sub
pop
ss
fldt
into
arpl
adc
lret
fdiv
andb
std
push
das
push
outsb
xor
push
push
push
nop
pop
test
cmp
pop
cli
cmp
mov
xchg
push
mov
clc
sahf
cwtl
jge
mov
push
loop
aam
xchg
and
andb
test
test
xor
cmp
in
cmpsl
adc
add
lds
fsubs
das
mov
mov
or
fmulp
repz
sbb
aaa
jecxz
add
mov
subl
mov
pop
cmp
dec
add
mov
jbe
aas
mov
imul
jp
repz
inc
inc
inc
fwait
mov
jno
stc
mov
imul
jb
or
mov
pop
daa
inc
sti
dec
inc
cld
nop
inc
sbbb
dec
adc
call
addr16
inc
adc
cmp
or
test
inc
lods
decb
push
into
dec
sbb
lea
loope
xchg
into
test
es
and
loope
hlt
stos
jo
insl
xor
sbb
jp
fistpll
rcrb
out
mov
leave
cmp
popa
xchg
and
xor
mov
je
jbe
test
pop
xchg
xchg
les
mov
cs
aad
push
repnz
insb
push
mov
bnd
inc
pop
nop
jmp
adc
dec
cmp
xor
cmpsb
iret
cltd
loopne
inc
insb
xor
fsubrl
repz
pop
xchg
hlt
adc
bound
cmp
mov
xchg
aaa
jecxz
repnz
adc
lcall
lret
fwait
sub
inc
jle
mov
mov
dec
out
sub
cs
mov
dec
incb
lahf
xchg
pop
ljmp
in
mov
cwtl
jnp
addr16
jmp
and
sub
or
or
test
push
lahf
jno
add
jp
into
mov
ss
dec
mov
or
adc
shll
loop
pop
mov
jle
shrl
push
call
lods
aas
jne
call
push
cmp
mov
stc
imul
rolb
dec
dec
js
out
in
pop
gs
mov
pushf
pop
pusha
push
nop
mov
pusha
mov
mov
aaa
cmpsb
jne
ret
mov
mov
test
insb
xchg
mov
xor
rcrb
shll
lcall
dec
mov
clc
xor
mov
push
inc
addr16
xor
int3
adc
shlb
xchg
insl
and
mov
out
loop
add
lea
xlat
dec
fisubrs
and
cmp
sub
mov
sbb
mov
scas
shrl
iret
push
jno
aaa
lcall
test
and
fldt
lods
repnz
xchg
ror
dec
mov
cld
cmp
push
lods
mov
xlat
xchg
inc
das
lea
inc
popf
test
scas
cwtl
mov
cmp
xchg
jl
dec
jl
fldl
sbb
push
pop
pusha
pop
decb
ja
jmp
xor
dec
stos
in
adcl
into
or
pop
int3
daa
mov
dec
xchg
mov
cmpsl
mov
dec
xchg
xchg
lds
icebp
popf
mov
inc
cmp
int
xchg
outsl
push
pop
cmpsl
stos
clc
pop
cmp
inc
and
scas
loop
fsubrs
out
rorb
adc
jmp
in
xor
fwait
or
cmp
push
lret
js
lcall
mov
sbb
push
dec
jno
icebp
shll
jecxz
arpl
jg
ret
jae
in
mov
je
add
xchg
sbbb
stos
sub
lock
insl
cld
mov
sub
cltd
push
sbb
or
adc
mov
mov
ret
fidivl
sti
fildll
cmp
decb
xor
nop
and
sub
jns
movsb
xchg
imul
jno
add
fs
xchg
and
loope
or
jmp
xchg
ret
roll
sahf
jge
repz
mov
pop
mov
inc
or
pop
adc
xchg
sub
fs
mov
les
add
ljmp
cmp
add
mov
inc
cvtpi2ps
test
leave
aas
orl
ja
push
adc
adc
stos
sub
inc
push
xor
adc
arpl
movsb
sub
out
sub
imul
fdivrp
lods
insb
std
or
out
xchg
sbb
mov
movsb
and
aad
test
pop
and
push
xchg
sahf
out
xchg
movsl
push
mov
cmp
out
mov
mov
dec
sub
mov
sub
fisttpl
gs
xor
roll
into
push
data16
cwtl
add
add
add
jb
shll
or
js
add
jmp
or
dec
rcrb
arpl
test
out
sbb
dec
mov
push
push
xchg
pop
mov
xor
pop
inc
and
lret
int3
sbb
push
mov
pop
aam
jne
out
xchg
ja
ficoms
hlt
aaa
and
pop
clc
stos
sbb
mov
sub
les
xor
push
cmp
sub
cmp
lods
addr16
jno
mov
sbb
adc
mov
mov
xorl
pop
cmp
sbb
js
lods
lods
es
inc
cmpsb
and
fwait
mov
lock
outsb
inc
loop
popa
mov
loope
and
or
mov
push
pushf
push
test
xchg
rorb
mov
insb
or
jne
test
jecxz
and
scas
stc
stc
inc
jae
cwtl
push
push
and
in
mov
data16
lock
int3
sub
daa
rcrb
test
out
iret
mov
jg
mov
cmp
xchg
inc
fwait
hlt
and
std
out
cli
add
push
and
out
push
push
jl
mov
pop
jbe
mov
jae
dec
scas
std
pop
aad
or
xorl
add
mov
test
inc
lods
cmc
aas
lds
cmp
sub
push
popf
pop
xor
fdivl
sbb
pop
mov
push
adc
test
lea
jne
pop
ds
sbb
out
insb
cmc
sahf
push
movsl
jl
cmp
push
adc
in
dec
dec
mov
sub
adc
inc
dec
sbb
repz
popa
movsl
pop
outsb
in
dec
push
add
cmp
push
inc
pop
mov
jge
push
fs
cmpsl
xlat
mov
add
loopne
lds
adc
decl
dec
ljmp
pop
inc
sbb
jp
jl
and
loop
insl
cmp
mov
dec
pop
dec
push
lahf
xor
dec
rolb
out
push
mov
adc
rcll
adc
and
outsb
aad
rorb
stc
mov
jge
std
sti
xlat
ljmp
dec
lahf
nop
mov
out
mov
mov
test
fmull
cmovbe
call
lods
xlat
je
ret
lea
xchg
aad
enter
adc
mov
pop
push
push
les
rorl
fbstp
std
lret
push
lret
dec
mov
ret
fs
stc
mov
or
push
leave
mov
test
cmc
movsb
jo
inc
testl
or
jecxz
call
sub
mov
fincstp
push
mov
out
sbb
fbld
cmp
imul
lock
insl
dec
into
xor
mov
mov
into
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
imul
pop
bound
imul
adc
mov
inc
subw
pop
cmpsl
pushf
clc
pop
cmpsl
add
outsl
sahf
fwait
sarl
stos
jecxz
jne
ret
in
movsb
repz
inc
push
or
dec
js
into
outsl
insl
movsl
lds
adc
mov
aaa
mulb
pop
rclb
mov
out
std
out
repnz
imul
inc
pop
sbb
cmp
insl
lret
bound
mov
xchg
inc
push
mov
sbb
push
push
adc
or
adc
jno
cmp
sub
jbe
jecxz,pt
mov
pusha
add
loope
dec
cwtl
arpl
pop
int
inc
dec
ljmp
and
frndint
negl
andl
cltd
pop
rcl
sub
mov
cwtl
mov
clc
daa
stc
stos
daa
mov
mov
sarb
aam
scas
dec
and
sub
fs
sbb
dec
lods
xorl
faddl
push
adc
pushf
pushf
cwtl
xchg
push
jl
popf
pusha
jge
pushl
movsl
pop
mov
cmp
daa
xchg
out
inc
daa
arpl
mov
loopne
cli
pop
in
sub
jo
add
mov
xor
in
ja
inc
adc
mov
adc
loop
out
xchg
xchg
pop
sub
out
and
sub
out
icebp
jne
test
ja
or
jl
mov
pop
pop
fbstp
dec
ror
add
ds
fwait
jno
mov
push
out
jge
push
test
mov
xchg
addr16
dec
adc
mov
rorb
ret
popf
and
popa
stos
inc
push
mov
sbb
pop
xlat
and
sub
pop
idivl
mov
pusha
xor
mov
sub
lret
jmp
leave
xchg
xchg
inc
push
daa
dec
aam
lods
jne
mov
pop
pinsrw
imul
in
ja
je
aas
push
mov
xchg
arpl
ljmp
pop
xor
cwtl
dec
shll
cmp
or
subb
test
in
lds
int3
mov
cmp
ret
sarl
xor
mov
jne
pop
ds
sarb
out
aam
in
adc
adc
push
mov
movsl
inc
adc
and
in
sbb
sbb
sub
out
addr16
sbb
lods
and
sbb
aam
sbb
shll
mov
inc
sbb
xor
outsb
or
and
push
cmp
call
dec
jge
int
ret
and
sbb
push
fsubs
repnz
orb
sbb
sbb
mov
mov
insl
xlat
popf
sub
aaa
sbb
push
xor
outsb
hlt
adc
pop
fadds
ds
popf
aad
cmp
fcmovnb
dec
pop
scas
mov
sbb
push
mov
or
icebp
mov
out
xchg
mov
adc
jbe
mov
push
addl
sub
pop
xchg
stc
jl
fdiv
add
int
push
xor
add
mov
cmp
cmp
xchg
in
popa
jb
xor
lret
cmp
jo
inc
sti
push
sub
aaa
sti
sbb
adc
add
in
jg
sub
pop
and
xchg
fldenv
loop
xchg
pop
cmp
add
mov
xor
aas
mov
aad
inc
jge
mov
call
or
push
jne
mov
push
jge
adc
icebp
cli
aaa
in
xchg
jns
shlb
sbb
or
std
mov
jge
jg
scas
loop
cmp
aam
push
test
sahf
cmp
dec
inc
lret
ja
nop
dec
inc
jle
jl
hlt
inc
pop
jnp
pop
je
mov
xchg
push
mov
sbb
int
mov
dec
mov
out
adc
mov
mov
ja
mov
add
add
mov
hlt
testl
das
mov
orb
jbe
and
push
insl
mov
jg
pop
xchg
lcall
enter
mov
xor
jmp
lock
jp
xor
leave
mov
sub
fiaddl
repnz
mov
push
jl
add
popl
push
test
sbb
mov
notb
sub
mov
sti
sbb
js
out
jae
mov
std
sub
fistpll
jne
xchg
dec
or
insb
and
fwait
jp
test
mov
mov
idivl
mov
in
jae
dec
repz
call
loope
and
jle
aam
fwait
call
cli
cmp
and
dec
mov
rol
and
push
xchg
into
or
adc
push
push
jecxz
adc
or
mov
adcl
or
ss
xlat
pop
arpl
adc
mov
push
scas
and
imul
cmp
stos
add
push
mov
addr16
pop
jl
jge
pushw
ljmp
xchg
in
cmpsl
repnz
cs
add
inc
sbb
shll
lods
xor
push
mov
xchg
rcrl
iret
xor
dec
outsb
aaa
push
xchg
popf
inc
mov
mov
mov
pop
push
xchg
inc
pop
dec
lret
adc
inc
int3
rolb
xchg
mov
push
sub
pop
mov
add
dec
mov
mov
lods
clc
incb
dec
push
or
dec
inc
cmp
adc
mov
cmp
jl
fucomi
fnstcw
dec
into
mov
jg
sarl
jns
push
add
pop
icebp
jle
and
add
inc
mov
push
fdivrl
inc
add
jl
aas
cs
lret
xor
mov
jnp
js
add
cli
test
jecxz
xchg
icebp
xchg
andb
mov
mov
xchg
push
fisttpll
xor
xchg
fs
call
daa
in
jp
sub
mov
jb
pop
push
sbb
sbb
push
dec
inc
aad
sub
scas
xchg
sub
rcrb
mov
xor
shlb
add
in
xlat
xor
cmp
ljmp
je
jecxz
lret
movsb
loop
pop
loop
icebp
pop
and
mov
xchg
add
rep
je
ja
repz
sub
adc
adc
cld
fdivrp
cmpsb
dec
sub
cwtl
pop
ja
jo
fisttpl
push
outsb
mov
mov
addl
sahf
cmpsl
int3
inc
cmc
sbbl
sub
and
jns
adc
fsubl
test
sub
push
inc
add
jle
decl
pusha
lds
lahf
data16
addr16
std
xchg
stos
adc
or
push
jb
nop
cwtl
add
mov
mov
outsl
adc
mov
dec
jg
push
and
dec
sbb
idivl
or
and
fcoms
xchg
shll
pop
mov
or
scas
adc
out
clc
mov
sbb
loope
jns
mov
sarb
lock
ja
ljmp
cmp
mov
cmp
xor
or
mov
xchg
lahf
lds
fisttpll
sub
push
mov
test
dec
ret
jbe
mov
aaa
xor
mov
dec
sbb
mov
inc
dec
aam
sub
rorl
lods
stos
ds
cmp
adc
insl
sarl
repz
inc
push
cmp
pop
and
aaa
jbe
cmp
andb
popa
fidivl
add
xor
test
sub
lahf
xor
mov
or
arpl
lcall
mov
xchg
sarl
xorb
sbb
test
andl
adc
in
cs
mov
imul
dec
dec
cmpb
sub
aas
movl
lahf
and
mov
fisttps
push
jecxz,pn
inc
movsb
es
lret
in
repnz
push
dec
sub
add
ret
ret
rol
jno
test
mov
pop
mov
mov
jmp
mov
or
hlt
jmp
and
add
aas
add
dec
ficoml
push
stos
mov
fdivs
pop
gs
add
popa
xchg
inc
rcrl
insl
clc
jp
stos
jge
inc
and
or
pop
pushf
mov
ss
aam
mov
rcr
adcl
arpl
loopne
mov
pop
in
xchg
out
ss
faddl
adc
dec
pop
push
sub
xor
stos
stos
mov
fcoml
push
push
mov
sahf
enter
and
test
pop
in
xor
or
and
and
ret
adc
inc
adc
push
ljmp
int
stc
mov
dec
cmpsb
lock
mov
pop
mov
mov
cmp
loopne
mov
arpl
sbbb
mov
jmp
out
arpl
mov
pushf
add
cld
rclb
cmpsl
xchg
mov
cmpsb
lods
jge
in
jne
pop
fstpl
in
mov
testl
stos
mov
cld
fbstp
ja
fs
adc
in
mov
scas
dec
ja
ljmp
push
push
cmpsb
enter
mov
comiss
inc
mov
jmp
test
xor
lock
xor
idivl
gs
mov
stos
das
pusha
les
outsb
rorb
out
inc
cli
push
jns
mov
addr16
add
pop
movsl
mov
pushf
push
mov
inc
or
iret
xchg
jge
es
iret
mov
and
orb
add
and
in
popa
push
push
idiv
rorb
jne
mov
mov
mov
test
jne
data16
lock
arpl
mov
stc
xor
imul
mov
aas
loop
push
sub
add
lds
ja
xchg
jmp
sub
or
cmp
fwait
mov
mov
fsts
xor
and
jecxz
mov
mov
sub
test
jno
adc
inc
inc
xchg
out
push
dec
xor
imul
ficompl
lret
rclb
imul
das
push
out
aam
ja
fwait
repnz
lods
lcall
scas
fistpl
mov
adcl
adc
mov
dec
test
mov
loope
push
jmp
je
imul
popa
call
loop
inc
fldt
mov
cmpsb
pusha
or
les
sbb
fldcw
sbb
jne
js
lods
xor
sub
cmp
push
cmpsl
mov
pop
dec
outsb
mov
dec
lods
shrb
push
es
sbb
test
in
xchg
inc
mov
adc
cwtl
sub
stos
mov
add
aaa
mov
stos
loope
add
addr16
dec
jge
sbb
outsl
add
loopne
jg
fstl
mov
and
imul
adc
mov
popf
or
sub
mov
push
cmp
iret
adc
xchg
jb
jmp
fdivs
pop
lret
lret
imul
mov
sub
in
lret
and
sub
xchg
or
push
dec
out
cltd
outsb
xchg
adc
cld
repnz
xor
xor
sub
ja
mov
shl
jg
fsubr
pop
and
popf
lret
sbb
pop
dec
insl
aaa
dec
test
inc
inc
push
or
push
repz
add
push
fwait
ds
lcall
pushf
shlb
inc
mov
push
dec
sub
pop
push
pusha
push
jo
test
lret
pop
and
add
cwtl
adc
mov
stos
int3
or
add
inc
cmp
jmp
jge
vcvttsd2si
push
ss
insl
cmc
pop
xchg
rclb
mov
mov
inc
rorl
or
inc
addr16
movsl
das
or
mov
or
mov
rcr
push
xchg
or
or
xchg
jne
xchg
mov
jecxz
adc
sahf
sub
mov
incb
subb
fdivrl
lock
pop
fwait
xchg
sbb
inc
jno
mov
and
shll
dec
addb
xor
adc
roll
insl
inc
xor
repnz
call
lea
shrl
pop
cmpsl
or
xchg
rcrb
dec
xchg
test
sub
aas
or
loop
addr16
decl
in
ret
outsl
pop
xchg
inc
lret
cwtl
shll
pop
lret
aad
sbb
cwtl
out
iret
or
jecxz
mov
ljmp
xchg
lods
jb
fnstsw
mov
mov
aas
arpl
xor
ret
or
dec
aaa
pop
sbb
mov
xor
cmpsb
jb
push
xlat
pop
mov
xor
cmpb
daa
shrb
xchg
popa
out
mov
push
int
pop
repz
or
ljmp
data16
jmp
scas
dec
jns
jno
mov
jo
xor
cmp
gs
sub
cmp
adc
icebp
fwait
test
jbe
in
jb
sbb
int3
fs
mov
dec
iret
clc
outsl
mov
scas
stos
adc
mov
pop
mov
jmp
imul
fcomip
loopne
cmp
add
cmp
popf
xchg
inc
pop
gs
stc
xchg
ret
jne
js
enter
shll
adc
loopne
fwait
cs
push
popf
fsub
ret
dec
inc
cmpsl
stos
data16
inc
fs
push
mov
fld
lock
jnp
jns
xor
mov
sbb
lret
testl
inc
or
pop
xchg
jp
add
push
int
pop
lcall
push
xchg
xor
sbb
cli
dec
add
out
and
adc
cli
test
fs
bound
stc
mov
cs
ss
mov
cld
jecxz
mov
push
in
xchg
insb
jne
jno
and
inc
cmp
ljmp
cli
dec
pop
cmp
shlb
mov
mov
push
leave
jle
pushf
dec
dec
fwait
out
xchg
inc
movsb
ja
subl
pop
push
mov
inc
sub
inc
shll
xchg
mov
add
or
mov
int3
aam
or
mov
bnd
sub
sub
mov
xchg
mov
aad
fdivrs
sbb
or
loope
call
mov
or
sub
test
or
mov
mov
add
mov
popf
cs
push
insl
xchg
out
out
mov
nop
mov
add
sub
shrb
repnz
das
mov
aam
cmp
rcr
mov
insb
push
sti
xchg
add
mov
and
inc
jle
xchg
movsl
add
insb
hlt
popa
add
dec
inc
push
repnz
inc
stos
adc
cmp
loop
xchg
or
scas
leave
sub
test
add
pop
stos
outsb
mov
cmp
cwtl
incb
or
shll
and
int
jae
jnp
cmp
nop
loope
fwait
mov
push
inc
sub
js
inc
add
fsub
pop
add
cmc
sbb
pop
add
loope
enter
xchg
xor
imul
fsubl
ror
xchg
sub
lds
mov
ret
and
inc
mov
dec
fwait
cmpsl
and
xchg
jb
dec
mov
push
ljmp
jp
fdivp
push
and
stos
push
cmp
push
daa
xlat
push
jno
popa
mov
pop
hlt
js
rorb
pop
sbb
mov
cltd
xor
insb
push
sbb
lahf
into
test
jg
inc
xor
cmp
int
rcrl
lds
bound
xchg
mov
inc
cmpsb
fs
adc
add
sub
arpl
push
es
cmp
sub
ret
sbb
mov
andb
xchg
subl
inc
add
imul
les
dec
push
mov
xchg
add
mov
aas
jp
mov
data16
aad
aam
jns
out
add
arpl
mov
adc
adc
xchg
sub
mov
mov
mov
adc
push
fdivs
hlt
dec
jnp
or
shl
repz
mov
jo
ficoml
icebp
push
inc
jo
sub
xchg
out
stc
push
mov
jmp
cmovs
push
movl
pop
pop
and
push
push
fisubs
sarl
sub
gs
fwait
jecxz
dec
mov
sub
stos
in
cmp
nop
adcl
mov
inc
out
scas
cmp
int
cltd
add
add
xor
jmp
out
rclb
dec
jae
sub
mov
decb
stos
mov
pop
mov
mov
test
adc
pop
jnp
insl
push
xchg
jg
nop
mov
into
mov
xlat
jb
adc
mov
fcmovb
cmp
daa
mov
outsb
push
stos
insb
mov
loope
in
pop
lret
xchg
inc
mov
mov
iret
nop
or
sti
mov
jo
push
dec
stos
mov
add
roll
pop
dec
inc
andl
and
aad
cmp
mov
stc
add
push
xchg
loopne
xor
cmpsb
lret
test
adc
testl
stos
movsl
xchg
pop
ret
pushf
data16
je
add
push
lods
lds
orb
js
jno
pop
js
je
test
rolb
sbb
mov
hlt
adc
xchg
cwtl
popa
jo
int
and
cmp
cli
jno
test
stos
mov
mov
jne
mov
imul
mov
push
pop
push
mov
in
divl
lds
aam
sub
sub
mov
outsl
add
dec
shl
cmpsb
mov
sarb
mov
inc
sbb
mov
sbb
push
jne
cmp
inc
mov
cmpsl
inc
add
inc
pop
push
addr16
dec
jnp
hlt
add
fs
or
loope
mov
lock
repz
movsb
mov
mov
popa
mov
or
pop
sub
pop
ds
push
test
cmpsb
or
fwait
pop
imul
cmpsl
xor
pop
or
dec
imul
pop
lods
mov
push
cs
cmp
mov
jg
mov
jle
js
dec
pop
and
gs
rcpps
fs
push
jae
jnp
negl
je
mov
mov
or
pop
add
cmc
jne
push
imul
cmpsb
in
rcpps
mov
mov
and
and
xchg
pushf
ret
cwtl
ret
push
lods
leave
in
jns
push
xor
sbbl
mov
sub
push
sub
and
stos
jns
test
jp
jb
loopne
xorl
repnz
shll
dec
xchg
insl
inc
clc
mov
jne
cmp
call
into
es
pushf
fidivl
or
rolb
inc
or
rcl
fst
in
and
jge
sub
js,pt
mov
cmpsl
frndint
cmc
je
psrlq
cmp
inc
mov
mov
insb
scas
sbb
or
mov
mov
sub
xor
addl
popf
mov
push
aaa
xchg
pop
mov
xchg
ds
insb
and
jns
xor
xor
test
ja
test
lret
int3
aaa
jge
and
sbb
mov
aam
std
mov
scas
fs
adc
xchg
scas
lods
cmpsl
pop
data16
jbe
sbb
inc
addb
fwait
repz
into
popa
into
sub
fcomp
sti
and
mov
dec
pop
jge
fwait
mov
stc
xchg
cltd
lea
iret
add
inc
mov
xchg
je
psllw
movsb
lds
or
inc
lods
cwtl
xchg
mov
ja
lcall
ret
hlt
mov
stc
and
push
leave
imul
es
xchg
test
mov
sbb
ret
inc
test
in
into
fsub
gs
mov
pop
std
cmc
into
fnstenv
scas
jp
es
xchg
mov
push
push
dec
popa
ja
into
xchg
jnp
mov
pop
aad
stc
adc
fdivrl
push
jns
mov
mov
mov
out
mov
loope
insb
or
sub
mov
cmpsb
adcb
call
cmp
push
push
inc
adc
sbb
mov
or
and
testl
xlat
xor
xor
fstpt
out
out
cmp
and
xchg
push
dec
repz
and
data16
add
jp
in
add
pop
ret
out
add
xchg
arpl
sbb
cltd
cmp
xchg
xchg
rcl
call
mov
sub
add
mov
sarb
mov
inc
inc
std
ss
adc
jb
push
inc
push
movsb
adc
daa
xchg
pop
inc
pop
fisubrl
xor
out
fcmovb
jns
jns
mov
cmp
pop
cmp
dec
jne
mov
adc
jmp
mov
stc
or
mov
xor
inc
fdivrs
fimull
imul
push
shll
imul
leave
mov
es
ror
inc
mov
inc
sub
icebp
dec
imul
xchg
movsl
mov
leave
fdivrs
and
lods
lods
xchg
pop
mov
or
mov
fistl
xor
sub
ljmp
sbb
inc
shll
pop
int
int
repz
and
fldl
insb
mov
cltd
in
or
out
jbe
dec
dec
fistps
sbb
in
adc
iret
clc
aas
jl
out
cmp
in
loope
aad
cmp
call
es
xchg
add
andb
inc
mov
add
scas
sbb
jmp
lcall
cli
daa
adc
fucomp
xchg
and
movb
jl
xchg
sbb
pushf
dec
fstps
xor
pop
jbe
shll
cmp
xlat
jnp
daa
dec
mov
jmp
orl
out
sub
and
dec
pop
jns
ds
movsl
cmp
push
orb
or
cmpsb
lret
ds
not
pop
stos
xor
xchg
dec
and
push
xchg
xchg
sub
stos
lret
mov
push
decl
or
outsb
add
mov
jecxz
sub
das
push
out
hlt
lea
lods
cld
repz
add
lcall
mov
nop
mov
sub
inc
cmp
rclb
insb
jge
loopne
das
ja
lock
mov
sbb
nop
andb
xlat
cmp
push
stos
cmpsl
enter
adc
pop
push
data16
pop
rcrb
sbb
sahf
imul
inc
dec
push
cld
mov
pushf
xchg
or
aas
sbb
dec
in
jl
jl
sub
mov
push
lahf
add
pop
inc
add
sbb
dec
popa
push
enter
xchg
push
in
pop
leave
not
dec
pop
insl
cli
ret
cmc
and
ja
inc
inc
test
in
ret
out
sbb
test
js
mov
aaa
adc
mov
call
in
insl
mov
aad
xchg
aaa
sbb
mov
jo
push
sub
outsb
icebp
or
outsb
insb
call
pop
cmpsb
push
lret
xchg
mov
loope
jae
mov
or
jmp
repnz
cmp
jg
sub
lea
push
in
xor
mov
sbb
adc
cmp
mov
lcall
sbb
fwait
and
insl
addr16
test
inc
adcb
jmp
js
or
inc
xor
cmpsl
in
addl
dec
loope
jmp
xchg
test
pushf
dec
pop
lds
xchg
repz
loop
xor
movsb
push
mov
inc
fldcw
and
inc
push
push
and
or
push
dec
fwait
pop
pop
cmc
movsb
mov
aas
xor
in
addr16
call
ret
xchg
dec
cwtl
xchg
ret
mov
stos
cltd
inc
cli
add
out
mov
pop
add
xorl
lds
pop
outsb
inc
sub
mov
orl
pop
sub
ret
add
aaa
mov
lahf
add
ljmp
push
lods
mov
lcall
lock
mov
enter
shrb
inc
in
xchg
adc
cmc
or
repnz
adc
mov
fidivl
mov
mov
dec
aas
jmp
dec
jg
cwtl
inc
inc
push
xchg
pusha
lahf
cmp
scas
incb
add
jle
fidivl
repnz
js
out
cmpb
ja
loope
inc
and
jno
dec
jne
sbb
cmp
mov
push
or
jecxz
test
mov
loop
fstpt
nop
mov
mov
cmpsb
je
adc
mov
sub
sub
ljmp
xlat
outsl
xor
mov
fbld
fwait
or
dec
push
adc
jno
dec
push
hlt
flds
imul
fucomi
or
negl
leave
mov
jbe
xchg
push
shlb
pop
jbe
leave
inc
fnstsw
xchg
dec
dec
sub
add
jo
jo
cmc
mov
or
daa
xchg
aam
repz
call
call
int3
add
pop
std
xchg
cli
push
mov
lret
add
mov
ds
leave
xchg
fcoml
mov
adc
repnz
inc
add
in
sub
xchg
mov
icebp
xor
das
mov
out
dec
push
or
ficomps
inc
scas
es
stos
mov
adc
mov
inc
cmp
dec
add
negb
test
pop
mov
int3
mov
icebp
loop
pusha
mov
clc
rorl
jne
push
xlat
mov
je
sbb
cli
xchg
jmp
mov
push
jl
mov
sbb
popf
sbb
pop
lock
shr
les
xchg
mov
xchg
cld
cmpl
stc
adcl
jne
mov
test
xor
xchg
test
xlat
dec
cmp
mov
xchg
or
xchg
jl
xorb
test
mov
sbb
or
cltd
mov
outsl
lds
mov
imul
add
or
ja
jp
mov
push
jo
cmpsb
mov
cmovle
idivl
addr16
push
sbb
dec
jmp
pop
jecxz
fiadds
insl
je
mov
mov
jl
je
add
imul
adc
std
lock
jno
call
adc
ja
jno
mov
push
into
fidivrl
fpatan
push
mulb
fsts
sbb
sub
sbb
adc
and
out
bound
bound
mov
pop
jno
clc
mov
lahf
repz
pop
mov
ret
pop
mov
iret
mov
cmp
and
sarb
mov
out
mov
and
jl
fdiv
jmp
sub
dec
jb
icebp
ja
lds
out
pop
push
cmp
push
adcb
icebp
xchg
inc
gs
pop
test
out
cmp
jnp
in
mov
mov
into
movsl
mov
rol
adc
mov
xor
pusha
std
stc
xor
and
imul
ds
inc
mov
xlat
iret
push
dec
and
sbb
xchg
test
stos
add
in
push
push
push
cwtl
mov
flds
jp
xchg
and
pop
inc
ds
test
mov
ss
lret
push
loop
in
in
cltd
dec
fcmovnu
cmp
int3
push
dec
cmp
mov
sub
pusha
mov
pop
scas
fistpl
lods
fdivr
addl
out
dec
add
and
jecxz
mov
xchg
lea
imul
mov
fdivs
movsl
testl
xor
adc
add
and
cmp
xorb
aaa
pop
aaa
cmpsl
sbb
test
loopne
fldenv
sbb
filds
movsl
pop
daa
adc
mov
loope
cmp
add
loop
sbb
aaa
mov
inc
sbb
jle
fisttps
inc
mov
loope
int
movsl
adc
mov
movsl
shr
hlt
mov
xor
lods
cmp
xchg
xchg
fcoml
in
dec
push
xor
or
cmp
stc
cltd
sub
cmp
rol
rcl
sbbl
stc
dec
jle
mov
movsl
aad
aad
aad
std
adc
add
dec
mov
repz
leave
call
rcll
push
mov
pop
out
and
addr16
add
out
mov
cmc
gs
jne
cli
fistps
xchg
int
fstl
sti
xchg
lds
arpl
sub
shll
cwtl
and
lcall
and
xchg
ss
sti
cmovp
pop
scas
cmpsl
mov
aas
lock
push
inc
sbb
xor
jge
aaa
add
xchg
pop
inc
sahf
inc
pop
inc
sti
cmp
out
mov
test
or
stc
stos
in
push
mov
push
or
jg
mov
notb
dec
mov
cld
mov
push
pop
mov
pop
jo
adcl
push
adc
cs
push
jnp
xchg
jmp
xchg
mov
lret
push
pop
hlt
sbb
call
je
popa
jmp
xor
lds
imul
or
add
mov
sbb
stos
shrb
fcmovbe
sbb
ja
pop
out
sbbb
push
sbb
xchg
idivl
push
notb
jne
mov
jge
mov
call
mov
lret
repz
sbb
xchg
imul
loopne
xchg
push
loop
test
add
mov
adc
sahf
cmpsl
adc
inc
adc
push
or
rol
hlt
mov
rolb
adc
jno
inc
and
outsb
cld
out
mov
ret
pop
aad
push
rcl
fs
xor
fcoml
add
cmp
xor
into
mov
add
mov
jbe
cmp
sbb
ja
adc
jnp
fcomip
mov
adc
insb
cmp
pushf
sti
shrb
icebp
fwait
inc
mov
pop
mov
push
dec
into
adc
int
lret
xchg
mov
add
in
pusha
jns
cwtl
xor
shl
xchg
pop
ljmp
inc
popa
mov
dec
int
dec
sbb
fiadds
lea
adc
or
enter
test
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
xchg
fnsave
add
pop
add
add
push
roll
jae
out
xchg
mov
mov
iret
lds
dec
xchg
movsb
mov
scas
mov
pop
jbe
dec
fistps
test
inc
adc
dec
adc
fnstenv
jns
add
mov
inc
roll
xchg
mov
loop
imul
push
jg
fadds
shrl
adc
cmp
out
pop
xchg
push
ror
add
pop
add
add
imul
inc
stc
bnd
inc
scas
lock
insl
add
movsb
repnz
mov
jmp
inc
add
fiadds
mov
rorl
pop
adc
add
fbstp
lock
mov
repz
xchg
aad
pop
std
xchg
pop
sub
sub
addb
into
add
pop
add
add
xor
sahf
cmp
in
mov
movsb
xor
ret
add
int
imul
sub
test
push
pop
outsl
ss
sub
mov
xor
jmp
clc
sbb
ss
das
cld
mov
das
sbb
stos
mov
mov
jbe
repnz
fcmove
lahf
aad
into
out
mov
add
fisubrs
add
add
and
aam
aam
ljmp
je
xchg
jae
popa
mov
add
pop
add
add
outsl
jle
pusha
scas
pop
push
aaa
popa
mov
movsb
jns
adcl
scas
jp
in
pop
lret
and
les
mov
dec
push
in
int
je
aaa
cwtl
test
lret
roll
sar
mov
icebp
xor
lea
sub
repnz
cmp
shl
mov
faddl
lret
dec
jle
sti
cmpsl
mov
dec
mov
jecxz
add
pop
add
add
mov
jmp
xor
lods
cld
pusha
cmpsl
push
inc
fmul
pushf
mov
es
scas
jns
xchg
jbe
pop
popl
fsub
ret
lods
imul
mov
mov
and
in
mov
pop
fwait
movsb
and
or
out
lods
cmp
stc
stc
imulb
pop
sahf
ds
add
pop
add
add
leave
cmpsb
inc
fidivs
add
push
cvtpi2ps
subb
leave
add
push
push
cmpsl
insb
pop
ljmp
clc
mov
xor
jns
inc
xchg
shl
aas
push
test
nop
cwtl
xor
jmp
jge
xor
notl
push
xor
gs
aaa
push
sub
or
pop
add
add
pop
or
xor
test
jmp
pop
cld
gs
mov
popa
fs
std
clc
cs
imul
dec
push
iret
mov
cli
aad
pop
xlat
cmc
ja
gs
fnstcw
or
mov
jne
pop
xlat
mov
jnp
inc
shlb
cmpsl
xor
add
mov
push
adc
cwtl
out
and
and
loope
add
add
inc
jp
rcll
xlat
and
aas
mov
add
test
or
xor
idivb
pushf
pop
add
dec
repnz
cmp
or
lcall
mov
fldt
ds
xchg
arpl
ret
inc
push
push
jb
data16
add
add
sub
das
jle
jg
imul
xchg
mov
add
pop
add
add
daa
mov
mov
pop
in
or
push
sbb
mov
stc
nop
push
sahf
xchg
mov
cli
and
in
sbb
cli
mov
sbb
mov
cmp
clc
push
pop
xor
sbbb
dec
cmp
addr16
and
mov
mov
pop
lods
mov
add
add
int
sbb
aad
stc
jmp
adc
jo
fidivrl
ds
xor
mov
mov
fidivs
enter
das
push
lcall
add
test
lock
and
jnp
dec
xor
repz
jae
xchg
xchg
lret
dec
jg
cmp
push
or
add
or
ret
lods
sub
mov
mov
pop
add
add
inc
mov
fwait
push
testb
jno
mov
scas
mov
sub
fadds
dec
hlt
xor
sbb
in
cmp
push
stos
out
movb
outsl
pop
loop
test
lock
jg
rorb
nop
sbb
sub
inc
sub
fld
add
ror
outsl
clc
shlb
loop
add
add
call
cmpsl
shll
out
loopne
cwtl
jle
cmpsl
sbb
push
jl
jns
iret
lret
sbb
mov
lahf
or
fimull
pop
xchg
jb
cli
mov
or
sti
jg
stc
fs
aaa
gs
push
ss
sbb
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
out
sbb
loop
inc
add
sbb
add
sbb
inc
add
sbb
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
ds
inc
add
test
repnz
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
ficomps
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
rcrb
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
outsl
adc
or
add
pop
add
add
and
push
fdivl
data16
insb
jle
adc
and
fldt
cmc
test
das
lods
mov
dec
dec
xchg
call
pop
fidivs
xor
movsl
pop
jg
popa
insb
xchg
ss
aad
popf
mov
mov
sbb
push
or
lahf
sub
inc
iret
push
and
xchg
sub
cli
jl
xlat
push
sub
jle
mov
add
pop
add
add
lods
incl
cmpsb
iretw
sbb
inc
dec
sbb
in
sbb
xchg
mov
lods
ljmp
leave
repz
fadds
popf
loope
and
cmp
repnz
jge
xor
pushf
push
xchg
test
leave
jge
stc
in
in
fldenv
mov
jg
ljmp
push
jp
xlat
add
pop
add
add
lods
mov
dec
rcrl
push
jl
or
scas
or
jge
or
xor
jbe
mov
cli
js
mov
out
inc
adc
pop
sub
int
mov
cmp
fnsave
pushf
mov
in
mov
in
stos
add
add
cmp
in
fimuls
push
out
imul
add
add
add
aam
sub
int3
out
sub
mov
movsb
and
adc
hlt
dec
in
cmovg
lret
push
cmc
out
sbb
add
push
cltd
pushf
cld
xchg
jg
sbb
or
sbb
sti
sbb
push
iret
mov
and
xor
pop
add
mov
sbb
std
negb
sub
and
xchg
jg
xlat
add
pop
add
add
xchg
fldcw
add
stos
mov
fdiv
fwait
pop
xchg
in
pop
fstps
or
dec
ds
cltd
dec
roll
aad
lret
pushf
pusha
testb
cmp
jmp
sarb
nop
fsub
push
pop
js
sbb
call
lret
jle
or
fstpt
scas
add
xor
jb
inc
mov
gs
add
pop
add
add
inc
into
or
repnz
iret
cmp
leave
movsb
les
add
push
iret
fucom
into
in
cmpsl
push
flds
mov
sbb
insl
ja
js
pushf
scas
cli
mov
movsl
jp
mov
xorb
pushf
shlb
dec
sbb
jmp
jl
lock
push
repz
addb
add
add
add
pop
sub
aas
jl
add
pop
add
add
iret
cwtl
in
in
or
icebp
imul
fistl
pusha
loope
roll
loop
dec
xorl
sbb
lods
test
sahf
loop
loop
jl
and
xchg
jle
dec
rolb
repz
cmpsb
stos
dec
jmp
or
xchg
or
add
mov
aam
xor
and
xlat
fadds
add
add
jb
pushf
outsb
fidivs
lock
std
out
or
popf
or
lods
adcl
inc
std
inc
inc
jo
add
rcrl
xor
inc
repz
inc
ret
adc
loop
and
int
mov
add
out
jmp
je
mov
std
clc
add
add
push
add
mov
out
decl
xor
add
pop
add
add
jno
mov
clc
inc
movntq
push
data16
push
rolb
jns
mov
inc
leave
bound
add
add
pusha
sub
lahf
cwtl
adc
lea
xchg
mov
fwait
outsb
and
mov
loop
pop
enter
sti
jne
xor
jmp
repz
fimull
gs
flds
add
add
repz
imul
mov
xchg
loope
xlat
insb
sbb
jnp
mov
pop
out
push
je
sub
fisubs
enter
ss
clc
mov
mov
xchg
jae
push
in
mov
mov
sub
js
fs
cmp
cmpsl
shr
and
add
pop
iret
pop
aad
ss
dec
out
xchg
outsl
call
add
add
sbb
adcl
add
jmp
and
out
fwait
lcall
add
inc
jbe
and
lret
pop
les
ja
push
arpl
int3
mov
fdivs
mov
daa
dec
ja
jae
enter
inc
push
setl
dec
fmuls
add
cld
cmpb
hlt
inc
fiaddl
add
add
cmpb
push
lcall
gs
xchg
arpl
xor
loope
sub
xlat
std
or
xor
inc
and
mov
xor
inc
lods
push
lods
in
push
pop
lods
test
xor
sar
stos
test
pop
lcall
jmp
pusha
jmp
add
add
lock
jle
repz
cmp
sahf
fiaddl
add
add
mov
fadds
mov
js
bound
lds
jge
mov
push
adc
jge
push
leave
jns
cmpsb
mov
or
shlb
xchg
lahf
and
adc
mov
loop
adc
dec
and
xchg
inc
insb
push
imul
insl
lods
roll
jmp
add
cmc
adc
adc
mov
lds
stc
fiaddl
add
add
push
jmp
call
clc
scas
fistpl
push
nop
pop
stc
es
fimuls
mov
fcomp
pop
jmp
xorb
insl
or
mov
jae
daa
and
cmp
ljmp
mov
jl
mov
push
fwait
or
xchg
xchg
xchg
add
cmp
mov
rclb
mov
pop
add
add
hlt
pop
pop
js
loop
jb
gs
js
rcrl
ljmp
mov
xchg
loope
and
mov
mov
sub
fidivrl
ret
xchg
sbb
xchg
cmp
and
arpl
cli
jmp
lods
adc
mov
mov
dec
out
cmp
add
sqrtps
cmc
das
sbb
xchg
iret
xchg
fisubrs
scas
fildl
add
add
fcomps
loop
sbb
add
clc
sarb
pop
dec
scas
icebp
stos
fucomi
lods
fwait
sbb
xlat
inc
cmp
outsl
inc
fld
jp
push
mov
cmp
fstpt
jo
lahf
xchg
test
in
push
cmp
scas
mov
test
rorb
int3
xor
dec
loope
add
mov
add
sub
fildll
sarl
add
add
je
sub
andb
add
xor
xchg
fdivr
xchg
and
cmp
mov
xor
dec
in
movzwl
jb
add
xor
lret
dec
cmc
gs
loope
dec
inc
mov
aam
sbb
cmp
mov
adc
push
cmp
inc
push
and
adc
testl
hlt
xchg
faddl
add
add
jb
sub
insb
ljmp
in
and
das
fdivrs
sub
push
pop
jmp
in
into
fsubrl
mov
push
adc
ret
rcl
hlt
jo
push
dec
pop
push
inc
das
or
or
jecxz
sub
out
push
adc
popf
mov
push
sarl
lea
add
add
jne
jg
clc
cs
push
hlt
iret
add
pop
add
add
int
xor
mov
es
dec
sub
addr16
test
dec
dec
push
and
xor
cli
xchg
sbb
popa
test
test
cmp
outsb
nop
iret
xor
and
rolb
lret
xchg
mov
jae
mov
inc
movsb
pop
mov
daa
inc
loop
add
mov
cmp
sti
dec
mov
je
lcall
add
pop
add
add
movb
adc
jnp
js
nop
xchg
xor
hlt
insb
pushf
and
out
and
repnz
daa
cltd
sti
xchg
rcll
mov
mov
data16
xchg
push
sar
mov
rolb
arpl
dec
ret
or
or
cmp
das
add
push
mov
mov
xchg
adc
pushf
mov
pop
add
add
pushf
dec
push
nop
pop
ss
dec
fisubl
fstl
pop
and
in
popf
cmp
adc
dec
test
jecxz
lahf
aaa
and
out
mov
pusha
pop
add
or
mov
and
or
pop
outsb
add
cmc
jbe
mov
popa
aaa
pop
adc
pop
sub
xchg
fcmovu
fisttps
push
int3
pop
rol
roll
add
add
jle
jge
cld
inc
ja
loop
xlat
jge
and
push
loop
ljmp
outsl
iret
loopne
insl
dec
je
sub
insl
les
inc
mov
mov
js
push
mov
xlat
mov
push
mov
lret
and
or
sub
sub
inc
jmp
pop
or
add
add
jle
out
sbb
mov
roll
add
add
popf
xlat
pusha
fidivl
push
mov
imul
in
push
ja
sub
and
adc
es
sbb
repnz
mov
out
mov
jnp
int
push
sahf
xor
sti
adc
pop
dec
dec
lea
out
mov
jmp
push
fwait
jmp
fimull
das
pop
das
pushf
loopne
test
ret
mov
add
and
cmp
pop
cmpl
roll
add
add
pop
sbbb
mov
das
jae
popa
sbb
cmc
clc
inc
aad
jns
icebp
or
jnp
mov
into
push
mov
mov
movsb
xadd
cmp
pop
repz
outsb
fsubs
or
hlt
xchg
in
adc
inc
pop
jo
push
ljmp
xchg
nop
ffree
popf
aam
aad
mov
pop
add
add
cmp
roll
rcl
xchg
lret
xchg
js
cmpsl
dec
xchg
pusha
mov
decl
pop
jno
mov
push
in
add
ljmp
cmp
sbb
mov
shr
iret
loope
imulb
in
and
mov
and
cmp
movsb
mov
add
add
mov
jbe
hlt
mov
and
cmpsb
lock
add
add
test
mov
pop
sbb
pushf
dec
popa
pop
mov
ja
mov
jo
in
inc
xor
neg
sub
sbb
mov
jl
addb
or
mov
or
cmp
dec
mov
loop
mov
fsubs
leave
jg
cmp
xor
into
mov
sub
out
scas
jmp
add
pop
add
add
je
adc
xorb
out
jge
ja
xchg
test
mov
fildll
jle
sbb
cmc
or
in
jmp
movsb
mov
enter
out
mov
sub
adc
xchg
push
je
mov
and
sar
add
in
outsb
and
pop
mov
daa
roll
add
add
cli
stc
out
mov
leave
repnz
push
icebp
mov
stos
lds
push
cli
pushf
xchg
in
fistps
mov
hlt
gs
adc
sarb
jnp
das
or
fidivrl
jecxz
lcall
pop
mov
int3
push
int3
inc
push
ret
push
push
lcall
xchg
dec
ja
dec
mov
add
add
mov
and
push
adc
add
add
fs
std
mov
and
mov
addl
out
jnp
rorl
das
xor
pusha
iret
jle
int3
mov
mov
mov
jl
pusha
add
adc
mov
and
xchg
cmpsb
mov
adc
adc
jmp
cs
xchg
scas
mov
add
stc
call
into
inc
mov
pop
xchg
add
roll
add
add
sub
mov
lahf
js
cmp
cwtl
pop
in
xchg
arpl
adc
sbb
subb
pop
aas
popf
mov
add
lret
fiaddl
add
mov
enter
mov
dec
jl
cmpsb
repz
ficoml
cmp
inc
iret
cmc
add
sub
sub
sub
lret
add
pop
add
add
ljmp
imul
ficompl
jno
inc
cli
pop
mov
cli
shll
insl
icebp
push
repnz
xchg
fisubl
jecxz
mov
leave
and
out
stc
cmc
icebp
in
mov
fcoms
pusha
jge
push
pop
mov
icebp
mov
add
add
int3
sbb
out
loopne
lods
aas
adc
xchg
aam
add
add
mov
fwait
int3
cmp
clc
test
aam
push
cmpsl
fstp
fs
push
jb
xor
ds
pminub
test
imul
xor
xchg
fisttps
sarb
mov
lahf
push
sbb
out
pop
in
sbbl
sbb
lods
or
and
fs
int3
and
and
add
test
fildll
in
outsb
out
in
out
aam
add
add
and
shll
adc
mov
insb
aaa
xchg
lods
push
sbb
xchg
pop
adc
push
fsubrl
aad
in
xchg
test
dec
ficoml
sub
push
iret
mov
fstps
lds
or
jge
mov
stos
fdivl
fwait
loope
sub
sarb
add
aad
add
add
pop
mov
sub
test
out
and
mov
sbb
test
fnsave
pop
aaa
xchg
mov
data16
inc
xor
mov
mov
add
outsb
dec
in
sbb
xchg
loope
rcrl
movsl
popa
or
arpl
jne
mov
add
divl
dec
cmp
dec
in
jbe
movsb
aad
add
add
mov
lret
cmp
xor
push
cmpsb
in
sbb
aas
xor
mov
mov
xorl
push
cld
adc
ds
ret
in
fldenv
push
lahf
sub
aaa
fs
xchg
les
inc
lds
push
push
sbb
je
adc
addr16
dec
xrelease
add
arpl
jge
mov
daa
and
shll
pop
add
add
ret
jl
scas
or
or
sub
ds
hlt
lret
mov
pusha
push
int
jnp
mov
jle
movsl
xor
mov
mov
xor
adc
cld
jp
scas
stos
out
jns
or
pusha
mov
cmp
fwait
scas
and
sub
add
push
imul
xor
add
pop
add
add
fisttps
cwtl
xor
adc
sub
jmp
popa
aad
sarl
movsb
gs
stos
and
xor
aas
sub
xchg
xor
testb
outsl
loope
jecxz
rcl
mov
cmp
push
ss
movsl
dec
add
ss
xor
and
sub
add
add
pop
pop
push
xchg
adc
shll
into
in
mov
pop
pop
dec
in
xchg
add
test
add
sub
cmc
jl
xor
dec
push
scas
xchg
imul
inc
xchg
or
lret
mov
dec
jnp
adc
xchg
filds
aaa
out
mul
aaa
cmc
xchg
lcall
jbe
add
pop
add
add
leave
inc
xlat
sbb
dec
movsb
int
pop
or
inc
outsw
jl
notb
out
mov
insl
push
loop
clc
inc
jl
jae
pop
xchg
mov
inc
roll
sbb
aam
cmp
test
xchg
faddp
pop
cmpsl
and
push
sub
outsl
outsl
test
inc
jl
scas
jle
faddl
clc
mov
push
aad
out
fucomip
ss
cmp
scas
pop
rcr
add
pop
add
add
adc
test
ja
push
fsub
push
adc
inc
shll
shl
push
pop
push
nop
mov
cltd
shlb
pop
sub
or
xor
push
sbb
std
rcll
fildl
lcall
test
aaa
cmp
ss
pop
lahf
aaa
add
in
cld
fisubrl
sbb
xchg
fiadds
add
add
rcrl
std
xchg
mov
or
lods
dec
out
and
cmp
or
mov
outsb
out
sub
and
sbb
loope
add
stos
pop
and
repnz
int
mov
setno
call
pop
mov
pop
pop
or
add
push
les
in
lahf
sti
ja
rcll
xlat
xchg
add
pop
add
add
rcll
dec
clc
cmp
dec
repz
shr
push
out
sbbb
dec
add
popa
ds
mov
jne
hlt
sahf
inc
push
sub
or
pop
repz
nop
lcall
int
push
shll
mov
int3
pop
std
aad
mov
test
imul
xchg
cmpl
push
loopne
lcall
add
pop
add
add
inc
cmc
aaa
popf
push
imul
jp
fs
test
jb
lahf
outsb
lds
cwtl
fwait
outsb
add
xchg
add
pop
jmp
add
and
xchg
lods
mov
mov
aaa
sub
mov
nop
cltd
or
mov
xchg
mov
mov
cli
int3
add
test
and
pop
dec
cli
push
int3
icebp
cmp
add
add
jle
mov
fxch
jne
stos
je
cmp
sub
dec
xor
daa
arpl
pop
lret
ds
bound
dec
movsl
cmp
imul
sub
or
cmp
and
inc
sbb
cmpl
ret
adc
aas
push
mov
or
dec
and
pop
adc
outsl
mov
jmp
push
fcmovu
in
sub
fstpl
add
add
mov
addr16
mov
stos
pushf
enter
cmpb
clc
xchg
fwait
pushl
dec
pop
and
scas
cs
aas
mov
or
mov
or
pop
loope
jo
adc
imul
imul
dec
jl
in
fildl
movsl
add
sbb
inc
jecxz
mov
mov
mov
add
add
mov
mov
dec
or
je
xchg
mov
inc
add
inc
sub
dec
pop
pop
mov
sbb
pop
mov
mov
notb
dec
sbb
pop
fistpl
lret
cltd
movsl
mov
push
adc
fistps
popf
push
or
clc
jae
add
mov
icebp
and
xchg
lods
dec
loopne
add
add
mov
mov
cmpsl
ret
add
lcall
sub
aam
addl
mov
out
dec
std
jecxz
insl
clc
mov
cmc
mov
dec
or
sub
mov
mov
imul
mov
add
add
inc
jno
jbe
lds
mov
add
xlat
repz
das
cli
fists
dec
es
jne
fstp
test
add
add
push
cld
fistps
pop
push
addr16
fdivrl
or
adc
xchg
mov
sbb
sahf
andl
or
fistpl
sbb
mov
or
pop
es
sbb
in
cmp
popa
cli
enter
push
aad
mov
movsb
cwtl
sarl
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
adc
add
inc
iret
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
