push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
setb
pusha
addl
cmp
jp
jbe
lcall
loope
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
pop
sbb
inc
into
xchg
push
movsl
push
sub
mov
push
aad
and
push
jns
mov
jge
repnz
out
mov
in
sbb
fs
cwtl
add
dec
sub
ret
sub
sbb
fildl
mov
int
sahf
cmpsl
cmp
addr16
pushf
sbb
xchg
sahf
loop
shrl
sub
aas
sub
out
inc
es
or
nop
lods
movsb
inc
adc
pop
xor
pop
and
push
sti
mov
dec
pop
je
dec
pop
and
sbb
pop
sti
test
cmpb
inc
cmp
shl
push
sbb
pop
inc
aam
mov
movsl
or
cmp
sub
inc
add
imul
cmc
fsubrs
or
popf
dec
pop
addb
add
dec
in
cwtl
jg
fistpll
sub
pop
xor
push
lods
push
lods
cmp
sahf
cli
pop
pop
mov
lret
out
xor
mov
lahf
enter
sub
cmpsb
in
mov
aas
xlat
sub
push
les
xor
cmpsb
cmovae
mov
insb
test
and
lods
xchg
mov
shr
in
mov
sub
xchg
shrb
pop
cmc
adc
and
adc
sbb
xor
pop
insb
aaa
test
imul
imulb
fcmovbe
push
orb
cmpsl
push
push
test
lahf
pop
jp
mul
sub
shrb
loopne
subb
pop
jns
fimuls
or
lcall
pop
scas
les
jmp
sbb
mov
fnstcw
in
ret
or
xchg
jo
and
and
or
mov
dec
cmp
xor
insl
push
ficoml
aam
sbb
mov
sbb
scas
xchg
daa
inc
aaa
dec
xlat
or
dec
pop
xlat
popf
push
data16
inc
mov
and
mov
mov
jge
xchg
inc
sbb
out
jae
aas
xor
dec
xor
leave
xchg
sbb
mov
movsl
sbb
and
push
repz
fisttpl
out
imul
in
cmpsb
inc
js
popa
std
mov
fistl
xor
cmc
dec
xchg
and
inc
outsl
sub
xor
leave
push
push
cmp
jo
je
add
mov
leave
push
add
leave
gs
test
mov
and
jbe
test
push
mov
cmp
idivl
int3
dec
test
rorb
dec
mov
out
adc
dec
kmovw
ja
inc
pop
les
filds
int3
dec
outsl
loop
sbb
cli
fsubr
add
lods
es
dec
push
xor
lock
insl
fucomp
shr
mov
popf
outsb
iret
fidivl
pop
shlb
scas
mov
jo
pop
push
in
push
sub
mov
aad
cmpsb
xchg
xchg
mov
cmpsl
mov
loope
cmp
jns
dec
testl
mov
cs
jae
push
shrb
imul
frstor
stc
test
cmp
daa
and
stos
cmp
lods
jns
xchg
cmc
mov
out
lcall
inc
inc
ret
ret
loope
rolb
or
push
data16
movsb
aam
sbb
movsl
xor
dec
movsb
aam
adc
inc
mov
xchg
ljmp
mov
mov
test
repnz
push
push
fadds
int
ds
std
and
adc
addr16
and
jbe
adc
cld
mov
xor
or
cmc
rorl
imul
out
scas
push
loope
xor
cmp
mov
stc
xchg
jl
and
int
xchg
mov
aas
movb
je
add
rorb
rolb
les
int3
cmpsl
jno
outsl
jmp
dec
sbb
pop
lds
shlb
insl
inc
cwtl
xor
es
push
or
aaa
or
sahf
dec
jnp
jb
testb
add
into
mov
adc
movsb
push
push
movsl
inc
repz
ljmp
push
out
lcall
cmp
outsl
or
icebp
gs
insb
ss
dec
int
push
out
push
add
cmp
cmpsb
mov
push
push
xor
das
jmp
sub
out
clc
shlb
pop
aas
ja
daa
dec
jle
ficomps
dec
decb
negb
inc
daa
push
dec
imul
mov
fwait
std
cli
and
xor
sub
sbb
mov
pop
push
jo
jne
scas
mov
mov
std
out
mov
in
xchg
pop
inc
outsl
bound
test
outsl
jle
cmp
insl
pushf
sbb
stos
adc
ret
fisubl
test
cmp
aas
sub
insl
stos
jbe
stc
pop
adcb
or
pop
aam
mov
sbb
adc
leave
pop
leave
mov
popa
inc
mov
xchg
add
xor
and
push
push
and
fwait
jg
mov
lea
sti
sbb
imull
ficoml
fs
cltd
loop
popf
sub
xchg
inc
jbe
clc
cli
fs
scas
cmc
imul
add
inc
mov
jbe
mov
add
in
sub
xor
jmp
mov
in
nop
or
sub
jg
add
jmp
pop
sbb
fiadds
mov
fs
pushf
cld
add
xchg
inc
rep
or
dec
test
dec
xchg
jg
iret
mov
sub
pusha
cmp
adcl
ds
push
sbbl
int3
ret
inc
adc
dec
out
pop
mov
mov
shlb
mov
test
adc
mov
sub
mov
inc
pushf
inc
stc
sti
lds
dec
sub
sbb
mov
mov
xor
and
nop
adc
mov
sub
pop
hlt
mov
scas
cld
mov
cmc
out
test
mov
loopne
xchg
and
lret
dec
and
push
mov
shlb
pushf
test
or
sub
mov
fidivl
test
nop
inc
jge
sbb
loopne
mov
es
cs
pop
addr16
mov
and
xchg
sbb
dec
enter
ja
shr
pop
jmp
xchg
in
lods
ja
push
mov
mov
je
add
popf
stos
push
ret
cmp
push
fwait
arpl
xor
dec
repnz
add
dec
in
mov
adc
xor
push
notl
xor
jg
jle
mov
jno
icebp
jmp
pop
scas
mov
loopne
stc
inc
pop
mov
movsl
lcall
cmp
bound
lret
cli
lret
fldl2e
ja
jne
push
or
mov
mov
lahf
sbb
jae
fldt
inc
mov
inc
mov
leave
mov
mov
adc
leave
shrb
outsb
jecxz
ljmp
out
push
hlt
enter
and
das
mov
loop
or
insb
jl
pop
cmp
push
adcl
fists
imulb
inc
js
rcrl
imul
add
ds
cmpsl
xor
sbb
lahf
mov
cmp
fs
xor
push
adc
cmp
sti
inc
add
adc
int
or
add
push
inc
sbb
dec
cli
out
leave
pushf
fcmovne
pop
xchg
pop
xchg
aas
push
pop
in
pushf
ret
adc
cmc
mov
jae
rcrb
pop
push
rolb
pushf
push
or
pop
and
mov
mov
in
cld
lds
clc
cmc
xor
incl
jmp
mov
or
dec
imul
nop
insl
mov
jno
stos
lcall
sahf
push
sub
test
mov
sbb
ds
pop
lahf
mov
gs
stos
adc
inc
xchg
xor
mov
mov
inc
scas
jmp
ljmp
js
std
movq
adc
jl
add
shrl
mov
or
loop
jge
ljmp
jp
ficompl
stc
sub
adc
inc
int3
lret
xlat
cmp
cmp
jg
pop
or
push
sbb
test
mov
ret
adc
adc
aad
xor
stos
jecxz
andb
xchg
xor
repnz
lods
inc
mov
adc
movl
mov
inc
dec
das
inc
fisubrl
out
xchg
xor
inc
mull
push
cs
jbe
push
inc
ret
adc
test
sub
rclb
xchg
and
xchg
fisubrs
or
pusha
push
lods
not
popf
aas
pop
sbb
mov
fdivrs
pusha
dec
cmp
mov
sbb
iret
jmp
enter
mov
mov
movsl
mov
and
mov
xor
adc
jns
lcall
test
lcall
imul
xchg
shll
mov
movsl
cmc
orb
jno
pushf
shr
xchg
xchg
adc
in
mov
mov
dec
cmpsb
sbb
xor
pop
xor
add
gs
insl
mov
fsubs
hlt
test
imul
cmp
jecxz
adc
cmpsl
scas
mov
push
or
add
mov
jo
jle
pop
in
fs
jle
jg
std
cmc
adc
sti
lcall
popf
pop
cltd
aad
in
lret
movsb
push
stc
mov
mov
pop
and
mov
and
sub
jnp
lock
test
xchg
shlb
or
sbb
test
insl
in
and
lods
jb
loope
insl
ret
mov
pop
mov
int
pcmpgtb
fcmovbe
and
jbe
ja
fwait
sub
out
and
lret
or
dec
add
xchg
jl,pn
mov
fdivrl
jp
je
push
mov
cmp
xor
mov
sti
ss
movl
fdivrs
lret
loop
scas
or
js
test
jge
mov
or
lret
cmp
aad
nop
ljmp
cmc
and
outsl
fmull
cwtl
push
cmpsb
xchg
lods
xor
fwait
pushf
fimuls
push
mov
add
dec
fistl
out
xchg
jp
das
adc
jle
nop
cmc
sbb
daa
cmp
emms
in
shlb
and
mov
xchg
cmp
sti
int
xchg
jl
orb
mov
inc
mov
jns
lods
jo
sbb
pop
add
mov
int
or
xor
std
cmpsl
gs
fmulp
lods
test
arpl
arpl
or
aad
inc
push
lock
loope
push
push
pop
sbb
cltd
add
rolb
adc
iret
xchg
es
mov
test
addb
push
inc
sahf
leave
jge
int3
insb
jne
jne
fldenv
mov
mov
andl
dec
xchg
jmp
or
jno
imul
in
push
movsl
sarb
push
push
in
popf
js
sbb
or
cmp
xor
aas
stc
inc
sub
repz
or
xor
pop
sub
jle
push
mov
sbb
xchg
jnp
fs
cmp
push
popf
testb
nop
or
mov
or
ret
jbe
aad
cltd
mov
pop
lods
clc
data16
movsb
aam
imul
or
cli
icebp
xlat
cld
int
lahf
fcoml
lock
in
clc
lea
xchg
arpl
shlb
imul
pushf
pop
lret
test
mov
mov
out
es
adc
jmp
int
sarb
lock
adc
xor
and
nop
shll
adcl
hlt
adc
int3
add
mov
out
hlt
pop
push
lret
out
nop
add
push
fwait
movsb
hlt
in
pop
out
ret
scas
sbb
scas
jns
dec
jbe
pop
cs
adc
loop
inc
mov
ret
mov
call
in
sbb
and
push
mov
mov
in
push
dec
xor
aam
mov
scas
cmp
mov
jns
xchg
mov
jg
insl
lahf
call
ret
dec
jmp
out
or
pop
sub
pusha
dec
pop
jae
push
add
jle
dec
clc
fdivrs
in
gs
les
jmp
dec
or
and
fwait
xchg
dec
dec
mov
pop
movsl
inc
jmp
imul
and
lds
lret
addr16
mov
dec
mov
sub
out
cwtl
imul
sbb
mov
test
lahf
ficoms
cmp
mov
fnstsw
mov
add
ret
int
iret
test
mov
out
adc
xchg
testb
subl
mov
mov
adcb
fsts
notb
rcrb
stc
movsl
stc
jmp
outsb
out
cmp
push
shll
nop
pop
imul
call
jae
mov
or
inc
fisubrl
cwtl
xchg
lret
scas
mov
xor
mov
or
sar
dec
and
nop
pop
mov
aad
xchg
sbb
adc
and
cmpsl
lock
rorb
bound
jb
and
pop
cltd
movsbl
imul
ss
xor
or
lret
lcall
icebp
dec
push
loop
mov
dec
out
inc
call
push
jno
inc
jnp
sub
in
mov
aas
ljmp
pop
das
cmpsb
jnp
fwait
rorl
or
or
jl
add
jle
xchg
mov
fwait
xchg
repz
loop
imul
test
mov
outsb
imul
aas
insl
mov
xor
lret
or
addr16
jge
sti
cwtl
inc
movsl
xor
mov
inc
xor
mov
dec
mov
add
xchg
int
mov
lods
lock
ror
cmpsl
dec
stos
inc
inc
inc
in
jno
inc
popa
sarl
push
cli
bound
nop
ss
and
leave
jg
test
mov
push
fimuls
xchg
test
stc
lret
call
cltd
push
cmp
scas
lret
lret
pop
lods
add
loop
fdiv
cwtl
add
sahf
jp
and
sub
loop
or
notb
loope
cmp
xchg
pusha
push
das
movsb
push
fidivrl
out
aas
jo
mov
in
and
sti
push
fwait
sub
mov
cmpsl
mov
aad
outsb
mov
sub
shlb
bound
lock
lods
aas
xor
mov
out
add
sbb
mov
sub
scas
cs
push
mov
push
int3
cmp
jl
int3
cmp
push
scas
test
mov
popf
cmc
fidivl
mov
sbb
xor
std
imul
jno
aad
enter
mov
ja
fisubl
pop
mov
fbld
xchg
rcl
movsb
pop
pushf
inc
mov
loope
pop
cmpsl
pop
clc
mov
pop
cmp
inc
pop
push
inc
dec
lcall
mov
sti
pop
dec
lods
push
xchg
mov
adc
test
ljmp
decl
fnsave
jp
test
repz
xor
loopne
scas
or
mov
adc
mov
pop
mov
xor
push
pop
test
adc
testl
xor
insb
ret
add
fistpl
imul
ss
in
xor
ljmp
xor
pop
add
or
lds
ss
enter
jge
sub
jmp
mov
mov
das
andl
test
mov
pop
add
out
cmp
adc
mov
bnd
adc
ja
fisubrl
cmp
and
push
imul
mov
or
mov
cmc
insl
mov
mulb
xchg
stos
jecxz
xor
andb
aas
loopne
and
pop
outsl
fcmove
jle
xor
cs
or
test
in
mov
mov
test
call
outsb
call
dec
sbb
dec
loope
dec
xchg
popa
lods
les
mov
and
and
xchg
ds
aad
andl
int3
fidivs
adcl
cmp
add
pop
mov
incl
add
pinsrw
sub
movsl
and
data16
sub
pushl
cmp
adc
repz
push
pop
jle
jns
mov
pop
repz
int
psubsb
out
mov
aaa
insl
xchg
repz
sahf
fdivs
imul
cmp
xchg
jge
jno
out
and
fisubrl
aaa
jno
jnp
inc
repnz
adc
cltd
mov
xor
lods
pop
xchg
dec
in
stos
in
incb
sbb
pop
rol
push
filds
mov
xchg
inc
cmp
jmp
mov
pop
jnp
and
das
insb
dec
int3
lahf
dec
push
fwait
mov
out
fidivl
mov
adc
and
loop
pop
xor
mov
call
pop
lods
xchg
cmp
xor
xchg
sub
andb
mov
insb
out
xchg
jbe
imul
adc
pop
cld
pop
stc
and
inc
mov
pop
test
cs
fwait
loop
xor
sbb
imul
sub
cld
fwait
mov
or
xlat
out
xchg
or
sub
rorb
pop
js
gs
mov
lahf
test
push
jp
or
fistpll
iret
aaa
iret
push
test
ficompl
cmc
push
loope
mov
mov
push
and
mov
dec
pop
jl
jo
push
adc
lret
add
adc
sbb
or
pushf
icebp
mov
or
fstpt
jnp
xchg
das
sbb
repz
cltd
sarl
push
outsl
ret
mov
aas
in
mov
shrb
mov
mov
stos
out
mov
dec
sub
ret
test
lea
addb
xchg
push
sar
pop
mov
imul
mov
inc
dec
pop
popf
pop
push
or
lea
xchg
outsb
std
jge
push
outsl
fnsave
xlat
lcall
mov
loop
or
pushf
mov
cmp
lcall
xchg
scas
sub
loopne
push
push
xor
xor
cmp
sub
in
push
sub
psubsb
js
lcall
pusha
adc
stos
out
mov
add
enter
ficomps
cmpsl
in
add
dec
subl
sub
out
sti
stc
inc
int3
mov
popf
mov
mov
loopne
add
mov
adc
xor
mov
push
outsl
inc
mov
sbb
xor
and
lock
sbb
dec
jge
aaa
mov
pop
jns
test
enter
sub
pusha
pop
pop
test
lods
movl
cmpsb
mov
add
dec
hlt
push
pop
imul
movsb
and
fwait
push
mov
mov
adc
daa
loop
loopne
stos
aas
mov
adc
sbb
aad
std
jp
es
push
dec
call
jns
jnp
lret
jecxz
rorb
mov
dec
mov
mov
cmp
jg
out
sbb
daa
sub
test
arpl
test
subb
and
mov
mov
lea
xchg
mov
std
pop
les
test
xor
cli
xchg
mov
imul
pushw
mov
mov
and
pop
mov
cmp
mov
or
mov
out
add
ljmp
sbb
out
shl
outsl
jmp
xchg
stos
addr16
push
out
mov
les
adcl
xchg
into
out
insb
cld
xchg
in
stos
pop
xchg
stc
fimull
push
hlt
xor
enter
popf
inc
popa
lds
mov
call
stos
mov
push
es
pop
fdivrs
fwait
pop
iret
std
xor
adc
adc
push
in
or
bound
add
inc
shll
jmp
sub
pop
adc
xchg
sub
dec
leave
sub
sub
mov
loopne
sub
push
jle
or
pop
lds
mov
cwtl
rorl
pushf
fistl
enter
fnstenv
or
dec
add
xchg
fadds
fcoml
test
scas
addr16
xchg
mov
xchg
pop
cmp
fstl
sti
aam
pop
pushl
stos
ss
mov
neg
lock
mov
es
add
inc
int
pop
leave
fstl
inc
iret
or
push
xchg
nop
cmpsb
imul
jecxz
dec
imul
mov
enter
call
leave
es
xor
jmp
out
jb
test
mov
jne
sbb
xlat
testb
push
push
add
rclb
inc
scas
inc
or
mov
jge
jmp
mov
adcb
movsb
mov
jle
mov
std
mov
xor
jg
cmp
into
pop
inc
jecxz
push
jle
adc
data16
add
pushf
adc
es
or
jmp
or
pop
push
gs
dec
inc
aam
jmp
iret
sbb
push
lods
mov
mov
pop
cmp
loopne
xor
cmp
out
jo
loopne
mov
sub
mov
pusha
push
push
daa
scas
and
pop
push
popa
pop
test
mov
mov
adc
or
push
mov
popf
aas
xor
dec
scas
in
inc
adc
mov
add
mov
and
jl
cmpsl
je
movsl
add
sub
fs
push
jne
shlb
and
sub
sbbl
dec
es
mov
stc
ds
mov
int
xchg
xor
pop
mov
into
add
adc
mov
shll
inc
mov
push
adcb
add
cli
mov
daa
pop
stos
dec
push
cltd
or
mov
aas
sar
mov
push
sbb
pop
push
fwait
dec
mov
fldl
hlt
add
add
or
stc
pop
xor
shlb
lret
in
lds
cmpb
mov
inc
nop
adc
adc
inc
push
and
je
push
test
lcall
or
orb
movsl
js
aas
add
mov
outsl
clc
mov
xchg
lds
hlt
loop
test
lahf
fildll
popf
out
fnstcw
repz
pop
pop
in
lcall
xor
xchg
cmp
cld
bound
xlat
test
push
inc
das
dec
test
push
fs
mov
mov
jecxz
sub
cmpsl
xor
push
xchg
aas
push
mov
jnp
push
test
es
out
xchg
decl
mov
mov
fs
fists
js
dec
cli
shl
mov
inc
push
sbbb
push
mov
mov
fwait
sub
out
or
stc
dec
rcl
pop
mov
mov
sub
shll
or
inc
add
ret
mov
adc
mov
xchg
adc
jp
aaa
test
adc
add
ljmp
xor
call
mov
int3
mov
movsl
hlt
inc
sub
add
je
sub
or
out
lret
fisubrl
jge
test
ret
jge
mov
ret
popf
dec
and
cmpb
lock
inc
scas
mov
xor
in
lods
mov
out
push
sbb
pop
cli
and
mov
lret
fs
outsl
sub
popa
dec
in
push
fistpl
lret
push
hlt
dec
push
add
mov
xchg
push
movsl
fs
stc
mov
mov
xchg
cmp
push
jge
or
ret
cmp
jg
cmc
stc
lahf
mov
xlat
dec
ja
jae
sbb
xor
outsl
scas
jbe
lods
pop
jl
pop
jb
call
les
push
adc
xchg
inc
pop
imul
loope
cmp
mov
xchg
push
fwait
gs
iret
lea
ficomps
or
idivb
push
stos
lret
call
clc
mov
add
add
push
bnd
mov
ljmp
outsl
mov
fnstsw
pop
int3
push
dec
push
dec
sub
loope
or
in
push
mov
clc
jns
and
push
popa
push
sbb
inc
jne
pop
xchg
out
and
push
cltd
into
hlt
push
sbb
call
mov
jnp
imulb
jge
jmp
test
mov
enter
and
test
aaa
in
imul
fs
icebp
dec
and
and
push
inc
jo
add
rclb
ja
dec
test
mov
cmp
lea
add
lahf
insl
subl
sub
add
adc
ret
jmp
add
divl
mov
adc
cmpsb
loopne
xchg
dec
mov
add
jle
pop
dec
pop
jae
dec
fcoms
inc
cmp
in
mov
push
mov
mov
and
jp
and
jb
mov
inc
lods
aaa
dec
jae
pop
sbb
push
rclb
xlat
lods
mov
xchg
cmp
add
rcrl
jo
push
ror
in
sbb
dec
cmp
mov
and
dec
cwtl
fwait
cmp
hlt
ljmp
sbb
fmull
imul
sbb
js
adc
push
cmc
aaa
xor
mov
fldcw
mov
push
data16
mov
dec
jecxz
lahf
jnp
fwait
imul
mov
mov
mov
leave
cmp
sbb
gs
adc
ds
scas
mov
jl
mov
jge
jl
sahf
js
shlb
rcrl
jp
in
push
inc
movsl
jae
or
lret
xchg
cmp
add
and
cmp
push
add
lods
rcl
cmpsl
pop
ljmp
imul
outsl
mov
pop
ss
sti
mov
cld
je
imul
in
xchg
movsb
push
mov
xchg
add
scas
cwtl
mov
pop
in
jae
ja
pop
mov
in
adc
xchg
shr
dec
push
inc
into
jmp
mov
xchg
sub
pushf
add
or
stos
into
jnp
pop
notl
push
imul
mov
lds
or
lods
xor
jg
leave
ss
sbb
sub
popf
add
ss
xchg
test
outsl
mov
push
sar
sub
in
jge
daa
dec
loop
popf
orb
in
and
mov
xchg
pop
popa
loope
dec
call
aaa
add
add
adc
insl
push
inc
arpl
pop
sbb
scas
pop
mov
mov
es
out
and
pop
stos
lock
cmovl
ret
push
xchg
pop
inc
sbb
jbe
aas
mov
pusha
or
push
mov
lock
pop
incb
push
pop
imul
pop
xchg
mov
jns
sub
loopne
add
lret
jg
mov
cmpsb
psubsw
dec
jae
mov
clc
mov
les
call
ret
ds
and
iret
sbb
ja
stos
pushf
std
cmpxchg
call
or
mov
repnz
popa
out
cmc
jbe
cmpsb
cmp
inc
insb
and
js
pop
loopne
fstl
aas
rcl
and
fucomp
pop
pop
push
insl
dec
add
sti
nop
andl
mov
pushf
lcall
mov
outsb
xchg
xor
and
cmpsb
jne
jle
or
xchg
push
xchg
neg
arpl
rclb
sub
mov
fistpll
cmpl
adc
xor
xchg
xchg
mov
popa
dec
push
xchg
andl
js
lret
mov
pop
xchg
lret
mov
out
lods
lds
xor
mov
ret
xchg
mov
mov
inc
xchg
cmp
xor
xor
cs
jmp
dec
adc
mov
xlat
cwtl
adc
xchg
out
fwait
cmpsl
xor
andl
adc
stos
add
push
xor
int
inc
or
fdivrl
push
les
sub
push
pop
sbb
mov
into
mov
mov
jnp
jle
jo
pop
sbb
push
push
test
adc
or
mov
push
je
icebp
dec
inc
sti
minps
jb
xchg
test
and
js
xchg
outsb
iret
aaa
add
sbbb
cmp
mov
fdivp
movsl
push
mov
mov
testl
shlb
stos
jo
pop
sbb
cmp
inc
movsb
adc
mov
mov
mov
sub
inc
inc
adc
leave
or
shlb
outsb
mov
cmp
sbbl
loope
sbb
mov
sub
lahf
sbb
dec
push
data16
jmp
pop
adc
mov
sbb
xor
cmpb
and
xor
adc
cmpl
je
jo
xchg
clc
pop
in
push
mov
ss
sub
lcall
mov
movsl
shlb
mov
dec
mov
inc
push
push
jle
ret
inc
leave
push
xor
jae
sub
stos
push
xor
push
add
fwait
ljmp
rolb
fadds
mov
cmpl
push
dec
lock
pop
mov
shl
shll
fmul
cmp
mulb
fistpl
imul
push
push
mov
or
out
cmpsl
fmul
push
cwtl
fsts
mov
rcll
jecxz
mov
shl
out
and
cmp
push
bound
imul
pop
adc
dec
sub
or
push
scas
add
jae
inc
jns
xchg
sub
jb
repnz
mov
leave
mov
and
pop
mov
sar
mov
rorl
je
adc
ds
into
jae
movsl
mov
pop
adc
push
je
push
cmp
and
stos
xor
jge
push
movsb
ficoms
xchg
into
cmpsl
sarb
xor
stos
xchg
pop
dec
jne
jae
sbb
dec
test
fwait
xchg
adc
mov
xorb
leave
pop
movsb
adc
jae
fldenv
arpl
aam
mov
dec
adc
into
orl
mov
push
jecxz
loopne
inc
push
jle
lods
dec
out
sbb
lcall
bound
xor
inc
lock
xor
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
out
rol
inc
pusha
addl
cli
push
jno
push
mov
shll
push
stos
jno
test
mov
movsb
leave
loope
lahf
mov
lahf
js
adc
cmp
jmp
arpl
mov
mov
scas
xchg
fwait
stos
into
xor
sub
sbb
mov
pop
jo
sbb
ja
add
mov
pop
ja
cmp
xor
mov
leave
sti
ror
add
push
rolb
out
push
push
fildll
pusha
imul
lahf
mov
mov
xor
popa
mov
enter
jle
sbb
frstor
push
push
inc
xchg
inc
fcompl
mov
mov
pop
jae
mov
ss
test
adc
cmpsb
adc
out
jae
pop
imull
icebp
aad
das
dec
cmp
je
dec
push
jns
inc
jecxz
push
sub
sahf
adc
or
xor
iret
adc
pusha
daa
mov
cmp
sub
sub
sub
stc
lods
pop
and
cmp
or
adc
jb
sahf
sarl
lods
test
cmp
push
cwtl
mov
test
xor
cmpsb
push
das
pop
cmp
test
adc
stc
push
rcrb
scas
sbb
pop
jbe
and
cwtl
push
mov
outsl
sbbb
js
sub
pop
ja
stos
or
call
out
cmp
sub
jg
xchg
rol
in
pop
les
sub
js
xchg
jp
loopne
cmp
sub
adc
xchg
aam
push
adc
lcall
out
fiaddl
or
dec
in
or
hlt
gs
xchg
cmp
aas
in
xor
fsts
sbb
sub
out
pop
sbb
mov
iret
testb
jecxz
adc
loopne
push
ficomps
test
xchg
shlb
jnp
jo
aas
icebp
imul
leave
sub
outsl
out
jl
jne
lahf
lock
fcomp
fmull
fdivp
sbb
sub
call
fnsave
mov
and
je
pop
lds
inc
push
adc
scas
jmp
xchg
xchg
push
lds
sub
push
push
cltd
mov
std
mov
mov
mov
push
xchg
mov
xchg
mov
mov
scas
mov
lods
das
mov
push
outsb
stos
in
nop
xor
aam
std
outsl
xchg
jb
inc
stc
mov
cmp
jle
sub
pop
jg
aaa
sub
cmc
xchg
cli
xor
pop
into
lds
loope
ja
add
mov
fsubrs
or
push
xchg
insl
stc
dec
test
cltd
test
repnz
lret
mov
mov
and
jb
mov
int
insl
insl
ret
out
fstpl
dec
sbb
mov
dec
mov
or
sub
pop
push
sbb
inc
xchg
mov
rcll
mov
sbb
sahf
test
jl
or
push
iret
mov
das
into
repz
push
push
mov
outsb
cli
pop
fnstcw
cmp
mov
mov
mov
push
daa
idivb
les
loop
xchg
adc
es
inc
mov
jmp
ret
adc
push
data16
rcrl
add
xchg
pop
nop
mov
fstps
sbb
jne
ret
out
dec
mov
xor
sub
cmp
pop
and
jbe
sti
push
pop
scas
jns
mov
and
mov
push
add
mov
pop
push
lcall
popa
push
add
jg
xor
and
loopne
popf
adc
ss
hlt
cltd
ds
cmp
imul
push
dec
cld
repnz
inc
sahf
jge
fcomps
lcall
mov
int
lods
jae
subb
push
les
cmp
inc
jmp
sub
lea
inc
push
in
xchg
mov
and
loope
dec
or
pop
mov
lahf
negb
lahf
arpl
shrl
icebp
or
lock
mov
es
adc
daa
adc
inc
dec
bound
push
cwtl
insl
cli
lcall
add
or
cmc
stos
cmp
adc
cmp
hlt
insl
fdivrl
mov
jg
dec
and
out
nop
jp
js
stc
push
sub
inc
int
or
jle
lret
and
adc
repz
mov
shr
jae
fs
je
out
loope
push
rclb
outsl
orl
push
pop
bswap
cltd
and
popa
ficoml
stos
adc
shlb
fidivl
inc
push
pop
sub
mov
xchg
adc
or
in
testb
add
xchg
xor
cmpsl
std
inc
rorl
outsb
lea
sbb
dec
jge
or
dec
pop
jo
mov
adc
pop
stos
test
push
push
das
mov
add
arpl
xchg
xor
jl
hlt
mov
xor
iret
aad
cwtl
and
jae
sbb
dec
cmp
sub
add
mov
mov
and
lret
or
cwtl
xor
aam
xchg
imul
cmc
sub
mov
mov
sbb
sti
mov
cmc
add
push
jp
push
div
loopne
push
clts
sub
or
jl
inc
and
fwait
testl
adc
iret
aam
je
imul
pop
lret
mov
and
push
xor
and
push
out
inc
push
xchg
sub
xchg
jecxz
in
cli
sub
or
hlt
xlat
add
xchg
pop
pop
pop
sti
xchg
mov
xor
xor
loop
cmp
push
aas
mov
lods
les
in
xchg
in
dec
popf
data16
dec
mov
fidivrs
jp
out
pop
addr16
js
cmpsl
push
test
sbb
js
xchg
into
or
ljmp
mov
mov
cmpsb
fimuls
stos
sub
xor
jbe
gs
ljmp
fidivs
mov
push
dec
imul
jno
or
das
ret
push
push
and
pop
sbb
in
xchg
cld
add
fsubr
or
push
pop
test
pop
aas
in
clc
fildll
jmp
jns
xchg
sti
push
loope
test
adc
jo
pop
and
and
jb
mov
scas
repz
and
pop
jne
int
mov
xor
out
sub
and
test
push
add
repnz
mov
bound
in
outsb
dec
cmp
add
cmc
pop
stos
inc
cld
roll
pop
push
popf
mov
addr16
xor
sbb
and
dec
lcall
data16
aaa
xchg
push
fs
pop
inc
fcoml
dec
pop
xlat
aaa
ret
mov
imul
jl
xlat
mov
in
aam
xor
jge
and
negb
mov
paddusb
shl
adc
fwait
mov
sar
dec
loopne
insb
xlat
or
aaa
jb
dec
sahf
add
out
and
mov
popa
cmp
push
push
aad
xorb
aam
and
jae
push
xchg
xor
loope
jnp
pop
ja
scas
fcmovnbe
notb
and
sarl
jge
dec
dec
inc
fists
sbb
pop
clc
mov
mov
adc
mov
dec
mov
out
mov
sub
js
jg
repz
je
out
daa
or
pop
inc
lods
jle
push
inc
xor
stos
mov
jle
xor
ficompl
cmc
sbb
sahf
dec
cli
push
aas
cwtl
mov
mov
movsl
fnstenv
jno
and
fcoml
shll
in
outsl
std
mulb
jl
fucomp
xchg
rcrl
daa
jae
xchg
jae
add
jge
daa
mov
sbb
jnp
icebp
dec
sahf
outsl
jle
test
cmp
jp
rcll
or
pop
xchg
add
dec
movb
or
mov
pop
pop
xchg
ret
sbb
push
mov
jne
das
cmp
lea
push
aas
mov
mov
xchg
lods
mov
mov
mov
xchg
sub
mov
test
xchg
mov
aam
push
fwait
jg
dec
in
cs
xor
inc
sub
jbe
add
ret
mov
mov
add
inc
mov
leave
scas
ljmp
inc
or
adc
data16
sub
mov
pop
nop
mov
fisttpl
xchg
sub
lcall
push
popa
add
xor
push
or
mov
movsl
or
xchg
pop
cmp
lods
cmpsl
dec
fidivrl
push
pop
fwait
movl
xchg
mov
sbb
sahf
jo
mov
std
add
or
into
jl
pop
pusha
mov
arpl
jae
cmp
push
mov
cmp
push
adc
js
mov
xchg
sub
fcomps
cmp
pop
outsl
push
adc
outsb
fs
cs
pop
xlat
js
in
es
adc
cmp
xchg
shll
scas
dec
pop
sub
jp
jmp
push
es
mov
paddusw
ljmp
and
xchg
lea
sbb
cs
dec
push
enter
adc
push
std
jmp
adcb
lock
into
push
mov
push
pop
outsb
addl
les
push
lahf
shrb
out
mov
test
push
sub
icebp
insb
out
test
mov
int
dec
sub
and
popf
out
outsb
and
add
adc
pop
addr16
pusha
enter
or
mov
out
ljmp
mov
sub
inc
add
xchg
rclb
jae
and
sub
ss
jmp
das
in
js
ja
pop
lods
mov
int
ljmp
jne
inc
pusha
jmp
push
fistl
jle
adc
in
inc
pop
sub
adc
adc
aas
outsb
mov
mov
push
mov
and
in
sub
gs
int
xlat
repnz
add
repz
pop
pushf
jns
mov
mov
filds
push
repz
sbb
mov
push
sub
psllq
xor
push
pop
loope
pop
sub
or
in
test
mov
xchg
push
test
mov
vmwrite
mov
aad
das
and
mov
out
and
sub
inc
clc
pop
add
mov
outsb
sub
loope
jp,pt
popa
lods
xor
pop
aas
dec
xchg
xchg
out
int3
jae
xor
pop
in
push
or
push
mov
test
movsl
stc
sbb
jg
mov
mov
outsb
addr16
orl
ficoms
inc
xchg
mov
and
lret
adc
sbb
adc
xchg
ret
ret
movsl
sbb
insl
les
test
or
stc
pushf
xchg
sub
push
sarl
or
dec
add
in
jns
sub
mov
inc
sub
push
cltd
mov
outsl
outsb
sub
sub
cltd
mov
fldcw
inc
jb
mov
repz
popa
mov
scas
stos
aad
sti
fmuls
dec
int
lcall
insb
pop
sub
das
or
out
push
pop
pop
mov
loope
xor
pop
out
lds
mov
mov
and
loop
in
jecxz
dec
push
and
pop
mov
jbe
or
cmp
jo
and
mov
cld
aas
pop
push
sbb
mov
arpl
push
jge
xor
fiadds
mov
pop
and
mov
sarl
sarb
pop
xlat
fimull
and
mov
or
cs
push
mov
add
pop
dec
popf
idiv
adc
mov
loope
or
fs
mov
hlt
or
xor
inc
mov
cwtl
inc
and
lds
push
xchg
cli
sub
stos
leave
jbe
rcrl
test
push
int
xor
std
sub
movsl
hlt
int
push
ds
jbe
test
and
cmp
jo
push
lods
rol
sahf
mulb
add
cmp
pop
test
loop
test
daa
sbb
pusha
push
fcmovnb
rcr
pop
mov
cld
mov
pusha
mov
lcall
test
and
sbb
mov
dec
inc
jle
fcmovu
leave
cmp
mov
sub
test
xchg
jbe
push
icebp
stos
xchg
xchg
dec
jmp
cmpsb
cmpsb
inc
xor
dec
xlat
js
cmc
pop
xor
aaa
loopne
nop
add
roll
xchg
dec
or
pop
jne
cs
mov
icebp
fdivrs
sub
mov
andl
sbb
sub
imul
sti
push
aad
add
and
adc
or
aam
or
xor
test
inc
outsl
mov
adc
and
jmp
aas
fcomps
jne
insl
fwait
lock
pop
sti
testl
pop
add
roll
iret
cmp
das
mov
inc
jae
fld
divb
stc
popa
out
add
cmp
mov
jo
inc
insl
sub
xor
dec
pop
ret
cli
movb
dec
in
jns
inc
cmc
dec
push
fisttps
div
xor
jbe
stos
mov
sbb
xor
stos
test
sub
mov
and
ret
adc
dec
pop
push
jno
insl
les
lods
adc
pop
dec
jl
cltd
ficoml
ds
cmpsl
xchg
mov
push
cmp
jnp
call
test
js
add
sbb
fbld
addb
jnp
inc
rorb
imul
mov
add
lret
jbe
sub
adc
ret
push
loopne
adc
out
lods
ja
inc
je
add
sbb
push
pop
loopne
sbb
push
loop
xchg
outsl
push
mov
pop
xchg
push
int3
add
pop
loop
inc
push
movsb
mov
adc
jle
ss
mov
enter
add
add
ret
cmc
mov
dec
aam
rcll
jle
and
ss
mov
jnp
mov
push
idivl
jp
sub
inc
mov
jno
adc
into
sbb
inc
loop
repz
cld
cmp
pop
push
cli
in
and
mov
mov
in
das
scas
or
std
cli
iret
fistpl
add
or
xchg
xor
and
lock
fwait
out
addr16
decb
bound
xlat
jnp
xor
ljmp
add
decl
cmp
addb
aam
lods
push
into
test
inc
add
jge
cmp
rolb
jae
cmp
insb
jl
inc
imul
arpl
mov
and
sub
mov
out
ret
neg
movsl
xor
aaa
push
aas
dec
rorb
stos
outsl
fadds
or
inc
push
lahf
dec
adc
movl
inc
jmp
in
test
mov
pop
cvtps2pi
push
aam
bound
adc
cmc
mov
mov
aas
outsb
adc
pop
test
dec
adc
es
pop
xor
cmp
enter
and
clc
pop
adcb
jbe
sti
pushl
xchg
mov
arpl
cmp
aaa
or
sbb
dec
xor
jecxz
jecxz
cmpb
idivb
movsb
aam
jp
sub
int
xor
xchg
in
mov
dec
mov
sub
adc
mov
pop
std
cltd
rcr
mov
sti
js
jbe
push
add
data16
pop
icebp
fwait
mov
lret
clc
pop
mov
xor
or
les
and
je
jge
cmp
stos
xchg
cmp
pop
lods
daa
repnz
loope
pop
lret
rorb
iret
mov
push
je
pop
or
mov
mov
sbb
cmp
pop
jle
dec
jecxz
sbb
cmp
mov
jne
gs
push
lcall
inc
aad
std
pop
xor
rorl
fisttpl
clc
sub
dec
jne
ljmp
loop
dec
mov
mov
fsubrs
cltd
add
subb
pop
mov
imulb
mov
loop
jae
js
lcall
icebp
fsubp
adc
pop
adc
in
imul
sbb
mov
fidivrl
mov
xchg
pop
mov
add
fcoms
je
dec
sbb
adc
cltd
xchg
add
dec
push
cmp
fucomip
jb
sub
repz
cmp
mov
sub
xchg
cmpsb
or
adc
repnz
ret
dec
loop
inc
jae
fnsave
push
cltd
outsl
dec
test
jp
xchg
xor
mov
pop
sub
incl
clc
sbb
popf
pop
aaa
cmp
and
pop
test
push
dec
mov
or
lods
sbb
js
stos
pop
sub
in
enter
pop
and
lret
or
sbb
add
aaa
lahf
xlat
and
hlt
mov
add
adc
pop
jp
pop
inc
xchg
add
push
in
shrl
mov
mov
stos
in
lods
mov
std
stos
icebp
jecxz
mov
or
lret
iret
inc
mov
aas
jl
inc
and
sub
in
adc
jns
dec
xchg
mov
imul
push
lret
gs
jnp
jbe
aas
test
imul
lods
stos
pusha
ljmp
mov
ret
inc
test
xor
push
push
sbb
inc
xchg
enter
dec
loopne
shll
adc
call
xchg
jg
add
mov
imul
out
mov
aas
add
jns
sub
push
dec
sbb
mov
movsb
mov
sub
jb
loop
pusha
add
addr16
out
into
orb
lret
jns
in
pop
mov
inc
iret
int
test
and
adc
cs
test
pop
jp
inc
lods
mov
ret
pop
mov
push
dec
adc
jl
or
roll
jmp
jae
jl
xor
out
sbb
jg
and
imul
inc
cmp
rcl
xchg
add
mov
xor
cmc
aaa
cmp
sub
in
icebp
call
add
adc
jo
mov
ret
dec
imul
mov
test
sub
fdivrp
pop
mov
nop
test
imul
push
sbb
dec
cwtl
cmp
xchg
add
lret
push
das
stos
fwait
mov
pop
pop
ficoml
fwait
cmp
orl
jmp
aam
lock
dec
push
shlb
lock
cmp
std
in
dec
push
adc
xchg
out
repnz
lock
test
sarl
ret
ficoml
mov
dec
add
and
cli
push
xchg
dec
mov
jge
insb
enter
jmp
inc
in
jmp
in
and
jo
ss
add
popf
sbb
das
inc
in
mov
mov
push
aaa
xchg
ss
insb
lea
mov
sbb
movsb
inc
popf
inc
inc
push
sub
adc
adcb
enter
lds
xor
add
loopne
mov
test
popa
mov
xor
sarb
jge
lods
std
push
pop
hlt
out
lods
xor
mov
mov
jmp
mov
out
cmc
sbb
jns
jno
incl
call
xchg
cmp
das
push
stc
rol
push
lret
mov
jbe
pop
mov
pop
xchg
mov
fs
imulb
addr16
clc
or
fwait
lahf
incb
jle
mov
push
loope
mov
insb
pop
incl
jl
pop
pop
mov
adc
das
fdivs
lods
xchg
lcall
sub
add
jbe
scas
xlat
push
mov
cmpsb
jo
jecxz
xchg
into
int
jp
sub
push
mov
scas
out
rorb
mov
addl
data16
mov
dec
call
test
xchg
jno
lea
mov
cmp
data16
test
and
and
sbb
aam
ret
les
test
mov
dec
clc
call
sub
or
jne
adc
call
rcll
repz
jle
sbb
jnp
imul
inc
dec
cli
ja
or
jp
sbb
ljmp
xchg
ljmp
shlb
sbbl
sbb
jge
rolb
mov
pop
cmp
imulb
cmp
sbb
mov
add
test
ds
or
out
aas
in
jmp
xchg
mov
and
pop
push
jp
mov
add
cmpsb
push
mov
xor
imul
je
push
xchg
or
jns
add
je
loope
mov
xchg
dec
sbbb
mov
scas
jne
xor
mov
dec
shlb
jle
sbb
repz
xchg
adc
xchg
jns
mov
int3
outsb
testb
sub
pop
nop
adc
or
adc
mov
popf
into
xlat
push
dec
inc
pop
gs
or
or
aad
dec
xor
sbb
push
test
sbb
or
mov
jmp
aas
jl
inc
clc
xor
std
aad
sub
test
iret
mov
inc
rcl
sbb
jle
mov
cmc
cmp
movsl
lods
repz
adc
subl
mov
aaa
lahf
push
int
push
in
push
hlt
dec
shlb
cmpsl
jmp
and
adc
push
cmc
inc
imul
subb
sbb
sahf
mov
mov
sbb
pushf
dec
or
test
mov
xor
push
int
into
subl
movq
lret
punpckhbw
stos
add
imul
sub
scas
pop
fsub
xor
in
jno
xor
xorb
jg
inc
imul
push
popf
push
lods
mov
ds
shll
mov
das
jae
adc
fildll
jne
sub
mov
lds
dec
outsb
mov
push
ja
sbb
mov
sbb
mov
push
ror
mov
js
push
xchg
dec
jb
jecxz
mov
loope
mov
or
loope
mov
lock
ja
xchg
jns
in
in
sub
sbb
or
rorw
cmc
je
rolb
lea
lcall
iret
xchg
jmp
adc
out
std
adc
in
mov
push
or
or
jp
push
ljmp
and
adc
push
dec
cmpsl
pop
xchg
test
xchg
and
fbstp
jb
fcomps
push
cld
ss
sub
add
mov
push
popa
rol
push
pusha
inc
sbb
or
in
movsl
jno
inc
push
imul
jl
cwtl
ds
stos
imul
js
add
jbe
stos
xchg
sub
jb
sub
fs
and
pop
and
mov
movsl
push
in
add
clc
dec
sub
movsb
mov
sbb
enter
in
int3
add
das
sub
arpl
repz
sub
cmp
and
iret
xor
mov
cmp
fmulp
or
arpl
stc
dec
dec
and
mov
xchg
or
mov
xchg
mov
arpl
xor
outsb
push
inc
inc
or
xchg
mov
mov
cli
loop
je
in
cmpsl
pop
addr16
jne
pop
insl
sub
repnz
aaa
sbb
mov
cmp
mov
aam
shl
mov
filds
push
movsl
and
inc
add
cmpsl
push
lret
sub
out
add
push
sbb
and
inc
scas
and
hlt
pop
mov
rorb
mov
js
sbb
jb
imull
and
ja
mov
xchg
or
mov
out
dec
add
ret
and
mov
in
sbb
mov
dec
xor
sub
pop
pop
setg
jbe
icebp
insl
jmp
ja
mov
out
cmp
ja
enter
fcmovnbe
leave
sub
adc
jmp
in
fsubl
dec
rcrl
jae
push
fisubrs
xchg
js
xchg
in
addr16
pop
inc
bswap
push
mov
loopne
sub
out
mov
mov
sbb
pushf
xor
mov
lret
mov
fst
push
nop
xor
jl
push
inc
hlt
repnz
lret
stos
pop
mov
jg
xchg
leave
pop
push
jp
ret
test
stos
push
add
test
std
pop
stos
jae
cmp
push
ret
xor
xchg
adc
mov
xor
add
mov
les
in
xchg
icebp
xor
addb
mov
lahf
pop
loopne
popa
mov
addr16
icebp
mov
out
mov
adc
lret
je
sbb
out
scas
push
dec
scas
mov
or
fyl2x
stos
pop
jl
in
dec
stos
out
out
fisttps
bound
or
enter
mov
jnp
mov
lret
lds
xchg
loopne
mov
mov
mov
movsl
push
leave
jno
xchg
mov
loop
dec
shlb
jae
or
pusha
cmp
daa
pushf
outsl
push
mov
pop
sbb
xchg
or
ds
push
subl
push
jle
or
mov
std
mov
push
xchg
jl
pop
mov
scas
popa
pop
and
lret
mov
mov
je
icebp
ljmp
addr16
fbld
in
dec
xor
loop
mov
add
xor
imul
push
xchg
pop
loopne
or
aas
or
into
bound
jns
cwtl
cld
cs
fnstcw
mov
push
cmp
mov
repnz
lods
dec
inc
int3
cmp
gs
lds
push
test
shrl
scas
push
mov
cmp
mov
arpl
mov
dec
mov
lods
xchg
cmc
scas
inc
clc
mov
pop
int
sub
or
push
or
out
movsl
push
bound
shlb
sbb
jg
outsb
movsl
xchg
subl
insl
mov
jge
aaa
cmpsb
inc
ljmp
pop
and
shl
mulb
or
or
movsl
fwait
mov
sub
or
xorl
ficompl
pusha
mov
sbb
les
or
sbb
mov
mov
jnp
into
or
lahf
and
pop
out
aaa
sbb
jno
dec
jnp
add
addl
jae
mov
mov
aam
mov
xchg
popf
insl
in
mov
mov
js
add
test
xor
and
fldcw
lods
inc
iret
lea
mov
movsb
pushf
outsl
notl
inc
pop
xchg
adc
sti
mov
clc
je
test
sbb
push
pop
xchg
sar
adc
jae
inc
sbb
jae
inc
cmp
fistps
jmp
mov
shl
jge
sub
scas
pop
or
push
nop
gs
adc
andl
pop
add
sub
dec
or
push
mov
cmpsb
xor
xor
xor
jmp
adcb
insl
mov
aaa
xchg
jno
jb
add
pop
imul
push
testl
imul
push
sbb
popw
and
and
sbb
xchg
sti
cmp
and
daa
dec
sarl
xchg
outsl
scas
ret
mov
add
subl
jae
fisubrl
or
stc
jp
xor
pop
xchg
fwait
jmp
leave
ret
insl
xchg
es
lahf
cmp
pop
adc
inc
jecxz
push
sbb
mov
mov
mov
adc
mov
movsb
push
test
push
xchg
test
shr
pop
push
mov
push
ds
mov
dec
movsl
cli
pushf
and
in
push
sbb
pop
fwait
add
repz
insl
mov
addr16
fmuls
xor
test
mov
test
popf
xor
add
sub
mov
mov
xchg
lahf
insb
pop
dec
mov
aas
pop
mov
mov
movsl
test
jge
push
xchg
ja
arpl
cmp
rcll
mov
mov
rcl
dec
sbb
inc
sub
or
les
sbb
sbb
dec
push
push
inc
push
or
add
pop
cmp
outsb
or
aaa
adc
jnp
mov
dec
cmpsb
push
fdivp
out
mov
pop
stos
dec
lea
fwait
popa
cmpsl
and
das
mov
jno
inc
cmp
aaa
xor
mov
inc
leave
sbb
inc
push
enter
cmpsb
jb
push
cltd
xchg
xchg
add
push
jo
out
xchg
call
mov
sub
xchg
mov
xchg
mov
xchg
xor
push
mov
int3
or
popl
inc
cmp
mov
jecxz
or
sbb
sbb
or
data16
aaa
test
insl
add
popf
mov
mov
push
and
mov
jmp
dec
int
nop
xchg
xchg
fs
pop
hlt
mov
aad
jmp
and
mov
ds
mov
cli
sub
sbb
enter
iret
fwait
sub
push
inc
cltd
out
dec
xchg
push
mov
dec
jmp
lret
add
dec
xor
inc
pop
sbb
movsb
cwtl
adc
shll
aaa
xor
dec
movsb
in
lods
das
std
sub
out
mov
dec
data16
adc
pop
cld
fnstcw
mov
mov
ss
mov
lret
ss
push
jge
pop
jns
mov
and
lods
cld
pop
jbe
mov
pushf
or
mul
pushf
fistpll
test
and
arpl
mov
js
dec
ds
std
mov
imulb
push
jne
test
push
mov
aam
dec
mov
inc
push
clc
or
iret
mov
jp
adc
dec
mov
scas
int3
mov
mov
ja
add
leave
fistpll
jb
and
push
out
jae
adc
data16
stos
rorb
mov
fnstenv
dec
test
test
sbb
test
jbe
jle
jne
lcall
out
mov
nop
xchg
sbb
fistl
jmp
mov
xchg
sarl
adc
pop
sahf
mov
inc
inc
mov
repnz
sbb
repz
dec
xchg
data16
sub
or
rcrb
push
dec
dec
insl
mov
push
pop
or
iret
out
in
xchg
dec
shl
out
pop
jb
test
int
mov
lds
push
es
sbb
and
mov
jns
aad
call
add
fldcw
cmp
rcrl
lahf
jbe
js
or
xchg
mov
push
pop
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
ss
push
cmp
addl
sub
mov
int
or
xlat
pusha
mov
mov
cmp
call
into
push
pop
dec
stos
and
jno
push
mov
dec
mov
push
sub
add
pop
lret
gs
jmp
lds
add
push
mov
insb
push
pop
out
mov
jmp
push
inc
jle
aam
pop
mov
xchg
outsb
cltd
xchg
fwait
sahf
repz
jo
add
filds
adc
insl
mov
dec
cwtl
xchg
mov
arpl
incl
imul
scas
addr16
xchg
adc
push
add
cmpsl
sti
ret
fiaddl
mov
xchg
into
mov
ret
or
mov
push
mov
jbe
fcomp
cmc
insl
jmp
jo
jne
std
loopne
sub
cli
sbb
mov
and
push
sbb
cld
inc
ds
cmp
xor
arpl
push
adc
mulb
and
in
pusha
cli
xor
jge
push
lock
xor
mov
loop
push
cld
add
jae
in
adc
adc
xchg
inc
repz
push
test
rclb
pop
xchg
push
adc
loopne
daa
mov
lret
adc
fwait
idiv
mov
das
sarl
mov
sub
jo
dec
push
movsb
cmp
xor
lds
dec
shrl
pop
shll
push
div
mov
sarb
icebp
pop
pop
push
lret
adc
test
sbb
dec
sarl
dec
daa
pop
cmpsl
pop
xchg
sbb
add
adc
and
aaa
mov
dec
pop
and
sub
jae
test
adc
cmp
stos
jmp
bound
pop
jp
mov
out
lods
pushf
scas
dec
jge
sub
enter
stos
cmp
jmp
push
jge
fcomp
pop
cmp
repnz
sbb
popa
push
add
ss
loopne
lods
int
add
mul
hlt
xchg
xor
mov
shll
leave
sahf
xor
leave
cld
ds
repnz
je
mov
jge
cmp
jp
xor
lock
sbb
test
jbe
aas
sbb
icebp
cmp
in
test
loopne
test
xchg
ret
mov
in
fs
sbb
or
dec
jmp
and
xor
xchg
mov
in
cld
mov
xor
and
mov
jno
or
xchg
pop
and
imul
rolb
or
mov
out
repnz
cwtl
testb
push
jp
loopne
cmp
add
jle
mov
jno
inc
out
xchg
push
cmp
cmp
mov
loope
jnp
xchg
lods
in
loopne
cltd
push
ds
adc
roll
jecxz
push
push
aad
sbb
scas
or
cmp
fmulp
xor
lret
push
inc
jno
out
js
push
gs
stos
fisubrl
cmc
sti
cmp
inc
or
sahf
push
rcll
xchg
aaa
inc
push
addb
into
cmc
inc
sub
mov
lret
loop
inc
roll
mov
add
jbe
fmull
lock
push
je
rcl
xchg
shl
push
cmpsl
xor
xor
cld
cmp
divl
pop
cmc
cmp
insb
push
in
mov
sahf
adcb
decl
cli
fistl
je
mov
js
lcall
repz
jmp
sub
sbb
ds
push
popa
push
push
mov
add
adcl
push
sti
lock
daa
sbb
sbb
pop
adc
jp
sbb
mov
xor
jmp
jle
mov
cs
fldt
js
mov
push
roll
pop
or
dec
sbb
bound
pop
lcall
std
adc
sub
pop
lcall
cmp
into
mov
test
pop
loopne
loop
int
jbe
fwait
adc
mov
arpl
call
aam
bound
pop
pushf
push
inc
jno
mov
xchg
repnz
pop
adc
and
sbb
les
xchg
mov
rclb
ds
sarl
mov
or
dec
das
dec
xchg
xchg
sti
es
jle
js,pn
xor
add
lods
pop
movsb
xor
push
rcrb
mov
pop
mov
std
dec
add
xchg
lds
dec
jle
sub
push
cmp
ja
sahf
cmp
mov
cmpsb
mov
xlat
mov
xchg
pop
daa
repz
dec
and
jbe
shll
jl
cwtl
lcall
insl
das
ds
cmpsb
push
fisttpll
cltd
in
mov
out
mov
add
fisubs
in
xchg
jno
dec
cmp
call
dec
leave
int
inc
jno
je
sbb
dec
ljmp
lea
inc
sbb
insl
adc
push
pop
sarb
aad
adc
cmp
adc
imul
pusha
xchg
repnz
mov
xchg
aaa
dec
mov
add
pop
push
cld
stos
cmp
pop
imul
pop
inc
mov
jne
push
cmpsb
add
dec
push
lea
push
loope
ret
repz
jns
cwtl
cmp
dec
push
xchg
dec
mov
add
pop
add
mov
test
mov
shlb
std
cmc
mov
pop
xchg
cli
jns
sub
sbb
jmp
ds
mov
cmc
xchg
inc
pop
xorb
mov
inc
mov
jae
xorb
loope
add
xor
mov
out
iret
adcb
xor
push
mov
leave
or
sarl
xchg
imul
outsl
pop
push
adc
popa
jg
data16
xor
mov
out
pop
repnz
ljmp
cmc
xor
sti
cmp
enter
sub
adc
cmc
inc
sbb
in
in
xor
push
xor
sub
jle
mov
inc
dec
xchg
movb
aad
push
mov
pushf
fs
push
cs
outsb
aam
dec
lds
mov
inc
mov
jp
ret
out
test
cmpsl
xchg
or
cwtl
out
jecxz
mov
push
adc
inc
mov
fmul
in
cmp
or
insb
cld
jmp
imul
mov
cmp
or
push
pop
data16
pop
sub
mov
outsb
test
add
lea
fcmovne
mov
inc
addr16
xor
arpl
push
rcll
xor
adc
dec
xchg
mov
inc
scas
sbb
daa
adc
addl
cltd
daa
cli
cmp
add
jmp
out
sub
cmc
stos
imul
lahf
adcb
push
push
sbb
push
and
pushf
sub
mov
mov
test
xor
addb
and
jl
push
and
fnstsw
sti
mov
pop
inc
push
frstor
outsl
cmp
clc
or
test
lock
andb
add
nop
mov
jl
push
xchg
add
jl
jb
mov
inc
test
andb
mov
stos
cmp
add
loope
insl
fwait
call
pushf
cmp
dec
imull
or
xor
xchg
push
xor
call
jmp
lret
adc
and
test
pop
pop
ror
mov
aaa
xor
aam
add
xchg
shll
ds
out
pop
fcmove
leave
test
xchg
notl
push
jp
mov
pop
or
push
xchg
and
and
mov
and
rclb
push
inc
dec
fnstsw
cmp
fnstcw
and
dec
mov
gs
cltd
daa
cmp
imul
or
popa
jle
ja
jge
in
pop
aas
adc
xchg
pop
mov
mov
repz
lret
and
push
out
fildll
sbb
add
je
or
mov
nop
pop
test
negb
push
fs
cmp
push
jb
inc
cmpsl
adc
pop
sub
push
and
arpl
lea
mov
sub
mov
push
mov
sub
shlb
xchg
mov
loopne
movsl
mov
jecxz
ljmp
out
nop
stos
mov
fistps
in
mov
inc
icebp
cmpsl
dec
push
lret
xor
mov
imul
out
xchg
daa
loope
xor
or
add
aaa
xchg
sub
pusha
pop
pop
ljmp
aad
stos
shlb
scas
sub
stc
cmp
inc
inc
or
inc
add
pop
push
xchg
and
adc
xor
ret
ds
cltd
pop
push
jp
pop
fbstp
pop
mov
into
xchg
cmpsl
out
and
adc
or
push
xchg
daa
in
daa
shrl
mov
or
push
mov
mov
jecxz
add
pop
pop
push
mov
and
fwait
add
mov
sbb
inc
aas
pop
or
lahf
leave
js
sbb
sarb
mov
les
mov
roll
mov
cmpsl
sub
lock
sub
in
movsb
andl
mov
popf
clc
xchg
mov
flds
or
gs
push
repz
xor
and
dec
cmp
fnsave
mov
lock
add
adc
mov
adc
adc
ljmp
addr16
mov
in
test
int3
xchg
adc
movsb
and
adc
aaa
addr16
ret
rorb
inc
ljmp
jp
mov
scas
push
decl
xchg
and
mov
cmpl
add
rcll
add
jl
fs
jo
scas
cs
scas
push
out
push
adcb
js
pop
stos
sarl
shr
add
out
jns
push
xchg
hlt
out
mov
stos
push
mov
cmp
sahf
mov
sub
leave
mov
popl
cmpsb
pop
out
sti
movsl
int
cmpsb
jmp
test
jmp
pop
mov
lahf
scas
popf
sti
fs
cltd
rol
add
push
clc
dec
addr16
arpl
add
je
mov
mov
cmp
daa
lea
dec
inc
clc
or
lret
xlat
enter
loope
pop
notb
fistpl
sub
add
unpcklps
sub
into
inc
fcmovne
mov
sub
jno
int
sbb
pop
fmul
aad
mov
pop
shlb
call
js
data16
cs
popf
enter
mov
jp
sbb
mov
cli
ljmp
push
stc
dec
sbb
aaa
leave
xor
out
enter
scas
stos
sub
push
repz
mov
xchg
shl
mov
xchg
das
sti
push
mov
test
cwtl
leave
dec
fwait
mov
fisttpl
mov
shrl
and
jns
or
add
and
stos
imull
or
jl
add
add
pusha
gs
in
repnz
out
fcompl
xchg
cmpsl
cmp
hlt
loopne
and
or
pop
mov
cwtl
inc
js
mov
into
adc
cmpsb
leave
gs
lods
sub
stos
test
fwait
out
lds
rcr
notb
insb
adc
push
sub
dec
data16
stc
mov
fs
in
enter
dec
push
pop
mov
outsb
mov
das
xor
dec
mov
loop
mov
cltd
lods
dec
fistps
xchg
and
pop
xor
std
sbb
or
hlt
in
popf
rclb
icebp
mov
std
xor
cld
in
xlat
push
lea
push
adc
pusha
cmp
imul
std
mov
sbb
mov
fsubrl
dec
addr16
mov
scas
mov
sbb
sub
sbb
mov
inc
mov
adc
rcrl
add
pop
mov
mov
test
nop
fnsave
inc
pop
mov
xchg
popa
or
movsb
jns
movsl
cmp
sbb
sub
xor
jl
in
jmp
mov
sbb
add
cmp
sbb
out
jge
pop
mov
insb
leave
cli
orb
cmp
sbb
jnp
orl
mov
jno
lahf
es
push
ficoms
fildll
mov
xchg
outsb
pop
pop
icebp
mov
or
and
push
outsl
xlat
pop
mov
and
inc
cwtl
sahf
pop
cmp
cmp
fcmovu
outsb
fidivl
dec
pushf
sub
in
mov
cmp
incl
fisttpll
inc
int
faddl
imul
jno
mov
mov
cltd
lahf
lret
push
fnstcw
mov
or
sbb
push
imul
adc
mov
sub
add
arpl
js
das
push
rorb
mov
cmp
xchg
sbb
dec
adc
int
inc
out
push
jo
add
dec
lock
in
push
arpl
push
test
int
andl
std
jno
sahf
stos
jae
sbbb
jg
jne
xchg
mov
outsb
stc
mov
mov
cmp
stos
loopne
jbe
stos
stos
cmp
lods
lret
add
ss
xchg
cld
insl
jbe
ja
jb
jmp
repz
push
pop
mov
aam
fdivrs
inc
adcb
jb
std
movsl
or
push
xchg
push
pop
jb
outsb
xchg
sub
xchg
mov
ss
cld
cmpsb
outsb
dec
cltd
cmp
cmc
inc
dec
lcall
enter
xor
inc
pop
mov
sub
jle
cli
sub
jae
je
mov
jecxz
imul
mov
mov
mov
je
repnz
sti
xchg
push
pop
fidivl
mov
pushf
xchg
insl
pop
lods
push
pop
add
xor
inc
inc
xchg
std
daa
cmp
xor
and
sbb
jns
ret
mov
lods
call
mov
scas
test
push
hlt
shr
mov
mov
call
out
mov
shlb
les
pop
outsb
in
sbb
jecxz
xor
arpl
sub
imul
inc
mov
sarl
scas
arpl
mov
cmp
iret
cmp
shr
jnp
adc
ret
outsb
and
gs
outsl
push
push
mov
jnp
adc
stos
call
insb
pop
es
in
dec
mov
xchg
sub
popf
and
pop
pop
lret
inc
or
mov
fistpl
xchg
sbb
mov
inc
nop
pop
out
popf
xor
test
dec
dec
cltd
enter
xor
adc
repz
jmp
aam
mov
dec
pop
pop
xor
insb
lret
daa
in
movl
mov
jnp
mov
jne
fcoms
gs
jecxz
push
fsub
dec
jae
popf
mov
aaa
inc
es
mov
xchg
ja
adc
jnp
mov
pop
ret
sbb
cli
test
sbb
xchg
dec
jl
sub
sbb
xlat
lret
add
push
incb
aam
imul
cmp
xchg
ds
into
push
in
pusha
sbb
xor
shr
adc
inc
jg
arpl
cmp
test
lret
rol
sub
dec
bound
into
outsl
xor
cmp
test
inc
and
cmpl
adc
icebp
fisubs
jecxz
into
add
jbe
aad
rcrl
push
pop
cmp
lahf
ljmp
outsl
push
inc
inc
js
pushf
inc
int3
and
aaa
leavew
xor
ja
and
das
aad
adc
jle
ret
cs
into
out
pop
xchg
rolb
mov
adc
mov
jl
xor
test
or
aad
pushf
lret
cmp
adc
xchg
decl
loopne
dec
mov
add
pop
mov
int
rcl
std
cmpsl
daa
mov
bound
aaa
xlat
daa
test
lods
jno
sbb
bnd
cltd
lcall
adc
aad
dec
daa
les
test
xchg
xchg
and
dec
inc
icebp
fs
and
cmp
xchg
movsl
pop
dec
repz
sti
xchg
mov
pop
sub
cld
inc
jno
es
inc
lock
scas
mov
add
jns
pop
insl
into
mov
pop
push
mov
pushl
fbld
addr16
es
jnp
sub
dec
fnstcw
adc
js
fidivl
mov
cmp
repnz
dec
mov
pop
shll
sbb
ja
or
fstpt
sbb
dec
inc
in
or
adc
lods
cmp
dec
pop
pusha
popa
in
jb
inc
shr
into
je
pusha
pop
mov
movsb
inc
jbe
adcl
sbb
sub
aam
jno
push
pop
iret
dec
inc
add
dec
std
and
push
dec
cmpsb
cwtl
and
jns
dec
dec
fdivl
jnp
or
mov
movsl
call
loop
in
sub
adc
xor
bnd
lret
jb
cmp
jmp
inc
push
xlat
mov
iret
pop
fisttpll
inc
xor
jbe
lahf
scas
or
in
sub
mov
xlat
repz
lret
pusha
or
mov
lahf
mov
sarl
pop
sub
and
pop
mov
jno
xchg
repnz
mov
sbb
add
xor
pop
adc
loope
lock
ds
dec
xor
clc
fmuls
mov
sbb
cmc
hlt
push
pop
sub
fcompl
adc
shlb
imul
scas
cmpsl
dec
sub
or
ret
cmp
xchg
xchg
xchg
inc
sti
mov
xchg
insb
sbb
data16
xchg
dec
push
xor
orl
push
push
inc
data16
jecxz
xchg
out
pushf
out
lods
aad
mov
test
xchg
movsb
dec
inc
mov
adc
in
mov
lret
jge
mov
aam
push
pop
or
sbb
out
movsb
rcrb
dec
gs
in
mov
jae
adc
xor
pop
push
sbb
xchg
mov
xor
sarb
fs
aas
or
cmp
inc
sbbl
xor
sub
aaa
addr16
sbb
push
ret
xchg
fimull
mov
fs
sbb
push
add
jb
inc
mov
pop
rcr
js
lcall
sbb
pushf
push
in
call
int
fwait
xchg
mov
in
jae
mov
pop
pop
out
jmp
sahf
out
in
push
add
pop
dec
mov
enter
stc
add
jge
call
sbb
sbb
mov
mov
in
jb
lcall
adc
add
pushf
clc
out
push
lods
subb
dec
sub
mov
pop
aas
scas
cmp
jmp
sub
dec
mov
pop
cltd
mov
sbb
and
enter
push
and
xor
rorl
jecxz
sbb
push
mov
jnp
jecxz
adc
xchg
rorb
adc
xlat
ja
test
mov
inc
mov
cld
xchg
xchg
ss
rorb
jl
mov
mov
push
in
leave
and
adc
gs
mov
mov
test
daa
fwait
cmpsb
dec
or
sub
mov
addb
cli
sub
xor
pop
insb
ja
xchg
sbb
jne
call
popf
pop
shrl
or
in
imul
outsb
push
inc
divl
jo
aam
pop
lret
fidivs
and
mov
aaa
dec
imul
ret
nop
cmc
nop
jo
jne
fcmovbe
fistl
cmp
mov
arpl
imul
mov
clc
mov
sbb
sub
cmp
test
lods
ffreep
sub
rorl
dec
sbb
cwtl
in
xor
xchg
in
dec
es
dec
add
sub
pop
xchg
mov
sub
add
bswap
dec
mov
je
jae
push
pop
insb
xchg
fstps
ja
out
push
xchg
sub
push
xor
cwtl
daa
js
sub
and
xchg
ret
lret
test
stc
push
pop
fldt
and
pop
add
inc
jb
sub
or
lret
rol
mov
xchg
shll
or
lret
repnz
jno
mov
cmpsl
inc
mov
jecxz
xor
outsl
xorl
loop
add
iret
dec
jecxz
aam
ret
mov
hlt
or
mov
imul
mov
mov
iret
dec
stos
jmp
lock
aad
jecxz
imul
and
jmp
jg,pn
imul
push
jae
or
lahf
mov
pop
mov
enter
testl
jecxz
data16
dec
loopne
addl
lods
icebp
cli
jno
rcrl
lahf
sub
or
rorb
add
cld
in
xor
mov
outsb
incb
adc
stc
adc
xlat
jnp
cwtl
lret
sbb
ret
jnp
mov
daa
test
pop
pop
cmp
xchg
fldt
fwait
mov
jb
adc
xchg
mov
mov
cmpsb
bound
cmp
jg
or
mov
daa
loopne
bt
and
pop
push
mov
cmp
mov
xchg
cs
outsl
jnp
pop
sub
rcrl
jbe
xlat
mov
mov
subl
mov
jp
fstl
je
cmp
or
aaa
sbb
xchg
inc
in
dec
gs
sar
ret
cmc
iret
stc
sub
inc
pop
mov
mov
dec
out
fcmovnu
loop
test
add
xorl
aas
orb
mov
aad
adc
insb
fwait
cmpsl
sbb
shl
adc
gs
and
mov
clc
icebp
pop
cmp
das
ja
mov
jbe
jle
pusha
inc
push
test
outsl
mov
int3
pushf
jne
adc
popa
sti
mov
inc
mov
sbb
jle
push
out
push
dec
dec
movsl
sub
cmpsb
inc
sub
xchg
stc
or
dec
call
scas
fimuls
scas
in
push
inc
jle
faddl
arpl
jb
push
adcb
ds
jecxz
icebp
xor
mov
mov
incb
jge
jns
mov
adc
movsb
cmp
scas
add
xchg
xchg
add
lods
mov
cli
lods
add
mov
jle
arpl
mov
outsb
jmp
dec
leave
das
ds
sti
fs
or
out
xor
int
ret
push
std
mov
inc
sub
inc
popa
inc
mov
leave
insl
pop
lea
xchg
hlt
xor
jbe
sub
push
xchg
push
movsb
std
sbb
mov
pop
push
mov
sbb
jp
sbb
int
inc
sbb
mov
and
pop
mov
in
add
mov
add
pop
sub
adc
mov
shl
cmp
movsl
cmpsb
lahf
inc
into
repnz
xchg
inc
xchg
and
inc
sub
jnp
ss
in
xchg
push
cwtl
sbb
xchg
and
ja
inc
and
pushl
hlt
loope
lret
xor
add
sub
mov
adc
mov
sbb
lret
add
jno
dec
adc
sbb
push
shl
les
or
js
stos
test
lahf
dec
and
in
adc
imul
adc
scas
xchg
xchg
movsl
sub
sbb
ljmp
sbb
xlat
add
roll
push
ret
pusha
fdivrl
pop
dec
xchg
and
mov
jmp
dec
push
push
bound
out
xor
push
fidivrs
imul
mov
dec
call
mov
mov
push
fwait
divl
scas
adc
mov
testb
push
cmp
dec
add
mov
stc
jns
pop
push
inc
addps
fiaddl
dec
push
pop
sarb
lds
sub
push
push
out
imul
jle
cmp
sbb
sub
sahf
fwait
js
jnp
cmp
and
sbb
cmp
add
outsb
jb
fsubs
inc
pop
and
ret
add
out
sub
pop
dec
fnsave
loope
push
cmp
mov
sar
dec
mov
mov
sbbl
xor
daa
bound
and
das
push
sbb
scas
xchg
push
dec
popf
dec
push
mov
out
sbb
outsl
push
adc
and
lret
push
inc
fidivs
sbb
adc
xlat
inc
lahf
daa
mov
popf
mov
push
shl
aad
lea
jle
pop
fiadds
sahf
dec
mov
add
faddp
addl
repz
loope
push
das
lods
ljmp
or
out
aaa
jb
cmp
dec
xlat
mov
popf
ret
xor
mov
mov
dec
loop
lret
mov
imul
lods
pop
jae
inc
xor
xchg
jle
mov
xor
jne
mov
test
jae
int3
add
sbb
mov
inc
loope
and
mov
data16
pushf
push
jecxz
lret
clc
cmpsl
or
gs
sub
cmp
shlb
sti
nop
dec
mov
repnz
add
jae
repz
pusha
add
cld
rcrl
loope
clc
sub
mov
lea
mov
jb
add
xor
xchg
push
ss
sub
sbb
push
or
insb
sti
loope
jb
fisubrl
sbb
adc
dec
push
lds
mov
mov
push
fistl
pop
stc
pop
add
mov
sarl
fs
cmp
add
test
out
and
mov
movl
push
sbb
rol
pop
push
cmp
cmp
jg
jne
in
sbb
cmp
jg,pn
sarb
pop
xchg
adc
mov
xchg
jle
cmpl
inc
jae
ja
lock
je
loope
popf
mov
or
inc
mov
lods
adc
shl
int
into
and
dec
push
adc
xor
lahf
call
dec
stc
dec
pop
mov
test
orb
stos
inc
mov
rol
inc
lea
mov
push
loop
xchg
lods
test
jecxz
pop
jp
je
adc
mov
and
out
inc
push
js
sbb
jno
sbb
ret
imul
dec
mov
filds
adc
mov
adc
mov
pop
cld
add
inc
leave
idivb
push
cmc
jb
dec
xchg
gs
push
pop
ficoml
cmp
push
xor
hlt
jae
lods
call
fdiv
sub
jmp
or
pop
mov
test
sub
xor
mov
rol
lahf
mov
inc
lods
loope
sbb
out
mov
pusha
cmp
out
xor
out
xor
mov
sub
rorl
add
mov
xchg
inc
pop
or
mov
pushf
stos
mov
cli
or
dec
sti
or
inc
sub
sbb
cli
loopne
mov
inc
lahf
and
sbb
push
scas
imul
int3
stc
les
pop
sti
stos
jmp
mov
mov
dec
inc
sub
ret
lods
xor
data16
jmp
mov
outsb
jne
and
cmc
push
imulb
ret
dec
addr16
lcall
cmp
test
shrl
jl
in
sbb
add
bound
pop
addr16
fldl
inc
adc
stos
sub
mov
adc
ret
jns
lea
aam
pop
fiadds
mov
mov
push
inc
iret
inc
aad
sub
testl
outsb
push
push
jb
mov
nop
sbb
lea
insb
mov
dec
shlb
iret
add
shlb
mov
addl
idivl
sub
std
mov
push
inc
jns
cmp
scas
and
outsb
cli
and
stos
adc
lcall
lods
mov
clc
lock
addb
xorl
or
loop
or
mov
xchg
mov
pop
js
insb
inc
movsb
sbb
jge
aas
sbb
adc
adc
inc
cmp
ss
inc
xor
jb
pushl
lcall
filds
ficoml
mov
sbb
jne
push
outsb
data16
adc
mov
add
les
out
jo
jmp
das
or
cli
mov
pushf
leave
dec
cmp
adc
jecxz
mov
insl
movsb
out
scas
push
sbb
loopne
jae
jecxz
stos
aam
cmc
in
jnp
pop
push
cltd
lds
or
mov
pop
dec
fcompl
sahf
inc
mov
dec
pop
push
adc
xchg
leave
cmp
cld
inc
jp
mov
xorl
fnstenv
nop
mov
push
rolb
loope
sahf
xor
cltd
out
jg
dec
adc
movl
jmp
adc
cmc
xor
dec
xchg
dec
inc
push
xor
sbb
shrl
imul
inc
flds
or
bnd
dec
adc
arpl
fcompl
lret
iret
sbb
and
ret
jp
inc
push
pop
in
out
xor
and
fdivp
out
jae
jo
jge
and
or
ja
inc
fidivrs
gs
shrl
push
scas
mov
cmp
fwait
xchg
lret
stos
hlt
add
testl
xlat
outsl
pop
sub
imul
test
cli
insb
into
or
lret
cwtl
mov
jmp
stos
es
add
mov
mov
inc
pminsw
fsubs
xchg
jmp
pushf
jno
jbe
mov
push
sbb
mov
pushf
and
je
pushw
jge
outsb
push
aaa
push
aaa
push
stc
mov
or
fcoms
mov
outsl
aam
roll
xlat
cld
out
adc
aad
test
sub
or
hlt
and
jle
imul
jno
sahf
sahf
mov
out
jmp
das
jnp
add
pop
into
sar
sbb
add
out
mov
std
stos
xchg
inc
push
enter
shr
iret
or
lods
int
xor
pop
daa
rorl
mov
aad
popf
pop
enter
out
mov
sub
jecxz
imul
sbbb
cmc
int3
les
inc
sub
mov
in
cmpsl
dec
sbb
mov
out
or
mov
sbb
cmp
jno
lret
fadd
xchg
jae
xchg
int3
xor
decb
pop
inc
pop
sbb
int3
or
frstor
lods
adc
add
add
adc
mov
insl
inc
xchg
inc
jg
aas
xchg
sbb
sub
inc
mov
pop
xchg
pop
cmpl
jg
mov
jle
pop
outsl
mov
call
xor
in
xor
adc
in
mov
icebp
enter
push
push
jo
repz
sbb
push
xor
insb
fwait
ret
sub
in
fs
ljmp
xchg
popa
test
in
call
ljmp
sub
cld
jg
cmc
xor
sbb
int3
das
std
mov
in
xchg
dec
pop
loopne
stc
push
jge
pop
gs
out
pushf
jmp
jp
pusha
sti
je
jnp
inc
hlt
movsb
test
stos
and
add
les
push
faddl
jns
addl
adc
jns
xchg
mov
outsl
ret
jle
mov
add
jne
jo
sbb
mov
inc
push
sahf
shl
sbb
pop
outsb
cmp
pop
das
push
gs
dec
mov
jb
add
cmp
pushf
inc
push
and
js
mov
movsl
inc
lods
xchg
mov
ret
out
pop
pop
inc
arpl
mov
adc
inc
in
jg
pop
pop
call
jb
sbb
test
or
xchg
push
cld
add
jnp
outsb
lock
and
cltd
xor
fcomip
rorb
loopne
pop
push
dec
stc
jg
popf
or
dec
push
imul
lods
inc
jnp
jl
sahf
xlat
cmp
imul
leave
inc
les
test
scas
cmp
adc
ds
sbb
dec
jle
aam
sub
jmp
push
xchg
pop
stos
roll
fwait
loopne
jp
loop
lea
inc
xchg
add
repz
ss
popa
adc
mov
hlt
rcl
and
inc
cmp
sub
jp
inc
mov
iret
out
or
push
push
mov
xchg
cs
pop
mov
call
in
mov
pop
sub
mov
jmp
fmull
mov
fistl
mov
push
pop
pushf
inc
push
lcall
je
sbb
mov
rcr
jge
ret
fstenv
cmp
and
jg
out
jb
cli
aas
push
fcoml
rcrl
jno
push
sbb
int
pop
jnp
ret
push
sbb
jmp
fwait
out
pop
sub
jp
cmp
ljmp
jl
fistpl
cltd
sahf
dec
outsb
add
pop
xchg
inc
popa
push
sbb
push
daa
add
pop
or
scas
sub
mov
cmp
ficompl
push
ret
xchg
jge
insl
mov
loopne
inc
push
push
jnp
fisttps
and
push
out
push
xchg
icebp
xchg
daa
pop
out
fwait
js
jbe
adc
popa
mov
stos
addl
insl
out
out
cld
in
mov
pop
mov
push
pop
cmc
cmpsl
mov
cmp
dec
mov
push
loopne
inc
ds
cmp
js
xlat
dec
or
pusha
add
pop
push
aas
int
arpl
pushf
and
test
cli
pop
stc
mov
shlb
fcoml
adc
insl
into
test
out
jp
mov
sar
pusha
daa
xlat
sbb
es
frstor
andl
ss
sub
xchg
pop
pushf
mov
andl
jg
push
mov
les
insb
mov
imul
fs
jp
mov
sub
cmp
ja
ret
mov
mov
lret
mov
out
std
pusha
pop
mov
nop
sbb
cwtl
aad
in
pop
adc
mov
add
mov
jbe
push
push
sub
jb
and
sbb
popf
and
add
stos
mov
xchg
imul
lods
dec
enter
dec
mov
mov
adc
sbb
insb
xor
ja
mov
int3
dec
repnz
jnp
mov
fldl
inc
xchg
sub
add
inc
pusha
repz
cmp
adc
rcll
js
jge
rolb
aam
cwtl
fcompl
dec
fsubrs
and
out
jo
filds
int3
push
jb
in
lahf
and
lea
push
icebp
sbb
sbb
mov
inc
mov
mov
call
or
mov
dec
or
push
and
cmp
and
das
inc
mov
inc
or
and
aaa
leave
cmpsb
dec
jne
xor
lds
pop
pop
loope
push
jp
sbbl
pop
add
dec
pop
mov
cwtl
cwtl
add
cwtl
mov
mov
mov
rcll
dec
out
adc
push
push
sub
test
pop
int
in
push
scas
test
add
jno
push
mov
movsb
popa
test
add
arpl
cmp
test
ss
testl
sub
add
loop
xor
into
jbe
xchg
imul
xor
cmp
xchg
test
mov
add
jno
cmp
adc
dec
loopne
add
add
inc
mov
sub
inc
xor
xchg
pop
dec
neg
lods
shr
adc
jo
movb
xchg
adc
clc
jns
cltd
jo
imul
fdivs
loope
into
call
das
arpl
adc
push
or
in
data16
mov
loopne
push
pop
inc
sbb
adc
push
pusha
jl
jnp
int
int3
addb
add
xor
divl
pop
insl
imul
cmp
ret
rol
out
xor
sbb
ret
movsl
sub
jg
xchg
mov
push
mov
inc
loopne
inc
and
pop
mov
call
and
ss
or
xor
subl
xchg
or
std
sarb
inc
jnp
fisubl
stos
jbe
int
cmpsb
popf
xchg
roll
pop
jne
and
xchg
mov
add
aam
rorl
and
inc
push
lret
pop
in
mov
cmc
mov
mov
sbb
dec
xchg
push
stos
lahf
pop
push
jmp
gs
pop
mov
mov
enter
fucom
int3
insl
push
imul
xor
adc
bound
xchg
daa
push
cmpsb
imul
mov
stos
enter
mov
adc
mov
test
push
dec
rcrb
dec
ds
pop
dec
jae
inc
dec
roll
stos
xor
fcmovbe
int
ss
out
jbe
xchg
pop
push
pop
pmullw
sbb
xchg
mov
cmp
loop
mov
insb
lods
lds
mov
lcall
test
clc
mov
mov
je
fidivl
adc
pop
push
push
pop
js
out
xchg
sub
mov
push
fstpl
into
sbb
lahf
jle
fcmovnb
cmpsl
mov
movsl
lret
je
aam
mov
mov
xor
les
add
xor
and
mov
ljmp
pandn
stos
dec
imul
inc
lret
lods
jo
ljmp
rcrb
fidivrs
mov
cmp
push
pop
je
xlat
add
mov
xchg
sbb
std
xchg
icebp
jns
xor
mov
adc
mov
cmp
bound
bound
mov
sub
xchg
push
loop
inc
test
push
mov
dec
and
add
sbbb
lea
xchg
adc
or
sub
pop
test
xor
mov
jmp
je
lahf
inc
pop
jl
data16
out
jl
addr16
cmp
pop
test
cs
mov
dec
xchg
or
dec
dec
je
inc
repnz
xchg
es
inc
jmp
notb
jge
cwtl
push
push
pushf
xchg
xor
adc
lret
gs
xchg
mov
pop
nop
mov
and
dec
adc
insb
mov
mov
xchg
pushf
jb
pop
call
aas
mov
rcll
mov
mov
call
movsl
xchg
pop
mov
cmpsb
adc
add
mov
mov
pop
movsl
xor
idivb
sub
pop
stc
add
mov
shl
sub
mov
sbb
xchg
in
imul
lcall
sub
xchg
mov
insl
scas
inc
inc
mov
push
jl
out
enter
out
mov
push
ljmp
lret
js
add
push
leave
ljmp
and
xchg
push
pop
aas
adcb
rorb
ss
scas
inc
jecxz
dec
cmpsl
testb
ret
inc
fcomps
jl
xor
sbb
or
cmp
imul
test
nop
sbb
or
ret
and
mov
dec
push
movsl
cmp
test
sub
dec
dec
inc
and
cmp
and
sti
adc
leave
out
jg
inc
add
push
push
repz
sub
mov
loope
mov
add
push
pop
add
cmp
cmp
inc
pop
fstl
or
xlat
xorb
push
and
xchg
xor
pop
pop
xor
mov
adc
push
add
cltd
sbb
imul
popf
enter
test
ffree
mov
fdivl
sbb
pop
in
jae
mov
push
push
xchg
adc
clc
gs
xchg
mov
jb
mov
minps
push
push
mov
aam
dec
xor
mov
sub
icebp
flds
shrl
push
pop
adc
jl
andl
adc
mov
push
add
adc
inc
push
add
mov
mov
leave
cmp
call
xchg
mov
lcall
xor
dec
repnz
daa
adc
cmp
ja
jno
call
push
lcall
int3
sbb
xchg
hlt
cmp
pop
rolb
popa
inc
mov
adc
jb
mov
mov
mov
notl
push
rcrb
gs
cld
pop
scas
or
push
pop
mov
pop
pop
das
push
int3
add
mov
mov
or
lods
lds
aaa
decl
jnp
mov
jne
std
loopne
es
fucomp
rorl
sahf
or
orb
dec
add
cltd
jge
sbb
push
xchg
js
fld1
cli
into
jmp
pop
jecxz
jnp
jne
xlat
ret
loope
data16
loop
or
push
loope
nop
mov
xor
push
jb
mov
cmpsb
mov
push
rcll
xchg
pop
fistps
push
mov
out
pop
aaa
push
cmc
mov
cmc
pop
push
dec
push
dec
pop
push
add
in
xchg
sub
mov
rolw
cmp
sub
lock
and
fcmovb
out
dec
and
inc
and
stc
cmpsl
test
adc
je
aas
sub
aam
inc
mov
das
sub
or
jle
pusha
int
mov
jnp
popf
and
jg
popa
cmc
std
sbb
fs
push
out
xor
fdivl
sbb
mov
xchg
cmp
aaa
jne
and
mov
ljmp
sbb
ds
sbb
pusha
or
test
orb
shr
sbb
stc
adc
cs
jae
push
sbb
std
fiaddl
das
and
xchg
push
hlt
or
or
fiadds
loope
outsl
xor
or
sbb
jns
cwtl
pop
pop
test
add
jp
lea
jo
sbb
xchg
sbb
shl
nop
pop
js
dec
lret
push
ja
fstl
xor
das
out
dec
mov
cmpsb
xchg
pop
lahf
cs
stos
mov
sti
mov
bnd
dec
cmc
jmp
cs
sbbb
adc
mov
or
dec
sbb
add
jmp
xchg
btr
xor
ljmp
dec
sbb
pop
xchg
xchg
sub
test
xchg
or
icebp
xchg
negb
aad
jbe
bound
imul
orb
sbb
addr16
iret
pushl
ljmp
loope
fnsave
loop
jnp
xchg
loop
adc
jge
out
out
mov
add
rolb
gs
cs
hlt
push
push
sub
push
and
jecxz
xor
push
mov
xor
sub
mov
xchg
out
cmp
and
lods
dec
pop
inc
aad
xor
test
rol
out
dec
adc
mov
sub
xchg
je
add
lods
inc
les
xor
or
in
inc
call
adc
sbb
das
xchg
mov
stc
inc
sub
int3
movsb
sub
lods
lret
arpl
shl
fwait
push
mov
pop
mov
les
out
dec
fadds
imul
mov
inc
lods
push
mov
js
sbb
sbb
xor
dec
ret
nop
mov
loope
aam
test
fwait
dec
or
and
addl
loopne
int
enter
inc
xchg
mov
shl
lcall
fstps
stc
mov
jb
das
jge
mov
fimull
cli
loope
scas
push
int3
jecxz
jp
inc
jb
test
jl
test
mov
shrb
dec
pop
pop
scas
push
mov
into
in
xchg
js
aas
adcb
insb
subl
and
mov
mov
sub
enter
pop
xor
or
cmpl
mov
adc
scas
in
mov
lahf
or
out
sti
add
add
or
pop
adc
sbb
mov
lods
rcrb
movsl
mov
call
jg
mov
test
enter
cmp
inc
in
fisubrl
add
mov
pop
ds
or
movsl
push
sar
dec
inc
sub
sahf
sub
mov
inc
pop
dec
mov
pushf
push
insl
push
cmc
aaa
cwtl
loop
mov
scas
fmuls
sbb
fdivrs
xchg
xor
pop
xchg
sub
sarl
pop
sbb
xor
add
stc
bound
jge
add
loop
jmp
lcall
cmp
test
aaa
add
leave
movsl
test
lea
jo
xchg
jl
xchg
pop
cltd
repnz
cmp
ljmp
mov
scas
pop
sahf
lret
jne
enter
and
iret
imul
sbb
sahf
or
mov
ljmp
fwait
std
mov
inc
loop
and
addb
insl
ja
punpcklbw
test
repnz
les
sub
ret
and
popa
or
sub
pop
push
insb
or
push
movsl
mov
mov
mov
stos
inc
inc
push
add
nop
movsb
ja
mov
mov
or
pshufw
insb
and
push
pop
xchg
out
std
test
mov
in
pop
pop
jns
test
adc
popf
loopne
add
jecxz
imul
xchg
ss
xchg
repz
arpl
sti
and
push
fistl
sub
mov
clc
mov
in
adc
rcrb
xchg
mov
cs
inc
je
xchg
sub
jmp
jno
rcrb
mov
fadd
movsb
aad
add
in
pop
mov
loopne
ret
data16
jo
or
or
xor
xchg
adc
jge
adc
dec
fldt
out
push
out
daa
sub
xlat
and
xor
adc
pop
je
and
pop
imul
dec
or
rcll
cmpsb
add
mov
push
mov
inc
fadds
and
loope
ja
adc
sbb
push
adc
and
fsubrp
mov
loope
cmp
mov
push
std
sub
cltd
push
iret
insl
mov
aaa
cs
je
mov
cmp
add
xchg
jb
notl
cmpsb
cmpl
call
lret
out
push
pop
daa
mov
test
jle
aaa
push
pushf
mov
mov
mov
stos
and
mov
push
and
add
cwtl
mov
ljmp
pop
jmp
adc
or
mov
adc
cmp
popf
cmp
adc
add
out
push
or
mov
cmp
out
ficompl
lea
add
jp
adc
loope
ret
mov
dec
ftst
sbb
iret
orl
fsincos
out
mov
in
mov
mov
cmp
call
std
movsb
js
sub
push
jo
sbb
nop
mov
sbb
xor
xor
and
ds
fs
test
ljmp
sub
stc
xchg
push
in
add
xchg
cmpsb
fadd
rorb
pop
push
push
cmc
sub
add
dec
fsubl
cmp
leave
pop
cmc
xor
ljmp
pop
mov
cli
loop
mov
cmp
aas
pop
dec
sahf
cld
jo
adc
sbbl
mov
dec
push
pop
mov
push
mull
xchg
pushf
pop
insb
mov
xor
xchg
xchg
xor
imul
push
dec
mov
fildl
lds
aad
popa
xor
in
je
insl
out
cmp
lcall
ss
sti
movsb
and
add
jp
sbb
jns
pop
es
in
push
icebp
fsubp
sbb
sar
clc
int3
push
jecxz
fldenv
cmp
in
rcpps
mov
cwtl
jmp
sti
out
ss
arpl
jnp
ret
pop
pop
movsb
pop
push
repnz
outsb
jns
les
add
movsb
js
and
test
lds
test
loope
or
pop
cmp
jecxz
push
and
dec
mov
loope
lahf
dec
aam
shlb
arpl
push
push
cwtl
out
cmpsl
mov
cmpsl
daa
pop
push
jne
pop
aas
jmp
lcall
sbb
in
test
sbb
fldt
popa
aad
mov
data16
fildl
mov
es
jbe
xor
push
rclb
jbe
and
sbb
jns
scas
ret
adc
inc
je
in
inc
out
pop
mov
jmp
lret
add
dec
xchg
xchg
cmpsl
mov
les
rolb
add
pop
aam
xchg
fidivs
pop
nop
pop
pop
jg
fldcw
test
xchg
dec
test
sub
push
xor
lret
aaa
int
ljmp
pop
ds
loopne
sbb
faddl
js
cmp
sti
outsb
cltd
or
jp
repnz
mov
pop
mov
rorl
jne
ret
adc
out
cmpl
aam
dec
mov
and
test
cli
sbb
dec
test
add
cs
jae
test
popa
sbb
add
loope
imul
and
aaa
fs
popa
aam
fcoms
adc
push
mov
pop
in
iret
repnz
clc
cwtl
pushf
arpl
ljmp
inc
test
cltd
lea
out
imul
test
sbb
jo
test
sub
cli
jp
repz
loopne
xor
mov
adc
decl
sbb
jae
clc
pop
iret
lret
push
cld
cmpsb
negb
dec
xor
mov
mov
pop
mov
adc
sub
repnz
push
iret
sbb
scas
pop
pop
cmc
mov
lods
popa
xchg
movsb
adc
mov
pop
or
fcmovnbe
jecxz
popf
dec
adcb
sbb
jno
pushf
jns
or
xorl
jecxz
cmp
cltd
movups
nop
mov
es
lahf
dec
or
cmpb
lock
dec
shll
or
pop
xchg
fidivl
xchg
mov
mov
arpl
in
je
xchg
mov
fisubs
rcl
pop
notb
leave
movsl
xor
mov
jecxz
out
cmp
jns,pn
xchg
cmpsl
mov
ret
fidivrs
dec
mov
cmc
aam
sub
fildl
sahf
icebp
mov
push
xor
sbb
dec
mov
daa
cmc
sti
test
ret
lods
push
test
mov
pop
insl
test
imul
stc
mov
pop
jnp
jle
scas
jb
push
ja
and
and
out
sub
mov
dec
inc
cmpsl
daa
scas
fcomps
or
add
mov
jno
test
fwait
dec
push
or
xor
add
cli
clc
hlt
mov
push
or
pop
or
leave
test
mov
push
pop
pmaddwd
lods
inc
movsl
out
jb
sbb
out
jge
cmpsl
in
ret
jg
pop
in
inc
adc
jae
ret
pop
scas
gs
mov
or
mulb
xor
adc
push
cld
mov
test
push
arpl
inc
mov
shl
pop
xchg
pop
lahf
jl
ja
and
push
rcl
pop
iret
je
adc
pop
in
lret
adc
pop
sbb
or
ret
roll
mov
lea
adc
in
jmp
sbb
jp
fs
sub
xor
xchg
and
addr16
dec
daa
popf
je
and
mov
pop
or
mov
xorl
push
pop
mov
mov
mov
pop
std
pop
fsubr
ficoms
lods
lret
movsl
int3
jl
sub
mov
loopne
inc
push
inc
mov
cmpsl
dec
xchg
xchg
cwtl
rclb
lds
fs
dec
mov
xchg
jecxz
nop
add
shrl
pushf
push
sbbb
nop
jecxz
cmp
leave
sbb
aas
push
into
rcr
mov
out
xor
pop
cmp
int3
jne
cmp
jg
push
xor
mov
sub
push
jo
outsb
std
pop
sub
repz
mov
nop
adc
fisubl
or
imul
dec
xor
jle
dec
add
inc
add
out
mov
ds
test
arpl
adc
repz
and
fcompp
loopne
jle
mov
sbb
arpl
dec
add
inc
cmp
das
add
or
ret
mov
fnstcw
pushf
dec
cmp
cmp
shll
mov
mov
outsb
out
mov
pushf
mov
shll
sbb
mov
lods
mov
stos
push
movsl
addr16
pop
cmp
cmc
inc
out
xor
dec
cs
pop
enter
ljmp
pop
data16
jg
shll
jae
aas
in
aaa
dec
fsubr
pop
stos
jg
aas
ja
stos
ljmp
sub
mov
andb
cmp
and
daa
inc
inc
popa
mov
or
movsl
or
mov
scas
jae
mov
icebp
push
and
pushf
cmp
movsb
negb
test
ss
jmp
daa
addr16
inc
ret
mov
sub
je
xor
adc
rcrb
cmc
sbbb
outsl
mov
inc
dec
jp
inc
xor
out
hlt
lds
push
divb
cmc
adc
cmpsl
add
jne
cld
repz
push
xor
jge
loop
dec
out
and
or
pop
jmp
mov
les
test
pop
psubw
xorb
lods
sbb
imul
pop
lcall
pushf
add
out
push
xchg
fildll
and
incl
loopne
pop
cltd
push
jp
clc
sarl
dec
insb
out
aad
test
inc
mov
xor
sbbl
es
loope
push
imul
sbb
cmp
dec
das
test
jle
mov
mov
insl
push
push
js
lds
outsb
stc
jb
sbbl
mov
outsb
aas
outsl
inc
into
jmp
or
dec
xchg
mov
mov
mulb
lret
xchg
pop
push
mov
popa
dec
jae
loope
xorb
outsb
xchg
inc
push
out
bnd
movsb
inc
loope
lahf
js
in
das
fwait
enter
add
cmp
cltd
popl
mov
fadd
sub
mov
push
aaa
pop
push
bnd
mov
or
cmp
push
xor
shr
and
pop
or
sbb
jl
inc
iret
imul
dec
hlt
dec
outsb
sar
bound
push
mov
mov
cs
andb
sbb
lock
rcrb
dec
dec
inc
mov
iret
out
ss
push
xchg
cmp
test
leave
inc
repz
ret
in
shlb
and
push
and
dec
lods
jnp
sbb
cmp
inc
jp
add
jmp
rcrb
enter
test
and
push
in
hlt
jl
cli
xor
adc
mov
fldenv
mov
jle
mov
xchg
push
int3
lea
test
push
add
sub
pop
sti
repz
xorl
stc
das
pop
lret
xchg
sbb
bound
leave
icebp
stos
gs
jmp
test
mov
div
sbb
in
fidivl
shl
dec
out
and
inc
push
pop
test
push
pop
ss
sub
in
mov
sbb
cmp
jmp
fwait
outsl
pushf
push
aad
and
test
sbb
jle
push
hlt
ret
jle
fisttps
jnp
xchg
cwtl
imul
pop
add
test
pop
mov
add
cmp
jmp
cmc
int3
test
movq
cs
push
push
xchg
movsb
dec
in
adc
inc
jle
adc
and
mov
mov
adc
push
sahf
cmc
mov
pusha
cmp
fldcw
jb
push
test
or
scas
clc
push
icebp
fisttps
add
loop
loop
mov
mov
dec
mov
pop
cmpsb
lret
int
jmp
add
js
ljmp
lods
xchg
mov
mov
mov
clc
sbbl
icebp
cmp
cmpsl
push
lahf
inc
xlat
addb
add
push
psubw
pop
xchg
mov
mov
push
std
and
ljmp
lret
ret
push
sub
push
mov
mov
iret
bound
sbb
cmpsl
sub
sub
out
sub
repnz
mov
dec
das
inc
and
pop
out
mov
push
ss
push
push
push
add
enter
mov
insb
mov
call
insb
fstps
scas
cs
out
aaa
add
jne
and
mov
xor
movsb
push
xor
add
pop
movsl
xor
out
push
sub
cld
push
fistl
push
inc
ja
stc
mov
mov
call
add
jns
pop
add
enter
add
mov
aaa
movsb
lret
cltd
cmc
push
cmp
dec
shl
mov
mov
sbb
dec
pop
les
mov
xor
nop
test
jmp
add
pop
jp
cmp
jns
loopne
repz
mov
sbb
in
sbb
jnp
sub
adcb
daa
out
jecxz
lcall
jg
lods
push
sarl
inc
mov
mov
xorl
lods
cmp
in
or
outsb
outsl
xor
pop
jge
pop
loope
setno
jae
mov
inc
dec
test
mov
loop
sub
mov
hlt
hlt
scas
inc
sub
ret
cwtl
insb
mov
inc
dec
dec
out
ret
in
mov
jmp
inc
dec
test
mov
iret
cli
xlat
push
je
mov
or
rolb
cwtl
push
repz
sbb
outsb
adc
xchg
and
sub
xor
fwait
orb
adc
cltd
fcomp
mov
mov
add
or
cli
fs
push
movsl
rorl
dec
mov
inc
inc
call
ja
negl
jge
jg
rolb
inc
xchg
push
pop
mov
mov
cmp
movsl
xor
movsb
pop
jmp
xchg
ljmp
rol
jne
mov
mulb
and
popf
jmp
lds
cld
test
shl
std
xor
sub
ss
inc
push
xchg
and
sbb
scas
mov
xchg
stos
jle
sbb
insl
lret
lods
jmp
and
inc
sahf
rcll
outsl
insl
add
or
mov
lock
xchg
popa
jle
pop
xchg
mov
pop
imul
lds
out
push
pop
cmpsl
pop
ljmp
int
cmp
jp
ljmp
inc
icebp
in
or
out
repz
adc
xor
movsl
cltd
mov
andl
lcall
sbb
sub
lock
js
lret
pop
sbb
bound
mov
or
or
movsb
repz
push
adc
xlat
push
jecxz
push
nop
mov
adc
cltd
push
or
jae
movsb
in
push
push
std
rol
ja
sbb
add
in
mov
insl
jecxz
inc
outsl
or
mov
xchg
mov
int3
or
bound
inc
xor
testl
into
mov
pop
pusha
push
rorl
mov
dec
or
push
xchg
sbb
addb
rcrl
mov
shrb
gs
pop
push
xchg
int3
aam
xor
test
stos
dec
or
inc
push
aas
js
mov
or
sbb
xor
and
pop
push
dec
cld
xchg
sbb
inc
mov
mov
adc
dec
pop
jle
cltd
adc
xlat
rcll
inc
xor
test
js
ret
xchg
sub
xchg
mov
inc
cmpsl
rcrb
insl
outsb
hlt
xor
movsl
and
sub
mov
sub
out
cmp
cwtl
push
sub
push
addr16
cmp
imulb
fcoml
addr16
cld
jmp
cli
test
xchg
add
popa
shlb
adc
push
jg
cs
lcall
jo
fdiv
mov
or
out
or
cltd
rcr
xor
aad
ret
cmp
mov
adc
arpl
jp
sbb
outsl
xor
jno
call
add
fsubrs
jmp
movsb
in
sub
mov
stc
in
mov
push
dec
roll
xchg
cmc
xchg
in
inc
sbb
dec
sub
lock
int3
xor
mov
jbe
cmp
addl
scas
xor
out
adc
movsb
ds
iret
push
pop
pop
es
mov
cli
test
and
imul
cmp
adc
orb
jge
xchg
adc
fists
dec
pop
xchg
adc
insl
add
xchg
mov
jge
pop
xchg
mull
pop
hlt
loop
sbb
adc
rclb
lcall
mov
mov
jle
ret
mov
leave
lds
cmpsl
loopne
pushf
push
repz
sbb
sahf
test
cmpsb
les
mov
sub
adc
aaa
dec
movsb
xor
xchg
add
out
push
pop
mov
std
pushf
scas
out
dec
popa
movsl
aas
call
bound
cmp
cmp
and
fwait
jp
xor
lods
idivl
cmp
pop
icebp
adc
addr16
cltd
xor
xor
mov
jne
sti
subl
fimull
test
fadds
xchg
inc
stc
push
cmp
ret
jb
bound
adc
xor
sub
outsl
les
push
jl
in
add
sub
sub
ret
and
adcl
mov
pop
jmp
insl
ret
push
ljmp
out
imul
insl
or
xor
fldl
xchg
push
shll
test
mov
mov
xorl
leave
stc
pop
mov
shlb
or
daa
bound
into
loopne
std
mov
loopne
lcall
loop
icebp
nop
pushf
popf
mov
push
and
outsl
adc
xlat
rcll
jp
addr16
push
aad
and
dec
addl
xchg
int
idivb
stc
or
incl
cmp
scas
or
pop
je
jne
adc
add
lock
sbb
adc
xchg
fistpll
push
cli
jl
pop
sbb
into
decb
jno
mov
dec
mov
outsl
cmp
dec
xor
xlat
inc
cltd
jns
dec
lea
add
test
mov
or
pop
inc
rcrl
stc
popa
rcrl
in
push
orl
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
or
ret
xchg
out
addl
push
xchg
imul
push
or
insb
mov
sbb
sti
je
dec
cmp
xor
movl
xchg
ret
jo
popf
sbb
or
inc
ljmp
fcomip
dec
mov
and
decb
ret
mov
add
rcl
cmp
jle
nop
pop
pop
sub
jmp
jmp
mov
repnz
inc
xchg
jle
push
loope
push
xor
mov
jb
inc
cmp
adc
aad
jl
mov
jle,pn
popf
lea
enter
sub
mov
lods
stos
adc
or
div
nop
jle
aas
dec
fidivs
cmc
xor
adc
sbb
push
mov
push
fstpt
push
cmc
dec
dec
xor
add
into
xor
outsb
pop
mov
lret
int3
jg
aam
ja
loope
inc
jmp
cmp
jl
mov
mov
xor
aaa
mov
mov
dec
mov
in
enter
and
mov
jecxz
xor
bnd
sarl
mov
push
jg
sub
adc
sub
mov
loop
fadd
push
scas
ss
stos
mov
jae
ss
mov
ret
scas
and
add
cmp
es
mov
jae
aas
in
ds
pop
xor
sub
cmp
data16
leave
mov
push
inc
add
jns
lods
adc
mov
or
ds
push
pop
lods
in
inc
les
movsl
lcall
sub
sub
out
mov
int3
lcall
fists
call
lea
xchg
fmul
ret
pop
sub
lcall
ljmp
seto
jg
or
and
xadd
inc
hlt
out
les
cltd
inc
aad
in
int
inc
pop
xchg
aad
lcall
fcom
int3
in
or
push
add
bound
nop
mov
outsb
ja
insb
arpl
mov
inc
lret
ss
mov
pop
jns
les
adc
dec
push
sub
mov
cmp
mov
pop
rorl
test
cmp
xchg
or
xor
dec
mov
inc
or
mov
mov
mov
lret
loop
jl
inc
movsb
dec
mov
fs
xchg
rclb
das
in
sbb
add
add
mov
call
cmp
mov
in
jecxz
fnstsw
jl
add
lock
mov
repnz
rorb
add
jno
in
sub
add
adc
ljmp
outsb
mov
sbb
pop
inc
fs
cld
dec
lds
mov
push
out
in
lcall
int3
jae
jbe
in
nop
adc
ss
loopne
icebp
mov
or
in
int
add
movsl
push
fdivs
pop
xchg
in
adc
xchg
push
hlt
jg
adc
mov
sarl
push
or
pop
ss
jns
call
test
mov
mov
inc
bswap
out
xor
xchg
sti
sbb
movsb
ja
ss
and
xchg
jb
mov
jno
inc
jmp
insl
data16
imul
cmp
fs
leave
in
jmp
jl
cmpl
push
sub
loope
adc
aad
pop
inc
and
sub
lahf
insb
lret
add
inc
stos
pop
test
popa
clc
std
arpl
dec
int
cmpsb
stos
test
jb
inc
or
shrl
ret
mov
inc
mov
fnstsw
ja
push
fabs
fcmovu
arpl
push
xor
cmp
jmp
out
and
stc
rcr
arpl
sahf
push
test
insb
add
fcmovne
sti
add
stc
and
jne
dec
adc
mov
mov
jae
imul
mov
xchg
xor
jo
jecxz
or
or
rcrb
dec
fs
loopne
pusha
fnstcw
test
pop
jo
movsl
cmp
and
sbb
sub
icebp
jg
push
xor
sub
or
pop
popf
inc
jle
mov
sbb
dec
rcr
jge
std
arpl
mov
dec
xor
dec
add
orb
lds
pop
cs
cltd
sbbb
dec
mov
mulb
jnp
inc
leave
dec
loopne
or
and
or
adc
inc
inc
dec
jl
fmull
jns
ret
test
sub
pop
pop
pop
mov
lret
mov
ffreep
push
rcrl
sub
inc
fwait
inc
sub
jg
sbb
mov
pop
xchg
push
mov
pop
cmpsl
fstp
stos
stc
mov
mov
les
jg
dec
dec
mov
jb
push
jmp
push
push
loope
ja
cmp
daa
das
scas
data16
js
and
dec
lcall
push
adc
mov
lret
daa
lahf
fadd
and
jnp
push
lret
cmp
mov
rcll
call
test
inc
imul
push
subl
pop
repz
sti
adc
shr
cwtl
mov
xadd
arpl
dec
test
mov
pop
mov
push
inc
movsl
xchg
lock
and
in
psraw
in
sti
xor
sbb
shlb
mov
in
push
dec
xchg
test
sbb
out
idivl
pop
dec
sub
sub
mov
call
mov
std
stos
dec
pop
shll
jno
xor
and
std
mov
pop
mov
ja
mov
dec
xchg
inc
in
cwtl
and
mov
add
nop
mov
mov
jns
outsl
xorb
sti
mov
fcompl
mov
out
sub
test
nop
jns
test
dec
std
idivb
scas
popa
dec
mov
popf
dec
es
sub
mov
ret
push
xchg
mov
jbe
in
jecxz
int3
xchg
inc
cwtl
int
jl
add
or
push
xor
shll
xchg
mov
out
scas
clc
aam
jle
or
adc
pop
inc
lock
mov
add
push
xorb
ja
sbb
jp
mull
jbe
repz
out
sbb
xchg
sbb
push
adc
jne
cmpl
or
stos
cmpsb
cmp
xchg
push
mov
mov
fcompl
xchg
sbb
lock
pop
lret
and
arpl
jp
loop
sti
in
mov
cmpsb
hlt
shlb
icebp
xor
in
push
arpl
enter
or
movl
in
add
dec
je
stos
fisubrs
dec
cmp
push
je
push
pop
jge
and
shl
out
jno
enter
or
xchg
fistl
jne
cs
inc
xchg
aaa
fbld
insb
js
popa
imul
lds
jle
jb
xor
addb
dec
cld
imull
iret
jmp
popf
add
sti
lods
mov
mov
mov
sub
xchg
imul
push
ljmp
mov
test
in
int3
sub
adc
aaa
mov
xchg
jmp
mov
les
dec
shll
imul
jne
cwtl
andb
xchg
adc
fcmovnb
sub
lds
lds
mov
bound
insl
xor
faddl
add
sbb
push
push
iret
adcl
repnz
pop
stos
ficoml
jecxz
sbb
sbb
in
xchg
jno
lds
adc
int
or
push
divl
mov
in
xchg
daa
outsb
mov
dec
xchg
sub
scas
stos
inc
push
int
xchg
rclb
imulb
daa
test
test
jecxz
inc
loop
lds
and
or
ljmp
scas
stc
lds
out
inc
push
into
or
and
outsl
in
and
in
shlb
ret
add
movsl
hlt
sbb
sbb
jp
xchg
pop
fdivl
add
test
jp
arpl
in
adc
jo
push
xchg
sub
movsl
xor
pusha
outsb
sbb
imul
jge
push
mov
pop
and
cwtl
inc
test
lahf
dec
aaa
pop
int
test
in
sarl
insl
cmp
sub
scas
push
sbb
adc
dec
dec
or
add
add
mov
gs
mov
test
cmp
adc
ret
xor
mov
sarb
dec
inc
xchg
int3
sub
pop
stos
xchg
and
lods
xchg
popa
nop
addr16
je
or
dec
rcl
movsb
mov
pushf
mov
jl
jmp
jb
rol
je
xor
push
sbb
inc
es
lods
xchg
das
in
push
lcall
nop
je
fdivrl
stos
imul
mov
mov
fnstcw
cmc
dec
jge
mov
mov
sbb
movsl
inc
jg
rcrl
outsl
into
les
rclb
aaa
js
jge
push
push
andb
das
pop
push
out
inc
stos
xchg
jg
adcb
shl
jns
mov
push
xchg
icebp
test
xchg
jns
lret
sub
imul
shrb
rolb
pop
mov
fdivrs
std
sub
adc
loope
or
jg
push
mov
jge
push
cmc
vaddsubpd
ds
xor
and
ja
push
mov
aad
mov
mov
into
sbb
cmp
mov
xor
inc
stc
and
mov
subl
ds
fsts
aaa
adc
repnz
out
cmpsb
sub
mov
aad
mov
out
inc
loopne
push
add
add
inc
jnp
pushf
inc
and
loopne
int
and
sti
inc
imulb
jo
shr
and
inc
add
movsb
out
sub
cmp
in
xchg
fisubl
ss
mov
lahf
sbb
cwtl
mov
cmp
xchg
xor
xor
mov
jae
dec
sub
test
stc
or
pop
and
fcom
ss
push
jecxz
cwtl
or
stos
inc
sbb
in
jns
mov
push
scas
nop
add
movsl
cmp
lcall
jnp
out
jae
fldt
outsl
add
arpl
mov
icebp
adc
xor
xchg
movsl
dec
xchg
jl
sbb
sbb
and
mov
cwtl
test
inc
mov
mov
adc
adc
pop
movsl
inc
xchg
pop
sub
xchg
push
mov
jbe
aad
stc
nop
push
cwtl
imul
jo
push
jnp
pusha
cmp
std
out
mov
pushf
sub
repz
aam
push
cmp
mov
pop
lret
push
mov
add
pop
jl
cmp
pop
idiv
mov
mov
sub
sbb
test
cmp
in
js
loope
mov
aaa
lret
xor
and
ss
pop
fs
cmp
ret
icebp
push
mov
jne
and
inc
pop
lea
addb
test
and
push
out
movb
mov
inc
inc
stos
clc
cmpsl
pop
or
inc
rorb
mov
iret
stos
leave
es
sbb
ja
or
ret
xchg
sti
cli
rcr
popa
icebp
sti
int
subb
xchg
and
fwait
mov
pop
mov
dec
cmp
xchg
xor
xchg
int3
mov
repnz
dec
int3
mov
lcall
mov
xorb
cmp
mov
loopne
in
lcall
jno
pushf
pop
add
dec
stos
lods
hlt
mov
adc
movsl
add
dec
pop
loope
test
dec
adc
mov
mov
sbb
mov
pop
mov
ds
fistpl
xchg
sub
fld
aaa
add
repnz
sub
adc
ja,pn
adc
mov
xchg
dec
int
cmp
adc
out
adc
mov
pop
in
pushf
push
out
int3
pop
cmpsl
fdivrl
mov
mov
adc
iret
fcompl
js
je
inc
or
repnz
sub
repz
frstor
inc
jl
cs
nop
in
xchg
gs
sub
lds
pushf
push
test
inc
xchg
js
push
je
mov
outsl
cmp
xchg
fnsave
sarb
push
mov
cli
jmp
jb
xchg
call
jnp
inc
loop
iret
sbb
cmpsb
xchg
ss
in
add
mov
mov
stc
xchg
jno
fmuls
incl
rolb
cmp
fadd
push
fimull
sbb
fimuls
mov
jle
xchg
pop
xchg
sub
imul
es
dec
call
lret
jns
in
arpl
inc
pushf
xor
jns
adc
and
mov
dec
inc
leave
inc
push
or
test
mov
in
jge
push
sbb
mov
xchg
movsb
adc
mov
fsubs
or
clc
cli
data16
dec
in
icebp
loope
dec
in
movsb
test
out
fildl
sub
clc
lock
mov
push
jne
or
push
es
das
repz
hlt
inc
andl
dec
jb
pop
dec
outsb
int3
fsubs
dec
jl
xchg
mov
movb
daa
sub
lds
add
mov
jmp
mov
sbb
push
add
sbb
push
inc
insl
sbb
repz
pop
mov
lahf
cs
int
mov
out
adc
hlt
subl
ds
xor
ret
js,pn
lret
pop
mov
outsb
cmp
and
dec
dec
aas
lds
pop
push
cli
sub
add
mov
insl
jmp
mov
or
push
add
jb
sahf
sub
jb
stc
iret
push
pop
int
sti
adc
sbb
fwait
je
mov
stos
jg
mov
add
push
insl
inc
or
divl
xchg
jg
addl
ljmp
dec
mov
sbb
insb
sub
pop
or
add
out
dec
fcoms
mov
xchg
push
sub
cmp
sbb
clc
shlb
dec
mov
adc
sbb
or
inc
fadds
mov
jmp
lahf
mov
dec
xor
ret
add
mov
sbb
xchg
pop
ss
adc
add
inc
dec
ds
xorl
data16
jmp
and
lahf
push
iret
jo
leave
and
sbb
add
xchg
xor
dec
lret
roll
js
test
cs
lret
or
cmpsb
or
add
push
sti
jb
xor
pop
int3
pop
or
rorl
popa
in
ror
and
hlt
pusha
sbb
pop
mov
lahf
mov
shll
loopne
in
dec
pop
stos
cmpsl
inc
pop
adc
lods
mov
popa
push
cmc
jl
adcl
push
arpl
push
cmp
lret
sarl
inc
push
add
out
js
or
enter
imul
or
mov
cld
arpl
rep
arpl
aad
insb
aad
sbb
xor
in
shr
stos
add
add
loopne
xlat
mov
decl
repz
jl
ja
nop
mov
ret
in
inc
int3
jo
arpl
je
inc
mov
aas
pop
xor
cmp
enter
lahf
gs
jnp
hlt
and
adc
cmpsl
ja
andb
rcll
dec
xor
lock
jge
jmp
hlt
out
sbb
mov
mov
mov
pop
outsl
inc
cmp
sti
in
jmp
push
jmp
push
inc
mov
data16
sarl
and
outsl
lahf
out
orl
loopne
sahf
push
mov
cld
sbb
ret
pop
aad
pop
inc
sub
push
xchg
pop
jno
orl
mov
sahf
jle,pt
jmp
cmpsb
jbe
jne
and
repnz
lds
add
push
jo
jno
mov
mov
jge
insb
inc
pop
pop
or
cli
dec
shll
sbbb
lcall
xor
dec
imul
in
inc
fdivs
fiadds
inc
lods
out
mov
mov
sbb
ss
notb
frstor
or
mul
push
cltd
sbb
push
call
cld
xor
pop
sub
daa
sub
call
mov
cmp
dec
adc
xchg
mov
push
daa
jp
push
inc
adc
jne
sub
mov
mov
add
fistps
mov
popa
push
jmp
sahf
jb
arpl
pop
pop
cmp
lahf
in
pop
test
cmp
pop
test
in
ret
cwtl
fidivrl
mov
repz
pushf
aad
mov
mov
xchg
aad
test
dec
inc
jge
lds
sbb
loop
adc
dec
push
or
mov
fwait
leave
add
mov
test
pop
test
sub
in
andb
icebp
pop
rclb
rcr
lahf
out
inc
adc
pop
xorb
inc
jge
push
mov
sbb
cmpsl
add
pusha
out
inc
push
movsb
outsl
ja
or
mov
push
dec
jg
mov
sub
push
mov
push
fcomps
stos
push
nop
cmp
ja
add
orps
lret
roll
jae
test
test
sub
sbb
fucomip
dec
pop
sysexit
mov
cld
aad
mov
jp
aad
cmc
fs
cmp
adc
cmpsb
mov
dec
fs
xor
test
mov
cmp
stos
ss
repnz
int
mov
inc
xchg
add
inc
push
mov
insb
push
jno
orl
push
loop
inc
push
mov
cmp
push
inc
jae
push
adc
pop
mov
seto
xorb
adc
xor
insl
jge
iret
push
mov
or
jl,pn
push
push
filds
shl
push
pop
rorb
xchg
shrb
add
out
icebp
hlt
lds
dec
mov
popa
pop
lcall
pop
test
pop
ds
arpl
mov
inc
repnz
bound
test
imul
add
andl
divl
dec
in
out
fbld
jbe
shll
xor
sbb
add
jg
pop
in
aas
lods
popf
not
lret
inc
sahf
iret
aad
cmp
dec
stos
in
ja
cwtl
arpl
xchg
sbb
inc
add
or
inc
jecxz
aam
aaa
or
mov
xor
push
jp
out
roll
xor
mov
pop
test
cmp
cld
outsl
inc
jae
add
movsb
sub
xor
mov
and
lock
js
mov
add
scas
mov
mov
aad
xor
int3
mov
dec
rcrb
adc
push
cmp
clc
mov
sbb
mov
or
dec
and
cwtl
and
test
xor
aam
add
cltd
stos
pop
ljmp
xchg
call
push
arpl
mov
cltd
pop
xor
movsl
adcl
xor
adc
xlat
test
aaa
push
loopne
pop
cmp
mov
jae
lahf
enter
dec
mov
mov
into
sub
test
cmp
aad
or
lahf
inc
shr
mov
movsb
fs
push
cwtl
enter
xchg
or
push
jle
in
mov
pop
mov
xchg
in
mov
jmp
lahf
add
sub
gs
xchg
inc
dec
dec
idivb
scas
cmp
daa
inc
mov
push
ret
aaa
pop
jo
rcrl
mov
xchg
data16
mov
js
das
sti
or
jmp
out
mov
pusha
stc
pop
cltd
xchg
arpl
cmp
jmp
jae,pt
mov
jno
mov
pop
push
sub
lods
push
pop
fwait
adc
sub
mov
sbb
mov
in
data16
push
lea
repz
mov
mov
add
sbb
aaa
loop
inc
or
out
cmc
inc
mov
subb
mov
dec
jnp
movsl
rorl
aaa
subl
or
ret
cld
shrb
fimull
xorl
mov
xor
stc
mov
aaa
push
dec
test
mov
scas
in
inc
mul
sub
jo,pt
inc
push
xor
dec
fcmovnbe
pop
dec
cmp
mov
xchg
sub
mov
outsb
js
sbb
shrb
and
xor
or
outsl
push
lods
rclb
dec
xlat
mov
push
push
jp
mov
repz
mov
inc
add
stos
arpl
add
jl
xor
mov
dec
jge
stos
pop
mov
push
mov
outsl
pop
adc
push
leave
jo
in
or
mov
xchg
add
mov
lahf
push
mov
fisttps
loopne
cmp
dec
mov
test
test
lock
sbb
push
jge
lcall
pop
mov
xchg
mov
decl
out
push
push
in
inc
sub
pop
mov
mov
xlat
cvtpi2ps
mov
pop
inc
lahf
movsb
popl
inc
iret
popf
mov
popf
leave
sti
cmp
out
enter
add
loopne
outsl
jmp
dec
sub
out
lods
xor
sahf
pop
daa
push
and
cmp
and
aam
test
sahf
inc
jecxz
aam
sub
jp
pushf
rcrl
int
aas
dec
xchg
jbe
push
jle
fnsave
mov
pop
xor
and
mov
xchg
movsl
mov
inc
adc
jne
ret
in
dec
push
ja
push
mov
mov
mov
push
push
mov
ds
sti
out
mov
xlat
mov
mov
arpl
xchg
inc
or
mov
xorl
lahf
sti
js
or
enter
das
cmpsl
out
jmp
sbb
nop
xchg
jecxz
std
in
fisubrl
xor
adc
jbe
gs
iret
jnp
andl
mov
mov
shrl
jge
test
xchg
sbb
js
jne
xchg
stos
mov
mov
xor
xor
movsb
popa
das
jbe
dec
mov
scas
in
xchg
lret
pop
lock
add
fsincos
popf
fadd
movsb
push
add
hlt
aad
mov
pop
inc
in
jnp
cli
lds
mov
inc
sbb
hlt
sub
dec
enter
movsb
cmp
dec
add
sbbb
int3
jno
adc
inc
fisttps
and
sbb
cmp
jno
cmp
sbb
stc
pop
jecxz
leave
mov
addr16
nop
mov
fwait
shl
outsl
or
jae
loopne
adc
movsl
inc
lock
lock
xchg
sahf
inc
xchg
or
push
scas
xor
imul
or
inc
pop
leave
xchg
lds
aam
pop
mov
fstpt
push
addl
jmp
lods
push
pop
mov
and
aaa
jo
mov
xor
mov
mov
push
inc
and
aam
jle
push
push
mov
or
adc
push
out
call
test
mov
daa
sbb
mov
lcall
inc
mov
movsl
or
stc
in
sarl
adc
sub
insb
cmp
rol
mov
inc
mov
dec
mov
adcl
mov
push
jecxz
cmp
call
xlat
cmpl
pusha
loope
ljmp
pop
lret
std
mov
aad
outsb
push
inc
mov
cltd
popf
hlt
cli
inc
out
sub
push
xchg
push
lret
adc
std
xlat
jg
push
xchg
cwtl
adc
leave
inc
xor
jno
mov
clc
stc
mov
lods
js
xor
push
outsb
daa
add
cmpsb
stc
xor
mov
jnp
testb
in
mov
dec
sub
cmpsb
xchg
cmpsb
xor
movsl
cld
sbb
cs
mov
adc
lods
sbb
je
pop
popa
pop
inc
in
and
aas
push
mov
sub
mov
jle
fistpl
mov
arpl
sti
cli
inc
cld
insl
addr16
dec
xor
adc
lods
jns
xchg
push
mov
sahf
mov
xor
mov
xchg
iret
addr16
pushf
imul
push
into
dec
popf
mov
gs
jno
adc
mov
add
inc
pop
pusha
push
mulb
push
sbb
fwait
leave
or
xor
dec
mov
adc
and
fstps
mov
hlt
add
mov
out
in
push
mov
cmp
incb
cwtl
xor
decl
xor
lret
repz
mov
test
mov
adc
xor
adc
adc
mov
adc
gs
add
cmpsb
fisubl
mov
pop
fadds
xor
fcompl
xor
jnp
repnz
clc
loopne
xor
gs
sub
notl
push
scas
add
insl
add
jb
mov
or
fisttps
add
xchg
or
inc
lret
loop
or
jno
cmp
push
cmc
nop
adc
or
mov
fwait
cmp
arpl
sub
ds
gs
loope
push
mov
mov
sbb
cmc
ja
cmp
adc
imul
popa
ficoms
cs
cs
pushf
iret
mov
and
into
sub
push
loope
and
push
mov
scas
out
adc
dec
es
and
pop
xchg
rol
mov
inc
nopl
out
aad
ljmp
inc
fsubl
jnp
shrb
push
clc
std
add
mov
mov
pop
xchg
out
jb
add
or
stos
push
mov
pop
mov
push
test
push
repnz
pop
pushf
cmpsl
inc
mov
add
mov
lret
and
fstpt
pop
mov
mov
out
lea
mov
jne
mov
arpl
pop
add
stos
cs
loop
shufps
xchg
loop
mov
push
dec
dec
test
mov
mov
out
dec
popa
mov
xor
xchg
sub
insb
lahf
imul
out
stc
push
sbb
lret
shll
sub
push
rol
mov
pop
mov
es
inc
cmp
stos
mov
cmp
jl
mov
push
js
mov
out
adc
popa
pusha
cltd
adc
adc
hlt
pusha
lods
out
mov
xchg
jo
pusha
ds
mov
jne
jmp
lea
lock
add
and
int3
popa
push
movsb
sbb
aad
xchg
ret
nop
cwtl
cmp
inc
nop
xchg
aas
bound
sbb
ror
lock
and
jns
add
xchg
and
xchg
hlt
mov
adc
dec
xchg
movsl
addr16
dec
stc
inc
push
mov
je
add
stos
mov
xchg
inc
fisubl
aas
inc
pop
sbb
scas
or
aas
rep
test
sbb
push
fldenv
push
and
sbb
mov
mov
std
out
lret
mov
test
test
and
sbb
icebp
scas
dec
and
jl
lods
inc
add
aam
out
push
jb
int
dec
insb
pop
push
pushf
iret
pop
cmp
xchg
inc
in
scas
sbbb
sahf
push
lods
in
ja
and
add
xchg
jnp
mov
cld
xchg
push
pop
sbb
dec
sub
aas
xchg
and
daa
orb
pop
cmp
in
movsl
jecxz
inc
xchg
xchg
add
aas
js
cmpsb
lahf
movsb
sbb
add
cmp
cmp
stos
push
test
mov
ret
lret
pushf
xor
shld
mov
push
aaa
into
fbstp
ss
out
lock
sub
add
shrl
sub
push
xchg
repnz
mov
and
rorb
sbb
mov
mov
pcmpgtw
cld
mov
cmp
jge
subb
mov
icebp
shlb
fsubrs
dec
popw
test
pop
xor
and
xor
adc
arpl
dec
ror
xlat
inc
xor
jge
sub
mov
jle
adc
pop
icebp
jmp
stos
pop
rcll
fcompl
std
icebp
lock
je
mov
inc
in
and
mov
incb
in
js
inc
push
in
sahf
or
popa
rcrb
jp
mov
test
imul
inc
iret
pusha
rcl
aas
push
xchg
push
daa
mov
lcall
mov
lret
inc
mov
pop
xor
daa
jb
in
pop
std
pop
mov
pop
cs
cmc
jb
popa
or
mov
mov
lods
ljmp
dec
push
sti
fs
inc
sbb
je
pop
mov
or
in
mov
pop
push
mov
jecxz
xchg
lret
std
xor
clc
into
push
into
inc
pop
into
dec
pop
adc
add
push
push
jmp
neg
mov
pop
test
push
pop
dec
cs
and
jge
xor
loop
or
stos
xchg
in
inc
fistl
imul
les
loopne
dec
insb
mov
movsb
add
aas
push
mov
inc
lock
fldl
and
test
movsl
xor
xchg
scas
adc
cmp
das
xor
dec
xor
sar
lock
mov
popf
inc
sbb
adc
ja
mov
xchg
adc
scas
dec
pop
xchg
test
cli
inc
push
fildll
mov
xchg
pop
push
repnz
outsl
testl
outsl
push
mov
in
xchg
mov
jp
es
lcall
push
mull
jne
mov
std
inc
int3
cli
test
out
xor
sahf
fists
inc
xor
pop
pop
mov
add
int3
cs
mov
dec
push
cld
sbb
xor
test
js
repnz
aam
push
push
push
loopne
jb
pusha
inc
push
cmp
mov
loope
push
jmp
add
mov
in
movsl
xor
test
enter
ss
or
test
in
test
jecxz
inc
imull
push
popa
lods
enter
mov
mov
xchg
andl
les
pop
stos
or
inc
outsb
pop
adc
jle
xchg
rcl
shr
test
repnz
push
mov
aam
dec
fcompl
mov
sbb
test
sub
inc
adc
xchg
jne
xchg
dec
in
mov
xor
and
leave
cwtl
add
dec
loop
push
mov
outsl
hlt
aad
movsb
add
loope
sbb
dec
clc
jb
mov
inc
je
xor
call
lods
rcr
mov
shll
gs
pop
xlat
jl
enter
mov
inc
mov
or
fsubrl
hlt
xor
addb
pop
fcoms
pop
adc
sbb
adc
sahf
notl
push
jle
jp
mov
xchg
mov
loopne
fs
shl
movsl
rcr
sahf
cmp
movsl
push
test
imul
scas
xor
mov
lcall
adc
cld
and
scas
sahf
dec
mov
cmp
hlt
cmc
xlat
cmp
xchg
xor
daa
arpl
cmp
dec
inc
mov
lods
and
lret
shll
icebp
ds
sbb
jl
push
icebp
mov
dec
in
jb
cmc
push
popa
jle
fsubl
inc
jno
mov
and
jbe
mov
orl
push
add
add
add
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
fisttps
push
rolb
orl
insb
sub
jb
ret
cs
push
dec
mov
mov
and
and
adc
push
inc
mov
int
sub
subb
push
jmp
jno
add
jp
and
popf
pushf
mov
jmp
pop
pop
pop
push
cs
mov
pop
or
jns
or
sub
adc
mov
dec
mov
outsb
or
enter
mov
mov
sub
lahf
xor
lods
aaa
add
xor
jle
cltd
cmc
cmpsl
xor
ja
ds
call
adc
sub
add
pop
int
dec
lahf
ja
lcall
mov
xchg
rcrb
cmpsl
lods
rcll
cmp
call
ds
jbe
ss
mov
in
leave
sbb
and
rorl
xchg
push
sub
in
inc
nop
xchg
jo
add
add
push
fimuls
cwtl
mov
add
loop
sbb
jl
aas
sti
jbe
add
cltd
cmp
fdivrp
test
cmp
dec
sti
mov
ss
push
push
ss
dec
jl
ret
xor
cmpsl
push
cmc
xchg
lea
inc
sbb
test
shlb
sbb
and
fwait
rorl
push
imul
sti
adc
lcall
test
pop
enter
inc
adcl
addr16
in
aaa
fsts
push
mov
in
fistpl
pusha
adc
dec
cli
pop
xor
je
adcb
mov
gs
lahf
nop
mov
scas
xor
ljmp
ja
aam
xor
mov
push
or
jg
popa
push
inc
repz
xchg
push
and
xchg
adcw
sti
xchg
pop
fisubrl
mov
dec
mov
xchg
leave
aaa
jmp
xchg
jp
mov
xchg
into
xor
pop
add
loopne
lods
aaa
leave
cld
xor
add
jg
adc
adc
push
sub
popa
and
rcl
arpl
mov
add
pop
mov
mov
out
and
aas
ror
and
xchg
cmpsb
xchg
mov
int
test
les
push
movsb
add
mov
ds
inc
xor
ds
push
add
pop
jg
clc
add
arpl
xor
sbb
mov
insb
and
cld
jb
pop
fiaddl
push
mov
inc
inc
stos
mov
or
pusha
pop
push
mov
and
jg
rcrl
imul
jl
dec
loopne
aam
loope
nop
dec
push
push
xchg
push
xchg
push
cmc
xor
arpl
jb
inc
add
push
cmpsb
jmp
roll
push
negb
sbb
pop
or
fmulp
pop
popf
xor
adc
mov
jl
idivl
lret
jb
push
cs
cli
add
push
subb
sbb
and
enter
xchg
arpl
in
push
mov
xor
mov
xor
imul
repnz
loopne
in
scas
adc
lcall
dec
mov
ljmp
fiadds
sub
push
push
cwtl
cld
dec
int3
adc
jno
lahf
imul
or
sub
xchg
pop
push
or
jecxz
mov
aas
add
mov
shlb
imul
push
jle
sti
aas
rcl
jno
push
mov
dec
jmp
pop
dec
scas
lods
inc
pop
jg
cld
sti
cmpsb
shll
cmc
mov
sbb
add
mov
fdivrs
rcl
push
pushf
push
mov
out
ror
out
adc
or
daa
pop
and
or
jne
data16
icebp
repz
inc
fdiv
push
lcall
lret
outsb
lea
mov
fs
test
cmp
mov
ror
adc
or
into
ja
in
bound
cs
lods
mov
inc
jle
dec
adc
jno
loopne
ret
nop
notl
mov
cmp
mov
shll
je
out
mov
mov
mov
adc
inc
negb
les
lds
cmpsb
inc
or
cli
push
mov
cmp
in
fsts
leave
sbb
ds
jmp
bound
mov
shrb
push
into
notl
push
fs
sarb
aam
outsb
add
jbe
loopne
adc
fucomi
je
aas
xchg
jg
push
fdivl
sub
and
aas
ljmp
add
daa
int3
jo
rcl
sub
jl
inc
cmp
mov
and
loop
ss
popf
mov
mov
out
imul
or
add
lahf
loop
mov
mov
or
xchg
inc
sub
mov
in
xchg
dec
sub
mov
xor
fst
and
sub
addr16
inc
sub
dec
in
pop
subb
or
and
jnp
cmpsb
cli
out
push
inc
dec
rcr
cmp
icebp
ljmp
xchg
popa
xlat
lahf
fsubp
insl
fsubrs
mov
or
pop
xor
jbe
add
cli
add
add
xchg
and
aad
js
inc
js
and
in
jmp
lea
repnz
out
push
mov
pop
cmc
insl
cld
inc
lods
pop
sbb
push
jns
inc
mov
mov
cmp
cwtl
push
stos
fsub
pop
arpl
fdivrp
call
outsb
outsb
xchg
sub
and
out
or
das
jo
sub
scas
arpl
xlat
lods
outsb
fs
sub
jb
sub
sti
inc
jge
and
mov
das
xchg
mov
sub
insb
and
bound
sbb
arpl
movsb
jae
sub
pop
hlt
rcll
push
int3
roll
mov
inc
ss
jecxz
pop
cmp
ret
mov
or
push
dec
push
ss
adc
rcr
out
das
mov
jmp
pop
push
adc
fbld
xchg
sub
add
repnz
ljmp
push
jmp
sarb
loopne
xchg
jae
int
sti
in
push
movsl
cltd
cmp
rorl
jns
lods
cmp
sbb
jbe
mov
add
cli
popa
aad
stos
jno
xchg
out
mov
lret
adc
mov
or
xor
mov
mov
es
mov
adc
fstl
lcall
mov
dec
dec
icebp
fwait
push
jbe
mov
dec
ja
jns
sbb
in
cmc
jp
js
es
mov
shlb
popf
cmp
test
adc
mov
lcall
xlat
mov
adc
in
add
xchg
aam
xor
mov
mov
or
lea
add
movsl
cmp
push
cmpsl
mov
sub
outsl
xlat
orb
lahf
test
int3
inc
es
mov
xor
aam
xor
arpl
aam
outsl
rclb
mov
xor
in
dec
dec
cmp
lea
shrb
mov
ja
inc
into
pop
daa
or
jp
dec
inc
bound
cmovo
push
mov
iret
js
cmpsl
int
add
pop
xchg
push
jno
sub
xor
out
outsl
js
popa
imul
push
rorb
sarb
sub
scas
add
sbb
iret
dec
sbb
jb
jno
xchg
mov
pop
jbe
jge
jmp
pop
xor
adc
cmpb
out
data16
push
faddl
scas
pusha
fcomip
mov
sahf
xchg
lods
jno
jno
sbb
sub
loopne
mov
out
push
call
jge
or
sbb
icebp
nop
ds
push
and
mov
lcall
jl
xlat
bound
scas
fs
sti
sub
cs
aaa
outsl
int3
sub
push
lea
adc
int
shl
pop
lahf
out
decl
push
xchg
jmp
ret
iret
xor
ss
std
mov
int
cmpsl
out
call
lret
add
inc
test
and
adcl
movb
ja
inc
pop
add
jne
mov
out
leave
sti
push
and
fs
xchg
adc
test
push
notl
cmp
add
rorl
add
add
mov
jae
rcl
jo
scas
inc
ficomps
jmp
addr16
dec
push
in
shl
push
outsb
sub
dec
xor
adc
js
or
in
jbe
push
lcall
lods
mov
loopne
xor
pmulhw
adc
addr16
enter
lock
mov
jns
mov
sub
mov
fidivrs
sbb
rcll
jle
xchg
repnz
push
inc
movsb
sbb
xor
xchg
xor
xchg
mov
nop
pop
inc
sbb
shl
fsubr
hlt
jns
and
int3
fbstp
fwait
cmp
inc
or
mov
aas
mov
sub
mov
repnz
out
add
iret
pop
in
mov
rcll
mov
insl
jne
mov
ficomps
adc
sti
jne
mov
lods
inc
jp
outsl
push
dec
scas
js
jl
roll
mov
inc
out
mov
loop
imul
lea
lcall
js
push
mov
mov
dec
jg
lcall
popa
ss
mov
inc
ret
sub
int
int3
movsl
out
mov
sub
adcb
or
vmovaps
add
cmc
cmpsl
cwtl
cmp
shrl
mov
mov
enter
mov
sub
js
pop
mov
jbe
push
sub
push
test
ljmp
nopl
ja
out
mov
fs
cltd
sbb
fimull
sbb
push
shr
xchg
stc
pop
lahf
cs
pop
jno
jmp
sbb
stc
inc
in
add
push
mov
js
addr16
fwait
inc
lds
repz
dec
or
sub
pop
stos
fwait
andl
cmp
dec
out
push
int
stos
dec
sub
mov
popa
das
push
loop
mov
dec
mov
stos
adc
add
inc
insb
test
pop
or
out
jns
scas
add
sbb
jo
into
cmp
cmc
stc
cmp
inc
pop
clc
lds
push
adc
leave
dec
and
loopne
add
test
jg
insl
movsb
jl
jo
or
jae
sbb
mov
push
in
mov
xchg
sti
test
fmuls
insl
or
jecxz
repnz
mov
ret
pop
data16
jmp
sbb
lea
call
or
out
dec
push
cmpsl
pop
iret
jns
lret
pusha
out
sbb
out
jno
fdivs
popf
inc
cli
scas
xchg
xor
test
movsl
movb
mov
not
or
xchg
mov
adc
mov
mov
sbb
popa
movsb
xchg
scas
fstpl
nop
pop
inc
add
push
mov
inc
cld
mov
clc
stos
fwait
inc
loopne
les
mov
jns
jmp
pop
test
pop
dec
lock
cmp
bound
jl
lods
sub
jecxz
jecxz
and
xchg
adc
icebp
ret
mov
sti
mov
pusha
push
push
cmp
pop
lcall
mov
mov
cmp
mov
je
sub
sti
or
lret
js
shll
repz
pop
mull
das
nop
pop
outsl
dec
pop
mov
or
inc
jp
lods
lea
pop
and
in
test
add
add
shrb
flds
cmpsl
and
add
lahf
dec
mov
pop
push
xor
mov
gs
fcomps
fldcw
mov
lods
ror
xchg
mov
push
mov
pushf
ror
sbb
sub
cwtl
pop
shll
pop
jle
in
and
negl
lods
out
mov
push
cmp
mov
aaa
jae
mov
cltd
nop
pop
sub
dec
jl
mov
mov
mov
test
xor
das
push
push
call
jge
jl
jl
test
aas
sbb
cmp
mov
stos
jo
stos
int3
cmp
pop
ds
sub
int3
repnz
ds
inc
outsb
add
mov
mov
sub
leave
scas
push
xchg
inc
adc
xchg
fistps
push
stos
cmp
test
and
pushf
addr16
add
leave
outsb
xor
insl
imul
jp
insl
dec
sub
and
loop
scas
orb
xor
dec
in
mov
cmpsb
add
sarb
je
xchg
inc
add
dec
frstor
aam
mov
push
sbb
mov
ret
repnz
and
mov
mov
fcoms
jge
popf
fisubrl
out
lods
inc
cmpl
lods
aad
or
mov
popf
jne
adc
or
gs
adcb
sub
lods
mov
or
insl
fsubr
repz
inc
push
and
lahf
icebp
jg
out
call
inc
into
cltd
rep
js
xchg
fucomip
add
sbb
shlb
testl
out
push
xchg
mov
stos
adc
or
mov
sarb
daa
das
dec
xchg
mov
jmp
nop
scas
cmp
iret
imul
ljmp
xchg
pop
inc
test
movsl
cmp
jge
or
pop
decb
stos
cmpw
test
addb
pop
push
xor
out
cwtl
addps
in
cmovnp
xorb
fs
mov
pop
adc
addr16
pop
add
stc
xchg
sbb
sbb
rcl
push
enter
xchg
int3
or
fbld
and
mov
add
dec
and
insl
pop
jbe
scas
test
cld
adc
cmpl
push
cli
push
mov
add
mov
ds
mov
pop
vpor
inc
out
lea
roll
test
sub
cli
jne
or
lods
fld
xor
jg
mov
sbb
scas
mov
jb
mov
lods
or
mov
int3
sti
lret
mov
lret
divps
mov
cmpl
loop
aad
mov
sar
or
fcom
push
jbe
negb
nop
sbb
mov
add
mov
jl
negl
push
sbb
je
cmp
sub
mov
fsubrp
xchg
stos
mov
lea
inc
jne
xlat
push
jp
sti
arpl
xchg
and
lret
lcall
cwtl
adc
push
imul
in
pop
mov
jle
jmp
test
jge
aas
test
pop
stos
and
mov
gs
sbb
imul
out
sbb
addr16
icebp
sub
xchg
les
jb
dec
inc
mov
mov
pushf
push
push
xchg
outsb
in
inc
push
loopne
dec
sub
xchg
fisubl
lret
sub
rorb
sbb
fwait
sbb
out
add
lock
jbe
fldt
call
cli
stc
adc
sbb
sub
and
pop
mov
jge
std
or
movsb
dec
repz
push
sub
push
leave
aad
sub
lahf
dec
add
pop
out
push
xchg
pusha
scas
aad
inc
dec
or
xorb
jbe
push
mov
es
fcomp
lahf
and
aas
xor
inc
lea
insl
jne
pop
jae
fldl
dec
in
lret
stos
cld
push
mov
test
xor
cmp
out
mov
fildll
mov
mov
dec
aaa
sub
xchg
jb
pop
cli
cmpsl
fsubs
das
jle,pn
es
pop
aad
mov
xor
mov
mov
out
dec
out
fadd
and
mov
dec
movsb
out
xchg
inc
dec
lea
mov
ljmp
lock
xchg
mov
and
mov
mov
movl
inc
xor
loopne
cwtl
mov
in
jl
push
lahf
fwait
ja
ja
push
scas
fwait
inc
pop
and
fists
mov
outsl
mov
mov
xchg
jo
out
stos
fs
data16
mov
xlat
cmpsl
mov
shlb
stc
and
add
sub
xor
test
sbb
adc
jae
xchg
pop
mov
pusha
push
arpl
mov
pop
idiv
dec
ds
xchg
mov
xchg
mov
sbb
sub
roll
jb
push
mov
xlat
stc
mov
loopne
sarb
and
cmpb
sbb
inc
repz
mov
aas
fists
push
in
inc
scas
repnz
mov
sbb
push
fnstcw
testb
test
sbb
gs
sbb
mov
dec
push
jg
bound
dec
fnstenv
xchg
mov
mov
jbe
xchg
call
or
cmp
mov
push
in
andl
je
xchg
fldpi
add
dec
sub
leave
and
int
sbb
inc
sub
adc
inc
fadd
push
and
mov
jb
pop
fstpt
pop
subb
adc
jg
xchg
mov
fisttpl
and
sub
push
pop
scas
cmpsl
xor
cwtl
outsl
adc
push
xchg
push
fiaddl
dec
or
xor
repnz
and
test
iret
sub
out
or
inc
jmp
dec
jmp
cmpsb
mov
addr16
xchg
divl
cmp
scas
inc
sub
cmp
into
sbb
cltd
clc
imul
outsb
leave
add
add
shlb
loopne
sti
cmpsb
mov
fprem1
fdivrs
sub
mov
and
pop
pop
call
dec
mov
mov
scas
fcomp
negl
mov
std
mov
sti
sbb
inc
pop
push
push
cli
add
push
popf
imul
call
sub
fistl
repz
int3
add
adc
dec
notl
ss
xchg
pop
mov
lods
jae
and
mov
enter
mov
jbe
or
ljmp
scas
inc
iret
or
out
dec
mov
scas
fs
int
je
jmp
sbb
push
dec
into
out
fisttpl
fildll
xrelease
dec
pop
ja
bound
in
sub
xchg
and
scas
pop
sbb
int
mov
divl
sub
add
pop
pushf
pop
scas
cmp
loope
imul
push
hlt
int
mov
inc
inc
and
icebp
fcomps
lahf
jno
inc
repz
aam
pushf
into
mov
cmp
and
or
mov
ret
cld
inc
adc
ja
xchg
mov
aaa
push
scas
adcl
lods
cs
jle
jl
sbb
pushw
ror
sbb
sbb
pop
leave
les
push
mov
xchg
popa
or
lret
std
sti
popa
repnz
push
in
xchg
inc
sub
das
cmp
test
mov
jg
xchg
dec
add
and
pop
mov
jmp
mov
cmp
xchg
mov
add
adc
std
inc
scas
lret
lret
cmp
add
cmpb
or
adc
imul
sub
mov
imul
fdivs
and
aas
cmc
push
inc
lods
dec
jp
mov
add
jl
cld
push
jecxz
loope
sub
inc
push
aaa
cli
jno
inc
stc
std
fwait
popf
xchg
dec
lock
fwait
dec
fcmove
cmp
jecxz
ja
stos
popf
jge
jge
add
jle
or
and
sub
mov
inc
xchg
adc
jnp
fistpl
cld
mov
fst
add
leave
repnz
jp
sub
push
lds
and
lods
mov
cmp
cmp
inc
ret
test
imul
cmc
cwtl
movsb
ljmp
mov
xchg
sub
lods
out
xor
lea
adc
sbb
stos
jo
push
ret
mov
loop
in
adc
adc
dec
dec
pop
dec
fisubl
mov
cltd
enter
movsl
cmpsl
fisubrl
push
sub
and
jp
repz
jl
inc
mov
push
stc
test
xchg
iret
push
ret
cmp
pop
xlat
xchg
lcall
aam
out
xchg
mov
dec
out
and
mov
mov
test
push
inc
push
addr16
dec
lods
data16
pop
xchg
aaa
mov
pop
js
dec
iret
out
mov
sub
test
cmp
mov
push
lods
lock
ds
push
jmp
outsl
sub
in
inc
out
gs
das
fldl2t
dec
popa
sub
pop
add
dec
add
test
or
xor
cmp
into
sub
mov
dec
pop
icebp
xor
pushf
call
mov
sbb
or
cltd
pop
pop
push
clc
int
or
xor
or
out
scas
ret
pop
dec
jmp
cli
add
pop
xchg
stc
inc
pop
cmp
push
fcoml
xor
cmp
fmul
mov
push
jnp
arpl
loop
subb
jns
or
add
scas
ret
push
sbb
mov
mov
scas
xchg
clc
push
les
dec
pop
jne
push
bound
movsb
inc
pop
jmp
gs
std
fwait
sub
add
fisubrs
cwtl
imul
adc
or
add
cmp
pop
cmp
lahf
pop
dec
movsb
jmp
divb
pop
filds
xchg
fmull
data16
pop
repnz
and
pop
les
loope
sqrtps
sbb
inc
pop
mov
dec
adc
cmpb
je
movsb
xor
popf
pop
aad
mov
int
iret
out
jns
sbb
push
loopne
sahf
mov
insb
sub
jne
popa
aaa
cwtl
xchg
sar
xchg
fisubrs
or
mov
push
cmp
aad
outsl
outsl
mov
sub
inc
out
shr
cmp
mov
lods
rep
pop
andb
mov
int
mov
aad
stc
mov
jmp
out
xchg
pop
adc
imul
push
movsb
mov
sbb
jle
scas
jp
fucomip
repz
push
or
push
jge
sub
xchg
pop
ja
inc
sbb
push
and
mov
xchg
out
adc
adc
or
inc
lods
cmp
mov
or
sbbl
cmc
lret
sbb
jae
push
cmc
ret
pop
push
add
xchg
aad
lret
pop
lea
cmp
subb
xor
daa
sub
sahf
pop
aaa
jnp
cwtl
and
push
add
lds
fsubp
cmp
test
jb
or
jno
and
mov
lock
cld
sub
xchg
call
and
push
leave
insb
mov
fmull
cmpsb
mov
and
cmpsl
mov
dec
push
jmp
rcll
scas
mov
cmpsl
dec
rcrb
mov
rolb
arpl
imul
clc
inc
xlat
inc
mov
jns
aas
fisttpll
pushf
mov
hlt
gs
mov
pop
cmp
idivl
jmp
popf
xchg
pop
xchg
dec
mov
mov
and
push
adc
sbb
ss
pop
dec
call
lahf
sbb
movsb
sbb
rcll
test
lcall
push
daa
mov
cmp
xor
es
andl
cmpsl
cld
movb
iret
xor
mov
pop
gs
sbb
push
into
dec
out
push
loope
pop
or
lahf
clc
js
iret
nopl
cwtl
pop
mov
pop
adc
mov
ss
dec
sbb
pop
mov
xchg
inc
imul
cs
lahf
in
inc
xor
xor
adcl
test
subl
daa
xchg
dec
fs
sub
jae
clc
aaa
xchg
lahf
sub
in
pop
es
sub
ret
int
and
pop
lds
xchg
or
cmp
jbe
jge
push
push
jle
lret
dec
cwtl
popf
int3
pop
sarl
dec
pop
lods
inc
cmp
push
icebp
out
in
mov
push
xor
scas
or
das
dec
jbe
and
hlt
xchg
aad
jg
shl
int
mul
and
out
sub
inc
les
push
inc
sbb
call
jl
lret
jns
add
outsl
mov
push
rcrl
jp
xlat
mov
pusha
out
mov
add
out
xchg
pop
aam
push
in
mov
lret
mov
pop
fs
sub
jnp
insl
and
bound
repz
fmuls
sbb
mov
outsl
dec
pop
mov
lock
mov
outsl
jecxz
cwtl
mov
mov
mov
dec
mov
insb
xor
sub
dec
idivb
jl
cmpsb
mov
fimuls
movsb
icebp
xor
xchg
jge
test
xchg
adc
or
lret
fiaddl
inc
jmp
pop
dec
dec
cmp
mov
cwtl
add
and
stc
or
jno
shrl
test
and
in
pop
idivb
dec
cmc
out
cmpsl
pop
mull
imul
mov
dec
add
push
mov
mov
inc
sub
pop
cmpsb
pop
mov
xlat
dec
subl
push
push
sar
in
rorl
addl
arpl
mov
lcall
xchg
roll
mov
sti
leave
js
lods
cmp
dec
movsl
cli
or
fcoms
dec
add
ret
jb
adc
mov
movl
imul
rorl
xor
mov
push
pop
psrlw
sbbb
inc
decb
dec
cmp
fidivrl
cmpb
pop
mov
mov
aas
mov
fsub
insl
sti
inc
adcb
mov
mov
inc
notl
imul
xor
jge
mov
add
mov
jp
bound
mov
jns
lods
bound
ja
jnp
jl
fs
jecxz
mov
out
loopne
mov
leave
cli
xorl
out
fnstsw
loop
clc
push
sbb
in
not
or
orl
cmp
hlt
fdivrs
jno
xlat
dec
shrl
repz
cmpsb
mov
rol
dec
cmp
mov
push
xlat
mov
mov
xchg
das
stos
mov
cmp
cmp
mov
jp
loop
and
add
inc
pop
xchg
mov
fcompl
in
addl
cmp
jmp
cmp
jbe
lret
es
enter
gs
sbb
in
jle
xor
js
sbb
push
or
inc
push
xor
add
or
cmpb
js
sti
iret
xchg
mov
mov
into
and
pop
mov
lahf
sbb
das
shlb
and
add
test
outsb
pushf
jbe
sub
push
in
inc
ljmp
cmp
dec
inc
cmp
mov
pop
sub
out
sub
sub
mov
imull
jle
fildll
sbb
dec
sbb
jbe
xlat
or
popa
cld
mov
jno
leave
enter
lret
pop
mov
das
shll
test
dec
sbb
ja
lods
cmp
ljmp
sub
mov
and
insb
arpl
dec
pop
or
mov
das
cmp
jne
pop
out
movsl
xchg
cmp
cmp
cli
xor
aam
mov
xor
mov
ret
sbb
and
xor
fsubrs
dec
pop
popa
imul
and
mov
jno
cltd
call
mov
test
notl
adc
or
fiadds
lods
mov
in
out
inc
pop
cmp
xchg
cmp
mov
ficomps
hlt
and
xor
mul
push
in
xor
hlt
xchg
fiaddl
es
mov
int
cmp
add
pop
jne
movsl
divl
les
pop
mov
std
mov
stc
pop
lahf
xchg
lahf
ja
push
lds
js
test
xor
or
inc
sbb
or
fiadds
mov
xor
and
mov
mov
out
add
icebp
jnp
sbb
popl
xchg
clc
xor
mov
adc
gs
push
lock
lret
inc
push
mov
mov
sbb
mov
sahf
adc
cmpsl
and
push
adc
imull
subl
int3
dec
xchg
jmp
pop
lods
xchg
lret
dec
pop
das
roll
xchg
xchg
ret
cltd
xchg
pop
hlt
data16
sub
pop
les
mov
test
cmp
out
ljmp
mov
lcall
mov
cmpl
xor
xor
std
inc
out
or
ja
pop
jle
scas
dec
repz
inc
and
lcall
pop
int3
mov
pop
js
mov
jecxz
sbb
mov
sarb
xchg
jno
or
mov
sahf
xor
jno
ret
pop
mov
es
lods
jmp
inc
pop
outsb
mov
sbb
mov
pop
cmp
loope
aaa
aaa
popf
xchg
in
mov
addl
shr
jg
fs
subb
mov
iret
cmc
es
negl
orb
xor
xor
repnz
je
rol
fildll
stos
int3
jno
cmp
mov
adc
bound
inc
xchg
dec
sti
jb
xchg
int3
rol
dec
inc
adc
orb
or
test
sbb
movsb
or
xlat
les
data16
xchg
mov
cs
addl
loop
loope
cltd
xor
pushf
mov
mov
sub
cli
mov
loop
sub
xchg
icebp
xor
out
stos
lods
jmp
stos
vcvtsi2sdl
or
mov
cmpsl
in
sub
pop
inc
and
xchg
dec
dec
jo
mov
mov
int3
and
fcompl
pop
or
mov
mov
stos
inc
stc
inc
loop
jo
xor
push
adc
mov
and
mov
outsl
add
icebp
xchg
dec
mov
sahf
sub
adc
jno
mov
or
iret
std
adc
mov
out
stc
mov
ljmp
mov
jmp
clc
and
or
xor
js
fidivl
jge
out
cs
sbb
rcl
sahf
xor
insl
lock
or
xchg
jp
ret
leave
les
jl
stc
adc
push
or
dec
or
pop
sbb
mov
fiadds
js
jns
sbb
pushf
daa
mov
mov
mov
mov
push
out
ja
movsb
aaa
aad
mov
int3
in
sub
sub
dec
xor
push
lock
cmp
shl
hlt
sub
ret
sub
sub
inc
jmp
loop
aad
cmp
inc
test
mov
mov
and
sar
repz
sub
pop
int
lcall
addl
cmp
push
aaa
sbb
add
fsubrl
sbb
cmc
adc
movsb
sub
aaa
dec
dec
inc
pop
or
cmp
lret
popf
jg
in
mov
adc
mov
into
insb
outsl
xor
clc
push
ret
push
ds
aam
pop
addr16
loope
std
add
sbb
or
lods
outsl
orb
pop
xchg
shl
scas
ss
lret
sti
xor
scas
ja
aaa
jno
jae
sbb
cmpsl
xor
inc
fdivl
fnstsw
add
mov
and
push
xchg
xlat
movsl
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
jb
pop
ret
scas
addl
lret
ret
xor
ret
jl
mov
xor
shrl
mov
mov
sbb
sbb
cmc
jp
ljmp
mov
bound
and
xor
into
sub
rcrl
sub
jo
scas
and
and
out
inc
lods
arpl
jmp
mov
xchg
loopne
xchg
mov
arpl
pop
fbld
add
jae
out
cmpsl
or
rcll
arpl
test
jbe,pn
push
int
lock
xor
sahf
ret
iret
sbb
push
jp
and
mov
not
dec
adc
call
add
jecxz
jno
jmp
jnp
mov
push
add
je
cld
jl
sbb
push
rclb
adc
and
mov
dec
lock
outsl
cmp
and
jl
jb
fldl
imul
add
inc
cmp
ret
daa
clc
out
in
xor
mov
jmp
lea
fidivrl
leave
jno
push
aaa
lock
das
aam
cltd
cmp
add
mov
int3
add
mov
xorb
xchg
jno
jmp
sbb
ja
mov
rclb
ja
test
xchg
mov
into
dec
movsb
jae
hlt
dec
pop
inc
test
push
ds
int3
sarl
jle
and
bound
add
test
add
insb
xchg
and
jge
fistps
dec
roll
lds
push
jae
xor
mov
xchg
sub
adc
andb
mov
and
stos
mov
into
xchg
push
sbb
or
sbb
mov
cwtl
mov
insb
jno
insl
fistpl
arpl
mov
mov
mov
jbe
add
xchg
mov
jo
mov
push
mov
popf
fnop
test
hlt
enter
jmp
into
cmp
cld
push
inc
call
std
push
dec
inc
cmp
or
sub
sub
movsl
inc
xor
push
xlat
fnstsw
xchg
adc
pop
dec
push
enter
mov
pop
jbe
sbb
cmp
inc
pop
pusha
sub
vmovhpd
out
sbb
xchg
add
pop
les
lods
sbb
mov
mov
pusha
and
mov
dec
mov
pop
xor
rcrb
daa
loop
mov
aaa
xor
pusha
icebp
addr16
std
cmp
subl
jnp
movsb
popa
movsl
ja
jnp
push
cli
cwtl
mov
dec
pop
dec
and
xchg
daa
in
sbb
push
cmpsb
pop
push
or
mov
mov
cmpsl
jbe
pop
cmp
pop
loop
cmp
sbb
push
out
add
mov
adc
mov
addb
pusha
push
movsl
addr16
dec
and
jns
dec
pushw
das
or
loopne
sbb
rorl
cmp
pop
iret
sbb
hlt
mov
js
aad
in
and
jno
push
mov
arpl
add
and
inc
sub
out
jno
pop
xlat
lea
ret
mov
icebp
pop
mov
mov
push
sarl
inc
or
jle
inc
ds
mov
push
and
sub
inc
adc
jo
cmpsb
aas
clc
jb
jne
je
cmp
aad
pusha
mov
hlt
std
adc
jg
sub
fiadds
repz
insl
sub
mov
sbb
push
and
mov
js
push
pop
loope
cwtl
xor
xchg
rcll
imul
fwait
xorl
add
jo
in
push
pop
and
sub
das
ret
fwait
pop
push
repz
popl
cld
pusha
sub
jae
push
mov
orl
and
mov
mov
sub
cmp
shrb
sbb
scas
and
lret
push
shrb
sti
push
xor
mov
xchg
xchg
int3
lea
mov
push
addl
and
and
sub
test
adc
fucomi
inc
je
fldcw
movsb
pop
xor
movl
les
sub
outsb
mov
mov
rorb
pop
jb
mov
pop
insl
mov
xor
xchg
pushf
sub
movsl
sub
and
mov
xor
pop
sub
jae
lret
push
sub
pop
jo
mov
pop
int3
cmc
shrl
int3
inc
invd
movsb
movsb
sbb
mov
mov
out
push
mov
aas
in
push
pusha
out
daa
push
mov
mov
out
popl
fimuls
inc
aaa
test
xchg
mov
test
and
dec
push
pop
cwtl
pop
add
push
lea
outsb
inc
mov
and
fwait
lods
xor
cli
es
popa
adc
fwait
add
xlat
cmp
push
in
stc
lcall
push
add
inc
sbb
jns
cld
jae
cltd
ds
adc
lret
dec
fstpl
shrb
out
ja
daa
inc
mov
jae
mov
jns
and
shl
mov
loop
sbb
subb
rcll
out
push
xchg
mov
push
lret
imul
dec
pop
pop
cmp
outsb
mov
mov
mov
sub
imul
inc
ja
dec
inc
mov
dec
fistpll
xchg
jg,pn
dec
push
js
sub
stos
cltd
dec
aaa
test
loop
xor
out
sub
shll
aam
add
test
mov
ja
inc
fwait
inc
call
jge
cwtl
inc
sbb
call
jg
or
cmp
and
insl
jb
add
mov
and
les
loopne
imul
out
xchg
mov
fs
push
jo
pop
mov
cwtl
sub
mov
loope
scas
hlt
repnz
ljmp
stc
in
push
pop
xchg
out
mov
jb
pop
mov
out
sbb
movups
nop
sbbl
roll
enter
or
adc
add
cltd
mov
dec
add
stos
dec
in
adc
cmpsl
sub
mov
daa
sub
rolb
dec
andl
insb
adc
or
sti
adc
xorb
push
insl
mov
aaa
push
adc
sbb
adc
in
mov
movsl
inc
pushf
insl
repnz
pop
jo
add
xor
aad
fdivrs
dec
mov
sub
aad
shrb
push
mov
mov
ja
push
data16
inc
mov
shrl
es
ficoms
enter
dec
xlat
pop
mov
push
sbb
xchg
or
jp
adc
jne
add
outsl
jne
or
dec
int3
mov
data16
pop
cltd
add
fisttps
lock
int3
push
inc
cs
sahf
sahf
mov
dec
mov
cmc
or
cmpsb
das
mov
cltd
sbb
das
inc
movsl
lods
jmp
pop
popa
lock
xchg
lret
loop
ret
or
dec
xchg
test
mov
mov
je
inc
les
aaa
xor
and
or
popa
aaa
sbb
nop
jmp
cs
iret
adc
fsubrp
lcall
das
push
int
std
or
cli
clc
cmpsl
cli
mov
jb
fadds
ret
push
adc
cld
scas
pop
jbe
adcl
ja
insb
int
mov
fucomp
outsl
xchg
pop
mov
aaa
xor
inc
in
jg
or
jge
xchg
cltd
mov
sub
pop
test
ljmp
cli
mov
push
xchg
push
fs
and
push
out
lea
sub
and
jae
sbb
mov
xchg
and
or
xor
xor
cmp
cli
stc
push
and
addr16
dec
mov
es
je
or
test
pop
and
push
jmp
push
mov
in
push
pushf
or
inc
lock
jle
jno
fcomip
mov
mov
mov
int3
dec
iret
cmp
cmpsb
xor
mov
mov
sarb
and
push
xchg
les
gs
xchg
or
mov
jno
sbbb
adc
movsl
jg
sbb
jne
push
adc
fdiv
lcall
test
fmul
enter
or
and
push
xor
sub
es
xor
adc
sub
sbb
adc
push
push
or
xor
mov
ror
push
inc
test
cld
or
xchg
mov
push
mov
sbb
jns
movsb
adc
add
bound
push
push
test
popf
mov
hlt
sbb
insb
pop
mov
fstpt
pop
mov
mov
in
mov
popf
lahf
push
cs
shl
inc
dec
fs
fmuls
adc
mov
out
pop
jg
or
cmpsl
push
fsin
pop
xchg
mov
xor
aaa
xchg
jmp
mov
fildl
lcall
cltd
push
ds
sbb
test
sarb
xor
stos
mov
cwtl
dec
push
mov
ret
dec
dec
add
jle
inc
mov
cli
std
mov
cmp
inc
fisubrl
ljmp
sub
push
nop
shl
adcl
lcall
jae
test
es
sub
mov
ja
push
xchg
std
fsub
pop
jge
mov
lods
into
cmp
call
mov
push
stos
xchg
jbe
adcl
sbb
ljmp
xchg
loop
xchg
adc
mov
fistpl
push
mov
popa
jns
shrb
mov
pop
and
dec
ret
pop
popa
jns
outsb
sub
and
mov
jle
insb
adcb
inc
push
xor
push
sbb
ret
dec
xor
lock
push
aaa
pop
js
adc
xchg
and
div
add
mov
push
or
cmpsl
in
notb
cmp
inc
mov
or
fdivr
or
add
es
fisubs
mov
in
in
mov
das
movsb
mov
shr
jge
gs
mov
lods
adc
or
pop
jno
fdivr
outsb
leave
add
sbb
mov
push
mov
lods
push
repnz
iret
std
xor
minps
lods
out
stc
int
ffree
imul
cmpsb
cmpsl
lret
js
ss
fcomps
sub
add
xchg
insl
sbb
iret
fcmovnbe
jns
and
or
das
sub
hlt
sbb
aas
xchg
sub
stc
xor
push
cmp
sbb
andl
jge
sub
sub
shrb
mov
xor
inc
sub
sub
add
nop
push
std
add
xlat
sbb
aad
push
inc
lock
ss
imul
cmpsl
movsl
in
jbe
fisubl
push
dec
cmp
ficompl
mov
leave
pop
adc
jne
and
push
dec
fbld
add
push
cmc
pushf
cs
mov
pop
movsb
mov
cs
dec
mov
mov
mov
jb
jo
pop
cltd
fimuls
xlat
pop
jl
popf
jb
jns
shl
imul
test
push
mov
lret
xchg
cmc
leave
and
mov
cmpb
test
add
inc
push
in
inc
push
push
add
js
sub
scas
cmp
add
mov
gs
push
xor
movsl
sbb
btcl
roll
pop
aam
dec
cmpsl
push
rorl
std
gs
test
dec
xchg
fcmovnu
sbb
xchg
stos
mov
js
shll
xor
ret
or
sbb
popf
adc
cmp
je
nop
sbb
jle
daa
ret
cmp
gs
dec
pop
or
sbb
mov
gs
xchg
xor
mov
dec
sti
in
les
and
jo
adc
subb
sarb
dec
jno
call
mov
mov
shrb
test
cmp
std
xlat
hlt
repz
inc
mov
lea
loope
add
xchg
fsubrs
pop
std
push
sbb
loope
sub
push
cwtl
fldt
push
xor
cmc
fcomps
pop
lods
push
push
xchg
jb
rcrb
xor
cmpsl
add
test
sahf
mov
push
gs
clc
xchg
sbb
outsb
inc
push
aas
cmp
pusha
iret
sub
jno
icebp
ljmp
lods
mov
test
jb
addr16
jle
cltd
xor
jno
mov
mov
inc
sub
jno
loopne
rorl
push
movsl
call
mov
cmp
in
fcomps
pushf
mov
dec
cmpsl
push
outsb
xor
jo
rclb
insb
mov
jg
mov
scas
daa
push
xlat
mov
adc
nop
cmpsl
pop
jle
insb
insl
pop
xchg
mov
push
xchg
pop
lcall
mov
test
mov
sub
mov
push
inc
push
movsl
aaa
icebp
mov
dec
jno,pn
insb
loopne
pop
jbe
jmp
pop
sbb
shll
inc
push
adc
ficoml
addr16
adc
xorb
cmp
mov
xor
decb
test
jg
sti
adc
pop
insb
jbe
dec
mov
xchg
or
daa
fneni(8087
ss
inc
jo
cmc
push
and
cmp
pop
loope
sbb
push
pop
loope
pop
negl
mov
jge
test
cwtl
scas
js
dec
lock
les
add
sbb
icebp
xchg
pop
out
jae
cmc
mov
add
jbe
call
or
bound
mov
cwtl
sbb
xor
push
cmpsb
fnsetpm(287
push
sub
push
or
or
jno
add
mov
xchg
pop
in
and
mov
aam
sbb
cld
push
test
xchg
and
stos
inc
inc
or
rcll
push
dec
js,pn
push
sbb
enter
ljmp
adc
ret
clc
cmpsb
outsl
outsl
dec
mov
je
into
sub
cs
adc
data16
jecxz
daa
inc
mov
push
jle
int
mov
std
in
jg
icebp
aam
or
cmpsb
pop
daa
in
mov
sbb
leave
movl
test
fbld
xchg
cmp
stos
sub
pop
xor
add
dec
pop
add
or
out
cmc
adc
popa
jbe
mov
cmp
and
mov
inc
mov
aaa
and
adc
rorb
cmp
mov
sub
out
ret
or
lret
arpl
sti
std
mov
add
xor
or
inc
mov
out
dec
rol
ror
sbb
bound
push
ljmp
and
fs
add
imull
test
sub
mov
xchg
aaa
cmp
add
lods
push
push
inc
in
das
xor
jno
fmul
pop
cmp
jmp
inc
sbb
loop
fs
and
ret
stos
inc
pop
cmp
pop
js
test
mov
test
xchg
xor
shrl
jnp
jl
xor
adcl
rcrb
mov
pop
inc
xor
dec
pop
pop
mov
cmp
push
cmp
out
test
cmpsl
sbb
fcomp
mov
outsb
and
rcrl
stc
or
out
shlb
imul
mov
shrl
or
mov
loope
sub
jbe
imull
push
mov
and
pop
push
fs
into
aam
test
cmp
cmp
loopne
pop
add
xor
cmc
xor
pop
xchg
repnz
lcall
andb
iret
mov
adc
pushf
add
or
adc
stos
out
add
push
mov
aaa
imul
loope
in
mov
sbb
test
pop
or
jne
lahf
push
data16
push
loopne
ss
jo
fsubl
dec
test
gs
xchg
shrb
hlt
xchg
sti
push
not
pop
inc
xlat
call
mov
fwait
outsl
dec
mov
mov
mov
jae
jecxz
adc
dec
pop
xor
adc
mov
mov
arpl
sub
xor
mov
pop
sbb
mov
jno
add
ja
cmp
es
jecxz
mov
out
pop
gs
mov
jp
icebp
js
xor
mov
daa
pop
dec
lcall
js
pop
shlb
loope
arpl
jb
jl
bound
cs
adc
sbb
in
test
push
cmp
jne
adc
loopne
mov
mov
shlb
lea
les
mov
pop
xchg
push
movsb
pop
push
pusha
js
lds
push
int3
cmpsb
std
movsb
lret
test
and
scas
jg
dec
xor
fadds
mov
divl
repnz
cmp
aam
daa
mov
cmp
and
cmpsl
loop
mov
sub
mov
jp
rorb
hlt
fidivrs
fdivrl
in
mov
inc
ret
pop
sahf
popf
outsl
mov
cmp
push
ss
cmc
aaa
daa
xor
sub
xchg
and
hlt
lea
out
cmpb
jp
hlt
mov
jle
bound
xchg
cmp
xchg
jns
jne
mov
lock
fldenv
xchg
mov
mov
sbb
xchg
repz
fstpt
ds
pop
shrl
mov
dec
das
lret
cld
cmpsb
jo
mov
xor
pop
insl
cmp
into
sub
inc
add
adc
inc
fs
dec
mov
pop
jb
int
imul
popa
mov
js
insl
pop
std
rorl
dec
and
pop
stc
jb
rolb
push
inc
sub
add
insb
push
cwtl
add
data16
sub
jns
lea
clc
or
sbb
lret
cmp
jl
dec
repz
stc
popf
and
jmp
dec
sub
int3
fildll
test
add
aad
lret
mov
stos
mov
sbb
jge
stc
push
and
fwait
dec
out
sahf
gs
arpl
roll
aas
dec
lea
mov
sarl
pushf
jb
mov
dec
test
xchg
mov
mov
mov
and
jp
loope
in
xor
imul
xor
dec
aaa
call
mov
sarb
and
dec
dec
out
push
pop
aad
iret
clc
pop
add
aas
fstl
jne
push
outsb
into
add
shrb
dec
leave
mov
mov
imul
ret
stos
lds
in
repnz
add
outsb
jecxz
ljmp
push
repnz
out
xor
pusha
xchg
pop
js
add
xor
cli
xlat
out
or
insb
push
cmp
icebp
jge
in
or
mov
fadds
fisubs
sahf
sbb
enter
dec
inc
jle
sbb
push
cmpsb
cmovg
sub
push
add
dec
imul
hlt
pusha
jl
lret
xchg
or
mov
loopne
repnz
jb
xchg
mov
add
sub
cmp
fs
int3
lock
mov
cmp
add
inc
pop
fsubl
test
jg
cli
mov
pop
int
mov
ljmp
fwait
adcl
cmpsb
or
adc
cmp
push
jp
pop
les
jmp
lods
jb
out
sti
addr16
pushf
daa
adc
inc
xor
inc
shll
test
scas
cmpsb
idiv
sbb
sbb
ficoml
fwait
cmp
mov
imul
mov
subl
ret
fxch
mov
pop
dec
sub
leave
shrb
js
pop
jle
shrl
push
out
push
subb
mov
stos
push
dec
inc
fwait
ds
dec
pop
ss
sub
lock
jle
lock
sbb
out
shll
imul
xor
aas
mov
mov
xor
iret
adc
das
adc
mov
movsl
cmp
adc
cmc
popa
xchg
push
fnstcw
jno
add
ljmp
mov
xor
sbb
cmp
sbb
popa
ret
jmp
add
outsb
dec
xchg
push
dec
adcb
pop
fdivrl
insl
adc
iret
shr
add
push
lods
cli
pop
dec
xchg
sub
xor
push
mov
mov
lock
push
fimuls
nop
ret
adc
lret
jp
jnp
dec
and
icebp
dec
iret
iret
cmpsl
jl
incb
jns
and
or
cmp
sahf
call
mov
ss
outsb
push
outsl
stc
movsb
mov
arpl
aaa
sbb
or
mov
jno
rol
xor
rclb
ds
mov
mov
dec
dec
mov
shlb
fisubs
dec
out
incb
ljmp
gs
lods
dec
or
cmc
les
jns
dec
add
es
push
sbb
mov
cmp
lods
xor
pushf
call
loope
pop
mov
out
test
inc
movsl
mov
xchg
sar
cmp
xor
sbb
inc
jae
hlt
mov
inc
mov
lret
sbb
add
int3
popf
add
out
ficompl
mov
push
push
dec
inc
incb
push
gs
data16
jl
sbb
icebp
sbb
in
out
clc
jo
cmp
add
adcb
cmp
stos
mov
mov
sar
pop
mov
pushf
ds
push
lods
call
fsub
cmp
sarb
std
mov
out
or
xor
bound
mov
es
xchg
int3
cmp
dec
lods
pop
push
and
popl
inc
adc
int3
dec
mov
xchg
movsb
fsubp
popa
bound
jb
mov
mov
addr16
mov
enter
dec
mov
mov
pusha
ljmp
jecxz
jbe
stos
ja
jbe
enter
dec
jge
imul
jp
pop
mov
stos
call
ficoml
loope
test
jo
mov
or
mov
sahf
cmp
sbbl
pop
lahf
xchg
cmp
and
mov
mov
or
icebp
fcmovu
inc
cli
arpl
mov
sti
hlt
pop
adc
push
jnp
inc
cmp
push
sbb
mov
ret
loope
xlat
out
in
arpl
add
enter
cltd
sbb
or
out
mov
add
outsl
js
in
call
pop
cltd
dec
cmp
push
cmp
dec
cmp
inc
loope
cmpsl
jo
jmp
mov
mov
orl
inc
push
cmp
ljmp
cmp
mov
out
dec
jecxz
push
push
popa
mov
xor
sbb
cmpsb
mov
xchg
adcb
sub
bnd
ret
mov
fstpt
enter
push
xchg
bound
xchg
in
adc
mov
push
ds
sbb
xchg
mov
xchg
ljmp
cld
xchg
jmp
in
dec
mov
inc
repz
dec
std
popf
add
mov
les
xchg
movsb
mov
movsb
js
adc
test
cmp
cmpsb
aam
fildl
xor
cltd
adc
mov
mov
repnz
cmc
adc
loopne
add
popf
cmc
addr16
notb
mov
push
vcvtps2dq
pop
ret
and
xchg
repz
dec
pop
insb
add
add
lret
inc
inc
icebp
lds
adc
mov
xchg
pusha
mov
arpl
in
xchg
pop
mov
std
ja
jle
out
cmp
sbb
ret
loopne
fsubrl
sub
pop
les
aaa
mov
sbb
mov
pushfw
mov
bound
xchg
mov
pusha
inc
fimuls
ljmp
mov
stos
in
pop
je
subl
arpl
dec
xor
pop
mov
mov
adc
sbb
sahf
frstor
lds
and
and
fldcw
insb
mov
lahf
sub
outsl
jmp
dec
cmpsl
adc
dec
mov
sub
cmp
and
mov
jae
xor
inc
shl
shlb
dec
inc
jne
push
adc
or
pusha
jge
scas
out
or
or
pop
mov
cmp
lock
lahf
in
jae
mov
dec
push
jmp
sahf
pushf
notl
push
loope
pop
dec
dec
aam
lds
loope
repnz
popf
mov
pop
icebp
outsb
popf
pop
scas
sbb
data16
cmpsl
pop
out
jb
inc
jbe
mov
fwait
enter
jnp
inc
fidivs
in
repz
jge
loop
pop
jecxz
cli
icebp
leave
push
and
inc
cmp
mov
mov
jg
nop
jno
push
popf
inc
add
xlat
mov
imul
repnz
in
sti
cmp
push
cli
sub
sbb
fisubs
mov
dec
nop
lret
jl
test
xor
jmp
cltd
adcl
pop
cs
cli
arpl
int
lods
adc
fwait
ljmp
loopne
addb
rorl
daa
add
dec
cmp
fs
outsl
leave
dec
xchg
push
push
das
fisubrl
sahf
ss
inc
adc
xor
lds
hlt
push
adc
int3
push
lds
and
divl
xlat
loopne
push
xchg
jns
xor
cmp
in
and
xorl
push
mov
and
loop
shrl
cmp
loope
popa
jne
icebp
mov
scas
push
arpl
or
add
movsl
int
mov
mov
and
stos
dec
arpl
addr16
pusha
out
sbb
inc
cmp
inc
out
xor
in
inc
dec
clc
xchg
test
roll
and
out
sahf
scas
test
inc
mov
sbb
andl
shll
pop
frstor
cmpsb
jge
loop
fidivs
es
dec
inc
sbb
pop
jno
mov
negb
mov
cvttps2pi
cmpsl
stos
cli
push
movsl
test
out
xchg
fwait
hlt
mov
dec
xchg
enter
movsb
xchg
jle
repnz
fldcw
mov
cmp
sbb
pop
loop
or
popa
push
enter
addb
push
fs
mov
das
ss
pop
xchg
mov
test
enter
mov
cmp
scas
inc
add
mov
sbb
cli
popf
aaa
mov
movsb
sbb
inc
sub
jnp
jbe
into
and
repz
xor
cwtl
stos
add
iret
adc
outsl
xchg
inc
cs
stc
outsl
mov
adc
mov
sbb
bound
xorl
jle
cld
pop
jbe
and
add
stos
faddl
push
or
lret
ret
jnp
add
fwait
push
mov
jbe
scas
push
das
xchg
nop
adc
in
adc
adc
sarb
xchg
out
or
add
push
add
push
cmc
add
jne
mov
repnz
out
xchg
fs
xchg
mov
adc
or
loop
leave
nop
ret
shll
pop
subl
enter
arpl
xor
pop
push
add
fisubs
int3
dec
mov
jl
add
push
push
movsb
fisttpll
push
ret
nop
ljmp
gs
or
out
inc
imul
sti
jp
call
outsl
rcrb
mov
and
xor
dec
sbb
cld
add
xchg
sbb
das
nop
cli
int3
mov
es
nop
out
jo
mov
stc
outsb
testl
xor
xor
mov
dec
fs
push
or
cmp
negl
sbb
stos
mov
add
cli
addr16
movsb
pop
inc
popa
or
push
jbe
dec
sbb
in
add
push
jmp
insb
dec
faddl
push
xchg
jp
repz
mov
ljmp
adc
pop
mov
lock
xchg
and
cmp
fdivrs
ficomps
mov
mov
cli
lcall
popa
push
dec
decb
sbb
push
cmp
inc
mov
push
imul
pop
push
test
pop
jo
add
shrb
je
sbb
mov
cmp
bound
loop
add
sub
fldl
popf
or
shrl
popf
sub
sarb
sub
mov
xor
or
cmpsl
imul
pop
arpl
xchg
das
mov
add
jle
je
cmp
sub
es
fistps
sbb
push
rclb
pop
add
imul
data16
fwait
sti
ret
jnp
mov
xor
pop
mov
adc
adc
inc
icebp
lcall
ljmp
xchg
push
inc
jb
lock
and
arpl
add
movsb
loope
fwait
and
mov
orb
push
xchg
xlat
or
sbb
lods
xor
sbb
sub
mov
mov
popa
xchg
push
pop
or
and
dec
adc
out
fcmovnu
addr16
and
stos
stc
ret
mov
mov
std
test
clc
and
add
dec
fistl
ss
daa
addr16
movsb
lcall
mov
mov
dec
sahf
testl
mov
cmpsb
dec
xchg
je
mov
jmp
mov
shrb
movb
cmp
test
add
lods
mov
aam
ds
and
jnp
xchg
mov
movsb
mov
pop
les
cmp
and
inc
inc
sub
je
pop
div
adc
mov
push
fsubr
jl
mov
mov
sbb
lcall
jg
xchg
inc
pop
and
jae
subb
push
xor
in
lret
imul
lret
int3
cmp
movsl
jmp
and
xchg
inc
stos
push
fcomip
divb
ficomps
inc
adc
test
daa
push
mov
dec
mov
shlb
loop
jbe
lcall
test
div
sbb
or
pop
sub
jnp
lock
xchg
dec
sbb
add
test
lds
adc
fsubrp
out
dec
test
cld
dec
adc
test
shll
jmp
mov
daa
cmp
hlt
repz
dec
andb
test
roll
rcrb
pop
mov
xchg
loopne
fndisi(8087
xchg
rcrb
inc
das
lea
or
scas
cltd
push
enter
leave
stc
stos
jp
push
dec
push
pusha
addr16
int
and
pop
and
jbe
and
fldcw
int
test
cld
stos
mov
pop
out
dec
mov
stos
repz
mov
pop
in
cmp
sub
outsb
dec
add
cmp
jnp
xor
cmp
adc
aas
mov
ror
addr16
sub
jae
or
adc
enter
stc
test
ret
popf
add
add
out
push
xchg
sub
lret
cmp
mov
popf
pop
data16
mov
cltd
je
cmpsl
xchg
cmp
leave
mov
inc
fwait
xchg
sbb
xchg
imul
mov
mov
fcmovnbe
or
arpl
dec
pmaxsw
test
push
loopne
in
sahf
or
adc
push
stos
lods
loope
pushl
rol
fs
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
and
mov
pop
ficomps
dec
das
clc
movsl
out
cwtl
fidivrl
jmp
dec
les
mov
stos
addl
rolb
outsl
jbe
aam
mov
xor
enter
loop
pop
gs
test
jo
inc
sbb
fsubrs
loop
popa
ja
decb
xchg
lods
loope
push
fdivr
leave
xchg
sub
andb
cs
daa
outsb
cld
test
inc
mov
sub
enter
or
jge
bound
add
mov
cwtl
cmc
pushf
and
pop
ss
aaa
scas
jle
sub
cli
jns
pop
mov
clc
jg
jl
loope
jae
in
jecxz
sbb
std
push
std
cmp
pop
enter
fisubs
xor
lahf
and
and
xchg
cs
mov
mov
int3
mov
repnz
shll
jmp
mov
pop
ljmp
jmp
add
sahf
xchg
pushf
xchg
cmp
repz
addb
pop
out
add
adc
fstps
test
insb
loope
stos
and
movsl
inc
sbb
call
mov
pushf
sti
mov
leave
push
lcall
pop
in
push
mov
mov
bound
fwait
xor
mov
jle
mov
xor
adc
inc
cwtl
and
insl
adc
or
cmp
cmp
cltd
jns
loope
aas
clc
add
call
loop
ja
xor
imul
cwtl
inc
mov
rorb
cmp
pop
add
add
mov
test
inc
push
ja
cmpsb
pop
pop
sarl
call
sbbl
bound
sub
xor
addl
add
lds
pusha
add
jl
mov
insb
mov
test
int3
mov
jge
pushf
roll
sub
push
adc
jno
dec
jecxz
mov
add
aaa
xchg
and
cmp
jae
adcl
fnstenv
out
pop
mov
cli
fcom
adc
iret
mov
hlt
mov
pop
cmc
stc
loopne
bound
inc
inc
jno
rclb
xchg
clc
xor
push
lods
mov
jp
cmp
mov
sbb
sbb
jno
shrl
jae
pop
and
xchg
dec
push
sbb
insb
cmp
mov
xor
and
push
fs
xor
out
adc
lds
fdivrs
cmp
xchg
stos
cmp
mov
jne
mov
bnd
push
jbe
dec
fsubl
or
das
mov
enter
add
push
cmp
xor
pop
sbb
push
sub
sbb
movsl
adc
or
adc
sahf
ljmp
nop
ja
push
xchg
and
push
fs
pusha
pop
sbb
test
adc
mov
ja
adc
cmp
aas
fsub
sub
imul
sub
jnp
sbb
clc
pop
lods
pop
js
xor
jmp
sbb
inc
sti
notb
push
fimuls
xor
int
ds
add
arpl
sbb
inc
insb
out
arpl
aas
add
jp
mov
cmpsl
inc
dec
sbb
insl
fildl
sarl
sub
xchg
icebp
outsl
mov
lret
lret
jle
xchg
mov
adc
adc
andl
repz
cmp
mov
push
pop
aas
fs
testl
mov
out
out
mov
mov
mov
enter
arpl
and
je
std
jne
movsb
mov
repnz
movsb
repnz
fists
int
sub
xchg
adc
xor
sub
pop
es
cmp
cmpsb
sahf
fistpll
mov
insb
jo
cmp
or
jmp
sbb
andl
mov
outsb
pop
out
mov
andl
adc
sahf
mov
sub
jbe
pop
sti
les
mov
pop
aas
push
test
mov
cmpsl
bound
out
outsl
movsl
push
inc
add
gs
xchg
and
repz
push
push
mov
test
or
adc
xchg
mov
scas
add
or
adc
add
out
movsl
notl
popa
fiaddl
stc
dec
das
mov
pusha
push
add
adc
stos
push
inc
cli
stc
pop
cmp
inc
call
adcb
add
sub
jg
ja
out
mov
xor
cmp
popa
dec
mov
repz
setb
mov
jle
aaa
jo
out
pop
cmp
fdiv
fisubrl
test
sub
arpl
jne
sbb
inc
ret
ljmp
inc
lds
shlb
xchg
mov
xchg
cmp
int
jns
in
sub
mov
fsqrt
cwtl
sub
push
sub
ret
jae
push
xlat
clc
mov
subb
push
lahf
je
fsts
test
std
push
adc
mov
lcall
sbb
fdivrp
cwtl
std
movnti
repz
mov
and
les
xchg
mov
out
cmp
mov
mov
xor
add
pop
in
xchg
mov
xchg
stc
fistps
int3
test
subl
fs
imul
outsb
mov
daa
sbbb
and
dec
jg
xor
andl
out
push
push
xor
push
dec
sub
adc
shll
push
inc
xchg
stos
push
pop
push
push
sbb
sarl
cmp
outsl
cmp
imul
push
outsb
push
cmp
mov
stc
testb
jl
xchg
ret
pop
sti
adc
or
mov
sub
or
push
sbb
bound
cmpsl
mov
jl
mov
cmp
mov
test
sub
sarl
mov
mov
incl
mov
push
imulb
and
pop
in
xor
popa
sub
hlt
out
or
sarb
ror
xor
jmp
sbb
sbb
sub
pop
jp
lods
pushf
aaa
jno
lds
orps
xchg
les
jge
shrb
jle
mov
pop
cmc
cmp
daa
or
into
add
and
ret
sbb
jo
mov
fsubrl
cwtl
pop
aas
mov
dec
pop
or
lods
add
ljmp
imull
shll
sbbl
fistl
xlat
andl
push
es
jge
ficomps
loopne
jg
mov
sub
stos
xor
xor
roll
in
lods
dec
fsubrl
jg
adc
mov
push
adc
je
loopne
inc
or
shld
jo
add
lea
mov
fldt
incb
sub
pop
ficompl
inc
and
iret
or
push
jns
dec
jnp
xor
sub
xor
jle
test
mov
es
inc
pop
sbb
sbb
xchg
mov
in
ds
rcll
nop
js
pop
add
mulb
sub
jle
cmp
or
or
popf
push
inc
fimull
xchg
or
xchg
mov
push
push
jno
fwait
mov
adc
rclb
and
sahf
es
sbb
js
add
clc
outsl
repz
sbb
in
arpl
nop
lods
insb
adc
push
mov
jmp
movsl
and
mov
fnstsw
fdivl
dec
inc
push
inc
mov
mov
inc
out
xorb
pop
sub
mov
out
mov
sbb
jne
addl
std
mov
les
mov
test
test
dec
sbb
imul
pop
sbbl
les
pop
icebp
pop
add
lret
push
mov
push
in
bound
or
fisubrl
mov
repnz
data16
push
push
je
out
out
movsl
cld
or
pop
or
inc
cmpsl
push
pop
cld
push
mov
jg
push
popf
mov
adc
lods
xchg
pop
and
cmp
and
dec
mov
hlt
lds
inc
les
xchg
xchg
mov
mov
or
arpl
sbb
sarb
fistps
push
mov
add
popa
fldl
inc
or
icebp
fscale
jecxz,pt
xchg
ljmp
adc
mov
add
mov
lcall
push
cmp
jmp
mov
pusha
aas
rcrb
push
mov
cmp
add
lahf
or
inc
jae
fwait
mov
lods
mov
aad
xchg
stc
mulb
xchg
jg
shrb
adc
xchg
lahf
ret
lods
mov
mov
into
add
cmp
stc
pop
sub
or
imul
jae
mov
fisttps
js
hlt
cmp
or
lods
push
mov
mov
icebp
dec
adc
push
je
and
ds
add
mov
loopne
dec
pop
cmpsb
mov
sbb
jge
jl
sub
jl
jp
cld
jle
push
xchg
ds
aas
insb
cmp
fwait
cmp
pop
in
aaa
or
ss
adc
outsb
sbb
xchg
sbb
pop
dec
mov
jmp
std
in
daa
push
pop
imul
push
adc
mov
or
sub
gs
outsb
pop
or
hlt
arpl
sbb
jno
notl
out
or
mov
inc
jbe
fmul
add
sahf
sub
fcoml
add
ror
xlat
in
xchg
shr
outsl
popa
xor
and
nop
cmpl
cmp
inc
sub
std
add
sub
and
fdivs
aam
mov
jecxz
ljmp
je
dec
das
mov
jae
cld
data16
fildl
ret
ret
sbb
pop
mov
scas
push
push
int3
sub
add
adc
bndstx
lock
enter
ljmp
shlb
adc
mov
pop
mov
leave
push
sub
adc
sub
sub
movsl
xchg
jbe
pop
cmp
test
pop
adc
fwait
adc
xor
or
xchg
lret
cmp
xchg
movl
cmp
and
data16
pop
gs
in
jno
call
jg
ja
add
aaa
xorb
repnz
dec
lds
roll
xor
fsubrl
pop
cmpsl
je
inc
pop
mov
push
pop
addr16
cmp
repz
cs
test
jne
adc
fwait
mov
sti
lds
dec
xor
and
sahf
mov
insl
mov
and
arpl
xchg
mov
add
mov
test
imul
pushf
movsb
mov
arpl
pop
cli
xchg
or
push
fninit
mov
cmp
add
dec
rcll
cmc
test
and
xchg
mov
leave
jns
inc
inc
adc
rolb
pop
aas
pop
jnp
loope
xor
mov
pop
movsb
inc
gs
aad
xchg
std
sti
das
and
adc
push
movsb
es
pop
pop
sarl
mov
mov
aaa
dec
shlb
fwait
sbb
add
sub
fwait
lret
lock
push
ljmp
rcr
add
test
stc
lds
jo
aam
xor
sub
scas
outsl
and
cmpb
xor
push
cmp
mov
mov
push
cmp
popf
stc
push
jle
pop
inc
test
das
xor
cmp
orb
cmpl
push
mov
jecxz
dec
fsts
out
mov
jne
push
movsb
and
out
fimull
mov
sub
ret
pop
adc
lods
clc
mov
adc
sub
add
and
cli
add
lock
enter
jns
dec
xchg
mov
pop
jbe
cmp
arpl
out
pop
das
cmp
mov
fwait
js
push
mov
mov
enter
mov
and
pop
jae
aad
fs
shll
incb
mov
fcos
cmp
pop
sub
mov
icebp
mov
xchg
lock
mov
in
dec
add
mov
add
cmp
push
sbb
sbb
push
adc
outsl
dec
push
dec
add
adc
stc
mov
mov
cmpsl
xchg
xchg
nop
iret
dec
in
and
in
repz
movsb
loope
mov
test
fstpl
dec
daa
inc
lods
jne
or
sbb
inc
jno
aas
add
jmp
nop
mov
xor
and
and
jne
frstor
lea
jle
xchg
imul
push
pop
fimuls
mov
mov
insb
pop
fstpt
mov
jb
pop
aad
mov
jbe
into
sbb
push
jno
mov
add
scas
inc
mov
aad
jbe
pop
inc
cmpsl
adc
mov
stos
cwtl
xor
mov
idivl
cmpsb
sbb
mov
test
or
test
cmpsl
je
pop
mov
xchg
neg
rorb
xchg
or
mulb
push
or
inc
shrl
cmpsb
pushf
mov
sub
lret
shl
mov
xor
adc
sbb
aaa
in
cmp
and
repz
sub
xor
repnz
lcall
int
loopw
push
fwait
jnp
xchg
lds
jge
cltd
cmc
rclb
push
xlat
jmp
push
xchg
testl
or
cmp
add
cmpsl
push
lcall
dec
mov
rorl
gs
loopne
repz
negb
cld
or
xor
in
or
mov
inc
push
push
mov
mov
xchg
adc
cmp
call
subl
dec
sbb
aas
sub
inc
shrl
push
mov
push
out
xchg
test
sbb
or
fwait
js
dec
lea
inc
adc
jg
sbb
or
jno
cwtl
sahf
pop
dec
dec
or
lea
fnstenv
mov
adc
data16
js
sub
stc
lea
adcb
bound
pop
ret
lret
dec
movsb
xchg
andl
dec
ds
hlt
int
test
mov
pop
lret
sbb
sub
enter
aad
mov
mov
ficoml
aam
jno,pn
cmpsl
and
lock
dec
push
lret
shl
stc
imul
decb
mov
lret
mov
inc
fisttpl
bound
or
negl
adc
sbb
push
add
lahf
fiadds
sbb
fstpl
out
mov
arpl
add
jmp
and
push
aas
pop
sub
xchg
jge
imul
jmp
mov
out
dec
sti
addr16
test
jb
das
sarb
popa
in
je
push
leave
repnz
push
imul
adc
clc
and
insl
xchg
insb
ror
stos
xchg
jle
cmp
iret
lret
shr
pop
pop
sub
xor
pop
pop
inc
cmpsb
mov
int
jne
ds
fldt
mov
sbb
fidivs
cli
leave
aaa
stos
xchg
push
ds
push
xchg
faddl
adc
sbb
aam
dec
pop
adc
pop
ret
push
or
stc
mov
jno
add
dec
icebp
cmp
cld
in
xchg
fcomps
add
std
xchg
mov
or
fdivr
mov
mov
mov
fsts
pop
loope
and
das
loop
aam
mov
mov
aad
push
mov
inc
mov
int3
pop
in
lods
cmp
fdiv
sub
add
xor
xchg
xor
mov
jge
and
in
ja
pop
mov
nop
bound
xlat
add
sbb
fxch
out
xchg
mov
loope
mov
stc
outsb
hlt
cwtl
pushl
movsl
negl
xchg
adc
add
dec
inc
mov
adc
fsubs
push
jg
mov
fmuls
jns
push
sub
lret
pop
inc
push
inc
jp
add
les
das
push
or
or
jl
dec
or
test
push
cltd
or
insl
mov
fbstp
mov
jp
dec
stos
mov
jge
push
jbe
jo
jp
fcmovne
lsl
cltd
testl
mov
in
mov
cmpsb
sbb
add
movsl
sti
lds
sub
outsb
lret
xorl
push
jae
popf
add
mov
push
test
outsb
or
aaa
jle
mov
push
cmc
sbb
orl
add
jmp
inc
push
insb
popa
cmp
out
pop
mov
sbb
mov
mov
out
cld
push
mov
cmp
insl
mov
lcall
push
add
lret
sbb
popf
pushf
mov
push
popf
jae
sbb
or
push
mov
lret
mov
pop
repnz
cmp
add
jae
loopne
sub
shrb
imul
js
cli
ss
out
jne
jge
cmpsl
out
mov
cmp
mov
lret
mov
jg
mov
jle
lahf
xchg
ret
adc
sub
ljmp
add
sti
clc
or
test
outsl
in
dec
lahf
dec
loop
js
push
arpl
lcall
adc
out
cmp
adc
sub
xchg
push
mov
mov
imul
les
push
mov
and
mov
push
xchg
adc
lock
push
enter
ds
adc
sahf
mov
mov
xorb
push
jecxz
xchg
icebp
shll
ss
sub
and
mov
mov
ds
or
cmp
fstpt
mov
mov
inc
fnstsw
ret
sti
and
pop
push
mov
xchg
out
test
shl
pop
insl
jo
and
cmp
mov
mov
pop
test
adc
push
sub
or
push
sbbb
jle
push
movsb
sbb
xorb
xchg
mov
cwtl
inc
push
leave
ja
shr
mov
cmp
in
pmulhw
push
or
push
lods
jp
cld
pop
jns
mov
mov
mov
push
inc
imul
mov
mov
iret
leave
adc
cmp
inc
push
sub
repz
or
movsl
xchg
sti
inc
xchg
push
andps
inc
adc
popf
jge
fcmovb
fimuls
mov
scas
add
test
into
dec
movsl
adc
js
out
sti
inc
in
repz
add
es
push
repz
je
pop
fdivl
sti
bound
repnz
sub
jno
xchg
repnz
popf
or
pop
in
fsubrp
jne
mov
push
inc
or
or
mov
jge
and
push
xor
cmc
mov
dec
adc
rcrb
jne
push
in
mov
repnz
pop
inc
mov
lods
insl
or
pusha
and
xchg
pop
jp
jo
cltd
lahf
cmpb
loop
out
pop
inc
subl
dec
ret
adc
lcall
das
xchg
jno
pop
jno
sbb
inc
inc
pop
stos
aad
jg
push
arpl
pop
jecxz
jmp
sub
clc
sub
mov
incb
lea
xor
xchg
in
or
gs
add
idivb
mov
mov
xor
adc
push
mov
cmc
outsb
mov
add
mov
inc
mov
pop
out
mov
std
ljmp
subb
aas
das
and
out
sbb
sbb
mov
dec
mov
fnstcw
inc
pop
and
stc
ja
lahf
sbb
std
shlb
lret
xchg
xlat
fisubs
xor
push
outsb
cmp
mov
mov
push
das
or
mov
push
outsl
sahf
cmc
in
mov
lods
mov
scas
jnp
outsl
sub
lret
popa
inc
push
sub
mov
rorb
orb
jo
cmc
aam
lock
mov
sbb
shlb
jecxz
mov
adcb
sbb
cmp
subb
frstor
sub
lcall
fisttps
mov
sbb
or
sti
pusha
lds
stc
push
xor
jo
ret
mov
adc
inc
enter
test
jmp
inc
dec
xchg
lret
aam
xchg
fisubrs
sub
sarl
jo
dec
xor
pop
jbe
xor
push
mov
jns
mov
fstl
jbe
jmp
pop
and
adc
lcall
lahf
cmp
cld
xchg
std
push
jmp
in
dec
in
dec
scas
dec
test
push
daa
iret
in
xchg
push
cmp
test
xlat
daa
mov
insb
xlat
imul
sub
pop
inc
call
adc
sbb
or
sub
in
dec
rcrl
mov
jnp
popf
pop
push
mov
lods
and
adc
add
mov
push
aaa
sub
pop
roll
cld
cmp
mov
push
cmp
lcall
push
mov
xchg
pop
mov
scas
xchg
push
jmp
in
mov
sbb
popa
dec
add
xchg
imul
jmp
jle
iret
or
jecxz
cmp
test
aas
in
ss
gs
fsubs
inc
icebp
xchg
dec
and
nop
cmp
dec
pop
cmpsl
adc
xchg
movsl
dec
inc
jno,pt
les
inc
jb
arpl
xlat
dec
cmp
adc
add
mov
cmp
aad
arpl
sbbb
add
fbstp
in
mov
lahf
outsl
sub
and
ret
sub
ret
movsl
push
rol
aam
add
imul
addr16
mov
inc
sbb
daa
mov
dec
xor
jmp
mov
enter
cmc
jge
xchg
xlat
xor
sub
loop
movl
jge
stos
add
push
rol
and
nop
sti
leave
cli
inc
mov
inc
mov
test
mov
jge
jg
mov
mov
lods
movsl
fstps
lods
xor
ljmp
lods
hlt
hlt
push
xchg
mov
cmp
dec
sbb
add
pop
test
xlat
lcall
push
and
push
js
stc
mov
lret
aam
addr16
int3
push
xor
or
inc
mov
push
push
mov
stos
std
movsb
call
xchg
call
sbb
fstp
cmc
add
push
and
dec
popa
fcoml
insb
adcl
add
imul
ret
je
int3
adc
xchg
icebp
fdecstp
fcomps
cmp
stos
or
mov
sub
pop
lret
jae
rcrl
and
push
ret
test
out
jge
divl
cmc
insb
pop
popa
sti
sbb
inc
mov
mov
lea
movsb
int3
add
pop
cmpsl
xor
loopne
ljmp
and
push
loope
shlb
mov
inc
aaa
push
pop
in
ficoms
mov
jmp
pop
aam
mov
pusha
insb
in
out
pushf
lret
jg
inc
push
cmc
push
adc
cmp
ss
xlat
mov
dec
incb
or
int
or
or
andb
scas
aas
cs
xchg
mov
sti
mov
inc
sub
outsl
jl
pop
ja
sub
daa
dec
imul
pop
xorb
cmpb
mov
cmpsb
iret
pop
mov
mov
mov
imul
ret
stc
arpl
adc
popa
sub
int3
xor
imul
imul
dec
jmp
scas
call
adc
lcall
xor
adc
push
loopne
leave
mov
jle
mov
add
pop
wrmsr
mov
sbb
cmpl
int
jns
pop
pop
or
aas
xor
mov
cmp
out
rol
sarl
jae
popa
lods
arpl
ds
into
mov
cmpsl
inc
loope
inc
dec
cmp
filds
xchg
loopne
sbbl
jl
flds
cs
stos
pop
repz
and
push
lret
lret
jne
in
lock
pop
fsub
sahf
mov
jno
xchg
fdivp
inc
sub
xchg
decl
push
dec
daa
pop
cmp
jb
rorb
lea
mov
pop
and
or
out
mov
cmp
xor
pop
mov
mov
es
notb
adc
push
pop
sti
fnstsw
mov
jg
repnz
hlt
mov
out
push
and
and
push
pop
xlat
jmp
mov
push
and
inc
jge
or
call
pop
cmp
rcl
popa
adc
nop
push
adc
adc
test
push
aam
dec
cmc
push
jns
jne
ljmp
int
shlb
insl
daa
mov
pop
jle
xchg
adc
push
pop
pop
pop
or
fcompl
cli
pop
adcl
adc
mov
jmp
popf
aas
fs
dec
mov
fistpll
cmpsl
scas
push
push
addr16
in
xchg
repnz
adc
or
add
movsb
push
xchg
aam
mov
pop
dec
mov
xchg
jg
js
push
jae
jns
divl
fnstcw
mov
aad
inc
popa
mov
dec
flds
bound
adc
stos
cs
inc
adc
outsl
loopne
enter
push
ret
enter
pop
outsb
ds
mov
mov
mov
xor
mov
adc
inc
fimuls
movnti
cwtl
bound
inc
pop
adc
jge
xchg
add
sub
icebp
push
cmpsl
cltd
dec
out
inc
into
mov
jg
cmpsl
xchg
cmp
jecxz
pop
mov
lahf
xchg
sbb
rolb
xor
jno
in
jp
out
push
test
jg
and
push
ss
dec
add
out
pushf
mov
aad
test
cmp
lods
jmp
sbb
jmp
cwtl
nop
inc
inc
mov
mov
xor
jle
push
shl
jae
or
loop
push
cmp
imul
fcoms
adc
into
ljmp
adc
bound
sbb
lock
inc
pop
fdivs
dec
nop
stos
cmpsl
outsb
rolb
repz
mov
mov
adc
lret
push
adcl
out
or
lods
or
shlb
cs
push
jae
or
jne
scas
pusha
and
sbb
lds
jo
or
std
mov
pop
cld
sbb
add
mov
xor
pop
ficompl
aas
cltd
sbb
cli
jo
out
inc
dec
mov
stc
push
aam
cld
scas
xchg
or
imul
fnstcw
pop
cli
jecxz
cmp
sbb
dec
mov
xor
push
or
push
lea
mov
in
call
aad
sti
call
jmp
jl
in
sahf
mov
popa
push
stos
insl
push
mov
sub
and
mov
rcrl
imul
aaa
int3
or
xor
cmp
mov
lods
adcl
outsl
lods
and
stc
jne
imul
inc
insb
sub
pop
mov
cmp
fcompl
cmp
in
add
push
jae
dec
jo
shr
xchg
and
lret
cmp
jmp
or
out
shrl
js
addr16
xchg
fistpll
sbb
cmc
je
shrd
xorl
mov
das
mov
jecxz
cmp
inc
lret
sub
jbe
jg
dec
ret
mov
sbb
loop
pop
pop
addr16
mov
jecxz
fidivrl
lock
mov
fs
sbb
mov
xor
inc
cwtl
pushf
das
lods
nop
neg
cmpsb
jno
in
add
lret
int3
xlat
adc
pop
jmp
scas
pop
ffree
mov
rolb
ljmp
xchg
inc
xor
sub
sub
iret
xchg
fwait
insl
push
sbb
aad
mul
addr16
push
sub
cmp
cmp
jmp
pop
xchg
or
lret
mov
xchg
jo
add
jg
add
push
or
iret
mov
call
outsb
test
fs
pop
xchg
mov
dec
imul
inc
mov
push
dec
js
lcall
dec
inc
aam
sub
loop
das
adc
pop
lcall
repnz
mov
jmp
out
into
loop
cli
push
lcall
es
xchg
pop
lret
adc
movsb
cld
clc
mov
dec
xor
dec
repz
dec
jl
std
andb
fnstsw
aad
rol
mov
and
dec
mov
aaa
mov
sub
push
lret
test
lret
xchg
cmp
xorb
inc
imul
sbb
jl
movsl
xlat
adc
pop
loopne
divb
mov
lret
arpl
cmp
mov
ret
test
ss
das
lock
sahf
sbb
ror
adc
pop
mov
inc
nop
xor
pop
push
pop
or
fidivl
add
xchg
adc
lret
xor
stos
lock
enter
aam
cld
push
cmp
sbb
mov
pop
outsl
out
mov
fwait
or
inc
mov
imul
xor
lcall
adc
int3
mov
adc
arpl
into
jnp
push
add
mov
pop
addl
fwait
lea
jb
push
in
mov
cltd
or
xchg
shlb
mov
pop
movsl
arpl
inc
repnz
adc
mov
sbb
lea
popa
xlat
flds
fstp
fadds
cmp
jecxz
jmp
cmp
sbbb
mov
in
and
out
lods
scas
mov
jl
push
lods
loopne
and
jge
sbb
mov
popa
mov
inc
lock
fwait
arpl
mov
fucomip
push
in
into
mov
sbb
scas
pushf
dec
xchg
and
lods
lods
outsb
mov
mov
mov
adc
stos
mov
adc
sub
lahf
sbb
insb
cltd
jg
push
mov
or
mov
inc
jbe
jnp
mov
sti
pop
push
xchg
ret
xor
xchg
movl
mov
cmp
popl
rol
outsl
sti
inc
aad
add
sbb
pop
lret
test
stos
cmp
push
pop
test
push
clc
gs
es
rcll
je
aam
cltd
xchg
adc
fwait
dec
and
hlt
mov
sub
ficoml
xchg
shll
xchg
stos
data16
and
push
popw
aad
sbb
push
sbb
pop
mov
cmp
jp
ret
dec
xor
orl
mov
cmpsb
mov
repz
sub
jb
sub
shlb
scas
or
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
cmp
mov
push
addl
xchg
out
push
or
push
popf
fldt
or
mov
push
mov
sbb
sub
test
filds
out
adc
scas
cbtw
int3
mov
clc
adc
movsb
push
dec
out
xchg
in
imul
rclb
jl
xor
inc
xor
insb
stc
or
stos
sbb
jnp
pusha
push
xchg
mov
jle
inc
icebp
pop
outsl
lret
adc
call
mov
stos
loopne
shll
xor
jb
insl
test
mov
lds
push
sub
xchg
leave
es
xor
roll
fildl
repz
dec
xor
notl
scas
xor
test
or
ljmp
pusha
mov
orb
push
imul
mov
pop
in
and
sarl
cmp
adc
dec
and
divl
and
and
xor
aas
lods
sbb
lock
xor
sbb
push
or
push
push
add
test
sbb
js
cmp
in
cmc
cmpb
dec
insl
pop
jp
fmuls
fdivrs
stc
and
inc
push
inc
fmull
cmp
inc
adc
in
jp
ret
out
orb
add
jae
pop
in
sbb
imul
xchg
ffreep
mov
xor
xor
fwait
pop
mov
cltd
add
xchg
arpl
or
lahf
iret
mov
ret
inc
adc
or
bnd
pop
dec
pop
mov
cmpsl
sbb
pop
popa
xchg
adc
int3
das
mov
dec
mov
dec
or
fs
xchg
inc
sbb
aas
call
and
loop
sbb
rcrb
mov
out
addr16
loop
mov
lods
dec
xchg
mov
lea
push
repz
imulb
rcll
and
dec
icebp
into
shlb
notb
mov
gs
jg
repnz
js
sub
push
addr16
push
sti
lods
stos
fldenv
stos
fsubp
xchg
pop
sbb
mov
rcll
inc
sub
add
push
ret
js
cmp
jbe
or
repnz
adc
dec
bound
mov
dec
cltd
fiaddl
rcrl
or
cmp
cli
rcrb
std
fisubs
pusha
add
mov
in
sub
cs
negl
jmp
lock
mov
jnp
cmp
hlt
das
leave
jnp
or
xor
ds
xlat
sbb
add
popf
iret
pop
es
xchg
movsb
or
cmpsl
mov
push
xchg
cmpsl
add
test
lsl
fistpl
add
loop
ret
les
xchg
fsubrs
xor
mov
jge
sbb
addl
pop
jecxz
xchg
dec
sub
mov
dec
and
inc
inc
mov
cmpsb
outsl
or
sbb
pop
sti
icebp
js
fcmovb
in
mov
sub
push
dec
lahf
ljmp
notl
sbb
call
fdivs
mov
jg
lods
ljmp
or
addb
aam
xor
pop
lock
mov
out
ja
add
lahf
lds
int3
add
inc
sbb
xor
pop
lcall
adc
movsl
imul
std
push
adcl
loope
cmc
js
add
test
hlt
mov
mov
pop
sbb
cld
cltd
popa
fwait
daa
dec
xchg
or
dec
loopne
ror
call
push
xlat
repz
ret
pop
enter
xor
xchg
out
mov
cli
xchg
fdivs
or
push
jp
mov
jnp
xchg
lock
and
xor
cmp
push
incb
aad
mov
jb
jnp
jge
cmc
lret
fldl
sub
leave
cwtl
hlt
call
or
or
adc
test
daa
and
pushf
insl
xorl
pop
jl
pop
in
cli
cmp
sub
and
incb
cmpsb
rclb
jne
cld
and
sbb
std
sub
lret
and
daa
lahf
adc
and
pop
sbb
shl
in
fdivl
mov
repz
adcb
popf
mov
movsl
int3
jnp
or
inc
iret
rorb
pop
ljmp
fistpl
mov
ret
xchg
xlat
insb
inc
fistpl
lock
dec
rcrb
fsubs
pop
mov
xchg
or
sbb
and
sbb
jo
or
lahf
ret
lock
fsubrl
push
cmp
jae
mov
in
cmc
lock
insl
les
lret
ret
sbb
push
fsub
pusha
movsb
in
insb
push
push
nop
or
fcmove
clc
push
adc
add
xor
jb
jl
cmp
push
push
fcompl
inc
sub
fldl
daa
stos
lcall
add
jmp
push
pop
lock
dec
pop
jp
adc
mov
scas
mov
mov
inc
arpl
cmp
cmpsb
cmp
xchg
cmc
aas
outsl
insl
jns
inc
sub
popf
out
jno
xorb
xor
aaa
cmc
ror
clc
dec
xchg
pop
xchg
xor
and
je
cmp
dec
aam
popf
arpl
dec
ja
sub
xchg
jl
push
lds
cmp
fcmovnb
fidivl
and
sub
in
cmp
jbe
or
push
pop
push
xor
xor
mov
insl
xchg
out
ss
add
cmp
out
mov
or
scas
ss
mov
xorb
in
je
cwtl
ljmp
jae
and
mov
mov
loopne
mov
testl
ret
lds
pop
stos
lods
dec
jbe
mov
pop
shlb
cmp
or
in
cmp
inc
es
and
cmp
lods
stos
and
mov
fdiv
in
mov
loop
cli
cs
shl
ret
inc
cwtl
pop
jge
cmp
sub
dec
mov
ret
scas
fsub
orl
xor
test
decb
mov
fcmovnu
pop
ficompl
cli
hlt
jns
insl
ret
add
fcomps
push
sub
sbb
pop
dec
xlat
cmpsl
ds
sbb
ss
jle
mov
icebp
mov
mov
add
and
push
pop
pop
mov
jmp
xchg
mov
fs
push
pop
push
in
jo
call
cmpl
std
cmpsl
add
cmpsl
pop
test
add
cli
aad
dec
inc
ret
insl
arpl
jno
add
fcmovnu
out
mov
movsb
push
js
mov
adc
scas
in
fs
ja
dec
jmp
stos
pop
dec
lea
push
pop
xchg
xchg
jno
cmp
mov
lds
adc
hlt
lods
pop
aas
out
adc
inc
es
mov
dec
cmpl
inc
ret
xchg
xor
in
mov
daa
push
ds
outsb
lret
lods
sub
shr
repnz
inc
sub
pop
pop
xchg
adc
dec
cmc
inc
mov
or
shr
and
loopne
inc
hlt
negl
jae
xchg
test
mov
adc
mov
addr16
push
push
in
std
ljmp
adc
mov
ret
inc
sbb
aam
lds
ss
lahf
shll
sbb
xchg
mov
je
fwait
dec
out
xchg
imul
and
push
daa
mov
les
or
sahf
xchg
xor
mov
inc
pop
test
sub
shrl
ficoml
sahf
orl
daa
mov
pushl
repnz
inc
xchg
in
sub
push
scas
jecxz
adc
push
adcl
decb
push
xor
cld
out
fsubrl
repz
aad
sbb
xor
mov
mov
lods
or
xchg
jle
jle
lcall
sbb
mov
push
cmp
out
movsb
popf
and
movsb
push
jnp
xchg
popa
popf
cs
and
mov
mov
cmp
dec
popa
adc
imul
xchg
je
jae
notl
add
dec
pop
lcall
data16
xchg
xchg
push
inc
mov
dec
mov
mov
jp
dec
dec
repz
pusha
call
mov
sub
ret
xor
pause
iret
mov
mov
pop
mov
dec
adc
mov
sub
shrl
mov
lock
or
rorb
mov
loope
out
cld
or
mov
rcrl
jge
inc
jmp
xor
sub
xor
loope
lahf
dec
loop
rorb
inc
jae
cmc
stos
out
mov
jne
sub
repz
lea
jb
push
stos
fwait
push
fldt
out
sub
das
movsb
sahf
add
frstor
mov
xchg
sarb
cmpsl
adc
ds
xacquire
inc
push
add
mov
mov
jmp
pop
aam
mov
loope
inc
data16
push
cmp
fs
movlpd
adc
pop
cmp
lret
jmp
xor
bound
mov
xorb
push
stc
aam
mov
push
cmpl
jp
ds
sub
stos
fcmovne
mov
shlb
out
add
fldt
push
dec
cmpsb
sbb
sbb
xor
scas
movsb
jno
mov
out
push
sahf
xorl
fists
sbb
adc
scas
mov
int
lahf
adc
fs
lods
data16
inc
rcll
adc
lock
dec
mov
dec
stos
jp
jae
sub
push
dec
jne
or
inc
pushf
jae
add
jmp
cmc
pop
xchg
sub
dec
scas
push
adc
mov
rcl
dec
out
fcmovnbe
insb
int3
adc
pop
push
xchg
negl
pop
jg
fdecstp
cs
sub
dec
sub
xor
mov
cld
inc
loope
mov
iret
add
cmpsb
aam
pop
mov
pop
sbb
into
sbb
push
cwtl
push
icebp
sub
add
jmp
mov
shrb
pop
cmpsb
push
or
pop
lret
inc
jl
jno
add
sbb
push
rol
mov
push
push
rcrb
fs
push
pop
cmp
lret
mov
ljmp
in
sub
add
mov
sbb
movsl
push
cmp
arpl
hlt
enter
popa
push
pop
repnz
fists
lea
inc
out
stc
out
add
stc
gs
pop
pop
lahf
sub
dec
addps
popf
push
lock
sub
and
imul
addr16
jmp
sub
shlb
in
in
cmp
xchg
imul
mov
lea
jle
fwait
push
imul
adc
cli
cli
xchg
cmp
fwait
mov
pop
pop
ja
mov
cltd
addr16
push
pop
adc
data16
xor
push
stos
daa
adc
dec
jo
cmpsl
xlat
fwait
aas
sbb
mov
clc
lea
fbstp
cs
lahf
test
and
repz
popa
jecxz
and
or
pushf
pop
sbb
pop
cld
leave
or
xlat
sbb
js
push
push
dec
call
adc
fsin
xchg
rcrb
push
roll
idivb
mov
pop
jnp
stos
adc
mov
sub
dec
mov
shl
xlat
jne
xchg
sbbl
pop
out
xchg
outsl
lcall
mov
lret
jns
xor
sbb
inc
mov
push
jg
pop
and
inc
push
mov
jo
and
pop
sub
adc
imul
cmpsb
fs
inc
pop
cmpsl
ja
jl
lret
push
jbe
mov
and
lock
jp
xor
xchg
ja
jl
stos
add
inc
sbb
or
stc
jno
orb
mov
xor
sub
push
xchg
add
mov
or
mov
jge
mov
aad
pop
pop
in
pushf
arpl
movsb
int
test
inc
test
aaa
or
cmp
lahf
rorb
push
jecxz
inc
sbb
test
jmp
test
dec
ficoms
cltd
inc
xchg
pop
jge
add
pop
xor
pop
stos
in
fwait
pop
ss
inc
jge
rclb
jp
push
in
leave
daa
sbb
rorl
cli
add
outsb
dec
sub
or
dec
jne
lea
aaa
dec
push
sub
dec
push
fnstenv
jmp
pusha
es
call
popa
sub
dec
leave
jl
lahf
pop
in
frstor
sbb
ret
adcl
mov
int
mov
in
out
mov
add
adc
into
fbstp
daa
mov
gs
negl
stc
jl
sbb
or
mov
push
xchg
cli
loopne
cmp
andl
inc
cli
dec
push
incl
push
or
push
sub
pop
testl
push
mov
pop
pop
inc
stos
testl
rorb
xor
jbe
mov
mov
pop
sub
jns
enter
pusha
mov
xchg
pop
or
cmpsb
cli
movsl
mov
inc
repnz
adc
cmp
unpcklps
or
lret
lcall
pop
dec
dec
dec
in
jecxz
mov
inc
sbb
nop
mov
popf
add
jb
cmp
in
cltd
sub
in
mov
aas
in
cmpsb
push
cld
leave
lock
sbb
shl
jo
cmp
adc
jae
xor
int
inc
jge
fisubl
and
lcall
cmp
jecxz
jae
and
mov
jp
cmc
sub
out
insl
pop
sub
negb
and
je
jecxz
js
loopne
scas
out
xchg
je
cmp
rcrl
popa
ds
mov
push
sbb
in
cmc
cmc
das
and
insb
into
push
push
in
xchg
or
nop
or
mov
cmc
jb
jo
sub
sbb
xchg
adc
sahf
mov
or
pop
lds
cmpsl
arpl
lock
out
and
mov
sbb
mov
decb
pop
clc
mov
imul
lret
add
shll
mov
bound
loop
push
mov
push
stos
cltd
iret
sarb
mov
cmp
lods
int3
jmp
xor
pop
push
addl
daa
adc
lahf
dec
js
cltd
rclb
mov
push
xchg
xor
jg
dec
jbe
stos
scas
mov
pop
push
mov
popa
push
xor
insl
dec
popf
test
jecxz
test
ja
iret
jg
outsl
lds
inc
pop
adc
or
pushf
inc
pop
js
inc
int
mov
test
push
mov
shrl
mov
std
jno
scas
mov
icebp
push
pop
cmp
je
cmc
aas
stos
push
and
into
sbb
pop
sub
push
cmc
lds
cmp
mov
rorl
cmpsl
in
mov
fiadds
aad
push
xor
clc
imul
adc
push
mov
popf
stos
imul
out
popa
xorb
mov
ljmp
fwait
decb
lahf
cmp
test
jge
mov
out
jp
stos
cmc
repnz
loopne
iret
dec
call
in
lods
push
mov
add
mov
icebp
iret
cmp
aad
and
mov
std
jecxz
push
dec
inc
arpl
movsb
pop
roll
cmpsl
movsb
aad
sbb
leave
hlt
dec
ret
xchg
test
mov
inc
hlt
test
movsb
aam
jl
xchg
jecxz
ret
out
xchg
dec
dec
jp
mov
pusha
push
add
int
inc
and
call
push
in
inc
xchg
popf
xorl
push
test
xor
push
ret
stos
subl
in
cmp
fisubl
jb
push
jmp
xor
es
push
out
bound
jge
inc
push
ljmp
lock
roll
sti
adc
nop
je
and
or
dec
xchg
incb
hlt
dec
inc
or
iret
mov
and
into
repz
insb
mov
fisubs
pop
out
fmull
and
je
rcl
in
loop
sub
lret
mov
sbb
aaa
dec
and
aad
scas
pusha
mov
pop
dec
shlb
push
inc
adc
inc
out
jmp
or
les
add
jne
inc
cmp
pushf
ljmp
or
jmp
stc
js
mov
mov
test
jecxz
shrb
push
push
sub
scas
loopne
outsb
and
mov
push
push
or
inc
mov
test
negb
xchg
mov
sub
adc
f2xm1
fwait
or
insb
insb
or
out
push
icebp
ret
fstl
stc
mov
inc
add
mov
push
push
push
jle
add
cmc
ss
lret
dec
bound
aas
es
loopne
mov
dec
or
call
stos
cmpb
fcompl
add
call
test
mov
out
dec
iret
or
nop
jg
xchg
sti
inc
jg
dec
inc
sbb
out
jle
pop
pop
fs
test
and
loope
hlt
push
push
push
xchg
or
cmpsl
mov
dec
and
rorb
mov
dec
push
xchg
cmp
pop
xor
jl
les
jnp
pop
add
jae
fdivs
add
xchg
outsb
mov
inc
and
add
push
fsubl
outsb
addr16
dec
push
cltd
push
cmpsb
mov
stc
imull
mov
mov
xor
push
xchg
fwait
movsb
orl
gs
movsl
pop
addr16
add
cmp
and
jb
pop
andl
adc
xor
push
rcrb
pop
mull
xor
dec
dec
cltd
js
or
cmp
adc
test
imul
not
mov
jne
loopne
hlt
insl
lcall
lret
aad
sub
outsl
ljmp
push
shll
sub
rolb
push
push
int
mov
xchg
mov
in
add
testl
jmp
adc
repz
dec
mov
insl
daa
mov
jmp
or
mov
xchg
inc
in
pop
mov
fidivrl
lahf
add
dec
mov
mov
aad
or
popf
out
push
mov
lods
push
call
subb
cld
pop
mov
testb
std
outsb
imull
pop
and
sbb
pop
loope
add
add
sbb
jmp
sbb
sub
inc
sbb
scas
nopl
das
lods
jp
sbb
jns
mov
adc
outsb
les
push
rorl
add
or
or
cmc
js
aaa
scas
outsb
add
sbbl
sub
sub
shlb
scas
lods
imul
pop
test
mov
sub
add
ja
pop
lock
adc
xor
jmp
jbe
mov
or
imul
and
jno
arpl
mov
outsl
adc
sti
or
insl
sbb
inc
mov
inc
mov
add
fdivl
ss
xor
outsb
int
add
mov
in
or
xlat
icebp
mov
adc
jge
cmp
mov
xchg
xchg
ret
sbb
push
out
jne
xchg
xchg
pop
addr16
dec
int
loop
sbb
sarb
push
mov
stc
ljmp
cmpsl
out
cmpsl
xor
jnp
in
jnp
adc
aad
in
and
stc
stc
inc
test
push
sub
sarb
mov
cs
mov
fdiv
inc
lea
cmp
incb
pop
fisttpll
sbb
notb
push
inc
inc
mov
xchg
or
cmp
rclb
inc
out
push
sbb
sbb
lcall
dec
adc
cmp
xchg
add
cld
fsubl
dec
icebp
xor
or
frstor
outsb
or
mov
sub
leave
pushf
xchg
lahf
or
mov
pushl
sub
lcall
mov
into
shrb
xor
movsw
int3
cmp
lret
aaa
push
lret
mov
jp
bound
or
and
lcall
shll
repz
lahf
mov
mov
sbb
cmp
pop
adc
in
xchg
cmp
aas
dec
sub
cmc
push
cmc
shrl
popa
cmovnp
adc
scas
jecxz
adcb
pop
mov
out
test
push
inc
xchg
jo
pop
push
inc
adc
jno
shll
and
sub
inc
insb
mov
addr16
insl
fdivrp
inc
sub
in
push
mov
rcl
shll
sarb
cmp
insl
sbb
cmpsl
pop
fimull
fldenv
in
ret
jns
leave
jo
push
ja
cmpsl
push
sbb
inc
or
adc
into
roll
negb
jb
cmp
mov
lock
fisubs
inc
aam
sub
les
push
pop
pusha
push
mov
shll
sahf
mov
xchg
jbe
dec
insb
decb
mov
cmp
jl
mov
xchg
jmp
dec
in
stos
ret
adcl
js
mov
aam
adc
stc
push
mov
fildl
loopne
mov
mov
repz
push
mov
or
test
adc
mov
inc
call
dec
lods
mov
or
movsl
sbbb
jno
mov
js
aam
mov
mov
xor
fistpl
fcmovb
sahf
sbbb
in
adc
adc
sbb
or
rcll
jno
popf
xlat
es
fbstp
cmp
xchg
adc
loop
mov
mov
adc
int3
or
in
or
mov
leave
or
int3
push
sub
push
imul
ds
popf
and
jle
dec
xor
rorb
in
add
cmpsl
and
push
mov
dec
sahf
xor
and
std
sbbl
xor
mov
xor
fcoml
pop
ss
mov
mov
lret
inc
push
adc
dec
into
add
sbb
mov
sbb
test
push
dec
mov
sahf
dec
call
lea
iret
mov
mov
or
mov
xor
adc
sti
adc
sub
hlt
mov
add
popf
sub
aas
push
xchg
sbb
mov
and
in
xor
cwtl
mov
icebp
inc
xor
adc
int
sbb
or
es
sub
adc
xor
or
ret
xor
mov
fsts
aaa
xor
cmp
fistpll
call
fwait
test
mov
jp
mov
jecxz
mov
inc
rorb
stos
lds
js
push
cmpsb
jnp
lret
inc
roll
shl
ret
ret
lods
and
dec
cmp
inc
enter
inc
inc
test
push
dec
or
lret
inc
movsb
icebp
or
mov
xchg
push
and
inc
pop
jl
in
pop
ss
sub
sub
mov
cmp
mov
or
outsl
or
daa
nop
loopne
xchg
adc
mov
idiv
xchg
or
xor
sbb
mov
mov
dec
sahf
orl
mov
insl
add
orl
lcallw
xchg
out
inc
mov
lds
jbe
gs
mov
mov
sti
jne
xchg
cmp
pusha
inc
inc
xchg
push
in
adc
test
lea
lret
jns
jle
enter
leave
rcrb
aas
jb
ficomps
pop
lahf
inc
inc
daa
cmp
int3
pop
into
lods
int3
dec
pop
sbb
dec
in
int3
dec
mov
aas
lret
imull
cli
sbb
jmp
sub
cmp
add
sbb
sub
lret
idivb
loopne
ja
and
jbe
lcall
test
mov
addr16
mov
push
cli
shll
adc
pop
mov
pop
add
pop
imul
mov
jmp
repnz
dec
sub
lahf
push
bnd
ja
outsb
adc
mov
cmp
adc
push
pusha
xchg
leave
cmp
mov
negl
mov
add
mov
jbe
jbe
xchg
repz
xor
pop
xchg
repz
sub
les
aad
rcll
and
std
pop
fnstcw
dec
out
adc
dec
int
xchg
aas
lahf
or
dec
and
movsb
mov
std
mov
gs
jnp
test
mov
and
std
imul
sti
aad
sarb
and
loop
xchg
dec
hlt
hlt
add
or
cli
add
and
test
sub
shll
mov
push
je
cmpsb
jno
gs
test
add
repz
mov
das
xor
dec
mov
fsubrl
dec
push
mov
push
sbb
loop
adc
push
mov
and
xchg
mov
dec
mov
lcall
jl
and
adcl
sbb
jns
push
addr16
icebp
cmp
push
fsubp
mov
adcl
jmp
mov
xor
ljmp
mov
pop
pop
aas
ss
sbb
push
or
cmp
in
sub
fnsave
cs
cmp
xor
pop
mov
popa
ss
movsl
or
insl
imul
mov
dec
xor
dec
fisubl
stos
push
fistps
push
ret
pusha
mov
arpl
call
rcrb
adc
mov
inc
aam
std
fadd
test
mov
jle
adc
jb
out
sub
lods
xor
pop
test
in
dec
mov
cli
popa
lret
psrlw
dec
pop
out
movsl
call
push
test
negb
sti
aam
cmp
test
in
mov
pop
jp
mov
push
pushf
xor
fwait
push
mov
adc
movsl
sbb
imul
inc
in
lret
add
jl
sub
sbb
mov
out
dec
ss
movsl
shrb
les
es
pop
mov
xor
ljmp
jnp
xchg
mov
sbb
jmp
fisttpll
sti
mov
mov
xor
fwait
dec
pop
les
xchg
sbb
lret
cmpsl
mov
push
and
adc
outsb
scas
pop
xor
sub
push
insl
mov
dec
fisttpl
add
push
icebp
mov
lods
int
push
pop
adc
mov
mov
xchg
or
cli
sub
in
fdiv
rorl
lds
dec
jl
mov
lahf
js
es
sub
xor
outsl
ljmp
and
icebp
sbbl
jne
adc
imulb
fcmovne
lods
adc
fs
push
inc
js
or
inc
arpl
pushf
je
dec
sub
push
shlb
dec
scas
lods
xchg
jo
jnp
mov
inc
push
cwtl
rcrb
sarl
cld
scas
xchg
pop
xor
add
out
jge
and
das
dec
push
cmp
cwtl
fldl
pop
inc
std
imul
inc
and
adc
mov
rcll
xchg
mov
pop
mov
adc
push
dec
add
mov
mov
push
push
push
fmuls
mov
jp
dec
add
or
adc
hlt
mov
fbstp
adc
mov
hlt
or
and
xchg
dec
pop
ror
je
in
fnstcw
jne
data16
mov
mov
mov
mov
orb
push
in
jae
pop
adc
cwtl
pop
scas
or
xchg
jbe
in
int3
add
xchg
outsb
in
jecxz
mov
pop
sti
std
popf
int
je
push
mov
std
mov
repnz
rcll
stos
or
or
dec
jb
jo
aam
lcall
xchg
inc
out
loop
mov
jl
dec
out
addb
addr16
test
adc
jl
cmp
out
cli
cmp
bound
add
cmpsl
inc
mov
subl
cltd
mov
pop
popa
xchg
xor
movsb
imul
sbb
pop
je
cmpb
pop
aad
pop
test
inc
jo
xchg
std
push
scas
lret
jne
xchg
pop
dec
std
jb
pop
dec
xchg
xchg
ficoms
adc
fsubrl
or
outsb
andb
jo
mov
dec
mov
or
sub
lahf
mov
loopne
mov
loop
lods
sub
aad
or
and
xchg
sti
add
pop
sbb
sub
push
push
daa
xor
mov
rcll
outsl
add
or
js
dec
cli
test
jl
jmp
jle
addb
in
push
mov
arpl
nop
mov
ret
inc
lods
addr16
adc
movsl
inc
test
aas
fdivrs
xchg
testl
clc
mov
rorl
outsb
add
sbb
addl
push
xor
int3
jne
int3
stc
xlat
sti
pop
lahf
mov
sub
jl
out
sub
popa
shrl
out
scas
xor
jl
in
pop
ss
mov
out
add
sub
out
adc
insb
fwait
cmp
mov
int
xor
xlat
jle
test
outsb
loope
cmp
loope
push
es
pop
fidivrl
arpl
sarb
fs
push
roll
in
mull
ss
dec
movsb
push
mov
cmovbe
cmp
inc
mov
insl
jno
mov
xor
es
xchg
xchg
mov
shl
jge
popf
and
scas
add
test
test
adc
dec
aam
jmp
std
push
or
pop
popf
inc
divb
cs
pop
jp
pop
dec
xor
mov
pop
xchg
mov
popf
mov
jae
sub
das
adc
aad
popa
xchg
pusha
dec
or
or
loope
cmp
imul
lret
or
out
jns
pushf
bound
fistps
xchg
dec
jnp
addr16
aad
bound
mov
or
cwtl
cmpsl
adc
sub
into
rcl
cmpsb
lods
mov
sarb
into
in
imul
lea
out
ljmp
jb
rcll
cld
dec
push
lahf
mov
add
inc
je
cwtl
loope
mov
sbb
mov
dec
mov
xchg
shll
xor
aaa
insl
mov
inc
pushf
aas
inc
aas
fsubl
jae
int3
push
dec
xchg
mov
push
push
push
and
addr16
mov
leave
pushf
mov
xchg
add
test
mov
mov
mov
imul
fdivl
js
fiadds
cmp
mov
daa
pop
cmpsb
adc
cli
mov
xchg
out
mov
mov
hlt
lahf
sub
ljmp
xchg
inc
mov
xor
lcall
jle
xor
nop
inc
outsb
pop
popf
cwtl
pop
dec
fsubl
shr
xor
aas
jb
std
xchg
lds
pop
or
addb
jge
lods
inc
adc
stos
xchg
mov
sti
pop
shll
std
xor
inc
and
out
jmp
aaa
pop
mov
inc
and
mov
xchg
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
pop
in
daa
stc
inc
addb
lods
repz
xor
ljmp
pushf
xchg
push
cmp
in
lods
pop
fs
xchg
jle
mov
push
ja
nop
mov
icebp
inc
test
xchg
xchg
in
inc
jne
pop
jns
sbb
cld
scas
rclb
es
xchg
flds
lret
cwtl
mov
sub
sub
pop
mov
das
or
push
lock
xchg
push
push
icebp
repz
pushf
and
dec
pop
jo
in
adc
sub
xchg
xor
arpl
decb
cmpsl
fcoml
bound
ljmp
movsb
fidivrl
mov
ficomps
rorl
xchg
xor
pushf
jnp
loope
mov
adc
push
aam
iret
push
fcompl
fimull
shlb
lahf
mov
and
and
cmp
mov
dec
aas
pop
sub
dec
xor
jnp
sbb
int
dec
push
pop
ds
imul
sub
add
mov
dec
orl
dec
in
add
mov
stc
pop
aad
ds
sbb
push
mov
xor
repnz
mov
mov
sbb
mov
mov
inc
repnz
roll
fwait
adc
sub
pushf
sub
mov
mov
pop
idivb
test
jns
ret
adc
movsb
push
in
test
in
xor
int3
jle
pop
in
pop
dec
mov
xor
pusha
push
mov
icebp
push
pop
enter
push
fsubrs
jbe
and
add
xchg
pop
arpl
jne
fcompl
mov
push
test
mov
lret
push
inc
dec
pop
hlt
pop
or
imul
adc
mov
sub
adcl
cmp
jge
lret
popa
xor
xchg
adc
dec
sub
push
jmp
shl
inc
push
arpl
sub
cwtl
pop
xchg
outsl
jbe
adc
push
ljmp
ja
rcr
dec
pop
xlat
pavgw
dec
jo
outsb
and
push
pop
jbe
mov
pop
jne
js
xchg
and
mov
loope
pop
movl
leave
pop
out
fnstsw
mov
cmpsl
cmpl
sub
pop
in
lock
test
mov
jo
idivb
js
or
in
test
xchg
decb
outsl
mov
mov
add
mov
xchg
jae
out
orl
into
movsb
mov
shlb
pop
ret
loope
movb
xor
fs
hlt
push
jecxz
data16
push
mov
inc
test
jbe
pop
repnz
cmp
cmp
mov
popf
mov
cmp
inc
sbb
std
leave
or
adc
xchg
or
xchg
lds
sbb
ds
cmpsl
dec
shlb
pop
rcr
push
jl
imul
fistps
push
lods
test
inc
lds
cmp
stos
xchg
les
sub
and
fwait
xor
shrb
cli
int
jg
sbb
xchg
sysexit
push
fdivl
fildl
popf
jmp
and
and
ret
lret
mov
clc
aam
cmp
mov
cmp
lods
andl
jecxz
xchg
jl
ds
aas
mov
sbb
fisubrl
test
sub
aas
xor
mov
or
test
sarb
mov
inc
xor
push
pop
cmp
adc
cmpl
dec
dec
sahf
mov
jb
jecxz
popf
and
int
das
push
mov
repz
out
jge
lahf
fistpl
lods
push
dec
stos
outsl
popf
pop
incb
orb
outsl
mov
aad
fisubs
shrb
jg
and
cli
xorb
stos
jno
ret
xor
addr16
out
outsb
daa
lcall
and
inc
push
out
and
into
mull
icebp
stos
das
sub
jle
repz
xchg
adcb
lods
dec
mov
or
sbb
jecxz
adc
stc
cmp
and
xchg
addb
fmull
insl
in
xlat
test
iret
mov
push
ret
mov
sbb
mov
dec
cmpsl
pop
cmp
xchg
sub
cmpsb
add
sub
pop
lea
out
adc
popf
xchg
outsb
nop
mov
daa
and
push
mov
ljmp
jo
rcrb
mov
push
adc
popa
inc
addr16
cmp
xchg
xchg
xchg
fdiv
push
cli
popf
add
shl
adc
test
or
mov
outsb
ds
loop
test
imul
sub
sub
jns
insl
int
insb
cmp
push
dec
mov
sbb
jb
xchg
mov
sub
dec
shrl
ds
sbb
in
xchg
repz
and
pop
imul
add
or
adc
ret
aad
push
mov
mov
clc
shl
inc
lcall
aaa
mov
mov
sti
ret
test
call
in
pop
mov
fnsave
dec
cmc
jg
mov
jae
jp
dec
xchg
scas
cmp
mov
lcall
mov
jno
leave
xchg
mov
aad
fwait
shl
iret
jb
int
inc
fwait
mov
dec
pop
ret
popa
cmp
out
pop
paddsw
jecxz
xor
jl
push
leave
lcall
aaa
testl
jecxz
push
pop
pop
xor
mov
mov
sub
mov
pop
add
imul
jmp
ret
mov
push
mov
push
loop
rcll
shrb
pop
stos
rorb
shl
mull
in
fldcw
cmp
shr
sub
mov
push
mov
roll
popf
add
cmpsl
inc
adc
push
scas
cmp
dec
repz
fidivl
mull
lcall
cli
cmp
push
cli
mov
inc
jmp
sub
out
roll
xchg
pop
aas
inc
mov
lds
fldcw
sbb
loop
enter
or
fisubrs
sbbl
mov
inc
dec
mov
inc
imul
faddl
arpl
jbe
iret
mov
pop
fucomip
ret
and
clc
or
jb
xchg
in
push
test
subb
aad
std
mov
in
push
sub
adc
aad
jno
aaa
loop
mov
adc
loopne
mov
out
push
leave
lds
pop
inc
add
xchg
sbb
sub
cld
fwait
adc
and
and
filds
mov
aad
pop
js
stc
pop
leave
ljmp
inc
cld
imul
repz
jns
push
aam
pushw
jb
sbb
imul
div
movsl
jg
and
dec
int
jmp
fcmovb
je
mov
push
shr
mov
clc
pop
ret
sub
push
es
out
or
ljmp
repnz
fildl
sbb
pop
and
mov
fs
cmp
out
jnp
push
jb
xor
fildll
xchg
cmpsb
sti
aam
inc
dec
repz
aam
or
xchg
sbb
lods
adc
out
imul
ficoms
shll
nop
inc
iret
loop
cmc
lods
rorl
stos
popa
mov
add
fs
pop
cmpsl
xchg
stos
loope
fsubl
xchg
test
cs
xor
nop
fists
fmul
gs
arpl
mov
jmp
rolb
cmpsl
movsl
add
dec
les
push
sbb
push
icebp
mov
mov
in
out
cwtl
repz
popf
stos
je
out
xor
mov
aas
mov
inc
lds
fsubl
sbb
roll
pop
in
dec
popf
movsb
cmpl
scas
mov
jmp
inc
push
sbb
pop
mov
jbe
mov
shlb
dec
xchg
gs
bound
sahf
xchg
adc
pop
gs
mov
das
les
jae
jg
rep
mov
or
pop
cld
mov
jae
adcl
add
sbb
pop
cmp
popf
ret
mov
and
mov
cmp
or
sahf
xchg
inc
or
inc
push
lods
jp
push
ja
mov
orl
sbb
pop
mov
into
subb
mov
lock
jl
add
mov
in
out
inc
cld
push
pop
cmc
dec
jae
cli
mov
dec
pop
cmp
es
jns
insb
sbb
add
jecxz
jle
push
xor
and
add
out
push
jl
mov
mov
push
inc
add
insl
scas
sub
ret
scas
adc
test
jns
into
bound
xor
loop
sbb
or
jb
jne
pop
idivb
cmc
dec
adc
push
movsb
das
ljmp
and
sub
mov
hlt
adc
cmpsb
xchg
aaa
xchg
test
xchg
jg
mov
mov
jl
scas
mov
data16
cmp
outsb
cld
push
fldenv
cmp
inc
pop
ret
sub
and
inc
js
cs
xor
pop
ds
add
mov
jecxz
and
iret
dec
sbb
test
test
stos
or
cmpsb
dec
pusha
adc
roll
int
push
sbb
rcr
cmp
mov
test
lods
mov
push
into
jbe
xchg
mov
mov
arpl
xor
xchg
jle
jl
and
imull
or
jl
lods
push
dec
jl
shl
loopne
es
outsl
mov
clc
daa
scas
jmp
popf
mov
fs
cltd
jmp
jo
repz
adc
popa
mov
mov
jnp
cltd
imul
scas
push
bound
loope
inc
cmp
or
push
popa
aam
mov
test
mov
jl
push
mov
cmp
rol
sub
xlat
hlt
mov
mov
fnstcw
outsb
ret
mov
sarl
scas
cld
xchg
lret
adc
dec
xchg
in
scas
pop
pop
and
xchg
adc
sub
mov
loopne
sbb
inc
test
or
cs
test
imul
leave
outsb
call
xchg
mov
js
inc
add
push
inc
pop
cmc
add
cli
mov
nop
pop
call
stos
aam
pop
in
add
cmpsl
fisubs
pop
gs
xor
fmull
mov
in
repz
scas
pop
or
push
mov
into
pop
pop
xchg
dec
xor
push
pop
in
xchg
cmpb
mov
jbe
or
movsb
push
sti
lret
or
das
mov
fstpl
adc
or
mov
dec
sarl
popa
in
sbbl
jle
xcrypt-cbc
cmpsl
xchg
lods
divps
xor
mov
xor
adc
sub
and
es
sbb
or
inc
mov
lea
roll
jnp
xchg
or
cmp
adcb
nop
pop
inc
xor
lock
fildll
mov
and
add
sahf
and
mov
jg
mov
nop
xor
xor
push
add
or
popf
mov
out
icebp
mov
add
jp
repz
cwtl
and
das
or
cmp
pop
mov
into
pop
jmp
push
subl
sahf
das
repz
inc
inc
inc
pop
sti
mov
inc
xor
movsb
fidivrl
pushf
nop
lods
aad
cmp
ljmp
xor
mov
into
mov
mov
mov
mov
add
loope
shrb
orl
add
and
cmp
jg
dec
aad
pop
fimuls
mov
pop
shrl
lret
ja
push
push
mov
or
lods
mov
cmp
lods
jmp
push
inc
lods
fiaddl
jb
pop
xor
insl
aad
clc
xor
mov
or
xor
pop
aam
mov
sub
mov
push
outsl
in
lea
xchg
ret
jl
adcb
add
fists
lds
scas
mov
xchg
ljmp
cld
push
andb
push
out
dec
and
mov
mov
adc
xor
pop
lods
lea
mov
xchg
in
stc
xor
mov
and
hlt
enter
push
clc
andl
mov
mov
mov
or
in
mov
outsb
jp
adc
nop
or
dec
arpl
dec
mov
int3
adc
xchg
pop
js
mov
lcall
clc
cmc
xchg
dec
sbb
movsl
dec
push
mov
pop
movsb
dec
adc
and
in
mov
fistps
inc
in
jg
pop
lahf
mov
mov
cwtl
mov
in
sbbb
fsubs
pop
ss
js
xor
xor
xchg
pop
dec
or
jno
jae
add
mov
out
cltd
xchg
cmpsb
adc
push
dec
sub
inc
or
adc
sub
fcmovne
jecxz
fwait
push
add
popf
sti
int3
jecxz
aas
cmp
andl
popa
jp
fiadds
xlat
mov
insl
or
jmp
mov
dec
cmp
cmp
pop
add
out
jp
dec
push
xor
fidivs
jb
cmp
xchg
mov
rcll
push
shrb
mov
fdivs
into
daa
out
add
aaa
inc
cmp
jne
push
xor
or
insl
cmp
je
ret
mov
pop
add
and
or
sbb
sbb
cmpsb
aaa
inc
mov
imul
fnstcw
adc
mov
out
mov
pushf
dec
cld
dec
imul
mov
and
test
ficoms
iret
or
mov
or
lret
xor
push
std
mov
testb
cmpsl
pop
cmp
sbb
test
stos
lea
ss
push
mov
les
cltd
enter
push
insb
jns
push
popf
mov
adc
std
into
add
pop
dec
adc
rcr
addb
pushf
popa
popa
cld
andl
popf
icebp
mov
push
ficomps
jl
mov
xor
xlat
xchg
push
push
mov
or
xchg
push
cmp
mov
rcll
fcoms
jle
push
push
cmp
aaa
inc
xor
push
mov
adc
or
and
pop
sub
fsubl
int3
out
xchg
cmp
stos
loopne
shrb
ret
mov
mov
test
jo
add
mov
imul
arpl
pusha
mov
inc
in
lret
pop
jb
inc
adc
push
ret
inc
nop
fmull
gs
test
jae
jecxz
loopne
sub
test
movsb
clc
jecxz
outsb
xor
gs
mov
mov
mov
cli
lods
mov
push
pop
sbb
jle
jae
dec
clc
mov
mov
sti
pop
flds
filds
cwtl
jmp
rclb
pop
rcll
pop
and
lcall
nop
addb
out
jle
cmp
jge
and
push
out
xchg
je
xor
sbb
inc
fdivs
out
or
sbb
xor
lcall
sub
ss
xor
xchg
xorl
adc
jge
sbbl
push
jne
mov
push
jbe
or
clc
mov
mov
sub
fisubrs
stc
sub
pop
or
pop
insb
sbb
adc
and
xor
and
inc
imul
inc
cmp
mov
popl
xlat
xor
out
and
je
sub
jp
lret
jnp
out
inc
mov
mov
fcomps
push
sub
pop
mov
fists
lret
shll
jl
movsl
cmp
movsb
or
sarl
xor
sub
xlat
loope
dec
ret
leave
cmp
jo
imul
mov
roll
or
mov
lock
inc
add
sbbl
push
aaa
int
jmp
lods
iret
mov
jb
xor
cmp
insl
mov
mov
lret
mov
adc
popf
inc
push
cs
out
test
adc
scas
mov
xchg
xchg
in
mov
lea
cmpsb
jae
or
in
dec
cmp
insb
mov
push
jle
sub
and
and
fsubrl
int3
sbb
cltd
insb
jp
ja
pop
ret
xchg
inc
dec
cltd
mov
mov
fsubl
std
pop
xor
stos
and
sub
sahf
shlb
pop
mov
icebp
call
cmp
add
inc
inc
add
pop
into
mov
inc
jb
andl
inc
cltd
dec
jge
test
daa
incl
adc
aad
push
pop
and
dec
lcall
outsb
inc
and
sbb
xor
insl
mov
test
inc
stos
pop
jl
dec
aad
cmpb
push
sbb
sti
or
inc
cmpsb
mov
or
in
mov
stos
sar
pop
inc
shll
cmp
cmc
sbb
or
fs
cwtl
mov
ljmp
pop
mov
hlt
icebp
mov
push
or
cmpsl
mov
cmp
movsb
movsb
mov
adc
cwtl
imul
daa
repnz
adc
les
mov
mov
xchg
testl
aad
aad
stc
mov
cmpsl
and
pop
pop
loopne
fucom
cwtl
adc
addr16
scas
pop
xchg
je
push
popa
mov
adc
test
out
add
sar
test
loopne
mov
pop
std
or
data16
and
fistps
xchg
sub
sub
push
adc
stc
dec
ret
xchg
or
cmp
movsl
sub
fldl
movsb
repz
inc
ljmp
in
xchg
add
mov
mov
sbb
bound
mov
lret
cmp
xlat
mov
mov
xlat
jmp
faddl
dec
xor
jecxz
push
jne
mov
fwait
cmp
fiaddl
pushf
mov
stc
push
adc
mov
dec
add
fsubs
sub
mov
pause
adc
push
cs
stos
bnd
rorl
lret
and
mov
sub
cmpb
pop
push
lds
les
js
cmp
stos
or
in
jnp
push
daa
out
inc
jp
dec
jg
inc
mov
xorb
xchg
std
xchg
xchg
jp
mov
shrb
push
add
jmp
ret
ret
gs
jge
jmp
inc
mov
stc
mov
pop
in
cmp
mov
dec
adcl
and
mov
addb
outsb
pop
jb
insb
jle
jecxz
sub
mov
inc
inc
mov
std
mov
pop
data16
adc
dec
repnz
shlb
jbe
in
inc
cmp
pop
std
add
int
fidivrl
ret
insl
sbbl
mov
dec
scas
push
jp
mov
cmc
jns
aad
out
mov
xor
das
mov
dec
dec
rcrb
jmp
je
xor
scas
fidivrl
jl,pn
sub
sbb
clc
xorl
or
arpl
or
in
mov
ljmp
adc
mov
movsl
popa
lahf
push
arpl
pusha
dec
push
sub
cmp
sub
fldl
shl
icebp
mov
push
out
sti
and
mov
and
inc
jg
loop
outsb
out
sahf
ret
xchg
pusha
cli
repz
push
aad
xchg
pop
loop
nop
jg
cmpsl
cmp
std
or
xchg
or
xchg
sar
sarb
arpl
push
in
fwait
push
ja
sub
dec
ss
add
out
dec
gs
into
clc
aas
lods
jnp,pt
mov
mov
sub
mov
stc
mov
in
mov
cmc
mov
pop
insl
pop
test
leave
add
cmp
and
scas
jno
or
jnp
pop
jo
movsl
stos
xor
bound
lea
sbb
push
inc
push
xor
pushf
mov
push
dec
icebp
jg
aas
lds
out
test
out
add
js
mov
xchg
mov
xchg
daa
and
scas
push
sbb
mov
cmpsl
aad
hlt
inc
enter
cmp
stc
lock
push
adc
das
sub
cld
mov
xchg
jb
pop
jg
loope
push
lock
push
pushf
je
sahf
mov
into
push
in
aam
dec
scas
xor
or
cmc
jmp
data16
and
mov
sub
push
jbe
popa
int
ffree
gs
scas
inc
xchg
stos
add
decl
mov
dec
leave
rep
sbb
ljmp
xor
fwait
lret
sbb
xchg
pop
sbb
pop
cmpsl
stos
fisttps
into
rcrb
and
and
mov
sub
add
ret
test
push
adcl
js
mov
or
test
fsubs
imul
add
xchg
xor
dec
data16
jg
inc
xchg
adcl
cmc
push
repnz
mov
icebp
das
loopne
adc
xor
hlt
mov
push
mov
fldl
and
in
popa
les
divb
mov
pop
inc
cs
jge
push
shl
mov
push
aad
push
fstpl
push
or
dec
js
xor
and
push
xchg
sub
push
repnz
out
mov
and
out
out
inc
mov
xor
sub
jl
mov
or
xlat
gs
cltd
lds
inc
fdivrs
std
sbb
out
xor
hlt
inc
inc
es
adcb
sub
incl
je
popf
fnsave
popf
mov
pop
sbbb
aaa
mov
jg
in
lods
xchg
and
sbb
pop
push
xchg
add
push
ds
in
add
mov
into
inc
push
pop
cmp
enter
mov
mov
movsb
push
or
and
mov
aam
call
adc
cmpsb
dec
ficoms
xor
cmp
pop
mov
add
outsl
filds
cmpsl
shlb
xchg
sub
inc
xor
cmp
pop
loopne
mov
imul
and
scas
stc
mov
lea
or
sti
repnz
adc
shll
add
add
mov
repnz
push
dec
jb
adc
ret
scas
cs
icebp
lods
addl
add
mov
mov
enter
xchg
push
cmp
cmp
fistl
int3
adc
fisubrl
mov
pop
mov
xchg
sbbl
out
dec
cltd
push
lea
fisttpll
popa
adc
addr16
sbbl
push
push
int3
jge
fwait
or
pop
inc
mov
sbb
jecxz
sbb
imul
inc
inc
in
pop
shll
jno
pop
popa
addl
cld
push
movsb
push
clc
adc
mov
pop
clc
mov
movsb
mov
adc
int
fistl
jnp
test
push
adc
sub
xchg
fildll
scas
dec
mov
nop
leave
pop
fnsave
pop
add
xchg
adc
fimuls
ljmp
out
mov
add
xchg
loop
ja
stos
fistps
cmp
sub
jl
ss
pop
aam
dec
pop
mov
mov
or
inc
jge
in
imul
lods
add
adc
dec
hlt
push
or
movsl
sub
jg
mov
adc
adc
dec
ss
xlat
xchg
pop
shlb
or
icebp
mov
dec
lds
mov
aam
icebp
mov
cld
mov
enter
lret
inc
mov
xlat
out
mov
pop
push
mov
sbb
fbld
mov
add
mov
negl
cli
int
xchg
push
xchg
fidivl
mov
jge
pop
int3
xorl
cmp
inc
stc
mov
pop
lea
mov
stc
out
repnz
dec
mov
push
pop
mov
in
mov
fisttps
mov
push
jcxz
sarl
fmuls
inc
push
pop
push
mov
and
inc
clc
cwtl
jmp
test
xchg
insb
mov
movsl
xor
inc
jp
cmpsl
test
sub
mov
rcr
shll
dec
cmp
stc
push
sahf
sub
mov
out
leave
mov
test
xor
jne
sub
ret
inc
pop
enter
repnz
or
sarb
movb
fidivrs
jle
and
gs
or
xchg
sub
mov
mov
ljmp
jg
mov
sub
dec
shrb
iret
addr16
and
out
sub
jmp
scas
lcall
int
pop
xchg
and
mov
push
and
js
jb
out
mov
ficoms
sbb
je
add
aam
mov
pop
stos
mov
std
push
jg,pt
xorb
lret
pop
mov
mov
out
mov
mov
rcrb
in
gs
in
js
xchg
enter
mov
dec
jnp
call
fimuls
in
ficompl
inc
ret
pop
test
scas
jg,pn
mov
and
pop
pop
xchg
mov
sti
jbe
and
hlt
insl
xchg
data16
pop
add
xchg
ret
mov
pop
fwait
and
or
sub
sbb
fwait
scas
jg
imul
dec
lds
jle
mov
fwait
sbb
jl
pop
push
xor
sub
imul
push
aaa
cs
sbb
jge
xor
add
mov
mov
xchg
sbbl
push
fiadds
xchg
idivb
pop
inc
int
test
sub
xchg
push
arpl
mov
cmp
aaa
outsb
dec
fwait
out
mov
inc
bound
xchg
mov
das
cmpsl
nop
imul
test
gs
add
aas
frstor
cmpsb
jecxz
or
lock
lahf
adc
dec
xchg
mov
push
mov
ret
in
push
jg
mov
xchg
push
mov
sub
test
mov
loopne
lods
lret
repnz
fsubs
out
or
jg
dec
jmp
and
jae
outsb
or
icebp
cmp
cmc
dec
and
rorb
inc
je
and
int3
pop
jecxz
mov
jmp
outsb
outsb
jecxz
icebp
cltd
push
lods
aaa
imul
lods
das
add
mov
dec
or
sub
out
sub
sarl
xchg
mov
std
mov
and
push
cmpsb
dec
and
xor
lods
stc
movsb
test
inc
add
test
scas
jnp
inc
pop
in
xchg
and
out
loop
cmpsl
pop
mov
call
dec
inc
je
cmp
pop
dec
xor
mov
push
cmc
mov
or
mov
add
inc
shr
jl
pusha
test
xchg
sbbl
fwait
xchg
sub
and
mov
aam
addr16
cwtl
mov
ljmp
add
fs
std
mov
repnz
xchg
dec
int3
test
xor
les
lcall
dec
adc
movsl
pop
add
inc
dec
test
outsb
mov
push
push
daa
lods
sbb
jl
dec
cmp
mov
xchg
cmp
fadd
clc
leave
lock
fldl
fucomp
shll
fs
adc
mov
mov
cmp
mov
dec
cmp
jl
mov
adc
insl
push
xchg
test
popf
mov
dec
dec
xor
mov
cmp
dec
jne
hlt
and
divb
sbb
push
xchg
mov
lea
jne
lret
xchg
jb
lcall
sbb
jl
dec
lds
sbb
test
inc
push
in
sub
cmpl
mov
outsb
cld
nop
test
mov
sub
fldcw
imul
jg
inc
test
out
push
mov
pusha
mov
outsl
or
popa
fwait
cli
cmc
sub
jns
loop
jne
and
add
stc
add
mov
push
sahf
or
sbb
vpunpckhdq
outsb
mov
clc
test
in
cmp
sub
mov
leave
mov
push
and
loope
mov
idivl
dec
and
mov
ss
add
push
inc
sbb
push
xchg
int3
add
dec
and
lret
cmpb
call
xchg
sbb
lock
xchg
repz
ljmp
in
xor
popl
fdiv
dec
pop
push
das
dec
xor
adc
js
in
xorl
out
xchg
mov
test
out
ffreep
xorb
pop
aam
inc
test
adc
repnz
sbb
ljmp
adc
out
lahf
dec
xchg
cs
inc
leave
jo
call
insb
sti
mov
clc
daa
jle
call
mov
das
das
cmp
sbb
test
cmpb
dec
jb
pop
xchg
sbb
pop
out
adc
lds
mov
std
daa
in
add
cmp
push
sbb
xchg
sbb
cwtl
jmp
ja
pop
xor
lcall
test
xchg
cmc
dec
pop
es
lea
lock
sub
lahf
leave
push
les
cwtl
jbe
xor
aaa
aam
roll
mov
cs
je
sahf
inc
add
mov
pusha
and
mull
pop
xor
adc
lods
or
insb
jmp
mov
orb
mov
jmp
push
mov
dec
lret
in
pop
out
icebp
arpl
cwtl
ret
jo
mov
mov
bound
daa
test
adc
icebp
cwtl
add
frstor
dec
jne,pt
fdivr
sub
adc
adc
scas
test
cmpsl
call
scas
dec
ds
push
aad
push
notl
pop
mov
xor
popa
shrb
push
mov
in
pusha
cmp
lock
mov
inc
aad
push
add
packuswb
sbb
pop
dec
stos
cmpsb
fbld
bound
movsb
xchg
ljmp
or
dec
jae
loop
mov
jl
sub
repnz
insb
mov
mov
orb
mov
ret
aas
iret
leave
popa
xchg
loope
repz
pusha
jmp
xor
blsfill
mov
push
mov
dec
mov
scas
mov
dec
outsl
cs
or
mov
pop
xor
roll
aaa
push
pop
out
inc
inc
aad
andl
cld
pop
aam
sbb
repnz
dec
mov
sti
loop
imul
clc
dec
sub
lods
lahf
pop
mov
xlat
jo
inc
sbb
mov
bound
mov
sub
leave
push
dec
cmc
or
sbb
lret
mov
out
mov
adc
test
pop
loope
xchg
cmp
fmull
cli
dec
or
ficoml
jnp
mov
cmpsb
and
scas
pop
and
popf
fiadds
adc
std
jl
mov
or
dec
adc
aas
movb
cli
add
add
adc
xchg
xorb
loopne
inc
pop
in
test
gs
mov
mov
insl
out
jmp
aam
or
loope
add
cld
mov
sbb
movsl
dec
cmp
jno
enter
notb
lock
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
lea
addb
inc
push
shlb
cli
xor
mov
data16
dec
pop
mov
rol
das
xchg
sbb
sahf
cmpsl
inc
and
stos
mov
lods
push
popl
mov
jbe
adc
mov
sbb
cmp
popl
lods
shr
popf
dec
mov
lcall
ds
sti
or
mov
ret
add
add
call
les
xchg
inc
rorl
notb
jae
add
jae
js
ret
ret
mov
mov
jns
insb
or
dec
inc
push
pop
jg
push
dec
mov
push
mov
and
xlat
out
jae
mov
and
add
adcl
sub
mov
and
inc
int
xchg
cmp
scas
jns
pop
mov
xchg
filds
rcrb
xchg
dec
xchg
stos
inc
push
or
in
mov
repz
mov
push
jl
faddl
inc
sti
fadds
xchg
push
repnz
int3
pop
or
fldt
jae
dec
cmc
int3
xor
dec
jns
mov
mov
and
mov
adc
pop
cltd
pop
xor
int3
ret
stc
fchs
jb
cmp
pop
pop
mov
das
sbb
xchg
mov
push
fwait
decb
mov
daa
xchg
leave
push
sahf
fcoms
loope
lahf
aas
pushl
cmp
or
sbb
outsb
mov
cmc
fists
fisubs
test
sbb
dec
shrl
in
lock
xchg
jle
mov
xor
test
mov
cmp
or
stos
jmp
inc
mov
dec
sub
in
push
ret
outsb
push
jbe
dec
sub
or
xor
cmp
pop
bound
addl
test
mov
mov
jb
inc
cmpsb
lds
sbb
imul
sbb
lret
das
rcr
push
hlt
inc
xchg
pop
mov
das
xchg
hlt
and
push
bound
sbb
call
daa
jno
fwait
jne
hlt
lock
jb
arpl
shl
inc
fcmovne
pop
jg
xor
jne
out
cmp
inc
sub
imul
add
out
mov
fs
lcall
iret
sti
push
or
push
push
sub
xchg
pushf
mov
xchg
jnp
cmc
xchg
je
out
lods
rcl
jmp
popf
xor
xor
mov
arpl
mov
inc
mov
ja
ss
cmpsl
popf
push
lret
ds
sub
dec
or
mov
sbb
sbb
movsl
pop
imul
mov
movb
outsb
push
jbe
loope
push
enter
pop
cmp
andl
in
push
movsl
stos
mov
xchg
sbb
xor
push
cli
adc
jnp
dec
cmpsl
sub
jle
mov
fsubl
push
fldcw
jne
sarb
jl
jb
mov
pop
add
stos
pop
inc
or
cli
outsb
sbb
add
daa
test
dec
iret
test
data16
jo
aaa
fsub
lret
push
call
addr16
fadd
fwait
cli
push
sub
fisttpl
or
in
sbb
xlat
fs
mov
push
test
and
adc
lret
adc
sarb
jnp
jp
adc
idivb
adc
jle
lret
dec
jnp
outsb
push
bound
lcall
sbb
mov
mov
in
push
jmp
push
pop
mov
aas
or
push
sbb
xor
mov
inc
dec
and
xchg
dec
xchg
cltd
mov
inc
jecxz
mov
shlb
gs
nop
jno
mov
ficoms
inc
sbb
cmp
and
xchg
ret
ljmp
xchg
fucomp
das
xchg
fimuls
add
lea
movsb
xor
shll
out
push
xchg
push
scas
xor
pop
jmp
or
cwtl
test
mov
pop
imul
jns
mov
dec
xor
adc
xchg
rorl
sub
idivb
aas
imul
in
xor
pushf
aam
inc
jp
mov
test
jae
jecxz
movsb
inc
fsubrs
dec
mov
cmc
pop
cmp
arpl
and
aam
movsl
mov
das
pushf
test
dec
ret
and
aad
cmpsb
test
aad
jecxz
jb
test
push
or
imul
int3
inc
mov
lahf
mov
mov
pushf
jno
xor
adc
lods
mov
pop
xchg
mov
cld
cmpl
aas
and
dec
dec
dec
cmpsb
jo
xchg
outsb
idivb
mov
pop
cli
adc
out
int3
and
inc
es
repnz
mov
inc
and
or
mov
ss
push
sbb
dec
aam
push
les
push
sub
scas
cld
sub
mov
lods
out
cmp
add
loope
in
mov
lods
jne
scas
xor
sti
pop
xor
push
adc
mov
out
fimull
ret
lea
ficompl
jmp
jae
ret
sub
inc
push
lret
mov
mov
and
and
je
sbb
xchg
std
dec
nop
in
lahf
in
popf
in
cmp
fs
test
aam
xorb
popa
lret
lret
dec
inc
mov
test
adc
inc
fcmovu
imul
sub
mov
mov
insb
stos
jb
jle
xchg
lret
xchg
and
or
xchg
inc
dec
xor
js
scas
lock
cmc
mov
mov
std
fldl
jb
push
push
push
push
adc
sub
jge
sub
mov
xchg
iret
fs
cmpsl
scas
call
xchg
push
xor
inc
xchg
scas
add
hlt
fwait
mov
sbb
adcl
clc
ffreep
push
cmp
in
data16
stos
push
pop
sbb
push
xor
movsb
mov
jle
mov
and
ljmp
add
xchg
fstps
popf
popa
dec
ljmp
addb
test
test
jmp
adc
xchg
jno
xchg
mov
scas
cmpsl
inc
fists
loop
fmuls
ljmp
push
enter
clc
movsl
jecxz
imul
xchg
ss
mov
xchg
aaa
das
rcll
pop
xchg
cmp
lds
xor
mov
lea
gs
mov
mov
rcll
out
sbb
push
cmp
pop
outsl
mov
je
fstl
mov
push
scas
xchg
push
xchg
sbb
aaa
stc
cmp
jg
pop
test
pop
in
popf
scas
push
adc
repnz
jg
je
adc
out
pop
scas
inc
std
into
mov
gs
push
testb
hlt
inc
stos
push
dec
sarb
jl
dec
adc
rcll
ret
out
mov
out
mov
dec
fcomps
sbb
ljmp
leave
hlt
cmpsl
insl
les
sahf
lcall
dec
pop
push
fwait
shlb
rcrl
repz
push
lcall
paddsw
xchg
jns
or
jnp
dec
imul
xchg
cwtl
sub
les
scas
and
imul
lcall
pop
sbb
cmp
pushf
aas
xchg
movsl
mov
mov
mov
mov
mov
xchg
vpshld
inc
mov
push
and
in
aad
and
push
jb
dec
push
xlat
aam
in
lcall
push
pusha
aam
adc
cli
mov
test
fidivrl
aam
ja
pop
cmp
xor
jnp
xlat
push
mov
jnp
and
imul
add
clc
xchg
adc
out
lret
loop
dec
dec
popf
mov
fs
scas
lea
aad
in
ds
shrl
leave
ds
dec
dec
adc
xchg
add
jo
test
test
pop
and
aas
pop
fmull
testb
std
std
repnz
push
xor
cmp
adc
mov
fistl
mov
outsl
pop
faddl
in
nop
out
or
fadds
xor
cmp
adc
pop
pop
mov
lods
add
in
pop
ret
in
in
jmp
ret
scas
std
and
or
push
fildll
push
cmp
or
add
repnz
iret
push
mov
in
inc
mov
mov
repnz
mov
ds
inc
arpl
icebp
adc
rclb
xor
pop
push
jns
mov
scas
inc
inc
nop
or
mov
xor
sub
push
aam
dec
lret
sbb
mov
and
inc
pop
mov
sbb
push
loop
iret
xchg
mov
mov
add
gs
xchg
sub
call
nop
out
push
cmp
add
loop
test
mov
leave
pop
inc
ja
scas
or
mov
arpl
xchg
lret
cmp
repnz
xor
push
mov
scas
lods
or
lahf
push
iret
iret
jmp
cwtl
jmp
mov
repz
decb
adc
xchg
out
mov
testb
in
pushf
mov
stos
nop
outsb
push
and
sub
js
mov
pop
sub
hlt
lods
inc
std
rorb
cmc
pop
add
arpl
pop
jns
cld
fdivr
hlt
test
adc
fucomi
rol
repnz
sub
mov
je
repnz
add
movsb
movq
adc
and
fistps
cmp
cmp
arpl
dec
xchg
mov
sub
cmc
mov
mov
aas
shrl
lods
out
and
or
jno
dec
inc
dec
daa
adc
push
orl
push
aam
xchg
pop
push
inc
mov
pop
mov
cs
inc
cmp
sbb
and
aam
es
lds
mov
xor
test
cmpsl
inc
xchg
imulb
sub
mov
sbb
xchg
pop
lcall
shrl
dec
gs
inc
daa
add
flds
movsb
push
xor
icebp
das
and
int3
out
and
xchg
and
push
pop
insb
shrl
mov
or
or
movsb
mov
or
mov
es
inc
mov
add
in
imul
repz
mov
mov
jmp
cmp
fdivs
cmp
and
xor
je
orl
pop
es
xchg
scas
xchg
pusha
sub
push
xchg
mov
sbb
mov
pop
or
fisttpl
fiaddl
testl
call
or
dec
inc
shrl
into
jle
out
dec
outsb
jne
xchg
cli
shl
out
ret
jo
dec
jmp
xor
mov
aad
out
dec
iret
sar
bnd
jge
mov
filds
mov
in
out
loope
pop
bound
rcr
add
add
ficoml
cs
fidivrs
outsl
lret
aad
mov
cmp
scas
mov
and
lcall
xchg
inc
xor
xor
pushf
adc
sub
imul
int
nop
jle
test
stc
scas
xor
mov
or
in
sub
loope
aad
mul
invd
xchg
mov
jp
cltd
lret
inc
jmp
pop
movsb
dec
dec
mov
imull
and
inc
xchg
lock
cltd
aad
mov
or
adc
push
pop
or
mov
faddp
lret
fnstenv
push
cwtl
aam
repz
stc
aad
dec
leave
cmp
int
mov
fcoms
push
rcll
pop
jmp
sub
sbb
repz
sbb
sahf
dec
mov
mov
fwait
movsl
out
sbb
xchg
mov
jl
inc
add
cmp
push
mov
adc
movsb
mov
lret
xor
movsb
enter
jae
cmp
fnstenv
les
jae
push
xor
inc
push
and
mov
imul
int
nop
addr16
imul
push
xor
hlt
lcall
loop
inc
inc
inc
nopl
int3
movsl
mov
in
sti
ja
mov
stos
ficomps
fbstp
scas
add
js
add
and
and
jmp
dec
into
ret
cmp
daa
pop
aam
add
pop
ja
mov
xchg
pop
pop
mov
xchg
idivl
lea
clc
aas
lods
xor
stc
inc
loopne
cli
or
enter
test
pop
adc
sub
xor
frstor
and
call
fwait
test
sti
addr16
and
xor
insl
rclb
ret
test
dec
out
lahf
mov
and
adc
xchg
lret
iret
lret
xchg
movsb
push
and
cli
and
ss
push
call
xlat
xchg
lea
push
push
cmpsl
add
xor
xlat
cmp
into
jb
ret
bound
push
in
fwait
cld
sbb
push
pop
xchg
in
mov
and
pop
bound
fs
jns
rclb
leave
jbe
test
stos
arpl
test
cmp
and
negl
or
ja
mov
jl
mov
fsubrl
outsb
adc
inc
popa
inc
test
add
cmpsb
lods
push
pop
ret
xlat
mov
test
mov
daa
cmp
jge
jge
loop
xchg
sbb
movsl
shl
inc
adc
call
lock
lahf
mov
mov
cmp
sub
fs
out
call
clc
inc
adc
xchg
mov
mov
loope
sub
xchg
cli
cwtl
imul
lea
or
inc
add
mov
dec
pop
fs
xor
adc
rolb
das
mov
mov
adc
add
lock
inc
mov
xor
fisubrl
xchg
ds
and
cmpsl
dec
pushf
idivl
and
arpl
rcr
cmp
popf
cmc
sub
pop
ljmp
cltd
pop
jmp
aam
aad
into
or
lret
adc
lahf
sbb
mov
jne
fsubl
ja
sub
jb
out
and
mov
mov
xor
les
ret
lea
ss
jae
fwait
push
sub
and
je
push
inc
pop
and
addr16
lods
adc
cli
shl
cs
xchg
dec
mov
pop
ret
jnp
fsubrs
xchg
adc
cli
aam
jnp
enter
arpl
add
xor
adc
rol
enter
ljmp
cli
ficompl
push
aad
add
xlat
sahf
gs
mov
jno
fmull
jb
lds
jmp
inc
add
orl
in
aam
xchg
cli
mov
and
sub
mov
jb
ss
pop
mov
sub
pusha
hlt
inc
testb
sahf
sub
out
mov
pop
repz
dec
push
les
adc
cmc
popf
jo
imul
jmp
imull
fbstp
cmpsl
add
in
inc
jb
sub
imul
data16
ljmp
jmp
hlt
mov
shl
inc
test
jecxz
fwait
in
xor
ror
subl
loope
stc
jb
mov
sub
clc
sarb
bound
cmp
pop
sahf
jp
cwtl
or
lock
pop
mov
aaa
insl
lret
inc
mov
jnp
repnz
nop
lahf
dec
bound
lret
inc
sub
in
sbb
stos
mov
loope
insl
sbb
repz
mov
in
or
cmc
inc
ss
mov
inc
xor
add
repnz
and
outsb
lret
test
xor
cmp
add
std
movsl
mov
mov
test
push
dec
and
hlt
ja
mov
lods
call
cmp
jnp
lcall
fistpll
ljmp
inc
ror
push
add
lahf
inc
push
ret
sub
xchg
jne
adc
and
mov
jmp
out
jae
jno,pt
sarb
mov
mov
cmpxchg8b
push
mov
xor
lret
out
pop
cmp
xor
mov
nop
movsb
cmp
jmp
das
clts
mov
cmp
stos
popa
jbe
mov
fistpll
outsb
lods
das
xchg
jbe
imul
repz
mov
mov
sbb
push
fidivrs
push
dec
ss
in
das
or
aam
jnp
or
push
push
sub
mov
add
and
call
push
mov
insl
lahf
loope
popf
jb
sti
call
je
sub
xor
add
jmp
jmp
push
xor
ud1
push
sti
inc
push
outsl
inc
insl
dec
mov
or
pop
or
divps
daa
dec
jecxz
stos
cwtl
and
int
fnstsw
mov
pushf
loope
mov
ss
jp
ljmp
inc
sbbl
enter
lret
nop
aam
stos
shlb
aas
inc
jg
das
push
pop
push
shll
sub
push
push
iret
and
sarw
pushf
and
lahf
sbb
stos
and
les
test
mov
pop
div
loopne
adc
jecxz
push
pop
jno
push
ficompl
jbe
inc
cmp
je
add
add
push
mov
ljmp
sti
pop
mov
xor
out
inc
lock
shlb
inc
lret
lcall
arpl
popa
cmp
fnstsw
adcb
iret
mov
addb
push
movsl
lret
pop
mov
clc
cltd
mov
in
xchg
fsincos
pop
divb
push
pop
js
jno
mov
fidivs
dec
int
sbb
loop,pn
mov
shl
ror
les
aam
sbb
addl
std
jo
mov
iret
cmpsl
psubd
fiadds
cmp
jecxz
ljmp
imul
addl
insl
mov
sub
pop
mov
add
lods
int3
outsl
mov
fld
xchg
jns
js
add
xchg
jnp
arpl
jmp
add
outsl
xchg
or
jb
out
mov
push
push
mov
mov
popa
and
movsl
sbb
pop
in
outsl
pop
arpl
and
dec
addl
mov
jbe
jbe
and
inc
gs
call
xchg
and
push
and
imul
jmp
mov
jle
aas
push
adc
adc
mov
push
call
ds
inc
outsl
adc
das
push
mov
push
cmp
push
or
xchg
nop
lds
fstpl
cmp
add
xor
inc
mov
jp
pop
insl
das
fs
int
jbe
xchg
nop
push
in
xor
out
adc
dec
je
pop
xchg
stc
pop
xor
inc
push
and
sub
mov
dec
add
add
xchg
pushf
orl
jecxz
push
push
sbb
pop
jb
cmp
fidivrs
clc
xor
adc
or
or
mov
fnsave
push
imul
adc
jae
out
fimull
push
jg
mov
jbe
lret
daa
push
inc
push
pop
sub
nop
outsl
adc
xorl
ja
pushfw
jnp
and
fsubl
sub
jnp
nop
in
jbe
test
mov
pushf
inc
cmp
subl
jnp
add
in
and
dec
mov
push
or
jnp
jo
cmp
dec
xchg
cs
fisttpl
push
rcl
mov
leave
sbb
push
push
shll
add
or
cli
arpl
movsb
push
test
int3
cli
lahf
sub
inc
cmc
pop
shl
ljmp
insb
push
in
je
mov
sbb
sub
adc
mov
pop
sahf
push
cmp
xchg
sub
mov
sti
popa
shll
pop
fcoml
mov
cmp
cld
insl
fnstenv
sti
or
subl
faddp
imul
adc
stos
subl
inc
fsubp
lret
filds
rolb
and
inc
es
sbb
nop
dec
mov
pop
mov
mov
xchg
mov
out
cltd
adc
subl
jecxz
dec
jecxz
add
cs
scas
inc
and
sbb
push
cs
or
mov
jecxz
outsb
pop
or
lret
inc
xlat
pop
test
xchg
dec
pop
pop
call
int3
mov
stos
pop
xchg
sub
ret
xor
jo
pop
adc
cmc
mov
jle
sahf
cmp
jl
mov
xchg
push
xchg
mov
inc
adc
ret
gs
sub
repz
fnstenv
leave
jnp
iret
and
jl
js
mov
sbb
int
cs
imul
aad
lea
insl
push
cmp
pop
ret
and
pushf
or
fnstcw
xor
push
out
and
inc
cltd
jne
movsb
mov
mov
push
dec
jp
sahf
pushf
fsubs
mov
or
sbb
pop
add
and
out
cmp
enter
xor
add
pop
and
into
push
sub
js
adc
mov
js
sbb
sar
stos
cld
push
or
aam
cmp
pushf
data16
cmp
mov
dec
inc
push
int
pusha
cs
call
or
cwtl
fistpll
mov
or
and
shlb
jge
mov
adc
dec
mov
test
subl
clc
xor
add
inc
sub
mov
stos
add
sub
fimuls
dec
or
sbb
faddl
mov
sub
push
cmpsb
xor
mov
testl
xor
roll
xor
arpl
sub
fsubrs
xchg
fstpl
push
movsl
negl
or
mov
mov
out
repnz
inc
dec
fwait
jno
or
mov
sbb
shl
movsb
push
sub
cmp
jns
sub
and
sub
rorl
mov
xor
pop
testl
jae
mov
repnz
clc
xor
ljmp
xchg
sbb
mov
mov
stc
mov
jmp
adc
jno
std
scas
pop
add
or
ftst
and
insb
and
es
in
mov
cmp
in
cmp
xor
subl
mov
cmp
adc
sub
enter
in
fnsave
push
xor
lea
pop
aad
sahf
jp
icebp
out
mov
das
add
or
ljmp
fisttpll
pop
mov
dec
jae
dec
push
or
inc
inc
xor
pop
jle
cmp
push
daa
inc
imul
push
fcomps
dec
test
nop
xor
gs
mov
popa
subb
xchg
inc
fistpl
ss
lods
pop
xor
divb
lcall
inc
js
jmp
loope
dec
adc
xchg
sub
xlat
es
shrl
add
adc
jne
fadds
xchg
jmp
mov
cmp
outsb
lahf
push
into
aam
stos
xchg
mov
mov
add
sbb
sbb
add
scas
cmc
push
xor
nop
jg
sbb
out
sahf
sub
sub
and
pop
xchg
inc
shll
jae
hlt
and
fwait
mov
hlt
gs
xor
cmp
jnp
std
fiaddl
fstpt
sub
jge
dec
out
jae
pop
shlb
roll
xchg
cmp
and
jne
adc
stos
in
pop
aad
rcrb
cmp
or
sahf
and
fwait
mov
inc
test
data16
add
push
rcr
and
scas
sbb
xchg
mov
mov
sub
test
cli
mov
xlat
out
out
push
rolb
fisttps
mov
mov
inc
jle
or
adc
js
or
dec
jle
xchg
mov
dec
add
mov
inc
loopne
dec
xchg
xchg
sbb
movsb
std
cmp
jp
dec
rol
push
mov
mov
and
insl
dec
add
lahf
sbb
add
push
push
sub
sub
out
mov
in
ljmp
jb
stos
lock
gs
dec
imul
xor
jo
lcall
enter
fbld
jno
xchg
cmpsb
rol
inc
psadbw
repnz
sbb
pop
adc
push
and
rorl
ljmp
test
insb
push
repz
inc
pop
je
mov
pushf
push
aas
andl
mov
fisttps
mov
sub
push
movsl
add
roll
mov
mov
push
std
push
hlt
mov
out
add
xchg
xlat
rcll
loope
push
add
addb
pop
fstpl
mov
mov
jno
jmp
xor
fidivrs
xor
in
xor
mov
mov
push
lods
pop
outsl
xchg
and
dec
cmp
jo
mov
mov
in
dec
pop
cmpl
inc
mov
out
ja
pop
pop
lods
cs
xor
es
enter
lret
mov
or
jmp
in
mov
imul
inc
push
stc
fwait
xchg
ljmp
orps
mov
mov
inc
xchg
pop
mov
dec
je
mov
test
cmpsl
push
jecxz
xor
xchg
or
adc
cmpsb
das
or
rcrb
xlat
and
mov
xor
ret
jg
ja
call
push
gs
lahf
mov
insb
xor
mov
jge
bound
fwait
mov
scas
cmp
add
stos
mov
cmc
lcallw
insl
data16
and
sbb
test
dec
pop
jl
mov
nop
dec
push
enter
fdivrl
adc
pop
add
je
sub
adc
sub
jmp
sbb
fisttpl
mov
lock
inc
mov
je
sub
jae
push
or
fcoml
or
repnz
ja
sti
sahf
ret
and
jge
in
in
jp
inc
lahf
ljmp
les
xor
leave
enter
xorl
bound
xchg
stos
fs
inc
daa
and
pop
sbb
mov
jmp
and
mov
cmp
or
movl
mov
jmp
or
rcll
mov
imul
jb
outsl
sbb
xchg
pop
stc
lea
mov
fdivrs
add
pop
or
inc
adc
pushl
fiaddl
ljmp
dec
bnd
stos
ds
xor
dec
xor
movsl
dec
mov
jb
adc
ret
shlb
in
mov
aam
cmp
pop
scas
push
xor
or
popf
loope
xor
loopne
dec
int3
mov
lret
push
repnz
aas
or
push
and
mov
imul
sbb
ffreep
faddl
imul
lcall
or
cmp
sbb
lcall
leave
nop
xchg
push
ja
mov
enter
and
fs
cmp
sub
pop
xor
aad
jmp
jae
push
pop
sub
popf
hlt
add
pop
insb
mov
and
push
sti
sub
packuswb
lret
inc
mov
orl
xchg
pop
push
fcomps
ds
jle
enter
je
xor
pop
and
mov
aas
ret
arpl
fs
inc
movsb
lea
mov
and
sbb
push
mov
nop
push
mov
xor
ss
and
and
adcb
data16
ficompl
rol
push
jl
loopne
xor
adc
inc
push
push
mov
aam
les
xchg
pop
xor
mov
sbb
mov
enter
les
out
iret
mov
daa
mov
in
data16
xor
loopne
jmp
and
or
fwait
int3
jge
aam
dec
mov
or
test
cmpsl
mov
outsl
aaa
cmpsl
mov
or
cld
and
ljmp
push
adc
idiv
rcl
sub
aam
data16
popf
aas
dec
fisubl
data16
mov
jns
clc
inc
add
cld
sbb
or
cmp
mov
lods
mov
stos
or
ja,pt
mov
mov
lods
in
pusha
sub
daa
cwtl
pop
and
xchg
mov
mov
inc
push
lods
bound
js
ja
xor
xchg
mov
movb
adc
pusha
jae
mov
push
adc
pusha
cmpsl
cld
adc
call
insb
test
sbb
mov
ljmp
sbb
or
jno
mov
in
testl
push
dec
fistpl
add
or
ljmp
movsb
loop,pt
test
mov
inc
mov
push
test
sub
icebp
pop
fsubr
mov
cmp
inc
sbb
daa
and
in
sub
pop
outsl
repz
xlat
jb
jmp
popf
or
loope
add
xchg
or
mov
and
outsl
out
lret
cs
or
push
push
stc
push
inc
push
xor
cli
mov
mov
stc
fmull
jmp
jae
ret
xor
dec
movsl
cmp
sbb
mov
fwait
xchg
cmp
dec
insl
js
lock
mulb
xchg
xchg
adc
fsubl
out
in
sbb
fs
cmp
mov
repz
int3
aad
lods
or
dec
insl
pop
fcompl
inc
xor
jb
xchg
cmp
cmpsl
dec
jg
xchg
insl
ljmp
and
arpl
in
test
aad
dec
pop
add
jecxz
stos
jmp
mov
cltd
rorb
xchg
cmc
or
sti
mov
in
popf
jo
cmp
inc
jle
jbe
test
xor
cld
xchg
add
push
int
repnz
shlb
add
jp
or
aam
pop
and
insl
mov
out
scas
inc
xor
aas
call
xchg
sbb
cs
sahf
pop
xor
mov
adc
sub
cmp
rorb
xor
fs
out
jmp
push
aam
dec
inc
ss
and
repz
sahf
xor
adc
call
sbb
add
fisubrl
sub
push
sti
lock
lock
lock
aaa
mov
sub
adc
fbld
and
push
arpl
testl
adc
adc
andnps
add
iret
cmp
mov
pmullw
xor
pop
push
out
xchg
pop
rcrb
outsb
sub
mov
repnz
and
and
lret
xor
jae
call
push
jo
scas
xchg
ficoms
add
shrl
xor
mov
cmp
icebp
jge
push
sub
xchg
jb
roll
outsb
or
movb
ret
xor
test
rcrb
jno
arpl
int3
aad
dec
cld
andl
sub
mov
addl
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
add
stos
pop
daa
std
addb
push
int3
rcrb
jns
lock
int3
cmpsb
push
int
push
or
jbe
and
dec
sbb
repnz
ficoml
repz
mov
int
adc
ss
dec
push
xor
adcl
dec
pop
mov
cmp
xchg
mov
out
stos
test
fstpt
test
inc
aaa
push
push
mov
icebp
jp
outsl
add
fldt
dec
popa
sub
or
dec
arpl
ja
mov
lods
jne
pop
and
mov
lret
mov
mov
inc
mov
adc
out
enter
pusha
inc
sahf
cmp
out
popa
stos
in
imul
dec
es
in
sbb
pop
cs
pop
add
cmp
jb
mov
xor
shrb
jnp
xchg
sbb
sub
mov
ja
add
inc
jmp
mov
push
insb
push
xor
mov
jmp
mov
fisttps
and
mov
roll
jbe
inc
jmpw
pop
loopne
push
adc
jle
in
outsl
in
mov
mov
stos
jmp
jle
mov
adc
mov
dec
loope
fildl
and
inc
pop
arpl
shll
lcall
and
cmp
cmpl
mov
mov
dec
rolb
test
lods
lods
pop
test
insl
hlt
arpl
mov
xchg
jb
sbb
push
arpl
jnp
clc
mov
xlat
clc
sbb
test
sahf
dec
out
mov
shll
sbb
fwait
pop
dec
xor
rorl
mov
fs
cmpsl
pop
insl
roll
jo
les
mov
xchg
mov
mov
mov
addl
fcmove
test
test
movsl
ret
insb
xchg
mov
xor
inc
stc
push
int
pop
fnstenv
out
mov
fmull
adc
dec
dec
fs
andb
test
loop
xlat
pop
iret
or
lods
add
push
jnp
pusha
push
in
pop
cmc
into
fs
mov
test
or
fadds
shl
enter
fcomps
dec
inc
imul
pusha
iret
sub
fidivs
fs
cmp
dec
aad
jecxz
mov
call
sbb
or
daa
outsb
mov
xchg
mov
or
dec
call
mov
ficoms
mov
xchg
mov
sbb
jg
cmpsb
xor
loopne
je
es
push
mov
jl
xchg
jl
and
xchg
cld
test
test
call
hlt
push
lret
cmpl
lea
imul
jns
fstps
ds
iret
lock
aaa
jg
push
setp
inc
test
movsl
sbb
mov
hlt
jl
fucom
rorl
lds
add
aaa
imul
jae
pop
xchg
in
mov
js
or
aaa
test
scas
shrl
push
mov
jns
imul
xchg
push
jmp
xchg
mov
aas
mov
loop
cmp
jmp
shl
test
std
push
jl
or
pop
fmuls
mov
fsts
jb
inc
sar
jo
mov
lcall
sbb
lods
popa
dec
sbb
dec
mov
adc
sub
dec
cmpsb
add
lods
aas
mov
jmp
test
and
jl
mov
mov
mov
jb
aad
fwait
cld
mov
adc
cmp
cs
push
sahf
fiaddl
shrb
mov
rol
je
das
xor
aam
adc
ret
mov
dec
push
outsl
addr16
add
xor
out
loopne
mov
jp
inc
mov
les
push
dec
pop
xor
xchg
mov
stc
out
scas
fmuls
mov
shlb
cmp
adc
bound
je
cld
push
inc
dec
loop
fwait
out
mov
xor
lods
fdivrs
push
cmp
push
push
sub
jo
mov
push
scas
mov
cli
inc
fadds
or
cli
cld
sbb
out
out
bnd
lock
movsl
insb
cmpsb
in
push
or
fisubs
or
fiadds
jg
movb
push
icebp
mul
xchg
lret
lods
test
push
sub
cmp
sbb
add
and
mov
pop
inc
cmp
pop
lcall
jb
dec
pop
int3
sub
roll
stos
pop
jecxz
je
fistpll
dec
mov
cmp
cmp
test
mov
ss
pop
scas
lods
stos
loopne
pop
jp
dec
ret
cmp
aaa
flds
je
cld
pop
adc
mov
jge
fmuls
sub
sub
sub
imul
in
push
into
add
xchg
fldl
pop
cmp
push
cld
test
mov
pop
and
pop
cmp
imul
movsl
and
and
bound
xor
lea
sub
mov
jbe
xchg
mov
adc
pop
push
aam
sub
jl
mov
pusha
scas
loop
mov
test
sbb
lret
cmp
fmuls
lock
into
ds
in
adcb
je
fisubrs
subl
in
push
gs
repnz
jp
pop
in
loop
jle
leave
or
enter
pop
fidivrl
inc
lcall
cmpsb
fwait
outsl
int
popf
and
xor
jl
sbb
ja
rorb
mov
cmpsb
daa
inc
sbb
mov
fwait
mov
push
dec
cmp
lea
and
scas
iret
fistps
add
mov
ljmp
jne
repnz
add
sub
inc
iret
js
mov
int3
sbb
sbb
jo
push
cld
scas
lcall
add
inc
mov
dec
pusha
xchg
mov
rclb
sub
pop
and
push
xorl
mov
int3
xchg
cmp
out
mov
cmovbe
cmp
sbb
add
pop
repnz
add
sub
xchg
cs
adcl
sbb
fs
repz
mov
sbb
add
imul
add
mov
call
push
jl
roll
mov
jg
or
movsb
mov
cld
add
out
pop
shll
decl
fiadds
mov
mov
clc
es
mov
dec
or
adc
adc
pop
pop
frstor
push
inc
pop
popf
xchg
xchg
push
cwtl
dec
adc
mov
push
push
dec
and
call
sbb
arpl
mov
scas
lret
xor
lods
cmp
or
fisubrs
mov
jbe
test
xor
filds
orb
cmpsl
hlt
flds
add
sti
lea
adc
and
stos
lods
insb
add
mov
sub
imul
mov
inc
sub
stos
nop
lea
int
jg
xor
addr16
decl
push
mov
lods
jmp
sbb
imul
or
or
into
mov
dec
xchg
adc
sbb
fwait
dec
jns
scas
mov
mov
mov
fdivr
push
in
jle
out
add
call
pop
rcrl
jmp
cld
cltd
adc
cmp
adc
cs
test
mov
jne
jns
enter
ljmp
sbb
cld
aas
inc
std
mov
nop
mov
movsl
pop
dec
jl
outsl
cmc
movl
push
cmovg
sub
bound
cmp
jnp
repz
or
and
enter
xor
push
push
jmp
adc
sbb
mov
fisttpll
stos
xor
fs
add
mov
inc
out
cmp
push
pop
mov
mov
xor
enter
push
sub
mov
jne
jmp
or
adc
mov
dec
sar
lea
xchg
jp
dec
sub
fdivl
mov
imul
sbb
pop
jmp
addb
inc
fsts
out
or
push
and
fnclex
push
and
cwtl
xor
in
mov
xor
imul
popa
jae
mov
pop
ficoml
ret
inc
shl
cmpsl
pop
movsb
clc
das
xor
sahf
loopne
mov
pop
jns
adc
adc
daa
subb
mov
jmp
leave
nop
insl
sbb
mov
into
insb
inc
idivl
push
sbbb
bound
outsl
jns
push
cmp
lret
push
iret
xor
mov
xchg
mov
addr16
jge
add
sbb
fucomp
or
shll
sti
loopne
adc
mov
mov
lea
lock
lcall
je
idivb
cmp
sahf
lret
and
fmull
mov
cmp
and
sbb
loope
push
loopne
sbb
test
sbb
daa
push
sbb
push
out
add
ss
movsl
mov
les
mov
flds
repz
pop
fldl
sub
push
cli
test
imul
shr
mov
mov
mov
test
shll
sti
cld
cwtl
andb
sub
push
mov
adc
rolb
test
mov
xchg
push
test
fs
inc
fidivrs
insb
lcall
rcrl
loop
lret
movl
inc
sbb
stos
xchg
mov
pop
pusha
mov
cs
lcall
fs
out
cmpl
fsubrl
fnstcw
call
mov
jmp
sbb
shrl
je
cmp
xor
pop
cmp
mull
arpl
arpl
lret
xlat
loop
ja
and
jb
invd
jnp
add
out
fldt
aam
rcrb
pop
jg
sbb
rolb
mov
sbb
fucom
jmp
xchg
sbb
mov
aaa
cmp
jbe
cmp
imul
gs
les
out
notl
jo
and
cmp
adc
jae
movsl
bound
adcl
das
mov
or
or
je
fsubp
cmp
cmovp
sub
adc
fildll
add
push
into
fbstp
xor
adc
std
mov
push
xchg
gs
mov
mov
xchg
inc
mov
adc
cmpsl
fimuls
mov
repnz
push
sub
adc
push
out
sub
ja
pop
je
shl
insb
andb
inc
stc
mov
rcrb
loop
mov
mov
out
rcrl
cli
mull
pop
adc
ret
push
aaa
int
push
mov
xchg
sahf
mov
mov
xor
je
pushf
punpcklbw
push
mov
divb
rolb
dec
mov
mov
lcall
or
outsl
mov
mov
cmp
shll
into
mov
cs
sub
aaa
and
stos
gs
aad
outsl
subb
inc
mov
lcall
jne
fld
adc
adc
lds
dec
in
adc
xor
addr16
in
popa
xchg
jnp
mov
sti
inc
jg
xor
sar
jae
not
mov
push
jo
mov
ljmp
dec
enter
mov
pop
gs
inc
sub
jg
mov
jg
test
push
and
cmp
lret
repnz
jg
sti
loopne
imul
and
mov
jne
mov
jb
jno
das
out
mov
js
push
or
xchg
movsl
cmpsl
jecxz
push
arpl
scas
inc
sbb
xor
pop
mov
enter
sub
pusha
and
jmp
cld
das
push
cmp
xor
fnsave
rclb
subl
sti
cmp
hlt
or
in
add
jmp
or
mov
sub
fdivp
cmp
mov
mov
or
repnz
mov
mov
jge
cmovnp
out
xor
pusha
cmp
ret
mov
mov
scas
push
xchg
pop
sahf
inc
in
out
mov
mov
xchg
pop
push
mov
add
into
sub
inc
xor
outsb
pushf
mov
sbb
and
cmp
inc
dec
loop
sbbl
rcll
cmc
lods
xor
sti
inc
jae
aam
xor
push
cmpl
cmp
aas
insl
sub
jno
mov
adc
and
lods
pop
out
xchg
jno
pop
push
lds
das
lds
xchg
or
fldcw
add
adc
shlb
popa
sar
cwtl
loope
xchg
lods
xor
xor
or
sub
adc
cld
pop
dec
pop
pop
sarb
inc
mov
adc
je
push
mov
add
not
ret
dec
and
lods
dec
sti
sbb
xor
mov
std
leave
mov
int3
das
inc
out
movsb
leave
pop
ja
mov
fwait
ret
jo
scas
aam
inc
xchg
sahf
push
push
and
les
mov
call
or
mov
shrl
cmp
inc
and
xor
pop
insb
nop
dec
cmp
cli
orb
inc
rcll
leave
push
loop
prefetchw
fwait
cmp
out
testb
out
in
inc
aaa
daa
dec
ret
cs
scas
mov
test
add
out
sub
aad
jg
push
and
sbb
jbe
fwait
mov
mov
fimull
sub
mov
lret
xchg
loop
cltd
xor
rcr
xchg
cmp
cmc
mov
jmp
mov
inc
in
testb
addb
push
pop
xchg
pop
jl
jns
loop
fsubs
fbstp
jb
imul
lret
add
dec
push
sub
jo
inc
lock
cmpsb
movsb
lret
sub
mov
cmp
lret
mov
sbb
mov
popa
call
push
nop
mov
iret
adc
mov
movsb
lahf
mov
dec
insb
ds
push
mov
fsubl
aas
push
stc
cmp
sbb
mov
mov
loop
aas
ljmp
hlt
mov
jne
dec
push
mov
mov
dec
fdivrl
scas
repnz
mov
divb
jbe
mov
in
enter
into
pop
int
mov
xchg
jno
ljmp
mov
cmp
push
jmp
push
outsb
inc
cmp
sti
pop
jo
push
inc
pop
add
jg
adc
fs
xor
push
dec
push
leave
stos
stos
repnz
add
std
dec
lock
push
mov
js
in
in
sub
or
faddl
pop
loop
push
add
sbb
xchg
push
cmpl
dec
notb
mov
cmc
test
lret
add
aad
mov
push
outsl
pop
jo
std
out
xor
aaa
fwait
test
iret
jmp
pop
mov
and
and
xor
cmp
fdivrs
push
pop
fcmove
and
xchg
xchg
dec
dec
aas
pop
cmc
push
jle
sub
mov
inc
pushf
mov
mov
push
fxam
and
outsl
sub
and
jno
daa
sarl
cmp
push
mov
gs
outsb
test
jmp
sbb
in
frstor
orl
cmpsb
add
shr
inc
adc
sub
sarb
test
add
xchg
pop
dec
leave
or
mov
es
mov
mov
mov
add
stc
cld
pslld
popf
imulb
or
cmp
or
repz
sub
jno
mov
xor
sub
sub
add
popf
imul
aaa
jbe
aas
inc
cmp
inc
clc
test
fnstcw
or
mov
pop
fwait
rclb
and
mov
inc
dec
arpl
sbb
pop
pusha
mov
pop
int
mov
sub
ds
sub
inc
shl
add
and
pushf
repnz
into
std
cs
es
in
faddp
and
fisttpll
ljmp
xchg
cli
mov
mov
pop
and
pop
xor
ljmp
jb
xor
loopne
inc
repz
add
std
or
clc
jb
test
and
cmp
clc
dec
pop
dec
les
daa
mov
icebp
jno
cmpsl
mov
lods
pop
int
cmp
xor
icebp
jle
mov
jb
xchg
scas
fldcw
xchg
add
mov
mov
mov
jp
jne
hlt
fdivrl
sbb
or
sbb
mov
repz
jecxz
inc
clc
std
sub
xor
push
mov
xorb
adc
sbb
sbb
clc
jmp
sub
mov
inc
in
mov
loope
hlt
iret
mov
add
inc
mov
cs
fldl
and
dec
stos
gs
jecxz
cmc
dec
arpl
add
andl
ret
jl
mov
or
popf
outsb
push
pushf
fstl
cmpsl
mov
xchg
dec
sub
negb
jne,pn
popf
iret
and
adc
into
jmp
jns
stos
adc
or
dec
add
shl
jle
popf
inc
frstor
cmp
cli
subl
mov
rorl
xor
sub
xchg
rcr
xchg
cmpsl
cmp
or
push
je
js
mov
les
or
cmp
mov
pop
mov
aad
nop
dec
dec
pop
stc
clc
xchg
sbb
sub
addr16
imul
push
cmpsb
pop
subl
sub
and
pop
mov
xchg
bound
xor
mov
lahf
shl
pop
mov
pop
rclb
xchg
nop
or
inc
xor
add
les
pusha
cwtl
mov
pop
sub
pop
adc
sbb
inc
xlat
or
fyl2x
inc
mov
dec
sbb
orl
mov
push
cmpsb
xor
mov
daa
addl
ret
icebp
shlb
xorl
shll
aaa
leave
jne
lret
fistpll
cmpsl
adc
out
sbb
ja
test
adc
xor
int3
adc
sub
mov
xor
outsl
cmpsb
push
leave
sbb
sub
and
cmp
xchg
repnz
cmp
mov
fistps
xor
or
dec
inc
sarb
mov
xchg
aad
pop
nop
std
add
and
stos
mov
scas
sub
sub
sub
js
outsl
mov
sub
mov
push
and
jno
pop
sahf
mov
mov
or
and
mov
adc
cmp
inc
outsb
test
cmp
hlt
outsl
sbb
pop
jnp
loope
cli
in
insl
sub
in
cmp
add
das
xor
xchg
movsb
jno
addr16
data16
lea
sarb
mov
push
icebp
sub
and
je
jbe
cmp
mov
in
mov
cmp
incb
fdivrs
jle
jecxz
test
dec
lods
sub
xor
dec
pop
movsl
stc
lcall
ficoms
out
push
adc
add
icebp
in
pop
mov
enter
jmp
cmpsl
mov
gs
js
inc
inc
dec
lock
inc
pop
or
insl
enter
push
dec
or
xor
lods
jne
loope
mov
inc
pop
stos
mov
xchg
mov
addr16
push
out
rcl
ret
loop
ss
loop
lcall
icebp
xchg
cmp
jecxz
loopne
dec
cs
cmp
out
cmpsl
in
scas
scas
dec
add
sbb
mov
mov
push
out
pop
cld
xchg
call
outsl
aaa
subb
jl
pop
mov
mov
sarb
sarl
or
cltd
mov
lods
cmp
adc
and
dec
fildl
cs
cwtl
dec
outsl
add
push
add
stos
gs
pushf
incl
subl
add
jg
inc
int
mov
mov
xor
pop
and
inc
mov
es
or
inc
mov
push
dec
sub
xchg
mov
test
dec
jmp
aas
push
dec
outsl
divb
int
adc
add
push
mov
stos
out
jbe
or
or
mov
add
in
sbb
test
dec
push
or
pop
mov
popf
mov
pop
movsb
sahf
lahf
lds
sarl
jns
pop
out
mov
xchg
jns
test
push
test
mov
fs
cmp
pop
lret
stc
jg
leave
adc
cwtl
and
pop
notb
outsl
loopne
mov
enter
mov
jmp
xchg
jl
or
data16
mov
jp
sub
aas
pusha
and
rolb
fwait
lds
out
xor
push
out
pusha
xor
add
mov
jo
push
jle
cs
jo
jecxz
ret
jle
fmuls
data16
popf
cmpsl
xor
outsb
fwait
lods
loope
xor
fistpll
push
lahf
cmpsl
sbb
jo
fdivp
pop
sbb
add
shr
push
in
cmpsb
pushf
cmpsb
jl
jo
popa
imul
xor
pop
pop
cmp
adc
mov
shlb
xor
jne
mov
test
mov
push
pop
sbb
fisttpll
pop
dec
es
inc
rclb
push
mov
fcmovnbe
jbe
daa
adc
and
pop
xchg
jo
push
cmp
cmp
cli
cmp
sub
out
jnp
sub
dec
out
incb
sti
jno
mov
aaa
mov
movl
pand
inc
bound
in
les
mov
in
mov
sti
loopne
jae
mov
mov
push
sti
mov
addl
mov
in
inc
inc
jle
daa
mov
push
fistps
add
stos
push
mov
clc
clc
push
pop
jo
stos
hlt
movsb
cli
ljmp
adc
and
mov
push
mov
repz
mov
cmp
clc
pop
jns
andb
jb
roll
sbb
lcall
fstpl
xlat
cmp
shll
test
stc
popa
mov
sbbb
or
sti
aaa
lret
adc
jnp
nop
fs
imul
andb
adc
dec
out
subl
push
add
fwait
daa
pop
mov
adc
inc
or
pop
mov
jne
cmp
jp
jnp
out
pushf
repnz
sbb
xchg
test
mov
fisttpl
stc
cmp
xor
mov
out
mov
repnz
pushf
imul
pop
cmp
out
add
or
cmovp
insb
jp
add
imul
dec
sti
sbb
dec
mov
pop
mov
out
xchg
sbb
loope
cmc
lret
clc
sbb
rorb
xor
add
jbe
lahf
roll
or
cmp
add
adc
jg
lcall
scas
or
jle
inc
jb
insl
icebp
pop
mov
and
lea
add
cwtl
es
add
out
in
fmull
lea
mov
pop
cltd
mov
insl
pop
dec
pop
arpl
dec
dec
xlat
repnz
or
repnz
ja
push
enter
push
cmpsl
xor
push
and
loope
xchg
adc
jl
int3
in
outsb
negl
and
pop
push
movsl
xor
sub
mov
add
mov
jecxz
jl
loope
mov
cmp
into
push
pop
dec
in
adc
movsl
ret
addl
mov
push
sarl
ror
pop
push
neg
sub
adc
cld
and
fwait
cmpb
rcll
es
aaa
ret
mov
int3
and
cmp
test
insl
mov
scas
loope
lahf
pop
pop
mov
and
iret
jo
mov
add
sti
xor
js
idiv
xchg
mov
push
dec
xor
fimull
mov
fwait
mov
lahf
clc
enter
test
xchg
out
cltd
cmp
in
dec
sub
ss
push
jnp
xchg
inc
ljmp
shrb
pop
fbstp
jmp
and
into
or
sbb
daa
and
in
stc
mov
hlt
adc
in
mov
mov
cmp
subb
jg
es
mull
push
test
xor
xchg
xchg
fwait
or
add
lods
jbe
add
push
sub
shl
jnp
add
aad
test
adc
subb
sti
push
jl
mov
or
mov
outsl
fistpll
movsb
fiaddl
mov
dec
and
xor
pusha
pop
ljmp
sub
in
fdivrl
cmp
movsl
xchg
into
ret
mov
lret
mov
cmp
push
insl
cmp
sbb
aaa
add
pushf
dec
negl
mov
cmc
adc
cmpsl
cmc
mov
sbb
call
xor
mov
push
aas
push
lret
cmp
inc
lock
cmp
mov
fwait
dec
fs
inc
movsl
push
inc
jno
fs
fiaddl
cmpsb
test
std
adcl
shrb
dec
das
test
push
in
shll
aas
ror
shlb
xor
sub
test
dec
sbb
sbb
cmp
push
pusha
cs
shll
test
into
std
jne
into
inc
cmp
add
sub
and
sbb
dec
pop
fisubs
lock
sub
loop
inc
es
add
fs
outsl
sbb
stos
cmp
pop
sti
sbb
ss
int
scas
testl
inc
xchg
jle
inc
outsb
loope
jne
push
fnstenv
lret
adc
xorl
ret
dec
or
lret
lds
movsb
push
xchg
jg
pop
sub
insb
imul
cs
push
nop
arpl
jnp
inc
jae
add
sbb
lods
inc
popf
inc
shlb
arpl
movsb
in
mov
ficomps
clc
dec
nop
lods
sub
push
ret
xlat
adc
movsl
dec
iret
nop
arpl
fsubrs
outsl
pop
rclb
gs
das
xor
popa
lret
mov
das
mov
mov
dec
fadds
hlt
and
jae
setns
dec
clc
sub
daa
add
call
mov
mov
or
xorb
lock
xchg
icebp
in
in
repz
mov
pop
mov
push
add
popf
fdivl
leave
cltd
mov
pushf
mov
imul
dec
pop
ficomps
negb
hlt
dec
mov
orl
xor
scas
scas
sahf
push
xchg
call
xchg
sbb
lahf
jg
loope
shrb
aas
lret
loop
and
je
in
decb
mov
cmp
dec
inc
cwtl
inc
cmp
repz
fs
out
nop
jmp
stos
in
mov
or
push
lds
mov
out
jo
inc
mov
test
jle
pop
dec
xchg
add
mov
jno
dec
int3
mov
jne
add
arpl
in
jmp
pop
push
or
fisubl
sarl
mov
mov
inc
mov
cmp
jl
loope
cmc
les
cmc
adc
loope
fwait
sub
xor
and
je,pt
addl
inc
dec
jmp
pop
repnz
and
mov
sbb
xor
cli
dec
out
sbb
enter
or
ret
fnstsw
popa
jns
xchg
ret
shll
push
in
testl
xchg
pop
leave
bound
sbb
dec
fisttps
push
sub
iret
xchg
inc
mov
mov
cmp
sub
arpl
add
mov
imul
sahf
mov
and
into
insb
scas
loopne
push
popa
cmp
pusha
jp
or
lods
iret
mov
xor
mov
jno
addl
adc
ret
xchg
mov
inc
test
push
xor
xchg
inc
push
sbb
ss
mov
rcl
sub
jno
xchg
sub
cltd
scas
push
bnd
test
sub
mov
xor
sarb
sti
jnp
ja
jbe
xchg
jo
imul
add
or
mov
std
lahf
repnz
or
sti
cmp
sbb
movsl
dec
stos
pop
pop
aas
mov
cli
mov
loope
movsl
mov
xchg
fidivrs
jmp
adc
adc
dec
push
jl
test
test
incl
mov
push
outsb
dec
mov
repnz
cwtl
xchg
shlb
mov
icebp
xchg
jne
pop
leave
out
inc
rcr
push
das
shrb
outsl
mov
push
out
popa
mov
and
incb
popa
je
repnz
jbe
add
or
xor
negl
aam
mov
lret
cmp
push
sbb
stos
add
mov
idivl
das
mov
xchg
scas
lds
shll
jle
jg
enter
mov
xlat
mov
dec
bound
mov
aas
lea
dec
mov
rorl
gs
sub
iret
jno
insl
jg
rorb
aaa
mov
daa
into
adc
adc
jecxz
ffree
add
loop
pop
scas
pop
leave
adc
mov
pusha
scas
sub
aaa
mov
test
push
jns
ds
jns
push
jne
and
fcoms
inc
xchg
push
popf
lahf
add
jmp
jl
and
and
lret
cli
or
ljmp
xlat
adc
mov
mov
into
pop
sub
adc
in
and
adc
cmp
enter
cmp
mov
push
scas
popa
lods
arpl
sbb
rol
xchg
pushf
dec
lahf
in
jb
andl
shr
xchg
push
dec
sub
jb
mov
lahf
andb
mulps
xchg
std
mov
out
cmp
faddl
mov
mov
xchg
cmpsl
mov
mov
dec
adc
mov
popa
movsb
in
mov
pusha
std
and
iret
jbe
sub
cmp
in
les
adc
jge
mov
sub
xchg
or
cmp
fimull
int3
fnstenv
jecxz
or
or
shlb
test
mov
jle
mov
out
mov
clc
fwait
xchg
lods
xchg
jp
jle
push
xor
out
jl
jns
pop
addr16
mov
shrl
enter
stos
cli
das
adc
push
mov
pusha
nop
push
and
das
push
imul
iret
popf
dec
inc
sahf
jp
data16
scas
in
int3
add
inc
adc
add
inc
jge
cmpsb
mov
mov
outsb
dec
loopne
pop
cmpsl
xchg
mov
into
mov
mov
adc
cmp
movl
jne
cmp
movl
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
data16
shll
lret
fiaddl
sbbl
mov
cmp
inc
ret
leave
dec
cld
mov
push
sbb
or
push
or
mov
mov
jecxz
dec
cltd
ds
outsb
clc
mov
orl
in
shl
or
es
push
dec
enter
pop
std
pop
mov
and
xchg
sbb
mov
or
jns
fbstp
addb
test
leave
dec
mov
dec
loopne
and
mov
cld
mov
mov
adc
cld
jge
sbb
push
enter
xor
aaa
andb
movsb
clc
loop
or
push
leave
loop
pop
movhps
pop
ltr
lods
hlt
push
inc
mov
adc
cmc
int3
icebp
ljmp
subl
xchg
pop
mov
mov
cld
jl
mov
jns
sbb
add
xor
aam
in
movsb
stc
in
enter
and
in
mov
and
dec
jnp
xor
jno
int3
ljmp
push
push
cmp
stos
pop
popl
sub
fisttps
jle
ja
push
sbb
add
ljmp
cwtl
and
cmp
loope
stc
pop
ss
mov
out
dec
inc
mov
xor
je
push
insl
mov
and
pop
pop
jmp
inc
iret
lods
test
pop
icebp
cmpsl
pop
xchg
out
jp
sbb
movsl
xchg
shl
push
cmpsb
mov
btr
push
xchg
fnstenv
lret
mov
mov
cmp
cs
fwait
xchg
out
pop
fsubrl
fnclex
outsl
dec
aad
xchg
push
out
mov
pop
pop
fmuls
movsl
xchg
daa
lcall
pop
outsb
pop
pop
sarb
mov
dec
fisubl
xor
xchg
add
lods
or
test
pop
fildll
add
mov
jae
adc
js
loop
mov
sbb
je
cltd
add
pop
cmp
out
sub
in
incb
pusha
or
into
hlt
rcrb
rcrl
add
pop
inc
mov
pop
fistps
push
mov
push
cmp
jmp
dec
daa
pop
std
das
jno
mov
lahf
outsl
and
scas
mov
or
or
ss
mov
cmp
xor
gs
jne
in
and
xchg
xor
cld
loop
sbb
mov
test
push
ficomps
mov
inc
subb
stc
or
adc
scas
es
mov
xor
jmp
ds
in
push
loop
cmp
cmpsb
loope
mov
insl
mov
inc
movsb
aas
mov
push
idivb
xor
pop
mov
mov
mov
adc
add
mov
dec
dec
ficoms
add
push
jmp
pop
ja
push
ss
jb
pop
scas
sbb
xor
push
xor
dec
mov
gs
inc
xchg
cmp
and
sub
or
mov
pop
jne
fwait
jns
adc
dec
idiv
es
push
mov
stos
xchg
push
mov
pop
jge
cmpsb
popa
add
push
imul
imul
xchg
ret
icebp
xor
inc
inc
iret
into
xchg
add
addr16
mov
lods
fcom
sti
xchg
push
mov
push
dec
push
push
sub
mov
mov
jno
jl
imull
inc
call
lahf
lock
cmp
adc
cmp
or
push
xchg
push
into
fimuls
stos
aaa
pop
xor
cmp
popf
adc
jp
fldl
mov
addr16
sti
shrb
jo
rcrb
push
adc
pushl
imul
push
js
movsb
ret
sub
in
aam
adc
push
es
mov
out
pop
stos
inc
adc
jmp
ficoms
mov
jecxz
mov
mov
mov
add
jnp
cmp
std
mov
fdivrs
mov
add
push
cmc
mov
sti
push
sysret
mov
std
fnstenv
loope
mov
fwait
sbb
rcll
div
push
test
pop
ror
test
sub
ljmp
push
push
lods
bound
pop
add
out
rcll
inc
mov
dec
or
jp
aas
pop
inc
stc
imul
cmp
sub
pop
ss
sbb
sbb
cmp
in
fwait
popf
fmul
sbb
push
arpl
mov
orb
stos
pop
test
push
add
addl
or
add
mov
call
lock
pop
or
mov
mov
jns
xchg
add
fsub
jecxz
aas
add
push
mov
mov
push
dec
pop
jg
jae
cmpsb
xor
sub
mov
mov
lcall
shrl
lahf
jb
push
js
xor
movsl
dec
arpl
fstpt
dec
ret
cmp
ja
add
test
aad
test
dec
or
push
imul
test
fadds
cltd
and
push
dec
and
pop
adc
inc
dec
call
and
xor
fcmovnb
cmp
jecxz
sbb
test
js
add
cmp
shlb
add
loopne
push
push
add
pop
fldt
and
andb
orl
push
pop
out
outsl
fdivrs
push
out
push
or
std
popa
pop
xchg
and
sbb
xor
and
aas
roll
aas
and
das
je
pop
xchg
cmp
push
cmpsb
jae
add
pushf
dec
shlb
out
icebp
mov
add
push
jns
int
aas
sub
push
push
out
mov
dec
out
rorb
es
xor
or
jl
out
sbb
in
stos
jecxz
push
or
lds
shrb
adcl
aas
stos
pop
shrl
mov
cwtl
cli
iret
andl
or
dec
aas
ficoml
sbb
js
cltd
jnp
mov
cwtl
je
lea
in
xchg
es
dec
cld
shr
add
sub
stos
notb
push
js
js
push
rolb
mov
add
add
mov
fs
cmpsl
das
movb
mov
push
adc
int3
inc
rol
std
rcr
pop
mov
ficoml
lret
or
addl
xor
scas
in
xchg
add
jo
xchg
jmp
jecxz
push
fcoms
xchg
sub
test
xor
call
aad
lds
aam
sbb
outsl
frstor
scas
fisubl
lds
iret
or
nop
addr16
jae
rcll
push
pop
mov
mov
sbbb
xchg
enter
mov
aas
loop
inc
mov
jb
subl
cld
sbb
xchg
mov
sar
lock
sub
pop
dec
bound
daa
daa
shlb
mov
dec
loop,pt
jecxz
scas
xchg
outsl
cmpsl
loop
xchg
lods
addr16
sbb
add
int
pop
push
sbb
popa
loope
lea
in
lds
mov
cmp
jp
cmp
cmp
inc
mov
mov
hlt
cmp
clts
sti
xchg
movsb
xor
lea
xchg
mov
test
cmp
jo
jg
cld
jne
fbld
xchg
stos
test
and
cmp
loop
mov
idivb
pcmpeqd
outsb
xchg
in
punpcklbw
lret
push
sahf
push
mov
xchg
and
xor
sub
sbb
movsb
mov
icebp
mov
mov
sbb
xchg
sbb
adc
ja
ljmp
adc
sub
add
xchg
inc
push
adc
stos
jp
ja
or
aaa
xlat
jb
ret
outsl
jle
xor
inc
pushf
imul
sbb
vmovmskpd
xchg
inc
lock
xchg
in
jnp
inc
push
or
sub
sbb
sub
cmp
or
jl
xchg
cmp
fisttps
push
add
popa
push
dec
je
push
lahf
push
out
inc
adc
int3
pusha
xor
clc
push
arpl
repnz
enter
mov
jmp
lock
push
rclb
adc
fimuls
repnz
pop
inc
jmp
mov
fildll
fwait
mov
out
out
xlat
xor
push
mov
jle
cs
add
cmp
inc
or
testl
int3
mov
mov
inc
dec
jmp
inc
insl
lret
xor
ss
jns
dec
jns
enter
mov
test
imul
js
filds
out
inc
adc
inc
xchg
add
mov
lds
outsb
fisttpl
stos
lret
in
inc
mov
fiadds
test
enter
mov
movsb
bound
mov
in
adc
rcl
lret
in
js
mov
add
ja
movsb
fdivs
inc
mov
call
adc
xor
lret
push
out
xor
add
mov
inc
aaa
mov
adc
fldt
ret
push
adcl
mov
rorb
imul
push
aas
pop
lcall
add
cltd
dec
inc
stc
push
jp
iret
out
xor
bswap
push
and
and
cmp
insl
lahf
test
jno
iret
or
sub
and
add
inc
push
sbb
push
addr16
inc
imul
lods
add
repnz
adc
data16
sbb
adc
filds
outsl
insb
andl
daa
mov
in
popf
mov
adc
mov
ljmp
fadds
push
sbb
sub
mov
mov
dec
std
jle
inc
xchg
cltd
jl
lret
andb
xchg
dec
mov
xchg
fdivs
mov
fsub
outsl
lret
mov
leave
mov
sbb
data16
aam
fucom
mov
out
sarl
and
lcall
ds
sbbl
scas
fidivrs
cmp
or
mov
std
ljmp
shlb
mov
inc
mov
adc
icebp
daa
stos
xor
xor
mov
inc
ret
jb
jl
or
dec
call
jo
sbb
pop
lock
hlt
ret
mov
dec
sti
jae
mov
aas
int
adc
pushf
dec
mov
mov
jecxz
cli
jmp
icebp
fmuls
xor
hlt
mov
add
jno
mov
test
movsl
pop
inc
pop
jbe
rclb
sahf
xchg
dec
cltd
xchg
shlb
mov
mov
jbe
mov
movsl
xchg
jp
rep
in
addr16
scas
push
jle
test
stos
pop
popa
andl
inc
imul
loope
cmpsl
mov
std
and
in
lds
test
mov
aam
and
loope
adc
test
mov
andb
imul
sahf
lret
imul
sbb
lahf
fildl
adc
std
cmp
sub
in
or
movsb
dec
mov
pop
icebp
xor
jmp
shlb
popf
adc
enter
pop
mov
int3
je
testb
call
stos
dec
std
cmp
loopne
lock
dec
or
adc
push
jle
adc
cmc
dec
mov
ss
mov
inc
dec
and
and
insb
mov
in
mov
outsl
adc
cmp
addr16
cld
ljmp
sub
das
pop
ljmp
fucom
shlb
jge
orb
stos
movsl
cmp
xchg
cmp
pushf
mov
fistpll
mov
inc
lds
pop
movntq
scas
mov
push
adc
fistpl
fwait
dec
sbb
adc
mov
in
stos
aad
xor
std
sub
data16
inc
scas
jle
imul
loope
cwtl
arpl
enter
cmp
es
sbb
jne
roll
cmp
outsb
stc
shrb
pop
cmpsl
mov
cmp
mov
xchg
pusha
je
jo
mov
push
jbe
cli
or
mov
mov
test
gs
imul
shrl
mov
aad
xchg
xor
movsl
testl
ud0
stc
scas
push
lret
jne
mov
mov
es
sub
jle
jnp
sub
xor
mov
xlat
into
sub
lret
mov
fdivr
lods
ret
mov
lret
mov
push
imul
enter
cwtl
mov
sbb
pop
push
adc
cmpsl
stc
pushf
jne
or
inc
test
xchg
mov
mov
repnz
sbb
scas
xchg
pop
roll
mov
or
clc
pop
mov
jg
push
cmp
xchg
jno
xor
adc
movsb
adc
push
cmp
mov
pop
jb
xor
mov
xchg
add
jl
mov
or
dec
adc
jmp
and
sub
arpl
adc
and
jge
mov
xchg
cmp
cmp
adc
in
loopne
add
jne
js
xor
and
nop
xchg
xchg
ss
mov
push
mov
pop
loop
jns
mov
movsb
cmp
bound
push
xchg
insb
adc
cmc
enter
pop
fistpl
clc
push
and
movsl
arpl
inc
xor
sbb
cmpsb
adc
fisttpl
and
pop
jmp
test
iret
daa
dec
mov
into
cmp
adc
jmp
test
aam
cmpsl
je
dec
cmp
jo
mov
in
movsb
mov
pop
cmp
imul
dec
jo
sbb
add
bound
sub
inc
jb
inc
movsl
push
clc
out
call
lea
scas
popa
cmp
testb
hlt
fidivs
adcl
in
test
and
out
scas
push
jb
dec
lret
adc
inc
stos
mov
je
dec
ja
icebp
call
fwait
out
es
and
sub
jg
xor
inc
ret
leave
inc
lret
mov
insb
and
sbbl
imul
incb
or
adc
sbb
shrb
sbb
adcb
test
scas
pop
xchg
sbb
sbb
sbb
sahf
pop
dec
jg
fwait
mov
xchg
adc
xor
fwait
push
jle
cmc
andl
pop
ret
mov
and
mov
ss
imul
mov
insl
fildl
mov
nop
aam
idivb
jmp
and
push
stos
and
icebp
rorb
pop
sti
cmp
outsl
xchg
push
int
add
fidivs
nop
call
push
sbb
pop
pushf
and
inc
add
dec
fadds
fdivrl
adc
inc
stos
out
imul
fs
scas
out
pop
cmp
xchg
imul
out
andb
sbb
cltd
push
sbb
lahf
ret
mov
cs
mov
test
outsb
adc
mov
mov
shl
xchg
aad
sbb
lods
sub
pop
dec
and
jl
gs
and
ds
pop
adc
dec
in
mov
test
into
xchg
inc
jo
mov
pop
push
mov
aam
inc
ja
jns
ret
inc
mov
mov
cs
hlt
sub
push
add
jl
rcrl
ljmp
dec
add
mov
inc
mov
insb
sub
lcall
mov
xorl
movsb
cld
in
aad
out
pop
std
jbe
aaa
jnp
cmp
test
sbb
cs
aad
rorb
jb
in
movb
bound
xchg
aad
inc
and
xor
cmpsb
xchg
repnz
test
rorb
lret
push
jmp
seta
lcall
mov
mov
out
push
repz
clts
cmpsl
addl
or
and
ret
stos
pusha
inc
pop
daa
in
mov
out
jnp
sbb
push
sti
sub
sub
aad
lock
lret
push
pop
pushf
stos
mov
cld
fwait
xor
mov
jmp
pop
int
cld
mov
push
and
hlt
popa
in
sbb
in
push
inc
bound
cmp
adc
lss
mov
shl
lds
sti
movsb
pop
xor
int3
mov
out
clc
into
mov
jo
sub
insl
in
adc
push
mov
dec
cmp
jmp
aaa
loopne
jb
cmp
fwait
mov
orb
stos
pop
ret
leave
stos
test
stos
jecxz
xchg
gs
loop
jbe
cmp
jo
test
out
andb
mov
pop
adc
fwait
xchg
push
dec
adc
pop
imul
das
pushf
lret
pusha
ja
jne
shrb
leave
add
orb
mov
adc
add
aam
sub
aas
out
dec
inc
xor
scas
jns
in
xchg
aaa
and
pop
js
pop
fisubs
hlt
out
arpl
dec
pop
sub
pop
jnp
test
fxrstor
fsubrl
push
sbb
dec
inc
outsl
lret
fwait
jecxz
cmp
clc
lret
add
cmpl
push
cmp
repnz
jns
mov
cs
push
pop
int3
fcmovnb
mul
cltd
lcall
outsb
outsl
and
cli
sbb
ret
std
inc
test
insb
dec
jnp
leave
mov
jne
lcall
xchg
mov
sbb
out
mov
mov
cli
or
insl
cmp
punpcklwd
jecxz
mov
cmp
loop
repnz
jp
aaa
lahf
cmp
nop
fisttps
dec
in
xchg
pop
jmp
outsb
push
fists
enter
pop
jp
cld
jmp
xchg
inc
imul
xchg
js
dec
out
xor
pop
ds
push
xchg
pop
mov
iret
call
movsb
pop
outsl
push
dec
sub
push
lahf
clc
scas
jecxz
fists
bound
ja
xor
pusha
dec
pop
jns
lret
xorl
in
jle
out
cs
dec
leave
enter
fistps
fisttpl
testl
dec
insl
pop
jo
add
jb
mov
or
sahf
xchg
out
sti
out
adc
pop
loope
xlat
pushf
ret
push
jno
rcl
scas
jmp
push
add
lock
and
imul
imul
xchg
lcall
mov
inc
sbb
aas
es
jnp
loope
xchg
jecxz
xchg
and
cmpb
test
mov
inc
lcall
jle
push
out
add
scas
mov
mov
jnp
push
js
sahf
pop
mov
jne
mov
jbe
sub
imul
dec
inc
stos
ss
xor
sub
xchg
sub
cmp
test
lahf
clc
std
inc
cmp
int
push
lret
rclb
mov
sbb
call
into
fiaddl
sbb
insb
aam
xchg
ds
mov
cli
sub
mov
xchg
mov
je
cltd
xchg
add
adc
outsl
imul
xchg
mov
out
faddl
push
mov
xchg
and
sbb
pop
inc
ja
xor
test
popf
push
std
in
daa
icebp
or
lds
incb
or
pop
cmp
inc
mov
out
and
neg
data16
sub
cmpl
out
rorb
mov
cmp
aas
xor
test
mov
xor
push
arpl
lcall
xchg
add
loope
pushf
test
inc
imul
cwtl
jp
cmc
ss
loopne
cmc
int3
loopne
mov
adc
jge
sub
pop
bound
ficomps
pop
loopne
cmpsb
das
xor
mov
leave
and
test
repnz
sarl
sub
mov
push
icebp
ret
add
jne
push
sbb
mov
aas
leave
sbbb
js
orl
sub
loopne
lret
cmp
sbb
cltd
stc
pop
rclb
and
in
add
and
xor
mov
pop
out
pop
test
mov
mov
gs
popf
ret
xchg
es
dec
stos
adc
adcl
mov
sub
mov
fmul
int3
lock
outsb
dec
mov
push
call
jecxz
lahf
push
and
enter
xchg
xchg
test
pop
mov
add
xchg
inc
mov
inc
test
mov
lea
jp
push
mov
ds
arpl
cmp
ss
dec
notl
xor
sub
lcall
adc
leave
mov
sbb
and
and
pop
xchg
mov
inc
cmp
cmp
ljmp
loope
into
pop
and
push
sub
sbb
popf
cltd
das
add
cmp
notl
mov
cmc
adc
fidivrs
pop
adc
or
nop
dec
inc
mov
clc
pop
mov
test
lret
mov
test
cltd
xchg
xchg
in
mov
mov
imul
or
imull
out
lret
daa
cld
enter
jecxz
lds
mov
cmp
cmpxchg
loope
mov
lret
scas
xchg
sti
inc
add
pop
test
movsl
rcrl
pop
inc
xor
pop
xchg
cmp
push
mov
xor
sbb
bnd
xor
into
loope
push
das
xchg
xor
scas
inc
out
dec
xchg
mov
adc
test
mov
push
fs
xchg
hlt
xor
leave
test
jnp
sub
icebp
adc
test
pop
or
sub
adc
aas
xchg
fbstp
rclb
mov
jle
xchg
or
jne
xchg
pusha
rorl
call
pop
enter
mov
push
cwtl
push
sub
mov
daa
xchg
inc
mov
dec
cld
insb
xchg
call
cmp
scas
clc
adc
dec
lret
jle
loopne
imul
shl
pop
xchg
adc
xor
fdivrl
xchg
shll
push
sub
popa
push
or
test
add
jg
mov
aad
mov
sub
lret
sub
and
gs
pop
imulb
shll
pop
mov
push
dec
sarl
sub
mov
loope
cld
fdivrs
pop
and
mov
mov
insb
lea
push
in
int
sub
mov
mov
push
ss
stc
inc
in
mov
pop
jbe
sub
adc
daa
xchg
add
rorl
cmp
inc
sti
xchg
cmp
rcll
gs
pop
xchg
adc
lods
sbb
leave
add
mov
movsl
test
divb
push
inc
adc
in
in
js
and
in
and
out
daa
lea
loopne
in
cmpsb
sub
dec
lcall
sbb
test
push
push
mov
sub
pushf
mov
dec
out
push
xchg
daa
push
mov
in
testb
cs
addb
mov
pop
icebp
pusha
sti
out
in
repz
mov
scas
jp
jge
mov
jge
leave
call
test
cltd
scas
jp
dec
adc
xor
and
fidivrs
bound
call
dec
mov
mov
jb
sarb
and
loop
cmp
sbb
cmpsb
fucomip
popa
dec
inc
aad
mov
sub
mov
mov
dec
lock
inc
rcrb
loopne
fwait
cmpsb
popa
in
pop
push
lea
cmovs
ljmp
daa
or
pop
jmp
test
and
repnz
xor
push
mov
mov
jmp
mov
enter
mov
ljmp
xor
addr16
mov
pop
out
xchg
push
inc
lds
mov
leave
and
mov
mov
fidivl
push
cmp
test
repnz
fsubr
adc
xchg
cmpsl
lods
cmp
das
jbe
jge
xor
and
jle
aaa
insb
lea
insb
and
nop
push
cmp
mov
andb
shrl
mov
push
cwtl
jne
mov
push
push
jae
and
lds
movsb
add
call
sbb
adcb
adc
stc
loope
xor
jno
popa
pop
jecxz
sti
arpl
cmp
ljmp
mov
and
xor
es
inc
or
js
arpl
cmc
xor
xchg
hlt
xchg
or
push
addr16
fmull
jmp
int
stos
icebp
imul
mov
cmpsb
pop
xlat
mov
inc
shll
add
bound
rorl
fcmovne
cmpsb
jge
xor
imul
stos
sub
fmull
nop
or
dec
cltd
mov
mov
fisttpll
push
sub
insb
insb
mov
sub
push
xor
cmc
xchg
xchg
pop
int
cli
lea
lcall
mov
pushf
push
dec
cmp
or
sti
adc
mov
inc
lock
mov
jg
sti
jbe
mov
cli
sub
fcomi
jnp
fbstp
adc
fisubrs
jp
fisttps
popa
push
ret
inc
dec
adc
and
sub
popa
xor
xchg
adc
loopne
mov
add
les
das
jp
lahf
in
add
repz
cmp
or
cld
pop
cmpsl
insb
push
scas
inc
dec
and
fs
cmc
mov
mov
inc
pusha
xchg
and
adc
push
ss
out
sub
ljmp
fdivl
xor
test
repnz
lds
ja
lcall
sbb
daa
push
out
icebp
repnz
stos
adc
inc
dec
inc
aas
push
xor
dec
pop
stc
into
out
shlw
push
cld
sub
jns
xchg
aam
push
ss
jne
jnp
stc
xor
fs
xor
xchg
dec
xor
xchg
popa
fisubl
iret
cli
mov
inc
sub
imul
ja
fwait
xchg
clc
jl
stos
je
sbb
cli
lahf
adcb
xchg
icebp
add
xchg
pop
addr16
pop
and
into
sbb
mov
mov
dec
sub
fs
xchg
dec
in
jmp
or
and
cwtl
cmpsl
cmp
inc
pop
mov
je
lea
imul
popf
cmc
sarb
mov
jge
vpaddw
pop
bound
daa
lods
lods
jno
adc
dec
push
xchg
rcrl
push
jmp
loop
sub
mov
in
cmp
mov
push
mov
adc
frstor
dec
xlat
inc
push
test
imul
aad
mov
roll
stc
inc
jb
add
jnp
push
gs
fistpll
mov
mov
xchg
iret
mov
sub
orb
bound
int3
mov
mov
dec
cmc
sbb
je
popa
jle
cmp
daa
cmc
and
hlt
mov
jb
sbb
js
jmp
mov
xor
stc
clc
inc
ror
xchg
icebp
mov
out
test
leave
repz
mov
sti
cmp
mov
inc
in
jae
movb
pop
test
xchg
mov
pop
mov
mov
pop
lds
jnp
hlt
fstpt
push
pop
or
jg
cmpsl
lret
sub
call
jno
es
sbb
loope
mov
sub
pop
mov
leave
mov
ret
mov
jecxz
push
add
adc
push
add
or
das
adc
jb
in
cld
jb
shrl
and
push
aad
arpl
mov
arpl
jle
scas
nop
mov
loop
fs
mov
test
add
inc
adcb
xchg
ja
jge
push
and
pop
in
jl,pt
aam
pop
lret
and
xchg
add
test
jno
shr
pop
movsl
push
repnz
xchg
dec
call
dec
ret
mov
and
popf
fs
add
inc
rclb
out
cmpsl
stc
js
leave
dec
jne
sub
ret
push
adc
or
rorl
lea
xchg
inc
hlt
jne
addr16
jmp
jo
in
jle
movsb
and
xchg
mov
out
repnz
aam
mov
mov
js
cmp
mov
sbbl
mov
mov
xor
out
jle
pop
jae
or
sub
fucom
sbb
mov
leave
push
data16
mov
push
push
js
std
or
push
orb
inc
les
and
push
mov
jge
lcall
adc
arpl
jl
jno
mov
fs
stc
rcrb
daa
mov
mov
and
mov
jb
cmp
std
clc
dec
xor
mov
aaa
adc
jge
pop
pop
nop
add
mov
repz
mov
nop
adc
mov
inc
jnp
pop
jbe
mov
stos
pushl
dec
sub
pop
mov
iret
jae
xor
jecxz
stos
bound
push
int3
jnp
stos
adc
not
not
mov
cmp
int
cwtl
pop
xlat
dec
and
shl
in
fcoms
mov
dec
mov
lods
jb
lock
xor
or
lahf
movsb
fstl
mov
inc
or
jp
jae
and
int3
sub
push
adc
sbb
cmp
sub
mov
addr16
or
dec
scas
sbb
pop
fisubl
pmaddwd
rcll
cmp
sahf
rcl
add
mov
sbb
frstor
stc
pushf
mov
test
pop
inc
lods
outsl
movl
scas
xchg
into
push
lods
fsubrl
out
sub
pop
test
in
mov
and
xchg
scas
outsb
jge
mov
push
inc
lahf
jmp
xchg
push
or
pop
pop
je
outsl
outsb
adc
or
ret
and
adc
clc
dec
shll
adc
xor
outsl
cmc
inc
mov
fwait
push
jno
data16
jg
mov
out
fidivl
aad
sbb
cmp
jb
mov
add
mov
and
ds
sub
cmc
into
ss
aas
jbe
repz
hlt
test
in
push
es
dec
loope
insl
xor
inc
lods
mov
push
scas
lahf
shll
add
in
ja
ds
insl
mov
inc
imul
sbb
js
lret
and
fildll
cmp
pslld
dec
out
inc
add
jle
xchg
or
test
mov
mov
arpl
or
sahf
mov
movsl
nop
mov
xchg
dec
notb
cmp
inc
sub
imul
icebp
jne
mov
lcall
imul
cmpsl
dec
xchg
pop
sub
jl
and
shll
mov
sahf
rclb
xchg
mov
aam
push
pinsrw
shlb
and
lcall
shll
in
dec
test
enter
cli
leave
jl
mov
jp
cmp
adc
push
in
addr16
mov
jle
xor
pop
pusha
jmp
js
xchg
sub
out
jmp
in
imul
or
adcb
cltd
xor
cmp
and
scas
ret
sbb
add
andb
cmp
xor
cmp
test
mov
cmp
mov
push
xor
sbb
sub
add
popf
cmpsl
pop
push
fisttpl
jae
inc
lds
sub
jp
lcall
loopne
cld
mov
movsb
movsl
xchg
hlt
cwtl
js
inc
sahf
nop
jne
shl
sarl
ret
cmpsl
mov
in
pop
movsb
pop
mov
iret
add
adc
push
xor
dec
cmc
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
xor
bound
addb
inc
bound
in
jmp
push
adc
ss
aad
push
or
add
mov
mov
push
divb
xchg
xchg
sti
adc
mov
rcrb
call
sbb
popa
mov
xchg
aas
fs
mov
clc
add
push
cmp
mov
dec
ret
ror
inc
jmp
pop
test
or
orb
push
test
and
lods
add
xor
jb
rolb
mov
mov
or
dec
mov
roll
daa
jo
add
push
push
enter
ret
cmp
dec
int3
dec
ffreep
add
popa
fldcw
test
xchg
xchg
ss
cltd
or
insl
mov
mov
mov
ret
addl
lods
cmp
aam
into
and
ljmp
scas
insb
mov
pusha
add
data16
pop
xor
xor
incl
sbb
jb
decb
out
sahf
hlt
fmull
test
mov
stos
sub
cld
repz
arpl
pushf
mov
loop
test
movsb
mov
insb
mov
adc
or
int3
cmp
ret
adc
jp
dec
push
outsl
sbb
mov
xor
aaa
adc
imul
add
sbb
inc
dec
adc
std
cmc
inc
sub
mov
outsb
or
int3
fildll
ret
aam
inc
je
pop
scas
inc
test
cmp
or
jno
shll
lock
mov
fmul
fiadds
dec
rcr
daa
xchg
mov
xor
lahf
mov
sbb
sbb
jp
icebp
xchg
out
popa
sub
mov
int
inc
sub
mov
fldenv
xor
sti
push
or
add
mov
rorb
jle
sahf
out
sub
and
xchg
nop
lods
sbb
in
or
and
in
sub
mov
addr16
out
insl
fiaddl
out
fisubs
in
cmp
xchg
pop
sbb
test
in
add
dec
cld
pop
pop
inc
es
sub
push
mwait
push
pushf
insl
adc
jnp
in
cmpsb
enter
and
into
out
mov
ljmp
pop
aad
mov
cmc
or
jnp
adc
cmp
add
jbe
fmuls
dec
add
sbb
mov
cltd
push
into
sbb
mov
pop
mov
or
jle
sbb
lods
pop
dec
cmp
cwtl
sahf
push
xchg
xchg
mov
dec
cmc
pop
xor
ja
mov
enter
das
mov
jae
mov
push
int3
add
or
daa
jns
in
popa
push
jne
sub
mov
enter
stc
jns
pop
leave
mov
fnstsw
cmc
fmull
dec
pusha
das
sbbl
pop
and
pop
sub
ljmp
fnsave
xor
mov
sti
ret
aas
xchg
lret
mov
nop
dec
fcomps
adc
imul
cmp
fnstcw
or
pop
adc
inc
pop
vmaxsd
addr16
mov
sub
iret
lcall
in
xchg
push
in
in
inc
xchg
ficoms
add
mov
mov
mov
sub
std
out
shlb
dec
jbe,pt
cld
pop
dec
mov
cmp
dec
fcomip
repnz
inc
into
xor
mov
xor
add
sub
jnp
adc
mov
xchg
cld
nop
repz
cmp
adc
mov
stos
insb
es
or
mov
inc
stos
add
mov
mov
lret
cmpl
movsl
dec
cltd
mov
add
outsl
push
push
xor
ret
cmpsb
rclb
testl
push
jecxz
and
inc
xchg
sbb
jb
sub
shl
rorb
cld
push
movsb
add
imul
mov
clc
je
push
jnp
push
xchg
mov
movsl
sub
dec
push
and
ja
lods
cmp
adc
mov
sbb
lcall
mov
inc
loope
addb
dec
mov
in
xchg
lds
jmp
sub
addr16
pop
pusha
cmpsl
mov
imul
and
lcall
inc
inc
outsb
mov
movl
sbbl
fstpl
insb
shrl
mov
popa
sbb
mov
mov
sahf
shl
outsl
jp
aam
mov
ret
dec
addl
cli
into
pop
push
loope
add
rorl
bound
add
sbb
jg
inc
add
add
mov
xchg
lcall
sbb
dec
push
mov
ret
pop
in
mov
inc
or
es
sbb
jns
adc
jp
push
jle
loope
rorl
push
fbstp
lea
lods
test
sbb
xchg
dec
je
adcb
loope
scas
mov
push
int3
je
dec
test
jmp
adc
lea
fs
xchg
aas
fcomps
cli
int
test
pop
stos
negb
mov
push
mov
in
int3
jp
fadds
xchg
mov
test
pop
adc
jle
adc
xchg
loopne
adc
std
mov
ljmp
pop
inc
push
pushf
xor
sub
jno
cmc
adc
cld
add
ror
ljmp
std
insb
andl
out
enter
push
xchg
pop
and
test
hlt
leave
pop
mov
enter
cmc
push
addr16
pop
inc
xor
jmp
sub
dec
mov
clc
sbb
test
cmc
repz
push
ret
jns
ja
ret
test
mov
stos
mov
xchg
fs
stos
mov
sub
xchg
je
mov
mov
mov
or
mov
nop
push
lea
stos
out
lods
aas
fldt
add
xor
push
popa
out
jmp
dec
inc
fsubrp
lock
cs
inc
idivb
icebp
jno
add
push
and
add
mov
out
jp
fwait
shrl
jecxz
mov
xchg
insl
ret
movsb
stos
or
int3
into
out
inc
fldcw
cmp
dec
fcoml
mov
nopl
or
sti
sbb
pop
test
adc
xchg
std
ljmp
aam
mov
mov
loop
notl
dec
pusha
sub
cld
mov
xchg
mov
push
imul
ret
les
call
inc
jnp
inc
add
sbbl
dec
mov
add
jecxz
shl
icebp
jg
out
scas
and
mov
insl
lcall
ret
cmp
mov
out
or
adc
cmp
push
inc
adc
or
ret
cmp
sbb
lret
mov
rcrb
ja
pop
pop
inc
mov
or
pop
test
sti
mov
push
popa
and
int3
std
subl
mov
cmovne
leave
ret
cltd
xchg
cmc
scas
lods
lret
ja
jl
fistl
push
ljmp
add
in
sbb
enter
sbb
jae
adc
shll
pop
lock
outsb
pop
and
sbb
mov
test
ficoms
sbb
mov
popa
aas
int3
xchg
imul
test
lds
push
xchg
pop
adc
sbb
inc
sub
pop
dec
ja
mov
dec
stc
inc
stc
push
stc
cmpsb
aaa
xchg
push
fidivs
in
cmpsl
add
shrb
in
imul
fbstp
int
scas
int3
inc
stos
das
daa
push
fbld
jae
fwait
xor
mov
cmp
out
xor
les
push
orl
sub
mov
jmp
push
jb
mov
mov
repz
loopne
dec
pushf
mov
and
imul
push
in
add
adc
cmp
pushf
xor
push
ffreep
push
dec
negl
lret
imulb
jle
fstpt
jecxz
push
push
mov
jl
bound
sub
fdivl
adc
mov
sti
addr16
hlt
and
pushf
cmc
cld
int3
dec
pop
jae
dec
mov
das
popf
and
push
pushf
dec
lret
data16
aas
out
adc
sub
jbe
inc
jno
dec
cmp
stc
insl
mov
addr16
sahf
mov
adc
cmp
and
push
and
pop
mov
mov
mov
scas
fs
xchg
xchg
lea
jb
shll
jmp
sbb
pop
sub
push
fldcw
daa
or
add
xchg
add
gs
shlb
daa
mov
fimuls
and
mov
outsl
inc
xchg
adc
fadds
aaa
dec
mov
notl
pop
bound
lret
sahf
mov
or
jae
aaa
outsl
insb
pop
adc
sbb
jb
jne
jl
mov
sbb
inc
lahf
imul
add
int3
imul
push
sub
mov
or
cli
xchg
packssdw
pop
xor
cmp
jmp
xor
mov
sahf
mov
subb
rorl
out
adc
or
mov
lods
xchg
pop
adc
int3
loopne
rolb
add
add
xchg
call
mov
mov
mov
test
shll
cwtl
pop
std
push
inc
xchg
fisubs
jl
jg
jno
in
subb
mov
add
fcmovb
xlat
xchg
sbb
pop
sub
sub
xchg
mov
scas
enter
scas
out
lahf
inc
pop
mov
or
jge
inc
inc
scas
adc
mov
stos
mov
mov
mov
mov
and
inc
fs
stos
mov
pop
out
sub
dec
lea
pusha
adc
lahf
add
stos
jns
jge
lahf
mov
inc
sbb
imul
cltd
bound
outsb
jo
loopne
int
pusha
push
into
dec
mov
pop
dec
xor
les
mov
test
insl
pop
pusha
or
pop
xchg
popf
sbb
push
aad
xchg
add
out
xor
or
pop
xor
xor
repnz
jl
lret
inc
int3
inc
push
dec
cld
out
mov
decl
orl
hlt
mov
jmp
insl
and
mul
fidivs
adc
mov
xchg
push
cmpsb
shlb
dec
in
data16
dec
out
mov
mov
add
in
or
clc
jmp
add
ljmp
leave
out
movl
test
cmp
dec
inc
pop
inc
add
std
push
dec
fnsave
mov
faddl
push
cwtl
shlb
das
inc
dec
add
dec
rorl
out
inc
outsl
pop
iret
dec
leave
repnz
adc
sbb
sbb
mov
ljmp
dec
add
fwait
cmp
insb
out
shrb
test
sbb
push
outsb
or
outsb
push
aas
cwtl
push
or
xchg
stos
mov
xchg
fcomp
inc
mov
sub
cmp
pop
mov
mov
dec
cmp
cmp
add
stos
dec
rcrl
cmp
pop
or
cmp
push
cmp
mov
imul
inc
pop
xchg
jo
ret
adc
dec
je
hlt
fsubl
outsl
adc
divb
call
pop
jp
es
addl
sahf
and
mov
outsb
push
jl
inc
outsl
push
mov
push
add
cmp
movsl
dec
cltd
jae
imul
jl
jmp
sahf
push
js
dec
outsb
mov
cmp
add
or
sub
cmp
fimull
push
lahf
js
jae
lahf
mov
push
imul
mov
fucomip
js
or
nop
adc
adc
loope
outsl
sbb
aam
leave
stc
mov
mov
test
out
mov
popf
test
xor
stc
sub
ret
outsb
jns
mov
loope
jl
xor
shlb
into
leave
popf
inc
xchg
cmp
jp
imul
fimuls
cmpl
or
sub
scas
xor
gs
subl
push
adc
clc
mov
cmp
inc
mov
ss
jns
jns
cmp
nop
adc
mov
pop
xchg
cmc
mov
lock
daa
loope
sbb
mov
aam
jmp
jae
mov
jno
xchg
popf
jno
jp
out
enter
lods
and
lods
cmp
jmp
push
mov
pop
stos
test
xor
pusha
xlat
mov
mov
lcall
jl
sbb
mov
nop
push
inc
fmull
jmp
push
pop
xor
lea
es
popf
repz
leave
subl
subb
mov
lods
xchg
pushl
mov
xlat
mov
mov
leave
push
mov
mov
stos
rcrb
mov
jp
push
push
aam
add
jnp
rclb
or
adc
into
in
icebp
adc
stos
xchg
xchg
jbe
inc
lock
mov
xorl
push
xor
sub
add
mov
mov
jns
in
jmp
scas
fcompl
add
loope
mov
push
cmp
stos
sbb
pop
dec
daa
xor
push
movsl
int
leave
divb
sbb
xchg
mov
jns
cmp
nop
jbe
mov
shlb
sahf
in
sbb
pop
sub
int
addb
adc
cmp
xchg
and
jecxz
sbbb
lret
loop
popf
or
push
xor
loope
orl
jno
pop
jecxz
mov
push
push
cld
xor
dec
jmp
hlt
in
aaa
lret
pop
cmpsl
push
cld
inc
sub
xor
gs
insb
jbe
dec
push
add
cwtl
xor
loope
xor
orl
test
jge
mov
cmpl
cmp
stos
sbb
xor
lea
or
popa
sub
scas
dec
mov
cmpsl
nop
mov
or
mov
les
push
andb
sbb
rolb
xorl
push
adc
lods
cld
xchg
cmp
dec
pop
inc
and
flds
push
xor
add
push
mov
fwait
push
cmp
adc
xchg
xlat
inc
inc
mov
out
cltd
xchg
cmp
push
jns
les
xchg
jmp
pop
gs
or
out
add
pop
jmp
or
xor
pop
sub
aaa
test
push
sbb
outsb
or
push
dec
bound
pushf
lods
and
sbb
mov
js
lea
xchg
daa
dec
jne
loope
jmp
enter
jg
and
popa
add
push
insb
gs
jp
scas
dec
mov
push
mov
js
mov
sbb
mov
cmp
dec
lahf
sbb
fists
lds
and
mov
mov
sbb
test
sbb
dec
idiv
cli
adc
clc
or
iret
jge
push
push
xchg
pop
je
add
lods
hlt
aam
nop
xchg
movsb
lods
jg
out
mov
insb
popf
movsl
movsl
inc
lret
int3
sub
push
imul
cmp
mov
cmp
dec
and
pop
decl
dec
cltd
lahf
xor
je
dec
pop
int
mov
add
or
pop
and
iret
lea
sub
cld
sub
jmp
stos
ss
popf
mov
mov
nop
enter
adc
inc
pop
push
jbe
aas
push
cmp
out
test
inc
xor
adc
cltd
jo
pop
gs
inc
or
in
push
adc
mov
lret
and
pop
push
adc
jns
fisttpl
js
cmpsl
cwtl
arpl
imul
or
dec
in
mov
stos
pop
fs
addr16
mov
mov
fmull
scas
sbb
dec
cmpsb
xchg
cli
mov
jo
sub
add
mov
fcmovnb
dec
movsb
mov
push
push
add
or
into
sbb
sub
cltd
sar
add
mov
add
flds
pop
ljmp
fs
idivl
pop
mov
add
or
jp
pop
loope
mov
push
inc
push
lods
iret
jb
outsl
mov
xchg
mov
sbb
sub
mov
xlat
jge
mov
arpl
sbb
add
xchg
inc
test
aad
and
mov
xor
inc
ljmp
int
sbb
cs
mov
cmp
mov
jl
mov
js
mov
enter
les
popf
outsl
sub
scas
and
dec
dec
fld
mov
mov
sbb
les
jo
jl
testl
jp
aas
push
ss
cmp
inc
jmp
call
shll
addr16
inc
les
fbld
xchg
mov
ret
and
mov
bound
fistl
add
xchg
fwait
inc
fs
jb
xor
repz
fbld
fisubs
les
cli
insl
or
rorb
dec
or
pop
pop
mov
push
int3
aas
xor
mov
iret
add
pop
imul
fildl
insb
divl
aam
cmp
add
aad
add
mov
pop
sbb
mov
dec
cli
jl
sub
lea
imul
subl
into
push
jl
xchg
pop
cmp
mov
pop
iret
int
xchg
xchg
movsl
mov
inc
stos
lahf
stc
push
lock
rep
jmp
jb
shr
cmpsb
jp
sbb
xor
adc
test
xor
and
sbb
stos
gs
loope
hlt
sar
insb
push
xchg
mov
jge
lret
enter
jbe
adc
adc
or
int3
mov
add
jno
jb
ret
mov
cmpsl
add
fwait
mov
fwait
jp
loop
xor
xchg
mov
or
in
or
out
jg
popf
and
fildl
aaa
pop
test
pop
sub
jo
cs
dec
jge
mov
sti
or
les
pop
xor
add
ret
in
cmp
mov
xor
fisubl
mov
mov
insb
xchg
jg
lret
js
out
xchg
mov
data16
xchg
in
pop
fucomp
jno
in
push
and
mov
scas
push
idivl
or
mov
inc
jmp
push
mov
cltd
jbe
and
sbb
scas
int3
int3
add
filds
xchg
xchg
xchg
sbb
mov
outsl
scas
loope
ss
jns
mov
iret
rcll
mov
xchg
cld
inc
test
pop
pop
scas
das
test
bound
sahf
mov
movsl
adc
iret
data16
adc
enter
popa
lock
into
int
pop
inc
mov
dec
jns
sub
mov
mov
fyl2x
test
iret
xorl
xchg
sbb
int3
mov
sti
sub
mov
mov
gs
aaa
lock
push
adc
scas
scas
cltd
cmp
mov
or
jns
hlt
mov
bound
inc
mov
add
inc
cld
popf
aam
ret
jo
pop
out
push
lret
pop
arpl
or
xor
xchg
repnz
sub
int
or
pushf
or
bound
pusha
enter
push
pop
loop
mov
lods
mov
shl
mov
xor
movsb
clc
repz
fbstp
scas
mov
xchg
lcall
pop
shrb
popa
cmpb
sbb
mov
enter
mov
jno
xor
lock
insb
les
scas
and
dec
addb
outsb
inc
mov
xor
lods
iretw
lock
mov
xchg
cmp
andl
pop
lods
ljmp
fdivs
repz
push
popa
dec
adc
mov
or
loopne
mov
xchg
out
aad
ret
jp
xchg
push
gs
and
xchg
inc
inc
xor
mov
hlt
arpl
scas
xor
add
mov
lcall
cmp
mov
test
out
sub
test
hlt
mov
scas
in
xor
gs
bnd
cltd
xchg
addb
jg
push
jge
and
leave
sbb
and
rol
sbb
test
mov
push
push
je
movsb
call
fwait
or
imul
insb
cltd
leave
mov
jb
jecxz
xor
push
sti
xor
push
lret
adc
push
dec
mov
xlat
xchg
in
idivl
ljmp
int3
test
adc
cmp
aad
xchg
test
or
cmp
mov
popa
add
mov
daa
xor
sbb
std
inc
and
push
imul
outsl
jno
inc
mov
pop
jo
outsb
xchg
jns
test
and
call
pop
fdivp
mov
loope
shl
test
les
jno
in
fcomps
add
jne
fdivrl
cwtl
insb
mov
cwtl
shr
xchg
pop
cld
popa
xchg
mov
popa
movsb
test
outsb
fcoml
rcl
popa
fisttpll
iret
mov
jp
popa
stc
clc
out
dec
lcall
ja
mov
jecxz
xchg
stc
xchg
mov
cmp
test
xor
inc
out
jp
outsb
inc
hlt
xchg
mov
push
test
adc
and
xchg
nop
mov
jae
dec
fwait
sub
pushf
mov
add
mov
push
push
and
push
mov
test
cs
mov
mov
cmpsl
pop
add
clc
and
mov
sub
pushf
or
rorl
xchg
pop
cmp
loop
and
xor
lret
out
addr16
in
mov
and
jge
inc
add
fdivrp
popf
cmpsl
out
stos
mov
lret
test
or
pop
cmp
mov
push
and
fisubrs
icebp
or
push
clc
ss
loopne
gs
ja
jno
fs
dec
sub
insb
jns
cli
xchg
mov
jg
jle
js
ret
scas
aad
and
adc
pop
sarl
leave
divl
or
jge
adc
lds
xlat
inc
xor
je
and
cmp
stos
and
pop
mov
mov
mov
add
rcr
mov
pop
jns
mov
adc
lds
fiadds
nop
test
cwtl
mov
or
push
push
xchg
into
ret
mov
imull
popa
rcr
jmp
fistpl
sbb
push
in
mov
jbe
insb
psadbw
ja
enter
out
jo
lret
adc
mov
mov
rcr
aas
popf
aaa
std
dec
push
out
clc
push
or
mov
mov
xchg
hlt
ja
ja
push
cli
sbb
and
repz
fstpl
js
testb
shlb
fnstenv
xor
clc
lock
add
lahf
sbb
sub
bound
pop
test
adc
jnp
push
cld
js
stos
push
movsb
and
mov
mov
mov
add
aas
jge
xchg
jae
popa
mov
bound
adc
add
ficompl
test
stos
jne
enter
cmpsb
xchg
dec
jnp
stos
mov
sarl
loopne
leave
cmp
orb
push
push
fwait
mov
jecxz
mov
dec
sbb
mov
mov
mov
outsl
sub
and
repz
adc
xor
mov
pop
sub
inc
mov
inc
rcl
insl
sbb
mov
cmp
cwtl
cmp
incb
sbb
stos
gs
mov
stos
fnstcw
pop
dec
test
movsb
mov
pop
mov
inc
pop
and
dec
popa
lods
fwait
or
sub
bound
and
iret
xchg
add
push
push
mov
sub
push
dec
lods
cmp
xchg
inc
test
add
mov
mov
sbb
push
jnp
mov
or
aam
aam
hlt
hlt
lcall
fucom
adc
sub
jno
dec
out
inc
xor
setnp
jge
or
icebp
pusha
in
movsl
loop
movsb
mov
and
mov
cmpsb
mov
sahf
and
or
xchg
cmp
push
movb
push
mov
mov
call
loop
aad
pop
repnz
cmp
aad
mov
pushf
pusha
addr16
rol
stos
or
adc
mov
sbb
push
mov
sahf
mov
scas
outsl
pop
daa
adc
xchg
cmp
int3
or
out
xchg
jp
mov
adc
inc
stos
into
fisttpl
cmpsb
push
dec
add
test
aad
gs
jmp
mov
adc
dec
push
decb
mov
adc
sbb
push
sub
sub
nop
repz
sub
mov
shld
out
mov
mov
lahf
jno
loop
fadds
mov
inc
jl
mov
mov
cmp
adc
xor
adc
adc
shrb
inc
cmc
pop
xchg
jle
lods
jmp
sub
inc
rcll
push
xor
pop
test
pop
les
adc
or
add
fwait
not
sbb
jae
orl
repz
mov
sub
movsl
sarb
sub
sub
jecxz
fwait
push
outsb
pusha
adc
dec
mov
add
push
sbb
daa
sbb
andb
add
jg
sub
aaa
pop
adc
out
aaa
mov
fcompl
mov
push
sti
mov
push
cmp
call
test
mov
push
das
push
xor
push
jbe
cld
and
scas
mov
mov
dec
sbbb
or
iret
and
stos
ja
cwtl
fsts
xchg
testl
sbb
mov
insl
rcrb
fcomps
lods
mov
push
adc
push
and
or
test
xchg
sbb
fidivs
dec
loope
and
sahf
gs
stos
mov
pop
mov
xorb
pusha
add
gs
stos
mov
sti
pop
and
cmpsb
imul
xor
lahf
push
in
jno
mov
mov
push
dec
popa
and
or
jg
cmp
sub
xchg
mov
push
sar
lds
lds
jno
mov
iret
pusha
lds
in
mov
jo
loopne
sub
outsl
out
jl
push
cmp
add
aad
dec
hlt
dec
fistps
popa
sbb
movb
mov
mov
daa
jb
mov
call
mov
loope
jns
sti
cmc
popf
inc
mov
lcall
xlat
add
daa
dec
mov
xor
and
dec
inc
pop
mov
enter
in
mov
sub
addb
sbb
or
imul
add
add
lahf
es
into
popf
or
mov
movsl
movl
lcall
cwtl
nop
rcrb
pushf
int3
jo
std
lds
pop
jecxz
loop
aas
mov
es
xchg
push
adc
dec
scas
test
push
jge
loope
je
int
repz
mov
jne
aaa
cmp
pop
pop
addr16
sahf
inc
out
inc
xchg
lods
and
ss
sub
into
jp
mov
sub
sbb
insl
and
dec
jmp
loopne
xchg
loop
aam
sub
into
pop
pop
add
and
and
subl
sub
xchg
jl
add
ret
es
cli
aam
cld
daa
fists
mov
lock
rclb
and
sbb
imul
mov
mov
dec
dec
mov
repz
push
jnp
out
push
insl
dec
clc
xchg
mov
and
pop
sti
mov
sti
mov
cwtl
cli
movsb
popf
xor
fucom
xor
lock
adc
inc
mov
mov
add
adc
inc
push
sub
sahf
xchg
or
jg
pop
rorb
test
insl
or
addr16
xchg
mov
jmp
out
xor
push
idivl
or
pop
gs
inc
test
adc
sbbl
xchg
andl
lahf
nop
stc
add
inc
or
lods
pop
cmpsl
shl
ds
loope
mov
cmpl
filds
stos
cmp
nop
inc
push
dec
mov
push
jecxz
mov
add
inc
std
and
movsl
push
loop
jno
insl
inc
pop
cmpsb
es
sbb
jb
jae
loop
adc
insl
loopne
roll
mov
adc
sub
fs
cmp
scas
or
sbb
les
push
lcall
lock
sub
pop
push
push
divl
insl
fisubrl
loope
cmp
inc
or
scas
dec
pop
iret
push
jle
mov
fldenv
mov
mov
inc
adc
loop
hlt
sub
jge
pop
mov
push
clc
adc
jle
dec
in
ljmp
pushf
sub
add
pop
or
clc
push
jns
cmp
sub
sub
icebp
mov
test
push
int3
add
mov
leave
rorl
inc
push
pop
pop
sahf
fmuls
out
outsl
inc
jae
icebp
pop
out
xorl
lea
jecxz
ja
pop
adc
mov
fdecstp
cmp
out
dec
jg
cwtl
outsl
insl
push
xchg
mov
jp
lret
les
into
mov
into
mov
aas
ret
mov
and
xor
dec
lods
cmp
arpl
int3
ror
lahf
insb
push
movsl
or
out
sbb
in
fisubrs
das
xlat
lock
inc
ret
int
orl
jb
subl
daa
sarb
nop
mov
in
in
adc
and
adc
xor
push
inc
pop
sahf
mulb
cli
inc
fisubl
shrl
les
jg
imull
int
pop
rorl
loop
subl
pop
mov
inc
dec
adc
xchg
pop
push
push
loop
and
mov
das
xchg
dec
cmc
fisubl
push
mov
mov
shlb
push
jns
into
and
dec
sub
fs
rolb
pop
insl
inc
add
pop
jo
loop
push
outsb
int
jbe
scas
mov
lods
inc
frstors
push
add
push
das
lahf
leave
loop
mov
mov
mov
sub
icebp
das
jbe
jbe
dec
dec
pop
or
and
cld
outsl
mov
cmp
and
pop
or
inc
mov
mov
adc
or
mov
sub
sbb
in
mov
adc
cld
lea
mov
xchg
fwait
les
cmp
dec
mov
push
js
lcall
les
sub
negl
sbb
xacquire
sub
dec
sub
jno
cmp
cmpsb
xchg
sbb
inc
test
xchg
and
rorl
out
adc
push
pop
out
data16
xor
lock
add
pop
stos
sub
cmp
outsl
stos
repz
cmp
jae
or
adc
cs
out
sbb
lea
mov
movsbl
mov
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
and
mov
dec
sahf
aas
xchg
pop
fs
jne
add
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
