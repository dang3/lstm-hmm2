push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
fldl
xchg
addr16
mov
jmp
fstpl
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
inc
sbb
pop
ja
neg
add
test
ja
jb
xchg
bound
jmp
enter
push
push
and
xor
std
mov
mov
jmp
jo
fwait
pop
stos
movsb
mov
adc
xor
pop
or
fstps
add
add
movb
repnz
lea
test
out
ljmp
sbb
xchg
in
mov
cmp
jns
or
rcll
fdivp
in
dec
lret
jmp
pop
and
out
data16
rorl
inc
repz
sbb
rorl
int
movaps
xlat
in
clc
iret
imul
outsl
insl
xchg
sbb
dec
enter
dec
mov
xor
cmp
lock
pop
jb
push
cmp
xchg
test
or
and
or
adcl
xchg
cmp
pusha
and
jnp
xchg
aas
xchg
cld
pop
and
daa
rorl
fisttpll
ret
cmpsb
scas
adc
idivb
add
jbe
inc
movsb
add
dec
out
push
sub
add
mov
adc
jno
jno
mov
andb
cmp
jb
dec
bound
in
psrld
adc
push
sti
jmp
add
mov
ljmp
rorl
push
jbe
movsl
pushf
cmp
rorb
lret
fmul
xchg
inc
dec
cmp
sub
popf
mov
or
mov
jmp
das
or
mov
loopne
iret
sar
lcall
test
in
and
into
pop
or
stos
std
jns
aam
mov
pop
ljmp
cmc
movsb
push
cwtl
dec
clc
pop
jo
mov
cld
not
cwtl
fildll
cmp
xor
add
and
fisttpl
jmp
rorb
std
jmp
jmp
xorb
sbb
test
in
xor
pop
sarb
dec
cmpsl
ret
xor
jmp
fistpll
sub
lods
sub
lds
push
scas
icebp
sbb
lods
fldt
xchg
push
jbe
cld
fwait
and
jle
into
mov
icebp
loop
add
sub
and
cmpsl
push
or
bound
stos
data16
outsb
les
aam
cmp
add
loopne
int
stc
mov
mov
add
and
add
jne
in
adc
mov
decl
dec
lahf
xchg
out
dec
addl
or
pop
inc
sub
gs
inc
push
les
push
loop
lods
sub
jno
xor
inc
cli
add
inc
imul
rep
addb
and
inc
lcall
ret
rep
jp
sbb
push
pop
sarb
clc
jb
jbe
nop
cmpsl
jle
lock
mov
test
sbb
outsb
sub
and
sub
pop
and
std
mov
jb
or
cld
out
ljmp
and
add
scas
mov
mov
jl
stc
fidivl
in
popf
mov
sub
inc
push
add
fidivrl
and
sub
flds
pop
pop
xor
loopne
xchg
in
fcomip
arpl
xchg
mov
cli
xchg
fnsave
jge
pusha
call
and
outsb
lret
stos
mov
imul
lcall
outsb
fadds
sbb
xchg
mov
and
rcll
sbbb
into
add
jne
xchg
jo
sub
sub
xchg
push
jmp
add
lret
or
shl
pavgw
int
stos
icebp
pop
or
jb
lcall
dec
pop
cltd
and
jg
lods
or
icebp
xchg
fs
daa
cmc
sahf
jnp
or
iret
pop
out
cli
add
int3
fstl
sbbl
cmpb
mov
inc
pop
pop
mov
inc
mov
out
push
test
mov
daa
dec
mov
rcll
iret
movsl
pop
mov
roll
shlb
sbb
out
or
pop
lea
fcomps
rclb
leave
fnsave
rclb
sbb
int3
push
add
pop
test
cmp
shll
sbb
rorl
imul
inc
outsl
rorl
jle
shlb
call
imul
sbb
push
push
xchg
push
cmp
inc
loope
nop
test
sub
arpl
pop
xor
mov
fsubl
cltd
mov
bound
xchg
or
xchg
mov
sbb
mov
ljmp
aad
add
es
leave
insl
sbb
cmpsb
or
pop
jae
test
adc
jg
add
xchg
mov
add
mov
mov
ss
add
not
in
inc
out
jbe
lock
xchg
jmp
test
sbb
jmp
cmpl
pop
sub
cmpsl
push
jbe
and
mov
and
adc
sub
adc
and
sub
ds
push
jle
jbe
arpl
pushf
xlat
addl
xlat
out
es
push
sub
loopne
fwait
mov
pop
push
ficoms
add
test
test
xor
jg
mov
test
test
jae
arpl
imul
ss
nop
xor
mov
pop
cmp
aaa
mov
fwait
insl
sub
xchg
out
out
mul
cld
mov
pop
sbb
inc
aam
push
lea
mov
andl
aas
xchg
into
adc
cs
fbld
pop
sbb
fnstcw
jp
out
jnp
add
jl
sti
xchg
jp
lahf
push
mov
xor
call
shrb
adc
xchg
ljmp
loop
adc
data16
mov
std
cld
andl
notb
inc
xchg
icebp
push
neg
les
mov
or
mov
mov
or
mov
adc
scas
popf
sub
not
lods
fcomps
loope
sbb
outsb
inc
or
and
std
sub
jae
dec
movsb
mov
nop
jl
adc
push
lds
filds
mov
js
js
mov
push
mov
pop
sti
in
xchg
das
insb
cmp
inc
xchg
fistps
insl
or
cwtl
mov
mov
mov
xor
sub
cmp
push
dec
adc
pop
pop
dec
les
shlb
out
inc
roll
xchg
cli
jbe
mov
inc
test
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
inc
ss
xchg
lgdtl
push
fistps
lcall
push
iret
jecxz
jbe
inc
incb
aaa
je
sbb
xchg
mov
cmp
sbb
ljmp
lret
sub
lret
repnz
loope
sub
test
mov
dec
sbb
or
cmpsl
fimull
push
cltd
test
dec
inc
xor
rcl
jno
adc
lret
add
mov
fdivs
lret
push
ror
jp
cmpl
pop
in
insb
mov
cmpsl
je
inc
pop
xlat
adcb
mov
cmp
in
and
add
int
cli
mov
js
push
mov
add
decl
push
push
out
iret
push
dec
cmp
mov
or
sub
test
cmp
pop
movsl
add
dec
push
cld
or
aad
cmpsl
bound
out
fistps
nop
xor
jp
lock
lds
and
push
pop
iret
gs
inc
jg
pop
sar
mov
cmp
hlt
mov
jno
lods
xor
fmuls
push
add
loop
adc
in
push
push
ja
inc
shll
xchg
xchg
in
dec
mov
mov
sbb
adc
xor
imul
ss
add
dec
cs
add
and
in
outsl
pop
mov
decl
xchg
sub
outsl
fildll
pop
sub
imul
scas
sub
scas
ljmp
xchg
imul
or
aad
mov
cmp
test
mov
sub
sub
mov
mov
js
pop
xchg
inc
les
pop
pop
lahf
sbb
adc
loope
out
mov
adc
cmpsb
jnp
dec
adc
push
andb
jb
mov
rolb
push
mov
xchg
adc
xchg
daa
sub
fs
xchg
mov
xor
sar
dec
out
loop
inc
loopne
outsb
mov
movsb
adc
xor
stc
lret
test
jne
mov
dec
sbb
sbb
lock
fs
idivl
cmpsl
cmp
call
dec
mov
repnz
scas
lods
push
sbb
in
shlb
lret
or
daa
ja
arpl
movb
nop
mov
mov
sbb
push
mov
repz
test
int3
cmpl
push
out
sbb
or
dec
jns
ja
push
je
sbbb
xchg
sbb
cmc
repnz
stos
loop
cwtl
pop
jl
push
xchg
sbb
nop
jae
clc
xchg
jnp
push
std
popa
dec
faddl
fimuls
out
js
movsl
rcll
or
xor
insl
push
jl
movsb
inc
std
xchg
test
push
push
lods
lcall
push
jae
lret
xchg
jle
add
mov
xor
adc
xor
mov
mov
repz
call
test
cmp
std
dec
lcall
insl
inc
pop
push
pop
mov
sbb
add
in
lret
shll
pop
pusha
jb
clc
arpl
cmp
mov
lcall
add
loop
stos
add
outsb
and
or
out
lods
add
dec
fildll
jnp
mov
pop
push
add
jo
fisttpll
inc
jne
xor
rolb
xchg
sbb
rolb
adc
cmpb
repnz
mov
and
and
hlt
pop
cmp
adc
inc
jmp
pop
jg
push
or
jge
repz
mov
inc
cmp
push
or
gs
rcrb
aaa
stos
fcomps
jp
hlt
add
pop
push
jle
sub
sub
loop
lret
test
mov
push
mov
mov
in
fcoms
pop
leave
js
add
std
pop
mov
cmp
mov
sbb
push
je
pop
push
cmp
dec
and
sbb
jno,pn
jbe
insb
dec
out
or
add
lods
lret
int3
pop
add
cmpsb
pop
faddl
xor
dec
push
and
jns
fs
inc
je
loop
inc
inc
xor
xor
pop
inc
aam
ret
cli
fisubrl
ret
sub
sub
push
or
sbb
in
idivb
mov
xchg
outsb
add
in
mov
leave
sub
push
inc
int
push
scas
mov
out
jl
hlt
aaa
xchg
mov
or
ror
push
jmp
xor
int3
clc
jle
stc
stos
mov
mov
cli
xchg
in
scas
push
ret
pushf
pop
pop
jge
enter
jns
inc
outsb
mov
scas
std
jge
adc
cmpsl
lock
lea
sub
inc
call
mov
rcr
pop
repz
cmc
enter
xor
addr16
gs
cmp
clc
pop
les
pop
call
std
push
cmp
cwtl
mov
adc
and
mov
das
stos
repz
xor
jge
mov
in
push
inc
sub
add
loopne
sub
sti
or
sub
arpl
lods
jecxz
in
call
and
pop
stc
and
sbb
lea
or
std
xchg
cwtl
pushf
dec
mov
rorb
lcall
out
pop
jg
push
sahf
subb
lret
mov
adc
popa
loope
fdiv
xchg
xchg
jno
clc
loop
adc
ljmp
rcll
inc
mov
mov
sub
mov
xchg
arpl
mov
scas
lret
jp
outsb
jnp
pop
ljmp
xor
out
pushf
mov
mov
into
test
xor
divl
xor
hlt
movsl
adc
inc
sub
test
inc
fs
sti
imul
in
loope
xchg
sbb
or
xchg
inc
sbb
loope
adcl
push
stos
xchg
xor
js
or
jne
std
sbb
dec
push
sbb
ret
cmp
inc
inc
ds
or
adc
insb
sti
lret
pop
xchg
insl
mov
adc
sbb
push
cmp
xor
pop
ja
aam
pusha
and
ret
fwait
pop
pop
sbb
push
in
mov
aam
scas
jge
inc
fsubs
clc
fildl
repnz
pop
movsl
xchg
mov
and
loopne
loope
int
lock
adc
push
mov
in
ljmp
bound
test
adc
fiadds
push
mov
pop
test
in
pusha
pusha
or
dec
imul
jb
cmp
sub
ds
pop
fstl
mov
into
xor
push
fs
mov
lea
leave
or
movsb
dec
and
push
mov
movsb
sbb
insl
and
push
sub
mov
dec
push
sub
shlb
fidivl
sub
xchg
push
jbe
sbb
mov
ss
fdivrp
rcl
mov
sub
nop
jle
and
ljmp
sbb
mov
and
add
inc
out
enter
pop
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
hlt
loope
and
ja
loopne
mov
bound
or
dec
ds
jnp
sarb
or
inc
orl
je
pop
cmpsb
xchg
xchg
mov
fldenv
fmuls
add
mov
cld
mov
mov
pop
or
lds
pop
sub
cli
jno
jmp
add
sub
and
inc
push
int
or
leave
jo
dec
add
add
jl
jne
lds
or
cs
jmp
jle
inc
and
add
sub
xchg
push
inc
xor
or
or
movsb
push
xchg
lods
inc
in
inc
or
add
cmp
add
lds
int3
gs
or
stc
out
push
mov
cli
in
repz
js
mov
and
xchg
jmp
push
sbb
jecxz
push
dec
ja
iret
ss
jnp
ss
pop
pop
xor
pushf
add
jle
push
fs
jae
push
dec
daa
lds
lcall
out
int3
sub
aaa
lods
pop
test
xor
mov
imul
es
fiaddl
aas
mov
pop
and
je
sub
add
iret
and
loopne
rorb
je
xchg
cmpsb
in
inc
inc
add
mov
add
mov
mov
scas
mov
pop
iret
fs
sarl
outsb
test
fwait
add
mov
outsb
sbb
loop
xchg
dec
mov
lock
fcoml
lds
ret
pop
jae
lcall
sbbb
scas
adc
cli
pusha
rcrl
and
out
fdivs
or
push
inc
shlb
in
push
ret
shll
xor
jno
pop
add
and
shl
fs
or
outsl
movl
divl
push
fucomp
mov
cmpsb
xchg
xchg
add
push
add
sbb
sbb
jo
push
test
popa
cmp
inc
ljmp
cwtl
cmp
mov
cmp
xor
lahf
call
movsl
mov
pop
aaa
data16
pop
leave
aad
test
jl
scas
rolb
test
xchg
jg
mov
into
imul
pop
cmp
mov
shll
movsl
jmp
push
push
mov
cmp
mov
cld
push
call
inc
mov
ds
add
mov
in
roll
mov
or
inc
mov
inc
mov
cmp
jecxz
repz
mov
int3
cmp
sbb
sub
inc
push
les
push
icebp
scas
and
in
stos
lahf
call
jge
pop
jecxz
hlt
pop
fdiv
notl
adc
fwait
push
xchg
adc
pop
xor
mov
dec
and
js
fidivl
xor
xchg
adc
push
ret
es
push
inc
xchg
dec
imul
sbb
jno
mov
cwtl
adc
cmc
jne
pop
dec
pop
insl
loop
cmp
test
or
shlb
adc
inc
jne
mov
movsl
inc
iret
sbb
push
popa
aas
and
cli
dec
xor
jb
aad
jl
loop
adc
inc
xchg
stos
dec
aam
and
sbb
out
aas
mov
shlb
sub
mov
xor
enter
jmp
jae
cs
xchg
jae
pusha
jecxz
test
cmpl
data16
mov
pushf
and
insl
stos
push
lods
inc
das
fwait
and
adc
ljmp
sbbl
int
mov
mov
xchg
lods
or
and
xchg
mov
dec
ds
mov
mov
fmul
lret
add
cli
and
jg
loopne
adc
cmp
outsl
jbe
insl
inc
mov
je
insb
and
jl
movsb
outsl
sahf
pushf
mulb
jge
sub
into
sbb
mov
dec
cmp
pop
loopne
outsl
mov
or
ja
cwtl
jle
and
lock
xor
inc
lahf
imul
jmp
jle
push
in
inc
decb
jg
or
fcmove
cmp
fwait
or
jl
and
inc
orl
ljmp
movsl
add
andb
in
loopne
ret
dec
lea
movl
xor
cmp
sti
fldt
push
jge
adc
add
rcrb
mov
mov
shll
add
mull
mov
push
dec
mov
push
or
xchg
data16
xor
mov
adc
mov
arpl
push
dec
mov
push
adc
bound
add
fldcw
mov
or
pop
repz
out
out
aaa
mov
adc
mov
or
loopne
pop
push
add
popa
adc
ret
aam
push
nop
jecxz
loope
sbb
inc
incl
rol
test
cltd
sarb
pop
sbb
pop
testb
xchg
lea
test
rcr
mov
xchg
shlb
push
daa
stos
xchg
add
ja
repz
ret
jnp
mov
daa
stc
xchg
jp
add
shrb
sub
push
adc
jno
sbb
jae
dec
push
mov
les
xorl
fistl
jecxz
pop
js
pop
mov
pop
sbb
dec
loope
cmp
ljmp
pop
pop
aam
jle
jne
add
lcall
sbb
add
cltd
jp
inc
xchg
daa
mov
out
fcoml
cmp
mov
add
mov
dec
icebp
add
sarb
call
push
push
daa
out
int
lods
mov
mov
inc
sahf
jbe
jge
lock
std
dec
jge
xchg
js
loopne
lcall
shll
mov
push
cmp
ret
jnp
push
mov
imul
lods
movsb
cmpsl
out
out
sub
subb
push
mov
and
mov
faddl
ret
int
xchg
sbb
pop
lock
xorb
pop
adc
mov
add
mov
mov
add
in
out
nop
or
dec
inc
fsubs
and
lods
cmc
aas
or
in
out
push
lods
das
pop
stos
xor
in
aas
lret
jb
lods
pop
cmpb
hlt
jbe
inc
push
jle
dec
push
add
adc
dec
js
mov
ljmp
mov
push
mov
inc
into
add
pusha
dec
into
mov
bound
lods
fsubl
xchg
cmp
inc
fsubr
rcrl
dec
push
xchg
pusha
xorl
jp
cmc
xor
dec
testl
rcrb
dec
js
in
xor
stc
inc
push
sarl
je
lcall
add
test
outsb
loopne
mov
addl
loopne
pop
lods
xchg
fisttps
push
aaa
inc
add
add
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
and
js
out
ja
ss
mov
movsb
cmp
dec
add
mov
pop
mull
lahf
int
jge
jle
add
ret
hlt
out
arpl
in
xlat
xchg
adc
inc
insb
mov
insb
icebp
or
inc
cmp
cld
mov
pusha
outsl
cmpsl
fadds
lahf
xchg
mov
adc
out
add
cmp
jl
xchg
sbb
popa
cmp
sbb
mov
sub
xchg
adc
movsl
dec
adc
jl
pop
dec
inc
test
and
sbb
adc
rol
in
or
test
xchg
cmp
add
adc
dec
pop
into
mov
adc
pusha
repz
cwtl
in
ss
xor
mov
jne
mov
xor
add
rcrl
cwtl
int3
mov
xchg
aam
fsub
test
xor
dec
inc
and
sbb
lds
test
dec
scas
in
cli
sbb
orl
xor
test
push
aam
xchg
stos
out
sti
mov
sbb
popa
jno
xor
stos
sbbb
dec
ljmp
pop
mov
mov
mov
mov
lcall
imul
xor
subl
push
fdivl
sub
nop
cltd
jmp
jle
dec
mov
inc
popa
jmp
mov
push
jo
cld
pusha
sahf
popa
push
jbe
xor
inc
xor
inc
inc
fsub
pop
ja
enter
lods
es
pop
add
jmp
test
iret
xchg
movsb
enter
xchg
jbe
jecxz
or
add
or
xchg
jmp
aaa
dec
sti
scas
jge
hlt
pop
or
and
mov
cmp
cmc
nop
push
insl
mov
add
pop
shrb
loop
xor
mov
dec
dec
mov
in
dec
inc
mov
adc
xor
inc
loop
loop
pop
cmp
or
jns
daa
push
shlb
sbb
mov
or
movsl
lock
cmp
push
mov
adc
daa
cmp
dec
daa
cli
aad
sbb
jo
hlt
mov
jo
add
adc
out
mov
mov
lods
push
push
mov
adc
addr16
mov
or
lahf
xchg
push
and
call
je
mov
sbbl
or
testb
ret
ficompl
mov
jne
xor
pop
cmp
mov
mov
jge
fcoml
mov
jns
jge
lret
jp
in
jp
cltd
mov
rcrl
mov
cmpsl
movsb
test
sarl
lret
les
mov
mov
mov
scas
mov
xchg
inc
and
sahf
cwtl
imul
jb
sahf
aad
add
ja
sub
divb
push
or
imul
adc
dec
xchg
and
scas
imul
push
push
subb
cmpsb
jg
adc
pop
stos
mov
movlps
adc
call
cs
roll
iret
dec
dec
push
fidivl
cld
jnp
fs
adc
pop
sar
push
daa
add
add
fwait
shll
cld
xor
addr16
mov
call
push
xchg
push
add
fwait
and
cwtl
adc
push
ficoml
mov
frstor
arpl
out
call
ja
jle
cmp
stos
fnstsw
movsb
push
rcl
jae
hlt
xchg
jg
and
stos
arpl
xor
or
pop
fs
scas
aam
jno
ja
add
inc
mov
add
xchg
jge
lock
jge
flds
cmpl
clc
jne
stos
testl
cmpb
mov
mov
imul
mov
sbb
pop
cld
movsl
aas
mov
orl
jp
push
push
shlb
push
adc
and
mov
xlat
sub
mov
insb
addr16
adc
sbb
pop
out
lcall
jb
outsl
popa
xchg
fdivs
xorl
push
add
jnp
cmc
push
leave
ret
test
mov
ja
loope
mov
pop
sub
fsubr
sub
imul
inc
and
shlb
test
setae
sbb
jecxz
or
push
leave
pop
pop
dec
mov
shlb
jp
adc
fsubl
dec
popf
call
test
aaa
in
add
test
jbe
inc
lock
shrb
mov
orl
dec
mov
int3
xor
lds
pop
mov
addr16
xor
unpcklps
fildll
pushf
dec
inc
lret
and
xchg
imul
and
jb
or
mov
sub
xchg
sahf
outsl
outsl
imul
daa
jge
dec
int
aas
loopne
xor
or
jne
daa
xlat
aam
mov
fs
dec
aaa
sahf
inc
lcall
or
jns
or
or
and
mov
fwait
dec
jle
jmp
cmp
lea
sub
push
jl,pt
inc
outsb
pusha
in
dec
aam
push
xor
lahf
inc
mov
loop
and
scas
fdivl
movsb
push
imul
sbb
inc
or
mov
mov
adc
movsl
out
scas
jecxz
jo
andb
leave
sti
mov
push
xlat
xor
cmp
dec
ljmp
inc
jno
sub
lret
mov
jge
outsl
xor
inc
stos
rcr
leave
push
xor
mov
mov
jo
inc
das
enter
rcr
fwait
inc
pop
lock
sbb
sahf
pop
mov
std
add
dec
mov
mov
push
push
pusha
mov
es
pop
mov
xor
xchg
inc
xor
lods
cmc
mov
cmp
sahf
lea
test
pop
add
aas
inc
data16
add
push
jae
and
adc
bound
loopne
jp
into
mov
popf
pop
jno
int3
dec
mov
jg
into
xor
xor
mov
imul
out
sbb
xlat
insl
dec
ds
test
insb
push
call
daa
fpatan
mov
mov
mov
jno
rorb
push
int
xchg
dec
daa
loop
sbbl
and
jnp
fisttpl
sub
mov
fucomi
xchg
in
mov
mov
inc
insl
dec
jmp
mov
popa
hlt
repnz
je
bound
adc
dec
mov
lcall
es
or
or
pushf
cmp
aad
dec
mov
or
inc
in
jge
sti
packsswb
jle
sub
cmpl
jp
incb
and
add
adc
xchg
dec
js
es
stc
pop
je
outsb
jnp
jnp
ss
cmp
movsb
sub
mov
add
insl
jl
mov
inc
and
arpl
les
adc
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
pushf
out
mov
das
aam
ja
xchg
sub
ss
mov
pop
out
xchg
mov
cmp
int
icebp
dec
jo
sub
imul
orb
scas
jge
addl
popa
and
mov
xchg
jnp
sub
ljmp
sbb
cmp
pop
imul
xchg
inc
cs
sbb
inc
mov
stc
jmp
jl
mov
and
in
push
dec
shll
jne
movsb
or
movsl
movsl
add
iret
mov
sbb
fstpl
int
xor
mov
fwait
std
inc
dec
data16
adc
popa
pop
pop
inc
in
push
cmp
stos
std
fwait
jne
aas
aad
outsb
push
push
ljmp
inc
cmp
push
push
and
adc
in
add
pop
popf
pop
das
out
scas
xor
jne
lock
arpl
jl
pop
jae
lds
and
inc
popa
stc
aas
jbe
aas
adc
out
cld
adc
xor
cltd
movntps
sbb
dec
add
mov
pop
shlb
dec
gs
mov
lret
lahf
mov
lahf
pop
xor
mov
pop
pop
add
lods
test
cli
rcrb
adc
or
ljmp
sub
and
dec
test
mov
xor
mov
imul
int3
hlt
sar
imull
icebp
stos
movsb
mov
xchg
inc
mov
mov
xchg
push
xchg
movsb
xchg
dec
call
pop
dec
xor
mov
stos
stos
stos
clc
cmp
cmp
mov
pop
push
dec
aaa
mov
ss
cmp
inc
pop
mov
cmp
adc
lods
jl
jmp
or
push
or
dec
pcmpeqb
mov
add
mov
out
mov
gs
aam
pop
inc
fabs
repz
arpl
cmp
mov
clc
outsl
adc
stos
sti
mov
add
mov
hlt
cmc
pop
sub
mov
lds
push
push
inc
bound
fcomps
mov
add
icebp
jle
mov
popa
loopne
shrl
xchg
test
cmp
jmp
out
pop
stos
push
loope
mov
shl
inc
xor
fldenv
and
cltd
dec
and
out
inc
fiadds
pop
cmpsl
fst
repnz
das
cmpb
bound
test
jnp
mov
cmp
push
enter
xchg
dec
cmp
mov
fwait
out
push
mov
push
inc
out
pop
add
xchg
mov
lcall
jmp
int3
sub
xor
dec
xlat
push
mov
popa
mov
mov
xorl
dec
pop
sbb
mov
fcoms
mov
pop
mov
test
push
xor
fisttpl
cmp
stos
dec
cwtl
cmpsl
ficoml
pop
mov
leave
sbb
testb
cmc
fisttpl
hlt
test
sbb
fimull
mov
push
pop
jo
scas
xchg
dec
scas
ret
mov
ss
inc
or
xor
xchg
dec
and
push
cltd
addl
sub
sbb
repnz
cltd
adc
sub
pop
or
cli
repz
mov
pusha
test
push
ljmp
mov
cli
or
add
jmp
sar
xor
jge
mov
test
mov
jg
rorb
xchg
sbb
aaa
xor
scas
add
or
stc
mov
cmpsl
mov
popf
push
sbb
sub
sub
mov
lods
dec
pushl
hlt
mov
ror
inc
mov
mov
sub
xor
aaa
lods
cmp
aas
mov
push
std
popf
out
fmul
lret
pop
dec
inc
pavgb
mov
jae
xchg
ret
jmp
mov
leave
cltd
and
pop
mov
dec
dec
mov
jmp
cmp
in
jecxz
adc
or
cmpsb
push
pop
sbb
pushf
or
js
push
sbb
fidivl
mov
pop
es
inc
lea
movsb
lahf
inc
push
js
cmpb
cwtl
leave
lahf
aad
dec
pop
sbb
dec
xor
imul
pop
pop
jp
cld
imul
addr16
cmp
in
clc
and
popf
push
push
dec
pop
jl
adc
fisubrs
sub
pop
repz
sbb
jg
jb
adc
xchg
mov
xor
aad
dec
sub
mov
jae
mov
mov
mov
mov
imul
sahf
cmpsl
xchg
lock
mov
jecxz
push
lcall
and
dec
aam
fdivl
mov
pop
loope
or
add
das
cs
xor
cmp
test
ret
adc
lret
outsl
cmpsl
jge
mov
mov
dec
sub
pop
or
insb
fcompl
loopne
pop
lea
add
cmp
fmull
inc
xorl
dec
mov
stc
add
popa
cld
and
xor
push
mov
xor
adc
xchg
cmp
in
cmp
dec
dec
jnp
sub
gs
add
fdivrp
insl
out
out
cwtl
outsl
mov
inc
stc
mov
mov
cmp
in
iret
and
test
out
push
icebp
jl
ret
dec
pop
hlt
xchg
stc
loope
aaa
fldenv
sbb
and
test
jo
mov
push
dec
xor
cmpsb
push
xchg
ret
ds
fdivrl
je
test
xchg
int3
and
addr16
jno
jne
jno
add
dec
out
mov
add
ret
and
dec
rorl
dec
ret
add
and
add
push
or
cmp
js
sub
lds
in
in
mov
sbb
orb
push
inc
jmp
push
js
push
arpl
lret
negl
pop
push
ret
xlat
cmp
loop
push
fsts
pop
in
fs
push
out
add
popa
or
mov
sbb
push
jmp
push
push
xchg
fwait
jne
pop
mov
pop
mov
xor
dec
out
inc
inc
in
andl
xlat
mov
addr16
fisubrs
fdivs
xchg
xchg
add
push
jb
pop
cmpsb
adc
mov
sbb
dec
jecxz
imul
mov
outsl
adc
mov
lds
lahf
xor
mov
mov
lret
push
push
scas
mov
out
xchg
lret
xchg
stos
enter
mov
and
inc
addr16
mov
mov
mov
mov
ljmp
test
or
or
call
repnz
cmp
jecxz
jecxz
loopne
rol
fisubrs
xchg
lcall
mov
pop
cli
inc
mov
dec
fldcw
or
ret
nop
xchg
inc
xchg
stos
lock
mov
jns
hlt
push
xchg
pop
cmp
jl
xchg
jns
push
stos
push
popa
cltd
sub
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
jg
xchg
pop
jg
xchg
push
call
push
fcoml
movsb
scas
movb
pop
jmp
xchg
sbb
imul
pushf
push
lea
fmull
pop
push
cmc
fwait
stc
cmp
push
jl
jmp
xor
test
insl
pop
loop
inc
mov
xchg
je
cmp
adc
xchg
cmp
inc
mov
push
data16
add
adcl
nop
add
jg
mov
test
negl
enter
fcmovb
inc
insb
or
stos
scas
mov
lret
pusha
test
sarl
cwtl
into
pop
pusha
push
mov
aas
xor
shlb
sti
test
or
out
sub
out
les
sub
rcl
push
scas
bound
inc
neg
add
push
inc
push
addr16
sbb
adc
xchg
jmp
push
bound
mov
pop
mov
mov
cltd
and
add
daa
fidivrl
jnp
inc
imul
jno
movsl
popf
mov
push
das
xchg
movsb
lods
mov
imul
divb
sbbl
out
mov
lahf
xchg
xchg
jle
loope
sub
out
cmp
stos
cli
pop
cmp
rcrb
pop
and
in
mov
xchg
aas
mov
ss
push
insl
insl
sahf
jp
push
add
dec
and
cld
scas
xchg
movsb
mov
rclb
dec
shrb
int3
push
xchg
jno
inc
rcrb
fdivp
lcall
add
pop
loop
sub
mov
addr16
icebp
out
arpl
cmp
test
cmovp
and
sub
btc
push
xor
cmpsl
pop
pop
addl
push
test
mov
push
jg
pop
add
scas
dec
xor
xchg
dec
jne
fildll
mov
sbb
pop
pop
pop
sub
popf
xchg
and
outsb
movl
out
xchg
data16
sub
mov
mov
mov
sarl
je
pop
inc
mov
push
daa
sahf
cmpsb
jle
mov
lret
pop
movsb
iret
add
rcll
push
ficompl
rcl
add
movsl
xor
in
dec
add
les
data16
mov
sbb
or
aas
std
aad
xchg
into
ljmp
lret
mov
dec
cmpsl
std
repz
and
mov
mov
push
xchg
stos
imul
aad
sbb
mov
dec
ret
inc
cld
rcrb
pop
je
push
enter
pop
lods
fcoms
xchg
xchg
int
and
flds
dec
mul
inc
jbe
nop
fwait
inc
add
inc
mov
push
incb
into
mov
jge
data16
jne
adc
jle
jno
and
fidivl
sub
mov
lock
push
sub
mov
push
adc
fsubs
sub
fcmovnu
cli
sub
js
mov
hlt
jns
xor
in
jb
lahf
mov
std
sti
jecxz
in
mov
mov
rorb
adc
push
jle
mov
in
cmp
pop
mov
inc
std
int
nop
dec
arpl
xchg
jle
xchg
inc
cwtl
cmc
and
jno
push
xlat
mov
out
push
push
xchg
fdivrs
das
out
lcall
out
mov
jl
lret
lret
jb
cmp
or
xchg
mov
test
js
divl
enterw
dec
in
gs
or
pop
push
imul
and
arpl
mov
out
dec
fwait
imul
out
jmp
adc
cs
adc
cmp
movsb
sahf
pop
stos
lret
mov
dec
adc
mov
ljmp
push
mov
cmpsb
shlb
imul
mov
cwtl
pop
out
xchg
arpl
xchg
push
loopne
lcall
cmp
icebp
mov
mov
arpl
dec
hlt
mov
repnz
xor
and
dec
insb
into
pop
jmp
mov
shl
jl
lcall
mov
lods
and
fsubs
xor
cwtl
rorl
or
movsb
xor
lcall
cld
popl
pop
xchg
aam
fs
lcall
fnstsw
jbe
dec
dec
pop
outsl
mov
js
movlps
ljmp
aad
xlat
mov
mov
pop
lods
xchg
jbe
or
divl
jns
inc
data16
and
cld
xor
lock
adc
jb
sbb
test
subb
test
leave
xlat
jbe
mov
cmp
das
mov
rcll
jle,pt
mov
int3
addr16
pop
test
loop
inc
xchg
jb
cmp
ljmp
pop
or
pop
cmp
cwtl
push
push
scas
and
mov
sub
das
jle
and
cmp
andb
insl
sbbl
int3
xlat
mov
cli
mov
mov
jb
xchg
mov
adc
xorb
mov
outsl
daa
mov
inc
sub
cmpsb
xchg
lock
or
sub
sub
out
inc
nop
out
lcall
mov
mov
jge
push
out
stos
data16
loop
iret
fcmove
jge
pushf
add
insl
pop
in
push
jmp
pop
sbbl
lock
sbb
fisubrs
outsl
pop
xlat
rcll
pop
imul
jge
jl
scas
fidivrs
orb
out
das
xor
sbb
iret
add
jecxz
dec
sarl
and
and
outsb
cmp
jecxz
mov
fmull
mov
incl
lods
sarb
jp
icebp
stos
cmc
out
push
jp
lahf
xor
es
pusha
aam
mov
inc
fs
inc
mov
int3
push
or
adc
push
sub
enter
ja
push
fistl
es
inc
xchg
cmpsl
jbe
add
into
adc
adc
or
dec
inc
and
mov
scas
and
inc
enter
js
movsl
fstpt
cli
es
push
push
aad
aam
and
cli
pop
mov
sub
push
rcll
enter
xlat
rol
lret
hlt
and
xor
fldcw
push
jp
inc
lret
xor
scas
push
inc
and
pop
out
push
icebp
jmp
push
inc
loopne
insl
jns
push
jmp
sub
stos
adc
or
ljmp
insl
sbb
cmp
and
je
icebp
gs
outsb
pushf
adc
repz
popf
imul
into
adc
fucom
lea
cmpsb
leave
stos
pop
out
and
test
aam
jo
dec
sbb
mov
lock
repz
xchg
xchg
bound
data16
jmp
es
xchg
dec
stc
sbb
in
lahf
sbb
push
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
or
xchg
les
out
mov
dec
arpl
mov
pushf
cwtl
and
and
dec
adc
push
lcall
scas
mov
sbb
sbb
mov
dec
stos
dec
xchg
decl
adc
out
repz
or
and
rcrb
sbb
mov
insl
push
inc
mov
jp
jg
hlt
loope
xorl
aad
ret
enter
push
push
adc
mov
adc
dec
adc
mov
les
fildll
push
popf
jp
test
pop
arpl
cs
dec
xchg
arpl
fsubrl
or
nop
adc
jmp
das
test
in
or
fisubrs
jp
push
fstl
push
adc
sub
pop
cmc
xchg
aam
or
insb
or
out
fcmovne
out
xchg
adc
push
sub
xor
jle
xlat
add
lea
rcrb
cmc
or
movsb
push
arpl
aaa
jecxz
lret
cmp
data16
push
leave
jbe
and
and
fsub
imull
jecxz
popf
out
xchg
fsubrs
aas
or
mov
mov
ror
mov
xchg
mov
mov
push
cs
lret
mov
xor
hlt
stc
loop
add
pop
fists
jb
mov
aad
jne
aaa
sahf
push
test
loopne
std
jo
lock
mov
rorb
push
hlt
arpl
aam
jge
push
roll
or
cmc
lock
or
cmp
lea
fisttpll
ret
add
ds
add
je
xor
dec
loop
mov
dec
pop
push
sub
and
int
call
fdivrl
or
lahf
std
or
iret
mov
jbe
xchg
iret
dec
dec
inc
adc
dec
xchg
ss
ljmp
sbb
sti
mov
xchg
and
or
daa
xchg
sarl
xchg
testl
pop
cmp
push
sub
in
push
insb
push
xlat
mov
push
push
mov
ljmp
jmp
stc
lret
cli
mov
aam
push
xchg
push
cmp
add
test
cmp
sti
jp,pt
mov
xchg
mov
push
dec
pop
cld
fdiv
fs
sub
sahf
xorl
adcl
or
mov
cwtl
stc
imul
dec
and
loope
std
or
ss
out
ror
arpl
sti
loope
enter
or
cmpsl
or
xor
shr
imul
sub
mov
aas
cmc
dec
in
into
push
sub
add
popf
add
pop
cs
stos
inc
mov
cmc
jno
push
int3
xor
dec
push
mov
xchg
xor
cmp
lods
inc
lea
mov
aas
jns
add
stos
fidivrl
xor
sahf
xor
mov
out
out
dec
cmpsb
xchg
cltd
push
into
mov
sbb
into
es
sti
or
int
icebp
neg
lock
jg
mov
push
mov
xchg
push
dec
jnp
enter
subl
dec
sbb
cs
mov
ljmp
pop
cmc
sbb
sbb
js
iret
imul
dec
pop
sbb
mov
outsl
jne
fsts
scas
and
jmp
pop
enter
fidivrs
mov
xor
jno
xchg
cltd
out
sbb
aas
adc
xchg
sub
inc
orl
add
in
test
inc
cmp
outsl
push
mov
gs
push
cmp
mov
fcmovnbe
mov
cltd
xor
rolb
adc
dec
push
push
xchg
push
hlt
shlb
ret
mov
inc
push
add
xchg
cli
shl
in
aam
scas
sbb
sbb
mov
xor
test
jbe
xor
mov
xor
inc
dec
fisubrl
jecxz
add
nop
clc
sarb
inc
arpl
cltd
call
fisttpl
movsl
ja
adc
mov
fnstsw
test
test
jp
imul
mov
popa
jae
aad
mov
in
aad
outsb
fisubl
addr16
lar
sahf
lods
push
jg
data16
add
mov
push
mov
mov
jno
xchg
mov
adc
push
outsb
imul
pop
cltd
fnstcw
or
ljmp
xor
popf
in
dec
jne
ljmp
cmp
movd
jae
fadds
sbb
mov
dec
cmp
fdivrl
icebp
jno
mov
cli
jecxz
xchg
mov
rcr
ret
and
popa
loope
mov
imul
stos
es
popf
xor
ljmp
cltd
jbe
mov
stc
xchg
lods
and
jbe
add
stc
xlat
ja
xorb
inc
xchg
adc
data16
sub
mov
flds
into
dec
jle
mov
out
adc
pop
mov
mov
push
mov
pmaddwd
mov
and
ds
shll
into
xor
and
fdiv
fldcw
mov
rorl
addps
scas
mov
cmpsb
scas
fstps
stos
sbb
cmp
mov
in
fwait
cld
ret
sbb
xlat
dec
push
insl
xchg
div
in
sub
push
out
pop
repz
out
bound
mov
push
mov
dec
push
xor
sahf
sbb
loope
mov
dec
inc
negl
dec
fcmovbe
and
popa
cmpsb
mov
insl
cmp
sbb
dec
cmp
aad
pop
cltd
cmp
fisubrs
adc
xchg
jb
stos
adc
pop
std
jae
aad
sub
in
bound
fs
sub
pop
shr
and
mov
push
adc
out
dec
jae
xchg
cld
pop
jg
cmpsb
push
fnsave
sbb
adc
dec
pop
test
jns
shlb
sbb
popa
push
lds
jne
push
cltd
pop
jge
xor
add
addr16
sbb
push
pop
mov
cltd
sub
out
js
pop
sbb
dec
pop
fbstp
in
dec
mov
mov
fwait
into
sbb
and
movups
popf
xor
popa
dec
mov
jo
hlt
or
pop
jo
lock
inc
addr16
dec
int3
inc
jl
mov
sbb
lret
es
add
inc
lea
sub
mov
fisttpl
add
push
inc
jne
push
test
ljmp
out
sub
adc
fmuls
mov
aad
ja
sahf
sub
imul
xorl
orb
and
loope
pop
shll
adc
xchg
andb
ss
add
xchg
ljmp
push
push
enter
imul
dec
js
push
mov
or
js
mov
iret
xchg
sub
push
and
xlat
add
fisubrs
cmp
out
je
mov
jne
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
mov
push
mov
add
dec
scas
cs
cmp
dec
sub
jmp
scas
ss
out
or
pop
mov
and
insb
gs
lcall
fisubs
stos
mov
push
mulb
dec
addr16
loop
push
mov
rolb
push
test
fisttpl
mov
pusha
mov
lcall
mov
mov
xlat
sub
fs
es
movsl
stos
xlat
adc
enter
sub
and
mov
stos
pop
xchg
out
dec
mul
vcvtss2si
aam
cmp
add
cld
xor
cmp
fbld
dec
test
shrl
push
pop
inc
aas
xlat
mov
push
test
pop
js
push
shrl
or
add
sub
xor
loope
adc
sub
ret
jae
pop
inc
fdivrs
jp
aam
jmp
mov
data16
sarb
into
xchg
mov
xor
dec
push
sbb
add
cli
cmp
lea
imul
xor
adc
push
ss
adc
sbb
bound
add
sbb
or
fstl
iret
inc
jae
call
cltd
movsb
loop
pop
sahf
lods
loop
fldcw
mov
cmp
lods
jnp
jl
push
sub
mov
adc
cmpsb
inc
repnz
or
push
repz
xchg
sti
xlat
aaa
cmpsl
jns
movd
cltd
in
xlat
dec
fucom
pop
stos
sub
jmp
sahf
cmp
lea
sahf
push
lret
inc
imul
sti
fwait
push
pop
add
imul
outsb
jge
add
sub
or
out
adc
fcomp
mov
jbe
arpl
push
pop
je
push
lret
mov
ja
sti
mov
dec
mov
push
or
pop
hlt
imul
xchg
inc
inc
pop
std
jae
cltd
cltd
flds
xor
mov
push
out
adcl
in
pushf
cmp
outsl
out
inc
pop
adc
push
popf
or
mov
add
jb
mov
daa
in
jo
in
sbb
pop
outsl
jae
fs
xor
in
dec
lods
aam
pop
stos
movsb
mov
xchg
push
inc
adc
xchg
and
sub
cmp
jecxz
add
loopne
arpl
aas
inc
shrb
fs
and
out
cmp
mov
test
pop
jl
test
icebp
insl
adc
inc
mov
xor
out
xor
push
mov
dec
orb
push
or
fbstp
loop
or
fwait
mov
mov
dec
mov
insl
xchg
dec
loopne
xor
sub
cmp
jbe
call
imul
jp
xchg
mov
cmp
ficoml
je
or
ret
popa
xchg
mov
mov
add
int
jb
imul
std
push
popf
sbb
adc
add
scas
and
enter
lret
jecxz
sbb
sub
mov
mov
add
in
mov
jae
xchg
or
adc
dec
mov
xor
add
dec
fiaddl
jle
dec
pop
add
popa
mov
inc
jecxz
inc
mov
mov
jo
outsl
sbb
xor
jns
fdivrs
aaa
jns
fidivl
je
stos
std
mov
stc
add
mov
xchg
mov
mov
das
push
lods
mov
mov
stc
mov
lds
ja
jg
mov
or
aam
adc
sbb
jmp
xchg
mov
jl
push
cmp
xchg
mov
jl
pop
into
xchg
add
push
fisubrl
pop
dec
mov
or
insl
lret
mov
in
and
xor
fisttpll
mov
outsb
pop
loopne
jl
mov
arpl
push
push
xchg
dec
into
push
mov
jns
shrl
jle
loop
pop
pop
push
adcl
mov
xchg
ficoms
push
push
push
mov
sub
cld
pop
fstpt
lds
cmp
inc
enter
push
cmp
repnz
andb
pushf
fisttps
ss
dec
mov
cmpb
inc
fildll
cmp
rcrl
addr16
fsubs
loope
test
jb
mov
cltd
aam
push
push
sahf
scas
aas
pop
iret
out
scas
xchg
mov
cmp
mov
hlt
push
icebp
xor
xchg
ffreep
push
nop
lea
sbb
iret
pop
pop
and
enter
call
cmp
sbb
xor
lret
xchg
out
push
cli
out
adc
adc
mov
jg
jg
js
xor
xor
insl
mov
aad
dec
testb
jle
fs
sbb
stc
icebp
push
pop
push
lret
sub
pop
sahf
fidivrl
outsb
pop
adc
les
les
dec
testb
lock
es
fdivrl
lret
data16
out
mov
cmp
insl
push
cmpsb
addr16
xchg
cmp
push
adc
stos
jmp
lret
or
test
pop
dec
mov
xor
jnp
stos
jno
js
mov
vmread
sub
and
xchg
push
iret
sbb
pop
mov
int3
jmp
repz
inc
mov
jp
loopne
inc
cs
and
pop
fwait
xor
negl
lret
test
fsubrl
clc
lea
xor
pop
xor
lahf
icebp
roll
add
mov
cli
jbe
xor
mov
cmpsl
shrl
push
jne
pop
pop
aad
int
push
xchg
push
xor
jge
xchg
dec
push
fcoms
and
mov
clc
cmpsl
aas
aam
rcl
loopne
jae
flds
mov
mov
sbb
sub
int
and
cmp
mov
shlb
push
xchg
nop
ja
sub
pushf
in
int3
push
mov
gs
bound
pop
sbb
mov
int
sbb
dec
push
mov
push
loopne
jecxz
rclb
aas
test
outsb
mov
fstpt
push
sbb
in
mov
jl
cmp
lods
jecxz
jne
sarb
pop
repnz
add
fistpl
jb
pop
das
or
xor
pop
fisubrs
or
pop
push
mov
pop
sub
lods
mov
lea
mov
mov
sub
lods
mov
cld
je
sti
mov
sbb
gs
xchg
jne
pusha
add
adc
pop
jl
jmp
jae
cwtl
loope
mov
out
lea
or
push
test
dec
dec
jl
adc
outsl
or
xchg
sbb
or
mov
idivl
xchg
fstpl
rcl
inc
stos
adcb
mov
jo
dec
in
sub
xchg
movsb
jb
xchg
jg
cmp
call
and
jnp
ljmp
aad
ret
sbb
mov
cs
testl
mov
imul
jns
rcll
cs
clc
loop
or
repz
pop
xchg
fmull
cmp
gs
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
pop
inc
cmp
dec
mov
ja
popa
dec
xchg
pushf
dec
nop
sub
add
sbb
mov
in
xor
ja
lcall
ret
cmp
pop
stos
cmpsb
mov
adc
jecxz
cs
mov
pop
xor
rolb
xlat
or
push
movsb
jle
cs
cld
cmp
lcall
cmc
xchg
cs
popa
adc
jno
push
sub
enter
fsubrl
int
jnp
adc
les
ss
sbb
push
xor
jecxz
mov
lock
jg
jbe
adc
ja
out
inc
push
mov
icebp
std
pop
dec
out
daa
jmp
mov
mov
sbb
xchg
dec
xchg
cld
ss
or
ljmp
adc
sub
fs
or
shrl
adc
iret
push
mov
mov
pusha
adcl
rol
ljmp
pop
inc
cmpsl
xor
popa
lahf
insl
leave
push
addr16
inc
test
cmpsb
push
sub
jne
dec
mov
outsl
cmp
mov
scas
test
mov
lods
lods
or
mov
jno
in
lea
mov
add
jae
inc
mov
lods
xchg
jnp
dec
or
mov
mov
xchg
aam
dec
iret
and
aas
add
adc
dec
outsb
out
lods
scas
or
and
stos
and
call
sbb
pop
pop
mov
inc
test
xor
inc
into
movb
arpl
inc
enter
ret
dec
fisubs
jno
sub
xchg
xchg
fbld
lea
fwait
popf
lret
dec
icebp
movsb
scas
dec
inc
push
mov
jge
sbb
jae
test
add
movsl
push
repz
aad
cmp
out
fwait
jb
xchg
and
cmp
pop
add
dec
ud0
push
lcall
pop
sahf
or
add
enter
lcall
pop
mov
mov
in
lret
lret
enter
lods
jae
mov
add
les
add
add
jbe
pop
cmpsl
fisttpll
and
jnp
in
repnz
rcl
nop
inc
dec
mov
insl
mov
pop
xchg
outsb
dec
je
sub
mov
flds
test
movsl
ljmp
adc
in
ret
jb
jne
adcb
sub
push
sti
pop
sbb
cmp
inc
ds
cmp
cs
pop
mov
pop
aas
addr16
out
js
mov
and
out
loope
jl
daa
int3
fsubr
inc
pop
cmp
mov
test
mov
sbb
stc
lods
loope
scas
shrb
jae
adc
inc
shr
sbb
dec
jb
push
xchg
xor
mov
into
jb
int
call
push
lods
jno
xchg
mov
pop
sbb
lret
scas
inc
subb
loope
mov
cmp
inc
loopne
pop
xchg
ss
dec
out
cmp
das
jb
xorl
lret
test
mov
repz
and
and
lds
lret
push
add
mov
incl
xchg
out
lods
cmp
pop
insb
test
aad
xor
mov
push
adc
ret
sub
lds
daa
pop
data16
mov
or
jmp
stos
nop
jns
daa
das
stc
mov
sarb
push
dec
in
jmp
mov
cmpsl
pop
adc
ss
mov
xlat
mov
out
sbb
test
jae
movsl
xchg
outsl
inc
mov
adc
push
lods
lcall
js
mov
mull
out
add
ljmp
imul
cli
aaa
sub
je
ljmp
lahf
adc
sub
fbstp
aas
mov
ret
lret
mov
mov
sbb
cmp
mov
ror
outsl
popf
scas
paddq
fldenv
sbb
arpl
imul
data16
mov
mov
jle
mov
clc
mov
lock
ficoms
out
jbe,pn
imul
xor
xor
sub
out
fs
jns
je
idiv
and
push
sti
int
cltd
pop
mov
ret
add
stos
sbb
ds
mov
pop
push
sahf
ficomps
and
and
daa
and
or
cli
add
fisubrl
data16
dec
es
cs
xor
ss
mov
jp
shrl
test
dec
push
addl
push
mov
push
push
sarl
shrl
lods
mov
test
hlt
dec
stos
ss
xchg
cmc
and
xchg
push
add
sbb
in
cmp
jmp
sub
jle
icebp
lods
test
mov
pushl
add
sahf
dec
add
mov
jmp
mov
fldl
and
or
lret
push
pop
inc
push
orl
cmpsb
and
xor
sub
cli
cltd
outsb
cmp
or
sbb
dec
push
xor
adc
repz
jae
pop
cmp
call
test
adc
sbb
dec
jl
mov
jo
mov
into
mov
aaa
inc
psubw
les
flds
add
dec
mov
sub
cltd
insb
insl
test
cmp
push
push
lahf
mov
xor
stos
sub
jmp
into
les
push
jo
fmull
rclb
xchg
mov
push
inc
aad
das
lea
sbb
mov
push
fcom
jnp
shlb
ds
in
std
jp
xchg
scas
mov
sbb
cmp
fiaddl
outsl
popf
ds
cmc
push
push
popf
in
pop
das
jnp
lcall
loopne
jo
xlat
or
xor
sbb
popa
adc
sub
mov
sti
std
or
shl
mov
sub
mov
jo
fucomp
xor
je
cwtl
xor
psrlw
and
push
dec
int3
xchg
pushf
stos
dec
aas
pop
fldt
out
dec
inc
in
roll
cmc
emms
cmp
push
aad
std
add
fcoms
cmc
push
push
jp
jae
aas
fwait
add
xorl
das
and
int
fists
adc
aaa
lret
adc
jg
sbb
mov
test
pop
xchg
es
sbb
enter
mov
add
xchg
or
hlt
dec
enter
push
sub
push
insb
mov
and
adc
pop
push
movsl
fildl
icebp
les
jle
imul
xchg
mov
imul
jns
repz
insl
dec
sbb
shll
cmp
imul
push
sti
adc
add
mov
cmp
xchg
jecxz
pop
das
xor
adc
jle
push
out
adc
in
mov
int
lret
dec
testl
cwtl
mov
or
ljmp
out
pop
mov
jno
inc
sub
in
pop
and
ja
pop
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
ljmp
xchg
loopne
add
fucomip
sti
repnz
push
push
mov
jmp
jmp
and
sub
xlat
sub
jb
inc
scas
jle
psrlw
imul
popf
or
bound
insb
out
cmp
mov
dec
divb
mov
push
adc
pop
inc
xchg
jnp
int
mov
jle
dec
mov
ja
jo
mul
sbb
popf
inc
cld
stos
pop
push
mov
cmp
fisubs
movl
call
jle
test
in
lret
pop
leave
adc
xor
test
mov
sti
adc
push
incl
pop
adc
inc
nop
mov
lahf
stos
sbb
pop
pop
push
mov
not
jne
out
jecxz
sub
inc
jg
inc
pop
ret
leave
call
cld
dec
std
push
xor
outsl
lret
add
out
outsl
lods
in
or
or
addr16
push
dec
cmc
add
pushf
frstor
shl
aas
movsb
in
mov
jne
in
sub
xorb
add
dec
jne
nop
cmpl
stc
push
inc
out
into
push
xor
xchg
inc
pop
incl
mov
fwait
int3
pop
cmp
xlat
mov
or
dec
scas
pop
xchg
popa
fwait
jno
xchg
inc
xchg
add
or
mov
es
xor
lret
push
xchg
add
mov
push
or
out
sbb
or
xor
pop
es
gs
adc
sahf
dec
xor
cld
mov
push
movsl
or
nop
sbb
sar
test
loopne
sub
filds
xchg
rolb
xchg
fwait
push
pop
fwait
dec
std
inc
lds
clc
dec
mov
pop
pop
mov
dec
outsb
xor
lahf
sub
leave
loopne
outsl
xor
scas
xchg
pushf
repnz
ffreep
aad
loope
mov
dec
lcall
xor
mov
iret
xor
shlb
popf
ret
fisttpll
inc
sbb
test
adc
popa
in
loop
popf
mov
pop
pop
xchg
mov
call
mov
les
cmpsb
add
mov
and
push
or
jmp
sub
mov
dec
xchg
pop
mov
mov
mov
xchg
cs
enter
adc
xor
fs
loopne
sbb
push
fsubr
sub
sub
adc
aam
jnp
icebp
xor
push
rcll
in
jnp
cwtl
jnp
aas
dec
pop
pop
fst
lea
jp
aam
inc
leave
dec
mov
xchg
enter
inc
in
push
mov
push
mov
or
cs
adc
dec
leave
nop
js
pop
in
xor
fmull
ret
cmpl
pop
push
pop
mov
xor
jns
pop
mov
imul
or
es
cmp
xor
fwait
pop
pop
icebp
jmp
adc
addr16
adc
insl
ss
in
sub
inc
test
or
inc
jnp
add
and
mov
sti
imul
jle
and
mov
and
mov
int3
addr16
cwtl
das
inc
mov
dec
dec
call
mov
test
dec
push
cltd
add
and
lock
jl
inc
push
jp
testl
dec
clc
cmp
iret
dec
inc
cmc
pop
xor
mov
add
xchg
mov
pop
mov
dec
in
mov
push
shlb
bswap
or
leave
xor
outsb
out
push
push
dec
insl
insl
xchg
mov
fcoms
jmp
sub
mov
jnp
shrb
inc
fildll
call
or
add
pop
jmp
scas
inc
inc
lret
push
clc
popa
push
ds
mov
hlt
stc
ds
xchg
ffreep
testl
clc
fs
mov
out
pop
into
sbb
scas
das
sub
popf
pop
in
sbb
xchg
orl
pop
pop
xchg
adc
and
dec
sub
sbb
or
out
aaa
frstor
rcrb
cmpl
aas
das
jp
call
shrl
jp,pn
outsb
cs
jecxz
sub
negb
sub
int3
lock
in
imul
adc
xchg
add
push
jmp
mov
and
xchg
mov
add
mov
ljmp
rcl
lahf
pop
xlat
sbb
lea
cmp
adc
jge
out
jle
test
loopne
jo
nop
mov
sub
jns
cmp
mov
push
lods
fadds
sbb
mov
test
xlat
punpcklwd
push
daa
adc
loope
inc
iret
popf
push
and
xchg
loope
mov
cmp
dec
jecxz
jae
shrl
cs
call
pop
sbb
or
iret
lods
inc
sub
insl
mov
and
fimull
jmp
jb
std
jle
imul
insb
ret
xor
fiadds
push
aad
aam
arpl
add
movsl
stos
ss
pop
data16
daa
mov
cld
je
js
mov
push
push
dec
sub
ret
or
pop
mov
stc
mov
push
mov
push
in
outsl
divps
add
xchg
or
jnp
test
or
push
clc
mov
push
mov
in
ja
imul
sub
adc
mov
lods
push
lret
mov
ret
mov
jg
dec
sub
incl
pop
movsb
cmp
push
nop
pop
out
ds
jb
bound
pop
arpl
jg
adc
cmp
fcomps
sbb
push
rcrl
test
sub
data16
mov
mov
pop
mov
in
cmc
mov
inc
pop
mov
fsubl
bswap
sbb
mov
or
pop
fs
out
cmp
xchg
sub
ljmp
fmull
lods
jg
mov
adc
outsb
mov
aaa
imul
push
mov
ds
add
movsl
mov
xchg
dec
sbb
jge
and
xchg
test
jnp
insl
negb
or
xchg
cltd
out
sub
fiadds
int
add
push
mov
in
sub
dec
xchg
test
lea
imul
xchg
jae
push
imul
adc
vmread
or
jecxz
pop
rcl
add
movsb
or
in
adc
enter
popa
mov
test
call
out
cld
adc
subb
jecxz
xor
push
stc
lds
adcb
stos
outsl
push
mov
icebp
dec
jb
and
sahf
fstl
and
pop
cmpsl
in
mov
pop
movsb
sub
and
pop
in
fstl
enter
inc
sub
stos
rclb
inc
xor
cli
xchg
outsb
jle
mov
xchg
xlat
jae
outsl
pop
jo
pop
fwait
jle
push
mov
push
jle
cmpsb
lcall
orb
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
jmp
mov
ja
inc
mov
sar
data16
sub
mov
and
mov
mov
and
push
xor
cmc
mov
jae
adc
ret
subb
sub
dec
outsb
loop
xchg
jbe
mov
sub
insb
mov
lea
pop
xor
jmp
lods
xlat
mov
inc
sbb
sbb
xchg
cmpsl
fdivs
mov
add
add
mov
or
cmpb
clc
out
mov
and
inc
push
xchg
das
pop
outsb
daa
jns
jae
jns
mov
jmp
adcb
shlb
mov
push
rol
xor
xlat
and
sbb
dec
jmp
popf
mov
dec
sti
fs
mov
sbb
pop
icebp
cld
sbb
fldcw
sahf
push
sahf
mov
and
push
lds
in
imul
or
fsubrs
cmpsl
push
pop
inc
popa
lods
daa
clc
clc
jne
adc
cmpb
sti
mov
popa
ret
xor
das
xor
xchg
loop
adc
je
jg
adc
mov
leave
int
mov
stc
stos
adcb
dec
jp
fistpl
jmp
incb
fnstenv
out
or
inc
lods
jp
out
or
xchg
pop
jbe
es
stc
shll
pop
repnz
fists
jns
push
dec
aas
andb
testl
dec
sbb
popa
add
arpl
cmp
pushf
lret
sti
dec
test
jb
call
xchg
mov
lcall
out
aas
int3
hlt
stos
or
or
dec
xor
push
mov
iret
push
jns
repz
cmp
int3
repnz
or
lea
scas
lahf
cmp
pusha
adc
and
add
xor
inc
lcall
cmpl
add
sub
jmp
push
push
lahf
andl
cmpsl
and
pop
in
pop
and
mov
lret
test
lock
jmp
sbb
jp
scas
mov
inc
div
stc
or
dec
int
bound
or
outsl
dec
roll
lret
dec
sub
pop
sbb
js
add
mov
sbb
fdivs
pop
jno
sti
movb
test
stc
xor
add
mov
mov
cmp
les
stos
xor
xchg
dec
cmp
push
dec
cs
lret
addr16
ss
pop
or
ret
popa
xor
pop
pop
pop
test
mov
in
mov
fs
dec
and
cmpsb
xor
pop
repz
cmpsb
cmc
dec
push
popa
cmpsb
lret
pop
loopne
cmp
dec
fstpl
aaa
dec
xchg
xchg
fwait
repz
lret
and
fcoml
fs
loopne
mov
sub
or
pop
xor
jo
mov
lds
and
cmp
mov
pop
popa
stc
jmp
out
lret
mov
sbb
add
pop
pop
lcall
outsb
sbb
ljmp
lods
pushl
sbb
inc
dec
xor
stc
mov
aas
scas
js
lods
fldl2t
popa
es
testb
pop
or
rclb
in
mov
js
push
inc
lcall
cltd
shlb
and
aaa
test
adc
imull
hlt
sbb
push
mov
push
jp
cmpsb
or
in
sbb
xor
jb
shlb
sub
ret
stos
add
jo
je
imul
and
out
mov
inc
aas
mov
pop
stc
iret
lods
pop
add
test
rolb
scas
imul
and
xor
pop
out
lcall
mov
and
mov
jbe
mov
mov
cmp
sub
jno
jl
iret
cmp
xor
cli
pop
mov
and
adcl
imul
aam
inc
adc
cmp
xchg
int3
lods
ret
mov
test
lret
xchg
cltd
clc
jbe
imul
jp
fs
shlb
inc
testl
or
arpl
mov
sbb
and
mov
and
cmp
xor
int3
sbbl
in
mov
jmp
push
xor
pushf
sub
adc
in
jecxz
lods
mov
add
ficoml
and
inc
cmp
xor
ret
inc
loopne
loop
add
stos
stos
xchg
call
in
or
lahf
push
ljmp
inc
inc
jae
and
sub
clc
adc
mov
mov
xor
inc
cmp
cmp
aad
jnp
lods
adc
push
aad
lcall
sbb
and
inc
inc
cmp
cmp
gs
stos
cld
inc
push
mov
es
movsb
into
mov
fiadds
and
inc
cmp
adc
push
sbbl
add
mov
mov
dec
out
and
add
out
rcr
shlb
mov
dec
add
fisttpl
inc
push
iret
pop
sub
push
popf
mov
gs
jl
fisubs
sbb
sub
or
stos
push
popf
test
sbb
notl
jo
out
test
push
mov
not
mov
xchg
flds
mov
dec
out
sarl
mov
mov
jnp
dec
call
add
xchg
xchg
push
enter
mov
inc
lcall
mov
dec
jbe
out
push
iret
mov
lock
mov
int
xchg
lods
mov
inc
pop
sub
fs
push
jp
fld1
xchg
add
dec
push
jae
mov
xchg
push
out
out
cmp
push
and
xor
xchg
ljmp
sub
stos
mov
pop
jg
subl
inc
lret
mov
dec
cltd
in
inc
cmc
push
sbbl
xchg
adc
jge
cmp
jmp
out
dec
or
sbb
pop
sarl
divb
arpl
and
push
push
out
pop
lds
and
sbb
addr16
es
das
inc
add
cmp
sbbb
loop
jecxz
mov
mov
push
popf
inc
stos
xor
jmp
ret
xor
lret
push
ret
insb
inc
mov
test
sub
mov
es
fcompl
dec
and
add
ss
stos
loop
aas
mov
and
push
mov
push
jl
cmp
dec
jp
test
aaa
test
daa
addr16
enter
sbb
mov
cmpsb
jb
mov
mov
jnp
jae
cmp
daa
insb
lcall
xchg
xchg
lret
stc
loope
add
in
rolb
add
push
in
and
push
cmp
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
popl
cwtl
dec
fdivs
jb
mov
sub
mov
fs
jo
enter
test
addr16
call
fidivs
std
fists
leave
mov
mov
popl
outsb
xchg
fisubl
cmp
out
cwtl
scas
aas
es
clc
jl
xor
and
mov
subl
lods
cs
pop
sub
cltd
fildll
jne
je
jle
pop
out
mov
add
mov
sbb
sub
xor
cmp
cmp
out
dec
subl
mov
cmc
movsb
adc
decl
sbb
pop
mov
loope
or
sahf
pop
aad
pop
dec
cli
into
std
hlt
and
mov
push
rorb
xor
dec
jecxz
jbe
cmp
std
das
popf
fistps
pop
mov
mov
out
in
movsb
idivb
ds
mov
movsb
lret
fldt
sahf
fbstp
fdivrl
jnp
out
xor
js
mov
jge
sbb
frstor
mov
adc
sbb
cmp
test
lods
mov
aad
sub
pop
nop
push
xchg
loop
sub
ja
xchg
sub
je
push
push
jne
imul
fldl
stos
cmp
daa
pop
pop
add
lods
je
cmp
movsl
je
in
or
adc
or
lret
mov
sub
jmp
add
inc
xchg
insb
jne
pop
hlt
repnz
inc
mov
push
out
shrl
in
loope
or
test
xchg
cmp
shrb
dec
dec
xorl
sub
test
lods
repz
test
mov
and
shl
mov
ret
cltd
aaa
bound
pop
dec
sbb
iret
xor
sbb
imul
in
stc
jne
sarl
xchg
push
push
aaa
andb
enter
insl
loope
popl
xor
ret
mov
jmp
mov
stos
adc
es
jo
js
push
aas
adc
dec
stos
sub
testl
pop
inc
in
lret
mov
jecxz
popa
enter
inc
enter
loopne
scas
xchg
jae
lret
adc
xchg
repz
rorb
jecxz
mov
test
loopne
jns
into
stos
out
dec
sahf
cmc
dec
repnz
push
imul
outsb
test
add
jg
ficoml
aaa
inc
je
sbb
sbb
sbb
add
adc
cli
aam
lods
xchg
mov
pop
add
arpl
push
cli
fadd
inc
into
or
jb
out
notb
je
sub
lea
pusha
orb
sub
lods
in
hlt
mov
mov
fcmovbe
mov
icebp
popa
inc
adc
scas
xchg
test
add
orl
mov
jno
fsts
call
cwtl
add
pop
mov
test
dec
and
push
cli
xor
cmp
dec
test
mov
inc
sub
push
rclb
jne
cmpsb
call
inc
pushw
jnp
pop
pop
push
mov
pop
mov
popa
sbb
jnp
aam
add
fwait
dec
idivl
fwait
xchg
fcoms
scas
shll
loope
aaa
mov
sbb
enter
sbb
xor
cmp
add
push
pop
cmp
dec
fiadds
mov
xchg
ret
push
imul
mov
sbb
push
shll
sahf
hlt
fadd
out
cmpsl
ds
test
push
mov
cmpsb
jmp
pop
push
mov
sbb
nop
mov
cmp
popf
mov
shlb
pop
in
xchg
outsb
add
sbb
adc
xor
sbb
add
mov
jge
ss
and
sub
lcall
scas
add
xchg
fwait
dec
adc
ss
loope
dec
test
fistps
call
xchg
popl
fisttpll
adc
xor
push
push
xchg
lock
es
xor
mov
gs
les
xchg
cld
daa
mov
cmpsb
mov
mov
call
loope
xchg
cld
mov
ret
xor
mov
adc
push
cmp
mov
jne
sbb
push
jmp
jbe
sbb
inc
mov
mov
xorl
adc
cmp
hlt
fsubs
push
outsb
and
push
addr16
push
test
mov
cld
sbb
icebp
cld
testb
dec
push
adc
push
dec
test
dec
inc
bound
xchg
mov
orl
xchg
nop
test
cmpsl
inc
push
lahf
push
inc
xchg
pop
ret
int3
and
push
shl
jmp
fwait
inc
inc
mov
or
xchg
ret
repz
pop
pop
cmpxchg
je
mov
sahf
sar
adc
sub
fwait
pop
push
mov
pop
imul
pop
jae
lcall
daa
cli
xor
jp
punpckldq
out
push
jg
mov
xlat
add
cld
or
adc
push
xchg
xchg
xor
sbb
mov
cld
push
pop
sbb
cmp
dec
and
inc
inc
stc
scas
cmp
adc
lahf
xchg
aaa
xchg
lahf
pop
out
xor
push
pop
imul
mul
xor
call
movsl
cmp
sbb
cmovno
sahf
addr16
pop
mov
and
ret
and
repnz
mov
jl
mov
cmp
test
iret
dec
mov
push
fcmovnu
inc
sbb
out
rorb
add
popf
jcxz
mov
mov
test
xchg
lds
sub
dec
xor
cltd
mov
jbe
in
fidivs
mov
mull
shll
fnstenv
dec
mov
enterw
mov
add
pop
test
mov
add
fnstsw
xor
sahf
jl
gs
rcll
add
mull
insl
test
push
mov
or
dec
loop
xor
aad
mov
xchg
aam
xchg
scas
dec
aaa
inc
inc
je
outsb
fmulp
popf
ret
call
sbb
dec
push
out
aas
mov
fstpt
in
imul
cmp
jb
sbb
rcrb
mov
ja
fsubrp
out
or
ret
or
sbb
test
mov
mov
jl
pop
shlb
push
outsb
iret
std
lods
jg
jl
leave
in
cmc
pushl
addr16
jge
mov
jbe
and
xor
inc
clc
xor
mov
daa
call
aam
data16
les
cmp
leave
in
xchg
dec
fadds
sahf
insl
andl
jg
lods
scas
scas
movsl
push
fidivrl
and
pop
rcl
mov
ds
cmpsl
cltd
scas
mov
jg
add
jmp
push
fisubl
call
add
movsb
jge
pop
pushl
jge
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
fistl
ja
cwtl
outsl
pop
sahf
sarb
out
repnz
les
imul
lds
sbb
mov
jge
ret
movsb
mov
xchg
in
jmp
jmp
jecxz
fildll
movsl
push
gs
cmp
xchg
loope
out
push
push
inc
jnp
addb
repnz
mov
dec
sub
jecxz
or
shrb
cmc
xor
mov
bound
xchg
xchg
clc
das
mov
out
adc
aaa
inc
sub
es
out
lds
in
pop
mov
call
add
jnp
push
arpl
dec
mov
mov
repz
fisubrs
xchg
and
in
lcall
in
jmp
icebp
sub
mov
jge
or
sub
push
call
pop
mov
adc
mov
loop
out
into
push
stc
ret
leave
mov
addr16
adc
repz
inc
or
adc
movsb
out
dec
int
lahf
cli
mov
jno
imul
test
pop
and
cmp
pop
cmp
mov
stos
add
fdiv
fldenv
in
mov
xchg
ljmp
jnp
cmpsb
adc
mov
inc
int
pop
push
int
xchg
add
cwtl
insb
sahf
cmp
xor
test
sahf
sub
mov
and
ja
das
stos
jo
addr16
sbb
dec
icebp
jno
popl
xchg
pop
dec
outsl
mov
mov
adc
out
and
pop
pop
sahf
ret
loop
popa
mov
hlt
dec
js
push
fcoml
mov
sub
add
mov
call
mov
andb
test
cmp
sub
xchg
mov
fucomp
dec
rcll
xchg
js
das
addl
aaa
inc
cmpsb
ja
mov
das
jmp
mov
mov
test
pop
mov
fwait
cmpsl
loopne
cltd
push
stc
test
xor
ret
shr
xchg
mov
arpl
pop
fisubrs
lret
into
adc
jnp,pn
xor
outsl
adc
or
test
dec
and
sbb
mov
mov
into
aad
lret
lock
adc
jp
leave
mov
cmp
clc
rorl
add
push
iret
mov
sbb
jnp
add
mov
and
in
jmp
pop
lods
or
mov
vmovddup
std
scas
jno
cltd
pop
rorl
fldenv
pushf
out
xor
or
sub
out
pop
inc
xchg
push
testb
lcall
or
jo
sbb
add
inc
stos
insl
push
inc
fcoml
pop
test
xor
cmp
or
inc
das
jnp
push
or
popf
imul
sarl
sbb
xchg
jl
in
outsl
inc
or
xchg
sub
js
notb
jns
out
adc
in
inc
mov
sub
xor
cmp
pop
faddl
mov
mov
sub
iret
lods
inc
not
push
fimuls
loopne
xor
pushf
add
mov
imul
lods
mov
or
lds
or
popa
mov
mov
repnz
out
fucom
sub
cmp
adc
test
mov
adc
int3
rcll
sbb
or
icebp
outsl
mov
jle
imul
mov
scas
add
adc
mov
and
mov
sub
inc
out
aaa
and
xor
call
xor
pop
cmpsl
lret
fcomp
mov
jno
in
xchg
and
or
jns
and
loope
mov
mov
addb
pop
mov
xor
mov
insb
sub
inc
daa
sub
inc
dec
loopne
lret
daa
mov
outsl
icebp
daa
inc
sarl
xchg
pop
pushf
mov
imul
inc
pop
mov
loopne
dec
insb
ss
pop
stc
dec
jne
jns
insb
xchg
add
xor
ret
out
test
ja
add
mov
ret
xchg
xchg
fwait
ret
push
add
aam
int3
sbb
in
les
test
arpl
clc
cmpsb
jb
stos
push
adc
mov
dec
roll
mov
or
test
mov
shrl
repnz
lods
out
clc
mov
mov
mov
je
inc
add
xor
pop
or
aas
testl
cli
mov
fldt
cld
idivl
cwtl
push
daa
das
stos
or
scas
sbbl
pop
test
push
addr16
lods
adc
test
or
add
in
sub
cmp
outsl
rcr
mov
jecxz
and
loopne
push
xor
or
data16
xorb
data16
inc
nop
popa
xor
cmpl
sahf
nop
lahf
cmp
cmpb
pop
mov
push
dec
sahf
lock
loop
jl
inc
fwait
push
js
push
push
aam
bound
sub
test
mov
arpl
js
out
mov
and
push
loope
add
lret
test
jne
or
insl
addr16
xor
aaa
test
outsl
jbe
jl
fldt
test
pop
adc
call
cli
or
test
in
call
mov
subps
sbb
and
fucomip
jae
pop
push
js
out
xchg
sbb
popa
push
adc
lds
adc
fbstp
push
mov
sahf
inc
inc
imul
mov
jbe
mov
xorl
imul
int3
shll
subb
jbe
loopne
jo
and
scas
push
pop
cltd
dec
or
cmpsb
scas
gs
cmp
jp
bound
pop
or
push
gs
fdivs
push
fbld
stos
and
roll
notb
out
hlt
ret
sarb
sbb
es
mov
push
popf
inc
movsb
push
pushf
push
jbe
movsb
mov
pop
pop
cmp
sbb
xchg
divb
mov
adcl
add
ret
add
pop
je
cltd
pop
mov
lcall
test
in
jp
sbb
ret
les
in
rorb
mov
lods
pop
push
push
inc
cld
sub
or
dec
cmp
or
fmull
dec
dec
test
sbb
mov
sti
sub
xchg
jbe
cld
daa
pop
clc
stos
mov
pop
mov
enter
add
adc
movsb
sbb
insl
popf
push
mov
dec
decb
cmp
insl
mov
int3
mov
xchg
mov
jo
cltd
test
mov
inc
dec
ret
inc
xchg
jb
pop
adc
xchg
or
and
push
mov
je
icebp
dec
pop
sbb
mov
cmpsb
out
scas
mov
fcmove
stos
or
and
test
lcall
lods
dec
cmpsb
pop
cs
push
dec
pop
adc
or
add
pop
inc
andl
pop
mov
push
lods
mov
andl
shrd
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
cmp
push
call
add
cmp
clc
xchg
repz
cmpsb
fnsave
jecxz
cmc
scas
repnz
mov
cmpxchg
out
fs
and
sub
sbb
mov
push
add
fisubl
sbb
imulb
cmpsb
dec
imul
add
je
fstp
test
mov
cmp
inc
sub
push
js
daa
or
fistpl
sub
pop
add
in
pop
mov
xlat
aas
cmp
jae
leave
cld
movsb
jo
add
jno
cwtl
inc
jecxz
add
mov
ja
repz
add
cmpsl
mov
dec
push
mov
scas
lods
adc
insb
insl
pop
push
fs
fistpll
dec
test
add
pushaw
js
enter
cli
inc
pop
xchg
repz
lret
mov
lahf
stos
pop
mov
lods
mov
or
jo
or
pop
xchg
pop
jp
jge
mov
push
callw
loopne
ja
inc
ret
jns
ret
cmpsb
and
xor
jb
xor
cmpsb
sahf
adc
aam
lcall
repnz
mov
fnstcw
sbb
push
mov
ljmp
int
push
int
jmp
data16
mov
cmp
adc
cmp
cli
outsl
lret
cmp
div
das
xchg
jecxz
scas
leave
adc
loop
mov
sbb
sub
mov
loopne
jecxz
dec
xchg
lods
test
push
or
cld
loopne
scas
test
std
push
movsl
jnp,pn
cmc
iret
add
pop
pushf
mov
cmp
arpl
adc
adc
mov
fcoms
mov
in
pop
mov
mov
ja
adc
cmp
mov
int3
mov
xchg
pop
shll
adcl
pop
repnz
cmp
test
dec
adc
mov
es
push
add
pop
inc
add
popa
push
or
cmp
and
adc
stos
jg
mov
idivl
mov
adc
add
jl
mov
addl
xchg
movsl
stos
add
pop
loope
inc
gs
hlt
fstpt
push
push
test
jns
or
aaa
movl
lcall
jnp
xor
int3
cmpb
cmc
jno
repnz
adc
cmp
scas
pop
subl
and
mov
repz
lret
jecxz
xchg
cs
xchg
or
cmp
push
pushl
xor
loopne
test
mov
and
mov
fistl
dec
push
cmpl
in
push
fld
xlat
mov
enter
imul
hlt
mov
leave
xchg
and
aam
mov
aas
cmp
cmpsl
ss
inc
js
sbb
addl
and
xchg
jns
inc
dec
bound
fistl
enter
inc
jge
lret
in
mov
adc
out
out
push
movsl
jg
arpl
bnd
dec
mov
mov
mov
mov
cmp
test
xor
outsl
xor
push
mov
sbb
sub
test
mov
xor
adc
pop
rclb
and
sbbb
mov
stc
sbb
sti
dec
std
mov
orb
and
insb
fisubrs
daa
dec
lock
mov
jbe
dec
inc
cld
call
push
fcompl
and
xchg
aam
add
jg
enter
jp
icebp
or
lods
sbb
in
cmp
lahf
mov
pop
push
adc
and
data16
pop
add
sbb
in
bound
sbbb
out
orl
ss
pop
testb
add
inc
mov
addr16
mov
and
and
pop
adc
pushf
cmp
out
xchg
push
sub
fwait
int
push
ja
xchg
dec
and
jne
xor
jbe
lahf
add
mov
mov
xor
xor
lods
or
xchg
push
dec
pop
inc
sub
fcmovnbe
lret
stos
xor
mov
dec
data16
inc
xor
xchg
and
enter
cmp
pop
nop
xchg
fildl
mov
cmpsb
clc
js
xchg
les
leave
faddl
and
cwtl
adc
mov
xlat
call
add
loopne
std
xor
cmp
cmp
add
push
movsb
or
dec
outsl
mov
int
cltd
jg
faddl
push
stos
fs
add
call
inc
jge
cli
inc
mov
std
dec
xorl
or
sbb
adc
data16
mov
mov
movsb
xchg
cmp
jns
insb
mov
fs
fdivrl
outsb
sbb
lea
shl
cmpsb
mov
jno
std
push
pop
inc
xchg
sbb
ret
jmp
cmp
jbe
movsl
pop
jmp
sbb
std
andl
imul
mov
faddp
out
mov
push
dec
out
rclb
xchg
jne
negb
cmc
and
mov
cmc
in
aad
sahf
jge
test
cmp
add
pop
mov
mov
and
shr
pop
je
inc
stos
lods
mov
adcb
out
sub
cmp
notb
sbb
fmuls
outsb
ret
pop
leave
leave
push
push
push
cmc
addb
xor
mov
mov
mov
out
inc
inc
push
add
out
dec
sti
pop
dec
repz
push
pop
mov
lcall
dec
mov
mov
jmp
popa
inc
aaa
dec
add
or
mov
jnp
in
sub
fnstsw
push
cmc
xor
clc
jbe
and
mov
fadd
and
maxps
mov
mov
lret
dec
or
test
push
cmpsb
idiv
jl
jmp
in
dec
add
test
int
dec
or
jle
stos
out
in
das
out
add
mov
push
jmp
fildl
adc
das
sub
xchg
jge
in
mov
jl
mov
xchg
mov
shrl
addr16
push
sub
dec
mov
clc
or
repz
ds
pop
ret
cmp
lret
mov
ljmp
mov
mov
jecxz
inc
dec
dec
or
scas
stos
mov
mov
or
jo
ljmp
leave
cmpsl
movsb
xchg
inc
fnstsw
loopne
mov
and
add
cmpsb
mov
jl
loope
cmp
adc
adc
pop
icebp
cmpsb
mov
hlt
push
fisttpl
mov
cmp
and
cmp
scas
lcall
sahf
jle
push
pop
aas
sub
jecxz
repz
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
push
loopne
dec
subb
ja
lret
pushl
cmp
jo
test
mov
xor
pop
add
jb
mov
xchg
out
outsl
in
xchg
std
xor
jle
sub
int3
lret
cwtl
xor
lock
mov
negl
mov
sbb
xor
xchg
or
sbb
push
pop
push
pop
jne
push
outsl
pop
pop
rolb
push
data16
dec
jne
xchg
shll
push
aam
add
lret
jecxz
mov
cld
sahf
clc
cmp
mov
bound
push
xchg
xor
imul
sbb
mov
js
mov
adc
mov
das
icebp
inc
sbb
or
std
mov
jae
hlt
cmp
rorb
xchg
fdivrs
add
loopne
shlb
mov
test
bound
mov
xor
xor
daa
ret
pop
xchg
ja
sub
fs
mov
leave
xchg
cli
in
movsb
jle
int
jb
sub
add
jns
and
or
mov
jp
sbb
push
les
lock
pop
xchg
mov
adc
pop
fstpl
mov
ljmp
and
and
push
mov
ret
sub
mov
add
lret
or
mov
sti
ss
sbbl
xchg
mov
inc
xchg
cmc
es
cld
inc
mov
ja
data16
jne
inc
jg
or
cmp
mov
pop
sub
aad
or
icebp
movsl
lds
push
rcl
mov
leave
outsb
out
out
cmp
aam
add
lock
mov
inc
sbb
bound
push
js
addl
pop
lahf
push
fcoms
pop
xlat
xchg
movsb
icebp
jb
fcoms
push
mov
fs
imul
lods
xchg
loopne
cltd
jp
push
rolb
ret
lds
mull
fstpt
dec
test
adc
stos
mov
insb
or
repz
jg
jne
hlt
popa
icebp
or
xchg
rclb
aas
punpckhbw
fs
pop
push
inc
stos
cmpsb
mov
pop
dec
sub
test
out
inc
jnp
xchg
add
outsb
pop
arpl
xor
cli
or
fdivl
imul
mov
lahf
mov
or
inc
add
loopne
sbb
push
xchg
movsl
leave
pop
fimuls
or
push
pop
pop
imul
mov
push
leave
xor
dec
movsb
mov
leave
pop
sbb
gs
xchg
ljmp
sub
pop
sbb
bound
lcall
push
stc
sub
mov
dec
adc
cltd
shrl
ret
xor
push
je
ret
jp
xchg
stos
pop
mov
ljmp
add
ljmp
mov
fdivp
js
mov
xor
sub
rorb
data16
jae
out
dec
add
repz
out
repz
xchg
movsl
add
inc
stos
xor
add
jns
movl
dec
outsl
inc
cltd
mov
pop
js
xor
jo
adc
lea
inc
dec
sbb
jb
imul
std
loopne
outsl
mov
lahf
or
inc
inc
jle
imul
mov
lahf
push
sysret
mov
out
push
jbe
add
jne
loop
int
pop
push
mov
enter
pop
add
decb
lea
jns
mov
outsl
xor
xlat
loop
sbbl
lds
pop
push
jecxz
movsb
aad
movsb
data16
pop
repz
loope
test
test
mov
jne
in
test
mov
repnz
mov
sub
inc
fadds
popf
xchg
sbb
stos
repz
inc
dec
int3
and
fldenv
inc
mov
repz
push
sti
or
pusha
ficomps
mov
lock
aaa
fwait
add
push
in
movsb
mov
or
push
dec
fmulp
or
dec
mov
mov
repnz
push
xor
jle
fimull
dec
mov
adc
jae
idivl
add
filds
and
mov
cwtl
aas
inc
jb
lods
pop
das
dec
cmp
aas
in
mov
push
mov
out
dec
je
add
fwait
std
enter
lret
sub
push
jg
cltd
mov
rclb
iret
add
scas
cmpsl
addr16
dec
push
and
inc
fwait
push
notl
jnp
cmp
ficomps
xchg
add
pop
lret
popf
dec
xor
and
faddl
mov
cmpsb
pop
flds
lock
xor
cltd
push
pushf
pop
sub
scas
mov
mov
aas
cmp
inc
out
jns
fists
faddl
mov
pushf
mov
sahf
lods
mov
gs
mov
gs
mov
lret
push
aas
mov
outsl
in
or
pusha
sbb
push
data16
and
bound
push
repz
lret
shll
testl
pop
test
or
add
mov
sbb
and
mov
jecxz
fdivl
mov
and
loopne
pushf
or
jbe
rolb
sub
xchg
sbb
push
cmpsb
stos
pop
cmp
mov
inc
push
icebp
or
testl
movsb
and
jnp
in
fwait
push
stos
xchg
sbbb
stos
lret
rcll
fsubr
mov
adc
pop
out
dec
or
and
mov
sub
adcl
inc
inc
ret
or
pop
sbb
pop
icebp
inc
inc
mov
adc
push
ss
dec
ja
incb
setb
movsb
iret
repnz
add
pop
adc
js
mov
mov
jnp
jns
add
ficomps
sbb
out
xchg
int3
cmpsb
in
adc
das
lds
lret
xchg
pop
mov
leave
cs
call
mov
shll
mov
xchg
cld
addl
and
aaa
aaa
in
cmpb
daa
pushf
xchg
sub
cmc
cs
inc
bound
movsl
xchg
sub
sysenter
out
mov
js
les
addb
mov
outsl
cli
jg
cmp
mov
sbb
or
adc
dec
mov
jne
int
stos
and
arpl
lods
xchg
cmp
imul
xchg
mov
movsl
jno
jecxz
insl
rcll
xor
lahf
jl
inc
pop
push
addr16
xor
rol
in
mov
jecxz
sbb
and
push
pushf
fcmovnbe
nop
pusha
push
shrb
cmp
fstl
sti
mov
std
dec
cmpsl
sbb
stos
movsl
idivb
add
imul
std
pop
mov
push
insl
and
push
sbb
xor
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
cmp
sbb
ja
jno
bound
add
scas
mov
inc
cld
jo
add
adc
cld
add
mov
add
cmc
les
loop
jne
mov
dec
data16
jge
out
das
add
mov
icebp
mov
call
jmp
icebp
mov
std
add
jmp
sti
jne
cmp
dec
je
lahf
dec
adc
loop
cs
mov
push
loop
lret
adc
adc
mov
in
cltd
dec
mov
mov
ja
jp
xchg
jl
out
jne
jg
mov
inc
ret
mov
sbb
lods
lds
rorb
sar
loope
inc
inc
dec
dec
push
push
mov
sbb
sub
xlat
inc
dec
cld
bndldx
sub
pop
scas
inc
cltd
add
xchg
inc
fwait
test
fidivrl
outsb
push
pop
push
add
xchg
xor
leave
mov
int3
xor
fidivl
mov
sbb
mov
rorb
jge
jp
cmp
mov
cmp
pop
fs
push
or
inc
mov
movsb
jbe
cltd
push
mov
add
int
and
pop
call
mov
inc
add
fdivs
jg
sarb
pusha
cmpsl
cmp
int3
pop
pop
aas
mov
enter
test
loopne
sub
jl
xchg
rcrb
mov
lock
mov
sti
cmc
test
xlat
sti
pushf
sbb
in
lds
inc
out
pop
dec
loop
ret
add
jmp
shlb
popf
add
shl
lea
push
xlat
pop
int
mov
pop
xchg
stos
mov
stc
mov
and
inc
or
inc
mov
mov
into
push
or
leave
xchg
es
mov
notb
out
rcr
aas
fistpll
sub
mov
or
xchg
clc
mov
push
lock
leave
enter
xor
mov
dec
jl
sbb
inc
test
pop
sarb
std
adc
mov
push
in
dec
mov
das
loopne
out
fisubl
push
mov
in
popf
scas
imul
xor
pop
add
cmp
mov
pop
std
ret
call
and
adc
test
pop
repnz
bound
scas
sarb
lea
cmpsb
and
push
cltd
movsb
xchg
addl
jmp
pop
xlat
inc
push
insl
scas
dec
push
int
scas
mov
or
or
mov
inc
inc
shll
mov
std
stos
lret
clc
dec
xor
add
sub
loop
aaa
inc
fldl
pop
push
ret
ret
hlt
push
push
cmc
addl
cmp
stos
push
or
inc
outsb
pop
jp
jnp
out
lret
sbb
les
sub
mov
fsubrs
dec
lret
or
cmp
adc
fcoml
jbe
bnd
in
mov
adc
dec
sub
xchg
js
aam
xchg
dec
adc
lods
sub
cmc
xchg
and
sbb
mov
lret
out
sbb
sub
iret
jp
je
std
cmpsl
and
das
insb
or
fldenv
out
jbe
or
sub
out
call
fstpt
xchg
loopne
xchg
cmp
pop
sub
bound
add
inc
scas
cld
xor
test
testb
adc
out
lods
loope
in
sahf
stos
pop
sbb
jl
add
pop
leave
cmp
mov
mov
xchg
scas
test
adc
xorb
dec
nop
ret
push
addr16
jg
adc
jg
or
jmp
fldt
or
and
inc
mov
sarl
cmp
push
adc
or
fistpl
nop
xor
or
in
addr16
mov
lock
dec
push
push
push
les
pop
and
das
das
pop
adc
dec
pop
mov
clc
je
cmp
xchg
jo
mov
lahf
adc
decl
push
pop
ret
es
add
lahf
or
adc
adc
xor
idivl
inc
inc
jle
push
xchg
mov
fs
enter
push
adc
pop
adc
pop
sub
lret
add
pop
jecxz
adc
in
sbb
ret
push
push
sbb
inc
adc
inc
mov
adc
ss
sti
pop
mov
jmp
and
and
or
insl
push
sub
jnp
in
lea
inc
insb
les
xor
or
xor
cmpsb
sub
inc
or
ljmp
mov
dec
sti
lret
jae
je
ficoms
and
inc
rolb
mov
mov
add
push
nop
stos
cwtl
sbb
sbb
push
pop
jl
sub
jnp
test
xchg
loopne
pop
ret
rcll
orl
addr16
jle
arpl
ja
add
call
sbb
jg
mov
xchg
or
push
jno
fwait
xor
mov
mov
sub
nop
andb
cmp
fistpll
sbb
stos
cli
mov
aaa
popf
jmp
popa
adcb
mov
adc
jnp
leave
stos
mov
mov
lret
jle
je
rsm
push
push
insb
rorb
das
push
sbb
push
jo
inc
sbb
ret
and
dec
fisttpl
pop
cmc
cmp
pop
stc
test
pop
adc
push
cmp
in
sub
jns
push
outsb
mov
xchg
in
daa
sub
sbb
mov
inc
lods
and
inc
pop
pop
scas
iret
outsl
lahf
movsb
out
sub
mov
out
jns
ret
out
and
cmp
cwtl
cltd
inc
push
popa
xchg
xchg
leave
inc
jge
sbb
inc
xor
xor
or
daa
add
mov
push
xor
jb
int3
out
pop
out
out
dec
fistpl
test
push
inc
adc
xor
ffreep
adc
pop
xlat
mov
mov
xchg
std
test
dec
jecxz
jne
push
add
test
cmc
adc
xchg
mov
jecxz
or
fiadds
testb
xor
sarl
in
mov
jg,pt
ret
lret
mov
loop
mov
sub
sbb
inc
and
addl
outsl
dec
inc
das
gs
jp
mov
and
les
faddl
decl
ja
stc
cli
loop
add
lgs
and
xchg
adc
inc
sbb
outsl
mov
mov
cmpsl
in
loopne
icebp
sbb
and
xchg
xor
xor
push
push
lock
daa
mov
sub
mov
es
sbb
icebp
push
outsb
jle
xor
test
mov
stos
pushf
lock
sub
hlt
xchg
mov
cli
popf
mov
int
sbb
push
out
add
in
sub
adc
pushf
js
das
repz
enter
ret
pushw
int
cmp
test
in
add
sub
inc
add
loope
imul
jmp
add
or
or
adc
mov
add
test
sti
push
mov
dec
les
inc
pop
jmp
or
popf
mov
dec
mov
add
pop
addb
ja
or
rcr
ss
out
iret
dec
push
or
or
loope
in
sbb
inc
and
scas
aad
lods
jbe
dec
push
fcoml
negl
andl
pop
push
add
mov
ret
and
loopne
cmp
xchg
cld
aas
dec
lea
sbb
arpl
cs
clc
fwait
sbb
or
sbb
push
mov
es
or
mov
scas
mov
daa
cltd
or
xchg
cmp
push
insb
in
out
call
out
jmp
out
push
popf
sub
mov
xchg
divl
outsb
and
pop
insl
hlt
ss
mov
xor
test
inc
adc
fnstenv
testb
in
cmp
add
dec
daa
scas
test
mov
sub
mov
pop
adc
sub
jg
mov
xor
rolb
mov
or
and
mov
cmp
in
data16
iret
mov
les
xchg
stos
mov
sbb
fucomi
cli
hlt
mov
xor
fucomi
std
cmp
jae
inc
lods
sub
mov
xorl
add
xchg
in
out
mov
push
dec
or
xchg
in
out
pusha
out
mov
fisubrl
bound
popf
jmp
mov
pop
inc
inc
fwait
mov
scas
xchg
jmp
stos
int
in
mov
xchg
ret
outsb
push
ss
sbb
call
ret
push
jmp
lcall
int
xor
jge
add
xlat
mov
ret
xor
lea
and
jge
jnp
sbb
jle
into
das
cmp
add
jle
shrl
outsb
aam
xor
iret
or
stos
repnz
aas
xchg
pushf
nop
pop
cmpl
xchg
cmp
out
leave
adc
movsl
sti
fisttps
xlat
cwtl
dec
and
push
push
push
xor
fcoms
call
or
inc
fiaddl
pop
fidivrs
or
and
dec
add
lret
pop
int
icebp
cmp
jg
shr
xchg
jb
adc
sarb
scas
xor
mov
xchg
sbb
js
xlat
mov
clc
mov
hlt
push
addr16
jno
sub
pop
xchg
into
fstp
add
test
jno
push
and
cmp
mov
sub
sub
in
repz
lods
and
scas
push
fwait
mov
test
adc
into
add
cmpsb
inc
nop
adc
ds
das
scas
mov
pop
inc
aad
mov
pop
and
gs
int3
aas
adc
ja
sbb
gs
sub
push
cmc
sbb
add
fisttpl
and
mov
jae
mov
repnz
xlat
fdivp
aam
add
insb
arpl
mov
iret
or
mov
add
out
insl
movl
xlat
pop
push
lret
and
notl
jb
fdivr
push
adc
nop
add
lods
jg
inc
orl
inc
out
inc
dec
xor
inc
push
add
adc
xor
clc
xchg
ja
add
or
loope
pop
cmpl
jb
scas
std
lret
loope
jae
dec
imul
cmc
lock
nop
jl
dec
hlt
sub
dec
ret
shl
mov
push
frstor
mov
pushf
je
cwtl
pop
jp
addr16
mov
dec
pop
mov
fistps
or
jo
int
arpl
sbb
mov
xchg
xchg
ret
and
jmp
or
cmpsb
cmp
mov
fisttpll
push
into
test
fmuls
sbb
es
shrl
pop
jo
or
jbe
and
out
lret
adc
pushl
int
cmpsb
jmp
lcall
or
fdivp
adc
sbb
dec
mov
mov
aas
inc
lods
mov
les
dec
mov
jp
lods
arpl
or
mov
cltd
cmp
push
xchg
lcall
mov
sub
xchg
inc
das
outsb
bound
mov
aas
inc
mov
xchg
mov
or
flds
hlt
adc
ja
test
sub
iret
fmull
or
rol
and
sub
test
adcl
ljmp
jl
fcomip
cmp
mov
cmp
ds
clc
sbb
lea
push
pop
popf
adc
addr16
jl
iret
insl
mov
sub
arpl
cmp
stos
lcall
and
and
call
add
dec
mov
xchg
sar
roll
loop
pop
shrl
or
icebp
mov
es
gs
lock
aas
and
or
in
jp
and
push
mov
stos
cmp
fwait
sbb
add
sahf
mov
cmp
push
and
pop
jge
or
sbb
sub
jg
jg
sub
in
addl
pop
inc
jno
jl
adc
push
mov
pop
inc
xchg
xchg
repz
cmpb
popf
xor
loope
mov
add
inc
leave
pop
iret
mov
mov
out
mov
sub
mov
je
xchg
cmp
push
inc
adc
call
sbb
dec
add
cmp
imul
loopne
sbb
mov
sbb
scas
sub
fstps
shll
jae
dec
push
mov
fs
xor
mov
and
imul
mov
mov
xor
outsb
sub
mov
mov
sahf
add
sbb
call
pop
and
in
jp
cmp
ja
pop
out
cmp
dec
mov
and
mov
outsb
xor
cwtl
lret
test
outsl
dec
or
int3
push
inc
xchg
add
ret
xchg
mov
pusha
lcall
ret
addr16
fstl
sub
fdivl
mov
pop
popa
fistl
and
xchg
push
test
inc
lret
or
test
mov
sub
jp
cmpb
repnz
pop
mov
sbbb
pop
xor
push
jne
lods
xchg
dec
sub
test
adc
aas
cli
cwtl
sub
xchg
lahf
jnp
mov
aas
paddb
sahf
movsl
sbb
fldt
shrb
mov
push
nop
sbb
out
in
ljmp
mov
lahf
jp
iret
pop
daa
xor
mov
cs
mov
cmpsb
xchg
push
xor
push
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
push
loopne
mov
xchg
mov
mov
movsl
cmc
pop
cmp
test
sbb
pop
fcomps
inc
cltd
pop
sahf
mov
subb
int
adc
pop
mov
mov
mov
test
mov
push
popa
mov
mov
arpl
pusha
addr16
xor
mov
fstl
repz
add
lods
add
bound
mov
rcrb
mulb
loopne
aaa
jg
sub
movsl
test
rcrb
mov
dec
cli
and
add
jo
rcr
aad
and
sbb
ds
cmp
aam
ja
ds
bound
cmp
movsl
push
push
fdivrs
out
mov
cmp
fs
add
stos
dec
mov
mov
loope
popa
scas
add
insl
push
lcall
or
xchg
sbb
repnz
sbb
pop
and
pop
or
shlb
iret
mov
xchg
dec
push
andb
scas
es
iret
inc
jbe
xchg
or
test
mov
sub
gs
aam
shll
mov
mov
sbb
popa
xchg
es
jmp
push
stos
lahf
push
testl
dec
out
orb
notl
clc
push
movsl
arpl
jle
and
adc
lret
inc
jge
pop
mov
data16
inc
lahf
lret
enter
cmp
fsubrs
pushf
int
mov
fdivrs
add
or
out
notb
daa
shrl
pop
push
and
jbe
dec
pop
xchg
test
loope
xchg
lock
nop
stc
mov
test
daa
adc
rcl
out
and
scas
push
popf
cmpsb
cmp
push
in
and
inc
add
sub
jns
xchg
mov
sub
stos
call
or
sti
shl
add
xchg
stos
jae
push
insb
fcoml
xor
into
repz
sub
subl
leave
int3
push
xorb
sub
add
scas
lods
adc
aas
data16
les
xor
dec
insb
jg
inc
std
aad
movsl
jo
add
jmp
jge
jg
mov
inc
push
je
jbe
sub
push
mov
outsl
enter
idivl
and
insl
and
add
daa
sbb
push
orb
xchg
or
mov
xor
jmp
mov
mov
js
idiv
dec
in
push
ror
xor
sbb
mov
test
push
ds
mov
mov
test
pop
pop
cmc
mov
cltd
addl
shlb
loopne
lds
outsl
push
dec
ret
cmp
sub
push
dec
jge
pop
inc
testb
imul
imul
add
mov
xor
push
add
mov
pop
movsl
aad
jne
loop
fsubl
mov
pushf
add
ja
idivl
pop
and
pop
and
pop
sub
dec
outsl
sbb
jb
out
mov
push
mov
jmp
xor
dec
sub
push
cli
test
jb
push
les
or
jge
int
sub
push
xchg
cmc
add
and
loop
mov
cwtl
icebp
add
sahf
push
jbe
nop
mov
dec
ret
aaa
sub
jge
add
jmp
jmp
mov
push
fmuls
leave
popf
mov
inc
or
mov
pop
pusha
mov
das
adc
cmp
ja
dec
clc
pop
fstpt
arpl
sbb
sbb
pop
aaa
shrl
adc
and
cmp
movsb
sarb
mov
mov
lods
sbb
mov
mov
or
cmp
jecxz
add
push
mov
jp
out
jg
pop
int
cmpb
mov
pop
and
and
int3
cmp
xchg
push
sar
add
cmp
fs
xchg
aam
leave
into
hlt
test
or
es
jecxz
js
icebp
cmp
sbb
sub
stos
mov
push
or
ss
sbb
imul
cmp
mov
mov
insb
and
jmp
movb
sbb
mov
xchg
stos
int
lods
inc
push
mov
cmp
xor
imul
shr
lahf
jne
in
cltd
inc
mov
ret
pop
ficompl
not
mov
pushf
ss
mov
push
and
mov
lock
repz
or
mov
dec
setae
mov
dec
jecxz
cmp
pop
pop
int
je
and
and
aaa
scas
xchg
arpl
in
daa
out
pop
mov
into
mov
aad
imul
add
js
sbb
test
pop
dec
out
jl
mov
mov
mov
add
filds
fs
stos
scas
jmp
cmp
lret
adcb
jmp
sbb
js
clc
lret
cld
arpl
and
push
jne
pusha
in
sub
push
aad
jne
cmpsb
out
popa
xchg
cli
mov
out
sub
push
push
or
adc
mov
mov
dec
or
aam
mov
mov
dec
or
dec
cs
popf
cmp
and
mov
leave
adc
dec
cld
repz
ss
lahf
dec
inc
icebp
fistpll
pop
jp
jg
dec
gs
lock
push
fnstenv
jp
lds
mov
mov
test
jmp
mov
mov
push
mov
mov
pop
lds
push
adc
or
mov
aad
in
jg
sbb
push
inc
int3
dec
std
mov
add
push
and
inc
sbb
filds
adc
sbb
in
pop
cmp
cmpsl
andb
mov
xlat
mov
xlat
mov
mov
ret
add
pop
scas
xor
sbb
fisttpll
rorl
mov
sbb
pop
mov
aam
lret
jb
dec
int3
jnp
sbb
sbb
lcall
inc
shlb
mov
nop
shrb
rcll
adc
jg
sub
or
aam
iret
pop
xor
push
cmp
je
outsl
mov
fstpt
jl
mov
dec
xor
js
outsl
cmp
shrl
rorb
out
stos
sbb
lock
loopne
pop
subb
subl
in
jns
lahf
movsl
es
ljmp
insb
xchg
lahf
test
or
jp
nop
jo
mov
js
mov
leave
clc
xor
push
dec
les
fisttps
cmp
push
stos
sbb
or
lret
and
jne
in
in
inc
pop
sbb
inc
sub
xchg
call
shl
mov
lea
cmp
je
inc
rcr
inc
push
daa
push
and
inc
push
dec
pop
js
mov
scas
cmpsb
push
in
sbb
into
xor
pop
xor
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
push
mov
add
fwait
pop
mov
cmc
pop
mov
push
mov
pop
insl
cs
test
mov
mov
inc
ds
jecxz
in
sbbl
sti
inc
pop
xor
lods
lcall
std
mov
pop
je
aaa
xor
push
test
mov
aaa
jb
fstpl
jecxz
imul
mov
fwait
sub
test
testb
loopne
dec
cwtl
mov
in
stc
loope
sbb
sub
xchg
or
pop
nop
push
int3
sub
lods
xlat
mov
stc
frstor
cmpsl
loop,pn
mov
imul
or
adc
lret
popa
push
sub
xor
sub
pop
add
cmc
xchg
mov
lods
mov
in
es
or
push
push
pop
adc
pusha
pop
iret
push
movsl
lods
fcomp
dec
bnd
cmp
sbb
or
cmpsl
outsl
pop
pushf
enter
add
cmp
nop
sub
xchg
lock
mov
xchg
sub
shlb
lock
mov
push
adc
or
leave
jl
aas
xchg
inc
jg
ret
mov
xchg
sub
add
mov
mov
addr16
jg
fstps
push
pop
add
rcrb
popa
dec
stos
gs
adc
xchg
addr16
cmp
jge
lea
xor
inc
rcrb
in
add
pop
xchg
int3
xchg
dec
inc
xor
push
fwait
dec
ffree
add
mov
pop
and
rcrl
mov
and
rcrl
mov
push
fmuls
jo
sbbb
add
cmp
loop,pn
daa
and
cli
xchg
imul
mov
push
xor
jecxz
imul
dec
stos
out
mov
pusha
lcall
mov
test
xlat
cltd
add
stos
cmp
dec
mov
bound
inc
dec
inc
sub
pop
or
test
ds
fmuls
popf
mov
sub
dec
sub
shll
hlt
add
adc
xchg
stc
mov
hlt
fbstp
mov
adc
pop
cmp
xlat
cmpsl
aaa
daa
xchg
cwtl
sbb
inc
inc
dec
sahf
mov
push
mov
and
mov
push
in
ja
mov
fwait
out
out
cmp
or
rclb
movsb
fs
int3
gs
rcrb
sbb
sbb
pushl
aad
in
sahf
sub
add
pop
mov
fisubrs
sti
arpl
or
cli
pop
sbb
fxch
xchg
movsl
add
fldcw
imul
push
jl
jl
or
push
insb
pop
adc
mov
and
test
push
or
popw
mov
aas
icebp
pop
mov
bound
int
sbb
sub
and
std
shrl
jno
mov
shlb
stos
lods
jnp
or
sub
pop
imul
and
dec
and
sbb
nop
jmp
scas
adc
xorb
cmp
mov
xadd
sub
cmp
fs
xchg
dec
test
push
push
jl
cwtl
jns
loopne
mov
inc
les
bound
inc
mov
jmp
rolb
fisubrl
cltd
push
jno
mov
jo
jbe
jmp
and
out
aad
inc
xor
cmpl
dec
test
inc
and
mov
ret
mov
pop
cli
insb
mov
cmp
shlb
adc
xchg
push
mov
mov
jno
pop
xchg
fildl
or
jbe
inc
repnz
fnstcw
mov
int3
imul
dec
add
dec
mov
inc
faddl
or
or
cwtl
cwtl
mov
in
xchg
inc
stos
push
jle
stc
adc
push
rcll
sub
jb
mov
adc
lds
inc
imul
sbb
add
jbe
xor
jb
dec
xchg
in
or
sbb
sbb
jbe
in
out
andl
shll
fsubl
inc
mov
jno
sub
add
movsb
lock
xchg
aam
mov
mov
daa
push
dec
clc
mov
jne
xchg
adc
nop
daa
inc
jb
adc
push
outsl
jno
sub
hlt
mov
andb
out
mov
push
adc
in
cli
inc
or
cmp
xor
out
xor
cmpsl
inc
cmpsb
xor
mov
int3
sbb
dec
xor
leave
rcl
les
lret
add
stos
cltd
test
inc
and
jns
inc
fdivr
inc
lahf
mov
popa
mov
mov
jb,pn
cmp
jle
pop
dec
aas
pop
rcr
adc
push
sbb
push
cld
cld
adc
mov
sbb
test
ret
ss
sbb
cmpl
xchg
dec
push
mov
mov
mov
addr16
ljmp
mov
pop
jg
jge
dec
xchg
shrb
sub
bound
push
xchg
mov
cmp
lret
mov
jb
in
sbb
mul
or
jae
jmp
pop
loop
arpl
les
fdivs
push
lock
jle
mov
sbbl
fldl
add
xchg
jns
rcrb
addb
mov
cmp
inc
add
cli
aad
paddsb
jp
sahf
xchg
inc
sub
or
cmpsl
dec
dec
mov
inc
mov
mov
ds
xrelease
ljmp
aaa
lcall
push
and
dec
mov
pop
mov
cmp
ljmp
mov
es
nop
xchg
push
pop
xor
stc
inc
or
fwait
dec
test
insl
bound
mov
inc
sbb
addr16
popa
fstl
hlt
push
push
loop
and
fldcw
mov
push
mov
cmp
push
sbb
call
push
call
lret
mov
push
insb
cmpsb
dec
arpl
and
dec
add
stos
leave
loope
adc
imul
and
lea
movsb
sarb
out
dec
pushl
leave
fwait
js
leave
pop
mov
repnz
lock
add
pop
or
ss
adc
mov
jb
dec
inc
or
loop
sbb
loop
mov
popa
roll
dec
xchg
bound
inc
dec
pop
inc
or
ds
ffree
stos
dec
cmp
mov
xor
xchg
or
pop
sbb
lret
or
ret
cmpsl
inc
mov
dec
xchg
ss
in
add
dec
adc
cmp
mov
popa
mov
mov
sub
xor
out
pop
jns
insb
fbstp
hlt
push
or
pop
decb
mov
push
dec
call
mov
in
mov
lret
jg
test
ficoms
aad
xchg
push
mov
shr
popa
nop
testb
and
imul
orl
mov
add
adc
xchg
mov
pop
fisttpl
ja
mov
pop
dec
mov
call
push
pop
mov
sub
mov
sub
push
aam
xchg
scas
xchg
push
or
pop
je
inc
xchg
cwtl
mov
mov
mov
test
fcoml
sbbl
xor
ja
cli
cmp
lret
in
pop
pop
daa
cwtl
sub
adc
scas
push
adc
and
insb
xchg
clc
dec
dec
and
xchg
movsl
add
test
cmpsl
sbb
popa
add
jg
mov
push
inc
movsb
popf
outsl
push
lods
fidivl
out
addr16
pop
movswl
cltd
cwtl
inc
cmp
addr16
jns
pop
cmp
mov
lods
sbb
inc
scas
dec
ja
sbb
pop
mov
stc
pushf
inc
fmull
pushw
mov
or
cmp
pushf
lods
sarl
mov
movl
xchg
xor
jl
leave
cld
sbb
scas
jnp
outsb
inc
aam
fsubl
insl
lds
cwtl
jb
dec
and
cltd
fisubrs
cld
rclb
mov
insl
push
inc
nop
cmc
ja
pop
xor
js
scas
push
pop
scas
inc
or
sub
popf
pushf
mov
jae
or
jns
jns
sub
cmc
arpl
inc
int3
in
sbb
lea
adc
inc
xor
cli
sub
pop
or
js
jmp
movsl
pop
jecxz
sub
lahf
sbb
sti
mov
mov
and
inc
rcrl
ds
push
sbb
dec
out
outsl
loop
popf
fsubrp
xchg
adc
out
push
push
xchg
cmpsb
pop
insb
pop
aam
in
int3
pop
mov
dec
dec
in
js
mov
jns
pop
jp
gs
in
push
push
add
fmul
call
jmp
rcrl
scas
pop
add
mov
push
mov
stos
mov
ss
lcall
xorb
sti
clc
fs
xchg
orl
sbb
mov
outsb
orl
jbe
mov
test
adc
xchg
fsts
sbb
inc
mov
pushf
mov
and
push
stc
mov
or
inc
iret
ds
push
sbb
add
mov
gs
dec
dec
jmp
pop
push
rorb
cmp
mov
xorb
add
push
sbb
ds
repnz
push
call
mov
out
adc
jl
mov
push
jp
lcall
pop
cwtl
into
andb
js
out
pop
xor
push
in
daa
mov
rol
outsl
ja
xor
shl
gs
xor
push
push
ds
shrb
xchg
mov
js
mov
rorl
cmpsl
mov
incb
add
hlt
inc
int3
xor
dec
mov
test
xchg
mov
mov
arpl
mov
pop
push
push
or
dec
pop
and
shl
pop
sub
sbb
jne
test
xor
clc
sbb
push
out
mov
loope
sbbb
je
pop
mov
and
les
imulb
scas
mov
fisubrl
inc
pop
or
outsb
pushf
aam
or
mov
push
jbe
cmp
daa
dec
daa
mov
and
lock
lods
jecxz
cld
pop
adc
mov
pop
lret
push
mov
inc
push
outsl
pop
xor
push
sub
xor
jae
adc
push
mov
leave
xor
js
fldenv
jmp
fistps
mov
mov
cld
xchg
add
pop
sub
je
pop
sub
or
imul
outsb
xchg
inc
push
push
imul
sub
icebp
pop
mov
clc
int3
je
mov
jmp
xchg
inc
xorb
imul
jb
mov
lods
ret
sub
das
out
push
loopne
andb
fsts
add
into
mov
cmp
rcr
test
push
jmp
jmp
push
sti
jl
push
or
lods
fisubs
ret
adc
ds
jne
mov
jo
xchg
cmp
jo
mov
mov
push
pop
fidivl
and
lcall
mov
lcall
loop
inc
ja
sarl
xchg
mov
adc
xor
mov
sub
and
pop
pop
mov
inc
push
addr16
adc
testl
divb
mov
fsubl
std
pop
testb
ds
dec
xor
std
adc
fs
push
cmpb
int3
in
js
or
mov
mov
nop
rol
rcrb
scas
rcrl
mov
scas
xor
aas
stc
pop
je
xchg
sbb
sbb
dec
sub
imul
lret
pop
push
dec
push
push
mov
adc
mov
sbb
jg
or
dec
mov
or
mov
movsl
xor
mov
inc
adc
into
lahf
lods
fmull
cmpsb
push
mov
popa
adc
cld
jl
enter
jle
pop
push
push
mov
arpl
xor
pop
js
popa
dec
or
and
sub
sahf
pushf
push
jl
iret
sbb
out
inc
lds
aaa
aad
fstps
cmp
sbb
out
or
stos
adcl
mov
jnp
adc
mov
xchg
lret
stos
xchg
pusha
mov
aaa
fidivrs
les
xchg
dec
lcall
xchg
testl
cltd
cwtl
mov
fdivp
in
loop
les
or
mov
cmp
and
fisttpll
ret
inc
jo
jecxz
clc
add
mov
push
call
cld
sahf
int3
sarl
rorl
and
adc
es
adc
stc
insb
addr16
ljmp
mov
mov
fcom
mov
fcmovnu
pusha
adc
inc
test
push
jecxz
shr
test
or
sbb
cmp
inc
add
pop
xchg
hlt
ret
pop
xor
stos
lea
loope
int3
jnp
adcb
scas
mov
repnz
in
sti
mov
aas
scas
fisubs
andb
push
adc
movsl
add
fadds
mov
inc
xchg
call
leave
jno
ljmp
or
mov
loopew
dec
sub
mov
aas
inc
sarl
push
shlb
pusha
je
test
mov
lret
sbb
adc
out
movsl
fwait
cs
push
xchg
pop
xchg
daa
js
pop
ds
xchg
sarl
xchg
pop
inc
adc
jp
jne
int3
add
mov
xchg
daa
mov
mov
sub
ret
adc
xchg
xchg
lods
repnz
add
mov
mov
sbbb
out
aad
xor
clc
cmp
xchg
mov
xor
cltd
mov
mov
mov
shrd
jmp
add
dec
push
adc
call
sbb
scas
lret
ja
mov
mov
lea
mov
inc
mov
mov
inc
movsb
mov
lods
pop
and
pop
into
out
test
push
lds
jns
dec
movsl
outsb
cmc
inc
outsb
sbb
xor
repnz
xchg
cmp
jno
or
out
sub
mov
mov
fcmovnu
les
mov
jb
jl
dec
jle
pop
adc
lahf
subl
mov
dec
out
in
inc
push
xchg
xchg
pop
jnp
dec
jmp
mov
cmp
cmpsl
sti
std
leave
xor
jle
rolb
stos
push
in
jae
fistpll
notl
or
adc
mov
sbb
fwait
daa
xchg
or
xchg
mov
adc
cmovb
dec
icebp
and
dec
or
insl
cmp
sbb
test
call
cmpb
cmp
inc
fs
sbb
pop
cmp
stc
jecxz
pop
cmp
inc
pusha
push
mov
add
pand
jb
adc
divl
out
add
fcompl
xor
pop
sub
push
aaa
inc
cld
int3
adcl
dec
or
cli
aaa
cmp
test
mov
mov
out
in
fwait
lods
in
mov
imul
inc
fwait
push
cmpsb
xor
fdivs
cmc
xchg
jae
aam
lods
mov
cs
jle
add
data16
in
arpl
repz
sbb
cltd
cmp
lock
or
jnp
jl
add
ja
mov
mov
lret
pushf
mov
jmp
rolb
in
lds
les
push
pop
sub
shlb
sbb
jns
sbb
data16
pop
in
fsubrs
push
jnp
lahf
cmpsl
pop
push
push
mov
les
aas
xchg
scas
mov
ljmp
int
cs
aas
sub
dec
mov
nop
ja
sbb
cmp
clc
jp
sbb
dec
mov
cmp
out
lret
repz
clc
movsl
push
movl
cmc
xchg
push
stos
sarl
xorl
mov
cmpsl
xor
mov
popa
aad
imul
clc
out
inc
cmp
pop
lret
movsl
jns
loop
xor
and
scas
dec
push
fstl
push
cli
lahf
jmp
cli
jo
insb
adc
xchg
jecxz
movsl
ds
and
add
pop
mov
push
mov
xchg
leave
aad
pop
and
add
xchg
in
xchg
push
jl
ljmpw
add
xchg
add
mov
adc
pop
test
scas
leave
movsb
in
pop
call
cmp
xchg
xchg
pop
cwtl
jno
pop
in
and
push
fmull
sub
jg
mov
fcoml
js
insl
repz
push
mov
and
std
repnz
mov
stos
push
pop
xor
popf
call
cmp
jle
out
dec
shrb
fwait
ds
jl
out
aad
sbb
aas
pop
push
jae
daa
pop
push
and
pop
inc
mov
jnp
enter
aaa
or
sahf
dec
push
std
mov
ljmp
adc
mov
jae
out
jp
scas
push
cmp
pop
bound
arpl
mov
cmpsb
push
pushf
or
mov
je
xchg
mov
push
mov
cmp
negb
jbe
int3
inc
push
adc
push
outsl
ret
pop
inc
popa
jno
outsb
push
enter
cmp
add
call
jbe
insb
mov
lea
in
loop
addb
stc
movsl
pusha
push
add
dec
sbb
mov
mov
ret
fwait
or
pop
int
lret
icebp
mov
cld
mov
fadd
mov
and
fbld
pop
ret
xchg
jbe
adc
mov
xchg
mov
aad
cwtl
mov
jnp
dec
cmp
stos
lock
lods
xor
inc
fwait
mov
pop
mov
mov
and
mov
in
add
out
imul
jnp
sub
add
addr16
mov
add
cmpsb
push
cmc
add
dec
xor
fildll
arpl
push
imul
push
dec
mulb
icebp
out
xchg
cmpl
add
mov
fnsave
test
mov
test
mov
add
sbb
mov
push
ret
push
sbb
mov
les
push
xchg
inc
repz
ss
xorl
push
cltd
jb
ljmp
outsl
push
inc
ficomps
fsubl
adc
and
imul
lahf
jp
icebp
and
shrl
mov
or
out
pushf
loope
test
cld
cli
cmp
jp
pop
xor
mov
shrb
mov
outsb
cwtl
ja
mov
cmp
call
lds
cld
add
in
jl
dec
pop
repz
adc
fcompl
inc
repz
lahf
aam
aaa
shll
ror
jl
push
lea
mov
mov
hlt
les
add
mov
fdivrs
movsl
or
add
in
sbb
jmp
inc
shlb
stos
rclb
fistps
cld
jne,pt
jb
push
lret
xchg
adc
or
addb
push
rolb
or
or
xor
adc
or
int
push
ret
add
sub
fsubrl
xor
pop
push
and
std
mov
dec
insl
les
pop
in
lret
push
cs
cmp
jnp
jecxz
inc
xchg
hlt
aad
out
fcomip
loopne
or
mov
lods
jmp
sub
xlat
xchg
pop
and
pop
das
push
cmc
pop
mov
sahf
mov
iret
inc
fsubs
pop
test
xchg
jp
xchg
mov
out
stos
repnz
call
adc
test
orb
shrb
and
add
push
pop
inc
mov
xchg
lods
int
cwtl
inc
stos
xchg
imul
and
push
jns
aas
test
pop
jnp
pop
adc
cmp
gs
clc
sub
xchg
testb
sbb
add
mov
xlat
ds
dec
lea
daa
dec
mov
cmp
fldcw
or
lock
hlt
enter
pop
lds
adc
add
imul
jae
fwait
push
cmp
xchg
cmp
push
idivb
push
data16
xchg
push
out
lods
mov
lcall
out
inc
stos
push
sti
pop
pop
jbe
xor
lds
iret
sahf
push
sbb
push
jl
pop
add
sbb
rorl
ljmp
dec
mov
out
flds
xchg
push
mov
pop
mov
fistpll
or
les
push
out
cmp
add
push
out
lds
lahf
lods
sti
stc
or
mov
lods
and
xchg
enter
notb
movsl
mov
outsb
jge
test
and
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
pop
dec
mov
xchg
shll
adc
mov
in
flds
lcall
rcr
in
cmp
jle
aas
movsb
test
jo
insb
and
jecxz
in
mov
push
xor
iret
addl
jl
pop
lret
enter
inc
shll
jnp
jbe
lahf
subb
loopne
pop
mov
test
add
lret
or
xchg
or
cmc
fistpl
stos
xchg
adc
repnz
jno
inc
mov
mov
or
icebp
xchg
test
arpl
dec
cmp
dec
xlat
fldcw
jno
jl
pop
repz
aas
lcall
inc
jle
adc
cmp
mov
pop
je
xor
inc
xchg
cltd
push
push
dec
mov
imul
or
lcall
mov
cmp
jmp
push
add
repz
adc
xor
mov
ja
jmp
rclb
cltd
sbb
adc
mov
xchg
adc
dec
sahf
jecxz
xchg
scas
jl,pn
push
mov
cs
cmp
push
loopne
inc
pusha
jge
loop
scas
inc
mov
inc
lcall
inc
outsb
dec
inc
bswap
hlt
adc
test
ds
imul
arpl
or
xchg
jbe
repnz
add
sub
fsubl
fprem1
lds
fistpll
popa
jno
ret
cmp
or
xorb
ret
out
in
test
sarl
jmp
movsl
aaa
pushf
pop
inc
pop
inc
stos
outsl
ja
push
mov
sahf
push
cmp
push
cmpsl
jp
fstpl
subb
sbb
cwtl
add
sbb
jae
xor
das
lret
lods
inc
adc
mov
mov
inc
popf
and
shrl
mov
cmp
notb
jb
fmull
int
jmp
push
jae
adc
and
jmp
mov
or
scas
pop
pop
sti
and
es
mov
xchg
popf
xchg
push
jno
pop
in
in
data16
movsl
adc
repz
push
lret
add
xchg
mov
sub
push
add
push
xor
sub
mov
lods
stc
push
inc
mov
imul
push
sbb
test
aaa
jmp
imul
sbb
fldl
lods
outsl
clc
aaa
jne
or
jns
pop
lea
pushf
jge
mov
int
std
push
add
and
mov
mov
mov
ja
mov
jns
push
outsl
lret
hlt
jne
jns
ret
xchg
cmc
cs
push
ret
ret
and
or
gs
fwait
inc
lret
sbb
in
mov
mov
sub
xchg
or
sbb
sbb
in
sbb
cli
push
xchg
and
cwtl
lret
sti
out
stos
dec
sahf
lret
daa
push
xchg
cmp
push
jo
dec
scas
aaa
adc
dec
push
int
and
push
and
scas
jg
sbb
rol
jle
in
xor
icebp
cli
pop
stos
sub
nop
jmp
mov
not
jmp
stos
ljmp
inc
cmp
lea
fiaddl
sbb
xor
sbb
ljmp
xchg
insb
inc
mov
mov
and
out
adc
mov
inc
sbb
mov
xchg
jo
mov
js
idiv
mov
xchg
sbb
mov
mov
cmpsl
movsb
lods
dec
addb
xchg
dec
and
stos
js
lret
ljmp
mov
mov
dec
movsb
sbb
loopne
aad
popf
xor
pop
cltd
stos
std
push
xor
or
daa
nop
dec
in
ljmp
inc
and
jle
push
ret
fldenv
je
aas
inc
xlat
out
cmp
push
xor
xor
pop
xchg
adc
mov
mov
lods
out
sbb
adc
mov
test
mov
pop
lcall
xor
mov
jno
call
ss
sub
sbb
loopne
dec
scas
mov
stc
xor
ret
mov
repz
loop
inc
out
sbb
jmp
shlb
arpl
adc
hlt
dec
dec
dec
push
jecxz
mov
aaa
les
cmp
daa
dec
sub
inc
jno
jbe
lds
imul
ja
xchg
jo
ja
insb
xchg
cs
clc
mov
out
pop
test
jp
sub
lahf
dec
rcll
push
lret
jecxz
out
cltd
aam
or
mov
lods
or
add
das
mov
negb
imul
sbb
cmp
jb
ret
mov
subb
sbb
pushf
mov
jno
push
out
fistps
and
imul
pop
pop
mov
shr
mov
aam
mov
mov
lods
inc
jp
bound
jp
lock
popf
sub
ss
ret
cmpsb
or
adc
incb
jp
push
fisubs
push
xchg
scas
inc
mov
mov
sbb
mov
mov
sarb
inc
jle
xchg
daa
jae
in
jp
test
add
sub
mov
push
jmp
aas
push
cmp
decb
or
push
sahf
lods
inc
cmp
pop
std
or
rcrl
ljmp
sub
stos
out
cmpsb
xor
mov
loopne
push
stos
out
mov
adc
or
inc
addr16
inc
pop
push
enter
xorb
pop
pop
lods
dec
mov
lret
addr16
cmpsb
push
das
in
or
repnz
lret
ljmp
add
addl
scas
ds
movsb
mov
orl
mov
popf
or
imul
pop
icebp
aas
imul
mov
imul
mov
pushf
ds
jg
pushf
xorl
scas
xchg
jg
dec
bound
daa
ret
dec
cmp
loope
imul
and
jmp
xchg
sub
cld
dec
lcall
mov
in
stos
pushf
and
enter
out
xor
dec
sarb
pop
das
mov
icebp
andb
ljmp
repz
add
adc
shlb
jo
fdivr
call
sbb
in
xchg
mov
cmp
jns
ret
ja
add
in
push
pop
and
jnp
push
mov
movsb
repnz
jg
bound
lods
push
sbb
inc
loopne
imul
fisubl
jbe
mov
mov
ljmp
mov
pop
cmc
bound
cmpsb
mov
xchg
fldcw
or
lcall
and
mov
push
xchg
add
lahf
mov
mov
subb
cld
orl
xchg
lods
jb
dec
cli
jge
sbb
mov
mov
adc
ljmp
test
xchg
and
push
aam
loope
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
cld
mov
ja
sbb
sub
pop
fsubl
sti
insb
inc
and
into
dec
jl
imul
and
cmp
pop
inc
cmp
mov
mov
gs
aad
insb
rcll
in
push
xchg
adc
mov
mov
in
aas
pop
cmp
push
add
sbb
inc
mov
mov
adc
mov
and
sub
mov
cmpsl
ret
dec
out
sub
xchg
ja
fcomp
addr16
inc
dec
loope
pop
sub
or
and
xor
loope
outsl
or
pop
inc
std
movsl
mov
pop
add
or
scas
loop
or
jnp
push
mov
sahf
pop
fcmovne
sub
cli
pop
cmp
insb
jg
imul
addr16
in
inc
imul
popa
loopne
xlat
fwait
or
shll
pushf
push
pop
xor
lea
and
mov
mov
jl
call
idiv
ds
and
jae
push
call
pop
inc
mov
push
dec
iret
test
push
push
xlat
xchg
and
pop
fsubl
enter
sti
mov
imul
xor
mov
dec
out
leave
in
sub
repz
in
test
lcall
loop
pop
pop
mov
cmpsb
scas
test
dec
pop
sub
mov
push
pop
adc
pop
push
inc
in
pop
xchg
dec
xchg
push
sbb
xchg
jge
mov
push
sub
repz
stc
push
adc
adc
xchg
stos
mov
sub
pop
fldenv
sti
ret
xchg
negl
jl
mov
ficoms
mov
fdivp
or
sbb
iret
ljmp
xlat
sbb
or
lahf
xor
idivl
pop
and
imul
arpl
das
arpl
cmp
push
mov
iret
cmpsl
inc
add
mov
lods
enter
pop
loope
dec
lret
les
pushf
idivb
push
js
pop
scas
jbe
mov
inc
dec
lahf
xlat
jmp
or
lret
jmp
enter
mov
dec
shrl
and
push
mov
pop
cmp
add
stc
adc
js
in
ss
js
ficoml
and
movsb
push
xor
dec
dec
sbb
fsubl
and
sub
sbbb
aam
lea
pop
or
adc
lcall
mov
mov
push
xchg
dec
push
adc
xchg
popa
sbb
push
mov
roll
call
adc
jecxz
jmp
or
and
cmp
scas
lds
or
adc
lods
push
inc
cs
jg
rcrb
jp
fwait
iret
sbb
loopne
int3
bound
xchg
mov
fs
xor
mov
push
pop
test
dec
negl
clc
adc
fstps
ror
mov
inc
cmp
and
inc
lods
std
int3
push
stos
sub
out
push
fistps
jo
push
sub
dec
fcoml
adc
push
out
or
fdiv
out
ss
push
test
dec
ret
jne
jg
pop
adc
cmp
cld
push
lock
pusha
xor
insb
lds
scas
aad
out
sub
jne
sub
and
fisttps
cmp
push
hlt
out
insb
xchg
sbb
dec
loop
ret
cmpsb
cmp
push
subb
sub
js
icebp
pushl
pop
psrlw
pop
lods
xchg
sub
ss
fsubr
add
fnstenv
ror
sahf
jno
push
int3
sahf
jp
out
sbb
mov
jle
mov
mov
xchg
mov
xor
xchg
idivl
xor
mov
dec
scas
adc
insl
data16
jb
push
outsb
das
jg
lret
xlat
mov
ljmp
mov
loope
fwait
in
leave
repz
push
or
adc
jge,pt
adc
mov
push
kaddb
jne
rolb
lahf
ss
bound
filds
aas
cmp
in
sahf
cmp
lds
add
inc
and
pusha
lcall
fiaddl
ljmp
jmp
ret
mov
dec
push
xor
mov
push
out
in
dec
enter
hlt
pop
push
jmp
test
int
mov
cmp
pop
fs
sbb
jp
outsb
jne
notl
xlat
je
or
sbb
push
mov
inc
lea
jg
push
mov
repz
out
pop
xchg
idivb
outsb
shlb
jge
cmp
sbb
xchg
jno
push
cmpsl
cmpsb
sub
push
ds
and
hlt
and
adc
push
mov
sbb
popa
adc
xorl
pop
sub
add
popa
inc
inc
out
hlt
push
add
add
mov
movsb
inc
jle
pop
ret
cmpb
mov
inc
adc
adc
xchg
sub
push
cmc
arpl
mov
xchg
or
adc
add
int3
jbe
aaa
mov
inc
aaa
jmp
js
or
dec
mov
push
repz
popf
push
call
xchg
cmp
stc
cmc
inc
pop
ja
push
sub
cwtl
andb
scas
pshufw
dec
push
js
lret
int3
mov
repz
fld
adc
jecxz
mov
and
sarb
cmc
mov
and
into
je
enter
gs
mov
imul
xchg
arpl
mov
aas
cltd
or
dec
in
and
test
push
cmp
decb
lret
stc
xor
xchg
sahf
inc
divb
pop
scas
pop
cltd
mov
jmp
push
dec
das
push
pop
pop
je
movsb
xchg
aas
out
lds
rcrl
cltd
rolb
cmp
mov
push
pushf
xor
sbb
xchg
aam
jae
cmpsb
iret
push
mov
scas
and
clc
mov
pop
ss
push
jnp
mov
cmpsl
inc
mov
nop
fs
in
addr16
fsubr
mov
xor
xor
push
add
xchg
mov
int
and
sbb
dec
push
sbb
in
adc
bound
pop
dec
jb
cld
pop
jae
mov
inc
cmp
lods
add
in
aas
xchg
mov
out
mov
sbb
imul
pop
popa
cwtl
shll
xlat
dec
inc
inc
gs
in
bound
pop
pop
mov
xchg
outsl
push
cli
sbb
out
xor
push
jns
cmp
outsb
adc
lahf
sbbl
mov
lods
cmpsl
pushf
add
stos
dec
in
out
rep
dec
addr16
cld
dec
add
pop
jne
notl
add
mov
pop
shlb
pop
insl
pop
jl
cmp
cli
push
enter
dec
sub
bound
pop
sub
cwtl
pop
sub
stc
push
insl
add
fdivs
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
xor
ja
sub
rcrl
sub
into
loopne
push
dec
pop
loop
rep
lahf
insl
pushf
dec
and
out
and
pop
jnp
out
mov
pop
push
cltd
lds
das
dec
add
lahf
idivb
mov
nop
mov
and
popa
and
push
cmp
cmp
jno
inc
inc
adc
enter
rclb
push
sub
sub
fwait
daa
ja
icebp
fcomps
add
push
push
push
imulb
xor
xchg
push
ljmp
in
pop
ja
dec
push
cmpsl
inc
adc
jnp
xchg
imul
sbb
mov
mov
inc
js
and
loop
fdivrl
pop
fsub
test
push
dec
jo
and
inc
pop
jno
mov
rorb
int3
fst
loope
sub
mov
mov
dec
inc
dec
sub
stos
and
std
pop
cmp
nop
dec
mov
call
pushl
xor
lds
or
pop
lahf
enter
insl
mov
scas
rcrl
ds
imul
mov
cmp
xchg
mov
mov
add
ja
and
mov
sub
popf
pusha
punpcklwd
push
pop
and
jnp
pop
pop
fwait
mov
xchg
enter
xor
xchg
stos
pusha
push
cmp
aaa
data16
cmp
sbb
jge
rcll
ljmp
mov
or
and
fs
fisttps
or
lea
push
ss
jbe
lods
jp
es
inc
bound
dec
jae
or
pmullw
les
sub
and
add
lods
or
call
add
stc
ret
inc
int3
stos
stos
mov
lods
inc
sub
sbb
subl
add
aaa
outsb
ret
dec
sbb
iret
repnz
pop
lret
lock
addr16
gs
clc
cmp
cmp
cmp
test
adc
xor
cmpsb
jecxz
and
idivl
gs
add
sbb
jmp
jae
jmp
insb
inc
cltd
mov
pop
nop
dec
dec
std
mov
ret
sti
or
out
shrb
lret
pop
sbb
cmp
mov
adc
sbbl
or
adc
add
fstp
jnp,pt
add
lock
xchg
xor
iret
dec
mov
leave
pusha
repz
jge
clc
jo
jl
gs
add
adc
mov
mov
push
sub
cmc
aad
lea
cli
mov
sbb
jge
orb
jo
mov
jbe
loop
sub
mov
ja
inc
mov
scas
outsl
imul
mov
inc
xchg
sbb
or
xrelease
or
mov
lds
push
mov
xlat
sahf
fsubs
pop
push
mov
arpl
sbb
push
or
in
notb
mov
imul
jmp
sub
fmuls
loop
pop
adc
push
je
fcoms
movsl
es
cltd
push
xor
mov
push
cmp
fisubrs
mov
sub
fistpll
inc
scas
jmp
dec
and
sub
xor
xchg
and
ror
fbstp
test
mov
int3
push
push
clc
je
frstor
jo
popa
jecxz
aam
pop
sub
and
test
xchg
jecxz
fisubs
repnz
out
add
sbb
adc
and
popa
aas
shl
loopne
movsl
fdivl
sbb
push
sbb
inc
pop
stos
sbb
pop
cmpsb
sahf
push
loop
push
pop
jle
mov
cltd
mov
hlt
daa
xchg
je
in
xchg
out
mov
stos
sub
and
movsl
mov
jnp
sbb
sub
jne
es
in
repnz
shrb
rcrl
mov
and
ss
test
movsb
stos
mov
cmp
xor
out
cmp
adc
lods
data16
lret
cmpsl
cmp
dec
ret
mov
push
pusha
mov
jne
das
lea
inc
gs
mov
sub
ss
cmp
popf
mov
and
loopne
mov
repnz
jns
stc
test
and
fisttpl
mov
pop
int3
insl
cmp
pop
stos
negl
mov
xlat
dec
jp
loope
push
ja
mov
push
fcmovu
mov
jge
mov
xor
fisubl
loopne
lods
mov
pop
shlb
stc
iret
out
push
aaa
mov
cmp
pushl
in
inc
sarb
xchg
stos
mov
scas
sbb
xchg
push
mov
ret
loope
out
cltd
push
mov
xchg
jl
in
xlat
sbb
mov
daa
xchg
sbb
movsb
aaa
cwtl
jmp
imulb
push
stos
jno
std
out
jl
hlt
and
js
adc
or
lcall
pop
adc
jo
dec
out
sub
lods
hlt
sbb
cwtl
xchg
add
orps
push
push
and
jl
scas
lret
lods
jnp
or
mov
test
cs
movsl
pop
rcll
add
addr16
cmp
fs
sbb
add
arpl
xchg
and
ljmp
scas
pushf
push
scas
mov
popw
dec
inc
jmp
jecxz
jno
lock
pop
and
or
mov
out
cs
push
repz
cmp
jecxz
movsb
mov
pop
xchg
add
es
outsb
in
aam
or
xor
arpl
push
sti
call
movl
in
sar
out
idivl
mov
iret
cmp
lock
jo
jns
mov
data16
push
js
push
sahf
mov
pop
fnstcw
dec
addr16
mov
pusha
je
lea
cwtl
lret
sbb
mov
inc
fcomps
fsub
aad
imul
fidivl
mov
cmpsb
lcallw
hlt
adc
sbb
test
push
mov
add
inc
jecxz
cmc
push
push
push
fdivs
inc
mov
dec
cmc
test
mov
arpl
mov
sub
sub
lock
lret
jp
fs
mov
movb
mov
in
icebp
push
ljmp
cmpsb
lahf
movsb
ss
scas
sub
ss
je
mov
ds
stos
jo
mov
push
xorl
lcall
inc
popf
out
mov
mov
inc
xchg
hlt
std
push
fcomip
outsb
in
jp
out
push
lcall
push
cmp
push
leave
push
incb
jnp
jle
popf
pop
cmp
icebp
pop
mov
data16
inc
lcall
lret
loop
fwait
clc
inc
jmp
xchg
fmul
jne
inc
jmp
dec
dec
sbb
insl
ret
hlt
ja
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
or
xchg
leave
fst
stc
jne
mov
jge
jnp
xor
jmp
gs
sahf
repnz
rcrl
arpl
dec
sbb
hlt
push
and
sbb
fwait
pusha
cltd
mov
loope
test
or
daa
push
rorb
lock
fs
inc
jg
jl
pop
aam
shr
xor
fs
ss
stc
addr16
and
push
xchg
cmp
mov
and
mov
dec
popf
fidivl
test
aas
sub
cmc
xchg
mov
stos
inc
pop
orl
pop
mov
sar
jno
fiaddl
cmp
or
repnz
cli
sahf
aad
jne
lcall
and
add
mov
lods
push
dec
adc
cmp
push
sti
cmp
jg
pop
mov
push
les
inc
push
rcrb
shlb
pushf
add
lret
in
and
push
dec
aam
sbb
jmp
pop
jo,pt
or
mov
xchg
xor
sub
addb
fwait
shll
sbb
xchg
aad
shll
lcall
sub
push
insl
out
les
lret
push
out
mov
jns
pop
aaa
popf
rorb
push
xor
daa
mov
fucom
fs
inc
pop
push
in
adc
xchg
scas
fldcw
sbb
int
shll
dec
daa
lds
cmp
adc
jg
int
sbb
add
mov
cwtl
gs
in
filds
jecxz
jb
or
add
aaa
rcll
clc
ret
fmull
outsl
pop
rol
test
push
sbb
inc
pop
pop
subps
dec
and
mov
jbe
jecxz
jbe
mov
jb
lret
jnp
mov
imulb
jb
add
sub
mov
aas
pop
clc
lds
xchg
mov
and
in
mov
sbb
lds
aas
pop
mov
mov
fwait
fwait
nop
pusha
jno
lods
sbb
cli
and
data16
nop
mov
addb
pop
cltd
arpl
lahf
mov
jp
cmp
bound
sbb
cmp
and
aaa
lret
push
mov
push
jno
stos
fsubl
jae
stc
jp
call
lret
sti
scas
pop
pop
mov
cmc
jb
or
pop
xor
jmp
lods
pop
mov
pop
movl
bnd
mov
xor
pushf
icebp
lods
mov
fdivl
icebp
cmp
mov
aaa
jb
jmp
inc
sbb
mov
push
xor
pop
je
xor
lahf
mov
aaa
lret
ret
out
in
and
pusha
lcall
ljmp
push
push
leave
inc
sub
and
inc
ljmp
mov
adc
xchg
inc
jae
out
dec
inc
pop
data16
and
rcrl
mov
out
push
jmp
mov
mov
mov
mov
push
lret
xchg
mov
cmc
xor
dec
rcr
in
push
inc
mov
rcrl
xchg
and
aas
adc
scas
sarb
popa
mov
cmp
aad
les
stos
jo
lods
out
lcall
cmp
lea
ret
or
clc
rorl
daa
adcl
pop
aaa
mov
xchg
add
adc
inc
repnz
in
cmp
clc
testl
lahf
fnstsw
xor
mov
and
fs
pop
push
jp
mov
test
test
or
push
push
icebp
aaa
adc
sbb
imul
xor
in
pop
xchg
push
out
push
js
add
and
add
popa
mov
jl
daa
inc
push
add
dec
and
adc
int
jecxz
outsl
mov
xchg
mov
fisubl
js
mov
leave
outsb
push
cmc
repnz
inc
sub
and
fs
mov
movsb
pop
and
push
and
push
lock
mov
arpl
push
xlat
jge
popf
xchg
mov
mov
push
das
int
adc
ja
xchg
fdivr
test
lahf
in
ret
mov
and
cmp
scas
clc
dec
roll
xor
add
xor
sbb
xchg
push
push
push
loope
sbb
pop
pop
cmp
stos
lret
ret
fcompl
out
insl
push
xchg
push
in
xchg
adcl
punpckhdq
mov
adc
std
rclb
jp
jae
lret
dec
nop
pop
xchg
and
xchg
sub
sub
std
cmpsb
mov
icebp
adc
std
into
xchg
add
mov
lret
dec
repnz
adc
push
mov
lock
jne
jp
pop
pop
outsb
push
sahf
scas
xsha1
cmpsb
mov
lods
in
inc
lea
pop
popa
cmp
lods
rcrl
lods
mov
jbe
sbb
loop
fsubrs
shrb
mov
ja
cli
pop
dec
pop
add
or
in
dec
testl
iret
outsl
push
call
out
dec
icebp
sbb
xchg
mov
sti
mov
mov
cmp
mov
rcr
iret
aaa
test
jbe
data16
cs
insb
mov
in
leave
loopne
sub
call
sub
add
in
jle
xchg
mov
adc
push
ss
push
and
jno
pop
inc
jno
inc
stc
cmp
jl
push
cmpsb
pop
divb
dec
adc
jbe
adc
or
pop
ss
sbb
in
dec
push
out
xor
ficoms
pop
pop
and
lods
push
mov
inc
inc
test
fwait
test
daa
jp
jl
add
icebp
mov
or
arpl
dec
lea
push
mov
stos
and
insb
outsb
xchg
lcall
jecxz
movsb
or
pop
xchg
lea
push
inc
repnz
jle
mov
out
add
fidivrl
mov
jae
daa
jno
dec
dec
add
adc
xor
lret
into
popa
loope
jge
add
push
pop
into
mov
xor
pop
js
jae
adc
inc
fmulp
mov
sbb
inc
rorl
lret
cmp
rcr
mov
pop
stos
jl
jno
xchg
adcb
je
add
mov
inc
cwtl
jg
pop
or
lea
jb
ss
lret
jno
dec
ret
outsb
das
and
loope
in
cmpsl
stc
and
stos
sbb
roll
xor
lcall
xchg
subl
xchg
and
cwtl
mov
dec
test
mov
sub
mov
movsl
loop
imul
loopne
add
mov
cmp
fwait
sbb
pop
cld
add
mov
aad
inc
out
fwait
cmpsb
mov
push
sub
adc
or
or
enter
mov
mov
stos
xchg
rcl
mov
add
popf
xlat
jl
imull
stos
sub
mov
sahf
add
xor
sbb
xchg
ja
lods
inc
inc
mov
sti
jno
mov
popf
push
cli
and
and
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
mov
xchg
ja
inc
jae
inc
fiadds
xor
xchg
negl
mov
ucomiss
pop
or
hlt
mov
out
arpl
stc
test
dec
in
aas
pop
jmp
hlt
adc
sbb
xor
xchg
and
xchg
and
xchg
sahf
sbb
adc
in
or
sbb
jecxz
ret
pop
pushf
xchg
cmp
aas
lcall
leave
push
xchg
jge
fists
std
xchg
int3
and
rolb
add
test
dec
cmp
mov
fisubrs
fdivrs
les
into
adc
or
add
scas
or
mov
mov
or
clc
dec
js
xchg
lods
fisttps
out
mov
aaa
enter
or
mov
test
push
lret
and
outsb
jo
push
jbe
arpl
dec
call
mov
cwtl
mov
or
cs
stos
adc
jno
into
lds
mov
mov
mov
call
mov
nop
adc
lods
dec
outsl
mov
inc
outsl
mov
mov
jg
lahf
scas
and
push
stos
pop
sbb
jae
xchg
dec
in
imul
cli
jmp
adc
cmpsl
push
sbb
mov
inc
ficoml
mov
out
add
or
fisttpl
insl
mov
pop
cmc
sub
cmpsl
les
mov
add
sahf
jl
insl
clc
xor
sbb
mov
mov
add
sbb
fbstp
fcompl
ljmp
test
lret
mov
lret
shl
sbb
adc
jle
fisubrs
cmp
out
mov
cmc
sbb
pop
sahf
sahf
mov
shrl
insb
std
mov
mov
icebp
and
cmp
and
jecxz
mov
enter
xchg
mov
cmp
arpl
in
xchg
jmp
int
sub
jecxz
cmp
cld
fs
test
add
dec
arpl
daa
out
insl
mov
adc
std
jae
jg
sub
inc
in
test
dec
push
sub
rcrl
out
repnz
pop
mov
or
cmpsb
adc
aaa
xchg
jge
add
mov
mov
js
sub
and
dec
sahf
xchg
jmp
push
stc
push
xor
aad
std
jns
imul
jae
stc
iret
andb
cmp
ficompl
pop
je
push
mov
shrb
jmp
cltd
les
sbbl
mov
fwait
jb
sub
adc
add
or
push
aaa
push
fs
imul
pop
or
jecxz
sbb
sarl
ret
sti
ljmp
fldt
jl
addb
rcrl
jns
std
bound
dec
lods
pop
test
jne
lret
fsubl
cmc
popa
lret
and
adcl
or
ret
fs
mov
sub
test
cmp
addl
outsb
jl
inc
fcmovnu
rcll
and
fbld
push
movl
cmp
cli
add
xchg
mov
xchg
add
sbb
pop
xor
test
lods
push
sbb
imul
mov
popf
xor
call
or
cmp
mov
mov
add
jle
mov
lock
jg
out
fimuls
out
mov
dec
scas
mov
jo
fisttps
data16
stos
idiv
cmpsb
inc
icebp
fcoms
in
into
jp
fabs
mov
shrl
push
test
inc
sbb
imul
jb
mov
cmp
push
add
ja
lret
fisubrl
dec
add
jnp
out
sub
inc
jl
fisttps
push
xor
push
xor
mov
jo
mov
sub
and
mov
lea
pop
pop
cmpb
jae
pop
test
jnp
jecxz
inc
cmp
dec
cld
movsb
ds
xchg
fidivrl
lahf
mov
repnz
cmpsb
dec
pop
xlat
and
cmpsl
shlb
lods
push
hlt
pop
cmp
jo
xchg
pushl
cmp
jecxz
shrl
repnz
mov
imul
orl
out
pusha
int3
mov
sub
leave
imull
pop
jnp
and
push
loop
imul
cmc
je
lahf
mov
lods
add
sub
loopne
inc
js
push
sahf
pop
insl
mov
adc
std
scas
lahf
sti
cmp
test
mov
xor
mov
mov
mov
lods
xor
shl
mov
fs
icebp
mov
mov
cld
outsb
jb
xor
push
cmp
jbe
jge
paddd
loope
testb
fs
fisttpl
lods
mov
clc
cmpsb
xchg
jae
enter
cmp
gs
dec
cmp
dec
das
mov
mov
rcl
mov
and
inc
cmp
rorl
daa
push
push
xchg
adc
popf
sub
or
push
arpl
aam
or
or
mov
je
rorl
and
dec
pusha
mov
or
pop
inc
hlt
fld
daa
xchg
mov
test
mov
fdivs
aam
mov
in
push
jmp
cmp
cmpsl
push
scas
push
mov
dec
push
jge
adc
mov
jae
xlat
aas
adc
mov
jge
fcoml
xchg
repnz
leave
loop
sti
sbb
or
jl
lock
mov
push
adc
adc
test
outsb
mov
lods
mov
inc
jmp
jno
lds
xchg
mov
mov
mov
dec
dec
mov
sub
lods
adc
je
out
dec
dec
sbb
add
rcrl
add
jns
test
sbb
mov
lcall
adc
jo
or
sub
lret
mov
mov
call
in
push
iret
inc
adc
mov
int3
outsb
push
sbb
cmpsl
movsb
inc
lcall
jbe
and
cmpb
ss
sti
and
jns
mov
add
daa
es
cld
mov
ss
hlt
lcall
sbb
dec
divl
imul
mov
add
jg
call
pop
cmp
push
scas
hlt
jne
push
movsl
mov
jle
cmp
xor
popa
jb
lea
mov
fisttps
or
cmp
test
cmp
fdivp
xor
rorl
or
and
sub
xchg
dec
cld
jmp
es
in
push
fiadds
or
aaa
cmp
and
cmpsb
arpl
and
ljmp
and
xchg
stos
sub
xor
adc
fsubrl
pop
cmp
xor
cld
push
frstor
xor
xor
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
lret
pop
push
loopne
ja
cwtl
cmp
sub
ror
fcomps
add
into
lea
pusha
sbb
dec
test
xchg
aas
inc
xlat
push
cli
cmp
add
shlb
mov
cmp
repnz
shll
dec
jbe
ret
fwait
cmp
stos
or
xor
aaa
rorl
mov
fnstcw
xlat
adc
jecxz,pt
fistl
push
xor
cmc
movsb
jae
pop
jno
sbb
cmp
fsub
incl
push
ret
xchg
cmp
or
out
cld
adc
enter
fsts
sbb
pop
cmp
mov
cmpsb
sbb
notb
sbbb
jne
jle
pop
lds
mov
nop
pop
loop
add
pop
jl
and
jo
dec
cmp
ljmp
hlt
and
lea
lahf
push
orb
stos
ljmp
lods
pushf
push
adcb
jae
into
es
ljmp
jno
mov
mov
add
cmp
mov
inc
inc
imul
gs
add
inc
stos
sbb
imul
out
mov
flds
sub
ror
inc
xchg
push
cwtl
loop
xor
jno
mov
enter
lea
test
sub
pop
ret
divb
xor
lahf
and
das
sahf
out
cmpl
popf
fiaddl
jae
addl
mull
lods
push
jecxz
jae
cld
sub
outsl
mov
mov
push
fldenv
bound
mov
dec
xchg
cmpsb
mov
test
sbb
vmovups
addb
lcall
jns
test
fs
outsb
push
out
cmpl
movsb
sti
dec
lret
sbbb
inc
xchg
mov
pushf
pop
pop
fdivrl
jo
dec
xor
fs
insb
cmovs
adc
pop
pop
push
push
mov
jg
sbb
sahf
shlb
xor
add
sub
call
aad
fcmovnb
push
or
cmpsl
inc
or
pop
push
es
fsubrl
xor
add
xchg
jl
scas
push
loopne
mov
call
sbb
mov
out
mov
insl
lea
ljmp
aam
push
xchg
insl
jl
sbb
js
scas
cmpsl
add
jmp
push
inc
jo
and
out
xor
mov
or
dec
jns
outsb
imul
xlat
aas
lods
sub
mov
and
inc
jno
out
jge
sbb
jp
xlat
jo
sub
popf
dec
notb
or
pop
stc
adc
mov
es
out
scas
adc
loop
xchg
mov
xchg
adc
xchg
pop
jnp
sbb
or
mov
cltd
jecxz
leave
mov
cmp
fsts
ds
xchg
mov
shll
pop
sub
jno
and
mov
aas
scas
test
aam
mov
mov
mov
xchg
cltd
pop
icebp
inc
mov
jno
push
out
movsl
je
repz
es
xor
mov
popa
je
mov
aaa
adc
fmuls
xchg
xchg
mov
mov
cmp
and
ss
les
ja
inc
ficoms
cmp
repz
mov
out
negl
mov
sbb
and
pop
sub
pushf
vandps
xchg
sbb
push
jae
in
lahf
and
test
xor
dec
lock
in
mov
stos
ja
mov
js
cmpsl
dec
dec
daa
lods
add
ss
ja
fsubrp
dec
int3
xor
inc
mov
je
xchg
cmp
aaa
rcr
cmp
pop
sub
imul
xor
push
fldcw
lret
xchg
and
sbb
or
cwtl
jmp
rorl
sti
jp
dec
cmp
clc
pop
scas
stc
cmp
sbb
lods
sbb
cs
call
jno
inc
push
cwtl
push
fsubs
adc
loope
mov
or
xchg
xorl
pop
jne
jge
or
orb
pop
lcall
loop
mov
or
in
shufps
jmp
es
test
pop
daa
add
imul
sbb
arpl
xor
xor
inc
dec
push
xor
mov
imul
inc
in
adc
add
dec
dec
mov
jbe
bound
test
arpl
pop
rdtsc
mov
dec
mov
cmp
push
mov
cmp
push
inc
fucom
inc
fs
leave
mov
mov
xchg
aam
int
add
sbb
dec
outsl
xor
dec
inc
repz
push
mov
fldt
inc
jo
sub
mov
and
pop
fiaddl
push
sub
jno
add
into
sti
arpl
bound
loope
gs
aas
pop
lock
movsb
ret
xchg
fcompl
adc
fwait
xor
dec
in
repz
out
mov
test
mov
mov
mov
in
jmp
inc
aam
cmc
rcrb
add
xor
ss
outsb
and
inc
cmp
insl
fimuls
stc
outsb
mov
xchg
mov
js
mov
aas
dec
cld
adcb
add
xor
pop
jmp
fdivr
xchg
cld
test
aaa
jne
and
enter
pop
xchg
sti
pop
js
or
mov
pop
xor
js
mov
sub
shll
iret
push
scas
mov
test
mov
mov
jno
xor
push
ffree
cmc
loope
out
xor
call
lcall
in
sub
das
cmp
jne
add
hlt
cmp
or
das
adc
add
jb
push
sub
lods
xor
sbb
jmp
in
pop
inc
push
mov
aas
mov
ljmp
bound
into
and
jg
mov
daa
sub
rcl
jo
mov
popf
jg
add
jl
adc
xor
sarl
add
aaa
addr16
dec
fwait
cld
outsb
adc
fs
popa
push
stc
and
mov
clc
fs
xor
loop
adcb
jle
mov
xchg
and
pop
jb
sbb
sub
popf
push
in
mov
notl
mov
jo
push
add
lret
jnp
jmp
lods
outsl
mov
js
clc
insl
sbb
push
int3
xchg
in
xchg
pop
out
inc
ja
cltd
in
sar
pop
inc
pop
jecxz
enter
mov
cwtl
cmpsb
mov
push
movsl
in
roll
lods
insl
in
imul
stc
mov
or
sbb
xchg
ds
xchg
mov
into
movsb
dec
pcmpgtw
mov
sub
adc
outsl
fdivrs
push
insb
pop
clc
jmp
loop
mov
mov
mov
jmp
aam
inc
test
addr16
add
insl
mov
ja
sbb
mov
or
mov
shlb
fcmovb
outsb
sbb
aas
jmp
faddl
repnz
adc
mov
jbe
nop
mov
lods
nop
sub
dec
adcb
insl
xor
add
mov
pop
push
lahf
mov
pop
gs
jns
js
xchg
incb
mov
lds
adc
sub
fidivs
adc
ror
xchg
cmp
dec
mov
fwait
mov
xchg
jmp
jno
sbb
ror
cmp
pop
push
mov
or
add
aad
clc
and
sbb
push
and
iret
jno
inc
mov
out
aaa
sbb
fistpll
in
enter
movsb
mov
sub
push
in
fistpll
popf
adc
int3
js
inc
push
in
cld
dec
xchg
mov
push
mov
mov
imul
sbb
jb
jmp
push
out
aam
xor
scas
sbb
sbb
sahf
and
sub
insb
mov
aas
fsubrs
popa
lahf
jle
movl
jmp
sbb
inc
movsl
rclb
jg
call
in
in
outsl
xchg
scas
sbb
adc
mov
xchg
and
enter
lds
sarb
push
imul
push
xlat
cmp
fisubrl
jp
jae
shrl
dec
lea
xchg
jecxz
sbb
test
js
js
icebp
pop
lahf
test
adc
xchg
dec
insb
cmc
sbb
cmp
test
sbb
iret
sub
daa
mov
cmpsb
shlb
lret
pop
shlb
mov
sub
sub
push
movsl
pop
incb
outsl
mov
insl
loopne
pop
xor
push
add
outsb
cmp
pop
mov
adc
imul
ja
or
cmp
adc
dec
mov
lea
out
hlt
scas
sub
mov
imul
out
fdivrl
sbb
cli
sbb
test
jp
ljmp
mov
call
jne
lahf
aas
adc
daa
adc
add
div
xchg
test
clc
sbb
sarl
lock
hlt
xchg
faddl
push
inc
add
sub
dec
sbbl
loop
repnz
lret
sub
in
movsb
imul
cwtl
cmp
mov
inc
push
pcmpgtw
scas
stos
jns
dec
je
push
sub
fsubs
fstps
nop
movzbl
imul
push
mov
insl
int3
outsb
jno
jmp
loope
and
out
pop
mov
add
dec
xor
sub
sub
cmp
loopne
fstps
fwait
ret
cmp
decb
inc
and
xchg
add
or
pop
inc
insl
and
mov
fldcw
sti
mov
sti
dec
inc
xchg
jnp
pop
shlb
cmp
push
dec
icebp
clc
hlt
jle
jnp
enter
xor
incb
test
push
pusha
xor
push
sti
pushf
insl
pop
pop
sbb
pop
sub
or
jle
push
sub
imul
inc
push
push
pop
lods
push
dec
inc
or
pop
xor
pop
test
adc
ds
cmp
aaa
hlt
addr16
repnz
jmp
into
imul
xchg
push
pop
push
dec
dec
fidivrl
daa
xor
and
aam
lods
aad
inc
xor
roll
rcl
mov
outsl
cmpsb
aaa
jns
xlat
xchg
add
push
sbb
ret
mov
xor
popa
ficoms
add
rcl
or
addr16
loop
out
pop
push
sub
sbb
outsb
sti
insb
dec
cmp
ja
jp
xchg
pushf
in
pop
roll
mov
push
ds
scas
fdivs
push
push
movsb
xor
fidivl
ja
jecxz
or
sarl
add
push
pop
es
xchg
mov
arpl
iret
lcall
ret
xchg
ret
mov
pop
out
iret
sar
mov
jle
aad
xor
mov
pop
subl
mov
aad
insl
in
push
mov
subb
cmp
push
mov
insb
sub
inc
ljmp
xor
dec
int
and
mov
xchg
js
lret
pop
push
mov
sahf
push
pop
out
into
inc
fisubrs
cmp
xor
mov
pop
aas
jae
ds
lret
in
mov
mov
fs
idiv
scas
pmulhuw
push
dec
inc
cmpsl
jle
push
adc
mov
or
xchg
lahf
outsb
jecxz
das
aaa
enter
dec
jbe
cli
cmp
push
icebp
or
addb
jno
stos
out
push
cli
movsl
test
cmpsb
daa
dec
inc
test
js
push
adc
push
in
or
sbb
jne
call
in
mov
and
ds
sub
arpl
out
and
scas
mov
fdivl
enter
add
and
les
shll
or
mov
push
sub
mov
lret
inc
xchg
enter
mov
adc
data16
cmp
outsb
jmp
test
pop
xchg
stc
fwait
mov
fisttpll
negl
mov
sub
xor
xchg
jle
repz
or
or
movsl
das
popa
xchg
sbb
mov
pop
xlat
mov
xchg
cmpsl
sub
ja
and
lea
lods
xlat
pop
sbb
jns
lcall
pushl
xchg
je
lcall
push
fstps
jno
cs
cmp
sbb
pop
jmp
popf
sub
out
je
or
test
enter
pusha
lea
inc
iret
mov
ds
xchg
cmp
pop
or
repnz
cld
les
jl
mov
jno
shll
add
sahf
or
jg
cmp
stos
loope
aam
outsb
faddp
cli
add
push
decl
lret
xor
sahf
loop
fiaddl
or
adc
scas
lods
in
pop
mov
pop
sub
adc
and
pop
popf
mov
enter
xchg
pop
mov
push
push
inc
pusha
sqrtps
push
mov
lods
int3
test
cltd
xor
loopne,pt
popa
movsb
adc
or
aad
mov
mov
shll
data16
cmp
jge
push
repnz
pop
popa
lcall
mov
push
dec
cltd
ljmp
jne
mov
adcl
jge
push
jno
mov
jl
mov
sahf
lds
mov
test
ds
xor
cmc
pop
loope
xchg
bound
dec
xchg
lods
sahf
outsl
and
lcall
in
adc
xor
in
mov
push
or
mov
push
adc
xchg
mov
xor
pop
fwait
outsb
mov
xchg
stc
repz
xlat
insl
sub
or
repz
lea
icebp
jnp
punpckhwd
pop
and
jge
aam
add
sbb
mov
mov
invd
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
adc
xchg
pop
mov
jge
cmpsb
int
in
xchg
sub
xlat
subb
xchg
pushf
add
or
test
xorl
fnsave
mov
lods
inc
sbb
xor
mov
sub
iret
lret
lods
jb
jmp
leave
pop
cmpsb
jo
lock
sbb
fsubp
sub
sub
sahf
adc
mov
les
icebp
mov
fnstenv
repz
mov
sar
cld
ljmp
adc
aad
push
inc
sub
shlb
movsl
mov
pop
mov
sahf
sub
jl
ja
dec
jae
sbb
jp
aad
lock
popa
mov
outsb
xor
in
lahf
into
pop
pusha
sbb
std
imul
frstor
sub
dec
dec
repnz
sub
addr16
outsb
jg
out
adc
roll
in
inc
dec
xchg
lret
dec
pushf
cmp
into
cmp
xchg
iret
mov
jmp
mov
shl
mov
pushl
test
or
xchg
mov
adc
stos
sbb
fcoml
mov
xchg
rorl
pusha
dec
lret
sbb
xchg
jle
inc
mov
nop
gs
repnz
pop
or
mov
and
jnp
push
sbb
nop
add
mov
dec
lcall
inc
mov
std
loopne
sub
loope
dec
jnp
push
push
lods
mov
mov
in
mov
sub
xchg
adc
outsb
jmp
jle
lret
out
mov
test
lahf
scas
pop
and
pand
out
outsl
or
push
sub
mov
cmp
imul
jl
mov
movsl
into
cmpb
rorl
jg
mov
fwait
xor
cs
sbb
cmp
inc
fcoml
scas
fimuls
sub
cmp
fisttps
push
dec
sarb
mov
cmp
cmp
daa
bound
or
bswap
cmpsl
xor
jmp
fcmovnbe
jno
enter
and
add
test
int3
and
and
jbe
fstpt
pop
scas
ds
push
cmp
dec
imul
outsb
push
and
sti
lods
cmpl
stc
xor
jle
pop
push
lock
dec
and
enter
xchg
or
into
push
jno
xchg
dec
jecxz
out
jne
shlb
int
sub
fildl
flds
sbb
dec
push
push
and
or
jp
cmp
sbb
sub
out
push
arpl
in
mov
jo
add
ret
jge
or
jge
in
mov
in
rcrl
enter
and
cmc
mov
mov
dec
outsl
xchg
lds
testl
roll
pop
adc
pop
lret
sahf
mov
sub
inc
xchg
dec
mov
orl
mov
jl
outsb
mov
stos
mov
inc
push
mov
popa
ljmp
fdivs
pop
push
push
fcmovu
or
adc
sub
imul
or
inc
dec
dec
pop
mov
mov
shlb
adc
mov
ret
push
push
dec
xchg
jmp
ret
stc
inc
arpl
mov
push
insl
leave
or
cli
aas
out
sti
dec
cld
push
aas
push
pop
cwtl
dec
mov
iret
aam
dec
cmp
out
sahf
adc
mov
xchg
inc
enter
dec
jmp
iret
outsl
arpl
ja
in
stos
rclb
fcmovnu
stc
push
xor
and
inc
popa
xor
push
shrb
jl
jb
jmp
ror
out
aam
or
repnz
lea
leave
insl
sub
shrb
lock
or
mov
xor
ficomps
mov
lea
outsl
xchg
mov
cld
std
out
mov
fisubrl
mov
scas
mov
out
mov
scas
add
or
jb
andb
mov
insl
dec
lods
outsl
repnz
addr16
fstps
push
jns
mov
push
cltd
stos
sbb
cmp
jl
shlb
cli
xor
test
fsubs
jns
call
aas
pop
mov
mov
and
ret
mov
insl
jns
add
sbb
xchg
call
cmp
jne
lret
xor
or
xchg
test
or
pop
lret
aam
cmpb
in
mov
mov
into
and
repz
cltd
ja
adc
add
lret
repz
push
dec
mov
pop
ja
lds
scas
outsl
mov
pop
insb
into
xchg
pusha
shlb
stos
test
pop
jp
sub
rorl
xor
xor
mov
add
push
dec
aam
jne
scas
gs
jae
adc
mov
sbb
jae
adc
xchg
pop
outsl
insl
aad
pushf
shll
jne
and
inc
call
adc
add
adc
lock
mov
mov
cs
rcll
push
and
repnz
loope
ss
movsl
jl
mul
xor
jo
mov
cmc
int3
sahf
jbe
jecxz
popa
in
clc
test
mov
jle
and
dec
fdiv
mov
sbbl
repz
cmp
in
add
sbb
pop
mov
add
fcoml
lea
mov
push
lret
into
sub
lds
sbb
test
push
test
push
jle
call
in
push
mov
rcrl
pop
sbb
fidivs
jnp
add
jbe
mov
pop
xlat
xchg
cltd
mov
fistpll
fcompl
push
or
mov
lret
mov
jb
jge
or
mov
daa
mov
orb
fdivrs
pop
bound
mov
sub
lret
xor
jns
sub
pop
data16
in
das
mov
adc
shll
push
mov
aaa
or
fstl
test
mov
aad
adc
mov
mov
fnstcw
mov
lcall
mov
xchg
mov
jle
jle
sbb
pop
mov
lcall
xchg
movsl
testl
std
sbb
into
test
adc
stc
or
jecxz
xor
xchg
cmp
rcll
sub
dec
mov
dec
inc
cmp
jmp
movsb
and
jno
lret
xchg
adc
jns
or
enter
dec
push
and
jne
dec
cmc
call
adc
into
push
mov
je
cmp
mov
imul
xlat
push
rcrb
add
and
fwait
mov
fisubs
rcll
clc
inc
in
ljmp
xchg
pop
jne
shlb
lcall
xchg
inc
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
cmpsl
mov
xchg
push
add
out
rclb
stos
test
fucomip
or
divl
inc
mov
xor
mov
sbb
scas
popf
ficomps
and
push
cmp
out
dec
repz
roll
push
fcoms
mov
cld
imul
jae
add
xor
push
push
ja
in
add
mov
les
addr16
inc
xor
in
cmp
mov
repnz
pop
mov
add
sti
push
and
aas
xchg
and
add
fxtract
push
sbb
in
sub
cltd
mov
xchg
dec
or
out
lock
push
dec
pop
cld
in
and
nop
xlat
jno
mov
imul
call
sub
dec
sbb
aas
int
leave
mov
lods
clc
mul
add
ret
mov
je,pn
inc
and
loopne
xor
dec
or
shll
jb
sbb
aas
dec
jb
subl
mov
clc
sbb
xor
rol
imull
xchg
sub
jmp
cltd
push
imul
fcomps
aam
mov
push
xor
movb
mov
xlat
dec
movhps
xchg
outsb
jno
push
push
movsl
aam
sub
xor
jg
add
and
sahf
repz
xchg
cwtl
mov
dec
das
mov
arpl
idivl
andl
adc
shr
add
jmp
cmpsl
and
mov
movsb
mov
push
add
testl
lea
mov
popa
jecxz
mov
pop
xchg
cmp
sbb
fcompl
clc
dec
fwait
jbe
cld
sub
or
xchg
xchg
mov
push
xchg
pop
shlb
hlt
pop
mov
xchg
lods
pop
cli
aad
jmp
dec
in
inc
imul
xor
dec
mov
xor
in
and
xchg
inc
movsl
sahf
xor
dec
xchg
test
cmp
das
or
in
popl
fadds
addr16
cmp
xor
out
addr16
aam
and
nop
sahf
push
or
dec
std
xor
jmp
mov
shll
imul
outsl
add
test
imul
sbb
sahf
cli
psraw
movsl
in
push
jecxz
jge
icebp
inc
cli
and
mov
lods
aad
or
mov
ficompl
ds
cmp
lahf
sbbl
push
repz
cmp
call
loop
xchg
ljmp
sahf
subb
sahf
and
jno
aaa
and
not
mov
mov
dec
xchg
xor
sub
dec
pop
ja
lahf
loopne,pn
mov
push
adc
push
test
pop
or
mov
popa
cli
lds
mov
lods
xchg
and
pop
push
pushf
cli
push
mov
jbe
sahf
inc
fiadds
inc
imul
mov
popf
or
jne
mov
scas
pop
mov
inc
movsb
dec
xchg
add
das
fwait
in
cld
ss
inc
xor
xchg
jae
das
bound
pop
cwtl
fcmovbe
jp
ficoms
shll
test
add
cvttps2pi
clc
or
ja
mov
pop
xchg
cmp
pop
loope
das
adc
aam
out
xrelease
add
xor
outsb
cli
mov
pop
arpl
cmp
inc
pop
loop
jne
hlt
shlb
sbb
push
push
mov
xor
mov
xchg
out
jae
add
lods
into
call
mov
adc
ljmp
inc
ja
out
repz
jle
mov
dec
jo
fmuls
push
out
mov
leave
test
lods
inc
rcrb
mov
dec
sbb
nop
xor
into
loope
push
sbbl
sbb
rorb
sub
inc
add
adc
lods
dec
inc
out
std
das
out
hlt
aad
js
pop
lds
push
jge
mov
jge
push
pop
add
and
pop
fcmovnb
dec
dec
sbb
stos
or
sbb
xor
outsb
pop
sbb
dec
je
push
popf
fs
mov
adc
jne
int3
sub
and
or
add
nop
pop
jmp
add
sub
jg
push
sbb
mov
push
pop
sbb
int3
dec
xchg
imulb
cs
sub
movsb
jne
xor
dec
addr16
aad
push
push
imul
cs
mov
push
js
nop
push
pusha
enter
cltd
rol
sarb
shrd
popa
push
jno
xchg
neg
dec
stc
or
cmp
mov
xchg
mov
push
icebp
add
sub
js
sahf
dec
or
and
xchg
out
jle
inc
add
adc
mov
rcl
out
push
mov
add
idiv
sbb
popf
xlat
sub
cli
nop
clc
sbb
ret
arpl
shrb
test
movsl
push
or
int
repz
repnz
out
mov
xlat
jl
cltd
xchg
jo
ljmp
push
or
adc
mov
clc
lea
int
scas
imul
ret
xchg
inc
outsl
push
mov
int3
push
add
out
fwait
inc
aas
idivb
pop
dec
subb
adc
push
pop
fcmovnb
add
cli
add
cmp
pop
mov
test
mov
sbb
cli
mov
dec
or
cwtl
clc
pop
push
dec
out
shl
push
adc
lods
mov
xchg
es
mov
clc
pushf
jg
fs
pop
in
inc
in
dec
cmpsl
mov
mov
adcl
sbb
jge
mov
aaa
dec
test
lret
mov
jbe
sbb
mov
jb
adc
test
cmp
jbe
pop
push
dec
push
es
int3
and
insb
cmc
mov
aad
cmp
push
int
fidivrs
xchg
roll
push
test
inc
push
sahf
mov
aad
cmp
push
fsubl
dec
cwtl
int
in
pop
lea
mov
xchg
mov
imul
out
add
pushf
inc
pop
packssdw
push
adc
fldt
sbb
pop
fs
xor
movb
and
xor
ficomps
sub
add
mov
adc
pop
jnp,pn
xchg
rorl
mov
mov
cs
enter
dec
nop
fidivrs
cmp
das
mov
arpl
dec
add
ljmp
add
loopne
lock
test
popl
mov
inc
jmp
jmp
cmpsb
xor
cmp
pop
jbe
iret
or
ret
inc
add
sub
fwait
cmp
push
cmp
ret
movsl
push
sbb
loopne
loopne
sbb
pop
and
mov
push
fsubrs
or
sbb
dec
sbb
test
ljmp
xor
pop
push
dec
dec
pop
sbb
roll
inc
mov
mov
les
sti
popa
push
in
lds
in
mov
xchg
xchg
adc
ja
js
neg
jge
xchg
inc
out
leave
enter
fwait
mov
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
dec
icebp
out
aas
ja
mov
mov
mov
push
std
fwait
xlat
adc
adcl
mov
sbb
mov
adc
fsubs
nop
aad
and
cmpsb
inc
jns
test
add
inc
sub
sub
xor
push
push
dec
fsin
mov
xor
xor
andb
mov
push
mov
popf
mov
ja
xchg
adcb
pop
cmc
pusha
dec
cmp
sbb
push
pop
mov
nop
pushf
fld1
and
inc
scas
inc
xchg
cmp
popl
cmp
adc
sub
add
orl
sbb
ljmp
stos
enter
movsl
adc
testb
and
imul
aam
jb
rcll
jge
cmp
push
jge
add
jecxz
mov
xor
mov
int3
push
dec
mov
fidivrl
shrb
popf
add
loop
push
mull
pop
or
xchg
pop
mov
pop
pop
rolb
sahf
xchg
and
fstp
push
jne
int
jns
push
cmp
in
or
fs
test
push
jns
adcb
jb
addl
push
ja
in
sub
add
sarl
jo
das
inc
inc
out
imul
xor
fcompl
fistpll
aam
scas
jno
lcall
inc
jl
push
inc
push
adc
cmc
repnz
imul
adc
dec
ja
loop
xlat
jnp
cmp
ret
push
sub
pop
cmp
enter
or
call
popf
pushf
inc
movsb
or
jge
addb
stos
insb
stc
aaa
imul
js
sub
cmc
sti
aam
aam
fnstenv
ret
js
cmc
push
inc
mov
lods
mov
orl
movsb
fdivp
or
fmull
cmpsb
into
js
lea
lret
ljmp
dec
inc
shlb
mov
jl
lods
adcb
mov
dec
test
cltd
jbe
or
sbb
ljmp
cmpsl
icebp
xor
in
daa
fwait
push
rol
clc
dec
sbbb
clc
jns
dec
jmp
stos
sti
addr16
push
lds
push
push
xchg
push
mov
lods
mov
mov
jp
mov
mov
loop
fisubrs
xor
mov
jl
xor
adc
nop
fs
pop
push
lds
js
js
mov
inc
das
test
cmp
sti
xchg
cmp
mov
bnd
hlt
xchg
out
jp
mov
cmp
ss
into
ds
pop
cmpsb
mov
aas
push
stc
test
fistpl
cltd
test
mov
sbb
xchg
adc
inc
ja
cmp
inc
rorb
stc
out
cmp
cmp
push
hlt
xchg
stos
pop
sub
or
clc
xchg
push
jp
jb
dec
ds
mov
or
push
pop
fisubs
js
pop
jns
les
xor
out
mov
ret
faddl
loop
ja
and
inc
ja
dec
das
xor
mov
mov
inc
jl
shl
jg
fdivl
rcr
fwait
adc
aaa
arpl
dec
lods
mov
loop
sahf
sbb
fistl
cs
cli
jns
jnp
jns
push
inc
push
jle
vhsubpd
xchg
scas
sub
into
mov
fildl
test
insb
out
popl
dec
lock
ja
fdivr
fwait
adc
and
pop
out
mov
pop
out
sbb
and
rcrl
or
xchg
inc
jnp
insb
mov
or
and
aam
xor
mov
pusha
xlat
popa
mov
sub
add
scas
and
mov
mov
ret
inc
pop
xor
pop
or
rol
hlt
in
scas
adc
add
gs
imul
cmp
fdivp
sti
jo
inc
mov
jbe
es
mov
adc
pop
mov
aad
jg
insb
adc
enter
inc
out
ret
ret
sahf
loopne
ret
test
clc
movsb
push
xchg
roll
aad
cmp
pop
xorb
mov
xor
in
xor
cld
jmp
sub
jl
inc
repz
outsb
cmp
lock
in
testb
add
dec
out
movsl
iret
or
push
mov
out
mov
and
cmpsl
sbb
cli
stc
mov
outsb
cmp
fistpll
sbb
sub
movl
fidivrs
xor
add
push
fidivs
jp
pop
and
gs
and
sbb
xor
inc
iret
sarb
pop
lods
pop
adc
hlt
sbb
sti
pop
cwtl
lock
sti
loope
rorl
aam
mov
js
mov
xor
aaa
push
pusha
cmp
jae
mov
rcll
inc
sub
pushf
mov
loop
ljmpw
jp
dec
and
jmp
test
aad
inc
lods
mov
fwait
and
cmpsl
sahf
addr16
hlt
repz
ficoms
pop
push
cmp
add
mov
mov
fs
xlat
xchg
orl
dec
jns
rolb
adc
push
cmpsb
or
data16
outsb
mov
and
cmpsb
cmp
cli
daa
and
std
lret
sbb
jg
stos
rorb
leave
leave
rorl
jmp
or
jmp
lcall
leave
in
add
add
adcb
mov
fcoml
popf
lahf
test
xchg
ret
adc
cmp
mov
sub
pop
cli
pop
xchg
push
cmc
gs
pop
fstl
mov
pop
aas
dec
repnz
idivl
jae
cli
xchg
sbbl
xor
push
cmp
mov
inc
les
out
jecxz
cmpsb
loope
es
cwtl
cmpsl
call
out
add
mov
out
jle
test
ja
aaa
push
pop
insl
and
shrl
scas
inc
inc
adc
sbb
push
mov
fbstp
xchg
clc
add
push
inc
hlt
mov
in
aad
lahf
mov
add
xchg
jnp
fadd
dec
sbb
push
pop
rclb
leave
outsl
jns
push
adc
out
and
or
out
mov
pop
fs
add
xor
push
mov
iret
adc
pop
stos
and
loop
pop
jne
cmp
in
or
cwtl
mov
filds
sahf
or
lcall
mov
jmp
xor
icebp
das
cmp
popa
call
push
mov
dec
mov
ret
push
dec
push
cmpsl
in
out
mov
loopne
fidivrl
add
dec
mov
cmp
popa
jns
je
xor
int3
adc
test
inc
jg
xchg
scas
idivl
in
shll
cmpsl
out
clc
xchg
and
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
inc
push
mov
ja
push
ret
ja
xor
mov
fisubrs
cmpsl
daa
adc
dec
test
cld
dec
test
fisubs
negb
fistl
dec
rcr
stos
sub
lods
hlt
das
dec
xchg
inc
cmpsl
into
cld
push
and
out
sbb
mov
nop
loopne
hlt
dec
jnp
and
roll
stc
in
leave
mov
int3
xchg
jno
movsb
movsl
ds
dec
xor
imul
ret
cmc
mov
mov
mov
into
lods
mov
out
mull
shlb
cs
iret
inc
int
rclb
outsl
xor
ficomps
sub
cwtl
addr16
push
sub
call
mov
pop
xor
push
add
mov
sub
cmp
out
adc
scas
aad
mul
aad
scas
fnsave
out
inc
mov
js
std
pop
cmc
adc
lcall
adc
inc
and
aaa
mov
les
into
and
mov
push
fwait
loop
stos
rorb
testl
sbb
sbb
or
into
inc
pop
push
lret
mov
add
mov
xchg
jmp
enter
push
dec
push
mov
push
or
or
pop
nop
pop
and
push
push
jnp
imul
push
movsb
add
in
sbbl
xor
test
fistpl
insl
push
push
pop
push
mov
fisubrl
loop
sub
mov
mov
sbb
cli
dec
int
jl
xchg
mov
sbb
into
and
inc
shll
adc
sti
mov
mov
pop
jg
push
in
xchg
aaa
push
in
push
rorb
jecxz
aas
and
add
and
push
test
out
cltd
push
cmp
lock
inc
add
pushl
cld
shl
jg
jns
cltd
jle
pop
data16
inc
lods
lds
sbb
push
fcomip
lcall
inc
pop
jns
in
or
jb
xchg
rcl
sub
repz
inc
ds
inc
inc
mov
sbb
lea
enter
mov
mov
push
repz
and
lcall
pop
mov
xor
mov
jp
dec
imul
add
popa
xchg
mov
mov
enter
das
dec
push
cli
sub
cld
iret
inc
ljmp
jp
xchg
and
adc
adc
adc
inc
add
shlb
lods
dec
and
lret
xchg
arpl
or
inc
flds
pop
mov
sbb
out
pop
lret
pop
lods
mov
add
jl
lret
ret
lds
aas
jo
jo
sbb
inc
xchg
cld
pop
fwait
inc
mov
adc
loop
scas
outsb
mov
sbb
mov
or
aas
ljmp
or
sti
add
cmp
add
ljmp
mov
and
cli
adc
mov
into
dec
mov
imul
jae
in
les
push
dec
push
test
negb
jg
jne
nop
cmp
lock
push
inc
mov
ret
sbb
push
addr16
mov
inc
lea
mov
int3
ds
mov
cld
arpl
push
mov
sbb
mov
add
push
pop
lret
out
in
smsw
fs
mov
sub
test
out
add
dec
adc
xchg
push
xor
stos
popa
inc
push
mov
or
sbb
fdivrl
cmp
cmp
pop
mov
lcall
popf
adc
jmp
ss
lods
pop
clc
mov
ja
adc
push
sub
nop
sti
sbbb
lret
mov
dec
mov
not
dec
jb
cmp
js
jbe
adc
popf
fcmovnu
xchg
xlat
mov
mov
adc
push
xor
mov
test
popa
das
mov
inc
adc
cmp
mov
pushf
pop
js
push
pop
mov
add
or
or
push
lret
jecxz
jg
adc
mov
imul
xrelease
mov
add
cmp
adc
dec
or
sarl
int
sbb
xor
push
mov
adc
test
xorl
sahf
jmp
cmp
push
push
shld
inc
int3
lret
mov
xor
mov
movl
pop
adc
cmpsl
mov
pop
xchg
and
cwtl
cld
xchg
mov
pop
shlb
xchg
popa
pop
inc
push
xor
int
mov
in
outsb
push
cs
jae
adc
mov
iret
or
lcall
std
mov
xchg
pop
pop
testb
in
mov
cmpb
jns
in
mov
shll
add
or
xchg
inc
les
sub
xchg
sbb
cld
xchg
pusha
dec
cld
out
shlb
inc
leave
pop
dec
mov
adc
decl
jecxz
cmp
and
lock
sti
jl
aad
scas
cmp
jno
push
fs
or
stos
xorl
jne
sub
movsl
xchg
aas
clc
cmp
in
imul
jle
xor
pop
jl
push
jle
iret
mov
adc
jge
push
out
in
adc
fwait
add
cltd
push
pop
hlt
pop
xchg
ret
repnz
dec
jmp
adc
sub
sbb
dec
mov
xlat
cli
xchg
jno
mov
fcmovb
out
ljmp
push
mov
cmc
push
or
add
aas
sub
ljmp
ljmp
arpl
mov
ss
cmp
or
mov
and
jl
insl
mov
loop
gs
ss
mov
int
mov
lahf
jg
mov
lock
ret
clc
add
ret
xchg
in
test
push
mov
test
fdivrl
pop
or
std
fcmovu
jb
xchg
int
mov
lds
in
shll
in
mov
inc
rcl
pop
mov
lock
cmpsb
pop
mov
fs
pop
xchg
ljmp
push
addb
lds
insl
lods
stos
push
push
xor
or
add
in
mov
cli
sbb
mov
mov
rcr
dec
xor
ss
sub
lock
out
negl
dec
xor
xchg
les
xor
push
and
mov
inc
stc
sbb
jmp
shll
mov
fmull
xchg
jnp
inc
push
jecxz
xchg
mov
fmulp
out
push
aas
add
out
jle
ret
dec
adc
test
out
and
test
cmp
aad
inc
in
jecxz
dec
jl
add
push
adc
xchg
pop
ljmp
jmp
stos
adc
rcr
scas
mov
arpl
dec
jge
fcomps
cmpb
cmpsb
cmc
lcall
popa
mov
mov
mov
les
cwtl
lods
adcb
dec
inc
outsl
pop
out
xor
add
ljmp
scas
outsl
stos
add
je
lods
dec
cmp
scas
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
rdtsc
pop
lea
fwait
cmpsb
pop
mov
mov
ds
adc
inc
cwtl
pop
pop
push
cwtl
daa
pop
pop
adc
mov
rorl
movsb
xchg
fwait
iret
loopne
into
cmp
dec
xchg
rcrb
outsb
loopne
clc
lds
mov
fiaddl
push
aad
or
sub
sbb
mov
ljmp
je
add
mov
xor
fisttpll
shl
lahf
sbb
xor
mov
xor
aam
and
rcll
jmp
cmpsl
ljmp
push
jl
cli
mov
es
icebp
mov
fstl
bound
push
in
inc
lods
mov
rolb
sbb
daa
movsb
xor
in
lahf
in
in
arpl
lcall
jl
mov
sbb
cmc
mov
pop
ss
inc
arpl
inc
into
lods
mov
pop
cmp
jb
arpl
pop
or
or
movsb
adc
and
das
into
xor
rolb
jecxz
push
mov
leave
xchg
or
aas
arpl
fdivrp
roll
add
cmp
das
test
add
imul
fwait
mov
aas
push
stos
push
pop
sbb
fidivl
adc
movb
in
cmp
ds
orb
and
mov
popf
lahf
fildll
jae
add
pop
jnp
cltd
movsl
mov
mov
sub
dec
dec
mov
push
lea
adcb
jbe
dec
mov
out
je
lods
adc
daa
lds
lods
cmp
pop
xchg
test
pop
int3
push
fists
and
cmpb
notl
cwtl
insb
hlt
daa
dec
lret
and
push
clc
sub
sti
xchg
pop
sub
pop
adc
adc
xchg
xor
outsl
pushf
mov
xchg
cli
adc
lock
jp
cwtl
out
rol
cltd
cs
xchg
inc
fimull
push
add
dec
insb
nop
mov
mov
ret
xchg
dec
pop
mov
jl
push
and
out
hlt
pop
call
loop
std
lods
sub
mov
inc
rorb
jo
mov
jecxz
and
hlt
pop
push
sub
cmp
cmpsl
mov
cwtl
mov
jae
mov
mov
xchg
int
push
mov
es
lods
sbb
adc
dec
pop
jno
icebp
sbb
dec
lret
push
ret
push
adc
shll
xor
cmpsl
clc
inc
cs
mov
lcall
inc
rolb
pop
cmp
jle
mov
adc
and
jb
inc
test
mov
notl
enter
lret
mov
test
push
jae
pop
or
mov
scas
pop
push
popl
imul
jp
jo
add
stc
or
mov
adc
adc
adc
inc
stos
mov
subb
inc
mov
lret
adc
xchg
pop
pop
pop
lds
mov
cmpl
orl
loop
mov
test
dec
lods
jbe
outsb
mov
push
xor
sti
jno
jns
repz
clc
outsl
inc
iret
ljmp
jle
fistps
bound
xchg
push
inc
leave
xchg
and
aas
xchg
lret
out
dec
jecxz
pop
popf
sub
out
mov
adc
lcall
push
std
loopne
sbb
cs
flds
sbb
inc
imul
stos
mov
jmp
repnz
repz
pop
jnp
outsl
push
adc
pop
leave
ret
call
es
mov
lret
popa
rorl
xor
gs
dec
lcall
outsl
ret
pop
mov
jb
mov
push
adc
sub
add
icebp
inc
mov
add
mov
xchg
cli
lret
xlat
mov
pop
lods
fnstenv
dec
sbb
push
dec
jp
push
pop
int3
mov
pop
out
adc
cmpsl
mov
dec
out
popf
dec
mov
jnp
lret
test
pop
xor
dec
and
sti
inc
stc
mov
add
data16
adc
mov
or
mov
pop
stos
push
jne
cmp
mov
and
leave
enter
in
hlt
dec
in
jbe
mov
pop
hlt
adc
add
cmp
xchg
outsb
lahf
addr16
or
mov
cmp
cwtl
imul
or
xor
mov
jmp
xchg
push
es
test
test
push
or
lods
and
lods
out
mov
pop
add
lods
stos
popa
addb
xchg
cmp
pop
movsb
jnp
std
fbld
ljmp
out
pop
jecxz
mov
mov
in
jge
sub
je
arpl
mov
xchg
lods
push
out
das
jle
pop
xchg
xchg
mov
fdivrs
fcompl
or
cli
add
call
sub
inc
out
ffree
mov
and
sarb
popf
out
mov
push
mov
movsb
shlb
aad
idivl
mov
cmp
imul
lret
addb
sub
sub
int
mov
fsubrs
cmc
mov
mov
mov
imul
jbe
adc
sbb
cs
aam
mov
sti
cmp
mov
stc
sub
jecxz
imul
pop
cmp
icebp
adc
test
cmp
int
in
cmp
imul
and
mov
xorb
loopne
scas
cmp
sub
ds
popf
and
int
aam
data16
push
incl
or
ss
push
jg
lods
sub
adc
and
movsb
and
and
jle
xchg
shll
mov
das
push
shl
sub
hlt
cltd
or
es
sti
sbbl
mov
repnz
adc
mov
inc
dec
mov
je
rorl
jb
stos
in
loop
inc
dec
xchg
inc
hlt
add
aam
jo
jle
ret
xor
imul
or
or
fdiv
out
dec
das
test
fwait
dec
mov
rclb
jno
sub
sti
or
stos
lret
dec
adc
popf
jns
mov
push
aas
jge
xchg
push
or
push
shrb
xor
mov
stc
in
inc
push
cmc
mov
jge
in
int
push
sub
lds
insl
sbb
mov
addr16
bound
and
xchg
fisubl
push
movsl
int3
aam
push
mov
loopne
sub
jns
inc
jo
loop
ds
inc
push
and
adcb
pop
filds
je
lods
xadd
and
data16
mov
and
lahf
std
lcall
iret
xchg
sahf
test
enter
in
lds
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
iret
sbb
ja
xchg
shlb
out
jae
iret
outsb
jo
adc
push
out
sub
nop
test
sbb
jp
loope
pop
in
and
div
push
sub
or
test
and
orl
or
inc
ljmp
cltd
push
jmp
lods
cmp
mov
xor
ret
pusha
lods
ljmp
jecxz
xchg
insl
gs
adc
lcall
aam
jl
data16
lds
jg
fwait
loope
cmp
pop
lock
test
inc
inc
add
movsb
mov
xchg
subb
dec
dec
xchg
movsb
adc
or
ficoml
pop
leave
mov
dec
fistpl
xor
push
pusha
xor
push
sub
ret
fdivrp
adc
shll
sbb
inc
mov
jg
inc
and
insb
in
je
pushf
ja
mov
pop
lcall
pop
pop
xor
enter
adc
and
fs
outsb
push
and
mov
fadds
mov
xchg
pop
pusha
gs
dec
mov
xor
mov
icebp
cs
pop
daa
mov
mov
sarl
loopne
sub
pop
jb
mov
inc
leave
or
aam
call
xorb
in
int3
arpl
lea
out
mov
lahf
dec
cmc
insb
push
adc
dec
cld
dec
push
lods
ret
mov
es
in
loop
stc
mov
test
jge
lcall
loopne
push
test
pop
sbb
cltd
mov
jbe
inc
cwtl
push
lret
in
ror
test
jns
mov
fnsave
fstpt
in
cmpl
mov
or
cli
jg
jl
out
gs
push
scas
imul
ret
add
adc
pop
inc
pushf
sti
fisubrl
sahf
dec
add
lret
add
or
push
jp
in
in
jb
popf
adc
outsb
dec
lods
lock
test
xchg
pusha
fndisi(8087
clc
in
jne
and
push
adc
lods
jnp
jnp
test
fs
das
mov
in
mov
add
not
loop
add
sub
cmp
sbb
in
les
add
cwtl
sahf
lods
push
outsb
repz
fcomip
xlat
push
test
xor
add
pop
jne
add
add
or
push
pop
mov
mov
inc
lret
ja
pop
jp
mov
add
and
mov
or
mov
mov
dec
push
clc
leave
jb
mov
lods
scas
push
popf
imul
sti
lret
lahf
call
aas
inc
or
in
dec
cmc
scas
add
mov
jb
sbb
xchg
add
mov
push
jno
cltd
mov
stos
aad
data16
sbb
or
pop
bound
rclb
je
inc
xorb
pop
loopne
adc
push
and
pop
xchg
loope
sub
addps
push
sbb
jae
xchg
cmp
sbb
push
xchg
in
lds
call
call
stc
bound
fcmovnb
push
ja
loopne
repnz
xorb
outsl
cltd
fstpt
add
sub
shr
xchg
test
cmc
int
popf
outsb
or
xchg
jmp
inc
in
or
push
int3
cmc
cmp
insb
into
mov
adc
leave
fimull
mov
add
and
lret
mov
adc
and
jp
mov
outsb
scas
lods
outsb
divb
les
sbb
loopne
jle
mov
aad
inc
and
scas
jb
jnp
int
fnsave
daa
js
enter
xchg
sbb
enter
fildl
push
push
repnz
push
mov
sbb
aas
push
lret
ffreep
out
and
mov
pop
icebp
mov
xchg
sbb
xor
out
data16
cmpsl
add
mov
adc
jl
mov
into
jnp,pt
dec
xor
lahf
xor
sub
es
gs
mov
sti
cmc
xor
fsubrl
cmp
shlb
es
orl
lcall
aam
sub
stc
fstpt
mov
sbbl
cmp
pop
xchg
daa
sbbb
fisubs
and
sub
pop
ret
insl
lahf
aam
clc
fwait
sbb
decl
xor
pop
and
mov
sahf
mov
stos
scas
jne
in
and
adc
cld
push
jbe
xchg
sarb
les
cmpsl
xor
cmp
jl
jl
sub
mov
inc
arpl
leave
aad
mov
sbb
dec
imul
cmp
hlt
imul
adc
addr16
in
pop
pop
or
xor
fistps
push
add
ja
int3
lret
je
mov
xor
add
call
jecxz
icebp
adc
mov
cwtl
inc
fwait
movsb
scas
sbb
pop
xlat
sbb
out
outsb
lret
inc
xlat
xchg
loope
inc
scas
dec
shll
mov
add
or
cmpl
rorw
out
jno
sbbl
aad
fcom
movsl
das
adc
movsl
add
clc
subb
scas
stos
addr16
lahf
dec
jno
icebp
mul
ljmp
xor
sarb
xchg
mov
outsl
cmp
pop
adc
jo
add
decl
mov
push
mov
aam
xor
hlt
xor
dec
sub
fldenv
pusha
jp
stos
fwait
shll
and
outsl
dec
scas
mov
js
fsubrs
mov
mov
jns
mov
sbb
test
xor
xchg
dec
imul
std
mov
adc
cmp
adc
add
cmc
pop
lcall
jne
or
test
pop
lock
jmp
fistpl
aaa
iret
data16
pop
mov
loop
cli
add
mov
mov
mov
mov
ret
mov
daa
mov
jne
add
es
rolb
dec
jae
jbe
shlb
ror
mov
cmc
adc
or
cwtl
sti
pop
mov
stos
dec
adc
inc
data16
cmpb
add
push
cmpsb
sarl
mov
sub
lret
repz
cmp
sbb
enter
xchg
jl
std
clc
mov
je
mov
test
and
hlt
pop
mov
negl
jae
shrl
mov
shl
or
cmp
pop
mov
je
pop
adcl
mov
sub
xlat
add
pop
out
add
movsb
xor
ret
mov
fwait
inc
mov
call
sbb
aas
push
xor
aas
push
mov
pusha
mov
push
mov
and
sub
rcrl
in
fs
out
aaa
adc
mov
fcoms
push
nop
push
adc
adc
xchg
jno
add
mov
jo
andb
push
adc
xchg
mov
adc
inc
adc
test
ret
or
test
push
mov
mov
mov
jmp
push
mov
adc
xchg
aaa
inc
mov
add
ja
sub
in
xchg
sti
adc
mov
cmp
iret
adc
dec
push
adc
or
sub
add
lock
js
pushf
push
fbld
out
arpl
ljmp
imul
iret
fsub
inc
mov
mov
aas
jcxz
les
fwait
xor
fwait
xchg
push
push
jmp
push
shlb
pusha
fldt
mov
dec
mov
mov
test
arpl
adcl
cmp
rcrb
xor
ret
mov
cmp
pop
sbb
shll
cld
cmp
scas
xchg
push
bound
xchg
and
mov
scas
jmp
into
sub
in
call
lahf
cmp
xor
jl
loopne
jle
sbb
imull
scas
adc
imul
inc
cmp
mov
jae
iretw
xor
les
pop
rorl
mov
leave
scas
mov
ds
jb
lock
dec
iret
mov
in
in
fs
push
fwait
fidivl
push
pop
lcall
addb
add
xchg
mov
in
jno
daa
fildl
cmp
cmp
xchg
and
cmp
cmovne
mov
sbb
cmp
outsb
out
mov
ret
daa
clc
xor
mov
cmc
loop
cmp
repnz
xor
cld
mov
mov
repz
lock
xchg
mov
sti
scas
out
mov
add
mov
cli
lods
imul
xchg
and
bound
hlt
aad
fstps
mov
movsb
cmp
or
popa
add
adc
xchg
out
loope
fimull
mov
scas
or
lcall
and
pop
pop
repnz
mov
and
adc
addr16
cmpsb
jne
rorb
inc
cmc
insl
call
js
cmp
adc
add
repz
stos
dec
sbb
rcrb
adc
mov
push
icebp
push
out
scas
insb
inc
aas
sarl
ljmp
xchg
arpl
push
push
pop
inc
sub
and
fdivs
psllq
sbb
push
out
mov
mul
je
lods
ss
ljmp
jnp
add
out
jmp
test
or
push
adc
imul
roll
jb
testl
xchg
popf
cmp
mov
int
xchg
sbb
cli
add
pop
ss
add
inc
pop
xchg
fidivl
jb
adc
popf
fcmove
pop
or
and
pop
or
pop
and
sbb
xor
jne
jge
push
pop
lret
or
ljmp
clc
dec
notl
aam
dec
push
inc
dec
aad
out
lret
sbb
outsl
mov
insl
loope
std
lret
mov
sbb
rorb
shl
inc
xor
aam
cs
ljmp
ljmp
push
jo
or
dec
xor
aam
push
or
nop
pop
push
adc
jg
push
xor
popf
push
inc
xchg
mov
cmp
dec
mov
std
popa
shlb
sti
push
faddl
jno
popf
out
sbb
out
testl
ficomps
xor
xchg
jo
das
lds
fiadds
add
je
mov
jecxz
jge
xchg
or
adc
pop
dec
inc
mov
mov
cmp
jp
pop
sbb
inc
mov
jb
mov
push
pop
add
adc
aad
iret
ret
mov
in
cmpb
das
ret
mov
or
lahf
shrb
scas
in
outsb
inc
jle
inc
out
data16
xor
xor
cmpsb
test
into
nop
jne
inc
pop
je
test
jle
jl
push
dec
mov
into
dec
sub
jecxz
loopne
mov
loopne
enter
mov
cmp
pop
cltd
data16
daa
push
pop
inc
test
hlt
loope
xchg
aam
sub
mov
imul
sub
fstl
out
mov
test
xchg
push
movsb
popa
inc
dec
pushf
cmc
aam
or
xor
mov
pop
fisttps
cli
ret
mov
jnp
arpl
or
lret
or
lods
inc
and
imul
pop
or
movsl
lods
sar
pop
into
addb
xor
push
sti
and
jg
adc
sahf
fstpl
push
call
inc
fs
mov
in
popa
test
fimull
cmp
fs
adc
mov
ror
dec
ret
imul
ficomps
dec
jmp
cmp
mov
ja
leave
hlt
repz
jnp
leave
pop
add
mov
pop
jno
fs
adc
xchg
cmp
cmp
mov
jnp
clc
insb
mov
shl
cmpsb
mov
out
loope
inc
cmp
icebp
into
adc
adcb
jmp
cld
mov
jae
mov
arpl
sub
sub
mov
testb
inc
cmp
andb
or
and
lea
mov
sub
mov
movsl
fnsave
fistl
lods
add
sbb
int3
iret
fmuls
ficomps
jmp
xor
dec
das
lret
out
cmc
inc
inc
ljmp
mov
and
lock
lods
cld
ret
sub
mov
test
scas
xor
xchg
xchg
mov
xchg
and
jl
lret
cmc
scas
dec
cld
shll
fiadds
roll
stos
cmp
pop
mov
dec
xchg
sahf
sbb
jl
cmc
push
outsl
mov
pop
xchg
or
enter
and
cmp
sub
add
sub
or
stos
fists
cltd
out
push
imul
aad
push
repnz
cmpsb
push
out
dec
ret
xchg
xlat
mov
inc
mov
das
jle
xor
push
inc
mov
xchg
add
roll
out
sub
or
leave
cld
xchg
cmpsb
imul
ja
mov
ds
aad
loopne
sbb
lret
xchg
mov
xor
cli
mov
scas
cmp
jmp
dec
lahf
out
sbb
or
xchg
mov
sbb
xchg
loopne
push
leave
or
adc
adc
imul
sbb
outsl
rorb
sbb
jge
or
cmp
sbb
popa
jmp
loop
pusha
loopne
sti
js
sahf
ret
popa
fwait
dec
sahf
inc
in
jge
mov
ffreep
ja
incb
imul
push
or
and
aas
outsl
xchg
cmp
ret
push
icebp
adc
jno
pop
sub
xchg
mov
jmp
jge
sbb
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
mov
dec
subb
dec
mov
and
lahf
xchg
sbb
pop
jl
cmp
rorl
in
pop
mov
sbb
in
inc
push
outsb
popa
sub
push
out
adc
push
adc
push
cmpsb
fisttpll
push
aaa
or
mov
jo
stos
xchg
roll
sub
push
adc
jl
cmc
inc
movsb
mov
gs
mov
push
mov
mov
faddl
fstpl
push
gs
outsb
inc
and
sti
pop
or
cmpxchg
xchg
jmp
xor
pop
cmp
into
mov
sbb
fimuls
mov
or
fsubp
fadds
fcoml
neg
out
enter
into
orl
mov
iret
xchg
pop
out
movsb
adc
imul
xor
in
adcl
mov
negb
movsl
fiadds
lret
int
sub
std
dec
cmc
ds
scas
and
mov
push
mov
mov
fst
mov
insb
jb
adc
and
xor
xor
dec
aas
rcl
push
inc
in
add
mov
popa
sub
mov
xor
xchg
fcmovbe
cmc
mov
mov
ljmp
sub
jo
jle
mov
enter
add
jne
mov
stc
xor
lods
addr16
in
push
pop
jb
shrl
subb
sub
in
rcrb
cmp
adc
jbe
in
imul
or
sub
adc
popf
cmp
mov
fbstp
popf
nop
mov
iret
je
xchg
icebp
ret
repz
xchg
and
cmc
out
ss
dec
cmp
ljmp
ja
sub
mov
fsubrl
or
int
ds
shrb
jb
imulb
stc
add
sti
cmpsb
stos
dec
cmc
xchg
cmc
movsl
lds
leave
or
or
das
dec
cmp
outsb
xchg
int3
mov
push
out
lahf
outsl
dec
xchg
sbb
outsb
addl
test
or
insb
int
cltd
mov
jg
adc
ja
xor
cltd
iret
jne
xor
insl
mov
xor
outsb
adc
dec
test
cwtl
sbb
mov
sub
push
dec
and
rcr
mov
data16
mov
cwtl
pop
mov
jae
and
pop
mov
push
dec
sub
xchg
out
shl
lods
inc
movsb
xlat
xchg
test
push
xor
add
stos
xor
cmp
xchg
jge
and
inc
mov
sub
cmp
xor
adc
sahf
jno
sti
jmp
mov
hlt
aaa
sub
push
hlt
dec
in
stc
out
rorb
jle
test
fcompl
insl
xor
test
outsb
push
lret
adc
cs
dec
ret
jbe
ja
jae
imul
or
adc
cli
jo
scas
cmp
into
in
mov
sbb
push
dec
mov
and
mov
or
pop
cmc
pop
jns
ds
cmp
dec
adc
push
call
add
push
scas
add
cmp
ficoml
jnp
loopne
pushw
inc
call
test
filds
xchg
mov
loope
cmpsb
xchg
mov
or
push
aad
lahf
mov
cmpsl
and
mov
test
push
mov
ja
cmp
push
xchg
inc
addl
out
push
inc
icebp
lods
fbstp
insb
or
into
movsb
fsubrs
cmp
addr16
insb
pushf
fstl
jne
out
loope
xchg
shll
lds
jge
push
sbb
aam
mov
popa
lret
xchg
push
or
ret
lcall
fsubs
pop
data16
xor
rol
test
cmc
inc
adc
and
fnstcw
aas
and
jp
mov
imul
and
aas
cmp
sbb
cld
pop
fstps
rclb
and
fwait
rclb
scas
adc
sbb
mov
add
popf
fwait
lret
icebp
test
int3
dec
dec
pop
or
dec
loop
sub
es
adc
fwait
push
popa
pop
rolb
add
jb
mov
orl
pop
ret
mov
data16
cmp
mov
ficoms
mov
sbb
inc
mov
popf
xchg
xchg
or
push
push
push
push
cmpl
clc
cs
int3
mov
push
mov
outsb
stos
and
test
mov
lret
fstpl
dec
cwtl
lahf
out
adc
sbb
leave
popf
ljmp
mov
lea
cltd
mov
mov
adc
jmp
dec
jno
mov
cmp
idiv
fmuls
inc
lock
mov
addr16
and
call
sbb
pop
adc
jnp
xchg
test
les
mov
fisttpl
add
test
xor
movsb
mov
sahf
mov
loop
ljmp
lods
xor
jnp
cmp
iret
push
mov
out
cmpb
jne
xor
sbb
mov
lret
jl
aaa
arpl
mov
add
enter
rorb
test
mov
add
dec
je
or
inc
and
sub
mov
enter
mov
dec
movsb
jno
aas
jno
mov
jbe
ja
mov
stos
jmp
mov
lods
imul
push
xlat
or
xor
lock
jns
outsb
push
out
pop
test
popa
stos
xor
lea
sbb
adc
push
shll
pop
mov
das
rcll
sbb
repnz
in
jge
xor
inc
or
push
xchg
pop
mov
clc
fdivrl
stc
or
push
pop
inc
dec
and
jne
jecxz
andb
cmc
test
lods
add
popf
hlt
cmp
out
or
sub
dec
cmpsl
inc
aad
ja
sbb
add
adc
cmp
sub
das
bound
loop
mov
mov
mov
xchg
cmp
mov
xor
ret
lcall
lods
fistl
adc
jno
cs
sbb
insb
sub
adc
xor
or
push
dec
cmpsl
xchg
sbb
mov
sarb
and
lcall
insl
mov
adcl
loop
jbe
int3
cwtl
or
xor
dec
add
sub
jae
rorl
mov
sbb
ficoml
addr16
mov
imul
jnp
add
inc
cmc
mov
cmc
xor
js
hlt
or
dec
ja
imul
aaa
and
pushf
mov
repnz
outsb
frstor
xor
js
out
pop
jecxz
jge
push
mov
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
xor
insl
outsb
std
mov
push
xchg
fsubs
mov
lds
shll
sub
jnp
or
mov
sub
dec
pop
pushf
subb
mov
xchg
arpl
jne
push
insl
iret
scas
lea
popa
push
add
jmp
clc
imul
xchg
push
xchg
xchg
pusha
mov
xchg
out
pop
iret
stos
aad
rolb
je
mov
jo
and
fwait
test
pusha
clc
mul
mov
pusha
mov
or
pop
in
push
hlt
mov
dec
jge
rorl
decl
or
dec
fwait
dec
int3
pop
jmp
rcrl
push
es
cmp
mov
inc
fmull
daa
fwait
scas
cmc
pop
add
inc
mov
jl
add
pop
pop
jmp
pop
cmp
adc
ss
shr
mov
adc
mov
push
mov
add
jne
push
lahf
scas
cmpb
cmp
sub
pop
in
ljmp
inc
adc
pop
or
adc
sub
xchg
mov
xor
scas
dec
sbb
sahf
mov
xchg
adc
or
jne
mov
int3
inc
pop
clc
mov
mov
ret
mov
jp
ljmp
outsb
inc
imul
xchg
jmp
push
and
sbb
jns
xor
mov
sub
in
mov
in
cmc
xor
mov
loop
ret
sub
inc
mov
push
pop
or
xchg
xchg
xchg
aas
inc
xchg
cltd
mov
mov
cmc
push
int3
in
out
mov
jo
pop
inc
push
aas
loop
pop
dec
ret
adcl
icebp
and
call
sbbb
inc
pushf
rolb
movsb
pop
mov
or
dec
iret
lret
or
adc
jns
sub
ljmp
cmp
lods
outsl
xor
push
imul
in
lds
arpl
xchg
jle
mov
cli
mov
dec
push
movsl
enter
sarb
jae
cltd
mov
pushf
or
cs
jno
loope
scas
stos
flds
lret
pop
inc
push
push
out
ret
into
mov
int3
sahf
sub
std
repz
push
pop
out
cmp
inc
or
inc
cmpsl
in
jmp
ljmp
adc
icebp
xchg
sub
pop
iret
je
sub
aas
fisttpll
mov
test
fcmovne
data16
jp
repz
mov
lea
mov
pusha
int3
enter
xor
ja
pushf
addr16
cmpb
jge
pop
mov
sbb
pop
mov
fistpll
mov
push
dec
inc
cmp
adc
sbb
mov
out
movsb
sub
testl
or
pop
into
movb
movsl
movl
mov
mov
pop
cmpl
mov
iret
dec
dec
xor
int3
mov
dec
xlat
mov
or
aaa
pop
pop
add
inc
inc
xchg
das
shll
pop
lret
addr16
mov
add
and
sahf
ficoms
jmp
ret
ret
mov
pop
adc
xor
sub
cmp
adc
or
out
test
addr16
jge
add
lods
mov
jp
cmp
insl
inc
mov
jg
mov
insl
rol
loope
xchg
testl
xor
adc
cmp
or
imul
pop
pop
xchg
xor
dec
inc
adc
mov
and
cs
out
je
in
sbb
aad
jb
rcl
sbb
sbb
push
pop
push
aaa
std
jo
add
mov
push
popf
pop
push
jecxz
pop
cmpsl
addl
dec
ss
jg
cmp
clc
xchg
pop
xchg
decl
xor
rcll
mov
fs
loop
or
adc
loop
dec
xchg
xchg
and
cld
cmp
aas
pop
leave
mov
jl
ret
dec
hlt
sub
mov
add
mov
add
dec
repnz
pop
movsb
lock
jle
insb
ss
bound
inc
pop
mov
inc
jne
add
push
and
and
bound
xlat
mov
cmp
mov
xlat
ret
add
cwtl
sbb
jb
xor
push
xchg
scas
das
dec
pop
das
jb
push
jle
hlt
lret
shlb
xor
pushf
mov
mov
into
push
add
mov
xchg
fsts
mov
ficompl
decl
inc
movsl
push
dec
jecxz
xchg
test
outsb
sahf
and
int
mov
sbb
add
sti
mov
adc
aad
nop
ja
sbb
push
add
sub
mov
movsb
pop
fcomi
xor
ffree
outsl
lahf
xabort
mov
scas
jns
je
stos
imul
mov
repnz
hlt
jns
out
es
es
cmpl
and
jp
inc
insl
or
jns
out
sub
test
jb
shrb
enter
push
mov
sbb
ds
mov
pop
mov
cmpsl
and
and
cld
jns
mov
test
xchg
or
jmp
movb
ljmp
mov
xchg
ja
sub
in
xchg
xchg
repnz
mov
pop
mov
jmp
daa
cmp
hlt
out
mov
and
pop
loopne
xchg
scas
pop
or
jbe
test
xchg
mov
lahf
and
popf
daa
mov
cmc
xor
lods
outsl
push
push
xor
pop
and
jnp
add
xor
sbb
sbb
push
bound
cmpsb
dec
fucom
adc
sub
out
inc
jae
cs
push
sbb
cmp
cvttps2pi
aaa
lods
divl
lea
adc
or
push
stc
adc
adc
inc
jnp
lods
xchg
pop
test
inc
pop
sbb
pop
enter
or
jne
dec
jae
inc
xchg
add
nop
fisttps
pusha
daa
popa
mov
inc
xor
dec
je
add
nop
push
stc
lds
push
out
xor
xor
in
lds
sbb
inc
push
gs
data16
out
sbb
aaa
inc
mov
mov
pusha
pop
pop
out
xchg
pop
push
xor
int3
das
add
into
adc
in
lock
jne
lds
repnz
sub
jne
mov
cmpsb
fists
aas
divb
aas
cwtl
mov
imul
dec
or
jp
adc
dec
sbb
je
add
popa
mov
adc
mov
int
jge
push
inc
icebp
xorb
mov
push
sub
jl
je
sahf
mov
movsl
fcoms
lods
cmovle
mov
jns
stc
lea
sbb
mov
or
fdivl
mov
clc
cmc
hlt
add
out
int
inc
dec
cli
fcmovnu
pop
insl
add
dec
mov
or
pop
add
ljmp
sub
dec
xor
test
adc
xchg
jns
xor
sub
sbb
push
movsb
test
inc
into
test
push
data16
xor
adc
mov
adc
jno
mov
out
sbb
daa
mov
dec
adc
mov
push
ucomiss
dec
into
scas
ja
cmp
in
inc
loop
pop
push
mov
adc
nop
out
das
push
pop
sub
daa
pop
aad
repnz
jno
mov
lock
xchg
or
xor
jns
notl
loopne
jmp
xor
jp
cli
test
cwtl
sbb
fsub
sbb
inc
mov
bnd
cmc
std
pushf
outsl
jne
and
out
mov
loopne
pop
cmp
pop
mov
or
bnd
std
js
add
popa
adc
dec
dec
pop
jmp
xor
add
and
mov
test
and
sbb
xchg
jg
and
cmp
sub
fstl
push
dec
outsb
lods
mov
pushf
and
cltd
fisttps
jne
xchg
dec
gs
out
add
jbe
mov
dec
sub
add
out
push
sub
xchg
fs
loop
inc
gs
test
mov
pop
xor
push
cmp
and
jo
push
mov
sbb
mov
inc
aad
jle
sbb
mov
ficompl
sub
popa
push
adc
jle
iret
jnp
hlt
mov
aam
int
aaa
aam
push
sbb
cmpsl
push
sar
mov
lret
and
fcom
pop
ret
xchg
xor
xchg
sbb
cmp
pop
ljmp
scas
adc
emms
faddl
in
stc
or
popa
push
adc
push
jae
mov
sbb
enter
mov
xchg
fstpl
xchg
push
xchg
rcrl
mov
xchg
or
jge
mov
xor
inc
into
loop
mov
cld
sbb
jb
pop
mov
stc
mov
mov
ret
push
cmp
addr16
test
fisttps
inc
lods
xor
push
mov
out
cmc
ret
cmc
test
dec
test
or
push
inc
add
mov
cltd
arpl
jns
daa
sbb
mov
ficoml
jle
ffree
popa
and
xor
int3
or
icebp
sbb
cmp
xlat
test
mov
inc
adc
aam
icebp
and
xchg
inc
xor
jle
loope
dec
cmp
sub
enter
jmp
shlb
sbb
cs
ljmp
mov
cmp
or
lock
shlb
xchg
repz
insb
sti
lret
out
es
and
lret
mov
mov
nop
in
pop
out
daa
and
push
cmpl
lcall
xlat
and
and
xchg
repz
and
xor
jns
and
or
fwait
inc
and
ljmp
outsl
jae
cmp
pop
imulb
mov
lea
mov
cmp
lea
int3
dec
push
mov
leave
div
subb
aas
jb
sahf
aad
add
cmp
adc
adc
js
cld
jns
push
addr16
js
mov
push
sub
roll
lock
mov
pop
loop
pushf
nop
popf
or
push
arpl
aas
sub
sub
dec
or
xor
out
mov
adc
or
cmp
jmp
insb
ds
pop
or
sub
xor
ljmp
cmpsb
inc
orb
scas
dec
mov
daa
lret
mov
movsb
cmp
rcll
mov
pop
jecxz
adc
fsubr
mov
ljmp
dec
add
xorl
data16
xchg
daa
sub
in
arpl
idivl
sub
pop
xor
add
adc
add
gs
pop
loop
fs
loop
jecxz
movsl
call
mov
dec
pop
jns,pn
insl
mov
inc
push
mov
lea
sub
push
lods
push
mov
stc
add
imul
sahf
jecxz
inc
cld
outsl
fiaddl
and
push
inc
jp
in
loop
adc
sbb
xor
movsb
rclb
das
lods
or
mov
cmp
enter
mov
fsubrl
leave
jl
push
bound
inc
enter
loopne
fnstcw
loopne
inc
mov
mov
jns
jge
push
mov
push
lret
adc
inc
mov
pop
rorb
out
pushf
inc
jbe
outsb
adc
mov
ficomps
pavgb
std
sub
dec
xor
push
cmp
inc
inc
add
dec
push
fwait
movsb
xchg
int
negl
lahf
inc
and
sub
xchg
jb
push
out
mov
pushf
inc
les
push
pushl
cmp
jge
push
xchg
lahf
add
movsl
les
and
repz
addr16
xor
clc
loopne
fwait
dec
pop
jl
or
mov
jb
jae
pop
cmp
jb
add
xor
ret
xor
sbb
pop
rclb
test
push
sbb
dec
cmp
add
cwtl
mov
jl
adcl
stc
xorb
subb
pop
xchg
inc
scas
notl
arpl
mov
outsb
fwait
adc
test
inc
mov
dec
das
or
hlt
test
pop
mov
fnstcw
or
loopne
jo
mov
outsl
rcll
in
dec
loope
dec
mov
pushf
sub
scas
xor
shlb
andb
dec
mov
fldl
adc
maxps
and
les
mov
add
addr16
stos
lcall
mov
lahf
std
jnp,pt
inc
orb
xchg
scas
mov
aam
int3
shrl
and
xchg
or
in
insb
aaa
shl
fcmovnb
jecxz
mov
dec
dec
sub
cli
mov
jmpw
in
push
cmpsb
insb
in
pop
adc
dec
xor
hlt
in
in
out
dec
xorl
cld
pop
lahf
cmpsl
push
inc
and
jns
sub
ja
nop
mov
scas
push
mov
pushf
sbb
idivb
push
jno
fildll
inc
scas
add
scas
xchg
dec
or
sahf
mov
movsb
pop
xor
mov
cmp
pop
jo
cld
inc
fcomip
pop
pop
jmp
shrl
nop
cmc
add
sbb
jmp
scas
xor
xor
cmp
shl
adc
mov
in
cmpb
aaa
mov
jl
dec
cmp
jge
sub
mov
out
sbb
sub
ret
movsb
jne
cmp
rorl
fdivs
jne
push
mov
add
popa
jb
arpl
mov
mov
sub
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
sub
dec
aas
mov
rolb
pop
adc
rorl
adc
arpl
or
ret
add
outsb
cmc
fistpl
in
frstor
andb
data16
mov
inc
roll
orb
aas
test
leave
pop
jmp
push
lods
popf
in
mov
jg
jge
pusha
and
sub
mov
sar
leave
xchg
jo
inc
mov
das
icebp
andl
add
sbb
adc
or
cmpsl
xor
jl
sub
jge
mov
push
cmp
and
sub
or
xchg
inc
jle
mov
adc
sub
push
call
nop
shl
nop
popf
fbstp
stc
pop
inc
in
out
jp
outsl
daa
fsubr
dec
movsl
stos
cli
jmp
mov
inc
jp
push
ret
in
push
sbb
cmp
and
jle
idivb
xchg
lret
sbb
outsb
mov
fisttpll
in
loope
lahf
ret
jp
nop
xor
cld
xor
push
icebp
push
int
push
pop
icebp
xchg
movsl
mov
cmc
lea
addr16
inc
popa
imul
mov
jp
sub
mov
scas
pop
lods
or
in
test
mov
mov
sub
jo
dec
and
dec
arpl
push
jne
cmpsl
push
sbb
jne
fisttps
inc
push
fcmovnu
rorb
push
mov
mov
or
inc
lret
push
mov
pop
lds
pop
jbe
cmp
jae
push
push
jge
stos
cmp
lcall
sub
xchg
fwait
lret
xchg
dec
jg
lods
cmpsl
mov
dec
mov
cltd
mov
xor
jmp
xor
fldl
insl
push
mov
movsl
push
xchg
mov
and
mov
dec
ja
and
gs
dec
push
stos
ret
lcall
insl
stos
ljmp
pop
pop
jnp
leave
jge
and
xchg
jnp
sub
jne
iret
mov
and
push
inc
mov
pop
fdivr
jl
mov
mov
cltd
and
or
xor
mov
cld
sub
mov
dec
jns
or
jno
add
push
sbb
push
int
xor
pop
xlat
lahf
pop
pavgb
jnp
inc
or
mov
push
jb
aas
push
inc
popf
test
in
fimull
popf
orb
in
cli
punpckhwd
sbb
mov
mov
pusha
jb
add
cmp
mov
push
push
mov
lahf
aas
fbstp
aas
cmp
mov
mov
mov
or
mov
repz
dec
dec
pop
pop
jno
popa
or
or
call
push
jl
push
sti
cs
push
mov
arpl
jl
push
test
sahf
roll
xchg
jmp
pop
xchg
test
imul
or
sub
cmpsb
shlb
movsl
loope
cmp
push
repz
mov
inc
mov
sub
scas
pop
inc
xchg
aad
adc
fs
push
gs
and
mov
jb
sbb
dec
push
mov
stos
mov
add
outsb
sbb
and
xor
pop
rcl
and
mov
or
lret
push
inc
lock
andb
and
mov
inc
gs
mov
stc
pop
xor
xchg
nop
mov
fdivrs
mov
inc
jae
jo
cmpsb
adc
cmpsl
ljmp
mov
shlb
andb
add
mov
hlt
ja
inc
scas
jo
xchg
mov
sbb
cmp
sbb
sbb
popf
cmp
in
cmp
stos
aas
sub
int3
shlb
lods
push
cmpsl
aaa
bsf
dec
inc
push
or
cmpsb
cmp
add
fiaddl
aaa
int
lea
sub
xchg
lahf
push
jg
push
pop
add
sarb
pop
cmp
sbb
shlb
jg
pushf
lods
ja
call
stc
in
pop
jp
pop
dec
not
mov
lock
out
sar
pusha
mulb
lds
cwtl
xor
push
loopne
xchg
xchg
pop
lods
aam
out
dec
cmp
rcrl
pop
mov
leave
mov
hlt
push
aas
imul
xchg
rcll
mov
jbe
or
insb
inc
push
ds
jmp
xchg
in
sub
add
push
mov
cmp
std
mov
rcr
cmp
test
js
fistps
das
mov
jno
imul
mov
xor
and
pushf
mov
out
frstor
testl
inc
xor
xchg
mov
test
dec
mov
cltd
sbb
ret
mov
sub
ds
jae
jae
ljmp
adc
ss
loopne
and
mov
adcb
rcll
addr16
cwtl
outsl
xor
ss
es
test
iret
rcrl
push
stos
ljmp
aam
arpl
xor
lods
push
sbbb
mov
mov
rcrl
mov
xor
sbb
int3
leave
pop
ss
pop
stos
sub
inc
out
dec
out
sbb
sbbl
and
lock
rcll
nop
roll
lods
push
mov
push
in
inc
insl
aaa
sbb
loop
xchg
xor
repz
xchg
push
mov
fld1
mul
jno
xor
pop
sbb
sbb
inc
xlat
shrb
pop
imul
repnz
testl
jmp
lea
js
in
test
and
out
pusha
or
mov
leave
ja
pop
int3
sbb
scas
cwtl
push
pusha
pop
iret
ror
fsts
outsb
aam
or
push
pop
js
pop
mov
lods
rcrl
mov
pop
ja
fisubl
mov
pop
scas
mov
mov
popa
int
arpl
mov
cmp
pusha
xor
int
dec
int
pop
imul
add
test
mov
call
add
sahf
add
add
scas
push
xor
xor
lcall
mov
xchg
mov
sub
or
or
test
push
addl
into
jno
jno
int
jmp
fldcw
aas
lcall
pop
gs
adc
fstp
pop
pop
inc
pop
xor
cmp
mov
jecxz
adc
pop
pop
int3
rolb
dec
dec
ficoms
insb
rep
ret
sbb
jge
add
sub
fsubr
movsb
cmc
je
pushf
filds
lret
repz
pop
jmp
imul
in
xchg
outsl
pushw
mov
cld
add
insb
iret
lds
dec
add
lods
enter
add
ljmp
imul
scas
sbb
xor
stos
sbb
stos
adc
xchg
xor
jge
movsb
into
mov
jge
arpl
mov
out
insl
xor
inc
xchg
mov
pusha
sbb
jle
imul
xor
out
cmpsb
dec
mov
mov
mov
das
or
xor
jecxz
mov
fists
jmp
mov
sub
arpl
std
cmc
cld
adc
dec
popf
or
scas
int3
cld
sbb
call
sti
push
add
dec
fcom
imull
jo
fsubs
in
xor
call
xor
adc
mov
scas
sti
call
aas
inc
push
ss
inc
cmp
mov
mulb
test
jp
inc
insb
iret
xchg
xor
jge
call
cli
out
xchg
nop
orl
jecxz
shl
aas
jo
scas
mov
popf
iret
push
push
pop
shr
cmp
xchg
mov
or
ficoml
push
dec
out
jl
mov
cli
cltd
std
sti
mov
test
scas
sub
jmp
add
mov
pop
movsl
cmp
add
ror
adc
push
repnz
xor
mov
jno
addb
mov
sbb
out
fnstcw
jp
shrb
add
hlt
fdiv
notl
sub
stc
jl
es
dec
leave
push
jbe
shrl
lahf
test
cs
in
xchg
dec
mov
jecxz
jmp
mov
pop
js
sbb
or
or
add
movsl
add
test
daa
cld
jle
and
mov
int3
addr16
into
sbb
add
outsb
vpcomuw
iret
xor
andb
cmp
mov
mov
repz
stos
sub
cmp
cmp
ret
mov
flds
mov
in
adc
and
adcb
stc
and
adc
xor
test
movsl
jnp
sub
push
test
das
lret
jnp
sbb
mov
pop
lea
push
cmpsl
pause
xor
jle
insl
test
mov
cltd
push
into
pop
xor
cmpsb
repnz
call
orb
gs
jmp
subb
clc
shll
lret
mov
or
push
push
jae
repnz
dec
movsl
mov
inc
ret
sub
cmp
aaa
aaa
mov
sub
dec
push
push
mov
jmp
lods
enter
lods
xchg
adc
repnz
lods
and
add
es
and
data16
mulb
mov
rol
lds
or
sub
sbb
in
call
mov
addl
xor
out
sub
aam
flds
sub
push
into
inc
leave
xchg
sbb
cmp
pushf
fprem1
fsubr
xlat
sub
lds
stc
stos
stc
outsl
mov
neg
lea
mov
mov
or
call
or
inc
pop
jl
subb
mov
adc
imul
ljmp
add
jnp
cwtl
xchg
leave
pop
add
cmp
jp
test
mov
sti
push
jmp
int3
arpl
xchg
pop
mov
mov
jmp
fildl
into
dec
ljmp
mov
pusha
mov
jg
iret
mov
fwait
mov
insl
mov
jns
int
dec
addr16
xchg
lea
fsubrs
lret
mov
mov
pop
sahf
dec
cmp
and
cs
data16
sbb
jns
or
lret
xchg
mov
cmp
fdivrs
int
dec
repnz
arpl
inc
fildll
mov
mov
setne
push
adc
jne
shr
mov
aas
dec
rcrb
and
and
cmp
js
out
adc
sub
stos
sub
jmp
ss
mov
jns
push
test
cmp
test
aam
sbb
popf
cmp
jbe
push
mov
aam
or
jecxz
mov
les
ds
jge
mov
movsb
pushl
inc
sub
jg
add
mov
push
test
add
sbb
aas
in
out
mov
add
push
xor
inc
int
push
ret
pop
inc
sbb
data16
xlat
arpl
rorl
int3
sbb
add
inc
mov
adc
cmpsl
dec
outsl
mov
xor
or
andb
pcmpeqb
hlt
pop
sbb
mov
cmovge
and
or
jge
mov
mov
ja
popa
xchg
fs
pusha
add
adc
stos
shlb
mov
add
mov
addr16
xchg
xorb
push
les
outsl
sub
leave
xchg
mov
subb
cltd
repnz
dec
cmpb
out
and
mov
lcall
inc
inc
lea
jae
pop
daa
and
aas
xlat
inc
adc
xchg
push
push
pop
aad
arpl
mov
fadd
ret
sbb
or
shlb
shlb
lret
xor
insb
dec
test
push
call
add
clc
movsl
prefetch
xchg
ret
push
jecxz
jle
jnp
sbb
pop
sbb
aas
mov
fdivs
popf
jo
popa
cwtl
iret
dec
adc
mov
sub
xchg
lds
arpl
sbbb
xor
ljmp
mov
je
add
and
dec
daa
fcomps
stc
push
jle
scas
sub
xlat
rorb
push
shlb
cmp
xchg
jnp
pusha
fs
out
inc
add
mov
jmp
repz
sbb
cli
cld
rep
mov
or
fs
push
cmp
mov
xchg
loop
in
sbb
jns
and
cmp
insb
pop
xlat
adc
hlt
xchg
int
js
out
and
mov
arpl
xor
mov
punpckhwd
loopne
sbb
cmp
pop
or
icebp
and
popf
inc
cmc
push
push
mov
enter
xchg
mov
icebp
loope
mov
jns
inc
dec
mov
jp
pop
push
push
lods
pop
or
dec
jl
inc
test
xchg
mov
dec
lret
add
pushf
out
add
sub
cmpsl
sti
jno
insb
jmp
lods
test
cmp
out
testb
mov
or
jne
push
cs
mov
loopne
ds
mov
mov
pop
mov
fwait
iret
sbb
das
icebp
std
sub
lcall
cmp
inc
arpl
std
cmp
xor
pusha
inc
mov
icebp
xlat
sbb
repnz
fistps
lea
jns
shl
and
mov
mov
push
push
jp
or
cmpsl
adc
arpl
jae
faddl
pop
xchg
mov
inc
ret
mov
fstl
aas
addr16
cmp
mov
or
enter
imul
shl
mov
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
or
lcall
push
dec
sub
popf
stos
addr16
clc
mov
mov
movsl
cmpsb
outsl
gs
scas
xchg
lds
xchg
jp
testl
negl
fcmovu
fisttpll
and
int3
ret
lcall
or
mov
mov
cmc
nop
scas
xchg
rcrb
jmp
insb
push
push
mov
pop
jmp
dec
jnp
mov
out
dec
mov
sti
inc
dec
dec
sbb
mov
ja
and
pop
int
pushf
mov
lock
add
gs
out
pop
or
or
mov
pop
orb
add
scas
mov
aas
out
mov
fwait
cmp
insl
push
mov
dec
bound
pop
jbe
mov
sub
ret
or
mulb
in
movl
jb
cmp
dec
js
imul
ret
cmp
jl
pop
loop
sbb
popf
sbb
sbb
mov
call
jmp
imulb
inc
es
insb
add
inc
cmc
aam
cmpsb
mov
xchg
stos
mov
lret
and
fnstsw
or
insl
fwait
xchg
mov
mov
xor
call
xlat
dec
and
pop
and
outsl
push
mov
xchg
or
and
fwait
paddw
das
jae
mov
jp
test
aam
es
pop
xchg
mov
inc
add
aas
jp
mov
push
call
adc
daa
bnd
scas
cli
insl
xlat
js
cmp
in
arpl
fldcw
data16
push
push
pop
test
jmp
int
sub
add
sbbb
xchg
ret
aas
xchg
out
cmp
adc
push
add
inc
and
cmp
push
lret
fs
mov
inc
dec
adcl
imul
cmp
pop
mov
cmp
sahf
adc
rol
xlat
pop
cmp
cmovl
xchg
imul
shll
lods
add
push
adc
sub
jl
testb
sahf
imulb
xor
jge
loop
fistpl
sub
pop
or
movsb
bt
int3
sbb
fldenv
mov
movsb
mov
mov
hlt
hlt
test
ljmp
and
fucomi
fwait
mov
lods
int
ficoml
into
pop
inc
js
inc
xchg
push
loop
inc
enter
cwtl
jne
xor
pop
mov
push
test
rcrl
jge
xchg
cmp
jmp
xchg
push
push
dec
dec
xor
xor
inc
or
jmp
test
mov
mov
jecxz
dec
dec
aad
pop
mov
or
jo
ds
mov
pop
dec
cltd
pushf
shll
sbb
enter
jmp
cltd
and
adc
sbb
jle
int
adc
ret
dec
mov
stos
jo
stos
xchg
outsb
ss
cmc
shll
lahf
sbb
je
mov
shll
and
cmp
mov
gs
add
push
add
nop
and
hlt
adc
cmpsl
pop
inc
sub
dec
arpl
mov
stc
rcr
dec
cmp
dec
enter
lcall
aas
pop
fisubrl
scas
pop
das
add
out
cmp
xchg
pop
out
mov
in
xor
pusha
daa
add
sub
xlat
mov
mov
xor
in
and
out
das
or
sub
iret
ret
icebp
mov
arpl
adc
jae
fldt
std
push
data16
iret
inc
test
or
ret
clc
sbb
and
dec
jecxz
ret
inc
mov
jge
push
adc
sti
clc
xchg
icebp
mov
mov
and
dec
and
xchg
pop
push
adcl
and
mov
rclb
push
insl
cmpl
insl
out
and
mov
int3
and
push
mov
pop
shr
testl
xchg
xor
fsts
repz
mov
inc
jg
inc
or
mov
add
mov
out
popa
cmp
faddl
push
sbb
aaa
mov
outsl
imulb
xor
arpl
jo
push
mov
gs
mov
loope
scas
aad
pop
adc
dec
out
clc
outsb
sbb
das
lret
ss
mov
scas
mov
test
andb
push
or
filds
lods
xor
out
outsl
pop
sub
shl
dec
shl
movsb
add
dec
xchg
popa
int3
fs
xor
pop
jle
inc
and
js
cmovl
pop
insl
xor
js
push
pop
mov
xchg
scas
mov
adc
or
xchg
sbb
popa
inc
push
outsl
mov
leave
sahf
ljmp
in
pop
incl
dec
mov
xchg
and
std
and
fisubs
and
jne
pop
push
fld1
movsl
test
test
leave
mov
pop
or
xchg
pop
xor
or
mov
insb
cmp
cmpl
stos
jmp
test
xor
popf
test
pop
lahf
pusha
push
std
lds
or
pusha
fstp
sbb
pusha
std
sbb
xor
fsub
fsubl
sub
sub
test
xorl
daa
pop
into
mov
in
and
pop
cltd
int3
lret
jl
enter
cs
pop
xor
xchg
push
jecxz
scas
in
lcall
or
dec
and
fsts
fstpl
xchg
ret
pop
xor
xor
loope
aaa
inc
adc
mov
fldcw
or
popa
stos
in
add
pop
lea
andl
std
lods
ljmp
test
lret
xor
int3
hlt
mov
and
cli
push
shlb
ficompl
push
pop
jnp
cmp
dec
inc
add
ret
or
insb
es
repz
mov
mov
lret
pop
mov
mov
pop
cmp
add
movsb
and
cwtl
sbb
mov
xor
int3
cs
sub
xchg
mov
and
mov
dec
adc
xchg
cli
pop
bnd
adc
hlt
mov
sub
add
jle
add
je
cwtl
into
sbb
test
pop
dec
add
mov
mov
mov
aad
push
jecxz
cmpsl
decb
es
imul
adc
sbb
mov
movb
test
sub
out
add
shrl
mov
add
bnd
xor
adc
jle
adc
sahf
stos
insl
push
aas
int
inc
cmc
cmp
inc
and
push
inc
js
shrb
push
mov
sbb
cs
ljmp
sub
adc
sbb
into
adc
push
mov
cmp
fcomps
xchg
lock
idivl
popa
cwtl
jge
dec
push
repz
push
push
ret
leave
imul
js
add
movsb
ret
lret
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
jbe
cmp
enter
xchg
push
xchg
subb
xor
jl
popa
shrb
mov
movsl
incb
or
and
hlt
imul
cli
icebp
mov
push
mov
add
iret
test
js
iret
xchg
lret
xor
enter
mov
mov
jmp
xchg
or
ss
cmpsb
inc
mov
out
mov
call
stos
repnz
gs
adc
sarl
jp
sbb
imul
ret
inc
dec
sarl
rclw
xor
xchg
lods
stos
cmp
add
mov
jbe
mov
and
jmp
pop
sbb
push
idivb
push
imul
adc
mov
fsubrs
fistpll
gs
xchg
loop
and
adc
dec
mov
lret
sbb
fildl
js
std
xchg
add
push
sarl
mov
push
andl
dec
pop
mov
dec
test
sbb
jnp
push
push
leave
sbb
jg
xlat
mov
or
and
cmp
rclb
fimuls
wbinvd
inc
mov
jmp
jae
mov
mov
lds
dec
mov
jmp
cmpsb
loop
into
and
dec
dec
add
movsl
jae
adc
inc
mov
int3
mov
mov
adcl
jo
dec
pop
jle
int3
dec
lcall
popf
jl
adc
xchg
out
push
push
int3
rcll
in
jnp
pop
stos
shll
std
notb
mov
ret
mov
loope
sbb
incb
xlat
jnp
imul
sub
lret
aas
rcrb
cmpsb
or
clc
in
cmp
sbb
das
xchg
sti
dec
sub
inc
inc
in
mov
loopne
loope
mov
or
adc
xor
pop
mov
adc
sub
lods
popf
cmp
enter
sub
sub
pushf
sahf
jle
xor
cmp
scas
stc
pop
push
mov
js
loope
dec
mov
push
inc
pop
stc
jns
xchg
stos
cmp
fwait
stc
or
pop
mov
testl
jle
sbb
aad
or
lret
ret
fwait
inc
das
fimull
popa
out
popa
lahf
xor
test
dec
out
sub
xchg
jbe
jle
mov
and
lock
fcoml
negb
pop
aaa
dec
sbb
loope
hlt
push
push
pop
mov
cmp
loopne
loope
stos
cwtl
pop
and
jbe
sub
subl
test
sbb
jne
add
sub
in
jecxz
and
movsl
fildll
sbb
xchg
cmpsl
sub
inc
mov
mov
xchg
js
or
shlb
aas
loop
adc
jnp
cmp
into
mov
jmp
out
adc
nop
lret
sbb
dec
mov
rcrl
mov
jp
xor
out
mov
sbb
ret
mov
lea
repz
adc
push
adc
lea
ljmp
mov
adcl
inc
fcmove
jae
xchg
push
cmp
pop
cmp
sbbl
xor
pop
or
je
mov
ss
add
fists
mov
and
in
pop
and
push
lret
vmovss
aaa
sub
jmp
and
pop
xor
inc
imul
fs
pop
and
push
mov
call
jno
outsb
pop
mov
loop
mov
push
cs
mov
stos
in
lods
cmp
lds
rolb
call
sub
pop
insb
call
inc
fbld
push
mov
je
xchg
mov
popl
lods
cmp
ds
jp
leave
pop
xor
cld
lods
xchg
repnz
sbb
int3
test
stos
lea
mov
dec
test
mov
fcmovbe
mov
sahf
xchg
jns
sbb
cmp
movb
push
pop
xchg
adc
shlb
and
fwait
lock
pop
cmp
mov
or
push
or
push
jnp
pop
repnz
leave
cli
jne
jo
stc
scas
add
push
cmp
and
ficompl
push
or
cld
mov
les
adcb
int3
lea
in
mov
fsubrs
roll
fidivs
add
gs
mov
xlat
mov
mov
nop
mov
jns
mov
sti
dec
push
ds
cmp
inc
xor
and
inc
lahf
loop
mov
inc
sub
or
adc
dec
inc
add
test
xor
adc
lock
test
imul
push
dec
test
in
shr
outsb
cmp
push
push
add
scas
ds
mov
out
lods
push
fiadds
nop
cmp
loopne
scas
add
jge
fwait
ljmp
mov
pop
xor
movsb
xorl
rcl
sub
cld
scas
enter
shlb
mov
adc
int3
pop
sub
mov
stos
out
in
push
loop
arpl
and
push
in
fadd
push
add
adc
pusha
push
and
inc
in
xchg
out
cs
jmp
mov
dec
cmp
mov
aas
shrb
popf
adc
jne
enter
ret
sbb
jae
decl
lds
fdivs
and
shr
sbb
imulb
mov
add
xor
sub
sub
imul
in
xchg
adc
jp
fs
push
popa
inc
add
es
lret
xor
cltd
inc
mov
adc
dec
jl
push
add
mov
xor
fwait
cmpsb
mov
les
pop
clc
mov
push
add
inc
pop
dec
ret
fs
cmc
cmp
jge
imul
stos
stc
mov
xlat
mov
subl
aad
jo
ret
or
cmp
push
jge
bound
or
test
sub
xlat
xchg
jo
mov
into
and
in
sahf
jge
shl
ja
push
or
jne
xor
in
or
orl
fldcw
and
add
stos
push
push
xchg
std
test
pop
imul
imul
fistl
mov
or
daa
pop
xchg
pop
push
dec
outsl
push
rorb
inc
ss
mov
inc
lock
lahf
sti
shll
mov
adc
lds
cmp
jbe
fdivs
fnstsw
mov
cmp
iret
push
lock
popf
iret
cltd
fnstcw
jp
testl
pop
test
fisttps
pop
xor
icebp
cltd
imul
mov
iret
js
pop
xchg
xchg
push
cltd
fistps
loope
push
push
outsl
lock
pop
mov
mov
mov
popf
divb
rcl
push
stos
and
cmpl
sbb
or
mov
pop
push
sar
mov
push
mov
ss
popf
cmc
es
inc
lods
outsb
sti
bnd
adc
inc
push
hlt
sbb
das
mov
mov
fmulp
xchg
lret
inc
push
addr16
shr
jmp
and
add
loop
es
pop
js
sub
xchg
push
popa
cmp
pop
push
mov
jmp
push
mov
and
scas
mov
fdivs
in
add
insl
divl
lods
pop
mov
sbb
fildl
xor
dec
add
rclb
jp
add
push
fmulp
fcomip
testl
sbb
stos
popf
xchg
jmp
mov
ja
sahf
push
mov
aaa
xchg
stc
testl
and
imul
mov
je
pop
mov
inc
mov
dec
sub
xchg
test
and
xchg
mov
cs
icebp
inc
adc
es
orb
mov
inc
stos
sub
jne
push
sub
add
xor
mov
shrb
fsubrs
mov
push
pop
add
sub
add
mov
pop
sbb
add
mov
xchg
inc
pop
mov
aas
or
das
gs
ret
and
xchg
add
lahf
add
pop
sub
inc
jne
bound
dec
ja
mov
sub
out
and
ds
xchg
jb
stc
scas
sub
fidivrl
push
xor
popf
push
sbb
pop
mov
loope
lret
rolb
stos
popf
lods
pop
mov
sarl
scas
adc
add
or
sbb
or
sub
xlat
out
jbe
sbb
or
jge
enter
mov
into
inc
inc
mov
lret
les
cmp
movsb
mov
pop
add
icebp
call
dec
out
xor
inc
jmp
jb
loopne
cld
sarl
in
sahf
icebp
jo
lahf
das
cmp
rorl
push
sub
mov
dec
pop
pop
jae
xor
call
shll
jns
movsl
inc
and
and
cmp
out
cmpsl
or
lahf
mov
adc
push
dec
pminub
mov
mov
mov
ficomps
jmp
std
test
push
out
mov
sbb
add
mov
loopne
pop
push
add
jne
sti
mov
aas
cwtl
into
and
push
into
fistps
add
andl
data16
push
test
mov
shll
int3
xor
ficoms
das
into
insl
jae
scas
test
inc
jb
mov
enter
pusha
and
sahf
inc
pop
cmp
leave
add
insl
mov
and
pop
movsl
sbb
jecxz
xor
push
dec
mov
push
std
add
xchg
add
inc
sub
divl
jle
shlb
rolb
mov
or
in
xorb
mov
push
fcmovu
mov
sti
push
pop
ficomps
jbe
or
xor
out
inc
aaa
mov
or
push
cmp
insb
cli
sub
mov
push
and
pop
lock
pop
daa
mov
outsl
ret
add
ss
lret
and
dec
jp
fsubl
into
sbbl
pop
cltd
cmp
stos
pop
push
sub
dec
sub
mov
add
loopne
out
or
lcall
or
lahf
fnstenv
fildl
mov
iret
stos
ja
movsl
mov
pop
cmp
fwait
adcb
shll
std
and
stos
sbb
fisubl
lock
std
push
dec
pusha
adc
leave
dec
xor
xchg
dec
add
and
mov
gs
mov
xor
addr16
jne
xchg
push
jmp
jnp
das
xchg
scas
addr16
inc
int
cwtl
inc
fidivrl
cld
dec
and
push
mov
aam
outsb
and
mov
mov
out
adc
fldenv
fistpll
pop
sbb
push
stos
pop
xchg
xor
clc
mov
and
cmp
xchg
stc
mov
daa
xor
and
push
xor
sub
fnsave
push
mov
adc
insb
sub
dec
push
sbb
jle
mov
jno
pusha
push
cmc
fwait
movsl
shll
lods
lods
loop
dec
leave
test
push
in
and
cwtl
mov
adc
rol
pushf
mov
sbb
js
cld
lret
xchg
xor
movsb
stc
stos
shll
jno
in
push
mov
test
rol
add
es
ja
rcl
dec
cmp
cltd
and
movsb
push
push
imul
rorb
jae
call
es
jb
sub
mov
pop
adcl
fbstp
mov
gs
hlt
out
jp
cmp
jl
scas
mov
ret
push
leave
xchg
mov
xor
imul
fstps
mov
sub
push
sub
push
mov
stos
push
mov
pop
jb
add
and
sbb
jne
push
pop
iret
xor
dec
pop
jge
mov
lret
push
or
dec
shlb
out
xchg
or
and
push
cmc
cmp
rol
sub
std
call
das
int3
or
sub
mov
add
add
fsubrs
or
test
sub
xchg
dec
outsb
in
aaa
lret
jno
xchg
pop
dec
lods
sbb
jnp
and
and
push
dec
fcmovu
testl
movsb
mov
ja
lret
enter
xchg
ds
fwait
sub
push
test
xlat
xchg
lcall
xchg
cmpsb
cwtl
and
pusha
dec
sub
pop
shlb
aas
je
sbb
shlb
int
sub
pop
push
mov
mov
xor
dec
inc
sub
xor
imul
mov
cwtl
fmull
mov
lods
adc
fsub
divb
orl
and
pop
dec
sub
test
mov
sbb
enter
loop
dec
xchg
sub
jmp
mov
cmp
push
push
test
iret
sbb
outsl
or
and
addr16
push
roll
mov
push
test
xor
mov
inc
fwait
into
fcoml
addr16
cmp
dec
aam
mov
jmp
adc
and
loopew
scas
into
subb
adc
fists
and
xor
and
loop
adc
pop
xchg
xchg
pop
stos
adc
scas
insb
insl
push
lea
push
sub
fidivl
xchg
cmp
jne
icebp
inc
adcl
adc
jbe
mov
popa
in
adc
out
cltd
ss
stc
adc
add
jg
inc
push
add
sbb
jae
xchg
subb
or
jmp
jp
push
pop
push
mov
imulb
adc
sbb
xor
test
jnp
in
movsl
sbb
dec
lock
imul
pusha
shrb
aaa
mov
mov
imull
push
sbb
enter
jp
adc
mov
mov
mov
ficoms
jg
mov
xchg
inc
sub
orb
popa
stos
test
push
or
mov
or
jmp
aam
mov
xor
push
stos
lret
es
xlat
push
cpuid
in
push
sub
out
stos
adc
push
hlt
shr
add
or
insl
jp
jg
data16
loope
jle
dec
jecxz
and
dec
mov
shll
shr
sbb
iret
inc
jl
xor
mov
nop
pop
outsl
pop
dec
mov
push
jg
jg
je
jne
cmp
sbb
push
bound
or
push
adc
fadd
dec
mov
aam
mov
lcall
popa
dec
inc
es
and
and
xorl
test
dec
add
xor
push
ljmp
shl
int3
and
js
cmpsb
dec
mov
fdivs
and
data16
repnz
inc
sub
enter
lret
pop
test
repz
mov
fisttps
xchg
and
cmpsb
test
test
daa
pop
pop
sbb
jb
jnp
call
repz
shlb
addb
pop
xor
fwait
hlt
add
cmpsb
add
nop
shrl
int
xor
push
mov
shlb
cmp
sub
sbb
mov
repnz
sbb
ljmp
or
add
xor
in
addr16
lahf
loopne
sub
cmc
push
or
push
lods
jae
adc
adc
scas
pop
adc
into
loopne
pop
or
std
repz
xchg
stos
scas
lods
pop
popf
inc
pop
lret
mov
mov
adc
idivl
mov
inc
cltd
outsl
fidivs
pop
and
in
mov
pop
push
sub
les
xchg
mov
je
out
icebp
fs
js
ja
stc
scas
mov
and
and
sti
popf
insb
repz
into
mov
inc
test
daa
ss
fsub
loopne
mov
aad
xor
popf
mov
xlat
stos
xchg
lret
mov
outsb
cmp
cmpsb
jno
xchg
aaa
test
movsl
mov
mov
mov
pop
fiadds
fldenv
scas
xor
aas
test
stos
lret
mov
sub
test
pop
mov
sbb
loopne
imul
cmp
lea
cwtl
cli
pop
in
mov
pop
jne
jmp
jae
sarl
in
scas
leave
ret
pop
repz
jnp
push
sti
das
fisubl
std
outsb
jb
add
push
loopne
pop
fldt
jl
sti
jecxz
jg
out
shlb
call
adc
or
sbb
sbb
jne
jb
jmp
mov
or
es
sub
inc
sahf
aaa
loopne
dec
ja
imul
ret
stos
pop
xor
cwtl
push
out
scas
test
cmp
orw
repz
imul
push
lret
loopne
loopne
mov
lods
mov
add
cs
or
inc
adc
sti
ss
out
sahf
mov
pop
popf
mov
mov
stos
addl
loope
ret
push
ret
dec
adc
lahf
and
lcall
pop
mov
frstor
cmp
push
nop
mov
add
gs
dec
jl
sbbb
push
dec
mov
xor
xchg
dec
mov
inc
pop
aaa
xchg
sub
and
and
sahf
push
mov
jp
jbe
cmp
icebp
shlb
cmc
xor
js
jecxz
scas
ds
push
jne
mov
lret
call
jl
sub
xlat
bound
daa
sub
lret
dec
mov
inc
leave
sbb
jecxz
movsl
test
daa
test
pop
dec
cmp
push
dec
xor
push
stc
adc
jae
sub
sub
cltd
rol
jp
mov
mov
out
mov
cli
rcll
dec
into
jge
leave
adc
insl
dec
jb
insb
dec
sub
into
cli
mov
inc
adc
push
arpl
test
adc
mov
jecxz
add
mov
dec
mov
jle
jns
sbb
mov
in
testb
xchg
inc
add
mov
sahf
mov
jge,pn
cld
and
sar
rorb
inc
adc
inc
or
and
push
add
xor
push
scas
mov
leave
sbb
int3
dec
repz
dec
popa
jo
cmp
lret
jb
jbe
shll
fmulp
in
js
inc
or
cmp
mov
jne
adc
rorb
xorb
sbb
cwtl
sub
aam
xchg
sub
mov
test
mov
mov
mov
into
xor
pushf
cmpl
filds
pcmpgtb
aaa
xor
add
arpl
xchg
inc
or
out
arpl
pop
jne
xchg
int3
inc
pusha
lods
repnz
lea
jle
popf
dec
mov
fwait
insl
inc
add
mov
xor
lret
mov
cmp
push
pop
sub
rcrb
mov
adc
mov
call
and
xchg
fcmovbe
mov
mov
ds
jb
sbb
out
add
test
lds
sarb
fisubrl
xor
fldt
mov
sbb
dec
int
js
add
nop
outsb
rclb
andl
les
pop
iret
or
fistpl
or
xchg
cmpsb
imul
mov
cmpsb
and
sbb
jl
jno
mov
xor
scas
rep
test
xchg
loopne
in
mov
mov
shll
loope
sarl
dec
mov
cld
xchg
mov
ficoms
loope
stos
enter
adc
outsl
inc
inc
sbb
stos
xor
push
sarb
sbb
fidivrl
mov
leave
pop
ror
outsl
imul
push
inc
movsb
and
data16
into
xchg
sub
sub
rcll
mov
mov
push
cli
xorl
repz
and
cmp
pop
clc
inc
pop
roll
fstps
inc
cmp
mov
dec
mov
outsl
and
mov
scas
mov
incl
push
movsl
daa
xor
pop
push
add
mov
adc
popf
adc
inc
fnsave
add
fwait
shl
jnp
xor
xor
subb
mov
xchg
push
xchg
add
ljmp
int3
fiaddl
ljmp
mov
xchg
bound
inc
arpl
lds
cld
xchg
dec
sub
aad
fisttps
dec
pushf
jno
mov
cld
inc
jns
jecxz
dec
sub
sbb
in
lret
mov
aam
jno
add
daa
or
andl
add
enter
roll
inc
fistpll
pusha
lret
and
cmp
insl
cmp
dec
imul
pop
dec
jg
push
add
mov
cmpsl
sbb
fnstenv
or
fidivrs
cs
aad
dec
add
add
or
pop
inc
or
and
jo
adc
xchg
mov
sub
and
not
stos
sbb
imull
cltd
mov
stos
or
add
arpl
dec
cli
fwait
enter
test
enter
sbb
pop
push
leave
dec
mov
or
mov
push
call
cmp
cmpsb
mov
inc
pop
and
sub
dec
aad
mov
sub
adc
repz
pop
push
loopne
sub
xchg
mov
clc
fmul
je
lahf
add
mov
jg
movsl
dec
inc
ljmp
in
shrl
jnp
push
ficoms
push
aas
add
xchg
into
mov
ret
jcxz
or
cmp
xor
sahf
cli
movsb
not
mov
add
xlat
xor
inc
mov
xor
insl
inc
mov
add
jge
pop
seta
xor
into
daa
xor
popf
fcoml
cmp
aam
or
push
outsb
pop
jo
sub
push
test
push
in
cwtl
movsl
mov
mov
clc
and
or
cmp
pop
iret
xchg
sti
adc
pop
les
lret
repnz
aas
inc
xor
sahf
mov
dec
xchg
aam
push
in
and
je
lret
mov
repnz
xor
cmp
cs
sub
xor
fs
ljmp
jmp
and
cmc
gs
sti
and
jge
icebp
pop
adc
push
in
xor
inc
std
aaa
xor
imul
subl
pop
pop
mov
pop
fs
mov
imul
inc
ljmp
iret
jno
fcmove
popa
call
icebp
dec
test
inc
mov
in
jae
int
mov
xchg
mov
sahf
mov
jne
je
sti
stos
subl
daa
push
mov
lcall
aad
daa
movsb
fwait
pusha
popf
inc
pop
xchg
aaa
sbb
lock
mov
fdivs
std
sub
dec
fldcw
aad
mov
mov
fmuls
mov
cmp
mov
addr16
shr
cmp
sarl
mov
lea
cmp
loope
ss
lret
dec
out
or
andb
jge
xchg
shrb
lcall
push
cmpsb
fmulp
jns
stos
mov
loope
and
out
hlt
clc
mov
stos
out
scas
jmp
repz
pop
mov
dec
bound
ss
loopne
mov
jb
mov
pop
cmpb
mov
int3
mov
hlt
xchg
xchg
mov
das
movsb
js
inc
sub
rolb
imul
sarl
jae
jecxz
fcompl
dec
je
push
fwait
inc
mov
xor
scas
and
mov
into
sub
xor
pop
jnp
and
or
mul
xchg
sahf
pop
es
shr
xchg
ficompl
lods
lcall
js
hlt
jns
inc
jmp
push
std
cmpsl
and
stc
aad
loopne
sarl
sbb
hlt
sbb
xor
cmp
arpl
imul
cmp
ret
cmp
or
lret
rolb
mov
testl
ja
loope
or
lods
dec
ret
fdivs
mov
sub
sahf
jns
inc
out
test
es
movsb
mov
cmpsl
push
mov
lret
mov
sbb
jbe
sub
frstor
in
pop
pushf
jne
out
orb
mov
jb
sti
sbb
aas
popf
push
lock
lcall
int
sahf
cld
ljmp
test
dec
sbb
jg
mov
or
cmpsl
pop
mov
movsb
movsl
mov
sqrtps
jb
arpl
sbb
push
inc
enter
dec
jne
addr16
cli
lret
pop
sahf
popl
pop
jle
mov
jl
cwtl
mov
fsubl
jno
lods
dec
jne
ljmp
icebp
mov
sti
cli
jge
sbb
xchg
loop
mov
dec
stos
or
adcb
xor
sub
orl
jnp
sbb
in
ljmp
add
add
and
jne
and
fidivs
rolb
into
cmp
aaa
jae
sub
loope
fsubl
enter
out
xchg
jne
or
xchg
mov
cltd
sbb
pop
jmp
icebp
jmp
jmp
fistl
xchg
test
popa
mov
insb
mov
push
inc
popa
xor
js
adc
popa
scas
test
inc
pop
icebp
and
imul
sub
das
mov
repz
shrl
pop
add
rcr
inc
or
sub
jns
mov
aam
push
lea
add
out
aam
test
mov
aaa
jp
xor
push
xor
ljmp
and
cmp
int3
push
les
mov
push
call
adc
mov
or
repnz
sub
jmp
push
push
push
add
pop
sbb
cmpsl
xchg
mov
sub
mov
sbb
cmpsb
dec
mov
mov
adc
jno
aam
cwtl
inc
mov
xchg
mov
int
clc
dec
add
out
cld
cmpsb
mov
xchg
lods
mov
mov
xor
cmp
fbstp
das
bound
fimull
mov
jle
daa
cmp
xor
xchg
popf
push
xchg
sahf
mov
scas
mov
gs
pusha
lahf
lock
mov
out
adc
push
mov
or
cmp
sbb
fucomp
cmp
clc
xor
push
fisubl
ss
pop
adc
mov
dec
in
movsb
iret
cmp
incb
cmp
insb
test
leave
movsb
daa
js
lock
divl
jo
xchg
lret
out
mov
inc
imulb
fisttps
and
mov
aam
jle
fildll
mov
loopne
adc
dec
out
cmc
mov
fisubl
jo
in
rorb
push
push
jmp
inc
cwtl
inc
mov
shr
bound
addr16
sub
xchg
mov
mov
xor
mov
push
inc
dec
dec
jp
xor
xchg
pop
lcall
pop
dec
sbb
fistl
cmpsb
addr16
sbb
stc
leave
sub
jo
jns
ss
mov
insb
aas
sub
cmpsb
mov
ds
or
mov
leave
int3
or
mov
mov
jp
cwtl
out
mov
and
xchg
mov
pop
push
mov
push
adc
xchg
inc
push
out
test
gs
jp
js
daa
xchg
inc
fnstcw
cli
push
cli
sub
xor
scas
bnd
mov
movsw
inc
lds
mov
sbb
push
sarl
mov
rolb
sub
je
in
xor
mov
jbe
inc
aad
xchg
daa
adc
into
push
jns
xor
rcr
cli
insl
shrb
movsb
out
jbe
in
push
in
push
push
mov
lods
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
aam
outsl
pop
pop
sub
fnstcw
add
loopne
push
jle
test
jecxz
xchg
or
xor
frstor
test
inc
sbb
ret
or
rorb
mov
mov
hlt
and
cmp
push
jno
and
adc
adc
addb
cwtl
lret
aam
call
imul
push
dec
mov
test
in
dec
lods
xor
pusha
lret
jecxz
mov
loopne
mov
and
and
call
inc
ljmp
and
sub
cmpsl
movsl
repz
and
cld
mov
lods
mov
sahf
cli
je
pop
popf
test
mov
dec
aaa
xlat
inc
mov
mov
inc
out
pop
push
jne
push
or
xchg
insb
testl
add
rcll
jbe
sbb
jecxz
inc
mov
stos
ret
xchg
dec
dec
xchg
xchg
push
dec
mull
xchg
pop
add
inc
push
fisubrl
dec
jl
sub
pusha
dec
aaa
mov
sbb
or
popl
mov
sub
movl
sub
push
xor
dec
sbb
pushw
pop
sbb
scas
inc
mov
sbb
icebp
pop
inc
out
aam
push
mov
jl
mov
lcall
pop
into
jmp
adc
dec
lds
jg
jne
dec
loop
stos
pop
xlat
in
cld
cmc
cmp
add
xchg
jae
pop
ss
xor
sahf
out
jmp
es
fwait
adc
sarb
sbb
rcl
enter
mov
imul
sbb
cmp
add
andl
add
or
mov
jmp
xchg
ds
xor
or
xor
dec
pop
ret
iret
ljmp
mov
xchg
mov
sbb
xchg
mov
mov
clc
mov
cwtl
jl
bound
mov
add
ret
sbb
ret
add
aas
and
imul
mov
lods
push
lcall
shrb
xchg
xor
in
test
loopne
lret
int3
leave
mov
mov
popf
xlat
aaa
scas
jge
sub
adc
pop
sub
push
sbb
xor
xor
mov
pop
xlat
fdivl
cmpsb
push
rcrl
movsb
sbb
sub
xorl
add
in
mull
aad
pop
data16
outsb
pop
nop
pop
push
sub
adcb
loopne
fwait
pop
ret
rcrl
sbb
xchg
adc
or
fldcw
sub
lods
push
sub
insl
pop
pop
push
add
cmp
shll
cmpsl
jecxz
dec
jmp
sbb
out
lods
out
jns
movsb
decb
hlt
leave
xchg
stc
sahf
sarb
pop
insl
inc
and
ja
fidivrl
rorl
jno
jb
sub
adc
xchg
fidivs
ja
int3
xor
adc
add
mov
dec
mov
cmp
nop
push
mov
jge
mov
mov
lret
mov
jge
test
mov
jnp
pop
fs
clc
cmp
fists
shll
aad
inc
in
sbb
jge
ret
mov
jbe
jb
xor
lods
pop
fsubp
leave
cmp
arpl
outsb
fdiv
adc
sub
outsl
in
xor
movsl
jo
shrl
inc
addb
test
mov
or
mov
or
sub
daa
dec
push
xor
fdivs
in
repz
adc
es
mov
ror
inc
dec
ja
test
into
das
mov
lret
and
arpl
imul
add
xchg
jp
and
lahf
xchg
dec
out
mov
add
pop
mov
rcr
ret
add
jno
xlat
cmc
scas
repnz
push
stos
mov
pop
push
cmp
mov
pop
cmpsl
pop
outsl
lret
aad
sbb
or
pop
cmp
mov
xchg
and
pusha
mov
push
fst
mov
das
fldl
andl
mov
jnp
iret
ficoms
shrb
sbb
xchg
ja
in
sbb
movsl
dec
sti
cmc
loopne
push
pop
int3
push
inc
dec
adc
push
pop
or
xchg
jge
cmc
fs
popf
adc
pop
dec
aad
jns
xor
std
mov
adc
or
mov
pushf
ja
mov
add
cs
add
push
mov
or
or
adc
dec
mov
pop
mov
shlb
outsl
pop
fbld
popa
jmp
movsl
shlb
add
int
xchg
test
xchg
incb
pop
shrl
xchg
push
pop
xchg
ret
xchg
fdivp
jo
aas
pop
les
shl
xchg
add
orl
push
or
push
ljmp
adc
out
mov
pusha
bound
pusha
inc
xchg
cmp
mov
and
jecxz
adc
add
dec
lahf
lods
cmp
add
lods
mov
and
cmp
aaa
xor
cltd
hlt
mov
mov
pop
push
std
jmp
pop
xor
std
aas
fsubrl
push
imul
adcl
push
and
mov
push
sub
cmp
xchg
sbbb
mov
xchg
push
fucomip
test
movsb
or
sbb
sahf
xor
lea
mov
xchg
add
call
adc
lods
cmp
xchg
dec
into
in
or
add
cmc
outsl
mov
ret
mov
or
aad
loope
movsl
pop
out
mov
cmp
adc
ds
out
iret
and
push
cmp
ss
add
inc
push
fldcw
ja
or
call
ss
push
xchg
insl
sbbb
add
or
sbb
sbb
cmpsl
and
stc
sahf
test
test
and
and
push
jmp
cmp
pop
xor
sub
jno
fucomip
movsl
stc
push
mov
jl
sbb
into
out
push
mov
ss
test
dec
int3
dec
aaa
xchg
xchg
mov
mov
scas
loopne
jle
cmc
lret
pop
or
mov
loopne
push
out
mov
xchg
lds
enter
mov
and
mov
andl
sbb
mov
sub
mov
stos
shrl
call
xchg
push
and
iret
add
xor
shrl
xchg
inc
iret
adc
cmp
out
xor
inc
dec
jp
mov
pop
gs
in
pop
jg
adcb
add
popf
xor
sub
jge
and
std
cs
sbb
call
cwtl
roll
scas
sti
cmp
sub
push
mov
or
movsb
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
sbb
jle
jg
adc
xchg
popa
pop
xor
or
ficomps
outsb
sub
pop
js
and
cltd
fldln2
out
or
fwait
jg
insb
test
cs
inc
inc
fs
addr16
js
mov
in
pop
dec
fsubr
inc
mov
test
mov
cmp
sbb
mov
push
adc
and
hlt
rcll
inc
pop
out
roll
in
or
std
mov
mov
jb
inc
in
and
nop
and
sub
cmp
repnz
or
daa
inc
repnz
adc
roll
cmpsb
xlat
imul
jno
or
jg
cmpsl
push
xchg
add
popa
xchg
arpl
xchg
mov
scas
sbb
lock
fldl
mov
mov
or
mov
psrld
push
pushf
or
nop
xor
or
cmp
inc
mov
mov
lret
imul
addb
dec
jae
jbe
cmp
sbbb
mov
mov
push
ret
scas
xchg
push
icebp
test
fsubrl
mov
repnz
shll
rcrb
mov
fcomps
lock
xchg
cmpsl
mul
addb
fdivs
jne
jne
cld
jb
js
sahf
mov
sub
es
mov
mov
mov
aad
lahf
repz
jne
xor
pop
int3
sti
sub
push
outsl
hlt
or
mov
nop
inc
adc
pop
xchg
enter
clc
adc
pusha
and
xor
mov
stos
gs
push
mov
mov
lds
mov
orl
aad
pop
lods
incb
inc
pop
hlt
cmp
decl
push
adc
push
push
or
mov
sbb
ret
jae
push
add
pop
xor
add
rol
push
nop
es
xor
adc
push
sub
inc
insb
mov
and
mov
sahf
pop
pop
sub
cmpsb
jne
in
in
xchg
mov
out
ss
adc
mov
xchg
hlt
cmpsb
or
into
jbe
jnp
iret
jae
out
ret
xchg
mov
in
mov
mov
xchg
daa
and
xchg
jecxz
loop
jg
rol
pop
jne
aam
add
jns
insb
cmc
popf
pop
mov
cs
adc
mov
dec
popa
dec
xlat
dec
xor
mov
add
sarl
fbld
xor
mov
std
inc
movsl
sub
sbb
xor
inc
cmp
add
int
sbb
mov
mov
cwtl
bound
mov
jg
push
enter
outsl
fmuls
pop
cmc
or
sbb
xchg
lods
fildll
mov
daa
out
ret
add
sti
jbe
sbb
xor
mov
in
cmp
or
adc
jecxz
and
dec
pop
loopne
fcmovne
and
xlat
out
cltd
push
outsb
and
lock
mov
pop
push
pop
pop
xchg
jmp
mov
in
inc
imul
sbb
mov
fisttpll
sub
stc
vpcmpeqd
and
mov
dec
cmp
jne
jmp
ror
mov
iret
insl
inc
js
sbb
pusha
rcll
rcrb
ss
dec
lods
mov
mov
lcall
sbb
subl
pop
add
xor
insb
stc
adcl
xor
imul
insb
dec
xchg
mov
in
add
shll
xchg
int3
loope
push
cltd
hlt
pop
lock
xor
inc
mov
sbb
sbb
push
mov
xor
sub
scas
add
inc
sbb
les
pop
dec
lods
int3
jl
jp
cwtl
mov
mov
out
std
loope
xchg
push
or
in
dec
sub
cmp
lret
jb
leave
fmull
loop
repz
push
pop
repz
int
das
mov
jle
pop
enter
jg
push
or
push
sbb
cmpsl
mov
mov
cmp
imul
psubusw
xchg
add
mov
cwtl
fildll
cmp
aam
cmpb
cwtl
fdivr
inc
and
lcall
adc
add
das
sahf
stc
mov
or
push
mov
pop
andl
cmp
jmp
adc
pop
or
mov
push
jecxz
sti
nop
push
mov
inc
or
into
mov
and
xlat
xor
jp
ljmp
cmp
mov
mov
fnstenv
and
cmc
adc
sub
imul
dec
arpl
mov
lds
hlt
and
scas
sub
mov
scas
scas
popf
fcompl
sbb
jmp
dec
xor
jmp
rclb
adcb
out
test
scas
loopne
mov
or
cmp
push
das
subb
jecxz
xchg
shl
rcrb
daa
in
das
jno
outsl
mov
std
or
mov
out
inc
mov
pop
jle
call
movsl
sbb
sbbb
repnz
jle
inc
lahf
jbe
mov
dec
dec
sbb
jle
pop
into
fsubs
mov
outsb
dec
test
dec
pop
loope
ficomps
lds
nop
adc
mov
test
repz
mov
call
aam
rcrb
jp
push
lcall
sbbb
push
or
add
mov
leave
int
jge
aad
aas
lds
push
in
faddl
jg
pop
out
scas
or
stos
or
loope
mov
shrb
imul
jle
sub
lret
icebp
xchg
in
mov
shlb
adc
jmp
cmpsl
push
add
or
mov
repnz
ljmp
shll
and
movsb
js
cwtl
push
imul
dec
jg
data16
push
or
cli
and
inc
shlb
lea
imul
loop
mov
jne
cmp
cli
cli
cld
mov
push
hlt
adc
cltd
dec
sub
xor
mov
cwtl
aad
cmp
stos
add
aad
in
xchg
xchg
add
fisttpl
ja
test
adc
xchg
jo
mov
mov
cmp
shll
rol
lds
jae
inc
inc
adc
or
fcmovbe
lods
int3
jbe
adc
test
dec
in
xchg
dec
pop
jge
pusha
sbb
jne
push
mov
push
mov
cmp
inc
imul
sub
aas
addl
out
iret
rcll
gs
aam
std
lods
inc
pavgb
mov
push
mov
in
insb
notb
outsb
cmp
and
xchg
inc
hlt
push
cli
sub
mov
xchg
test
imul
cmp
incb
adc
addb
xchg
fcoml
xlat
fcompl
pop
xchg
adc
fsubrs
add
ja
clc
push
in
adc
ret
mov
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
adc
xchg
and
jnp
mov
mov
jae
mov
mov
cmp
inc
mov
mov
xchg
cmp
and
fiaddl
shlb
mov
cmp
xlat
stos
ss
mov
lret
js
stos
fdivrs
mov
push
lds
in
sbbb
in
aad
sub
inc
xchg
pop
in
push
stc
hlt
in
into
sbb
pop
mov
in
pop
and
pop
lcall
jg
gs
cwtl
add
sbb
mov
mov
cmp
sbb
cli
in
sbb
xchg
in
clc
push
in
ss
xchg
pop
cmp
jbe
sub
sbb
dec
add
nop
or
add
lds
scas
dec
mov
add
xchg
scas
inc
inc
mov
xchg
mov
lcall
pop
inc
mov
mov
movsl
dec
inc
push
add
mov
aas
mov
js
clc
shll
mov
adc
mov
insl
aas
icebp
push
sbb
xchg
sbb
loop
push
comiss
dec
push
inc
fstl
scas
mov
insb
pop
add
insl
xchg
or
sarl
mov
test
push
jb
inc
cltd
xor
jecxz
js
pop
jp
pop
ss
aad
and
mov
jle
fnstsw
std
ss
mov
push
jg
xchg
test
mov
mov
xchg
je
call
push
xor
test
xor
mov
jo,pn
push
jl
pop
cmc
dec
jecxz
scas
add
xchg
cmp
jo
xchg
or
inc
sbb
dec
arpl
sar
popa
jmp
adc
ficompl
loope
sbb
jecxz
outsb
and
push
sub
int
ljmp
push
or
jp
sub
add
jbe
xor
xchg
dec
dec
test
nop
aam
add
pusha
xor
dec
and
adc
pop
mov
adc
cs
in
mov
lock
push
push
mov
sub
leave
ret
in
test
push
out
das
lahf
gs
ljmp
dec
dec
sbb
or
jnp
mov
jbe
leave
aad
push
sbb
lods
popf
cltd
sbb
and
add
cmp
cmove
xchg
xor
jmp
jle
dec
inc
mov
and
fbstp
sub
jmp
das
repz
inc
jg
adc
pop
or
mulb
sbb
iret
arpl
mov
inc
inc
pop
push
cs
push
lods
and
imul
inc
cmp
pop
repnz
mov
cmpl
or
xor
or
push
add
dec
aaa
pop
sub
ljmp
jo
xchg
pop
cmp
fidivrl
iret
add
inc
inc
loopne
rclb
jmp
or
fistps
and
adcl
or
or
pop
in
sub
pop
test
cmp
xchg
shlb
pop
jmp
push
daa
jo
sub
pushf
jg
arpl
jb
inc
movsl
jns
in
mov
pop
in
nop
das
jle
sbbb
push
lods
pop
and
jecxz
lret
fstl
add
fcomps
xor
enter
cwtl
jno
jecxz
outsl
mov
daa
cmc
dec
stos
and
aas
mov
and
jp
adc
push
popa
adc
cmpsb
mov
in
adc
xor
cmp
jecxz
sbb
mov
push
in
imul
scas
mov
add
xchg
rorb
lods
pop
fwait
es
xchg
fildl
je
in
fildl
mov
push
xchg
roll
divb
in
xor
aad
mov
pop
scas
dec
test
in
out
sbb
pop
sti
repnz
pop
out
sbbl
jle
xor
mov
aam
xor
pop
sub
and
xlat
or
xchg
adc
or
or
inc
push
adc
adc
das
ljmp
push
pop
pop
ret
lds
sbb
xchg
push
aas
pop
and
jle
or
push
or
les
stc
mov
bound
popa
and
push
outsb
pop
in
dec
insl
dec
cmp
shr
sbb
mov
mov
enter
movsl
push
lcall
push
rol
fwait
and
mov
outsb
add
add
add
inc
inc
clc
pushf
test
fisttpll
mov
ljmp
test
adc
xor
movl
enter
xor
sub
xor
dec
lock
cmp
in
jbe
cmpsl
jb
jge
mov
sbb
data16
push
mov
push
mov
mov
stos
push
mov
dec
mov
pusha
test
imul
mov
stc
or
sub
cs
dec
repnz
lcall
stos
pop
push
inc
dec
pop
pop
imul
push
sbbl
inc
in
mov
adc
mov
xor
jle
jns
data16
or
mov
int3
jae
jl
push
mov
cmp
mov
lods
jnp
repz
xchg
out
xchg
mov
cmp
pop
cmp
push
jbe
adc
lret
mov
inc
dec
stos
push
jecxz
call
aaa
es
mov
mov
push
imul
sbb
popf
lods
jmp
aad
lods
xchg
jb
dec
and
vpcmpeqd
jle
or
jae
dec
push
jo
into
pop
xchg
inc
fxch
push
loope
lea
in
pop
das
mov
lock
mov
adc
mov
test
ljmp
scas
subl
dec
jo
mov
adc
add
dec
jns
in
fcomps
rorb
arpl
mov
ljmp
xchg
repnz
adc
sbb
and
std
ss
fidivrs
lods
outsb
xchg
mov
add
pop
roll
shrb
mov
sbb
int3
in
jmp
sbb
icebp
adc
js
push
les
xor
call
ret
mov
cwtl
push
js
pop
leave
ss
mov
and
out
ret
cmp
push
popf
dec
ret
pop
push
jno
shrl
dec
je
mov
scas
outsl
outsl
in
dec
fxch
insb
inc
pop
pop
jo
enter
inc
addr16
fmul
mov
inc
cmp
dec
sbb
loope
testb
aam
scas
mov
out
mov
lods
mov
fnsave
dec
add
push
pop
cmpsl
nop
push
mov
addr16
sbb
adc
jbe
jo
dec
sbb
stos
pop
hlt
rorb
js
and
fldl
or
int3
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
pop
xchg
inc
mov
push
fstl
outsb
inc
es
das
dec
push
into
xchg
mov
iret
mov
test
stc
pop
mov
ss
inc
loopne
mov
ret
pop
nop
pop
ss
fsubl
scas
xorb
inc
adcl
mov
movsb
fbld
add
inc
mov
mov
xchg
call
loopne
gs
test
fwait
cmp
pop
jmp
repz
push
dec
push
inc
les
aam
pop
adc
bound
sarl
sti
test
les
out
and
inc
jg
shrl
movsl
sti
insl
mov
stc
fstl
mov
in
data16
mov
sub
hlt
push
js
mov
pop
pop
enter
loopne
dec
jp
fbld
ljmp
and
ja
inc
dec
sub
pop
adc
cmc
xchg
jmp
xlat
or
add
jne
xor
mov
lcall
add
lods
mov
push
das
xchg
push
xrelease
fsubrs
jo
leave
mov
and
enter
cltd
int3
std
int
xchg
cmp
sub
shlb
cmp
xchg
stc
rcl
movsb
mov
add
lcall
mov
sbb
into
popf
std
jge
cmc
les
adc
es
inc
inc
mov
xchg
or
lahf
inc
out
clc
scas
xor
add
xchg
push
cwtl
jle
jbe
adc
leave
dec
adc
lods
add
div
movsb
testl
xlat
and
pop
outsb
insb
jg
stc
test
and
mov
and
in
lcall
adc
mov
push
sbb
push
data16
roll
movsb
outsb
ds
ss
xor
pop
fidivrl
sti
fsubl
or
subb
cmp
xlat
mov
add
mov
fsubrp
mov
xor
add
int
jb
or
sub
mov
movsl
cmp
xchg
jbe
push
mov
leave
dec
dec
mov
repz
pop
stos
pushf
jge
or
int3
mov
add
loopne
addr16
cmp
outsl
sub
lods
mov
fcmovu
cmp
lock
cmpsb
add
outsl
ljmp
pop
push
xchg
push
cs
iret
fcmovb
arpl
test
jno
xchg
pop
mov
sbb
shrb
adc
xor
jbe
test
cld
mov
out
xor
inc
dec
dec
lret
shl
and
int
inc
add
mov
bound
sbb
out
fcomps
in
xchg
into
in
jns
pop
decl
adc
cmp
test
and
scas
flds
lret
cmp
xchg
sub
outsl
push
add
sbb
scas
jmp
xchg
movsl
packuswb
clc
addr16
lret
imul
cmp
lods
jg
mov
lods
and
mov
mov
test
std
sbb
and
cs
xchg
arpl
fidivrs
mov
orb
orb
xor
mov
pop
imul
add
xchg
and
push
aaa
out
imul
xor
pop
cmpsb
adc
mov
sbb
imul
jmp
mov
fimull
gs
sub
xor
cmp
dec
mov
popa
repnz
xchg
cmp
mov
fsubp
ljmp
and
push
jl
sub
push
int3
pushf
push
fwait
and
mov
movsl
in
inc
adc
mov
mov
push
popf
in
and
loope
and
leave
lds
jae
fidivl
roll
lds
arpl
pop
adc
sub
lcall
dec
ret
and
mov
mov
mov
push
stc
push
inc
stos
xchg
gs
mov
dec
push
mov
iret
sub
push
pop
sbb
shlb
jle
lods
inc
loope
inc
les
mov
xchg
or
scas
mov
into
cltd
jb
mov
sbb
rcll
mov
in
pop
sbb
fnstsw
sbbl
loop
pop
add
mov
mov
in
iret
inc
pusha
lock
xchg
inc
mov
movsb
adc
data16
jecxz
adcb
or
mov
or
jno
mov
pop
imul
mov
mov
sbb
add
mov
push
adc
ljmp
lea
mov
sub
cmp
enter
mov
xchg
sbb
jge
in
testb
mov
mov
std
jae
mov
and
aad
cmp
fsubr
fwait
stos
cmpsl
jnp
xchg
sub
sahf
mov
dec
push
out
and
sbb
dec
ret
sbb
dec
xchg
fiaddl
rcrb
iret
das
and
leave
add
lcall
andl
jno
das
cmp
fsubrl
jnp
stc
stos
mov
mov
jo
dec
rolb
sbb
inc
sub
into
xchg
ljmp
in
call
imul
push
cmp
ret
out
add
lods
cmp
mov
push
testl
popf
xor
sbb
lahf
das
xchg
aas
push
insl
jmp
fcomps
aad
mov
test
shrl
adc
out
sub
pop
scas
xchg
or
inc
mov
outsl
jmp
rol
dec
jp
mov
subb
out
push
cmp
push
shrl
fidivl
sbb
arpl
pusha
outsl
mov
jbe
jae
lods
in
orb
bswap
cmp
jge
scas
iret
pusha
aas
adc
push
fistpll
xchg
aad
dec
icebp
dec
ficompl
mov
scas
pushf
inc
int
cmpl
les
push
add
push
repnz
xchg
pop
nop
ret
cmp
cli
sub
cmp
cmpsl
cmp
call
lret
xlat
int3
and
push
dec
shrb
jns
js
shll
loop
mov
xchg
lods
jmp
jne
mov
pop
pop
fucomip
adc
and
mov
repz
and
in
xor
aad
loop
das
ds
pop
test
loopne
push
dec
or
add
ljmp
daa
mov
das
and
mov
or
lods
cmp
jl
push
push
or
mov
xlat
movq
or
cmp
xchg
out
adc
mov
jmp
in
pop
in
aas
and
mov
add
notb
mov
and
ret
enter
test
add
shrl
icebp
stos
test
jnp
inc
dec
add
cmp
cmp
mov
ret
call
in
or
mov
shlb
sub
enter
pop
push
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
mov
dec
pop
or
ja
shrb
roll
aaa
adc
pop
mov
int
movsl
push
les
jmp
jns
icebp
sahf
mov
lcall
lcall
imul
leave
sbb
sub
movsb
mov
push
adc
fwait
dec
scas
rorb
es
stos
pop
push
jns
sub
pop
shl
nop
insl
insl
cmp
sbb
aas
out
and
lea
inc
mov
push
xor
xchg
push
sbb
xlat
das
test
pop
paddusb
imull
lea
jl
stos
outsl
aaa
test
adc
inc
sbb
cmpsl
add
rolb
daa
push
sbb
jbe
adc
mov
jbe
lds
subl
aad
sti
mov
jo
mov
adc
aas
pop
mov
in
insl
cmp
imul
inc
scas
jg
ret
push
mov
sbb
jno
xchg
stos
frstor
scas
push
add
scas
or
or
lods
mull
pop
or
loope
fsubrs
xchg
cmpsl
aaa
loope
daa
cmp
xchg
push
lods
sub
dec
push
add
iret
ret
sub
lods
enter
enter
rorl
xchg
notb
push
xchg
mov
inc
push
mov
aaa
cld
int3
pop
inc
xor
hlt
mov
addr16
mov
mov
sub
mov
ss
ret
mov
dec
shrb
adc
sbb
out
jmp
push
mov
cwtl
mov
sub
pop
add
push
andl
test
and
subl
mov
dec
test
xchg
daa
pop
mov
and
xchg
insl
ja
stc
out
cmp
pop
push
cmp
daa
hlt
sahf
dec
lahf
mov
addr16
sbbb
mov
sbb
push
push
pop
cltd
sub
stos
lock
jge
push
sbb
sbb
jg
sti
dec
cmp
pop
sub
out
adc
fmull
mov
test
lahf
shlb
lahf
adcb
sbb
and
not
ret
pop
push
push
sub
xchg
sbb
sbb
loope
mov
ljmp
xor
jnp
xchg
push
mull
mov
xchg
mov
cmp
ja
out
sbb
aaa
mov
pop
mov
sbb
mov
fimuls
xchg
in
rcrl
sarl
pushl
iret
cmp
stos
daa
sub
cmp
mov
lcall
mov
dec
mov
add
mov
enter
scas
jg
ja
ror
pop
sbb
mov
loop
jae
aaa
sbb
frstor
and
out
adc
daa
mov
push
test
adc
cmp
popa
mov
stos
mov
add
ret
add
idivb
pop
clc
scas
ja
inc
ja
addr16
jp
movsl
ret
movb
ljmp
out
mov
jle
icebp
cmpsb
repnz
enter
push
pop
es
dec
and
jne
ret
in
stc
sbb
loope
fmuls
cld
jmp
sub
scas
popf
dec
dec
rcl
dec
cmp
and
fsts
jb
mov
sahf
push
neg
push
dec
cmp
push
loopne
enter
jbe
mov
push
push
lds
add
enter
xor
jne
sub
jo
out
mov
or
sub
xorb
dec
clc
mov
in
mov
pop
loopne
cmp
inc
add
clc
jb
lock
and
iret
push
movb
sbb
out
out
sub
dec
and
out
add
mov
lcall
push
jge
add
and
and
jo
bound
push
lcall
add
das
jae
fstl
mov
cmc
jl
mov
inc
das
cmpsl
jns
shr
jne
rclb
sub
test
cmp
aad
jo
cld
les
push
daa
out
fs
icebp
fildll
mov
ds
cmpsb
jne
scas
mov
sub
loop
adc
outsl
add
xchg
jbe
inc
fidivl
arpl
jle
nop
movsl
out
lods
mov
subl
aas
add
jl
or
or
mov
shrb
xchg
add
xor
mov
mov
jnp
sub
and
push
fs
fisubs
insl
and
push
ret
and
daa
decb
pop
in
in
mov
lret
mov
aad
pop
in
xchg
enter
bound
sub
mov
xor
and
xlat
adcb
push
or
mov
sbb
outsl
sbb
movsl
sbb
pop
mov
scas
ljmp
cmpsl
ret
and
stos
xor
bound
pop
push
aas
popa
or
xor
push
mov
fidivl
in
icebp
jbe
inc
insb
sub
inc
outsl
xchg
mov
xor
and
xchg
mov
adc
lock
mov
inc
mov
pushf
imul
inc
mov
inc
cli
lar
xchg
scas
fnstenv
push
mov
xor
out
mov
outsl
popa
dec
pop
dec
movsl
jecxz
scas
sub
leave
adc
lret
mov
and
or
cltd
sbb
sbb
jl
jo
xchg
insb
pop
popa
or
fmuls
cli
sbb
jg
aad
pop
les
inc
or
lret
cmpb
jne
mov
ret
or
push
add
or
mov
clc
pop
cmpsb
cmp
xchg
cmp
cmpl
repnz
aad
or
mov
cmp
or
cwtl
jno
dec
xchg
clc
pop
jmp
push
pop
nop
in
dec
inc
notl
pop
jg
sbb
mov
repnz
scas
add
cmp
inc
in
sbb
xchg
ja
pop
cmp
aaa
mov
lea
ret
jecxz
xor
mov
xor
cmp
pop
mov
push
push
push
out
adc
ds
push
es
mov
leave
addr16
fiaddl
lcall
mov
or
jb
test
xchg
mov
rorl
jmp
cli
xor
sbb
and
cmpsb
sub
loop
lods
xlat
cmp
insl
pop
enter
pop
es
loop
insl
popa
int3
in
mov
cs
mov
mov
insb
jnp
fdivr
dec
push
lret
xlat
test
sub
jmp
adc
lret
fiaddl
pop
and
lcall
adc
imull
add
add
inc
adc
arpl
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
repz
pinsrw
psubw
sub
aam
ds
push
mov
lret
mov
mov
mov
mov
cmp
into
rcrl
inc
sbb
mov
cmp
and
push
loopne
adc
dec
and
adc
dec
arpl
sub
sahf
roll
inc
xor
out
inc
add
xchg
or
je
ss
mov
fildll
lea
fistpll
outsb
jle
je
add
sbb
popa
jg
ret
imul
push
cmpsb
sar
sbb
sbb
out
mov
jg
mov
iret
mov
jmp
test
addb
bound
and
out
mov
in
dec
push
cmpsb
xlat
sti
sbb
and
sahf
cmp
and
int3
cmc
lods
ss
out
mov
push
in
lret
movsb
jns
add
loop
dec
mov
scas
idiv
jbe
pop
in
push
es
shrb
xlat
rolb
sti
xchg
test
je
dec
push
ss
mov
mov
lock
jns
mov
xchg
push
inc
subl
jne
dec
mov
shrb
add
xchg
push
sarb
mov
movb
loop
test
xlat
jae
sti
ret
daa
mov
cmp
aaa
stos
mov
in
pop
dec
out
inc
popa
push
inc
lcall
fnstcw
dec
cmp
push
cwtl
xchg
lret
push
mov
and
les
decb
clc
adc
iret
in
push
or
mov
mov
pop
jle
dec
jg
jae
cmp
xchg
mov
mov
loope
or
stos
sub
inc
jb
jmp
mov
adc
addr16
repz
data16
insb
popa
xchg
add
punpckhwd
shl
mov
sub
loop
ljmp
cmp
shl
xchg
aam
addr16
jmp
aas
and
fiaddl
jge
out
pushf
pusha
imul
and
lock
mov
movsl
hlt
add
loop
fmuls
rol
gs
cmc
mov
cmp
sub
xchg
dec
mov
or
pop
jg
out
dec
sbb
iret
stc
pop
ret
and
cmc
iret
test
mov
and
cwtl
sub
mov
movsb
push
mov
xorl
adc
push
sub
push
jb
fdivs
hlt
xor
push
jg
je
aad
sub
cmp
inc
inc
xchg
sbb
dec
notl
inc
fadd
xor
pop
sub
leave
jns
xor
addl
sub
pop
movsl
in
jl
and
or
popf
push
lahf
shlb
mov
je
fimuls
in
movsl
sub
add
andb
and
pop
cmp
mov
xorl
pop
mov
mov
in
outsl
ret
arpl
xor
cmp
mov
ficoml
scas
in
jle
mov
pop
loopne
pop
or
mov
xchg
shll
ret
add
aaa
mov
or
cmpsb
mov
out
mov
dec
int3
or
rorw
aam
cmpsb
dec
out
mov
push
repnz
xor
inc
test
xchg
sbb
xchg
sbb
cld
and
adc
adc
dec
fistpl
push
ret
adc
jae
jbe
xor
sub
outsl
xchg
fs
clc
orb
pop
ds
sbb
call
inc
out
or
cltd
push
push
call
sub
cmp
xor
jmp
mov
imul
mov
movsl
sub
xor
and
dec
pop
adcb
xor
je
inc
mov
sub
mov
and
cmpsb
xor
pushf
in
sbb
pop
call
or
xor
pop
outsb
dec
out
push
int3
mov
stc
rcl
lock
mov
cmp
cmp
sbb
es
jno
jmp
lods
xor
add
outsb
dec
cmp
inc
sub
inc
mov
mov
push
mov
lods
inc
incb
test
js
sub
lock
ret
pop
stc
fldcw
push
scas
nopl
cli
fdiv
and
shll
out
out
sar
mov
xchg
mov
movsb
out
divb
dec
xchg
ss
fsts
out
push
mul
iret
clc
fs
xor
dec
xor
enter
mov
sub
mov
insl
mov
in
addl
movsl
pusha
xor
or
mov
sub
mov
mov
and
dec
mov
mov
rclb
out
scas
adc
inc
pop
ljmp
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
