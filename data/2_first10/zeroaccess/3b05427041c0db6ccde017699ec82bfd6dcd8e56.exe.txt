push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
mov
jle
cli
jg
jle
xlat
cmp
rol
pop
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
dec
mov
mov
fwait
mov
add
ja
mov
dec
test
ret
adc
iret
xchg
cmp
ret
and
pop
lret
out
sbb
xchg
sub
dec
xor
inc
push
cmp
jb
mov
cltd
add
push
sub
xchg
dec
lods
ljmp
js
repz
out
in
ror
add
pop
lods
jmp
sbb
aam
frstor
fdivs
dec
ret
repz
xchg
ss
jmp
filds
and
mov
pop
and
dec
arpl
pusha
push
sub
int3
xchg
outsl
xchg
pop
pop
push
inc
xchg
jbe
dec
in
dec
adc
mov
push
popa
and
jnp
add
rclb
ds
test
jno
xchg
pop
sbb
sti
orl
aaa
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
mov
jle
cli
jg
jle
sub
jae
cmp
dec
xchg
dec
mov
ja
cmpsb
or
or
xor
stos
mov
cs
push
outsl
jne
push
fwait
sbb
jb
jo
add
dec
pop
push
in
aam
in
loopne
test
test
mov
add
mov
mov
cmp
pop
or
jl
jmp
clc
mov
push
daa
negl
mov
mov
cmp
xchg
js
roll
xchg
or
pop
outsl
and
cmp
lods
repz
add
push
xchg
dec
fnstcw
jmp
xchg
push
sub
sub
or
xchg
pop
mov
rclb
loopnew
or
imull
dec
pop
lods
xchg
adc
aam
sub
movsb
mov
xor
sbbl
add
mov
push
scas
inc
jl
ret
cmpb
cmp
dec
or
dec
adc
sub
sarb
adc
pop
jns
es
and
aas
jb
fildll
push
sbb
loop
out
xlat
pop
or
mov
pop
xorl
arpl
mov
or
add
sbb
pop
xor
cmp
jo
or
push
fdivrs
mov
jo
daa
jecxz
jbe
adc
lahf
xchg
mov
addr16
js
jge
outsb
in
fwait
push
arpl
mov
lcall
xchg
inc
les
sbb
xor
neg
jmp
cli
fcompl
jno
cmp
loop
jge
jle
jg
jle
sub
fldcw
sub
andb
push
inc
push
shrl
push
dec
fistps
pop
sub
pop
cmp
xchg
es
cwtl
cmp
jle
mov
loope
cmpsb
inc
or
fistpll
mov
jne
cmp
leave
pop
imull
int3
push
sbb
stos
cmp
xor
fildl
cmp
cmpsb
dec
js
mov
mov
or
lea
add
jmp
insl
mov
in
pop
inc
cmp
push
xchg
mov
jle
aaa
jns
rolb
jbe
out
adc
mov
cmp
rcr
cltd
iret
cwtl
scas
fs
add
push
loop
pop
xchg
pop
sub
adc
push
in
mov
sub
mov
jae
lret
je
jae
xor
fstpl
sub
mov
cmpsb
xchg
fwait
andl
test
stc
xor
lds
ret
xchg
jge
add
push
add
out
xsaveopt
pop
push
pop
xor
iret
push
mov
mov
sbb
mov
lahf
mov
out
and
or
imul
pop
clc
imul
out
mov
mov
jae
push
mov
cmp
inc
ficompl
iret
loope
jl
out
rcrb
shrl
dec
push
dec
sub
in
out
popa
inc
jge
or
inc
int3
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
xchg
cmpb
cli
jg
jle
cmp
in
mov
pop
int
pop
and
sbb
pop
fwait
and
loope
jge
mov
and
fsts
mov
movsl
add
add
sub
sub
push
into
es
sbb
ret
insb
rorl
loop
jp
cmp
sbb
jecxz
in
add
hlt
daa
ja
xorl
mov
mov
jnp
inc
repz
pop
bound
pop
out
aam
add
cmp
fwait
xchg
push
je
test
sbb
xor
mov
fistl
scas
mov
xor
pushf
nop
sbb
cld
and
and
test
lods
movsb
mov
ljmp
push
adc
jns
jno
data16
xchg
pop
push
jne
xchg
and
out
mov
mov
xor
aad
xchg
jnp
inc
fwait
out
cmp
mov
mov
pop
mov
jnp
jb
push
jmp
add
cmc
cmpsl
testb
sub
dec
cmp
jb
insl
adcl
enter
cs
icebp
mov
inc
mov
sbb
dec
jbe
and
aaa
mov
xchg
div
sbb
popf
shlb
xor
pop
dec
mov
adc
pushw
cs
pop
inc
test
dec
xor
mov
dec
movsl
dec
rclb
pop
jo
mov
jmp
xchg
mov
push
jo
adc
dec
pop
dec
pop
add
js
jle
jg
jle
push
add
aad
pop
lcall
pusha
adc
xchg
add
es
sbb
cmp
dec
inc
movl
shrl
bound
or
test
jno
lcall
xchg
xchg
lahf
mov
loope
scas
mov
push
pop
mov
arpl
daa
push
cli
lret
je
dec
sub
mov
pusha
push
cmp
lret
inc
ss
lods
inc
sub
or
xchg
xor
dec
push
mov
test
push
das
xchg
cmpl
outsb
sub
push
iret
stos
fiaddl
push
pop
add
mov
mov
sbbl
and
es
popa
mov
mov
xchg
das
sub
xchg
loope
hlt
xor
pop
outsb
inc
mov
sbb
adc
push
dec
xor
jge
insb
pop
leave
mov
and
mov
sub
scas
fisttps
mov
inc
sub
xchg
dec
in
mov
dec
sbb
rorl
mov
dec
rcrb
bound
xchg
orl
das
push
dec
dec
xchg
repz
add
sub
pop
movsl
and
dec
mov
push
dec
jg
jo
fs
xor
hlt
add
mov
cmc
sbb
popf
xchg
or
pop
mov
and
mov
stc
mov
fdivrs
mov
dec
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
mov
jo
jns
jle
jg
jle
dec
sbb
sub
push
cmp
sub
js
aas
pop
sbb
jge
shrl
push
fcompl
nop
mov
js
dec
xchg
jnp
jg
mov
lock
adc
pop
add
or
cmc
and
jae
adc
sbb
std
mov
mov
or
test
loope
xor
sbb
hlt
pop
xor
add
cmp
cmpsl
jns
adc
cs
leave
mov
inc
adc
arpl
xor
xchg
mov
rcll
adc
jne
push
sti
mov
int
pop
fidivrl
data16
fdivl
ss
fists
xchg
out
repnz
pop
jp
inc
scas
or
or
sub
jne
mov
test
xchg
dec
xchg
mov
push
pop
jo
adc
push
or
dec
jns
scas
sub
lcall
xor
rclb
mov
and
adc
mov
je
cli
outsl
sub
jae
jmp
out
cmp
scas
mov
and
dec
dec
or
test
mov
js
xor
cmc
sahf
lret
idiv
adc
xchg
adc
mov
dec
mov
js
aas
mov
xor
pusha
test
sbb
xchg
das
push
inc
xlat
jns
iret
cmp
xor
add
pop
inc
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
dec
push
pop
jle
cli
jg
jle
mov
fwait
iret
shrb
push
inc
fisubrs
les
jbe
cld
mov
imul
mov
frstor
adc
dec
testl
xor
dec
hlt
int
fs
push
cwtl
outsb
xor
or
push
mov
fcoms
mov
fildl
test
movsl
add
cmpsb
loope
xchg
popl
insl
jno
sbb
gs
mov
movsl
and
rorl
fdivr
lahf
jbe
popa
movsb
xchg
decb
lahf
jp
fdivs
cmp
leave
xchg
or
cmpsl
mov
mov
or
aas
adc
jle
cmp
pop
scas
push
sahf
cmpsl
cmp
xor
mov
test
cld
pop
add
mov
dec
or
adc
mov
popf
insb
popa
mov
cmp
neg
fadds
xchg
mov
add
sbb
pop
xor
jecxz
push
jecxz
enter
mov
pop
cmp
ret
out
xchg
pop
pop
sbb
arpl
and
repz
xchg
int3
push
arpl
mov
hlt
pop
mov
fisttps
jle
mov
ds
xor
dec
dec
mov
push
adc
gs
in
mov
push
inc
sbb
pusha
dec
imul
insl
add
add
call
inc
in
movb
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
adc
stc
scas
pusha
xorl
rcll
push
ret
aam
pop
jae
mov
add
js
push
and
lods
sahf
bound
inc
add
dec
outsl
out
clc
dec
loopne
mov
lods
popf
push
cmp
dec
add
mov
jge
daa
cli
push
xchg
cmc
repz
xor
mov
pop
sbb
jmp
pop
fstpt
dec
jns
nop
push
hlt
fucomp
mov
test
push
int3
mov
xor
xorl
movsb
sar
fisubrl
sbb
push
add
imul
mov
xor
test
mov
mov
sbb
sarb
inc
rolb
les
cmpsb
dec
lods
add
mov
mov
in
ljmp
mov
cmp
cmp
dec
inc
sbb
mov
data16
jmp
pushf
dec
mov
popa
mov
sub
sahf
cld
cmpsb
nop
inc
push
stos
leave
cltd
jmp
clc
push
xor
push
mov
jb
bound
movsb
in
leave
push
filds
jg
cld
cmp
xchg
add
dec
cwtl
mull
or
pop
bound
or
gs
pop
shrl
mov
sub
jmp
mov
daa
loopne
sbb
add
rcrb
or
outsb
jae
dec
jbe
call
mov
and
std
sub
inc
call
add
pushf
add
add
dec
and
jno
push
mov
pop
gs
out
push
add
cli
jg
jle
ja
xor
cmp
cmpsb
add
pop
sub
sub
adc
sarb
push
sub
xchg
add
mov
inc
mov
scas
movsl
out
cmpsb
dec
lea
sbb
jle
sar
insb
mov
mov
sbb
rol
jmp
call
mov
mov
pop
adc
lods
or
cmp
inc
fdivrs
es
test
push
mov
sbb
inc
mov
dec
lock
add
test
jnp
mov
sub
or
pusha
dec
dec
daa
out
add
dec
rol
inc
mov
push
xor
push
adc
rcr
outsl
dec
shll
je
daa
fwait
or
jl
mov
les
jbe
adc
daa
in
jle
add
mov
jge
popa
imul
xchg
cmp
push
ds
mov
call
push
push
sahf
rclb
in
pop
fiadds
aaa
adc
imul
int3
or
cmp
aaa
mov
mov
repz
jg
cmpw
push
adc
loop
bound
loopne
mov
jl
int3
jne
xor
or
sbb
mov
pop
xchg
adc
cmpsb
sub
xchg
fwait
pusha
jb
les
sub
sbb
jae
mov
xchg
rorb
arpl
lcall
in
ds
aaa
bound
dec
mov
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
mov
add
cli
jg
jle
and
stos
sbb
ljmp
inc
lods
stc
sbb
shlb
xor
jp
and
repnz
loopne
jno
xchg
xchg
and
out
test
mov
push
fldenv
xorb
cmc
mov
fsubrl
jne
xor
out
out
mov
push
int3
cld
and
nop
lea
out
out
pop
adc
ret
push
and
outsb
sahf
cmpsl
pushf
lret
in
in
js
aaa
push
int3
inc
fistpl
mov
cli
push
pop
cmp
rol
or
stc
cmpsb
dec
das
pop
repz
pusha
push
cli
jnp
clc
loop
lcall
in
mov
nop
cmp
jmp
inc
outsl
fisttps
popf
pusha
xchg
shll
xlat
pop
les
add
cmp
xor
stc
rcl
inc
fidivs
jae
shrb
mov
ja
das
or
sub
mov
loopne
aas
lret
push
mov
fists
imul
pop
jge
jp
lret
push
push
sub
and
shlb
or
mov
cltd
ja
mov
xor
rorl
mov
sbb
dec
mov
repz
pop
push
cmp
mov
orb
push
add
sahf
jp
sbb
fisubrl
jl
inc
loop
xchg
in
rcll
jbe
inc
lock
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
sbb
sub
add
cli
jg
jle
mov
jecxz
repnz
adc
add
ret
add
ljmp
mov
icebp
fisttpl
xor
mov
lock
xor
xor
push
cmpsb
mov
mov
dec
adc
dec
popf
mov
jbe
jb
lret
iret
test
inc
iret
sub
pop
popf
xor
or
ljmp
je
imul
mov
sbb
fmuls
cmp
aas
ja
in
adc
fldcw
jns,pn
out
lock
push
test
mov
or
popa
push
pop
pusha
daa
in
adcl
lods
sub
inc
lcall
mov
mov
push
jne
jg
unpckhps
cli
test
lods
negb
neg
xchg
dec
jae
ja
mov
sbb
push
xchg
pusha
movsb
int
jp
outsb
add
or
sbb
ror
add
cmpb
push
out
fstl
pop
into
xor
add
or
jl
data16
pop
fs
out
mov
and
lcall
xchg
sub
push
pop
rorb
dec
icebp
je
push
mov
and
test
jecxz
repnz
ja
out
stos
insb
sarb
mov
push
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
pop
push
mov
push
jle
cli
jg
jle
jnp
scas
sbb
lock
push
lea
orb
mov
jl
and
jp
xor
xchg
mov
outsb
xchg
or
xchg
adc
decb
jbe
test
int3
adc
inc
cltd
jb
out
xor
repnz
fldenv
and
and
clc
inc
sbb
sub
push
out
jle
push
aam
cltd
ud1
jb
jbe
lahf
or
into
inc
lcall
adc
xchg
push
mov
pop
ljmp
outsl
jmp
stos
and
nop
push
pop
sti
cmp
das
and
mov
push
ds
add
aad
mov
lea
ss
icebp
cmp
cmpsl
ret
int
and
bound
adc
or
sahf
in
xlat
pop
pop
dec
fstpl
in
arpl
mov
mov
push
stos
push
fwait
sub
adc
xor
cmpsb
sarb
jbe
adc
gs
aad
repnz
in
fs
or
adc
cmpsb
sahf
aaa
jl
dec
dec
mov
sbb
nop
push
adc
jb
or
cmpsb
call
mov
es
dec
aad
sub
mov
mov
or
jmp
pusha
test
into
xchg
loope
jg
loope
inc
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
ss
jle
cli
jg
jle
insw
inc
mov
imul
xlat
push
jns
sub
sarl
mov
fidivrl
loope
fs
fldcw
push
aam
dec
test
inc
std
lret
ss
bound
sub
and
xor
push
lret
xchg
lcall
pop
ja
imul
push
xchg
out
push
test
jmp
inc
sub
out
push
and
cmpsb
fwait
add
jmp
push
mov
dec
push
dec
call
jnp
and
in
xor
adc
imul
mov
ffree
flds
xor
jae
shll
je
sbb
mov
sbb
mov
fsub
dec
aam
dec
stos
dec
test
xor
mov
sbb
int
push
xchg
mov
pop
or
mov
pop
dec
or
pop
pusha
cmp
ss
mov
dec
pop
fnstcw
outsl
mov
sub
fwait
inc
ds
adc
and
dec
add
jbe
mov
mov
in
fcoms
and
adc
sbb
mov
gs
ss
icebp
adc
and
mov
and
stc
hlt
aam
adc
add
pushf
cmc
insb
push
je
cmp
insb
aaa
aaa
jle
jno
xchg
adc
mov
sub
jno
inc
lock
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
push
mov
jle
cli
jg
jle
clc
std
sbb
sbb
mov
test
mov
ret
xor
xchg
mov
pop
xchg
and
test
xor
inc
push
es
mov
pop
adc
loop
push
xorl
jg
add
cmc
scas
mov
aad
dec
mov
mov
pop
cli
or
aaa
add
pop
mov
cmpsl
incl
push
adc
leave
rcrl
dec
sub
inc
mov
xor
repnz
sahf
inc
xorl
aaa
xor
add
jecxz
jb
sbb
out
xorl
add
inc
and
int3
push
add
popa
adc
and
jns
shlb
in
das
fiaddl
bt
outsb
out
mov
lds
lahf
push
or
lods
pop
stc
hlt
out
jle
je
les
in
cmp
and
or
call
insl
loopne
push
out
dec
xor
add
setne
inc
dec
push
fucom
xchg
sbb
adc
psubq
cmpsl
push
pop
cli
lcall
cmpsb
lock
daa
mov
arpl
pop
sub
insb
mov
std
and
scas
out
popl
xchg
or
out
push
adc
sub
in
mov
inc
xchg
sub
sbb
scas
addr16
imul
push
xor
jbe
callw
pop
xor
jb
hlt
ret
lea
sub
add
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
pop
mov
xchg
or
cli
jg
jle
cmp
adc
inc
iret
xlat
insl
mov
xchg
push
mov
push
add
mov
loop
imul
negb
or
movsb
ffree
test
xchg
fwait
jo
sub
das
ss
ja
call
xchg
or
popa
aad
or
loop
call
mov
pop
push
rcrl
mov
out
and
aad
popf
pop
jb
pop
and
rcrb
stos
fwait
dec
xchg
push
or
mov
push
mov
or
arpl
lods
lcall
sub
inc
push
dec
pop
es
dec
ret
incb
repz
scas
dec
sbb
out
aas
clc
sub
pop
mov
mov
add
inc
pop
mov
mov
testb
push
add
inc
lahf
pop
outsb
mov
or
jo
adc
aam
pop
sbb
cmpsb
push
mov
fwait
push
leave
dec
jnp
xchg
xchg
xor
cmp
aad
pop
pop
mov
repz
dec
inc
or
cmp
popa
adc
jb
int
pop
pop
mov
mov
fisttps
fnsave
ret
add
test
sub
sbb
sbbl
fists
dec
aaa
ds
gs
arpl
enter
je
or
sub
pop
xor
vrsqrtps
setl
cmpl
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
sub
cli
jg
jle
mov
push
add
jecxz
mov
rep
pop
inc
push
push
pop
dec
push
and
mov
push
sbb
mov
mov
sbbb
popf
mov
cmp
cmpsl
frstor
cmpsb
aad
cmp
xchg
cmpsl
cmp
inc
fstpl
pusha
ficoms
loope
loop
ds
add
adc
cmpsb
clc
repnz
imul
imul
shl
mov
dec
and
das
fdivrs
mov
adc
scas
lret
or
inc
push
jmp
jp
jp
fists
arpl
push
fldt
movsb
dec
test
cmp
and
fisttpll
cmp
dec
mov
aam
lods
dec
in
das
out
inc
dec
fildll
out
mov
arpl
mov
mov
xchg
scas
lcall
daa
and
cmp
or
sub
push
mov
aad
xchg
enter
fstp
test
sbb
inc
ljmp
push
sbb
dec
mov
sub
pop
and
add
mov
lds
cs
out
xchg
pop
popa
and
pop
lods
mov
in
stos
mov
mov
sbb
add
sbb
lret
xchg
test
scas
xlat
xchg
mov
daa
out
push
adcl
add
out
lea
in
jns
icebp
sub
mov
lahf
lret
ret
adc
jns
add
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
push
or
cli
jg
jle
pop
mov
dec
inc
lea
mov
jp
test
int3
mov
adc
sub
pop
sbb
adc
or
cwtl
mov
xor
decb
leave
rolb
fdivr
cltd
mov
lods
shlb
mov
fisttps
fcomp
mov
sbb
enter
not
mov
gs
lcall
mov
lret
adc
push
pop
mov
lods
andl
pop
in
jbe
loop
test
inc
push
mov
add
dec
stos
mov
adc
adc
sarb
mov
inc
xor
nop
dec
aas
pop
into
call
lret
testl
insl
mov
cwtl
sbb
cmp
adc
xor
jecxz
js
sub
push
mov
sbb
mov
add
js
mov
fucom
push
rclb
or
adc
lds
adc
lods
mov
cmpsb
repnz
int
and
aas
sbb
pop
out
loop
and
into
push
xor
repnz
jmp
mov
loop
push
push
inc
pop
add
jno
adc
mov
xor
xchg
out
sub
shl
scas
push
mov
mov
in
inc
cmpsl
xor
pop
xor
hlt
imul
fistl
call
mov
mov
add
pop
jmp
add
mov
adcb
pop
jle
cli
jg
jle
int
aad
push
jmp
inc
mov
inc
push
adc
push
adc
arpl
or
sahf
bound
loope
mov
in
jecxz
jp
es
mov
into
inc
inc
xor
out
pusha
mov
inc
sub
and
js
cmpsl
cmpb
incl
add
mov
lea
js
jbe
out
adc
mov
xor
aas
scas
or
sub
mov
nop
jmp
adc
insb
loop
pop
jo
jle
mov
fcoms
sti
loopne
ret
dec
mov
fistpl
pusha
js
push
mov
sub
into
xchg
mov
jmp
dec
int3
insb
in
clc
jne
xchg
mov
clc
mov
cmpsb
sbb
mov
pop
lret
scas
jb
into
push
inc
addr16
adc
pop
mov
xchg
mov
cmpsb
push
in
mov
fildll
insl
popf
pop
into
mov
mov
cmpsl
fsubs
xchg
mov
neg
lahf
push
leave
movsl
inc
jl
test
leave
sbb
lods
xchg
push
lahf
ljmp
jae
outsb
jnp
and
ds
mov
sbb
in
xlat
sbb
scas
push
xchg
out
aad
popf
jns
ret
out
stos
xor
xor
mov
pop
adc
dec
je
fmuls
mov
adc
inc
inc
js
hlt
mov
sti
mov
pop
arpl
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
fs
adc
jle
or
or
sub
andb
mov
repnz
ds
repnz
insl
call
pop
push
cmp
enter
add
popf
insb
aaa
xchg
sbb
mov
outsb
sub
add
movsl
add
dec
sub
pop
aas
aas
mov
mov
mov
dec
sub
fnstcw
imul
adc
mov
push
stos
test
inc
and
sub
and
data16
dec
stc
jo
arpl
or
pushf
dec
inc
inc
ljmp
ret
fldl
pop
data16
pop
lock
nop
pop
adc
aaa
add
xor
cmpsl
pop
fwait
insb
cmpsl
es
sbb
jecxz
adc
in
aad
pusha
dec
cmpsb
ret
mov
neg
xor
popf
cmp
loopne
fdivr
jle
mov
mov
dec
loopne,pt
int
adc
xor
and
push
inc
xor
adc
xchg
aad
jnp
mov
js
cmp
fs
fisubrs
mov
lret
xchg
addr16
sbbl
pop
inc
jecxz
mov
lods
xchg
cmp
inc
dec
xchg
outsb
inc
arpl
mov
mov
pushf
inc
shll
in
icebp
push
fstpt
or
lcall
dec
sub
xchg
bound
mov
inc
aaa
cwtl
xchg
gs
out
outsb
pop
mov
rorl
inc
push
popf
stos
or
fisubrl
push
adc
out
lods
inc
rcl
sarb
xchg
add
mov
pop
push
sub
std
push
pop
pop
mov
inc
repnz
pop
ret
lea
mov
push
xchg
adcl
aaa
aas
ror
pop
jge
lods
mov
lret
pop
insl
fcompl
mov
push
in
ljmp
sub
loop
push
ficoms
and
notb
sarl
data16
mov
mov
lret
fcom
das
cmp
jns
inc
fistpl
shlb
add
test
subl
dec
or
mov
xchg
and
lods
fwait
mov
dec
leave
clc
rorb
cmp
subb
cmp
jl
cltd
xchg
int
jo
dec
push
pop
call
or
test
test
lcall
sub
mov
repz
cltd
in
adc
mov
fldl
arpl
lock
ds
dec
repnz
jp
xchg
pop
cmc
sub
test
rcl
or
xchg
sub
xchg
pop
mov
sub
mov
fwait
cltd
push
popl
cmp
sbb
jns
fiadds
outsl
mov
loop
test
clc
mov
pop
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
adc
sahf
and
jle
pop
jl
jle
in
ds
adc
or
fistl
push
dec
jmp
xchg
out
inc
pop
jns
in
cmp
dec
sub
adc
jl
mov
in
adc
fcoms
loopne
fistps
test
aam
or
xchg
loop
fcomps
xchg
pop
inc
popf
inc
jnp
pusha
arpl
int
dec
movsl
mov
das
test
sub
into
lea
mov
shlb
std
cmpsl
mov
arpl
sar
mov
inc
insl
movsb
cltd
and
je
xorl
mov
les
sub
mov
dec
inc
ret
xorb
add
idiv
fwait
mov
inc
popa
out
xchg
enter
mov
jecxz
push
test
mov
fidivrs
inc
cmp
in
mov
mov
subl
jge
mov
pop
pop
cmpsl
sbb
sub
aam
loop
sbb
inc
iret
pop
mov
lock
pusha
add
sub
rolb
adc
fcoms
pushf
aam
adc
aam
push
pop
inc
ficoms
xchg
in
pop
jle
std
and
xchg
inc
xchg
jne
push
jg
repnz
jne
and
test
repz
loope
repz
ret
pop
mov
fisubl
dec
adc
mov
and
jo
in
xor
leave
dec
icebp
push
dec
fsubrl
inc
dec
ja
sahf
aad
and
sub
in
inc
push
mov
xchg
dec
push
jp
sub
mov
dec
add
aad
stos
aaa
inc
imul
ds
and
inc
ret
loope
pop
lds
xchg
mov
cltd
add
push
push
sbb
cmp
sbb
add
sub
fisubrl
push
pop
add
cmp
repz
shll
adc
mov
notb
pop
into
ljmp
outsl
push
jmp
pushf
pop
pusha
test
xor
fistpll
sub
mov
pop
adc
aas
outsl
xchg
xor
jg
cmp
loop
and
incb
fs
inc
rorl
push
push
loope
rclb
lds
mov
xor
mov
js
jl
addb
mov
or
push
mov
mov
out
push
pop
ficompl
loope
dec
rclw
neg
adc
pop
jbe
jnp
xchg
fdivl
xchg
sarb
in
decb
decb
loopne
adc
dec
nop
jb
push
xchg
mov
jl
push
push
imulb
fcoml
adc
xor
pop
mov
add
mov
in
jnp
jae
loope
xchg
nop
cmp
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
push
xchg
or
jle
pop
jl
jle
fidivrs
fcoml
fmull
xchg
arpl
repz
pop
das
jg
fcoml
jmp
and
xchg
pop
sub
icebp
xchg
pop
dec
cmp
inc
rcrl
pop
lahf
repnz
orb
inc
adc
sub
cli
jmp
mov
dec
ds
popa
mov
inc
shlb
jge
fistl
mov
add
jbe
outsl
sbb
faddl
jo
xchg
xchg
adc
out
inc
icebp
movsb
sbb
dec
fs
cmp
das
fidivrs
fdivrl
pushf
jge
xlat
aad
push
and
adc
sbb
scas
pop
enter
and
sbb
pop
std
and
out
les
int
fdivrl
push
repz
jg
adc
push
in
into
loope
jae
jno
adc
pop
scas
jb
fcompl
xchg
insb
in
outsl
js
stos
push
out
push
xor
sub
mov
lock
out
jle
fsubs
fsubl
push
push
dec
std
jmp
mov
jmp
ret
adc
in
or
xchg
jns
aad
fwait
mov
dec
push
int3
jl
dec
pop
adc
lret
lock
xchg
dec
cmc
in
lock
in
movsb
jmp
dec
mov
inc
adc
inc
ja
aad
sbb
xchg
and
mull
aad
out
inc
fs
sti
aas
sub
xor
pop
mov
sbb
adc
xchg
faddl
mov
mov
jb
out
repz
insb
xchg
mov
leave
mov
es
xor
pop
mov
in
mov
test
push
daa
mov
xor
movsb
popf
mov
mov
add
into
in
inc
xchg
test
sarb
repnz
fcmovnbe
or
out
or
dec
cmp
jp
nop
lea
jbe
mov
dec
aas
mov
sub
pushf
sahf
push
push
pop
bound
loope
mov
mov
sbb
jae
call
pop
shrb
and
loope
mov
fwait
xchg
sbb
mov
xlat
test
outsl
add
mov
in
or
pop
and
aad
js
mov
xor
jle
cmp
mov
ret
or
xchg
or
sbb
dec
fwait
ds
jmp
lret
inc
mov
inc
std
push
jne
xchg
hlt
push
add
sub
psubsb
lods
or
push
pop
fcomps
adc
pop
dec
pop
nop
mov
fldenv
push
adcl
dec
jecxz
sbb
or
popa
dec
movsl
repnz
int3
add
mov
cmpsb
outsb
mov
decl
adc
mov
clc
pop
rcl
or
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
pop
push
pop
je
jle
pop
jl
jle
data16
pushf
sbb
add
fsubrl
lods
ret
pop
mov
mov
subl
shrb
rorb
das
jb
inc
scas
fs
mov
mov
mov
dec
add
mov
xchg
and
adc
hlt
mov
cmp
push
lcall
and
sti
sarl
or
push
mov
ljmp
mov
and
stos
icebp
stos
les
xchg
bound
repnz
cmp
jle
add
test
lret
jns
dec
push
enter
or
and
jae
in
xorl
lcall
dec
dec
mov
lret
xor
cmpsl
pushf
subb
addr16
dec
pop
mov
mov
xchg
jmp
cli
inc
or
bound
xchg
test
out
push
in
test
les
pushf
scas
sti
and
and
dec
add
lods
in
arpl
test
xor
es
and
or
mov
xchg
ds
test
arpl
filds
or
outsl
pop
mov
mov
pushf
add
sti
scas
sbb
sbb
sbb
adc
lahf
xor
outsl
jecxz
mov
fs
push
push
mov
pop
sbb
xchg
aam
rcll
icebp
shrb
adc
jns
mov
xchg
out
leave
cli
inc
mulb
cmc
xor
iret
mov
lods
inc
insb
dec
mov
jne
jl
aas
jns
fstl
enter
mulps
pop
je
mov
mov
pop
leave
cmp
mov
inc
shrb
adc
pushf
test
cmp
dec
dec
mov
jb
insl
cmp
adc
jne
test
xchg
mov
lea
repnz
inc
mov
jo
ret
lds
cmpsb
mov
add
cld
sub
test
or
push
cli
ds
addr16
repz
rorb
cmpsl
sub
test
xor
cltd
mov
testl
mov
pop
mov
pop
dec
shl
add
ret
and
inc
adc
xchg
lods
nop
les
and
mov
adc
mov
push
insl
mov
ret
xor
rcrl
mov
dec
mov
iret
out
and
pop
cld
movb
pop
dec
pop
loopne
dec
daa
ds
and
es
cs
aad
lret
ror
stc
inc
pop
xor
movsl
outsl
or
pop
ficompl
stc
pop
jmp
xchg
mov
out
cmp
mov
sti
add
add
xchg
incb
add
add
dec
popa
jno
jne
xor
jle
push
xchg
add
jle
pop
jl
jle
cltd
jns
mov
loope
gs
js
add
push
loopne
or
pop
cltd
xchg
push
dec
fadd
scas
in
sbb
cwtl
sub
xchg
sbbb
dec
lret
xor
sbb
daa
fisttpl
or
pop
test
fildll
loop
test
fwait
scas
or
adc
les
popf
daa
ret
out
aad
dec
and
mov
mov
mov
imul
or
out
js
out
movsb
pop
clc
or
jnp
inc
pop
xchg
out
cmpsl
mov
lods
idiv
or
in
mov
or
and
or
shrb
mov
lods
sbb
xor
inc
xor
mov
jne
push
repz
inc
aas
inc
xchg
sub
pop
add
pusha
jmp
mov
lret
inc
mov
dec
mulb
pop
lret
xchg
cmpsl
in
and
xor
push
ret
cli
bound
bound
push
xchg
in
sub
push
mull
or
sti
pop
cmc
test
dec
ficompl
repnz
rcl
adc
cmpsb
je
insb
mov
imul
push
xchg
mov
mov
xchg
fdiv
xor
cmpsb
pop
fcmovnb
sub
clc
test
stos
pusha
sub
sbb
push
scas
mov
mov
mov
push
stos
mov
repz
fnsave
ljmp
clc
sbb
imul
xor
pop
xorb
pop
movsb
das
mov
adc
movsl
test
iret
adc
lcall
cmpsl
push
mov
pop
testl
rclb
aam
sub
andb
hlt
je
idivb
jo
mov
lcall
retw
dec
roll
call
cwtl
shl
stos
push
push
mov
inc
add
stos
push
fisttpll
cli
in
mov
xchg
test
push
and
out
push
icebp
mov
adcl
jb
mov
sbb
lret
nop
jp
jbe
xchg
inc
mov
xchg
ret
pushf
sbb
fadd
and
inc
push
jmp
ret
je
mov
sub
mov
outsl
bound
and
xchg
sbb
ficomps
notb
sarl
pop
notb
insl
dec
dec
out
push
adc
mov
out
xor
test
cld
int3
mov
cmp
lahf
xor
imul
xor
xchg
sub
mov
loop
jns
pop
mov
aaa
pop
ljmp
push
into
mov
aas
mov
add
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
call
fcoms
pop
jl
jle
out
nop
and
daa
and
xor
sbb
add
orl
pop
adc
into
loope
pop
push
jae
loopne
jns
push
dec
mov
and
push
mov
mov
addl
sahf
and
push
push
aas
mov
jb
cs
divb
jge
pop
fwait
rcl
stos
je
leave
cld
inc
fs
and
push
idivb
push
xchg
fmuls
or
inc
mov
inc
xor
xchg
ss
sbb
inc
jo
mov
jbe
rcr
mov
sub
movups
inc
xor
int
scas
jb
push
sahf
cmp
cmp
fsin
imul
and
mov
add
popf
addb
mov
inc
mov
sub
and
sbb
pop
cmpsl
fidivs
ljmp
aam
inc
js
data16
into
mov
pop
das
ds
in
xor
push
fists
int
xchg
shrb
in
bound
mov
inc
scas
and
add
das
pushf
mov
push
jmp
sub
arpl
fisttps
daa
push
fcoms
bound
push
enter
test
jne
push
arpl
into
not
fldenv
in
test
movsb
jnp
stos
out
mov
push
cmc
sar
roll
mov
lgs
daa
mov
jb
mov
push
mov
and
pop
xor
fdivs
pop
jmp
movsl
out
or
push
sub
cwtl
push
scas
andb
test
or
fiadds
cmp
adc
in
sbb
ljmp
adc
cld
icebp
aaa
or
dec
lahf
ret
sbb
lods
lahf
xor
or
pop
pop
repnz
fimuls
or
aas
xchg
cli
repz
dec
aam
adc
imul
push
into
leave
jp
sti
popf
pop
sbb
add
ror
lret
xchg
rcrl
pop
enter
xchg
fsub
inc
ret
shrl
sub
dec
sub
and
and
mov
push
icebp
stos
insl
mov
xor
mov
lret
ss
add
mov
inc
push
lods
aaa
sub
xchg
mov
or
jecxz
jno
pop
test
sarl
out
mov
mov
or
xchg
std
sbb
movl
inc
dec
into
roll
out
cmp
dec
and
inc
arpl
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
or
pop
mov
jl
jle
inc
fcmove
mov
gs
in
jae
popf
pop
bound
fsubp
test
dec
iret
int
loope
add
stos
jmp
in
lcall
out
mov
lock
in
pop
and
sub
mov
leave
outsl
mov
lcall
int3
in
mov
dec
mov
sbb
insb
xchg
aad
dec
shll
cmpxchg
xchg
in
aad
push
lds
outsl
sub
ja
ss
iret
repz
out
or
fs
je
sbb
jge
int3
rcrl
pusha
dec
xor
mov
push
sbb
ret
int
adc
pop
sahf
dec
mov
pop
xor
mov
movsb
mov
mov
fldt
cli
pop
jae
inc
imul
or
mov
scas
jae
fwait
dec
je
dec
xchg
xor
mov
adc
out
jge
jnp
mov
xchg
mov
push
jne
inc
jbe
adc
call
push
aaa
pop
aad
movsl
or
mov
stos
mov
aam
dec
test
scas
sbb
fwait
push
addr16
and
fisttpll
data16
xor
lret
adc
pop
xor
add
imul
cld
movsb
testl
and
pop
ja
lds
leave
loope
mov
mov
xorb
jnp
push
and
sub
cltd
sbb
pop
dec
pop
add
lret
cmp
icebp
xchg
push
in
jmp
cltd
pop
out
cmp
and
repnz
or
xchg
shll
sbb
or
pusha
mov
sbbl
mov
dec
cltd
fdivrs
xchg
dec
mov
aam
in
lds
lea
lahf
mov
add
push
in
jle
divl
pop
repnz
sti
push
jnp
scas
mov
jp
nop
fs
mov
movsb
daa
rcrb
int
push
dec
sarl
repz
loopne
movsb
xor
and
leave
adc
mov
sarl
sub
stos
orl
or
or
inc
enter
outsl
mov
outsl
jmp
mov
jne
mov
pop
cmpl
cmp
sbb
sbb
xlat
fstpt
shl
pop
sarl
adc
negb
or
adc
lahf
inc
clc
ljmp
and
dec
jnp
adc
out
enter
pop
daa
aad
xchg
mov
clc
or
jecxz
xor
xor
hlt
dec
loop
push
shl
or
fdivr
cmp
lahf
lods
mov
call
mov
push
push
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
adc
sbb
jle
das
or
stos
out
movsl
addr16
ja
sarb
lahf
js
add
icebp
js
out
imul
fidivs
loopne
mov
adc
lea
cmp
or
add
dec
stos
ret
jl
cmovno
xchg
and
dec
or
mov
jle
xchg
aaa
add
adc
push
repz
xchg
mov
sbb
mov
cltd
xor
mov
push
popa
imul
loopne
pop
gs
sarl
pop
push
fildll
mov
jmp
inc
repz
cmpsb
cmpsl
sbb
test
inc
or
xor
insb
mov
lds
fimull
mov
popf
cmc
fcoml
xor
cmpb
je
adc
notl
lahf
jb
les
mov
xor
lock
out
fs
adcb
or
mov
cmp
mov
pop
xor
or
test
data16
arpl
jae
data16
lahf
dec
and
inc
jb
sub
sbb
in
xchg
stc
int
call
mov
mov
dec
jb
arpl
push
dec
aas
inc
sti
jmp
mov
mov
insl
cld
inc
aaa
repz
test
repnz
mov
inc
push
sbb
mov
push
inc
push
cmp
mov
mov
push
jnp
loopne
or
clc
dec
adc
mov
xchg
cmp
test
mov
ret
mov
arpl
call
rolb
fiadds
mov
mov
push
mov
add
pop
sub
or
std
and
push
cmpsl
or
mov
and
add
mov
shlb
out
sub
mov
sti
and
add
xlat
insb
test
stos
int
adc
test
jne
jge
inc
in
sbb
mov
es
fists
mov
xchg
loope
jns
sbb
xor
int
sub
mov
int
cmp
xchg
lock
sbb
iret
and
adc
or
push
loope
mov
pop
ror
inc
out
jae
fisubl
xchg
pop
jmp
and
ret
cld
aam
jae
dec
sbb
mov
add
fwait
jle
jecxz
sbb
push
cmp
xchg
fwait
add
xor
mov
mov
mov
jmp
and
jge
or
call
lock
mov
and
xchg
or
aas
aam
addl
movl
and
mov
push
ja
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
push
mov
push
imulb
jle
jl
jle
push
cmp
insb
inc
add
nop
sub
in
push
xor
and
je
push
cmp
dec
lods
addb
inc
mov
enter
inc
cmp
fs
mov
lea
pop
pop
mov
out
dec
ss
and
xor
or
shrl
std
adc
sti
mov
jbe
sbb
lcall
mov
mov
push
mov
sbb
sbb
inc
sub
jo
imul
jge
sbb
ja
scas
ljmp
pop
xchg
sbb
push
adc
ja
pusha
std
pop
inc
sbb
mov
mov
arpl
xchg
out
pop
dec
cmp
stos
xor
or
and
jns
stc
jecxz
movsb
in
adc
addr16
ja
fbld
enter
repz
or
out
jbe
or
pop
push
xor
xor
sub
xor
or
push
xchg
icebp
dec
movb
pop
test
pop
push
sbb
movsl
nop
clc
lods
add
fwait
arpl
das
lods
mov
sub
data16
scas
ret
pop
pop
cwtl
subl
sahf
out
hlt
aaa
jno
mov
addr16
out
mov
das
inc
adc
mov
and
or
enter
sub
pop
and
cmc
outsb
cmp
or
xlat
out
loopne
frstor
inc
loop
mov
mov
jecxz
lock
or
sbb
or
loop
inc
pop
xor
dec
adc
xchg
mov
push
cli
or
sub
lcall
into
cmp
cmpsl
movsb
mov
xlat
rclb
outsb
sub
les
push
ja
negb
and
ja
fidivl
pop
jo
stc
call
popf
in
xchg
movsb
hlt
xchg
pop
jmp
pop
jecxz
lods
push
icebp
mov
pop
or
hlt
push
arpl
push
test
cmpb
xor
lret
cwtl
enter
lock
xchg
leave
pop
pop
sbb
sti
mov
xchg
in
cmp
hlt
out
loopne
sbb
mov
add
fmuls
mov
lret
imul
sub
in
cli
sbb
xchg
sbbl
or
mov
aaa
adc
mov
pop
scas
mov
roll
ror
push
cmp
test
cs
adc
test
cmpsb
test
xor
mov
sbb
stc
int
add
pop
ja
push
pusha
dec
mov
out
push
out
sbb
mov
cli
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
mov
shrb
jle
pop
jl
jle
leave
mov
add
add
aad
push
or
int
aad
xor
sarl
xor
add
mov
xchg
adc
out
inc
pop
jnp
push
adc
sbb
xchg
mov
ficomps
pop
push
shll
pop
add
fistps
jle
or
arpl
enter
xchg
sub
xor
cld
hlt
mov
or
mov
in
dec
loope
pop
stos
loope
mov
ljmp
mov
lahf
lret
clc
loope
pop
mov
cmp
xchg
imul
or
add
jl
adc
outsl
cld
jge
out
push
inc
xchg
in
movsb
sbb
popf
adc
aas
or
mov
jmp
dec
sub
mov
jnp
sbb
sub
ret
dec
jns
or
mov
aaa
rcll
cmp
push
add
mov
dec
xchg
aaa
add
int3
xorb
mov
cmc
repnz
iret
sbb
xchg
mov
stc
push
adc
bound
or
adc
xchg
insb
in
jbe
cmc
fisubl
cmpsb
mov
popa
mov
imul
lcall
in
or
mov
push
loope,pn
dec
iret
stc
ljmp
dec
cltd
push
mov
and
xchg
bnd
add
sbb
mov
and
sub
add
mov
nop
fidivrl
dec
jno
dec
xchg
lret
sub
mov
les
mov
mov
inc
and
mov
and
cmp
mov
xlat
stos
cmc
inc
dec
in
adc
popl
sbb
push
push
xor
iret
xchg
ret
push
or
jmp
inc
inc
add
jb
add
sub
test
inc
push
lods
hlt
sbb
push
sub
loope
aaa
jbe
xchg
dec
cmc
dec
repnz
out
xor
add
dec
push
sbb
mov
dec
mov
jno
pop
mov
sbb
daa
nop
outsl
mov
enter
jl
mov
sbb
mov
jno
push
int3
cmp
dec
test
fwait
loope
mov
stos
pop
fidivrs
arpl
dec
inc
icebp
pop
mov
xchg
jno
push
aam
mov
stc
mov
sub
loope
sub
add
mov
and
pop
int
jle
cwtl
inc
scas
mov
sub
mov
fldt
subl
loope
sub
rcl
xor
in
xor
or
cmp
sbb
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
jo
inc
cmp
jle
sub
jle
inc
mov
insb
insl
xchg
fsts
pop
mov
shlb
pushf
add
in
cmp
or
inc
pop
lds
jb
sbb
ss
dec
mov
sub
cmp
insl
sbb
jl
sbb
scas
cmp
cmp
std
jmp
and
xchg
push
pushf
sub
add
jb
lds
loop
or
push
xchg
mov
movsb
test
out
cmp
stc
add
mov
mov
xchg
and
dec
pop
xchg
fnstenv
dec
outsb
shl
xor
jp
or
sbbb
cmp
push
decl
call
daa
nop
add
jp
clc
sub
or
shlb
xchg
cmp
stos
dec
shll
mov
cmp
sub
push
add
sarb
adc
ret
fimuls
stc
sahf
jns
adc
arpl
mov
hlt
xchg
inc
sub
scas
in
popa
pop
sub
xor
movsl
sbb
mov
jg
sbbl
out
jne
movsl
cwtl
insl
test
in
jb
push
daa
mov
cwtl
insl
push
add
push
icebp
fldenv
les
push
ret
subb
jl
punpcklbw
mov
dec
cmp
loopne
push
xchg
push
sub
cmp
xchg
std
inc
lret
cmp
jl
idivl
arpl
mov
xor
mov
mov
mov
add
mov
inc
std
add
insb
sbb
icebp
push
mov
ja
movsl
jl
sbb
sbb
pop
sbb
adc
cmp
cwtl
imul
or
dec
sbb
pop
xor
loop
test
daa
push
dec
pop
push
pop
arpl
jp
mov
out
push
shl
dec
inc
adc
cs
xor
int
sub
or
mov
push
les
add
dec
ljmp
mov
mov
hlt
add
gs
push
arpl
scas
jge
and
movsb
adc
mov
and
jb
pop
cmp
gs
pop
jb
fwait
sbb
ss
shll
dec
cmpsl
jae,pn
pop
mov
inc
sbb
mov
add
sub
in
xchg
ffreep
cltd
push
add
lock
push
cmc
sub
or
dec
xchg
aam
push
lret
mov
xorb
movsb
mov
std
iret
lcall
or
cmp
loop
mov
push
xor
pop
in
daa
jo
arpl
dec
add
dec
faddl
dec
mov
call
push
xchg
xor
push
outsb
inc
xor
cmp
cmpl
pushl
sub
inc
mov
in
dec
jnp
jns
mov
in
xchg
push
sub
xchg
pop
cmc
ffree
fsubrl
xlat
cmpsl
adc
in
xchg
scas
xchg
and
pushf
inc
sbb
je
fcoml
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
lret
filds
outsb
iret
sub
push
fisubl
lock
lcall
add
lods
xor
xor
fcompl
jg
clc
push
lret
ljmp
push
bound
shll
inc
in
rorl
data16
xchg
inc
arpl
jecxz
je
popf
cmp
daa
xor
idivb
enter
mov
add
ljmp
add
cld
imul
fdivp
cmpsb
fwait
or
std
mov
xchg
mov
stos
dec
insb
fsubrs
hlt
inc
add
daa
pop
pop
or
inc
mov
pop
iret
sub
sub
jmp
xor
test
xchg
outsb
sbb
mov
stos
sarb
ss
push
sbb
jp
pop
add
aad
sub
cmp
or
inc
cmpsb
pop
fnstenv
stos
jle
push
cli
test
adc
insl
test
outsl
hlt
jmp
mov
sub
push
and
movsl
in
pop
xchg
inc
stc
sbb
aam
mov
mov
sub
or
jmp
repz
inc
and
popf
sub
fsubrs
es
xchg
cmp
cmp
or
dec
aam
add
push
test
xchg
push
mov
ret
jo
aaa
rorl
or
in
sbb
loop
dec
daa
inc
lods
stc
dec
sub
sub
xchg
adc
jmp
insb
hlt
or
fwait
aaa
dec
xchg
rorb
and
xchg
lcall
clc
inc
and
stc
arpl
jns
pop
sbb
int3
mov
scas
int
dec
fildll
push
movsb
mov
pop
inc
cmc
mov
add
adc
cli
cs
loope
sbb
mov
xchg
imul
and
push
xor
addr16
push
lahf
lahf
dec
mov
test
das
cmp
test
mov
xor
push
push
jecxz
jnp
or
and
mov
lret
ret
clc
andl
push
ret
pop
int3
mov
out
push
cmp
cmpsb
nop
pop
test
mov
pop
pop
add
leave
fiaddl
or
scas
nop
lcall
push
pop
lahf
jg
and
rorb
add
cmp
gs
repz
ds
jg
shll
and
out
and
daa
cwtl
les
dec
rcrb
xor
cltd
pop
jbe
pop
pop
dec
jmp
xchg
fisttps
jmp
loopne
pushf
out
xchg
ficompl
xor
rclb
push
jmp
cmp
jne
jmp
in
mov
subl
ja
mov
leave
shlb
xchg
or
mov
sub
test
sub
xchg
sbb
movsb
xchg
sub
popw
adc
pop
xor
lret
icebp
push
jmp
jne
sub
test
test
mov
add
jo
xor
sub
jle
es
push
and
lret
cmpsb
dec
mov
mov
mov
roll
sbb
adc
rol
loope
dec
pop
dec
mov
ja
sub
cmp
cmc
push
adc
lds
cmp
xchg
and
xchg
xchg
addr16
mov
repz
sbb
adc
js
fcoms
mull
and
fisubs
adc
sub
popa
pop
enter
xchg
stos
out
push
scas
sar
icebp
gs
pop
cmp
push
sbb
jmp
adc
lcall
jbe
add
and
mov
inc
cmp
cmpsl
gs
sub
lock
or
xlat
jo
pop
addr16
push
int
xlat
jge
lea
sarl
push
xor
lods
and
out
subb
sbb
dec
sbb
popa
sub
in
xor
lock
xor
dec
ja
out
in
jb
mov
xchg
cltd
popf
jne
in
leave
flds
cli
enter
lock
call
sbb
jmp
mov
push
adc
clc
stc
loop
jecxz
mov
test
cmpsl
jne
xor
lock
daa
rcl
out
aam
out
pop
xor
stos
cmp
mov
push
push
stc
xor
mov
or
mov
lcall
inc
inc
inc
fistpl
shrl
xchg
out
xchg
push
pop
jp
jae
adc
mov
lret
fistpll
mov
mov
ret
pop
mov
lods
aas
movsb
sub
leave
fsts
addb
xchg
sub
mov
xor
jge
mulb
hlt
cmpsb
and
mov
ja
or
je
jge
sub
xchg
cmp
jo
les
repz
sbb
cwtl
mov
adc
jl
add
rcrb
mov
xor
inc
lret
js
push
popa
jae
lret
stc
or
ss
sbbl
addb
stos
sub
das
loop
ficompl
jmp
loopne
lret
lock
mov
add
repz
and
push
nop
cld
ljmp
imul
call
adc
aaa
xor
cmp
inc
stc
out
fnstenv
or
out
dec
jmp
push
mov
not
adc
push
outsl
loop
out
adc
loope
mov
aam
sub
cltd
repnz
hlt
lods
dec
jp
mov
cld
pop
subb
imul
call
sbb
mov
stos
lret
sarb
dec
dec
scas
xchg
int
push
inc
inc
sbb
and
insb
mov
and
push
popf
cmp
xchg
jg
imul
dec
out
mov
adc
sub
cs
pushf
scas
das
loope
jnp
into
stc
sbb
sub
dec
pop
les
clc
mov
push
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
nop
loope
fwait
push
aas
jle
sub
jle
add
sub
mov
aad
push
das
repz
dec
mov
pop
je
hlt
mov
inc
jns
mov
rcr
stc
lock
scas
sti
ret
xchg
push
and
mov
jno
adc
lods
insb
test
scas
push
push
arpl
dec
scas
mov
and
pop
dec
push
and
mov
ja
loop
xchg
leave
cmp
and
sbb
pusha
cmp
imul
inc
shrb
dec
ret
adc
dec
sub
and
dec
cmp
pop
shll
jb
xchg
fidivrs
adc
ljmp
pushf
jns
add
loop
jnp
push
sbbb
popa
mov
pop
and
mov
fsubrl
jl
pop
stc
push
out
cmp
out
sub
mov
or
mov
pop
dec
adc
jmp
xor
sub
xor
push
cmp
cmp
pusha
mov
push
lods
mov
and
mov
sub
push
jp
xchg
adc
fldcw
cmpsl
les
push
adc
pop
mov
push
sub
loopne
xlat
mov
dec
call
scas
scas
adc
shlb
cmp
add
mov
lcall
mov
push
pop
aad
or
call
aas
decb
push
fmull
lods
stos
aaa
jmp
xchg
cmp
adc
psadbw
mov
mov
fildl
fnsave
sub
cmc
or
xchg
mov
mov
ss
push
rcll
mov
xchg
test
das
fucomi
mov
loop
push
jnp
imul
push
fstpl
stc
test
pusha
mov
push
xchg
ljmp
fistpll
jo
xorb
dec
cmp
mulb
rcrl
sub
pop
xchg
xchg
cmpsl
pop
scas
jne
pop
iret
mov
gs
cs
jge
add
xchg
sahf
sub
pop
lcall
push
sub
adc
push
stc
cmp
or
or
sub
popa
push
lods
ret
movl
es
in
sub
dec
mov
insl
or
add
or
dec
rolb
lret
mov
ficoms
pop
push
jp
push
outsb
jecxz
idiv
call
mov
sbb
cld
int
mov
rorl
mov
xchg
lods
pop
lods
leave
and
push
pop
repz
or
cmpsb
sub
push
pop
jle
cwtl
imul
lret
jbe
aaa
dec
testb
aam
sub
lret
jecxz
in
dec
bound
loope
shr
xchg
faddp
jae
fnstsw
inc
fcoml
add
into
jecxz
scas
stos
lea
fstpt
jb
add
xor
mov
ds
pop
and
add
add
or
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
out
cmp
mov
fisttps
aam
nop
mov
sbb
adc
lds
cmp
or
mov
ficoms
fidivrs
adc
cmpb
inc
mov
inc
mov
mov
lahf
out
adc
std
pop
mov
or
out
push
sarb
xor
cmc
push
fdivl
adc
and
mov
insb
unpckhps
lret
imull
popa
xchg
dec
mov
push
xor
aas
iret
call
sahf
call
lea
cmp
lods
and
mov
js
je
je
popf
inc
lahf
xor
pop
repz
push
cld
inc
pop
imul
cmc
add
add
fnstcw
adc
inc
push
test
fildll
fisubrl
xor
inc
jp
and
xor
inc
xor
pop
jmp
stos
int3
cmpsb
lock
xchg
pushf
imulb
jnp
imul
outsl
mov
or
fcompl
push
push
xchg
or
jne
cmc
add
jnp
test
sub
int3
pop
into
ja
repz
pop
nop
out
push
sbb
and
inc
lds
int
testb
push
addr16
int
mov
aad
mov
andl
and
xchg
mov
adc
xchg
xchg
inc
repnz
cmp
leave
ror
stc
add
loopne
adc
loop
jnp
outsl
or
inc
jmp
ja
jl
xchg
addr16
pop
jmp
fnsave
sub
adc
add
dec
xchg
push
sbb
sarl
sbb
adc
inc
add
roll
push
jge
add
rolb
getsec
inc
add
fiaddl
add
cmp
es
repz
movsl
pop
xor
mov
mov
jle
mov
xchg
push
jg
bound
in
push
cmp
pop
out
pop
bound
cmp
jl
idivl
mov
das
daa
dec
push
jae
das
mul
inc
sbb
or
sub
cmp
lahf
adc
xor
scas
add
test
pop
xchg
std
int3
aaa
pop
xchg
test
cmp
add
ljmp
fcomps
pop
jp
or
dec
ja
test
shrb
jbe
cmp
xor
push
jne
sbb
pop
mov
pop
mov
xchg
xor
ja
jae
adc
daa
xchg
jmp
and
lcall
pop
andb
shrl
setg
mov
aas
xchg
inc
cmpl
test
adc
clc
pop
push
cmp
sbb
lds
lahf
icebp
es
mov
sub
mov
cld
sub
adc
orb
ret
les
pop
aas
sub
cmovb
xor
sub
and
pop
repnz
mov
fcoml
add
cmp
rcll
inc
bound
xchg
sbb
aam
or
jge
mov
je
jae,pn
stos
arpl
fsts
call
add
xchg
cmc
pop
lret
xchg
idiv
sub
mov
add
popa
lret
aad
or
jp
push
pop
xor
pop
lcall
test
jecxz
pop
ja
leave
lret
insb
test
push
call
push
adc
ret
imul
push
lahf
jne
in
pop
ds
sbb
sarb
and
or
insb
bound
and
push
aaa
inc
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
or
popa
js
rcrl
mov
push
clc
add
sahf
mov
cmpsb
mov
mov
lcall
dec
insl
sub
mov
xlat
jne
jae
push
lods
sbb
das
jl
and
aam
pushf
mov
inc
mov
adc
fldenv
sub
pop
jle
pop
pop
xchg
lret
adc
pop
mov
in
and
push
test
addr16
push
std
mov
inc
outsb
push
in
ret
nop
sub
sbb
and
pushf
jecxz
mov
cmpsb
or
push
popa
and
mov
push
xchg
adc
in
fdivs
cmp
fildl
repz
imul
and
rcrb
xchg
sub
pop
repz
pop
jl
sub
jb
cmp
in
ret
ret
lock
ror
cld
ror
ja
into
sub
inc
decb
aad
sti
cmp
sbb
mov
inc
dec
fnstsw
jb
mov
cwtl
sub
xchg
jp
adc
aad
leave
ss
pop
adc
aad
adc
sub
ss
jg
fwait
pop
mov
shll
sahf
out
mov
sbb
cmp
pop
test
xchg
lea
inc
and
cmpsl
dec
mov
popl
rclb
insb
lahf
mull
xchg
jb
enter
repz
aas
outsl
sub
test
dec
cwtl
sbb
mov
push
mov
dec
fcmovnb
add
cwtl
or
mov
sub
bound
test
jne
call
test
jmp
and
in
popa
push
lret
xchg
add
ror
les
mov
and
dec
insb
repnz
dec
in
sub
and
inc
scas
mov
test
xor
adc
mov
lea
inc
mov
adc
mov
gs
outsl
outsl
shl
fwait
and
bound
mov
out
dec
adc
cld
lahf
outsb
loopne
mov
ficoml
jl
xchg
pushf
push
lret
sub
pop
stos
sub
lret
imul
fst
pop
sbb
leave
sub
mul
xchg
fisttpll
mov
push
orl
cmp
pop
lds
ret
xchg
in
std
or
pop
mov
loopne
cld
loopne
sub
pop
jbe
jg
aaa
mov
ljmp
lea
dec
sbb
jnp
and
xlat
inc
cmp
sbb
push
mov
pushf
cmpl
mov
jg
scas
or
loopne
push
std
mov
outsl
fsubrp
xchg
imul
xchg
cmp
mov
sub
mov
addr16
adc
xchg
pusha
fnsave
cmp
push
rcrl
sbb
add
dec
sahf
mov
mov
out
fidivl
sahf
jle
mov
push
es
add
sub
stos
icebp
das
sbb
shll
out
push
pop
fsts
push
ds
sbb
mov
mov
push
stos
sub
dec
or
cmp
popf
orb
loopne
xchg
test
rcll
loopne
aaa
xor
lahf
fidivl
dec
and
stos
ss
pop
push
mov
ret
call
into
inc
xor
mov
lock
inc
in
sub
test
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
mov
jle
add
mov
lret
dec
or
roll
lret
mov
stos
mov
inc
mov
add
out
pmaxsw
flds
xchg
imul
push
movsb
dec
idiv
dec
dec
test
cmp
mov
adc
ss
mov
lock
mov
jne
xchg
push
les
jae
mov
gs
pop
nop
sbb
add
pop
mov
daa
inc
call
or
sbb
sbb
dec
pop
mov
mov
das
jo
outsl
hlt
jbe
adc
mov
mov
xchg
pop
jg
inc
cmp
cmp
lret
mov
cmpsb
xchg
sti
loop
xchg
push
pop
pop
es
shlb
loope
sbb
cmp
js
out
mov
mov
mov
xchg
mov
mov
jp
lea
jge
dec
xchg
jecxz
or
lcall
int3
mov
xor
sti
mov
mov
lods
jecxz
or
addr16
add
xorb
jae
pop
nop
pushf
les
adc
icebp
insl
mov
sti
nop
cmpsl
cmp
in
nop
inc
pop
lahf
adc
out
cmp
iret
in
and
movsl
xchg
les
pusha
shl
or
lret
cmp
push
shrb
rep
jle
fwait
xor
ror
xchg
sbb
cwtl
jae,pt
data16
daa
rolb
movsb
pop
dec
gs
aaa
ret
jecxz
push
sub
stos
xor
mov
xor
dec
adc
shlb
int
sbb
dec
inc
fidivrl
lret
xchg
cltd
push
mov
dec
cwtl
lods
int3
jmp
punpcklbw
mov
dec
leave
mov
sti
add
fwait
dec
cmp
sbb
add
scas
xorb
ja
jns
adc
and
xchg
pop
push
loop
sti
xorl
xchg
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
mov
adc
add
movsb
jp
pop
xchg
repnz
xchg
mov
mov
adc
pop
rcl
pop
sub
dec
xchg
sub
jecxz
pop
loopne
movsl
xchg
scas
jl
aad
scas
inc
xchg
mov
roll
ret
adc
fildl
add
dec
frstor
cmpsl
push
mov
mov
outsl
pop
xor
jecxz
je
loopne
test
pop
stos
mov
imul
sub
push
aad
or
mov
inc
xchg
outsb
push
mov
lds
inc
mulps
inc
push
mov
out
adc
or
adc
ds
sarl
lds
push
adc
pop
adc
mov
iret
jmp
cmc
adc
decb
mov
nop
in
aaa
clc
push
ljmp
pop
sub
cmp
cwtl
mov
ljmp
jg
mov
mov
lds
sbb
iret
push
xchg
into
push
aas
cmp
es
mov
dec
stc
mulb
inc
cmp
sub
jae
fdivrl
cmpsl
loope
sub
mov
mov
ror
sbb
mov
sbb
jle
push
inc
notb
aas
lret
push
mov
and
mov
cs
aas
mov
pop
outsl
push
arpl
push
pushf
xor
jp
rcr
mov
cmp
sub
dec
xchg
jge
addl
loopne
add
gs
jmp
es
mov
push
pop
das
lahf
and
sub
push
sub
popf
mov
jmp
mov
cmp
loop
or
cmp
lret
or
jbe
scas
adc
xchg
cmpsb
xorb
imul
adc
cmc
mov
xchg
add
fs
jno
cmp
lret
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
sti
dec
add
jle
add
mov
rol
push
ss
inc
jle
add
cli
push
stos
imul
in
aaa
xor
pop
bound
lretw
fimull
pushf
mov
push
inc
std
in
adc
popf
and
adc
loope
push
dec
inc
inc
xlat
jg
les
mov
mov
stos
inc
aas
add
loope
cs
mov
cmpsb
sbb
out
test
std
or
out
inc
cmp
test
cmpsb
or
add
stc
out
mov
pop
loop
int
adc
cmp
movsb
jp
sbb
mov
mov
stos
sbb
add
pop
lea
cs
sti
inc
shlb
mov
cmpsb
add
mov
or
adcb
cltd
iret
push
xchg
in
jg
insl
mov
gs
jns
imul
hlt
sbb
push
cmp
mov
rclb
lock
push
pusha
push
outsb
loopne
sbb
pop
jg
sarl
mull
rol
or
loop
clts
xchg
ja
xor
xorb
mov
outsl
faddl
pop
aam
xchg
cli
adcb
xor
push
aam
pop
mov
mov
sub
lods
out
scas
scas
jmp
dec
loopne
imul
loop
int
fisttps
jo
outsb
sbb
dec
pop
pop
jmp
jl
inc
mov
inc
adc
out
f2xm1
es
int
adc
xchg
scas
icebp
adc
andl
push
inc
jg
jl
pusha
into
enter
dec
xor
dec
cld
scas
mov
push
movsb
test
mov
push
push
push
daa
jae
push
mov
lock
ficoml
push
jmp
outsb
mov
or
in
mov
mov
shlb
mov
das
mov
pop
inc
and
push
mov
ss
jle
and
sub
xor
adc
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
ds
mov
sub
jle
add
mov
enter
es
mov
cmovo
loopne
push
sbb
xchg
mov
jae
pop
push
addl
dec
inc
xor
xor
int3
or
push
stos
insl
in
add
inc
fldt
add
mov
js
and
fstl
fistl
cmc
loope
cwtl
in
cmp
dec
sub
icebp
lcall
sbb
repnz
vmwrite
jl
sarb
push
andl
jnp
jle
in
lea
dec
hlt
out
das
sub
lea
shrl
or
jb
popa
push
mov
sbb
mov
push
inc
in
stos
sub
dec
jmp
push
add
jb
jae
sub
outsb
xchg
in
fs
daa
lods
inc
push
testb
add
stc
addl
push
push
lret
imul
addr16
jno
or
ror
dec
nop
roll
dec
jge
paddsw
std
jmp
jnp
lret
mov
jnp
outsb
jbe
stos
gs
in
sbb
imul
pop
cltd
add
jge
rcrb
or
xor
lret
dec
cmc
dec
inc
dec
jns
test
mov
jmp
inc
mov
push
adc
or
dec
xor
outsb
filds
mov
mov
into
psraw
jb
arpl
sbb
push
dec
xor
xchg
inc
xchg
test
sbb
addl
cmp
push
adc
inc
push
fisttpl
stc
add
and
icebp
into
jecxz
and
ljmp
pop
je
sbb
jae
push
arpl
mov
lds
cmc
and
sub
lret
bound
pop
mov
mov
insl
pop
popf
xorl
pusha
mov
and
enter
sub
inc
scas
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
jle
lret
and
jle
ss
cltd
popl
rcrl
push
fdivl
adcl
out
inc
or
fwait
jnp
sarl
dec
push
inc
sbb
gs
cwtl
lods
adc
cmpsb
pop
shlb
and
and
dec
mov
dec
insl
xchg
lea
imul
aaa
mov
pop
addr16
sbb
sub
into
jp
data16
pop
addr16
lret
test
cmp
cs
fsub
fldenv
fistpl
negb
pop
add
call
ljmp
lods
out
mov
mov
addr16
jne
mov
movsl
mov
cmpsb
adcl
pop
fistl
jb
lcall
push
push
loopne
and
push
je
ret
fsubrs
and
xorb
sub
stos
enter
pop
ficoms
imull
and
xor
push
xor
les
sub
mov
inc
mov
mov
xor
js
cmp
loopne
sbb
es
cmpsl
out
aam
push
mov
icebp
pusha
mov
jecxz
pusha
dec
loopne
add
or
in
or
movsb
mov
jae
mov
incl
repz
mov
out
cmc
repz
ljmp
iret
add
iret
aaa
xor
test
sub
jl
add
sub
sbb
call
or
pop
push
dec
stc
adc
fdivl
pushf
sarl
cmc
cmp
and
xor
sbb
fldt
push
jb
jl
xchg
outsl
in
arpl
les
cmp
add
push
push
fisubrl
ljmp
jo
adc
dec
mov
jno
add
imul
test
sub
sub
adc
xchg
rcr
dec
xor
fs
inc
pop
dec
out
ljmp
dec
rol
call
fsubrs
pop
and
mov
ret
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
inc
cmp
mov
enter
jl
jle
cli
cmp
dec
inc
inc
cmpsb
jne
mov
xchg
push
testl
orl
pop
test
dec
ret
outsb
xchg
cmc
cli
pushl
js
xchg
scas
loope
dec
add
dec
int3
xor
adc
push
call
iret
ljmp
mov
movsb
popa
pop
aas
jmp
and
mov
fstpt
add
out
adc
insl
call
loopne
cs
add
hlt
xchg
add
jno
mov
and
jmp
in
sub
loopne
aas
mov
cwtl
loopw
out
push
and
idivl
and
cmp
push
subb
outsb
lahf
aad
mov
insl
or
and
and
push
sub
adc
push
sar
sbb
std
xor
and
jp
inc
sbb
lock
add
aam
in
std
sar
xor
je
mov
or
aas
dec
inc
fldenv
shrb
dec
push
cli
pop
movsb
mov
and
xchg
xor
loop
jecxz
sub
mov
loope
sub
mov
das
xor
mov
xchg
and
inc
daa
insb
rolb
outsl
and
push
push
xor
enter
adc
xchg
out
scas
adc
pop
add
lods
xchg
faddl
in
imull
mov
sub
xor
rcl
push
imul
adc
arpl
jb
mov
stos
repnz
ds
xor
inc
insl
sub
pop
decb
xchg
inc
dec
enter
js
arpl
das
sbb
mov
repnz
cmp
jg
int3
frstor
dec
adc
scas
nop
xor
pushf
xor
jnp
rcrb
cmpsb
cmp
xchg
dec
loop
sbb
sub
fcoml
lods
push
pusha
dec
fs
jno
sbb
call
mov
gs
out
mov
adc
sti
ss
add
out
aaa
inc
add
cmp
jmp
pop
push
jg
xor
add
jnp
jle
and
jle
jns
or
mov
addr16
or
xor
lea
xor
add
or
xor
arpl
orb
jmp
pop
test
cmpsl
orl
cld
jb
test
and
xchg
enter
scas
sub
cs
inc
push
cmp
or
inc
jbe
mov
and
stc
fisttps
xchg
pop
int
aad
jae
mov
dec
sti
xor
mov
and
leave
and
enter
mov
cmp
pop
push
xchg
and
loopne
out
xchg
mov
test
xchg
jns
movsl
inc
mov
lock
outsb
decl
jae
push
fbstp
arpl
mov
pushf
fists
ffreep
adc
rorl
fidivrs
xchg
dec
cmp
and
xorb
cld
cmc
lcall
pop
xor
test
pop
push
xlat
xchg
fs
add
je
lret
inc
jl
mov
cli
idiv
ret
lock
adc
xor
push
test
push
enter
out
and
iret
lods
cltd
ljmp
icebp
pop
jg
aad
aad
fstps
out
shlb
lret
adc
lret
outsl
call
inc
call
pusha
sahf
xor
in
inc
adc
sub
mov
jns
mov
add
fwait
dec
mov
inc
xchg
pop
cltd
cmp
movsl
fidivl
pop
inc
cmp
clc
ror
lahf
popf
cmp
mov
aad
in
mov
lcall
push
leave
nop
out
decl
movsb
mov
insb
sbb
jg
jbe
js
into
into
cltd
mov
cmp
pop
mov
mov
pop
int3
loopne
scas
cmpsb
dec
or
or
popa
adc
cmp
xchg
xor
lds
test
mov
mov
aaa
or
out
es
mov
outsb
mov
sahf
mov
insl
imul
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
loopne
aam
jle
jl
jle
xchg
cwtl
xchg
pop
ljmp
jo
daa
push
fnstenv
mov
mov
out
insb
out
into
ror
out
push
and
cmc
cmpsl
ret
sbb
mov
pushf
cmp
sbb
fstpt
mov
xor
xchg
mov
or
xchg
adc
test
fwait
pop
mov
mov
and
loopne
adc
ss
adc
out
ss
loope
into
dec
lods
pop
in
iret
ljmp
insb
jp
icebp
sub
shr
pop
insb
pop
fldt
insl
daa
fiaddl
call
xchg
cmp
ss
fldt
xchg
inc
divl
or
sti
cwtl
xor
mov
aad
dec
cwtl
cld
push
data16
jge
gs
push
je
inc
adc
sarb
pop
dec
test
pop
mov
andb
mov
inc
insb
cmc
insb
mov
push
jns
cld
jecxz
pop
xor
inc
ret
aad
stos
mov
dec
subb
mov
mov
cmp
lods
xchg
inc
jno
cwtl
lods
lds
pop
mov
mov
std
mov
pop
ljmp
push
mov
add
in
loope
cli
fptan
ret
jo
or
push
mov
incl
dec
push
sbb
xor
push
dec
lock
push
cld
and
bound
or
sbb
lcall
add
into
cld
call
mov
adc
dec
xchg
push
pop
push
ja
push
mov
pop
jne
sub
not
or
push
adc
pusha
cmp
pusha
push
repnz
push
data16
mov
or
jecxz
aam
out
cmp
mov
dec
xchg
lea
cmpl
xchg
loop
xchg
mov
lds
loope
jge
scas
stc
or
sarb
pop
adc
add
pusha
mov
cmp
fstps
pop
xchg
jno
ss
inc
pop
rclb
jle
imul
clc
out
mov
cld
mov
pop
loop
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
mov
sarb
and
jle
sub
data16
lock
icebp
fwait
inc
or
divb
or
push
jg
xchg
lahf
mov
std
lods
xor
mov
ror
rcll
mov
pop
movsl
lcall
or
scas
mov
dec
stos
push
mull
push
fdivs
fucom
imul
mov
mov
mov
cmp
sub
cmp
out
in
xor
mov
push
hlt
mov
imul
jnp
pop
lcall
dec
jbe
mov
cmp
or
xor
xchg
push
xchg
test
icebp
fisubrl
pop
outsl
inc
xchg
or
sbb
icebp
dec
cwtl
stos
outsb
das
cmp
and
lret
mov
movsb
sub
mov
fdiv
imul
mov
clc
leave
push
jmp
lea
stos
xor
cld
test
data16
mov
push
in
jo
or
mov
xchg
int3
stc
mov
xor
test
push
push
scas
mov
cmp
subb
mov
adc
pop
test
les
push
jl
idivl
fucomp
sub
push
jecxz
cmp
psadbw
inc
or
adc
push
xor
cmpsl
push
xchg
cltd
dec
arpl
lods
mov
std
xor
outsb
add
lods
dec
cld
pop
fsts
cmp
into
adc
lea
nop
push
mov
scas
jp
push
inc
jp
dec
lahf
mov
jae
lret
inc
mov
pop
jecxz
in
push
lds
dec
repnz
xchg
pop
stos
add
xorl
int3
stos
inc
jne
mov
movsl
and
shll
popf
nop
ficoms
mov
mov
mov
sbb
arpl
or
std
popf
cmp
jb
or
mov
int3
dec
ja
cmpsl
pop
rorl
test
mov
jae
or
loop
ret
fidivrl
or
xlat
push
xchg
add
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
dec
push
mov
sub
sbb
lahf
rol
int
fldl
push
add
pusha
push
btr
aad
fldenv
pushl
jae
cmpsl
cld
mov
add
pop
jg
sti
lds
fiadds
dec
or
daa
fidivrl
xor
cmc
fildl
jg
add
push
imul
jmp
cmp
in
or
ret
idiv
cs
sbb
dec
sbb
push
loope
cmc
sarl
stos
add
mov
dec
xor
sbb
lods
aaa
in
js
jmp
jecxz
dec
testb
test
jle
or
sbb
cwtl
mov
mov
and
cli
sbb
loop
leave
inc
stc
jmp
les
push
cs
pushf
imul
repz
daa
jne
in
shrb
insl
push
movsb
jle
loop
pop
xchg
out
out
lahf
arpl
push
jmp
sbb
push
fs
xchg
xchg
xchg
scas
outsb
xor
test
add
sbb
push
loop
mov
jg
imul
outsl
push
je
cbtw
lods
adc
je
bound
iret
push
jle
imul
enter
cltd
into
adc
mov
and
addr16
leave
repz
mov
out
lods
jg
or
loopne
xchg
ljmp
cmpsl
or
mov
sbb
int
inc
aad
into
jmp
adc
sbb
push
testb
pop
push
push
xchg
jno
mov
sbb
pop
jmp
popf
into
pop
and
aaa
scas
push
xchg
aad
int
hlt
pop
hlt
arpl
shrb
xchg
mov
cld
mov
push
xor
push
adc
xorl
ror
jbe,pt
sub
jge
or
cmp
pushf
mov
mov
sbb
je
pushf
sahf
cmp
sub
push
das
xor
jl
repz
inc
cmpl
sti
rcrb
xchg
jmp
and
push
pop
push
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
mov
jb
fistpll
and
jle
test
filds
mov
pusha
jp
pop
jmp
movsb
pop
arpl
out
mov
pushf
gs
mov
addb
jge
jecxz
imul
insl
mov
mov
inc
mov
inc
pop
jns
ror
jns
jo
xlat
push
xchg
idivl
xor
jae
push
jbe
and
mov
nop
jns
nop
push
cmpsb
mov
jecxz
mov
mov
sbb
sub
lods
sbb
adc
inc
les
mov
outsl
inc
cmp
out
mov
cli
cwtl
insl
rcll
sbb
mov
mov
xchg
inc
inc
mov
xor
xchg
pop
push
aas
mov
lcall
std
sub
dec
lret
enter
or
arpl
adc
lods
int
es
push
or
push
xor
hlt
sub
notb
jl
add
pop
jno
cmp
mov
push
cltd
pop
int3
jb
mov
dec
fldl2e
sub
and
sbb
bound
std
jb
or
cli
pop
int3
fidivrs
jns
popa
jbe
stos
jns
or
cltd
sub
adc
cmp
xor
rorb
cli
and
push
cmpl
xorps
adc
shlb
es
icebp
repnz
das
dec
lods
mov
sti
rcrl
adc
xor
jb
test
testb
idiv
jl
loopne
sub
lahf
pop
sahf
addr16
aaa
sub
ljmp
mov
repz
jp
jns
imul
lock
mov
inc
hlt
add
cwtl
cli
mov
sbb
jo
arpl
fst
push
test
cmp
fwait
jmp
and
cmp
cmp
mov
enter
pop
push
stc
loope
jno
lcall
rcl
scas
in
cmc
xor
add
mov
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
in
or
and
jle
xor
popl
call
aas
cmpsl
outsb
out
negb
fwait
insl
dec
stos
add
dec
push
cmp
adc
inc
iret
push
push
sbb
sbb
dec
fs
std
add
sub
jne
mov
sarb
and
imul
jp
dec
push
inc
push
ss
adc
sub
decl
push
sub
aas
jle
pop
sbb
int
or
and
cmp
fldenv
xor
jnp
test
out
dec
out
inc
pushf
nop
jns
iret
aas
shlb
out
movsb
int3
cmp
mov
ret
push
add
sbbl
mov
bound
pop
insb
mov
ret
je
push
aaa
pop
leave
xchg
cmp
and
ss
xlat
inc
aas
lahf
arpl
mov
in
jmp
or
jle
push
jae
in
push
push
xchg
in
mov
mov
and
cmc
pop
jno
hlt
dec
scas
movsb
fmull
mov
repz
pop
pop
out
lret
call
adc
or
rep
push
inc
pusha
jecxz
or
cwtl
fildll
cmc
and
test
stc
xor
cmp
xor
mov
sub
ljmp
pop
pop
test
inc
cmpsb
lahf
popf
push
bound
push
call
imul
xchg
sub
ds
adc
cli
into
sar
aas
mov
mov
add
xor
in
je
mov
jbe
mov
xchg
pop
sub
cs
push
mov
pop
mov
nop
jae
inc
add
fists
mov
fmull
pop
mov
ret
jbe
lds
test
loop
cld
and
pmulhw
or
inc
jne
pop
cli
fwait
pop
inc
fldt
in
aas
test
mov
push
les
test
test
push
add
mov
push
test
inc
mov
mov
out
push
and
ds
inc
add
add
xchg
ljmp
clc
ljmp
fstpt
and
jle
cwtl
sub
jo,pn
pop
sub
imul
std
rcrb
hlt
xchg
daa
sbb
xor
adc
test
push
jae
cmp
sbb
insb
fxch
jnp
aas
or
jb
loopne
sbb
loope
cmp
jle
repz
sbb
mov
enter
sbb
shl
test
mov
sahf
xor
movb
sbb
bound
daa
dec
aaa
pop
fwait
push
fdivrs
in
loopne,pn
ss
rcl
xchg
sbb
mov
pop
out
loop
pushf
enter
lcall
loopne
aad
ds
adc
stos
mov
sbb
jnp
or
xor
jl
iret
aad
fimuls
mov
xor
cmpsb
sub
add
jnp
and
fsts
dec
xchg
jge
enter
adc
fldl
pop
enter
sbb
jns
sahf
cmp
ss
fists
mov
ljmp
dec
mov
mov
fmul
sarb
orb
imul
mov
std
or
sahf
outsb
pop
and
mov
rcrl
decl
fdecstp
sub
xchg
icebp
pop
aam
push
fprem
and
add
cmpsb
mov
int3
movsl
inc
jns
lret
jl
inc
sti
mov
lds
sahf
aaa
mov
fld
add
aas
fdiv
sbbb
jl
outsb
push
cmp
xorl
xlat
cmpsb
rclb
dec
or
mov
sbb
push
mov
dec
pusha
cs
pop
mov
lock
jne
or
mov
fisubrl
adc
push
icebp
lods
push
sub
subl
mov
or
inc
sarb
cmp
xor
jbe
xor
out
cmpsb
xchg
xchg
jns
push
test
cmp
sbb
xchg
fcompl
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
inc
dec
push
mov
jle
imul
loop
mul
inc
test
push
mov
jnp
movswl
out
movsl
fdecstp
dec
add
ja
dec
ss
repnz
test
add
in
lret
mov
test
jg
xor
xor
sub
push
push
mov
cmpl
repnz
shlb
stc
imul
dec
fistpll
lea
pop
stc
add
jecxz
push
testl
lret
lock
xchg
inc
aaa
test
add
adc
mov
mov
pop
jb
add
inc
lock
mov
sbb
dec
jge
imul
aam
push
test
hlt
fwait
addr16
ficoml
mov
xor
adc
sub
xchg
jnp
lock
xchg
mov
or
mov
inc
insl
pop
in
js
jg
push
movsb
xlat
dec
xor
inc
xor
push
ss
dec
adc
dec
push
aaa
in
push
arpl
testl
mov
cld
out
sub
fcompl
decb
push
jbe
mov
push
jecxz
sbb
push
popl
cmp
mov
mov
jecxz
xchg
mov
aaa
dec
or
stos
mov
sbb
imul
ljmp
enter
aam
adc
fistps
sub
add
push
jno
sbb
seta
jmp
mov
les
jns
insl
inc
xchg
mov
mov
in
jae
icebp
shll
xchg
push
cmp
add
inc
cltd
out
in
outsl
mov
out
xchg
mov
in
outsb
sbb
or
adc
mov
std
push
xor
cmp
leave
mov
mov
jbe
dec
push
imul
daa
in
jecxz
sbb
mull
inc
mov
jg
jae
jns
jle
push
xchg
or
aas
enter
aam
mov
lock
dec
mov
loopne
cmpsl
push
fisubs
adc
sarl
push
push
sbbl
jmp
lds
popa
mov
fisttpll
and
cmp
xchg
jae
mov
sbb
sub
push
add
cmpsl
sbb
sub
dec
scas
mov
and
jbe
out
mov
push
mov
not
test
push
or
and
sub
cmp
jns
cli
mov
movsl
jle
jle
jecxz
xchg
leave
sub
out
lahf
aam
sbb
or
out
inc
push
mov
mov
popf
in
fistpl
jne
scas
push
pop
mov
xor
mov
push
fisttpll
fsubs
inc
test
movsb
jl
jmp
cmp
mov
cmpsl
inc
mov
fiaddl
add
jnp
or
hlt
inc
imul
popf
out
outsl
mov
test
adcb
repz
pop
xchg
lret
mov
mov
outsl
clc
pop
mov
mov
cmp
int3
loop
shll
out
in
jbe
loop
ss
jle
xchg
pop
mov
sub
mov
cmp
ficompl
cmp
xor
push
stos
add
addb
or
and
and
nop
mov
ds
sbb
insl
xor
and
sar
int3
mov
imul
test
xchg
movsb
xchg
and
ss
jmp
fwait
add
add
mov
addps
sbbl
cmc
jbe
xchg
add
aam
scas
xlat
fs
incl
adc
sub
mov
adc
jno
iret
push
in
nop
insb
xchg
cmp
push
movsl
je
mov
cwtl
test
push
ror
fnstcw
mov
pop
mov
out
adc
cli
and
or
cmc
test
push
or
add
stc
sub
mov
jae
cs
or
mov
js
mov
ja
aaa
push
sti
lock
orl
push
jp
lret
aas
xchg
aas
stc
mov
ja
cmp
push
aad
dec
sbb
stc
sti
sti
sub
sub
dec
sub
push
and
xchg
adc
jecxz
add
cld
rolb
daa
insl
shlb
jle
xor
push
mov
add
out
add
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
adc
push
sarl
jle
cmp
rcrb
mov
lret
xchg
into
out
out
iret
or
bound
lahf
mov
ja
cmpsb
pusha
dec
lea
icebp
xor
sub
jbe
ret
cmp
lcall
int3
xchg
xchg
fmulp
dec
mov
mov
inc
cmp
or
das
jb
cmp
rcrl
cmp
clc
cmpsl
lret
jno
out
inc
push
fidivs
push
jle
cwtl
mov
jnp
js
mov
jae
add
call
push
movsl
fcmove
jb
push
mov
loopne
popf
add
jbe
outsb
inc
leave
fwait
aam
stos
loop
jnp
gs
pop
adcl
mov
jecxz
cmp
push
mov
xor
in
xor
ja
mov
out
mul
jmp
pop
mov
mov
cltd
cli
daa
test
insl
pop
mov
inc
test
int3
std
and
sahf
shlb
cmp
cmp
and
or
mov
sbb
es
cmpb
sub
int
out
and
insl
stos
jp
ficompl
fidivrs
rorb
int
sbb
dec
fistps
mov
stos
jl
pop
movl
push
mov
movsb
xor
loopne
jno
outsb
sub
insl
outsb
imul
in
stos
add
lret
arpl
jmp
jnp
mov
and
std
jne
sbb
popf
sbbl
out
add
ficoms
lock
push
lea
adc
js
pop
cmp
adc
call
cmc
bndldx
adc
xchg
fdivl
arpl
jno
lods
jecxz
stos
add
cld
mov
inc
and
and
int3
movsb
jmp
mov
cmpsl
xlat
jns
fwait
shll
loope
mov
fs
pusha
inc
push
pushf
pop
mov
or
outsb
inc
sbb
lock
daa
loop
shlb
int
out
jnp
xchg
sub
arpl
cmp
cmc
movsb
xlat
pop
jbe
or
aad
mov
mov
jne
in
lock
iret
pop
inc
stos
ljmp
inc
add
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
cltd
rcr
das
and
jle
jl
jle
pop
push
popa
mov
inc
fnstenv
push
inc
mov
xchg
sbb
aad
jno
mov
mulb
rep
sub
fwait
div
adc
lret
xchg
sarb
scas
cmp
adc
cs
insl
push
sbb
jl
lods
xorl
and
pop
mov
lods
rorl
daa
stos
mov
push
push
fnstenv
xchg
mov
std
movsb
add
pop
or
mov
fnsave
vpshufhw
jle
pop
adc
imul
mov
inc
loopne
cmp
xchg
loop
lods
sub
mov
mov
cwtl
nop
js
xor
call
sub
mov
mov
adc
or
fisttpl
das
jl
pop
ret
mov
inc
test
sub
into
stos
add
sysret
inc
sahf
bound
push
rolb
sbb
movsl
jns
pop
pop
add
iret
cmpb
xchg
pop
adcl
repz
xor
loope
sbb
jne
sub
pop
sbb
or
and
in
dec
pusha
je
int3
mov
rorb
inc
popa
xor
mov
mov
and
pop
mov
dec
adc
cmp
mov
pop
sub
out
mov
ror
pop
cli
ror
and
mov
pop
mov
stos
idivb
inc
stos
jmp
xor
mov
enter
fmuls
js
adc
scas
jno
push
sub
mov
xchg
push
inc
inc
rol
fmul
sub
dec
sbb
les
fldenv
lock
out
xchg
ss
insl
cmpsb
std
jno
ja
xlat
dec
jmp
or
lock
loope
iret
sub
xor
mov
adcb
xor
jne
xchg
and
sbb
bnd
pop
and
cmp
xor
inc
mov
xchg
cmp
inc
jecxz
push
xchg
loope
mov
pop
mov
int3
ja
pusha
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
call
out
jle
cmp
stos
addl
mov
dec
ret
lods
fisubs
inc
insb
cmp
aas
stos
shrb
pop
shlb
inc
or
jbe
pusha
mov
cmp
dec
jmp
pusha
scas
sub
nop
inc
bound
lods
stos
or
stos
sub
out
adc
mov
jo
rcr
xor
xchg
add
mov
adc
jns
call
neg
push
hlt
sbb
subb
in
divl
jmp
mov
pushf
das
jecxz
mov
push
cli
lahf
jge
aam
mov
mov
sub
lds
mov
push
sarb
mov
test
outsb
jp
nop
pop
push
sub
push
pusha
ljmp
ja
adc
jecxz
pop
dec
sub
rcll
lret
or
inc
fwait
inc
fiadds
addb
and
pop
or
sbb
cld
aas
xchg
xchg
mov
in
and
rcll
jae
popl
sub
jnp
stc
cmp
xchg
push
xor
push
xchg
mov
xchg
fnstenv
xchg
arpl
push
loope
xchg
xor
shl
fisttps
das
nop
stc
and
cli
lea
lods
xor
sbb
xchg
push
and
bound
shr
or
xor
sub
adc
jns
jmp
sub
add
bound
in
mov
fstp
or
mov
sub
add
andps
jae
xchg
shlb
insb
sbb
daa
push
xor
popa
int3
jo
push
inc
mov
and
xor
scas
dec
xor
dec
pop
mov
inc
xchg
push
mov
adc
int
js
rorb
mov
aam
xor
push
jl
out
mov
add
in
xchg
lock
and
bnd
jo
lea
xchg
pop
lea
scas
xor
xchg
test
mov
cmp
push
lods
fnstsw
ljmp
adc
jecxz
fldenv
aas
fidivl
and
push
jl
divb
mov
mov
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
mov
jle
jl
jle
stc
and
mov
imull
pop
into
add
xor
sub
mov
xchg
mov
and
shlb
sbbb
test
adc
mov
fs
insl
adc
int3
imul
ljmp
test
inc
cmp
pop
leave
fcoms
push
mov
push
inc
imul
jae
push
adc
cmpsb
push
xor
imul
arpl
int
movsl
int3
insl
dec
mov
das
cld
inc
testl
sbb
jae
and
fsubrs
mov
cwtl
xchg
loope
mov
lds
push
jnp
leave
arpl
and
aad
pop
imul
sbb
pop
sbb
pop
adc
xor
aas
enter
shrb
sbbb
loope
ljmp
jge
push
push
dec
mov
in
test
cwtl
testb
inc
adc
fsubrs
daa
int
scas
sub
xchg
cmp
jge
or
stc
xor
dec
repnz
mov
pushf
add
push
int
adcb
and
xlat
jmp
dec
arpl
rcrb
pop
or
imul
movsb
in
xor
cmp
mov
dec
xchg
push
mull
sbb
sub
jle
push
xchg
repz
andl
mov
mov
outsl
mov
jmp
sbbl
in
adc
ss
cld
or
xor
or
jo
pusha
popa
xchg
cmp
scas
xor
inc
mov
daa
pop
fistpl
repz
xchg
enter
stos
mov
mov
dec
inc
xchg
sub
cwtl
repz
mov
ret
arpl
inc
stc
xor
out
loope
out
jno
out
insb
sbb
clc
sub
andb
adc
out
fimuls
stc
or
test
mov
jle
or
mov
aaa
int
adc
clc
ficomps
push
repnz
inc
and
sbb
jno
sbb
hlt
dec
out
cli
mov
fwait
sbb
mov
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
idivl
jle
cmp
adc
pop
mulb
iret
xchg
into
sbb
xorl
dec
cmp
push
stc
xchg
or
stos
clc
in
dec
js
add
add
inc
push
inc
push
repnz
test
stos
fcmovbe
adc
sbb
inc
in
arpl
dec
xchg
rorb
sub
lret
cmp
cmp
stos
push
mov
lret
add
rorb
xor
or
xor
repnz
pop
rol
mov
pop
movsl
pop
lcall
sub
into
inc
jno
inc
sbb
add
ds
and
or
sbb
xor
adc
popa
jo
enter
lret
cmp
and
inc
repnz
dec
fists
insb
std
mov
pop
xchg
mov
jbe
sbb
mov
mov
ja
sbb
cmpsb
push
in
xchg
and
dec
bound
cmp
sbb
lods
xor
sbb
outsl
cmc
xor
dec
adc
mov
popa
lock
push
pop
leave
into
test
lret
adc
dec
out
out
pop
or
sub
jnp
xor
lea
sub
adc
test
sub
call
mov
sub
or
lret
jge
loopne
testb
mov
pop
cmp
lahf
int3
cmp
and
enter
add
shll
icebp
or
cmp
dec
repnz
sarl
addr16
sarb
xor
stos
jb
fsubrl
ss
jns
or
out
push
jbe
imul
clc
fdiv
adc
xchg
lock
cltd
test
sub
imul
xchg
push
xchg
fstpt
add
fs
adc
or
push
aas
idivl
or
fs
cs
rorl
pusha
loopne
mov
xlat
pop
ret
add
adc
faddl
or
sub
mov
enter
or
imul
add
je
add
out
aaa
inc
add
add
add
leave
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
aaa
or
or
xchg
dec
or
test
aaa
add
pop
fimuls
addb
clc
mov
mov
lret
mov
jmp
pusha
jge,pn
mov
jns
xor
mov
adc
xor
push
jo
sub
lret
shlb
or
dec
xor
adc
das
inc
cwtl
pop
cmp
andb
inc
bound
test
mov
sbb
pop
cmp
dec
lods
scas
outsb
jnp
loope
sub
icebp
adc
stos
dec
fstpl
pop
pop
pop
addr16
nop
cld
mov
repz
cs
fldenv
push
shrl
ja
or
enter
xor
cwtl
or
in
frstor
pop
aas
fisubrs
mov
add
cwtl
movsl
shlb
mov
sub
adc
dec
add
push
lds
sbb
je
nop
xchg
mov
cmc
jmp
in
pop
daa
jmp
cmpsb
cli
ja
pop
adc
push
mov
lea
in
movsb
or
subl
add
call
push
loop
pop
jbe
adc
lods
sub
jae
mov
adc
sbb
jb
icebp
xchg
sub
pop
cmpsl
inc
adc
enter
sti
stos
jnp
outsl
pop
jmp
sub
adc
test
ja
sti
dec
dec
aas
inc
pop
aad
ds
xchg
inc
or
mov
pop
push
dec
clc
cmpsb
fiadds
mov
inc
bsr
push
jecxz
sbb
sub
shll
and
cmp
aad
ljmp
sbb
ss
dec
shlb
in
adc
mov
sub
xchg
loop
clc
addl
mov
jge
aas
or
and
xchg
imul
stos
and
xor
fnstcw
mov
lods
out
push
daa
cmp
sub
sub
std
fscale
xchg
adc
lret
cli
lahf
pop
xlat
nop
sub
adc
mov
push
dec
insb
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
loope
aas
idivl
cmp
jno
in
cmpsb
jo
out
sub
fcomps
imul
mov
sbb
mov
and
push
and
pop
inc
test
jne
cmpsl
adc
cmp
xor
out
lds
in
or
xchg
movsb
mov
rcr
xchg
cmpb
mov
push
ret
cwtl
daa
adc
repnz
mov
repnz
mov
mov
push
fs
mov
ret
jle
loopne
xor
mov
ret
inc
adc
rcrb
inc
pop
lods
mov
pop
enter
pop
fisubl
and
ljmp
jae
jo
test
add
or
fistps
out
test
clc
add
adc
push
lcall
dec
shll
fcom
pop
mov
cmpsl
pop
ds
out
and
int3
push
jp
scas
dec
pop
int
push
and
fwait
inc
lret
mov
cmp
test
dec
or
rcr
sub
push
dec
cmc
rcll
push
mov
out
mov
stos
gs
mov
xor
push
pop
bound
mov
pop
lret
add
xchg
push
push
dec
fwait
stos
lret
cmpsl
jge
mov
fadds
add
push
loop
jbe
fsubrs
sub
leave
lock
xlat
cmc
inc
sub
pop
test
push
inc
cmpsb
cli
push
cmp
mov
cwtl
sbb
add
fsubs
andb
xchg
mov
jns
adc
loop
clc
inc
xor
nop
jl
mov
add
sub
shlb
icebp
sar
dec
sbb
xorl
pop
push
cmp
lods
cmpsl
mov
sbb
sarb
loopne
cwtl
mov
mulb
push
dec
dec
repnz
push
add
mov
subl
mov
insl
dec
mov
out
fstp
aas
and
mov
xor
xchg
sub
or
sti
fwait
cmpsb
rclb
adc
mov
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
dec
out
fldcw
bnd
cmp
xchg
or
adc
adc
subl
test
pop
ss
jge
in
mov
outsb
pop
repz
cmc
pop
adcb
divb
mov
inc
cli
mov
mov
adc
push
mov
xor
jg
in
in
loopne
inc
push
ret
in
or
movzbl
xchg
mov
xchg
je
dec
les
and
imul
inc
add
stos
lds
rolb
xchg
mov
aad
pop
pop
cld
pop
in
pop
adc
push
movsb
hlt
mov
sti
in
hlt
add
movsl
les
daa
and
pop
inc
jnp
or
insl
mov
cld
cmp
jmp
push
cmpsl
aaa
push
ss
or
std
frstor
ret
pop
out
xchg
rolb
xor
fbld
in
addb
mov
lcall
lcall
jb
loope
jmp
sub
fisttpll
mov
fsubr
mov
nop
xchg
xlat
and
loop
xor
loop
xchg
xchg
jae
adc
mov
dec
inc
stos
push
shr
mov
scas
cmp
dec
sub
mov
ds
pop
call
or
pusha
popf
outsl
jbe
and
aad
rclb
mov
inc
mov
rcll
dec
jne
mov
jno
add
mov
bswap
mov
out
jle
outsb
shr
xchg
mov
push
dec
inc
pop
mov
push
es
sub
sarl
add
pop
and
xor
sub
aaa
xchg
jno
std
addl
test
popf
scas
inc
scas
in
int3
fiaddl
sarl
sbb
mov
jl
mov
pop
test
adc
jnp
jnp
adc
push
push
int3
adc
jns
enter
out
and
cwtl
rcl
cmpsl
adc
jg
and
mov
stc
mov
add
fiaddl
cmp
push
pushf
aam
add
xor
pop
adc
les
icebp
les
mov
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
loope
cmp
call
jl
jle
mov
lret
mov
pop
xchg
les
xchg
popa
jno
xor
ret
cmc
sub
jp
dec
mov
insb
icebp
aaa
mov
fimuls
xlat
inc
jle
sub
add
pop
mov
push
cld
pop
pushf
sub
sbb
js
cmpsl
cmp
cmp
pop
mov
mov
dec
cmp
adc
sahf
mov
leave
out
pop
mov
jl
sbb
adc
mov
iret
in
hlt
cmpsl
pop
fstpt
jle
gs
push
pop
aam
movsb
fstl
in
imul
inc
and
sub
popf
push
sbb
push
flds
pop
add
daa
xchg
pop
in
in
sub
sub
out
scas
fisubl
pop
cmpsb
clc
in
adc
outsb
mul
imul
int
cmpsl
pop
ret
scas
shlb
lods
push
hlt
cmpsb
lock
mov
pop
inc
hlt
or
addr16
and
adc
xlat
push
fsubl
lcall
fnstsw
mov
lret
into
das
push
push
cmc
popa
rorl
jae
xchg
mov
xor
inc
xchg
stc
stos
xor
pop
adc
cld
inc
mov
pop
and
rorb
pushf
sub
out
js
negb
int3
mov
sahf
inc
inc
sub
stos
xlat
bound
ds
test
jne
inc
mov
enter
movsb
lds
push
int
jle
and
sarl
popa
stos
popa
fisttpll
lret
mov
or
mov
icebp
fwait
mov
sub
push
dec
into
jb
cmp
adc
jmp
pop
and
dec
jl
xor
push
aaa
mov
adc
adc
jle
sub
pop
add
mulb
imull
repz
int
in
adc
push
leave
cli
jecxz
loope
aam
add
push
cmp
jns
mov
pop
insl
jo
fidivl
dec
call
pushf
pushf
push
mov
mov
jno
lret
movsb
pusha
inc
push
imul
test
mov
xchg
pushf
inc
aam
addr16
imul
mov
ljmp
sbb
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
push
dec
and
mov
jle
cmp
inc
xchg
xchg
test
adc
jp
push
in
clc
xchg
jl
cmpsb
jb
in
pop
bnd
addr16
push
in
out
cmp
cmp
repz
testb
pop
jno
bound
cltd
cvtps2pd
call
xchg
sbb
mov
sahf
push
jo
mov
imul
xchg
mov
xor
cmp
adc
pop
ja
jg
cmp
imul
std
xor
call
or
sbb
test
aaa
enter
lret
inc
ret
dec
scas
mov
jp
xchg
imul
out
hlt
xor
test
sub
repnz
out
mov
stos
insl
rorb
ja
or
in
pop
bound
fidivrl
ss
clc
out
popf
lock
jmp
sub
xchg
sub
sub
ret
clc
loope
addl
fisttps
xor
jle
es
in
fwait
mov
cmp
aas
pop
lods
cli
out
xchg
mov
mov
dec
push
push
js
clc
clc
push
pop
loope
xor
and
frstor
pop
dec
in
cmp
jp
adc
aam
ret
repnz
mov
sbb
les
jne
shl
and
fwait
ss
movsb
sbb
adc
loop
ljmp
pop
sub
xchg
cltd
dec
fimuls
ret
sbb
mov
push
aas
into
inc
movsl
jp
push
ss
popa
sbb
scas
add
inc
jp
fs
and
out
outsb
jl
loopne
xchg
scas
mov
pop
in
or
mov
adc
sub
hlt
shl
mov
ss
sahf
ljmp
les
jb
je
cmp
mov
jbe
ljmp
ret
icebp
repz
test
adc
mov
es
rolb
push
jb
negb
loop
fildll
and
xor
pop
outsl
or
fsubl
mov
xor
sbb
sbb
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
and
jl
jle
cmp
push
and
inc
fmull
sub
divb
fcomip
mov
xor
add
lret
mov
out
inc
or
sbb
add
and
repz
sbb
sub
mov
xchg
push
push
or
jno
insl
push
test
or
push
clc
call
fisubl
popa
shrb
add
aaa
rcrl
sbb
inc
xchg
push
fstpl
add
repnz
cld
rcrl
pop
sub
ds
or
int3
ljmp
add
shl
fdivl
adc
sahf
or
adc
test
sub
arpl
addr16
inc
mov
push
mov
pop
mov
sbb
in
iret
pop
lret
kmovw
fiadds
jno
in
mov
pop
sub
dec
dec
or
xor
pushf
mov
and
cmpsl
mov
sbb
xor
push
cmpsl
pop
int
xchg
inc
rcrb
adc
xchg
sbb
lret
inc
or
jae
xor
jne
add
mov
clc
adc
dec
fsubrs
cmp
mov
in
adc
xchg
bound
inc
out
pop
lods
push
popa
outsl
push
fidivrs
and
in
push
mov
push
stos
add
jecxz
ret
fists
dec
js
push
rol
mov
adc
mov
mov
sbb
xchg
movsl
sub
ret
ljmp
mov
dec
les
adc
rcrb
adc
push
push
jno
dec
and
dec
stos
negb
xor
aaa
mov
mov
popf
scas
xor
cmpsb
out
mov
mov
push
jle
and
out
mov
in
mov
mov
loope
insl
cmp
xor
push
cmp
adc
xchg
mov
lahf
jmp
push
xchg
lea
mov
pop
jg
push
xchg
sarb
dec
dec
rcl
nop
sbb
fisubs
inc
xchg
or
and
sarb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
aad
pushl
sti
jle
cmp
jecxz
mov
pop
push
or
sub
fwait
bound
and
adc
push
mov
jg
mov
out
outsb
mov
xchg
sbbl
sahf
daa
push
inc
aam
jecxz
mov
dec
cli
aam
js
mov
aaa
imul
xor
cmpsb
add
xchg
pop
subl
scas
jge
pop
and
push
sub
jne
dec
bswap
cmp
out
dec
xor
sbb
mov
fiadds
jl
cmp
fs
nop
divb
not
in
add
push
cmpsb
jae
mov
mov
push
sti
cmp
mov
fsubrl
add
cmp
pop
mov
popf
and
dec
sub
or
sbb
mov
and
lret
sarl
decl
movsb
push
clc
aad
jmp
cld
mov
sub
mov
sarl
les
push
icebp
das
popf
dec
sbb
idivl
jle
xchg
push
mov
cmpsb
shlb
outsb
add
push
outsb
sub
movsb
loop
iret
andb
xchg
arpl
lds
pop
jb
jge
push
cmp
xor
movsl
mov
lock
out
dec
add
pop
xor
push
aam
mov
sub
xor
fbld
into
das
dec
pop
cmpsl
xchg
inc
cmp
add
stc
push
jg
daa
bound
dec
aad
fcmovnbe
jle
cmpsb
loope
cmp
xchg
pop
jns
mov
dec
inc
xor
mov
and
int
fmul
cwtl
in
sarb
mov
outsb
push
mov
mov
xor
add
dec
add
dec
scas
mov
les
fldl
lea
pop
mov
mov
add
in
add
test
mov
ljmp
rcl
inc
cs
pop
xchg
and
bound
testb
outsb
inc
adc
mov
or
mov
cmp
dec
test
inc
repz
cmpsb
mov
std
insb
adc
sub
push
dec
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
jbe
stc
jle
cmp
or
pusha
jle
std
inc
sub
ds
ficomps
loope
and
sbb
test
push
push
sub
push
int
push
scas
testb
pop
pop
ret
adc
mov
add
adc
sbb
test
aaa
outsb
aad
sti
loop
jl,pn
dec
dec
and
ss
and
ret
mov
add
jle
shll
fdivs
out
cmp
mov
loop
das
jns
add
lcall
insb
mov
add
scas
aaa
int
insl
mov
inc
fmuls
inc
cmp
adc
jp
pop
gs
jl
iret
jge
cmp
sbb
inc
push
jmp
xchg
mov
inc
pop
or
test
es
pop
in
sbb
pop
andl
jmp
out
dec
adc
sub
push
sub
aaa
jp
fildl
arpl
or
pop
aad
xor
cmp
ficomps
jnp
pop
loop
sub
pop
icebp
sub
ficoml
mov
popa
lods
xlat
push
sti
test
jge
and
dec
repnz
pop
stos
ja
ja
sbb
sbb
in
cli
sub
adc
push
stc
call
xlat
stos
lret
addb
outsl
outsb
or
xchg
rorb
xchg
jnp
in
rclb
pop
nop
mov
mov
dec
pop
shll
sub
dec
imul
in
dec
cs
imul
rol
pusha
pop
mov
mov
mov
inc
pop
add
xor
cmp
or
lods
adc
stc
test
inc
int
cmp
test
je
mov
or
std
push
out
adc
pusha
aas
adc
or
cltd
insl
add
les
add
cmp
and
xlat
dec
das
mov
sahf
into
cwtl
xor
and
outsb
push
sub
aaa
or
pop
sub
int
mov
in
orb
movsl
inc
xchg
test
loop
xchg
int
jmp
fsubrl
lret
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
sub
or
cmp
or
pop
in
xchg
daa
mov
in
adc
add
sbb
or
ja
dec
inc
mov
pop
mov
stos
cli
outsb
dec
jmp
stos
aaa
jge
pop
xchg
adc
adc
sarb
inc
xor
inc
and
out
jg
andl
adc
loop
dec
sbb
mov
jl
sub
push
mulb
movsb
xor
adc
out
xlat
add
xchg
sahf
sbb
rcrb
adc
push
icebp
add
sub
scas
jne
jae
push
pop
in
jp
sub
and
dec
mov
popa
pop
ds
aad
mov
fwait
lods
mov
bound
inc
xor
fstps
sbb
test
stc
dec
in
push
lock
mov
inc
lods
scas
outsb
sti
pop
mov
pushf
pusha
xchg
add
repz
inc
and
add
test
outsl
fcomi
lods
jne
bound
rorl
rcrl
cli
add
cmp
ss
xlat
or
push
push
add
shrb
and
dec
inc
and
add
xor
push
push
mov
jae
mov
push
jb
negb
push
ret
repnz
jle
push
jg
sub
lods
ficoml
mov
and
outsb
dec
lds
sbb
mov
lea
sub
in
sbb
test
mov
mulb
aam
leave
jmp
xchg
sub
mov
hlt
sub
add
hlt
adc
stos
sub
cmp
xor
xor
push
movsb
cltd
leave
pop
data16
js,pn
add
mov
cmp
hlt
scas
mov
test
sti
sub
insl
gs
push
xor
add
repnz
add
xchg
repz
pop
out
and
fs
std
call
das
subl
outsb
jmp
test
test
mov
pop
pop
sbb
loop
mov
pop
add
pop
lods
jno
test
repz
mov
jecxz
cmc
lods
pop
jne
and
loope
nop
add
xchg
jnp
adc
jl
mov
xchg
loop
fnstcw
jnp
addr16
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
sarl
cmpb
jl
jle
repz
xchg
xchg
jmp
pop
sub
inc
and
lcall
jb
xchg
loope
pop
sbb
dec
lcall
xchg
push
push
cld
mov
xorb
and
ret
mov
xor
es
xor
mov
push
xchg
jb
pop
fcmovu
add
sub
testl
dec
iret
das
jne
mov
sbb
enter
aaa
push
push
filds
cmp
filds
sbb
jecxz
mov
cmp
mov
int
dec
leave
mov
jnp
mov
out
or
mov
bound
lds
aas
mov
jne
lcall
paddq
and
into
lahf
call
mov
cmp
cltd
hlt
pop
ds
inc
and
inc
ss
dec
test
gs
je
dec
jmp
jmp
cmc
pop
mov
sub
cltd
pop
jmp
dec
test
pop
in
jl
flds
adc
mov
sub
cld
xlat
push
test
vpsrld
push
mov
adc
testl
mov
sahf
jne
out
mov
xchg
int
add
mov
dec
pop
add
and
jb
lret
aaa
add
inc
roll
lock
insb
fwait
xor
out
loopne
fwait
enter
leave
fwait
xchg
pop
xor
shrb
or
or
test
popa
push
xchg
in
adcl
mov
add
arpl
mov
stos
xchg
dec
push
notl
mov
mov
pop
loope
aad
out
scas
test
arpl
ds
dec
adc
cmp
insl
cmp
mov
loopne
repnz
push
mov
cltd
repnz
fwait
xchg
sub
sub
jne
fistl
push
lret
or
inc
mov
fistpll
in
and
sti
aaa
sub
pop
std
xchg
fsubs
lea
mov
repz
fmul
iret
xor
pusha
inc
iret
jae
test
jno
dec
or
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
insl
and
cmpb
jl
jle
adc
test
or
sarb
pop
cmc
mov
jo
or
in
push
inc
push
fisubl
cmpsl
jp
outsl
test
test
xchg
mov
push
lret
aaa
sti
pop
cmpb
cmpsl
or
jecxz,pn
add
fimuls
repz
or
pop
loop
mov
push
or
out
pop
scas
or
ja
jle
movsb
es
dec
ret
aaa
mov
xchg
sub
cmp
sbb
outsl
add
inc
out
mov
aas
or
mov
jne
pop
push
dec
push
sbb
das
insl
in
pop
pushf
dec
pop
mov
push
dec
sub
scas
lock
mov
inc
scas
shlb
adc
movsb
icebp
bound
loop
mov
mov
leave
or
mov
repz
aaa
xchg
cli
cli
dec
xchg
push
cmp
cmpsl
xchg
mov
mov
inc
adc
fstpl
xlat
pop
xchg
rol
sbb
adc
nop
mov
xchg
mov
push
rorl
iret
in
push
dec
xchg
std
repnz
shll
mov
or
les
xor
mov
mov
clc
cli
push
dec
mov
in
sub
add
aaa
dec
jnp
xchg
and
adc
fwait
dec
fs
sbb
icebp
lods
push
scas
xlat
out
fimuls
push
stos
insl
outsb
jge
dec
scas
xchg
pop
add
out
popa
sub
jno
in
sbbb
and
jne
xchg
adc
add
popa
mov
imul
sub
push
sub
aaa
int3
dec
ds
movsb
sub
pop
push
cmp
jmp
push
scas
aam
pop
lock
lds
add
dec
cmp
enter
mov
xor
xor
sub
sbb
movsb
aam
in
filds
adc
mov
xchg
jb
movsb
jmp
js
flds
ja
xchg
xchg
mov
pop
int3
in
scas
bound
jae
nop
outsl
or
out
and
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
test
jle
jl
jle
loop
fucompp
leave
add
imul
mov
gs
push
push
test
mov
inc
or
dec
sbb
bound
push
nop
or
add
loope
ds
push
hlt
scas
xchg
jmp
rorl
aas
mov
fwait
or
dec
sbb
out
inc
jg
sub
cltd
lods
cmpsb
and
aaa
jae
cmp
outsb
orps
jnp
or
or
in
fimull
shrl
lret
rcrb
inc
jmp
ljmp
mov
js
jle
push
pop
inc
shlb
arpl
ljmp
sbb
dec
jg
stos
lret
adc
pushf
xchg
cld
xor
inc
jl
adc
inc
mov
popa
xchg
scas
ret
pop
rcrb
mov
mov
xor
lret
add
xchg
cmp
jmp
fscale
push
or
mov
in
out
or
mov
jmp
lahf
mov
push
sbb
lahf
push
pop
pusha
inc
fimull
andb
std
notb
jnp
js
ds
push
inc
data16
mov
push
sbb
cmp
mov
mov
jge
or
push
dec
adc
adc
jo
pop
jbe
rol
mov
adc
les
mov
sub
and
jae
inc
not
dec
sbb
sub
cmp
out
pop
bnd
and
dec
mov
cmp
push
adc
movsb
xchg
scas
stos
arpl
repz
lahf
xchg
fstl
pop
mov
adc
cltd
sub
xchg
test
inc
enter
aam
pop
lret
mov
ror
in
xchg
cmc
sub
mov
sahf
loopne
in
mov
scas
push
adc
cmpl
and
notl
dec
mov
jp
fisttpll
iret
cmc
int3
divb
cmp
and
ret
cs
xchg
dec
jbe
lcall
scas
add
pop
add
hlt
adcl
js
rclb
pop
jmp
nop
shl
mov
mov
out
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
mov
jle
cmp
mov
push
mov
cmpsb
xor
push
pop
out
adcb
imulb
popf
arpl
mov
dec
div
xlat
insl
and
orl
mov
movsl
mov
pusha
lret
cltd
sbb
mov
mov
cmpsb
inc
fisttps
sti
fwait
push
add
xchg
add
push
mov
lret
add
dec
xchg
lret
pop
fadd
mov
out
pop
sub
xchg
pop
adc
dec
ret
xorl
jl
push
lcall
mov
cmp
iret
sub
push
pop
dec
xchg
cs
or
lock
push
enter
inc
jmp
jl
pop
ds
popf
inc
mov
cwtl
inc
add
imull
out
mov
xorl
in
dec
call
sbb
cld
xor
daa
mov
jl
lahf
cmpsb
clc
shlb
push
in
mov
add
push
in
add
out
mov
out
ja
dec
or
dec
xchg
xchg
lea
sbb
stc
mov
fdivrl
and
je
xchg
jne
sub
imul
mov
mov
sub
jmp
mov
ja
add
fistpl
orl
arpl
mov
cwtl
cs
jne
fmull
push
dec
data16
sbb
rorl
data16
ds
faddl
add
mov
adc
popf
mov
inc
ljmp
stos
jge
ds
mov
inc
lret
sub
nop
pop
fstl
lahf
insl
fildll
sub
mov
mov
popa
shl
subb
aaa
xchg
mov
dec
repnz
cltd
dec
xchg
mov
aaa
stc
xchg
test
lret
nop
xor
xor
in
push
xlat
outsb
sub
push
cwtl
mov
xchg
je
mov
add
rcll
add
fscale
add
pusha
inc
dec
adcl
in
sub
std
or
cld
jnp
clc
push
out
jnp
subb
add
flds
add
push
std
dec
sahf
push
push
add
and
mov
cmp
push
lock
mov
jge
dec
cmpsb
push
jno
cli
out
repz
shl
sti
dec
jmp
imul
mov
loopne
dec
roll
ds
popf
and
jle
push
cmp
mov
dec
or
dec
data16
iret
fisubl
lcall
sbb
xor
dec
outsl
sub
punpckldq
mov
pop
or
inc
cmp
dec
cwtl
dec
jle
fwait
jno
dec
rorb
js
pop
mov
mov
push
lods
xchg
ljmp
jo
pusha
push
loopne
dec
movsl
sub
es
rorb
sbb
jnp
sbb
cmp
inc
push
xchg
push
mov
and
adc
pop
lret
cmpsl
dec
jmp
adc
insb
fwait
pusha
or
cwtl
std
cli
jb
push
mov
dec
and
testl
pop
lea
lods
pop
test
xor
push
inc
add
or
fldenv
xor
mov
mov
push
and
sub
pushf
sub
adc
xor
inc
test
arpl
mov
rol
jge
insl
iret
mov
mov
hlt
jb
dec
pop
imul
sti
jmp
inc
add
in
hlt
dec
repnz
cmc
ret
movsl
push
mov
test
int3
loopne
xchg
or
jne
popf
test
rcl
ja
push
cmpsl
or
push
dec
mov
cmp
imul
sti
mov
ret
mov
insb
push
pop
mov
jmp
sub
xchg
jmp
lods
jl
or
xchg
punpckhbw
loop
bound
xchg
jno
into
movsl
mov
jecxz
add
xor
movsl
cld
fiaddl
ds
fstps
sub
lods
test
push
push
jae
mov
and
adc
aaa
pop
bound
pop
andl
lcall
sbb
scas
fidivs
es
jno
xchg
push
xchg
inc
xlat
inc
js
sbb
or
out
dec
addr16
dec
jns
clc
sub
cltd
or
int
nop
cli
jo
mov
ret
stc
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
xor
jle
cmp
push
aaa
jne
mov
dec
jbe
cmp
out
mov
nop
nop
mov
bound
adc
and
sarl
jno
ret
mov
mov
xor
mov
sub
ljmp
sbbl
inc
jo
add
mov
mov
cmpb
and
mov
jns
lret
popa
insb
lcall
out
adc
add
pop
dec
and
addr16
xor
jnp
add
lods
cs
push
cmp
leave
push
jmp
pop
sbb
outsl
cmc
push
sbb
data16
jb
test
rcrb
addr16
fnstenv
and
mov
inc
mov
out
sbbl
mov
pop
lods
dec
test
loop
and
out
cmp
and
arpl
mov
xchg
aas
add
mov
mov
sarl
mov
insb
mov
pop
cmp
je
mov
jns
dec
and
dec
or
scas
inc
adc
sbb
sub
pop
enter
xchg
jmp
jae
push
fwait
rcll
sarl
adc
push
shlb
sbb
adc
outsb
sbb
shrb
jb,pn
and
ficoml
pop
xchg
xor
in
mov
push
jns
sub
shrl
jle
or
pextrw
adc
lahf
xchg
out
loope
pop
xor
mov
cld
xchg
and
icebp
mov
inc
or
pushf
jae
bound
out
test
pop
and
clc
mov
leave
lods
lcall
jmp
push
or
mov
jl
movsb
inc
loope
push
xchg
mov
cmp
push
cwtl
push
cmp
mov
adc
rcll
push
inc
pop
fisubrs
repz
push
pop
sbb
adc
aam
push
mov
mov
sub
sbb
faddp
push
mov
push
outsl
nop
inc
stos
sub
inc
scas
sub
sbb
and
ja
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
pushf
sbb
mov
jle
cmp
fisubrl
addr16
pop
out
cmp
xchg
pop
dec
out
mov
inc
xor
jne
jb
test
push
pop
call
mov
or
or
inc
push
pshufw
addr16
pop
xor
sbb
sbb
notb
pusha
xor
pop
and
add
and
pop
inc
cmp
pop
test
inc
push
jb
outsb
mov
sti
inc
mov
pushf
inc
cmpb
vmread
push
inc
xchg
inc
fimuls
hlt
pop
xchg
in
sub
pushf
sbb
mov
cld
adc
add
and
test
push
lods
sbb
push
and
push
ror
adc
loopne
lods
rorb
mov
dec
xor
test
lcall
push
mov
add
cwtl
xlat
movb
mov
push
pop
lds
inc
out
lods
add
data16
jle
mov
mov
xrelease
mov
inc
sub
fwait
lods
rcll
xchg
iret
inc
pop
test
cmp
stos
pushf
push
dec
or
test
shl
pop
scas
test
push
jge
es
icebp
cmpb
jbe
out
mov
jbe
aas
addb
cmp
dec
out
jecxz
outsb
sbb
mov
jl
inc
aas
or
sbb
jl
aad
mov
dec
sbb
icebp
idivb
cmp
cs
stos
and
adc
ljmp
push
lahf
adc
xor
popf
clc
leave
mov
xor
std
cld
frstor
cs
or
pop
add
jae
mov
push
cmp
jle
sub
dec
xor
loopne
inc
outsb
fadd
push
push
in
or
xchg
or
or
mov
dec
push
push
pusha
jno
lds
jae
inc
mov
lcall
gs
fsubs
out
jecxz
repz
mov
rorb
xor
inc
xchg
ficoms
xor
mov
adc
sbb
loope
xor
xchg
mov
jge
inc
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
push
mov
jle
jl
jle
subl
xor
xchg
push
pop
lock
enter
ret
fildll
pop
movsb
push
push
jnp
cmp
mov
lds
xor
push
mov
ss
scas
inc
dec
mov
mov
dec
dec
int3
stos
fs
push
pushf
insb
mov
push
insl
and
test
pop
enter
cmp
xor
in
sub
pop
lock
adc
arpl
std
dec
pop
add
mov
cwtl
add
int3
pop
xor
mov
cmpsb
insb
mov
cwtl
cmp
xor
xchg
lds
adc
dec
clc
mov
ds
jg
push
mov
std
mov
cmpsl
push
repz
int3
pop
neg
adc
loop
jne
xchg
xor
stc
imul
popf
insl
mov
xchg
xor
mov
cmp
imul
dec
cwtl
mov
insb
cmpxchg
sbb
bound
aaa
ret
fnsave
ljmp
xor
or
inc
dec
repnz
enter
xchg
mov
lods
jne
push
notl
mov
repnz
add
xor
lods
jecxz
pushf
adc
ja
in
xchg
push
int
push
push
jp
in
out
popf
das
rclb
mov
mov
jnp
adc
add
sbb
xchg
add
jge
xor
inc
and
xchg
out
push
jbe
dec
push
test
mov
push
mov
pop
push
test
fildll
scas
mov
and
inc
xor
and
mov
call
dec
nop
mov
daa
mov
fsts
jle
or
mov
mov
js
cmp
mov
fwait
cmp
scas
jle
hlt
adc
mov
pop
in
mov
scas
mov
popf
ss
mov
fucomi
push
push
gs
sbb
xchg
addb
adc
fs
int3
addr16
pop
iret
add
nop
mov
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
fdiv
sarb
jle
jl,pt
jle
mov
ret
aad
sub
mov
jno
or
xor
cmp
repz
mov
lret
cmp
push
lahf
mov
loop
sub
and
popf
ret
outsb
cmp
in
sbb
pop
fisttpl
xchg
sub
mov
call
stos
mov
add
insb
repz
mov
sbb
cmpsb
mov
jbe
xor
insb
test
clc
xor
mov
add
mov
lods
cmp
jnp
loope
pop
or
xlat
ja
inc
data16
sysret
xchg
pop
add
fdivr
out
es
mov
arpl
out
jp
jnp
movl
fiadds
mov
filds
fnstcw
mov
cmpsb
pop
fiadds
repz
lcall
mov
sbb
mov
jb
frstor
xor
xchg
testl
jl
imul
fdivp
mov
mov
push
xchg
mov
add
xor
sbb
das
lret
outsl
int3
sti
pop
pop
sub
inc
jmp
cmp
movsb
xchg
aas
push
pop
sti
std
repz
mov
scas
outsb
cmp
leave
jbe
push
aas
daa
and
and
adc
push
xor
jns
loopne
stos
and
pop
out
mov
or
mov
scas
dec
sbb
rclb
dec
xor
sub
lret
add
ss
and
imul
xor
add
or
jo
inc
mov
out
test
adc
andl
xlat
xchg
test
xor
sar
lahf
xchg
mov
fs
sub
fs
lock
push
daa
add
shrb
notl
sahf
scas
je
mov
mov
pop
inc
addr16
jnp
and
xor
pop
sbb
mov
out
sbb
loopne
mov
pop
xchg
mov
sbb
lcall
lret
jecxz
lahf
adc
and
adc
xor
test
inc
cld
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
add
iret
mov
mov
ja
xchg
out
adc
nop
mov
push
mov
bswap
or
movsb
icebp
inc
add
and
sbb
hlt
addr16
mov
and
xchg
fdivs
lcall
das
fs
sub
stc
inc
ror
outsb
add
stos
sub
mov
jns
xor
mov
mov
int
dec
mov
inc
and
movsb
aam
fidivrl
mov
xchg
stos
mov
and
mov
jge
sbb
movsb
or
ja
sbb
nop
cmpl
xor
mov
mov
sub
push
push
pop
js
mov
jge
add
pop
jae
sbb
add
lea
sbb
ljmp
arpl
loope
sub
scas
bound
dec
popf
int
xchg
or
xor
jp
scas
pop
loope
orb
test
imul
adc
bound
mov
pop
and
and
cmp
push
inc
mov
fcom
pushf
push
xchg
pop
ljmp
shl
jmp
sbb
fnstcw
pop
sti
test
movsb
lods
leave
xor
fwait
adc
inc
sbb
scas
pushl
mov
jae
xor
mov
ja
push
into
xor
adc
icebp
loope
shrb
and
push
lods
les
rol
xchg
lods
dec
pop
cmpl
decl
or
cli
insl
pop
int3
imul
push
cmovle
scas
daa
xchg
sub
pushf
fs
dec
call
push
lahf
dec
add
cmpb
in
test
xchg
scas
add
enter
ds
movsl
lret
cwtl
ud2
add
stc
dec
loope
ficomps
aam
fsts
sti
xchg
mov
ja
ss
xor
mov
sub
add
mov
mov
rdpmc
lods
sub
or
inc
or
movb
pushf
adc
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
neg
std
stc
sarl
jg
jle
xchg
rolb
jmp
in
adc
jnp
sbb
in
repz
xor
lods
call
and
sahf
rcrl
mov
push
xchg
js
pop
or
shlb
stos
cmp
fs
scas
stos
ss
inc
lret
in
or
aam
mov
dec
push
or
and
pop
arpl
cld
mov
cmp
pop
jae
mov
popa
outsl
cwtl
sub
ja
cmpsl
dec
jge
sub
or
in
iret
mov
mov
lea
dec
aam
dec
popf
sub
andb
or
adc
mov
jmp
cli
sbb
jmp
pop
xor
dec
out
aaa
fwait
push
outsl
fwait
xor
xchg
push
test
movsb
pop
lods
dec
ret
ret
dec
in
mov
pop
pop
jb
add
xor
push
cmp
jnp,pn
repz
sbb
or
inc
pop
addr16
das
into
insb
jecxz
mov
add
sbb
push
es
xor
mov
daa
fisttps
xchg
aaa
inc
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
mov
popf
jle
adc
jle
out
icebp
and
sub
inc
cltd
sti
out
push
fistpll
cltd
rclb
cmc
mov
xor
and
es
adcl
stc
sub
jl
xchg
push
in
sub
out
and
jg
decb
loope
inc
icebp
mov
ret
pop
pushf
mov
sbb
ja
lock
jmp
jle
shlb
clc
jg
sbb
sub
adc
fsubrl
imul
in
ljmp
jl
rolb
loopne
data16
loope
arpl
sbb
pushf
pushf
mov
subb
ss
enter
add
pop
cmp
outsl
movsb
sbb
dec
fsubp
jbe
in
dec
shlb
lock
mov
adc
pop
into
xor
fcomps
inc
iret
fidivrl
push
scas
cmc
mov
div
mov
aad
into
mov
es
int
push
mov
jle
iret
jne
scas
pop
jne
inc
daa
in
shrb
mov
inc
insl
in
fisubl
inc
nop
mov
or
sahf
sub
movb
xchg
and
add
xorl
add
push
jmp
pop
jecxz
call
and
out
imul
jb
jle
adc
jle
add
sarb
push
cltd
out
pop
fistpll
push
adc
inc
push
push
adc
jo
mov
add
jb
xor
imul
xor
cmp
mov
inc
loope
add
mov
inc
inc
imul
lods
sysenter
arpl
push
xchg
xchg
jle
dec
out
xchg
push
icebp
dec
daa
xor
cltd
cmp
cwtl
ret
adc
jg
mov
xchg
or
fcoml
jae
testl
mov
xor
pop
test
mov
sahf
aas
mov
pop
vmaxps
jne
sbb
hlt
inc
aam
orl
bts
xchg
fcmovnb
rorl
cmpsl
test
insb
push
loop
pop
mov
and
mov
push
js
or
push
leave
cs
jecxz
xchg
cli
sbb
and
mov
mov
dec
push
aad
cli
mov
sub
clc
sbb
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
stos
fnsave
push
cwtl
jle
adc
jle
xchg
mov
cmc
xchg
jp
xchg
jmp
sub
jbe
pusha
dec
je
jnp
imul
and
cmp
xchg
sub
testl
xchg
jae
cmc
cmp
in
dec
idivb
jmp
cltd
aam
jl
inc
mov
adcl
rcr
pop
hlt
cltd
sub
lahf
loop
ret
push
cmpb
dec
mov
call
ss
insl
dec
pushf
or
fistpl
pop
cmpsb
xor
movsb
lret
adc
negb
sbb
roll
lret
adc
icebp
cld
pushf
jno
add
sub
mov
adc
pop
std
stos
jne
gs
cmp
push
cmc
in
icebp
shrl
das
pop
lahf
mov
lret
dec
stc
jg
mov
fdivs
xchg
in
lds
stc
shrb
push
mov
sarb
pop
aad
dec
lods
iret
adc
faddl
lret
outsb
out
jb
jbe
ja
pop
cmp
sbb
test
xor
scas
sarb
dec
js
sbb
mov
hlt
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
xchg
aaa
shrl
jle
adc
jle
mov
and
test
sub
mov
popa
loop
jl
enter
test
ljmp
das
mov
push
pop
dec
out
push
mov
in
shl
fadds
mov
aad
push
push
cwtl
mov
decb
into
aad
xchg
dec
cmp
pushf
lret
cs
sub
ss
fwait
cmpsl
pop
repnz
outsl
jge
mov
or
sbb
xchg
outsl
fnsave
push
loopne
cmp
aas
jmp
mov
mov
aas
sti
shlb
imul
add
mov
pop
sub
cmp
aam
lods
sahf
loop
fstpl
mov
dec
inc
out
jb
outsb
and
pop
cmp
lods
mov
nop
sub
dec
inc
xor
mov
xchg
stos
inc
out
xchg
ljmp
stos
outsb
push
jb
lret
sbb
mov
jo
jne
mov
bound
outsb
pusha
outsb
inc
jge
js
push
pop
mov
mov
daa
sti
aam
or
pop
add
xor
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
nop
xorb
pop
imul
repnz
and
lods
rclb
cltd
call
enter
mov
jecxz
ljmp
sbb
lods
movsl
mov
pop
fstps
mov
cmp
xor
sbb
sbb
bnd
aaa
dec
mulb
lods
idiv
hlt
in
fists
cli
out
mov
ltr
inc
insb
push
sub
pop
xchg
out
cmc
pop
jbe
cmp
xchg
add
cmc
push
das
xchg
mov
outsl
popf
pop
test
lds
imul
lret
sbb
and
and
sub
inc
pop
pop
push
into
sbb
cmp
adc
pop
sbb
into
scas
add
and
aas
addl
push
inc
push
aaa
and
xchg
lock
daa
pop
mov
or
je
mov
pop
xchg
test
add
push
push
jnp
rcr
cmc
gs
cltd
sbb
add
nop
fwait
dec
repz
jae
in
pop
js
data16
fisttpl
cld
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
test
mov
adc
jle
fistpl
cmc
xor
inc
lret
sbb
arpl
jp
bnd
or
lea
clc
mov
out
outsl
push
jbe
je
mov
mov
pushf
lcall
jnp
lods
adc
stos
nop
test
adc
lea
push
mov
add
iret
cmpsb
xchg
std
add
mov
fmull
test
stc
test
xor
adc
xchg
cmp
sti
out
clc
push
in
pop
pushf
adc
lcall
sbb
shlb
imul
push
mov
cmpsb
mov
test
xchg
adc
insl
jmp
mov
pop
lods
push
sub
adc
and
dec
jg
or
outsb
jo
adc
mov
push
cwtl
sub
mov
stos
add
and
jecxz
jbe
mov
adc
sbb
push
cli
adc
fisttps
adc
popa
adc
mov
into
pop
inc
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
dec
xchg
jle
cmovno
xor
sub
std
fists
jne
xchg
insl
sahf
xor
inc
push
sbb
fidivs
es
xor
sub
shrb
ds
xchg
std
pop
fs
sbb
jns
iret
jecxz
and
je
scas
xchg
mov
ficompl
mov
pop
ljmp
sub
push
push
hlt
sub
dec
repnz
jg
jo
cwtl
je
out
int
decb
and
mov
iret
fsubrp
je
and
popf
inc
mov
mov
push
mov
xchg
clc
sub
sbb
sahf
incl
mov
xchg
test
mov
mov
push
movsl
inc
pusha
push
push
pop
mov
inc
push
add
popa
pop
xchg
push
sub
jbe
mov
xchg
cmp
jne
inc
aam
mov
sti
jecxz
mov
or
push
cs
adc
pop
or
shll
cmp
cmpb
incl
push
iret
xor
ret
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
mov
mov
push
jg
jle
and
push
sub
mov
clc
jmp
lock
out
dec
push
sbb
mov
es
movsb
fisttpl
sub
aas
mov
xchg
jecxz
flds
into
test
xchg
out
sub
mov
push
imul
xor
bnd
iret
dec
fisubl
mov
pop
jo
insb
aam
lahf
rcrb
lret
call
xor
leave
bound
xor
out
das
mov
cmp
dec
fidivrl
cwtl
jecxz,pn
fldt
add
mov
shrb
ss
mov
mov
jno
jmp
push
test
int
or
pop
xchg
out
xchg
mov
adc
aam
jns
arpl
into
inc
xor
mov
xor
push
dec
xor
xchg
xchg
sbb
ficomps
into
mov
fildll
dec
pop
mov
or
mov
cmp
cmpsb
loop
sbb
cmp
inc
sub
shlb
sub
dec
pop
lret
rcr
cmp
xor
nop
loope
repnz
pusha
ret
or
out
jnp
fidivrs
dec
mov
in
hlt
sbb
add
mov
xor
shlb
xlat
jno
stos
add
test
movsl
sahf
loope
loopne
and
je
jnp
jp
sbb
cltd
bswap
push
sub
mov
into
cmpsl
fadd
jns
lds
jno
int3
mov
mov
cwtl
stos
lds
dec
sti
das
add
or
sub
test
je
sub
cmp
sub
push
xchg
add
dec
dec
scas
fyl2x
xchg
test
call
cmp
jb
ds
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
cmp
scas
mov
xchg
mov
pop
add
lret
mov
or
mov
inc
mov
bound
and
sub
mov
jl
sub
mov
add
push
das
mov
cmp
ret
jge
lret
cmp
xor
mov
sub
lds
rol
imul
aaa
jnp
jnp
inc
out
cmp
sbb
gs
insl
sarb
popa
push
push
xchg
mov
test
xchg
fs
push
xchg
addr16
and
jl
sbb
das
mov
inc
push
repz
repz
dec
xor
ret
ret
pop
mov
sarl
iret
shl
rol
add
mov
inc
pusha
or
adc
lahf
invd
pop
push
push
popa
or
dec
ret
lcall
add
mov
dec
dec
lods
cmp
xlat
sbb
dec
loope
mov
xor
jle
es
adc
mov
call
rorb
jecxz
negl
aas
int
call
or
pop
jne
roll
stc
inc
pop
stc
jp
add
cmpsb
fldcw
roll
shrb
testl
pop
lret
sub
push
arpl
pop
inc
iret
push
and
add
xchg
cmp
mov
test
mov
xchg
shr
fstps
test
in
xchg
jg
adc
loop
bound
or
jae
imul
push
and
repz
adc
je
jnp,pt
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
add
jl
jle
mov
jecxz
dec
adcb
ja
mov
cld
xor
and
push
aam
fcomps
into
mov
scas
aas
add
lret
push
jmp
std
outsb
clc
data16
and
ror
aam
dec
mov
outsl
repz
mov
cmp
pop
jb
pop
fldenv
imul
mov
adc
mov
clc
fldl
cmp
cmp
push
leave
jmp
xchg
mov
add
ljmp
loopne
add
xchg
in
add
or
jo
nop
imul
mov
mov
aad
iret
lcall
cmc
lcall
cmp
std
loopne
jl
mov
dec
mov
mov
jmp
xchg
ljmp
or
and
xorl
or
rcl
dec
dec
sub
idiv
popa
rolb
in
lods
int3
clc
aam
lret
mov
push
fsubl
mov
out
decb
aad
repnz
or
jae
adc
movsb
fdivrl
cmp
xor
dec
test
push
fstpl
lahf
inc
inc
sti
lret
std
ret
lds
mov
shlb
push
testb
xor
nop
cmp
xor
dec
shl
mov
xchg
push
mov
test
add
pop
scas
js
ret
shl
fucomp
movsb
out
pop
cmpsl
dec
and
cmp
adc
pop
lcall
and
mov
mov
clc
in
jb
imul
add
sub
pop
andl
sarl
mov
adc
cltd
lods
pop
mov
xchg
movsb
dec
pop
push
ret
sarb
xchg
cmpsl
mov
or
ljmp
cltd
outsb
xchg
jo
cmc
movsb
jbe
loop
notl
mov
and
popl
imul
sbb
pop
outsb
ret
jecxz
xchg
leave
or
cs
cmp
sub
push
xor
imulb
push
pop
fisubl
mov
aas
mov
popl
fnstsw
cmp
test
iret
xchg
insl
mov
ss
aad
xchg
cltd
mov
sbb
sbb
cmp
add
mov
shrb
cwtl
lods
and
xchg
in
pushf
pop
and
cmp
sub
outsb
int3
lock
cs
and
rorb
xor
jo
lahf
aam
ss
fcoml
gs
in
ss
xchg
xor
lea
scas
lds
js
test
jl
jge
fwait
sub
mov
fistl
or
jnp
dec
jl
sahf
vmread
mov
push
pop
pop
cmpsl
insb
sub
clc
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
cwtl
aam
jle
jl
jle
shl
mov
aas
lcall
movsl
jns
lahf
adcb
icebp
push
lahf
push
sahf
cmp
dec
mov
jbe
fdivl
jmp
test
mov
cmp
aas
mov
mov
mov
in
lods
sbb
addr16
jnp
mov
je
negl
lahf
rcrb
imul
fdivrs
mov
lcall
sub
loope
mov
sbb
push
mov
add
mov
lods
in
adc
add
and
adc
jecxz
fimuls
or
pop
movsl
lret
dec
and
cmp
adc
dec
fsts
push
insl
mov
add
dec
xchg
lret
push
loop
sub
mov
sub
or
adcb
sbbl
jge
cltd
mov
jl
repz
dec
into
cmpsl
push
lret
mov
xor
mov
scas
mov
jae
push
scas
mov
jns
lock
cld
mov
out
test
dec
jbe
mov
mov
in
mov
add
inc
pop
cmp
out
jmp
cmp
cld
adc
or
pop
ficompl
repnz
mov
xor
loop
daa
mov
xlat
ret
dec
sbb
sbb
mov
bound
add
sti
fisubl
sub
pop
push
test
movsb
jl,pt
nop
jmp
sub
shr
jae
in
cmpsl
and
in
loope
aam
rcrl
fildl
dec
imul
lret
ret
push
push
mov
lret
shll
mov
push
fsubrs
aaa
lods
insl
enter
xchg
sbb
leave
repnz
fs
aas
arpl
in
dec
sub
shll
mov
sbb
and
sub
mov
movsb
in
sub
enter
test
jle
test
sbb
mov
daa
fdiv
fidivrl
xchg
outsb
fstpt
stos
push
cmovnp
aas
mov
ja
pop
mov
stos
cltd
cwtl
mov
lods
xor
xor
adc
sub
jle
mov
into
lods
aas
cld
daa
test
nop
push
mov
and
push
add
into
scas
outsl
ljmp
sbb
ret
nop
adc
xchg
adc
cld
jns
addl
ror
or
mov
mov
aaa
inc
pusha
inc
push
popf
xchg
outsb
adc
push
pop
cmp
push
or
lods
test
loopne
add
test
jp
mov
xor
jmp
jmp
mov
repnz
inc
sti
dec
pop
sub
adc
aaa
or
stos
outsb
jns
sbb
or
mov
inc
mov
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
or
stos
jle
jl
jle
mov
pop
adc
adcb
jbe
adc
int3
push
push
inc
test
jno
mov
mov
dec
mov
push
dec
imul
test
xchg
shll
outsb
pusha
mov
lahf
push
int3
lret
and
sub
clc
push
data16
add
fnstsw
push
jnp
xor
loope
arpl
mov
or
pop
adc
dec
pop
icebp
and
or
ja
dec
rcl
jne
xchg
xchg
rorb
outsl
jmp
pop
shl
sti
push
sbb
push
callw
sub
arpl
dec
pop
pop
adc
cmp
dec
bound
adc
pop
pop
int3
lods
repnz
sub
add
into
into
shl
fwait
lods
aaa
or
jmp
stos
adc
cs
aas
cld
icebp
xchg
mov
inc
push
add
pop
sbb
popf
imul
jb
bnd
call
out
imul
lock
es
xchg
jecxz
aaa
ret
pop
inc
outsl
push
xchg
ja
cld
shlb
mov
sbb
pop
push
pop
pop
dec
ljmp
out
hlt
xor
imul
push
xlat
movsb
inc
outsl
dec
popf
popa
xlat
movsb
rcl
ljmp
and
sub
cltd
cmp
pop
js
inc
pop
fcomps
sarb
lret
jno
mov
cmpsl
cld
inc
movsl
xchg
add
scas
loopne
ror
xor
lcall
inc
sbb
xchg
sbb
mov
rorl
cmc
orb
adc
mov
stos
paddsb
xchg
ret
mov
repz
push
aaa
enter
aas
fiadds
ret
push
and
mov
push
fistpl
out
fisttpll
jns
test
pop
mov
mov
jo
mov
cmpb
mov
gs
inc
dec
ljmp
xchg
mov
loope
js
jnp
addr16
push
cmp
jmp
lea
dec
jg
pushf
outsb
sub
insb
push
outsl
jns
loop
aad
sahf
outsl
outsl
in
jns
cmp
mov
mov
sub
push
sbb
mov
test
fstpt
imul
lahf
pop
inc
jae
enter
lods
std
mov
cwtl
pop
ds
mov
dec
inc
ror
sbb
scas
mov
jp
cmp
gs
sub
mov
and
sub
jns
push
sub
mov
pushf
mov
xchg
shrb
or
sbb
cmp
shlb
xor
and
pusha
inc
mov
add
or
mov
push
fldenv
mov
enter
inc
jg
cmpsb
in
cmp
jns
pop
xchg
insl
push
addb
mul
mov
stc
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
and
jle
jge
jle
ljmp
push
mov
roll
mov
fisubl
imul
orb
xchg
jbe
pop
or
lea
insb
lcall
stos
fildl
int
testl
cmpsb
dec
and
push
cmp
fwait
push
icebp
cmp
push
into
dec
push
push
loope
jb
pop
jne
dec
shlb
arpl
push
cmp
or
add
xchg
mov
sbb
fimull
pushf
movsl
jp
mov
sub
outsl
test
imul
jecxz
cmpsb
dec
imul
js
xor
pop
ffree
fwait
lods
jp
push
popf
shlb
mov
sbb
jp
dec
add
dec
xor
sub
cmp
jnp
or
jmp
or
adc
push
inc
sbb
lcall
cmp
shrb
shrb
fxtract
xor
cld
mov
out
out
lret
lahf
in
es
xchg
sarl
mov
dec
sbb
pop
and
cmpsl
lahf
pop
sub
insl
lret
mov
jne
mov
sub
orl
nop
push
in
or
sbb
inc
mov
dec
adc
sti
jbe
push
in
mov
mov
or
jle
mov
bound
adc
mov
mov
push
add
enter
sahf
adc
out
aas
ss
pop
fsubr
fidivl
gs
sub
xor
jg
stc
push
aam
xor
sub
hlt
add
hlt
testl
scas
mov
adc
cld
into
mov
stc
mov
xchg
scas
orb
dec
cmp
shlb
inc
ja
add
inc
les
aad
push
mov
scas
leave
xchg
pop
adc
outsb
adc
jbe
loope
iret
push
iret
ret
sub
xor
movb
roll
inc
addr16
fiadds
lods
fbld
xor
adc
mov
jbe
sub
adc
fildll
leave
cmp
popf
jl
insb
add
dec
pushf
mov
jo
push
mov
arpl
dec
cmp
aam
iret
outsl
push
xchg
pop
lds
sbb
cld
mov
std
pop
or
or
les
gs
xor
repnz
rcll
lds
pop
cli
dec
stos
or
sbb
mov
or
ds
fadd
out
movsl
mov
jo
popl
loope
sbb
call
shrl
mov
outsl
xchg
inc
lods
cmp
ffree
jg
addr16
sahf
pop
inc
lds
rorl
pop
lods
stos
call
push
loope
jnp
mov
xor
mov
jmp
or
pop
jno
xchg
add
xor
jle
jge
jle
cmp
mov
sub
jnp
call
nop
nop
jno
movsl
push
sub
pop
jl
sbb
inc
or
xchg
xchg
fldt
jnp
sbb
and
inc
mov
add
push
das
scas
arpl
mov
inc
inc
adcb
pop
loopne
js
fistpll
mov
push
lds
sub
jge
fisubl
sub
xchg
nop
jbe
push
jp
xchg
arpl
les
insb
push
aam
cmc
sub
rol
dec
pop
nop
adcb
mov
lock
push
mov
mov
lods
sub
mov
ljmp
xor
pushf
lret
push
sbb
push
jle
cmp
addb
jne
lea
lock
mov
dec
mov
data16
inc
outsb
xchg
sbb
jle
sub
fxch
mov
sarl
add
stos
cmpsb
mov
or
imul
dec
aam
push
mov
jp
jns
cmpsl
jne
jl
nop
mov
adcl
int3
xchg
sbb
jne
mov
xor
sahf
dec
bound
and
ss
inc
loope
fistps
jnp
loop
ret
or
retw
pop
or
out
lret
or
dec
clc
cmp
xor
jle
out
pop
mov
leave
cltd
shrb
add
out
sbbb
xor
inc
cmpsb
xchg
inc
les
sbb
adc
jb
mov
idivb
enter
cmpb
cvtps2pi
mov
lahf
xlat
adc
aad
or
pop
cmpsl
icebp
lods
repnz
jae,pn
xor
add
pop
sarb
ss
sbb
inc
pop
cmp
aam
cmp
push
lcall
lock
xor
sub
mov
sub
mov
shll
push
outsl
adc
rcrl
pop
les
push
mov
cmp
adc
ds
fldl
fists
push
dec
addr16
xor
aad
push
imul
push
push
adc
lret
inc
cmp
pop
fiadds
push
mov
out
ja
lock
dec
dec
jno
jo
pop
lods
adc
shll
pop
addl
test
mov
and
subb
fistl
pusha
cld
nop
cmp
cmp
cld
mov
inc
or
pop
call
inc
add
xchg
outsb
in
sti
sub
lods
inc
push
lods
sahf
shrl
xchg
sbb
mov
mov
mov
pop
mov
inc
inc
fcoml
int3
push
mov
lret
cmc
js
adc
inc
daa
test
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
dec
leave
xchg
fdivl
jle
stos
sbb
xchg
dec
cmp
in
fdiv
fstpl
dec
icebp
imul
add
sub
mov
mov
jo
mov
leave
lcall
add
icebp
repz
dec
xor
mov
and
sti
and
fistpl
nop
or
clc
pop
insb
repnz
sbb
fdivp
les
shlb
push
call
into
and
imul
push
pushf
fldl
stos
cmp
cmp
xor
add
or
lahf
jge
dec
pop
rcr
ds
fnsave
out
mov
push
roll
mov
les
mov
push
mov
add
push
in
and
aad
mov
lret
jl
fiadds
iret
lret
xor
pop
aam
mov
jge
jle
push
mov
mov
jmp
adc
sbb
outsl
pop
dec
hlt
and
imulb
sarl
add
sub
mov
cmpl
xor
hlt
mov
xchg
or
movsb
mov
cmp
push
adc
push
bnd
enter
mov
in
aad
int3
sarl
push
jge
xchg
fcmovne
jg
adc
outsb
jmp
lods
outsb
push
iret
pop
mov
faddl
scas
jo
mov
insb
or
mov
icebp
ljmp
out
xor
mov
xor
ret
xor
xchg
mov
fadds
mov
add
sbb
pop
or
adc
inc
lods
cmp
ja
inc
ss
mul
mov
pop
das
arpl
inc
fs
push
and
dec
push
jmp
mov
negb
xorb
jbe
daa
jns
in
data16
das
xor
and
cmp
rcl
push
lds
or
leave
xor
pop
sarl
adc
mov
mov
or
aad
push
cmc
push
push
adc
imul
repz
and
pop
xor
xchg
cmp
push
mov
mov
std
xor
jge
cmp
jb
imul
or
jno
fsqrt
das
dec
and
in
pushf
data16
jne
jne
sbb
imul
adc
enter
add
cwtl
mov
lret
or
ljmp
dec
aas
adc
mov
scas
daa
mov
inc
dec
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
out
add
xor
fldl
xlat
test
int3
out
push
insl
and
popf
sub
mov
out
jge
mov
jg
dec
lcall
nop
cmp
sahf
adcl
lcall
imul
sub
mov
pop
lds
jne
jo
std
mov
mov
sbb
mov
mov
enter
les
lea
and
aad
push
cli
rcrb
mov
jg
adc
push
push
jns
pusha
jecxz
cmc
rcll
add
mov
xor
or
lods
icebp
xchg
jmp
out
in
pushf
popa
clc
popa
jae
repz
cli
fsubrp
std
fildll
mov
imulb
mov
std
push
push
pop
push
sbb
sti
ljmp
dec
adc
pop
and
mov
xor
ja
mov
mov
pop
out
lea
or
mov
jle
mov
in
adc
ss
inc
repnz
adc
cmc
fnsave
cmpsl
pop
cmpsb
je
cmp
decl
push
imul
xchg
add
push
cmp
push
push
pushf
cmpsl
sbb
jge
test
stc
in
adc
or
mov
scas
mov
aas
rcr
inc
add
lcall
sbb
loop
or
cmpsb
addr16
pop
push
nop
adc
pushf
ljmp
out
mov
lret
int3
out
add
sub
inc
lock
xchg
lea
jle
jae
add
gs
or
movsl
call
pop
imul
adc
imul
push
mov
imul
orl
sbb
push
mov
jmp
xor
sbb
pop
mov
mov
inc
sti
xchg
or
loop
inc
aam
mov
adc
or
roll
in
daa
mov
and
and
dec
ret
test
jmp
inc
push
test
gs
jmp
gs
inc
shrb
mov
and
or
aas
adc
or
aam
test
in
cmpb
mov
dec
jae
dec
arpl
push
jmp
pop
sbb
cmpsl
hlt
sbb
jg
pusha
mov
leave
sbb
rclb
leave
add
add
xor
push
xchg
pop
testb
mov
jl
jle
add
cwtl
dec
mov
xor
shlb
ret
arpl
in
ficompl
lds
test
push
lea
lock
les
sahf
inc
push
sub
ja
cmp
dec
test
xor
add
mov
xchg
xor
mov
sub
jae
clc
cwtl
in
lret
push
lea
mov
inc
pop
scas
fs
mov
in
push
push
mov
add
add
and
sub
push
jnp
repnz
cs
fwait
mov
push
bound
sub
dec
dec
xor
mov
jecxz
lcall
inc
stc
sbb
icebp
push
mulb
cwtl
cld
clc
jno
mov
jae
lods
jo
aas
fnstsw
divb
je
scas
or
inc
dec
jmp
sub
call
neg
adc
adc
or
push
mov
sub
xor
mov
orb
mull
scas
popa
cltd
or
mov
dec
cmp
add
xchg
movsl
xchg
in
sahf
test
push
mov
xor
loopne
mov
in
dec
cli
cld
clc
daa
ja
dec
pop
push
hlt
pop
push
int3
dec
outsb
out
xlat
mov
and
cmp
imul
insb
dec
cmp
imul
or
xor
mov
pop
inc
rcrl
je
rcrb
cmp
push
sbb
cmp
push
pop
mov
fcmovnb
addb
stos
rol
mov
imul
inc
cmpsb
xchg
mov
hlt
mov
push
mov
adc
shl
loope
jb
mov
or
jge
int
dec
call
mov
mov
mov
cli
sahf
sub
les
iret
xchg
jecxz
cmp
sbb
mov
in
add
jg
lds
push
rol
in
adc
xchg
push
stos
jmp
mov
mov
jp
mov
and
repz
dec
scas
xchg
mov
gs
fcmovbe
jb
decl
fisubrs
scas
call
daa
mov
mov
data16
out
adc
pusha
lds
andl
and
xchg
and
ret
lods
leave
pop
int3
call
or
dec
sbb
mov
cltd
dec
mov
jmp
xor
mov
jg
dec
jmp
in
push
or
jns
cmpb
xchg
pop
out
sub
pushf
lahf
sub
xor
jmp
je
push
push
lock
outsb
dec
mov
push
scas
jl
jle
rclb
sub
add
mov
cmp
sbb
mov
in
stc
adc
push
int3
cs
ret
sbb
jb
jge
pushl
in
pop
popf
popf
jmp
inc
inc
cmp
and
repnz
cmpsl
leave
mov
lret
dec
inc
mov
lds
dec
test
sbb
cld
pop
push
inc
cmp
jns
bound
push
iret
mov
or
aas
jcxz
in
pop
jbe
rcl
cli
cltd
xor
mov
test
dec
jae
push
cmp
adc
pusha
mov
xchg
daa
inc
xor
adc
mov
dec
out
cs
test
out
test
aaa
popa
dec
sub
xor
xchg
out
push
sahf
jae
loope
push
pusha
mov
xchg
xchg
mov
dec
imul
aad
jae
mov
dec
mov
inc
and
hlt
push
scas
je
pop
lock
or
adc
in
das
or
fistpll
aam
fsubs
out
in
jb
bound
cmpsb
ljmp
leave
roll
xor
in
lods
cmc
insb
mov
mov
mov
bnd
in
mov
aam
adc
popf
loop
mov
sbb
daa
mov
aad
jge
sbb
imulb
test
inc
ljmp
dec
push
mov
xchg
or
jg
hlt
dec
pusha
mov
stos
inc
gs
cwtl
push
xor
jl
mov
or
add
cmpps
sar
insb
ljmp
repz
mov
in
orl
in
or
mov
daa
sub
fs
xchg
shlb
mov
std
cmp
jle
out
push
je
push
pop
xor
xor
jno
in
xor
add
jle
xor
adc
jl
std
inc
inc
in
aaa
imul
sbb
enter
xchg
imul
ja
push
popa
fisttpl
call
iret
sub
mov
inc
scas
lea
push
out
push
sub
dec
je
imul
movsb
mov
mov
mov
xchg
cmp
sbb
fwait
call
adc
lret
test
hlt
in
jl
stos
mov
fmul
js
out
mov
cmp
mov
mov
jecxz
repz
pop
mov
sbb
cld
pop
xorb
add
dec
ret
fidivl
nop
das
and
xchg
sahf
cs
jmp
fcmovnb
or
push
fs
leave
test
sbb
shlb
roll
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
imul
inc
jle
scas
jl
jle
jne
mov
and
hlt
add
and
jl
fistl
arpl
fisubrs
stos
lods
repz
int
inc
mov
aas
test
adc
inc
push
pop
notb
or
pop
or
xchg
sti
sub
fs
inc
push
jg
std
jl
test
fisubrs
sahf
push
sub
push
cld
mov
dec
xchg
aaa
test
insl
jae
cmpsb
mov
or
or
push
insb
pop
negb
xchg
jb
popa
jl
popa
rclb
mov
imul
ret
fs
xchg
pop
aaa
jg
sti
and
mov
xchg
sub
push
nop
xchg
sbb
jg
cmp
adc
add
out
mov
lret
or
test
pusha
out
or
test
or
dec
mov
arpl
mov
imul
cmp
push
orl
dec
or
jmp
loope
addb
orl
cwtl
mov
xor
cld
dec
cmpb
adc
or
mov
or
mov
repnz
stc
out
in
xor
icebp
pusha
or
cmp
push
decb
and
dec
clc
sub
data16
lds
test
pop
jo
xorb
ja
fldt
mov
add
dec
mov
lea
xchg
push
xchg
cmp
rclb
xchg
cltd
dec
orb
push
gs
enter
push
gs
dec
push
dec
test
cmp
lods
jns
or
out
cli
scas
andl
jp
fists
or
dec
cli
xor
shrb
push
movsb
sub
das
icebp
movsb
out
fbld
adc
enter
repz
jb
bound
adc
imull
mov
adc
dec
dec
fwait
jae
aam
jbe
insb
lret
outsb
movsb
popf
loope
cli
jno
jo
into
mov
jbe
add
popf
mov
mov
ret
std
mov
mov
add
lret
mov
or
add
dec
pop
idivl
mov
movsl
lret
mov
in
insl
push
dec
ja
add
ss
lea
pushf
pop
cmp
sbb
fstpl
mov
and
mov
aaa
jns
pop
mov
rcr
out
adc
aad
and
mov
add
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
xlat
jle
dec
inc
jle
scas
jl
jle
fiadds
fadds
add
adc
sbb
lret
leave
adc
sbb
push
add
cmp
popa
sbbb
data16
pop
adc
pop
xchg
es
cmp
and
jae
cwtl
inc
inc
or
mov
mov
popl
cmp
dec
dec
push
dec
add
popa
mov
push
pop
arpl
xor
xchg
imul
push
or
out
cmpsl
or
push
add
popa
lds
push
pop
movl
pop
push
add
stos
push
nop
clc
jge
mov
push
cltd
xchg
sub
stos
repz
ds
outsl
cmp
pushf
xchg
xchg
xor
add
sub
mov
loop
and
xlat
jno
dec
popf
xchg
cltd
sub
addl
nop
sub
int3
or
hlt
mov
jle
in
dec
or
jns
sub
or
ja
in
aaa
sub
push
xchg
nop
shrl
stc
in
rorl
andps
sub
xor
shlb
mov
mov
pop
mov
xor
sbb
ja
mov
je
sub
xlat
cmp
xchg
mov
mov
nop
lahf
ss
mov
mov
or
mov
scas
jl
mov
jo
je
clc
lret
leave
fistpl
and
inc
mov
and
pop
inc
adcl
enter
bound
dec
and
add
adc
sar
scas
rorb
jecxz
adc
mov
bound
mov
pop
negb
adc
mov
insb
js
cmp
pusha
and
push
je
xchg
leave
stos
cli
out
outsl
sti
push
aad
mov
lods
loop
andl
roll
sbb
sbb
adc
mov
pop
sub
pop
inc
les
in
daa
stos
cmpsl
xchg
pusha
popf
mov
xchg
pop
cld
sub
jmp
sahf
in
ret
into
cltd
dec
movsl
mov
sbb
jle
xorl
and
fisttpl
das
leave
cwtl
dec
jae
js
sbb
jbe
sbb
cmp
jle
inc
mov
in
inc
rcrb
jae
dec
mov
sbb
jbe
inc
mov
and
cmp
adc
adc
pop
lods
xchg
ret
or
in
dec
push
jge
push
mov
adc
push
ljmp
jge
sub
push
or
rorl
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
jge
dec
xchg
jle
jg
jle
add
sbb
xchg
dec
test
or
clc
or
sbb
inc
jbe
jl
cmp
imul
jge
push
xchg
popf
test
and
xor
push
sub
push
pushf
mov
aas
jno
or
mov
sub
inc
nop
mov
dec
into
lcall
push
fs
iret
pop
lods
pushf
stos
push
insl
shrl
inc
adc
jo
add
fs
or
sbbb
pushf
jns
loopne
inc
repz
jno
xchg
rep
gs
mov
sbbl
ljmp
push
clc
add
ror
fstpl
jecxz
dec
dec
add
fadds
mov
lds
mov
pop
sbb
lods
lock
fwait
je
adc
addr16
jg
dec
adc
testb
lahf
stos
xlat
add
shll
movsb
or
fsub
sub
pop
jle
or
sub
cmp
imul
xchg
pop
cmpsb
cmp
push
and
pop
add
and
stc
testl
xor
in
jns
jae
icebp
inc
rorb
xchg
or
mov
pop
sub
xchg
mov
xor
inc
sbb
loopne
in
or
lea
fidivrl
push
popf
dec
test
sbb
or
dec
int3
out
xor
negl
aad
pop
or
mov
pushf
shl
xchg
dec
push
mov
fsubrl
mov
inc
add
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
mov
aas
sub
jle
movsb
jg
jle
jae
scas
out
inc
pop
adcl
ret
fs
lcall
lods
mov
sbb
xchg
in
or
pop
faddl
jl
or
inc
jmp
inc
and
icebp
and
dec
movsb
dec
bnd
push
and
dec
push
imul
insl
aaa
sbbl
int
outsl
je
push
sbb
push
cwtl
cmc
push
inc
imul
push
sarb
cmc
dec
jecxz
pop
xchg
sar
jae
jecxz
out
cmp
jbe
xchg
sti
and
push
insl
fcomip
cmpsb
addb
push
push
mov
lock
fldt
push
mov
pop
cmpsb
and
fisubs
pop
or
dec
insb
aad
xor
lock
mov
dec
pushf
or
rcrl
and
in
and
imul
mov
roll
inc
inc
jg
cmc
outsb
cwtl
push
jae
iret
push
je
popa
lds
cmp
cmc
outsb
xchg
or
sti
mov
add
in
sub
std
cld
dec
cmpsl
push
int3
adc
inc
dec
sub
aam
daa
out
inc
push
mov
xchg
jge
mov
cmp
push
and
test
add
ljmp
mov
xor
test
scas
fs
mov
ss
nop
jno
xchg
dec
xchg
ja
xchg
fsubl
pushf
pop
inc
mov
fdivs
ret
xchg
hlt
cltd
mov
push
inc
lcall
fdivr
popf
aam
out
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
inc
push
pop
adc
roll
add
pop
mov
les
pop
jbe
xchg
es
pop
imul
int
test
pop
lock
roll
sbb
jo
outsb
or
cwtl
cld
cmpsl
cmp
in
push
pop
fucomp
enter
xchg
adc
fdivl
xchg
je
dec
out
xadd
popa
fadds
mov
sub
mov
loope
hlt
loop
mov
out
fs
lds
sub
sbb
mov
nop
data16
jo
fdivrl
dec
xor
stos
int
lods
mov
out
add
shlb
test
fbld
clc
pop
popl
fwait
mov
stc
sbb
inc
xor
pushf
xchg
hlt
fbstp
push
xor
mov
sbbb
push
hlt
mov
in
mov
mov
out
stos
enter
stos
mov
pop
icebp
stos
pop
and
loopne
jmp
add
pop
ficoml
in
jle
lcall
dec
loope
add
add
sbb
jmp
sub
mov
mov
out
push
adc
and
cmp
xor
imul
shl
jecxz
xchg
xchg
mov
cmpsb
jl
leave
rcrb
cli
enter
mov
sahf
mov
add
fcompl
out
mov
decl
push
out
mov
push
arpl
sbb
fidivs
movsl
mov
cmpsb
mov
js
xchg
jb
inc
cltd
xchg
jmp
lock
mov
repz
testb
add
cmpl
arpl
xor
mov
js
lock
add
pop
inc
push
iret
push
push
mov
sbb
xchg
push
idivl
and
xchg
inc
sub
xor
test
jns
xchg
mov
es
dec
jecxz
mov
adc
xchg
cmp
sub
and
mov
or
add
add
mov
push
popa
sbb
roll
add
cmp
xorb
sbb
mov
or
push
jbe
loopne
sub
xchg
add
shl
out
or
fwait
je
fbld
out
ret
jns
and
stos
inc
inc
fcoml
not
jae
clc
mov
lcall
out
or
in
in
inc
sub
cmp
xchg
adc
jns
adc
scas
mov
add
scas
pushl
jno
push
in
into
sbb
mov
pop
push
sbb
leave
inc
or
test
inc
scas
cmp
pop
xor
jle
jno
cwtl
xchg
sub
push
aas
add
and
mov
jecxz
pop
add
sbb
ljmp
mov
dec
dec
adc
leave
mov
add
sbbb
jo
jge
test
scas
lahf
jle
xchg
imulb
mov
insb
sbb
stc
je
adc
pop
push
push
and
cmp
add
mov
roll
add
lds
add
faddl
cmp
imul
popa
popa
mov
sbb
fidivrs
fs
dec
mov
mull
push
stos
fcomi
lds
das
addr16
shl
scas
dec
mov
jns
decb
clc
dec
sbb
or
adc
fildll
repnz
and
iret
mov
jne
mov
cli
rep
dec
add
in
hlt
and
pop
ret
adc
push
cmp
std
into
sahf
xchg
arpl
jnp
and
int
adc
jle
repnz
xchg
pushf
sub
cltd
lret
mov
or
movups
stos
aas
cmpps
fldl
aam
in
cmpb
xor
jnp
aas
pop
sub
mov
or
jge
vpshlb
pushf
add
jge
ficoms
scas
pop
mov
rorb
xor
and
jns
add
mov
add
pop
jae
or
pop
dec
or
les
lock
add
fildl
add
pop
add
clc
pop
xor
ficompl
cmp
rclb
or
gs
cmpsb
cmc
xchg
xchg
cmp
imul
push
lods
add
mov
js
lahf
lods
sbb
jmp
pop
cmpsb
push
sbbb
std
add
ss
jb
mov
loop
fs
mov
and
and
mov
adc
gs
xchg
or
pop
sub
test
xchg
or
aaa
cmp
xchg
jns
inc
jge
das
inc
stos
pop
xor
bound
push
scas
lahf
xchg
push
sbb
rcll
loopne
push
pushf
jbe
scas
mov
aas
jae
xchg
or
into
shrb
mov
aam
mov
popl
repz
dec
jg
pop
lahf
rorb
add
dec
mov
ljmp
xchg
dec
add
cmp
add
jg
cmc
insl
cmc
out
lcall
enter
ret
outsb
gs
add
add
imul
mov
inc
add
outsb
loop
jnp
sbb
arpl
cmpsb
push
out
jp
mov
sbb
mov
mov
cmpsb
ret
adc
rclb
pop
sbb
jae
fwait
jo
push
pop
add
xor
push
addr16
xor
test
push
orl
mov
adc
fs
mov
outsl
dec
fcmovne
jecxz
cmp
gs
mov
pop
insb
adc
lret
xor
inc
or
dec
ss
lock
adc
mov
cmpsl
rcll
pushf
add
xchg
mov
sub
and
cltd
aad
pop
jne
test
sub
outsb
test
cmpsb
pop
dec
aas
or
pop
test
sub
and
fistps
cmp
sahf
mov
jg
ret
out
xor
popf
insl
fnstsw
adc
pop
jg
fadds
push
cmpsl
push
cwtl
add
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
pop
push
or
icebp
dec
or
mov
test
jns
mov
xchg
mov
stc
dec
push
sub
sbb
lea
jbe
mov
aam
sbb
xchg
mov
jg
push
std
mov
cmp
cmp
pop
mov
std
das
les
rorl
in
out
add
repz
popf
in
mov
ret
movsb
add
xlat
sbb
push
dec
lret
cli
push
push
xlat
ja
jp
sbbb
fs
es
je
es
call
jno
push
push
mov
shlb
mov
stc
mov
cmp
cmp
ret
mov
push
sahf
jno
adcl
xchg
sub
popf
sbb
push
jmp
sbb
sub
les
pop
pop
adc
sub
insb
ss
dec
aam
addb
add
clc
pop
sbb
add
or
and
scas
sti
jle
pop
push
pop
jp
xchg
in
fadds
add
xchg
xchg
jp
jb
lahf
adc
and
sub
mov
xchg
push
inc
push
ss
or
daa
rolb
mov
dec
push
jnp
push
out
nop
mov
dec
push
jae
sub
xor
cmp
push
cmp
xchg
icebp
out
sbbb
fs
iret
lea
mov
ja
dec
aad
mov
hlt
movsb
xchg
inc
neg
inc
fs
cmpsl
pop
scas
sbb
or
loop
cli
pop
sub
mov
repnz
mov
dec
mov
add
orb
jbe
addr16
in
or
dec
addr16
test
sbb
stc
mov
nop
push
std
jle
js
push
mov
push
in
add
in
fidivl
pop
adc
mov
jecxz
repz
mov
ror
push
and
je
cld
outsb
arpl
add
lahf
fnstcw
ss
lahf
stc
bound
imul
add
jne
iret
mov
sahf
sub
adc
jb
test
jbe
int
push
mov
lret
adc
pusha
jp
xchg
clc
or
hlt
inc
fstps
mov
cli
dec
arpl
cmp
xor
jle
es
loopne
xchg
in
insl
inc
movsb
jmp
mov
add
sbb
sbb
or
rolb
addl
aaa
addr16
cmpsb
loop
ja
xlat
out
out
cmp
ljmp
mov
xchg
lods
bound
out
cmc
inc
xchg
psubw
xchg
in
lods
movsb
sub
xchg
aaa
jne
nop
iret
xor
fistps
push
rcll
pop
mov
repnz
lods
pop
fsubrp
jl
and
loopne
mov
andb
cmp
xor
sub
lcall
mov
push
and
jp
popf
test
inc
cmp
and
cli
xor
add
popa
add
add
push
jl
jle
insb
out
adc
sbb
or
add
add
js
fneni(8087
and
leave
sub
into
dec
clc
call
dec
dec
lods
sub
ret
je
mov
sub
mov
inc
mov
dec
jmp
fdivrl
dec
add
xor
mov
xor
add
mov
shlb
outsl
int3
sbb
in
test
add
dec
inc
dec
sub
das
aam
aam
rorb
and
jle
adc
mov
sub
andl
cmp
mov
mov
xchg
imul
sar
fstl
rol
sti
cmp
scas
ja
sbb
stos
inc
daa
stos
pop
adc
dec
pop
adc
mov
mov
push
es
dec
mov
inc
inc
sub
insb
pop
lds
push
shll
jl
out
call
iret
jno
js
sub
add
fucomp
ret
add
add
fwait
mov
in
xor
adc
push
faddl
add
or
mov
mov
addl
lods
pop
mov
push
add
outsb
test
rorl
dec
movsb
shl
pushf
cmp
mov
mull
mov
mov
cwtl
cmp
mov
cmpl
enter
pop
sub
scas
sbb
jbe
addr16
jbe
aaa
adc
cmc
scas
and
adc
sub
mov
mov
push
jmp
in
lea
pop
xchg
xor
adc
or
xor
mov
mov
mov
mov
loop
ds
out
popf
push
cmp
push
jp
movsb
jmp
cmpsb
sub
ljmp
loop
divl
popf
xor
cwtl
es
and
out
mov
sbb
adc
fiaddl
push
cmp
int
or
lock
enter
jbe
adc
add
add
data16
jne
mov
lcall
add
add
xlat
xchg
out
mov
or
and
pop
jne
xchg
pop
cmpsb
lcall
orl
adc
push
dec
jne
add
and
stos
xor
cwtl
mov
into
push
mov
jle
repnz
fwait
pushf
test
daa
mov
mov
push
mov
and
mov
mov
je
and
xor
pop
jne
stos
and
sbb
ficoms
pcmpeqw
sub
pop
jnp
sbb
sub
push
cmp
jbe
xlat
sarl
rcr
push
mov
hlt
in
jge
shrl
pushf
cmp
aaa
or
push
arpl
incb
cmpl
mov
fisttpl
daa
jae
rorl
push
fstps
lret
or
data16
in
pusha
mov
jmp
xchg
shrl
sahf
cmc
leave
jae
dec
pop
enter
or
add
add
add
jnp
sti
xchg
lahf
mov
call
add
outsl
sub
sub
arpl
mov
call
lea
mov
pop
lock
push
fldl
and
hlt
sbb
dec
mov
inc
insl
xor
out
fwait
push
daa
leave
arpl
pop
inc
scas
stos
js
rorb
push
loop
mov
das
pop
jns
push
lea
lock
ljmp
push
xchg
popa
out
pushf
in
call
popf
mov
pop
push
fstp
loop
xor
ljmp
cmp
xor
and
xchg
leave
xchg
cltd
cs
sub
int3
mov
adc
mov
pop
lods
in
push
dec
repnz
call
loop
dec
adc
cmp
lahf
jle
popaw
mov
pop
sub
ljmp
fsubl
and
xor
mov
dec
cmp
aas
and
test
xchg
dec
cli
dec
add
pop
pusha
inc
dec
cmp
add
sub
pop
sarl
mov
mov
add
push
mov
scas
cmp
pop
mov
adc
inc
clc
ret
push
test
inc
dec
sbbl
lcall
xor
fdivrp
ret
divl
ss
xchg
add
arpl
loop
jecxz
xlat
cld
inc
cmpsb
adc
sbb
iret
sbb
or
or
adc
inc
stc
sbb
sub
xchg
mov
jo
sarb
cmpsl
cmp
or
pop
test
dec
push
xchg
addb
movsb
cmpsl
cmp
jns
fistps
jmp
sahf
dec
out
push
mov
rorl
jo
cmp
out
cltd
in
mov
movsl
mov
push
enter
leave
aad
addr16
or
cmp
popa
jae
cltd
ljmp
sbb
fnstenv
outsb
ja
lahf
cmp
clc
fistps
mov
andl
into
mov
sub
add
imul
add
add
repz
std
repz
and
and
add
add
movl
mov
imul
ss
int3
mov
jp
adc
lds
xchg
and
add
dec
iret
mov
fistl
into
mov
adc
dec
daa
pop
movsl
pop
push
insb
hlt
ds
mov
add
sbb
ret
dec
dec
iret
js
daa
hlt
popf
je
cmp
out
scas
mov
rcl
pushf
xchg
push
push
jns
lock
insl
mov
pop
mov
pop
shll
cmpsb
cwtl
xor
inc
mov
clc
jp
addr16
mov
or
lods
sub
xor
xchg
daa
hlt
cmpb
into
popf
ret
test
push
mov
and
sub
inc
adc
mov
lods
fistps
pop
addr16
mov
mov
dec
xchg
mov
ror
popa
and
adc
enter
in
sub
cmp
arpl
je
movsl
or
add
pop
stos
imul
lods
lock
xor
cwtl
es
push
sti
mov
mov
arpl
popf
mov
lea
cmp
addb
mov
jl
je
aas
daa
sub
push
xor
mov
aad
ds
adcl
daa
xor
xchg
jp
lods
dec
out
xchg
stos
jns
lds
test
jo
adc
adc
or
xchg
jl
dec
sbb
ret
add
mov
jmp
mov
pop
repnz
mov
mov
xor
push
faddl
test
jg
outsl
icebp
mov
fldl
das
jl
negl
xchg
sub
enter
and
push
sbb
sbb
test
out
sahf
pop
pop
hlt
clc
cmp
pushf
sbb
add
add
mov
mov
orl
add
imul
mov
cwtl
push
mov
add
push
or
loopne
daa
insb
icebp
insl
fiaddl
popa
loop
mov
pushf
imul
test
pushf
scas
fmull
lret
jle
jne
dec
test
stos
mov
adc
dec
xchg
das
jg
pop
cmpsb
cmc
xlat
outsl
push
adcb
ret
icebp
fwait
xor
dec
sarb
mov
stos
mov
daa
scas
popa
mov
int
adc
or
jns
js
fyl2xp1
sarb
jmp
add
loopne
call
pop
sub
mov
and
sub
cmp
inc
xchg
pop
fcomps
lret
dec
mov
mov
add
sub
mov
fs
or
mov
or
push
mov
cltd
lods
xor
push
pop
test
jo
or
cmpsb
cmpsl
cmc
mov
jle
mov
ficoml
mov
jmp
add
add
xchg
in
mov
incl
shll
jecxz
add
int3
loope
cmp
mov
inc
adc
push
int3
ja
imul
mov
jae
stc
add
and
fcoml
add
inc
int3
xchg
pop
mov
loop
mov
fbld
cs
sub
xchg
push
pop
aam
xchg
push
int3
test
icebp
and
lahf
mov
aam
pop
xchg
repz
cmc
xchg
inc
cmp
in
stc
faddl
ljmp
aad
iret
testl
sub
sub
stc
jns
test
xor
adc
jp
ljmp
pushf
outsl
sub
mov
pop
and
fs
lret
mov
or
inc
jmp
adc
mov
sahf
xchg
dec
pop
jge
push
scas
and
das
cmp
into
fwait
shr
cmp
jp
sbb
adc
stc
sbb
subb
mov
xor
cli
insl
push
xchg
push
sub
dec
adc
jmp
in
aad
add
inc
mov
in
negl
sub
movsb
sarl
mov
add
mov
or
xor
ret
xchg
xlat
imulb
mov
shll
dec
nop
test
and
cmp
mov
mov
push
std
sub
cmp
cmp
fimull
dec
or
push
fildll
lds
mov
sbb
fldenv
jno,pt
cmp
jle
cmp
add
xor
stos
inc
out
subl
clc
xor
and
mov
push
mov
pop
subl
roll
aam
lods
outsl
loopne
scas
jmp
push
fsubrl
lret
pop
repz
xor
xchg
adc
lcall
or
lea
inc
dec
push
repnz
jno
sti
aad
or
mov
xchg
add
pop
int
int
pop
popf
cmp
cmpsb
repz
inc
dec
cmpsb
sbb
aas
or
mov
jno
add
cmp
push
imul
push
add
add
mov
stc
dec
push
fdivrl
or
sarb
in
add
mov
shlb
lock
out
scas
pushf
test
adc
xchg
imul
and
pop
add
and
adc
test
xor
jle
jo
mov
ret
xor
in
mov
outsl
cmp
jno
xchg
divl
fsubr
inc
ljmp
or
cltd
popf
lds
mov
pop
outsb
fldl
ficompl
lds
or
lret
rolb
cltd
icebp
push
mov
adc
and
mov
pop
push
mov
pop
aaa
sbb
data16
mov
lret
sub
in
push
and
lret
sub
jle
cmpsl
push
sbbl
xchg
xchg
ret
jge
mov
out
xor
pop
mov
pop
outsb
sar
or
std
hlt
xchg
add
pusha
pop
clc
push
jnp
fidivrs
push
push
dec
dec
sbb
dec
cs
in
or
std
mov
add
adc
push
push
push
mov
hlt
inc
out
add
add
mov
cli
or
add
ror
xchg
sbb
mov
in
pusha
shl
inc
sbb
xchg
loopne
dec
dec
out
in
fldenv
scas
push
mov
ja
sub
dec
sub
daa
daa
mov
loopne
lods
adc
push
mov
cltd
jne
mov
sti
fildl
mov
or
test
sub
mov
mov
xor
in
je
idivb
lcall
jo
cmp
or
dec
fnstcw
add
push
jl
mov
fwait
push
mov
mov
adc
cli
cmp
fidivrs
push
cmpb
add
fists
adc
pusha
clc
std
pushf
push
sbb
test
jecxz
es
cmp
fldl
gs
sub
std
and
add
call
and
out
iret
je
test
das
sahf
fs
and
shll
fwait
add
add
repnz
add
pop
lcall
les
xor
inc
out
add
push
sub
add
inc
sbb
jmp
inc
in
insb
or
lahf
les
sarb
mov
int3
inc
jne
mov
push
sbb
jns
pop
mov
dec
ds
jo
or
out
shl
stc
pop
fdivs
cmp
add
icebp
out
cmp
jno
outsb
and
aam
in
jg
push
cld
setl
jo
frstor
mov
scas
movsb
xor
repnz
adc
inc
enter
xor
dec
mov
cmp
nop
dec
in
mov
xchg
mov
dec
mov
mov
fsubrs
sub
movsb
push
jnp
imul
sbb
xor
pusha
push
xor
mov
sbb
test
inc
cwtl
adc
jmp
xchg
cmpsl
or
add
push
jbe
mov
mov
push
sub
xor
in
mov
cli
xchg
adc
dec
pop
fldl
add
add
mov
push
decl
inc
rorb
dec
call
add
push
popf
enter
imul
imul
pop
xor
sbb
pop
call
nop
pop
adc
loope
lods
add
xor
or
aam
fcoms
or
jecxz
insl
mov
mov
sar
outsl
mov
xchg
stos
and
lock
and
dec
daa
dec
adc
push
in
dec
in
int
sub
inc
xchg
xor
mov
or
rclb
mov
xlat
out
xchg
out
mov
dec
inc
push
pop
in
ror
out
dec
cmp
pop
sub
xchg
add
adc
out
inc
cmp
mov
scas
cmp
jns
cmpl
inc
stc
add
inc
jg
lahf
cld
ret
mov
xchg
scas
xor
and
imul
lahf
lret
inc
xchg
sbb
lds
mov
inc
ss
fdivrs
imul
mov
cmp
xchg
mov
add
and
cmp
sti
fsubp
inc
push
sub
mov
add
add
cltd
pop
jmp
sbb
out
push
js
or
xor
and
add
test
bound
loopne
push
dec
mov
sbb
jns
mov
pop
xor
sub
hlt
pop
mov
mov
push
repz
imul
fmull
sahf
scas
repz
inc
fisttps
ss
mov
fildll
mov
stos
mov
shlb
fwait
addr16
and
mov
jo
nop
arpl
push
or
ret
push
ret
and
jae
xlat
sbb
loop
les
xchg
sub
jb
or
shll
inc
aad
sub
loope
adc
addr16
sub
les
cmp
pop
mov
js
ljmp
ds
mov
hlt
xlat
jae
xchg
push
and
push
sub
jbe,pn
xchg
xchg
test
inc
orl
add
add
outsb
xor
mov
lcall
ljmp
pop
stos
mov
mov
adc
xchg
in
push
rolb
test
or
and
outsl
fs
mov
data16
shr
cs
mov
inc
imul
into
sub
xlat
pusha
mov
pop
pop
inc
out
imul
scas
push
mov
sbb
add
inc
jl
adc
jb
insl
inc
shrl
and
and
xchg
cmp
insb
cmp
rclb
rclb
or
inc
xchg
xchg
add
out
gs
mov
cli
pop
inc
push
fsubrs
inc
mov
jge
lods
xor
mov
fstpl
xchg
stc
mov
push
lods
scas
lret
xchg
sub
gs
arpl
jae
rolb
mov
in
inc
jae
or
dec
push
xor
dec
ret
hlt
xchg
xor
sbb
pop
in
or
add
repz
ror
lock
jnp
xor
xchg
mov
jmp
add
and
mov
mov
lods
inc
inc
inc
in
sahf
fmulp
mov
lret
mov
sub
mov
movsl
or
aam
lea
and
cmp
xchg
xor
mov
fldt
xchg
push
cli
repz
pop
dec
push
cld
adc
aas
xchg
mov
fs
out
movsl
rol
push
std
xor
dec
lds
es
in
sti
pop
ja
rcrl
sub
push
sub
push
and
xchg
loopne
jmp
sub
call
cmc
sbb
push
jb
sti
call
and
mov
or
push
and
adc
dec
or
xor
je
or
aas
popa
mov
gs
out
outsb
xchg
mov
pusha
pop
pushf
stos
inc
add
pushf
test
repz
test
cmp
test
push
in
hlt
sbbb
mov
push
rorl
ficompl
sub
pop
sbb
andl
add
and
repz
fisubs
mov
add
add
xchg
mov
js
rorb
mov
dec
out
adc
repnz
push
and
and
ds
pop
sbb
mov
into
int
xchg
fisubrl
daa
push
lret
mov
pop
cmp
cmp
cltd
subl
loopne
lret
fnstcw
jbe
mov
jb
xchg
push
cwtl
and
mov
push
iret
dec
pop
pop
or
add
cmp
pushf
test
xor
jno
std
das
add
popa
xor
xchg
add
orb
xor
sahf
cmp
out
notb
lcall
mov
sbb
cld
aas
mov
imull
or
loop
roll
in
jmp
sbb
andl
fstl
mov
sub
jmp
adc
in
pop
data16
imul
mov
add
add
out
sbb
push
pop
or
in
add
add
test
rcrb
sarb
jmp
sub
rcrl
les
xchg
bound
rorb
adc
mov
push
sub
ljmp
aam
add
aas
ja
cli
fisubs
xchg
testb
stos
sub
jb
push
aam
orl
inc
lret
sub
cmpsl
inc
dec
jne
pop
fstpt
popf
int
jne
lea
inc
jmp
lock
mov
aam
and
xor
xor
shlb
and
loope
rcrl
daa
xor
jge
and
out
pop
adc
in
mov
pop
int3
pop
in
aam
ja
in
scas
sahf
push
mov
push
jecxz
cmc
ds
pop
jns
jecxz
movsl
fxch
adc
cmc
jmp
mov
push
sub
sbb
test
or
sbb
push
mov
in
sub
or
and
out
jmp
add
shrl
cmc
scas
sub
mov
push
add
add
or
sub
cmpsb
xchg
data16
sbb
mov
pusha
cli
mov
push
je
mov
cmpsb
shlb
push
ja
sbb
inc
int
pop
enter
mov
mov
mov
ds
add
mov
out
in
ret
jo
push
cltd
rorl
pop
mov
es
repnz
lret
shl
fcmovbe
clc
adc
nop
mov
cmp
movsl
loope
xchg
mov
in
gs
sub
clc
mov
and
addr16
sbb
lahf
aad
jae
sbb
mov
test
mov
cwtl
js
mov
pop
fs
cwtl
xchg
mov
adcb
push
es
push
mov
sub
adc
xor
mov
mov
jnp
leave
mov
adc
adc
loope
or
les
push
and
cmp
mov
lods
adc
adc
adc
xorb
add
push
sldt
add
pusha
rorb
cmpsb
mov
or
insl
out
add
add
rclb
inc
test
insl
out
mov
out
cmpb
ret
push
cmp
stc
adc
mov
and
inc
pop
inc
daa
dec
outsl
adc
popf
insb
cmp
fimull
out
xchg
out
jle
add
or
in
das
push
dec
xchg
fwait
inc
jnp
movsb
xlat
aas
pop
mov
dec
push
xchg
pop
mov
inc
dec
jb
fidivl
sub
addr16
push
mov
ret
lahf
scas
in
push
inc
outsb
imul
and
add
inc
mov
pop
push
mov
pusha
xchg
sbb
test
popa
xchg
inc
int
dec
mov
cmpsb
xchg
loope
cltd
add
test
test
test
insb
into
scas
addb
xorb
lcall
leave
in
pop
mov
mov
jbe
fs
mov
jmp
bound
lret
cmp
inc
loope
mov
add
jecxz
push
testl
jmp
add
inc
sbb
lret
mov
push
cmp
and
imul
lahf
and
lcall
push
test
insb
int
outsl
aas
inc
mov
ret
jo
pop
fildl
push
out
mov
jbe
dec
and
xor
mov
push
sub
outsb
stc
ja
jbe
data16
mov
pop
sub
push
outsl
nop
rcrl
xlat
and
add
and
mov
comiss
lcall
push
xchg
test
sbb
fcomi
sub
push
leave
mov
mov
dec
popa
cli
in
mov
lret
mov
out
in
pop
pusha
pop
adc
pushf
adc
mov
loope,pt
xor
mov
daa
call
in
push
fwait
lret
ja
mov
pop
sbb
arpl
fwait
cmp
xor
dec
int
or
jp
add
add
add
xchg
mov
mov
pop
das
adc
arpl
add
loop
mov
sub
scas
dec
lahf
mov
cmp
xor
outsl
call
js
jle
or
testb
jp
mov
push
scas
xor
fcmovnbe
imul
out
or
or
es
je
mov
sbb
std
test
xor
mov
or
inc
dec
xlat
inc
rcll
cmp
pushf
and
cmpsb
dec
and
loope
dec
mov
in
int
enter
jno
repnz
in
out
xchg
leave
xor
insl
es
xor
rclb
pusha
or
data16
add
fsubl
xchg
xchg
pop
scas
push
test
dec
pop
pop
sti
out
stc
lahf
loop
lock
sbb
loope
cmc
ljmp
outsl
inc
pop
stos
rcl
push
sbb
shrl
lcall
js
andl
int3
xchg
inc
pop
insb
cmp
loopne
xchg
jl
addr16
push
outsb
repz
das
cmpsb
or
add
mov
fucomi
xor
arpl
jl
add
add
lret
jns
fistl
mov
sub
inc
and
pop
mov
sub
rorb
mov
rcll
pop
incl
pop
sbbl
ret
xor
mov
repz
in
mov
ljmp
jb
mov
or
adc
rolb
mov
addr16
roll
dec
jp
inc
out
stc
rclb
test
cmp
data16
dec
cmp
pushf
xchg
roll
cmpsb
ds
mov
pop
stc
js
scas
gs
jnp
cli
pop
sti
cmp
popf
adc
dec
loope
push
out
and
push
sahf
dec
js
es
faddp
sub
push
lcall
les
stos
mov
daa
mov
cli
call
add
icebp
cmc
pop
add
sarl
add
popf
ficomps
pop
test
add
push
inc
pop
jns
aas
loopne
sub
jno
xor
add
in
inc
mov
cmp
jmp
jbe
sub
push
lods
pop
ss
dec
push
mov
outsb
out
pop
push
stos
roll
lret
int3
jbe
imul
sub
sub
adc
sbb
in
push
sub
inc
jl
dec
and
rcll
ljmp
sahf
inc
inc
adc
mov
ret
pusha
imul
or
xchg
testb
jo
sbb
test
mov
add
mov
lcall
ret
sarl
adc
int
adc
dec
dec
jb
add
repnz
out
orl
push
or
inc
hlt
movsb
outsl
and
mov
add
adc
xchg
push
cmpsl
jmp
inc
outsl
enter
rcrb
sbb
cmp
mov
jo
int3
add
and
adc
and
add
cmpsb
sbb
jnp
mov
test
add
add
inc
fnstsw
add
sub
push
xchg
push
cmpsl
inc
test
ffree
jae
add
repz
jmp
outsl
lea
mov
pop
inc
scas
or
jo
dec
int3
insl
or
mov
shlb
dec
mov
push
add
pop
cs
mov
cli
loop
mov
subl
daa
and
arpl
add
cmc
xor
mov
lret
in
loopne
gs
push
fs
push
mov
mov
daa
xor
sbb
sbb
cs
test
lcall
mov
popf
leave
mov
imul
ss
cltd
and
lock
arpl
lcall
mov
push
clc
mov
das
mov
popa
cmp
sbb
xchg
popa
shrb
mov
call
inc
mov
mov
in
dec
mov
add
add
xlat
pop
xlat
jg
mov
test
mov
add
fsts
push
in
lahf
lds
aad
jnp
jmp
adc
push
sbb
jb
rclb
cmp
pop
cmp
pop
test
lods
cld
out
xor
jbe
decb
imul
jo
jb
mov
int3
addr16
mov
push
cmp
mov
and
out
fstps
cmpsl
hlt
outsb
add
adc
sub
imul
push
xchg
mov
xchg
add
aaa
mov
jno
shr
ret
sbb
push
aaa
divl
sub
mov
nop
mov
inc
xchg
fldcw
in
jno
mov
fdivr
xor
and
jnp
mov
inc
fdivr
aaa
xchg
adc
jg
pop
iret
sub
sbb
inc
inc
sbb
movsb
inc
es
rorl
mov
fcoms
push
mov
add
mov
add
add
fdiv
mov
dec
mov
jns
testb
add
xchg
rclb
cmp
adc
addb
add
aam
jno
pcmpeqb
xor
pop
loopne
mov
pop
push
imul
dec
enter
ljmp
inc
loope
popa
insb
ficoml
lock
jge
sahf
add
lahf
call
test
add
xorl
mov
add
cld
aas
scas
xlat
inc
shrl
cmp
xor
jb
inc
out
jnp
dec
add
sub
cmp
and
mov
xlat
lret
popf
scas
aad
jg
ljmp
fcomi
sbb
jle
jg
gs
movsl
rorb
in
jne
insb
sbb
mov
movsb
cwtl
loop
fwait
cmpsb
or
bound
or
iret
push
ds
xchg
dec
ror
sub
dec
xchg
dec
jbe
scas
xor
iret
xor
mov
lock
or
push
push
scas
jne
bnd
pop
push
jl
out
pop
inc
flds
fnstcw
or
add
add
mov
fisubl
or
xchg
testl
add
stos
pusha
xchg
adc
mov
lahf
jo
pop
mov
in
pop
adc
ljmp
out
fstpl
lods
xchg
int
mov
jb
or
mov
xchg
xchg
aad
insb
jmp
xchg
popa
pop
or
inc
int3
xor
mov
sbb
fmul
cmp
adc
enter
roll
outsl
ret
in
outsl
enter
dec
xchg
lds
popf
sbb
xchg
push
mov
adc
faddl
subl
xor
mov
mov
or
dec
int3
out
mov
add
jge
pop
loope
lock
push
adc
test
pop
flds
mov
mov
mov
lahf
mov
pop
and
test
insl
add
mov
push
cmpsb
mov
push
fldt
jno
cmp
insb
sub
dec
xchg
call
add
out
cmp
add
jmp
imul
lahf
repnz
xlat
mov
add
add
into
xchg
in
out
imulb
or
pop
mov
pop
in
js
out
cmpsb
mov
loopne
ret
loopne
call
sbb
mov
push
in
xchg
icebp
les
cmp
xchg
sbbl
adc
lods
popf
push
xchg
gs
filds
cwtl
and
fmuls
sbb
jo
mov
cld
pusha
pop
adc
push
frstor
enter
dec
or
pop
mov
rep
mov
insb
addl
pop
adc
call
cmp
mov
das
lods
sub
cmp
xor
xchg
mov
adc
out
in
mov
idiv
lea
xor
add
rcll
dec
lret
dec
insb
sbb
pop
inc
xlat
xchg
push
dec
push
lahf
in
cmc
js
insb
ret
ret
jmp
mov
out
and
mov
lock
test
add
pop
lods
pop
cli
cmc
cmpsb
lret
and
arpl
lahf
stc
add
add
lret
xchg
mov
xchg
xchg
sub
sahf
mov
push
mov
cmpsl
out
shr
cwtl
jp
enter
test
popa
lcall
cmp
cs
and
and
pusha
sbb
scas
xor
call
jno
js
andl
mov
xchg
xor
lods
push
pop
leave
and
dec
mov
sbb
aam
adc
lods
or
cmc
shlb
out
out
push
movsl
daa
insb
xchg
xchg
dec
pop
iret
push
jnp
cmpsb
repz
jge
clc
mov
and
adc
iret
dec
out
xorb
loop
scas
xchg
nop
pop
xchg
sbbb
push
test
or
hlt
cmp
sub
fildl
sub
mov
adc
outsb
mov
pop
in
cs
cmpsl
jge
inc
enter
or
call
push
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
sbb
jge
mov
add
mov
adc
sbb
pop
inc
inc
sub
sbb
add
insl
loop
push
push
jne
nop
fimull
insl
or
fbld
call
lret
add
push
jbe
jmp
or
xlat
popf
leave
add
mov
inc
minps
push
fwait
inc
pop
cmp
movsb
mov
sbb
adc
mov
sub
xor
into
jg
dec
mov
lahf
push
outsl
mov
push
adc
sbb
mov
cmp
int3
mov
cmp
std
imul
les
test
enter
add
pop
jmp
icebp
cmpb
popf
mov
scas
dec
ret
xor
stc
mov
sub
inc
gs
and
xor
mov
adc
popa
mov
shll
aaa
and
loopne
adc
mov
add
add
aam
int
aaa
das
aam
fsubrl
or
add
mov
sub
sbb
adc
data16
rcll
jmp
or
pop
js
pop
pop
pop
adc
or
push
or
cmp
test
mov
push
je
jmp
mov
cmp
out
outsl
shll
icebp
cmpsl
into
rolb
pop
and
sti
cwtl
xor
adc
movsl
ficoms
pop
sub
jle
icebp
imul
fisubrs
lcall
ds
sub
sbb
stos
jne
ss
mov
sbb
dec
pushf
les
bound
pop
mov
adc
into
jns
cmp
fisubl
call
enter
shll
sbb
dec
dec
xor
orb
insb
fsts
and
iretw
or
jnp
aad
adc
aas
mov
push
rcll
add
pop
arpl
addr16
sub
mov
cld
add
add
insl
mov
inc
cltd
cmp
xchg
adc
fs
pop
jp
pop
and
fiadds
daa
mov
mov
test
add
push
cli
mov
add
inc
push
repz
movsb
mov
xchg
sbb
cmc
dec
sub
mov
call
push
jo
enter
iret
push
and
mov
dec
push
and
adc
and
daa
jno
push
dec
mov
in
gs
jmp
in
or
sbb
sbb
lcall
xor
test
lods
xchg
dec
fildll
out
add
xor
mov
push
test
dec
jmp
or
stos
mov
ficoml
ret
mov
mov
stos
fdivr
cmc
loop
add
inc
inc
push
and
push
outsb
in
jmp
and
test
push
or
ja
sbb
out
jmp
mov
fisubs
xchg
xchg
add
add
out
out
pushl
xchg
xor
imul
add
add
adc
scas
pop
mov
jl
push
into
and
arpl
push
popf
jecxz
cmp
sub
stos
stc
stos
inc
dec
mov
in
sub
fs
test
inc
popa
sbb
cmc
ret
in
add
insb
xlat
jl
lds
or
in
pop
stos
or
movsl
sub
add
jg
daa
int3
cmp
xchg
nop
xor
push
jg
pop
loope
icebp
sbb
in
mov
in
push
adc
adc
sbb
int3
push
adc
xchg
jmp
rcrb
mov
ret
pop
push
or
cwtl
dec
inc
add
mov
movsb
loope
dec
loopne
cmpsl
xchg
in
lea
gs
inc
mov
mov
mov
or
aas
push
cld
fildl
dec
repnz
cli
sbb
jmp
or
adc
sbb
sbb
int3
gs
pop
loope
mov
clc
movsl
push
cmp
mov
add
add
push
scas
mov
out
mov
add
add
adc
sbb
adc
or
cltd
add
js
or
sub
nop
dec
cmc
dec
mov
mov
mov
mov
sti
mov
cltd
test
jmp
inc
inc
mov
mov
in
adc
pushf
fs
jo
and
pop
cmp
sbb
cltd
push
loopne
lea
xor
adc
jl
rcll
pop
jp
cmpsl
movsl
cmp
jp
lahf
push
lea
faddl
xchg
mov
xchg
pop
cwtl
jb
int
adc
mov
rcl
test
fwait
cmp
mov
mov
jb
and
xor
jnp
std
xchg
idivb
in
push
xchg
repnz
add
cmp
fsubl
mov
stos
gs
dec
adc
cmp
cmp
xchg
pop
enter
fmull
lods
into
out
cmpsl
inc
jns
or
xchg
xor
jg
xlat
push
movsb
add
add
xchg
and
movsl
mov
mov
mov
jg
mov
add
add
lds
jno
fists
aad
cmp
pop
and
stos
stos
iret
roll
adc
leave
dec
out
loope
faddl
jne
xor
loop
sub
mov
sub
sub
xchg
or
cmpb
mov
sbb
arpl
add
mov
andl
in
jb
cmpsb
fcmovnu
sbb
sbb
insb
xchg
inc
inc
fwait
daa
adc
mov
neg
mov
sti
dec
push
jmp
rcl
int3
mov
pop
hlt
cltd
xchg
xchg
cli
repnz
and
mov
jnp
cmp
ja
xor
inc
jbe
push
loop
es
in
lock
enter
out
loop
jp
push
lock
negb
xchg
mov
mov
jae
mov
xchg
adc
rcl
dec
mov
mov
mov
bound
les
add
sub
dec
mov
imul
push
mov
add
fdivl
mov
movl
add
mov
in
out
xchg
ret
cmp
add
shlb
dec
pop
cmovle
cwtl
mov
out
push
inc
in
add
loop
js
sbb
xor
sub
out
mov
push
stos
leave
xchg
outsl
pushf
idiv
stos
addr16
add
jle
shl
mov
aad
out
sti
inc
xor
mov
xor
addr16
rolb
sti
rorb
mov
repz
mov
adc
xor
cmp
jnp
shl
or
fdiv
and
push
stc
pop
nop
into
push
xchg
scas
int3
shll
popf
cmp
mov
int3
les
scas
push
dec
jne
repz
mov
enter
ret
push
dec
cmpsb
nop
push
testl
bnd
jp
sub
xchg
xor
dec
xchg
push
jmp
insl
into
cli
sub
or
outsb
dec
and
adc
adc
lock
add
add
mov
mov
lods
imul
imul
mov
add
inc
aam
xor
jno
or
inc
ficompl
das
jae
inc
sahf
inc
jno
jg
inc
xlat
pop
push
jbe
dec
xor
mov
std
xchg
cmpb
daa
sti
mov
dec
arpl
movl
jb
sub
mov
push
enter
test
pop
sub
sahf
jo
aaa
jmp
push
or
cld
popf
enter
test
mov
adc
fs
roll
lret
ret
addr16
popa
add
outsb
or
adc
cmp
pop
sub
lea
mov
mov
fdiv
sbb
lcall
add
push
and
pop
xor
jge
mov
inc
in
mov
repnz
cmp
push
ret
loop
aam
xchg
pop
cmpsl
mov
mov
lret
inc
nop
jne
outsb
sarl
shlb
stc
mov
add
je
fnstsw
and
mov
popf
out
adc
loopne
enter
add
add
mov
cmp
push
push
push
add
cld
das
jo
sub
sbb
add
pop
aas
push
call
pop
mov
lahf
stos
push
push
mov
jl
xchg
fsubrl
das
pusha
mov
xchg
xchg
pop
lds
push
and
jp
rcll
mov
cs
or
xor
stos
xchg
mov
and
or
push
xor
mov
pusha
cmp
lock
push
sbb
push
pop
outsl
sarb
lret
push
add
and
or
mov
je
inc
adc
popa
push
push
mov
and
int3
mov
adc
testl
fistpl
sub
adc
cmp
mov
cmp
movsl
sbb
iretw
push
mov
xchg
mov
ljmp
sub
sub
xchg
pop
dec
sub
testb
add
cmpsl
pop
cmp
ss
inc
out
leave
arpl
mov
ss
add
hlt
fbld
push
jp
roll
add
add
scas
cmpsb
pop
sahf
stos
add
push
dec
gs
cwtl
imul
xchg
ljmp
inc
jecxz
ds
mov
lcall
lock
sub
sub
ret
add
imul
xchg
pop
loop
loop
shlb
or
pushf
cld
sub
xchg
xor
cs
mov
mul
mov
or
sub
and
clc
or
push
lods
cmp
int
mov
rolb
or
adc
and
dec
sub
fisttpll
dec
scas
lcall
testl
xorl
cltd
icebp
repz
inc
pop
xorl
sbb
out
jecxz
popf
sbb
sti
cwtl
out
cwtl
mov
xlat
and
mov
push
xor
adc
mov
mov
xchg
enter
arpl
jp
mov
mov
cmp
add
mov
into
fwait
add
mov
aas
add
add
xor
mov
repnz
mov
into
sbb
push
rcrl
in
out
mov
push
leave
add
jp
xor
adc
mov
push
mov
out
sub
cs
sbb
je
xchg
movsb
cld
xor
mov
mov
divl
movsl
sbbb
push
add
push
movsb
rolb
xchg
lcall
into
jnp
sub
rcrb
gs
stos
or
pop
add
dec
add
rcl
lcall
mov
jge
outsl
push
daa
fdiv
inc
inc
insb
lock
mov
xor
into
adc
dec
sub
jp
hlt
mov
cmp
cwtl
ljmp
xor
movsl
mov
ja
add
add
rcl
filds
cmp
mov
mov
call
arpl
jp
push
cmp
jl
test
out
mov
pop
sarb
in
mov
add
pop
dec
aam
lret
repz
mov
clc
push
outsb
mov
movsl
pop
fdivrl
jl
leave
push
test
xchg
daa
je
movsl
push
and
sub
mov
xchg
mov
notl
fstpl
lds
in
and
popa
pop
repz
stos
test
cmp
pop
ret
push
ret
sahf
sub
sbb
inc
jbe
jno
rorb
shll
add
dec
fnsave
pop
xchg
adc
aas
shll
hlt
dec
push
fcmovnbe
adc
xchg
xchg
mov
dec
add
stc
and
out
ret
jns
sar
pop
adc
aaa
jmp
xor
pop
mov
mov
pushf
adcb
add
jmp
and
cmp
mov
jns
out
sub
and
fnstcw
lods
adc
inc
sbbb
inc
cmp
pop
mov
mov
test
sbb
push
mov
add
sti
inc
out
aas
mov
shrb
mov
push
add
add
fs
outsl
sti
push
inc
xor
inc
pushf
pop
inc
pop
imul
mov
repz
pop
pop
cs
insl
into
daa
mov
push
pushf
and
stos
lcall
leave
gs
push
aad
mov
or
movntps
pop
int
adc
movsb
jo
in
lcall
dec
xor
mov
pop
sbb
mov
cmpsb
sarb
push
mov
lea
sti
add
inc
push
and
mov
gs
stos
movsb
cld
cltd
shll
jno
and
fmuls
fcompl
idivl
inc
mov
idiv
stc
sbb
aad
push
ret
aas
push
in
adc
movsb
mov
addr16
mov
shl
aad
cmp
leave
or
and
mov
in
lods
mull
icebp
sub
lods
sbb
test
jl
call
jb
or
sarb
cli
adc
in
dec
xor
insb
stos
add
add
bnd
dec
leave
and
add
in
add
add
imul
adc
push
mov
or
pop
dec
popf
test
add
inc
rcl
sbb
push
loope
in
or
loop
in
enter
fxch
jne
das
sub
call
push
xchg
or
pusha
sbb
test
loope
sub
sub
sub
xchg
out
adc
add
ljmp
mov
gs
imul
or
sbb
xor
sub
add
dec
cmp
shrl
sbb
cli
adc
add
mov
add
lock
mov
cli
add
test
lock
inc
ret
sub
popa
rolb
test
sub
jbe
rcrb
mov
jno
jmp
and
std
leave
pop
fwait
rolb
insb
and
inc
fwait
inc
stos
jp
insb
sbb
ss
and
xor
sbb
in
out
ja
filds
jmp
pminsw
add
add
mov
icebp
out
fists
test
xchg
test
pop
orb
mov
je
shrb
int
jecxz
and
dec
cmp
fdivrs
pop
sub
aaa
xor
dec
mov
loope
mov
fsubr
dec
iret
add
in
arpl
push
inc
pop
pushf
call
add
push
xchg
sub
imulb
inc
rclb
cmp
push
sub
cmp
sub
xor
test
sub
stos
ja
or
mov
in
mov
xchg
aam
gs
xchg
leave
mov
roll
xchg
mov
jb
mov
adc
pop
ret
pop
fwait
dec
pushf
cmp
ds
jne
dec
fs
loope
repz
scas
popl
mov
mov
push
sahf
pusha
and
iret
popf
mov
jnp
out
mov
or
add
scas
test
in
inc
push
or
dec
xchg
or
add
pop
cmp
out
data16
xchg
jg
pop
scas
imul
in
aas
aam
ret
mov
test
sbb
sub
cli
mov
and
out
aam
out
dec
testl
push
dec
jb
in
or
les
ret
xchg
or
sbb
stos
pop
test
fcomi
stos
push
ja
push
add
push
inc
out
ss
mov
pop
hlt
cmp
inc
xchg
pop
and
aam
push
stos
imul
leave
lret
testl
repz
inc
jle
out
rcll
jae
lock
xchg
dec
lcall
js
mov
xor
xchg
ret
sbb
push
jne
mov
test
aam
jb
pop
sbbb
pop
xchg
rcll
addr16
gs
pop
mov
ficomps
das
jge
mov
fisubl
cmpsl
shlb
add
add
add
jg
neg
pop
daa
inc
stos
adc
or
add
jnp
lods
jnp
mov
mov
sti
jb
dec
daa
add
jge
aam
adc
popw
pop
lock
adc
aas
cld
add
js
cmp
adc
and
pop
dec
scas
daa
outsb
and
test
aaa
ret
inc
pop
aam
dec
fcomps
mov
lods
out
xor
pop
in
lods
lock
mov
ss
xor
lahf
pop
xchg
mov
ss
movsl
cmp
and
and
push
repnz
addr16
lret
xchg
cmpsl
cmp
frstor
sbb
add
pop
pop
jae
sti
push
pop
clc
push
lods
push
dec
xor
adcb
outsb
inc
addl
fwait
arpl
pop
arpl
mov
add
mov
pop
jl
mov
lds
add
sarb
jo
imul
cmp
out
and
sub
movsb
rcl
dec
loope
lahf
popa
xor
push
lds
add
cmp
sti
jg
cmp
je
ret
sbb
add
sub
and
mov
call
jge
addr16
dec
test
enter
mov
mov
outsl
xchg
fiadds
lea
jp
and
mov
push
ja
cmpsb
lret
arpl
mov
mov
mov
fiaddl
mov
mov
jb
shlb
fstpt
mov
stos
in
insl
aam
xor
stc
scas
fs
mov
xor
aaa
xor
add
xchg
xor
adc
xchg
mov
sub
sub
scas
sub
rclb
fnstcw
outsl
adc
jmp
sarl
aad
mov
xchg
mov
push
nop
dec
sub
dec
stc
scas
inc
xchg
loopne
stos
inc
addr16
fs
mov
or
shll
adc
jo
in
jnp
es
rorb
mov
sub
cmpl
fisubl
and
add
scas
aam
jnp
fstp
fcompl
fdivp
adcl
add
imul
pop
jp
mov
pop
pusha
addr16
add
sub
sub
fadd
test
ffree
mov
shll
xlat
in
repz
ret
insl
sbb
and
mov
roll
sarb
lock
push
adc
stos
lret
dec
fsubrl
call
adc
add
mov
push
nop
pop
xor
cmp
pop
lahf
scas
push
mov
shl
jno
lcall
add
sbb
and
inc
sub
xchg
loop
sbb
cmpsb
xchg
loop
fidivrs
adc
pop
mov
push
sahf
call
outsl
dec
dec
pop
bound
loopne
sbb
popf
jg
adc
outsb
not
jae
or
imul
pop
push
lcall
pop
mov
add
pop
or
jle
jnp
es
sti
ss
shlb
ljmp
rcll
pop
dec
xor
add
add
outsl
mov
add
rclb
addl
add
add
adc
test
lret
jbe
in
mov
mov
xor
aad
mov
daa
push
fs
stos
dec
or
call
dec
cmc
fld
inc
xchg
sarb
inc
daa
inc
mov
xor
push
xchg
adc
clc
pop
and
xorb
or
rcr
xor
and
sub
into
and
call
push
rcrb
dec
push
add
bound
enter
inc
xor
add
sub
jge
mov
sahf
jb
insb
cmp
movsb
movsb
xchg
cltd
out
in
dec
sbb
dec
cmp
xchg
inc
aaa
fs
inc
mov
out
shll
icebp
cmp
pop
test
jg
fists
add
shl
push
mov
dec
adc
lcall
insw
and
or
stos
push
repnz
shlb
jg
xchg
add
sbbb
loope
jmp
fnstsw
sgdtl
add
mov
out
pushf
mov
jg
inc
pop
sub
jg
pop
jns,pt
cwtl
mov
call
testl
pop
jns
sbb
mov
dec
push
out
xchg
inc
jns
or
pop
lods
pop
pop
in
or
repnz
add
dec
pop
xchg
pop
movsb
pop
dec
aam
xlat
orb
imul
jge
dec
je
test
pop
jle
test
cwtl
movsb
push
dec
pop
mov
sbb
or
bound
mov
sbb
inc
cwtl
inc
cmp
inc
dec
pop
xchg
adc
sti
cs
rolb
jno
mov
outsl
aaa
daa
iret
mov
rorb
jno
sub
movsb
mov
ds
xchg
sbb
mov
dec
sub
aad
int3
push
shlb
in
in
je
sbb
js
cmp
out
xlat
xor
sub
aad
sahf
add
xor
das
and
add
add
xor
test
dec
mov
add
and
xorl
dec
out
cmp
stos
pop
adcl
xor
adc
mov
sub
mov
aad
push
dec
mov
scas
and
pop
loope
lcall
shl
mov
push
mov
jae
std
cmp
sub
push
loope
and
xchg
mov
and
mov
and
iret
fs
mov
or
dec
push
sbbl
mov
jle
sarl
daa
adcb
mov
inc
sub
clc
adc
out
fldenv
test
xchg
jno
aas
decb
test
mov
pop
and
add
test
mov
test
mov
loopne
out
sahf
cmp
jns
pop
rcll
jle
pop
std
jno
popa
or
pop
not
mov
insb
int
ret
nop
jmp
add
add
cli
inc
jg
int
xchg
lods
or
fs
sub
adc
add
jnp
push
roll
test
jp
ret
ljmp
mov
je
mov
in
loope
pop
popf
xor
out
repnz
fisttps
sub
sbb
imul
xchg
push
in
dec
cmp
mov
fcomps
cmp
rep
enter
mov
outsb
popa
jno
repz
scas
push
mov
sbb
clc
push
pop
ret
ljmp
xlat
in
sbb
aaa
out
mov
cmpsl
sub
adc
and
je
jle
and
and
mov
js
pop
iret
push
int
sbb
out
inc
aaa
xchg
jp
push
inc
stos
sub
push
inc
aad
and
push
movsl
sahf
adc
addb
jmp
lret
lds
ljmp
in
push
outsb
inc
clc
add
testb
outsb
push
lock
std
cmp
jle
fistpll
ss
cli
xchg
add
add
mov
int3
jne
and
cmp
mov
xchg
ret
or
cmp
mov
mov
insb
pop
push
repnz
in
sub
leave
lea
xchg
gs
aad
cmp
ret
pop
loop
cmpsl
and
pop
pushf
or
adc
mov
in
lods
fwait
sbb
lret
add
adc
imul
sub
loopne
mov
imul
pop
mov
insb
or
mov
ret
adc
dec
jmp
mov
int
mov
lahf
or
stos
push
shrl
pop
cmp
repz
mov
mov
pop
or
pop
test
jae
sub
or
sub
inc
cmp
sub
sar
clc
mov
add
loopne
aad
jecxz
or
sbb
addr16
xchg
insb
xchg
stc
sbb
in
mov
lea
sbb
loopne
bound
add
xchg
pop
lds
xlat
ficompl
inc
loope
cmp
adc
add
cli
mov
sub
push
push
mov
xor
scas
push
adc
addr16
adc
jne
mov
mov
mull
jp
mov
out
jae
jg
aad
cmp
test
dec
orl
int3
mov
out
dec
xor
sub
pop
lods
jmp
das
and
pop
mov
stc
daa
lret
testb
mov
add
mov
sahf
sub
jg
mov
and
pop
lret
or
mov
fwait
and
mov
fucomp
mov
mov
mov
aas
adc
sbb
jmp
sbb
loopne
dec
mov
fcmovu
loope
adc
pop
or
jl
or
jmp
data16
jl
xchg
jno
pop
test
imul
pop
pop
lods
xor
jnp
xchg
testb
addb
inc
cmp
loope
gs
and
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
xor
cltd
and
add
je
fldt
mov
and
mov
xchg
jae
inc
dec
insb
fmuls
mov
insb
cli
idivl
mov
test
push
addr16
or
cmc
jmp
popf
dec
xor
adc
xchg
into
es
mov
ret
test
lret
sbb
adc
mov
repz
push
adc
aaa
xlat
arpl
mov
dec
fnstenv
ret
in
in
cmp
lock
out
sub
fwait
dec
dec
sbb
sbb
cmp
outsl
lahf
xorl
ja
lds
repnz
rolb
mov
dec
and
inc
rcrl
mov
fisttps
stc
rcrb
xor
iret
jg
data16
rcrb
push
insl
ss
enter
jl
leave
jns
int
ror
adc
shrl
cmp
test
mov
mov
je
pop
dec
push
xchg
outsb
popl
add
sbb
std
sbb
stc
cld
or
fisubs
addr16
es
add
mov
jbe
xlat
enter
dec
js
fldcw
cmp
in
sti
pop
imul
call
jb
mov
shrb
subl
or
push
lds
pushf
inc
sub
iret
arpl
cmp
push
mov
popa
mov
jne
xorl
mov
data16
sti
jne
dec
in
sbb
int3
mov
bound
jae
lcall
shr
or
sbb
imul
fldenv
cmpl
popa
mov
adc
xlat
adc
mov
in
xor
jns
jge
push
adc
jmp
fisttpll
stos
cmp
sbb
repz
xchg
and
call
fdivrp
cmp
jge
sub
xchg
adc
int3
jne
hlt
insb
jge
fidivrs
scas
popa
adc
in
cmp
pop
dec
mov
mov
add
add
pop
test
scas
repz
cld
adc
mov
add
push
popa
adc
fstpt
mov
cmp
pop
push
adc
dec
xchg
outsb
ja
stos
pop
and
sbb
faddl
mov
or
sub
aas
aaa
push
pop
cmpsb
mov
push
ret
xor
add
insb
add
adc
jmp
mov
lock
ficoms
push
xor
mov
sti
imul
addl
sbb
sub
mov
filds
mov
in
push
movsl
push
cltd
lea
and
fcmove
push
pop
ficomps
into
mov
out
jg
jg
pop
out
and
xor
andb
aad
jns
xor
clc
mulb
sahf
test
stc
lods
add
and
cmpsb
in
push
pop
scas
mov
adc
cwtl
movsb
out
loopne
sbb
xor
push
mov
das
or
fcoml
ret
add
mov
dec
pushl
sti
mov
cmp
pop
add
add
dec
sub
mov
and
aad
in
push
imul
inc
lcall
dec
clc
lods
xchg
enter
ljmp
sub
pop
dec
mov
mov
sbb
bound
pop
inc
mov
jae
rcl
mov
jmp
pusha
fstl
ds
jns
xchg
xor
mov
dec
in
sub
dec
sbb
insl
mov
xchg
xchg
clc
adc
and
jno
ljmp
scas
in
mov
lcall
fidivrs
pop
loopne
imul
iret
iret
stc
sarb
dec
sbb
inc
mov
jl
aaa
je
xchg
sub
add
cs
stc
push
out
mov
iret
dec
ret
in
or
int
push
out
mov
shlb
and
push
mov
fnstenv
sbb
mov
add
inc
cmc
sub
int
add
add
inc
ja
pop
aas
dec
push
push
lea
add
add
popa
mov
pop
jl
cltd
leave
pop
lret
sbb
sub
pop
ss
mov
xchg
xlat
popf
int
cmp
or
or
cli
fs
mov
aas
imul
fsubrp
stos
cli
lret
ds
xchg
enter
enter
xor
arpl
mov
sbb
std
pop
inc
lahf
jecxz
dec
cmp
or
rolb
mov
push
aas
inc
mov
scas
sbb
scas
mov
inc
add
and
push
loopne
mov
ret
xor
jno
add
jp
mov
stos
xor
cmp
jle
xor
es
jbe
daa
test
movsl
jne
xor
push
ret
loopne
jg
ret
addr16
mov
lea
xlat
popf
pop
repnz
cltd
pop
sti
daa
fucom
fdivrl
jae
clc
lock
add
add
xchg
jae
ja
div
mov
xor
pop
cmp
add
add
ret
xor
sbb
cmp
sub
cmp
adc
dec
sub
add
rclb
fistl
loopne
into
inc
dec
arpl
pop
xchg
pop
mov
xchg
dec
push
bound
jg
ss
xor
cmp
jnp
jmp
test
es
cmpsl
cmp
lods
push
ja
push
pushf
xchg
dec
push
scas
imul
inc
mov
push
mov
mov
in
cmp
inc
andl
call
out
cwtl
rcll
out
mov
add
cmpsb
mov
daa
shrb
loope
cmp
movsb
push
cmp
pop
testb
test
xor
jge
rclb
mov
outsb
pop
scas
xor
pop
in
out
xchg
clc
cmpsb
mov
add
int3
sub
mov
in
in
lahf
mov
adcl
cmp
add
add
cli
std
jg
push
pushf
dec
js
lds
aas
sbb
add
cmp
fcoms
rorl
mov
addr16
shll
pop
jmp
into
pop
xor
inc
cmpsb
inc
mov
cmp
xchg
test
ror
jle
pop
mov
pop
in
mov
push
mov
xchg
adc
or
push
and
outsl
pop
dec
lds
cmp
cmp
cmc
out
jmp
jmp
insb
jae
lea
sti
or
fisubrs
pusha
inc
dec
push
lea
movsb
mov
mov
std
sbb
in
ja
clc
dec
imul
mov
mov
cmp
xor
cs
nop
test
imul
test
addl
ret
cs
ret
adc
aad
int3
xchg
xchg
sbb
jnp
shlb
sahf
jo
mov
jnp
lods
es
mov
jge
mov
std
ljmp
ds
out
inc
pop
cltd
daa
scas
sub
fiaddl
add
testl
incl
sbb
in
lock
sbb
add
rcrl
fabs
xchg
push
xor
xor
subb
mov
lea
jecxz
out
outsl
insb
insb
add
shll
inc
xor
push
mov
and
adc
push
xchg
mov
outsb
clc
and
test
push
repz
adc
imul
cmpsl
fists
sub
push
mov
loop
ljmp
pop
stos
mov
mov
add
xor
out
lea
dec
cmp
pop
out
xor
enter
lret
addr16
cld
or
sbb
xchg
cs
cmp
adc
mov
or
outsb
test
jnp
dec
dec
lcall
mov
cltd
sahf
ss
mov
enter
test
mov
not
in
pop
mov
in
mov
inc
aaa
mov
pop
cld
jae
fimull
add
es
jg
pop
or
xor
cmpsb
dec
sbb
add
repnz
pop
mov
into
jmp
test
sub
stos
test
cmpl
mov
sub
addr16
leave
mov
mov
ret
in
sar
ljmp
scas
in
add
and
leave
pop
mov
sahf
and
cld
ljmp
xor
pop
fld
cmp
or
inc
add
hlt
ret
cmp
pop
out
xchg
lea
jnp
inc
pop
pop
xchg
push
mov
sub
xor
push
int3
pop
jnp
push
sbb
jp
inc
mov
mov
into
ret
adc
shrl
lret
push
add
leave
enter
fidivl
jecxz
aaa
leave
xor
mov
push
mov
pop
adc
leave
popf
adc
pop
adc
mov
cmc
lea
outsb
enter
lahf
orb
ret
add
push
clc
or
dec
push
cmp
sbb
add
dec
cltd
or
cmpb
rolb
loopne
jbe
loopne
pop
push
sahf
ljmp
or
jbe
xchg
test
xlat
inc
imul
add
mov
dec
xor
dec
imul
push
das
xchg
icebp
and
into
push
pop
iret
push
jnp
pop
sbb
ret
icebp
sbb
add
inc
out
add
jne
out
xchg
andl
out
adc
sub
inc
push
add
adc
jmp
enter
fmull
and
orb
xchg
cmpsb
test
mov
xor
stos
xor
testl
sub
push
jmp
pop
jecxz
dec
out
mov
in
popf
fdivrs
enter
out
push
decl
add
test
xor
mov
mov
mov
xchg
cmp
lea
test
add
insb
fmuls
les
ret
add
stc
lods
xor
mov
rep
push
push
add
add
jmp
les
pop
imul
stos
mov
jmp
dec
mov
ljmp
push
xchg
and
jae
movsb
stos
push
ja
aad
cmp
scas
sub
popf
fs
or
sbb
pop
cmp
mov
mov
fstps
popf
jle
in
jne
ja
lret
ja
push
sbb
push
lea
hlt
je
movsb
adc
gs
rorb
imull
xor
call
add
inc
jecxz
fcmovnu
scas
ficompl
jl
mull
mov
pop
ss
dec
push
popa
jnp
and
mov
push
dec
pop
jge
inc
fcoms
scas
int
inc
cmpsb
cs
jge
pop
adc
pop
pusha
mov
xor
test
fstpt
push
out
add
fbld
mov
out
or
jno
adc
dec
dec
jne
mov
ds
adc
inc
inc
loopne
inc
pop
xor
test
pop
cmp
mov
lret
pop
aaa
bound
ficoms
stos
sbb
call
mov
pop
pop
add
add
stc
jecxz
lret
sbb
push
fs
inc
add
arpl
scas
push
enter
lret
xor
push
inc
mov
rcrb
sub
pop
cmp
test
sbb
lods
jge
ss
bnd
push
push
jecxz
adc
push
xlat
bound
mov
adc
pop
mov
push
add
and
adc
add
push
adc
and
nop
sbb
movsl
xchg
iret
rolb
inc
in
lret
mov
pop
shrb
dec
mov
mov
dec
mov
out
push
in
fs
in
cli
sub
pop
mov
push
lcall
and
adc
data16
jg
cs
ja
enter
xor
inc
shl
push
notb
fwait
cli
mov
loopne
mov
pop
jae
shlb
add
mov
out
stos
jge
or
and
add
xchg
xchg
jns
aad
addr16
das
xchg
lret
movsl
mov
dec
aam
cmp
pusha
out
out
shl
aad
mov
and
stos
out
adc
es
lea
jne
xor
pop
fmul
fs
aam
or
dec
lock
add
sub
sbb
aam
mov
sub
jno
dec
int
pop
ud2
cs
cmp
int3
mov
mov
divb
jp
mov
repz
sbb
lock
add
enter
andb
sbb
push
jnp
push
jg
repz
movsl
push
movsb
inc
ds
enter
fwait
pop
xchg
jno
pop
adc
btsl
sub
psraw
mov
dec
or
or
orb
cmpsb
mov
mov
adc
sub
jbe
mov
mov
lret
sbb
repnz
nop
add
add
sbb
out
xchg
iret
push
aas
jge
je
add
movsb
sub
jge
push
mov
mov
fs
fiaddl
int3
fnsave
lahf
dec
sbb
fdivs
scas
bound
jns
dec
into
pop
cmp
sbb
or
xchg
mov
cmp
jae
aas
mulb
jle
rcll
fs
mov
aas
pop
stos
imul
out
add
fidivs
sbbb
sub
jae
enter
add
fistps
and
adc
jns
push
xlat
push
js
push
mov
mov
sarl
push
xchg
push
cltd
jbe
cmp
xchg
jle
jg
out
mov
mov
jle
adc
in
jmp
rclb
push
cmp
call
mov
jge
dec
out
stos
jecxz
cmp
imul
lcall
lods
push
out
aaa
sbb
jb
mov
xor
shrl
pop
dec
idivl
cmp
nop
jne
xchg
aam
add
cmp
out
loope
jns
rcrl
add
add
cmp
insb
mov
iret
fidivl
add
push
addl
in
dec
sbb
icebp
add
mov
inc
movsb
out
inc
in
and
mov
ljmp
and
jae
or
xchg
stc
rorb
mov
test
mov
bound
or
data16
cwtl
push
ljmp
dec
and
mov
mov
in
xor
pop
sbb
dec
jo
rorl
sub
cpuid
push
jmp
xor
jns
cmpsb
mov
dec
sbb
je
pop
jecxz
jae
push
daa
fistpl
enter
popa
fdiv
mov
insb
pop
xchg
out
loope
xchg
enter
in
xlat
dec
pusha
sub
xor
cmpsl
pop
adc
les
test
stos
mov
xchg
daa
cmp
icebp
xchg
iret
push
popf
jl
ljmp
fistpl
push
test
add
test
sbb
sti
push
mov
jmp
and
add
loop
shlb
cs
add
xor
jo
lea
bound
cld
mov
xchg
push
mov
imulb
push
popa
lods
dec
add
aas
cmp
iret
in
lret
mov
dec
xor
fcoml
and
test
or
fldl
arpl
stc
or
jmp
dec
mov
bound
cmp
lods
in
or
mov
daa
mov
cmp
dec
test
xlat
in
out
fisttpl
mov
pop
mov
xor
dec
cs
and
xchg
xchg
jle
add
or
pop
push
push
negb
loope
jbe
and
mov
pop
inc
cmc
cmp
jno
movsl
xchg
and
sub
popa
in
xchg
aas
jl
clc
inc
addr16
sbb
cmpsb
xchg
or
fstpt
and
cmp
or
add
mov
dec
idivl
cld
ret
add
rol
sbb
add
add
fisubrs
adc
icebp
inc
jb
fs
sub
and
push
sub
push
fwait
mov
xchg
ds
jo
fisubs
je
jae
jle
in
push
scas
fdivrl
cmc
adc
lds
mov
shlb
push
aad
and
mov
push
lods
xor
xlat
sbb
mov
push
rol
or
mov
leave
inc
xchg
scas
mov
jg
dec
push
les
ret
lahf
ss
fcomps
jle
and
or
sub
mov
adc
mov
push
jmp
and
aas
cmp
and
mov
icebp
ja
adc
cmp
xchg
cwtl
xchg
cs
dec
rorl
shl
stc
fwait
adc
test
add
mov
shrl
repnz
gs
pop
sub
pusha
nop
jmp
add
pop
xchg
cli
and
ret
mov
iret
mov
sbb
mov
add
xor
add
test
mov
mov
shll
sbb
addr16
jecxz
ret
and
mov
sbb
cli
mov
sbb
mov
fstl
insb
gs
mov
shll
ja
lahf
popa
int
mov
into
ret
mov
mov
outsl
sbb
mov
movsb
jl
sbb
rcrb
mov
mov
mov
cltd
adc
in
mov
rcll
sub
push
dec
mov
dec
adc
sub
out
dec
test
rclb
push
and
pop
jle
fcomi
ror
pop
dec
int
lret
lods
fildll
test
mov
sbb
test
sbb
daa
lods
call
mov
mov
ret
inc
loopne
push
dec
push
mov
pusha
aaa
jne
lret
bound
lcall
or
ret
xor
mov
push
call
loopne
add
add
mov
jg
arpl
out
mov
add
add
push
and
rcrl
lock
or
push
sub
faddp
pop
push
xchg
adc
xchg
xor
mov
or
jmp
or
test
out
mov
sbbl
mov
jmp
push
mov
cli
mov
shrl
lods
test
outsl
into
pushf
hlt
jbe,pn
movsl
cld
xor
mov
adc
or
aam
xchg
nop
mov
mov
pop
fadds
sbb
mov
push
insl
mov
pop
rcrb
fcomip
jne
mov
pop
jnp
push
mov
sti
sub
sbb
lods
mov
xlat
cmc
mov
xchg
inc
test
fmul
clc
enter
push
jge
or
sbb
lahf
mov
outsb
fcmovb
mov
sub
incl
shl
xor
xchg
cmp
push
fchs
mov
dec
pop
addb
lods
rep
dec
lods
mov
and
enter
add
xor
clc
cli
clc
sarb
sti
mov
dec
mov
add
nop
dec
mov
cmp
pop
dec
jo
mov
mov
mov
xchg
add
sbb
sub
pop
pop
cmp
jl
sbb
jmp
lret
gs
adcb
mov
mov
shrl
ss
pusha
rorl
ljmp
repz
and
sub
dec
xor
push
adc
inc
clc
popf
xchg
push
lods
mov
jae
cs
and
fidivrs
int
pop
adc
sub
xchg
push
jne
add
fcmovb
pop
scas
in
es
xchg
jmp
or
pop
xchg
mov
and
inc
scas
aaa
inc
mov
ja
mov
push
jno
sahf
out
push
or
fcmovnbe
fsts
xchg
pop
clc
pop
mov
pop
mov
js,pn
mov
fwait
or
movsb
push
inc
sub
jo
xchg
mov
cwtl
das
jne
test
std
cltd
aaa
imul
test
add
add
jnp
out
mov
lret
imul
test
inc
cld
xchg
adc
dec
repz
in
push
ljmp
loopw
jmp
into
inc
mov
jmp
std
es
xor
rol
lock
imull
jo
cwtl
addr16
push
ljmp
sarl
dec
fwait
jbe
cli
inc
ret
arpl
fsubrp
fdiv
or
push
rclb
icebp
sub
dec
sbb
sub
inc
mov
sbb
add
push
xlat
push
cmp
std
pusha
in
js
hlt
test
dec
scas
pop
add
mov
pop
add
mov
call
popa
mov
xchg
sub
test
xlat
xor
mov
push
xchg
cmpsl
xchg
addr16
xor
sbb
call
inc
das
jno
test
pop
jmp
jne
sbb
push
int3
and
pop
xor
add
test
rcll
scas
das
icebp
jae
add
stc
fsubrs
jo
add
fs
es
data16
insb
daa
mov
mov
sub
add
mov
shl
es
push
sub
adc
jbe
arpl
fbstp
stc
out
stc
iret
xorl
lret
mov
pop
xchg
sbb
push
add
and
lods
fsubl
loope
cmpsb
xor
in
stos
mov
fs
sbb
push
mov
icebp
je,pn
lods
or
jmp
cmp
xchg
jne
push
xor
add
mov
jbe
jns
mov
pop
and
jg
in
cs
inc
cwtl
add
icebp
and
jae
lods
jbe
cmpsl
fidivs
test
in
jns
pop
jge
mov
into
cwtl
sbb
jge
popw
adcl
sub
aas
je
scas
xchg
and
addr16
movsl
mov
popf
iret
stos
mov
scas
imul
call
inc
int
loop
dec
stos
or
ret
add
add
clc
mov
fldcw
add
lods
add
push
pushf
or
xor
popf
xchg
aaa
jg
add
xchg
pop
inc
sbb
mov
mov
adc
jmp
mov
icebp
jmp
arpl
bnd
fnstenv
cmpsl
add
xor
jl
mov
push
sub
out
sub
xor
lret
mov
jnp
push
insb
sahf
cmp
test
fisubrl
popa
or
or
pop
jmp
or
or
and
mov
xchg
xor
cld
inc
mov
and
and
mov
mov
aas
push
iret
mov
insb
lods
mov
jp
lcall
adc
mov
lret
in
dec
pop
pop
sbb
sub
sbb
jge
sahf
iret
out
out
daa
add
ret
mov
shlb
mov
inc
jl
je
inc
into
xchg
int3
lea
in
rolb
subl
mov
add
add
and
push
sti
cmpsl
enter
rolb
adc
add
aad
dec
pop
ret
xchg
les
sbb
rorl
lret
jmp
hlt
mov
and
in
aas
out
arpl
lds
xor
adc
stc
imul
xor
clc
pop
push
repnz
push
aad
and
mov
fstpt
test
adc
sbb
xchg
mov
imul
insl
sbb
dec
ret
andb
jne
sbb
xchg
ja
into
clc
dec
xchg
shrl
mov
shll
pop
ljmp
jle
xchg
push
add
mov
jbe
cmp
ja
repz
repz
mov
and
outsb
jo,pt
mov
aam
out
adc
mov
int3
cmp
mov
lock
das
mov
jns
jp
bound
cmpsl
push
ss
adc
gs
outsb
mov
in
incl
test
iret
push
lret
bound
jge
xor
mov
call
int
add
add
mov
std
mov
dec
push
das
inc
cmp
add
add
lods
mov
pusha
xchg
adc
push
fimull
pusha
push
cmc
mov
cwtl
and
testl
mov
cli
jl
jbe
or
mov
sbb
loopne
daa
add
clc
xchg
idiv
push
xchg
jbe
pop
jmp
sbb
movsl
lock
mov
cmpsl
imul
iret
fsubrl
lea
lock
cltd
or
cmp
push
cli
pop
mov
xchg
stc
jmp
jo
neg
fidivs
and
movsb
cmpsl
mov
aas
mov
call
scas
in
pop
fistpl
mov
in
push
cmp
and
inc
dec
imul
loope
sbb
push
dec
push
mov
gs
xchg
shl
fiaddl
inc
mov
iret
jg
int3
and
mov
xchg
rclb
sub
or
jl
xchg
push
lock
lock
add
add
and
jecxz
and
lcall
add
add
icebp
fcoml
sub
mov
lret
pushl
lcall
mov
subl
or
in
shll
or
hlt
movsl
push
add
adc
cmpl
repnz
cmpsb
mov
loope
add
into
lcall
test
aad
je
stc
push
jmp
push
ss
sub
out
filds
sbb
mov
or
rcrl
push
sub
sub
pop
push
jp
cmpsl
pop
fdiv
ds
jle
ss
push
mov
pushf
jl
pop
pop
jecxz
sub
lahf
mov
mov
jecxz
out
out
cmp
jp
stos
hlt
scas
imul
insb
mov
adc
in
aas
iret
arpl
subl
dec
out
stc
add
mov
scas
out
inc
add
repz
mov
pusha
inc
add
out
push
andl
xchg
loope
mov
shr
jecxz
roll
add
fiaddl
ret
ficomps
cmp
lahf
and
add
add
filds
mov
gs
repz
mov
push
pushf
loope
jns
leave
es
js
push
inc
cltd
movsl
jmp
add
push
test
test
sub
mov
sbb
mov
xchg
sarb
pop
hlt
xchg
scas
mov
enter
out
sbb
lods
into
and
mov
xchg
pop
push
jo
xchg
cli
lahf
out
mov
or
fbld
push
stc
and
xlat
jge
imulb
daa
sahf
pop
lods
push
in
mov
dec
pop
push
push
addb
arpl
decb
sub
clc
int3
mov
jp
jae
lahf
adc
pop
adc
inc
fs
es
adc
dec
push
jne
mov
popa
jns
pop
mov
inc
ret
addb
adc
fidivrl
dec
mov
xchg
mov
mul
xchg
scas
cmpsl
das
xchg
mov
adc
stos
cltd
inc
cmp
sub
out
pushf
mov
ljmp
or
cmc
add
add
lods
xor
mov
cmp
fnsave
mov
das
add
add
xchg
bound
cmc
and
loope
dec
popf
ljmp
xchg
stos
inc
cmpsb
scas
mov
xlat
cld
insb
test
xchg
cmp
rcrb
div
jl
inc
xchg
xchg
into
sbb
mov
sbb
jge
jnp
insl
out
pop
xchg
xchg
scas
adc
les
loope
pop
imul
push
cmp
mov
out
and
and
shll
fidivrl
loope
sub
ret
push
in
aaa
mov
sbb
nopl
pop
jbe
mov
jle
or
in
les
pop
rcrl
mov
dec
sahf
jmp
sti
ds
lcall
out
jp
lahf
and
mov
push
and
mov
add
cmp
push
stos
cmp
push
mov
data16
or
jecxz
jno
dec
jp
adc
mov
pop
jnp
shlb
rorb
xchg
pop
add
add
lret
mov
or
or
add
add
mov
adc
jmp
push
mov
mov
lahf
mov
inc
out
xchg
mov
pop
jl
and
fwait
lcall
imul
data16
mov
pop
and
and
nop
jg
aas
dec
dec
pop
sbb
mov
jmp
in
ljmp
aas
inc
insb
dec
jno
cltd
xchg
push
mov
loop
xchg
loope
popa
int
cltd
adc
and
mov
and
xchg
shrb
mov
add
mov
jnp
inc
jg
jae
mov
sti
pop
or
jns
inc
inc
imul
out
and
mov
aaa
add
stos
xchg
cltd
push
jl
jae
inc
rcrb
jmp
mov
jne
xor
mov
mov
ja
pop
mov
jg
clc
mov
sbb
jns
out
mov
fsubs
shll
add
popa
rcrb
pop
test
push
roll
add
sub
sti
pop
jge
neg
hlt
add
adc
xor
add
xor
ret
aas
imul
mov
loop
cmp
cli
cmp
mov
cmp
loope
hlt
sbb
test
imul
fxch
lods
aam
hlt
jo
jnp
push
mov
xor
or
cmpsb
mov
adc
jmp
aam
add
sbb
or
je
pop
mov
pop
add
shrb
lret
rcrl
out
pop
aas
adc
jnp
add
xor
jne
xchg
mov
lock
push
stc
inc
cli
jo
lea
fnstcw
das
push
mov
or
sbb
cmpsl
leave
cmp
arpl
sarb
fdiv
jo
inc
ja
sbb
push
loop
cmpsl
xchg
shl
insl
dec
sub
cli
adc
xchg
add
inc
popf
and
lea
jae
enter
xor
mov
ss
jg
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
push
gs
add
mov
call
jbe
addb
out
hlt
insb
inc
mov
xor
jp
cmp
cmp
shl
xor
inc
mov
shlb
into
jne
and
mov
ret
insl
pop
rcl
cmp
dec
cmp
js
mov
sub
clc
pop
inc
cmp
inc
xor
cmp
push
fisttpl
dec
test
sbb
pop
data16
rcrl
cmp
lcallw
jns
dec
aas
leave
shlb
popf
decl
pop
test
call
fmull
mov
sbb
jne
dec
jns
aam
test
in
orb
lret
jae
lcall
xchg
aad
mov
pop
dec
in
push
call
fs
cwtl
rcrl
sbb
das
adc
int3
xor
jmp
mov
mov
add
jp
jnp
sti
xchg
jle
jp
lods
dec
jno
das
mov
add
add
stos
push
cmp
pop
loop
pop
out
xor
insl
das
push
adcl
pushf
add
sbb
xchg
mov
add
ret
mov
push
lahf
push
shr
pop
jp
test
rcll
xchg
inc
rcrb
shll
push
or
subb
mov
mov
inc
adc
jmp
sbb
aas
sub
xchg
xorb
or
pop
cvttps2pi
mov
sbb
lock
mov
sti
aad
mov
mov
js
popa
aas
xor
inc
cld
push
add
addr16
fwait
xor
fistpl
jecxz
cmp
cmp
xor
shll
inc
jp
mov
lods
push
inc
mov
lods
jno
push
cld
fwait
loopne
mov
pop
into
call
xor
leave
xor
add
mov
push
sti
decb
mov
jo
xor
add
xor
sub
fs
lahf
out
aam
lea
je
fimuls
and
popf
imul
pusha
mull
or
sahf
stc
aam
aad
jo
in
push
test
cld
add
cmp
fwait
sub
cmp
xchg
mov
in
fneni(8087
sub
xchg
xor
in
je
add
test
jnp
ja
in
and
loop
fs
adc
sbb
cmp
push
sbb
incl
push
lcall
or
imul
sub
fadds
in
push
xor
push
xchg
and
faddl
pop
imul
jne
test
int
jmp
pop
adc
mov
add
aam
fwait
pop
fbstp
xor
std
cmp
test
xchg
pushf
and
push
mov
adc
je
sbb
imul
mov
add
add
cmp
xor
hlt
aas
scas
cmp
xor
add
testl
int3
lahf
data16
xor
pop
sub
pop
mov
lret
push
xor
out
push
lock
fcom
mov
lock
xor
adc
fistpl
das
xor
outsb
mov
adc
idivb
jmp
insl
push
test
jg
stos
or
popf
daa
aam
test
pop
xor
jecxz
das
fidivl
mov
or
mov
es
mov
rcrl
cmp
inc
jmp
pop
push
push
imul
sbb
imul
sti
push
cli
cltd
jg
jg
adc
sub
xchg
mov
push
popf
sti
pop
cmc
xor
roll
push
mov
xor
or
adc
cltd
ljmp
jnp
xor
cmp
fiadds
movsb
xchg
push
rcll
xchg
mov
jb
call
incb
ljmp
push
test
stc
lret
add
add
jl
mov
mov
mov
test
pop
adc
ficoml
sbb
pop
faddl
pushf
mov
and
in
rcrl
cs
lods
in
iret
jns
pusha
mov
pop
repnz
popf
mov
jg
mov
xor
mov
adc
push
mov
jo
jbe
push
jecxz
mov
into
xchg
xor
test
icebp
mov
pop
fidivs
test
xchg
add
stc
xchg
daa
jo
and
mov
mov
sbbb
jp
mov
add
rcll
add
loop
enter
ss
pusha
fisubl
inc
xchg
inc
adc
or
jecxz,pn
mov
test
xchg
test
jmp
inc
loop
push
or
jne
xchg
xchg
ja
test
scas
mov
dec
push
lret
ret
and
jae
sbb
cmp
mov
pop
dec
gs
jecxz
jo
mov
mov
add
add
rclb
nop
lcall
aaa
add
add
outsb
adc
cmc
movsb
xchg
inc
push
in
out
push
inc
daa
and
fmulp
jno
jne
xor
push
cmpsl
mov
das
test
and
mov
mov
dec
or
adc
test
cmc
sarb
cltd
sub
add
jmp
sar
lds
lahf
popa
loopne
mov
adc
inc
cmp
sbb
emms
jmp
xchg
jno
mov
movb
es
je
out
xorl
push
into
mov
pop
addr16
push
mov
or
in
cmp
mov
dec
in
mov
es
and
mov
fidivrl
test
xchg
push
lcall
shll
dec
sub
xorb
mov
sub
inc
jmp
cmp
inc
stos
cmp
mov
sbb
pop
int3
es
mov
jecxz
add
add
jbe
idivl
or
dec
mov
add
dec
xor
out
lret
push
subb
add
pop
iret
pop
add
sbb
data16
lret
mov
scas
push
roll
mov
xchg
lahf
or
mov
pusha
or
sbb
inc
sbb
ja
mov
ret
sub
pop
ja
cmp
and
sub
pop
mov
mov
push
mov
repz
dec
jnp
ja
sbb
mov
sbb
int3
rcl
aas
fisttps
add
pop
xchg
mov
int3
mov
xchg
xchg
xchg
das
lea
stc
push
jl
test
fs
fldt
mov
jmp
xchg
hlt
or
push
fistps
repnz
mov
lds
jae
sbb
cmp
repnz
lea
inc
aad
movsb
add
add
outsb
sub
stos
fs
jmp
leave
aas
fists
je
cmp
add
inc
sbb
mov
call
icebp
push
mov
icebp
rol
in
pop
stc
mov
mov
mov
cmpsl
rorl
shl
add
lahf
pop
popa
icebp
inc
jns
lods
jno
bound
mov
mov
outsb
mov
fs
out
cmp
xchg
ficompl
shlb
inc
xor
sub
and
mov
or
mov
lds
adc
and
push
and
addr16
mov
lret
jb
pop
sahf
out
test
aad
jge
daa
stos
shlb
add
daa
ja
mov
pop
push
in
cmp
pop
jge
sub
xchg
rol
cmp
push
in
jmp
paddd
mov
cli
outsb
push
repnz
inc
scas
push
mov
push
mov
jp
fnstsw
into
xor
sti
sub
or
mov
sub
cmp
fstl
sbb
push
addb
add
insb
pop
pushf
scas
fistpll
outsl
gs
in
fistpll
add
add
inc
mov
lods
movsl
mov
or
mov
ja
push
lock
mov
loop
and
cmp
xchg
mov
mov
fistl
jno
cmp
ja
fistpll
bound
xchg
in
add
cmpsl
mov
xchg
shrb
jo
add
cltd
popa
mov
add
icebp
cld
cmpsl
in
pop
loop
movsl
xchg
orl
xor
jp
add
xchg
adc
sub
push
loop
xor
cmpsb
ret
inc
jle
and
and
js
movl
cltd
fisubrs
or
das
cmp
fistps
push
pop
inc
es
push
ja
inc
push
or
push
sbb
dec
sub
and
sub
mov
and
xor
sub
ret
mov
push
adc
sub
and
jle
out
push
fcomps
jae
out
out
add
sbb
jnp
jnp
cmp
movsb
push
sbb
daa
push
in
add
add
popa
sub
mov
lret
mov
and
imul
pop
dec
sbb
jbe
cli
mov
jge
cmp
lock
jbe
test
push
inc
fistpl
adc
sahf
push
adcb
cltd
loop
adc
mov
scas
xchg
dec
mov
leave
loopne
stos
and
in
insl
push
adc
out
push
and
sbb
push
das
and
stos
jns
pop
aad
sti
fadds
sbb
ret
add
outsb
jl
ss
jae
and
insb
lret
shrl
push
mov
shrb
lret
jecxz
xchg
incb
iret
cmpsb
ljmp
lods
int3
jo
das
and
xor
pop
decl
movsb
mov
push
in
adc
loop
mov
jg
mov
xchg
nop
pop
test
push
rcrl
out
sbb
out
ja
cli
in
xor
sub
pusha
push
into
xor
pop
in
add
add
add
adc
jmp
or
xor
cmp
add
adc
add
sub
adc
mov
or
cmpb
pushf
repnz
lock
jp
loope
inc
mov
mov
bound
pop
inc
push
inc
jnp
pop
or
in
adc
in
ja
sahf
mov
ret
mov
pushf
xor
fcomps
imul
insb
jne
mov
test
dec
cld
pop
or
fiadds
into
sub
in
cltd
sbb
mov
imul
fildll
cmpsl
push
test
add
pop
xchg
int3
fs
idivl
jg
xor
pop
outsl
xchg
xor
sbb
mov
data16
cwtl
push
dec
or
outsb
bound
sub
cmp
nop
cld
cs
mov
fs
jne
popa
lods
in
jo
mov
out
adc
insl
xchg
cmp
aad
loop
bound
and
idivl
cmp
cld
imul
pop
jns
loop
mov
add
add
repz
cmp
lods
repz
mov
dec
fcmovnb
loop
cmp
add
xchg
f2xm1
test
cmp
cld
outsl
loop
inc
pushf
lea
mov
test
jnp
push
test
lds
mov
push
rorl
insb
loopne
sbbl
stos
adc
cwtl
mov
fidivrs
push
push
push
inc
imul
dec
adc
mov
sbb
push
sar
mov
pop
xchg
sbb
in
sbb
ja
mov
inc
inc
push
imul
adc
cmp
push
test
leave
or
push
adc
cli
popa
popf
sahf
jne
or
push
jle
in
inc
fldenv
xchg
arpl
inc
cmp
insl
sbb
bound
aam
das
hlt
cmpps
sub
ljmp
jo
push
ja
dec
mov
imul
clc
rcll
in
push
mov
xor
sub
pop
inc
fdecstp
out
add
aas
daa
push
cld
push
std
jmp
dec
push
or
add
add
out
pop
aad
mov
adc
dec
leave
fsubrs
mov
xchg
xor
dec
and
or
jecxz
xchg
fscale
in
ljmp
out
loope
stos
mov
adc
mov
jg
jns
scas
lahf
icebp
mov
ja
mov
push
into
out
inc
sti
arpl
pop
and
push
ljmp
mov
or
sub
push
sti
scas
stos
lea
push
ds
outsb
insb
sahf
sbb
inc
cmc
mov
imull
ficoms
subl
test
dec
rcrl
aaa
pop
mov
mov
pop
add
inc
jb
loop
aaa
or
loope
pushf
xchg
sbb
rclb
cmp
xor
repz
or
pop
xchg
dec
loope
mov
fcomip
mov
lcall
daa
mov
loope
mov
add
add
add
sbb
dec
push
out
aad
push
add
in
loopne
inc
ss
icebp
jmp
rcrl
scas
fsub
jne
lds
xchg
and
dec
sub
mov
jge
mov
test
xor
dec
and
push
jne
int3
xchg
xor
cmp
fsubs
cmp
or
stos
nop
xchg
test
dec
xor
in
cwtl
ficomps
mov
js
xor
jge
dec
add
mov
cmc
push
cmp
aaa
push
mov
test
jbe
aad
scas
les
xor
addr16
sti
dec
leave
aaa
inc
add
mov
or
std
or
ljmp
adc
pop
das
sbb
stos
cli
jle
sti
sbb
pop
data16
mov
ror
jl
icebp
lret
sub
rcrb
dec
lods
sub
outsl
pop
cmc
push
inc
mov
jmp
jmp
sbb
cmpsb
lret
fstl
stos
push
das
mov
ss
add
add
idivl
or
mov
std
inc
add
add
mov
and
sub
or
scas
das
outsb
xor
pusha
push
mov
xchg
and
and
or
cmp
mov
sub
xor
aaa
jb
fstpl
pusha
or
pop
or
pop
jp
ss
test
cmpl
fwait
enter
cmp
xor
loopne
adc
xchg
push
rclb
lods
mov
fstpt
push
and
mov
in
repz
test
mov
adc
xor
pop
dec
test
pop
call
push
sub
fmul
ret
insl
cs
inc
leave
ret
xchg
nop
lods
lcall
xchg
jg
in
ja
fisubrl
pushf
shlb
lds
adc
in
pop
enter
lods
dec
mov
andl
dec
andl
add
jg
xchg
orl
cmp
inc
add
add
scas
sbb
stos
stos
adc
pop
and
inc
mov
xor
cmp
stos
mov
ja
xor
dec
sub
cwtl
mov
pusha
jle
cmp
outsb
or
lcall
icebp
jle
push
or
and
and
cltd
es
jns
lods
jmp
je
xor
lea
xchg
xchg
mov
sbb
mov
cli
test
add
mul
xor
adc
dec
or
inc
inc
mov
pop
daa
leave
jl
ja
mov
dec
mov
lds
xchg
ds
sbb
out
insl
dec
dec
add
addr16
fnsave
jg
inc
jecxz
jle
fimuls
mov
mov
cmpsl
xchg
in
push
push
jmp
aam
cwtl
stos
inc
arpl
jmp
arpl
pop
int3
addr16
les
adc
jmp
nop
test
cmp
push
or
cmp
es
cwtl
add
add
push
dec
lret
jmp
imul
aaa
je
fnstcw
pop
inc
add
add
sbb
sub
sub
sbb
dec
in
xchg
add
movsl
addl
mov
mov
mov
fs
ss
ret
es
jne
bnd
or
faddl
pop
sahf
je
jmp
pop
pop
jge
add
imulb
mov
jo
cld
sub
pop
xlat
out
sbb
xchg
ja
pop
jp
and
repnz
xor
push
push
gs
loop
sti
jns
mov
mov
sbb
fcoml
jge
push
inc
jp
jmp
or
or
lahf
cwtl
je
out
in
ljmp
jae
xchg
stos
inc
pop
in
adc
dec
cmp
inc
jmp
aas
popl
dec
push
or
loop
push
aaa
mov
pop
dec
add
in
scas
cmp
xor
jns
sub
jbe
out
cmp
push
notb
inc
jmp
insb
pusha
das
aad
jno
add
lds
cmc
cwtl
xchg
push
sub
inc
add
add
cmp
mov
pop
fucompp
xor
mov
push
hlt
shlb
cs
das
cmp
ljmp
in
fs
incl
mov
dec
loop
or
shrb
pop
mov
cmp
push
gs
sub
insl
push
mov
jge
psrld
fistps
adc
cmp
inc
in
push
pop
push
jb
xchg
jg
inc
sub
idivl
out
add
ret
add
les
adc
jmp
loope
inc
inc
mov
cmp
stc
sbb
xchg
pop
test
xchg
js
hlt
loop
ret
les
stos
push
dec
pop
std
dec
dec
rorb
sbb
repnz
pop
add
test
sub
rclb
ja
push
lahf
pop
enter
inc
xchg
inc
cmpsl
jmp
mov
stos
pop
sbb
pop
lcall
out
jmp
add
add
jns
xor
jg
sti
jecxz
adc
add
outsb
sbb
out
and
add
or
and
mov
mov
aaa
jbe
lds
push
jecxz
scas
cld
push
enter
sub
pop
sbb
mov
push
stos
dec
xchg
adc
fldl
cs
testl
xor
scas
add
mov
mov
xor
jb
mov
mov
cs
mov
les
loop
das
lea
mov
call
cmpsb
mov
pop
outsl
mov
cmp
or
into
fdivrl
fcoml
jp
pop
je
inc
pop
in
call
mov
stos
pushf
add
loopne
sub
xchg
lods
test
dec
mov
push
xor
repz
mov
js
push
or
aad
cmp
push
pusha
sarl
cmp
and
dec
xchg
ds
idiv
js
lcall
add
add
ret
jg
decl
rol
mov
inc
add
add
rol
outsl
jecxz
js
fisubl
daa
xor
jno
jbe
jb
xchg
cs
inc
mov
jp
into
ss
pop
aam
lods
pmaddwd
cmp
xchg
push
ret
nop
mov
loopne
cmpl
iret
adc
mov
ja
sbb
pop
jle
or
mov
aad
dec
mov
cmp
and
bound
mov
test
ret
inc
add
jg
adc
pusha
pop
shll
mov
and
mov
sbb
xlat
pusha
add
cli
jns
mov
jne
mov
cmp
mov
scas
sbb
out
jo
jmp
pop
fs
jle
ljmp
in
cwtl
test
das
dec
pop
adc
cmpsb
fdivr
fs
xor
mov
neg
sahf
inc
xor
inc
jnp
popf
xchg
pop
push
xor
dec
cltd
nop
adc
clc
lret
cmpsb
fs
jbe
xchg
imul
add
das
mov
out
aad
add
add
test
iret
in
mov
sbb
lock
les
cmp
clc
loop
not
arpl
cmpsb
loopne
push
sub
sub
xlat
fsts
lds
xor
and
imul
out
cltd
imul
insb
cmp
fdivs
es
dec
jno
xchg
lods
sarb
mov
out
aam
roll
es
ss
lahf
xchg
xor
jns
ffree
shlb
out
fwait
rcrl
xor
mov
and
lock
leave
cwtl
mov
sub
xor
pop
scas
fs
nop
inc
xchg
sti
sub
pop
and
xchg
test
hlt
lods
sbb
mov
mov
stos
loop
xchg
fcmove
insl
divl
pop
xchg
pop
sub
mov
out
arpl
into
std
sub
inc
dec
fldenv
fcompl
rcrb
or
fistl
sbb
xchg
inc
icebp
hlt
gs
dec
adc
f2xm1
and
add
ret
push
mov
mov
cwtl
fwait
adc
cld
jp
ficomps
shlb
fldl
cli
and
sti
cmpsb
cmpsl
and
cmp
xchg
cwtl
fimull
sub
mov
push
inc
mov
push
cmp
mull
cmp
pop
out
std
inc
or
fimuls
inc
dec
js
jl
inc
or
xchg
mull
cmpsb
push
loop
nop
jbe
dec
mov
mov
lods
lret
movsb
pusha
cmc
adc
mov
fldcw
push
lret
push
rol
jmp
ret
outsb
push
sbb
aad
cmp
clc
mov
and
mov
jle
pop
outsb
sub
add
lret
sbb
xchg
mov
xchg
fdivrl
sub
sub
aam
lcall
push
and
insl
xor
mov
lock
inc
jmp
or
inc
mov
loopne
call
xchg
add
add
add
aas
gs
pop
repnz
dec
add
add
inc
test
or
je
push
dec
sbb
pop
and
dec
xrelease
popa
jne
mov
inc
xchg
mov
add
pusha
fsincos
out
test
je
loop
rol
stos
in
inc
mov
mov
cmp
mov
call
mov
pushl
hlt
insb
std
push
clc
outsb
fistl
mov
sub
sub
adc
mov
cmpsl
sarb
pop
or
jecxz
test
adc
add
jnp
inc
les
or
xor
pop
mov
clc
mov
movsb
int
inc
fcmovne
sarb
pop
cld
aas
adcb
in
lods
jno
xor
movsb
adc
sbb
imul
insl
das
adc
add
sub
bound
imulb
mov
push
cmp
add
push
test
jle
rol
xchg
divb
adc
add
inc
outsl
add
mov
ljmp
add
out
fisttpll
lock
sbb
sub
add
movsb
repz
ljmp
add
lcall
adc
sub
dec
stc
adc
pop
mov
dec
pushf
imul
mov
les
divb
je
sub
adc
xor
adc
pop
mov
cmp
pop
mov
lea
dec
shrb
push
lret
push
push
arpl
or
xchg
vfrczss
pop
mov
mov
sbbl
divb
pop
ja
roll
stc
jle
repnz
dec
lret
cmp
pop
into
lahf
fisttpll
fisubl
mov
das
test
popf
loopw
push
fimuls
insl
cwtl
sub
push
shll
jmp
cmp
jp
sub
lock
xor
inc
mov
lret
lds
sub
push
in
cli
mov
loopne
xor
in
and
fstps
cmp
or
pop
cmp
fbstp
mov
int
add
add
mov
ljmp
add
add
cli
fildl
add
movsl
cmpsb
pushf
test
lock
xor
mov
fwait
repnz
mov
mov
cmpsl
jb
dec
xor
dec
dec
xchg
and
push
fnstenv
mov
loope
add
adc
lahf
ja
test
stos
ret
in
mov
aaa
clc
inc
jmp
sbb
cmp
stos
xchg
cli
pop
sub
jmp
lock
push
inc
test
jg
xlat
add
mov
test
mov
and
jmp
cltd
cmp
or
sub
cmpsl
push
jnp
cwtl
js
push
cmp
inc
jmp
push
popf
xchg
stos
push
sbb
adc
dec
ret
ret
push
fstp
fcmovb
jns
orl
repz
out
push
xchg
test
pushl
inc
push
jle
mov
mov
es
push
add
jbe
mov
les
rcl
imul
mov
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
jmp
add
add
cli
cld
xchg
sbb
loopne
fists
sbb
xor
adc
cmp
cmp
imul
cwtl
push
pop
ds
jle
push
test
push
adc
pushaw
sub
xor
fwait
and
loop,pt
jge
popa
shrb
inc
daa
insb
pop
sub
fstpt
xchg
nop
movsb
into
sti
add
mov
aas
and
stos
sub
add
cwtl
sbb
ja
mov
or
push
ds
sub
orl
shrb
scas
loope
cltd
cmp
sahf
cmp
fdivrp
pop
shl
out
fmul
test
sarb
outsl
out
lods
mov
sub
ja
xor
enter
inc
cmp
lret
jge
sbb
mov
or
adc
xchg
into
test
into
mov
xor
add
dec
stc
mov
jp
ret
push
adc
shlb
pushf
push
cmp
pop
icebp
inc
mov
aaa
mov
cmp
imul
out
mov
mov
mov
add
add
jae
add
lock
mov
pop
inc
cmc
popa
xchg
arpl
mov
mov
adc
arpl
jmp
inc
jge
inc
mul
insl
push
insl
lock
dec
xor
and
push
pop
add
sbb
push
dec
jmp
mov
or
mov
bound
pop
daa
insl
jg
fs
push
pop
ss
repnz
mov
sub
bound
add
lea
pop
mov
lret
fidivs
in
sbb
add
mov
std
jns
sti
cld
cwtl
inc
imul
lret
in
mov
sub
cmp
mov
test
add
movsb
cmp
xor
outsb
inc
lock
adc
fiaddl
push
pop
push
je
inc
xorb
out
jns
xchg
leave
arpl
cs
in
xchg
pop
pusha
scas
test
mov
xor
push
add
add
dec
stc
mov
ljmp
ds
add
add
jnp
pop
push
add
sbb
add
data16
and
mov
cmpl
jb
pop
adc
les
cmp
dec
popf
jge
pop
add
test
cmpsl
cmpsl
xor
mov
decl
jle
jo
adcl
add
mov
scas
push
js
cmpsb
push
loope
movsl
dec
inc
or
fidivs
xchg
sbb
cmp
adc
jmp
sbb
lahf
movsb
shll
sub
and
push
pusha
xchg
rolb
xchg
push
in
gs
push
xchg
lret
pop
pushf
ljmp
push
xchg
pop
pop
sub
ss
pop
mov
inc
xchg
mov
test
sub
mov
mov
mov
mov
jmp
repnz
mov
inc
lcall
jmp
add
push
xchg
inc
and
es
cmp
aaa
xchg
lea
cli
add
add
jg
cld
lcall
jg
dec
add
add
out
fimuls
mov
mov
lods
adc
push
mov
add
insl
loop
cmc
ret
jmp
pop
sub
add
mov
add
lods
lods
pop
pop
dec
xchg
aam
aad
jecxz
cmp
mov
loopne
daa
mov
fimull
add
mov
aam
fsubrl
jns
iret
or
jp
mov
ljmp
clc
adc
jae
insl
clc
cmc
cltd
rcrb
mov
nop
and
fdivp
cmp
scas
faddp
cmp
jno
xchg
into
cmpsb
or
push
icebp
jno
les
xlat
pop
jae
mov
popf
lds
sbb
popf
jo
rclb
mov
adc
mov
sub
sbb
mov
cmpsb
inc
sub
cwtl
sub
cmp
mov
popf
or
pop
popa
lret
sub
cli
scas
jle
mov
lret
shrl
sub
cmpsb
dec
fisubs
sub
add
mov
xchg
mov
pop
jb
int
dec
push
add
add
pushw
sbb
jmp
cli
jecxz
sub
mov
push
mov
mov
daa
cmp
push
pop
pusha
sub
push
int
cmp
mov
fists
sbb
ret
mov
or
clc
stos
cmp
xor
addb
ljmp
inc
dec
scas
icebp
and
mov
mov
lds
loope
lock
pop
jne
lret
add
ret
sub
lcall
push
pop
sub
repnz
das
pop
cmp
pushf
push
or
lahf
aam
add
fisubrs
andb
sub
idivb
in
adc
sub
inc
push
hlt
pushf
adc
mov
adc
ja
mov
sahf
sbbb
sbb
push
imul
loope
inc
in
outsb
ret
inc
sub
cmp
jl
add
lock
cli
or
sahf
mov
imul
mov
add
add
inc
mov
push
push
jmp
push
mov
and
add
add
int3
sbb
es
pop
jecxz
fsts
mov
out
inc
sbbb
push
mov
cli
popf
jg
cmpsb
outsb
call
push
add
cmp
loope
jge
sbb
outsl
loopne
and
outsb
add
sahf
je
addr16
inc
cmpsb
xchg
sti
or
mull
push
sbb
or
fcompl
xchg
mov
andb
mov
xor
lds
pop
lods
pop
push
div
mov
jl
mov
adc
pcmpeqb
rep
in
daa
shrb
pop
xchg
movsb
add
mov
movsb
jne
xchg
sbb
addb
add
jbe
ret
aaa
and
and
dec
aas
leave
andl
stos
xlat
add
std
xchg
jb
cld
and
jle
jp
pop
push
es
push
inc
or
mov
out
scas
lds
push
cmc
arpl
rcr
pop
mov
add
add
sub
cmp
ret
or
push
and
push
push
add
add
jbe
scas
dec
enter
cmc
lea
push
jne
mov
jne
in
xor
mov
jmp
pop
mov
js
jo
and
lods
mov
pop
ja
cltd
sub
mov
dec
mov
aam
ja
call
and
add
mov
cs
sti
and
add
or
xlat
leave
movsb
stos
push
gs
pop
mov
hlt
push
ljmp
nop
jle
ja
push
fucomi
cmp
call
test
daa
xor
decl
addb
xor
sahf
sbb
mov
xchg
test
mov
jmp
insb
and
in
dec
add
aaa
pop
jo
xor
add
in
int
pushf
xor
xor
in
in
aad
call
rcrb
sub
sub
add
inc
mov
or
add
or
push
shll
out
pop
pop
pushf
push
mov
and
add
and
or
inc
adc
jle
mov
imul
or
cli
test
int
bound
fsubr
std
lds
shll
inc
mov
aas
mov
mov
xchg
pop
ljmp
movl
lods
sub
mov
mov
addr16
xor
test
sub
jmp
xchg
shl
mov
aad
movb
ss
adc
adc
pop
test
push
repz
mov
les
cmp
iret
pop
add
arpl
and
adc
sbb
mov
jo
lods
testb
mov
lea
push
jge
testb
test
or
ss
dec
sub
lret
sub
iret
sahf
dec
mov
jb
in
lcall
test
pop
lock
mov
mov
add
out
lcall
hlt
mov
pop
dec
repnz
push
add
add
sbb
sub
mov
int
add
jo
int
and
push
inc
out
push
jbe
out
or
push
outsb
adc
or
cmc
sbb
sbbb
mov
out
stos
sbb
dec
sbb
out
pop
cmc
out
jne
test
push
clc
mov
dec
mov
enter
int3
arpl
jae
scas
fisubl
or
push
mov
jp
out
jmp
jg
jl
loope
pushf
xlat
add
mov
cmp
pop
lcall
test
stos
jb
js
push
aaa
xchg
and
add
sbb
pop
pusha
sbb
sti
pop
push
pop
dec
ret
add
or
fadds
xor
push
test
mov
adc
pop
fmull
daa
cmp
and
int3
xorl
push
sub
nop
test
xchg
adc
repz
bound
imul
push
dec
mov
push
add
add
mov
inc
fs
cmp
mov
lcall
dec
fwait
nop
xor
xchg
mov
rcr
jb
dec
pop
addl
mov
adc
xchg
mov
ljmp
pusha
and
adc
jg
in
aas
in
cmc
fmuls
cmp
inc
cld
scas
dec
sti
pop
jns
mov
mov
add
aam
cmpsb
scas
in
mov
or
stos
lods
stos
scas
dec
mov
mov
pop
icebp
jns
pop
leave
rcr
mov
mov
lahf
pop
test
std
sbb
adcl
loopne
outsl
lahf
mov
pop
dec
cltd
cs
jmp
pop
push
mov
inc
mov
ds
push
lahf
enter
cwtl
jnp
inc
rclb
in
push
sbb
xor
mov
push
xor
and
mov
mov
inc
mov
rcll
push
sbbb
stos
mov
add
add
fwait
cmp
stos
sarb
push
add
add
pop
addl
fs
dec
aam
mov
popa
mov
adc
aas
lds
xchg
loopne
out
leave
cltd
arpl
in
mov
jle
push
and
pusha
inc
push
pop
xlat
mov
stos
push
add
mov
es
cld
testb
loope
xor
adc
cmp
push
jnp
fsubrl
push
lahf
push
jle
mov
push
pop
xor
jmp
or
es
inc
dec
repz
and
xchg
int
mov
in
mov
subb
mov
add
outsb
jecxz
lds
imul
adc
fistps
test
cmpsl
xor
or
inc
shl
fildll
adc
sbb
iret
push
bound
outsb
jb
leave
int3
or
sub
and
lods
mov
lods
mov
mov
sub
fisubrl
out
js
push
cwtl
ja
and
cmp
add
add
clc
mov
and
hlt
lods
cmp
add
add
pop
or
dec
call
mov
adc
sub
push
pop
les
imul
mov
iret
jne
sbb
fbld
call
cmp
das
push
pop
pop
int3
xchg
dec
cli
mov
in
popa
fs
cmpsl
adc
jno
scas
and
test
add
add
mov
push
aas
insb
pop
negb
test
push
add
insb
in
xchg
rorb
lcall
or
push
fwait
add
pop
jo
imul
sub
cld
in
adc
sbb
cmp
xor
mov
in
and
loope
fs
movsb
push
sahf
push
loop
enter
test
loope
mov
ror
int
inc
jnp
lods
movsb
sub
sub
add
fidivs
int
xchg
gs
add
and
scas
xchg
push
adc
out
mov
call
pop
add
add
idiv
cmp
mov
imul
dec
out
fidivrl
and
dec
bound
jge
shrl
jns
pop
fldl
enter
std
test
out
cmp
adc
fmull
test
lods
mov
arpl
hlt
call
mov
jg
das
pop
out
leave
mov
mov
fdiv
sbb
xchg
jl
sub
mov
xor
mov
push
push
ror
add
pop
xorl
lods
cmp
addl
jmp
cmp
aaa
adcl
ss
movl
cmp
push
and
xor
stc
insl
and
roll
mov
shrb
dec
mov
dec
jl
mov
dec
sub
xchg
and
mov
gs
sbb
iret
pushf
fidivs
sbbb
jmp
mov
sbb
add
add
mov
lds
aad
jae
aad
jne
add
add
xor
dec
adc
inc
jecxz
sbb
lret
add
jnp
mov
jle
stc
pushf
sub
sbb
outsb
fsts
dec
push
sbb
lock
scas
pop
pop
mov
out
cld
mov
add
inc
dec
notb
push
jp
cmpsb
mov
movsb
lret
or
push
add
or
xor
lock
scas
jmp
fstps
je
xor
cli
and
mov
mov
das
mov
dec
jae
add
xchg
xor
stc
stos
pop
outsb
popf
lret
or
xlat
add
pop
adc
pop
xchg
test
push
outsl
xor
and
lret
mov
add
repz
and
lahf
mov
mov
icebp
jae
andl
mov
jb
cmc
push
subl
outsb
test
icebp
xlat
inc
aam
mov
dec
mov
sub
ret
fdivrp
fcoml
sub
nop
lods
imul
add
add
mov
pusha
pop
jle
data16
add
add
test
adc
cltd
and
inc
cltd
and
jecxz
mov
je
push
pop
or
and
in
fiadds
xlat
cmpsl
jne
sarb
jge
sub
aas
sub
sub
adc
mov
cmp
inc
pop
adc
int
push
es
lret
fildll
xchg
stos
and
xchg
pop
and
sub
push
cmc
and
in
fld
in
add
incl
sarl
data16
scas
push
push
js
and
std
scas
push
sbb
mov
outsl
dec
out
xlat
test
jecxz
test
fisttps
mov
add
addr16
add
dec
test
cmp
es
pushf
sub
xorb
pop
jb
lcall
jnp
sub
sub
add
neg
xchg
xchg
adc
dec
dec
push
ret
iret
adc
jmp
iret
icebp
movsl
stc
clc
push
enter
mov
add
add
movsb
jae
jnp
mov
ja
mov
jmp
adc
add
xor
das
repnz
imul
enter
out
sub
imul
inc
or
rcrl
or
xchg
mov
add
sub
daa
fstl
adc
es
jae
xchg
sbb
inc
rcrl
mov
push
mov
sub
mov
xorb
loopne
mov
jnp
repnz
shrl
mov
or
xor
push
movsb
pop
sbb
or
jns
sti
pop
add
sbb
jb
mov
pop
xchg
icebp
xor
stc
pop
dec
sbb
cmp
stos
adc
mov
add
lahf
mov
nop
out
jnp
sbb
sub
cmp
or
pop
or
lods
xchg
bound
pop
imul
flds
or
xor
ljmp
ja
jns
stos
dec
sub
push
pop
xchg
test
pop
in
std
mov
jno
inc
test
fiaddl
add
fbstp
scas
adc
lahf
xlat
out
cld
aaa
hlt
jmp
test
add
push
addr16
cmpsb
xor
fwait
mov
pop
out
lods
and
dec
movsb
in
sbb
cld
imul
lock
jg
rorl
sbb
mov
jne
in
scas
inc
add
popa
sbb
je
outsb
cmp
jbe
das
mov
cli
xor
cmpsl
or
lret
push
lea
adc
je
push
dec
mov
test
iret
scas
in
sub
mov
ret
xchg
or
sbb
negl
loope
mov
or
inc
jno
outsb
rorb
pop
stos
repz
cmp
mov
dec
fldcw
mov
lahf
inc
orl
out
sub
iret
push
stos
nop
adc
out
pop
or
clc
xchg
rcrl
out
pop
xor
movsl
mov
fbstp
push
mov
push
movsb
test
cmp
sti
sbb
test
in
inc
mov
lcall
popa
pop
mov
mov
add
add
mov
add
stos
jge
jno
pop
add
add
jg
add
mov
out
jo
test
fdiv
sahf
lods
sahf
adc
sbb
leave
ret
ljmp
inc
int
add
dec
dec
cmp
clc
cmp
jbe
cltd
mov
sub
or
cld
divl
shll
ds
xorb
addr16
movsb
test
add
jno,pt
in
lods
mov
lds
sub
push
add
mov
cmpsl
adc
xchg
pusha
daa
lods
or
xchg
xchg
shr
or
xchg
xchg
es
fld
pushf
jl
fstpt
scas
jp
pop
pop
aaa
jmp
xchg
loopne
cmp
jne
movsl
in
cwtl
xchg
xchg
in
add
mov
jmp
sbb
mov
push
call
sbb
and
mov
mov
sub
inc
push
mov
repnz
fsubl
fbstp
adc
sbb
sub
add
out
into
push
push
inc
lahf
mov
mov
add
add
sbb
dec
nop
add
push
pop
mov
mov
into
mov
enter
mov
fs
mov
dec
mov
add
and
xor
inc
and
and
mov
jo
inc
mov
int
mov
push
and
adc
vsqrtpd
fstpt
fs
ficoml
fstp
jg
fisubrl
iret
and
or
cmc
subb
xchg
dec
mov
in
sbb
xchg
xchg
inc
xchg
mov
or
in
xchg
mov
jecxz
jl
sub
push
cmp
push
inc
cmc
gs
iret
mov
push
fdivs
pop
aas
pop
fnsave
idivl
dec
xchg
mov
or
iret
rclb
adc
mov
fidivl
cmc
scas
jbe
xor
les
adc
test
mov
mov
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
push
sahf
jle
cmp
cmc
adc
aaa
fwait
mov
stos
jns
lcall
mov
sbb
lcall
mov
imul
icebp
jno
out
lock
mov
cmp
hlt
inc
andb
les
scas
ljmp
jmp
es
pop
lahf
mov
stc
sbbl
xchg
stos
push
pop
pop
cmpsb
fbstp
add
lods
inc
sahf
lea
cwtl
lock
xor
jno
cmpsb
pop
aas
das
rcrb
ja
scas
mov
sub
lds
das
in
filds
hlt
push
ret
pusha
pop
cwtl
test
push
pop
mov
fldt
inc
gs
mov
addl
ds
jge
pop
movsb
mov
pop
scas
mov
dec
out
mov
sbb
aaa
fadd
stos
loope
icebp
ret
add
add
jnp
xchg
xchg
inc
mov
hlt
xlat
and
stos
inc
insb
ss
add
add
lahf
pop
cmpsl
jne
mov
repnz
pusha
add
add
inc
lock
jae
scas
pop
xchg
cmp
aam
inc
and
jp
aas
mov
shlb
scas
inc
hlt
in
jl
in
jno
mov
sbb
adc
setae
sti
xor
xchg
rcll
mov
mov
jb
jge
mov
jg
adcl
mov
add
sti
mov
movsb
push
or
jmp
shl
fimull
pop
dec
imul
popa
testb
ret
jg
xor
xchg
sbb
fisubs
inc
ror
fwait
jo
insb
test
lcall
cmp
pop
lods
ret
addb
cmp
shr
or
inc
pop
mov
fimuls
pop
sbb
mov
xchg
add
daa
mov
jb
lret
mov
sub
outsb
daa
stos
mov
mov
imul
jge
xor
xchg
sbb
imul
add
sahf
pop
testl
testb
popa
add
add
sbb
mov
cwtl
bound
pop
pop
cmp
mov
dec
enter
mov
dec
jo
xlat
mov
scas
movb
sbb
push
cli
pop
lcall
out
jg
jmp
loope
loope
cmp
sub
cmp
mov
fildll
fistpll
inc
push
loop
mov
outsb
mov
cmc
out
std
push
out
dec
dec
shrl
mov
data16
mov
push
mov
jle
nop
js
add
ljmp
pop
mov
sbb
xor
and
push
cmpl
loopne
lret
sbb
mov
ret
or
arpl
les
mov
pop
popf
mov
lahf
shlb
xor
dec
shll
stc
fiaddl
xor
mov
ljmp
mov
cmp
sub
and
mov
cmp
shl
jns
adc
add
add
pop
mov
fstps
and
bound
add
leave
mov
mov
or
gs
ret
xchg
dec
dec
xor
xchg
mov
add
mov
and
clc
or
add
push
out
push
xor
call
enter
lret
xor
clc
dec
in
or
dec
stos
push
daa
add
movsl
jge
pop
outsb
xor
lret
or
jmp
jne
ret
xor
or
xor
popa
lods
scas
sbb
dec
ret
push
push
insl
cltd
inc
mov
jg
inc
fidivl
andl
test
pop
mov
fbstp
cmp
lret
mov
jle
ret
loope
xorl
mov
shlb
push
in
movsl
or
fidivrl
mov
and
or
add
stos
mov
mov
ret
add
pop
xchg
dec
leave
out
add
add
repnz
movsb
jle
arpl
push
cmpsl
arpl
add
adc
jb
popa
aas
fisubrs
or
adc
sub
orl
outsb
cltd
jp
inc
push
fs
test
nop
push
idivl
push
jecxz
enter
sbb
mov
xor
and
adc
xchg
dec
or
aas
fstpl
inc
sub
lcall
mov
jno
je
jle
ja
cmpsl
push
cmp
cmp
ret
pop
in
and
mov
pop
mov
pop
cmp
dec
testl
test
mov
les
jp
mov
mov
and
ficoms
fs
or
xor
mov
aaa
mov
dec
mov
push
xor
fistl
mov
mov
test
mov
int3
sahf
shlb
fidivs
dec
jl
lods
xchg
jge
sbb
mov
fwait
loope
lods
inc
pop
mov
push
dec
add
add
jmp
sub
js
mov
add
jbe
ss
push
addr16
dec
mov
std
sub
xchg
lea
or
mov
pop
adc
insl
mov
jg
dec
jge
jbe
pusha
ret
mov
mov
insl
xchg
adc
or
sbb
test
pop
cli
push
pop
ror
lahf
fwait
dec
adc
ja
xchg
sbbl
imul
pop
cmp
xchg
aas
push
arpl
gs
xchg
xorl
in
clc
mov
div
in
add
imul
mov
pop
pop
scas
mov
jbe
sub
inc
add
das
xchg
pop
jbe
sbb
mov
cmc
push
push
ror
les
lock
movsb
push
xor
js
movsb
push
loope
ret
les
aaa
insb
addr16
or
add
xor
mov
inc
mov
popf
mov
add
mov
fnstenv
or
enter
add
add
and
outsb
mov
sti
cmp
sub
cmc
and
out
push
push
ds
icebp
or
sbb
out
icebp
imull
daa
mov
or
mov
pop
out
xchg
inc
in
mov
fldl
fisttps
jbe
shlb
lcall
adc
mov
pop
pop
xor
add
cs
push
mov
and
lods
jnp
pop
sbb
cs
xor
mov
out
into
popf
and
add
cmpsl
rcrb
popf
xchg
inc
fildll
and
pushf
sbb
cwtl
push
add
ficomps
fs
pop
imul
mov
dec
lods
push
divb
int
sub
out
ficoms
subb
shl
inc
pop
adc
test
in
test
adc
adc
fmul
aaa
xchg
movsb
test
stos
aam
and
push
sarb
push
inc
test
xor
xor
pushf
aam
add
cld
je
jbe
jns
sbb
imul
add
outsl
xchg
or
dec
js
xchg
pop
jo
out
jecxz
adc
xchg
cmp
sub
jle
xor
gs
out
stos
ret
cmc
leave
adc
sbb
push
dec
jle
movsl
and
push
fs
push
jae
mov
cmp
dec
inc
jmp
jne
in
sub
adc
shlb
add
cmp
clc
dec
add
call
xor
rclb
cld
jmp
cli
and
stos
int
lcall
mov
divl
jmp
pushf
icebp
int
jle
pop
sub
adc
rol
inc
adc
popf
xor
pop
jno
jns
push
and
mov
adc
loopne
movsb
ja
out
mov
mulb
or
push
dec
dec
outsl
pushf
push
pop
add
add
pusha
cmp
ljmp
mov
inc
adc
test
stos
out
push
rcrl
ret
mov
add
push
cltd
jmp
fildl
or
xchg
daa
mov
add
add
in
icebp
nop
add
cmp
jecxz
outsb
cmp
arpl
and
mov
dec
cmpsl
sbb
mov
push
stos
scas
adc
dec
adc
xchg
icebp
cmp
mov
iret
ljmp
rcrb
push
or
andb
cmp
mov
push
cmp
repnz
out
pop
out
mov
arpl
pusha
aam
icebp
les
xor
shrb
mov
cmp
mov
cld
pushf
dec
scas
pop
es
add
test
cld
rolb
lea
shll
stos
nop
pop
mov
mov
popa
inc
insb
xor
push
jmp
imul
inc
jecxz
test
or
int3
inc
les
movb
inc
insb
adc
cmp
pop
xor
cmp
aas
or
xchg
jl
jge
add
in
sarl
mov
add
mov
mov
push
jg
dec
xchg
dec
mov
add
add
mov
inc
inc
inc
mov
mov
lea
xor
jmp
mov
rcrb
add
orl
adc
xchg
or
fstpl
cmp
fnstsw
push
adc
xchg
mov
sbb
rcrb
divb
or
enter
rcl
xor
js
mov
inc
dec
push
repz
and
xor
pop
jle
and
cli
xchg
fwait
cli
aam
scas
into
je
cmp
outsb
inc
pop
push
pop
xchg
add
mov
and
call
dec
cmp
jg
pop
xchg
sub
lock
xlat
popw
js
cmp
leave
dec
int3
dec
pop
cmpsl
loopne
loope
sub
fdivrs
adc
xchg
xchg
xchg
mov
mov
subl
jns
mov
test
adc
mov
inc
push
in
popf
imul
jne
inc
dec
mov
dec
mov
add
add
mov
fucomip
push
insb
xor
sub
add
insb
push
inc
mov
inc
bound
xor
dec
mov
repz
stos
sub
add
and
dec
jmp
jne
inc
jns
jg
sub
xchg
mov
fbstp
sbb
or
out
xor
jae
insl
jmp
xor
dec
add
pop
adc
lods
jg
ljmp
cmp
push
adc
out
cmp
into
adc
add
sbb
sar
fcomps
push
xchg
icebp
mov
sub
pop
or
and
and
je
push
fcomp
fdivs
push
jne
xchg
add
dec
andb
sbb
cmp
ss
dec
ja
lret
rolb
enter
call
mov
mov
aaa
rcll
into
bound
jmp
test
pop
mov
rcl
aam
sub
jle
and
mov
repz
out
xor
jmp
inc
rolb
add
imul
dec
out
iret
jmp
aas
in
push
inc
fcomp
lret
add
add
xchg
scas
dec
dec
jge
mov
sahf
dec
call
roll
dec
sti
into
push
sti
lret
loope
sub
mov
push
insl
pop
cld
xor
inc
or
dec
aas
scas
gs
or
add
addb
ljmp
xchg
xor
or
mov
mov
mov
mov
or
lods
cmc
mov
nop
lock
insb
push
mov
adc
pop
adc
mov
mov
fnstsw
subl
mov
cmpsb
cmp
mulb
insl
sub
mov
mov
sub
xchg
test
aam
sub
cmpsl
xor
mov
sbb
inc
idiv
rolb
ss
mov
test
push
insl
jno
sbb
lfs
or
jle
icebp
pop
mov
test
movsl
push
mov
bound
pop
iret
sub
sahf
push
inc
xor
add
std
cmpsb
pop
dec
sub
sub
pop
xchg
imul
add
adc
mov
inc
rclb
leave
out
sbb
out
sarl
mov
inc
rcll
or
scas
jmp
add
repnz
setle
mov
dec
ret
pop
xchg
dec
xor
mov
xchg
les
aam
fidivs
stos
sub
jmp
adc
mov
jb
js
or
ret
sahf
sbbb
gs
push
xor
or
xchg
ret
mov
bound
mov
push
insl
add
sbb
or
nop
cld
mov
test
xchg
push
je
das
mov
mov
push
pop
fisubl
mov
jg
pop
pop
push
cmp
jmp
fstps
bound
fsubr
fs
mov
enter
cltd
or
sarl
das
add
add
neg
std
sub
dec
popa
sti
cmpb
add
add
and
xchg
sbb
je
mov
adc
xor
push
xchg
or
inc
and
mov
jmp
xor
sarl
push
adc
push
inc
mov
jns
mov
add
pop
xchg
push
adc
mov
xlat
sub
push
adc
test
pop
and
dec
insb
popf
mov
jno
push
dec
das
jl
mov
cltd
hlt
inc
test
push
mov
cmp
cwtl
ret
jle
pop
cmpsl
and
sub
push
das
sti
repz
cmpsl
mov
mov
add
dec
or
mov
lods
sbb
cli
jge
add
nop
sarl
clc
sub
mov
mov
push
cmc
sbb
shlb
lret
outsl
adcb
dec
inc
js
mov
cltd
push
std
push
dec
popl
sbb
push
subb
in
push
mov
test
add
add
cmp
mov
xor
pop
jecxz
and
repz
cmp
rcrb
lods
sahf
int3
sub
data16
inc
mov
jo
pop
inc
inc
out
stos
int3
mov
mov
cmp
cmp
out
push
mov
xchg
cmp
pop
xlat
xorl
aam
fisttpl
lds
arpl
fs
sbb
jne
or
mov
jge
stc
scas
adc
fwait
les
div
add
mov
jp
test
fcomps
or
test
cmpsl
xor
mov
pop
push
mov
push
push
out
cmpsl
xchg
dec
xchg
sub
shl
outsb
dec
cmp
xlat
leave
fisttpl
hlt
mov
int3
cmp
ret
xor
and
sti
jne
mov
stc
cmp
out
xchg
es
fmulp
mov
mov
je
ss
lods
xor
sbb
out
inc
mov
fildll
into
xchg
add
add
ja
out
sbb
sub
add
call
adc
add
shrb
pop
sbb
insl
imul
sub
pop
ds
movsl
ljmp
add
sahf
fsubrs
dec
jb
adc
add
notb
or
ret
xchg
jle
sahf
sti
and
cmp
mov
sbb
add
adcb
rcl
pop
add
lock
pusha
lds
rol
mov
jno
jbe
inc
lods
and
push
xor
jnp
pop
dec
jb
cwtl
cmp
xor
pushf
lahf
enter
cli
pushf
cmp
lahf
add
adc
xor
fildl
mov
std
push
out
aas
cmpsb
shll
das
adc
dec
aas
jmp
lret
dec
mov
add
fadds
iret
popf
std
pop
bound
rcll
sbb
fadds
jp
add
daa
sub
ja
mov
mov
push
jecxz
add
add
jno
into
sbb
push
pop
jae
cmp
inc
mov
xor
pushf
test
cmc
cwtl
leave
push
push
push
or
and
mov
mov
push
loope
pop
jne
inc
dec
dec
enter
dec
mov
xor
aaa
lods
and
clc
addr16
adc
mov
add
in
shl
mov
subl
scas
ljmp
fbld
jb
imul
push
jmp
aaa
pop
mov
xchg
outsb
cmp
cli
add
aaa
adcb
ret
scas
je
xlat
push
xchg
fistps
fistpl
scas
pop
xor
jae
mov
dec
loope
stc
pop
cld
imull
nop
dec
daa
add
out
xor
mov
fisttpl
int
xchg
out
cmp
xchg
cltd
mov
push
mov
ja
cltd
roll
xlat
xor
sub
pusha
and
and
arpl
add
add
cmp
jnp
outsl
cmpsb
loopne
add
aaa
call
add
add
fcomps
insl
push
cmp
add
xor
pop
shlb
dec
cmpsl
xchg
xchg
pop
mov
hlt
push
and
xlat
cmpsb
add
mov
and
jecxz
sub
ljmp
xlat
inc
xchg
jg
dec
xor
cwtl
xor
dec
stos
clc
cmc
pop
cli
jmp
sti
mov
call
fildll
mov
sarl
push
stc
loopne
push
push
mov
pavgb
adc
cmpsl
push
frstor
or
out
mov
add
push
fcompl
cmp
orl
inc
insb
jle
pushl
mov
push
movsb
push
pop
shlb
cltd
jmp
pop
mov
ficomps
cmpsl
imul
gs
mov
repnz
mov
adc
or
mov
cmp
outsb
jl
aam
movsl
ss
test
fnsave
std
repnz
outsb
ret
add
add
cli
xchg
jle
push
je
cmpb
in
jno
add
leave
pop
pop
adc
insl
xor
mov
js
outsb
add
mov
push
outsl
mov
popa
sbb
pop
or
sub
mov
jmp
cwtl
cltd
scas
ret
pop
shrb
sti
adc
je
jno
subb
dec
lahf
aam
fsts
sbb
test
xchg
inc
imul
pushf
loop
jnp
js
mov
dec
pop
push
xchg
pushf
mov
repz
xchg
call
sti
adc
dec
in
fcomip
enter
dec
dec
nop
mov
out
jmp
cmpsl
pop
xor
ja
and
adc
mov
jmp
push
push
push
pop
mov
movsl
cmp
xchg
loop
inc
popf
adc
jecxz
mov
adcb
gs
xor
lds
inc
mov
sub
mov
mov
inc
pushf
enter
mov
lock
mov
insl
dec
lret
shll
push
mov
mov
add
fwait
jnp
aad
sbb
push
dec
bnd
add
dec
pop
xchg
dec
test
and
in
cmc
cmc
add
iret
ss
or
sub
jnp
fucompp
xchg
or
pop
js
int3
sub
jmp
jo
inc
cmpb
icebp
fwait
stos
into
or
das
sub
arpl
push
and
cld
inc
fistps
mov
sbb
xor
stc
add
adc
mov
ljmp
imul
xor
movsl
les
ret
dec
adc
sub
shrb
dec
inc
mov
fsubs
jge
jae
add
outsl
xor
xchg
dec
jno
or
dec
dec
lahf
ljmp
fstpl
cmpsb
fldt
lcall
test
movsl
xchg
cmp
xchg
loop
cmpsl
add
addb
jb
jbe
movsb
fndisi(8087
lret
std
rorb
mov
clc
push
mov
popa
mov
hlt
add
add
std
mov
sub
mov
outsb
divl
add
cmp
popa
fisubs
add
mov
mul
lock
fwait
icebp
mov
imul
cmpsb
mov
sub
leave
inc
cmp
flds
in
adc
or
out
lahf
jge
pop
nop
mov
fsubrp
aam
xorl
rcrl
push
sub
pusha
loopne
popa
les
xchg
sub
mov
mov
inc
push
insl
loope
sub
bound
sub
jg
or
mov
ja
faddl
add
andl
int3
sti
pop
data16
sbb
clc
xchg
mov
fwait
pop
inc
mov
repz
cmp
les
and
int
xor
jo
pop
jle
gs
notl
mov
xorl
outsl
fs
jecxz
imulb
int3
and
xor
or
mov
int3
in
mov
loopne
cmp
in
dec
lea
rcrl
ret
in
fstpt
add
add
fstl
lret
add
add
test
nop
cwtl
ffree
push
sub
pop
lcall
pop
jo
jl
mov
out
lret
mov
mov
mov
fistpl
imul
pop
or
nop
call
cmpsb
cltd
sub
pusha
out
dec
jecxz
adc
test
aas
sbb
mov
sbb
scas
jecxz
fadds
insl
outsl
pop
addl
lahf
ja
cmp
mov
ret
mov
mov
mov
sbb
mov
pusha
movsl
lret
jmp
into
or
xchg
mov
es
shll
jl
mov
cld
mov
in
pop
mov
adcb
pusha
cld
xor
outsl
lret
cli
fdivs
adc
mov
mov
xchg
jbe
repz
les
pop
and
and
sbb
mov
pop
push
movsb
fimull
inc
adc
fucomi
sub
cmp
ret
int3
pop
add
add
bound
sub
sbb
jbe
add
divb
pop
movsl
dec
cli
mov
addr16
rol
js
ret
inc
add
push
add
insb
adc
sub
or
mov
nop
xor
add
cwtl
js
sarl
xor
jg
mov
mov
addl
inc
shr
and
mov
test
and
sar
inc
cmc
leave
pop
fisubs
iret
xor
dec
mov
fldcw
imul
out
test
imul
repz
cmp
pop
lcall
enter
pop
mov
es
js
rep
add
test
aam
xchg
ds
out
add
inc
push
inc
xchg
frstor
cmc
pop
int3
into
dec
or
pop
rcrl
fstpl
fldcw
and
in
adc
outsl
xor
les
mov
gs
js
push
testl
in
pop
push
mov
ja
add
add
divl
in
sub
push
ja
add
imul
cmp
cmp
xchg
push
mov
dec
sub
fidivrl
cmpb
sbb
pop
sbb
dec
pop
out
stos
sbb
test
mov
inc
outsl
ja
or
cmpsb
icebp
popa
jnp
std
mov
xor
pop
inc
outsl
push
aad
dec
dec
adc
mov
dec
push
hlt
outsl
lret
repnz
addr16
out
or
pop
lods
cwtl
sub
and
pop
inc
lret
dec
adc
xchg
add
or
cmc
lcall
cmp
scas
push
das
popf
jmp
int3
mov
sbb
out
ds
out
add
stos
push
shll
cmpsl
xchg
pop
pop
jbe
clc
cmpsl
push
xor
into
xor
add
rcll
xor
xchg
push
das
mov
cmp
mov
adc
mov
jae
lret
cwtl
test
pop
pop
xchg
jns
push
jmp
movsb
test
and
push
aam
add
add
fisubs
mov
mov
mov
or
add
pop
shrb
lods
sti
cmp
enter
insb
dec
es
es
cmp
ds
cmpsl
popf
pop
lods
cli
dec
aam
repnz
cmp
pushl
lahf
imul
std
imul
repz
rcl
push
icebp
mov
add
push
insb
ja
ds
daa
lods
stos
cwtl
sbb
push
add
sub
push
sbb
jle
dec
stos
sub
jp
mov
xor
inc
addr16
sahf
jns
mov
dec
jle
push
icebp
mov
ret
and
xchg
mov
sub
popa
jp
or
insb
jg
aas
xlat
hlt
call
aaa
icebp
lods
and
movl
or
outsb
push
lods
adcb
sub
shlb
mov
add
cli
sbbl
fisubs
jae
fs
rorb
loope
aad
sbb
loope
pop
rcr
inc
xchg
into
xor
and
xchg
add
shlb
mov
lret
mov
jns
add
sbb
cmp
mov
repnz
adc
xchg
mov
stos
loope
fsubrl
pop
xlat
insb
iret
xor
aad
xor
push
adc
jg
push
pop
imul
ror
sti
push
gs
dec
cmp
xchg
out
loope
add
arpl
mov
aaa
sbb
xchg
loope
push
add
mov
lret
and
xor
movb
imul
mov
jmp
mov
outsl
mov
mov
mov
cld
sbb
fxtract
adc
sarb
dec
js
mov
mov
jae
es
mov
imul
les
out
cli
rcll
sbb
lcall
jne
push
mov
or
pop
push
add
aam
in
push
jae
ss
and
mov
cs
mov
jl
or
pop
outsl
adc
or
orb
ljmp
jl
repz
pop
dec
adc
add
add
mov
xchg
jbe
add
outsb
mov
shl
push
dec
xchg
mov
dec
mov
push
mov
mov
fmul
or
xlat
cmpsl
fmull
adc
sub
popf
int3
and
xchg
into
lods
inc
mov
mov
xchg
sbb
sub
jmp
jbe
test
stc
lcall
out
in
adc
xchg
clc
mov
mov
mov
cs
add
xlat
cs
add
mov
flds
iret
test
cmp
push
jns
and
dec
and
outsl
mov
or
mov
sbb
push
push
xor
stc
and
add
adc
cmc
or
int
cmpsl
sbb
cmc
filds
jno
test
enter
dec
in
inc
pop
sbb
iret
lret
nop
cli
insb
andl
xchg
jns
add
add
jo
ja
std
stos
sbb
ljmp
add
add
sub
aad
xor
scas
dec
mov
or
sub
out
adc
mov
push
jb
repnz
jb
lock
scas
in
test
lcall
loop
mov
sarb
mov
xchg
call
int
fldln2
xor
jbe
insl
mov
in
mov
jmp
add
inc
aaa
mov
pop
xlat
xchg
sbb
sti
jge
mov
daa
dec
cmp
cmp
fsubr
pop
in
mov
pop
lods
outsl
xchg
mov
sbbl
ljmp
nop
std
mov
loop
fwait
lods
mov
imul
out
flds
test
adc
cli
sbbl
mov
push
ret
ffree
jns
orb
in
push
sub
jl
sub
je
adc
cs
jge
insb
xor
cmpsb
xchg
pop
nop
push
nopl
lods
mov
cmp
sub
mov
cmpsb
push
sbb
adc
jl
add
xor
test
aas
hlt
and
sbb
inc
roll
inc
push
pop
cs
mov
loope
push
mov
stos
sub
adc
pop
xchg
arpl
add
lods
mov
xchg
add
in
jnp
in
xchg
outsl
mov
cs
push
sub
dec
imul
lret
jecxz
push
mov
sub
imul
cmp
mov
xor
cmpsb
dec
cmp
gs
xchg
stos
lret
add
and
in
inc
mov
mov
push
sbb
std
fnstsw
rclb
fisubrl
stos
subb
cmp
lcall
lods
and
movsb
dec
lock
call
sarl
dec
xchg
pextrw
mov
and
push
mov
arpl
mov
fnstenv
or
add
sbb
sub
add
add
cmp
cli
mov
xor
ds
add
add
mov
scas
inc
mov
cmc
sahf
int3
sub
outsl
and
sbb
out
add
je
mov
enter
push
pop
mov
mov
lods
mov
push
push
and
ds
incl
sub
cmpxchg
dec
adc
mov
mov
inc
ret
fnsave
out
fldt
sbb
lahf
or
sub
cmp
jl
fwait
inc
pop
mov
out
sbbb
rclb
pop
inc
loopne
insb
sub
or
mov
addr16
cmpsb
mov
lds
enter
shll
or
popa
and
xlat
popf
loope
int
inc
or
pop
adc
add
jge
xchg
and
fmuls
and
lea
repz
test
dec
push
imul
cmp
sbb
stos
jbe
ja
mov
cltd
dec
ret
lea
add
test
lcall
fdivrs
aaa
sub
add
inc
lods
cmp
sti
bound
pop
xchg
cmp
out
xchg
dec
lds
popf
lds
dec
and
dec
mov
mov
cmp
jo
xchg
xor
jno
arpl
add
lret
push
int3
jo
fists
movsl
aas
pop
dec
sar
cmc
mov
and
sub
jp
in
daa
push
pop
add
outsl
and
insb
std
cmp
aaa
das
sub
mov
sbb
jge
cmpsl
sbb
sbb
push
test
xchg
cmp
stos
sub
nop
cmp
lds
decb
into
arpl
xchg
sahf
xor
mulb
add
jl
stos
inc
out
cli
adc
jne
dec
ja
cmp
push
mov
and
popf
fwait
cli
mov
cmp
xchg
fdivl
mov
orl
rclb
in
jbe
fmuls
inc
jno
ret
inc
repnz
movsl
aas
ss
jnp
in
adc
pop
jp
xchg
add
xchg
xchg
jns
jmp
mov
pusha
jg,pn
add
fsubs
mov
sbb
mov
in
mov
adc
int3
loop
in
sub
jl
add
imul
lods
push
pop
or
jns
out
ljmp
jle
inc
dec
mov
loope
cmp
stos
sahf
xchg
into
sub
inc
out
push
iret
out
sub
sub
mov
iret
sahf
fs
cmp
xor
cmc
fsts
sbb
cli
pop
or
nop
mov
imul
test
add
int
inc
fistpl
cmpsl
addr16
push
jns
jg
and
xor
dec
dec
xchg
add
add
or
cld
pop
mov
push
out
push
sarb
lods
outsl
popa
popa
das
mov
movsl
dec
cmp
cmp
xor
fucomp
rolb
sub
je
push
jbe
jno
sub
pop
xchg
sbb
mov
pusha
cmc
aaa
pop
xchg
out
sbb
stc
ljmp
inc
push
push
add
add
lcall
fwait
repz
xor
add
test
fldenv
in
aad
popa
movsl
fsubr
push
fdivrs
pop
cmp
je
push
cli
js
sub
lret
mov
push
pop
out
fwait
lock
add
clts
adc
int3
and
push
add
in
and
fistl
cwtl
cld
mov
cmp
gs
das
add
loop
jmp
cmpsb
lcall
dec
mov
insl
aad
inc
rcll
xor
or
dec
scas
sbb
inc
push
push
mov
xchg
mov
jae
add
cmp
cmp
mov
xlat
mov
inc
sub
adc
push
xchg
xchg
cmp
cmp
test
xchg
mov
jge,pt
aas
outsl
insb
sti
cmp
or
scas
push
fidivrl
add
dec
adc
pop
sub
mov
rdmsr
add
sub
xchg
mov
sbb
mov
xor
stos
xchg
sahf
sub
add
add
mov
idiv
jne
iret
adc
dec
lods
cmp
add
jecxz
dec
and
inc
mov
lahf
jnp
test
in
or
arpl
push
dec
cmp
popf
xchg
mov
aaa
xor
std
pop
inc
mov
stos
xor
fistps
cli
pop
bound
mov
dec
adc
gs
mov
cli
mov
and
push
push
and
xchg
xchg
inc
dec
xor
and
inc
or
pop
cmpsb
mov
daa
fidivrl
mov
push
cs
cmc
pop
mov
lret
sbb
pop
js
bound
movsb
les
arpl
aad
fmul
push
add
inc
pop
jae
mov
rclb
fwait
ljmp
xchg
lock
pop
mov
adc
ret
pop
jmp
mov
cmp
add
ret
mov
out
xor
leavew
sub
xchg
xorb
sbb
sbb
lea
aaa
faddp
push
dec
lock
jo
rcl
mov
movsl
jne
add
add
pushl
sub
sbb
push
cmp
add
add
inc
xchg
je
mov
push
pop
cmp
add
inc
push
imul
sbb
mov
inc
sbb
dec
rol
lock
icebp
xchg
mov
ret
vpshldvw
jbe
mov
je
mov
jg
jg
out
mov
mov
inc
xchg
popa
or
push
inc
xchg
xlat
stc
or
add
pop
mov
xorl
repz
aaa
lret
ja
fwait
dec
filds
sbb
lcall
sbb
push
and
cltd
movsb
out
sub
jle
gs
cmp
insl
loope
dec
push
lret
loope
add
pop
daa
xchg
xchg
inc
jne
jns
or
ja
mov
dec
add
xchg
pop
push
aaa
lock
test
mov
movsl
xor
dec
jno
adc
cmp
fisubs
addr16
mov
sbb
jecxz
add
add
sti
iret
ss
push
jno
cmpsl
jo
inc
addl
add
pushf
in
mov
pop
insb
adc
les
inc
mov
and
xor
add
and
dec
das
sub
dec
sbb
shl
shr
int
push
lret
mov
xchg
push
xor
loope
mov
hlt
inc
loope
cmpsb
cmp
lret
inc
add
inc
outsb
imul
fwait
jns
fcmove
insl
inc
in
lret
mov
xor
push
cld
sbb
notb
mov
cmp
les
push
jno
lret
ja
mov
loopne
popf
mov
pushaw
pop
sub
dec
int
pop
mov
repz
fnstenv
in
mov
or
xchg
nop
mov
in
sar
dec
mov
cwtl
sub
lret
stc
sub
mov
inc
and
pop
sub
cmp
pop
enter
pop
or
mov
add
jns
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
dec
xorb
test
add
pop
adc
aam
mov
or
mov
std
jmp
and
out
cwtl
int3
xchg
adcb
inc
inc
outsl
xchg
push
jmp
xor
cld
shrb
fwait
clc
mov
push
les
fimull
icebp
xlat
insl
in
jp
movsl
lea
mov
mov
arpl
in
sbb
es
mov
aaa
xchg
xchg
stc
lret
push
xchg
jmp
mov
ficomps
fldenv
mov
inc
out
push
ret
lret
adc
lods
dec
mov
push
pop
or
sub
jb
xchg
les
mov
lcall
xchg
sbb
jno
or
lods
sbb
push
push
shl
sbb
sub
ret
xchg
sub
in
popf
mov
fsubl
jle
ljmp
sbb
add
sub
rcrl
insl
scas
rcrl
test
fldl
add
add
mov
mov
ja
mov
add
repz
mov
lcall
xor
mov
push
mov
pop
mov
daa
pop
fldl
jp
and
mov
cwtl
popf
cmp
cmpsb
in
adc
sbb
loope
mov
mov
push
sbb
popa
sbb
cmp
pop
add
ret
cmp
outsl
push
adc
cwtl
pop
clc
hlt
rolb
dec
lods
xchg
pop
mov
into
add
mov
push
add
rorb
jnp
ja
sub
std
sub
ljmp
scas
mov
and
and
imul
movsl
fistl
pop
in
inc
test
shrb
mov
dec
out
cmc
cmp
xor
icebp
repz
pop
add
adc
mov
mov
jbe
pop
addr16
movsl
jnp
ljmp
sub
popf
mov
add
add
pop
test
ljmp
lock
xchg
sub
add
add
add
cmpsl
adc
mov
dec
mov
jb
call
dec
mov
xchg
jae
ja
cs
daa
push
push
out
or
in
sbb
jg
cwtl
popf
leave
lcall
lcall
mov
inc
xchg
idivl
ss
fildll
mov
and
or
scas
dec
jb
sub
aad
bound
data16
in
loopne
cld
xor
shll
xor
mov
push
or
add
movsl
mov
dec
rcrb
jmp
sti
mov
int3
jno
jp
xchg
in
inc
xor
and
clc
mov
cmp
mov
and
sub
ja
xor
jbe
pop
pusha
or
pop
pop
fsubrl
mov
loop
cmp
call
stos
sbb
cmp
xor
push
jnp
and
jb
mov
pushf
loopne
or
add
imul
push
jnp
sbb
push
xor
sbb
push
push
xchg
add
xchg
push
andl
mov
xchg
xor
and
ret
sbb
mov
inc
xchg
insl
std
lahf
ret
and
sbb
testb
lea
icebp
mov
pop
push
cmp
cmpsb
adc
sbb
mov
mov
ret
sbb
les
bound
ljmp
scas
jns
cmpsl
jae
out
mov
in
daa
and
cmpsl
and
inc
cltd
addr16
stc
dec
int
or
imul
mov
mov
cmc
rorb
lods
jp
dec
push
lock
pusha
xor
int
and
enter
mov
pop
sahf
xchg
adc
inc
fwait
mov
or
fisubrs
in
xor
int
loop
outsb
lock
push
dec
sbb
jnp
inc
popa
push
pop
imul
insb
iret
cld
inc
mov
ret
subb
add
add
aas
or
mov
jbe
mov
add
add
int
mov
mov
scas
and
popa
ss
xchg
aas
ret
call
test
dec
scas
lods
jb
jle
out
adc
sbb
sar
sbb
xlat
hlt
in
xor
jmp
add
mov
cmp
lds
clc
fsub
inc
jns
mov
in
jl
cmp
mov
mov
cwtl
inc
sti
xchg
mov
sbb
in
pop
push
outsl
jnp
iret
pop
adc
mov
jp
in
sarl
pop
mov
mov
out
adc
cltd
bound
jo
cmpb
fistpl
xchg
out
mov
insb
inc
jle
fs
imul
outsb
mov
int3
xchg
sub
cmpl
cmp
xchg
mov
cmp
pop
mov
dec
ror
cltd
std
mov
xchg
je
and
enter
sub
mov
xor
out
add
add
push
outsb
fisubs
test
std
and
xchg
pusha
mov
add
xorl
ret
pop
pop
push
xchg
loope
lock
ret
es
nop
call
mull
sbb
fwait
xor
adc
aam
pop
cltd
pop
outsl
xchg
in
dec
lods
dec
ret
push
push
movsb
mov
lret
jno
and
pop
xchg
adc
mov
cmpsb
jl
sub
xor
add
adc
mov
cld
jge
call
lret
data16
pop
int
imul
ljmp
dec
xrelease
enter
movsb
ja
test
inc
xor
dec
orl
mov
xlat
push
push
outsb
inc
dec
push
mov
mov
mov
add
pop
push
sbb
sub
mov
ss
fwait
out
adc
xor
out
dec
jbe
sarb
and
mov
lock
stc
jmp
add
add
mov
jns
mov
add
add
pushf
pop
mov
in
or
sbb
sbb
inc
pop
mov
mov
inc
mov
jb
bound
sub
fildl
pop
dec
add
js
jno
pop
xchg
xor
xor
int3
leave
pop
mov
incb
fsubs
sbb
jle
cwtl
dec
mov
sub
jl
ffree
and
xchg
push
fmull
jbe
xor
push
std
loopne
push
jae
in
cmp
push
sub
test
std
sub
leave
pop
loop
sbb
sbb
loope
fildl
scas
inc
sbb
popf
xor
fcmovnbe
mov
aam
cltd
adc
stos
shl
scas
sub
pop
xchg
dec
fidivrs
or
jno
gs
insl
cmc
dec
pop
test
inc
mov
call
push
mov
shlb
aaa
jne
push
js
mov
push
mov
inc
and
jnp
sysexit
outsb
inc
aad
add
add
int
fstp
iret
push
cmpsb
fadd
dec
xor
inc
les
add
add
test
jne
xchg
sbb
jne
popf
and
mov
or
data16
push
sti
cmpsl
lcall
cmpsl
mov
mulb
xor
pop
xor
mov
mov
add
test
mov
push
call
jmp
data16
push
pop
or
shl
out
imul
mov
shl
dec
movb
in
and
in
jp
cmpsb
fcoms
cmp
jbe
push
mov
loop
in
arpl
push
imul
xchg
lods
add
dec
fbstp
testl
push
stc
jo
fwait
xor
pop
pushf
pop
pop
scas
push
jecxz
lds
cmpsl
clc
pop
sbb
xor
test
enter
add
sbb
sub
add
fwait
in
xlat
adc
push
sub
inc
data16
adc
dec
dec
sub
push
pop
jb
jle
mov
mov
push
xor
add
ficoms
lahf
and
scas
std
out
ljmp
outsl
mov
add
test
mov
or
jge
sub
imul
fisubrl
xor
into
cmp
push
jns
int3
push
inc
seta
pop
int
jecxz
movsb
or
mov
pop
or
loope
mov
outsb
aaa
sub
out
adc
dec
xor
cmpsl
xchg
rorl
jmp
adc
loop
int3
mov
dec
xchg
fwait
pop
add
pusha
movsb
shll
and
and
inc
xor
ds
mov
push
out
xchg
outsb
inc
sub
mov
push
cmp
push
test
jae
mov
cmp
in
push
xor
jnp
lret
xchg
xchg
aad
jle
xchg
dec
push
pop
lea
sti
pop
fisubrs
pop
or
loop
into
add
xor
mov
cmpl
mov
test
lret
push
dec
aam
sbb
mov
sbb
jns
mov
nop
pop
std
insl
mov
ljmp
pop
jecxz
add
add
mov
icebp
sub
push
add
jp
ficompl
adc
loopne
cmp
test
aam
jne
jg
jns
cmpsb
and
mov
shrl
adc
sbb
negb
xor
cltd
inc
frstor
xor
in
or
negb
stc
cld
stos
shll
cmpsl
pop
dec
clc
jae,pt
test
push
dec
xchg
mov
pop
inc
mov
rclb
movsb
pop
scas
aas
cmp
inc
subb
jns
push
sbb
cli
ss
inc
push
rcr
mov
test
jno
adc
and
mov
outsl
jl
jns
mov
mov
inc
fldenv
cltd
stos
dec
xchg
push
mov
ljmp
outsb
mov
fcoml
xchg
jmp
mov
ret
cmpsb
xchg
adc
adc
add
cmc
int
scas
mov
fcoml
cmp
xor
pop
adc
inc
or
test
fcomps
add
push
inc
insb
jns
add
add
dec
mov
or
pop
test
les
sub
and
pop
outsl
mov
std
push
mov
adc
cmpsl
sti
mov
pop
jecxz
test
dec
push
inc
test
cmp
ret
lret
divb
mov
stos
mov
xor
cmp
xchg
scas
cmp
push
les
mov
aam
mov
outsb
and
cwtl
push
add
test
in
xor
mov
pop
and
xchg
push
pop
movl
call
pop
dec
xchg
push
in
pop
xlat
stc
jne,pn
dec
mov
sarl
sub
lahf
mov
pop
rolb
repnz
filds
jo
add
inc
sbb
jnp
pop
iret
cltd
xor
test
dec
push
dec
shll
shll
in
test
sar
aad
push
and
dec
inc
xchg
dec
xorl
mov
xor
add
ljmp
dec
mov
xchg
pop
jle
add
add
mov
data16
ficomps
push
jne
cmc
sub
imull
xor
mov
add
xor
inc
test
pop
ja
fcmovnbe
sub
pop
lret
js
pop
faddl
movsl
dec
negl
add
bound
push
pop
mov
mov
push
fisubrl
lret
push
or
adc
jle
xor
mov
pop
xor
js
decl
add
mov
test
popf
mov
push
popf
vsubsd
out
gs
push
xchg
mov
sahf
push
sub
cld
sbb
push
pop
out
sbb
or
popf
pop
inc
fildl
test
push
adc
sub
adc
data16
test
iret
cmp
jmp
lahf
out
stc
stos
lock
lea
subl
pop
mov
add
imul
outsb
xor
lock
mov
sti
push
add
pushf
jo
cmp
into
aad
insl
cs
add
add
aaa
shlb
cmc
div
testl
popa
adcl
add
push
xchg
mov
sbb
movsb
lret
push
mov
enter
cmp
jo
js
mov
nop
out
shr
scas
scas
les
mov
int
dec
ds
out
pop
add
leave
adc
mov
bswap
popa
jne
int
test
js
lods
in
jne
negl
dec
mov
aaa
cmpsl
mov
ficoml
and
cmp
das
dec
dec
das
inc
hlt
into
pushf
fstpl
pop
sbb
popa
adc
rcrb
and
xchg
dec
mov
aas
dec
mov
jg
mov
adc
adc
outsl
lock
cltd
or
sbb
add
dec
repnz
sahf
imul
mov
xchg
jg
lock
mov
imul
add
sub
imul
push
jns
test
adc
and
pushf
js
mov
scas
push
leave
popa
aad
clc
scas
incb
add
pop
push
nop
push
sahf
rcr
pop
adcb
mov
dec
push
add
out
test
xlat
subl
ja
fadds
sbb
add
rorl
popa
dec
lds
fbstp
mov
addl
fstpt
sub
stc
push
bound
mov
sub
cmp
faddl
sub
movsl
cmp
dec
out
mov
mov
mov
into
shll
jl
ficompl
cli
dec
or
pusha
adc
and
sar
push
xchg
jp
push
ds
mov
bound
mov
lods
xchg
cmp
pusha
cmp
pop
push
lods
xchg
daa
loop
popa
or
add
jns
sbb
jecxz
sbb
dec
xchg
mov
xchg
sub
pop
push
xchg
in
inc
pop
adc
jne
sbb
cmp
sbb
arpl
cmpsl
mov
or
add
arpl
cmpsb
jcxz
fimull
lea
add
rolb
mov
mov
jge
mov
das
mov
xchg
clc
test
mov
aad
scas
insl
xor
jl
int
andl
inc
int
inc
pop
push
mov
jmp
test
jbe
sbb
mov
andl
sti
add
mov
outsb
mov
lea
in
dec
out
mov
outsl
aaa
out
xchg
xchg
fcoml
jns
xor
pop
stc
or
xor
inc
movzbl
iret
mov
addb
or
jl
sbb
jo
xor
jmp
jmp
dec
and
and
dec
std
rolb
mov
mov
arpl
je
xor
xchg
pop
lret
mov
shlb
add
je
movsb
pop
sbb
lock
les
div
add
jb
call
popf
into
mov
jmp
adc
inc
inc
inc
inc
add
add
clc
jnp
jg
in
cli
enter
and
fists
add
add
pop
lea
rorb
insb
mov
outsl
inc
or
mov
roll
add
jae
lods
aas
pop
push
test
jb
fildll
fisttpl
xor
call
adc
aad
push
cmp
data16
push
lret
adc
jo
clc
aam
sbb
rcl
sbb
in
icebp
push
dec
add
pop
incb
mov
je
mov
adc
stc
test
call
data16
cmp
outsb
adc
movsl
sbb
mov
inc
push
out
cli
sub
lret
enter
sbb
pop
mov
rol
fmuls
in
aad
ljmp
cmpsb
jnp
icebp
rcrb
xor
jmp
cld
movsl
push
sub
mov
inc
and
daa
ror
pop
cmp
xchg
cwtl
aam
jp
mov
loope
push
fidivrl
adc
out
popaw
je
pop
popf
lret
xchg
push
sahf
out
jne
pop
arpl
mov
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
fdivrs
popa
movsl
bound
pop
inc
cmp
stos
jns
jl
test
test
movsl
leave
aam
jbe
mov
adc
adc
add
dec
cmp
sbb
stc
int
out
sub
cmp
into
mov
fstpt
mov
adc
lods
ljmp
push
mov
mov
mov
pop
lahf
inc
popf
je
into
bnd
xchg
in
ds
inc
rclb
jge
stos
mov
shll
into
dec
aad
adc
ret
cld
push
stos
out
in
xchg
jecxz
jle
mov
cmpsb
test
jmp
jne
sbb
loope
mov
testb
dec
dec
adc
insl
sbb
cmp
xor
jae
ljmp
and
ret
mov
xchg
loop
cmp
ficompl
jae
popf
cmp
add
jl
sar
std
jle
pop
popf
scas
pop
ficoml
mov
xchg
add
add
pop
stos
adc
inc
sub
rcrb
adc
pop
mov
int3
jo,pn
or
cmp
pop
cwtl
jne
jb
push
and
pop
and
pushf
inc
popa
lret
imul
lds
adc
scas
mov
cld
popa
xor
movsl
cli
mov
mov
mov
adc
xor
lds
ja
pop
sbb
icebp
mov
sub
shlb
mov
jg
sti
push
mov
push
loopne
mov
adc
outsb
add
aam
outsl
aam
pushf
iret
aas
movsb
arpl
push
add
mov
mov
or
cmp
jl
or
xchg
inc
dec
pop
or
sub
inc
jae
ret
shll
lea
or
std
cmp
jmp
repnz
mov
jge
inc
mov
push
mov
mov
cmp
jg
ds
add
add
cwtl
or
stos
xchg
cmp
in
test
sub
xchg
add
add
pop
xchg
mov
fldenv
insb
notl
dec
imul
sub
jns
dec
data16
sti
xlat
insb
fs
sbb
sbbb
imul
adc
add
mov
and
or
push
test
dec
mov
cmp
pop
inc
divps
inc
mov
mov
mov
out
xor
mov
xor
inc
shll
lahf
inc
outsl
sbb
sub
adc
ja
aad
pusha
roll
mov
daa
leave
dec
cmp
cmpsb
and
sahf
jnp
gs
pop
cmc
jb
shll
int3
jae
xchg
daa
rcrl
mov
xchg
pop
xor
rolb
sbb
sub
das
cmp
lock
popf
add
fstps
sbb
cmpsb
test
add
outsl
sti
mov
mov
out
pop
or
xchg
add
add
imul
loopne
and
fiaddl
xchg
mov
mov
aam
sahf
jle
daa
sahf
int3
orl
std
shlb
ret
fidivrs
sbb
int
in
jl
jb
xchg
inc
outsl
lret
loopne
mov
into
je
fsubl
shlb
lds
lret
add
sar
scas
push
fsubr
sar
pop
shll
test
adc
repnz
jb
int3
mov
sub
int3
and
loop
pop
xor
testl
mov
mov
clc
clc
pop
xor
xchg
rolb
mov
fisubl
test
sub
fisttpl
dec
xor
pop
fdivrs
ret
bound
out
dec
jb
lds
xchg
ds
dec
xchg
divb
add
push
and
xlat
aas
dec
sbb
or
stos
cwtl
add
add
insl
xchg
fildl
sbb
test
lea
jbe
lea
in
mov
sbb
out
adc
sahf
sub
mulb
mov
fbld
lods
addr16
dec
xchg
in
xchg
int3
dec
xchg
sbbl
or
jl
sar
xchg
or
mov
cs
pop
sbb
mov
add
jle
in
mov
push
inc
cli
hlt
mov
adc
sbb
adc
iret
fmull
test
mov
inc
shrl
loopne
inc
cld
iret
cmp
sub
cmp
pushf
cmpsb
flds
pop
ljmp
loope
aaa
jo
mov
inc
mov
popa
mov
push
iret
inc
mov
aam
dec
mov
out
pop
pop
ficoml
test
sub
imulb
test
fcoms
pop
xchg
mov
push
cltd
and
xchg
xor
push
mov
stos
test
pop
jecxz
out
cmp
call
mov
imul
add
mov
mov
jmp
test
sub
mov
add
add
push
or
mov
push
sti
fwait
insb
inc
or
xchg
cmp
in
fbstp
out
inc
shll
nop
mov
adc
cmp
add
cmpsb
out
rorb
sahf
dec
and
jge
out
adc
movsb
jmp
pop
push
and
and
add
sahf
lock
stos
xlat
or
aaa
lret
in
push
mov
xor
test
int
mov
lods
test
pop
dec
xor
dec
js
mov
scas
sub
push
daa
lods
add
sbb
in
stc
push
icebp
and
xchg
js
adc
aam
dec
push
adc
mov
xchg
loope
int3
mov
icebp
sbb
mov
mov
data16
mov
subl
jecxz
dec
add
xchg
xchg
out
std
cld
cmp
sbb
insb
mov
mov
push
iret
xor
and
push
xrelease
out
inc
and
aas
mov
add
adc
sbbl
popl
insb
sbb
add
add
push
imul
pop
add
jb
daa
movsl
mov
lcall
es
mov
cmpsb
movaps
iret
jle
mov
stos
loop
je
adc
xor
add
pop
roll
mov
xorl
out
popl
lds
sub
cmp
orl
mov
cmp
jb
xor
jg
pop
neg
mov
cwtl
hlt
mov
mov
mov
inc
mov
pop
fstps
mov
jp
std
lods
inc
movsl
mov
mov
gs
pop
fdivrl
dec
mov
sub
jl
outsb
jo
and
sarb
imul
xchg
lcall
or
inc
mov
jg
or
jo
notl
cs
fisttpl
adc
mov
bnd
stos
sub
push
xchg
pop
add
xchg
or
add
add
add
imul
movsb
and
repz
out
loopne
fwait
add
add
push
les
lahf
inc
fbld
cs
cmp
andl
mov
xchg
cmp
mov
notl
out
pop
mov
neg
mov
cs
lock
call
rorl
mov
in
dec
les
ja
in
je
or
loop
dec
int
cmc
test
std
push
push
pop
xchg
mov
stos
push
mov
movsb
dec
push
call
int3
jecxz
push
iret
jbe
pop
jge
inc
fwait
rcrb
sub
call
dec
cmpsl
pop
pop
nop
dec
jnp
xacquire
pop
shrd
pop
rep
inc
hlt
sub
lret
mov
dec
sbb
scas
add
js
rol
fwait
jnp
daa
fdivl
mov
mov
das
sbb
cmp
pop
mov
gs
sub
push
int
dec
gs
pusha
cmp
stos
cmpsb
outsb
mov
test
cs
mov
add
add
mov
sub
lahf
mov
jle
daa
mov
add
add
push
scas
aad
xchg
aad
fstpl
xor
out
repnz
adc
and
push
sbb
outsb
out
mov
cld
pop
sub
cmc
jle
insb
sbb
cmc
cmp
negb
hlt
xchg
mov
xchg
int
jge
xadd
and
or
lds
sub
cmp
mov
mov
xchg
xor
popa
fistl
ja
ret
xchg
mov
cmp
fildll
adc
in
addr16
and
push
adc
add
sbb
outsb
dec
push
outsb
mov
imul
stc
xchg
out
fisubrl
ret
jb
test
mov
clc
sbb
adc
mov
pop
lock
shll
lcall
add
insl
xchg
dec
out
cltd
mov
push
lods
lahf
jle
mov
xchg
inc
mov
add
cltd
sub
out
inc
sub
or
sub
add
add
fistl
fdivr
and
xchg
mul
push
data16
add
andb
and
sbb
outsl
xchg
inc
aam
and
andl
xlat
mov
inc
inc
cmp
dec
push
mov
inc
xchg
dec
and
push
sarl
sbb
push
sub
adc
push
push
cmovb
mov
adc
hlt
out
inc
std
andb
pusha
or
cs
inc
add
lds
or
sbb
bound
pop
inc
inc
xchg
fdivrl
cmp
out
push
xchg
push
push
cwtl
ficoms
mov
pop
jg
sub
jne
dec
mov
add
mov
push
movsb
stc
and
imul
fisubs
inc
shll
inc
leave
lret
scas
inc
pop
scas
cwtl
int3
jl
mov
out
clc
mov
addl
xor
dec
sti
aad
inc
mov
add
lcall
ja
mov
aad
and
scas
and
push
mov
add
add
pusha
test
mov
cld
mov
leave
sahf
add
add
push
sub
aad
fwait
mov
das
lds
out
rcr
mov
jge
push
cli
in
cmp
pop
fs
iret
test
push
pop
aaa
adc
pop
jbe
mov
stos
int
jp
popa
xor
xor
pushf
out
mov
cltd
xchg
sub
fldenv
mov
mov
push
mov
jbe
pushf
adc
add
push
or
or
and
dec
xor
loope
jae
pusha
fcoms
xchg
sub
xchg
xlat
mov
pop
add
dec
mov
sub
out
cmpsl
shrl
pop
cli
sbb
lret
sub
push
out
pop
dec
sbb
jl
fstpt
testb
clc
and
jle
sbb
hlt
fstpt
aaa
xchg
add
rorb
outsb
adc
and
mov
or
lcall
pop
ss
lahf
add
add
jge
lcall
test
stos
cmpb
scas
adcl
sbb
add
pop
fisubs
mov
dec
sub
ret
inc
mov
ret
cltd
sbb
out
int3
scas
dec
pop
in
popf
fs
cmpsb
or
sbb
int
xchg
loope
cmp
push
xchg
sub
js
adc
jecxz
push
scas
lret
lcall
out
jns
test
fwait
in
ljmp
iret
in
lds
mov
pop
aad
test
inc
subb
inc
ret
xchg
jne
and
bound
out
xlat
sbb
shr
arpl
xchg
mov
enter
jge
je
adc
add
outsl
xor
fs
shrb
dec
idiv
aaa
jne
je
ret
adcb
adc
sub
pop
popa
sti
icebp
mov
mov
sub
xchg
das
movsb
xchg
jmp
repnz
sbb
dec
int3
bound
add
add
mov
inc
inc
add
mov
add
cwtl
aas
ficoms
xor
push
es
out
sub
lret
cmp
mov
lret
rol
sbb
push
push
pop
shlb
inc
dec
xchg
fs
xor
inc
mov
ret
jb
jecxz
cld
xor
push
inc
mov
icebp
fisttpl
test
or
js
test
cld
outsb
insb
pop
fdivp
out
jae
outsb
pop
insl
pop
mov
loopne
pop
addr16
in
lea
fcomi
xorb
test
addl
test
mov
in
hlt
arpl
fsubrp
jecxz
sub
in
add
inc
imul
les
sbb
pop
bound
ja
mov
jbe
outsl
pop
xor
mov
sbb
out
sbb
push
and
mov
ret
jo
cmp
daa
sub
in
fdivl
adc
aas
xor
xchg
push
push
lcall
jecxz
xor
imul
pop
aam
out
jg
call
add
or
sbb
inc
mov
clc
inc
fsubs
add
cmp
or
test
int3
lahf
fsub
jmp
and
mov
and
jmp
shlb
popa
mov
out
popf
dec
mov
jnp
jb
movsb
stc
cs
push
mov
clc
jg
dec
mov
dec
lret
and
or
pop
push
stos
xchg
push
out
daa
mov
ret
shrl
and
and
inc
sub
mov
jbe
mov
test
test
outsl
movsl
and
or
sbb
adc
jle
push
pop
out
push
cmp
xchg
add
lcall
mov
fadds
in
fistl
cmp
fs
shl
push
sbb
pop
arpl
and
fidivrs
xchg
adc
cwtl
cmp
icebp
shlb
nop
fsubs
pusha
nop
push
addl
sub
xor
mov
xchg
jecxz
test
dec
mov
pop
add
add
inc
fdivl
push
dec
mov
frstor
add
cld
div
nop
stc
adcl
xor
and
pop
sub
xor
ja
aaa
loope
mov
into
lahf
les
mov
aad
and
ljmp
stos
aad
lds
or
dec
movsl
loope
mov
xlat
dec
lods
xor
xchg
and
in
icebp
xchg
ret
and
adc
mov
mov
bound
dec
arpl
lea
scas
xor
mov
mov
xor
adcl
in
or
sahf
sbb
pop
lds
xchg
cmpsb
cs
shl
push
jg
xlat
or
cs
scas
out
inc
or
jl
lret
lahf
jp
mov
or
sub
push
out
add
cli
mov
add
or
push
mov
push
movsb
push
cmp
andb
xchg
mov
in
cmp
out
cmp
lfs
add
adc
mov
sbb
call
add
add
push
mov
call
lahf
fsubrs
andl
js
arpl
xchg
movsb
jb
fidivl
mov
xchg
std
pop
rorl
test
lods
arpl
js
outsb
sub
xchg
xor
out
in
bound
push
lcall
repnz
jle
mov
fstps
sub
sahf
xor
pop
cmpsl
mov
xchg
sub
ds
sti
testb
pop
cmpsb
push
push
pop
xchg
fcoml
int3
lret
and
pop
out
lods
leave
inc
jno
rorb
xchg
loopne
cmpb
inc
and
jns
xor
dec
cmp
and
fldt
out
shlb
mov
inc
lret
pop
dec
pop
fsub
sarl
mov
in
ljmp
adc
xchg
xchg
bound
shl
pop
in
cli
jle
xor
jp
js
cmp
lds
mov
push
aam
repz
pop
addr16
add
add
stos
hlt
jmp
cmp
jbe
dec
mov
add
add
xchg
pop
xor
xchg
or
dec
inc
mov
sti
mov
or
or
push
xor
adc
shrl
insl
mov
sub
std
ds
mov
mov
mov
mov
sbb
movsb
sbb
pushfw
lods
mov
lods
ret
fisubs
push
mov
scas
test
inc
xchg
sub
add
testw
mov
sbb
inc
stos
lods
inc
test
mov
push
add
inc
lahf
popf
insl
push
mov
adc
fdivp
mov
mov
jne
xchg
arpl
xchg
popa
cs
bound
lods
imul
add
jg
pop
lcall
jbe
or
stos
les
push
dec
gs
fisttpll
mov
inc
fcmovnb
test
mov
sbb
push
push
adc
push
pop
imul
xlat
add
dec
or
add
cld
push
leave
or
repnz
mov
add
add
push
nop
out
xlat
out
jg
in
xor
fsts
scas
out
in
movsl
add
add
stc
repnz
xor
mov
push
xchg
sbb
fdivs
insl
dec
hlt
mov
sti
cmc
mov
icebp
jnp
dec
rolb
iret
leave
out
dec
ss
jl
push
sbb
in
repz
dec
fnstcw
xchg
clc
mov
popa
cld
roll
or
cwtl
lea
add
mov
xchg
outsl
testb
push
mov
add
xchg
mov
lds
pop
jb
mov
adc
jbe
dec
sbb
test
mul
or
push
mov
push
dec
fs
dec
push
inc
xor
lods
ljmp
je
sbb
mov
mov
mov
arpl
repz
sbb
and
push
std
xchg
ja
insb
push
cmp
mov
add
dec
push
mov
imul
movsb
mov
mov
xchg
xor
movsb
and
inc
out
cmpl
ret
xor
add
add
mov
inc
fwait
lds
jo
fldl2e
aas
daa
push
data16
cmpsb
add
add
mov
call
nop
jae
lcall
sub
adc
test
add
lods
lcall
mov
pusha
jmp
push
pop
xor
push
xchg
pop
es
rorb
adc
xor
or
mov
jl
rol
adc
les
cltd
leave
cltd
jg
push
xorb
sub
cmp
fisttpll
mov
pop
cli
stos
sub
shrl
in
es
repz
dec
leave
mov
pop
xchg
push
push
pop
into
cli
fistpll
mov
sub
jns
das
sub
xlat
fdivrs
pop
sbb
mov
aas
das
pop
test
add
xchg
loopne
push
push
dec
hlt
lods
sbb
adc
mov
stc
mov
dec
movsb
das
mov
lcall
out
mov
aam
imul
mov
xor
popa
mov
imul
add
lcall
std
inc
jne
sbb
jo
mulb
add
insb
test
movsb
popf
sub
out
xor
repnz
pusha
jae
movd
push
xor
add
stc
xchg
mov
xlat
jbe
sarb
or
cltd
pushf
mov
ficomps
sub
mov
jecxz
xor
clc
insl
stc
pop
sbb
cmp
test
scas
lcall
inc
xchg
pop
lods
popf
out
cs
sti
jb
xor
test
xor
out
movsb
jmp
int3
fisubl
lds
cmp
and
xchg
movsl
call
ja
xchg
add
shll
insb
and
cmp
ds
clc
mov
xchg
popa
aaa
jle
xadd
rorl
xor
je
xchg
inc
push
jecxz
jecxz
xor
mov
out
or
push
push
cmovge
mov
xchg
lret
add
mov
pop
lods
ss
loop
or
mov
mov
pop
add
add
mov
push
sti
jmp
push
mov
testb
pop
repnz
test
add
dec
subb
fs
mov
lods
jge
into
or
fmuls
inc
test
hlt
or
leave
mov
sti
xchg
cmpsb
stos
es
jmp
sub
xchg
pop
lret
rcll
insb
sbb
push
aad
lcall
inc
jmp
push
xor
xchg
rcrb
movsl
mov
jl
sbb
es
bt
mov
inc
aas
imul
dec
lcall
mov
mov
mov
mov
adc
xchg
jecxz
push
nop
notb
mov
mull
sbb
jns
subl
mov
adc
loope
pop
mov
mov
shrl
or
pop
mov
inc
xlat
stos
mov
leave
pop
in
ret
mov
push
idiv
push
fstpt
mov
mov
add
add
jecxz
lock
test
add
nop
scas
add
mov
mov
lret
and
push
jb
inc
nop
gs
ljmp
rcr
add
inc
fwait
sub
pushf
mov
pop
mov
fwait
xchg
push
or
stos
addr16
imul
fimuls
mov
int
mov
sub
mov
mov
jns
mov
arpl
mov
cli
call
popf
test
enter
cltd
add
mov
xchg
push
bound
mov
pop
dec
sbb
push
mov
jle
jmp
inc
jns
cltd
push
mov
and
pop
lahf
orl
jae
xchg
adc
push
mov
pop
xor
dec
sti
scas
xchg
movsl
xor
mov
lret
inc
xchg
xor
idivb
cmc
inc
or
loope
daa
scas
mov
jne
pop
mov
fmuls
sub
pushf
pushf
sti
add
add
add
cld
mov
leave
sub
add
add
add
int
jecxz
testl
jno
ret
divl
sub
mov
cltd
je
inc
fs
scas
inc
xchg
inc
adc
out
cmp
add
xchg
loopne
mov
push
lea
test
mov
pop
cmp
pusha
adc
mov
movsl
jne
fwait
mov
pushf
dec
xor
pop
mov
mov
arpl
mov
xchg
mov
and
fcoml
in
sti
adc
cmp
pop
add
cltd
sbb
sub
and
and
sbb
xor
adc
xchg
push
mov
adc
lret
sub
pop
cmp
iret
mov
sarb
and
vmovq
js
iret
and
sub
ja
or
insb
xchg
jge
pop
xor
out
sbb
mov
out
mov
out
sti
cs
inc
mov
pop
sti
add
add
out
cmc
mov
bound
or
add
mov
imul
js
mov
mov
in
popa
inc
loope
aas
dec
xchg
mov
bound
xor
xchg
inc
fldl
aas
and
sbb
pushf
and
out
jne
mov
fcompl
xor
rcll
daa
loope
mov
adc
push
push
pop
insl
popa
jae
jl
insl
roll
clc
or
sti
lcall
push
push
lcall
xchg
mov
in
das
mov
xor
dec
sarl
lahf
aad
push
push
fildl
mov
out
inc
mov
stos
mov
lahf
das
pop
xchg
ret
lret
sub
mov
jle
aas
sarl
push
loop
or
sbb
pop
rcll
leave
jbe
push
arpl
adc
and
roll
xor
test
in
xchg
scas
mov
mov
inc
pop
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
dec
sbb
add
add
xchg
mov
fistpll
inc
add
inc
and
out
fwait
xorl
sub
hlt
xlat
or
cmpsl
iret
push
in
rcr
xchg
xchg
adc
adc
push
enter
xchg
fnclex
adc
std
lock
jno
adc
mov
in
cltd
inc
lea
fwait
das
mov
fcomi
xchg
subb
push
loopne
mov
mov
xor
xor
mov
jle
outsb
push
fdivrs
cs
adc
xor
or
jno
pusha
sub
out
pop
push
jg
jb
mov
das
and
out
clc
sbb
add
mov
clc
xchg
add
push
lods
pop
jg
xchg
xor
insl
stos
roll
push
jo
push
pop
cmp
test
adc
dec
dec
dec
enter
test
ficompl
xchg
dec
add
call
test
xchg
lcall
add
add
fidivs
loop
ljmp
mov
xchg
movsl
adc
add
add
fildll
shll
adc
das
jnp
mov
pop
pop
cwtl
pop
dec
test
cmp
jg
adc
xor
mov
out
xchg
mov
outsl
xchg
or
dec
sti
sub
movsb
xlat
insb
adcb
mov
movsl
jae
cld
mov
or
ret
xchg
outsb
leave
jge
roll
mov
add
mov
sbb
test
adc
scas
mov
xor
cmp
ja
shll
stos
or
sub
in
mov
xor
cltd
test
imul
mov
adc
mov
push
ret
popf
or
xor
inc
nop
add
xor
inc
in
cmp
jbe
js
cld
das
and
add
subb
lods
lret
mov
pop
mov
sti
jge
inc
sub
cmp
jo
xchg
fdivrs
add
add
xchg
jg
jmp
std
mov
pop
pop
or
scas
add
add
subb
or
and
add
cs
jp
xchg
das
add
das
pop
add
adc
cmp
loop
jbe
fcmovu
cmp
std
js
pop
arpl
sti
jmp
aas
mov
mov
pop
data16
sbb
xor
sar
mov
or
int3
cmpsb
mov
in
push
cmpsb
mov
inc
inc
pop
cli
mov
sub
push
push
and
in
inc
or
cltd
incb
sub
push
pop
sbb
mov
adc
movsb
fcomps
jne
or
sbb
test
push
sub
into
cmc
les
sahf
adc
mov
add
push
or
fcoms
enter
sbb
test
mov
adc
jnp
xchg
cltd
neg
jecxz
pop
mov
push
lods
mov
ret
mov
jmp
test
clc
dec
outsb
jns
jbe
idivl
inc
roll
sub
add
push
divb
inc
mov
cmc
adc
mov
add
cmpsl
sbb
jmp
js
addr16
and
leave
fisubl
jne
rcrl
roll
dec
dec
ds
adc
lcall
sahf
pop
sub
xchg
push
pop
lock
pop
sub
jge
adc
out
jg
cmpl
inc
sbb
insl
and
out
adc
jle
inc
call
stc
mov
mov
lahf
mov
and
fwait
cmp
adc
xchg
sbb
dec
jne
sub
mov
push
data16
mov
mov
sub
je
inc
stos
mov
cmp
xchg
and
iret
ds
mov
sbb
hlt
sub
fsts
repz
pop
xchg
sahf
inc
mov
roll
inc
or
mov
or
out
mov
inc
bnd
lret
xchg
mov
js
mov
into
je
shlb
sub
jne
iret
or
add
add
xor
cmp
inc
call
sbb
mov
add
popf
out
mov
lds
pop
pop
decb
movsb
xor
aam
out
rcrl
add
outsb
lahf
jge
mov
and
push
sbb
push
dec
sti
insb
insb
cmc
push
idivl
cmpb
adc
scas
xor
pop
aas
fs
subb
inc
add
repnz
sbb
mov
rcr
cmp
lds
fwait
mov
jmp
popf
adc
jno
out
out
xor
out
fsubrs
cmp
jle
xchg
mov
push
add
mov
adc
and
adc
inc
cltd
push
jb
inc
xor
and
xlat
mov
sbbl
jmp
ds
inc
leave
cmpb
rcll
sahf
jle
pop
daa
mov
sar
add
cmp
push
and
ds
jmp
test
cmp
ja
ret
call
inc
iret
rcrb
and
xor
out
fildl
es
les
mov
arpl
mov
add
dec
mov
data16
push
jae
sbb
arpl
ja
cmp
pop
xor
inc
std
and
push
repnz
pushf
es
sub
and
scas
int
inc
rclb
pushl
sti
push
pop
std
jnp
testl
loope
gs
mov
gs
mov
push
sub
push
test
decb
in
sub
jle
or
mov
or
sub
mov
cmp
clc
jmp
push
sti
xchg
dec
lock
adc
cmp
iret
xchg
mov
push
in
sbb
out
in
dec
push
push
mov
xor
mov
xchg
jmp
push
out
lahf
cmp
inc
adc
pop
cmp
mov
loop
sub
pop
mov
enter
loop
lcall
mov
arpl
int
dec
mov
cmp
push
loope
loop
sbb
inc
inc
mov
add
dec
or
pop
stc
out
push
pop
bound
mov
add
in
js
add
or
je
rol
setb
jecxz
fistpl
subl
pop
test
xchg
xchg
icebp
jl
cmp
or
jnp
pop
mov
and
or
jne
sbb
mov
jmp
cmc
sub
data16
leave
arpl
and
es
test
fbld
add
adc
adc
cmp
add
frstor
notb
dec
test
jg
mov
sbb
dec
call
mov
mov
cld
fbld
hlt
in
dec
bound
push
mov
xchg
outsb
jnp
jbe
scas
mov
pop
mov
mov
inc
jne
jnp
mov
cmp
fwait
add
or
mov
cmp
clc
icebp
lret
mov
mov
fmull
hlt
mov
or
dec
dec
xchg
jns
je
movsb
pop
push
repz
js
add
add
add
push
mov
lcall
push
xor
add
mov
jo
and
xor
xor
xchg
mov
repnz
push
clc
in
jg
jne
jmp
inc
mov
sub
jae
orl
jle
push
lret
mov
repnz
mov
repnz
mov
and
je
hlt
dec
xlat
adc
cmp
cmp
icebp
inc
inc
cmc
mov
jne
cltd
ds
jnp
adc
fcoms
and
mov
sbb
mov
lahf
dec
sub
xor
xchg
push
jle
inc
cmpsb
mov
cmp
inc
mov
shlb
test
pop
jmp
pop
sbb
and
iret
or
push
popf
jmp
xor
mov
sub
mov
mov
imul
add
push
sti
insl
test
mov
out
ljmp
in
and
push
cmpsb
out
pop
enter
outsb
xchg
into
mov
add
add
jne
mov
int3
insb
lret
out
aaa
mov
add
loope
adc
and
ret
or
insl
adc
add
stos
mov
xor
xchg
test
ret
arpl
les
cmp
sub
nop
adc
adc
inc
pop
sbb
mov
jg
xor
jg
lods
mov
ja
nop
movsl
loope
leave
and
cmp
ss
sub
push
fbld
mov
adc
daa
popf
mov
lock
testb
mov
dec
orl
sahf
push
mov
push
clc
jle
jmp
adc
cmp
dec
mov
xchg
div
or
addl
sahf
cmc
test
je
jo
in
push
mov
cld
leave
mov
sahf
xchg
and
cmp
sar
leave
push
push
lods
inc
dec
lods
mov
lock
xor
scas
sub
mov
loopne
fidivrs
jmp
dec
inc
push
out
shlb
and
shll
xchg
lret
add
pop
sbbl
fstp
rorl
scas
sbb
add
std
sbb
rclb
adc
sarb
dec
vsqrtss
adc
push
cmp
and
lcall
repnz
add
push
shr
mov
sbb
mov
xchg
rcrb
pusha
push
push
mov
outsb
call
sbbl
or
in
and
jp
aas
xchg
pop
dec
jb
arpl
push
sbb
outsl
add
xor
sbb
data16
aad
xchg
inc
sbb
sub
sub
fimuls
sub
jmp
dec
inc
push
fwait
ljmp
add
gs
push
cs
test
jns
leave
xchg
mov
xchg
lods
cmp
jp
sub
sub
xor
inc
ret
fcmovnb
lret
pop
lds
aad
mov
jecxz
pop
sub
and
sub
dec
or
push
das
orb
int
enter
jne
test
iret
sbb
scas
sub
add
add
in
mov
jecxz
out
mov
jle
mov
add
xor
dec
popf
jl
orl
pushf
xor
test
push
mov
cmpsb
sar
dec
dec
xlat
int
in
mov
cmp
test
sbb
mov
pop
ja
cmc
gs
xchg
adc
dec
fs
adc
out
and
cltd
dec
and
in
sub
daa
inc
sub
add
icebp
sbb
imul
push
dec
hlt
ret
insl
mov
push
ffree
scas
xlat
xor
sbb
or
pop
xor
adc
jbe
clc
dec
jl
fsubrs
xchg
pop
push
je
mull
mov
inc
nop
ret
sahf
fwait
lcall
add
jnp
xchg
orb
dec
cmp
mov
les
push
mov
sti
and
adc
lds
lea
push
pop
sub
cmp
pop
or
dec
cmpsb
aaa
jle
add
push
xchg
test
jg
into
lret
orl
add
add
xor
push
cmpsl
adc
jne
pop
and
insb
call
ficompl
jmp
mov
lcall
cltd
jg
pushf
mov
add
adc
or
out
sbb
js
jmp
dec
cwtl
movsl
adc
push
arpl
push
lcall
orl
sub
cmp
fmull
in
sti
out
sahf
or
mov
inc
or
fcoms
pop
mov
adc
sarb
cmp
icebp
sub
mov
pop
mov
add
outsb
test
je
push
jbe
mov
pop
bound
xchg
xchg
pop
or
cld
jbe
icebp
mov
jle
push
mov
cmpsl
xchg
add
jnp
out
ss
pushf
insb
dec
aaa
jecxz
es
and
data16
fwait
sub
mov
and
sub
adcl
divb
out
aaa
cld
adc
popa
std
add
add
adc
in
lcall
jae
dec
mov
cli
insb
mov
add
add
negb
icebp
dec
adc
pop
sbb
ljmp
mov
in
pop
lock
adc
nop
les
jl
fisttpll
test
cmp
in
ret
pop
xor
inc
jo
fstpl
pop
sqrtps
imul
iret
jb
xchg
mov
xchg
into
add
or
jno
das
sbb
adc
jl
out
outsl
icebp
repz
orb
in
outsl
xchg
xchg
xor
inc
or
inc
pop
daa
bound
xchg
jmp
clc
fisubrs
lahf
cmp
fs
or
jnp
movl
mov
iret
jg
inc
rorb
inc
das
push
xor
test
mov
sti
cmp
aam
cmpsb
and
rcl
lods
push
and
rorb
aad
in
jb
lcall
add
add
sub
jg,pt
dec
arpl
popf
push
mov
add
fwait
inc
cmp
lcall
pop
dec
mov
pop
leave
movsb
push
pop
xchg
pop
sbb
lret
scas
push
and
cs
fsubr
int3
lock
xchg
cmc
mov
sub
xchg
fs
pop
test
sti
out
jmp
xchg
lret
inc
pop
or
test
pusha
rolb
aas
cmp
mov
push
movsb
movsb
mov
cmpsl
jo
ret
movsl
jns
fcmovne
jo
add
enter
xchg
cli
outsb
rorb
push
out
pop
sbb
sahf
js
das
popf
int
daa
push
sahf
lods
aam
movl
xchg
loop
pushf
sub
sarb
lock
mov
mov
jbe
dec
sbb
and
es
mulb
cmp
dec
cld
adcb
mov
jg
mov
and
insb
adcl
je
or
mov
movsb
dec
jae
pop
sub
cmp
fs
in
add
add
out
idiv
outsl
mov
push
inc
notl
add
push
jbe
pop
pop
subl
ljmp
sub
dec
jp
and
imul
ret
jge
icebp
xchg
jo
xchg
or
les
add
mov
arpl
jne
mov
mov
xor
lret
shrb
adc
sub
data16
cs
mov
sub
push
sub
xor
push
jecxz
cmp
or
mov
test
add
inc
xchg
movsl
stos
sub
mov
mov
fcom
lea
xchg
cmpsl
hlt
mov
pop
pop
and
std
sti
ret
mov
mov
loopne
add
daa
cmpsl
xor
movsb
and
mov
hlt
rorb
out
mov
pushf
or
repz
push
push
add
fnstcw
fwait
mov
pop
mov
xchg
add
push
mov
push
fwait
jne
popf
je
adcb
scas
scas
inc
mov
xor
mov
pop
movsb
aam
add
add
fsubrl
sarl
shl
jne
enter
inc
outsl
lock
leave
add
dec
add
xlat
out
pop
and
xor
fwait
dec
fcomip
shl
dec
cmp
mov
cmpsb
jne
out
mov
in
xorl
rclb
xchg
pop
stc
mov
data16
inc
push
add
lea
and
cmc
test
cmp
pop
lock
in
inc
in
inc
cmc
in
xchg
hlt
or
fisttpll
cmpsl
cmp
cwtl
js
mov
push
xchg
mov
lea
push
scas
or
minps
pop
pop
jecxz
mov
mov
jge
mov
mov
dec
les
jg
lahf
push
in
aam
push
or
push
std
call
mov
imul
es
jo
out
push
mov
out
mov
cli
mul
sub
and
add
nop
cmp
lcall
cmp
xchg
mov
push
push
call
mov
jl
pop
mov
add
roll
clc
mov
ficomps
dec
jmp
fdivl
aas
fsubrs
out
pop
lret
in
and
lahf
ja
into
out
push
pop
fucomi
aam
cld
test
pop
sbb
sbbl
jg
push
pushf
mov
in
rclb
icebp
adc
aad
mov
mov
insb
sbb
in
cwtl
cmp
out
std
das
popa
xor
jo
rcll
fwait
xor
call
adc
add
mov
mov
mov
xor
xor
cmp
pop
in
sbbl
cmp
out
stos
gs
lods
fists
fcomps
jo
idiv
aas
or
push
test
jb
mov
outsb
mov
or
push
lahf
pop
or
rol
pusha
jnp
inc
test
iret
fdivs
jg
jg
and
cmp
jmp
in
sbb
dec
xor
and
add
pop
into
add
add
std
sti
leave
sti
iret
jmp
push
sub
fs
add
loop
stos
fistps
cli
push
inc
inc
adcl
jmp
ja
jp
das
arpl
jmp
add
adc
push
ja
xor
test
out
inc
jmp
test
int3
decl
xlat
lcall
add
adc
out
test
in
ret
mov
iret
mov
pop
push
mov
fbstp
fcomps
cmp
inc
dec
jl
lods
bnd
test
rorb
mov
xchg
insb
lods
ja
sbbl
push
adc
imul
inc
inc
dec
mov
xor
or
adc
or
pop
aaa
loop
push
mov
call
mov
lcall
push
rclb
or
cmp
mov
sti
das
dec
fdivrl
test
sub
mov
mov
call
add
mov
mov
xor
mov
add
popf
sub
out
scas
or
enter
pop
adc
movsl
inc
inc
pop
and
mov
lret
loopne
insl
xor
xchg
outsl
leave
clc
lock
rcr
pusha
bound
arpl
das
jl
cs
mov
gs
mov
shr
xchg
xlat
dec
fists
or
jbe
sti
push
cmp
bnd
cmpsb
popf
inc
xor
pop
ja
fucomp
mov
jp
into
insl
fisttpl
jne
adc
inc
test
mov
or
mov
push
cltd
inc
mov
jl
repnz
mov
push
cmp
sub
cli
shlb
idivb
cmp
pusha
jmp
leave
mov
push
subl
orps
jl
sub
jmp
dec
push
arpl
insl
push
xor
pop
or
sarl
scas
inc
mov
xchg
push
mov
cwtl
loopne
push
mov
stos
imul
add
fwait
mov
or
jg
mov
sahf
loop
frstor
imul
add
daa
pushf
in
mov
scas
pop
mov
sbb
scas
stc
sahf
out
jg
pop
add
iret
dec
xor
nop
es
rolb
lcall
mov
mov
sbb
insb
mov
or
mov
fst
adc
jl
dec
inc
adc
pop
mov
add
leave
xor
pop
pop
sbb
ret
popf
ja
cmp
iret
inc
std
rorl
int
xchg
mov
xor
add
mov
push
aas
jp
jae
xor
push
cmp
das
fimull
push
or
lcall
out
divl
ret
cld
cmp
lds
lds
pop
or
sub
or
push
add
pop
outsl
add
inc
cmp
xchg
lock
add
and
ja
adc
test
js
js
jno
scas
aaa
pop
cmc
loopne
andl
testl
add
xor
push
cld
pushl
cld
sbb
jae
add
add
das
cmp
sub
xor
mov
adc
dec
imul
lret
lock
loope
ss
into
add
lcall
and
pop
ret
fsts
cmp
jle
and
das
jecxz
enter
std
lock
mov
cli
fildl
dec
mov
and
pusha
scas
scas
adc
jl
enter
adc
insb
subb
push
or
popa
loopne
lods
orl
inc
arpl
dec
xchg
or
pop
aaa
js
pop
push
call
testb
dec
fsubr
in
jnp
ds
out
inc
adcb
or
adc
insb
fs
aas
lods
lods
inc
insl
cmp
fs
dec
xorb
mov
dec
outsb
mov
jbe
jo
mov
jnp
xchg
add
fstpt
jb
in
jns
mov
out
jecxz
push
movsb
lret
dec
dec
ljmp
add
xlat
pushf
shrb
lcall
or
insb
dec
js
add
add
std
mov
mov
mov
notb
pop
out
shll
dec
fmulp
add
fwait
cwtl
ret
xlat
in
jno,pt
jb
loopne
jp
in
fsubl
sbb
imul
mov
cmp
fsubs
iret
xchg
in
jp
pop
popf
cmp
pop
imul
rcll
and
pop
mov
mov
pop
clc
stos
in
test
mov
out
aam
mov
imul
dec
cli
jmp
mov
add
sbb
ljmp
shlb
push
je
adc
ss
movsb
inc
jb
pop
loop
ss
or
push
xchg
push
push
aas
popf
mov
or
adc
insb
jae
and
jl
or
ret
iret
sbb
pop
orl
jmp
cmp
in
push
jnp
mov
sub
scas
mov
aas
scas
fnstcw
inc
int
ret
add
add
loopne
data16
cmp
jae
fbstp
push
pop
xchg
ljmp
cmpsb
bound
clc
shl
cmp
ds
ja
dec
repz
fldt
in
test
dec
mov
mov
sub
cmp
xchg
or
sbb
sub
push
rol
mull
mov
xchg
imul
aas
out
mov
hlt
pusha
pop
cmp
stos
mov
call
push
nop
inc
jl
pop
fwait
aam
int3
loopne
jns
mov
mov
push
adc
push
gs
pop
out
ret
cmp
and
mov
inc
insl
xor
lea
and
mov
sbb
xchg
mov
ja
lods
cmpsl
shl
push
push
bound
xchg
xchg
push
push
and
and
iret
aaa
enter
jge
int
adc
and
shll
mov
pop
into
mov
outsl
xor
add
add
jne
jne
jg
loop
mov
dec
add
add
push
mov
sub
idivb
mov
mov
test
push
das
mov
push
sbb
movsl
jl
add
repnz
sbb
jg
xor
pop
fwait
jl
jb
shrb
jo
das
bsr
jl
lcall
mov
repz
push
mov
jno
push
xchg
popf
addb
imulb
add
cld
ret
cmp
inc
or
jae
aas
imul
lcall
aad
das
xor
call
sahf
jge
mov
aad
jae
lcall
cmp
je
lret
adc
data16
fldenv
or
pop
int3
inc
neg
ret
shrb
sub
stos
insl
cld
stos
cmp
and
ret
les
in
in
dec
ss
jmp
xor
mov
dec
jmp
push
sbb
mov
cmc
mov
pusha
xchg
add
add
add
out
or
dec
and
jge
xchg
cmp
cltd
or
mov
lock
leave
add
fnstenv
clc
fisttps
dec
sub
rcl
lea
push
xlat
cmpsl
or
test
mov
movsl
jle
mov
inc
in
mov
push
xchg
xor
pusha
pushf
sub
testl
or
lods
cmp
outsb
enter
out
pop
cmp
imul
inc
and
adc
push
sbb
jne
mov
sub
add
aaa
mov
inc
cmp
stc
jnp
cs
ret
push
xlat
sbb
int3
dec
push
bound
mov
add
outsl
rorb
mov
dec
clc
into
mov
rcrl
sub
mov
sub
cld
sysenter
dec
ds
mov
and
ret
aaa
cmc
js
ret
dec
pop
push
bound
add
and
outsb
jle
lods
testl
movb
add
xchg
inc
test
inc
push
push
mov
lock
cmp
aad
leave
pop
ljmp
inc
adc
mov
cmp
pop
lods
cwtl
jo
jg
mov
test
xchg
push
add
xlat
sub
and
jnp
mov
add
mov
hlt
sub
xchg
out
lret
ljmp
xchg
outsl
int3
push
cmpsb
sbb
and
lahf
test
push
add
data16
fisttpl
fistpll
jg
rcrl
popf
push
outsb
xchg
sbb
mov
fcmovnbe
nop
push
push
ret
inc
add
inc
in
testb
xchg
outsl
jb
cmp
jnp
pusha
mov
add
and
fsubrl
andl
je
add
jp
inc
arpl
int3
mov
gs
push
xchg
mov
js
cmp
xor
cmp
add
mov
mov
add
mov
movl
add
mov
out
xlat
outsb
sbb
pop
nop
jb
mov
sbb
jle
xchg
mov
jno
add
xor
jbe
addb
xchg
loopnew
in
cmpsl
andb
jnp
fwait
fwait
stos
outsb
sub
and
jb
arpl
inc
aad
jmp
testb
jmp
pusha
dec
push
pop
repnz
jne
sahf
and
sahf
xorl
jae
sbbl
mov
movsb
in
inc
jl
cs
frstor
jg
inc
sbbb
addr16
pop
pop
cli
out
push
imull
jp
iret
dec
lcall
cmpsl
sub
in
push
push
add
test
stos
mov
sti
int
adc
or
jnp
lock
push
mov
jmp
sti
xchg
fadds
xchg
pop
dec
pop
sbb
adc
mov
mov
jb
inc
ljmp
mov
inc
loop
mov
enter
fisubl
xchg
in
gs
add
test
sbb
xlat
in
aad
xchg
mov
add
add
aam
jl
sbb
aad
or
cmp
mov
sub
sbb
std
shrl
xor
js
mov
xchg
mov
adc
testb
push
dec
jnp
sub
andl
lahf
sbb
in
xchg
xlat
xchg
cltd
lods
jae
sub
inc
enter
push
fstpt
andb
dec
fdivs
daa
test
or
mov
xor
adc
cs
test
mov
xchg
sar
push
jl
mov
pop
cmp
sbb
cmp
lds
mov
fucomp
mov
mov
cmp
iret
jo
xchg
test
movsl
mulb
pusha
repz
lods
movsb
stos
jge
add
fsubrs
xchg
inc
push
dec
mov
outsl
add
sbb
out
std
xchg
stc
test
scas
cltd
fsubp
pop
and
cmovb
ja
push
insl
xor
jbe
xor
addb
add
ds
sub
cmp
jg
and
mov
subl
add
in
push
subl
arpl
adc
jne
insl
aad
movb
mov
aas
sbbb
lret
push
stos
insb
pop
insl
scas
jle
cld
sbb
es
and
test
aad
test
bnd
inc
lock
dec
popf
movsl
mov
dec
fildll
mov
pop
xchg
xor
lea
sub
dec
push
popf
movsb
cmp
inc
es
out
mov
pop
in
orl
sbb
cmp
dec
imul
inc
leave
dec
rcr
ud0
fs
mov
dec
xor
mov
xchg
fists
mov
add
pop
xchg
adc
inc
and
in
push
sub
addb
jae
pop
or
jnp
sub
shll
out
aaa
mov
cmc
mov
addb
jns
in
cmp
rolb
das
mov
pop
cmp
clc
bound
xlat
push
and
fbld
mov
add
jmp
ds
repz
fcoms
add
add
add
add
fidivs
xchg
movsl
por
or
ljmp
or
in
pop
shlb
mov
in
orb
adc
or
dec
ds
sbb
dec
adc
je
cmc
xchg
aam
adcb
push
cmp
push
ljmp
dec
scas
imul
js
mov
sarb
xchg
xchg
xchg
cmpb
mov
scas
pop
sbb
or
hlt
xlat
fcoms
push
xchg
cmpsl
cmp
add
jo
xlat
stc
aaa
pop
mov
jg
fisubl
or
push
push
int
push
faddl
gs
popa
aam
test
adc
in
add
mov
ss
pop
mov
les
adc
adc
adc
test
pop
jo
pop
jbe
jne
divl
jle
dec
shlb
outsb
xor
js
lcall
add
mov
mov
mov
push
lret
add
add
lret
adc
fstpt
out
push
pop
ret
mov
adc
lret
xchg
sub
pop
pop
mov
xor
enter
mov
lock
test
das
mov
bound
mov
mov
cmpl
push
mov
inc
mov
mov
repnz
xor
jl
add
adcl
jmp
lock
mov
jnp
fdiv
mov
mov
stc
icebp
mov
cmp
outsl
jl
ret
aam
inc
mov
stc
dec
xchg
imul
xchg
andl
daa
insb
jnp
outsl
xor
pop
dec
jb
and
pop
nop
or
sub
adc
push
cmp
out
mov
je
lock
mov
insb
and
jmp
push
sub
adc
aam
jl
and
sbb
add
add
enter
in
sbb
push
inc
lods
inc
lock
stos
int3
add
add
jns
fwait
es
int
push
push
rclb
pop
and
inc
imul
int3
test
push
pop
mov
call
rorl
clc
mov
stos
rorl
lock
or
sub
sbb
dec
or
js
outsl
mov
js
movl
into
fistps
xor
loope
pop
and
add
cmp
push
jecxz
dec
sub
cmp
mov
jge,pt
and
idivb
mov
movsb
pushf
and
scas
xchg
shl
clc
xor
movsb
clc
jg
ficompl
jo
jae
and
xlat
mov
fsubrp
das
shrl
mov
iret
add
push
push
push
ja
adc
push
stos
lods
mov
jmp
adc
or
sub
sti
lsl
movsl
pop
mov
int
push
ret
xchg
ljmp
xchg
push
bound
add
add
imul
cmc
call
inc
push
popa
pop
dec
xchg
shrb
add
add
push
repz
fs
jae
mov
adc
es
push
mov
out
push
sub
xor
dec
jbe
adc
cmpl
and
pop
ds
ljmp
mov
js
loope
sub
sbb
fldenv
xlat
cmp
push
aad
hlt
add
imul
shrb
insb
and
aaa
xor
in
mov
cmp
mov
push
mov
adc
cli
jbe
xchg
jmp
cmp
cmp
out
cld
inc
sub
in
inc
xchg
jmp
fucomip
push
inc
in
mov
enter
testl
es
xor
adc
mov
xchg
lods
xorl
cmp
pop
dec
insl
aam
les
jl
mov
outsb
add
outsl
movsl
mov
movsl
mov
iret
sub
jae
popa
mov
add
add
dec
pushf
rcl
sbb
scas
loop
cwtl
pop
call
inc
push
cltd
push
xlat
lcall
add
mov
and
mov
cmpsb
pop
scas
ret
es
fists
decb
fiadds
rorl
dec
jo
mov
aam
add
jl
pop
mov
and
js
mov
popf
subb
outsl
cmp
sub
out
fisubs
bound
inc
sub
test
imul
mov
aas
das
mov
cwtl
lock
or
mov
cmpsl
sub
or
sbb
loopne
movsb
or
pop
dec
xor
push
push
cmp
cwtl
xchg
fcmovbe
mov
sbb
test
pusha
neg
pop
jmp
push
and
hlt
test
jns
movsb
dec
rorl
pop
sbb
mov
inc
in
xchg
and
popl
ja
add
mov
out
out
out
into
gs
cld
test
or
add
mov
xchg
repz
cltd
push
cmc
pop
js
pop
popf
testb
inc
ja
pop
dec
jns
fldcw
dec
rol
jle
push
icebp
lds
adc
xor
push
popa
fs
or
in
mov
and
or
fiaddl
and
loop
xor
xlat
scas
mov
inc
imul
push
cld
jg
mov
xor
xor
sub
aaa
add
rorb
das
dec
data16
in
xchg
inc
push
push
inc
cmp
imul
push
dec
imul
sbb
dec
xor
pop
sub
in
hlt
adc
cmc
sub
loopne
cmp
xlat
sbb
fisubrs
lods
jecxz
cmpsl
rsm
add
jo
mov
fstl
pop
add
fs
pop
ficoml
psllq
mov
mov
popa
das
cmpsb
aas
sub
add
loopne
and
je
out
mov
popa
sub
add
cmp
and
or
push
jbe
mov
js
mov
mov
ret
adc
mov
push
dec
mov
fisubrs
lcall
push
in
jno
mov
mov
inc
test
test
loopne
shlb
test
jbe
fistpll
add
ret
mov
push
inc
mov
pushf
loopne
pusha
je
inc
stos
ffreep
cmp
mov
adc
out
test
mov
jns
pop
and
adc
stc
out
sub
jp
mov
pop
jmp
jno
mov
shll
pushf
adc
out
mov
mov
mov
xlat
repnz
mov
fdivs
mov
or
bound
cltd
mov
push
adc
mov
push
pop
inc
mov
fwait
lcall
jae
in
push
mov
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
inc
adc
add
add
adc
pusha
lret
pop
mov
enter
fwait
xchg
out
dec
inc
dec
sarb
mov
or
out
xor
out
or
xor
pop
neg
jns
sbb
js
mov
fstpl
push
sub
jbe
cwtl
dec
inc
or
mov
xlat
fcmovu
xor
test
sub
mov
lea
in
adc
and
adc
sbb
cwtl
es
add
outsb
test
in
movsb
xlat
dec
cmp
mov
or
sub
adcl
mov
daa
aas
rcll
arpl
lods
xor
jp
push
xchg
xor
or
insl
stos
sub
addb
aas
out
dec
cmpsb
sub
adc
push
out
jnp
outsl
mov
and
jno
fwait
jae
mov
es
mov
movsb
cmp
pop
push
dec
inc
jno
lods
add
add
popf
mov
lahf
ret
or
js
hlt
enter
add
mov
dec
and
inc
dec
aas
mov
cmp
scas
xor
mov
xor
mov
orl
pop
out
fidivl
in
ljmp
pop
stc
adc
pop
dec
jae
fs
fisttps
adc
sar
pusha
arpl
mov
and
and
loop
mov
pop
add
sti
mov
add
in
mov
pop
push
add
das
aas
xchg
push
adc
lock
lret
les
adc
lods
loope
xor
pop
sub
inc
xlat
or
sbb
mov
or
or
pop
lahf
xchg
add
or
mov
movsb
in
ljmp
push
mov
in
inc
bound
xchg
imul
lock
add
cld
push
mov
push
in
inc
sub
mov
loopne
in
shll
add
neg
outsl
push
xchg
or
roll
add
imul
xor
dec
mov
mov
fcmovnbe
scas
pop
push
sbb
sub
push
fs
lock
lods
inc
orb
movups
or
icebp
xchg
xor
jns
imul
jle
clc
imul
pop
xor
ret
sti
jb
xchg
cmp
in
mov
dec
or
repnz
test
mov
faddl
mov
push
push
and
ja
sbb
movsl
push
jb
sbb
add
js
cs
sar
lods
or
jge
pusha
pop
repz
sar
aas
or
movsl
ljmp
pop
adc
imul
push
cs
out
std
icebp
xchg
clc
loop
push
fmuls
inc
outsl
push
dec
sahf
xor
mov
cmc
scas
sub
lods
xchg
cmpsl
xor
fisubs
cmpl
push
or
dec
push
or
xor
xor
add
sbb
sub
dec
pop
fbld
aam
add
incl
icebp
inc
das
out
jmp
inc
jle
sbb
jmp
ret
mov
inc
xchg
mov
mov
inc
popa
xor
divb
test
pop
stos
pop
or
sbb
ret
fimuls
inc
inc
outsb
sarl
jge
cmp
or
cmc
nop
sahf
or
cld
mov
cmp
mov
and
jp
negl
cmp
popa
sti
jbe
and
sbb
rorb
pop
into
pop
or
or
fsubs
or
cmp
arpl
jnp
inc
jecxz
inc
stc
and
xchg
loop
lahf
or
push
loopne
stos
xchg
ja
ja
gs
jecxz
clc
inc
push
mov
imul
lds
in
fistl
dec
inc
cld
inc
pop
push
out
xor
idivb
jns
xchg
rolw
add
ds
jae
inc
sbb
xlat
aad
add
pop
sbb
jmp
mov
jns
xor
inc
sti
aas
or
sub
jge
int
pushl
fisttpl
sbb
testb
pop
aam
shrl
add
inc
pop
inc
bound
dec
pop
push
mov
mov
fnstenv
in
imul
ds
jl
aas
stos
cmp
lea
inc
push
aaa
sbb
xchg
mov
mov
jecxz
aam
stos
loop
repz
rcrb
xor
push
cmp
jbe
enter
nop
xchg
shrl
rep
in
dec
ret
mov
xchg
movsb
movsl
cld
dec
mov
fstpl
sub
or
fldenv
out
scas
adc
xor
rcrb
out
inc
pop
inc
stos
loope
out
outsb
adc
dec
cmpsb
sahf
jmp
std
mov
cmp
movsb
push
test
daa
addr16
cwtl
fs
std
or
aam
insb
insl
xorl
dec
ret
push
adcb
or
adc
cmc
push
sub
je
cmp
add
add
lcall
jnp
mov
add
into
ret
mov
jg
hlt
cvtdq2ps
shrb
xlat
lds
scas
cwtl
mov
ret
xor
mov
add
test
outsl
test
cmc
xor
addb
mov
mov
inc
cli
int3
fldcw
mov
cld
lds
jge
cmp
mov
fsubl
cmp
adc
xor
inc
or
mov
adc
jge
mov
xlat
and
mov
testl
inc
and
pop
imul
mov
mov
fs
mulb
inc
inc
orl
data16
leave
andb
aam
mov
jbe
jle
mov
xchg
jns
dec
and
mov
fldcw
xor
and
cvtpi2ps
and
imul
dec
shrl
push
test
add
inc
ret
retw
dec
add
add
xchg
ja
push
jg
leave
or
iret
lahf
jne
xlat
add
add
ret
notl
sbbb
arpl
js
sbb
jb
shlb
pop
push
push
jno
mov
sub
lock
dec
xor
icebp
jnp
xchg
add
xor
mov
ret
jbe
jle
add
mov
inc
aad
insl
fstps
jle
mov
xor
sub
inc
mov
xchg
sbb
mov
mov
outsl
cmp
stos
shlb
pop
jb
lods
jnp
aas
in
nop
xlat
push
stos
sbb
loope
sbb
pop
ljmp
jl
and
lret
push
mov
push
push
push
sbbl
into
add
or
push
lahf
adc
mov
into
dec
scas
push
push
pop
icebp
enter
adc
sbb
out
cmp
xchg
sar
div
leave
and
lahf
loopne
and
sub
pxor
sarb
inc
or
test
inc
das
fistpl
sahf
xor
roll
add
add
int
out
out
imul
nop
xchg
movsb
sarl
push
sbb
fadds
add
adc
filds
cld
outsb
ret
adc
sub
cltd
mov
adc
pushf
shrb
jb
pop
imul
inc
fmulp
sub
xchg
sbbl
adc
push
dec
xlat
sub
scas
pop
cmpsb
clc
mov
imul
shrl
and
add
mov
inc
cmp
cmp
push
popf
or
sbb
jns
fnstenv
adc
pop
loopne
push
mov
jb
lods
dec
mov
addr16
or
sbb
push
fadd
aas
pop
cs
sti
out
stos
add
shlb
popf
mov
mov
test
ds
scas
push
lcall
das
sub
cmpsl
inc
pushf
shll
push
pop
fists
ret
fdiv
jno
fnstcw
pop
lahf
int
cs
push
jne
sub
xchg
fwait
lea
sub
pop
pop
jnp
int
mov
mov
loop
loop
pop
sahf
icebp
dec
add
add
psubusw
push
in
sub
xchg
jmp
add
add
testb
xchg
jecxz
fistl
add
fisubrl
rcll
int3
fdivs
jmp
insb
aas
orb
mov
mov
mov
leave
icebp
call
mov
or
pusha
mov
inc
cltd
outsl
mov
test
cmp
mov
xchg
push
mov
or
ds
insb
jg
dec
bound
mov
rcrb
addl
lods
and
dec
cltd
in
mov
adc
xorb
push
or
inc
cmp
popf
stos
or
push
jecxz
mov
fs
or
cmp
movsl
dec
jl
movsl
jge
popa
push
inc
cmc
leave
int
cwtl
pop
xor
js
push
clc
out
sub
mov
lcall
xor
outsl
xchg
in
loopne
sbb
sbb
mov
xor
cltd
sub
or
into
inc
and
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
imul
fiaddl
add
loopne
test
repnz
roll
pop
jae
sahf
jecxz
xor
xor
mov
fs
icebp
shlb
xchg
pop
xor
lods
aaa
push
idiv
das
xchg
or
push
jmp
adc
mov
mov
popa
fstps
jg
mov
daa
popa
jl
hlt
cld
popa
fstpl
ljmp
adc
daa
cmp
popa
pop
sbb
out
jmp
mov
notl
in
mov
sti
leave
mov
rcrb
pop
inc
and
mov
push
orb
loope
jle
out
scas
inc
pop
inc
jmp
cld
ret
sbb
pushf
pop
sbb
cwtl
fidivs
in
std
popf
shrb
jecxz
scas
fs
mov
jmp
lret
pop
mov
xchg
insb
out
cwtl
sahf
xchg
adc
sbb
ljmp
orb
stc
in
adc
sub
fcoml
pop
dec
jle
jg
std
fstpt
pop
mov
add
and
or
push
mov
loopne
fnsave
sbbb
es
pop
out
or
mov
mov
push
jg
sbb
push
sbb
stc
bound
cs
dec
fstps
mov
out
jbe
jno
add
test
mov
sub
out
jae
xor
test
in
jo
test
fwait
sub
pand
fisubl
leave
push
cmp
pop
inc
xor
mov
jg
cmp
ljmp
mull
push
adc
push
lcall
sbb
jecxz
loopne
add
ret
mov
int
mov
mov
movsb
push
jb
outsb
mov
inc
inc
xchg
push
xor
out
lcall
lahf
std
sbbb
pop
pause
inc
aam
pop
and
roll
xorl
mov
add
out
out
je
sahf
xor
add
add
mov
sti
idiv
lods
pop
sbb
pop
mov
add
das
cmp
pop
in
pushf
adc
add
mov
pop
cmp
pop
push
iret
out
ret
cmp
dec
js
daa
dec
xor
test
push
fcoml
dec
dec
or
jmp
divb
adc
inc
adc
push
sbb
aad
mov
aad
fimuls
out
xchg
jnp
fldenv
sti
fcmovb
pusha
aaa
jp
movsl
sar
in
punpckldq
cli
pop
mov
iret
push
lods
and
stos
push
fsub
xor
fsubl
inc
fildll
xorb
and
cmp
mov
adc
hlt
rcrl
xchg
test
icebp
mov
mov
adc
xor
push
shrb
out
hlt
pop
in
test
sub
pop
fsubs
stos
ret
dec
mov
cmc
inc
test
dec
sbb
or
mov
lods
clc
cwtl
lods
popf
mov
cmp
adc
fists
repz
jecxz
add
add
sbb
jmp
scas
inc
call
fldl
add
mov
loop
hlt
in
mov
mov
inc
add
dec
xchg
mov
enter
cmp
repz
sub
dec
pop
sub
popa
inc
jle
sbb
mov
adc
fbstp
adc
lds
vandnps
sub
fwait
ja
cmp
ljmp
fwait
cmp
mov
or
ret
xlat
popa
jb
out
xchg
mov
sbb
push
sbb
lea
pushf
mov
mov
add
mov
sbb
ljmp
or
xor
mov
out
subb
xchg
hlt
mov
push
push
iret
insl
push
push
pop
lret
clc
outsb
sub
mov
sub
fdivrl
ss
rcr
cmp
jge
test
adc
sub
jae
fs
inc
xchg
cli
ret
add
push
out
faddl
mov
add
add
add
mov
mov
adc
jmp
or
movsl
ds
out
add
pop
cld
push
push
adc
div
push
mov
inc
mov
push
inc
leave
cli
cld
inc
xlat
mov
cltd
jecxz
jbe
jae
or
and
cwtl
add
mov
mov
jmp
cs
mov
mov
add
cmp
int
mov
movsb
aaa
mov
push
mov
adc
mov
push
pusha
in
repnz
lahf
fdivl
iret
pop
xchg
mov
lret
xor
xlat
jge
sbb
daa
mov
outsb
repnz
aas
mov
dec
arpl
inc
dec
loope
stos
jnp
mov
fs
fstl
aas
push
jnp
lock
jno
daa
xor
out
inc
adc
and
icebp
add
enter
mov
mov
adc
push
cmpsl
out
jge
add
mov
ret
pushaw
adc
roll
add
add
mov
lcall
fisttps
or
or
add
add
mov
push
pop
aad
adc
or
mov
jmp
xor
jo
ljmp
push
fs
push
or
mov
jae
sub
adc
test
scas
loop
call
out
push
insl
arpl
dec
or
out
lret
cmp
gs
les
fisubrs
and
mov
lcall
aaa
sbb
xor
ret
call
adc
sub
scas
jl
les
movsb
jmp
ret
fisttps
dec
pop
mov
cwtl
or
xchg
dec
shlb
sbb
xchg
or
lea
fcompl
lret
sbb
and
or
jb
inc
gs
pop
mov
rolb
fsts
lock
imul
imul
push
stos
scas
out
push
mov
push
xchg
add
add
mov
jns
xchg
xchg
mov
xlat
pop
rorb
loope
add
mov
jbe
scas
jno
ss
pop
cmp
insl
movsb
stos
dec
mov
out
out
sub
push
push
push
bound
push
push
je
and
mov
pop
daa
movsl
jne
cmp
mov
in
rcll
mov
mov
pop
cmp
push
push
leave
inc
adc
leave
mov
shl
orb
and
pop
add
loope
outsb
jp
xor
in
pop
inc
in
rorl
fisubl
bound
scas
cli
jge
lods
and
out
int
iret
fnstcw
adc
lret
shrb
mov
imul
rol
addr16
scas
jns
adc
setne
and
fldcw
fcmovnu
xchg
add
cmp
pushw
ret
jle
add
fcmovnu
rol
push
loop
sarb
js
adc
jmp
pop
test
fmul
lret
test
in
fwait
test
iret
mov
cwtl
adc
add
add
fadd
fsubp
jnp
or
cld
lret
stos
mov
add
shrb
sub
lret
icebp
mov
adc
call
fs
leave
xor
push
mov
shlb
sahf
push
fmull
mov
lcall
dec
mov
sub
push
lret
push
xchg
jecxz
stos
out
add
adc
add
std
sarl
pop
test
jno
mov
cmp
adc
xchg
pop
hlt
and
xchg
addl
popa
cmp
sub
rcll
mov
xor
inc
jbe
js
or
mov
mov
adc
movl
mov
aam
dec
push
xchg
or
mov
stos
lea
push
ss
insl
adc
gs
xor
or
popa
daa
test
pop
mov
jno
enter
out
aam
or
mov
insl
mov
add
sub
cld
cli
jle
dec
nop
xor
das
test
sbb
add
add
sub
mov
jmp
cwtl
mov
jo
pop
xor
in
pusha
das
out
adc
mov
sbb
mov
lahf
pop
dec
lahf
xor
mov
push
fildll
mov
fbstp
scas
inc
stc
out
aad
mov
xchg
imul
cmp
inc
imul
mov
int3
dec
and
xor
idivl
sub
movsl
add
andl
mov
xor
imul
jmp
icebp
out
and
loopne
push
inc
jg
rcll
loope
repnz
cltd
mov
adc
inc
dec
das
inc
andl
sbb
test
rcrl
mov
fwait
std
push
mov
sub
fiadds
xchg
mov
in
push
ljmp
loopne
xlat
sbb
aam
push
push
les
jne
into
cmpl
add
lea
pop
jbe
ja
sti
aaa
out
ja
push
add
add
sub
jle
shlb
add
jl
xor
adc
push
cmp
sub
popf
out
insl
xor
shr
aad
pop
js
mov
cmc
and
xchg
scas
cmp
sub
stc
adc
push
dec
aad
repnz
rcrl
lock
jbe
inc
inc
inc
mov
sbbl
cmc
test
mov
pop
sbb
push
jo
shl
std
pop
or
in
std
xchg
push
adc
loopne
push
sub
push
mov
lret
call
add
scas
jl
cwtl
mov
nop
push
xor
xor
js
or
pop
mov
outsl
xchg
lcall
mov
adc
icebp
in
jbe
stos
and
mov
xchg
sti
push
push
insb
rorb
xor
test
dec
lret
lret
pop
sub
mov
lahf
dec
add
lcall
add
add
into
arpl
pop
xchg
aaa
pushf
orb
and
add
add
xchg
sbb
add
mov
sahf
inc
cmp
push
mov
rolb
addr16
repz
cli
daa
shll
lahf
xchg
jnp
sbb
lods
xor
imul
mov
mul
push
mov
fmull
push
xchg
lods
call
or
pop
stc
hlt
test
cmc
adc
sbb
mov
mov
fisubl
in
lret
ror
pushf
add
xor
and
or
jo
add
gs
dec
push
daa
dec
mov
loopne
add
pand
stc
inc
iret
inc
lret
cmc
aaa
and
leave
popa
sub
jmp
jno
jo
sahf
mov
outsl
mov
test
mov
jecxz
pushf
mov
mov
lds
sub
pop
shrb
sub
sbbl
ss
gs
xchg
sbb
lock
or
mov
push
jnp
filds
cmp
leave
mov
cltd
cmc
adcb
fcos
pop
mov
dec
daa
out
add
adc
fs
mov
leave
jecxz
daa
inc
jo
shrb
inc
mov
pushf
xor
adcl
stc
std
mov
push
xor
bound
push
stos
sub
out
or
cmp
pop
imul
in
ljmp
fidivs
pop
cltd
mov
lcall
call
pop
mov
mov
sbb
jecxz
pop
sub
mov
fidivrl
test
loope
divb
call
in
clc
pop
pop
sbb
push
adc
call
mov
rcrl
sub
lds
inc
mov
push
imul
mov
sbb
fildll
cltd
pop
mov
push
aad
lahf
or
jo
popa
push
nop
adc
icebp
mov
mov
or
and
xchg
cmpsb
dec
lret
jle
into
jns
bound
and
add
repz
lock
jg
in
and
sbb
sub
add
add
rorl
add
ja
push
jecxz
ja
xor
xchg
push
jmp
shr
mov
iret
jns
sub
pop
subb
dec
inc
int
rcr
mov
jnp
test
mov
sahf
mov
imul
mov
scas
mov
pusha
in
inc
jo
sbb
rorl
mov
pop
cmp
loope
mov
mov
fldt
dec
lock
lret
sbb
push
or
mov
cmp
xchg
xchg
jecxz
clc
cmp
push
in
ds
test
mov
mov
pop
call
jg
adcl
dec
das
or
mov
push
dec
test
fnstenv
xchg
dec
ds
arpl
loope
cmp
dec
shll
mov
inc
push
pop
scas
jns
xchg
adc
and
cmp
pushf
popf
mov
test
add
add
pop
xlat
fistpl
arpl
xor
add
add
jle
xchg
shrb
add
mov
mov
lock
stos
mov
push
mov
xor
jle
gs
mov
dec
fcmovnbe
mov
mov
add
call
lcall
jmp
mov
or
movsb
push
inc
in
fs
inc
add
ja
push
fistl
cmpsb
int
mov
cli
or
cmc
and
mov
out
sahf
sbb
xor
mov
xchg
shrb
scas
loope
jbe
jmp
loope
xlat
mov
mov
test
aas
xor
or
dec
adc
stc
push
sub
push
mov
into
pop
std
mov
mov
les
cld
mov
sarb
push
addr16
clc
ret
shlb
or
jge
mov
cmp
les
add
add
mov
dec
js
stc
mov
dec
int
inc
sbb
add
add
jbe
mov
xor
mov
mov
bound
add
roll
cmp
jp
ffree
pop
mov
cmp
jmp
nop
test
inc
insl
les
dec
lahf
cld
nop
sub
jo
dec
cmp
push
aaa
add
lahf
leave
in
inc
mov
sti
adc
aaa
add
pop
mov
dec
mov
dec
stos
lcall
dec
dec
rcr
test
xchg
push
jne
pop
push
gs
and
mov
add
movsb
aad
sarb
and
jno
cld
and
popa
into
push
or
stos
js
push
ret
shll
push
mov
xor
pop
adc
cmp
jmp
movsl
jno
xor
dec
aas
lock
arpl
pusha
int3
jbe
or
mov
addb
push
test
inc
aad
mov
mov
fistps
xchg
cmpsl
dec
or
cld
mov
jp
movsb
pop
add
add
insl
repz
fwait
jns
jns
xor
jne
ljmp
inc
hlt
push
int3
mov
sub
rorb
inc
mov
xchg
xor
je
in
daa
fwait
xlat
mov
xor
lods
xchg
inc
jl
in
js
int3
and
lods
pop
or
add
pop
and
mov
push
shl
mov
jl
jno
jns
popa
mov
lea
sub
jo
adc
cmp
jno
mov
andb
sbb
negb
jo
cmp
xchg
jle
push
jmp
dec
xchg
pop
or
and
mov
loopne
add
dec
push
jle
cld
dec
fcmovb
mov
add
push
repz
repnz
inc
mov
jno
data16
and
sub
sub
lock
in
insl
addr16
ss
mov
mov
outsl
sbb
cltd
mov
out
lea
jb
test
jp
daa
outsl
int
xor
pop
shll
mov
in
add
add
cmp
jnp
adc
jne
andl
add
add
iret
pop
lea
xor
fsubrs
mov
movsb
insl
fwait
clc
xchg
mov
dec
sti
cmp
xor
adc
inc
push
leave
jae
fmuls
clc
mov
addr16
lock
adc
jns
loope
mov
lods
sub
xchg
jg
jg
inc
lret
fstpl
test
stos
sbb
mov
aam
sub
mov
pop
push
cld
out
sbb
daa
pop
mov
add
out
je
push
mov
jp
xchg
mov
or
subl
repnz
mov
sub
cld
shr
pop
decb
push
mov
jp
rcrl
stc
test
mov
shrl
cmc
push
call
in
and
mov
mov
lret
add
rol
test
push
aas
stos
jae
scas
imulb
out
mov
cmp
js
pop
mov
push
xchg
fcompl
add
insb
in
lcall
lea
xor
negl
add
out
lods
xor
aas
xlat
fistl
das
inc
and
lret
add
add
cmp
fidivrs
and
jae
ret
push
xchg
movb
ds
stc
call
lret
pop
sub
scas
mov
mov
sahf
and
nop
mov
mov
ss
fistpll
adcl
rcrb
or
xchg
inc
fwait
xor
fsubrs
int
push
test
sub
lds
sbb
dec
lds
cwtl
imul
jb
pop
in
add
nop
jge
scas
fistpll
int
push
mov
sub
insl
cmp
xor
mov
inc
sbb
xchg
add
cmp
js
clc
and
push
and
mov
cmpsl
ret
pop
roll
jne
int3
daa
dec
mov
pop
mov
shl
or
test
fsub
enter
mov
stc
push
ret
mov
inc
dec
popf
inc
outsb
dec
inc
sub
mov
fstp
rcl
add
aas
pop
and
xlat
rolb
es
ret
clc
mov
or
add
jb
scas
decb
fisttps
lock
dec
in
add
add
fdivrs
mov
cli
lret
clc
jbe
cmp
add
jg
ret
xchg
jae
or
int3
adc
mov
roll
lock
sub
jg
mov
stos
push
jns
pop
push
pop
clc
popa
push
pusha
jno
fisttps
enter
sub
rorb
mov
adc
fadds
frstor
popl
jo
popa
outsb
and
dec
sbb
cs
out
mov
cmp
mov
add
push
andb
sahf
pusha
das
dec
fnstenv
mov
imul
ficoml
xchg
push
testl
out
xor
insl
aad
cli
ret
push
in
test
adc
out
test
dec
push
or
xlat
or
clc
lea
lods
inc
ret
dec
roll
mov
jns
roll
rcrb
ret
leave
add
add
xlat
mov
xchg
pop
je
mov
add
mov
test
aaa
scas
aad
xchg
add
lock
jnp
sbb
testb
adc
mov
mov
xlat
rcrb
ja
scas
scas
movsl
mov
imul
jb
cmpsl
and
ja
push
cwtl
inc
adc
xchg
movsb
pop
out
dec
add
shlb
in
inc
pop
addr16
lret
aaa
popa
fistpl
cmp
pop
push
scas
lds
push
test
jmp
inc
inc
aas
lret
xor
mov
int
popf
xor
pop
xchg
adc
mov
loope
lods
fstpl
jbe
rolb
or
add
out
mov
aad
adc
add
mov
xchg
or
inc
sub
cld
shlb
cltd
test
mov
mov
cmpsb
pop
cltd
lret
dec
enter
stos
dec
pop
jo
adc
xor
scas
lret
clc
jmp
lret
mov
push
push
popf
add
add
mov
aas
mov
cmpsl
pop
aam
out
add
add
and
mov
adc
shll
sub
aad
dec
fisubl
xchg
outsb
ja
xor
ljmp
jl
loopne
out
pushf
insl
data16
loope
inc
jge
movsl
inc
mov
add
popa
gs
repnz
sub
push
shlb
lods
call
fimuls
push
or
xchg
jecxz
cltd
movsb
add
fwait
into
mov
loop
es
das
mov
leave
inc
lret
dec
decl
shll
mov
and
xor
pop
decb
scas
inc
imul
inc
and
inc
lcall
lods
cmp
sbb
push
or
xchg
push
or
dec
jae
cmp
pop
dec
enter
pop
mov
xor
pop
xlat
fcomps
shll
loopne
jge
inc
fs
icebp
or
icebp
cwtl
or
std
dec
mov
push
mov
mov
les
push
jp
mov
add
loop
fadd
sti
mov
imul
add
xlat
pop
sub
mov
add
fs
orps
ret
popa
into
pop
push
sub
sub
cltd
mov
pop
lret
mov
jle
rorb
push
out
cli
mov
xor
arpl
les
push
jae
iret
test
dec
push
mov
pop
adc
push
push
or
dec
insl
and
in
mov
nop
repnz
jle
mov
cmp
jle
and
xchg
jb
xor
jne
and
jnp
and
pushl
cs
mov
mov
sbb
mov
aaa
mov
ss
mov
das
and
cmpsl
sub
lret
mov
dec
cmpb
test
cmp
lret
aas
jnp
jg
cmpsb
aas
stos
sti
stos
std
add
mov
sub
cmpsb
mov
repz
mov
jns
outsb
add
xor
sub
mov
popf
sub
add
add
into
adc
neg
jge
xchg
jns
sbb
je
pop
icebp
add
add
fs
int
jbe
mov
fists
or
sub
divl
or
nop
testl
mov
ficomps
or
push
or
mull
dec
xchg
mov
adc
fs
xor
icebp
scas
push
and
movsl
lret
dec
cltd
dec
lret
scas
out
stos
mov
mov
loop
imul
in
je
jns
sub
pop
fcoms
jmp
mov
mov
cmp
push
cmpsl
jb
aaa
ja
js
push
jne
cmpsb
jg
js
mov
add
cmp
mov
or
sbbl
inc
out
js
jnp
cmp
or
xchg
xchg
ljmp
xchg
mov
dec
dec
das
mov
cmp
enter
into
loop
test
lahf
cmc
ss
int3
in
imull
add
add
dec
sub
sub
fidivl
and
arpl
add
add
leave
sub
mov
insl
jp
jg
or
cs
fsts
pushf
int3
outsl
pop
out
mov
cld
jb
aas
sub
xor
ret
stos
mov
jp
and
sahf
shrl
xchg
fbstp
xchg
xor
loopne
add
adc
mov
imul
cmc
jbe
xchg
pop
test
cld
subl
inc
add
notb
pop
and
dec
mov
dec
int
jmp
adc
out
xor
jae
clc
stos
cs
dec
cmp
cmpsb
int
lea
bound
sbb
sub
sti
fsubl
pop
out
jbe
dec
jae
jmp
pop
mov
loope
test
loope
jne
into
push
int
fstps
inc
insb
pop
mov
mov
sub
sti
leave
dec
loopne
data16
pop
lods
mov
xchg
mov
adc
jl
fistpl
sahf
push
les
add
ret
ja
and
aaa
divl
mov
push
add
add
cltd
push
rolb
fucomip
cltd
nop
rcl
ret
pushf
fmul
loop
orl
mov
push
dec
imul
fstl
test
mov
sub
cmovnp
pop
iret
jecxz
lock
ret
mov
jo
aad
inc
call
lock
pushf
lret
lret
pop
stos
and
sub
cmp
xorl
mov
call
pop
js
cs
idivb
jl
shll
bound
call
je
insl
orb
fisubl
mov
out
push
mov
arpl
movsl
mov
pop
and
fcoml
hlt
dec
sbb
fisubs
cmp
scas
shlb
sub
ret
and
mov
mov
inc
testl
mov
subl
add
jno
jge
mov
add
mov
cmc
mov
or
sbbl
add
add
pushf
jnp
in
fnstsw
es
mov
stos
dec
sbb
jmp
test
sbb
xchg
pop
icebp
scas
rcll
pusha
mov
xchg
or
and
push
jge
pop
iret
or
jbe
call
sub
inc
or
xor
fistps
mov
push
repnz
idivl
frstor
dec
jb
sarb
xchg
mov
xchg
push
add
les
mov
aam
ficompl
xchg
push
xchg
sbb
or
nop
jecxz,pt
imul
or
out
jo
sub
enter
cmpsl
sbb
arpl
jno
and
push
inc
je
jae
test
mov
lcall
cs
jl
lret
xorl
lea
fildl
ljmp
mov
mov
dec
add
sub
mov
stc
lea
in
bound
stos
iret
sahf
adc
add
jle
jne
pusha
popf
pop
adcl
add
add
sbb
cli
repnz
add
dec
adc
push
and
mov
notb
test
push
cmovp
fucomp
sub
stos
xchg
loopne
cwtl
stc
notb
or
pop
loope
mov
in
data16
test
out
pop
jp
daa
test
adc
mov
cmp
sub
xor
jge
ret
sbb
mov
mov
sbb
insl
mov
fwait
lcall
in
pusha
ljmp
inc
mov
insl
shrb
cs
aad
sbb
pop
jbe
add
adc
mov
mov
dec
popl
ljmp
push
cmpsb
push
call
mov
cmp
test
mov
sbb
adc
jp
test
cmc
inc
or
push
adc
int3
push
gs
mov
jae
add
cmc
pop
add
add
imulb
mul
xor
lret
add
add
arpl
pop
pusha
cwtl
xchg
add
lods
insl
mov
dec
sub
ds
pop
mov
fisubrs
and
mov
cmp
add
or
stos
or
and
mov
daa
pop
cmpsl
icebp
sub
flds
iret
xchg
xor
rorb
call
jl
popa
add
insl
mov
add
not
arpl
or
jl
in
fisttpll
mov
int
push
jl
lret
out
cmp
in
sub
aad
inc
adc
and
fcmovnbe
inc
cmp
leave
fldl
pushf
push
push
xchg
incb
xor
push
or
call
cmp
scas
aad
loop
add
shlb
in
in
add
sub
js
imul
in
and
aaa
mov
jo
js
mov
add
ret
add
xor
jb
jae
xorl
add
add
in
sub
jl
out
dec
mov
and
mov
aam
add
pmaxub
xchg
mov
insl
dec
xchg
xchg
lahf
outsl
adc
mov
jp
mov
ja
inc
scas
mov
cmc
in
out
outsl
stc
sti
mov
adc
pop
and
xchg
ret
cmp
or
int
sbb
aaa
test
xchg
and
hlt
jl
aas
stos
jp
ds
or
add
out
inc
xchg
lcall
push
cmp
movsb
sub
es
mov
hlt
cmp
add
add
or
adc
cmpl
dec
lahf
icebp
adc
push
pop
inc
push
les
xchg
fidivl
dec
in
adcb
aaa
add
sub
lret
aad
int3
rcrb
mov
rcrl
adc
pop
repnz
xchg
add
add
ds
in
idivl
js
mov
xor
testb
add
add
js
pushf
les
sbb
sbb
cmp
sbb
add
aas
xor
jmp
gs
xor
mov
fmuls
mov
je
push
push
sbb
test
into
in
mov
adc
pop
adc
mov
pop
scas
mov
sbb
bound
jge
jp
mov
mov
shl
dec
inc
outsb
imul
xlat
xchg
mov
pop
es
lea
scas
mov
adc
jg
test
enter
mov
and
andl
xchg
cltd
pop
loop
and
js
clc
pop
mov
pop
lods
sbbl
cs
cmp
fsubr
mov
mov
sbb
push
pusha
cli
push
int3
xor
sbb
and
lea
fists
xor
pop
xlat
fldl
pop
into
jmp
push
inc
sub
pop
pop
sub
pop
add
add
jecxz
inc
cli
aas
into
lret
pop
insl
and
xchg
add
add
loopne
sub
mov
pusha
pop
fdivl
fstpl
repz
fs
fmuls
test
xchg
scas
data16
into
dec
xor
mov
andl
add
pop
push
xchg
mov
out
lahf
sub
lea
adc
pop
icebp
jp
pop
repz
mov
pop
xchg
pop
jne
cmpsb
mov
jle
dec
jb
insb
call
call
cmp
fistpll
cld
xchg
sbbl
aam
rcll
clc
rcrb
inc
xor
sub
sbb
inc
xchg
add
and
rcrl
jle,pn
js
push
ret
lret
jmp
imul
and
push
xor
sahf
cs
mov
ficomps
cmpsb
scas
outsl
push
sbb
mov
and
lods
xor
std
push
sbb
xchg
pop
jge
push
lea
xor
add
add
lcall
push
test
orl
jg
sti
pop
fwait
mov
add
test
enter
enter
mov
stos
sub
bound
les
movsb
or
fcmove
xorl
adc
movsb
mov
jbe
push
xor
pushf
adc
fs
xor
push
cltd
add
cmp
in
cmp
dec
inc
stos
insl
ss
insb
mov
mov
push
mov
adc
or
cmp
ret
jmp
popa
inc
mov
or
add
add
add
pop
adc
lock
and
test
cmp
testl
jl
pusha
mov
aad
call
fwait
mov
lds
lods
out
push
or
dec
bound
mov
arpl
popf
push
daa
iret
int3
js
adc
mov
dec
gs
insb
popa
sbb
adc
mov
adc
stc
pop
add
add
jae
cltd
dec
mov
jno
mov
mov
add
add
push
inc
mov
jmp
stc
jne
nop
cld
mov
popf
cs
push
cmp
mov
inc
sbb
in
mov
in
add
push
dec
sarl
sub
inc
mov
or
lcall
int
xor
pop
jno
add
dec
mov
sbb
lock
xlat
inc
cmp
add
sbb
add
lds
and
iret
push
and
pop
mov
leave
inc
sbb
inc
enter
xchg
or
mov
jnp
aaa
mov
mov
mov
enter
pop
xor
mov
cmpl
dec
push
aam
dec
mov
dec
clc
mov
into
xchg
sbbb
sbb
notb
sub
movsl
fistps
mov
xor
or
adc
push
addr16
dec
and
repnz
movsl
outsb
iret
mov
xor
loope
pop
inc
or
adc
jns
cmc
in
mov
push
pop
or
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
fstpl
push
xchg
cld
add
add
cs
sub
cld
adc
mov
ja
arpl
test
int
mov
cmp
out
sub
aad
stos
xor
std
div
nop
movsl
push
and
lea
mov
push
dec
mov
jge
mov
es
adc
enter
data16
pop
xchg
in
stos
insl
jg
loop
xchg
sub
adc
xor
test
sbb
lret
out
sbb
mov
cmp
ss
and
pop
pop
or
mov
stc
in
in
je
lds
pop
in
ljmp
mov
sbb
loopne
aad
add
test
or
fadds
test
adc
sbb
js
fisubs
cmp
jmp
loopne
push
out
adc
pop
jbe
pop
mov
add
xor
dec
or
add
pop
mov
sahf
sarl
add
jno
test
jg
push
pop
push
mov
lcall
add
xorb
sbb
fmuls
dec
pop
mov
hlt
dec
push
xor
fcmove
sbb
inc
leave
push
fdivl
aaa
xchg
fisubrl
ljmp
pushf
xchg
and
mov
dec
aad
xchg
xchg
xchg
ss
mov
xchg
rcl
adc
lods
mov
cld
add
adc
pop
cmpsl
out
adc
sub
loope
out
cltd
bound
into
sbb
mov
jmp
int3
fsubrl
test
cmp
int
mov
push
mov
iret
test
xor
push
iret
xchg
inc
subb
mov
push
mov
sub
cs
sti
nop
xchg
iret
stos
adc
addr16
mov
jecxz
sahf
jne
adc
cmp
sbb
or
mov
sub
loope
in
cmp
test
sbb
jns
inc
dec
xor
mov
or
jns
pop
mov
add
add
movsb
push
in
cmc
jne
sbb
js
pop
push
sub
incb
add
dec
js
mov
dec
jmp
lret
adc
xchg
mov
bound
mov
push
push
pop
stos
ljmp
push
imul
lock
push
lret
mov
jne
jne
shl
dec
movsb
loop
pop
std
pop
fldt
adc
loopne
loope
fwait
test
mov
movsb
scas
call
adc
mov
dec
sbb
stos
or
push
dec
int
xor
aad
jns
push
enter
fst
ret
and
cmpsb
dec
jnp
cltd
xor
fldl
daa
pop
inc
imul
mov
mov
dec
mov
dec
int3
push
nop
addb
mov
mov
imul
add
out
movsb
inc
push
inc
std
xor
jbe
inc
add
pop
jb
cs
insl
test
into
push
test
lret
mov
cltd
push
imul
add
sbb
shlb
aas
out
int3
mov
imul
incl
add
push
jbe
pop
mov
jo
lds
loop
or
lret
mov
out
inc
hlt
and
repz
mov
and
sbb
and
in
add
push
add
js
test
vhsubpd
and
sub
orb
and
add
cld
mov
scas
adc
jp
cmp
int3
cli
sbbb
jnp
loope,pt
popf
mov
pop
sub
jo
das
inc
jp
cmp
push
xor
scas
dec
add
fiaddl
or
ret
add
inc
lret
scas
push
in
dec
xchg
sub
adc
dec
pop
idivb
mov
inc
in
add
cmp
in
fabs
ljmp
jmp
movsb
push
mov
mov
pop
cmp
leave
mov
outsb
xchg
data16
mov
adc
or
mov
push
cmc
test
leave
add
sub
in
add
or
mov
and
shrl
test
add
add
xchg
or
cmp
sub
sbb
dec
jae
jae
out
pop
stos
jae
lret
clc
daa
subb
repnz
add
cmp
stos
loope
jno
divb
xor
ja
clc
lock
and
mov
arpl
push
pop
cmpsb
add
cmpsb
testl
xor
or
data16
sub
lea
jnp
inc
xchg
jo
shl
mov
or
mov
bnd
push
daa
lods
mov
jge
cmpl
int3
dec
jne
mov
inc
lods
pop
shlb
mov
push
inc
add
cmpb
jge
push
aad
jmp
add
out
pop
rcl
test
sub
pop
js
adc
outsl
xor
fnstsw
and
mov
insl
dec
sub
stos
aad
shll
mov
jl
mov
scas
jg
add
add
ret
bnd
cmc
inc
stos
repz
cmc
sbb
add
add
adc
sub
orl
out
lea
jo
or
sub
push
mov
sub
jnp
decl
sub
out
mov
cmpsb
lock
stos
push
and
push
lret
sub
xchg
out
adcb
sub
lods
jae
jmp
dec
movb
mull
xchg
notl
mov
out
and
sbbl
movsl
es
add
frstor
scas
push
jmp
ljmp
or
cmp
jno
or
nop
add
jb
fdivl
mov
shrb
gs
ss
lret
add
lea
and
shr
mov
dec
cmp
mov
mov
mov
mov
push
rcrl
pop
pop
pop
mov
scas
adc
mov
shr
adc
sbb
ret
lcall
adc
xchg
mov
add
add
add
std
aaa
mov
shll
das
mov
add
add
imul
and
cmp
dec
sub
jno
mov
adc
jl
jl
insl
addr16
jecxz
mov
cmp
lret
cmp
adcl
and
inc
and
movsb
push
mov
cmp
push
orl
nop
xchg
sbb
mov
fldt
xchg
or
sub
push
push
dec
xlat
clc
iret
and
imul
subl
loop
mov
mov
push
lahf
mov
and
push
movsl
and
jp,pt
das
cmovbe
adc
mov
test
mov
pusha
outsl
mov
je
jmp
enter
fsubrl
sahf
xchg
mov
pop
dec
cld
add
sub
mov
lods
adc
sub
pop
test
and
shll
lea
cmp
pop
je
add
insl
aam
mov
scas
add
loop
adc
add
add
loope
bound
sbb
stos
xchg
pushf
out
mov
mov
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
mov
decb
jmp
shll
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
