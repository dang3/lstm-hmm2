push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
stos
sbb
sbb
and
sbb
mov
mov
cmp
cs
push
mov
or
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
loope
gs
fmuls
push
test
add
les
inc
xchg
repz
or
adc
mov
cmp
xchg
jo
mov
push
pop
xchg
pop
sti
mov
mov
and
fxch
and
jmp
sbb
addl
test
xchg
addr16
mov
mov
mov
lcall
sbb
lahf
mov
fildll
sub
fnstenv
shll
mov
push
mov
imul
adc
pop
inc
pushf
and
xor
cmp
sarb
xchg
popa
fwait
jmp
mov
push
es
xchg
xchg
test
cmpl
icebp
test
jge
mov
lods
testb
jbe
enter
test
insl
add
negl
iret
and
enter
sbb
adc
add
xor
arpl
inc
in
xor
fistps
push
cmp
jmp
sub
mov
in
pop
sbb
xchg
xchg
mov
push
xchg
cld
add
jb
cld
xchg
fnstenv
aaa
lret
xchg
push
and
jae
enter
mov
push
jmp
and
or
inc
adc
lret
sbb
insl
mov
jo
and
jge
cmp
leave
cmpsl
xchg
stc
sbb
scas
mov
xor
sub
xchg
mov
and
jae
lea
fcmovb
fcompl
and
inc
jg
pop
mov
stc
in
inc
pop
je
pop
xor
stos
xlat
push
ret
xchg
cmp
dec
aam
pop
xchg
dec
ror
add
mov
lret
test
inc
lret
inc
xor
push
xor
push
push
mov
mov
pop
mov
cltd
in
sbb
sub
adc
sbb
stos
ljmp
ret
and
inc
outsl
mov
xchg
insl
push
fisubrl
in
ds
loop
cld
mov
cwtl
xchg
push
push
and
sub
repnz
ficompl
mov
icebp
sbb
inc
testl
sahf
jno
repz
xchg
mov
lods
push
mov
sbb
dec
in
pop
push
stos
xor
add
adc
stos
adc
outsb
sub
xchg
cs
mov
imul
loop
adc
lods
cld
int
jg
in
or
add
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
je
sub
aas
out
xchg
mov
rol
sub
pushf
xor
int3
sbb
mov
mov
mov
jne
testb
cmp
nop
cmc
sbb
pop
pop
enter
sub
cmp
adc
mov
adc
jae
popa
jns
ja
pop
outsl
jno
mov
cwtl
repnz
mov
out
cmpsb
test
and
lret
movsl
loope
add
mov
daa
test
data16
pusha
dec
jecxz
outsl
in
jb
dec
leave
mov
push
call
roll
add
ret
mov
pop
fisttpll
pop
gs
sti
mov
imul
add
daa
xchg
pusha
jle
mov
aad
add
mov
scas
adc
pop
xchg
push
sahf
mov
mov
mov
jmp
xchg
dec
jecxz
sahf
inc
and
lds
das
mov
pop
stos
inc
mov
and
pop
mov
fidivrl
fwait
es
sub
adc
nop
lcall
jle
push
scas
cmp
dec
mov
sbbb
lods
sti
sub
adc
sub
inc
repz
xor
enter
xchg
xor
cmp
xchg
je
and
pusha
dec
iret
dec
movsl
hlt
arpl
dec
xlat
pusha
data16
movsb
inc
in
hlt
mov
enter
dec
sbb
push
sbb
fmuls
jle
inc
or
sub
xchg
xor
mov
xlat
cmp
fdivrl
fnstenv
sub
repnz
xchg
leave
punpckldq
pop
and
sub
js
clc
pop
mov
xchg
addl
add
adc
sbb
stc
sub
dec
js
test
sbb
xchg
cmpsl
lds
adc
arpl
pop
sub
test
adc
jl
xchg
xchg
aad
or
in
das
mov
pop
ficoml
pop
vmread
ds
pop
loope
push
add
dec
popf
lods
xchg
add
mov
or
jmp
jb
mov
inc
loope
inc
subl
xchg
mov
loopne
cmc
sbb
mov
xor
jnp
in
xor
lds
popf
outsb
stc
or
popf
in
inc
aam
dec
mov
adc
add
stos
push
add
mov
sub
loope
popf
push
xor
pop
leave
jo
fistl
or
jl
and
filds
and
push
outsl
add
xchg
pop
pusha
mov
and
jnp
cmc
ss
sub
nop
popa
dec
mov
xchg
mov
ret
iret
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
lahf
clc
mov
xchg
xor
dec
idiv
popf
iret
ss
or
adc
or
movsl
lcall
in
inc
fwait
mov
cmp
xchg
aam
aam
push
xchg
pop
test
inc
les
xchg
ss
xchg
pop
push
jmp
orb
cmp
add
jbe
jp
hlt
bound
add
cmc
fcomp
mov
call
mov
sahf
andl
mov
out
outsb
xlat
dec
lahf
jp
fdivr
xor
aad
scas
out
mov
cmpsb
movsb
and
push
nop
shl
push
aam
add
in
jno
and
jge
outsb
inc
movsb
lods
stos
dec
scas
test
outsl
and
pusha
jl
xor
sub
inc
cmpsb
cmp
xor
dec
xchg
cmp
les
dec
js
xor
out
push
cltd
xor
lock
stos
lahf
push
insl
hlt
or
pop
nop
popa
add
cmp
int
add
xor
fs
push
mov
cmp
stos
rcrl
aaa
dec
in
jno
test
outsb
sar
or
mov
ja
inc
js
jb
cmp
lods
test
pop
pop
js
pop
dec
out
lods
dec
mov
addb
repz
scas
xor
jg
movsl
stos
push
sbb
mov
arpl
repnz
and
test
in
inc
loopne
dec
enter
ljmp
testb
loope
and
imul
cmp
scas
push
call
dec
ja
in
adc
mov
loope
add
sub
dec
outsb
orb
fs
mov
test
mov
xchg
xlat
lock
ja
jmp
push
std
aas
and
push
xor
outsl
lret
imul
jbe
add
inc
adc
or
cld
jmp
sbb
pushl
gs
nop
mov
and
shl
and
jno
ljmp
sub
lods
cmpl
push
loopne
adc
imul
aam
jl
inc
sub
or
mov
cmpsl
and
and
jo
sub
in
cmc
add
xchg
jnp
mov
dec
shrb
and
into
add
in
lret
add
jbe
aam
and
sbb
push
adc
lret
jmp
pushf
mov
das
jns
mov
adc
enter
addl
jecxz
jge
and
mov
dec
xchg
pop
out
lret
test
fs
ret
aas
jl
out
cld
jnp
mov
or
xor
sbb
test
in
in
addr16
iret
stos
decl
mov
and
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
fnstcw
adc
sbb
ud2
loope
xor
in
mov
sub
call
insb
push
mov
ss
jne
fiaddl
jns
lods
mov
add
inc
xlat
dec
mov
jns
pop
fwait
or
dec
sub
sub
test
cmp
cmp
and
repnz
or
and
cmpsb
mov
mov
rolb
mov
nop
in
cwtl
fs
push
add
add
aad
incb
mov
js
jae
inc
in
push
push
push
aaa
mov
insb
jecxz
jecxz
fdivrl
js
mov
cltd
sub
jl
and
dec
aam
fdivp
add
leave
hlt
sbbl
lods
fcmovu
notb
je
aas
jbe
dec
xor
notl
mov
cmp
mov
add
jne
cmp
repnz
pushf
jo
das
mov
stos
mov
mov
sub
addr16
fadd
jg
or
mov
or
shll
or
sbb
call
pusha
dec
mov
fs
out
xchg
mov
xchg
aas
xor
pop
lcall
nop
daa
in
mov
scas
je
sbb
scas
lods
jo
sub
imul
dec
mov
mov
stos
rcrl
pop
add
loopne
lret
inc
sub
add
xchg
lret
push
call
shl
dec
add
imul
inc
add
mov
ss
sub
cmp
fisubrs
out
out
add
cmp
jl
or
test
clc
mov
lea
sub
pop
mov
mov
test
ds
out
lcall
or
mov
lods
enter
dec
pop
mov
lret
lcall
daa
jg
jmp
hlt
movsl
lret
jecxz
ficoml
push
and
sbb
jnp
adc
gs
fsubrs
jb
out
sbb
add
test
mov
jge
stos
lock
test
cmp
xchg
int3
lds
movsb
mov
push
or
test
jb
outsb
popa
test
dec
or
bound
shrl
lock
add
lret
mov
sbbl
mov
sahf
daa
lret
ss
loopne
pop
xchg
xlat
jg
dec
daa
scas
out
test
xchg
das
hlt
sbb
pop
xchg
loop
mov
ret
popa
mov
inc
add
push
fcmovnb
inc
ror
mov
and
ds
sbb
scas
rclb
fadd
out
outsl
jl
pushf
mov
aas
fcompl
cmc
xor
add
cld
mov
fnsetpm(287
insl
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
push
mov
sbb
and
sbb
cmp
sub
xorl
mov
test
xchg
jbe
and
cmp
fwait
inc
mov
jecxz
movsb
imul
je
dec
lods
push
popf
sub
out
dec
iret
inc
add
pop
jb
cmp
sbb
int3
int3
fiadds
rorb
sbb
fwait
and
test
push
andl
addb
xchg
cmp
lds
cmc
sub
add
inc
lahf
insl
xchg
mov
dec
das
mov
dec
dec
jecxz
pop
js
push
or
mov
out
mov
sub
pop
lods
mov
push
pop
mov
push
ss
mov
out
out
jl
imul
jl
xor
aad
dec
sub
dec
into
push
xchg
mov
pop
pushf
mov
push
int
callw
inc
xchg
jb
mov
out
cmp
ficompl
mov
xchg
dec
in
rclb
mov
jp
jp
and
xor
into
inc
pop
pop
jns
stos
aas
notl
cld
push
adc
sbb
sub
cmpsl
insb
jae
adc
mov
pop
dec
test
rcrb
mov
shl
xlat
mov
out
fs
fcoml
cmp
jb
mov
pop
push
inc
or
mov
and
xchg
cmpsl
mov
mov
fwait
pop
or
cld
or
lea
lods
adc
out
push
mov
sbb
icebp
xor
push
lds
jp
adc
pop
ljmp
daa
cmp
xchg
push
addb
adc
inc
popf
stos
outsl
jle
dec
fisubl
fwait
std
and
cltd
push
lds
dec
daa
xchg
std
mov
pop
fists
movsl
enter
jmp
loope
push
daa
and
mov
fdivrl
ror
aam
push
xchg
enter
rcl
inc
xlat
cli
mov
inc
inc
lahf
stos
fnstenv
mov
das
lock
popa
push
mov
test
xor
out
stos
pop
fucomi
shl
sarb
push
cltd
xchg
push
in
loopne
out
cld
scas
negl
test
aam
pop
pop
pusha
fildl
sbb
stos
iret
inc
mov
or
jb
mov
dec
test
dec
xchg
jle
idiv
std
mov
mov
jge
push
xor
loope
add
adc
call
addr16
shll
int3
xchg
test
mov
cmp
mov
fldenv
push
nop
imul
hlt
or
lock
push
mov
xchg
sub
cmp
div
and
xor
pusha
pop
shll
sub
mov
push
xchg
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
inc
sarl
adc
sbb
test
jo,pt
rcr
aaa
sbb
mov
jbe
jne
sub
ds
nop
push
iret
dec
imul
xchg
adc
pusha
aas
jbe
jle
clc
int
pop
lds
sub
sbb
adc
sahf
and
out
adc
push
dec
mov
mov
cmc
mov
sub
adc
add
inc
das
dec
test
adc
sub
imul
jp
out
loop
push
xor
fxch
movsb
repz
pushl
test
mov
jmp
cld
inc
or
xchg
mov
out
loopne
mov
jo
sbb
fldl
imul
add
gs
push
or
dec
fsubr
mov
movsl
insb
and
inc
add
dec
scas
addb
cltd
sbb
adc
out
fistpll
das
xchg
hlt
or
mov
mov
mov
leave
popf
ljmp
and
popf
cmc
jo
dec
pop
xor
and
arpl
cmp
cmpb
les
mov
xchg
decl
dec
adc
and
movsl
ja
adc
cmp
into
push
jo
mov
mov
addr16
pop
addr16
dec
lods
fs
sarl
fmuls
mov
jmp
xchg
adc
jae
jmp
pop
cld
cli
lock
lods
js
adc
add
daa
cwtl
dec
push
xchg
jno
mov
mov
or
jbe
out
sub
jnp
mov
shll
xor
arpl
xor
cmp
dec
xor
daa
sub
inc
sbb
insl
push
xor
lods
mov
push
sbb
test
xchg
loop
shrl
mov
or
repz
sbb
push
sub
xor
jo
roll
addl
or
mov
add
int3
xchg
fstp
jmp
outsb
es
ss
jmp
sub
test
and
or
test
add
or
xchg
sub
insb
ret
and
in
adc
addr16
bound
sub
in
xchg
fcom
mov
push
fwait
outsl
popf
cmp
fdivs
ja
or
sub
cltd
je
mov
loop
addr16
out
jl
fdiv
xchg
in
int3
or
adc
ret
std
xor
cmp
pop
repnz
arpl
cmpsl
inc
push
sub
imul
xlat
and
cli
sbb
scas
sbb
inc
dec
sbbl
cmp
inc
jne
aam
shlb
sub
sub
xchg
stos
or
call
fnstsw
loop
movsb
test
fisubl
inc
into
nop
cmp
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
fdivs
dec
negb
sbb
adc
sbb
jno
int
daa
pop
push
outsl
xchg
aam
push
cli
pop
leave
push
addr16
lock
rolb
insl
movsb
out
sbb
les
fimull
gs
sahf
push
xchg
adc
push
inc
jp
xchg
sbb
jnp
test
or
mov
push
lods
gs
sbb
mov
add
pop
and
mov
add
cmp
enter
mov
pop
inc
in
sbb
add
div
or
pop
rcll
jo
lcall
push
xchg
fnstsw
adc
dec
push
mov
stos
loope
mov
pop
push
inc
cmc
push
imul
mov
push
add
xor
ljmp
das
mov
or
das
lods
cmpsb
gs
push
lret
fsubs
outsb
out
cld
dec
out
mov
add
mov
pop
sub
add
lds
xchg
pop
sub
insb
xchg
cwtl
jno
fs
mov
sbb
lds
frstor
mov
push
mov
imul
gs
or
mov
inc
sbb
or
arpl
jle,pt
mov
dec
std
mov
sbb
pop
adcl
iret
clc
sub
jb
movsbl
pop
or
mov
test
popa
shl
jo
lds
shr
lret
loopne
popa
xchg
and
imulb
xor
shlw
orl
mov
aas
icebp
inc
lret
mov
ret
pushf
fwait
or
xor
or
push
xchg
lock
jecxz
mov
pushl
push
and
aaa
les
xor
mov
pop
jmp
cmpsb
cmpsl
cmp
ljmp
mov
int
xor
leave
cmp
cld
mov
sbb
xor
int3
push
fldl
icebp
xor
cli
dec
stos
loop
inc
push
je
pop
aaa
sbbb
jnp
jno
pop
add
jnp
icebp
inc
lea
lock
test
xchg
inc
pushf
test
push
inc
adc
push
stc
xchg
cld
cmc
add
sti
out
imul
or
scas
dec
adc
fidivrs
andl
push
mov
xchg
out
push
imul
xlat
sarl
dec
and
cmp
add
mov
push
rclb
leave
or
mov
and
push
xchg
adc
jp
adc
sub
sbb
cmpsb
xchg
pop
shll
and
xchg
push
xchg
or
or
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
push
jle
lock
and
sbb
push
in
div
clc
movsl
add
lcall
nop
jp
int3
inc
loop
push
add
sub
fmuls
pop
dec
divb
dec
xlat
sbb
xchg
dec
fsubl
pop
cmp
rcrb
mov
in
xor
out
inc
mov
movsb
xchg
and
adc
or
dec
js
xchg
and
cli
daa
cmp
roll
dec
or
pop
sub
xlat
pop
pop
inc
mov
add
dec
out
test
mov
jp
mov
pushf
std
mov
ret
sarl
jb
fnstenv
scas
sbb
inc
cltd
dec
dec
add
jae
daa
jge
push
sub
sbb
aas
jl
into
mov
fcmovu
xchg
dec
ficomps
dec
lcall
and
mov
mov
xchg
jp
mov
xor
subl
lods
lods
in
movsl
mov
xcrypt-ecb
cmpsl
int3
aas
add
push
mov
in
aaa
mov
xchg
dec
mov
aas
std
mov
fisubs
inc
mov
and
stc
mov
stos
pop
pop
xlat
mov
sbb
mov
sub
sub
xchg
xor
je
cmp
push
push
lods
or
add
add
pop
fsubp
imul
fcmovb
in
inc
add
aas
psllw
outsb
test
ss
data16
std
roll
and
cli
or
xchg
cld
pop
jne
arpl
in
xchg
and
mov
xlat
aam
out
mov
bound
add
sub
adc
fimuls
pusha
loop
shr
sub
cli
dec
es
jb
comiss
fstpt
mov
push
push
lea
and
adc
repz
and
std
cmp
pop
add
sub
jle
movl
sbb
mov
mov
or
int3
mov
mov
jne
scas
sbb
notl
mov
mov
inc
jo
cmp
orl
shrb
pop
mov
ret
inc
shl
inc
jo
mov
adc
mov
insb
out
sub
pop
dec
outsl
lock
xor
push
pop
push
push
mov
jmp
std
pop
cwtl
jmp
dec
nop
cmpsl
xchg
push
mov
xchg
mov
dec
gs
mov
mov
pop
inc
or
mov
push
xchg
sub
stc
jae
icebp
fbstp
mov
mov
fdivr
sti
xor
mov
and
and
xor
push
mov
std
scas
es
sbb
stos
mov
clc
jb
sub
es
insb
lods
movntq
rcr
enter
push
mov
test
mov
ret
imul
lods
enter
add
add
push
push
push
mov
icebp
add
pop
jmp
sbb
adc
sbb
adc
sbbb
mov
dec
cmp
mov
push
loopne
insl
sbb
movsb
xor
testb
jg
adc
mov
pop
cmp
aas
pop
jl
xor
cli
sbb
or
into
or
cli
nop
loop
pop
mov
lss
xchg
rorl
jmp
nopl
hlt
or
add
cmp
jle
or
xchg
xor
ja
push
inc
sti
push
pushf
cmpsl
iret
pop
push
jge
xor
lret
cld
adc
arpl
push
cmpsb
mov
jbe
mov
mov
aaa
adc
cmpsl
sbb
pop
dec
call
cld
adc
aad
in
faddl
mov
xor
outsb
test
push
mov
sahf
xchg
lods
xchg
mov
or
pop
pop
clc
dec
shlb
roll
jmp
mov
subb
cmc
xor
fwait
mov
cmc
lret
std
outsb
fmuls
mov
pop
subl
enter
adc
jae
cwtl
fisttps
ret
push
addr16
inc
xchg
testl
movsl
sbb
lods
mov
or
push
cli
ret
lahf
jb
orps
je
fdivrl
jecxz
call
add
bound
xlat
push
loopne
dec
ficomps
out
xchg
jge
arpl
mov
mov
push
out
adc
out
add
cltd
jmp
in
cmp
mov
test
push
cmc
pop
push
pop
adc
loop
push
or
dec
mov
xchg
inc
mov
xchg
sbb
jno
cmp
mov
test
mov
cmp
sbb
notb
daa
pop
mov
jp
sahf
rolb
pop
push
or
cmp
and
scas
add
cmpsb
or
sbb
sahf
stc
fldcw
cmp
das
js
push
mov
andb
mov
push
mov
pop
sbb
daa
outsb
mov
fnop
enter
lods
sbb
inc
xchg
pop
out
mov
fldln2
ud0
aas
jae
mov
outsb
mov
mov
fisttpl
jecxz
dec
push
notb
adc
and
cmpsb
xchg
orl
dec
pop
push
stos
inc
std
dec
lret
outsl
pop
mov
loopne
roll
in
js
jl
pop
dec
pop
inc
cmpsl
in
call
sarb
int3
inc
fwait
push
jo
mov
sub
roll
push
sbb
out
dec
daa
jne
sub
outsl
mov
xchg
ss
xor
sub
jg
je
test
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cmc
shll
in
sbb
adc
sbb
jo
xor
pop
mov
or
adc
mov
mov
or
jne
xchg
and
and
push
insl
dec
xchg
mov
xor
lahf
jb
stc
xchg
out
int3
sbb
iret
jne
shll
push
or
jo
mov
pop
fwait
jbe
sbb
popa
movsb
jl
sbb
or
cs
push
js
and
mov
aaa
aam
mov
shr
das
pop
ja
cltd
ret
push
push
fcomps
mov
and
mov
cmp
cmp
cmp
scas
cmpsb
xchg
pop
incl
adc
pop
dec
dec
loope
fldz
sub
adc
lea
in
mov
repz
mov
sub
cwtl
ret
push
std
lods
cmp
cltd
xchg
cmp
aam
outsb
pusha
dec
jns
mov
jb
sbb
or
xchg
adc
add
or
adc
xchg
add
mov
mov
add
dec
ljmp
aaa
adc
xchg
jbe
je
inc
incl
mov
inc
push
clc
mov
mov
lahf
push
jne
xchg
lahf
enter
pop
fiaddl
stc
mov
xchg
inc
inc
dec
fs
inc
push
sub
cltd
add
push
or
loope
and
jnp
dec
cmp
test
pop
movb
mov
mov
or
decb
jle
jl
stos
mov
and
mov
mov
in
incl
pop
xlat
adc
add
lods
test
sub
popf
add
push
pop
xor
fbld
mov
push
push
aad
xchg
cmpsb
adcl
and
pop
out
stos
push
pop
sti
aaa
mov
push
dec
mov
sub
and
aas
call
jne
sbb
sbbl
movsl
cwtl
mov
lds
cmp
into
ljmp
xor
cmp
mov
lods
mov
cmpsl
ret
jb
sahf
lods
xchg
add
adc
mov
sahf
pushw
push
std
roll
cmpsb
out
insl
push
sbb
xchg
add
sub
pop
pop
xor
sub
push
pusha
je
mov
mov
or
shlb
mov
push
loop,pn
push
cli
enter
mov
push
sbb
cmp
pop
lea
push
mov
jno
shll
adc
inc
mov
mov
ret
and
or
in
mov
mov
popf
test
jbe
xor
xchg
mov
dec
repnz
jno
jns
aad
cmp
and
popf
stos
lods
jl
jp
fwait
cmc
shl
and
inc
push
lcall
pop
jge
mov
push
push
mov
ret
or
add
add
les
or
pause
adc
fistps
sbb
adc
sbb
out
stc
jno
sbb
ljmp
ds
xor
xchg
ds
data16
outsl
jbe
dec
cmp
out
dec
in
dec
andb
adc
and
mov
sbb
imul
pop
pop
mov
sar
xchg
xchg
xor
loope
adc
test
jno
scas
jl
mov
pop
imul
hlt
push
push
jmp
sub
xor
outsl
xor
scas
adc
mov
shll
xchg
inc
pop
out
aas
xor
dec
xor
and
pushf
fistpl
lret
shlb
jo
pop
sbbb
jl
test
xor
shrb
rorl
dec
adc
xor
rcrl
les
inc
icebp
gs
std
xorb
adc
jno
xor
mov
maxps
bnd
xchg
outsb
mov
into
loope
push
and
xchg
call
cmp
jmp
sti
mov
mov
pop
mov
repz
test
mov
dec
mov
pop
shlb
pop
aaa
and
int
pop
pop
xchg
jno
mov
leave
popa
fistpll
mov
fs
adc
mov
out
loopne
adc
pusha
stos
bound
ja
and
cmp
add
es
add
mov
into
pop
loopne
out
test
dec
test
adc
jl
mov
cmpsl
jmp
pop
jb
sbb
mov
cmc
mov
inc
mov
les
add
int3
call
lea
lcall
sbb
mov
cs
stos
or
xor
mov
fcmovbe
out
mov
sbb
cmp
mov
dec
push
insb
int
add
into
popf
adc
fistpll
jmp
push
push
or
in
lock
mov
je
pop
cltd
mov
pop
rolb
and
push
and
iret
or
push
dec
cmp
lods
bound
fildl
add
mov
das
aad
sbb
inc
adc
xchg
jge
push
mov
clc
cli
sbb
inc
cmp
popf
push
xor
addl
pop
cmp
popa
sub
jmp
stos
inc
in
sbb
shrb
aas
xor
mov
ret
pusha
sbb
or
mov
xor
addl
int
mov
dec
pop
add
adc
cwtl
inc
mov
jnp
inc
sti
pop
out
aad
pop
orb
aad
in
aas
mov
sub
imul
loope
lods
lods
repnz
xor
jp
mov
dec
sub
outsb
and
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
xorb
loopne
lock
sub
insl
icebp
fninit
hlt
push
das
jne
iret
fnstcw
rorb
fs
xchg
ljmp
push
or
outsb
std
aaa
add
pop
ss
mov
adcl
lds
stc
mov
jecxz
dec
out
repnz
push
cs
addr16
adc
jge
mov
test
out
imul
mov
jle
dec
cmp
int3
nop
inc
and
std
js
sbb
insl
mov
xchg
inc
nop
movsl
sbbl
adc
rol
mov
shlb
cwtl
push
testl
add
dec
xor
je
out
std
pop
push
shll
sahf
sbb
out
jb
leave
mov
mov
xor
dec
cwtl
sub
mov
sar
push
in
pop
mov
gs
mov
or
mov
xchg
in
loope
frstor
aas
push
cmp
imul
jge,pt
xchg
adcb
mov
outsl
fstps
xchg
in
inc
mov
inc
fsubs
pop
pop
pop
inc
mov
int3
clc
pushf
or
jae
icebp
push
cmp
inc
sbb
shll
xor
test
pop
out
mov
cmc
mov
test
fwait
test
xchg
sbbb
les
addb
adc
push
add
pop
push
inc
xchg
lods
jnp
mov
jne
cmp
mov
push
outsb
mov
nop
add
lret
sahf
adc
xchg
enter
in
rcl
cmpsl
daa
cmp
inc
popa
xchg
pop
jl
ss
clc
dec
subb
loope
sti
int3
mov
dec
sbb
dec
push
pop
and
jo
lret
sub
or
leave
mov
fisttps
xchg
adc
mov
mov
mov
xchg
rolb
lea
in
test
dec
xchg
or
cmp
jmp
je
jp
mov
cmp
xchg
mov
dec
test
push
mov
insl
lret
xchg
movsl
push
outsl
andl
std
add
and
divl
outsb
aas
pop
inc
mov
push
cld
cli
test
lds
mov
push
js
clc
cmp
fcmovnbe
sbb
pop
adc
cmp
jmp
add
pop
add
adc
stos
xlat
imul
dec
jl
jecxz
aas
push
lock
jmp
xchg
repz
pop
ljmp
inc
sti
out
int
insl
push
fwait
sbb
ret
out
into
mov
xchg
dec
xor
inc
stos
cmp
push
stos
inc
stc
cmp
shlb
jno
pop
mov
xchg
mov
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
and
int
js
sbb
and
sbb
sbb
pop
aas
mov
dec
in
pop
push
fdivl
jp
lods
dec
stos
daa
enter
shr
pop
add
inc
xchg
inc
cmp
and
cmp
outsl
and
ljmp
mov
cmc
andl
push
nop
rclb
cmp
movsl
cld
std
push
jbe
shll
mov
jecxz
cmp
sbb
jnp
sbb
test
pop
mov
in
cwtl
lret
fisttpll
cmp
push
cmp
mov
in
sub
xor
test
mov
rclb
add
push
sahf
insb
inc
lahf
jl
cmpsb
pop
cmp
daa
xchg
fwait
xchg
icebp
and
xchg
inc
xchg
lods
mov
pop
inc
popa
clc
out
int
ja
jbe
mov
xor
shrb
insl
and
push
imul
mov
in
push
aaa
fmul
and
es
add
test
push
xchg
or
test
adc
rol
sbb
xchg
lahf
call
leave
shlb
cmp
adc
pop
into
dec
fsubrl
sbb
jmp
lcall
shll
push
push
addr16
std
push
arpl
je
test
test
mov
daa
jmp
cmp
mov
les
xchg
decw
aam
or
sbbb
lret
adc
pop
cmp
jnp
je
gs
into
montmul
cmpsb
inc
repz
mov
std
jnp
sarb
jl
xlat
jg
lods
pop
mov
push
xor
popf
mov
das
push
mov
push
jecxz
and
jecxz
aas
mov
sbb
cld
cmp
pusha
pop
jge
pop
adc
xchg
les
jnp
repz
notb
aas
sub
int3
inc
fnstcw
loope
test
adc
pop
inc
inc
loop
insl
push
add
xor
adc
ret
lret
cmp
pusha
insl
mov
icebp
cltd
sub
sarl
in
mov
outsl
mov
push
insl
imul
push
lahf
push
jmp
sbb
jl
cli
jno
popf
dec
popa
pop
push
loopne
pop
adc
xchg
pop
xchg
inc
stos
xchg
sub
or
fisubs
pushl
inc
cltd
jecxz
sbb
aad
push
cld
jb
adc
pop
xchg
fsts
testb
mov
lret
jl
adc
stos
loop
dec
jmp
and
jne
sbb
in
out
test
mov
jno
inc
mov
in
es
dec
jo
push
stos
int3
ds
sub
or
aam
hlt
sub
mov
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
int3
lcall
and
sbb
fs
lea
arpl
push
push
mov
rclb
xor
jae
xor
push
cmpsl
push
sub
aas
inc
cmp
push
lret
ss
adc
scas
mov
push
mov
cmpsb
push
inc
fistpl
ss
xchg
or
inc
bound
xchg
stos
pop
cld
dec
lret
arpl
pop
inc
and
ret
int3
mov
mov
icebp
push
stos
leave
mov
mov
in
push
jae
dec
cmc
mov
shlb
dec
gs
sbb
and
xor
push
sbb
xchg
sti
pusha
adc
mov
les
sbb
fwait
les
orb
push
xor
xlat
loop
loope
mov
scas
ja
and
stos
inc
cmp
sbb
inc
mov
cmc
movsl
xchg
pop
aam
xchg
dec
mov
xor
cmp
cmp
stos
shll
and
into
jecxz
xlat
test
sbb
xchg
lahf
in
cli
out
notb
hlt
std
adc
push
cwtl
scas
sbb
jns
pop
pop
cmp
js
shll
mov
popf
js
jg
fwait
inc
int3
ffreep
jnp
pop
js
mov
jb
pop
xchg
mov
sbb
repz
ljmp
test
jo
sbb
sarb
mov
pop
in
adc
push
aam
jns
adc
in
scas
lret
lea
out
in
or
push
cmp
inc
adc
popf
inc
xor
cmpsl
insl
cmp
fistl
and
cmp
aad
jbe
rcrl
nop
lcall
push
scas
nop
jle
add
fiadds
mov
jg,pn
lahf
and
enter
adc
pop
ret
out
xlat
cs
cs
mov
adc
movsl
xchg
lcall
aaa
push
out
nop
dec
adc
mov
add
xchg
xchg
jno
out
popa
jno
fld
mov
sti
cmp
mov
pop
xor
mov
in
xor
cmc
mov
aad
mov
xchg
scas
jns
xchg
cmpsl
lea
cltd
cwtl
mull
or
pop
jnp
fisubs
stos
lcall
jl
arpl
repnz
jno
mov
mulb
test
fisubs
cli
jno
mov
lods
jmp
sbb
aam
shll
jle
das
test
push
popa
in
mov
aas
cmpsl
and
and
fstpt
lock
xchg
pop
arpl
fwait
push
andb
mov
into
add
mov
push
sti
std
out
xchg
xchg
scas
xchg
imul
ja
sti
lret
jl
pop
pop
fcom
fmul
pop
outsl
mov
in
mov
xchg
adc
cmpsb
mov
outsb
mov
stos
cmp
add
test
inc
adc
inc
cld
mov
mov
jmp
dec
lret
repz
cmp
fildl
push
stos
mov
sbb
and
sbb
adc
es
cmp
inc
loop
loop
fcoms
sub
les
xchg
in
inc
das
inc
in
inc
das
loopne
jmp
xchg
xchg
push
out
mov
stos
rorb
out
icebp
lock
dec
xchg
mov
fists
aas
jae
mov
mov
or
dec
in
mov
add
mov
lds
dec
rorl
outsl
sbb
aam
test
adc
inc
sbb
mul
xor
sub
cmpsl
mov
jecxz
aaa
mov
outsb
lock
xor
jg
shlb
frstor
mov
mov
cltd
out
jmp
dec
daa
shlb
pop
or
fistpll
out
xlat
imul
pop
xor
das
and
mov
daa
ret
out
repz
mov
xchg
mov
xor
cmp
mov
arpl
repnz
rclb
pop
jne
jecxz
cmc
mov
and
sahf
filds
roll
xchg
repz
fidivl
daa
mov
mov
lcall
push
and
jecxz
xlat
jl
xor
push
insb
shl
and
leave
inc
xor
jecxz
cmpb
adc
cmpb
jmp
in
invd
add
fcomip
idivb
sbb
imul
fstpl
ljmp
pop
pop
adc
xchg
fidivs
fsub
jne
inc
adc
dec
test
or
adc
fnsave
jnp
lcall
fs
sahf
pusha
in
js
insb
and
inc
or
stc
rcl
cmpsl
test
jp
mov
dec
jg
lcall
rcr
ror
dec
out
sbb
lret
jp
int
pushf
inc
dec
jl
fisubrl
jmp
mov
int
stc
or
mov
mov
cmp
imul
xchg
insl
mov
in
dec
fistpl
frstor
insl
and
xlat
js
jno
nop
xchg
pop
push
pushf
sub
push
outsl
mov
lods
scas
sub
pop
push
mov
aas
sub
daa
test
inc
sub
imul
shrb
pushf
jl
mov
pop
fmul
sti
and
mov
inc
mov
rcll
adc
sbb
lods
adc
hlt
dec
jecxz
fsubs
sahf
out
mov
sbb
push
push
test
pusha
enter
xchg
scas
repnz
mov
faddp
mov
pop
mov
sahf
pop
pop
push
add
fnstenv
push
mov
mov
les
cli
mov
test
lea
and
and
mov
call
icebp
ja
jns
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
test
mov
rcrl
and
sbb
movsb
rcr
add
mov
push
cli
cmpsb
lret
jbe
mov
or
mov
push
fiaddl
insl
or
enter
insb
lock
pop
es
jbe
jp
pop
scas
mov
lds
fidivs
sbb
sti
bound
pushl
rcll
aad
xor
cmp
push
sbb
inc
or
pusha
jecxz
inc
mov
imul
shlb
pop
mov
adc
cmp
inc
arpl
test
pop
popf
out
pushl
lea
push
ss
stos
sbb
and
dec
rcrb
out
xor
fwait
inc
iret
adc
pop
shlb
in
lret
pop
add
rorb
or
mov
adc
in
in
lret
filds
leave
sbb
or
push
xlat
movsl
sbbl
imul
adc
fildll
mov
xchg
ror
roll
add
cmp
xor
fcoml
sbb
add
push
popf
sbb
jle
ljmp
and
pop
mov
scas
test
jns
mov
pop
inc
pop
and
lock
dec
nop
ljmp
das
stos
outsb
insl
adc
daa
adcl
or
cmp
es
xchg
push
jnp
sbb
dec
ljmp
test
push
mov
lock
and
add
fistps
insb
pop
mov
out
adc
rorl
mov
std
mov
cmc
aas
mov
cmpsl
pop
and
xchg
mov
and
xor
adc
movb
adc
fcmovbe
leave
push
inc
cmp
pop
and
lods
jnp
push
xchg
test
jecxz
mov
pusha
and
pop
je
movsb
js
mov
jnp
test
add
cwtl
roll
or
sub
mov
sub
aas
mov
addr16
adc
scas
adc
mov
jno
or
loopne
movsl
add
dec
add
or
and
aad
mov
inc
adc
addb
inc
out
movsl
mov
sarl
mov
mov
int3
inc
push
or
call
popa
jns
mov
mov
adc
xchg
jle
xor
cmp
adc
sbb
dec
repz
repnz
cmp
jge
cs
mov
sbb
xchg
lods
popf
push
fcom
mov
test
inc
jge
sub
pop
fwait
adc
push
mov
pop
jecxz
cmp
xchg
call
add
jle
leave
pop
push
inc
sti
subb
in
insl
jnp
mov
mov
dec
mov
sbb
jge
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
jl
mov
sbb
push
into
rcr
fnsave
add
cmp
fcomp
lea
in
adc
cmp
mov
inc
push
idiv
push
push
outsl
sub
cltd
repz
aas
mov
mov
jb
add
aaa
and
mov
push
repz
pop
jecxz
mov
dec
jns
push
into
dec
pusha
incb
int
or
mov
data16
cli
push
in
push
dec
ret
jb
xchg
loopne
lds
test
addl
xchg
inc
aad
sbb
aam
or
adc
push
sbb
jns
cmp
xchg
cli
mov
inc
ret
sahf
outsl
cmp
cmpsb
and
test
js
jl
fnsave
add
pop
jb
add
pop
mov
push
mov
mov
dec
mov
inc
fcomps
xchg
sti
lret
out
out
imul
dec
sbb
aad
lods
jns
in
pop
cmp
shll
mov
pusha
cmpsb
push
mov
adc
cmp
add
cs
push
adc
sahf
mov
cmc
cld
xchg
std
and
push
or
jecxz
sub
and
popf
lea
jne
cmpsb
sahf
mov
addl
out
sub
bound
sahf
iret
cmp
sbb
jl
adc
mul
cmp
pop
jmp
pop
data16
push
lret
push
add
pusha
jmp
push
cmp
aam
push
xor
scas
jnp
mov
imul
sarb
dec
lret
cmp
jno
ret
mov
add
stc
outsl
push
or
xlat
loope
mov
pop
fadds
push
outsb
cli
xor
sbb
xchg
shll
push
addb
push
imul
enter
outsb
out
insb
int
and
pop
pop
es
adc
sub
data16
out
mov
jae
and
pop
inc
mov
enter
and
into
int
xchg
icebp
mov
movsb
shrl
nop
in
add
jp
and
data16
stc
pop
push
fbstp
fistpl
ljmp
dec
stc
jbe
addb
mov
cli
dec
gs
adc
jnp
sbb
ret
fiadds
xor
in
shll
xchg
cwtl
and
dec
inc
or
mov
mov
loope
scas
push
inc
fs
pop
push
dec
int3
and
popa
and
jo
icebp
jecxz
or
ss
push
xchg
cltd
lahf
cmpsl
loop
pop
outsb
aad
sub
inc
adc
inc
pop
sbb
jecxz
or
outsb
fwait
adc
mov
mov
hlt
shr
fnstenv
pusha
loope
and
aaa
insl
out
xorb
ret
push
cmc
pop
sahf
test
push
xchg
inc
mov
add
adc
push
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
xchg
cmp
mov
sbb
adc
sbb
mov
cli
mov
push
lock
cltd
mov
loope
ret
sahf
mov
rol
lret
xor
pop
dec
pop
subb
jg
shlb
out
mov
int
loope
aam
adc
cmp
mov
js
fists
pop
xchg
and
inc
add
sti
stos
add
shr
jg
mov
fcmovnu
lahf
jb
mov
jb
mov
call
call
or
push
sbbb
and
ror
adc
in
inc
xor
cmp
inc
test
jge
xor
inc
cmpsb
stc
dec
mov
test
movsl
clc
ss
test
movsb
xchg
test
cs
outsb
adc
rorl
sahf
adc
inc
ljmp
mov
daa
mov
cmp
shl
jl
push
push
jbe
push
jns
sub
jo
fldt
icebp
xor
jae
gs
dec
out
inc
notb
pop
and
pop
dec
aad
shll
in
scas
mov
add
mov
fistpll
aaa
ret
repz
cwtl
std
call
cmp
aaa
xchg
mov
pop
dec
icebp
repnz
xor
movaps
je
aaa
mov
js
dec
cmp
test
pusha
int
test
in
mov
add
je
bnd
pop
mov
into
xor
cmp
mov
adc
in
imulb
test
orb
push
jg
ret
gs
sbb
jnp
ret
addl
addr16
mov
inc
jge
pop
scas
sub
jns
das
and
imul
bound
addb
jl
sti
repz
cli
xor
sbb
jo
in
xchg
cwtl
xor
jg
movsb
xchg
mov
xchg
xchg
pop
addr16
lock
in
addr16
in
jb
adc
cmpsl
clc
mov
arpl
shrb
inc
jmp
hlt
iret
sbb
fnstsw
dec
sbb
push
js
ljmp
xlat
fbld
aam
sub
loope
inc
adc
aaa
rolb
mov
clc
sbb
xchg
inc
mov
jbe
jns
adc
out
pop
xor
mov
mov
inc
paddsb
mov
loope
pushf
out
fsts
mov
sub
ss
xchg
imul
nop
sahf
inc
jno
loop
push
sarl
adc
inc
xchg
stos
dec
ret
mov
sbb
repnz
cmpb
bound
out
mov
sub
mov
rcrl
ds
mov
ret
mov
xchg
and
rclb
inc
dec
cltd
cwtl
outsl
iret
push
pushf
inc
test
hlt
jns
xchg
xor
sub
shll
xchg
add
push
xchg
shr
jmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
cmp
xlat
cs
jmp
sbb
jno
pop
bound
dec
sub
push
cmp
xor
sbb
mov
jg
gs
iret
push
fstp
mov
jnp
into
repz
in
bound
xor
pop
inc
pop
dec
out
adc
jns
imul
lahf
jbe
cld
ret
loop
push
repz
mov
repz
mov
sbb
shll
push
insl
inc
pop
dec
push
sbb
nop
dec
push
adc
pusha
popf
fdivp
dec
sbb
dec
icebp
push
pop
test
ja
scas
adc
shlb
sbb
cltd
fbld
aam
pop
iret
dec
outsl
shrl
jp
jne
jno
pop
mov
pop
icebp
mov
sub
mov
xchg
aas
push
mov
std
insb
popa
loopne
cmp
jnp
std
mov
mov
add
mov
adc
add
out
lret
jb
mov
cwtl
fadds
mov
xor
mov
test
es
mov
push
shr
pop
ss
pop
ds
adc
push
gs
int
xlat
in
into
inc
xlat
stos
adc
aaa
into
and
add
mov
cmp
shll
cltd
test
jne
icebp
pushf
leave
mov
add
or
push
lods
ret
xchg
xchg
xor
pop
dec
pop
xchg
fstpl
dec
jae
pop
jne
mov
jo
shrl
jle
jnp
nop
faddl
stos
lret
push
push
dec
cli
lods
ja
sub
pop
or
sbb
and
loop
lods
pop
lret
fsubrl
jb
scas
insl
inc
orb
cmc
xor
das
and
jo
xchg
aad
inc
pop
jbe
cmp
fldl
jge
es
subl
ret
out
sbbl
pop
cwtl
ljmp
pop
or
jl
loope
dec
and
test
cmpsb
out
jnp
stc
loope
outsl
outsb
lods
or
call
push
out
mov
xor
and
inc
add
add
cli
adc
pusha
fs
add
jl
xor
pop
xor
add
or
xchg
adc
add
jge
mov
lea
jb
pop
push
cmpsb
mov
daa
mov
inc
cwtl
gs
cmpsl
mov
jno
test
fdivrl
jnp
or
and
inc
dec
xchg
inc
into
into
mov
ret
push
jae
int
jns
adc
add
adc
cld
adc
fs
sbb
cmpsl
pop
or
mov
xor
sti
cltd
xchg
mov
and
mov
xchg
sar
mov
mov
xlat
mov
add
rol
loopne
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
test
push
test
sbb
jbe
sub
adc
xchg
mov
jmp
push
jl
cmp
cltd
pop
enter
das
outsb
adc
icebp
test
xchg
test
pop
push
repnz
or
fucomip
mov
mov
mov
loopne
ret
sbb
ljmp
icebp
inc
push
fstp
mov
pand
and
pop
push
out
stos
mov
cmp
cwtl
hlt
shrb
or
cmp
insb
test
clc
hlt
xchg
repnz
xor
cmpsb
jae
cmpsb
xchg
mov
hlt
push
setl
dec
call
adc
xchg
mov
rolb
lret
add
mov
sub
xchg
test
dec
sbb
imul
sbb
in
cmpb
sub
sub
jmp
push
lret
pusha
xchg
fwait
mov
jno
jno
or
stos
jo
test
mov
cwtl
or
out
push
arpl
dec
mov
arpl
pop
enter
ds
jnp
call
je
mov
dec
rcl
in
sbb
mov
cmpsb
lcall
cmc
and
cmc
decl
sub
leave
in
pop
cmp
mov
sub
jnp
push
outsb
in
lcall
shrb
clc
lahf
dec
pop
test
xchg
cmp
pop
nopl
jge
fisttps
lock
or
add
mov
out
jae
push
push
pop
imul
pop
sar
mov
test
rcrb
roll
xchg
pop
es
inc
test
cmp
sti
push
sub
lds
cwtl
mov
sbb
pop
mov
sub
jno
rcr
mov
cmp
xchg
enter
fimull
sti
mov
pop
outsl
into
punpckhdq
divl
mov
inc
lock
insb
push
lods
add
fldl
cmp
iret
cmpsl
daa
xor
fcompl
xchg
jl
push
dec
out
adc
xlat
inc
cmp
in
movsl
adc
push
jbe
ss
sub
and
gs
stos
sbb
inc
out
mov
jl
jge
mov
mov
iret
test
xor
add
mov
fcmove
pop
imul
push
clc
out
mov
sub
fwait
pop
movsl
int
sarb
sub
sbb
cmp
into
sbb
in
lds
es
movsb
inc
icebp
aad
inc
jecxz
insb
add
pop
xchg
bound
inc
aaa
dec
outsl
push
insl
and
clc
shlb
in
and
pop
addr16
fdivrs
mov
mov
sbb
rcrb
les
cltd
sbb
xchg
gs
dec
pushf
xchg
jmp
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
stos
mov
mov
sbb
cmp
xor
arpl
pop
push
mov
lcall
or
out
rolb
pop
imul
mov
adc
aad
sti
sbb
mov
mov
dec
pop
push
or
dec
mov
sbb
lock
mov
stos
or
or
sbb
mov
pop
pop
ret
leave
stos
push
xchg
inc
mov
dec
or
sub
je
mov
hlt
out
xchg
and
or
pop
cmp
out
xor
aad
xlat
mov
fs
mov
cmpsb
fwait
enter
aad
xchg
add
adc
ret
mov
jne
jo
mov
das
sbb
out
xchg
aas
mov
inc
push
movsb
dec
push
test
gs
mov
out
pusha
xchg
or
pop
inc
cmpsb
push
jno
jg
jmp
cltd
lret
inc
dec
lock
test
xor
insb
mov
push
xor
lods
fisttpll
lds
cli
adc
mov
stos
mov
xlat
test
jnp
pop
sub
and
mov
ret
xchg
hlt
outsb
mov
mov
arpl
imul
jns
dec
sub
ret
cmp
push
jno,pn
repz
cmp
out
out
outsb
dec
out
notl
xchg
sbb
cmpsl
sub
leave
int
mov
mov
test
xchg
sbb
mov
ret
mov
cmpsb
lods
mov
pushf
adc
cmp
add
xlat
dec
dec
or
mov
mov
out
rcrl
or
cmp
adc
ret
xchg
stc
in
test
lea
add
je
lcall
aam
push
push
rorb
test
lret
popf
mov
xor
mov
ret
inc
test
int3
daa
ss
inc
sbb
xchg
jecxz
or
popf
fs
xchg
imul
pop
push
push
gs
add
dec
xlat
and
lock
ja
lahf
ljmp
gs
fdiv
mov
cmp
xor
lret
pushf
bound
sub
jp
mov
mov
insb
dec
dec
sub
and
mov
jmp
shrl
sub
sbb
dec
pop
mov
mov
out
jl
xchg
insb
add
or
lret
add
jle
dec
movsb
inc
or
pusha
push
xorb
xchg
js
cmpsb
lahf
mov
mov
roll
sub
call
cmpsb
iret
sbb
inc
jb
jbe
decl
inc
arpl
pop
cmp
or
stos
insl
bound
mov
mov
fbstp
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
dec
ja
rcrb
sbb
shrb
hlt
leave
fldl
mov
push
rcll
notb
push
dec
xchg
jo,pn
pop
jae
pop
add
xchg
stos
movsl
xor
addb
sub
and
inc
int
mov
out
and
mov
adc
xor
push
push
test
adc
roll
mov
inc
out
mov
sahf
fsubrs
or
lahf
jno
outsl
mov
mov
jae
cmp
lea
push
pushf
loope
mov
mov
addr16
sub
jno
or
out
sbb
fs
shll
sbb
mov
push
jg
and
add
xchg
inc
pop
mov
leave
int3
fisubl
sahf
rcll
in
inc
jae
aam
enter
jmp
or
imul
mov
jge
cmpl
in
ret
push
inc
jl
jmp
lds
pop
fldt
jns
cmpsb
rclb
dec
insl
or
mov
test
stc
cli
push
cmp
pextrw
mov
push
jnp
cmp
aas
xlat
in
das
jecxz
xor
imul
in
mov
cwtl
fidivl
add
dec
lods
mov
mov
add
loope
xchg
mov
in
add
inc
mov
lock
pop
fcmovnb
xchg
adc
nop
lock
mov
push
out
and
fcmovbe
out
cmp
hlt
mov
mov
and
cmpl
and
and
xor
mov
jmp
subl
xlat
pusha
lret
or
test
out
roll
out
jl
adc
dec
dec
popf
flds
mov
cmpsl
xlat
sub
mov
jl
sbbb
dec
cmc
add
pop
push
cmp
cwtl
cmp
push
pop
popa
cmpsl
popf
mov
aad
cmp
pop
in
add
subb
xchg
and
jae
add
sub
push
xlat
mov
xchg
je
mov
insl
pop
dec
rcll
mov
cs
mov
push
rorl
pop
cmp
fwait
es
pusha
rcll
xchg
xor
movsb
xchg
sti
arpl
mov
adc
lret
sbb
cwtl
cmp
jl
sbb
sahf
out
xchg
cwtl
xor
shlb
insb
lds
pop
sbbl
jne
cli
jo
cmp
in
in
or
and
movsb
add
in
jge
xor
cmpsl
popf
test
lods
mov
adc
out
sbb
clc
insl
xchg
in
out
mov
jo
mov
inc
inc
and
int3
lds
lea
das
sub
sbbl
mov
xchg
arpl
aad
cmp
jae
pop
or
cli
dec
loop
scas
jle
dec
xor
sbb
mov
add
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jle
xchg
sbb
and
sbb
mov
mov
bound
mov
test
sub
mov
iret
sti
loope
xor
aas
loope
in
cmp
add
or
inc
xchg
xor
mov
ficompl
sbb
shl
filds
push
and
pushf
mov
or
ja
fsubrl
sbb
dec
jno
and
xchg
mov
xchg
call
rorb
or
lret
in
loopne
div
xchg
push
push
mov
int3
aas
in
push
std
jb
fsubs
idiv
call
jae
ret
test
mov
gs
mov
jae
push
stos
pop
push
ljmp
push
dec
pop
adc
cmpsb
xlat
dec
jnp
dec
ss
cld
sub
imulb
scas
outsb
notl
push
std
push
movl
aaa
sbb
cmpsl
xor
ss
shrl
daa
movsb
pop
in
popa
les
leave
stos
pop
jl
xlat
in
jge
push
xchg
adc
xchg
insb
aad
das
mov
or
dec
mov
cmp
add
out
mov
xor
mov
pop
out
cmpsb
psubq
xor
out
and
and
dec
sbb
out
pop
in
ljmp
mov
push
dec
dec
add
inc
mov
sarb
xchg
sbb
push
lahf
jg
test
or
loope
mov
sbb
cmp
je
outsb
mov
ret
xor
jnp
xor
fisubs
or
add
repz
push
fldt
mov
in
inc
and
aad
js
mov
into
or
push
push
sub
sbb
les
add
mov
and
ja
and
jbe
push
pop
outsb
adc
cmpsb
sub
lods
cli
cmp
jb
sbb
out
mov
add
mov
adc
sti
and
dec
test
inc
test
test
pop
or
in
sbb
rolb
sub
sub
add
or
add
xchg
mov
or
mov
in
inc
repnz
ficomps
and
push
adc
mov
jbe
sarl
and
push
lcall
jno
stos
add
mov
sbb
lret
fcompl
pop
inc
lret
outsb
adc
fstpt
clc
es
mov
ljmp
dec
sbb
shl
pop
lahf
outsl
iret
stos
cmp
pop
add
inc
loope
xchg
jnp
out
popa
adc
cmp
iret
mov
xchg
cmp
lret
push
lahf
movsl
jmp
sub
fisttps
add
dec
mov
xor
shl
jmp
cmp
sbb
push
push
out
push
jmp
sbb
and
sbb
and
nop
into
cmp
data16
fdivrs
fistl
pop
test
lock
icebp
adc
icebp
jne
or
stos
je
pop
adc
in
adc
sbb
fstpt
aad
mov
push
push
jb
add
jns
xchg
pop
mov
stos
sbb
cli
pusha
or
mov
gs
popf
cmp
ljmp
gs
or
and
cltd
mov
decb
rcrb
fistl
sbb
pop
xor
or
aad
mov
out
jl
jnp
sbb
xor
mov
es
clc
fnstsw
test
aam
add
cmp
mov
in
lods
subl
mov
xchg
jne
fsub
movsl
repnz
pusha
pop
popl
addr16
das
movsb
sub
mov
push
xor
ljmp
int
ljmp
xchg
xchg
sbb
std
out
dec
sub
cs
cmp
jmp
xor
notb
pusha
fstl
imul
mov
outsl
jmp
sub
mov
aad
hlt
jne
outsb
dec
scas
fcmovne
jno
inc
push
cmp
leave
cmp
pop
icebp
sbb
xor
lds
push
gs
dec
jg
adc
or
xor
sub
outsl
rclb
data16
pop
repz
xchg
jbe
cmp
cmpsl
in
movsl
call
in
sbb
mov
outsb
jo
mov
shll
xchg
leave
mov
adc
cmpsb
sbb
roll
push
arpl
mov
and
adc
scas
stc
es
xchg
jle
or
xor
sbb
mov
insl
inc
adc
nop
shll
jbe
mov
loopne
mov
sbb
rclb
jl
jns
jno
mov
jl
mov
test
ja
mov
and
xchg
and
inc
sti
inc
stos
mov
mov
cld
jne
popa
repnz
js
std
cmp
outsb
and
sub
cltd
dec
jecxz
or
xchg
dec
mov
xor
and
dec
movsl
out
fistpl
mov
lea
push
nop
dec
jnp
movsb
and
xchg
shlb
in
jecxz
out
sbb
lock
inc
and
bound
sbb
dec
loop
adc
sub
outsl
shrb
sbb
mov
jp
mov
cwtl
ds
mov
dec
imul
sub
vpaddusw
cwtl
aaa
test
push
or
repz
and
cmp
jae
jnp
imul
sub
add
out
sub
mov
lret
movsb
or
pop
mov
mov
jl
inc
sbb
and
pop
lahf
mov
mov
std
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
scas
in
sbb
or
mov
jae
stos
fwait
push
je
jmp
hlt
fstpl
lock
sbb
jns
xor
jns
scas
mov
test
fmulp
test
rorl
mov
jge
adc
mov
add
rolb
mov
out
loopne
loope
mov
adc
push
mov
mov
xor
out
mov
mov
push
outsl
fnstcw
and
jle
push
mov
decb
mov
mov
repnz
arpl
dec
pusha
in
inc
movsb
and
pop
jg
jecxz
out
push
xchg
cli
rcr
lret
jns
cmp
lahf
icebp
or
xchg
shrl
ret
and
das
mov
sub
cwtl
iret
inc
clc
push
add
jmp
cld
std
in
cmp
sti
mov
popa
and
mov
stos
sub
inc
mov
pushf
sbb
and
jecxz
or
addr16
cmp
pop
loopne
dec
xchg
pop
push
mov
xchg
mov
or
leave
ljmp
out
push
in
lcall
sub
and
fiadds
mov
jo
data16
fwait
push
dec
dec
in
inc
fisubl
push
sub
jno
jg
push
adc
hlt
lahf
adc
lahf
jmp
sbb
popa
mov
inc
je
in
jae
loope
jl
jno
add
ss
xchg
test
dec
dec
lock
into
adcl
xor
mov
inc
in
lcall
xor
lods
sub
mov
pop
pop
adc
pop
push
insl
nop
jnp
arpl
jbe
or
ljmp
mov
idivl
rcl
inc
mov
enter
stos
daa
aaa
pushf
sahf
push
bswap
push
cmpsl
mov
dec
pop
adc
adc
cmp
insl
arpl
xchg
inc
jo
notb
shlb
add
test
insl
cld
leave
ret
adc
adc
dec
std
jl
jp
andb
shl
add
hlt
shrl
push
mov
push
mov
iret
dec
outsl
jmp
ficomps
insl
mov
push
adc
leave
inc
mov
sbb
mov
add
jp
xchg
daa
lcall
lds
test
pop
lcall
imul
fsubrl
or
clc
js
mov
std
lea
pop
push
cli
ret
inc
stos
cmpsb
in
sbb
mov
mov
scas
jnp
xor
jns
loopne
add
push
in
hlt
and
ds
jnp
xchg
das
cmp
or
in
hlt
bound
sub
add
lret
xor
sub
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
sbb
sbb
adc
sbb
push
jp
filds
sahf
leave
lret
mov
jmp
sub
xor
iret
mov
sbb
fwait
into
cmpl
mov
mov
pop
xor
adc
xor
or
mov
lds
mov
mov
and
mov
mov
jb
sbb
fs
out
enter
shr
orb
mov
jb
xchg
inc
call
mov
and
and
and
xor
add
mov
xchg
cwtl
push
arpl
xchg
sarb
mov
add
out
xor
ja
les
jge
je
imul
cli
mov
jl
insl
mov
or
stos
fs
and
pop
sub
sub
movsl
cmpsl
imull
xor
mov
fwait
mov
shlb
push
and
ret
shrb
or
das
je
pop
xchg
js
mov
adc
jmp
fidivrl
cltd
xlat
divb
in
jecxz
enter
loopne
adcl
gs
mov
leave
insb
sub
mov
cmp
je
jge
push
clc
mov
inc
sub
imul
cmc
mov
push
or
dec
lock
cwtl
sub
sbb
sbb
pop
fsubl
js
jle
or
hlt
push
lock
mov
pop
dec
mov
mov
cmc
push
sbb
xor
inc
call
pop
push
jg
sahf
pop
lods
and
sbb
sti
pop
cmpsl
loopne
setno
pop
xor
sarb
dec
insl
addb
scas
lahf
xor
and
lods
sub
clc
dec
sub
jp
in
mov
in
dec
test
fwait
ja
mov
imul
ss
enter
nop
in
push
pushw
adc
jnp
aad
push
add
mov
pop
and
ret
or
and
sub
sbb
sbb
iret
jae
cltd
arpl
push
test
inc
cmpsl
js
das
int
add
jg
mov
loop
push
andl
mov
xor
outsb
push
addr16
sub
xchg
push
pop
cmp
fsub
jnp
dec
add
mov
inc
scas
push
pop
pop
std
push
aad
movb
clc
mov
add
jo
lret
xor
out
cmp
pop
sbb
mov
imul
pusha
sbb
loop
int3
push
fsincos
shll
cmp
inc
sub
outsl
xor
movsb
je
pushf
push
push
dec
or
pop
mov
clc
mov
int3
dec
xchg
jg
inc
cmp
movsl
fldenv
sub
test
aaa
nop
xor
xor
or
push
dec
cmp
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
stos
call
adc
sbb
dec
push
sub
sti
inc
bnd
test
dec
mov
outsb
loop
fldt
xchg
ret
push
cmp
loop
popa
repnz
lea
inc
add
int3
mov
mov
cmp
mov
mov
dec
push
cmp
scas
mov
jne
push
cld
jg
inc
ljmp
insb
or
push
or
add
addr16
outsl
cmp
icebp
mov
in
push
stos
gs
pop
and
sub
xchg
and
cmp
fsts
mov
loop
jp
mov
jmp
in
adc
bound
xchg
inc
cmc
fcom
xor
sahf
inc
or
pop
inc
sbb
lea
cwtl
xchg
aas
cmp
mov
lea
test
and
cs
outsl
dec
jmp
ljmp
rolb
add
and
clc
mov
jp
sub
xchg
jmp
test
es
fstps
xor
in
sbb
push
sbb
adc
jo
dec
int
xor
jb
jo
xchg
xlat
add
sub
or
lock
pop
or
and
out
sti
pop
jns
movsl
int3
adc
aam
out
adc
arpl
push
pop
push
sbb
je
lret
cmp
sbb
inc
mov
push
jle
adc
inc
inc
mov
daa
out
into
mov
pop
xchg
jb
js
out
pop
or
sbb
jg
into
in
mov
outsb
dec
dec
movsb
sahf
inc
leave
mov
cmp
xchg
inc
adc
jl
sahf
lret
cmpsb
inc
je
ds
push
inc
dec
jb
das
rcrb
mov
mov
loop
outsb
aam
mov
cltd
jmp
or
iret
repnz
out
pop
outsl
ljmp
mov
test
cmpsl
and
push
mov
pop
int
testl
dec
lret
or
je
out
xor
xlat
int
repz
pop
loopne
clc
in
mov
mov
stos
dec
lret
sub
or
inc
mov
es
fidivrs
pop
xor
shll
inc
push
jne
pop
push
cs
xor
repz
inc
subb
push
pop
push
mov
lods
mov
jnp
cmp
cmp
xchg
mov
decb
sbb
aad
fdivr
mov
or
mov
push
sahf
pop
and
daa
xchg
nop
loopne,pn
sti
xchg
dec
inc
out
push
cmp
imul
pop
mov
xchg
lods
jmp
call
paddb
bound
andl
adc
sbb
mov
ret
xchg
enter
test
push
bound
jno
fisttpll
pop
pop
aaa
mov
sub
mov
loope
imul
mov
mov
inc
add
cmp
ja
jns
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
sbb
icebp
jns
sbb
adc
sbb
push
pop
daa
lods
imul
fstps
in
adc
pop
cld
orb
pushw
jl
xor
lahf
mov
imul
jmp
pop
or
adc
xchg
cmp
jo
movsb
mov
push
lahf
adc
or
jge
gs
stos
lods
dec
faddl
test
icebp
sbb
pop
shlb
xchg
sbb
xchg
addr16
and
pop
shll
mov
mov
sbb
add
frstor
or
in
inc
inc
sbb
inc
add
inc
hlt
fildl
aad
add
xchg
cs
enter
jne
mov
loope
sub
outsb
jge
mov
xor
push
test
repz
push
push
int
in
lahf
push
cmp
cmp
pop
and
repnz
or
xchg
es
push
mov
mov
pop
insb
xor
subb
mov
cmp
add
test
lret
int
dec
cmc
in
mov
lea
jp
lods
and
inc
out
popa
into
adc
and
mov
jecxz
sub
and
pop
add
dec
int
ret
rorb
test
dec
out
int3
aas
mov
xchg
add
push
mov
push
fidivrs
push
adc
stos
mov
jns
inc
xor
mov
cltd
mov
int3
loop
and
xchg
mov
lods
mov
notb
popf
push
gs
inc
mov
cmp
cbtw
xchg
lret
ljmp
pop
pop
push
sub
pop
fisubs
rdtsc
push
xor
or
icebp
int
dec
shl
icebp
js
cmp
push
mov
int3
mov
push
jle
cmpsb
push
stos
inc
xor
mull
mov
add
imul
cs
jle
das
lock
aaa
inc
movsb
push
jb
insb
adc
test
nop
das
mov
xchg
ret
push
inc
fwait
sbb
sbb
cmp
adc
adc
scas
or
xlat
lret
popa
xchg
lods
fisubrl
push
jae
dec
inc
push
pop
push
ret
aam
dec
in
xchg
xor
daa
bound
cld
mov
aas
push
mov
shll
inc
push
mov
js
outsb
dec
add
cwtl
push
fimull
push
add
cmp
or
jge
int
sub
sbbl
mov
jmp
lods
into
pop
sub
int3
js
sub
mov
stc
clc
cmp
xor
call
fs
adc
or
mov
cs
stos
lret
imul
nop
jecxz
mov
jl
cmp
jnp
mov
jp
add
inc
xchg
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
jns
dec
nop
stos
cmpsl
enter
lea
loopne
sbb
pop
mov
pop
push
das
aad
jno
push
mov
mov
js
bound
scas
jmp
xlat
outsl
dec
or
pop
xchg
addr16
test
or
jbe
push
sbb
orb
in
insl
mov
jns
sub
and
add
fnstsw
movsb
into
fisubrl
subl
jmp
repz
mov
adcl
fisubs
shlb
cmc
shrl
push
pop
fisttpll
shlb
add
sub
mov
xchg
int3
adc
fs
icebp
add
jg
xchg
jne
push
fisubl
cmp
cmpsb
adc
ja
mov
add
pop
mov
dec
out
sbb
mov
xor
cmp
mov
xchg
mov
sub
shll
jl
dec
adc
fsubrl
sbb
xchg
xor
in
push
fnstcw
and
mov
stos
jnp
mov
xchg
mov
pop
fwait
es
lahf
rorl
fnsave
push
sysexit
sub
movsl
pop
or
imul
xchg
lods
or
sbb
mov
xlat
push
push
adc
imul
sarl
pop
push
jne
outsl
bound
jo
les
rorb
fmull
addb
repz
and
rcrl
sbb
or
in
lods
dec
push
out
rcr
cli
shl
mov
and
dec
or
test
fwait
icebp
add
add
fadds
ds
test
cs
mov
ljmp
inc
sbb
icebp
fsubp
add
subl
pop
push
aad
jbe
enter
inc
sbb
lock
imul
adc
lods
aad
xchg
ret
cmp
imul
loop
daa
sub
cmp
xchg
or
jb
in
lahf
filds
shrl
fldenv
add
mov
nop
xchg
aad
clc
or
stos
mov
stos
mov
out
rorb
pushf
fisttps
fisttpl
mov
flds
dec
js
mov
aaa
fucomip
cltd
fidivrl
adc
sub
mov
push
sbb
in
add
daa
sahf
data16
rolb
fadds
and
sub
aaa
or
pop
sub
pop
push
out
out
aaa
lahf
or
sub
int
roll
sub
mov
jecxz
xchg
add
lds
cli
rclb
shlb
lret
loopne
mov
gs
scas
lea
aaa
test
andb
jmp
std
jne
jmp
xchg
into
or
loop
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
arpl
adc
sbb
addl
out
loop
es
jns
adc
xor
add
inc
mov
arpl
mov
or
jg
mov
push
inc
out
test
fnstsw
inc
shll
lods
or
das
addr16
or
repnz
jo
sub
leave
xlat
mov
cmpsb
stos
in
sub
jae
dec
xchg
sahf
push
and
movsb
xchg
jle
movsb
jmp
and
test
mov
jl
rcrl
xchg
push
xchg
cmpl
jae
lea
cld
mov
jle
push
test
pop
in
cmpsl
mov
jmp
insl
sbb
jb
popa
bnd
adc
popl
insl
sbb
xchg
mov
mov
loope
std
xchg
mov
popa
dec
push
test
dec
mov
icebp
ljmp
jle
outsb
or
ror
call
sub
pop
imul
fs
xor
rcl
mov
fisubs
lock
mov
in
je
or
dec
stos
sbb
stc
test
fcoml
xlat
pop
add
push
mov
imul
and
lods
insl
push
xchg
iret
sbb
ds
cmp
jp
les
lds
in
or
pushf
xchg
lcall
mov
cmc
and
inc
sub
cmp
enter
mov
lds
pop
mov
repnz
mov
jns
pop
mov
inc
jns
mull
fiaddl
fidivrl
cwtl
mov
mov
sub
add
adc
and
adc
push
das
push
inc
pop
lds
orl
mov
inc
and
adc
int
push
enter
loop
and
sbb
mov
icebp
inc
aad
pop
push
sub
adc
push
call
push
mov
fcomps
call
pop
es
xor
push
push
mov
out
xchg
test
data16
movsl
out
stos
push
int3
pop
fs
sub
in
jnp
pop
xlat
sbb
push
repnz
sbb
outsl
out
out
les
outsb
xchg
punpcklbw
shl
out
mov
jle
add
xchg
add
mov
addr16
mov
insl
xor
mov
xchg
or
fwait
ss
cld
jbe
mov
jmp
add
mov
push
or
sti
mov
pushf
cmp
jne
aad
lds
pop
int3
ljmp
aam
xor
jle
ss
sub
ret
out
push
cmp
push
stos
xor
subl
imul
jge
jg
mov
in
nop
and
pop
and
enter
add
ljmp
and
push
sbb
push
xor
jl
sbb
and
sbb
insl
mov
pop
es
and
bnd
sar
lods
push
push
scas
test
loopne
mov
jg
cwtl
mov
pop
xor
daa
lretw
xchg
in
popf
stc
push
lret
add
int3
out
pop
fistl
xchg
icebp
loopne
sbbl
add
aas
fsts
push
repnz
add
imulb
sbb
scas
mov
pop
loopne
ja
push
sarb
in
int3
roll
adc
inc
sub
xchg
test
adc
lods
or
and
cltd
arpl
testb
testl
pop
sbb
xchg
daa
mov
lret
mov
stc
sub
imul
sbb
gs
ror
xor
orl
or
xor
popa
leave
pop
inc
popl
icebp
in
mov
into
stc
mov
fbstp
pop
mov
fldl
cmp
push
push
dec
jnp
sar
jecxz
loop
mov
das
aas
push
ljmp
push
mov
movb
push
std
jmp
inc
mov
scas
inc
hlt
shl
sbb
pop
xor
mov
adc
and
cmp
scas
xor
xchg
dec
push
loope
test
pop
and
adc
push
rorb
mov
out
cltd
xor
push
xorb
sub
sbb
or
jmp
sahf
xchg
push
mov
or
mov
xchg
sahf
inc
adc
push
popf
out
xor
inc
xchg
aam
sbb
loopne
mov
xchg
repnz
mov
mov
jg
cmp
mov
mov
xchg
mov
lahf
add
stos
xor
test
outsl
xor
xorl
jp
aaa
hlt
xchg
xor
cmpsl
orb
jge
mov
jge
pop
pop
aas
push
mov
daa
add
subb
jle
mov
lods
cli
dec
sbb
or
jge
in
pop
jo
mov
ljmp
jnp
mov
or
push
mov
inc
popa
push
gs
in
push
cmp
das
rclb
arpl
dec
sti
push
mov
ljmp
pop
push
mov
lock
bound
pop
imul
out
stos
lock
xor
xchg
js
mov
cltd
scas
adc
adc
outsb
jg
xor
int3
mov
test
insb
in
sahf
int
mov
xchg
adc
push
imul
xchg
mov
push
and
jecxz
sahf
imul
sarl
inc
lret
dec
movsl
jae
sub
enter
into
push
pusha
loope
sub
pop
subl
xchg
insb
test
inc
in
daa
adc
mov
sub
and
xchg
jmp
push
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
pop
jo
popa
sbb
and
sbb
jae
cs
movsl
sub
mov
mov
mov
shll
pop
push
mov
xchg
orl
jb
jl
mov
cld
and
fldcw
cltd
cmp
jp
jno
dec
sub
xchg
subl
stos
mov
xchg
xor
jne
mov
sbb
test
mov
fistl
rcl
lds
jecxz
lods
leave
pusha
fisubl
push
stos
xor
mov
scas
lret
inc
out
fisttpll
nop
sahf
int
pop
jle
sti
rolb
bound
shlb
xchg
xchg
cli
adc
stc
mov
dec
nop
lcall
mov
movsb
xchg
or
mov
pop
pop
xchg
dec
iret
or
push
add
cmc
jg
push
loope
scas
rolb
lods
dec
lea
pop
push
idivb
in
scas
dec
fwait
sub
or
or
cld
pop
les
lcall
or
sub
sahf
mov
ficoms
lret
lret
xchg
fs
ss
ljmp
divb
clc
repnz
push
shll
inc
jno
xor
test
jp
hlt
and
adc
popa
fmulp
xchg
loop
scas
lods
or
cmp
loopne
roll
leave
orl
inc
mov
lods
inc
rorb
adcb
cmp
stos
dec
enter
and
lcall
shll
push
sub
outsb
sub
faddl
bound
ja
dec
outsb
popa
fxch
stos
cmp
bnd
add
ret
pop
mov
or
dec
test
xor
mov
aam
into
mov
inc
jns
jmp
mov
repz
sub
cltd
cmp
inc
add
out
cld
les
enter
popf
and
std
adc
adc
les
jae
adc
ret
cli
sub
shll
adc
test
inc
adc
js
push
mov
imul
stos
fsts
in
mov
mov
test
add
and
pop
mov
aaa
mov
arpl
dec
outsb
xor
cmpsl
mov
inc
je
xor
push
pop
insb
mov
xor
sbb
mov
inc
cmp
push
jl
pusha
xor
lods
lahf
jmp
xchg
push
movsb
fsubl
push
lcall
push
mov
jns
xchg
mov
out
fldl
and
dec
cmpsl
dec
mov
lods
sarl
addr16
gs
das
mov
in
adc
ljmp
mov
daa
cmp
xor
inc
add
pop
mov
std
xor
push
sbb
and
and
dec
adc
rorb
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
out
jo
pop
sbb
and
sbb
lock
repnz
and
scas
jecxz
fiadds
mov
rorb
fcoml
pop
out
adc
jecxz
insb
mov
cmp
hlt
out
sbb
lock
in
sub
loope
cmc
fdivs
cmp
mov
shrb
mov
shlb
adc
cwtl
add
and
jbe
negl
pop
jge
repnz
push
dec
add
cmp
mov
adc
xlat
mov
aad
mov
push
imul
jge
movsl
mov
int3
mov
in
push
dec
sbb
mov
xchg
movsl
addr16
stc
data16
fs
add
inc
lock
mov
jo
sub
lret
xchg
js
cld
rclb
addr16
cmp
dec
int3
incl
mov
ja
xchg
iret
mov
fcmovu
ret
mov
fwait
xchg
or
jnp
mov
xchg
out
movsl
jne
pusha
jp
xor
xchg
shll
loopne
leave
add
sub
and
aad
jl
push
inc
sar
jnp
clc
notb
mov
add
xchg
repz
bound
xchg
xchg
dec
mov
xchg
ror
push
popa
aas
mov
je
jl
rorl
icebp
inc
cmp
sti
fcmovne
std
mov
jg
mov
inc
sub
imul
xlat
test
jbe
cmp
inc
ljmp
mov
xchg
push
mov
add
in
leave
stos
out
icebp
testb
xchg
hlt
sub
pop
rolb
pop
movsl
adc
dec
daa
and
lret
ror
mov
nop
in
cmp
stos
dec
mov
js
xchg
xor
xlat
bsr
and
cmp
rdpmc
adc
push
cli
cltd
adc
pop
rol
lret
sbb
mov
mov
ret
inc
or
lods
cmp
or
push
js
fcmovnb
in
insl
cmp
loop
xchg
sbb
mov
or
std
jns
stc
nop
lods
sub
bnd
push
movsl
out
jb
cmp
stos
xchg
fsub
lret
mov
aam
rolb
xchg
push
std
or
sti
push
cltd
das
shll
in
orb
out
mov
mov
popf
xchg
jbe
mov
inc
mov
aas
mov
test
xchg
mov
test
aaa
jl
loope
es
les
movsb
xchg
in
and
dec
test
pop
loop
enter
test
shlb
ds
xor
or
test
fildl
sub
aaa
cld
leave
mov
mov
idivl
mov
or
add
inc
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
aas
push
fcomip
xchg
lahf
repnz
pop
pop
cmp
cmp
cmp
popf
cmp
fidivl
test
push
inc
sbb
loopne
test
add
fiadds
scas
fisubrs
mov
shll
pop
popa
clc
adc
out
or
fwait
in
xor
mov
aad
sbb
rcl
jns
jecxz
mov
fsubl
gs
out
add
out
outsl
or
std
std
lds
sti
ds
push
push
test
xchg
jg
or
mov
aaa
data16
roll
pop
xchg
mov
mov
sub
insb
jbe
es
sbb
and
mov
call
cmp
cmp
inc
mov
add
xchg
xor
iret
mov
adc
mov
les
and
mov
mov
test
rorb
push
ljmp
into
insl
sbb
js
out
dec
ss
out
dec
sbb
or
push
mov
daa
lret
push
ret
adc
scas
clc
into
lock
lds
xor
cmc
adc
fnstsw
jns
cs
mov
mov
and
push
push
popf
icebp
or
adc
outsb
inc
cmp
cmp
cmp
inc
add
lock
shll
dec
cwtl
loop
out
lret
push
es
pop
mov
popf
adc
inc
test
repnz
fidivl
outsl
outsb
repz
cmp
mov
out
cmpsb
mov
outsl
mov
adc
push
movsl
mov
out
out
and
mov
pop
pop
push
icebp
lcall
cmc
hlt
or
jno
in
je
testl
pop
ja
dec
in
mov
jg
mov
das
bound
jmp
push
stos
and
mov
mov
aad
and
cmp
incb
inc
in
xchg
and
pop
fidivrs
lds
out
pusha
xchg
sub
ss
repz
into
insl
jecxz
mov
mov
sub
inc
icebp
or
inc
mov
add
sbb
xchg
ret
aas
adc
sbb
daa
pusha
in
jmp
adc
fdiv
add
iret
pop
or
inc
mov
out
out
add
pop
jno
cli
cmp
dec
out
cmp
push
les
pop
addr16
cli
dec
notb
or
push
cwtl
and
jmp
scas
and
out
xchg
sahf
xor
mov
or
add
push
pop
shll
jle
fcompl
jp
mov
mov
jne
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
aaa
xor
sbb
push
dec
mov
xchg
pusha
xor
or
or
aas
psrlw
push
inc
test
mov
mov
sub
test
inc
xor
and
int
sahf
je
mov
xor
sub
lods
ret
addr16
repz
mov
dec
sti
invlpg
mov
lods
dec
loop
push
mov
sub
js
repnz
mov
nop
mov
add
pop
inc
ds
into
les
push
mov
jmp
cld
adc
and
push
jmp
imul
jo
jg
pop
add
inc
mov
pop
mov
aam
pop
test
out
push
daa
call
ja
xor
xchg
js
push
xchg
pop
and
sbb
leave
daa
lds
sti
hlt
stc
add
cld
mov
ja
les
pop
jge
cmp
imul
das
out
cwtl
aas
jle
sahf
adc
sti
sub
sbb
lret
cmp
xor
rcrl
push
pop
jp
les
test
inc
push
fs
shrb
inc
lea
test
push
or
subl
inc
imul
pusha
add
lret
fwait
fwait
sub
fistps
out
cltd
out
das
aas
or
in
lods
jns
mov
pushf
fdivrs
fdivrl
out
dec
rorb
movsb
ret
pop
mov
lret
or
sub
xchg
mov
cld
adcl
sti
aas
fisttps
and
lret
jb
and
mov
cs
cmpsl
or
dec
xor
and
mov
out
fwait
pop
sub
dec
pop
es
or
mov
mov
mov
cmp
push
pop
rcrl
mov
adc
out
dec
jecxz
xor
imulb
dec
scas
jnp
imul
and
shrb
outsb
mov
decl
and
dec
dec
daa
jo
mov
iret
out
cmpsl
in
push
push
fdivr
pop
push
scas
jecxz
fstpl
out
jmp
fiaddl
ffreep
outsl
push
dec
clc
mov
inc
out
xlat
dec
mov
sub
adc
ret
and
pop
or
ja
add
sbb
cmp
test
icebp
jle
sbb
sbb
or
and
in
fidivs
lea
cmpsb
push
ljmp
hlt
lods
in
and
cmp
xchg
sbb
add
jge
cli
les
ja
out
aad
xchg
xchg
inc
sbb
push
mov
mov
cmc
scas
loop
mov
sbb
or
jno
test
bound
mov
lret
mov
pop
test
xchg
jno
jg
repz
mov
sarl
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
jp
jl
dec
sbb
add
sbb
pop
fcom
fisubrs
std
imul
xor
sbb
mov
jbe
sbb
xlat
mov
push
jne
aam
and
add
arpl
cmpsb
cltd
addr16
xor
mov
push
mov
cmp
push
int3
sub
mov
adc
scas
in
ss
out
lcall
nop
je
fidivs
mov
jle
mov
push
cmpsb
ret
scas
clc
cmpsl
test
das
mov
mov
jb
pop
adc
aaa
mov
and
or
inc
pusha
push
xor
insb
inc
jl
test
xchg
sbb
jae
out
ror
and
testb
sub
andl
test
inc
jmp
adc
sub
movsl
in
xchg
xchg
jp
mov
jmp
adc
xor
sbb
jne
mov
scas
test
pextrw
dec
push
js
call
imul
rclb
loope
daa
sbb
add
outsb
imul
dec
jbe
sbb
rcrl
mov
adc
pop
mov
mov
inc
pop
pushf
out
shlb
xchg
nop
int3
cmpsl
in
test
scas
popl
ljmp
pop
sub
sbb
scas
popa
xchg
popf
cmp
repnz
cmp
pop
pop
dec
clc
dec
inc
inc
rcpps
rorb
push
adc
mov
jmp
mov
jno
jecxz
cs
xchg
sarb
stos
jbe
push
mul
mov
pop
shrl
xchg
out
fnstsw
out
arpl
xchg
das
jo
or
fdivrp
pop
packssdw
jge
sbb
out
mov
xor
jo
inc
movsb
pop
inc
or
pop
ret
cli
xchg
jl
cmp
mov
loopne
aam
jp
aad
mov
ds
mov
cmpsb
mov
mov
push
int3
test
in
das
jmp
mov
cmpsl
ds
jne
call
popf
jg
mov
sti
sbb
jne
outsl
and
mov
lods
je
mov
fucom
pop
shll
arpl
lret
das
mov
sub
cwtl
int3
cwtl
mov
sbb
jno
cmpb
lret
mov
lret
repz
lea
mov
repnz
sub
jns
xor
push
in
out
jne
fdivl
shr
push
xchg
mov
insl
sbb
push
scas
test
cmpsl
andb
jecxz
add
push
sahf
adc
push
lds
bound
ret
out
shrb
shlb
pop
out
mov
or
test
jecxz
mov
inc
mov
mov
push
lock
pushf
packuswb
jns
mov
mov
mov
mov
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
out
fbstp
sbb
sbb
adc
sbb
inc
jge
cmp
mov
fisttpll
add
call
push
mov
sarl
mov
adc
nop
scas
ds
clc
filds
das
in
out
adc
cwtl
mov
xor
js
push
dec
adc
xor
push
mov
lock
out
into
cli
inc
or
push
bound
push
xchg
test
cmp
mov
push
jbe
das
push
push
dec
imul
xor
out
in
fwait
out
repnz
sbb
lcall
mov
lret
mov
repz
fldl
in
mov
aam
or
hlt
sbb
pop
mov
add
out
push
cmp
mov
sahf
pop
hlt
or
xabort
dec
add
lret
mov
and
inc
call
sub
cmp
pop
fistl
inc
push
xchg
push
push
mov
gs
xchg
sbb
sub
sub
call
out
mov
daa
xor
pusha
mov
jnp
scas
cwtl
test
lods
pop
xchg
jecxz
test
push
pop
cmovg
aas
bound
jbe
out
mov
idivb
mov
addr16
mov
popa
or
pop
jo
and
cltd
clc
movsl
mov
call
mov
sub
loope
ljmp
sub
out
cmp
mov
mov
cmp
mov
xchg
pop
dec
mov
xor
test
adc
leave
push
shll
push
mov
push
andl
out
ja
insl
sub
movl
imulw
lret
mov
into
cld
les
push
inc
mov
mov
cmpsb
adcb
out
and
aam
adc
jae
add
cli
lds
and
mov
mov
sub
cwtl
sub
or
mov
push
add
xchg
push
sbb
mov
push
and
outsb
fwait
out
jb
stos
movsb
mov
stc
dec
sbb
cwtl
orl
cmpsb
iret
adc
jecxz
and
js
sub
mov
js
mov
and
mull
es
push
int
mov
cmpsl
cmp
out
adc
cltd
lahf
mov
mov
stos
xor
push
dec
jl
cs
filds
les
lock
mov
mov
dec
push
cltd
orb
jno
mov
cmp
fwait
cltd
ret
lods
popa
ss
jne
push
mov
ss
mov
pop
jnp
push
cmc
fadd
rorl
mov
cmc
fwait
shlb
xchg
jbe
mov
xor
push
sbb
add
fmuls
in
aas
or
mov
pop
push
push
ss
fdivr
mov
push
loopne
cmp
inc
rorb
lock
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
rorb
stos
add
sbb
fsts
dec
daa
addr16
fwait
and
outsb
int3
pop
mov
jge
inc
lcall
cmp
loop
test
in
in
subl
mov
jns
push
mov
add
repz
fisubs
fnstsw
push
and
jno
cmp
les
xchg
jp
pop
das
or
and
cli
adcl
es
lret
mov
mov
lcall
into
jns
les
sub
jl
mov
mov
sub
pop
inc
jecxz
in
add
mov
sub
lret
lea
lock
mov
loop
mov
notl
mov
pop
mov
fiadds
inc
stos
nop
push
push
or
cmp
inc
ror
add
push
rorb
mov
sbb
rclb
jo
popa
cld
add
jp
xor
xor
and
sub
and
imul
add
sbb
dec
push
jb,pn
enter
aaa
rolb
sti
jp
or
sbb
or
cmc
aad
push
mov
inc
push
sub
pop
enter
or
mov
or
pop
pop
loopne
xor
bound
cmp
cld
dec
add
scas
add
js
mov
push
stc
xchg
jo
ss
mov
cmp
push
dec
out
pop
xchg
mov
lret
test
ljmp
aas
je
fs
xchg
aam
in
test
outsb
call
jl,pt
iret
jmp
imul
inc
ret
out
jmp
lcall
shrl
jl
js
mov
int3
inc
cmp
arpl
out
or
daa
xchg
inc
test
hlt
andl
jg
fsub
lods
jno
push
imul
xchg
insl
inc
cmp
in
mov
imul
or
inc
inc
mov
sahf
sbb
mov
and
xor
lahf
mov
jge
sub
sbb
fs
pop
scas
or
movb
adc
inc
shlb
pop
negl
cmp
sti
outsl
add
xor
jbe
daa
dec
mov
rclb
xorb
jg
sub
shl
cs
mov
mov
xlat
pop
lsl
mov
push
push
and
adc
cmp
fcompl
dec
lock
and
loop
mov
xor
ret
rcl
out
jo
sti
inc
enter
push
popa
dec
push
test
xor
push
sahf
js
push
push
or
mov
insl
inc
xchg
lret
movsl
hlt
mov
sub
xor
mov
pop
jmp
dec
inc
jmp
fcmovbe
call
or
sub
jno
lds
xor
arpl
aad
push
pop
cmp
rorb
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
sub
call
adc
sbb
cltd
out
notl
sub
in
and
sub
cmc
jnp
ret
sub
pusha
pushl
scas
fildll
test
fistl
test
imul
out
cwtl
imul
sbb
inc
jl
add
cs
dec
loop
adc
je
jno
test
lret
test
jno
push
xlat
lret
adc
cmp
jle
sub
aam
ret
test
mov
dec
lcall
mov
mov
addl
push
or
es
rcll
and
jge
inc
dec
push
fwait
mov
jns
into
mov
gs
imul
cmp
fprem1
fisubs
adc
xor
jb
pop
js
clc
pop
mov
into
adcb
adc
jbe
adc
mov
pusha
or
push
leave
cltd
loope
loop
fisubrl
mov
gs
sub
lock
xor
sbb
outsl
daa
popf
popl
cmp
leave
lcall
pop
xor
inc
cltd
fcmovbe
mov
fcoml
test
daa
in
or
dec
cmc
es
inc
cs
out
in
cmp
sub
jo
or
imul
xchg
xor
adc
jge
mov
sub
mov
sub
jg
out
cmpsb
insb
clc
jne
stc
sbb
jp
inc
mov
int3
mov
mov
mov
dec
xorl
push
shlb
sub
in
adc
and
inc
fnsave
mov
lods
fwait
jp
cli
push
dec
pop
mov
xchg
and
xlat
xor
jbe
addb
xor
mov
loop
jno
mov
sbb
jbe
push
enter
inc
arpl
xor
or
cmp
xchg
aad
or
ljmp
hlt
jnp
dec
jmp
jmp
cs
pop
movsl
or
mov
push
test
loop
mov
pushf
stos
out
int
mov
fcmovb
aaa
mov
inc
cmc
xchg
jne
outsl
insb
sub
and
in
lahf
test
adc
es
sarb
inc
cmp
mov
xchg
mov
mov
stos
mov
lds
mov
push
pop
sub
nop
cs
mov
rcl
or
out
jecxz
xchg
adcb
mov
negl
sbb
mov
out
or
andl
adc
insl
cmp
mov
xlat
shl
fwait
cs
push
pop
adcb
dec
mov
aad
xchg
mov
adc
ds
and
gs
aad
fcmovb
lahf
mov
repz
pop
mov
aaa
dec
sahf
adcl
mov
mov
fwait
jbe
jg
cltd
or
test
cltd
adc
jmp
in
decl
cmp
add
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
movsl
mov
add
sbb
nop
push
loope
push
cmp
popf
icebp
mov
cmc
lret
es
mov
push
sti
testl
rolb
mov
mov
test
in
rorb
xor
xchg
and
adc
fs
adc
bound
imul
mov
cmc
push
dec
sbb
cltd
cmc
int
sahf
add
dec
inc
fs
movsb
into
push
mov
mov
push
dec
scas
or
lods
xchg
aam
push
mov
pop
xchg
in
stc
or
outsl
add
aas
mov
shr
cwtl
inc
daa
movsl
in
mov
loop
jecxz
test
add
add
cmp
outsb
add
xor
mov
mov
mov
pop
cmpsl
push
test
or
testb
pop
xchg
or
rcrb
dec
fxch
imul
mov
cmpsb
in
xor
adc
or
out
popa
xchg
mov
xor
scas
sahf
nop
loopne
xchg
scas
dec
dec
dec
movsb
jo
hlt
in
loope
ja
movsb
repz
inc
xor
cmc
sub
subb
fcoml
arpl
xchg
jbe
gs
movsb
cltd
out
dec
icebp
mov
repz
sbbb
add
imul
mov
pop
test
push
jecxz
test
popa
or
aaa
mov
lahf
mov
inc
adc
test
dec
mov
dec
test
repz
adc
or
cs
push
pusha
aam
rclb
sti
jmp
dec
cmp
push
loopne
rcl
add
pop
sbbb
dec
shlb
xor
mov
pop
push
sub
adc
jmp
jae
xor
xorl
xchg
outsl
loope
ret
mov
inc
mov
nop
clc
and
adcl
rorb
ja
dec
pop
sbb
dec
cltd
addr16
nop
pop
mov
dec
call
ret
cmp
test
sahf
sub
inc
and
sbb
jae
stc
cmc
push
adc
lds
pop
fnstcw
cwtl
xchg
xchg
mov
jmp
shl
mov
enter
xor
mov
mov
jecxz
sub
cmp
sub
lods
shl
push
push
jmp
push
orl
loop
jo
test
jmp
add
and
div
cmc
mov
and
pushf
mov
imul
in
es
push
mov
jns
sbbb
adc
aas
dec
xor
pop
and
test
cs
lds
inc
push
jmp
add
push
sbb
ja
and
sbb
add
sbb
xchg
adc
das
in
lret
roll
dec
ss
int3
inc
rolb
es
jne
mov
jns
inc
outsl
stc
ret
jbe
sti
pop
ljmp
pop
cld
repnz
push
mov
leave
push
inc
test
or
lods
xor
fsubrs
xchg
popa
sub
push
sub
jae
aam
push
in
mov
shrd
pop
mov
jbe
in
pusha
push
xchg
jg
fbstp
xor
mov
xor
gs
push
fs
cmp
xchg
sbb
lods
in
lret
sbb
popf
daa
add
dec
adc
test
xchg
shlb
cltd
adc
js
jb
push
bound
leave
lds
mov
jl
jo
insl
pop
pop
out
cld
cmp
test
mov
cmp
sub
jo
pop
imul
adcl
mov
dec
inc
in
sti
adc
mov
push
xchg
fs
loope
jo
inc
or
jae
leave
cld
bound
xchg
jb
jns
aad
push
sti
adc
js
fiaddl
push
ret
jge
cs
mov
sub
push
ret
mov
jae
push
ljmp
xor
out
and
inc
es
and
xadd
mov
inc
pop
lods
pushf
daa
lcall
inc
iret
fcompl
ja
dec
and
outsl
adc
mov
rcrb
orb
fs
stos
mov
sub
cmpsl
cmpsl
sub
lahf
mov
addb
inc
pop
xchg
or
inc
push
movsl
inc
push
cltd
pop
sub
ds
in
jl
ja
pusha
sbb
leave
dec
in
mov
lahf
xchg
mov
fadds
imul
repz
xor
movsl
popa
sbb
cmpsb
js
mov
pop
cmc
push
mov
add
push
imul
in
loope
outsl
add
iret
xor
pop
mov
sbb
mov
jecxz
push
les
pop
jns
shrb
hlt
bound
cld
call
inc
push
inc
test
dec
sbb
jmp
jmp
pop
fldt
clc
xor
xchg
shlb
pop
xor
cmp
int3
es
fistl
fldl
jmp
orb
leave
sub
daa
mov
cltd
aad
add
xchg
adc
and
fists
dec
jb
push
iret
pop
jle
or
sbb
mov
ss
repz
cltd
xor
fprem
bound
mov
mov
xchg
imul
out
adcl
or
sub
push
mov
push
sbb
inc
jle
repnz
pop
sub
out
and
sub
xchg
inc
adc
inc
mov
nop
or
enter
dec
js
push
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
sbb
jle
and
sbb
push
fidivs
stc
fbstp
lock
mov
test
xor
pop
cwtl
popa
outsl
sbb
int
test
push
mov
xchg
in
lret
repz
pusha
addr16
push
cmp
push
outsb
dec
inc
or
fadd
push
and
sahf
sbb
pop
mov
ficoml
sub
mov
mov
and
inc
fwait
mov
cmp
cs
add
jnp
pop
xchg
cmp
inc
mov
repnz
pop
jnp
add
mov
call
fsubrl
push
enter
mov
lock
adc
mov
inc
jg
lods
je
cmpsb
mov
cmp
out
and
je
sbb
mov
test
xchg
mov
sub
insl
dec
adc
cmpxchg
mov
aas
cmp
fildll
xchg
sbb
cmp
cwtl
push
inc
int
pop
jge
insl
shl
xor
stc
lds
mov
inc
inc
push
loopne
lock
or
dec
rcll
aad
nop
dec
inc
pop
std
pop
fwait
jnp
mov
xchg
stos
mov
sub
imul
imul
bound
pop
mov
cli
mov
insb
mov
push
fsubl
nop
inc
mov
jno
mov
out
jo
mov
scas
cs
sbb
or
mov
push
mov
mov
xor
jae
int
add
jecxz
add
fstps
push
push
mov
ror
push
stos
sbb
mov
mov
xor
out
mov
xor
adc
mov
xor
scas
aam
mov
pop
pop
dec
mov
pusha
rcrb
or
dec
push
inc
ja
bound
and
incl
icebp
or
push
ret
mov
adcl
rcrl
mov
jbe
fisubrs
and
out
jecxz
push
addr16
bswap
lcall
mov
mov
mov
adc
xor
scas
lea
cmp
nop
into
sarl
xchg
jno
pop
std
cmpsb
cmp
orl
jb
or
scas
pop
xor
mov
shl
test
lcall
shl
inc
or
mov
loop
adc
in
mov
mov
scas
and
mov
lret
and
cli
imul
das
cmpsl
test
punpcklbw
mov
push
push
data16
mov
pop
and
shl
xchg
movsb
or
icebp
lret
lods
out
jns
test
push
out
mov
stos
out
fiadds
pop
scas
cli
xchg
mov
inc
jno
scas
fnstenv
les
inc
lea
stc
es
lcall
outsl
in
mov
xor
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
bound
push
pop
sbb
add
sbb
xor
ss
shr
mov
mov
scas
fabs
adcl
orb
es
adc
arpl
xchg
mov
into
les
fistpll
mov
cmp
and
clc
ss
scas
cli
loop
cwtl
fmuls
insl
faddl
out
jns
cmp
xor
dec
push
sbb
mov
inc
cmp
cmc
lods
add
inc
stos
cmp
cwtl
sub
mov
inc
mov
insl
or
mov
inc
dec
cmp
mov
pushf
test
leave
mov
xchg
pop
fadds
xor
imul
jl
jae
pop
xor
hlt
out
test
xchg
test
nop
into
xchg
inc
add
sbb
dec
fidivrl
lea
aaa
loopne
push
push
adc
ja
jecxz
inc
jle
pop
cmp
rorl
daa
mov
inc
jg
or
idiv
and
sbb
cmp
mov
sub
mov
ss
repnz
fucomi
sub
or
imul
xor
addr16
push
xchg
stc
lret
cmpsl
fbld
jge
test
mov
outsb
inc
stos
in
lret
xlat
xor
add
mov
mov
cmp
mov
movsl
pop
xor
push
jns
add
mov
inc
dec
pusha
ljmp
fcompl
xor
mov
stos
jne
lret
aaa
and
or
cltd
lds
data16
xor
arpl
loopne
rorl
inc
xchg
lock
das
outsl
outsl
mov
or
stc
dec
aaa
pop
cwtl
iret
fsts
xchg
ljmp
test
cmp
inc
cmp
push
push
pop
xchg
cs
std
pop
cmpsb
jnp
in
xor
mov
or
fdivs
jbe
sub
sbb
fisubs
lcall
aad
or
sbb
stos
cmp
movl
and
xchg
mov
dec
cli
cmp
outsb
dec
inc
jae
pop
push
lret
sbb
lret
movsl
es
cwtl
mov
movsl
fdivl
pop
pushf
sub
or
arpl
jae
push
mov
add
xor
mov
adc
ss
sub
hlt
jns
popa
shl
ljmp
push
xor
outsb
mov
ljmp
and
sub
mov
dec
dec
mov
push
add
lret
lea
in
movsl
pop
dec
fadd
push
or
cmp
mov
daa
cld
mov
pop
pusha
int
mov
icebp
or
test
mov
pop
inc
xor
mov
outsb
mov
dec
rcrb
out
call
push
push
add
lods
rolb
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
jo
sbb
sbb
adc
sbb
and
nop
int
push
ss
pop
cmp
fcoms
lock
mov
adc
and
dec
cmp
dec
icebp
inc
lods
int3
adc
xchg
adc
jl
push
sbb
sbb
out
add
mov
je
jle
xchg
ret
test
xchg
repz
push
mov
mov
and
mov
pushf
iret
ret
push
loope
outsl
lods
bound
mov
mov
xor
outsl
in
add
lcall
pop
jge
call
push
hlt
xor
mov
cmp
jl
add
ret
int3
lods
mov
mov
cmpsl
movsb
rcll
andl
lods
je
xor
jle
pop
sbb
push
mov
lret
cmpsl
out
loop
loope
xchg
fldl
push
dec
incb
add
enter
xor
das
aaa
mov
jne
dec
hlt
lods
inc
aad
subl
dec
dec
push
mov
mov
fsin
std
in
lret
ja
popf
lods
or
fs
and
loope
outsl
cmp
out
aad
add
fcoms
xchg
or
or
xor
mov
xchg
add
pushf
out
aaa
adcl
inc
xchg
stc
or
jle
jge
fidivrs
mov
decb
hlt
cmp
gs
sbb
outsb
pop
mov
jbe
shr
inc
repnz
divb
add
and
divps
sbb
dec
into
xchg
loop
lcall
mov
mov
xchg
es
cmp
popf
add
subb
adc
cld
xchg
xor
out
out
lret
test
xchg
insl
inc
bound
mov
push
stos
inc
js
xchg
aas
dec
push
call
cltd
push
cmp
lods
lods
xor
inc
xchg
and
inc
cmp
shll
xchg
mov
and
in
xchg
pop
xor
pop
cld
in
mov
test
add
rolb
je
cmpsb
into
sub
call
sub
dec
and
pop
jbe
lret
dec
ss
xchg
push
or
test
loope
add
test
and
std
mov
mov
inc
xor
scas
popf
cmp
cld
mov
xchg
ftst
sbb
jecxz
cmpsb
push
notb
in
mov
inc
push
mov
dec
cmp
sub
jle
sti
aas
das
inc
mov
fistpll
mov
scas
and
aad
xchg
mov
add
mov
loop
or
adc
xchg
std
lods
shrl
enter
ja
loop
lcall
mov
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
inc
in
jmp
sbb
adc
sbb
mov
xchg
pusha
sahf
jge
jb
cli
jne
outsb
loope
push
fs
in
sub
inc
fs
nop
mov
and
and
xor
iret
lcall
xor
test
xchg
sub
xlat
cmp
ret
jle
repz
add
sbb
sbb
pop
jmp
imul
jb
ja
push
icebp
cmpsb
lods
sub
add
movsl
pop
mov
xchg
mov
gs
push
sahf
push
inc
dec
sbb
mov
xchg
xor
test
xchg
mov
cmpl
addr16
fadd
jecxz
out
shll
jp
repnz
movsl
fisubl
adc
stos
pop
ret
lock
adc
pop
imul
enter
sbb
in
jbe
add
xlat
adc
notl
jnp
mov
lods
sbb
push
cltd
push
rorb
repnz
and
movsb
dec
sbb
and
ret
movsl
sub
in
call
loop
and
sbb
leave
mov
das
jno
mov
inc
test
sbb
sub
inc
sbb
push
pop
loopne
dec
or
adcb
xor
push
push
loop
iret
leave
bound
inc
adc
lahf
adc
lret
les
xlat
lods
in
aas
out
mul
sbb
mov
or
fs
pop
push
adc
cmp
mov
cmovne
hlt
aad
stos
dec
push
or
mov
cmpb
inc
aad
cmc
stos
fistpl
imul
repz
sbb
in
xor
xchg
add
add
add
test
pop
mov
cld
lock
xchg
pop
imul
lahf
lahf
cwtl
cwtl
mulb
movsb
mov
sbb
add
inc
lea
cmp
data16
int
aad
pop
or
lock
dec
xchg
mov
pop
mov
add
fxch
jmp
insl
icebp
mov
mov
pop
push
mov
fstp
pop
test
dec
pop
aam
sbb
and
fnsave
int
sbb
mov
xchg
iret
pushf
test
or
dec
leave
inc
sub
dec
js
lret
ss
fs
mov
dec
in
xchg
pop
gs
mov
mov
shll
or
mov
lea
push
insb
loop
in
jne
add
into
sbb
jle
mov
xchg
xor
or
cmp
mov
notb
mov
loopne
adc
push
xchg
xchg
clc
push
pusha
or
pop
xchg
push
lahf
inc
or
cli
test
cmp
test
in
fwait
lods
jae
xchg
cmp
or
mov
inc
int
sbb
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
ja
jl
or
sbb
inc
lret
fidivrs
add
xor
xor
shl
pop
insl
iret
jg
jle
fidivrl
ret
cwtl
inc
lret
mov
dec
xchg
dec
xor
cld
mov
outsb
cmp
or
push
xchg
ds
xor
xor
cmp
ljmp
pop
lods
xchg
hlt
cli
cmp
data16
sbb
push
inc
dec
adc
sbb
test
add
add
xchg
or
mov
jmp
push
test
lods
jnp
scas
inc
push
or
bound
sbb
inc
lods
mov
insl
adc
dec
rcrb
test
push
out
fs
mov
int
dec
xor
ret
pop
idivl
mov
mov
ret
sub
fwait
mov
mov
cltd
mov
pusha
sub
jo
imul
xchg
fildll
test
pop
xchg
push
loop
sbb
push
repnz
hlt
add
or
mov
push
inc
leave
pushl
ja
xchg
mov
fdivrp
mov
pusha
cmpsb
stc
enter
push
push
pop
orl
pusha
push
mov
lcall
sbb
push
movl
sub
cmc
pop
push
es
pop
jp
out
xchg
pop
aas
iret
lsl
lock
xchg
cmp
loop
pop
or
lret
mov
cli
cld
fcoml
pop
pushf
cmpsl
das
ret
fstpl
imul
or
sbb
enter
aas
mov
outsb
aam
or
jl
or
push
fildl
dec
leave
lcall
cmp
mov
ret
lret
mov
and
pusha
cltd
int3
jmp
and
lcall
jbe
xor
into
cwtl
push
jnp
les
sbb
out
paddsb
xchg
fcomps
or
xor
add
aas
adc
stos
sti
in
out
mov
dec
sbb
mov
sbb
push
enter
jns
dec
lret
mov
add
arpl
popf
clc
mov
pusha
sbb
mov
jp
lds
jle
idivb
jns
pop
sub
sti
je
mov
adc
cmp
idivl
ret
jp
pop
aaa
add
scas
sub
filds
jg
imul
in
incb
add
nop
aad
jg
scas
sub
mov
sbb
jae
mov
test
shlb
and
jne
in
lods
and
loopne
push
dec
adc
mov
or
add
push
rcll
ljmp
test
inc
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
mov
sbb
test
sbb
mov
das
xchg
jle
push
push
je
jl
ljmp
sub
push
cmc
inc
pop
cmp
cmp
into
sub
and
faddl
jle
lock
mov
and
xor
add
push
add
jle
popa
shll
fcmovnb
push
mov
jb
mov
sub
out
fnsave
loop
or
cmp
jl
push
xchg
stc
dec
repz
hlt
ja
xlat
pop
add
pop
and
loope
dec
add
inc
mov
push
mov
mov
or
adc
mov
cmp
fs
outsl
adc
addl
ret
hlt
and
add
sub
sub
adc
pop
push
movsl
shlb
inc
push
cmp
cmpsl
inc
loope
and
and
push
sbb
xor
sbb
jmp
ss
xor
fdivp
insl
mov
push
dec
clc
faddp
lock
rcpps
sbbl
mov
enter
and
pusha
outsl
je
inc
int
jecxz
popa
jmp
inc
sub
push
repz
lds
dec
out
or
into
inc
push
or
push
mov
imulb
rorl
cmp
or
mov
pop
adc
adc
mov
test
xchg
movsl
mov
es
cmpsb
mov
dec
jnp
sbb
jp
popf
mov
or
dec
mov
mov
ljmp
adc
sti
dec
fwait
mov
and
cmp
jl
cmp
pop
mov
mov
xchg
sub
pop
push
jg
lcall
and
enter
push
stos
pop
mov
movsb
push
xchg
cwtl
and
adc
enter
mov
mov
movsl
mov
jmp
jmp
adc
push
xor
scas
adc
les
mov
data16
xorl
ljmp
fyl2x
arpl
jae
xor
and
stos
movsb
mov
add
ror
xor
mov
loop
push
iret
inc
inc
sbb
mov
dec
aas
xor
lea
push
icebp
repz
mov
int3
adc
cmp
xchg
scas
inc
call
and
push
mul
adc
dec
dec
call
dec
mov
dec
dec
adc
mov
push
pop
movsb
xor
push
inc
pusha
mov
jb
inc
pop
mov
sub
mov
inc
pop
in
sbb
mov
or
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
pop
aad
popa
add
sbb
push
sti
loope
jo
outsb
add
jecxz
dec
cmp
adc
lcall
popa
lret
push
sbb
and
cltd
test
and
sbb
leave
loope
sbb
jae
inc
test
in
insb
jmp
inc
jb
scas
xor
push
arpl
call
in
mov
test
mov
cmp
pop
int3
xor
out
ljmp
fiadds
out
cwtl
lods
movsb
icebp
into
ds
loopne
xor
pop
sub
loop
xor
pushf
mov
in
lock
sub
popa
add
cld
and
add
and
lret
mov
fs
fs
push
cs
iret
mov
test
or
inc
mov
xchg
lea
xchg
test
jl
xor
cmp
imul
adc
lock
add
cld
dec
mov
jae
fdivrl
sbb
mov
jecxz
leave
sub
adc
xchg
lahf
xchg
or
mov
icebp
sub
daa
inc
adc
ss
mov
loope
lods
xor
or
push
mov
je
sub
mov
flds
data16
ret
and
leave
addb
movsb
pushl
in
sbb
test
push
clc
pop
clc
rcl
stos
add
test
xor
or
adc
push
or
int
mov
into
push
xchg
cli
sahf
push
daa
insl
ja,pt
mov
loop
pop
and
cmpsb
fwait
jecxz
cmp
sarl
insb
pop
ror
int
jmp
mov
fs
xchg
inc
gs
xlat
xor
out
sub
lcall
popa
fs
and
pop
add
sub
pop
pop
push
test
xchg
xchg
add
scas
pop
xor
or
xchg
mov
mov
pusha
rcrl
js
xchg
mov
inc
add
cmc
stos
pushf
jae
mov
pusha
repnz
insl
outsb
in
inc
xchg
xchg
sub
lret
xchg
cmp
outsb
inc
aaa
cmp
bound
jbe
iret
lods
in
dec
jle
int3
xchg
out
ljmp
cmc
sub
push
jne
cmp
loope
test
inc
fbld
add
bound
popa
cmp
or
rcll
push
icebp
fnop
rcrl
scas
xchg
popa
add
or
stos
movsb
es
pop
lock
cmp
mov
ret
arpl
push
sub
push
dec
std
mov
inc
sbb
lea
in
sub
iret
and
loopne
inc
jae
nop
dec
sti
add
xor
sbb
ret
fmuls
scas
ret
or
add
sarb
lret
mov
ljmp
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
xor
sbb
jns
filds
xchg
jge
shll
jl
mov
in
mov
mov
pop
es
xchg
scas
sbb
into
test
bound
xchg
and
mov
data16
dec
sbb
cs
insb
inc
test
push
add
push
fcomip
xchg
cmpsl
inc
mov
or
aam
icebp
sbb
pop
lds
nop
push
jns
les
movlps
xor
sub
outsb
cmp
repz
sahf
sub
jns
inc
mov
mov
mov
std
dec
mov
sub
stos
lret
push
mov
inc
mov
je
and
jo
push
shl
xor
jmp
and
xchg
daa
xchg
mov
cmp
repnz
or
jmp
sti
out
add
test
aad
xchg
fisubrs
mov
cmpsb
mov
notl
jns
inc
movl
lock
mov
push
fidivrl
decb
je
adc
jg
fsubs
lret
ljmp
ljmp
mov
xor
cmp
xchg
popa
inc
test
js
pop
and
mov
cmp
aam
cmp
test
add
lock
ja
loop
dec
sbb
in
loopne
int3
ljmp
cli
cmp
lea
jle
sub
popa
xchg
shll
jae
cmpsl
inc
insb
adc
add
adc
adc
sbb
jae
enter
and
lret
xchg
mov
cmpsb
scas
push
push
xchg
cmpl
leave
ss
sub
cltd
cld
ficompl
xchg
enter
mov
jbe
jp
cmc
fisubs
imul
pop
fwait
push
jmp
xlat
aam
add
pop
or
fidivrs
adc
in
lcall
loopne
pusha
dec
in
addb
push
pop
sub
imul
divl
adc
dec
test
pusha
cmp
loopne
aad
ret
cmp
jno
xor
jmp
xchg
dec
push
ja
aas
ss
pop
and
push
ss
call
sub
and
roll
dec
ljmp
cmpsb
cltd
mov
imulb
inc
mov
jmp
int
icebp
mov
fs
aas
fistpll
xor
fcompl
and
push
int3
aas
sub
loop
out
in
mov
into
jns
lods
movl
movl
movl
movl
jmp
push
mov
fistpl
jae
jnp
xor
sbb
jecxz
das
mov
mov
int
loop
sbb
sbb
push
testl
jae
shufps
cmp
mov
jo
adcl
cmp
int3
dec
loopne
pop
and
fistps
jmp
xchg
adc
and
push
das
int
lds
add
or
mov
mov
or
stos
xchg
nop
mov
xchg
cwtl
into
push
jae
push
mov
sub
sub
idivb
jae
cltd
or
xchg
jle
inc
cmpsl
sti
pop
repz
xorb
pop
xor
lods
cld
inc
scas
std
lret
and
es
jp
pop
ja
fbstp
mov
xchg
dec
aaa
roll
mov
dec
popa
adc
pop
mov
lcall
clc
out
jmp
and
ss
test
lcall
mov
in
cmp
jle
cmp
iret
imul
xchg
stos
push
and
push
shlb
sbb
addb
ja
sarb
jge
mov
leave
xchg
jne
aam
imul
cli
jecxz
cli
mov
xchg
pushf
in
lock
xchg
pcmpeqd
jae
dec
xlat
int3
pop
aaa
pop
ss
xor
inc
and
test
pushf
pushf
es
popa
mov
xor
aaa
ret
repnz
repz
sahf
pop
into
sub
inc
push
mov
mov
addb
subl
cmc
popf
mov
out
stc
jg
jl
xorb
mov
mov
sub
sbb
outsl
jne
out
stos
lea
xor
inc
or
xor
adc
push
insl
cmpsl
out
outsl
pop
ja
push
or
cwtl
add
jnp
push
pop
ja
testl
xor
jmp
push
add
ljmp
lods
subl
mov
cs
mov
jg
cltd
iret
inc
adc
mov
fwait
mov
xlat
into
lahf
sbb
mov
nop
shrb
outsb
cmpsb
inc
push
mov
push
inc
cltd
frstor
jb
mov
xchg
sbb
imul
jno
mov
ficoms
test
and
insb
cmpsl
adc
das
and
test
mov
add
dec
mov
mov
imul
mov
popf
pushf
jp
mov
lods
movsb
xchg
movsb
fidivs
outsl
scas
jecxz
pop
xor
movl
movl
jmp
aas
mov
mov
dec
mov
jl
icebp
sbb
test
sbb
ss
loopne
mov
sbb
daa
enter
scas
adc
sub
xlat
mov
jecxz
xchg
out
add
xor
imul
out
mov
fildl
call
stos
das
or
cmc
ljmp
ljmp
daa
xor
lea
out
movsb
inc
fsubrl
add
and
dec
mov
or
ds
sub
pmullw
xchg
and
ja
jecxz
ss
cmp
aaa
fimull
int
pop
mov
xor
mov
mov
lock
adc
test
sbb
lcall
and
inc
add
jne
jl
sub
sbb
lcall
push
cmpsl
cmpsb
adc
lret
addl
push
xchg
add
dec
enter
mov
inc
into
mov
addr16
es
xchg
repnz
lea
stos
gs
adc
mov
movsb
out
pushf
idiv
fdivrs
pop
jb
std
mov
stos
pop
pop
cmp
divl
nop
push
and
pushl
push
inc
xchg
jecxz
je
subb
sub
push
or
repnz
jns
sbbb
add
push
fst
mov
ret
sbb
mov
cmc
or
jne
inc
jns
mov
out
mulb
sbb
xchg
add
sbb
mov
pop
rep
fwait
roll
jns
iret
cli
mov
mov
dec
add
or
push
mov
aas
imul
jl
adc
repnz
mov
sub
lret
add
push
shll
pop
inc
or
jb
and
adc
add
sbb
xchg
stos
cmp
and
clc
repz
testl
clc
xchg
sbb
pop
push
addr16
xchg
and
jbe
mov
pcmpgtb
lea
xchg
jnp
enter
jne
stos
rcrb
rol
push
insl
sahf
and
jb
xchg
pushfw
push
loopne
aam
xor
shll
sbb
and
mov
or
jno
cmpsb
xchg
cwtl
pop
jle
xor
inc
sbb
jae
ja
sub
ljmp
push
push
cmp
dec
cmp
jne
in
nop
or
nop
lods
cld
cmp
push
mov
xor
cmp
lret
int3
adcl
sbb
repz
into
imul
stos
push
notl
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
pop
inc
push
ljmp
out
out
es
add
adc
xchg
pop
sbb
xor
dec
clc
in
std
cmp
jp
imul
fsubs
aaa
loope
movsl
in
xchg
mov
push
lret
iret
jne
rcrb
adc
inc
cs
xchg
iret
push
xchg
or
push
mov
add
xchg
lcall
jb,pt
and
and
lock
insb
in
in
stos
xchg
pop
xchg
xchg
inc
sbb
stos
adc
mov
loope
cltd
pop
xchg
ja
mov
push
subb
inc
xchg
fsts
popf
rorl
rol
add
and
mov
cmp
test
mov
lret
fsubs
pop
push
mov
stos
aaa
jl
addr16
xchg
or
in
sbb
pop
loopne
ror
scas
xchg
in
pop
mov
rclb
es
xorl
jge
mov
pop
sti
and
inc
test
fsubs
mov
lcall
subl
ja
js
push
xchg
xchg
or
mov
xchg
or
shlb
xchg
jecxz
test
aas
and
movsl
out
xlat
in
sub
mov
dec
cmp
stos
or
inc
fld
mov
or
lods
int3
mov
push
outsb
xor
bound
cld
mov
loopne
mov
mov
push
xchg
pop
gs
js
jl
fldl
out
pop
mov
xor
and
decb
xor
int3
mov
adc
shrb
icebp
test
pop
ds
mov
mov
mov
lods
push
and
adc
test
jecxz
loope
lahf
cmp
adc
push
sbb
enter
in
cmc
xor
repz
push
les
dec
sub
mov
aas
add
lcall
jge
mov
fldl
jno
mov
or
xchg
cmp
or
pusha
lods
outsl
inc
daa
push
icebp
mov
xchg
ljmp
mov
in
popf
cs
imul
cmp
lods
sbb
push
call
testb
inc
call
inc
popa
gs
rcr
push
mov
xchg
aad
shlb
sub
xchg
mov
in
lods
cmp
lods
adc
push
or
addr16
cli
int
and
jnp
lret
sbb
aad
fisubl
fs
jns
xor
push
mov
lret
ds
orl
aas
pop
shrl
es
popa
xor
add
add
ret
fmull
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
mov
stos
xor
sbb
test
sbb
or
daa
insl
nop
mov
fcomi
and
cmp
jle
jge
xor
insb
mov
dec
add
jmp
hlt
hlt
jp
cmp
sbb
fdivrl
out
ret
lcall
jge
cmp
xchg
ret
add
stc
mov
mov
rcrl
in
sti
sbb
dec
test
and
cmpsb
lods
repz
xchg
jb
xor
inc
mov
pop
cmp
rcrb
jecxz
neg
lret
rorb
repnz
outsb
sahf
inc
ficoml
mov
inc
add
adc
dec
xchg
sbb
idivb
je
imul
sub
xchg
repz
fcmove
inc
je
mov
mov
fcmovnbe
jp
sbb
push
adc
mov
mov
les
sar
cmc
jns
push
dec
pop
sbb
push
scas
out
xchg
mov
iret
fldcw
mov
loop
test
jecxz
pop
fadds
pop
ficomps
out
clc
sahf
pop
pop
fdivs
and
sub
sbb
js
mov
push
pop
cmpsb
daa
mov
fsin
cmc
mov
fs
xor
sub
inc
mov
sbbb
pop
test
ljmp
data16
shlb
or
ljmp
pop
and
pop
lock
push
xor
mov
mov
popa
lds
int
lods
jns
bound
imul
lcall
and
sub
pop
dec
add
ficomps
test
sbb
sbb
pop
xchg
fdiv
repnz
jg
jo
push
int
cld
push
clc
js
jne
jns
aam
inc
adcb
mov
xlat
jb
pushf
mov
mov
add
inc
enter
sub
stos
fwait
xchg
out
daa
shll
dec
dec
ret
cmpsb
jp
jl
je
out
mov
mul
lods
scas
add
xor
rcll
push
stos
hlt
push
loope
cs
dec
pop
pop
xchg
mov
pop
pop
scas
pushl
mov
xchg
jl
and
lahf
mov
dec
mov
jge
push
aaa
scas
ror
rcrl
stos
jne
rcrl
imul
pop
insb
gs
mov
cld
and
lcall
dec
xchg
stos
inc
push
and
fs
lock
xchg
ja
add
in
dec
test
stos
aaa
addl
mov
insl
rclb
arpl
pop
lock
dec
mov
dec
stos
aas
sub
rcrl
das
or
inc
outsb
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jo
loopne
sbb
aam
xor
push
dec
push
aas
mov
shr
dec
sub
lds
inc
movsb
push
out
ret
idivl
jne
inc
pop
mov
mov
and
roll
xor
xchg
push
out
std
sbb
mov
lcall
adc
xor
dec
xchg
sbb
xchg
fnstsw
add
xchg
or
clc
int3
cmp
xchg
mov
call
jno
shlb
and
jnp
mov
sbb
push
popf
push
mov
sbb
fdivrp
sbbb
mov
in
push
cmp
test
sti
or
mov
out
aas
scas
dec
in
arpl
je
jnp
fwait
xorl
mov
xchg
mov
lcall
adcl
pusha
dec
sbb
jp
pop
mov
dec
or
adc
mov
enter
xor
sbb
leave
hlt
sub
aam
repz
mov
push
out
dec
fstpt
dec
rcrb
mov
xchg
push
dec
sub
popa
and
push
sub
pop
sbb
pop
gs
and
xchg
cmp
shll
das
mov
dec
aas
xchg
or
fisubl
mov
pushf
adc
fcoms
testb
lods
push
bound
cmp
out
out
cmc
dec
leave
leave
dec
sbb
popf
lock
fs
cmp
or
lret
ds
and
int3
mov
movsl
sub
xchg
shll
mov
adc
ss
frstor
int3
cltd
add
mov
add
dec
pop
xchg
inc
gs
xchg
dec
fmull
jnp
bound
xor
rolb
pop
adc
sbb
or
out
rclb
fisubs
mov
xchg
or
jmp
lret
jl
ret
pop
pop
jge
enter
rcrb
jnp
mulb
mov
mov
cwtl
fs
mov
orb
xor
jl
outsl
outsl
sub
mov
jmp
jge
push
fisttpl
aas
mov
inc
shlb
dec
pusha
xor
data16
adc
cmp
daa
jecxz
inc
movsl
cwtl
adcb
outsl
mov
fisubl
jno
iret
aad
rcrb
sbb
call
jns
rorl
in
frstor
pop
dec
cmp
adc
test
cmpsb
lods
dec
bound
mov
stc
testb
pop
add
jns
push
mov
or
stos
arpl
cltd
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
hlt
dec
jle
ficompl
sbb
adc
sbb
aas
out
mov
ja
xchg
add
or
ss
push
and
repnz
mov
or
enter
ffree
pop
inc
add
jns
xor
lods
xchg
xchg
jmp
clc
dec
pushf
cmp
jns
xor
sbb
lret
stc
test
stos
inc
mov
mov
xchg
lock
xor
stos
cmpsb
push
int
cld
cltd
jae
or
jp
js
push
mul
adc
and
test
aaa
cmp
call
jg
and
movsl
repz
adc
dec
bound
lods
xor
movsb
mov
popa
in
adc
inc
lds
fs
mov
xor
dec
jp
inc
test
gs
mov
dec
outsb
cwtl
pushf
movsl
or
sub
mov
mov
pop
jp
gs
cmp
or
xchg
lret
mov
cltd
xor
outsb
popa
daa
adc
sbb
popf
sbb
mov
sbb
mov
pop
push
pop
mov
daa
push
cltd
sbb
mov
push
pop
sub
cmc
adc
sub
in
popf
sbb
cmp
sbb
fisubrs
nop
and
and
fstpt
push
outsb
push
shll
stos
outsl
or
nop
add
lds
outsl
pop
loop
jnp
out
add
test
push
leave
jnp
sbbl
xchg
or
xchg
test
mov
enter
stc
mov
es
mov
aas
insb
sbb
arpl
xchg
add
out
adc
inc
xchg
adc
das
ret
push
int3
out
test
in
bound
dec
cmpl
dec
sub
repnz
jge
sub
cmp
ljmp
not
pop
mov
ja
xlat
roll
cltd
lods
and
mov
push
in
push
aas
nop
ret
add
stos
repz
jmp
inc
jmp
test
insb
stos
push
daa
sbb
cmp
into
pop
mov
or
fnstcw
jb
mov
fwait
ja
les
js
dec
clc
out
cmp
jo
sti
inc
adc
lock
mov
inc
and
adcb
jmp
fs
push
cmp
push
jne
test
lods
scas
dec
jp
xor
test
out
or
add
scas
pop
icebp
jp
mov
xchg
loop
xor
scas
inc
xchg
push
test
dec
sbbb
lea
out
fiadds
movsb
fneni(8087
mov
ss
jb
pop
sub
xchg
jp
idivl
in
or
data16
mov
mov
pop
pop
scas
js
das
sub
aas
and
sahf
je
sbb
pop
fisttpll
les
mulb
das
sub
hlt
js
adc
subl
dec
mov
push
mov
fidivrl
sbb
shl
and
into
ljmp
icebp
fsubr
dec
nop
loopne
lods
dec
bound
imul
cmp
xchg
mov
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
nop
pop
jo
aam
sbb
adc
sbb
sti
pop
cs
mov
cld
and
test
xor
lret
mov
iret
jo
add
mov
jo
sub
and
pop
inc
sahf
sub
xor
bound
pop
ss
hlt
push
fsub
ljmp
fists
test
cmp
mov
mov
outsl
sbb
outsb
xchg
sbb
mov
mov
cmp
mov
push
add
jmp
sbb
fwait
rcr
pushf
xor
fadds
xchg
daa
nop
xor
push
neg
loope
neg
dec
aad
outsb
pop
movsb
push
int3
fidivs
push
jmp
dec
les
adcb
cld
dec
leave
adc
push
jmp
push
xchg
gs
rcrl
dec
lret
jecxz
in
dec
jno
out
push
lds
cmc
xor
in
mov
outsb
sbb
sbb
stos
fcompl
jbe
or
stc
inc
out
mov
in
repnz
lods
scas
adc
in
and
ja
cmp
scas
fimuls
out
xor
xchg
push
ret
sub
push
iret
push
fnstcw
test
mov
das
pop
mov
adc
xchg
cmp
mov
cmp
ret
fwait
push
inc
pop
fldenv
push
repnz
std
adc
mov
add
mov
adc
gs
ret
and
mov
outsb
ds
call
notb
repnz
dec
imul
sbb
movsb
mov
js
mov
inc
inc
mov
in
xor
inc
std
paddusb
mov
jmp
cmp
shl
cmpsb
xchg
clc
mov
xchg
jmp
dec
mov
adc
rclb
xor
daa
andl
mov
cwtl
jnp
mov
lahf
adc
push
lods
std
sub
or
enter
incl
lock
dec
push
std
inc
negb
pop
hlt
out
sbb
mov
cmp
pusha
je
xchg
mov
push
xchg
out
push
adc
popl
aas
push
xlat
in
jle
test
imul
inc
pop
sahf
pop
outsb
es
xchg
xor
cmp
xor
test
int3
lcall
push
insb
mov
fadd
sbb
dec
lea
shll
mov
push
push
call
stos
rcll
pop
dec
andl
jo
xchg
push
loope
mov
out
cli
dec
xorl
ss
je
rcll
adc
push
mov
aam
pop
incb
xchg
mov
fdivrl
ret
jne
test
enter
dec
pusha
cwtl
roll
insl
aam
xchg
sub
mov
dec
aad
lahf
pop
add
pusha
dec
bound
aam
test
loope
lret
popf
sbb
or
inc
sub
mov
pop
and
or
ret
sub
cmp
pop
adc
cmpsl
sbb
iret
jg
sbb
movsb
mov
daa
incl
out
mov
scas
cwtl
and
mov
pop
int
xorl
inc
movsb
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
mov
cmpsl
das
fcomip
aaa
dec
std
aaa
insb
push
pop
pop
push
mov
out
mov
mov
aam
mov
rcrl
mov
push
movsb
add
cmp
stc
jbe
jne
leave
push
sahf
and
gs
shlb
popa
add
fcoms
ret
cmc
jne
pushf
push
movsl
test
sti
inc
sbb
pop
jne
sbb
mov
outsb
ret
mov
das
aaa
pop
sbb
stc
mul
and
dec
int3
fwait
cltd
push
stc
fsubr
lods
repz
std
test
gs
mov
sbb
shll
xchg
or
out
mov
mov
clc
mov
cmp
xchg
mov
lock
loop
cmp
add
lahf
push
xchg
test
dec
subl
je
inc
sbbb
ljmp
orl
mov
push
xor
hlt
gs
cmp
into
sub
dec
imul
xchg
add
xchg
inc
mov
mov
push
out
jbe
mov
mov
repz
enter
orl
push
das
add
add
aas
das
cmpsl
cltd
in
mov
test
lds
xor
xchg
mov
clc
cmp
mov
dec
js
jns
push
pop
fmull
sbb
es
test
sbb
subl
mov
jmp
icebp
cmc
lock
dec
lcall
push
mov
ljmp
xorl
sub
xchg
popa
mov
mov
stos
mov
out
jp
dec
cvttps2pi
in
add
aad
cltd
sbb
jp
aam
xchg
shlb
repz
push
cld
cmc
pop
xor
test
push
inc
push
mov
test
mov
test
push
mov
ret
pop
mov
rorl
xchg
ss
bound
cltd
and
jecxz
xor
add
xadd
ds
lret
out
aad
sbb
arpl
push
in
jns
pop
push
loope
cmp
mov
add
iret
cmpl
sub
shlb
faddp
push
cs
scas
cwtl
pop
inc
fcomps
outsl
sti
sar
sub
clc
pop
dec
mov
xchg
mov
inc
in
cwtl
mov
mov
stos
mov
mov
mov
pop
or
push
sbb
gs
push
aaa
insb
ret
test
or
adc
fstpt
mov
scas
mov
jp
iret
data16
hlt
lods
push
pop
adc
jmp
pop
mov
cmpb
mov
sub
je
test
mov
cmp
cwtl
imul
add
loopne
xlat
ljmp
adc
mov
pop
fcoml
mov
popa
jne
inc
out
sub
xor
cmpl
inc
roll
inc
xor
lahf
ss
xlat
ja
sti
pop
lds
dec
inc
mov
xorl
jl
popf
pushl
repz
add
sbb
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
sbb
push
push
sbb
xor
sbb
mov
daa
lahf
out
xchg
mov
ss
insb
loope
add
stos
rcll
repz
push
mov
inc
inc
push
xchg
lahf
and
daa
shrb
out
pop
jo,pn
push
fcoms
cmp
jno
push
mov
ss
ret
imul
fs
ss
shr
mov
cmovs
test
inc
dec
outsl
mov
add
lea
mov
mov
xchg
mov
aas
aad
or
push
pop
out
call
mov
jne
pop
lds
mov
sub
fisttpl
add
lea
fiadds
jb
sbb
repz
ret
jne
leave
xchg
inc
imul
mov
lcall
mov
push
sub
add
nop
mov
addr16
mov
cmp
xchg
and
out
scas
dec
orl
mov
movsb
sub
cmp
mov
adc
call
xchg
sbbl
pop
cmp
into
dec
mov
aaa
gs
mov
dec
ret
mov
mov
xchg
in
pop
mov
mov
dec
push
mov
psllw
data16
sbbl
inc
or
call
cltd
decb
inc
loop
arpl
add
xor
or
rcll
fiaddl
sbb
stos
push
gs
rcl
sahf
xor
mov
mov
mov
ret
mov
jecxz
data16
shll
xor
ljmp
mov
xor
sbb
mov
inc
mov
xchg
push
add
sbb
fsubrs
data16
pop
repz
or
or
popf
aad
sbb
inc
aas
aaa
dec
mov
pop
movsl
cli
jl
aad
pop
push
mov
xchg
fst
mov
xchg
push
fstpt
outsb
push
scas
and
push
iret
and
clc
add
inc
inc
adc
sbb
sub
xchg
mov
mov
lret
rol
out
cmp
cltd
cli
mov
and
jbe
or
pop
ret
cwtl
out
imul
jnp
stos
xchg
pop
sub
inc
imul
pop
popa
dec
ss
add
sbb
fdivrl
pop
aaa
hlt
std
fimuls
cs
pop
mov
cwtl
sbb
dec
pop
stos
dec
sbb
aas
mov
sarl
pop
mov
ficoms
ret
mov
pushf
cmp
rcl
pop
xchg
add
pop
xorb
mov
neg
cmp
xchg
or
sbb
push
xchg
mov
xchg
repz
dec
mov
cmpb
stos
fnstsw
jb
inc
mov
sub
clc
mov
fdivrs
out
out
mov
out
movsl
xchg
cmc
mov
cmp
stos
adc
js
xchg
aas
test
int3
sub
aad
shlb
sbb
jmp
stc
dec
and
insb
fdivr
xchg
xor
add
add
in
or
sub
les
pop
mov
jno
fistpll
inc
adc
mov
cld
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
cs
jle
mov
sbb
ds
imull
jns
insl
repz
cmc
movsl
jp
mov
lcall
shll
cltd
mov
repz
mov
sbbl
ret
dec
adc
dec
xor
jle
inc
xchg
push
sub
xchg
mov
nop
pop
pop
jecxz
pop
cld
inc
cmpsb
dec
dec
dec
pop
rcrb
outsb
pushf
adc
cmpl
xchg
int3
fidivrl
pop
adc
or
loope
divl
push
out
movb
pop
mov
sbb
das
pop
sbb
scas
pop
outsb
in
pop
stos
inc
stc
and
js
push
mulps
dec
daa
fnstcw
push
add
mov
ss
test
xor
shlb
mov
lcall
addr16
sahf
mov
mov
pop
cltd
xor
rorb
sub
outsb
stc
pushf
and
lret
mov
in
or
daa
jae
dec
addr16
pop
jecxz
clc
daa
out
mov
in
lret
adc
popa
gs
mov
xor
mov
in
mov
fs
pop
insl
cltd
push
out
jns
ljmp
inc
rorb
fdiv
xchg
push
jae
or
in
xor
jle
mov
or
cmp
hlt
dec
cmc
sahf
cmc
and
testb
cmp
dec
mov
out
icebp
mov
jae
jge
cmpsb
add
stos
fiadds
sub
inc
imul
cmp
dec
push
xchg
jecxz
lea
mov
ret
imull
jb
sub
leave
mov
mov
fldl
fmuls
add
aaa
adc
and
sbb
fidivrl
pop
push
mov
jns
pop
and
clc
stos
lret
hlt
out
pushf
lods
and
pop
cli
adc
popa
out
mov
mov
sbb
lcall
push
pop
negl
outsl
mov
jmp
fisttpl
add
int3
xchg
stos
mov
into
sbb
mov
jl
mov
jb
out
rol
sti
add
loopne
mov
mov
lret
loop
lret
sbb
test
insl
sub
into
inc
ds
mov
xchg
jl
xor
cs
stos
push
pop
xchg
js
sbb
and
movsl
push
test
pushf
loopne
push
sub
les
shrb
stos
push
icebp
jnp
or
jno
insb
testb
imul
cli
popf
xchg
out
mov
stc
repnz
xor
insl
add
movsl
andb
fisttpll
mov
xchg
out
adc
xchg
and
movsl
popa
out
aas
das
iret
and
rorl
ja
sbb
nop
imul
sub
mov
jb
mov
cs
fdivs
test
ret
scas
inc
pop
or
jb
sbb
jno
rolb
lcall
arpl
stc
mov
push
sbb
mov
mov
jmp
and
xchg
lcall
outsb
pop
std
frstor
sub
pop
sub
and
xor
out
fwait
orb
and
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
mov
sbb
adc
sbb
frstor
inc
mov
aaa
out
mov
iret
xchg
pop
mov
push
orb
aaa
dec
lock
pop
push
mov
test
fistpll
cmp
pop
popf
movsl
push
filds
and
pop
cmpsb
push
add
loopne
lock
add
rclb
imull
loopne
daa
push
xchg
xchg
xor
sti
lcall
jne
test
mov
bound
xchg
cs
adc
or
xchg
push
jbe
or
mov
in
mov
dec
dec
insb
js
fmul
clc
outsb
sub
push
insl
das
shl
pop
xchg
push
xor
inc
xor
inc
shr
rdmsr
mov
imul
test
sub
and
in
in
pop
dec
sub
xchg
std
jg
jne
int3
shrb
cld
mov
mov
aaa
test
mov
pusha
jl
xchg
leave
insl
push
test
cmpsb
fisttps
aas
push
pop
arpl
ds
or
and
insl
pop
leave
lock
mov
pop
je
sbb
fstpt
fldl
cli
push
sub
cltd
xor
test
scas
add
lods
mov
movl
leave
dec
das
dec
test
ljmp
sub
mov
loop
sbb
pushf
rol
adc
shr
subl
mov
pop
cmpsb
and
xchg
and
movsl
in
add
pusha
jae
lahf
mov
aad
enter
push
int
test
div
or
jb
inc
fsubp
sub
dec
lcall
mov
jg
enter
rclb
cmp
sbb
mov
jbe
test
test
sbb
mov
aad
jae
shll
sbb
pusha
popa
add
hlt
out
xor
popf
or
push
xchg
sub
int3
int3
pop
xchg
rcrb
add
leave
pop
adc
adc
xchg
repz
sahf
cmp
ficoml
mov
lret
sub
fistpl
clc
popf
in
xchg
call
test
pop
clc
test
push
ja
out
add
cmp
sub
std
notl
int
nop
inc
push
push
adc
lahf
pop
mov
out
loope
jmp
mov
jmp
xchg
lret
loopne
pusha
popa
rorl
pop
mov
pop
sub
daa
mov
test
or
loop
add
movsb
jns
jb
add
adc
fwait
pop
jae
fst
mov
test
push
adc
add
insb
cld
ds
test
outsb
iret
xchg
mov
jp
pop
mov
scas
push
arpl
stos
jbe
icebp
pusha
lcall
ss
filds
and
sub
mov
jnp
adc
push
sub
jle
xchg
add
fimull
xchg
jp
adc
pop
and
mov
repnz
movsb
mov
and
xchg
aam
cmp
scas
jg
inc
pop
and
cmp
pop
mov
addr16
xor
mov
lcall
mov
push
outsl
loopne
add
or
or
testl
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
in
push
mov
sbb
adc
sbb
sub
es
jb
add
fisttpl
nop
jbe
shlb
jno
dec
fs
dec
pop
adc
xor
ja
data16
test
jge
popa
inc
cmpsl
or
fmuls
lret
ret
mov
or
push
sub
cmp
mov
jl
into
dec
lahf
push
xchg
in
sahf
ds
pop
mov
sbb
cltd
xor
mov
cltd
lods
into
xchg
dec
mov
out
cmpsb
sbb
and
xchg
pop
add
sbb
lods
xchg
xor
lcall
pop
inc
add
jge
test
or
mov
mov
add
mov
mov
icebp
dec
in
adc
lods
es
nop
test
lods
push
adc
mov
repz
lods
jno
inc
int
movsl
mov
aaa
pop
cs
push
les
sbb
rcl
fiadds
jb
sti
push
pop
in
pop
aas
mov
inc
inc
and
aad
mov
in
std
fistps
es
jl
mov
out
inc
xor
ret
push
sbb
ret
sub
cmp
incb
or
push
call
aam
addr16
sub
inc
xchg
testb
fwait
mov
adc
xchg
and
xchg
cmp
sbb
inc
push
popf
lock
push
inc
outsl
xor
pop
sub
adc
repnz
out
mov
fwait
mov
std
inc
sub
sub
adc
mov
lahf
stc
dec
mov
dec
fnstsw
mov
lcall
dec
test
js
sbb
push
in
cs
xchg
int
cmp
lock
dec
xchg
jbe
jne
or
imul
adc
jno
cmp
inc
out
test
scas
daa
jne
sub
inc
fldl
sbb
inc
jg
jl
and
cmp
mov
push
push
cmp
cmc
sti
xchg
push
leave
dec
sbb
mov
gs
repnz
test
movsb
xor
add
or
int
bnd
push
lahf
jb
or
std
add
cmp
fidivs
das
js
or
mov
lea
sub
adc
cmp
or
ror
int3
je
adc
xchg
sarb
lock
cmp
mov
jns
xchg
xchg
jnp
adc
mov
sahf
jns
in
ja
loop
in
xchg
lock
in
push
dec
sub
bnd
lret
scas
ret
or
insl
lods
sub
jg
push
mov
jmp
xlat
imul
adc
cmp
adc
aad
arpl
mov
add
push
mov
cmp
add
push
std
mov
in
push
test
push
adc
mov
outsl
dec
sahf
add
fisubrl
add
loope
stos
adc
rolb
fs
shl
out
outsb
mov
sub
lcall
dec
scas
mov
arpl
sbb
adc
lret
pop
shlb
cli
cmp
mov
sbb
pop
out
cmc
sub
iret
out
call
pop
out
sbb
test
or
pusha
inc
fs
aas
movl
sub
jnp
pop
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
stos
outsb
lock
test
test
insl
out
fcompl
sbb
sub
push
inc
adc
mov
mov
cmp
clc
pop
cld
sbb
dec
mov
leave
je
mov
movsl
loope
in
jl
lahf
ja
popa
jl
jbe
xchg
sbb
pushf
negb
add
ds
cmp
ret
int
adc
inc
lret
push
mov
mov
cmp
repnz
mov
sub
call
dec
loopne
aas
ret
sub
mov
lock
sub
pop
les
xchg
jle
jo
in
imul
dec
movb
lcall
lcall
sbb
add
inc
pusha
mov
push
adc
dec
dec
test
or
add
adc
add
das
loop
jbe
xchg
std
and
or
dec
lds
xchg
sbb
out
ret
test
enter
xor
inc
imul
xchg
pusha
mov
add
clc
adc
movsl
aam
in
mov
das
in
repz
pop
aas
push
jp
out
adc
push
sbb
xor
scas
mov
outsl
out
mov
fisttpl
mov
in
push
push
dec
xlat
movsb
cmp
pop
test
or
paddd
cltd
mov
cs
popf
adc
imul
push
test
into
stc
and
push
loope
adc
int
repnz
xlat
xchg
sbb
fucom
loope
dec
xor
mov
sahf
jg
mov
pcmpeqb
sub
in
call
insl
mov
out
push
sub
cltd
subb
test
inc
xor
sub
repnz
cmpsb
or
fwait
aam
add
jg
sbb
aam
popf
jecxz
fsts
lock
enter
pop
mov
fadds
test
movsl
dec
into
stos
pop
aaa
adc
je
mov
ss
push
push
lods
fdivrs
jnp
cmc
sarb
inc
dec
mov
xchg
sub
inc
push
xchg
push
push
jmp
sbb
push
jg
dec
scas
jge
sub
push
push
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
enter
jae
jne
cmp
movsb
or
push
nop
test
std
out
pop
int3
cli
add
mov
jmp
or
inc
cmp
mov
push
mov
ret
and
mov
lods
rcl
mov
test
nop
loop
mov
cmp
ljmp
push
scas
imul
lea
mov
inc
js
dec
add
lods
lea
inc
test
movsl
ret
pop
lea
xor
fisubs
lea
mov
imul
xorl
popa
add
pop
test
mov
popf
jle
scas
xchg
dec
mov
mov
mov
loope
mov
xchg
add
das
or
sahf
lods
and
xchg
sbb
jl
xlat
stos
ljmp
in
lock
sbb
stos
mov
faddl
fsubrl
sti
push
mov
popa
sub
lods
call
jo
addr16
clc
mov
cld
sub
enter
cltd
mov
je
cld
popa
cmpsl
test
loopne
out
sub
push
xchg
mov
jno
push
mov
call
mov
pop
gs
mov
hlt
cmpsb
jmp
push
stc
testl
sahf
or
mov
xor
pop
xor
ss
pushf
je
out
imul
out
jle
add
dec
jle
cld
test
bound
sub
cmc
icebp
mov
shr
pextrw
push
loop
ljmp
mov
mov
mov
pop
pusha
test
stc
lcall
sbb
arpl
cmc
lods
insb
mov
mov
aam
in
pop
aaa
adcb
leave
xlat
fcmovne
inc
or
adc
ficoml
clc
or
jae
stos
scas
aad
add
daa
notb
std
mov
pop
pusha
add
jl
ljmp
pop
mov
sarl
into
mov
mov
gs
in
int3
cmp
in
sarl
repz
sbb
sbb
popf
adc
inc
call
push
lock
push
jmp
sub
and
jb
push
stos
pop
dec
jmp
sbb
push
dec
sub
dec
jnp
shl
lea
xchg
cs
add
in
testl
cmc
addr16
dec
addr16
dec
inc
or
mov
inc
lea
dec
push
pop
xchg
fcmovb
fsubrs
out
lock
and
lret
push
pop
nop
add
or
gs
jns
inc
repnz
pop
cs
dec
or
sbb
adcl
mov
xchg
jno
sti
cmpl
cmpsl
xchg
inc
xor
pop
cmp
roll
repnz
scas
int3
jecxz
add
cmpsb
pop
js
push
bound
imul
sbb
out
sub
or
sub
push
adc
inc
repnz
fs
and
in
xchg
pop
pop
pusha
bound
push
or
jmp
mov
je
popf
dec
sub
push
lret
mov
in
test
sbb
adc
jne
sbb
add
hlt
add
insb
xorb
sbb
cmpsb
fptan
add
jmp
loop
les
gs
cmpsl
hlt
in
mov
cmc
mov
ss
pusha
push
xchg
cmp
xchg
jge
stc
inc
popa
cmp
pop
repz
in
sahf
push
inc
imul
xor
insl
cmc
aam
xchg
loope
and
or
xor
sbb
mov
shr
push
sub
dec
cwtl
shll
icebp
or
popa
mov
lods
push
das
lahf
stos
xchg
sub
insl
dec
outsl
mov
push
inc
sbb
mov
aad
xor
sub
leave
xor
xlat
mov
mulb
mov
mov
dec
sub
sbb
popf
repz
sbb
mov
fnstcw
jmp
push
in
push
insl
sub
pop
pop
call
cmp
sbb
xor
aam
scas
repnz
and
inc
sub
loopne
xchg
fildll
fiadds
rorl
popf
hlt
call
test
xchg
out
cmp
aam
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
push
aaa
push
pushf
sbb
test
cld
xchg
fldl
orl
xor
int3
into
test
out
or
es
pop
push
pop
orb
xchg
mov
sub
mov
jp
mov
jb
dec
mov
mov
fcoml
nopl
test
xor
test
add
pop
sub
iret
insb
xchg
jl
mov
sti
cs
les
push
push
out
mov
mov
pop
adc
xor
test
sbb
sbb
cmp
cmp
lock
cmpsl
arpl
test
fucomip
push
cld
in
repz
fs
fists
in
mov
mov
push
pop
test
orl
or
ja
int3
mov
bsr
cmp
fstpt
lds
xchg
fcomps
arpl
sub
pop
pop
sbb
loop
bound
cli
shlb
adc
lods
mov
add
push
loopne
mov
dec
ret
aad
and
push
dec
mov
fcoms
sti
jle
jne
add
out
incb
xchg
jge
jg
popf
add
aas
jb
aad
dec
mov
and
cwtl
cmp
mov
es
jno
sub
scas
sahf
insl
mov
push
sub
xchg
ja
sub
jle
dec
mov
xchg
push
adc
sub
or
das
leave
sbb
mov
adc
mulb
out
pop
mov
stc
fsubrl
mov
fstp
imul
jge
adc
ret
fimuls
loop
imul
push
cltd
xchg
sub
nop
shlb
mov
js
pushf
mov
int
mov
cmc
adc
inc
sahf
xchg
rolb
and
ljmp
mov
sbb
and
jb
rcl
mov
mov
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
daa
mov
cmp
sbb
cs
ficoms
pop
sub
mov
pop
fcoms
pop
ss
mov
fdivrl
dec
push
bt
ds
imul
hlt
xor
mov
pop
xchg
cmp
sahf
xor
add
pop
addr16
orb
add
loope
stc
outsl
aas
int3
mov
push
jbe
outsl
call
jo
nop
popf
dec
xchg
xchg
sbb
inc
add
test
les
loop
fmuls
lret
movsl
adc
push
mov
push
test
add
ret
movb
adc
push
ret
stos
dec
in
hlt
mov
test
stc
iret
adc
cltd
inc
jo
mov
xchg
jge,pt
dec
clc
cld
or
mov
ljmp
jle
inc
mov
add
sbb
add
jae
ds
mov
in
das
cmpsb
jg
push
insb
mov
mov
fidivrs
je
arpl
lret
sahf
sub
cmpsb
sub
pop
lods
mov
push
dec
mov
pop
or
inc
fwait
mov
sub
and
je
ljmp
das
es
add
cmp
xor
lds
xor
fistpl
xchg
fstpt
fwait
call
sbb
jge
sbb
or
js
sub
rclb
into
mov
xor
mov
xchg
sub
cld
and
inc
push
ret
jno
push
sub
jb
es
js
mov
or
in
cmp
pop
adc
dec
xchg
sub
popa
inc
mov
mov
push
aaa
rolb
push
outsb
mov
shrl
mov
loope
mov
lods
inc
xchg
add
xor
out
lods
cmpsl
sbb
sbb
sbb
inc
pop
ret
nop
in
clc
fdivl
aaa
ja
out
mov
into
pop
test
xor
stc
push
and
push
push
push
pop
mov
in
ljmp
sahf
test
cmp
push
fcomps
stos
inc
mov
or
lret
add
cmpsl
sbb
sub
mov
hlt
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
dec
push
sub
dec
xchg
call
and
sub
xor
or
jae
ret
fmull
jg
cmp
into
lcall
mov
sbb
push
les
push
subl
push
nop
lahf
fbld
sbb
and
cmp
mov
mov
rolb
test
add
push
out
lahf
fs
pop
jbe
pop
idiv
pop
pop
call
cmp
xor
pop
sub
or
sbb
enter
and
jns
or
out
dec
or
in
jmp
pusha
sbbb
add
mov
outsl
push
test
sbb
jg
int3
mov
pop
jne
fsubrl
cmp
int3
gs
push
shr
push
fwait
mov
cmp
ret
imul
sbb
sub
stos
inc
inc
mov
push
outsb
xor
insb
jbe
pop
sub
movsl
sahf
push
sub
sbbl
ret
sub
pop
stc
adc
rolb
iret
xchg
cmp
fsts
and
xor
adc
jle
xchg
jne
mov
ja
mov
pop
imul
adc
jne
mov
push
sub
and
cmp
mov
cmp
xchg
mov
test
cmp
xchg
fldt
mov
push
xor
cmp
popf
jbe
lds
daa
cmp
les
fidivl
lahf
lret
pop
jb
out
pop
daa
mov
dec
xor
inc
sub
mov
cmp
adc
lds
out
inc
ds
rclb
mov
sahf
nop
adc
push
jne
and
rolb
cmp
push
xchg
xor
andb
and
das
pop
addr16
cmpl
scas
sub
xor
es
adc
aam
inc
jnp
xchg
pop
push
int3
mov
mov
sub
adc
cwtl
enter
iret
or
mov
xor
or
jmp
push
and
mov
mov
test
xor
loope
add
adc
dec
dec
mov
mov
xchg
mov
mov
push
in
aaa
int3
add
jo
es
dec
push
xchg
mov
cmp
jo
popa
adc
push
stos
je
out
or
mov
or
xor
das
add
mov
xchg
xchg
mov
testl
or
push
xor
roll
sbbl
rep
jo
push
fnstsw
int3
sbb
pushf
push
rolb
bound
cltd
mov
shl
pop
and
aaa
lock
sub
push
ss
jg
int3
aaa
test
and
xchg
pop
push
jne
lahf
test
xor
insl
pop
cltd
fimuls
in
or
in
bound
loopne
pop
scas
xchg
cltd
dec
jg
or
loop
loop
out
sub
lock
mov
and
std
xor
ja
popf
inc
es
out
cmp
cli
shlb
push
sbb
adc
pop
xor
push
adc
gs
jb
rolb
jnp
imul
mov
cwtl
int
pop
inc
xchg
int3
fs
xor
mov
jnp
cld
faddl
dec
or
lahf
push
ret
stos
sbb
mov
push
push
xchg
mov
pop
adc
xor
int3
xor
push
sub
dec
or
aas
pop
push
mov
sub
jnp
mov
cwtl
int3
adc
in
loopne
jno
pop
cmp
mov
xchg
jmp
xor
out
inc
xchg
sbb
scas
mov
inc
adc
cld
je
fsts
jae
adc
inc
scas
scas
fildll
jp
jg
ret
mov
lcall
xchg
push
or
mov
pop
add
adc
vdivsd
add
mov
dec
sub
mov
mov
in
or
xor
push
fwait
loope
mov
mov
cld
mov
jnp
rorl
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
aaa
push
mov
sbb
xchg
roll
pop
loope
arpl
mov
fimull
inc
mov
pusha
fscale
pop
pop
popa
jb
jl
or
jb
inc
loop
ja
icebp
inc
adc
roll
rcrl
shr
call
or
xchg
shlb
icebp
mov
sbb
mov
lahf
in
push
in
cmpsb
jge
add
lock
jmp
int
pop
and
jo
and
aam
cld
fildll
aad
scas
or
test
mov
arpl
fstpt
daa
pop
das
fistps
xchg
and
adc
or
pusha
enter
sbb
loop
adc
cmp
daa
adc
cld
pushf
add
fcmovbe
mov
enter
sub
jg
call
mov
jo
jmp
add
adc
jno
xor
push
xchg
lock
inc
add
mov
mov
subb
test
loop
dec
imull
in
stc
push
mov
pop
inc
dec
push
add
movsl
notb
mov
xchg
lods
adc
lret
mov
pop
inc
fwait
mov
test
sub
jl
fsubrl
mov
mov
jbe
cs
stos
xorb
aad
inc
shll
sahf
into
and
test
les
push
cli
or
xor
repnz
outsl
popa
leave
rol
push
xor
daa
mov
mov
imul
int3
xchg
jge
mov
or
pusha
hlt
jge
push
push
aad
inc
test
jb
rcrl
jl
fadds
add
sbb
mov
mov
out
push
mov
xchg
xor
mov
xchg
test
mov
pop
mov
xchg
int
mov
fs
sub
cs
inc
mov
shlb
out
pop
mov
add
rcrl
dec
mov
dec
popf
rol
aad
push
daa
insb
xchg
aad
out
mov
data16
and
test
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
jo
xchg
sbb
sbb
mov
jno
xor
pusha
ja
push
push
arpl
adc
les
pusha
adc
lahf
fdivs
cmp
sub
mov
adc
inc
or
push
clc
repnz
aas
xchg
push
icebp
stos
xor
cmpsl
cmc
mov
insb
sbb
add
jmp
aas
xor
jae
push
addr16
or
clc
mov
sahf
pop
fs
jae
int3
xor
lods
add
notb
aaa
repnz
mov
or
jae
push
ljmp
mov
fldl
cmp
jne
fsubr
jecxz
cmc
jnp
shrb
mov
push
sub
stc
pop
sub
sbb
sbb
mov
inc
je
xchg
adc
push
pop
in
fisubrl
sbb
sbb
sbb
out
add
mov
and
lods
or
xor
imul
jmp
xchg
lahf
inc
pop
aad
ljmp
out
sub
xor
into
add
jl
push
lods
dec
adc
lea
mov
jmp
ret
jle
mov
add
and
cmp
push
cmpsl
lret
or
ja
add
xchg
mov
loopne
add
jo
mov
lds
mov
std
sbb
xchg
ret
lods
mov
xor
fs
imulb
adc
iret
xor
fisubl
stc
addr16
das
cmpl
jo
in
cld
shl
push
mov
dec
adc
aad
mov
sbb
sbb
jae
ret
cwtl
push
mov
fdivr
aas
sti
cli
rcrl
mov
sbb
cmp
pop
in
inc
mov
shll
in
les
mov
adc
mov
lcall
fcompl
push
push
mov
and
rolb
inc
and
lcall
lret
push
ficoms
and
and
iret
shr
test
inc
push
xor
inc
jecxz
pop
mov
dec
xchg
je
out
xchg
enter
dec
push
dec
imul
icebp
jge
xor
cmpsl
xor
xchg
mov
lahf
mov
pop
pop
in
push
mov
or
jns
es
jnp
mov
test
mov
shl
and
xchg
adc
fmull
dec
mov
cmc
punpckldq
gs
fsubs
adc
push
push
pop
sub
and
in
jp
bound
cmp
out
sbb
pop
shll
cmc
dec
mov
mov
xchg
xor
mov
inc
sbbl
sti
fcomi
aam
das
sbb
int3
push
push
xor
mov
in
mov
cmp
fsubrp
sub
cmpsl
sub
sti
inc
mov
in
sbb
mov
imul
js
aaa
push
inc
push
xor
int
mov
addr16
and
xor
lret
jbe
rorb
hlt
bnd
jle
inc
out
dec
insl
adc
jae
movl
jmp
into
jne
inc
sbb
pop
clc
push
inc
push
sbbb
jns
sbb
sahf
les
pop
movsb
insl
mov
into
inc
aam
xchg
push
bound
xchg
mov
movl
les
jno
push
jbe
push
inc
testl
pusha
std
push
repnz
cwtl
jo
and
dec
pop
mov
mov
out
fcompl
addb
adc
sub
mov
push
or
mov
add
mov
xchg
loope
xchg
xchg
sub
cmp
lret
ss
mov
sbb
dec
dec
cmp
adc
pusha
stos
cmp
fdivr
repz
andb
jg
xor
lods
push
int
dec
push
xchg
xchg
lea
out
cld
outsl
not
adc
mov
adc
and
sahf
roll
pop
mov
arpl
stos
push
in
stos
into
push
sahf
jmp
pop
push
sbb
or
inc
inc
or
pop
jg
les
stc
xor
cmp
cmp
cli
ja
mov
int
sbb
xor
rolb
dec
inc
mov
cld
lret
idivb
ret
ret
rorl
stc
mov
pop
stc
cwtl
outsb
sbb
and
xor
cli
add
in
jge
push
jne
in
mov
pop
cltd
push
out
lds
add
add
mov
into
inc
fidivrs
sbb
mov
jbe
add
cwtl
jne
stos
repz
loopne
sub
inc
inc
sub
sbb
scas
pop
pop
sbb
jb
jb
xor
push
jl
inc
clc
ja
push
bound
fs
imul
xor
jne
xchg
jle
outsb
inc
inc
mov
pop
jb
aam
and
jl
loop
cld
outsb
jmp
faddl
ja
push
movb
les
mov
xor
inc
push
test
push
dec
test
jnp
out
insl
cmp
and
fistps
loop
rcrl
jmp
mov
enter
hlt
jp
sub
call
dec
div
jp
cltd
cmp
cwtl
call
les
sub
iret
lea
lret
daa
inc
push
mov
inc
hlt
mov
mov
or
out
mov
repz
dec
push
ja
stc
lahf
jo
sub
push
inc
in
cmp
dec
adc
and
ja
aaa
lods
push
cmp
popa
mov
mov
push
out
sahf
rorl
push
int
ror
icebp
mov
pop
fsubrs
cwtl
lods
imul
clc
repz
dec
inc
jle
jle
push
inc
cltd
arpl
loopne
inc
jns
pop
push
lods
cltd
inc
jb
fldl
inc
mov
add
inc
lret
sbb
push
enter
test
dec
insl
addr16
inc
stc
pop
mov
test
mov
inc
jl
cmp
icebp
cwtl
pop
xchg
sbb
aam
into
pop
aad
push
sub
add
cmc
pop
inc
mov
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
inc
nop
mov
test
adcl
mov
jp
xchg
shlb
dec
aad
lds
cmp
inc
jns
mov
jno
and
sbb
leave
and
or
jge
pop
in
xor
into
jg
mov
push
sti
ret
jb
or
mov
adc
jnp
out
sbb
sub
mov
pop
test
ret
fidivl
mov
int
lods
ja
cltd
or
hlt
lds
orb
adc
rol
xchg
adc
mov
push
stos
pop
stos
jne
xchg
aaa
mov
ja
push
mov
jne
insb
adc
mov
pop
xlat
xchg
bound
xor
dec
inc
test
fs
sub
pop
add
test
pop
xor
aam
stc
dec
pop
das
inc
dec
add
sbb
dec
test
jno
mov
test
sbb
pop
addr16
sahf
mov
push
pop
clc
cs
or
test
lret
leave
in
jmp
xchg
pop
mov
insl
sbb
je
mov
gs
push
icebp
dec
call
sbb
leave
movzbl
jo
or
icebp
fwait
dec
lock
xchg
cmpsb
sub
insl
or
and
mov
out
movsb
out
add
pop
and
dec
fbld
mov
or
in
sbb
mov
fdivrs
mov
jle
out
fnstsw
lahf
mov
fs
push
pop
and
pop
jmp
mov
cmpsl
xchg
cmp
js
xlat
mov
xor
jge
call
jge
pop
movsl
and
xchg
cmpsb
daa
pop
dec
dec
repz
xchg
xor
into
mov
mov
cmp
js
jb
pop
lcall
xchg
push
xchg
jns
ret
dec
insb
imul
loope
ja
inc
rcrl
popf
out
lods
enter
xor
push
push
int3
jno
mov
ljmp
scas
xchg
out
pop
inc
cs
mov
repz
or
dec
ret
cmpsb
push
pop
stos
xor
xchg
std
jbe
adc
xor
lods
pop
mov
push
sbb
jne
pop
repnz
cmp
sbbb
push
mov
shrl
lods
loope
shll
outsl
lret
mov
cmp
pop
mov
test
mov
or
push
and
and
out
mov
jmp
adc
jp
mov
pop
jg
std
js
jne
es
imul
or
test
cmp
test
push
mov
pop
lods
leave
loop,pn
sub
outsb
test
or
and
jno
dec
sub
sub
shl
push
adc
in
cmpsb
mov
loopne
pop
out
loope
and
pusha
push
lret
ljmp
shl
popf
inc
xchg
in
push
fdivp
shr
mov
mov
test
inc
add
ficoms
xchg
popf
cmp
xchg
add
xchg
fbld
cmp
lock
sub
push
test
jo
repnz
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
cmpsb
cmp
xor
push
in
jle
in
cmp
movsl
pop
int3
rcrb
dec
ret
stos
inc
xor
pushf
in
mov
pop
das
pop
jb
xlat
pop
xchg
ret
adc
out
pop
mov
pop
out
sarb
dec
movsb
sbb
dec
outsb
xor
pop
mov
sub
jge
mov
out
ret
js
rol
and
pop
inc
mov
in
divl
stos
dec
jae
test
mov
jle
xor
std
into
sahf
enter
xor
push
arpl
int
ljmp
daa
sahf
hlt
out
scas
sbb
cmc
call
xchg
cmp
je
cmpsl
pop
lahf
fcompl
push
dec
add
mov
dec
pop
sbb
roll
aad
jp
or
mov
bnd
mov
lds
mov
cmpl
fidivl
push
dec
lods
mov
rorb
insl
dec
nop
mov
and
cs
push
and
xor
dec
out
push
fcmovnb
stc
pushf
lahf
iret
stos
into
pop
loope
xchg
jae
mov
leave
out
xchg
sbb
and
hlt
sub
int3
insl
push
sbb
xchg
xchg
and
lea
push
dec
add
jno
xor
lea
inc
xor
int3
push
pop
movlps
xor
sub
dec
cld
cmc
cmp
adc
fldcw
push
shl
and
add
mov
push
sbb
mov
mov
test
popf
cmp
dec
test
and
mov
call
cmp
jae
cmp
enter
loop
push
andl
adc
loopne
xchg
pop
movsl
fs
adc
pop
or
lcall
in
out
pusha
sbb
and
adc
shll
pushf
xor
fsubrl
inc
push
fwait
inc
push
ror
xor
mov
fcoms
inc
cmpsl
add
push
add
add
lods
mov
jle
js
mov
jecxz
hlt
dec
sti
aad
cmp
sub
jecxz
mov
jbe
iret
mov
fildll
mov
adc
xor
push
test
cmpsl
mov
pushl
jne
jle
enter
test
icebp
inc
dec
out
cs
mov
push
xchg
mov
out
les
rcrb
inc
or
cmc
cwtl
icebp
int
jno
test
test
mov
jns
cmp
hlt
inc
sbb
dec
sub
pop
test
jge
popf
cmp
out
add
ret
push
arpl
inc
lock
dec
mov
cwtl
movsl
dec
out
xchg
jl
shrb
hlt
xchg
mov
and
jecxz
xchg
mull
xchg
push
sbb
and
mov
pushf
ljmp
pusha
cmp
shlb
in
lods
xchg
push
addr16
imul
dec
pop
scas
negl
sbb
mov
or
sub
add
cmp
call
sbb
sbb
lods
add
imul
clc
xlat
insl
andl
shrb
mov
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
sub
sbb
sbb
iret
and
add
pop
xchg
jnp
add
sbb
insl
sbb
push
xchg
adc
bound
fs
jle
xor
mov
loopne
pop
lahf
push
jg
jns
cmpsb
and
popa
mov
add
push
repz
insl
ljmp
test
inc
movsb
cmpsb
adc
sub
bound
nop
mov
cwtl
push
cmc
adc
fdivr
lcall
fmul
les
ja
fs
out
or
jl
in
push
outsl
sub
and
jns
and
arpl
add
lods
mov
xor
mov
dec
stos
jno
es
xchg
pop
inc
cwtl
inc
or
ret
cmp
rcl
das
idivb
jl
jo
or
mov
in
inc
rclb
mov
xchg
loop
or
js
inc
idivl
call
lret
bnd
cmp
insl
shr
scas
add
stos
cwtl
cmpsb
adc
int
sub
stos
jae
dec
cltd
jb
mov
ljmp
cmc
push
or
sub
das
pop
xchg
cmp
out
pop
test
andl
scas
xlat
mov
and
dec
sub
xor
push
in
mov
or
call
jno
pop
cmpsb
mov
popa
sub
mov
adc
cs
sub
shrb
xor
or
cwtl
pushf
cmp
fldt
jmp
sbbb
scas
icebp
stos
push
xchg
out
cmpsl
push
adc
push
mov
jge
das
out
and
add
ljmp
inc
es
lahf
pop
push
or
mov
stc
stos
jmp
xchg
out
cltd
push
lret
data16
inc
push
ret
arpl
loope
cmp
pop
push
add
mov
test
aam
cmpsl
sbb
mov
inc
lret
icebp
aas
stos
out
popa
mov
mov
notl
inc
dec
jbe
mov
sbbb
or
mov
popa
pop
int3
fildl
rol
jecxz
ja
addr16
mov
sub
inc
jl
clc
inc
jne
sub
cmpsb
xor
jecxz
pop
sbb
push
bound
leave
pop
pop
adc
sbb
adc
push
loop
aas
rcr
out
pop
aam
jns
mov
or
and
je
push
mov
stos
jno
push
push
cmc
lcall
movsb
xchg
out
dec
movsb
stc
mov
lock
fidivl
push
dec
sbb
leave
mov
xor
das
xchg
push
add
dec
daa
ja
pop
and
mov
hlt
push
fstl
fistps
xor
movsl
fidivs
mov
loope
mov
dec
scas
inc
ljmp
lret
mov
mov
repnz
push
insb
pop
add
pop
xor
loopne
cs
xor
push
cmp
or
dec
cmpsl
mov
ret
jnp
xor
sub
push
jne
or
cltd
cltd
sbbl
out
lcall
dec
rcll
pop
and
cmp
pop
push
cmp
xchg
fs
jb
movsl
push
jge
pusha
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
push
sub
jns
sbb
cmp
dec
daa
sbb
jae
imul
push
arpl
mov
and
std
or
xchg
jo
int3
ljmp
pop
xchg
and
jp
arpl
mov
push
dec
cmpsl
xchg
cmp
sbb
or
insb
lds
fidivrl
lahf
xor
jle
filds
xchg
je
enter
adc
ret
jecxz
lret
dec
cmc
div
insl
adc
jle
adc
jecxz
lret
arpl
dec
js
and
adc
outsl
or
hlt
mov
cld
in
xor
jns
cmpsb
xchg
sbb
add
mov
out
sbb
stos
data16
jne
xchg
ljmp
and
xchg
in
pusha
push
sbb
pop
sarb
add
and
mov
in
bound
fs
int
inc
and
cld
jno
shr
je
mov
cli
jl
pop
fdivs
xlat
xor
in
add
stos
push
jecxz
sbb
mov
mov
and
rcl
testb
sbb
jmp
mov
sbbl
fcomp
cmp
lea
xor
test
xchg
push
pop
mov
sti
push
aaa
mov
jge
dec
mov
outsl
les
leave
pop
cwtl
push
pop
and
sbb
pop
lea
lea
and
out
aaa
sbb
jmp
adc
repz
dec
and
xchg
push
xchg
xchg
movsb
scas
push
adc
sbb
dec
cmpsl
pop
cmpsl
roll
in
movsl
insb
insb
dec
outsb
mov
dec
test
enter
mov
mov
mov
jg
xchg
sar
fwait
cwtl
cld
scas
loopne
sahf
mov
mov
xchg
test
or
clc
xor
pop
xchg
repz
xchg
outsb
sahf
mov
testb
js
pop
push
jb
test
mov
lock
dec
icebp
scas
xchg
jae
adc
sub
sbb
xor
jo
lret
addb
mov
and
xchg
xchg
notb
cmp
adc
cli
inc
dec
call
mov
fs
sbb
add
addr16
je
pop
jo
push
xchg
in
sub
fcomp
in
adc
rcll
xchg
mov
or
dec
mov
test
rolb
inc
fsts
jl
xchg
test
in
mov
aad
add
sbb
cmp
aas
lods
les
les
pop
mov
les
and
dec
setae
fidivl
jbe
push
add
loope
add
mov
push
sub
iret
or
cwtl
lods
cwtl
lret
cltd
xor
cmpsb
mov
dec
mov
pop
bnd
imul
adc
cmpsb
push
add
jae
adc
push
stc
cmc
mov
je
ret
mov
jno
adc
mov
xchg
sbb
cmpsl
mov
in
jbe
aas
push
repnz
fcmovnbe
das
xchg
push
test
sbb
inc
xchg
rcrl
es
nop
sahf
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
xlat
and
mov
adc
sbb
xor
cltd
outsb
add
in
fdivrs
loope
xchg
ficompl
ja
stos
rcr
jp,pn
pop
jnp
sahf
and
push
subb
fs
hlt
xor
outsl
cmp
or
out
adc
aad
mov
pop
stos
or
add
and
sbb
stos
dec
in
fs
adc
out
pop
xor
mov
mov
inc
dec
inc
ljmp
test
fildll
jg
inc
adc
adc
aas
push
xor
dec
rorl
dec
roll
lcall
adc
lods
mov
lods
ret
pop
inc
out
js
mov
shll
sbb
mov
xor
mov
sub
mov
stc
fisubrs
in
mov
fcomp
add
lahf
jbe
stc
stos
sub
push
push
int
int3
and
in
push
add
sbb
movsl
cmpsl
jge
je
jge
in
outsb
cmp
loop
addr16
push
je
or
jle
enter
cli
mov
and
sub
movsl
aad
pop
xor
pop
or
out
add
orl
andl
outsl
mov
push
push
hlt
sub
ja
movsb
push
xchg
movsb
sbb
ds
sbb
dec
xchg
lods
repz
inc
push
in
xor
mov
pop
daa
je
data16
negb
ficomps
shlb
cmp
mov
mov
mov
push
call
rcrb
xchg
or
cmp
aam
aas
mov
add
xchg
adc
ja,pt
jnp
cltd
jl
faddl
jbe
andl
cltd
ret
inc
adc
push
fdivr
adc
sub
pop
cli
out
mov
fisttpll
in
notl
or
int3
cmp
andb
out
xor
or
sbb
sbb
adc
lea
insb
pushf
jle
jmp
call
jmp
mov
or
and
aad
sbb
insl
pushf
out
xchg
inc
cmc
sti
xchg
das
pop
or
cltd
stos
nop
lods
aam
cld
lcall
dec
bound
icebp
scas
inc
add
dec
sbb
jp
adc
or
jne
loop
mov
push
cmp
sbb
sub
add
adc
add
sarl
adc
jge
inc
inc
push
pop
ficoml
stc
mov
sub
loop
ja
aad
mov
fcompl
xchg
in
push
aaa
push
aam
lods
stos
push
add
jg
mov
cmp
scas
out
jnp
clc
ljmp
ja
xchg
nop
mov
lods
pop
sub
sub
rcll
mov
call
pop
pop
push
jecxz
jo
insb
xor
xchg
cmpsb
pop
aas
pop
mov
imul
fcoms
dec
and
mov
shll
scas
add
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
push
cmp
pop
sbb
je
sbb
aaa
testb
loope
dec
loope
or
roll
sub
sub
outsl
enter
es
adcl
xor
das
mov
mov
pop
les
stos
jge
or
jbe
pop
pop
mov
lret
sub
jmp
out
repz
or
ret
xchg
rcrl
pop
jecxz,pn
addr16
lods
das
in
cmp
sub
aaa
nop
mov
mov
push
hlt
sbb
add
add
in
data16
jae
aaa
or
jecxz
lahf
cmp
into
mov
mov
pop
jne
icebp
imul
jp
lret
inc
out
jle
je
xor
add
stos
sub
dec
popf
dec
pop
bound
fcmovne
out
cmp
loopne
into
xchg
imul
mov
mov
int3
scas
mov
adc
orl
inc
adc
sub
imul
adc
cmp
push
jmp
stos
cmp
pop
add
sub
sub
loope
push
lret
mov
cmp
sbbb
jge
pop
inc
push
lcall
or
dec
cmpsb
push
dec
out
push
ds
neg
lcall
jae
adc
xchg
movsl
ret
jnp
xchg
sbb
push
scas
ljmp
mov
leave
test
or
xchg
mov
insb
mov
mov
push
cltd
in
pop
push
mov
scas
sub
pop
stos
in
scas
mov
cmpsb
cld
es
sbbl
dec
adc
fdivl
movsb
cmc
sub
xchg
add
or
fdivrs
jnp
jnp
ss
cmp
call
jns
sbb
std
jnp
xchg
xor
incl
sub
adc
in
mov
xchg
inc
pop
ret
out
cmpsl
std
inc
sahf
push
out
adcl
in
adc
jne
cs
adc
dec
jecxz
cmp
fiadds
xchg
in
sub
lods
lret
shll
test
shll
jnp
or
or
xchg
outsl
flds
xchg
aam
ja
fwait
es
or
xor
test
ljmp
dec
aam
adc
and
cmc
mov
divl
int3
pop
adc
mov
dec
mov
and
mov
inc
mov
xor
mov
fstl
repz
das
xor
movsb
ja
and
loop
cmp
cmp
out
lods
lds
outsb
dec
jge
add
loope
mov
popa
mov
xor
pusha
in
and
inc
enter
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
outsl
mov
push
sbb
and
sbb
mov
scas
xchg
pop
fcos
adc
call
jno
jle
cmp
xor
daa
shl
fstpt
or
int3
das
in
xor
nop
push
inc
imul
loope
ljmp
out
sbb
fstpt
mov
adcl
lahf
loop,pt
std
push
lcall
fdiv
pop
rclb
or
and
and
sti
fs
mov
sbb
ret
jno
or
jge
push
aas
ljmp
dec
loope
sahf
and
cmpsl
cmc
pop
mov
xchg
shrl
adc
jno
in
lret
bound
add
cmp
pop
sahf
push
jp
aaa
lahf
daa
cmp
repz
stos
in
jbe
test
das
mov
addr16
test
mov
jp
adc
xor
xor
jmp
out
testb
push
std
xchg
or
inc
xor
pop
aas
test
enter
lock
or
and
stc
mov
ss
outsl
sub
das
mov
imul
cs
or
js
lods
aam
push
dec
xor
addr16
pop
and
pop
add
and
mov
jns
jae
mov
and
jae
mov
fistpl
sub
mov
dec
sub
adc
movsb
mov
and
or
popa
or
sahf
cmp
mov
xchg
xor
or
sub
xchg
adc
xor
cli
xchg
int
push
js
icebp
ret
sarb
sahf
fwait
xorb
cmp
sub
and
out
or
in
enter
mov
xchg
lahf
test
aam
push
rcrl
push
pop
push
mov
cmp
dec
ss
in
stc
pop
ret
xor
scas
fisubrl
pusha
push
movsb
xchg
rcr
sbbl
dec
scas
mov
rorb
pushf
jbe
stc
mov
stc
or
lods
insb
sbb
xchg
test
out
mov
add
scas
imul
sbb
lds
flds
cli
dec
test
das
inc
fsubrs
loop
xor
mov
xor
int3
jo
rorl
inc
push
lcall
pop
pop
lret
xchg
mov
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
lret
jl
sbb
scas
adc
sbb
nop
loopne
adc
pop
mov
cmpsb
outsl
or
sub
out
sub
idiv
scas
adc
xchg
ret
sub
xor
jne
pop
xor
pop
lcall
mov
iret
test
arpl
and
mov
test
stc
mov
xchg
es
pushf
into
lods
sbb
cmp
xor
scas
insb
cmpsl
dec
ds
xchg
js
mov
addl
into
callw
add
and
aaa
xchg
xor
cld
add
push
cmp
add
mov
loopne
fbld
popa
aam
and
add
repnz
std
dec
nop
arpl
xor
es
xchg
cmp
sahf
pop
mov
cli
push
jecxz
and
jne
fs
or
mov
pushl
out
pushf
xorb
jnp
idivl
das
xor
cmpb
push
xor
or
rcl
or
or
fdivr
insl
adc
into
and
cmp
xor
iret
fstl
stc
or
inc
mov
pop
in
pusha
and
mov
outsb
adc
jp
mov
sti
cmp
dec
lret
mov
pop
fisttpll
mov
push
sbb
jno
iret
fidivrs
lds
mov
or
aad
cli
rclb
dec
sub
add
jnp
sbbb
pop
iret
mov
xchg
pop
push
repz
mov
inc
ds
ret
push
lret
inc
jge
dec
inc
fcomps
test
aad
mov
adc
mov
cmp
xchg
adc
aaa
dec
cmp
mov
test
cli
icebp
jnp
push
sahf
and
cmpsb
ja
sahf
mov
xor
iret
test
jl
rorb
push
dec
xor
sbb
and
rolb
test
imul
xlat
adc
test
mov
in
mov
nop
cmp
add
das
push
pop
push
pusha
xchg
add
xchg
fs
jo
add
aaa
aaa
add
cmpsl
popf
adc
test
je
xor
fst
xchg
pop
fmuls
leave
mov
and
call
pop
cmp
jo
leave
mov
mov
mov
sub
repz
fmulp
adc
sbb
in
into
push
sbb
imul
into
test
pop
sbb
dec
jb
and
sbb
movsl
call
inc
cmpsl
xchg
and
jl
jno
out
sbb
pop
pop
mov
fwait
mov
inc
hlt
popa
adc
cmpsb
jl
cmp
scas
inc
push
inc
xchg
cmp
or
cmp
imul
insb
sub
pushf
pushf
or
jns
dec
aas
mov
mov
call
cltd
inc
sbbl
and
sbb
stos
mov
xor
pop
jno
dec
scas
in
and
adc
lds
bound
je
js
arpl
xchg
jmp
push
pop
sbb
stos
jne
std
xchg
sub
adc
lret
hlt
cmp
adc
bound
inc
int
inc
and
xchg
shll
addb
cmp
adcb
fwait
xor
sub
pop
pop
mov
add
mov
xchg
inc
push
jne
enter
lret
xor
mov
mov
push
repz
or
push
push
int
sbb
in
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
sahf
inc
push
inc
sbb
scas
adc
sbb
jmp
insb
dec
adc
call
repnz
cmp
loop
fs
mov
pop
push
rclb
insb
cmc
pop
sub
mov
ja
rclb
mov
dec
push
mov
and
fwait
imul
dec
in
shll
jbe
xchg
cld
jl
or
pop
ss
std
mov
xor
inc
push
hlt
sbb
outsl
test
add
jge
cli
xor
sbb
iret
pop
add
pop
cltd
and
jbe
mov
push
cmp
fbld
jecxz
rcrl
pop
adc
push
jbe
cwtl
xchg
test
movb
lcall
int
loop
repnz
stos
cli
dec
jmp
fdiv
pop
pop
mov
jbe
hlt
arpl
insl
xor
xchg
add
add
cwtl
jb
pop
js
loope
pop
mov
rcrb
jns
popa
add
sbb
stos
fmull
rorl
daa
sbb
jb
mov
xchg
jp
in
pop
mov
or
cwtl
push
dec
js
push
push
lret
nop
inc
adcl
mov
mov
mov
cld
and
jg
and
pop
icebp
out
out
std
xor
xchg
and
clc
jo
mov
out
add
lea
xor
jmp
rclb
mov
xchg
and
pop
jno
fisubs
cmp
out
ret
testb
jnp
into
sbb
inc
push
test
pop
mov
pop
cmp
mov
cmc
loope
aas
jecxz
push
or
inc
dec
lods
repz
xchg
pop
dec
cmp
cwtl
mov
or
test
scas
adc
xor
test
lcall
pop
sahf
sbbl
lcall
pop
jecxz
adc
jbe
pop
mov
addr16
mov
scas
pop
lret
in
in
sub
mov
xor
pop
lret
gs
push
mov
pushf
mov
cltd
dec
call
mov
lcall
inc
jmp
xor
push
mov
andl
xor
popf
and
mov
sub
pop
adc
in
test
cmp
add
cmp
pop
stos
or
jecxz
sbb
test
or
rolw
shl
call
incl
loop
inc
cmp
jle
sbb
aas
imul
mov
test
push
cmp
dec
inc
fistpl
mov
xor
inc
cmc
or
mov
fcmovnb
adc
jne
adc
xchg
mov
mov
frstor
out
and
je
cmpsl
sarl
pop
xchg
mov
clc
lds
push
add
add
or
sub
pop
lret
push
cmp
sbb
outsb
nop
in
mov
xchg
flds
jecxz
in
pop
sub
jg
sarl
ss
out
inc
outsl
cmpb
add
or
pop
add
sub
add
sbb
inc
pop
jno
bound
mov
cmp
xor
dec
mov
out
lret
lret
xchg
sbb
outsl
inc
roll
mov
fwait
test
hlt
cmp
sub
je
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
push
and
sbb
notb
sbb
clc
testl
out
or
mov
pop
lahf
pusha
cmp
cmp
hlt
movb
aas
xchg
out
xchg
cwtl
popw
mov
idivl
lret
lock
cwtl
cmp
dec
hlt
rclb
push
push
xchg
ljmp
and
ss
mov
push
xor
push
xor
push
jae
mov
push
mov
lcall
add
in
mov
pushf
popl
xchg
xor
jb
mov
insb
pop
sti
fmuls
stos
add
mov
les
ljmp
imul
push
lock
rcrb
aaa
pop
mov
and
testl
mov
test
cmpsb
dec
mov
jae
xchg
jg
pop
jnp
lcall
mov
pop
dec
xlat
dec
push
orb
xor
adcl
mov
push
and
jge
cmp
ljmp
aas
je
clc
mov
cmc
call
cmc
cmp
pop
sub
fidivrl
jb
jne
testb
iret
in
in
mov
push
fwait
adc
push
adc
push
psrlq
push
outsl
cmp
mov
pop
dec
lods
ja
or
pop
inc
sbb
push
fiaddl
mov
pop
sbb
jns
push
or
repnz
inc
jg
dec
mov
sbb
pop
mov
push
add
rolb
bound
dec
scas
pop
int
jle
popa
test
pop
stc
scas
sti
push
dec
dec
nopl
arpl
and
push
cli
enter
shrb
sub
sti
pop
pushf
xchg
push
jae
or
push
jge
jp
nop
decl
lods
push
lds
or
or
loop
cmc
fisubl
iret
inc
adc
pop
and
loopne
fisubl
sbb
jns
inc
xor
lahf
sub
ficompl
add
add
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
aam
inc
push
cmp
sbb
adc
sbb
icebp
fsubs
js
adcb
fcoms
ljmp
xlat
adc
mov
mov
in
inc
add
or
es
pop
mov
inc
mov
mov
dec
and
out
cmc
dec
mov
jae
test
movb
lahf
pop
and
add
push
mov
jbe
mov
jmp
sarl
dec
test
cmp
or
and
pop
sbb
jbe
cmp
cmpl
push
lods
pop
push
inc
mov
or
sub
aad
add
push
sbb
add
inc
pop
and
push
mov
fiadds
xchg
insl
stos
cli
mov
insl
mov
movaps
push
mov
and
pop
add
daa
and
lods
mov
xor
add
fistl
arpl
jae
mov
movsb
ljmp
test
sbb
imul
addr16
dec
sub
mov
pop
jge
pop
push
add
or
call
jo
pop
xor
rcr
push
sbb
lcall
nop
fcomps
xor
sbb
mov
pop
sbb
in
sarl
adc
shr
rol
add
mov
pop
pop
add
inc
or
mov
shll
jp
push
push
jns
jae
stos
int3
stc
icebp
popa
lret
outsl
xchg
inc
mov
dec
mov
and
cmp
jp
popa
mov
adc
jns
jle
mov
sub
xchg
hlt
cmc
add
xchg
ficoms
cmp
loopne
aad
int
bound
jmp
andl
pop
test
and
lods
das
lahf
and
lcall
jns
and
or
pop
stos
cltd
int3
pushf
sbb
std
shlb
dec
shll
mov
ret
test
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
insb
mov
sbb
adc
sbb
pop
ds
push
xchg
ret
inc
inc
add
or
mov
gs
inc
sub
icebp
jae
and
call
inc
sbb
fucomi
mov
sbb
stos
inc
xchg
cmc
and
sub
aam
arpl
jle
inc
or
cmp
pop
and
push
addl
movsb
js
call
mov
outsl
fmulp
outsl
pop
outsb
jns
adc
inc
in
sbb
dec
jp
mov
or
rorl
pop
mov
dec
loope
push
xchg
add
ljmp
data16
imul
xchg
pop
cmpsl
ss
mov
flds
pop
mov
ljmp
mov
sub
jns
jo
xchg
mov
dec
cmpsl
lods
rol
cmp
fcmovnbe
scas
cmp
sub
adc
dec
xlat
jns
popa
jg
xor
mov
jnp
ret
mull
push
sbb
rorl
adc
mov
test
pushf
popa
sub
and
xchg
adc
stc
fdivrs
and
loope
mov
pop
cltd
mov
inc
imulb
mov
xor
ss
add
mov
xlat
daa
lock
movsl
insl
mov
fmul
daa
mov
rorb
mov
push
test
shrb
pop
pop
dec
mov
cmc
cmp
testl
andb
lahf
inc
xlat
imul
or
popf
in
fisttps
mov
push
pop
int3
push
sub
mov
jp
cmp
in
mov
aaa
inc
jo
cmp
test
pop
shlb
push
repnz
pop
xchg
lea
out
pop
push
push
or
jns
jno
dec
adc
inc
repnz
iret
ret
push
test
dec
popa
adc
mov
adc
mov
add
mov
cmp
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
imul
and
mov
adc
outsl
shlb
fsts
out
sub
mov
stc
out
push
adc
push
stc
jbe
pushf
pop
fiaddl
ja
adc
lret
sub
pop
stc
xchg
mov
push
scas
stos
jge
lahf
into
cmp
or
mov
inc
pop
std
jne
adc
push
cmp
adc
cli
inc
jmp
add
jmp
popf
jg
cltd
fsubrl
xor
in
pop
add
push
inc
in
mov
lods
xlat
popa
or
fs
xchg
sbb
je
sub
fdivrp
mov
jae
and
sbb
push
push
lcall
dec
push
sub
movb
fbstp
mov
push
lods
xlat
push
fistpl
imul
daa
outsb
in
mulb
call
mov
stos
and
jae
mov
arpl
in
lds
mov
fucomp
pop
push
and
xor
lods
dec
fwait
ds
jbe
sub
lock
mov
dec
jecxz
and
push
shrl
sbb
stc
rdpmc
dec
sbb
mov
lods
imul
pop
sub
inc
mov
push
xchg
xchg
cmp
inc
mov
and
cmpsl
cmp
xor
mov
jns
mov
xchg
jl
jbe
add
push
jbe
jecxz
scas
js
xchg
fldenv
hlt
jnp
xchg
aas
aas
xor
adc
xchg
and
inc
out
jns
aam
jl
xchg
lock
inc
pop
ljmp
push
or
mov
enter
mov
mov
cs
adc
jae
fs
or
push
mov
mov
inc
fstpt
test
sbb
push
mov
test
rcl
gs
sbb
xor
std
mov
lea
clc
pop
mov
xor
aas
mov
insl
adc
add
fidivs
jg
cltd
adc
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
lret
aaa
pop
cld
test
popf
jmp
lock
psllq
jnp
pusha
mov
cmp
inc
add
xchg
jae
sahf
add
adc
sbb
pop
fs
loopne
fcompl
imulb
mov
cltd
sbb
sbb
aaa
pop
ret
jne
xor
scas
mov
xlat
jecxz
pop
push
aad
in
sbb
rcr
pop
mov
sbb
aas
lahf
ret
mov
imul
nop
and
pushf
pop
out
popa
add
xchg
xchg
xlat
xchg
cmp
and
adc
dec
mov
nop
add
adc
jg
adc
test
jl
imul
movsb
xor
add
add
jne
dec
es
test
icebp
mov
mov
sbb
cmp
jae
ljmp
scas
aas
repz
scas
lods
mov
dec
pusha
inc
dec
pop
das
adc
lock
push
push
cld
mov
cmc
adcb
jo
cs
xchg
xchg
adc
pop
or
pop
mov
lods
loopne
mov
mov
adc
out
test
mov
cmc
cld
test
scas
mov
fstps
cltd
sahf
mov
movsb
fdivs
and
add
call
in
int
mov
mov
jecxz
push
xor
lods
ss
or
iret
inc
push
jge
nop
jl
cwtl
sub
xchg
lods
xor
in
push
fstpt
xor
jl
lock
test
cltd
iret
test
imul
inc
pop
insb
sub
jne
pop
fiadds
jb
adc
cld
rep
inc
les
imul
fdiv
xchg
std
test
movsb
pop
out
cmp
xor
iret
aad
xlat
pop
or
into
insb
pop
xor
jmp
inc
lods
fimull
dec
js
mov
ds
outsb
dec
insb
mov
cmp
mov
imull
int
mov
fidivl
lea
push
mov
mov
jmp
aaa
and
dec
mov
push
out
jnp
ja
ljmp
sbb
notb
sbb
xor
popa
stos
jecxz
lods
repz
out
adc
pusha
cmp
mov
mov
int
pop
out
cmpl
insb
bound
mov
xchg
and
ret
lock
mov
pop
cmpsl
jmp
cwtl
inc
jmp
adc
insl
adc
adc
xor
je
cmc
cmp
in
inc
scas
inc
dec
loope
jae
data16
call
jb
scas
loopne
adc
arpl
mov
mov
inc
jns
inc
ss
pop
push
int
mov
sahf
nop
push
push
cmpsb
mov
cmpsl
inc
out
fwait
cmp
mov
push
jmp
adc
mov
dec
cs
xchg
add
jg
fimull
fnstcw
aad
push
cmp
xchg
or
dec
or
jbe
cmc
pusha
lock
xchg
scas
push
or
fnstenv
lret
fiaddl
sbb
add
out
aaa
shrl
lods
adc
ret
push
mov
sub
mov
ret
mov
cwtl
das
mov
or
xor
mov
mov
mov
cmpsl
jge
in
xchg
int
or
out
enter
cmp
mov
or
scas
xchg
push
add
shlb
add
sbb
xor
mov
addr16
xor
dec
mov
push
mov
shlb
xor
dec
rol
xor
jecxz
jb
add
rcll
cltd
jg
mov
and
inc
xchg
adc
push
scas
movsl
mov
outsl
out
add
mov
sbbb
dec
xor
push
mov
mov
xchg
add
pop
push
call
mov
push
xchg
shrb
xchg
xchg
xchg
loope
sub
mov
je
jbe
data16
out
mov
ret
loope
lods
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
cmc
fidivl
scas
pushw
pushf
aas
cmp
pop
cmp
fwait
cld
sub
pushf
mov
or
jmp
mov
inc
mov
clc
xchg
in
push
or
mov
sbb
sbb
sarb
and
lock
outsb
fcoml
sbb
cmpl
in
les
xor
mov
xchg
std
mov
lcall
xchg
or
aad
fs
or
push
out
xor
fcmove
jns
test
and
push
cmc
xlat
in
cmp
push
pop
add
mov
xor
ss
sub
lahf
pop
std
pop
lods
push
arpl
int3
fs
adc
test
popf
add
mov
mov
or
jnp
mov
dec
inc
xchg
orb
dec
and
adc
cli
push
inc
iret
sahf
xlat
pop
or
cmp
push
jge
pusha
std
les
inc
xchg
fnstsw
push
lock
sbb
mov
xchg
std
imul
push
in
mov
push
mov
adc
test
mov
mov
pop
lea
pushf
je
push
lret
lret
jl
ja
es
sub
repnz
int3
jo
cmp
xor
sbb
or
mov
lcall
imul
mov
ljmp
jmp
fsubl
lds
and
std
stos
lret
cmp
mov
negl
sub
xchg
pop
es
ja
daa
push
sbb
dec
loop
rolb
gs
std
ret
add
jl
lea
push
outsb
push
and
mov
sbb
dec
sub
psubusb
push
push
cwtl
andl
aaa
mov
or
mov
xor
or
in
mov
sub
push
jb
add
or
lret
addr16
push
lods
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
std
push
loope
js
mov
mov
daa
popa
outsl
cmpsb
inc
fs
loope
call
test
testl
jne
mov
loop
loop
mov
mov
dec
lods
add
outsl
data16
pop
popl
subl
adc
fsubrp
int
out
in
jno
jbe
out
jecxz
mov
hlt
repnz
jo
fiadds
insb
and
mov
outsl
test
lcall
movsl
stc
adc
mov
or
jns
add
inc
incb
cmp
sub
imull
jb
je
push
jle
push
js
mov
adc
xor
mov
mov
fucomp
and
rolb
inc
pop
shrl
pop
jo
mov
cmpsl
addr16
lock
mov
mov
push
popf
jg
push
jle
fstpl
xchg
lods
adc
mov
mov
add
push
inc
and
jp
scas
je
jno
roll
sbb
cmp
ljmp
dec
sbb
imul
adc
sbb
mov
add
dec
ret
cmc
mov
push
rcl
xchg
jecxz
test
xchg
shlb
pop
mov
ret
mov
mov
xlat
cmp
test
push
mov
popa
cli
mov
mov
lock
adc
jbe
icebp
pop
cld
add
fbstp
pop
dec
test
and
inc
daa
push
mov
add
jl
mov
jmp
mov
outsl
cmp
dec
push
insb
cmp
movsl
xchg
pop
sub
loopne
lcall
sub
mov
sub
call
pop
mov
fsubrl
sbb
imul
mov
daa
xchg
sbb
aaa
sub
mov
jl
lock
pushl
xor
lds
mov
out
or
outsl
xchg
ss
mov
xchg
cmp
or
pop
and
push
mov
in
xor
fimuls
sub
add
xor
push
pop
call
pop
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
shlb
add
sbb
sbb
sbb
jo
xchg
push
jl
push
insb
mov
test
popa
icebp
scas
dec
mov
mov
sub
shll
xchg
xor
je
call
or
test
mov
lods
dec
pusha
sbb
insb
add
fidivs
dec
dec
xor
shrb
fildll
mov
test
imul
push
adc
dec
iret
movsb
loope
push
mov
dec
jecxz
out
jbe
pop
dec
rorb
add
ds
mov
dec
mov
adc
in
test
xchg
pusha
testb
and
lea
cmpsb
in
push
imul
dec
and
sub
sbb
jo
cmp
popf
fnsave
jne
sbb
push
je
nop
lcall
or
stc
repz
mov
std
nop
dec
in
adc
lret
sti
sbb
xchg
adcl
shlb
jno
incl
test
mov
sbb
xor
jbe
std
xlat
mov
call
imul
push
clc
or
dec
mov
shrb
inc
adcl
testb
daa
out
sarl
lahf
sub
jg
fistpl
sbb
sbb
sar
loope
and
push
jle
sub
jae
mov
aam
outsl
movsb
ret
xor
mov
pop
ds
ret
sti
push
sbb
mov
out
mulb
mov
fimuls
xor
adc
ss
std
add
pop
adc
cmp
icebp
scas
sub
sbb
mov
dec
adc
or
dec
aas
rorl
mov
adc
outsb
cmpsb
imul
popf
xchg
lods
jb
push
inc
mov
cmp
xchg
cwtl
jl,pt
and
icebp
ret
push
and
cli
js
add
and
je
test
inc
shl
imul
dec
shll
jo
xchg
and
fiaddl
push
mov
pop
xchg
loopne
sbb
repz
rcl
and
lods
jge
bound
scas
jg
vzeroupper
dec
sbb
imul
mull
add
rorb
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
mov
sbb
sbb
adc
sbb
inc
scas
das
or
and
mov
xchg
dec
mov
mov
fidivs
push
jno
adc
scas
insb
sub
add
jle
push
js
pop
rcr
push
sub
pop
pop
lds
push
mov
stos
fucom
pop
dec
pop
jmp
stos
sbb
into
xlat
lds
in
int
add
inc
in
cmpsl
xor
pop
clc
mov
xor
stos
in
inc
or
cmp
rsqrtps
inc
popl
mov
jne
es
loop
nop
add
push
out
lods
std
mov
cmp
jne
ljmp
shrl
mov
shll
xor
dec
cli
add
xchg
loopne
mov
pushf
insl
sar
movsb
pushl
push
cmp
inc
fdivr
shlb
mulb
bound
sbbb
mov
mov
sbb
rorb
push
lods
mov
jno
push
rep
and
movsb
into
sbb
dec
pop
movsb
mov
mov
pop
xor
jae
jno
pusha
mov
das
cmpsl
daa
dec
adc
pop
push
sbb
shl
clc
leave
orl
inc
out
nop
insb
xchg
inc
cwtl
lret
jg
jno
mov
dec
mov
in
loopne
sub
pusha
cmp
lret
add
into
add
ljmp
shl
arpl
and
jb
push
loop
test
cmc
in
les
mov
mov
imul
mov
pop
andl
mov
shll
cmp
add
shl
pop
xor
mov
sbb
sbb
dec
pop
mov
pop
or
movsb
cld
imul
stos
vpmulhuw
mov
aaa
push
cltd
fs
pop
popf
lods
lcall
cmp
mov
xchg
sub
sub
xor
out
sarl
pop
fsubrs
popa
jmp
mov
dec
rep
daa
mov
push
mov
push
or
into
fbstp
sub
sti
lods
jno
xchg
mov
sub
push
lods
enter
or
mov
push
ret
in
insb
rol
int3
jg
and
xor
ds
test
pop
js
sub
repz
jae
fcomps
and
adc
clc
mov
adc
pop
out
sahf
bnd
fcomip
and
cmove
pop
or
lahf
aaa
je
repz
inc
xchg
mov
jo
in
jg
fs
stc
add
out
rorb
xor
fiaddl
pop
pop
push
pop
mov
lds
shrl
mov
aaa
pop
negl
push
icebp
mov
mov
ret
push
add
mov
fnstsw
inc
cmp
sub
ficomps
sub
scas
das
inc
jge
sbb
movsl
lret
sbb
rcr
lods
imul
imul
lahf
arpl
dec
not
mov
xlat
pop
xor
mov
loope
scas
lahf
mov
jbe
pop
jae
dec
xor
or
inc
enter
lahf
test
sarb
stos
repnz
pop
stos
push
andl
xor
scas
fwait
mov
rcrl
rorl
adc
mov
add
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
push
sbb
mov
sbb
sbb
imul
inc
stc
fists
xchg
icebp
sub
jp
mov
stos
push
gs
xchg
dec
ret
popa
ja
mov
pusha
adc
cli
add
pop
lods
jle
mov
inc
iret
and
jbe
je
mov
and
inc
pop
mov
jns
idivl
cmp
xchg
inc
xchg
dec
enter
pop
popf
add
incb
nop
xor
inc
rorl
mov
inc
hlt
add
movsb
mov
jns
xchg
jo
inc
stc
jo
stos
das
out
mov
mov
fidivl
movsl
push
pop
push
adc
jp
push
mov
sbb
cmpb
xor
mov
sub
jae
push
or
bound
call
or
mov
jbe
testl
fsub
pop
push
loop
xchg
loopne
mov
mov
fildl
push
rorb
cmp
scas
daa
xchg
clc
mov
push
notl
aad
ret
or
inc
adc
sbb
jo
push
loope
repnz
pusha
aad
fwait
dec
sbbl
pop
dec
mov
aaa
jmp
clc
scas
inc
mov
loop
iret
inc
inc
dec
xor
stos
loope
lcall
inc
leave
imul
cli
js
dec
lds
inc
xor
jge
sbbl
arpl
gs
jne
scas
dec
jae
inc
sbb
out
movsb
lahf
bound
fldt
popf
divl
loop
sbb
inc
cmp
jmp
jns
and
fistpl
fdivrs
outsb
mov
mov
enter
pop
lds
mov
popa
out
sub
enter
xor
out
and
fdivp
test
inc
jmp
pop
lret
aam
insb
jg
insl
sub
mov
or
mov
sub
outsl
arpl
pop
ljmp
dec
or
fsubs
jecxz
mov
mov
push
sarl
sbb
xchg
mov
das
mov
jbe
cli
dec
cmpb
push
push
dec
or
dec
xchg
dec
push
mov
daa
insb
fwait
hlt
cld
lret
mov
adc
stos
cmpsl
out
jb
pop
insb
or
pop
hlt
cmc
push
xchg
test
xchg
jnp
lahf
add
add
sbb
data16
es
sub
outsb
ret
inc
cld
pushf
fldcw
or
mov
mov
push
nop
pop
cmp
xchg
pop
push
out
int3
outsl
std
cld
rcrb
dec
in
inc
mov
inc
jp
or
pop
mov
ss
sbb
arpl
mov
rolb
xor
sbb
cltd
push
jl
negb
arpl
mov
aam
pop
pop
mov
ror
call
xchg
cmp
mov
pushw
push
lret
push
sub
adc
jp
xor
push
call
push
xchg
sub
push
jb
or
xchg
cld
sub
fmuls
xchg
lock
adc
mov
repz
add
mov
cmpsl
in
ret
frstor
fs
mov
stc
mov
fldt
clac
sbb
stos
adc
loope
shl
jb
clc
mov
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
pop
cmp
sbb
sbb
loope
mov
scas
xor
popf
xchg
cld
sub
lods
pop
sub
fstpl
into
or
cmp
cmp
data16
ss
in
pop
loopne
mov
mov
add
sub
mov
dec
cmp
or
sub
movsl
insb
xor
add
cli
fidivrl
cmc
lahf
mov
mulb
and
xor
jecxz
ret
mov
inc
cmpl
ret
and
insb
daa
fdivrs
inc
loop
and
aad
xchg
aas
xor
jno
and
data16
jmp
hlt
mov
push
xor
enter
xchg
sub
jg
fxch
dec
add
add
mov
enter
mov
and
popa
fld
push
sub
add
sbb
mov
xor
add
ja
dec
cmc
xchg
dec
fbstp
jl
mov
xor
pop
and
enter
mov
xor
sub
xchg
inc
push
or
leave
dec
pop
sub
mov
inc
mov
lahf
into
lcall
adc
jecxz
jo
lahf
jo
push
scas
sti
cmp
dec
sub
enter
jmp
je
cmp
inc
adc
dec
push
in
or
aaa
and
loop
lods
dec
loopne
jne
mov
test
xchg
and
fsubr
xchg
xor
push
icebp
add
loope
mov
lcall
add
data16
inc
jp
mov
pop
dec
mov
adc
mov
dec
fdivl
in
or
out
out
repnz
sub
cmp
cmp
imul
add
rorl
lret
xchg
mov
adc
pop
mov
add
jno
push
mov
outsb
and
lods
in
leave
cmpsb
std
mov
mov
push
out
push
gs
aad
out
imulb
pop
sbb
popa
mov
jbe
subb
sbb
inc
test
shl
std
and
mov
lods
arpl
push
loopne
and
cld
mov
scas
jno
fwait
dec
aad
shr
sbb
lret
pop
jp
or
icebp
cmp
inc
mov
cmp
jge
xchg
sbb
movsb
fsubrl
repnz
mov
jns
and
mov
das
ror
jbe
rolb
push
cs
mov
in
test
test
mov
sub
mov
cli
aam
xor
push
inc
call
repz
movsb
out
stc
xchg
in
pop
and
dec
and
mov
push
jmp
insl
mov
sub
adc
lock
shll
pop
popf
and
and
add
mov
xor
in
in
ret
sbb
test
stos
popa
ficomps
movsb
cmp
clc
push
rcl
push
jl
push
mov
adc
paddusw
mov
outsb
mov
inc
popa
xor
je
xchg
lcall
sbb
shll
or
gs
xchg
iret
dec
mov
mov
subl
jmp
mov
push
in
xor
orl
sbb
adc
sbb
lret
sub
mov
ja
push
insl
sub
sub
lods
mov
pop
push
ret
pop
mov
mov
pop
scas
cld
fs
jnp
sbb
cmp
pop
sbb
das
mov
jl
popa
push
cmp
mov
adc
insl
inc
mov
pushf
mov
xor
movsb
adc
push
idivl
push
mov
addl
icebp
ljmp
stos
mov
bound
cmp
pop
daa
or
pop
sbb
lret
cmpb
adc
negb
popf
ljmp
sbb
lahf
scas
in
mov
pop
outsl
inc
imul
cltd
xchg
dec
sahf
and
push
lods
popa
pop
lods
mov
pop
pop
xor
popa
fs
jbe
cmc
push
hlt
lods
and
scas
mov
pop
xchg
ljmp
mov
adc
jns
push
cmpsb
addr16
repnz
ficomps
xor
gs
test
test
std
jb
cmp
cmp
in
pop
enter
rcrb
and
sti
sbb
mov
mov
push
adc
mov
ficompl
xchg
cwtl
xchg
rcl
pop
test
nop
rclb
push
mov
movsb
enter
add
add
sub
adc
loop
mov
adc
mov
cld
pushf
mov
jbe
lods
aaa
cltd
ds
ds
popf
adc
mov
cld
js
inc
jmp
sti
cld
lcall
std
jmp
sbbl
out
pop
arpl
cmp
mov
mov
pop
lea
insl
lods
dec
cmpsb
mov
xorl
pop
mov
push
adc
subb
movsb
lods
and
mov
mov
out
cld
mov
and
mov
ja
std
arpl
mov
scas
cmp
stos
xor
jge
sbb
adc
cmp
mov
loopne
pop
or
adc
xorl
rcr
add
inc
sbb
rcrb
add
xchg
push
scas
mov
push
push
call
sbb
pushf
push
cmp
outsb
lahf
cs
outsb
jo
push
sbb
push
pusha
pop
xor
gs
rorl
cltd
dec
mov
lods
ss
pop
icebp
cmp
jo
lods
dec
inc
dec
fstl
leave
paddsb
mov
mov
orb
jmp
jo
jns
and
stos
push
mov
in
enter
xchg
sub
popf
add
pushf
repnz
repnz
sti
inc
jp
or
lcall
stc
cmpsl
out
dec
pop
insl
pop
aam
inc
shlb
mov
pop
or
lahf
dec
aam
icebp
sbb
mov
cltd
push
push
cld
push
rol
cltd
push
jmp
push
imul
dec
shrb
push
sbb
cmp
fcoml
scas
sbb
fstps
cltd
fdivl
cmpsl
mov
pop
cmp
ljmp
cld
jnp
jge
jecxz
inc
dec
lret
jo
mov
jmp
push
ret
dec
jne
popa
lea
and
clc
ds
data16
jbe
mov
xlat
mov
sarl
pop
test
popf
xchg
lock
and
fs
jecxz
or
daa
int
add
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
mov
and
xchg
mov
push
xchg
mov
xchg
arpl
movsb
frstor
xchg
or
sbb
incb
lds
decb
jbe
push
xchg
push
mov
jo
hlt
icebp
xchg
or
repnz
push
lea
xchg
pop
jb
in
or
pop
cmp
mov
inc
sub
sbb
into
int3
call
or
int
add
sahf
pop
jns
adc
shll
pop
dec
add
arpl
adc
mov
insl
push
insl
ret
arpl
shlb
adc
pusha
inc
xchg
movsb
fdivl
xor
imul
pop
in
scas
cli
popl
test
fs
rcrl
mov
push
cltd
mov
std
mov
dec
aas
lahf
pop
dec
sub
sub
push
pop
pusha
sbb
lock
aas
jo
mov
or
jl
ss
scas
add
out
mov
push
fst
divb
in
add
sub
dec
fisubs
nop
loop
push
gs
lods
add
pop
daa
xlat
xlat
push
jne
cli
fcoml
and
mov
inc
xchg
adc
aad
cmpsb
add
mov
mov
xchg
insb
dec
repz
ljmp
mov
cmp
sbb
pop
shll
sarl
imul
sub
mov
fcoml
push
ret
xchg
into
iret
cmp
int
aad
mov
bound
mov
jo
mov
push
dec
mov
fstpl
mov
xor
pop
std
push
or
mov
and
ret
outsl
xchg
in
sub
aad
sahf
lret
add
sbb
out
cmp
jecxz
and
push
sti
pop
icebp
fs
xor
xchg
stos
jl
push
mov
jo
mov
out
stc
test
insb
cmp
xor
dec
jl
or
aas
out
jle
dec
add
jge
out
addr16
pop
dec
push
stc
sbb
mov
xchg
cmc
mov
in
test
sti
and
sahf
pop
insb
dec
jge
xlat
insl
jnp
or
push
xchg
cmpsl
dec
cmp
clc
jns
inc
sahf
icebp
or
inc
push
pop
ret
xor
movsb
fnstsw
add
cs
cmp
int
push
mov
test
sbb
mov
push
lods
cmp
xlat
inc
les
mov
sahf
fsubp
insb
mov
inc
leave
ret
or
push
pop
sbb
inc
fwait
add
repnz
insb
cld
cld
loope
adcl
sti
in
pusha
fcmovnu
pop
xchg
mov
cmp
add
jb
cmpsb
outsl
push
insb
fs
fchs
das
fistpl
and
xchg
stc
fistl
push
push
subl
popf
jae
das
ret
add
mov
fidivl
leave
bnd
fcompl
push
in
mov
cs
jmp
xchg
fistps
cmp
mov
or
pop
pop
sbb
mov
push
enter
mov
push
insl
dec
jo
mov
add
aaa
xor
rorl
enter
add
add
fimull
test
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
and
inc
notb
sbb
adc
sbb
cs
arpl
adc
add
mov
lahf
loopne
pop
mov
jb
xchg
jb
sub
cltd
bound
fisubrs
inc
out
inc
in
jecxz
in
pop
mov
push
add
dec
mov
xor
jg
clc
and
sbb
add
es
pop
outsl
fwait
loop
jns
aad
fstp
scas
push
jecxz
std
mov
popf
data16
ror
mov
cmpsl
xlat
jmp
push
jmp
add
lcall
shrd
fs
stos
cli
inc
push
adc
mov
mov
jns
adc
xorb
repz
sti
loop
jmp
and
or
loopne
imul
leave
pop
sbb
push
pop
mov
sub
dec
hlt
dec
pusha
jge
or
das
popf
xchg
or
shrl
in
inc
out
mov
fs
jns
shl
int3
aad
xor
nop
mov
fnsave
or
sub
xchg
into
and
ss
movsl
pop
leave
ljmp
xchg
push
jge,pn
iret
xchg
leave
or
xor
mov
shlb
mov
pop
mov
nop
stos
adc
jnp
in
xchg
mov
mov
xchg
add
xchg
enter
movsl
in
mov
push
mov
inc
or
adcl
mov
jg
enter
ljmp
daa
push
push
dec
jl
in
cmp
das
mov
mov
les
and
add
sub
cld
add
push
mov
insl
push
jge
xchg
xchg
ss
jbe
sub
sub
lock
mov
fcoml
or
lahf
jecxz
jne
cmpb
insl
leave
lods
ret
xor
cs
sub
loopne
std
in
scas
xor
cwtl
xor
sbb
jne
xchg
iret
fldl2e
js
leave
mov
inc
sbb
cmc
pop
out
dec
cs
aam
fsts
call
aas
dec
sbb
aam
lcall
jmp
xchg
cltd
ret
notl
cld
mov
add
loope
mov
mov
mov
and
mov
mov
lahf
dec
cmpl
and
adc
fidivrs
inc
mov
xchg
fnsave
xor
pop
xchg
sbbl
pushf
xor
lcall
xchg
fdivrl
je
pop
cmpb
push
in
jo
popa
inc
clc
fcomps
dec
lods
jb
jnp
lea
adc
jae
fidivs
cwtl
aaa
clc
dec
xchg
loope
daa
cmc
pop
int3
add
filds
imul
stc
stos
jbe
xchg
adc
ljmp
roll
xor
jl
pop
push
mov
xchg
loope
loop
leave
stos
cld
or
adc
addr16
mov
adc
pop
sbb
repz
les
ret
jp
push
jo
xchg
icebp
mov
mov
sbb
vrsqrtss
stos
fiadds
sbb
mov
aad
std
pop
jle
dec
push
pop
sbb
sbbb
aaa
ss
push
imul
fdivl
outsb
es
mov
cltd
inc
dec
into
push
inc
pop
jl
mov
inc
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
stos
shrl
ret
ror
jge
mov
pushf
jns
or
sub
scas
mov
mov
cmc
push
dec
push
sbb
mov
enter
in
ds
dec
aam
lods
outsb
sub
mov
jmp
js
pop
addb
adc
adcl
cmp
jl
lock
lret
lds
cwtl
mov
testb
push
and
jmp
orl
sbb
pop
xor
mov
cld
into
mov
test
mov
test
cs
movsb
jl
popf
cwtl
or
inc
sub
sbb
dec
xor
sub
mov
stos
push
mov
movsl
inc
cmpsl
cld
mov
pop
ja
sbb
fwait
cmp
mov
xchg
int
or
cmpsb
aad
enter
mov
les
and
cwtl
js
fadds
dec
fidivl
lock
sti
rcll
stc
push
adc
pop
add
push
int3
ljmp
mov
push
push
loope,pt
iret
leave
dec
data16
xlat
jbe
fisubs
imul
movsb
insl
sub
scas
cmp
test
in
das
jg
and
cmpsl
xlat
mov
rclb
iret
sti
das
adc
fsubrl
aad
shlb
xor
es
fidivrl
int
out
call
adc
jmp
mov
pop
jae
int
push
add
stos
dec
nop
enter
mov
cld
les
push
rclb
adc
add
ds
or
stc
cmp
pop
mov
lods
pop
mov
add
jnp
idiv
clc
add
jbe
testl
rclb
outsb
xor
sarl
shlb
pop
adc
or
xchg
pop
cvtps2pi
or
enter
mov
push
jns
sbb
jns
mov
inc
adc
add
sub
add
mov
dec
sbb
ret
aam
lahf
xor
lahf
lcall
loopne
mov
xor
repz
or
xchg
push
mov
pop
repnz
cmp
sub
cmp
lret
xlat
jg
popf
cmp
pop
insl
scas
shrb
int
add
add
mov
or
pop
out
and
sub
cltd
sarb
lcall
lret
fdiv
fnsave
xchg
lret
subl
push
lods
divb
idivl
jbe
and
and
popf
lea
pop
xor
push
jge
movl
popa
jnp
call
sahf
hlt
nop
mov
in
mov
xchg
push
adc
ja
add
ds
aad
adc
pop
mov
fmull
dec
scas
and
fstl
cmpl
inc
mov
push
sub
push
iret
push
adc
mov
push
aaa
hlt
xor
insb
dec
jg
lock
adc
pop
push
movsl
jp
jne
mov
pusha
rcll
and
ljmp
pop
mov
pushf
stos
test
mov
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
or
stos
inc
jmp
sbb
add
adc
inc
scas
sahf
ret
and
push
mov
sbb
sti
xchg
out
and
cmp
mov
push
lret
pop
popa
sbb
xor
mov
push
daa
and
imul
ljmp
jne
das
xlat
pop
pop
mov
sti
mov
inc
dec
stc
adc
std
shrl
jl
loop
push
insl
sub
hlt
push
aad
loop
pushl
xor
cs
mov
movsl
cmp
cmp
out
push
popf
jp
lahf
mov
pop
xchg
ljmp
fwait
cmp
xor
into
xchg
sbb
xor
mov
repnz
inc
cli
lahf
cmp
sub
inc
out
sbb
out
push
and
jle
jle
imul
xchg
push
scas
push
outsl
mov
xlat
ret
push
ficompl
pop
mov
push
xchg
mov
ss
dec
push
or
dec
jecxz
mov
insb
inc
out
int3
es
cmp
and
jg
lods
lea
cmp
pop
fdivp
fcomip
and
gs
xlat
push
mov
sahf
cmpsb
fwait
xchg
adc
push
icebp
add
xorb
push
mov
mov
rolb
sub
and
push
pop
push
imul
int3
and
lcall
js
cmp
mov
bnd
dec
mov
xchg
aas
adc
sbb
adcb
push
dec
inc
and
fistps
pop
xchg
loop
fistl
shlb
xchg
or
lahf
sti
cltd
mov
int
xchg
and
jge
jb
aad
stc
lods
adc
jg
adc
dec
xchg
xor
in
xchg
dec
jno
lret
xor
cld
repnz
dec
out
psubsb
push
aam
inc
mov
test
movsb
repz
stc
popa
cmp
adc
cmc
nop
pushf
jb
jmp
shlb
fsts
pusha
mov
push
push
sub
lds
add
cld
sbb
dec
jae
mov
movsl
add
xor
addr16
dec
sbb
lahf
es
lahf
ret
xor
pop
or
int
and
loope
clc
xchg
adc
outsb
bnd
data16
sahf
sbb
std
lods
adc
or
hlt
fwait
stos
out
xor
mov
mov
push
push
or
lea
decb
push
cmp
xchg
lahf
mov
inc
xchg
jmp
cmp
mov
cmp
scas
pop
into
fdivr
add
adc
into
mov
mov
lret
insb
mov
cld
inc
lcall
push
jle
scas
add
dec
xchg
cltd
mov
mov
cmp
mov
in
popf
mov
lahf
push
cmp
xchg
imul
mov
xor
inc
fidivl
loope
outsl
jmp
sbb
pusha
mov
ss
dec
cmpsl
sub
pop
cmp
push
dec
xchg
gs
xchg
xor
jecxz
stc
sbb
add
xlat
xchg
aas
pushf
cld
push
inc
dec
fidivs
dec
jns
lds
int
sub
scas
mov
mov
les
mov
lret
and
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
scas
mov
loope
sbb
adc
sbb
or
sti
les
lcall
sbb
js
int3
pusha
dec
sbb
cwtl
jo
es
mov
cli
in
mov
test
stc
enter
push
jae
fchs
inc
movsl
fildll
out
ret
daa
push
repz
clc
inc
int3
enter
loop
xor
sub
mov
or
add
jle
js
cmc
int3
add
test
std
pop
push
push
xchg
push
outsb
mov
mov
orl
fisubs
ja
insb
mov
pmuludq
mov
adc
sub
jge
ror
out
pusha
xor
inc
fwait
and
jle
lea
mov
cmp
jle
scas
fdivl
push
cmp
push
rol
jmp
push
jg
pop
js
std
cmp
push
cld
out
xchg
push
xchg
inc
push
pop
in
pushf
ds
les
shr
loopne
fwait
pop
add
arpl
cs
mov
push
pop
lods
mov
xor
mov
notb
jecxz
sbb
cmp
iret
fisttps
dec
lock
push
lahf
inc
jp
cld
sub
jp
enter
lds
movsl
jo
inc
pop
jl
fists
aas
push
add
jae
aad
xor
mov
and
pop
loopne
out
stos
or
push
aas
cwtl
roll
aaa
mov
sti
pop
cmpsb
mov
arpl
subl
add
push
insb
daa
std
addl
ret
or
out
rol
hlt
jns
cmpl
xchg
pusha
pushf
cmp
ret
and
inc
dec
and
dec
add
jmp
imul
int3
pushf
pop
cld
pop
jmp
sub
or
xchg
repnz
dec
ds
mov
jge
pop
sub
mov
add
addr16
pop
cmp
xor
sbb
mov
inc
push
pop
mov
int3
mov
nop
hlt
lea
popf
or
sbb
mov
dec
and
jne
jb
insl
mov
cli
cwtl
nop
cs
int3
dec
shrb
pusha
addr16
jo
out
add
cli
pop
mov
xorb
push
xchg
lahf
mov
jecxz,pt
ret
clc
loopne
push
or
xchg
xlat
push
aad
insb
lock
fistpll
inc
mov
push
pop
mov
cmp
mov
xchg
xor
and
test
or
pop
mov
stos
pop
jnp
imul
mov
cld
mov
ret
push
inc
clc
mov
push
ljmp
lods
push
mov
stos
in
fs
dec
and
xchg
adcl
sbb
mov
enter
sub
lods
xchg
mov
leave
ss
sub
decl
les
dec
jb
xchg
add
addr16
jo
andl
sti
jo
xor
jnp
or
inc
cs
and
pop
test
sahf
or
or
push
xchg
rolb
xchg
mov
cli
movsl
lahf
or
outsb
shll
mov
xchg
mov
or
and
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
addb
inc
fistl
sbb
adc
sbb
mov
stc
xor
adc
stc
imul
mov
ss
mov
out
call
ffree
push
out
aam
ja
ja
jbe
and
pop
mov
xchg
sti
inc
ss
loope
ret
xchg
mov
xchg
iret
iret
insl
cmp
inc
daa
mov
xor
or
mul
or
loop
xchg
test
fldt
pusha
or
jo
dec
outsb
adc
lds
pop
daa
popf
mov
out
adc
mov
insb
in
sti
fwait
loope
push
rorl
cli
out
int
dec
xlat
lds
shufps
int
repz
mov
lods
pop
shrb
cmp
sti
inc
and
test
push
mov
dec
jbe
mov
test
xchg
jmp
js
or
push
repz
call
adc
orl
mov
mov
dec
cli
hlt
fidivrl
sub
sbb
adc
mov
pop
jnp
add
push
xlat
push
xor
add
mov
in
dec
sub
jb
je
test
adc
js
mov
inc
inc
xchg
pop
insb
dec
sbb
mov
insl
lods
clc
push
fnstsw
xor
mov
roll
inc
push
mov
jo
repnz
movsb
add
jnp
push
pop
xor
pop
into
inc
inc
mov
xor
mulb
jle
cmp
ja
jmp
cwtl
sub
mov
push
daa
mov
lods
loopne
jo
push
and
inc
test
cmp
das
xchg
repz
xchg
jns
sub
mov
mov
cmp
inc
loopne
divb
jbe
mov
insl
adc
sbb
xor
dec
loopne
xchg
dec
mov
cmp
fmulp
dec
rcrb
imul
xchg
push
fisttpll
pop
insb
cmp
add
dec
repz
push
cli
push
jle
push
adcl
in
xchg
and
mov
pop
mov
fs
jge
push
cmp
call
adc
mov
xor
sbbb
lret
mov
xchg
mov
jbe
inc
lds
pop
add
nop
jnp
push
adc
dec
pop
imul
cld
sbb
inc
push
lcall
mov
push
fstps
xor
mov
fstpl
jns
scas
jne
pusha
inc
fwait
loopne
popf
cmp
pop
sbb
call
gs
lret
jl
pop
lock
pop
out
aam
or
nop
fidivrs
dec
jp
lahf
xchg
mov
dec
cltd
xchg
lds
mov
xor
iret
inc
pop
and
sbb
lods
and
push
jge
or
adc
jns
and
nop
xlat
push
sbb
test
xor
mov
push
lcall
pop
pop
pushf
or
fistpll
inc
push
sbb
js
daa
sti
add
jb
fimuls
xchg
hlt
enter
icebp
xchg
and
hlt
and
or
nop
mov
sti
sbb
adc
gs
xchg
push
dec
dec
sbb
adc
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
xchg
sub
stos
inc
rcll
sbb
adc
sbb
sbb
jb
ret
jmp
sbb
xor
cmp
inc
sbb
std
mov
xchg
mov
stos
lcall
jne
mov
sub
ficoms
sti
or
dec
xchg
aas
bound
aaa
loop
movb
movsl
out
js
adc
cltd
into
mov
add
mov
es
pushf
xor
jp
push
xchg
or
mov
incl
aad
mov
scas
ljmp
into
shrl
xchg
in
leave
fimuls
sub
fstps
sbb
ret
rorl
or
dec
mov
negl
xor
fnop
pop
or
xchg
xchg
inc
and
mov
xor
insl
mov
sbb
loopne
cli
aaa
sbb
mov
aam
push
dec
ret
roll
xchg
inc
pop
sub
movsl
mov
shlb
inc
leave
mov
ja
add
xor
fsubrs
sub
xor
cmpsl
pop
clc
int
xchg
sub
stos
hlt
fs
xchg
push
lahf
pop
or
aad
sbb
gs
mov
adcl
shlb
jge
fistpl
xor
push
cmp
xor
mov
xchg
fldcw
into
int
inc
pop
cs
movsb
out
xchg
pop
push
mov
jl
or
push
add
xchg
xchg
xchg
mov
imul
mov
fsubs
std
or
jmp
loop
stc
cmp
adcl
daa
xchg
std
les
in
mov
outsl
xor
mov
shrl
fstps
push
xchg
jge
jge
dec
xchg
es
sbb
pop
and
or
xchg
cltd
mov
ja
loope
jnp
xchg
mov
xchg
sbb
jne
lea
in
mov
mov
enter
cmpsb
pushf
das
negl
shll
push
ds
xchg
mov
add
out
cmc
mov
pop
cltd
test
nop
lret
out
les
adc
push
mov
inc
sub
sti
ss
rcrb
push
shlb
mov
mov
ss
fbstp
adc
inc
jmp
xor
jmp
clc
pop
mov
pop
out
jne
xchg
jmp
mov
fldt
outsl
setns
jns
mov
cmc
cmp
cmpsl
popf
bound
ljmp
cmp
sahf
sbb
cmc
pop
jae
push
or
ret
pop
adc
fimull
cli
fists
xchg
out
hlt
std
outsb
mov
aam
jns
cmp
pop
pop
mov
nop
in
loopne
out
ljmp
jecxz
mov
sub
sbb
mov
movsb
push
hlt
mov
inc
inc
mov
push
frstpm(287
ret
mov
dec
clc
into
cli
pop
fst
shl
sub
pushf
lods
clc
imul
mov
or
rclb
sub
stc
sbbb
push
orl
inc
hlt
mov
rorb
pop
in
imulb
mov
jecxz
push
pop
mov
push
fcomip
mov
jb
ja
lea
sbb
cmc
mov
test
and
fisubs
push
xor
out
sub
inc
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
xchg
push
int
sbb
adc
sbb
cmpsb
xlat
sub
ret
xchg
insb
push
lret
enter
push
call
jl
pop
in
arpl
adcl
inc
mov
mov
aaa
shlb
pop
cmpsl
daa
push
shlb
imul
sub
call
mov
mov
push
cmpsl
mov
cmc
iret
jae
pop
jmp
xchg
sbb
or
xor
adc
pusha
js
add
mov
xchg
add
sub
cmc
aaa
jge
cli
pop
sub
push
cmp
lret
lock
push
int
inc
idivl
jecxz
add
dec
movsb
loop
clc
out
mov
xchg
jae
lret
sub
xor
inc
xor
add
cmp
scas
cmp
outsb
mov
or
xchg
outsb
xlat
xchg
fwait
movl
cmpsl
or
xor
int3
mov
mov
lret
jns
and
fsubs
and
xchg
mov
mov
cld
or
rclb
scas
and
xor
mov
adc
rcrb
das
add
mov
nop
sbb
sahf
in
insl
movsl
sahf
out
push
lahf
xchg
fisubs
test
xor
mov
inc
and
sbb
aam
in
roll
insl
xchg
les
xlat
xor
push
mov
data16
popa
inc
push
dec
push
or
xchg
adc
xor
adc
fs
psadbw
mov
cmp
and
or
das
dec
in
sbb
dec
nop
push
mov
popa
mov
add
adc
dec
sahf
or
rcrl
lds
cmpsb
rcrl
cmp
ljmp
jge
data16
push
shll
sbb
insl
push
out
sub
inc
xor
adc
jno
bound
lds
xchg
aam
xchg
xlat
or
les
frstor
mov
xchg
xchg
sub
lret
adc
mov
cwtl
test
in
leave
add
call
fdivrl
scas
js
sub
lds
jnp
mov
xor
mov
rcrb
mov
xor
mul
stc
mov
jl
mov
cmp
inc
mov
mov
ficoml
rcr
ja
jo
inc
mov
mov
add
stc
aam
sub
xor
cmp
insb
sub
add
mov
ret
jmp
pop
roll
xor
cmp
addr16
cmpsl
loop
sahf
push
sbbl
stos
push
aaa
adc
movsb
push
pop
pushf
stos
adcl
or
lcall
jnp
imul
xor
mov
data16
inc
and
mov
add
enter
shrl
and
rclb
repz
adc
push
xchg
mov
bound
mov
xor
adc
shl
popa
mov
push
add
ljmp
add
repz
lea
outsl
pop
out
pushf
jne
addl
mov
jbe
fbstp
bound
cmpl
in
add
lret
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
pop
jl
lds
sbb
adc
sbb
push
shl
push
mov
popf
push
clc
gs
lret
jge
in
add
dec
fdivrl
sbb
ja
add
mov
jae
xor
sbb
xor
and
jno
in
and
repnz
stos
dec
test
adcb
imul
scas
loopne
and
mov
fidivrs
dec
or
inc
mov
jp
cmp
push
cmp
hlt
or
lds
or
dec
ljmp
mov
imul
lcall
sbb
std
sub
inc
inc
out
cli
mov
mov
xor
pop
push
fs
sbb
in
rclb
push
and
repz
aam
mov
ja
test
mov
sub
gs
sbb
mov
xchg
cmp
addr16
bound
or
sub
mov
adc
dec
aaa
je
in
imul
outsb
fstl
outsl
frstor
lret
daa
lods
pop
sarl
cmpsl
cld
mov
int3
mov
repnz
in
stc
jno
jecxz
outsl
sbbl
pop
out
xor
cli
pusha
pop
add
mov
mov
jbe
loope
mov
mov
xor
or
sarb
add
repz
or
xor
ljmp
push
lods
mov
lods
test
das
ss
insl
repz
mov
fldenvs
rol
imul
dec
ficoms
and
mov
push
mov
mov
cmp
in
and
mov
in
xlat
pusha
aad
int
rcrl
cli
pop
jns
push
dec
std
out
mov
push
mov
in
enter
test
cltd
les
les
pop
ror
das
data16
js
mov
imul
sbb
push
push
adc
lahf
xchg
gs
stc
push
call
stos
jno
xor
mov
clc
mov
push
sti
sbb
das
cwtl
pop
push
ret
add
in
push
roll
mov
push
sub
xchg
adc
inc
sbb
into
cmc
mov
cmp
push
data16
stos
daa
add
fistl
inc
imul
ds
mov
imul
cmp
and
xchg
add
mov
fstpl
jae
inc
sub
popf
mov
and
xor
mov
repz
mov
sbb
mull
and
cltd
jno
fwait
push
adc
pop
sahf
loop
mov
dec
pop
mov
mov
lock
pushf
mov
sub
pop
jne
cmp
xchg
xchg
sbb
cmpsb
dec
aaa
and
jno
jmp
mov
in
xchg
pop
mov
xchg
mov
jne
or
cmp
sub
adc
movsl
or
fnstenv
sub
scas
test
mov
inc
push
lahf
jns
push
jb
xchg
pop
pop
cs
xchg
rcrl
push
mov
pop
ds
inc
xchg
repnz
mov
addr16
lret
sbb
adc
daa
stos
test
lds
addl
loop
pop
sbb
mov
jecxz
or
cmpsl
jno
dec
xor
xchg
mov
int
inc
mov
std
fwait
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
stos
inc
mov
sbb
cltd
orl
or
jbe
aad
sbb
dec
pop
mov
scas
pop
cmp
int
xchg
mov
shl
pop
out
dec
mov
hlt
sub
and
jns
les
or
scas
out
addr16
add
inc
data16
notb
ret
xor
inc
add
loope
push
cmp
scas
mov
mov
jbe
xor
lret
mov
movsb
mov
jmp
aam
and
pusha
es
add
and
mov
sarb
insb
test
or
mov
adc
cwtl
jmp
icebp
in
into
add
xorb
fwait
addr16
inc
sbb
jmp
push
dec
dec
data16
cltd
cwtl
sbb
fimull
cltd
movsl
adcl
sbb
dec
mov
mov
mov
insl
pop
xchg
or
jae
pop
xor
pusha
adc
jns
mov
in
aad
cmp
cli
or
fs
mov
sbb
mov
adc
mov
and
cmp
cltd
inc
adc
test
dec
add
inc
push
cmp
mov
push
and
aaa
mov
test
int3
jne
shl
xchg
pop
fisttpl
aam
jmp
loopne
paddw
aaa
xchg
mov
loop
mov
jbe
hlt
outsb
das
sbb
lds
mov
pop
aas
ljmp
push
push
mov
push
or
inc
lcall
push
jne
inc
fsubrl
out
ret
pop
addr16
clc
sbb
test
mov
mov
add
fldenv
pop
mov
aam
repz
push
push
lcall
rclb
push
lods
mov
mov
xor
mov
sub
push
fs
out
movsl
dec
pop
push
popf
mov
mov
pop
mov
scas
xor
movsb
shr
push
push
in
inc
adc
jmp
data16
pop
jno
cmp
aad
sub
mov
ret
push
add
mov
cld
mov
ret
mov
push
pop
sarl
pop
jp
nop
aaa
jg
xchg
cmp
inc
push
dec
jmp
mov
repz
arpl
scas
push
dec
dec
lock
xchg
lds
cmp
xor
and
cmpb
cmp
pushf
pop
out
out
popf
adc
out
addr16
mov
and
dec
adc
and
xchg
push
dec
sahf
enter
xor
sbb
cltd
icebp
mov
adc
dec
sub
aad
enter
in
jg
mov
icebp
xchg
mov
fsub
mov
int
hlt
out
es
movsb
sub
push
repz
xlat
pop
sub
mov
into
cmc
insb
js
aas
fnstsw
ja
js
pop
mov
xchg
js
lea
notb
xchg
and
pop
mov
divb
jle
mov
cwtl
push
xchg
lods
sbb
mov
pop
push
cmpsb
fxch
push
gs
sbb
outsl
inc
add
call
or
rcrb
jp
cmpsl
aad
je
aaa
incl
dec
ds
mov
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
push
loope
insl
enter
cli
imul
mov
mov
lret
pushf
mov
push
lods
dec
push
add
push
push
popa
sub
cmp
inc
xor
imul
test
rcrl
and
jmp
inc
imul
imul
jp
or
and
dec
cmp
rcrb
lret
inc
push
push
cmp
pop
fistpl
mov
cli
adc
mov
mov
in
or
mov
lock
fisubl
test
and
jbe
lret
xchg
lret
push
popf
xchg
mov
xor
and
loop
lahf
cmp
and
mov
cmp
out
sub
jo
movsl
push
inc
pop
call
fdivrs
lock
pop
aam
sub
push
pop
ret
leave
scas
imul
arpl
and
fistpl
iret
push
xchg
cmpsb
push
inc
adc
pusha
pop
mov
jb
andl
jne
sub
inc
jb
loopne
push
pop
cmpsl
mov
xorb
jg
loope
aad
sbb
aad
inc
mov
xor
mov
mull
xchg
inc
daa
and
cwtl
loop
int3
hlt
and
pop
dec
inc
cltd
in
icebp
das
movsl
mov
ret
lods
lea
and
mov
add
loope
shll
xchg
add
inc
mov
mov
cmp
inc
sub
xchg
lret
mov
outsb
pushf
popa
je
cmp
and
popa
and
pushf
daa
jno
stos
push
fistpll
sub
jl
or
or
fwait
stc
outsl
fsubs
dec
jp
popl
cli
outsl
xchg
out
orb
xchg
aaa
jge
in
daa
dec
test
outsb
push
jno
pop
fs
cld
mov
dec
cmp
lret
mov
mov
mov
mov
stc
in
adc
imul
jns
into
data16
sub
loope
dec
dec
fists
insl
loop
cld
stc
jmp
fmull
incb
addr16
js
das
or
popf
push
fadd
adc
bnd
cmp
cmp
inc
or
lds
cwtl
cmp
loopne
cmp
push
fldt
dec
cmp
aad
in
rol
mov
lock
cld
push
ds
xor
mov
push
push
daa
ja
std
mov
adc
lahf
test
sahf
xor
sbb
xlat
cmp
sti
mov
ds
imull
mov
jae
mov
cmc
shll
dec
inc
out
pop
iret
add
inc
jl
shlb
push
mov
sub
ds
push
imul
aad
dec
xchg
pop
lahf
mov
mov
sub
in
mov
dec
adc
sarb
xchg
mov
cmp
sbb
rclb
cwtl
scas
push
fs
cmpsl
pusha
push
ljmp
xlat
cmp
pop
and
cmpl
cmp
stos
push
sbb
test
jns
daa
pop
push
add
outsl
out
cmpsl
xor
push
jns
lahf
inc
push
aam
aad
jecxz
sub
mov
push
inc
mov
cli
adc
add
add
lret
cmc
push
dec
sbbl
xlat
lock
mov
ret
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
or
iret
arpl
movsl
popa
insl
pop
xchg
or
cmp
rorb
neg
pop
lock
inc
xlat
xor
pop
ljmp
sbb
inc
adc
mov
dec
lock
addl
ljmp
dec
xchg
mov
dec
int3
push
xchg
xor
pop
xchg
cmp
sbb
inc
scas
test
insl
andl
xchg
repnz
call
dec
ficoml
imul
and
insl
pushf
add
push
cmp
into
mov
push
push
stos
xchg
sub
cs
dec
sarb
fsts
pop
xchg
das
sub
mov
push
call
adc
aas
pop
shlb
fdivl
andb
stos
sub
adcl
cmc
mov
push
xor
jmp
repnz
test
insl
xchg
ja
push
push
jne
repnz
xor
pop
dec
dec
lret
lds
pusha
pop
lret
fsts
sbb
mov
xorb
pop
or
icebp
or
mov
cmp
push
jle
cmp
stos
stos
shrl
shlb
imul
xor
lcall
inc
push
rcll
sub
mov
mov
adc
push
int
push
and
pop
cmpsb
inc
les
inc
add
push
scas
xchg
popa
outsl
loop
mov
pushf
int
push
pop
leave
adc
pop
sub
mov
xor
in
push
in
out
aas
iret
into
test
pmaxsw
sub
int
call
push
je
cltd
pop
xor
sbb
lods
rcrl
sbbb
mov
mov
lods
cwtl
iret
add
and
xchg
sbb
sub
or
pause
in
adc
mov
popf
pop
jnp
cmp
or
cmp
xchg
xchg
or
out
call
adc
push
lds
ret
imul
add
adc
fistpll
add
cltd
cmp
scas
cmp
push
in
push
fistpll
jecxz
std
enter
inc
js
icebp
cltd
xchg
fstpl
xchg
ja
les
loopne
enter
insl
movsb
or
insb
nop
mov
jae
sti
inc
pop
call
lret
add
aaa
mov
dec
lds
push
lock
outsb
cmovo
xor
or
pop
xchg
andl
js
stos
mov
mov
mov
call
lods
outsb
lahf
pop
and
dec
push
sbb
int3
mov
movsb
test
mov
test
jge
mov
cmp
xchg
iret
push
push
roll
gs
dec
push
jne
xchg
test
cmc
mov
or
hlt
leave
in
lods
mov
pop
adc
jo
nop
aam
jno
dec
xchg
or
repnz
and
pop
and
shll
xor
jno
fdivr
push
jle
mov
push
lds
sub
sub
mov
mov
lahf
insl
xor
andb
inc
shll
fcoms
rolb
mov
test
aas
push
push
lods
popf
sbb
dec
pop
jl
push
adcl
data16
les
popa
push
sarl
adcl
mov
ss
mov
jne
les
sub
add
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
popa
mov
push
sbb
adc
sbb
loopne
clc
cwtl
inc
addr16
add
popf
jmp
cmp
lret
jae
sbb
sub
xlat
add
xchg
out
dec
in
dec
xchg
cli
jle
in
xor
sbb
adc
dec
or
loopne
cltd
jae
pushf
cltd
repz
js
add
cmpsb
lds
stc
rorb
mov
dec
testb
hlt
jle
xor
xor
xlat
cld
out
and
jbe
test
inc
xor
inc
pop
mov
jge
dec
les
lret
js
scas
push
aaa
push
mov
sub
xor
adc
test
xchg
pushf
je
xchg
push
pop
sub
inc
cltd
push
popa
fldenv
aas
icebp
pushf
adc
movsb
add
mov
jns
cmp
int
xchg
xor
ds
lret
push
aam
mov
inc
outsb
dec
jns
test
in
cmp
push
jne
icebp
jo
pop
ja
es
sub
out
jp
pop
inc
adcl
sub
nopl
jno
cmp
xor
gs
mov
push
sbb
cwtl
cmpb
jnp
mov
xchg
test
sub
pop
fs
loop
imul
loop
add
scas
xchg
fistpl
mov
mov
mov
aam
mov
and
and
nop
sub
or
iret
jmp
das
push
fwait
into
aam
ljmp
adc
cmp
push
mov
and
add
xchg
test
mov
push
jns
sbb
enter
test
or
popl
mov
inc
lods
test
stos
xor
mov
add
adc
xchg
xchg
cmpsl
xlat
fiaddl
or
stc
lahf
dec
inc
outsl
jae
mov
mov
adc
xor
adc
shl
mov
imul
xchg
hlt
lds
mov
negb
movsl
mov
scas
xchg
adc
mov
int3
movsb
in
pop
iret
ljmp
mov
mov
add
mov
mov
xchg
andb
jns
sbb
push
inc
mov
push
mov
cmp
int
push
bound
push
adc
inc
shrl
pop
jmp
jno
lods
mov
jne
jmp
mov
outsb
dec
mov
adc
lret
outsb
inc
push
pop
rolb
cwtl
jbe
test
dec
pusha
ret
cmp
popa
push
cmp
pop
out
xchg
push
xor
scas
pop
cmpsb
jo
jbe
out
out
loop
and
testl
jl
in
test
push
sbb
imul
adc
psadbw
jecxz
test
scas
test
dec
enter
nop
adc
cmc
std
jns
stos
in
sbb
fists
cmp
push
pop
leave
js
mov
add
cmp
adc
cmpsl
out
mov
iret
fadds
ja
push
add
fbstp
fs
sbb
push
fsubrl
mov
xchg
dec
jmp
out
shrb
inc
pop
cmp
fstl
dec
decb
lods
pop
sub
imul
adc
lret
dec
inc
mov
stos
mov
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
loope
inc
push
mov
sbb
pop
sub
es
mov
xchg
add
jge
sbb
pop
mov
xchg
inc
mov
xchg
adc
adc
fildl
addr16
jbe
dec
repz
add
std
dec
ret
xor
imul
pop
lcall
dec
mov
xor
shll
popa
mov
icebp
sub
inc
daa
mov
mov
sbb
cwtl
and
pop
add
mov
bound
sarl
cmp
mov
stc
mov
sub
dec
jae
fs
shlb
loope
ret
in
ss
scas
pop
inc
mov
ss
jo
fwait
in
bound
or
shl
stc
das
push
out
xchg
xchg
xor
cmp
enter
loopne
add
jo
outsb
mov
scas
test
repnz
push
xchg
sub
testl
test
adc
add
and
add
into
cmpsl
ficoml
xchg
fisttpll
jecxz
lahf
iret
dec
bound
jno
jae
mov
jl
loope
pop
jg
insl
jg
dec
pop
xchg
adc
dec
pop
mov
cmpb
shll
dec
dec
pop
mov
sahf
pop
out
pop
jne
and
test
sbb
xor
mov
ja
stos
mov
xchg
daa
pop
ret
int3
cmpsl
movsb
cmp
fisubs
in
std
arpl
mov
dec
add
loop
cmp
sbb
inc
les
or
push
iret
loopne
in
jns
cli
push
mov
stos
mov
adc
jp
sub
cwtl
stos
loopne
push
jae
repnz
pop
xor
or
sbb
dec
xchg
cmc
add
mov
mov
mov
push
jae
xor
sbb
cmp
rolb
fimuls
mov
jae
xor
insl
das
loop
gs
fcomp
ja
inc
mov
sub
cmp
mov
arpl
hlt
xor
mov
ds
notl
scas
addr16
pop
dec
cmp
orb
out
repz
xor
xor
clc
sub
pop
adc
mov
mov
xor
stos
cmpsb
outsb
aad
adc
xchg
mov
pop
mov
ret
mov
pop
stos
cmp
js
out
sbb
clc
pop
dec
or
imul
cmp
divl
dec
sub
nop
jo
into
dec
inc
stos
jmp
add
mov
inc
adc
aas
gs
xchg
inc
jp
push
fisubrl
mov
xlat
hlt
orb
cwtl
dec
xchg
test
loope
in
push
pop
enter
ja
xor
dec
rcrl
sbb
sub
lock
push
rol
xor
loop
hlt
popf
pop
shlb
jnp
iret
xor
cwtl
sub
and
sbb
cmp
cmp
jne
aam
cmpsb
cmpsl
mov
and
sahf
das
or
inc
sbb
mov
ficoms
out
add
xor
incl
sbb
pop
cli
pop
xorl
fadd
out
push
jp
mov
cmp
dec
out
into
sbb
mov
add
scas
mov
mov
andb
insl
out
push
adc
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
and
push
sbb
adc
sbb
cmp
cs
shr
mov
jae
icebp
int3
dec
les
inc
fwait
int
rcl
dec
loopne
adc
sbb
push
xor
xchg
testl
fadd
rcr
ret
fimull
cltd
mov
std
stos
add
inc
movsl
ficomps
xchg
daa
stos
or
xchg
mov
and
mov
das
and
cli
xor
mov
arpl
shlb
int
dec
and
xor
pop
rolb
lea
mov
dec
mov
ja
bound
xchg
jg
imul
jmp
cmc
dec
add
adc
fadd
in
push
cmp
cmpsl
sbb
pop
xor
jl
mov
lret
jle
ljmp
adc
loope
cmp
or
dec
mov
sbb
je
call
orb
or
dec
pop
cmp
inc
mov
cli
add
out
inc
sbb
jno
int
mov
fdivl
push
sbb
inc
adc
mov
push
aaa
pop
adc
xlat
and
clc
and
ret
mov
push
inc
outsb
inc
pop
lds
lods
push
jae
sarl
mov
int
jno
nop
es
cmp
lcall
test
mov
xor
repnz
xchg
repz
hlt
push
lcall
out
push
inc
jp
jns
mov
xor
cld
mov
cmp
push
push
dec
inc
sub
aad
mov
pop
sub
and
lock
loope
inc
int3
push
loopne
out
test
mov
or
rolb
cmp
xchg
xchg
cmp
and
test
push
cmpsb
lea
dec
sbb
sbb
flds
sahf
test
test
sub
pusha
aad
subb
lahf
roll
inc
es
ret
add
stos
xor
cmpb
out
int
cld
inc
adc
cmp
aad
lea
test
imul
adc
add
xchg
xor
xchg
sbb
fwait
jp
rolb
mov
aam
faddp
mov
lahf
fcom
jp
dec
les
dec
inc
or
lret
pop
sbb
sub
jge
fsts
jge
mov
pop
fwait
rcll
cmp
out
mov
lock
or
pop
ss
xchg
arpl
vmread
ret
jns
int3
lea
and
jae
lret
das
and
js
sbbl
mov
cwtl
mov
push
cmovne
inc
mov
fldl
cs
sbb
sbb
in
out
push
mov
in
push
mov
and
scas
out
sub
lock
xchg
int
addr16
push
cmp
test
orb
push
jge
ss
out
pop
xor
addr16
ja
test
push
push
xlat
push
mov
cltd
rorb
cmp
push
xlat
pop
pop
dec
pop
mov
jge
pop
clc
mov
mov
xchg
mov
cmpsl
or
std
mov
adc
or
add
pop
jge
imul
pop
xchg
je
mov
and
push
cli
addb
stos
in
push
loope
les
mov
shlb
ret
add
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
xlat
mov
and
sbb
push
addr16
loope
bound
push
add
fsub
lret
push
adc
test
lahf
xchg
push
pop
cmp
ror
ret
ss
pusha
enter
xchg
cld
xlat
scas
je
pop
sbb
call
sub
pop
insl
pop
add
xchg
add
lahf
andl
and
mov
jne
mov
mov
jns
cmp
mov
stc
dec
push
jmp
mov
dec
std
dec
insb
xchg
inc
sbb
or
testl
add
aas
jg
mov
jmp
popa
lea
mov
lods
mov
mov
cltd
inc
jno
sbb
fcomi
daa
in
dec
cli
lods
cmp
and
mov
adc
hlt
adc
js
xchg
loope
push
mov
imul
push
testl
cmpsb
iret
jge
out
jp
push
xor
xor
adc
xchg
mov
ja
sbbl
in
nop
sub
das
push
out
sub
mov
push
inc
stos
cmp
sbb
imul
movsl
sbb
jmp
cmp
or
aas
and
dec
sub
mov
xor
dec
jle
mov
stc
sub
orb
ficoml
cmp
cli
lods
nop
lret
inc
cs
adc
mov
loopne
and
fdivrp
add
xchg
mov
gs
add
arpl
out
inc
mov
xchg
fisttpl
mov
insl
lcall
pop
push
pop
or
mov
xchg
inc
loopne
call
push
insb
rcrb
xor
and
test
xor
adc
sub
inc
outsl
xchg
negb
sub
and
or
and
shrb
or
pop
adc
enter
repz
out
push
jmp
jo
sahf
fwait
cwtl
jno
shl
call
sub
lock
ret
bound
mov
nop
pop
dec
sub
rcll
popf
inc
mov
in
fcmovne
inc
jo
sbb
mov
cmp
roll
fdivrl
mov
dec
lods
dec
sub
cmc
ss
popf
cli
jns
jbe
out
sub
pushf
loopne
push
gs
add
push
sarl
lds
sbb
into
fucomp
sbb
push
xchg
mov
push
and
add
hlt
repz
push
insb
test
aad
adc
mov
frstor
cltd
outsl
push
mov
fistps
jne,pn
es
pop
cmpl
shl
shlb
cmc
mov
shlb
fwait
sub
sub
pop
std
stc
sub
push
stc
mov
lods
arpl
cs
call
das
xchg
mov
into
xchg
ffree
lret
xor
and
cltd
stc
xor
ss
adc
dec
inc
pop
adc
xchg
lahf
sbb
stc
aam
insl
ror
mov
sub
testb
rorl
daa
cli
mov
pop
xchg
push
xchg
jne
in
and
jecxz
sbb
pop
stos
inc
in
sbb
int
stc
lods
in
jae
mov
pop
jb
shll
rcr
push
inc
dec
inc
jge
lret
test
call
test
jns
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
jl,pt
jle
lea
sbb
adc
sbb
into
inc
cli
mov
jecxz
pushf
test
push
xchg
gs
xor
adc
cld
mov
inc
daa
inc
adc
out
xchg
pop
or
mov
popa
push
xlat
sahf
mov
icebp
ja
shlb
or
insl
fcomps
cmc
lcall
jne
mov
sbb
or
mov
aad
push
not
in
aaa
and
dec
stos
and
ret
scas
and
sbb
std
push
icebp
lret
pop
mov
mov
data16
ror
adc
test
lcall
pusha
add
or
mov
out
out
cmp
hlt
lfs
add
jne
scas
push
popa
add
xchg
xor
sahf
mov
sub
adc
mov
sbb
pop
in
xor
imul
mov
movsl
adc
xor
xor
cmp
les
ret
imul
loop
sub
push
lods
fsubs
out
inc
jl
mov
mov
gs
cmp
sbb
lahf
repz
pop
push
mov
ret
jo
lods
idivl
bound
outsl
add
enter
sahf
out
nop
test
mov
test
ja
push
stos
cmp
mov
xor
fnstsw
sbb
fsubs
or
scas
ljmp
jecxz
xchg
inc
cs
test
cmp
notl
scas
xor
sub
mov
sub
push
xchg
rcl
push
xor
cmpsb
dec
or
gs
lea
addr16
xchg
mov
jno
cmpsl
mov
inc
ja
insb
xor
stos
jbe
cmp
lds
jno
jp
sbb
adc
pop
adc
movsb
and
in
repz
sbb
lahf
jmp
lret
push
pop
push
shlb
shlb
leave
lds
je
lret
push
repz
pushf
into
dec
cwtl
pop
ja
sub
ds
lea
aas
cmp
pop
sub
adc
adc
aam
pop
leave
in
daa
jmp
pop
sbb
pop
icebp
lock
mov
lcall
lret
jns
add
test
loopne
xchg
aas
sbb
les
stos
push
push
mov
in
push
push
push
adc
cmp
hlt
imul
cmpl
push
pop
cmpsl
stos
mov
shlb
call
jmp
dec
cwtl
cmpb
jne
jg
aam
movsl
fwait
shl
pop
xchg
mov
mov
sub
addb
and
push
dec
in
daa
pop
or
inc
xchg
mov
jge
lods
add
mov
mov
inc
pop
sub
jne
jp
shll
jo
out
test
cmp
xchg
jae
inc
jge
or
stc
lahf
clc
jb
aaa
sbb
fs
fstpt
popa
mov
test
fistpll
dec
xor
dec
inc
lea
cmpsl
push
pop
rcrb
mov
dec
jnp
dec
dec
sub
das
pop
fmull
mov
inc
or
pop
cld
mov
hlt
sbb
add
pop
dec
adc
dec
fnstsw
repnz
ja
or
pusha
push
js
or
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
test
xchg
sbb
adc
sbb
mov
fcomps
fldl2t
mov
cmp
hlt
mov
daa
loopne
mov
jg
inc
mov
in
mov
push
outsb
inc
ficomps
xchg
rclb
jge
lret
das
rorl
sbb
sub
inc
mov
push
stos
lcall
dec
out
push
loop
jmp
bound
jne
cld
rcll
loopne
aad
enter
add
insl
mov
fcmove
stos
adcl
pop
inc
mov
sbb
stc
loopne
test
mov
adc
xlat
fldenv
adc
out
mov
jge
lret
test
int
mov
lahf
lds
out
adc
std
call
xlat
repnz
in
mov
cmp
push
outsl
add
sbb
push
and
add
loope
mov
rcr
jno
adc
add
inc
out
and
jns
pop
pop
cwtl
loop
adcl
hlt
xor
aam
and
inc
mov
icebp
sbb
ja
test
arpl
orb
adc
fidivs
aaa
adc
cs
out
add
int3
mov
add
lea
fwait
pop
cltd
jb
dec
add
xchg
rclb
arpl
jnp
mov
shr
test
mov
pop
xor
lcall
push
in
jb
ret
das
mov
mov
lcall
test
enter
add
pop
repnz
add
daa
lds
mov
je
stos
repnz
mov
pop
sbb
gs
push
mov
pop
lods
in
xchg
adc
scas
popa
sti
out
imul
pop
int3
xchg
jne
mov
or
xor
jne
movsb
popf
inc
jne
ja
adc
in
sub
mov
fwait
inc
jmp
push
mov
push
icebp
fcom
hlt
and
dec
or
enter
adc
jnp
or
fistpl
je
xlat
aam
jbe
adc
mov
pop
sub
test
sub
sbb
xchg
jb
pop
mov
and
ljmp
mov
dec
cmc
pop
loop
sbb
and
jo
sub
sbb
int
or
test
lods
push
cltd
je
shlb
pop
pop
jp
cmp
inc
stos
lods
shll
loop
dec
in
popa
pushl
or
xchg
mov
mov
mov
mov
bound
jo
mov
xor
subb
dec
sub
inc
push
in
andb
les
mov
adc
sahf
push
push
into
fnstsw
push
dec
jae
inc
rcrl
mov
in
movsb
and
xchg
rcrb
mov
lcall
je
std
loop
shr
dec
and
lret
mov
mov
mov
pushf
inc
mov
sbb
or
lcall
mov
popa
jne
sub
repz
ss
pop
mov
sbb
lahf
popa
ror
dec
dec
popf
stc
insl
call
jge
mov
push
repnz
mov
mov
sub
jge
fldenv
in
ja
pop
jge
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
aaa
push
jg
sbb
adc
sbb
inc
mov
xor
mov
cmp
shr
mov
dec
ss
bound
sbb
or
popf
adc
add
nop
jg
inc
ficoml
das
ret
fisubrl
push
mov
cwtl
loopne
mov
bound
mov
test
push
int3
or
push
insb
mov
fisttpl
and
leave
sub
dec
repz
adc
cmp
sub
clc
sar
adc
mov
jg
add
xchg
cli
and
pop
or
xchg
repnz
negb
pop
movsb
lods
mov
or
push
nop
leave
sub
movsl
or
loop
jo
fsts
movsl
iret
loopne
adc
cli
insb
cli
out
loop
jne
push
mov
mov
jne
sub
add
pop
mov
inc
dec
rorb
mov
mov
inc
inc
push
stc
pusha
push
jno
out
xor
inc
fs
cmp
mov
mov
addb
jbe
imul
cmc
push
add
pop
fistpl
arpl
lahf
cmp
cli
mov
pop
rep
addb
push
sbb
mov
add
popl
mov
loop
dec
js
add
jecxz
inc
out
icebp
sub
mov
ljmp
pop
or
push
lock
pop
mov
xchg
xor
xor
popa
sub
add
ds
pop
inc
fwait
int3
int3
aam
mov
push
test
jo
mov
sbb
repz
mov
stos
icebp
inc
les
pop
fsubl
sbb
rcrl
push
outsl
pop
or
xor
mov
adc
addl
das
int
insb
jnp
pop
enter
inc
iret
cmpsl
or
mov
mov
xor
push
jl
or
std
sbb
out
mov
jne
daa
insb
xchg
lds
rolb
lock
inc
mov
cmp
arpl
mov
mov
push
rcr
lcall
push
in
sbb
loope
adc
add
jno
in
es
push
movsl
iret
xlat
stc
lods
jnp
ds
lahf
pushf
pop
ss
in
push
movsl
out
ja
ret
dec
pop
adc
mov
xchg
cmp
jmp
insl
stos
mov
jmp
cmpsb
sub
dec
addr16
jge
fbld
or
sarl
dec
sbb
rclb
jge
sarb
or
in
pop
nop
push
sub
jp
shr
popf
clc
cmp
xor
roll
leave
sti
jno
outsl
xor
aam
aas
push
cwtl
cmp
in
nop
push
push
sbb
mov
sub
in
insl
xchg
mov
inc
cmp
cli
repz
je
fmuls
xor
sub
sub
cmp
pop
pop
pop
mov
mov
push
xor
lahf
pop
fcmovbe
insl
scas
mov
sub
call
jmp
sub
xor
dec
or
mov
fimull
cmpl
mov
icebp
aaa
movsl
xchg
sbb
and
push
jbe
sbb
fimull
or
push
stc
mov
pop
cmpsb
inc
pop
iret
enter
add
xchg
pop
mov
imul
dec
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
sub
sbb
sbb
adc
sbb
push
testl
sbb
repnz
push
add
call
jmp
sbb
or
neg
fs
mov
loop
sub
mov
aas
xor
cmpb
faddl
sub
mov
out
pop
je
jmp
shl
adc
push
test
mov
fnsave
push
das
inc
fisubs
push
fists
pushf
addb
add
mov
negb
and
fcompl
inc
les
mov
xchg
cmpsb
rcrb
cmp
mov
mov
mov
and
sbb
aas
mov
mov
lods
in
fcomip
push
xor
movsl
mov
sbb
mov
rcll
or
loope
clc
or
loopne
jle
test
gs
mov
adc
mov
shl
lcall
add
or
mov
xchg
adc
fistpl
ds
movsl
mov
sahf
outsl
xorl
test
das
dec
fistpl
cwtl
xchg
test
popa
mov
dec
dec
dec
imul
leave
mov
pusha
lahf
int3
lret
adcl
or
ss
aad
dec
into
fidivrs
repz
jge
and
outsl
aas
sbb
mov
div
in
or
and
cs
repnz
inc
inc
push
sbb
jge
daa
in
or
sub
inc
cltd
clc
ret
xchg
imul
inc
stos
cltd
notl
adc
sbb
xor
roll
push
imull
aad
push
sbb
add
jns
stc
jo
adc
inc
mov
xorl
das
pop
shr
mov
sar
shlb
outsl
push
cs
test
dec
and
lahf
add
dec
clc
or
orb
rcrl
cmp
jl
mov
inc
xor
int
outsb
aad
dec
inc
fdivl
into
xor
daa
lds
xchg
in
mov
sbb
mov
cmp
leave
mov
fcomps
cmpsl
sub
repnz
adc
mov
xchg
movsl
sbb
jne
and
pusha
repnz
inc
arpl
fdiv
ret
jo
dec
mov
push
ret
push
dec
dec
sub
ror
ljmp
jnp
dec
stos
xor
cli
xor
xlat
add
in
lcall
bound
add
jae
or
sbb
xor
lcall
jbe
bound
xchg
sarl
fs
push
push
or
test
pop
mov
xor
lods
pop
xor
mov
fldt
and
xlat
mov
lds
fcmovbe
bound
or
mov
call
sahf
pop
xorb
fiaddl
loop
fwait
mov
cmc
insl
and
dec
add
adcb
lods
mov
xchg
arpl
stc
jmp
out
pop
push
push
pop
jge
dec
push
hlt
cwtl
subb
nop
xchg
adc
fldl
ljmp
pop
lcall
cmp
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
lea
sbb
adc
sbb
mov
call
adc
scas
dec
cld
sti
ds
mov
daa
imul
mov
add
jg
jge
repz
das
pop
fdivs
cwtl
and
mov
or
pushl
rcl
jnp
sub
clc
xchg
or
xchg
or
and
mov
and
cld
xor
ja
and
shl
daa
mov
sbb
shl
mov
sub
mov
pop
stos
xlat
out
pop
and
outsb
stos
or
clc
scas
jns
repz
jecxz
mov
out
mov
ja
adc
repz
inc
sub
lods
jecxz
dec
aas
sub
inc
in
iret
sarb
and
into
xorl
jp
aad
push
insl
rcll
mov
fdivrp
xor
xchg
hlt
mov
iret
sbb
addr16
jmp
dec
clc
sub
fiaddl
into
inc
je
pop
cmp
jp
lea
adc
fs
out
xchg
arpl
xchg
aas
cmp
out
xchg
out
push
clc
cli
mov
adcb
fldl
stc
xor
jb
lea
jl
inc
add
out
lods
pop
or
xor
mov
leave
xchg
sub
or
enter
xchg
pop
xchg
xor
jg
sbb
pop
jmp
push
push
into
scas
xor
jecxz
imul
jmp
test
shlb
mov
lods
xchg
xchg
cmp
hlt
push
xor
lcall
sub
and
cwtl
mov
mov
jle
cld
fmuls
or
mov
sbb
jb
sbb
jb
mov
clc
push
cmp
cwtl
pop
pusha
add
pop
push
test
pop
pop
push
inc
cmpsl
pushf
cmp
sub
cmpsb
or
movsl
and
rcrl
jecxz
inc
sbb
clc
mov
mov
imul
out
das
scas
adcb
push
lret
mov
cmp
add
imull
xchg
add
sub
sbb
sub
mov
cmp
fdivp
fs
out
insl
xchg
lret
mov
in
scas
repz
out
lret
cmc
in
add
fdiv
mov
cmp
aaa
push
xor
bound
mov
push
mov
cmpsl
loope
aad
cs
dec
cld
inc
mov
mov
scas
fnsave
push
pop
adcl
or
int
add
inc
jmp
and
jle
sub
xor
stc
push
fnstsw
inc
repz
mov
aaa
sbb
pop
cmp
outsb
fisubrs
fucompp
insb
in
push
sub
rorl
fcmovnb
imul
mov
or
cmp
loope
mov
and
sub
or
into
aas
incl
ja
lock
mov
fimuls
push
stos
sub
out
mov
les
loopne
das
cmp
dec
int
dec
inc
sbb
stos
cmp
mov
js
or
in
aaa
xchg
dec
aas
jg
add
ja
cmp
mov
ret
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
pop
or
mov
adc
sbb
push
test
mov
xchg
and
mov
mov
pop
pushf
dec
inc
jb
pop
enter
test
scas
enterw
dec
inc
sbb
pop
sahf
subb
add
inc
sbb
add
push
add
adc
mov
fs
mov
jbe
pop
dec
add
adc
or
push
ljmp
fs
push
lret
mov
push
inc
add
mov
adcl
lcall
xchg
lahf
lds
js
cltd
mov
lret
cwtl
int3
mov
sbb
xchg
push
cmp
mov
mov
cld
xor
js
mov
cmp
push
and
repnz
xchg
pop
cmpsl
cwtl
subl
inc
nop
xchg
pusha
inc
pop
es
not
mov
xor
jno
jae
scas
jns
insb
adc
fdivp
ja
push
data16
push
adc
rol
jbe
adc
lcall
pop
xor
pop
movsb
aad
sub
out
xor
test
xor
andl
cwtl
sub
imul
cmpsb
test
loopne
cmp
fsub
iret
gs
push
xchg
inc
imul
movsl
arpl
lahf
cwtl
popa
dec
repnz
nop
aaa
jmp
out
data16
cmp
mov
in
js
add
xchg
rorl
mov
xchg
cmp
fldenv
dec
rorl
add
xor
divb
or
push
cmp
cltd
adc
cmp
sub
repnz
inc
pusha
jecxz
mov
push
dec
add
add
push
fidivs
int
movl
cmp
sub
add
ror
pop
lds
test
inc
or
inc
lahf
sbb
cmp
jl
jo
jo
gs
inc
pop
or
test
mov
jns
dec
ss
bound
mov
fcoms
out
xor
adc
xchg
ja
insb
xor
ret
push
sub
push
and
xor
xchg
pop
faddl
das
dec
lea
daa
mov
cs
lret
addb
inc
sub
cmpsb
add
xor
xor
sahf
call
pop
std
test
insl
dec
mov
xor
inc
xor
cli
leave
xchg
mov
std
insl
and
jns
xchg
mov
aam
add
dec
pop
xchg
outsb
sbb
adcb
pop
and
popf
mov
aam
rcr
adc
not
ds
jl
popa
mov
xor
cltd
cltd
cmp
test
xchg
fiaddl
clc
mov
lods
mov
inc
repnz
push
or
jo
or
sar
scas
int
pop
sub
lcall
jmp
call
data16
cmp
inc
testb
xlat
subl
rorl
cmp
push
mov
mov
aaa
js
or
lea
mov
jb
cmp
inc
pop
dec
jbe
ds
sbb
xchg
pop
mov
add
inc
dec
arpl
jmp
lret
inc
xor
sub
jo
and
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
pop
xchg
jle
arpl
sbb
adc
sbb
dec
add
inc
cli
out
dec
dec
push
cmp
lret
sub
pop
push
mov
push
dec
dec
adc
pop
push
leave
or
js
mov
insl
jg
mov
inc
iret
inc
xchg
jmp
add
mov
hlt
xorb
pushw
jnp
jp
ss
enter
es
jb
shl
jle
cltd
fcmovne
or
add
lahf
fdivl
jmp
bound
fisubrl
pop
sbb
xchg
bound
sbb
mov
mov
add
mov
or
in
lret
pop
lret
enter
xor
lret
push
cli
dec
hlt
test
lahf
mov
movsl
xor
jns
lret
mov
aam
and
insb
lds
dec
sahf
lods
cmp
lods
xchg
out
sub
ret
cli
frstor
fildll
scas
ret
adc
jl
data16
imul
sub
sbb
jb
xor
cmc
and
inc
pop
in
test
gs
adc
in
hlt
sti
mov
mov
hlt
insl
add
into
xchg
fsts
or
dec
sarl
xlat
test
aas
dec
mov
adc
shll
cmp
rorb
in
sbb
adc
flds
loopne
mov
loop
jbe
xchg
hlt
cmp
fs
mov
lcall
daa
enter
mov
cs
ret
leave
int
sub
pop
aas
and
cmpsb
test
push
and
outsb
dec
leave
daa
adc
jge
icebp
sub
xor
pop
aam
push
dec
std
hlt
lahf
addr16
out
je
scas
mov
add
stc
shrl
dec
dec
mov
xchg
jbe,pt
cmp
mov
jmp
das
jl
push
jmp
pop
mov
loope
lahf
dec
cmp
outsb
pusha
lcall
iret
js
inc
loopne
test
popa
cmpsb
inc
cmp
inc
sub
mov
push
push
push
jae
cltd
lea
fucom
cmp
jp
jge
outsl
xchg
mov
in
mov
pop
xor
mov
pop
sub
int3
loopne
fdivrl
xchg
mov
iret
fldlg2
xchg
jge
inc
in
cmp
mov
push
xchg
cmp
push
xor
lea
push
xchg
rcrw
pop
std
cmpsl
stc
cld
addr16
ljmp
sbb
cmp
xchg
dec
rol
add
ljmp
sub
mov
in
xchg
push
fs
arpl
ret
mov
aam
dec
add
popl
xor
dec
add
mov
test
pop
scas
mov
cs
cmp
insl
pop
sbb
cs
mov
cwtl
pop
mov
jge
jp
sub
mov
mov
jno
daa
or
rorb
pop
pop
xchg
cltd
inc
jecxz
push
inc
pusha
or
lock
out
insl
xchg
out
pop
leave
add
or
lcall
aad
not
push
xor
push
cmp
add
sub
lds
push
inc
sbb
enter
mov
gs
add
mov
jmp
mov
inc
sbb
mov
xchg
std
mov
push
add
pop
add
cli
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
adc
sbb
adc
sbb
repz
loope
in
mov
adcl
subl
and
test
xchg
fistpl
insb
mov
mov
mov
shlb
lret
push
dec
in
lods
or
stos
daa
sub
adc
shrl
cld
aam
jns
dec
add
icebp
mov
sub
repz
clc
les
and
test
std
jno
movsl
push
cs
sbb
mov
cmp
scas
sarb
test
lcall
or
and
cmp
sbb
bound
je
push
ds
loope
ror
imul
pushf
adcb
xor
das
sbb
xor
push
fisttps
insl
sbb
and
add
dec
movsl
cwtl
outsb
fdivrl
mov
and
popf
push
fxtract
cmpb
jb
insb
adcl
and
mov
mov
push
scas
je
notb
mov
or
lret
cld
and
push
test
or
sub
push
mov
jecxz
or
mov
sub
pop
push
js
ja
mov
ss
lret
or
adc
add
sbb
lock
cmpsb
adc
push
push
inc
mov
cs
and
xor
orl
or
dec
aaa
mov
shlb
daa
popf
or
xor
xorl
aaa
jo
cmp
aam
mov
xor
xchg
add
or
pop
push
hlt
or
jns
bound
cmp
sbb
xchg
lea
lret
daa
dec
int3
ljmp
xchg
xchg
adc
lcall
push
aaa
mov
xor
rcrl
sbb
mov
out
push
adc
jmp
lret
dec
inc
push
ljmp
add
adcb
and
cmp
push
lock
imul
mov
les
jmp
loop
filds
cs
xchg
jne
dec
loopne
sahf
mov
mov
mov
xlat
lahf
sar
xchg
inc
pop
push
add
or
and
cmp
push
xchg
repz
and
mov
sub
push
dec
xor
add
adc
test
out
add
aaa
filds
add
sbb
sti
jns
jge
popf
mov
inc
push
jbe
int
xor
adc
mov
add
fsubrp
cltd
push
sub
or
jp
addr16
jle
dec
lods
mov
inc
test
jl
lds
out
adcl
jecxz
pop
xchg
imul
movsb
mov
cltd
inc
aas
js
test
push
bound
mov
mov
add
sub
idivb
loop
sbb
push
cmp
inc
sub
testb
loopne
jg
popf
xorb
testl
pop
add
test
outsl
jmp
push
into
adc
loopne
push
or
dec
test
sub
mov
mov
cmp
mov
pop
cmp
cmp
push
leave
das
lea
das
adc
daa
pushf
imul
mull
call
add
stos
cmpsb
decl
lea
test
incl
lret
call
test
std
decl
adc
add
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
stos
mov
push
push
sbb
adc
sbb
add
test
or
pusha
rorl
cs
sti
ljmp
cmp
aaa
addb
gs
rdpmc
insl
xlat
aaa
fsubrs
cs
addl
mov
aam
rorl
jecxz
mov
mov
test
mov
int
pop
lods
out
jns
jb
lods
add
pushf
mov
jmp
sbb
or
xchg
clc
xor
daa
notl
jno
fadds
gs
out
mov
inc
mov
jecxz
in
shl
lret
mov
xor
pop
mov
sub
pop
dec
fsubl
mov
jns
in
pop
cld
xor
mov
shrl
cmc
in
mov
insb
cmp
pop
aad
push
imul
mov
add
addr16
push
and
cmp
inc
test
pop
xchg
sbb
orl
in
lret
lods
mov
movsb
inc
fisubl
mov
sub
or
in
inc
jmp
mov
scas
jbe
ja
aad
jbe
ja
inc
cmp
pop
jbe
or
call
aaa
clc
lcall
into
push
inc
push
mov
loope
fbld
mov
aas
sub
fwait
leave
sbb
jo
mov
xor
pop
sub
xorl
mov
repnz
cmpsl
popa
cli
cltd
repnz
roll
cld
insb
loope
ret
cmpsl
pop
in
in
jne
test
mov
cmp
fists
in
fidivrs
stos
pop
scas
dec
and
arpl
lahf
call
out
pop
mov
jb
aas
out
jp
mov
mov
lods
adc
mov
addr16
movsl
loop
inc
out
cs
push
push
ja
fsubrs
cwtl
pop
xchg
repz
cli
cmp
les
push
jmp
js
jmp
mov
lret
js
and
xor
roll
insb
and
mov
inc
pop
inc
jmp
in
in
xchg
lods
mov
jnp
mov
inc
dec
mov
mov
jbe
pusha
je
aaa
cmp
je
inc
pusha
mov
mov
popf
mov
cmpps
inc
nop
mov
mov
mov
out
lods
or
pop
sti
out
mov
pop
inc
adc
mov
sub
sti
or
fwait
into
xor
fidivl
iret
popa
call
dec
lea
mov
scas
aas
xor
add
stos
mov
cmp
int3
insb
cwtl
lcall
add
xchg
xchg
inc
icebp
jle
out
incl
push
mov
arpl
push
jg
sbb
pop
imul
loope,pn
cli
pop
shll
adc
mov
sti
test
add
push
mov
inc
fcmovu
adc
mov
inc
xchg
mov
aas
mov
adc
test
pusha
pop
sbb
mov
jno
fldcw
and
cmp
xchg
fbld
inc
out
iret
subb
add
dec
push
cltd
lods
sbb
sub
movsb
push
cmp
add
popa
cmp
loop
inc
pop
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
inc
push
stos
enter
and
sbb
jo
sti
daa
xor
cs
mov
push
sar
cmp
mov
fstl
dec
shll
push
lahf
mov
jecxz
enter
push
xchg
and
insl
jbe
adc
repz
mov
ja
mov
loop
adc
sbb
jp
lock
pop
xchg
pop
testl
cld
push
inc
mov
xchg
addb
and
loope
push
xor
out
push
jecxz
in
xor
xchg
int3
sub
sbbl
dec
mov
or
outsl
ljmp
mov
mov
dec
push
movsb
nop
adc
cs
add
icebp
jle
popa
clc
lret
jo
std
xchg
stos
enter
scas
cmp
les
scas
test
or
lret
test
adc
cld
test
push
inc
sbb
out
sbb
or
sub
addl
sub
mov
pop
xchg
mov
mov
sbb
cmp
repz
adc
bound
movsb
adcl
mov
inc
scas
mov
in
inc
xor
movsb
shll
sbb
xabort
sbb
idivb
add
lods
sahf
roll
add
test
jo
jmp
loop
push
xor
outsb
ja
dec
lret
lret
cmp
mov
xchg
rcll
mov
insb
add
xlat
xchg
mov
push
pop
stos
push
adc
adc
adc
cmp
enter
test
roll
test
push
loop
push
inc
shlb
pop
xchg
or
mov
dec
arpl
mov
sbb
jnp
xchg
iret
lods
mov
ret
and
push
xchg
pushf
jg
in
repnz
out
das
rcrb
or
mov
gs
fsubs
mov
pushf
dec
lcall
mov
hlt
mov
pop
or
test
cmpb
test
jne
jecxz
popf
mulb
push
push
xchg
pushf
fwait
into
inc
lds
fstpt
lret
jb
mov
inc
movsb
sahf
xchg
aam
or
in
lds
dec
sbbb
js
inc
loope
stos
dec
cltd
jle
jg
pusha
dec
loop
jae
ss
test
push
rclb
xor
pop
push
dec
mov
and
lods
mov
or
xchg
rcll
adc
negl
adc
xor
sbb
adc
popa
mov
mov
insb
notb
push
cmpsl
mov
and
test
push
lds
repz
in
ret
inc
or
popf
push
dec
int
jecxz
test
nop
sahf
mulb
add
inc
push
cmpsl
stos
sbb
shlb
fisubrs
pop
dec
sti
add
imul
jne
sti
mov
in
jae
jg
mov
ljmp
fildll
iret
mov
jnp
mov
xchg
add
sub
loope
loope
div
mov
stos
add
enter
ret
fists
aad
insb
or
and
pop
cmp
adc
fbstp
movsl
sbb
aaa
rcrb
inc
and
jecxz
jecxz
dec
aas
push
inc
and
sbb
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
testl
sbb
push
jp
ljmp
popa
sbb
push
ljmp
sub
fcmovu
sbb
xchg
jns
std
xor
mov
or
sti
or
and
scas
sbb
std
cmc
pusha
jo
in
mov
or
lahf
mov
cs
sub
mov
cwtl
sbb
adc
repnz
mov
test
push
push
std
xchg
lret
or
in
ror
lret
testb
xchg
mov
test
jmp
scas
testb
sbb
and
inc
lock
mov
fsubl
xchg
push
adc
dec
test
and
es
test
jl
jno
inc
repz
test
adc
outsb
lcall
aaa
in
lock
std
shrb
cmp
mov
mov
cmp
jnp
cli
fldl
jmp
mov
fildll
sbb
pop
mov
add
imul
cmp
push
mov
lret
adc
sbb
call
leave
xchg
das
aam
adcl
aam
std
je
xor
in
cmp
jns
test
arpl
pop
push
mov
jle
push
stos
das
mov
roll
outsb
pop
cltd
mov
es
push
push
jge
sub
xor
ret
add
test
sbb
lds
dec
test
jnp
dec
pop
pop
adc
lock
imul
leave
dec
push
lret
sahf
pop
dec
cmp
call
mov
pop
inc
push
xorb
dec
push
shll
mov
dec
xor
and
add
cmp
or
pop
sbb
fiaddl
fstpt
xchg
mov
dec
xchg
dec
popf
scas
or
mov
ficompl
jge
jb
and
movsb
mov
mov
push
push
clc
icebp
cmp
or
in
cmpsb
fisttpl
xchg
push
pusha
mov
cwtl
loop
pop
mov
xor
fiaddl
cld
in
fistps
ret
lock
mov
mov
mov
scas
add
addr16
shll
pop
movsl
js
or
stos
pushf
push
xchg
adc
imul
popa
lcall
cmp
dec
scas
dec
fnstsw
add
aam
dec
dec
cltd
cmp
jg
daa
jge
dec
mov
jmp
xchg
mov
icebp
inc
cmp
in
out
mov
cs
jl
mov
js
fstpt
jmp
in
jecxz
std
xor
lods
das
jg
sbbb
sub
test
ja
loop
in
pop
test
mov
inc
fsubrs
push
popa
or
add
sub
idivl
aam
loop
cmp
mov
shll
add
cmp
cmpsl
movsl
in
sti
push
dec
pop
mov
cmc
xor
test
ffree
cmp
loop
dec
add
mov
jle
dec
ret
popa
sbb
dec
add
xor
sbb
xchg
lret
int3
iret
mov
rol
test
pop
push
or
call
cmpsl
cli
sub
jae
and
pop
rorl
jmp
cmpsb
gs
cmp
dec
dec
mov
gs
inc
add
jle
or
imul
imul
xchg
adc
inc
shr
add
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
xchg
cs
stc
pop
push
mov
iret
jno
cltd
popa
mov
add
mov
fucom
sub
jnp
inc
jl
pop
cmp
mov
insl
mov
push
cmp
stos
mov
adc
dec
ss
fimuls
add
mov
and
mov
and
mov
xchg
xor
dec
push
pop
addb
mov
xchg
add
test
js
jecxz
add
jge
push
xchg
dec
or
dec
outsb
mov
push
xor
fwait
inc
cmpsl
mov
pop
daa
cld
mov
push
addl
cmp
add
inc
adc
jb
or
addr16
xlat
pop
dec
dec
sub
scas
mov
push
dec
test
stc
inc
mov
push
sub
dec
in
jo
push
sbb
in
sbb
outsb
dec
fldt
inc
mov
movsl
push
sbb
fcmovb
cmp
scas
adc
stc
or
cmp
dec
int3
hlt
mov
mov
xchg
jns
jnp
les
lahf
movsb
push
and
mov
js
arpl
rclb
inc
cmp
sub
fadd
or
and
in
pop
mov
xchg
mov
or
test
mov
and
das
push
ficoml
xlat
pmulhw
fnstcw
jp
rcr
push
arpl
lea
int3
div
push
mov
push
push
push
out
or
mov
int3
adc
test
insb
icebp
mov
in
pop
cmp
cwtl
dec
push
push
adc
cmp
jo
xchg
shl
loopne
xchg
cld
xor
ss
inc
sub
push
push
or
adc
mov
mov
or
jle
sahf
ss
and
cmp
in
and
je
jns
adc
ror
sub
je
inc
or
add
mov
jge
imul
imul
fdivl
mov
push
push
pop
mull
int3
mov
imul
add
mov
pop
nop
mov
mov
shrb
and
add
out
mov
or
iret
nop
sbb
imul
push
dec
lret
pop
mov
mov
aaa
pop
lods
and
das
mov
loopne
lret
pop
or
adc
orb
add
cmpsb
mov
dec
xor
les
mov
orl
in
add
push
ljmp
rorb
call
cmp
call
sub
pop
mov
shl
cmp
mov
cmpsb
push
cmpsl
out
stc
loope
cmpsl
lea
push
cltd
hlt
mov
dec
jmp
popa
ds
mul
into
push
call
pop
cld
pop
shrl
ror
pop
je
jns
xchg
loope
fwait
loop
jge
in
clc
or
mov
sub
outsl
dec
push
rol
push
imul
pop
imul
mov
or
xor
mov
or
push
aad
shl
dec
insb
repnz
stos
sbb
dec
adc
in
jb
in
xor
xchg
out
dec
rcrl
js
lods
jl
add
or
dec
xor
inc
cmp
lahf
jmp
xorl
in
orl
lahf
pop
and
mov
rcr
xor
xlat
cmp
scas
enter
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
jl
cmp
sbb
adc
sbb
mov
icebp
fcom
mov
sub
jne
addr16
out
ds
mov
pop
xor
sbb
rcrb
std
or
lods
mov
mov
xor
pusha
int
cmp
push
mov
xor
jno
dec
es
iret
cld
pop
stos
jmp
ret
jb
cmp
mov
and
in
gs
rcll
hlt
not
xor
repnz
push
jp
pop
sbb
or
aas
push
rorb
jne
mov
cmp
sbb
xchg
jb
cmp
xor
add
lods
sub
test
and
inc
incb
xchg
jmp
push
in
loope
subb
sbbl
or
jnp
mov
jle
push
repnz
in
xchg
mov
jae
push
adc
adc
cltd
and
sbb
aaa
mov
mov
jo
insl
stos
push
fwait
dec
jmp
push
jl
dec
cwtl
sahf
leave
or
insb
xor
incl
dec
jmp
dec
xor
dec
or
mov
jl
jnp
jmp
push
mov
xchg
adc
insl
inc
dec
into
enter
sbb
lcall
mov
xor
or
popf
jp
aaa
int3
mov
enter
push
push
pop
inc
pop
das
mov
mov
loop
mov
push
sub
bound
lret
and
and
or
inc
cmpsl
xchg
outsb
lds
cltd
fdivr
imul
jnp
add
add
sub
or
mov
les
cmp
iret
sarl
repnz
sbb
push
adc
lea
push
cmp
in
ja
xor
fcomp
out
xchg
in
cmp
and
adc
fstl
mov
insb
rcrl
mov
movsb
stos
xchg
mov
sub
fistpl
lods
fsubl
jb
adc
push
pusha
repz
pop
cmp
mov
jo
cmp
cmpsl
adc
es
inc
lahf
sbb
or
leave
repnz
xchg
push
addb
jp
cli
pop
sbb
inc
notb
dec
out
jbe
xlat
aad
es
jnp
add
in
lret
scas
mov
insl
cld
jns
push
pushf
shrl
pop
jno
mov
adc
les
imul
or
cmc
inc
ret
inc
mov
adc
add
inc
jp
xchg
sti
or
mov
andl
or
add
dec
jae
test
mov
jl
pop
jge
adc
jg
or
jmp
mov
cwtl
popf
outsl
and
mov
jno
cs
aad
mov
enter
or
pop
repnz
in
ret
sbb
insb
shll
iret
mov
mov
shr
xor
and
xor
fisubs
sbb
ficoms
popa
add
push
mov
mov
stos
pusha
gs
lcall
imulb
adc
aaa
aam
add
stc
stc
movsl
popa
les
xor
push
mov
adc
out
push
mov
test
jecxz
out
lods
addr16
insb
fs
jb
scas
jmp
rorl
shl
xchg
outsb
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
ficoml
icebp
xor
sbb
adc
sbb
push
icebp
mul
adc
rcl
adc
adc
loope
in
fs
dec
ret
inc
dec
das
notl
mov
int
jbe
das
mov
and
or
or
inc
fcoml
jp
and
ljmp
xchg
arpl
inc
push
insb
lcall
push
cmp
iret
repz
fcoml
jb
dec
add
popa
mov
lahf
or
add
adc
adc
xor
dec
or
mov
mov
lods
or
cmp
xchg
insl
inc
out
jg
pop
fstps
mov
fdiv
gs
cmp
aad
pop
fwait
xor
movsl
jbe
push
pop
adc
dec
cmp
pop
push
mov
or
xlat
out
sub
notb
push
mov
call
arpl
outsl
dec
je
sahf
adc
adc
sbb
jge
enter
push
or
inc
sub
cmp
inc
outsb
xchg
sub
adc
in
add
out
rep
popa
and
arpl
adc
sbb
xchg
jno
in
adc
stos
cwtl
outsl
mov
roll
jo
xor
imul
shrl
jge
lods
mov
or
fisubl
pop
stos
push
rorl
les
sahf
and
shlb
push
movsl
cli
dec
arpl
setae
xor
mov
sub
push
mov
mov
pop
add
ret
and
test
stos
outsb
pop
jbe
fistpl
lock
jbe
rcrb
mov
leave
shrb
cmp
push
into
xor
sti
inc
mov
adc
nop
jne
out
jno
xor
jl
iret
cmp
xor
out
cmp
xor
adc
test
cmp
sub
les
gs
cmp
sub
mov
pop
test
lcall
lret
or
out
or
js
adc
mov
fistl
popf
call
dec
sti
lcall
push
pusha
cmc
stos
lahf
loope
jle
sub
ret
push
ljmp
xor
cltd
fdivs
mov
xor
adc
pop
xchg
adc
or
fs
mov
add
ja
daa
test
test
xchg
mov
push
mov
aam
or
notl
push
mov
mov
lods
push
push
pushf
lret
or
je
adc
adcl
test
jl
mov
outsl
and
mov
jmp
mov
scas
inc
gs
rcll
jmp
sarl
cmp
adc
push
cld
mov
stos
jbe
jge
or
andb
and
jno
sarb
pop
or
cmp
pop
ret
adc
mov
in
stos
and
scas
add
clc
ja
and
scas
ret
jns
pop
in
lock
jle
push
xchg
xchg
scas
add
jae
andb
lcall
into
xchg
mov
ret
fldenv
jb
cli
incl
jmp
aam
adc
push
lret
sub
aaa
adc
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
pop
mov
sub
sbb
adc
sbb
add
adc
mov
sub
insb
xchg
data16
fs
add
cltd
loope
jbe
scas
sub
cli
push
inc
pop
mov
cld
sbb
arpl
in
jo
mov
mov
xlat
adc
outsl
mov
mov
cmp
iret
mov
pop
pop
jbe
fildll
push
stos
divl
or
int
shll
cs
xor
lret
adc
mov
fldenv
push
rorb
pop
jp
in
pop
lods
nop
fisubrl
dec
scas
cld
pop
inc
fcmovne
mov
test
idivl
icebp
mov
push
mov
dec
mov
adc
cli
ja
loopne
jno
cmp
xchg
das
fsts
mov
and
jg
icebp
inc
ret
movsl
loop
cmp
pop
rcrl
cld
test
xor
push
mov
outsl
or
push
mov
sbb
movsl
test
lock
outsl
cmp
shlb
cltd
sti
data16
aas
pop
and
xchg
andl
insb
push
push
data16
jmp
cmc
rol
jp
xor
or
jno
lds
pop
mov
scas
mov
dec
faddp
loopne
repnz
sbb
rep
mov
imul
jecxz
cld
fsubrs
loopne
pusha
rolb
xchg
mov
xor
lcall
mov
xor
and
fisubl
cmp
xchg
movsl
pusha
dec
out
adc
negb
push
inc
imul
stos
xlat
push
push
inc
shrl
in
lret
and
lahf
cmp
sub
addr16
fnstenv
and
or
addb
loop
cmp
xchg
inc
or
mov
xchg
filds
jp
jg
outsl
jmp
loopne
pop
fisttps
shlb
mov
dec
dec
add
and
insl
sub
das
jp
sti
lds
xor
js
das
test
mov
test
cli
mov
shlb
pop
cmpsl
fdivl
rcrb
movsl
push
pop
cmp
cs
cmp
mov
out
sub
scas
dec
add
add
and
lods
icebp
lret
pop
mov
fbstp
and
mov
and
das
add
psubb
test
arpl
sub
xor
cmp
inc
inc
inc
xor
xchg
sub
clc
and
adc
mov
add
arpl
shr
jae
or
stos
mov
mov
mov
fsubr
push
jge
fdivs
ljmp
jae
mov
inc
mull
cmp
xor
mov
inc
jnp
mov
andb
jecxz
jne
jl
cmp
dec
std
mov
push
lahf
xor
push
das
jge
rcr
mov
jge
fcompl
cmp
sbb
sbb
dec
mov
scas
mov
and
dec
inc
shlb
stos
xlat
les
mov
mov
mov
pop
jmp
inc
inc
insl
stc
ljmp
push
incl
cmp
int3
dec
hlt
insb
mov
aas
sar
dec
or
cmpsb
mov
aaa
sarl
or
inc
cli
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
lea
and
sbb
sahf
ja
cmp
rorl
fs
add
cmp
mov
cltd
and
adcb
cli
adc
cmp
shll
jne
xchg
cld
fs
loopne
sbb
xchg
jg
repnz
xchg
push
fsubs
mov
outsl
mov
xchg
pop
test
mov
out
aaa
out
or
lret
imull
mov
add
pop
pop
imul
mov
cmp
xlat
xchg
inc
ja
xor
mov
inc
push
enter
mov
mov
imul
mov
mov
cmp
loop
sbb
add
cld
stos
jmp
and
mov
icebp
xor
pop
imul
jae
sub
fs
push
mov
fcomi
lcall
xor
sub
fildl
outsb
addl
stc
lcall
lods
movsb
jecxz
imul
mov
push
call
out
pop
mov
stos
or
mov
inc
imulb
les
iret
pop
in
jae
inc
add
mov
sub
push
dec
aaa
sub
test
and
fldt
gs
inc
int3
xchg
jge
xor
push
xlat
sti
ret
into
cmp
dec
popa
insl
add
push
fsubr
cmpl
movl
icebp
in
enter
pusha
cmp
imul
scas
mov
subb
push
pushf
mulb
or
xlat
hlt
aas
push
adcl
or
jo
jno
arpl
adc
mov
movsl
adc
fsubr
or
and
pushf
neg
in
push
in
dec
push
popf
pusha
movsl
pop
cmp
pop
int3
xchg
repz
dec
lock
cmp
sbb
add
imul
cld
ja
popf
sub
fstpt
add
mov
cwtl
push
cmp
fisttpl
lods
push
out
cld
jge
int
mov
std
in
xor
repnz
je
lock
addl
sub
sbb
test
jg
loopne
fsubrs
jne
imul
cmp
rcl
outsl
shll
push
fstpt
iret
and
cld
cmp
jae
and
fldcw
mov
sub
lods
dec
add
adc
sbb
mov
xor
push
mov
jno
mov
xchg
fisubs
bound
jg,pn
fldenv
pop
push
add
cltd
or
mov
xchg
fdivs
hlt
push
pop
sub
insb
xchg
xchg
xor
movsb
roll
fcomps
push
pop
daa
ljmp
aad
jle
repnz
movsl
enter
add
xor
dec
mov
fucomip
fstps
hlt
jne
dec
hlt
decl
aas
out
xor
insl
pop
aam
imul
mov
mov
nop
jns
pop
inc
lds
shl
inc
jno
enter
jnp
xor
pop
ja
es
fs
cmp
fnsave
aad
mov
imul
out
sub
xchg
pusha
test
jl
xor
push
ds
dec
xchg
lcall
decl
pushl
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
sub
stos
push
sbb
sbb
cmp
adc
mov
cltd
bound
ljmp
testl
into
lcall
xorb
mov
adc
daa
sub
xchg
or
xchg
mov
or
xor
cmpsl
mov
jo
rorl
cmpsb
xor
aaa
mov
iret
lock
in
cld
add
cmp
fmull
lretw
fisubrl
add
and
loope
jg
mov
xor
cmp
jb
add
pushf
aam
ret
ljmp
sbb
pop
je
jbe
movsb
xchg
sub
jp
repnz
pop
sbb
ret
jb
dec
repz
ds
mov
fisttpl
and
push
fcmovu
pop
insl
cmp
mov
pusha
pusha
xchg
mov
test
fnstcw
lods
mov
mov
lcall
stos
mov
push
xor
lea
add
pop
fcoml
cli
sub
jns
shr
jp
jg
test
mov
loopne
dec
ret
jge
mov
sub
gs
mov
mov
pushf
icebp
sbb
inc
mov
mov
pop
ret
dec
pop
add
addr16
sbb
jg
adc
out
test
push
mov
jp
mov
out
jge
jecxz
push
xor
lods
ds
mov
in
jnp
inc
xchg
dec
sub
loopne,pn
add
cltd
adc
jecxz
aas
nop
data16
jp
addl
add
je
mov
es
or
sub
test
pop
iret
mov
lock
repz
addr16
pusha
dec
mov
mov
xchg
dec
in
add
cmc
aas
add
icebp
test
stc
and
mov
xor
xor
rcrl
push
mov
cmc
aad
mov
int
or
and
and
and
jo
push
flds
mov
out
adc
sti
ja
ja
sub
inc
dec
cmpl
out
lcall
out
shll
sub
mov
mov
and
add
mov
xchg
fildll
jmp
das
mov
cmc
out
test
pop
inc
xchg
mov
mov
std
shlb
mov
jecxz
xchg
mov
add
cmp
lock
jl
call
inc
daa
jbe
jp
cvtpi2ps
pop
daa
stc
jl
sub
fiadds
dec
loop
lock
mov
or
or
imul
inc
mov
add
not
add
shrb
push
lds
fs
add
int3
fmulp
xchg
ss
dec
or
inc
adc
in
cs
mov
pop
lret
mov
xchg
xor
pop
arpl
out
jns
cld
inc
jg
mov
xor
xor
mov
negb
test
jo
sbb
inc
xchg
pop
jp
imul
sti
aaa
shll
insb
pop
aas
sbb
cmp
mov
cwtl
pop
dec
fisubl
sbb
mov
imul
cmpsb
mov
in
adc
inc
push
divb
sahf
jbe
jae
push
sbb
push
add
mov
not
mov
add
pusha
add
std
sbb
imul
add
sub
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
jl
pop
push
sbb
adc
sbb
xor
das
mov
and
mov
pushl
add
mov
out
lods
inc
sub
push
ss
mov
addb
add
stc
pusha
mov
jb
fs
sbb
sub
jo
sti
or
out
xor
xchg
dec
xor
in
insl
ljmp
rol
inc
add
adc
shlb
lcall
aas
cli
std
pop
cmp
std
and
lret
movsl
adc
jo
adc
cmpsl
lods
rcrb
das
sub
xor
fistpll
pop
cmp
mov
mov
inc
mov
aad
xchg
jecxz
or
lret
jmp
add
mov
dec
cmpsl
push
add
rclb
outsb
movsb
outsb
testl
std
pop
int3
addr16
outsb
outsl
mov
cli
jno
dec
push
push
xorl
lahf
push
iret
mov
dec
and
or
sbb
rcll
aaa
mov
shlb
cmp
shrl
jo
outsl
inc
insl
pop
cs
pusha
sub
negb
inc
push
lock
mov
push
insl
dec
xlat
pop
jmp
xor
inc
mov
add
mov
cmp
mov
repnz
jno
mov
mov
fidivs
pop
sti
xor
fstps
ret
lcall
cli
xlat
out
xchg
lods
outsl
outsl
inc
add
push
sbb
xlat
mov
repz
add
xor
sbb
mov
iret
ret
popa
pop
or
insl
in
and
in
xchg
xchg
fidivrl
loope
addr16
mov
enter
mov
sub
sbb
dec
mov
pop
das
add
cmp
movsb
mov
fxch
xchg
adcb
mov
mov
insl
fstp
popa
xchg
mov
ror
leave
mov
lock
sub
cmpsl
mov
ljmp
dec
loopne
add
jp
imul
scas
imul
push
fimuls
call
inc
ja
sub
push
push
and
ds
inc
gs
mov
push
stc
jb
and
dec
adc
popf
daa
add
and
stos
cld
mov
adc
fs
and
cmpsb
inc
stc
daa
xchg
mov
mov
or
stos
mov
hlt
mov
in
imul
push
movsl
nopl
minps
test
rorl
add
leave
cltd
std
rolb
jp
cmp
xchg
cld
mov
fldz
hlt
push
mov
dec
dec
shll
dec
ret
sbb
inc
ret
int3
pop
pushf
in
mov
cmp
test
mov
das
ja
mov
push
sub
adc
fldt
and
arpl
pushf
iret
xchg
ds
inc
fildl
mov
dec
ljmp
int
adc
aaa
out
pop
cmp
cmp
mov
and
stos
cmpsb
inc
mov
lods
in
andb
ja
adc
add
lods
sub
cmpsl
push
out
and
addr16
pushf
aad
dec
or
add
mov
and
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
push
shll
adc
sbb
adc
sbb
in
out
xor
ja
rolb
sbb
pop
jle
push
imul
xlat
or
mov
fs
dec
addr16
js
imul
cmp
out
stos
xor
out
fadd
cmp
adc
jns
cmc
or
loop
xorb
stc
mov
shrb
mov
pushf
push
das
push
rcl
test
push
xchg
xor
push
fnstcw
sbb
dec
lock
mov
inc
fnstcw
adc
je
stc
adc
lods
push
mov
into
ds
jne
mov
clc
pushf
xor
mov
lods
mov
sbb
jmp
mov
test
sbb
mov
or
jl
pop
pop
jbe
xchg
adc
sub
cmp
xor
stos
inc
push
aas
mov
les
bound
jge
aas
sbb
sub
fldcw
jno
and
or
cmpsb
gs
mov
jns
imul
mov
insb
and
pop
pop
test
mov
cmp
fwait
lds
pop
aaa
cmp
dec
out
pusha
insl
cmp
fs
push
pop
lock
rcl
cmc
dec
jecxz
hlt
insb
mov
jbe
je
mov
xchg
xor
popf
movsb
leave
sub
mov
movsl
xchg
nop
fldcw
jns
jmp
jo
mov
clc
mov
dec
push
push
out
aad
pop
inc
xor
xchg
inc
test
pop
mov
sbb
cs
jecxz
inc
mov
mov
cmpl
lret
pop
sbb
mov
mov
pop
mov
mov
es
out
ret
leave
xlat
popf
xchg
fwait
sahf
xor
add
into
add
pop
enter
add
hlt
inc
mov
or
dec
jmp
jns
cmpl
fstpl
mov
enter
addb
and
jl
dec
cmpsl
stc
and
je
inc
clc
add
pop
mov
loope
mov
xor
xchg
test
outsl
outsl
jno
jne
test
sub
dec
cmovge
shll
xchg
sbb
add
jmp
xlat
inc
xchg
cmpsl
xchg
xchg
clc
inc
mov
and
sub
jmp
jge
loop
cli
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
loopne
add
fiaddl
add
xor
add
in
add
push
nop
add
cmp
add
push
mov
add
add
add
add
add
int3
mov
add
add
sub
add
add
add
fimull
add
sub
add
orb
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
adc
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
sub
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
pushf
and
add
es
add
sub
xchg
and
add
inc
add
inc
add
inc
add
es
add
inc
add
es
add
push
movsb
scas
or
movsb
lods
es
add
add
inc
add
add
inc
add
daa
inc
add
es
add
inc
add
inc
out
adc
inc
add
inc
add
xchg
mov
add
inc
add
rcl
pop
bound
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
nop
and
add
inc
add
add
add
lret
xlat
movsb
das
dec
add
mov
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
push
addl
push
addl
push
addl
addl
addl
addl
addl
inc
addl
dec
addl
push
addl
ljmp
add
addl
cli
addl
add
inc
add
addb
addb
addb
addb
addb
addb
addb
js
add
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
cmpsb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
test
add
test
add
test
add
test
add
test
add
test
add
xchg
add
add
sub
add
dec
xchg
add
add
add
jl
add
mov
add
test
add
mov
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
add
xchg
add
add
pop
xchg
add
add
jle
add
mov
add
scas
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
xor
add
push
mov
add
add
outsb
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
add
add
pop
mov
add
add
test
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
add
pop
mov
add
add
orb
add
add
loop
add
repnz
add
mov
add
add
and
add
dec
mov
add
add
push
add
orb
add
add
aam
add
ljmp
add
add
mov
add
add
dec
mov
add
add
insb
mov
add
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
