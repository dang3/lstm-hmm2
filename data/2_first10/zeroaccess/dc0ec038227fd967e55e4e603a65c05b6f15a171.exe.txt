push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
fdivs
jnp
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
sbb
jle
push
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
cld
dec
or
mov
mov
stos
sub
mov
jne
roll
mov
push
cmpsl
xchg
orb
push
sarb
lods
test
add
mov
out
xor
lret
mov
push
xchg
pop
icebp
pop
lcall
fwait
stos
imul
lock
xchg
sub
fisubs
mov
push
daa
xchg
ljmp
loopne
loopne
fldenv
enter
ss
js
cmp
das
jnp
inc
mov
pop
mov
or
adc
and
outsl
pop
jno
add
lods
popa
mov
rcl
push
add
insl
add
outsb
cwtl
and
jp
fsubrs
mov
aam
daa
scas
push
sti
jle
cmp
sahf
xor
cld
xor
repz
add
adc
add
cltd
and
lods
sahf
sbb
data16
mov
cmpsl
aaa
stos
xor
cmpsl
mov
add
jo
xor
push
lret
sub
fs
mov
dec
scas
push
xchg
xor
sbb
stos
cmp
pop
mov
rcll
cmp
sub
das
add
xchg
push
inc
push
jmp
xchg
pop
stos
cmpsl
xor
cwtl
lock
popa
push
xor
es
mov
shrb
mov
lahf
data16
lods
mov
push
mov
mov
testb
push
inc
ret
lret
hlt
in
js
enter
insb
or
pop
xlat
cmp
lods
movsl
or
notl
sbb
sbb
xchg
xor
ret
jle
lods
push
or
mov
xorl
mov
or
inc
jecxz
sbb
pop
and
and
ja
in
pop
ss
std
pop
movsb
pop
leave
and
outsl
fwait
sahf
adc
test
xor
pop
jge
jnp
jle
cli
hlt
adcb
outsb
pop
mov
lds
ljmp
pop
outsl
invd
and
xchg
mov
sub
or
push
mov
stos
scas
pusha
je
push
js
aas
cli
mov
stos
ret
add
rcrb
sub
push
jle
xchg
pop
movsb
pop
mov
stc
mov
push
test
rorl
lahf
out
rcll
push
dec
jb
jmp
xor
cli
jp
fdivr
mov
jb
notb
inc
fnstcw
das
mov
dec
cmp
cwtl
int3
dec
mov
outsb
pop
add
popf
xchg
mov
mov
xchg
jg
pop
pop
push
xor
xchg
xchg
jbe
js
ljmp
fildll
js
cmc
push
cwtl
repz
push
rorb
aam
xor
leave
push
xor
jb
or
cmpsl
lret
int
shll
ss
addr16
fidivrl
mov
cmp
cmp
icebp
shlb
cmpsl
fwait
mov
xor
push
stc
idivl
mov
scas
lods
pop
push
testb
stc
mov
dec
mov
in
cmp
inc
js
popa
je
in
mov
push
rorl
insb
push
inc
lock
jle
xchg
loopne
and
aaa
and
jge
shr
sub
pop
lahf
xorb
out
adc
pop
xchg
mov
fwait
test
pop
sub
cmp
push
mov
mov
pop
pop
pop
lea
mov
mov
pop
cmp
sbb
ds
jg
bound
mov
pop
mov
mov
sub
xor
cld
std
inc
and
pop
inc
nop
xor
pop
in
cli
jp
pop
rcr
jp
add
push
add
push
lock
mov
xchg
std
clc
sub
xor
pop
in
or
negl
push
lcall
xchg
inc
stos
pushf
not
orl
sbb
out
sub
or
in
add
push
mov
movsl
dec
dec
push
xchg
pop
in
outsb
mov
add
jnp
inc
pop
dec
jp
cs
repz
test
inc
cs
stos
cmpsb
lret
adc
stos
add
or
push
ss
lock
xchg
push
mov
jmp
jge
xor
lcall
push
in
rorb
pmuludq
nop
cmp
and
insl
testl
into
imul
gs
insl
sub
into
cmp
ja
outsl
pop
addr16
push
insl
std
jge
test
jmp
xchg
mov
cwtl
jg
adc
mov
fstl
inc
movsl
or
stos
pop
jo
and
xor
pushf
xchg
pop
pand
fwait
jno
sub
pop
push
je
and
fmull
ss
aas
scas
and
mov
fiaddl
jbe
ja
push
lock
jne
pop
pop
add
jp
ljmp
sbb
mov
xor
mov
loopne
jp
inc
lret
jmp
xor
adc
mov
inc
icebp
mov
shlb
xchg
int3
mov
inc
punpcklbw
mov
fisubrl
jae
out
adc
imul
call
rolb
or
push
addr16
loopne
prefetch
jae
sti
das
jl
cmp
int
mov
shlb
fmulp
test
rol
adc
or
loopne
std
das
push
ror
inc
mov
stc
xor
jo
push
int3
lods
push
mov
movsb
lea
jne
add
cs
inc
pop
mov
pop
mov
scas
cmpsl
lea
sbb
cmpl
shlb
arpl
push
dec
xorl
dec
mov
sbb
enter
out
mov
push
add
cmp
inc
cld
dec
push
push
icebp
add
pushf
adc
push
jb
addb
in
call
xchg
xchg
mov
sub
pop
fcom
jbe
lea
movsb
inc
sahf
jns
jbe
mov
adc
test
push
test
push
inc
jno
pop
pop
pop
aad
stc
in
or
inc
mov
fildll
push
or
sahf
ljmp
mov
inc
xchg
arpl
loope
stos
cmpsl
xchg
xor
push
daa
daa
push
mov
cmpsl
insl
scas
scas
jnp
fldl
lds
jmp
jne
in
lret
inc
adcl
sti
int
and
add
dec
sub
ja
lret
dec
inc
push
stos
dec
in
pop
jl
jp
jl
lahf
push
pop
rol
add
cmp
pop
ret
dec
testb
xchg
loope
fists
xchg
adc
jns
mov
xchg
mov
lahf
mov
adc
pop
jbe
imul
inc
jae
popf
test
pop
cmp
mov
lret
in
and
jb
clc
push
ja
push
sarl
xchg
cwtl
shlb
pusha
inc
cmp
adc
add
lret
dec
inc
ss
xor
les
in
dec
test
clc
stos
adc
dec
test
out
fadds
push
popa
and
mov
cld
push
jns
and
sar
lock
fdivp
fistps
notl
cmp
cmpsb
sti
cmp
xchg
loope
push
inc
stc
jl
inc
pop
inc
xchg
adc
and
xor
in
sub
inc
bound
addr16
xchg
test
mov
arpl
cwtl
inc
stos
xchg
xor
sbb
in
mov
incb
lds
je
xchg
movsb
or
mov
pop
jns
adc
pop
jbe
pop
in
jl
std
fsubs
push
mov
aam
jo
neg
das
mov
adc
push
mov
adc
jne
mov
cmp
js
and
mov
mov
jecxz
dec
loop
xchg
jp
dec
cmp
into
in
pop
xor
push
cltd
ja
fbstp
mov
add
sub
ret
sarb
icebp
call
call
jecxz
or
add
xor
shrl
push
sub
adc
repnz
pop
loope
rorb
or
dec
jbe
cltd
cli
jge
arpl
inc
add
inc
sbb
adc
xor
out
sub
stc
mov
enter
data16
xor
lock
xchg
inc
lret
mov
out
mov
or
mov
push
mov
jne
xchg
fisttps
xor
push
and
mov
fadd
mov
scas
or
xchg
jg
enter
mov
push
mov
push
loope
mov
ljmp
mov
ljmp
xor
mov
scas
int3
xchg
push
in
pusha
add
push
pusha
pushf
in
adc
push
loopne
mov
std
fldcw
fsubs
ljmp
sbb
jno
adcl
aam
sbb
push
je
cltd
mov
jo
inc
pop
cmpsl
mov
or
xor
and
pushf
cmp
cmp
das
inc
inc
cltd
repnz
lahf
fsubr
jns
pop
sbb
sarl
add
cs
movsl
mov
lret
push
jo
pop
inc
pop
aam
js
sti
movsb
inc
ret
jle
jae
movsl
jmp
test
mov
fisttpll
sbb
cld
std
lret
push
push
jne
arpl
data16
xchg
or
into
in
lds
in
fldl
sub
jmp
aaa
xlat
add
sub
lock
jns
sahf
adc
or
mov
push
pop
jmp
sub
adc
dec
xor
out
push
insb
daa
cmpsb
fldl
hlt
jo
outsl
shrl
add
add
mov
push
jns
mov
loop
hlt
icebp
mov
mov
jbe
mul
cltd
and
xchg
mov
jo
adc
cltd
mov
ja
lahf
jl
push
pop
xor
add
sti
dec
mov
ljmp
jecxz
cltd
test
and
pop
dec
sub
jno
sbb
cmp
call
in
into
leave
or
aam
jo
mov
dec
mul
push
xor
jnp
dec
fs
push
jl
lahf
dec
mov
adc
imul
xchg
dec
sbb
fwait
mov
push
push
test
add
popf
cld
lahf
out
mov
movsl
jp
jmp
pop
cmp
scas
and
pop
ljmp
xchg
mov
jge
stos
test
mov
jno
lea
leave
and
xor
pop
xor
or
loopne
in
int3
rorl
out
int3
mov
iret
cmp
lods
push
push
test
push
movsb
test
sub
getsec
femms
cmp
xchg
mov
sub
dec
subl
sbb
imul
or
aas
insb
je
mov
mov
dec
cmpsl
jb
shll
into
aas
push
and
adc
lret
sub
or
push
jbe
inc
je
jg
mov
xchg
xchg
jg
push
jmp
stos
out
lea
fsubrs
lret
out
cmp
aad
shlb
test
hlt
and
adc
jae
aam
movsl
lea
dec
fistpl
push
xor
adc
movsl
aad
inc
and
push
pop
ss
ficoms
cmp
mov
xchg
sub
adc
imul
js
xchg
jge
aas
lret
dec
push
repnz
dec
sbb
fwait
js
jmp
push
sti
adc
and
or
ljmp
cmc
jae
and
arpl
jp
pop
sbb
cli
mov
dec
repnz
jge
dec
push
push
xchg
test
adc
push
inc
subl
xchg
imul
add
add
jecxz
std
mov
sar
mov
sbb
repnz
sub
lods
adc
iret
mov
xor
lock
pop
frstor
mov
data16
scas
out
mov
arpl
inc
aas
loopne
push
shll
mov
push
mov
xor
push
aam
subl
push
mov
inc
cmp
sbb
jp
jnp
xor
push
or
lea
mov
pop
mov
data16
sbb
xor
or
or
aaa
dec
cmp
xor
jno
test
cmpb
setae
int3
cmpsl
sti
inc
pushf
adc
imul
xor
insb
es
cmpsb
and
mov
xor
mov
mov
fs
sub
or
imul
pop
jno
int3
int3
or
dec
add
das
fcompl
mov
out
fwait
insb
dec
xchg
dec
movsb
mov
leave
adc
in
push
std
imul
push
xchg
push
add
xor
fimull
movsb
adc
inc
or
into
cmp
jmp
pop
inc
cmp
cmc
mov
pop
push
out
popa
jl
or
pop
hlt
jae
or
cmpsb
sahf
xlat
cmpsb
mov
cmp
dec
in
in
packsswb
add
push
sub
jge
insb
jge
jl
lods
mov
push
movsl
repz
lahf
dec
mov
test
or
imul
sar
dec
call
pop
jb
and
jbe
mov
and
gs
inc
dec
es
out
int
arpl
xor
mov
mov
pusha
mov
pop
sti
shufps
pushf
add
in
sbb
mov
push
add
scas
push
xor
sub
outsl
mov
and
popf
mov
mov
mov
out
push
arpl
inc
push
mov
cwtl
movsb
xor
std
add
inc
cmpb
mov
test
subb
xchg
adc
outsl
shlb
addr16
call
cmp
cmpsb
pop
in
ljmp
adcl
pop
cmp
stos
and
stc
jge
mov
js
or
cmp
lods
mov
int
and
cs
mulb
and
outsb
cmp
movsb
aaa
out
adc
add
outsb
xor
fisttpl
arpl
stc
mov
sub
nop
pop
pop
xchg
add
mov
dec
aaa
ficomps
iret
mov
adcl
jmp
xchg
add
imul
inc
leave
loopne
adc
cmp
lods
les
jae
pop
ljmp
lret
pop
lahf
inc
sub
cltd
and
xor
movsl
jne
jno
push
mov
in
mov
das
stos
cmp
sbb
push
and
dec
push
push
and
jmp
pop
dec
sbb
test
xchg
mov
repz
ss
rcrw
or
lods
insb
iret
xor
data16
lods
xchg
inc
stc
sbb
das
jno
aas
cmpsl
out
mov
rcl
or
scas
add
imul
gs
push
lds
mov
jnp
lea
sahf
push
cmp
mul
inc
pop
pop
cmpsl
insl
daa
test
jg
lret
xorb
mov
out
in
push
mov
pop
roll
gs
mov
popa
push
aad
sbb
cmpb
loopne
lds
cmp
popa
adc
ficoml
xchg
pop
pop
bound
cmpsb
shrl
adc
xchg
dec
mov
mov
or
mov
pop
inc
idiv
andl
scas
fcoms
pop
fcoml
test
clc
fldt
xor
xorl
aad
enter
rolb
add
push
gs
addr16
mul
and
mov
sarb
loopne
jbe
bound
fs
sub
out
mov
repz
andb
ret
arpl
sub
mov
mov
andb
xor
pop
sub
add
sub
cmp
int
imul
sbb
mov
xchg
cmpsb
leave
mov
stos
jae
stos
push
jae
push
and
xchg
jp
fbld
stos
lds
mov
push
daa
popa
stos
add
arpl
mov
mov
add
rcrl
cmp
jge
xlat
cli
pop
fsubrs
rcrb
mov
adc
lock
pop
cmp
lret
inc
dec
push
ljmp
cli
lahf
jnp
aaa
xorl
test
mov
mov
je
je
and
cmpsl
pop
daa
cmp
pop
dec
loop
push
shlb
mov
add
popf
or
adc
into
adc
movsl
outsl
mov
cmc
mov
cltd
int3
mov
ficoml
inc
sbb
cmpsb
dec
dec
and
cmp
sbb
jg
push
inc
jno
cmp
adc
in
out
and
pop
cmp
cmp
mov
call
cmp
pop
loopne
xchg
cmp
and
sbb
and
out
imul
lods
addb
stc
ret
sub
mov
mov
xor
shr
repnz
mov
nop
shlb
test
insb
cmp
icebp
mov
push
sub
call
pop
sbb
ret
insb
mov
fsubrl
xchg
rorl
in
imull
leave
add
pushf
sbb
ljmp
fcmovne
jb
stos
mov
loope
mov
movsl
fildl
mov
js
sub
adc
aas
fisubrs
cmpl
cmp
xchg
adc
mov
sub
test
pop
cltd
lret
int3
rorb
fs
cs
cwtl
out
rcrl
fsubl
icebp
in
jecxz
or
mov
xchg
sub
out
cmp
sbb
inc
fwait
in
jo
cmp
or
adc
call
or
xlat
adc
icebp
xchg
lahf
fisttpl
insb
adc
repnz
cli
mov
filds
push
popa
sbb
inc
mov
add
and
adc
sbb
mov
or
xor
and
out
in
cltd
loop
lock
je
rcl
rorb
addr16
sbb
stc
sub
jmp
push
mov
pop
xchg
ljmp
mov
popa
jle
clc
sahf
mov
xor
adc
sbb
scas
mov
dec
lods
stc
jno
repnz
scas
or
into
lret
hlt
test
fdivrl
mov
pop
and
inc
jbe
test
sti
mov
les
push
je
cmp
int
jo
mov
aam
in
xchg
ja
das
cli
pop
dec
loopne
subb
out
int
or
mov
out
push
mov
mov
push
pop
jecxz
mov
imul
xchg
and
les
mov
fdivl
hlt
mov
jbe
testl
ret
or
fdiv
nop
adc
and
pusha
push
or
push
mov
vmovaps
fsubs
std
mov
aad
cmp
xlat
cmp
mov
mov
mov
repz
imul
xor
xchg
aaa
push
inc
int3
cli
fldl
scas
rcrb
or
scas
lods
mov
adc
movsb
fsubrl
and
fucomp
sbb
icebp
cs
or
dec
and
icebp
mov
int
jbe
jb
mov
std
jl
pop
push
mov
insl
inc
pop
pushf
cltd
adc
xor
cwtl
pop
xorb
push
rcrb
pop
stc
mov
outsb
adc
xchg
dec
pop
and
adc
cmpsl
addr16
lret
or
or
mov
xlat
fimull
out
outsb
aad
scas
pushf
stos
dec
aaa
jmp
pop
sbb
cmpsb
jmp
call
cld
xchg
decl
icebp
add
sbb
dec
dec
inc
jnp
mov
push
adc
pop
xor
xor
inc
mov
jmp
shrb
or
sub
stos
jns
push
js
inc
add
pop
push
jg
cmpsl
push
lcall
stos
adc
mov
pop
lcall
mov
aas
pop
mov
add
push
push
shl
test
or
rcll
xlat
push
rcll
inc
add
cwtl
pop
sbb
push
mov
add
xchg
iret
ljmp
mov
and
fwait
pop
push
in
or
outsl
ret
jl
int
enter
stos
std
inc
pop
popa
inc
es
and
iret
sti
test
jno
xchg
cltd
pushl
cmp
jb
movsb
loopne
mov
pop
cmp
imul
adc
daa
jecxz
fimuls
movsl
mov
rcll
pop
lahf
les
shll
aas
inc
xchg
or
dec
addr16
add
repnz
movsb
lds
xchg
xchg
and
lret
push
in
nop
jnp
push
les
jns
addr16
mov
mov
xchg
fisttpl
push
nop
push
jne
jno
imul
test
add
sub
cmp
push
xor
and
push
stos
sub
call
in
sti
xchg
jmp
xlat
push
sahf
mov
fisubrs
add
sbb
repnz
dec
inc
xorb
mov
jp
fnstsw
fcmovnb
out
xchg
arpl
imul
ret
pushf
stos
cmc
pop
mov
pop
pop
pop
jmp
sub
cmp
mov
int
inc
incb
add
mov
mov
iret
out
or
mov
sub
pop
xchg
pop
cmpsl
pop
xor
jle
xor
outsb
sub
inc
or
lret
in
scas
or
shrb
adc
push
testb
insl
js
mov
sbbb
mov
in
mov
mov
scas
sub
fucomip
xchg
iret
mov
enter
mov
fwait
add
mov
cmp
inc
add
jmp
or
or
aam
xchg
jno
outsl
ja
dec
xchg
mov
xor
in
nop
or
mov
stc
inc
inc
xchg
mov
dec
hlt
mov
jle
fcompl
aam
cmpsl
adc
sub
add
pop
pop
mov
leave
lahf
daa
pop
push
dec
sbb
enter
xchg
nop
and
sbb
loop
xor
pop
inc
jecxz
fisubrs
xor
push
repz
lret
and
mov
xchg
jecxz
pusha
inc
add
outsb
sbb
daa
sub
lods
fwait
xchg
push
pop
loope
dec
stos
movsl
out
fldcw
cltd
jae
es
nop
cmpsb
stos
popf
es
pop
das
pop
jp
fildll
inc
ljmp
jl
add
andl
hlt
and
mov
xchg
push
shr
mov
cmp
cmc
mov
xor
popf
xchg
jbe
add
jno
dec
ret
and
inc
sbb
incb
stos
push
bound
sbb
ret
popf
add
lds
push
or
out
jp
fwait
jno
dec
or
sub
das
test
sti
roll
push
cmp
xorb
jne
pop
in
je
addr16
insb
mov
xchg
sarb
outsb
inc
mov
loope
cltd
mov
cmp
xchg
xlat
mov
int3
shll
add
stos
adc
movsl
in
hlt
xchg
adc
mov
mov
int3
and
mov
cmc
adc
jle
add
test
in
push
mov
stos
pop
nop
sbb
push
push
xor
xchg
loopne
clc
cmpsl
sbbl
lods
push
dec
mov
rcl
pop
call
fiaddl
mov
mov
push
mov
out
cmp
outsb
aad
loop
lahf
fs
rorb
popa
stos
js
mov
addr16
loopne
ret
repnz
inc
adc
add
jnp
ficoms
fmuls
sub
add
test
out
xchg
test
cmp
mov
arpl
xor
popf
jecxz
ja
xchg
and
leave
mov
stos
cltd
inc
fdivr
aam
test
lret
mov
jmp
outsb
insl
or
nop
aas
pop
scas
mov
paddusw
sbb
out
and
jg
inc
outsl
xor
xor
sub
fldcw
pop
mov
xchg
inc
mov
pop
mov
pop
inc
inc
aam
push
fimull
dec
cltd
inc
adc
das
dec
xor
push
add
test
sub
cmp
out
fcmovbe
incl
add
fbld
adc
pop
stos
add
subl
mov
repz
movsb
inc
push
xor
jmp
add
aam
sbb
daa
sbbl
pop
mov
fadd
lods
fsubrp
or
clc
cmp
sub
push
inc
out
ret
cmpsb
arpl
movb
xchg
outsl
adc
jg
xchg
fs
pop
mov
or
aaa
test
add
dec
fadds
shrl
cmp
adc
jecxz
push
xchg
fidivl
pop
mov
cmpsb
mov
stos
mov
pop
lcall
mov
stos
adc
dec
outsl
loopne
lret
push
lret
mov
or
lret
or
pushl
pop
loop
and
test
mov
sbb
mov
jne
or
push
dec
adc
cmp
into
or
test
sbb
cli
cmp
sarb
add
js
pop
int
idivb
cwtl
stos
sbb
fstl
shrl
cmp
repnz
imul
xor
pop
js
les
pop
insb
push
lret
inc
mov
daa
xchg
jae
push
xchg
repnz
es
push
ja
pop
leave
repz
mov
mov
jbe
xchg
in
outsb
sbb
int
jns
add
aad
aad
inc
xchg
mov
into
and
gs
sub
mov
mov
ret
dec
mov
insb
imul
push
xchg
stos
pop
adc
stos
enter
fwait
rolb
or
and
inc
push
and
arpl
mov
xchg
lea
inc
testb
in
mov
lret
stos
aam
inc
mov
rorl
inc
cmp
ret
rcll
jge
push
pop
fcmovne
sub
movsb
pusha
fsubrl
jle
push
test
cmp
shll
mov
pushw
movsb
fldcw
cmp
pop
jne
std
sub
addr16
xor
enterw
out
lods
fisubrl
and
xor
sub
out
flds
fwait
mov
jmp
nop
leave
stos
mov
icebp
push
pop
in
sbb
cld
enter
sbb
in
mov
mov
or
stc
jecxz
dec
push
adc
lret
fnstenv
imul
and
sahf
sub
pop
pop
in
and
insb
fistl
lahf
cltd
loop
addl
out
pop
or
mov
lret
sub
lods
mov
or
cs
jo
aam
push
xchg
xor
xchg
test
scas
mov
scas
fists
fs
mov
inc
sbb
dec
mov
dec
iret
mov
iret
shll
lods
sub
push
ret
adc
daa
iret
dec
in
mov
cmp
pop
mov
sub
repz
xchg
sub
scas
in
jae
xchg
ss
test
stc
adc
arpl
in
mov
enter
pop
xchg
sbb
dec
cmpsl
test
in
jge
imulb
xor
mov
sub
fidivrs
test
subl
out
jl
jg
xlat
repz
push
aaa
pop
lea
cwtl
adc
cltd
jne
call
xor
and
mov
jno
ret
dec
mov
cmpsl
add
pop
xor
cmp
and
popfw
inc
cli
test
imul
es
adc
cli
inc
dec
sti
leave
jns
push
lahf
mov
cmp
xorb
push
pusha
icebp
add
push
fmull
dec
ljmp
add
ja
insl
in
je
insl
adc
stc
hlt
les
push
inc
push
pop
into
into
cwtl
xchg
sbbl
jno
push
fists
push
dec
cli
adc
mov
testb
inc
jns
daa
inc
jg
adc
cmp
xchg
out
mov
scas
lods
pop
orb
mov
mov
sti
and
inc
sub
jp
dec
and
cmp
pop
mov
imul
imul
gs
fisubl
jns
loop
mov
xchg
stos
inc
scas
jae
fstl
xor
ret
shrb
popa
jne
add
js
mov
cltd
mov
dec
sub
call
xchg
inc
shrl
push
jae
xchg
mov
inc
cmpsb
dec
pop
sub
lods
loopne
sbbb
jbe
push
in
and
xor
cmp
imul
xchg
mov
xor
data16
aam
gs
nop
mov
in
movsb
xchg
push
push
mov
test
dec
fs
jno
or
fnsave
shrb
imul
lret
mov
and
jp
test
cmp
xchg
xor
lods
pop
pop
mov
adc
push
jb
fdivrs
in
push
mov
test
or
mov
shrl
xchg
add
ljmp
outsb
movsl
cltd
outsb
js
mov
xor
xor
mov
lds
popa
cs
fisubrl
imul
xor
jg
push
pop
add
aad
and
data16
lcall
cmp
push
insb
push
pop
jnp
add
inc
xchg
sub
ret
jge
es
pop
in
or
punpckhwd
jmp
lock
pop
add
sub
mov
stc
and
jle
and
cmpsl
xor
dec
mov
div
in
andl
sbb
xor
arpl
xchg
fnsave
xor
cmpsl
jne
lahf
cmp
iret
lods
mov
inc
mov
and
nop
xchg
mov
sbb
xchg
sub
inc
mov
sbb
lock
push
or
adc
insl
xor
fdivp
sbb
inc
movsl
nop
aaa
pop
dec
push
push
pop
inc
repz
adc
subb
ljmp
push
jg
inc
adc
xchg
into
aaa
xchg
mov
sub
and
mov
push
filds
push
dec
mov
and
push
mov
insb
push
aam
lret
sub
call
rol
xor
jmp
stc
call
rcrl
mov
std
call
xor
and
mov
push
or
fnstsw
insl
fs
mul
push
sbb
scas
jmp
mov
das
shrb
pop
mov
adc
pop
stc
inc
sbb
dec
ds
scas
ds
mov
sub
push
or
js
sbb
and
sbb
sub
mull
push
rcll
xchg
mov
ljmp
aaa
xor
dec
pop
out
cmpsl
aaa
jae
out
mov
dec
mov
clc
lods
mov
mov
fidivs
cld
jnp
sub
sub
cld
mov
and
aaa
int3
test
popf
out
xchg
dec
jecxz
mov
push
jbe
in
clc
xchg
mov
mov
inc
add
and
dec
out
fnstenv
add
ja
inc
mov
xor
lock
fxam
ror
pop
adcl
push
gs
pop
fs
push
inc
psllw
pushf
icebp
pop
jb
dec
dec
pop
into
mov
xchg
and
outsb
jp
repz
or
add
cmpsb
cmove
dec
out
stos
lock
push
pop
or
gs
loop
jae
pop
dec
jmp
stos
imul
adc
nop
xchg
xchg
pop
dec
cwtl
dec
xor
xchg
std
adc
inc
ja
mov
cltd
pop
negl
subl
dec
lock
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
imul
pushf
jnp
hlt
pushf
jnp
pop
mov
in
aaa
insb
sahf
push
pop
jae
push
add
pop
clc
hlt
fildl
mov
xchg
push
lock
mov
subb
xchg
ljmp
inc
rorl
jge
cld
test
pop
pop
sbb
add
inc
popf
inc
mov
xor
sbb
push
bound
xlat
sbb
mov
lock
dec
jo
icebp
idiv
xor
insl
in
rcrl
test
push
push
out
scas
adc
icebp
inc
jle
cmp
sbb
jbe
fwait
mov
dec
daa
rcrb
mov
inc
icebp
mov
push
push
mov
clc
out
mov
outsl
push
mov
push
add
sbb
add
push
int3
lock
fnstsw
cwtl
cmp
mov
mov
push
jne
mov
push
addr16
inc
push
lds
mov
cs
mov
sbb
sarb
mov
and
ret
dec
jns
xlat
or
ljmp
inc
mov
out
cltd
mov
loopne
xor
push
ret
mov
pop
lods
or
pop
arpl
lods
xchg
test
or
pushf
sbb
fcoml
xchg
test
std
xor
addb
mov
add
addb
imul
rclb
ds
mov
push
jecxz
xchg
and
inc
push
ss
push
pop
sub
jo
pop
jae
xchg
mov
repnz
cmpsb
scas
pushf
cwtl
mov
adc
stc
jae
lock
cmp
xchg
mov
mov
cltd
push
cmpsl
jg
cmpsb
jbe
dec
xor
cmc
or
xchg
and
mov
push
call
aaa
xchg
mov
sbb
sti
cwtl
or
cmp
std
adc
cmpsb
pop
push
pusha
iret
cmp
test
imul
out
mov
dec
mov
fists
sbb
sbb
pop
in
xlat
or
scas
add
pop
jb
aaa
shrl
test
jns
shrb
nop
cld
or
ljmp
jmp
into
daa
pop
mov
dec
in
loope
dec
mov
and
mov
ja
push
not
mov
hlt
std
stc
xchg
mov
jmp
fisttps
jmp
push
and
bound
xchg
mov
mov
fcmovnb
pusha
call
jo
and
dec
and
ficompl
jmp
mov
mov
and
pop
jne
pop
mov
mov
jp
xchg
mov
sub
mov
test
dec
fdivrl
imul
add
sub
pop
xor
pop
adc
leave
push
repz
adc
add
sbb
loope
gs
test
je
add
leave
aad
add
mov
mov
mov
pop
out
orb
jb
inc
movsb
addr16
mov
sub
xlat
jb
push
pop
idivb
push
mov
cmp
dec
add
and
mov
sbb
cli
sbb
aas
test
cmp
sub
add
xchg
sbb
std
out
mov
cbtw
pop
and
stc
mov
dec
aam
cmpl
mov
mov
aaa
add
sbb
sarb
xchg
insl
mov
mov
push
add
rolb
or
mov
push
inc
insb
das
cwtl
in
in
insl
enter
cmpsl
cmp
shrl
dec
xor
jae
nop
cwtl
jle
pusha
lret
repnz
xchg
mov
pop
jnp
lods
jge
into
adcb
mov
test
pop
adc
rclb
or
mov
dec
push
pop
sub
repz
push
jb
inc
addr16
popf
andb
lret
ret
loop
xchg
out
aaa
in
imul
xchg
mov
cmp
pop
std
ja
push
test
pop
adc
mov
jmp
sbb
mov
sbb
dec
pop
dec
sub
loop
jbe
scas
push
push
inc
mov
push
call
cmp
out
bound
addb
repz
dec
dec
sarb
sbb
inc
cld
jmp
adc
inc
mov
push
xchg
popa
mov
lret
adcl
popa
cmp
adc
aaa
scas
cmpsb
clc
je
dec
mov
jl
insb
sbb
mov
loope
imul
jg
icebp
shll
jle
test
aas
xor
jmp
arpl
dec
sbb
mov
icebp
cltd
lods
add
and
repnz
inc
push
pop
dec
mov
faddl
and
aas
rcll
push
and
xchg
in
cs
add
and
sahf
push
aas
xchg
pushw
push
cmp
jg
data16
idivl
pop
mov
clc
dec
mov
pop
mov
inc
add
pop
pop
inc
push
push
mov
pop
enter
fdivp
cmpsb
shll
adc
js
cmp
stc
sub
mov
nop
dec
das
push
cwtl
jbe
mov
pop
adc
out
lock
and
mov
mov
push
cli
jo
outsl
fistl
insb
nop
out
addr16
dec
inc
adc
fstpt
into
aad
add
icebp
sub
js
out
ror
cmp
ds
add
fs
dec
iret
fisttpll
or
movsb
jg
into
das
pop
gs
pop
mov
call
jmp
ljmp
or
xlat
push
add
or
daa
cltd
xor
popa
or
ss
arpl
pop
fcomps
int3
sub
sti
xor
mov
lea
xor
add
lret
inc
int
mov
adc
pop
gs
or
sub
mov
or
adcb
mov
dec
push
and
ret
mov
shrl
stos
add
jge
or
xchg
pop
jo
mov
aaa
push
movsb
in
xchg
sahf
loop
mov
scas
sbb
mov
push
pop
xorl
leave
ds
pop
inc
inc
pop
or
inc
xchg
dec
rsm
addr16
mov
pusha
das
jge
sub
or
lahf
ficomps
sub
ljmp
mov
lock
imul
mov
pop
mov
jbe
outsb
icebp
and
xchg
in
mov
mov
inc
lods
std
sub
addl
mov
jl
push
mov
cld
and
mov
dec
dec
shll
sbb
cmpsl
repz
mov
sbb
js
xor
mov
mov
sarb
add
sub
mul
jg
scas
and
mov
push
mov
xchg
pop
add
sbb
push
pop
sbb
sahf
push
push
andl
shrl
push
push
lea
es
ja
repnz
cli
mov
mov
cld
imul
xchg
in
lea
mov
sub
mov
xor
pop
inc
inc
rcrb
mov
mov
enter
icebp
or
mov
daa
test
xlat
pop
mov
rolb
arpl
fs
out
pop
add
pop
sbb
sub
push
push
or
cmpsb
or
push
fsubr
jbe
push
movsl
fisubrs
cwtl
aas
fidivrl
out
mov
cmp
imul
andl
lods
and
lock
sbb
in
mov
clc
jbe
push
mov
stos
jns
cmpl
sbb
mov
and
xor
inc
pop
push
imul
and
adc
add
xor
mov
sbb
ret
push
idivb
sahf
mov
lods
xlat
insb
sub
icebp
test
push
xchg
pop
or
out
dec
scas
xor
mov
mov
jne
aad
dec
fdivrl
add
cmp
lret
je
out
sub
outsb
cld
adc
rclb
jns
cwtl
aas
adc
sbbb
sti
and
or
mov
clc
aas
or
and
stc
pop
adc
jl
int3
push
xlat
daa
outsl
push
xor
fldenv
xchg
push
lret
add
in
add
arpl
int
inc
push
add
push
into
out
pop
call
inc
leave
repnz
push
and
movsl
pushf
je
mov
aaa
xchg
ss
pop
lcall
outsl
sbb
jae
in
clc
shll
pop
adc
ds
mov
clc
xchg
mov
in
arpl
out
leave
outsl
pop
ficompl
stos
jne
mov
addr16
std
jg
jne
das
mov
inc
dec
in
ljmp
mov
pop
and
aam
mov
pop
rcl
aaa
scas
mov
xlat
inc
or
mov
push
stos
jle
inc
dec
pusha
jno
into
jo
and
test
dec
aam
add
xlat
mov
push
pop
insl
mov
add
adc
sbb
fidivrs
jns
and
lahf
adc
rol
fs
pushf
pop
pop
cmpb
bound
scas
fwait
ds
xchg
pop
add
in
or
push
adc
xchg
subb
das
jns
mov
cmp
add
loope
xchg
fmulp
adcl
mov
xlat
pop
lret
pop
mov
jbe
je
inc
in
mov
notb
jns
xor
mov
jecxz
lret
mov
dec
fsub
ja
sub
lods
enter
insl
adc
lahf
xchg
out
inc
fiadds
andb
cmp
sbb
fsubr
pop
iret
clc
xchg
xor
pop
cmp
mov
outsl
adc
das
repnz
cmpsl
sub
popf
outsl
shll
jo
popa
call
lock
push
fnstenv
sbb
je
and
mov
lods
add
enter
gs
mov
sub
mov
adc
xchg
jecxz
pop
daa
testb
popa
jno
sub
aam
and
adc
and
int3
cli
mov
mov
aas
mov
mov
sbb
rcr
jns
adc
or
out
add
nop
inc
bound
lods
xchg
cmp
pop
loope
dec
dec
push
test
enter
sub
push
fistpll
jb
ljmp
or
outsl
jo
addl
imul
daa
stos
add
push
insl
mov
mov
mov
jae
pop
jo
mov
jnp
fcmovnbe
jbe
pop
fsqrt
gs
sbb
test
lea
cld
mov
mov
dec
pop
inc
mov
and
sti
mov
xor
sub
out
clc
mov
test
mov
lock
rorb
out
xor
mov
out
fsubs
aam
sub
push
stc
jo
sub
repnz
cltd
mov
or
int3
sbb
add
and
insl
mov
test
sub
jmp
lds
jmp
push
mov
mov
cs
cs
xor
bound
ret
mov
xchg
mulb
jg
test
pop
push
mov
and
xor
jmp
leave
push
mov
mov
inc
pop
pop
les
push
ss
out
dec
sahf
add
push
clc
push
sbb
sar
inc
jmp
fsubl
adc
popa
mov
lds
dec
les
cmc
or
ret
mov
xlat
arpl
rcrb
xchg
xor
mov
ljmp
dec
andl
mov
addr16
xor
lea
imul
and
push
cwtl
push
aad
sahf
scas
push
push
ret
fimull
mov
cmp
add
lods
push
cmp
lret
test
rcrl
dec
push
cmpsl
stc
fmull
dec
and
ljmp
mov
sbb
jnp
pushf
jne
fistl
lods
loopne
rorl
les
stos
fcomp
test
xchg
bound
adc
xchg
mov
stos
or
and
pop
jge
lea
lahf
cmp
and
sbb
rcrl
mov
xor
jns
int3
cld
aas
fdivr
push
cmc
ret
jecxz
cwtl
or
mov
jo
loopne
stc
gs
push
cwtl
pop
xor
lds
sub
mov
pop
out
inc
push
pop
mov
pop
insl
sarb
idivl
adc
push
pop
push
test
in
lods
sbb
cli
jp
out
jb
jg
cmp
mov
adc
in
sbb
and
jo
xchg
fwait
or
jmp
mov
add
test
imul
mov
dec
sub
adc
notl
dec
push
sbb
gs
inc
sub
hlt
fnstcw
or
mov
push
and
dec
das
pop
dec
loopne
call
cli
test
lock
sub
shr
and
loopne
into
jns
inc
shrb
sti
icebp
cmp
lock
jns
xchg
mov
movsl
lods
push
lds
sub
push
dec
push
ret
inc
lcall
mov
cli
dec
ret
pop
and
cmp
dec
std
sbb
jmp
push
lea
mov
lahf
ret
daa
cld
mov
pop
sarl
inc
and
sbb
into
xor
lods
cmp
movsl
aas
daa
jae
mov
xor
rol
and
inc
inc
test
add
dec
mov
adc
lods
xchg
in
loop
cmp
sbb
int
cmp
sbb
or
stc
sbb
jo
outsl
cmc
sub
shlb
sub
mov
or
mov
inc
les
sahf
mov
push
test
sub
les
lods
or
sahf
pop
out
rolb
xor
movsb
scas
imul
inc
out
mov
add
inc
cmp
ret
push
pop
push
mov
cmp
pop
ret
xchg
inc
sub
mov
stos
cmp
out
sahf
lret
orl
pop
push
add
aad
add
add
sbb
cmp
stos
pop
bound
rcrl
bound
in
out
dec
xchg
sub
js
cmc
imul
rcrb
js
push
js
xchg
mov
add
add
rorl
push
inc
rcrb
idivb
xor
add
ljmp
ljmp
jge
fisttpl
movsl
repnz
jbe
andl
into
inc
inc
xor
mov
ret
imul
mov
jne
popf
arpl
jns
and
call
inc
xor
jnp
ljmp
fwait
push
call
jae
into
push
mov
jl
xchg
or
lret
cli
sbb
lock
pop
test
int3
sub
ljmp
mov
xchg
jnp
inc
lret
je
push
mov
push
das
push
mov
aad
stc
jbe
sbb
jno
xlat
out
orl
add
mov
aam
call
orb
shlb
pop
lock
pushf
es
cmp
inc
pop
sub
shll
dec
cld
pop
mov
cmp
mov
fnsave
mov
repz
mov
lock
mov
and
jo
mull
lock
push
jecxz
mov
jns
aaa
dec
repz
outsl
push
imul
cmc
mov
xor
jle
and
fcoml
jle
aas
cmpsb
fucomi
cmp
and
lret
push
xchg
jecxz
inc
xor
mov
cmpsl
adc
int3
mov
int
les
pusha
mov
mov
push
or
cmp
inc
scas
xchg
test
pop
int
les
jp
sub
fmull
data16
sub
xlat
adc
js
mov
test
sbb
je
add
lret
xchg
and
js
cltd
mov
add
cld
inc
out
sbbl
xchg
mov
mov
push
leave
gs
mov
int3
ds
enter
jmp
adc
dec
leave
push
jae
cmp
jnp
testl
test
shl
popf
dec
sub
mov
mov
cltd
push
or
push
sbb
mov
push
fiadds
int3
mov
xchg
cmp
xchg
int3
adc
je
shll
popa
lea
inc
xchg
outsb
pusha
push
fsubl
push
push
ja,pn
jl
fdivrs
sbb
iret
cmp
lret
pop
inc
or
push
mov
xchg
lcall
scas
rcrl
mov
push
mov
mov
xchg
sahf
xchg
icebp
jae
lods
xchg
dec
adc
xchg
int
inc
jmp
inc
or
mov
sbb
pop
xchg
and
xchg
lcall
das
xor
jbe
aad
sub
out
ret
mov
add
and
out
jne
in
rolb
pop
neg
fmul
out
gs
loop
jne
jno
fdivrl
cmp
loop
jo
dec
or
test
insl
rorb
hlt
add
movsb
lds
adc
cmpsl
ret
jno
sbb
sbb
mov
rolb
push
xchg
xchg
xchg
fstpt
cmp
adc
enter
loope
les
inc
push
sub
scas
xchg
lock
lret
xor
imul
ja
cmp
test
scas
call
enter
ds
rolb
jns
or
and
in
js
jecxz
mov
jne
xor
call
mov
or
adc
adc
das
pop
pop
shrl
stos
dec
repnz
jle
dec
stos
cmp
outsl
adc
cli
sbb
cmp
test
add
adc
or
incb
fstps
jo
push
sub
jmp
cltd
ds
add
data16
xchg
das
iret
xlat
push
in
push
xchg
cltd
rcll
push
mov
in
cmpsl
dec
cmp
aas
fwait
addl
arpl
inc
and
adc
add
add
cld
aaa
fbld
cmpxchg
and
cmp
mov
adc
in
mov
or
jb
ficoms
int3
lods
or
xor
adc
daa
cwtl
int3
push
lods
cli
ss
jbe
sub
mov
jecxz
mov
out
xor
xchg
and
cmpsl
les
add
aas
jp
mov
xchg
mov
jl
lods
jno
fnstsw
sub
cli
cmpl
cmp
and
pop
xlat
fcoms
jbe
jmp
nop
clc
jae
das
mov
and
pusha
push
pop
pop
xchg
lods
cld
jbe
or
leave
push
mov
pop
mov
mov
pop
xchg
and
bound
cmc
xor
inc
push
mov
jno
dec
enter
mov
vmread
mov
pushf
xchg
mov
inc
mov
inc
int3
imul
loope
enter
fwait
mov
mov
pop
sub
repnz
test
adc
sahf
ja
jge
call
or
or
sub
mov
push
aam
test
cmp
int
addr16
lret
mov
sti
xchg
xchg
int3
fcompl
or
cmpsb
inc
mov
cli
in
repz
stc
ljmp
pop
inc
adc
sub
or
lcall
test
mov
xchg
add
cmp
fistpl
xchg
inc
xchg
icebp
movsl
mov
xlat
ret
sahf
sbb
push
nop
inc
xchg
fmul
mov
aad
jae
pop
in
pop
mov
loope
lds
sub
fiaddl
pop
xor
imul
cmpsl
sarl
movsb
rcpps
and
cld
fcmovbe
sbb
out
add
ss
fdiv
xchg
pop
and
leave
test
mov
pop
lahf
mov
mov
out
pop
dec
push
incl
mov
cmp
or
push
xchg
and
push
sahf
push
mov
xor
xor
xchg
mov
push
stos
cmc
mov
lea
repnz
and
xor
push
mov
push
pusha
in
stc
dec
lahf
sub
pop
icebp
dec
mull
inc
repnz
nop
addb
loopne
incb
pusha
lds
mov
ret
shld
shrb
cmp
test
xor
je
add
aas
jmp
pop
adcb
xchg
push
rcll
mov
or
xlat
test
mov
xor
cmpsb
mov
dec
lea
dec
test
or
loopne
mov
mov
aaa
sbb
pop
dec
ss
push
repz
enter
popa
mov
inc
nop
movups
dec
add
mov
dec
in
xor
fwait
adc
mov
int3
add
jge
outsb
mov
cmp
pop
jbe
test
mov
pushf
mov
cmpb
add
mov
dec
inc
mov
aas
sub
je
stos
or
jmp
cmp
movsb
mov
mov
imul
pop
std
pop
sub
cmpsb
fwait
cmp
cmp
sahf
xchg
stos
lods
inc
rcr
xchg
iret
push
gs
in
sbb
mov
push
xchg
dec
lcall
and
push
and
fsts
push
xor
adcl
test
filds
mov
insl
inc
xchg
iret
aas
imul
int
xor
inc
ret
xor
stos
mov
loope
inc
mov
and
out
mov
push
inc
mov
add
xchg
sbb
jp
int
or
cli
xchg
movsl
jb
push
lret
std
out
pop
push
sahf
jle
jns
mov
ficomps
push
pop
pop
pop
out
sub
mov
pop
in
or
and
stos
xor
add
dec
push
pop
into
lods
push
pop
push
or
rolb
pusha
pop
sub
out
mov
test
dec
call
mov
mov
mov
cld
or
sub
add
add
and
and
stos
or
repz
ds
pop
mov
mov
xchg
add
fucom
data16
sbb
mov
rcrb
je
mov
and
lret
loop
or
cwtl
or
xor
jmp
jle
lds
inc
into
mov
push
mov
frstor
jmp
ljmp
testl
xchg
add
test
adc
enter
jne
mov
lahf
mov
das
cmp
into
loop
push
outsl
pop
pop
mov
pop
jmp
test
fsubrs
leave
xor
push
xor
sub
jne
xchg
sti
int3
jae
in
jle
inc
jae
cmp
sbb
xchg
lret
sti
es
sbb
rcrl
cmp
inc
repnz
and
shll
sbb
mov
aaa
mov
mov
js
stos
cmp
fwait
jno
gs
jns
ret
in
popf
xchg
or
daa
mov
or
das
out
push
sub
lahf
jb
push
xchg
mov
adc
fsincos
push
enter
xchg
popa
or
push
pop
repnz
mov
adcb
xor
leave
incl
pushf
lods
mov
xchg
xchg
or
pop
shr
pop
jne
dec
and
outsb
stos
adc
imul
into
xchg
sbb
sub
out
in
pop
pop
dec
testl
in
xchg
movsl
scas
dec
adc
inc
lret
test
aam
insb
and
mov
fsubrl
daa
xchg
and
add
pop
push
pop
fidivrl
inc
and
add
adc
xlat
pop
cmp
int3
jl
sub
cmc
inc
xor
or
or
inc
loopne
nop
stos
aad
fisttps
jge
jmp
inc
leave
push
jge
xlat
push
insb
ss
or
mov
mov
cmpsl
and
bound
movsl
aad
dec
jne
subl
ljmp
fldenv
stc
cld
aad
adc
mov
xchg
rcr
in
rorb
lcall
stos
mov
clc
cmp
dec
inc
andl
mov
je
scas
xor
es
inc
dec
out
inc
divl
popa
ss
in
fcompl
fcoms
xor
adc
popa
addr16
xchg
mov
pop
ret
test
fsub
cmp
inc
sbb
sbb
sbb
test
cmp
mov
fs
jecxz
jo
out
or
fs
mov
ret
fst
cmpsb
add
mov
jb
and
sub
and
cmpsb
mov
push
inc
or
daa
mov
pop
sbb
pusha
jmp
mov
in
dec
repz
inc
fcomps
mov
jno
adc
pop
cmc
dec
xchg
mov
fldt
jg
enter
dec
sub
imulb
fsts
outsb
aaa
push
sbb
ja
and
inc
pop
shrl
pop
loopne
xchg
add
fisttpll
xchg
dec
and
sub
test
cli
insb
mov
leave
pop
mov
and
mov
mov
mov
lock
bound
add
scas
adc
or
sub
pop
mov
ss
cld
lea
leave
adc
add
aas
jle
pop
test
test
ds
jns
mov
lods
loop
xor
inc
stos
jne
jle
mov
mov
jb
mov
pop
push
sub
dec
mov
inc
inc
and
cmp
idiv
add
std
pop
mov
sub
cmp
sbb
cli
imul
pop
ret
insl
mov
shrb
popa
ja
popa
push
cmc
stc
cmp
fiadds
add
mov
push
call
mov
jmp
jp
cmp
mov
mov
push
push
test
inc
sub
dec
sahf
xchg
sti
push
add
sub
mov
and
cwtl
movsl
pop
xchg
sbbb
fwait
in
mov
or
dec
out
push
jle
and
xchg
mov
jmp
rorb
adc
aad
orl
jae
xor
jnp
xchg
subb
dec
cmp
loopne
cmpsb
mov
fwait
call
scas
mov
cmp
andl
add
sub
sbb
outsb
jbe
fisttpll
adc
sets
rorb
int
sbb
add
je
inc
pop
ljmp
xchg
movsb
cmp
int
cli
xor
adc
and
inc
pop
scas
xchg
ljmp
fidivrs
mov
paddd
mov
into
inc
fnstcw
aam
lret
icebp
scas
shl
sbb
test
or
jmp
fistpl
add
xor
orl
or
sub
aad
es
clc
and
push
or
add
in
fwait
cmp
adc
repz
shl
test
rep
and
pop
xorb
scas
jo
push
les
sbb
test
shrb
xor
cmp
aas
inc
jnp
xchg
mov
fldt
and
mov
xchg
aam
jne
fcompl
mov
aas
popf
adc
andl
lds
push
test
fmulp
je
push
int3
add
adc
cltd
jb
popf
dec
mov
xchg
mov
jne
popa
fistpl
int3
hlt
mov
fildl
cmp
leave
xchg
or
jno
push
xor
jno
mov
jmp
fmulp
dec
pop
mov
cli
in
or
in
jg
loopne
rorb
pop
mov
faddp
rcrl
add
push
push
inc
xor
cmp
jmp
sub
push
lea
lds
cld
rcrl
jb
fsub
mov
stos
jne
fldcw
and
xchg
mov
test
cmp
push
cmp
xchg
jne
out
and
in
lds
xor
lret
xchg
xchg
mov
push
mov
nop
sarl
xor
jmp
add
loop
pop
shrb
std
mov
mov
std
inc
lret
clc
mov
enter
mov
mov
jge
jo
sbb
adc
cld
xchg
scas
loopne
data16
push
or
pushf
out
and
mov
adc
in
mov
jae
or
xchg
bound
push
aam
scas
and
cmp
xlat
sti
jge
nop
lret
out
dec
inc
fadd
mov
stos
xchg
aad
pop
sbb
fwait
xchg
push
sbb
loope
movb
adc
int
je
and
xchg
jge
add
shrl
cs
xor
inc
pop
mov
lcall
dec
add
lret
and
cmc
and
bound
jmp
in
jmp
stos
mov
lock
xor
dec
sbb
lret
mov
xchg
mov
gs
fsubp
jmp
and
out
sbb
push
iret
rolb
adc
sub
inc
pop
dec
mov
pop
mov
daa
test
popa
pop
nop
cmp
jnp
push
in
push
lret
testb
rclb
xor
cmp
and
shr
sarl
fcoms
rorb
jb
icebp
and
or
mov
daa
js
xchg
fs
js
adc
inc
xorb
jne
cltd
ljmp
fidivrl
test
inc
icebp
push
pop
cli
mov
sbb
scas
sub
mov
dec
sbb
pop
xchg
stc
add
mov
or
xor
inc
mov
pop
xchg
add
out
ret
out
dec
xchg
sahf
xchg
jno
cmpsb
idivb
insl
push
dec
sub
lret
cs
pop
imul
mov
xchg
popf
mov
cld
jg
mov
ss
mov
push
loop
in
cltd
or
push
or
mov
mov
fnsave
fwait
repz
movsl
aaa
leave
imul
add
and
sub
movsl
lods
push
add
insl
mov
aaa
js
ja
cs
push
notb
jo
lret
add
pusha
jle
rorb
mov
pushf
mov
sbb
cli
stc
repz
iret
test
cmp
rcrb
dec
icebp
enter
loopw
push
ds
dec
inc
inc
cmp
fsts
fisttpl
or
adc
xor
and
test
aam
jl
dec
jb
push
inc
push
jg
movsb
shlb
and
inc
pusha
pop
cmp
imul
nop
je
dec
les
pushf
andb
aas
push
xor
push
insb
push
shlb
mov
loope
insb
cltd
mov
jbe
sub
imul
dec
inc
fsubl
mov
xorb
push
xchg
fnstcw
lcall
es
addl
adc
dec
xor
ret
or
pop
pop
shr
movsl
call
imul
mov
imul
mov
test
pop
bound
and
pop
lea
push
cs
sbb
fwait
pushf
xor
cwtl
add
cs
mov
arpl
inc
add
repz
int
fldl
sub
into
mov
mov
mov
in
je
jl
inc
jnp
daa
dec
aam
xchg
xor
rcrb
dec
pop
and
push
jl
pushf
pop
xchg
push
mov
inc
mov
mov
dec
adc
ja
sbb
lahf
jbe
jb
addb
xchg
push
mov
jnp
push
jns
push
lret
inc
sub
pop
in
xor
adc
mov
adc
scas
adc
mov
jl
xchg
in
sub
mov
or
rcrl
inc
jp
mov
out
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
fiaddl
jnp
hlt
pushf
jnp
sub
or
mov
jl
bnd
jno
or
and
dec
mov
xor
das
mov
call
xor
sahf
inc
pop
cmp
xorl
imul
imul
pushf
xor
cmp
mov
adc
int3
in
mov
fs
cmp
and
cmp
dec
mov
jno
pop
xchg
jmp
icebp
fsts
push
bound
jne
pop
cmc
sbb
xor
fldenv
daa
lret
movsl
xor
jne
test
pop
clc
notl
imul
push
cmp
mov
pop
push
cmp
push
pop
inc
lods
xchg
dec
sub
outsl
cmp
cwtl
inc
dec
cld
xchg
pop
iret
aas
insl
mov
adc
xchg
mov
jle
mov
xor
push
es
lahf
add
test
ss
cmpsb
outsl
aad
arpl
sahf
lcall
mov
mov
jg
mov
add
daa
push
and
pop
inc
dec
icebp
leave
sti
repnz
adc
repz
fiadds
xlat
jecxz
add
jno
aam
mov
lock
xor
inc
in
xor
push
cmc
test
sbb
fnsave
adc
insl
jbe
push
xchg
sub
sub
into
mov
enter
inc
fsubs
arpl
xchg
mull
loop
dec
out
pop
jae
fcmovnb
popf
fidivs
sbb
push
mov
pop
cmpsb
add
daa
es
test
adc
push
jmp
and
jne
cmpsl
ss
in
jae
mov
push
lcall
or
add
rolb
lods
xor
mov
xor
jmp
test
cmp
int
push
subb
xchg
lcall
add
pcmpgtw
mov
mov
sub
inc
lret
nop
inc
lahf
adc
sbb
mov
inc
jo
cmp
in
adc
push
add
inc
pop
push
sub
sub
and
xchg
aad
shl
xchg
pusha
fldt
add
dec
pop
sub
push
int3
lret
xchg
mov
xor
sbb
roll
sbb
sub
out
xchg
fmuls
fbld
repnz
repnz
clc
xchg
push
scas
dec
add
jp
test
sahf
lods
sbb
add
popf
mov
add
and
mov
mov
arpl
int3
pop
fistps
ja
mov
xor
mov
gs
outsl
push
mov
sub
push
push
dec
addr16
lret
sub
mov
mov
sub
repz
push
ja
out
add
sub
pop
adcl
mov
jo
enter
xlat
cmp
mov
dec
push
push
mov
pushf
adc
pop
sahf
xchg
cwtl
dec
mull
insl
out
push
orb
sbb
hlt
or
push
lds
jl
int3
movsl
loop
jecxz
xchg
sbb
inc
and
fmull
stos
shlb
icebp
mov
test
inc
call
jbe
sbb
mov
outsb
addb
mov
aaa
mov
jnp
loop
and
add
ficomps
outsb
movsb
fsts
movsb
cltd
or
sbb
pop
shr
jo
pop
xchg
bound
add
test
sub
les
ds
out
lahf
loope
sbb
push
cmp
iret
jp
hlt
xchg
jmp
sub
mov
enter
es
xchg
jb
push
jle
mov
xchg
sbb
cmc
jecxz
aaa
repnz
cs
xchg
fcomip
jmp
xchg
out
rclb
addr16
ficomps
into
das
and
jl
cmp
jmp
out
xchg
test
mov
ljmp
mov
dec
cwtd
mov
sub
inc
jo
xor
dec
or
das
iret
adc
std
popf
xor
push
xor
cmp
cmpl
outsl
mov
pop
cli
mov
jne
xchg
cmc
push
pop
mov
inc
adc
mov
dec
movsb
in
mov
cld
xor
fcomi
repz
repz
pop
outsl
loopne
push
xchg
sahf
loope
lock
xchg
aad
add
xor
push
outsb
mov
jecxz
mov
and
adc
jg
lret
jp
dec
adc
pusha
imul
sub
popa
repz
cmp
pmaddwd
imul
gs
in
insl
xchg
xchg
sbb
push
cli
cwtl
push
leave
dec
pusha
dec
sahf
xchg
aad
pop
push
popf
repz
jge
sub
je
or
add
ds
fisubs
scas
ss
push
xor
les
out
idivl
mov
pop
ret
popa
jl
adc
and
mov
push
repnz
fnstcw
outsb
inc
rorb
divl
xor
push
out
lock
jecxz
xchg
lret
imul
popf
aaa
lock
inc
pop
sbb
div
and
imul
lds
jbe
lahf
inc
push
nop
mov
insl
sahf
cs
xchg
test
mov
jae
loop
jbe
xlat
loop
pusha
cs
mov
mov
lods
add
mulb
add
aas
pop
fdivrs
mov
pop
adc
in
popf
loop
fwait
loope
mov
cwtl
xchg
rcr
popl
movsl
xchg
decb
jb
das
testb
and
mov
les
imul
fsubrl
mov
jb
sub
data16
inc
pop
sti
adc
inc
and
fs
test
mov
mov
push
outsb
jg
call
in
aam
push
imul
mov
jge
xchg
inc
je
sahf
adc
jle
inc
out
cmp
cmp
add
pop
out
sbb
mov
xchg
adc
mov
cltd
fistl
mov
fldl
int3
outsb
fisubrs
arpl
pop
cmp
loope
pop
inc
aaa
fwait
enter
imul
pop
sbb
fimull
add
push
aad
xchg
and
cmp
sub
mov
incb
and
movsl
insb
jp
or
sub
jno
test
xlat
lret
inc
clc
sahf
adc
aad
decb
and
sbb
insb
sahf
mov
nop
sbb
test
ds
mov
imul
xor
pusha
pop
dec
mov
mov
mov
sahf
pop
lods
xor
mov
adcb
shll
or
lahf
sub
cltd
push
popa
fdivp
inc
inc
dec
sub
mov
sub
jecxz
mov
xchg
int
jns
in
push
inc
add
cmpsb
cmpsl
jl
shll
sbb
xchg
cmpl
std
pop
jae
in
leave
push
pop
pop
fidivrl
js
or
pop
adc
xchg
sub
xor
leave
outsb
jnp
mov
imul
stos
rolb
je
or
je
fldcw
add
mov
int3
imul
outsb
pop
scas
in
fisttpl
adc
sub
cmp
scas
out
pop
cli
out
pop
and
inc
inc
insb
xchg
push
loop
bnd
mov
jmp
lcall
fs
js
adc
inc
pop
mov
scas
xchg
ljmp
and
pop
inc
sti
push
lahf
scas
pop
lods
iret
inc
bound
mov
or
shrb
dec
jp
mov
out
and
lret
xor
pop
in
stos
push
jg
cmp
or
pop
add
jae
lds
and
jb
ss
or
lret
xchg
inc
dec
sarl
or
xor
faddp
pop
cmp
mov
mov
adc
test
lods
mov
or
loope
inc
dec
call
dec
jae
scas
and
mov
stos
or
adc
outsb
dec
into
test
lods
adc
push
mov
sbb
cmp
add
lahf
xchg
adc
jnp
adc
sub
jo
in
adc
add
adc
je
pop
and
dec
daa
popa
dec
mov
mov
add
dec
ror
int
push
divl
mov
loop
mov
cmp
shll
mov
add
add
fdivrl
dec
pop
lock
mov
dec
pop
ja
adc
cs
sbb
or
pushl
pop
sbb
dec
mov
roll
out
xor
cmpsb
mov
push
sahf
sub
dec
jg
add
scas
nop
sbb
jmp
stc
lret
fmuls
fdivrl
push
pop
sbb
ja
cmpl
fwait
sbb
loop
mov
mov
in
sbb
jg
jno
cwtl
jge
mov
push
lahf
xchg
clc
inc
or
cmp
adcb
sbbb
leave
mov
and
cmp
jb
push
ret
fs
loope
ret
xchg
xchg
mov
or
sbb
add
pop
cmp
push
push
in
pop
mov
pop
mov
leave
out
pop
fdivrs
test
pop
mov
inc
push
mov
lea
xchg
push
fnsave
and
xor
shll
xchg
scas
cmpsb
popf
sub
push
adc
jbe
adc
cld
pop
shrl
sarl
add
or
mov
pop
jg
jmp
and
cld
inc
ljmp
adc
hlt
decl
pushf
jbe
xchg
or
rolb
mov
rorb
les
and
mov
push
sub
push
testl
aam
ficompl
ja
testl
stos
je
mov
lret
adcb
fimuls
pop
pusha
jmp
dec
sbb
mov
xchg
mov
ljmp
fst
out
mov
pop
es
xor
fistl
pop
subl
push
mov
mov
adc
outsb
ja
cmp
inc
std
pop
jnp
adc
cmc
mov
and
or
outsl
data16
xchg
and
imul
fdivs
test
push
test
mov
aaa
pop
cld
and
mov
subl
xchg
insl
cmp
out
xorps
dec
movsl
sub
push
ss
divb
in
mov
adc
imul
loop
pop
in
insl
xor
out
mov
and
decb
jbe
mov
in
sahf
addb
lahf
and
sbb
decb
test
shlb
mov
xlat
sub
lock
jbe
pop
in
push
lret
jne
push
sbb
cmp
jl
push
sub
mov
mov
inc
lds
mov
and
xchg
lock
mov
out
mov
bound
adc
xor
inc
test
stos
mov
inc
test
jbe
mov
mov
mov
xor
movsl
cmp
fwait
in
bswap
test
iret
sbb
aam
push
in
jno
push
stos
pop
sub
bound
incb
sti
adc
stos
pop
jns
or
bound
dec
cmp
bound
stos
sbb
add
sarb
mov
pop
inc
jp
push
insb
loopne
in
pusha
pusha
inc
adc
icebp
popw
xchg
test
xchg
cmp
aam
push
jo
repz
push
jge
hlt
sahf
jmp
add
lea
test
xor
mov
and
mov
loopne
lods
cmp
outsb
inc
push
movsl
sbb
jle
cmp
cmp
orl
sub
jo
fwait
sbb
sbb
or
adc
stc
js
xor
and
sub
jp
enter
aas
dec
pusha
dec
dec
push
mov
stc
cmp
add
inc
push
jnp
movsl
and
aas
fnstcw
shll
mov
push
mov
mov
call
popf
fdivs
adc
jp
jge
push
push
js
iret
or
fdivl
cmp
cs
add
jle
faddp
ljmp
adc
adcl
pop
xchg
mov
clc
mov
or
mov
xor
jbe
cmp
icebp
xchg
scas
inc
push
sub
test
mov
mov
fs
jmp
sbb
mov
xchg
iret
mov
xchg
xchg
push
out
inc
lret
test
enter
arpl
or
xchg
out
jno
dec
cmp
mov
jcxz
inc
mov
or
mov
pop
pop
dec
cmp
push
adc
stos
mov
jb
sbb
out
jno
aam
mov
push
pop
aam
daa
stos
mov
push
movsl
das
push
inc
stos
roll
ds
ja
inc
fldenv
or
push
or
andl
lods
repz
or
and
fldl
or
adc
repz
adc
inc
or
ret
loop
sub
ja,pt
movsb
icebp
scas
push
lods
mov
cmc
dec
mov
je
sbb
jo
jmp
ds
adc
push
jge
lods
outsl
push
arpl
aam
pop
js
cmc
test
or
sbb
cltd
pop
lcall
dec
inc
cmp
add
stos
outsb
inc
xchg
repnz
popf
mov
mov
cmp
inc
push
or
push
sub
std
jmp
out
xchg
out
stc
nop
out
adcb
push
jle
fcoms
in
sbb
mov
xchg
inc
ret
nop
outsb
sub
adc
pop
add
pop
cmc
shrb
movsb
push
sarl
add
lock
jp
lods
scas
dec
int
dec
ret
cmpsl
rorl
sbb
pop
push
scas
ljmp
fcom
mov
adc
leave
testb
movsb
lcall
sbb
xor
repz
rclb
ret
mov
icebp
cmp
out
lock
in
mov
cmp
jl
adc
sbb
mov
add
shr
adc
inc
sub
cli
stos
mov
pop
pop
ret
push
pushf
sub
jl
jle
xchg
ret
jle
loope
les
test
jmp
mov
dec
cwtl
fsin
data16
xchg
mov
sahf
jb
ret
pop
mov
ds
insl
popf
push
imul
dec
push
jnp
lret
xor
imul
add
arpl
lcall
shrb
out
sub
cmp
mov
mov
fildl
lahf
outsb
inc
sub
daa
ret
and
xchg
imul
lret
and
and
icebp
adc
insl
mov
testb
xchg
cltd
insb
cmp
xor
das
cmpsb
js
inc
fistl
xchg
dec
add
dec
inc
subb
pop
sahf
sbb
int
test
hlt
lea
mov
fs
sbb
out
mov
mov
cmp
push
out
push
inc
out
push
push
lret
repnz
arpl
push
push
dec
xor
push
out
test
ss
movsl
in
mov
test
xchg
or
aas
int3
lods
sub
pop
push
icebp
xchg
sbb
mov
dec
mov
stos
jbe
test
inc
jo
ss
sahf
sub
adc
lret
xchg
pushf
decb
jo
cld
dec
mov
dec
cmp
lret
fcom
sub
mov
adc
pop
int
sti
pushf
pop
sbb
ss
ljmp
lock
jbe
imul
popf
std
xchg
lret
fisubrl
into
xchg
xchg
dec
nop
int
sub
imul
and
xor
subps
out
lock
jae
aad
loope
or
inc
or
rorb
mov
xchg
jle
sub
lods
flds
pop
repz
or
jl
mov
sbb
imul
push
maxps
sbb
aad
stc
and
push
sub
mov
fwait
dec
mov
std
aam
sti
and
inc
lods
mov
dec
shrb
arpl
ljmp
scas
sarl
mov
xchg
neg
and
fidivrs
cmp
push
mov
lret
test
clc
rcl
aas
add
lcall
push
repnz
sub
xchg
xor
nop
xchg
mov
adc
adc
je
pusha
mov
jle
mov
lcall
je
daa
inc
mov
out
add
je
roll
pushf
loopne
and
cmpsl
dec
pusha
fcmove
adc
cwtl
or
jp
call
fisubrl
push
jbe
dec
adc
push
mov
lahf
mov
mov
out
inc
mov
int
and
js
int
adc
jecxz
hlt
lret
and
xchg
imul
mov
inc
add
subl
lods
mov
test
inc
fwait
sub
je
imul
pop
mov
push
mov
movsb
jecxz
adc
jne
lds
repnz
daa
fstl
in
cs
or
pop
mov
js
jg
add
or
pop
mov
xor
dec
inc
leave
imul
sbb
or
shld
jnp
sub
xchg
or
sti
icebp
movsl
das
adc
stos
aas
mov
or
cmp
mov
out
mov
add
les
mov
sub
cmp
inc
xchg
push
cmp
push
inc
cmp
or
sub
mov
and
or
cmp
mov
pop
cld
iret
mov
dec
mov
add
dec
js
dec
xor
sub
adc
sub
outsb
add
in
jno
cmp
repz
lahf
mov
mov
icebp
xor
xor
test
pop
bound
scas
stos
mov
xchg
aas
jo
test
js
cld
add
and
int3
push
cmp
es
imul
push
int
aaa
jbe
dec
push
jns
or
jmp
xor
pop
and
sti
adc
push
dec
cmp
inc
or
xchg
js
mov
jae
test
test
lret
or
jge
out
cmp
call
out
rcl
test
inc
push
leave
cwtl
sbb
loope
jg
and
or
std
in
jl
vcvtps2dq
dec
outsb
int3
mov
neg
in
and
fs
nop
dec
repnz
mov
test
and
jb
cmpsl
jb
cmpsl
test
push
clc
push
sub
inc
mov
xchg
ljmp
xchg
fiaddl
push
fst
leave
xchg
call
lahf
loop
push
mov
cld
or
dec
inc
and
mov
int3
ss
lds
lahf
sub
ja
out
or
inc
lret
fwait
mov
mov
add
pop
add
push
lock
pushf
sbbb
fwait
xor
jbe
imul
xchg
rcl
sbb
mov
gs
mov
pop
jmp
stos
in
adc
cmpsb
mov
mov
add
xor
jp
jmp
inc
jo
xchg
filds
ljmp
dec
iret
jne
sub
mov
iret
outsb
jecxz
sti
mov
mov
iret
inc
lcall
sbb
push
push
push
xor
cmp
xlat
int
not
adc
adc
cmp
sbb
or
dec
lods
js
pop
repnz
push
repz
int
lock
sbb
inc
ds
popf
stos
addl
negw
or
ljmp
dec
shll
andl
pop
push
push
cmp
lds
popf
push
inc
dec
dec
push
and
and
jo
fucom
xchg
outsl
mov
dec
xchg
lock
and
add
mov
xchg
xchg
jge
fwait
into
arpl
shrb
movsl
inc
cmp
jne
and
test
aas
adc
mov
repnz
cmp
arpl
jl
or
xchg
daa
imul
cmp
fs
into
xchg
int
dec
or
xor
add
std
mov
addr16
dec
stc
mov
xor
out
jl
movsl
lea
shll
loope
pop
push
dec
xchg
shll
jbe
mov
fstl
add
xor
test
rcrb
ss
arpl
sub
xorb
push
push
lods
mov
inc
jge
int
mov
adc
xor
outsb
in
sbb
mov
ficomps
mov
les
or
or
push
enter
jg
sti
aad
or
das
orb
pop
sub
xor
divb
xchg
mov
add
adc
mov
xor
test
subl
les
test
insb
jne
out
aam
mov
adc
jp
fdivrl
jne
inc
mov
or
pop
stos
rcrl
outsb
pop
inc
lock
mov
test
xor
mov
mov
jnp
sub
or
leave
sub
pop
roll
mov
ds
gs
mov
and
fwait
cmp
std
mov
mov
lea
fldenv
and
leave
scas
bound
adc
mov
ss
nop
lock
mov
out
mov
mov
das
lcall
mov
and
push
in
pop
mov
rorl
mov
adc
rorl
add
call
sub
hlt
out
adc
pop
adc
push
add
pop
or
out
shll
stc
rcl
mov
lds
and
mov
inc
fidivrs
aad
jle
sub
adc
inc
push
jae
cltd
sahf
lock
sub
adc
ljmp
xchg
mov
je
in
jp
out
sbb
jae
xchg
int
mov
jb
mov
mov
int3
mov
xchg
add
sbb
fists
cltd
out
rolb
push
sbb
test
xor
cld
ror
cmp
repnz
mov
inc
push
xchg
mov
pop
cmp
sbb
inc
jae
shll
in
out
inc
lcall
sbb
fstl
stos
xor
lahf
mov
adc
jns
test
or
add
and
leave
outsl
stc
push
dec
mov
jge
xor
xchg
inc
pop
movsl
push
jge
inc
sub
pop
icebp
scas
mov
xchg
push
dec
arpl
insb
or
ds
push
mov
adc
cmp
and
lea
mov
andl
xchg
inc
xor
dec
movsl
xabort
hlt
ja
mov
and
or
and
sahf
xchg
jp
or
mov
stc
pop
movsb
add
xlat
cmp
or
aaa
mov
je
movl
sbb
mov
xchg
pop
setae
pop
arpl
clc
cmc
push
out
test
stc
cmpsl
xor
shrl
pop
inc
jmp
xchg
pop
arpl
mov
in
inc
loope
pushf
jecxz
int
cmp
jg
movsb
add
xchg
les
xchg
jl
daa
mov
je
fs
mov
ds
xlat
mov
push
icebp
ret
mov
in
lcall
push
jnp
jle
in
dec
arpl
rol
mov
pop
adc
inc
pop
and
repz
sub
orb
in
notl
mov
es
adc
dec
rcrb
pop
adc
mov
push
shll
cwtl
gs
loope
xor
or
push
lret
or
xor
inc
dec
jne
and
aas
fmul
js
idiv
data16
pop
das
shll
dec
xchg
sahf
adc
or
xlat
jne
out
in
sbb
pop
outsb
jne
rcrb
jbe
js
test
xor
sbb
xor
xor
push
fs
in
sbb
pop
and
nop
enter
pop
jnp
pop
in
daa
sbb
and
sub
sarb
jp
push
imul
sbbl
mov
imul
lods
sub
adc
jge
push
jmp
cmp
nop
ljmp
adc
xlat
push
mov
fcoms
mov
lret
mov
pushf
or
nop
cmc
aas
out
jle
js
ljmp
mov
stos
out
stos
and
loopne,pt
jp
jnp
mov
lods
cmc
cmpl
mov
hlt
push
out
xchg
push
dec
sbb
pushf
mov
sub
fwait
insl
insb
pop
mov
mov
loop
cmp
cmp
sti
and
lretw
jg
mov
pusha
push
jp
push
jb
push
mov
adc
fisubs
add
dec
and
jns
mov
gs
inc
sub
inc
andl
jno
test
dec
hlt
lret
sub
fisttps
jge
push
pop
mov
popa
and
cmp
lock
sub
lcall
xchg
mov
xchg
push
sbbb
mov
pusha
sub
mov
mov
cltd
sti
mov
jl
rorl
dec
testb
adcb
push
xchg
jbe
ja
ljmp
loopne
lret
subl
scas
push
add
mov
or
jo
pop
inc
mov
ja
cli
inc
mov
xor
pop
mov
lock
jnp
fdivrs
push
inc
lret
xor
lahf
addr16
mov
adc
cmp
dec
mov
push
add
out
sahf
pop
das
push
lods
add
cvtps2pi
sub
mov
lods
add
xchg
push
outsb
add
mov
or
arpl
push
push
in
idivb
xchg
mov
ret
sar
dec
jp
sbb
orl
fwait
ret
xchg
jg
mov
rol
mov
mov
fstpl
sbb
mov
sbb
lret
cmp
imulb
mov
cli
and
movsb
aas
rcr
push
cmp
in
cmp
jmp
xor
and
jmp
mov
sbb
push
out
es
inc
nop
sbb
mov
js
jb
jp
scas
movsl
js
movsl
divl
pop
imul
cli
lcall
or
pop
xor
inc
sub
dec
lret
mov
jno
pop
xor
cmp
and
xchg
jle
cmp
cmpsb
push
ljmp
insl
pop
movsb
jmp
dec
cmp
xchg
mov
xchg
rorl
mov
shrb
negb
dec
dec
jns
fsubrl
push
scas
flds
stc
in
jo
movsb
daa
cmp
lcall
mov
pop
loopne
add
pop
cltd
xchg
out
fsts
or
pop
xor
or
enter
gs
int3
dec
fyl2xp1
dec
xor
add
xor
push
push
mov
fimuls
pop
adc
sbb
jae
jbe
push
orb
xchg
pop
je
or
jmp
and
aaa
in
out
sub
mov
aas
pop
cvtdq2ps
stos
enter
pop
adc
push
jmp
inc
cmpsb
mov
push
daa
and
stc
shr
fnstcw
jl
jne
fmuls
jae
test
es
push
inc
roll
mov
push
jns
fnstsw
mov
and
adc
in
test
sbb
cltd
arpl
lahf
add
in
pop
mov
sbb
xchg
gs
fsubr
hlt
pop
push
movsb
add
ss
aad
cld
lds
lods
orb
pop
dec
out
mov
mov
mov
mov
jle
stc
imul
lcall
xchg
cmp
adc
aaa
in
fistpl
add
push
addr16
push
cmp
push
loopne
sub
mov
dec
sbb
pop
sbb
jecxz
inc
cwtl
push
je
test
or
fstpt
cwtl
mov
into
pushf
or
int
imul
lods
add
adc
cmp
xlat
jg
test
loop
ss
push
in
pop
dec
cmpl
sarl
addr16
jae
test
sub
rcrb
add
inc
rolb
pop
pop
fildll
outsl
add
adcl
leave
mov
xchg
stc
lods
mov
add
rolb
or
pop
pop
out
fldt
inc
lea
shrb
sbb
jp
dec
xor
xchg
andl
add
push
lcall
jle
scas
sbb
cmp
or
pop
add
ljmp
and
out
pop
push
das
lock
mov
pop
mov
xor
out
icebp
dec
lock
imul
test
orl
mov
add
mov
jne
xor
pop
mov
out
sub
push
mov
nop
ror
std
movsb
sbb
push
outsl
clc
push
sbb
leave
popf
dec
xor
xchg
sub
fstpl
xchg
imul
mov
sbb
xchg
mov
pop
jle,pt
adc
cmp
pop
add
and
jo
mov
in
cmp
sbb
adc
mov
add
aaa
or
mov
push
stos
or
sbbl
fcmovnbe
shll
jmp
push
xchg
in
hlt
adc
js
test
into
sbb
into
popa
in
data16
xor
ja
lret
dec
adc
aaa
jae
jae
cmpsb
aad
pop
inc
mov
xchg
dec
sti
fildl
sub
dec
scas
jns
cmp
sbb
aad
cmp
mov
pusha
or
add
bound
mov
jne
lret
mov
cmp
movsb
rcll
sub
jp
mov
in
ss
mov
adc
xchg
rcpps
mov
pop
scas
or
mov
xchg
push
aaa
sub
out
inc
mov
sub
inc
jge
out
add
xchg
scas
lret
mov
loop
lahf
shl
dec
adc
sub
adc
mov
pop
mov
loopne
mov
xor
loope
loop
add
and
cwtl
fmuls
lcall
mov
dec
add
and
pop
sbb
dec
cmp
stos
bound
mov
push
push
xor
jp
mov
xchg
push
push
pop
int3
ror
or
incl
mov
or
int
pop
mov
xchg
in
jle
fs
xchg
cmp
test
mov
mov
cmp
mov
jg
pop
scas
xor
mov
jl
and
repnz
mov
aaa
retw
jmp
jae
mov
popl
jns
rcrb
int3
aad
bswap
enter
xchg
and
inc
scas
dec
rclb
adcb
lods
mov
ljmp
dec
sbb
lahf
jne
clc
mov
pop
imul
fs
inc
inc
jns
and
nop
rolb
pop
or
leave
movsl
int3
dec
and
ret
les
and
and
add
das
pop
xor
inc
add
jmp
mov
out
cmpsb
add
and
pop
add
decl
hlt
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
mov
ljmp
jnp
sub
mov
pop
test
icebp
xchg
gs
call
cwtl
scas
add
js
idivl
cmp
xor
aam
xchg
sbb
je
call
cmp
rclb
test
insb
fiaddl
mov
push
dec
push
add
mov
dec
out
out
push
lods
test
aas
fwait
xchg
xchg
push
mov
pop
cmp
push
push
adc
scas
push
jbe
pop
std
add
lds
xchg
inc
jl
push
es
mov
ljmp
jp
jg
ds
movd
aas
ja
sbbl
adcb
sbb
or
stos
or
ds
jmp
rclb
adc
jmp
cld
out
adc
dec
mov
or
and
xor
lret
popf
mov
jle
fstps
cmp
fwait
stos
hlt
in
popa
mov
cwtl
cmpsb
jno
scas
add
icebp
and
inc
xchg
dec
aaa
push
xchg
jnp
cmpsl
stc
repz
push
mov
arpl
pop
fistps
fmulp
shlb
or
cmc
cmpsb
inc
and
xchg
xchg
inc
sti
dec
ss
sbb
sbb
sub
jae
popa
push
pop
sbb
and
jp
mov
lods
mov
add
push
and
repnz
mov
xchg
dec
and
add
pop
arpl
push
xorl
inc
frndint
shrb
adc
lods
mov
jmp
sbb
imul
mov
fcoms
jge
add
pop
cmp
lods
imul
scas
clc
pop
mov
mov
arpl
mov
adc
lea
cwtl
xchg
inc
aam
lcall
je
nop
mov
adcb
icebp
xchg
dec
push
adc
icebp
mov
adc
and
cld
jmp
push
cmp
scas
mov
sahf
mov
mov
lret
xor
mov
cmp
or
addr16
xor
cmc
add
enter
xchg
push
aad
imul
inc
and
mov
aaa
out
enter
jb
fwait
movsb
ds
test
sahf
mov
dec
pop
js
mov
mov
sbb
add
or
jp
mov
cld
scas
jle
jno
popa
sub
xchg
and
pushf
test
sub
lods
in
inc
mov
fnstenv
push
mov
xor
jb
movsb
movb
dec
out
lahf
mov
mov
mov
or
and
loopne
sub
stc
enter
push
bound
push
sbb
scas
adc
xchg
pusha
jbe
lea
iret
vmwrite
addl
loop
lahf
pop
and
inc
xor
jae
xor
test
jae
push
mov
test
mov
sbb
jmp
sti
xchg
jne
push
mov
push
out
mov
iret
push
lods
ljmp
movb
nop
in
xor
ljmp
rol
sahf
rorb
or
dec
or
out
in
ljmp
adc
mov
mov
rolb
push
iret
cmp
popf
mov
mov
sub
loope
jns
loopne
dec
xor
mov
ja
pop
sub
xor
cltd
mov
fimull
and
aas
lret
insl
scas
cmp
add
cmpsb
push
xchg
mov
aas
insl
xor
adc
xor
cmpsb
inc
enter
fdiv
inc
bound
lret
addr16
xchg
das
dec
stc
scas
xor
push
mov
arpl
stc
jle
inc
mov
mov
iret
repz
or
lea
sbb
lahf
xor
sbb
cs
lods
subb
clc
cmp
mov
push
xchg
ror
pop
jb
mov
aas
daa
mov
mov
adc
push
push
jg
xor
rorl
nop
pop
inc
mov
jnp
sbb
and
xchg
cmp
mov
push
pop
push
sbb
and
icebp
rcll
mov
xor
xor
sti
movsl
lds
xor
cmpsl
out
adc
mov
pop
push
mov
popf
mov
test
dec
lods
cwtl
aas
aam
cmp
jmp
add
jg
and
sub
addr16
mov
fistpl
sub
iret
nop
push
push
sub
add
inc
test
aad
lret
mov
loope
rolb
cmp
xlat
push
xchg
mov
lods
subl
loop
sub
aam
test
push
pop
stos
sub
in
cltd
out
push
inc
movsb
clc
mov
es
frstor
je
into
sahf
xchg
lret
mov
sub
mov
lods
add
sbb
jge
jge
push
sub
lock
out
push
cmp
imul
pop
add
test
shlb
and
aad
xor
mov
lods
pop
mov
adc
pop
dec
insb
mov
lret
sub
sbb
in
jne
adc
cli
adc
pop
mov
push
add
lret
mov
aas
jno
in
int
cmp
iret
fucomip
loope
mov
xor
leave
imul
mov
test
sub
ja
insl
scas
mov
push
lods
xor
aam
scas
add
cmp
pusha
scas
push
adc
cmc
lcall
cmp
mov
xor
xchg
and
push
jmp
scas
out
mov
dec
ljmp
and
cmpsl
outsb
lods
jae
outsl
push
mov
loope
das
fiaddl
addb
repnz
jno
xor
add
sub
pop
push
push
xor
and
pop
es
test
fsubs
xchg
add
cmp
ljmp
lods
leave
adc
mov
std
jmp
pop
jmp
pop
or
cmpsb
das
xchg
push
jle
and
ss
jno
inc
push
or
mov
xor
aad
adc
lea
mov
mov
mov
pop
xchg
add
scas
lret
js
jp
cs
repz
in
sub
xor
or
inc
rcl
cmp
pop
add
xchg
cld
jle
adcl
call
xor
pop
or
sub
ss
orb
loope
sbb
adc
xor
ljmp
push
inc
ret
push
loop
in
push
jg
mov
mov
rorl
dec
xor
ret
xchg
fildl
jno,pt
xor
add
sti
jns
scas
sarb
bndstx
mov
or
cmp
xchg
lret
cs
and
dec
sub
pop
and
cwtl
mov
jg
push
hlt
pop
cmpsb
or
push
mov
mov
and
aad
dec
xor
cmp
pop
imul
xchg
ficoms
xchg
mov
mov
xchg
fisubl
mov
test
adc
and
insb
push
mov
addr16
jno
mov
cli
push
hlt
jecxz
push
enter
dec
sub
or
mov
jae
jb
lret
push
aam
aas
push
inc
and
jnp
ja
insb
mov
mov
inc
mov
out
bound
lds
test
pop
loope
inc
jl
mov
mov
nop
stos
and
daa
mov
mov
mov
movsl
jge
call
sub
inc
sub
jmp
pop
or
adc
movsb
cmp
int
xchg
dec
in
scas
loopne
rorl
xlat
clc
pusha
xchg
out
push
call
pusha
les
cmp
pusha
fiaddl
xchg
movsl
ljmp
or
test
xchg
xchg
cltd
sub
add
xor
mov
stos
fstl
cmpsb
scas
shl
cmpsl
gs
push
push
pusha
repz
ret
xchg
sbb
push
add
inc
movzbl
sbb
dec
mov
mov
iret
inc
inc
cltd
movsb
mov
stc
mov
cmpsl
icebp
mov
mov
pop
pop
adc
setg
fidivrs
adc
fsts
pop
sbb
cmp
pop
mov
xchg
imull
icebp
inc
incl
cltd
jbe
sbb
test
xor
xor
pop
mov
test
push
jmp
fimuls
mov
and
adc
xor
call
jns
sub
hlt
in
push
mov
pop
pushf
int
dec
mov
sbb
pusha
or
xchg
mov
jge
push
pop
fidivrs
popa
and
mov
pop
lcall
cmp
lock
cmp
test
lea
xchg
inc
lret
call
jb
aas
jecxz
sub
lret
test
xchg
xchg
xor
lcall
out
loopne
sbb
fs
sahf
lcall
xchg
rcll
jne,pt
xchg
ja
pop
aaa
repnz
out
sbb
in
inc
push
ds
or
ss
xor
aaa
adc
sti
cmp
mov
lahf
out
nop
xchg
out
pop
sub
aas
sti
pusha
int
leave
xor
jecxz
ret
stos
jecxz
xchg
mov
or
cmpb
scas
inc
divb
out
ljmp
sbb
inc
pop
rcrl
roll
adc
lods
imul
mov
mov
fldcw
sub
mov
fucomp
dec
or
out
mov
and
test
inc
jmp
fcomps
push
shrl
ret
mov
add
mov
ret
arpl
sbb
loope
push
jbe
push
sarb
cmp
imul
jo
inc
fcoms
popa
sub
out
hlt
mov
cwtl
ja
mov
mov
out
xor
push
in
pop
fs
lds
jp
cmpb
add
ds
cmp
cmp
ret
gs
xchg
xor
inc
icebp
pcmpeqw
and
rolb
dec
mov
mov
xor
xor
jbe
cmc
mov
add
xchg
insb
inc
mov
adc
faddl
pop
cmp
les
imul
and
movsb
cmp
jno
cmp
orl
in
dec
lcall
dec
test
and
mov
mov
sub
mov
adc
mov
out
xor
aam
mov
xchg
dec
into
pop
push
xchg
sbb
ret
push
scas
dec
rorb
jp
cmp
push
mov
xchg
pop
sub
icebp
nop
repnz
fcmovbe
sahf
or
sahf
repz
stos
push
xchg
cmp
test
jbe
adc
mov
add
mov
mov
inc
push
push
xchg
xor
popf
or
xchg
pop
cmp
bound
and
mov
jp
and
or
std
pop
ds
lods
inc
sub
push
or
mov
push
jbe
add
aaa
sahf
jne
push
pop
adc
xchg
mov
roll
mov
pop
scas
ret
inc
dec
and
pop
mov
and
xor
stos
dec
popa
leave
div
or
sbb
or
push
jge
pop
repnz
dec
popa
jg
cmpsb
mov
out
in
call
or
sarb
add
or
push
mov
add
repz
push
push
and
cmp
or
and
xor
data16
sub
xor
or
fdivrs
dec
cmp
icebp
and
push
out
lods
movsl
aam
jb
inc
outsb
ss
push
add
sar
lret
fdivr
ret
out
mulps
mov
dec
xor
aas
push
call
out
sbb
mov
xor
rclb
shll
lock
psrad
das
aaa
mov
add
addb
iret
add
jge
scas
hlt
pop
ficoms
xor
push
fnstsw
stos
sbb
movsl
daa
cs
add
cli
jbe
add
or
sahf
out
jp
insl
lods
fstpt
cmp
pop
fiadds
fs
and
lods
lret
fwait
int3
hlt
mov
mov
popa
mov
sub
movsb
ds
cmpsb
andl
les
sbb
add
outsb
push
daa
adc
sub
xchg
call
adc
cmpsb
insl
mov
lea
mov
scas
dec
out
insb
xor
push
lea
and
movsl
adcl
ds
jno
call
pop
jno
test
test
je
in
repnz
loope
and
int3
push
stos
lcall
add
cmp
dec
xor
into
daa
jmp
std
xor
adc
into
jae
ficoms
test
jb
das
adc
mov
cli
and
daa
sbb
dec
xchg
add
data16
pop
fimuls
sar
movsb
cli
push
call
xchg
sete
in
cltd
xchg
dec
pop
mov
lods
pusha
test
in
cmc
enter
rcrb
ss
mov
pop
std
in
mov
pop
hlt
jl
out
jns
cmp
movsl
mov
or
inc
sarl
rol
ljmp
into
shl
jne
cmp
pop
repnz
dec
pop
ds
dec
fistl
jb
nop
aam
cmp
or
sbb
jbe
cmpsb
pop
mov
push
xchg
clc
add
mov
sbb
adc
inc
fdivrl
mov
xchg
sub
scas
or
lock
jbe
xlat
lret
mov
ficoml
mov
xor
push
mov
dec
inc
lods
movsl
and
xchg
in
jmp
test
int
gs
sbb
inc
fsubp
fwait
rcrl
insb
ret
pop
test
mov
lcall
shll
xor
pop
cs
leave
lea
mov
cmp
pop
xor
lret
shlb
adc
icebp
leave
pop
test
jle
ja
out
shrl
out
pusha
outsl
adc
popa
xchg
sbb
paddusw
inc
out
movsl
push
or
or
mov
lds
push
mov
cmp
mov
push
mov
repnz
icebp
stc
push
mov
es
into
andb
insb
ljmp
loop
inc
daa
cltd
aad
js
or
mov
inc
int3
loope
push
mov
xor
dec
mov
jl
into
jmp
pop
and
es
xchg
loopne
mov
mov
aas
ror
adc
inc
ljmp
jmp
mov
mov
adcb
icebp
ljmp
cli
cmpsl
sub
in
hlt
fisubrs
dec
push
testb
ss
daa
and
jno
fisubl
push
xchg
mov
loop
mov
inc
sub
imul
and
int
ljmp
cld
cltd
dec
mov
fnstsw
jbe
pop
arpl
cmp
and
outsb
mov
or
imul
sub
mov
sbb
or
fldt
cmc
clc
lock
imul
das
sbb
stos
push
cmp
cmpsb
mov
fadd
in
inc
data16
es
dec
sub
loopne
adc
aaa
mov
call
lret
frstor
sbb
mov
icebp
add
add
sti
xlat
cmp
mov
movsl
adcl
adc
pop
nop
test
arpl
imul
int3
in
fsubr
push
cmpsl
adc
jmp
mov
pop
call
mov
lock
adc
das
rorb
stos
rcrb
sahf
add
or
push
cmp
into
xchg
subl
cld
dec
mov
lret
nop
repnz
xchg
mov
mov
ljmp
insl
cmpsl
push
push
or
sub
adc
inc
jle
repnz
jno
xor
das
cmc
loopne
mov
xchg
cli
mov
in
xor
cbtw
push
sbb
adc
test
movsb
std
mov
mov
inc
sarb
inc
add
lahf
or
xor
imul
mov
pop
push
push
push
shlb
cmpsl
pop
add
lahf
int3
outsl
jo
cwtl
pop
inc
popa
dec
dec
ficomps
pop
lea
stos
sub
stos
xchg
movsb
dec
dec
fwait
xor
stos
lret
mov
xor
fnstenv
push
add
mov
cmpsl
loope
xor
sub
mov
stos
mov
jns
imul
or
jne
xchg
xor
dec
xchg
mov
test
jmp
ds
dec
mov
aam
cwtl
in
jbe
xchg
shlb
adc
ficoml
aam
andl
aad
insb
lcall
or
dec
lret
leave
cwtl
jno
xor
mov
dec
cmpsl
mov
pop
int
jns
sbb
out
insb
pop
std
sub
jmp
add
addb
mov
insl
xchg
push
test
icebp
dec
fldl
test
push
xor
pop
pushl
pop
aaa
add
pushf
ds
inc
push
sbb
or
test
xor
mov
sub
push
xchg
and
les
ss
dec
sub
fimuls
fdivl
test
sub
mov
cld
add
lds
sub
out
mov
rol
fs
rorb
xchg
ret
addr16
mov
pop
lock
jb
mov
mov
cmpsb
dec
jne
mov
int
jo
cld
mov
movb
adc
fcomi
pop
cmpsl
push
or
add
and
xlat
pop
pop
imul
push
mov
cmp
mov
stc
cli
outsl
lret
movsb
hlt
mov
sub
cwtl
rcrl
mov
arpl
adc
fbld
call
sub
jne
mov
je
idivb
in
icebp
stos
mov
cmc
das
ja
test
mov
jne
and
call
lahf
popf
cmpsl
shlb
push
jae
daa
pop
pop
xchg
sub
add
imul
imul
imul
es
adc
jge
xchg
mov
inc
push
je
clc
std
call
pop
stos
jge
repnz
xchg
sti
outsl
pop
xchg
ficompl
ljmp
add
mov
lds
and
mov
sub
push
xchg
xor
or
ss
fwait
adc
jo
scas
jmp
xor
pop
data16
fsubl
js
lods
xor
scas
push
jbe
xor
adc
imul
div
pop
outsl
js
xchg
movsb
outsl
or
pop
jle
bound
loope
ret
lcall
popf
scas
fldenv
cmc
addr16
sti
shrb
aam
decb
xor
xchg
fisttpl
xchg
in
enter
cld
or
fs
ss
icebp
sahf
or
adc
enter
cmpsb
push
add
cmc
lret
mov
fisubl
pop
adc
sbb
mov
pop
mov
lods
std
mov
clc
cmp
jb
add
out
xchg
int
rcrb
add
mov
push
sbb
push
jmp
aam
inc
pop
pusha
ror
lahf
cmc
mov
inc
sbb
popa
fisttpl
cmpsl
mov
mov
fdivl
adc
outsl
sbb
push
sbb
cli
shlb
push
xchg
jno
movsl
xchg
xor
adc
lds
mov
leave
sub
or
sbb
cmp
jne
notl
lret
loope
xor
iret
xor
jecxz
jmp
imul
stos
xlat
xchg
outsb
popf
test
mov
mov
lcall
and
jge
mov
hlt
inc
mov
push
out
popf
xorb
pop
enter
mov
inc
adcb
inc
es
sub
scas
push
icebp
sub
imul
int3
sub
lcall
and
mov
push
add
jmp
mov
sti
jg
test
cltd
push
repz
push
les
pop
pop
add
cmove
inc
in
ret
pop
push
ret
enter
test
in
ljmp
xor
mov
repz
push
int
and
or
cli
adc
sub
jns
mov
mov
inc
push
dec
sbb
popa
test
dec
and
cli
mov
cmp
lods
fistpll
in
add
sbbb
sarl
ja
dec
jp
movsl
and
aaa
ds
cmpsl
and
mov
iret
cmp
xor
sbb
lahf
les
inc
mov
repz
fwait
adc
mov
pop
iret
cmp
mov
mov
test
jmp
mov
xlat
fisubrs
add
xor
xchg
push
sbb
insl
inc
add
xchg
mov
push
or
push
jl
jle
imull
lock
push
jne
cmp
mov
mov
mov
aad
dec
mov
ficoms
inc
mov
je
mov
or
test
popf
outsb
lret
mov
inc
push
lods
rcl
add
adc
cmp
push
pop
adc
scas
adc
mov
inc
push
inc
mov
pop
repnz
add
push
add
pop
push
inc
xchg
ja
aaa
xchg
or
xchg
insl
iret
sub
test
aam
mov
lret
and
xor
pop
cld
mov
sub
xor
fs
les
push
inc
mov
cmpsb
push
jns
sub
repnz
out
inc
mov
jg
add
aaa
sub
push
xchg
je
arpl
loope
aad
xchg
movsb
mov
sub
imul
int3
fstps
push
adc
fisubs
inc
and
movsb
mov
pop
call
ljmp
scas
mov
push
mov
iret
cmpsb
pop
aas
xlat
or
and
out
mov
pusha
scas
bound
inc
cmc
mov
test
lahf
mov
jno
int
add
enter
dec
stos
sbb
xchg
sub
fld
dec
or
dec
fldpi
out
add
imul
loopne
push
icebp
push
imul
xor
call
rorl
aad
insb
mov
cld
mov
add
jno
sbb
stos
xor
adc
sub
jl
add
push
mov
fimuls
into
sbb
test
int3
dec
xor
rcll
mov
cs
mov
imul
das
jge
xor
sahf
sub
dec
test
mov
pop
pop
push
jne
xchg
pop
lods
and
cmp
cmp
cli
jb
daa
mov
jmp
out
jns
cmpsl
push
rolb
inc
out
mov
scas
mov
aaa
mov
cmpsb
cs
stc
jge
popf
mov
mov
rorl
dec
sub
xor
jbe
xchg
or
stos
fincstp
mov
xchg
dec
outsl
adc
in
push
cmp
mov
mov
jge
scas
lea
mov
outsl
or
repz
jmp
insb
lcall
push
dec
flds
and
push
insb
in
cmp
jmp
mov
jl
cmpsb
mov
xchg
jecxz
mov
push
js
stc
negb
mov
mov
hlt
push
dec
mov
sbb
fnstcw
icebp
lret
jl
pushf
cmp
dec
mov
adc
fildll
out
aas
mov
jne
loop
cmp
into
and
mov
cs
xchg
gs
imul
fdivl
jne
sti
jp
mov
xchg
push
inc
cmpsb
lcall
push
and
inc
xchg
stc
and
cwtl
roll
out
dec
pop
test
mov
outsb
mov
lcall
shlw
inc
jns
and
in
std
xchg
cmp
repz
cli
mov
fsubs
and
test
inc
inc
out
hlt
pop
xor
decb
mov
pop
dec
out
lods
outsb
sub
and
sub
or
dec
xor
push
xchg
and
leave
sub
sbb
push
mull
inc
pop
xchg
jae
ret
mov
sbb
pop
push
ss
inc
dec
cwtl
js
adc
jge
or
and
cmpsb
dec
sub
bound
xchg
wbinvd
cmp
jae
mov
fidivrl
jl
push
test
or
pop
aad
mov
pop
dec
ret
jne
std
rolb
loopne
xor
inc
push
ja
xchg
out
nop
sub
xor
addr16
and
mov
scas
xchg
movb
mov
arpl
dec
xor
xchg
subl
inc
icebp
xchg
into
push
add
ficompl
scas
stos
xor
xor
cld
outsb
jae
jecxz
dec
sbb
adc
ret
fistpll
cwtl
jae
insb
lret
insl
xor
or
cmc
add
jb
inc
add
pop
mov
cwtl
in
add
in
mov
popf
cmovo
ja
repz
nop
rclb
jmp
bound
cs
insb
pop
push
push
inc
xor
stc
loopne
ds
arpl
sbb
lods
jl
notl
xor
cwtl
dec
mov
imul
mov
nop
mov
jmp
dec
or
sub
mov
loopne
dec
cwtl
dec
lock
stos
or
inc
cmp
pusha
pop
xor
push
cs
jmp
les
pop
pop
push
push
mov
sbb
adcb
fldcw
lds
pushf
addr16
addb
cmpb
xchg
sbb
es
stos
popa
sbb
filds
jp
cmp
push
cmp
aad
jge
push
aam
mov
add
xor
sub
sbb
mov
lret
rorb
jle
fsts
and
pop
sti
push
jecxz
pop
jno
shll
rorb
xchg
aas
movsl
jno
adc
iret
aaa
test
add
mov
cli
push
jne
call
mov
jae
mov
mov
dec
fldlg2
pusha
pop
mov
push
cmpsb
out
jne
lret
jge
and
mov
pop
xor
enter
adc
and
int
and
pusha
mov
pop
imul
push
ret
sbb
xlat
lret
adc
sub
sti
mov
cmp
pop
lret
add
mov
xor
push
fwait
push
or
add
mov
xorb
nop
int
push
and
fdivrl
bswap
jne
movsl
mov
mov
pop
add
cmpl
xor
scas
inc
pop
push
sbb
cwtl
mov
cmp
xor
lahf
out
sub
xlat
sahf
xor
jnp
pusha
cwtl
dec
mov
add
push
dec
lds
loopne
xor
notl
in
inc
or
xchg
repnz
mov
sbb
xor
sub
add
imul
push
rorb
and
inc
bound
addb
adc
fnsave
xlat
int
cmp
jns
nop
pop
pop
jmp
dec
jg
xlat
adc
or
testl
add
das
sahf
shrb
push
movsl
add
cmc
cltd
mov
xchg
in
add
dec
stos
out
adc
aaa
sti
pop
aad
cmp
mov
int
jecxz
lds
sub
dec
cmc
dec
or
add
mov
in
mov
loope
xchg
sub
fisttps
jns
and
jmp
imul
sahf
movsl
add
push
jo
xlat
repnz
sub
data16
mov
fwait
and
imul
clc
dec
ja
movsl
push
pop
outsb
sbb
jle
scas
push
outsb
xor
sbb
lret
mov
jp
push
insl
dec
or
dec
jl
stos
xchg
iret
in
mov
xchg
movsl
lahf
adc
cmp
rol
out
or
ss
ljmp
xor
lcall
lahf
mov
fbstp
inc
pop
aas
dec
sbb
push
sti
add
fstl
add
mov
fst
sbb
xchg
or
or
and
adc
mov
loopne
pusha
mov
mov
cmp
mov
int3
int
in
aad
mov
jmp
add
lods
and
data16
out
adc
add
cmp
out
lods
sub
xchg
lods
imul
aaa
xor
inc
push
js
sysexit
inc
out
loop
stos
xor
aas
push
lea
jb
inc
dec
xchg
jge
mov
arpl
in
push
sarb
test
adc
push
jb
sub
mov
inc
sub
xchg
lods
xchg
xchg
jge
pusha
aam
aam
xchg
sbb
inc
mov
push
pop
push
mov
stos
rcrb
mov
pushf
cmp
jle
inc
push
dec
push
in
test
scas
xchg
jo
stc
pop
ret
or
push
insb
adc
ss
xor
pusha
decb
aaa
xchg
mov
sub
mov
gs
hlt
stc
cld
sbb
pop
adc
adc
test
adc
gs
mov
inc
pop
mov
aas
cmc
insl
jns
fwait
std
inc
jle
jmp
in
pop
leave
cmpsl
shrb
jo
cwtl
mov
lea
cmpl
es
cs
add
sbb
mov
adc
jns
daa
ss
cmp
les
out
rorl
lcall
mov
shll
cli
pop
jl
jecxz
pop
push
mov
es
jo
icebp
loopne
xor
aaa
xlat
dec
outsb
imul
mov
cmp
test
or
inc
jae
xchg
adc
xor
xor
cli
sub
aam
outsl
les
mov
add
pop
out
cwtl
cmp
adc
lahf
loop
mov
xchg
cmp
sbb
push
mov
mov
adc
cltd
and
adc
push
add
sub
or
pop
add
pop
lods
movsb
mov
mov
add
push
jle
jmp
xlat
lds
rolb
push
inc
adc
pop
popf
lahf
dec
cmp
xchg
jo
cld
adc
add
ds
lret
push
hlt
dec
call
adc
addr16
jg
pop
inc
aaa
mov
mov
sti
cmp
fwait
jb
cmp
adc
call
jmp
xor
push
sbb
hlt
clc
ds
les
shll
push
dec
addr16
in
cli
adc
es
roll
popf
push
adc
push
fstpt
js
sbb
shrb
xchg
xorb
pop
mov
xchg
fildll
push
sub
fcmovb
sbb
ret
jmp
pop
out
cwtl
push
dec
xchg
rol
loopne
fldt
jecxz
lcall
push
hlt
shr
rcrl
add
xchg
mov
xor
gs
mov
or
mov
in
fadds
stos
mov
aaa
lahf
xor
in
shl
imul
or
call
xchg
sub
lods
xlat
push
pop
xor
sbbl
aaa
out
std
scas
rorl
js
sbb
fwait
jmp
cmp
or
fdiv
sti
xchg
lret
cld
pushf
aaa
xor
arpl
out
jmp
enter
pushl
mov
loop
nop
mov
lcall
mov
fwait
addl
jmp
popf
cmc
sahf
mov
fdivp
xor
dec
pop
cli
ror
jl
dec
jno
mov
pop
addr16
jae
pop
adc
fisubl
lods
xchg
ret
jae
aaa
jle
mov
xchg
sbb
push
jmp
ret
out
rcrb
dec
lods
mov
idivl
aad
adc
add
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
add
or
adc
mov
jle
inc
nop
mov
out
cld
sub
lods
adc
std
subb
popf
mov
jecxz
push
pop
pushf
jb
stos
sahf
push
jo
dec
sub
xchg
or
pop
fldt
add
hlt
jnp
ret
jle
pop
adc
les
add
mov
das
stos
sbb
push
dec
nop
push
test
outsb
pushl
sti
out
xchg
fucomip
pop
leave
lods
sub
ja
fld
or
int
iret
adc
xchg
cmp
push
ret
sarl
or
cmpsl
push
cli
dec
bound
js
fs
fisubl
bound
jg
in
and
icebp
pushl
cmp
ss
repz
pushf
sbb
std
push
inc
fists
pop
pusha
jl
incl
shl
push
push
lret
dec
xchg
push
mov
into
fs
fisubrl
inc
mov
or
subb
cmp
in
loope
jnp
movsb
shl
sbb
xchg
or
mov
fsubs
add
popa
add
mov
add
iret
push
xchg
or
mov
mulb
jo
or
pop
pop
mov
int
xorl
pop
mov
push
cwtl
arpl
fdivrs
dec
or
inc
fcomps
imul
jbe
adc
xchg
dec
push
adc
cmc
std
pop
push
and
gs
cmp
cmp
orl
into
ret
inc
sbb
and
iret
add
test
fists
leave
mov
cmpsl
inc
cwtl
das
mov
mov
jg
or
sbb
fstpl
ret
test
and
shlb
sbb
hlt
push
cmp
add
jmp
and
std
fistl
clc
insb
lret
xor
mov
cmp
and
xchg
add
fstl
movl
out
jae
pop
inc
adc
fisttpl
faddl
aas
in
cs
inc
mov
daa
jo
or
in
insl
cs
es
jp
fs
add
aad
mov
xor
loop
and
push
lcall
arpl
push
push
movsb
and
insb
stc
mov
sub
dec
adc
pusha
ret
fnstenv
jno
sub
mov
sub
ja
mov
out
push
xchg
ja
mulb
in
sub
sub
mov
cmp
fadd
mov
mov
lahf
push
pushl
add
xor
xor
cmp
xchg
addb
push
imul
mov
and
pop
in
dec
insl
sub
adc
xchg
jmp
mov
aam
test
dec
sub
addr16
clc
add
mov
fwait
scas
and
loope
inc
inc
scas
pop
inc
loope
aaa
shrl
aas
inc
sarl
fcmovu
scas
xchg
jae
mov
call
das
loopne
hlt
cmc
out
imul
cmp
lods
outsl
ficompl
and
mov
call
cmp
mov
mov
mov
sbb
jmp
pop
mov
sbb
fwait
inc
fsubrs
mov
scas
insb
lahf
mov
mov
out
push
or
sti
repnz
mov
into
lcall
lcall
pop
mov
les
mov
dec
inc
inc
int3
je
pop
and
jne
pop
cli
gs
out
jl
ljmp
xchg
mov
imul
mov
aas
jmp
int3
jp
lods
dec
decl
push
mulb
out
ret
pop
pop
cwtl
arpl
xor
mov
mov
xor
int3
imul
ja,pn
int3
mov
cmpsb
mov
into
cmc
mov
and
lods
mov
xlat
fdivrl
lds
das
or
mov
add
sbb
lods
xchg
dec
es
sahf
inc
cltd
xchg
pop
sbb
inc
cmpsb
fcomps
repz
das
lret
cmp
in
loopne
and
jp
sub
mov
mov
jmp
iret
adc
and
adc
pop
mov
out
xchg
pop
fisttps
add
pop
out
jbe
pop
popl
mov
xchg
cmp
clc
mov
pop
popf
xchg
add
pop
andl
add
and
ds
insl
or
mov
jp
jmp
dec
mov
dec
repz
adc
push
hlt
cld
jnp
notl
jp
mov
bound
nop
push
adc
mov
aaa
jmp
mov
sub
push
fsubrs
in
ret
std
pop
aaa
std
and
add
xchg
sub
xor
hlt
adc
push
int3
and
popf
mov
sar
mov
push
xor
cmc
sbb
pop
push
ja
daa
xor
into
mov
je
push
inc
repnz
jae
iret
sub
jnp
mov
jle
cmpsl
repnz
and
mov
mov
ja
xlat
out
je
sti
cmpsb
dec
cmpsl
fstps
js
std
xchg
loopne
cld
and
mov
aaa
xchg
les
into
mov
ss
or
pop
movsb
fmulp
popa
push
mov
scas
mov
in
lret
inc
cmp
xor
adc
sub
push
add
push
aas
test
mov
stos
icebp
js
ret
jl
daa
push
xchg
xchg
out
das
idivl
xchg
cmp
cs
mov
fisubrl
push
dec
mov
xorl
push
mov
insl
add
inc
mov
mov
xchg
push
mov
xchg
jmp
fisttpll
in
mov
cmp
sub
shr
bnd
sbb
xor
ret
aas
aaa
das
add
aaa
cmp
fsubl
cmpsb
hlt
nop
push
jnp
mov
pop
fiadds
mov
mov
scas
stos
cli
xchg
sahf
sub
ljmp
or
fsub
outsb
mov
ficoml
mov
xor
addr16
mov
dec
scas
xlat
in
add
dec
test
gs
loopne
scas
aam
adc
and
jmp
ficompl
pop
call
daa
sbb
js
sub
and
pop
or
jne
sbb
std
cli
inc
or
or
out
add
shll
test
shrb
or
gs
roll
jg
sbb
sbb
loop
imul
xchg
nop
jo
loope
shrl
jl
jae
mov
cmc
pop
and
gs
int
jo
jne
int3
call
cld
sbb
and
mov
fbstp
push
push
cmc
jno
testb
adc
pop
lahf
cs
cli
adc
out
in
xchg
inc
adc
fstpl
leave
dec
test
test
push
sbb
aaa
pop
push
pop
jp
sub
shll
mov
xchg
rcl
outsl
adc
ret
repnz
daa
stos
sarb
mov
bound
ds
sub
sub
xchg
mov
loope
fdivr
arpl
mov
xchg
scas
repnz
xor
mov
mov
decb
jmp
cmp
lock
mov
nop
pop
or
aad
sub
iret
sub
fnstcw
in
bound
in
in
mov
add
push
or
dec
icebp
fcmovnu
iret
es
or
mov
movb
stc
loop
lret
add
mov
lahf
xchg
sub
ss
icebp
dec
mov
js
dec
test
push
xor
jns
mov
movb
mov
das
mov
and
jecxz
inc
mov
sbb
mov
leave
cmp
ss
add
jl
insb
mov
les
mov
into
icebp
in
mov
test
fnstenv
pop
outsb
mov
xor
cs
xor
call
or
rcr
sub
dec
push
out
test
jno
adc
add
rorb
loope
enter
into
pop
mov
jmp
jg
mov
cs
cs
stos
push
int3
mov
mov
mov
cmpsb
jp
iret
mov
test
pop
fimull
fiadds
pop
jne
jno
arpl
aad
imul
push
jnp
xchg
or
cld
ljmp
aaa
adc
aas
jb
pop
jl
add
loope
cmp
pop
pop
add
mov
lds
out
outsb
dec
inc
xor
sub
sbb
lret
cmp
dec
ret
pop
mov
xor
sub
int
push
mov
push
mov
push
or
icebp
jecxz
dec
stc
mov
into
imul
lret
ds
frstor
or
jbe
xor
xchg
rcll
cmp
xchg
xor
mov
lds
xchg
sarl
xchg
into
movsb
jo
inc
cltd
cmp
pusha
imul
xor
clc
ret
and
lret
jno
movsb
addr16
push
imul
jnp
pop
add
pop
pop
loopne
mov
inc
inc
inc
sahf
xorl
and
ss
sbb
aaa
sbb
add
cmp
dec
test
shrb
xor
dec
out
in
xchg
out
fildl
adc
outsb
arpl
inc
jno
hlt
xor
imulb
push
mov
push
pop
test
and
ret
cmp
dec
and
mov
mov
es
and
cwtl
rorb
jmp
js
cmp
mov
lds
and
test
pop
add
shll
sbb
scas
mov
mov
repnz
jg
sbb
cmp
cmp
out
sub
xor
fs
inc
jne
or
ds
xor
int
rcrl
jnp
je
cltd
jne
sbb
cwtl
orb
sarl
mov
outsl
nop
jle
insb
lea
pop
dec
fcmovb
cwtl
mov
and
inc
mov
mov
repz
mov
daa
insb
cmp
mov
adc
push
stos
test
push
jge
fadd
and
push
cwtl
mov
pop
cltd
jnp
dec
and
pop
int
movsb
mov
inc
mov
adc
int
fsubr
ret
repz
inc
pop
rorb
adc
into
jg
and
sub
lret
in
fldcw
jecxz
imul
enter
add
mov
cmp
lret
pop
aaa
inc
pop
lret
inc
xor
xorl
scas
arpl
into
ret
xor
cmp
mov
sub
fisubl
pop
stos
jle
inc
xchg
aam
push
ljmp
pop
and
jb
cmp
int3
pop
daa
push
xchg
repnz
arpl
in
aaa
pop
pop
mov
stc
add
movb
idiv
loopne
leave
push
mov
aad
out
or
push
push
sbb
push
pop
push
imul
aam
lock
fs
ljmp
dec
rcll
cmp
daa
push
lret
pop
fimuls
adc
sbb
mov
es
xchg
les
mov
mov
push
out
mov
mov
adc
mov
not
mov
mov
add
fwait
or
jbe
sbb
lods
cmp
in
adc
hlt
pusha
sbb
xor
aam
cmp
mov
sbb
ret
adc
jne
push
sbb
fadds
inc
xchg
and
rol
subb
sahf
pop
dec
aam
or
insb
adc
mov
xchg
xchg
or
cmp
insl
jbe
imul
pop
mov
shll
sarb
ja
mov
ret
hlt
arpl
adc
dec
ss
xchg
je
cld
sti
mov
inc
icebp
in
test
pop
pop
cmpsl
daa
push
xor
add
cwtl
mul
add
fisttps
les
inc
add
insl
cmp
loope
inc
jne
dec
push
xchg
jl,pt
das
inc
gs
lds
mov
or
xchg
ss
sub
or
xlat
in
daa
fnstsw
inc
mov
push
in
inc
mov
and
imul
call
and
test
ljmp
in
sub
lods
aam
jl
out
fs
je
rcrb
sbb
sbbb
push
inc
push
arpl
int3
fs
dec
dec
xor
fiaddl
xchg
mov
inc
jmp
inc
adc
aaa
lret
mov
and
and
mov
dec
repnz
jg
fists
ds
or
adc
jne
jle
aas
imul
les
repz
lea
jne
mov
xchg
dec
movl
rolb
ret
mov
movsl
add
push
push
das
and
arpl
mov
loope
lcall
pop
pop
jge
enter
ljmp
lds
adc
pushf
jg
jae
vmread
daa
xchg
dec
lds
leave
lock
ljmp
pusha
hlt
pop
lods
popf
jns
leave
xorl
into
leave
fwait
push
mov
insb
cmc
cmp
xchg
stos
lret
outsl
out
sbb
out
rclb
sbb
pop
popa
cmpsl
in
out
icebp
or
in
ja
jo
or
pop
push
call
inc
rol
jmp
xor
push
mov
test
mov
je
lock
mov
push
neg
nop
sub
mov
mov
xorps
mov
push
jbe
jmp
lea
cmp
sbb
sbb
stos
or
jno
addr16
inc
les
push
sti
pop
cmp
jle
jae
push
cmp
fucomi
jl
lods
jno
sub
push
arpl
mov
sub
fisubrs
pushf
mov
fmuls
bound
fisubs
icebp
dec
shll
ja
movsb
call
js
rcl
pop
push
or
js
push
xchg
and
sub
jmp
push
mov
ficompl
popl
inc
mov
imul
sub
cltd
or
jo
mov
in
mov
pop
and
push
jo
sub
insl
sub
incb
lds
test
into
push
xchg
xor
pop
sbb
and
sbbl
mov
jne
push
aas
mov
or
nop
fsubs
adc
inc
push
pop
and
push
sub
mov
dec
xlat
lcall
pop
push
pop
and
jl
call
rcrl
lcall
mov
repnz
push
pop
add
jno
jg
jecxz
es
mov
addr16
out
repz
push
or
test
mov
inc
dec
test
xor
xchg
xor
dec
cmpsl
jnp
push
mov
gs
data16
gs
cmp
xor
cwtl
push
cmp
or
cli
movl
push
insb
add
fsubr
jmp
scas
xor
cmp
jle
jg
insl
push
aas
or
mov
cli
mov
jo
insl
mov
outsl
push
xlat
les
repz
xchg
lds
dec
jge
aad
mov
mov
fs
xchg
mov
aam
mov
and
mov
out
cmpb
es
jp,pn
sub
in
mov
xor
pop
jne
jo
xor
lret
adc
jle
out
xchg
xchg
sub
loope
mov
xchg
fcmovnb
sub
push
add
jae
xor
mov
jne
mov
dec
jmp
faddp
ret
jo
loope
test
cs
bound
inc
push
pop
test
cmp
sbb
mov
shlb
fwait
js
jbe
adc
std
shlb
in
dec
mov
jns
gs
lret
sub
dec
cmp
adc
loopne
adc
clc
mov
std
cltd
nop
outsb
icebp
lret
shlb
dec
popa
hlt
inc
sub
xor
pop
icebp
pop
rcrb
int
sbb
jnp
mov
inc
sbb
pushf
lds
das
inc
xor
cwtl
mov
dec
pushf
adcl
lcall
push
xchg
lods
imulb
in
jns
mov
mov
pushf
mov
js
fdivs
data16
test
mov
scas
inc
iret
cwtl
ret
les
pop
dec
jp
iret
inc
test
test
std
je
mov
inc
mov
test
cmp
cs
scas
push
mov
jbe
cmp
mov
mov
pop
fs
xchg
add
jge
lcall
xchg
loopne
xchg
cmp
stos
syscall
sti
cwtl
cmp
xlat
mov
mov
cld
push
pop
ret
dec
sub
ljmp
jmp
inc
sbb
mov
imul
or
cwtl
sbb
jge
push
sbb
repnz
push
es
fs
into
inc
add
pop
push
sbb
pmuludq
jecxz
arpl
and
and
adc
mov
cmpsb
adc
sbb
and
adc
mov
mov
movsl
scas
scas
sarl
adc
jge
and
push
pop
adc
xor
inc
cmpsl
adc
pop
cmp
mov
add
rcll
or
data16
pop
jo
pop
cmp
jmp
leave
xchg
lea
mov
out
fs
inc
test
jo
int3
mov
adc
test
es
sbb
hlt
jecxz
inc
ja
daa
mov
lods
loopne
fs
aas
jg
sbb
std
cltd
push
daa
inc
push
je
add
push
cmp
fsubrl
sbb
or
pop
fcmovbe
scas
pop
fcomps
fwait
push
stos
lock
mov
sub
jecxz
inc
test
rol
fs
xor
push
in
cwtl
or
mov
add
add
cwtl
sbb
stc
jecxz
or
pop
push
fdivp
mov
mov
jle
push
adc
adc
cmpxchg
lahf
das
fwait
inc
das
xlat
test
inc
rolb
in
aam
lods
filds
jae
add
loop
negb
sub
mov
data16
out
xor
loope
mov
lret
inc
mov
push
fidivs
cmp
inc
jne
es
std
mov
pop
dec
sub
hlt
or
sbb
sub
sbbl
jbe
fbstp
mov
push
std
dec
pop
lahf
dec
add
insl
sar
mov
dec
adc
ret
jne
mov
push
jle
sbb
xor
jle
jae
dec
dec
cmp
shll
stos
daa
js
std
insb
fnstcw
idivl
test
std
test
flds
cli
xchg
jecxz
pop
jge
orl
movntq
ss
adc
loop
adcl
clc
test
dec
test
imul
mov
lea
not
xchg
jp
jb
mov
dec
into
and
sub
cmpsb
out
fucom
pop
fists
adc
imul
jmp
xor
pusha
adc
pop
fcompl
cmp
imul
add
adc
cwtl
add
out
in
inc
dec
scas
xchg
jne
mov
sub
xchg
insb
mov
push
jae
push
mov
dec
add
leave
fnstcw
mov
sub
pop
in
rolb
jle
xchg
mov
mov
cmp
mov
lret
xchg
jp
or
cmp
jns
icebp
adc
push
sub
scas
lds
pop
push
insb
cmc
mov
cmp
roll
psadbw
pop
popf
vpmulhuw
iret
ror
or
repz
shlb
roll
cmp
cmp
sbb
push
shlb
scas
movsl
jo
xchg
ret
pop
mov
fimull
fidivl
pop
push
repnz
inc
mov
inc
in
and
lret
add
bound
scas
mov
jbe
xchg
movsb
sub
pop
maxps
add
xchg
out
out
test
jne
stos
sahf
js
xchg
ja
aam
mov
in
dec
cmp
cld
insl
jl
xor
inc
cli
negl
or
sub
lods
lret
sbb
sub
iret
mov
lds
fadds
sub
add
rorb
sbb
rcll
push
adc
in
inc
mov
repz
jp
mov
pop
repnz
push
mov
lahf
mov
mov
and
lret
fstl
xor
cmpsb
outsl
mov
or
aad
lret
out
and
in
and
popa
xchg
add
outsb
hlt
inc
fs
outsl
loope
adc
mov
rol
rcll
cwtl
and
popa
das
sub
pushl
inc
sahf
jmp
int
pcmpgtd
or
inc
test
cmp
inc
adc
mov
in
fs
in
cmpsl
std
adc
sub
mov
out
mov
repz
pop
sbb
mov
and
mov
jmp
mov
pop
arpl
sub
imul
out
addl
jne
push
dec
sbb
in
dec
mov
mov
call
movsl
xchg
push
pop
and
in
insb
dec
mov
popa
enter
arpl
sub
vpunpckhwd
push
ds
insb
adc
popf
stos
dec
mov
pop
mov
je
das
inc
pop
repnz
popa
jl
mov
adc
sub
add
fstpt
mov
lcall
aam
cwtl
lret
inc
add
pop
sub
or
xchg
jnp
lods
inc
repz
push
loop
pop
mov
jge
out
jmp
dec
or
pusha
and
pop
inc
mov
mov
mov
pusha
testb
mov
js
popa
loop
mov
lea
nop
cmpsb
mov
dec
leave
add
jb
pop
pop
push
out
inc
or
mov
aaa
and
sbbb
loopne
nop
aam
jb
dec
test
push
lret
les
in
subb
cmp
mov
sub
xor
and
icebp
mov
aam
jl
push
and
hlt
int3
or
cmc
lret
xacquire
or
mov
cmp
mov
ficoml
or
sbb
cmp
xor
lods
fyl2x
cmp
jns
xor
adc
rcll
mov
lcall
sahf
xor
hlt
dec
ret
adc
dec
aam
jno
mov
aad
out
sbb
mov
xchg
lea
inc
ss
mov
bound
fs
push
negl
jp
pop
push
stos
filds
out
movsb
dec
jo
into
pop
jae
add
arpl
insb
cmp
shl
lret
dec
cmpsb
push
xchg
push
xchg
cmpsl
lods
popa
negl
adc
cld
jns
mov
cwtl
bswap
repnz
sbb
mov
stos
das
insb
sub
mov
scas
add
inc
mov
push
jge
fnstenv
insl
xor
popf
pop
cltd
loopne
outsl
cmp
xlat
pop
lods
leave
rorl
jbe
pop
and
jnp
add
push
or
imul
cmpl
xor
lret
and
push
and
mov
mov
pop
adc
jns
jmp
add
enter
ds
push
dec
and
ficoml
sub
or
mov
pop
enter
mov
subb
shlb
mov
mov
dec
mov
dec
jbe
call
xchg
sub
daa
in
dec
popf
mov
in
inc
sbbl
jnp
sub
dec
adc
add
or
push
aas
dec
pusha
jo
inc
cmp
cs
sbb
jns
repz
ret
mov
cmp
jge
cmc
fwait
push
out
mov
ret
sahf
sbb
repnz
cmpb
movsl
pop
push
test
hlt
cmpsl
or
testl
xor
mov
push
push
mov
pop
scas
mov
mov
leave
adc
pusha
sbb
ficomps
out
mov
mov
stos
cmpl
mov
ljmp
push
xchg
into
je
out
xchg
mov
cmp
push
add
in
int3
ss
call
xchg
lods
jmp
or
ror
bound
repnz
lock
push
push
mov
inc
xchg
imul
add
fwait
mov
and
js
into
xchg
adc
adc
ljmp
inc
xor
je
imul
jbe
dec
sub
push
xchg
cmpsb
scas
dec
test
cltd
cmp
xlat
imul
test
sub
inc
call
in
mov
testl
imul
cltd
adc
and
pop
mov
adc
add
lock
jg
nop
dec
mov
imul
sarb
inc
pop
insb
lret
mov
sub
cwtl
lcall
bswap
popf
call
push
loopne
adc
push
lods
jle
jp
or
mov
repz
add
xchg
roll
jl
pop
pushf
mov
push
mov
inc
adc
adc
sub
cli
popf
cmc
dec
dec
and
pop
jae
push
mov
orl
pop
fnsetpm(287
push
and
ret
dec
fcom
mov
imul
loop
addl
adc
leave
jb
xlat
jecxz
call
pop
lods
out
xadd
ficomps
jo
jbe
add
shlb
ret
ja
cmpsl
in
les
jae
stos
imul
adc
add
and
lahf
fdivrl
pusha
dec
push
and
xor
cmpsl
pop
repz
mov
js
jb
mov
push
add
xor
fstpl
inc
cmc
and
je
loope
pushf
mov
add
mov
dec
stos
mov
and
arpl
add
lea
push
xchg
adc
lds
jno
movsb
rcrb
dec
jnp
pop
dec
pop
push
sub
out
cmp
mov
or
jp
mov
in
pop
mov
jg
add
push
pop
lea
iret
adc
dec
pop
lret
imul
inc
mov
dec
mov
adc
or
sbb
xchg
lret
fwait
mov
mov
mov
sbb
cmp
and
cli
mov
xchg
push
adc
cwtl
stc
outsb
mov
xor
xchg
cmpl
mov
cs
insb
out
adc
lock
mov
jle
sub
clc
inc
out
and
mov
mov
jae
or
cli
xor
test
shlb
mov
push
and
icebp
cmp
fsts
pop
dec
mov
push
sbb
xchg
rcrb
fdiv
jne
iret
insb
push
int3
aas
ss
cmpb
adc
mul
rcrl
mov
inc
out
add
sbb
xchg
dec
stos
int3
js
dec
arpl
in
inc
out
push
cmpsb
lcall
or
jnp
popa
or
lea
inc
int
popa
inc
imul
fistps
cmp
aad
cmp
in
pop
inc
pushf
add
push
pop
mov
sarb
mov
adc
out
jmp
dec
scas
and
fwait
cmp
pop
fcompl
sub
dec
mov
into
test
push
xor
add
mov
orl
push
mov
clc
sbb
stc
and
movsl
sub
push
fwait
les
imul
fmuls
fisubl
pusha
shlb
cwtl
adc
es
push
pop
pop
stos
lds
xchg
push
mov
out
adc
mov
out
gs
sbb
xorl
jmp
ret
outsl
cltd
sbb
xor
test
xlat
outsl
push
std
iret
lret
and
sub
jge
stos
lcall
js
outsl
rcll
jmp
imul
xor
mov
addr16
out
sbb
cmp
fnstenv
mov
push
lods
or
out
ficompl
cmp
outsb
sbb
fcomi
cwtl
stc
xchg
mov
lret
hlt
cmc
in
sbb
fisubl
pop
pushf
test
sub
cmpsb
cmp
xchg
xor
sub
test
xor
jle
add
fbld
add
and
sub
sub
jae,pt
leave
addr16
aam
fnstcw
scas
dec
jmp
pop
dec
add
int3
fnstenv
mov
out
sub
mov
js
subl
mov
dec
aas
sbb
xchg
scas
rcrl
mov
jnp
or
jl
pop
pop
or
jmp
dec
jle
or
idivl
test
mov
push
dec
dec
or
mov
fwait
je
jns
popf
mov
sbb
cmpsb
fnsave
cmp
pop
lods
jp
insb
xor
cwtl
cmp
xchg
int3
ss
sub
sub
repnz
jns
mov
xchg
std
mov
push
or
fs
lds
or
sub
fimuls
inc
adc
lcall
ret
pusha
and
add
ret
inc
cltd
push
jg
ret
movsb
and
inc
mov
cmp
xor
cmpl
cmpsb
fildll
std
fimull
addr16
stos
and
mov
nop
jb
sti
jecxz
sbb
jnp
pop
int
add
or
cmp
das
adc
push
aas
addr16
cwtl
dec
bound
test
outsl
popa
aad
addr16
xchg
add
dec
fcoml
pusha
ss
mov
popa
and
fdiv
or
sti
ret
or
js
adc
js
lret
frndint
and
cltd
ss
sub
mov
jno
call
lods
hlt
out
jae
fidivrl
sub
int
mov
out
mov
mov
pop
loop
es
xor
fisubrs
fsubr
mov
mov
ret
and
popa
out
xor
jo
arpl
pop
testl
xchg
outsl
mov
aam
jmp
jg
cmpb
mov
dec
iret
add
push
cwtl
adc
retw
cmp
int
xlat
loope
daa
and
jl
add
cwtl
negl
hlt
cltd
aas
push
jecxz
in
pop
lods
push
js
sbb
imul
testl
rclb
rol
xchg
add
test
sbb
daa
test
mov
btc
pushf
aas
dec
cmc
or
or
lret
jecxz
add
rorb
test
jl
xchg
sub
outsl
push
cmpsb
out
cmp
jp
mov
lea
xor
adc
dec
cmc
enter
mov
mov
pop
pop
jae
aam
es
pop
or
test
xchg
pop
and
insl
mov
scas
inc
sahf
sbb
mov
popa
xchg
lods
xchg
lock
insl
scas
out
insb
in
cltd
push
jne
inc
out
arpl
jb
push
push
cmp
call
addl
cli
add
popa
stos
adc
cltd
dec
rcll
dec
inc
mov
sbb
adc
sub
daa
popa
dec
lea
lds
andl
out
mov
popf
xchg
jne
jmp
ret
stc
sbb
cmpsb
sahf
adc
fdivl
inc
mov
fdivr
in
shl
out
mov
pop
jbe
pop
in
or
int
cmpsb
cmp
cmpsb
push
sub
sub
xchg
push
loope
insl
push
add
xchg
rorb
rorl
xchg
mov
dec
jae
xor
das
dec
hlt
xor
insb
sbb
push
mov
pushf
push
test
into
repnz
ss
sbb
mov
sbb
push
rorb
in
into
xchg
push
arpl
outsl
insb
push
push
js
cltd
fildl
sbb
fbstp
pop
pushf
roll
inc
loope
push
aas
push
mov
mov
mov
push
sbbb
dec
push
pop
out
push
inc
add
iret
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
mov
jnp
clc
pushf
jnp
push
xchg
xor
inc
fidivrs
mov
test
das
push
popf
fdiv
lret
sbb
leave
mov
nop
scas
and
popf
outsb
mov
mov
mov
es
adc
pusha
sub
ret
aam
popa
pusha
jmp
sub
cmp
out
adc
pusha
dec
and
or
lods
jmp
loope
lcall
sbbb
lret
mov
lock
sahf
fdivs
xchg
push
xchg
int
test
insl
cmp
cmpsl
add
shrb
sahf
enter
roll
cmp
call
js
mov
mov
daa
xor
xchg
addb
mov
dec
aad
std
aas
shrb
mov
cli
cmc
pop
xchg
adc
add
jae
inc
lods
dec
add
popf
jns
lret
negb
mov
sbb
iret
mov
mov
cs
push
scas
mov
lds
loop
jge
lods
sbb
es
cli
and
inc
int3
push
pusha
fidivrl
push
test
test
cmp
adc
sti
push
add
aas
data16
scas
dec
xor
jno
sbb
pushf
movsl
jecxz
aaa
out
ret
mov
mov
popf
movsb
mov
pushf
shll
mov
out
in
lock
push
aas
out
xor
call
push
jle
mov
movsb
pop
test
das
sub
xcrypt-ofb
cmpsl
scas
dec
inc
and
repz
insb
mov
fnstcw
mov
cwtl
shlb
cld
mov
imul
adc
jne
es
pop
mov
aam
repnz
jb
call
outsb
push
stos
sub
insl
and
pop
das
sub
push
enter
pop
scas
xlat
cmc
adcb
push
mov
mov
in
aaa
test
inc
test
mov
mov
ja
jne
inc
push
ljmp
or
push
insl
mov
cmp
add
ror
or
hlt
cmp
out
add
sub
fstpt
test
icebp
pop
xor
cmp
sahf
push
lret
cmp
jp
js
pusha
test
shll
push
or
push
bound
push
push
sub
xorb
imul
popf
cltd
jno
jge
dec
adc
jae
cltd
pop
into
in
stos
stos
mov
jns,pt
les
xor
mov
daa
push
aam
cmpsl
xor
add
stos
js
push
add
or
movsb
ljmp
iret
adc
out
sti
mov
and
insl
scas
xchg
jecxz
inc
pop
rcll
sub
daa
add
inc
add
pop
push
inc
sbb
sahf
or
inc
iret
adc
pop
or
loop
push
pop
or
dec
jge
mov
pop
pop
shrl
sub
jae
std
inc
xchg
sub
dec
jl
insl
enter
cmp
arpl
inc
xchg
clc
or
into
push
addl
mov
or
jmp
fadds
jb
test
aam
dec
in
icebp
mov
cmpsb
mov
and
mov
jmp
outsb
daa
aam
mov
sbb
xchg
push
push
and
pop
dec
lea
pop
inc
mov
mov
xchg
std
mov
xchg
dec
outsb
mov
jg
mov
pop
sbb
mov
lock
in
aam
in
scas
movsb
aas
rorl
and
jb
mov
jg
stc
mov
fdivrl
ret
out
popa
popf
dec
adc
inc
inc
out
or
dec
xchg
jne
or
adc
mov
jge
sub
xchg
arpl
arpl
bound
push
das
mov
jno
mov
pop
stos
aaa
push
mov
fbld
xor
pop
xor
ds
lds
into
cmpsb
insb
loope
rorb
addr16
xchg
sbb
lret
ja
jbe
add
arpl
and
sahf
nop
out
mov
sahf
mov
mov
jae
inc
ljmp
stc
gs
adc
outsl
decb
rcr
repnz
mov
fs
outsl
push
sbb
xor
cltd
hlt
mov
mov
icebp
pop
loope
ret
pop
addr16
add
cmp
push
adc
cli
xlat
dec
adc
push
rorl
outsl
incb
cmc
outsb
push
subb
mov
jb
xchg
dec
jge
push
pop
jno
call
andl
aad
daa
add
push
mov
adc
mov
test
cld
push
mov
cwtl
mov
sbbb
cmp
and
iret
cmpsb
insl
in
add
and
xlat
pop
cwtl
jg
jg
rcrb
test
inc
jae
insb
je
subb
sbbl
jmp
ljmp
rorl
sbb
or
cwtl
lea
addr16
sub
dec
stos
pop
loopne
dec
pushf
mov
adc
inc
test
adc
inc
mov
dec
sbb
fs
push
sti
fstpl
pop
dec
in
push
scas
and
fbld
sbb
push
popa
jle
sbb
loopne
mov
xor
mov
jbe
mov
dec
mov
sub
sti
push
lcall
inc
or
cmc
xor
push
or
fsubrl
or
xor
enterw
sub
fisttpll
ss
rorl
push
inc
sub
dec
jns
popa
insl
add
xchg
cmp
mov
xchg
stos
mov
sahf
xlat
dec
movsl
movsl
xor
pop
dec
add
repnz
fwait
and
lret
mov
cmp
or
out
sub
aaa
test
popf
in
and
or
xchg
sbbb
orb
push
les
ja
push
sar
int3
xchg
mov
cs
or
or
or
cmp
stos
push
or
and
rclb
add
mov
mov
jo
mov
push
cmpsb
sbb
inc
outsb
dec
inc
push
adc
ljmp
push
sub
fwait
nop
leave
les
popa
and
and
sub
jns
pop
cmpsb
mov
xchg
sub
nop
call
mov
fnstcw
cmpsb
fidivl
jg
and
push
push
mov
fldl
sbb
lret
mov
shr
ficoms
and
pop
jmp
ja
mov
insl
add
sbb
lods
seta
xchg
pushf
movsb
push
cmpsb
jbe
rolb
stc
shl
jb
cld
jmp
jnp
xlat
push
rorl
inc
mov
movsb
sbb
call
xor
cmpsb
pop
adc
outsl
mov
mov
es
xor
daa
mov
out
ds
shr
mov
mov
push
aaa
mov
mov
leave
and
pop
jg
sbb
repz
dec
scas
fwait
rclb
sti
mov
dec
test
cld
or
pushf
add
nop
scas
sub
lret
push
cmpsb
mov
pop
dec
adc
inc
dec
mov
jg
insb
dec
psadbw
jecxz
pop
add
pop
test
mov
mov
xor
inc
ret
in
lods
rcrb
mov
movsl
fcoms
outsb
es
int3
jle
ret
jns
jg
jl
cltd
mov
je
jg
enter
adc
inc
sbb
jmp
ds
and
mov
sbb
xor
fld
pop
cmp
add
ret
xor
xor
xchg
subl
in
add
pop
ret
dec
fxch
or
clc
sbb
and
push
sarb
daa
sub
test
nop
xor
adc
xchg
loope
out
cli
push
movb
cmp
push
mov
mov
imul
mov
adc
in
in
dec
insb
xlat
mov
pop
aam
add
loopne
jae
sub
cwtl
xor
fmuls
sub
ret
jecxz
add
lret
cmpsl
inc
call
mov
lcall
mov
fistpll
xorl
ja
sub
fimuls
loopne
out
lcall
ficomps
and
adc
inc
rdmsr
jecxz
mov
cs
pop
dec
out
xchg
fisttpll
aad
or
fbstp
mov
insb
xchg
setb
lods
mov
dec
dec
xor
ds
test
lret
ret
sub
shrb
leave
xrelease
push
xlat
sub
shlb
jne
outsb
lods
fld
cli
shrb
xchg
sbbl
cld
lea
daa
adcb
stos
fistl
adc
ret
aas
mov
adc
jo
sbb
push
push
cmp
add
or
movsb
in
outsl
int3
outsl
shrl
dec
mov
addr16
mov
cmpsl
fs
cmp
test
sarl
jns
out
jmp
repnz
repnz
mov
pop
pop
pop
push
out
decb
push
add
out
enter
mov
cwtl
add
ss
sub
sub
dec
sbb
stc
jge
push
xchg
jle
mov
jmp
popf
xchg
fsub
jmp
outsl
cltd
cwtl
fcmovnbe
test
mov
arpl
xchg
sub
daa
xorb
xchg
int3
xlat
jnp
pop
push
in
xchg
sub
icebp
outsb
cmp
xchg
aam
push
popa
pop
xlat
test
sahf
sbb
scas
jg
shlb
and
dec
ficompl
aad
mov
mov
mov
push
nop
aaa
xchg
mov
sarb
lods
icebp
mov
and
xor
mov
out
mov
mov
arpl
ss
add
dec
and
adc
dec
mov
cwtd
or
mov
filds
fldcw
repnz
pop
inc
cmp
fidivrs
jl
stos
jo
cmpsb
mov
addb
call
roll
shr
jge
sub
nop
and
jl
fisubrs
cmp
movsl
roll
mov
test
fldcw
mov
cmp
leave
jge
stos
lahf
or
fxch
xor
lock
inc
mov
dec
nop
cmp
in
pop
aas
lcall
push
mov
movq
jmp
lcall
mov
or
and
push
lret
inc
inc
out
out
fidivl
mov
mov
scas
in
mov
test
and
insb
mov
nop
out
sbb
inc
xchg
cwtl
mov
mov
sbb
negl
and
cltd
adc
test
cmp
mov
fwait
lds
out
cmc
mov
out
hlt
lods
push
int3
sti
pop
inc
push
into
mov
push
sbb
or
inc
popaw
dec
call
call
test
or
in
sarb
cltd
dec
and
out
mov
xor
sub
insb
push
pushf
pusha
xchg
xchg
cld
jp
andb
cwtl
das
push
icebp
fstl
mov
addb
sub
aas
mov
xor
ljmp
test
add
dec
cmp
movsb
push
fcoms
add
pop
and
mov
gs
add
jle
jno
lods
cmpsl
mov
jno
push
sub
xchg
push
movsb
int
mov
insl
shr
xchg
lds
pop
es
in
and
pushw
jns
pop
testb
lcall
stos
or
add
mov
xorb
rorb
cwtl
inc
sbb
inc
add
pushf
mov
lods
lods
push
stc
adc
mov
xchg
test
jmp
xor
cmpsl
imul
es
leave
mov
mov
nop
stos
push
xchg
mov
add
xchg
popf
add
imul
gs
sub
or
and
mov
sbb
scas
sbb
out
popf
pop
or
test
dec
pop
pop
lds
or
imul
push
push
jns
push
cmp
leave
push
es
push
sbb
enter
stos
repnz
in
mov
inc
add
mov
scas
cmp
pop
repnz
sub
pop
fsubrs
mov
nop
jle
ret
mov
daa
out
jbe
push
xchg
lea
scas
inc
jns
rcrl
dec
sub
in
sub
pop
nop
xor
sub
bound
aam
lret
je
popa
outsb
call
arpl
js
inc
mov
cmp
mov
mov
xor
test
mov
or
and
cwtl
mov
movsb
sub
mov
and
adc
in
add
mov
sub
add
dec
mov
lcall
xchg
mov
mov
xor
jge
mov
data16
push
pop
fmull
sahf
fimull
jae
int3
xor
test
hlt
mov
jecxz,pn
sbb
cmp
scas
sub
push
out
mov
cwtl
sbb
mov
repz
sarl
jl
and
cld
cltd
adc
fiadds
shl
jno
shlb
adc
dec
cmpsb
push
lea
and
rorl
mov
clc
xorl
cld
out
bound
adc
sbb
out
rclb
sbb
cmpsl
dec
jge
cmp
jo
les
data16
imul
push
out
mov
aad
addl
out
sub
pop
cwtl
cmp
into
test
xchg
dec
mov
xchg
outsl
adc
repnz
les
push
out
pop
jnp
lds
clc
mov
push
push
pop
lea
insb
js
stc
inc
fs
push
stos
out
fcmove
stc
jae
lods
fs
pushf
aaa
outsl
insl
sti
dec
cmpsl
iret
pmullw
add
or
in
or
cmp
inc
ja
xchg
and
imulb
jge
pop
outsb
xor
sarb
xchg
xchg
js
fisubs
cmpsb
repnz
and
jne
jecxz
std
jns
cmp
or
add
lods
out
jnp
lods
adc
sub
xchg
inc
push
out
adc
orl
insb
inc
cwtl
xchg
das
jbe
fbstp
stos
fwait
xchg
add
and
cmp
mov
sbb
mov
sub
lcall
or
mov
adcb
sub
repz
push
pop
andl
pop
cwtl
push
xchg
mov
xlat
xlat
or
sbb
mov
dec
lahf
and
pop
sub
add
dec
paddusb
mov
std
movsl
sub
xor
pop
test
sbb
add
stc
push
xor
je
jns
pop
scas
mov
adcl
fdivr
push
adc
imul
in
jns
gs
lea
adcb
push
aas
xchg
mov
xor
in
out
mov
dec
rcll
or
test
add
test
mov
daa
pop
out
clc
les
vpaddb
adc
outsl
loope
hlt
cs
mov
ss
adc
xchg
push
mov
inc
mov
scas
sub
shll
pop
inc
mov
jno
lea
xor
wbinvd
fmull
adc
arpl
jg
and
xor
dec
int
mov
inc
pop
adc
int
pop
cmc
jno
pop
jnp
mov
xchg
adc
push
outsb
rorl
add
jmp
cli
jle
jge
clc
mov
movsb
in
cs
jecxz
mov
xchg
cltd
outsb
and
push
hlt
mov
or
adc
std
imull
imul
daa
call
push
call
sahf
push
cmp
mov
dec
popa
fildl
mov
lea
cmp
andl
jbe
lahf
inc
in
insb
mov
mov
addr16
add
mov
jnp
pop
and
int
push
mov
sbb
je
push
std
jns
sub
mov
push
outsb
dec
insl
out
stos
iret
std
insb
mov
sti
fs
int
mov
sbb
into
mov
or
int
testb
jl
mov
lods
sbb
fwait
shll
lahf
add
or
or
sub
jnp
or
out
xchg
sahf
imul
push
jle
add
dec
adcl
popa
or
mov
iret
push
dec
std
cmpsb
les
pop
mov
dec
xor
push
lods
add
test
or
sub
das
or
xor
sub
sub
dec
fmull
and
push
scas
adc
push
cmp
repz
aas
mov
roll
int3
xchg
cmp
cmp
cs
lea
push
mov
fisubrl
xchg
inc
add
dec
lods
loopne
mov
pop
pop
xor
jmp
cwtl
call
adc
data16
xchg
mov
mov
fsubrp
cltd
sar
dec
pop
sub
mov
mov
lret
xlat
ljmp
loope
adc
and
fsubs
push
xchg
loope
pop
mov
add
sbb
mov
out
fsts
lahf
push
jne
dec
sub
jne
jecxz
insb
cltd
sbb
push
out
sbb
mov
jle
pop
mov
xchg
mov
insl
fwait
jns
push
mov
mov
nop
repnz
pop
movsb
lret
pop
stos
cmp
mov
inc
cmp
scas
xchg
pop
pushf
shrl
js
or
enter
scas
sub
stc
popa
or
insb
cmp
or
sbb
rcrb
nop
adc
cmpsl
call
repz
pop
cmp
or
lds
adc
mov
pop
adc
and
sub
jo
mov
and
cmp
fmulp
cmovns
and
stos
cmp
and
test
fwait
push
pop
lock
cmpsb
pop
adc
cmp
pop
shll
sti
and
dec
hlt
jno
out
lret
out
cmp
nop
test
ljmp
dec
fidivl
pop
fmuls
or
mov
add
test
pushf
data16
in
sub
stc
out
scas
xchg
adc
mov
mov
xchg
and
pusha
sub
lcall
xchg
jp
aam
mov
outsb
jl
int3
mov
dec
and
add
xor
sbb
dec
cli
stos
in
lds
push
jo
or
js
out
dec
gs
push
xchg
mov
imull
cli
or
mov
cmp
or
dec
js
and
aad
cmp
mov
pusha
mov
popf
jne
sbb
pop
aad
mov
fs
mov
mov
lea
add
cwtl
mov
mov
sub
mov
int
adc
lods
push
mov
xchg
clc
mov
add
js
lahf
mov
and
fidivrs
jae
cmpsl
sub
shll
ljmp
test
or
and
loop
cld
scas
cmp
in
cmp
clc
mov
call
inc
mov
sbb
mov
push
aaa
loop
int
pop
mov
jmp
aad
jne
fiaddl
push
test
out
pop
std
push
test
call
mov
arpl
xchg
aad
and
mov
insl
jmp
xor
push
in
adc
pop
aad
mov
sahf
push
shll
push
mov
ret
push
add
push
mov
icebp
jecxz
add
push
addr16
and
or
inc
xor
push
inc
out
cld
jno
push
loopne,pt
mov
insb
xor
lret
inc
and
mov
into
js
ja
pop
sbb
leave
add
mov
loop
sbb
xor
xor
push
inc
jne
sti
pop
jle
xchg
xchg
lock
repnz
push
into
xchg
xchg
lds
nop
pop
pop
xchg
cmp
insb
jge
add
mov
adc
pushf
jns
or
mov
cmp
sbbl
pushf
mov
in
jp
imul
pop
fistpl
jmp
ja
jbe
js
bound
mov
scas
pop
jae
mov
push
sub
push
nop
jmp
dec
loopne
movsl
push
outsl
test
gs
aas
mov
rorb
mov
mov
lret
shll
mov
ret
aaa
rcll
scas
xchg
xchg
aam
test
fistpll
inc
pushf
cmp
out
add
mov
or
xlat
fs
lock
jbe
out
fstpl
cmc
call
dec
shl
xchg
in
mov
mov
nop
rcr
stc
xchg
dec
or
jp
xor
sub
arpl
add
pushf
cld
test
xchg
es
and
cmp
pop
jb
fwait
insl
mov
inc
pusha
mov
pop
clc
ja
fs
dec
mov
push
xchg
lds
bsf
inc
fistl
pop
jle
dec
loop
and
insl
stos
push
jl
jb
pop
test
adcb
xchg
std
pop
push
pop
inc
addl
je
loope
outsb
mov
cmp
mov
jne
frstor
mov
jp
aas
adc
cltd
push
mov
adc
pop
xchg
pop
fistpll
ds
aad
in
mov
popa
push
int
leave
sbb
leave
cmp
dec
mov
mov
addr16
rcl
mov
movsl
iret
shrb
and
dec
out
sub
popf
push
out
imul
leave
mov
hlt
jo
addr16
add
xor
push
das
hlt
jle
push
jno
inc
loope
and
jae
loope
dec
aad
dec
cmp
jo
push
cmp
lret
or
lahf
cmp
int
fucom
dec
mov
fiaddl
inc
mov
ljmp
fidivrs
pop
adc
push
fwait
push
add
hlt
xor
lods
mov
cmp
loope
or
addr16
jmp
add
hlt
cmpsb
push
mov
pop
fucompp
test
jae
negl
lcall
mov
shlb
les
push
jmp
cltd
mov
mov
cltd
inc
and
lock
clc
or
outsb
das
das
adc
or
mov
int
cmp
and
je
outsl
fdivr
lret
lea
fidivrs
and
add
aas
out
lahf
test
mov
adc
cmp
pop
into
mov
xchg
jecxz
cmpsb
loop
aad
and
sahf
int
jg
push
sbb
xor
bound
jne
push
jg
pop
out
fldenv
aas
stc
and
and
push
ret
jg
push
movsb
push
pop
jo
sub
xor
sub
gs
push
enter
stc
out
mov
scas
cmpsl
xor
pop
sbb
sub
push
push
pop
sahf
mov
sub
test
add
scas
add
pop
adc
add
mov
imul
fcmovnbe
out
xchg
or
add
xor
lods
dec
xchg
stos
adc
push
push
mov
dec
push
jg
jo
insb
cmp
popf
out
lret
pop
mov
lret
push
sbb
pushf
test
and
mov
jg
push
or
ret
pop
pop
sub
xchg
dec
pop
dec
push
inc
call
or
xchg
jecxz
outsl
xchg
dec
movsl
mov
push
movsb
pushf
sbb
mov
ljmp
mov
fisttps
cltd
jle
adc
bound
cmp
sub
popa
and
inc
inc
mov
sahf
gs
xor
adc
xor
xchg
cs
pop
hlt
nop
imul
insl
mov
jbe
repnz
mov
push
cmpsl
clc
int3
mov
jno
imul
insl
out
int
sarb
arpl
cmc
push
and
jmp
mov
pusha
insl
ja
cmpl
jge
jmp
cs
aad
movsb
and
test
mov
lds
ja
into
push
sahf
shll
cltd
repz
les
lods
push
ja
mov
lret
lret
stos
mov
xchg
shll
sub
sahf
rcll
mov
and
push
outsl
pop
mov
xor
xchg
cmp
aam
clc
and
clc
jg
push
and
fadd
icebp
roll
dec
stos
pop
xchg
push
std
and
inc
aas
fwait
loopne
rorb
sub
cmp
sub
push
inc
dec
fsubrl
add
orb
and
adc
std
pushf
les
fst
out
insb
or
push
mov
xor
ss
mov
sbb
subl
xchg
es
stc
les
int
push
xchg
or
or
xchg
xor
es
inc
push
jnp
arpl
pop
push
jne
mov
xlat
cmp
mov
int3
add
pop
dec
bound
fwait
iret
cld
jp
lret
faddp
dec
popa
mov
jge
fwait
jo
sahf
add
mov
sahf
jmp
inc
pop
fidivrs
dec
roll
lahf
adc
clc
sub
mov
sti
lds
xor
xchg
xchg
test
add
mov
push
jmp
mov
nop
rcrb
adc
push
lahf
inc
outsb
pop
mov
inc
pop
pop
mov
enter
outsl
lret
mov
jmp
xor
cli
lds
fldcw
or
jbe
cs
out
lret
pusha
xorb
out
mov
int3
mov
mov
mov
outsl
test
pop
icebp
outsl
inc
pop
dec
xchg
fscale
mov
mov
dec
imull
xchg
movsb
xchg
add
pop
into
push
popa
daa
and
lahf
xchg
mov
shlb
ret
jle
xchg
cmp
mov
loopne
aam
inc
or
int
int
ds
sub
dec
or
nop
push
dec
cmp
pop
popf
inc
adc
es
adc
mov
ss
and
aaa
add
sbb
xchg
lds
jmp
repz
inc
xor
jnp
adc
cmp
mov
sti
push
std
adc
xor
pop
mov
and
inc
cmc
mov
jmp
insb
movsl
sahf
rolb
hlt
jmp
dec
dec
dec
fadds
imul
dec
pop
stc
sbb
out
push
les
mov
adc
in
rcll
cmpsl
loope
adc
dec
insb
shll
stos
popf
inc
or
adc
or
push
imul
xchg
dec
insb
les
pop
sbb
push
mov
and
mov
pop
fisubs
mov
daa
mov
outsl
mov
das
push
sbb
push
xor
into
imul
in
sub
ret
mov
push
inc
or
inc
lret
jg
orb
push
iret
fisttpll
shrl
sub
sbbb
xor
mov
bound
mov
ret
push
jle
push
out
and
dec
or
xor
sub
push
jle
shl
adc
pop
mov
cmp
pmulhuw
mov
mov
adc
test
push
jg
andl
call
pushf
cs
popa
jle
xchg
movsl
lret
aam
xchg
stc
imul
es
fwait
xchg
xlat
insl
mov
push
adc
jge
pusha
stos
xchg
sahf
pop
test
es
jb
inc
andl
ljmp
inc
pop
adc
xchg
add
xor
mov
add
xchg
push
mov
xor
pop
out
and
xchg
out
adc
and
jle
jno
or
in
xor
add
sti
mov
mov
jbe
mov
shrb
cmp
mov
xor
push
add
test
mov
xor
lret
aad
sbb
or
mov
ret
inc
push
xor
lahf
jmp
fucomp
repz
int
ja
mov
repz
lcall
adcl
mov
jg
lret
mov
push
arpl
icebp
test
cmpl
stos
dec
adc
cmc
and
shrl
or
adc
mov
xor
inc
pop
call
lods
mov
xor
bnd
pop
mov
xor
adcl
lret
adc
sbb
scas
jg
scas
fwait
xchg
ds
pushf
jo
hlt
sahf
aad
xor
inc
imul
sbb
add
sub
es
fs
les
jb
inc
es
xchg
sbb
repz
jg
insl
loope
jmp
sti
test
mov
icebp
or
jmp
stc
daa
mov
or
mov
pop
adc
dec
repnz
movl
sub
sub
out
inc
pop
mov
xchg
or
or
jp
mov
mov
jnp
sahf
gs
add
pop
lea
sbb
push
xor
leave
lret
leave
inc
cmp
xor
xor
inc
shlb
xchg
inc
sub
adc
popa
and
stos
decl
push
jne
mov
test
loope
xor
push
pop
add
and
mov
roll
fidivrl
inc
xchg
xchg
lods
jns
dec
nop
sub
cwtl
xchg
fidivl
sub
inc
push
mov
cmc
cmc
jns
jbe
or
mov
push
jnp
aam
ret
add
dec
iret
mov
push
addb
xor
sbbl
mov
repz
repnz
ret
xchg
dec
dec
pop
dec
xor
lea
pop
pop
jge
pop
adc
repnz
push
mov
xchg
xor
int3
inc
cmp
arpl
aaa
fidivrs
push
inc
push
aad
pop
test
cli
jge
cmc
sarb
and
insl
negb
dec
iret
xchg
je
in
cs
and
inc
pop
stos
in
sbb
mov
jp,pt
fiaddl
mov
mov
inc
repz
mov
popa
or
xchg
dec
sub
gs
addb
fnstcw
test
mov
inc
mov
dec
pop
les
int3
mov
into
cmp
and
enter
and
or
js
push
cmc
dec
insb
pop
sub
fsubs
aas
dec
and
outsb
std
fisubrs
or
ljmp
cmpsl
jo
inc
stos
inc
icebp
xchg
les
add
sbb
cwtl
das
out
xor
or
inc
push
adc
clc
dec
cmp
fsts
cli
xor
les
sbb
stos
cmp
push
mov
cmp
or
add
aas
xchg
in
movsb
inc
loop
inc
ljmp
scas
inc
decb
and
int3
ret
jae
pop
and
leave
lcall
xchg
mov
call
and
cmp
mov
lret
cmpb
int3
mov
in
rclb
jb
dec
push
mov
inc
add
and
jbe
and
jae
cmp
int3
cmp
lock
inc
mov
fisttpl
pop
jnp
lods
call
adc
loopne
adc
adc
loope
pop
add
jle
xor
daa
testl
lods
mov
cmc
arpl
dec
lock
aaa
push
jmp
fsts
dec
mov
lods
pop
repz
mov
in
btsl
mov
inc
int3
and
inc
pusha
fidivrl
inc
jne
cmp
or
js
int
call
arpl
mov
and
lcall
push
xchg
lock
fucomip
fildll
xchg
loop
jmp
or
cwtl
xchg
fsubr
dec
mov
iret
dec
mov
push
sbb
mov
mov
stc
call
jle
inc
cmp
and
in
test
gs
sbb
repz
cld
insl
jbe
stos
ret
mov
std
mov
jnp
sub
mov
xchg
xor
loopne
sub
data16
jle
pop
in
mov
popl
xor
andb
mov
hlt
cmp
push
adc
mov
or
lea
mov
xor
fidivrs
push
sub
cltd
mov
adc
mov
scas
iret
cli
add
dec
push
pushf
daa
jecxz
sbb
sbb
in
idiv
leave
jmp
pusha
ds
mov
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
cmp
ret
in
stos
fnstsw
adc
orl
cltd
dec
cmp
pop
cmp
pop
xor
aad
lret
ret
push
push
daa
loope
push
push
xchg
outsb
jl
call
xchg
cmp
cmp
mov
sub
les
push
sbb
dec
fwait
cmpsl
not
insl
adc
scas
mov
dec
sbb
ret
xchg
aas
jae
adc
mov
pusha
addr16
out
xor
or
outsl
mov
pusha
testl
popa
test
data16
mov
repnz
jnp
jp
mov
bound
pushf
sbb
hlt
inc
lea
je
ret
adcl
pop
dec
ja
xchg
pop
cld
or
push
jmp
sti
dec
aam
xchg
jne
adcl
push
or
mov
fwait
aam
cmp
ja
negb
push
shlb
cmp
jmp
pop
lods
jno
lods
icebp
adc
dec
push
push
and
insb
aaa
push
or
push
cli
jne
addr16
xchg
into
pop
inc
fnsave
addr16
and
cwtl
arpl
add
jp
iret
add
popa
fiaddl
sbb
mov
pop
push
mov
xchg
cltd
push
xor
jge
jns
mov
jbe,pn
insb
shr
mov
xchg
mov
aaa
sub
adc
sbb
icebp
adc
mov
aad
pop
pushf
sub
sti
mov
and
stos
std
xchg
negl
jmp
push
xor
rcll
imul
lods
rcl
add
pushl
mov
cmp
aad
nop
sub
lods
or
rorb
int3
movsb
jge
addr16
mov
dec
add
ja
roll
add
cltd
int
mov
xchg
dec
push
jo
add
out
cld
xchg
cmp
rcrb
loope
mov
adc
pop
dec
js
stc
imul
jg
cmp
jbe
inc
jge
sbb
cli
push
mov
jle
jns
sub
in
ret
or
pop
adc
dec
das
pop
push
scas
lret
jecxz
jno
xlat
inc
xchg
lock
jae
or
ds
mov
cli
mov
push
and
shl
out
cs
sbb
scas
outsl
jne
imul
push
push
adc
xchg
test
push
cli
imul
add
sti
jbe
mov
cwtl
jecxz
xorl
fildll
or
scas
dec
push
std
aaa
mov
jne
sbb
cmpsb
jae
mov
enter
rcrl
inc
popa
shrb
push
fwait
mov
test
push
pop
in
mov
in
das
pop
cmpsb
inc
jp
fidivs
mov
stos
mov
mov
adc
add
js
xor
insb
xchg
jp
mov
stos
dec
jl
aad
mov
fidivrs
pop
xchg
adc
xlat
cmp
inc
jo
fwait
jge
xlat
lods
sub
sub
mov
add
xlat
aaa
testl
xchg
xchg
dec
in
dec
sarl
jmp
scas
out
cmp
mov
ret
loop
xor
movl
outsb
es
ds
mov
addl
mov
and
add
lret
rorl
sub
sahf
je
cmpsl
sti
das
inc
mov
adc
sub
test
addb
xchg
mov
daa
push
mov
cli
loop
xchg
dec
jno
subb
pop
rcrl
mov
xlat
and
fidivl
lock
popf
rorb
xchg
lret
arpl
popf
les
xchg
js
bound
fldcw
jp
pop
or
lahf
jecxz
cmp
adc
cmp
xchg
xor
xlat
and
cs
push
sbb
in
mov
jmp
lock
stos
dec
mov
cltd
push
hlt
ds
mov
mov
jl
shr
mov
lods
pop
inc
inc
loop
and
mov
mov
jbe
mov
out
pop
dec
jp
into
in
push
cs
cwtl
mov
xorb
cmp
mov
loop
pop
jle
cmpsl
test
sub
and
in
xor
mov
fstps
xor
in
inc
mov
xlat
js
popa
stos
dec
jl
inc
push
jnp
out
adc
js
mov
adc
push
xchg
stc
addl
cs
lret
loopne
add
jnp
insl
xchg
and
outsl
ss
dec
out
mov
cld
lahf
adc
inc
sub
mov
test
out
leave
in
shl
mov
rcrl
scas
xor
ret
repnz
xor
lret
add
sub
cmp
arpl
test
xchg
movsl
int3
dec
in
cs
cmp
lahf
or
sub
pop
jno
adc
pop
test
jge
lret
cli
cmp
jo
clc
or
ficoms
stc
aad
lea
loope
sahf
cltd
add
lods
cmp
mov
sti
fdiv
cwtl
loopne
test
popf
mov
int
cmpb
stc
or
mov
out
test
adc
pop
adc
push
fldenv
jno
inc
dec
xchg
fwait
ja
cwtl
mov
cli
loopne
std
clc
mov
inc
mov
jle
mov
or
mov
and
shrb
data16
out
and
jecxz
push
sti
icebp
cwtl
out
push
lock
out
test
lahf
mov
addb
clc
imul
shl
or
inc
mov
into
mov
stos
sbb
xorps
ret
aas
dec
xchg
mov
inc
xchg
es
or
cwtl
cmp
popf
push
shll
sub
cmp
aam
cmpsb
sbb
mov
gs
mov
subb
xchg
mov
lcall
and
xchg
lcall
mov
mov
push
xchg
test
outsl
cmp
push
repnz
scas
aas
add
addr16
xchg
and
pop
push
jno
movsb
pop
jg
jle
cmp
shrl
mov
rcl
test
out
cld
les
xor
aad
add
push
add
scas
int3
fldcw
or
stc
mov
stc
int3
pop
or
mov
xorl
js
in
inc
mov
pop
sub
dec
imul
fldl
xchg
ds
repnz
add
dec
sbb
mov
cwtl
xchg
ret
pop
dec
stos
stc
jns
xor
and
mov
repz
mov
xchg
gs
cmc
push
xor
cs
cmp
test
adc
fs
in
movsl
or
cmp
cmp
dec
das
jmp
ret
pop
sbb
popa
cmp
mov
push
decl
cld
xor
fcoms
leave
sbb
adc
icebp
xchg
push
dec
xor
rcrb
mov
sub
inc
or
xchg
rcll
stc
cltd
fst
cs
fmulp
jae
mov
fdivl
cmpsb
jb
iret
pop
or
out
xor
xchg
subl
loop
mov
mov
insl
outsb
aam
xchg
dec
aaa
xchg
sbbb
jno
dec
jmp
pop
cld
in
mov
stos
mov
leave
aad
pop
stos
jmp
lock
xchg
or
loope
in
js
cli
out
ljmp
add
lea
fwait
sbb
stos
pop
popa
es
cmp
jge
lods
pop
mov
sbb
cltd
push
jmp
ficoms
in
test
inc
fdivs
pop
or
rcrb
fistpll
cli
sub
movsl
xchg
push
jecxz
add
pop
clc
cmp
add
inc
scas
or
out
add
mov
aam
sbb
lret
notl
mov
in
cmc
loope
leave
ret
hlt
cmp
shl
out
adc
nop
lret
popa
insl
sub
push
ja
repnz
bound
dec
jmp
push
repnz
ss
mov
lock
push
das
ret
fdivs
es
mov
inc
inc
pop
jle
xlat
stos
xor
popf
pop
adcb
adc
ljmp
add
and
mov
mov
sub
mov
cmp
push
mov
mov
mov
test
fbld
mov
pop
jmp
pop
jno
or
push
xchg
push
movb
lods
push
std
addl
mov
or
inc
ss
mov
fcoms
imul
lock
jbe
jg
push
fs
inc
dec
mov
mov
inc
xchg
pop
pushf
stos
and
adc
jg
movsl
test
cmp
fiadds
pop
scas
in
iret
jno,pn
aad
bound
mov
dec
cmpsl
sbb
out
sti
cmpsl
imul
in
inc
movsl
in
sti
sub
push
xchg
imul
push
mov
scas
ret
push
sti
pop
aam
cmpsb
bound
xchg
sbb
in
inc
cmpsb
push
je
cli
pop
scas
iret
pop
dec
cmp
lds
mov
xchg
sub
mov
push
loopne
sbb
pop
jp
insl
daa
adc
cmp
jo
lcall
push
stos
popf
shrl
pop
cli
mov
pop
and
test
jno
call
in
sahf
xor
cli
add
imul
xchg
in
mov
arpl
arpl
xchg
std
cli
dec
pop
mov
sti
pop
and
mov
loop
push
notb
sbb
cmpl
lea
dec
cmp
add
jecxz
mov
fwait
loope
clc
add
cmp
shll
fndisi(8087
in
scas
dec
xor
mov
sbb
mov
pop
psubd
sub
mov
mov
or
pushf
jo
pop
pop
mov
ret
fisubrs
adc
pushf
lret
push
mov
sub
inc
push
ds
dec
jbe
popa
xorl
mov
cmpsl
int
jmp
std
pop
jmp
fcomi
orl
pop
xor
cmp
and
xchg
push
in
mov
inc
xchg
jle
cmc
xchg
insl
fcomps
add
les
addl
rolb
fstps
repnz
xchg
imul
lret
cmp
inc
push
pop
in
shll
mov
cltd
sarb
test
in
mov
xlat
cld
sbb
in
enter
dec
mov
jnp
out
jae
ljmp
clc
or
rcrl
cmp
pop
mov
mov
add
dec
mov
add
push
or
sbb
jae
sqrtps
decb
dec
pop
xor
or
mov
sahf
das
mov
mov
jmp
cmc
push
push
mov
lods
or
mul
jl
sub
xchg
mov
iret
dec
out
adc
hlt
xor
xor
jle
and
mov
in
popa
cmp
imul
jle
cmp
mov
or
cmp
pop
ljmp
dec
fsubp
adc
cmp
jmp
out
push
push
xchg
aad
cli
jbe
adc
stc
and
adc
sbb
pushf
jae
aas
inc
inc
sbb
mov
cwtl
dec
les
sbb
in
lods
sbbl
movsb
mov
std
test
dec
inc
adc
jg
mov
sbb
in
and
sti
call
and
loop
std
add
jle
andb
and
add
enter
and
mov
jb
xchg
lock
das
jp
xchg
push
fldl
mov
mov
mov
dec
nop
arpl
ds
fwait
out
cld
call
lahf
jmp
loope
mov
xor
jns
sub
mov
add
fmuls
xchg
xor
outsb
les
rcpps
sub
cmp
test
cmpsl
mov
pop
fcmove
dec
popa
push
adc
stos
pop
mov
popa
test
cmpsl
dec
out
std
cld
pusha
push
push
xor
pop
add
ret
ljmp
cmp
add
ret
mov
fwait
and
xchg
push
movsl
cwtl
lds
xchg
rorl
in
add
mov
xchg
and
shlb
jmp
clc
rcll
cmp
out
loopne
or
fcoms
mov
xor
inc
and
sbb
push
test
loopne
mov
das
push
lods
lods
xchg
inc
pushf
jecxz
in
mov
or
lock
sbb
mov
dec
pop
xchg
xor
insb
roll
cltd
jne
pop
mov
mov
lods
aam
loop
xchg
lods
dec
and
lea
jne
outsl
mov
out
ljmp
clc
mov
insb
cmp
sbb
fs
ret
mov
nop
sub
add
int
xor
scas
xchg
mov
movsl
mov
imul
les
mov
sub
pop
cwtl
jo
fstps
dec
push
in
pop
je
ror
ret
popf
or
out
into
and
sarb
clc
mov
jle
loopne,pt
add
pop
in
pushf
dec
icebp
pop
inc
adc
mov
pop
sub
je
lret
jl
jae
aaa
rolb
dec
xchg
jbe
mov
leave
repz
pop
js
jne
std
ss
jnp
pop
or
or
jbe
mov
cmp
dec
mov
mov
xor
and
das
mov
rcr
xor
repnz
je
fstpl
daa
fsubrp
add
cmp
jmp
test
stos
adc
arpl
sbb
xchg
stos
add
push
xchg
jae
push
dec
outsl
or
das
lcall
mov
sahf
and
insb
cmp
in
mov
and
lock
out
gs
iret
or
out
nop
pop
cs
sbb
arpl
mov
das
xlat
call
pop
sahf
inc
ja
ret
mov
aam
ljmp
insl
add
std
cld
stos
mov
push
and
decl
add
call
mov
test
mov
inc
daa
test
fwait
mov
je
xchg
and
cwtl
test
hlt
push
lret
xchg
stos
sbb
lahf
inc
mov
ret
les
lahf
cmp
pop
out
imul
dec
push
data16
push
jno
call
pop
jnp
notl
pop
cmp
imul
jmp
das
fnop
mov
push
mov
loopne
int3
and
push
mov
aam
jne
cld
push
sbb
outsb
js
arpl
jmp
adc
ja
add
dec
and
mov
jmp
cli
movsb
adc
fs
cmp
insl
out
rcrl
dec
vpsubusw
fnstenv
sub
dec
inc
push
lds
jb
adc
xor
dec
movsb
mov
and
sub
push
push
gs
cwtl
int
bound
pop
mov
insb
sub
xor
push
mov
ds
or
jnp
test
cmpsb
or
pushf
lea
test
jne
cwtl
scas
pusha
out
mov
sub
fcompl
movl
and
outsl
pop
pop
test
stc
movsl
hlt
and
dec
idiv
inc
pminsw
fwait
in
rolb
orl
scas
mov
mov
lcall
adc
enter
lock
test
addr16
mov
and
mov
testl
lock
cli
rcl
adc
inc
xor
inc
jnp
movsl
movsb
pop
repnz
dec
aaa
xchg
xchg
arpl
ljmp
jae
das
in
mov
aam
push
push
and
mov
xchg
loop
pusha
andl
popw
mov
mul
jno
xlat
scas
aad
adc
sub
js
jp
inc
lds
pop
sbb
sbb
and
in
out
cld
dec
adc
push
xor
mov
xorb
xchg
or
pop
lahf
add
cmp
imul
pop
and
shlb
js
xor
jbe
add
shll
mov
fidivs
pushf
sbb
pushf
add
movsb
mov
dec
xchg
outsb
mov
popa
inc
pop
loope
mov
dec
add
fnstcw
sub
mov
jns
mov
mov
jno
xor
pop
imul
adc
aad
inc
movsl
das
ja
jecxz
push
mov
pop
fwait
dec
fimull
jp
mov
adc
or
cmp
stos
aaa
sbb
ret
xor
pop
mov
cmpsb
and
xchg
adc
jecxz
lret
leave
imul
inc
cwtl
mov
push
jle
lds
push
pop
cmp
jge
fdivs
push
out
pop
in
cmp
aas
dec
and
cmp
sub
cmc
mov
pop
aam
stos
fldenv
cmp
imul
mov
fcoml
xchg
mov
pop
cmp
or
jmp
outsl
dec
xchg
cwtl
adc
push
fimull
jp
fadd
mov
mov
dec
fnstcw
cmp
xchg
mov
insb
and
ror
addb
dec
int3
jnp
jp
jl
push
mov
or
ljmp
mov
imul
fcoml
pop
addl
cmp
insl
pushf
clc
jmp
out
xorl
mov
mov
lods
xlat
gs
jle
repz
mov
or
pushf
dec
je
repnz
xlat
xchg
scas
js
pop
xchg
push
mov
popa
push
lock
lcall
xchg
test
xchg
out
mov
cmp
xor
inc
out
push
test
add
arpl
sbb
sub
push
dec
into
xchg
or
insl
add
sahf
xchg
sub
aaa
sahf
fdivrp
sub
clc
lret
ds
fimuls
push
sub
in
push
jno
lahf
je
xchg
mov
popa
pop
fdivrs
push
sbb
hlt
add
xchg
jmp
fdivr
pop
cli
or
cli
fisubrl
add
cmpsl
jno
xor
jne
push
cwtl
push
mov
xchg
scas
xchg
adcl
mov
sti
rcll
scas
mov
mov
pop
pop
jno
sub
mov
mov
inc
nop
jae
xchg
nop
push
jge
outsb
xchg
add
jmp
lahf
lea
std
or
test
add
fcomps
mov
fbstp
pop
mov
pop
inc
inc
aas
ret
inc
into
pop
inc
sahf
pusha
and
xor
jnp
mov
inc
sub
ret
fldl
mov
lods
int
icebp
movsb
add
adc
cmpb
add
mov
imul
push
call
mov
aas
dec
cmp
jbe
dec
insb
popa
scas
ss
pop
xchg
sub
lods
into
cmpsl
cli
insb
data16
cwtl
pop
sub
int
ss
mov
xchg
pop
adc
push
insb
sub
adc
cmp
add
sub
shrl
pop
sbb
daa
jnp
ss
cwtl
mov
insl
jmp
movsl
sbbb
mov
out
ret
fists
cwtl
es
add
sbb
sahf
es
mov
mov
xchg
mov
push
mov
loope
loop
inc
in
or
ret
or
insl
sbb
repnz
rol
test
shl
shrb
imul
jns
lds
outsb
or
mov
or
push
repz
and
inc
push
xchg
adcb
les
lret
sahf
inc
push
mov
int3
dec
cmp
cmpsb
addr16
int
faddl
xchg
cmp
mov
xor
jl
add
xor
lret
std
cld
pop
mov
aas
inc
or
fmull
pop
rcll
fiaddl
jne
xor
and
sbb
imul
stos
js
nop
xchg
nop
clc
int3
stos
mov
jmp
jmp
leave
jl
xchg
insb
dec
jnp
fs
lea
push
and
mov
xchg
or
rolb
imul
dec
xor
insl
scas
jbe
test
movsl
inc
cmc
cmp
or
fcompl
outsl
mov
mov
aaa
adc
add
add
ss
jno
sbb
mov
add
pop
push
in
dec
ja
subb
outsl
into
fwait
jnp
jnp
sahf
mov
mov
pop
mov
dec
loopne
int
fisubrs
dec
cld
mov
sarl
jmp
and
add
xor
gs
fistl
sbb
loope
in
sub
jns
faddp
pop
xor
mov
pop
cli
pusha
shll
enter
push
xor
xchg
mov
sub
push
sub
adc
mov
push
xchg
test
xchg
mov
or
add
fisttps
or
les
push
je
cmpsl
cltd
cmp
ljmp
dec
mov
cmp
shlb
dec
jp
in
cmp
push
addl
jmp
repz
fbld
dec
or
or
and
jg
bound
add
cmp
clc
sbb
mov
mov
jmp
pop
mov
aaa
mov
mov
dec
dec
sbb
fadds
out
cmpb
addr16
mov
hlt
icebp
mov
pushf
andb
inc
sbb
push
jecxz
jb
aad
xchg
ret
and
aam
push
mov
push
jo
pop
imul
add
add
cmp
add
mov
cmpsb
pop
inc
cmpsl
incl
test
cmp
pop
mov
out
leave
jo
fs
or
adc
xchg
mov
ss
fcomp
arpl
dec
rcrb
cwtl
fisubrl
imul
lds
pop
loopne
insl
push
and
sbb
in
pop
inc
pop
out
in
push
rorb
arpl
cltd
or
jns
mov
popf
and
sub
fxch
imul
cmp
or
clc
adc
jae
and
repnz
pop
loop
add
cmp
add
or
mov
std
dec
loopne
aad
pop
lcall
std
pop
in
insb
xlat
in
mov
iret
clc
mov
jmp
push
push
int
imul
out
std
adc
cmp
jno
mov
out
cmc
rol
sbb
out
cs
push
jno
in
popl
ljmp
xchg
push
and
pop
sub
ljmp
cmc
cmp
add
loope
mov
and
adc
divb
dec
xchg
inc
prefetcht0
cmc
mov
add
imul
stos
push
xchg
pop
cltd
rcrl
fadd
xor
xchg
cmpsb
repz
mov
sbb
rolb
cmp
and
sub
or
pop
adc
inc
in
sbb
in
pop
add
outsl
push
lods
ja
mov
pop
push
mov
push
int3
and
fisubs
js
ljmp
inc
xorl
push
cmc
cmpl
xchg
rcr
inc
push
loop
test
mov
iret
iret
add
repnz
test
aas
jns
in
es
test
or
cmp
mov
push
adc
mov
push
xchg
mov
ss
mov
push
bndstx
or
dec
jb
popa
mov
mov
xchg
mov
loope
xor
sub
outsb
cmp
jecxz
loop
xorl
mov
cld
mov
dec
push
adc
outsb
add
dec
adc
adc
mov
push
repz
gs
lret
test
xor
ret
dec
cli
mov
roll
dec
xor
sub
sub
lods
out
dec
jae
or
pop
cmp
stos
out
jno
mov
mov
inc
repz
sarl
movsl
sbb
sbb
dec
shl
cmpsl
sub
add
cmpsl
or
jno
xor
imul
jns
int
movsl
pxor
jmp
jmp
mov
push
shll
out
mov
push
test
insb
jg
pop
xchg
cmp
call
jb
pop
or
mov
lods
in
dec
mov
clc
sub
shrl
cmp
adc
inc
int
hlt
and
out
lea
pop
jne
shrb
inc
data16
xchg
pop
push
cmc
movsl
mov
inc
jnp
insl
sbb
stos
xlat
adc
lods
mov
scas
sub
addb
insb
jmp
test
pop
push
jo
sbb
ds
or
in
sbb
inc
and
and
call
inc
push
pop
rcrb
pusha
cmp
or
lea
mov
mov
mov
fimull
ficomps
push
sbb
jns
xor
cmc
mov
mov
scas
nopl
insl
push
sbb
in
sub
push
leave
mov
mov
inc
jns
or
or
jl
xor
mov
pop
sub
addr16
scas
push
scas
jl
inc
loop
push
int
es
push
clc
leave
xorb
mov
ss
lds
es
sbb
jp
push
jmp
sub
add
add
mov
or
adc
mov
gs
xchg
mov
mov
insb
in
lcall
sub
sbb
cmp
loopne
es
mulb
adc
pop
gs
lock
out
ret
pop
cmp
lcall
js
push
xchg
push
and
adc
jle
rclb
leave
sbb
outsb
xor
pop
xor
mov
shlb
orb
jae
divl
push
loopne
fs
sbb
sub
hlt
inc
and
mov
mov
fidivl
popa
xorl
stos
call
cmp
xlat
xlat
sarb
loopne
adc
sub
imul
lahf
xor
les
dec
addr16
push
and
out
push
jle
fistpl
xor
out
add
mov
mov
testl
ret
lods
sub
jp
jo
out
call
ds
dec
mov
xor
inc
repnz
or
mov
and
jnp
mov
aad
cli
mov
inc
mov
cmp
mov
cld
mov
cmp
inc
test
sbb
ss
pop
sbb
cltd
mov
and
sub
sbb
sub
mov
or
mov
mov
jl
pop
cmp
mov
lods
and
das
xor
rorl
xchg
adc
imul
ljmp
adc
and
pop
xchg
add
lahf
cmpsb
cmp
test
cmp
insl
mov
xchg
loope
jmp
mov
pop
dec
in
fwait
shrl
add
sbb
push
movsb
xor
mov
movsb
xchg
fldenv
pop
fs
out
sbb
jg
lea
mov
sub
dec
int
iret
mov
in
jmp
es
arpl
mov
fs
mov
mov
mov
fs
push
lods
and
mov
inc
xchg
ss
xchg
adc
pop
and
gs
es
sbb
les
fldt
test
inc
push
mov
sahf
sbb
pop
dec
push
cli
inc
iret
add
sbb
jae
mov
nop
out
jnp
sbb
inc
adc
push
aas
pop
mov
cmpsl
incb
mov
sarl
fsubl
out
insb
or
jbe
dec
fucomip
adc
adc
xchg
and
jb
prefetcht1
push
js
jge
adc
call
rcll
lods
mov
pushf
sub
mov
inc
cld
dec
lds
iret
sub
jno
in
divb
movsl
int
pop
js
fs
jle
jne
leave
pop
mov
mov
mov
clc
sti
rolb
iret
fistl
test
cmc
fwait
pop
xor
into
mov
mov
arpl
dec
inc
pop
dec
lcall
rcrl
fiadds
and
shlb
cmpsl
pop
pop
insl
xchg
xor
adc
jo
repnz
cwtl
ret
xchg
enter
js
mov
sub
popa
jge
xchg
mov
push
popf
jecxz
aaa
adcl
push
xchg
ja
daa
ljmp
adc
mov
xchg
out
mov
cmp
imul
adc
cmp
pop
pop
pop
and
mov
mov
loop
sbb
lods
data16
push
outsl
loop
xchg
sub
cld
xchg
dec
stos
std
jns
notl
movsb
test
jae
arpl
test
aad
jge
mov
enter
mull
inc
mov
pop
jnp
jl
int3
add
lahf
imul
in
sbb
pushf
pop
scas
addr16
adc
sbb
aas
mov
jno
sbb
in
inc
pop
int
lahf
add
test
data16
xlat
push
in
sub
and
fidivrs
or
fcomps
pop
lcall
mov
mov
mov
sub
inc
cmp
cwtl
rolb
push
aam
add
ret
jns
jecxz
inc
imul
bound
dec
fiadds
dec
inc
jl
mov
jae
lret
pop
jg
pop
das
sub
pusha
xchg
and
mov
mov
cmp
mov
lea
pop
loope
aaa
sub
pop
mov
scas
sti
push
mov
xchg
addr16
aas
outsl
fists
lcall
call
sbb
cmp
jecxz
loopne
loop
inc
clc
mov
iret
fisubs
popf
push
cmp
pop
repz
in
push
cld
pop
stc
test
ss
daa
loop
ljmp
push
in
push
jne
in
dec
sbb
mov
mov
rcll
cmc
mov
push
stos
fnstsw
lods
ja
adc
jbe
insl
push
je
dec
in
bound
cltd
jmp
lahf
or
aad
jg
int3
jo
mov
jp
and
sub
adc
test
xor
add
fdivl
insb
adc
testl
loope
sti
jmp
push
dec
pusha
or
inc
jno
pop
mov
inc
sbb
call
test
enter
pusha
sbb
shll
jb
xchg
das
into
das
xlat
xlat
mov
loopne
push
and
or
xchg
js
jle
xor
std
pop
add
mov
cmc
sub
fbld
push
jp
fdivl
xlat
ret
cld
outsl
cmp
push
addr16
push
stc
ja
out
data16
adc
jae
outsl
aad
xchg
jns
jnp
jle
mov
stos
ret
and
xor
jne
stos
inc
int3
sahf
jns
in
mov
fmul
jle
fbld
xchg
lret
add
xor
arpl
ja
movsb
mov
pop
repnz
adc
xchg
push
aam
fimull
cmp
arpl
push
pop
out
insb
popf
dec
popa
add
mov
jnp
pop
out
test
jo
inc
repz
mov
test
les
jecxz
pusha
jecxz
add
cmc
sbb
xchg
std
and
xlat
in
sbb
int3
outsb
popf
mov
mov
stos
sbb
imul
mov
lea
jg
sbb
push
push
and
repz
fdivp
adc
sbb
or
cmp
xbegin
ds
scas
and
or
orl
inc
addb
adcl
lret
repnz
mov
jo
fstpt
gs
call
xchg
les
addl
add
mov
in
cmpsl
adc
hlt
mov
int
call
xchg
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
je
sbb
jnp
pushf
jnp
inc
push
add
cli
jo
mov
and
out
or
jbe
inc
cltd
mov
add
loope
jne
sbb
mov
in
stos
xlat
aam
push
or
pop
jbe
orl
in
rol
pop
dec
inc
outsl
sbb
sti
xchg
ja
cmp
lret
cmp
inc
mov
mov
scas
jne
jle
call
fmull
lods
ret
shll
sarl
loopne
jb
ret
pusha
inc
xor
pop
fucomp
xlat
jle
pop
jo
mov
jnp
sub
or
into
or
aam
lock
pop
dec
pusha
and
in
pop
loop
stos
adc
out
xchg
and
mov
adc
fdivs
mov
repnz
shr
test
mov
cmp
test
pop
mov
fldcw
sbb
push
or
dec
imul
imul
push
lock
clc
popa
inc
test
in
es
pop
add
jmp
pop
dec
ss
inc
fcomps
dec
sub
mov
test
stc
ret
fildll
iret
fistl
imul
sbb
mov
scas
xor
pop
pop
sub
int3
dec
stos
aas
addl
aam
add
xchg
iret
adc
aam
scas
int3
test
adc
adc
or
mov
sbbl
adc
cmp
pop
out
jecxz
lock
mov
out
sub
sub
sbb
xor
pop
dec
or
aad
mov
pop
jge
out
mov
xlat
or
sbb
mov
sahf
incl
adc
mov
pop
stos
jg
hlt
jg
cltd
les
xor
pushf
xchg
mov
fldenv
ficoms
push
test
out
lcall
pop
scas
mov
nop
inc
mov
pusha
lock
or
sub
mov
adc
sub
push
mov
lods
adc
inc
sub
out
incb
aad
pushf
cmpsl
rorl
call
pop
mov
rcl
add
int3
stos
fiadds
push
xchg
xchg
lea
arpl
lea
inc
adc
pushf
cmp
adc
dec
ficompl
sti
sti
and
jb
dec
cs
addr16
loopne
outsl
cmp
addb
pop
arpl
stc
or
ret
ret
lods
xor
nop
out
push
repnz
mov
scas
pop
push
ja
mov
pop
loop
pop
jg
cmp
adc
adc
sbb
push
inc
das
stos
jne
mov
push
sbb
fcoml
add
lods
loop,pt
mov
test
push
subl
icebp
cli
cmp
ss
pusha
or
add
add
in
inc
repz
push
loop
xor
das
and
xchg
movsb
subb
adcb
stos
dec
orb
cmp
icebp
xor
xor
add
jp
pop
add
or
addb
adc
push
dec
aad
sarb
or
jae
mov
rcl
mov
xchg
inc
mov
lea
xchg
ror
or
mov
lahf
pusha
pop
jmp
push
push
shll
nop
jo
sub
sbb
rcll
out
int
sbb
addr16
aaa
xor
jbe
xlat
mov
cmp
mov
in
cmp
fimuls
xchg
jno
lods
fistl
jle
jp
mov
test
mov
pop
mov
xchg
imul
leave
lret
ljmp
ja
pop
lahf
imul
and
xlat
and
test
int
andb
test
and
xchg
in
addb
testl
popf
cmpl
jg
lret
pop
or
push
push
xchg
sbb
push
in
inc
add
loop
dec
dec
out
jae
adc
int
dec
inc
mov
inc
fiaddl
or
notl
dec
push
jmp
cltd
movsl
es
subb
cmpsb
repnz
adc
sub
fsubp
stos
sub
jmp
fisubrs
xor
je
notb
lea
out
sbb
adc
mov
sub
adc
rorb
and
ljmp
stc
std
rcll
cmp
sub
mov
push
sbb
das
fwait
popf
popf
push
xchg
inc
fidivs
jle
mov
xchg
push
mov
xor
sbb
scas
adc
sarb
std
fistpl
jle
scas
pusha
or
inc
sub
aad
lret
sahf
jo
add
pop
mov
xchg
fbstp
sbb
test
push
cltd
xor
ljmp
lret
jl
aad
movsb
xchg
outsb
es
scas
mov
push
cltd
movsb
sbb
inc
inc
xchg
add
aam
adc
cmp
dec
bswap
mov
or
pop
repnz
fiadds
outsl
in
mov
icebp
addr16
inc
xor
lret
push
xchg
sub
xchg
mov
imul
insb
adc
mov
js
hlt
mov
gs
std
add
jle
sbb
imul
xor
mov
fsubrl
out
inc
popa
frstor
stos
mov
cs
jg
mov
sub
cmpsl
mov
ds
mov
sbb
and
pop
pop
jns
std
inc
mov
mov
out
and
insl
int
xchg
ljmp
les
imul
jnp
roll
aam
cltd
sbb
pop
cmp
pop
into
popf
mov
stos
mov
sbb
test
push
rcl
jbe
xor
xchg
mov
fldcw
adc
clc
jp
jg
call
addr16
outsl
dec
mov
or
neg
fistpl
adc
andb
fs
fwait
push
ss
imul
icebp
mov
into
mov
jecxz,pt
shr
mov
or
add
inc
lcall
sub
aad
mov
add
inc
sbb
scas
addr16
mov
cwtl
fstpt
mov
xor
rolb
inc
test
fcmovb
adc
sub
mov
add
dec
xchg
in
push
mov
dec
fs
xor
push
push
lds
inc
dec
fists
xor
stos
imul
add
or
dec
push
lods
pusha
mov
mov
aas
cmc
jp
mov
cmp
xchg
out
adc
ret
lods
pop
outsl
sti
loopne
jle
jne
sbb
daa
incb
adc
sub
push
cmpsb
aaa
fsubs
add
cs
xchg
mov
add
cld
add
jb
xchg
xor
cmc
sub
lcall
scas
loope
add
dec
ljmp
test
movsl
add
jp
cmp
pushf
cmp
sar
jg
mov
jmp
cmp
xchg
inc
push
cs
jne
inc
insb
cmp
por
mov
jmp
test
jb
xor
insb
inc
bound
mov
cli
mov
lock
stc
addl
imul
lahf
sahf
and
cmp
test
aas
lahf
xchg
and
fisubl
cwtl
ds
into
pop
adc
jecxz
loope
loop
loop
fwait
test
aaa
stos
addr16
aad
adcl
mov
inc
lods
test
mov
add
les
pusha
pop
sahf
les
and
mov
adc
pushf
ss
lea
pop
pusha
and
rcl
xchg
cli
repnz
jo
stc
cmp
lahf
movsl
cltd
pop
aad
rcll
in
addr16
sahf
xor
inc
jns
int3
daa
xchg
pop
out
xlat
bnd
mov
xor
jae
and
mov
outsb
popa
call
jle
mov
ds
iret
ja
sub
insb
xchg
dec
jp
pusha
sub
shlb
jne
rorb
and
push
cmp
sbb
icebp
imul
push
out
jge
data16
repnz
jecxz
shl
lahf
jecxz
les
jo
outsb
jmp
mov
mov
ljmp
mov
cvtps2pi
aaa
sbb
pop
or
aad
in
into
dec
pop
in
sub
je
mov
scas
bnd
or
cs
addr16
in
cld
icebp
cld
jno
sbb
lcall
xor
dec
sub
or
sub
xor
out
ret
cmpsl
sub
inc
pop
pusha
xor
fcomps
les
and
pop
jno
inc
imul
xchg
push
or
daa
lret
loope
imulb
data16
sti
icebp
imul
ret
xor
leave
mov
mov
jmp
sahf
pusha
cmp
stos
mov
flds
paddsw
and
pop
add
mov
cmp
pop
sti
pop
mov
push
jmp
mov
mov
or
dec
cmpsb
jle
mov
mov
cli
xchg
mov
sbb
jnp
xor
enter
rcrb
int3
vpsraw
jbe
sub
xor
xchg
inc
lds
das
adc
lret
fnstsw
cwtl
loop
lock
mov
sub
push
jecxz
andb
and
jp
pusha
mov
cli
xchg
lcall
and
fsubp
push
mov
test
das
sbb
add
mov
jnp
insb
loope
pop
push
mov
fcomps
and
mov
xor
arpl
lea
mov
xor
mov
mov
clc
mov
mov
inc
or
sarb
xor
push
rcrb
repnz
lcall
pop
lahf
inc
sub
ret
dec
dec
jbe
in
loope
cmpb
mov
insb
dec
or
dec
into
movsb
mov
mov
push
fcoms
jne
iret
mulb
ss
push
ljmp
je
inc
jns
mov
insb
adc
mov
xor
imul
les
fsubrs
inc
in
mov
dec
lods
xor
push
push
cwtl
test
xor
push
sub
repz
jmp
cld
adc
jne
jle
outsb
or
pop
and
outsb
push
jne
sbb
or
rclb
add
je
out
addb
cmpsl
je
leave
add
cmp
push
or
mov
and
lock
sbb
inc
rolb
stos
xchg
mov
add
sbb
xchg
repz
cltd
or
and
pusha
gs
cli
lret
pop
mov
mov
pusha
xchg
fistpll
jbe
mov
lds
popf
inc
jb
sbb
sbb
popa
push
insl
lods
sbb
ja
fsubr
sarl
mov
xor
orl
pusha
aam
fcmovnb
and
in
mov
mov
jo
rcrb
fwait
cmp
cmp
rclb
pop
jae
arpl
pop
lods
arpl
nop
sbb
adc
jmp
aam
push
add
clc
jns
mov
notl
outsb
sbb
inc
jb
cld
push
aaa
fwait
shlb
aad
mov
in
ljmp
jmp
imul
pop
into
dec
inc
xchg
cmp
add
outsb
int3
das
mov
jp
pop
xchg
insl
dec
jbe
sahf
inc
movsl
shl
rolb
jb
std
push
or
xor
adc
mov
les
fldl
inc
add
mov
icebp
sub
push
inc
aam
enter
ss
and
sbb
hlt
inc
shlb
test
push
sbb
xchg
jae
cmp
test
fwait
mov
inc
insl
add
pop
sbb
outsl
into
iret
or
xor
div
arpl
pusha
push
mov
divl
gs
cld
sbb
outsb
mov
mov
popf
inc
aam
push
leave
stos
pop
sub
mov
dec
scas
loopne
sbb
movsb
pop
test
rcll
add
stos
mov
sbb
dec
push
push
pop
jg
movb
pop
test
jle
adc
sbb
shll
insl
out
mov
dec
rorl
mov
mov
mov
pop
imul
sub
mov
pushf
dec
into
xor
mov
fs
pop
pop
je
neg
dec
xchg
and
mov
in
lods
mov
inc
push
aas
repnz
fsub
or
clc
mov
sbbl
cmp
or
cmp
jl
and
ja
fcompl
mov
fsubrl
fisubrs
movsl
je
pop
sbb
xchg
pop
pop
xchg
mov
stos
mov
fnstcw
stos
cmpsb
nop
mov
sub
outsb
adc
imul
cld
dec
add
mov
daa
pop
push
jl
inc
jge
mov
fisttpl
insb
shll
nop
insl
nop
pop
and
js
xorb
and
xor
leave
sbb
dec
add
sbb
sbb
inc
bound
and
dec
mov
aaa
and
cld
mov
xor
cmp
cmp
rcr
jmp
lods
dec
in
sbb
sarb
jae
lret
sub
add
mov
pusha
fidivrl
ret
les
orl
pushf
sub
les
push
dec
cmp
outsb
and
rcrb
imul
sub
push
nop
sub
popf
out
add
lcall
sbb
ss
inc
inc
fadd
enter
lea
rolb
stos
std
xchg
insb
cltd
out
pop
hlt
push
out
pop
shlb
adc
xor
aad
mov
push
imul
mov
pop
mov
lds
cmp
cltd
pop
mov
sbb
test
xor
lock
sub
inc
les
rcrb
or
cmpsb
sbb
mov
adc
ja
pop
push
xchg
jmp
shll
inc
xchg
sti
push
clc
shlb
cli
sub
push
adc
into
cmp
das
in
lahf
xor
sti
sub
jge
insl
pop
cli
mov
out
jge
es
dec
or
subl
mov
add
sti
fucomi
and
insb
xchg
push
sub
push
fidivl
mov
jb
cmpl
mov
mov
mov
inc
lods
orl
inc
lret
mov
or
fidivs
out
and
cs
mov
ss
mov
movsl
mov
icebp
jmp
mov
loope
in
lock
pop
dec
nop
hlt
loopne
add
leave
test
add
dec
jns
xchg
and
lea
ljmp
jp
adc
push
jge
jo
testb
sub
push
cs
xor
sahf
xor
addb
aaa
scas
pushl
insb
fwait
mov
and
fimuls
push
call
dec
ret
adc
sub
cmp
dec
daa
and
mov
repz
xchg
fwait
sub
js
int3
test
lds
pop
inc
lods
jle
pop
and
or
test
pop
cmp
stos
fs
in
add
inc
call
and
or
or
sbb
mov
outsl
out
shrb
pushf
iret
xchg
inc
sub
stos
test
xchg
clc
insl
cmp
insb
push
xchg
loope
iret
mov
xchg
cli
and
sbb
aas
sbb
inc
in
inc
mov
dec
jmp
pop
and
jg
fwait
mov
pusha
sub
lret
bound
pop
aad
shll
add
pop
xchg
cmpsb
mov
enter
rorl
inc
adc
js
push
push
popf
xchg
xlat
daa
and
or
sub
in
test
push
shll
mov
xchg
jl
aaa
push
dec
orb
cmp
jge
f2xm1
in
divb
xor
repz
aad
lret
mov
sahf
fsubrs
jb
push
icebp
pop
xchg
push
scas
movsb
popa
imul
jae
sarl
pop
cmp
jge
and
cmp
fcmovb
vshufps
and
xlat
jne
fnsave
das
add
dec
loopne
imul
loop
fwait
test
sahf
dec
int
push
cmovns
outsb
and
in
stos
scas
mov
imul
lret
push
divb
ret
jne
inc
push
ds
push
hlt
test
mov
enter
addr16
mov
fcmove
add
pop
mov
mov
mov
fldenv
jbe
inc
mov
je
or
push
push
push
sub
push
ljmp
test
lods
cld
mov
cmpb
mov
mov
andb
push
divb
lcall
shll
xchg
rclb
jmp
or
mov
push
cmp
cld
push
mov
adc
and
xor
mov
mov
and
int
daa
loope
pop
loop
daa
sbb
mull
add
ljmp
mov
scas
cs
outsl
adc
add
repnz
lods
xchg
xchg
jmp
int3
out
ret
outsb
pop
jl
fcmovbe
add
fnstcw
cwtl
mov
mov
inc
cltd
mov
bound
mov
sbb
mov
xchg
cld
add
lock
push
mov
mov
andb
rorb
fisubrs
lahf
push
pushf
lret
cltd
cs
xchg
std
or
mov
das
cmovae
rcll
in
mov
jle
jo
stos
jmp
cmp
test
sbb
je
lods
jb
cmp
jns
into
loopne
hlt
mov
int3
movsb
sub
lock
adc
jmp
mov
fdivl
fimull
lock
lea
push
sub
cmpsl
rorb
dec
stos
stos
cli
outsl
lods
ds
fsubl
fdiv
rclb
ljmp
hlt
pop
popf
stos
push
push
cmp
push
fwait
inc
es
or
or
sub
repnz
mov
or
mov
notb
and
lret
subb
mov
inc
jne
ret
push
iret
dec
adc
and
scas
data16
scas
jbe
ljmp
adc
mov
in
out
adc
inc
mov
mov
daa
cld
sub
jp
push
mov
push
xor
push
cwtl
mov
jmp
cmp
jmp
adc
idivb
inc
adc
mov
fwait
mov
js
scas
jmp
or
add
adc
fimuls
fsubl
add
and
decl
mov
push
bound
or
ljmp
sub
sbbb
andb
xchg
arpl
push
into
lds
jge
mov
pop
xor
cmpsb
rorl
dec
jae
adc
push
es
jmp
xor
cli
xchg
subb
or
push
test
fs
mov
cmc
mov
mov
negl
sbb
or
inc
sahf
arpl
insl
xchg
leave
adc
enter
sub
pop
shll
decl
push
popf
dec
int
or
in
xchg
jae
int3
inc
gs
sbb
mov
pop
cmp
scas
adc
and
lock
xor
out
cmp
rorl
push
or
push
pusha
movsb
je
loopne
sub
push
dec
jae
mov
dec
mov
sub
cwtl
mov
andb
lds
inc
cmp
xor
rcll
leave
cli
fimuls
daa
loop
movsl
pop
mov
test
mov
jno
addb
xchg
fs
pushf
push
xor
mov
out
pop
les
mov
inc
xchg
loop
ljmp
mov
fistpl
in
mov
movsb
daa
dec
mov
dec
cmp
daa
test
out
ljmp
xchg
js
mov
adc
sbb
xchg
lea
adc
pushf
cli
fdivrs
mov
mov
xor
dec
lods
or
dec
les
mov
lahf
cli
adc
sti
lods
push
cmp
mov
and
inc
sbb
sti
mov
out
push
ds
in
stc
jge
insl
out
push
dec
mov
sahf
mov
lea
loope
aam
push
roll
orl
adc
xor
inc
pop
into
arpl
mov
arpl
jl
push
das
sbb
adc
pop
or
mov
cmp
mov
shrb
xor
into
pop
jl
lret
jg
stos
xor
ror
push
fs
shlb
adc
or
xor
rorb
inc
lahf
cmp
lret
insl
push
scas
xor
pop
xchg
rorb
xor
jbe
hlt
adc
rcrl
mov
lret
std
sbb
push
loope
push
push
pop
lods
icebp
add
repz
jle
into
mov
cmp
or
fmull
aas
push
icebp
jb
xchg
jmp
jl
loop
inc
popf
or
mov
pop
mov
sarb
pop
adc
xor
gs
and
lea
cmp
nop
mov
ss
cltd
jge
xchg
push
dec
subb
aas
push
lret
rorb
rorl
daa
or
sbb
orb
jecxz
js
shl
aas
lcall
xor
lods
fucom
sbb
pop
and
in
pop
cli
inc
push
and
mov
push
rorb
and
iret
cld
gs
sbb
int
mov
lcall
insl
mov
push
sbb
ds
xor
xor
lock
test
push
faddl
aaa
mov
je
bound
mov
mov
jecxz
lret
xorl
mov
add
aad
inc
js
repz
nop
aaa
insl
dec
lods
test
xchg
movsl
pop
fidivs
inc
lcall
cmpsl
rcl
dec
xor
shlb
pop
cmp
xchg
inc
xchg
dec
dec
pop
cmp
dec
int3
or
add
lret
notb
mov
out
xchg
jge
jnp
xor
in
adc
cvtps2pi
aad
outsl
int3
clc
and
frstor
sub
sub
push
ja
jae
dec
inc
adc
xor
cmp
cld
inc
pushf
xlat
mov
lods
xchg
stos
cmpsb
fnstenv
xchg
xchg
mov
lret
xor
jmp
mov
daa
inc
push
ficompl
jno
call
sbb
js
jmp
sbb
and
jns
out
icebp
pop
xchg
stc
fcmovnbe
cmp
out
mov
cmp
aad
outsl
lret
int3
arpl
cmp
call
pop
push
xor
sub
mov
jae
lods
ficompl
mov
es
push
loop
sbb
shlb
mov
mov
jg
add
add
inc
ret
imul
stos
aaa
sahf
ficomps
inc
lret
das
pop
sub
adc
sahf
mov
lahf
ds
push
jae
loop
rolb
cmp
or
pop
lret
xchg
mov
jo
sub
mov
fucomi
pop
in
aaa
les
sbb
imul
fnstsw
mov
into
cmp
clc
sub
add
dec
pushf
out
jmp
push
std
adcb
or
in
push
fistps
mov
aas
and
mov
call
inc
fwait
inc
mov
adc
xchg
fwait
cs
clc
push
das
dec
je
les
xchg
push
ror
and
adc
or
sti
sub
jp
sub
xchg
rcll
mov
mov
add
test
fisubs
jne
xchg
outsl
mov
aas
jns
insb
gs
ret
mov
pop
out
push
roll
inc
dec
pop
iret
in
fisubrl
fsubl
fimull
insb
dec
arpl
xor
aaa
push
sbb
push
pusha
call
or
cwtl
lret
xor
repz
lods
fidivs
stos
and
inc
lods
dec
lahf
movsl
add
int
cli
mov
scas
add
push
mov
add
xchg
cmpsb
mov
adc
insl
and
aam
mov
mov
sbb
push
hlt
movsl
jne
addr16
mov
aaa
mov
xchg
jecxz
in
loope
je
push
adc
out
es
jmp
xchg
or
mov
pushf
mov
xor
sub
shrl
adc
insl
sub
xor
js
mov
ret
xor
sub
fdivs
aam
jnp
les
pop
scas
loope
jecxz
sti
and
jl
mov
call
pusha
lock
movsl
icebp
ljmp
fwait
jae
mov
cmc
xchg
sbbb
adc
enter
sbb
imul
sub
inc
jns
inc
lods
pop
inc
in
dec
inc
lahf
mov
adc
cmp
rclb
test
bound
add
and
push
push
adc
sbb
sbb
pusha
add
jnp
jne
orb
fsubr
inc
cmpsl
in
cmp
aaa
mull
shl
dec
lcall
push
fmuls
and
push
inc
adc
jp
jg
cmpsb
frstor
pop
cmpsb
add
cld
jmp
jne
push
loope
popa
and
ds
xor
xor
sub
jbe
loope
push
xchg
cwtl
leave
aad
dec
loopne
xchg
loopne
pop
fwait
or
into
or
inc
xchg
lar
sbb
call
mov
stos
test
mov
hlt
es
push
pop
mov
xorl
push
ss
cmpb
daa
dec
jmp
dec
loope
lahf
pop
cld
add
fwait
adc
aaa
pop
imul
mov
cmpsl
cmp
out
int3
sbb
push
mov
cmp
sbb
mov
insb
or
inc
pusha
or
pop
int3
daa
jmp
ss
cmc
lock
psrlq
dec
push
ret
lds
adc
add
pop
xchg
out
ret
jne
cmpsl
mov
ja
test
xchg
insb
jmp
cmpb
dec
xor
stc
and
ja,pt
movsb
sbb
js
xchg
mov
loop
sbb
lds
mov
adc
sar
or
sub
push
cmpsb
sahf
je
shrb
pop
mov
outsb
mov
sbb
lods
aas
cwtl
push
pop
sbb
aad
nop
cli
sbb
mov
jb
insl
or
mov
and
push
jg
xor
lock
outsl
adc
nop
cli
jmp
loope
scas
cmp
pop
dec
fiadds
fxch
cmp
pop
out
mov
icebp
mov
rorl
stos
aad
lds
mov
mov
adc
cld
das
scas
mov
icebp
insb
mov
xchg
push
mov
mov
addr16
jbe
scas
fimull
insb
mov
dec
roll
mov
cs
mov
jbe
mov
jae
iret
mov
jnp
call
or
lods
es
imul
xchg
sbb
inc
push
jl
lret
cwtl
sub
in
lret
xor
push
mulb
dec
cmp
adc
xor
xchg
push
sbb
cmp
test
push
repz
and
cmp
mov
pusha
inc
leave
test
or
cmp
shrl
clc
pop
je
mov
mov
sbb
sub
into
cs
pushf
cmp
add
ds
sbb
mov
inc
push
add
dec
jo
dec
div
add
sub
add
jg
xchg
mov
icebp
mov
lods
out
mov
ljmp
pop
sub
mov
insl
mov
xor
jae
jge
and
orl
mov
push
into
pop
minps
or
jbe
test
int
inc
out
popa
int3
cmp
adc
js
fsubrp
addb
lds
mov
add
aam
mov
cmp
adc
xor
hlt
jle
call
popf
push
pop
loop
push
push
push
sub
rol
mov
pop
mov
lcall
push
xchg
ret
pop
aaa
xchg
int3
push
inc
mov
push
jmp
add
int
jbe
in
xor
shlb
lods
cli
arpl
lcall
xor
cmpl
inc
dec
adc
gs
cwtl
test
adc
mov
push
andl
mov
daa
mov
sahf
sub
inc
xor
stos
scas
out
adc
aaa
scas
add
scas
or
dec
imul
push
sub
mov
imulb
ljmp
mov
ja
pop
push
cltd
call
mov
scas
in
push
mov
adc
pop
adc
ja
test
add
inc
pop
sub
icebp
bswap
je
std
or
push
imul
lret
jl
mov
add
or
jmp
movsb
mov
int
jno
or
push
xor
sub
mov
inc
cmpsb
mov
fcom
orl
push
ds
xchg
cmp
adc
mov
ret
repnz
sbb
xchg
in
fldl
pop
pop
mov
inc
xor
xchg
jl
add
mov
inc
int3
xchg
test
sahf
enter
movsl
jno
jns
mov
lock
subb
dec
push
test
loop
orl
leave
clc
cmpl
sbb
sub
in
jne
in
shll
adc
rorl
ret
mov
mov
push
xor
push
inc
fwait
dec
into
xor
into
aas
sbb
sub
daa
pop
test
xchg
mov
iret
inc
or
inc
mov
sti
jne
pushf
sub
mov
inc
fists
mov
fdiv
inc
mov
pushf
pop
push
aaa
aaa
pop
push
sti
aaa
lods
aad
iret
ds
dec
adc
and
xor
push
lods
pop
repnz
add
scas
cmp
mov
repnz
cld
fcmovne
jno
mov
push
aad
add
outsb
pop
mov
das
test
sub
xchg
iret
push
add
shll
jle
rcll
adc
sbb
xor
mov
push
lock
and
mov
cmp
dec
fdivrl
leave
nop
xchg
xchg
xchg
in
xchg
je
ficoms
out
dec
mov
aas
cltd
stc
sti
inc
push
add
xchg
ja
jb
adc
jecxz
and
pushf
inc
int3
mov
pushf
xchg
aas
imul
sti
pop
mov
sarb
mov
lret
sub
cmp
out
insb
mov
adc
cltd
stos
add
ljmp
mov
or
push
pop
dec
adc
loopne
cmc
test
popf
sub
xchg
scas
cmp
jae
xchg
sub
and
pop
xor
jb
ljmp
cmpsl
pop
pop
adc
cmp
movsb
sbb
push
xor
or
mov
cmp
in
inc
sbb
daa
dec
xor
cmpsb
mov
cmp
and
xchg
out
and
jg
push
das
mov
add
add
push
and
mov
fists
pop
lret
lods
popf
je
mov
ret
sbb
out
sub
bound
jns
dec
sub
jmp
lcall
cmp
add
dec
sbb
and
mov
dec
leave
sti
movl
xchg
sbb
pop
jb
adc
xor
and
mov
xchg
insb
stc
xlat
pop
mov
pop
xchg
mov
scas
es
xchg
movsl
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
and
dec
xchg
jp
mov
jnp
je
fs
adc
pop
cs
lods
lcall
sahf
mov
pop
mov
dec
sbb
test
xor
jge
push
aad
inc
setg
movsb
add
jle
in
jne
lret
mov
mov
adc
mov
mov
xchg
sbb
rcl
adc
popa
xor
test
add
sbb
test
pop
pop
xor
adc
sbb
int
xor
ret
mov
jns
popf
test
lret
out
and
daa
mov
jns
lahf
mov
adc
dec
mov
lods
inc
insl
xor
rcrb
lret
divl
xorl
loope
inc
push
add
into
cmp
jae
lods
nop
popa
addr16
cli
cmp
add
pop
jns
mov
add
inc
mov
cwtl
xor
push
out
js
pop
stos
add
xchg
scas
inc
mov
pop
call
lret
test
fwait
movsb
jnp
push
inc
push
or
inc
pop
aam
movsb
icebp
pop
push
popa
fcomp
rolb
xchg
and
cmp
aad
xchg
cmp
sti
adc
jecxz
cltd
fdivl
add
lret
jecxz
clc
dec
dec
mov
bound
push
sbb
cmp
lcall
cmp
stc
mov
push
inc
stos
add
cmp
subb
repz
push
rclb
in
add
jbe
or
loope
and
paddsb
and
adc
pop
mov
les
xchg
imul
sarl
data16
jg
push
mov
out
xor
inc
push
or
adc
aaa
mov
outsl
ret
rorl
nop
or
mov
inc
jecxz
mov
jmp
sbb
xchg
cmp
inc
movb
xchg
mov
sbb
sub
cwtl
loope
pusha
fildll
sar
xchg
push
insl
xchg
fwait
div
inc
sub
pop
cmc
iret
xlat
nop
in
adc
pushf
xchg
ss
xlat
and
pop
orl
jecxz
mov
jo
cmp
fwait
loop
jb
lcall
repz
pop
add
sub
arpl
cmp
cmp
lods
pusha
leave
insb
jns
push
jl
mov
push
fistpll
adc
and
data16
dec
lret
xor
jae
aas
iret
mov
xchg
pop
add
sbbl
cmp
mov
xchg
and
xor
mov
push
out
fidivrs
push
test
add
adc
sbb
sbb
clc
adc
xchg
or
mov
sub
outsl
xor
bound
push
cltd
mov
cmc
pusha
add
push
mov
sbb
adc
pop
stos
xor
enter
mov
sahf
shlb
aaa
push
xorb
lcall
pop
adc
jle
and
push
out
mov
mov
pop
and
pop
adc
aaa
aam
loope
cmpb
adc
dec
xchg
popf
pusha
aad
pop
mov
insl
mov
test
cmp
cmp
xor
into
mov
lcall
push
inc
dec
out
mov
divb
shlb
inc
fwait
cmp
xchg
lods
jmp
cmp
hlt
lds
xor
jmp
add
sbb
addr16
cs
aaa
cltd
push
xchg
les
popa
jmp
in
jecxz
mov
icebp
iret
notb
jae
jge
aas
jl
inc
movsl
idiv
sbb
mov
pop
push
jns
addr16
mov
add
mov
xor
push
cmpl
push
xorb
inc
sub
loop
int
repnz
out
mov
or
out
orb
sbb
data16
pusha
iret
or
call
push
ret
xchg
and
lods
iret
and
testb
sub
or
add
xor
pop
aad
and
popf
lcall
sti
push
icebp
lock
sahf
imul
fcoml
sub
lods
inc
push
pop
mov
add
push
fnstcw
test
lds
lret
push
sahf
lds
sarb
test
mov
jl
xor
jns
outsb
out
pusha
sub
xchg
mov
adc
fistpll
addr16
push
repnz
adc
gs
es
addr16
add
jnp
jp
cs
lcall
mov
ja
fs
mov
pop
je
lods
sub
mov
adc
push
int3
mov
push
sub
pop
bound
pop
in
dec
sub
or
mov
push
xor
movsb
push
push
cmp
adc
rcll
mov
cmpsl
in
mov
repnz
xor
or
subl
jo
adc
mov
decl
push
data16
cmp
dec
mov
xchg
xchg
xchg
dec
lock
rorl
lahf
pop
inc
mov
in
xlat
mov
stos
inc
inc
insl
push
jae
sbbb
test
xchg
int
or
outsl
movsl
lock
mov
es
mov
cmp
and
ret
mov
or
fisttpll
push
shll
stos
loope
pop
leave
data16
pusha
hlt
movsl
push
lahf
cmp
sub
mov
xchg
mov
mov
sbb
cld
jg
inc
out
insl
cmpsb
pop
adc
sub
dec
mov
jns
cld
cltd
adc
push
lods
xchg
aas
mov
js
add
push
mov
cmc
xchg
mov
push
jg
adc
push
lock
inc
fsubrl
dec
dec
pop
cmp
inc
icebp
add
push
stos
push
push
mov
mov
dec
mov
add
popf
das
rolb
fwait
cmpsb
lret
sub
repz
sbb
psubq
es
test
mov
jge
inc
dec
adc
fcomps
ret
sahf
add
mov
fdiv
add
ss
roll
in
cld
das
fistpl
mov
jo
mov
pop
inc
pop
mov
sbb
xchg
fadd
pop
dec
mov
cmpsb
or
ljmp
inc
xor
add
mov
ljmp
push
pop
sub
imul
xchg
rcll
lret
jle
arpl
mov
les
imul
sub
jmp
popf
imul
mov
das
pop
and
stos
mov
jmp
push
rorb
cmp
dec
inc
addl
dec
sbb
iret
nop
mov
xlat
or
popf
fistl
vpaddsw
icebp
sti
sarl
jno
stos
pop
adc
xchg
xlat
jl
dec
fwait
push
push
and
xchg
adc
int
cmp
pop
notl
pop
jae
push
fwait
testl
pop
xchg
mov
cmpsl
rcrb
cmp
dec
ds
push
sahf
popa
jmp
add
divb
mov
loopne
call
lods
push
mov
push
or
push
and
xlat
jo
fistpll
xor
sbb
fildl
pusha
stos
into
test
add
in
inc
mov
insb
ret
xor
xchg
push
mov
in
in
pop
iret
addl
sbb
sbbl
jl
mov
inc
push
inc
jnp
inc
icebp
sub
das
adc
movsl
jg
push
cmp
pop
mov
pop
mov
inc
daa
mov
lcall
inc
xor
push
xchg
lcall
add
nop
lret
xorl
push
jg
jge
fisttps
movb
pop
sbb
idivl
lods
or
push
jno
inc
aas
mov
push
add
mov
xor
test
xor
or
fldcw
outsl
hlt
out
insb
enter
mov
les
iret
out
in
mov
pop
dec
add
movd
mov
push
and
stos
ficoms
mov
data16
push
sahf
fcoms
push
dec
ss
cmpsl
sbb
test
imul
cmp
or
jp
xchg
dec
inc
xchg
int
sahf
loop
inc
loop
inc
rcrl
test
dec
imul
xchg
mov
xchg
mov
mov
in
lcall
push
shlb
cltd
inc
jns
push
out
jecxz
cmp
pop
sub
push
out
pop
lea
lcall
loope
insb
sbb
fs
movsb
cli
dec
jno
shr
sbb
sbb
mov
das
std
ja
dec
or
mov
pop
out
push
jp
stos
xlat
test
jp
mov
popf
cli
fcoms
psrld
movsl
add
popf
pushf
daa
arpl
imul
jae
pop
sub
movsb
cmp
inc
add
ret
and
stc
jb
out
inc
popa
adc
mov
cmpsb
xlat
cli
mov
cli
mov
test
dec
fdecstp
xor
cld
add
cmp
loop
sub
xchg
jp
fneni(8087
in
and
pop
push
jb
jp
dec
jle
imul
shrl
push
mov
lea
adc
mov
mov
or
daa
and
rclb
add
adc
sarb
inc
dec
addr16
jp
js
int3
mov
dec
inc
ficomps
loopne
xor
in
lods
jge
in
xor
enter
into
ja
adc
sub
test
push
out
popa
sbb
sarb
icebp
sbbl
icebp
xchg
out
adc
pop
mov
popa
jbe
sbb
sub
add
sarb
dec
add
mov
ret
arpl
adc
sahf
inc
lock
or
incl
push
pop
daa
les
and
mov
push
imul
push
loopne
repnz
inc
pop
sbb
push
nop
push
mov
fs
ret
cltd
xchg
mov
push
cmpsb
and
xor
xlat
test
cmpsl
pop
add
stc
cmp
mov
mov
pop
or
cmpsl
pop
or
sbb
pop
adcb
pop
mov
adc
cs
jmp
xlat
xchg
xchg
push
mov
push
fwait
adc
movsl
and
mov
or
xchg
jns
mov
xor
mov
es
inc
sti
insl
and
pop
mov
inc
lds
mov
ja
cs
mov
iret
hlt
in
jb
adcl
lock
cmp
ss
movsb
arpl
js
clc
jecxz
xor
push
daa
and
fisubl
mov
sarb
iret
bound
mov
rol
cmp
fimull
shlb
and
jno
sti
int
hlt
out
in
je
and
adc
inc
in
icebp
into
aam
mov
cld
es
sbb
jnp
cmp
inc
lahf
adc
cld
out
out
dec
inc
iret
je
sbb
scas
xchg
xlat
mov
sub
rol
rcll
repnz
mov
mov
jl
in
push
pusha
idivl
inc
lret
loope
scas
cmp
cmp
and
addr16
mov
cmp
mov
stc
popa
loope
fadd
push
outsb
les
dec
gs
mov
add
int3
loope
mov
xchg
jae
outsb
test
cwtl
fsts
cmp
sub
icebp
vpaddusb
mov
scas
fdivrl
icebp
fidivl
xorb
and
scas
pop
mov
adc
inc
lahf
fnsave
jb
mov
push
rcl
pop
xchg
mov
xchg
adc
inc
test
pop
or
mov
cmp
mov
lea
je
inc
lods
jmp
add
lea
pop
call
popf
test
xor
mov
stos
subl
pop
inc
mov
aas
dec
xor
cltd
sub
mov
inc
pop
xchg
jge
cmc
xor
js
repz
inc
faddl
aad
int
dec
add
in
mov
repz
pop
in
sahf
bound
cmc
bound
sub
stos
dec
cmp
jmp
lcall
mov
pop
dec
inc
sarb
mov
adc
pop
xor
mov
pop
jo
jo
sub
stos
gs
adc
push
daa
scas
pop
ret
cmpsl
and
and
xor
out
sub
push
or
dec
inc
sub
repnz
loope
cmovae
dec
push
lds
xchg
dec
jmp
inc
outsb
pop
push
sbb
pop
ret
movsl
push
mov
pop
daa
stos
fldcw
lahf
pushf
cmpb
xor
mov
xchg
and
add
repz
sub
mov
fcom
pop
enter
popa
dec
jge
inc
gs
jecxz
aas
mov
ljmp
xchg
add
js
jle
push
mov
dec
xchg
int
repnz
loop
add
fimuls
pop
or
into
je
fistl
sub
ret
cmp
and
movsl
addr16
push
sub
pop
inc
dec
sbb
rol
test
icebp
push
sbb
orb
aad
cwtl
pushf
imul
ss
fisubrs
orb
inc
adc
xor
addr16
rolb
cltd
outsl
dec
cmpsb
fsubrl
nop
in
xor
pop
pop
jecxz
movsl
inc
adc
sub
lret
xchg
jno
mov
les
gs
lret
movsl
xor
in
xchg
mov
xor
int3
fdivrl
in
mov
pop
dec
stos
jg
movsb
mov
push
inc
sub
fs
cmp
mov
pop
and
shlb
sbbb
imul
test
cmpsb
jl
das
mov
jne
or
subl
adc
xchg
arpl
xchg
inc
lret
mov
mov
dec
lret
dec
cmpsl
sbb
jmp
push
sbb
shll
out
ds
loopne
js
and
or
in
outsl
ljmp
xchg
xchg
or
and
and
dec
inc
xor
jmp
int3
jg
movb
pop
and
xor
jl
bound
adc
cltd
pop
inc
cmp
cmp
test
sahf
ds
ret
lock
sub
sbb
push
cmp
outsb
lret
jo
scas
or
mov
aam
lret
iret
jbe
xchg
lcall
sbb
mov
xor
pop
dec
xchg
movsl
inc
mov
push
fldl
mov
cltd
packssdw
movsb
adc
push
rorb
jo
movl
sbb
push
enter
xchg
sbb
enter
and
adc
or
mov
add
sbb
sahf
iret
mov
in
mov
lcall
fcoms
mov
ss
add
inc
mov
call
xor
leave
in
adc
xchg
add
testb
test
inc
test
adc
decb
push
push
adc
enter
xchg
aaa
int
pusha
sbb
movzbl
popa
stc
lds
and
mov
pop
push
scas
sub
adc
lock
rcrl
cmpsb
dec
stos
clc
jno
mov
mov
je
xor
repnz
adc
push
ljmp
mov
push
cmc
jge
dec
mov
inc
or
inc
and
lret
inc
movsl
lock
adc
mov
jno
inc
ret
lea
hlt
pop
sub
pop
adc
pop
push
cmpsb
test
cli
out
cld
jnp
mov
sbb
inc
movsl
out
cmp
push
mov
dec
or
push
xchg
push
mov
pushf
call
ljmp
fwait
xchg
fdivrs
daa
mov
in
xchg
aas
test
mov
or
sbb
or
sub
js
push
jno
add
inc
inc
cltd
ficomps
or
sub
ficomps
add
and
add
rol
push
push
add
jae
stc
mov
mov
and
aaa
xchg
and
jmp
outsb
pop
push
jae
mov
ret
movsl
enter
xor
mov
inc
stos
nop
lods
mov
push
cmp
rclb
cmpsl
fwait
adc
leave
fsubrl
sbb
bound
pusha
stos
cwtl
sbb
mull
jle
dec
jle
sbb
fadds
dec
pop
mov
lret
jno
hlt
xchg
pop
daa
popf
int
cmc
mov
push
or
xor
pop
cmc
arpl
shrl
push
mov
popf
nop
push
aas
imul
insl
into
jp
push
push
jmp
pusha
out
shrl
test
fstpt
sbb
mov
pop
sub
icebp
xchg
rcl
mov
jae
dec
in
xor
jno
aaa
mov
stc
sarl
jge
mov
dec
es
sub
orb
adc
icebp
and
cld
sub
imul
mov
and
push
aaa
xchg
nop
jp
loopne
sarb
cmpsl
adc
jg
pop
jbe
mov
popf
mov
mov
filds
xchg
jl
data16
cwtl
xor
push
and
mov
sub
pop
push
enter
cli
pop
rcrl
repnz
lods
sbb
push
mov
add
mov
outsl
fprem1
jmp
mov
pop
stc
jae
xchg
sbb
mov
jb
or
sbb
jmp
jle
push
dec
sub
loop
inc
repz
lret
fdivrl
outsb
subl
pop
movsl
ljmp
cwtl
repz
cld
pop
pop
mov
sbb
pop
mov
rcr
or
xchg
ss
aas
nop
jae
inc
imul
pop
fs
repz
mov
sbb
ljmp
and
cltd
and
aam
push
add
or
xchg
fstps
imul
add
jg
ljmp
xchg
repz
imul
les
adc
xchg
mov
xlat
nop
lea
xchg
rolb
xor
fs
shrb
iret
es
mov
cmpl
fdivrs
inc
and
xchg
insl
pop
nop
xor
and
sar
cmp
call
adc
dec
adc
ljmp
leave
shl
mov
outsl
jb
dec
fdivs
call
push
scas
xlat
call
ret
xor
sub
xchg
rorb
mov
aaa
repnz
mov
push
jnp
sti
jmp
jns
adc
arpl
jns
sub
fcoml
mov
mov
inc
int
push
sbbb
scas
and
sti
jmp
stc
shll
mov
pop
je
jns
outsl
fwait
sarb
push
mov
ljmp
adc
loop
insb
movsl
ret
add
and
mov
roll
mov
add
cwtl
aam
adc
lret
cmp
pop
roll
cs
iret
fisubl
scas
incl
cmpsl
jnp
mov
xor
and
mov
jns
and
or
test
or
dec
sub
dec
aas
popf
cmp
rcll
sbb
cld
ror
or
jmp
jecxz
incb
mov
cltd
shl
cmp
pop
data16
jle
popf
imul
jge
mov
sub
scas
out
mov
mov
ja
fisubs
inc
jmp
dec
xchg
cmpsb
sub
fdivrs
daa
arpl
adc
rorb
pause
jp
fsubrs
fildl
lret
push
sbbb
xor
adc
mov
mov
movsb
fistpl
cmp
adc
outsl
stos
into
in
dec
aas
push
adc
xor
sbb
jns
cs
xorb
popa
js
xchg
mov
stos
ja
or
xchg
lds
daa
dec
push
adc
xchg
movsb
inc
jl
repz
jp
adc
add
in
jmp
mov
sub
xchg
shrl
and
stc
scas
insl
std
aad
xchg
loop
lea
pop
lock
daa
adc
pop
stos
cmpsb
test
mov
jmp
push
outsb
jno
lock
mov
add
in
cmp
jbe
mov
gs
push
and
add
imul
and
sbb
cli
xor
or
leave
xchg
cltd
cwtl
sub
adc
mov
cmp
loop
sub
pop
cmp
pslld
or
jg
pop
jnp
pop
and
mov
test
mov
push
xchg
jo
push
popa
ds
jb
cmp
mov
push
jmp
push
mov
shll
fsubl
cwtl
outsb
jnp
iret
or
pminsw
ret
out
jle
sbb
adc
adc
and
sub
inc
aam
cmp
or
repz
push
sar
inc
aad
ss
pop
insb
js
lds
int
in
dec
mov
scas
add
outsl
jo
push
mov
xor
xchg
or
ficomps
pop
dec
pusha
sub
subl
adc
rorl
lret
lret
fs
push
cmp
mov
insl
decl
imul
leave
or
lea
arpl
and
iret
sub
repnz
dec
jae
stos
or
out
sub
mov
enter
imulb
or
and
repz
xchg
ficompl
fst
jno
addr16
fldcw
iret
mov
outsl
xchg
shll
scas
mov
enter
sub
daa
inc
pop
jno
call
dec
jge
cmp
xchg
ds
cmp
leave
xchg
aam
popa
sub
xchg
fs
jo
scas
jns
icebp
mov
mov
fisubs
xchg
pop
push
dec
pop
lcall
lcall
in
rorb
sub
or
mov
rclb
cmp
test
subb
and
stos
into
clc
repnz
popa
aas
sbb
sbb
xchg
sti
enter
fistpl
jmp
mov
sti
out
adc
push
lock
xor
push
stos
mov
rorl
leave
pushf
in
stc
enter
gs
ds
push
add
sahf
pop
ss
push
out
mov
not
adc
dec
in
jne
addr16
iret
dec
sbb
dec
jno
imul
fwait
lock
lahf
inc
inc
jle
es
or
push
fsubrs
iret
cltd
loop
out
xchg
bnd
or
xchg
jbe
mov
std
add
sti
insb
xchg
fwait
dec
jno
scas
adc
adc
pushf
out
mov
pop
lcall
adc
mov
into
mov
pop
sarb
iret
movhps
adc
cwtl
ret
shrl
jle
cmp
outsl
out
loopne
or
inc
fiadds
ljmp
dec
cli
pop
in
push
adc
test
jns
mov
add
adc
test
ds
xchg
scas
and
xchg
push
mov
les
xor
jb
jo
add
push
add
lahf
xchg
cltd
cs
ja
insb
inc
adc
stos
lods
nop
ss
in
idivb
jns
and
daa
pop
int
mov
incl
popa
dec
ret
cmpsb
adc
mov
stos
das
cli
mov
xor
dec
sbb
int
pop
gs
pop
push
loop
enter
push
xchg
enter
xchg
push
xor
rclb
lds
mov
push
shl
scas
aaa
add
bound
hlt
mov
fcmove
and
sbb
pushf
mov
mov
mov
and
fcmove
xchg
pushf
cmpsb
jg
add
cmc
int3
icebp
inc
les
hlt
add
movsb
add
fsubs
xor
loope
in
and
lret
jg
js
aas
mov
adc
xchg
rorl
es
mov
jle
sbbb
es
lods
mov
idivb
js
mov
aam
rol
jle
push
inc
inc
inc
in
mov
lret
add
sahf
sbb
or
lret
shll
push
fidivl
je
cmp
mov
jle
cmp
je
sub
loope
mov
pop
cmp
test
dec
pop
dec
dec
por
or
pusha
or
daa
jnp
fstpl
jl
addl
lret
mov
sub
divl
mov
jge
mov
rcrl
pop
pop
jbe
ror
mov
fimull
aaa
iret
and
ret
mov
add
dec
xchg
ret
add
sti
das
test
pop
jne
scas
pop
orl
pop
inc
mov
jb
je
mov
rorb
lret
push
sbb
push
push
cld
pop
ss
dec
in
dec
sahf
jnp
jne
xchg
dec
jb
dec
sub
imul
push
or
xchg
sbb
dec
mov
fisubl
adc
out
sbb
add
jge
sub
daa
push
repnz
and
jns
cltd
jnp
rcrb
or
mov
inc
scas
lret
hlt
lahf
notb
arpl
jne
in
fidivrl
jle
aam
xchg
cltd
nop
push
xor
adc
hlt
bound
inc
inc
clc
push
inc
xchg
out
xchg
mov
sti
inc
dec
pop
lock
push
ret
or
mov
adc
aad
es
call
repz
outsl
xor
push
test
rolb
adc
or
stc
mov
push
push
push
push
mov
out
push
sub
push
mov
xchg
inc
pusha
lahf
ja
std
sub
out
mov
jbe
hlt
and
shl
hlt
aaa
push
pop
repnz
xchg
cmpsb
jl
in
pop
push
pop
cmp
sub
lcall
mov
dec
dec
outsb
xorl
adc
jbe
jmp
and
mov
cmp
mov
test
jnp
enter
adc
mov
das
in
cmp
dec
pop
adc
cmp
fs
pusha
pop
adcl
mov
sbb
pop
sbb
shll
mov
jg
adc
jo
imul
mov
mov
add
xchg
adc
mov
sub
push
test
mov
imul
cmpsb
xor
mov
mov
xchg
cli
xor
dec
cs
cmp
mov
div
adc
adc
xor
or
loop
push
ja
push
lahf
call
outsl
arpl
out
dec
pop
xchg
xlat
sbb
icebp
iret
rcrl
and
jge
mov
mull
lahf
adc
xchg
sbb
scas
mov
mov
hlt
pminub
add
xlat
lods
fisubrl
insb
scas
or
popa
dec
scas
aam
ret
jmp
jbe
and
lods
scas
inc
xchg
inc
inc
mov
cli
cmp
xchg
mulb
jge
scas
push
scas
pop
es
mov
movsb
sub
daa
xchg
xor
sbb
pop
in
mov
cmp
or
rcr
and
xchg
inc
iret
repz
cmpsb
sub
jae
jno
lret
fdivrp
in
out
out
mov
fadd
add
out
or
xlat
lods
jl
push
repnz
les
xorb
cmp
fadds
pop
cwtl
out
cmp
xchg
leave
sbb
fwait
push
mov
sub
add
push
out
aad
jmp
or
iret
mov
inc
in
lret
stos
sub
adc
adc
es
jnp
rolb
sbb
sbb
addl
movsb
inc
call
push
icebp
jb
loopne
cs
and
cmovno
inc
mov
adc
lds
xchg
dec
jne
js
arpl
xor
dec
aaa
and
and
fiadds
jl
call
imul
loope
xchg
pop
insl
push
add
cs
xchg
fucom
aas
pop
push
xor
test
xchg
xor
add
push
xlat
and
xchg
jnp
jle
outsl
outsl
aas
aam
push
jge
int3
in
std
mov
jno
jmp
mov
test
inc
cmp
add
cmp
mov
push
pushf
push
mov
mov
fmull
xchg
push
add
icebp
or
js
xchg
sbb
int
inc
or
lods
adc
inc
into
xor
and
xlat
orb
sub
xlat
pop
icebp
cmp
rolb
loopne
dec
mov
ret
aas
sbb
popa
add
mov
imul
mov
adc
lods
inc
push
movsb
sbb
or
fistps
inc
lret
repz
in
clc
mov
clc
scas
inc
push
std
add
xchg
mov
mov
push
fdivrs
xor
ljmp
lea
mov
cmpsb
lret
fistpl
ljmp
rcrb
sbb
ret
popa
add
push
nop
and
test
std
xor
in
sbb
xor
add
and
inc
xor
les
pop
and
shl
mov
popa
pop
dec
xchg
jp
test
jp
aas
rcrl
or
movsb
test
adc
push
or
cmovnp
repnz
aaa
rcrl
cmc
lret
inc
inc
movzwl
mov
jno
outsl
call
mov
xchg
fcompl
cmpsb
inc
mov
mov
jp
pop
pop
hlt
inc
mov
inc
test
pop
lea
jl
mov
dec
ss
fsubs
mov
movsl
and
cmpsl
call
adc
lea
and
ja
jp
pop
cmpl
js
loope,pt
testl
jge
push
dec
pop
jbe,pn
cmp
mov
hlt
xor
add
inc
mov
enter
push
sbb
fcomps
and
cmp
lds
inc
sbb
movsb
outsb
or
jmp
out
mov
and
adc
int3
popf
add
cld
cltd
inc
jns
subb
test
cmp
push
pop
dec
mov
inc
sub
mov
int3
or
in
pusha
mov
inc
dec
mov
or
insl
adc
in
jecxz
mov
call
dec
cmp
shll
fistpl
scas
push
jp
or
inc
xor
xchg
pop
stos
lods
dec
push
xor
sahf
fldl
call
inc
arpl
xchg
cmp
mov
mov
fsubs
scas
jl
stos
pop
movl
or
lods
push
int3
je
sbbl
cmp
jbe
cltd
mov
inc
fmulp
mov
mov
cmpsl
subl
add
test
call
inc
sub
scas
add
and
dec
or
xchg
shlb
daa
lock
ss
mov
int
sub
xor
icebp
dec
shll
sahf
outsb
leave
ret
aaa
pop
sar
jae
arpl
lods
adc
clc
sub
sbb
mov
sub
int
call
insb
inc
mov
dec
repz
cmpsb
loope
fldlg2
stos
push
bound
sub
fistl
dec
scas
mov
out
fwait
push
out
dec
mov
dec
loop
gs
pop
scas
aas
ret
mov
cmpsb
adc
fidivs
push
push
mov
ljmp
shll
pop
pop
push
jl
enter
hlt
addr16
cltd
jbe
outsl
add
push
pop
arpl
lods
jnp
sbb
inc
ja
in
pop
clc
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
cli
dec
test
jnp
or
sahf
xor
push
imul
aas
mov
push
mov
xchg
pop
das
lds
stos
aas
xor
incl
push
notl
push
push
fmull
mov
jl,pt
pusha
stc
lods
cld
cld
mov
fcomps
cmc
add
cld
pop
test
test
dec
shl
repnz
out
sbb
lock
test
aaa
mov
mov
and
mov
ja
add
push
decb
enter
stos
xchg
jmp
cltd
fadd
push
adc
call
mov
xchg
pop
mov
out
xlat
test
arpl
and
push
outsb
pushf
nop
mov
cltd
jns
and
sub
inc
dec
push
or
clc
mov
dec
xchg
cmp
cmp
call
ficoml
stos
mov
xor
pop
or
mov
ss
lea
aad
mov
dec
inc
and
pop
inc
xchg
inc
mov
pushf
or
push
je
xor
xchg
pop
adc
movsb
cli
in
rcll
fmull
inc
push
gs
xor
jmp
aad
bound
xchg
in
into
mov
in
outsb
pop
dec
jl
ljmp
adc
shlb
mov
shlb
out
adc
insl
inc
dec
cwtl
out
rcrl
inc
jge
test
scas
or
or
pop
cld
cwtl
iret
adc
mov
ds
dec
or
adc
xor
cltd
das
iret
push
sbb
sub
sahf
cmp
mov
push
fcomp
mov
or
ds
out
inc
clc
jle
es
jle
sahf
push
lods
pop
push
push
add
roll
aad
cmp
sub
inc
mov
iret
and
mov
addr16
adc
js
idivl
and
fisttpll
push
negb
js
inc
movsl
sub
sub
xor
in
seto
push
fidivs
mov
insl
xchg
push
orb
daa
jnp
pop
push
loope
outsl
inc
push
xor
lcall
pushf
pop
push
adc
dec
loopne
icebp
ds
xor
jmp
pop
push
int
jno
cli
sub
fidivrl
dec
loopne
hlt
movsl
push
add
sub
xor
fwait
cmpsb
mov
add
sbb
jne
repnz
repz
std
lock
addr16
jle
fldt
rorb
dec
dec
fwait
jle
in
fldcw
mov
nop
fcomp
mov
stos
mov
and
and
addr16
or
push
xor
push
xchg
xchg
hlt
lock
jmp
rcrl
arpl
dec
stos
int
movsl
cltd
lret
fucom
lcall
lahf
mov
mov
pop
dec
adc
pop
xchg
in
xchg
dec
jne
push
mov
mov
sbb
mov
lock
adc
int3
mov
add
push
call
xchg
fpatan
test
in
int3
insb
push
xchg
pop
inc
int3
fadd
sub
sbb
cmp
or
fcmovu
mov
insb
push
fisubl
mov
loop
sbb
cmp
ljmp
push
fisttpl
jbe
xor
mov
aas
std
mov
lea
adc
and
popa
das
fidivrl
fsubrs
imul
mov
push
add
mov
jnp
mov
xor
fcomp
insl
mov
add
shlb
popa
sbb
dec
cmpb
mov
repnz
out
out
scas
mov
cli
sub
cli
cmpsb
inc
imul
pushf
scas
std
in
xchg
lret
roll
push
sub
sub
pop
orb
mov
daa
out
cmp
inc
std
in
xor
mov
insl
mov
scas
pop
test
pusha
fidivrl
add
jg
push
data16
mov
ds
dec
dec
sub
shll
fsts
cmp
scas
lock
xchg
lcall
and
jl
jnp
call
pop
scas
push
loop
dec
jbe
ds
jo
test
mov
mov
mov
mov
cmpsl
fmuls
pop
loope
inc
scas
push
mov
int3
cmp
lret
cld
addr16
mov
push
loope
lods
in
jb
xchg
lock
shl
sub
mov
xor
sub
pushf
inc
aad
mov
jecxz
cmpl
or
iret
sbb
mov
pop
inc
lret
jne
movsl
into
or
jg
or
push
and
mov
imul
pop
mul
push
mov
jp
rol
sbb
sub
jae
add
mov
test
cmp
shlb
js
mov
sub
clc
fadds
cmc
ret
pop
mov
cmpl
add
push
js
divb
lahf
sub
lods
fs
into
decl
pop
push
or
movsl
std
xchg
sbb
ret
jb
add
fcmovnb
daa
sbb
cmpsl
lods
out
push
adc
call
ret
fbld
hlt
jge
loope
scas
adc
test
or
addb
out
test
inc
jae
daa
xchg
cmp
push
mov
sub
add
scas
ficoms
pop
jo
push
pmaxsw
repnz
cltd
sub
cmp
in
xlat
lea
bound
arpl
xchg
sub
and
cmp
into
ficomps
add
lods
xor
fnstcw
push
test
lods
xor
mov
push
out
mov
adc
lret
aas
bound
xor
sub
cmc
fmul
and
imul
sbb
in
pop
rep
mov
jb
addr16
ret
js
xchg
pop
push
imul
jb
jno
shrb
cwtl
rcll
push
jno
lahf
rcr
xor
sub
shl
mov
arpl
cld
sub
es
fidivrs
add
jmp
jnp
lea
push
xor
jge
lock
xchg
fildl
or
mov
jp
repnz
lea
lret
mov
push
jmp
mov
mov
sbb
add
push
add
sub
push
xchg
push
push
cmp
sbb
or
sarl
std
in
adc
repnz
mov
xor
xlat
lahf
pop
outsl
add
in
aaa
leave
or
out
dec
add
push
loopne
js
or
add
movsl
test
testl
and
jae
mov
adc
jle
add
ss
loopne
xchg
mov
lcall
xchg
dec
incl
fidivrl
push
cmp
not
xor
cmp
je
dec
sti
mov
mov
adc
mov
loopne
or
pushf
cs
dec
ret
sub
pop
add
sub
ficoml
xchg
xor
and
inc
ds
test
mov
xchg
jnp
ss
mov
mov
jle
int3
mov
push
mov
push
sub
push
add
xlat
add
mov
jmp
scas
outsb
sbb
jg
daa
and
int
jmp
andl
je
in
cs
cmp
xchg
mov
ja
les
xchg
cmp
cld
pusha
test
pop
out
sarb
stc
xchg
xor
inc
int3
mov
adc
ljmp
sbb
adc
iret
push
out
push
out
inc
add
aaa
inc
fldl
mov
push
mov
xchg
xchg
inc
imul
std
and
push
push
popf
test
dec
and
pop
outsb
adc
mov
xchg
sub
imul
jb
xchg
dec
addr16
dec
lret
lds
iret
cwtl
ss
jno
mov
xchg
arpl
add
sub
xor
xlat
jnp
lea
insl
and
mov
in
push
mov
ljmp
mov
xor
jne
mov
lods
push
mov
scas
arpl
insl
iret
sub
pop
dec
insb
pop
and
mov
rcrl
mov
arpl
cmpsl
push
or
lock
mov
in
push
cmpsl
and
gs
inc
mov
or
jle
xor
cmc
in
cmp
out
cmp
movsl
fisubl
pop
xchg
sbb
test
je
xor
jecxz
jle
arpl
and
dec
data16
das
testl
mov
inc
sbb
jne
jl
xchg
in
lds
push
lea
push
adc
mov
push
and
fstl
jns
sbb
xchg
dec
sbb
sbb
push
repz
mov
push
int
movsb
fnsave
sub
add
mov
rorl
enter
fistpll
ss
xor
push
outsb
leave
cmc
aam
nop
xchg
out
add
ret
inc
imul
movsl
sbb
push
mov
loope
enter
pop
shl
push
test
mov
fucomip
jnp
aaa
xcrypt-ofb
cmpsl
ljmp
jb
fldl
lock
lcall
mov
sub
push
push
and
xchg
jno
pop
std
mov
and
pop
mov
jge
cmpb
sbb
lods
shrb
push
clc
cmp
jbe
aam
aas
in
jae
push
sbb
mov
lea
xchg
out
cmp
cld
aas
push
add
xlat
out
xchg
mov
or
sub
xchg
out
int
pushf
gs
hlt
adc
rclb
or
sahf
or
mov
pop
xorl
sub
cmpsb
push
push
sub
fwait
xlat
outsl
cmp
ret
xor
outsl
jnp
rcll
mov
bnd
pop
cmp
mov
in
fwait
mov
call
rol
adcl
rcrl
outsl
fistps
stos
jmp
pop
xchg
or
int3
das
inc
push
add
cmp
out
rolb
clc
je
and
cwtl
icebp
lods
ss
fldl
push
jge
test
mov
mov
fdivrl
sub
mov
ja
dec
into
roll
scas
gs
js
clc
adc
and
jmp
mov
mov
push
sahf
nop
or
push
push
inc
mov
xchg
popf
cmpsl
pop
jne
into
jmp
inc
push
pop
fldl
fbld
fnstenv
mov
cmpsl
rcrl
jb
fstpt
xor
cmp
icebp
idivb
testb
dec
stc
sbb
jae
xchg
cmp
enter
adc
outsl
in
or
xor
dec
mov
sub
and
pop
cltd
xor
leave
stc
int
cmp
adc
jne
outsb
mov
jge
test
cltd
pusha
xor
clc
fwait
rcrl
mov
ss
sbb
inc
stos
inc
mov
ret
icebp
pusha
ret
push
cmp
sbb
push
sarb
add
test
mov
flds
and
mov
std
cmp
mov
daa
push
daa
push
pop
shll
inc
orl
imul
inc
mov
lret
insl
adc
xor
sub
pop
mov
cmp
inc
pop
pop
or
shr
adc
dec
pop
sub
xchg
insl
adc
pushf
sbb
sub
xchg
ficompl
or
jbe
jge
ss
clc
pop
pop
scas
add
cmpb
or
mov
add
pop
adc
test
adc
adc
out
pusha
inc
fisttpl
scas
xor
sbb
arpl
mov
mov
xorb
cmpsl
pop
rol
mov
jg
mov
jb
add
push
or
pushl
stc
les
dec
xchg
shrl
in
sti
lcall
inc
mov
dec
scas
sahf
xlat
sbb
sub
push
mov
mov
fmull
mov
int3
add
sbb
bound
lods
fldcw
or
fnstsw
push
mov
jl
xchg
jbe
push
jo
lock
xchg
std
inc
dec
jmp
loop
test
scas
lret
or
das
clc
cs
sarb
push
dec
add
mov
mov
mov
cwtl
mov
test
jno
shl
test
cmp
push
sub
push
in
out
jb
sub
mov
jmp
xchg
push
call
cmpsl
or
sub
leave
xor
or
gs
push
outsl
mov
push
sub
arpl
scas
int
dec
adc
jge
add
ret
in
js
out
cmpsb
scas
notl
add
jo
imul
sbb
insl
inc
jecxz
push
xor
mov
jg
subb
lret
insl
push
loopne
repnz
jmp
xchg
fisubs
dec
cmpsl
pop
inc
mov
mov
repz
sti
and
sbb
dec
push
or
xchg
stos
mov
add
rcll
je
xchg
jbe
mov
cmp
cltd
rcrl
test
mov
sbb
cmp
push
std
xorb
mov
mov
dec
sub
out
mov
inc
outsl
inc
inc
mov
mov
adc
aam
mov
xchg
pop
xchg
ljmp
pop
xchg
xchg
divb
xchg
and
mov
push
mov
mov
je
cmpsl
fldenv
in
lea
decb
mov
dec
pop
mov
test
xchg
mov
sahf
push
cs
ret
jns
out
ss
inc
sbb
pop
pop
outsl
mov
xchg
ja
dec
inc
xor
mov
inc
bound
lock
or
cmp
xchg
fcompl
mov
sub
sbb
pop
add
fistl
inc
add
pop
xchg
sbb
popf
adc
push
xor
shl
dec
inc
or
mov
inc
push
pop
inc
sub
arpl
insl
clc
sbb
add
jmp
cmpsb
mov
roll
jne
cmp
daa
lea
xor
add
mov
mov
xor
shlb
add
pushf
dec
xchg
in
cmpsl
jae
dec
fists
cmp
fs
movsl
adc
dec
mov
in
insb
jne
jae
adc
push
mov
cmpsl
mov
ljmp
imul
icebp
jae
dec
enter
push
xor
idiv
push
xchg
lahf
add
sub
lods
mov
and
sbb
and
test
add
mov
adc
imul
lods
sbb
mov
jbe
sti
scas
sub
fistl
xor
int3
stos
sbb
inc
mov
sbb
mov
movsl
mov
xor
andb
or
adc
cmp
push
push
repnz
icebp
js
jae
fildl
jecxz
xchg
sbb
and
mov
bound
aad
xchg
fs
xchg
inc
test
xchg
inc
push
cmp
mov
dec
out
cmp
in
stc
test
shr
gs
fwait
pop
repz
ret
daa
inc
xchg
cwtl
mov
mov
lahf
cltd
xor
push
fdivl
in
mov
cltd
and
dec
imul
cld
jmp
adc
xor
loop
or
pop
jb
cli
jns
fnstcw
xlat
movsb
cld
sbb
and
adc
pop
pop
add
es
xlat
and
out
arpl
adc
lahf
scas
cs
outsb
or
ficompl
into
stos
add
mov
mov
aaa
jmp
xchg
xchg
mov
cmpsl
inc
jle
jae
lret
fmulp
pop
imul
rcll
inc
test
xchg
mov
xchg
sarl
and
mov
pushf
nop
push
cmpsb
out
clc
and
jo
ds
ret
stc
or
jmp
fisttpll
fcomps
imul
int3
aad
jae
sbb
mov
inc
dec
and
fstpt
fs
dec
data16
int3
adc
mov
add
jo
and
sti
fsubrl
sbb
nop
out
xor
ficoms
mov
push
cld
mov
not
xor
inc
mov
dec
scas
cmpsb
int3
outsb
push
iret
mov
mov
mov
push
and
push
dec
dec
mov
and
jge
xchg
into
test
pop
frstor
pop
mov
orb
movsb
insb
pop
int3
popf
cmp
jnp
jmp
sbb
jae
cmpsb
cli
imul
mov
loop
mov
addb
test
stos
incb
jne
cwtl
outsl
jno
inc
fists
rorl
sbb
push
cld
enter
dec
lock
and
mov
jnp
dec
dec
sti
insl
shlb
sbb
inc
outsl
rclb
add
jbe
inc
mov
outsl
inc
popf
cld
ret
mov
jbe
lods
popa
add
clc
hlt
adc
push
scas
xchg
lahf
lock
or
sub
mov
iret
lea
shrb
cltd
jle
imul
sbb
mov
mov
add
mov
add
sub
and
mov
jns
mov
mov
and
gs
lahf
sub
mov
cld
sub
push
fwait
jbe
sbb
shl
aam
cmp
mov
insl
daa
addr16
xor
push
pop
dec
pop
add
push
inc
loope
in
insb
aaa
add
xlat
mov
int3
push
dec
test
call
push
xchg
jecxz
test
nop
push
fs
adc
fs
push
addr16
and
aaa
push
mov
jae
mov
jmp
ret
or
jmp
dec
xchg
inc
pusha
popa
out
fsubr
sub
das
lret
jbe
mov
cmc
dec
mov
jge
xchg
mov
fstps
fs
adc
pop
ffree
adc
push
clc
data16
push
movsb
inc
lahf
int3
xchg
fstps
or
add
ss
addr16
outsb
add
popf
adc
push
sbb
aam
lahf
faddl
mov
mov
mov
inc
pop
jp
push
jle
in
push
cltd
jo
out
sahf
cmp
imul
shr
adc
notl
mov
adc
jle
cld
imul
xor
fistl
lret
xchg
mov
add
popa
inc
mov
cs
rorl
imul
in
icebp
loop
inc
sbb
lcall
sbb
mov
aaa
pushf
adc
dec
insb
test
ss
es
push
imul
subl
push
pop
dec
loop
and
inc
inc
daa
xchg
adc
cmc
cmp
jge
in
xor
sbb
js
mov
data16
and
test
arpl
jp
cltd
and
js
stos
cmp
jge
out
mov
int
sbb
nop
outsl
or
outsl
cs
or
mov
movsb
jns
lea
pusha
sbb
mov
mov
adc
dec
aad
lea
imul
sbb
push
mov
shlb
outsl
stos
jge
mov
shr
mov
adc
addl
pushf
mov
stos
cmp
subb
fstpt
mov
test
loopne
jbe
daa
rcrl
imul
in
xchg
rclb
rcrl
sub
iret
lods
out
push
mov
push
cmp
pushf
or
loope
jmp
movsb
cltd
ret
push
cmp
movsl
std
sub
clc
fcmovnu
mov
mov
sbb
int3
mov
jnp
pop
das
adcb
incl
mov
stos
leave
dec
out
out
pmaddwd
mov
or
sub
aam
mov
sbb
pop
fsts
scas
imul
jb
leave
sub
fnsave
mov
xor
popa
imul
adc
add
sub
dec
sbb
inc
inc
mov
pop
sbb
mov
jo
or
lcall
jns
jns
xchg
cmp
fildl
imull
dec
push
lcall
mov
push
les
int
int3
loope
lods
mov
fdivp
jb
mov
pop
xor
test
mov
aas
xchg
lods
sub
stos
push
xor
dec
into
lds
adc
jbe
adc
mov
pop
pop
mov
mov
push
hlt
fldl
mov
lods
pusha
popf
into
dec
add
or
fildll
add
inc
dec
ljmp
jle
mov
out
gs
sbb
fdivrl
sbb
ds
fisttpl
push
inc
xchg
sbbl
xchg
and
jnp
push
dec
jp
ffree
hlt
lods
sbb
jl
xor
jno
cwtl
xor
fwait
cmp
lds
sbb
xchg
bound
pop
shl
das
pop
sub
in
mov
aam
push
test
push
insb
lcall
inc
xchg
shll
aad
pop
out
push
cmc
leave
repz
xor
dec
cmp
mov
mov
sahf
jae
cli
mov
out
push
push
sbb
aaa
cmp
call
add
popf
call
bound
cmp
push
mov
sub
mov
and
ret
mov
xlat
pop
andl
push
or
dec
add
jge
stos
jno
call
inc
les
sbb
or
aad
inc
adc
sub
mov
fwait
outsb
orb
insb
iret
les
or
or
cmp
cmp
lds
ljmp
push
xchg
push
aas
push
adc
mov
inc
fld
out
cmp
or
ret
mov
insl
pushf
loop
ret
into
lret
add
fmul
sarb
mov
testl
inc
repnz
addb
out
mov
jb
sbb
ret
push
adc
mov
insl
mov
mov
jb
imul
and
push
or
mov
cmp
aam
jne
aaa
pop
add
mov
test
and
mov
pushf
imul
testl
dec
out
lock
test
imul
jnp
shrb
xchg
fistl
popa
shll
and
pop
mov
jle
and
imul
mov
ss
mov
aad
push
push
rclb
adc
fxch
fs
and
aaa
dec
pop
pop
leave
ja
add
xchg
test
cli
pop
out
aad
iret
and
adc
mov
push
rcrl
hlt
or
fidivl
push
jge
nop
daa
and
push
daa
mov
or
cmc
sub
push
and
shl
pop
out
rcll
and
mov
xchg
mov
not
fwait
hlt
in
outsb
dec
ljmp
mov
and
push
inc
jle
lcall
sbb
js
mov
dec
mov
fucomi
pop
das
shrb
xor
cld
int
xchg
mov
xor
clc
xor
call
out
sbb
std
cmp
cmc
adc
fsts
and
lea
loope
fucomip
lea
mov
mov
aas
std
out
sub
call
dec
clc
scas
mov
or
mov
sbb
or
filds
mov
dec
scas
incb
xor
sbb
cmpsl
sub
outsb
adc
lret
adc
loop
fisubrl
fcoms
mov
loope
adc
mov
jns
movsl
jge
stc
mov
cmpsl
cmc
std
out
ss
pop
push
ss
clc
lcall
fstpl
mov
jle
inc
mov
mov
jmp
imul
ret
dec
cli
pop
bswap
sti
jp
pop
pushf
inc
clc
and
loop
adc
dec
mov
je
add
shrb
pop
lret
das
pusha
xor
push
push
inc
jno
loope
fldl
jp
sbb
inc
cwtl
aam
inc
orl
arpl
push
mov
xor
cmpsb
or
mov
jmp
sub
clc
pop
lret
mov
aam
fmulp
scas
dec
jae
or
je
in
cmpsl
imul
idivb
xchg
inc
add
xor
mov
sub
stos
xor
push
push
fsts
cmpsb
cwtl
mov
or
aam
repz
or
aaa
dec
mov
repz
inc
daa
les
and
xor
ljmp
call
xor
lret
mov
mov
dec
lea
xor
mov
inc
mov
out
scas
mov
mov
sub
adcb
push
shlb
push
leave
xchg
dec
mov
sub
jno
stos
pop
adc
fnstcw
ljmp
ret
mov
inc
rep
cmp
rcr
and
lods
fimull
jns
xchg
test
lahf
test
mov
and
das
adc
test
mov
mov
mov
jno
mov
sbb
pop
clc
call
mov
shll
mov
mov
out
push
loop
mov
adc
mov
add
movsl
std
mov
jmp
insl
sarb
or
insl
negl
sbb
stos
mov
es
cld
repz
lds
pop
mov
mov
aas
stos
hlt
lret
fdivrs
aad
or
pop
xchg
test
push
jmp
out
arpl
into
stos
lods
notb
sbb
and
xchg
xchg
mov
jecxz
mov
mov
movsl
jno
cmpps
cmp
push
jge
jg
lea
dec
jg
pusha
sbb
negl
inc
xchg
mov
loope
fsubr
push
mov
je
sub
insl
loope
ficomps
jbe
popa
aas
into
lret
out
fs
add
cmp
sbb
out
out
mov
sub
lcall
outsl
fidivs
pushf
int3
scas
ret
add
jne
shr
jno
pop
movsb
dec
scas
out
movsl
mov
stc
popa
inc
cli
addr16
cmp
dec
inc
hlt
push
mov
and
arpl
add
sbb
or
enter
sbb
adc
leave
xor
stos
mov
jne
sub
scas
xor
out
xchg
cmc
pop
popa
divb
push
mov
inc
inc
fldenv
jge
jl
push
test
mov
into
ret
fildll
data16
or
test
shrl
ja
in
insl
sbb
mov
pushf
test
xchg
insb
imul
shll
push
xor
dec
jecxz
xor
push
lods
pop
mov
xchg
lahf
and
sbb
jle
shr
clc
push
mov
js
pop
inc
adc
popa
sbb
nop
repnz
or
xor
pop
inc
popa
sub
lcall
push
pop
les
movsb
mov
xchg
test
cmp
dec
adc
xor
mov
sbb
pop
lock
mov
push
fidivl
mov
mov
sub
jg
or
xor
je
add
fs
xchg
or
cli
lret
cmp
mov
xchg
pop
outsb
sarb
bound
popf
out
nop
sbb
sub
cmp
mov
leave
repnz
cs
rclb
jno
pusha
and
push
sub
imulb
out
xor
cs
divl
push
out
scas
aam
inc
pop
pushf
and
cmp
push
sub
sub
mov
bnd
stc
or
cmpsl
lret
jns
cmp
lahf
pop
repnz
int3
xchg
mov
add
push
mov
cmp
cld
and
jge
sbb
push
iret
xor
ds
fwait
in
in
jp
inc
mov
adc
mov
push
mov
jg
jecxz
adc
mov
cs
ficompl
xor
sub
dec
or
jp
and
lret
jae
aas
adc
test
aas
dec
nop
pop
dec
mov
dec
out
add
mov
adc
mov
add
js
aam
cmp
fidivrs
or
filds
ret
mov
or
push
rcrl
mov
je
push
mov
mov
gs
rcrl
push
loopne
sbb
fucomi
test
arpl
lret
nop
cld
adc
mov
ret
dec
mov
ret
mov
or
adc
scas
pop
and
ljmp
sbb
enter
aad
in
mov
daa
or
aad
daa
fldenv
arpl
call
xor
jae
mov
push
imul
xchg
cmp
and
testl
mov
in
aaa
mov
xor
addr16
add
insb
sub
push
pop
xchg
insl
lcall
js
adc
mov
out
lahf
push
in
dec
movsl
xchg
inc
mov
repz
aad
outsl
sahf
ror
jle
insb
add
or
into
leave
jb
push
xchg
arpl
mov
pop
sahf
mov
inc
mov
mov
sti
call
adc
mov
xchg
xchg
inc
in
xchg
pop
test
push
and
les
mov
inc
out
dec
inc
dec
sub
sub
and
loopnew
je
xor
pop
shrl
mov
or
ds
aaa
xor
jmp
and
adc
mov
inc
xchg
sti
shl
dec
rcll
pushf
roll
pop
cwtl
mov
insb
sbb
std
pop
mov
lea
push
sub
pop
insb
xchg
adc
mov
jnp
xchg
dec
push
bound
sub
pop
test
push
push
or
jne
nop
pop
xor
test
andl
repnz
ds
iret
lock
arpl
loope
shlb
add
push
xchg
pop
in
repz
adc
sub
ror
dec
dec
int
xlat
popf
push
and
add
fwait
int3
test
shrb
mov
mov
test
sub
js
outsb
pop
lea
fs
lret
xchg
jbe
mov
test
mov
sahf
fldenv
lret
cmpb
or
adc
aaa
dec
mov
insb
dec
dec
stos
inc
dec
and
mov
or
adc
jp
jg
lods
mov
aad
xlat
cmp
leave
pushf
mov
outsb
aas
fmul
in
xorb
or
sub
adc
add
or
out
ds
jg
pop
popf
push
mov
cmp
push
push
jb
xor
fisttps
sub
lret
and
arpl
fwait
xor
out
mov
or
fldt
js
icebp
aas
push
push
pop
shlb
les
xor
xchg
xchg
mov
sub
add
sbbb
aad
das
enter
jg
xor
dec
xlat
xchg
dec
add
push
pop
ret
cltd
jg
stc
dec
cmp
cli
dec
clc
xor
mov
push
inc
stc
shll
adc
mov
test
push
pushf
and
jae
jo
add
mov
xor
pusha
rcrb
fwait
xchg
loope
in
mov
mov
inc
cmp
jb
sbb
mov
ljmp
aas
jge
sub
push
mov
out
sbb
pop
lea
dec
sbb
into
mov
mov
nop
jno
jne
mov
xchg
popa
repz
out
jle
adc
sub
ljmp
js
pop
ja
inc
lret
fsubl
mov
fadds
push
fidivs
lret
xchg
cli
jge
mov
cmpsl
jge
imul
push
rcrl
sbb
dec
js
xor
stos
push
out
loopne
pop
fmuls
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
xchg
lock
cmc
fnstsw
call
clc
out
inc
adc
and
mov
and
adc
rcrl
and
sahf
das
jno
xchg
jmp
push
sub
shlb
test
popa
pop
ret
jp
xor
mov
xchg
jl
shrb
loop
fsts
sub
cmp
in
lret
and
dec
and
int
sbb
enter
mov
jns
xor
jge
inc
ret
pop
add
cld
fwait
cmovle
jmp
sub
cmp
imul
js
and
fwait
jecxz
xor
add
and
ficomps
into
jp
and
popf
aad
or
mov
je,pt
mov
loopne,pn
inc
push
mov
fstl
mov
inc
mov
insb
push
mov
push
mov
and
mov
push
test
pop
add
outsb
or
cmpl
xchg
iret
push
imul
push
cmc
xchg
insl
push
jecxz
sahf
mov
dec
cli
add
js
mov
dec
adc
sub
iret
adc
or
push
int
jnp
pusha
and
add
rcr
jl
xlat
ficomps
push
orl
aam
cmp
nop
push
jae
leave
mov
sahf
les
xchg
les
inc
mov
in
data16
ret
add
pop
inc
xlat
xchg
fcomi
and
adc
add
fdivl
sub
dec
cmc
jge
jle
call
cmp
sbb
jo
push
test
sti
dec
dec
sub
mov
lock
orb
adc
cmpsb
xchg
sar
std
out
push
or
das
cmp
sub
dec
mov
ds
push
jb
mov
in
inc
dec
stos
sub
in
jmp
cmp
ja
push
push
insl
jg
testl
mov
lods
add
pop
out
jbe
xor
hlt
push
ss
cltd
cmpsb
dec
push
sub
xchg
add
jbe
xlat
inc
sahf
dec
push
dec
arpl
sub
fmull
addr16
in
dec
enter
stos
pop
push
call
cs
cmp
mov
inc
or
iret
xchg
mov
xor
jge
push
hlt
pusha
jno
xchg
or
sub
cmpsl
mov
inc
insl
filds
test
xchg
pop
and
jg
fs
sahf
je
mov
dec
adc
test
xlat
leave
fsts
cmp
xorb
out
cmp
scas
sbbb
ret
dec
add
shll
mov
xchg
lock
jl
out
cmp
nop
xor
add
adc
mov
sub
lods
fldcw
adc
pusha
xchg
jp
ficoms
sbb
mov
and
cmpsb
jbe
rcrb
xor
sar
andl
xchg
and
or
inc
add
insb
mov
adc
and
xchg
movsl
mov
push
add
pop
xchg
or
or
pushf
jbe
cltd
out
mov
or
push
leave
sbb
mov
cli
imul
xchg
das
loopne
xchg
dec
xor
push
mov
inc
push
pop
lock
xchg
dec
fnstsw
fwait
scas
stos
pop
jb
mov
mov
aaa
mov
jge
aam
fcomp
fbstp
push
xor
fcomp
seto
popa
push
inc
jmp
test
xor
sub
inc
dec
popa
stos
in
fists
ret
cltd
sarb
sbb
lods
aam
inc
mov
adc
jno
fstpt
mov
fs
and
pop
movsb
mov
lock
push
repz
mov
xorl
lahf
fs
mov
dec
mov
jo
rorb
adc
xor
xchg
cmp
lods
aad
in
add
mov
cwtl
call
or
int3
push
cmp
fs
aad
in
jl
jae
cmp
mov
jp
mov
fsubs
fs
xchg
push
pop
mov
push
mov
test
xchg
inc
vpunpckhbw
sbb
mov
push
dec
hlt
inc
or
out
or
jmp
lds
or
and
pop
mov
or
jae
mov
or
mov
cmp
push
xchg
in
mov
addr16
xchg
gs
lods
std
lea
mov
insl
and
or
cmc
adc
jb
js
mov
push
jp
add
bound
sbb
push
mov
sbb
jbe
pop
pusha
xchg
repz
adc
inc
outsl
jne
pusha
iret
aas
stos
std
out
push
cltd
fwait
push
jecxz
clc
ret
mov
shll
xor
dec
cmc
mov
in
xor
pop
gs
jp
jae
add
xchg
jnp
xor
cltd
ljmp
add
dec
inc
out
arpl
jb
push
mov
push
lret
jnp
dec
ror
pop
shrb
push
or
mov
inc
cmp
mov
loope
es
cli
stos
ret
cli
push
mov
jmp
stos
sbb
popf
mov
sar
xor
decb
loopne
jbe
xchg
cmpsl
or
bound
mov
in
lods
nop
mov
push
sbb
andnps
pop
mov
das
xchg
mov
je
in
ljmp
sar
and
in
bound
bound
outsb
daa
push
andl
es
fdivl
pop
in
sub
cmp
mov
out
dec
out
outsl
daa
sub
mov
or
sahf
push
test
ja
cmpsb
jo
adc
js
lahf
dec
insl
pusha
mov
jle
pop
mov
xor
shr
push
stc
mov
loopne
into
out
or
cmpsl
xorb
into
movsl
in
lret
lods
mov
repnz
push
adc
sub
movsl
sub
es
je
rorb
fldenv
pop
mov
sti
popa
mov
mov
inc
mov
pushf
out
xchg
cmpsl
in
pusha
mov
mov
sahf
stc
or
push
jg
test
mov
push
inc
and
add
mov
mov
in
les
jge
sbb
push
mov
cmpsb
pop
leave
aaa
mov
mov
inc
mov
shlb
mov
movsl
ret
fucomp
stc
cli
ret
mov
sub
jae
mov
xor
xchg
das
cltd
or
call
and
sti
std
stos
cmc
and
dec
xor
dec
pop
jge
pop
pop
stos
jl
shlb
pop
clc
mov
xchg
out
sbb
fstpl
push
into
sahf
popf
loop
aad
iret
jg
call
dec
xchg
pop
push
push
in
lods
movsl
dec
enter
mov
or
xchg
adc
add
jmp
imul
das
adc
inc
jae
adc
jo
icebp
shrl
cmpsb
pop
cmp
fildl
fldcw
inc
push
rcrl
push
pop
cmc
aad
mov
pop
repz
rcll
adc
add
mulb
aad
mov
out
cmp
jmp
pop
ljmp
lods
sbb
arpl
aad
leave
lock
ds
cmp
add
clc
ret
hlt
mov
xor
or
xchg
rorb
test
mov
int3
adc
lret
sub
xlat
out
mov
push
push
jl
mov
scas
cmp
inc
rorl
mov
pop
xchg
push
mov
test
loopne
mov
jno
call
hlt
jno
stos
imul
add
mov
scas
xchg
lods
xor
arpl
and
and
mov
ficoml
imul
in
loope
dec
ds
sub
out
mov
inc
push
push
in
or
call
call
imulb
xlat
sbb
jae
mov
xor
inc
jo
mov
mov
inc
add
roll
repnz
add
lods
icebp
cmp
test
daa
cs
arpl
cmpb
xor
out
aad
adc
mov
mov
xor
fildll
dec
sti
or
rcl
aaa
aaa
or
imul
lods
shll
and
dec
mov
fidivl
bound
pop
xor
aam
jl
pop
or
mov
cmp
jns
ja
mov
xchg
fists
testl
mov
outsl
fwait
arpl
sbb
and
lcall
fldenv
das
push
pop
into
add
or
xchg
push
push
rcrl
jmp
ror
fdivs
ficoms
scas
aam
iret
dec
mov
inc
rolb
sbb
fwait
inc
into
sbb
rcrl
add
cmp
mov
movsl
xchg
femms
mov
test
sbb
mov
sbb
cmc
stc
mov
test
test
or
xlat
stc
jl
js
add
mov
sub
stos
and
push
lea
mov
andl
int3
fs
xchg
mov
pop
pop
mov
test
and
dec
mov
clc
arpl
fwait
loopne
mov
hlt
cmp
or
mov
gs
add
adc
mov
iret
add
dec
out
icebp
sahf
jp
int3
cltd
push
cmp
fnstsw
mov
jnp
pop
sbb
jmp
ficomps
mov
adc
cmp
ljmp
inc
aaa
push
push
loop
icebp
mov
jl
in
push
fimuls
sahf
les
sub
adc
jnp
sub
inc
sub
xchg
jbe
push
fucomip
popa
sbb
in
stos
cld
sti
add
jecxz
or
loopne
or
das
ficomps
mov
lock
test
adc
pushf
lahf
cmpl
cmp
stos
divl
mov
fs
enter
pop
stos
jae
mov
sbb
cmp
push
or
lahf
les
and
xchg
mov
jns
mov
and
xlat
adc
mov
addl
incl
fimuls
jmp
sbb
rorl
xor
je
std
mov
test
aaa
mov
pop
lea
mov
mov
hlt
or
add
iret
sub
inc
js
cs
jmp
out
stc
lret
jecxz
test
push
gs
clc
loope
jge
iret
stos
jp
fwait
push
adc
xlat
jp
dec
mov
ret
aad
cmpb
mov
cltd
loopne
inc
sbb
jle
dec
pop
inc
adc
push
cmp
xchg
mov
insb
xchg
lods
popf
add
jae
pushf
add
jne
jl
xchg
push
inc
mov
mov
enter
cmp
adc
adc
pop
fiaddl
inc
les
jmp
ret
fstpl
into
mov
sbbl
aad
xor
pop
stos
push
pop
mov
outsl
mov
jne
push
inc
into
scas
or
jne
xchg
insl
push
shlb
mov
mov
dec
adc
nop
aas
rolb
xchg
xor
in
insb
bound
sbb
insl
mov
inc
inc
inc
sti
adc
test
and
lods
outsl
shlb
mov
arpl
pop
push
jge
mov
sbb
sahf
cs
push
xchg
sub
jns
mov
andb
mov
add
pop
xor
rorl
push
fwait
out
push
mov
fcoms
jecxz
int
sbb
push
cmp
lds
inc
inc
sub
mov
imul
push
mov
fdivrl
mov
sub
in
push
mov
loopne
fdecstp
push
xchg
and
or
inc
inc
cmp
enter
jne
xor
xchg
dec
insl
or
mov
sti
and
int3
and
mov
jge
mov
or
cmp
daa
test
push
or
jne
mov
push
out
xchg
mov
lahf
fidivrl
add
test
sbb
pop
repz
stc
mov
rorl
push
loop
addr16
sti
insb
mov
pop
push
hlt
jg
lret
rolb
push
or
sub
jl
adc
sbb
mov
loop
mov
jne
aad
sub
addr16
mov
not
xorl
sub
and
lea
mov
mov
stos
pop
inc
test
fisttps
add
out
cmp
xlat
mov
lret
xchg
dec
mov
jg
imul
in
sbb
mov
fsubrl
int3
sub
sbb
xchg
std
jb
adc
xchg
popf
dec
push
notl
icebp
xchg
addb
push
sbb
mov
idivl
or
imul
imul
aas
ret
aaa
push
adc
cmp
lock
and
xchg
cmpsb
sbb
mov
std
cmp
cmc
sub
push
add
and
xchg
jmp
inc
shll
repz
out
pop
insl
mov
sub
sti
iret
add
sahf
inc
ljmp
push
jbe
jmp
push
jno
xchg
mov
scas
sbb
popa
mov
jle
popa
mov
das
jae
cmp
add
xchg
dec
xchg
mov
mov
loopne
cwtl
dec
cmp
cmp
lahf
stc
mov
loop
movsl
push
mov
stc
pop
xor
lret
adc
lea
mov
cmp
push
push
dec
stc
cltd
adc
dec
dec
rclb
adc
bound
pop
or
sub
or
mov
or
or
cld
and
cmpsb
pop
sub
dec
rcrl
into
add
sbb
adcl
sub
push
rcl
call
push
inc
and
ret
xchg
inc
and
pop
aaa
in
dec
sar
mov
xor
ljmp
test
sbb
or
push
or
cmc
js
popf
mov
arpl
std
cmpl
mov
fistps
fistpll
adc
adc
xor
pop
mov
pop
fs
push
iret
inc
mov
test
enter
pop
iret
fistps
cld
jge
cmp
dec
jecxz
mov
adc
adc
jecxz
xchg
mov
xor
cs
cmpl
jecxz
hlt
push
outsl
movntq
or
imul
ret
in
icebp
sarb
mov
test
xchg
sub
aad
negl
in
xor
jbe
mov
arpl
pop
jp
enter
mov
jmp
mov
push
push
ficoms
aad
push
lcall
pop
fidivs
cmp
mov
jns
push
sbb
aas
jno
or
inc
xor
or
pop
push
xchg
test
int3
in
sbbl
sbb
std
rcrl
imul
stc
cltd
lret
sbb
cmp
mov
imul
rorb
lods
clc
adc
xchg
test
jns
outsl
cmp
idivl
mov
jp
sbb
sbb
jp
mov
aad
in
les
daa
pop
mov
scas
push
mov
scas
repnz
in
rcl
sub
sub
and
and
fistpll
jmp
xor
mov
xor
mov
xor
xchg
or
loop
cltd
pop
pop
sbb
push
mov
daa
push
xchg
insl
add
cmc
stos
aad
push
aad
wbinvd
lret
fimull
mov
push
jo
mov
dec
pop
out
xchg
or
jne
sbb
cmp
cli
into
cli
mov
bound
or
add
sbb
addr16
mov
mov
inc
mov
int3
ds
lods
cwtl
sbb
mov
aad
or
xorb
sub
sub
adc
std
sbb
sbb
add
cmp
mov
testb
loop
cmpsl
cmp
scas
sub
and
sbb
fcomi
cmp
xchg
cs
out
ret
mov
jle
cmpb
popf
mov
fisubl
pop
movsb
pushf
jne
jmp
in
add
add
enter
jg,pn
movsb
cmp
mov
push
and
jge
xchg
repz
add
cmpb
jnp
jecxz
aam
or
out
arpl
shrb
inc
stos
or
push
das
push
dec
inc
cmp
hlt
inc
sti
mov
add
stos
scas
inc
sahf
cmp
adc
or
mov
cmp
imul
or
out
mov
int3
mov
cmpb
cwtl
sub
in
adc
leave
jle
push
xchg
add
je
outsl
xchg
push
xor
pop
daa
cmp
xor
push
js
mov
cmpsl
or
fnstcw
sub
leave
fwait
popa
pop
jnp
ss
cltd
hlt
add
or
ljmp
repz
mov
jns
mov
in
mov
add
jmp
lods
add
aas
mov
sub
rcll
cmp
imul
xchg
loop
ficomps
push
mov
stos
das
sbb
gs
andb
repnz
stos
repnz
and
jnp
cmpsl
addb
out
mov
movsb
stos
ret
ljmp
mov
lods
mov
fdivl
mov
test
mov
dec
cld
dec
pop
add
in
dec
jo
std
arpl
pop
int3
mov
faddl
popf
into
pop
and
das
sbb
cli
and
mov
push
ds
loope
cmp
xchg
sub
in
cmp
push
pushf
push
std
pop
test
mov
push
cmp
adc
mov
lock
pop
loop
add
movsb
loopne
roll
lods
shlb
negl
int
pop
jae
rolb
lret
jbe
xchg
repz
neg
fs
mov
arpl
xchg
adc
fwait
xor
lea
lret
rcll
xor
scas
enterw
js
add
popf
outsb
sub
add
or
sahf
mov
dec
cmpsl
clc
add
sarl
or
inc
jmp
movsl
sub
fyl2x
push
jae
pushf
testl
mov
ficompl
mov
jge
mov
outsb
xchg
popl
clc
in
outsl
sub
jmp
cld
xor
mov
dec
pop
je
hlt
inc
inc
mov
out
arpl
int
cmpsb
mov
out
pop
call
xor
aaa
mov
mov
xchg
sub
icebp
mov
sti
sbb
mov
push
js
stc
mov
xchg
dec
sbb
out
dec
loop
fxsave
rol
lea
mov
test
or
jnp
pop
add
cmp
sub
pushf
xchg
pop
flds
cmpsb
pop
testl
lahf
in
cltd
mov
cli
jnp
adc
clc
or
pop
gs
sbb
bound
inc
cmp
add
mov
jns
mov
aaa
shll
ss
sar
jb
dec
adc
xlat
push
mov
and
mov
pop
push
dec
jmp
adc
pusha
ret
insl
pandn
jmp
jae
repnz
mov
ret
std
adc
mov
mov
testl
fstps
fidivs
mov
sahf
pop
and
push
inc
cmp
pop
mov
fstpl
loop
aam
pop
mov
cmpsl
xor
mov
int
sub
cmpsl
mov
movsb
fists
pushf
scas
gs
pop
pop
push
sbb
or
cmp
dec
aaa
aaa
xchg
pusha
cmc
xchg
mov
xchg
jmp
cwtl
xchg
and
cli
mov
inc
jecxz
xchg
idiv
mov
aad
or
mov
or
pop
lods
enter
jmp
sbb
aas
imul
icebp
and
pop
test
mov
aaa
out
aam
pop
mov
xchg
filds
repnz
mov
sets
inc
mov
fs
fimull
arpl
mov
adc
inc
push
movsl
ja
adc
vcvtps2pd
xlat
push
pusha
sbb
adc
bound
out
cld
fisttpl
adc
lcall
mov
gs
rolb
aas
scas
mov
inc
dec
push
push
mov
push
push
lcall
fstpt
mov
dec
out
fistpll
or
test
pop
sub
adc
cmp
cs
dec
imul
call
insl
out
movsb
mov
fidivl
pop
mov
test
aas
push
pop
sbb
dec
fsubrs
mov
adc
add
popa
fsubl
or
jl
adc
push
xor
aaa
leave
adc
jae
cltd
scas
jg
or
jbe
ss
cmp
bound
shrb
mov
lock
cmp
outsb
push
and
add
cmpsl
and
xlat
mov
stos
addr16
rorl
xchg
mov
int
imul
mov
xchg
dec
iret
roll
sub
push
test
cmp
lock
sub
xor
stc
fldt
movsb
imul
les
adc
xor
pop
add
pop
mov
mov
in
imul
push
jns
mov
cmp
insl
and
nop
lods
xchg
scas
cmp
stos
testb
imul
xchg
dec
inc
js
loopne
out
imul
xor
aam
jge
stos
or
into
or
pop
mov
pop
push
lahf
xorb
push
cli
and
fwait
mov
rcrb
ret
ljmp
add
ljmp
out
in
cmp
cmp
jg
daa
sbbl
movsb
sbb
mov
mov
test
fcompl
xchg
sub
cld
imul
add
xlat
or
xor
mov
push
xor
loop
fadd
push
inc
and
aaa
pop
push
sub
jecxz
test
mov
push
mov
xchg
dec
sbbl
fisubs
ss
in
leave
inc
loop
out
dec
xchg
gs
inc
cmpsb
mov
cmp
lret
mov
mov
lret
ficompl
mov
int
loopne
push
sub
xor
or
dec
in
and
add
mov
jle
sub
add
shrb
sbb
aaa
push
sub
shlb
push
mov
fcomps
in
notb
push
loope
cmp
cltd
lahf
mov
scas
cld
ds
loope
icebp
cmc
xor
int
fs
push
les
js
push
cli
push
cmp
in
mov
ljmp
jbe
jbe
imul
push
ja
and
leave
mov
call
jle
test
add
je
subl
incl
pop
adc
in
mov
xchg
cmp
cmc
unpckhps
mov
test
mov
movsl
mov
sarb
outsl
push
out
aad
xchg
repz
adc
int3
xor
adcb
lret
jmp
xchg
or
loop
je
daa
arpl
push
dec
fldl2e
jnp
pop
pushf
push
repz
lds
xchg
jno
mov
xorl
scas
mov
mov
dec
mov
mov
loop
mov
fwait
add
in
fcomps
adc
xchg
insb
dec
push
inc
xor
push
sbb
orl
imul
sub
push
push
mov
testl
xor
inc
xor
out
flds
loopne
or
add
cmp
lds
movsl
dec
stos
mov
js
xor
lahf
xorl
lcall
xor
insl
jle
cmp
les
dec
fildl
adcb
cmp
xor
into
daa
inc
xor
mov
xor
mov
sub
dec
sahf
pop
jge
ljmp
xor
test
cmp
sub
jecxz
lds
pop
cmp
sub
xchg
bound
aad
pop
stos
jmp
jne
xor
adc
sbb
pop
mov
inc
sbb
loope
pop
xchg
pop
and
rcll
mov
ds
lahf
fcmovne
and
movsb
jl
xchg
mov
mov
sbbb
sub
cs
scas
je
push
fwait
push
lcall
pop
andl
into
aas
jmp
cmpb
inc
push
add
bound
enter
rolb
xchg
inc
push
jns
sub
xor
lahf
sbb
int3
mov
sub
test
add
test
xor
inc
sub
pop
ret
gs
xor
dec
aad
cli
mov
int
push
imul
push
iret
mov
add
cs
outsb
fmull
in
push
cmp
pop
cvtps2pd
js
inc
xor
cmpb
arpl
xchg
mov
shrl
mov
lcall
mov
shr
sbb
rorb
pop
rcll
test
test
cli
adc
jmp
push
mov
cld
mov
js
loop
sti
add
hlt
sub
push
test
arpl
sbb
dec
or
cmp
xchg
js
idiv
xchg
jmp
aam
cmp
jae
pop
movsb
movb
orb
fisubs
cltd
outsb
push
outsl
add
das
in
jb
push
jmp
and
xor
pop
loopne
inc
ss
pop
and
or
dec
fcomps
sub
or
xchg
jo
mov
push
sbb
loopne
outsb
pop
adc
mov
jle
sbb
mov
xchg
ds
mov
pop
out
aaa
push
lret
xchg
inc
shll
and
fdivl
adc
rorb
das
popf
ret
push
rcrl
adc
test
push
ret
add
ja
scas
xor
jbe
sbb
dec
or
les
int
ja
movsb
push
in
sub
pop
xchg
add
add
pop
icebp
sub
sahf
stos
inc
fdivs
dec
call
pop
fisttps
iret
scas
pushf
imul
adc
js
aad
stos
add
daa
out
and
xchg
fmuls
aas
mov
cmp
mov
or
push
push
adc
iret
adc
mov
or
xchg
dec
ljmp
leave
xchg
cmp
jbe
ficomps
lcall
pop
cs
call
xor
add
mov
adc
aas
orb
push
in
pop
je
dec
fdivs
jl
push
fsts
jno
shlb
dec
and
xor
out
or
add
sub
pop
mov
pop
shrl
adc
mov
std
bound
stos
test
inc
mov
add
push
shl
sub
pop
movsl
inc
icebp
pop
fs
in
xchg
cwtl
scas
jae
adc
ret
outsl
push
fucomi
jo
push
hlt
cmp
jb
and
jge
pop
xlat
adc
inc
test
in
cmc
outsb
shl
add
movnti
out
pop
cmp
push
xchg
cmp
adc
pop
sbb
cwtl
mov
or
imul
jmp
in
mov
call
mov
jecxz
dec
rclb
mov
adc
fwait
mov
xchg
pushf
daa
in
nop
lahf
mov
mov
push
mov
xchg
mov
nop
nop
fstp
jno
fbstp
sub
mov
hlt
test
scas
or
push
cmpsb
aam
lds
inc
sub
jae
mov
xchg
push
dec
sub
dec
pop
bound
sbb
repz
aam
push
or
lea
popa
jg
dec
int
stos
dec
sbb
adc
lds
in
xor
sub
and
dec
xor
pop
mov
cmp
mov
sub
pop
mov
dec
sub
xor
jmp
or
inc
dec
rcrl
jg
push
push
pop
cmp
sub
outsb
sub
ja
xchg
inc
xchg
jns
sti
xchg
mov
cmpsb
jo
loopne
xlat
push
in
sub
and
or
or
adcl
dec
les
mov
out
dec
fisttpll
cmp
xor
ret
scas
rcrb
ret
fadds
pop
aaa
ss
inc
jns
push
dec
jns
mov
mov
into
sbb
add
sar
jne
inc
xchg
inc
addr16
push
in
je
or
and
pop
nop
and
sbb
in
out
jbe
sbb
sub
sbb
lret
mov
jno
mov
ss
lds
or
imull
mov
and
cmp
sbb
mov
in
outsl
mov
inc
test
pop
xchg
xchg
mov
cmp
sub
mov
fmulp
loopne
mov
aas
test
fnstcw
clc
push
jge
into
xor
push
fidivs
mov
sub
push
stc
mov
adc
aad
dec
xor
insb
pop
dec
pop
adc
or
in
cmp
adc
test
les
jp
scas
sub
es
dec
lds
cmp
repnz
outsl
sbb
rolb
lret
xchg
jge
outsb
and
into
sbb
cs
sub
mov
dec
push
add
or
into
movsb
into
test
or
movsb
add
sti
pop
adc
mov
cltd
mov
dec
push
jbe
loope
icebp
scas
sub
mov
mov
add
push
les
dec
inc
icebp
sub
data16
cmp
ret
in
dec
stc
aaa
push
loope
mov
fidivl
filds
mull
cmpb
and
cs
cmc
je
je
push
and
pop
push
in
push
out
xchg
cmp
push
mov
sub
subl
stos
xor
mov
mov
subb
sub
cmp
mov
imul
lahf
and
ret
sarb
lock
push
sbb
outsl
mov
push
test
jb
jo
jge
jge
xchg
dec
lock
outsb
xor
jmp
clc
push
imul
addr16
daa
sahf
js
pop
aas
mov
jecxz
jg
stc
iret
pop
xor
dec
inc
adc
fcmovb
xor
out
lahf
shrl
mov
and
in
scas
push
mov
fwait
fwait
jmp
imul
mov
ret
into
outsb
out
xchg
pop
loope
push
std
cmp
mov
sahf
aam
adc
mov
add
jnp
inc
mov
test
xchg
out
push
ss
imul
adc
ljmp
out
xchg
loopne
mov
ds
testl
lea
hlt
dec
xlat
pop
je
mov
out
pop
xor
inc
movsl
jns
pushf
pop
xorb
dec
jno
pop
or
pop
sbb
pop
pop
data16
incl
fwait
push
jp
insb
mov
mov
mov
mov
cld
dec
mov
inc
mov
stos
dec
pop
mov
mov
and
cmp
lods
leave
push
clc
inc
in
xor
aad
nop
fdiv
push
pushf
je
jne
inc
jecxz
or
sub
sbb
mov
imul
pop
hlt
xchg
icebp
popa
imul
cmpsb
dec
cmp
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
jp
rcrl
scas
dec
and
incl
sbb
ret
sub
inc
lret
sub
cmp
adc
push
cmp
jecxz
ret
cmp
push
sbb
ljmp
fsubrp
test
cli
sahf
mov
fnop
insl
test
mov
push
jmp
xorb
ss
jb
xor
lea
xchg
call
movsb
xor
push
sbb
iret
addl
sbb
mov
sub
es
mov
pop
add
aam
test
xchg
cwtl
fiaddl
mov
cmp
pop
lods
push
xor
and
and
cltd
inc
int
xor
xlat
push
mov
pop
pop
or
ljmp
aaa
cmc
loop
cmp
mov
sbb
mov
adc
xchg
je
jns
adc
je
sbb
or
stos
add
xchg
fldln2
mov
add
cmove
jns
inc
popa
sub
gs
shlb
pop
out
mov
cmpb
sub
pop
aaa
adc
dec
subl
test
mov
mov
fstpl
push
mov
mov
inc
ljmp
pop
xor
xchg
mov
lds
daa
sbb
clc
xchg
pop
sub
xchg
mov
popa
xor
fdivl
loopne
jg
fstps
into
ret
imul
aas
sub
scas
sub
mov
lock
outsb
dec
cmpsb
mov
scas
ljmp
pcmpeqb
mov
xor
idivb
leave
std
gs
pop
int3
inc
lcall
test
xlat
cmpsb
aam
push
or
mov
push
mov
add
mov
adc
insl
push
syscall
repz
lret
xor
in
cmp
xor
in
sbb
add
divl
shll
pop
mov
jbe
sub
pusha
jne
inc
stos
cmpsl
vsubpd
inc
mov
daa
fwait
xor
xchg
adc
cmc
or
jecxz
and
outsl
push
incb
push
xchg
mov
rol
lods
outsl
addl
das
cs
shlb
jmp
inc
inc
mov
push
repz
push
add
push
imul
shrl
cmpsl
std
push
punpckhbw
sub
data16
sti
xor
dec
imul
lods
les
hlt
add
dec
ljmp
rcrl
scas
push
pop
xchg
out
test
add
add
es
jo,pn
in
sarb
xor
stos
push
lods
mov
mov
sub
jo
addl
outsb
jp
pop
cmp
loope
jl
fwait
push
sub
ds
or
mov
pop
clc
mov
mov
sub
pop
sbb
push
cwtl
xor
int
push
addps
cmc
and
mov
scas
xchg
mov
xchg
adc
cmpsb
mov
neg
js
push
jge
dec
in
lds
mov
ds
dec
push
mov
inc
mov
int3
xchg
repz
in
add
lods
out
jg
push
mov
js
sbb
pop
into
iret
xchg
loope
mov
mov
fbstp
cmp
mov
pop
push
test
push
mov
out
in
shll
jmp
enter
rolb
sarl
and
test
push
push
int
ljmp
add
js
xchg
addb
mov
iret
mov
xor
les
movsl
into
mov
pop
mov
fbstp
test
clc
sub
test
mov
shll
stc
pushf
bound
repz
pop
lods
out
lcall
pop
push
fldcw
fiaddl
mov
ret
loope
dec
sbb
xor
sbb
xor
pop
dec
arpl
jnp
mov
aam
outsb
mov
out
push
aam
pop
push
pop
sbb
push
push
adc
or
cmp
lods
push
push
fisubs
xor
xchg
ror
mov
repz
negb
sub
inc
push
jge
sub
pop
daa
cmp
xor
sub
xlat
cmp
mov
jge
je
je
adc
push
and
sbb
in
xchg
aaa
sub
push
std
mov
jecxz
fsubs
xchg
insb
loopne
xor
lcall
cmp
xchg
enter
lods
inc
xchg
mov
rcr
adc
fsubl
dec
adc
test
add
test
cmp
mov
and
adc
jae
stos
add
lcall
daa
int
sbb
insb
out
cmp
mov
pop
pop
inc
cli
push
push
arpl
push
xor
add
aaa
dec
mov
mov
pushf
pop
inc
xor
push
dec
daa
insl
mov
insb
bound
sti
jp
ja
imul
mov
jecxz
xor
xor
or
mov
add
insl
mov
ffree
test
fisttpll
jle
stos
xor
popa
xor
cmpsl
sbb
mov
fsts
sbb
lcall
cmp
xor
push
test
inc
and
sub
or
mov
mov
leave
rcrb
push
cmp
dec
hlt
push
adc
dec
or
mov
imul
out
fwait
icebp
pop
sub
inc
sub
cmc
xorb
in
loopne
sub
pushf
push
pop
shll
push
xor
xchg
out
aam
loope
adc
mov
cltd
pop
adc
and
inc
es
aas
ss
xor
mov
mov
push
xchg
inc
imul
xor
cmpb
pop
mov
pop
mov
jp
sbb
stc
xchg
xchg
movsb
stos
add
addb
mov
in
ljmp
or
es
or
xchg
cs
mov
jecxz
ret
scas
vpmacsswd
and
sub
dec
cld
lahf
leave
pushf
add
inc
imul
sbb
jnp
push
mov
sbb
mov
or
pop
pop
xor
cmp
fsubrp
cmp
mov
push
shrl
fiaddl
inc
fucomip
mov
dec
out
push
xlat
cs
pop
stos
and
sub
push
cmp
cmpsb
inc
pop
lods
mov
jbe
adc
incl
sub
scas
mov
test
cmp
orl
push
enter
mov
subb
test
xor
iret
cmp
pop
ds
in
scas
mov
sub
fnstsw
xchg
mov
add
jle
jo
cmpsb
test
push
xor
dec
outsb
xor
pop
dec
pusha
dec
jnp
in
add
cwtl
lret
add
cmc
pop
inc
adc
adc
ljmp
fnsave
add
aas
enter
mov
mov
add
sbb
loope
or
inc
cli
and
lea
ret
enter
sbb
mov
sti
push
cmpsl
ja
lcall
xor
rcl
out
and
sub
subb
mov
mov
rcrb
mov
shll
fadds
mov
sti
dec
in
mov
sahf
dec
xor
cmp
sbb
ja
cmc
ja
pop
mov
xor
push
movb
mov
jg
insb
mov
mov
cld
shr
pop
data16
inc
and
jg
xchg
popf
cmp
push
rol
xor
cwtl
scas
jge
mov
fwait
pop
inc
hlt
mov
xchg
hlt
add
mov
sub
fists
xchg
rcr
daa
cmpsb
jecxz
clc
xchg
popa
add
frstor
sbb
les
scas
repnz
mov
jne
inc
push
imul
test
fdivrs
cmpsb
icebp
mov
rolb
dec
ljmp
cld
inc
xor
mov
arpl
inc
or
fnop
sbb
and
and
aaa
add
lret
mov
scas
je
mov
loope
or
outsl
shll
sarb
xor
inc
or
or
loopne
add
sbb
fistl
clc
sub
into
hlt
xor
ja
fwait
lods
xor
cmp
test
dec
mov
jle
jl
nop
xchg
ret
mov
clc
scas
xchg
scas
dec
movsl
cmp
les
mov
in
int
mov
loopne
cmp
cmp
cwtl
xchg
lods
lret
xchg
pop
jge
bound
sbb
addl
pop
in
cli
stos
loop
mov
stos
lea
out
mov
aaa
pushf
sbb
cld
jb
fnstsw
leave
push
xchg
jmp
push
xchg
lock
stc
mov
lret
popf
das
stos
sub
iret
jo
sub
cmp
out
mov
add
mov
mov
cmp
out
add
sbb
ljmp
cli
inc
cs
mov
or
fidivrl
shll
dec
cmp
mov
ss
pop
dec
jbe
xor
push
popl
mov
das
fistpl
sbb
movsb
pinsrw
fwait
push
pushf
jge
cmp
adcb
mov
xor
mov
cmp
shrb
inc
pop
inc
shl
enter
pmulhw
and
cs
scas
inc
mov
xor
cmpsb
int
jae
stos
loope
scas
mov
add
leave
pop
int
clc
sbb
push
push
in
stc
out
clc
aas
cmc
pushf
ljmp
std
lock
cmp
sbb
jmp
sbb
pop
enter
rorb
popf
cwtl
repnz
testb
fadds
call
hlt
ja
int3
mov
jmp
lret
arpl
outsl
rol
push
add
jl
cs
cli
fidivl
stc
pop
inc
out
cmpb
mov
inc
or
js
mov
idivl
mov
mov
inc
movsl
xchg
cwtl
push
dec
mov
dec
jge
stc
or
in
loope
or
je
ja
mov
movsb
xchg
lret
dec
mov
aaa
jo
pop
and
mov
push
inc
insl
mov
insl
filds
jle
lret
xor
test
add
or
push
shlb
popa
jg
in
xchg
clc
mov
mov
xchg
gs
sub
repnz
jnp
loope
daa
lods
sub
push
incl
adc
sub
jge
rcr
cmpsb
jmp
out
rol
mov
jecxz
mov
scas
inc
mov
hlt
cltd
push
lock
int
mov
pop
jecxz
cmc
js
mov
popf
xchg
cmpsb
in
xor
test
lahf
mov
sti
mov
jle
pop
xchg
fsubr
imul
cmp
xchg
and
clc
inc
xor
and
movsb
xor
add
adc
mov
jecxz
daa
movsl
addr16
add
bound
rcr
fdivr
in
je
sbb
int
sub
ds
xor
out
outsb
into
leave
das
pop
push
add
xor
jp
arpl
push
push
cmp
loopne
imulb
outsl
push
int
add
pop
cmp
xchg
stos
sub
xchg
lahf
push
loopne
ljmp
nop
push
aad
dec
mov
jg
cmp
ja
shrl
inc
mov
and
mov
and
push
add
icebp
add
test
inc
dec
incb
push
adc
rcll
sub
cmp
pop
in
call
negl
cmp
aas
pop
shrb
mov
and
mov
push
dec
fstps
mov
rclb
loope
inc
push
leave
adc
pop
sub
mov
imul
insb
mov
fidivs
outsb
xor
cmp
xor
mov
push
push
daa
bound
mov
add
mov
and
cmpsb
cwtl
adc
push
stos
cli
insl
incb
lods
or
xor
mov
mov
jecxz
push
in
and
mov
aas
push
and
push
adc
jnp
mov
xlat
pop
xor
call
fiadds
lds
xor
dec
xchg
dec
inc
int3
movsb
aam
cmpsb
loope
or
and
loop
or
xchg
iret
xlat
out
add
popa
cmpsb
sbb
adc
mov
nop
mov
in
jbe
bound
jecxz
push
fiaddl
mov
std
ljmp
xchg
push
adc
xor
andl
mov
or
pop
test
push
mov
sub
xor
pop
mov
xchg
mov
mov
fisubl
jg
add
jmp
mov
pop
jmp
addr16
fdivs
fs
in
push
xor
iret
stos
mov
sbb
stos
pop
xchg
loope
in
pop
lock
adc
adc
daa
popf
or
pop
fxch
mov
stc
pop
mov
inc
pusha
mov
ds
sub
xchg
xchg
xchg
into
xor
leave
test
arpl
dec
dec
xchg
test
int
in
in
mov
mov
sub
dec
dec
test
inc
and
sbb
jg
inc
xchg
dec
push
int
mov
stc
aas
and
ja
xchg
cs
mov
fcmovnb
cwtl
jecxz
out
adc
nop
lret
jmp
dec
mov
xchg
and
push
add
insb
addb
in
pop
mov
add
push
fwait
in
mov
lahf
jecxz
mov
icebp
mov
jnp
loop
sub
jl
cmp
and
shrb
shlb
fstl
pushl
add
mov
lea
mov
push
mov
int
insl
xor
jne
out
insl
lret
std
xor
outsl
inc
mov
pop
enter
xchg
xor
js
scas
xchg
data16
das
mov
inc
jnp
inc
dec
mov
cmp
shrd
and
test
leave
clc
jmp
outsb
movsl
sahf
mov
push
jmp
mov
pop
into
xchg
sti
ljmp
jo
out
pop
mov
pop
mov
dec
pop
popa
mov
cltd
adc
pop
sti
std
pop
dec
cwtl
rcrb
push
fmul
mov
iret
stc
inc
shr
scas
cmp
mov
shlb
insb
shll
loope
dec
cmp
out
sbb
lds
xchg
inc
xchg
fldl
out
dec
mov
push
loope
cld
stos
fnsave
jbe
in
add
jae
rol
xchg
push
sahf
jo
pop
aas
bound
mov
inc
nop
mov
mov
jl
pop
jp
cmpb
nop
jnp
and
test
pusha
mov
jecxz
add
stos
hlt
lea
jg
gs
xor
mov
loop
ljmp
push
xlat
insb
addr16
out
fwait
mov
and
fmull
jge
push
mov
xor
xchg
dec
and
push
cmp
subb
in
adc
cmc
pusha
icebp
cmc
lcall
daa
stc
dec
lods
xor
je
lret
xchg
pop
add
xor
stos
cld
fists
aam
imul
push
mov
mov
stos
cltd
xchg
dec
stos
pop
sub
add
idiv
adc
mov
add
jl
jge
xchg
std
sub
outsl
push
data16
arpl
das
mov
cmp
cmp
mov
jecxz
lret
inc
pop
stc
adc
inc
int3
mov
sbb
sub
test
and
and
fmuls
jp
iret
mov
mov
sbb
imul
dec
push
push
add
push
push
mov
or
sti
push
aaa
dec
or
push
push
jno
inc
rcl
mov
push
flds
add
pushf
aad
sub
lret
push
daa
stos
lds
push
push
inc
cmc
cmc
popa
xchg
cmp
xor
gs
sbbl
push
sbb
jmp
leave
nop
jbe
fistl
sbb
bound
cmp
cmp
test
fcoms
outsl
es
dec
push
pop
cwtl
xchg
lods
dec
fildll
cmp
mov
sbbl
lret
out
repz
sti
sbb
xor
nopl
insb
imul
daa
gs
in
rcr
mov
sbb
adc
pop
mov
push
sub
loop
pop
jecxz
dec
or
stos
stc
insb
jecxz
ljmp
pop
pop
inc
adc
mov
cmpl
data16
mov
int3
mov
pop
xor
sub
cmp
sbb
outsl
test
mov
cmp
or
jl
int
pushf
add
je
icebp
dec
shrl
flds
loop
mov
adc
loopne
popa
inc
adc
pop
jbe
ja
insb
xor
fidivrs
icebp
mov
incb
jno
inc
int
inc
cmp
out
dec
das
xor
mov
jmp
cltd
sub
push
sbb
push
out
cwtl
inc
xlat
mov
add
xorb
inc
ja
sti
lret
stc
fs
ret
stos
push
shlb
out
in
pop
in
jmp
xchg
dec
movsb
lods
dec
test
cmp
xor
mov
scas
js
add
stos
sub
inc
insb
or
and
ret
movsl
or
dec
and
arpl
scas
fldt
push
sub
cwtl
or
xor
loop
sti
mov
push
cmp
out
outsb
daa
sub
mov
cmpsl
push
sub
adc
or
sbb
sbb
or
sti
xchg
outsb
push
mov
xor
out
push
xorb
add
sub
shl
or
xchg
add
pop
xlat
hlt
sub
sub
pushf
add
xor
sub
mov
ja
jae
cmp
cs
in
push
push
cwtl
add
test
es
dec
stc
cmc
imul
adc
mov
jne
mov
xor
jg
mov
lcall
cmp
cmp
out
mov
shlb
xor
imul
mov
out
dec
and
movsl
sbb
push
jge
loope
pop
subb
negl
jo
je
push
mov
cwtl
out
shrl
xor
sub
adc
add
pop
inc
ficompl
dec
dec
xchg
jne
adc
fisttpl
hlt
int3
sbb
scas
and
in
sbb
push
rolb
arpl
push
outsl
clc
adc
into
adc
das
sub
cmp
mov
insl
pop
lcall
daa
jne
cs
pusha
hlt
jmp
insb
fisttpl
xor
adc
mull
push
iret
les
pop
into
fwait
loopne,pn
int3
cmp
push
pusha
clc
daa
stos
fcoms
cmp
cs
decb
pusha
rol
push
sub
clc
dec
scas
jae
or
out
pop
add
ljmp
cwtl
sub
fdivrl
les
cmpsb
and
test
pop
bound
fildll
stos
nop
mov
sbb
and
xchg
int
xcrypt-ctr
cmpsl
pop
cmpsb
sti
jmp
popa
xchg
fcoml
pop
icebp
fdivrl
dec
call
mov
or
das
jb
and
stos
mov
or
mov
jmp
movsb
add
and
js
pop
fadds
lods
lret
dec
xchg
movsl
sti
leave
sub
das
and
mov
dec
shrb
js
jbe
mov
fucomip
mov
es
jno
xor
popf
mov
fdiv
sbb
std
scas
shrb
das
mov
cltd
out
mul
pusha
mov
lret
xchg
lods
jno
mov
lahf
adc
dec
or
fidivs
test
std
lods
repz
js
cs
xchg
jae
mov
adc
xor
mov
out
lods
scas
xor
cmp
mov
test
and
and
mov
and
and
dec
mov
sbb
ror
popf
ja
dec
jns
loopnew
sbb
pushf
fstpl
jns
pop
pop
dec
test
dec
in
ret
in
or
ror
das
inc
xor
xchg
pop
jae
cmp
aas
cmpsb
mov
push
aam
jge
scas
xor
insl
stos
push
arpl
int3
subl
or
test
jl
xor
imul
push
inc
or
cmp
arpl
lock
iret
int
pusha
aas
sbb
fbld
lret
test
insl
je
push
inc
sbb
mov
jl
push
ret
jg
fcomip
cmc
dec
inc
xor
dec
sbb
pop
push
fsubs
sub
sbb
or
aad
push
fwait
pop
or
call
into
sub
xchg
loope
mov
repz
popf
push
addr16
retw
dec
shlb
insl
cmp
mov
adc
jbe
mov
push
das
sub
jecxz
int3
jp
push
add
cmp
mov
cmpsl
idivb
testb
frstor
fldt
mov
push
push
sub
pop
jne
pop
inc
idivl
mov
mov
or
mov
push
add
pop
in
sub
test
fs
push
inc
sub
pop
dec
les
jge
push
dec
fdivrl
xchg
pop
pop
cmpsl
outsl
push
bt
hlt
aam
xor
loop
aas
sub
dec
xchg
div
add
fisubrl
ss
aaa
sub
jno
jg
imul
mov
push
ss
push
in
mov
mov
mov
mov
fildl
xor
pushf
scas
push
adc
fmuls
mov
mov
inc
cmp
cmp
xor
lret
insb
dec
fs
pop
inc
push
mov
xor
pop
aaa
cltd
aad
dec
jl
mov
out
roll
test
pushf
int
into
fadds
cmpsb
ret
popf
inc
test
mov
sbb
dec
mov
cmc
out
in
pop
jg
aas
iret
pop
or
mov
xorb
jge
ret
pop
xchg
or
sub
popf
lods
cli
lcall
push
xchg
cmp
int3
gs
in
fs
insl
or
insl
dec
jo
cld
fcompl
lea
sti
mov
fiaddl
jnp
xor
int3
pop
xchg
sbb
mov
ds
cmp
jb
in
inc
add
mov
push
dec
mov
ljmp
aaa
sub
in
pop
jp
imul
fisubrl
je
stc
xchg
xor
fwait
mov
xlat
int3
aad
adc
lret
jb
dec
in
push
mov
lock
cmp
and
loopne
clc
xor
shll
int
ljmp
sbb
pop
int
sbb
mov
orl
push
bound
bnd
mov
outsl
sbb
jl
loop
push
add
push
add
pop
call
lahf
dec
mov
mov
je
push
dec
adc
xchg
cvtps2pi
pop
scas
pop
lds
mov
int
stos
push
push
adc
outsl
mov
insb
enter
cmp
mov
cmpsl
dec
push
lret
sbb
mov
mov
mov
test
push
dec
inc
ljmp
sub
or
jge
mov
movsb
mov
aas
pop
and
xor
mov
shrl
mov
dec
mov
in
xor
mov
push
sar
ds
inc
jmp
pop
xchg
cld
out
clc
lds
xchg
iret
mov
bound
divb
rcrl
pushf
sbb
andb
push
push
cmp
push
mov
loop
sbb
aas
lcall
or
cmp
jge
fstps
cmp
sub
movsb
subb
inc
sti
cmp
fsubrp
cltd
inc
rcrl
adc
repnz
xchg
cmpsb
pop
sub
mov
jmp
mov
orb
fnstenv
mov
imul
arpl
mov
xchg
sbb
mov
xchg
scas
into
jmp
divb
gs
mov
add
xor
pop
pop
in
mov
xchg
nop
jp
xchg
sub
das
out
mov
push
dec
mov
movsb
lahf
jg
inc
popa
xchg
and
xchg
or
sub
stos
pop
jno
mov
out
pop
mov
ja
fisubs
xchg
xor
mov
and
hlt
xlat
daa
cld
testl
cmp
push
mov
mov
dec
cmp
inc
pop
inc
mov
sti
mov
xchg
shll
pop
rorb
cmp
cmpsl
mov
daa
jnp
int
cmp
hlt
add
or
insb
pop
and
outsl
mov
insb
fdivl
daa
stos
jne
push
inc
sti
jp
inc
inc
lahf
xchg
dec
inc
or
mov
mov
xor
cmpl
xlat
mov
fcmove
leave
je
cmpsb
insb
test
or
fidivs
xor
sub
push
or
in
retw
aad
fbstp
or
dec
push
xchg
sbb
sbb
das
cmpl
jnp
shrl
sub
mov
outsl
aad
dec
popa
outsb
jno
xor
es
hlt
push
ja
daa
testb
adc
pushf
add
mov
mov
and
insl
sar
ds
inc
adc
iret
cld
mov
fisubrl
loop
es
xor
mov
add
cmp
das
pop
jecxz
call
bound
enter
dec
inc
das
sbb
mov
fs
shll
xor
cli
and
icebp
xor
je
push
sub
xlat
ljmp
mov
add
cmp
push
test
je
xchg
lods
dec
es
mov
nop
dec
test
test
repz
xchg
lahf
mov
test
mov
pop
pop
hlt
into
clc
add
and
pop
mov
lret
add
mov
adc
lods
mov
and
and
or
inc
arpl
add
jne
lds
rolb
popf
xchg
inc
pop
cmpsb
push
loop
cmp
push
arpl
inc
xor
add
inc
out
jno
push
popa
loope
jo
shl
inc
aad
dec
jno
mov
mov
lret
push
xor
inc
push
test
jp
mov
push
cmp
pop
pop
jno
les
mov
fdivr
fstpt
and
sti
in
pusha
fisttps
pop
rorl
inc
push
xor
pop
cltd
in
ljmp
insb
icebp
insl
sti
pop
fisubs
pop
inc
aam
sbb
cmp
addb
into
jne
and
jle
push
push
adcl
push
dec
push
push
call
jp
and
xchg
scas
xor
cmp
pop
xchg
gs
lods
enter
inc
in
stos
inc
out
dec
push
or
shrl
xchg
fiadds
lret
and
into
mov
imul
pop
cld
mov
add
push
pop
dec
arpl
jge
lret
test
mov
mov
xor
mov
xor
inc
mov
mov
jb
xchg
sub
lea
inc
bound
push
xchg
cmp
in
and
bound
cmp
ss
mull
sbb
pop
mov
jecxz
mov
add
daa
cmp
sbbb
mov
gs
pop
cmp
add
inc
push
mov
jecxz
jg
ret
sub
jne
pop
in
mov
dec
mov
imul
into
jecxz
xlat
sub
fidivrs
xor
jle
inc
inc
mov
iret
test
clc
push
push
mov
add
mov
les
sub
or
and
adc
out
dec
push
sbb
fstl
mov
call
push
cs
lods
pop
add
leave
dec
push
jae
test
out
loope
pop
pop
fdivr
xor
pop
push
pop
stos
ds
push
shl
adc
mov
movsb
sbb
jnp
xchg
aas
pushf
jbe
icebp
mov
or
pop
movsb
movsb
mov
std
nop
push
and
xor
pushf
xchg
push
jecxz
mov
shr
shl
rorb
dec
lret
cli
dec
inc
ljmp
enter
pop
aas
mov
inc
dec
pop
xor
jecxz
mov
sbb
sbb
or
xchg
popa
movsb
cld
pop
cs
test
inc
aad
insl
pusha
jge
push
xor
call
lahf
adc
add
fdivrs
std
inc
popa
push
jp
rol
push
mov
jne
xchg
adc
push
add
push
adcl
push
rolb
and
mov
push
in
aad
xchg
jmp
xor
stos
addr16
adc
jb
aad
inc
sub
jmp
clc
sub
xchg
scas
pop
fcmovu
xchg
inc
arpl
xlat
andps
test
adc
cmpsb
sbb
mov
push
test
sahf
xor
sbb
test
push
and
nop
mov
outsl
xorb
scas
add
mov
daa
repz
pop
test
andl
cs
lods
mov
pop
test
test
decb
inc
icebp
ja
inc
inc
addr16
pop
mov
sub
jo
push
xchg
xchg
sbb
sub
jg
data16
adc
lret
sub
mov
mov
mov
push
or
fdivrl
ljmp
xchg
xchg
les
fldl
dec
xchg
xor
inc
or
push
shlb
adc
in
dec
add
mov
adc
cwtd
out
or
mov
push
es
push
sub
inc
xchg
dec
push
mov
iret
pop
push
mov
pushf
push
mov
add
ds
pop
mov
clc
sbb
xchg
cli
xchg
or
mov
nop
sub
jecxz
pop
pusha
cmpsb
sbb
arpl
lods
mov
stc
jl
iret
loopne
push
cmp
insl
out
notl
ja
inc
rolb
sbb
inc
test
sub
mov
cmp
cli
rorl
in
mov
xor
pop
mov
stc
popa
dec
pop
dec
add
cwtl
pop
popa
jae
jno
jmp
popa
push
bnd
sub
bound
insb
add
cmp
mov
arpl
sbb
dec
fcomps
andb
inc
loop
xchg
mov
cmpsl
inc
xchg
inc
push
fstl
lds
add
cmc
pop
shll
fidivl
cli
cs
js
mov
enter
int3
push
leave
pop
adc
out
sar
mov
xchg
mov
inc
insb
xorl
jb
test
push
mov
sub
or
addr16
mov
jnp
push
sbb
or
sti
inc
pop
leave
outsl
mov
cltd
xor
loopne
jecxz
jbe
adc
mov
sti
movb
icebp
pop
or
aad
ret
xlat
add
out
mov
jb
lock
or
out
jo
loope
les
mov
or
xchg
addr16
jecxz
scas
pop
clc
xchg
mov
sbb
adc
les
and
ljmp
pop
and
out
bound
ljmp
cmc
sbb
sub
loopne
cmpsl
pop
addr16
es
cmovns
mov
fstl
add
cmp
sub
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
push
xchg
adc
dec
xor
pxor
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
