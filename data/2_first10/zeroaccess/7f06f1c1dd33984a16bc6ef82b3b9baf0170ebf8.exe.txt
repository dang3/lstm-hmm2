push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
enter
adc
adc
adc
adc
or
mov
mov
int3
mov
lret
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
dec
pop
call
lret
or
inc
gs
call
and
push
das
adc
addr16
mov
adc
push
lret
lds
sbbl
add
iret
pop
mov
dec
icebp
xchg
and
jae
repz
inc
push
movb
dec
in
clc
or
or
mov
rdpmc
pusha
das
sub
pop
dec
cmp
cmp
jl
or
fcoml
call
es
leave
or
xchg
or
cmp
stos
movsb
cmp
xor
ret
fsubs
imul
sub
xchg
sbb
fadds
shrl
leave
push
je
and
pop
subb
loopne
lock
and
std
cmp
cli
cmp
lret
xchg
test
lahf
popa
mov
pop
popf
shl
xor
mov
sarl
add
int3
jbe
hlt
dec
mov
stos
mov
fsubr
adc
notb
cwtl
clc
stc
std
jns
inc
lahf
sahf
cs
pop
loop
xchg
ret
cmp
mov
xor
mov
sbb
mov
mov
add
mov
test
cmp
pop
pushf
xor
inc
mov
mov
xchg
adc
sub
mov
fisubl
shrl
pushf
mov
mov
andb
or
mov
cmc
lds
push
rcrb
add
ja
insb
hlt
jnp
out
nop
mov
das
movzbl
fisttpll
mov
out
jne
push
jg
iret
int
push
and
inc
aad
sti
or
pop
cmp
pop
and
inc
out
out
sbb
cmc
pusha
stos
hlt
test
cmpsl
adc
xchg
ljmp
mov
ss
dec
sbb
in
jno
mov
rolb
dec
icebp
add
mov
add
sub
add
inc
shrb
cld
pop
or
and
cld
jns
pop
stc
fcompl
pop
testb
aam
rol
and
mov
xor
and
pop
xor
lcall
dec
sbb
popf
test
js
imul
mov
xchg
shl
pop
or
mov
in
add
pop
mov
and
push
push
sub
stos
or
iret
lods
adc
js
mov
rorl
ds
movsl
add
mov
jb
data16
shrb
fs
test
adc
xchg
mov
pop
insl
in
imul
xor
dec
test
xchg
lret
in
iret
frstor
mov
sbb
pop
pusha
int
mov
push
xchg
mov
aam
xor
lods
dec
xchg
mov
mov
jle
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
icebp
ret
adc
adc
adc
adc
jno
loop
mov
jg
fldpi
cmpl
out
and
jmp
jge
adc
test
cli
lret
movsl
das
inc
adc
or
inc
jbe
jecxz
cmpb
pop
enter
mov
pop
out
rorl
pop
ret
outsb
loop
jl
cmpsl
adc
lret
test
repz
mov
into
mov
cmp
jmp
or
clc
pop
ficoml
push
dec
jo
mov
adc
and
jmp
push
clc
ret
pusha
sbb
dec
add
mov
hlt
out
out
add
lea
jno
push
shl
stos
jle
cltd
jp
cmp
subl
addr16
mov
call
mov
into
or
popa
insl
stc
or
es
push
mov
popa
in
sbb
dec
add
add
xor
adc
cs
pop
and
addl
sarl
jge
rolb
shrb
fst
adc
icebp
jmp
push
clc
pop
mov
iret
fs
xchg
pop
repnz
jbe
adc
ds
jge
lods
jbe
add
pop
stos
xchg
int
lcall
ffreep
fisttps
mov
shll
xlat
xor
jns
int
ficoms
in
dec
jb
pop
addb
xchg
pop
jae
loope
jge
cmp
push
adc
sub
inc
xor
push
pop
ret
dec
add
sub
mov
int
cld
into
xchg
in
push
dec
cmp
sbb
inc
arpl
lret
dec
or
fcomp
mov
adc
int3
loope
call
lret
in
mov
cmp
mov
sbb
push
mov
lret
aas
inc
pusha
hlt
add
add
add
sub
lcall
mov
pushf
push
test
out
xchg
call
enter
and
rorb
repnz
outsb
jb
fbstp
sub
rcrb
or
jge
or
loope
xchg
aaa
arpl
lock
pushf
pop
inc
push
aaa
clc
mov
push
mov
xchg
push
mov
cmp
inc
push
lds
stos
lahf
and
mov
in
int
mov
or
hlt
and
sbb
xor
outsb
adc
andl
dec
clc
in
mov
xor
inc
ss
and
jnp
addr16
xor
test
pop
sahf
dec
enter
mov
lds
sbb
rcrl
arpl
or
pop
fwait
imul
cld
mov
scas
aas
sar
loop
fnsave
push
mov
in
fildll
sbb
adc
inc
adc
out
cs
frstor
mov
jbe
pop
popa
cmc
xor
outsl
loop
push
imul
or
xchg
outsb
cld
aad
cwtl
push
das
dec
or
fldcw
xchg
sub
fnstsw
and
cmpsl
pop
jmp
lcall
jb
jnp
xchg
test
pop
dec
cmp
mov
in
cmp
mov
mov
mov
push
sbb
or
popa
jl
fadd
dec
movsb
into
test
jp
dec
imul
movsl
rorb
in
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
xor
scas
insb
orb
adc
adc
adc
aam
out
xchg
in
cmp
cmc
int
xchg
or
js
addl
cmp
lock
in
jg
adc
xor
dec
xor
call
lahf
or
mov
pop
test
cs
fwait
sbb
std
roll
xchg
xchg
push
imul
testb
fsubl
jg
sub
jg
cmpsb
mov
imul
fstl
cld
xchg
adc
push
clc
pop
rolb
sbb
arpl
push
cli
dec
pop
out
push
or
sub
rclb
pop
test
mov
jle
pop
orb
dec
pop
outsb
ficoms
inc
add
jp
fisubrl
outsl
sub
std
push
insl
pop
fs
decl
mov
data16
lods
subl
push
clc
loopne
sbb
cmp
sar
add
mov
xlat
xchg
mov
adc
adc
cmpsb
lods
mov
xchg
aaa
ret
movsb
inc
or
dec
or
lods
mov
pop
push
mov
pop
mov
jae
push
jno
insb
adc
fiadds
in
sbb
stos
movsb
dec
les
add
jne
test
xor
mov
imul
mov
xchg
xchg
mov
xor
insb
mov
filds
jmp
fs
inc
aaa
rcl
shrb
ficomps
cli
cltd
push
lock
je
fists
adc
xor
add
push
mov
jo
std
in
pop
add
and
xor
or
cs
out
mov
test
js
adc
in
or
cmp
pop
xchg
sbbl
jnp
mov
and
imul
pop
cmp
push
out
adc
mov
pop
das
ja,pn
xor
ficomps
adc
adc
std
mov
dec
jo
adc
jb
sbb
in
das
loopne
leave
push
push
jne
mov
jmp
push
shr
xor
test
xchg
in
lea
sbb
fs
xchg
test
xchg
shll
cmp
test
pop
and
jne
addb
adc
inc
ret
push
fmull
jo
popf
push
les
jne
out
data16
adc
mov
test
xchg
data16
xor
add
cmp
roll
cwtl
nop
mov
push
jno
sarb
mov
cltd
sarl
mov
inc
inc
jne
pop
mov
popf
adcl
push
add
fadd
out
test
jne
jecxz
sbb
pop
mov
jno
enter
mov
icebp
mov
push
fimull
cli
push
cwtl
stos
inc
sbb
ljmp
call
xor
dec
push
pop
jae
into
mov
es
pusha
mov
jb
jl
mov
jo
xchg
pushf
dec
sub
aad
push
clc
sub
shll
imul
adc
and
pmulhw
push
les
dec
jmp
negb
stos
test
pop
js
ljmp
test
adc
xchg
cmp
adc
jge
adc
test
lahf
fmulp
add
notb
jle
int
lods
jge
push
jle
pop
push
mov
sbb
push
mov
push
loop
movsb
jp
and
fldcw
popf
sub
or
xor
xchg
xor
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
loopne
cltd
sbb
out
and
mov
mov
into
jnp
pop
push
les
push
cmp
scas
jl
pop
les
roll
push
insb
push
push
jno
mov
pop
gs
gs
lea
mov
pop
add
push
stos
fadds
ds
pop
add
leave
data16
xchg
bound
popa
test
lcall
mov
add
mov
add
roll
sahf
lahf
push
push
fists
adc
loope
or
or
cli
shll
mov
das
loopne
or
xchg
xor
dec
add
push
dec
in
das
in
out
push
scas
out
add
ja
imul
ss
test
popa
pop
xor
test
xor
rolb
inc
mov
lock
and
mov
fdivrl
mov
jnp
jbe
in
sub
mov
ss
cmp
sub
arpl
and
or
dec
out
test
jmp
sub
inc
loopne
iret
or
add
testl
std
pop
push
add
fcompl
loop
and
sub
xlat
sbb
pop
test
jnp
pop
xchg
clc
xchg
add
fsubl
xchg
punpckhdq
lea
jp
push
sbb
int3
in
jp
lar
cmp
xchg
dec
inc
sub
lret
fadds
leave
or
adc
push
ficoms
xor
orb
movsb
mov
lret
jle
adc
lret
xchg
cmp
adc
cmp
xor
fwait
mov
mov
jbe
jmp
gs
jp
cmp
stc
mov
inc
lods
mov
jg
xor
xor
lahf
movsb
or
jnp
adc
xor
into
lods
sar
or
xor
add
xchg
mov
sub
stos
jp
pop
repnz
jne
mov
orl
fiadds
mov
arpl
iret
insl
pop
push
jecxz
mov
loope
xchg
and
push
or
je
js
outsl
sti
push
mov
xorb
test
jnp
aad
shll
pusha
jl
add
sbb
inc
inc
lcall
lock
js
ljmp
mov
addr16
lret
dec
decb
mov
and
sbb
loop
dec
sub
xchg
mov
jae
ud2
sub
cli
mov
sbb
mov
ret
inc
mov
jae
mov
and
outsb
data16
test
nopl
adc
mov
bnd
and
das
push
cs
dec
mov
bound
sarb
imul
inc
mov
xchg
dec
imul
cmp
out
into
and
or
push
popf
hlt
sub
lock
adc
aas
sahf
pop
sub
repz
pop
xchg
cmp
jnp
inc
jl
arpl
adc
mov
jo
cs
das
add
push
sbb
outsb
lret
vmovsd
scas
ret
ljmp
jb
push
popf
cwtl
pusha
jmp
int3
push
jno
outsl
imul
std
jp
lret
repz
pop
mov
dec
add
push
xchg
and
adc
cmpsb
loopne
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
sbb
jle
notl
adc
adc
adc
shr
inc
popa
addr16
mov
mov
scas
mov
jb
popa
insb
adc
dec
shrl
cld
test
dec
inc
sbb
sbb
lods
push
dec
cmp
push
mov
mov
xchg
loopne
xchg
pop
mov
inc
push
add
cmpsl
inc
mov
jp
sub
xlat
mov
dec
mov
pop
pop
or
mov
cmp
filds
adc
ja
out
and
cmp
xchg
adc
mov
xchg
stos
pop
xchg
mov
adc
aad
inc
sti
cmc
push
push
jbe
push
stos
pop
xor
push
in
xchg
mov
mov
loope
sbb
jae
iret
jge
repnz
aas
jp
and
jl
push
inc
adc
outsb
popa
push
pop
aam
inc
fninit
outsl
inc
jo
pusha
xor
add
int3
and
or
xchg
jae
mov
mov
push
int
jnp
mov
stc
pusha
cmc
lods
pop
ret
mov
jecxz
aad
popl
sub
xchg
sbb
ret
sub
jp
sub
lcall
or
xchg
outsb
int3
repz
fistpl
xchg
fisubl
aam
rcrb
mov
dec
test
dec
sbb
adc
sbb
fs
js
sub
out
and
es
sub
adc
pop
adc
je
lods
mov
xlat
in
ss
push
mov
popa
std
mov
jo
lcall
sahf
out
int
mov
outsl
arpl
loopne
aad
fwait
or
aam
or
nop
xlat
dec
push
das
mov
inc
int3
or
cltd
cwtl
push
dec
popf
pushf
movsb
sub
and
pop
shlb
add
mov
cld
int
mov
jp
bound
mov
pusha
sub
mov
inc
das
aaa
out
mov
pop
jne
inc
into
stc
ret
imul
scas
mov
in
and
mov
lods
xor
clc
call
addb
add
outsb
cmp
movsl
cmp
in
jae
lods
add
sub
add
cmp
rolb
inc
loope
sub
nop
xchg
stos
call
clc
mov
pop
insb
mov
adc
cmpsb
mov
adc
sbb
or
movsl
jae
in
ds
or
popf
iret
aad
mov
adc
add
mov
aad
shlb
imul
in
push
insl
leave
dec
mov
fnstcw
pop
inc
xor
and
and
lret
insb
xchg
std
mov
sbb
push
daa
mov
popa
dec
pop
mov
jbe
cmp
jge
mov
cs
push
mov
jnp
lcallw
aas
mov
lret
xor
dec
or
jmp
fcoml
inc
popa
push
sbb
test
xlat
pop
xchg
ds
enter
loopne
popa
mov
data16
sub
int
insb
sub
push
and
or
mov
sti
cmp
dec
repz
fistpl
sbb
lods
ror
imul
dec
mov
mov
test
sub
and
jp
xchg
push
push
jmp
stos
rcrl
adc
ret
js
mov
popl
ret
jns
int3
fstpt
fcomps
repnz
jae
imul
pop
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
xor
mov
cmpsb
out
adc
int
adc
pop
test
aam
hlt
ja
in
push
in
jle
jle
fcompl
mov
jp
call
jle
add
cmp
out
jae
xchg
rol
push
cld
dec
out
daa
xchg
aam
add
mov
mov
xchg
fstp
push
pop
mov
fnsave
mov
fistpl
data16
test
cmp
cmp
sbb
lods
dec
dec
scas
cmp
ljmp
jp
icebp
xchg
xor
shrb
scas
test
lret
and
ffree
pop
pop
test
inc
ja
int3
test
data16
fwait
cwtl
push
sub
pop
mov
adc
jecxz
adc
loopne
push
jbe
aaa
stos
push
stos
cmp
adc
push
bound
sbb
push
outsb
enter
mov
xlat
clc
mov
mov
xchg
cltd
jnp
pop
stos
mov
push
or
mov
gs
sub
das
xor
sahf
push
xchg
jbe
lcall
mov
loope
mov
mov
sbb
xchg
push
mov
aas
adc
shrb
and
ret
pop
decl
cmpl
sub
inc
adc
ret
pushl
mov
test
mov
daa
andl
sahf
ja
jns
in
sbb
pop
sbb
int3
and
rol
ret
pop
xlat
addl
std
cmp
push
mov
or
push
cmp
es
jo
repz
push
push
mov
loop
fsubs
add
and
data16
xchg
and
xor
mov
jne
jp
cmp
sti
cmpsl
push
mov
jp
xor
or
int3
push
mov
dec
cwtl
aad
scas
jae
inc
into
push
aam
sub
mov
ret
lock
cmpsl
fldcw
pop
xchg
iret
test
push
popf
mov
mov
and
in
and
jne
aam
loop
or
jl
pusha
paddw
mov
int3
std
inc
fidivrs
push
xor
movsl
push
pop
inc
movsl
shlb
int3
add
or
cmpb
cwtl
arpl
and
lds
cmc
xor
push
push
jne
addr16
adc
fistpll
aaa
xor
cmp
sbb
cltd
divb
jp
lods
mov
sub
jne
nop
sbb
xchg
sti
jg
lret
mov
pop
sahf
inc
lds
adc
jno
frstor
sti
jecxz
sub
pop
sub
aam
xchg
fcoms
mov
push
enter
rcll
pop
pop
push
ljmp
lea
in
add
sub
xchg
insl
cs
incl
push
test
cwtl
dec
inc
sbb
jge
push
cmp
pushf
insl
clc
xor
jp
and
and
pop
push
pusha
or
pop
jno,pn
mov
ss
repz
xor
inc
popa
push
mov
add
pop
inc
lret
shrl
xor
test
push
scas
or
pop
jb
mov
stos
sub
mov
jmp
or
arpl
ret
lret
sbb
and
or
cmp
sbb
out
cmpsl
push
gs
xchg
addr16
cmp
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
mov
in
push
in
adc
int
adc
jb
in
sbb
push
jnp
leave
pop
in
adc
xor
xchg
mov
push
mov
int3
mov
outsb
xor
lahf
call
mov
outsl
loop
loopne
or
out
gs
and
push
out
cmp
jns
push
jecxz
shr
xchg
dec
jmp
push
test
stos
xchg
insb
ret
outsl
inc
arpl
cmp
lea
sub
add
popa
test
mov
pop
fdivp
xchg
shll
or
cmp
fcoms
push
mov
mov
pop
scas
into
rcll
jge
stos
push
adc
pop
scas
mov
adc
add
xchg
lods
jo
xchg
lcall
adc
pop
out
adc
je
mov
repnz
fadds
into
jg
push
pop
fldcw
push
sub
repz
jl
jb
sahf
adc
push
sub
leave
in
cwtl
add
xor
scas
in
es
dec
push
sbb
loope
mov
scas
or
sbb
xchg
hlt
pop
lahf
pop
xor
jnp
jp
psubsw
or
inc
data16
jmp
xchg
cmp
aam
loop
jmp
adc
jg
pop
or
fstpl
cmp
mov
push
scas
xor
mov
mov
or
call
std
cmp
icebp
movsb
add
lahf
or
notb
jp
jecxz
in
pop
dec
adc
fadds
outsl
aaa
inc
jl
stos
mov
sub
aam
mov
insl
xchg
dec
rolb
subb
fmull
push
stos
push
pop
mov
lock
xchg
or
sarl
sbb
push
mov
inc
inc
pop
xor
jmp
int3
insl
mov
rcll
outsb
cld
insl
jb
std
mov
fxch
add
sbb
in
in
jno
adc
iret
sbb
pop
and
inc
cmpsl
dec
push
int
cwtl
mov
push
gs
sahf
push
xor
addl
push
and
adc
or
fnsave
popa
repz
push
push
pop
sbb
xchg
sub
icebp
push
and
cwtl
push
adc
dec
xchg
mov
jbe
cmpsl
cmp
cmp
cmpsl
js
ss
xchg
mov
sbb
int3
cld
xchg
push
jns
add
and
cmp
andl
loop
cwtl
xchg
inc
mov
or
ret
pop
mov
jb
mov
inc
insl
dec
movsl
icebp
cmp
cli
cmp
dec
fxch
mov
mov
mov
mov
shl
sbb
repz
mov
and
mov
adc
cli
jecxz
jb
xchg
insb
pop
imul
ss
add
fdivrs
pop
cmp
add
pop
out
insl
jne
push
mov
data16
push
js
fcomps
ret
shlb
mov
jecxz
sbb
push
lahf
shlb
cmp
xor
rolb
incb
repnz
cltd
test
testb
inc
dec
pop
pop
jbe
inc
movsl
loope
pop
jae
cmpsl
add
test
leave
mov
roll
enter
int3
int3
mov
movsl
inc
fstpl
xchg
xchg
test
icebp
xor
sbb
xchg
out
popa
pop
push
notl
mov
fisubl
nop
cmpsl
add
enterw
inc
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
outsl
pop
adc
out
adc
adc
adc
sub
in
shl
mov
loopne
sub
xor
jns
js
ds
imulb
jns
test
jno
push
neg
int3
int
inc
jg
test
out
dec
imul
add
push
roll
adc
sub
adc
xchg
jo
lret
shrl
ret
lret
add
add
int
mov
cmpsl
cmp
pop
cmp
jbe
xchg
fnstcw
pop
jmp
rolb
lds
xor
stos
sbb
aaa
push
jle
mov
dec
setg
insl
dec
test
scas
mov
sti
pop
fldcw
loopne
rcrl
divb
mov
out
sbb
int
scas
inc
jo
test
xor
push
jno
or
sbb
dec
add
in
rcrb
jg
pop
or
and
pop
stos
lret
cld
push
add
mov
pop
movsl
cmpsb
jo
mov
jnp
jmp
xchg
int
pop
inc
pop
or
xor
sbb
sahf
scas
mov
mov
jl
jmp
mov
je
xor
mov
aaa
jg
jmp
mov
sub
out
aaa
sbb
or
inc
jmp
loope
mov
incl
xchg
and
shll
ret
xchg
outsl
mov
cs
int3
push
pop
sbb
int3
adc
sbb
iret
pop
and
adc
into
test
jns
adc
clc
push
xor
jne
jae
add
jae
cli
mov
dec
push
add
aaa
aad
dec
mov
inc
mov
xor
imul
ljmp
leave
mov
ljmp
inc
inc
cmp
dec
push
xchg
jo
mov
out
loopne
mov
push
cmovns
mov
mov
loope
inc
std
shlb
cmp
xchg
cmpsb
cmp
jmp
outsb
push
addr16
lds
sbb
pop
sahf
mov
int3
xchg
jnp
xchg
mov
cmp
pop
js
pop
mov
pop
call
mov
lock
dec
fdiv
mov
and
xchg
lret
mov
popa
push
stc
adc
fldcw
push
cwtl
xchg
push
push
andl
cmp
sub
push
mov
xchg
in
xchg
stos
movsl
jl
or
lea
cmovs
jle
adc
outsl
cmpsl
call
xchg
clc
adc
mov
jle
cld
dec
push
mov
add
sub
stos
cwtl
mov
arpl
jo
mov
fwait
addr16
xor
cmpsb
mov
adcl
test
dec
test
and
jg
cmp
xchg
adc
fs
into
and
push
pusha
jnp
ret
gs
cmc
test
jmp
sub
xchg
pop
repnz
xchg
dec
shlb
sbb
int3
jge
sbb
sub
xor
idivb
sbb
in
rorl
mov
int3
mov
xchg
xlat
data16
jne
adc
jle
in
leave
aas
mov
clc
ja
stos
jns
ljmp
nop
mov
xor
out
push
adc
sarb
movlps
and
pop
ljmp
xchg
mov
ror
jns
leave
aam
test
rorb
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
cmp
adc
ficoms
adc
adc
adc
ljmp
fcomp
cwtl
mov
adc
push
loope
dec
fwait
sahf
imul
imul
xchg
inc
out
xor
jo
pop
inc
les
shl
and
movsb
xor
shrb
push
push
jae
jb
xlat
adc
mov
shll
sahf
mov
std
xchg
pop
mov
inc
into
push
xchg
ljmp
pushf
mov
mov
jno
outsl
xor
dec
inc
outsb
aaa
cmp
leave
cmp
js
mov
dec
popw
int3
xchg
cmp
popf
test
dec
test
sbb
shll
sub
and
push
xor
or
adc
out
push
ss
or
or
repz
mov
jnp
sub
mov
sbb
sbb
test
in
adc
cmpsb
insl
xchg
sahf
lock
mov
cmp
or
lcall
fnclex
pushf
cmc
pushl
shlb
mov
ds
or
push
jne
movsb
popf
jmp
push
sbb
jb
cmp
dec
jo
gs
mov
push
pop
dec
enter
sbb
test
dec
adc
imul
aad
std
and
out
pusha
mov
inc
or
dec
ret
insb
fdivs
xchg
insb
scas
dec
cmp
xchg
es
cld
jb
pop
jl
xor
movsl
faddl
cmpsb
push
adc
inc
sti
scas
sbb
lret
mov
xchg
inc
push
data16
and
rolb
cmc
sub
pop
jbe
ret
scas
or
pusha
shll
mov
imulb
mov
cmp
outsb
test
mov
inc
orb
mov
sarl
movl
je
ja
outsb
cmp
mov
adc
stos
push
mov
roll
int
and
aad
mov
iret
lahf
idivb
pop
loop
jle
push
push
and
and
aad
arpl
jp
pop
pop
nop
fnsave
int
test
int
push
pop
in
repz
scas
scas
jmp
dec
mov
outsb
adc
lea
pop
insb
dec
test
lods
icebp
je
repz
and
pop
inc
bound
xlat
fimuls
mov
jl
push
or
push
inc
into
xor
mov
out
mov
lds
cwtl
mov
mov
orl
stos
out
sub
icebp
xor
cmp
popa
shlb
rcll
push
xchg
icebp
pop
lea
pop
cmp
cld
mov
mov
testl
mov
orl
pusha
cmp
enter
pop
pop
insb
int
call
mov
push
ss
xor
inc
pushf
cmpsl
adc
ds
lods
sbbl
and
mov
add
mov
lods
and
adc
in
loop
shll
in
and
mov
roll
gs
adc
pop
in
pusha
setne
daa
add
and
test
and
adc
mov
add
in
aam
mov
fisubl
pop
cmp
pop
adc
sbb
sub
xchg
in
cwtl
mov
in
pop
xorl
or
add
es
out
jmp
mov
mov
shl
jmp
fmuls
sbb
ds
int
adc
shlb
ljmp
sub
fwait
mov
mov
sub
enter
xor
mov
movsb
pop
outsl
ds
or
lods
pop
sub
or
jo
stc
fistpl
xchg
pop
ds
or
pop
ret
dec
add
mov
mov
cld
pop
sub
adc
cwtl
mul
xchg
sbb
add
pop
mov
aaa
imulb
sbb
movsl
cmpsl
cmp
inc
jmp
fisttpll
rolb
imul
adc
in
mov
push
in
mov
mov
dec
push
and
ss
cli
nop
jg
jnp
mov
fldenv
adc
jne
bound
std
lea
add
in
cld
pop
lahf
sub
push
mov
push
inc
jo
or
daa
sarb
jae
pop
adc
cmp
imul
addr16
pushl
or
lahf
xchg
pop
pop
mov
cmp
sub
inc
popf
stos
sub
jecxz
cmpsl
sbb
test
xlat
fcmove
inc
lock
idivb
push
incl
pop
sub
pop
fs
popa
std
mov
out
stc
int
jecxz
sub
adc
test
arpl
fbstp
inc
iret
stos
ret
dec
jp
push
ja
loope
xlat
cli
popf
adc
xchg
mov
sbb
push
imul
or
sbb
bound
dec
fimull
mov
sub
imul
cmc
shlb
cltd
xchg
or
lods
push
loop
into
mov
subl
js
imul
divl
int3
icebp
adc
xchg
rol
push
aad
push
adc
scas
push
lods
stos
mov
mov
mov
mov
jp
mov
test
mov
pop
leave
pop
lods
mov
ljmp
sbb
lea
add
rdmsr
lret
insl
loopne
leave
and
push
sbb
mov
test
lahf
mov
xchg
nop
in
dec
cmp
add
hlt
adc
nop
mov
adc
and
sub
cs
xor
mov
decb
lret
xchg
stos
sti
out
outsl
out
ljmpw
lahf
lea
jne
aad
xchg
xchg
jns
mov
divb
mov
and
out
out
rdpmc
mov
ret
cmpsl
lock
pop
icebp
fcmovne
loope
imul
sub
pop
jge
cmc
pop
or
push
mulb
rclb
push
inc
mov
adc
mov
cmp
sub
jg
fs
xor
mov
sub
aam
fcomi
and
dec
mov
shrb
outsb
std
pop
sbb
mov
push
fwait
les
es
push
repnz
and
adc
or
cs
popf
shrl
jns
js
mov
nop
cmp
scas
aam
mov
aam
mov
scas
popf
cmp
pop
adc
mov
cmp
push
loop
repnz
ret
dec
xchg
insl
clc
mov
xor
inc
lret
sbb
ret
bound
in
xchg
mov
and
inc
mov
push
pushf
test
in
fisubrl
jae
sub
lods
mov
in
daa
xchg
movsl
push
jno
call
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
fwait
std
enter
adc
int
adc
cmp
cmp
popf
mov
test
stc
cmp
mov
out
xor
sub
lcall
xchg
lds
or
jge
cmp
mov
flds
adc
clc
ficomps
cltd
mov
mov
xchg
js
shrd
sub
pop
sbb
outsb
mov
adc
jae
gs
loopne
sahf
sbbb
movsb
pusha
sbb
aaa
sahf
lods
bound
ja
int3
xor
xchg
xor
inc
jp
xor
dec
rolb
in
sbb
fmull
leave
mov
lret
mov
mov
xor
or
push
cmp
outsb
fnsave
jns
sarl
jo
mov
scas
inc
inc
push
xor
shrl
popa
sahf
xchg
xlat
clc
adc
lret
inc
xchg
in
adc
mov
test
testl
mov
inc
jo
and
xor
roll
ret
in
loopne
mov
jo
pushf
popf
out
lahf
imul
arpl
inc
lcall
push
mov
xor
jmp
inc
ja
push
fbld
push
push
add
pop
mov
jns
movsl
mov
mov
pop
leave
xor
mov
push
jns
inc
data16
gs
push
inc
jo
sbb
sahf
clc
lea
cs
and
mov
xor
mov
cwtl
pop
pop
pop
fnsave
cltd
repz
mov
fistl
push
sbb
xor
sahf
mov
hlt
neg
iret
cmp
push
xchg
stos
and
das
stos
ret
movsb
aaa
and
cmpl
cltd
je
sbb
scas
test
jns
lret
rorb
jb
adc
adc
push
aas
in
or
pop
leave
or
in
out
inc
leave
cmp
out
pop
ljmp
fstl
sbb
cs
fwait
jl
cmp
push
dec
push
stc
pop
andb
dec
xchg
cmp
or
push
loop
pushf
mov
push
push
int3
xlat
inc
fs
add
call
out
bound
jno
lret
stc
loop
mov
push
fisttpl
in
and
repz
dec
cld
xchg
pop
call
mov
xor
outsb
xchg
hlt
test
or
call
jno
outsb
cmpsl
mov
inc
out
mov
loopne
mov
stc
adc
pusha
out
add
fwait
and
sub
xchg
insb
pop
jl
cmp
adc
scas
xchg
outsl
shll
arpl
xor
add
and
mov
lods
push
movb
sub
out
into
lahf
fildl
inc
adc
mov
aaa
cld
mov
mov
int
ret
sub
scas
int3
inc
loop
aam
clc
push
or
stc
fimuls
xchg
jnp
add
cld
pop
sbb
jne
aam
mov
fisubrs
in
push
sbb
pop
shlb
cmp
lock
lcall
sbb
movsl
push
sub
sub
cld
inc
insb
repz
jne
adc
xchg
dec
mov
callw
jbe
int
out
lcall
jns
mov
mov
ret
and
imul
mov
mulb
shrl
out
pop
ja
cld
pop
jbe
pop
add
mov
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
inc
inc
ss
ljmp
adc
sub
cli
adc
and
lods
icebp
pop
add
xchg
ss
hlt
jae
mov
adc
cmp
das
js
jae
push
sbbb
pop
sbb
lahf
jbe
sbb
inc
push
je
xor
and
dec
fmuls
add
push
outsl
mov
neg
sti
inc
cld
das
mov
imul
inc
xor
xor
or
jge
add
inc
inc
inc
cmpsb
xchg
sti
mov
inc
xchg
gs
cld
pop
mov
outsl
mov
cwtl
insl
jecxz
cwtl
jae
rcrl
jae
xchg
and
lcall
or
mov
rclb
adc
pop
fsubs
hlt
push
cmp
mov
les
jecxz
mov
inc
movsbl
and
mov
adc
and
and
jge
cmp
movsl
arpl
adc
mov
push
ficomps
pop
scas
or
mov
gs
cmp
stos
push
js
fcomps
pop
rclb
sbb
mov
mov
cmp
in
adc
cs
shrl
push
or
dec
mov
enter
mov
mov
adc
push
jbe
cmp
stos
push
sbb
jno
fs
and
fwait
mov
iret
cmp
mov
clc
and
punpcklwd
out
mov
xchg
mov
mulb
sub
gs
mov
dec
aam
popa
int3
divb
addr16
xchg
inc
cmpsb
push
mov
addr16
xchg
and
pop
inc
inc
cld
addl
adc
pop
add
shll
es
inc
addr16
jns
fs
push
adc
cld
mov
sbb
fwait
inc
lods
fiadds
or
push
sub
sbb
push
dec
pop
test
ret
push
mov
mov
icebp
jecxz
scas
or
adc
leave
pop
bound
movsb
push
push
stos
adc
jl
test
xor
inc
roll
xlat
enter
stc
inc
xor
mov
popf
sbb
ss
pusha
push
sub
push
or
arpl
cld
sarb
daa
pop
dec
jg
add
ljmp
mov
aad
aam
xor
sub
xchg
lods
sbb
jne
pop
dec
int
cmpsl
lds
and
jp
std
cld
adc
ret
inc
sbb
movsl
add
sahf
enter
pop
stos
xchg
stos
adc
ficompl
loopne
cltd
cwtl
lds
dec
and
imul
sub
in
int3
inc
insb
cmc
arpl
push
dec
sbb
stos
movsl
mov
cs
sbb
dec
ficompl
or
mov
dec
xlat
dec
pop
arpl
pushf
or
cmpsb
adc
psllw
mov
call
iret
mov
cld
imul
lock
jo
xor
xor
lret
xchg
and
addb
or
sbb
sbb
imul
pop
std
aaa
sahf
sbb
rcl
mov
pop
in
das
jp
and
or
in
sub
lret
pop
push
stc
testb
mov
pop
sub
jg
fnstsw
push
cmpsb
das
adc
mov
test
xchg
test
push
popa
sbb
adc
adc
js
arpl
scas
sbb
dec
xchg
pop
icebp
add
sbb
imul
inc
cld
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
mov
dec
mov
int
adc
pop
jae
call
movsb
lods
sbb
mov
push
xchg
cmp
adc
dec
adc
dec
in
mov
je
or
push
xchg
adc
jae
iret
sbb
xor
xchg
dec
jne
leave
inc
in
or
mov
pop
daa
dec
dec
and
xchg
sbb
cmp
inc
sub
sbb
lahf
add
shlb
inc
loope
jl
andl
xchg
pop
aad
test
push
mov
adc
sub
and
lods
fisubrs
sbbl
orb
xchg
bound
jne
cmp
sub
pop
jecxz
jo
mov
fisubs
push
cld
ja
les
in
inc
jle
push
pop
fnstcw
jnp
fistps
and
inc
push
xchg
repnz
rcrb
mov
lods
out
mov
clc
mov
mov
in
fstps
out
rcrl
xor
fwait
outsb
sbb
sub
pusha
adc
hlt
push
or
rol
out
lock
imul
leave
dec
xor
cmp
cmp
scas
or
pop
das
add
pop
iretw
ljmp
imul
sbb
nop
sbb
jns
jb
js
fwait
mov
add
nop
popa
mov
xlat
negl
mov
shrl
adc
fisttps
push
insl
mov
pop
cmp
jmp
fstpl
sbb
sub
pop
push
and
push
cmc
sti
pop
pushf
rorb
subl
ret
and
jb
pop
stos
lahf
xlat
insb
inc
mov
and
shrl
or
mov
jns
faddl
lret
les
int3
adc
sub
sbb
mov
popf
xor
mov
in
lea
loope
mov
push
push
lret
add
cmpsb
pop
out
pop
lcall
out
enter
roll
xor
push
or
push
jecxz
mov
cmp
test
dec
cmp
cmpsl
ss
test
xor
clc
jp
jne
popa
sub
inc
dec
adc
mov
and
ja
mov
aas
jecxz
leave
and
or
cmp
or
xchg
negb
lods
jmp
pop
dec
sub
add
iret
aam
mov
cltd
pop
mov
shrb
sbb
test
xchg
addb
ja
lea
sbb
push
shll
mov
sub
sbbb
clc
inc
movsl
dec
mov
ret
pop
adc
mov
jge
xchg
gs
clc
cmp
add
mov
pop
mov
mul
idivb
ret
movl
dec
fiaddl
cld
testl
clc
call
push
push
lea
cmp
sti
adc
aas
shlb
mov
xchg
or
or
jnp
push
add
hlt
xor
out
mov
cs
add
add
cmovg
cmp
mov
or
lret
sub
or
or
push
pop
sbb
jmp
shl
imull
jge
sub
out
sub
in
jecxz
jle
add
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
js
mov
adc
and
sub
out
mov
mov
fisttpl
mov
sbb
cmp
dec
mov
cmpsb
sbbb
imul
adc
add
mov
cwtl
xchg
out
test
sti
insb
mov
lock
jmp
out
xchg
push
xchg
movsl
std
repz
test
inc
fdiv
les
pop
add
cwtl
fisttpl
pop
sbb
lods
jle
imul
pop
jne
sti
dec
fs
jno
ficoms
das
fsts
cmp
xchg
mov
inc
aas
jae
mov
stc
xor
xchg
or
push
lock
aas
sti
xor
sub
dec
fbstp
or
stc
hlt
in
bsr
pop
cmp
and
dec
sub
lods
rcr
mov
cmpsb
pop
clc
into
pop
and
int
out
decb
add
xchg
jbe
jl
push
pop
xor
inc
lods
add
out
sbb
jp
or
or
lods
pop
nop
pop
nop
and
pop
and
push
call
mov
test
shlb
data16
dec
jg
sbb
mov
fidivl
mov
dec
popf
mov
inc
aaa
call
mov
cmp
mov
xchg
leave
movsl
scas
insl
and
jp
leave
int
sahf
stos
sarl
or
jne
cmp
mov
mulb
adc
rcll
jbe
adc
sti
mov
stc
stc
and
int
std
xchg
outsl
subl
pop
pop
pop
cmp
ficoms
mov
addr16
das
int
aad
ror
imul
flds
and
xor
mov
lock
pop
insb
into
test
lock
insl
push
mov
into
xor
sbb
out
sar
push
dec
cmp
fimull
sarb
leave
out
push
mov
mov
adc
xor
cmp
jno
aam
add
cs
stos
mov
mov
jbe
ja
add
movq
xor
jae
shrb
and
xchg
bswap
aaa
and
test
lret
mov
or
fsubl
dec
jmp
loopne
sbb
ljmp
mov
call
inc
icebp
add
xor
movsl
mov
ds
mov
xor
arpl
xor
or
mov
ret
sarl
adc
test
mov
int
cmp
mov
xchg
fwait
hlt
cmp
mov
es
outsb
push
push
sbb
js
xlat
push
dec
cmpsl
sub
js
in
xchg
aas
int3
cmc
dec
adc
adc
sub
cld
xchg
sti
sub
pushf
jns
and
push
imul
jecxz
js
jl
lds
or
mov
mov
xchg
dec
sub
jle
stc
je
adc
call
mov
bound
lahf
xchg
jae
es
mov
rol
pop
mov
sub
lea
dec
loop
loopne
cmp
mov
out
popf
test
mov
inc
sbb
push
ret
adc
mul
pop
cmp
subl
xor
or
and
pop
jae
push
dec
inc
jle
or
into
inc
addl
iret
gs
pushf
cmp
and
mov
pushf
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
and
adc
int
adc
xor
adc
xchg
inc
ss
xor
pop
ret
scas
pop
std
ret
xchg
jbe
jae
mov
and
das
push
xor
push
into
xor
xchg
icebp
imul
adc
fucomi
mov
cmp
cltd
mov
push
mov
inc
xchg
xchg
dec
xor
cmp
cli
mov
movsb
lods
pop
fisubrl
sarl
int
and
lds
cmp
cmc
iret
imul
cmp
jo
fisubrl
jl
mov
cs
andb
cmp
dec
in
inc
jl
add
inc
cmp
dec
mov
jp
add
jbe
js
and
icebp
into
mov
sbb
or
scas
hlt
mov
mov
adc
js
test
mov
outsb
sbb
jnp
jbe
inc
mov
push
insl
movsl
jmp
int3
sahf
adc
arpl
fwait
scas
in
lods
push
pusha
cmp
icebp
push
sub
xchg
enter
dec
call
movl
mov
ljmp
loope
popa
xchg
fmul
int3
lods
outsb
test
dec
stos
clc
ja
sub
fbld
bound
into
loopne
adcl
lds
orl
ret
fcomps
addl
inc
cwtl
add
xor
xor
mov
add
in
xorb
cmp
gs
mov
loopne
or
and
dec
test
push
test
sti
jle
imul
mov
add
fildl
xlat
imul
add
shl
ljmp
in
hlt
shll
pop
int
daa
xchg
mov
mov
loope
shlb
xchg
lock
cmp
cs
xor
mov
test
icebp
xor
xchg
or
ficoms
in
scas
rorl
mov
inc
imul
mov
sub
mov
inc
or
and
xchg
sahf
daa
adc
mov
mov
mov
flds
lods
sahf
shrb
test
cmp
orl
outsl
mov
inc
out
fistl
aaa
jp
cmpsb
inc
imul
sbb
dec
mov
sub
lods
scas
imul
cmp
mov
nop
or
aad
add
ljmp
pop
mov
mov
clc
or
sub
es
testl
mov
push
dec
ja
pop
push
inc
or
rcl
stos
xor
fsubr
ror
mov
scas
ljmp
clc
lret
popa
jne
pop
push
lcall
cmpsl
mov
sbb
inc
daa
xchg
adc
inc
push
lea
dec
mov
xchg
mov
jmp
inc
das
in
jg
popa
cmpsb
xchg
sahf
lret
jge
jno
xchg
sub
mov
xchg
sub
arpl
loopne,pt
push
xor
insl
fs
js
xor
push
pop
add
pop
xlat
push
insb
inc
test
dec
xchg
cmp
ffree
mov
add
cmp
xchg
imull
fsubl
push
addl
mov
mov
sub
cmpsb
pushf
xchg
sub
sahf
pop
test
aam
int
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
shl
shrl
adc
push
in
iret
pop
lods
lods
sub
je
mov
or
sbb
out
rcrl
lods
daa
movsb
scas
mov
lcall
js
inc
scas
push
push
and
lea
jnp
xchg
scas
sbb
sub
sbb
jle
mov
stos
sbb
inc
mov
mov
lahf
lods
clc
test
push
xor
movsb
rcrb
dec
jno
push
cli
cmp
push
test
lahf
test
cmp
mov
int3
dec
sbb
cmp
leave
or
push
xor
lea
sbb
xchg
divl
push
pop
lret
mov
mov
imul
enter
inc
mov
jl
push
push
inc
aas
pop
sti
ljmp
and
lret
xchg
push
or
xchg
adcl
out
xor
aaa
xchg
xor
movsb
xchg
in
mov
adc
or
into
push
shll
dec
push
mov
sbb
mov
push
sub
jo
aas
loopne
hlt
or
imul
cmp
out
sbb
lcall
imul
or
std
push
cmp
call
pop
call
idivl
mov
pop
sahf
and
cli
ret
sbb
mov
ret
repnz
sti
test
pusha
or
cmpsl
test
add
jg
xor
std
out
cld
mov
repnz
xchg
push
dec
rcll
stc
push
notb
or
xchg
dec
js
jp
cmp
xchg
in
inc
gs
and
xchg
fadd
sbb
and
inc
jp
jmp
call
lods
ljmp
dec
sub
cmpsl
dec
and
pop
lods
cmp
sub
ds
mov
outsl
jno
mov
push
add
sbb
test
cmpsl
in
push
std
jge
inc
push
loope
pop
lret
push
ficomps
in
and
int
xor
sbb
xchg
cmpsb
inc
push
mov
and
cmpsb
xchg
push
mov
jge
outsb
pop
fidivrl
push
ja
loopne
mov
xchg
out
clc
sbb
negb
mov
jae
rcr
movsl
add
mov
cmc
stos
push
clc
inc
repnz
fucomip
lods
stos
jno
mov
cmp
or
fsubl
popa
dec
and
mov
mov
shll
cmpsl
and
repz
sub
fs
lea
adc
add
lea
pusha
daa
shrb
push
leave
or
xor
mov
add
repz
pop
inc
icebp
ljmp
iret
lods
dec
insl
imul
pop
or
test
mov
dec
push
jp
lahf
mov
sub
add
loop
jns
cmpsl
mov
lcall
mov
cmc
shrl
shll
in
mov
mov
shll
mov
jbe
push
and
cmpsl
sbb
es
xchg
fs
push
out
xchg
pushf
imul
dec
js
scas
inc
insl
inc
xchg
cli
xchg
enter
loopne
mov
cmp
push
aad
add
pop
jno
mov
cmpb
push
mov
std
push
push
je
imul
inc
sub
in
call
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
add
mov
adc
mov
or
outsb
sbb
test
insb
addr16
adc
mov
fdivl
push
sub
out
and
push
xchg
xorb
std
or
dec
cs
mov
and
sub
fisubl
loop
add
or
pop
sbb
jmp
dec
pop
dec
inc
xchg
xchg
pop
jle
sub
ss
jno
in
adc
sbbl
adc
arpl
aam
cs
int3
sub
xchg
push
movsl
daa
jnp
arpl
aad
cs
jle
sub
xchg
sbb
push
jno
xchg
les
mov
aad
fisttps
aaa
sarb
int
pusha
cmp
or
jg
xor
mov
inc
or
push
mov
cmp
mov
lea
dec
push
frstor
clc
std
int3
cltd
sub
xchg
mov
pop
nop
mov
stos
bound
jb
xchg
sub
clc
clc
gs
mov
cmp
repz
mov
jp
push
fsubrs
mov
inc
sub
jo
iret
pushf
shll
mov
pop
sub
clc
push
ljmp
dec
jno
push
jg
and
pop
adc
out
movzwl
loope
xchg
loop
or
push
push
jae
jp
cwtl
push
xchg
xor
xchg
and
adcw
lret
inc
xlat
aas
xor
rorl
dec
adc
lcall
sbbb
mov
mov
and
inc
pop
push
pop
je
andb
shll
lahf
pop
push
inc
push
sub
dec
jp
jl
pop
in
add
mov
aam
cwtl
ret
fisubrl
shl
lea
push
data16
lahf
dec
repz
addr16
lods
jbe
test
dec
push
jecxz
mov
inc
mov
imul
cmpsl
sub
and
shrl
fwait
and
in
out
stc
out
or
subb
lock
sub
dec
lahf
sbb
push
xor
mov
ss
xor
insl
adc
jbe
xchg
sarb
icebp
shll
into
aam
sub
mov
int
mov
mov
xor
adc
pop
ljmp
mov
pop
ds
pop
xchg
mov
out
ljmp
dec
jle
jg
repnz
mov
fxch
cmp
mov
mov
inc
int3
psrlw
dec
cmpsb
fstl
mov
fld
adc
mov
or
xlat
stos
dec
test
int
imul
in
fnstenv
xor
int
js
inc
and
mov
negl
addr16
loopne
fwait
dec
adc
scas
push
push
in
mov
pop
inc
dec
movsb
and
or
sbb
jns
push
sbb
cmpsl
out
jle
aam
lret
xorl
pop
push
pop
fadds
repnz
mov
inc
testl
mov
int3
mov
and
pusha
cmpsl
call
je
rclb
adc
das
test
aam
addr16
pop
loope
popa
xlat
bnd
repz
or
stc
mov
das
outsl
jecxz
xchg
push
pop
outsl
mov
loop
jno
jl
loope
and
xor
mov
pusha
std
fxch
repnz
inc
push
in
push
sti
cmp
jb
test
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
mov
adc
int
adc
mov
mov
in
cmp
mov
cld
int3
outsl
mov
and
mov
dec
jne
fldln2
les
movsb
ret
dec
sbb
test
icebp
xchg
outsb
gs
in
push
inc
mov
stos
xor
sub
movsl
cmp
cmp
pop
gs
cs
cmp
cli
xchg
pminsw
shl
dec
push
jmp
dec
int3
mov
outsl
leave
sub
inc
fcompl
cmp
jge
dec
arpl
mov
add
je
call
dec
in
popf
and
mov
mov
shrl
push
push
mov
xchg
mov
std
imul
xor
push
xchg
adcb
and
sbb
mov
das
jge
mov
mov
pushf
xchg
mov
push
les
addr16
dec
std
into
mov
jle
push
or
pop
xor
mov
adc
push
inc
jne
or
adc
xor
test
push
lock
aaa
in
movsb
xor
lcall
dec
sub
xor
mov
ret
enter
cltd
mov
fcoml
inc
pop
out
inc
jo
jp
sub
jo
bound
nop
daa
aad
pop
fadd
jno
imul
sti
mov
addr16
scas
mov
jge
ljmp
outsb
divl
int3
pop
xor
pushf
fucomip
lods
cmp
je
dec
push
mov
jmp
or
xchg
inc
mov
arpl
ljmp
ret
shll
lahf
imul
mov
sub
out
call
in
test
adc
pop
cmp
jae
test
push
mov
pop
pop
push
pusha
dec
cmc
sbb
push
ret
aas
mov
inc
cwtl
xor
xchg
and
ret
outsl
xor
js
cmc
call
inc
bound
ret
pop
into
clc
stc
pop
cmp
sub
sub
es
pop
xchg
push
test
sub
cmpsl
arpl
jg
test
test
jg
jle
xorb
mov
ficomps
push
add
mov
mov
enter
jecxz
jnp
lods
jp
sub
push
aas
mov
jae
stos
jns
call
inc
inc
leave
lds
and
data16
out
adc
lret
cmp
mov
push
lret
mov
or
add
sub
movsb
cli
neg
or
jo
std
aad
inc
gs
or
sub
inc
mov
mov
lea
jecxz
ljmp
sub
sbb
fnstcw
bnd
hlt
inc
lret
inc
jle
dec
aaa
mov
sbbb
inc
scas
jecxz
nop
inc
inc
dec
rorb
and
fsubrs
sbb
xor
cmp
addr16
push
sub
mov
outsb
jne
outsb
addb
adc
jnp
je
outsb
or
pushf
inc
jne
jns
out
maskmovq
idivl
stos
inc
pop
sub
sbb
add
in
mov
xor
or
mov
add
call
push
lret
or
push
gs
cmc
xor
mov
xchg
and
ss
inc
or
mov
dec
and
addr16
mov
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
mov
movsl
add
cmpxchg
xchg
cmpl
pop
hlt
mov
push
sub
insb
stos
fstp
mov
in
xor
mov
jbe
adc
push
push
jns
and
push
sub
mov
xchg
out
jle
mov
iret
cmp
movb
out
dec
inc
push
out
sbb
mov
scas
je
ss
jae
imul
or
add
mov
ds
fldl
xchg
imulb
adc
adc
mov
sbb
push
fisttpl
jmp
mov
mov
icebp
mov
int
rcll
movsl
outsb
mov
test
mov
inc
fcmovu
loope
sbb
call
cmp
cmpsl
add
aad
and
pusha
mov
pop
test
fwait
pop
push
and
rolb
pop
mov
pop
fwait
push
mov
je
sub
mov
data16
xchg
repz
or
fstps
dec
rcrl
div
jp
pop
xor
lds
jg
insb
jl
stc
das
roll
movsb
pop
jb
cli
repz
mov
aad
dec
shrb
imul
sar
cmp
dec
cmc
sbb
fisubrs
xor
cmp
mov
xchg
idivl
cmpb
mulb
pop
push
or
stos
in
mov
loop
sub
shrb
bound
rolb
pop
in
out
test
xchg
jmp
stc
lret
xchg
and
sbb
adcl
pushf
sub
das
inc
pop
cli
or
fst
jne
xlat
imul
cmpsb
call
xor
imul
aad
jecxz
cmc
xchg
cli
cmp
loop
jae
dec
outsb
rorb
into
jbe
mov
and
test
mov
jmp
xor
dec
pop
aas
loope
rolb
push
add
pop
loop
or
cmpsb
pop
lret
dec
mov
in
scas
fmull
jb
mov
or
pop
jno
movsl
pusha
add
xchg
popf
mov
fstps
jmp
rcrb
rcll
lods
cmp
out
repnz
adc
sub
call
ljmp
add
mov
repnz
rorl
xor
neg
mov
sbb
jb
inc
das
scas
enter
jo
mov
mov
mov
icebp
test
jle
add
xchg
mov
sub
imul
jmp
fisubrs
cmpsb
adc
das
sub
inc
aaa
fsub
lods
sub
mov
push
push
enter
dec
test
lock
or
sbb
out
lret
jns
sti
adc
mov
jbe
cmp
cmp
jnp
and
test
xor
sbb
fnstenv
rcrb
sbb
mov
fildl
call
and
sarb
rcr
xor
xor
inc
xchg
pop
inc
je
add
clc
mov
popa
sub
sbb
ds
shr
pop
xlat
push
pop
push
jb,pn
lret
mov
inc
jmp
push
push
frstor
dec
out
and
push
imull
fidivrs
mov
dec
cmpsb
mov
insl
ret
rorl
sbb
sub
repnz
push
mov
shl
cli
mov
lods
sti
incb
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
icebp
stos
lcall
adc
out
mov
dec
outsb
fadd
pop
std
ret
and
inc
mov
jb
xor
dec
loop
cmpsl
xchg
inc
push
xor
or
xchg
shrl
mov
mov
daa
dec
gs
inc
addb
das
jmp
fwait
mov
jae
enter
cli
mov
or
fsubrl
mov
mov
sub
pop
xchg
mov
mov
jg
xor
fnstcw
scas
into
push
scas
fwait
push
ljmp
xor
adc
sti
inc
xor
mov
ljmp
mulb
pop
push
movsl
sbb
inc
xor
and
dec
daa
and
xchg
add
sar
cmp
dec
mov
mov
and
pop
push
scas
fnsave
sub
xchg
insl
inc
jno
jge
daa
inc
and
xchg
push
pop
jg
dec
or
sbb
xor
ja
or
inc
sbb
pop
cld
addr16
cmc
mov
fidivs
jo
bound
lret
loopne
stos
insl
xor
mov
lds
mov
and
mov
dec
movsl
jge
mov
je
fwait
xor
test
xchg
andb
loope
outsb
sbbl
adc
and
jl
jle
ja
int3
cmp
inc
pushf
sub
fsubrl
pop
neg
mov
scas
pop
dec
aad
int3
jnp
aas
mov
mov
clc
sub
stc
pop
imul
add
pushf
add
lret
mov
push
fbld
dec
fndisi(8087
sbb
push
into
mov
or
lret
dec
push
ret
stos
call
rol
mov
lods
push
repz
push
jmp
xor
adc
arpl
mov
xor
arpl
or
daa
es
jne
mov
jbe
or
sbb
rcll
mov
mov
inc
inc
stos
hlt
outsl
jecxz
inc
push
cmp
dec
mov
fst
aad
lcall
movsl
sub
fwait
ss
xchg
mov
mov
cmp
xor
fidivs
pushf
ret
iret
rcr
sbb
push
mov
mov
fldenv
gs
adc
sbb
jb
pushf
lds
nop
mov
ja
fimuls
mov
cmp
jl
pop
adcb
nop
das
arpl
mov
dec
mov
jecxz
loop
into
shll
repnz
clc
sbb
or
push
lret
sub
push
fnstsw
cmp
into
xlat
jns
das
pop
inc
mov
jbe
arpl
add
cli
xor
mov
les
in
movsb
sahf
aaa
sbb
rcrb
mov
pop
inc
inc
xor
fsts
xchg
inc
test
pop
out
mov
imul
loopne
sub
add
add
in
pusha
les
repnz
add
xchg
stos
fsubrp
mov
pop
outsl
mov
pop
pop
add
xchg
jnp
jae
es
roll
pop
shll
rclb
add
scas
mov
or
lock
cmp
or
lcall
push
xchg
loop
test
dec
xchg
cltd
lods
pop
test
mov
cmp
aad
rcll
hlt
or
scas
jo
cmp
inc
push
dec
push
scas
push
fiaddl
lret
pop
lahf
ja
pop
test
clc
inc
dec
xor
lcall
stc
lds
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
mov
test
adc
adc
adc
jecxz
call
cmp
xchg
adc
mov
gs
not
pop
inc
dec
cld
mov
das
mov
outsl
adcl
and
lods
pop
ficompl
loopne
dec
sbb
stc
dec
cmpsl
or
je
movsl
scas
add
pop
ret
das
and
shll
movsl
ljmp
adc
sarl
das
jg
ret
xor
fisubs
push
xchg
pop
sbb
mov
shrl
add
jo
int3
dec
filds
jmp
lock
xchg
mov
cmp
repz
cmp
cs
jmp
xor
cltd
cmpsb
dec
inc
jl
data16
repz
pop
fldl2t
inc
cmp
mov
pop
or
cwtl
mov
inc
fisttps
xlat
sub
lods
subb
mov
lea
insl
push
lea
testl
inc
je
lods
dec
cs
insb
stos
cld
xchg
inc
jb
and
sbb
xor
loope
sbb
outsl
mov
adcb
js
mov
shlb
mov
das
lret
leave
icebp
mov
fcomps
cmp
push
outsl
add
mov
mov
mov
fsubp
pop
xchg
imul
ja
or
mov
mov
test
stos
insl
or
add
jb
lret
out
xchg
imul
pushf
xor
adc
loopne
push
adc
cmp
stos
pop
movsl
sbbb
addl
repnz
sbb
nop
outsb
mov
xchg
dec
addl
orl
push
xor
dec
add
int
lds
add
xchg
es
iret
mov
popf
gs
outsl
clc
pop
jl
jp
xchg
sahf
dec
sbb
out
sti
jg
enter
or
inc
sbb
mov
shlb
mov
push
add
xor
xlat
xlat
loop
stc
mov
mov
loope
pop
sbb
mov
add
inc
adc
lock
sub
cli
int
adc
inc
sub
mov
dec
mov
adc
push
push
inc
testb
decl
lods
dec
lds
dec
popa
ds
orb
add
mov
mov
jae
sbb
inc
jne
popf
out
sbb
cmp
int3
stc
mov
leave
mov
pop
fiadds
sti
ret
jecxz
inc
add
inc
roll
push
mov
xchg
fidivs
stos
ret
popf
adc
jg
faddl
sbb
lcall
movsl
pop
pop
fisttpl
aam
pushf
or
mov
sub
stos
mov
add
jae
mov
mov
stos
pop
jecxz
cmp
mov
arpl
xor
xchg
mov
adc
and
cmpl
int
cwtl
outsb
fstpt
shl
repnz
in
or
pop
fsubl
jae
jmp
push
daa
push
add
rol
aad
rcrb
inc
pop
mov
es
jl
jno
sti
inc
mov
fwait
push
cmpsl
mov
pushf
inc
arpl
pusha
in
mov
add
sbb
push
mov
rcll
pop
adc
xor
xchg
sub
inc
cs
dec
cmpsb
scas
arpl
add
xchg
pop
stos
sub
test
xchg
insb
jg
cs
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
out
sbb
mov
int
adc
jg
ljmp
mov
or
dec
pop
mov
add
adc
cmpsl
inc
mov
pop
cmpsb
iret
dec
push
loope
sahf
inc
fiaddl
in
loop
pushf
outsl
loop
adc
cld
pushf
fcoml
adc
cmpsb
mov
rorb
js
pop
pop
inc
and
aaa
ret
sub
cmc
sbb
rol
int
cmp
out
dec
stos
out
aaa
fiaddl
pop
mov
sbb
lcall
aad
aad
mov
cmp
lods
fnstsw
scas
jecxz
cmp
or
std
sahf
sbb
xor
test
sar
jp
imulb
scas
lock
dec
mov
cmovl
ljmp
push
clc
sti
loope
in
xchg
sub
repnz
je
adc
mov
push
shrb
test
xchg
jg
iret
fs
jno
dec
shlb
pop
or
add
arpl
movsl
insl
lret
jae
mov
into
cli
fwait
scas
iret
mov
jns
jbe
into
xor
in
cmpsb
out
mov
pop
rcrb
sub
ds
pushf
lods
lods
in
clc
ss
outsb
cltd
pop
scas
fwait
xor
out
and
cmc
inc
aaa
dec
out
push
cmp
sub
in
add
xor
arpl
repz
seto
dec
in
out
sbb
andl
jnp
lcall
or
cmp
mov
sbb
fsubs
pop
jnp
xchg
into
orl
cmp
adc
push
inc
loopne
enter
sahf
mov
loope
shrb
push
dec
lea
add
push
rcll
mov
inc
iret
cwtl
or
inc
repnz
pop
out
jmp
push
push
sbb
jl
fidivrl
loop
insb
popf
adc
xchg
pop
jmp
sub
das
lcall
push
imul
pop
adc
stc
shl
in
addr16
test
or
sbb
inc
and
insb
fdivs
or
jmp
lcall
pop
cmp
cmc
mov
mov
pop
iret
xchg
mov
fdivl
outsl
nopl
stos
xchg
mov
and
aad
or
in
fistpll
inc
adcl
cs
inc
stos
gs
lea
or
iret
jecxz
jae
sahf
jae
pop
loope
adc
aas
push
xor
int3
mov
push
aaa
out
and
mov
cmp
add
js
xor
cmp
sub
jne
or
es
jo
int
adc
adc
dec
jecxz
enter
clc
mov
sub
add
inc
push
outsl
mov
insl
pusha
into
adc
inc
and
fistl
cmp
xor
sti
and
inc
adc
jmp
sub
leave
mov
shr
cs
lods
ljmp
sub
icebp
dec
out
adc
divl
mov
pop
fisubl
sbb
mov
cmp
push
adc
mov
std
cmp
adc
and
cmp
pop
outsb
mov
pop
adc
es
int
inc
orb
repz
mov
push
add
lret
pushf
enter
inc
mov
fiaddl
add
push
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
popf
cmp
mov
adc
adc
fstp
cs
sub
jnp
cwtl
pop
aam
in
dec
js
adc
pushl
xchg
pop
and
xchg
imul
xchg
fcmovnbe
fstl
mov
out
insb
rclb
jp
imulb
xor
mov
fdivrs
xchg
rsm
in
std
aad
pop
jge
xchg
add
push
pop
sbb
fildll
out
pop
jae
xchg
ss
rol
js
jmp
ret
daa
cli
pop
out
inc
push
ss
stc
push
fucomp
pop
dec
movsb
testl
fs
stc
hlt
pop
adc
xchg
movsb
and
es
int
mov
lret
popa
int
lods
ret
inc
mov
fidivl
push
mov
inc
fcmovbe
sarb
push
and
in
jl
pop
jno
sub
or
dec
lock
ja
daa
jecxz
mov
push
push
je
mov
inc
xchg
cmpsb
push
adc
popa
movl
lcall
rolb
jb
adc
sbb
idivl
pop
jno
pop
add
mov
test
popa
jns
or
and
int
jecxz
out
jo
gs
cmc
pop
es
insb
hlt
jg
xor
and
sbb
lea
loop
push
jmp
push
pop
imul
lds
jle
cmp
call
iret
ret
jne
call
inc
jne
push
mov
hlt
mov
pushf
sbb
and
sbb
pop
arpl
mov
mov
dec
in
xor
scas
pop
pop
mov
dec
push
inc
cmpsb
stos
gs
and
pop
roll
scas
enter
inc
test
xchg
push
int
or
mov
mov
jge
xor
dec
jns
fwait
jle
cli
mov
or
pop
push
scas
aas
push
mov
popa
or
push
inc
add
cmp
xor
lods
cmp
jbe
and
add
adc
aam
add
add
inc
ljmpw
jmp
aaa
push
loop
mov
or
jp
cmc
push
pop
jg
sub
lahf
inc
adc
lods
lcall
add
pusha
cmc
test
push
push
cld
fists
push
jge
arpl
js
sub
fdivrl
into
fs
testb
sarb
scas
movsb
shlb
shlb
clc
mov
loope
scas
ffree
test
and
mulb
push
out
fmull
mov
push
insb
sbb
aad
add
nop
pop
rcll
mov
shll
int3
sahf
fs
fstpt
sbb
push
fucomi
add
cmp
push
add
aas
stos
xchg
sahf
inc
sub
pop
and
cltd
movsb
orl
or
mull
out
movb
shll
mov
mov
aas
test
jmp
pop
cmpl
fdivr
repnz
call
out
pop
addb
push
nop
inc
and
mov
orb
decb
into
jo
leave
and
mov
int3
loope
js
adc
lock
lret
xor
cmp
imul
inc
cmovle
push
rcrb
lcall
jecxz
mov
sub
gs
push
sahf
dec
cwtl
pop
ficompl
cltd
sub
out
mov
ret
ret
sti
or
mov
lock
xchg
dec
mov
add
gs
shrd
jmp
ja
jle
sub
xchg
mov
adc
adc
int
adc
jmp
xor
xor
push
and
jb
xchg
or
adc
or
lods
lret
lcall
cmp
push
mov
push
data16
lock
and
adc
or
xchg
cmp
ror
mov
popl
arpl
mov
shrb
test
dec
push
and
sahf
push
jo,pt
pop
imul
jnp
cli
or
add
lea
xor
inc
movsb
pop
jmp
clc
jae
outsb
cmp
pop
dec
int3
mov
mov
dec
xor
popa
std
add
adc
cwtl
in
lcall
repnz
dec
jno
out
shrl
cmc
mov
ret
mov
out
and
dec
enter
sub
pusha
cmpsb
fidivs
ret
and
shll
sahf
fwait
stos
add
mov
les
mov
insl
xchg
jnp
jbe
rcr
add
test
mov
xchg
jns
test
adc
aad
lods
outsl
ficoml
insb
sti
mov
cmp
insb
mov
jae
ret
rcr
adc
mov
mov
imul
cmc
test
out
outsl
addr16
popa
or
icebp
adc
lods
in
repz
mov
jp
insl
adc
cltd
scas
inc
jecxz
repnz
les
xchg
inc
mov
aaa
in
dec
ret
movsb
xor
mov
pop
pop
rcrb
incb
ret
push
ja
scas
push
testl
dec
xor
fsin
dec
inc
pop
inc
sbb
adc
out
mov
jae
cwtl
mov
push
out
mov
add
ss
call
mov
push
cmc
int
enter
jo
lahf
pop
lahf
sbbl
aad
jbe
xchg
dec
cmp
sub
loopne
jle
and
pop
lods
inc
popl
lds
out
inc
pop
sub
push
lds
push
mov
movsl
in
mov
or
sti
testb
iret
adc
jmp
pop
xor
cmpsb
inc
cmpl
inc
push
out
adc
sub
pop
pop
cli
push
xor
cmp
leave
jne
addr16
std
push
xor
add
sbb
xchg
push
aas
cld
push
add
xor
imul
dec
push
push
outsl
sbb
ds
adc
popf
adc
rclb
or
in
daa
sbb
test
inc
dec
jbe
in
pop
jle
mov
cmc
lods
dec
dec
and
pop
sub
scas
in
fwait
adc
jae
test
dec
jmp
sbb
sti
outsb
mov
adc
jge
rorb
fcmovnbe
xor
mov
ret
test
xchg
adc
and
cwtl
orb
mov
fsubl
js
shr
iret
mov
jp
or
das
mov
data16
cltd
popa
push
push
out
jno
jns
faddl
outsl
test
ja
movsb
push
sbb
jne
out
test
and
sbb
mov
fcmovne
push
dec
icebp
cmp
cmp
stos
push
xchg
inc
clc
mov
rorl
adc
xchg
or
popa
inc
push
mov
ljmp
lret
and
sbb
jb
push
inc
push
push
xchg
xor
mov
out
out
jae
push
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
ljmp
mov
int
adc
cmpsl
xchg
call
frstor
xlat
ljmp
gs
or
fiaddl
stos
ds
or
sbb
loop
enter
and
mov
stos
xor
cmpsb
mov
sub
and
cmp
aad
test
in
in
cmp
push
mov
mov
sbb
sbb
mov
lcall
pop
xchg
pop
and
xor
sbb
loopne
loop
bound
adcb
add
inc
fdivrl
aas
and
add
pop
repnz
add
sbb
ret
mov
inc
inc
scas
xchg
into
or
in
out
mov
gs
adc
adc
aaa
pop
rcrb
mov
lds
add
sti
add
loopne
inc
lahf
fmuls
mov
mov
add
sbb
mov
jge
pop
cmovle
das
data16
rorb
push
cmp
push
sub
jp
int3
mov
lods
sbb
or
push
push
test
and
je
add
add
popa
mov
adc
popa
rcll
inc
insl
add
jbe
stos
ret
orl
test
out
mov
sbb
push
lods
stc
lock
insl
inc
fisttpl
loop
sbb
sahf
pop
pop
jecxz
js
ret
out
sub
xchg
sbb
mov
inc
dec
xor
xchg
dec
jle
dec
lods
xlat
sbb
add
repnz
nop
mov
jae
push
mov
dec
xchg
jg
lcall
mov
movsl
cld
testl
js
inc
pop
movsl
inc
and
adc
ficoml
jmp
cmp
mov
sahf
mov
cmp
scas
mov
and
subl
in
frstor
out
out
inc
or
scas
cmp
dec
ds
mov
push
rolb
adc
sub
insb
outsl
popa
mov
out
xor
add
mov
mov
xchg
test
adc
mov
insb
scas
popa
jp
pop
add
fcomps
stc
xchg
jmp
popf
jns
js
test
lret
pop
enter
cltd
addb
pop
std
sbbb
xor
mov
lds
icebp
icebp
scas
push
or
or
sbb
sbbb
pop
jbe
div
mov
push
adc
mov
jno
nop
pop
mov
jl
mov
cmp
fwait
mov
scas
test
mov
xchg
xor
push
inc
movsb
cmp
sub
sbb
aas
sahf
mov
inc
mov
leave
out
mov
xor
mov
xchg
ljmp
fidivrl
mov
sub
lret
push
xor
jno
cmc
shll
jae
sti
xchg
jecxz
es
xlat
loopne
inc
in
out
mov
mov
fs
jg
push
and
out
cmp
cld
enter
movsl
xchg
mov
inc
popl
xchg
cmp
xchg
jle
mov
pop
ja
cmpsb
testl
in
fistl
cmp
inc
mov
jne
cmpsl
mov
cltd
adc
push
sahf
cmpsb
int3
in
or
pop
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
and
sahf
lods
fisubs
adc
adc
sbb
xor
push
les
push
rorl
test
lock
pop
sbb
mov
leave
out
stos
lods
jle
inc
pushaw
icebp
shlb
push
xchg
imul
dec
movsl
xchg
mov
xor
call
aam
push
fisubs
loop
in
lea
aad
sbb
jl
pop
jg
add
inc
jno
xchg
pop
mov
inc
bnd
and
test
push
data16
cmc
inc
out
cmp
dec
xor
lahf
in
clc
dec
dec
mov
addr16
test
xchg
mov
jns
adc
mov
aad
xchg
rorb
xchg
in
cmp
jae
cs
push
jge
dec
pop
add
mov
push
xor
shrb
inc
mov
es
adc
movsl
mov
aad
ret
add
dec
dec
pop
roll
pop
dec
or
insb
fbstp
aam
mov
sbb
es
pushf
fwait
sar
pop
out
xor
je
movsl
mov
sbb
lods
es
jb
imul
push
mov
dec
pop
cmp
insl
xchg
jnp
aad
dec
in
push
outsl
sbb
icebp
inc
xor
fnstsw
stc
pop
cmp
into
jl
add
adc
js
test
mov
push
jbe
in
je
sysret
pop
inc
cld
xor
aam
dec
mov
pop
pop
xchg
pop
rclb
mov
dec
adc
dec
push
cmpsl
lds
clc
inc
aad
add
push
add
mov
or
insl
adc
mov
movsb
pop
imul
pop
mov
mov
sbb
mov
enter
push
pop
dec
loopne
int
lea
fldl
es
hlt
outsb
dec
pop
xorb
ljmp
dec
sub
mov
dec
xchg
test
or
mov
out
insb
imul
xchg
in
ud2
add
jb
leave
out
enter
xchg
dec
push
mov
and
adc
and
push
xlat
jns
sub
aad
inc
popa
xchg
sub
xchg
fcompl
fucomi
sarb
xorl
popf
int
fucomp
arpl
mov
ret
or
idivl
adc
leave
mov
push
cli
mov
arpl
push
and
es
aas
fistl
push
mov
jo
mov
jp
lea
call
push
mov
inc
in
pop
push
loopne
xor
dec
lret
xchg
jne
pop
push
inc
subb
cmp
sbb
lods
xchg
popa
or
leave
fbstp
or
das
addr16
xor
mov
jne
test
es
jns
push
lahf
cli
iret
add
in
adc
ss
push
pop
sbbl
jb
daa
xor
fbstp
pop
inc
and
or
imul
dec
pop
jnp
cltd
xchg
movsb
dec
xor
inc
or
and
and
mov
pop
repnz
ret
popf
cmpsb
sub
mov
data16
sbb
sub
inc
xor
loop
dec
push
cmp
enter
loopne
lock
into
je
lods
rorb
mov
mov
lock
adc
jne
mov
and
xchg
sub
test
out
cmp
jecxz
jbe
push
enter
cld
cli
jmp
mov
xlat
bound
hlt
lret
adc
mov
cmp
popa
xchg
shrb
daa
ret
cmp
and
sbb
outsb
xchg
inc
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
movsl
pop
dec
mov
xor
adc
and
call
lret
xchg
test
mov
insl
ret
dec
jle
je
xor
in
and
push
insb
push
mov
mov
ret
pop
aad
int3
push
ds
dec
xchg
rcrl
inc
cmpb
das
mov
pop
nop
pusha
loope
std
popa
mov
movl
add
cmp
rcll
xor
aad
mov
xchg
or
jbe
lods
and
mov
xor
outsb
mov
sbb
cmp
cli
adc
cmc
push
stos
pop
push
and
mov
jne
xchg
repnz
jmp
pop
lahf
mov
fildll
das
adc
data16
add
js
gs
and
int3
imul
mov
or
mov
pop
nop
ror
lret
rcll
out
dec
jge
lock
xchg
fnsave
addr16
shr
enter
nop
dec
shrl
cli
mov
or
or
sbb
sub
arpl
cmp
gs
pop
jecxz
addr16
and
popf
stos
test
adc
add
in
popf
cmpsl
adc
cld
insb
jge
push
testl
mov
xchg
bnd
mov
xor
lahf
sbb
jne
test
in
cmpsl
mov
cmp
xor
aaa
push
clc
dec
xor
adc
hlt
and
push
ds
inc
push
aad
pop
cmpsl
insl
xor
enter
sub
jle
lcall
cmp
insb
jo
and
popa
push
iret
inc
or
dec
inc
mov
push
lock
and
outsl
mov
or
sub
inc
imul
ficoms
jmp
aad
inc
jmp
dec
xchg
add
xchg
bound
push
sahf
adc
dec
xor
pushf
adc
stos
pop
mov
repz
in
sarb
inc
popl
xchg
leave
sbb
arpl
mov
mov
or
sbb
pop
leave
and
scas
jae
push
or
ret
jae
sub
inc
pop
or
and
sub
aaa
jne
dec
pop
aaa
pop
fwait
neg
lret
sub
cmpsl
scas
or
pop
shrl
pop
iret
shrl
xor
sub
xlat
jbe
pop
dec
adc
jl
adc
or
gs
mov
loopne
cmp
ror
mov
xor
int3
push
jg
pop
jae
pop
inc
ss
out
daa
pop
xchg
jne
loopne
rorl
hlt
mov
xor
aas
dec
or
cmova
inc
jmp
and
dec
imul
fndisi(8087
mov
or
fisubrl
sar
push
inc
mov
pop
and
repz
mov
shll
add
adcl
pop
cltd
popf
rorl
cmpsl
fsubrs
lahf
imul
adc
or
lret
shlb
jb
pop
cmp
inc
jg
outsl
cli
aas
fdivl
pop
push
scas
enter
nop
push
fwait
pop
popa
pushf
repnz
aad
mov
stos
divb
sbb
imul
dec
pushf
mov
js
pushf
enter
push
mov
add
mov
or
xor
jo
cmp
inc
lods
sbb
aam
imul
or
shr
mov
lret
xor
pop
push
jecxz
or
loopne
repnz
in
jae
mov
jnp
jbe
sbb
jbe
ss
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
add
adc
adc
adc
pushf
loop
pop
add
les
mov
mov
mov
jbe
cmp
das
or
mov
or
push
cmp
gs
fsubrl
xchg
dec
add
nop
xor
ret
fdivs
xchg
aad
out
mov
xor
roll
lock
ret
ret
sub
gs
lea
sbb
jle
and
aad
push
repnz
fistpl
repz
insl
fcompl
xchg
push
ffree
in
orl
cmp
loope
or
pop
loope
mov
clc
inc
mov
or
shl
cld
sti
stos
outsl
adc
imul
movsl
xor
and
mov
les
imul
lock
push
jae
loop
mov
dec
xchg
add
pop
cmp
loop
inc
mov
mov
xchg
pop
cmp
popa
mov
testb
xchg
lods
fwait
pushf
inc
cmp
pop
cwtl
mov
fadd
cmp
addr16
and
int
mov
lcall
mov
xor
mov
in
jg
in
dec
sbb
xor
aad
cmp
jg
out
push
aas
mov
jle
push
lcall
mov
pop
mov
add
lret
inc
addr16
inc
xor
loope
scas
mov
roll
adc
cmpsl
popf
scas
mov
sbbb
leave
sub
test
sti
xchg
dec
sub
insl
xchg
mov
dec
sub
nop
pop
sub
pop
mov
xchg
je
into
xor
aas
sbb
or
cmp
adc
push
xchg
mov
lret
push
mov
outsl
outsl
popa
dec
insl
push
insb
sbb
jge
sub
inc
or
jb
xorl
or
xchg
pop
in
mov
and
lcall
inc
insb
rcll
adc
inc
inc
or
push
xor
sti
mov
sahf
scas
push
jmp
ljmp
cmpsl
icebp
and
add
int
scas
enter
lahf
lock
pop
cmp
and
jb
fisttpl
sbb
mov
addl
ljmp
enter
and
iret
or
insl
test
ret
sub
lea
scas
mov
sbb
sahf
xor
adc
insl
not
cs
fwait
arpl
cs
push
pop
pop
into
mov
jp
xorl
lds
push
leave
scas
popa
xchg
push
shr
imul
loopne
jb
xlat
testl
sarb
inc
scas
sbb
das
loope
jbe
loope
lahf
jb
xor
xchg
jno
stos
xchg
ds
jmp
fnstenv
insl
cmp
pop
adc
xchg
js
shlb
add
mov
arpl
sarl
pop
pop
pop
xchg
popl
pushf
fisttps
arpl
pop
xor
gs
push
mov
fs
cmpsl
inc
mov
and
orb
addr16
adc
mov
cmp
xor
outsl
fs
iret
mov
in
shll
jle
inc
lcallw
cmpb
iret
lret
out
lea
in
cwtl
and
sbbb
mov
or
xor
jge
jmp
mov
imul
cmp
shlb
addl
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
inc
jo
inc
dec
adc
xor
adc
jo
cltd
loopne
sbb
imul
repz
lret
out
cmc
sti
mov
es
push
jl
adc
push
xchg
stc
dec
pop
sub
adc
push
cmpsb
mov
std
idivl
jge
sub
cli
jecxz
push
xchg
ss
lret
rclb
xchg
and
jns
jmp
cld
mov
int
lcall
or
out
cltd
sbb
lea
sbb
hlt
xlat
movsl
movsb
adc
fcom
xchg
xlat
bound
adc
cmp
int
adc
dec
or
pop
pop
sub
je
cmp
push
adc
and
push
test
mov
mov
pop
hlt
loop
ss
mov
lods
push
out
divl
ss
mov
fistl
jp
sti
jl
fbld
mov
decl
mov
jmp
cmpsb
in
sbb
and
add
popf
xor
push
inc
jb
inc
sbb
jnp
mov
sbbb
inc
xchg
push
daa
out
inc
test
inc
inc
cmpb
fidivl
or
sbb
or
pop
andb
mov
inc
insb
xchg
insb
jle
insl
fmul
mov
stos
clc
xor
fwait
sub
sahf
mov
rcll
lret
test
into
xorb
mov
mov
mov
mov
sub
jno
xchg
push
or
jl
mov
lahf
das
jmp
lock
scas
xchg
sub
pop
jecxz
call
dec
aaa
stos
push
xor
adc
fnstenv
add
iret
inc
push
fcomi
mov
cmp
and
sub
xor
sbb
jl
dec
sbbl
lock
roll
pop
mov
cs
dec
mov
add
loope
jae
xor
and
xor
ret
fcomi
cwtl
cwtl
cltd
xchg
stos
dec
movsb
pop
jae
or
stos
or
xor
aaa
fisubs
sub
data16
leave
sbb
mov
lock
js
gs
ja
loop
and
mov
and
js
cmp
out
aam
rolb
rcll
fs
adc
popa
mov
xor
and
iret
xchg
push
leave
icebp
inc
add
add
jns
je
jmp
into
shr
cmp
aas
cmp
imul
ret
sarl
scas
push
notl
jp
cs
jmp
pop
pushf
in
outsl
je
je
fnstenv
int
push
int3
fcoms
adc
test
int3
adc
pop
and
inc
ret
stc
fcomps
dec
out
push
stos
test
cwtl
xchg
lea
jl
sbb
mov
xchg
in
or
sbb
es
lds
in
in
sub
mov
mov
cmpsb
jg
jl
adc
sub
aam
adc
das
adc
or
aam
out
xor
mov
rclb
mov
push
inc
push
inc
adc
jae
mov
sub
push
cld
push
pop
in
or
sbb
pop
mov
or
adc
push
xchg
adc
stc
fstp
in
inc
cltd
sarb
inc
xor
cmp
sbb
adc
inc
xor
sub
lahf
loope
or
dec
leave
sub
dec
daa
mov
stos
or
push
imul
inc
add
cmp
mov
push
stos
and
movsb
and
cmp
push
xor
mov
sbb
jo
jo
xchg
decl
sbb
mov
mov
imul
xor
in
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
push
out
call
leave
popf
and
xchg
movb
je
imul
arpl
jne
leave
jp
pop
xchg
lahf
sarb
jmp
inc
mov
pop
out
pusha
inc
jp
lret
and
bnd
cmp
sub
jo
scas
add
int3
mov
mov
fsts
int
sub
jl
push
inc
ss
cmp
movsb
cmpsb
idivl
mov
jo
pusha
xor
fistl
inc
and
push
or
mov
int
pop
in
xchg
jecxz
aas
orl
stc
push
sbb
sbb
mov
dec
adc
mov
lahf
mov
in
sub
sbb
loopne
sbbb
pop
in
xchg
mov
loope
or
addr16
inc
leave
dec
mov
sbb
xchg
cs
sbb
lcall
sub
bound
sub
lret
call
es
and
add
ljmp
push
in
jne
in
mov
dec
fs
test
xor
aaa
ljmp
cli
xchg
sbb
jl
mov
mov
xchg
test
lods
ffreep
fadds
test
jb
cmc
adc
imul
sar
std
fucomip
data16
sbb
mov
lods
sub
lret
shlb
or
mov
pop
jno,pn
xorl
xor
add
out
imul
fidivrs
nop
call
push
jle
xor
or
dec
xchg
and
insl
pop
icebp
and
dec
es
int3
sub
push
or
xchg
xchg
and
test
andb
jae
ror
xor
sub
call
enter
in
rcrl
mov
out
movsl
sub
add
pop
mov
enter
pop
std
enter
jo
sbb
mov
lods
repz
jge
pop
xor
movsl
test
sbb
fiadds
pop
pop
cmp
fnstenv
mov
mov
mov
je
call
das
xchg
dec
adc
int3
pop
push
addb
insl
dec
jecxz
roll
cmpsb
lahf
sbb
fcomi
repnz
or
mov
push
cmc
mov
bound
ja
xor
ja
out
lret
test
or
adc
jae
mov
dec
loop
xor
mov
or
adc
flds
ror
mull
sahf
bound
pop
xchg
mov
push
sti
sbb
lret
mov
push
bound
dec
icebp
mull
jge
ljmp
adcl
mov
pop
test
push
mov
fcoms
add
push
rorb
or
shlb
push
xchg
xlat
adc
cmp
cmp
daa
push
cmc
loope
dec
jns
dec
gs
int3
bound
icebp
and
addr16
repnz
into
fmuls
mov
add
aam
enter
das
and
pushf
stos
popa
in
outsl
mov
lds
push
mov
bound
or
mov
inc
xor
lcall
and
call
mov
icebp
stos
fld
js
fldl
xor
cmpsl
pusha
push
mov
arpl
decb
xor
and
dec
aaa
outsl
cwtl
mov
xchg
gs
push
fisubrs
or
xchg
icebp
out
cmp
or
gs
pop
lds
mov
dec
pop
jecxz
pushf
push
js
push
jecxz
ret
push
or
inc
push
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
call
adc
adc
adc
fs
cwtl
push
ret
leave
fisubl
sub
das
leave
mov
sbbl
mov
loope
addb
adc
sbb
orb
iret
sub
cs
xlat
mov
inc
test
sbb
icebp
ret
mov
dec
adc
jb
cmp
xlat
rcll
orb
sar
sbb
scas
xchg
push
xor
pop
jle
mov
pop
push
mov
sbb
inc
adc
andl
inc
cwtl
lcall
or
ficompl
shll
int
fs
es
or
hlt
xlat
inc
pop
mov
loope
adc
xor
ljmp
pop
jecxz
shrb
and
cs
pop
seto
dec
popf
or
sbb
mov
jb
je
add
addr16
bextr
cmp
jle
mov
in
mov
add
out
pop
jg
aam
int
inc
add
fdivrl
outsl
add
and
adc
push
cmp
aam
mov
mov
test
xchg
or
mov
dec
mov
push
mov
aam
hlt
sbb
xlat
dec
mov
push
or
daa
clc
cwtl
xchg
mov
push
insl
hlt
je
push
sbb
iret
lahf
rolb
sbb
pop
rorl
push
stc
dec
mov
xor
mov
lahf
out
cmp
movsl
cltd
ss
in
popf
insl
mov
cmp
sahf
push
orl
in
push
adc
mov
dec
es
lcall
jecxz
fadds
fs
cmpl
sub
xchg
push
push
xchg
out
and
arpl
or
pop
insl
and
mov
push
adc
aaa
push
rcrl
fldcw
mov
sarb
data16
mov
stos
mov
sbb
and
inc
ficoms
incb
loop
punpckhbw
addb
cltd
iret
jge
sbb
xchg
xchg
loope
fidivrs
pop
xor
out
push
or
bnd
scas
mov
sub
int3
xchg
jo
xchg
cmpsb
inc
cmp
rcrl
fisubs
dec
xchg
mov
lcall
lock
das
pop
mov
mov
or
push
loopne
xchg
fs
outsb
sahf
mov
rcrb
and
adc
pusha
in
cbtw
inc
mov
jne
leave
shrb
pop
push
das
gs
jl
add
scas
adc
xorl
ficompl
mov
fisubrs
pop
arpl
aam
ficomps
aas
flds
cwtl
in
in
scas
and
mov
loope
fdivl
cmp
imul
push
pop
repz
adc
ljmp
fidivs
jno
inc
das
sti
sahf
cltd
jle
mov
jp
lods
jmp
or
sahf
mov
xchg
mov
mov
cmp
push
daa
push
lods
mov
cmpsl
dec
std
outsl
push
sahf
lods
mov
mov
outsb
mov
dec
pop
dec
jmp
sbb
mov
shrl
aaa
mov
in
xchg
add
je
sub
mov
pop
dec
les
inc
jo,pt
mov
push
mov
xlat
mov
xor
cmp
mov
dec
nop
xor
push
lods
js
popf
mov
lds
stos
sub
xor
cmpsl
mov
xor
cli
pop
dec
scas
xlat
repz
hlt
xchg
mov
enter
inc
xchg
lods
aam
xor
call
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
or
push
inc
xchg
lods
loopne
adc
push
decb
or
sbb
imul
mov
int
adc
addr16
outsb
test
in
movsl
add
jne
stc
sub
xchg
je
mov
jp
in
dec
push
cld
movsb
jnp
adc
lret
xchg
into
xchg
inc
inc
inc
out
and
xchg
andl
mov
into
cltd
push
xchg
int3
xchg
jp
cmp
jb
insl
in
lahf
cmpsl
xchg
arpl
loope
imul
pusha
add
adc
into
mov
notl
sbb
loope
ds
repnz
jne
int3
mov
cmp
or
movsb
jmp
lahf
ficoms
or
pop
stos
mov
popa
xor
lret
addb
jo
inc
cmpsl
jge
push
jns
mull
or
movsl
es
addr16
pop
push
ret
lock
sahf
std
xor
mov
add
pop
rolb
jbe
test
out
ja
repnz
mov
jb
aad
test
scas
sbb
iret
movsb
add
pusha
in
imul
fwait
lahf
xchg
mov
cmpsl
or
mov
add
mov
mov
cmc
pop
pop
jbe
push
scas
imul
imul
mov
bound
cmp
sbb
test
cmp
stos
divb
daa
out
mov
jbe
xor
negl
and
es
sub
jo
push
jle
adc
leave
daa
pop
mov
lahf
inc
shrb
shrb
ret
lcall
xchg
insb
mov
jg
mov
scas
or
je
insl
jns
jne
loopne
push
sahf
mov
jle
jns
and
mov
jnp
hlt
repz
add
mov
or
push
dec
mov
xchg
test
xchg
xor
or
fisubrs
xchg
mov
outsl
into
stos
jge
das
xor
cs
nop
hlt
out
cmp
inc
cld
sbb
cmp
jnp
add
stc
fisubl
mov
das
pop
popf
xchg
inc
lds
jno
rolb
insl
rcl
loope
lcall
mov
xor
lahf
mov
movb
xor
sub
xchg
or
hlt
mov
pushf
dec
movsl
out
lcall
cmp
and
lock
into
aam
dec
ret
pop
add
fwait
xchg
sbbb
sub
pop
sti
mov
insl
stos
je
pushw
mov
pushf
out
sbb
fdiv
pop
ja
inc
push
daa
adc
fyl2x
in
insb
enter
sbb
cld
sbb
dec
sbb
cmp
xor
lock
fcompl
lret
push
aad
xchg
sub
or
shll
shrb
jecxz
nop
mov
pop
dec
ror
mov
sbb
sahf
rcrb
ret
mov
fmull
jle
lret
sahf
or
mov
into
push
stc
xchg
inc
xchg
imul
lret
int
js
lods
push
cli
or
xchg
jae
sbb
int
imul
les
mov
out
test
xor
fistpl
mov
mov
cmpb
xor
and
out
dec
out
cltd
aaa
xor
mov
mov
push
stos
push
add
mov
pop
jl
int
lock
sbb
pop
xor
ficompl
xchg
mov
ljmp
cmpsl
mov
imul
add
and
cmp
jns
nop
sbb
pop
fnstcw
add
cmp
gs
sbb
xchg
scas
mov
pusha
iret
inc
pop
inc
dec
mov
lods
mov
xchg
out
push
in
shrd
xor
jmp
mov
popa
lcall
aad
push
sub
adc
adc
adc
xchg
adc
xchg
mov
mov
into
aas
repz
imul
jne
mov
xchg
sub
adc
shll
imul
jle
in
repz
bound
adc
mov
add
mov
ret
xorl
dec
cld
scas
adc
mov
sbb
mov
das
enter
push
psadbw
add
add
loop
inc
and
mov
xchg
int
xchg
or
jmp
jecxz
stos
or
cmpsl
fnstsw
sarb
test
dec
add
gs
jmp
jge
inc
es
sub
in
and
ja
pop
mov
mov
insb
movsb
push
lcall
lds
dec
sahf
fsts
jmp
sub
and
mov
rcl
mov
in
popa
lret
scas
sbb
stc
test
gs
inc
scas
cmpsb
sti
daa
lods
movsl
sub
dec
and
int
ret
pop
pushf
movsb
pop
jb
call
sbb
pop
adc
aad
xchg
jle
dec
push
loopne
jmp
inc
inc
hlt
imul
scas
xor
cmp
sarl
iret
idivl
jno
in
fdivrl
pop
xor
sub
int3
adc
leave
push
xor
mov
mov
mov
and
movl
movsl
sbb
jne
sbb
pop
fnstcw
pop
dec
mov
mov
cmp
jecxz
aad
push
dec
fsubs
mov
ljmp
sbb
into
ljmp
sti
dec
cwtl
push
aaa
mov
test
add
dec
mov
xchg
add
dec
scas
pop
out
movsl
orl
mov
fstps
aad
lods
dec
pop
xchg
jg
adc
inc
test
pop
dec
gs
jg
hlt
pop
mov
rcll
mov
in
mov
push
xchg
pop
mov
cwtl
fistps
cmp
call
bound
inc
addb
pop
out
loopne
movsb
pop
sub
jge
jnp
cmpsl
push
mov
stc
push
sub
daa
and
ss
pop
pop
lds
rcrb
gs
mov
jae
and
out
ss
aad
int
ret
dec
stos
mov
test
into
jge
cmp
iret
loopne
and
sub
mov
and
shl
ja
pop
push
dec
mov
mov
cli
jns
mov
pop
nop
mov
out
mov
fildll
cmp
jmp
scas
loopne
cmpl
add
cmpsl
clc
aas
call
into
fidivrl
adcb
nop
mov
stos
or
xchg
sbb
xchg
sub
mov
pop
dec
shll
test
mov
or
es
xchg
movsb
jmp
dec
aad
push
inc
cmp
hlt
cmpsl
and
popf
jae
pop
test
into
adc
push
cwtl
lods
mov
mov
push
enter
ljmp
cmpsb
testl
movsb
es
out
aaa
scas
das
pushf
das
shrl
mov
sub
gs
push
push
adc
fidivs
pop
push
pop
lret
mov
sbb
cltd
or
je
jnp
xor
xor
sub
movsl
cwtl
mov
cmp
add
push
jle
inc
loope
mov
movsl
pop
xchg
sbb
and
adc
int3
int3
jb
ljmp
cmpsl
arpl
cld
std
adc
movsl
jg
dec
js
cmp
mov
lea
movsb
sub
xchg
stos
jecxz
dec
add
jmp
lahf
aas
dec
dec
or
xchg
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
lea
int
adc
fmull
adc
mov
addr16
jae
or
ror
push
imul
lea
or
adc
mov
enter
lcall
loope
and
mov
mov
aam
sbb
dec
add
in
imulb
int3
ljmp
lea
jmp
push
and
xchg
add
test
aam
inc
movl
or
cmp
push
adc
stos
adc
test
push
xor
jnp
jle
cmp
fisttpll
adc
rol
ret
ss
dec
sti
addb
jnp
pop
sub
popa
aas
loopne
insb
dec
cmp
jnp
fisttpll
call
inc
fwait
sbb
push
loope
lcall
js
out
leave
outsb
jle
iret
loopne
mov
aas
lret
mov
jl
sbb
add
testb
pop
int3
inc
mov
lcall
imul
mov
pop
int3
push
imul
cmpsl
jg
aad
lods
mov
nop
pop
rorl
and
jg
cmp
xor
sbb
inc
push
jle
push
shlb
cli
sbb
cld
ljmp
repnz
inc
jb
mov
xchg
push
in
pop
pushf
fsubrp
xor
into
jae
lret
stc
cld
jecxz
sub
adc
mov
sarb
cmp
sbb
adc
cld
pop
push
aaa
imull
scas
dec
ret
jl
ficomps
and
adc
and
movl
cmpsb
cld
mov
jno
ljmp
cmpsl
lds
cmp
mov
mov
mov
cli
ss
test
sti
cltd
out
iret
mov
cmpsb
push
movsl
clc
dec
insb
out
mov
sub
into
xor
inc
lcall
or
rcrb
loope
repnz
in
add
arpl
lret
ret
iret
cltd
cmp
jp
cli
fimuls
in
or
cwtl
push
dec
inc
out
sbb
jno
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
mov
pop
lods
xchg
sbb
adc
movlps
pusha
and
xor
stos
jne
add
pop
dec
insb
insl
pop
mov
testb
mov
mov
lods
inc
pop
adc
jecxz
push
icebp
or
ret
push
dec
or
push
mov
daa
adc
xchg
sbbl
lcall
call
jae
inc
and
movsl
lret
jb
out
jp
jle
or
pusha
loop
pop
and
ret
popa
mov
mov
loopne
and
adc
mov
or
imulb
test
lds
test
movsb
and
lods
les
dec
js
xchg
shrl
xchg
dec
out
pop
in
or
ret
lock
and
fstps
cmpsl
jmp
push
adc
mov
outsb
pop
pushf
call
push
imul
jp
fisubrs
pop
scas
push
mov
jl
inc
add
adc
adc
mov
testb
pop
sub
mov
cltd
test
xchg
jg
pop
pop
call
and
jbe
mov
hlt
imul
push
sbb
call
xor
jbe
clc
pop
inc
xor
jl
lcall
cwtl
inc
leave
pop
fisubl
jmp
xor
mov
push
xor
aas
dec
mov
pop
jg
jns
add
movsb
cmp
inc
lret
call
rol
je
mov
mov
jg
sub
push
nop
fdivs
mov
mulb
xor
shld
fcoml
negl
pop
mov
and
ja
loop
mov
or
jno
dec
mov
icebp
mov
jb
adc
out
mov
xchg
loope
and
xlat
and
bound
addb
lahf
mov
push
add
push
std
xor
daa
mov
push
lret
call
inc
mov
jnp
cmpsb
xchg
push
jne
in
stc
inc
mov
push
je
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
xchg
call
adc
movlps
push
mov
push
shll
dec
push
lods
mov
lods
mov
push
cmp
push
dec
mov
sti
adc
in
inc
xchg
nop
pop
inc
lret
fxtract
arpl
sahf
push
pusha
int
call
jbe
dec
stos
mov
push
pop
cmp
je
adc
push
dec
or
ficomps
inc
sub
mov
sub
pop
lret
insl
sub
js
xchg
xchg
sbb
adc
imul
adc
and
call
cli
incb
dec
dec
outsl
xchg
add
push
pop
mov
push
hlt
pushl
mov
aas
andl
push
push
arpl
mov
addl
inc
dec
xchg
fwait
jmp
pop
and
pop
movsl
inc
mov
mov
jl
orb
lcall
testl
or
jecxz
or
pop
or
or
push
int
xor
cmp
arpl
and
dec
inc
sbb
movsl
shll
add
pusha
xchg
jnp
pop
and
lods
das
adc
sbb
cmp
xor
jmp
into
stc
mov
xchg
shrl
jecxz
add
loope
pop
out
cltd
inc
lods
sbb
mov
stos
jb
outsl
std
add
push
popf
xor
out
xchg
mov
addl
data16
mov
xor
pop
outsb
sub
test
enter
fistl
icebp
adc
outsl
loopne
xlat
push
stc
test
cmc
mov
and
lcall
dec
out
xchg
loop
sub
out
lea
mov
test
jae
jbe
addl
lock
fs
pop
sub
outsb
aam
cmpl
mov
sub
in
mov
lcall
xor
rolb
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
xchg
jle
adc
adc
movlps
pop
or
jmp
leave
orb
mov
mov
enter
out
addr16
jns
pop
push
jge
xchg
push
inc
jns
imul
cmp
imul
rcl
lods
in
shl
xor
addr16
push
and
or
pop
mov
push
inc
sarb
int3
scas
clc
adc
iret
lea
lods
cmp
out
and
fld
jl
popf
fildll
call
add
or
mov
jnp
mov
adc
or
push
in
push
xchg
push
and
xor
lret
jg
lret
into
adc
mov
dec
ret
or
jecxz
inc
addb
loopne
int
sbb
lcall
jle
add
dec
scas
jmp
or
xor
das
call
nop
decl
mov
lcall
fdivl
aaa
dec
xchg
push
mul
enter
jmp
int
ds
push
cmpl
repz
clc
adc
jecxz
pop
loop
mov
lds
pop
loopne
xor
out
cltd
sti
jle
ffree
test
cs
lcall
mov
push
xor
push
leave
add
sub
jl
adc
or
mov
pop
cmpsb
push
add
je
movsl
cmp
mov
push
imul
cmp
cmp
and
sbb
enter
cwtl
mov
pop
shrb
pop
inc
nop
loop
dec
ret
imul
xchg
mov
mov
or
out
inc
adc
sub
jne
lds
sbb
jg
lods
out
stos
mov
jl
xchg
call
sbb
test
les
cmpsl
scas
popa
pop
outsl
dec
sub
mov
sbb
aaa
cmp
sub
stc
rol
sti
mov
or
out
push
add
mov
dec
in
push
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
je
mov
fmull
adc
iret
pop
add
sub
aam
sub
in
and
cmc
adc
mull
daa
cmc
push
popf
jmp
inc
pusha
movsl
in
adc
nop
loopne
cmp
jnp
mov
push
pop
jge
xor
shlb
mov
test
xor
pop
inc
lcall
ret
addr16
mov
leave
adc
xchg
mov
push
mov
shrl
scas
add
aam
loopne
xor
jmp
cmp
sbb
cmp
or
and
lods
imul
xchg
sub
pop
leave
dec
adc
sub
fistps
jne
mov
lea
push
push
pop
les
leave
data16
sti
lcall
cmpl
arpl
mov
sbb
dec
and
clc
sbb
ja
pop
enter
add
data16
and
xor
scas
sbb
in
subl
dec
ljmp
clc
push
pushf
insb
call
jae
adc
ds
xor
sub
dec
push
mov
jbe
mov
xchg
add
and
js
cmp
adc
add
sub
es
adc
inc
cwtl
fsubl
imulb
push
sbb
inc
cs
mov
out
jno
cmpsb
mov
mov
xchg
mov
sbb
lock
pop
loope
sbb
xchg
dec
iret
lock
into
mov
jmp
lods
mov
cmp
sarl
dec
xorb
addr16
fdivs
mov
adc
mull
jns
mov
mov
pop
cld
ret
popf
hlt
inc
cmp
rcr
cmp
dec
xchg
or
pop
push
jmp
push
lods
shll
adc
test
dec
out
sbb
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
cmp
lods
loop
sti
lret
mov
rolb
test
popw
xor
pop
mov
xor
mov
fdivrs
jg
mov
mov
aaa
mov
shll
int
mov
test
loopne
inc
filds
repz
cmpsb
punpckhdq
mov
or
jmp
cld
ret
adc
jmp
ja
inc
pop
add
pop
adc
rolb
mov
add
mov
or
shlb
sbb
mov
inc
test
sti
cmpsl
fs
adc
sbb
sub
popa
sarl
fwait
push
adc
cmp
test
cltd
mov
orb
mov
mov
cmpsb
pop
popf
add
pop
bound
or
dec
in
mov
jl
mov
lods
in
int
mov
mov
mov
in
adc
ret
sti
sbb
add
out
cmp
insl
sbb
mov
subl
mov
or
movsb
dec
pop
add
cld
ret
sbb
fistpl
pop
cmp
xor
sub
jecxz
dec
rolb
mov
aas
out
jo
aam
push
mov
inc
addb
ss
mov
mov
jg
fwait
add
les
xor
setge
pop
add
dec
adc
pop
shll
cmp
rorb
xor
xchg
add
add
movsb
mov
movsl
mov
bound
fmuls
enter
pop
inc
lds
stos
out
cld
fbstp
sar
clc
jae
daa
inc
push
jbe
xor
addr16
push
push
sbb
test
cmpsb
ds
test
sahf
xchg
aas
mov
pop
adc
and
sub
xchg
iret
div
inc
in
lret
insb
inc
jp
add
inc
mov
cmp
cld
cmpl
in
test
andb
add
or
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
sbb
adc
fmull
adc
xlat
inc
push
ljmp
in
loope
dec
cwtl
stos
sbb
cmp
loopne
dec
sarb
or
push
sti
xchg
cld
xor
xchg
pop
pop
lods
out
lret
pusha
mov
hlt
adc
xchg
push
aad
fistpl
and
or
sub
in
sbb
push
add
inc
adc
xor
out
filds
xor
mov
mov
mov
rcrl
lea
cs
sbb
das
cmc
hlt
push
push
mov
xor
or
dec
and
jmp
push
add
sahf
add
cli
xor
inc
std
inc
pop
push
pop
imul
jl
push
movsb
or
js
popf
dec
movsl
push
mov
shlb
pop
nop
ds
add
lcall
cmp
out
repz
hlt
xor
mov
cwtl
dec
push
cli
fwait
loope
repz
ljmp
sbb
lahf
movsl
dec
leave
sahf
hlt
lahf
xor
push
push
xor
stc
and
in
int
mov
adc
js
and
xchg
insl
pusha
popa
insb
ss
mov
lds
jle
cmp
push
cmpsl
push
or
in
out
lods
jno
jb
jbe
or
pop
jmp
xchg
fdiv
in
rcr
cwtl
or
adcl
pop
mov
in
stc
and
xchg
stos
rol
in
cli
stos
lret
fwait
dec
jecxz
lds
dec
cltd
or
cld
mov
dec
jmp
gs
inc
inc
pop
movb
jge
dec
push
idiv
cmp
mov
pop
sub
in
mov
push
int
add
pop
mov
sbbb
push
jb
cld
aas
cmp
into
shll
dec
into
pop
cmp
and
cmpl
gs
xchg
scas
clc
push
inc
add
fstp
pop
xchg
xchg
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
imul
mov
and
stos
call
shrl
dec
inc
icebp
out
loope
pop
inc
sub
dec
dec
sbb
stos
pop
popl
or
nop
ljmp
ja
add
cld
mov
sti
cmp
dec
adc
add
jle
lcall
sbb
mov
imul
ret
adc
test
ret
clc
arpl
les
adc
je
lods
xchg
mov
int3
and
adc
jnp
daa
xor
push
push
arpl
adcl
xor
xor
sti
leave
fwait
sarb
mov
xchg
outsl
sbb
jecxz
push
or
jne
rcll
sub
xor
cmpsb
xor
imul
jne
sarl
inc
xchg
imulb
jno
inc
sbb
mov
ss
jecxz
adcb
push
xchg
ljmp
loop
push
stc
jnp
cmpsl
aam
je
aas
jo
or
cld
xchg
and
cmpsb
pop
cs
arpl
and
inc
in
sub
xor
xchg
pop
je
test
scas
mov
js
mov
xor
rcrl
push
mov
xchg
cmpsl
data16
lret
fisubs
dec
test
pop
cwtl
daa
test
vrcpps
mov
mov
jle
fmull
pop
mov
les
sbb
xchg
enter
stos
bound
xor
fsubp
add
in
xchg
mov
and
stos
mov
les
je
sub
outsl
adc
sbb
scas
cmpsb
shrl
inc
mov
out
cmpsl
and
lret
cli
mov
cmp
and
pop
xchg
mov
or
ss
loope
mov
test
in
xlat
cs
push
sti
adc
outsb
sbb
pop
sbb
mov
std
aad
shll
fwait
leave
adcb
cmp
or
cld
sub
fcmovnb
test
repz
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
fldcw
mov
aas
jno
jnp
movsb
subl
pop
int
inc
mov
sub
push
or
adc
adc
les
pop
jne
mov
sub
inc
into
add
daa
xor
and
mov
pop
mov
add
aad
xor
lods
fistl
in
pop
les
sbb
jmp
lock
cmp
adc
fldl
jae
mov
jo
gs
into
jno
mov
int3
in
jg
push
pusha
jns
mov
sub
std
pop
repnz
adc
jg
aaa
loopne
sarl
hlt
iret
cmp
sub
mov
insl
push
sahf
push
inc
mov
jb
data16
adc
jns
clc
adc
shlb
sbb
pop
xor
mov
mov
in
push
push
cmp
mov
cmpb
mov
out
mov
sar
add
cmc
jl
mov
and
lcall
jo
aam
in
xchg
ja
addl
cmpsl
scas
insl
sub
cmp
push
fisttpl
jbe
bound
pop
push
mov
mov
jne
xlat
adc
pop
push
std
in
aas
cmc
mov
jae
push
lret
inc
inc
ss
pop
cmp
inc
rclb
xchg
mov
insl
jno
js
jno
fs
fs
xchg
orb
jp
lret
popa
popa
cmp
cli
xchg
push
rcll
call
ja
fadds
hlt
je
rcrl
jmp
gs
cmp
mov
sti
ffree
fisubrl
hlt
xor
out
add
and
fs
aas
aad
jns
in
xchg
mov
data16
fbstp
rcl
cmp
mov
shlb
bound
iret
idiv
das
movhlps
sub
insl
sbb
mov
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
add
sbb
fmull
adc
xchg
lods
add
hlt
sar
xlat
mov
dec
xchg
xchg
out
daa
mov
jmp
push
std
ja
add
pop
add
dec
cmp
cmp
xor
mov
repz
mov
popf
dec
jle
lock
fadd
mov
or
cld
lret
and
sub
gs
aaa
push
rcrl
in
in
sbb
push
in
roll
shl
or
inc
pop
mov
mov
test
daa
xchg
mov
test
pop
pop
adc
sub
fisubrl
xor
repz
pop
mov
sub
push
jae
outsl
sub
mov
xchg
imul
popa
negl
fwait
outsl
inc
fs
daa
pcmpeqd
cmp
es
jns
scas
mov
inc
call
je
lea
push
jl
les
xchg
mov
inc
lds
dec
sbb
aam
stos
out
ds
xlat
int
mov
adc
add
adcl
pushf
cmp
push
mov
cmpsl
add
fcomps
adc
mov
push
into
mov
or
rol
sub
sub
xchg
mov
clc
pop
fcmovnbe
rcr
inc
cmp
pop
jecxz
xor
mov
sbb
dec
and
push
shl
clc
and
dec
cmp
mov
jb
lcall
cmp
sahf
imul
add
mov
aas
inc
jl
lods
test
inc
and
xor
xchg
shrb
movb
add
push
dec
in
jo
push
pop
lds
jo
and
jae
mov
push
sahf
shl
sub
sbb
sbb
mov
movsb
mov
xor
add
pop
test
add
jae
dec
jno
fiaddl
stos
stos
lock
xor
cltd
adc
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
out
dec
mov
fmull
adc
pop
inc
push
call
into
ficoml
mov
dec
ret
cmp
jg
movsb
xor
arpl
mov
mov
push
dec
or
fisubrs
jne
push
mov
push
je
and
mov
daa
dec
and
pop
xchg
test
stc
and
scas
clc
lods
push
sub
mov
pusha
adc
mov
dec
dec
and
sahf
mov
fsubrp
mov
jge
into
and
mov
xchg
adc
data16
push
mov
out
sub
in
and
cmp
sbb
sbb
push
nop
push
ljmp
std
and
inc
sub
and
mov
dec
in
add
pop
and
pop
arpl
xchg
cmp
sahf
jno
mov
fldl
gs
cmp
arpl
cmp
inc
ror
movsb
jle
int
dec
cmp
inc
pop
cli
mov
icebp
int3
dec
in
flds
or
movsb
out
lock
sti
outsl
ljmp
xor
adc
mov
xchg
mov
cmp
ss
test
mov
int
fsts
and
push
in
xor
pop
dec
lahf
daa
mov
scas
push
test
js
loopne
aas
pop
jge
mov
cltd
push
popf
adc
and
mov
cwtl
dec
int3
cmp
lret
in
push
xchg
cmp
shrb
loopne
cmp
push
push
lret
mov
push
jb
sbb
jl
pop
push
push
iret
loope
sub
xchg
loopne
sub
enter
aam
stos
pushf
les
mov
out
cmp
jg
out
mov
xchg
ss
jmp
in
adc
push
add
out
sti
sbb
mov
mov
fwait
orl
mov
mov
gs
adc
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
ja
ljmp
fmull
adc
pop
push
sbb
xor
push
loope
cwtl
les
dec
es
sbb
inc
shrb
push
stos
adc
dec
repnz
jl
inc
fwait
push
pop
xor
or
repz
xchg
pushf
mov
add
insl
or
loop
arpl
das
jl
cs
push
outsb
dec
push
lahf
add
js
pop
in
mov
jl
fnsave
test
mov
mov
mov
pop
and
sub
clc
jp
lret
mov
inc
jle
fisttps
sbb
repz
pop
mov
in
fwait
ljmp
or
add
data16
ret
lea
je
cmp
cmp
sbb
out
stc
mov
pop
adc
test
xchg
ret
nop
outsl
add
scas
push
fiaddl
stc
vphaddwd
lahf
and
pop
test
lahf
out
sti
fidivrs
inc
push
sub
mov
inc
lret
cwtl
xor
nop
mov
cmp
rsqrtps
rcr
add
ljmp
call
pop
fisubrl
jbe
and
mov
xchg
adc
and
cmp
dec
push
decl
dec
mov
inc
adc
iret
xchg
mov
and
lahf
in
or
push
je
icebp
jnp
cmp
shrl
pusha
fldenv
mov
sbb
xchg
cmp
stos
mov
bound
cmp
sti
jp
push
cmp
fadds
push
dec
push
sbb
loope
pusha
inc
repz
adc
sub
inc
outsb
jb
loop
ja
test
jg
movsl
rcl
xchg
repz
insb
imul
mov
cmc
pusha
hlt
and
push
adc
cwtl
sahf
mov
int3
pop
out
mov
stos
shr
pusha
sarl
in
in
cmpsl
in
incb
inc
stc
jae
inc
jmp
negb
cmpsb
xor
fisubrs
call
fdivl
inc
fbld
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
xchg
out
scas
adc
jle
or
aas
js
inc
jecxz
sub
dec
outsl
add
scas
daa
pop
mov
xor
inc
sub
jmp
pop
xchg
lds
mov
xor
arpl
int
or
pop
jnp
test
add
mov
lock
test
int3
and
popa
ja
push
scas
addb
fmull
lcall
dec
or
inc
clc
push
inc
or
std
repz
inc
inc
aaa
pop
xchg
jno
xchg
adc
jecxz
mov
inc
fistpll
cmp
outsl
dec
cmp
and
mov
mov
sbb
aam
es
loope
add
ficomps
nop
aas
xchg
sub
cmp
es
or
out
fistpll
and
and
insl
pushf
mov
inc
ret
and
and
ds
or
push
add
leave
adc
mov
mov
dec
popa
inc
mov
push
dec
pop
lods
or
mov
mov
cmpsl
xor
lcall
pop
sub
cs
ljmp
sub
cltd
xchg
jnp
push
xchg
decl
mov
mov
fisubrl
cld
bound
fdivl
pop
aam
addr16
push
inc
ljmp
jns
add
jp
arpl
sub
lods
fnstsw
sub
in
mov
lret
test
enter
pop
push
cli
aad
mov
jb
dec
dec
xchg
loopne
cld
ret
pop
imul
das
add
ljmp
fsub
arpl
sti
sbbl
mov
mov
popl
or
mov
ja
mov
and
fwait
aas
pushl
push
mov
add
add
push
push
push
adc
and
push
sbbl
mov
mov
lret
push
pop
push
jne
mov
rolb
and
jnp
xchg
xor
cmc
lcall
clc
adc
imul
ja
mov
scas
sub
cs
push
push
scas
jl
push
inc
into
and
in
cmc
fistps
inc
dec
xchg
lar
lods
stos
adc
push
push
and
int
icebp
clc
push
imul
push
xor
inc
orl
and
inc
mov
shll
insl
std
daa
aad
sbb
out
mov
jae
pop
mov
imul
push
lahf
mov
xor
aas
pop
xorl
xor
stos
pushf
mov
inc
jne
push
xor
adc
in
cwtl
dec
mov
cmc
fcoms
cmp
dec
nop
and
pop
out
divb
movsb
mov
pop
rcrb
and
cmp
stc
add
test
add
xor
inc
std
push
add
xlat
mov
das
add
test
xlat
and
and
mov
ret
inc
inc
lea
jno
daa
push
lds
outsb
loope
inc
xchg
cmp
mov
inc
sbb
adc
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
fsubrl
adc
adc
cltd
cmp
lods
lret
adcl
xchg
sahf
iret
int
pop
mov
mov
testb
push
pop
mov
inc
test
sarl
dec
sahf
pushf
xchg
imul
cmpsb
jmp
test
sarl
lcall
jae
sahf
rolb
sub
xchg
sarl
xchg
pop
fbstp
lahf
shrb
mov
lret
mov
adc
xlat
mov
jae
mov
jno
push
call
imul
dec
ds
and
inc
pop
push
dec
mov
xor
xor
outsl
add
popf
int3
pop
cltd
nop
test
jnp
and
in
cs
imul
mov
or
pop
dec
cmpsl
jl
mov
shl
push
stc
cmpsl
cmpsb
inc
cmpsl
and
cld
stos
push
das
jmp
aas
js
inc
js
clc
in
out
mov
dec
sbb
add
dec
pop
insl
lds
popa
rcrb
icebp
mov
enter
dec
fldl
iret
or
cmp
scas
les
fisubrs
sbb
jge
test
sbb
das
mov
inc
mov
inc
cwtl
pop
dec
push
gs
shll
adc
jmp
dec
out
lret
jmp
jecxz
mov
xchg
push
mov
adc
shl
push
pop
aam
cmc
push
push
inc
addb
cltd
jo
mov
dec
dec
sub
arpl
or
data16
sbb
lds
or
xor
cmp
sub
add
and
aad
mov
dec
inc
inc
shlb
outsb
lea
cmp
pop
add
daa
jecxz
adc
mov
mov
jae
addb
jno
jecxz
sbb
fnstcw
mov
aas
imul
movb
mov
movsl
ficomps
ljmp
int
sti
adc
call
mov
mov
xor
jbe
lock
adc
mov
fstpt
push
push
sub
mov
xchg
adc
sub
clc
ja
jmp
ret
subb
pusha
sbb
ret
inc
into
fwait
inc
jb
sbb
dec
jb
adc
test
push
gs
cli
cmp
jb
xchg
gs
hlt
sbb
mov
std
dec
sbb
pop
fs
subl
push
stos
inc
orl
scas
jns
aad
cmp
cmpsb
clc
outsl
sbb
mov
add
flds
jg
call
in
aam
lods
push
cmpsl
negl
inc
test
sub
mull
dec
stc
cmp
lea
test
out
bound
mov
sbb
sub
push
inc
mov
xchg
jecxz
mov
mov
pop
imul
insl
arpl
push
dec
pop
popf
xlat
xor
jmp
fcoms
jbe
cmp
jne
pop
shll
pushf
add
xor
dec
inc
das
addr16
push
sbb
inc
dec
test
cs
ret
enter
push
imul
imull
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
daa
out
in
adc
jo
adc
and
push
adc
int3
fnstenv
push
fidivs
shl
sbb
mov
adc
jle
push
lods
les
mov
push
ret
dec
xor
cmpsb
sub
inc
mov
mov
dec
sub
push
jns
sub
repnz
mov
sbb
push
js
xor
pop
stc
jns
jae
idivb
lea
mov
hlt
push
inc
or
das
lcall
mov
dec
lods
push
popa
and
mov
nop
push
lahf
xor
loope
popf
clc
sarb
test
adc
icebp
and
sar
push
push
jl
jl
aam
mov
mov
imul
pop
das
imul
cltd
push
push
or
fs
adc
icebp
dec
mov
dec
fwait
out
inc
add
pop
rol
mov
mov
jno
stc
sti
loope
lea
xor
lea
je
pop
push
push
arpl
sub
ret
xor
icebp
sahf
daa
xchg
mov
xor
jecxz
fwait
mov
ljmp
int
sbb
cmpsb
sti
inc
mov
cmp
adc
sahf
data16
daa
mov
push
mov
out
scas
fs
cmpsb
sub
xchg
cld
adc
xchg
out
adc
data16
pop
test
push
sbb
mov
mov
int3
repnz
sbb
mov
inc
popf
mov
mov
fstpt
mov
add
outsl
pushf
inc
add
add
ss
add
in
push
out
mov
lods
mov
jno
sahf
test
hlt
pop
sbb
and
ja
jns
cmp
int3
int
rclb
mov
cmp
movsl
out
pop
inc
jbe
enter
jl
mov
jno
fisubs
cmpsl
jmp
in
out
jno
push
loop
adc
nop
test
iret
stc
sub
les
sahf
testb
and
jle
leave
dec
cld
jno
fmuls
mov
fmuls
mov
shr
dec
insl
in
imul
sub
and
and
shlb
out
popf
push
jmp
lods
xchg
js
cmc
hlt
lock
test
stos
cmp
fcompl
dec
sbb
jle
testb
jg
mov
add
fistps
inc
pop
mov
and
adc
sbb
sub
mov
rolb
push
pop
fwait
add
sbb
movsb
pop
xlat
inc
sar
mov
xor
flds
inc
arpl
mov
out
jecxz
outsb
push
xor
pop
pusha
adc
adc
rorb
and
xor
and
push
fcomps
jge
sbb
xchg
and
mov
pop
xchg
rol
and
popf
stc
mov
adc
add
and
adc
mov
fs
inc
fnsave
mov
mov
fildl
xchg
hlt
je
xchg
int
cli
cmpsb
sbb
ds
push
adc
je
imul
mov
inc
into
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
ds
stos
inc
fstl
adc
adc
mov
lock
xlat
inc
sti
or
stos
sub
xchg
pop
aad
pop
sub
pop
leave
aam
int
inc
mov
inc
fnstcw
xchg
loope
cld
mov
push
std
mov
out
ret
subb
sub
out
push
sbb
fwait
in
sbb
push
addl
sub
cmp
std
imul
push
fs
dec
jecxz
insb
dec
xchg
pop
popa
int
data16
add
idivl
movsl
int3
push
add
dec
mov
repz
dec
adc
cmp
cmp
push
test
add
fwait
inc
mov
or
cld
mov
roll
pop
int3
mov
pop
insl
dec
xor
ja
mov
les
xchg
cltd
fwait
mov
sahf
sbb
xor
negl
stos
jbe
and
mov
inc
mov
pop
mov
fwait
inc
jle
stc
push
scas
out
lods
into
nop
out
mov
mov
or
and
xchg
pushf
fmull
ljmp
scas
adc
push
fsubrl
icebp
mov
sub
pop
xchg
jge
lds
sub
aam
mov
xor
xlat
mov
pop
and
les
je
fdivrl
aam
adc
inc
add
jnp
test
pop
loopne
push
test
mov
lahf
adc
jle
lret
mov
repnz
data16
fnstsw
loopne
das
scas
mov
cli
ljmp
sub
cmp
and
and
pop
pushf
js
lea
dec
lds
mov
sti
cmp
pop
movsl
daa
aad
and
bound
orb
push
lcall
sbb
mov
xchg
push
test
mov
and
mov
mov
scas
enter
xor
out
xchg
cwtl
sahf
rcrl
stos
aam
sub
mov
test
push
inc
wbinvd
jg
xchg
mov
mov
add
orb
insb
cld
enter
bound
xor
mov
mov
pop
mov
mov
mov
mov
aaa
popa
dec
test
pop
xchg
nop
shl
push
mov
out
mov
notb
bound
mov
std
mov
test
sbb
aas
push
mov
out
add
arpl
ja
call
fisubl
pushf
jle
mov
lds
ljmp
sbb
or
mov
jmp
jns
gs
ds
mov
test
cmpl
add
in
push
scas
cmp
sub
addl
jo
or
sub
inc
pop
iret
stos
add
sbb
mov
and
aad
cmpsl
inc
or
lahf
cmc
push
mov
mov
xchg
pop
insb
pop
mov
rorl
mov
push
sahf
xorl
jns
clc
mov
pop
jno
and
mov
lods
inc
cld
dec
inc
pop
je
add
mov
xor
xorl
test
dec
and
repnz
sahf
popf
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
mov
aad
adc
adc
shl
sbb
sahf
clc
cmc
dec
jbe
nop
insl
ljmp
faddl
inc
cmovno
addr16
inc
pop
stos
adc
dec
dec
shll
cmpsl
push
scas
sub
sarb
popl
dec
fwait
pop
pop
jae
mov
sub
inc
les
add
xor
scas
mov
scas
lock
insb
lea
pop
pushf
clc
lret
mov
and
xchg
cltd
notb
jne
dec
xchg
scas
addr16
mov
fisttps
loope
cmp
and
or
inc
xchg
dec
xor
fidivs
repnz
sub
adc
mov
sahf
xor
aaa
mov
xchg
test
insl
xor
outsb
mov
dec
fsubrl
shll
xchg
cli
out
pusha
pop
aas
sahf
enter
enter
lret
outsb
pop
dec
add
les
and
ret
and
inc
cmp
repz
fwait
jnp
sub
out
lods
pop
push
or
into
mov
sub
dec
fmul
add
dec
adc
lods
das
sub
inc
cli
mov
sub
pop
hlt
cltd
and
jno
inc
add
fisubs
sbb
dec
mov
insl
fadds
mov
ljmp
ja
enter
cmp
sbb
lods
fbstp
fiaddl
out
sub
jmp
mov
pop
xchg
pop
sub
sbb
cmpsl
iret
outsl
xchg
cs
dec
mov
dec
movsl
dec
mov
push
faddl
sub
fdivrs
stos
mov
push
out
or
popa
xor
loope
pop
sbb
adc
xlat
push
push
inc
mov
out
xchg
or
mov
push
fdivp
in
sahf
push
lret
lods
loop
adc
xlat
jl
aad
adc
push
xchg
push
push
xchg
xchg
jecxz
push
cmp
xor
insl
xchg
sub
aaa
stos
adc
cmpsl
or
mov
in
xchg
andl
lods
iret
mov
pop
push
jmp
fcmovu
push
pop
movsl
dec
sub
or
push
sub
cmp
imul
adc
mov
repz
inc
int3
pop
lret
daa
std
in
sub
push
pop
push
rcrl
in
rol
outsl
adc
jp
sbb
insl
cwtl
in
or
int
jge
and
inc
dec
mov
push
test
aam
in
xchg
xor
or
cli
mov
cmp
pop
pusha
pop
aam
push
dec
jnp
not
or
pop
cs
lea
and
jg
out
scas
fistl
lock
std
jno
loopne
ja
lea
mov
xchg
pop
add
jne
xor
lods
and
cld
lret
out
negb
in
mov
mov
mov
add
outsb
dec
sbb
hlt
fstpt
mov
and
inc
imul
pop
xchg
sbb
out
hlt
cmp
pop
mov
dec
stos
xchg
jne
and
pushf
gs
int
dec
test
faddl
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
ljmp
adc
adc
xchg
outsl
shlb
pushf
xor
in
push
in
not
imul
es
push
iret
jmp
leave
out
popa
sub
push
inc
xor
mov
mov
jno
push
push
adc
in
and
mov
sbb
push
jl
push
xchg
js
pop
inc
or
dec
loop
das
cmp
cwtl
test
insb
jno
pop
xchg
adc
jns
loope
dec
xlat
pop
jp
mov
sahf
aas
ss
jle
mov
aaa
into
scas
sbb
cmp
fcmovbe
in
dec
dec
in
inc
adc
popa
imul
jae
jnp
add
stos
cmp
ret
test
fldt
cmpsb
dec
arpl
mov
xorb
xchg
sbb
loope
clc
mov
xchg
aad
pop
push
call
mov
call
xchg
push
movsb
into
xor
out
shlb
push
sub
cmp
arpl
push
and
fs
stc
je
ss
jbe
nop
mov
loop
push
cmp
mov
dec
or
in
mov
enter
rcrl
push
dec
sarb
dec
jbe
inc
ret
jg
mov
rcl
cltd
sarb
mov
xchg
add
xor
outsl
stos
pop
xchg
fs
insb
mov
stos
aas
movsl
mov
in
loopne
test
ret
xor
push
jne
cmp
inc
fadd
ficomps
loope
push
mov
fadds
outsl
or
jb
jl
push
pop
sub
cmp
adc
mov
dec
pop
in
nop
call
cmc
push
mov
add
ror
bswap
sbb
push
stc
push
in
sahf
std
outsb
jno
stos
xchg
fwait
cmpsl
xchg
bswap
sar
pop
fcmovb
inc
xchg
repnz
out
xor
dec
cmpsb
ds
mov
stc
mov
aas
ffreep
dec
rolb
gs
mov
mov
out
inc
jns
mov
testl
add
or
dec
mov
addr16
sub
or
mov
int3
push
adc
les
sarb
xor
lods
inc
test
sbbl
xchg
sti
and
fwait
mov
lahf
mov
cltd
cltd
enter
xchg
dec
mov
pop
inc
shlb
lea
push
sub
push
add
stc
and
out
imul
push
inc
adc
mov
clc
push
subb
dec
xchg
cmp
mov
inc
mov
cmp
adcl
lea
add
jmp
sbb
cmc
mov
nop
dec
rcrl
add
fstpl
int3
dec
in
mov
loope
shll
out
movsb
jl
sbb
xor
jnp
sarl
test
xchg
push
jno
ss
mov
fdivrl
pop
sarb
mov
hlt
insl
insb
divb
adc
or
jbe
repz
sub
vprotw
enter
sub
cmp
add
pushf
jecxz
cmp
add
insb
js
jnp
pushf
mov
test
mov
rorl
enter
pop
int3
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
nop
lods
call
test
in
add
arpl
in
push
arpl
fcoms
mov
jecxz
sbb
ljmp
fst
inc
jge
mov
sbb
xlat
pop
dec
sub
rcll
jo
arpl
cltd
xchg
stos
out
xlat
cwtl
xchg
xor
jno,pt
sbb
jns
mov
push
enter
outsl
insl
or
dec
mov
or
sti
cmp
shlb
lock
flds
dec
xchg
fs
push
or
sub
dec
fisubrl
rclb
xor
xchg
adc
pop
insl
push
pop
adc
or
mov
fisttps
dec
popf
mov
movsb
movsl
lds
sarb
sub
add
ficomps
xchg
sub
mov
push
mov
aas
loopne
data16
dec
push
stc
lea
xchg
arpl
pop
jecxz
jae
add
adc
dec
cltd
loopne
mov
mov
sub
or
mov
dec
lds
pop
outsl
cmp
xchg
aas
pop
jg
test
scas
adc
dec
arpl
and
add
movsl
fiadds
push
pusha
incb
xchg
test
and
ljmp
insl
addb
cmp
inc
jle
jge
mov
add
add
out
cmpsb
and
mov
push
xchg
inc
cmp
sahf
xchg
fstpl
insb
cwtl
lock
dec
fdivrs
jmp
mov
jnp
enter
add
cmp
inc
or
cmp
dec
sub
cltd
stos
lret
push
stos
mov
addb
lcall
xchg
fsubl
dec
test
push
adc
and
outsb
cli
scas
ret
test
out
cwtl
sbb
popf
mov
pop
out
loopne
cmpsb
das
addr16
repnz
pop
stc
dec
ja,pn
sub
sbb
jle
std
arpl
sbb
mov
je
gs
gs
movsb
je
les
aas
push
out
adc
pop
adc
imul
xchg
sub
xor
fwait
xchg
aam
mov
inc
pop
push
in
sub
mov
add
iret
dec
cmp
mov
mov
mov
xor
mov
ror
test
cmp
adc
adc
jp
mov
arpl
or
and
leave
mov
xlat
insb
sub
rcll
pop
push
xchg
sbb
loopew
fstpt
mov
sbb
lock
pop
adc
cmpl
mov
cmp
or
push
push
out
push
xor
repnz
lcall
and
sti
add
fistpl
xchg
out
hlt
mov
sbbl
rorl
jp
int
cmp
lods
dec
js
cmc
lret
dec
pop
in
cmpb
jg
sbb
in
aad
mov
mov
sub
cmp
mov
cli
shrb
inc
out
addr16
push
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
xchg
xor
mov
adc
jo
adc
or
or
jecxz
cmp
lahf
sub
decl
sub
in
psrad
pop
xor
sub
popa
inc
lods
sbb
mov
movsb
add
fstpt
out
or
mov
or
add
mov
mov
add
ret
xchg
mov
xlat
sub
dec
les
cwtl
mov
xchg
jbe
xchg
pop
push
and
mov
sbb
aad
xchg
ret
lcall
xchg
pop
mov
vpmacssdql
testl
pop
adc
xor
dec
pop
mov
bound
aad
bound
and
fisubl
mov
and
fildl
imul
ljmp
mov
inc
mov
dec
push
fmull
jg
and
fbstp
sub
cmp
xor
push
jmp
movd
inc
ret
cmp
xchg
paddw
mov
adc
cltd
or
sub
int3
loope
cltd
das
push
mov
pop
xor
sub
push
lret
inc
lds
xchg
ret
adc
fwait
jbe
adc
push
fmuls
loope
cs
mov
xchg
cmp
lea
jae
mov
movsb
mov
mov
pop
rolb
dec
cmpsl
in
pop
xchg
das
mov
std
mov
sbb
mov
dec
mov
and
test
inc
popa
lods
fcoml
adc
int3
dec
cmp
jns
loopne
out
insl
dec
pop
xchg
in
add
imul
cs
rcrl
fcmovnb
fiadds
lret
xchg
ret
sbb
sub
dec
push
arpl
scas
adc
insl
pusha
hlt
movsb
inc
inc
push
shlb
cmp
dec
mov
fwait
sub
jle
push
cld
out
mov
lock
push
shl
sub
jmp
pop
dec
pop
dec
dec
cwtl
inc
inc
leave
ss
mov
int3
js
lds
pop
or
mov
and
jmp
ja
das
inc
fisttpll
repz
lock
push
inc
or
shll
sbb
repz
mov
push
push
xchg
mov
sub
icebp
or
pusha
mov
cmp
test
out
jmp
push
xchg
adc
out
push
or
xor
push
lcall
enter
adc
aaa
push
jmp
lods
dec
pop
mov
add
es
xor
push
popf
std
aas
ljmp
lea
xor
inc
mov
mov
and
lods
lahf
add
push
jno
sti
aam
test
xchg
ss
pop
stos
lock
mov
clc
pop
loop
testl
jl
push
pop
sbb
popa
lock
jne
push
push
inc
mov
fs
jo
int
and
and
and
lret
xor
dec
cmpsl
mul
fwait
lods
lret
js
mov
pop
pop
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
pop
in
push
push
mov
adc
adc
dec
jge
pop
cs
int3
pop
les
push
inc
sbb
or
cmpsl
pushf
out
push
dec
xchg
push
mov
into
insb
add
js
loop
push
mov
and
or
int
jg
lods
lret
push
sbb
stos
and
adc
pop
pop
aaa
test
dec
add
jnp
fists
adc
xchg
or
xchg
shll
int
das
sub
fidivs
add
cmpsb
leave
dec
out
xchg
mov
jo
inc
push
rorl
addr16
jg
lcall
mov
pop
icebp
push
lock
push
or
cs
or
add
ret
sahf
shr
lret
inc
xchg
fdivrs
xchg
dec
mov
not
adc
add
and
enter
sub
add
jae
add
and
clc
mov
je
xchg
xor
add
std
mov
dec
cmc
rcll
dec
dec
scas
xchg
jge
es
fwait
adc
aaa
mov
mov
jae
sub
xor
cmpsl
add
jno
int
loope
sub
insb
jns
dec
lret
mov
mov
xorb
sub
push
mov
cwtl
incb
jecxz
arpl
inc
in
loopne
push
jne
sbb
jne
mov
lcall
xor
insl
push
mov
push
mov
in
je
push
xchg
outsl
and
and
idiv
repnz
sahf
fidivrl
cvttps2pi
cmc
adc
mov
mov
hlt
add
jae
scas
pop
push
dec
out
mov
out
aaa
mov
jns
mov
pop
sbb
xchg
mov
add
pop
cmp
xchg
outsb
mov
xchg
mov
mov
cmpsl
popf
or
out
push
jbe
mov
or
lea
cmp
sbb
dec
mov
jnp
repz
prefetcht2
divl
jbe,pn
pop
ja
pop
or
or
fs
cmp
adc
loopne
leave
out
jge
sub
dec
push
cmp
push
pop
cmp
sbb
das
push
hlt
dec
movsb
shr
cmp
sub
in
dec
add
pop
popf
inc
shlb
push
fildll
rcll
mov
mov
incl
cs
mov
dec
add
or
movsl
dec
adc
int3
xor
xchg
pop
cmp
loope
insb
pop
aad
aaa
inc
fdivrl
sti
ret
cmpsb
xchg
mov
pop
rorl
pop
mov
outsb
mov
loop
inc
in
lahf
jge
dec
cli
lock
jge
ficompl
pushf
cmpsl
and
mov
xor
push
fstp
mov
shll
iret
pushf
movsl
cmp
add
hlt
int3
xor
cwtl
in
icebp
out
test
enter
stos
test
inc
mov
or
push
add
mov
mov
cs
cwtl
jne
repz
and
mov
or
pop
sub
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
xchg
das
imul
pop
inc
fs
negl
imul
cmp
stos
movsb
push
mov
sbb
jnp
dec
jge
test
push
or
lcall
ret
or
inc
stos
out
xorb
mov
pop
mov
and
in
call
mov
pop
roll
imul
mov
jno
fwait
sbb
ljmp
lods
dec
adc
cmpsl
jecxz
les
push
push
in
fs
pusha
lea
movsb
in
js
outsb
pop
popa
fs
mov
lock
stos
add
push
jno
ret
fsubr
jle
xchg
mov
repz
mov
scas
cs
xor
mov
sbb
adc
ja
and
add
clc
inc
fcompl
shll
adc
push
lret
outsb
hlt
mov
add
push
out
outsb
adc
mov
fisttpl
loopne
mov
fxch
adc
mov
jae
sbb
adc
xor
push
mov
mov
adc
xor
mov
sar
adc
test
and
daa
pop
ljmp
push
jmp
dec
fimull
test
cmpsb
movsl
mov
iret
dec
pop
into
ljmp
ret
loope
dec
mov
inc
aaa
cmp
adc
lea
dec
pop
pop
cmpsb
sub
jnp
sbb
cmc
enter
mov
mov
xchg
daa
pop
mov
jo
mov
push
fpatan
fidivs
shll
testb
pop
adc
jmp
mov
mov
pop
xor
inc
test
lret
mov
mov
mov
inc
sbb
aaa
pop
sbb
std
cmp
mov
lahf
dec
out
jmp
enter
into
hlt
xor
dec
sbb
sub
addr16
fcompl
dec
and
int
lock
mov
cli
into
movsl
out
sub
xor
in
andl
dec
loopne
pop
in
rorl
push
add
push
jmp
push
pop
push
js
jbe
jle
stos
adc
stos
movlps
shll
cmp
loop
insl
lea
inc
gs
ljmp
shl
and
sub
push
movsb
adc
call
xchg
mov
es
pop
loope
or
and
dec
mov
nop
and
pop
pop
mov
aad
aaa
inc
jle
pop
sbb
fimuls
cmpl
mov
jnp
syscall
pop
lea
dec
mov
lock
cmpsl
jmp
push
fdivrl
or
nop
andb
loope
adc
and
cli
movd
in
mov
adc
sahf
fwait
cmp
aad
rcl
cmp
dec
pop
ljmp
pop
jmp
in
add
negl
mov
or
mov
repz
popf
xor
pop
and
shll
mov
aas
sbb
jno
lock
in
push
in
pop
jnp
shll
nop
or
sahf
imul
jmp
pop
stos
out
pop
mov
loop
stc
repnz
nop
shlb
or
iret
ret
pop
dec
mov
fwait
sbb
or
loopne
mov
xlat
ss
mov
pushf
mov
mov
jmp
fwait
cmp
fstpt
lahf
and
sub
outsb
push
inc
inc
pop
clc
cmp
je
popa
adc
cwtl
jns
and
stos
adc
mov
xchg
ja
scas
mov
je
mov
dec
bound
ja
push
pop
jge
ljmp
mov
test
add
mov
mov
xchg
mov
sub
and
add
fsubs
sbb
loop,pt
mov
xchg
xlat
jl
sub
ret
add
inc
mov
loope
mov
in
int
and
xchg
sub
inc
or
sbb
mov
jmp
out
sub
aas
pop
shll
shl
add
jae
xchg
cmp
cli
sbb
lahf
gs
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
cli
es
cmpsl
adc
stos
movlps
mov
leave
xorb
jno
es
idivl
in
jl
dec
push
cmp
inc
es
xchg
aas
pop
div
jle
jge
dec
ret
xchg
lea
mov
pop
jge
pop
outsl
dec
aas
inc
ffreep
and
sub
bound
sbb
popa
fnsave
sarb
stos
push
adc
jmp
rcrl
leave
sbb
hlt
aaa
dec
and
cs
pop
icebp
jo
jb
cmp
push
sbb
dec
popa
les
fdivrl
fistl
xor
and
inc
mov
loopne
cmp
mov
mov
mov
sub
push
repz
mov
std
in
or
mov
jmp
inc
add
ja,pt
clc
scas
inc
bnd
pushf
jle
out
mov
xchg
pop
cwtl
inc
push
jmp
lahf
jl
test
scas
gs
and
sbb
dec
arpl
repz
mov
xor
push
dec
lret
stos
add
and
cmp
mov
pop
icebp
push
mov
leave
stos
sub
rclb
fsubp
outsb
jmp
push
jae
divb
stos
imul
sub
clc
add
arpl
clc
xchg
mov
dec
pop
popf
test
dec
std
mov
and
and
or
out
out
ss
adc
jb
or
test
inc
sub
es
mov
xchg
outsb
outsl
sub
mov
sti
jp
dec
out
push
jno
sub
mov
add
cmp
fucomip
lret
adc
xor
add
rclb
adc
dec
repz
sub
cld
dec
int3
int
scas
roll
push
jecxz
push
in
aam
cli
hlt
add
sub
ja
andl
xlat
mov
pop
cltd
stc
shll
jmp
shrb
jge
jg
jns
xchg
mov
mov
xchg
pop
test
test
add
ficompl
shr
fimuls
stos
outsb
clc
loope
and
xchg
in
ss
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
mov
call
adc
and
gs
je
xchg
or
cmp
ja
mov
inc
push
push
sbb
adc
cli
ds
test
sub
pop
adc
or
adc
dec
ja
pop
push
and
fcmovnu
mov
call
dec
outsl
push
dec
fildl
int
hlt
xor
dec
inc
bnd
cmp
xchg
out
push
sub
adc
sbb
mov
fnstsw
jb
test
repnz
imul
mov
inc
lret
loope
call
jnp
push
pop
in
scas
cmp
push
pop
lods
lods
xchg
push
mov
jno
bound
movsl
loop
rcr
xchg
in
inc
dec
into
sbb
notb
ret
or
sbb
insb
adc
add
inc
add
bswap
push
neg
int
scas
push
cmpsb
ss
dec
cmp
or
in
nop
hlt
inc
or
or
lea
stc
push
hlt
mov
mov
jge
in
and
mov
pop
into
in
pop
mov
lods
testb
dec
fucomip
out
int
mov
adc
cs
ror
add
add
push
fwait
nop
adc
call
aas
sbb
xchg
jge
pop
jo
mov
dec
push
sbb
fstpl
sbb
pop
lods
sub
pop
dec
push
dec
lea
sub
mov
jbe
imul
aad
xor
loop
xchg
aad
arpl
shll
pop
pop
pop
mov
jne
mov
xchg
xor
or
adc
push
mov
sbb
popf
mov
imul
scas
or
ds
inc
dec
cs
add
lret
push
xchg
xchg
int
dec
dec
rcll
lret
fstps
ficomps
cmp
stos
mov
inc
ss
push
xchg
or
aam
fldenv
mov
jmp
loop
in
test
mov
xlat
cmp
outsl
inc
cld
and
sti
pop
imul
rcrl
out
cmp
scas
fcoml
sahf
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
loop
jmp
mov
adc
stos
movlps
xor
jmp
adcb
arpl
adc
call
mov
pop
mov
jb
xchg
in
mov
inc
aam
lcall
push
int
xor
jg
inc
lods
pop
adc
mov
into
add
outsl
xchg
push
inc
into
iret
dec
and
scas
stc
xor
sub
cmpsb
lock
aas
bound
iret
adc
fwait
mov
sub
xchg
vhaddps
arpl
insb
xor
int
out
movsb
into
lcall
xor
mov
test
cmpsl
aaa
movsl
inc
sbb
xchg
mov
xor
decl
cmp
cmpsb
mov
xchg
pop
shl
sbbw
push
push
mov
div
or
jecxz
mov
adc
cmp
jae
and
cltd
cmp
cmp
lahf
lcall
inc
scas
sti
and
sub
sub
sar
dec
and
dec
cmp
mov
lret
mov
and
mov
gs
adc
out
fisubs
leave
cmp
daa
ja
mov
movsl
cmc
push
or
adc
xor
sbb
rcr
aaa
push
in
xor
dec
inc
add
std
repnz
pop
mov
xchg
xchg
and
andl
pop
and
js
mov
xchg
jbe
stc
mov
rcrl
mov
mov
mov
pop
push
cmp
pop
inc
mov
cvttps2pi
fsubl
xor
out
ds
arpl
aaa
mov
mov
outsb
aad
enter
insb
enter
or
shl
sbb
stc
cmp
push
mov
pop
cli
pop
clc
add
bt
xchg
lret
jmp
bound
mov
pop
push
ds
or
mov
xchg
jae
mov
pop
xchg
clc
xor
pop
pop
mov
fbld
xchg
lea
push
imul
xchg
push
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
adc
loopne
mov
jne
fwait
mov
mov
imul
popa
movsl
mov
push
enter
jg
loope
xchg
pop
nop
mov
xor
cltd
inc
xor
sbb
jo
pop
mov
pop
jp
mov
rcrl
loopne
xor
lret
stos
xor
adc
and
aam
jmp
and
jle
pushl
sbb
rclb
data16
cmp
and
clc
mov
or
aas
mov
pushf
adc
es
loopne
pop
sbb
dec
lahf
jno
jns
lea
divb
divb
in
xchg
ficoml
mov
push
pop
dec
jmp
mov
sbb
or
pushw
inc
adc
test
push
test
test
and
jae
inc
fistpll
imul
adc
dec
jl
or
insb
std
lret
ss
mov
mov
daa
fildll
pop
hlt
ja
cltd
xlat
iret
pop
in
movsb
adc
inc
idivb
out
cmc
xchg
stc
pop
add
add
xchg
mov
mov
xor
cmp
aam
adc
popa
adc
in
arpl
out
fists
mov
jbe
push
std
xor
inc
mov
jbe
jns
hlt
and
sub
in
pop
mov
shlb
xor
lcall
push
push
insb
outsl
mov
cmpsl
inc
lds
adc
insb
mov
jns
mov
das
push
pop
pop
inc
jb
cmp
cmp
test
jnp
xchg
popl
scas
mov
gs
faddl
stos
jmp
pop
mov
in
xor
iret
add
add
popf
xlat
rclb
out
stos
cmp
mov
mov
ljmp
jl
in
sbbb
rcll
and
mov
add
and
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
sub
or
or
cmpsl
addr16
jmp
sub
mov
mov
cmpsl
xor
xchg
repnz
call
das
dec
shlb
ret
jne
dec
sti
stos
outsb
lods
movsl
sbb
sub
test
sub
shll
mov
das
dec
call
mov
xchg
or
popa
mov
std
adc
add
sbb
insl
in
add
pop
cmp
sub
cli
sarb
ficoms
sti
subb
fs
xchg
add
les
aas
sub
push
dec
cli
adc
jae
sbb
jecxz
stos
xor
xchg
lret
ret
inc
sbb
clc
mov
arpl
pop
sarb
adc
enter
xchg
out
nop
in
or
mov
fcmovbe
xor
out
lcall
aaa
inc
jo
gs
mov
popa
clc
fmul
cli
xchg
or
iret
ds
lods
adc
and
inc
lock
cs
push
les
sbb
dec
xor
call
inc
pop
mov
mov
mov
mov
mov
pop
xchg
lock
ljmp
sub
in
rorl
and
sbb
mov
arpl
cmc
sub
aam
cmp
xchg
xchg
push
adc
add
and
sbb
add
int
aad
add
cs
sub
sub
mov
and
sbb
cmpsl
aad
cltd
jno
push
cmp
sbb
add
mov
dec
push
repz
scas
mov
loop
add
xchg
addl
sub
out
lcall
mov
lret
fs
les
inc
mov
cmc
test
aas
or
test
popa
add
aas
lods
xlat
fs
subb
je
lret
or
jnp,pt
jmp
add
sub
out
sbb
add
lret
rolb
lcall
out
xchg
lock
fistpll
xchg
cli
and
in
scas
mov
out
inc
or
mov
adc
mov
mov
mov
loopne
jne
adc
dec
dec
xchg
jp
das
mov
iret
xchg
mov
sub
lea
and
jp
ljmp
call
pop
mov
xchg
test
repnz
sub
jle
adc
cltd
xchg
icebp
push
leave
rolb
pop
shl
insl
loope
jae
ret
js
int
sbb
sbb
lock
mov
test
enter
in
jmp
lea
and
jb
mov
jae
adc
and
pop
mov
aaa
nop
out
clc
and
out
inc
xor
push
out
sub
xchg
in
jge
in
add
jnp
insl
fstpt
bound
dec
sub
pushf
adc
cmp
pusha
mov
scas
fstpl
scas
pop
cmpsl
andl
push
aas
lock
aaa
shrb
xchg
pop
mov
xchg
xchg
imul
sub
xor
xor
out
xor
pop
and
loop
jp
out
xchg
invd
push
jo
popa
clc
xchg
repnz
popa
bound
jno
add
psadbw
loop
jno
push
lret
cmpsb
mov
xor
in
out
add
std
sar
addb
mov
push
loop
jbe
fidivs
xchg
sub
pop
xor
inc
lea
aad
out
cmp
sbb
imul
sbb
dec
shrb
mov
xchg
jg
pop
fwait
xchg
addr16
sub
sub
sub
mov
pusha
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
orb
adc
pop
adc
adc
mov
call
pop
outsl
mov
xchg
and
ret
jns
leave
dec
test
adc
mov
shlb
out
inc
daa
loop
lahf
or
pop
aas
data16
inc
xchg
sbb
add
rorl
add
push
dec
stos
repnz
push
cltd
aas
pop
out
sahf
sub
xchg
inc
mov
mov
pop
mov
adc
addr16
shr
mov
sbb
in
adc
je
je
dec
jge
fstpl
pop
out
push
jle
fwait
adc
lock
cmpsb
dec
pushf
test
scas
ret
lock
fistpll
add
ja
dec
pop
movsl
adc
jo
jb
lcall
bound
iret
hlt
pop
or
sub
test
pop
testl
test
dec
test
ljmp
and
fstpt
out
and
push
xor
xor
mov
clc
stos
push
dec
and
mov
lcall
inc
cmp
add
in
pop
pop
into
movsb
or
fistpll
stos
mov
mov
movsb
in
mov
push
test
or
cmp
les
movsb
mov
or
xchg
nop
pop
subl
or
fildl
or
cmpsb
and
jecxz
xchg
outsb
mov
mov
mov
je
sbb
cwtl
je
das
aas
cmp
sbb
xor
mov
ret
imul
pop
pusha
fisubrs
push
out
xchg
mov
mov
dec
jns
jne
add
int3
jno
jmp
adc
fsin
jecxz
int3
orb
or
daa
add
in
fidivrl
ljmp
lret
mov
mov
jne
std
aam
test
cmp
aam
or
rol
loopne
jb
ficompl
repz
xchg
inc
sbb
mov
jge
int3
nop
mov
pop
stos
xor
icebp
push
sbb
sbbb
leave
sbb
sub
int
lock
dec
movsl
mov
jg
add
rclb
mov
enter
sbb
shrb
std
loopne
and
scas
dec
jp
call
imul
sub
jns
add
cmpsb
mov
out
pop
mov
imul
mov
pop
insl
or
xchg
and
adcb
push
jns
mov
andb
sub
dec
pop
mov
jbe
or
aas
clc
mov
imul
mov
xchg
arpl
mov
push
sub
sub
call
into
fisttps
cmp
xchg
mov
mov
into
add
push
mov
shll
add
inc
cmpsb
lcall
dec
sbb
xor
andl
adc
xor
mov
push
push
lods
mov
stc
cmpsb
inc
lds
push
and
dec
jecxz
inc
ficompl
jle
jl
insb
adc
mov
jae
pop
jle
jno
sbb
jmp
ret
adc
icebp
sahf
std
sub
pop
in
pushf
insl
xor
xor
cmc
or
add
pop
leave
and
fisttpll
hlt
iret
xor
jnp
pause
movsb
inc
sub
fdivs
add
sub
aaa
cs
dec
or
lcall
clc
jp
stos
icebp
loopne
sub
or
popa
sahf
mov
mov
jne
sbb
mov
fisubrs
xorl
mov
pop
aaa
dec
cltd
sti
and
pop
rep
int
push
xor
inc
rcrb
gs
sahf
mov
ljmp
dec
add
sbb
test
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
stos
and
mov
adc
movlps
nop
xor
add
xchg
xor
inc
ss
push
mov
std
push
loop
sbb
add
or
push
pop
aad
xchg
rcrl
adc
into
push
std
imul
data16
add
mov
and
mov
lock
mov
jmp
jno
ss
mov
cmp
jmp
push
pop
ss
pusha
cmp
pop
pop
mov
imul
adc
jl
scas
enter
sub
fcmove
jb
or
fidivs
test
lea
pop
pop
mov
push
ljmp
popa
scas
scas
xorl
mov
lods
mov
mov
mov
mov
cmp
lods
popa
mov
or
sahf
test
cmp
and
repz
or
gs
insb
fwait
push
sub
adc
aam
push
mov
aam
mov
pusha
inc
inc
cltd
pop
rcl
aam
int
rolb
push
mov
xchg
sub
push
icebp
dec
jne
jl
and
daa
incb
push
jae
push
es
xor
fcoms
fcmovnbe
mov
ficoms
imul
mov
mov
in
or
insb
jge
adc
pop
pop
mov
andl
adc
das
pop
xor
clc
popf
outsw
cmp
add
fmulp
sbb
xor
pcmpeqd
sub
jmp
std
jbe
lock
scas
jl
sbbl
gs
test
bnd
lret
sti
shrb
loopne
inc
pop
scas
inc
add
andb
cmp
bound
loope
bnd
scas
repnz
jne
push
repz
dec
xchg
lcall
adc
xor
mov
jo
das
mov
sahf
test
jns
cmp
repz
cld
out
jae
ret
jne
xor
out
cld
stos
mov
cmp
mov
jle
xchg
push
pop
imul
std
inc
mov
cmp
mov
out
adc
inc
sbb
lret
jbe
in
dec
scas
fsubrs
jmp
daa
inc
pop
pushf
jmp
mov
icebp
cmp
icebp
movsl
add
adc
dec
cld
push
sbb
enter
inc
loop
sbb
or
lret
pop
inc
jp
fwait
nop
fcoms
adc
adc
ret
push
loope
push
pop
pop
push
pop
insb
dec
sbb
push
int
lds
mov
lahf
mov
aaa
movsb
mov
mov
mov
iret
or
sahf
adc
aaa
jnp
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
mov
es
rcrb
imul
add
stos
in
fisubl
push
sti
dec
lret
and
je
cmp
pusha
test
test
jecxz
jl
nop
sub
mov
aad
sub
hlt
lret
mov
push
dec
or
into
loope
sub
cmpsl
std
jge
inc
gs
sahf
or
test
or
mov
fiadds
test
imulb
imul
lock
xor
loopne
pushf
stos
cmp
lods
int
fprem
hlt
test
movsb
sub
test
cmpsl
nop
pop
aaa
push
add
sarb
ja
push
dec
xor
cmpsb
jns
out
mov
das
pop
mov
pusha
test
xchg
xor
inc
mov
sub
rep
mov
dec
ffreep
int
push
mov
leave
mov
mov
bnd
lcall
cld
in
popa
dec
dec
movsb
cld
push
pop
bound
movsb
enter
mov
shlb
pop
inc
test
or
adc
cmp
xchg
frstor
jnp
ljmp
rclb
push
inc
cltd
xchg
mov
xchg
mov
add
jl
mov
mov
xchg
inc
lods
or
lea
lods
jne
popf
push
jae
cmpsl
or
lock
lods
jp
gs
adc
mov
jge
ret
sub
sbb
stos
xchg
jge
jg
pop
mov
addl
adc
xor
imul
mov
jle
mov
fnstcw
cmc
lret
lock
stos
dec
shrb
orb
inc
fsub
xchg
or
and
movsl
xchg
lahf
lret
pop
pushf
cmp
mov
shl
push
dec
dec
fcoms
mov
jne
mov
mov
jl
lahf
outsl
out
fisubrs
dec
push
fnstcw
inc
lcall
xchg
enter
xor
dec
push
test
push
and
cmovno
ret
mov
or
and
xchg
fimull
mov
adc
int3
inc
mov
mov
mov
fwait
lock
pop
or
sub
icebp
fsubrl
mov
mov
sub
out
test
xor
nop
clc
xor
mov
imulb
addb
mov
dec
stos
xor
jne
adc
mov
sub
popa
sub
and
mov
addr16
mov
and
pop
inc
cmpsb
dec
pusha
jne
lods
imul
testb
pop
inc
les
lret
mov
pop
jp
xchg
fstps
or
gs
xchg
and
jb
ja
sbb
test
repz
jno
cmp
cmp
mov
inc
pop
xor
adc
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
sarb
jge
adc
movlps
ljmp
jp
lcall
fcomip
jmp
jmp
mov
inc
imul
mov
inc
cmpsb
out
sti
mov
pop
scas
push
out
jg
fdivrp
fs
inc
aad
xchg
mov
shrb
lahf
imul
pop
test
add
insl
int
or
ljmp
inc
shl
dec
inc
xchg
pushf
js
repnz
jge
mov
test
outsb
ja
sub
adc
nop
and
inc
mov
pop
xor
pop
call
push
sbb
mov
inc
mov
testb
jg
fs
jge
cmp
mov
aaa
mov
scas
mov
jle
inc
popa
repnz
cmp
js
int3
sbb
int
lock
movsb
fistl
and
out
mov
sbb
test
jl
shrb
dec
scas
mov
cmp
push
mov
aad
dec
push
mov
mov
icebp
cmovns
shl
mov
stos
daa
sub
xor
pcmpgtd
fdivrl
insb
xchg
or
js
push
rol
js
push
mov
test
shrb
pusha
js
lcall
sbb
add
xchg
sar
out
mov
push
in
push
loop
pop
lock
sub
fists
sub
ret
inc
mov
jmp
dec
pusha
fs
es
adc
fs
pop
lds
roll
addr16
loope
xchg
push
xor
je
pop
inc
and
fstl
and
xor
repnz
push
repz
lds
outsb
sbb
mov
loopne
mov
xorb
sub
mov
cmp
jno
mov
mov
mov
jbe
mov
lock
cmp
movsb
icebp
lea
test
dec
movsb
or
mov
sarb
dec
rcl
iret
insb
mov
dec
fiaddl
jns
mov
mov
test
xor
mov
cmp
sub
add
push
scas
cmpsl
xchg
and
shrl
pop
jo
fs
jne
mov
rorb
nop
enter
cmp
mov
test
stos
adc
ret
push
enter
jns
sub
push
lods
xchg
pop
mov
cmc
xor
je
inc
xchg
das
xchg
xchg
into
cli
iret
mov
fimull
scas
lds
or
push
mov
jp
insl
filds
out
xchg
in
add
xor
push
push
pusha
rclb
dec
add
sbb
out
loope
ror
mov
movsb
movsb
lret
fldcw
add
ja
pusha
mov
fs
jae
sub
lods
jge
inc
mov
add
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
dec
fisttpll
pop
jae
adc
inc
push
call
pop
push
mov
subb
scas
addr16
iret
sti
lea
rcr
add
mov
aam
mov
fs
aaa
popf
cmp
lock
lahf
mov
sahf
cmp
mov
aas
push
cmp
jns
daa
pop
xor
jb
rolb
rorb
scas
xchg
nop
hlt
fs
xchg
jno
js
je
jp
imul
nop
mov
add
dec
fdivrs
ret
xor
not
pop
and
imul
push
leave
or
dec
jns
roll
jb
rcll
xor
add
loopne
jae
jb
cs
in
pusha
pusha
xchg
ds
int
popf
pop
out
pop
test
or
aas
mov
addb
xorl
cltd
cmp
xchg
mov
pop
and
mov
or
add
adc
outsl
sbb
rol
xor
mov
loopne
iret
rclb
jns
mov
adc
mov
sub
mov
ds
scas
int
push
add
roll
lcall
popa
lods
fimull
fwait
popf
ja
aad
or
mov
out
add
pop
mov
mov
test
adc
insb
clc
dec
add
js
movsb
into
xchg
dec
cltd
and
es
adc
iret
sub
lds
cmpsb
xchg
lret
pop
pop
inc
push
xchg
pop
movsb
pop
idivl
fndisi(8087
push
insl
push
not
stc
rol
fnsave
sbb
xor
mov
faddl
ret
js
popa
shl
xlat
xor
xor
and
xchg
gs
mov
int
std
push
mov
iret
jns
imul
lock
dec
addr16
loope
nop
rorb
sub
cmp
pop
aad
add
sub
jp
add
adc
mov
jmp
ja
clc
insb
fbstp
push
ja
ret
mov
stc
flds
pushf
and
in
insl
enter
arpl
mov
cltd
mov
out
sbb
mov
and
in
push
jmp
jmp
dec
xlat
add
in
sub
xor
inc
mov
pop
push
lods
mov
pop
into
sti
inc
adc
and
sbb
in
jb
inc
lds
mov
jge
sbb
fstp
adc
arpl
pop
clc
or
xor
sub
lds
cmp
sub
or
xchg
outsb
scas
je
repnz
movsl
mov
imul
jae
lret
xor
cmp
imul
xor
out
in
decb
jae
add
test
nop
push
lret
orb
or
out
and
cmc
sbb
cmp
mov
adc
lods
lcall
fstpl
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
fwait
dec
call
mov
push
lock
adc
loopne
loope
inc
ret
xchg
mov
dec
cld
jge
in
jae
cld
mov
sub
jmp
xor
incl
xor
dec
nop
add
xor
and
and
pop
imul
enter
jne
add
lods
aaa
shlb
mov
mov
add
jne
std
jmp
mov
in
cmc
jle
xchg
mov
data16
ret
and
cmp
jmp
cld
mov
cmp
andl
ss
and
das
sub
mov
ffreep
ret
test
mov
inc
xchg
out
push
les
inc
mov
cmpsl
insb
loopne
mov
enter
add
bswap
xchg
mov
xor
push
and
inc
addl
fnstenv
loope
adc
add
sub
push
mov
repnz
lea
cltd
push
jmp
jle
insb
xchg
fxch
xor
lock
sbb
cli
bound
lods
and
andl
insl
pop
sub
stos
or
cmpb
rclb
loopne
pop
iret
adc
insl
inc
sbb
insl
dec
pop
jmp
in
xchg
cld
pop
xor
rorb
push
dec
push
jae
mov
add
and
outsb
push
aam
dec
sbb
cmovp
dec
sub
int3
fldcw
mov
cmp
xchg
or
cltd
pop
pop
outsb
mov
mov
movsl
movsl
imul
enter
jns
lea
cmp
inc
xchg
pop
aam
add
pop
or
dec
inc
fidivl
dec
xor
lret
sarl
aam
inc
cli
inc
push
out
ss
xor
dec
cwtl
dec
test
jp
add
and
fwait
xorl
cltd
seto
ljmp
pop
pop
es
jge
dec
sub
pop
enter
sbb
xor
xchg
jge
iret
clc
mov
or
outsl
mov
in
push
les
jnp
repnz
mov
inc
inc
push
pop
adc
jno
add
loope
iret
std
mov
pushfw
mov
hlt
pusha
dec
fsubr
fiadds
ja
lods
jmp
aad
pop
outsb
stos
loopne
int3
mov
sub
inc
xchg
cwtl
mov
push
rcl
mov
lcall
xor
aam
push
push
push
adc
aam
push
data16
inc
popf
into
pop
addb
outsb
inc
sti
sub
xorl
lahf
dec
mov
sub
out
jb
sbb
pop
in
xlat
adcb
mov
jbe
cmp
roll
mov
int3
imul
movsb
xor
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
cmp
adc
or
test
mov
aaa
cmp
push
lea
jb
sub
xlat
repnz
ret
sar
hlt
aaa
shrb
in
dec
imul
mov
dec
scas
int
jge
jmp
cmc
mov
enter
sbb
stc
jno
pop
jb
fucomi
and
inc
mov
jmp
gs
mov
popf
ja
mov
insl
cli
mov
mov
pop
jg
sbb
xlat
and
leave
lods
xlat
sbb
adc
repz
aad
cwtl
mov
jne
and
popf
pop
push
mov
mov
pop
xor
dec
call
xor
pusha
outsl
pop
addr16
repz
nop
push
fildl
fwait
shl
sbb
mov
mov
push
adcl
inc
jg
popa
fnsave
bound
rolb
mov
shll
pop
aaa
out
jb
pop
fwait
jp
scas
adc
call
sub
adc
iret
icebp
sbb
shr
cmp
js
scas
test
inc
xor
mov
mov
sbb
or
leave
fdivl
push
addr16
pop
js
out
push
cmc
xchg
push
sub
mov
sbb
clc
sbb
mov
jp
cmp
xchg
pop
jmp
mov
aad
fwait
les
xchg
mov
push
aas
scas
mov
jl
fcmovnbe
mov
inc
fldcw
adc
mov
repz
xchg
pop
in
dec
jecxz
jnp
inc
ljmp
xchg
lahf
test
or
lods
adc
cmpb
cmp
mov
sahf
imul
inc
rolb
pop
xlat
and
rolb
push
inc
jl
ret
mov
insl
xor
mov
cmpsl
jecxz
imul
pop
jmp
xor
push
xchg
popf
ljmp
mov
int3
in
out
sarl
shlb
mov
jb
cmp
mov
and
and
lret
adc
loope
ljmp
push
roll
and
jmp
adc
sqrtps
push
mov
sbb
enter
bound
les
cmc
xor
mov
pop
cltd
xchg
test
sbb
pop
shl
mov
push
insl
nop
imul
xor
xor
jl
sub
dec
adc
pop
mov
in
fwait
orb
xor
dec
sbb
ret
pop
dec
ds
jg
int3
and
push
pop
pop
mov
lahf
or
fsubrp
push
call
sbb
inc
subb
hlt
sub
mov
insb
cmp
nop/reserved
cld
movsb
daa
cmp
mulb
loopne
push
les
xchg
in
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
inc
jne
ljmp
inc
xchg
mov
xchg
inc
leave
mov
je
addl
subl
lret
mov
iret
push
xor
mov
adc
cmc
sub
sub
cltd
loopne
push
outsb
xchg
int
adc
insl
pop
or
js
das
push
arpl
lods
mov
or
cmp
dec
xchg
sub
dec
pop
in
mov
out
xchg
incl
adc
fcmovu
sbb
jae
jecxz
mov
xchg
jns
pushf
data16
negb
test
imulb
data16
and
loop
mov
xchg
fbstp
add
mov
cmc
mov
push
dec
mov
subl
insb
push
xlat
sub
lret
xchg
mov
jle
mov
repz
dec
pop
std
pop
divl
pop
rcrl
jg
fucomp
pop
mov
outsl
xor
fnstcw
lcall
or
ret
and
pop
daa
push
adc
or
rorl
jno
mov
punpcklbw
mov
sarl
lret
insl
rcrb
test
popf
pop
arpl
cmp
pushl
insb
jl
icebp
and
movsb
dec
test
lret
or
push
mov
pop
les
cmp
cmp
or
add
xor
mov
dec
notb
in
sbb
icebp
cmp
or
pop
mov
lret
or
mov
add
add
sbb
stc
adc
mov
inc
mov
jbe
push
jl
cmp
inc
sti
xchg
leave
pop
xchg
sti
jl
push
cld
fldcw
sbb
push
fmull
insb
adc
fldl
jns
in
pop
sub
cmp
cmp
mov
adc
int
dec
mov
jge
dec
cmp
and
pop
pop
jo
mov
xchg
adc
cmp
addr16
xchg
sub
inc
sarb
lea
out
mov
or
cmp
ret
push
ret
jo
lret
lea
iret
cld
cs
push
mov
mov
xlat
movsb
data16
cmp
frstor
fidivrs
sub
sbb
adc
push
inc
mov
scas
mov
pop
popa
push
or
orb
mov
sbb
inc
loope
xchg
sbb
push
jo
fwait
pop
pop
cld
jg
cmp
mov
xchg
inc
mov
sub
hlt
je
shlb
lock
cmp
sbb
aaa
and
and
int
leave
outsl
and
loop
nop
xchg
sub
mov
sbb
je
sub
cmpsb
mov
loope
jg
and
cltd
mov
or
test
dec
in
cmp
inc
add
jae
sub
sbb
movsl
jnp
lret
daa
cmpsb
adc
jl
mov
cmp
out
hlt
xchg
mov
test
inc
mov
dec
jae
mov
inc
jae
mov
nop
mov
mov
in
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
push
pushl
jp
adc
loopne
test
iret
adc
cmpsb
std
fisubrs
lcall
cmp
mov
addr16
out
fsts
push
mov
push
das
jl
mov
dec
mov
cmp
inc
ret
inc
add
pop
mov
lahf
nop
cmp
leave
les
outsb
xor
sbb
in
std
and
mov
mov
pop
sarb
mov
sbbl
outsl
into
adc
inc
int
daa
sbb
stos
orb
mov
push
xchg
adc
in
sbb
mov
mov
dec
hlt
mov
test
shll
fnstenv
xchg
in
stos
das
sbb
mov
rcl
sarb
and
or
pop
mov
adc
inc
mov
int
push
or
pcmpeqb
and
jmp
aaa
jne
in
dec
mov
popa
std
movsl
cmpsb
lret
adc
popa
or
inc
sarl
push
js
lods
loope
mov
pop
mov
jecxz
dec
pop
xchg
scas
dec
pop
sub
ds
lods
je
les
mov
mov
pop
test
add
mov
pop
negb
jl
out
out
loopne
repnz
xor
cld
pop
sbb
inc
dec
and
ret
in
dec
mov
imul
arpl
mov
jno
dec
cmpsl
test
loop
mov
in
and
or
int3
in
cmp
sub
ds
mov
mov
sub
test
xchg
ss
getsec
mov
push
test
cmp
pop
xorl
outsl
jp
es
sub
add
add
in
jg
ss
js
fwait
mov
mov
lahf
gs
inc
jle
lret
arpl
ds
cmp
cmpsl
dec
cmp
hlt
mov
xchg
adc
shll
pop
push
gs
jp
shrd
movsb
clc
repnz
mov
mov
je
adc
push
adc
sti
hlt
enter
scas
sub
push
xchg
adc
test
aaa
sbb
mov
add
sub
dec
sub
pop
bound
dec
and
arpl
push
out
pop
sbb
mov
pop
icebp
inc
mov
out
add
mov
lods
inc
push
sbb
mov
xor
jp
push
fsubs
imul
test
cmpsb
sbb
adc
lea
jnp
add
adc
cmp
inc
inc
lods
mov
cmp
ja
inc
fs
mov
ja
out
add
inc
lret
outsb
mov
dec
out
push
pop
sbb
mov
jmp
pop
lods
int3
mov
dec
cs
xchg
mov
jbe
jo
jle
movsl
cltd
ss
mov
and
sahf
jne
cmpsb
xchg
pop
sub
add
xchg
repz
or
stos
lock
push
jge
cmp
enter
push
shrb
stos
or
lds
test
arpl
fistpl
xorb
add
or
mov
jo
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
cltd
cmpb
test
adc
adc
xchg
out
add
inc
xorb
add
cmp
pop
and
insb
fldcw
adc
or
movsl
mov
add
or
or
pop
jbe
xorl
fnstenv
ret
aaa
adc
fs
pop
rolb
fs
inc
dec
stc
sahf
idiv
jo
push
push
mov
adc
es
mov
cmp
mov
shlb
test
lret
sub
xor
add
std
loopne
xor
popl
shrl
or
jl
pop
shrb
les
jge
rol
bound
pop
popa
test
and
inc
cmpsl
sub
mov
stos
mov
sub
mov
sti
sahf
fs
ljmp
sub
stc
or
sbb
fisubrl
popa
dec
movsb
push
cli
pushf
fnsave
les
jmp
je
out
jb
pusha
dec
std
add
or
gs
mov
in
inc
xor
lcall
push
sarb
xchg
push
dec
mov
mov
mov
mov
mov
rorl
xchg
pop
jge
fistpll
inc
negl
dec
dec
inc
fmuls
mov
inc
dec
faddl
cmp
pop
nop
scas
xchg
add
gs
out
lcall
fstl
js
stc
inc
lcall
fsubrs
fs
jecxz
sti
xor
add
fidivs
sub
jmp
or
dec
lcall
xchg
lcall
fsubrp
and
shrb
incl
sub
add
shll
push
inc
jb
jmp
cmpsb
add
dec
cmp
xchg
testb
jmp
stos
or
fcoms
sbb
push
xchg
push
pop
mov
lret
sub
hlt
pop
adc
adc
in
scas
dec
aaa
cs
dec
das
pushf
or
and
out
pusha
sub
mov
pop
push
fwait
jbe
insl
data16
mov
xlat
repnz
paddsw
push
dec
sbb
ret
push
das
ret
cmpb
aas
popa
push
inc
pop
lock
loop,pn
pop
and
jg
mov
cltd
xchg
subl
inc
xor
and
push
fisubs
mov
cwtl
and
jo
in
fistl
lock
clc
pop
jecxz
fwait
divl
inc
and
push
movsb
adc
xor
push
xor
cli
std
ljmp
hlt
daa
or
cli
mov
or
cltd
out
fadds
inc
mov
lret
and
in
mov
pusha
pop
in
mov
fisttpl
jecxz
sub
mov
mov
jle
into
xor
in
adc
cmpsl
leave
jp
cmp
cmp
or
dec
inc
call
test
and
push
jl
sbb
inc
push
push
in
mov
sub
fnstsw
outsl
les
xor
mov
or
imul
push
add
mov
cmp
subb
mov
subb
xchg
mov
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
jmp
pop
push
adc
jp
adc
sub
xlat
test
imul
mov
adc
xor
lret
ss
lcall
mov
inc
add
mov
rol
pusha
aaa
aad
push
jg
lret
add
std
xchg
ss
das
mov
mov
insb
call
mov
clc
ret
in
lret
repz
repz
cmp
dec
pop
lcall
xorb
and
jnp
push
cld
push
out
rorb
adc
cli
push
ficoms
push
scas
in
pop
iret
hlt
xlat
mov
and
fistpll
sbb
sbb
pushf
mov
test
addb
sbb
jbe
add
test
imul
shll
inc
mov
add
mov
in
lret
fwait
pop
adc
push
js
mov
movsl
jo
mov
jnp
cltd
pop
lock
jae
push
add
or
sahf
xchg
xchg
lock
or
call
cmp
or
add
sbb
loop
sbb
xor
dec
sub
fiadds
daa
mov
cld
push
test
bound
nop
js
sahf
sbb
adc
bound
mov
stos
pxor
test
sbb
lock
xor
xchg
enter
ja
mov
cmp
push
and
adc
jno
jns
sbb
popf
nop
in
jl
adc
addr16
insl
dec
stos
dec
cld
push
ds
xor
or
sub
in
dec
cmp
outsb
stos
sub
lock
fldl
adc
cmp
push
mov
inc
sbb
mov
inc
mov
jecxz
div
lds
nop
or
out
push
cmp
cmp
rolb
divb
dec
pop
pop
mov
mov
jg
out
pop
xchg
mov
mov
das
pop
mov
aad
mov
mov
cwtl
adcb
cmp
jle
iret
daa
lahf
call
xor
pusha
lret
popf
pop
nop
clc
lea
sbb
jl
inc
adc
loop
push
test
lcall
inc
sub
push
imul
mov
add
jp
push
sub
ret
add
ficoml
sbb
push
jge
xchg
lods
pop
int
daa
andl
stos
fs
mov
dec
mov
mov
dec
stos
cmp
movsb
popa
fwait
scas
or
jno
dec
mov
aaa
sub
xor
inc
cmp
mov
in
repz
jle
dec
popf
imul
lret
in
ss
pop
movsb
and
sbb
cmpb
ret
mov
xchg
mov
pop
sbbb
lds
aam
lods
std
out
pop
lret
or
loopne
push
fisttpll
cwtl
sbb
xchg
pop
or
xchg
or
mov
sbb
mov
sub
inc
movsb
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
jmp
adc
lea
adc
rorb
movsb
inc
mull
pop
cld
outsb
repnz
bnd
xchg
bound
cmpsl
xchg
in
pop
add
test
sbb
and
sub
cmp
lcall
pop
shrl
iret
xor
cmp
push
mov
jl
cmp
xor
test
push
in
sti
jb
or
inc
sub
jecxz
lret
cld
xchg
jne
and
or
jae
sbb
mov
aaa
in
dec
insb
adc
pusha
test
cmp
jne
mov
daa
nop
xlat
sbb
cmpb
lret
pop
cmp
and
lcall
lret
arpl
dec
mov
xchg
push
jecxz,pn
jne
scas
jns
je
fdivl
jg
cmp
pop
push
in
inc
mov
mov
jb
rorb
outsb
mov
pop
in
inc
jne
mov
pop
or
mov
mov
sbb
sti
xchg
sub
sbb
shll
call
in
into
sub
in
cld
mov
cmp
lock
lds
mov
ret
sub
push
and
ss
inc
and
insb
scas
sti
xor
sti
xchg
repz
or
mov
sub
pop
xlat
push
stos
push
sub
or
lret
mov
pop
mov
pushf
sahf
mov
iret
inc
es
xrelease
adc
cmpsb
pushf
scas
sbb
mov
cmp
xchg
movsl
push
test
adc
std
adc
sub
hlt
pandn
icebp
cmp
or
mov
loopne
xchg
ds
adc
outsb
pop
cmc
fildll
fwait
std
aaa
das
ror
adc
jbe
out
push
inc
xchg
sbb
inc
stos
mov
xchg
aas
cltd
sbb
cmpb
lahf
push
cwtl
cmpsl
stos
sub
push
lret
lds
cmp
mov
outsl
mov
jb
pop
or
movsb
jecxz
ficoms
xor
jp
jb
mov
mov
sub
push
das
xor
adc
adc
cmp
and
out
add
es
or
mov
mov
xchg
xchg
daa
cmp
push
test
popa
xchg
adc
inc
mov
out
or
sub
pop
lods
ljmp
mov
popf
push
mov
or
addr16
inc
test
pop
mov
pop
dec
out
into
out
aad
cmpl
in
in
scas
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
mov
cltd
sbb
mov
ljmp
sbb
push
jg
adcl
push
sbb
aad
xchg
cltd
mov
popa
fcmovnu
xchg
fxch
push
mov
push
fldcw
loop
cwtl
jge
xor
dec
in
mov
stos
stos
divl
jmp
clc
les
mov
or
inc
stc
in
scas
subl
fidivrl
test
jns
mov
sub
add
xor
bound
mov
mov
in
xchg
inc
add
nop
push
out
cmp
bound
cld
mov
and
xor
xchg
lea
movsb
add
and
mov
ss
fcompl
cmp
cmp
es
xchg
cmp
loope
xchg
imul
hlt
sbbb
dec
inc
sbb
ficoml
sub
outsb
fmul
out
push
pop
aas
and
pop
nop
inc
mov
insb
adc
scas
push
popl
movsl
fildl
or
xchg
adc
cmp
ret
push
inc
inc
and
movsb
cmp
aam
lock
out
xchg
xor
loope
pop
push
mov
mov
subl
add
fs
mov
rcrb
loope
lret
arpl
cli
push
mov
cmpsl
or
push
out
icebp
orl
or
mov
mov
nop
outsl
dec
push
add
cmp
rclb
cli
inc
pop
das
or
add
mov
dec
push
in
adc
sbb
sar
loopne
jecxz
pop
icebp
in
int3
call
cltd
int3
or
mulb
in
cltd
inc
push
jno
in
jne
aaa
dec
lcall
mov
ljmp
adc
mov
mov
js
movsb
je
mov
xor
sahf
mov
mov
mov
mov
mov
adc
sub
jl
jno
dec
sub
pop
mov
add
add
pusha
rcrl
mov
cmp
mov
xor
movl
daa
data16
data16
pop
xchg
mov
inc
outsb
rcrl
inc
add
in
mov
stos
mov
and
cmpsl
xchg
dec
inc
stos
mov
jno
sbb
dec
rorb
shll
scas
or
jno
xchg
sub
lods
mov
xchg
jmp
jecxz
roll
test
push
cmp
aas
rcll
adc
jmp
push
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
ret
sbb
mov
loop
ss
sbb
in
jb
test
and
adc
xchg
xchg
or
out
js
pop
inc
jno
jl
cltd
xchg
xchg
in
sub
arpl
cmp
dec
jb
scas
test
push
ficomps
xchg
fdivl
sbb
loope
push
xchg
push
mov
fmull
stos
movsl
cmp
xchg
test
push
pop
mov
xchg
cwtl
imul
xlat
loopne
adc
rorl
test
fdivr
in
sbb
repnz
push
movsbl
cmpsl
movsl
test
cmp
or
pop
xchg
not
mov
or
cmp
cmp
push
mov
jmp
lret
adc
jbe
adc
sub
int
pop
and
or
aad
notl
lret
add
insl
decl
pop
dec
pop
sbb
xchg
dec
mov
imul
mov
jo
mov
mov
pop
test
lods
jg
sbb
inc
jo
pop
addr16
stos
jno
pop
fiaddl
out
mov
test
adc
sahf
insl
out
lahf
loope
push
push
pop
movsl
sahf
movsl
inc
fnstenv
xor
xchg
rorb
mov
push
push
pop
mov
dec
and
pop
jns
insl
xor
cmpb
popf
and
push
pop
jecxz
pusha
mov
negb
cli
cmp
dec
int3
lret
pushfw
subl
cmp
pop
mov
or
test
aam
daa
inc
call
int3
negb
push
lahf
addb
dec
ljmp
fiaddl
or
lea
in
ljmp
jb
jge
add
fs
lret
pop
dec
mov
push
push
push
cld
mov
sbb
add
int3
js
movsl
stos
dec
jl
pop
gs
sub
into
enter
push
je
fs
xor
jl
sahf
negb
mov
mov
fbstp
mov
jmp
out
lahf
adc
fwait
enter
mov
adc
fwait
xor
xorl
sbb
subb
add
test
repnz
movsb
fisubs
jae
sub
mov
add
clc
icebp
aad
push
iret
cs
and
gs
xor
pop
icebp
fcompl
aad
imul
jo,pt
testb
cmp
mov
cmp
nopl
inc
push
arpl
mov
into
inc
lret
and
xor
test
and
push
sbb
pusha
les
and
xor
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
mov
fdivrs
lea
adc
pusha
lret
cli
ljmp
sbb
sbb
or
movsb
push
dec
push
imul
stos
cmc
mul
mov
clc
push
into
out
movb
jmp
pop
mov
cmp
ja
pop
lock
pop
bsf
enter
sbb
cmpsl
jg
xchg
jmp
das
leave
mov
scas
jnp
inc
mov
mov
daa
jle
and
leave
pop
arpl
adc
or
push
pop
pcmpeqb
prefetch
or
adc
mov
aam
and
gs
mov
pop
adc
mov
cmp
inc
or
jns
xor
dec
test
jo
test
push
notb
in
fcoms
dec
mov
subl
and
leave
orb
adc
mov
pushf
add
in
mov
dec
mov
test
pop
cli
jb
inc
sarl
std
dec
cmp
ja
test
xor
push
xchg
fsts
aam
test
lea
jo
subb
insb
testl
test
les
aaa
clc
hlt
inc
ss
mov
mov
dec
ror
xor
cli
dec
fdivl
pop
lock
dec
sbb
repz
inc
push
inc
xor
and
xchg
ss
aas
pop
inc
stos
popl
in
pop
push
imul
daa
cmpsb
cmp
sub
es
test
les
pop
leave
xor
negl
lret
call
inc
jmp
in
outsl
dec
xor
mov
daa
sbb
jbe,pn
lds
gs
mov
clc
pop
scas
jmp
shll
pop
or
js
andb
and
outsb
mov
mov
dec
sbb
insl
stos
adc
xor
and
jge
data16
jb
push
mov
sbb
xor
ds
sbb
lock
inc
push
pop
fistpl
add
cmp
cmp
and
enter
ja
ret
jns
inc
xlat
mov
pop
sub
hlt
sbb
or
dec
sub
inc
cltd
pop
hlt
jae
jne
stc
fcom
cltd
in
and
and
aam
adc
adc
lret
cmp
mov
sbb
subb
xor
mov
arpl
popa
add
jmp
cli
dec
fs
push
ds
pop
sub
inc
mov
pop
stos
mov
adc
std
aas
add
xchg
mov
std
mov
ja
xlat
or
adc
inc
cld
jecxz
cmp
or
dec
pop
loop
mov
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
insb
insb
inc
xor
adc
or
lret
das
js
scas
or
xor
xor
imul
push
xchg
add
mov
xchg
jae
fs
dec
push
mov
sub
sub
cs
int
and
xor
xchg
es
insb
inc
xlat
test
insw
dec
imul
mov
lret
sahf
fdivs
loopne
xor
rep
sbb
rcrl
cld
xor
fiaddl
test
iret
xchg
movsb
in
sub
in
sub
dec
pop
std
adc
jno
in
adc
ja
push
scas
mov
fistpl
hlt
jb
in
fstps
fstpl
add
data16
mov
xchg
inc
mov
jl
jle
das
cs
inc
jmp
jne
test
fadd
pop
pop
in
jnp
mov
or
push
pop
adc
xchg
lods
into
int
ret
fwait
outsl
mov
stc
sub
push
inc
pop
pop
inc
xchg
scas
std
sub
test
mov
push
adc
in
fadds
adc
stos
js
mov
push
lea
icebp
inc
jecxz
and
xor
into
cmpsl
das
stc
mov
cmp
push
inc
push
pop
xchg
inc
mov
fs
cwtl
cli
jns
nop
lret
jnp
xor
push
sbb
test
adc
in
mov
adc
mov
inc
stos
stos
jo
adcl
sub
lret
mov
outsl
sub
cmpsl
inc
imul
mov
mov
inc
js
je
push
insb
push
xlat
aad
adc
sub
bound
or
inc
mov
sti
scas
lea
and
mov
and
cli
cmp
mov
mov
scas
repz
jbe
jp
cmpsb
xchg
jb
cmpl
ficomps
xchg
in
mov
into
imul
scas
xor
addr16
mov
loop
mov
add
pop
ja
and
call
push
sbb
add
push
or
and
mov
inc
push
and
mov
dec
addr16
pop
sbb
mov
test
lods
dec
pop
packssdw
lahf
stc
insb
adc
aaa
lods
push
cltd
mov
sub
test
fnstcw
or
mov
cmpb
mov
pop
pminsw
into
cmp
mov
enter
mov
sarl
xchg
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
lods
fdivrs
lea
adc
mov
dec
lret
add
int3
sub
adc
pop
jno
stos
adc
sti
mov
push
lcall
sbb
push
popl
push
xor
invd
pop
dec
and
sbb
insl
dec
hlt
dec
inc
sbb
adc
and
xor
stc
mov
ljmp
lret
mov
dec
cld
or
out
or
jnp
daa
cmp
loopne
shrl
or
insl
mov
scas
iret
imul
adc
pop
pop
pop
testl
loope
ja
inc
or
aam
pop
cs
sti
lods
bound
mov
mov
jge
sar
fs
or
or
fistl
inc
cmpl
std
push
mov
icebp
lret
pop
mov
repz
and
cmpsb
std
mov
je
std
jae
xor
pop
cmc
sbb
jo
arpl
or
aaa
cmp
pop
sub
and
mov
jg
adc
subb
fidivl
pop
cwtl
es
pop
addr16
outsl
push
add
jmp
jle
in
xchg
into
aad
sti
sub
mov
ret
sub
push
dec
mov
cmp
and
mov
push
push
inc
enter
pop
mov
push
inc
or
fisubrs
into
or
out
xor
hlt
jg
xchg
add
std
lock
repnz
cmp
inc
jbe
sbb
jmp
cmpsb
std
jo
aas
pop
inc
aad
xor
sbb
lock
popa
dec
enter
jns
cmpb
mov
sub
mov
sbb
xchg
stos
lds
and
adc
adcl
xchg
sbb
stos
scas
lods
aas
mov
fistl
out
testb
in
and
or
pop
js
testb
pop
push
outsl
repz
popa
pushf
push
push
push
mov
scas
jp
jo
dec
sub
out
push
stos
fs
es
pop
dec
sbbl
xor
data16
mov
sbb
scas
js
jo
lret
mov
inc
adc
add
push
jl
das
pop
test
mov
gs
daa
pop
outsb
pushf
stos
mov
mov
out
ds
cmp
hlt
out
imul
ret
nop
adc
mov
lods
mov
int3
imul
xchg
into
fdiv
mov
lock
stos
lret
movsl
and
aas
loope
mull
add
repz
loope
add
in
bound
dec
or
xor
or
push
add
jmp
and
lods
and
js
sbb
adc
lea
adc
xchg
inc
dec
xor
jne
and
jmp
in
push
addl
adc
jp
adc
jmp
lock
or
clc
lcall
in
push
rolb
mov
enter
jno
jge
inc
mov
jne
in
sub
add
icebp
sbb
pop
test
mov
fidivrs
mov
fdivl
mov
out
and
dec
push
cmp
lea
fcmovb
dec
sub
sbbb
lret
test
inc
pop
aaa
fwait
jle
add
push
mov
jnp
xchg
jno
pop
xchg
xor
mov
jb
lahf
insb
dec
mov
hlt
pop
jb
cmp
xchg
jp
sbb
pop
mov
scas
mov
repz
mov
adc
xchg
mov
fisubs
sub
adcb
adc
xsha1
cmpsb
mov
lahf
fwait
sub
divl
mov
in
ljmp
leave
test
pop
add
pusha
inc
mov
ljmp
push
sub
cld
sub
jmp
pop
and
movsl
dec
in
scas
daa
and
stc
stos
lods
cs
or
mov
cmp
inc
packuswb
sub
jnp
pop
insb
and
fnstcw
das
jbe
call
push
inc
ret
fcmovbe
mov
popa
push
sbb
cs
fwait
test
insl
daa
fldl
push
out
adc
out
push
pop
test
in
fisttpll
test
insl
orb
cmp
out
adc
out
cmc
enter
xchg
in
int
push
mov
pop
xchg
aaa
xlat
xor
or
rclb
cltd
rolb
repz
cmp
or
jae
fbld
add
or
lods
mov
jne
fmuls
repnz
pop
mov
movsb
dec
shl
ds
ds
sbb
fstpl
lret
jae
jle
movsl
scas
dec
cmc
fiadds
frstor
cmpb
xchg
dec
mov
jmp
jg
xlat
ret
aad
mov
and
jge
xchg
dec
int
out
cld
pop
into
mov
insl
jecxz
mov
mov
add
or
repnz
mov
xor
scas
icebp
xor
cmpsb
rolb
test
cltd
adc
sub
sub
out
mov
cli
mov
add
shrl
aas
div
test
stc
pushf
nop
cltd
jl
gs
test
add
xor
xchg
sub
mov
sbb
mov
cmp
cmp
outsl
dec
imul
stc
inc
add
or
in
xchg
loope
dec
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
push
sbb
scas
imul
das
std
dec
xchg
sbb
notl
in
xchg
jg
mov
push
or
xor
sti
mov
dec
nop
insl
test
xchg
mov
aas
popf
mov
test
push
lds
aas
add
push
int3
sbb
iret
fists
hlt
test
sbb
sbb
xlat
jecxz
rcrl
dec
xor
sub
fisubrl
push
fisubrs
xchg
or
test
push
in
jl
jge
movsl
cmovnp
frstor
or
cld
or
fldt
ret
jmp
sahf
popf
mov
xor
mov
xor
fwait
jecxz
ljmp
and
aaa
out
mov
movsb
sbb
loopne
aas
test
inc
or
pop
push
test
xchg
and
cmp
ja
dec
scas
sti
test
inc
sub
mov
sbb
push
insl
add
lods
or
sti
andb
mulb
pop
sub
ret
inc
mov
pop
xor
mov
mov
cwtl
ja
inc
add
push
xor
xor
imul
std
mov
push
rsqrtps
or
sub
dec
das
lods
or
sbb
jl
xchg
ja
stos
dec
or
ss
push
test
jae
sub
mov
pop
jle
sub
mov
inc
sahf
outsb
cmpl
cmpsl
enter
idiv
imul
insl
jmp
insb
mov
add
sahf
sahf
mov
xorb
mov
xchg
mov
and
notl
xor
lcall
dec
mov
jl
fwait
hlt
out
outsl
shll
movsl
inc
mov
jns
adc
in
int3
insl
mov
or
bnd
inc
ret
sub
jno
ljmp
pop
mov
lods
aad
sub
icebp
idiv
mov
sub
jo
ljmp
jno
lock
cmp
xchg
iret
sub
lock
ficomps
mov
xchg
fimuls
lret
mov
pop
push
mov
mov
sti
popa
icebp
cmp
iret
or
ss
push
iret
cmovae
ljmp
sarl
pop
ja
pop
push
sbb
fwait
or
in
mov
dec
add
mov
and
inc
int3
fists
jmp
push
hlt
movsl
int
add
popf
sbb
cmp
mov
pop
push
mov
mov
loop
rcr
jl
dec
call
pushf
or
inc
adc
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
pop
lods
push
sbb
adc
repnz
push
inc
xor
mov
test
daa
rcrb
nop
test
xor
fsubrp
push
lret
lods
daa
js
cmp
mov
and
hlt
rorl
push
mov
outsb
mov
das
cmp
sub
inc
push
pop
mov
pop
jbe
bound
cmp
mov
push
test
aad
rolb
lods
lock
adcl
push
je
add
mov
stc
mov
mov
and
in
mov
push
and
pusha
leave
pop
sahf
adc
push
test
cmpsl
clc
cltd
flds
negb
mov
cmc
mov
pop
mov
sbb
into
push
ret
call
cmp
das
mov
arpl
sub
leave
cwtl
ljmp
aam
add
dec
push
stc
pusha
dec
cmc
ljmp
push
mov
inc
cmp
inc
stos
stc
pop
test
rorl
sahf
cmp
and
jp,pn
cmp
nop
loop
std
imul
and
sti
push
xor
xchg
loope
push
add
dec
xor
in
or
lahf
cmpsl
mov
adc
pop
mov
imul
or
fldt
mov
mov
cmp
pop
mov
pop
aad
inc
int
test
inc
dec
pushf
outsb
add
loopne
std
out
mov
aad
fcmovbe
je
iret
cltd
outsb
dec
rcrl
aaa
add
pop
push
fsub
cmp
adc
push
push
aaa
inc
add
inc
outsb
jbe
dec
cs
stos
or
push
ffreep
and
inc
out
push
jbe
cmp
mov
int3
mov
mov
adc
test
hlt
sub
inc
adc
mov
in
jno
xor
sbb
inc
inc
sti
icebp
outsb
mov
mov
lret
cmp
inc
push
popf
popf
sbb
pusha
dec
mov
ret
ljmp
cmp
cmp
loopne
addr16
jle
sub
and
int
ljmp
and
hlt
pop
les
jbe
sbb
adc
imul
and
fisubrl
push
lahf
mov
je
inc
in
and
aam
jo
mov
loopne
shlb
xor
int3
rorb
fcoms
jecxz
dec
pop
dec
movsb
mov
mov
out
cli
pop
jmp
and
fs
and
orl
jp
popf
add
sbb
ljmp
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
mov
sbb
adc
enter
adc
in
xchg
push
xchg
sbb
xchg
sbbl
loopne
pop
fs
loopne
cmp
sub
sbb
adc
mov
rorl
push
dec
into
out
aaa
dec
out
and
push
or
jg
mov
shrb
fsub
bound
push
shlb
in
cmp
xor
xchg
mov
push
mov
push
addr16
inc
jg
push
test
ret
inc
or
aad
popa
sbb
sub
arpl
push
jl
stc
mov
xor
stc
pop
mov
loope
add
add
cmpl
insl
cld
cmp
dec
in
or
adc
pop
jmp
fsubr
mov
push
add
lret
les
cmp
arpl
sub
stos
push
mov
cli
jns
push
jne
jp
addr16
mov
aad
fsubs
push
mov
and
sbb
push
pop
mov
iret
lcall
mov
pop
sbbl
std
js
mov
fdiv
adc
ljmp
sub
pop
sahf
imul
out
movsb
push
cmp
jnp
in
das
mov
int3
inc
movl
mov
xor
mov
into
mov
nop
ss
jbe
sarb
call
ficoml
aaa
push
stos
push
inc
das
out
add
in
mov
sar
aad
icebp
sub
fistpll
stos
xlat
sbb
lds
xchg
mov
add
jle
cltd
sbb
les
int
adc
iret
rcr
in
jmp
xlat
mov
push
jb
sub
sti
sbb
aad
mov
or
xchg
xor
clc
lock
push
mov
aaa
test
imul
inc
sbb
push
mov
sub
enter
sbb
inc
ljmp
xchg
pop
out
aaa
mov
aam
loop
xlat
cltd
jbe
insl
xchg
fidivrs
dec
and
repz
jmp
addr16
push
andl
mov
pushf
insb
inc
ss
int3
sbb
mov
fdivrl
xchg
lods
movsb
es
cmc
or
gs
insl
push
lock
fs
dec
insb
test
cmp
pop
mov
pop
or
push
jg
add
cmpsl
int3
loope
jae
inc
repnz
adc
scas
fidivrs
mov
sbb
divb
adc
sub
out
push
jmp
adc
pop
pop
fsubrp
sbb
mov
lock
outsb
add
pusha
sub
dec
push
data16
sbb
les
or
cli
mov
out
or
cmp
sysenter
inc
into
cvtps2pd
pop
jae
adcl
sub
dec
jb
shrl
add
vpcmpgtw
sbb
mov
inc
pop
mov
das
insl
push
jb
in
inc
popa
xchg
mulb
les
pop
pop
in
repnz
jge
xchg
pop
in
roll
out
adc
into
add
out
repz
mull
xchg
sbb
stos
jno
addr16
cli
out
loopne
loop
fcom
adc
test
xchg
out
pop
jns
and
in
testb
inc
jb
pop
loopne
hlt
cld
xor
inc
stos
subl
and
outsl
movsl
jbe
arpl
orps
fs
inc
fildl
addr16
rorb
cmp
dec
lret
mov
cmc
imul
scas
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
lret
jbe
aaa
unpckhps
mov
sti
mov
insb
daa
add
es
cmpsb
adc
sti
flds
das
mov
repnz
mov
jle
les
insl
in
fldt
daa
mov
add
shll
fwait
inc
lods
sub
movsb
push
clc
mov
inc
and
mov
xor
push
cli
sbb
mov
das
inc
push
test
add
arpl
into
mov
pushf
push
lock
sbb
pop
jnp
bnd
imul
inc
ret
xchg
les
lea
pop
dec
jl
in
push
pop
xchg
push
test
jbe
sbb
repnz
jnp
sarl
pop
mov
insb
bound
xchg
mov
sub
inc
movsb
mov
cmpsb
jecxz
adc
push
outsl
nop
jge
lret
aam
pmulhw
adc
add
ja
cmp
add
push
sub
or
xor
in
dec
pop
pop
and
push
testb
loope
divl
pushf
mov
or
pop
or
cmc
xchg
out
cwtl
nop
aaa
push
call
pop
add
lea
stos
pxor
fs
or
mov
imul
imulb
icebp
jno
cmp
negl
adc
sub
hlt
mov
popf
push
lret
sub
es
adc
inc
mov
in
lcall
adc
lock
mov
jecxz
repnz
sub
mov
sub
loop
mov
cltd
in
lea
enter
xchg
or
pusha
mov
clc
mov
js
aad
int
mov
movsl
lret
xlat
stos
push
xchg
movsl
adc
loope
lret
jmp
adc
and
mov
ja
cmp
aas
fadds
fldl
pushf
sbb
sahf
mov
fcmovnbe
cmp
not
sub
mov
dec
cltd
shrb
bound
ja
imul
ljmp
cs
lods
sub
mov
sar
dec
cmp
outsb
jns,pn
les
sbb
in
scas
lahf
fimuls
xor
push
add
xchg
lds
test
adc
xor
mov
xor
mov
inc
mov
fdivrs
adc
mov
movsb
mov
dec
push
lock
rorb
pop
fwait
scas
sub
dec
inc
mov
cmp
imul
pop
fwait
insb
mov
out
jp
sbb
sti
shlb
nop
lcall
in
xchg
add
shll
cmpsl
sbb
xchg
ja
orl
scas
pusha
pop
sbb
into
pop
jae
fs
orb
xor
aas
add
xchg
dec
call
jne
push
pop
mov
push
push
aam
jmp
xchg
arpl
sbb
in
pop
or
mov
sub
pop
lods
sub
lea
mov
gs
ljmp
stos
push
lock
daa
adc
mov
pop
or
xchg
test
rol
mov
xchg
aad
and
xchg
push
mov
mulb
adc
sbb
mov
pushf
jle
faddl
repnz
add
sbb
add
sub
add
or
js
int
test
sbb
pop
jge
cwtl
clc
xchg
and
pop
push
lea
add
out
mov
sbbl
mov
or
jo
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
insb
filds
adc
adc
mov
jecxz
aas
and
and
cltd
outsb
int3
hlt
sub
das
mov
adc
xchg
repnz
lahf
pushf
insl
stos
sbb
cmpsb
lret
std
push
xlat
loop
sub
xor
aam
mov
cmp
jns
in
out
inc
xor
cmp
out
ja
sub
sbb
adc
popf
cmp
jno
out
cmp
sbb
cmpsb
hlt
push
add
roll
addr16
rorl
add
push
sbbl
pop
sub
pop
test
mov
call
pop
ds
mov
loop
mov
mov
xchg
negl
loope
dec
ss
jg
in
xor
inc
jbe
andb
mov
xor
cmpsl
adc
leave
or
cmp
inc
mov
jns
xor
adc
cmpsl
adc
das
mov
and
inc
imul
mov
adc
arpl
psubd
fbstp
mov
xchg
aam
stos
add
pop
push
popl
push
loopne
jnp
test
mov
fnstcw
ds
jge
xchg
arpl
mov
or
popf
xor
jbe
aas
push
lret
aas
mov
sbb
jno
filds
daa
push
sarb
push
popf
pop
fsubs
shll
lock
call
inc
int
repnz
enter
inc
pop
lret
push
xor
mov
les
nop
mov
xor
mov
in
push
icebp
and
out
enter
imul
sub
dec
push
mov
dec
mov
mov
adc
adc
mov
add
push
xor
fadd
mov
fsub
cmp
mov
mov
add
mov
inc
fcomip
imul
incb
mov
and
aad
and
adc
ds
insl
push
xchg
leave
inc
leave
lea
lahf
icebp
xchg
pop
mov
sti
sub
cmp
mov
or
sbb
andb
lret
lock
mov
xchg
in
clc
nop
arpl
xor
push
xor
jae
fwait
loop
mov
push
popa
ss
aam
fsubrl
daa
sbb
lea
push
pop
push
or
pop
mul
in
jno
adc
cld
and
in
push
repnz
es
aaa
push
mov
inc
jb,pn
insl
inc
jae
sub
mov
sbb
movsl
gs
ror
insb
push
in
nop
mov
push
hlt
aad
jge
jno
add
and
push
pop
or
fiaddl
mov
int3
sbb
mov
mov
subl
xor
loop
fstps
bound
xor
mov
cmpsb
aas
sbb
sbbl
xchg
xchg
mov
jns
xchg
mov
arpl
and
cmp
movsl
sub
jg
mov
fwait
push
adc
stos
icebp
jl
xchg
outsb
inc
or
add
call
lock
leave
test
cwtl
and
pop
sub
stos
jp
shlb
out
xlat
inc
fldl
pop
jl
jb
fs
and
sub
fidivl
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
cwtl
push
push
call
adc
and
ja
and
popa
push
icebp
xchg
dec
xor
mov
repz
dec
sub
arpl
dec
sarl
mov
addl
imul
xor
adc
mov
pop
xor
adc
sub
mov
and
std
pop
call
sbb
loopne
pop
jge
mov
test
push
lahf
hlt
xchg
in
in
xchg
test
jg
xor
gs
cmc
mov
mov
vdivps
push
ja
arpl
cltd
test
dec
xchg
pop
adc
and
iret
call
nop
test
jecxz
adc
jne
jmp
lcall
insl
inc
notl
inc
ljmp
jle
mov
lret
fiadds
xor
fdivrs
bnd
xchg
testb
cmc
je
push
repnz
call
insl
mov
jle
arpl
cmpsl
jge
pop
pusha
dec
adc
std
xor
jbe
mov
fwait
pop
mov
xlat
and
or
push
xchg
hlt
pop
xchg
xor
or
xchg
clc
push
pusha
lea
cmp
sahf
fwait
iret
gs
pop
mov
adcl
insl
stos
arpl
pop
or
cmp
test
inc
inc
dec
test
loopne
xchg
fstpt
mov
pop
add
cld
pop
dec
adc
inc
popf
insl
nop
xchg
jb
mov
out
xchg
stos
leave
stos
out
lods
aaa
test
mov
mov
xlat
leave
insl
mov
jmp
push
andl
mov
mov
mov
inc
jae
xor
jnp
cmp
jae
sti
push
shl
cwtl
in
shll
xchg
js
push
dec
data16
adc
andb
movsb
sub
mov
cs
addr16
jp
call
xchg
into
mov
mov
test
pop
mov
arpl
mov
and
mov
dec
jo
fnstsw
xor
jo
js
into
int3
outsb
mov
xor
fmull
stos
mov
xchg
enter
insb
jns
dec
jl
push
fs
adc
and
pop
jecxz
outsl
xor
into
push
jns
push
sbb
nop
loopne
sahf
or
lcall
push
mov
jl
and
roll
xchg
inc
add
popa
mov
dec
int
out
cmp
inc
add
pop
data16
jmp
mov
dec
ret
cs
or
mov
std
xchg
inc
push
ds
xor
jno
out
fbld
sbbl
jle
stos
das
xor
ds
dec
dec
movsb
shl
inc
lods
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
dec
or
adc
std
push
ljmp
inc
ds
pop
mov
or
in
inc
fcoms
pop
inc
mov
fisubrl
out
rcrb
mov
es
in
leave
sti
add
inc
imul
mov
repz
jmp
hlt
mov
mov
sub
enter
mov
mov
mov
hlt
daa
pop
lahf
or
jp
sbb
cmp
jnp
in
ret
dec
orb
adc
inc
cwtl
aas
cmpsl
in
mov
pop
cmp
pop
enter
adc
lods
lret
push
mov
jmp
add
adc
mov
add
push
aad
fs
imull
cltd
ss
sarb
clc
mov
jl
dec
jo
movsl
into
dec
pop
mov
jbe
sub
jg
pop
and
mov
cltd
sub
jl
xor
in
iret
push
stos
sbb
dec
jge
int
repz
int
cli
mov
jge
xor
call
in
xor
rolb
sti
mov
or
lods
aam
xor
jae
or
sbb
jp
and
dec
out
into
adc
movsl
pop
mov
les
xchg
add
shr
xor
rolb
loop
mov
mov
and
icebp
addr16
sbb
and
and
pop
pop
shlb
stos
shrb
lods
and
sub
call
rolb
lcall
outsl
jnp
sbb
sar
cmp
lret
push
les
ret
mov
jge,pt
cmpsl
or
adc
shlb
pop
test
jmp
xchg
fldt
mov
gs
fisubrs
jecxz
and
xor
movsb
outsl
mov
lahf
mov
leave
std
xchg
adc
sub
ret
in
stos
xlat
xor
test
clc
xchg
adc
jno
and
mov
pop
data16
sub
mov
iret
mov
pop
mov
push
jbe,pn
xchg
or
mov
jmp
das
sahf
repnz
mov
dec
popa
insl
mov
push
push
testb
push
imul
push
and
mov
xor
sbb
or
xchg
cmpsb
dec
add
inc
xchg
aas
in
pop
clc
and
cmc
sub
cwtl
cmp
out
aad
dec
inc
rorl
in
pop
bound
adc
mov
gs
xrelease
psllq
xor
xor
add
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
dec
js
stc
adc
adc
add
in
sahf
xchg
cli
cmp
xchg
push
jge
xchg
aad
push
cltd
clc
mov
cmp
add
shl
mov
int
in
popf
movsl
movl
mov
insb
inc
xor
cs
daa
std
xor
sub
hlt
shll
std
sbb
xchg
pop
jp
mov
mov
insl
daa
push
xchg
jnp
cwtl
inc
js
push
std
push
sbb
dec
add
add
jno
jge
dec
outsl
pop
arpl
inc
arpl
jl
les
cmp
push
and
push
out
test
jno
notl
stc
mov
xchg
fs
pop
adc
std
dec
sti
cmp
aad
cmp
and
pusha
dec
and
cmp
push
addr16
pop
scas
icebp
je
or
pop
cmp
dec
test
es
js
mov
shl
mov
mov
pushf
out
adc
jns
aad
mov
jl
and
xor
pusha
in
nop
je
sarb
test
xor
ljmp
cmpsb
jne
daa
sub
nop
xor
cld
or
sbb
cmpsb
push
ds
dec
adc
cltd
mov
push
dec
repz
sub
icebp
jmp
ja
sbb
icebp
inc
sbb
inc
aam
ficoml
sbb
lods
mov
test
add
dec
test
adc
shl
add
mov
arpl
daa
loop
subb
test
push
ficompl
mov
test
imul
adc
cmp
pop
xchg
lret
sub
and
cmp
and
repz
push
cmp
pop
lds
dec
dec
fsubl
icebp
dec
mov
cs
pop
dec
pop
ljmp
mov
add
cld
imul
inc
xlat
jmp
in
int
dec
mov
fdivl
outsb
pop
xchg
pop
and
dec
push
dec
aaa
aaa
dec
jb
mov
inc
popf
and
sub
adc
enter
insb
hlt
and
scas
push
add
pop
arpl
sbb
adc
cli
adc
ret
cmp
adc
push
mov
inc
pop
cli
adc
dec
icebp
js
sbb
sub
mov
or
jmp
xlat
imul
inc
leave
mov
push
mov
sar
cmp
icebp
mov
xchg
jae
imull
mov
sbb
ds
stos
out
rorb
add
cs
in
push
or
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
sbb
push
out
adc
adc
jns
jns
pop
fsubl
aad
aam
xor
sahf
fwait
jmp
mov
lret
cmp
enter
sub
push
mov
int3
mov
out
or
add
in
shrb
negl
cld
not
pop
les
add
and
ljmp
sbb
lret
in
out
pop
mov
stc
mov
mov
enter
dec
mov
iret
xchg
add
push
mov
fldcw
loopne
cld
aad
sub
cli
in
mov
push
aas
mov
and
addr16
xchg
pop
xor
mov
cmpsb
mov
gs
or
roll
jb
push
pop
pusha
fstps
mov
test
jae
dec
mov
les
pushf
repnz
inc
mov
stos
push
cwtl
cltd
into
inc
xchg
fidivrs
jg
xchg
hlt
pop
out
push
xor
daa
outsl
imul
sub
inc
aaa
addr16
push
push
and
stos
in
mov
aaa
data16
movsb
ret
push
push
adc
adc
push
cmp
call
ss
mul
cmp
and
vpmaxsw
sbb
ficoml
test
ja
xchg
out
mov
mov
aas
pop
xchg
cmp
adc
pop
insl
mov
add
movsb
jnp
ja
bound
push
adc
cmpb
pop
mov
add
call
mov
in
sbbb
scas
xor
dec
inc
mov
pop
xchg
das
sahf
ret
add
stos
cmpsl
push
jle
mov
data16
inc
dec
or
xchg
test
xchg
dec
sub
jg
pop
mov
add
lea
dec
and
shrb
and
mov
push
gs
sub
cmpsb
faddl
fnstcw
loopne
loope
mov
lahf
xor
xchg
sbb
adc
aaa
js
dec
push
pop
sbb
stos
dec
es
movsl
mov
in
insl
pop
dec
shll
dec
xchg
cmp
or
test
cmp
inc
insb
mov
cmp
addr16
push
or
test
enter
jge
mov
inc
in
shl
pop
fs
fcoml
aaa
pop
push
inc
and
xchg
add
adc
pop
mov
add
mov
fmulp
js
sbb
nop
repnz
scas
aad
xchg
divl
jle
lret
xor
aam
push
xor
jp
test
outsb
loope
jno
jmp
cmp
ljmp
xchg
aaa
sub
xchg
adc
adc
mov
leave
sub
aaa
cwtl
dec
lock
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
out
insb
insb
sub
adc
dec
int
ljmp
inc
repz
imul
sti
push
iret
adc
xor
and
adc
shll
mov
xchg
notb
out
adc
clc
cld
jmp
dec
je
xchg
sarl
adc
in
int3
jge
es
lds
aam
cmp
cmp
cmp
jno
fstps
fistpll
push
mov
mov
push
ds
pop
leave
ds
sbb
decl
cld
hlt
fnsave
ja
cli
pop
int3
inc
inc
push
jnp
xchg
mov
cli
jo
push
sbbb
push
xchg
fidivl
jge
mov
cmp
jmp
mov
icebp
push
jne
scas
je
pop
push
mov
lret
inc
inc
and
pop
cmpsl
hlt
jno
cmp
or
push
bound
mov
roll
mov
cmp
mov
cli
fbld
mov
inc
sub
add
pop
mov
inc
outsb
data16
loope
lods
andl
gs
fmul
fcoms
inc
pop
cmpb
jmp
jnp
enter
xor
bound
dec
pop
testb
jg
pop
pusha
push
push
call
cmp
pop
pop
rcrl
into
and
and
mov
jmp
mov
and
jg
mov
adc
jae
leave
cmpsl
imul
fldl
adc
add
xchg
sbb
dec
sbbb
or
xlat
mov
fsubp
xchg
pop
mov
in
cmp
out
mov
inc
xor
adc
ss
push
pop
cltd
enter
sub
cmp
sub
mov
fstps
in
mov
dec
cmp
std
roll
mov
jecxz
popa
jmp
test
xchg
mov
jno
xchg
jns
cmp
ja
push
pop
or
stos
mov
dec
es
das
xlat
mov
sub
inc
jno
je
out
fwait
pop
fwait
std
movsb
scas
stos
push
insl
lret
xchg
incl
cmc
ss
and
and
xor
std
roll
and
ljmp
daa
cmp
lret
cmp
xchg
cli
inc
in
mov
xchg
pop
ds
addl
movsl
sbb
loop
out
sti
sbb
adc
cmp
shll
bound
or
sarl
mov
xorl
sbb
mov
dec
test
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
xlat
add
adc
adc
xchg
loopne
mov
pop
xor
cmpsb
mov
inc
cld
rcrl
push
sub
call
in
mov
lods
test
movsl
add
repz
dec
push
pop
hlt
add
or
das
cmp
xchg
add
aaa
bound
out
dec
stos
sbb
out
decb
jecxz
mov
imul
out
shrl
pop
and
je
test
jb
rcrl
jne
cmp
out
aaa
xchg
push
stos
out
lods
cmp
inc
dec
sub
xor
jmp
xor
jg
mov
mov
and
adc
sbb
push
jnp
and
xor
xchg
vsqrtsd
std
push
mov
andl
cmp
sub
sbb
mov
mov
pop
xchg
mov
xlat
mov
xor
loope
outsl
mov
mov
ficoml
out
adc
pop
cmp
jns
xor
push
out
cmc
js
js
adc
cmc
adc
inc
sbb
imul
out
pop
mov
enter
push
push
mov
sbb
dec
jecxz
fidivs
in
xchg
les
rorl
jbe
push
loope
cmp
lcall
insl
jmp
add
lfs
mov
sub
out
xor
mov
test
pop
mov
test
jae
inc
mov
mov
inc
jg
pop
add
in
fldenv
lahf
cwtl
dec
mov
sub
pusha
push
jno
mov
mov
sarl
aas
jne
inc
adc
lret
stos
dec
jmp
and
push
xchg
xchg
mov
insb
mov
dec
imul
jg
xchg
jle
xor
dec
int3
pop
inc
add
in
orl
aaa
mov
mov
xor
fsubr
arpl
jne
sahf
cltd
jmp
inc
out
movsb
mov
lahf
push
loope
jle
addr16
pushf
lret
cmp
sub
loop
mov
js
in
rorl
push
jg
roll
jle
cmp
and
icebp
mov
jecxz
lahf
negl
rcrl
mov
jl
add
int
dec
mov
in
dec
imul
jmp
pop
and
add
and
jns
ret
xchg
and
mov
push
lret
jae
test
sub
and
je
inc
cmp
popa
mov
dec
pop
mov
sbb
mov
and
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
pushf
cli
pop
lods
jnp
adc
adc
iret
adc
sbb
in
and
pop
iret
jo
jecxz
cwtl
add
mov
push
mov
add
xchg
data16
push
inc
push
jne
or
dec
dec
dec
jae
inc
pop
imul
mov
push
jne
das
cmp
push
insl
lea
or
fsubrs
mov
xchg
pop
mov
cwtl
insl
mov
xlat
fsubrs
test
into
movsl
xchg
dec
popa
inc
ret
jo
mov
adc
loop
lret
xchg
xlat
push
or
inc
ds
mov
popl
ja
mov
jnp
xlat
stos
mov
test
leave
stc
rcr
test
test
loop
xor
push
xlat
mov
dec
rorl
xchg
mov
mov
shrl
push
cmp
xlat
inc
push
xor
sub
ss
jae
imul
sbb
pop
jg
pop
int
sub
mov
aad
frstor
pop
int
sahf
ja
mov
fistpl
sbb
lods
xchg
sbb
shr
xor
mov
data16
test
imul
xchg
or
xorl
xor
shl
sahf
ja
jne
ds
mov
popa
xor
ja
pop
fcom
aam
lock
dec
lcall
in
push
jne
jns
adc
push
jns
xor
adc
inc
mov
jg
dec
cmp
mov
and
or
jge
popf
imull
mov
cmp
or
sahf
lahf
jbe
leave
test
jge
cmp
inc
out
std
cld
adc
and
inc
jl
popa
jnp
cld
mov
pop
mov
test
add
fdivrp
adc
sub
mov
inc
shlb
insb
pop
les
ret
sti
fs
int3
jmp
xchg
stos
std
mov
out
insl
movsb
iret
pop
popf
lcall
sub
insl
faddl
inc
mov
ss
dec
pop
stos
cld
sub
adc
rcrb
out
in
sbb
pop
jle
mov
stc
cli
imulb
int
pop
loop
movsl
xchg
aaa
popw
dec
lds
mov
mov
jbe
push
jecxz
inc
rorb
jecxz
or
mov
test
mov
xor
mov
xchg
xor
xchg
in
mov
lods
pusha
dec
add
inc
icebp
push
push
ret
jne
mov
add
fmull
test
push
fcompl
pop
dec
pop
xchg
adc
insb
cmc
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
js
ficoms
adc
dec
xor
lret
test
repnz
mov
stc
repnz
cwtl
fimuls
shrb
pop
dec
mov
icebp
es
movsl
add
scas
sbb
or
jp
dec
push
jge
fiadds
enter
mov
imul
fs
dec
loop
add
pushf
xor
arpl
inc
pop
cmpsb
fsubr
out
divb
cmpsb
xchg
sub
ficoml
inc
push
cmpsb
cmp
in
fcompl
pop
orb
xor
sub
xchg
into
dec
xchg
mov
fildl
shlb
sarl
mov
es
ficomps
ss
and
addb
test
loop
mov
test
sbb
call
cmc
sub
shlb
or
xchg
jle
and
jns
lea
cltd
out
daa
or
lahf
hlt
push
call
int
pop
dec
push
adcb
push
fnstcw
jae
lret
out
fwait
mov
adc
in
lds
xchg
leave
js
rcrb
dec
out
lahf
rcl
push
xchg
xchg
and
sbb
mov
test
xchg
xchg
adc
in
or
pop
pop
mov
popf
ljmp
mov
xchg
ss
add
int3
pop
jnp
jmp
pushf
mov
sbbl
sbb
mov
adc
popf
ss
xlat
add
fsubp
fs
gs
fwait
mov
xor
cmp
dec
arpl
imul
imul
pop
jnp
pop
insb
iret
int
inc
sub
or
cli
shl
pop
mov
jg
mov
mov
scas
out
dec
cmp
fcmove
lahf
xchg
jp
inc
cltd
int
out
movsl
inc
test
addl
push
mov
out
cmc
mov
cmp
adc
cmp
jg
inc
sub
int3
sbbl
cmpsl
es
cmpb
cmp
xor
mov
subb
std
xchg
pop
adc
mov
sub
adc
es
xchg
ljmp
lds
dec
loopne
inc
mov
jg
mov
sahf
push
decb
les
pop
xchg
and
adc
jg
cmpsl
mov
jo
push
jbe
mov
cmp
fwait
cmpsb
cld
jecxz,pn
out
aaa
xor
inc
pusha
jg
cltd
arpl
fld
mov
add
gs
add
inc
mov
mov
jge
sahf
adc
fucomip
es
xor
push
cmp
cmp
fcmovbe
pop
in
and
das
pop
adc
nop
cmpsl
sub
or
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
ret
mov
xchg
movlps
mov
inc
ljmp
dec
popf
shrb
mov
bnd
pop
push
jmp
aad
fbld
insl
mov
mov
cmp
cmp
aaa
ja
pop
sbb
xchg
idivb
xchg
dec
dec
add
jle
into
fildl
fimuls
xor
pushl
push
lods
inc
sub
inc
adc
cmpsb
in
outsb
js
addr16
lret
xor
and
mov
ja
dec
js
or
fdivl
sub
nop
iret
jp
inc
dec
sahf
adc
mov
inc
lcall
mov
sbb
or
mov
pop
cwtl
mov
jns
inc
nop
jge
mov
or
push
insl
ljmp
ret
test
fistpll
out
pop
lods
in
or
dec
sub
mov
mov
fs
mov
sti
add
out
repz
iret
xchg
out
and
dec
int3
lock
les
mov
push
verr
pop
inc
add
push
mov
pusha
daa
mov
fistpll
xor
aaa
ds
into
std
imul
pop
rolb
jb
sub
and
sub
xchg
inc
mov
js
inc
xchg
xlat
call
adc
adc
in
prefetchw
lea
testl
xchg
fnsave
loopne
jge
repz
pop
repz
aad
adc
jne
cmp
jb
adc
mov
or
and
mov
pop
fistpl
cmpl
and
cmp
daa
sti
xor
dec
mov
sub
jb
add
push
pop
imull
dec
inc
jp
pusha
fdivrl
movsl
leave
inc
inc
jb
mov
mov
rcr
leave
aas
int
xchg
pop
int3
mov
bound
scas
mov
loop
cmpsl
into
aaa
adc
lret
xchg
mov
testl
dec
cltd
mov
pop
cld
pop
outsb
dec
or
enter
fnstenv
scas
idivl
out
sub
cld
adc
lret
pop
cmpsl
mov
dec
xorb
imul
or
fucomip
pop
bound
mov
hlt
lcall
stc
add
pop
adc
mov
mov
arpl
jecxz
cs
xor
xor
lret
lods
sbb
add
test
adc
xchg
divb
jp
leave
push
add
add
add
adc
arpl
cwtl
imul
std
idiv
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
cmp
mov
aam
in
test
icebp
add
push
push
fstps
sahf
dec
add
jle
shll
xchg
push
adc
pop
jecxz
xor
pop
mov
rcll
call
enter
rcr
mov
rcr
and
sahf
lds
jl
daa
jb
inc
push
pop
std
jecxz
mov
or
lods
lods
adc
arpl
mov
or
dec
lahf
or
cwtl
sub
push
pop
or
pop
adc
adc
ljmp
jle
pop
in
push
adc
add
into
pop
and
pop
jne
in
mov
iret
add
insb
sbb
inc
fistps
hlt
shlb
dec
and
leave
sub
inc
adcl
roll
jmp
mov
outsb
pushf
pop
leave
out
pop
aam
aad
cmp
out
mov
test
loope
in
or
xlat
push
push
mov
fwait
pop
xchg
jae
dec
ljmp
rcll
pop
mov
out
mulb
outsl
and
addl
push
jp
cmc
inc
jno
sbbb
enter
gs
ja
cmp
aaa
jbe
xchg
xchg
mov
and
orl
xchg
cmp
jno
mov
mov
fisttps
dec
dec
lods
inc
sub
lret
dec
mov
xchg
into
mov
xor
dec
push
jb
and
add
hlt
xchg
in
push
sbb
push
sahf
movsb
arpl
daa
mov
mov
dec
pop
mov
movsl
loop
xchg
push
jg
insb
mov
sbbb
jp
leave
lods
fldl
cli
and
jge
jle
adc
sbb
std
test
inc
negl
clc
outsl
into
mov
push
lret
mov
test
pushf
ror
ss
cmp
or
jl
js
push
push
and
test
je
ss
leave
xchg
jl
loop
and
xchg
mov
aaa
lcall
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
xchg
pop
lods
scas
into
adc
adc
dec
add
mov
adc
out
in
cmpsb
scas
dec
xor
cmp
dec
cmc
jno
loope
inc
sub
dec
add
pop
and
xor
das
mov
jl
es
lcall
sbb
cmc
adc
lcall
insl
lods
inc
mov
add
test
or
clc
loop
sbb
int3
outsb
clc
and
in
sarl
and
push
mov
ss
scas
pop
out
cmpsl
frstor
loope
mov
dec
pop
inc
inc
stos
cli
out
out
sbb
repnz
lods
lret
addr16
jno
pop
xor
andl
test
incl
cltd
aam
stos
inc
ror
mov
test
sysexit
cmpsl
mov
jle
inc
push
sub
mov
cmp
mov
inc
cmp
ja
xchg
notb
cmp
hlt
in
mov
mov
sarl
xchg
push
icebp
and
and
adc
lea
fidivs
pop
in
push
je
jle
dec
push
pop
test
fimuls
xchg
cmpsb
fdivl
add
push
xchg
arpl
xchg
ret
inc
mov
push
data16
mov
xor
popl
sbb
xlat
xor
cld
das
shll
pushf
out
repnz
jg
sub
loop
sbb
lret
sub
leave
xlat
aam
sti
xchg
popa
loop
sbb
dec
lret
push
sbb
repnz
fs
pop
pop
test
out
jle
mov
mov
outsb
gs
flds
xor
insb
push
insl
gs
sbb
repnz
mov
insb
inc
icebp
cld
or
dec
jg
outsl
inc
js
cld
out
jbe
js
adc
add
repz
pushf
cld
or
out
inc
out
push
stos
cmpsl
cmp
cmc
jne
sbb
xchg
xchg
mov
out
sbb
push
push
out
test
jnp
dec
insl
rorb
adc
xchg
push
outsl
xchg
stos
clc
rcl
popa
shl
lods
jae
cld
aaa
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
das
push
nop
js
lret
enter
push
sbb
xlat
add
adc
test
rcrb
cmp
int3
mov
iret
shlb
xchg
jp
scas
fcomip
aam
adc
inc
lds
faddp
das
add
repz
mov
bound
ret
test
or
popf
xorl
add
add
jnp,pn
cmp
cmp
ret
sbb
mov
cmc
mov
in
jmp
xchg
arpl
ljmp
mov
jb
dec
ss
mov
test
movsb
idivl
out
pop
mov
popa
jne
enter
lret
jp
stos
push
pop
insb
cltd
or
fcomip
fidivrl
or
ret
cmp
arpl
loop
shll
or
cmpl
xor
in
inc
insb
test
push
jmp
stc
sbb
cmovg
pop
xor
mov
adc
xchg
mov
jge
fstpt
sub
jmp
sub
inc
pop
pop
mov
sbb
or
ljmp
scas
out
mov
movsb
je
sbb
hlt
pop
jmp
pusha
js
mov
xchg
scas
leave
jo
lret
sub
jecxz
push
jo
rolb
hlt
push
stc
cmp
push
rclb
and
sub
rcrb
out
rolb
sub
jg
and
rep
dec
cmpb
cltd
movsl
mov
sbb
cmpsb
repz
jo
xchg
cmpsb
mov
mov
dec
call
push
mov
hlt
xor
cmp
data16
insb
stos
aam
je
dec
aam
in
mov
add
pushl
movsl
aam
idivl
pop
ret
push
xchg
repz
sbb
cmp
scas
cmp
pusha
mov
sti
sub
popf
ret
xchg
adc
leave
push
sbbl
add
and
mov
pop
dec
out
cmc
sbb
or
add
arpl
loop
in
xchg
inc
es
jb
sbb
psllw
cwtl
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
and
push
adc
adc
out
mov
cwtl
ss
mov
mov
inc
add
test
xchg
push
shrb
or
sbb
int3
push
clc
push
sub
dec
mov
shl
pop
dec
pop
mov
xor
add
xor
in
lahf
int3
sbb
mov
and
jne
pop
mov
fwait
imulb
sbb
xor
icebp
stos
adc
mov
and
in
cmpsl
add
jb
jo
add
mov
imul
lods
lods
cwtd
loopne
mov
mov
xchg
movsb
mov
mov
testl
sub
or
cmp
jno
add
andnps
push
leave
dec
outsl
ja
lret
mov
sbb
std
mov
adc
leave
mov
mov
arpl
mov
lcall
std
xor
dec
xchg
push
sub
mov
xchg
and
jmp
jnp
fdivs
cmpsl
jne
jmp
sub
push
cmp
fwait
ja
ficomps
push
xorb
add
dec
insl
cltd
adc
sbb
add
mov
or
mov
je
xchg
dec
inc
inc
sbb
sarl
sbb
hlt
add
out
out
mov
and
mov
pop
in
xchg
imul
into
jle
nop
jecxz
subb
aam
aad
out
xor
or
jns
lods
out
in
xchg
pop
mov
push
pop
and
add
mov
jo
lds
jb
lea
or
aam
pop
pop
jb
sub
repnz
aaa
mov
mov
out
fstl
jg
stc
sub
xchg
or
int
push
sub
ss
iret
mov
pusha
loope
js
cmc
push
pop
push
push
mov
push
add
mov
adc
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
ret
cmp
ret
enter
inc
sahf
test
enter
je
xchg
jae
nop
loopne
daa
fs
ret
pop
fbstp
pop
jge
mov
sbb
adc
scas
enter
xchg
je
loopne
ret
xchg
push
mov
out
xor
mov
aaa
dec
mov
dec
mov
inc
cmc
cmp
rcrl
dec
xor
push
push
call
movsb
rolb
jno
mov
pop
pop
jl
jge
not
loopne
dec
jge
and
jg
mov
iret
mov
or
inc
fistl
cld
xor
cmp
mov
cmp
scas
inc
push
mov
mov
cmp
mov
push
movsb
inc
mov
insb
shll
jmp
insb
negb
rolb
outsl
adc
aad
xor
push
xor
dec
push
dec
xchg
call
mov
mov
out
or
cltd
jmp
add
nop
push
outsb
aas
mov
cmp
jl
test
dec
lock
or
jmp
xchg
loopne
adc
or
int
cwtl
js
lret
xchg
mov
adc
xor
fiaddl
dec
icebp
fwait
daa
cwtl
xchg
mov
pshufw
daa
cmpsb
rcl
ret
add
outsb
add
popa
test
mov
gs
xor
push
mov
inc
aam
dec
xchg
movsl
mov
mov
aam
test
inc
mov
push
fsubrs
push
mov
add
dec
mov
pop
lcall
mov
je
xor
in
repnz
lods
cmp
xchg
sub
and
dec
sbb
dec
movsl
jl
in
imul
hlt
xchg
shlb
pop
xchg
in
cmpsl
lock
add
or
or
mov
push
addl
jo
cmp
adc
push
xchg
jp
xlat
scas
loop
jle
and
dec
or
int
in
jmp
inc
dec
push
in
mov
push
lret
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
or
adc
adc
add
xor
xor
loop
ljmp
and
push
lret
jge
cmp
cmp
cmpb
xor
cmp
push
jo
push
jecxz
test
scas
call
or
fs
push
rorb
jae
push
adc
jne
pop
sti
push
loop
xor
pop
stc
sub
fimull
ljmp
stc
aad
test
inc
lahf
xchg
aam
fimull
sub
fidivl
insb
jae
cmpsl
push
test
mov
mov
inc
inc
pushf
pop
jp
ja
shrl
movsb
sbb
mov
jno
stc
cld
jp
inc
aam
sub
push
adc
mov
ret
and
cltd
loope
add
mov
mov
test
xchg
adc
or
lods
adc
mov
movl
xchg
dec
dec
or
and
fcom
pop
cltd
mov
sub
test
or
mov
or
ror
pop
xchg
aad
cli
pop
push
xchg
leave
out
rolb
inc
jno
fadds
xor
out
or
adc
fisubl
xchg
loopne
push
mov
ja
jbe
add
stos
fs
popa
and
fs
inc
loopne
mov
pop
mov
rorb
mov
push
add
add
cmp
fs
inc
das
inc
and
mov
add
jmp
and
daa
mov
mov
pusha
inc
cmc
lds
in
outsb
adc
aas
ljmp
dec
pushf
mov
int3
cs
ljmp
cld
shlb
loopne
in
jle
dec
adc
int
mov
scas
xor
das
out
cmc
inc
loopne
cltd
dec
ljmp
lods
sub
aaa
and
cld
mov
pop
xor
mov
pop
mov
add
lret
mov
in
cmp
sti
or
loope
test
incl
testb
adc
test
cltd
jecxz
add
mov
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
sarb
movlps
jo
pop
loop
popa
jo
dec
pusha
cmp
sub
into
push
sbb
hlt
add
cmp
aas
or
adc
push
shll
jecxz
jmp
dec
xchg
xor
xchg
jg
clc
pop
push
xchg
stos
jle
cmp
insb
cld
xor
insl
js
cs
repz
fists
cld
aad
sbb
data16
inc
xadd
sbb
dec
ficompl
es
pop
lds
sar
inc
pop
movb
stc
lods
test
out
add
test
fistps
mov
lods
jb
test
arpl
add
fisttps
mov
scas
cmp
cmpsb
std
rolb
pop
push
bound
mov
pop
aas
inc
mov
mov
lahf
or
mov
mov
aad
ret
mov
fmul
sub
ret
iret
sbb
rcll
xchg
pusha
aam
jge
jns
or
in
dec
mov
jae
inc
sti
jg
pop
inc
push
and
sarb
jmp
jo
xor
lret
jecxz
adc
shrd
push
aam
jnp
cwtl
inc
popa
gs
push
xorl
lcall
jl
call
jns
cltd
pop
push
jne
fildll
pusha
in
flds
dec
icebp
mov
ret
sbb
leave
mov
push
cmp
loop
int3
addr16
pop
outsl
jg
lods
inc
jge
enter
mov
cmp
int
jmp
insl
sub
and
jge
inc
test
mov
dec
and
int3
adc
lds
push
cmpsl
and
push
sub
cld
fnstenv
inc
jnp
sarl
shr
mov
std
push
pop
push
icebp
inc
jle
aam
rolb
fisttps
dec
cmp
xor
ss
sbb
rcr
push
xchg
lods
jnp
loop
mov
and
je
mov
sbb
push
mov
test
push
int
js
mov
lcall
adc
mov
sbb
and
sub
xchg
lock
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
sbb
adc
adc
push
ljmp
out
add
sbb
scas
adc
shr
pcmpeqd
jge
lret
or
cli
jge
leave
popa
lret
jl
push
lea
loope
nop
imul
xchg
imul
popa
stos
fbstp
lock
push
sub
out
xchg
sti
sbb
test
aas
cmp
aaa
fnstsw
cmpsb
pop
rorb
xchg
sub
divb
and
mov
dec
js
nop
xor
ds
and
bound
fiadds
movsb
and
enter
and
adc
std
ljmp
cmp
jg
mov
xor
push
or
icebp
movsl
or
repnz
sahf
pop
cmp
enter
cs
and
sub
mov
cmc
test
or
xchg
dec
ret
mov
xchg
movsl
pop
jl
mov
jmp
cltd
loope
sub
cmp
lock
test
mov
ret
mov
shlb
fisubl
cli
jne
mov
fmull
call
pop
addr16
mov
cltd
pop
dec
jge
adc
xchg
mov
movsl
lahf
mov
pop
xorl
popa
mov
repnz
or
push
sbb
rorb
xchg
inc
ret
and
popf
mov
or
mov
dec
int3
inc
ja
sarl
mov
aaa
mov
sub
pop
or
jb
rolb
cmp
sbb
ss
shll
andl
sti
jge
ret
in
ljmp
jl
sahf
xor
cmp
push
test
inc
lret
xlat
jae
std
sbb
xchg
push
jl
es
or
stc
mov
outsl
pop
je
jg
pop
bound
mov
std
rorb
hlt
rcrb
mov
repnz
mov
je
pop
shll
cmp
push
std
scas
dec
xchg
add
lea
repnz
fdivr
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
das
popa
outsb
insb
lcall
adc
aad
pushf
shrl
add
add
test
pop
xchg
push
leave
loopne
negl
mov
jmp
cmp
cltd
ljmp
sub
negl
inc
sub
mov
pop
dec
mov
aaa
shll
pushf
out
int3
iret
cmp
mov
daa
jp
scas
pop
ret
ror
into
loopew
in
dec
test
andb
inc
repnz
ret
jnp
mov
es
sub
push
xchg
fwait
xor
push
outsb
fidivrs
and
call
aaa
mov
hlt
stos
inc
fdivs
dec
pushf
xor
push
and
push
outsl
imul
rorb
shr
loope
pop
scas
push
ss
and
test
test
mov
lcall
outsb
mov
adc
fists
orl
loopne
outsb
mov
sub
push
add
pop
push
in
insb
dec
inc
cmpsb
xor
cs
pop
out
jge
and
mov
sbb
shl
adc
sarl
outsl
cmp
and
popa
push
pop
rcl
xor
xchg
adc
jne
push
fistpl
jmp
or
jae
and
mov
sbb
scas
cmp
mov
xor
jmp
inc
dec
shrl
push
pop
sarl
cmp
fdivl
cli
adc
fists
int3
stc
mov
popf
or
lods
push
gs
pop
imul
aas
and
icebp
xchg
xchg
clc
ret
shrb
fstps
scas
lret
fcompl
pop
addr16
fs
lret
loopne
test
ret
mov
lods
lret
add
mov
xchg
dec
arpl
sbb
adc
and
inc
push
mov
mov
ds
ret
shl
or
sbb
into
adc
or
int3
aas
mov
clc
dec
adc
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
jbe
sarb
test
adc
movlps
popa
mov
loope
add
push
xchg
mov
std
pop
stos
or
sti
lea
sub
add
cmp
or
mov
mov
ret
addr16
mov
jno
mov
pop
cld
ja
or
int3
in
or
test
leave
mov
test
stc
pop
fldenv
jno
xchg
cmp
pop
xorb
leave
push
push
cmpl
pop
ror
dec
popa
addr16
es
cwtl
lret
inc
adc
cld
addl
dec
lods
ret
sbb
jne
sahf
xor
sub
jmp
push
dec
into
pop
or
and
xchg
hlt
decl
test
stc
xchg
xor
mov
add
mov
es
mov
push
cwtl
mov
push
negl
test
stos
xor
or
fmull
xor
xchg
mov
outsl
cwtl
es
push
mov
je
sbb
mov
push
fnstcw
pop
mov
hlt
mov
imul
dec
push
push
ss
lods
adc
adc
jbe
sub
pop
sahf
cmp
rorb
pop
addb
xchg
in
cltd
das
je
pop
aam
xchg
jbe
mov
xor
push
fmull
or
sub
cmp
sub
add
push
pop
mov
popa
dec
fimuls
jmp
outsb
enter
or
loop
inc
repnz
pushf
push
mov
int3
sub
ds
mov
lret
mov
and
push
xchg
cli
fwait
cmp
cmpsl
mov
dec
mov
mov
xchg
rcrb
test
aad
jno
jmp
pop
jne
push
ja
sbb
mov
in
jmp
shl
and
mov
xchg
gs
xchg
in
mov
or
aam
xor
in
mov
mov
xchg
sub
or
add
lahf
arpl
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
out
lods
add
adc
mov
adc
pop
outsb
jmp
push
push
loop
sub
pop
jo
cwtl
hlt
sbb
shr
test
push
mov
inc
lock
negl
dec
flds
or
bound
repnz
jl
cs
aad
sub
xor
aam
sub
add
in
lret
jecxz
mov
mov
pushf
or
jp
shr
xor
inc
roll
mov
stos
inc
ja
add
fwait
divl
inc
fwait
mov
fs
xchg
ds
icebp
popf
xor
insb
mov
outsl
pop
out
push
jae
fbld
and
cwtl
jo
lret
push
mov
jmp
jecxz
sahf
xchg
and
lds
xlat
dec
adc
js
lret
aam
dec
xchg
cmp
shll
out
adc
mov
mov
sbb
push
mov
arpl
or
mov
into
sbb
push
dec
shl
or
ss
pop
jecxz
scas
out
dec
sti
aaa
inc
or
ds
dec
mov
xchg
sub
lret
mov
jle
ja
jg
xchg
jl
shr
xor
mov
adc
add
jmp
add
sbb
adc
sbb
and
fs
enter
dec
adc
icebp
inc
push
cmp
xchg
dec
pusha
pop
stos
jmp
fistpll
rclb
iret
std
test
push
jp
lds
popa
push
das
inc
push
stc
in
jnp
and
test
jb
aas
nop
sbb
xchg
push
add
push
and
fisttpll
lret
dec
inc
cmpl
jbe
adc
fdivl
pop
test
xor
sub
push
imul
xchg
mov
lods
adc
push
lret
fisttps
sar
pop
mov
mov
cmpsl
cs
pop
xbegin
popa
push
inc
pop
fldl
shll
or
decl
test
mov
pushl
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
sbb
push
mov
adc
lcall
test
clc
insb
inc
subl
push
sar
fstl
addr16
ja
jne
dec
xchg
mov
xor
popf
lret
outsb
dec
lahf
das
test
mov
sti
xor
adc
cltd
sbb
outsl
or
mov
jae
dec
shrl
xor
sti
or
push
loopne
arpl
pushf
loope
cwtl
add
repz
scas
or
push
pop
shrb
hlt
into
pop
jne
mov
fwait
xlat
cmpsb
lods
xor
sbb
mov
sarl
lret
mov
adc
call
cmpsl
cld
inc
sub
or
mov
mov
dec
lea
je
loopne
ss
pop
icebp
sbb
out
into
imul
rcrl
mov
mov
insl
pop
popa
mov
leave
sahf
lods
cli
inc
and
mov
into
cltd
push
add
add
jl
stos
insb
mov
in
jecxz
cli
jecxz
jl
sbb
push
fsubl
lcall
inc
mov
pop
cmpl
xor
jle
out
fcompl
bound
fnsave
mov
test
test
add
sar
pop
xor
xchg
lds
out
mov
dec
orl
enter
les
mull
repz
in
in
and
dec
jnp
or
out
mov
lock
mov
jp
pop
and
jb
sub
test
xor
inc
push
mov
scas
test
call
xchg
dec
xor
inc
push
lcall
add
or
sbb
xchg
pop
ret
lods
add
mov
jle
lods
ss
je
es
lcall
xchg
test
notl
dec
xor
mov
test
jl
outsb
mov
mov
imul
mov
xor
dec
jne
xorb
insb
das
mov
popf
pop
inc
xor
pop
jle
jmp
jns
test
insl
jecxz
jae
ret
int3
xchg
push
ret
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
mov
enter
sahf
adc
ror
addb
jecxz
dec
sbb
gs
fldl
hlt
pop
inc
xchg
mov
scas
inc
xchg
cmp
pushf
cwtl
negl
inc
int3
push
stc
gs
inc
push
jmp
push
pop
xor
xchg
imul
fwait
push
push
fisubs
lret
inc
adc
cli
pushf
mov
or
out
or
bound
or
fildl
fisubrl
push
lods
arpl
fs
add
sysexit
push
or
add
pop
pop
clc
xor
add
and
in
and
or
clc
rorb
cmp
iret
mov
inc
sub
pop
std
dec
adc
push
outsb
xor
dec
sub
push
out
sbb
outsl
sub
sbb
push
inc
inc
mov
addr16
pop
sub
rorl
push
or
shl
clc
stc
enter
jp
loope
mov
cmpsl
and
int3
popl
jle
and
push
mov
add
lds
jne
daa
popf
jns
inc
sub
dec
cld
fimull
jbe
shr
out
jmp
adc
jne
xor
jo
cmp
movsb
adc
rclb
rcll
sbb
mov
loop
cmp
roll
cmc
jns
test
push
mov
xchg
stos
scas
sub
insl
cmp
sbb
mov
data16
imul
cmovge
pop
mov
andb
cli
mov
xor
inc
lds
nop
imul
mov
or
jmp
mov
jb
sti
push
in
nop
inc
cmp
mov
test
push
adc
cmp
je
or
mov
jo
xor
adc
push
insl
imul
dec
scas
or
popa
outsb
sbb
dec
int
or
jae
xchg
outsl
or
dec
pop
in
push
jbe
insl
xchg
fdivr
mov
stos
fdivrl
clc
pop
push
mov
ret
xor
mov
mov
stos
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
sub
adc
adc
xchg
cli
mov
or
popf
and
sbb
out
xchg
or
out
lea
ret
mov
sbb
sub
add
test
and
jo
add
test
xchg
pusha
repz
into
sbb
jno
hlt
int
xor
mov
mov
sahf
inc
pop
ret
jg
cmpsb
cmp
sub
dec
inc
out
es
inc
movsl
add
pop
js
bound
in
pusha
rolb
inc
sbb
neg
or
xor
xchg
mov
lods
dec
xchg
jbe
stos
inc
in
dec
popf
dec
aas
push
jno
das
push
sahf
mov
or
sti
movsb
fsubr
adc
bound
push
sbb
xor
rcl
pushf
jmp
loop
outsb
sahf
and
stc
mov
adc
and
lahf
hlt
sbb
clc
jp
mov
mov
outsl
stc
in
loop
icebp
into
sbb
dec
addr16
mov
fs
mov
arpl
pop
andps
and
dec
cli
lock
push
outsb
jecxz
jb
ss
int3
fistl
cmc
and
addr16
stos
sbbb
test
pop
pop
jg
dec
jnp
pop
jnp
out
ds
dec
gs
sub
mov
ret
out
dec
rsm
hlt
je
js
adcl
dec
add
or
insl
repz
push
je
loop
divb
call
jl
repnz
mov
cld
sub
push
inc
cli
repz
jp
dec
mov
or
enter
fcoml
stos
mov
cltd
hlt
or
fs
sub
repz
repnz
and
cmc
jnp
xor
lea
sbb
xchg
mov
mov
xchg
xchg
aas
xor
jg
mov
mov
cli
fnstenv
fists
adc
and
mov
jnp
inc
ds
lock
js
xor
mov
fiadds
xchg
nop
idivb
jecxz
pusha
add
cmp
mov
mov
jmp
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
mov
adc
adc
pop
add
jno
pusha
sub
imul
sbb
test
clc
mov
aad
lock
mov
mov
sbbb
notl
rcll
mov
or
sbb
mov
xchg
mov
xchg
imul
jl
sti
pop
push
xor
mov
repz
and
dec
push
or
mov
lret
outsl
xchg
xor
test
dec
push
push
movsb
and
addr16
or
ret
hlt
out
add
pop
out
cmp
push
adc
cwtl
dec
fwait
dec
std
mov
sarb
fs
push
das
and
stc
out
in
fldcw
int3
jnp
loop
enter
jo
xor
or
dec
daa
fs
cmp
xchg
mov
ja
and
jbe
jecxz
sarb
pop
fucom
ds
stc
insb
mov
sub
das
adc
push
mov
lds
int3
lods
xlat
popf
sbb
faddp
jl
sub
inc
sbb
sbb
mov
push
pop
inc
dec
fs
add
fbstp
mov
into
loop
xchg
fldcw
fdivrs
add
notl
sti
xor
push
lods
push
daa
mov
mov
xchg
roll
das
add
test
cmpsb
ds
jle
cmp
movsb
pop
xchg
ljmp
mov
or
or
popf
cmp
rcrb
mov
repz
cmpsl
xor
mulb
sbb
sti
repz
mov
mov
popl
xchg
jg
mov
mov
mov
lds
scas
inc
mov
popa
test
test
movsl
es
mov
dec
arpl
jl
into
pushf
mov
pop
add
insb
aam
add
push
outsb
test
pop
sub
sti
add
sbb
ret
xchg
mov
sub
jb
mov
or
stos
sbb
cli
gs
mov
or
mov
mov
cmp
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
icebp
xchg
enter
pop
outsl
outsl
loopne
adc
cmp
ficoms
jb
sub
or
jb
pop
lock
adc
or
xchg
in
xchg
sub
jo
jp
inc
outsb
lret
je
mov
data16
and
bnd
js
test
ljmp
fdivl
aam
jbe
mov
repnz
ja
in
in
lea
stc
out
repz
out
mov
inc
jp
cli
aaa
push
jbe
sub
loop
push
adc
jge
xorb
inc
inc
clc
or
pop
sbb
jae
shl
adc
movsl
sti
push
cld
xor
arpl
fistpll
xchg
mov
push
mov
mov
mov
cltd
orl
pop
mov
fbld
test
popa
bound
push
fimuls
stc
add
sub
mov
ljmp
jb
dec
outsb
inc
xorb
lods
aam
mov
push
in
in
push
push
in
aam
loope
xor
mov
dec
dec
xchg
add
mov
in
mov
jb
in
icebp
push
popf
je
scas
lds
enter
mov
ds
lea
cmpsb
sub
test
xor
cmc
mov
mov
inc
inc
aad
mov
nop
scas
aaa
and
insb
mov
pop
mov
icebp
rcrb
mov
rorb
cmpsb
imul
dec
es
gs
fbstp
jno
scas
and
repnz
andb
in
test
sbb
sbb
jge
sbb
sti
leave
ja
mov
leave
mov
int3
and
in
pushf
xchg
cmp
inc
jbe
jg,pt
xchg
cmp
add
cmp
outsb
sub
fdivrl
and
xchg
scas
in
in
mov
xchg
daa
idivl
sbb
mov
mov
fldlg2
mov
pop
xor
sbb
stos
loop
popf
testb
xor
and
lea
dec
sbb
dec
dec
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
cmpsb
inc
push
push
mov
adc
mov
pop
pop
add
sub
push
mulb
lds
jle
inc
and
mov
das
sbb
mov
sahf
push
mov
sbb
fsubl
fsubrl
mov
add
subb
xor
lods
rclb
mov
das
pop
push
jb
pop
orb
das
test
out
and
sbb
xlat
jo
mov
insb
fwait
xor
jo
repz
jg
sahf
popf
imul
mov
insl
mov
imul
xlat
popf
cld
mov
cmpsl
shl
sub
sbb
test
pop
in
out
adc
outsl
out
pop
movsb
add
lods
fwait
loope
mov
pop
jle
cmp
cmp
test
pop
test
xchg
jb
adc
cmp
sub
push
popf
loopne
es
xor
ret
scas
mov
mov
dec
sub
jno
andb
pop
jb
mov
insb
fld
mov
lahf
push
pushf
shlb
mov
out
sub
out
mov
inc
mov
inc
jne
add
lcall
mov
jbe
pop
jmp
testb
outsb
lcall
sub
mov
fistpl
int3
mov
cmc
fdivrl
dec
ja
test
mov
fildll
fistl
mov
bound
inc
fisttpll
loopne
ficoml
out
dec
leave
out
dec
bound
movb
mov
cmp
push
jo
inc
ret
lret
inc
adc
sub
push
fistpll
loop
out
daa
in
fsubl
std
cmp
sub
fisubs
add
mul
or
arpl
nop
hlt
sbb
xor
fs
mov
pop
fnstenv
jmp
loop
popf
or
cmpsb
loope
repz
mov
lds
sbb
cli
jo
aam
shr
lods
pusha
jl
mov
mov
inc
loopne
ret
push
dec
cmp
push
or
outsl
push
xchg
popf
fsub
fbld
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
repnz
sbb
fmull
outsb
sbb
mov
scas
push
cmp
xor
aaa
or
mov
or
and
loop
fcmovnu
mov
pop
sbb
int
inc
call
insl
xchg
xchg
mov
leave
mov
sub
das
add
add
das
pusha
cltd
cmp
xchg
mov
adc
mov
testb
xchg
jbe
aam
mov
and
jl
mov
cmc
stos
jno
nop
inc
inc
cmp
xor
fstps
mov
pop
ljmp
loop
adc
pop
xor
outsl
lds
popa
sub
jnp
popa
push
insb
adc
dec
jne
add
mov
and
cmp
xor
lret
cltd
cli
loope
scas
mov
xor
jle
push
shl
and
xchg
call
mov
lods
ret
punpckhwd
fdivr
push
rol
js
outsl
add
in
mov
testl
loop
aaa
cwtl
repz
add
mov
pop
add
mov
dec
shll
add
shrl
jp
sbb
mov
mov
xor
into
jbe
sub
pop
cmp
jae,pn
fyl2xp1
adc
cmp
hlt
inc
leave
dec
adc
js
scas
adc
dec
lods
repnz
push
pop
sub
jg
adc
imul
or
jle
xchg
in
addr16
cmc
push
enter
loope
mov
outsl
imul
lret
xchg
sarb
in
shlb
inc
mov
sbb
lea
sbb
jl
jl
pop
pop
mov
add
flds
sarb
inc
mov
pop
xor
notb
xor
mov
cmp
or
stos
daa
imul
nop
sbb
mov
sub
out
xchg
push
in
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
xchg
inc
inc
stos
mov
movlps
xlat
lcall
xor
orl
shrl
stc
adc
hlt
sbb
test
lret
in
jge
or
int
and
push
push
arpl
push
mov
lahf
out
cmpsl
sbb
inc
cmc
pop
mov
test
mov
and
sbb
or
repnz
call
clc
insb
sub
xchg
bound
add
mov
imul
adc
adc
scas
ss
dec
fdivl
add
sbb
fwait
or
sbb
sub
and
mov
jp
cmp
nop
fs
ja
js
mov
insl
fisttpll
in
push
adcl
mov
push
sti
cmp
test
fisubrs
pop
js
cli
mov
cmpsb
loopne
mov
push
pop
popa
ljmp
hlt
push
push
mov
inc
add
lods
lcall
mov
test
inc
adc
fldenv
mov
data16
inc
push
es
and
mov
sbb
inc
push
ss
mov
adc
pop
xchg
mov
out
call
sbb
xchg
push
cmp
test
push
mov
mov
or
inc
pop
jecxz
adc
dec
popf
mov
and
lahf
inc
fbld
pop
xchg
popf
cmpsb
xor
call
mov
cmpsl
xchg
jbe
push
mov
clc
xchg
mov
negb
inc
jge
jno
xchg
aam
sbbb
or
mov
repz
out
das
xchg
jbe
pop
into
pop
adc
je
rcll
pop
mov
pop
cmp
fwait
je
cmp
movb
dec
mov
repz
sub
sbb
mov
lods
push
sub
lret
out
xchg
or
movsb
sahf
aaa
sti
add
push
push
pop
int
int
daa
inc
clc
or
sbb
test
decl
pushl
xor
mov
call
or
jmp
mov
or
mov
push
push
sub
stos
push
adcb
sbb
adc
in
inc
pop
and
dec
pop
cwtl
inc
push
sbb
xchg
ds
cli
mov
xchg
cltd
smsw
loopne
or
inc
cwtl
call
stos
xorl
lret
jns
movsl
xor
add
es
aas
fcoms
andb
mov
fildll
int
xor
fiaddl
pushf
cmpsl
mov
scas
clc
int3
xlat
cltd
push
mov
add
sbb
insb
mov
outsl
mov
mov
sarl
bound
iret
jge
xorb
ret
ds
jb
mov
repz
clc
leave
xor
sub
inc
xor
movsb
mov
fld
mov
test
lret
mov
sarb
popa
lcall
add
jg
cmp
shrb
cmpsb
jne
aam
mov
addr16
mov
jp
mov
sbb
stos
push
mov
pop
jo
add
shll
xor
jle
rcl
mov
jne
mov
sbb
mov
in
cmp
xor
scas
dec
aad
xor
rolb
repnz
dec
pushf
jecxz
pop
pop
dec
int
das
lret
push
out
or
in
insl
inc
mov
shll
ljmp
daa
leave
jb
xchg
pusha
sub
pop
cltd
ret
out
arpl
pop
or
inc
subb
and
add
sub
sbb
xor
cmp
xchg
popf
dec
jo
xchg
sbb
ret
sbb
loope
js
push
popa
dec
hlt
das
dec
xlat
jae
sub
sub
aam
std
je
pop
lds
pop
mov
lret
out
xchg
in
jmp
fs
pop
adcb
push
imul
repz
and
jmp
or
push
and
js
xlat
sub
lret
pop
add
inc
push
xchg
adc
inc
or
sarb
sahf
enter
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
js
insb
insb
or
adc
movlps
leave
or
das
sub
outsl
lret
les
jge
mov
xchg
mov
jmp
aaa
popf
lods
rcrb
lcall
push
inc
in
repnz
sbb
nop
push
xchg
fs
enter
add
sub
xchg
jne,pn
sub
lahf
test
neg
lret
cwtl
jo
movsl
es
aaa
out
add
cli
pop
scas
ficomps
loop
pop
xchg
jmp
hlt
sti
aad
mov
cmp
push
mov
cmp
mov
andb
out
lds
std
dec
int
in
adc
pop
mov
fwait
xchg
xchg
sub
dec
cmp
jo
cli
cld
push
dec
jb
jmp
xchg
pop
mov
repz
lret
pop
jb
xchg
mov
dec
shlb
dec
jnp
mov
push
mov
movsl
push
int
mov
jns
into
mov
je
pusha
js
fs
lods
loope
and
sti
cs
pushf
jb
mov
add
push
mov
adc
jo
out
xor
cmpsl
jp
add
daa
mov
mov
pop
inc
scas
xor
mov
in
dec
xor
xor
mov
push
push
cmp
mov
jno
les
pop
enter
pop
cltd
mov
cmp
mov
test
std
and
or
dec
test
mov
mov
sub
sbb
or
icebp
jl
jo
test
aad
es
out
lods
inc
dec
enter
pop
dec
popa
test
xor
pop
dec
and
aaa
inc
and
mov
cmp
jae
cmp
push
cmp
mov
cmp
ret
and
and
add
sbb
minps
pop
and
and
repz
mov
add
mov
test
inc
add
jecxz
jmp
add
movsb
mov
je
dec
mov
test
int
sub
sahf
mov
mov
or
sub
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
jg
mov
enter
das
test
dec
jb
cld
sub
sar
scas
imul
jns
vsubps
inc
dec
shrl
mov
dec
lods
mov
adc
jg
cwtl
sbb
sbb
add
fistpl
adc
mov
and
mov
adc
std
cmp
je
imul
push
mov
in
add
cli
cmp
fbstp
hlt
into
mov
jmp
cmp
les
repz
inc
push
adc
clc
sbb
idivl
adc
dec
mov
popa
dec
inc
sbb
dec
enter
mov
addr16
and
test
sub
cmp
dec
mov
push
pop
js
popa
test
outsb
lcall
push
jno
xchg
cmp
mov
push
mov
cmp
mov
cwtl
in
add
fnstcw
dec
shlb
pop
pop
fldt
jle
arpl
push
mov
pop
push
xor
mov
adc
scas
je
sbb
jp
in
cmp
inc
pop
jno
mov
rol
or
xchg
xchg
das
fmull
and
jp
xor
imul
jmp
inc
not
es
mov
jmp
adc
add
and
xchg
das
movsw
frstor
add
xor
mov
nop
inc
push
adc
inc
xchg
popa
add
add
lret
mov
jg
mov
mov
test
inc
stos
adc
jmp
insb
jecxz
je
or
adc
clc
int
outsb
pop
gs
ret
or
shr
out
inc
cmp
arpl
push
scas
add
dec
out
jae
dec
int3
push
loop
cmpsl
insl
lods
les
outsl
out
repnz
test
ds
inc
and
repnz
orb
mov
push
mov
jge
mov
ds
rol
outsl
mov
sub
inc
jno
in
imul
mov
pop
mov
lock
push
loopne
sub
mov
cmp
xor
lea
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
inc
scas
insb
jb
adc
adc
mov
xor
iret
popa
jns
xorb
dec
jae
xor
sarl
mov
pop
stos
int
ljmp
mov
mov
das
test
pop
xorl
in
dec
in
daa
stos
cli
lahf
clc
call
mov
lcall
and
push
mov
jecxz
movsl
add
outsl
into
cltd
call
and
pop
mov
add
or
orl
dec
out
gs
push
inc
push
inc
popa
popa
xchg
jae
sub
lods
sub
dec
insb
leave
and
call
jmp
addr16
ret
bnd
sub
sbb
or
xchg
dec
insl
sahf
push
lret
jb
pop
cld
xchg
bound
js
cmpl
xchg
jns
cmc
in
dec
andb
inc
pop
enter
adc
insl
mov
mov
cs
stc
dec
cmp
jbe
xlat
sub
in
fwait
dec
xor
loope
jl
cld
scas
loope
es
repz
mov
add
cmp
test
cs
shlb
iret
dec
imul
outsb
mov
das
sbbl
int3
lods
icebp
lret
pop
pop
mov
cmp
inc
adc
xor
pop
ret
fadds
test
xorb
dec
call
mov
mov
out
cmpl
popf
int
mov
outsl
pusha
pop
mov
push
jmp
xchg
add
imul
ss
in
loop
lods
push
inc
incb
push
fists
arpl
and
aas
xchg
stc
mov
xor
cmc
inc
sub
fdivrl
movsl
icebp
xor
fwait
mov
cli
je
repz
pop
mov
scas
sub
adc
and
push
adc
mov
mov
mov
add
mov
insl
call
arpl
push
cmpb
out
lds
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
aas
sbb
adc
movlps
stos
push
mov
js
xchg
adc
jmp
push
dec
adc
mov
popa
std
lahf
sub
jae
jae
in
mov
push
pop
gs
xor
movsb
pop
test
ja
das
pop
cmp
loopne
push
pushf
cld
mov
mov
popa
rclb
call
pop
sarl
xchg
repz
test
into
repz
push
adc
sub
shlb
mov
pop
leave
lahf
push
cmp
jnp
and
dec
and
jnp
inc
inc
stos
add
repnz
xchg
das
pop
xchg
push
add
sbb
mov
imul
xor
rcrl
xchg
gs
jo
leave
fs
scas
push
in
mov
mov
add
aam
jmp
pop
sti
lods
int
jg
mov
jmp
mov
push
int3
push
lock
push
mov
cli
ja
lods
fimuls
insb
out
mov
push
mov
pop
jge
mov
xor
dec
inc
jge
popl
idivl
add
out
imul
shr
ffreep
lock
xchg
cld
enter
jg
lret
jge
lods
enter
aad
inc
jmp
in
push
inc
ftst
mov
lds
shll
imul
loope
fwait
mov
inc
push
mov
mov
sbb
sarl
sub
xorb
and
push
jge
subl
fsubrs
pop
outsl
jg
clc
sub
addr16
mov
cmovge
mov
aam
fsubl
xchg
sub
xor
fsubp
sbb
sbb
clc
mov
dec
lahf
out
adc
sub
mov
cmpb
adcl
sbb
jbe
movsb
add
xor
pop
and
les
ljmp
jmp
xchg
mov
jg
mov
lahf
nop
ret
outsl
ficoms
add
pop
jmp
cmpsl
mov
inc
fwait
bound
fmuls
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
cmp
adc
adc
add
ljmp
test
and
pop
adc
fwait
cmp
stos
push
scas
popa
fdiv
cmp
bound
xchg
or
sbb
jecxz
sbb
dec
mov
mov
xor
inc
std
std
dec
add
cmp
lcall
inc
pop
imul
fisttpl
mov
divb
lcall
cmp
lret
cmp
outsl
mov
cmp
lods
in
std
mov
add
jg
add
divl
shlb
test
rcll
out
jge
out
add
rcrl
enter
fimull
mov
jb
adcb
out
and
out
outsb
sahf
sub
decl
jecxz
mov
push
cmp
test
loop
adc
mov
insb
stos
mov
je
dec
xor
bound
out
loop
push
sbb
popf
movsl
xchg
push
push
jle
adc
out
in
push
js
jp
rcll
jnp
ja
cltd
xor
gs
pop
ljmp
inc
adc
mov
cld
in
jecxz
push
jecxz
sbb
or
dec
or
lds
ja
leave
add
out
mov
outsl
mov
mov
mov
and
insb
xchg
lret
mov
outsl
jmp
inc
mov
push
sbb
and
push
lods
ljmp
or
stos
dec
inc
pusha
and
iret
sub
shlb
es
pushf
loope
cmp
jae
leave
loop
loop
insl
xchg
insb
scas
insl
mov
and
jne
ds
cmp
push
xor
int3
ds
mov
flds
add
ret
mov
pusha
cmp
jg
dec
lock
dec
aaa
cmpsl
stos
jecxz
jge
ret
jge
mov
push
jo
jl
mov
sbb
sbb
add
pop
jge
or
scas
inc
push
call
and
pop
popf
int3
scas
loope
int
sti
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
xchg
js
fs
adc
shll
filds
cmp
and
cld
push
mov
in
sbb
sbb
notw
dec
pop
lock
test
shll
mull
insl
rorb
pusha
andb
ljmp
sub
jl
cmpsb
adc
pop
jb,pt
xor
xchg
out
xchg
lock
popa
insl
mov
mov
mov
cltd
cwtl
dec
pop
dec
sahf
or
mov
test
xor
scas
pop
cmpsb
mov
add
scas
in
bts
addb
xchg
in
fsts
mov
xchg
loop
in
mov
ret
mov
inc
cs
ja
mov
jmp
xor
push
push
out
cmpsb
add
xlat
lock
or
dec
inc
ljmp
or
xchg
adc
mov
in
cmp
aam
and
xlat
lods
add
ret
in
aad
sbb
aad
dec
xchg
cwtl
xchg
mov
push
shrl
push
shrl
push
mov
lock
nop
icebp
aad
in
out
sbb
mov
lods
dec
je
fcmovbe
mov
pushf
hlt
into
sarb
inc
push
fildl
cs
lcall
dec
mov
mov
popf
push
and
lea
negl
out
dec
or
push
add
pop
and
add
insl
addl
mov
inc
aad
das
jp
leave
out
aad
outsl
adc
cmp
test
and
stc
data16
ret
cld
inc
xor
xlat
mov
dec
test
pop
arpl
out
push
repz
pop
sub
int3
bnd
jmp
nop
cmp
adc
fcoms
out
aas
lcall
in
dec
mov
test
lret
addr16
jge
lock
lahf
jmp
sbb
mov
pop
xchg
and
xor
xchg
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
cld
lock
int
int
stos
ret
lock
out
inc
sub
push
into
lock
lret
sub
sbb
mov
das
or
mov
fs
cmp
jne
sbb
cld
dec
repnz
popf
into
push
cmp
out
mov
adc
xor
aad
adc
add
ficoml
or
dec
and
or
or
out
xchg
cmpb
xor
add
and
shrl
jnp
bound
out
jb
or
add
mov
lret
jecxz
sub
fwait
arpl
inc
iret
dec
cmpsb
test
push
push
jne
xor
sub
cmpsl
sub
jg
sbbl
sbb
leave
xchg
xchg
ja
test
mov
das
push
gs
cwtl
cmp
inc
outsb
sub
ss
adc
and
or
clc
dec
js
jno
and
xchg
push
ret
leave
das
repnz
dec
roll
data16
out
leave
mov
cmp
iret
xor
push
outsl
sub
rclb
fs
push
jne
in
aaa
stc
aas
xchg
mov
xchg
mov
enter
clc
test
sbb
je
stos
shlb
cmp
ja
mov
rcr
mov
sti
das
push
xchg
xor
clc
jmp
add
mov
push
sar
aam
mov
nop
pop
push
sub
pop
mov
pop
sub
gs
or
pop
aaa
mov
subb
int
adc
pop
cwtl
outsl
adc
sbb
stos
enter
xchg
mov
mov
loopne
es
mov
jp
ffree
mov
push
cwtl
xchg
inc
iret
pop
outsl
xchg
add
dec
shr
sbb
jbe
mov
pushf
pusha
xchg
rclb
and
call
xor
out
pop
push
icebp
pop
cmp
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
add
js
pop
adc
adc
popa
mov
imul
xchg
dec
mov
or
xlat
mov
outsb
dec
es
jmp
cmp
or
cmpsb
cmp
mov
push
and
idivl
cmpl
movsb
cmp
lret
mov
rorb
into
pushf
pushf
loope
mov
movsl
mov
outsb
mov
fstpt
fisubrs
mov
std
sub
adc
sbb
inc
xor
stc
je
push
xchg
or
pop
xor
into
pop
xor
das
aaa
or
mov
loopne
sub
sbb
and
pop
pop
sbb
es
sbb
pusha
ss
bound
pop
shr
lock
das
enter
mov
shll
jbe
fmul
pop
cmp
rclb
icebp
das
or
and
fisubs
jns
cld
jnp
imul
scas
or
jne
cwtl
test
pop
fidivs
cwtl
or
jecxz
dec
xchg
inc
inc
jg
dec
scas
and
les
stos
aas
adc
ficomps
movsl
daa
xor
rcr
xor
adc
pop
adc
lret
shl
aad
insl
inc
shll
adc
and
jb
xchg
push
mov
int
shr
mov
mov
dec
cwtl
sub
jbe
adc
sbb
fwait
shlb
dec
div
and
icebp
pop
mov
or
xchg
ret
xchg
test
xor
aam
cli
adc
inc
test
mov
lds
mov
arpl
mov
popf
mov
pop
std
insb
push
cld
daa
jle
xor
mov
inc
aam
inc
xchg
fdivrp
insb
xchg
lret
out
mov
out
fnstcw
inc
lcall
into
rcll
cltd
push
popf
out
in
inc
rcll
repz
inc
data16
jg
clc
shll
subl
scas
fucom
movsl
dec
xchg
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
add
pop
adc
adc
sub
pop
jnp
addr16
xor
adc
mov
ret
cwtl
fcomp
sub
and
push
inc
push
mov
mov
and
mov
or
dec
add
inc
ret
push
nop
jl
sbbb
xor
lahf
js
jmp
push
outsl
loopne
dec
mov
push
or
and
andl
out
cwtl
lods
jo
ss
sub
into
iret
xchg
shrb
mov
add
pop
xchg
fistpl
lods
mov
inc
aas
lods
arpl
cmc
push
jnp
sub
in
xlat
ret
or
pop
jnp
es
xchg
mov
xchg
or
and
scas
repnz
in
xlat
sbb
rorb
aam
mov
jb
lea
std
mov
mov
in
push
mov
ret
cltd
mov
mov
ss
test
mov
icebp
mov
add
push
add
cmp
ret
shl
push
mov
lods
pop
pop
mov
lds
lock
pop
popf
fs
addr16
pop
xor
arpl
popa
sarb
insl
mov
cmp
fwait
xor
cmpl
sbb
testl
loop
mov
xchg
push
pop
cmpsb
push
je
aas
adc
mov
or
mov
xor
add
push
in
sub
add
int3
cmp
movsb
add
sub
add
divb
sbb
cmovg
jns
adc
and
jl
idivl
jmp
xchg
cmp
pop
pop
cwtl
dec
out
movsb
sub
jnp
add
out
fsubl
jmp
inc
std
lods
neg
lret
jl
nop
mov
xchg
jae
insl
data16
andb
test
nop
and
mov
jecxz
sahf
cmc
or
push
mov
je
xchg
ss
adc
in
cmp
imul
movsb
sub
ljmp
icebp
mov
fmuls
mov
gs
jno
fwait
test
xlat
insb
pop
clc
cmp
push
inc
loopne
fxch
and
pusha
idivb
mov
mov
jo
repnz
cli
push
test
dec
pop
dec
push
out
fwait
or
dec
les
pop
adc
xorb
jae
fmuls
in
ds
push
fistl
sbb
dec
leave
in
push
cs
rcr
or
aaa
add
inc
or
jge
sub
clc
test
js
sub
xchg
add
adc
inc
adc
mov
mov
div
push
sub
jle
pop
mov
xorb
mov
push
jge
loop
sbb
push
subl
dec
jo
xchg
jnp
loop
pushf
cbtw
adc
mov
xchg
push
sbb
xchg
mov
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
insb
push
adc
adc
cmc
shlb
movsb
leave
xchg
push
lods
adc
add
sbb
daa
dec
loope
lods
jnp
jle
movsl
enter
arpl
xor
mov
sbb
loopne
xor
dec
in
and
cmp
stos
sub
jnp
mov
out
cmp
int
mov
test
sti
jp
paddsb
repnz
popf
cltd
push
jmp
mov
imul
xor
mov
out
push
in
pop
sub
ret
xlat
push
or
sahf
popf
mov
pop
adc
lret
sbb
add
xchg
push
inc
fwait
dec
lret
mov
lahf
repz
subl
pop
or
push
rolb
sub
inc
cmp
dec
in
push
or
in
inc
xchg
in
adc
or
xor
xchg
movsl
adc
test
insb
sbb
movb
sbb
fnstsw
add
inc
clc
pop
fsubrl
mov
mov
push
jns
inc
dec
gs
jecxz
insb
mov
sub
popa
addl
pop
inc
or
jle
push
jp
sub
orb
call
sbb
cld
pop
sbb
subb
cmpsl
mov
mov
out
push
popf
mov
mov
jbe
pop
push
mov
dec
cmp
cmp
in
enter
inc
movsb
lret
and
in
mov
mov
inc
or
bound
inc
sub
sbb
dec
enter
xchg
inc
aaa
push
or
jne
mov
push
cmc
or
jbe
mov
iret
ret
je
lods
pop
xor
push
or
mov
fmulp
jnp
pop
imul
jbe
fdivr
das
adc
sub
adc
iret
add
cmp
sbb
xchg
mov
adc
fwait
pop
outsb
adc
fdiv
sahf
mov
std
mov
pop
sti
pop
cmpsl
sub
sub
shrl
std
movsb
ljmp
jae
imull
xor
push
jle
cli
push
mov
or
daa
daa
xchg
dec
dec
sub
mov
test
mov
test
popf
cmp
jb
cmp
sub
cmp
ja
push
rcll
and
push
das
sahf
cli
xlat
jb
aas
je
mov
or
lcall
pop
ja
push
stos
scas
mov
incl
lock
mov
push
xor
lcall
adc
insl
jg
comiss
rcll
inc
das
dec
fsubl
nop
out
fistpll
inc
sub
addl
icebp
js
sbb
jl
outsl
push
mov
clc
hlt
lock
mov
inc
adc
jecxz
out
add
repz
mov
lcall
sub
jo
aad
xor
and
cld
ret
inc
nop
dec
push
arpl
pusha
ja
add
dec
pop
cld
clc
mov
aad
push
std
out
popf
inc
sbb
adc
push
xchg
es
adc
xor
dec
jae
clc
rcrb
adc
mov
lea
jae
push
and
jb
repz
imul
jg
cmp
cltd
mov
fisubl
mov
fs
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
