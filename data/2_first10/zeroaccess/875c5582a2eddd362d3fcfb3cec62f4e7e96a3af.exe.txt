push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
je
addl
xor
movl
jmp
subl
movl
sub
mov
adc
mov
sub
mov
xor
or
adc
mov
mov
sbb
mov
movl
add
lea
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
xorl
mov
or
mov
xor
mov
add
mov
movl
mov
cmp
movl
jne
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
and
mov
sbb
mov
inc
xor
movzwl
or
add
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
not
add
xor
mov
xorl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
mov
mov
or
mov
mov
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
movl
mov
xor
orl
add
movl
jmp
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
xor
lea
push
mov
orl
xor
addl
lea
orl
push
adc
mov
pushl
sbbl
call
xor
mov
mov
xor
lea
mov
not
mov
sbbl
xor
xor
subl
add
mov
xor
movl
lea
mov
cmp
movl
jbe
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
dec
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
andl
sub
xorl
xor
mov
movzbl
mov
cmp
movl
jne
lea
mov
orl
lea
addl
mov
mov
test
movl
je
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
addl
mov
mov
mov
movzbl
and
mov
notl
mov
cltd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
add
mov
sbb
add
adc
mov
adc
andl
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
xor
add
and
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
subl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
movl
mov
xor
push
adc
mov
sbbl
xor
and
mov
push
movl
mov
subl
add
cmp
movl
je
mov
mov
sbb
mov
xor
xor
xorl
add
xorl
add
adc
notl
xor
addl
mov
inc
push
add
xor
xor
mov
add
adc
movl
xor
xor
movl
cmp
movl
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
add
mov
movsbl
add
mov
sbbl
sub
mov
xorl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
adcl
push
push
lea
push
addl
lea
push
xorl
call
subl
push
push
sbbl
push
subl
call
xor
movl
movl
mov
mov
xor
mov
adc
mov
add
decl
mov
mov
adcl
test
je
mov
mov
mov
xor
xor
and
mov
mov
xor
adc
add
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
add
sub
mov
mov
xor
add
dec
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
call
cmpl
jb
and
mov
xor
adcl
add
xorl
mov
xorl
sub
lea
adcl
xor
xor
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
and
mov
mov
xor
movl
add
cmp
movl
jne
pushl
negl
call
movzbl
xor
mov
sbb
mov
mov
sbbl
xor
add
movl
jmp
dec
je
dec
stos
cmp
adc
jp
jp
xor
jp
sub
cmp
popa
xor
data16
bound
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
push
rclb
jbe
mov
addl
jbe
cmp
faddp
mov
and
shrb
mov
mov
arpl
adc
andb
push
adc
push
bound
fs
add
mov
std
or
mov
sbb
testl
in
mov
mov
outsl
pop
inc
stos
inc
xchg
aas
pop
mov
xor
xchg
addl
filds
leave
ljmp
movsb
pop
jl
push
ds
fwait
add
pushl
pop
ret
test
ljmp
ja
mov
call
mov
sbb
dec
mov
andb
paddq
mov
pop
adc
sahf
inc
lret
push
jne
and
ss
outsl
popf
shl
sahf
aas
into
into
sbb
pop
xor
and
loope
pop
dec
xchg
push
shl
movsb
scas
fs
outsb
xlat
lahf
xchg
xor
add
sbb
adc
cltd
jmp
loope
fstpt
into
mov
out
inc
enter
xchg
xor
andb
mov
push
arpl
sub
cmc
jge
or
rorl
xlat
push
rorb
cmovle
cmp
xlat
movsl
out
add
mov
pop
mov
in
pop
pop
loop
into
jp
cltd
and
and
loop
ss
loopne
xchg
popf
ret
cmpsb
xchg
cmpsl
cmp
mov
outsb
xchg
clc
fildl
icebp
call
enter
jg
mov
lods
jmp
sarb
adc
scas
pop
mov
scas
orl
rcrb
dec
mov
aas
repz
iret
fidivrl
movsb
inc
push
mov
and
cmp
push
cwtl
push
mov
cmp
pop
leave
mov
mov
jns
and
imul
jg
int
pop
out
add
outsl
out
adc
mov
mov
inc
test
loopne
adc
or
xchg
ljmp
xchg
pop
inc
jle
xchg
or
lock
dec
inc
xchg
rcrl
leave
add
push
mov
int3
or
push
push
arpl
pop
in
mov
pop
dec
aaa
mov
push
sbb
loop
jmp
ds
mov
scas
add
mov
shll
int
lock
leave
mov
xlat
out
clc
mov
nop
out
sbb
das
jl
popa
adc
rcr
sbb
adc
emms
imul
and
mov
addl
data16
mov
cmp
jbe
aas
repz
adc
mov
ret
push
loop
mov
rol
daa
mov
addl
ljmp
fwait
or
lahf
into
data16
cmp
sbb
fldenv
fxam
enter
stos
clc
dec
ret
inc
add
test
jle
lods
cltd
das
dec
subl
cmpsl
out
into
mov
pop
aam
sbb
push
aas
insl
jo
loop
dec
adc
xchg
loope
cmp
insb
pop
sbb
dec
lea
imul
mov
mov
stc
adc
and
mov
pushf
xchg
test
add
les
add
add
das
nop
pop
negb
jns
adc
fiaddl
inc
and
push
mov
add
daa
sub
mov
repnz
mov
xlat
inc
movsl
and
imul
shrb
mov
ficompl
pop
fs
popf
lds
adc
loope
rorb
mov
mov
dec
arpl
lret
push
mov
test
push
cmp
dec
adc
mov
sub
syscall
arpl
xor
sub
mov
lret
mov
adc
mov
rclb
scas
orl
scas
ret
cmp
int
test
movsb
out
sahf
mov
xchg
mov
out
in
stos
rorb
cmp
mov
cmp
imul
std
adc
lock
in
push
push
sahf
mov
pushf
push
inc
cld
push
push
mov
pop
inc
arpl
push
xchg
lods
inc
imul
xor
mov
push
inc
xchg
les
mov
jae
outsl
popf
push
in
adcl
jae
or
cmp
ficompl
and
mov
add
fs
dec
dec
xchg
cmpsb
ss
cmp
popa
mov
push
jge
adc
mov
xchg
xchg
lahf
int
xchg
sbb
inc
push
pop
testl
hlt
mov
push
pop
fwait
cld
mov
aas
pop
mov
jl
dec
rorl
lock
mov
arpl
xchg
test
add
lcall
mov
filds
fidivrl
iret
mov
aaa
fsubs
adc
insb
aam
mov
push
push
scas
mov
sarl
mov
inc
mov
arpl
scas
andl
aam
outsl
sbb
fisubs
stc
mov
faddl
adc
bound
shll
lds
lods
adc
loopne
mov
dec
mov
push
inc
dec
dec
sbb
mov
jge
fisubrs
fwait
test
repnz
mov
xor
fsubp
and
lcall
add
mov
and
lods
sub
push
sbb
outsb
jecxz
mov
sbb
in
sub
repz
or
repz
adc
jns
cwtl
popa
add
ds
dec
cwtd
popf
sub
addb
mov
push
in
dec
dec
cmp
sti
mov
or
outsl
jecxz
mov
mov
or
dec
pushf
adcl
pop
sub
cmp
inc
xchg
xor
dec
movsb
cmp
gs
cmpsb
mov
pop
xchg
add
jb
cwtl
push
mov
repnz
xor
adc
push
jo
inc
pop
and
inc
cmp
dec
jl
sahf
xor
or
subl
pop
push
xchg
jecxz
add
jge
fstpt
test
dec
ljmp
add
rolb
pusha
loopne
dec
cli
and
pop
xor
sub
push
add
jmp
lret
aad
cli
lock
xor
jmp
int3
push
jl
and
pop
dec
or
dec
xchg
pushl
sub
repnz
pop
dec
sub
mov
dec
pop
out
pop
mov
adc
adc
inc
mov
scas
mov
push
push
fs
aas
out
mov
xor
mov
sub
out
lock
push
pop
ret
hlt
int
adc
and
incb
cmc
arpl
adc
mov
cld
xchg
jae
out
cltd
xacquire
sti
mov
test
daa
addr16
adc
cmc
xchg
int3
decb
jp
sub
mov
xchg
xchg
lods
cmc
jge
cmp
cmp
fisttps
ja
or
pop
sahf
and
push
dec
stos
les
cmpsb
jecxz
jne
pop
sbb
xor
cs
xchg
dec
in
stc
js
adc
adc
ja
or
cmpsl
pop
dec
lret
dec
enter
loope
das
cs
push
jae
cld
and
sbb
ffreep
dec
ret
add
jbe
mov
arpl
aam
mov
test
jb
xchg
xorb
mov
xchg
inc
pop
mov
mov
movsb
jl
and
ret
adc
pop
xor
push
push
popf
pop
push
mov
and
sub
pop
jns
jbe
dec
lds
fbld
in
bound
cltd
jbe
std
cmp
andb
add
mov
sub
add
pop
cwtl
test
aaa
nop
repnz
icebp
outsl
stc
int
pop
xor
imul
jg
pop
or
cmp
gs
xchg
movsl
les
or
fnsave
in
sub
or
jecxz
jl
pop
push
ret
bound
daa
shlb
pop
out
stos
mov
xchg
cld
sbb
scas
insb
mov
data16
mov
lret
mov
jns
push
add
aaa
test
roll
daa
add
push
mov
jne
out
aaa
add
xor
add
es
dec
es
test
les
cmp
das
dec
add
sub
ficoml
pop
pushf
sahf
rorb
xor
push
sbb
mov
mov
mov
sti
xchg
jns
imul
out
sbb
lret
and
jmp
lock
xor
jp
frstor
cmpl
xchg
lea
in
jae
popa
mov
je
mov
mov
ficoml
arpl
mov
cld
add
mov
mov
test
push
or
lret
cmpl
cwtl
cli
pop
fnstcw
inc
sbb
jno
and
aam
ja
sbb
add
and
hlt
stos
cmpsl
clc
or
icebp
pop
mov
in
cmp
pop
sbb
jae
pop
pop
rclb
mov
je,pn
in
stos
and
loop
jne
imul
mov
in
mov
xor
ds
pusha
hlt
sbb
aaa
out
mov
arpl
rcrl
fbld
mov
xchg
xor
mov
mov
jns
mov
aam
sub
inc
shl
rorb
xchg
xor
cmpsl
lcall
mov
cmp
subb
jg
in
adc
dec
sbb
in
mov
cs
nop
cld
aas
ja
je
xchg
jl
pop
mov
mov
fldl
stos
and
sbb
scas
js
lods
mov
xchg
jge
pop
xor
ljmp
scas
or
out
clc
fst
adc
out
sarb
test
pop
ja
icebp
mov
jbe
ret
sub
fidivrs
stos
mov
and
and
adc
leave
sub
data16
inc
aas
insb
or
cmp
mov
scas
shrb
mov
stos
push
fcompl
xchg
push
ljmp
or
push
iret
lcall
cmpb
das
lret
inc
jae
lds
lods
repnz
mov
negb
dec
in
mov
loop
push
mov
xorl
fnstcw
jle
jl
jnp
adc
je
push
aad
imull
and
inc
jno
je
ret
or
test
mov
inc
ljmp
ss
lahf
or
pop
fs
daa
xor
sub
in
ret
fisttps
stos
xchg
pop
les
jmp
repz
or
cli
mov
xchg
loope
pop
jmp
jl
jmp
xchg
inc
sub
xchg
pop
movsl
lahf
icebp
mov
sarl
jg
mov
fstp
in
movsl
or
mov
ds
cmpsb
mov
pop
xchg
cld
enter
add
add
push
pop
fistpll
add
stos
pusha
std
pusha
js
xchg
aam
repz
inc
mov
mov
out
cmpsl
sub
xabort
and
ljmp
scas
mov
cmp
jge
pop
xchg
cmp
fs
sbb
and
lcall
scas
stos
lahf
ret
cmp
stc
aam
jmp
adc
and
into
mov
add
pop
mov
jno
int3
xchg
sbb
xor
dec
scas
loop
pop
mov
hlt
jle
jp
in
or
test
add
mov
adc
sbb
fdivrs
sub
popf
and
pop
movsl
mov
mov
pop
xor
hlt
mov
adc
ja
lods
outsl
clc
in
subl
jle
arpl
mov
mov
mov
cmpsb
fsubrs
addl
jbe
jne
push
aas
sbb
aad
test
add
mov
int3
inc
cs
lods
in
int
mull
jecxz
sbb
mov
mov
shl
adc
fsubs
dec
fldt
mov
aaa
sti
xchg
rcl
jl
push
cwtl
lret
popw
pop
leave
cmpsl
sbb
sub
lock
outsl
test
pop
jbe
js
xchg
mov
cmpsb
inc
cwtl
test
push
push
popf
adc
inc
imul
adc
lock
pop
cmp
jge
cmp
popl
hlt
cmpsl
repz
inc
cwtl
sbb
mov
cmpsb
dec
jno
jne
cmp
fcomps
lods
dec
in
arpl
fisubs
pop
lret
pop
jbe
or
nop
adc
push
or
lock
mov
test
jmp
repnz
rcrl
sub
loop
loope
bnd
pop
mov
sub
dec
enter
out
ss
and
cmpsb
das
add
jo
popa
push
dec
int
icebp
xor
adc
mov
clc
sub
gs
mov
imul
std
sub
xchg
sahf
out
cltd
sarb
ja
lcall
ss
xchg
cmp
stos
aam
jne
out
or
lcall
sbb
jno
pop
mov
and
stos
imul
enter
mov
push
ret
xor
call
push
mov
lds
inc
popf
lock
pop
push
mov
mov
shr
push
jo
sub
imul
mov
fs
inc
jecxz
mov
scas
mull
and
jne
inc
push
xor
adc
aad
stos
movsl
leave
dec
and
shlb
push
add
fldenv
outsl
sbb
pop
out
sbbb
stos
ret
add
sub
out
dec
or
pop
out
and
sti
notl
add
es
out
xchg
xchg
fists
shll
sub
jne
test
push
pop
mov
aad
inc
lahf
clc
data16
cmpsb
push
in
mov
and
clc
scas
pop
adc
loop
mov
scas
sub
jp
or
push
mov
lcall
notl
aad
scas
fldt
mov
add
pop
inc
xchg
movsb
addl
lods
adc
ja
sub
cwtl
and
mov
and
fisttpl
nop
jb
mov
lcall
pop
gs
pop
mov
cmpsl
push
xchg
fisubrs
shrl
cmc
shrl
xchg
decb
lahf
sti
xchg
lahf
dec
jbe
test
sahf
or
sub
mov
jnp
movsl
adc
insl
mov
iret
pop
orl
dec
mov
cmpl
mov
insb
xchg
xor
pushf
ljmp
scas
cmpsl
pop
xchg
negl
cmp
dec
dec
sahf
pusha
ss
movsb
sahf
aam
out
xchg
push
mov
push
sub
xchg
sub
lds
mov
xlat
stos
dec
push
cmp
adc
call
js
or
dec
push
shll
and
xchg
pop
lcall
scas
jno
add
stc
lea
push
mov
icebp
xchg
iret
mov
test
test
fwait
xchg
inc
lds
clc
inc
fmuls
outsb
je
test
arpl
mov
push
adc
cmp
xor
mov
roll
jae
in
cmp
mov
push
mov
addb
std
cmp
mov
jg
jp
dec
in
lret
mov
pop
or
cmp
mov
mov
negb
jmp
push
pop
sbb
mov
dec
scas
xchg
push
imul
cltd
lock
gs
jns
and
leave
sub
inc
push
adc
pushf
mov
mov
adc
call
insl
in
mov
and
lret
mov
loop
std
ja
jo
cmpsb
mov
faddp
lahf
pusha
fcmovb
loope
and
dec
mov
loope
movsb
fsts
daa
jmp
dec
mov
cmp
std
or
cltd
sti
popf
add
adc
jnp
mov
cmp
or
dec
xor
jo
cmp
ficoms
repnz
insb
sbb
insl
or
movsl
inc
call
push
aam
lcall
cmp
fs
and
fldenv
stc
jge
adc
jmp
jne
movsb
push
test
mov
cwtl
ds
test
and
adc
mov
push
jnp
je
xlat
scas
sbb
ror
adc
sahf
cs
adc
andl
mov
add
jno
inc
and
cmc
push
jecxz
sub
fbld
jo
call
data16
sbb
loopne
mov
loopne
mov
dec
jae
jp
push
mov
clc
aad
jl
ror
shlb
pop
cmpsb
fcmovb
das
lcall
mov
lret
sbb
mov
out
push
mov
shr
pop
jle
pop
cli
mov
cmp
enter
stc
and
xchg
bound
sarb
fstps
clc
pusha
lahf
int
pusha
pop
push
jge
scas
cli
push
pusha
mov
fiadds
out
rolb
std
xchg
push
sahf
fildll
fwait
push
negb
add
jg
int
pop
test
gs
cmp
data16
test
test
pusha
fwait
xchg
lret
mov
adc
push
fistpl
mov
pop
or
and
daa
mov
dec
cmp
clc
outsl
inc
mov
inc
roll
jne
and
xor
lock
aaa
shl
call
cmp
xor
jmp
push
fdivr
les
daa
mov
add
testb
mov
mov
adc
xchg
out
cmp
out
popf
ja
aaa
xchg
xchg
scas
xchg
mov
sbb
inc
shll
ret
push
adc
rorb
ret
lods
mov
xchg
fucom
xor
dec
adc
lods
sbb
push
adc
sub
insb
push
ffree
outsl
inc
or
lret
dec
xchg
mov
sbb
fsubrl
xor
jmp
mov
push
push
jbe
inc
mov
mov
jns
call
cmpsb
push
and
adc
stos
xor
sub
sub
leave
jb
mov
stc
pop
jnp
ud0
inc
sbb
mov
cmp
and
adc
cmp
xchg
sub
sbb
imul
xor
xchg
imul
xchg
lods
lock
xor
mov
ret
lods
dec
sti
push
inc
movsl
std
pushf
ret
xchg
mov
jbe
xor
pop
je
jnp
sub
sub
mov
push
pop
punpckhwd
vpcmpeqb
mov
aas
xor
mov
dec
mov
clc
and
dec
inc
ja
fwait
imul
xchg
inc
mov
pop
in
lret
add
mov
sar
ficompl
mov
cmp
jns
xor
push
insb
sbb
sub
jnp
fdivs
cwtl
xchg
ror
ret
add
jmp
push
shll
int3
mov
pushl
ret
sarl
push
cld
ret
rorl
imulb
xor
push
pop
sub
cwtl
in
lret
gs
xor
jbe
xchg
clc
fdivl
mov
mov
cmpxchg
fmuls
fnstsw
fxch
int3
jbe
enter
rcl
or
pop
sarl
test
push
shll
mov
cmc
or
int
add
js
add
sbb
jno
add
push
jge
loopne
inc
std
mov
fistpl
fbld
pop
push
enter
mov
aas
int3
and
hlt
negl
push
shlb
inc
popa
clc
shr
push
mov
lods
push
popa
mov
jbe
xchg
xor
jnp
popf
jge
dec
xor
fidivs
mov
mov
sbbl
mov
pop
mov
andb
cmp
add
push
mov
insl
push
cwtl
stc
mov
pop
cmp
pusha
sbb
adc
mov
push
jno
sub
sub
lcall
cli
sbb
aaa
cld
test
sbbl
pop
inc
imul
les
jmp
mov
les
mov
add
loope
xor
stos
push
stc
sub
lods
mov
and
out
cmp
mov
ds
jle
jb
sub
enter
movsb
in
leave
jecxz
ret
leave
or
sbb
fnstsw
jns
adc
ret
fstl
jge
out
sbb
cld
popa
stos
cmp
inc
fnstenv
loop
sti
xchg
in
jne
jnp
addb
lods
repnz
pushl
es
push
inc
loope
inc
ret
shl
dec
loope
sub
rclb
mov
dec
dec
mov
pushw
jmp
push
popf
mov
ljmp
imul
mov
pop
cmovbe
bound
inc
pushf
mov
inc
inc
and
adc
mov
ret
mov
stos
sbb
imul
jg
cmp
pop
ja
fbstp
movswl
or
ja
test
xor
sub
ss
sub
cld
fdivrl
rolb
test
or
shl
ds
inc
cld
inc
mov
add
xchg
pusha
cs
movsl
mov
je
xchg
dec
testb
sub
jecxz
cld
ljmp
push
xchg
xchg
xor
lcall
and
lahf
or
cmp
push
sub
xor
lea
mov
add
or
faddp
sbb
xor
inc
dec
add
xlat
in
and
xor
xchg
adc
pop
out
addl
movsl
cli
xchg
mov
mov
mov
pusha
cmp
or
aaa
loop
mov
jecxz
sbb
sub
dec
in
pushf
testb
mov
dec
repnz
les
adc
jnp
fsubr
pop
mov
jge
cmpsb
or
mov
insl
dec
xor
and
mov
js
repz
mov
xchg
xchg
push
mov
sbb
mov
cmp
pop
scas
int3
jp
jbe
push
icebp
mov
loopne
call
shl
gs
jbe
fs
jnp
fwait
mov
pop
dec
pushf
inc
mov
adcb
insb
fidivrs
cmp
dec
jmp
jo
lcall
push
ds
and
rclb
jmp
mov
adc
sbb
jecxz
push
pop
ret
adc
pop
int3
xsaves
cli
imulb
push
push
push
push
add
jp
mov
mov
fs
dec
cltd
or
arpl
iret
jl
jmp
out
xchg
negl
inc
test
sub
aaa
iret
aaa
xchg
pop
leave
aam
or
cltd
ss
xchg
add
push
or
inc
mov
ret
fildll
popf
fsubrl
or
inc
xor
push
mov
jbe
mov
xchg
xchg
jbe
mov
xor
ja
and
into
jl
push
sub
arpl
sub
jbe
outsl
pushf
xor
mov
cmpsl
into
mov
add
jg
mov
sahf
xor
push
xchg
sbb
cld
and
xor
or
pop
push
inc
pop
shll
movsl
mov
into
loop
mov
push
repz
jns
pop
pop
inc
stos
mov
add
dec
iret
inc
inc
mov
sub
ss
and
xchg
pop
in
hlt
pop
sarl
rcr
mov
idiv
sbbb
mov
jbe
je
in
lods
xchg
xchg
cmpsl
jmp
xchg
jmp
push
pop
stos
sub
std
ja
hlt
mov
jp
mov
mov
or
push
mov
xchg
add
or
sbb
mov
push
out
les
das
mov
push
jno
lock
mov
or
jae
mov
testl
adc
clc
mov
mov
cmp
stos
pop
mov
outsb
pop
push
hlt
xor
and
mov
stos
or
movsb
mov
push
xor
rol
adc
test
sbb
adc
int
lcall
and
push
bound
das
sbb
inc
invd
jl
aaa
mov
adc
mov
mov
aaa
add
aaa
imul
xchg
pushf
pop
xchg
cli
push
adc
test
scas
ljmp
mov
cwtl
mov
out
jae
mov
mov
ret
call
fs
mov
int3
negb
and
fstpt
pop
add
stc
xor
and
outsl
test
mov
push
les
mov
sbb
and
pop
cwtl
dec
mov
test
stos
cmpb
sti
adc
cmp
jo
mov
sub
push
mov
pusha
lret
sbb
push
cmp
sbb
pop
inc
repz
push
mov
sub
bound
xlat
fistl
push
insl
pusha
movl
dec
aaa
sahf
dec
incl
leave
inc
pop
negb
fwait
mov
into
faddl
divl
cmp
mov
inc
bound
in
or
hlt
cmp
frstor
cld
xor
jnp
xor
lret
movsl
mov
popf
cmp
ljmp
or
out
inc
mov
std
mov
ficoms
imulb
pop
mov
popa
insb
pop
or
in
lods
mov
fs
push
shl
imul
mov
fs
lds
dec
cs
std
adc
push
adc
fisttpl
arpl
jle
scas
mov
xor
sub
repnz
xchg
xchg
into
cwtl
das
clc
mov
rcll
roll
xchg
push
jae
xlat
in
loope
in
mov
mov
test
hlt
xorb
or
xchg
sbb
lods
call
sbb
and
clc
jecxz
push
jge
mov
clc
es
jne
xchg
mov
dec
jl
and
sti
pop
jl
add
les
xor
sbb
fidivs
lock
outsb
sbb
mov
mov
pop
adc
sub
pop
loop
insl
push
mov
ret
lret
pop
movsb
xchg
add
mov
iret
pop
jmp
lock
sahf
push
inc
xor
push
dec
sub
call
notb
das
outsb
xchg
test
cs
pop
and
cmpb
inc
das
push
pushf
inc
fildll
mov
arpl
cmp
pop
add
jne
sbb
mov
outsl
or
mov
jge
stos
lds
ja
or
push
and
mov
and
push
inc
xor
lahf
mov
test
pop
push
popf
stc
xchg
xchg
stc
out
call
cld
push
test
rolb
sub
jbe
mov
sbb
loop
arpl
icebp
pop
mov
es
scas
outsl
sub
xchg
stc
mov
push
vmovsldup
cmp
cmp
stos
jle
pop
fildl
divb
leave
add
aas
lods
sbb
push
pop
mov
and
mov
jbe
mov
rcrb
mov
loope
es
dec
sti
cmp
sub
rcl
add
mov
loopne
subb
popa
in
inc
add
shll
lret
add
mov
out
xor
out
mov
enter
imull
jne
xchg
push
mov
push
inc
or
mov
push
data16
push
aaa
dec
test
data16
out
cmp
mov
stc
dec
cmp
mov
insl
jns
inc
sub
out
fwait
jmp
mov
add
inc
jo
xchg
lret
cmp
mov
roll
ja
xor
cs
in
rorl
push
pop
out
dec
adc
xchg
enter
into
fmul
mov
adc
mov
into
pushf
das
js
xchg
loopne
sbb
loope
push
sub
jmp
insb
ficoms
dec
test
imul
scas
lds
adc
or
mov
out
test
gs
mov
inc
lea
leave
int
push
add
and
lods
xor
in
int3
cwtl
leave
lods
test
mov
repnz
push
sarb
int3
pusha
dec
rcr
scas
nop
or
mov
in
xor
and
xor
daa
and
push
jb
jae
mov
out
sbb
mov
xchg
lcall
je
mov
insb
jge
sbb
dec
scas
push
loopne
rcrl
pushf
imul
jl
rcrl
and
xchg
inc
push
adc
mov
push
test
jl
fs
and
sub
mov
rcr
in
bswap
fldcw
fwait
loopne
pop
stos
and
mov
add
negb
sti
scas
in
sub
rorl
cmpsb
sbb
mov
andb
stc
push
pop
jmp
ljmp
cmp
shlb
or
ja
sbb
jl
in
aas
pop
adc
jmp
and
dec
add
xchg
aam
inc
xchg
push
arpl
jle
cld
std
push
ret
fldl2e
sbb
int
lods
add
or
and
mov
jl
dec
stc
xchg
mov
inc
mov
push
cmpsl
stc
cmp
jo
cltd
mov
xor
fldenv
pop
push
xchg
push
outsl
cli
fprem
jne
add
mov
inc
out
pop
nop
push
mov
jecxz
lods
addl
cmp
sarl
pushaw
stos
arpl
mov
push
sbb
repnz
push
push
shll
cld
push
fwait
pop
mov
pop
and
push
jnp
aam
mov
jg
or
popa
sub
lret
cmp
pop
cmp
inc
xor
mov
sbb
push
sub
in
lock
pop
pop
mov
loope
pop
push
lea
repnz
mov
or
fsubrs
cs
popa
roll
jns,pt
adc
push
ss
lea
ljmp
es
nop
loop
cmc
and
add
js
mov
inc
out
pusha
inc
push
shll
mov
lods
jno
fidivrl
push
stos
loope
jecxz
jo
loop
cmpsb
adc
dec
int
inc
clc
add
loope
stc
jns
cmp
movsl
or
stos
lock
jo
insb
jmp
xor
cmp
xchg
mov
das
or
stos
jnp
pop
cmc
orb
sti
repz
add
loop
cld
fwait
mov
out
sbb
adc
dec
out
cmp
stc
adc
test
out
pop
clc
sub
inc
mov
ds
bswap
add
into
mov
cmpl
fs
ljmp
add
xchg
push
xchg
testb
inc
mov
adc
sub
movsb
loope
or
mov
jmp
pop
sbb
cmp
push
mov
cmp
or
dec
imul
lahf
jle
cltd
ds
dec
ror
leave
test
je
mov
xchg
call
cli
pop
ret
pop
cmpsb
xchg
cs
mull
jnp
insl
mov
push
cmpl
cld
cmp
fbld
test
shrl
xchg
cwtl
call
mov
aad
imul
fwait
add
dec
rolb
out
mov
fnstenv
test
imul
jg
cmpsl
cmp
enter
add
add
add
rolb
jne
xorl
pushl
call
sbb
mov
or
mov
mov
adcl
xor
add
movl
cmp
movl
je
mov
mov
sbb
mov
mov
add
mov
sbbl
mov
xorl
add
xor
mov
or
mov
xor
mov
andl
add
mov
movzbl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
incl
mov
add
mov
jmp
sub
mov
mov
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xorl
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
push
adc
mov
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
call
mov
dec
mov
jmp
andl
movl
add
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
and
mov
sub
mov
xorl
mov
mov
sub
mov
orl
jmp
negl
pop
adc
divl
jge
aam
and
out
fidivs
pop
jp
in
jp
sbb
xchg
xchg
ret
addb
or
ljmp
mov
lods
inc
add
in
sub
add
add
mov
mov
push
mov
add
inc
pop
xchg
or
push
loopne
dec
pop
fnstenv
fidivrl
cmpsl
es
cmc
mov
js
xor
cmpl
dec
aad
ficomps
sbbb
mov
out
sbb
gs
xor
xlat
mov
pop
sub
jns
sub
stos
and
imul
jbe
push
pop
jmp
or
into
dec
mov
xor
lret
and
popf
pop
xchg
sbbb
mov
adc
cltd
jecxz
cltd
dec
xchg
outsb
jecxz
js
pop
ljmp
cwtl
test
sahf
icebp
insb
test
mov
jnp
popf
push
inc
mov
inc
xchg
inc
xchg
and
and
in
dec
loopne
pop
cmp
sti
sub
add
inc
pop
jne
xor
imul
nop
jecxz
mov
dec
pusha
cmp
cltd
adc
and
test
mov
inc
mov
xor
jp
xorl
adc
mov
pop
xchg
ret
adc
orb
and
mov
xchg
and
jns
add
push
add
es
mov
imul
rolb
insl
cmp
ds
mov
outsb
jmp
lods
and
or
add
mov
mov
loop
jo
ljmp
push
scas
dec
movsb
mov
xor
fildl
loope
outsb
xor
pop
pushf
les
insl
outsb
jecxz
xor
pop
lock
in
cli
cmp
popf
cmpsb
push
fnstcw
idiv
and
jae
movsb
jp
jo
add
or
out
add
shrl
fiaddl
lea
xchg
jecxz
pop
or
call
sub
pushf
lahf
aas
and
in
test
shr
sti
ret
out
xchg
adc
cmp
into
in
dec
pop
cmp
rcrl
ja
mov
xchg
and
lock
mov
and
xchg
push
bound
jbe
ss
js
imul
add
inc
iret
jl
sub
shrb
fcoms
xor
pop
push
pop
jecxz
or
cmp
lds
adc
inc
icebp
dec
inc
adc
mov
xchg
xor
scas
sbb
outsb
lahf
pop
notb
cmp
rolb
inc
and
loope
ds
inc
jnp
popf
ljmp
sub
xor
xor
lock
cmpsl
dec
mov
sti
lcall
repz
movsl
ficomps
push
scas
jl
ficompl
dec
jg
fidivrs
push
push
das
cli
inc
clc
add
rolb
negl
jnp
mov
divb
in
add
xchg
or
int
push
cmpsb
mov
cmp
imul
inc
sbb
sarl
out
inc
lahf
adc
or
mov
mov
mov
roll
sbb
mov
pop
xchg
cmc
test
push
enter
inc
cli
jns
data16
mov
jmp
push
and
cmp
stos
pop
into
mov
int
cwtl
sbb
xchg
add
into
enter
inc
and
mov
fiaddl
outsb
inc
je
sub
xchg
rcr
jmp
fxtract
mov
lahf
lcall
test
jne
subb
pop
test
in
and
push
repnz
stos
mov
ret
stc
es
inc
int3
add
test
cs
out
sbb
cmp
push
popa
pop
lret
out
leave
repnz
adc
xchg
push
push
pop
std
pop
jl
sbb
lods
icebp
or
cmp
cmp
sahf
mov
sbb
or
dec
icebp
leave
vandnpd
cmpsb
js
mov
into
aas
lcall
lret
into
mov
lret
aaa
push
adc
ret
adc
stc
push
outsb
data16
adc
cmp
mov
pop
or
les
test
pop
jae
scas
sub
lds
sbb
xor
outsb
fs
lahf
loopne
inc
and
in
notl
subb
aam
jmp
sbb
test
test
repnz
pop
es
loop
fnstenvs
sub
aad
lods
mov
push
and
or
cltd
flds
pop
inc
add
scas
stc
mov
cltd
out
xchg
fadds
ja
std
popa
jl
jno
add
and
shlb
mov
or
mov
int
test
jge
mov
call
das
mov
neg
adc
or
test
hlt
ret
cli
jno
jne
mov
or
inc
inc
cmpsb
mov
nop
xchg
sub
adc
mov
pop
jg
inc
pop
loope
stos
inc
testl
xchg
loop
loope
push
ja
sahf
add
sub
and
push
mov
mov
movsb
cltd
fstl
sub
jns
jbe
mov
adc
mov
in
cmp
dec
imul
subb
lds
xlat
aas
mov
cmp
sbb
cli
es
jns
out
out
sbb
or
mov
cmp
lock
add
add
xchg
xchg
push
mov
cmp
pop
push
leave
cmp
inc
cmp
cltd
in
in
inc
pop
cmp
dec
jno
pop
jmp
aam
ds
jne
add
clc
fdivrs
pop
pop
leave
fstpt
xchg
leave
mov
cmp
lock
movsb
jg
xchg
mov
mov
inc
jno
mov
and
inc
ret
mov
xchg
outsb
inc
mov
sub
mov
daa
lea
adc
adc
cli
imul
movsb
jle
out
sbb
out
adc
andl
inc
ds
push
push
sub
mov
outsb
testl
or
or
adc
mov
mov
inc
pop
dec
out
fwait
pop
lahf
in
jne
mov
imul
xor
mov
jge
sub
shlw
stos
sbb
pop
sub
sub
std
pop
xchg
rcrl
lock
test
add
push
cmp
out
jle
mov
and
or
mov
dec
pop
dec
mov
push
sbb
jge
repnz
jae
mov
out
adc
aam
mov
mov
out
in
je
mov
ret
icebp
loopne
xor
jp
mov
mov
mov
pushf
movsl
mov
fists
out
or
cmp
push
insb
cli
jg
lods
jecxz
xlat
repnz
xchg
popf
es
jle
clc
testb
hlt
jne
repnz
and
shlb
fdivl
sahf
popa
jmp
push
das
aas
jl
fisttps
jg
lock
rcll
lods
jecxz
fdivl
loop
and
push
mov
stc
cmpsb
iret
xor
popa
jecxz
idivb
imul
mov
test
loopne
xchg
sub
lret
xchg
or
push
mov
lods
popf
mov
repz
xor
jae
sub
stos
ffreep
out
or
pop
cltd
scas
rcll
jg
cmp
xchg
gs
sub
mov
fidivs
jmp
stc
loope
inc
jg
dec
add
call
or
dec
aam
jb
adc
sub
rcrb
ja
js
fsts
cmp
stos
imul
jnp
nop
dec
gs
out
ds
mov
outsb
push
and
xchg
mull
fwait
push
jle
bound
scas
cmp
or
dec
scas
mov
imul
cmp
inc
movb
jecxz
mov
push
dec
rcrl
mov
test
test
movsb
fisttps
and
push
pushf
addr16
inc
sbb
and
rcll
add
lcall
jl
imul
shrl
mov
push
inc
in
dec
push
ret
xchg
xchg
mov
mov
mov
push
mov
dec
cmp
sbb
ss
rorl
mov
sub
push
mov
ficompl
sysret
aad
inc
mov
aam
flds
cltd
xor
cltd
js
call
mov
pop
pop
xor
mov
and
sub
cmp
or
insl
xchg
push
xor
xchg
mov
pop
lock
mov
cmc
xchg
in
lcall
std
ja
xor
pushf
pop
mov
mov
cmc
dec
xchg
ror
es
sbb
mov
lcall
enter
pop
leave
pop
idiv
mov
mov
sub
ret
mov
and
sbbl
dec
pop
ja
inc
mov
ja
jo
pop
sbb
pushf
inc
sub
iret
ss
in
sub
in
push
dec
pop
xor
xchg
jbe
add
mov
fwait
outsl
add
stc
mov
lahf
pop
fmuls
inc
mov
xor
outsb
jp
jbe
lahf
gs
push
into
cs
mov
pop
cmp
cwtl
push
outsb
gs
or
iret
mov
inc
and
ljmp
aaa
mov
je
fistpll
lods
pushf
fisubl
test
pop
cmp
cmpb
push
lea
pop
mov
stc
push
test
fsubl
mov
xchg
out
cmpsl
mov
imul
mov
xchg
mov
nop
sbb
inc
aam
pop
je
lods
lret
sub
inc
xor
or
sub
mov
cli
aas
mov
repz
incb
mov
iret
pop
lret
sbb
xor
xchg
jge
pop
mov
and
jl
inc
pop
divl
jo
inc
push
dec
jmp
hlt
stos
cltd
jae
insl
dec
inc
xchg
pop
push
daa
and
stos
ret
add
cltd
lea
push
lock
cmp
pusha
int
lods
xor
lcall
add
jmp
jno
addl
rcrb
mov
std
addr16
shr
adc
rcll
shll
dec
mov
cmp
in
inc
cmp
out
jl
aaa
fsubl
shll
inc
mov
gs
ret
cmpsl
add
insl
fwait
je
ret
or
aaa
jb
stos
mov
mov
rcl
call
lret
lret
xorl
pop
jle
push
inc
cmpsl
sbb
scas
jns
andb
fildll
pop
sbb
cmpb
cld
add
jp
xchg
xchg
dec
pmaxsw
mov
lcall
jnp
mov
cld
xchg
mov
add
jb
add
and
cmp
popf
and
cs
and
sub
mov
loopne
pop
scas
test
jl
xlat
out
inc
call
rcll
idivb
mov
push
out
clc
cs
pop
shr
aad
inc
in
jg
pop
xchg
movsb
xor
mov
sbb
ficoml
cmp
enter
mov
push
lret
jns
hlt
cmp
leave
cmpsb
mov
nop
sub
adc
mov
fidivrs
lock
xchg
add
std
jnp
shrl
sbb
mov
push
cmp
mov
rcrb
adc
and
jno
and
mov
pop
adcl
les
sub
insb
jge
int3
xor
fs
mov
push
xchg
fwait
mov
push
cs
jle
add
std
scas
cs
arpl
int3
dec
mov
data16
ret
aaa
cmp
add
rclb
push
test
or
mov
out
inc
dec
pop
gs
adc
movsb
adc
adc
sbb
mov
out
and
adc
std
dec
jg
inc
adc
dec
sbbl
int3
inc
ja
mov
iret
pop
adc
in
adc
and
movsl
mov
repz
adc
jno
xchg
pop
sub
lret
sbb
test
or
icebp
sbb
push
inc
nop
mul
insb
out
sbb
mov
pop
adc
inc
sub
mov
push
jnp
cmp
push
icebp
popf
cmpsl
fidivrs
rcl
sarb
popl
stos
cmc
mov
mov
add
in
shll
fsubrs
xchg
jle
xchg
nop
sub
in
xor
inc
mov
dec
fdivr
lods
dec
mov
mov
and
in
outsl
cmpsb
or
pop
nop
xchg
mov
sub
outsl
hlt
adc
sub
fstpl
inc
dec
pop
movsl
cmpl
ja
inc
jns
lret
fs
inc
push
pop
fs
pushf
je
push
xor
cld
push
jno
es
push
pop
mov
cmp
loopne
loop
cmp
or
or
adc
test
cmp
lahf
cmp
mov
lods
inc
pop
mov
repz
daa
dec
jle
movsl
xor
rcrb
jp
icebp
xchg
divl
pop
out
or
xor
dec
imul
lret
push
adc
fcomps
push
rclb
push
cmpl
mov
jb
or
pop
popf
sbb
jne
pop
xchg
pop
test
sbb
scas
ljmp
dec
sbb
dec
imul
movsb
mov
jle
fidivl
xor
sub
and
add
cmc
ffreep
call
pop
repnz
cmp
inc
enter
lret
mov
movsb
insb
js
les
mov
add
jne
enter
inc
rcrb
dec
mov
jae
subb
fcmovnbe
dec
xlat
ljmp
pop
xchg
xchg
shrb
and
adc
jp
xor
std
inc
cs
and
rclb
sub
fimuls
lds
push
out
or
das
jmp
and
mov
sahf
addr16
and
fucomi
lcall
xchg
fildll
fmuls
xchg
mov
dec
xchg
xorb
inc
add
mov
in
mov
adc
jb
and
jmp
and
mov
mov
xchg
pop
loopne
dec
pop
cmp
cmpl
lret
aaa
jb
out
dec
and
out
pop
out
in
imull
ffreep
rdmsr
pop
xlat
jecxz
adc
sub
cmp
cltd
xchg
testb
sub
lea
pop
hlt
movsl
into
fidivrs
jae
pop
popf
mov
cli
xor
sub
xchg
xchg
push
call
daa
adc
mov
jns
aam
xchg
fwait
add
lcall
and
sarb
sti
scas
jae
jp
pop
enter
push
pop
inc
loope
mov
mov
mov
sub
jae
mov
dec
or
push
int
rclb
ret
jae
push
xchg
inc
es
mov
std
cmp
sbb
test
adc
push
mov
xlat
loop
outsb
mov
movsb
ljmp
dec
sbb
in
loop
jbe
jb
bound
xchg
int3
aad
push
mov
inc
lret
jge
outsl
adc
dec
les
pop
jp
mov
enter
lret
cmp
push
aas
add
and
pop
mov
js
pop
out
dec
mov
sub
add
pop
test
mov
nop
dec
add
inc
int
popa
add
or
dec
imul
sbb
loop
add
in
and
dec
jns
fldt
xchg
insl
dec
inc
cmc
into
push
push
push
xor
lock
adc
add
pushf
lcall
jno
int
dec
fucomip
and
pop
jno
or
sar
mov
add
outsl
mov
fmul
je
mov
lret
cmc
aaa
inc
nop
cmp
lret
bound
incl
fnsave
mov
icebp
gs
call
add
sti
dec
in
pop
fcoms
sbb
dec
iret
xlat
cwtl
repz
dec
fldenv
or
cmp
sarl
lret
cld
int3
iret
fstl
inc
fsubrl
xor
sbb
aaa
sub
mov
push
test
mov
in
push
outsb
mov
repnz
ficomps
sahf
fxch
xchg
sbb
sub
out
xor
adc
das
cmpsb
push
repnz
pushf
test
adc
mov
add
inc
iret
push
push
mov
cmp
les
jle
adc
dec
inc
clc
mov
mov
pop
push
pop
inc
loope
push
xchg
aaa
sub
iret
dec
in
mov
leave
xlat
test
add
push
addr16
sbbb
add
jge
sbbl
lret
pop
stos
cs
add
or
mov
jmp
pop
stos
sahf
je
in
mov
imul
call
popf
fidivl
scas
mov
pop
es
jecxz,pn
imull
cltd
sub
je
jbe
repnz
popa
gs
inc
inc
sbb
out
pop
pop
push
lods
mov
cmp
es
hlt
lea
arpl
push
cwtl
push
or
jle
lds
lds
cmp
push
lcall
jmpw
jae
lods
push
xor
push
ds
dec
out
rcrl
cmp
and
loope
nop
out
stos
push
pop
jnp
jg
adc
addb
pop
pop
cwtl
mov
xchg
ffree
nop
sub
popa
sbb
cmc
ret
add
mov
mov
push
sbb
or
rclb
pop
or
mov
pop
clc
gs
andl
loop
jne
stc
jge
ret
mulps
xlat
mov
push
xor
lahf
daa
je
adc
xor
out
jl
loop
cmp
std
push
test
gs
lcall
jo
sub
bswap
in
addr16
mov
test
jl
outsl
pushf
cli
pusha
loop
jge
dec
jmp
not
stos
push
cmp
mov
popa
add
xor
pop
inc
add
push
fmull
mov
in
mov
inc
jno
mov
ljmp
cwtl
mov
adc
in
mov
repz
push
movb
xorl
push
cs
loop
insb
in
sbb
jbe
add
cmp
xchg
mov
xchg
in
mov
jp
jl
lds
ss
test
call
lcall
cmp
and
scas
lcall
ljmp
push
sbb
popa
and
pop
andb
in
xor
shrl
xchg
shll
sahf
mov
jmp
cli
dec
mov
mov
pop
test
xchg
push
pop
stc
mov
xchg
popa
les
inc
lret
mov
jge
push
js
fisttpll
cmp
je
cwtl
arpl
cmp
loope
jecxz
mov
loop
sub
stc
shrb
mov
push
shl
fnstsw
insb
xchg
cmp
imul
cs
out
scas
push
sub
mov
adc
xchg
bound
mov
ret
mov
mov
mov
jo
fwait
xor
ss
and
repz
inc
cmpsl
jp
adc
imul
pop
and
ss
out
pushf
add
notb
xor
mov
jle
mov
cwtl
cmc
les
iret
cmp
in
pop
stos
jbe
insl
in
push
jge
mov
jnp
cmpsl
scas
xor
jmp
ficompl
xlat
mulb
inc
lcall
adc
mov
sub
mov
xor
pop
je
push
push
adcb
sbb
mov
lock
sub
pop
inc
inc
pop
jmp
call
mov
fdivs
mov
or
xchg
and
add
pop
dec
xchg
leave
or
xchg
int
or
ss
vpmulhw
inc
inc
das
and
stos
cmp
and
incb
in
lock
and
inc
es
inc
imul
mov
clc
xchg
daa
outsl
divb
inc
or
aam
push
popf
mov
mov
shll
jge
inc
jge
cmc
push
in
in
popa
out
sbb
arpl
mov
cmp
mov
adc
xor
sub
imul
dec
dec
jmp
adc
clc
cmova
fbld
mov
mov
mov
cmpsl
push
sbb
jl
jmp
testb
xchg
gs
jbe
sub
sbb
jle
jo
ds
inc
daa
pop
pop
imul
lods
or
add
hlt
aas
or
or
das
push
push
cmp
dec
aam
inc
sahf
rcll
sub
fwait
push
pop
mov
pop
dec
inc
cmpsl
push
inc
jae
es
cmpsl
jg
in
mov
insl
jne
cmp
pop
and
test
mov
cli
push
cld
push
or
inc
orb
test
cmp
push
js
ret
cmpl
aad
mov
data16
mov
jb
sbb
mov
cli
sub
add
mov
sbb
mov
std
ror
push
mov
push
lret
lods
and
xor
sub
pop
dec
xchg
cmpsl
push
fisttpl
jge
out
subps
gs
sti
data16
push
pusha
call
cli
jmp
insb
dec
psubq
inc
dec
adc
stc
subb
or
push
jl
fwait
aaa
mov
mov
sbb
js
je
add
je
shlb
mov
cmpsl
popa
imul
sub
mov
mov
adc
xor
movsl
outsl
mov
rcrb
and
adc
push
mov
call
insb
lds
retw
sar
xor
mov
ds
fnstenv
adc
lcall
pop
loopne
inc
sub
cmp
rcrb
cmp
mov
push
dec
xor
mov
xlat
negl
test
movl
or
mov
ss
jb
das
cmpsl
iret
xor
sahf
leave
mov
imul
call
ja
ret
mov
add
in
jno
push
dec
ffree
push
add
sbb
imul
or
inc
xchg
out
mov
or
imul
sarb
dec
or
add
add
sub
push
cmp
test
lds
loope
jae
xorb
in
out
out
xchg
and
lds
stos
inc
adc
ss
in
filds
lret
sub
lods
ret
das
pop
hlt
outsb
js
mov
jo
shrb
mov
in
mov
aam
aaa
jl
scas
into
testl
mov
mov
ror
pop
ds
stos
add
xor
inc
jl
inc
loope
mov
push
loope
mov
loop
inc
dec
gs
pop
nop
xchg
xor
loope
pop
xchg
push
out
cmpsl
lock
outsl
or
sub
lahf
push
jbe
xchg
cwtl
jl
and
lds
add
mov
mov
ljmp
scas
sbb
mov
clc
inc
or
scas
dec
add
inc
fistps
pop
fidivs
imul
rorb
fstpl
and
xor
les
mov
add
mov
add
outsb
and
xchg
jge
mov
push
stc
add
aam
dec
mov
mov
loop
cmc
dec
push
xchg
lret
jnp
shl
xchg
fldl
shlb
cmc
cmp
inc
fs
fstl
shrl
jb
js
push
das
cmp
jle
xchg
mov
sub
and
xchg
and
pop
push
pop
or
xor
jmp
es
dec
inc
es
mov
add
pop
out
push
cld
pop
imul
outsl
adc
sbb
adc
push
mov
nop
into
mov
loop
std
inc
mov
pop
sar
jnp
fldcw
mov
test
rorb
je
mov
adc
jle
cmp
test
movsb
mov
addr16
xchg
scas
lods
cmp
int3
mov
pop
and
jno
sbb
sahf
in
adcl
clc
xor
mov
cld
jle
fcmovnbe
icebp
push
dec
test
push
int3
sub
sbb
les
push
push
adc
adc
insl
in
icebp
adc
lds
dec
jmp
push
fs
jbe
inc
cmp
jne
testl
hlt
scas
nop
push
push
adc
in
out
cmp
dec
fstpt
leave
dec
mov
push
insl
cmpps
pop
mov
int
jmp
cmpsl
mov
push
popa
sbb
mov
stc
repz
test
je
frstor
stc
test
into
sbb
or
cmpb
andb
out
pop
or
xchg
and
mov
sub
mov
adc
mov
push
scas
in
cltd
sarb
cmc
cmp
leave
xor
mov
xor
aam
out
rorl
rcrb
test
dec
shl
pop
aad
and
push
jns
das
mov
jg
push
pop
in
lret
xor
repz
lahf
dec
pushf
xchg
pop
sbb
xchg
xchg
mov
js
pop
xor
fadds
pop
stos
xchg
jbe
and
les
cmp
mov
xchg
cltd
jle
cmp
jg
sbb
enter
fnstenv
out
sub
cmp
dec
addb
xor
pop
add
jmp
cmc
jno
int3
fucomi
inc
jp
xor
inc
int3
cmp
adc
mov
jp
dec
jecxz
lret
mov
mov
shl
mov
mov
or
push
cmp
dec
movsb
or
ret
and
movsl
push
into
inc
call
mov
roll
and
iret
push
and
mov
inc
push
orl
icebp
jne
cmp
movsl
lea
push
jne
push
inc
imul
fnstcw
or
xor
loope
jl
xchg
mov
xor
inc
call
gs
jle
pusha
loopne
fidivs
test
push
or
out
outsb
mov
xlat
dec
xor
inc
es
mov
jnp
negb
outsb
aam
jge
lret
cmp
stc
pop
mov
mov
push
adc
mov
aam
cmp
dec
hlt
pop
loope
cmp
mov
dec
icebp
push
call
cmp
sahf
cltd
sbb
and
rcl
je
jb
aad
jmp
add
hlt
cmp
push
push
ja,pt
dec
std
sbb
adc
pop
lods
icebp
shrl
loope
pop
filds
outsb
xchg
lret
insb
push
daa
out
sahf
data16
mov
adc
or
pusha
dec
arpl
lods
jecxz
xchg
imul
jns
js
pop
mov
ja
sub
bound
xchg
mov
sti
pop
cmpsl
mov
addr16
ss
push
jo
mov
sbb
rolb
cmp
cli
sub
pop
lret
jo
gs
adc
jmp
inc
imul
jb
lret
lock
dec
and
adc
dec
lods
add
pop
ja
inc
movhps
push
mov
xchg
mov
mov
test
nop
inc
lds
and
or
pop
pop
aaa
dec
out
stos
push
into
ss
lods
mov
inc
popf
into
dec
daa
add
bound
cmp
jo
adc
sub
mov
rcrb
lds
mov
aas
mov
icebp
jl
aas
ds
pop
xchg
xlat
dec
jmp
push
and
outsl
arpl
push
push
xchg
adc
xor
mov
jmp
jle
addr16
enter
jg
aaa
xor
mov
movsb
popf
jmp
sub
out
cmovle
out
repnz
xor
data16
jne
lods
xor
pop
stc
jge
lods
shlb
xchg
aas
ljmp
mov
mov
in
add
inc
pop
fsubl
ss
mov
icebp
pop
jb
xor
or
cltd
and
sub
mov
sbb
cwtl
loop
adc
data16
orb
xchg
in
sub
add
lods
sbb
add
push
js
dec
sub
cs
pop
lret
and
stos
jg
inc
js
popf
push
jae
jae
sub
hlt
dec
cmp
jne
out
mov
imul
addr16
mov
int
sbb
jge
mov
xor
negb
xchg
adc
and
lds
xchg
faddl
outsb
xchg
int3
xor
sub
or
fadds
mov
ret
inc
xchg
add
lahf
fimuls
pop
jg
xchg
add
pusha
fdivl
xchg
push
int
loop
cltd
dec
outsl
inc
testb
jb
fwait
out
fdiv
inc
lock
fstps
shll
adc
xlat
cmp
fcmovnu
ljmp
mov
xchg
pop
jae
out
ljmp
cld
test
mov
aaa
fs
pushf
dec
mov
xor
cmp
rclb
push
mov
aad
fnstsw
leave
clc
out
stos
mov
jl
iret
push
pop
imul
daa
aam
in
xchg
rdtsc
jns
mov
dec
mov
pushf
mov
inc
jbe
fildl
pop
ss
jg
sub
or
popa
xor
pop
xor
push
pop
add
js
mov
adc
sub
loopne
out
mov
add
in
rcr
mov
sbb
dec
std
movsb
call
mov
out
add
pop
cmp
sbb
mov
ficompl
sub
jecxz
mov
ja
push
xchg
sbb
clc
bound
icebp
dec
inc
ss
push
inc
cld
loop
fisttps
fwait
ss
lahf
jb
ds
mov
test
adc
aam
mov
int3
test
pushf
add
shlb
pop
loope
pop
mov
iret
mov
mov
dec
sahf
outsb
gs
mov
mov
pop
pop
cs
cmp
adc
ss
fstp
lds
pushf
out
or
fnstsw
ja
push
dec
mov
stos
mov
gs
fdivs
out
lret
adc
inc
test
sub
mov
in
pop
bound
or
cs
mov
adc
sar
xor
clc
pop
out
pop
jbe
lea
add
dec
jge
or
test
les
adc
xchg
jno
sbb
idiv
dec
daa
xor
add
data16
pop
dec
loop
and
xchg
or
and
cmp
push
fistpl
xlat
sub
mov
nop
push
cli
xchg
pop
xchg
and
lret
out
mov
cs
daa
lods
adc
or
in
push
mov
ljmp
mov
add
sahf
arpl
stos
xchg
xchg
int
xchg
sub
enter
cmp
fld
mov
adc
sbb
movsb
sbb
fists
lcall
cli
mov
or
sub
mov
pop
cmp
fchs
sbb
fcompl
push
in
test
ret
rcl
xchg
sti
daa
lcall
mov
pushf
cli
mov
adc
pop
mov
cmpsl
cmp
mov
push
and
stos
dec
outsl
insb
jo
mov
push
enter
and
adcl
push
cmpsb
sbbb
push
imul
inc
negb
and
mov
add
jno
dec
sbb
mov
sahf
or
ja
in
push
jl
data16
loop
lods
pusha
mov
jge
cmpsb
xor
mov
stc
movsl
lret
dec
mov
cwtl
sbb
jp
ds
sbb
hlt
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
jmp
clc
mov
cmpl
ja
fsubs
pop
jp
icebp
xchg
mov
idiv
mov
into
arpl
pop
ljmp
pop
xor
or
pushf
cmp
test
pop
xchg
sbb
sbb
lods
inc
loop
mov
daa
mov
rcrb
inc
or
pop
pop
ss
push
push
add
mov
push
bound
loopne
xchg
jmp
test
lds
and
xor
push
int3
cmpsb
shll
push
mov
mov
mov
jne
adc
fistpll
mov
insl
in
orb
mov
jle
out
inc
popw
sbb
mov
push
fsubrl
add
shlb
mov
stos
lahf
xchg
cs
int3
push
dec
push
sti
xchg
mov
stos
inc
add
mov
in
xchg
lret
es
stc
sbb
out
scas
stos
mov
dec
inc
mov
xchg
fistpll
je
mov
adc
sbb
inc
mov
xor
ljmp
adcb
incl
jno
inc
sbb
xor
pusha
or
xor
lods
pop
enter
je
jmp
pop
push
pop
push
ljmp
add
push
stos
cmp
fidivrs
dec
push
push
add
jmp
outsb
ds
popf
cld
lock
inc
and
xchg
dec
or
jmp
dec
outsb
push
xchg
jg
mov
out
pop
loop
test
mov
ss
gs
insl
sbb
xchg
mov
mov
mov
inc
jo
cs
pop
aaa
jbe
or
nop
sbb
aad
cmp
fwait
adc
mul
addr16
jo
jl
jae
ficoml
pop
push
in
rorl
or
ss
and
push
pop
push
jge
aad
lods
and
pop
xor
fistps
or
xor
ret
add
xorl
dec
vmread
jge
test
int3
mov
leave
lahf
cmpsb
fwait
movhps
je
xor
jnp
in
xor
aad
shrb
enter
adc
in
out
daa
das
cmp
cwtl
push
fcmovb
rorl
add
and
in
jno
pop
sahf
cmp
adc
jb
push
test
push
fisubs
mov
and
test
pusha
loope
ss
sbb
out
or
pop
arpl
mov
lock
loop
mov
xlat
cmp
cmp
dec
mov
push
pop
mov
jl
enter
in
inc
push
int3
jnp
fcmovu
hlt
sub
mov
sub
mov
iret
stos
dec
insl
stos
cmp
std
clc
aas
cmpsl
faddl
pushf
mov
cmpl
pushf
fdivl
inc
add
jne
leave
stos
lock
popa
sub
fists
mov
cli
adc
pop
out
movsl
inc
lods
mov
sbb
pusha
sub
dec
mov
push
lret
pop
jno
shrb
mov
lret
rcll
movsl
mov
or
mov
ret
dec
cmc
jb
mov
daa
adc
xor
dec
push
faddp
inc
cltd
fcoml
add
sbb
jo
out
mov
mov
loop
xchg
and
loop
fisubs
add
mov
addr16
push
adc
test
mov
test
cmp
pushf
aam
aaa
add
sub
jp
cld
mov
jg
loopne
andl
cmp
std
add
pop
cwtl
sbb
repz
mov
pop
out
fistl
pop
repz
loop
lods
jg
mov
in
push
or
out
loopne
push
lret
xor
imul
inc
call
out
dec
xor
push
cmp
sbb
jbe
lret
pop
out
push
xlat
push
ror
xchg
out
xchg
mov
xor
enter
inc
jb
test
inc
add
pusha
fwait
lock
pop
sbb
sbb
insl
jp
push
out
cmp
cmp
xor
xorl
mov
int
shrl
sahf
dec
inc
cmpb
cmp
lods
ret
mov
sbb
in
mov
add
insl
lock
insb
ljmp
imul
cmp
in
inc
jmp
push
pop
or
add
call
cmp
mov
mov
int
inc
or
aaa
xchg
fistpll
dec
dec
or
cli
mov
daa
mov
hlt
pop
jae
fidivl
frstor
lods
fs
pop
fstpt
fbstp
jo
repnz
mov
xchg
ja
nop
rcrl
into
xor
mov
pop
push
xchg
cmpsb
rcrl
and
cs
fdivrl
push
icebp
or
adc
aad
das
adc
adc
imul
and
and
lret
fsubr
out
das
xchg
sub
mov
mov
fisttpl
outsb
ror
sbb
or
mov
fstpl
loopne
push
cmpsl
dec
mov
outsl
dec
fisttps
sbb
daa
inc
mov
test
negb
mov
or
jle
mov
icebp
testb
inc
filds
or
inc
push
jae
enter
push
jecxz
testb
adc
mov
xor
lcall
push
aas
in
fsubs
aas
cmp
hlt
fldcw
dec
frstor
insl
cmp
shl
adc
xor
add
stos
adc
lret
cmp
enter
shlb
fildll
sub
adc
fsubrs
and
ret
sub
sub
mov
pop
int3
pop
cmc
pop
out
loope
dec
xacquire
xchg
sahf
popf
aas
fstl
mov
xchg
test
ret
leave
aad
cmpb
pusha
call
pop
js
push
jmp
ja
mov
push
mov
push
adc
fsubrs
cmp
or
xor
fistpl
sbb
push
mov
push
dec
cmp
idivb
lret
imul
pop
leave
scas
sbb
popa
mov
mov
pop
inc
adc
in
lods
inc
add
pop
out
dec
push
cld
bound
shlb
out
mov
push
mov
pop
sbb
sbb
and
gs
inc
jl
pop
mov
test
pop
mov
gs
lods
test
and
adc
push
ret
jae
gs
cwtl
add
lret
insb
int3
jne
hlt
adc
jne
lret
mov
test
stc
dec
rcll
hlt
mov
sub
insb
inc
pop
push
xor
fdivl
daa
push
pusha
out
int
pop
cmc
cmp
mov
movsb
xchg
mov
lock
push
stos
rorb
mov
sbb
loopne
inc
fnstenv
fimuls
jp
mov
popa
cmp
sbb
jnp
sbb
in
and
xchg
sbb
xchg
pop
pop
popw
mov
or
xlat
das
stos
fwait
shrb
add
addr16
rclb
test
mov
aam
xchg
addr16
or
pop
mov
jmp
andl
das
jbe
sti
inc
fs
cmp
xchg
jno
jno
stos
pop
jne
push
inc
int
enter
jecxz
addl
pop
js
mov
rcrb
les
and
in
lret
notl
adc
mov
cmpsl
bound
and
popf
mov
xor
sahf
js
mov
call
ficoml
or
lcall
mov
fmuls
xchg
lcall
xchg
daa
inc
or
or
xor
aad
sub
stos
inc
xchg
pop
jo
xlat
inc
jno
adc
pop
cmp
les
pop
mov
or
fcmovnb
nop
cwtl
mov
mov
lock
cmpl
fcomi
push
add
and
popa
int
iret
and
sbb
push
pop
scas
ja
pop
daa
sbb
dec
or
pop
je
rorl
pop
cmp
cmpsb
sbbb
push
into
std
mov
lds
pop
rolb
fisubrl
mov
adc
sbb
push
jns
aad
cmp
mov
mov
xchg
pop
aad
enter
add
cmp
sub
dec
lahf
push
inc
dec
fnstsw
lods
js
cltd
js
push
aaa
add
jp
jp
fwait
leave
mov
outsb
imul
fnsave
test
push
cmp
clc
fdivr
add
je
and
xor
or
push
in
enter
mov
fdivrl
or
icebp
and
roll
mov
fistpl
scas
add
outsb
mov
mov
add
cmc
dec
das
push
fwait
push
pusha
mov
jmp
dec
std
jbe
pop
out
xchg
or
rcl
xchg
ret
mov
jnp
push
cmpsb
repnz
xchg
push
pop
in
fdiv
mov
mov
push
push
outsl
jp
stos
and
cld
aad
adc
sahf
js
movzbl
stos
fisubrs
jg
test
add
fsubs
adc
or
xchg
popa
fstpl
cmp
pop
aam
mov
test
imul
insl
push
lcall
push
or
dec
fsubl
and
jmp
or
shlb
mov
cmpsl
add
cld
add
cltd
mov
dec
xlat
jp
rorw
mov
cmp
pop
out
sbb
xor
test
pop
lahf
add
sub
icebp
sub
mov
ss
shrl
adc
sbb
inc
jb
inc
xor
mov
shll
iret
adc
add
push
dec
mov
adc
repnz
movsl
fistps
int
call
ret
loope
cltd
add
jle
test
mov
ret
mov
jb
or
test
mov
mov
loope
pop
stos
jl
gs
sub
inc
imul
jp
pop
pop
cmpsb
cmpsl
pop
in
xchg
std
sub
xchg
es
lahf
add
jg
lret
clc
mov
and
or
insb
lcall
mov
jle
jle
lods
xor
aad
popf
sub
mov
jmp
mov
out
add
mov
int
pop
push
jg
adc
push
xchg
sub
int
or
push
add
cmpsb
mov
lds
adc
orb
xlat
out
cmp
jl
mov
sbb
cli
movsl
iret
mov
mov
push
in
mov
shrb
jl
pop
or
inc
dec
sar
push
movl
cmp
or
lock
loope
shrb
sub
cmp
shl
fdivrs
jp
jnp
insb
xchg
inc
pop
or
sbb
data16
ror
ja
xchg
stos
mov
ja
lcall
xlat
jp
cld
push
enter
pop
por
cld
scas
sub
lcall
dec
fldt
push
pop
scas
mov
adc
ret
rcrb
rorb
std
jb
cwtl
jb
out
testl
adc
push
dec
icebp
adc
and
add
lods
xchg
sbb
pop
mov
mov
mov
xor
cmp
pop
xor
adc
ss
mov
mov
in
divl
mov
mov
push
lods
xchg
fdivs
test
nop
xor
inc
mov
test
icebp
cmp
xchg
inc
in
sub
fsubs
xchg
je
in
sbb
mov
rorb
mov
clc
mov
jle
repnz
and
mov
mov
pop
dec
lods
xor
int
jno
scas
push
fmull
aas
cld
push
movsl
cmpsb
dec
xchg
ljmp
addr16
shlb
ja
hlt
stos
add
fiadds
jle
out
push
xchg
subb
cmp
add
sar
xchg
adc
lret
cs
xor
pop
nop
ja
jne
and
ljmp
push
xchg
mov
jle
jp
xchg
lock
add
dec
faddl
cmp
push
into
aam
mov
mov
fstl
push
inc
xor
mov
mov
xor
pop
mov
enter
pop
xchg
out
jp
push
cmp
or
fdiv
jg
or
mov
nop
jno
push
and
call
and
mov
mov
dec
div
xchg
xlat
pop
inc
insb
sub
ljmp
inc
int
or
sub
mov
xor
dec
scas
adc
mov
cmpl
push
push
sbb
clc
cmp
adc
sub
adc
xchg
icebp
push
and
sarb
pusha
or
jp
pop
pop
dec
mov
jbe
out
jge
movsl
mov
outsb
add
add
pushl
decb
mov
xchg
cmp
inc
jmp
paddsw
aas
adc
mov
add
jbe
call
divb
js
outsb
lahf
add
rclb
sbb
in
xchg
jmp
sub
sub
jae
push
jnp
push
adcb
std
push
jmp
sub
negb
jbe
jecxz
mov
hlt
sti
sub
stos
in
cwtl
lcall
mov
xchg
lret
mov
frstor
cmp
sbb
mov
sub
jo
jg
mov
sbb
jo
sbb
sbb
clc
loop
sbb
hlt
sub
jmp
cwtl
inc
scas
fdivr
in
xor
push
in
test
pop
pushf
je
fidivl
pop
add
dec
test
or
lods
push
sub
out
scas
in
add
pop
mov
sub
jo
pop
repnz
adc
jae
rcrb
fistpll
outsb
sahf
pushf
sbb
sub
das
mov
pop
mov
leave
imul
sub
pushf
into
repnz
mov
or
xor
movsb
bound
xor
xor
inc
jp
shrb
popa
xor
addb
adc
fsubrl
or
mov
leave
push
xor
or
pop
aaa
cmp
out
enter
idivl
sub
mov
add
xor
mov
and
lret
ret
sbb
sbb
stos
fwait
mov
mov
lea
inc
and
inc
repz
daa
std
push
sti
jg
sub
pop
inc
lea
arpl
sahf
scas
pop
jmp
out
lcall
inc
test
dec
mov
out
imul
out
leave
scas
repnz
jge
pop
mov
sbb
xchg
push
sub
mov
xchg
jbe
and
lds
out
sbb
pop
ror
cwtl
or
mov
sarl
loopne
sbb
and
push
xchg
test
insl
inc
mov
cmc
rclb
mov
and
outsl
popa
cwtl
mov
scas
dec
js
inc
inc
push
add
movsb
iret
pop
inc
mov
mov
int3
sbb
int
ret
testl
push
or
cmpsl
icebp
movsl
adc
lret
fdivs
jb
pop
adc
jo
jbe
xor
and
cmc
inc
sub
sub
negl
mov
test
stc
xor
mov
in
push
mov
fadd
or
mov
xor
shrl
ficoml
and
adc
adc
mov
out
sbb
cmp
cld
test
or
hlt
fldl
jecxz
decl
cwtl
adc
cmpsb
jg
icebp
mov
and
cwtl
cmc
out
adc
xchg
enter
sti
test
addr16
out
scas
add
pop
push
enter
outsl
or
daa
cli
mov
repnz
mov
push
sub
xchg
ret
in
push
mov
xor
repz
nop
mov
fsubs
push
ret
mov
mov
jne
sub
iret
lahf
mov
xlat
mull
mov
adc
es
push
shlb
adc
mov
mov
push
adc
xchg
xchg
pusha
ljmp
cmp
pop
jl
fxch
cltd
cli
mov
sub
mov
bound
jg
xchg
push
out
or
in
aam
sbb
sahf
sbb
jbe
xor
lret
aaa
sti
popa
pop
les
inc
fs
outsb
jo
pusha
sbb
in
adc
pop
jp
cmp
cwtl
add
sbb
push
int3
outsl
and
lds
cmpsl
push
push
lahf
push
jb
sub
inc
mov
aas
adc
pop
out
out
or
adcl
dec
or
and
push
in
mov
jl
jp
je
pop
pop
mov
mov
sub
sub
sbb
pop
mov
cs
pop
fcmovu
aam
jne
loop
push
jbe
mov
push
test
lods
out
or
adc
mov
and
fidivs
pop
push
ss
lods
cmp
cmp
xor
gs
cmc
scas
pop
test
push
mov
loopne
test
ja
adc
pop
inc
cmpsl
xor
cld
xchg
xchg
xchg
pop
sahf
neg
pop
stos
enter
or
or
iret
call
test
sub
popf
sub
jns
xchg
std
lcall
lret
xchg
dec
push
jns
fistpl
shlb
out
sbb
pop
jb
subb
outsb
mov
cld
inc
stos
cmpsb
adc
iret
cmp
popf
xor
mov
cmp
jmp
jecxz
push
loop
sbbb
sbb
leave
sbb
mov
imul
stc
and
jecxz
cmp
leave
pop
repz
push
xchg
or
inc
repz
fbstp
add
movsb
mov
in
scas
add
mov
cmpl
sbb
dec
push
mov
add
inc
in
adc
lods
xchg
cmpsl
sbb
sahf
test
addr16
js
cmpsl
mov
cs
arpl
sbb
xchg
and
adc
push
xchg
xchg
mov
js
or
mov
divl
out
mov
pop
hlt
sbb
lods
pushf
xlat
loop
lcall
push
jnp
cvtpi2ps
pop
dec
pop
adc
pushf
les
cmpsb
sub
sub
mov
stos
sub
pop
gs
enter
lods
and
lret
ja
dec
dec
jne
loope
gs
mov
les
push
add
sarb
push
cmp
sbb
fs
sbb
ljmp
scas
cs
jno
dec
addr16
fwait
push
and
out
ljmp
shll
clc
jmp
adc
out
sbb
push
lock
cs
mov
sti
xor
aas
add
sub
das
xor
pop
xor
fwait
pop
hlt
xchg
shr
sahf
push
sti
and
je
dec
and
xor
popf
pop
push
mov
add
mov
mov
mov
ds
int
aas
or
out
pop
repz
cmpl
sbb
jno
mov
push
add
jae
mov
daa
insb
mov
insb
or
mov
cmp
jge
iret
dec
adc
popl
outsl
push
inc
clc
fsts
adc
arpl
jns
stos
inc
jle
adc
scas
and
rcrb
ds
mov
or
mov
push
loope
cwtl
push
fwait
lea
lods
repz
aaa
arpl
cmp
movsl
and
push
add
pop
test
pop
lods
loopne
int3
inc
xlat
lcall
mov
lea
fwait
jle
mov
fcmovne
vunpcklps
lods
mov
xor
pop
push
leave
add
icebp
orb
in
xchg
repnz
test
scas
dec
ret
push
jl
xlat
push
fdiv
ljmp
daa
stos
int
jb
dec
int
jl
rcl
orb
xchg
lock
scas
mov
icebp
rcrb
adc
cmp
mov
mov
frstor
leave
enter
imul
in
mov
test
or
sub
xor
push
inc
adc
or
clc
adc
fsubr
popa
xchg
adc
in
or
cmp
and
xchg
push
push
adc
add
pop
pop
jmp
popa
sbb
jecxz
add
push
push
sbb
push
jnp
fwait
data16
sub
jmp
sub
adc
push
adc
dec
lret
inc
negl
dec
ror
dec
xor
push
or
out
ret
arpl
daa
enter
insb
loopne
xor
out
das
push
xor
inc
mov
int3
test
in
hlt
sub
push
mov
aad
dec
or
aaa
dec
pop
dec
sub
and
inc
sar
pop
xchg
push
cmc
sbb
mov
aam
dec
mov
jmp
je
and
xor
loopne
fidivrs
push
mov
dec
mov
daa
pop
or
push
adc
or
loope
aaa
jecxz
inc
iret
sbb
cli
es
mov
or
mov
jbe
sub
fisubs
sub
mov
push
and
fimuls
ret
cli
inc
add
push
jge
imul
jp
mov
fucomip
fidivrs
ljmp
out
add
gs
sbb
inc
iret
loope
clc
test
fmulp
pop
stos
mov
mov
lahf
mov
dec
fmull
bnd
lods
daa
popf
inc
hlt
mov
xor
dec
nop
mov
call
mov
or
shl
stc
scas
lods
add
inc
xchg
scas
lret
in
pop
aaa
lahf
dec
mov
jmp
push
add
ss
mov
icebp
fldcw
in
cmpsl
aam
ror
jnp
in
sub
ret
pop
arpl
mov
and
js
lods
xchg
lock
xchg
rcrl
imul
imul
mov
sbb
mov
push
ret
loop
adc
cmpsl
lock
ror
jo
in
adc
jno
jbe
inc
test
ja
fsubl
ret
stc
test
mov
jb
movl
jmp
ss
push
xor
xchg
ja
fsubr
dec
aas
ds
cmc
jecxz
lcall
mov
das
pop
clc
push
xchg
rcll
arpl
std
xlat
xlat
sbb
sti
or
enter
test
pop
mov
fnsave
xchg
mov
cmp
jecxz
ljmp
adc
dec
fwait
jo
inc
les
mov
pop
hlt
mov
adc
adc
push
ds
mov
mov
pop
cltd
mov
and
dec
push
jl
rep
add
inc
movsl
dec
and
enter
fisttpll
sbb
sub
cwtl
sub
shr
dec
xor
sbb
push
jno
lret
jno
fimull
dec
mov
ljmp
jmp
push
in
clc
aad
fistpll
aaa
sub
xor
and
lds
lods
sub
xchg
jg
adc
lds
pause
stos
cmpl
xor
cmpsl
inc
roll
ss
out
mov
les
outsb
insb
push
mov
data16
sub
xorl
ds
gs
insl
mov
gs
sub
lock
out
ljmp
pop
imul
push
mov
ret
lea
hlt
or
scas
push
data16
xchg
outsl
dec
xor
push
cmp
mov
scas
fisttps
insl
and
aam
movsl
and
xor
repz
in
jg
out
sbb
xchg
js
adc
cmp
push
mov
pop
adc
fisubrs
lret
mov
aaa
pop
pop
es
test
aad
cld
mov
and
std
mov
insl
fimull
push
inc
sbb
ja
mov
sub
scas
mov
adcl
push
stos
in
aam
mov
mov
dec
int3
imul
mov
cmp
sub
movsb
and
push
xchg
xchg
movsb
inc
pop
adc
cmc
and
popa
es
jge
mov
dec
sub
aad
mov
negl
dec
jb
pop
lods
cmpsl
add
inc
dec
stos
cwtl
popa
daa
out
int
add
push
mov
jmp
jge
ret
jae
jecxz
ds
sbb
std
push
pop
les
popf
mov
xchg
pop
out
lret
mov
aaa
sbb
mov
inc
test
clc
insl
sbb
and
scas
xor
outsl
mov
push
clc
mov
sbb
imul
popf
add
sub
mov
stos
inc
xor
test
aam
cmp
add
sbb
push
shl
mov
xor
and
js
int
icebp
xchg
bound
insb
and
js
pop
in
adc
mov
or
es
xchg
mov
dec
xor
std
loope
pop
pop
fcmovnbe
je
inc
mov
pop
imul
aaa
lcall
lret
roll
pop
jmp
and
mov
push
jmp
cmp
fstps
test
dec
dec
mov
xor
or
loop
cmpsb
push
das
sub
inc
pop
or
dec
sub
mov
movsl
pop
int3
js
cli
gs
xchg
gs
mov
xchg
add
outsb
pop
std
lret
rcrb
int
pop
out
test
mov
movsl
pop
cmp
push
pop
out
loopne
cmp
sub
push
stc
stos
sub
push
cmp
ss
cmp
xchg
jl
xchg
cs
and
jnp
negl
xchg
nop
mov
dec
into
clc
push
jp
insl
push
or
dec
scas
mov
and
mov
jge
sbb
aad
dec
out
test
mov
mov
imul
dec
test
jmp
cmc
es
shll
outsb
push
sub
mov
ds
inc
add
test
xorb
inc
jmp
xchg
test
or
cmp
mov
inc
xchg
push
and
inc
out
repnz
xchg
and
ret
stos
xchg
daa
add
push
mov
sub
add
daa
mov
test
jnp
cmp
push
dec
gs
fsubrs
movsb
jno
adcb
out
aam
and
xor
into
add
mov
rcrl
cmc
pop
int
pop
jmp
jp
or
jge
pop
sbb
fs
sti
and
and
ljmp
leave
outsl
mov
flds
int3
movsl
push
aaa
lods
pop
pop
stos
ficoms
xor
aaa
xchg
test
push
jg
mov
mov
dec
cmp
fildl
hlt
jge
shlb
leave
lret
or
mov
cmp
jge
cmp
movsb
shrb
mov
pop
jmp
out
addr16
fadds
popf
cmp
mov
cltd
das
jns
push
mov
or
rorl
es
int3
iret
inc
lock
lods
pop
shl
xor
pop
mov
or
and
popf
in
lahf
in
aaa
fstl
hlt
jbe
icebp
jmp
cwtl
xor
je
mov
or
cmpsl
sbb
arpl
xor
movsb
jbe
fcoms
das
jne
aaa
cld
imul
mov
push
imul
dec
incl
adc
jmp
scas
mov
push
out
adc
pop
dec
ds
mov
add
mov
rolb
sbb
pop
cmp
divl
cmp
cmp
jmp
mov
pop
and
iret
mov
loopne
mov
shll
add
sbb
xorl
inc
inc
cmp
aam
xchg
and
mulb
hlt
dec
stc
hlt
ss
imul
pop
cli
push
loopne
pop
jns
push
lock
push
popl
sub
lahf
aaa
mov
jnp
cwtl
call
or
in
jno
mov
les
dec
mov
dec
lret
cld
mov
jb
xchg
repz
imul
xchg
and
dec
std
pop
pop
inc
ss
ror
cmp
and
popa
lahf
jmp
adc
mov
arpl
xchg
mov
mov
aas
pusha
xor
xor
pop
xchg
fmulp
sub
ror
mov
rcl
xchg
imul
push
into
or
jmp
mov
roll
out
mov
sub
je
rorb
xchg
cmpsl
adc
stos
xchg
jecxz
in
sarb
fidivl
and
movsb
mov
stos
xchg
add
or
mov
jno
shrl
push
addr16
lcall
jo
pop
mov
xor
aam
addb
mov
inc
xchg
ficoms
sbb
pop
cmp
jnp
bnd
dec
shll
les
and
fisttps
into
mov
and
push
movsb
mov
pushf
cli
mov
dec
inc
imul
or
xor
push
imul
pop
movsb
std
mov
pop
data16
rcr
out
sbb
jg
mov
add
xlat
fnstcw
daa
fisttpl
popf
mov
into
shl
dec
mov
and
cld
popf
enter
cld
mov
jae
cld
je
mov
or
push
rcll
std
cmp
mov
or
mov
loope
loop
dec
aaa
loope
imul
lock
xchg
rol
loopne
nop
add
stc
movsl
adc
mov
cwtl
ret
dec
fmul
lock
xchg
mov
js
jns
xchg
out
lahf
cltd
jmp
sub
sar
fadd
out
push
xor
xchg
xor
mov
lret
inc
fdivl
mov
test
ss
jecxz
mov
lock
jp
iret
shrl
dec
hlt
in
out
imul
popa
and
pop
add
stc
dec
mov
pop
les
cli
sarb
rorb
js
sbb
or
cmc
arpl
and
cmp
orb
call
test
xchg
sbb
xor
imul
dec
movsl
data16
stc
imul
add
cmpsb
sub
push
mov
movsl
adc
mov
add
ret
fs
jne
stos
lods
xchg
jg
mov
sbb
aaa
fwait
jbe
ficoms
or
pop
out
inc
lret
js
fists
sbb
jbe
pushw
add
lret
cmp
mov
fucomip
movsb
inc
xlat
pop
std
push
fcompl
mov
insl
jns
push
nop
jge
dec
das
inc
iret
xchg
xlat
inc
push
imul
stos
stos
add
cltd
or
adcb
imul
push
fwait
iret
mov
push
fstps
sub
pop
jno
xchg
arpl
xchg
movsb
xchg
loop
mov
xchg
adc
repz
movsl
out
into
cmpsb
cmpsl
cmp
xchg
nop
sbb
sbb
jbe
and
jecxz
push
cmp
pusha
aas
push
pop
cmp
pushf
mov
out
cwtl
or
push
mov
nop
aam
out
adc
or
es
sub
enter
jge
adc
das
cmpsl
and
aam
sbb
and
cmc
rclb
je
scas
pop
push
call
sbb
mov
repz
roll
cmp
js
dec
push
jecxz
les
mov
add
mov
sbb
mov
hlt
fdivs
add
add
fs
dec
mov
pop
test
gs
pop
decb
cwtl
cld
push
test
add
add
inc
pop
xchg
hlt
mov
mov
out
call
inc
cmp
test
mov
push
jo
popa
xor
jnp
dec
cwtl
dec
xor
xadd
lods
push
inc
mov
jle
jge
xchg
dec
push
cltd
xor
fnsave
flds
fcomip
jbe
fisubs
std
jb
mov
jno
xchg
aas
inc
and
jl
xchg
mov
dec
pop
daa
adc
out
fiaddl
int
addr16
out
popf
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
xorl
lea
sbb
mov
add
push
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
mov
xor
mov
sub
lea
movzbl
adc
mov
mov
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
mov
xor
add
mov
mov
add
mov
mov
addl
add
sbb
push
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movzbl
sbb
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
mov
xorl
add
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
add
mov
add
xor
or
add
mov
sbb
mov
add
mov
xor
movl
add
addl
imul
addl
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
jmp
neg
jns
xchg
mov
popf
outsb
mov
inc
adc
pushf
push
add
inc
pop
jp
insb
sahf
clc
shll
cmpsb
push
leave
dec
push
dec
outsl
and
fwait
xorb
mov
lret
push
dec
lods
icebp
movsl
shrb
into
pop
jl
add
jmp
daa
mov
int3
sbb
test
xchg
popf
jo
inc
dec
pop
jno
pop
mov
push
mov
xchg
into
sbbl
or
testb
movsb
or
outsb
jmp
push
jmp
in
movl
and
pop
aad
repz
jg
loopne
fwait
sub
repz
movsl
xchg
xchg
pushf
push
testl
pop
xchg
aad
sub
std
out
jecxz
lock
inc
frstor
and
sar
into
aaa
dec
push
pop
insb
cli
add
subl
xor
mov
js
rcrb
or
hlt
jg
lods
push
stc
icebp
xor
js
jp
jbe
insl
pop
mov
xchg
arpl
sbb
ja
dec
out
mov
or
mov
fstps
outsb
inc
insl
pop
xchg
mov
sub
xchg
cwtl
mov
cld
ss
imul
cli
or
xchg
ret
in
add
fdiv
push
or
add
ret
lret
sbb
jae
shlb
dec
in
leave
pop
adc
pusha
jnp
repnz
mov
outsl
cld
xor
mov
mov
lock
push
pop
stc
sbb
mov
test
mov
cmp
dec
mov
popf
xlat
pushf
cmp
pop
pop
jmp
test
pop
pop
xor
jne
call
mov
ljmp
in
xchg
push
movsb
or
rcll
pop
add
adc
subb
sbb
test
push
mov
inc
clc
sub
and
in
aam
xor
sbb
jecxz
sarb
idiv
cmp
outsb
sti
pop
xlat
pop
in
mov
sbb
bound
std
jns
mov
lret
fwait
loopne
or
inc
push
adc
lahf
loope
jno
in
ret
fwait
xchg
lock
pop
das
push
push
inc
dec
out
hlt
mov
outsl
pop
gs
dec
mov
dec
sarl
lds
mov
or
addr16
arpl
dec
pop
call
inc
stos
cmp
sbb
lcall
in
daa
mov
outsb
pop
xchg
ret
xchg
sub
out
cli
and
and
xchg
hlt
in
pop
ret
dec
inc
ljmp
cmpsl
and
cmpsl
and
scas
movsl
sub
mov
iret
adcl
std
movsl
stc
insl
sub
decl
xchg
bswap
xchg
add
mov
cmp
adc
data16
or
sub
push
pop
sub
xchg
ss
xor
pop
mov
cltd
pop
ljmp
lods
ds
adc
enter
fwait
mov
loopne
loop
cmp
addr16
fisubrs
call
pop
and
mov
or
push
shr
decb
fisubrl
cltd
shrb
xchg
and
and
add
push
add
xor
sbb
in
repz
sub
nop
imul
add
inc
mov
push
loopne
cwtl
out
pop
ss
loope
sub
out
xor
mov
fwait
gs
test
in
cs
sbbb
pop
fldt
mov
adc
dec
push
insl
arpl
cmc
fildll
jp
call
mov
or
fs
rorb
hlt
mov
mov
jecxz
add
mov
add
repnz
test
in
shlb
jl
outsb
sbbb
punpcklbw
inc
cli
and
pushf
aaa
sbb
and
pop
and
test
repnz
sub
xorb
mov
aad
or
add
mov
pushl
jnp
cmp
adc
mov
inc
mov
subb
cld
xor
xor
mov
scas
jb
fcmovb
std
cltd
pop
and
fisubrs
jbe
mov
test
mov
push
push
cmp
dec
cltd
test
sbb
jbe
iret
fwait
mov
iret
cmpsl
or
ror
dec
jg
sbb
lea
les
mov
jns
dec
sbb
xor
sub
or
fwait
push
sarb
sbb
sbb
push
adc
ja
pop
lret
mov
push
xor
jae
cwtl
cmp
sbb
es
push
lret
add
and
xlat
add
mov
push
nop
loopne
dec
shlb
add
sbb
mov
hlt
inc
cs
jecxz
addr16
cmpl
fwait
rcrl
inc
mov
ret
add
add
mov
sbb
out
lahf
jl
mov
push
mov
sbb
jae
mov
sarb
mov
test
aad
pop
jp
fidivl
dec
adc
pop
ds
add
inc
insb
dec
pop
push
stos
push
sahf
ret
clc
pop
imul
jbe
sarl
aad
jno
test
push
mov
add
das
adc
push
enter
enter
jge
imul
xor
xor
sahf
jae
pop
lock
push
or
mov
enter
push
sbb
pushf
jl
pop
dec
cli
add
xlat
gs
imulb
mov
add
mov
xchg
mov
cmp
dec
test
sbb
or
xchg
mulb
insl
dec
loopne
push
or
and
lock
in
push
loopne
movsb
or
pop
ret
jl
xchg
add
mov
ljmp
mov
loope
cmc
pop
and
push
dec
jo
fisubrs
adc
ds
loop
pop
aaa
int3
pusha
sub
sahf
lahf
jno
push
lods
push
xor
jmp
rclb
mov
cli
jno
xor
add
or
fcomps
mov
shl
jno
jmp
xrelease
shlb
mov
or
pop
jnp
adc
int
push
mov
xor
je
rcrl
adc
mov
fldcw
cmp
pop
test
xchg
fbld
pop
cltd
mov
addr16
pop
fs
jb
or
xor
xchg
cmpsb
pop
lret
cmp
push
jmp
add
mov
mov
mov
adc
mov
push
js
pop
into
jg
in
push
insb
or
push
mov
inc
pop
pop
test
test
lret
push
popf
mov
jno
xchg
aad
cli
adc
gs
nop
mov
xchg
inc
pop
xchg
iret
push
nop
cs
mov
sbb
stos
xor
inc
enter
xchg
clc
xchg
shlb
xchg
and
push
add
out
pop
sub
sbb
call
push
addr16
push
mov
lods
push
jnp
jecxz
mov
mov
cmp
pop
subl
sbb
lcall
lret
push
loop
pop
cs
cmp
pop
jns
inc
or
fstl
std
mov
movsb
cmp
pop
imul
xchg
popf
adcl
dec
insl
sub
xor
push
push
xchg
and
test
inc
push
out
ljmp
cwtl
mov
pop
pop
mov
sub
gs
cmp
enter
xchg
gs
cmpsb
xor
mov
push
sub
out
pop
add
jo
in
adc
icebp
mov
in
push
js
or
mov
xchg
out
cltd
sub
and
clc
lea
mov
test
int3
pop
outsb
test
adc
ficoms
das
andl
mov
xchg
pop
push
mov
fstpt
jmp
xor
push
dec
aad
adc
add
inc
xchg
aas
mov
int
icebp
pop
pop
lret
jno
add
mov
sbb
sbb
ret
lret
inc
cli
mov
jae
adc
dec
pop
mov
aaa
cmp
lahf
push
pushf
dec
jl
inc
out
ljmp
xor
fcomps
imul
push
xor
out
cmpb
sub
sti
xchg
push
pop
push
rcrl
mov
notb
mov
test
mov
xchg
cmp
mov
pop
shlb
push
lea
imul
sbbb
sti
testb
icebp
ret
rcrl
shlb
or
sbb
mov
push
ljmp
push
inc
cmpb
fs
mov
inc
push
stos
ret
push
push
cmc
inc
pushf
sbb
jle
imul
jns
add
scas
call
mov
hlt
xor
icebp
mov
xchg
hlt
test
jae
jmp
mov
pop
dec
lret
out
sub
adc
add
lods
imul
filds
cmp
ljmp
cmp
ficoms
cld
dec
add
paddw
mov
packssdw
cld
mov
fdiv
jmp
sub
xlat
pop
fwait
inc
cmp
mov
adc
rcll
ret
xor
in
push
pop
outsl
loope
inc
pop
mov
push
and
dec
cli
inc
pop
imul
inc
xlat
push
pusha
sbb
cmp
lret
scas
push
or
lods
es
bnd
ljmp
test
push
dec
test
xchg
data16
cli
lea
aad
in
fidivl
pusha
dec
sbb
negl
cli
mov
sbb
inc
lea
pop
lea
sub
pop
in
inc
inc
stos
and
xchg
lcall
jp
pop
mov
out
test
and
in
mov
adc
mov
push
iret
sub
test
adc
ja
sbb
xchg
rolb
add
mov
cmp
repnz
or
and
and
jnp
mov
adc
std
mov
push
pop
push
shll
aam
int
ja
das
out
push
out
cmp
sbb
ret
dec
daa
mov
sti
pop
test
push
dec
out
jle
adc
into
frstor
out
in
in
pop
xchg
push
pop
cmp
mov
lock
jg
pushw
mov
push
push
mov
sarb
dec
dec
and
dec
jge
sahf
js
xor
dec
leave
icebp
xor
adc
inc
mov
nop
arpl
outsl
andb
aas
sbb
adc
in
movups
sbb
adc
cmp
cmp
adc
mov
loop
ja
cmp
inc
mov
sub
les
fimuls
clc
mov
inc
clc
fucomi
inc
mov
ja
push
push
mov
dec
dec
inc
sti
ret
mov
inc
notl
or
and
mov
lahf
adc
aas
cmp
xchg
sbb
adc
add
in
pop
icebp
push
sbb
fcompl
outsl
and
xor
fwait
je
aas
jne
lods
rclb
lret
or
sub
xchg
or
push
mov
or
mov
inc
dec
mov
sub
push
ja
cmp
cli
push
stos
sub
and
adc
dec
lods
call
scas
in
pop
lret
es
jg
pop
or
lret
pop
adc
nop
rep
insl
movsl
jno
jge
jecxz
sub
sbb
sub
xchg
xchg
dec
ja
and
jl
movsb
stc
xor
dec
inc
rorl
jb
inc
movsb
into
nop
pop
cmp
out
fsubr
pop
rorb
inc
lcall
pusha
shll
nop
mov
jns
add
movsb
loopne
cmpb
filds
bound
inc
xchg
mov
dec
add
fidivrl
xchg
cmp
or
nop
and
insb
cmpsl
mov
sbb
xchg
scas
lods
movsb
out
ficoms
xor
dec
into
je
fcom
pop
or
clc
cmp
adc
mov
inc
sbb
es
in
clc
in
adc
mov
call
push
and
lock
loopne
push
jb
loope
movsb
loope
fstps
cli
mov
test
pop
mov
jp
jae
add
mov
enter
mov
fcmovb
lea
cmp
out
cmp
imul
arpl
mov
push
rclb
mov
adc
cmpsb
cwtl
sub
adc
sbb
stos
xor
movsl
daa
or
pop
test
cmpsl
fnstenv
jg
xchg
mov
push
nop
ja
lods
call
std
inc
aas
ja
pop
and
pusha
jmp
fucompp
inc
mov
jp
sbb
scas
jo
sbbl
sbb
dec
popa
pop
push
xor
jns
mov
cmp
icebp
les
ror
sbb
lahf
aad
jae
in
jo
scas
jmp
frstor
push
mov
out
and
fsubrl
sub
pop
and
aad
jge
sbbl
fwait
cmpsb
mov
popf
mov
lret
lods
push
gs
push
sbbl
cltd
out
xchg
std
sub
cmpsl
pop
push
mov
inc
test
shll
pusha
push
insl
sbb
xadd
out
loopne
fcoms
pop
icebp
adc
xchg
stos
xor
add
cmpsl
js
dec
xor
dec
nop
fstpt
adc
jbe
sbb
and
mov
repz
sbb
addl
or
out
outsl
std
cmp
add
mov
or
addb
mov
js
jo
fstp
in
jbe
or
fcmovnb
mov
sbb
shrb
cmpsl
or
decb
movsl
pop
loop
hlt
pop
sub
cwtl
loopne
mov
pop
adc
mov
jb
loop
jns
jge
add
or
stos
mov
pop
mov
mov
add
or
scas
aad
cmp
je
or
push
inc
pop
insb
cmp
sbb
sub
int
lods
inc
les
jmp
icebp
mov
lret
test
cmc
dec
dec
dec
or
insl
push
or
js
test
xor
adcb
sbb
idivl
ds
add
jl
fisubl
mov
out
jg
cmp
pop
inc
lahf
or
hlt
jecxz
jecxz
adc
jbe
imul
push
stos
lret
xlat
ja
ss
stc
and
sbb
fisttps
ficompl
in
sbbb
xchg
cmp
stos
stos
mov
fdivrs
xchg
lods
in
pop
hlt
fnstenv
fisubs
mov
inc
mov
push
pushl
adc
loop
sbb
inc
movsb
pop
loopne
rol
and
popa
jp
xor
mov
pop
mov
mov
out
idivl
pop
test
adc
fildl
xlat
ret
pushf
mov
add
dec
fstp
mov
jae
xchg
xchg
lret
jbe
cmpsl
push
mov
fwait
jb
adc
xchg
mov
test
in
push
pop
imul
out
jae
lods
push
ret
fidivl
js
lret
push
jno
and
int
push
shlb
cmp
lret
ljmp
sub
sbb
jne
imul
ror
jb
enter
loope
mov
and
rcrb
in
xchg
mov
sbb
push
pop
sub
adc
popl
or
jnp
fbld
inc
enter
and
sub
pop
out
movsl
repnz
pop
mov
test
outsb
push
cmp
in
jl
pop
test
or
mov
aaa
outsb
pusha
mov
in
les
push
jne
sub
loop
push
cmp
pusha
dec
or
inc
sub
pop
cmp
dec
fiaddl
mov
testl
idivb
inc
sbb
jg
dec
scas
xor
das
pop
fwait
call
ficoms
hlt
jnp
lret
in
loopne
jns
out
call
push
mov
clc
jl
jmp
fistps
add
lss
jecxz
dec
pop
jno
push
push
pop
lcall
add
clc
and
in
in
inc
xor
pop
aaa
push
sbb
pop
loope
add
inc
dec
bnd
or
pushf
jnp
or
or
mov
stc
xor
add
repnz
mov
push
lds
mov
popf
xchg
jmp
cld
ja
xchg
iret
jnp
xor
aaa
imul
stos
movb
decb
xchg
aad
icebp
push
xchg
out
push
repnz
push
push
jp
je
add
cmpsb
stos
and
lret
lahf
inc
sbb
je
outsl
mov
pop
dec
xchg
pop
xorb
mov
lahf
iret
repnz
ficompl
inc
mov
mov
sarl
xorl
movb
xchg
xchg
dec
mov
pusha
adc
mov
dec
sbb
inc
out
or
leave
or
mov
pop
mov
or
xchg
enter
adc
pusha
dec
or
dec
sub
bound
fsubrl
lret
dec
in
cmp
xor
mov
out
jnp
outsl
xor
mov
mov
add
jns
jb
or
jle
push
mov
out
lahf
mov
pop
test
das
hlt
push
in
cmp
adc
dec
xchg
pop
push
cmp
or
jl
jne
cmp
loop
orb
sbb
push
cli
bound
push
stos
ja
push
and
lea
lds
mov
mov
je
enter
pop
mov
cmpl
outsl
nop
xor
cmp
xor
mov
pop
clc
or
sbbl
mov
mov
dec
inc
arpl
cmp
sub
ror
xor
push
popa
pop
in
movsl
jo
jle
jnp
inc
sub
sub
mov
add
fidivrs
lods
cltd
cmp
icebp
add
test
ds
add
adc
mov
movsb
adc
jmp
xchg
jecxz
test
sbb
cmp
mov
rcrb
in
mov
es
dec
push
sbbb
in
pop
cltd
pop
cmpsl
adc
aaa
idivb
andb
mulb
xchg
lahf
movsb
add
ja
lea
mov
fnstsw
push
cmpsl
mov
sub
cwtl
sub
in
stc
aas
mov
loop
push
mov
mov
sub
out
dec
ja
xchg
xor
imul
cmpsl
push
jge
mov
mov
cwtl
pop
loope
pusha
xchg
std
in
clc
ror
pop
arpl
movsb
xor
xchg
insb
sbb
inc
popa
fwait
cmp
pop
pop
jbe
mov
cli
cmp
push
sub
mov
cltd
add
add
lea
in
mov
sbb
pop
xor
ljmp
cmp
mov
sub
xchg
mov
cmp
pop
sub
cltd
inc
push
scas
loop
xor
push
xorb
or
inc
mov
mov
sti
xor
ljmp
dec
outsl
popf
popf
sub
mov
xor
test
xor
xor
sub
imul
mov
mov
std
mov
mov
repz
mov
adc
jns,pn
mov
adc
stos
jae
fsub
push
cs
int3
dec
mov
orl
pop
jnp
out
pop
dec
out
iret
mov
cmpsb
daa
sbb
xchg
and
mulb
pusha
jmp
fistpl
rorb
mov
gs
jge
js
sbb
lds
nop
shl
dec
sub
add
adc
add
data16
leave
jp
dec
inc
push
mov
mov
ret
sub
push
mov
cld
aam
jns
outsl
test
xchg
and
clc
xchg
mov
jge
das
movsb
in
call
xlat
or
ficoml
mov
sbb
movb
sub
adc
leave
imul
adc
cmp
jnp
loope
fisubrs
vsqrtsd
sub
cmp
addl
mov
enter
mov
cld
repnz
scas
mov
dec
popa
adc
pop
loop
lods
xor
bound
popf
stos
and
outsb
jmp
push
inc
xchg
pop
scas
imul
sbb
inc
fiadds
insb
jmp
mov
adc
iret
jb
popa
and
fwait
aaa
fcompl
adc
lahf
loop
adc
mov
popa
mov
mov
scas
pop
jo
cs
inc
jns
int
jle
xor
xor
xchg
cmpsl
push
cmp
and
and
out
mov
ret
std
movsl
or
adc
sub
dec
idivl
xor
bound
pop
lods
neg
mov
loop
cli
or
insb
icebp
sub
adc
jecxz
mov
icebp
rorl
int
pop
in
jb
push
pop
push
je
and
movsb
or
test
and
mov
jnp
adc
pop
movsl
lcall
pusha
rcr
mov
dec
or
jnp
nop
std
stos
push
and
inc
jbe
adc
xor
insw
aad
out
push
xchg
sarl
outsl
pop
jno
mov
sub
fld
ficoms
jle,pt
cmp
jne
or
inc
daa
stc
jnp
lret
rorb
stos
aad
out
loop
leave
aas
out
pop
cs
push
cs
cmc
sbb
sbb
xchg
add
aad
add
xor
jecxz
stos
push
cmp
xchg
ss
add
cmp
lahf
mov
xchg
ror
mov
or
dec
inc
pop
jl
add
jge
add
scas
inc
lods
jns
fdivr
bnd
adc
xchg
data16
roll
scas
cmp
pop
out
leave
sub
dec
jmp
adc
sub
adc
frstor
xchg
cmp
mov
inc
fiadds
dec
cwtl
jg
sub
outsb
dec
and
and
mov
add
cmp
mov
jno
enter
xchg
push
cmp
sar
ffree
fisubs
inc
jle
pop
inc
in
xchg
ret
add
inc
in
outsl
int
addr16
mov
jecxz
jbe
test
cmp
mov
cmp
ja
scas
or
addr16
gs
fisubl
ret
and
les
mov
mov
in
pop
addb
ljmp
pop
adc
in
xchg
pusha
test
mov
cld
mov
lods
pop
mov
dec
lahf
mov
dec
cltd
inc
mov
xlat
sbb
adc
inc
clc
jp
adc
out
sbb
dec
pop
push
orl
pop
test
jns
sbb
test
les
out
jecxz
cmpsl
mov
int
sbb
lea
inc
movsl
loop
mov
and
daa
add
and
icebp
imul
hlt
data16
shll
xchg
divb
cmp
scas
loope
fiadds
leave
sahf
repnz
clc
sbb
xchg
cltd
mov
inc
xchg
xorb
test
pushf
push
jbe
lcall
out
jle
cli
xor
ljmp
cmc
ss
sti
mov
pop
and
in
mov
lock
repz
push
add
xor
push
testb
scas
int3
testl
gs
jmp
jb
das
mov
push
ret
add
mov
pop
aam
ja
loopne
inc
jge
cmp
jle
jns
pop
aas
pusha
pop
add
adc
dec
adc
add
jo
outsb
clc
rcr
mov
imul
daa
test
outsl
dec
mov
mov
mov
sub
mov
cltd
mov
push
fcmovbe
jecxz
cld
push
dec
flds
xlat
ljmp
xor
xor
icebp
or
cli
imul
je
xor
fisubl
xchg
push
jns
inc
sbb
cli
call
dec
xor
push
pop
add
icebp
and
lret
mov
insb
popa
inc
cmp
lcall
xchg
lods
pop
cmp
and
xor
rol
jecxz
pop
xor
jmp
lret
nop
daa
sub
adc
lods
lret
adc
scas
and
stos
outsl
int
push
dec
mov
stc
out
xchg
and
xlat
cltd
and
rolb
fldt
and
sub
xchg
inc
cwtl
ss
jp
jno
or
xchg
xchg
adcl
sahf
subl
sbb
xor
das
jp
mov
popa
sarb
decl
aaa
cld
sub
cli
inc
dec
out
mov
fstpl
mov
mov
nop
add
test
test
mov
cmp
test
push
in
por
mov
adc
push
mov
mov
adc
cld
fabs
inc
fcoml
inc
gs
outsl
test
adc
mov
mov
cmpsb
inc
rol
push
movsb
mov
addb
jo
arpl
es
repz
cmp
out
lods
ja
lds
and
cmpsb
mov
and
mov
rol
in
lods
add
cmp
add
mov
cmp
ds
mov
sbb
cltd
pop
inc
jno
or
xchg
inc
xchg
jecxz
and
pop
out
or
test
xor
mov
mov
int3
in
xchg
rcl
test
loopne
dec
popf
and
jne
cmpb
sub
cmpsb
sub
hlt
les
rorl
stc
outsl
xchg
sbb
aad
sub
mov
lds
imul
push
mov
ficompl
jmp
ror
cwtl
fstl
or
sbb
cmp
mov
fcoms
push
jns
mov
and
xor
cmp
cs
scas
loop
std
sub
cld
jge
push
insb
mov
out
nop
pop
pop
aad
mov
aas
in
adcb
adc
mov
sub
and
jns
jmp
je
stc
pop
push
call
cltd
dec
out
add
es
je
test
outsb
inc
lret
mov
mov
fs
in
stos
jne
sub
sahf
xchg
repnz
aas
push
or
push
sub
dec
outsl
push
jo
popa
loop
in
test
inc
mov
cmp
out
movsl
ja
ljmp
adc
or
inc
movsl
push
movsl
aas
push
imul
push
loope
dec
pop
sub
push
dec
shll
insl
arpl
seta
por
sub
inc
je
insl
cwtl
sub
sub
jle
pop
jecxz
mov
imul
jne
jle
loopne
mov
popa
fists
std
mov
jb
adc
test
cmp
into
gs
pusha
fdivl
mov
push
mov
movsb
add
cmpsb
fistpl
mov
jbe
in
adcb
pop
sub
push
ljmp
mov
shrb
sbb
dec
push
stc
jbe
pop
imul
leave
dec
in
xchg
imul
sub
and
pop
aas
cmp
in
fiadds
repnz
cmp
imul
jb
mov
jl
scas
push
cmp
mov
jp
push
push
cmp
rorb
sbb
xor
and
shl
scas
scas
addr16
cmpsb
shlb
add
push
inc
mov
sub
cs
imul
enter
jecxz
out
int3
mov
sbb
jle
push
mov
mov
lahf
stos
push
inc
push
rolb
addl
jmp
xor
dec
mov
mov
mov
faddl
out
mov
fldenv
jp
add
mov
mov
jle
call
xor
mov
push
sbb
cmp
dec
mov
jno
xor
mov
nop
sub
or
dec
sbb
mov
aad
das
popa
cmp
xor
or
push
pushf
xchg
imul
inc
fs
fisubrl
in
add
and
add
testb
jle
xbegin
xor
das
js
or
cmp
pop
xor
testl
dec
aad
int
in
aam
and
cmp
xlat
and
movb
mov
icebp
xchg
test
push
and
mov
lret
test
das
sbb
inc
imul
jp
hlt
add
repnz
sub
std
and
pop
mov
inc
repnz
push
ljmp
sarb
mov
push
cli
or
fsubs
mov
xchg
and
cli
jl
push
push
sbb
pop
cmp
and
lods
das
stos
inc
lret
sahf
nop
cmpsb
inc
push
jecxz
pop
loope
mov
mov
mov
imulb
sbb
push
jae
push
xor
push
adc
mov
mov
testl
and
lahf
jl
pop
sub
sbb
fisttpll
jns
pop
incb
js
mov
scas
cmp
ja
ret
cmpsb
pop
push
mov
pop
scas
int
sarl
sub
mov
test
fildl
js
out
inc
inc
das
lret
xchg
push
mov
and
stos
pop
jb
inc
les
pop
jge
jbe
push
or
push
ljmp
xchg
pop
sbb
neg
shlb
sub
mov
jl
or
adc
mov
dec
sbb
jl
js
cmc
jl
stos
pop
hlt
in
in
clc
testb
not
jmp
ja
jmp
push
adc
mov
mov
cmp
call
in
les
dec
add
inc
xchg
negb
loop
xor
imul
ljmp
xor
nop
dec
mov
xchg
push
and
or
dec
in
jbe
in
dec
mov
ja
sub
dec
sub
sbb
out
push
jmp
adc
ret
mov
fidivs
mov
and
dec
lds
sahf
jecxz
xchg
cs
push
pop
mov
cmp
test
jg
mov
sub
or
outsb
dec
sbb
sub
push
sub
jno
loope
es
fdivrl
mov
jle
lahf
dec
xchg
ds
fistpll
add
and
scas
outsl
dec
jle
xchg
push
std
rcrl
jl
xor
pop
inc
sbb
mov
sub
ljmp
dec
outsb
pand
popa
scas
adc
mov
mov
das
dec
sub
sub
xlat
add
scas
pop
and
sti
pop
add
cli
insb
lahf
and
fists
and
jb
scas
rcll
clc
jbe
mov
cwtl
movsb
testb
aaa
sbb
lods
popf
js
mov
push
enter
fmulp
inc
mov
ja
mov
das
inc
adc
adc
push
jg
pop
out
mov
nop
dec
dec
int3
outsb
mov
ja
jae
sub
xor
enter
imul
sbb
ror
jg
push
jmp
jb
sahf
insb
data16
pop
and
push
inc
inc
adc
xchg
xchg
inc
jg
add
add
pop
outsb
lock
mov
sub
cmp
fs
push
jo
bound
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
xor
mov
sub
mov
sub
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
mov
mov
xor
sub
xor
adcl
mov
movl
add
add
imul
mov
mov
cmp
je
mov
mov
sbbl
mov
subl
xor
lea
addl
mov
mov
not
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
add
movl
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
xor
xorl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
add
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
subl
add
movzwl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
or
mov
movb
lea
and
mov
xor
jmp
mov
lea
jbe
ds
in
jp
pop
jp
test
sub
stc
int
daa
push
lods
dec
xchg
inc
pop
sub
adc
cwtl
xchg
xlat
scas
sbb
in
pusha
jge
aaa
out
add
or
add
in
lods
xlat
adc
pusha
push
xchg
jae
ja
std
out
in
fs
subl
out
insl
and
inc
mov
sti
and
mov
int
nop
mov
mov
scas
xlat
xchg
ljmp
xor
jno
pop
repz
jbe
lods
push
or
sbb
dec
mov
xor
xchg
mov
fs
sub
enter
mov
pop
decl
decl
aas
sbb
xchg
add
jecxz
sbb
jmp
dec
xchg
mov
mov
popf
sub
xchg
test
xchg
mov
andb
je
jae
jmp
jecxz
or
call
call
or
xchg
insl
jg
sub
cmp
popl
in
and
add
jle
leave
ffreep
dec
sbb
push
add
jno
jmp
ja
das
sub
mov
push
mov
rcrb
cmp
jp
mov
test
ja
into
arpl
xchg
pop
sbb
movsl
sbb
shl
push
dec
dec
cmp
and
xor
ret
ljmp
sbb
lret
jmp
cli
mulb
sbb
mov
pop
xchg
fistpl
mov
cwtl
cmp
push
sbb
dec
mov
xchg
repz
pop
cmp
andl
outsb
adc
pop
xchg
das
jb
gs
roll
cmp
jmp
popa
ret
lahf
enter
inc
cmp
mov
outsb
sbb
pushf
dec
sub
subb
sarb
mov
add
stos
and
inc
call
cmova
mov
xor
lahf
mov
or
iret
idivl
push
inc
in
shl
xor
inc
icebp
les
jg
mov
push
cmp
adc
dec
pop
lret
xchg
cld
in
xorb
sahf
mov
cld
push
ror
dec
mov
stc
inc
movsl
les
cmp
push
jbe
std
or
loopne
lahf
and
pusha
add
mov
sub
mov
push
inc
sbb
call
inc
push
aad
push
jns
sub
addr16
cmp
mov
add
pop
sbb
lret
jge
pop
or
mov
mov
sub
inc
test
xchg
fwait
mov
inc
fs
mov
jae
push
push
mov
add
fisubl
push
es
lahf
lods
inc
lcall
pusha
inc
ja
mov
imul
inc
daa
jo
in
cmp
xor
fs
sbb
negl
cmp
fwait
enter
pop
xchg
push
cs
mov
fcomps
insb
ja
adcb
pop
pop
popf
jmp
or
imul
jo
sti
test
mov
in
test
out
xchg
jno
sbb
xor
sub
shrl
xchg
adc
adc
js
sbbl
jg
cld
stos
and
idivb
xchg
mov
fcmovne
or
popa
orb
mov
lret
mov
out
sbb
sbb
scas
and
add
ror
popa
sbb
push
add
shrb
jp
jae
pop
ljmp
xor
jbe
sub
aas
or
out
mov
pop
sar
bound
shlb
lret
sub
mov
cmc
imull
jp
in
icebp
add
or
sbb
movsb
mov
mov
push
lds
outsb
sbb
fs
mov
cmp
push
inc
fmull
aam
mov
mov
out
pushf
bound
rcl
bound
mov
dec
xchg
mov
or
ret
jmp
aaa
imul
xchg
pushw
sbb
hlt
mov
add
arpl
ljmp
sub
mov
mov
dec
fnstenv
iret
arpl
shll
jae
test
sti
insb
and
enter
mov
pcmpeqd
adc
cmp
mov
inc
push
in
dec
adc
push
jo
movsb
test
adc
pop
fsubrs
or
xlat
and
adc
call
mov
andl
bound
aas
push
sbb
lret
or
pop
and
push
fstpl
mov
outsl
out
and
xor
gs
and
lea
repnz
nop
scas
cwtl
inc
fwait
adc
push
sub
roll
sar
or
movsl
mov
pop
and
jbe
out
pusha
out
jo
rcrb
or
aas
push
mov
test
jbe
iret
lods
mov
mov
jae
pop
out
stos
cwtl
jl
out
adc
in
dec
dec
jp
jl
pop
fistpll
push
mov
cmp
scas
or
fisubrs
sub
xchg
xor
scas
lea
sub
pop
push
andl
sub
jmp
and
ja
push
push
int3
xor
sub
and
divl
jno
std
movb
mov
aaa
sbbb
or
cmpsl
jge
jns
jae
sub
bound
shll
popa
ljmp
xchg
adc
arpl
mov
or
in
lret
jecxz
lock
cmp
aas
inc
jb
cmp
add
dec
pop
test
sbb
push
sahf
lret
and
jne
das
pop
mov
dec
jle
lret
mov
xchg
outsb
mov
mov
and
dec
hlt
imulb
and
push
and
nop
fsubp
mov
mov
adc
movsl
aaa
mov
lock
movsb
and
cmpsl
pop
stos
daa
sub
lock
or
sub
jne
stos
loop
lret
stos
stos
xchg
stos
pop
inc
add
and
mov
mov
lods
lcall
mov
xchg
out
arpl
inc
and
jbe
push
mov
mov
mov
adc
shll
sbb
daa
mov
add
clc
sub
dec
xchg
lock
fs
aas
mov
ret
xchg
pop
cmpl
in
mov
and
or
push
lahf
and
add
push
xor
push
cmpsb
mov
add
out
adc
and
dec
jp
add
test
rclb
movsb
scas
aam
or
popa
xchg
mov
and
dec
ret
sbb
shrl
cltd
aad
mov
ret
stos
sub
test
movsb
push
test
int3
movsb
xlat
les
into
lahf
push
loop
sbb
cmp
stos
and
mov
test
sbb
or
sub
cmp
mov
andl
out
xor
adc
mov
xchg
aas
repz
lea
mov
mov
inc
mov
mov
insl
pop
mov
push
cmc
xchg
mov
fdivp
cmp
add
es
lods
inc
dec
fwait
addr16
js
insb
xor
dec
push
sub
arpl
out
call
and
jp
cmp
adc
sub
out
popf
mov
add
dec
or
icebp
inc
xor
dec
or
movsb
adc
dec
push
push
jecxz
dec
and
sbb
mov
dec
in
jbe
rolb
push
jp
lds
out
sahf
bound
pop
mov
mov
aam
cmp
mov
mov
loopne
or
push
pop
orl
xchg
mov
add
mov
push
or
or
cld
mov
andb
mov
pusha
adc
ljmp
jge
lret
test
mov
out
pop
add
pop
jno
mov
add
dec
scas
nop
jne
adc
sbb
jg
enter
or
daa
push
inc
insl
movsl
fdivp
jmp
xchg
dec
xchg
sub
xor
inc
pusha
pop
pop
adc
sbb
or
imul
aas
or
xchg
jle
addr16
inc
push
movl
push
inc
xchg
scas
inc
jno
sarl
sub
lret
push
mov
aas
testl
es
cmpsb
sub
dec
add
sub
pop
outsb
testb
inc
lret
mov
xchg
inc
dec
dec
insl
and
leave
fwait
mov
aad
cld
cmc
cmpsl
xor
mov
cwtl
inc
cmp
gs
lds
xor
in
cli
jb
mov
hlt
or
push
sbb
cmpsl
jnp
pop
push
cmc
xchg
je
loopne
and
aad
sub
sti
jnp
das
or
int
xchg
lea
outsb
push
sbb
xor
add
xor
cs
out
or
inc
out
add
mov
test
js
dec
xchg
decb
pop
dec
cmp
mov
je
add
in
pop
xorl
mov
mov
je
popf
fimull
out
cmpsb
mov
pop
push
cmp
and
clc
mov
or
add
xchg
lods
test
pop
or
scas
call
cmpsl
xor
pop
xor
movsb
sbb
or
dec
ret
xchg
pop
inc
mov
mov
les
enter
sahf
dec
and
adc
mov
arpl
mov
movsl
inc
pop
mov
arpl
dec
test
add
shl
mov
pop
xchg
jmp
mov
xchg
pop
adc
adc
jb
test
je
neg
stos
fdivrs
cmpl
lods
test
rol
cmp
and
out
xchg
push
push
sbb
xor
jp
icebp
inc
and
mov
push
repz
or
cli
mov
sar
iret
lea
lock
ss
int3
out
mov
movsb
icebp
inc
or
xorb
inc
pushf
sbb
out
cmp
add
xor
ljmp
add
outsl
pop
inc
xor
nop
dec
stc
pop
mov
mov
sbb
mov
je
outsl
push
mov
test
mov
mov
outsb
fists
push
and
adc
and
and
rcrl
imul
push
test
ss
mov
pop
xor
jae
inc
imul
in
mov
sbb
ret
pop
fcoms
imul
mov
or
iret
mov
and
mov
cmp
or
lds
adc
cs
dec
das
and
mov
sub
lret
jmp
clc
xchg
or
movsl
dec
xor
cmp
xchg
mov
sub
pop
lcall
loop
fcompl
test
mov
jmp
add
addr16
mov
jge
jbe
icebp
mov
jmp
xchg
scas
popa
cltd
push
cmp
retw
mov
aaa
pop
mov
fists
or
clc
ret
jp
adc
in
xchg
sub
inc
mov
rcrb
and
lods
jne
pop
loope
cwtl
cwtl
std
mov
inc
loope
mov
hlt
add
daa
fucom
pop
pop
lods
jp
mov
loopne
aas
mov
pop
scas
sti
xor
andb
adc
loop
dec
adc
das
dec
daa
call
rolb
mov
or
mov
out
mov
outsb
mov
popf
dec
jno
push
sbb
mov
int3
mov
add
in
add
mov
movsb
test
loop
out
pop
inc
out
xchg
lods
int
jecxz
mov
mov
es
inc
xlat
testl
addr16
inc
xor
sub
mov
test
jne
hlt
cmp
xor
adc
push
lods
shrl
sti
push
or
shrl
cltd
sbb
dec
fistl
adc
adc
bound
lods
pop
inc
aas
shl
jnp
testl
loopne
and
dec
jg
push
clc
outsl
pop
pop
dec
lcall
lods
mov
dec
out
jno
jne
aam
pop
or
notl
add
mov
dec
daa
and
imul
negb
ret
ja
cmp
mov
mov
jle
add
jno
mov
xchg
xorb
sub
push
cld
lds
rcrb
cmp
adcb
jne
adc
and
sarl
and
cmc
jle
jae
cmp
je
dec
mov
mov
pop
imul
and
in
movsl
add
jbe
and
sub
jae
cmc
je
xor
gs
cmp
mov
in
mov
xor
js
outsb
or
fldt
mov
subl
leave
enter
push
pop
stos
mov
pushf
flds
ja
mov
adc
mov
inc
and
icebp
jle
pop
insl
daa
test
mov
dec
in
mov
push
sub
adc
repz
rol
int
cmp
push
adc
dec
ljmpw
push
jmp
bound
push
es
scas
mov
inc
push
mull
fdivl
movsl
sbb
sbb
xchg
pusha
jbe
test
lret
out
sti
cmp
int3
addb
jb
push
jp
insl
pop
pavgw
out
xor
nop
push
imul
mov
imul
insl
pop
daa
insb
shrl
fildll
mov
rclb
push
add
leave
pop
mov
xlat
repnz
mov
fsub
daa
call
js
ret
jp
sub
or
sbb
dec
xor
hlt
insl
mov
mov
fcomp
adc
xlat
sub
sub
shrb
roll
mov
loope
push
jbe
mov
gs
jno
add
or
mov
rolb
inc
cmp
ljmp
fdivp
test
addr16
lret
inc
cmp
notb
shrb
mov
in
cltd
ret
inc
int
push
push
aas
pop
dec
andl
mov
shrb
or
fwait
xchg
lock
movsb
mov
mov
cli
les
leave
mov
imul
jns
xchg
les
add
leave
outsl
push
mov
stos
push
sahf
and
push
arpl
push
shll
fdiv
mov
mov
sahf
cmp
cmpsb
sahf
clc
inc
mov
sbb
das
push
push
xchg
push
xchg
mov
xchg
pop
inc
mov
adc
dec
test
rcl
mov
xchg
mov
or
jp
xor
aam
and
sahf
add
xor
push
dec
cmc
aas
lock
xchg
insl
mov
addb
inc
dec
xlat
hlt
in
pop
cli
xchg
xor
jmp
pop
push
fstpt
mov
jl
push
pop
mov
addr16
popa
mov
lret
push
jmp
mov
pop
adc
add
mov
andl
sub
xchg
das
pop
mov
mov
jns
mov
leave
xlat
inc
lret
mov
insl
popf
test
jecxz
inc
jns
jnp
out
cmp
frstor
mov
divb
xor
mov
mov
sarl
or
rcll
inc
mov
mov
and
std
mov
fwait
stos
popa
movsb
and
mov
xor
or
mov
sbb
ljmp
das
lret
insb
push
push
popa
fists
cwtl
lahf
dec
push
inc
pop
nop
je
and
xchg
das
sti
lret
adc
outsb
stos
mov
scas
pop
push
movsb
dec
and
out
aam
cltd
int
stos
sub
js
or
mov
cltd
bound
add
sub
movsb
and
mov
pushf
call
loopne
mov
push
repnz
gs
cmp
lods
mov
mov
mov
aas
mov
mov
sbb
pop
sbb
addb
mov
lds
movl
xchg
push
into
bound
es
cmp
add
fmull
adc
enter
pop
cmp
dec
hlt
out
dec
mov
sub
int
xchg
dec
outsl
mov
aas
and
test
outsl
inc
fxch
cmpsb
jae
stos
inc
enter
inc
clc
and
sahf
loop
push
adc
and
inc
jg
mov
repnz
ja
xor
xor
into
add
in
sub
cmp
push
enter
enter
dec
jb
or
imul
xlat
testb
aad
fwait
cmc
xor
loope
push
bnd
push
movsb
push
stos
cli
out
addb
or
in
and
and
js
popa
and
mov
sbb
insb
sub
sbb
sub
sbb
pop
je
ud2
imul
inc
xor
add
adc
or
hlt
movsl
ljmp
jle
jb
add
ret
mov
and
int3
pop
sbb
pop
cmp
dec
adc
clc
mov
sbb
sub
mov
fcomip
out
jne
ljmp
mov
adc
testb
sub
out
aas
loop
mov
jne
add
rcl
lret
push
mov
cmp
popl
mov
pop
add
setl
inc
imulb
int3
divb
jmp
xorb
test
adc
loopne
insb
out
movsb
pop
jne
cmp
jno
scas
aas
sbb
inc
dec
xchg
add
inc
sub
mov
scas
iret
push
roll
dec
mov
mov
ret
mov
push
push
testl
inc
stc
mov
cmp
cs
cwtl
jno
add
mov
int3
xchg
sbb
pslld
pop
jmp
adc
in
push
iret
sti
aas
addr16
insb
lret
xor
cmpsb
shlb
aad
and
mov
push
adc
push
loopne
popf
daa
mov
out
rorl
and
cmc
inc
push
mov
in
push
scas
and
jl
and
adc
shl
popf
xor
adc
add
push
pop
dec
imul
mov
pop
out
jnp
out
cmp
jg
dec
lret
jae
jmp
jp
add
fistpll
or
outsl
mov
movsb
mov
adc
xchg
or
mov
xchg
sbb
xchg
rorb
jae
push
inc
fdivl
cs
jp
mov
fidivl
js
ja
jb
lcall
testl
movsb
add
push
and
sub
repz
lds
subb
push
daa
int3
add
push
xlat
or
lret
fimull
fsubr
gs
in
imul
std
jmp
sbb
aaa
lahf
lcall
call
fidivrl
mov
jnp
mov
das
filds
sub
leave
sub
or
loopne
int
xchg
inc
idivb
sbb
hlt
lcall
jo
fnstcw
push
or
movsb
mov
loopne
test
xor
mov
icebp
jnp
repz
pop
mov
mov
cmp
mov
xchg
add
dec
test
and
xchg
pop
movsl
cltd
call
cltd
mov
and
std
push
hlt
stc
and
pop
psrad
xchg
push
xor
cwtl
jle
xlat
aad
dec
loopne
jbe
sbb
mulb
not
test
mov
test
cmc
jecxz
popf
outsb
sahf
cli
dec
mov
pop
mov
jbe
adc
popa
dec
pop
movsb
xchg
mov
mov
inc
xchg
cmpsl
repnz
or
and
xchg
leave
cli
xchg
jmp
aas
or
ret
insl
in
mov
mov
sar
insl
or
add
mov
movsb
std
in
cmp
jno
lods
pop
cmp
inc
push
lock
ret
jnp
das
mov
inc
fucomp
imul
std
repnz
or
or
xorl
mov
shrb
xchg
jbe
jg
xchg
imul
dec
lods
scas
mov
cmpsl
adc
dec
or
jp
cltd
pop
cmp
push
test
push
out
cltd
cmpsb
movb
or
adc
lea
outsb
out
outsb
inc
sub
mov
and
or
addr16
push
inc
neg
and
cs
das
pop
dec
stos
pop
sbb
aaa
xchg
iret
iret
and
or
mov
mov
pop
and
sbb
lahf
xlat
movsb
push
lods
stc
sub
call
in
adc
je
fnstenv
adc
adc
pop
fwait
les
jnp
shll
sub
clc
sbb
les
sbb
dec
jl
jp
loop
shrl
dec
adc
mov
aad
adc
xchg
and
sub
std
xor
clc
imulb
push
sub
iret
dec
and
rol
jno
mov
mov
pop
mov
jp
push
mov
mov
cli
in
fstpl
lods
lods
push
push
insb
mov
jb
cli
fwait
test
jl
jbe
loopne
sub
mov
fimuls
pop
das
mov
sbb
loopne
sbb
stc
add
sbb
in
xorb
icebp
bound
loopne
imul
mov
pop
xchg
pop
jp
jbe
or
xor
and
and
dec
cmp
lea
fsubp
movsb
clc
stos
hlt
loop
leave
add
movsb
mov
push
jbe
mov
or
xor
mov
shrl
scas
test
stc
movsl
out
mov
push
dec
fsubrs
pop
shr
loopne
dec
std
pop
cmpsl
cltd
loop
xor
mov
cwtl
push
es
push
pop
jmp
cwtl
call
pop
mov
jmp
incb
mov
pop
inc
dec
push
adc
ret
les
stos
adc
ss
rorb
fisubl
ja
inc
mov
fisttps
shl
mov
fnstcw
sub
push
cmp
cwtl
shlb
fisttpll
hlt
movsl
xchg
lret
push
fnstcw
mov
je
push
adc
clc
push
cwtl
enter
decb
add
pop
outsl
sbb
mov
mov
popa
testb
lahf
js
or
js
mov
clc
out
or
mov
ret
dec
mov
or
sbb
lret
sub
out
cmpsl
sub
jg
int3
out
push
mov
mov
or
xchg
lods
push
sbb
fistps
clc
imul
adc
push
repnz
mov
xor
xor
mov
insb
test
lods
xchg
and
push
cmpsb
ja
inc
testb
js
insb
dec
pushf
pop
dec
loop
negb
gs
repnz
outsb
dec
call
pop
jle
cld
orl
je
jnp
inc
or
jg
fsubrp
shl
leave
mov
dec
shrb
mov
xor
mov
fstps
sub
mov
xor
add
ficoml
lds
pop
pushf
jae
insb
fnstenv
sahf
out
repz
ficomps
jmp
cmp
lahf
add
jl
mov
fdivrs
mov
outsl
mov
inc
or
cld
inc
mov
lods
sub
pusha
pop
nop
daa
dec
or
xchg
pop
or
in
rcr
arpl
loopne
push
scas
out
les
mov
push
push
mov
cmp
push
dec
lods
adc
push
adc
xchg
lods
pusha
push
in
adc
movsl
jge
push
dec
repnz
outsb
jne
pop
xchg
adc
loopne
xlat
call
sbb
arpl
push
pop
add
mov
xlat
push
and
dec
and
rolb
cli
mov
mov
mov
mov
add
out
cli
push
sub
sbb
sbb
stos
shrl
xchg
push
fnsave
ss
cmc
call
mov
pop
data16
xor
rcrb
lret
ficompl
fadds
ficomps
pop
loop
ret
xor
sub
sbb
or
pop
xor
inc
xchg
test
aad
xlat
cmp
rcr
shl
mov
xor
cmp
jl
lds
popa
cmpsl
insl
cmp
andb
jle
lret
std
fisttpll
js
lret
cli
int
jle
outsl
jo
ds
push
xor
shlb
or
adc
pop
js
or
add
stos
fsubs
mov
dec
popa
rcrl
add
aaa
shll
jg
mov
add
jp
pop
mov
aad
jbe
out
inc
dec
push
mov
push
arpl
addb
sub
mov
subl
adcb
adc
maxps
cmp
add
push
inc
mov
shlb
xlat
scas
addr16
int3
scas
shlb
xchg
cmp
mov
sub
aad
mov
fs
fdivl
imulb
pop
xchg
inc
pop
mov
mov
xor
in
pusha
decb
and
fnsave
mov
and
sub
pop
or
mov
push
xor
mov
mov
and
jg
cli
fimull
shlb
ret
clc
pop
sahf
and
in
mov
dec
mov
mov
popa
imul
testl
xor
lock
mov
jp
out
mov
mov
or
mov
ret
cld
jl
ss
and
jne
inc
lret
gs
rcrb
jo
mov
cld
pop
adc
inc
inc
lret
in
clc
mov
mov
cmp
in
fiaddl
jl
pop
adc
sub
test
mov
mov
pop
insb
mov
ja
out
mov
iret
cmp
mov
bound
rcrb
hlt
cmc
aas
insl
pop
nop
push
ficoms
fdivrs
lea
xchg
fcmovnu
sub
data16
lret
mov
jge
hlt
mov
roll
cmp
push
jmp
xchg
cmp
mov
shr
adc
xor
and
cmp
mov
jle
fcom
aaa
in
out
cld
adc
stos
test
mov
int3
push
fisttpll
pop
pop
call
mov
in
test
out
sbb
dec
insb
jmp
pop
push
mov
fbstp
ficoms
and
push
in
cmc
out
jle
sahf
sub
inc
std
or
or
icebp
pop
sbb
inc
xchg
frstor
lret
stc
movsl
xchg
out
popf
or
incl
in
sbb
subl
aas
add
por
xor
repz
adc
jo
dec
mov
dec
mov
pop
lcall
cmp
in
mov
inc
out
movsb
pop
outsl
inc
dec
jmp
leave
imul
pop
dec
sahf
dec
popa
leave
xchg
roll
push
inc
jp
sbb
ret
cwtl
shr
shll
and
aad
fistps
es
ja
xor
mov
sbb
out
mov
push
paddusb
pusha
adc
out
cmp
mov
aas
mov
lcall
mov
shrb
sub
int3
xlat
mov
shl
push
sahf
add
bound
test
or
pushf
lret
imul
cmp
mov
jecxz
cmc
mov
xlat
mov
xchg
fwait
cmp
xor
in
mov
xor
insb
adc
mov
mov
jp
rcr
std
mov
jb
mov
add
sbb
inc
in
fs
leave
add
pop
icebp
pop
in
call
mov
dec
mov
bound
push
push
push
cmp
pop
xchg
loope
sbb
rcrb
sbb
nop
jno
xor
roll
xchg
pop
jmp
mov
xchg
rcrl
inc
sarl
mov
aad
mov
dec
xchg
fiaddl
pop
stos
dec
test
jae
pop
notb
xchg
mov
pop
fimuls
shr
and
aaa
jecxz
push
fnstsw
and
call
cltd
mov
cmp
sub
test
lods
out
call
cmpsl
pop
mov
add
popf
push
jmp
call
lea
sbb
sti
inc
loope
ret
mov
iret
xchg
jp
imul
push
push
pop
push
hlt
test
add
sub
xchg
icebp
mov
icebp
loopne
pusha
sbb
aad
popa
int3
lods
loop
test
subb
mov
je
es
dec
shlb
sahf
jns
dec
jno
iret
icebp
in
xor
hlt
andl
cwtl
lods
inc
hlt
jnp
add
mov
stos
outsb
mov
pop
xchg
int3
leave
inc
inc
fs
inc
push
shrb
xor
loop
push
lds
ret
sbb
addr16
jbe
mov
sbb
lods
lock
sub
xchg
fisttpll
addl
inc
mov
push
pop
sti
jge
test
mov
push
lea
push
gs
std
out
and
add
inc
cmp
jmp
xchg
popf
dec
ljmp
std
xchg
pop
daa
and
pop
lret
outsl
out
jns
push
adc
mov
mov
in
int
jae
lea
arpl
aad
imul
jnp
out
mov
cmc
jno
incl
shlb
xor
insb
dec
arpl
mov
sbb
aad
sbb
adc
fdivs
xchg
popf
push
pop
mov
loope
lods
xchg
pusha
jp
pop
fists
mov
aaa
addr16
inc
mov
adc
in
insl
xchg
and
jbe
aas
mov
lret
loopne
push
cli
aam
xor
call
mov
mov
imulb
lods
xor
mov
mov
loop
popa
jns
clc
call
sbb
imul
int
or
mov
les
call
insb
test
jecxz
mov
jp
fwait
mov
fwait
push
push
cli
jle
add
mov
cmc
add
jae
stc
cmp
inc
test
dec
popa
sub
repz
test
sub
pop
mov
bound
pop
push
push
jp
jl
lret
adc
in
test
mov
lods
sub
push
iret
and
fdivl
xor
adc
mov
inc
mov
loope
adc
gs
dec
xor
adc
mov
jno
jno
iret
sbb
add
cmp
loope
and
das
xchg
subl
jecxz
cmpsb
xchg
adc
clc
ljmp
add
lcall
xchg
xor
loope
shll
push
insb
push
je
mov
lods
add
mov
cmp
mov
jbe
outsl
mov
loopne
inc
mov
mov
and
and
fcomip
insl
test
sbb
or
mov
pop
cld
sbb
mov
loope
and
push
push
push
pop
and
inc
scas
test
sarb
pop
es
cmpsl
push
fcomp
in
rorl
jg
pushf
xor
popa
stos
cwtl
xchg
repz
xor
insb
in
shl
inc
or
push
xchg
fimull
jb
lock
fsubrl
cmp
shlb
scas
lock
inc
jo
imul
mov
xor
ret
pusha
lock
cmpsl
or
icebp
fsubl
lea
bound
popa
push
popf
and
enter
incl
add
add
add
leave
or
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
sub
movl
mov
andl
movl
sbbl
push
movl
mov
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
xor
add
movl
jmp
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
xor
mov
xorl
xor
mov
addl
add
xorl
movzwl
mov
mov
addl
movzwl
movl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
jne
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adcl
mov
xor
xor
decl
add
mov
sbbl
mov
inc
xor
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
not
movl
movl
movl
and
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
notl
mov
sub
mov
andl
xor
add
mov
not
mov
je
mov
orl
mov
adcl
xor
xor
subl
sub
sub
xor
mov
incl
mov
mov
add
subl
imul
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
xorl
or
adcl
mov
addl
mov
subl
mov
xorl
add
adcl
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
mov
addl
add
adcl
and
mov
or
mov
mov
sub
mov
orl
lea
mov
mov
mov
incl
sub
movzwl
adc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
addl
mov
adcl
xor
adcl
add
movl
jne
jmp
adc
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
aaa
xchg
jae
mov
xor
int3
mov
xchg
jp
add
jp
psraw
pushf
cs
setg
push
aad
test
flds
jno
popa
xchg
cmp
inc
xchg
xchg
call
mov
push
and
test
call
mov
and
cmp
addb
xor
cmpsl
add
xchg
imul
pusha
call
adc
lahf
ret
in
adc
cld
ljmp
adc
ret
ret
mov
mov
data16
cwtl
cmp
sahf
lds
cmpxchg
lods
ss
fisubrs
or
xor
out
or
cmp
gs
dec
int3
cmp
inc
cmp
outsl
mov
outsl
jle
sbb
in
loopne
ret
cmp
imul
mov
inc
jne
cmc
mov
lret
in
add
daa
gs
mov
fs
scas
pop
sbb
cmp
mov
or
shrb
xor
adc
mov
sbb
cmp
setb
jp
test
inc
mov
or
fnstsw
xchg
push
lret
sbb
pushf
mov
idivl
fdivl
jnp
dec
fwait
lds
sbb
pop
adc
outsb
jns
dec
pop
push
lock
pusha
add
pushf
push
scas
push
jno
test
iret
sub
mov
mov
cwtl
or
and
cmpsl
ss
push
jns
pushf
sbb
cwtl
mov
lods
pop
jmp
in
outsl
mov
sbb
call
push
inc
and
es
xchg
pop
mov
clc
stos
adc
mov
ljmp
lahf
sub
xor
daa
jmp
inc
lods
cmp
sub
sub
out
xchg
pop
daa
scas
pop
dec
outsl
mov
in
add
push
js
pop
leave
sbb
inc
mov
hlt
test
adc
cmp
andl
test
jae
and
cmpsl
subl
nop
cwtl
ret
ss
jecxz
fists
int
hlt
cmp
push
xlat
jg
insl
sbb
lea
pop
mov
pushl
movsb
dec
sub
imul
sbb
fwait
out
mov
inc
aad
jecxz
in
push
jge
sub
out
cwtl
mov
clc
insl
aaa
jnp
cmp
mov
ret
test
cltd
aad
nop
mov
ljmp
xor
cli
je
cs
push
lahf
mov
xor
cwtl
dec
pop
mov
ss
f2xm1
ror
outsb
rcrb
mov
mov
and
js
jl
push
lea
xchg
jg
pop
addb
sub
int3
and
xchg
push
aad
jne
pop
add
loop
or
xor
sbb
or
loope
loope
test
cld
nop
fnstsw
out
push
pop
outsb
imul
pop
call
sbb
loopne
aaa
sub
pop
testb
adc
fsts
sbb
cmp
cld
div
pop
push
jecxz
add
sahf
scas
cmp
popf
stos
sarb
mov
or
xchg
mov
xchg
daa
xlat
loop
popa
pop
push
mov
fcom
jge
sub
add
mov
push
mov
lock
or
cs
out
out
cmpsl
mov
mov
mov
mov
lret
neg
jp
inc
jo
jb
adc
sbb
xchg
mov
xchg
call
gs
je
sbb
sbb
in
into
imul
cld
mov
mov
in
shll
fdivrs
aas
cmp
pop
sbb
inc
and
jecxz
ja
and
sbb
adc
sub
pushf
int
fs
lret
icebp
movl
lods
push
push
out
sbb
cmp
push
inc
lods
jo
in
sbb
lds
je
loope
xor
add
xlat
jne
or
rcl
sbb
dec
ror
int3
in
lcall
roll
fwait
insl
xor
push
enter
sub
in
icebp
xchg
lds
sbb
pushf
sub
popa
sub
jnp
or
ret
sbb
push
mov
sbb
pop
addr16
jl
push
mov
cltd
repz
jg
mov
or
sarl
fstpt
outsl
cmp
int
cmp
test
fisttpll
in
movb
and
mov
sbb
jo
pop
adc
xchg
dec
dec
jb
push
mov
ds
pop
aad
rorl
pop
fwait
inc
fs
add
cwtl
outsb
shl
jo
fnstenv
inc
adc
enter
std
shl
lea
fstpt
out
inc
test
dec
fsubrs
xchg
push
mov
cvtps2pd
dec
imulb
testb
push
out
insl
std
divl
jl
fnstcw
lcall
fs
popf
add
fstps
push
mov
int3
sub
scas
adc
cmc
mov
stc
pop
push
adc
xchg
push
pop
fmul
in
adc
and
in
pop
lret
jg
add
sbb
pushf
fiaddl
int3
sbb
cmpsl
add
sti
stos
mov
push
sbb
cwtl
mov
jae
fiaddl
call
inc
cmp
xor
mov
jae
ret
add
mov
fnstsw
pop
pop
movl
pop
push
loop
cs
imul
fstpt
sub
stos
pop
gs
insl
mov
repnz
xchg
ud1
bound
or
imul
sarl
pop
adc
bound
loopne
frstor
sbb
enter
in
xchg
add
add
rcll
jle
loopne
mov
leave
mov
lea
in
add
rcl
xchg
xchg
sub
mov
pop
enter
shl
int
movsl
xchg
jb
jl
lock
mov
inc
inc
sahf
lock
add
fsts
sti
aas
sub
xor
mov
pop
stos
cmp
es
lods
into
and
and
rclb
mov
lods
je
mov
dec
fwait
cli
test
jmp
sahf
pop
sub
and
cld
ror
push
add
or
loopne
leave
imul
or
ljmp
or
cs
add
gs
push
filds
sbb
mov
jno
sbb
dec
sti
cmp
test
popa
mov
xor
xchg
fsubrs
jne
push
and
shlb
iret
lret
lret
je
imul
imul
aas
push
xchg
mov
jmp
call
repnz
xor
pusha
pop
push
cmp
int3
gs
rcrl
test
mov
mov
arpl
sbb
and
shlb
xorl
test
mov
leave
popa
rcll
movsl
loop
in
mov
xor
lret
jb
mov
inc
jbe
fmuls
xchg
add
sbbb
mov
cmp
sti
inc
leave
hlt
gs
jl
fdivs
or
sbb
loope
out
or
pop
into
jbe
add
adc
les
or
ljmp
scas
or
pop
cmp
lods
pop
jne
mov
or
mov
inc
rolb
into
out
mov
aad
shll
bnd
rol
lret
data16
hlt
mov
pop
xchg
pause
std
mov
cmc
pop
add
push
xchg
data16
frstor
adc
sub
xor
and
adc
cmpsb
stos
lret
mov
movsb
addb
or
daa
mov
push
xchg
clc
aaa
xchg
inc
je
mov
mov
rcrb
xor
ja
sub
iret
jnp
push
ljmp
nop
pusha
clc
push
test
sbb
lea
rorb
cmpsb
lea
add
cmpsb
mov
dec
jp
jmp
dec
std
push
mov
add
pop
pop
outsb
stc
xchg
into
movsl
mov
unpcklps
jns
incb
in
xchg
mov
ficoms
mov
stos
lcall
xchg
clc
pop
sub
or
dec
cmpl
fmul
push
fwait
mov
push
adcl
inc
push
jmp
adc
push
sub
inc
push
mov
cs
inc
sub
mov
daa
jne
imul
cmp
or
in
pop
xor
sbb
dec
mov
cltd
xchg
jb
movsb
pop
push
js
dec
jg
test
test
sub
mov
in
jnp
testb
sbb
scas
addr16
pop
movsl
xchg
push
lcall
pop
fcomps
mov
out
push
mov
or
out
addr16
inc
add
push
stc
push
pusha
and
cld
or
mov
sub
sti
lea
popf
xor
and
leave
fildl
icebp
adc
push
std
inc
and
ljmp
jbe
mov
xchg
cmp
mov
inc
push
sub
xchg
cmp
fadds
lea
test
nop
mov
imul
test
lods
cmp
leave
add
jl
mov
cld
xchg
stos
mov
mov
or
cmp
fnstcw
lcall
dec
test
pop
inc
ds
cli
add
aas
jbe
add
loopne
enter
or
jp
bound
push
adc
and
aam
xor
mov
push
sub
xchg
adcb
mov
pusha
clc
test
or
out
sub
mov
inc
adc
ljmp
dec
add
push
adc
js
mov
iret
and
dec
add
lea
loop
cmpsl
leave
fstpl
mov
ljmp
je
mov
mov
and
jmp
mov
push
jg
filds
jae
xor
cmp
push
or
sarl
movsl
mov
push
xchg
mov
repz
xchg
sbb
or
out
jge
cmpsl
xlat
ja
mov
cmpsl
sub
adc
mov
pop
out
clc
orb
out
pop
insl
xor
mov
out
mov
aad
adc
mov
xchg
mov
mov
scas
dec
lock
test
pop
aad
dec
mov
and
sbb
cltd
jo
jge
jmp
insb
push
inc
leave
fcoml
cmp
mov
and
fmul
inc
xor
lret
pusha
aaa
push
pop
mov
arpl
repz
dec
mov
sub
pusha
cmp
outsl
out
adc
or
ret
inc
rclb
in
loopne
outsb
mov
imul
dec
orl
cmpsl
rol
dec
cmp
or
push
inc
dec
inc
out
mov
sub
mov
stos
xchg
mov
xchg
inc
adc
cltd
sbb
into
test
mov
push
movl
xlat
adc
lea
mov
add
ret
push
jnp
fistpl
dec
sub
and
or
mov
cmc
adc
addr16
or
push
rcr
mov
pop
jle
call
sbb
leave
dec
pop
ret
fcoml
mov
or
incl
jno
cmp
xorl
test
shlb
addr16
mov
ret
ficompl
cmpsl
dec
stos
in
or
insb
dec
mov
jno
pusha
inc
clc
mov
cmp
dec
fwait
add
xor
rclb
and
push
pop
mov
cmpsl
push
xchg
push
push
icebp
mov
cld
movsl
cwtl
out
jle
int3
mov
adc
jecxz
shlb
dec
inc
aad
mov
xchg
inc
xorl
cmp
movsb
bnd
sbb
loopne
test
adc
push
fldcw
shlb
aas
add
insl
xor
jg
jp
adc
cmp
aam
mov
fwait
gs
out
sbb
push
jp
dec
push
mov
mov
lock
aam
fwait
cmp
and
ja
stos
mov
fs
mov
rclb
mov
orb
or
or
or
mov
dec
dec
xchg
sbb
sub
ss
jle
clc
or
jns
adc
in
adcb
inc
jp
inc
fs
pop
les
pop
xor
xchg
fistpl
adc
mov
daa
sub
shrb
insl
pop
inc
push
leave
in
fldpi
cmc
or
arpl
repz
xchg
mov
and
aam
mulb
in
pop
popf
inc
jae
inc
subb
jne
adc
das
out
cld
inc
jns
pushf
movsb
sbb
or
sbb
push
push
popw
test
loop
adc
xchg
cmp
xchg
enter
sahf
adc
sub
movsb
xchg
mov
mov
insb
pushf
aas
mov
lods
push
int
mov
or
js
mov
jns
mov
mov
lcall
xchg
rol
lock
mov
xchg
mov
add
outsl
sti
and
xchg
sbb
inc
pop
push
cmpsb
dec
mov
dec
jmp
mov
call
push
bswap
xchg
mov
cli
xor
icebp
outsl
push
fstpt
adc
jbe
mov
inc
lret
fldt
ret
sub
outsl
insl
gs
xor
add
jmp
sbb
and
push
xor
adc
mov
xchg
jmp
mov
xor
inc
repz
out
into
outsb
es
xor
adc
push
lods
cmp
mov
xorl
and
cmp
sbb
or
push
xor
into
ss
push
xor
mov
and
adc
xor
xor
stc
out
xor
ret
adc
push
push
sub
jp
frstor
sub
push
cmpsb
arpl
mov
lock
mov
dec
jmp
sub
fsubrp
out
pusha
imul
add
sub
xchg
aas
sub
xchg
jae
pop
add
or
lret
dec
pop
adc
push
call
fs
js
push
dec
jmp
mov
mov
test
std
and
stos
fistpl
push
jb
idivb
mov
arpl
pop
dec
add
jle
sti
and
mov
int
mov
imul
push
in
pusha
pop
push
inc
arpl
aaa
pop
movd
scas
aaa
cmpsl
or
pusha
dec
shrl
mov
fcmovnb
mov
xor
mov
jecxz
cli
mov
inc
mov
out
cli
sub
mov
cmp
test
jl
add
in
pop
sub
popf
mov
sahf
jl
cmp
popa
xlat
mov
test
int3
out
inc
fbld
rclb
or
inc
imul
testl
ja
mov
negb
lret
adc
mov
lahf
lea
ss
das
mov
xor
jnp
stc
sbb
outsl
ja
inc
out
call
or
cmpsl
das
mov
push
adc
out
mov
pop
sbb
xchg
sub
nop
xlat
mov
xchg
in
ficoms
inc
xlat
pusha
add
shrb
mov
cmc
je
xor
das
cltd
mov
mov
cmpsb
cmpb
sbb
add
stc
mov
decb
mov
jl
jp
shl
rorl
and
push
mov
mov
in
or
dec
movsb
mov
test
mov
dec
aaa
jnp
lahf
fistps
mov
jge
pop
aam
inc
lods
jge
movsb
shl
ret
filds
aad
fwait
test
pop
jne
int
dec
inc
lods
dec
outsl
push
mov
xlat
jb
jns
rolb
or
xchg
cmpsb
out
cmp
daa
push
xchg
cmp
jmp
fbld
cmp
adc
cmp
mov
cmp
ret
adc
lods
repnz
pop
fnstsw
pop
mov
sbb
data16
mov
movsl
dec
sub
ja
shlb
rcll
bound
pop
mov
jmp
xchg
popa
stos
inc
or
divl
and
cmpl
sbb
ds
sub
in
push
loop
test
push
cld
mov
mov
mov
lods
xchg
imull
sub
repnz
loope
jnp
pop
mov
es
adc
cmp
lds
out
mov
orl
xchg
sbb
sub
mov
sbb
mov
in
enter
or
dec
rcl
push
stc
mov
dec
jno
fs
or
gs
dec
in
and
jmp
jne
xchg
stc
mov
out
in
and
mov
sub
xchg
and
dec
js
cwtl
add
add
jmp
sbb
xchg
cs
pop
stos
loope
pop
pop
pop
loop
pop
sub
pushf
in
push
adc
call
sbb
push
mov
mov
sub
dec
jns
das
fsubl
js
lret
out
mov
aam
ds
ret
mov
xchg
push
data16
or
jmp
adcb
inc
dec
mov
jl
mov
mov
in
aam
negl
in
and
mov
or
xor
or
cmp
leave
inc
sbbb
lcall
pop
outsb
scas
ficompl
cli
jae
cmc
push
xchg
scas
push
repz
pop
mov
jno
push
sbb
js
xlat
ss
pop
mov
fdiv
fdivrs
push
aas
cmp
sbb
mov
enter
push
sub
push
jp
dec
push
setno
stos
mov
loope
repz
mov
out
mov
loopne
cmpsl
adcl
mov
pop
xchg
jbe
mov
es
daa
popa
sbb
aas
and
pop
and
push
pusha
push
cmpsb
sub
dec
and
aaa
mov
ror
sbb
or
mov
stos
xor
and
jb
out
enter
das
rcrb
cmp
hlt
mov
jecxz
or
fbld
mov
cld
push
xchg
cs
clc
mov
adc
ret
dec
repnz
lahf
test
insb
xor
pusha
arpl
mov
ja
ret
std
jbe
mov
aad
jne
gs
stos
hlt
pop
dec
mov
pop
mov
sbb
imul
enter
rcrl
fwait
mov
push
or
and
movsb
dec
notl
jecxz
cmc
sub
push
lea
stos
or
pop
std
in
push
push
rcll
shll
lahf
push
add
xchg
repz
stos
clc
xor
aaa
push
add
das
sbb
push
jbe
pop
xor
add
xor
jns
dec
pop
cmp
add
sub
shl
data16
test
cld
xchg
test
mov
stos
xchg
adc
dec
dec
mov
cmpsl
mov
stc
cwtl
adc
rcrl
adcl
je
sbb
xor
pop
pop
sub
popf
xchg
push
dec
loopne
add
jg
inc
ds
xchg
lea
sahf
mov
jecxz
mov
dec
cltd
mov
pop
ficompl
dec
sti
xchg
std
jle
push
sar
jmp
mov
fistps
cltd
repz
xchg
pop
xor
sub
pop
out
aam
repnz
scas
aad
cmpsb
push
mov
inc
popf
push
add
insb
ljmp
jecxz
outsb
add
ret
dec
mov
adc
and
daa
outsl
out
popl
jl
xor
push
sub
sub
sub
add
xor
test
cmp
push
push
cmp
mov
xchg
pop
cmc
dec
test
push
xor
dec
rorb
addr16
dec
mov
add
jne
mov
dec
adc
into
loopne
cli
shlb
cmp
cmpsl
fdivp
xchg
enter
int
scas
mov
loopne
shlb
mov
or
xchg
push
lcall
pop
into
daa
pop
push
fcomip
stos
mov
and
xor
test
in
test
clc
out
daa
test
loopne
data16
xchg
jno
or
roll
addr16
adc
mov
xchg
in
movsb
xchg
lcall
scas
call
in
add
or
das
popf
fisubs
jno
inc
sahf
jne
or
push
pop
mov
adc
mov
icebp
and
add
sub
mov
push
push
pop
rorb
inc
lahf
scas
movsl
hlt
or
imul
xchg
ds
shll
fsub
das
jge
and
jge
jae
int3
push
pop
stos
pop
mov
addr16
cmp
mov
mov
sbbb
jnp
jmp
mov
test
dec
fbld
gs
xor
popa
dec
scas
lods
hlt
xor
pop
mov
or
push
sbb
popa
lock
lcall
jnp
xchg
and
insb
je
xor
mov
add
popa
mov
lods
std
jp
push
pop
lods
mov
outsb
rorl
sub
scas
ss
pop
sub
icebp
ds
jb
jle
insb
je,pn
mov
adc
mov
xor
scas
or
mov
mov
es
xchg
cmp
xorb
sbb
mov
pushf
sbb
and
leave
sub
js
mov
inc
cmp
loop
cmp
in
insl
adc
in
and
imul
xor
lcall
mov
fwait
cmp
cmp
in
dec
inc
test
mulb
pop
push
loopne
and
jo
pop
sbb
xchg
lcall
dec
adc
dec
imul
clc
fucom
shrb
pop
cmp
sub
pop
addr16
mov
jl
fistpl
push
int3
std
mov
js
xorb
mov
in
pusha
xchg
stos
sub
test
sub
mov
push
lea
mov
test
scas
xchg
or
sbb
neg
mov
out
cltd
pop
cmp
adc
and
les
jecxz
xchg
inc
aam
mov
xor
mov
or
andb
jo
jbe
add
lock
int
pop
movsb
add
sarl
scas
nop
jne
rcl
mov
jp
shr
in
xchg
nop
out
push
in
xchg
and
ss
or
mov
inc
inc
stc
mov
jmp
lahf
pop
cmp
test
lcall
cld
and
mov
and
lahf
dec
push
mov
add
pop
xchg
dec
stos
jne
fsts
lcall
ret
lret
ret
sbb
mov
shll
lock
rcrb
pop
dec
mov
mov
push
xor
cmpsl
aad
in
je
roll
aad
lcall
popf
xchg
cwtl
pusha
flds
into
lods
sahf
test
and
adc
cli
inc
imul
fwait
lods
and
fwait
cmc
pop
push
int
push
fwait
and
addl
test
push
outsl
mov
fmuls
les
mov
pop
pinsrw
dec
sbb
and
cmp
test
scas
sub
insl
mov
std
data16
adcl
pusha
fmulp
inc
mov
loop
push
inc
xchg
out
shl
ja
add
jno,pn
test
sbb
xor
cmovae
lea
jp
insl
inc
xor
clc
adc
mov
push
loop
data16
inc
and
add
out
pop
imul
xchg
rcll
mov
xor
insl
out
sahf
inc
sub
stc
ret
adc
sbb
rorl
int3
lret
jecxz
insb
fcoms
pusha
scas
sub
push
aad
mov
sbbl
pop
add
adc
mov
pop
pop
xchg
gs
sahf
mov
add
and
mov
xor
int3
test
out
mov
pop
and
xor
enter
sub
jnp
lea
fimull
int
sti
dec
bound
push
add
lock
shlb
ret
cwtl
mull
pop
mov
loopne
iret
aam
xchg
adc
mov
lods
xchg
loop
inc
push
sbb
mov
and
aad
es
push
mov
fiadds
mov
and
cltd
add
subl
stos
and
jl
fstpt
cmp
mov
movsb
fimull
mov
iret
inc
popl
add
ss
ds
xchg
lcall
inc
lods
dec
cli
mov
ret
push
adc
dec
loope
mov
dec
jmp
outsl
pushl
adc
loopne
add
das
inc
repz
dec
xor
mov
movsl
xlat
stc
inc
jg
dec
or
fists
insb
xchg
sar
movb
adc
xchg
jns
cmp
enter
xor
cmp
mov
sbb
mov
sbbl
testl
movsb
fbld
in
scas
inc
sbb
cld
xor
dec
xor
jne
shl
les
popa
xor
mov
ret
mov
jle
add
mov
xor
cmp
dec
mov
cwtl
add
shl
fld
ljmp
mov
push
shrl
or
sahf
sub
mov
addr16
dec
pop
ljmp
movsb
xor
mov
cs
xchg
enter
or
lret
out
sti
pop
repnz
insl
mov
sti
mov
gs
mov
cmp
lods
cmp
inc
jmp
xchg
and
xchg
hlt
pop
sub
pushf
push
push
aas
push
lock
mov
cmp
mov
test
sub
pop
data16
shll
adc
mov
int3
dec
inc
jecxz
cs
inc
movsl
xor
mov
fldcw
cmp
lds
or
fimull
mov
jae
adc
movsb
inc
movsl
shrb
out
cmpsl
repnz
test
mov
push
test
popf
ret
loopne
mov
and
data16
scas
add
stos
pop
pop
push
mov
sbb
aas
add
pop
sbb
shll
lcall
push
mov
jb
pop
in
shll
jmp
mov
jge
sbb
cmp
inc
jg
int
push
xchg
jg
scas
imul
inc
xlat
fdivs
shll
sahf
iret
or
into
cmp
dec
in
test
push
jge
xchg
mov
push
je
popf
sub
lock
sub
jnp
jecxz
add
inc
dec
leave
add
fsubs
ror
dec
mov
sbb
addr16
ffree
inc
mov
sub
push
imul
jp
push
test
test
inc
jne
dec
stos
sbb
es
pop
push
adc
outsb
xor
cmp
fwait
pop
cmc
xchg
jge
pop
cmp
imul
test
jae
xchg
test
dec
aam
xchg
enter
jle
das
int
ret
sub
xor
fwait
daa
xchg
mov
or
jne
sbb
testl
sub
inc
or
adc
push
sbb
xchg
xor
or
fwait
loopne
sub
cmp
mov
add
and
mov
cmp
sbb
fwait
jns
lret
ja
mov
scas
lret
iret
xchg
cmp
inc
sub
nop
incb
testb
ret
sub
call
es
cmc
rcrb
ja
js
jo
fnstsw
call
inc
les
cwtl
mov
mov
mov
and
jp
dec
jl
add
mov
mov
cwtl
inc
inc
fcoml
mov
fldcw
push
shlb
jp
jno
pushf
stos
loope
sahf
cmp
dec
jg
inc
sub
mov
pop
or
add
test
jle
push
mov
test
repz
out
scas
jge
pushf
out
aas
jge
mov
or
popa
fdivr
data16
sti
cwtl
sub
stos
fcoml
dec
push
inc
push
repnz
inc
loopne
dec
rcrl
adc
in
add
subl
loopne
xchg
xor
inc
mov
subl
jb
mov
ret
daa
xor
xchg
and
hlt
pop
leave
cmp
dec
xchg
mov
loop
cmpl
jns,pn
sub
cs
xor
fisubl
cmc
leave
inc
js
and
sbb
cmpsb
push
stos
loope
and
mov
into
in
lds
or
sbb
dec
xlat
inc
adc
adc
xor
out
mov
aad
xchg
loope
mov
enter
testl
mov
imul
mov
jp
xor
push
test
outsl
cli
and
mov
inc
xchg
xchg
mov
mov
jp
cltd
sysenter
ljmp
mov
int
mov
xchg
pop
scas
xor
xor
or
jecxz
dec
sub
sti
test
jnp
add
inc
mov
pop
cmp
inc
sbb
fs
push
js
push
ljmp
dec
stos
xchg
pop
cmc
rcr
mov
js
sbb
xor
mov
or
dec
negl
xchg
in
sbb
push
pop
scas
out
mov
jmp
aas
stos
adc
inc
push
adc
sbb
mov
dec
push
lds
or
cwtl
sub
and
loope
xor
push
hlt
add
test
mov
mov
imul
in
pushf
cld
fdivrl
dec
ja
aaa
dec
jmp
gs
mov
push
sub
cli
insl
inc
sti
xchg
leave
jle
jbe
arpl
mov
push
add
enter
dec
xlat
push
or
cmp
mov
sbb
mov
jle
jb
loopne
ret
sub
mov
push
dec
mov
sub
ret
stos
mov
les
mov
rcr
mov
jge
add
mov
lahf
adc
xchg
sbb
rdrand
xor
jmp
mov
das
insb
and
mov
sbb
int
and
stc
shl
xor
add
xchg
add
push
testl
adcl
pop
call
inc
pop
adc
or
dec
rcrb
inc
rolb
ja
inc
adc
enter
inc
mov
adc
imul
adc
pop
jg
frstor
and
bound
adc
push
inc
mov
xor
pop
fadds
jg
fmuls
popa
popf
push
shr
adc
jg
cmpsb
nop
cmp
insl
mov
mov
dec
outsl
sarl
test
pop
mulb
xor
stc
push
xchg
sbb
or
cmpsl
clc
adc
sahf
js
in
xor
movsl
imul
and
test
dec
rcr
cld
mov
scas
cld
and
mov
mov
xor
cmp
xchg
pop
cltd
shll
adc
add
popf
seto
cmpsl
and
and
lcall
mov
and
sbb
push
ficoml
xchg
xchg
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
out
push
and
outsb
fs
mov
scas
jp
add
jp
inc
sbb
fidivrl
mov
jmp
cmp
jmp
xlat
mov
jnp
pop
dec
leave
mov
mov
sub
popa
mov
mov
imul
cmpsb
push
jnp
push
hlt
insl
mov
fnstenv
mov
and
and
aas
dec
jnp
fwait
sbb
pushf
ja
jno
dec
fninit
adc
and
cmp
xor
mov
mov
pop
dec
outsl
sub
pop
dec
dec
sub
push
mov
pop
out
inc
dec
push
in
stc
cwtl
lea
sbb
cmc
xchg
ljmp
adc
popf
movsb
arpl
cmpb
mov
addl
sub
add
jno
hlt
cs
orl
or
pop
xchg
das
xchg
adc
sub
lcall
aaa
adc
mull
add
movsl
in
out
les
insl
mov
fldt
push
sbb
repnz
sbb
add
and
pop
cmp
js
dec
adc
jo
xchg
enter
in
loop
pop
and
daa
xor
out
enter
jge
lods
mov
dec
insl
hlt
andb
jg
sbb
cmp
dec
adc
or
arpl
dec
jecxz
imul
jg
das
sub
lea
and
movsl
adc
decl
stc
push
sub
pop
loope
sbb
inc
enter
xchg
or
repz
inc
mov
fstps
push
in
mov
add
inc
sub
lds
int3
xchg
rclb
pusha
xchg
or
out
sbb
ret
lods
stc
inc
adc
pop
jmp
push
xchg
js
fstl
fildll
ds
push
adc
mov
mov
pop
int
pop
mov
xor
lds
pop
shlb
xchg
mov
or
xchg
pushf
outsb
cmc
sub
push
and
aas
loop
sbb
add
fwait
scas
ret
arpl
jmp
arpl
adc
mov
jno
or
mov
lods
jmp
notb
mov
mov
icebp
pop
les
mov
mov
lahf
fstpt
popf
and
jmp
stc
les
and
adc
and
or
adc
sbb
mov
icebp
aaa
mov
mov
daa
addr16
mov
cmp
lea
rcl
test
outsb
xor
fadd
mov
mov
mov
sbb
imul
cmp
scas
or
shrl
xor
jp
mov
pop
rcrb
in
loop
or
inc
daa
xor
cmpsl
dec
sbb
dec
cmpsb
imul
pop
add
lret
xchg
adc
shl
jb
loope
sbb
jle
lods
out
es
les
mov
pop
adc
or
jne
dec
aad
std
test
out
lret
xor
mov
mov
sub
add
daa
sbb
repz
inc
mov
sbb
stos
pop
push
dec
outsl
cmc
xchg
push
jmp
gs
xchg
adc
pop
movsl
lret
pop
mov
fadds
push
imulb
add
into
fistps
in
idivb
out
or
adc
jno
sahf
inc
cs
imul
aas
cmpb
push
dec
xchg
or
cmpsl
ds
xor
mov
mov
xchg
jecxz
adc
cs
and
sub
insl
iret
sbbb
cmpsb
je
aad
inc
mov
dec
add
movsl
pop
iret
xlat
pop
das
mov
in
mulb
stc
add
aaa
ja
in
shll
leave
xchg
sub
adc
xor
sbb
and
sahf
xchg
setnp
int
mov
movsb
xor
sub
rcrb
in
mov
scas
insl
jns
cmp
xchg
jnp
adc
add
sbb
jb
pusha
int3
addr16
pop
fdivr
and
out
in
lahf
add
mov
xchg
flds
xchg
sub
call
out
add
inc
xchg
jecxz
imul
dec
orb
mov
mov
mov
dec
pop
jnp
inc
mov
adc
pop
mov
popf
xor
mov
cmp
sbb
adc
mov
fwait
test
iret
mov
inc
or
das
lret
shl
jo
scas
pop
pop
mov
inc
pop
std
mov
shll
nop
xchg
rcll
int
adc
mov
dec
add
lcall
and
pop
loope
adc
pop
lods
mov
inc
mov
add
mov
add
cmpsb
add
leave
vpsubd
and
ss
inc
xor
push
pop
insl
sbb
inc
stc
test
mov
test
inc
sbbb
lret
scas
sub
dec
xor
cmpsb
add
mov
loopne
mov
test
push
popa
add
mov
add
sub
mov
andl
test
aad
jl
jbe
inc
mov
lods
and
pushf
xchg
loope
sbb
inc
adcl
aas
fisubl
lods
lret
sbb
clc
ljmp
aas
fucomp
fsts
mov
dec
jne
sub
sub
adc
dec
fs
mov
mov
mov
ds
fstpt
mov
aas
ret
movsb
mov
mov
popl
dec
pop
insl
inc
gs
or
call
inc
movsl
outsb
jno
inc
clc
int
inc
icebp
jae
jecxz
mov
push
dec
scas
cmp
into
xchg
addr16
jae
cli
cmpsb
adc
aad
sub
cmp
mov
lret
pop
mov
aam
jge
cltd
aaa
inc
js
out
mov
and
cmp
aad
jle
xchg
xchg
notl
mov
pop
and
jg
jle
jge
sub
mov
xchg
dec
aad
push
imul
in
bound
mov
inc
jge
add
jecxz
mov
add
push
dec
mov
test
lea
mov
or
cwtl
inc
jne
mov
les
push
popf
test
mov
sbb
popf
pusha
fmull
sub
cmp
and
fbld
push
loop
mov
popa
ljmp
adc
xchg
pop
mov
mov
iret
pop
xlat
jbe
add
xor
lahf
cmp
xor
xchg
adc
push
ja
cmc
jl
test
cmpsl
and
sbb
sahf
loop
cmovp
mov
jb
xlat
into
sbb
gs
inc
xchg
scas
divl
add
popf
dec
inc
fmuls
pusha
sbb
inc
adc
pop
fidivs
lret
ja
mov
push
jb
mov
cmpsw
cmp
jns
adc
push
add
inc
jae
pop
mov
aam
lcall
testl
xchg
cmp
inc
ja
mov
rorb
in
dec
sub
add
and
pop
fisttps
cmp
mov
daa
cmp
mov
fistl
mov
jb
shr
xchg
xchg
dec
sub
dec
out
lahf
push
test
rcrl
dec
mov
xchg
sbb
sub
or
or
or
lods
jb
pop
mov
cmc
xor
jmp
cld
in
lret
mov
hlt
mov
dec
sub
mov
xor
out
mov
orl
cmp
mov
jl
or
pop
and
test
mov
movsb
sub
leave
test
scas
shll
fsub
push
cltd
mov
mov
add
scas
hlt
mov
ljmp
jbe
arpl
jb
pop
dec
push
pop
sub
jmp
and
jne
or
rcr
out
cmpl
sub
shlb
jp
mov
adc
or
test
lods
adc
and
jb
lahf
mov
jns
mov
xor
cwtl
pusha
xor
lock
loop
push
push
mov
movsb
lods
iret
stos
push
sub
cmp
pop
mov
out
sbb
mov
adc
shlb
rcr
imul
aam
cltd
inc
roll
inc
mov
call
je
sbb
mov
bound
sub
mov
cmpsw
ds
inc
out
dec
insl
rcrb
jb
adc
fists
ss
xor
lods
and
lods
cltd
je
sub
lock
fwait
dec
pop
pop
add
cs
cmp
add
test
cmc
push
jns
sub
fwait
or
jg
jp
mov
mov
xor
mov
xor
mov
mov
xor
xchg
inc
or
jne
mov
sbb
jge
mov
sub
inc
sub
les
adc
mov
sbb
int3
cli
bound
test
test
xchg
aad
sub
js
jo
ds
iret
mov
sub
out
mov
adc
dec
daa
adc
adc
xchg
cmp
jecxz
jo
rcr
ss
adcb
pop
push
rcrb
mov
addl
rolb
push
dec
sahf
push
mov
fsubrs
fldenv
outsb
jae
adc
scas
fsub
adc
cmp
test
add
add
pop
mov
je
xor
mov
mov
bound
mov
and
mov
sbb
loope
aas
fwait
mov
cwtl
or
mov
popf
sub
mov
mov
jns
daa
xchg
jecxz
mov
xchg
jbe
inc
insb
pop
lock
stos
cmp
aad
cmp
mov
sbb
js
aaa
imul
aaa
insl
loopne
adc
xchg
or
xchg
adc
jmp
jnp
jb
and
and
xlat
ljmp
leave
scas
loop
sub
repnz
ds
dec
sub
xchg
add
ret
nop
stos
scas
cmp
mov
loopne
or
stc
icebp
clc
popf
inc
icebp
mov
rorb
fwait
subl
xchg
in
ljmp
outsl
fdivrs
inc
hlt
push
ss
cmpsl
or
repz
test
lods
cmc
popa
sbb
les
mov
std
xor
scas
mov
mov
adc
push
lods
cmpsb
iret
out
or
dec
xchg
jge
aad
pop
das
out
cli
outsb
and
push
pop
or
xchg
xchg
lret
movsl
hlt
push
addb
data16
push
xor
cmp
rcrb
cs
inc
test
inc
data16
pop
jp
shll
and
stc
loop
lret
outsb
std
xor
lret
jmp
insb
int
cmp
aam
mov
push
adc
push
scas
mov
add
ret
sub
lret
pop
leave
pop
jl
sub
in
subb
push
es
inc
cmpsl
shll
in
mov
int
dec
sub
mov
push
adc
adc
jnp
mov
fwait
xchg
xchg
jmp
mov
aad
int
mov
xor
and
jecxz
test
sbb
test
cmp
ret
push
test
enter
frstor
fiadds
repnz
sahf
aas
ja
xchg
inc
fiaddl
pop
push
sbb
cmpl
xchg
adc
sub
mov
es
aad
and
add
repnz
arpl
mov
mov
loopne
jmp
in
dec
fbld
cmp
outsl
sbb
shlb
out
jg
pop
xor
xchg
pop
sbbl
daa
jmp
jmp
mov
add
icebp
add
jmp
xor
mov
call
jae
ret
aam
repz
ljmp
pop
sahf
inc
push
es
inc
shlb
cmp
testl
dec
mov
shl
idivb
mov
call
jns
fidivl
shl
aas
cli
dec
in
and
out
stos
xor
sub
sub
std
add
adc
pusha
mov
clc
push
xor
mov
push
push
dec
test
mov
xor
or
test
lock
test
dec
inc
popf
iret
lods
ror
pop
mov
das
loope
xor
sahf
and
sar
inc
sub
xchg
fldcw
mov
fistpll
test
or
mov
call
test
movsb
into
outsl
aam
pop
mov
pop
test
sahf
cli
pop
dec
jmp
cmp
sub
or
xchg
loope
mov
mov
mov
call
and
leave
pusha
pushf
in
jae
push
fsubs
jno
rol
fnstcw
dec
clc
pop
jp
loopne
jbe
xchg
mov
loop
cmp
sbb
mov
jle
pop
into
sti
test
shll
mov
je
hlt
add
jmp
mov
sub
gs
out
pop
into
mov
roll
stos
pop
jns
jae
mov
stos
jge
dec
jne
clc
mov
subl
and
jne
arpl
and
test
sub
outsl
iret
pop
not
out
or
and
adc
lret
add
cmp
pop
loopne
sub
in
pop
pop
and
mov
add
scas
dec
add
mov
jb
stos
push
push
clc
int
cmp
frstor
push
cmpsb
addr16
xor
lods
add
mov
loop
mov
cwtl
xor
arpl
fisubl
fwait
or
fistps
cltd
daa
lcall
gs
pop
adc
rcl
insl
lds
sti
dec
mov
mov
xorl
xor
pop
add
mov
xor
cmc
adc
mov
xchg
fistps
lret
dec
popa
imul
xchg
mov
cmpsl
jle
jb
sub
mov
imul
push
lcall
scas
mov
fwait
cwtl
cmpsb
loope
pop
sbb
cmp
xchg
push
pop
loop
push
mov
clc
loope
fwait
add
adc
or
mul
mov
adc
mov
pusha
and
stc
xorl
or
mov
fmuls
cmp
add
negl
sub
in
and
mov
add
mov
xor
inc
or
iret
inc
mov
dec
sub
cld
hlt
movsl
push
mov
andb
and
sbb
ja
leave
shlb
pop
jns
cs
dec
in
sub
iret
enter
pop
adc
sub
jnp
fs
or
sar
enter
jne
pushf
cmp
pop
loopne
jns
fcomp
and
adc
pop
add
lods
or
adc
sbb
inc
mulw
xor
nop
xchg
push
lods
xchg
dec
stc
dec
mov
dec
jo
or
push
loopne
inc
mov
jnp
pushf
push
flds
lods
add
mov
sbb
dec
xchg
cmp
das
leave
fisttpl
jge
cmp
nop
iret
pop
mov
jmp
imul
fimuls
ljmp
sub
test
outsb
call
test
jne
jl
mov
call
in
je
mov
mov
pushf
ret
aam
imul
xor
cmc
fstl
test
jecxz
aas
incb
jge
xor
ret
and
fs
sub
pop
icebp
stos
out
or
xchg
sbb
xor
nop
and
leave
cli
leave
or
add
push
movsb
dec
stos
out
pop
pusha
pop
stos
sbb
mov
jg
or
xor
icebp
sub
xchg
xchg
sbb
jl
sub
jns
bound
pop
sbb
aaa
fwait
add
inc
in
outsl
cmp
mov
imul
shr
inc
aaa
test
mov
loop
push
imul
inc
adc
int
bound
fstps
stos
cli
insb
xchg
dec
push
pop
rolb
mov
jno
sbb
in
xor
cmpsb
jno
movsb
int3
inc
fs
loopne
dec
rcrb
and
mov
mov
fwait
push
scas
mov
notb
add
push
je
pop
mov
aas
out
cwtl
lods
mov
repz
negl
in
repnz
in
jno
cmp
jmp
xchg
inc
add
cltd
call
int
sarl
push
add
or
dec
outsb
mov
dec
scas
notl
andl
mov
push
movsb
std
push
xchg
xor
test
push
jns
into
and
ficoms
and
push
xorl
loop
xor
dec
xchg
ljmp
push
mov
das
negl
mov
xor
cmpsb
jmp
out
jge
xchg
loopne
jmp
jo
dec
int3
xchg
mov
leave
adc
or
sbb
push
xor
mov
movsb
jno
cwtl
push
pop
fldenv
inc
aas
or
pop
scas
cmp
push
cmc
xlat
mov
or
mov
fs
or
mov
xorb
or
sbb
xor
jge
lahf
cs
mov
xlat
push
enter
sub
mov
call
jecxz
sub
adc
pop
jno
test
xchg
filds
stos
orl
mov
push
pop
js
fcmovnu
mov
pop
cld
js
test
imul
inc
shlb
lock
adc
and
push
fucomp
jns
cmc
and
int3
mov
adc
jno
cwtl
insl
cmp
jae
cwtl
and
stos
stos
addr16
inc
xor
int3
in
push
inc
pop
jp
mov
mov
inc
xor
out
push
scas
mov
mov
push
popf
adc
movsl
incb
sub
fadd
out
dec
cmovl
adc
data16
ja
add
pop
pop
dec
ds
fdivrl
sbb
xchg
xor
int
outsb
sarb
mulb
cmp
cmp
cmp
dec
push
dec
add
outsb
mov
fiadds
popa
inc
aaa
pop
cli
mov
sub
in
add
lods
inc
xchg
insb
cmp
repnz
or
repnz
aad
mov
cmp
add
add
mov
dec
andl
xlat
jp
jnp
test
scas
lahf
dec
inc
mov
cld
cmpsl
push
sbb
cmc
movsl
fidivs
jns
js
jbe
mov
mov
clc
rorl
pop
pushf
shrl
cmp
out
fs
daa
imul
test
cs
pop
hlt
test
into
sbb
mov
mov
dec
jo
arpl
push
test
pop
ljmp
pop
add
rorl
xor
push
in
ss
pushf
ds
mov
or
lock
inc
aas
jne
cmpsl
add
push
dec
mov
push
jg
mov
loop
aaa
rcl
xor
outsb
cmpsb
fchs
xchg
rorb
add
dec
lret
xor
dec
mov
pop
stos
push
xor
push
out
inc
or
movl
xchg
adc
push
out
pop
mov
test
loopne
shrb
gs
or
add
jge
dec
or
jo
jnp
pusha
mov
enter
push
or
or
push
inc
mov
mov
cmp
lret
push
pop
loopne
jl
and
sub
jae
popf
jecxz
daa
pushl
xor
adc
jb
sub
add
fcomp
add
arpl
jae
repz
hlt
mov
sub
aam
mov
mov
adc
inc
xchg
lds
pusha
ss
scas
ljmp
pop
testl
fsubr
sub
sub
pop
popa
add
or
mov
popf
fiadds
sbb
mov
test
push
sbb
mov
adc
sbb
in
inc
imul
rcl
sar
sarb
push
faddl
xor
mov
mov
ret
push
lea
dec
movsb
xor
dec
xlat
ficoml
mov
scas
sub
push
jbe
mov
lahf
sbb
cli
dec
int
add
dec
sub
jmp
xchg
mov
sub
ljmp
lcall
lcall
or
add
xchg
ss
adc
mov
les
jp
xor
xchg
notb
and
cmp
scas
lods
adc
out
xor
arpl
movsb
cmp
jge
jb
sub
inc
cli
test
shll
nop
jl
cvtps2pd
push
out
mov
jg
dec
test
lds
lcall
adc
pop
dec
test
add
cmc
cmp
push
ljmp
jns
xor
out
les
icebp
cmpsl
mov
add
sbb
imul
jbe
sbb
aaa
inc
or
out
push
out
imul
lahf
xlat
xor
mov
mov
mov
sti
inc
adc
adc
or
fisubl
mov
stos
push
and
mov
insl
movsl
cmp
insb
cwtl
gs
jecxz
mov
int3
int
in
jno
sbb
push
dec
push
and
dec
sbb
xor
pop
stc
push
stos
add
cmc
aad
xchg
dec
push
gs
pop
cs
adc
stc
aam
divps
icebp
outsb
rolb
shll
sub
mov
jne
call
iret
js
ret
push
js
insl
cmpsb
sub
call
aas
push
pusha
sbb
mov
sub
js
jns
nop
test
jmp
cmpsb
cltd
inc
repz
cmp
sbb
aaa
mov
mov
xchg
sahf
movsb
inc
and
in
ficomps
xor
push
mov
jbe
pop
addr16
test
cltd
add
mov
mov
clc
testl
mov
jnp
mov
add
mov
mov
popf
insl
call
xchg
fwait
ja
repnz
xchg
ljmp
dec
jecxz
enter
test
push
sbbb
ret
stos
mov
fnstenv
loope
dec
enter
sahf
and
push
in
pop
and
xor
push
pop
fstps
in
adc
insl
inc
into
mov
fldenv
and
push
mov
test
xchg
gs
jnp
iret
movsb
sub
loopne
insb
pop
jae
mov
adc
xlat
data16
pop
cwtl
clc
fistps
jne
into
repnz
cmp
jecxz
std
lods
test
push
std
dec
add
jns
jns
enter
lods
xor
push
ljmp
inc
sahf
pusha
data16
leave
cmc
adc
adc
add
fbld
idivb
cmp
adc
fildll
pushf
iret
cmc
adc
and
movsl
mov
aaa
hlt
clc
clc
outsl
and
enter
sarl
popa
or
out
mov
cmp
fists
inc
xchg
int
push
in
insl
mov
adc
int3
adc
stos
jns
jecxz
es
dec
hlt
icebp
xor
adc
pop
mov
jbe
mov
pushw
xor
cmp
jle
js
cmp
dec
je
in
daa
push
rep
out
jo
ljmp
sub
jo
repnz
and
fldenv
call
adc
and
iret
mov
xchg
mov
sarb
loopne
sub
lea
aam
lods
push
mov
subb
cmp
mov
movsl
fs
daa
popa
popa
sub
lods
jmp
inc
mov
xlat
outsb
mov
adc
xchg
insl
out
xchg
mov
mov
jge
mov
mov
ret
or
aas
aas
mov
or
scas
and
ret
maxps
aaa
mov
pop
lds
ja
cmp
test
jp
popf
or
mov
iret
in
mov
mov
cmc
push
mov
sbbl
call
and
sub
sahf
sbbl
sbb
jb
hlt
out
push
pop
mov
repnz
ficoml
ljmp
imul
dec
xchg
iret
shrb
testb
test
mov
mov
out
cmp
imul
test
fnstsw
gs
push
inc
movsl
mov
push
int
push
imul
mov
addr16
lock
mov
cmpsl
mov
pop
enter
lods
notl
jecxz
jg
xlat
pop
adc
fidivs
mov
mov
nop
sub
mov
arpl
jle
ficomps
cmp
subb
dec
xor
aad
xchg
fbld
push
jle
popa
or
icebp
dec
sbb
in
in
insb
daa
inc
xchg
mov
int
mov
insl
push
repz
jae
sti
stos
and
inc
dec
jo
insl
ja
sbb
lds
push
sbb
cs
shrl
sub
movaps
and
lods
add
fdivl
mov
sub
cmp
lds
shr
xchg
mov
mov
inc
or
les
adc
ljmp
sbb
push
and
sbb
mov
xchg
ljmp
push
fcmovb
in
lods
fwait
enter
jmp
iret
push
xchg
ja
pop
test
jae
xchg
js
push
in
xchg
in
push
fadd
jae
dec
push
push
sub
adc
fisubrl
jp
mov
inc
and
add
stos
lea
les
xchg
cltd
rol
test
scas
mov
sbb
jge
lods
ljmp
push
mov
sbb
pop
mov
repz
das
std
or
mov
jae
lods
mov
cmp
sahf
jns
xchg
rorb
add
fdivrl
mov
ja
add
fcompl
dec
aaa
xor
push
add
dec
sbbb
add
rol
xchg
push
add
mov
fiadds
xchg
xchg
mov
and
dec
pushf
repnz
fwait
xchg
and
sub
jmp
movsl
lcall
lods
xlat
gs
incl
outsb
les
imul
in
ja
jg
arpl
int
or
shrb
adc
stos
mov
mov
scas
addb
inc
into
xor
dec
imul
add
jg
out
dec
adc
xchg
cmp
repz
aam
pop
and
popf
aas
aaa
daa
and
js
fadds
pop
lods
mov
in
test
dec
mov
dec
add
adc
mov
sub
push
sbb
push
nop
xchg
fcmovnu
mov
stos
sahf
push
movaps
loop
in
pop
push
or
dec
push
push
cmp
add
jl,pt
test
mov
testl
in
push
mov
fcmovbe
mov
jno
outsl
add
decb
mov
jle
adc
jne
scas
jle
and
jmp
fs
cmp
aad
out
hlt
fadds
data16
push
xor
pop
sbb
iret
jns
cli
lret
stos
je
hlt
imul
fcomps
ret
push
mov
push
cmpsl
or
shr
xlat
adc
test
lods
in
testb
or
push
andl
js
loop
jne
push
orps
das
cmp
xor
mov
popa
sbb
inc
arpl
push
mov
sbb
mov
push
or
in
gs
test
jecxz
mov
sbb
jp
fstl
xor
gs
mov
xlat
loope
imul
mov
xchg
sub
std
sub
push
pusha
pop
pushf
or
pop
and
std
lds
push
push
xchg
xor
jl
pop
movsl
popf
adc
push
inc
mov
mov
dec
repnz
std
nop
aas
pop
sbb
add
fcoml
or
cmp
pop
outsl
lcall
push
sbb
jae
dec
cmp
push
sti
hlt
pop
arpl
in
iret
mov
shr
arpl
fstpt
in
fisubl
repnz
adc
sbb
xor
mov
mov
mov
inc
jmp
lcall
sbb
ret
addl
fcoms
out
xchg
jp
mov
pop
ljmp
aaa
dec
mov
sub
inc
lcall
xor
push
sbb
call
cmp
fs
lcall
sbb
stos
movsb
inc
enter
mov
inc
and
cld
mov
iret
loopne
mov
adc
and
sahf
cmp
and
pop
mov
sbb
das
call
mov
int
icebp
int3
pop
or
inc
xchg
dec
mov
xor
mov
and
push
cld
data16
loop
and
xor
xor
dec
push
lea
xlat
loop
xchg
inc
pop
inc
shll
adc
xor
loop
pop
jo
lcall
out
fstpt
jl
lea
ljmp
shrb
xchg
leave
cmp
and
nop
aaa
xor
push
mov
addr16
idivb
mov
imull
cmpl
mov
mov
sti
out
loope
fs
les
int
in
ucomiss
mov
outsl
lds
pop
cmp
fsts
mov
add
push
test
and
cwtl
out
clc
scas
lret
mov
lahf
pusha
sbb
fistpl
loop
xchg
mov
adc
outsb
push
jns
cs
lcall
cmc
nop
xchg
bound
cwtl
dec
pop
dec
sbb
inc
sahf
push
xor
lods
out
loope
jne
inc
mov
repnz
or
push
jle
and
ret
add
pop
in
mov
sbb
cmp
push
in
mov
in
lds
ret
or
mov
mov
ss
add
pusha
insb
xchg
cmc
cmc
fsubr
cmp
push
cmp
imul
enter
inc
sub
lods
or
dec
pop
lret
sbb
mov
imul
lea
jp
sbb
int
jle
imul
cmp
pop
xchg
inc
loope
lcall
ja
push
pop
mov
or
dec
sbb
out
xor
fwait
movsb
pop
gs
daa
sub
test
lock
fistps
cmp
call
push
mov
je
idivb
add
cmpsb
test
test
or
adcb
push
cmp
jo
push
xor
cwtl
fwait
arpl
ret
ret
xor
adc
mov
lds
clc
jp
aas
dec
negb
cltd
popa
fimuls
dec
andl
int
jae
jg
dec
pusha
push
cli
pop
clc
and
call
test
push
xlat
stos
ja
fidivl
adc
xchg
sub
mov
out
divb
dec
fnstsw
push
ljmp
scas
shlb
sbb
jb
stos
jb
push
pop
test
insl
and
mov
es
jo
cld
mov
cmp
push
push
or
outsb
insl
mov
int3
addr16
lret
in
addl
adc
shlb
std
mov
push
adc
sbb
lods
and
xchg
or
sub
inc
mov
push
idivb
fs
push
pop
mov
push
push
add
push
push
mov
mov
inc
rcll
inc
adcb
adc
insb
jle
push
aad
add
out
jmp
and
jecxz
sbb
inc
xchg
push
in
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
push
pusha
clc
push
call
add
or
pop
cmp
mov
jp
add
jp
xchg
popf
inc
sub
ffree
add
xchg
scas
adc
jo
repz
mov
jle
lods
cmpsb
ljmp
cmp
mov
sbb
jle
decb
out
push
adc
das
sub
push
or
xlat
push
pop
push
test
sarl
ds
sbb
rcrb
add
adcb
leave
int
arpl
sbb
ror
dec
bound
dec
sbb
sub
and
loopne
dec
xor
xchg
dec
call
shrl
mov
mov
jmp
or
mov
inc
in
leave
cmpsb
gs
adc
add
xchg
cmpsl
int3
jmp
leave
sub
jecxz
pop
addl
mov
das
or
rol
sbb
mov
and
or
mov
jb
jno
fsubrs
jl
adc
mov
call
popa
pop
pop
adcb
ljmp
cld
outsb
mov
rcll
sahf
rorb
or
lret
pop
loop
xlat
xchg
dec
fiadds
leave
lret
push
pusha
jnp
jns
inc
and
das
mov
sbb
int3
dec
pop
sbb
ficoml
mov
aam
loope
in
jo
andb
jge
add
xchg
or
jmp
jbe
sbb
imul
gs
jl
cmp
push
add
jnp
jne
jecxz
or
mov
sarl
jge
fisubrs
sub
test
lods
sub
xchg
or
sub
mov
nop
inc
sbb
outsl
mov
lcall
enter
das
gs
jmp
dec
mov
gs
into
int3
stos
je
jno
arpl
adc
sbb
or
lcall
mov
xorl
xor
adc
arpl
cwtl
mov
clc
cmpsb
mov
or
pushl
xchg
repnz
cmp
cld
sub
imulb
or
negb
xchg
pop
pop
es
sub
je
inc
int3
inc
and
stc
test
add
outsl
push
adc
xchg
int
mov
cltd
pop
cmp
pop
lods
sub
mov
das
lret
jb
mov
xor
mov
jno
mov
das
stc
mov
sbb
fisubl
xor
push
cmp
adc
pushf
cmpsl
push
in
or
xor
cwtl
dec
jno
in
bound
pusha
arpl
xchg
dec
lods
jg
mov
mov
inc
mov
lds
jge
imul
adcl
inc
cmp
sarb
std
sbb
cmc
pop
lcall
ret
mov
push
dec
sub
stos
pop
dec
repnz
jae
lea
iret
pop
add
xor
clc
stc
fisttpl
sbb
jb
push
cmpsb
mov
dec
cmp
enter
clc
inc
pop
test
mov
cmp
mov
and
lret
stos
jmp
movsb
jecxz
lcall
test
scas
je
in
jo
imul
daa
outsb
push
test
dec
iret
pop
fistpll
jae
std
divb
in
and
mov
jno
sahf
out
pop
test
fucomip
sbb
sub
push
pop
sub
pop
xchg
scas
or
rorb
xor
in
or
lcall
jb
aas
jecxz
push
sub
lock
jg
nop
dec
in
int
inc
popf
fdivs
ljmp
fistpll
fucomi
inc
into
test
mov
push
jbe
xchg
test
es
cltd
cmpsb
pop
outsl
fstpl
push
ret
mov
clc
rorb
push
fs
inc
clc
inc
fst
das
pop
xor
ret
ss
or
push
add
in
inc
cld
fldt
mov
pop
andl
cmpl
and
je
gs
pop
xor
cmp
insb
loope
shl
enter
sbb
repnz
testb
and
mov
fcoml
and
add
push
push
sub
sarl
push
pop
ret
enter
or
xor
gs
daa
repnz
out
rolb
rcll
cmp
jnp
push
adc
mov
jb
pop
insb
sbb
mov
pop
insl
setnp
dec
sbb
and
mov
movd
test
jbe
imul
dec
dec
ficompl
shlb
test
loope
lret
adc
inc
dec
sub
mov
push
xchg
stos
in
lds
in
sbb
jbe
mov
popa
insb
out
xor
pop
mov
and
mov
popa
adc
mov
jmp
ficomps
popa
mov
enter
xchg
xchg
dec
sbb
in
xchg
ss
fucom
adc
or
aam
xchg
shll
pusha
jbe
xchg
test
iret
icebp
xor
test
jbe
jmp
jns
mov
or
call
pop
mov
cmp
push
ss
xchg
stos
rcrl
jbe
mov
add
callw
push
arpl
pushl
daa
imul
rclb
shll
or
stos
mov
lods
xor
push
cmp
inc
es
enter
out
loopne
mov
das
fwait
push
insb
and
loop
dec
pop
addr16
and
mov
mov
mov
push
sti
dec
mov
adc
shl
into
ret
ret
dec
xor
mov
fmuls
mov
sub
insb
clc
clc
inc
inc
mov
outsl
popw
addr16
xchg
aam
push
mov
inc
add
std
pushf
aam
xor
scas
fidivl
xchg
leave
pushf
inc
push
push
cltd
sbb
add
das
add
das
arpl
push
jo
inc
cmp
pop
mov
sbb
imul
in
mov
movd
and
scas
nop
mov
add
mov
out
adc
jno
ja
mov
lods
lods
push
jnp
in
jmp
jl
sbb
test
icebp
decb
inc
jne
mov
push
cs
mov
shrl
insl
xor
push
je
ss
add
loop
lock
inc
ss
add
notb
adc
dec
in
mov
int3
mov
mov
into
or
push
and
outsl
mov
repnz
popf
fiadds
cmp
jns
push
test
cld
push
addr16
jno
jl
movsb
lahf
mov
jl
lds
mov
out
flds
inc
cmc
dec
jnp
mov
outsb
movsb
dec
sub
fiadds
pop
jns
rcrb
add
outsb
call
inc
icebp
mov
repz
sarl
sub
cld
aam
imull
rorl
adc
pop
sbb
cmp
cmp
imul
sub
mov
popa
xchg
test
rclb
add
lock
push
imul
dec
and
pop
mov
jne
pop
in
push
mov
xchg
lods
or
pushf
or
mov
sti
mov
sbb
add
scas
mov
test
inc
sbb
mov
neg
shlb
outsb
push
cs
sub
cmp
sub
mulb
xchg
or
xor
adc
mov
imul
cld
or
sub
int
adc
ffree
push
sbb
adcl
out
test
dec
test
adc
cmp
xor
mov
dec
xchg
aad
les
imul
ja
push
sbb
xchg
adc
or
fildll
inc
dec
jae
and
in
das
jb
pushf
mov
inc
pop
pop
mov
test
jno
inc
cltd
in
jno
jb
pop
orb
out
shlb
jge
pushf
cmp
jp
and
push
pop
mov
push
mov
push
xor
rcrb
xchg
scas
popa
jecxz
pop
adc
lea
mov
add
jns
hlt
rcll
js
sbb
or
mull
jg
loope
leave
pop
xchg
dec
add
inc
sbb
arpl
jb
pop
jae
leave
xor
aam
xor
scas
mov
xchg
jp
mov
or
sbb
xchg
sbb
or
pop
lret
rcrl
xchg
insl
dec
rcrl
xor
bound
fisubrl
mov
addr16
das
xor
mov
push
xor
inc
pop
jne
jge
xor
call
pop
inc
out
add
jl
xor
mov
int3
addl
nop
or
shll
and
inc
sub
adc
add
daa
sbb
pop
in
mov
js
int
pop
jmp
mov
and
dec
or
lret
scas
jns
sbb
roll
ret
std
fdivl
pop
cltd
cld
jecxz
mov
xchg
lret
int3
das
dec
ret
es
jl
pop
lahf
mov
push
mov
bound
pop
sbb
inc
mov
cwtl
stc
push
push
jle
fmulp
xlat
mov
repz
mov
xchg
dec
cltd
push
lahf
or
pop
loopne
adc
mov
stc
adc
mov
in
cmpsl
es
out
xchg
cmp
push
dec
arpl
jo
movsl
add
mov
int
and
cmpsb
and
dec
aad
nop
negl
ja
addr16
pusha
incl
int3
lds
xor
add
in
inc
fdivrl
pop
mov
subl
leave
ret
xchg
jge
outsl
fidivrs
jl,pn
call
fbld
jbe
int3
inc
cmc
pop
sbb
in
sti
jns
cmp
jb
dec
pop
mov
add
cmp
rcll
jle
and
pop
stos
int
pop
icebp
call
popa
sbb
mov
or
push
fstpt
leave
and
ret
xor
and
mov
xor
out
dec
sahf
icebp
stos
mov
xor
sti
cs
into
jmp
filds
xchg
imul
mov
mov
add
cmp
cmpsl
lock
inc
mov
aad
cltd
xor
inc
mov
push
push
xchg
push
or
cs
mov
leave
mov
or
xchg
sbb
fldenv
xchg
mov
sbb
ret
mov
lahf
jns
in
sbb
adc
xchg
push
mov
std
pusha
mov
and
enter
inc
cmp
jnp
mov
je
sbb
sbb
dec
pop
cltd
mov
jnp
xchg
xor
shll
arpl
push
out
mov
pop
or
pop
and
fmuls
sbb
or
push
gs
es
xor
add
int
or
pop
mov
clc
cltd
in
mov
and
push
cmp
jbe
icebp
ljmp
leave
mov
rcrb
ror
sbb
mov
and
iret
gs
push
iret
insl
es
pop
or
push
mov
inc
push
pop
adcb
mov
les
dec
mov
and
mov
or
in
daa
sub
jbe
mov
in
push
sbb
mov
inc
iret
pop
sbb
in
loopne
add
hlt
ss
shrb
dec
mov
mov
aad
mov
cli
xor
add
popa
xchg
push
and
inc
rcll
lds
pop
fnstsw
cwtl
pop
fldenv
push
dec
add
enter
lea
inc
jmp
xchg
jge
and
pop
xor
sub
xor
test
fnstsw
ret
test
push
rolb
aad
adc
sarb
loop
movsl
cmpl
cmp
out
sbb
cmpsl
adc
sbb
push
sbb
push
sbb
testl
das
dec
data16
test
sub
test
sbb
and
push
loope,pt
clc
pop
push
out
xchg
aad
cmp
xchg
fidivl
sbb
mov
aad
mov
jle
dec
andl
jb
ret
loopne
adc
pop
xchg
add
imul
cld
mov
je
loopne
es
inc
mov
pusha
es
js
clc
lods
sub
pop
push
orb
push
xchg
aaa
push
pushf
nop
sub
repnz
pop
in
cli
mov
outsl
das
es
scas
xchg
les
mov
jo
inc
lds
pop
cwtl
es
out
in
cmp
call
and
pop
xchg
fiadds
mov
sub
std
sub
or
sub
mov
out
mov
xor
add
mov
add
adc
shll
pusha
out
dec
repnz
xchg
push
inc
arpl
cmpb
pop
fwait
mov
xchg
inc
adc
pop
inc
inc
mov
pop
add
fisubs
sti
adc
ss
aad
addr16
dec
lods
xor
lods
push
aad
sbb
loopne
mov
inc
addr16
pop
sbb
jmp
add
xor
js
cmp
rcrl
iret
in
cmp
imul
aad
xchg
es
leave
dec
clc
pusha
popf
fiadds
xor
pop
testb
mov
push
xchg
push
push
xchg
inc
xor
push
sub
or
out
mov
dec
push
pop
mov
fcomps
jb
add
pushf
out
or
movsl
mov
in
xchg
mov
cltd
jmp
cs
mov
sub
out
push
jns
sub
pop
aam
imul
into
xchg
outsb
add
xchg
mov
mov
pop
out
cmp
and
dec
sub
divl
sahf
adc
ret
in
enter
pop
out
add
mov
les
pop
aad
mov
adc
shl
outsl
outsb
pop
jecxz
push
out
dec
xchg
lds
aam
lahf
loopne
les
or
subl
mov
mov
and
mov
mov
aam
cmp
mov
ds
cltd
loope
test
xchg
clc
push
mov
addr16
and
movsb
sub
les
aaa
xor
pusha
sub
xchg
cmp
dec
or
xchg
es
sbb
cmp
sti
movsb
xor
lcall
mov
das
shlb
leave
hlt
jle
xor
dec
fbld
push
jb
sbb
test
std
data16
jp
adc
gs
fwait
scas
xchg
fcmovnbe
inc
or
out
add
mov
test
daa
enter
icebp
or
nop
mov
and
scas
mov
xchg
into
std
mov
leave
xchg
imul
into
iret
sub
sub
loopne
jp
out
xor
and
xchg
imul
sti
sbb
lea
and
jecxz
adc
mov
push
sub
int
dec
sub
jg
outsl
lods
jns
and
incb
in
jmp
xlat
stos
lret
lcall
mov
jecxz
sub
shlb
mov
daa
xor
pop
lock
adc
lcall
mov
xor
mov
xchg
idivb
inc
inc
mov
sbb
adc
jne
cs
and
pop
dec
sbb
mov
pop
pop
rcrb
rcr
cli
push
dec
jne
cmp
fsubr
or
dec
add
pop
pop
jne
inc
xor
scas
xor
test
rorb
pop
lea
mov
inc
xchg
aas
out
pop
scas
xchg
add
adc
psubusw
dec
sub
psllw
out
fcomi
xchg
inc
loope
push
or
add
pushf
xor
xor
jb
sub
out
scas
bnd
push
sub
insl
push
fnstenv
xor
xor
lldt
xchg
jmp
dec
xchg
pop
fsub
inc
xchg
xchg
jno
ljmp
movsb
mov
mov
inc
movsb
test
outsb
fs
sub
pop
std
sti
mov
hlt
push
sbb
push
pop
mov
mov
mov
xor
mov
scas
xor
xchg
aam
or
repz
jne
pop
test
mov
xor
popa
fnsave
dec
xor
call
movsl
mov
ja
inc
sbbb
inc
or
sbb
lret
js
pop
fs
xor
jmp
pop
cmpsb
push
add
mov
cmp
xor
into
imul
adc
cmpsl
cwtl
or
xchg
mov
push
je
out
adc
je
add
xchg
jg
lret
addr16
aad
push
incb
je
es
out
popf
or
enter
stos
cmpsb
arpl
mov
out
xor
roll
subb
or
das
shlb
loop
arpl
push
dec
icebp
inc
test
loop
jge
xor
and
imul
inc
inc
das
loope
xor
lret
test
lods
inc
test
xor
sbbb
fld
inc
cwtl
sub
or
pushf
pushf
daa
push
in
pop
jg
cmp
pop
cwtl
jmp
sbb
adc
xor
insb
pop
in
inc
pop
idiv
cmp
sub
sbb
xlat
and
in
sub
sarl
sub
adcl
mov
pushf
out
sbb
outsb
cmpl
cld
int
mov
xchg
test
jnp
cwtl
shll
shrb
jmp
sahf
imul
push
rolb
movsl
push
maxps
fs
cmp
cmp
sbb
test
mov
fs
hlt
xchg
push
or
lahf
aam
dec
sahf
mov
sbb
mov
sbb
es
adc
jnp
adc
test
test
clc
fwait
cmp
dec
xor
mov
stos
inc
jle
xchg
cltd
xchg
in
outsl
fists
insl
imul
push
push
inc
dec
and
les
adc
push
pop
popf
mov
enter
pop
js
sbb
mov
mov
fs
dec
repz
jbe
insb
popa
mov
xchg
insl
push
aas
jmp
mov
outsl
out
xchg
in
mov
jbe
cmp
stc
cwtl
mov
lret
inc
jae
push
lcall
insb
push
xchg
sub
iret
cmp
std
jg
ljmp
or
test
loop
stc
dec
fstps
fs
test
dec
jp
push
loopne
mov
fisttps
in
out
aaa
int3
lret
daa
mov
mov
sbb
push
aam
and
add
arpl
push
cli
and
inc
stc
xchg
and
negl
push
sub
mov
test
stos
ljmp
cmc
fisttpl
cli
fcoml
adc
loope
adc
push
pop
cmpsb
rep
cmpsb
ljmp
push
cmpsl
xor
mov
inc
cld
cmp
mov
andl
jae
add
dec
daa
inc
pop
mov
aaa
js
lods
mov
jmp
mov
adc
add
or
xchg
mov
rolb
lods
mov
aad
or
iret
lret
dec
sub
stos
ret
dec
jbe
aad
cmp
cmp
push
xchg
mov
sbb
les
sub
ret
movsb
fcoms
stos
sub
popa
inc
pop
pop
add
adc
jmp
enter
idivl
ss
bound
adc
leave
xchg
repnz
out
lcall
scas
ror
fs
movsb
mov
sti
pop
pop
out
jnp
mov
add
pop
scas
roll
sbb
xchg
dec
js
xlat
mov
mov
fsubrl
add
je
jmp
in
out
lds
adcb
sar
stc
adc
jno
loopne
xchg
push
and
cmc
mov
out
fisttps
fsubs
pusha
jno
icebp
in
inc
and
mov
lods
sub
pop
inc
out
pop
inc
jle
stos
ret
and
sbb
ja
mov
mov
mov
mov
mov
add
sub
jb
adc
mov
sbb
rcrb
mov
pop
ljmp
cwtl
xor
fdivr
pop
pop
dec
js
std
inc
push
cmpsl
inc
jns
push
xchg
dec
movsl
sub
inc
test
xchg
mov
sbb
aam
mov
or
adc
xor
cmp
jecxz
sbb
add
nop
clc
push
inc
mov
sahf
xchg
push
push
in
mov
aam
bound
inc
add
mov
das
sbb
mov
dec
adc
mov
cmp
inc
inc
pop
les
into
scas
adc
xchg
mov
loop
jmp
inc
arpl
iret
es
adc
ret
jecxz
orl
pop
adc
popa
xchg
cwtl
cwtl
dec
daa
je
int3
mov
adc
out
lds
jae
lcall
and
pusha
mov
xor
or
scas
add
jb
or
pop
fcompl
xor
dec
call
adc
jmp
jo
inc
xor
cwtl
hlt
or
es
push
mov
jbe
out
pushf
push
aaa
dec
sub
jg
rclb
cmp
or
insl
std
in
and
enter
jns
cli
jae
xlat
das
imul
sub
hlt
jecxz
imul
out
push
cmp
leave
and
cwtl
rorb
mov
inc
jmp
inc
mov
jae
inc
inc
push
inc
fwait
test
mov
jnp
jb
loop
push
xchg
int
les
inc
xor
outsb
daa
fsin
sti
fisttpll
bound
out
xor
dec
dec
stc
pop
je
inc
jo
ja
movsb
dec
pop
push
adc
and
and
add
ds
movsb
push
inc
pop
jnp
arpl
xchg
sbb
or
xor
in
cmpsb
les
inc
add
xchg
cld
jno
add
fsubl
mov
or
in
xor
inc
nop
push
mov
jne
xchg
mov
icebp
push
in
mov
ja
out
cmp
gs
pusha
fnstsw
mov
mov
loop
dec
push
push
addr16
and
sbb
xchg
decb
sub
jae
fcmovbe
push
int
pop
inc
out
jmp
sub
stc
es
add
icebp
adc
mov
fcomps
into
mov
sbb
cli
lds
clc
push
xor
mov
adc
cltd
inc
mov
adc
icebp
xor
loope
sbb
ljmp
cmp
mov
xor
sub
push
xor
andl
insb
sbb
inc
adc
inc
scas
lea
cmpl
and
inc
xor
stos
fstl
sbb
and
jmp
dec
xlat
fsubl
movsl
cwtl
sti
pushf
stos
mov
and
sahf
jnp
jp
mov
add
bound
xchg
repz
outsl
call
mov
cli
sub
mov
mov
cld
pop
notl
gs
std
push
sbb
daa
and
pop
jmp
mov
jbe
sub
mov
xchg
dec
jmp
mov
sarb
pop
lods
push
cmp
push
jmp
pop
jnp
scas
iret
ror
mov
mov
in
dec
sahf
outsl
gs
fbstp
pop
sub
hlt
cmpsl
mov
or
and
xor
and
rcl
in
int3
dec
dec
lods
xchg
mov
fisttps
test
dec
lret
ficoms
test
je
mov
fildll
lock
xor
xchg
daa
leave
lret
rol
and
sbbl
nop
jne
iret
call
ljmp
vrsqrtss
shrl
pushf
pop
dec
leave
cmpsl
js
out
xor
sahf
vcmppd
mov
sub
fisttpll
xchg
sarl
ret
mov
aaa
mov
jns
pop
xor
lret
add
pop
sarl
mov
data16
hlt
jge
fsub
out
addr16
add
pop
or
add
sar
bound
add
mov
pop
push
outsl
or
pop
es
xchg
adc
pop
push
pop
shrl
sahf
push
xchg
and
xchg
push
fwait
lcall
push
mov
jno
adc
mov
xchg
sbb
pop
insb
and
cmp
hlt
jecxz
cli
mov
mov
popf
push
push
rol
adc
test
mov
jae
fcmovu
in
pop
dec
xor
pop
ljmp
int3
jp
popf
mov
pop
lret
ljmp
push
inc
sti
fisubrs
push
jnp
add
push
cmpsb
and
cmpsl
pop
add
js
push
dec
add
mov
lret
adc
inc
rorl
scas
sub
push
in
sub
jno
pop
jno
pop
sub
push
jmp
adc
sbb
mov
mov
pop
repnz
outsb
cmp
sarl
jecxz
mov
or
sub
ret
and
dec
push
fwait
mov
sbbb
dec
mov
stos
mov
pop
jp
sub
sbb
test
jmp
repz
popl
sbbl
int
inc
xorl
js
or
add
lea
out
push
sbb
push
jb
daa
div
adc
es
add
add
loope
lahf
rcrl
rclb
cli
sbb
cmp
add
addb
sub
sar
mov
mov
sbb
movsl
push
test
cmc
fmull
stos
xchg
jae
xchg
mov
and
pop
mov
jp
repz
je
cli
cmp
das
mov
mov
or
loopne
imul
stos
je
mov
add
mov
loopne
pop
jnp
and
orl
cs
ret
addr16
adc
pop
fimuls
loope
subl
xrelease
cmp
xchg
jle
push
outsb
inc
and
aas
rcrl
and
jmp
mov
dec
pop
inc
or
lock
popa
xor
cmpsl
cmp
sub
jle
ret
jg
les
adcl
adc
sub
mov
sub
inc
pop
jecxz
jns
movsl
or
test
bnd
test
mov
adc
daa
cs
pusha
dec
pop
mov
test
xor
repnz
imul
inc
inc
imul
fs
lock
imul
cld
jecxz
push
mov
add
leave
test
pop
cmp
jmp
jl
rorl
mov
cs
jg
mov
fisubrs
adc
shlb
xchg
std
sub
mov
dec
mov
bound
dec
dec
repnz
imul
out
sbb
mov
lret
stc
shlb
stos
bound
cs
rcrb
push
mov
jne
add
je
or
orb
and
dec
dec
popf
mov
mov
cld
mov
push
daa
hlt
xchg
and
lods
lods
xchg
adc
push
jns
rcll
lds
pop
in
movsl
sbb
mov
push
into
adc
adcl
shl
sbb
mov
xor
stos
jne
pop
sbb
fisubs
data16
std
pop
xchg
sbb
lret
dec
aaa
cwtl
lods
mov
dec
add
rorb
jmp
push
and
mov
lahf
scas
scas
inc
stc
and
stos
aas
pusha
mov
mov
popf
insb
loopne
pop
mov
aaa
inc
dec
pop
arpl
sbb
arpl
xor
dec
and
das
or
into
ret
xlat
xor
adc
pop
cltd
rol
loop
insb
sub
fiaddl
and
mov
adc
inc
dec
cmp
mov
enter
mov
or
add
jno
cmpb
push
jae
fsubrp
dec
jbe
xchg
cmc
sub
out
addr16
jmp
popa
cmp
ljmp
adc
xchg
sub
jl
adc
insl
stos
pop
fcom
and
mov
mov
movsb
jl
pop
out
dec
into
mov
mov
pop
xchg
mov
sub
mov
pop
add
fcmovu
stos
add
cmp
xor
jp
mov
adc
xor
pop
roll
jne
lods
cld
mov
or
cmpsb
lcall
out
push
cli
sub
mov
cmpsb
sbb
sub
lea
pushl
out
subb
pop
das
and
jl
sti
mov
test
cli
les
and
nop
add
mov
cmpsb
push
insb
pushf
inc
ret
dec
sbb
or
push
push
add
lock
xor
mov
and
sbb
push
pop
push
mov
ja
push
xor
sub
sbb
sbb
in
cmp
fidivrl
int3
inc
das
insb
fdivp
shl
popa
inc
or
inc
movsl
add
aad
jb
imul
dec
add
push
es
into
jae
mov
das
mov
test
mov
adc
lcall
mov
mov
or
sbb
cmp
xchg
push
nop
fcmovnu
adc
ljmp
jg
lcall
pop
pop
mov
cmpsl
sbb
mov
sub
insb
sub
pop
pop
sbb
jp
push
into
into
push
pushf
movsl
daa
adc
adc
rcl
pop
jge
inc
adc
fdivrs
jmp
aas
add
sbb
mov
inc
sub
sahf
call
or
stos
and
ja
jno
jg
lcall
dec
aas
lahf
push
mov
add
insb
mov
int3
and
mov
lods
fwait
js
into
sub
ret
xchg
or
sbb
sarb
and
mov
test
add
xchg
fstp
cmp
sub
in
fiadds
xor
jmp
xor
incb
push
mov
repz
push
mov
pop
std
test
add
and
mov
xor
bnd
scas
mov
pop
lods
pop
ja
sub
aad
popa
incl
lods
ja
and
xchg
cli
jg
decb
in
push
or
aaa
sub
jecxz
mov
mov
or
jae
jns
xor
sub
pusha
mov
xor
std
cmp
fwait
cmpsl
xchg
ja
inc
mov
daa
test
jo
bound
sub
les
cli
fcompl
fsubs
sub
movsl
outsl
hlt
bound
mov
push
mov
inc
cmpb
adc
imul
xlat
sbb
jnp
add
test
mov
int3
lcall
xchg
out
mov
mov
cli
sub
jg
xchg
fdivp
ret
inc
arpl
ljmp
push
dec
pusha
push
bound
xchg
xchg
push
iret
lret
adc
mov
out
aaa
rcrb
dec
inc
fsubr
aam
popa
call
fists
dec
bound
popa
test
test
push
out
mov
bound
and
daa
in
mov
insb
test
adc
pop
int3
pop
xor
fdiv
enter
addb
or
sbb
imul
or
add
jecxz
notb
pminub
dec
repnz
mov
xor
sbb
mov
add
pusha
in
or
xchg
lret
movsb
xor
cmp
fmull
dec
out
outsl
jbe
mov
or
dec
lock
jb
sub
mov
push
test
push
or
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
nop
testb
add
out
mov
cwtl
pop
push
jns
add
jp
ds
mov
jle
ljmp
adc
jmp
jno
loop
jns
fisttpl
pop
loop
in
aam
rorl
lret
and
jns
into
mov
jecxz
pusha
lds
pusha
leave
iret
xor
dec
inc
aam
add
outsl
pusha
ret
shll
lods
fstps
jno
and
push
fisubrl
xor
stc
inc
jge
xor
int
mov
mov
das
jg
in
xor
loopne
sbb
aam
imul
or
loop
lahf
mov
sub
lods
add
add
movsb
or
aam
shlb
inc
fimull
call
fsts
sbb
mov
and
inc
jns
mov
je
lods
movsb
cmp
fwait
pop
cmp
mov
leave
repnz
cmp
inc
fdivl
and
stc
jb
pop
es
dec
xchg
mov
daa
imul
mov
outsb
inc
sti
push
and
adc
ljmp
cli
cs
jmp
fstps
adc
in
mov
test
fcompl
inc
es
fwait
push
mov
stos
in
inc
inc
push
or
add
and
aad
add
push
sub
sti
mov
push
aas
mov
leave
cmpsl
repnz
fwait
mov
dec
jo
out
test
mov
pop
or
pop
add
in
out
popa
scas
nop
mov
mov
lret
or
pop
push
xchg
pop
cli
filds
mov
push
jle
dec
jmp
and
pop
add
and
cmc
mov
sub
je
dec
aas
pop
push
push
xchg
loopne
les
insb
ret
xor
cli
pop
mov
sub
pop
sbb
push
and
in
popf
mov
jne
ja
sub
mov
or
sbb
or
dec
xchg
aad
sbb
out
xchg
stos
push
pop
out
push
jg
imul
aam
outsl
fldcw
decb
inc
in
cmpsb
pop
loopne
pop
jbe
inc
in
stc
imull
push
fs
or
stc
das
stos
fs
and
nop
cmpsb
stc
inc
mov
aad
iret
in
mov
jecxz
js
bound
cwtl
movsb
pop
push
in
int3
jp
cmp
xor
sub
outsb
jle
test
cltd
bound
into
jo
out
pop
lahf
adc
outsl
popa
cld
push
push
push
stos
gs
push
xchg
add
jp
clc
jnp
data16
loop
movsl
and
test
lods
add
test
movsb
enter
cmp
into
movsl
xchg
lret
lret
test
ljmp
inc
insl
push
cwtl
and
push
idiv
imul
rclb
or
adc
arpl
jnp
push
ss
push
js
iret
push
scas
sbb
repz
cwtl
leave
lock
jbe
xchg
pushf
out
out
mov
orl
sbb
and
ret
push
dec
not
adc
ficomps
pop
jge
ljmp
or
in
rcrl
repz
lahf
mov
or
xchg
jae
std
lahf
push
xlat
mov
repz
pop
mov
test
sub
es
or
outsb
inc
out
lea
mov
ss
jbe
add
in
sarb
and
mov
movsl
bound
sub
xchg
pusha
add
stc
or
loope
das
pop
pushf
inc
xor
or
cmp
rol
dec
fstl
xlat
inc
pop
ljmp
aaa
lahf
mov
mov
bound
mov
jbe
stc
mov
xor
jb
gs
xchg
push
xchg
fxch
adc
jnp
addr16
fdivp
inc
aam
arpl
inc
int3
lods
mov
adc
lds
xor
insl
or
int3
cmp
loop
movsb
inc
outsl
lea
mov
push
pusha
icebp
les
call
stos
imul
stos
ljmp
xor
imul
std
movaps
js
divb
mov
fwait
xchg
addb
idiv
cmpsl
add
pop
pop
jge
mov
shll
repnz
dec
jne
xchg
hlt
stc
sti
stos
xchg
or
mov
ds
xrelease
pop
push
pop
push
mov
lcall
lods
mov
inc
push
cwtl
sbb
mov
adc
scas
or
scas
mov
and
xchg
add
jbe
popf
test
mov
call
mov
lock
and
mov
pop
adcb
push
es
inc
xor
pop
sbb
add
rorb
mov
ret
jg
test
cmpsl
sub
call
ja
jb
loope
popf
mov
sub
imul
mov
pop
and
insl
add
std
push
int3
or
leave
subl
out
nop
dec
rorb
xlat
fsubr
stos
adc
insl
mov
mov
in
cmc
inc
mov
adc
cmp
cli
pop
scas
fidivrs
mov
push
jno
cld
fisubs
ja
roll
jge
push
lahf
popa
clc
xor
push
insl
in
adc
rorb
shl
clc
cs
pop
jo
jl
pop
imul
adc
adc
cmp
ja
add
inc
add
xor
inc
push
lret
stos
fnstcw
ds
cltd
mov
test
out
xchg
decb
push
and
cmc
sbb
dec
imul
fisubrs
jbe
pop
sub
lock
mov
ds
neg
out
adc
test
xchg
int
mov
sub
fwait
pop
iret
xchg
movsl
sub
or
jp
lock
mov
jg
sub
clc
jecxz
sbb
add
call
xor
jl
mov
sub
std
mov
lret
xor
das
inc
pop
dec
jo
addl
adc
inc
shlb
pusha
and
sub
add
gs
ret
push
xchg
int
or
pop
in
mov
cwtl
ret
sahf
push
movsb
std
mov
mov
aaa
mov
xor
xchg
leave
loop
pop
fdivs
or
mov
and
mov
xor
adc
add
pop
push
shr
into
dec
xorb
jge
outsb
int3
jp
leave
pop
ss
sub
ljmp
mov
test
lods
dec
pop
imul
cmpsl
mov
and
hlt
push
shlb
adc
inc
scas
xor
fcoms
mov
loopne
sbb
pusha
cwtl
mov
dec
jns
adc
pop
dec
inc
lret
mov
push
aaa
ficoms
inc
or
xor
pop
push
inc
push
insb
mov
shll
sbb
jbe
jnp
iret
mov
leave
pop
xor
lods
push
or
pop
push
inc
xor
cltd
adc
arpl
lcall
cs
cmp
out
mov
stos
cli
sbb
rorl
cmp
popf
movsb
lock
inc
mov
ret
jp
adc
jb
and
or
nop
inc
stc
mov
inc
dec
repz
int3
or
stos
sub
and
inc
pop
mov
loope
insl
pop
shr
test
cmp
push
cmp
andb
stos
dec
loop
fiadds
roll
push
ficoml
push
shlb
loope
outsb
inc
rol
pop
jo
pop
stos
or
fs
or
outsb
inc
in
iret
sbb
repnz
fmul
andl
int
sub
gs
sbbb
add
mov
test
mov
mov
inc
cmp
push
mov
in
xchg
stos
out
lcall
movsl
dec
roll
stos
ficoms
dec
cmpl
push
sbb
sub
out
mov
inc
decb
push
jb
adc
add
xlat
or
jg
std
mov
movsl
imull
loop
leave
jp
mov
rcr
mov
outsb
cmp
xchg
div
sbb
xor
daa
call
or
jp
test
jno
test
int
inc
cld
push
jnp
sub
push
xor
inc
subl
int
cmp
hlt
jg,pn
mov
xor
pop
push
les
test
aam
cltd
pop
ret
popf
std
mov
pop
ficompl
int
jae
push
jb
or
test
xchg
call
pop
mov
jmp
leave
and
and
push
inc
out
mov
mov
sbb
pop
movsb
xorb
add
push
adc
xchg
stos
dec
lock
mov
push
cs
dec
or
add
ds
jge
push
add
or
and
xchg
jg
adc
leave
pop
cltd
sbb
mov
repz
sahf
xchg
pop
sub
add
testb
mov
pusha
jge
in
mov
ret
loopne
in
push
mov
lock
insb
imul
dec
xor
inc
lock
repnz
data16
sbb
es
xor
pop
sbb
cltd
leave
dec
mov
xchg
outsw
xchg
arpl
pushf
ljmp
lahf
test
leave
push
jnp
out
lahf
ret
jne
cmc
or
dec
in
push
cmp
shrb
dec
jl
pop
fstpl
cmp
cwtl
gs
inc
and
call
mov
xor
push
rcll
out
icebp
jl
cmp
mov
xor
in
repnz
jns
stc
sub
push
add
adc
fstps
jne
out
pop
fs
es
int3
xchg
or
mov
insb
movl
scas
mov
movsl
xchg
orb
popa
and
push
cmpsl
push
data16
xor
fs
sbb
leave
mov
xor
aad
ds
mov
clc
ds
adc
mov
cmp
int
mov
or
push
jle
mov
test
insl
push
xor
adc
lahf
or
cmp
cmpsl
mulb
cld
test
mov
sarb
in
sbb
pusha
jge
xchg
adc
or
sub
xlat
neg
pusha
jb
mov
leave
jp
in
enter
dec
push
mov
mov
inc
sti
adc
xchg
xor
lock
out
xor
dec
out
mov
mov
add
mov
loop,pt
sbb
and
dec
push
dec
jo
sbb
sub
insb
add
mov
iret
jmp
lahf
sub
pop
cltd
scas
shrb
add
incl
cmp
mov
pop
pop
cmp
imul
sub
jo
mov
sbbb
or
xchg
inc
lds
imul
and
icebp
and
push
pop
cmc
jl
cmp
xor
mov
stos
arpl
std
fsubr
jno
pushf
mov
or
fstps
test
xchg
or
fimuls
pop
adc
push
or
scas
jg
sub
mov
adc
or
daa
shr
push
adc
pop
cmc
cmp
rclb
jmp
mov
pusha
out
lret
int3
cmc
inc
or
xor
add
stos
dec
jb
xor
xchg
push
mov
rcll
ja
rcrl
addb
dec
sbb
xor
sbb
stos
inc
mov
in
rorb
insb
mov
test
mov
mov
lcall
movl
add
call
nop
loop
cld
cld
jo
test
push
adc
outsl
jge
stos
lock
shrl
fiaddl
into
mov
pop
rclb
les
mov
cltd
and
repnz
push
sbb
or
addl
push
ret
inc
stc
arpl
stc
push
mov
and
daa
sbb
daa
mov
icebp
dec
add
mov
shrl
inc
push
ljmp
into
adc
mov
push
xor
xchg
lret
in
mov
cmp
ja
call
jnp
aam
mov
mov
or
and
cmp
sahf
ror
jp
dec
mov
int
sub
shl
ret
add
and
jbe
daa
dec
out
xorb
sub
add
mov
in
pop
add
adc
filds
mov
lock
xchg
out
fmuls
add
loope
ret
std
mov
cmp
loope
xlat
clc
out
xor
mov
cs
in
jecxz
xor
xchg
and
push
cmp
jno
jb
mov
pop
cld
ret
enter
mov
xor
mov
push
cld
pop
xor
iret
int3
shrl
mov
xor
sub
mov
hlt
xorb
sbb
mov
sub
xchg
sahf
sahf
fcompl
cmp
inc
adc
pop
cmp
push
pop
add
stc
fs
mov
cs
xor
and
xchg
mov
lcall
hlt
dec
ljmp
jmp
xchg
fnstenv
xchg
push
push
sub
loop
cmpsl
aam
mov
aaa
cmpl
into
pop
aaa
pushf
fisttpl
pop
sbb
mov
into
mov
jp
cmp
aas
mov
cwtl
stos
or
nop
inc
cmp
into
mov
jmp
sub
mov
loop
mov
cmp
lds
dec
iret
cltd
loope
sub
or
lods
ret
xchg
loopne
xchg
in
xchg
xor
xchg
int3
je
cwtl
jge
push
adc
mov
mov
std
in
mov
test
pusha
call
push
outsl
mov
dec
enter
mov
add
mov
mov
outsb
jo
jle
mov
mov
ja
fdivrs
insl
jg
inc
shl
cmpsb
mov
test
jl
data16
inc
in
inc
xor
pop
xor
adc
xchg
adc
call
aam
aas
ret
call
push
outsb
fs
les
pop
mov
sbb
aam
insb
lcall
scas
test
bound
cmp
push
mov
or
inc
js,pn
mov
xchg
and
adc
inc
jae
jge
test
in
dec
test
mov
fsubs
cmpsl
mov
push
pop
scas
lods
into
dec
test
xchg
push
xchg
mov
adc
je
mov
pop
sbb
lods
pop
cmp
js
sbb
mov
mov
add
and
cmp
fcoms
add
mov
out
arpl
sbb
imul
sbb
ret
sbb
add
mov
rclb
lods
add
dec
addr16
into
inc
inc
fldcw
pop
xor
movsl
iret
mov
cmp
inc
repz
jecxz
dec
pop
cs
cmp
xor
pop
pop
js
xor
mov
mov
loop
or
cltd
jb
jbe
sar
repz
imul
mov
mov
mov
scas
sbb
mov
add
punpckhwd
mov
fsubrs
sahf
call
cs
ljmp
lea
sbb
sbb
or
int
dec
movsb
dec
cmp
rorb
es
test
imull
jle
jno
sahf
mov
cli
mov
mov
faddp
sti
xchg
sbb
scas
dec
push
pop
sbb
pop
inc
or
sub
inc
xchg
xor
mov
sbb
fs
sub
add
or
cwtl
inc
inc
push
stc
mov
imul
fstpl
dec
jge
mov
es
xchg
rorb
push
pushf
movb
pop
in
adc
mov
cmpsb
inc
or
in
or
push
add
loope
inc
sbb
sbbl
in
insb
cmpsb
add
jl
das
repnz
mov
mov
push
pop
testl
stos
ds
adc
xor
dec
repnz
mov
dec
mov
aaa
and
xor
pop
iret
mov
mov
push
lock
cs
mov
jnp
cld
mov
loope
pop
gs
xchg
xor
and
cmp
js
sbb
out
pop
pop
jp
sub
loopne
enter
inc
ret
jl
outsb
add
repnz
bound
mov
std
xor
and
sub
enter
dec
cli
xor
and
sbb
mov
testl
push
dec
cltd
data16
push
aam
out
add
fisttpl
cmovge
push
lcall
or
push
push
cld
adc
cmp
xchg
xor
data16
rcr
and
shlb
jecxz
fadds
stc
xchg
cld
jecxz
test
xchg
outsb
outsl
pop
lock
daa
push
pop
and
mov
loopne
mov
sub
mov
adc
sub
and
ss
jns
lret
xor
sub
out
adcl
imul
aad
icebp
in
pop
inc
test
adc
jne
rcl
aas
add
aam
mov
ja
pop
adc
lret
pop
sbb
rorl
add
ficompl
test
shll
loop
mov
mov
aad
ss
rep
call
adc
xchg
call
test
clc
arpl
inc
imul
int
test
negl
fsubl
push
sub
ja
lahf
iret
mov
xchg
dec
jbe
xchg
sahf
test
jle
std
stc
pop
gs
dec
stos
dec
cmpsl
stos
xchg
out
dec
jp
and
cmp
jnp
mov
mov
push
mov
mov
mov
mov
push
add
outsl
test
add
fsubrl
stos
push
daa
lcall
cmp
jg
pop
into
sub
jns
outsl
adc
neg
into
jno
pop
xchg
mov
adc
lds
scas
pop
insl
sbb
pop
xor
push
addr16
scas
adc
lret
mov
mov
mov
test
mov
std
rcr
jecxz
sbb
inc
stc
xchg
cltd
cmc
push
jp
in
and
dec
jno
xor
inc
pusha
mov
cli
mov
les
jb
je
hlt
mov
aaa
jne
sbb
mov
mov
pop
mov
int
jmpw
je
xchg
pushf
sbb
outsb
jno
cmc
lds
jb
or
jb
jnp
enter
add
xor
push
sar
and
jl
repz
outsb
sbb
and
pop
inc
jnp
out
pop
lods
pop
inc
test
loop
mov
stos
mov
fiadds
cmp
cld
es
loopne
lods
shl
or
les
scas
mov
jp
ds
test
or
test
pop
test
je
decl
test
cmp
ret
ret
clc
push
fdiv
shr
push
mov
sahf
ljmp
cmpsl
jns
addl
filds
test
push
lret
stos
shlb
adc
sarl
and
loop
in
dec
repnz
dec
or
test
push
cmp
jo
vandps
sub
jns
hlt
dec
push
mov
and
add
mov
divb
jg
cmp
add
outsb
sub
addr16
pop
lods
mov
int
lahf
stc
cltd
adc
fs
dec
repnz
mov
pop
mov
sbbb
movsl
pusha
xchg
mov
pop
push
jecxz
sub
jne
adc
loopne
enter
stos
jle
leave
rorb
mov
sbb
sub
fsubs
mov
add
jl
sbb
inc
jno
bound
sbb
pop
add
cli
mov
lods
and
inc
mov
xor
inc
mov
aad
jge
arpl
cli
xor
sbb
cs
aam
jecxz
add
orl
sbb
adc
push
push
mov
icebp
cltd
insb
jmp
inc
stos
test
insl
mov
mov
add
sbb
loop
loope
mov
mov
fsts
jae
cmp
cmp
pop
ret
or
pop
fwait
adc
mov
imul
cs
inc
and
popa
cmp
loope
js
ret
call
fwait
sbbl
test
add
and
nop
dec
clc
loopne
cmp
inc
insl
fistps
sahf
dec
sub
xchg
sub
lods
xor
sarl
inc
push
popf
ss
cmc
push
icebp
cmp
add
jmp
xor
mov
cmp
pop
test
pop
push
repz
movsb
mov
add
leave
fcompl
pop
xor
mov
sub
xor
shlb
fcomps
add
into
iret
xor
mov
jl
or
mov
loope
jne
arpl
push
into
xchg
mov
cld
enter
sub
or
mov
sub
inc
stos
lahf
and
dec
leave
add
sbb
inc
cwtl
inc
dec
fnstenv
shlb
sbb
in
int3
jns
mov
rep
ret
mov
push
sub
aad
sub
push
aam
mov
fcompl
pop
add
mov
cs
mov
add
xchg
inc
jge
xchg
pop
fs
mov
std
or
pop
insl
or
pop
int3
ljmp
inc
push
test
push
lds
push
gs
fsubrl
add
repz
sti
push
lret
and
aaa
insl
aam
mov
addr16
sbb
mov
js
lock
mov
out
xor
mov
out
ret
cli
add
cmp
ljmp
mov
scas
xchg
mov
call
int
dec
mov
and
and
dec
jae
call
test
jae
in
aam
fstl
cmp
pop
jbe
ss
lret
sbb
xlat
inc
add
jg
pop
mov
xor
roll
loop
mov
mov
pop
cmpsl
dec
cltd
xor
outsl
fmuls
adc
and
mov
adc
sbb
cmp
lea
jg
shlb
sarb
dec
fwait
xor
ror
pop
ss
aam
rclb
je
jg
fs
jecxz
inc
lcall
mov
out
enter
mov
lods
mov
dec
clc
mov
inc
inc
xchg
inc
mov
daa
xchg
mov
dec
xchg
sahf
test
push
lods
xlat
int
scas
daa
sub
lcall
repnz
dec
mov
xchg
mov
rol
mov
les
sub
sti
repnz
push
and
pop
adc
in
jge
popf
jmp
cvtps2pi
pop
in
loope
das
cmp
xor
add
sti
xor
push
jae
jle
scas
xchg
andl
hlt
pushf
outsl
jne
jp
ret
and
repz
fstpl
int
aaa
sbb
shl
mov
add
mov
inc
stc
or
mov
insl
call
int3
and
test
cmp
adc
lcall
jp
test
lods
lret
or
repz
mov
dec
xchg
mov
stc
cmp
stc
hlt
gs
push
xchg
mov
cmp
outsl
les
inc
jns
test
mov
adc
stos
frstor
sbb
xor
ljmp
jl
icebp
loop
sarb
cmpsb
push
xor
sbb
adc
mov
lea
push
add
xor
aad
xchg
les
pop
iret
and
inc
dec
mov
mov
cmc
sbb
and
mov
mov
addr16
sahf
les
dec
inc
push
pop
adc
div
mov
mov
pop
adc
ficompl
inc
xor
sbb
jb
inc
movsl
jo
mov
dec
les
orl
sahf
enter
xchg
out
dec
cmp
mov
mov
rorl
adc
xchg
mov
push
xchg
xchg
mov
adc
popl
cmpsb
sahf
jnp
mov
fsubrs
inc
insb
aas
fld
jbe
imul
push
mov
dec
loop
mov
sahf
push
out
mov
push
xor
into
fdivrs
inc
mov
cmp
sbb
leave
inc
jecxz
ret
push
xchg
push
sti
pop
dec
sub
out
mov
inc
iret
mov
insb
pop
inc
shrl
aas
jbe
scas
push
mov
jp
stc
adc
and
adc
adc
hlt
sbb
iret
aas
rcrl
out
test
cmp
addr16
sahf
dec
sub
outsl
pushf
inc
sbb
push
aaa
inc
subl
mov
add
ds
add
loopne
mov
sub
push
scas
adc
mov
jmp
inc
orb
xchg
or
mov
inc
sbb
in
pushl
cmpsl
adc
xlat
push
mov
jmp
sbb
mov
mov
adc
pop
xchg
cmpl
push
lods
jo
sbb
repnz
cmp
mov
outsb
in
sbb
mov
in
xchg
call
push
out
addr16
mov
mov
repz
imull
stos
cmp
dec
mov
pop
outsl
insl
enter
xorb
cmp
xor
pop
jne
xchg
loope
and
fsubl
insl
not
setg
xchg
adc
inc
pushf
jo
sti
add
xor
adc
jmp
imul
fdivs
mov
rol
mov
out
rorb
mov
xlat
inc
das
mov
push
push
sub
lods
aam
les
dec
dec
fimuls
mul
arpl
mov
jg
or
xlat
xchg
fidivrl
or
lahf
fcomps
mov
inc
or
or
leave
shrb
arpl
mov
sbb
xchg
adc
ja
jl
in
js
cmp
sbb
add
jmp
dec
add
lret
call
in
outsl
loopne
arpl
pop
mov
lahf
in
lods
cmp
fildll
dec
mov
xlat
jle
jnp
in
mov
insl
repnz
sbbl
jnp
mov
add
xchg
nop
xchg
popa
jnp
mov
lcall
dec
sbb
push
into
xchg
daa
dec
mov
daa
mov
imul
cltd
push
cld
dec
inc
imul
adc
pop
push
push
xor
add
mov
lea
fsubrs
aad
xor
int
push
dec
lods
sbb
mov
pcmpeqb
arpl
or
mov
dec
cmpb
add
mov
adc
xchg
mov
xchg
ljmp
fsubrl
and
pop
dec
out
push
pop
inc
sub
ja
test
inc
and
adc
and
sub
or
lcall
mov
mov
sub
bound
inc
mov
icebp
pushf
lcall
fimull
je
adc
fdivr
fsub
ret
lods
aaa
adc
jg
mov
popf
cmp
rorl
ds
test
and
int3
or
gs
xchg
mov
push
or
sbb
mov
test
jns
cmp
inc
inc
mov
xchg
xor
aas
jo
mov
mov
xor
fs
mov
sbb
add
js
adc
shr
bound
mov
sbb
dec
imul
add
mov
pop
lahf
cld
xchg
imull
xchg
lret
rcll
in
pop
test
sub
stos
push
in
xchg
scas
jp
iret
xor
inc
mov
incb
imul
xchg
sbb
jp
lds
js
shl
in
js
mov
add
fbld
sahf
call
cli
bound
pop
insl
lahf
out
shl
jns
add
push
out
ret
mov
in
enter
adc
jno
into
and
cltd
cli
cmp
loop
pop
jnp
ficoms
clc
lods
sub
jp
sbb
popf
sbb
pop
fcomp
retw
push
out
adc
les
mov
or
xor
xchg
pop
testb
sbb
aaa
xorl
adc
mov
shrb
pop
in
cmp
inc
ret
movsb
mov
mov
sbb
jle
cmp
mov
add
mov
and
scas
sti
mov
cmp
cmovno
sahf
dec
sbb
adc
stos
mov
jo
push
mov
rcrb
cmp
in
adc
sub
cs
ficompl
loop
out
shrb
dec
mov
loope
mov
lcall
packuswb
xor
lods
pop
sbbl
mov
popf
out
jecxz
dec
sbb
out
pop
andb
xchg
jg
xchg
mov
out
push
fidivrs
mov
cmp
pop
dec
jg
xor
xchg
jge
call
sbb
popa
jo
repz
pop
mov
ret
jnp
add
or
jg
test
out
movsb
adc
mov
loop
mov
lret
sub
push
sbb
sbb
enter
adc
xlat
popa
test
jl
xor
clc
fmull
insl
xchg
pusha
leave
mov
xchg
hlt
jae
rcll
loope
pop
adc
cmc
sub
popf
cmp
cmp
clc
push
cld
push
sbb
call
clc
cmp
in
scas
jae
or
mov
mov
jnp
cmp
addr16
movsl
pop
mov
test
mov
mov
test
insl
popa
into
jae
sbb
push
aaa
dec
callw
clc
in
and
sbbl
jmp
mov
ljmp
sbb
adc
fadds
into
mov
jmp
es
sub
xchg
in
xor
outsb
xchg
or
xchg
xchg
jae
mov
popa
sub
fnstcw
cmp
add
adc
or
fstpt
out
sbb
mov
jae
jg
insl
incl
jno
cmc
aas
push
lds
xchg
outsb
add
sub
push
and
out
inc
inc
mov
mov
sub
mov
cltd
clc
scas
cmc
outsb
das
xor
arpl
jbe
jae
testl
cmp
ret
adc
mov
sbb
das
xchg
movsb
push
xchg
insl
sbb
into
pop
mov
aam
mov
sbb
ss
scas
pop
inc
adc
aaa
insb
adc
xor
imul
push
mov
xchg
flds
pop
jns
lods
inc
cltd
fsubrs
lahf
add
sub
je
xor
jb
sub
in
xchg
sbb
aaa
sbb
push
popa
cmp
shll
inc
jl,pn
cmpsl
mov
cmp
in
std
test
insl
data16
out
pop
imul
data16
push
lea
or
hlt
jb
inc
jno
js
mov
or
push
cmp
movsb
jae
adc
sub
clc
xor
xchg
aad
ret
mov
in
xor
push
or
pop
and
push
cmp
or
pop
xchg
inc
jl
lea
or
dec
notb
ja
cmc
addr16
daa
adc
push
fs
xchg
cmp
dec
adc
invd
fmul
xor
jne
scas
mov
cmpsl
or
jg
movsl
inc
negb
pop
jb
adc
push
sub
flds
or
xor
lret
xchg
fwait
push
and
jno
mov
int3
sahf
sbb
in
dec
lods
out
mov
mov
sbb
xor
mov
adc
out
add
sub
rorb
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sub
fwait
lods
fistpl
pop
imull
mov
imul
pop
jp
mov
mov
pop
adc
push
or
mov
pop
test
int
stos
dec
push
dec
pushf
cmp
rsqrtps
jge
imul
cmp
arpl
sbb
fldl
fbstp
pop
fildll
movsl
inc
clc
std
scas
push
adc
inc
sbb
jo
repz
popa
sbb
pusha
inc
je
movsb
push
test
or
jmp
inc
mov
pop
lcall
aaa
and
lods
aas
sub
cmc
hlt
cmpsl
imul
pop
inc
sbb
stos
cmp
mov
mov
xchg
xor
or
bound
xchg
repz
dec
jg
mov
cmc
jp
inc
mov
pop
in
fwait
adc
dec
insl
sub
cmp
add
cld
imull
pop
mov
in
push
ja
sbb
and
push
scas
adc
test
popf
adc
rclb
mov
cmp
mov
jne
pusha
cmp
jmp
ret
xchg
sbb
aas
in
leave
ret
mov
clc
in
jp
stos
ret
movsl
sbb
pop
mov
jmp
aad
dec
mov
outsl
ret
fdivr
rcl
adc
cli
cmp
mov
repz
xor
cld
push
fs
jae
fnstsw
jb
lret
cmp
in
ret
sbb
std
fwait
inc
and
enter
xchg
xchg
lock
inc
test
mov
xchg
xorb
ja
xchg
loop
jno
or
or
or
pushf
jbe
sbb
shrl
fisubl
std
in
ret
mov
add
sbb
jmp
fisttpl
call
adc
cmp
daa
cld
push
jl
loop
mov
imul
sub
pop
push
jge
negl
dec
stos
sbb
bnd
aad
dec
cmp
xor
loopne
jns
and
imul
sahf
stos
xorl
imul
xchg
cmp
pop
fildll
test
clc
push
xor
dec
inc
insb
aas
pushf
sbb
mov
mov
cwtl
aad
adc
xchg
add
push
xchg
icebp
mov
add
pop
fs
mov
sub
int3
jge,pt
fistl
cmpw
add
repnz
test
les
sbb
pop
out
js
lods
lds
and
icebp
ljmp
mov
ja
jg
cld
cmc
lahf
jge
and
loopne
fdivrs
sbb
nop
push
xor
mov
loopne
ret
pop
shll
out
lods
push
add
and
push
cmp
or
ficoml
test
xchg
shrl
ret
mov
sub
pop
xchg
mov
int3
subl
mov
lock
inc
or
pop
xchg
dec
stos
imul
int3
sub
lods
mov
dec
fcmovnb
cmp
in
inc
push
aam
jno
sbb
jo
push
aas
ljmp
cmc
xchg
roll
xchg
jns
iret
mov
mov
loopne
inc
std
enter
cwtl
fisttpl
pop
jp
loopne
fsubr
sub
shrl
test
pop
in
cmpsl
and
adc
mov
mov
dec
imul
testl
pop
pop
jo
mov
loopne
or
lahf
loop
std
loope
lret
hlt
mov
and
in
sbb
xchg
jecxz
adc
jnp
xor
jg
in
xchg
lahf
mov
nop
jb
xchg
dec
cmpsl
ret
push
mov
push
scas
adc
add
scas
jmp
xor
jge
data16
imul
xor
push
and
add
test
ja
sub
xchg
push
mov
add
arpl
push
cmp
lret
leave
dec
sub
jne
aaa
dec
xchg
dec
lret
inc
or
xchg
pop
mov
pop
push
into
push
ror
je
xchg
int
jns
pop
into
decl
cvtdq2ps
enter
pop
sub
adcb
add
sti
test
pop
scas
adc
notl
into
into
add
bound
pop
ljmp
or
cltd
in
push
jno
mov
loope
outsb
scas
out
sar
push
pop
push
test
push
jo
sbb
inc
ljmp
sub
hlt
loope
out
nop
testl
fsubrs
iret
mov
movsl
pop
adc
and
das
out
cld
mov
data16
rcll
cltd
pop
and
std
mov
cmp
rorw
hlt
pop
inc
pop
rolb
jg
xchg
jns
rcl
or
dec
inc
in
dec
mov
and
add
int3
into
movsl
sbb
mov
fwait
test
lods
inc
push
test
xchg
notl
sbb
fiadds
and
inc
outsl
stc
push
or
imul
pushf
stos
insl
sar
push
iret
dec
lds
pusha
lods
pop
and
inc
loopne
lret
outsl
mov
adc
popa
pop
ja
xchg
mov
clc
cltd
movsb
mov
add
and
inc
xchg
jns
xorb
fidivrs
lock
aad
sbb
in
scas
jle
cwtl
mov
test
dec
xorb
xlat
jb
mov
mov
punpcklwd
aaa
sub
inc
mov
mov
stos
xchg
loop
cmc
xlat
and
inc
fwait
incb
mov
mov
push
jne
or
and
mov
pop
xor
lret
dec
push
jbe
arpl
dec
cwtl
mov
cmp
mov
xchg
push
and
fistpl
adc
adc
aas
lret
cmpsl
and
nop
scas
dec
rclb
mov
jns
fwait
mov
fildl
fwait
xchg
or
sub
test
std
jle
pop
fisttpl
or
test
mov
mov
mov
sub
cmp
cmc
into
lret
sarl
and
out
and
xchg
fs
ficomps
imul
sbb
sub
sbb
and
push
cld
adc
repnz
xchg
lods
addr16
jmp
mov
sbb
xchg
inc
int
sarl
mov
pushf
mov
nop
repnz
sub
inc
pop
fxch
adc
mov
dec
imul
movsb
call
jp
dec
sbb
push
adc
cmp
add
scas
cwtl
je
xchg
mov
in
repz
add
into
outsl
cmp
mov
inc
jb
and
jl
inc
add
adc
cmpsb
push
add
sub
fiadds
call
shrl
or
jp
rorb
xchg
mov
sub
jne,pt
fcomp
je
arpl
push
inc
fstps
jnp
decl
cmpsl
and
dec
push
mov
xor
je
sub
stos
jno
jecxz
mov
push
call
push
data16
sbb
aam
push
dec
mov
out
loop
mov
loopne
add
mov
test
loopne
cmpsl
testl
mov
cmp
sub
test
out
pop
stos
push
icebp
push
cltd
cmp
jnp
in
pop
push
jecxz
sbb
lcall
mov
or
inc
dec
lahf
cmp
mov
jae
xchg
mov
jmp
shrb
ret
or
popa
pop
mov
mov
mov
lods
xor
push
pop
jmp
mov
dec
in
jmp
mov
scas
adc
push
pop
ret
or
jno
decb
mov
std
jno
push
sub
in
call
adc
and
setp
mov
cmp
pushf
nop
ds
lock
mov
mov
hlt
repz
fbld
mov
shll
outsl
lods
rcrl
mov
dec
bound
out
jecxz
out
push
popf
scas
imul
xor
test
rorb
lret
scas
cmp
mov
out
ret
add
xchg
cld
and
sub
pushf
xchg
lock
enter
aas
xchg
push
stos
xchg
ficoml
xchg
mov
jbe
cmova
adc
push
mov
imul
enter
lcall
lcall
add
cmpsl
call
imul
push
cmpsb
dec
fldl
pusha
dec
movsb
clc
hlt
or
test
push
cmp
inc
dec
in
sub
addr16
inc
dec
mov
adc
sarl
fs
lods
mov
jle
add
jbe
xchg
ret
add
cmp
sbb
add
daa
repz
lea
cltd
adc
movsl
sub
sub
jo
pop
push
jecxz
shr
and
icebp
outsb
dec
ss
push
xchg
cmp
add
bound
sbb
idiv
cwtl
imul
divl
cmpl
adc
call
shl
push
insb
dec
lret
je
mov
xchg
dec
mov
fwait
jbe
adc
std
gs
or
lret
aaa
mov
adc
stos
int3
pop
enter
test
mov
mov
sub
outsb
les
and
inc
add
stos
pop
push
sub
mov
daa
cmp
inc
or
clc
xor
into
mov
inc
lahf
dec
dec
mov
xchg
popf
mov
mov
dec
fcompl
mov
xchg
jl
daa
repnz
jmp
adc
pop
pop
sbb
mov
push
ret
push
scas
int3
sub
and
addr16
fimull
xchg
push
mov
inc
inc
loope
sub
push
ret
aas
scas
test
stc
and
mov
bound
jp
bound
lds
out
add
mov
pusha
or
rcrb
jmp
and
stos
xchg
jae
jmp
lahf
call
xchg
rclb
jno
xor
mov
test
arpl
mov
ret
mov
add
xchg
repnz
test
xor
xorl
fs
pop
bound
mov
lea
into
xor
jnp
cli
fs
out
or
repz
lcall
sub
iret
repnz
das
inc
popf
sub
dec
bound
scas
jmp
int
mov
jg
adcl
mov
test
jl
pushf
add
cwtl
je
or
inc
and
lods
sarb
mov
dec
xor
push
out
add
jns
adc
and
dec
or
dec
jge
sub
cmp
sbb
jbe
fucomi
lock
lods
scas
outsl
jmp
scas
mov
lods
mov
pop
subl
mov
xor
xor
sti
add
mov
shrl
mov
jno
sub
mov
xchg
xlat
lahf
das
imul
scas
test
sti
pop
mov
pop
push
mov
sub
add
movsl
mov
lahf
rcrl
rcrb
cmpsl
daa
pop
out
cld
fildll
adc
mov
aad
enter
push
sti
lods
mov
pop
aam
adcb
sbb
mov
mov
mov
insl
xor
mov
clc
cs
jbe
pop
insl
push
adc
add
cmpsb
cmp
xchg
subl
mov
mov
lock
orl
or
scas
pop
loopne
daa
add
jae
outsb
loope
aam
in
scas
hlt
jns
mov
push
sub
inc
dec
sub
mov
shll
idiv
dec
imul
pop
xchg
in
cli
jmp
pushf
std
pop
nop
lods
std
push
leave
inc
mov
outsl
or
mov
push
test
jae
pop
lahf
out
adc
shll
add
fwait
ja
mov
test
jmp
pushf
loop
dec
in
es
in
out
int
adc
das
aam
testl
adc
in
lcall
mov
inc
out
out
in
outsb
dec
push
aas
pop
inc
movsl
dec
xor
pop
xchg
add
cmpb
adc
or
mov
cmp
out
add
xchg
loope
rcrl
cld
push
incb
ljmp
outsl
loopne
hlt
pop
or
sbb
mov
or
seta
xchg
cltd
imul
fisttps
dec
scas
pushf
repz
push
enter
faddp
outsl
sbb
cltd
gs
insb
or
inc
cltd
lcall
sbb
and
xlat
pop
jg
daa
in
dec
fmuls
outsl
jg
sub
dec
ds
xor
push
sbb
in
loope
lret
and
sbb
das
pop
aad
roll
std
xor
xchg
lret
bound
sarb
inc
popf
loope
and
xor
jle
dec
mov
ret
in
fsubp
bound
inc
out
test
in
fwait
sbb
sub
sub
lods
mov
mov
idivl
inc
cmp
fwait
mov
cli
sbb
jecxz
fiaddl
hlt
in
scas
test
fxtract
rolb
xor
cli
lret
call
sbb
daa
test
leave
add
or
sti
dec
aam
cmp
xor
sub
push
test
lcall
imul
pop
push
jb
inc
test
xchg
pop
sub
sub
test
push
imul
imul
aas
int
cmp
xor
stos
leave
or
push
mov
lods
cmpl
push
sarl
data16
xor
xor
adc
in
cmpsl
std
inc
cmp
cltd
loope
xchg
out
sbb
adcl
test
jecxz
cmp
lcall
gs
xlat
popf
ds
inc
sub
fildl
adc
cmp
push
fdivrl
ljmp
cmp
daa
inc
jo
repz
cld
pop
inc
push
jecxz
push
adc
ss
jle
cli
fsts
loope
mov
rclb
xchg
stos
pop
lods
jb
cmp
mov
and
jno
rcll
inc
sub
jp
shr
adc
ret
out
ja
pop
loop
in
push
sbb
sbb
mov
pusha
mov
stos
mov
test
cmp
sahf
test
popa
or
pop
mov
cmp
into
mov
cmc
mov
jmp
push
adc
xchg
movsl
sbb
std
pusha
mov
mov
xchg
cmp
subl
fstps
outsl
ss
cmp
sbb
cmp
and
not
lahf
repz
sahf
pop
cmpsl
js
dec
ljmp
push
sbb
ss
adc
sbb
jl
in
fwait
cmpsl
push
adc
test
es
pop
ret
clc
sub
stc
movsl
cs
xchg
pop
mov
and
push
pop
dec
clc
add
jge
fsubl
fisubl
je
bound
lods
lcall
shlb
ljmp
dec
push
ss
pop
mov
cli
lock
lahf
mov
pop
mulb
push
or
cmp
xchg
movsb
jge
mov
aam
cmpb
jecxz
or
dec
out
je
orb
mov
push
pusha
cmp
sahf
jns
test
adc
lock
popf
jnp
test
test
push
and
xchg
gs
sbb
cwtl
xor
mov
xchg
insb
add
sbbb
jns
xchg
xor
sbb
and
cmp
stos
add
mov
jns
mov
jge
iret
in
cmp
cmpsl
or
xor
push
xor
sub
std
mov
js
lea
push
dec
sbb
cmp
adc
mov
push
and
mov
insl
sbb
arpl
jns
or
fs
mov
into
jbe
in
xor
mov
outsb
adc
sub
xchg
jno
dec
push
imul
mov
push
cmovge
in
push
movsb
repz
in
push
mov
mov
lods
rorl
aaa
mov
popf
cmc
mov
data16
push
mov
xchg
cwtl
adc
push
jnp
or
mov
jmp
jbe
popf
test
enter
xor
movsl
loopne
and
loopne
js
mov
lret
adc
ss
add
add
imul
adc
sub
add
dec
and
fstpt
fistpll
adc
ret
push
imul
pop
push
leave
popa
pop
sarl
jbe
xchg
sti
mov
fwait
xchg
pop
test
inc
xor
push
cmp
cwtl
cmp
dec
call
mov
in
pop
enter
sbb
xchg
je
dec
push
or
scas
and
lcall
inc
jne
mov
iret
imul
ljmp
adc
shrb
fcmovnu
fdiv
xchg
dec
jecxz
dec
addr16
push
rcll
pop
fisubl
push
mov
mov
jp
mov
fwait
data16
ret
daa
add
jb
addr16
daa
and
pushf
scas
adc
xchg
cmp
pop
ret
dec
out
adc
fidivs
xchg
sbb
cmpsb
ljmp
mov
adc
xor
dec
push
enter
scas
test
jne
jae
stc
jle
iret
push
subb
add
in
dec
lods
or
mov
push
inc
es
into
jo
jge
pop
push
add
xor
pusha
test
dec
addl
dec
je
sbb
sti
mov
stos
xchg
mov
pop
js
mov
nop
mov
adc
popa
lret
imull
rcr
scas
xchg
pusha
test
test
ss
nop
and
jl
int3
insb
push
lahf
jg
push
arpl
in
sub
fnstenv
mov
andb
mov
je
cmp
sub
mov
dec
stos
xchg
je
cmpsl
add
push
ds
push
sub
pop
scas
jo
and
aad
fstpt
sub
jp
xchg
rolb
jge
addl
fwait
aad
add
jg
call
cmpsl
movsb
xchg
insb
xorl
ss
lock
xchg
add
mov
pop
dec
mov
rcr
mov
test
jbe
fidivl
in
stos
cltd
sub
out
cmp
sub
loope
repnz
sbb
movsl
cmc
daa
sub
cmp
int
mov
loopne
mov
mov
psubq
or
sub
mov
add
pop
std
insl
bound
enter
fwait
push
ds
mov
mov
bsf
gs
movsl
fcmovnb
lret
enter
ja
add
adc
push
and
jae
test
daa
mov
adc
jmp
out
xchg
dec
xor
sbb
outsl
rcrl
mov
and
inc
imul
rcrb
rcr
pop
or
rcl
or
in
adc
and
into
popa
sbbb
xor
add
in
pop
jg
xchg
popa
out
cmp
call
inc
inc
lods
ficomps
mov
es
push
pop
cmp
popl
in
in
scas
jecxz
mov
push
insb
cltd
imul
aas
xor
ja
out
adcl
cli
push
sbb
out
mov
arpl
or
push
pop
ja
dec
push
dec
shlw
mov
or
adc
andb
lahf
dec
cmp
pop
pop
inc
push
push
jo
out
or
cmp
test
rcrb
push
or
adc
lret
popf
jo
mov
xchg
mov
movsl
mov
mov
xchg
les
inc
test
into
in
xor
jle
int3
daa
imull
repz
jmp
fld
mov
lea
fisubs
push
es
dec
push
in
jle
movsl
push
mov
dec
pop
mov
gs
pop
and
mov
cmp
mov
dec
inc
hlt
sbb
jb
mov
je
dec
popa
in
push
cmpl
sti
adc
sub
inc
jle
push
cmpsl
pop
lret
push
faddl
cs
or
inc
out
test
add
call
testl
test
pop
ja
jmp
mov
mov
sbbl
call
or
and
xor
es
jb
and
and
adc
add
pop
mov
push
es
adc
pop
les
pop
lods
jecxz
add
outsb
mov
add
sub
sahf
xor
add
jl
fcom
cmp
das
shlb
adc
add
stc
dec
push
iret
leave
jae
mov
jle
jnp
adc
pop
shl
mov
outsl
xchg
push
mov
pushf
push
add
cmp
push
outsb
sbb
mov
pop
dec
mov
add
sbb
pop
jmp
cmp
mov
test
push
push
aam
mov
fldl
pop
mov
sub
movsl
arpl
sbb
out
push
int3
inc
jbe
jno
adc
or
inc
pop
ss
push
pusha
xchg
cltd
repz
pusha
inc
shlb
out
outsb
xchg
pop
imul
sbb
inc
cmc
xchg
jb
xchg
jno
js
push
scas
das
mov
mov
lahf
es
mov
push
je
xor
lds
add
xor
pop
aam
push
lods
cmp
pop
cmpsb
sub
pop
lea
jg
test
rorl
dec
jbe
repz
and
test
cmp
in
and
mov
mov
dec
mov
stos
enter
cmp
popa
arpl
xchg
popa
test
inc
mov
pop
inc
mov
lods
mov
cwtl
pushf
repz
lods
cmpsb
dec
dec
inc
or
pop
mov
daa
iret
int
adc
shrl
and
cmp
xor
nop
xor
aas
xor
mov
call
popa
dec
or
fdivrl
lcall
stos
iret
push
pop
mov
es
fstpl
pop
adc
sbb
cmpsw
jo
leave
pop
insb
lcall
inc
pop
in
dec
jle
pop
enter
inc
cwtl
cld
pop
add
xchg
pop
and
pusha
pop
add
pop
mov
popa
jns
outsl
push
mov
fucomip
aaa
das
mov
jmp
cmpsl
add
cmp
inc
outsl
arpl
mov
sbbl
fcompl
lock
xor
imul
jmp
stos
mov
into
je
xlat
imul
cmc
ficompl
sahf
pop
inc
push
adc
dec
xchg
pop
push
mov
movsb
sub
mov
and
pop
and
xchg
leave
in
sti
iretw
shll
inc
push
push
movsb
leave
cmp
int3
mov
sbb
std
cs
push
mov
ds
jp
jl
gs
jns
test
iret
mov
adc
adc
mov
adc
push
push
adc
jae
push
jo
int
mov
outsb
out
push
loop
cld
dec
xor
es
movsb
je
sbb
faddl
mov
dec
sub
fcoms
dec
jp
pushl
mov
push
imul
adcl
cmp
push
sbbb
dec
or
push
test
fldt
les
sub
aam
dec
mov
jno
xchg
ds
rorl
fldcw
test
mov
add
adc
jno
test
pop
push
sahf
jnp
adc
adc
dec
jg
ss
outsl
idiv
sbb
cmp
or
push
sbb
jl
arpl
pop
sub
cmp
sbb
sub
movb
xor
push
fisubrl
sbb
fiadds
cmp
andb
pop
cltd
xchg
mov
xchg
push
cmc
int
shlb
mov
add
xor
adc
dec
xchg
cmp
pop
dec
push
std
mov
sub
sub
xchg
jae
mov
cmp
cli
add
mov
bswap
and
sub
cld
push
std
xor
push
les
sar
pushf
xchg
sbb
fsubp
out
sub
daa
xchg
mov
pop
dec
cmpsb
mov
dec
out
cltd
add
jbe
add
dec
test
stos
and
jne
fwait
test
lcall
jb
inc
and
jmp
push
test
jns
incb
divb
push
add
ja
mov
mov
cmp
push
inc
inc
test
fisttpl
ret
in
mov
sbb
and
lock
repnz
aaa
xchg
inc
or
es
ret
mov
test
les
out
clc
add
stos
cli
jmp
in
push
imul
sbb
mov
pop
mov
fsub
xlat
add
imul
dec
and
xchg
mov
cmp
scas
push
push
out
loop
fs
sub
inc
lahf
jl
inc
daa
daa
out
fimuls
ds
add
rcrl
cmp
inc
addr16
mov
or
adc
pusha
and
aam
jecxz
push
sbb
scas
push
in
sub
movsl
aam
lcall
aas
out
test
pushf
dec
testl
pop
mov
cmp
mov
xor
adc
out
sbb
sub
movsl
loope
pop
lods
mov
xlat
jnp
pshufw
leave
outsl
dec
pop
stos
movsl
mov
xor
jmp
mov
pop
les
stos
mov
and
cwtl
inc
xchg
mov
lods
fistpll
scas
xor
sbb
xor
jo
sub
imulb
cmpsb
add
arpl
sarb
mov
pop
outsb
cmpsb
stos
test
jo
cld
dec
hlt
gs
test
jmp
mov
pop
xor
shl
jle
inc
stos
push
test
sub
movsl
sahf
xchg
nop
mov
test
adc
rcrb
jnp
dec
test
push
pop
cmpsb
or
xor
xor
dec
stos
xor
adcl
rcr
in
jle
add
test
pop
pushf
lcall
or
lods
fisubrs
jmp
sub
rorl
inc
xchg
js
xor
fbstp
adc
pop
sbb
mov
and
icebp
cmpsb
nop
ljmp
mov
sub
les
cwtl
adcb
mov
push
ficompl
pop
and
fisubs
cmpsl
sub
sbb
jno
jecxz
adc
mov
pop
je
inc
mov
or
imul
adc
sbb
ljmp
push
iret
and
mov
mov
adc
push
fwait
jp
icebp
cld
dec
addr16
les
xchg
daa
nop
hlt
xchg
fdivr
push
clc
clc
ljmp
xor
mov
cmpsl
inc
cmp
lret
shl
xor
sub
fistpll
ljmp
sbbl
jmp
or
jl
push
icebp
pop
andb
mov
sbb
in
lods
adc
jle
inc
pop
xor
or
and
adc
filds
sub
in
inc
adc
pop
fwait
enter
dec
mov
lods
mov
jge
sti
dec
or
hlt
cmp
lods
or
xor
iret
out
add
cmpl
or
or
aaa
jo
mov
cwtl
repz
sub
mov
in
mov
daa
test
sub
das
push
or
mov
inc
incl
fsts
add
jmp
inc
add
push
mov
mov
sub
or
lods
mov
mov
xchg
cmp
rolb
fisubs
push
jb
dec
out
frstor
sbb
pop
add
iret
aad
js
shl
icebp
cmp
inc
arpl
data16
scas
lods
rcl
push
js
notb
pop
sahf
leave
jge
or
inc
mov
mov
lods
cmp
jl
iret
int
dec
mov
sub
and
out
lret
hlt
sbb
or
nop
cmpsl
lds
xchg
enter
adc
sti
or
hlt
outsb
xchg
inc
xchg
sbb
cmpsb
push
test
and
enter
pop
ljmp
xchg
sbb
cmp
jnp
dec
int
int
mov
cmpsb
mov
stc
stc
sbb
cmp
cmp
jbe
divb
aaa
jmp
add
inc
das
and
addr16
movsl
jg
cwtl
lock
inc
out
xchg
stos
scas
or
push
sbb
add
inc
push
mov
mov
sarb
jmp
mov
cmc
dec
push
arpl
mov
jmp
shll
or
mov
popa
out
add
or
movsb
pushf
subb
adc
faddl
cmp
push
mov
sbb
mov
jae
out
sbb
push
jb
cmpl
out
iret
jg
loop
test
or
push
ljmp
aas
jmp
sub
insb
je
iret
dec
push
or
cmc
push
xchg
mov
sbbl
dec
inc
ja
clc
rcrl
mov
es
cld
push
je
es
daa
and
outsl
pop
pop
data16
fstl
scas
enter
into
movsb
daa
shll
cltd
xchg
shll
and
adc
insl
sbb
mov
faddl
outsb
and
jne
cmp
jle
rcrl
xlat
ja
push
jbe
bound
mov
stc
out
cmc
cltd
inc
imul
mov
adc
mov
jno
aad
nop
gs
fnstcw
jl
mov
clc
lret
sub
inc
pop
test
sarb
insl
xor
loop
xchg
sbb
aaa
gs
mov
loopw
repnz
and
push
aas
es
mov
lret
and
lds
xchg
out
lahf
inc
dec
jmp
rorl
pop
nop
mov
jb
mov
pop
aad
xlat
sarl
push
jmp
imul
adc
das
adc
scas
or
jmp
js
inc
adc
in
inc
or
stc
cmpsb
sbb
repnz
xor
ja
fstp
jb
and
add
jbe
stos
andnps
fcoml
pusha
mov
xchg
cwtl
push
lds
into
in
inc
loopne
inc
arpl
or
ficoms
xor
jne
sahf
fildll
dec
xor
inc
mov
xchg
shll
cmpsb
das
orb
cs
cmp
cmp
mull
decl
into
jmp
je
jns
dec
xchg
testb
jg
insb
inc
adc
mov
mov
add
mov
popa
in
scas
sub
ds
dec
mov
icebp
push
inc
mov
push
fsubr
inc
add
rcrb
dec
mov
cmc
leave
mov
gs
jle
incl
add
cmp
xor
jne
jp
ds
adc
andl
pop
clc
or
push
mov
pop
mov
sbb
jnp
int
stos
mov
fidivrs
dec
test
adc
dec
fdivl
outsl
movsb
cmp
movsl
cmp
push
aad
cmp
das
scas
jecxz
cli
lcall
push
adc
aaa
or
push
pop
add
fidivrs
cs
jnp
xchg
out
imul
rol
test
jno
jbe
pop
rorl
and
fs
scas
cmp
add
mov
xor
sub
lret
mov
sti
sub
fstl
dec
stos
lods
jne
loop
outsb
cltd
test
testb
fs
add
pop
jb
jle
imul
adc
cmp
inc
cmc
sub
pushf
dec
push
sbb
insb
sbb
test
pop
mov
push
daa
lock
loop
int3
stos
xchg
in
sti
jno
xchg
xchg
in
sbb
add
scas
lret
test
dec
or
add
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
scas
pop
nop
dec
add
add
add
add
cmp
lods
add
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
xor
lahf
dec
xchg
push
out
add
fdivrs
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
xor
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
movsb
clc
popa
add
mov
add
cld
pop
pop
xor
subb
mov
pop
pop
jns
sbb
repz
das
mov
mov
mov
xor
pop
ljmp
aad
xchg
mov
dec
es
mov
xchg
cmpsl
pusha
je
mov
dec
je
cmp
leave
pop
enter
fmull
enter
cli
dec
je
dec
adc
outsb
in
jle
lret
mov
push
add
pop
jns
lock
push
sarl
jne
into
out
dec
cmp
inc
pop
stos
ljmp
sbb
lods
dec
add
mov
nop
ljmp
pop
leave
in
mov
shlb
mov
cmp
xor
fs
cs
les
fs
mov
jmp
je
dec
rcr
test
leave
xor
cmp
enter
mov
xor
mov
aad
ret
imulb
jae
add
cs
xlat
fcomp
mov
sbb
aaa
stc
xor
in
nop
divl
fnsetpm(287
sub
xchg
je
dec
xchg
and
aam
filds
pushf
xor
xorb
insl
mov
outsl
cmp
inc
pop
xor
lods
sbb
cmp
aad
xor
push
xor
add
gs
nop
les
cli
and
jno
mov
dec
mov
sub
mov
into
test
xor
sahf
and
loope
cmp
fistps
subl
inc
inc
pop
outsl
repz
roll
xchg
dec
xor
pop
xchg
adc
push
sbb
inc
lcall
repnz
dec
cmp
jecxz
xchg
jo
push
mov
jae
into
cmpsl
into
mov
mov
xor
jne
movb
push
push
fs
adc
loop
and
xchg
jge
mov
movsb
fidivs
sub
and
or
cs
jb
out
inc
xlat
or
adc
gs
int
sub
dec
mov
sbb
leave
dec
fstp
pop
pop
sahf
mov
pop
imul
out
decb
jb
mov
loope
and
rcrb
sbb
pop
sbb
jo
mov
ja
mov
enter
enter
mov
add
idiv
jg
mov
mov
aaa
xchg
push
andb
add
add
mov
call
mov
pop
shl
outsl
cmp
or
cmp
repz
jge
mov
out
inc
cmp
sub
sub
lock
cmpsl
daa
dec
pushf
and
mov
ret
aad
or
aaa
rcll
es
and
jae
xor
jbe
push
jae
ret
cmp
mov
push
pop
pop
les
cwtl
cmpsl
cli
ja
jge
ficomps
mov
ljmp
lods
push
xchg
cltd
call
js
fwait
jae
push
mul
ret
pushw
cmc
cmc
popa
cwtl
adc
nop
lcall
and
mov
psrld
test
or
sahf
push
bound
xchg
stc
and
das
add
adc
sbbl
sub
ja
mov
mov
sbb
and
pop
dec
std
xchg
add
pusha
xor
pop
mov
sbbb
repz
sub
pop
mov
ficoms
aam
add
sti
or
cwtl
cmp
pop
sbb
push
pop
push
clc
xor
adc
inc
mov
and
dec
sbb
jmp
shlb
std
jns
mov
test
sti
cmp
imul
jl
lea
push
xchg
mov
scas
pusha
inc
cltd
mov
pop
dec
inc
cmp
adc
mov
es
inc
insl
push
xor
push
in
jl
adc
jg
stos
idivl
insb
iret
int3
mov
hlt
lea
mov
push
into
das
inc
rcrb
lret
xchg
das
fimull
aas
test
fbstp
adc
and
inc
mov
cmpb
mov
fidivrl
push
sub
adc
fldl2t
mov
repnz
loopne
cmpsb
and
mov
dec
pop
cmp
xchg
jge
outsl
xlat
stos
and
pushf
sub
imul
lods
lret
or
fcoml
sbb
inc
pop
sti
es
lret
xchg
fldl
xlat
cli
movsl
inc
mov
loop
add
out
sbb
jp
pop
xor
in
jg
in
xor
inc
mov
fdivs
jne
jns
sub
icebp
jecxz
std
call
inc
movsb
insl
aad
cmp
int3
ret
dec
add
insl
mov
push
jno
ljmp
jg
sub
rorb
mov
rcrl
add
sbb
pop
xchg
mov
mov
add
mov
add
dec
xlat
hlt
or
jo
mov
cmovne
stos
dec
in
ss
leave
inc
adc
or
aas
lahf
push
mov
push
mov
mov
ret
outsl
imul
jbe
std
push
push
mov
das
flds
out
cmpsb
data16
add
js
stc
fadds
inc
cld
negb
enter
aad
jg
jle
sub
cwtl
test
lret
stos
mov
add
add
dec
xchg
inc
xchg
xor
jp
or
jne
ja
scas
idivb
loopne
push
addr16
ljmp
xor
sbb
cmpsb
cvtps2pi
loop
dec
sub
dec
mov
xor
sbb
push
sbb
pop
lret
in
sub
mov
insl
lcall
jbe
add
push
scas
inc
jb
loope
xlat
add
mov
cmp
jge
or
push
dec
cmp
dec
jno
leave
cli
jae
jp
cmpb
divb
daa
test
dec
mov
xor
or
xchg
sbb
mov
push
sbb
shll
test
mov
jmp
xorl
mull
push
jb
push
jg
jp
jp
mov
data16
push
lcall
ljmp
lods
jle
aaa
cmp
sahf
jmp
or
scas
lahf
lahf
ja
js
xchg
ficompl
ffree
jp
jmp
pop
pushf
jecxz
fcoms
add
or
fldl
and
and
or
xor
push
inc
fimull
sti
mov
fistpll
ret
ret
pop
outsl
mov
shr
stos
sub
test
or
adc
nop
ficoms
cmpsb
mov
mov
and
repnz
arpl
push
movsb
arpl
iret
in
test
loopne
divl
and
shlb
fldcw
cmp
fs
loope
push
pop
loopne
xor
add
jmp
mov
and
dec
lock
push
arpl
mov
and
test
out
les
push
shlb
pop
lea
rcrl
int
sbb
lock
ficoml
aad
or
icebp
shl
inc
insl
jecxz
roll
add
add
mov
jp
push
cltd
xorl
mov
add
and
out
rcl
pop
bnd
popf
xor
sbb
loopne
jge
negl
je
jecxz
test
inc
int
add
mov
mov
sub
adc
push
loope
sub
dec
outsl
ljmp
sbb
cmp
sbb
add
in
test
xorl
inc
cmp
jle
out
sti
pop
loopne
fs
push
fiadds
cltd
add
test
insl
or
add
movsb
sbb
sub
aaa
cwtl
xlat
ss
mov
cmpsl
in
or
test
xchg
mov
mov
or
int
data16
scas
shrb
push
jp
jae,pt
repz
sub
xor
out
inc
sub
popfw
das
scas
clc
imul
data16
push
pop
mov
adc
push
adc
mov
jbe
clc
cmp
and
cmp
dec
test
push
sbb
nop
mov
and
mov
aam
andb
nop
iret
nop
sbb
sub
mov
sahf
pop
loopne
add
out
mov
out
mov
cmp
xchg
jge
pop
pop
inc
mov
mov
das
cmpsb
pushf
pop
sub
xlat
or
push
pop
inc
test
dec
sbb
movb
jle
mov
dec
leave
cld
jbe
and
sbb
cmpsl
pop
jno
hlt
mov
add
mov
mov
repz
dec
lcall
pop
sbb
adc
jp
pop
mov
and
add
into
sub
dec
xor
xlat
lock
ss
dec
pop
outsb
pop
mov
test
aaa
sahf
add
sbb
fbstp
enter
ret
sbb
jo
jae
fwait
lea
inc
mov
mov
xchg
rolb
incl
shl
mov
scas
ret
cmp
jmp
xchg
xor
mov
xchg
xor
mov
addb
and
dec
outsb
inc
add
hlt
or
in
inc
loopne
sbb
add
mov
cwtl
cmp
push
cmp
stc
fdivp
jl
movsb
sub
xchg
jl
mov
jb
and
dec
mov
pop
inc
iret
xor
scas
out
xchg
mov
icebp
or
sub
insl
sub
test
data16
rclb
add
add
hlt
mov
std
jl
dec
pop
cmp
call
add
mov
add
mov
jne
addr16
add
les
lock
es
mov
push
ficoms
add
pop
rcr
movsl
dec
test
aaa
mov
jae
pop
pop
cs
pop
std
rolb
lock
enter
lret
xchg
and
imul
mov
xchg
mov
inc
lgs
sub
push
pop
sub
aaa
sub
sub
gs
cwtl
xchg
lahf
icebp
out
icebp
sbb
insl
jae
jmp
inc
sub
add
xchg
sbb
sbb
lret
sub
addr16
push
push
sub
jp
cs
hlt
inc
mull
jbe
add
pop
jmp
dec
arpl
mov
out
cmp
scas
call
lret
mov
push
aam
loopne
mov
cmp
pop
and
sbb
lret
repz
aaa
or
out
outsl
outsl
insl
cmp
dec
xchg
jo
lock
jno
ss
out
xor
hlt
sbb
xchg
inc
and
add
cmp
enter
enter
outsb
push
or
fs
rolb
push
inc
lds
or
out
or
jns
lea
lahf
pusha
rorb
fisubrl
mov
fdivrs
loopne
je
into
jg
adc
sbb
push
scas
cmp
fdivr
mov
pop
out
xchg
mov
ljmp
adc
fs
pop
int
cmp
add
cmp
xlat
sub
and
cmp
cmpsb
sbb
inc
pushf
imul
sti
into
cwtl
xchg
xor
pop
dec
shrl
mov
pop
mov
popa
rcll
enter
js
lods
in
into
xlat
ja
mulb
imul
and
add
lods
negl
xchg
dec
pop
pop
sbb
mov
js
sbb
sarb
adcb
or
pop
cld
xor
add
cmp
cmp
dec
cmp
mov
out
xchg
clc
xchg
xor
jns
mov
mov
mov
jne
inc
loop
aam
aaa
inc
adc
lock
out
xchg
inc
call
dec
fildl
adc
dec
data16
mov
addr16
clc
dec
sahf
add
les
mov
mov
sbb
std
xrelease
je
jg
in
out
pop
aaa
add
pop
mov
mov
loope
ss
stos
outsb
add
mov
add
mov
inc
bound
jb
fdivp
push
je
fiadds
cmp
out
mov
push
inc
adc
or
or
jge
cltd
mov
cmp
je
jecxz
push
inc
jns
fldcw
adc
lahf
dec
pop
mov
arpl
in
arpl
jp
addr16
jno
inc
jg
push
sbb
imul
ljmp
lcall
pop
xor
sbb
repnz
jecxz
cmp
repz
xor
mov
imul
rclb
or
fldl
scas
adc
ucomiss
fbstp
pop
add
inc
cmp
mov
xor
inc
push
sub
push
inc
inc
jb
mov
jg
sub
outsl
jb
movsb
add
cltd
pop
sahf
xor
push
lea
popf
stos
lcall
cmp
mov
inc
push
pop
mov
mov
fiaddl
sbb
jb
cmp
imul
repnz
out
inc
fwait
inc
fldl
jle
out
mov
loope
push
daa
iret
xchg
inc
adc
pop
pushf
sbb
push
data16
lea
mov
lcall
test
sahf
icebp
loope
imul
ficompl
xchg
bound
cmp
popa
ficompl
shlb
lcall
mov
fs
push
push
pop
mov
hlt
add
movsl
stos
inc
lods
stos
jle
rcrl
pop
aas
test
out
imul
test
or
js
inc
adc
mov
and
cld
lds
dec
xchg
inc
test
xchg
gs
pop
mov
addb
stos
addr16
es
icebp
pcmpeqd
inc
push
fldt
les
mov
mov
sbb
stc
shl
dec
icebp
jno
inc
fistps
sbb
and
and
out
and
popa
and
stos
cmp
testb
pushf
mov
add
pop
stc
xchg
test
inc
jno
and
mov
out
mov
outsb
test
loopne
sahf
adc
test
sbb
pop
push
iret
nop
das
lcall
xchg
or
pop
add
repnz
mov
jge
cmpl
adc
cmpsb
stc
testb
cmpsl
sbb
jg
pop
aad
xchg
add
xor
add
mov
add
test
rcll
xchg
movsb
je
or
ret
mov
adc
jecxz
std
int3
arpl
out
rcll
sbb
add
push
fdivs
shl
shll
imul
dec
fs
xchg
gs
int
popf
dec
jle
arpl
or
pop
cmp
sub
push
pop
lds
movsb
test
popa
cmpsb
lods
mov
jb
test
inc
cmp
les
xchg
pop
pop
mov
std
daa
mov
mov
jl
lea
aad
stc
int3
or
movsb
mov
mov
inc
xchg
dec
in
mov
dec
out
popa
inc
push
outsl
xchg
push
add
mov
add
dec
or
mov
out
cmc
add
mov
data16
push
das
repz
arpl
pop
sarl
lea
mov
pop
out
out
push
fsubl
and
adc
mov
mov
data16
data16
mov
fninit
mov
inc
std
jns
push
psubb
imul
imul
xchg
lcall
mov
xchg
scas
mov
addl
lods
sarl
or
sub
loopne
xchg
mov
je
popf
mov
push
mov
push
jo
out
scas
mov
cmpsb
outsl
outsb
out
movsl
into
jb
xlat
mov
lods
pop
jne
push
stos
pop
cmpsb
inc
cmp
push
jns
cmpsb
enter
fsubrl
loope
push
cmp
jo
out
repz
movaps
sub
or
jle
xor
rcll
mov
call
int3
loopne
call
incb
bound
mov
pop
bound
das
sahf
xchg
adcb
jo
rcr
cmp
xor
sbb
fcmove
aad
aas
orb
lcall
dec
movlps
stos
call
mov
sahf
jle
sti
sub
scas
sbb
adc
stos
mov
pushf
mov
push
and
xchg
daa
mov
sbb
cmc
xchg
ret
pop
ret
mov
movsl
es
mov
sub
mov
shr
xchg
out
inc
hlt
je
sbb
xor
leave
popa
pop
imul
jle
dec
mov
dec
ret
pusha
paddw
loop
scas
imul
js
arpl
mov
jae
jge
jecxz
adc
add
cmc
fistpll
stc
cmpsl
mov
sbb
add
add
add
insb
ss
pavgb
cmpsb
ss
push
gs
inc
cwtl
push
enter
cmp
xor
popa
dec
aaa
loop
shlb
jp
sbb
ss
aad
add
add
add
dec
outsb
testl
mov
inc
clc
scas
mov
and
ja
mov
mov
mov
dec
jne
xor
sub
sbb
cld
jo
cmp
mov
mov
mov
xor
mov
inc
mov
lock
mov
xchg
sti
jecxz
cmp
mov
repnz
and
std
mov
and
loop
inc
mov
xchg
xchg
mov
xchg
ret
jae
out
stos
negl
stos
je
add
into
nopl
mov
pop
jmp
inc
xlat
popa
cmp
jle
mov
sbb
iret
push
out
sub
jns
xchg
iret
push
pxor
fnstenv
sahf
push
insb
out
in
pop
loopne
pop
movsb
insb
mov
jl
cmpsl
test
xor
and
mov
dec
jno
and
ds
lea
inc
push
mov
popa
cmp
mov
pop
lods
repz
xchg
movsb
popa
dec
fbld
pop
adc
imul
mov
xchg
pushf
dec
movsb
push
inc
sub
sub
fdivs
push
cmp
lods
out
push
dec
in
jns
sub
and
ljmp
sbb
mov
fnstenv
xor
push
fdiv
mov
or
lahf
add
pop
in
aaa
cs
mov
icebp
mov
ja
lea
cmp
imul
mov
aas
dec
adc
pop
adc
dec
dec
xchg
ficoms
or
pusha
xchg
push
jne
icebp
pop
push
mov
inc
jmp
test
push
insl
test
loop
scas
or
in
lds
push
dec
mov
dec
divb
xor
add
xor
push
cmpsl
fistl
mov
cltd
fwait
add
test
and
jmp
add
push
rcll
cmc
sbb
add
int3
les
mov
shr
add
daa
shrb
and
jns
xor
les
mov
inc
jle
in
mov
mov
xlat
cmp
lock
add
add
push
movsb
lea
lods
and
rcrl
dec
jbe
add
push
nop
adc
push
ror
mov
jne
push
mov
aam
inc
sub
dec
and
loopne
pop
fldt
push
mov
imul
xchg
mov
or
push
out
inc
xor
bound
xchg
dec
fistps
int
sub
test
inc
filds
dec
mov
inc
rorl
mov
sbb
cli
push
mov
fcmovne
mov
fidivl
and
mov
sub
sbb
cli
cltd
inc
test
xchg
lods
jae
out
mov
dec
sbb
shl
leave
xor
fldl
cmp
pop
les
pop
sub
hlt
adc
mov
xchg
mov
stc
jbe
popf
xlat
fisubrl
sbb
pusha
lock
pusha
outsb
jb
in
fwait
je
dec
outsb
sub
int3
sub
mov
mov
and
test
fildl
jbe
enter
data16
cmp
push
cmc
arpl
addr16
xchg
mov
mov
clc
pop
adc
mov
mov
inc
cmp
cmc
xor
cmc
mov
and
stos
pop
mov
leave
dec
sub
xchg
cmp
fsincos
adc
loope
test
push
lret
pop
pop
xor
adc
hlt
cwtl
xchg
cmc
jge
pop
iret
int
lea
dec
pop
push
jo
loope
sbb
push
outsb
jmp
or
dec
ja
add
or
dec
negl
xchg
mov
dec
add
xchg
xchg
ljmp
das
test
jle
add
enter
pop
adc
cltd
dec
aad
ljmp
or
sbb
sub
inc
sbb
mov
in
or
movsl
xchg
pop
lret
pop
push
jp
cmpb
and
inc
or
push
sub
sub
push
mov
addr16
fld
jbe
arpl
inc
inc
dec
mov
sbb
scas
mov
fwait
movd
out
sub
hlt
hlt
sbb
push
dec
lret
pop
ds
xchg
push
mov
aad
insb
pop
add
jno
movsb
mov
divl
nop
es
aad
mov
pop
xor
aas
jno
jnp
and
inc
je
mov
js
aam
adc
mov
and
insb
flds
fldl
test
cwtl
mov
mov
les
addb
add
mov
cmp
test
stos
sti
sarb
add
ja
fidivs
ret
repnz
mov
push
push
xor
xorb
stc
sahf
cmc
cltd
loop
stos
stc
dec
adc
and
stos
rcrl
and
mov
mov
push
mov
mov
faddp
mov
fwait
daa
add
out
xor
lock
add
and
test
sti
add
jne
mov
lcall
lea
aad
cli
push
pop
adc
inc
and
mov
cmp
rorl
jge
mov
pop
or
insl
xchg
add
xor
mov
push
mov
icebp
ret
repnz
sbb
lods
pop
loopne
scas
in
mov
inc
jl
leave
scas
in
addr16
es
xchg
mov
andl
mov
mov
icebp
adc
fwait
subb
push
jl
ljmp
repz
or
mov
pusha
sub
js
and
pop
idivl
fs
dec
inc
das
and
jge,pn
pop
xchg
sub
inc
ret
push
aad
pushf
lods
add
lret
rorl
inc
sbb
std
or
shr
jle
loope
rcl
popf
mov
mov
testb
mov
call
sub
cmp
pop
repnz
scas
push
inc
iret
pop
test
call
push
mov
inc
mov
fnstenv
push
aaa
jbe
clc
pop
stc
inc
and
out
push
xor
and
jle
ret
iret
jmp
es
outsb
jecxz
pop
dec
pop
add
mov
sbb
es
pop
dec
cmp
jb
or
stc
in
cmp
dec
ret
fisubrl
mov
add
mov
in
stc
outsl
adc
mov
jl
push
sahf
insl
inc
adc
in
lcall
jbe
push
cmp
inc
jnp
inc
xchg
inc
ss
insl
pop
xchg
into
add
orb
and
mov
dec
xchg
sarl
lret
push
or
xor
mov
scas
cmp
push
or
lods
mov
movsb
in
xchg
inc
dec
and
fstl
cmp
insb
js
mov
adc
rol
mov
jno
and
sbb
pop
je
andb
cmp
cmpsb
mov
ljmp
push
out
push
add
add
xchg
std
jg
in
pop
and
jnp
add
ficomps
jge
inc
shlb
fsubrs
cmp
xchg
imul
mov
into
sbb
mov
gs
cmc
pop
dec
xchg
lock
cltd
pushf
gs
pop
pop
jge
cs
dec
test
and
sub
dec
jle
add
and
mov
push
push
jns
or
pop
push
lds
mov
dec
fnstcw
mov
roll
lds
mov
xchg
orb
cs
lret
lret
fucomip
jge
aaa
add
add
mov
pushl
push
das
cmp
cmp
jo
ret
mov
out
sbb
int
loop
addr16
cmpsb
sub
mov
sbb
inc
push
mov
xchg
aas
fisttpl
lods
sbb
lods
popf
sub
popf
int
jmp
out
add
mov
push
push
shl
cltd
or
or
push
lret
fucomip
mov
shll
xchg
push
xor
pop
xchg
outsb
lds
jns
in
add
xlat
push
xor
lods
inc
mov
cmp
inc
movsb
das
aas
dec
das
pop
push
mov
loop
cmc
xchg
sar
stos
push
negb
inc
mov
scas
push
minps
in
push
lods
pop
rolb
mov
push
xor
xlat
dec
jb
mov
inc
pop
lret
pop
pop
xor
push
popa
push
mov
je
arpl
adc
fmul
scas
dec
fsubrl
add
lock
inc
ds
shrl
leave
ljmp
jl
mov
imul
outsl
fsubl
icebp
push
clc
cld
mov
out
cmp
cltd
cltd
js
shll
inc
xor
bound
xor
cld
int3
ret
sub
jecxz
scas
dec
and
int3
mov
into
mov
out
push
sub
add
test
outsb
dec
xchg
sub
sub
lea
fstpl
mov
push
insl
mov
inc
xor
cmp
or
cmp
lods
dec
jg
insl
popa
and
push
lea
mov
in
xor
inc
cwtl
jnp
mov
dec
scas
sbb
jo
pop
test
lea
mov
push
gs
pop
push
cltd
and
or
adc
sub
int
sub
mov
ja
mov
push
movsb
sbb
add
mov
idiv
iret
std
mov
mov
jge
add
into
outsb
imul
cmpsl
adc
xchg
in
aad
jge
and
push
dec
std
test
mov
es
int3
adc
aam
test
lea
and
cmp
fcoml
gs
je
push
mov
mov
cmp
pusha
add
out
push
jmp
loopne
jns
push
hlt
pop
pop
into
addr16
fists
xchg
in
loope
cmpl
imul
add
push
shll
loope
cmp
fldenv
adcl
xchg
pop
std
gs
shlb
clc
scas
cli
out
shrb
insl
pop
insl
jne
lds
or
outsb
mov
outsb
add
iret
mov
jge
push
lock
jl
fsub
imul
pusha
and
sbb
enter
xor
sub
cmp
mov
cmpl
jle
xor
push
movsl
movsb
dec
inc
shrb
loop
fs
shll
popf
push
out
or
mov
add
or
xchg
movsl
lea
xor
push
jmp
in
pop
outsl
fcoms
pop
sbb
push
dec
pop
add
ss
popa
ljmp
addb
add
test
mov
inc
push
in
mov
enter
mov
out
repz
mov
loop
out
aad
hlt
or
adc
data16
mov
addl
jnp
mov
mov
xchg
movsl
sub
and
jns
fdivrl
pop
adc
jnp
fyl2xp1
es
mov
fnsave
les
or
subl
adcl
int
dec
cmpsl
shl
sub
add
jge
cmp
jo
pop
and
jle
and
pop
icebp
rol
xchg
pusha
mov
ss
iret
sbb
fisubrs
inc
sti
mov
in
stos
cmp
add
cmpsl
fidivrs
mov
push
push
sub
pop
sbb
inc
or
fwait
sti
stc
pop
push
std
outsb
sub
mov
stos
cmp
adc
inc
push
push
mov
cmp
dec
inc
or
mov
dec
cwtl
adc
lret
test
add
out
ret
mov
out
mov
pop
jo
add
mov
add
gs
pop
pop
dec
dec
pop
sbb
inc
fcompl
lods
push
cmp
or
xor
std
in
pop
sub
fcoms
cltd
mov
nop
sub
insb
mov
push
jne
out
xor
test
stos
add
mov
ja
push
or
sbb
sti
lock
cmp
sub
mov
pop
adc
cwtl
lock
nop
inc
enter
or
mov
inc
adc
repnz
fnstenv
lahf
cmp
push
insb
test
mov
adc
filds
adc
push
and
gs
icebp
xchg
inc
testb
cld
movsb
pop
scas
jne
fwait
outsl
addl
adc
loope
mov
daa
push
push
std
aam
add
push
adc
aas
in
push
roll
push
push
pop
or
cli
ds
jp
dec
push
push
pushf
pop
lea
outsl
push
push
push
loopne
cmp
dec
mov
das
scas
jmp
pushl
js
imul
sbb
clc
and
mov
loopne
push
mov
bound
push
cli
cmc
sub
sub
ss
xchg
jge
lods
push
pop
cmp
mov
add
outsl
push
into
into
xor
dec
les
add
cld
lods
mulb
add
out
xlat
cltd
sbb
push
scas
sbb
add
stc
rorl
lret
lcall
ret
push
sbb
push
sbb
rcr
and
pushf
jmp
push
mov
push
jp
lods
cld
sar
pop
pop
push
test
ds
jo
mov
cmc
test
movsl
push
fs
shlb
movsb
lds
sarb
out
jbe
add
pop
sub
and
arpl
aad
cmp
sbb
lret
in
xor
push
mov
mov
lret
lret
cli
and
mov
xchg
jle
cmpsb
xchg
inc
lahf
into
out
mov
addr16
cld
imul
jno
push
je
shlb
stos
arpl
and
std
ret
jl
pop
inc
and
and
cld
and
xor
daa
xor
and
insl
mov
aad
mov
or
daa
xchg
divl
mov
rcrb
or
mov
shlb
cmp
mov
das
cmp
fisubrs
and
add
push
push
jle
xlat
outsl
mov
lcall
add
mov
add
test
mov
loop
or
xchg
xor
push
pop
fwait
xor
shrl
cmpl
jle
shll
lret
divb
lods
jle
pop
cmc
cmpsb
jno
sbb
pop
and
dec
jmp
and
adc
pop
lods
test
shll
je
sbb
add
ja
dec
jnp
insl
inc
dec
xor
pop
int3
lods
jp
mov
sbb
repnz
repnz
xlat
mov
js
loopne
pop
ret
jle
addr16
dec
mov
adc
lahf
cmp
or
xlat
jmp
pop
inc
sti
mov
addr16
popa
imul
sti
outsb
scas
call
lret
or
lahf
cmpsb
xchg
sti
and
nop
push
out
xlat
inc
inc
fwait
jno
insl
je
push
in
aas
xorl
int3
popf
rcrl
pop
dec
cmpsl
stc
orb
mov
cwtl
lcall
rcr
lret
adc
idivb
sub
cmpsl
cmp
jmp
cwtl
les
jno
fstps
cli
ss
dec
cmp
mov
mov
int3
pop
sbb
mov
mov
pop
testb
adc
jnp
ljmp
call
cmp
out
test
insb
lret
and
aas
cmc
and
sbb
jnp
enter
lods
inc
sub
cmp
xchg
xor
adc
loop
xchg
and
test
jge
mov
es
mov
add
and
shlb
cltd
push
cmc
xor
mov
jmp
lret
mov
and
call
stc
ja
rol
int3
mov
les
mov
ss
int
xchg
fmull
sub
pushf
push
lock
jl
cli
insl
in
mov
std
mov
test
outsb
call
jb
inc
pop
push
adc
int
aaa
popa
pop
fbstp
push
dec
mov
jmp
xchg
aam
jo
jns
sbb
cltd
and
fdivrl
jb
pop
cmp
sub
adc
xor
cmp
mov
mov
addb
test
mov
jo
test
mov
jl
and
adc
shrl
or
pop
add
adc
or
pop
out
repz
jl
jne
test
add
bound
aam
clc
xor
hlt
cmpsl
fcoms
cmpb
idivl
dec
cld
dec
dec
inc
cmp
pop
jle
mov
cmc
mov
mov
jg
outsb
dec
lock
jle
xor
dec
mov
dec
je
mov
pop
cltd
dec
imul
jb,pt
cmp
add
add
pop
mov
jp
jmp
fsubl
outsl
sbb
aad
or
daa
xchg
pop
repnz
mov
adc
je
and
sbb
mov
stc
inc
mov
mov
mov
daa
ljmp
idiv
mov
lret
xorl
and
ret
dec
les
pop
fwait
inc
pusha
scas
xor
adc
jbe
sbb
int
dec
mov
andl
sahf
xchg
stos
sbb
dec
out
mov
jbe
mov
fsubrl
adc
aam
aaa
je
pop
xchg
sbb
or
sbb
and
push
push
mov
mov
ret
sbbl
adc
test
jo
lret
jge
cmp
sarb
sub
clc
je
sub
jne
sahf
bound
stc
lret
jbe
push
jl
sub
jg
pushf
mov
fbld
mov
cs
cld
push
outsl
popf
cmpl
push
mov
cmp
sbb
cmp
fisubrl
addr16
lock
inc
loopne
and
or
or
mov
pop
push
push
jg
mov
jl
bound
add
clc
int
test
xchg
sbb
ret
xchg
mov
mov
mov
inc
sub
notb
sub
jg
inc
push
cmpsb
movsl
les
hlt
mov
and
fiadds
je
jo
ret
pop
push
shrl
adc
fists
imul
mov
pop
testb
mov
dec
pop
cld
cltd
or
jns
insl
push
fidivl
xlat
pusha
jne
jmp
mov
push
shlb
and
sbb
pop
dec
cmpsl
shl
add
push
orl
cmp
dec
decb
sub
xchg
cmp
int3
cmp
or
roll
leave
xchg
insl
mov
aam
inc
fsubs
mov
add
mov
imul
mov
xchg
xlat
inc
mov
sti
xchg
imul
mov
rep
xchg
inc
movsb
and
pop
imul
loopne
mov
xchg
arpl
jle
xchg
out
inc
cmp
jb
xchg
jns
adc
xchg
mov
fwait
xor
or
jne
push
shr
pop
enter
fs
cmp
inc
pavgw
jecxz
xchg
and
or
add
xor
xchg
pop
sbb
ss
ljmp
xor
lahf
sbb
ret
int
sbb
xchg
fistl
addr16
cmpsl
push
mov
xchg
cmpb
mov
mov
xorb
xlat
mov
loop
cmpsb
xchg
imul
cmp
jno
push
cmpb
push
stos
cmp
add
jno
fs
imul
gs
mov
cmpsb
pop
mov
rorl
cmp
jno
clc
xor
lret
jne
lret
es
vpsrad
mov
das
dec
adc
mov
sar
dec
jmp
jg
inc
es
andl
in
jnp
add
xchg
push
pop
fiaddl
cmp
push
mov
mov
and
loop
stos
mov
pop
adc
add
xchg
push
inc
fiaddl
fdivrs
xlat
cmp
inc
pop
imul
dec
adc
in
rolb
mov
imul
push
outsb
test
and
xor
lcall
enter
sbb
daa
pop
call
sub
lea
das
daa
inc
imulb
xor
jb
mov
or
fcmove
and
push
cmp
sbb
cmp
cmpsb
jb
outsb
xorl
sub
mov
lret
cmpl
pop
rcr
das
insb
mov
leave
xchg
hlt
xchg
gs
rorl
or
mov
addb
pop
or
mov
add
cmp
add
pop
lods
or
test
addr16
pop
pop
sub
popf
mov
jecxz
cwtl
std
adc
lcall
mov
dec
xlat
ret
inc
fndisi(8087
dec
ss
jmp
lods
mov
imul
inc
loope
and
mov
jmp
jp
sbb
add
xor
mov
add
dec
out
ja
idiv
pop
out
dec
mulb
popf
cwtl
mov
add
inc
lahf
dec
loop
lcall
clc
dec
out
iret
sub
push
xchg
test
fistps
jmp
jno
lret
test
sbb
fldcw
loop
mov
jl
imul
xchg
xchg
incl
mov
mov
lods
pop
inc
ss
push
push
jecxz
test
test
inc
mov
or
aam
add
or
add
push
xchg
lods
push
xor
pushf
aaa
mov
in
add
shlb
jnp
and
jmp
int
jb
jns
cmc
sub
xchg
mov
popa
jb
mov
jl
mov
pop
loope
push
pop
enter
aam
xor
leave
lea
mov
add
push
add
cmpsl
lcall
mov
sub
xchg
cltd
lret
das
test
push
test
lds
in
out
rcll
push
ficoml
pop
shll
pusha
stos
std
xor
repz
jae
xor
mov
jae
xchg
ret
push
or
xchg
sub
shrb
jo
icebp
xor
daa
mov
pushl
inc
and
je
or
mov
adc
xor
fldt
xchg
push
orl
xor
in
repz
std
callw
fs
and
sbb
sti
mov
adc
fiadds
nop
and
test
sub
aas
addr16
iret
mov
jmp
sarl
sbb
insb
out
inc
das
mov
xor
incl
and
lret
mov
jbe
cmc
cwtl
inc
lods
push
mov
inc
jo
add
out
insl
dec
fidivs
cs
in
ret
lret
add
insb
push
sbb
jmp
out
loopne
aad
jno
pop
jle
mov
lcall
xor
adc
cmp
rcrb
xor
loope
fbstp
mov
rcrb
xor
sbb
or
fimull
lahf
rcl
mov
ds
dec
sbb
arpl
xchg
test
mov
inc
jp
xor
std
jp
clc
aam
das
imul
mov
pop
jecxz
sti
mov
test
lea
add
mov
lcall
es
and
or
jl
and
das
cmp
repz
pushf
dec
push
addr16
pop
call
adc
jo
sti
pop
add
icebp
inc
out
bound
adc
mov
mov
xor
loop
dec
int3
icebp
and
add
inc
push
repz
clc
push
pop
clc
mov
push
pop
sbb
lret
pop
shrl
dec
addr16
sub
push
mov
insb
gs
cmp
pop
mov
pop
es
lcall
push
repz
jp
lods
cmp
out
fists
fwait
cmpsl
test
ret
xor
mov
inc
leave
jae
and
adc
cmc
lods
sub
loope
xor
fwait
pop
cmpsb
push
into
push
in
lahf
test
loop
sbb
clc
clc
fiaddl
test
aas
ds
js
jge
repnz
fistl
ljmp
pop
repnz
mov
imulb
and
lret
cmp
out
mov
adc
jecxz
lea
js
mov
jg
ret
cmp
mov
mov
push
ret
pop
call
xchg
push
mov
fmul
dec
in
pusha
call
and
jle
fwait
or
fiadds
push
add
mov
xor
int
test
into
sbb
inc
inc
and
jmp
push
mov
sbb
inc
add
out
pop
sub
dec
mov
mov
test
hlt
in
xchg
or
xchg
in
fs
cmp
aam
insl
mov
aam
adc
pop
cmp
ja
mov
jge
inc
repz
into
int3
and
dec
in
push
mov
movsl
jnp
push
cmp
sbb
aad
lods
mov
sub
mulb
ljmp
jle
iret
mov
call
sub
push
pop
inc
fidivrl
cmp
mov
xchg
xchg
std
xchg
mov
sub
aad
imul
bound
jmp
nop
or
jle
insb
mov
push
mov
cld
push
push
rcll
jmp
adc
xchg
addr16
mov
mov
jmp
cld
stc
js
pop
popa
aaa
mov
add
add
add
sahf
xor
mov
lods
popl
add
pop
pop
push
fldt
fcomps
jbe
roll
ljmp
ucomiss
stos
mul
push
dec
iret
mov
gs
mov
cltd
mov
loope
or
cmpsb
mov
push
and
mov
je
jmp
or
adcb
jmp
adc
mov
out
jbe
ss
int3
fidivrl
sbb
cmp
and
test
cwtl
adc
adc
push
es
add
cmp
out
and
data16
push
mov
mov
push
notb
mov
rcrl
xor
cmp
pop
data16
inc
mov
rcr
sub
scas
dec
and
mov
push
add
adc
sbb
loope
test
mov
pop
inc
sbb
adc
adc
and
dec
fildl
xor
pop
and
dec
pop
insb
and
push
pop
adc
add
leave
lods
lock
nop
imul
cmp
inc
shrb
inc
clc
ljmp
mov
dec
xchg
push
mov
test
jnp
dec
push
inc
mov
aam
xchg
add
inc
xchg
sub
cmp
ret
mov
cmp
jbe
mov
xor
cmp
aam
xchg
jp
lret
push
lcall
imul
adc
ljmp
pop
jae
into
lahf
jecxz
test
paddusb
xor
dec
nop
mov
and
rcl
mov
imul
adc
xchg
scas
dec
ret
les
jecxz
ret
xor
mov
std
pop
mov
cmp
into
adc
mov
enter
adc
loope
pop
scas
dec
pop
dec
cwtl
dec
das
push
fsubrs
pop
adc
fisubrl
cli
andl
jp
test
cmp
popa
mov
inc
sti
mov
push
bound
mov
ss
mov
mov
test
xor
psadbw
ljmp
stos
cld
test
xor
or
mov
mov
jle
pusha
pop
inc
pusha
dec
pop
ss
jae
inc
dec
imul
adc
rorb
into
repz
int
xlat
and
xchg
icebp
add
add
std
in
mov
mov
std
pop
xor
xchg
dec
ret
xchg
add
mov
add
icebp
xchg
lods
int
in
ret
adc
xor
cltd
dec
ret
lods
imull
mov
jae
inc
pop
sub
rol
outsb
pop
sbb
pop
mov
xchg
and
stos
subb
pop
sub
mov
xor
push
cs
jle
push
and
gs
sar
mov
cmp
xor
fidivrl
xlat
add
dec
sbb
lods
push
dec
mov
popf
xchg
pop
dec
sub
jne
xorl
sbb
jno
jnp
push
shlb
or
xor
repz
ror
adcl
inc
pop
mov
cmpsl
jb
xchg
js
pushl
sbb
xchg
and
out
sbb
mov
fcoml
push
ljmp
in
xchg
fcmove
mov
out
jae
dec
shl
shll
inc
pusha
ret
ljmp
adc
es
xor
and
dec
or
lods
divb
dec
movsl
add
xchg
sahf
sbb
adc
and
mov
lret
fldenv
aaa
mov
clc
dec
inc
lea
cwtl
and
outsb
cmpsb
cli
imul
fbld
lahf
fwait
push
and
outsl
daa
ss
xchg
lcall
repnz
inc
xchg
insl
pop
dec
daa
sub
and
mov
int3
aas
aas
lods
pop
xor
js
mov
jmp
fucomip
jo
dec
sbb
sub
push
sub
fst
ds
mov
mov
pop
dec
fstps
test
adc
xchg
int3
jnp
adc
sarb
lcall
push
mov
add
cli
jmp
outsl
lcall
fnstcw
divb
lret
rcl
push
sti
xchg
in
es
and
in
xchg
xor
clc
push
stos
stc
and
jb
jmp
or
mov
daa
dec
xor
mov
ret
inc
popa
popa
xchg
movsb
test
sbb
add
pop
push
mov
fcomi
mov
in
sub
xor
lock
adc
jno
mov
idivl
movsl
push
inc
mov
pop
push
mov
dec
mov
jg
add
sbb
jmp
and
outsb
cmp
fisubs
test
mov
out
in
add
repnz
out
sub
mov
and
xchg
add
mov
add
lea
fdivrs
cmp
sbbb
xor
mov
das
mov
jbe
and
out
lock
gs
xlat
cmp
cli
sahf
inc
jg
xchg
sbb
popf
jmp
dec
push
mov
cmp
xor
out
jno
arpl
add
mov
cs
jle
sbb
ljmp
scas
dec
adc
push
repz
jb
xchg
xchg
jecxz
dec
sahf
out
push
out
inc
fs
ss
inc
dec
mov
dec
loop
std
xchg
push
stc
dec
andl
lds
inc
mov
pop
loope
mov
mov
shrb
mov
mov
mov
sub
scas
shlb
insb
add
pushf
sub
dec
lds
xor
gs
ds
cwtl
add
mov
pushl
jle
cmp
dec
dec
mov
jnp
or
ret
dec
inc
lret
test
ret
hlt
or
sti
pop
shlb
dec
adc
cmovno
push
jbe
sub
sub
cltd
pop
push
aaa
push
xor
cmp
adc
cmpsb
or
ss
jg
fwait
ljmp
cmc
negb
push
fdivrp
and
jnp
test
bound
scas
out
pushf
dec
lea
mov
mov
add
out
xor
orb
bnd
mov
mov
test
mov
jmp
sub
cltd
sub
cmpsl
or
or
adc
pop
pop
add
push
pop
xchg
outsb
movsb
iret
rcrl
popa
pop
jp
into
cmp
mov
data16
dec
mov
loope
jmp
pop
xchg
adc
outsb
adc
push
sbb
xor
ljmp
jg
add
pusha
jecxz
loop
inc
push
xchg
loop
add
cmp
xor
add
mov
inc
pop
pop
nop
push
push
sub
mov
and
enter
fwait
pop
rorl
mov
imul
cltd
inc
adc
sarl
std
cmc
xchg
jne
push
mov
adc
or
push
sub
pushf
push
inc
xchg
fs
pop
aam
mov
jno
mov
fiaddl
add
popa
data16
rcrl
xor
xchg
add
mov
add
das
shll
sar
cmp
dec
stc
in
cmp
cmp
add
or
arpl
push
out
xchg
and
xchg
aad
jno
pop
out
mov
pop
mov
mov
int
xchg
and
add
fildll
ja
test
xchg
mov
negl
cmp
xor
fnstcw
pop
add
or
jne
cmp
popa
fdivr
loopne
fs
repnz
sbbl
cmp
mov
mov
push
xor
repnz
repz
into
std
mov
clc
xor
jp
sbb
push
jge
jbe
cmpsb
mov
fistpll
add
mov
popa
mov
mov
lock
insb
adc
gs
cmp
push
jl
or
xor
cmp
test
inc
or
insl
mov
push
jnp
cmp
outsb
jns
scas
cli
cltd
ret
mov
popf
out
pop
inc
or
hlt
pop
cltd
mov
shlb
repz
mov
and
jecxz
imulb
sub
push
test
call
cmpsb
push
jo
gs
mov
add
sub
aaa
add
adc
and
cmpsb
push
int3
xchg
jg
je
decl
or
and
scas
je
arpl
sbb
fbstp
orl
mov
int
ret
int
push
or
fs
nop
cld
sbb
js
mov
aaa
sbb
mov
aas
gs
mov
cmpsl
xor
mov
cwtl
data16
out
jle
xlat
push
jo
ja
das
fmull
into
outsb
mov
mov
mov
pop
pusha
ljmp
mov
and
sub
es
push
js
dec
sub
ret
sbb
lret
sub
mov
adc
adc
sbb
and
jge
jne
imul
je
mov
in
add
jns
sar
sbb
test
call
or
aas
sub
push
mov
es
pop
xor
lahf
js
pop
cmpsb
xchg
in
cmp
outsb
xchg
subb
es
pop
xorl
push
push
jo
add
cmp
cli
in
jg
loopne
iret
adc
aam
add
mov
add
punpcklbw
popf
cs
mov
fldt
jle
pop
pop
das
xchg
dec
adc
adc
sbb
mov
cmpsb
pop
std
sbb
cmp
sub
jae
cli
loopne
iret
push
f2xm1
fcmovu
jnp
fs
mov
inc
sub
mov
dec
xchg
sub
sub
loope
popl
cli
xchg
popl
push
cmp
lds
pop
cli
ljmp
fnstcw
fwait
out
js
ret
adc
pop
iret
fsubrp
and
sub
cmpsb
and
fs
push
xchg
pop
and
data16
or
sbb
xchg
and
hlt
mov
pop
lcall
xor
lcall
stc
xor
push
or
pop
fnstenv
mov
mov
ret
xor
or
dec
lret
clc
sub
cmpsl
dec
repnz
nop
jb
jl
movsl
mov
fdivr
mov
ror
pop
int3
jbe
fldcw
ja
mov
popl
pop
or
inc
or
mov
test
lods
lock
fsts
jle
inc
xor
push
add
fsubrp
xchg
subb
jns
xor
in
jb
adc
mov
push
mov
pop
cmpsb
dec
dec
jle
xchg
pop
adc
jnp
xor
subl
inc
push
fst
mov
insb
idivb
insl
mov
popf
cmp
popf
sbb
jne
insl
mov
shll
sti
xchg
mov
jno
mov
lods
dec
iret
jecxz
sub
repz
out
fadd
stc
cmp
inc
enter
xor
xchg
pop
mov
jae
jb
lcall
ret
and
push
sbb
mov
xor
sub
aam
or
scas
fcmove
push
pop
add
fidivs
mov
and
xor
js
int
jl
in
movsl
repz
sub
sbb
sub
xchg
nop
mov
fdivrs
das
popf
adc
es
das
scas
insb
cmpsb
mov
lods
lds
mov
xlat
pop
scas
and
jbe
iret
or
xchg
mov
cmpsb
cld
inc
pop
dec
cmpl
cmp
call
push
dec
inc
xchg
mov
jns
test
xchg
in
sbb
push
add
popa
fmul
jge
mov
push
mov
and
xor
out
adc
cmp
les
add
shlb
xchg
lcall
cmpsb
and
loop
pushf
add
mov
add
mov
in
outsl
mov
adc
movsb
pop
repz
xchg
mov
mov
xor
fisttpll
or
je
xchg
and
mov
outsl
outsl
cmp
rorl
mov
int3
push
leave
js
cmp
ljmp
movsl
repnz
jnp
add
xlat
mov
sub
mov
adc
or
mov
mov
and
insl
repnz
std
mov
lods
mov
push
pushf
add
aam
xlat
movsb
add
xor
int
xorl
sub
pushf
mov
xor
xchg
push
sbb
jno
add
out
sbb
ds
cmpsb
xor
int3
sub
jnp
lret
jae
sub
and
pop
loop
movsb
or
test
xchg
sbb
lds
inc
cmpsb
push
push
mov
mul
add
ret
jg
orb
test
xchg
cmp
push
fsub
gs
mov
nop
cmpsl
lret
loop
cld
sub
fcomps
push
push
lods
negl
cmp
in
mov
sbb
sbb
cmp
pop
arpl
sbb
clc
push
faddl
and
ds
xchg
mov
mov
or
xchg
push
push
loope
pop
cmp
rcll
inc
inc
jnp,pn
or
js
mov
je
xchg
push
mov
iret
dec
movsl
mov
mov
xchg
ficoms
or
mov
adc
xor
sub
push
sub
jmp
or
pop
addl
mov
out
mov
push
xor
das
pop
enter
mov
idiv
mov
clc
mov
mov
in
mov
out
sub
mov
pop
fimull
sbb
dec
cmp
adc
xor
add
mov
mov
dec
cmp
loop
push
mov
shll
adc
or
cltd
adc
lahf
lods
jecxz
aaa
scas
mov
mov
icebp
mul
adc
cmp
fwait
xor
std
jmp
sti
mov
xchg
rclb
adc
add
dec
in
cmp
insb
mov
fnstsw
mov
add
push
psubsb
add
leave
sbb
fwait
sbb
in
sbb
stos
shl
sub
adc
fcmovnu
push
jne
test
pop
cmc
push
lds
xchg
daa
cmp
xor
dec
stos
mov
mov
loop
jbe
dec
aas
sub
mulb
mov
je
cmpsl
inc
dec
stos
stos
xor
mov
shlb
jo
movsb
movsb
outsl
sti
iret
decl
stos
jo
xor
setl
mov
dec
pop
mov
add
push
sub
popf
sub
in
je
in
lods
xchg
lods
add
pop
fidivrs
add
mov
lcall
push
jmp
out
loopne
fnstenv
jns
das
cmpsl
pushf
fucomip
or
lret
pop
xchg
adc
push
pushf
rcrb
xchg
jecxz
iret
jae,pn
aam
push
push
enter
pop
jmp
subb
test
mov
mov
and
popa
push
push
pop
push
cmp
sbb
pop
inc
int3
loop
roll
push
lock
outsb
lods
inc
or
cmp
test
int3
ret
xor
pop
call
mov
mov
into
pop
dec
mov
push
lahf
jle
enter
loop
scas
cs
jp
or
jb
adc
sbb
sbb
pop
movntps
add
out
repz
pop
in
imul
sub
lret
das
outsl
pop
pop
lret
adc
insl
mov
xchg
and
cmpsb
push
add
test
push
dec
bound
pop
enter
stos
xor
dec
push
test
sbb
ja
or
mov
ljmp
test
jge
call
adc
dec
rorb
lret
pop
add
ficomps
xchg
sub
popf
mov
jnp
mov
jmp
cli
ss
mov
xor
js
in
sbb
pop
add
jg
icebp
mov
xor
push
mov
stc
jg
jle
popa
adc
int
xlat
cmp
mov
out
cwtl
cltd
lea
mov
bnd
test
or
dec
test
stos
aaa
inc
sbb
int3
pop
mov
add
and
loope
push
push
leave
cs
arpl
aaa
adc
push
dec
daa
sbb
xchg
mov
dec
cmp
add
mov
fwait
add
inc
mov
and
jb
add
mov
add
push
cmpsb
mov
fidivl
mov
and
ljmp
fisubs
mov
sub
je
int3
pop
xchg
push
dec
xchg
call
test
or
call
sahf
daa
push
fs
xchg
daa
popa
jae
popa
test
or
lret
lcall
mov
cmc
adc
push
xor
sbb
fcmovb
repnz
inc
cmp
loope
pop
jge
sbb
cli
dec
xor
jecxz
push
into
jnp
aaa
sbb
push
sbb
inc
dec
enter
jns
push
arpl
adcl
scas
xchg
sbbl
jno
mov
mov
imul
push
inc
pop
sahf
int3
and
xlat
mov
leave
pop
mov
into
fldl2e
xchg
in
mov
mov
cmp
adc
roll
popa
pop
nop
mov
addr16
pop
stos
pop
ds
aaa
add
sub
orl
sub
mov
cmp
and
std
and
lea
mov
inc
jo
test
mov
ficoms
sahf
pop
addl
das
mov
je
mov
movsl
sub
cmpsl
jmp
lods
mov
pop
in
lods
nop
mov
fwait
mov
xchg
adc
in
icebp
sbb
adcl
lret
and
test
inc
adc
es
scas
push
and
call
cmc
pcmpeqb
pop
pop
arpl
loopne
les
jg
xor
js
aaa
int3
add
and
pop
inc
lock
arpl
inc
dec
shl
dec
cltd
insb
xor
lret
repz
sub
ret
xor
or
xchg
mov
daa
jmp
or
out
iret
out
test
fbstp
mov
or
dec
mov
add
mov
sbb
inc
adc
cmc
pop
sahf
cli
test
popl
xchg
or
js
pop
jp
ret
push
dec
push
loopne
mov
adc
xlat
add
inc
and
dec
subl
rol
jle
fistps
jp
hlt
dec
xlat
or
mov
bound
pop
repnz
icebp
inc
ret
xor
sbb
mov
arpl
cli
les
add
mov
cmp
jle
xor
out
lcall
add
xchg
xchg
cs
dec
shll
cmp
je
dec
pop
pop
call
aam
addr16
imul
inc
sub
and
andl
or
iret
xor
jne
adc
and
push
popf
mov
jne
leave
mov
ds
mov
pop
mov
jl
scas
adc
mov
adc
fldenv
add
mov
and
and
and
ret
scas
mul
aad
and
lret
inc
pop
dec
cmp
dec
push
ljmp
out
out
imulb
or
or
mov
xchg
test
stos
sub
loope
xchg
rol
sahf
into
loop
mov
jmp
jle
leave
push
jle
sarl
sbb
xchg
cmc
int
jne
or
aaa
xchg
dec
test
ss
mov
cli
cltd
aaa
xchg
dec
cli
sub
sbb
dec
je
dec
sbb
mov
push
push
insl
sbb
mov
push
in
repnz
inc
icebp
ss
jb
mov
and
fidivrl
mov
or
fists
push
xchg
mov
std
stc
mov
mov
inc
cmp
arpl
adc
or
shll
out
orl
pop
out
and
xchg
xchg
pop
xor
int3
mov
jle
leave
bound
mov
out
push
xorb
cli
stc
ss
pop
xchg
cli
and
idivl
push
call
add
shll
scas
negl
mov
shrb
mov
fwait
pop
movsb
enter
shlb
shlb
cmp
adc
jnp
mov
push
das
das
push
cmp
lds
mov
mov
gs
nop
mov
mov
stos
aam
loop
pop
jmp
pop
inc
adc
into
leave
cmc
jne
fbld
jns
bound
xchg
mov
bound
lcall
or
pop
nopl
and
lods
sub
movsb
jecxz
adc
fst
aad
push
sbb
mov
lods
pop
sti
loope
push
addr16
xchg
jns
in
cmp
sahf
sbb
ljmp
pusha
ret
jg
mov
xor
xor
lcall
lods
adc
cltd
pop
fistl
mov
push
mov
push
push
loopne
gs
mov
jecxz
push
scas
testb
cmp
out
idivl
mov
and
cmpsb
add
mov
add
arpl
imul
jle
sbb
das
clc
cmp
jnp
in
xchg
xor
fwait
mov
js
or
adc
cmp
in
into
ljmp
lock
xor
push
loop
pop
jecxz
sti
inc
enter
cmp
imul
jae
inc
aaa
adc
jmp
hlt
sub
dec
adc
pushw
rolb
adc
icebp
xchg
fs
add
mov
inc
arpl
rclb
sbb
test
out
sbb
mov
lcall
shrb
xlat
scas
pop
mov
mov
push
cmp
aaa
xor
jecxz
pusha
push
push
imulb
test
cli
jnp
and
outsl
leave
mov
mov
xchg
add
mov
rcll
and
cld
ljmp
aad
and
mov
push
add
in
aas
adc
push
xchg
shrb
sbb
mov
rcr
je
nop
and
push
fstpl
arpl
sbb
loopne
xchg
mov
or
xchg
mov
and
jp
mov
test
test
dec
push
in
and
orb
mov
adc
ds
xchg
call
adc
jbe
pop
enter
add
push
cld
push
adc
adc
add
xchg
lcall
aad
leave
lcall
sahf
pop
inc
aas
fwait
ja
add
jmp
sbb
repz
bound
mov
imul
adc
dec
inc
xchg
repz
test
lcall
scas
pop
fstl
or
inc
movsb
mov
scas
xchg
outsb
outsb
bound
out
mov
inc
addl
cli
dec
lret
out
push
pusha
or
add
push
fcoms
paddd
movsb
arpl
insb
jle
push
cmp
je
pop
mov
xchg
js
pop
push
into
mov
scas
arpl
in
mov
inc
shl
and
daa
adc
je
fs
sbb
or
pop
push
mov
or
mov
sub
xchg
fldt
xor
mov
mov
ja
xchg
xor
mov
add
adc
mov
and
jae
lahf
fs
gs
fcompp
out
gs
imul
fdivrp
sti
adc
add
aaa
mov
aad
xor
test
rclb
enter
jmp
sub
insb
sub
mov
sbb
jmp
daa
ficoml
mov
cmp
imul
pop
into
test
push
cmp
pop
repnz
imul
push
mov
xchg
mov
inc
mov
pusha
ljmp
pop
jne
and
popa
push
mov
push
mov
arpl
rclb
lret
cmp
sbb
add
jbe
sub
lahf
ljmp
sub
mov
cmp
add
imul
imul
mov
or
sbb
and
xor
lahf
in
pusha
xchg
adc
jns
mov
adc
inc
sub
out
out
fsubrs
mov
fwait
cmp
out
cs
jo
jne
push
pop
sahf
pop
xchg
fldenv
sahf
and
shlb
mov
sbb
inc
into
push
push
xor
mov
mov
add
stos
rorl
fcmovnu
cmp
xchg
push
rcl
fisubrl
dec
inc
lods
pop
fcmove
pop
sbb
cmp
imul
testl
in
enter
cli
lret
jne
stos
xchg
or
jno
clc
add
jbe
faddp
cmc
mov
mov
leave
iret
repz
movsb
mov
pop
or
fs
imul
sbb
cmp
jbe
insb
fnstsw
xor
jae
sbb
subb
jecxz
and
xchg
add
loope
test
cs
xor
add
or
insb
ret
cmp
test
test
ret
hlt
or
pop
xchg
sarl
xor
and
rorl
push
and
lea
xchg
pushf
inc
jge
cmpsb
in
out
js
push
hlt
jecxz
xchg
outsb
or
daa
ja
jo
cmpsb
mov
pop
sub
pusha
and
popf
lods
jnp
fs
lods
je
movsb
xor
lods
sahf
push
std
inc
in
notb
dec
push
push
adc
je
pop
es
mov
xchg
jle
mov
xchg
jg
shlb
outsl
mov
add
mov
inc
push
dec
sub
add
fsubs
jmp
adc
sub
pusha
stc
lcall
add
and
je
sub
cmpsb
add
sbb
test
mov
mov
sub
cmp
stc
orb
popf
push
das
into
and
mov
pop
sbb
pusha
jo
inc
imul
xor
dec
test
daa
out
sub
andl
xor
push
cmove
ja
sbbl
sub
or
mov
ss
aad
push
insl
and
mov
mov
xor
out
xchg
incb
pop
ret
sarl
or
inc
jl
cld
dec
or
fisubs
in
jp
or
cli
mov
call
cmpsl
pop
cmp
mov
dec
cmp
sbb
idivl
inc
je
rolb
ss
sbb
aam
cmc
stos
add
and
dec
ss
or
xchg
xor
sbb
popa
fwait
cli
lret
sub
movsl
push
cmp
fimuls
mov
add
cwtl
popa
lcall
push
popf
jmp
adc
jg
nop
into
mov
or
mov
shlb
out
loopne
xchg
xor
adc
rol
fisubrl
mov
add
incl
jecxz
mov
mov
pop
inc
push
add
sti
es
lret
sti
lahf
add
cmp
stc
loope
dec
icebp
sti
in
sahf
pop
xor
dec
das
mov
xchg
jno
push
jg
or
xchg
sahf
mov
subl
mov
fwait
outsl
dec
fstpt
sarb
mov
jns
xlat
or
inc
rcrb
cmp
insb
ss
xchg
sbb
addr16
mov
out
fidivl
dec
testl
cmp
insl
test
pop
xor
mov
inc
sbb
test
mov
and
js
imul
movsb
dec
int
sbb
jo
xchg
inc
aas
push
dec
mov
pop
push
jne
out
jp
xchg
imul
add
incl
in
dec
leave
jl
push
lods
out
test
mov
enter
frstor
adc
movsb
or
pop
add
add
jmp
adc
fidivs
cmp
mov
pop
out
mov
fs
cmp
out
dec
popa
add
cwtl
dec
into
enter
push
mov
or
add
push
and
xor
push
dec
pop
and
add
mov
add
movsb
add
mov
mov
cmpsl
pop
sti
scas
push
ja
sub
xlat
mov
dec
daa
int3
test
cwtl
std
mov
fcmovu
cmp
mov
inc
aaa
or
or
addr16
or
lcall
push
mov
mov
jb
mov
fs
push
mov
adc
outsb
hlt
aaa
inc
int
pushf
jnp
jae
sti
adc
lret
push
scas
adc
data16
jmp
popf
leavew
push
jle
dec
popa
pop
scas
test
or
cli
mov
pop
ret
add
je
insb
rolb
ss
and
enter
mov
mov
inc
jns
in
cmpsb
jmp
push
stc
xor
daa
sbb
pop
push
mov
mov
pop
movsl
sti
repnz
xor
mov
rcrl
inc
mov
xchg
adc
and
stos
imul
jbe
fdivrs
inc
pop
jns
mov
clc
incb
inc
ret
jecxz
xorl
adc
mov
xor
subb
sub
leave
jb
outsl
mull
pop
adc
outsb
or
mov
sub
std
leave
shl
or
xor
or
fwait
into
iret
stos
push
ds
mov
or
ret
in
mov
cmp
mov
jbe
xchg
es
inc
mov
pop
mov
mov
sbb
hlt
pop
loope
insl
enter
pop
xor
xchg
outsl
mov
icebp
ret
call
pop
mov
pop
mov
and
cmp
and
aad
into
inc
jmp
std
js
je
push
movsb
ret
pop
pop
sub
repnz
and
xor
aaa
leave
sarl
jb
out
sti
loop
adc
and
sub
in
xchg
in
movsb
lret
mov
stos
hlt
jbe
arpl
popf
inc
in
cmp
push
dec
stos
jo
jge
bound
in
mov
out
repz
xor
lret
jbe,pt
jp
jl
leave
mov
dec
push
roll
inc
fimull
lretw
dec
scas
das
mov
arpl
mov
pop
add
jb
repz
pop
xchg
jle
wbinvd
out
sub
outsb
bswap
cwtl
mov
cs
inc
shll
insl
js
add
pop
mov
jg
popa
hlt
mov
pop
scas
mov
add
adc
stos
adc
aas
in
hlt
jns
or
pop
adc
jg
in
push
adc
push
orl
fidivrl
mov
std
push
mov
jmp
sahf
mov
adc
lock
aas
xor
cmpb
jg
pop
mov
mov
mov
adc
cli
mov
test
das
std
and
loop
dec
mov
shl
clc
enter
lret
or
jle
orl
popf
mov
test
push
les
out
lea
jb
pop
ds
andb
icebp
sarl
mov
fstl
int
xchg
dec
mov
and
sahf
sub
rcl
jnp
in
int3
movsl
pusha
cmp
dec
mov
aad
sub
aas
xchg
idivl
dec
fnstsw
into
icebp
lock
arpl
mov
inc
adc
in
je
xchg
iret
adc
cmp
mov
sub
scas
into
out
lods
inc
mov
dec
mov
clc
mov
hlt
into
inc
popa
push
push
jo
fld
fsubr
add
cmp
test
cmc
inc
add
or
cmpsl
stos
shrb
and
sbb
mov
mov
loop
loope
inc
mov
mov
cmp
sbb
or
fidivl
jbe
in
xor
test
dec
inc
cmpsl
push
inc
sti
jne
sub
jo
cmpsl
mov
mov
sbb
jg
and
mov
xchg
add
jb
test
aam
sub
adc
pop
jg
je
movsb
push
ret
inc
cmp
jge
clc
push
dec
aad
inc
pop
aad
rcll
ss
xor
ss
or
subl
inc
sub
jae
mov
pop
vmwrite
xchg
add
cmp
xchg
xor
call
push
shll
push
dec
jno
push
dec
lahf
xchg
insb
jle
out
adc
cs
mov
pop
or
lret
mov
add
adc
add
cmp
pop
into
inc
outsl
stos
mov
mov
add
jo
sti
sub
adc
aas
xor
bound
div
or
test
pop
lock
shll
pushf
mov
jne
fdivr
lahf
pop
xor
in
enter
push
xchg
movsl
cltd
test
add
inc
push
pusha
jbe
out
fnstsw
adc
add
mov
add
or
push
out
fcomps
pushf
xor
call
sub
insl
jo
sub
mov
clc
sar
mov
jle
in
cwtl
jbe
and
xchg
pop
pusha
mov
xchg
pusha
sbb
call
push
sbb
mov
mov
mov
jnp
fbstp
cmpsb
xor
xchg
sub
pop
lret
xchg
jae
in
pop
mov
mov
cwtl
loop
lock
leave
mov
pop
adc
adc
add
inc
sbb
shll
sar
push
jmp
cmp
negl
jns
jae
shlb
loope
popa
pop
push
lods
aad
mov
sbb
cmp
mov
ret
mov
jge
out
cltd
adc
push
sub
sbb
push
xchg
lcall
pop
shlb
adc
inc
loopne
push
shrl
push
icebp
inc
cmp
lock
mov
insb
inc
mov
sbb
xor
inc
mov
xchg
push
and
jns
xchg
sub
lret
daa
rcll
xchg
repnz
repz
rolb
cmp
in
mov
in
lahf
test
jp
dec
cltd
push
push
mov
lret
jg
inc
mov
int3
into
pop
add
and
xchg
fwait
xor
dec
das
shll
xor
ret
ljmp
mov
stos
bound
pop
and
ficoms
out
aad
pop
sub
sub
push
cmc
icebp
pop
stos
mov
sbb
rcll
push
test
push
sbbl
cmp
mov
pop
xchg
test
cmp
or
jbe
dec
xchg
mov
aad
jnp
movsb
push
push
out
xchg
sbb
push
loope
push
lahf
dec
jge
leave
das
clc
insb
pop
aad
mov
adc
jg
or
stc
xor
pop
sbb
movsb
lea
imul
jmp
push
movsl
test
jns
adcl
sub
loope
sub
inc
cmp
xor
inc
mov
push
pop
add
gs
lret
inc
dec
js
mov
sti
sub
outsl
inc
push
mov
add
push
jge
xor
adc
or
enter
add
push
sub
fucomip
ficoms
adc
pop
call
add
jge
insb
cli
sub
sbb
cwtl
pop
imul
cld
jbe
enter
jp
into
jbe
sub
dec
and
pop
or
adc
mov
push
nop
sub
enter
lcall
jae
xlat
fwait
es
push
or
mov
cmp
xchg
add
sahf
mov
adc
insb
aad
mov
xchg
in
xor
push
mov
or
pop
and
jae
inc
ss
cwtl
adc
mov
mov
xchg
mov
jno
fs
adc
lods
in
sub
out
fimuls
xchg
xor
into
leave
sbb
lret
xchg
mov
ss
out
dec
pop
cmp
pop
mov
bsr
or
inc
push
mov
xor
mov
adc
pop
cltd
cmpsl
fsin
jmp
rol
ss
cld
dec
leave
sub
xchg
adc
lcall
dec
ret
imul
lock
push
sbb
mov
mov
add
xor
push
pop
push
mov
mov
inc
lret
addb
mov
push
sbb
mov
test
dec
push
or
hlt
jle
adc
push
jns
fisubrl
sbb
xor
inc
pop
inc
or
mov
mov
push
xor
jle
push
scas
push
adc
fucomp
xor
dec
stos
jne
sbb
out
mov
fldln2
push
and
testb
cmpl
xchg
jno
sti
mov
adc
call
inc
int3
pop
arpl
jno
mov
insl
push
jle
nop
in
int3
into
sbb
inc
cld
insl
loope
lret
clc
mov
jno
iret
inc
adc
mov
outsb
shr
ljmp
movsl
fistl
mov
or
dec
adc
dec
mov
cmc
mov
cmpsb
mov
sbb
or
leave
inc
inc
sub
gs
jns
jb
bound
out
int
jnp
scas
cmpl
lock
in
mov
jns
cmpsb
xor
and
adc
inc
fdivrs
shl
push
in
push
fisubrl
jge
rorl
add
outsl
daa
insl
push
push
stos
adc
mov
add
mov
add
sub
jne
jge
pop
mov
mov
mov
int
cmc
in
je
sbb
push
fs
pop
insb
mov
adc
mov
inc
add
gs
cmpsl
leave
repz
mov
jbe
xchg
test
push
jl
lcall
insb
loop
mov
jge
ret
cmc
fucom
aam
dec
cltd
or
popf
mov
dec
dec
mov
sub
addr16
pop
loopne
repnz
addb
jecxz
adc
or
fcoml
std
subb
xacquire
sahf
sti
mov
cmp
add
and
dec
out
and
push
lds
pushf
arpl
loopne
push
iret
out
es
mov
arpl
add
rolb
jl
cmp
scas
int
pop
lcall
inc
xchg
scas
dec
mov
aam
fmull
fnsave
ss
add
clc
sbb
sub
fs
mov
add
sbb
cmp
cmp
clc
aaa
xor
cmpsl
mov
mov
add
jbe
sub
mov
fisttps
adc
les
fwait
inc
mov
add
pushf
stos
push
cld
cmp
aas
stos
jae
iret
mov
dec
mov
pusha
iret
cmp
cmp
fdivrl
push
mov
inc
pop
adcb
inc
xor
stos
push
inc
pop
lds
out
add
pushf
add
and
mov
inc
inc
cmp
out
adc
mov
insb
mov
popa
cmp
inc
out
stos
je
movsl
pop
je
cld
xchg
out
and
call
sub
inc
xor
pop
mov
into
ljmp
pop
or
dec
std
inc
jge
cmc
mov
stos
sub
xchg
cmc
push
or
inc
ret
xchg
and
pop
push
adc
jno
fwait
xor
push
cwtl
lcall
or
icebp
jge
stos
aas
adc
mov
fld
nop
lcall
sbb
aad
js
fwait
dec
inc
popf
lcall
mov
lret
outsb
dec
imul
enter
cmpsl
add
xor
test
in
lds
sarl
clc
repnz
fisubs
mov
loopne
loopne
iret
adc
inc
dec
sbb
and
sub
inc
lea
and
mov
out
add
test
mov
add
mov
lret
call
add
into
xchg
pop
inc
cmp
ret
lock
xchg
sub
rcrb
test
push
pop
add
dec
lret
dec
enter
mov
push
lods
push
inc
push
xchg
push
outsb
dec
cmpsb
in
jnp
sbb
movsl
inc
cmc
lock
pusha
inc
or
pop
fstps
adc
sbb
nop
repz
mov
adc
fisttpl
mov
inc
push
fdiv
out
mov
addr16
mov
gs
test
es
sbb
call
sbb
cmpsl
test
sub
mov
mov
lods
test
push
dec
aaa
cmp
and
dec
sbb
and
adc
inc
rol
mov
lods
sub
and
mov
jmp
xor
ror
add
loopne
cli
adc
test
int
and
add
lock
sbbb
mov
push
mov
xor
mov
cmp
and
in
pop
dec
mov
out
daa
add
pop
adc
sbb
add
or
lahf
imul
jg
jbe
lcall
xor
cmp
pop
or
nop
lods
jge
sbb
stos
jle
xlat
lret
and
and
inc
imul
adcb
cmpsb
inc
cltd
pop
dec
sub
inc
lock
scas
mov
dec
xchg
addr16
js
dec
mov
mov
inc
lock
mov
or
or
pop
xor
out
sub
push
jo
aad
out
mov
sti
mov
pusha
fdivrs
int
cmp
sbb
mov
xchg
fiaddl
cmp
xchg
or
or
mov
sub
mov
inc
lret
cmp
outsb
cmpsl
pop
imul
das
cmp
aam
push
stos
sub
and
and
ja
mov
push
mov
cmp
pusha
jb
push
movsb
cmc
lret
fldt
jp
mov
out
repnz
add
mov
xchg
and
aad
xchg
aaa
pop
sbb
inc
outsl
leave
dec
dec
pusha
pop
jns
xchg
shll
loop
ret
mov
mov
adc
jecxz
out
jmp
ja
out
enter
dec
subb
hlt
cmp
mov
and
push
dec
pusha
mov
add
mov
xchg
push
lea
or
dec
shll
push
arpl
cmpsb
push
xor
mov
xor
lds
mov
sbb
inc
leave
fcompl
xchg
sti
dec
cmp
dec
pop
std
test
sbb
fwait
mov
lret
pop
in
and
data16
cwtl
push
clc
movl
inc
dec
xor
push
aaa
aas
xchg
jbe
jl
ljmp
cmp
mov
xchg
movl
cmp
and
in
mov
lcall
pop
rcrl
push
sahf
fstpl
add
fildl
inc
dec
sarb
inc
ljmp
pop
movsl
lret
and
fcomps
fmull
mov
cmpsl
lods
int3
pop
insb
addr16
adc
adc
add
xor
and
inc
cmpb
fsubrs
xor
sbb
stos
adc
or
push
dec
fsubrs
jne
push
inc
push
push
adc
ja
out
xchg
sti
rol
jp
sub
xor
xchg
nop
outsb
fs
mov
into
mov
mov
inc
inc
jmp
pusha
lds
or
std
mov
or
pop
lods
mov
pop
dec
push
pop
cmp
sbb
test
cmp
and
xchg
js
xlat
mov
movsl
popf
loop
jne
jp
pop
xchg
mov
jmp
jl
push
pop
stos
cmpsb
mov
outsl
cs
shl
pop
mov
repz
dec
lcall
cmpb
pop
adc
or
shrl
cmpsb
sbb
mov
movsl
sub
adc
data16
dec
in
into
ja
mov
xchg
mov
sbb
jmp
jp
jl
push
orb
jne
leave
loop
std
cwtl
mov
lock
mov
dec
xor
inc
push
pop
adc
xor
sbb
mov
stos
insb
pop
pop
or
xor
add
add
movsb
out
jns
ficoml
repz
enter
std
adc
adc
mov
sbb
fiadds
out
shr
inc
pop
pop
popf
into
pop
pop
mov
pop
mov
cmpsl
rcrb
repnz
imul
cmpsb
in
fs
fcomps
mov
lods
push
pop
sbb
psubb
add
pop
fnstsw
icebp
enter
mov
cmpsb
and
add
mov
push
ds
outsb
sbb
mov
pop
xor
mov
add
push
insb
dec
cs
stos
adc
push
mov
lods
mov
mov
adc
addb
call
pop
dec
mov
fists
in
mov
ja
loope
pop
sub
ret
stos
jl
xchg
sbb
ja
push
jns
out
xor
nop
jl
xchg
ret
ljmp
cmpb
shr
int3
fwait
pop
sbbb
adc
lcall
mov
data16
or
inc
xchg
mov
in
add
push
jecxz
cli
dec
out
mov
icebp
lcall
loopne
xor
cs
int3
test
and
repnz
xor
bound
ss
add
push
lods
aad
negl
jge
xchg
hlt
push
adc
ficomps
fistl
bound
mov
sbb
test
mov
test
cmpsl
mov
sbb
jecxz
loop
rclb
or
int
ljmp
ret
daa
fcomi
pop
lret
push
imul
cmp
jecxz
cmp
push
mov
call
int3
test
sub
sbb
mov
test
sub
push
outsb
or
xlat
out
insb
xchg
sbb
pop
es
aad
loope
jbe
fldenv
mov
xchg
push
rolb
aaa
iret
mov
in
mov
push
sti
test
stos
inc
lods
cli
movsl
sbb
sub
inc
repnz
add
pop
xor
stc
repz
sahf
pop
or
push
sbb
stos
dec
xchg
inc
lods
add
fistl
test
pop
and
test
ja
outsl
outsb
cmp
out
sub
sarl
adc
adc
and
lods
filds
xchg
xorb
fldenv
pop
fwait
test
xlat
ret
or
pusha
lds
imul
adcl
pop
lods
leave
leave
shrl
nop
cmp
cmc
inc
inc
pop
inc
sbb
aas
push
inc
jecxz
movsl
mov
add
stos
or
std
cs
insl
lret
jnp
mov
mov
mov
dec
sub
lahf
pop
mov
cmp
scas
inc
ds
mov
ror
cmp
push
sarl
push
sub
adc
sub
in
lahf
inc
pop
or
outsl
cmp
add
mov
xor
or
je
add
mov
add
fisubrs
fs
cmp
add
std
push
xchg
js
jl
pop
fimull
inc
and
add
nop
pushf
fwait
sti
pushf
mov
sub
dec
mov
lods
fs
sbb
pop
or
mov
push
sub
push
sti
lcall
out
jb
outsb
ret
xor
sbb
aas
ret
cmp
and
in
xchg
push
std
out
lds
xchg
xchg
xchg
push
push
inc
js
fwait
cmp
daa
stc
pusha
mov
pop
aad
subb
jp
sub
pop
jmp
inc
jle
repz
aam
dec
xor
xchg
jnp
addr16
push
movsl
divl
dec
adc
sarl
push
sbb
xchg
fs
jle
rorl
scas
pop
mov
sbb
into
adc
sbb
sbb
ret
xor
addl
bswap
adc
pusha
xor
mov
jo
rcrb
fwait
sbb
xorb
jp
cli
push
mov
faddl
push
add
pop
xor
pop
std
lods
sub
mov
pop
mov
lods
add
push
mov
and
dec
rcr
sbb
inc
sahf
jecxz
test
mov
lods
pop
push
out
mov
mov
cmp
cmp
call
xchg
push
lret
push
fbstp
out
lods
xor
sub
lea
push
adc
add
inc
xchg
adc
into
in
fwait
outsl
mov
in
repz
sbb
fbstp
lods
add
cmp
sub
xchg
sbb
daa
jge
mov
mov
ds
add
mov
int
pop
xlat
pop
jmp
jmp
xchg
insl
mov
push
int3
jmp
add
xchg
mov
int3
lods
aas
and
ja
orl
ds
xchg
add
xchg
mov
loope
push
movsl
mov
adc
and
or
mov
xor
jmp
jmp
push
test
and
jecxz
sbb
icebp
cwtl
lock
mov
dec
xchg
fsts
jne
add
je
je
or
cmc
loopne
in
testb
cs
call
sarl
in
lock
add
mov
in
stos
clc
adc
out
les
add
ficoml
jecxz
pop
mull
bound
xor
gs
fiadds
mov
cmp
sbbb
jbe
scas
pop
fs
mov
leave
push
movq
aas
jge
pop
es
lea
jg
push
jnp
imul
cmp
lcall
repnz
les
into
addr16
mov
mov
or
addr16
adc
into
stos
sbb
push
add
and
push
je
jecxz
fldl
push
ret
push
and
add
add
fidivrl
aad
cmc
sub
movsb
fstps
add
int3
and
fldl
fdiv
mov
pop
mov
jp
push
out
addr16
addr16
sub
dec
std
sbb
lods
enter
ss
mov
aas
daa
inc
lcall
mov
mov
out
pop
popa
sahf
in
es
mov
lcall
mov
adc
pop
ss
in
xor
loop
stos
das
xchg
dec
push
fstps
subb
jl
mov
std
fnsave
or
in
mov
subb
mov
sbb
jge
icebp
or
xor
jle
and
insl
test
ret
outsl
jnp
stos
clc
dec
ficompl
inc
mov
and
sbb
mov
jecxz
mov
or
adc
popa
jle
outsl
bound
pop
rorb
je
push
notb
mov
sbb
inc
dec
lret
inc
cmp
js
mov
addr16
daa
adc
bound
xor
imul
cmp
cmp
mov
or
sbb
and
push
sub
sub
xchg
push
xor
add
test
ja
xchg
sbb
repz
insl
cmp
enter
mov
dec
or
mov
xchg
arpl
mov
mov
mov
or
lea
xchg
push
mov
pushf
out
mov
pop
in
sbb
fstp
pop
or
iret
push
sbb
mov
cmp
cmc
aaa
sub
pop
or
loop
cmp
data16
ljmp
mov
shll
add
fldcw
loopne
lahf
inc
data16
add
mov
add
jmp
daa
push
sub
lds
faddl
push
mov
sub
or
arpl
test
cmp
adcb
jbe
mov
adc
es
in
xor
inc
mov
xlat
jns,pt
inc
jnp
jmp
add
popa
imul
int3
fnstsw
aaa
sub
pop
jle
dec
lret
dec
ret
mov
test
lcall
add
fs
imul
mov
and
sbb
pop
outsl
cmp
xor
jno
push
xor
cmc
fmuls
stos
leave
std
test
ja
loope
mov
das
jp
push
je
mov
in
repz
inc
jns
cmpl
pop
inc
adc
std
pop
rcr
es
pop
js
popa
sbb
sub
mov
xchg
insb
addb
cmp
in
mov
push
sahf
mov
arpl
decl
fs
fstps
mov
in
xchg
out
add
mov
inc
cli
incl
pop
jae
mov
fiaddl
dec
leave
jg
imul
dec
rcrb
testl
jbe
imul
pusha
xlat
add
jg
ficoms
aas
test
push
mov
or
nop
xor
insb
jb
sbb
lcall
xlat
incb
dec
jno
test
jbe
fdivr
sub
dec
dec
and
or
sub
and
in
pop
mov
stos
out
inc
bound
jmp
or
fadd
jo
jo
decb
xor
push
mov
pop
rcrb
sub
adc
imul
mov
sub
arpl
jg
mov
mov
lods
inc
xchg
inc
movsb
test
jmp
add
xlat
xor
das
inc
and
and
lcall
jecxz
adc
cmp
int3
fisubrs
sbb
inc
aam
dec
adc
mov
test
lcall
hlt
inc
xchg
push
xchg
aas
movsl
lcall
inc
outsb
jo
gs
inc
neg
dec
add
pcmpgtw
inc
movsb
pop
xchg
or
mov
imul
mov
dec
int3
rcll
add
add
add
push
dec
pop
xchg
js
mov
adc
add
mov
add
in
jp
adc
subw
movsl
inc
cmp
ds
addl
mov
mov
pusha
cmp
fdivrl
out
js
add
data16
adc
adc
orb
pop
push
in
sbb
xor
js
push
icebp
dec
fnstenv
sub
mov
out
push
lret
and
add
inc
fisubrl
rol
xchg
sbb
mov
xchg
lea
aaa
push
pop
cmp
test
sub
fwait
std
pop
mov
pop
add
inc
stos
dec
icebp
xor
adc
adc
xor
jne
aam
movsb
mov
in
imul
fcom
xor
push
rcll
mov
jp
data16
sbb
jg
les
das
jmp
pop
mov
data16
push
repz
push
repz
mov
mov
jo
pushf
jb
or
mov
rclb
cld
add
xchg
sbb
rol
sbb
dec
data16
hlt
adc
adc
pop
flds
aas
int3
mov
mov
aaa
or
fidivl
push
and
pop
ja
fldl
test
mov
cmpsl
cmpsb
add
inc
and
sub
pop
data16
test
fwait
sbb
ficoms
ret
ljmp
sbb
outsl
cs
push
mov
aad
cmpb
repz
ret
aam
std
loop
frstor
sub
call
mov
mov
push
jg
pop
jp
or
mov
ja
add
loopne
fnstcw
cli
pop
movsl
and
dec
push
insb
lahf
push
and
mov
fsubl
xchg
and
les
fistl
out
fldenv
xor
pop
pop
rcr
xchg
inc
mov
je
sbb
xchg
je
push
mov
mov
add
rcr
hlt
inc
xor
arpl
adc
imul
mov
push
clc
jmp
dec
js
insb
fstpt
or
in
and
dec
mov
cmc
push
jo
stos
push
mov
dec
negl
fists
jp
popa
xor
mov
repz
sbb
xchg
inc
enter
xchg
adc
sub
add
mov
and
loope
enterw
xor
fnstsw
in
sub
aas
stc
stc
fs
int
sahf
mov
cmpsb
xchg
mov
or
pop
mov
lret
add
or
dec
mov
jo
lea
int3
add
mov
add
sub
imul
out
mov
rorl
in
cmp
cld
pop
xor
nop
push
rol
in
jns
xor
jbe
mov
xchg
cwtl
jne
xchg
pop
mov
adc
xor
push
lock
ror
fidivs
pushl
addr16
sti
ja
rolb
lret
or
arpl
das
xchg
jl
in
add
xchg
imul
pusha
sar
cmpsb
fsubrs
add
fistps
stos
mov
pop
es
lahf
insb
into
xchg
cs
and
or
clc
enter
pushf
loope
out
pop
shll
loopne
adc
add
mov
adcb
arpl
fucom
rolb
jp
test
stos
xchg
pusha
loope
xor
ret
imulb
and
adc
iret
mov
int3
jg
cltd
stos
mov
rsm
pop
std
lret
iret
or
cmpsl
inc
outsb
imul
sub
sub
add
adc
sbb
inc
dec
mov
cmp
jp
std
pop
inc
adc
adc
cmp
add
adc
shlb
adc
jmp
or
inc
pop
jp
mov
xor
ss
fstpl
xor
popf
test
push
pop
fidivrs
lahf
aas
test
stc
mov
movsl
pop
fimuls
fidivs
cmp
mulb
xor
addr16
push
adc
clc
and
popa
imul
cli
lods
std
sbb
out
xchg
dec
std
jo
xchg
int3
cmp
jne
loope
xchg
inc
jbe
push
xchg
jle
jle
adc
js
pop
or
jle
mov
fwait
dec
arpl
icebp
outsl
push
rcr
mov
inc
test
fbstp
pop
enter
into
push
out
aam
pop
and
sti
sbb
cwtl
pop
adc
cmp
push
loope
add
sub
dec
shl
dec
imul
adc
lods
cmp
sbb
out
mov
enter
jl
ljmp
cld
lahf
jge
and
mov
xlat
subl
add
add
jmp
mov
adc
repnz
adc
sbb
pop
inc
cmp
es
jle
cmpsl
inc
adcl
ret
mov
jg
jle
mov
and
stos
clc
mov
mov
add
ret
and
dec
repz
fldt
popa
cmp
add
inc
bound
xchg
cltd
int
cmp
shl
fwait
nop
pop
mov
call
int
jge
mov
or
sub
mov
inc
pushf
cwtl
mov
gs
js
xchg
outsl
ljmp
xor
jl
cs
loop
dec
dec
in
rclb
sbb
imul
mov
pop
cli
sub
inc
insb
sub
les
das
or
lcall
xchg
sub
lret
call
out
sbbl
std
inc
adc
stos
dec
shlb
outsl
and
shl
mov
arpl
jecxz
insb
mov
scas
out
test
insb
rcrb
loope
faddl
test
into
xor
push
add
frstor
ret
sahf
mov
cltd
mov
jl
negl
cld
fiaddl
cmp
mov
mov
sub
sti
mov
inc
addr16
mov
mov
inc
in
call
cs
in
sub
insb
lcall
add
inc
and
or
mov
jnp
mov
insl
jge
cmp
mov
out
dec
ret
mov
xor
mov
sti
adc
fidivl
scas
sahf
cltd
jle
ss
mov
and
out
or
sbb
cltd
movsl
cs
shll
or
imul
mulb
mov
ret
adc
cltd
and
sub
cmpsl
mov
cli
jecxz
and
iret
pop
dec
shll
cltd
pop
jle
sub
int3
xor
cli
sub
rcrl
popa
imul
insb
daa
test
mov
dec
mov
push
sti
push
daa
inc
dec
sbb
insl
imul
test
outsb
xchg
iret
loope
jmp
jae
sbb
popa
out
popl
or
lahf
shrb
repnz
or
div
and
gs
lcall
pop
and
sub
sub
add
jg
test
jns
or
out
push
and
xlat
pop
jb
js
xchg
into
insl
adc
inc
dec
sbb
cmp
into
dec
sub
jnp
orl
add
call
iret
cli
fdivl
aad
adc
mov
out
add
lcall
jnp
pop
pop
mov
cltd
jne
mov
add
mov
add
ja
into
in
jl
jp
push
jno
pop
sbb
test
inc
fyl2x
fimull
outsl
adc
xchg
add
xor
and
jl
dec
sbb
mov
cmp
sahf
ljmp
push
fcomi
xchg
cmp
mov
inc
adc
mov
outsb
sbb
xor
push
aaa
pusha
nop
test
cmp
mov
mov
aam
movsl
xchg
and
cli
cmpsl
xor
fsubr
pop
push
jne
sub
ds
sub
xchg
adc
lock
adc
arpl
sub
mov
sub
jge
mov
cmc
add
jecxz
in
xchg
cmp
imul
sbb
in
adc
into
jne
push
sbb
push
mov
popa
xchg
repz
mov
xor
pushf
scas
daa
pop
mov
fbstp
lods
mov
or
enter
and
in
ret
out
push
xor
add
dec
pusha
mov
inc
fdivrs
or
xchg
fnstsw
fidivl
pusha
dec
xor
cld
cmp
imul
int
jnp
add
lret
imul
in
fidivl
mov
mov
shll
jnp
push
outsb
sub
out
xor
fdivs
jle
or
aam
das
das
inc
add
xchg
dec
js
ljmp
rcrl
repnz
cwtd
pop
mov
inc
push
loop
adc
sub
adc
lcall
jg
les
add
and
aad
stos
mov
jge
ja
aam
aas
cmpsl
out
call
dec
xlat
fstl
mov
cmp
cmp
fdivs
push
push
sahf
aaa
mov
scas
mov
jg
sbb
jmp
scas
mov
adc
xor
ret
adc
cmpsb
andl
adc
mov
jns
sahf
and
cmp
inc
jno
jle
ret
jbe
xchg
add
movsl
out
mov
xlat
sbb
add
xor
in
imul
dec
mov
cld
loopne
jno
loopne
inc
sbb
xchg
test
fisttpll
jmp
cmp
lahf
cmp
sub
imul
sub
add
idivl
subb
aam
add
insl
in
and
inc
and
mov
mov
dec
data16
mov
sub
inc
in
stc
xchg
jmp
stos
mov
fs
sub
shr
inc
mov
jmp
or
test
repnz
negl
int
jmp
stos
mov
sbb
loopne
inc
add
push
les
xor
pop
popa
xor
mov
add
data16
xchg
ret
xor
or
cli
lcall
xor
jge
inc
js
test
add
test
insb
arpl
in
outsl
fwait
jns
dec
in
pop
shlb
push
pop
ss
add
shl
and
inc
cmp
mov
push
fs
fistps
xlat
mov
in
adc
imul
push
pop
out
xlat
movsl
pop
out
scas
cld
sti
and
pop
dec
ljmp
jmp
adc
fsts
outsl
jmp
test
or
push
lahf
and
push
pop
cmp
add
daa
adc
insb
les
loop
or
arpl
xorl
inc
jae
or
xchg
int
dec
push
add
shll
mov
fnsave
xor
and
outsl
jbe
in
mov
adc
push
push
or
sub
cmovns
ficomps
jae
jmp
mov
pop
ja
add
inc
jae
add
pop
adc
sbb
adc
xchg
sarl
jne
sub
mov
rclb
adc
mov
cs
jge
fmul
xor
push
mov
jmp
stc
cmp
rclb
sub
or
or
add
mov
in
popf
xchg
sub
pop
repz
cmpsb
mov
bnd
cmpsl
pop
lock
inc
mov
lcall
sahf
loop
push
in
movsb
xchg
mov
sub
test
into
xchg
lock
mov
inc
dec
inc
xchg
icebp
aad
addb
xchg
jmp
xlat
les
dec
scas
fwait
dec
cli
call
xchg
ss
icebp
dec
xor
xchg
jg
icebp
test
push
es
into
clc
cmpsb
xor
add
add
mov
call
mov
mov
add
mov
add
sub
lea
sub
fmuls
mov
pop
jle
push
cmpsb
in
pop
pop
and
test
ljmp
pop
fistpl
mov
pop
jns
xchg
ljmp
sub
sti
cwtl
jno
loope
rol
movsl
pusha
jae
loop
mov
test
add
mov
xchg
xorb
sbb
xlat
or
fs
cmc
add
dec
dec
or
ljmp
mov
aaa
pop
mov
lcall
inc
cmp
add
sub
insl
int3
loope
pop
or
pop
cmpsb
stc
adc
add
data16
xor
insb
mov
bnd
out
test
das
or
aaa
movsl
nop
add
cmp
sbb
in
scas
sub
stos
pop
sub
push
pop
rcr
aam
insb
and
mov
les
es
js
mov
push
je
adc
arpl
mov
jecxz
ret
add
xchg
movsl
pushf
clc
mov
ss
out
fnstenv
jle
insb
repz
lret
ljmp
mov
das
fldl
popf
imul
and
jge
push
inc
mov
dec
lods
or
cmp
cmp
cmp
pop
adc
lods
sbb
js
xor
andl
mov
das
subl
sub
std
push
lret
push
inc
int3
fcmovb
mov
mov
lcall
xchg
outsl
jo
jbe
xor
inc
inc
bt
mov
cs
pop
jae
jg
ja
inc
cltd
rcrb
mov
enter
push
lea
mov
dec
pop
pop
jmp
xor
mov
jle
andl
push
lahf
subb
ret
inc
mov
inc
addl
pop
jl
mov
sbb
cltd
out
cld
push
cmp
jno
imul
inc
sub
sbb
fsubr
adcb
and
jecxz
add
adc
sub
and
sahf
cmpsb
adc
in
pusha
stos
in
stos
insb
cwtl
push
into
cwtl
push
cmpsl
movsl
test
mov
in
add
push
sub
xchg
xor
pusha
sub
and
fistpl
inc
add
inc
pop
inc
push
jo
push
sub
or
xchg
mov
sbb
add
ficompl
mov
flds
add
add
std
sahf
aad
cli
lods
shll
sub
fildl
dec
jnp
dec
xchg
jns
push
xor
hlt
int
ret
mov
insl
pop
add
leave
aas
enter
in
idiv
and
mov
fdivrs
adc
xchg
popa
test
outsl
lock
inc
out
clc
les
popf
mov
nop
mov
jmp
mov
mov
pop
repz
xchg
rolb
xchg
and
scas
pop
push
lret
in
into
jno
and
out
mov
mov
pop
mov
jno
mov
dec
push
inc
out
push
mov
fstps
ja
inc
iret
and
dec
pop
jne
cli
sbb
dec
mov
push
inc
shl
inc
jg
in
rorl
out
cltd
test
xor
push
lcall
loope
outsb
out
jb
fimull
add
fcmovbe
hlt
cli
ficoms
ljmp
aam
jnp
sarb
xor
or
shll
sub
mov
enter
and
gs
mov
push
ror
into
fdivl
repz
mov
xchg
sub
lock
xchg
icebp
ffree
shll
fwait
and
push
shl
leave
jecxz
add
sahf
add
outsb
stos
sub
mov
mov
das
movsl
out
pop
xchg
repz
fwait
pop
mov
and
mov
jae
and
fimuls
mov
adc
lds
jno
or
xchg
addr16
and
subb
pusha
push
lock
mov
lock
mov
jno
loop
aas
arpl
mov
je
inc
js
xor
xchg
xchg
in
movsl
mov
gs
test
gs
orb
jns
add
popa
sbb
pop
inc
xchg
sbb
add
mov
xlat
xor
cmp
push
das
stos
cltd
in
mov
popf
pop
pop
scas
jns
sub
sbb
pop
lds
pop
mov
sbb
test
xor
mov
dec
scas
mov
push
dec
es
movsl
arpl
or
xchg
out
inc
lret
mov
mov
pop
sti
mov
sub
dec
ficompl
idivl
aam
outsl
adc
bound
xchg
leave
jmp
aas
xchg
rcll
jl
in
push
lds
sahf
jns
cmp
test
fildll
stos
sbb
inc
stos
pop
sbb
cli
inc
cli
outsb
ljmp
fcomp
add
mov
add
or
cmp
inc
add
inc
data16
adc
adc
lret
mov
cwtl
xor
dec
cmp
in
ljmp
pusha
jp
sbbb
je
adc
je
scas
mov
in
adc
sbb
mov
movsl
mov
sbb
mull
mov
fcompl
popf
notl
cmp
bound
mov
cmp
adc
mov
repz
scas
add
xchg
mov
add
enter
hlt
shlb
clc
sbb
push
sub
das
sti
mov
sbbl
imul
shrl
hlt
and
pushf
mov
and
ret
inc
and
sbb
add
test
jge
mov
jne
dec
pop
pop
cmp
xor
icebp
std
mov
andb
repz
popf
and
sbbl
or
pop
bound
adc
ss
cmp
pop
and
and
add
or
mov
xor
dec
pop
push
lret
push
decb
xor
adc
popf
jecxz
in
cmp
lea
out
jl
rclb
jb
mov
push
sub
fs
out
sti
jb
push
xor
mov
es
mov
push
inc
fldl2t
xor
push
jmp
pop
xor
adc
dec
test
cmp
mov
push
jo
lea
lea
lea
mov
nop
data16
and
mov
enter
in
sub
push
dec
pop
lea
ja
cmpsl
cmc
jbe
jge
xor
loop
xor
arpl
dec
ret
lahf
xchg
mov
push
sbb
arpl
inc
sbb
movsb
mov
push
dec
das
xor
imul
adc
rorb
push
and
jo
arpl
push
adc
icebp
dec
sahf
popf
cltd
mov
sub
or
dec
es
sub
rcll
add
xchg
cmp
xor
dec
fdivr
arpl
and
aad
insb
jae
subb
ja
fsubl
push
cwtl
bound
sbb
test
mov
roll
std
movsb
add
mov
xlat
push
xlat
ja
out
ss
mov
fiadds
add
push
cmp
and
loop
dec
jne
sahf
cmp
das
stc
mov
int3
cld
imul
mov
mov
and
aad
dec
decl
inc
sti
inc
je
add
or
mov
fcomps
jmp
lea
jecxz
push
sti
and
fs
shl
dec
ret
push
cld
mov
mov
add
add
repnz
push
push
roll
stos
push
xchg
and
lret
lods
mov
test
add
jb
cmp
test
xchg
insb
inc
and
pop
or
jbe
in
test
adc
ja
push
inc
out
jns
stos
jg
adc
cmc
mov
sub
inc
gs
out
lods
iret
stos
icebp
sbb
scas
rcll
add
inc
push
fildll
and
push
fdiv
sbb
insb
inc
je
inc
pop
jg
pop
fs
push
mov
test
cli
scas
inc
arpl
adc
imul
pop
mov
push
js
add
fimuls
jmp
push
dec
xchg
gs
mov
add
xchg
mov
and
sbb
mov
jns
jp
push
out
sbb
add
sub
push
lea
xchg
push
push
add
call
jno
movsb
jb
lahf
mov
outsl
pop
sarl
pop
cmp
in
push
lret
orb
call
bound
xchg
mov
cld
arpl
notb
cltd
mov
ja
mov
out
jnp
leave
inc
clc
popf
mov
fbld
xchg
sbb
sub
mov
pop
adc
mov
mov
shlb
pusha
inc
sbb
xchg
or
pop
imulb
sti
push
push
or
push
popl
leave
rcl
rcrl
or
push
testl
fstpt
pop
cmpsb
sahf
imul
int
pop
xor
mov
or
cltd
xchg
mov
mov
out
ret
out
les
imul
mov
pop
sub
mov
in
adc
sbb
jg
and
pop
test
out
xchg
movl
dec
ret
sti
jns
mov
jns
push
cli
and
sbb
pop
inc
mov
fs
imul
or
mov
mov
push
lea
popa
lea
xchg
add
rcll
pushl
in
test
mov
add
out
inc
sbb
pop
sub
cwtl
repz
push
jae
data16
clc
sbb
xchg
xchg
popa
out
xchg
inc
mov
loopne
and
clc
clc
and
std
pushf
gs
dec
adc
and
adc
and
push
aad
loop
inc
mov
fwait
je
scas
rcll
xor
lret
xchg
aas
cmpsb
js
scas
mov
stos
add
aaa
imul
ja
mov
fistpll
add
adcl
les
std
nop
push
repnz
iret
jl
data16
and
ret
fsubrs
sub
sub
gs
ds
push
bnd
arpl
cmpsl
cmp
mov
jp
or
cld
in
and
test
sub
inc
jo
aaa
mov
xchg
cmp
push
adc
pop
ljmp
push
out
add
dec
push
pushl
ja
decl
add
mov
pop
mov
lods
lret
add
sbb
mov
int3
clc
fnstsw
mov
or
loop
inc
sbb
loopne
in
test
cmp
push
shrb
into
mov
gs
cwtl
fnstenv
pop
lea
repnz
das
and
js
jnp,pt
xchg
in
in
pop
jae
jno
les
mov
dec
jbe
int
and
xor
dec
stos
clc
cltd
test
ljmp
psubw
or
mov
ds
push
call
dec
lock
dec
in
roll
adc
cmc
mov
push
sub
mov
push
ret
out
leave
lods
enter
push
fnstenvs
outsb
sbb
clc
pop
push
mov
sbb
mov
shll
sub
fbstp
test
rcrl
add
leave
fldl
sub
mov
bound
mov
test
push
in
pop
jmp
es
fdivs
test
std
or
stos
jbe
ret
jne
jp
aas
dec
pop
addb
push
xadd
ret
and
jmp
fistpll
mov
es
outsl
xchg
jl
mov
mov
test
xor
cmp
fwait
and
cs
outsb
es
or
mov
xor
ds
push
rorl
add
negb
out
lods
push
push
sbb
add
mov
adc
in
lods
add
xor
ljmp
pop
jle
negb
call
dec
xlat
add
filds
jne
xor
enter
or
std
test
jns
stos
xor
daa
ret
sbb
inc
cmp
cmpsb
pusha
lods
push
fs
lods
add
pop
fimull
dec
mov
loope,pt
jo
ret
pop
or
add
je
aas
ret
es
das
imul
push
pushf
inc
push
outsb
jne
add
repz
cmpsl
mov
cmp
jns
orl
fnsave
in
cltd
adc
adc
aas
lds
pop
mov
add
xchg
test
inc
sub
lods
idiv
in
pop
mov
popf
mov
icebp
or
scas
inc
push
add
add
mov
jnp
fwait
mov
iret
mov
je
xchg
lcall
shl
push
es
nop
inc
add
mov
jae
sti
mov
mov
pop
jecxz
repnz
scas
mov
cmpsl
ret
mov
nop
lock
sbb
xchg
dec
cltd
imul
inc
mov
test
mov
xchg
pop
xor
mov
pop
inc
sbb
push
fdivrs
shlb
orl
xor
push
mov
xor
pop
jmp
add
xchg
in
mov
mov
fwait
jmp
dec
fs
ret
sub
scas
fildll
cltd
mov
pop
pop
mov
mov
dec
sbb
jge
cmpsl
pusha
push
xor
in
ret
aas
cmp
cmp
insl
mov
inc
les
pusha
ds
sub
jp
and
inc
or
leave
xlat
or
in
pop
mov
lock
in
out
popa
repnz
icebp
andb
subb
sub
jl
jne
sbb
dec
stos
xchg
xchg
xor
stc
js
and
loope
ret
sub
sbb
mov
mov
pop
sbb
and
jne
jns
out
flds
adc
adc
add
add
push
adc
add
lods
xor
in
and
rcl
xchg
add
js
mov
pop
push
xor
mov
add
push
push
jnp
fisubs
cltd
mov
out
add
loope
int
lock
push
pmulhuw
jp
hlt
jge
lahf
mov
shr
stc
xchg
cmp
fildll
jecxz
fbstp
ftst
stos
mov
frstor
std
divb
xor
jg
push
cs
pop
xor
test
lahf
pop
mov
mov
xchg
ss
add
jns
sub
xchg
daa
lret
iret
out
stos
jns
out
adc
adc
inc
lret
sub
xor
in
repz
mov
daa
fisttpl
cli
insl
ror
or
pop
push
lret
popa
addr16
into
or
js
sub
loopne
fwait
shr
xchg
cld
stos
push
xchg
xchg
dec
clc
jmp
test
sti
dec
or
mov
lret
cmpsb
lahf
insl
rolb
lods
test
mov
imulb
add
and
cmp
xchg
sbb
mov
add
mov
add
inc
lea
pop
push
or
pushf
mov
push
aad
jnp
sbb
sub
and
or
ffree
insb
jno
or
ficoms
andb
sub
into
mov
sti
fiaddl
int3
mov
shl
sbb
cs
pushf
adc
cmp
rolb
stc
mov
fisttps
popf
mov
mov
pop
cli
shl
int3
mov
push
mov
xchg
pop
cld
cmp
lret
jl
sub
jnp
sbb
add
xor
out
leave
mov
dec
mov
xchg
inc
mov
test
out
cmc
cmp
and
push
out
sub
clc
call
fcompp
out
iret
sbb
pop
cmp
cmpsb
insb
xchg
sub
sub
mov
xchg
jecxz
fmulp
fisubrs
add
pushf
sub
pushf
pop
or
lahf
out
movsl
pop
add
cmp
dec
outsb
xor
aaa
bound
cmp
addr16
daa
cs
and
pop
push
push
push
cmpsl
inc
and
ret
negb
xor
lret
fs
outsb
mov
inc
push
js
cs
fldenv
jg
sbb
stos
hlt
and
cmp
mov
stos
mov
aaa
pop
and
arpl
sbb
fimuls
aam
push
cmp
jns
lea
jp
int
pop
mov
add
mov
push
outsb
mov
jnp
call
add
mov
cld
stos
test
in
stos
add
ljmp
mov
jbe
call
imul
into
mov
add
mov
and
cmp
jle
retw
add
push
flds
jl
adc
push
popf
sbb
pusha
push
mov
inc
adc
sub
ljmp
es
fisubrs
js,pn
idivb
inc
inc
ja
repz
out
adc
es
sbb
jle
int
loop
push
sbb
push
cmp
int
xchg
stos
ss
and
mov
stos
fstpl
sub
cli
daa
lea
gs
cmpsl
dec
inc
cmp
outsb
fimull
scas
inc
push
or
adc
cli
addr16
inc
pop
into
fmulp
mov
and
xor
out
inc
and
cmpl
push
sbb
cmc
and
dec
dec
rclb
stos
inc
xchg
xor
sar
in
sub
loop
sub
pop
xchg
div
push
and
mov
call
push
push
repnz
mov
inc
lcall
repz
in
lods
cmp
mov
hlt
jge
sbb
in
dec
add
mov
scas
test
xchg
fldenv
jmp
cmp
int
dec
and
stos
pop
dec
inc
and
movsb
lret
jo
movsb
and
repnz
icebp
lods
sbb
push
push
mov
sub
in
push
pop
cmpsb
scas
clc
ficompl
mov
or
dec
cmpsl
cmpsb
or
sub
adc
enter
insl
or
jl
scas
mov
addb
adc
dec
or
and
aaa
push
pop
push
aaa
mov
in
roll
out
or
fiadds
leave
dec
rcr
cmp
or
hlt
pusha
arpl
jo
repz
xchg
cld
scas
ficoms
aam
sti
cmpsb
cmp
add
lock
sbb
adc
jo
jg
push
filds
sbb
pop
stc
aam
inc
jnp
pop
mov
enter
sub
int3
xor
loop
xor
cmc
stos
in
lea
lahf
test
daa
pop
nop
cli
pop
cltd
sbb
and
mov
into
cmp
add
in
or
xor
cmp
mov
es
jge
mov
and
jne
add
jns
sbb
jge
int3
outsb
xchg
ds
mov
add
out
push
fadds
cmpsl
in
loop
lods
cli
adc
mov
lret
and
dec
movsb
xor
mov
nop
add
jp
mov
sub
int3
je
lahf
xchg
push
or
clc
push
cmp
fdiv
mov
ret
xor
sbb
insl
cmp
xor
jmp
pop
scas
stos
leave
or
push
xchg
ljmp
cmp
jae
and
rcrb
in
int
lds
enter
loope
sarl
arpl
mov
sub
int
mov
inc
push
mov
xchg
in
rcrl
fsubs
fnstsw
xchg
dec
pop
shrl
clc
or
jno
jle
jl
and
test
das
xlat
in
ficoms
sar
insl
fdivr
xchg
mov
push
push
divb
inc
mov
mov
mov
mov
movsb
mov
cld
cld
pop
popa
icebp
mulb
push
dec
inc
pop
nop
scas
or
dec
arpl
push
clc
lcall
mov
ficomps
mov
cwtl
mov
in
or
dec
push
mov
mov
repnz
or
or
xor
mov
cmc
decb
pop
jb
and
sbb
fmuls
push
in
inc
loop
cwtl
hlt
popa
inc
enter
and
ds
xchg
xchg
adc
sbb
mov
icebp
pop
xchg
inc
popf
or
xchg
push
aad
pop
stc
xchg
sub
into
pop
shrb
ja
xor
jnp
mov
stc
leave
mov
xor
push
cmp
rorl
dec
sbb
ss
mov
fcmovu
jp
lds
enter
xchg
dec
push
push
lcall
insb
mov
jecxz
fcmovne
popf
outsl
mov
mov
ret
xor
cs
adc
or
outsl
inc
repz
aam
pop
pusha
jb
gs
xchg
movsb
adc
dec
adc
test
push
fisubl
xor
jne
mov
fwait
dec
push
adc
in
je
push
cld
mov
mov
fsubrs
andb
arpl
ret
cwtl
stos
stos
mov
je
jp
clc
loop
push
shlb
fildll
dec
test
les
mov
stos
push
push
inc
lcall
mov
mov
jbe
mov
inc
ret
mov
insb
dec
sbb
xor
add
add
roll
pop
sub
fistl
in
add
mov
add
lock
push
arpl
frstor
rcr
ljmp
arpl
je
fdivrl
lea
ljmp
xor
into
push
lock
jb
mov
mov
out
inc
das
ljmp
mov
mov
jle
out
shll
inc
adc
mov
out
mov
lods
scas
sub
pop
inc
sbb
outsb
das
leave
pop
xchg
sub
leave
and
fistps
jbe
adc
pop
inc
orb
mov
in
lret
sub
lret
fld
push
or
jnp
loop
xchg
pop
or
inc
subl
inc
adc
push
loope
mov
sbb
mov
mov
out
mov
iret
xor
in
pop
xchg
mov
adc
cmc
jmp
outsb
test
nop
xchg
pop
std
sub
jnp
rcrb
repz
and
sub
ret
clc
xor
mov
sarb
and
mov
scas
sbb
jbe
cltd
ljmp
cmc
xor
cltd
mov
rol
inc
mov
jo
sbb
sbb
out
xchg
mov
ret
or
insb
mov
mov
and
adc
aas
fisttps
pop
lcall
mov
mov
test
fsubr
mov
imul
inc
cmp
test
inc
scas
lcall
fdivs
xchg
out
gs
insl
cmp
ficompl
jae
stc
push
scas
adc
iret
out
xorb
jnp
cmpsb
and
xor
stos
push
cli
cmp
in
jge
dec
push
inc
lret
mov
xchg
pop
scas
mov
sbb
das
std
mov
pop
repnz
adc
jge
inc
std
push
in
xor
lods
or
jmp
jno
pop
mov
push
ret
rcr
push
adc
lods
jp
pop
ret
rol
or
jns
mov
jne
popa
cltd
xchg
and
loope
rorb
ret
sti
mov
aaa
cmp
xor
lahf
jp
ror
pop
popf
popl
movsl
test
xchg
sahf
mov
into
lcall
stos
or
add
jle
jp
sub
stos
mov
fs
ja
add
and
mov
rcrb
or
stc
ret
daa
cmp
add
daa
pushf
cli
mov
scas
aad
rcr
cmpsb
push
lock
mov
add
mov
xor
iret
fisttps
pop
xor
icebp
pop
sbb
pop
sbb
loope
mov
xor
int3
in
pop
lds
scas
aam
movsl
movsb
mov
pop
aas
jmp
xchg
jb
cmpsl
fsubp
dec
mov
dec
aas
loopne
push
dec
mov
xchg
int3
mov
cmp
add
mov
dec
dec
and
sub
push
fcmovnb
mov
mov
push
add
test
dec
mov
je
movsl
jb
sub
fidivs
lret
mov
int3
je
jnp
sub
repnz
ljmp
pop
and
filds
sub
push
movsb
inc
jle
outsb
insl
cmpsl
addr16
jbe
jg
fs
stc
add
lahf
push
jbe
dec
lods
cmpsb
push
pop
fs
outsb
mov
ficoml
jno
jle
and
ret
testl
aam
add
xor
xor
xchg
push
shlb
cmp
fstpl
maskmovq
imull
push
lods
pusha
push
popa
imul
jp
ds
or
adc
add
les
mov
push
xchg
inc
mov
mov
sarb
pop
and
in
les
enter
shlb
ret
arpl
xchg
popf
and
xchg
and
push
imul
fcoms
mov
dec
pusha
cld
iret
into
in
movntps
adc
sbb
leave
jp
call
xor
scas
nop
jae
jbe
lret
xchg
and
pushf
pop
or
and
mulb
dec
xchg
pop
pop
jns
test
jg
test
loope
fistps
addr16
stos
cmp
into
scas
into
sub
xchg
je
pop
or
lods
repz
dec
loope
mov
xchg
sarb
pop
sub
or
fcomps
call
dec
jp
leave
jns
push
jno
out
dec
cld
les
loopew
mov
cmpb
xchg
dec
ret
mull
xchg
aam
sbb
out
dec
lea
daa
push
call
mov
cmp
mov
shlb
test
jg
shll
and
cs
lahf
adc
or
xor
scas
mov
sub
decb
push
sbb
sub
ret
cmp
jo
outsl
mov
in
and
rol
and
sub
xor
mov
stc
out
jno
push
add
cmp
scas
fadd
add
lcall
bound
loope
mov
add
mov
add
test
inc
mov
fisubrl
into
clc
push
mov
sub
lret
testb
dec
mov
cmp
daa
in
mov
fsubrp
jb
push
dec
push
mov
xor
push
adc
jmp
and
fimull
cmp
lods
icebp
lret
int
fnstcw
daa
pop
scas
pop
jmp
fcoml
imul
push
xor
jecxz
jne
out
in
push
sti
jnp
pushf
mov
add
dec
mov
jns
dec
jmp
and
cmp
es
adc
cmp
rcr
add
jle
dec
push
sub
xchg
push
sahf
adc
xorl
cmp
out
dec
jge
cmp
je
xchg
mov
sbb
xchg
push
repz
dec
and
xchg
adc
add
jns
in
clc
dec
rcrl
inc
push
pusha
jmp
dec
cmp
hlt
push
add
dec
dec
inc
nopl
lods
pop
mov
incb
cmpsl
insb
sbb
movsl
mov
pop
adc
sub
std
cli
and
pushl
int3
jae
or
rcrb
and
dec
inc
in
out
lret
push
ja
cltd
push
inc
cmp
jno
sub
andb
mov
xor
pop
es
xor
lods
push
mov
stc
ds
out
aad
dec
and
push
and
repnz
dec
jns
mov
mull
les
mov
clc
xchg
in
ffreep
mov
mov
dec
jecxz
jno
in
mov
xlat
aad
fcmovnu
dec
sti
fimuls
pop
push
pop
clc
push
fbstp
dec
pop
and
fnsave
xchg
enter
xchg
fsubrp
popf
inc
sbbb
imul
test
cltd
pusha
xchg
les
rorb
mov
lcall
xor
cwtl
imul
push
cmp
mov
pop
sub
enter
add
mov
inc
jmp
mov
jg
subb
dec
mull
or
cmp
inc
ljmp
dec
movsl
rclb
or
cmp
mov
movsb
fwait
clc
scas
rorb
scas
mov
addr16
add
pop
lea
xchg
push
mov
adc
in
ret
cwtl
xchg
fildl
add
iret
cmc
sti
pushf
loop,pt
sahf
shrb
add
cmp
fs
dec
out
loop
inc
or
dec
jne
add
test
int
cmp
lods
jl
icebp
fdivr
xchg
out
aad
jnp
stc
push
and
pop
mov
pop
jb
pop
pop
cmp
and
scas
mov
dec
and
lret
xchg
or
rorb
aam
or
jb
ret
mov
std
push
xor
aaa
or
mov
sbb
stos
repz
sub
in
jnp
insb
sahf
jmp
or
mov
fwait
pop
jp
movb
and
add
xchg
cmp
add
cltd
pop
out
mov
divl
loopne
sti
mov
cltd
mov
mov
lret
push
data16
cmp
scas
fmul
leave
cmpsb
xorb
sub
xor
stos
imul
push
lock
das
adc
sbb
jbe
lds
xor
pop
pop
jne
xchg
std
mov
xchg
ja
mov
orb
mov
neg
insl
mov
mov
jns
aas
jle
pushf
pop
std
xchg
pop
xchg
pop
shr
dec
push
inc
add
xchg
je
cmp
sub
out
mov
shl
stos
call
push
loopne
sbb
pop
xor
movl
addr16
xor
cmp
sub
int3
jns
mov
out
fadd
fmuls
dec
test
sti
cmp
sbb
push
sub
loopne
lahf
mov
pop
pop
add
popa
add
push
cli
push
sub
popa
movsl
fidivrl
jle
rol
cld
shlb
fwait
dec
in
pop
gs
inc
fidivs
adc
out
xchg
enter
xlat
repz
ds
inc
fdivrl
mov
lods
cmp
xchg
mov
subl
mov
jnp
mov
mov
negl
or
aad
xchg
inc
repz
aam
or
inc
dec
sbb
sti
jg
push
mov
mov
sbb
adc
out
and
add
js
ret
movsl
sti
nop
pop
inc
pop
shrb
dec
js
cmp
xchg
mov
xchg
push
cmp
leave
lods
push
push
xlat
mov
scas
subl
das
fildl
cld
pushf
add
dec
inc
jo
insl
aad
push
dec
rcl
add
std
cmp
stc
int
xor
incb
xor
testl
add
dec
mov
cmp
cmc
sbb
cmp
ficoms
cmp
mov
cltd
cmp
nop
icebp
aad
mov
xchg
lds
mov
fcomp
xchg
mov
jg
inc
add
dec
jb
loopne
cmp
xchg
xchg
xor
xor
add
jge
pop
cwtl
data16
mov
mov
in
or
jae
lret
vucomisd
mov
scas
mov
lret
jmp
lods
inc
addr16
dec
or
scas
mov
in
cmc
pop
inc
xor
xor
mov
sub
scas
int
jl
adc
mov
and
xchg
pop
mov
sub
int
mov
arpl
and
arpl
inc
mov
ljmp
push
lock
pop
hlt
jmp
pop
cwtl
mov
add
addb
xor
stos
inc
pop
lock
xor
je
cli
movsb
nop
cmp
adc
fstps
xchg
mov
in
in
sub
addr16
push
mov
fbstp
inc
aas
in
sbb
mov
xor
lahf
ljmp
mov
pop
loope
lds
jne
scas
pop
out
inc
jnp
insb
sub
xchg
test
lahf
fld
dec
push
push
fidivrl
and
adc
out
lea
shlb
pop
or
pop
bound
inc
in
mov
sarl
mov
gs
xchg
push
cmc
in
fdivr
out
add
cltd
adc
aam
and
xchg
xchg
shll
setnp
dec
mov
jecxz
pop
xor
fdivrl
fdivs
mov
aaa
and
fsubl
adc
mov
ficoms
push
scas
outsb
rcl
std
and
mov
ss
inc
fldcw
iret
sbb
mov
adc
daa
leave
and
mov
movsl
xchg
pop
push
shll
or
adc
sahf
les
insb
xchg
in
cmpsb
sbb
pop
repnz
cmpsl
and
adc
pop
cmpsb
out
popa
fwait
dec
lock
imul
add
fs
and
arpl
xchg
ss
shrl
stc
imulb
mov
xchg
