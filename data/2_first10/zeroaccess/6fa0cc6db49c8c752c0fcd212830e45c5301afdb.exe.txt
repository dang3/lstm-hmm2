push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
jg
jp
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
fst
adc
jl
dec
xor
addr16
out
lret
pop
andb
int
stos
push
mov
add
adc
cs
pop
lods
add
insb
xor
mov
jecxz
sbb
out
loop
in
jae
bound
insl
add
mov
lds
push
in
mov
and
mov
jmp
or
mov
jo
fstps
rorl
outsb
push
adc
pop
mov
pop
ljmp
notb
sahf
lret
or
sbb
xor
adc
push
cmp
cld
and
xor
mov
jnp
enter
cmc
mov
cmc
outsb
push
shrb
xor
cmp
mov
mov
xchg
mov
icebp
mov
loop
pop
je
hlt
dec
cmpsl
bound
and
add
aaa
call
fs
addr16
cmp
adc
mov
or
scas
pushf
dec
adc
stc
dec
mov
sbb
sbb
mov
iret
lret
xchg
xor
jle
or
push
stos
das
in
cltd
test
mov
ds
dec
mov
mov
sbb
or
jbe
lods
enter
aas
dec
sub
insl
pop
inc
sahf
lahf
sub
sahf
out
loope
les
xor
notl
inc
lds
push
push
xor
dec
dec
xor
xor
xchg
sub
sbb
mov
pop
aas
cwtl
or
incb
out
punpckhwd
adc
les
push
push
pop
ret
mov
call
mov
jecxz
xor
bound
in
sub
dec
insl
mov
cmp
jp,pt
ljmp
in
and
add
xor
icebp
mov
insb
adc
in
cmp
sub
in
es
fnstsw
cmp
je
mov
stos
jecxz
pusha
mov
inc
push
xchg
xor
mov
lret
xor
push
sub
adc
mov
outsl
sbb
mov
int3
imul
cmp
cld
sbb
lcall
pop
mov
std
add
fwait
dec
cli
into
sarb
into
push
sub
ja
sbb
add
leave
jmp
jnp
icebp
ds
mov
and
push
fwait
outsb
jo
dec
outsl
dec
loope
inc
cltd
lret
mov
cmpsl
or
cmp
sbb
int3
push
mov
mov
mov
jns
fwait
fs
mov
dec
lret
inc
push
sub
jno
gs
dec
xchg
mov
sbb
enter
pop
sub
das
popa
and
pop
insb
xchg
cmp
xor
cmc
pushl
inc
icebp
dec
jne
shrb
adc
xor
sbb
pop
leave
out
add
and
add
int
int3
lcall
loope
enter
dec
sti
test
cmp
jle
fscale
add
divb
mov
and
cpuid
arpl
pushf
shlb
in
lods
push
xorl
push
mov
lcall
cs
popf
lea
out
or
or
dec
mov
arpl
aaa
or
das
cmc
xchg
sbb
filds
pop
pop
das
jmp
adc
inc
sbb
lret
cmpl
out
fstps
lock
push
fmuls
mov
leave
adc
test
mov
std
dec
or
loopne
mov
add
aam
orb
push
sub
jns
nop
or
sub
in
outsl
aam
adc
push
inc
dec
mov
dec
dec
add
mov
andl
pop
cld
stos
xchg
push
stc
and
xor
lcall
pop
dec
xchg
dec
mov
push
mov
fwait
pop
jnp
test
adc
jbe
or
xor
hlt
icebp
mov
xchg
sbb
test
cmp
test
ja
aas
nop
and
sub
mov
icebp
push
call
jo
shrb
arpl
mov
insb
sub
mov
inc
add
xchg
pop
movsb
mov
cmpsb
aaa
push
out
mov
inc
movsb
sbb
sub
js
pop
stos
sub
inc
sbb
loope
sub
dec
pop
sub
jmp
mov
std
aas
jg
or
jge
pop
pop
jp
sbb
push
insb
jecxz
dec
dec
rcrb
adc
adc
jg
and
mov
xor
or
or
add
movups
push
cmpsb
hlt
aas
sarb
insb
pop
daa
sub
pop
iret
subb
call
outsl
aam
xor
and
shll
test
or
pop
dec
rcll
mov
xchg
stos
cmc
movsl
and
out
jns
in
push
mov
jg
inc
movl
cmp
sbb
or
sahf
adc
sti
mov
mov
stos
xchg
pop
xchg
mov
adc
mov
out
mov
out
data16
popa
fistpll
test
cmp
ret
dec
loopne
insl
xorb
xchg
cmp
push
clc
xchg
shll
outsl
sub
pushf
int
push
xchg
popa
pop
jl
fcomi
punpcklwd
ja
dec
push
movsl
pusha
pop
cmp
push
push
aam
fstl
xor
jo
cs
xchg
sahf
test
xor
loopne
jae
jb
sbb
lods
cmovg
sbb
cmp
mov
sub
jbe
pop
push
cmp
mov
mov
in
push
mov
jnp
mov
test
mov
inc
pop
movsb
cmp
add
psrad
xchg
es
and
or
inc
xor
sbb
nop
and
pop
rcll
jbe
addr16
int3
pusha
fisttpl
mov
pop
or
data16
into
pop
jne
ja
notl
ds
aas
and
jmp
xor
pop
xor
out
xor
call
jl
or
fcmovnbe
pop
add
popf
out
xor
mov
mov
fistpll
out
pusha
int
mov
icebp
popa
xor
nop
sub
orb
sahf
mov
xor
or
fistps
test
pop
shl
test
aam
jnp
sti
cmp
and
cli
lret
pop
cmpsb
jbe
mov
dec
sub
jecxz
pop
push
jge
mov
dec
jp
mov
or
adc
test
rorb
bound
fbstp
jno
add
aas
push
loope
aaa
ljmp
loop
call
daa
cmp
cwtl
test
mov
sar
imul
mov
mov
je
movsb
mov
sbb
mov
push
cmp
sbb
in
insl
dec
les
sbb
xor
sbb
push
inc
gs
movsb
inc
maxps
xchg
cltd
daa
sbb
lretw
movsl
xor
out
popa
adc
enter
add
mov
push
xlat
jecxz
pop
dec
mov
xchg
and
loopne
dec
mov
aad
push
mov
rcll
mov
mov
nop
aaa
and
out
cmp
sbb
push
inc
sbb
andb
xor
cld
lret
xchg
xchg
sbb
stc
xchg
div
pushl
shrl
and
xchg
hlt
xchg
jbe
test
pop
fsubs
xchg
mov
bound
dec
jge
push
std
popf
mov
cs
xchg
aam
shll
sahf
jg
dec
dec
mov
cli
in
xor
jl
out
jp
or
push
ja
xor
mov
mov
outsl
cli
and
cmp
les
outsl
lods
sbb
cli
pop
shrl
mov
popf
leave
jb
std
dec
push
sub
cli
int3
cmp
cld
gs
pop
jle
cs
sahf
jmp
lock
in
fcmovb
test
push
mov
ret
mov
int
push
ret
pop
inc
test
push
or
jae
cltd
cmp
mov
aad
clc
pop
or
push
es
pop
pop
mov
data16
mov
or
fnsave
je
or
sub
int3
dec
mov
and
fisubl
pop
sub
inc
lret
out
or
repnz
cmc
sub
jl
insl
jmp
xchg
lock
shll
xchg
sbb
xchg
aad
js
std
les
das
mov
push
pop
jno
and
xlat
inc
cld
leave
jg
jp
jmp
mov
sub
mov
push
jle
ficompl
jnp
cmpsl
push
outsb
mov
imul
sub
push
jecxz
xchg
xor
and
sub
pop
and
test
jb
jecxz
jo
or
jae
rcr
insb
cmp
jecxz
test
dec
sbb
pop
dec
dec
jmp
jb
fldenv
divb
pop
pop
xchg
mov
jl
pop
push
test
std
sbb
fdivs
rcll
add
test
shlb
jns
test
je
inc
mov
sub
cmp
insb
leave
iret
or
in
or
dec
fcoms
inc
sarb
or
sub
sti
mov
jnp
xor
adc
data16
sub
rcrl
cmp
cmp
xchg
sahf
mov
mov
xchg
mov
orl
cmpsb
out
xor
addr16
cld
mov
add
lret
xchg
je
mov
push
mov
into
xlat
test
loop
jnp
int
push
lods
fs
out
fmull
addl
dec
mov
outsb
lret
dec
fbstp
movsl
sbb
in
lds
jge
adc
jbe
shlb
fsubl
sti
test
ds
sub
mov
fsubrs
push
sbb
rcll
lret
adc
fstl
addr16
daa
lods
aam
jmp
repnz
jmp
ret
cmp
pop
sbb
movsb
insb
inc
sbb
xor
mov
xchg
hlt
ret
pop
sub
mov
mov
loopne
pusha
fdivrl
dec
mov
and
jmp
inc
outsl
and
sbb
and
mov
and
cmp
add
xchg
dec
inc
lds
mov
lods
jl
mov
test
push
dec
mov
mov
or
mov
mov
aam
sti
cmpsl
sbb
push
gs
sub
dec
cmp
inc
mov
movsb
shlb
lret
add
or
or
push
jle
mov
and
loop
test
mov
fimull
or
jno
addr16
dec
add
inc
rcr
add
push
negl
addr16
mov
pop
and
inc
and
xchg
mov
pop
push
xlat
lock
sub
rcrl
in
pop
outsl
lods
add
sbb
inc
movsb
mov
cmp
jecxz
xor
xor
jmp
mov
xor
push
ficoms
movsb
arpl
in
jnp
arpl
xchg
cmpsl
jmp
adc
xor
pop
cmp
insb
scas
in
dec
jne
inc
xor
pop
jae
leave
outsb
mov
push
cmpsl
jbe
scas
outsl
dec
shll
movsb
or
dec
and
cmp
pop
outsb
sbb
lcall
mov
xchg
orl
lock
imul
add
andb
int
lods
pop
xchg
mov
mov
stc
xchg
sub
ja
jg
fimull
push
fs
mov
sbb
push
and
divl
lahf
pop
cmpsl
loop
cmp
or
mov
es
jne
in
dec
sbb
jae
dec
fcoms
scas
rol
outsl
bound
cmp
les
mov
xchg
call
xor
jg
push
pop
scas
jle
push
rcll
mov
flds
xchg
lds
bnd
lods
imul
lock
xchg
mov
xor
inc
daa
fwait
sti
pushf
mov
js
cmp
jnp
ret
xor
sub
dec
inc
or
out
dec
mov
pop
jp
cmp
push
dec
push
push
jmp
scas
daa
pmuludq
pop
rclb
aad
dec
inc
jge
les
lds
xor
lods
jmp
les
jge
in
xchg
push
jo
sbb
add
jl
xlat
std
add
mov
push
and
jl
xchg
cltd
mov
or
in
push
aaa
push
int3
es
dec
stc
sarb
aas
test
jnp
dec
xchg
add
pop
aaa
mov
out
push
loop
mov
addr16
daa
int
outsl
roll
imul
stc
xchg
add
sti
sbb
fs
add
hlt
xor
loope
jge
and
lcall
adc
pop
pop
xchg
jecxz
mov
test
loope
ds
shl
lcall
inc
inc
popa
add
ret
int
cmp
fwait
dec
xchg
inc
aaa
xor
cmpsl
int
aad
insb
mov
cmc
pusha
call
mov
mov
dec
nop
aad
dec
rclb
addr16
jo
add
aaa
xchg
mov
pop
cs
inc
iret
rcrb
push
sub
jl
cmp
jmp
sub
cwtl
pop
xor
rorb
add
and
les
imul
in
ret
fcomps
adcl
pop
adc
mov
ds
cmp
adc
int3
dec
leave
dec
mov
mov
icebp
adc
cmp
data16
push
loope
inc
dec
imul
js
imul
dec
xchg
lmsw
push
push
js
test
mov
out
adc
mov
pop
cmp
xor
sbb
push
xchg
sti
lods
iret
rclb
mov
rep
push
mov
sbb
adc
dec
outsb
ds
xchg
xorb
divl
pop
lds
cmp
pop
or
mov
dec
ds
push
mov
insl
cmpsl
jno
lock
push
mov
mov
adc
mov
cmp
cmp
jnp
mov
pusha
push
lcall
or
sbb
xor
mov
ds
jbe
outsb
repz
daa
push
mov
inc
pop
jp
aad
and
repnz
gs
aad
sub
xchg
cmp
lahf
pop
jg
adc
lds
imul
jae
jae
pusha
cld
push
addr16
mov
sahf
or
and
adcl
aas
movsl
lret
or
pusha
sbbl
xor
ret
jmp
popa
mov
add
lret
pushf
test
fiadds
insl
inc
imul
push
fs
lds
pushf
jne
jp
out
sbb
repz
mov
call
cmp
pop
repz
in
popa
jmp
adc
sub
pop
dec
jno
int
push
push
dec
sbb
fwait
pop
pop
add
mov
repnz
sub
mov
fcomp
icebp
and
dec
pusha
stos
stc
or
jmp
repnz
pop
insl
mov
mov
jb
xchg
push
fildll
adc
jnp
adc
cli
jge
inc
test
addr16
stos
lds
xor
or
and
and
pusha
movsl
test
cltd
cmpl
ljmp
pop
push
and
cli
xchg
or
cmp
int3
mov
jg
push
jnp
lds
imul
mov
movsb
xchg
inc
aaa
in
ret
cmp
cwtl
subl
out
jo
xchg
mov
ficoms
add
sbb
cmp
rcll
fsubs
mov
lret
push
inc
jo
xchg
test
adc
cmp
jl
cli
pop
int
test
add
or
jo
das
mov
inc
mov
cmpsl
movsb
in
gs
arpl
mov
stos
cmp
in
aam
xor
push
fisubrl
subl
mov
dec
xchg
dec
rorl
loop
ds
push
mov
jg
loope
dec
mov
or
xchg
xlat
out
ret
push
dec
pop
sub
jnp
push
pop
cmpsb
dec
in
popf
insl
pop
fidivs
fnsave
fs
cmp
and
push
pop
out
lock
sub
pop
or
scas
fcoms
pop
cmc
cmpsl
arpl
das
xlat
sub
insl
xchg
dec
in
fmul
dec
fstps
mov
cwtl
stos
cs
movsb
fwait
and
lcall
mov
fsubrp
add
in
inc
inc
daa
mov
mov
insl
xchg
xchg
xor
cmc
or
mov
loop
cmp
frstor
enter
lret
push
test
cmc
jp
lock
jl
sbb
dec
cmp
ror
test
cwtl
sub
lods
lods
jnp
add
ffree
ret
repz
mov
mov
jge
or
and
mov
cmp
out
push
pop
jg
mov
in
lods
adc
aam
pushf
ret
pop
int
pusha
push
not
sub
mov
push
sahf
jne
or
pop
mov
xlat
or
ja
xchg
cli
in
loope
loopne
xchg
fcoms
clc
pushf
notb
push
in
insl
and
inc
push
mov
pop
sub
ss
inc
jecxz
pop
or
jb
pop
and
add
lcall
aam
adc
loope
test
outsb
in
xchg
cmp
nop
popf
cld
imul
push
push
mov
jmp
mov
movups
lock
cwtl
hlt
loope
js
insl
push
clc
jae
not
daa
call
pushf
dec
and
add
push
enter
mov
aaa
dec
das
in
cmp
add
lea
adc
sbb
in
jns
js
mov
inc
ret
or
lret
test
fcmovb
sub
inc
dec
jecxz
jne
imul
adc
pop
ja
sbb
and
daa
or
adc
dec
pop
pop
loop
fwait
mov
out
push
sub
jecxz
sub
mov
insl
sti
adc
es
sub
fstps
aam
int3
and
jl
test
pop
sbb
fs
xchg
cld
fldcw
pop
loop
mov
sbb
mov
jnp
aaa
sbb
cmp
and
mov
ret
mov
fstpl
mov
jno
mov
dec
int
push
shl
dec
sbb
push
mov
cmp
roll
or
lahf
xchg
xor
mov
dec
push
and
insb
mov
adc
jl
int3
jle
or
xchg
push
mov
sbb
cmp
xor
insl
jle
adc
data16
lcall
dec
dec
add
lcall
pop
and
imulb
les
mov
jo
cld
inc
mov
loope
adc
daa
pop
mov
mov
pop
repz
mov
dec
dec
xlat
sbbb
and
rcrb
or
cmp
enter
test
imul
sub
inc
addl
push
icebp
xor
jmp
test
xor
pop
inc
roll
pop
add
test
ficomps
std
test
nop
pushf
or
out
mov
lods
jae
pop
shl
movsb
je
mov
in
dec
lret
ret
sbb
movsb
mov
inc
push
arpl
xchg
sub
lock
popf
mov
inc
dec
mov
cmp
add
in
repnz
fidivrs
lds
mov
jb
mov
lret
loope
sbb
lds
pop
sbb
cltd
pop
cld
jl
mov
sbb
xchg
js
or
outsl
jb
dec
pop
jae
jmp
cs
mov
or
mov
push
imul
pusha
sbb
imul
pop
fcmove
cmp
add
sbb
adc
lret
jae
xchg
fwait
jecxz
into
in
or
insl
lret
mov
push
sbb
aas
jnp
fcmove
es
lret
in
inc
dec
sbb
jl
or
push
rcrb
in
lods
adc
mov
mov
inc
push
cmp
xchg
sbb
jle
inc
std
repz
addr16
inc
add
or
push
imul
and
int3
in
mov
mov
cmc
cmp
push
adc
dec
xchg
push
les
sahf
pop
dec
rcl
sub
stos
jne
and
lahf
mov
cmpb
mov
and
pop
mov
mov
jb
jl
leave
sbb
xchg
mov
pop
push
xor
mov
inc
cmpsb
pusha
out
pusha
stos
and
jno
stc
sub
ljmp
lods
inc
push
xor
or
das
std
jle
lods
xchg
dec
add
sbbl
aas
outsl
ret
cmc
and
roll
xor
push
lahf
pop
sub
adc
push
fildll
sbb
mov
or
cmp
jno
out
mov
int3
jg
lahf
sarl
in
mov
fisttpll
test
sbb
xchg
stos
out
in
fidivrl
test
addl
fidivrs
int
mov
cmpsb
mov
or
movsl
push
xchg
or
pusha
dec
dec
dec
js
jp
jecxz
mov
jns
or
inc
mov
pop
mov
inc
mov
jge
or
imul
sub
mov
jp
sarb
add
es
jns
and
add
insb
cmp
sub
call
ds
cmp
clc
mov
addl
sbb
sub
roll
dec
sbb
stc
es
sahf
inc
aam
mov
fldenv
push
and
mov
loopne
das
lcall
pop
pop
xor
jp
mov
fs
ret
dec
sarb
repnz
pusha
and
aas
out
sub
mov
and
lock
in
bound
ret
dec
xor
add
add
iret
mov
dec
adc
jbe
lahf
stc
lds
fldl
aaa
ss
jg
arpl
cmpl
call
mov
xor
dec
sbb
adc
xchg
lds
in
push
out
cmpxchg
int
jae
pusha
cwtl
add
and
loope
sbb
ja
pop
negb
mov
incb
clc
push
popa
out
inc
or
test
ja
es
mov
jnp,pn
sahf
cli
mov
ljmp
inc
jle
div
rorb
addl
aaa
imul
mov
jb
xor
jmp
js
movsb
shll
in
xor
push
pop
jb
insl
rcll
roll
out
pop
mov
pop
jl
fsubl
int
leave
xchg
daa
push
mov
stos
xchg
bound
in
mov
mov
sbb
mov
bound
loop
push
mov
inc
and
or
or
loop
daa
sub
jo
pop
mov
popl
inc
rolb
jbe
mov
and
pop
popa
test
or
mov
sub
cli
rorl
popa
or
or
cltd
xor
aaa
mov
fucomip
or
pop
roll
mov
xor
into
repnz
out
call
cmpl
xor
shll
sub
pop
fs
mov
rcrb
lret
notb
mov
jp
mov
dec
and
fdivl
adc
xchg
xchg
int3
push
sti
lock
cmp
or
pop
lahf
adc
enter
mov
cmp
int
in
cmpsl
ljmp
xchg
dec
ficoms
sub
add
call
dec
add
mov
and
pop
pop
in
stc
aam
test
add
ret
xchg
or
ret
pop
iret
add
mov
dec
ljmp
or
fiaddl
out
sbb
xor
out
push
push
cmp
loop
sbb
arpl
push
jmp
xlat
gs
repnz
jno
mov
loopne
inc
cmpsl
out
and
repnz
mov
add
jl
sbb
cmp
aaa
lods
in
sbb
ja
fnstcw
out
das
lock
leave
dec
or
pop
sbb
rcrb
test
dec
in
sub
mov
cmpsb
cmp
sbb
adcb
dec
and
loope
ljmp
mov
pop
and
pop
push
test
stos
sub
adc
cwtl
dec
xchg
int3
dec
jno
mov
push
and
adc
xor
xor
xchg
pop
mov
inc
push
cmpsl
push
test
inc
mov
add
xor
fwait
pop
shr
dec
xor
push
adc
mov
lret
pop
icebp
js
mov
or
xchg
push
fidivl
dec
fimull
mov
daa
dec
cmp
sbb
sti
fldcw
dec
clc
outsb
add
or
lods
mov
and
int3
ljmp
out
psraw
pop
xchg
jae
jnp
clc
cmp
pop
movsb
inc
imul
jle
lret
push
push
mov
mov
aad
ret
mov
cli
adc
scas
dec
imul
ljmp
adc
dec
nop
shrl
daa
iret
movsl
ret
pop
shl
loope
movsb
cmp
icebp
aad
out
xchg
mov
arpl
repnz
xor
inc
movsl
cmp
sub
pmaxub
and
lcall
jg
cwtl
cmp
mov
pop
inc
sbb
jecxz
or
inc
insl
add
mov
mov
ja
adc
inc
jle
ds
pop
mov
das
dec
xchg
out
xchg
cs
leave
adc
popl
sbbl
add
loopne
dec
out
enter
fcmovnb
enter
sub
jecxz
lods
jmp
cmc
imul
popa
cwtl
jl
cmp
xchg
sahf
adc
jne
add
enter
pop
sbb
push
out
iret
push
je
mov
add
pop
inc
mov
xor
cmp
sar
mov
mov
xlat
call
xchg
cld
sbb
aaa
hlt
mov
fbstp
outsb
pop
pusha
into
inc
pop
mov
push
bound
and
ja
pop
scas
xchg
xor
std
jne
push
xchg
push
push
mov
fs
std
stc
jbe
xchg
inc
mov
pop
out
and
xor
out
jle
mov
es
int
push
mov
jl
pop
iret
aaa
cwtl
jno
add
les
sbb
outsl
mov
push
jge
iret
xchg
and
fisubrs
xchg
mov
daa
xor
loop
jmp
adc
imul
loope
fxch
jmp
mov
lret
cmc
ss
fnstcw
dec
psubq
fcmovnu
js
jns
int
clc
js,pn
mov
loopne
push
mov
mov
stos
add
and
das
cs
fidivrl
test
sub
sub
lahf
lcall
imul
shlb
enter
mov
xchg
pop
xchg
and
and
jne
test
sub
int
notl
jl
fdivrs
addr16
fmull
repz
iret
xchg
push
dec
adc
addb
cmpl
mov
loopne
mov
or
scas
sarl
jns
mov
mov
push
push
push
in
jp
inc
sbb
jl
xor
sub
cmc
jb
out
xor
leave
loop
lods
sahf
btr
addr16
mulb
sub
leave
lock
repz
aaa
popl
jmp
inc
inc
inc
sbb
cmp
aas
cmc
xchg
ret
sbb
popa
sbb
push
popf
push
cwtl
orl
fs
cwtl
sub
es
push
cmpsl
xchg
jae
ja
mov
popf
jp
aas
or
push
je
dec
std
xchg
push
leave
push
xor
mov
xor
cmc
fbstp
jbe
stos
cmp
ljmp
enter
stc
aas
push
mov
xlat
mov
shrl
adc
fwait
cmpsb
and
loop
jo
inc
imul
and
ja
sarb
std
cmp
mov
outsl
out
sub
jge
sbb
aam
adc
adc
outsb
add
adc
lods
inc
adc
mov
cmp
push
add
pusha
pop
sub
aas
xor
push
adc
insl
push
cmpsl
ljmp
fldcw
xchg
shlb
mov
pop
mov
adc
jge
dec
jl
mov
bound
jge
aam
shrb
cmp
and
xchg
or
mov
jnp
xchg
into
fnop
jge
pop
lret
sbb
orb
mov
mov
push
in
aam
pop
js
in
cmp
test
push
or
shrb
lods
or
repnz
loopne
iret
ret
jo
mov
add
lret
jg
mov
jb
xorb
dec
xchg
fimuls
jbe
vprotq
jb
inc
ljmp
imul
xorb
inc
dec
lret
and
cltd
push
cmp
arpl
xchg
push
std
sbb
mov
pop
mov
imul
cld
fsubrl
dec
xchg
xchg
rclb
hlt
and
cmp
add
pop
hlt
aas
xchg
lret
xchg
ret
mov
lcall
or
xchg
pop
lds
or
jmp
jg
sub
pop
jge
and
orl
or
adcl
and
push
clc
xlat
bound
cltd
push
xchg
jmp
and
es
mov
jb
cwtl
adc
sub
fbstp
pushf
mov
mov
sahf
sbb
std
shrl
call
bound
sub
sti
pop
mov
and
es
pop
xor
sub
inc
pop
sar
jg
test
cli
sbb
divl
fcmove
fs
mov
shlb
outsb
xor
nop
rcrl
lahf
dec
xor
cltd
push
push
arpl
popf
push
shrb
cmp
sbb
sbb
xchg
shrl
call
cmp
mov
adc
cmp
inc
add
in
mov
or
in
dec
sub
cmpb
pop
cmpsl
mov
xchg
xor
jl
std
push
inc
pop
in
jne
mov
jg
leave
xchg
pop
mov
dec
mov
xor
sbb
sub
or
adc
je
pop
mov
mov
push
movsb
fst
push
out
mov
and
mov
cmpsb
and
inc
jae
dec
xor
sbb
mov
inc
jmp
or
or
cmp
jl
pop
add
push
mov
in
repz
out
pop
jne
inc
ss
psllq
and
cmp
dec
pop
pop
jae
sub
inc
cmc
inc
sbb
pop
mov
sbb
fmul
std
pop
insl
cwtl
test
in
mov
cli
dec
add
arpl
dec
jno
enter
outsb
jp
sbb
aaa
inc
push
push
leave
inc
imul
mov
mov
adc
xor
jp
ret
roll
fisubs
sbb
leave
mov
cmp
sets
or
test
xchg
aas
stos
pop
adc
jns
xchg
jno
popa
xchg
repz
inc
cld
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
mov
xlat
pop
jp
aaa
pop
jp
adc
mov
push
push
outsl
test
sub
push
inc
xchg
add
aam
into
outsl
pop
cmpb
lds
cmp
mov
es
int3
pop
adc
push
rorb
pusha
jl
outsl
pushl
ret
jbe
pop
xchg
nop
mov
xchg
push
or
movsl
ret
sub
mov
pop
mov
dec
jecxz
add
jl
ficomps
lcall
add
sarb
in
int
loope
sbb
push
ds
movsl
cmp
xchg
or
je
pop
mov
push
sub
cmp
push
or
push
and
arpl
cld
pop
pushf
mov
xchg
mov
jl
mov
xchg
adc
mov
sub
adc
insl
lods
push
scas
pusha
mov
cli
in
lcall
mov
clc
test
fistpl
or
imul
dec
mov
or
gs
pop
jge
sbb
xor
jns
mov
outsb
out
lods
cwtl
outsb
icebp
in
push
or
shlb
les
jne
pop
pop
mov
mov
aas
int3
xor
xor
jp
dec
das
push
sarl
ror
retw
in
xchg
out
decb
sbb
ja
sub
mov
sub
inc
in
inc
add
iret
xchg
dec
andl
pop
lret
or
inc
subl
pop
js
jecxz
fcoml
mov
lret
or
out
jne
cmp
iret
cli
out
sub
xor
pop
into
xchg
sub
mov
fxch
mov
dec
and
repnz
int
cmpsl
mov
out
xchg
ficomps
orl
fstpl
stos
inc
out
sub
inc
inc
imul
cmp
lcall
xchg
ljmp
fstpt
xor
xor
or
mov
cld
pusha
adc
gs
into
cmp
rorl
in
push
xchg
int
mov
cs
mov
js
pop
push
dec
popf
lret
mov
dec
sbb
repz
inc
mov
mov
std
mov
add
dec
lods
mov
adc
ja
mov
and
mov
mov
ficompl
fnstsw
mov
rcr
mov
insl
filds
fmuls
lret
movsb
mov
ret
movsl
sub
insl
test
mov
sub
nop
sbb
pop
fildll
push
dec
out
dec
push
aaa
ja
int3
les
jae
mov
jno
mov
int3
jmp
inc
sbb
mov
add
xor
xchg
xchg
pusha
push
out
push
xor
and
mov
stc
dec
push
enter
cmpsl
rcr
pop
arpl
push
lret
mov
or
adc
gs
mov
scas
outsl
xor
cmp
stos
cltd
in
loop
mov
xchg
mul
sbb
mov
aam
cs
add
pop
push
inc
jnp
dec
mov
mov
sbb
fidivl
cmp
jmp
andb
aam
notl
fs
jb
xchg
and
daa
and
sub
imul
pop
imul
sbb
mov
push
mov
push
addr16
add
aaa
mov
int
mov
inc
leave
lods
lahf
mov
ss
adc
and
addl
ret
add
mov
xchg
in
ret
mov
cmp
roll
lea
add
shrb
rcl
test
add
inc
cmp
aaa
xor
add
push
pop
push
dec
jle
inc
push
mov
int
sub
add
jb
in
or
xchg
cmc
jg
loopne
inc
les
add
call
push
in
sti
push
dec
mov
inc
mov
div
adc
pop
cmpsl
jmp
mov
or
loop
es
push
fstps
in
mov
or
sub
dec
addr16
repnz
sub
mov
cli
mov
loopne
push
test
adc
mov
leave
or
xor
shlb
cmpsb
ljmp
push
dec
mov
push
dec
cltd
mov
subl
xorb
sahf
sub
rol
fsubs
add
pmaddwd
push
cmp
or
cmp
mov
jno
or
cmp
subb
push
mov
loopne
rol
out
push
mov
inc
cmp
fisubrs
pop
cmpsb
inc
xchg
pop
sbb
adc
jmp
shll
dec
mov
iret
adc
dec
or
fwait
add
mov
adc
mov
push
jno
rcrb
pop
sub
repz
ret
repz
shl
jnp
aad
mov
out
push
sti
andb
scas
lahf
das
movsb
jb
clc
mov
pusha
push
sbb
xchg
test
sarb
or
inc
push
mov
xchg
xor
push
sti
enter
mov
negb
jmp
fwait
testb
jb
stos
fistpll
dec
cld
ds
in
dec
movsb
fxch
stc
repz
and
in
or
outsl
lahf
test
mov
faddl
inc
lahf
jp
lret
push
fimull
cmpsl
jns
xchg
sbb
mov
out
mov
lds
add
jmp
jns
push
lds
mov
fwait
cltd
js
xchg
movsl
mov
mov
adc
sti
dec
ljmp
shr
pushf
jnp
jae
xchg
adc
mov
lea
in
mov
mov
push
stc
dec
icebp
insl
mov
sub
mov
sarl
aam
adc
push
and
jae
fwait
test
shrl
popa
and
cmpsl
jmp
and
cmp
push
sub
or
cld
cmp
push
or
inc
cmp
popa
push
cmc
popf
sbb
xor
jbe
push
fdiv
and
or
repnz
lahf
mov
ds
rorb
inc
mov
fldpi
jne
inc
aam
incl
shll
dec
adc
lock
mov
xchg
cld
push
rol
bsf
sub
mov
push
sbb
pop
or
xchg
in
mov
mov
xchg
xchg
test
jmp
pop
jno
addl
xchg
movsb
xchg
sub
pop
sub
and
and
cltd
xor
popa
in
mov
ds
ret
mov
icebp
sbb
imul
mov
clc
jo
out
lods
ja
jb
in
adc
aaa
movsb
jno
xchg
lahf
push
mov
adc
imul
addr16
ret
and
orb
cli
push
bound
sub
insl
pop
jmp
add
ret
cmp
cmp
mov
call
data16
insl
call
xlat
aam
rcll
xchg
scas
in
stc
add
and
icebp
ret
daa
subb
add
and
enter
inc
ds
bound
sar
addl
add
add
sub
jns
and
fnstsw
and
sub
leave
shrl
test
aam
add
cmc
out
lcall
les
mov
and
sbb
push
push
or
cmp
je
xchg
ds
and
push
imul
sti
rorl
jl
jg
dec
sahf
movl
lock
jmp
jmp
cmp
out
lods
jg
mov
lds
cmp
repnz
subl
pop
imul
mov
push
stos
mov
jmp
add
mov
xorl
test
out
inc
cmpsl
mov
sahf
ljmp
stos
sub
xor
int
jns
or
add
cmp
push
sti
xchg
push
cwtl
xchg
jecxz
pop
ret
icebp
jb
pop
mov
out
imul
fstps
stos
fwait
mov
fbstp
sub
xchg
adc
sub
clc
jbe
jge
insb
test
push
mov
movsb
rcll
push
jno
mov
xor
lds
test
in
ljmp
in
sub
mov
dec
loop
inc
in
repz
test
in
xchg
and
mov
aas
adc
ret
ljmp
mov
sub
jb
xor
popa
xchg
sub
stc
jmp
or
and
mov
jecxz
inc
orl
insl
cwtl
push
xchg
int
popf
in
aaa
mov
rclb
out
mov
out
pusha
lcall
aas
xor
push
lret
loopne
in
je
mov
loopne
shrl
xchg
pop
aaa
lock
jo
add
test
xor
adc
jo
and
jp
sahf
out
aam
lea
nop
jbe
add
popa
daa
repz
addr16
adc
pop
mov
out
dec
mov
iret
jne
repz
das
iret
fisttps
stc
fs
pusha
inc
lods
dec
pop
cmp
mov
gs
jae
and
and
xchg
xor
pop
sbb
cli
aas
add
mov
pop
xlat
daa
and
in
and
pop
cli
repnz
lret
add
jmp
push
xor
scas
push
ret
rcr
test
andb
lcall
sbb
mov
data16
ss
test
js
enter
adc
push
push
jo
enter
xchg
ds
add
gs
mov
mov
mov
xchg
int3
clc
divb
mov
cmpsb
mov
pop
mov
lods
push
leave
call
addl
leave
push
or
push
push
pop
sub
out
dec
dec
adc
inc
xlat
fdivrs
and
lret
ret
in
push
ret
pop
xor
stos
imul
les
add
mov
jae
fdiv
xchg
xchg
jbe
cwtl
jns
sbb
sub
xchg
jno
popf
in
and
push
out
push
mov
sbb
dec
movsb
mov
inc
pop
lds
inc
bound
mov
into
sub
push
mov
and
stos
adc
mov
pop
mov
into
bound
pop
jmp
xor
cmp
sbb
mov
out
push
fidivl
mov
mov
subb
inc
xchg
xor
push
adc
adcl
aad
adc
mov
mov
or
sub
shlb
hlt
jmp
pop
out
push
jae
leave
pop
pop
sbb
imul
jl,pt
enter
xor
push
test
mov
dec
cmpsl
dec
int3
insl
sbb
js
xchg
mov
cmp
sti
fcmovnu
xchg
push
dec
das
rorb
push
test
mov
pop
scas
cs
fldl
push
test
mov
pop
mov
cmp
imul
mov
jmp
roll
ficoml
adc
mov
inc
pop
push
out
out
or
data16
out
push
ret
call
int3
loopne
push
cmc
outsl
xor
xchg
push
jecxz
mov
sti
loop
push
xchg
pop
test
pop
sub
mov
xor
out
inc
ret
xchg
mov
popa
mov
mov
or
test
xor
and
sub
movsl
rcrl
or
inc
in
stc
sahf
pinsrw
incl
dec
rcrl
lock
mov
adc
call
xor
pop
dec
sub
in
cmp
sbb
outsl
mov
hlt
pop
add
sti
mov
sbb
fcomps
adcl
xor
pusha
mov
pushf
dec
mov
or
cmc
add
lds
stos
enter
mov
mov
add
addr16
adc
out
out
jle
cli
cmpsb
repz
push
into
mov
xchg
in
push
std
or
sbb
adc
mov
aas
pop
insl
scas
add
pop
addl
jle
adc
push
pushf
sub
ss
mov
cmp
mov
test
push
sub
inc
add
add
rclb
addr16
out
mov
imul
cmpsb
shlb
mov
xor
mov
push
adc
push
sub
or
mov
hlt
daa
xchg
shr
andnps
test
nop
in
xchg
xor
ja
jb
repz
add
xchg
enter
ja
or
test
sub
push
jbe
mov
pop
out
xor
push
enter
jnp
shlb
mov
xchg
pop
mov
dec
in
mov
xchg
mov
cmp
dec
movsb
and
ss
enter
inc
pop
fisubl
enter
xor
ret
das
xor
push
lcall
aas
pop
lods
out
push
scas
ljmp
xchg
and
mov
fistps
mov
rcll
xor
cmpsl
loope
mov
lds
roll
sub
mov
xor
mov
xor
mov
pop
inc
shlb
mov
push
xchg
push
movsl
pop
bound
subb
and
and
mov
mov
lods
mov
sbb
icebp
jnp
js
cmp
shrl
fisttpl
ds
stos
repz
repnz
loopne
or
popf
popa
or
fldenv
adc
sarl
mov
adc
fistpll
cwtl
sub
adc
leave
dec
popf
cld
movsl
mov
or
stos
xchg
sub
jmp
gs
sub
cmp
cmp
insl
cmp
mov
aas
ljmp
cwtl
loope
stos
push
and
out
or
fiadds
mov
adc
stos
pop
sbb
cmp
xor
repz
inc
sarl
xchg
cmp
add
ja
mov
pop
mov
cmpsl
cltd
jb
dec
inc
cwtl
imul
outsb
lods
fwait
leave
cmpsl
cmpsb
mov
aaa
ja
and
cs
and
and
sub
lea
mov
xor
mov
popf
mov
xor
call
mov
pop
pop
scas
ret
dec
movsb
imul
aad
pop
mov
arpl
ret
and
mov
mov
push
out
outsl
push
adc
xor
dec
fdiv
mov
stos
mov
mov
push
xor
clc
std
jl
repnz
add
cmp
arpl
sbb
or
lea
nop
addl
test
loopne
sub
push
into
mov
push
sub
sub
and
mov
adc
pop
mov
or
add
imul
push
xchg
test
sbb
jb
es
dec
xlat
and
mov
jp
jns
call
xchg
dec
lret
cld
push
push
lcall
out
les
adc
bound
sub
mov
testl
in
push
adc
push
out
sub
dec
xor
pop
sbb
ja
cmp
mov
aas
ret
cwtl
sbb
in
mov
int
addr16
cwtl
mov
divl
mov
sti
icebp
jnp
dec
push
pop
mov
es
push
sub
andb
movsb
fnstsw
jge
mov
addr16
leave
stos
jnp
ret
cmpsb
enter
sahf
pusha
xchg
mov
je
add
xor
inc
or
cs
and
and
imul
sub
rclb
mov
sub
sub
inc
outsl
loop
mov
fistpl
sub
cmpsl
cmp
and
xor
notb
addr16
adcb
iret
adc
callw
jle
xor
mov
int
lds
mov
lahf
lea
xchg
jne
jnp
cmpl
mov
adc
jle
popf
hlt
mov
jne
out
out
sub
shl
fadds
pop
pop
add
or
xchg
inc
sub
xchg
pop
lret
fstl
pop
cmp
out
shll
mov
jp
sbb
and
xor
fsubl
sbb
stos
daa
add
in
xchg
cmp
add
sub
fnstsw
fcom
inc
add
test
stos
lahf
cli
outsl
outsb
pop
cmp
inc
test
cmp
fpatan
pusha
hlt
cwtl
jg
cmp
cmp
clc
cmc
lds
xor
mov
imul
mov
repnz
adcl
add
gs
mov
jg
mov
pop
shrl
loope
je
sub
push
sbb
aad
in
sbb
and
addb
inc
movsl
or
imul
testw
and
fmul
mov
inc
popf
push
mov
inc
mov
mov
lahf
loop
lret
sbb
dec
sub
inc
adc
and
sbb
jo
imul
hlt
sbb
sti
jno
stos
inc
sti
jg
repnz
push
scas
lret
sbb
push
jle
cmp
orl
push
pop
xchg
sub
inc
sti
fs
jo
xor
xor
push
sub
cmp
jbe
in
roll
inc
repz
mov
sub
xchg
or
lahf
jb
xchg
xchg
fstpt
pop
js
aaa
lea
arpl
lahf
mov
mov
sbb
ljmp
pushf
mov
pop
cli
and
mov
mov
ja
mov
sbb
add
sub
into
ret
fdivs
adc
dec
or
mov
es
inc
mov
mov
aad
mov
leave
ret
out
pushl
sbb
xor
jb
or
out
filds
cmp
ss
arpl
mov
pop
jo
add
or
das
xchg
adc
incl
je
jno
icebp
movl
cmp
adc
aaa
pop
xor
mov
dec
jns
roll
pop
sahf
scas
in
jnp
sbb
int3
lock
cmp
ret
fistpl
andb
insb
xor
iret
into
stos
aas
out
jns
push
mov
std
sbb
leave
pusha
xchg
xchg
xor
xchg
mov
jmp
sar
rorl
pop
adc
or
inc
insl
fisubs
jno
mov
sub
test
lock
mov
add
xchg
mov
push
pop
jns
or
sub
ss
mov
sbb
dec
mov
adc
bound
outsl
lahf
xor
cltd
push
mov
sbb
stos
out
lds
push
mov
xor
cmp
mov
push
fdivrl
ret
xchg
sub
lock
ja
xchg
fs
in
into
clc
xchg
inc
xor
icebp
test
dec
mov
sarb
pop
push
test
mov
sub
sbb
jmp
in
mov
push
lea
jl
std
jo
push
inc
sub
loopne
cli
test
sbb
subl
dec
ret
into
fidivl
rorl
pop
shr
std
data16
mov
out
inc
rclb
mov
mov
and
jnp
push
repnz
addr16
jae
jecxz
push
inc
fists
mov
sbb
inc
aam
movl
mov
sbb
dec
ret
pusha
data16
jle
outsl
sbb
cli
jno
jp
test
or
or
inc
out
cmpsl
dec
lcall
jp
add
jne
les
add
lahf
adc
mov
ficompl
and
inc
cmc
ja
repz
xchg
push
outsl
dec
xchg
test
mov
lret
popf
lds
dec
sub
xchg
clc
out
mov
inc
xchg
leave
xchg
mov
pushf
out
cmc
add
pop
data16
mov
push
add
shr
jae
adc
jecxz
mov
mov
cmpb
sbb
sub
pop
ljmp
repz
je
and
dec
testb
int3
add
add
std
mov
and
jno
fsub
jno,pn
xor
cli
jns
xchg
cltd
or
inc
cwtl
pushf
lret
mov
xor
pop
jl
cwtl
divl
mov
daa
xor
add
or
stos
sub
int
and
inc
ret
outsb
cmpsl
xchg
dec
mov
mov
mov
ljmp
sbb
icebp
testb
xchg
aaa
pop
xchg
loopne
popa
ret
pop
repz
mov
xchg
cmp
sbb
xor
xchg
aaa
js
mov
adc
or
lahf
in
add
or
mov
mov
sbb
shlb
sbb
loop
lret
jl
jne
insb
or
pop
jo
fimuls
xor
scas
imull
jae
mov
inc
stc
mov
sahf
mov
sbb
out
pop
push
or
sbb
in
aad
fisubrl
cmc
add
mov
sub
loop
add
add
mov
mov
sub
mov
mov
inc
adc
dec
cli
mov
sub
dec
mov
jae
lds
cmp
ficoml
in
pop
mov
repnz
das
sub
test
mov
fistpl
and
shll
sub
cmp
das
lcall
je
sti
ret
or
mov
sub
push
sbb
popf
je
test
cmpsl
mov
cld
test
ret
mov
sarl
inc
and
mov
xchg
lcall
iret
xor
fwait
ror
insb
xchg
outsl
mov
inc
push
jecxz
movsl
rcl
js
ds
imul
adc
frstor
jno
out
or
leave
enter
cmpsl
inc
adc
les
adc
sbb
add
push
enter
ja
adc
push
nop
cmpsl
jne
lds
fdivs
sbb
or
or
inc
into
fisttpl
cmp
popa
mov
xchg
sahf
xchg
lea
sarl
jge
adc
test
loope
out
repz
in
xor
xchg
gs
adc
jbe
jle
imul
cmp
dec
mov
data16
xchg
mov
in
movsl
push
push
xchg
daa
inc
inc
daa
mov
dec
sbb
aas
add
sub
repz
cwtl
popf
mov
jge
sub
incb
dec
aas
cmp
pop
mov
mov
out
es
dec
push
and
test
jecxz
inc
pop
add
stos
dec
fsubrl
adc
dec
mov
iret
mov
inc
aam
xchg
pop
insl
pushl
movsb
lcall
gs
sbb
xchg
inc
loop
or
xlat
lock
push
out
and
fildll
jge
aaa
in
in
dec
fsincos
push
dec
loope
or
int
stos
cmp
push
mov
jne
por
or
jle
cmpsb
or
cld
sub
stc
imul
bound
sub
or
int3
cmc
outsb
aaa
pop
mov
inc
sub
adc
cmp
mov
rcr
and
jg
mov
xchg
add
dec
icebp
out
add
add
rorb
leave
dec
js
mov
leave
das
mov
enter
addr16
lea
mov
jl
out
stos
repnz
inc
sbb
mov
pop
loope,pn
fldcw
pop
mov
daa
in
push
mov
or
fldl
aam
scas
lods
push
arpl
inc
out
repz
dec
mov
cmc
mov
ret
mov
in
push
jg
subl
mov
xor
push
sbb
in
cli
rcrl
enter
shlb
cmp
orb
lock
in
pop
cmp
xchg
aas
sub
lods
sahf
or
cmp
sbb
and
imul
fdiv
rcll
lods
mov
fistps
sbb
popa
sub
and
inc
iret
mov
ljmp
sbb
sub
insl
negb
aad
sub
shlb
xchg
mov
mov
xchg
cwtl
add
xor
jmp
popa
jmp
pop
data16
push
jno
fadd
xor
sbb
dec
subb
adc
paddb
lahf
in
cltd
sbb
loopne
scas
jmp
and
call
sti
xchg
hlt
dec
jl
aad
aaa
hlt
fildll
ss
pop
push
xchg
je
rcl
push
jno
lret
mov
mov
in
jmp
shll
inc
dec
or
rcrb
push
je
mov
xor
push
sbbl
pop
jbe
jmp
negl
mov
pop
pop
inc
dec
mov
jg
test
cmp
sti
in
aas
dec
dec
lcall
into
test
in
push
leave
push
xor
icebp
mov
and
movsl
jecxz
cmp
cmp
xor
jmp
fwait
outsb
fbld
push
push
or
pop
ja
negl
fs
stos
fsubrl
push
rcll
dec
push
test
rol
test
cmovg
cli
pop
clc
inc
cmpsb
push
insb
iret
pop
and
push
push
cltd
push
push
pop
add
inc
xor
pusha
xor
imul
mov
fimull
mov
repnz
sahf
xchg
in
stos
push
pop
in
add
sbb
jl
xchg
loop
sub
mov
xlat
testb
loopne
jecxz
push
jns
jle
lods
sbb
add
pop
dec
sbb
idivb
or
mov
rorl
pop
or
fisttps
ror
rorb
push
inc
aam
cmp
xchg
xchg
xchg
loope
push
sbb
lret
movsb
xchg
js
aaa
sbbb
shr
cmp
push
shl
je
jne
rol
push
or
imul
repnz
mov
sbb
adc
into
leave
inc
or
inc
mov
push
xor
and
in
imul
mov
xor
rcl
inc
mov
push
xor
cs
dec
and
fistpl
shl
call
xchg
jmp
icebp
sub
testb
jbe
mov
rorb
add
shlb
xlat
lods
fmuls
jge
push
adc
mov
aad
inc
or
add
and
or
add
lds
inc
jge
xchg
xchg
hlt
cld
lea
and
lea
pop
das
xor
stos
lahf
adc
pop
out
mov
aaa
push
xchg
je
xor
adc
es
pop
scas
int3
pop
outsb
sbb
lods
push
and
adc
fists
jne
mov
shr
fcomip
cmp
fs
lahf
adc
clc
xchg
popf
outsb
mov
adc
xchg
jecxz
imul
cmp
adc
sub
jge
sahf
sbb
xor
xor
iret
mov
pop
ds
sub
cwtl
jns
lods
pop
leave
fwait
adc
mov
xchg
icebp
jne
or
jns
dec
ret
test
adc
pop
frstor
push
fimull
mov
and
sub
rolb
in
sub
lods
or
cmp
fisubl
rcrl
repz
sbb
mov
aad
enter
out
mov
cmc
adc
subb
lods
imul
lret
jp
jnp
cmp
mov
xor
cli
rclb
fdivrs
bound
stos
xlat
in
cltd
aas
ds
outsb
adc
aam
into
je
repnz
fcompl
xchg
jg
int
fdivrp
cmp
dec
jno
mov
ficoml
xchg
pop
cmp
nop
add
mov
out
test
stos
lock
in
add
cmp
jl
movsb
pop
dec
cmp
cmpl
lcall
es
inc
push
xchg
or
inc
enter
xchg
or
mov
xchg
pop
sbb
je
fisubl
adc
push
inc
mov
pop
or
push
scas
add
add
jle
insb
shll
cmc
inc
std
or
fwait
aad
insb
dec
xchg
xorl
xchg
stos
adc
pop
adc
xor
fwait
dec
lock
dec
or
add
loopne
inc
rol
int3
dec
add
notb
pop
jne
cmpsb
scas
add
inc
inc
xchg
jp
bound
bound
mov
cmp
enter
pmaxsw
pusha
cltd
ret
jb
fcompl
sbb
jle
sbb
inc
lret
icebp
mov
xchg
push
je
mov
adc
scas
add
mov
ljmp
xorb
out
lahf
sbb
push
fadds
ret
mov
xchg
lahf
xlat
inc
pop
fisttps
ljmp
aad
shl
mov
je
int
inc
mov
cmp
mov
hlt
xor
and
je
jg
test
iret
sbb
push
jl
mov
das
pop
jnp
cmp
push
lods
adc
cs
inc
in
add
faddl
mov
hlt
repnz
daa
cmp
out
adc
test
add
xorl
xor
fistpl
ljmp
adc
sub
and
xchg
or
mov
hlt
iret
cwtl
pop
out
and
jle
sub
inc
add
push
add
mov
mov
testb
mov
push
mov
cli
enter
repnz
inc
cmp
xor
inc
inc
les
mov
scas
imul
lea
jmp
or
inc
sbbl
insl
enter
add
lods
fidivrl
and
mov
mov
xchg
mov
popa
add
popf
ret
daa
clc
imul
pusha
out
jno
int
test
mov
pusha
add
decl
mov
out
enter
lods
fsub
lods
ret
inc
adc
ljmp
int3
fnstcw
mov
or
rclb
add
mov
imul
inc
shl
xor
jl
pop
out
lret
dec
mov
dec
shrb
call
push
in
les
icebp
xchg
or
sbb
fstps
jne
jns
or
mov
cs
push
popa
push
adc
dec
cmp
outsb
jecxz
adcb
je
outsl
mov
jnp
push
push
xchg
in
mov
mov
std
pop
mov
shrl
out
jp
add
aaa
cmp
adcl
mov
jbe
or
dec
mov
and
out
int
jle
sarl
ror
dec
cmpsl
cmpsl
dec
mov
add
adc
leave
inc
add
dec
mov
or
jbe
call
pop
push
call
or
push
and
mov
fstps
insl
and
xchg
jbe
pop
ljmp
aas
fildl
pop
or
jno
push
outsb
adc
js
out
sbb
mov
or
shlb
lcall
jmp
xchg
jle
push
jnp
push
push
std
icebp
or
ja
daa
dec
add
pop
sbb
jg
mov
cs
sbb
out
frstor
or
dec
adc
roll
jl
rorb
sbb
in
push
in
mov
dec
cld
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
scas
imul
cmp
movsl
or
inc
mov
cmpsl
mov
insl
mov
dec
dec
jle
mov
popa
jmp
jp
pop
cltd
orb
and
jl
mov
inc
lock
stc
adc
leave
ds
lcall
xor
cltd
cli
sti
fsubrp
xchg
sahf
outsl
or
mov
and
fucompp
in
or
outsl
notl
mov
lods
jmp
mov
xlat
ljmp
jae
fsubrl
xchg
into
adc
mov
shll
cltd
movsl
lds
pop
mov
cmp
jmp
stos
call
xchg
and
xchg
lahf
fiaddl
outsb
mov
jle
xorl
and
push
xchg
inc
sbb
nop
xchg
loop
push
clc
xor
cmpsl
push
mov
push
adc
test
gs
loope
add
xchg
push
aam
mov
jp
gs
scas
movl
jae
or
in
dec
sti
ss
adc
xchg
add
mov
fmulp
jo
pop
shll
add
add
pop
scas
push
nop
cwtl
mov
jle
mov
pop
mov
rolb
scas
pop
and
std
das
mov
in
cmp
andb
imul
jl
cmp
aaa
dec
add
pop
add
sbb
cmp
xor
sbb
mov
jecxz
jle
enter
ret
xorl
lods
sbb
ficompl
inc
jmp
push
sbb
cs
mov
xor
shr
or
push
arpl
shl
gs
pop
mov
xchg
xchg
mov
pop
inc
jnp
xor
insb
add
cmpsb
push
jb
dec
shll
jl
inc
xchg
xlat
inc
out
pushf
dec
mov
push
xchg
inc
insb
test
outsl
xor
xchg
dec
imul
inc
notl
imul
sub
ret
leave
mov
stos
jns
les
mov
mov
sbb
icebp
lret
xor
xor
adc
je
js
cwtl
gs
xchg
push
lret
pmulhuw
loope
dec
pop
fstpt
adc
sub
pop
xchg
fwait
or
lds
imul
sub
sti
jge
jo
and
xchg
jb
fwait
jbe
dec
push
adc
dec
push
shrl
pop
or
fs
cmpl
add
mov
push
fcmovnbe
xchg
clc
orb
add
neg
mov
pop
mov
jae
and
in
push
add
adc
add
jae
jle
push
hlt
jmp
xchg
arpl
sbb
push
je
rcrl
cmp
xchg
std
jb
and
repz
sub
and
xor
in
cmp
jne
mov
movsb
dec
cmp
fsts
cmp
inc
push
and
popa
fdivrl
je
add
or
out
and
daa
dec
aad
cli
jne
or
push
sbb
inc
loop
mov
js
xchg
popa
in
bswap
mov
inc
xchg
xorl
pop
rcl
std
xchg
daa
out
pop
cltd
mov
add
sub
mov
test
push
push
faddl
mov
mov
inc
mov
sbb
pop
pop
std
push
inc
cmp
mov
sub
daa
scas
sub
jne
cmc
mov
xchg
sti
mov
out
jnp
es
or
mov
scas
sbb
mov
insb
adc
cs
fmul
cmc
fs
testb
lret
cmpsl
shlb
jbe
cmpsb
push
enter
gs
pop
fcomip
fcomp
mov
lahf
cwtl
stos
int3
sub
cmp
movsb
mov
test
jns
sbb
std
mov
adc
fildll
jne
inc
mov
add
pop
pop
mov
popa
dec
out
pop
daa
mov
add
push
shl
and
push
or
sub
cmp
xor
jbe
js
les
add
sahf
and
xor
cmp
test
mov
jmp
jg
and
mov
imul
xlat
pop
mov
cmpsl
pop
adc
mov
ret
aas
mov
dec
dec
push
push
repnz
mov
mov
dec
push
xor
in
ss
mov
clc
rcll
jge
mov
xlat
and
cmp
lds
cmp
dec
scas
and
pop
insb
imul
mov
imul
jg
xor
imul
cmpsl
std
insl
lods
and
mov
shlb
test
xor
lods
std
fwait
in
in
sti
pop
mov
adcl
cmpb
and
cmp
add
dec
outsb
divl
cmp
bound
inc
cmpsb
mov
jl
and
pop
bound
lods
xchg
and
dec
sbb
or
add
lret
scas
rorb
rorb
lods
lock
imul
hlt
xor
fwait
cmpsl
or
cmp
push
in
push
pop
std
outsl
cmpsl
mov
ror
loope
fwait
lret
ret
dec
outsl
inc
aas
xor
dec
dec
jne
mov
repnz
addr16
push
subb
mov
inc
sbb
fcmovbe
lds
dec
jmp
movsl
loop
add
jp
inc
push
mov
jns
jbe
mov
add
es
inc
pop
cmp
notb
push
insb
cld
inc
scas
fwait
push
dec
in
jmp
mov
aas
cld
sub
int
outsb
pop
ja,pt
addr16
sbb
cmp
mov
pushf
or
xor
in
shlb
out
mov
fs
or
imul
cltd
in
aam
pusha
data16
dec
mov
iret
xchg
scas
and
mov
lock
dec
mov
sub
xor
jb
lods
pop
arpl
xor
in
sub
ds
mov
lock
lea
pop
mov
rol
iret
xchg
lods
pop
jle
movsb
js
xor
add
or
hlt
add
das
ss
push
mov
in
jecxz
pop
addr16
dec
fldl
dec
dec
sbb
inc
pop
or
out
cltd
jne
xchg
add
leave
dec
neg
sub
mov
sbb
xor
pop
xchg
cmp
xorl
mov
rolb
or
lret
loop
adc
outsb
push
xchg
stc
xchg
je
mov
pop
dec
cmp
mov
hlt
mov
and
dec
test
je
push
or
cltd
sub
and
insb
int3
xchg
inc
sbb
adc
jmp
test
ds
movsl
xor
inc
adc
or
cmp
lahf
pop
mov
pushf
clc
sub
loope
mov
lea
and
mov
dec
cltd
rdtsc
xchg
jge
es
rcrb
cmp
sbb
insl
sbb
inc
std
xor
es
test
cld
out
lock
in
addb
in
mov
in
mov
sub
and
dec
and
xchg
insl
xor
mov
shrl
mov
xor
xchg
fisubs
addr16
jne
inc
mov
push
xor
or
cmp
inc
add
push
fcmovnu
add
out
icebp
jg
xchg
add
push
sbb
popa
lret
shll
adc
push
dec
scas
mov
pop
bound
push
out
fwait
push
mov
sub
mov
and
test
cmpsb
aaa
jo
dec
pop
mov
lea
mov
xor
xchg
aam
mov
test
js
cmp
ds
adcb
mov
ret
mov
jge
imul
enter
and
sbb
or
stos
ljmp
orl
outsb
and
dec
int3
mov
add
ja
pop
roll
cwtl
push
pushl
scas
aaa
sahf
ja
ret
cld
cltd
les
aad
movsl
cwtl
cmp
inc
fsubrl
mov
jp
mov
jno
mov
push
ret
jae
outsl
push
jno
cli
xchg
xorl
cmpb
pop
cld
pop
jg
cs
add
loop
mov
adc
adc
adc
test
jne
pop
imul
adc
xor
dec
xchg
movsb
pop
es
repnz
jge
aas
mov
rol
ja
jmp
fldcw
jp
mov
xor
mov
mov
faddl
mov
jo
jns
mov
xchg
pop
pop
adc
ret
xchg
scas
shlb
adc
mov
or
int
shlb
pop
inc
ret
cld
mov
sahf
sti
loopne
orl
push
movsb
cmp
popa
test
aaa
pop
incb
jnp
jp
sbb
cwtl
jp
test
sarl
js
sbb
mov
shll
or
into
stos
dec
iret
add
scas
fidivl
mov
lock
and
in
and
test
shlb
lods
movsb
sub
adc
in
jmp
and
cs
adc
outsl
push
pop
lahf
in
mov
mov
movsl
sti
mov
dec
sub
adc
scas
repz
leave
insl
mov
pop
repnz
add
divl
data16
jg
sub
mov
cwtl
in
xchg
push
imul
mov
xchg
outsl
or
cmpsl
xor
push
mov
jae
fwait
mov
dec
push
xchg
out
push
mov
ds
test
jp
cmc
add
stc
bnd
inc
xor
sbbl
ret
out
aas
insl
add
lea
sub
push
jge
loope,pn
xor
lret
andl
cltd
sbb
ret
lcall
sub
sbb
fcomi
jbe
xchg
xor
ja
mov
pop
mov
sub
and
pop
xlat
dec
adc
scas
aaa
sahf
xchg
fnsave
jle
mov
and
lret
cmp
lret
and
or
bound
nop
sub
xor
addb
adc
jo
call
mov
sti
mov
subl
div
inc
add
jmp
sahf
jmp
sbb
pop
sarb
aas
mov
mov
aam
loopne
mov
mov
and
faddl
xchg
shlb
jmp
mov
push
call
xor
push
out
cmp
add
hlt
dec
testl
sti
sbb
xchg
rcll
pushf
jmp
icebp
stos
or
xchg
xchg
push
fsts
lret
xchg
jne
mov
inc
lret
imul
or
jne
ss
push
pushf
in
cmpsb
pop
mov
sbb
xchg
xchg
clc
inc
jnp
aad
inc
rcll
fwait
inc
push
cmpsl
jmp
lret
mov
inc
mov
or
test
loope
outsb
push
mov
ja
in
sbbb
popf
inc
movsl
jae
ret
xor
lcall
dec
cmpsl
jp
subb
push
sub
inc
sub
inc
enter
mov
out
and
push
dec
scas
imul
xchg
repz
inc
sahf
into
lret
into
mov
andb
adc
fwait
jge
insb
pop
xorl
dec
into
imul
leave
inc
mov
mov
jno
push
push
in
push
fs
pop
lret
push
add
pop
imul
mov
scas
scas
xorl
mov
or
int3
fwait
or
aaa
lods
or
xchg
mov
or
push
mov
jns
sbb
and
mov
lcall
lcall
dec
and
mov
push
mov
or
mov
push
lret
hlt
stos
pop
aam
dec
and
outsl
sub
mov
out
stos
mov
mov
xor
xlat
loopne
mov
outsb
jle
sub
or
pop
ja
mov
jge
add
loope
and
adc
jl
rol
xchg
and
movsb
or
dec
ljmp
jge
std
jmp
jns
mov
sub
shll
push
xchg
jmp
mov
mov
addb
faddl
add
mov
cmp
cmpsb
and
mov
repnz
sbb
into
pop
dec
push
dec
xchg
add
pop
mov
lds
pop
rorl
push
sbb
sbb
test
cmc
xchg
cmpsb
sub
jge
loope
push
icebp
stc
sub
adc
sar
fcompl
xchg
insl
sub
add
and
xorl
pop
repz
out
xor
and
aad
mov
imul
adc
sbb
push
cmp
jns
jnp
sbb
fsub
mov
orb
xlat
cmp
aaa
test
inc
cmc
cmp
pop
jbe
repz
test
imul
push
add
test
arpl
xchg
dec
cltd
push
or
xor
popa
mov
pop
jle
adc
push
rcrl
repz
lret
aad
push
dec
push
xor
stos
push
xchg
movsl
stos
add
notb
nop
push
outsb
cmp
cs
adc
out
in
jne
push
ret
inc
jl
add
mov
mov
lds
push
pop
subb
jecxz
xor
int3
cmp
and
hlt
xor
fistpl
mulb
lret
shl
int3
add
jmp
add
jns
or
nop
stc
xor
mov
rclb
jns
mov
ss
outsl
pop
lock
xchg
pop
inc
dec
call
xor
lret
mov
xchg
or
mov
jae
jg
push
sbb
addl
jmp
incl
xchg
out
outsl
cwtl
jno
mov
sbb
pop
pop
sbb
mov
mov
inc
int3
insb
cmpsb
js
testl
jmp
sub
and
cld
sbb
aam
lret
outsl
or
repz
sahf
fisubl
pop
repz
mov
iret
out
out
sub
push
cmc
mov
sub
pop
jb
std
lods
lods
scas
int3
xchg
and
rcll
sub
push
mov
pop
movsl
js
add
fcoms
in
add
or
outsl
aaa
jmp
test
xchg
cmpsb
stc
or
mov
add
fadd
fmuls
cwtl
shll
rcll
mov
or
mov
imul
mov
lret
or
roll
scas
jo
xchg
rorb
dec
cmpb
sbb
sbb
cmp
and
sbb
fldpi
lcall
mov
mov
je
loope
enter
ljmp
add
test
cmc
in
mov
das
inc
in
arpl
shrb
sbb
or
lods
jnp
adc
shrb
mulb
jns
mov
inc
dec
jle
and
pusha
lcall
rclb
sub
movsl
jg
pop
jae
push
adc
and
ret
xor
mov
mov
push
push
out
lcall
sti
fsubr
mov
icebp
jg
ret
popa
stc
and
outsl
push
adc
sarl
xchg
mov
mov
cmp
icebp
scas
jmp
jg
lret
iret
cmp
push
insl
daa
mov
nop
push
push
cmp
add
xchg
nop
pop
out
cmp
inc
jb
enter
int3
icebp
mov
scas
cmp
jns
popa
js
test
push
into
shlb
adc
stos
dec
add
jmp
jno
aaa
xchg
xchg
inc
push
push
outsb
ficomps
lret
out
out
jge
mov
jl
dec
jg
xor
leave
adc
jg
jge
clc
cmpsl
pop
test
cmp
push
cs
push
mov
push
inc
push
cmp
std
in
pop
roll
add
ljmp
dec
jo
negl
jb
insl
mov
fcomps
in
xchg
pushf
loop
sbb
inc
and
leave
imul
and
inc
ret
adc
push
dec
mov
inc
xchg
cmpsb
sarb
sbb
or
add
xor
fbld
mov
jns
test
jge
lret
sbb
es
add
lock
out
ss
je
push
jecxz
mov
stos
inc
pop
xor
jmp
pop
sbbb
js
movsb
icebp
test
sbb
xchg
inc
shl
cmpsl
in
sub
loopne
add
mov
lret
push
inc
pop
leave
aam
stos
js
push
test
push
or
jae
gs
add
jg
sub
jle
add
and
pop
or
fldt
or
clc
or
sbb
sbb
movsb
xchg
arpl
or
fisttpl
int
lods
adc
pushf
je
mov
bound
jge
imul
je
jnp
cmp
sti
adc
test
fsubl
mov
and
mulb
je
add
pop
addr16
push
test
ljmp
jo
mov
push
cmpsb
out
loope
movsl
pushf
stos
add
mov
push
and
and
mov
cmpsb
sub
fs
out
mov
lea
ret
xchg
pop
test
cltd
mov
imul
repz
pop
subl
jne
xchg
jmp
inc
mov
pop
sub
aas
daa
repz
sub
sahf
clc
adc
and
aad
cmpl
jmp
pop
and
in
popa
mov
jl
jle
fiaddl
fsubrs
jno
jg
or
stos
xor
adc
out
xadd
mov
push
pop
bound
mov
mov
xor
mulb
testl
mov
stos
push
loop
mull
inc
insb
pop
cmp
lds
adc
fwait
jl
xorl
call
sbb
pop
loope
mov
and
adc
sbb
in
dec
pop
jno
cmp
jns
mov
orb
push
lods
sbb
push
pop
push
inc
aad
adc
dec
aas
stc
sub
add
add
push
mov
lea
fnstenv
addl
loopne
mov
gs
sbb
xor
xor
les
or
jmp
mov
and
push
dec
in
mov
aaa
push
pop
dec
sbb
cmp
aam
mov
mov
stos
sbbb
arpl
daa
or
jg
dec
and
repnz
shll
leave
orl
cmp
scas
xor
inc
sbb
jl
test
push
inc
fbstp
xchg
sbb
mov
stc
outsl
sbb
sbb
mov
shrl
pop
lock
shr
dec
adc
cld
lret
adc
jb
mov
mov
dec
inc
popa
cmpsl
pop
inc
push
inc
adc
sbb
sbb
sbb
add
adc
xlat
ffree
push
mov
sbb
push
loop
jmp
sbb
push
adc
inc
pop
jecxz
inc
xor
in
jl
add
sbb
movsl
shlb
fsubr
repnz
loopne
aaa
xor
aas
jns
shlb
inc
insl
adc
mov
pop
mov
ss
outsb
jle
sbbl
mov
movsl
fwait
popa
in
xor
mov
or
movsb
aas
imull
xchg
jo
xor
jb
pushf
int
fwait
push
lret
xor
mov
mov
ja
adc
and
pop
jb
inc
addb
mov
pop
mov
cmp
insb
adc
out
mov
or
cmpsl
or
dec
inc
cld
aam
pop
jno
adc
shl
dec
cmp
aam
cmp
jb
mov
and
test
shlb
mov
add
and
sbb
fisttpl
jg
or
cli
push
pop
sub
insl
jg
jmp
shlb
sbb
fwait
sub
xor
inc
test
out
ljmp
add
sub
hlt
fwait
negl
les
or
setbe
cwtl
push
pushf
icebp
xor
inc
js
jle
loopne
add
mov
out
enter
stos
dec
adc
rorl
fcomps
add
loope
mov
and
jmp
xchg
adc
xchg
testl
subb
stc
shlb
icebp
adc
in
fucom
mov
mov
mov
out
push
xchg
add
mov
fidivl
push
dec
xlat
sbbb
inc
mov
dec
xor
fucomp
mov
dec
push
nop
aam
or
mov
aaa
pop
aaa
inc
xor
mov
xor
push
sub
inc
mov
mov
roll
fwait
lea
fimuls
push
ret
into
add
add
adc
sti
mov
pop
add
jl
std
mov
les
dec
sahf
and
adc
jnp
sub
cs
in
mov
xor
mov
dec
adc
roll
mov
cmp
jmp
adc
out
arpl
addr16
dec
push
mov
aad
mov
or
mov
push
es
pushf
fstpl
leave
pop
add
gs
aas
outsl
dec
cmp
fwait
mov
or
lods
or
pop
inc
imul
jnp
mov
inc
xlat
popf
and
xchg
sub
push
pusha
cmp
xchg
push
and
inc
mov
xor
dec
shrl
shrl
icebp
mov
jle
into
scas
das
push
xchg
xor
fld
mov
andb
push
cli
arpl
ss
xor
xor
inc
cmp
dec
sub
push
push
loop
xorl
sbb
cld
adcb
js
shll
mov
sbb
inc
and
adc
ja
arpl
and
in
in
jge
sub
adcb
cld
dec
lret
in
lahf
adc
dec
and
or
or
pop
call
jle
pop
fdivrl
cltd
repz
adc
stos
sbb
lret
stos
cwtl
pushf
pop
xchg
jne
sub
in
push
addr16
lret
mov
std
jecxz
outsb
loopne
pop
pop
addl
push
xchg
push
and
mov
dec
add
fsubrl
insl
mov
or
jle
negb
push
add
adc
sub
popf
sbb
faddl
retw
pop
popa
and
xor
cmpsb
test
inc
outsl
lcall
lahf
mov
into
call
dec
mov
pop
sub
cmp
mov
push
lret
add
add
cmpsb
sub
lret
out
dec
adc
push
push
push
jne
aaa
mov
push
cmp
ds
imul
lods
xchg
in
pop
xorb
sub
out
mov
inc
andb
outsl
iret
pop
js
jno
adc
pop
push
adc
fnsave
rcrb
mov
lods
call
mov
and
into
inc
sbb
mov
cmpsb
pop
cmc
xchg
ljmp
pop
mov
jp
cmp
mov
dec
loop
lds
push
sbb
imul
bound
cli
push
gs
xchg
push
lcall
xor
sub
xor
out
xchg
pop
mov
mov
icebp
mov
aas
into
std
gs
mov
ds
and
jns
lcall
popf
enter
bound
cmp
xchg
testl
push
scas
adc
push
stc
ret
leave
cmp
sbb
mov
dec
cwtl
jge
sbb
mov
xchg
cltd
sub
es
iret
repz
xlat
js
jb
push
and
call
ds
add
insb
add
lods
xchg
outsl
cmp
das
push
lret
in
divb
fwait
inc
xchg
xor
mov
insl
inc
ja
test
les
dec
pop
rclb
out
xor
les
push
mov
enter
cs
mov
sub
xor
mov
sub
add
test
push
pushf
or
pop
jecxz
xchg
pop
rol
adc
lock
xor
push
int3
sub
pop
mov
xchg
jo
push
shl
imul
fwait
fwait
gs
fwait
cmp
push
pop
sub
icebp
lock
jg
sub
push
pop
jmp
mov
fadd
fbld
movsl
ficoml
pop
push
insl
ljmp
jo
mov
lock
fisttpl
adc
mov
mov
cmp
cwtl
gs
sbb
pushf
fwait
int
lret
lods
in
in
popf
leave
sarb
lret
mov
mov
xchg
rolb
jmp
lods
xchg
xor
jle
rcll
pop
nop
in
mov
mov
aas
int3
xchg
cld
jl
push
mov
stos
lods
outsb
inc
aam
adc
mov
pop
into
jl
ss
jp
cmpsl
pop
pop
popf
addb
xchg
pop
inc
insl
or
jno
sbb
mov
or
and
cmpb
lahf
sbb
dec
xchg
dec
jecxz
jno
xchg
or
leave
cmp
repz
js
clc
lcall
pusha
fsubrs
xchg
ficoms
dec
mov
or
xor
out
jo
push
lahf
scas
fcoms
movsl
arpl
jns
popf
out
lcall
add
jle
imul
xchg
jecxz
pop
inc
mov
out
cwtl
inc
push
jns
pop
jb
jo
aas
movsb
adc
inc
int3
das
mov
xor
andb
ret
out
jmp
fldz
in
testb
out
setno
mov
mov
iret
add
daa
data16
movzwl
imul
pop
lret
xchg
jne
mov
xor
jnp
rcrl
ja,pt
xchg
dec
mov
adc
pop
push
pop
jo
cmp
mov
adc
js
loopw
lock
insb
leave
pop
fs
pop
pop
es
leave
xchg
addr16
jne
sahf
push
fistpll
das
push
in
jns
xchg
mov
aas
sbb
shrb
cmc
lods
loope
cmpsb
lds
lods
in
addr16
rcll
icebp
inc
jmp
jae
adc
and
pushf
dec
cltd
gs
cmp
jl
lock
pop
push
jmp
mov
xor
cmp
iret
repnz
or
decb
mov
adc
fldz
pop
insl
imul
push
push
jmp
push
lods
jp
sbb
test
xchg
jge
mov
adc
jmp
sub
pop
sbb
lahf
je
cltd
cmp
pusha
sub
call
mov
or
sbb
mov
jbe
clc
pop
mov
stos
cld
dec
cmpsb
movsb
and
sbb
pop
test
jle
inc
leave
addr16
jne
pop
roll
outsl
push
out
outsb
mov
es
ficoml
fisubs
sti
xchg
mov
pop
add
sub
pop
inc
push
add
sbb
test
pop
jbe
dec
and
fcmovnbe
dec
insb
xchg
insl
dec
je
fs
notl
mov
xor
mov
sub
in
xor
popf
and
iret
xor
jne
in
sbb
jl
mul
cld
insb
xlat
lea
jns
fidivl
jnp
jnp
jne
jge
lahf
stos
push
jmp
and
pop
add
adc
arpl
adc
inc
rcrb
stc
mov
mov
fbstp
aas
jne
repz
mov
mov
aam
imul
addr16
sub
imul
jnp
cmp
daa
push
xchg
shlb
subb
in
mov
adc
add
adc
insb
outsl
cmp
adc
inc
sbbl
addr16
ret
xor
jns
int
mov
or
inc
mov
pop
shll
add
addr16
jl
aaa
out
test
xchg
icebp
inc
in
inc
ficoms
xchg
xchg
xor
inc
adc
sub
or
shlb
xor
cmpsb
cmc
es
lods
lods
out
in
rep
jnp
sbb
xor
scas
mov
pop
sbb
fs
adc
lods
xchg
stc
int3
flds
jnp
cmp
push
andb
dec
inc
jl
inc
jle
xchg
mov
jne
pop
enter
push
aas
push
cmp
imul
cmp
sahf
jmp
mov
or
mov
cmpsl
mov
ds
iret
jb
bound
in
xchg
test
mov
stc
mov
push
in
or
adc
mov
pop
cmp
sbb
mov
std
int
cmp
dec
mov
imul
pop
xchg
mov
mov
rol
push
das
in
sarb
xchg
sahf
sti
cmp
jmp
sbb
jmp
mov
stc
roll
add
cmpsb
rcrl
mov
dec
add
adc
or
cmpsb
je
fstps
push
mov
outsb
jle
pusha
fnstsw
pop
popl
scas
inc
stos
fs
xor
push
outsb
arpl
add
add
jl
lea
into
call
fwait
stos
jae
add
and
sti
jb
cld
test
push
inc
push
jmp
push
xor
pop
fs
loopne
aam
sub
enter
push
and
mov
cmpsb
and
out
mov
xor
jle
cmp
incb
call
and
stos
sti
mov
dec
adc
std
or
ret
mov
mov
in
mov
lock
fisttpll
dec
lods
push
fidivrl
int
stos
push
fs
ret
xor
adc
xor
test
xor
mov
mov
and
mov
ss
test
outsb
jge
sarl
sbb
mov
scas
xchg
push
sub
loopne
es
lea
adc
adc
enter
int
pop
sbb
add
in
cmp
shlb
fnstsw
sbbb
dec
inc
insb
jns
nop
loop
iret
xor
and
inc
jecxz
pop
or
push
leave
lcall
and
push
push
pop
les
xchg
call
add
xchg
hlt
test
mov
icebp
sub
rcr
pop
out
mov
out
arpl
cmpsb
stos
adc
pop
fistpl
arpl
and
dec
nop
icebp
mov
ljmp
sub
pop
jns
out
into
gs
and
mov
cmp
lahf
fs
dec
dec
xor
pop
gs
outsl
jp
jno
mov
loopne
pop
push
mov
das
out
pop
mov
xchg
femms
in
test
cmp
dec
push
in
arpl
daa
lcall
mov
sbb
and
jae
pop
loope
ret
fsts
dec
and
xchg
sarb
add
pop
dec
inc
pop
scas
or
ljmp
jb
into
xor
sbb
fldt
jnp
jl
xor
cmpsb
outsl
sbb
pop
xlat
aaa
repnz
cmp
icebp
ret
movsl
in
fsubl
jle
arpl
and
xchg
aad
out
and
adc
adc
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
inc
imul
insl
add
jp
pop
jp
insl
jno
imul
push
pop
sub
push
outsl
out
cmpsl
jl
cltd
inc
xor
lahf
add
and
sbb
std
mov
mov
lcall
jne
inc
lret
sub
outsl
push
sub
adc
and
mov
xor
xor
imul
in
xchg
pop
mov
adc
jge
out
fdivrp
jp
and
xor
add
mov
mov
dec
xchg
sbb
movsb
ss
mov
jl
jle
imul
fstps
add
mov
fstpt
cmpsl
outsb
addl
dec
aam
enter
add
mov
rcll
add
in
aaa
cmpl
mov
dec
test
inc
mov
add
mov
fs
add
fnstsw
loop
xchg
imul
dec
push
shrb
push
cli
das
jle
lock
push
imul
ret
hlt
xchg
leave
sub
adcb
add
std
cmp
mov
push
cmpb
mov
or
in
push
mov
inc
test
lea
pop
pop
dec
mov
stos
cmp
pop
inc
inc
rcr
jb
fldcw
xchg
fbstp
fstl
sbb
popa
jp
push
jg
pusha
inc
es
jnp
dec
or
inc
jo
ljmp
jb
addr16
xchg
int3
mov
add
jg
mov
pop
jbe
and
xchg
push
ja
pop
adc
inc
rcr
jmp
add
imul
in
stos
mov
ret
cmpsb
ja
cld
push
push
sub
hlt
jle
mov
lahf
pop
add
rol
sahf
mov
mov
out
push
dec
rcr
aas
xchg
mov
fwait
icebp
scas
int
fnstsw
movl
imul
in
pop
out
pop
mov
inc
cs
shll
xor
inc
lcall
stos
cli
and
dec
fdivrl
cmpsl
sub
dec
stos
xor
popa
js
mov
push
ljmp
stos
or
mov
push
pop
push
outsb
lods
loope
lcall
jl
jbe
lock
popf
stc
fnsave
popf
cli
in
lahf
and
nop
aad
sub
sahf
fwait
sbb
adc
mov
stc
sub
push
popf
sbbl
call
xor
push
cltd
xor
xor
mov
cmp
cmp
cli
aas
shll
jns
sub
ror
jbe
and
jno
lcall
or
test
or
sub
push
sbb
push
push
add
pop
repz
cmc
rcrl
mov
int
sbb
jecxz
push
insb
cmc
and
jecxz
outsl
xchg
out
and
mov
push
pop
push
pop
into
adc
inc
mov
fidivrl
inc
fcomp
inc
rcr
sub
test
jbe
sbb
add
call
mov
rcll
in
in
int3
adc
inc
dec
outsb
sub
and
outsl
dec
daa
pop
or
inc
pop
aam
cli
repnz
jge
xchg
ret
add
add
pop
cmp
push
pop
imul
xchg
add
inc
fcompl
push
repz
push
sbb
sub
fs
decb
repz
ss
outsb
imul
or
lahf
sbb
dec
imul
or
pop
lret
ret
xchg
push
xchg
int
popf
mov
jl
insl
push
pop
out
adc
push
xchg
or
or
xor
idivl
mov
es
pop
mov
fistl
jl
ljmp
in
lock
sub
sbb
std
outsl
mov
and
testl
xor
mov
or
push
scas
cmp
imul
test
inc
les
add
xor
icebp
add
test
jle
and
movsl
xor
insb
cwtl
in
enter
sbb
stos
mov
fdivs
leave
adc
mov
rcrl
dec
pop
div
xor
sub
adc
adc
test
and
mov
sbb
sub
dec
les
jae
aaa
sub
or
inc
hlt
stc
adcl
rcll
shr
xorb
ja
pop
xor
jnp
sub
jecxz
lcall
pop
subb
xor
dec
sbb
pushf
xchg
cwtl
aas
addr16
pop
xchg
mov
dec
xor
push
push
out
sbb
out
or
add
dec
fldenv
ss
xor
sbb
movl
pop
xchg
loopne
lret
bound
cld
mov
data16
jbe
jne
xchg
fsubr
mov
xchg
mov
cmp
test
jmp
mov
ljmp
add
popa
jmp
out
xchg
leave
lods
dec
adc
inc
outsl
and
or
fists
push
repz
bound
jp
mov
cmpsl
rorl
jbe
or
mov
sbb
sub
jmp
stc
sub
ret
ja
cli
pop
mov
mov
jmp
inc
adc
cwtl
cs
aad
xor
sbb
mov
cltd
dec
addr16
push
sub
cmp
ret
aas
sub
ret
test
and
jnp
jbe
xchg
push
rcll
in
cwtl
cmp
add
xchg
mov
mov
jnp
cmp
mov
sahf
adc
incb
std
cli
addb
mov
imul
xchg
inc
pop
sbb
cltd
cmp
jb
or
sbb
mov
mov
shrl
and
popa
mov
push
inc
arpl
dec
ret
and
push
xchg
xchg
sub
sti
and
mov
fmulp
mov
xchg
daa
es
test
pop
and
xlat
mov
or
xchg
adc
ds
fdivrs
sti
inc
test
pop
mov
iret
repnz
xchg
jne
test
xchg
ja
mov
lods
daa
andl
sbb
push
sbb
jg
or
inc
loop
daa
lahf
push
ret
fsubs
mov
xchg
in
push
loopne
inc
mov
add
sbb
ja
xorb
fwait
jg
or
jp
and
setnp
sbb
push
into
out
nop
pop
es
out
imul
loop
aaa
nop
in
mov
in
loope
mov
adc
xlat
cmpsb
xchg
ret
mov
cltd
insb
out
nop
mov
cs
mov
mov
mov
jns
xor
out
aaa
dec
fs
push
int3
lock
shl
lcall
and
rcrl
or
fidivs
movsl
dec
dec
scas
and
imul
jle
rcll
inc
notb
mov
das
add
hlt
jp
mov
imul
push
std
std
jp
sahf
cmp
stos
mov
rcrl
clc
xchg
mov
mov
pop
fildl
clc
sub
es
pop
cs
lds
xchg
popa
shll
mov
mov
jae
aaa
mov
out
add
stos
sahf
ja
mov
mov
dec
loope
add
push
xor
mov
pop
insb
mov
adc
loopne
shlb
xchg
aad
pop
xlat
xchg
loop
pop
add
stos
sub
mov
iret
xor
add
mov
inc
negl
mov
stos
jmp
hlt
repnz
aas
fwait
cmpl
push
xchg
jge
mov
decl
lock
adc
call
xchg
in
cmp
sbb
xchg
lret
das
ret
and
popf
push
sbb
sahf
add
mov
sbb
cmp
mov
call
jecxz
aam
int3
cwtl
dec
in
push
test
mov
arpl
test
movsl
in
sub
or
add
stc
mov
mov
out
jae
and
jmp
rcll
pop
test
fbstp
or
jle
pop
scas
cltd
push
pushf
gs
lds
imul
repnz
stos
stos
mov
repnz
inc
cmp
es
push
pop
sub
insl
pop
loop
cmpl
adc
and
out
outsb
push
pop
dec
inc
int
inc
xchg
sub
push
add
xor
and
mov
mov
xchg
cmp
pop
out
xchg
sbb
out
add
inc
popa
or
movsl
jo
dec
je
mov
nop
scas
sbb
dec
mov
mov
imul
insl
add
into
enter
pop
ljmp
inc
xorl
jmp
sarl
xchg
and
mov
inc
xor
jnp
jmp
stos
jg
stos
sti
sub
repnz
xor
into
ds
loopne
insb
mov
div
mov
sub
out
bound
and
into
fsubrs
adc
loope
xchg
iret
push
clc
jmp
jb
loope
in
jno
dec
or
scas
stos
mov
dec
mov
test
je
adc
jmp
mov
aad
xor
rcl
test
jb
icebp
push
lret
xchg
mov
dec
ret
aaa
stc
lods
roll
pushf
stos
mov
jb
sub
dec
test
aaa
xor
ljmp
loop
popf
arpl
inc
shl
notb
xor
lock
jmp
mov
dec
jecxz
loop
jnp
scas
out
jle
and
pushf
addl
or
out
sbb
jnp
scas
jmp
and
push
fsubrs
cmpb
into
add
inc
or
cmp
jae
sub
nop
xor
hlt
aad
lret
outsb
clc
jecxz
and
or
push
bound
pop
mov
fiadds
inc
mov
and
insl
dec
sbb
dec
adc
xchg
inc
dec
or
sbb
fisubl
add
fistl
mov
rcl
sub
outsb
push
xor
inc
cmp
orb
pusha
and
jle
popf
sti
mov
add
adc
rorl
idivw
or
jnp
pop
or
and
mov
ljmp
push
xor
int3
nop
aaa
sbb
jmp
adc
sub
cmp
rolb
lea
jae
push
mov
aas
out
mov
cmpsl
pop
xor
rcrl
dec
push
dec
insb
push
je
aaa
xchg
cmpsl
loopne
lret
sbb
lret
adc
leave
xchg
mov
lods
les
inc
jle
pusha
sub
xor
pop
sub
xor
mov
bound
insl
inc
lret
mov
repz
jl
add
inc
adc
cmp
aad
cmc
or
ja
scas
movsl
bound
pushf
int
aas
lcall
adc
xchg
dec
fcomi
jmp
xlat
cmpsl
aad
or
cmp
xor
cli
push
das
shrl
dec
add
adc
sbb
mov
mov
rcr
test
mov
pop
xor
fstp
jle
xchg
pop
adc
add
dec
or
push
ljmp
fmulp
movsb
fisubs
mov
dec
or
push
rclb
add
movsl
js
sub
cmc
or
dec
or
jnp
xor
cld
ds
or
stc
mov
or
push
mov
mov
or
adc
mov
inc
and
call
dec
outsl
arpl
mov
xchg
xchg
ljmp
cwtl
jg
movsl
jmp
inc
jns
adc
outsl
scas
inc
mov
fstpt
cmp
addr16
cmp
and
mov
sti
jae
rorl
imul
jmp
sbb
fsubr
stos
cmp
in
ljmp
jmp
push
xorb
mov
inc
out
sbb
lcall
shll
add
mov
int3
setl
popf
jb
fstl
repnz
das
repnz
add
pop
mov
scas
std
jge
inc
xchg
xchg
xor
push
sbb
cmp
insl
add
mov
aam
andb
push
cli
jge
ss
into
and
add
add
repnz
lea
xor
fwait
mov
cwtl
mov
or
inc
pop
adc
gs
sub
roll
inc
nop
push
ret
xor
insl
es
push
mov
push
pop
repz
test
sub
lea
push
mov
scas
pop
push
inc
aas
mov
pusha
inc
inc
add
xchg
add
mov
ljmp
xor
into
inc
ljmp
push
cmp
jle
and
xor
std
cs
repnz
xor
pop
data16
ret
sbb
call
add
aaa
and
cltd
ffree
mov
sub
jns
loope
cmp
pop
je
mov
pop
push
adc
mov
jge
add
aam
cmpsl
pop
popa
inc
sub
pusha
adc
je
sbb
call
push
sbb
xor
ret
nop
shlb
call
in
adc
push
and
or
push
test
sbb
cmpsb
je
pop
cmp
call
cwtl
daa
iret
les
sahf
andb
sbb
in
stc
nop
rcll
and
pusha
inc
insl
jecxz
xchg
xchg
leave
inc
sub
mov
dec
fisttpll
push
xchg
dec
data16
imul
xor
jmp
sbb
lahf
lcall
sbb
push
and
cmp
ljmp
mov
jb
pop
std
adc
xor
out
frstor
andb
sub
pop
out
mov
lcall
pop
add
add
shrl
jo
cmp
loope
outsl
jmp
mov
stos
cld
push
dec
mov
movsb
lret
sub
mov
cld
loopne
cmp
insl
mov
inc
dec
insb
test
jo
sbb
or
pushf
jge
lret
insl
lcall
inc
popa
pushf
nop
mov
jae
test
mov
mov
cmp
scas
jb
sti
push
inc
xchg
xchg
data16
fiaddl
orl
adc
dec
in
jbe
add
jmp
insl
loope
orb
mov
pop
test
roll
ds
test
jne
cltd
inc
sbb
les
pop
out
outsb
stos
sbb
mov
pop
nop
mov
mov
xor
lahf
je
add
repnz
mov
aaa
cmp
cltd
sub
lods
push
xchg
xor
adc
sub
xchg
xor
dec
sbb
stos
fsubl
popa
movsb
movsl
mov
pop
ss
push
pop
push
fistl
pop
mov
mov
ror
nop
inc
xor
dec
sbb
sub
dec
shrl
sub
adc
sub
mov
ret
dec
movsl
pop
out
jnp
rcl
out
jmp
int3
pop
aam
mov
pop
and
push
shrb
das
mov
clc
sub
aaa
lahf
mov
xor
inc
fidivl
lret
lds
enter
inc
imulb
and
jp
hlt
addr16
pop
pop
pop
adc
xor
or
clc
imulb
fnstsw
loop
test
iret
faddl
and
xor
insl
cmpb
mov
jo
lcall
repnz
stc
ret
cmp
cmp
jg
sub
std
pushf
or
idivl
mov
xchg
push
mov
out
add
jno
aam
es
stc
leave
aas
scas
or
rol
cld
push
aaa
add
push
stos
fucom
fisttps
push
jbe
jne
loope
imul
jle
daa
imul
xor
mov
cltd
shlb
fdivrl
lret
xor
fsubrs
arpl
sub
enter
mov
incb
pop
jmp
cmp
andb
jae
lds
mov
and
push
lcall
lds
cmp
push
lods
fists
or
cmp
movsl
test
add
loop
push
stos
add
pusha
out
or
push
jbe
aad
ret
dec
les
mov
ret
lock
inc
insb
mov
jmp
cmpsb
or
loope
shrd
xchg
jae
lods
adcl
jo
pop
sbb
fs
aas
orb
mov
xor
imul
nop
push
jp
jmp
xor
inc
mov
mov
mov
sub
enter
xchg
gs
sub
mov
das
pop
addr16
cmp
xchg
inc
mov
or
shlb
fwait
mov
loope
or
mov
adc
sub
ret
fsubl
mov
mov
in
aam
cld
lock
and
ljmp
mov
mov
fldt
lahf
sub
sub
jecxz
pop
sub
and
leave
cld
jecxz
clc
mov
cmc
aam
shrl
cmp
jp
xlat
xchg
lea
sbbb
mov
sub
js
sub
adc
inc
es
and
add
movl
cmpsl
mov
ljmp
ds
xor
dec
dec
js
clc
hlt
cltd
add
mov
fldl
mov
gs
inc
je
or
mov
push
fmuls
mov
rorw
call
adc
jnp
and
sub
push
xchg
xor
les
data16
stos
iret
cmp
in
cmp
subl
mov
in
data16
mov
lahf
jle
xchg
lea
fstpt
jne
stc
ss
shlb
cli
into
push
pop
gs
test
and
out
cmp
mov
push
test
jo
aam
or
push
push
push
xchg
add
inc
lods
cli
out
push
mov
enter
lcall
cmp
outsl
test
jge
daa
movsb
mov
in
add
ja
sub
incl
loopne
xchg
add
mov
sub
out
insb
jb
and
out
mov
xorl
mov
push
jecxz
out
korb
sbb
push
cli
xchg
add
mov
sub
out
jnp
imul
sbb
bound
push
cli
pop
sbb
mov
inc
xor
adc
dec
add
pop
mov
adc
stc
inc
out
das
aas
mov
sar
add
daa
nop
clc
xlat
push
push
or
push
insb
and
adc
dec
sbb
adc
test
push
es
push
pop
test
add
mov
or
in
pause
aas
mov
dec
sbb
jge
jne
call
pop
rcrl
push
push
adc
adc
or
bound
ja
stos
inc
insb
mov
mov
inc
or
pop
sub
aad
sub
mov
cmp
stc
push
das
pop
mov
and
cmpl
test
or
test
dec
movb
gs
push
sti
cwtl
mov
adc
sub
adc
mov
fabs
pop
in
adc
test
rcll
sbb
sbb
mov
cmp
lds
jge
iret
sub
xchg
sbb
mov
push
lahf
jecxz
push
js
rcll
das
push
inc
shr
or
mov
mov
jecxz
cmc
sbb
pop
roll
adc
leave
sub
jle
jb
pop
mov
fidivrl
mov
cmp
push
cld
loopne
mov
fucomi
mov
and
js
pop
or
sbb
or
pop
jmp
adc
pop
adc
mov
mov
cmc
imul
lahf
xchg
mov
test
loop
jge
lahf
push
stos
imul
and
add
rorl
loop
nop
dec
pop
push
ljmp
mov
test
jnp
mov
pushf
cmpsl
dec
shlb
ljmp
mov
dec
nop
mov
and
adc
mov
pushw
adc
adc
xchg
sub
mov
inc
cmp
addr16
push
adc
mov
mov
sub
xchg
dec
repz
cs
sbb
mov
dec
sub
jmp
mov
mov
add
or
subl
in
or
fnstsw
out
cltd
lcall
cli
lods
enter
addr16
push
xor
push
cmp
and
int
fbstp
ja
jl
imul
adc
js
jp
aad
aad
push
in
repnz
shlb
in
inc
sub
xchg
or
in
mov
xchg
xlat
xchg
push
dec
das
add
adc
popf
fldt
xor
imul
mov
lods
jae
and
adc
mov
icebp
sub
out
mov
and
jecxz
adc
pop
test
shr
mov
cmp
xor
aas
jg
in
mov
js
xchg
jl
dec
pushf
lds
xchg
popa
ja
mov
aam
mov
mov
scas
cmp
sbb
ja
or
fcomi
frstor
ds
out
dec
mov
adc
adc
fsubrs
pusha
cmpsl
cltd
xor
test
xor
imull
sub
adc
into
and
adc
popa
ds
notb
pop
jg
cmp
push
xor
mov
jns
pop
inc
xor
mov
mov
sbbb
pop
sbb
call
int
xchg
stos
mov
and
cmpsb
ficomps
inc
aaa
pop
daa
push
mov
jmp
rclb
and
scas
insb
enter
mov
cmp
fsub
sub
movsb
lea
icebp
loop
dec
sbb
outsl
aaa
lcall
in
jge
lds
ficompl
push
mov
xor
cvttps2pi
inc
icebp
rcrb
mov
mov
lods
or
push
jbe
mov
add
aad
mov
cmp
pop
lods
mov
punpckhwd
or
mov
or
push
push
jnp
dec
orb
pop
inc
in
dec
pushf
xlat
adc
xlat
gs
inc
xchg
adc
imul
aam
std
or
pop
out
out
push
adc
test
lret
cmc
call
xchg
popa
mov
cmc
jnp
rcll
jno
outsl
lods
xchg
in
fldcw
filds
push
cld
das
sbb
dec
sub
push
mov
cmp
stos
ficompl
andl
adc
or
jne
pop
xor
push
add
adc
syscall
mov
inc
push
mov
inc
mov
roll
nop
jne
xchg
pop
aaa
push
or
scas
subb
cmp
pop
loopne
mov
pushf
insl
mov
stos
xor
test
xchg
or
pop
ljmp
mov
lcall
out
sbb
arpl
bound
dec
sarl
test
or
test
xor
int
test
lock
mov
jb
fdivs
mov
sti
or
int
or
jl
test
lods
daa
stos
aad
insl
movsb
cli
outsb
pop
iret
sbb
fdivr
pop
dec
and
mov
or
and
dec
test
movsb
xchg
lcall
inc
mov
pop
cmp
xchg
pop
repnz
xor
add
inc
gs
push
movsl
pop
jo
xor
xchg
pop
cmp
pop
sbb
push
lds
cltd
loopne
mov
loopne
lahf
cwtl
ret
xlat
fstl
cmp
inc
dec
sub
insb
popa
and
out
out
adc
push
and
aam
leave
cmp
and
xchg
push
roll
mov
inc
imul
mov
and
lret
inc
mov
je
jle
and
andl
or
cmp
clc
cmp
outsl
scas
pushf
xor
adc
rorb
movsl
mov
push
jle
adc
mov
pop
aam
push
jb
pop
inc
leave
push
mov
push
outsb
sbbb
lcall
fisttpl
cmc
jge
add
imul
mov
inc
pop
rcrl
cs
sti
xor
and
mov
lock
adc
movsb
push
out
sub
mov
call
fs
pop
cmpsl
push
dec
push
scas
xchg
cmp
push
push
jne
mov
ret
pop
mov
fs
sub
jge
in
test
sub
mov
push
out
cld
test
outsl
xchg
aaa
sub
jb
gs
idivb
or
jo
orl
clc
bound
adc
pop
stos
and
and
sbb
xchg
leave
mov
and
sti
cmpsb
scas
mov
push
int
aas
add
mov
mov
pusha
into
and
adc
sub
inc
jb
mov
idivl
dec
push
arpl
add
test
std
jbe
push
fstps
out
dec
mov
sub
into
fiadds
mov
xor
push
xchg
push
xchg
insb
inc
pusha
jge
dec
data16
sub
and
add
push
dec
movsb
icebp
lahf
popa
sbb
and
imul
cmpb
rclb
push
in
xchg
leave
jecxz
sbb
push
add
mov
mul
jecxz
iret
mov
jge
scas
stos
add
mov
or
or
mov
ds
cmpsl
jecxz
pop
in
mov
loopne
pop
pop
shll
mov
xchg
push
cli
outsl
cmp
ss
movsb
cmp
in
in
inc
cmp
and
sub
jmp
ja
stos
push
into
lahf
pushf
push
into
jg
rcrl
pop
out
cld
fidivrl
jno
dec
add
mov
js
cmc
and
adc
out
pushf
sub
mov
mov
xor
idiv
and
repz
xchg
int
cmp
or
cmpsb
add
cmpsl
xchg
movsb
pop
cmp
mov
mov
test
sbb
mov
pop
or
cmp
push
fstp
daa
jno
cmp
mov
popf
and
jno
insl
mov
movsb
ret
out
push
rorb
mov
addr16
or
xchg
lock
xor
inc
push
mov
ja
hlt
adc
xchg
mov
add
push
fcmovnb
lea
jns
sub
in
pop
sbb
mov
cmp
mov
pop
adc
shl
pcmpgtd
mov
gs
mov
popa
mov
in
sbb
sub
xor
jne
push
insl
movsb
dec
pop
dec
iret
push
jae
fs
cli
repnz
mov
inc
sahf
fucomi
inc
pushf
inc
out
adc
nop
xor
pop
adc
test
decb
enter
dec
clc
cli
and
js
xor
xchg
bound
cmp
pop
jg
pop
xchg
jnp
sub
and
lcall
dec
fisubs
xchg
aas
mov
xorb
shll
out
lcall
sbb
xchg
test
fidivl
lahf
pop
hlt
xchg
mov
mov
mov
lcall
push
push
push
pop
sbb
pop
aas
repnz
fldenv
insb
and
mov
push
push
loopne
aad
xor
stos
sahf
lds
adc
fidivl
push
aad
jo
imul
jg
call
pop
inc
ret
xchg
xor
nop
cmp
inc
xchg
xchg
cmp
xor
arpl
jmp
jle
imul
imul
inc
cltd
xor
testb
cmp
cmp
add
addr16
pushf
ljmp
inc
fs
aas
mov
inc
ss
jno
movsl
pop
js
cmp
add
mov
int3
cmp
pop
inc
aaa
out
xchg
mov
or
dec
ss
std
sbb
icebp
rorb
in
sub
xor
ja
adc
mov
iret
ja
arpl
es
es
hlt
pop
ficoml
mov
pop
jb
cltd
pop
dec
les
adc
test
aad
sbb
jge
in
repnz
pop
mov
leave
popf
jmp
mov
inc
iret
ja
lret
movsl
insl
push
xchg
stc
cwtl
test
jge
imulb
and
mov
or
push
mov
pavgb
jae
dec
movsl
adc
push
lahf
and
cld
negl
ljmp
loopne
mov
aaa
mov
xlat
jns
shlb
aam
pop
int
out
fwait
cmp
aam
test
rcll
jg
push
sahf
xchg
clc
pop
mov
mov
add
roll
loopne
sar
sbb
cmpsb
test
dec
cmp
dec
stos
inc
or
sub
xor
leave
in
mov
adc
xchg
pop
inc
mov
sahf
jl
jo
xor
pop
add
or
pop
lcall
inc
fstl
cmp
xchg
pop
mov
mov
sbb
mov
mov
xchg
into
in
xor
dec
or
mov
test
mov
cs
add
movsl
mov
fstps
bound
mov
iret
sub
jp
or
push
cmp
mov
inc
stos
jne
and
jnp
mov
cmp
sub
ja
stc
mov
push
ja
xor
pusha
es
or
push
sub
xor
jle
or
out
mov
cmpxchg
sub
lock
cmpsb
jge
stos
fs
stos
decb
push
loope
daa
fsubr
outsb
mov
sbb
mov
stc
jle
xor
test
cltd
cli
push
or
loopne
lds
or
movsl
mov
aas
inc
mov
add
dec
outsl
mov
popa
out
mov
imulb
je
jb
insb
pusha
cs
or
aaa
fstpl
test
dec
scas
stos
repnz
in
jns
jbe
mov
jae,pn
adc
sbb
mov
xchg
add
xchg
and
test
std
ficoms
pop
in
dec
push
je
adc
dec
push
in
int
js
inc
inc
mov
pop
jp
orl
das
xchg
jnp
or
rorb
xchg
pop
xchg
sbb
sbb
hlt
push
jae
sub
adc
push
sub
adc
stos
or
imul
cmp
imul
enter
dec
imul
rcrb
mov
cld
dec
cmp
pop
out
add
popa
jmp
loop
jmp
cmpsl
inc
scas
ret
aad
cmp
clc
or
stc
rorl
pop
fsubs
cmp
aaa
inc
into
inc
ja
fbstp
pop
adc
rol
ljmp
fdivl
sub
fmulp
inc
fnsave
pop
inc
dec
cmc
popf
pop
int3
outsb
aas
mov
into
repnz
or
jb
push
mov
sbb
outsb
push
jno
les
and
scas
or
xor
or
add
enter
aas
rcll
les
push
daa
add
xchg
push
xlat
push
sub
jmp
inc
scas
jno
lret
push
sbb
sbb
mov
or
pusha
jae
jo
and
dec
cmp
fs
stos
xchg
scas
mov
mov
pop
call
test
stos
xor
hlt
mov
mov
dec
xchg
sub
push
mov
scas
push
mov
in
push
les
pop
pushaw
stos
jnp
add
sbb
jge
popf
mov
ficoms
mov
add
xorl
cli
push
sahf
fdiv
cld
inc
mov
int
jno
or
sub
and
je
sbb
clc
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
dec
sub
rorb
out
ret
sbb
mov
lods
pushl
adc
and
daa
insl
das
insb
and
adc
push
inc
out
jns
or
cmp
dec
mov
inc
pop
insb
push
or
addr16
push
xor
aas
mov
inc
adc
loopne
ret
xchg
or
int3
jne
inc
rcll
mov
mul
in
and
jnp
xor
mov
aam
pop
adc
in
adc
jecxz
iret
outsl
in
popa
stos
or
mov
imul
rcrb
jecxz
xchg
dec
mov
cmp
out
inc
adc
jl
cld
lahf
mov
adc
sbb
push
mov
mov
sbb
mov
mov
ss
add
imul
xchg
cltd
test
push
xor
or
dec
jmp
mov
movsb
popf
mov
lds
mov
sbb
gs
add
movsl
or
inc
ret
std
test
cmp
mov
pop
enter
movlps
pop
pop
jmp
mov
xor
pushf
inc
enter
mov
xor
push
inc
push
movsl
sub
dec
mov
daa
in
addr16
js
xchg
pop
mov
ret
sbb
pop
mov
xchg
cmp
add
mov
ds
jle
mov
cmpsl
jmp
mov
aaa
pop
lds
aam
push
ds
shrb
pop
test
sub
hlt
int
addr16
sub
loop
fs
icebp
add
out
jmp
sbb
dec
addb
pop
divl
xchg
push
cmc
and
mov
sbb
pop
pop
adc
adc
or
mov
mov
fistl
lcall
in
cwtl
sub
mov
adc
fs
in
lods
sbb
rorl
scas
dec
lods
aad
out
repz
and
and
sub
cmpsb
flds
js
dec
sub
cmp
xor
and
fmul
inc
fcoml
sarb
cmpsb
mov
stos
stos
jge
push
cli
int3
sub
inc
mov
push
push
cli
rolb
enter
mov
in
dec
mov
jmp
out
and
sbb
xor
pop
cmp
hlt
insl
add
dec
lods
mov
fidivrs
jle
xchg
adc
in
push
xchg
lahf
fcmove
mov
adc
cwtl
cmp
mov
bound
cld
mov
stos
out
popf
data16
and
jns
movb
inc
fs
add
mov
into
clc
bt
xor
adc
imul
inc
cmpsb
pusha
stc
mov
or
dec
push
test
mov
imul
adc
jns
sti
dec
clc
mov
loope
jecxz
inc
mov
sbb
sub
out
xorl
int3
add
stc
out
adc
loopne
mov
popf
xorl
jno
sbb
loopne
or
aam
pop
mov
mov
xlat
fildll
adc
testl
push
ss
and
pop
mov
and
xchg
lods
mov
and
hlt
fs
in
sbb
sub
fidivrl
fiaddl
jmp
pop
xchg
jl
ja
adc
jle
jns
pop
repnz
mov
and
aaa
sub
cmp
insl
mov
adc
push
mov
leave
lahf
inc
mov
xor
fiaddl
xor
add
pushf
inc
outsb
add
cmp
adc
and
sub
cmp
pop
arpl
sub
cmp
or
xchg
aam
fbstp
test
or
sub
imul
in
inc
clc
out
pop
gs
jns
addr16
mov
dec
adc
daa
mov
test
hlt
xchg
out
dec
popa
in
xchg
stc
scas
xor
mov
arpl
outsl
jo
imul
orb
das
adc
arpl
mov
fwait
jb
sar
and
jb
sub
or
cltd
daa
xor
dec
call
shll
mov
mov
mov
cld
push
cmp
arpl
adc
mov
cltd
push
out
push
sbb
mov
xorl
dec
fidivrs
test
mov
push
sub
test
sbb
inc
ret
pop
mov
xchg
daa
add
pop
pop
stc
jbe
shrl
jnp
mov
enter
out
lcall
sub
testl
jecxz
pop
adc
jb
add
inc
mov
aas
cmp
mov
fiadds
fstpt
fwait
xlat
or
sbb
push
mov
imul
xor
clc
aad
out
inc
xchg
adc
inc
pushf
inc
mov
test
pop
loop
shlb
repz
sbb
dec
jecxz
sub
jbe
pop
add
and
sarb
sub
mov
inc
imul
jmp
iret
push
sbb
into
mov
xchg
jns
pop
cmp
mov
xchg
mov
mov
mov
call
stos
aas
movsl
aam
push
or
mov
mov
adc
and
decl
push
popf
xorb
jne
dec
bound
cmp
cld
xchg
out
cmp
pop
add
jmp
xlat
cwtl
stos
push
cli
loop
fs
push
fnstenv
lds
jecxz
ret
loop
ss
sti
dec
jnp
push
stos
fsts
arpl
shld
ds
add
push
aaa
movsb
pop
mov
leave
fcoms
inc
shlb
dec
jne
pop
jae
push
add
xor
imul
xor
sub
outsb
mov
push
cmp
sbb
sarl
popa
dec
call
sbb
lea
cmpsb
sahf
mov
add
or
shlb
xchg
jl
mov
mov
dec
xchg
das
mov
xorb
rcl
sbb
aam
fndisi(8087
jl
and
mov
imul
scas
das
jg
lea
jg
mov
mov
jbe
js
mov
faddp
bound
orb
fsts
jle
sub
mov
dec
shlb
or
clc
or
cld
mov
int3
mov
sbb
xchg
xor
jle
pushf
sbb
in
pop
or
testb
les
jns
jmp
xchg
loopne
movl
sub
mov
xor
mov
callw
out
mov
xor
fidivs
arpl
lahf
adc
sub
xchg
pop
mov
mov
xchg
xchg
rorl
out
push
aad
insl
push
push
cmpsb
pop
enter
xor
push
inc
mov
loope
imul
mov
scas
insl
and
leave
mov
push
pop
jecxz
std
pushl
popf
pop
inc
cmp
jl
cmc
adc
jecxz
out
in
inc
mov
movsb
cmc
jns
mov
add
pusha
js
push
movsb
in
cwtl
ss
into
adc
ljmp
roll
or
ss
add
leave
pop
bound
jmp
lret
xchg
rolb
ljmp
movsl
jo,pn
movsl
xchg
out
ljmp
sub
pop
into
sub
dec
xchg
les
add
int3
popf
or
mov
icebp
and
in
xchg
gs
mov
movsb
fistpl
add
fwait
or
dec
xchg
pushf
xrelease
jae
cmp
xchg
shl
cmp
add
imul
xorw
cmp
push
jae
imul
repz
pop
inc
fstpl
mov
inc
bound
lods
push
rol
scas
push
dec
pop
ss
sarw
cs
repnz
pop
bnd
xor
out
or
ja
pop
mov
shr
mov
shrb
loope
sarl
push
rclb
sub
xchg
cld
test
sbbb
cld
popf
lcall
jae
imul
pop
lgs
or
hlt
and
sbb
fs
inc
cmpsl
data16
dec
mov
jno
shrb
or
cmpb
icebp
iret
es
out
divb
sbb
pop
and
test
jmp
ljmp
mov
pusha
daa
add
int
inc
aaa
xlat
xor
jbe
jmp
sbb
adc
jnp
out
jne
push
mov
and
dec
jge
push
out
jl
inc
adc
xchg
ret
pop
mov
fdivrl
iret
adc
xor
lea
adc
pop
sub
into
ficompl
xchg
xor
inc
dec
mov
xchg
mov
imul
dec
or
xchg
jne
mov
in
pop
inc
mov
rcrl
pushf
test
mov
das
xchg
adc
push
pushf
xor
mov
cltd
ljmp
mov
lds
orl
dec
and
daa
push
dec
and
jmp
pop
es
stos
in
int
ficoml
dec
pop
js
jne
mov
loop
imul
lods
or
cmp
push
xchg
add
pop
sbb
into
lret
dec
addr16
xor
dec
fidivl
imul
dec
hlt
hlt
icebp
test
jl
xchg
cld
movsb
push
sahf
mov
shrb
aaa
jnp
inc
lods
fistps
sub
xor
xchg
or
adc
add
ljmp
cmp
cwtl
stos
lea
adc
cmp
jmp
xchg
cmpsl
xchg
adc
nop
repnz
arpl
ljmp
cmp
xchg
stos
ror
and
mov
lcall
sar
pushf
sbb
fstpl
xor
es
mov
cmp
mov
pop
jne
fsts
ret
jno
or
xchg
dec
pop
pop
xchg
push
cwtl
imul
rcrb
je
xchg
lahf
pop
jmp
mov
shlb
pusha
int3
xchg
inc
adcl
sub
es
mov
pop
mov
lock
or
push
or
sub
adc
enter
xor
push
stos
rorl
lds
test
sarl
out
in
lcall
fadd
lods
xchg
gs
mov
les
xor
push
pusha
fidivrl
lahf
rorb
sub
mov
rol
add
push
add
jmp
add
jno
mov
scas
aaa
adcl
out
cmp
xchg
in
cmp
mov
sbb
aad
repnz
int3
push
sub
mov
fildl
outsl
jno
dec
pop
mov
nop
mov
icebp
pop
ss
dec
pushaw
pushf
cld
xchg
test
xchg
xor
loop
add
push
jle
hlt
loope
xchg
fcmovne
sbb
xlat
pop
mov
dec
mov
push
sub
test
fnclex
and
pop
push
inc
nop
push
pusha
cmp
add
in
dec
hlt
cmpsb
push
adc
cmpsl
jp
jl
mov
pop
add
popf
jae
popa
aaa
add
bound
adc
dec
popfw
ds
int3
pushf
xchg
adc
xchg
loop
cmp
popf
mov
push
in
mov
mov
out
data16
xor
mov
cli
jnp
shlb
pusha
mov
dec
add
fnstenv
das
mul
add
inc
mov
imul
inc
push
push
push
jecxz
imul
add
dec
sub
xchg
in
out
repz
loop
das
sub
adc
cmp
sub
std
and
movsl
movsb
cmc
stc
out
adcb
dec
mov
jg
jmp
or
add
aas
push
divb
xchg
fdecstp
out
lea
cltd
fstp
cmp
cld
jle
imul
and
pop
xor
mov
sti
pop
add
in
sbb
mov
mov
push
dec
xchg
mov
and
and
or
dec
int3
lcall
mov
push
test
leave
mov
add
in
movsb
fistl
cmp
and
popf
jecxz
adc
xchg
sub
inc
call
jle
or
mov
nop
xor
out
cmp
imul
and
cwtl
rcll
ja
pop
add
cmpsb
xchg
into
mov
pop
data16
or
cmp
test
je
mov
mov
lds
fcmovbe
dec
pushf
test
pop
orb
xchg
push
imul
xchg
mov
sub
loope
dec
mov
movsl
loopne
jle
mov
jle
repnz
mov
cmp
push
sbb
hlt
mov
inc
push
stos
xchg
jp
add
lea
sahf
out
mov
push
xor
jle
pop
inc
cmpsb
outsb
popa
insl
loope
shl
stc
sbb
test
data16
sub
xlat
adc
or
addr16
cmpsb
int3
je
dec
sbb
popf
sbb
inc
and
pushf
stos
cmc
xor
jmp
push
cmpsb
pop
push
cs
pop
push
cmp
ret
icebp
add
ret
repz
xor
jno
xchg
cld
lret
push
adc
xchg
ss
push
pop
stos
sub
xchg
ret
fnstsw
pop
push
hlt
stos
dec
das
out
pusha
call
out
pusha
je
icebp
or
in
mov
ljmp
fmul
sbb
ds
adc
loopne
xchg
mov
mov
cmp
call
xchg
xchg
jecxz
popf
aas
or
xor
stos
bound
jne
lods
hlt
jno
jle
pusha
mov
les
pop
mov
inc
pushf
lahf
inc
pop
add
gs
mov
pop
jbe
push
daa
adcb
jns
adc
ficompl
ljmp
push
xor
inc
inc
clc
addr16
outsl
fisttpll
insl
in
pmaddwd
div
cmp
std
push
dec
cltd
and
movsl
fcoml
or
imul
adc
add
pandn
jge
pop
out
mov
xor
jecxz
pop
mov
out
dec
sbb
jbe
in
cli
stc
rol
lods
outsb
xchg
cmp
sbb
popa
test
fidivs
add
sub
pop
or
nop
mov
inc
mov
bound
and
mov
jg
cvttps2pi
jge
ds
jae
xor
scas
jno
into
push
xchg
test
lcall
push
xlat
adc
dec
cmp
je
ds
faddl
fisttpll
or
jae
pop
cmc
enter
mov
mov
add
mov
and
sub
loope
pop
xor
icebp
xchg
adc
mov
jecxz
loope
stc
xchg
push
or
test
jb
dec
push
popf
mov
xchg
ret
and
add
ds
and
repz
xlat
neg
mov
or
inc
int3
push
pop
sub
mov
rcll
lret
mov
dec
and
addr16
jnp
addr16
and
nop
loopne
mov
out
montmul
cmpsb
add
cmp
pop
scas
sbb
dec
mov
aad
in
call
jle
insb
mov
loop
adc
or
test
sub
sahf
xchg
es
lcall
mov
call
lret
outsb
dec
dec
mov
dec
cs
xor
pop
roll
ror
outsb
and
lahf
pop
insb
xor
jle
and
pop
sub
cmpsb
xchg
mov
leave
stc
dec
jp
gs
orb
call
xchg
pop
sbb
fs
add
loopne
mov
cltd
and
mov
loopw
lods
mov
call
call
int
cmpsl
roll
jecxz
mov
movsl
jbe
lods
cmp
lea
lcall
mov
jl
ret
imul
jge
mov
adc
stc
mov
jo
incb
xlat
sub
sahf
lcall
mov
cmp
push
jmp
push
push
and
inc
pop
pop
mov
jecxz
adc
dec
fidivrl
and
mov
push
repnz
xor
cmp
mov
and
push
cmpsb
sub
test
add
loop
push
mov
sub
test
gs
into
aas
lahf
cmp
mov
or
xor
mov
enter
and
mov
sarl
test
lret
sub
xchg
daa
or
cmp
fnstenv
nop
ja
jbe
cmp
pop
testb
test
movsb
add
pop
inc
jl
mov
rcll
or
mov
mov
dec
out
lods
out
testb
add
sbb
dec
jmp
xchg
sbb
ret
fwait
or
adc
and
push
xor
xor
add
testb
and
bound
xorb
pop
jp
adc
jecxz
pop
and
mov
enter
push
cli
pushl
addr16
cmc
cld
mov
pushf
rcl
rorl
jns
jle
xchg
mov
out
popf
dec
insb
mov
ds
enter
dec
movsb
xchg
sahf
dec
hlt
in
adc
and
pusha
dec
aaa
xor
cmp
dec
pushf
sub
xchg
mov
pop
icebp
adc
cmp
mov
push
cmp
sbb
lds
dec
xchg
lods
hlt
mov
out
mov
jno
les
mov
jo
or
hlt
push
adc
push
xor
mov
adc
xchg
rorb
sbb
dec
pushf
test
xor
aad
pop
or
push
mov
push
xor
xor
sbb
sti
aas
incl
shrb
pushf
xchg
sahf
and
xor
mov
pop
jecxz
in
iret
fstps
jmp
out
sub
in
test
add
ficompl
bound
fcomip
mov
adc
incl
inc
test
push
push
dec
aas
mov
or
lea
shrb
jae
mov
imul
sti
ss
lcall
and
sub
insb
jg
mov
ret
mov
adcl
jmp
push
pop
or
inc
aam
sbb
inc
inc
cmpsb
sbb
cmpsl
push
push
mov
mov
test
pop
sarb
sub
pop
xchg
mov
cwtl
mov
jl
dec
adc
leave
je,pt
lock
mov
out
rorb
test
mov
sub
lods
shlb
mov
or
hlt
lcall
arpl
das
into
push
push
cmc
sbb
mov
insb
sbb
xor
pop
inc
adc
sbb
lods
out
add
sahf
push
pop
ss
es
mov
je
push
rolb
stos
into
cli
mov
aaa
mov
xchg
popa
decb
mov
rol
jne
shrl
or
xchg
dec
mov
imul
push
push
fs
gs
cltd
and
adc
test
out
dec
insl
dec
dec
stos
xor
gs
jmp
jge
push
andl
inc
test
and
xorb
std
lods
mov
xchg
or
in
imul
movsl
out
scas
add
std
scas
jle
aas
fisubl
jbe
jp
pop
pop
and
inc
lods
or
mov
push
cmpsb
mov
push
xor
xchg
sar
aad
rorl
mov
inc
ljmp
arpl
xor
mov
ja
jle
dec
dec
rcll
pop
outsb
repnz
mov
lret
sti
sti
fsubrp
es
imul
arpl
roll
sbb
cltd
push
inc
aas
xorb
jg
fidivl
vmread
or
jae
mov
jl
lcall
add
mov
test
mov
mov
daa
nop
pop
pop
repnz
inc
dec
fdiv
adc
and
or
push
ljmp
popa
stos
rolb
or
xor
xchg
pop
test
ret
in
sub
into
es
scas
xor
cmpsl
push
lds
xor
imulb
xor
sub
ljmp
decl
pop
mov
or
xor
es
sub
insl
lods
cmp
mov
arpl
loop
mov
sub
add
lock
fsubs
imulb
shl
cmp
add
in
cltd
ljmp
xor
ds
xchg
movsl
jg
inc
popa
lock
xchg
std
popl
jbe
std
stc
ja
mov
je
into
or
push
mov
out
pop
push
xchg
out
and
add
test
cli
aas
mov
xchg
pop
mov
fwait
les
pop
mov
rcrl
hlt
push
and
fistps
mov
add
sub
cmp
push
pop
outsl
xor
in
ja
outsl
movsl
shrl
js
cld
ficompl
or
push
das
pop
frstor
insl
jb
push
jns
out
xlat
mov
out
mov
dec
loop
pop
cld
aas
pop
adc
jb
inc
mov
jecxz
xchg
sbb
jnp
and
jecxz
lods
out
faddl
sbb
rorl
dec
adc
mov
int
das
aam
or
jno
mov
sub
shlb
loope
test
jno
inc
daa
pop
cmpsl
test
out
xor
shl
cltd
clc
sbb
sbb
dec
xor
mov
adc
or
loop
add
pop
sar
je
mov
adc
popf
jmp
lret
fcompl
fs
fadds
xor
dec
pop
scas
and
sbb
adc
push
jbe
lock
cmc
jge
push
movsl
imul
insl
push
arpl
inc
xor
scas
fnstcw
fwait
xor
sbb
push
mov
test
xor
xchg
jbe
loopne
into
in
lock
js
push
cmpsb
aam
mov
mov
and
test
jns
adc
or
rcrl
arpl
pop
out
mov
jmp
and
dec
xchg
stos
arpl
stos
scas
dec
push
add
fisubs
sub
mov
xchg
aaa
jnp
cmp
mov
jno
cmpsb
cwtl
push
bnd
pusha
jae
dec
movsl
sbb
aad
mov
sbb
in
mov
inc
rorl
or
loope
aas
jl
cs
xchg
iret
stc
pop
cltd
pop
sarl
cmp
or
xor
xor
std
mov
jns
cvttps2pi
pop
lods
cli
ss
in
dec
sbb
sub
fnstcw
inc
idiv
jno
adc
loop
adc
dec
mov
cwtl
in
leave
mov
mov
pushf
adc
mov
dec
insb
adcb
loopne
cmc
mov
das
lock
cmp
test
cmp
adc
pushl
push
inc
pop
loop
pop
arpl
pop
enter
movw
mov
rclb
and
push
stc
inc
insb
inc
and
dec
and
or
and
push
mov
sub
add
jl
jmp
mov
inc
jp
or
pop
inc
loopne
and
sbb
out
shll
mov
out
xchg
lahf
xor
and
jg
jge
mov
jecxz
xor
lock
xchg
sbb
xor
push
test
popa
cmpsl
sbb
dec
sbb
mov
pop
add
adc
sbb
xor
xor
and
pop
rcrl
repnz
sub
pop
mov
data16
xor
cmp
divb
fwait
jns
cwtl
test
mov
scas
add
xchg
and
mov
mov
jno
add
gs
add
cmp
int
mov
pop
push
pop
xlat
loope
xchg
movsb
push
cmp
mov
sub
les
int3
or
jge
addl
jmp
jae
andl
sarb
cmpsb
xor
js
mov
or
mov
popf
loopne
loope
mov
jle
bound
xor
cmp
cmpsl
jne
mov
mov
push
and
pop
xchg
lock
dec
dec
mov
shll
in
daa
orl
enter
sahf
ret
popf
fidivrs
aam
in
out
nop
sbb
popa
push
dec
out
lret
hlt
or
test
sub
pushf
cmp
decl
es
cmpsb
je
push
fistpll
out
xchg
sub
lds
loop
adc
lret
add
jp
mov
mov
or
lds
sub
ret
cmpsb
dec
inc
push
leave
inc
pop
cltd
js
sub
xor
dec
sarl
arpl
ljmp
dec
or
cmp
icebp
adc
outsb
inc
pop
pusha
cmp
lcall
adc
lret
ret
xchg
jne
push
xorl
adc
fcomp
push
and
pop
js
daa
cmpsl
movsb
aas
xchg
cmp
arpl
adc
mov
pop
and
fadds
in
jae
cmp
mov
aad
mov
fnstcw
cmpsb
xor
idivl
inc
jmp
fisttps
mov
negb
push
sbb
jg
xor
std
jle
movl
pop
or
clc
push
test
sahf
mov
adc
jbe
es
push
jl
arpl
add
icebp
gs
popf
lods
adc
lret
testl
popf
and
test
leave
rorl
movsb
loope
mov
jg
or
dec
jae
faddp
aad
cld
fdivrp
push
xchg
aad
mov
adc
cmp
mov
orl
cmp
add
cmp
daa
ljmp
stos
inc
sub
inc
jecxz
sub
shlb
inc
jnp
xchg
and
mov
movb
ljmp
fisubl
inc
frstor
scas
in
xor
outsb
scas
gs
test
pop
mov
incl
das
sahf
xor
mov
or
je
push
jmp
std
orb
pop
mov
and
fimuls
inc
xchg
mov
push
pusha
call
push
lahf
add
rolb
stc
lret
xor
out
mov
xor
ja
mov
dec
jp
jmp
adc
ret
add
insb
mov
sub
lea
xchg
icebp
push
sti
dec
adc
js
xchg
or
mov
mov
pop
scas
sti
insl
inc
cmp
sbb
int3
pop
cmp
ljmp
or
imul
movb
cmpsl
test
sub
jecxz
mov
xor
mov
outsl
sahf
mov
enter
ror
xor
popa
repz
push
mov
cs
mov
push
cmp
mov
xor
add
push
fisubrl
and
sub
out
fdivrp
and
and
or
pop
cmc
jnp
ret
sbb
repnz
pop
lahf
out
or
movsb
stos
roll
xchg
mov
pop
xor
sbb
mov
dec
mov
mov
sbb
mov
out
lahf
mov
out
sub
cmp
mov
jge
inc
inc
dec
mov
dec
dec
xchg
fcmove
mov
sub
sub
or
sub
dec
call
mov
in
bound
pop
and
pop
sub
sarb
movsb
pop
nop
mov
fcomps
cmp
lret
mov
mov
dec
les
imulb
arpl
dec
cmp
scas
out
inc
test
repnz
xor
lahf
int3
push
out
or
fildll
out
adc
jbe
sub
pop
sub
insl
pop
or
into
add
dec
ss
test
mov
sti
add
sahf
adc
andb
dec
ret
mov
into
push
gs
adc
fiaddl
fnstcw
stc
enter
pop
push
dec
arpl
and
pop
fists
mov
outsl
int
dec
push
test
es
sub
jne
aaa
xchg
test
test
jbe
bound
xlat
rorl
into
mov
out
dec
addr16
scas
popa
fcompl
pop
out
jbe
ja
pop
sbb
lcall
jl
in
sbb
add
sub
mov
pop
lcall
add
movsb
cs
mov
pop
lcall
push
mov
fiaddl
rolb
jno
mov
and
loopne
jle
inc
cmp
aaa
or
cmc
xor
xor
inc
insl
int3
push
cmp
inc
mov
push
scas
add
dec
push
outsb
sub
test
hlt
les
or
jmp
pop
pop
lret
nop
jae
or
bound
ret
add
pusha
jae
cld
ds
dec
dec
sub
dec
adc
nop
dec
mov
insl
pop
xchg
jecxz
mov
jl
mov
int
pusha
test
rolb
out
inc
pop
ja
inc
xlat
fs
les
and
je
clc
cmc
cwtl
xchg
ret
enter
and
adc
test
fnsave
push
pop
stos
outsl
mov
shl
mov
or
add
rclb
bound
shlb
mov
addr16
push
in
int
pop
jecxz
and
xchg
inc
out
nop
jp
icebp
sub
cmpxchg
arpl
and
push
popa
pop
dec
lds
iret
pop
imul
test
ret
ret
repnz
adc
fdivrs
decl
dec
aad
lods
push
roll
bnd
xchg
stos
aad
test
adc
mov
mov
jmp
mov
outsb
cmc
andb
push
mov
dec
sahf
je
xlat
xchg
jmp
mov
xor
scas
cltd
inc
test
cmp
add
mov
orb
inc
add
pop
lcall
aas
sub
movsb
int
pusha
or
mov
cli
adc
mov
inc
dec
xor
push
popf
lds
or
mov
adc
or
aaa
pop
jns
xchg
icebp
ficoml
pop
xlat
push
imul
add
add
pop
mov
push
sbbb
sub
dec
loop
fs
scas
push
xor
out
inc
sbb
add
hlt
insb
pop
add
popa
je
stos
and
cmp
add
fs
and
ljmp
fbstp
mov
fcmovnbe
add
xor
mov
outsl
mov
aas
jae
cmp
test
enter
sbb
ds
jmp
or
cmpsb
addb
sub
or
adc
shll
xor
les
das
mov
bound
sub
imul
addl
pop
mov
xchg
outsl
adc
mov
xor
mov
data16
mov
js
pop
icebp
push
inc
mov
adc
je
xor
ffree
out
pop
sbb
ja
fsub
mov
loope
cs
or
xchg
inc
jbe
lods
or
stos
inc
daa
pop
sub
pop
xor
imul
xor
bound
xor
jne
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
das
inc
stos
jecxz
lret
sti
pop
jp
push
jno
mov
jo
xchg
sbb
sahf
in
in
je
data16
mov
ds
stos
int3
and
add
in
mov
sti
push
cltd
sub
and
sbbb
enter
dec
jo
sbb
xchg
lcall
ja
sbb
test
xor
icebp
int
ja
ds
push
loopne
aaa
sbb
enter
lods
pop
mov
imul
testb
in
pusha
pop
lahf
push
sub
sub
mov
in
popa
xchg
iret
aam
faddp
mov
mov
ret
dec
mov
sub
sbb
adc
lahf
lcall
xchg
aaa
sub
xchg
stos
sti
mov
mov
popf
loopne
xchg
leave
in
shlb
ffreep
mov
pop
aaa
insb
cmp
jmp
xchg
call
cmp
repnz
adc
mov
stos
sub
ret
les
push
lahf
xchg
cmp
js
fsubrs
loope
jnp
scas
in
or
lret
mov
popa
arpl
push
sbb
dec
push
push
mov
xchg
dec
ficoml
xchg
inc
imul
push
inc
or
jl
and
xor
popf
pop
mov
add
loope
fwait
popf
aaa
divb
xchg
cmp
jbe
lahf
xor
or
fadd
test
popa
arpl
test
loopne
outsb
divb
idivl
stos
mov
out
push
xchg
imul
stos
sbb
aad
sbb
jo
push
fwait
dec
das
shl
lds
out
inc
insl
add
fisttpl
jl
stc
or
or
pop
mov
jge
sbb
jno
sarb
jle
outsl
ret
lods
and
inc
inc
add
pop
gs
jl
ret
movsl
stos
xchg
lods
dec
into
dec
push
cmp
pop
jno
popa
lea
insb
fiadds
in
pop
jmp
jns,pn
mov
dec
int3
fwait
movddup
sub
xchg
inc
roll
sub
mov
pop
filds
lret
or
adc
fstpl
push
aad
push
int3
fcmovne
imul
mov
jl
jne
loopne
add
sbb
push
lock
inc
inc
ljmp
sbb
and
sahf
add
imul
call
lods
xor
ret
in
mov
sub
lods
daa
jo
sbb
nop
jecxz
repz
inc
clc
repnz
adc
ss
mov
frstor
inc
outsl
call
bound
adc
bound
test
test
sbb
loop
mov
pusha
sub
jae
js
movsb
rorb
inc
dec
scas
and
adc
sub
je
xor
lahf
and
jmp
jmp
lods
ljmp
pop
aam
mov
cltd
daa
xchg
xchg
inc
dec
mov
dec
mov
mov
popa
hlt
dec
push
cmp
inc
and
movsl
enter
scas
bound
sub
lock
push
mov
out
dec
adc
les
movsl
mov
inc
mov
xor
inc
out
pop
pushl
push
cltd
dec
xchg
repnz
lds
and
in
out
lret
jns
dec
cmp
jae
cli
int
stos
inc
or
mov
cli
rcrl
push
jbe
js
inc
dec
mov
mov
lcall
movsb
xchg
iret
jge
mov
jmp
or
push
jne
xchg
mov
cwtl
xlat
jmp
arpl
sarb
sub
or
repnz
cwtl
xchg
sbb
xchg
inc
jb
ficompl
fxch
or
mov
adc
cmpsl
cmp
insb
pop
add
xchg
mov
shll
dec
icebp
push
fildl
cmp
enter
push
or
repnz
add
push
in
xchg
mov
sub
xchg
push
or
lret
inc
pop
dec
inc
dec
sarl
cmp
mov
xor
pop
mov
add
adc
enter
js
sub
movsb
inc
jle
lods
ret
push
sbb
mov
in
lcall
dec
inc
pusha
cmpsb
sub
enter
mov
movsb
shr
push
loop
mov
mov
out
add
adcl
lods
mov
pop
inc
pop
in
es
std
mov
daa
cs
psrld
ret
daa
xor
adc
and
sti
xor
int3
int3
xor
pop
push
sub
jp
ja,pn
lret
push
push
xor
mov
sub
loopne
dec
xchg
jmp
aaa
fldenv
add
and
fildll
dec
xorb
jae
imul
add
pop
jmp
jecxz
loopne
je
int3
mov
inc
movsl
imul
aas
push
push
xchg
int3
je
stc
mov
ja
or
mov
lea
stos
and
outsl
stos
xchg
ss
jecxz
nop
rorl
lock
inc
jns
push
add
out
xlat
das
cmp
xor
ja
pop
fildl
mov
add
or
xlat
shlb
jbe
test
mov
dec
clc
inc
test
mov
pushf
pop
mov
rcll
mov
iret
jno
jb
jne
pop
jne
jecxz
xchg
mov
pop
inc
dec
out
stos
scas
push
add
rolb
pop
sub
in
rcl
add
mov
scas
push
xchg
jecxz
sub
test
ds
cld
aas
lods
fdivl
mov
sbb
push
repz
leave
mov
fistpl
xor
dec
in
daa
push
lret
scas
jg
cmp
imul
dec
mov
call
jbe
mov
mov
jge
pop
and
cmpsb
add
lods
stc
je
ret
pop
pop
dec
movsb
sub
lea
mov
pop
sub
cmp
test
mov
inc
popa
xor
test
cld
sahf
cmp
mov
setp
push
add
inc
mov
and
aaa
sti
xor
pop
and
add
jg
addr16
jbe
comiss
mov
repnz
jne
iret
inc
xchg
lods
sub
cs
jle
pop
lcall
cli
mov
inc
je
xchg
mov
ds
or
cmp
pop
jecxz
mov
pop
stos
aam
popf
imull
arpl
fwait
mov
iret
xor
scas
cmpsb
bnd
mov
shrl
sti
cmp
std
les
mov
xchg
insb
sbb
and
out
cltd
mov
jbe
addl
sub
sbbl
jmp
sub
cmp
insl
xchg
xor
psllw
lret
mov
xor
mov
jno
pop
mov
inc
push
or
js
add
aas
cmp
mov
jg
dec
dec
pop
add
xor
in
dec
adcl
sarb
adc
sub
adc
out
cmp
mov
fistpll
leave
sub
in
xchg
pop
stc
sbb
imul
ss
bndldx
std
adc
shll
std
lea
rcrl
or
jb
dec
das
insl
cltd
mov
jb
sub
add
popf
inc
pop
mov
in
outsb
roll
dec
outsl
and
fldt
filds
inc
push
pop
or
aam
mov
outsl
mov
adc
aaa
test
add
dec
sbb
mov
movsl
sub
in
dec
lret
shlb
clc
lods
inc
mov
mov
test
fs
shlb
mov
push
mov
mov
mov
imul
push
push
dec
mov
into
pop
jne
mov
daa
mov
mov
jne
add
ret
xlat
jl
jnp
pop
scas
out
ret
and
mov
dec
cmpb
adc
int
clc
out
subb
addb
adc
loope
stc
mov
add
scas
test
or
imul
pop
and
insb
fwait
mov
loopne
inc
pop
mov
add
mov
or
add
inc
aad
xchg
sbb
jp
sub
test
pause
xorb
or
fsubrl
adc
sbb
inc
add
out
cli
push
imul
jecxz
jmp
pop
mov
push
rcrl
pop
sahf
jle
faddl
mov
mov
jne
and
cmp
xchg
outsb
push
xchg
add
fstpt
jbe
outsl
mov
jp
push
dec
and
movsl
add
subl
daa
in
dec
test
xlat
push
das
lds
aad
in
test
jle
dec
sbb
movsb
push
push
and
xchg
shr
xor
clc
adc
cmp
inc
add
mov
les
subl
shrb
lods
ljmp
sub
dec
push
cmp
shlb
cmp
mov
test
fistl
insb
inc
mov
sbb
rclb
mov
cmp
sbb
popf
loop
test
fdivl
mov
loop
aas
mov
lea
out
rcrb
add
call
nop
movsb
add
test
ja
in
cs
push
loopne
mov
js
test
cld
mov
cmp
cmp
stos
cltd
lods
test
jnp
mov
dec
int3
jno
push
les
imul
sahf
jecxz
les
clc
cmp
addr16
int
dec
popa
jbe
pop
imul
lret
lret
push
or
mov
popa
in
jmp
aam
cmp
xlat
adc
mov
inc
in
or
fwait
mov
insb
pop
addr16
fwait
insl
ljmp
outsl
repnz
mov
popa
jne
pop
jle
adc
xchg
neg
int3
cmpsl
xor
pop
subb
in
pop
stos
jno
nop
xchg
jmp
or
das
aad
jnp
adc
push
jmp
push
imul
rcll
lret
sbb
mov
push
cmp
inc
mov
lock
mov
sbb
les
insl
divl
loop
mov
sti
inc
bound
insl
pushw
gs
mov
pop
fsubrs
fsubl
dec
outsl
mov
mov
arpl
dec
mov
incb
lret
mov
push
add
push
jo
inc
add
cmp
in
add
loopne
jb
inc
adc
pop
cmpsl
cltd
pusha
fdivs
fisubrl
push
lahf
adc
push
cmpsb
xlat
push
mov
aaa
jge
ja
inc
jno
popa
inc
cmc
lock
sub
in
arpl
xchg
repnz
jle
push
xchg
pop
and
dec
pop
in
and
mov
mov
mov
xchg
sbb
mov
test
mov
stos
pop
jnp
cmp
mov
std
add
lds
in
jno
or
add
mov
pusha
lret
outsl
aam
mov
xlat
dec
adc
xchg
sub
mov
scas
lahf
sub
xchg
inc
and
sbb
aam
ljmp
std
sbb
mov
fmul
and
and
fwait
loop
or
xchg
sub
dec
out
inc
inc
fldl
or
dec
jle
inc
pushf
pop
daa
call
iret
adc
and
stos
xchg
lods
roll
hlt
testl
add
clc
imul
cmp
xchg
add
insb
dec
out
add
inc
cmp
xchg
mov
cld
mov
mov
popl
decl
daa
shll
mov
icebp
ja
test
rolb
lea
jmp
in
mov
jns
ret
imul
clc
xor
sub
les
test
stos
imul
ret
xchg
aam
jge
inc
aaa
pusha
movsl
push
add
push
mov
lret
mov
fs
xor
lret
lret
mov
clc
out
lret
mov
dec
fmul
out
mov
push
cmp
or
dec
xchg
popa
shr
add
cwtl
push
and
mul
xchg
sub
push
mov
cmp
addr16
xlat
daa
xchg
inc
enter
lds
test
or
fldl
fdivrs
jo
lcall
stc
in
or
dec
out
nop
dec
ret
inc
mov
in
push
cwtl
daa
rcrb
fdivl
shll
add
inc
pop
mov
sbb
cmp
xor
cmpsl
cmp
cmc
mov
jns
loopne
popa
pop
mov
jmp
cmp
in
mov
repnz
cmp
popl
pusha
test
inc
push
nop
gs
lcall
bound
sbb
aas
mov
nop
mov
fwait
mov
loop
adc
inc
sbb
call
nop
orl
stos
mov
jge
rorl
dec
adc
movsl
cmpl
cmp
push
mov
sbbl
inc
mov
sub
jns
rclb
call
vorps
call
jecxz
clc
cmp
or
push
lods
and
repnz
shr
pusha
add
or
sub
and
dec
in
lods
xor
add
cmp
push
aaa
dec
subb
dec
push
lret
and
divps
gs
xchg
sbb
lock
scas
int3
pop
pextrw
or
xor
cmc
and
mov
out
rcrb
repz
arpl
pop
add
push
xor
icebp
pop
xchg
je
cmpsl
pop
inc
loopne
and
fwait
push
testb
mov
sbb
out
or
inc
push
loop
mov
cmpl
stc
push
arpl
enter
imul
loopne
cli
jb
fstps
aas
cld
sub
test
cmp
push
mov
iret
sti
pop
xchg
subps
mov
andb
jb
das
jecxz
cmc
xchg
mov
cmpsl
jmp
outsl
ret
insb
sbb
imul
dec
std
sbbl
enter
mov
push
push
inc
lock
cmp
scas
inc
sbb
aam
sub
out
inc
imul
cmpsb
pop
push
inc
in
and
inc
xor
pop
pop
dec
dec
push
dec
fcomp
enter
dec
out
scas
and
cmp
mov
or
sub
lret
xorl
pop
loop
add
fiadds
fwait
imul
outsl
inc
jb
and
lcall
push
es
int3
jle
push
and
clc
cmpsl
pop
iret
inc
add
mov
fmuls
outsb
cmc
mov
cmp
and
pop
cmp
rcr
push
adc
call
mov
loop
je
pop
sbb
fbld
testb
insl
mov
cmovns
jge
pop
jbe
and
cli
mov
icebp
xchg
mov
lods
inc
jnp
adc
jo
dec
mov
test
mov
fwait
pop
sub
mov
insl
mov
ja
iret
inc
jg
adc
sub
ud0
sbb
pop
rclb
and
push
ror
xorb
fwait
stc
xor
popa
nop
cmp
idiv
jp
jbe
lahf
push
fstl
fs
call
xchg
jg
mov
cltd
xor
stos
dec
xchg
inc
xchg
sbb
xchg
shr
lret
or
push
loope
fidivl
lods
ret
xor
add
cmp
pop
lds
jl
jmp
into
cmpsb
mov
adc
pusha
icebp
inc
cmpb
cld
mov
pop
hlt
movsb
sub
mov
jmp
mov
outsb
pop
xor
es
inc
inc
or
adc
cmp
movsl
rol
repnz
dec
fstps
popa
icebp
loope
fistps
and
push
dec
lods
dec
loopne
sub
mov
mov
or
leave
rol
push
scas
push
jle
adc
pop
ljmp
in
push
subb
rcrl
ja
pop
inc
xor
xor
pop
mov
std
scas
daa
mov
ret
outsl
mov
int
push
popa
test
pop
xchg
dec
or
pusha
cmpsl
sti
push
cmpsl
loop
xor
lds
and
push
popf
push
arpl
aam
cmp
pop
push
stos
or
outsl
sti
cmc
push
out
iret
cmp
std
fldenv
sub
fsubrs
lods
jle
mov
sub
cmpsb
pop
aam
fdiv
pop
jae
in
hlt
sub
or
mov
movsl
cmc
std
pcmpeqd
in
mov
xor
inc
or
js
fcompl
sub
std
iret
inc
scas
hlt
out
cmpsl
test
push
sub
jnp
fildll
adc
jns
sbb
outsl
or
pop
or
pusha
mov
xchg
aad
popf
stos
out
inc
popf
inc
int
or
pop
pop
xchg
cmp
pop
hlt
mov
sub
mov
loop
stc
or
flds
aaa
push
mov
aaa
gs
cld
out
test
add
cwtl
inc
push
jmp
xchg
jecxz
mov
lahf
cmpsb
mov
jmp
adc
stos
sbb
insl
inc
adc
inc
inc
es
push
in
push
cwtl
sub
jg
push
xor
outsb
xlat
and
pop
adc
dec
mov
adc
repnz
imul
scas
popf
xlat
mov
dec
pushl
fcmovne
sub
cmp
sub
clc
bound
popa
mov
or
add
or
ret
outsl
jno
pop
gs
inc
mov
pop
aad
popf
mov
add
or
pusha
xor
cwtl
pop
xchg
cmp
test
clc
sti
inc
aaa
xchg
movsl
test
test
adc
or
fs
sbb
xchg
es
shll
jl
stos
test
mov
imul
lahf
ret
in
imul
idivb
jmp
jae
pop
ret
jp
xchg
xor
scas
add
testl
cltd
fidivs
orb
jbe
mov
out
mov
lcall
ret
aad
xchg
jmp
fs
push
pop
or
gs
in
pusha
pop
arpl
rcrl
sub
xor
aas
push
repz
and
jb
mov
sub
ss
lahf
mov
mov
jp
jb
dec
lretw
lock
int
add
arpl
movsb
decb
scas
lahf
add
decb
loop
dec
dec
xchg
push
mov
mov
jge
pop
sub
movsb
cli
sbb
sar
cltd
sahf
bound
shr
cli
dec
adc
mov
dec
xor
inc
xchg
int3
xchg
sbb
or
cmc
mov
in
pop
mov
sbb
aad
out
popf
mov
shll
inc
mov
pop
pushf
jecxz
cmpb
add
cmp
scas
dec
test
lcall
aaa
jns
dec
cmpsb
in
mov
ret
test
xchg
mov
jp
ja
push
ds
and
xchg
xchg
jb
push
adc
jecxz
cmpb
xchg
xchg
mov
pop
mov
push
enter
je
cmpsl
push
adc
insl
cmpsb
rcll
ja
fwait
daa
jmp
frstor
push
les
shll
and
imul
mov
out
mov
int3
lods
stos
lahf
fs
xchg
pop
in
push
test
aam
into
mov
imul
fistl
leave
xchg
add
pusha
mov
jmp
sub
orb
adc
stc
jecxz
mov
repz
in
sub
scas
dec
mov
outsl
rdpmc
lcall
out
mov
dec
pop
shll
sub
andb
ds
xchg
and
or
loop
ret
jg
cmpsl
sbb
pop
add
test
ja
divl
movl
push
ret
jl
push
test
stos
add
sahf
cmp
dec
pushf
jl
sahf
dec
mov
xchg
stc
push
mov
mov
test
cwtl
scas
addr16
pop
inc
and
lods
cmp
mov
jmp
imul
sahf
jb
push
in
sti
xlat
shl
mov
scas
xchg
movsb
jnp
jnp
js
cmp
mov
xchg
call
mov
scas
cwtl
push
sbb
adc
add
lahf
mov
mov
cmpb
mov
xchg
call
cmpsb
stos
or
ja
cmpsl
lret
pushf
fwait
sbb
hlt
xlat
mov
stos
add
add
das
inc
push
lock
loopne
in
pop
xor
cmpsl
adc
jne
scas
adc
cmp
lahf
inc
insl
fildll
or
mov
ret
mov
mov
jle
mov
cmp
mov
pop
push
xchg
dec
mov
cltd
dec
mov
dec
stc
ja
jne
lds
jle
mov
adc
jns
mov
lods
mov
int
cmp
fmuls
pop
std
and
icebp
push
adcl
mov
xchg
sub
ret
js
push
jb
push
sbb
daa
call
test
andb
mov
faddl
dec
xor
hlt
xor
and
inc
test
popa
icebp
rolb
addb
mov
inc
out
psllw
je
lret
mov
jl
jmp
lock
dec
and
xchg
pop
fptan
dec
xchg
out
mov
pop
xor
cld
hlt
sub
cltd
cwtl
pushf
sbb
and
xchg
xchg
out
rolb
fldt
nop
push
shrl
adc
xor
lods
adc
mov
sub
fimull
data16
xchg
ficoms
je
sahf
adc
mov
push
lods
test
fistl
and
xchg
dec
cmp
or
push
pushf
cmp
ljmp
ja
jb
imul
cmp
cmp
push
cmpsb
xchg
shll
add
mov
popaw
aaa
fisubl
test
lret
push
mov
cwtl
das
mov
aaa
pop
or
mov
pop
inc
mov
enter
xor
incl
jns
adc
and
in
inc
das
cmp
mov
jp
and
repnz
je
adc
mov
imul
stos
sbb
out
jae
sub
jle
cmp
cmp
cmp
repz
popa
jnp
out
xchg
lds
aad
adcb
nop
mov
imul
xchg
jmp
dec
mov
in
pop
ret
mov
mov
jne
mov
out
jmp
xor
lods
push
dec
add
jp
lods
add
pop
gs
ret
cmpsl
aaa
int
enter
lahf
arpl
xchg
lret
dec
ja
leave
inc
jbe
aas
sub
movsb
pop
fwait
sti
mov
add
lret
add
out
sbb
xor
loopne
push
shll
scas
pop
push
push
and
pop
imul
call
leave
add
sbb
popa
jno
sti
add
cmp
ljmp
aam
in
cmp
in
out
fnstsw
std
push
jno
in
ss
sbbl
je
push
aad
jbe
jne
clc
cmp
cmpsl
pop
test
rorb
inc
mov
and
xchg
lret
xchg
fbld
xchg
xchg
jmp
orb
xchg
lcall
push
call
push
fidivrs
xchg
adcl
adc
inc
fstp
cmp
mov
dec
adc
jmp
or
jne
jl
push
nop
sbb
lock
mov
mov
gs
hlt
or
xor
lds
mov
mov
xchg
les
bound
je
aam
negb
add
and
popa
fmuls
std
mov
out
pop
jg
outsl
out
add
or
add
xchg
stc
sbbb
add
dec
push
in
adc
popf
jmp
mov
add
enter
add
jmp
lret
inc
dec
and
push
adc
jle
int
jbe
inc
xchg
sarb
sbb
cmp
mov
add
adc
loope
push
pop
and
sbb
add
dec
cltd
mov
sbb
dec
ljmp
dec
xchg
xor
fxch
jmp
icebp
ljmp
lods
mov
push
je
adcb
adc
jae
scas
pop
cwtl
push
and
std
fstpl
inc
push
mov
inc
mov
add
jl
or
jmp
scas
xchg
sarb
adc
cmp
cwtl
jbe
lock
inc
cwtl
adc
pop
js
shlb
xchg
mov
test
jae
mov
inc
out
cmpb
sub
mov
out
fs
ds
pushf
mov
movsl
dec
out
fwait
mov
loope
inc
xor
adc
in
jge
pop
inc
inc
xor
jmp
adc
les
out
jnp
cwtl
adc
sub
push
jmp
dec
jecxz
jecxz
push
lahf
or
aam
push
cmpsb
mov
int3
test
ds
push
sbb
add
ret
insb
mov
push
jmp
push
sbb
xchg
inc
mov
sbb
add
orl
aas
adc
and
jne
xchg
fistps
or
mov
mov
les
test
adcl
sub
inc
scas
inc
in
rorb
pop
dec
stc
jge
push
mov
xor
cmp
mov
jmp
bound
outsl
xchg
mov
sbb
adc
fs
push
stc
je
pop
or
sub
add
lods
add
jnp
dec
inc
jno
test
std
mov
xlat
arpl
cmp
jg
std
sbb
xchg
shrl
cmp
cltd
mov
xchg
outsb
fs
pusha
sub
pushf
popf
jnp
xor
pop
xor
adc
pop
cwtl
mov
or
mov
cmpsb
inc
pop
inc
sbb
sbb
out
cmc
fbld
jg
pop
xor
sbb
enter
aaa
inc
and
test
movsb
mov
scas
xor
orb
in
std
jl
shl
cmpl
jg
lea
cmp
push
jg
in
adc
fdivrs
adc
mov
inc
sub
jbe
loop
xchg
and
insb
inc
push
inc
data16
lahf
add
cmp
int
repnz
jmp
sbb
test
bound
int3
add
mov
loopne
cmp
and
push
jbe
aad
outsb
decb
js
popf
pop
xchg
popf
cmpb
xor
add
decl
shrl
mov
hlt
push
xor
jnp
and
cmpsl
enter
mov
push
das
int
xorl
repnz
hlt
dec
push
mov
rcll
sbb
ds
loopnew
push
jbe
cmpsl
push
inc
fnsetpm(287
sbb
repz
mov
add
inc
rcrb
lods
and
sbb
mov
popa
inc
mov
and
fmull
out
dec
loopne
sti
into
aam
push
cmp
inc
push
pop
xchg
lds
insb
jns
adcb
shl
push
jns
inc
negb
inc
int
add
push
lods
in
mov
mov
inc
int
mov
push
lods
jecxz
or
aaa
lods
arpl
ret
push
and
xchg
inc
jmp
cmc
cli
push
out
loopne
add
and
addr16
jecxz
cmpsl
jp
fistps
fchs
mov
out
ja
aaa
xchg
sub
cs
mov
bound
imull
fildl
adc
pop
rcl
jnp
aas
rorb
cmp
xchg
fwait
imul
movsb
rcrb
lea
int3
mov
aas
mov
popl
jns
pop
fiaddl
mov
out
imul
fwait
push
and
add
xor
int3
mov
into
cmpsb
mov
enterw
jae
dec
fisubs
mov
ss
mov
pop
fadds
inc
sti
dec
mov
xchg
sub
sbb
cmp
xchg
add
sub
popa
add
adc
cmpsl
loopne
ja
and
out
adc
ljmp
adc
movsl
out
xchg
jb
cmp
negb
cmpl
ss
std
fisttpl
mov
cmp
repz
iret
icebp
das
cmp
inc
popa
repnz
sbb
hlt
mov
movsb
adc
xchg
xor
jnp
pop
nop
cmpsb
xchg
adc
out
sub
mov
xchg
mov
pop
imul
cmpsl
push
fmull
into
movsb
jecxz
std
push
push
and
cmpsl
push
sub
push
out
outsb
mov
xchg
in
add
sbb
lahf
push
pop
iret
movsb
aaa
lret
jge
sbb
push
lret
bound
or
fcoml
sarb
xchg
and
jne
repnz
in
mov
or
cmp
mov
inc
push
shrb
inc
insl
xor
inc
cmp
adc
mov
pop
test
ds
and
mov
cmpsb
adc
cld
jb
pop
sub
cmp
xor
fstl
mov
mov
fists
popa
outsl
pop
xchg
xchg
jo
cmp
fcmove
sub
das
inc
xor
and
dec
call
gs
add
dec
std
lock
and
inc
mov
push
call
stos
ficompl
sbb
popf
mov
cmp
dec
mov
es
push
xchg
inc
fdivr
lret
cwtl
mov
jns
mov
repnz
pop
outsb
aam
out
loop
dec
mov
outsl
and
sbb
jge
ljmp
sub
mov
out
add
lret
test
adc
jbe
cmp
adc
add
push
mov
and
xchg
inc
outsb
dec
out
mov
jb
sbb
pushf
fdivrl
or
scas
jmp
sbb
jge
add
or
cmp
jno
add
iret
stos
dec
mov
test
add
add
addb
ret
jno
jne
xchg
sbb
jle
push
fsubrl
and
fmul
cmpsb
int
jmp
and
in
repz
sbb
or
cli
mov
mov
out
push
push
dec
push
mov
dec
lods
std
sbb
add
fwait
lock
add
xchg
mov
nop
outsb
xchg
adc
pop
cmc
aas
pmulhw
clc
fxch
pop
lea
pop
jne
jno
jo
shlb
cmp
pop
push
test
int
imul
call
arpl
pop
or
cmpsb
push
push
pushf
repz
stos
add
cmp
fs
or
xorl
push
sahf
outsb
ficoms
adc
mov
cmp
fstps
sbbl
mov
les
out
inc
cmp
push
jecxz
out
cmpb
xchg
jbe
mov
negb
add
clc
out
sbb
faddl
jb
lahf
fdiv
jmp
out
jle
fbstp
push
jl
outsb
dec
dec
dec
mov
stos
add
sub
add
xor
push
cmp
jb
dec
sar
sub
outsl
in
pushf
shll
lret
scas
in
push
lock
and
imulb
jle
shr
pop
icebp
fistpl
cs
xor
or
adc
fwait
out
mov
dec
xchg
idivl
inc
mov
push
cmpb
sbb
insl
clc
push
out
stos
into
test
dec
testl
mov
dec
pop
hlt
cmp
test
push
loopne
into
push
mov
stc
xchg
arpl
dec
repz
jge
cmc
pop
mov
sti
loopne
jbe
adc
cmpsb
dec
dec
jl
movsl
push
mov
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
cli
movsl
hlt
push
inc
testb
add
mov
das
sbb
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
jle
cmc
or
add
repnz
add
inc
pop
aad
or
js
jmp
scas
or
arpl
inc
add
or
jns
lahf
add
shlb
mov
adc
sbb
mov
cmp
insl
and
data16
or
inc
add
mov
cmpsl
mov
mov
pop
push
into
mov
movsl
dec
cltd
loop
pushl
hlt
mov
jg
rcl
or
jnp
icebp
scas
lock
movb
andl
out
mov
push
sub
subb
stos
repz
outsb
popa
add
jecxz
adc
add
lods
push
xor
pop
push
mov
fmul
ss
push
inc
jb
mov
jae
push
adc
dec
loopne
mulb
inc
ljmp
pusha
sub
pop
ss
stos
and
mov
and
or
mov
and
cwtl
dec
lahf
fwait
push
push
out
adc
clc
sub
mov
nop
int3
sub
in
loope
xor
add
pop
loopne
dec
icebp
je
mov
loop
aad
out
cli
lods
ret
pop
add
and
cmp
sub
fnstenv
pop
or
adc
xchg
dec
or
in
psubsb
ja
adc
insl
scas
and
sub
fistpll
xchg
stc
mov
lret
decb
test
ret
sbb
js
push
push
stos
in
nop
lret
iret
outsb
outsb
mov
push
dec
aam
pop
cld
pop
xchg
mov
or
cmpl
outsb
fisubl
and
cmpsb
cltd
mov
loopne
mov
call
icebp
jbe
stos
and
pop
mov
push
lods
xchg
add
mov
lret
xor
inc
roll
leave
adc
filds
mov
xor
into
test
into
jns
adcl
in
inc
adc
out
dec
pushf
xchg
testb
sub
pop
xchg
stos
insl
sarb
dec
bound
jb
hlt
popf
pop
mov
rcr
inc
xchg
adc
add
outsl
popf
das
mov
mov
jae
cmp
sbb
ljmp
pop
adc
sub
test
repnz
xchg
fcomps
ficoms
pushl
ret
jae
rcr
pop
pop
inc
js
inc
inc
sbb
add
fstpl
xchg
in
jns
in
cld
xchg
pop
leave
enter
shr
stos
xchg
add
pop
xor
xchg
mov
inc
bound
pop
stos
ljmp
add
mov
clc
pop
add
shld
iret
sbb
mov
mov
and
push
mov
adc
inc
inc
mov
test
mov
les
jbe
dec
mov
mov
cs
jecxz
mov
cmpsl
into
out
into
lret
mov
xor
test
cmc
sub
rep
add
push
rol
icebp
sub
jne
push
icebp
std
nop
cmpsb
add
scas
cmpsl
out
ficoml
sub
add
mov
arpl
daa
aaa
je
jl
rol
mov
stc
ret
popf
push
or
mov
std
and
dec
xchg
pop
or
decl
enter
call
inc
mov
movsb
mov
add
out
pop
mov
lods
bound
shrb
jle
flds
or
mov
mov
daa
or
push
pop
pop
jg
and
xchg
les
mov
movsl
cs
sti
aam
and
and
sub
and
push
adcl
add
mov
rcrb
mov
jbe
mov
fldt
cmp
rcll
xor
mov
inc
stos
push
pop
pop
sbb
xchg
test
xlat
xor
lea
sbbb
cltd
xor
ret
js
in
xor
popf
mov
iret
and
sti
or
stc
sbb
and
rcrl
push
jmp
or
mov
int3
inc
jp
popf
out
int3
push
inc
movsl
mov
fidivrs
mov
popf
movb
lods
inc
mov
push
inc
sub
or
es
in
adc
out
ds
adc
push
sbb
into
and
pop
aaa
mov
sbb
ret
pop
or
lret
pop
adc
sub
add
sahf
int
ret
daa
popa
shr
rcrb
cltd
cmpb
mov
ljmp
lret
inc
cmp
cs
adc
or
mov
sbb
mov
andb
rcl
out
movsb
pop
push
ja
es
inc
rol
aam
add
add
add
rclb
pop
lahf
jg
fsubl
flds
add
add
add
or
insb
lret
pop
jecxz
icebp
lock
js
pop
test
test
imull
pop
jecxz
push
stos
sti
pop
jb
notl
and
and
loope
dec
dec
sub
inc
test
xor
mov
dec
out
dec
mov
popa
leave
dec
jecxz
aad
xchg
and
ret
fcomi
les
jne
pop
mov
or
cltd
scas
jle
inc
sti
push
outsb
cli
mov
fwait
or
mov
roll
mov
mov
jl
jg
adc
and
mov
adc
inc
jge
rcr
mov
sarl
xorl
rcrb
xlat
mov
adc
xchg
sbb
scas
addb
lods
outsl
aaa
mov
aaa
ds
inc
jo
xor
add
mov
pop
or
jp
add
push
cmpsl
movups
scas
ret
pop
lret
mov
data16
xchg
push
dec
push
sub
mov
lret
jb
shl
sub
lock
and
pop
ss
pop
ret
enter
xor
push
je
xchg
sbb
sub
dec
cmp
and
adc
out
mov
mov
rorb
lods
out
scas
sub
loope
rcrl
cmpsl
pop
ss
repnz
pop
inc
cmp
out
adc
jge
popa
push
adcb
popa
add
mov
test
pushf
fisttpl
mov
mov
jp
repnz
sbb
add
adc
xor
cmpsl
fsubrs
stos
add
mov
insl
push
inc
adc
pop
jae
mov
mulb
dec
orb
cmp
outsl
repnz
fwait
das
std
mov
test
inc
js
and
dec
pop
jmp
pop
pushf
test
jbe
mov
jae
or
fs
out
mov
sbb
arpl
sub
pop
lcall
dec
or
pop
pushf
sub
or
scas
imul
cmpb
rclb
inc
test
and
loope
outsl
xor
sub
cmp
mov
cwtl
pushf
imul
rorb
mov
aam
cs
insb
inc
aas
enter
jmp
pop
or
inc
mov
lock
fisubrs
mov
lret
mov
incl
mov
sti
fs
gs
xchg
rol
popa
mov
test
aad
out
add
cmpsb
int3
mov
repnz
test
popa
sahf
les
mov
add
test
incb
repz
mov
daa
jmp
and
or
inc
insl
pop
mov
xchg
lcall
cmp
mov
xor
xor
cmp
and
outsb
jmp
std
clc
xor
mov
pop
mov
inc
aad
shrl
test
cmp
dec
cmc
mov
ret
mov
outsl
scas
loopne
and
push
cmp
je
js
push
aas
xchg
add
movl
scas
call
arpl
insb
lahf
pop
popa
pop
xlat
repnz
ret
xchg
cltd
or
mov
and
hlt
icebp
cmpsb
ret
lcall
lret
lcall
sbb
mov
mov
mov
mov
outsb
les
daa
sub
mov
shrb
inc
cld
mov
jmp
adc
pop
bound
adcb
pushf
gs
hlt
pop
dec
mov
or
pop
into
lcall
cmp
dec
inc
std
sub
in
inc
push
pop
cmp
cmp
sub
clc
push
sbb
or
or
mov
sub
sbb
jo
bnd
dec
mov
sbb
ret
insb
insb
cld
in
cld
cli
pop
fs
fstpl
test
ret
mov
int
pop
push
xchg
xor
lcall
pop
xchg
iret
insb
cmp
xor
mov
add
popa
lea
or
lods
pop
sti
and
popf
cmp
ret
cmp
fs
push
rcrb
test
lcall
inc
outsl
stc
subb
mov
push
lods
adc
ds
lahf
mov
fsubrl
loopne
orl
stos
andb
ficompl
adc
xor
pop
cmc
mov
push
add
fwait
jl
xor
les
rcll
mov
test
dec
pop
shrb
les
imul
and
cltd
mov
pop
fcomps
ret
lret
add
add
cmp
cmpsb
jg
mov
jae
jp
addr16
fiadds
add
add
add
fsub
or
fwait
mov
push
dec
jne
pop
movsl
mov
ret
testb
addr16
packsswb
fucomip
mov
fisttpll
or
andb
mov
xchg
in
pop
jmp
push
cmc
lahf
add
add
xchg
jp
inc
push
repz
test
sub
hlt
in
push
mov
jmp
vpshufb
mov
loopne
jno
popf
inc
jp
into
into
outsl
enter
dec
addr16
iret
jp
jae
sti
mov
jl
arpl
leave
sahf
into
aas
aam
test
pop
inc
add
push
jmp
insl
adc
pop
add
pop
cmpsb
mov
push
xchg
mov
icebp
jle
cld
test
mov
mull
jmp
lods
int3
mov
call
push
cmp
cmpsl
adc
psllw
xchg
sarl
ret
xchg
xor
fcoms
sub
adc
add
mov
push
rcrl
push
add
or
loopne
push
hlt
test
mov
test
sub
scas
push
mov
aas
mov
jns
inc
aad
lret
popa
ljmp
in
shl
jl
test
push
jno
mov
std
imul
mov
aas
adc
mov
adc
sub
rcll
out
adc
test
into
xchg
imul
dec
aam
icebp
cmp
test
and
rolb
dec
sbb
sbb
mov
inc
xchg
arpl
int
adc
enter
aad
mov
enter
test
mov
sar
sub
mov
adc
cmp
xor
or
fidivs
push
stos
les
mov
mov
push
fstps
dec
insb
outsl
pop
jno
inc
cli
mov
jb
fwait
scas
add
pop
pop
mov
jne
sub
ret
icebp
fsubl
in
mov
out
mov
sahf
adc
push
lods
push
xor
mov
nop
xor
sbb
jno
push
idiv
mov
ret
pop
sub
sub
jp
imulb
or
dec
aaa
xor
cmp
imul
mov
cmp
mov
add
test
pop
pop
scas
in
mov
les
shlb
rorl
dec
in
mov
shll
lds
inc
mov
mov
in
sub
roll
adc
out
dec
sti
loopne
inc
jbe
mov
inc
inc
sbb
pop
clc
adc
sub
fldenv
adc
out
dec
adcl
jb
sub
cmp
das
cmp
xchg
add
arpl
jae
adc
hlt
sub
sbb
mov
arpl
in
dec
mov
sub
les
adc
dec
pushf
and
lahf
enter
pop
jl
icebp
pop
aaa
ror
sbbb
lds
fwait
lcall
ds
mov
sbb
mov
fs
fisttpl
and
fstp
push
lods
lea
in
lods
pop
inc
out
adc
sub
xchg
mov
repnz
aaa
in
js
xchg
pop
mov
sub
out
shll
adc
or
pop
pop
das
jns
add
imul
div
jae
mov
adc
jmp
test
add
enter
pushf
mov
das
fstpl
insl
fmull
test
insb
arpl
ja
fdivrp
inc
outsb
fsts
gs
fsubrl
cmp
cmpsb
xor
sub
mov
adc
lods
popa
popa
mov
inc
cmpsl
jge
push
repz
inc
mov
fstl
icebp
ja
jnp
jle
lea
fcoms
mov
xor
out
push
pushf
and
call
dec
pop
mov
lds
sbb
mov
sub
xor
adc
push
scas
cmpsb
jl
push
sti
mov
shlb
jp
or
add
rcrb
push
push
and
inc
popa
pop
xor
sbb
enter
roll
mov
flds
inc
cmc
into
mov
shrl
insb
adc
inc
pop
cmp
dec
pop
mov
xor
ficoms
and
add
add
clc
pminsw
idiv
repz
lret
out
dec
sbb
jecxz
add
add
add
into
push
repnz
or
mov
addb
aaa
or
xchg
leave
das
cmp
daa
push
in
shlb
dec
cmpsl
inc
dec
cld
add
fcomp
mov
divl
icebp
xchg
sbb
pop
cmp
in
in
pop
hlt
outsb
fidivl
mov
cli
out
fxtract
push
sbbl
imul
dec
xor
outsb
push
cs
mov
xchg
ffree
sti
sbb
cmp
xlat
int3
pop
mov
jns
mov
inc
add
mov
test
iret
adc
inc
insb
imul
shrb
sub
dec
sub
xor
hlt
mov
or
nop
cltd
pop
push
in
add
fs
sub
ss
mov
and
jge
pop
cmp
jl
jno
xchg
mov
out
and
adc
ret
and
aas
pop
movsb
dec
mov
pushf
push
scas
xchg
push
push
and
pop
lods
push
out
xchg
lret
push
pushl
push
add
jns
sbb
dec
test
pop
fdivrs
cs
pop
rcrb
lds
add
mov
std
lock
and
out
jp
push
add
sub
jl
loopne
xor
push
aas
daa
xor
fnsave
outsb
jp
movsb
mov
or
xor
pushf
mov
dec
repnz
loopne
push
mov
in
sahf
stos
fists
mov
call
sub
mov
xchg
insb
fwait
lds
and
xorl
jns
cmp
jb
xchg
jp
push
pop
imul
sub
fucom
ss
movsl
dec
and
sub
cmpsb
xlat
sahf
pop
cmpsl
xlat
jbe
shl
nop
xor
and
xor
lcall
cltd
xchg
lods
das
movb
es
cmp
loopne
loop
popf
and
inc
sub
jl
push
sbb
fadd
loop
ret
push
aam
std
test
stos
pop
push
jb
push
mov
mov
dec
rorb
mov
and
ds
pushf
jb
sti
xor
jg
das
das
shll
jo
ffree
ss
mov
cmp
sbb
push
cli
xchg
xor
outsl
je
stc
mov
and
xchg
pusha
jne
adc
dec
fs
inc
sbb
andl
loope
popa
pop
mov
mov
sub
in
jp
movsl
cmp
pop
stc
sub
pop
outsl
push
xor
popf
sbb
lds
jp
test
in
jg
or
xchg
jno
xor
addr16
mov
mov
pop
pop
cmpsl
mov
push
ljmp
aad
push
outsb
pop
iret
insb
scas
sbb
mov
outsb
mov
icebp
aam
int3
mov
out
shll
and
push
call
mov
insb
movsb
popa
pop
pop
jp
mov
pop
mov
jle
fidivrs
lret
jle
out
and
xor
cmp
std
fidivrs
stos
loope
pop
add
imul
xor
stos
lods
lret
leave
and
dec
outsb
mov
adc
fsub
or
sbbb
mov
add
in
mov
fidivrl
idivl
mov
lds
fninit
pushf
sub
mov
push
sub
cmpsl
mov
xchg
fsubp
xor
mov
adc
into
mov
mov
mov
bswap
pop
cltd
dec
mov
mov
or
fwait
push
cmp
adc
mov
iret
mov
rol
mov
and
lock
shll
lahf
push
data16
sarb
ja
jnp
jge
sbb
sub
cmp
cld
inc
cmp
imul
cmp
mov
movups
sahf
std
xchg
orps
sbb
jb
cmp
mov
pusha
jg
in
add
mov
in
inc
jnp
push
adc
into
icebp
push
xor
xor
mov
or
out
rcrl
aas
push
jo
jmp
out
adc
xorb
lea
dec
inc
adc
sub
adc
add
mov
cmp
in
stc
jnp
inc
or
dec
pop
test
sbb
sbb
bswap
inc
or
cmp
cmpsb
push
jbe
adc
shrb
cmc
aam
mov
add
add
call
jnp
sarl
and
call
add
jle
aas
jb
pop
xchg
aaa
hlt
je
mov
pop
pop
lret
or
lock
add
sub
jge
rol
adc
inc
mov
pop
pop
mov
cmpsb
inc
cmc
fsubrp
push
sub
pop
sti
shl
out
add
cltd
xorl
dec
mov
fdivl
adc
sub
cmp
mov
outsb
aad
jle
loop
aam
es
add
neg
ret
xor
insb
loopne
inc
cmp
sahf
dec
dec
arpl
or
imul
outsl
fcompl
hlt
sahf
push
mov
pop
leave
rcrl
sub
mov
insl
loop
out
pusha
dec
and
mov
adc
lods
mov
mov
dec
mov
test
fdivs
xchg
insl
test
and
shrb
fnsave
xchg
pop
flds
dec
out
jnp
mov
cs
ds
fwait
out
jb
xchg
insl
addr16
pop
cmp
pop
fucom
jg
lret
scas
testl
and
cld
pop
test
push
aaa
rcl
jo
jmp
inc
adc
push
bound
in
mov
int3
adc
repnz
mov
sarb
gs
and
test
in
scas
stc
clc
push
sub
idivl
sub
dec
clc
and
ror
push
inc
push
jae
test
dec
lcall
lcall
pop
sub
outsl
repz
add
mov
xlat
jmp
dec
jae
push
jo
jae
lcall
fmull
fadds
pushl
xchg
lcall
loop
cmp
pushf
es
pop
movsl
fstps
ss
addr16
xchg
dec
js
mov
hlt
mov
and
ds
mov
mov
xchg
dec
je
cltd
insl
mov
cmpsb
mov
adc
daa
inc
and
add
dec
mov
stc
lock
pusha
push
sub
sub
jge
cmp
pop
mov
popf
fistpll
mov
ljmp
lcall
jl
xor
daa
jbe
incb
nop
cmp
mov
scas
sbb
mov
add
push
and
stos
xor
in
and
push
adc
movsb
out
lock
jbe
xchg
xchg
push
mov
inc
cmc
in
push
jnp
in
sahf
cwtl
mov
out
sbb
xlat
add
push
push
cmpsb
ret
and
mov
lea
not
in
cmpsb
xchg
pop
inc
pop
pop
stc
pop
xlat
or
adc
jecxz
mov
enter
cs
jns
aas
idiv
mov
daa
movsb
in
and
clc
pop
add
inc
cs
in
inc
pop
and
adc
in
xchg
test
jb
sub
inc
pop
stos
ja
mov
xlat
jg
inc
jns
int
and
lods
xchg
xchg
test
xchg
addr16
test
cwtl
sub
ret
mov
mulb
push
push
stc
mov
dec
xlat
mul
in
xor
sub
push
js
aaa
or
int3
adc
dec
push
fisttps
es
dec
dec
lret
xchg
orb
repz
aad
cmpsl
push
int
cmp
xor
inc
mov
jno
daa
sahf
jnp
daa
rol
stos
out
pop
out
inc
psllq
xchg
pop
add
je
jbe
cmp
pushf
pop
pop
pop
stc
mov
jg
xchg
test
fcmovbe
push
pop
lret
and
jl
je
cltd
push
push
ljmp
incb
push
ret
push
packuswb
pusha
stc
mov
outsb
std
adc
inc
les
adc
ret
scas
ss
loopne
push
push
xor
inc
xchg
ds
js
test
and
xor
sarl
shl
pop
jo
xor
imulb
pop
clc
jl
pop
push
sub
jg
rcll
mov
mov
rep
incl
or
mov
jmp
out
mov
pop
adc
mov
add
add
test
adc
leave
sbb
pop
aas
mov
jle
inc
sub
pushf
leave
push
fbld
arpl
rep
dec
dec
pop
xchg
jne
es
fnstcw
loope
pusha
jle
fwait
outsl
and
xor
jo,pt
jae
and
push
cs
mov
test
mov
movsb
push
sub
pushf
mov
dec
xor
xchg
popa
fistps
rcr
mov
aas
xor
pop
mov
call
add
cmp
jmp
int3
sub
in
mov
adc
push
fmulp
xchg
sub
stos
addl
out
cmp
in
out
lcall
push
push
int
and
jle
fidivrs
add
add
add
push
sub
test
adc
dec
ja
in
add
repnz
add
test
into
push
push
ljmp
out
insl
mov
jne
or
mov
xor
jbe
xchg
and
imul
pop
enter
enter
and
inc
cld
clc
lods
mov
or
fdivs
and
mov
inc
lcall
jp
divl
mov
xchg
lock
dec
clc
mov
fwait
out
and
aaa
pop
andps
dec
jno
aad
push
ret
xor
lahf
mov
inc
mov
or
add
shll
and
int
and
jne
inc
loop
xchg
xor
test
xchg
xchg
pop
int
dec
test
pop
or
xchg
jmp
cmp
cli
shlb
jbe
loope
and
aas
jne
dec
lea
add
test
lret
lret
in
xchg
jle
push
push
adcl
sbb
dec
es
jns
pop
ret
insl
repnz
idivb
popf
out
ret
adc
add
add
mov
jg
lret
xchg
jle
and
clc
scas
sub
stos
les
push
test
mov
mov
dec
sbb
inc
xor
pop
xor
adc
andl
test
fbld
sub
cld
xchg
and
xor
mov
and
xchg
fsubl
push
cmp
sbb
mov
or
mov
data16
jnp
loopne
and
mov
inc
test
loopne
fldl
dec
jg
test
fucomi
imul
dec
jge
aam
pop
clc
test
sbb
mov
push
add
mov
in
mov
jae
add
ror
roll
enter
insb
or
dec
je
xchg
push
adc
mov
push
pop
repnz
xor
cltd
test
repz
xchg
mov
sub
add
adcl
mov
mov
cmpsl
lahf
sbb
add
pop
pop
cmpsl
mov
xchg
and
leave
jb
or
and
pop
or
imull
dec
mov
and
fmulp
out
mov
test
push
lret
push
mul
insl
sahf
jg
orl
xchg
test
mov
pop
aad
std
lock
inc
imul
add
mov
or
xchg
test
clc
enter
pop
fcomi
fst
test
jl
movl
inc
cltd
fidivs
push
pop
subb
daa
mov
out
jo
repz
int3
mov
outsb
cmpsb
in
loop
or
adc
jno
popf
adc
sbb
xchg
cmp
adc
shlb
dec
lods
insb
push
pop
out
cmp
pop
mov
xchg
sub
lock
imul
aas
ja
cwtl
insl
mov
subb
lods
push
pop
out
dec
sub
das
daa
and
das
adc
je
mov
sbb
jle
enter
mov
xcrypt-cbc
cmpsl
push
fiaddl
mov
mov
cmpsb
pusha
dec
in
in
sbbb
mov
push
xchg
outsb
mov
push
inc
dec
aas
jno
inc
pop
jecxz
out
inc
push
push
xchg
fildll
and
sbb
mov
jb
repnz
idiv
inc
adc
call
pop
out
and
cmpsl
cmp
popf
xor
push
and
test
mov
xchg
mov
test
mov
jne
or
push
dec
stc
xor
inc
mov
sar
cli
call
daa
hlt
pop
adc
push
pop
adc
scas
movaps
insl
aaa
pop
jno
loope
cmp
popa
xchg
sub
lret
bound
inc
jg
cld
ljmp
out
push
jno
sub
jmp
test
adc
and
negb
in
adc
fs
sbb
mov
dec
movsb
jg
push
js
pushf
clc
adc
pop
outsb
pop
add
mov
or
push
mov
adc
push
je
pop
xchg
fcmovnbe
divl
sahf
sbb
adc
mov
add
out
mov
jo
jae
mov
sub
jp
lock
clc
cmp
cmpsl
mov
and
int3
xor
pop
nop
bound
xchg
int3
or
sti
add
dec
cli
int
inc
clc
jg
std
fcmovnbe
sub
in
test
sarl
adc
xchg
or
dec
es
and
in
subl
cmp
mov
dec
push
cwtl
cmp
sub
scas
fdivrs
or
add
add
add
dec
lcall
adc
lret
xor
and
add
add
xchg
add
cmc
addr16
rolb
pop
pop
mov
or
adc
arpl
or
ljmp
cmp
insl
sub
pushf
loopne
xchg
rolb
adc
dec
jmp
push
mov
pop
into
jmp
xor
fwait
cli
or
xor
mov
je
mov
jne
xchg
negl
pop
xor
loop
mov
ds
pop
jno
dec
or
jno
rcll
xchg
mov
cmpsb
insb
clc
repz
push
pop
mov
push
cli
cltd
sub
or
rolb
icebp
roll
fldt
or
add
lahf
push
sbbl
out
cmp
push
add
cli
adc
je
push
fcomps
stos
nop
dec
cmp
jmp
in
ret
aad
icebp
ret
cmp
inc
int
outsb
push
shrb
es
out
mov
xor
insl
mov
sbb
cs
pop
in
pop
cmpsb
aas
in
pop
rorb
cmp
mov
icebp
lret
push
sub
mov
addr16
add
cwtl
and
out
mov
push
adc
shl
fmuls
aad
mov
adcl
enter
push
adcb
fimull
repz
data16
add
movsl
pop
daa
pop
iret
cmpsl
jg
enter
ja
rorb
mov
xor
ds
in
sbb
jecxz
retw
mov
add
cmp
xorb
sbb
jbe
pop
cmpsb
adc
aas
sti
pop
loopne
mov
daa
push
jo
jle
incl
push
cmpsb
inc
sub
pop
pushfw
mov
enter
adc
test
fistps
sub
adc
sarb
push
and
stos
xchg
jge
push
mov
sbb
ficompl
push
inc
pop
mov
push
popf
and
pop
pop
imul
or
mov
dec
mov
dec
fs
in
mov
mov
sub
and
dec
sub
jecxz
xchg
ja
daa
bound
push
shll
adc
and
adc
inc
loopne
mov
scas
aaa
sub
or
push
aas
js
lcall
mov
pop
xchg
loopne
adc
jp
mov
pop
xchg
and
in
jg
mov
frstor
sbb
dec
jbe
cs
in
sub
iret
std
sbb
insb
cltd
movsl
lods
cli
push
xor
xchg
inc
pop
mov
fs
lods
divb
inc
lahf
inc
push
ret
jecxz
xchg
dec
es
inc
mov
add
jae
push
inc
aas
mov
shll
cmp
aad
xor
xor
push
pushf
lds
mov
sbb
ja
lcall
fildl
or
clc
push
mov
mov
pop
mov
cmpsb
pop
xchg
xchg
jge
jmp
mov
adc
push
loopne
mov
outsl
call
sub
loop
mov
iret
clc
out
imul
or
in
mov
sub
das
call
outsb
add
sub
fistl
mov
insb
mov
lcall
jo
dec
pop
lcall
and
repnz
insb
push
pop
fs
ffree
gs
push
mov
pop
insl
mov
push
pop
aad
jns
insl
outsl
orb
pop
push
mov
jno
inc
inc
in
ret
cmp
sti
push
into
add
sbb
jo
pop
xchg
in
addb
inc
push
repz
xchg
icebp
push
lock
dec
or
cli
shlb
jae
shll
dec
pop
adc
mov
out
xchg
and
adc
add
pop
pop
xchg
scas
inc
jp
stos
or
lret
adc
add
arpl
lea
fcmovnb
jge
jp
cltd
xor
push
leave
mov
je
stc
pop
out
imul
sub
push
xchg
cli
pop
iret
sub
jnp
fsts
test
inc
test
aad
arpl
test
inc
and
cmp
data16
subb
inc
inc
or
movsl
pop
ds
dec
mov
sub
dec
pop
xor
insl
popa
subb
mov
dec
jne
pop
mov
push
and
xor
mov
lock
imul
or
js
test
outsl
push
mov
inc
not
in
sarl
sbb
pop
adcb
add
add
es
jno
cmc
divl
mov
adcl
add
add
int
icebp
rcrb
xchg
pop
mov
ret
xchg
leave
nop
leave
imul
jnp
or
push
clc
jne
xor
xor
insl
push
fs
jp
ret
dec
lods
mov
fnstsw
and
clc
insl
jg
pushf
sub
jnp
cmpsb
ljmp
in
or
out
jnp
cli
data16
mov
imul
fidivs
dec
push
mov
ficoms
outsb
jge
hlt
aas
sub
pop
push
sub
jecxz
sbb
jmp
xor
xchg
or
dec
loope
mov
inc
sbb
mov
data16
cmc
adc
xor
jnp
mov
mov
dec
cs
imull
sar
in
xchg
les
push
xchg
mov
lds
inc
clc
lds
cmpsl
hlt
jo
dec
ret
je
das
cmp
mov
outsl
dec
mov
es
xchg
daa
mov
pop
mov
into
push
es
aad
jnp
fldenv
les
and
pop
add
dec
cmc
fistpl
insl
cmp
sbb
xchg
adc
or
clc
gs
faddl
inc
jle
popa
addr16
mov
in
push
cmc
data16
test
ja
stos
jns
sub
xchg
lock
pop
inc
outsb
adc
cmp
lcall
test
xor
es
fistpll
jp
flds
adc
cmp
add
jns
mov
inc
cld
test
fsts
lret
inc
jp
pop
es
pop
sub
rcrl
popf
mov
add
sar
sbb
mov
mov
sahf
call
xchg
icebp
mov
lret
nop
bound
xor
mov
cmp
sbb
mov
sub
cmp
fwait
les
scas
data16
or
jmp
sub
js
cltd
mov
push
jl
jns
jb
mov
pop
lcall
outsb
push
test
sbb
lods
sti
rcl
mov
popf
jmp
xchg
push
outsb
inc
in
rclb
std
lds
xor
sub
notl
aaa
iret
cmc
test
xchg
push
addr16
insl
and
mov
jmp
outsl
shrb
xor
push
mov
pop
push
cmp
testb
fs
and
inc
sbb
push
push
xchg
jne
sahf
idiv
ds
cmpb
negl
jge
pushf
dec
cmp
sahf
jns
xor
lahf
aaa
inc
rcl
fimull
ss
stos
mov
or
inc
cmc
loopne
lcall
lret
movsb
push
jmp
int
mov
mov
dec
outsl
sub
adc
lods
jp
in
je
inc
sub
pop
ret
imul
loop
jecxz
add
fs
pop
jge
xcrypt-cbc
cmpsl
aad
sbb
xor
sub
in
mov
mov
stos
push
aaa
mov
fmul
or
aad
cmp
ret
in
add
mov
js
adc
sub
fs
les
outsl
xchg
mov
sti
filds
enter
xchg
hlt
into
bnd
inc
fwait
addr16
dec
inc
xchg
inc
lods
cld
data16
add
stos
and
aam
out
mov
addr16
mov
jle
sbb
push
cltd
enter
bswap
lret
push
push
sbbl
icebp
inc
push
or
xchg
push
negb
sub
insb
lds
idivb
stos
sub
pushl
aam
movsl
sub
jg
clc
mov
pop
xchg
fbld
jno
mov
popa
int
fdivr
sub
out
mov
lock
rcrb
mov
idiv
cmp
jle
out
or
jle
jno
ret
jge
push
in
pop
repnz
pusha
dec
pop
ja
dec
js
mov
and
movl
fnstenv
push
inc
xchg
shrb
mov
fisttpll
cmp
loope
popa
push
sub
lods
enter
adc
or
inc
jo
or
out
jle
scas
pop
xchg
xchg
ret
adc
cmp
mov
sarl
ret
imul
sub
cmp
jno
mov
movsl
insb
fwait
mov
in
mov
sbb
jno
out
jl
inc
add
xchg
mov
movsb
sub
inc
add
push
cmp
lret
lcall
test
shll
add
add
add
sahf
xchg
inc
fisttps
lahf
int
push
psubsb
add
repnz
add
out
pop
push
ret
mov
out
daa
jb
inc
mov
mov
sub
subl
dec
or
sbb
xchg
or
adc
pop
adc
pop
fdivrl
cwtl
ret
aaa
cmpsb
lret
pop
psrlw
or
and
jb
out
inc
mov
fmul
fwait
dec
aas
mov
lret
cli
into
pop
inc
fbld
push
mov
fwait
repz
adc
ljmp
ds
lret
ret
add
mov
subb
push
xchg
iret
daa
and
sub
or
les
push
adc
push
ds
fwait
scas
lahf
push
sub
lods
add
aad
out
cmc
jp
in
es
mov
fistl
sbb
mov
mov
movsl
inc
int3
jmp
inc
loop
pushf
sarl
mov
dec
sub
lods
dec
mov
iret
mov
fstpt
test
je
add
test
mov
pop
test
popf
cmpsl
lds
lods
sub
mov
les
or
and
scas
push
mov
je
jg
and
pop
aas
ss
mov
mov
ds
jle
hlt
add
aas
pop
or
in
hlt
cmp
mov
jb
orl
or
sahf
pushf
int
fwait
xchg
fs
mov
or
pop
ret
sub
scas
xchg
lock
pop
mov
imul
test
sti
xor
or
sub
add
mov
inc
aas
int3
xor
mov
sbb
mov
popf
mov
add
xchg
mov
dec
int
add
add
clc
cmp
jo
jp
stos
nop
push
fyl2x
push
mov
mov
in
xor
xor
int3
or
xchg
imul
cmp
je
cmpsb
lods
inc
adc
xor
inc
stc
pushf
mov
fs
push
jb
lods
pusha
scas
sub
ja
aas
mov
test
arpl
popa
pusha
call
jne
loope
jg
fidivrs
mov
test
lret
push
dec
mov
popf
push
cmpb
push
ss
sub
cmpsl
mov
test
jl
cmp
outsl
aad
sarl
dec
loope
pop
fadds
or
jge
popa
sbb
inc
and
cmp
out
xchg
addl
xor
insb
popf
mov
mov
test
imul
adc
loope
jne
ds
jecxz
adc
mov
sbb
push
xor
mov
int
and
lock
xlat
jno
sub
sub
push
xchg
cmp
add
or
xchg
mov
les
xchg
notb
push
pop
dec
in
push
std
and
push
jg
cmp
rorl
jge
out
sub
rolb
sahf
jp
loop
push
pop
jnp
xor
daa
sub
nop
movsb
aad
cmpsb
lods
in
cmp
jmp
flds
cmp
in
and
fcompl
jge
test
iret
cmpsb
in
adc
or
sti
sub
adc
lock
pop
adc
movsl
out
es
das
dec
mov
lahf
stc
hlt
dec
in
push
lea
mov
ficoml
pop
dec
adc
sbb
arpl
jmp
dec
aam
push
jns
inc
aad
mov
sub
test
adc
stos
adc
mov
adc
jns
lcall
jg
cmpsb
aam
cmp
cli
or
les
pop
fidivl
jb
mov
push
scas
add
dec
in
jp
lcall
pop
lret
sub
incl
lods
mov
jecxz
adc
xorl
out
fldl2t
push
dec
sbb
test
adc
mov
inc
mov
sub
adc
sbb
xor
data16
inc
cmp
test
scas
add
sub
lahf
cmp
adc
bound
cld
inc
enter
dec
adc
loope
into
push
sub
adc
mov
adcb
or
mov
in
insb
in
and
filds
icebp
xlat
lea
mov
jno
inc
jbe
jns
and
out
push
sarb
adc
popa
stos
cmp
shll
fwait
outsl
cmp
jle
into
mov
sbb
xlat
mov
sub
pop
mov
push
lret
pop
mov
sbb
imul
mov
add
add
add
call
aas
popa
adc
andl
sti
add
add
add
add
pop
in
jg
push
add
push
sbbb
mov
cs
sarb
aas
adc
hlt
lret
outsb
cwtl
fwait
cmp
out
push
fs
imulb
mov
mov
cs
or
sbb
and
fldenv
stos
hlt
and
ret
ret
push
pop
pop
or
mov
pop
add
loopne
jl
outsb
jb
ljmp
mov
adc
cmpsl
ljmp
loope
mov
jp
cmp
scas
popa
ret
fdivrl
loope
imul
push
mov
add
mov
jb
mov
test
mov
fadd
frstor
sub
xor
sysenter
outsl
push
std
cmp
push
test
mov
es
rol
enter
cmp
mov
gs
sub
jae
xchg
into
sbb
ficoms
push
fmull
xor
movsb
leave
aad
mov
lods
sbb
movsl
mulb
mov
into
arpl
divl
dec
sti
mov
iret
pop
sahf
sub
mov
jp
popf
ret
movsl
sbb
mov
push
mov
xor
pop
or
rolb
mov
mov
inc
imul
fstpt
pop
and
int
pop
adc
and
mov
jmp
pop
xchg
loop
jecxz
xor
lds
pop
in
mov
inc
pop
add
pushf
push
ja
mov
insl
xor
xchg
push
mov
inc
fstpt
lahf
lods
cmpb
lret
or
aad
testl
movsl
shll
loopne
and
lea
xchg
sub
sub
inc
mov
push
outsl
push
mov
fstpt
stos
test
cmpsb
int3
xchg
sbb
mov
and
mov
xchg
xchg
xchg
lds
or
mov
jo
in
sbb
jmp
jmp
lret
dec
mov
push
mov
in
add
leave
mov
inc
jle
fdivs
sbb
xchg
dec
push
popa
popa
pop
inc
mov
sbb
xchg
inc
sub
mov
lock
push
imul
dec
dec
inc
vmovsd
push
xchg
popl
sbb
shll
shlb
int3
stos
into
xor
inc
sub
mov
outsl
push
pop
out
repnz
xchg
movsb
jns
out
ror
sub
and
xchg
pop
add
cs
jns
mov
push
mov
lock
adc
xor
jno
pusha
sti
pxor
adc
cmp
scas
lcall
icebp
call
das
dec
xchg
xchg
add
cld
sbb
insl
xchg
leave
ret
jne
sbb
das
pushf
xlat
add
push
int3
mov
adc
jl
scas
and
imul
dec
mov
push
scas
sub
cld
cmp
and
and
mov
stc
shlb
adc
movsl
mov
push
jge
xor
fdivr
add
mov
loop
imul
pop
sahf
pop
cmp
push
incl
movsl
insb
in
notb
ja
lods
mov
in
inc
or
lret
insl
jl
or
mov
subl
in
stos
sbb
push
ss
sbb
in
jae
cmp
notl
xchg
shrb
shrb
hlt
push
dec
xor
mov
aam
adc
mov
pop
leave
jns
lods
lahf
jae
cs
xor
xchg
pop
pop
into
add
sti
xor
popw
loope
xchg
mov
fstl
leave
dec
jne
add
div
cmp
stos
bound
rcr
jl
movsb
pop
or
scas
in
xchg
xchg
bnd
das
lock
jno
pop
popa
adc
or
loope
and
jb
dec
jns
sbb
cs
mov
push
cld
dec
inc
inc
push
insb
dec
cmpsl
adc
enterw
cmc
bound
pusha
aas
lahf
cmp
in
sbb
scas
mov
sbb
xlat
push
push
dec
adc
fistl
jno
out
movsl
lods
sbb
js
scas
inc
and
data16
nop
add
jb
out
xchg
rcrb
lcall
mov
add
mov
lock
sub
xchg
and
daa
sahf
push
sarb
mov
mov
jnp
in
push
faddl
mov
loope
shl
aad
arpl
add
add
add
sahf
insl
not
neg
mov
int
out
mov
add
add
std
xor
jbe
lahf
push
nop
pop
cli
inc
lods
scas
cmp
add
out
push
jp
sbb
arpl
pushf
imul
loope
pop
pusha
out
mov
leave
das
xor
add
mov
cmpsb
lock
rcrl
mov
data16
mov
pop
xchg
arpl
loop
repz
hlt
call
mov
push
cmpsl
aaa
mov
fwait
sbb
adc
xlat
or
jmp
not
jmp
pusha
and
scas
outsl
aaa
nop
lahf
mov
mov
out
push
lds
into
cmp
xchg
out
jmp
scas
je
into
mov
xchg
dec
push
cmp
push
inc
inc
notl
outsb
addr16
xor
inc
fadd
iret
das
push
cmp
je
push
stc
fwait
mov
mov
out
or
pop
push
xchg
stc
sbb
movsb
mov
repnz
aas
outsl
mov
fidivrl
add
or
pop
xchg
jne
fdivrs
ja
ds
sbb
adc
dec
ret
jne
dec
xchg
les
call
pushf
decl
shlb
bnd
imul
lock
imul
jb
cmp
inc
fistps
adc
mov
xor
push
sar
lret
ret
outsb
push
insl
dec
in
mov
adc
mov
scas
loopne
out
mov
mov
in
movsl
dec
out
inc
fucomp
icebp
sbb
mov
jbe
fbstp
mov
cltd
sub
pop
sub
enter
xchg
inc
outsl
add
les
lret
mov
push
xchg
out
mov
sub
jmp
lods
adc
lahf
inc
in
lahf
mov
xchg
mov
mov
idivl
cltd
rclb
mov
mov
jb
push
mov
popf
mov
add
add
inc
push
jmp
xchg
fstpt
cmp
and
aad
jns
fs
cmp
cmc
aad
adc
sarl
adc
mov
clc
scas
movsb
adc
adc
and
mov
pop
loope
pop
jo
inc
shlb
xchg
and
addl
call
sub
adc
xor
push
xorb
pop
ja
or
test
jg
inc
inc
fimuls
pop
dec
cmpb
jge
aas
add
pop
sub
xchg
aaa
js
pop
sub
and
sub
cmp
mov
shrl
jb
fcomi
cwtl
sbb
das
inc
xor
cwtl
fsubs
rcrl
stos
popa
inc
or
jbe
mov
stc
xchg
cltd
and
fnstcw
push
mov
fmull
xchg
push
sbb
sti
shll
adc
push
or
jae
incl
sub
jmp
inc
insl
xor
inc
ja
popf
xchg
mov
inc
jae
add
leave
addb
jns
pop
test
inc
sbb
cmpsb
or
dec
mov
sbb
mov
enter
pop
mov
xor
xchg
stos
or
cltd
pop
negb
ret
mov
in
add
imulb
fdivrs
out
lea
mov
sahf
xchg
fisubrl
or
stos
lods
mov
mov
roll
aaa
sub
pop
cmp
mov
xchg
in
shrl
movsl
ffree
fcomip
cmp
imul
xchg
sbb
xor
out
sbb
push
arpl
lods
test
lds
xchg
popl
stos
outsb
sahf
xchg
jbe
mov
lea
jecxz
mov
add
out
jmp
mov
ret
and
popa
mov
repz
adc
or
loopne
adc
in
lds
sahf
sub
fcomip
jns,pt
jmp
rcr
out
mov
in
mov
lahf
fists
mov
xchg
outsl
pop
dec
sub
das
and
mov
imul
das
popa
mov
sub
jae
jmp
test
out
mov
cmp
aad
faddl
fs
xchg
jg
fsubrs
shll
and
mov
nop
mov
repnz
cli
sbb
lcall
subl
pop
xor
inc
cmp
jae
pop
notb
testl
sub
sbb
loope
mov
xchg
outsb
push
cmp
nop
ss
mov
rorl
lret
push
clc
push
notb
sahf
std
mov
std
or
into
xchg
sub
add
add
std
mov
push
jg
mov
fisttps
add
repnz
add
gs
or
mov
sbb
pop
gs
loopne
push
jbe
lahf
mov
and
inc
popf
mov
std
jno
test
adc
sbb
scas
sbb
sti
jle
repz
add
push
stc
aaa
in
jno
lret
sub
in
sbb
pop
mov
mov
repnz
inc
or
or
clc
jg
or
xchg
les
sub
jle
fnsave
clc
sub
mov
sahf
sbb
clc
sbb
adc
filds
in
adc
test
dec
sbb
push
sub
xor
in
sub
lahf
mov
or
pop
lea
in
pop
sub
out
jae
jne
sub
test
xchg
xchg
jno
push
int
ljmp
xor
mov
pop
sbb
push
ljmp
pop
stc
pop
sub
aam
sti
inc
test
xorl
and
cmp
mov
or
pop
mov
sub
cmp
xlat
xchg
mov
and
jo
fildll
xor
pop
ret
add
mov
int3
xchg
mov
cs
call
adc
dec
jae
mov
ficomps
fcomi
dec
xchg
jns
pusha
sbb
mov
jne
xor
jo
orb
fbstp
mov
xchg
vpcmpb
mov
ss
cli
sub
rclb
add
pop
hlt
mov
outsl
es
jae
decl
popa
fmull
add
daa
int3
movsl
pushf
mov
rcll
add
mov
sahf
or
fwait
enter
out
add
lds
adc
cmp
xchg
insb
addb
mov
jno
call
cmp
bound
int3
fdivrl
data16
push
aaa
jge
into
idivl
insb
push
dec
cmpsb
aam
sahf
fdivrl
shrb
mov
push
inc
sbb
int
mov
aas
fwait
xor
testb
je
pushf
das
inc
adc
loopne
xchg
xor
mov
stos
sub
adc
js
ret
shl
push
pop
xlat
dec
stos
push
adc
and
cmpsl
add
ss
jnp
test
mov
push
sub
xchg
adc
js
dec
mov
int
mov
cli
mov
ret
movsb
test
lds
xor
mov
xor
rol
jecxz
mov
scas
popf
je
ja
xor
dec
sbb
cmc
sbb
mov
xor
xchg
mov
enter
loope
add
cmpsb
jne
pop
xor
push
jbe
into
enter
ljmp
imul
loop
adc
sbb
or
dec
dec
mov
je
cmp
fnsave
mov
shll
dec
xor
sti
pop
scas
inc
xchg
mov
fnsave
and
in
cmp
fisubrl
cmp
pushf
aaa
movsl
xor
mov
push
or
stos
jns
cltd
push
mov
sub
popa
insl
enter
pop
xchg
dec
or
sub
inc
aaa
adc
and
cmpsb
cmp
inc
push
loopne
pop
repz
jns
sbbb
ja
inc
xchg
lds
add
push
push
and
sub
lea
stos
out
ljmp
cltd
movsl
aaa
in
lret
add
push
push
ja
loopne
ja
xchg
mov
mov
movsb
cmp
mov
cwtl
out
ss
ljmp
lods
mov
add
mov
sahf
lock
icebp
sbb
mov
std
adcl
addr16
xchg
push
clc
cs
jp
in
inc
arpl
cld
stos
rolb
addr16
pushf
fs
popf
xor
push
dec
gs
add
fwait
push
jmp
xor
cld
in
or
or
out
aaa
into
out
mov
xor
xchg
sub
clc
add
pop
mov
pusha
add
or
fsubrl
xchg
jo
fldl
inc
std
cmp
adc
lret
pop
xchg
in
ss
lahf
loop
xchg
imul
sti
pop
mov
enter
jo
xchg
fnstsw
ret
adc
inc
cmp
leave
xchg
dec
cld
shr
dec
cmp
xor
mov
fiaddl
mov
or
push
out
push
push
sub
fimuls
inc
cmp
fwait
stc
ret
xor
add
add
add
inc
push
lret
in
out
dec
add
sbb
repnz
add
fnstenv
add
aas
adcl
sub
mov
mov
and
sahf
test
ret
dec
ds
in
or
popa
mov
ret
movsb
repnz
add
sub
dec
jg
sbb
mov
cmp
sub
jmp
int
sub
pusha
jae
loopne
dec
xlat
push
mov
repnz
fstps
xchg
mov
xchg
xor
int3
cmp
jg
mov
cmp
mov
lods
mov
fisubs
pop
push
lcall
jae
jle
sub
addl
dec
cld
lahf
into
lock
push
adc
pop
cs
int3
inc
push
sti
and
ds
sbb
push
pop
cli
sbbl
loopne
mov
rcl
mov
int
into
das
mov
mov
push
outsl
jns
decb
cmc
pop
sub
imul
sub
inc
jmp
shll
pop
in
adc
bound
fisubrs
les
int3
nop
loope
imul
inc
lods
int3
mov
pop
in
aaa
addb
cmpsb
stos
push
push
pop
jl
bound
mov
jg
cmp
add
mov
bound
xor
xchg
enter
jae
in
cmp
test
sbb
mov
aaa
outsl
out
mov
mov
ftst
int
jne
cmp
inc
rol
addps
lea
jbe
and
test
and
mov
pusha
fnsave
fdivrl
sbb
sbb
or
inc
xor
xor
jns
gs
mov
lret
push
gs
test
pop
test
popf
sbb
add
add
ror
dec
orb
lods
sbb
xlat
in
mov
jno
and
popf
aad
dec
mov
mov
sti
mov
movsb
push
mov
mov
push
rorl
lahf
dec
cli
repnz
fstpl
mov
dec
sub
int
scas
mov
or
or
loop
push
ljmp
aad
jp
xchg
pop
mov
or
jnp
cltd
shrb
xchg
cmp
test
sldt
push
cmp
inc
push
scas
jnp
and
push
add
es
fdivs
xor
inc
jmp
dec
sbb
ret
dec
out
ret
xor
xchg
jne
pushf
fwait
xor
push
imul
cmovno
pusha
fnstcw
xlat
sti
dec
in
fcomip
xchg
test
out
mov
cmp
aad
icebp
pop
add
pop
mov
mov
rorb
je
xchg
notb
lahf
ror
push
cmp
or
mov
cs
sbb
loop
jge
and
push
repnz
dec
and
repz
lret
fmull
push
inc
push
or
data16
cmp
scas
xor
hlt
inc
js
xor
mov
ds
push
loopne
aas
inc
pop
dec
mov
mov
cmp
test
es
sbb
in
or
cmpsl
mov
or
mov
cmp
mov
filds
adc
sbb
push
pushl
and
inc
insl
int3
xor
fdivrs
mov
hlt
xlat
sub
and
aad
arpl
aas
stc
sbb
movsb
rorb
cs
lret
aas
jmp
fidivs
ret
fwait
xchg
xor
add
lahf
mov
out
roll
push
rorb
iret
push
fcom
repz
ljmp
ret
sub
dec
pop
adc
lahf
movsb
shr
int
adc
sti
div
jne
jb
xor
call
js
push
in
and
jb
jae
cmpl
incb
jne
cli
sbb
adc
movsb
jae
data16
out
shl
lods
mov
or
movsb
pop
in
adc
cli
pop
scas
fs
xor
jae
push
cwtl
xlat
mov
stos
add
dec
and
mov
add
das
add
and
dec
into
sbb
sub
lcall
jb
push
adc
xchg
pop
xor
cmp
xchg
lods
sub
pop
pop
sbb
xor
dec
sti
pop
dec
dec
sub
inc
sarb
dec
dec
jp
dec
push
in
gs
or
jmp
adc
cmp
dec
inc
nop
stos
lcall
std
inc
lock
in
ds
mov
inc
cmp
add
out
addr16
add
add
je
std
mov
rcr
sbb
add
repnz
add
or
arpl
mov
jae
sub
out
repz
xchg
clc
dec
cmpsl
jecxz
push
imul
mov
in
ss
rclb
popa
dec
fimuls
cmpsl
movsl
add
mov
repz
enter
cmp
bound
sub
jl
fwait
mov
sbb
inc
sub
push
dec
add
jae
lods
stos
arpl
enter
jl
inc
cmpsl
je
push
or
mov
inc
push
lahf
stos
shlb
pop
mov
decl
push
mov
mov
pushf
test
lods
or
in
gs
adc
pop
add
cmp
loop
ficoms
aad
dec
shlb
js
or
push
cmp
dec
sbb
cmc
dec
sub
movsl
enter
repnz
or
push
int
dec
jbe
hlt
insb
pusha
enter
test
push
dec
out
cld
or
rorl
mov
push
hlt
jl
push
pop
add
loope
es
imul
test
outsl
movsb
sbb
jle
dec
aaa
jp
stc
mov
xor
push
push
sbb
das
mov
xlat
in
pop
fadds
test
mov
sub
popf
inc
ja
sbb
pop
inc
stos
mov
xchg
aad
mov
adc
jle
cmp
gs
pop
jns
push
inc
cmp
cmpb
jo
pop
mov
in
fsubrl
push
sub
jo
outsb
stc
lret
scas
mov
pop
inc
lods
dec
cli
or
mov
xor
icebp
fmul
and
pushf
cmc
fs
sti
cmp
xor
xlat
xlat
mov
stos
loop
inc
mov
push
in
roll
rcll
or
adc
mov
sahf
shll
or
test
out
mov
into
xchg
in
repnz
sbb
loop
shlb
dec
idiv
pop
and
out
leave
pop
mov
jecxz
adc
out
cmp
push
sub
repnz
and
ja
mov
arpl
fisttps
adc
repnz
jbe
pop
popa
stos
out
std
cmp
aaa
int
mov
xor
cs
fnsave
or
lock
xchg
dec
mov
push
fisubl
inc
pop
lods
shr
xchg
dec
insl
pop
mov
xchg
adc
hlt
outsl
ficomps
rcll
xlat
int3
push
dec
sbb
out
sahf
sbb
sarl
add
outsl
insb
cltd
ds
shl
daa
xor
push
mov
sahf
mov
push
mov
mov
pop
sbb
sub
xchg
fisubrl
andl
dec
insb
xchg
sahf
aad
out
inc
les
lock
hlt
pusha
pusha
xchg
and
xchg
adc
std
cmpsb
in
push
inc
lea
xchg
out
inc
or
mov
out
mov
cmp
cmp
ljmp
mov
xor
pusha
in
mov
sahf
jo
out
leave
mov
out
shll
ret
fwait
dec
push
lea
daa
push
or
data16
aaa
mov
icebp
pop
jle
jb
add
jle
xor
mov
mov
into
mov
mov
adc
add
sbb
into
cld
fstps
repnz
in
loopne
loope
cld
inc
dec
push
jns
and
ss
pop
inc
in
pop
inc
or
push
cmp
nop
and
inc
aam
int
stos
pop
addr16
int
std
adc
ss
ret
pop
int3
push
int3
or
cmp
idiv
sarl
cld
stc
xchg
aas
or
fs
sbb
sub
cwtl
xor
dec
xchg
fcoms
add
or
add
mov
pop
sbb
int
inc
add
jne
testb
add
and
cmp
in
dec
or
fwait
xchg
push
adc
dec
and
xor
sarl
fisubs
mov
inc
jbe
popa
push
jecxz
push
xchg
js
sbb
test
in
sbb
xchg
xor
pop
inc
and
xchg
sbb
mov
mov
std
or
or
mov
sbb
lahf
xor
decb
popa
sbb
aas
es
xchg
daa
test
pop
xchg
and
flds
xchg
and
push
fs
push
leave
xor
cmp
jae
cmc
fistps
cmp
xchg
mov
mov
fisubrl
fadds
inc
dec
repz
popl
push
inc
and
pusha
mov
jp
and
fdivl
sahf
xlat
xchg
dec
andl
or
xor
ret
inc
pop
cmp
sbb
pop
add
add
add
mov
fs
lods
in
or
adc
add
add
dec
inc
jns
cmp
pushf
dec
dec
xor
cmpsl
inc
sbb
mov
lahf
arpl
push
xor
fwait
adc
addr16
add
out
stos
jne
push
xor
dec
testl
xor
inc
ss
fucomp
mov
sahf
xchg
or
dec
int3
or
push
xchg
jecxz
jmp
sarl
insl
iret
int
shrb
insl
mov
mov
xor
bound
cmpsl
pop
mov
pop
test
mov
popa
shlb
push
in
es
into
pop
cli
mov
xchg
ja
jne
test
icebp
leave
popl
and
gs
lods
mov
cmp
enter
cmc
pop
test
rorb
imul
sub
add
negl
div
out
jl
lcall
call
jle
test
bound
jae
out
divb
and
test
jnp
test
sahf
insl
xor
lahf
cltd
pop
xchg
pop
aam
pop
jb
pop
mov
rorb
inc
ret
sbb
int
xchg
lahf
js
push
pop
lods
cltd
arpl
dec
iret
fiaddl
push
dec
movsb
into
mov
mov
cmp
int3
pushf
incl
inc
adcl
dec
inc
mov
loope
out
mov
test
or
ja
sub
ljmp
shll
xchg
push
inc
test
adc
jns
pop
dec
dec
cltd
inc
cmp
outsb
inc
stos
lea
jae
sub
in
mov
mov
push
xor
out
shl
test
ja
cltd
mov
inc
fwait
sahf
in
pop
add
xor
test
inc
and
and
call
pop
push
mov
xchg
jle
dec
pop
mov
mov
cmpb
movsl
cmp
pop
sbb
outsb
fwait
dec
xor
arpl
and
jno
imul
cmc
in
and
cltd
cmc
xlat
lods
cmpsl
sbb
imul
pop
stos
inc
inc
ret
inc
sub
pop
scas
push
sbb
fstl
xor
insl
fs
fsubr
into
pusha
jb
cmp
pop
sti
xlat
pop
loopne
stos
into
cmpsb
xor
and
add
pop
and
jo
aam
das
or
je
shl
shll
push
jg
mov
and
jge
xchg
add
xchg
in
adc
lds
ja
hlt
and
incl
mov
push
push
push
pop
sbb
lret
pop
mov
cmp
lds
and
jnp
or
ror
dec
sub
stos
xchg
and
out
aad
dec
xor
clc
leave
cmp
adc
push
jmp
inc
ds
pop
cmp
js
mov
out
inc
mov
pop
xchg
jle
xchg
push
enter
ds
jo
mov
popf
or
lcall
jmp
fwait
outsb
dec
out
mov
xchg
std
sbb
sbb
aas
adcl
mov
pop
mov
rclb
xchg
cmp
mov
push
sub
pop
out
sar
fisubrs
cmpsl
add
and
decb
repnz
cmp
aad
jb
pop
push
jmp
sbb
cli
mov
jns
stos
jns
rcrb
repz
xchg
ja
push
mov
in
adc
inc
pop
jo
adc
or
std
mov
lret
cmpsb
mov
cmp
mov
mov
je
lret
mov
push
xor
mov
jne
scas
inc
sahf
and
arpl
imul
jle
cwtl
dec
adc
shll
mov
es
hlt
inc
dec
clc
lret
enter
roll
mov
negl
inc
std
in
inc
mov
lret
fadds
lods
cmp
out
cmp
fscale
inc
lret
xchg
pop
mov
les
imul
xor
nop
rol
movsl
mul
pushf
mov
pslld
sbb
mov
jg
fcoml
sti
cmp
and
push
outsl
cmp
outsl
sub
add
cmp
das
mov
jns
idivb
push
add
xor
mov
pop
xchg
fmul
xor
adcl
cmp
pop
call
xor
jo
push
dec
enter
dec
test
ss
gs
jg
repnz
pop
cmc
mov
add
cmp
push
push
jb
loope
add
add
rcrl
lock
jmp
add
add
add
sbb
add
lods
test
lods
dec
stos
cmpsl
push
add
repnz
add
sarl
jle
mov
aad
aas
arpl
xor
mov
pop
mov
bound
or
hlt
fld
add
cmp
call
in
jl
iret
mov
mov
pop
bound
cmp
push
mov
movsl
ljmp
xlat
dec
je
adc
jae
lock
cmpsl
add
sarl
sti
push
mov
int
call
cld
sbb
sbb
mov
mov
sub
push
cmpsl
scas
jns
xor
mov
sub
dec
cli
repz
in
gs
pop
mov
mov
and
fists
or
mov
mov
and
mov
adc
add
pop
in
jecxz
and
divl
jne
sbb
mov
movl
jbe
inc
push
lea
push
or
outsb
js
jl
insb
fs
imulb
test
xchg
add
or
aaa
sub
adc
cmc
ja
rclb
adc
mov
dec
xchg
bound
dec
sbb
icebp
shrl
pop
or
test
push
clc
xchg
jae
push
xchg
push
hlt
faddl
mov
addr16
dec
enter
loope
pop
mov
dec
inc
mov
fidivl
pop
or
les
mov
pusha
and
cmp
fadds
jno
xor
rcrb
mov
xchg
repz
jo
outsl
loopne
push
mov
test
or
push
xchg
or
cmpsb
dec
lea
mov
shll
mov
inc
xchg
or
aas
mov
push
xor
jmp
pop
lock
sbb
push
adc
les
popf
pop
and
les
or
lret
cmc
jns
adc
and
mov
lods
adc
push
imul
cwtl
cmp
inc
cltd
fs
fidivs
and
dec
jb
dec
cmpsl
les
sub
cs
shlb
loope
jb
pop
outsl
push
lahf
ret
push
idivl
mov
pop
lret
jae
out
add
cmpsl
xchg
orb
outsl
cmp
adc
and
push
mov
lea
jbe
das
mov
out
rcrb
mov
ja
ja
mov
push
lock
nop
call
push
outsl
cmc
xchg
icebp
lahf
fnstsw
insb
push
cmpsb
add
pop
adc
aaa
std
and
fnstenv
or
cmp
mov
sbb
idivb
pop
arpl
xlat
cmpsl
arpl
and
rcrb
inc
imul
and
scas
and
test
cmp
xchg
out
dec
mov
cwtl
pop
popf
cli
arpl
mov
jmp
fsts
sbb
sub
or
add
jno
xchg
leave
and
adcl
dec
out
std
pop
and
loop
lahf
dec
mov
jne
stos
add
inc
pop
iret
sbb
pop
dec
add
and
jg
jno
scas
int3
or
mov
vpshufhw
mov
out
rcl
mov
adc
das
mov
adc
gs
loope
mov
imull
jecxz
ss
test
mov
in
pop
push
insb
imul
outsb
inc
push
aad
pop
stos
cmp
shll
cmp
jo
hlt
ljmp
cmp
fildll
int
or
rorb
scas
gs
nop
or
mov
fstl
ret
cld
jge
sti
mov
mov
clc
pop
hlt
cmp
mov
fsub
inc
fwait
jge
push
sub
scas
cwtl
fidivs
pusha
sub
pop
add
cli
jmp
sbb
icebp
jbe
inc
push
ds
or
add
in
mov
loopne
lods
add
icebp
inc
cmp
sub
dec
xlat
sbb
cmp
in
mov
hlt
sub
clc
add
test
and
lahf
scas
sbb
jae
xchg
push
mov
push
in
leave
cltd
pop
int3
sub
fmull
push
cmc
inc
push
add
cs
aad
mov
jl
stos
fldlg2
movsb
rcrb
cli
lds
lret
lds
pop
mov
addb
inc
inc
adc
xlat
mov
popa
jmp
cmp
xlat
jecxz
xchg
and
adc
inc
pop
pop
sbb
pusha
ja
or
call
mov
add
add
add
dec
outsl
je
jne
pop
outsl
out
aaa
jae
daa
ret
addr16
cltd
and
add
add
add
add
mov
gs
pop
rol
mov
jno
xchg
adc
aam
mulb
inc
fisttpl
insb
lret
popa
popa
ljmp
pop
inc
push
mov
outsb
fidivs
jge
ficoms
push
mov
sbb
aaa
mov
dec
mov
repnz
aam
jmp
and
lcall
dec
loopne
in
mov
and
out
lret
add
adc
and
or
push
mov
in
int
rorb
sbb
sbb
shrb
adc
enter
adc
loopne
fwait
inc
bound
xchg
mov
dec
outsl
lods
and
fisttpll
xchg
imul
popf
pop
dec
sub
push
fisubrs
mov
rcr
aad
add
daa
rol
push
mov
movb
out
cmc
xchg
insl
mov
in
shlb
xor
lods
fwait
or
loopne
push
xlat
sub
fbstp
loopne
mov
out
mov
and
pop
sti
jb
sub
mov
xchg
lcall
ret
adc
fstps
mov
mov
xchg
and
xchg
scas
ds
mov
mov
rcrl
push
jl
xchg
cmp
lods
gs
cmp
cmp
and
fcompl
pop
jp
jne
cltd
push
inc
xor
pop
mov
into
inc
xchg
xor
pop
sub
shlb
pop
imul
leave
cmp
shll
test
in
sub
cmpsb
adc
pop
scas
xchg
mov
xor
int
jl
bound
cs
and
out
popf
pop
aam
cmp
fnstcw
out
aam
or
push
out
add
int
div
test
add
mov
jmp
scas
jg
pusha
mov
push
push
fwait
xchg
fistpl
mov
movb
adc
and
fmuls
mov
ds
xor
sbb
arpl
fwait
push
push
cmp
push
icebp
sub
out
sbb
sbb
ficoms
sbb
sub
sbb
inc
lret
jmp
insl
mov
cmp
or
mov
in
jmp
outsl
and
test
or
aaa
daa
pop
mov
jl
sti
je
push
xchg
pop
fdiv
iret
sbb
repz
jne
add
frstor
add
repnz
jge
movsb
ds
xor
mov
cmp
stc
or
mov
cmpb
sarb
adc
xchg
pop
dec
push
sub
pop
or
xlat
fisttps
pop
stc
cmp
adc
push
ret
outsl
mov
std
subl
shrb
jns
push
out
mov
sub
pop
rorl
mov
insl
sub
xor
jl
pusha
xchg
hlt
xchg
mov
add
add
sbb
repz
inc
data16
and
add
stc
scas
mov
arpl
xlat
push
add
gs
fisttps
and
sub
fwait
mov
mov
mov
pop
sub
addb
xchg
jne
xchg
addr16
in
and
mov
mov
out
stos
adc
sub
shlb
neg
mov
pop
pop
stc
rcll
clc
mov
mov
mov
popf
push
aam
jbe
mov
add
ret
or
ja
ljmp
test
mov
inc
xchg
mov
xorl
sub
iret
pop
pop
repnz
jecxz
dec
xor
subb
insl
std
jl
sahf
xchg
adc
in
mov
cmp
fs
loope
int
pushf
xor
add
loop
cmp
sahf
pop
dec
into
sub
pop
dec
lods
clc
and
cmp
dec
sbb
ljmp
movsb
stos
jecxz
jb
into
mull
pop
leave
cmp
jp
pop
push
mov
jbe
dec
test
loope
push
hlt
xor
and
loop
xchg
mov
mov
xor
push
or
lods
mov
add
sahf
push
sbb
xor
inc
fists
pop
cmp
mov
stos
mov
ficoml
iret
test
mov
jo
mov
jno
movsl
sbb
fs
xor
je
pop
lods
in
dec
cs
arpl
sbb
mul
pop
ljmp
adc
mov
cmpsl
xor
clc
mov
pop
and
push
int3
inc
cmp
add
add
add
ss
std
iret
cmp
cld
jp
data16
sub
add
add
add
popa
add
xor
mov
ret
inc
dec
movzbl
loopne
add
rcrb
jecxz
cmp
xchg
outsb
and
test
sub
pop
loope
scas
inc
mov
sub
and
cltd
scas
mov
fldl
movsb
out
adc
push
scas
dec
repz
mov
mov
push
cmp
cmp
xchg
out
ret
dec
movsl
add
aaa
stos
pop
call
sub
ljmp
sub
sub
cltd
jns
push
mov
out
sbb
cmp
mov
clc
push
sub
pushf
mov
shlb
fbld
pop
jl
testb
test
adc
sub
xlat
je
aad
std
mov
cltd
pop
add
stos
jno
sub
xor
int
push
ljmp
cmp
fistpl
test
dec
sahf
insl
test
pop
inc
sub
push
jo
jns
movlps
and
push
testb
stc
jmp
shll
push
shrb
imulb
sub
sub
lods
scas
lods
dec
outsl
and
ss
lret
push
sub
lcall
sub
push
jge
popa
nop
pop
sub
cmp
jns
enter
pop
fbstp
or
fs
call
movsb
add
sbb
cmpsb
pushf
adc
dec
xor
push
mov
inc
notb
sbb
jb
sbbb
xlat
or
jg
scas
lcall
repnz
add
inc
inc
iret
std
push
lret
sub
sbb
lahf
xchg
insb
xchg
daa
jl
cmpsl
cs
movsb
sbb
add
mov
xor
push
cmp
aad
test
mov
jmp
adc
pop
sbb
das
mov
add
iret
lahf
ljmp
add
sbb
in
push
xor
push
add
xlat
imul
scas
push
hlt
jge
add
aad
sti
mov
call
lahf
xchg
ret
out
fidivrl
outsb
enter
pop
addr16
push
adc
adc
or
mov
rcll
mov
add
aas
lret
fdivs
or
nop
sbb
mov
out
repz
clc
xor
imul
mov
ret
pop
insb
into
outsl
pop
pshufw
lods
xchg
imul
dec
adc
leave
stos
adc
bound
adc
bndldx
push
dec
cmp
mov
outsb
lahf
xchg
test
mov
std
stos
push
insl
fcompl
sti
ret
xchg
inc
mov
gs
rcl
push
add
test
icebp
lock
jne
movsb
dec
jge
ljmp
inc
outsl
add
cmp
fwait
pusha
out
hlt
mov
xor
and
adc
jmp
add
mov
cmp
mov
inc
mov
mov
pop
adc
aad
gs
inc
push
xlat
mov
cmp
and
adc
imulb
repnz
and
addr16
stc
cmp
add
idivl
hlt
dec
push
shrb
pop
mov
in
test
fisttpl
xlat
xor
fcomps
xchg
push
fnstsw
adc
cmp
icebp
in
push
push
shl
les
inc
fldt
movsb
jg
cwtl
outsb
dec
and
adc
push
out
out
xor
jg
push
jecxz
pushf
adc
fildl
add
mov
pop
aad
hlt
xchg
add
shrl
cmpsb
mov
add
sahf
test
push
in
movsl
xchg
mov
jl
and
pop
cmp
jl
test
stc
call
jb
mov
and
icebp
mov
out
xor
les
push
fstpt
or
gs
or
lcall
xchg
pop
out
mov
cmp
mov
fdivs
sub
xchg
sub
inc
cltd
and
push
xchg
cmpl
xchg
push
fdivrl
call
mov
ffree
addl
or
and
add
mov
sti
cltd
sub
lret
les
pop
xorl
movsb
or
icebp
in
push
push
rcrl
or
xor
mov
inc
mov
xorb
or
add
adc
sub
and
and
xchg
rclb
lds
mov
sub
lods
int
das
inc
mov
outsb
in
fnstcw
fbstp
jmp
add
cld
es
mov
jmp
fdivrp
inc
sbb
dec
jge
add
repnz
add
and
jge
cwtl
stos
icebp
lods
jp
lahf
sub
xchg
push
add
imul
pusha
int
xchg
sub
mov
mov
push
or
mov
shl
out
cltd
add
jno
xchg
out
shl
pusha
mov
inc
or
test
ret
fsubrs
sbb
fucomp
jl
iret
adc
fs
addr16
orb
daa
cmp
adc
jae
fisttpll
add
push
adc
mov
sti
ja
mov
movb
mov
arpl
sbb
icebp
ret
mov
test
lds
and
mov
adc
dec
or
jl
jmp
movsb
inc
xchg
jae
sub
pop
inc
sbb
jne
inc
add
movsb
cmp
adcl
mov
int
popa
in
bound
and
dec
sub
je
hlt
adc
or
push
lea
mov
pushf
sbb
pusha
mov
inc
clc
shr
loopne
xor
mov
or
pop
out
or
divb
cmp
mov
rorl
xchg
jae
shlb
ja
inc
into
adcb
pop
shlb
push
jb
pop
cmpsl
lret
arpl
cmp
sub
mov
inc
in
sub
mov
cmp
add
aam
inc
add
pusha
or
sbb
pop
lods
and
cmp
push
es
scas
pop
mov
fldl
or
dec
ss
xchg
push
dec
mov
out
aad
cmp
dec
dec
jnp
push
pop
fstpl
jno
jle
lret
out
fsub
aad
or
inc
mov
popf
or
or
fldt
popf
dec
xor
ljmp
mov
jo
pop
jb
into
testb
ret
lock
or
mov
lret
bound
pop
xchg
cmc
mov
mov
mov
pop
jle
lods
call
xor
pop
and
jle
mov
test
lock
arpl
mov
lock
add
das
mov
or
mov
jnp
js
push
add
xchg
add
xchg
dec
dec
movsl
and
sub
leave
xchg
mull
sub
lret
dec
dec
xchg
lret
repz
enter
jecxz
stc
push
repnz
hlt
mov
inc
push
std
lret
push
jns
lea
nop
mov
jle
movsb
cld
dec
in
ds
inc
sub
mov
dec
jle
incb
inc
mov
cmp
fiaddl
jmp
movsl
and
mov
xor
push
sti
cmp
ja
xchg
mov
pop
mov
cmp
inc
inc
and
cli
inc
int
dec
mov
or
jno
in
inc
xlat
dec
mov
jbe
mov
xchg
pop
sbb
cmp
in
jg
aas
enter
push
mov
gs
mov
repnz
ficoml
mov
stos
adc
fmul
mov
jg
sti
mov
cmp
je
popf
xchg
inc
andl
dec
or
mov
push
fwait
mov
out
sti
shlb
pop
xor
out
mov
testl
enter
imul
push
add
or
popf
cld
push
pushf
sbb
pusha
mov
lahf
mov
push
sub
pop
jl
jbe
lock
in
cwtd
aad
adc
shlb
mov
push
mov
dec
dec
xchg
cltd
dec
rcrl
mov
out
lea
ficoml
sub
clc
sbb
jae
push
iret
insb
mull
jg
popf
xor
testb
jb
push
sub
xchg
jl
ret
in
shlb
pop
inc
pop
in
cltd
mov
insl
data16
insl
jno
add
fs
cmp
and
cmpsl
add
mov
stc
or
imul
push
and
or
mov
lea
ljmp
push
hlt
addb
ror
inc
inc
inc
jmp
cmpsl
jo
mov
jne
mov
dec
mov
add
int
jge
andl
loope
fadds
adc
out
nop
ja
xor
dec
test
mov
movsl
add
add
add
aaa
sti
addr16
out
fidivs
outsb
push
stc
mov
xor
add
add
add
xchg
mov
adc
lods
dec
jp
jae
jmp
add
and
sahf
fsubr
xor
fisubl
adc
fisubrl
add
test
sub
push
and
punpcklbw
stc
pop
test
sahf
mov
ss
pop
insb
push
cmp
sub
daa
xchg
pop
fwait
leave
fxam
mov
mov
pop
loop
push
int
jl
and
dec
fcoms
lds
fildll
xor
loopne
or
outsb
cld
test
mov
sti
dec
ljmp
and
mov
ja
xor
cmp
popf
scas
fwait
add
clc
frstor
flds
cli
es
pop
push
mov
sub
ret
pop
mov
cmp
lret
sti
xchg
pop
in
push
movsl
jmp
lods
lods
test
cmpsl
mov
sub
adc
iret
mov
cmp
xchg
int3
push
lods
jecxz
xchg
inc
dec
lods
clc
add
push
sti
cltd
out
xor
aam
icebp
or
pop
pop
jae
dec
fs
call
movsb
inc
cwtl
dec
jae
cmp
add
or
ljmp
insl
aam
fcomi
fcomps
push
repz
sub
or
adc
inc
scas
add
jnp
mov
xor
cs
mov
sub
pop
lret
add
inc
loop
out
mov
mov
testb
jno
mov
std
cmp
xchg
shrl
push
sub
cld
lds
pop
inc
fldenv
outsb
pop
popf
mov
sub
mov
pusha
fsubl
cs
or
fdiv
fiaddl
add
mov
fsubrl
adc
jo
sbb
int
hlt
ficompl
mov
push
movsl
fistl
or
out
in
dec
sub
cmp
or
xor
pop
xchg
xor
call
sub
adc
lret
xchg
push
jne
jno
pusha
dec
call
push
and
xor
out
inc
push
xor
cmp
or
sahf
call
lods
aad
inc
jbe
inc
adc
adc
push
data16
mov
xor
pop
push
lret
aam
cwtl
dec
pop
cmp
or
sets
xlat
es
mov
pop
push
and
vshufps
mov
bound
ss
dec
xor
loopne
and
int3
ret
or
dec
pop
lods
xchg
cmp
insl
pop
arpl
sub
sahf
sbb
ljmp
xor
or
and
js
dec
fldl
hlt
call
out
xor
push
mov
xor
cmp
jmp
and
sub
sub
test
testb
idivl
daa
lret
cmp
sub
jp
add
pminsw
add
shrb
and
jl
cli
aad
or
gs
es
iret
pushf
jo
or
cmpsb
dec
daa
cld
cmp
cmp
mov
lods
or
jno
shll
jnp
mulb
sub
pusha
addr16
push
cmp
mov
js
js
push
mov
dec
negl
mov
cmp
rcrl
add
xor
cmp
nop
add
filds
inc
shl
pop
popf
js
aaa
jge
test
jg
pop
into
dec
stos
hlt
mov
push
mov
cmp
hlt
ljmp
sub
and
adc
xchg
sbb
inc
dec
ljmp
and
push
iret
dec
popa
stc
xchg
jecxz
inc
push
mov
hlt
inc
test
add
fadd
push
scas
test
sub
jp
outsl
addb
in
pushf
fwait
xchg
leave
aad
ror
fwait
xchg
jb
push
xor
stos
imul
fsubrs
mov
repz
ficompl
xor
pop
jmp
adc
iret
out
adc
fnstsw
repnz
lock
sti
ss
jae
fsubl
outsb
mov
jecxz
das
inc
jmp
xchg
mov
add
mov
mov
fdivs
lock
das
ja
or
lds
les
adc
mov
sub
ret
dec
hlt
fs
push
push
pop
aad
push
shlb
adc
mov
hlt
cld
add
add
add
out
sbb
repz
popf
shll
aaa
add
repnz
add
out
aad
scas
dec
out
xor
lea
xchg
jmp
cmpb
push
dec
in
cmpl
mov
mov
jmp
sub
fdiv
cmp
sti
stos
rcrl
jle,pt
mov
mov
sbb
inc
and
jge
in
jb
insl
xchg
or
lahf
sub
sub
mov
xchg
aas
movsb
insl
repz
iret
xlat
into
insb
xchg
pushf
cs
add
loop
sbb
adc
and
fucomi
add
push
lret
orl
adc
mov
lahf
out
fwait
ds
int
jg
cmc
sbb
mov
cmp
scas
test
push
xor
test
stc
xor
cs
jne
sti
inc
aam
loopne
cmp
popa
rolb
andb
pop
cld
stos
adc
mov
int3
adc
fwait
sbb
gs
sarl
jbe
cld
sbb
dec
ss
rorl
inc
rorb
lods
inc
fwait
movsb
adc
inc
or
jp
push
jg
pusha
out
test
fwait
push
lret
push
das
fldenv
arpl
ljmp
lcall
cld
rcll
mov
iret
xlat
imul
fsubrs
xor
sbb
adc
push
int3
je
mov
inc
mov
pop
ja
shlb
sbb
fnstenv
jp
outsb
dec
add
std
lea
add
mov
fdivrl
cmp
negb
lods
test
xchg
and
fldl
or
js
in
sbb
sbb
aas
js
sbb
frstor
enter
idivb
xor
pusha
mov
jmp
ljmp
imul
jne
lds
pusha
repnz
lock
dec
sbb
pushf
pusha
sti
pop
mov
andb
sahf
imul
adc
or
shll
shrb
pop
in
cmp
adc
push
ja
movsb
test
mov
lcall
sbb
cmpsl
out
lods
aas
push
and
xor
mov
lods
bound
adc
push
sar
jl
mov
mov
jae
adc
fs
int3
inc
lea
xchg
mov
dec
movsb
imul
or
mov
xchg
xchg
mov
out
addr16
mov
jnp
mov
dec
aas
mov
maxps
xchg
lods
out
cwtl
push
cltd
jns
mov
mov
adc
lods
add
shr
aaa
add
lahf
je
inc
inc
lea
imul
faddl
sbb
ja
mov
cmc
hlt
and
mov
sbb
sete
pop
mov
sbb
cwtl
cwtl
xchg
sub
movsb
imul
dec
cmp
test
fnstcw
imul
out
test
popa
cltd
cmp
mulps
mov
adc
cmp
mov
cli
inc
es
lcall
mov
int
xchg
shlb
loope
jae
or
mov
pusha
inc
push
add
dec
pop
lds
out
dec
orl
xor
jmp
push
cld
pop
pop
pcmpgtd
push
pop
subb
add
sahf
mov
cmp
int
xor
sbb
push
sbb
adc
enter
pop
push
addr16
xchg
out
or
and
and
stc
push
mov
jg
cltd
cmp
mov
xor
cli
jb
xor
fs
int
ret
mov
stc
mov
dec
in
std
jo,pt
jns
xor
inc
mov
movsl
mov
jnp
test
repnz
pxor
je
lcall
roll
mov
out
jmp
clc
cmp
mov
insl
sbb
pop
into
inc
cmp
xor
push
sbb
jle
and
push
adc
cmp
or
or
in
or
or
xchg
call
inc
adc
test
pop
inc
aas
stos
sub
mov
call
lahf
call
std
sbb
push
test
pop
ljmp
hlt
std
dec
dec
sahf
adc
movsb
mov
scas
stc
mov
outsl
inc
cmp
add
xchg
dec
rol
mov
mov
mov
mov
mov
and
adc
out
sahf
jae
jmp
cs
cmp
push
jp
add
add
add
mov
out
out
mov
dec
inc
arpl
cmp
add
add
add
roll
jns
dec
cwtl
and
push
push
sarb
pusha
stos
pop
pop
pop
ret
iret
cmpsl
test
adc
mov
lods
xchg
imul
sbb
adc
sbb
in
xchg
xorl
cmpsb
repnz
test
inc
jp
ja
leave
inc
es
loopne
cmp
loope
arpl
leave
jo
and
in
adc
call
adc
mov
pop
lret
daa
in
pop
popa
jmp
or
test
mov
nop
rolb
adc
push
push
pushf
pop
mov
mov
add
xor
js
mov
int3
sub
jle
inc
pop
out
xor
push
cwtl
mov
xchg
adc
pop
inc
sbb
push
or
mov
or
dec
adc
in
int3
and
pop
dec
ret
and
fcmovnbe
cmpsl
pop
ja
add
dec
sti
push
scas
jns
aaa
sbb
xor
or
push
nop
or
les
push
mov
xor
mov
mov
mov
lea
jae
cs
cmp
push
fildll
sbb
mov
and
hlt
dec
mov
push
cmp
cmp
fidivrs
cmpb
add
into
mov
mov
cmp
pop
pop
icebp
pop
in
adc
lcall
movhps
dec
mov
jmp
dec
sbb
ss
inc
bnd
outsb
sbb
das
leave
scas
das
stos
adc
push
xchg
jle
je
sbb
sub
mov
fsubr
cmp
flds
ds
outsb
std
lahf
xchg
test
cmp
cld
pop
lods
popf
cli
orb
loop
pop
xchg
addb
add
insl
sbb
icebp
rclb
repz
and
push
push
jb
lods
outsb
and
int
dec
nop
push
lods
stos
jo
loope
ja
inc
inc
stc
out
mov
dec
push
incl
seto
or
jne
out
lea
adc
loopne
xor
rep
mov
popf
push
xor
int
xchg
lds
xor
mov
pusha
mov
lahf
or
xor
pop
aam
in
movsb
xor
dec
fnsave
fwait
and
push
mov
inc
pop
pop
lcall
mov
mov
pop
mov
fcomip
add
inc
push
mov
push
mov
add
and
popf
cli
popa
push
repnz
fistps
pop
ljmp
sbb
dec
pop
lea
sbb
sahf
sub
jecxz
ficoml
jecxz
xchg
mov
xchg
ficoml
mov
push
jge
pop
jo
les
xorl
cmp
and
xor
push
fnsave
ds
dec
mov
pop
add
or
pop
int3
push
inc
ja
xor
test
aad
fcoms
sbb
sbb
ds
mov
dec
cmp
mov
push
push
and
mov
inc
push
add
jmp
rclb
stos
cmp
test
mov
std
lret
ret
ret
rcr
jmp
mov
push
gs
cltd
lahf
jno
inc
xor
sbb
jg
test
daa
into
pop
sub
mov
mov
xchg
xor
inc
lret
xchg
lods
enter
fs
mov
hlt
add
xchg
ds
pop
mov
in
imul
adc
pusha
in
lcall
test
push
lods
stos
cmpsb
pop
cmp
dec
popf
leave
mov
fwait
in
inc
and
pop
call
mov
sarb
popf
mov
cli
sbb
xor
addr16
sub
sti
mov
push
cltd
popf
test
lea
popa
mov
into
lret
std
sti
dec
leave
sub
dec
addr16
scas
stc
mov
ror
jae
xor
ja
fisubrl
adc
mov
lret
call
and
enter
and
je
bound
and
mov
jmp
dec
push
ficoml
dec
push
scas
jns
dec
jno
jb
and
pop
out
shr
cmp
ljmp
and
scas
insl
shl
jae
aaa
sbb
out
or
imul
push
inc
cmpsl
jns
std
mov
mov
lcall
sub
or
shll
jae
loop
addr16
add
add
add
adc
dec
negl
mov
pop
mov
add
repnz
add
popf
aaa
daa
pop
mov
fcoml
inc
push
adc
and
or
push
push
in
sub
cli
cmp
cmp
lret
sub
aas
and
push
sub
ffreep
ror
mov
test
fmuls
lret
push
pop
js
push
addr16
rcrl
push
pop
into
cmp
rorb
lret
mov
inc
pusha
xchg
push
daa
cs
inc
jl
fs
out
xlat
adc
mov
fmuls
adc
lds
es
xor
xchg
popf
dec
cli
aad
mov
lods
mov
lret
xor
clc
orb
gs
mov
and
inc
sbb
mov
daa
movsl
cmc
mov
cli
add
into
mov
or
pop
mov
fs
sbb
pushf
sub
add
cltd
mov
mov
andb
push
imul
mov
sbb
cmpl
imul
test
sbb
xchg
shrb
sti
cltd
insl
pop
pop
or
xchg
xchg
shr
xchg
stos
aaa
popf
dec
sbb
cmpsl
mov
subb
adc
cmp
mov
test
js
mov
enter
insl
nop
mov
fucomip
mov
jp
cmpsl
xchg
push
xor
cli
insl
daa
lret
xor
pop
xchg
das
fbstp
in
das
mov
cmc
sbbb
clc
sub
lahf
pop
in
lret
push
cmp
js
jns
push
jnp
add
sbb
inc
sbb
push
sbb
mov
jno,pt
ljmp
dec
leave
pop
mov
jmp
jnp
dec
fldcw
lods
ret
fldenv
push
pop
xchg
loopne
aas
call
xlat
aaa
xchg
xchg
dec
push
imulb
popa
insl
sub
scas
loope
imul
cmc
push
daa
cli
jnp
ja
or
push
lods
addr16
jns
es
repz
push
notl
repz
mov
pop
add
repnz
or
adc
xor
lahf
push
mov
dec
movsb
sbb
cli
dec
mov
test
stos
test
adc
xchg
mov
andl
testb
xchg
dec
dec
test
push
lret
les
adc
dec
mov
push
orb
xchg
sarb
aam
jl
jg
in
mov
out
aas
and
std
mov
pop
imul
push
cmp
and
imul
sbb
push
out
mov
push
dec
mov
inc
jl
cmp
dec
cmp
sbb
repz
xor
jecxz
pop
add
aas
or
jecxz
lret
xchg
jo
out
repz
mov
pushf
mov
cmp
cld
mov
cltd
push
xlat
stos
popf
jnp
cmpsl
inc
roll
stos
out
test
xchg
fucomip
pop
sbb
sbb
pop
jp
movsl
mov
sbb
and
aas
push
sbb
xchg
jge
pop
in
inc
push
scas
jb
mov
jle
idivb
add
fs
fdivs
scas
insl
mov
aad
mov
sahf
out
daa
xlat
sub
mov
and
insl
mov
cmpl
out
xchg
cmp
cmpsb
pop
idivb
add
adc
lret
insl
bound
or
mov
mov
xor
imul
mov
push
lods
sbb
mov
data16
aas
mov
test
pop
cmp
pop
lods
sbb
mov
xchg
in
and
mov
inc
dec
in
fucompp
push
ss
mov
sub
rcrb
pop
push
pop
into
mov
pop
mov
dec
cli
xor
sbb
ds
xlat
xchg
dec
dec
aas
and
outsl
mov
cwtl
popf
sbb
push
aaa
jne
insl
xchg
rcr
and
push
ljmp
mov
popf
std
data16
mulb
lahf
dec
cmp
dec
loopne
lahf
mov
push
sub
scas
jp
fs
inc
les
je
jle
bound
into
cmp
in
xchg
fstl
subb
clc
fcomp
push
scas
sub
pop
mov
add
cwtl
in
cld
fsts
inc
lods
adc
sub
inc
jp
out
push
cmp
stos
jecxz
scas
lahf
jge
xchg
clc
sub
aam
aas
mov
lret
cmp
and
adc
fs
mov
add
add
add
in
mov
fdivp
cld
ds
daa
cmp
mov
add
repnz
add
jp
data16
and
pop
push
push
adc
pusha
int3
filds
std
and
ja
js
or
push
stc
imulb
insb
mov
or
mov
fadds
addb
adc
mov
hlt
repz
xchg
push
movsl
lret
pop
add
xor
icebp
pushf
mov
fcmovu
mov
mov
std
pusha
into
les
pop
adc
add
scas
lahf
hlt
loop
inc
hlt
mov
pop
jne
jne
xor
jl
adc
in
pop
popa
mov
nop
insb
xlat
pop
sub
add
mulb
or
scas
in
fwait
aas
mov
jle
sti
inc
aaa
ds
cwtl
add
mov
test
outsb
sti
jo
inc
icebp
mov
or
sti
jno
cltd
hlt
xor
fwait
xchg
mov
xor
or
mov
push
es
repnz
mov
pop
cmpsb
sub
push
mov
cmp
in
dec
dec
or
ss
bound
ficomps
js
insb
dec
icebp
ds
xor
add
mov
enter
aas
pop
aam
push
or
dec
clc
cmp
aam
mov
mov
gs
mov
orb
inc
repz
ds
bound
fimuls
jl
xor
or
mov
nop
mov
es
stc
xchg
add
pop
lock
push
lahf
fwait
lds
cmp
and
xchg
scas
xchg
shl
stc
idivl
push
andb
mov
mov
cltd
loopne
pop
push
add
out
add
popf
dec
clc
mov
fs
dec
rolb
jp
inc
rcrb
sub
bound
mov
mov
test
lds
repz
cmpsb
mov
inc
fisubs
repz
enter
xchg
cld
adc
pop
jb
and
xchg
out
sub
pop
inc
aaa
add
jbe
out
cmp
std
outsl
sbb
mov
lods
cmp
shlb
jmp
jae
call
dec
sub
sbb
jns
inc
out
lret
jno
pop
test
inc
dec
xchg
xlat
fcoms
call
insb
ret
mov
or
push
sbb
adcb
or
ret
xor
mov
push
adc
fwait
stos
lea
jge
daa
and
test
mov
xor
outsb
mov
or
stos
inc
out
jo
daa
xor
das
aaa
jmp
xchg
sti
sti
loop
or
imull
clc
and
xchg
xchg
inc
xchg
es
jno
aas
lahf
out
sub
inc
adc
add
mov
pop
ret
lods
and
sbb
popf
fnstenv
cli
fsubrp
sarl
shll
mov
mov
mov
push
mov
mov
push
mov
ljmp
jne
inc
push
loope
xor
mov
pop
jmp
out
add
dec
aaa
fsubrs
nop
insl
sbb
cli
and
cmp
or
mov
aas
inc
sbb
mov
int3
mov
mov
inc
lret
or
mov
stos
pop
mov
or
movsb
xchg
movsl
mov
jp
jp
push
and
fidivrl
push
pop
xor
adc
or
loopne
cwtl
rclb
into
sub
mov
xlat
cmpsb
mov
aaa
or
inc
rclb
mov
aad
orl
xor
movsb
dec
sub
repz
add
icebp
pop
add
jmp
sub
inc
out
iret
pop
por
and
insl
and
mov
lcall
repnz
loop
sub
mov
outsl
lret
std
ret
sub
rolb
xchg
mov
pop
inc
add
pop
iret
pop
sbb
sbbb
jp
sahf
cmc
jno
add
sub
clc
mov
sub
nop
dec
push
jae
fcoms
and
sub
bswap
push
pop
jnp
ljmp
movsb
mov
in
decl
incb
dec
mov
out
fistpll
insb
aad
loop
pop
jo
add
loope
pop
fnclex
cld
out
rcrl
jl
movsb
mov
std
repz
xor
push
adc
xchg
pop
sbb
or
push
shll
pop
mov
push
or
rcrl
mov
or
xchg
test
cltd
lahf
inc
sbb
scas
jp
adc
and
mov
add
add
xor
jg
sbbl
sub
add
add
add
testl
or
xor
dec
or
push
lds
push
test
stos
pop
push
push
xor
fnsave
sub
push
cmpsl
les
xorl
dec
out
mov
fsubrs
notl
enter
jle
mov
jns
mov
fmul
ret
xor
rcll
add
inc
les
sbb
sub
jnp
mov
cmp
data16
xchg
push
mov
xor
jmp
add
jno
scas
mov
and
in
int
bound
nop
sahf
out
sahf
int
adc
dec
aad
jle
or
xchg
pop
or
ret
aam
mov
clc
pop
out
repnz
mov
mov
adc
rolb
cmpsb
enter
or
sbb
mov
mov
pop
or
mov
leave
out
push
xchg
xor
iret
test
mov
outsb
push
insl
and
sub
push
rclb
push
push
es
loop
aad
xchg
inc
ror
jl
rolb
jmp
dec
push
in
xor
pop
fidivrl
test
outsb
jmp
push
das
testb
inc
int3
out
jb
ret
inc
mov
nop
adc
mov
jmp
push
xor
xor
cs
leave
and
outsl
add
lock
sub
std
cmp
add
aaa
pop
adc
jns
pop
ret
sbb
leave
addr16
mov
dec
push
jbe
pop
sbb
out
and
stos
repnz
mov
inc
mov
pop
aam
inc
mov
ror
outsb
imul
hlt
dec
xchg
testb
clc
gs
mov
fdivl
adc
bnd
mov
cs
cli
jecxz
mov
xor
sbb
mov
popa
lret
add
nop
arpl
lahf
lods
dec
xchg
mov
xchg
ja
jo
shrl
inc
pusha
pop
push
stos
push
mov
popf
pusha
pop
sbb
loopne
outsb
xor
repz
dec
mov
aam
inc
push
inc
ss
mov
push
outsl
popa
cmc
push
popf
and
cmp
test
push
inc
mov
inc
shll
jo
dec
pop
or
mov
rcrl
mov
ret
sbb
pop
pop
in
sbb
sti
shll
xchg
pop
ds
pop
sub
xor
adc
and
and
xor
sub
pop
scas
out
in
in
lahf
jns
sub
orb
dec
lods
mov
sub
ret
cmpsb
and
push
out
sub
lea
push
mov
addb
bound
inc
imul
fcompp
ds
ss
jp
arpl
es
sub
sub
push
pop
std
clc
cmpsb
leave
jb
mov
out
adc
scas
mov
jg
adc
mov
mov
push
testl
test
jae
loop
shll
adc
test
pop
sub
or
cld
in
jnp
dec
pop
sub
aaa
or
in
jns
cld
mov
and
dec
aaa
gs
pop
clc
stos
cmp
xchg
push
mov
int3
incb
pop
or
insb
adc
add
lahf
insl
cmp
nop
rol
repz
fstl
out
adc
lea
cmp
dec
enter
addr16
jne
lahf
cmpsl
pop
push
ds
pop
cmp
sub
scas
clc
cltd
dec
mov
cwtl
lea
in
fstps
sahf
sbb
fidivrl
fidivl
pop
mov
jl
sub
sbb
dec
jg
roll
mov
pop
cmc
push
dec
jb
subb
jae
adc
rcll
jbe
jle
mov
jecxz
in
push
inc
dec
sub
jmp
jnp
lret
mov
sub
pop
sbb
dec
xchg
sub
mov
pop
daa
test
pop
mov
data16
adc
jecxz,pt
cwtl
cmp
fsubs
pop
aad
sbb
leave
cmpsl
inc
shrb
and
add
jnp
movsl
sbbb
lcall
cwtl
push
mov
das
rcr
in
adc
push
aad
sarb
arpl
sbb
sub
leave
fiaddl
pushf
xor
add
dec
loop
and
or
cmpsb
je
xor
mov
dec
sub
je
xor
jb
cmpsl
dec
fldl
jg
dec
inc
loopne
dec
mov
rolb
ljmp
add
or
xchg
jmp
adc
pop
adc
paddq
push
add
repnz
add
mov
inc
inc
insb
sub
push
xor
and
repnz
lods
push
out
pop
ljmp
pop
sub
nop
xor
push
ljmp
mov
adc
out
push
inc
push
mov
add
je
sub
inc
jo
ret
and
mov
pop
push
rolb
jno
and
mov
xchg
stc
daa
pop
and
int
xchg
mov
mov
fstps
pop
mov
xorb
lods
sbb
adc
in
outsb
scas
pop
or
shlb
mov
sahf
movsl
jmp
push
popaw
mov
sub
jnp
adc
test
mov
iret
call
out
lock
push
cmc
xor
dec
add
fmulp
aaa
pop
xor
aad
dec
sub
pop
jae
andl
mov
sbb
js
lahf
sbb
xchg
sbb
jmp
outsb
imul
adc
push
stos
pop
std
mov
push
pusha
outsb
repz
and
and
add
into
mov
jp
jns
push
leave
mov
pop
popa
or
jl
in
add
mov
xchg
int3
popf
cld
pop
pop
push
push
sahf
mov
cmc
sarl
xchg
jnp
dec
sbb
pop
lcall
clc
or
inc
push
jl
mov
jno
dec
ljmp
cmp
sbb
sub
addr16
dec
lahf
xchg
bound
mov
stos
cltd
ja
adc
xchg
mov
ds
push
shll
dec
add
and
sbb
xor
data16
push
xchg
scas
cli
out
jb
gs
data16
int3
rcll
sahf
or
mov
xchg
push
out
test
shlb
into
mov
push
insl
das
fstl
ljmp
push
and
cmc
sub
sbb
or
sub
dec
ret
sbb
cmc
xlat
daa
fiaddl
data16
push
jns
adc
mov
adc
pop
aad
sbb
lock
sti
cmp
dec
cmpsl
pusha
ret
xchg
and
xor
scas
add
data16
and
push
adc
mov
adc
pop
cmpsl
shlb
ja
xchg
test
icebp
adc
push
push
xchg
xchg
lahf
leave
cmp
mov
jmp
jbe
and
lahf
push
daa
jle
dec
pop
mov
outsb
dec
or
mov
int3
cltd
sbb
fstl
lods
jns
stc
and
add
dec
push
cld
into
xchg
mov
dec
icebp
xorb
mov
jl
and
mov
mov
aas
test
cmpsb
jb
shlb
mov
inc
mov
mov
loop
jg
mov
cmc
sub
sbb
cmp
call
mov
movsl
addr16
imul
ret
mov
xor
daa
xchg
dec
pmuludq
sbb
out
adc
dec
jb
dec
mov
push
add
xor
ss
jbe
pusha
jle
xor
push
addr16
jp
xor
cmp
mov
mov
pop
lret
sbb
ret
fldl
shrl
sahf
cmpsl
cmp
inc
sub
in
pop
push
jge
adc
dec
fistps
jns
pop
xor
jo
xchg
popf
inc
mov
push
shlb
adc
pop
ss
adc
ficoml
out
adc
xchg
orl
mov
popa
xchg
sub
jg
pushf
cmp
pushf
adc
or
add
jp
aad
lds
shrl
rcl
les
adc
shl
fs
and
mov
sbb
sbb
pop
mov
fldt
cltd
sub
jge
or
jg
pop
inc
or
stos
mov
lahf
pop
hlt
cltd
jne
sbb
xchg
inc
adc
in
icebp
sbb
inc
in
into
cmp
sbb
out
rcll
xchg
jmp
mov
out
xchg
incb
jbe
loope
in
sub
push
push
mov
bswap
xchg
mov
sub
mov
xor
push
mov
xchg
jnp
xchg
mov
cmp
mov
add
xchg
pushf
outsb
lods
dec
mulb
fs
lds
xor
lock
push
rclb
lds
add
add
pop
pop
loope
loope
fistpll
adcl
push
js
sbb
add
add
int3
jne
movl
or
std
sahf
pop
std
scas
out
jmp
sbb
mov
iret
sbb
xchg
xchg
aas
xchg
fs
jl
xchg
repnz
dec
inc
or
psllq
cmp
cmp
inc
sar
xor
dec
int3
inc
rcll
mov
inc
mov
add
sub
subb
sarb
dec
mov
xchg
inc
inc
imul
sbb
icebp
fwait
dec
lret
xchg
xchg
ret
mov
ljmp
adc
mov
and
xor
popa
cltd
and
into
push
add
push
fldt
mov
push
pop
cld
push
jb
sub
xchg
sbb
loopne
mov
mov
aas
mov
mov
jp
aaa
push
and
std
mov
imul
sub
jecxz
push
loope
test
xchg
or
cmc
rclb
in
lahf
out
mov
aas
pop
mov
shl
test
lds
and
xlat
xor
mov
nop
xlat
cmpsl
test
ror
dec
aad
sbb
inc
je
add
jle
pop
pop
mov
cwtl
ret
cmp
pop
loop
shlb
cmp
push
jns
test
loop
mov
mov
fcompl
data16
adc
sub
xchg
or
popf
dec
push
sbb
xor
jb
dec
mov
or
loop
ljmp
sub
fwait
shlb
negl
xlat
cltd
insb
xlat
js
pop
test
push
mov
mov
and
daa
clc
fidivl
movsl
jle
insb
sub
cmp
int
jmp
rorl
fldt
out
scas
xor
imul
or
pop
sbb
xlat
lcall
adcl
cld
or
pop
mov
fisubrs
je
xchg
int3
shl
daa
cmp
push
mov
pop
ss
insb
jecxz
sub
adc
xor
addl
jnp
cli
pusha
pop
test
insb
ljmp
outsl
stos
ja
ja
adc
hlt
sbb
addl
aad
stos
icebp
xlat
addl
subl
dec
shl
aas
mov
pushf
xchg
mov
hlt
push
rcl
dec
inc
and
xchg
and
pop
int3
and
lods
aam
lret
or
jnp
pop
sbb
xchg
cld
scas
loopne
cmp
in
and
rcll
ffreep
test
js
push
jl
cmp
mov
inc
pop
inc
cmp
pusha
insb
or
iret
retw
ss
inc
inc
push
fs
pop
fs
jnp
in
jb
jne
mov
xchg
dec
shll
and
xor
pop
movsb
pop
aam
xchg
lcall
cmpsb
mov
jnp
insl
inc
xor
jmp
push
ds
xor
xchg
dec
jge
push
sbbb
xchg
cld
add
xor
add
pop
imul
les
xlat
nop
mov
gs
dec
fcmovb
sub
je
xlat
outsb
xchg
out
jmp
sar
mov
loope
jb
sbb
stc
icebp
mov
bound
std
push
sbb
je
push
sbb
add
movsl
sub
xchg
sub
add
pop
in
adc
dec
add
push
push
and
mov
cld
push
cwtl
in
into
jno
sbb
xor
aad
fs
div
xor
lods
sbb
into
push
dec
rolb
ja
fildl
adc
cmp
call
mov
adc
jg
int
test
jnp
repnz
lods
enter
cmp
sbbl
mov
subb
test
pop
adc
imul
pop
iret
repnz
stos
fisubrs
xor
sbb
dec
cmc
loop
int3
cmp
inc
mov
mov
push
xchg
adc
push
out
loope
pop
and
lret
clc
fdivrs
adc
xor
push
iret
xor
adc
push
xor
push
std
sbb
pop
dec
lret
jge
insb
add
and
call
mov
dec
push
fbstp
dec
xchg
mov
into
pop
daa
jns
inc
mov
enter
loope
in
out
sbbl
jecxz
ret
ficoms
mov
scas
dec
or
xor
das
cltd
xchg
or
push
lss
xor
cmpsb
leave
repnz
jnp
loope
pop
pop
cmpsl
into
pop
loop
push
dec
xlat
scas
stos
push
dec
js
pop
hlt
in
pop
mov
ljmp
add
add
test
xchg
and
cmp
inc
dec
movsl
push
repnz
add
adc
cmp
cmp
cli
cld
cmp
pop
or
cmp
mov
testb
push
decl
mov
stc
into
pop
pop
push
inc
cmp
cmp
xor
pop
cmpsb
sbb
lock
adc
sbb
int
jbe
adcb
or
fwait
and
xor
xchg
faddl
das
popf
and
jecxz
fsubrl
iret
jecxz
jge
iret
nop
rcrb
mov
push
aaa
fisttps
flds
fidivrs
jecxz
inc
loopne
pushl
mov
xor
in
out
add
fucomp
loopne
pop
adc
shrb
andl
xchg
cld
outsl
sub
jl
adc
outsb
push
mov
fisubs
aas
bound
movsb
push
test
jne
scas
popa
xor
xchg
add
mov
out
sub
shr
gs
pop
movl
jo
in
or
xor
pop
jns
popf
aad
lcall
sarb
dec
int
pop
insb
jns
subb
lods
sti
xor
pop
bound
dec
repz
mov
inc
lcall
ret
add
aaa
int
add
and
adcb
rep
push
sub
aad
or
ficomps
mov
daa
pop
lret
fbstp
movsl
push
lahf
test
add
clc
sti
add
and
pusha
sub
push
mov
jno
dec
pop
and
mov
leave
inc
adc
aam
or
in
mov
pop
lret
adc
jle
lods
and
fistpll
xchg
cmp
xchg
cmpsb
int
pop
sub
ljmp
incl
outsl
addl
and
lds
jb
lods
mov
add
push
outsb
inc
mull
adc
leave
nop
jl
lcall
aad
cmpsb
jg
push
stos
or
cmp
dec
sbb
mov
or
sbb
mov
data16
lock
mov
ljmp
adc
cmp
mov
push
inc
out
xor
mov
fisubs
popa
xorb
popa
add
xor
lahf
mov
sbb
or
in
inc
jp
cltd
inc
aam
add
mov
inc
and
jg
scas
push
inc
je
sbb
das
sub
cmp
mov
jno
push
pop
jo
mov
test
add
je
inc
push
lahf
out
dec
xorl
movsl
mov
in
insl
cli
jle
dec
ret
push
push
xor
jg
mov
add
adc
and
popl
ja
or
mov
test
fcomp
andl
ds
or
fs
aam
push
sahf
mov
cmp
movsl
cmp
inc
push
in
xchg
lahf
push
dec
or
inc
xlat
mov
adc
sbb
aas
dec
and
sahf
fnstsw
jl
mov
jo
push
cmp
mov
xchg
ds
sub
pop
fistl
jbe
jnp
xchg
out
or
pop
jns
mov
push
in
xor
and
std
pop
dec
popa
pop
sub
push
add
dec
pop
es
xchg
popf
pop
sbb
shl
gs
sbb
mov
shlb
fcoms
mov
sbb
repz
cmp
mov
sbb
sbb
xor
mov
repnz
sbb
lcall
movsb
clc
shl
lods
and
mov
sub
push
out
push
sahf
lgs
dec
arpl
and
mov
adc
dec
sub
and
outsl
into
add
sbb
lea
dec
adc
or
pop
xor
lods
aam
movsl
sub
adc
je
xchg
mov
adc
cwtl
lahf
jae
mov
jge
cmpsl
pop
scas
pop
fs
xchg
in
out
rorb
add
out
fsubrl
xchg
das
loope
add
sbb
mov
cli
inc
int3
jp
or
cs
enter
mov
nop
jns
sbb
pusha
dec
add
mov
adcb
dec
and
dec
xchg
rcll
or
push
dec
nop
cld
loopne
inc
xchg
mov
jp
leave
inc
jns
fiaddl
into
icebp
push
push
inc
mov
push
test
out
lods
aaa
arpl
icebp
sub
test
add
xchg
mov
stos
jmp
cmc
or
add
add
add
add
and
cmp
loope
mov
pop
add
pop
add
repnz
add
outsb
adc
push
cmp
gs
xor
pop
push
loopne
mov
xchg
addr16
push
inc
aas
jo
loop
sti
push
sub
mov
push
mov
adc
or
mov
cmp
stos
stc
lret
mov
lcall
popa
add
dec
pop
pop
ret
mov
fistpl
add
jmp
push
sbb
pop
push
js
les
scas
cmp
roll
push
cmpb
and
repnz
nop
inc
cmp
cmp
js
mov
xor
aad
stos
in
dec
sbb
xor
cltd
mov
jmp
push
inc
jbe
pushf
gs
clc
dec
ret
jg
imul
movsl
insw
ljmp
adc
fldt
pushf
int
dec
les
mov
bswap
fsts
aas
sbb
or
jle
rorl
sub
icebp
ficoml
or
lods
test
and
stos
sbb
inc
cmpsl
ja
adc
inc
fdivr
mov
ds
mov
aas
inc
cmp
js
push
push
sub
xor
inc
mov
pop
leave
idiv
mov
add
push
push
sbb
out
dec
mov
adc
imul
sbb
clc
sub
inc
movsb
int3
pop
dec
jmp
sahf
iret
repz
push
subl
fmull
stos
je
ljmp
add
not
push
fmull
repnz
cltd
adc
mov
das
incl
push
add
add
lea
test
loop
and
mov
int
insl
es
in
or
and
xchg
xchg
xchg
or
add
int
cmp
and
adc
inc
pop
jmp
inc
or
sbbl
mov
mov
stos
or
outsl
inc
mov
fs
decl
pop
add
sbb
cmp
or
dec
xor
adc
enter
push
pushaw
pop
jb
mov
mov
ds
pop
or
mov
jle
pop
push
mov
add
mov
xor
mov
cli
test
cmp
lcall
xor
mov
push
dec
sub
mov
dec
outsl
imul
lcall
mov
sub
movsb
hlt
aaa
movsb
adc
ret
out
push
bound
fisubrs
sbb
mov
popf
jge
cmp
cwtl
xchg
mov
push
sbb
sub
dec
inc
test
and
cs
xchg
cmpl
icebp
adc
ucomiss
mov
stc
cmpsl
xchg
dec
lcall
pop
in
pop
pop
ret
shr
add
leave
cmpsb
sbb
sub
lock
stos
and
das
inc
in
les
push
pop
lcall
inc
xchg
xor
dec
addl
jnp
mov
jnp
pop
push
mov
push
bound
dec
jb
outsb
out
pushl
cmp
test
repz
inc
add
scas
test
mov
xor
mov
nop
scas
ret
add
cli
push
ror
mov
inc
sub
scas
out
popa
jae
inc
push
dec
repz
orb
inc
test
stos
imul
xchg
adc
adc
movsb
sahf
mov
xor
sbb
jle
xchg
jnp
mov
push
sbb
or
mov
push
mov
test
mov
jbe
add
incl
hlt
inc
and
xchg
or
xchg
fsubs
mov
xchg
xchg
jbe
jge
lods
push
inc
xor
dec
sti
hlt
aad
fiadds
mov
xor
repz
jno
mov
mov
and
pop
iret
cmc
stos
aaa
nop
insb
jb
enter
adc
hlt
stc
jo
ret
jmp
adc
movsl
je
mov
in
mov
daa
mov
cmp
mov
mov
ljmp
icebp
sti
faddl
icebp
sbb
sub
rol
jae
rcr
notb
imul
inc
data16
and
out
test
mov
pop
pop
pushf
mov
adc
call
movsb
aaa
outsl
pusha
mov
mov
or
mov
dec
or
cmp
loopne
adc
stc
mov
jmp
cmp
lds
adc
xchg
push
cmpsb
in
pop
mov
and
xchg
mov
push
mov
add
add
mov
jp
ret
jns
mov
repnz
add
insb
incl
lahf
ss
in
xor
icebp
movsb
jnp
jecxz
rcl
dec
pop
test
clc
xor
jmp
adcl
cmp
icebp
sahf
les
cmpsl
pop
push
mov
in
jbe
or
sbb
or
into
scas
mov
add
imul
in
aad
lret
dec
or
mov
mov
lods
jl
shlb
aas
imul
cmp
insb
repz
mov
pusha
lock
mov
loopne
mov
pop
mov
insl
in
and
outsl
pusha
lods
push
cld
ficoms
jle
sbb
sbb
mov
ljmp
mov
in
cmp
jl
das
push
and
and
shr
rcrl
addb
arpl
ljmp
mov
fimuls
out
pushf
mov
enter
and
inc
inc
lods
pop
xchg
aas
cli
jae
loope
mov
mov
mov
mov
mov
add
sbb
or
cmpsb
mov
popf
push
pusha
xorb
push
mov
imul
test
imul
push
jle
push
add
jnp
mov
pushf
xorb
stos
fisubrs
xor
fidivrl
inc
xchg
incb
inc
lret
push
push
rcll
and
push
jbe
testl
inc
xchg
cltd
cltd
cld
repz
gs
dec
and
lcall
dec
test
mov
scas
push
xor
mov
sub
dec
jl
push
fucomip
inc
adc
pop
jnp
mov
sahf
add
out
insl
fstl
mov
cmp
mov
jg
mov
mov
out
lea
lahf
jno
xchg
sub
mov
fisubs
imul
cmc
fnsave
into
inc
out
dec
fidivrl
fidivs
out
push
cmp
jae
jle
jb
adc
inc
fsubl
sub
cltd
mov
std
popf
add
jo
decl
adc
ds
mov
stos
imul
mov
iret
outsb
test
cmpsb
jbe
xchg
dec
cli
push
pop
addr16
mov
pop
jne
mov
mov
nop
adc
imul
pop
mov
movsb
enter
cli
sbb
shr
daa
sub
mov
fcomps
rcrl
xlat
std
shr
and
pushf
cmp
xchg
roll
clc
in
scas
xor
push
cmp
push
inc
clc
popf
out
cmp
cltd
push
mov
out
and
jmp
call
push
into
mov
push
mov
sbb
xor
push
pop
cmp
pop
mov
test
sub
dec
fildll
test
jnp
xchg
stc
mov
lods
sti
pop
cld
mov
inc
loope
mov
das
std
or
cmp
in
lock
pop
gs
lcall
cmp
mov
pop
add
jl
insb
aaa
adc
clc
xor
xchg
out
cmc
sub
sub
sub
dec
ret
mov
in
test
int
arpl
xchg
push
jo
pusha
popa
loopne
lods
xor
out
movsl
sbb
sub
mov
movsb
sub
mov
pop
jae
cltd
push
push
or
mov
or
into
popf
test
popf
pop
mov
lock
mov
and
stos
sub
cmp
aas
repz
mov
mov
call
push
xchg
dec
xchg
fmuls
or
ret
and
outsb
push
xchg
mov
xchg
xor
sbb
mov
or
or
and
xchg
fdivrs
loopne
fimull
lea
fdivrs
and
pop
sbb
pop
popf
sub
sub
fisubrs
pop
test
mov
xchg
mov
or
mov
rcr
in
xorl
out
shll
sahf
and
and
xchg
add
mov
aad
in
push
dec
sbb
lcall
mov
sub
and
into
jge
sub
mov
jle
pop
jg
push
mov
push
repnz
into
push
push
mov
loop
sub
ljmp
leave
lahf
push
mov
aaa
mov
xchg
push
sbb
jbe
js
ret
les
cltd
mov
cmp
dec
sub
sbb
test
fisubs
scas
push
test
or
adc
pop
lcall
sbb
pop
mov
add
add
add
push
push
cmp
cmp
push
pop
mov
lahf
cmp
stos
mov
repnz
add
sbb
lds
adc
jmp
cmp
test
jl
addl
jnp
pop
repnz
nop
push
xchg
jp
arpl
jmp
jmp
inc
adc
jns
jo
inc
je
movsb
fildll
mov
std
sbb
pop
vmovss
adc
bound
shlb
pop
jl
mov
out
repz
lds
mov
repz
pop
stc
sub
orb
add
push
and
arpl
xchg
mov
cltd
dec
xor
sbb
cld
int
cmp
or
dec
cmp
jmp
movsw
push
cmp
es
fs
xor
jmp
fld
push
lahf
add
sub
out
pop
in
sti
outsb
mov
adc
and
loop
mov
outsl
cmp
lock
and
or
push
dec
jg
jae
ljmp
inc
cltd
push
test
dec
ss
mov
mov
lret
test
xchg
lcall
insl
mov
xchg
jg
add
insl
or
jp
dec
rclb
insb
xchg
arpl
mov
push
push
int3
jno
enter
sbb
push
adc
fcompl
push
testb
and
or
loope
shll
clc
cld
inc
jge
je
add
mov
push
mov
jnp
insl
jp
xor
cmp
jnp
sbb
pop
xor
jnp
enter
inc
jmp
jmp
and
sar
pop
push
cmp
pop
adc
xchg
dec
push
adcb
pop
mov
in
mov
sbb
adc
fiadds
cmpsb
jne
adc
nop
or
add
int3
mov
cmpsb
adc
add
inc
add
cltd
add
mov
dec
xchg
insb
jns
insb
xchg
mov
lea
mov
xor
ret
pop
gs
je
adc
cmpb
test
xchg
or
clc
andl
daa
std
adc
lods
mov
cmp
enter
lds
sbb
push
inc
pop
daa
gs
and
push
xchg
movsl
xchg
fdivr
jb
pop
push
movsl
xchg
push
ficoml
es
push
fimuls
pop
dec
lahf
mov
xor
scas
sbb
stos
addb
in
xor
cmp
adc
push
and
lods
jge
movsl
push
xor
add
xchg
imul
je
mov
jmp
das
insl
popa
dec
push
jle
xchg
inc
jb
les
jg
mov
dec
mov
jae
lds
xchg
push
ss
jb
jge
mov
shl
cs
sahf
pop
xchg
mov
xchg
idivb
imul
mov
lds
int3
roll
jnp
pop
xor
or
xchg
jp
pop
cmp
xorl
outsl
xor
cmp
incb
shll
adc
pop
inc
push
pop
or
cmp
or
shlb
cli
dec
lods
add
pop
sbb
pop
ss
or
cwtl
pop
ret
roll
dec
push
sub
xor
movsb
jle
pop
aas
inc
lods
or
imul
xchg
pmuludq
jmp
cmc
aas
out
imul
lcall
cwtl
inc
xor
lret
lret
sbb
inc
jl
push
faddp
sbb
inc
andl
pop
sbb
push
dec
ja
jb
in
scas
nop
cmpsl
jmp
test
fwait
mov
fstl
mov
movsb
outsl
mov
xchg
cmp
push
aas
sub
cmp
mov
jnp
cld
pop
ja
daa
loop
cmp
sub
add
addr16
aad
pop
imul
xchg
and
xchg
cmpsl
es
xorb
idivb
popa
jbe
sbb
pushf
jle
cmp
testl
cmp
sub
js
xchg
push
push
sbb
addl
mov
test
aam
lock
xor
fstl
jg
test
stos
dec
xchg
cmpsb
test
adc
inc
icebp
std
or
leave
les
adc
add
loopne
fnstenv
lcall
dec
push
sysenter
push
cs
sbb
inc
je
adc
adc
imul
cmpsl
addr16
xchg
out
xchg
cltd
ret
xchg
jmp
mov
cmc
lock
into
sub
loop
add
ja
add
add
add
sub
jg
test
out
orb
pop
insl
add
repnz
add
xchg
stos
mov
dec
push
sbbb
mov
outsl
adc
add
out
popf
cmc
stos
aad
adcb
int
sti
inc
add
iret
fstl
mov
mov
ss
shrl
out
sub
test
xor
fsubrs
out
loopne
in
xor
out
movsb
out
push
sub
sub
inc
fwait
mov
daa
jnp
cmp
add
jne
jl
out
call
enter
sbb
xor
sbb
out
push
ret
inc
or
out
add
lret
xor
mov
decb
push
adc
pop
push
fcmovbe
aam
fiaddl
sbb
dec
sub
pop
nop
mov
mov
roll
pop
add
jno
out
jne
arpl
push
in
dec
mov
push
enter
sbb
repz
or
xadd
cmp
inc
xor
jno
cmp
mov
mov
jl
inc
push
je
sbb
movsl
movsl
and
test
sbb
mov
adc
cmp
cli
mov
ds
push
mov
pop
sar
adc
xchg
ret
mov
sbb
pop
jl
js
xchg
cmp
cmpsb
daa
mov
daa
pop
das
hlt
cmp
push
sub
mov
dec
lea
lea
in
sub
fnsave
inc
fdivr
or
or
xchg
leave
jb
ljmp
xchg
sbb
add
shll
or
test
inc
add
movsl
fstps
mov
jg
sub
dec
out
jecxz
mov
pop
ja
clc
adc
mov
inc
ret
jae
loop
cmpsb
cmp
jae
xchg
pop
sub
inc
jmp
inc
mov
sbb
cmp
stc
insb
inc
imul
adc
mull
sub
fidivl
subb
sar
or
cmc
lock
repnz
dec
push
cmp
popa
xchg
push
std
aaa
sbb
lods
pop
out
inc
mov
fwait
sbb
std
sbb
jbe
aaa
sbb
out
dec
mov
xor
ret
clc
add
lahf
push
addr16
xchg
test
push
scas
loopw
call
mov
sub
mov
mov
addb
sub
sbb
or
imul
mov
dec
mov
dec
leave
mov
repnz
mov
ficomps
add
and
lret
shl
dec
cwtl
push
adc
push
ds
enter
aad
cmpsl
mov
cli
xor
sbb
repz
mov
in
xchg
push
cmp
fldt
inc
xchg
jg
pop
mov
data16
enter
adc
outsb
adc
push
sub
sahf
lcall
cmp
int3
test
add
mov
das
pop
leave
sbb
in
mov
inc
inc
sbb
ret
insb
loopne
dec
icebp
or
cmp
je
jae
orl
nop
mov
popf
lret
jno
bound
xchg
in
xchg
lahf
dec
out
scas
push
sub
mov
jne
sub
sbb
mov
push
sbb
bound
aas
jge
mov
xor
jbe
adc
ja
adc
jecxz
add
nop
sub
je
sub
sub
in
daa
mov
rcr
pavgb
jg
sarl
stc
lea
xor
rorl
int
add
adc
mov
jo
addr16
or
push
mov
cmpsl
pop
add
push
cmp
test
fwait
and
arpl
inc
mov
daa
xchg
cld
cmc
pushf
xchg
repnz
adc
jmp
push
inc
js
loop
mov
xchg
mov
insl
mov
push
aam
les
divb
fwait
or
pop
lods
mov
adcl
in
stos
jle
je
sbb
pop
cmp
push
aam
sbb
jbe
push
xchg
test
arpl
loope
xchg
fistl
mov
into
mov
call
cwtl
cs
xor
or
jae
jnp
nop
or
sub
push
test
sbb
dec
and
xor
cwtl
test
and
jge
inc
pop
in
and
jle
mov
xor
negb
out
sbb
mov
dec
mov
dec
mov
sar
cmpsb
pop
sbb
popa
sbb
add
add
add
dec
mulb
repnz
out
adc
jb
add
add
add
insb
adc
adc
movsl
inc
jg
dec
and
mov
push
pusha
mov
ja
sbbb
inc
jbe
sub
popf
pop
add
mov
outsl
cmpsb
and
pop
stos
pop
addr16
fwait
xor
mov
push
jae
pop
cmc
leave
test
cmc
jg
lret
add
mov
ret
dec
mov
push
mov
aam
enter
adc
xor
dec
add
rclb
push
loope
arpl
mov
pop
add
cmpsb
testb
xchg
pop
mov
fisttpll
or
dec
mov
inc
pop
fcmovnb
aas
mov
sbb
jnp
loope
scas
mov
xor
stos
lret
mulb
adc
clc
orl
push
loope
aaa
adc
inc
arpl
test
js
mov
dec
int
bound
out
fcomps
or
and
sbb
in
jle
xor
sbb
adc
jns
pop
sarl
xor
sbbl
inc
mov
rcll
stc
pop
imul
push
adcb
xchg
in
adc
sar
adc
pop
into
add
lret
jb
es
cmpsb
mov
xchg
mov
xchg
daa
arpl
aam
mov
test
mov
inc
or
inc
cmp
test
int3
dec
push
test
push
or
out
sub
mul
inc
xor
dec
jmp
mov
sub
mov
imul
push
outsb
loopne
fwait
ret
xchg
mov
mov
cwtl
xchg
push
sbb
mov
mov
call
and
mov
lcall
addr16
add
out
int
lea
or
jne
shl
mov
cmc
or
pop
pop
test
out
ret
xchg
movsb
jbe
aaa
lcall
icebp
mul
daa
inc
mov
scas
rcrl
in
xor
xor
lcall
pop
cmpsb
and
push
popa
and
leave
sahf
icebp
aaa
icebp
lret
push
dec
scas
in
aad
pop
mov
dec
or
ljmp
jge
cs
mov
dec
testl
push
mov
inc
push
or
sub
mov
add
or
int3
add
jmp
outsl
mov
dec
mov
lods
icebp
loopne
in
mov
push
xchg
pop
dec
xchg
adc
out
cmpsb
stos
mov
cmp
push
mov
cmpb
mov
cmp
outsl
inc
pop
mov
testl
push
pop
add
jge
xchg
icebp
mov
jp
mov
push
add
jge
popf
mov
xchg
jmp
popl
lret
xorb
dec
jno
dec
or
cmp
sub
jge
xchg
lock
das
mov
jecxz
jnp
adc
daa
pusha
sbb
scas
mov
shrb
cmp
dec
enter
fisttpl
stc
mov
shlb
mov
mov
add
or
dec
pop
fnsave
dec
dec
std
int3
ds
pop
mov
repnz
xor
sub
and
push
jge
sub
imul
int3
adc
out
inc
aas
mov
jmp
pop
leave
lods
stos
in
lcall
out
lahf
bound
sbb
pop
pop
cs
sub
sbb
pop
inc
lods
pop
js
sbb
xchg
test
bound
mov
add
mov
adc
add
add
sub
push
loope
flds
or
fmuls
mov
and
and
jnp
inc
fisubl
add
jl
fdivs
pop
sub
gs
mov
mov
test
or
push
nop
loope
pop
jb
repz
xor
and
pusha
fwait
cmc
js
popf
clc
inc
dec
repz
or
cmp
add
cwtl
pop
xchg
jbe
bound
lret
cltd
or
mov
push
or
enter
pop
popa
and
add
stos
mov
pop
mov
dec
nop
ja
pop
adc
enter
push
les
inc
rcrl
jmp
push
mov
gs
add
push
mov
pushf
mov
sbb
imul
aaa
test
jno
inc
add
mov
out
jp
xchg
test
inc
arpl
jmp
outsb
daa
mov
xchg
jmp
shlb
out
cwtl
add
jmp
add
mov
mov
mov
add
cltd
stos
ja
add
add
add
ja
fwait
cmp
int3
xor
fisubrs
or
aas
xchg
jnp
or
fdivl
inc
orb
sub
cmpsl
xchg
mov
adc
ret
hlt
subb
shld
xor
cmp
sub
push
push
push
xor
xor
in
jecxz
mov
push
mov
je
stos
nop
add
lock
xor
add
icebp
movsb
jmp
add
pusha
sub
dec
pop
inc
inc
mov
cmc
adcb
repnz
dec
fdivs
pop
push
loop
dec
mov
cmp
inc
or
movb
adc
adc
or
fcomp
jne
mov
sti
sbb
cwtl
jp
push
and
push
jge
rorb
mov
hlt
jge
out
lahf
pop
xlat
inc
dec
sbb
icebp
mov
scas
idiv
push
outsb
stos
stos
insl
mov
shll
test
shll
add
jbe
xchg
ds
xlat
mov
popf
adc
stc
lock
ret
in
js
or
push
lods
sub
xchg
test
imul
insb
or
dec
outsb
mov
lods
out
cmp
jle
mov
pop
jp
je
mov
jbe
pop
mov
inc
xchg
jae
movsb
popf
cmp
data16
dec
movsb
dec
push
test
lock
das
test
mov
push
cltd
push
out
add
pop
xorl
xor
mov
cmc
imul
jb
adc
shll
hlt
jp
mov
inc
call
inc
pop
push
adc
subb
dec
shrb
aas
decl
jae,pn
mov
sbb
pop
xchg
inc
into
cmp
hlt
sbb
dec
and
fcoms
pop
push
add
and
cmp
cmp
outsb
adc
xchg
imul
pop
loop
daa
femms
adc
enter
xor
cltd
inc
push
pop
fcoms
xor
sbb
cli
scas
dec
mov
les
in
rcrl
dec
add
add
mov
shll
or
shll
mov
insl
insb
or
xchg
leave
rcrb
xor
cs
lock
jbe
push
adc
stc
sub
xchg
mov
jl
enter
popa
ja
xchg
insb
cmp
pop
xchg
add
mov
lods
sbb
sub
shl
lahf
dec
enter
adc
repz
cmp
nop
das
bswap
dec
jb
arpl
dec
cmpsb
jae
sahf
and
or
stos
lret
leave
mov
movsl
cld
push
cmp
fstps
lahf
mov
push
xor
push
fsubp
jmp
pop
push
jbe
movsl
and
push
lea
jge
push
cwtl
stos
dec
cli
push
mov
aam
gs
into
shll
call
in
stos
inc
inc
test
jo
push
adc
cld
test
mov
xchg
mov
xchg
or
rorl
inc
push
inc
jnp
repnz
ljmp
pop
mov
fldcw
fisttpl
inc
daa
inc
push
dec
cs
pop
jnp
xchg
add
test
or
and
dec
and
ljmp
add
mov
pop
daa
call
ljmp
pop
stos
adc
add
fdivs
dec
imul
mov
inc
push
in
cld
add
pusha
cmp
cmpsb
test
push
insl
or
sbb
stc
or
pop
test
shll
or
out
stos
cwtl
repnz
aam
les
fnsave
cwtl
in
sub
sub
mov
push
lea
mov
movsb
mov
arpl
adc
mov
aaa
adc
xchg
push
or
cmpsb
loop
fmull
test
jnp
ds
sbb
sbb
inc
icebp
cmc
pop
pushf
ss
jbe
rorb
pop
and
dec
mov
aam
cli
add
scas
pop
mov
and
inc
xchg
inc
ja,pt
jmp
faddl
pop
adc
mov
or
push
cmp
cltd
in
inc
push
ficomps
mov
jns
xchg
dec
mov
sub
dec
cwtl
stos
arpl
mov
add
jbe
mov
test
xchg
mov
adc
sbb
jecxz
popa
jo
fbstp
sti
lds
jl
das
dec
push
mov
lahf
lds
mov
or
pop
cli
mov
mov
sbb
lret
inc
jns
call
jb
sbb
mov
popa
or
jecxz
add
add
add
xchg
test
push
mov
and
pusha
push
add
add
add
push
clc
addr16
cli
dec
icebp
dec
add
mov
popa
adc
imul
test
or
xlat
xchg
xchg
not
jg
mov
mov
loopne
push
mov
pop
cld
scas
dec
divb
gs
push
jns,pt
jp
in
ss
ss
xor
repnz
imulb
bnd
loop
sarb
loope
rcr
push
outsb
xchg
js
data16
pop
ds
cwtl
stos
cltd
aas
dec
ja
repnz
push
mov
in
mov
dec
mov
fidivl
aas
push
dec
mov
mov
jns
lcall
fstpl
imul
push
test
cmpsb
dec
xchg
iret
mov
adc
sti
dec
leave
add
pop
call
xor
pushf
jge
aam
or
fnsave
pop
and
cwtl
mov
or
xor
dec
out
dec
sub
pop
and
addr16
or
test
mov
mov
enter
mov
and
add
mov
inc
push
jg
pop
jb
fld
data16
fimuls
outsb
popf
fptan
mov
mov
mov
loope
xor
mov
stos
lock
xchg
jnp
pop
and
out
jg
pop
movsb
data16
sub
js
ret
mov
inc
insl
pop
push
gs
dec
mov
ret
xchg
aam
inc
out
divl
pushf
fsubrs
dec
sub
pusha
fdivs
jno
shll
sub
xor
mov
test
adc
cmp
jecxz
push
mov
outsl
dec
out
fwait
loope
mov
pop
loope
aaa
add
pop
pop
or
xor
out
sbb
test
ja
insl
lahf
ret
icebp
ja
aam
dec
xchg
push
sti
ficoms
inc
aas
dec
jno
mov
lea
and
adc
stos
jl
or
jl
push
movsl
sub
jne
in
lods
or
pop
ret
sbb
pop
mov
mov
call
cmpl
adc
cmp
rcr
mov
popf
push
jle
icebp
sti
inc
adc
repnz
push
dec
mov
scas
mov
pop
xor
jmp
dec
jne
mov
adc
lret
xor
call
scas
adc
rol
loopne
mov
jbe
aam
push
daa
xchg
cwtl
xchg
test
shll
dec
adc
cs
push
sti
mov
sbb
push
and
dec
adc
mov
cmp
iret
rcrl
dec
fadds
cs
aam
pop
movsl
addr16
inc
repz
pushf
add
mov
daa
mov
imul
imul
sti
xor
sub
dec
into
lret
popfw
xchg
pop
pop
inc
push
popa
mov
negb
inc
jbe
rolb
ds
pop
inc
jo
hlt
mov
cltd
shrl
cmp
add
and
sub
push
scas
pop
xor
cmp
push
pop
xchg
jnp
movsl
jle
or
fisubl
jg
mov
inc
in
inc
repnz
out
add
out
xchg
cwtl
dec
lret
popf
mov
test
pop
out
orb
push
aad
fisubs
or
push
inc
outsb
cmp
dec
mov
imul
push
inc
xchg
sub
repnz
ja
inc
xor
and
cmp
je
in
mov
inc
imul
ret
fcoms
movsb
test
xor
ja
test
into
stc
or
push
sarb
scas
outsb
fisttpll
bound
mov
fcmovbe
icebp
inc
dec
add
sbb
popl
dec
pop
sub
lea
out
push
mov
outsl
mov
pop
call
push
je,pn
es
mov
mov
out
push
insb
mov
stos
push
push
enter
out
inc
clc
or
ret
jg
adc
xor
adc
ja
inc
pop
aaa
icebp
lahf
add
insb
into
ficomps
dec
mov
cli
test
insb
push
dec
xor
scas
push
lods
inc
mov
and
hlt
imul
cmpsl
push
out
xlat
inc
std
fs
ljmp
mov
outsl
jg
mov
and
push
mov
inc
fwait
and
lods
pop
stos
mov
jmp
out
sahf
aad
xrelease
xor
add
lods
mov
or
loopne
aaa
xchg
add
subb
fistps
xlat
add
add
add
and
fldl
inc
sti
aas
jb
add
outsb
test
add
add
add
push
pusha
mov
fisttps
ret
aam
lods
cltd
std
ret
mov
sar
dec
ja
cmp
push
gs
mov
or
cmp
mov
push
jne
aaa
incb
sar
jmp
loopne
fiadds
xor
jo
sbbb
loope
fcmovu
iret
movsl
inc
sbb
idivl
stos
add
dec
inc
add
out
push
mov
scas
sub
add
in
int
fldenv
add
in
adcl
mov
outsl
jbe
enter
jnp
imul
push
xor
push
inc
imul
and
pand
dec
in
dec
and
jbe
adc
jecxz
cmp
sbb
icebp
push
aam
mov
add
and
and
incb
push
popf
cmp
es
into
fisubrl
inc
clc
stos
adc
push
les
jns
movsl
push
sbb
xchg
int
sahf
out
aad
mov
xchg
fucomp
sub
jmp
adc
into
es
bound
daa
mov
data16
gs
xor
scas
rolb
xchg
add
sbb
fisttpl
cmp
inc
fstl
jecxz
mov
mov
xchg
das
adc
jb
mov
out
ljmp
sub
sub
lcall
xchg
and
and
or
das
dec
mov
int3
push
adc
add
jecxz
mov
pop
ret
push
je
xor
mov
dec
testl
inc
xchg
in
fwait
inc
lret
lcall
jns
xchg
add
jge
testl
adc
adc
xor
jp
arpl
jns
cmpsb
call
sbb
xchg
popf
rclb
inc
arpl
sbb
arpl
cmpsb
jbe
pusha
gs
sti
mov
mov
pop
ds
jmp
cwtl
in
jae
icebp
add
jno
xchg
std
mov
sub
and
sub
dec
dec
lcall
push
movsl
ja
subl
push
pop
and
pop
fadds
mov
inc
popa
sub
push
push
mov
sbb
pushf
movsl
xchg
mov
leave
mov
mov
xchg
xchg
loope
or
ret
pop
ret
lock
loope
push
mov
clc
jp
stos
insl
sahf
sub
fidivrs
xchg
les
lock
dec
and
mov
stos
mov
stos
decl
daa
push
and
out
jl
mov
out
sbb
je
cmc
shl
pop
lds
adc
pushf
xor
mov
pop
push
pop
fisubl
cmp
xor
xor
and
cld
push
sub
jl
cmp
xchg
ljmp
jns
sti
or
dec
xorl
shrl
outsb
push
jp
inc
pop
add
imul
xchg
divl
add
loopne
loopne
xchg
lea
mov
imul
sub
shr
ss
pop
xor
xchg
mov
xchg
je
aam
es
stc
jl
push
inc
push
push
pop
hlt
sbb
mov
repnz
fisttpll
push
inc
jle
ret
push
sbb
cmp
in
sti
add
cmc
mov
push
cmpsb
mov
les
leave
dec
xchg
adc
dec
icebp
nop
mov
sbb
fistpll
and
and
out
dec
jmp
xor
lret
loop
call
popa
inc
test
ljmp
add
je
fwait
sbb
mov
xchg
or
sbb
xor
hlt
shrb
mov
xchg
push
js
in
mov
or
negb
jmp
push
cmp
movsl
adc
mov
lds
inc
bound
rorl
jg
mov
inc
repz
adc
jne
jno
icebp
jnp
push
insl
lea
and
fiaddl
dec
shrb
imull
mov
and
and
mov
cs
xor
mov
outsb
or
mov
and
mov
xor
arpl
pop
inc
outsb
mov
cmp
mov
fwait
test
out
aas
out
dec
sbb
sarl
orb
cmp
lods
shlb
sub
jne
pcmpeqw
icebp
pop
xchg
push
or
shll
lods
js
cmp
xchg
mov
test
sbb
add
jge
inc
jl
xlat
pop
clc
pop
and
add
add
add
add
mov
or
mov
repnz
add
push
jle
sub
or
pop
mov
push
or
rolb
xchg
test
int3
imul
push
xchg
push
stos
outsl
notb
and
xchg
pop
push
xchg
gs
mov
in
clc
pop
sbb
imul
negb
jp
adc
imull
adc
arpl
jecxz
jl
push
add
jne
pop
jae
jo
int
xor
outsl
aas
roll
movsl
mov
pop
out
push
test
sub
push
movsb
popa
lcall
adc
pop
xchg
and
inc
mov
cld
cs
add
or
sbb
push
mov
out
hlt
mov
mov
add
daa
push
cmp
bound
loopne
push
movsb
inc
cwtl
xor
jnp
push
inc
jge
xchg
cmc
push
add
lods
nop
pop
dec
lods
ret
xchg
loopne
mov
rorl
js
fildll
insl
mov
icebp
push
pusha
fadds
stos
int3
fdivl
cmpsb
xchg
repnz
and
std
mov
xchg
out
popf
pop
sti
cltd
dec
mulb
out
push
adc
or
sub
sarl
xor
stc
push
sub
jnp
leave
jo
mov
ds
add
adc
movsb
xor
jns
imul
fxtract
pop
scas
and
pop
inc
ficoms
sub
push
pushf
pop
xchg
mov
jmp
out
lahf
mov
fcoms
inc
aas
loopne
leave
sbb
out
and
pusha
mov
addr16
js
das
mov
pusha
shll
pop
stos
cltd
call
movsl
xchg
adc
inc
and
xchg
lds
sarl
xlat
jae
dec
int
cmp
mov
push
insl
xchg
scas
ss
adc
and
out
push
loop
fsubs
in
jns
push
dec
inc
mov
sub
push
xor
and
sbb
loope
push
and
out
xchg
add
loopne
push
mov
in
sbb
jno
icebp
mov
or
out
popf
pushf
roll
jmp
push
enter
outsl
pop
les
pop
jb
pop
sar
aaa
out
shll
in
mov
mov
and
xchg
xor
cmpsb
jne
adc
inc
dec
inc
repz
fsubrs
lahf
mov
xor
push
das
mov
mov
movsb
and
out
sbb
ja
and
sub
pop
xor
aaa
xor
cmp
pop
or
fsubp
cltd
popa
pop
pop
adc
mov
dec
dec
add
push
pop
sub
mov
ret
test
jb
dec
jmp
cli
mov
popa
mov
cmpsl
mov
shl
add
lock
les
je
pop
lds
adc
daa
adc
xchg
adc
mov
stos
cmp
sbb
inc
pop
sbb
mov
lahf
daa
mov
xchg
shlb
in
xor
pusha
fs
or
test
adc
xor
mov
nop
push
repnz
pop
pop
fs
mov
in
jmp
xchg
mov
add
cld
sbb
bnd
adc
ret
lock
adc
imul
cmp
ret
push
movsl
pop
inc
insl
push
adc
je
push
jmp
sbb
add
sub
or
pop
rcrb
outsl
mov
addr16
movsb
cmpsb
push
pop
fs
adc
out
push
mov
fld
mov
lcall
adc
dec
stos
icebp
pop
dec
sub
xchg
lea
cmp
or
arpl
jle
icebp
pop
notl
lods
std
and
mov
lcall
in
std
sbb
mov
test
sub
sbb
stos
js
icebp
into
xchg
add
rol
cltd
stc
pushf
jno
push
sub
fs
mov
jns
mov
mov
dec
jns
ds
dec
or
pop
mov
fistpll
imul
js
add
or
mov
push
jge
ljmp
dec
loop
dec
sbb
movsl
scas
imul
pop
and
imul
clc
sub
test
jge
pop
dec
and
sti
lock
mov
scas
ss
sar
roll
mov
comiss
in
jnp
mov
inc
sarb
in
hlt
mov
add
add
add
xchg
adc
pop
mov
cmp
jb
jae
add
repnz
add
xchg
jge
lahf
daa
jne
mov
je
dec
sti
rcr
aad
sub
add
out
pop
test
mov
nop
loope
pop
imul
adc
fcmovu
stos
adc
inc
loopne
add
imul
xchg
in
ja
mov
cmp
or
insl
iret
test
jnp
mov
ror
mov
ror
jp
mov
clc
sbb
adc
adc
mov
leave
mov
cmp
pop
dec
push
ror
jp
dec
fidivrs
scas
scas
sbb
rclb
test
push
cmp
mov
int
mov
jo
stc
mov
sbb
icebp
mov
sti
stos
jo
idivb
out
shrl
test
out
imul
or
add
into
mov
fidivs
cmp
cmpl
sub
movsb
pusha
cs
add
lret
push
and
std
pop
test
xchg
jo
lods
mov
clc
mov
and
in
stos
test
pop
lods
dec
shrl
adc
ljmp
push
xchg
mov
xor
jmp
xor
nop
mov
repnz
push
xor
leave
js
fs
shl
pop
and
shr
add
sub
loope
mov
adc
mov
call
dec
mov
imul
sub
dec
pop
inc
xchg
sbb
imul
push
push
nop
lock
ja
jne
leave
out
pusha
adc
add
pop
lods
cwtl
repnz
jl
out
dec
inc
add
hlt
aad
jno
sti
mov
adc
inc
and
mull
xchg
sub
cltd
aam
mov
addl
cli
mov
es
int3
arpl
sbb
xchg
cmp
clc
jl
movsl
aad
mov
rcr
testl
xor
pop
inc
cmp
jmp
repz
mov
movsl
frstor
inc
pop
rcrb
lods
xor
out
ss
das
xchg
push
sbb
ret
lods
jo
cmpsb
pop
push
push
xor
les
adc
jne
lea
mov
xor
fidivl
xor
jp
or
pusha
mov
mov
paddb
sub
jecxz
push
in
xchg
aaa
pushf
push
imul
arpl
cmp
cmp
mov
negl
pop
add
mov
cmc
enter
aad
jle
jnp
icebp
xor
aaa
pop
and
test
xor
jecxz
enter
clc
pop
fidivs
mov
pop
push
adc
std
inc
xor
hlt
xchg
xchg
push
sti
roll
xchg
push
into
and
xor
mov
pop
nop
inc
push
jge
jg
cmc
cmp
xlat
arpl
mov
mov
sbb
cltd
fidivrs
sub
mov
sbb
lock
pop
shll
or
loop
xchg
mov
test
outsl
in
push
test
cld
inc
mov
jp
fs
and
sbb
pushf
inc
rcr
pop
mov
std
pop
int3
in
hlt
or
arpl
ss
and
adcb
push
push
mov
pop
mov
pop
stc
jecxz
aaa
inc
push
mov
add
sub
repz
or
dec
movsb
mov
andl
test
out
adc
in
fstps
or
out
xchg
xchg
inc
out
fucomip
mov
fildl
pop
cmp
push
add
pusha
stc
add
add
stc
test
ja
or
pop
leave
fstp
mov
imul
orb
jmp
scas
out
push
mov
or
sahf
stc
fildl
fs
subl
clc
cwtl
hlt
loop
or
call
fbld
or
leave
nop
hlt
icebp
adc
cmc
inc
int
push
and
outsb
stos
cwtl
sbb
dec
xchg
and
imul
adc
or
test
out
scas
inc
movsl
lods
pop
sub
push
data16
adc
mov
inc
jno
icebp
xlat
pop
lahf
pusha
inc
xor
jle
mov
cld
pushf
pop
aaa
mov
int
test
mov
icebp
ljmp
loopne
hlt
mov
incl
nop
fsubrs
cli
aad
jle
pop
jae
pop
bound
in
into
mov
pop
imul
call
test
adc
scas
mov
or
add
add
add
and
es
sti
std
sbb
adc
add
nop
add
repnz
add
cld
sbb
jg
push
cmp
or
out
jl
dec
rcll
fsts
pop
ljmp
ret
push
cmp
scas
mov
bound
add
lret
xchg
or
sti
lret
adc
stos
adc
cmc
fisttpl
and
push
in
pushf
xchg
orb
sub
out
pushf
ret
std
test
fistpl
je
jl
xor
insl
addb
mov
xchg
in
mov
bound
int
pop
sbb
int3
loopne
add
push
es
lcall
out
xchg
movsb
mov
mov
xor
inc
inc
testl
testl
push
outsl
out
rorl
test
xchg
jb
dec
ja
mov
ret
adc
adc
mov
dec
mov
xchg
cmpsl
lods
xor
mov
movsb
fildll
call
or
pop
clc
mov
js
aad
cmp
arpl
pushf
js
movsl
mov
es
adc
mov
ss
mov
mov
jge
jle
pop
mov
or
mov
mov
mov
gs
rorb
mov
repz
in
xchg
jle
stos
test
ficoms
pop
shl
mulps
mov
or
inc
push
mov
inc
dec
push
push
fstpl
jmp
fisubs
in
loopne
adc
cmpsb
push
jmp
out
hlt
fstpl
or
add
ja
adc
aas
xchg
testl
sub
mov
rol
or
mov
pop
lds
int
gs
push
cltd
hlt
push
mov
dec
loop
jmp
fwait
sbb
xor
sub
fcoms
dec
sbb
sbb
test
or
dec
scas
imul
inc
sbb
sub
jo
adc
fcomip
insb
lds
inc
out
cwtl
mov
and
scas
lds
xchg
orl
lea
testb
pusha
stos
cmp
mov
in
add
add
adc
outsl
outsb
fisubl
sahf
fmul
push
or
mov
popf
leave
shl
add
lea
arpl
loope
adc
inc
push
mov
leave
out
xchg
mov
xchg
push
lods
inc
mov
jle
rcll
fwait
inc
mov
jg
or
nop
and
dec
loope
mov
loope
pop
aam
mov
dec
mov
in
sub
jmp
or
fimuls
aas
add
xor
shl
and
mov
dec
stc
inc
dec
and
orl
cmp
sub
sbb
xchg
mov
test
xchg
push
aaa
loope
popf
nop
enter
xor
test
dec
stos
cmp
test
mov
add
in
pop
add
das
rep
ljmp
ja
aaa
in
jl
xor
scas
mov
xor
pop
cmc
and
inc
aad
lds
pop
movsb
lret
test
jmp
in
push
sbb
xchg
testb
cmc
pop
flds
in
ljmp
adc
or
xor
mov
adc
dec
mov
push
iret
inc
arpl
pop
enter
xchg
test
mov
inc
dec
aaa
jb
sbb
divb
pop
outsb
pop
dec
cmp
jmp
lds
push
cmp
daa
out
sbb
jp
outsb
push
jns
and
je
mov
imul
add
jno
and
dec
lods
lods
dec
fidivs
cltd
es
xchg
iret
fisubrl
subb
mov
std
inc
xor
je
push
in
and
jge
mov
test
repnz
sub
pop
mov
cli
and
mov
lods
cmc
cltd
mov
pop
mov
jnp
mov
outsb
sbb
shl
xchg
adc
fmull
mov
aaa
pop
jle
xchg
mov
sub
out
sub
int3
inc
addr16
ftst
cld
xor
inc
mov
lds
and
pop
popf
add
xor
repz
or
or
das
daa
nop
jmp
fidivl
and
iret
aam
das
and
add
or
fs
or
nop
lea
dec
rcll
movsb
fidivs
sbb
or
inc
mov
add
fstl
stc
rorb
call
out
mov
test
push
xor
mov
scas
mov
push
adc
xchg
pop
lahf
cmpsl
cmp
loopne
add
add
add
mov
jg
lcall
notb
add
repnz
add
popa
jg
dec
mov
outsb
xchg
push
or
shll
pop
push
dec
lds
lock
test
roll
call
aad
out
pop
mov
push
push
lds
pop
or
bound
xchg
add
adc
test
dec
outsl
mov
cli
mov
dec
addr16
mov
in
lock
test
clc
js
jge
sub
sbb
pop
lock
shll
stos
push
sub
or
lds
jg
sub
and
xchg
outsl
ror
mov
jle
push
gs
pop
in
stos
lods
rcrb
lcall
in
mov
mov
jae
rclb
jecxz
xchg
addl
add
mov
rorb
and
fsts
mov
test
xchg
push
mov
push
nopl
gs
mov
cmpsl
inc
ja
imul
pop
jns
stc
stc
insb
or
jb
push
call
and
push
mov
pop
inc
mov
push
loop
daa
adc
ljmp
fnstsw
stos
pop
pop
loop
in
lods
rcrb
adc
aas
pop
sbb
xchg
jl
inc
pop
mov
cmp
add
pop
pushf
cmp
in
cmc
cmc
mov
out
xlat
lock
jnp
dec
mov
fcoms
arpl
and
stos
mov
orl
ss
mov
cmp
jle
clc
aam
add
dec
addr16
mov
scas
xchg
pop
jp
mov
cmp
xchg
outsb
push
inc
lea
adc
ret
dec
loope
fwait
add
dec
movsl
fcomip
push
sahf
pop
nop
jp
push
mov
mov
das
push
inc
mov
ja
fisubl
fmulp
mov
fimull
cmp
test
mov
mov
loope
inc
inc
ds
xchg
inc
stos
scas
out
mov
pusha
fisubrs
iret
inc
fdivrs
call
mov
scas
sbb
dec
loope
fildll
push
stos
jmp
imul
int3
out
xchg
mov
xor
xchg
or
add
ret
or
sahf
rolb
mov
test
sbb
out
sbb
pop
into
add
andb
int3
mov
dec
inc
sub
or
enter
mov
aad
stos
mov
push
inc
movb
adc
repz
mov
jmp
add
mov
sbb
popa
push
inc
hlt
icebp
push
sbb
push
pop
pop
push
cltd
jne
rolb
ljmp
sub
xor
and
fucomi
cmp
imul
or
or
lods
sub
sbb
jle
or
negb
or
cmpsb
shrl
mov
and
add
sub
ljmp
pop
lea
movsl
sub
cmpsb
ja
lret
fsubs
insb
xlat
jmp
jl
sub
fs
lods
or
iret
push
xor
adc
aad
insl
sub
shlb
xor
ja
test
jle
in
sbb
lea
push
enter
sub
xchg
popa
push
lea
loopne
outsl
in
sbbb
fbld
lcall
mov
pop
push
addr16
push
dec
cmp
fwait
fwait
insb
hlt
mov
sbb
xor
incl
adc
or
outsb
lods
mov
jo
jno
adc
lock
or
repz
mov
ret
xchg
mov
jb
dec
enter
mov
push
js,pn
pushf
adc
or
arpl
pusha
loopne
add
fcoms
xchg
mov
shl
add
ficoms
jge
out
jg
xor
add
scas
lods
push
sub
les
clc
xor
mov
push
shlb
test
daa
mov
std
stos
pop
into
clc
and
sbb
pop
inc
test
movsl
ret
lods
arpl
cmp
cmp
rol
mov
xchg
mov
mov
ret
jnp
sbb
xchg
pcmpeqd
jo
outsl
mov
or
mov
and
xor
addr16
es
fstpl
jnp
movsl
push
pusha
xchg
addr16
sahf
ja
xchg
divb
mov
jge
pop
int3
cli
pop
sbb
arpl
push
sbb
mov
pop
inc
enter
mov
sti
add
lahf
movsl
movsb
divb
fbstp
adcl
xchg
adc
push
push
inc
cmp
fiaddl
test
jns
mov
xchg
push
jnp
xchg
xchg
aam
psrlq
mull
dec
popl
add
add
add
stc
pop
sub
stos
jns
dec
sub
pop
insl
outsb
in
lcall
sti
sub
jg
test
xor
mov
int
fisttpl
jne
jb
dec
js
jl
xor
push
xor
movsl
lcall
sbb
xchg
push
clc
cmp
jo
popa
fdivr
lret
or
lcall
jp
push
push
imul
cmp
inc
mov
lea
jb
and
rcrl
cmc
mov
sbb
in
dec
outsb
lret
xor
je
out
cmp
outsl
mov
mov
mov
stos
sub
or
arpl
lods
and
jmp
out
add
std
jle
jae
lret
adc
in
mov
push
pop
add
mov
sbb
sub
add
nop
push
incl
add
cmp
mov
adc
in
dec
inc
add
xor
adc
dec
inc
cli
cmpsl
adc
inc
pusha
and
push
xor
in
mov
sarl
rclb
mov
mov
dec
nop
inc
repnz
les
nop
mov
xchg
loope
lods
hlt
dec
sarl
jmp
jae
aam
push
push
jnp
bound
mov
xchg
jb
xchg
jnp
adc
mov
xchg
pop
repz
aad
nop
add
sub
jecxz
pop
pop
cmpsb
lods
cli
mov
in
fisubrs
idivb
push
jae
gs
sub
out
or
mov
xor
faddp
out
fstps
xor
jl
rcr
in
mov
xor
sub
jmp
ret
mov
shll
daa
inc
mov
movsl
gs
cmp
pop
sbb
pop
test
or
lahf
dec
pop
fstps
out
xor
push
mov
imul
mov
push
dec
mov
dec
call
rol
mov
cmp
xor
lods
pop
jg
int
add
nop
inc
jb,pn
sub
dec
sbb
ret
lret
sub
mov
cmp
rorb
mov
xchg
mov
xchg
inc
mov
popa
fimull
cmp
es
or
mov
cmp
lcall
lahf
stos
rcrb
inc
adc
daa
fisttpl
mov
push
int3
jle
outsl
xlat
cs
cld
imul
xor
hlt
sbb
push
xor
int3
inc
dec
sub
out
push
mov
push
add
dec
lods
lret
gs
xor
in
repz
inc
dec
jne
mov
pop
stos
cmp
jl
sahf
xor
dec
les
ja
mov
test
repnz
test
adc
adc
in
add
icebp
mov
mov
imul
pop
movsb
int
cmc
out
pop
cmpsb
cld
cs
jg
mov
sub
imul
sarl
cmp
test
mov
lock
orl
xchg
jae
enter
cmp
fdivrs
cmp
dec
imul
mov
inc
js
sub
xchg
cli
dec
jne
fdivr
popa
aad
sahf
fwait
cmp
mov
cmpsl
jne
lret
pusha
loop
jp
dec
mulb
or
pop
adcl
mov
jbe
mov
adc
jmp
test
xchg
push
in
and
dec
adc
nop
lahf
cmc
xchg
mov
jns
cmp
cli
jnp
sbb
adc
loop
xor
aam
leave
fs
add
dec
xchg
push
inc
mov
jmp
lret
es
cmp
mov
sbb
outsb
rcl
cs
fsubs
shrb
jbe
dec
or
cmp
testb
pop
adc
pop
in
frstor
pop
jae
sub
fnstcw
and
sti
daa
std
mov
mov
std
adc
pusha
mov
in
insl
fmuls
mov
mov
dec
or
mov
jl
imul
fisttpl
cld
or
xchg
mov
sahf
stc
mov
test
fildll
arpl
inc
outsl
in
lret
pushf
xor
lret
jg
push
scas
sbb
xchg
cmc
pop
pop
loope
pop
or
and
subl
imul
sahf
or
stos
imul
mov
hlt
sbb
push
dec
jbe
add
ret
scas
aam
fwait
inc
add
stos
cmpsb
mov
push
mov
int3
mov
mov
xor
lock
add
add
add
adc
dec
jge
xchg
outsl
jge
lcall
add
repnz
add
mov
push
xor
add
rcr
pusha
jne
sub
mov
cmp
sbbl
sbb
sub
mov
loope
lea
pusha
push
lods
sbbl
imul
insb
xchg
outsb
sbb
sub
mul
jp
sbb
pusha
dec
imul
mov
xchg
sarb
or
xchg
cwtl
addr16
cld
movsl
push
push
addl
ret
bound
pop
xor
push
cmp
insl
outsb
jns
stc
lds
shlb
mov
pop
fcomip
jo
out
lret
cld
jo
cmpsl
stc
mov
out
and
sub
jns
or
jne,pt
xor
push
cltd
jne
pusha
jns
or
popf
lret
dec
icebp
jb
or
mov
pop
lret
adc
mov
add
jb
mov
push
sbb
cmp
test
pop
xchg
loope
in
in
cmpsl
adc
xor
inc
or
xchg
inc
adc
out
mov
cwtl
sbb
pop
jp
hlt
fidivrs
nop
mov
addr16
sbb
jecxz
lahf
int3
aad
into
fwait
xor
xlat
pop
xor
loopne
vorpd
nop
mov
loop
fs
fnstenv
lret
push
or
ficomps
stos
jae
xchg
sub
push
xchg
dec
adc
int
or
jno
push
movsl
xor
xchg
dec
loopne
and
xchg
inc
stc
sbb
and
test
jp
push
cmc
testb
xor
jae
movsb
push
dec
cld
or
cmovg
aam
test
leave
adc
cmp
notb
lahf
pop
mov
scas
cmp
cmpsb
and
lds
push
sub
rolb
jo
sahf
xchg
and
sbb
and
jmp
sbb
mov
mov
xchg
jb
mov
xchg
sub
adc
mov
mov
outsl
and
or
divl
pop
dec
int
push
or
ret
jecxz
cmpsb
sub
add
fistpl
dec
xor
cmpsl
dec
add
push
stos
sbb
add
xor
pop
sub
test
scas
repnz
and
sub
add
mov
and
es
sub
xchg
mov
mov
ret
fdivrp
lods
lea
lcall
cmpsl
mov
inc
sub
xchg
fwait
mov
mov
int
adc
sbb
pop
inc
scas
mov
imul
scas
punpcklwd
xor
nop
clc
jno
add
jne
add
in
xor
frstor
outsl
push
jno
ds
inc
or
je
ss
rcll
ret
sub
push
mov
xor
cmp
fwait
jne
lahf
lea
mov
mov
add
or
aad
ja
je
jbe
insb
pop
cmp
iret
add
xchg
ljmp
int
daa
adc
or
add
sahf
repnz
push
and
negl
adc
mov
dec
dec
out
adc
jp
test
shl
in
cmp
cmp
adcb
mov
ficoms
inc
mov
int
imul
dec
mov
mov
add
negb
mov
jae
shll
incb
dec
nop
test
and
lods
ja
or
pop
cmp
clc
pushf
pushf
xor
rcrb
mov
xor
mov
pusha
mov
mov
xchg
inc
rcr
cmp
adc
cwtl
mov
shrl
xchg
lahf
xlat
mov
adc
push
or
std
mov
cmp
test
in
loop
cmp
sbb
push
sbb
popa
xchg
int3
ljmp
lcall
addr16
mov
test
lods
sub
leave
pop
mov
and
aas
in
inc
xorb
fidivrs
sbb
xchg
mov
dec
xchg
lret
dec
mov
aad
xchg
cs
jbe
jle
fs
insl
mov
mov
icebp
mov
mov
mov
or
jp
loop
push
inc
cmp
lcall
jmp
cltd
sbb
fnsave
and
cli
push
adc
fucom
xorb
mov
or
xchg
dec
add
sbb
and
out
mov
mov
fisttpll
push
int
dec
inc
in
add
add
add
xlat
hlt
push
ljmp
sub
cmp
sub
add
add
jmp
adc
and
xor
cmp
sub
pop
pop
jne
out
daa
std
sti
inc
cmc
orb
ja
rep
jcxz
mov
cs
cmc
fldcw
mov
mov
push
aad
push
add
fs
sub
xor
xchg
sub
iret
xor
cli
mov
lods
xchg
mov
pop
cli
xor
cmpsb
cmc
xor
adc
out
fwait
mov
insl
lret
add
mov
sbb
xchg
js
scas
imul
inc
mov
lret
mov
add
mov
push
in
lds
outsl
mov
ja
cltd
jns
push
mov
add
or
adcl
add
sti
call
inc
fmuls
lcall
mov
sbb
cmp
addl
jg
mov
mov
mov
aam
sub
cltd
popl
dec
push
in
into
jbe
ret
movsb
mov
subl
mov
dec
imul
add
mov
fsub
jbe
jp
adc
pushf
fwait
mov
cli
dec
loop
cmp
xchg
sbb
pop
sahf
imul
mov
clc
daa
xchg
xchg
xor
and
mov
inc
and
jl
dec
pop
nop
push
call
ljmp
mov
shll
insb
inc
icebp
mov
adc
rclb
movsl
xchg
outsl
nopl
test
mov
out
adc
lcall
std
xor
into
add
sbb
outsl
ds
inc
and
mov
loopne
xor
fisubrl
inc
mov
mov
shll
or
and
cwtl
adc
inc
scas
ds
daa
pushf
rcr
les
cmp
xor
sub
push
xor
repz
mov
pop
dec
aaa
dec
push
xchg
jle
jbe
repz
dec
mov
minps
xchg
outsb
sub
clc
in
test
pop
lea
push
jle
scas
scas
pop
shlb
add
adc
dec
or
inc
cmp
fidivs
loopne
mov
sahf
fadds
clc
aam
test
dec
dec
into
lds
pop
xchg
push
lods
xchg
mov
add
mov
in
push
sub
fnstsw
rcl
repnz
cli
xchg
xor
xchg
and
inc
call
adc
jge
inc
ficoms
jle
dec
adc
outsb
icebp
dec
lock
push
push
push
jp
testl
jmp
imul
dec
adc
or
xchg
dec
test
dec
xchg
lea
xor
push
idivb
emms
mov
test
and
lods
lds
mov
pushf
in
pushf
add
mov
mov
adc
mov
add
cmp
out
fidivs
xor
xor
jbe
stos
cmp
scas
adc
xor
sub
repz
outsl
pop
out
lea
mov
rcrb
mov
xchg
and
in
clc
xor
aas
sub
ljmp
cmp
cld
push
mov
sub
je
add
ss
popa
and
loop
std
pop
call
inc
mov
or
cmp
or
aam
cmp
into
dec
xor
aas
xchg
xchg
cmp
push
sbb
jge
lcall
lds
dec
movsl
adc
ss
add
iret
pop
and
sub
mov
add
lahf
cmp
dec
cmpsl
rclb
mov
loop
repnz
pop
sahf
hlt
sub
adc
insl
mov
push
lcall
push
fwait
sbb
pusha
stos
mov
int
dec
cmpsl
movsb
mov
mul
inc
cmp
or
lcall
inc
out
mov
cmc
jbe
push
loopne
add
ja
cmpsb
cmp
addb
push
dec
pop
add
dec
adc
sub
xor
xchg
cmp
push
inc
push
lea
mov
cmp
ret
ja
push
popf
dec
inc
bswap
loopne
dec
pop
adc
rolb
js
jne
sub
cmp
jmp
mov
fldt
jl
sub
in
pop
jle
addl
sbb
push
mov
pop
push
icebp
jecxz
mov
lods
add
or
mov
xor
add
add
add
pop
test
aam
lahf
pop
dec
sar
adc
mov
pop
test
add
idivl
negb
adc
sbb
sbb
dec
outsb
cmp
jmp
inc
cmp
add
dec
jge
adc
xor
add
test
jle
dec
mov
nop
aas
ret
shlb
inc
xor
stc
pop
mov
jle
mov
cmp
mov
mov
mov
xchg
add
cmpsb
jecxz
clc
push
pusha
test
sbb
sub
int3
data16
cmp
orl
pop
adc
in
xchg
lock
aam
push
into
xchg
xchg
dec
iret
or
ds
scas
adc
jae
or
hlt
js
jle
xchg
aam
aam
sbb
sbb
mov
mov
add
push
pmuludq
xchg
jecxz
in
jl
lcall
cmc
cmp
xchg
sub
mov
dec
add
and
cli
je
repz
pop
fisttps
add
fs
mov
roll
pop
sbb
xchg
push
ficoml
lret
pop
push
imul
add
or
imul
dec
or
in
add
rcrl
jge
push
dec
push
mov
or
or
and
jmp
ret
rorl
pusha
repnz
push
nop
rclb
fcmove
loopne
xchg
insb
ret
pop
ds
xor
sub
lods
divl
inc
push
xchg
ja
push
sbb
inc
nop
jecxz
hlt
dec
test
xor
push
fmuls
cmpsb
inc
enter
mov
aam
sub
sub
and
outsl
lods
sbb
int
pusha
lcall
rep
subl
cmp
lret
or
stos
popa
xchg
sbbb
dec
pusha
fs
xlat
add
loopne
mov
sub
push
lds
xchg
scas
mov
mov
and
push
mull
mov
add
push
mov
std
fldl
mov
loop
or
mov
lret
push
test
ret
icebp
add
pop
jnp
cmp
or
fsub
push
into
scas
or
xchg
adc
lock
sbb
adc
pop
lahf
push
lock
inc
sbb
sahf
arpl
push
adc
imul
push
js
or
lcall
and
in
lds
rorb
cmpsb
pop
add
jo
loopne
popf
hlt
or
mov
pop
test
push
pop
pop
push
sub
rol
sub
dec
add
imul
insl
push
sti
jno
sbb
test
popf
pushf
hlt
data16
enter
inc
scas
movsb
adc
pushf
push
pop
fisubs
fstl
and
push
fdivr
adc
push
mov
xchg
jge
sbb
push
inc
loopne
add
mov
push
into
jmp
mov
xor
inc
out
repnz
inc
movsb
insb
shll
ficomps
adc
out
or
cli
mov
and
jo
leave
cmp
outsb
push
cmpb
or
jns
push
outsb
movsb
dec
mov
mov
xchg
sarl
scas
mov
test
repz
xchg
enter
inc
das
nop
push
lds
repnz
pop
repz
shll
push
data16
xlat
cmp
fwait
mov
xchg
xchg
inc
add
inc
adc
inc
nop
xor
and
orl
cwtl
mov
mov
xchg
clc
mov
and
add
int
scas
es
popa
xchg
das
add
adc
jno
push
js
xor
test
push
sbb
leave
addr16
sbb
je
or
xchg
mov
fwait
ja
mov
sti
xchg
fsub
addr16
in
dec
js,pn
cmp
rcrb
push
cmpsb
mov
insl
push
jmp
pop
out
clc
and
sbb
js
call
ljmp
std
mov
fwait
adcb
mov
and
test
ljmp
ljmp
stc
mov
push
arpl
popf
ret
mov
les
jmp
pop
xor
ss
mov
jp
popa
aaa
xor
cmp
mov
inc
setb
test
mov
dec
rep
in
pop
into
push
aad
adc
pop
mov
ret
out
sub
clc
xchg
dec
dec
dec
jb
xchg
adc
inc
stc
and
mov
popf
inc
inc
mov
into
test
mov
jno
sub
ja
push
add
add
add
add
dec
mov
lret
mov
je
xlat
pop
adc
add
out
movsb
xchg
and
sub
lods
cli
imul
out
adc
push
sbb
out
hlt
dec
dec
push
mov
sti
mov
inc
push
fsubrl
or
sub
psrlq
xor
sbb
cmc
xchg
mov
aad
rclb
mov
fistps
push
outsl
mov
pusha
or
std
movq
cmpb
outsb
pop
iret
push
sbb
dec
sub
es
and
stos
das
inc
popf
pop
inc
mov
lret
mov
popf
sti
insb
repnz
jb
inc
outsb
or
pop
out
pop
cmc
ret
push
jl
add
ss
cmp
lods
sub
pop
pop
leave
lret
fidivl
push
push
jmp
out
dec
mov
xor
pop
psllq
insb
xchg
or
les
rclb
mov
int
gs
push
dec
ds
test
inc
test
push
es
dec
test
rorl
sub
jge
dec
imul
popa
popa
repnz
std
push
jns
std
in
jno
stos
jno
addr16
pop
xor
insb
push
or
arpl
scas
mov
insl
fisubrl
cwtl
xor
xchg
xchg
repnz
dec
sahf
push
mov
and
jl
aas
fisttpll
add
mov
push
aad
pop
inc
mov
mov
or
sub
sbb
inc
outsl
cs
mov
pcmpeqw
sbbb
fmuls
lret
hlt
je
sub
movsl
das
lea
push
mov
test
notl
in
mov
mull
ss
mov
fimull
data16
inc
inc
mov
push
adc
lods
enter
cwtl
lcall
insl
in
rorb
orl
mov
mov
test
sub
push
or
push
push
mov
pop
hlt
push
pop
dec
adcb
aaa
mov
mov
mov
xchg
xchg
inc
in
jae
pop
inc
mov
and
xlat
pusha
jno
lret
data16
icebp
mov
lahf
pop
sahf
or
pmullw
pop
test
jne
xor
mov
mov
testb
sbb
push
sbb
mov
addr16
insl
push
sub
and
jo
mov
shll
lock
insl
aaa
cmpl
xchg
out
pop
aad
jnp
popa
pushf
jmp
xor
jp,pn
fists
insl
cmpsl
ljmp
push
adc
jo
dec
xor
dec
out
subl
sbb
xchg
mov
mov
int
cmpb
dec
test
movl
jg
sub
sbb
add
fwait
ss
mov
addr16
push
sbb
push
fmuls
sahf
int
mov
repnz
add
jb
push
leave
push
lods
cmpb
gs
arpl
dec
fcomps
in
push
lcall
out
jp
arpl
mov
sti
in
and
add
dec
inc
dec
shlb
aad
stc
outsl
adc
jns
iret
les
xor
sbb
loope
dec
pop
rcrl
cmp
mov
ljmp
jns
push
fisttps
in
xchg
jl
mov
push
xor
xchg
iret
push
push
aad
xchg
flds
in
roll
lods
pop
add
pop
push
cmp
js
enter
shll
movsb
imull
xchg
jmp
adc
add
pop
jle
sbb
xchg
mov
mov
xchg
ret
or
dec
fcomip
shll
jbe
push
pop
adc
pop
repnz
add
popf
cmp
popa
dec
mov
sub
aad
mov
mov
mov
test
sub
pusha
subb
add
hlt
dec
ficomps
pushf
fnsave
cmp
lahf
add
mov
push
nop
sbb
pop
sbb
loop
inc
jne,pt
mov
mov
inc
loop
in
jno
sub
xorb
jmp
stos
add
inc
xor
cltd
rcrb
cmp
sub
push
stos
addr16
insb
sti
or
sti
daa
sbb
push
mov
sbb
es
cmpsl
cmpsb
add
xor
inc
xor
fwait
and
mov
aam
cs
stos
ret
mov
out
dec
mov
mov
arpl
das
jl
repz
int
pop
jnp
shll
push
aad
test
xchg
add
add
add
inc
xchg
daa
cmp
mov
and
add
add
mov
shrl
insb
cmp
cwtl
paddq
xchg
daa
mov
add
outsb
lret
sbb
add
popl
jne
iret
mov
push
and
sbb
and
pop
or
inc
outsb
push
fisttps
ret
in
lret
jne
leave
mov
xchg
xor
sub
jb
shrl
sarl
dec
push
sub
mov
jg
dec
add
std
das
push
mov
ret
jb
lds
fimuls
in
or
lods
mov
or
test
add
aam
aas
jns
mov
aaa
mov
icebp
adc
mov
push
inc
xchg
nop
push
mov
icebp
mov
out
sti
jb
cs
test
adc
pop
adc
cld
aaa
mov
jns
movsb
lock
and
xor
in
push
or
cmp
in
data16
mov
hlt
lret
popf
cwtl
jmp
clc
adc
jae
sbb
lock
cmp
rorb
sub
inc
mov
leave
or
inc
test
adc
repnz
sbb
fwait
add
push
jne
leave
test
dec
test
movb
bound
mov
adc
scas
mov
mov
or
jge
cmpsl
cmp
neg
sub
xchg
movsb
push
negb
jl
jo
dec
sti
mov
pop
repz
out
inc
and
push
mov
xchg
js
fprem1
cmp
loope
out
xor
cltd
dec
aaa
loope
sahf
jb
scas
dec
leave
out
xchg
xchg
mov
inc
jns
adc
xor
andb
sub
pop
mov
fcompl
xchg
fwait
lcall
stc
shlb
or
cmc
or
mov
cmc
sahf
aam
xchg
xchg
push
jle
lods
bound
lods
mov
jge
mov
jl
test
sbbl
pop
jmp
mov
cmp
xchg
pop
adc
ds
xor
dec
movsb
bound
xchg
rorb
mov
xchg
aam
mov
gs
dec
push
mov
lret
mov
and
add
mov
scas
cwtl
cmpsb
in
movsb
push
cmp
inc
lcall
inc
or
pop
mov
aaa
ds
nop
mov
nop
out
adc
rcll
sbb
mov
mov
jg
mov
mov
mov
and
pop
int
cmp
adc
push
add
scas
dec
cmp
inc
std
fwait
mov
pop
push
cli
int
dec
pop
dec
cwtl
dec
std
fdivrl
mov
sub
pop
fdivrs
lret
inc
fwait
mov
mov
mov
nop
dec
lock
pop
sub
sbb
add
mov
add
mov
or
cli
rcrl
sub
ds
or
mov
xor
sbb
xor
cwtl
out
aaa
mov
aas
rorb
jb
cmc
test
sahf
xor
mov
xor
adc
scas
or
pop
das
lahf
or
inc
idivl
inc
fistl
movsb
loop
cmp
mov
rcrl
cmpsl
repnz
arpl
out
fwait
add
mov
pop
jne
loop
aad
roll
dec
sub
sbb
lea
xor
mov
outsl
mov
cmpsb
push
inc
xor
sbb
sub
cld
mov
jg
loope
mov
adc
and
pop
inc
decl
sub
arpl
js
xchg
cmp
dec
jp
lret
mov
sub
pop
leave
adc
xchg
dec
dec
out
js
push
out
stc
cltd
lods
or
nop
enter
jp
jp
das
inc
lods
lret
xlat
xchg
pusha
or
pop
mov
mov
push
mov
dec
cmp
jle
adc
lret
add
lahf
jnp
stc
pop
movsl
inc
push
jg
hlt
sbb
cli
movsl
cmpsl
jo
lea
lods
ss
scas
push
dec
adcb
push
mull
arpl
xor
fidivrs
ret
dec
mov
leave
movsb
cwtl
sub
mov
push
cld
sbb
popf
hlt
ja
xchg
pop
cmp
ljmp
cwtl
je
push
dec
mov
icebp
test
adc
sub
subb
sub
test
adc
inc
or
xchg
jge
ss
cmp
int
dec
push
sbb
adc
mov
scas
inc
jae
lea
popa
outsl
into
mov
imulb
or
add
add
sar
data16
mov
out
fisubl
xchg
cmc
mov
add
add
add
jno
bound
xchg
xor
into
shlb
jecxz,pt
insl
out
arpl
fistpll
nop
pusha
pop
imul
sub
bnd
aas
insl
test
adc
add
hlt
sub
mov
push
fsubrs
rclb
mov
jmp
jmp
repz
or
pop
adc
push
lret
loop
icebp
pop
push
xor
movsl
push
stos
pop
les
pop
jnp
fldcw
mov
loopne
xchg
adc
nop
test
inc
push
mov
test
aaa
ljmp
ds
in
in
les
sbb
mov
dec
sub
hlt
dec
outsb
push
push
xor
movsl
pop
dec
jp
mov
lock
pop
popa
dec
add
push
das
lcall
push
jns
jne
cmp
lock
push
dec
mov
andb
xorl
add
mov
jmp
lock
out
in
ja
sbb
out
out
sar
push
clc
inc
rorb
mov
clc
std
movsb
loop
push
out
scas
xor
mov
scas
pop
bound
dec
iret
push
cmp
and
pop
sub
push
or
mov
push
icebp
faddl
js
mov
fidivl
popf
sti
and
xchg
and
data16
add
jcxz
pop
decb
test
sub
loope
adc
lahf
sbb
dec
lea
xor
sub
popf
cltd
mov
lods
inc
mov
mov
imul
negb
adc
add
sub
dec
ds
cltd
dec
or
inc
cli
xor
outsb
inc
rcll
mov
negb
test
faddl
mov
add
cmc
mov
pop
adc
jmp
ljmp
shll
out
pusha
mov
fnstenv
lods
data16
pop
jae
inc
xchg
movsb
call
adc
mov
shrl
add
mov
pusha
add
mov
xchg
jbe
mov
add
xchg
fcomps
pop
sahf
and
aad
dec
es
pop
rcrl
cwtl
sub
scas
daa
jmp
inc
mov
and
sub
cmp
loopne
mov
sub
mov
xchg
xchg
dec
fwait
cli
sarl
xor
dec
jo
sub
jno
fs
fldenv
mov
das
insb
xchg
repnz
mov
inc
inc
sbb
shld
jnp
stos
xchg
in
insb
daa
test
or
xchg
sub
xchg
jo
pop
and
jbe
xchg
mov
sbb
popa
dec
mov
shll
out
inc
mov
gs
lret
lcall
inc
inc
outsb
stos
xchg
inc
loopne
inc
push
test
xchg
push
in
sub
lds
sti
aaa
lea
inc
xchg
pop
insb
push
push
push
and
in
ficoml
and
gs
mov
mov
jo
movsl
sub
dec
inc
add
jle
loope
inc
ss
or
lods
cmp
pushf
sahf
mov
xchg
jmp
stos
jp
jecxz
aam
bound
loope
inc
jl
int
dec
sbb
insb
fistpll
mov
adc
addr16
insb
mov
push
into
loopne
cli
sbb
jle
je
jge
int3
sub
shl
notb
cltd
rcl
lods
lds
lcall
push
int
jle
mov
mov
mov
or
rcrb
imul
std
jp
fistpll
incl
mov
adc
cmpb
popf
and
loopne
sbb
xchg
sbb
pop
mov
je
ja
loopne
jg
or
sub
dec
call
cwtl
clc
xor
add
fs
test
ret
roll
fcoml
int3
fildll
push
rol
jmp
fprem
pushf
dec
dec
cmp
into
xchg
xor
jae
mov
xor
adc
mov
mov
push
mov
lret
shl
xor
into
dec
sub
mov
scas
mov
sbb
ret
mov
cmpsl
or
repz
adc
loope
cwtl
ds
repnz
aad
adcl
in
gs
or
cmp
mov
lret
iret
sbb
rcrb
mov
cmc
inc
add
insb
and
int
add
mov
inc
cmpsl
inc
lods
and
shrb
lret
jp
aad
pop
xor
xchg
sub
sub
sub
cmpsb
mov
adc
bound
mov
xor
add
add
sub
iret
cmp
outsl
jecxz
push
insl
fmul
xor
out
add
repnz
add
mov
nop
mov
ss
adc
sub
imul
repnz
scas
jecxz
outsb
lea
pop
sub
jns
popf
xchg
enter
das
xor
jnp
popf
or
xorb
fidivs
jg
lods
clc
daa
icebp
cld
push
cmp
push
fidivl
xchg
mov
pop
test
fildll
xchg
adc
jmp
int
xchg
adc
sub
fwait
cmp
mov
adc
mov
gs
es
mulb
rorb
pusha
lcall
aas
xchg
mov
or
loope
sarb
sbb
ret
xor
xchg
clc
in
pop
cmp
scas
hlt
test
xor
xlat
roll
testb
ficomps
int
int3
clc
mov
push
mov
call
push
insl
xchg
and
dec
arpl
nop
jae
cmc
out
adc
jl
pushf
fsubrs
loop
test
clc
jg
fsubl
es
outsl
lret
dec
roll
xchg
dec
dec
mov
push
and
repz
xchg
cmc
cmp
jno
out
cmp
inc
cwtl
movb
mov
rclb
jle
ljmp
add
jne
ret
xor
fisttps
push
xor
cli
sbb
imul
mov
cmpsb
fldcw
scas
xor
add
jbe
lock
ljmp
push
cmp
popf
in
pop
xchg
dec
mov
div
mov
adc
inc
out
pusha
dec
fs
rolb
xor
push
xor
stos
pop
aas
dec
mov
les
loopne
hlt
enter
popl
lods
sub
pop
mov
cmp
and
mov
sub
pop
shlb
mov
into
fs
push
in
cmp
sbb
dec
add
mov
dec
das
addb
cmpsb
push
inc
add
xchg
xor
jne
push
push
sti
jle
aad
push
int
mov
xor
mov
es
adc
push
sub
adc
lea
push
rcll
inc
push
popf
adc
lock
pop
inc
fldl
movsl
lock
mov
test
and
jne
out
movsl
insl
fimuls
xchg
cmp
pop
jg
jecxz
sub
or
ljmp
adc
push
or
jecxz
das
pushf
mov
imul
xlat
outsl
push
xchg
xor
jbe
push
cmp
mov
adc
andb
xor
pop
and
jecxz
add
out
ljmp
arpl
addb
scas
fs
leave
and
mov
mov
cmp
std
xchg
into
or
xchg
repnz
dec
xor
xchg
js
ficoms
xchg
test
push
mov
call
into
and
push
cmpb
out
aaa
cli
mov
mov
cli
mov
push
mov
adc
xchg
outsb
clc
clc
iret
movsb
jge
mov
jmp
aam
dec
movsl
leave
or
sub
sub
or
xchg
arpl
in
jp
push
faddl
xor
stos
mov
jnp
shr
cwtl
cmc
mov
and
test
dec
decb
clc
push
call
lock
les
out
lret
add
mov
or
aaa
js
xchg
sub
mov
stos
test
mov
dec
iret
ret
das
out
push
lods
cmp
and
roll
mov
aam
mov
stos
andb
in
out
in
pop
dec
cli
sbb
or
xor
out
aaa
pop
inc
out
js
rol
nop
or
adc
in
mov
negl
dec
mov
jo
jle
aaa
int3
insb
inc
or
mulb
mov
test
lods
cltd
mov
ror
outsl
sbb
push
inc
sub
push
ficompl
adc
sub
pop
mov
nop
dec
shlb
and
cld
dec
inc
aaa
inc
jo
ret
add
mov
adc
cld
aas
fsub
push
sub
sub
scas
fsubl
scas
mov
dec
xor
jo
addr16
cmpsl
mov
adc
mov
sub
sbb
in
ret
adc
mov
aam
js
mov
cmpsb
sarl
or
lahf
xchg
sahf
aad
cmp
shll
cmp
ds
mov
ret
out
jne
mov
add
add
adc
push
std
and
nop
push
out
call
repnz
add
cs
xchg
icebp
in
movntq
out
jl
lahf
lahf
cmpsb
and
mov
inc
add
aas
jo
adc
bound
mov
pop
dec
xchg
sub
jge
repnz
movsl
pop
cld
out
test
popa
jns
fisubl
add
mov
mov
mov
pop
jns
or
mov
inc
mov
adc
rolb
inc
mov
incb
push
push
lahf
int3
fwait
sub
xor
je
adc
addr16
icebp
jle
es
loope
addr16
outsl
sub
lret
and
rcrb
xorl
mov
repnz
push
fcomi
cmpsb
xchg
addr16
les
xchg
filds
mov
outsl
cmp
mov
jl
sub
daa
mov
inc
jne
imulb
out
test
stos
jecxz
cmpsb
sub
fmulp
jge
mov
or
push
jb
cmpb
out
push
pop
mov
push
push
sarl
adc
dec
test
cmc
cmp
push
shl
lar
adc
add
daa
pop
scas
sub
sbb
mov
xor
loop
aam
inc
inc
and
loope
lds
dec
pop
pusha
mov
shll
imul
movb
andb
push
xor
pop
or
nop
cwtl
and
notl
push
jnp
loopne
icebp
push
movsl
push
cmp
jp
lods
cmp
scas
int3
jne
mov
pusha
shll
jg
scas
ss
push
pop
mov
out
mov
lods
hlt
inc
xor
mov
stos
fwait
mov
inc
xchg
mov
ja
mov
sub
pop
and
addl
mov
add
imul
push
or
out
iret
fsubr
out
jl
and
gs
cli
push
aam
int
enter
xchg
push
push
mov
add
ret
push
inc
mov
sub
js
cmp
mov
mov
adc
jo
out
mov
and
call
movsl
sbb
stos
pop
dec
fdivrs
inc
cmpsl
cmp
repnz
std
and
shlb
cmpl
adc
repz
lcall
popf
ljmp
or
mov
fdivl
adc
adc
lret
mov
xor
cmp
or
jbe
and
cld
xor
mov
or
stos
push
imul
mov
clc
test
fcmovne
pop
out
cmp
and
pop
out
jae
repz
rcl
cmp
insb
cmp
aas
jge
add
rorl
push
jo
jae
lret
aas
dec
sbbl
dec
sbb
sarb
mov
jp
push
adc
in
bound
rorl
idivl
cmpsl
aaa
cltd
int3
les
or
roll
xlat
cmpsb
jbe
in
mov
imul
int3
inc
hlt
mov
pop
sub
add
stos
and
mov
popf
dec
loopne
push
sub
sub
cmp
xor
push
inc
adc
jecxz
or
xlat
mov
jecxz
arpl
testl
in
dec
mov
push
jmp
pop
or
outsl
jecxz
lea
lea
mov
pusha
mov
pop
repnz
push
mov
pop
push
jl
push
cmp
jle
xchg
ds
sub
jl
test
pop
pop
mov
mov
fldcw
ja
shl
outsb
and
xor
in
loope
mov
std
stos
xor
inc
mov
pop
push
sub
scas
test
test
xchg
shrl
nop
daa
adc
test
xchg
xor
mov
pushf
sbb
lock
dec
in
rcll
sub
mov
pop
jo
inc
das
push
dec
inc
mov
cmp
push
out
mov
or
lock
dec
daa
scas
dec
sub
movsb
and
maxps
sub
es
jmp
sbb
push
test
mov
or
in
jo
ljmp
dec
push
cmp
xor
mov
xchg
or
divl
push
or
mov
setl
or
push
mov
scas
lcall
cmp
inc
mov
push
cmc
lods
je
roll
add
add
add
bswap
test
dec
or
pop
movb
repnz
add
push
mov
sbb
arpl
xor
sarb
jge
push
imul
inc
nop
jp
jge
sbb
icebp
fsubrl
in
mov
push
scas
inc
orl
add
movsl
clc
shlb
clc
ljmp
mov
enter
jg
and
pop
fists
xor
pop
or
dec
or
cltd
imul
push
shll
add
daa
ljmp
xor
push
or
sub
pop
lret
popf
scas
insb
loopne
int3
cmpsb
sbb
jmp
fmull
xor
int
mov
and
negl
stos
adc
xor
pushf
std
lret
out
jp
out
aas
lret
rcrl
or
xchg
mov
jns
cmp
fcompl
cltd
mov
mov
jb
out
jl
push
sub
mull
mov
int3
rorl
mov
divb
jmp
hlt
adc
dec
insb
popf
mov
or
xor
add
mov
fildl
dec
lret
movsl
aam
lds
sbb
cmp
rcrl
jnp
inc
mov
lods
mov
jb,pt
lcall
lods
xor
fidivs
pop
and
call
bound
jmp
sti
dec
shr
pop
jns
xchg
imul
testl
mov
push
jno
pushl
inc
xlat
mov
jmp
sbb
shlb
cld
mov
repz
fisubrl
sbb
and
lea
pop
mov
ss
sub
jo
mov
push
cmc
or
pop
sub
lahf
jge
lcall
in
sbb
mov
out
test
or
outsl
fcoms
ja
jnp
rcll
push
fwait
lret
mov
mov
dec
sbb
mov
lcall
jns
imul
add
cmp
push
arpl
dec
pop
xor
dec
mov
adc
sbb
cmp
outsb
inc
fadds
push
fsts
push
es
cmpsl
insb
sub
cld
lret
xchg
xchg
inc
pop
movsb
out
sbb
xchg
aam
sti
mov
lahf
adc
mov
test
mov
test
mov
dec
insb
inc
and
negb
pop
mov
int
cmpsb
inc
rol
push
inc
mov
in
adc
or
push
add
icebp
jmp
addl
sbb
push
and
add
inc
arpl
inc
mov
sub
adc
pop
add
jle
lods
xor
push
inc
dec
jae
mov
into
sub
mov
push
xchg
stc
loopne
sub
mov
mov
add
mov
mov
loopne
sub
pop
adc
lea
out
mov
cmp
pop
add
lods
dec
imul
mov
imul
xor
fdiv
inc
inc
fucom
sub
xchg
clc
jecxz
and
or
lahf
xchg
push
fmull
sbb
loop
fs
xor
xchg
or
xchg
xchg
push
cmp
adc
xchg
stc
cwtl
movl
subb
xchg
add
jno
movsb
inc
je
fsubs
fiaddl
jecxz
js
call
lret
lahf
lea
movsb
jmp
adc
add
add
push
sarb
cs
repz
in
push
xchg
cli
out
push
xchg
popa
out
je
and
cmpsb
dec
push
adc
add
xchg
lret
popf
inc
enter
xor
mov
mov
ja
push
xchg
jns
pop
sbb
daa
pop
adc
or
into
loope
lods
pop
loop
insl
shrb
cmp
xchg
popf
pushf
outsl
inc
out
mov
dec
add
imul
xor
adc
add
xchg
into
popa
dec
cmp
decb
sbb
jg
pop
in
xchg
push
lret
jecxz
mov
mov
outsb
lret
xchg
mov
xchg
lds
stos
sub
jo
ljmp
les
cmp
fnstenv
inc
into
jbe
shrb
es
push
cltd
jp
xchg
xchg
mov
pushf
jae
xchg
arpl
and
leave
adc
xchg
and
mov
sbb
gs
cmp
sbb
stos
aaa
dec
shlb
sarl
mov
add
add
jg
cmc
or
sub
bsr
add
repnz
add
pop
mov
dec
jmp
inc
dec
sbb
sub
mov
sbb
xor
inc
adc
dec
dec
xchg
les
rcrb
dec
add
loope
imul
loopne
or
adc
jg
dec
enter
out
xlat
push
and
mov
aad
adc
dec
in
popf
or
scas
ja
insb
push
mov
repnz
psubq
movsl
dec
jp
jg
cmp
or
cs
mov
cmp
adc
call
aad
dec
mov
pop
mov
xchg
sbbl
je
mov
sahf
pusha
xor
fwait
add
push
out
insb
sbb
mov
adc
jbe
and
lods
xchg
cli
loop
leave
mov
adc
call
jle
daa
fcmovu
or
push
cli
aam
push
xlat
pop
push
adc
int3
lahf
add
jo
jmp
pop
xchg
sub
out
insb
dec
mov
arpl
pop
lea
shrl
repnz
adc
clc
sbb
dec
insb
ficoms
and
decb
xchg
test
mov
inc
cwtl
shr
pop
lds
imul
push
movsl
inc
pop
add
notb
mov
popf
xchg
addr16
repz
das
jbe,pn
cmpsb
push
into
sbbb
inc
ret
fiadds
hlt
pop
bound
jae
loop
dec
jo
leave
stos
dec
fsubs
xchg
cmpsb
jp,pt
sarb
mov
xchg
daa
popa
sbb
cmc
data16
ret
shll
and
mov
arpl
pop
test
loop
mov
sub
fsubr
outsl
packssdw
in
mov
cli
xchg
jmp
rcrl
and
push
push
xchg
frstor
mov
rorb
ret
mov
repnz
push
popl
mov
mov
nop
test
jb
jg
push
sbb
xchg
adc
mov
call
xor
adc
or
inc
in
push
cmp
adc
jnp
mov
bound
xor
ljmp
es
push
movsb
cmp
push
out
add
mov
sbb
hlt
sbb
lret
addr16
mov
lret
test
push
andb
mov
inc
xchg
pop
push
xchg
imul
or
xchg
mov
sub
mov
fldt
test
fidivl
into
movsb
pop
adc
mov
push
xlat
mov
data16
in
adc
lds
dec
lcall
lahf
or
sub
addr16
push
sub
scas
pushf
add
insb
sbb
inc
sbb
bound
and
xor
out
scas
arpl
outsb
jle
sbb
pop
fcomi
pop
dec
or
xchg
stos
in
lds
daa
inc
mov
bound
jmp
iret
jb
ret
dec
popf
jecxz
loope
jge
fcomp
inc
cmpsb
mov
push
push
cld
sub
sub
pop
daa
cmp
mov
pushf
stos
repnz
push
stc
lea
shll
jecxz
cmp
jno
out
je
enter
pusha
push
inc
xor
sbb
icebp
cli
cmp
fidivl
pop
in
sbb
mov
insb
cwtl
xchg
repnz
lcall
pop
jmp
mov
xor
loop
and
add
scas
sub
mov
xchg
pop
outsb
pop
fdivs
sub
aam
sbb
pusha
sbb
dec
out
lds
ja
pop
pop
inc
inc
repnz
dec
ds
test
repnz
push
fistpll
xor
dec
push
adc
lods
sub
sar
ret
xchg
jne
movzbl
cmp
sahf
cwtl
stos
cmpsb
and
mov
or
and
into
sbb
leave
sub
stos
adc
add
mov
das
and
cmpsl
movsb
adc
or
rcr
leave
fstpl
pop
or
daa
xchg
aaa
add
mov
mov
inc
add
cld
push
jnp
push
cmp
push
pop
shll
aam
dec
aam
scas
insl
push
ljmp
cmp
push
jecxz
add
cmpsb
testb
xor
xchg
call
lcall
pop
fwait
and
sti
pop
icebp
cli
jmp
push
jg
out
sub
test
jmp
pushf
xchg
ret
mov
ret
scas
sbbb
jg
or
loope
jnp
clc
imul
sahf
mov
in
xor
jl
lds
or
push
sub
and
jno
push
leave
jmp
add
add
add
outsb
out
lds
dec
and
rolb
add
add
add
inc
xchg
dec
add
pop
test
lock
push
outsb
and
ret
or
push
inc
jp
jge
rolb
xchg
out
or
fcmovnu
xchg
js
and
outsl
and
xchg
mov
lods
into
mov
test
inc
movsl
nop
jns
adc
mov
and
mov
into
and
imul
sbb
and
fisubs
mull
inc
xchg
inc
pop
xchg
jae
cs
daa
mov
mov
pop
jns
mov
mov
jg
iret
cmpsl
cmpsb
mov
loopne
add
pop
push
pushf
sbb
leave
sbb
ljmp
dec
in
imul
inc
aam
pusha
mov
pop
push
or
push
rorb
mov
test
cmp
jmp
jae
xor
movsb
add
aas
outsb
inc
popf
fists
loope
mov
push
mov
inc
dec
push
jecxz
je
addr16
loope
mov
rclb
ja
rclb
and
push
fsts
je
mov
lock
push
pop
pop
rcll
mov
fisubrl
mov
push
dec
lods
testb
mov
imul
rcrb
jmp
inc
call
fldenv
add
out
xorb
lret
pop
sbb
mov
pop
push
cmpsl
sub
in
pushf
pop
lret
in
jns
imul
sbb
repz
lods
fwait
mov
adc
mulb
inc
ret
insb
stc
scas
add
aad
inc
idivb
mov
push
add
sub
pop
dec
sub
jl
ror
mov
add
mov
ret
in
out
je
inc
jb
dec
lods
sbb
inc
mov
push
cmp
lds
testb
int3
cwtl
mov
scas
testb
dec
cs
cmpsb
fs
push
jne
or
or
daa
iret
faddl
dec
push
in
hlt
dec
arpl
jge
dec
mov
sub
leave
xor
cld
push
jo
add
pop
mov
add
pop
int
jae
push
rorl
lret
and
adc
lock
js
das
test
lahf
lsl
add
pop
ss
sbb
stc
lods
imul
xorb
jg
or
cs
imul
enter
pop
cli
aam
cltd
jl
pusha
inc
repnz
and
adc
cs
or
fmul
aad
push
shlb
jo
pop
mov
shlb
test
stos
xor
xchg
jle
lcall
jmp
sbb
scas
loop
int3
inc
mov
jmp
push
shr
push
pop
add
and
stos
push
xor
or
adc
pusha
shl
xchg
subl
std
icebp
arpl
lock
mov
xor
addr16
xchg
rol
inc
cmp
cmpb
shr
xor
test
mov
mov
xor
xchg
mov
lods
bound
inc
fbld
cmp
fldt
adc
xchg
adc
sub
mov
out
dec
pushf
cmc
arpl
iret
imul
xor
fists
mov
test
aaa
repz
cmp
xchg
lea
pop
int3
in
in
popf
sbb
psubb
shll
cld
or
fbld
add
ficompl
cmpsl
sbb
hlt
pusha
sbb
mov
int3
or
or
dec
cmpsl
add
pop
mov
pop
outsb
xchg
pop
testb
push
test
jle
sahf
jbe
and
mov
rorb
or
sbb
mov
cmp
call
dec
popa
mov
std
mov
ja
lret
mov
mov
push
sub
and
cwtl
imul
mov
daa
cmpsb
fsubrl
dec
test
test
inc
test
cli
push
jp
sbb
test
adcl
addr16
aaa
jl
outsb
jl
inc
lea
mov
pop
imul
push
cmp
leave
mov
push
push
sbb
mov
cltd
fistl
js
pop
stos
in
dec
sub
lea
pop
jmp
test
mov
mov
jl
inc
sbb
jae
sbb
int
xchg
and
mov
stos
hlt
dec
xchg
cmp
add
add
add
out
lret
lods
xlat
sti
mov
adc
repnz
add
jg
push
cltd
in
fs
test
cmc
ljmp
or
and
insl
push
jae
dec
add
std
stos
push
jle
adc
ret
sbb
pop
adc
cli
mov
mov
inc
ss
pop
in
jmp
in
push
push
loope
das
or
outsb
fxam
push
sub
add
mov
fwait
int3
dec
jge
leave
mov
fisttpl
test
test
mov
subl
sbb
lea
cs
lret
sub
rcrb
add
cmp
jg
cmp
adc
sahf
test
jg
call
sbb
idiv
or
sbb
xchg
push
fisubrl
xchg
jle
dec
mov
sar
mov
mov
js
sarl
mov
dec
bnd
add
fwait
jmp
pop
out
cmp
pop
clc
jo
dec
shl
pop
sbbl
add
pop
roll
inc
out
jle
xorl
xchg
dec
xor
cmp
xchg
xchg
aad
std
stc
lret
sub
or
loop
add
pop
lcall
and
or
loopne
mov
scas
sbb
pusha
loope
push
add
bound
pop
adc
mov
fbstp
push
cmp
test
shlb
ucomiss
pop
xor
hlt
inc
cld
mov
adc
push
xchg
adc
and
out
repnz
xchg
inc
adc
scas
movsb
dec
mov
loopne
mov
or
fwait
insl
loop
sbb
arpl
xchg
add
and
iret
jmp
lods
or
es
push
mov
mov
cwtl
int
and
les
xor
adc
lcall
hlt
add
in
notb
add
test
movd
xchg
mov
pop
xchg
pop
aaa
sbb
fdivl
testl
pushf
daa
adc
sub
inc
and
sbb
add
push
xchg
mull
sbb
push
std
mov
sub
dec
pop
push
mov
divl
icebp
pushf
xchg
push
stos
mov
movsb
aas
loopne
mov
scas
xor
adc
je
mov
jb
jp
xchg
add
icebp
fadds
sub
les
xchg
push
mov
ss
push
inc
fcomps
pop
addr16
call
xchg
mov
cld
imulw
adc
adc
insl
in
stos
das
sbb
mov
mov
push
lahf
mov
jmp
mov
adc
mov
fmull
xchg
mov
inc
mov
cwtl
xor
inc
sub
xor
add
push
ret
or
call
add
jecxz
rorl
push
fisubl
dec
add
scas
leave
sbb
add
lahf
les
sub
push
mov
aaa
lea
pop
sub
dec
sub
add
cmc
mov
add
pop
sub
sub
jae
pop
inc
sti
and
mov
cmp
lock
aad
mov
push
dec
in
lcall
ss
push
mov
repnz
xor
imul
dec
ds
subl
int
and
fs
pushf
hlt
sub
jns
or
push
add
out
dec
mov
fcmove
roll
insb
xchg
mov
xor
les
dec
leave
mov
inc
cmpsb
inc
sbb
mov
rorl
sti
loope
jno
push
mov
ljmp
scas
push
jge
inc
shrl
adc
insb
in
je
sub
aam
lock
lods
ss
sub
adc
cli
mov
icebp
xchg
inc
mov
iret
sar
test
dec
xor
fsub
mov
fsubrl
lods
out
in
sbb
dec
add
ret
mov
ret
cmpb
insl
and
pop
call
daa
imull
idivb
add
push
out
imul
lret
lret
or
movsb
clc
js
mov
pop
scas
mov
cmp
sbb
fcoml
ret
jae
sbb
and
pop
mov
je
ds
dec
add
add
xchg
jns
mov
call
sbb
push
push
fprem
jl
rcl
add
mov
add
add
jno
loop
bnd
fcomi
mov
xor
fiaddl
add
add
add
scas
out
sahf
sbb
fidivs
scas
out
or
cld
stos
shl
subl
push
add
cltd
mov
js
cli
les
mov
mov
cld
arpl
xchg
jb
pop
leave
inc
mov
ret
ja
pop
dec
into
sar
xchg
stc
imul
das
fsubl
pushf
push
dec
jae
xchg
aam
push
cmp
adc
mov
fdivrs
movsb
sbb
sbb
jnp
pop
mov
xor
or
pop
aad
cmp
je
adc
or
mov
dec
negb
popa
push
cmp
mov
sub
add
push
in
push
imul
sub
rsqrtps
lret
mov
mov
movl
xchg
fidivrs
mov
dec
and
push
cli
and
mov
icebp
push
inc
sbb
jmp
shlb
mov
nop
fildll
dec
rcrb
ficoms
out
xchg
rcll
adc
outsb
cmp
pop
daa
popa
aam
in
test
mov
add
inc
inc
jecxz
mov
jge
incb
or
mov
sub
mov
sbb
and
in
jb
push
inc
mov
push
cmp
repz
xchg
mov
js
pop
int
idivl
or
xchg
outsl
pop
sbbb
stos
pop
pop
repz
cmc
lods
mov
jns
xor
xchg
sbb
pushf
ret
pusha
subl
jmp
mov
and
fsubrl
push
cmp
scas
shl
lock
clc
pop
jle
adc
pop
and
pushf
mov
outsb
push
ret
xchg
xorb
int
push
psrld
std
xchg
fnstenv
pop
ljmp
push
fsubl
mov
aaa
leave
xchg
sarl
insl
dec
add
aas
cmp
inc
jp
mov
in
leave
push
adc
sub
sub
sbb
mulb
pop
ds
pop
jbe
rolb
mov
inc
add
fbld
jo
cmp
mov
add
daa
mov
jmp
inc
xchg
pusha
and
dec
or
adc
movsl
jle
cwtl
jl
bound
mov
sti
inc
movsb
jle
push
std
and
and
mov
inc
repz
or
cwtl
int
jbe
repnz
mov
mov
imul
mov
clc
lds
dec
out
xchg
fimuls
fdivrl
xchg
sbbb
std
cmp
sarl
xchg
push
mov
xchg
cmp
cmp
mov
dec
insl
pop
pop
ret
cmpsl
into
pop
or
jns
imul
andb
dec
push
outsl
rcll
test
xchg
sbb
js
and
xlat
push
daa
fisubl
pop
and
or
in
cmp
ljmp
inc
and
out
inc
xor
xchg
mov
test
outsb
and
cmpsl
inc
imul
xchg
arpl
jbe
xchg
sub
insl
inc
bound
mov
inc
loopne
inc
stos
out
push
imul
cmc
fidivl
stos
aam
rorb
data16
cmp
cmp
in
add
push
enter
nop
jp
dec
in
jecxz
dec
aam
sbb
cmp
and
jbe
xchg
and
sbb
sbb
jo
push
movntps
in
into
mov
daa
and
fsubs
mov
lods
xchg
and
lea
je
inc
mov
mov
pop
mov
push
sbb
insb
scas
div
mov
dec
mov
mov
jecxz
aas
call
sub
mov
lock
aas
test
rol
push
cmc
push
mov
inc
sarl
dec
subb
push
insb
add
inc
push
xor
xchg
cmpsl
stc
mov
rcl
jae
push
mov
stc
cmp
sub
xchg
mov
sbb
jae
sarb
nop
sti
inc
aad
sbb
stc
xchg
call
repz
cmp
push
lods
mov
push
das
mov
int3
cmpl
aam
jl
or
xor
idivl
fsub
jg
pop
int3
into
mov
scas
push
lea
jne
sbb
or
out
xor
shrb
xchg
sti
stos
mov
std
push
stos
cmp
test
fistl
xor
test
mov
rclb
lock
inc
insb
daa
and
daa
or
pushf
loopne
repz
and
std
insb
inc
push
add
add
andl
ss
in
inc
pop
out
jnp
test
add
repnz
add
xor
push
xchg
rolb
sbb
xchg
fwait
imul
adc
xchg
jne
lret
dec
adc
movsl
dec
and
fidivl
dec
dec
addr16
popa
inc
xor
add
loope
inc
fstps
lods
xchg
movsb
inc
int3
roll
cmp
int3
xchg
lock
fldl
inc
xlat
fs
movl
adcb
mov
mov
adc
add
inc
push
dec
inc
icebp
add
cld
cld
clc
jle
cmp
mov
cmp
lods
in
arpl
add
push
xchg
cmp
dec
xchg
cltd
es
jno
pop
jg
push
add
cli
mov
sbbb
aas
mov
mov
adc
insb
inc
loope
mov
xor
lods
inc
mov
mov
push
mov
or
pop
jbe
mov
cmc
movsb
cwtl
cmp
mov
sbb
sbb
mov
mov
cmp
and
loope
jno
sub
cmp
sub
aad
add
int
sbb
mov
call
arpl
dec
pop
push
adc
lea
mov
sarl
mov
das
movl
stos
ficoms
or
add
jo
aam
fisubrs
mov
inc
movsl
dec
mov
sbb
into
xchg
xchg
and
loop
cmpsb
push
shrl
adc
xchg
shlb
dec
imul
xchg
mov
popa
jbe
in
rclb
repz
out
and
sbb
push
cmp
lea
mov
repnz
cmpsb
and
shlb
push
lahf
into
xlat
enter
pop
loop
xchg
daa
mov
or
mov
pop
sbb
movsl
loop
pusha
push
push
xchg
mov
nop
insl
sub
pop
inc
and
cmp
inc
dec
add
or
push
lock
test
xor
enter
sub
add
sbbb
mov
rolb
loop
pop
or
imul
ja
lahf
xor
lcall
push
pop
push
mov
pop
scas
jg
sub
fdivp
ds
daa
push
pop
pop
jns
pop
aas
dec
andb
mov
sub
notb
lods
out
ss
xor
and
mov
stos
sbb
addr16
push
gs
stos
fcoml
cmpsb
cmp
lret
xchg
fmull
jp
lds
sahf
faddp
loop
mov
add
repz
int3
popf
pusha
sbb
in
inc
pop
shlb
xchg
std
mov
imul
scas
mov
clc
ja
cltd
mov
xchg
xchg
inc
mov
xlat
shlb
test
cli
pushf
sub
cmp
dec
dec
xchg
loope
add
xchg
adc
ljmp
dec
xchg
fstps
and
push
es
adc
dec
andb
stos
adc
inc
div
inc
in
rcrb
rorb
lods
cmp
cmp
mov
mov
add
movsl
lret
arpl
pop
xchg
rclb
sub
fnsave
shl
cwtl
adc
jb
jmp
jne
cmp
push
mov
aam
pop
inc
insl
bound
call
jmp
pop
cmp
popa
dec
loopne
fidivrs
adc
adc
adc
xchg
jbe
mov
and
push
cmpsl
mov
push
outsb
in
mov
aas
sahf
stc
xchg
sbb
cwtl
xor
pop
push
inc
mov
dec
dec
aaa
out
out
sti
mov
loopne
mov
mov
int3
cld
cltd
inc
xor
imul
in
fs
adc
jb
nop
jmp
std
daa
movsl
adc
jg
sbb
sti
mov
pop
loopne
cli
jae
stc
dec
js
sbb
lock
sub
mov
aaa
dec
int3
and
mov
es
adc
out
dec
mov
notb
mov
inc
push
ss
repz
dec
lds
mov
xlat
fnstenv
sbb
rol
xor
cld
lock
fcompp
in
pop
jp
mov
cwtl
hlt
add
push
std
cmp
xlat
xchg
adc
mov
xor
aad
mov
add
addb
jle
and
pop
dec
lods
sbb
xchg
lods
or
xchg
push
lods
add
pusha
repnz
lods
sub
xlat
sub
sbb
dec
adc
mov
sysret
popf
jbe
mov
add
add
add
xchg
rcrb
pop
roll
jecxz
ja
add
repnz
add
mov
shll
cmp
dec
dec
and
aas
sub
sbb
inc
cmp
lret
jl
adc
jge
sbb
and
add
pop
testl
je
cwtl
pop
adc
pop
dec
call
loopne
sar
in
dec
and
jns
and
testb
or
mov
push
movsl
leave
add
mov
xlat
clc
mov
fnstsw
dec
std
insb
add
mov
scas
lcall
jmp
xchg
sub
clc
dec
test
adc
dec
jmp
aam
das
cmp
aam
dec
xchg
push
das
icebp
arpl
aad
sub
lahf
push
inc
pushaw
inc
nop
sub
sub
sub
lcall
aaa
lret
jmp
lock
mov
adc
fimull
jg
cli
pop
dec
scas
pop
pop
push
add
inc
mov
add
and
jge
xchg
cmp
idiv
push
jne
mov
inc
pushf
xchg
mov
lret
xchg
pop
pop
test
adc
xor
pop
mov
jecxz
mov
sbb
push
pop
mov
sti
mov
add
fwait
sbb
mov
cmpsl
inc
fnsave
sub
pop
sub
aas
adc
push
and
lods
lods
sbb
fsubrs
lret
popf
xor
in
xlat
mov
cmpsb
pop
mov
push
xchg
mov
sub
jmp
in
jmp
mov
fdivrl
lcall
mov
loop
jle
movsb
rclb
sbb
insb
rol
outsb
xor
mov
pop
mov
jno
imul
xchg
js
sbb
sarb
xchg
pop
test
cmp
daa
cmp
mov
repz
push
or
inc
xchg
xchg
pop
lret
loop
or
cmp
xlat
ficoml
popf
mov
sub
sbb
inc
sti
mov
aaa
sub
pop
test
add
sub
mov
out
dec
fistpll
das
jb
mov
scas
jl
xchg
and
mov
mov
xchg
mov
gs
mov
xor
or
adc
out
and
cmp
lret
and
fisttps
xlat
xchg
mov
xchg
cs
mov
dec
inc
cs
pusha
jb
sbb
jne
fisubs
xlat
fdivs
pop
test
push
test
xor
mov
sub
xor
jno
test
lahf
inc
out
lret
pop
jl
ja
ds
popf
dec
jp
jp
lods
jae
adc
out
sahf
mov
jnp
or
pop
push
add
nop
pop
mov
sub
xchg
and
loope
add
sub
fcoms
fwait
repnz
fldt
fs
mov
stc
ss
mov
enter
mov
push
cmc
fadd
popf
push
daa
fiaddl
inc
xor
pop
pop
imul
or
dec
mov
test
das
test
sbb
ret
and
std
add
xor
out
push
xchg
cltd
jne
gs
sub
popf
xchg
inc
outsl
lds
mov
lcall
bnd
lahf
hlt
ret
add
mov
mov
mov
push
cs
inc
pop
xor
lcall
cmp
loopne
es
adc
into
mov
cli
xchg
jg
lcall
add
sbb
mov
aam
cmp
sbb
mov
test
mov
xchg
scas
addb
xor
adc
dec
test
lahf
xlat
sbb
xchg
xor
sahf
push
in
fstpl
notl
adc
add
int
fwait
xor
mov
hlt
mov
pop
push
pop
and
idivl
sti
in
push
inc
repnz
pop
subl
inc
in
test
pop
loopne
dec
add
jnp
repz
xor
jmp
push
aad
mov
into
add
dec
jmp
popf
fucom
add
push
cmp
xor
repz
mov
mov
push
jmp
into
das
jmp
popf
ficomps
mov
leave
push
fisubrs
push
out
pop
cmpsl
das
popa
cmpb
mov
ss
mov
dec
je
in
bswap
call
lea
mov
cmp
ds
ljmp
out
je
out
xchg
inc
lret
mov
push
jle
stc
fwait
icebp
xchg
test
es
outsb
mov
shl
std
push
add
add
fsubrl
fidivrs
add
add
sub
mov
inc
push
mov
xchg
imul
add
into
outsl
jns
or
repz
testb
rolb
pop
sub
and
dec
aaa
in
push
mov
imul
and
pop
or
xor
and
out
xchg
dec
stos
gs
iret
mov
xchg
adc
push
popa
pop
lahf
xor
dec
sbb
push
cli
or
test
sbb
or
mov
sahf
fwait
into
pusha
scas
xlat
in
cmp
xor
in
jb
stos
or
push
dec
stc
aam
repnz
mov
out
jp
inc
sub
outsb
scas
sahf
push
mov
sub
dec
mov
mov
imul
pop
pushf
mov
out
pop
test
pop
cwtl
mov
in
xor
mov
dec
das
dec
test
or
and
or
shll
fxtract
cmc
dec
push
and
inc
mov
gs
add
mov
lds
pop
mov
jl
dec
das
sbbb
pop
add
test
push
aaa
lahf
aam
inc
cmp
movsl
cmp
stc
cltd
cmp
pop
or
dec
movsb
add
push
dec
xor
sarb
jle
adc
ljmp
fdivl
xor
lea
sub
add
pop
cld
sub
mov
sub
mov
dec
sub
bound
movsl
xor
js
movsl
icebp
adc
jmp
mov
dec
pop
push
jg
fwait
push
clc
lret
aam
fcmovbe
xchg
mov
insb
adc
ja
push
jbe
mov
test
decl
hlt
jle
pop
nop
jne
fisttpll
push
mov
sbb
test
inc
push
mov
xor
fdivrl
xchg
jp
sub
lcall
xlat
mov
cld
jl
pop
test
cmc
pop
lods
loope
iret
mov
mov
scas
out
std
rorl
jmp
fldt
and
stos
call
jb
stos
inc
insl
ffree
clc
push
mov
mov
mov
add
sti
dec
mov
loopne
test
push
in
cltd
jecxz
push
dec
mov
cmp
adc
xchg
mov
sub
pop
mov
in
cwtl
daa
jno
pop
int3
sub
pop
mov
mov
icebp
lock
inc
jno
sahf
int
mov
or
call
cmp
insb
enter
cld
int3
jb
jl
test
sbb
jns
outsb
mov
dec
loope
addl
or
xor
stos
mov
mov
mov
xchg
idivb
lahf
pop
adc
push
in
test
std
js
add
imul
cwtl
out
push
pop
push
or
fs
fdiv
out
cmpsl
jl
mov
sub
xor
insl
jns
mov
mov
push
mov
in
addb
js
sub
mov
mov
push
pop
test
pop
int
arpl
clc
add
nop
fsubrl
pop
mov
mov
ficompl
sub
pop
rclb
mov
arpl
out
or
popa
arpl
and
jmp
inc
bound
jmp
jo
pop
inc
push
dec
cmp
divl
or
outsb
mov
add
mov
movsl
out
xchg
scas
pop
push
mov
popa
cli
jmp
ret
jmp
test
mov
stos
push
jb
popf
sub
or
pusha
in
aam
pop
or
icebp
sbb
dec
xor
daa
add
popf
push
xor
test
test
jae
push
sbb
lds
dec
lea
pop
jg
xchg
mov
fsub
inc
aas
adc
and
in
aam
icebp
jecxz
lods
or
stc
lock
push
inc
pop
test
dec
add
fnstenv
gs
cld
push
push
movsl
mov
xor
mov
xor
cmp
add
or
or
or
lock
mov
push
outsl
scas
sahf
xor
pop
and
scas
pop
mov
gs
fcomp
les
sbb
or
ds
fsubrs
fcomi
inc
pop
lods
cmc
pop
mov
decl
and
and
icebp
add
mov
out
loope
pop
lahf
scas
je
or
mov
mov
fcomi
ss
cwtl
loope
inc
ljmp
adc
les
cwtl
jg
std
mov
inc
lea
nop
and
add
arpl
icebp
orb
in
mov
repnz
and
add
add
add
les
std
mov
cmpsl
es
add
add
add
test
ja
in
mov
mov
mov
adc
jl
shr
mov
nop
mov
lods
or
stos
dec
pushf
ret
les
stos
mov
movsl
and
out
xor
and
inc
sbb
cltd
inc
and
push
xchg
fsubrl
cmp
xor
out
sbb
inc
repz
or
cmp
or
rcrb
int
cmpsl
mov
fldt
push
cmpsb
and
cli
nop
xlat
inc
hlt
cmp
enter
mov
inc
shl
adc
ljmp
sub
pop
subl
out
testl
cwtl
es
xchg
sub
cwtl
movsb
add
loop
lret
in
pop
mov
jle
push
jl
shrb
adc
fildll
bound
xor
pusha
xchg
cmp
scas
mov
adc
sub
fdivrp
popa
inc
sbb
mov
out
mov
jbe
xchg
sub
push
inc
scas
imul
mov
sub
stc
push
sbb
iret
xchg
icebp
pop
sar
fcomps
es
adcl
fmuls
outsb
jnp
mov
sbb
mov
sbb
and
xchg
scas
add
shrb
and
or
sbb
nop
emms
fistpl
xchg
jmp
add
scas
jl
or
loope
mov
inc
pop
fsubs
xlat
gs
add
scas
pushf
mov
xor
in
jmp
cmp
in
mov
iret
jb
ds
fimull
jg
inc
pop
sub
out
push
stc
push
out
inc
push
xchg
lods
dec
lock
push
jl
sbb
or
jecxz
arpl
cmp
xchg
dec
fidivrl
mov
pop
and
cwtl
adc
adc
cmp
mov
fisubl
or
aas
xlat
incb
inc
pop
dec
push
jnp
into
ljmp
inc
mov
sbb
add
sub
push
mov
mov
pop
pushf
sahf
pop
nop
test
mov
jo
stos
adc
pop
stos
xchg
xchg
sahf
fmull
loope
lods
sub
es
pop
cs
in
push
testb
loop
xor
and
mov
mov
ret
fsts
lea
les
jne
lret
push
xorl
popf
std
xor
pop
xorl
fistpl
fs
mov
jo
iret
fistl
clc
dec
aam
aad
mov
push
mov
rdseed
lods
sbb
cmp
xchg
or
jl
rorl
dec
in
in
mov
insb
pop
and
outsl
aad
into
cmpsl
lret
sahf
lds
bound
std
mov
lods
imul
xchg
adc
xor
pop
add
jge
xor
aaa
pop
in
fidivs
add
mov
sub
cltd
mov
jno
fsubrs
cmpsl
jb
repnz
fcomps
mov
mov
sub
out
mov
dec
mov
stc
and
repnz
pushf
push
std
sbb
sbb
enter
rol
cs
das
lods
mov
dec
in
adc
adcl
stos
jo
nop
jno
dec
out
adc
add
in
inc
adc
jmp
pop
add
inc
mov
jnp
lahf
rcll
xchg
jg
add
lcall
and
dec
sarl
bound
jmp
mov
and
inc
dec
sbb
pop
test
and
cmp
and
arpl
call
rclb
call
cmp
sahf
xchg
push
xor
mov
in
ja
nop
jb
jle
sbb
std
mov
pop
std
out
jp
int3
sarb
data16
sbb
shlb
test
and
pop
lods
cld
mov
pop
jns
pop
xchg
mov
xchg
add
dec
cmp
outsl
shlb
jo
xchg
js
popf
jmp
mov
notl
inc
add
out
mov
ljmp
cwtl
cmp
mov
inc
push
mov
cld
xor
lods
inc
aam
inc
push
arpl
jle
adc
xor
fidivs
xor
fcomps
dec
daa
sbb
xor
mov
js
jle
lds
cwtl
push
xor
add
mov
xor
or
add
repnz
xchg
rcll
fmull
sbb
sub
add
add
add
push
dec
shr
jg
push
mov
ret
repz
repnz
add
adcb
ja
xchg
imul
int
adc
movb
lahf
cmp
pusha
fldl
cmp
sub
cmp
cmc
xor
in
mov
jl
inc
mov
push
andl
and
dec
das
mov
or
lock
mov
push
test
or
idivb
and
mov
lret
mov
cwtl
mov
xchg
testl
das
push
loopne
and
adc
mov
test
mov
inc
mov
jg
mov
pop
xchg
cwtl
dec
inc
jp
arpl
pop
sahf
inc
inc
in
jno
push
jg
pop
xlat
jne
bound
lock
sub
jbe
cmp
add
dec
adc
xchg
jle
pop
aas
cmpsb
or
inc
lods
cmc
mov
xchg
xor
cmpsl
fldl
mov
ja
mov
pop
cli
movsb
ret
pop
push
dec
rorb
out
sbb
mulb
movsl
jl
negl
pop
sti
sub
out
add
or
add
jecxz
sub
aas
sti
pop
je
mov
imul
jns
cmp
ret
ss
xchg
jne
sbb
xor
or
and
jae
mov
popf
ds
xor
out
push
jb
std
in
pop
outsl
sbb
enter
imul
test
xor
orl
popf
mov
movsb
push
xor
stos
rolb
int
movsl
jnp
push
pusha
lock
outsb
mov
push
sub
popf
xlat
push
addb
das
push
sbb
in
adc
pop
push
mov
push
icebp
ja
out
je
push
jnp
add
sub
push
into
imul
cwtl
cmp
mov
arpl
out
stos
ja
dec
popf
roll
fisttpl
xchg
mov
or
xlat
lods
mov
dec
loopne
and
jl
lods
adcl
ror
pop
jge
or
frstor
mov
mov
stc
mov
lods
jle
pusha
sub
into
push
loop
add
jb
dec
js
jne
int
xor
fisubrl
repz
ja
pop
xchg
stos
xor
mov
orl
mov
or
xor
xchg
subl
scas
and
repnz
mov
arpl
rolb
sbb
test
add
pop
enter
imul
mov
sbb
aad
jmp
aaa
fisubl
and
sbb
loopne
aad
aam
iret
in
jmp
mov
add
cltd
inc
ret
mov
outsb
jnp
lods
out
pop
call
dec
shl
pop
jbe
je
pop
add
pop
outsb
les
mov
jbe
push
sarl
sti
mov
add
pop
xor
sub
inc
enter
jmp
adc
jae
xlat
and
push
xchg
aaa
lock
push
pop
add
fs
shll
xchg
rcl
mov
sbb
popf
mov
mov
insl
sub
inc
mov
popa
ss
push
aam
lock
sahf
sbb
gs
inc
wrmsr
inc
and
es
mov
test
ljmp
jge
fsincos
fistpll
iret
mov
pop
stc
ss
iret
jecxz
push
fadd
sub
bound
dec
xchg
lds
imul
cmpsl
jns
and
insl
jae
sub
sbb
outsl
inc
push
mov
shrl
sub
inc
stos
leave
pop
sbb
xchg
inc
arpl
or
mov
fistpll
je
outsb
mov
dec
sbb
lret
mov
jbe
in
clc
cmp
xor
push
test
lock
push
or
xor
fisubs
xchg
gs
mov
out
gs
sub
adc
inc
lcall
scas
hlt
sbb
jae
pushf
rcr
inc
int3
inc
or
push
xor
fwait
pusha
cli
adc
call
pop
inc
dec
sti
mov
stos
inc
pop
cmp
or
and
pop
jecxz
mov
sub
imul
cmp
pop
loope
jnp
testl
cli
pop
xchg
push
xchg
pop
popf
mov
lods
mov
pop
pop
push
aas
mov
cmp
mull
rcrb
in
cmp
add
movsl
push
movsl
shl
divl
push
mov
add
add
add
mov
sti
not
push
rcl
rcrl
sub
scas
pop
sahf
imul
pop
add
or
movsb
out
popa
xchg
sbb
out
mov
loope
out
mov
jo
sbb
push
fnstsw
insb
inc
incb
inc
popl
and
cmc
or
scas
jge
shrl
push
sahf
pop
sbbb
push
pop
or
shll
mov
pushf
sti
mov
shlb
out
or
jns
sarl
stc
push
pop
inc
in
sbb
sar
jle
fsubrs
dec
push
cmp
movsl
mov
jno
xchg
mov
in
push
lret
repz
and
fst
inc
js
cmp
outsb
mov
adc
push
popf
jl
pop
popa
mov
pop
sti
clts
and
jg
jb
pop
inc
mov
je
mov
dec
cmpsb
cmpsl
icebp
jmp
popa
xchg
adc
dec
in
jge
fiadds
push
fs
mov
sbb
sub
lea
enter
es
inc
inc
xchg
sub
dec
div
pushf
push
fidivl
insl
jnp
or
push
js
aaa
push
cmp
in
xchg
mov
repnz
mov
frstor
repz
inc
push
xchg
jae
repnz
bound
lahf
hlt
inc
lret
add
and
call
sarl
fldt
mov
in
jo
inc
xor
sub
mov
fdivp
in
cld
test
sbb
pop
lret
int3
push
fdivs
lea
stc
aam
sbb
push
mov
lret
cmpsb
add
mov
leave
cmp
and
pop
fs
cltd
mov
jle
in
movsb
jb
cmp
xchg
add
mov
xchg
jmp
ret
jp
fstl
pop
add
mov
or
sub
cmpb
pop
mov
jb
push
mov
mov
mov
test
sbb
adc
ja
notb
xor
mov
ret
fmull
subl
aam
fcomi
push
mov
push
add
xchg
or
dec
cwtl
lret
out
dec
jae
test
inc
pop
inc
daa
pushf
rcll
sub
stos
mov
cmp
add
fwait
data16
push
sbb
jo
inc
push
ret
aam
sub
scas
enter
push
repnz
mov
pop
fwait
aad
fwait
mov
cmp
sub
fisttpl
cmp
push
fisttpl
scas
lods
and
sti
aad
sub
mov
out
push
mov
leave
push
mov
loop
mov
dec
sub
pop
inc
or
dec
fcomps
pop
lcall
out
in
ljmp
push
fisubrs
xor
push
add
pop
sbb
test
cmp
push
mov
loope
jg
idivb
sub
cli
or
dec
cmp
aaa
push
gs
mov
add
inc
fbstp
rcrl
jg
stos
cmc
enter
jge
fwait
push
test
test
and
hlt
dec
sub
int3
stos
loope
inc
fcmovu
fcmove
into
mov
aas
cltd
nop
push
sahf
pop
and
subl
xchg
test
je
insb
arpl
stc
xor
dec
cltd
mov
mov
add
ja
inc
repz
push
addl
or
loopne
or
mov
inc
sbb
and
adc
jb
scas
bound
push
lock
adc
cmp
mov
fwait
jb
mov
test
push
icebp
xlat
and
or
mov
movsl
fstpl
sub
inc
push
and
pop
in
mov
cmp
jb
scas
subb
aam
pop
sbbb
and
jne
popa
dec
cmp
je
les
jge
mov
xor
push
jbe
fisttps
sbb
popf
mov
sbb
and
pop
jnp
les
inc
pop
cltd
in
dec
test
dec
xchg
adc
sub
lods
shrl
ret
jae
mov
sub
aam
cwtl
inc
mov
repnz
lds
jl
cmpsb
or
mov
jle
sub
addr16
cmp
jbe
inc
insb
sbb
push
jl
rcrl
test
clc
cmc
jno
mov
xchg
jecxz
adc
sbb
inc
aaa
out
fistpl
jle
cwtl
es
adc
inc
cmpsb
cmp
dec
cmpsl
adc
in
popf
loopne
out
jae
push
clc
and
pusha
sub
scas
push
jno
es
jae
outsl
add
add
add
adc
mov
insb
xor
std
add
pop
add
add
pop
inc
add
dec
adc
int
rorb
