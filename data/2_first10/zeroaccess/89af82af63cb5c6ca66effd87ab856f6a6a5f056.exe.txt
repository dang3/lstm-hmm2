push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
xchg
lods
les
jl
jl
xor
jl
adc
and
popa
pusha
mov
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
pop
dec
inc
or
xchg
in
adc
mov
dec
in
enter
jg
push
addr16
xor
test
fstpt
sbb
insl
jl
pop
mov
or
divl
lea
stos
pushf
inc
mov
dec
push
xchg
aam
push
jle
ljmp
jno
pop
scas
lret
add
jns
xor
xchg
pop
jnp
inc
or
cmp
push
loop
dec
and
mov
adc
jmp
aaa
push
orl
mov
push
in
pop
pop
xchg
sbb
mov
pop
stos
loop
push
push
lret
mov
icebp
cmpsl
fs
or
xlat
jo
popf
shlb
int3
adc
inc
cmp
fnstenv
cmp
xchg
push
and
jbe
mov
test
adc
out
std
idivb
add
mov
inc
add
dec
sti
scas
or
pop
push
ss
sbb
xchg
out
shlb
pop
and
mov
mov
cmp
hlt
and
pop
mov
push
xchg
call
sbb
loop
or
iret
pop
cmp
push
pop
mov
dec
and
xorl
clc
mov
cmp
cs
mulb
push
lds
xor
push
pop
fxtract
add
or
test
dec
cmpsb
jb
adc
fbstp
push
jnp
pop
loop
out
int3
dec
notl
xor
icebp
xor
out
push
adc
fwait
mov
test
cmp
dec
dec
cmp
fadds
shlb
inc
rol
ss
pop
das
adc
stc
decl
scas
mov
popa
xor
icebp
jbe
addl
xor
testb
xchg
scas
jo
sub
fs
sub
sbb
mov
testb
mov
in
adc
test
mov
dec
inc
outsl
or
dec
adc
bound
pop
push
jg
dec
scas
mov
daa
scas
add
jmp
inc
aas
jnp
mov
imulb
sbb
sbb
pop
or
cmp
test
xorb
repz
lds
pop
lret
push
jb
les
leave
out
sbb
cmpsl
in
scas
mov
dec
jl
xorl
add
pop
movsb
enter
pop
add
inc
add
fbld
sub
xchg
out
sbb
pop
inc
xchg
es
cmc
lahf
imul
push
mov
scas
add
push
arpl
dec
rcll
inc
loop
lea
in
adc
cmp
mov
mov
adc
stc
add
pop
adc
pop
and
mov
push
jne
or
pop
mov
pop
loopnew
lds
and
jg
gs
repz
clc
xlat
xchg
aam
inc
mov
dec
cld
cmp
jns
adc
add
jl
or
fdivl
lret
rolb
xchg
or
mov
and
inc
push
js
dec
jae
loop
xor
repnz
outsb
fwait
dec
mov
xor
aaa
bound
push
or
xorl
mul
ljmp
es
ss
jae
push
jg
sub
and
and
ds
lock
mov
repnz
out
add
testb
into
int
push
scas
nop
inc
inc
push
add
jle
jmp
inc
mov
dec
xor
in
jnp
lods
ljmp
and
inc
mov
dec
and
add
mov
pop
adc
pop
adc
imul
dec
cmpsl
not
ret
pop
fwait
dec
lds
or
test
clc
clc
ficoms
add
push
insl
jnp
adc
jnp
loopne
sbb
in
or
cmc
lcall
pop
xchg
adc
pop
roll
adc
sub
jmp
push
push
cmp
inc
mov
pop
jle
ljmp
inc
pop
pop
insl
dec
stos
pop
jae
test
sub
loop
or
xor
hlt
add
insb
mov
xchg
dec
cmpl
insl
pop
jge
inc
adc
xor
ljmp
push
add
repnz
nopl
add
adcb
xchg
lret
mov
pop
in
jae
mov
sti
mov
push
xor
lds
inc
cld
test
xchg
ss
mov
pop
xor
mov
repnz
pop
jge
fld
mov
mov
sahf
repz
js
test
test
or
outsb
pop
loopne
insb
std
out
test
cmp
add
clc
lret
dec
movsl
adc
adc
lahf
jp
into
fcomps
push
aas
xor
and
jmp
or
movsb
jmp
push
jo
enter
dec
aam
add
sub
jae
fwait
scas
pop
and
movsl
int
jmp
popa
sbb
aam
and
xchg
xor
sti
outsl
sub
jae
aad
mov
adc
and
pop
pop
jne
push
stc
xor
dec
out
out
stos
aas
int3
rcr
sbb
fstps
jbe
xchg
enter
mov
inc
into
jmp
cmpsb
ret
and
js
cmp
rclb
mov
fistl
adc
lahf
dec
mov
xchg
sti
arpl
hlt
add
rclb
outsb
lret
and
lahf
jle
adcb
mov
dec
xchg
outsl
andb
ror
push
popf
ja
bound
push
testb
mov
es
jb
lock
or
ret
in
pop
xor
outsb
pop
repnz
sti
inc
pop
sbb
and
aas
xchg
mov
sub
lcall
cmp
repnz
cmpsl
sub
and
scas
int
sub
xor
mov
or
xchg
sbb
cmc
icebp
push
cmpsb
jno
int3
jmp
repz
mov
adc
lods
xor
push
xchg
and
js
and
loop
pop
loope
arpl
or
mov
inc
fistl
mov
aaa
sahf
mov
test
xor
xchg
fcompl
xchg
inc
cmpsl
mov
xchg
addr16
iret
and
inc
stc
test
jno
ss
pop
aaa
sub
jecxz
and
nop
mov
mov
mov
inc
adc
push
xchg
loopne
jns
lock
push
jnp
mov
mov
or
jae
enter
push
ds
in
add
mov
insb
gs
lret
popf
neg
fs
dec
loop
loop
repnz
mov
mov
dec
xchg
ja
pushf
inc
sub
add
es
add
jp
mov
dec
push
rolb
mov
std
sarb
cmp
pop
outsw
sub
jl
out
fwait
or
aaa
push
fs
cs
cmp
lahf
loope
xor
into
in
mov
mov
and
lods
xchg
popa
mov
add
fs
testl
inc
repz
lahf
ret
pusha
xlat
pop
dec
daa
and
xchg
or
call
orb
minps
addl
sahf
xchg
pop
pop
mov
faddl
inc
push
and
lahf
imul
xchg
pop
ret
hlt
pop
in
xchg
jne
mov
jmp
xchg
dec
add
or
sbb
mov
dec
mov
sub
std
pop
incl
jbe
fs
lods
xor
mov
mov
dec
imull
push
sbb
gs
sbb
pop
rcl
rcrb
out
pop
sub
inc
popl
pop
push
xor
push
fidivrl
imul
xlat
xor
lds
je
push
dec
and
push
scas
xchg
imul
inc
xchg
push
pop
test
in
mul
das
push
push
sbb
push
xchg
sbb
adc
loop
test
jo
and
mov
cli
push
pop
dec
je
incb
jae
aad
xchg
inc
shlb
lods
cli
jnp
or
mov
ret
adc
fildll
ljmp
cmpsl
or
xchg
adc
aas
mov
add
mov
stos
add
jmp
fs
mov
mov
mov
xor
fiaddl
push
fs
mov
repz
xorl
xchg
adc
xor
sahf
outsb
jns
mov
or
out
in
mov
mull
mov
and
mov
pop
ret
inc
pop
aaa
mov
fwait
push
daa
jg
dec
in
fs
mov
xchg
lcall
mov
scas
ret
add
cmp
cmc
sub
sbb
stos
loop
jge
pop
es
mov
xor
pop
fcomi
cmp
add
rolb
jmp
call
or
insb
rclb
movsl
inc
out
int3
cmp
pop
adc
pop
jnp
fdivl
psubb
or
mov
jge
std
bound
rorl
dec
xor
fwait
mov
fldl2t
jmp
gs
sub
sbb
lret
cmp
add
cmp
or
jmp
xchg
and
adc
cwtl
mov
adc
pop
push
add
and
push
neg
fistpll
cmp
out
shl
sbb
adc
xchg
jae
mov
mov
mov
stc
mov
pusha
scas
ljmp
dec
push
lahf
push
lods
push
push
icebp
dec
stos
arpl
mov
push
xlat
jmp
push
enter
dec
adcb
adc
sub
xchg
xor
jb
repnz
ret
mov
add
cwtl
mov
fadds
push
cld
mov
add
mov
add
int3
shl
dec
incl
arpl
ret
in
and
xchg
pop
pop
jecxz
xor
cwtl
pushf
popf
dec
mov
xchg
sub
aaa
xor
inc
movsl
mov
dec
xor
mov
aam
pop
insb
jno
insertq
jns
mov
cmpsl
xchg
outsl
movsl
jno
test
addr16
or
push
dec
in
xor
or
pop
add
jns
scas
pop
hlt
lods
inc
filds
movsl
rcrb
lock
imul
fnstsw
fidivrl
pop
mov
jg
enter
adc
lea
pop
add
in
repz
rol
xlat
je
outsl
ss
clc
jne
dec
insb
andps
pop
inc
aas
rcrb
call
gs
scas
fists
xchg
and
in
cltd
push
dec
nop
int
push
jecxz
imul
xor
adc
pop
mov
inc
insl
into
add
sub
xchg
pop
jecxz
ja
xor
pop
out
pop
adc
sub
fbstp
je
sbb
aam
ret
pop
cld
ljmp
inc
cmp
das
fisttps
push
add
ja
dec
or
cltd
sbb
xchg
clc
fdivl
cmpsl
add
fidivrl
xchg
imul
pushf
xorl
sbb
dec
lret
fdivr
or
add
or
push
sbb
in
pop
adc
fcoml
jno
xor
addb
add
jb
pop
jmp
jg
or
push
mov
cmp
xchg
test
mov
in
cmp
jnp
jmp
push
mov
in
mov
iret
repnz
cmp
push
mov
sub
mov
ja
xchg
stos
lret
mov
repz
push
js
dec
xor
fstl
mov
sub
xor
cmp
pop
in
idivl
in
mov
cltd
mov
pop
imul
scas
stos
fcoml
jb
das
js
std
xchg
mulb
and
subl
lock
mov
xchg
dec
mov
jns
add
stos
mov
sahf
sub
push
les
cwtl
and
cmp
out
mov
fdivs
push
enter
xor
mov
and
ljmp
in
cltd
xchg
or
in
stc
pop
popf
sbb
and
call
jb
out
jp
test
push
xchg
push
adc
lcall
inc
adc
in
jo
loop
jns
mov
les
dec
popf
jl
imul
lret
mov
and
mov
mov
ds
adc
in
pop
inc
lahf
sbb
jp
les
loope
xor
inc
int
stos
in
inc
mov
and
adc
pop
add
xchg
add
sbb
pop
pop
pushf
mov
ja
jno
jae
push
lcall
mov
jb
inc
sar
mov
insl
dec
add
push
cmpsl
mov
stos
xchg
sub
movsl
test
jl
arpl
xlat
pop
in
inc
inc
jo
repz
xor
loopne
inc
inc
test
xchg
aaa
repz
jno
fcomps
movsl
shlb
mov
inc
push
fwait
clc
mov
lahf
inc
in
xchg
jmp
inc
cmp
loop
movsb
cld
or
aas
in
add
jg
and
cli
mov
lea
mov
xchg
jne
jl
das
imul
dec
icebp
mov
push
int3
cmc
ss
hlt
loope
add
xchg
into
or
fidivrl
mov
push
scas
mov
fbstp
leave
mov
pop
xchg
lret
in
popa
pushf
cmc
push
aaa
js
incl
nop
add
notb
ja
mov
loope
je
mov
imul
xchg
xor
dec
push
mov
jne
dec
mov
mov
arpl
mov
std
gs
add
sbb
inc
outsb
sbb
and
sbb
scas
and
mov
test
je
mov
loope
gs
scas
fldcw
fwait
xor
lods
jp
mov
push
ds
ja
sbb
mov
cmc
or
sahf
sti
int
and
clc
and
scas
into
lock
jp
sub
push
jp
notl
out
sub
leave
mov
xlat
sbb
movl
imul
loopne
lahf
xor
test
pop
pusha
adc
negl
jle
cmpsl
pop
push
cmpsb
repnz
push
mov
pop
dec
mov
xlat
cmp
popa
and
lret
imul
testl
dec
mov
mov
clc
dec
sbb
sbb
xchg
stos
push
jo
xor
xchg
mov
mov
lods
push
cmpsl
or
mov
icebp
insb
pop
mov
push
stos
xor
aad
js
fisubrl
fwait
lock
aad
lods
push
out
or
and
imul
adc
push
pop
cmp
pop
and
or
push
jbe
andb
test
mov
lret
gs
add
pop
fdivp
pop
fidivl
push
jne
sub
xor
inc
push
sub
fstpt
push
loope
or
stos
in
adc
lcall
cmpl
mov
sub
mov
mov
bound
jle
test
mov
pop
mov
xlat
std
lret
cmp
cs
jbe
adc
orl
mov
cmpl
imul
cmp
popf
jmp
stos
sbb
stos
jl
dec
mov
xchg
adc
push
sub
pop
jmp
ss
push
jle
call
or
inc
aad
rclb
leave
push
mov
lods
lea
jp
cmp
push
fs
ljmp
sbb
imul
int3
loope
sbb
lret
out
mov
jecxz
imul
ret
orb
inc
sbb
xor
cs
inc
addr16
add
push
popf
mov
sub
loopne
dec
cld
jg
mov
pop
sbb
pop
push
mov
fsub
cmp
sub
ds
data16
jp
xor
loop
and
xchg
sar
adc
and
cs
addr16
lret
decl
jae
cld
adc
mov
mov
int
sti
mov
out
in
pop
push
call
mov
push
sub
mov
adc
inc
aas
mov
cmp
dec
pushf
fcomps
inc
inc
daa
and
sarl
xorl
sbb
jp
test
test
push
call
fucom
jns
cmp
mov
les
sub
or
mov
loopne
imul
add
out
mov
xlat
stc
jmp
add
or
push
push
iret
xchg
xchg
arpl
daa
out
call
mov
scas
fucomi
push
sbb
stc
pop
fiadds
and
scas
pop
pop
sub
in
out
dec
movsl
aaa
cmp
xor
mov
lods
imul
push
adc
out
mov
int
jne
bound
dec
loopne
and
mov
in
je
in
cmpsw
sub
xor
enter
ljmp
mov
mov
das
jmp
lea
es
push
gs
push
data16
xlat
inc
insl
adc
sbb
inc
ret
lock
aam
cli
fcomi
mov
insb
fwait
in
pop
mov
hlt
jbe
jae
rorl
cmpb
aam
lods
push
and
hlt
cmp
sbb
test
orb
mov
xor
lea
pop
jge
mov
lar
ret
call
mov
jbe
and
add
jp
jnp
outsb
pop
dec
fiadds
push
outsl
ljmp
movsb
popa
ljmp
jbe
push
sbb
fcompp
and
movsb
cmp
cmpsb
mov
sbb
shll
mov
jp
cmp
mov
and
mov
inc
and
test
popa
adc
inc
inc
sbb
mov
aaa
or
lods
cld
push
icebp
clc
inc
and
arpl
sti
dec
xor
dec
divb
add
aaa
test
in
ret
inc
call
scas
or
stos
sbb
add
xor
or
aaa
cmp
xor
xchg
int3
cltd
sbb
pushf
adc
arpl
movsl
xchg
popa
push
cmpsb
lock
mov
lahf
sub
add
sbb
leave
xor
inc
test
mov
jmp
xchg
pushf
mov
test
mov
dec
jnp
shlb
mov
cs
adc
or
jl
fdivs
adc
mov
popl
mov
pop
mov
out
out
outsb
pop
xlat
in
lret
cmc
test
arpl
jg
in
or
sub
jle
sub
dec
imul
sub
mov
into
fstp
jnp
jl
pushf
mov
mov
xchg
push
cltd
subl
out
jecxz
aam
push
adc
and
mov
sbb
insb
mov
popa
imul
adc
jp
cmp
cmc
mov
xchg
insb
nop
xor
aam
xor
popl
adc
inc
mov
sbb
jmp
lds
xchg
dec
out
js
jno
pushf
sbb
cmp
mov
dec
jb
push
fists
jnp
jg
push
lods
adc
cmp
cmpsl
jae
inc
in
xor
fdivl
and
arpl
cmp
shr
mov
test
dec
sbb
sub
xchg
push
push
jno
xchg
dec
push
mov
fdivrl
cld
mov
into
stos
xor
push
sub
call
or
js
aam
dec
sub
jbe
in
xchg
xor
adc
cmp
xchg
fcomip
dec
fists
sub
es
jg
pop
lcall
movb
push
jae
hlt
xor
cmp
adc
lahf
sub
dec
add
insl
xchg
jo
push
jo
cmp
pop
push
mov
imul
pushf
xchg
push
mov
in
dec
and
jns
out
dec
mov
inc
add
adcw
icebp
pop
xor
mov
sub
xor
ret
icebp
hlt
jns
push
test
mov
adc
xor
and
sarb
fwait
xor
xchg
imul
adc
mov
cmp
adc
mov
faddp
ja
xlat
popf
xchg
ljmp
or
out
shlb
sub
das
or
sbb
loop
mov
or
pop
addb
insl
adc
movsl
xor
jecxz
rclb
push
xchg
outsl
dec
ret
imul
jo
push
aad
xor
mov
insl
cld
pextrw
jmp
in
mov
or
mov
push
xchg
dec
mulb
fisttpll
sbb
jnp
push
push
fstpt
inc
cli
clc
add
pop
bound
ja
je
leave
outsl
pusha
ret
or
mov
cmp
into
sbb
out
add
lds
and
sbb
adc
pop
inc
or
and
pop
push
ret
roll
mov
mov
arpl
mov
cld
push
pushf
decl
out
dec
stos
xor
xor
fsubrl
ja
imul
mov
xor
outsl
icebp
ja
push
or
into
and
movsl
xchg
jbe
fists
adc
xchg
movsb
add
cmp
stos
inc
or
jecxz
cs
mov
fs
lret
mov
in
es
pop
push
lods
sti
out
inc
adc
mov
sahf
and
arpl
or
in
lds
cwtl
insb
push
stos
addr16
and
fildl
scas
and
mov
jg
mov
and
shll
scas
adc
in
mov
mov
xor
pop
popf
and
fwait
mov
dec
cmpsl
sarl
cltd
xor
out
and
cmp
push
mov
pop
cmp
das
sub
push
mov
scas
int3
cs
add
repz
scas
xchg
test
push
mov
cwtl
outsb
or
pop
int
xchg
push
sub
push
jecxz
push
inc
mov
out
pusha
push
xor
xchg
mov
cmpb
inc
repz
inc
sbb
repnz
pop
jne
dec
xor
sub
jl
jmp
cmp
add
sbbl
inc
inc
mov
fstps
fdivr
inc
aad
stos
aaa
ss
fidivl
aas
xor
sub
adc
adc
rcrl
ljmp
adc
or
xchg
mov
mov
mov
mov
mov
mov
ret
imul
rorw
fildl
jecxz
nop
popf
or
cs
out
mov
jl
addr16
push
xor
cmp
push
inc
call
rcr
mov
int3
mov
std
mov
adc
add
and
dec
xchg
push
movsl
mov
orb
daa
dec
icebp
jbe
dec
stos
mov
andl
lret
mov
dec
mov
sub
cmp
xor
dec
add
pop
or
adc
cmp
in
cmpsl
dec
mov
popa
in
clc
mov
or
mov
ror
and
pop
mov
int3
inc
outsb
outsb
leave
xlat
pop
pop
xchg
fistl
cmpsb
pop
adc
in
jne
or
adc
jge
nop
xor
pop
and
mov
int3
sub
bound
xor
add
aad
lcall
push
dec
inc
addr16
lret
inc
jno
fsubrl
jge
push
stos
cmp
sub
lods
xchg
inc
insl
jne
scas
xchg
or
sbb
lret
xchg
sbb
aas
jne
imul
inc
std
or
xorl
pusha
jnp
dec
fisttps
mov
push
or
imul
out
mov
movsb
inc
fs
inc
inc
or
repz
mov
mov
fistl
js
ds
adc
fs
sub
or
lret
jp
orb
pushw
xchg
ror
pop
stos
xor
dec
and
push
sbb
arpl
jo
and
xlat
test
not
pushl
jp
repnz
mov
insl
mov
inc
xor
or
pop
sub
aas
sbb
xchg
not
pop
fistpll
lea
sub
fists
pusha
js
out
sti
cmp
or
idivl
decb
sub
xchg
cmpl
sahf
add
xchg
leave
leave
lret
push
mov
or
fdivl
adc
sub
lods
mov
xchg
xchg
sbb
movsb
ja
mov
shlb
fdivl
push
push
jecxz
fs
mov
les
add
invlpg
push
mov
shl
leave
push
aas
or
ljmp
lds
pop
fsubrs
pop
test
pop
iret
xchg
mov
mov
sahf
test
mov
inc
mov
cltd
shr
ficomps
or
not
cmp
in
outsl
or
cmc
dec
jne
test
and
inc
mov
sbb
and
lods
es
add
aam
aas
inc
add
cmc
test
cmpsl
fwait
push
outsb
imul
fdiv
movsb
cwtl
cmpsl
inc
cmp
cmp
pop
and
mov
dec
mov
in
and
mov
fiaddl
mov
out
imul
lods
repnz
aas
xchg
inc
cmp
cmc
lea
xchg
push
loope
sbb
call
sbb
scas
jl
and
imul
sub
aaa
icebp
les
imul
cmp
or
ljmp
adc
mov
arpl
lcall
and
lock
mov
call
jecxz
pop
sbb
sar
mov
push
lea
or
ret
xchg
cmp
ds
in
xchg
iret
sbb
push
in
mov
fadds
mov
sahf
hlt
mov
jp
ret
punpckldq
insb
std
cmp
xor
mov
inc
push
loope
aaa
inc
lods
push
fisubs
popf
std
jle
jbe
jbe
scas
push
insb
pushf
jge
jp
push
push
int3
sub
push
call
test
jecxz
dec
jp
jnp
lcall
add
mov
icebp
aam
cmp
fsubrp
mov
clc
shr
in
cmp
mov
xchg
mov
and
inc
sbb
mov
mov
outsb
test
pushf
jg
loope
or
mov
mov
adcl
xchg
mov
aam
lea
inc
adc
arpl
jb
push
and
xchg
leave
add
aad
loopne
and
ds
outsl
push
pop
mov
and
mov
sbb
push
pop
add
jbe
add
iret
push
aas
mov
mov
rdpmc
subb
pop
pop
add
inc
mov
lea
hlt
int
out
lock
test
jns
mov
fwait
dec
xchg
cmpl
pop
sahf
xchg
mov
jb
nop
pop
pop
inc
sbb
push
lahf
cwtl
and
sbb
rorb
push
imul
scas
adc
popa
mov
jl
pop
sub
add
push
shlb
xchg
lret
leave
fwait
and
cmp
in
lods
leave
cmp
pusha
adc
xor
push
loope
sub
lahf
mov
jle
sub
inc
and
adc
popa
shrb
add
mov
lcall
mov
xchg
imul
dec
aaa
hlt
mov
insw
push
jmp
je
das
test
je
cltd
test
mov
adc
cld
les
adc
add
les
pop
jno
hlt
add
jb
jg
mov
pop
xchg
sub
iret
ret
test
sub
imul
cmpsb
dec
jnp
dec
push
xchg
lret
fmull
jo
and
out
cmp
test
int
test
call
loope
jp
sbb
or
mov
sub
cld
sarb
cmpsl
mov
and
and
dec
leave
sub
xchg
mov
les
jo
out
mov
adc
adc
mov
push
mov
sub
xchg
jo
push
faddl
test
gs
xor
or
out
cmp
xchg
scas
push
imul
push
inc
fwait
mov
sub
sub
adc
enter
in
nop
jne
cmpsb
outsl
lea
push
ficoms
nop
pop
and
and
mov
pop
popa
call
mov
adc
adc
mov
pop
or
xor
pop
dec
pop
or
imul
xchg
stos
nop
jp
jae
or
cwtl
loop
or
pushf
pop
in
pop
jl
inc
daa
insb
xor
daa
pop
mov
jl
fnstcw
mov
movsl
out
jb
pop
sbb
mov
les
mov
add
test
addr16
testl
aaa
pushf
dec
push
push
mov
xchg
repz
dec
in
xchg
xorb
add
idivb
mov
out
subb
test
add
test
outsb
mov
stos
je
xchg
pop
mov
xchg
fwait
dec
movsb
xchg
cmp
lret
mov
pop
xor
jb
scas
ljmp
out
outsb
xor
sarl
test
mov
cmp
fidivrl
dec
sbb
push
add
mov
cltd
into
outsl
jno,pn
mov
addr16
jmp
push
leave
out
sub
mov
out
test
or
jb
std
sbb
imulb
sbb
outsb
mov
xchg
sbb
sub
push
subl
add
cmp
daa
aam
pop
les
jne
cmpsb
inc
dec
scas
andb
sub
jmp
xor
push
xor
outsb
jnp
aad
inc
cmp
testb
lahf
mov
mov
loopne
repz
jns
jns
dec
mov
fisttpll
mov
aam
xchg
mov
sbb
sbb
mov
adc
xchg
fdivl
in
sbb
inc
nop
adc
ss
aam
ds
fcompl
push
mov
shlb
inc
pop
xor
mov
mov
push
adc
cltd
push
aaa
stos
lcall
xchg
out
loopne
in
fcomp
bnd
bound
pop
jl
push
xchg
aas
push
aad
and
les
test
sti
arpl
fistl
mov
stos
cmp
mov
xchg
inc
pusha
inc
aam
jmp
imull
lea
sub
and
xchg
loop
xlat
repz
lea
test
add
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
fldt
mov
dec
pop
jl
mov
xorb
or
leave
subl
xchg
push
xchg
inc
jg
mov
mov
xchg
outsb
lock
fwait
mov
or
addr16
sbb
push
shl
sub
fwait
lods
adc
jns
cmp
fwait
mov
in
loop
outsl
fucomp
sbb
mov
outsl
mov
out
mov
mov
or
aad
xlat
ja
imul
jg
dec
cld
cmpsl
jo
adc
adc
and
sub
adc
aaa
mov
dec
call
adc
enter
sbb
test
dec
cmpsl
inc
lret
jge
mov
cld
into
mov
mov
iret
int
pop
ds
dec
adc
adc
mov
mov
add
lea
push
cmp
fstps
jnp
pusha
xchg
dec
js
pop
jg
es
or
cld
shr
push
iret
outsl
loope
lahf
cmp
inc
fsubl
mov
adc
mov
iret
xchg
mov
enter
inc
jb
in
imull
dec
jg
scas
mov
in
adc
test
mov
and
xchg
shlb
fwait
adc
or
cltd
lret
sbb
sbb
pop
lahf
fbstp
pop
jae
jp
icebp
xor
jae
and
aam
sbb
pop
xchg
jnp
pop
dec
arpl
stc
push
pop
sub
sub
or
stc
cli
daa
ret
aaa
push
mov
mov
aaa
xchg
push
test
or
push
mov
pop
jo
mov
neg
xchg
in
int3
aas
ret
xchg
call
jmp
push
inc
cs
xchg
xorb
icebp
shr
gs
bound
lds
xchg
out
add
xchg
dec
add
mov
adc
adc
and
mov
shrb
pop
xor
rclb
jns
fisttps
aam
xor
pop
mov
loop
ja
mov
cmc
imul
or
aad
add
in
adc
mov
jecxz
pop
mov
xchg
mov
js
dec
sti
stos
push
push
inc
add
sub
cmp
movsl
dec
outsl
dec
cmp
adc
lods
cmp
enter
adc
jle
mov
sti
mov
push
inc
add
add
jl
ss
inc
fsubrl
test
ret
jnp
push
mov
repz
stos
mov
adc
mov
sub
fs
jp
mov
inc
es
aam
lcall
adc
push
push
sub
sbb
or
jne
repnz
or
xchg
and
mov
mov
jbe
xor
xchg
les
add
aad
jo
adc
cwtl
jmp
leave
repnz
mov
pusha
nop
push
dec
xchg
mov
dec
cmp
push
jle
insl
sbb
syscall
xlat
adc
or
in
test
jne
mov
xchg
aam
popf
aad
cltd
jae
adc
leave
sub
cmp
push
idivl
mov
js
push
daa
in
lea
sub
hlt
clc
sarb
scas
jns
adc
xlat
ss
and
enter
aad
xchg
inc
out
add
sti
xor
in
xor
dec
adcl
aam
arpl
addb
adc
add
add
xchg
xchg
mov
adc
add
sub
mov
sbb
inc
popa
popa
test
jmp
push
ret
ss
lods
add
mov
icebp
sbb
and
add
ja
sbb
test
lds
mov
mov
xor
test
dec
mov
jl
jmp
cmp
jmp
xchg
pop
mov
lea
std
es
lahf
mov
int3
clc
jo
shlb
sub
add
xor
repnz
js
leave
push
loop
movsl
insl
ret
xchg
scas
jno
jecxz
fnstsw
ret
lea
int
repz
ret
and
fidivrs
xchg
jns
sub
in
lret
iret
push
xlat
arpl
rorl
xor
ss
xchg
dec
fdivrs
dec
and
cmovbe
sbb
jne
sub
or
mov
pop
adc
gs
jg
rorl
or
add
leave
sub
lret
in
pop
jo
adcl
leave
int
bnd
ret
out
arpl
sbb
mov
dec
jnp
loope
loop
push
jg
out
xor
xchg
fbstp
mov
mov
movsl
xchg
cmp
xchg
sbb
pop
sbb
cmp
int
mov
dec
adc
mov
jno
ljmp
and
cwtl
inc
sarb
cmp
xchg
movsb
or
out
rcr
cmc
push
jge
cltd
sbb
xor
daa
sub
sub
mov
sbb
xchg
stc
and
pop
add
movsl
cmp
xor
je
pop
sti
adc
divl
rcrb
inc
mov
lock
hlt
dec
push
dec
xchg
adc
jo
sar
lds
outsb
inc
pop
jne
dec
mov
sub
adc
push
fisttpl
inc
or
rcrl
dec
jmp
and
cmpsb
push
sub
test
shl
ret
xor
out
aam
xchg
fldl2t
jnp
mov
cmpsl
jae
push
xor
enter
pop
adc
inc
pop
and
shlb
add
xchg
jecxz
adc
mov
imul
inc
jno
aam
dec
subl
adcl
pushf
mov
lea
mov
pop
lcall
lods
sahf
add
push
lods
and
or
les
mov
sbb
add
out
push
sbb
and
shll
cmp
pusha
or
xchg
inc
jae
sbb
sub
dec
std
xchg
in
out
sub
test
mov
dec
movsb
icebp
jmp
cmpsl
push
push
loop
add
es
jecxz
sbb
cmp
mov
xchg
jp
sbb
push
jo
iret
sub
cld
push
mov
cmp
test
xor
imul
mov
shlb
xchg
test
ror
addr16
adcb
sub
sub
adc
stos
outsl
inc
out
or
mov
cmp
loop
jl
mov
adc
push
mov
outsl
test
inc
sbb
dec
cltd
mov
fnsave
lods
and
pushf
sbb
mov
std
je
das
leave
mov
mov
aas
adc
push
xchg
movsb
lods
or
push
movsl
sub
sub
loope
xchg
fsubrl
mov
test
shr
daa
cmpsl
jl
arpl
ljmp
jae
push
popa
push
cmp
lahf
push
xor
and
fs
sub
and
add
lahf
cmp
xbegin
out
out
in
nop
cmp
push
rolw
enter
cs
test
mov
ret
sbb
cmpsl
adc
popa
cmpl
pop
dec
pop
clc
push
xorb
mov
xchg
arpl
sub
adc
lret
cmpsb
shll
and
push
aaa
dec
xchg
jmp
mov
sbb
push
sub
cmpsb
inc
out
mov
in
fdivl
out
mov
lods
je
jbe
pop
pop
dec
dec
xchg
std
scas
loope
cmp
sbb
mov
xor
inc
ret
jne
scas
notb
daa
popl
fcompl
rcll
add
in
cmpsb
mov
outsl
push
xchg
push
cltd
mov
xor
mov
cmpb
or
dec
fstps
shrd
xchg
xchg
add
lcall
xchg
shlb
jle
test
fists
sub
inc
pop
add
lods
sbb
push
ljmp
dec
xor
jmp
jmp
xchg
das
push
enter
jno
jmp
cmp
js
movsb
fdivl
and
push
pop
jns
push
xchg
in
add
jecxz
sub
data16
jmp
je
test
ficoms
scas
mov
popf
xchg
loop
xor
push
pop
mov
outsl
out
insb
xor
add
mov
and
sub
pop
cmp
ja
jbe
in
mov
pop
sbb
cmovbe
fbld
inc
push
mov
mov
loopne
inc
call
mov
test
jle
inc
arpl
jmp
xchg
rclb
push
scas
jns
idivl
aaa
xlat
shlb
mov
xor
jle
in
out
movsl
cltd
mov
push
ss
int
mov
cmpsl
add
mov
jge
inc
mov
or
sbb
and
cld
adc
lret
fists
mov
cmp
int3
push
mov
sbb
mov
or
push
add
jae
out
arpl
in
fildl
cltd
mov
dec
push
and
push
pop
jl
into
push
fwait
sarb
outsb
mov
sub
lock
in
es
mov
aas
out
add
pop
push
push
mov
test
xor
fs
cmpsl
jnp
add
out
pop
out
cmp
pop
mov
fs
in
out
call
into
jbe
test
mov
cs
iret
cltd
inc
lahf
push
push
inc
xor
and
and
inc
mov
dec
jg
loope
je
fbld
jmp
and
cmp
cli
sbbb
pop
adc
or
pop
mov
call
sub
mov
push
push
or
xor
out
sahf
lahf
jo
pop
cmp
xlat
imul
inc
xchg
fisttpll
sbb
daa
push
jno
add
in
test
out
testb
push
aaa
inc
out
ja
mov
insb
jb
xchg
es
adc
mov
xchg
push
push
mov
mov
lret
jmp
popf
push
fs
out
pop
cmp
les
mov
enter
cmpsl
xor
sbb
inc
jmp
testl
bound
jmp
sbb
mov
hlt
in
jl
lods
xchg
insl
mov
repnz
mov
jmp
push
adc
movsb
jbe
pop
or
lods
out
ret
mov
cmp
dec
les
jns
psubd
pop
adc
fdiv
stos
or
std
lds
mov
pop
and
jo
aam
daa
jno
mov
dec
mov
lea
cmp
and
or
pop
ds
push
xor
js
xchg
sbb
sahf
xor
aad
or
jmp
mov
cld
loopne
add
push
inc
sub
insb
add
sbb
or
into
dec
je
cmpsb
ror
xchg
cmp
xor
xor
imul
pusha
fwait
jle
mov
sub
add
andb
xchg
int3
jp
cmp
inc
inc
sarb
sub
sbb
subb
xchg
push
sti
pop
dec
cmp
lahf
xchg
and
jbe
sbb
jo
mov
sbb
test
jbe
cmp
push
xchg
inc
mov
sub
popf
fnsave
int
mov
mov
and
fucomip
cltd
notb
test
cmpsl
xchg
mov
xchg
loopne
aam
test
or
dec
xor
pop
sahf
xchg
popa
aad
inc
aam
rorb
clc
inc
loopne
pop
sbb
repz
lds
leave
push
inc
inc
mov
mov
cmpsb
ret
xchg
insb
testl
fimull
outsb
xchg
stc
xchg
int3
out
mov
inc
fldl
cmpsl
jae
push
call
in
cli
and
addr16
dec
js
sub
outsl
sbb
decb
outsb
xchg
push
push
inc
push
add
ret
push
push
xchg
lret
and
out
lret
sahf
mov
mov
dec
call
xchg
test
ja
fimull
jp
xor
pop
push
xor
test
or
and
std
lds
adc
dec
pop
xchg
fwait
cwtl
pcmpgtw
insb
test
sub
fdivrl
jecxz
mulb
andb
das
andb
jge
sbb
fistps
hlt
mov
xor
hlt
mov
push
lret
fcoml
and
push
xlat
es
nop
dec
and
ljmp
push
jp
xor
bound
mov
data16
cmp
cwtl
stos
mov
mov
push
mov
xor
lods
pop
adc
sub
push
add
pop
push
xchg
push
dec
std
xchg
shlb
pusha
adc
push
cld
xor
adc
xlat
rcrb
out
xchg
xor
repz
ja
xlat
and
jb
inc
lret
cmc
roll
mov
sub
jecxz
push
outsb
icebp
popa
cmp
sbb
daa
dec
mov
addr16
sub
push
cld
push
or
adc
jno
roll
jns
push
mov
xor
ljmp
adc
or
lods
mov
sbb
jb
test
dec
repnz
or
imul
imul
add
seta
lret
fwait
out
cwtl
and
loop
in
xchg
xor
or
mov
andb
mov
push
fs
imul
and
dec
stc
push
subl
push
inc
movsl
imul
fistps
out
cmp
jbe
sahf
lea
ss
or
inc
orb
mov
sbb
popl
ficomps
mov
ljmp
xchg
xor
cmp
xlat
pop
loopne
cld
mov
sub
pop
shrl
dec
loopne
outsl
ja
or
inc
mov
movsb
jmp
imulb
test
popa
or
iret
cmc
aas
jmp
and
stos
or
dec
imul
in
rcrb
mov
fwait
test
fisubrl
push
jg
add
and
mov
adc
inc
add
ljmp
xlat
loop
sar
cmpsb
push
push
sar
into
aaa
mov
dec
ja
fildl
jno
jo
xchg
push
cmpsb
xchg
xchg
and
int
std
lds
rcr
mov
add
mov
nop
icebp
outsl
mov
das
bound
cmp
xor
popf
hlt
insl
leave
inc
push
sbb
sub
outsb
mov
mov
out
jae
inc
dec
je
adc
sub
xor
xchg
bound
mov
sub
xchg
and
loop
jne
mov
repnz
fstpt
pop
pushf
jmp
xchg
ss
daa
aad
mov
in
push
sub
adc
or
ljmp
adc
or
jl
hlt
movsb
inc
mov
leave
bound
xor
aad
push
fistpl
outsl
cvtpi2ps
mov
loope
sub
scas
shll
mov
into
dec
rorb
mov
test
xor
jge
mov
rolb
cmpb
mov
mov
adcl
inc
and
daa
jmp
push
xchg
push
adc
lock
xor
imul
sub
stos
jle
daa
inc
loopne
sub
sbb
mov
and
out
and
icebp
mov
fcmovne
cmp
nop
lea
out
dec
pop
pop
lods
or
jmp
mov
or
add
mov
mov
mov
xor
shrl
and
ja
mov
and
rorb
les
lods
xor
lods
dec
adcl
push
test
add
mov
push
lock
or
es
aaa
aas
mov
fldl
mov
arpl
popf
cmp
test
repnz
mov
fdivs
jne
pop
mov
dec
fdivr
inc
orb
mov
sahf
pop
nop
mov
popw
pop
push
lret
jbe
dec
dec
xchg
push
ret
into
jle,pn
sub
pop
inc
aad
xchg
cwtl
inc
cmp
repz
sbb
dec
jb
inc
cmpsb
push
stos
adc
movsl
jne
fs
stos
adc
int
lcall
testl
dec
adc
xchg
dec
out
and
rorb
ds
rorl
call
arpl
cmpsl
add
cmp
cmp
mov
mov
xor
lods
push
iret
mov
cld
lea
dec
inc
jae
sbb
sub
adc
repnz
std
aam
jp
test
push
inc
aam
movsb
mov
push
adcb
out
and
lret
mov
scas
sar
dec
je
notb
push
sbb
mov
mov
adc
jbe
icebp
mov
test
cltd
sbb
imul
adc
pop
vpcmpeqd
and
daa
testl
adc
add
cld
cmp
je
cmc
shl
xor
jg
adc
jae
stc
add
in
sbb
inc
mov
loop
into
scas
push
jae
and
and
out
mov
enter
aas
loop
icebp
dec
sbb
push
push
lret
jmp
pop
shrl
daa
or
iret
sbb
adc
push
jmp
std
rcr
pop
xor
mov
aas
dec
rcrl
lods
jge
ror
add
mov
sti
addr16
jns
push
inc
cltd
inc
pop
add
inc
orb
sarb
fst
xchg
pop
cmpl
js
inc
dec
push
les
fwait
cmc
addb
add
dec
mov
sub
and
mov
addr16
ja
or
outsb
inc
lret
jp
lock
pop
or
das
in
sbb
or
loop
xlat
fistl
fidivs
outsl
out
mov
lods
mov
push
lock
adc
mov
push
fs
push
repnz
sub
insb
movsl
mov
cmpsl
ljmp
dec
cwtl
push
pmaxsw
popf
mov
mov
cli
or
jnp
aaa
pop
sub
mov
xor
sbb
cmp
enter
pop
dec
and
cltd
sbb
sub
cmpsb
xchg
pop
fisttps
mov
hlt
sti
mov
and
inc
cmpl
mov
dec
sahf
ds
repnz
mov
dec
nop
cli
sub
fimuls
int3
inc
dec
aas
mov
test
jae
inc
cmp
mov
dec
xchg
lahf
add
xlat
inc
xor
ror
test
shl
inc
sub
repz
movsb
or
testb
dec
rolb
int
lcall
sub
leave
mov
pop
clc
lcall
pop
dec
or
mov
cli
ret
int3
ja
mov
ret
pop
mov
popf
arpl
fsubrl
mov
nop
and
bound
lock
cs
jae
enter
mov
out
in
mul
bound
cld
out
cwtl
xchg
add
dec
cmc
insb
mov
mov
xor
cltd
out
push
sbb
inc
or
push
sub
popa
mov
pop
out
mov
cwtl
je
iret
cmpl
push
arpl
repnz
mov
clc
mov
shrl
cmpsl
pop
mov
dec
or
push
movsb
ret
sub
sbb
push
mov
fwait
mov
test
lock
loopne
sbbb
cld
or
repnz
aaa
cmp
repz
outsl
aam
arpl
push
xchg
jmp
jnp
dec
jg
xlat
jge
pusha
mov
je
enter
fxch
lods
aas
push
jp
popa
repz
aaa
and
jns
fistpll
mov
jmp
ljmp
push
adc
inc
xchg
imul
outsl
stos
arpl
xor
add
stc
fwait
aaa
sahf
dec
inc
inc
lret
push
outsl
int3
aas
call
xchg
cmpl
jo
iret
push
pop
add
ss
dec
pop
testb
lea
sbb
shll
mov
jecxz
sub
cmp
or
inc
jmp
testl
insl
or
movsb
test
es
push
mov
sub
in
jmp
leave
sbb
xchg
dec
sub
shrb
mov
push
add
xor
and
int3
push
ljmp
aad
inc
sub
lock
bound
pop
popa
sbb
cmpsl
test
rorb
outsb
mov
arpl
inc
mov
xor
sub
iret
les
xchg
xor
aad
dec
xchg
in
stc
mov
pop
push
sbb
in
mov
mov
dec
adc
movsb
mov
xlat
cltd
nop
adc
scas
or
add
les
sbb
inc
ljmp
push
hlt
scas
rorb
aaa
push
cltd
sub
je
insb
mov
popf
clc
bound
decb
pop
jle
nop
ljmp
pop
stos
shrb
cli
jne
jno
pop
ret
es
jmp
insl
pushf
add
sub
rol
xor
dec
cmpsb
arpl
sub
loop
or
xor
stc
insb
and
lods
jae
aam
mov
je
rcl
notl
pusha
adc
scas
sbb
sbb
scas
cmp
push
popa
push
xchg
aas
jne
sub
inc
push
push
mov
out
xor
xchg
jb
int3
orl
ja
jo
inc
and
push
ljmp
insl
mov
and
push
inc
fidivs
ficoml
adcl
insl
adc
push
int
mov
sbb
lods
lock
sbb
mov
stc
push
dec
dec
test
and
mov
test
and
in
data16
notb
mul
mov
dec
adc
cmpsb
add
adc
je
popf
push
adc
das
sbb
xchg
adc
loope
dec
scas
add
jmp
pop
inc
add
addr16
xor
cli
imul
add
xchg
jecxz
rcll
lret
enter
insb
out
push
add
jp
int3
aas
xor
jb
jp
leave
repz
xchg
sub
les
lcall
divb
xor
add
popf
popa
fldt
mov
sbb
jns
nop
and
aam
add
or
push
int
test
adc
inc
pop
ja
orl
cmp
loop
xchg
lods
jbe
insl
mov
fistpll
imull
outsl
lock
add
je
dec
out
out
mov
and
mov
rolb
jmp
inc
push
jns
cmpsb
mov
xor
add
add
std
test
repz
push
outsb
aas
outsb
adc
xchg
push
insl
cld
adc
cmp
sub
sub
push
jae
in
sbb
cmp
mov
pushf
push
arpl
aam
hlt
jg
add
test
cmp
movsb
out
aam
inc
cs
jl
jge
sbb
imul
in
cmpsl
dec
movsl
sub
xchg
cmp
cli
in
lods
rorl
sahf
outsb
xchg
scas
jne
enter
mov
repz
inc
mov
sbb
test
push
push
add
pop
sarb
ja
idivb
jle
das
loopne
jecxz
faddl
in
sub
xor
jecxz
icebp
mov
xchg
sub
xchg
adc
das
push
adc
clc
in
notl
into
push
adc
cmp
inc
xchg
adc
test
nop
test
cmp
aas
cltd
mov
mov
mov
aaa
sbbl
sub
mov
int
ja
mov
out
loopne
iret
popa
and
push
or
enter
inc
mov
jno
mov
and
and
pop
jbe
xchg
inc
enter
ss
xchg
dec
aad
div
jbe
xor
dec
dec
add
push
and
and
cmovns
call
mov
in
lea
dec
jnp
lods
or
pop
xchg
jmp
enter
mov
aad
push
mov
push
movsb
ja
lahf
add
mov
idiv
stos
inc
sub
lods
andb
popl
mov
push
fstp
or
and
leave
filds
adc
mov
and
xchg
cld
xlat
lock
pop
aaa
jne
jg
lods
in
in
mov
jl
and
sub
ror
xchg
mov
add
idiv
call
cmp
je
mov
ljmpw
pop
jmp
and
and
jno
jg
leave
std
add
lods
enter
inc
mov
mov
sbb
sti
push
sub
test
and
out
push
btc
ljmp
cmp
and
dec
adc
iret
push
ja
add
roll
xchg
shrb
jne
mov
lds
mov
dec
xchg
out
fdivp
aam
xchg
stc
es
int3
pop
outsl
hlt
pop
xchg
inc
insb
xchg
call
cmp
sahf
xchg
sahf
out
mov
pusha
add
lds
or
lea
adc
push
or
loopne
push
sub
mov
pop
cmp
roll
add
or
insb
das
enter
mov
add
bound
leave
aad
andb
loop
fs
xor
dec
js
and
out
xchg
movl
cmp
mov
and
xchg
mov
mov
pusha
fwait
test
push
pop
stc
fildl
push
mov
push
mov
mov
push
mov
call
ficompl
jb
fbld
negl
mov
dec
or
dec
xchg
or
leave
jg
push
xlat
das
movsl
out
cwtl
gs
adc
andb
push
out
adcl
cmpsb
lock
or
pop
jmp
cld
inc
inc
sub
pop
push
adc
add
cmp
xchg
pop
cmpsl
test
and
jae
popa
push
mov
xor
daa
adc
inc
or
hlt
add
push
dec
outsb
xchg
repnz
loope
out
or
jbe
cmpsb
or
push
and
popf
xor
inc
jecxz
in
cmc
push
xor
mov
cli
idivl
mov
jecxz
xchg
push
cmp
mov
lock
arpl
mov
xchg
mov
mov
mov
repz
loopne
dec
and
mov
imull
xor
or
mov
xchg
pop
addl
inc
push
test
adc
lods
or
jmp
outsb
xchg
xor
or
lods
popf
add
and
cmp
iret
sbb
cwtl
sti
testb
pop
sbb
push
dec
cmpsb
stos
mov
xor
sbb
in
mov
fcmovbe
ljmp
sbb
jae
xchg
add
add
in
push
dec
pop
icebp
mov
and
cmp
mov
xchg
inc
cmc
mov
mov
imull
stos
aas
mov
push
and
sbb
mov
mov
dec
xchg
in
add
popf
mov
cmpsl
mov
outsb
int
stc
push
pop
mov
ds
add
test
imul
test
mov
sbb
mov
xchg
mov
mov
clc
out
sti
ret
movsb
imul
adcl
inc
cmp
cmp
repnz
cmpsl
push
scas
inc
mov
test
and
roll
fisubl
or
sbb
imul
clc
mov
cs
shlb
inc
pop
push
sub
jnp
iret
fsubrs
popa
cmc
sub
lret
lods
xchg
iret
jp
jmp
cmp
xor
outsl
adc
ret
mov
stc
fldl
icebp
mov
push
test
or
mov
add
fmuls
push
lahf
pop
jle
addr16
fiadds
dec
in
xchg
sub
sub
popa
lds
dec
loopne
push
clc
push
xchg
ret
inc
std
and
andl
push
push
or
push
mov
scas
xor
push
sub
mov
lahf
add
dec
jp
inc
or
mov
jno
pop
dec
in
push
and
cmp
mov
insl
adc
ja
lods
out
cmp
xlat
outsb
xor
push
inc
fildll
test
pop
mov
and
push
push
and
ljmp
add
sbb
mov
jge
popa
test
xor
jmp
sub
enter
mov
daa
xchg
and
inc
mov
pop
jmp
bound
dec
popa
and
mov
xchg
lret
dec
ret
sbb
loope
mov
mov
std
dec
push
or
cmp
aaa
dec
xor
or
ret
pop
pop
xchg
mov
pop
xor
xchg
call
adc
stos
push
sbb
es
out
mov
or
cmp
int3
es
pop
das
in
and
cmp
mov
stos
pop
sbb
xchg
movsl
dec
adc
inc
iret
mov
mov
mov
sub
jg
cmc
sbb
add
and
sub
mov
fwait
jae
dec
cmp
add
enter
pop
rcrl
lods
inc
in
push
and
lds
sub
shrb
test
sbb
mov
jge
and
push
jge
lcall
jmp
or
bound
into
dec
repnz
cmpl
mov
and
jmp
dec
and
jg
es
inc
sti
stos
js
push
xchg
out
pop
sahf
xchg
mov
repz
xchg
test
dec
fistpl
xor
inc
add
fiaddl
or
adc
sbb
cmp
dec
adc
adc
and
lahf
popf
pop
jnp
ja
int3
xchg
data16
mov
mov
cmpb
mov
or
nop
mov
or
sbb
cld
push
andb
mov
jle
icebp
push
loopne
sub
out
jnp
mov
mov
fistpl
lret
xor
test
int
inc
in
icebp
and
int
mov
cs
mov
dec
mov
mov
inc
inc
lret
test
jb
inc
cwtl
add
cmp
mov
cld
fsts
xchg
add
mov
popf
mov
push
popf
aad
insl
inc
xor
imul
xchg
mov
push
mov
leave
mov
mov
mov
addl
femms
cmp
es
add
pop
inc
rol
jnp
pop
adc
aam
sarb
jnp
test
in
lcall
dec
addl
dec
mov
or
push
sub
push
icebp
mov
cmp
fld
sarb
fwait
push
cmp
or
add
sbb
stc
cmp
arpl
xor
sti
popa
jae
jno
jg
fidivrs
addb
add
push
bound
loopne
dec
clc
xchg
ror
outsl
pop
out
add
outsb
mov
leave
mov
or
mov
jne
mov
jmp
shl
stos
fwait
sbb
inc
repz
iret
mov
pop
xchg
or
push
out
jp
fisubrs
dec
repnz
pop
or
sub
add
mov
jg
rorl
call
clc
lret
int3
clc
sarl
jl
ljmp
sbb
add
jne
cmp
dec
dec
sub
cwtl
enter
pop
cmpsl
jl
enter
mov
inc
add
dec
and
add
mov
sbb
popl
cmp
pop
jl
mov
movsb
add
mov
lahf
xor
rcrb
add
lret
icebp
sub
inc
push
lret
mov
and
sbb
mov
ja
js
aam
mov
test
ljmp
pusha
xor
cmpsb
bound
inc
movsb
cmp
mov
dec
jg
bound
cmpsb
dec
ss
mov
inc
pop
mov
daa
outsb
rclb
cmp
enter
jae
and
test
or
xchg
push
inc
xchg
insb
mov
std
cmp
sbb
or
ret
fbld
add
cmp
stos
add
loope
mov
push
insl
pop
cmp
jl
test
ret
xchg
es
fldt
leave
int3
jl
jbe
jl
stos
cmp
out
mov
xor
jl
xor
aad
pop
cmp
adc
hlt
in
imul
cmp
loopne
call
movntq
out
xlat
inc
out
add
xor
push
cmp
outsl
cmp
into
fisttpll
add
sub
inc
cmp
cwtl
cld
sbb
fwait
jno
adc
cmp
orl
gs
icebp
lods
out
inc
or
add
lds
sarb
mov
fidivl
mov
popa
std
jecxz
lods
jae
std
fcom
mov
jp
mov
adc
pop
xchg
inc
in
ret
sbb
cs
xor
cs
add
mov
mov
pop
sub
pop
lret
out
mov
filds
outsb
shll
aaa
push
jmp
lret
mov
jge
xor
jmp
scas
int
mov
cli
push
popa
cmp
add
jnp
fildll
nop
aas
push
jae
ja
aam
mov
adc
cmp
or
scas
loopne
movsb
loopne
ss
xor
jno
push
adc
sub
sbb
in
scas
or
scas
push
sbb
sbbl
out
in
lahf
insb
jno
inc
addb
dec
fwait
out
mov
cltd
mov
sbb
stos
xorb
popa
mov
stos
ficoms
mov
scas
dec
js
xchg
lret
out
push
insb
icebp
inc
xor
lahf
or
scas
movsb
mov
outsb
push
fistps
mov
adc
cmpl
cmc
or
decl
pop
inc
adc
ljmp
mov
push
in
xchg
xchg
mov
xchg
daa
and
jnp
add
cmp
inc
mov
sarb
clc
mov
arpl
mov
pop
arpl
push
popf
push
loopne
sbb
add
fldenv
push
das
shlb
inc
adc
fidivrs
fwait
xchg
inc
push
popa
movq
xchg
inc
aaa
mov
call
dec
jg
lods
test
cmp
in
lds
cmpsb
and
xchg
adc
lret
pop
xorb
sti
inc
xchg
lret
cmp
std
sti
adc
paddq
fs
lret
or
pushf
sbb
push
inc
jp
mov
cwtl
shl
push
or
sbb
jecxz
pop
loop
loopne
adc
leave
jmp
add
sbb
sub
repnz
jno
lahf
or
cmp
push
jb
bound
fwait
inc
xchg
cwtl
ja
test
jmp
movsb
and
repz
clc
aas
stc
dec
imul
vmovups
cld
stos
jle
jns
jo
test
mov
loop
mov
pop
cmp
ss
idivb
adc
mov
stos
shrb
in
and
jg
mov
rep
pop
in
jbe
sysenter
mov
loop
shrl
pop
push
out
insl
andb
pop
in
mov
in
pusha
sub
or
xor
clc
cmp
mov
imul
inc
loope
cli
cli
and
or
pop
sbb
and
jl
pop
lock
rorl
mov
pop
les
movsl
and
pop
cmpsb
hlt
mov
insb
push
xchg
mov
call
mov
jbe
inc
fstpl
cli
into
adc
ss
mov
inc
ss
adcl
adc
dec
aam
arpl
in
adc
add
dec
jo
mov
fs
gs
sbb
cli
push
ficoms
pop
push
cmpl
out
cmp
adc
or
pop
cmp
mov
std
ss
ja
inc
cmp
aas
xchg
orb
ret
lods
int
push
mov
mov
aam
sbb
lahf
mov
xchg
pop
mov
ja,pt
dec
subb
in
mov
loop
cwtl
xchg
outsb
hlt
out
adc
adc
jecxz
adc
incb
dec
in
ljmp
insb
and
arpl
cs
imul
adc
lods
loopne
call
mov
dec
xchg
mov
jmp
lock
into
test
mov
xor
dec
leave
cmpsb
dec
int3
bound
lea
aad
gs
add
mov
andl
mov
adc
push
or
jp
js
jne
sub
repz
test
xchg
jnp
jne
mov
or
mov
mov
ja
test
movsb
aad
push
lret
push
push
dec
fdivr
out
rclb
xor
inc
imul
inc
stos
jg
outsb
jg
cs
lods
jns
cwtl
push
jl
test
iret
cmc
cmp
sbb
pop
jmp
mov
das
or
fisubl
push
mov
into
jnp
sub
add
jecxz
inc
inc
sub
cltd
mov
pop
sub
pop
std
rol
adc
or
cmpsb
push
inc
pop
cltd
ret
jns
ret
nop
pusha
into
jo
sbbl
sub
mov
setbe
mov
cmp
clc
jns
fsubrp
add
rorb
or
push
adc
sub
sbbl
pop
pop
bound
into
or
andb
movsl
add
cmpsb
repz
cmpsb
add
loope
clc
xor
or
xor
nop
xadd
rclb
inc
mov
das
fstpt
int3
sub
add
mov
sub
mov
add
sub
shlb
jne
jbe
and
cli
xor
mov
shr
mov
fidivl
jmp
in
push
xchg
mov
mov
jle,pn
popa
jmp
std
stc
sub
testb
pcmpeqd
mov
in
pop
pushw
outsl
ud0
mov
sub
sbb
cmp
fwait
icebp
aas
jne
add
mov
ss
sub
fwait
sub
adc
jo
or
mov
rorb
ret
daa
cmpsb
pop
imul
inc
lret
jmp
fs
inc
add
das
or
or
icebp
mov
mov
movsl
addl
mulb
cmpsl
icebp
pop
fisubrs
mov
cmc
es
in
or
outsl
mov
sbb
inc
outsb
insb
sahf
data16
nop
mov
push
ret
orb
cwtl
rorl
mov
pop
adc
outsb
adc
and
fdivr
fwait
ret
push
cmpsb
in
cwtl
js
iret
fiadds
fmul
lock
rcr
adc
cmpsb
inc
dec
inc
test
scas
push
pshufw
movsb
pop
sti
mov
mov
fcomi
lock
les
pop
loopne
jno
loope
or
xor
xor
fisubs
mov
in
psubusw
outsb
lods
out
clc
ss
pop
jbe
subb
pop
mov
dec
ss
mov
or
push
add
xor
and
jnp
lock
cmp
or
pop
or
lret
mov
test
inc
enter
mov
out
test
fildll
fisubrl
sbb
add
orb
movmskps
les
mov
mov
sbb
mov
outsl
sbbl
xchg
push
jge
mov
fwait
xor
mov
psraw
dec
push
sub
jne
sbb
test
dec
push
das
pop
cmp
dec
repnz
mov
out
adc
movsl
push
mov
pop
mov
test
imul
call
insl
xor
cli
sahf
loopne
in
sub
mov
xchg
push
arpl
faddp
lcall
cwtl
xor
mov
fsubrs
sbb
pop
cmp
add
jle
cli
into
int
cmp
adc
ret
pop
fstpl
jbe
sahf
lock
shll
out
adc
loop
inc
clc
xor
call
cli
std
mov
mov
jnp
sub
mov
inc
sub
std
lahf
adc
xor
cmc
mov
testl
movsb
out
add
pop
cli
add
ret
mov
lret
aad
mov
pop
xchg
and
ljmp
cwtl
divb
xchg
sub
dec
in
jmp
jne
inc
mov
and
movsb
rclb
popa
test
pop
pop
enter
push
into
movsb
clc
jp
sub
fwait
cld
test
or
pop
in
in
loopne
inc
pusha
aas
mov
testl
cmpsl
js
lea
int
and
lock
cli
sbb
aam
push
xchg
push
pop
mov
cmp
adc
mov
lcall
out
adc
sub
and
bound
mov
je
push
add
xlat
cmpsb
jmp
push
inc
pop
stc
jbe
lcall
push
in
pop
les
jge
xlat
lods
add
sbb
push
fcoml
bound
push
xor
fdivrp
dec
cmp
leave
push
dec
pop
adc
test
or
scas
stos
mov
mov
mov
and
stos
cmp
insl
sarl
push
push
fdecstp
lods
addr16
or
hlt
fstps
ror
out
dec
adc
sbb
addl
and
push
sbb
dec
jne
stos
repz
adc
shlb
iret
or
cmp
mov
jle
xchg
push
loope
test
nop
loop
mov
jno
pop
xor
fidivl
fmull
sbb
flds
xlat
add
adc
popf
movsb
pop
dec
mov
mov
rorl
xchg
inc
push
popf
push
outsl
jmp
pop
jp
icebp
jp
mulb
icebp
clc
jne
jecxz
mov
xor
loopne
pop
icebp
movsl
cmp
xchg
mov
jmp
jo
ljmp
inc
es
leave
jecxz
lds
ffree
sbb
arpl
mov
adc
imul
add
test
into
pop
cli
pop
cmpsl
lods
mov
cmp
cmc
in
mov
jbe
scas
jns
dec
sbb
dec
mov
shlb
lahf
xlat
stc
mov
vcomiss
push
out
inc
gs
mov
mov
fbld
orl
or
jnp
lock
push
mov
lret
adc
cwtl
xchg
insb
add
dec
faddp
dec
int
out
popa
and
in
mov
stos
mov
jecxz
out
and
sbb
aas
sbb
mov
inc
mov
je
adcl
shll
lods
jo
es
xor
icebp
aad
test
in
add
repnz
daa
or
loop
push
push
sub
pop
add
cmp
pop
xor
into
pavgw
ret
incl
and
pop
mov
inc
dec
rolb
cli
and
in
inc
pop
or
jne
push
xor
sbb
jmp
subb
and
iret
add
test
jbe
stos
lcall
mov
in
dec
pop
test
outsl
inc
mov
sbb
adcl
cmp
or
popf
leave
jmp
xchg
js
xchg
repz
push
jnp
dec
hlt
sub
data16
inc
adc
adcl
adc
xchg
and
es
mov
inc
out
xchg
jmp
mov
imul
adc
sti
inc
fldt
pop
sbb
pop
mov
ds
push
or
dec
es
or
push
sub
jo
cs
pop
addr16
pop
int
jb
insl
lods
xchg
test
fsubrs
hlt
addr16
jae
mov
xchg
test
mov
add
jg
loop
fisubrl
mov
je
aam
cltd
arpl
xchg
or
aaa
lea
dec
and
nop
fisttpl
je
pop
cwtl
mov
fcompl
dec
aad
je
jns
out
inc
lock
call
jbe
shlb
icebp
add
ret
movsb
stos
enter
cs
in
roll
fs
rolb
cmp
sub
call
hlt
test
out
mov
int
add
lret
adc
fidivs
ljmp
add
cmp
sarl
cmc
cmp
jge
mov
sbb
mov
inc
ror
xchg
sahf
mov
cmc
jge
add
hlt
jbe
scas
mov
pop
out
adc
sub
cmp
cmpsb
ja
imul
lds
ja
sbb
inc
xchg
test
mov
outsb
sbb
ss
fs
add
xchg
pop
jb
stos
xor
lds
xchg
cmp
mov
ja
sub
lods
jl
xchg
mov
sub
repz
or
dec
push
test
dec
push
cmp
shrl
les
and
inc
mov
dec
jp
ret
test
clc
mov
sbbl
sub
sub
cmp
dec
leave
or
jb
cmpsb
dec
in
filds
mov
dec
fmuls
daa
xchg
into
aad
pushf
cltd
push
jmp
out
test
repnz
sbb
jb
notl
inc
cli
cmc
fstps
sbb
pop
lea
out
sub
cmp
add
pop
jp
inc
sub
xlat
cmp
pop
hlt
in
sub
addb
aaa
arpl
fisubrl
adc
adc
rclb
and
cltd
sub
outsb
out
mov
jnp
outsl
sub
scas
dec
ds
cmp
inc
xor
mov
jl
mov
inc
out
mov
imul
mov
mov
xor
or
xchg
movsl
scas
dec
fildl
or
inc
lahf
push
or
cld
xchg
sahf
iret
out
adc
movsb
mov
adc
or
es
xchg
mov
xor
fiaddl
dec
add
push
fnstcw
shrb
arpl
repz
jecxz
insl
jmp
push
pop
push
cmp
sub
cs
pushf
dec
add
jle
pop
mov
xchg
mov
nop
daa
xchg
popa
pop
mov
fldt
inc
mov
call
jge
pop
test
jmp
sub
adc
lret
mov
imul
push
pusha
push
xor
mov
rolb
insb
dec
jbe
xchg
sbb
into
mov
and
repnz
jnp
sbb
lcall
add
cmpsl
cmp
js
sub
decl
out
bsf
sbb
pop
mov
dec
in
cmp
jne
jge
jne
scas
gs
movsb
xchg
mov
int3
pusha
sbb
js
imull
inc
pushf
cmpsb
sbb
cmp
fs
into
jbe
adcb
lahf
jg
in
pushf
dec
fisttps
sbb
jns
test
hlt
mov
rcr
aaa
das
cmc
pop
jae
mov
fs
push
addb
or
incl
mov
rcrl
int
rclb
push
xchg
cli
or
popf
rorb
pop
enter
in
or
mov
cs
fstpl
out
pushf
mov
ljmp
mov
das
or
clc
mov
cmpsl
push
cmp
shlb
pop
das
mov
ljmp
ljmp
movl
stos
add
xor
lock
xchg
jae
loop
push
enter
scas
xchg
and
fmul
and
inc
popf
out
cwtl
or
testb
fwait
inc
mov
pop
shlb
sbb
or
arpl
mov
nop
aam
xor
inc
sub
je
add
inc
cli
adc
dec
popa
fidivl
test
adc
mov
test
sub
idivl
flds
adc
rcr
aas
jno
xor
outsl
jle
jge
cmp
imul
or
cmp
imul
stos
xlat
and
push
pop
mov
and
xor
mov
dec
cmp
adc
inc
popf
mov
mov
jg
mov
adc
mov
mov
xor
popa
push
push
cwtl
and
xor
pusha
and
adc
leave
dec
xchg
loop
xor
movsb
popa
js
cmp
outsb
test
jle
popa
stc
scas
lock
sahf
push
iret
mov
push
mov
aam
add
mov
pop
pop
repnz
lcall
subb
inc
cmp
or
insb
out
mov
lcall
pop
xor
jmp
in
dec
pop
xchg
jg
cmp
fnstenv
out
pop
popa
shll
pop
stc
jg
fwait
sbb
lret
push
fiaddl
test
push
push
mov
imul
jecxz
xchg
addr16
jge
incl
pop
pop
mov
jg
sub
push
jae
sub
or
les
scas
adc
es
loopne
mov
add
dec
xor
loopne
xor
pop
popf
adcl
fst
popa
cmpsb
jmp
jno
mov
add
fisubs
mov
push
mov
cmp
add
ja
outsb
sbb
jns
stos
das
orb
xlat
repz
in
lea
outsb
cltd
cmp
aaa
mov
mov
mov
xor
xor
test
mov
int
dec
push
push
sti
mov
jp
inc
or
inc
cld
into
cmpsb
test
lea
cmp
sub
or
push
ds
test
repnz
lret
divb
and
cmc
inc
fcmovnbe
cwtl
jmp
add
into
inc
ret
pop
data16
stc
scas
cmp
and
cmpsl
jecxz
and
imul
dec
popa
pop
enter
mov
or
cmp
cld
test
call
and
mov
add
loopne
mov
data16
cmp
jmp
mov
push
and
xchg
push
out
icebp
dec
faddl
les
dec
cmpsb
ret
repz
lock
ficompl
aas
stos
jecxz
adc
and
pop
sub
dec
js
jnp
int3
call
cmpsl
sti
lahf
push
or
pop
fimull
jl
mov
insb
cmp
repnz
loopne
sub
fisttpll
or
sbb
or
in
mov
jno
aaa
aad
or
or
mov
popf
mov
aad
and
mov
add
jb
xchg
and
xchg
sub
pop
aam
jne
push
sbb
adc
xchg
or
jmp
add
lcall
mov
pop
xlat
rclb
cs
int
scas
jecxz
adc
imulb
push
mov
cmp
dec
jmp
mov
sahf
mov
adc
mov
sbb
insb
mov
negb
lock
dec
rol
sub
sub
aaa
idivb
pop
jl
imul
pop
cmp
sbb
test
cwtl
lods
imul
sub
lahf
in
scas
and
sahf
jmp
sti
sbb
popa
mov
pusha
jle
xorb
into
jl
rcr
mov
xchg
mov
mov
mov
push
push
cli
mov
inc
outsb
adc
sbb
mov
pusha
out
jg
lret
inc
lcall
jp
inc
adcl
pop
outsl
adc
cmpsl
cmp
icebp
outsb
and
lcall
mov
icebp
cltd
mov
mov
or
sbb
push
inc
and
faddl
int3
insb
mov
inc
mov
sbb
add
arpl
xlat
lods
xlat
in
ret
push
es
push
or
push
dec
repz
cmp
cmp
test
and
test
lret
adcb
mov
jo
adcl
daa
cmpsb
aad
arpl
adc
mov
out
pop
dec
cmpsl
test
mov
and
dec
cmp
fsts
sub
cmp
mov
mov
pop
lock
and
push
out
fcompl
pop
sbb
outsb
push
in
ret
jl
lcall
shll
and
cmpsb
scas
dec
sahf
mov
sbb
xchg
mov
sub
iret
insb
stos
pusha
xor
mov
xor
stos
aas
es
stos
fsub
push
jge
mulb
mov
dec
inc
fdivrs
fistps
xchg
pop
sbb
jecxz
lea
sub
add
jo
fs
mov
sub
cmp
pop
adc
xorb
inc
cmp
push
sub
outsl
mov
lds
pop
sub
mov
xchg
ficomps
pop
push
ret
cmc
xchg
sbb
ficompl
or
and
pop
loopne
inc
adcl
cmp
lods
stos
add
inc
cmc
ss
mov
loop
fadds
xor
or
xchg
test
pop
jne
js
aaa
add
aam
ds
jns
js
dec
lock
stos
mov
jg
xchg
orb
xor
in
adc
push
dec
jge
push
xor
jp
push
test
roll
pop
nop
dec
loope
in
mov
ficomps
decl
mov
and
pop
insb
fwait
inc
add
dec
jbe
dec
test
sbb
call
leave
lods
jns
jmp
and
cmp
lea
aam
mov
dec
mov
xchg
jnp
fldenv
or
fnstcw
cltd
divl
cltd
movsb
aaa
xor
xchg
xor
in
insl
iret
sbb
scas
xchg
jnp
je
js
push
mov
scas
mov
lock
fucomp
xchg
xchg
mov
in
lods
aad
push
mov
popl
imull
or
mov
shl
stc
js
testl
jne
inc
lret
cltd
insb
xchg
cmc
xchg
xor
jb
repnz
lock
mov
or
out
enter
adc
rorb
loopne
scas
fmuls
gs
shlb
push
cmpsb
daa
add
push
push
mov
sbbb
daa
aad
scas
pop
jg
es
pop
lds
cmp
ret
pushf
iret
out
test
xor
sbb
inc
mov
cmp
cli
insl
pop
icebp
jecxz
scas
pop
push
and
fildll
outsl
cli
or
aaa
cli
out
scas
inc
cmp
ja
out
push
cmp
mov
ss
fwait
pop
lods
adc
int
jo
dec
push
add
test
inc
ljmp
pop
jle
or
inc
push
stc
add
sbb
push
iret
lret
inc
xor
enter
xor
and
or
mov
ficoml
inc
mulb
ds
bsr
add
push
pop
hlt
in
sbb
jbe
dec
adc
dec
jg
dec
or
fsub
pop
jge
hlt
or
addr16
mov
mov
filds
test
lret
mov
fimuls
cli
hlt
xchg
jne
jne
std
mov
pop
mov
idiv
mov
jno
bound
sbb
add
sbb
out
sbb
aad
in
cltd
xor
xchg
xchg
push
xchg
jo
daa
adc
loopne
push
repnz
popf
les
test
adcb
xchg
sub
adc
jmp
mov
std
pop
rclb
aaa
daa
shlb
mov
pusha
in
lret
ja
pop
dec
aad
std
jecxz
mov
dec
sub
movsl
les
imul
push
outsb
mov
test
push
inc
xlat
shll
push
add
inc
mov
sbb
leave
dec
adc
int3
lret
add
enter
cmp
xor
push
adc
stc
xchg
xlat
cli
sub
push
inc
cmpsl
clc
cs
sbb
stc
mov
xlat
adc
lods
pop
dec
mov
sahf
jo
fs
cs
fadds
mov
mov
mov
aas
divb
jb
xorb
popa
push
and
add
ss
mov
sbb
push
pop
and
ljmp
push
aaa
fcompl
xor
repnz
repnz
nop
scas
push
outsb
repnz
sbbb
sub
dec
fiaddl
daa
rcll
aaa
inc
out
adc
xchg
outsb
jge
fsub
lret
insl
pop
and
clc
addb
test
and
lret
lcall
sti
sub
lahf
dec
or
and
gs
out
or
lds
pop
test
icebp
inc
sbb
or
or
pop
fcompl
shl
fwait
push
pushf
andl
testl
loope
sbb
sub
sub
push
dec
xchg
mov
xor
push
rcl
out
and
dec
jbe
lret
cmp
mov
push
cmpsl
cmp
pushf
cltd
arpl
leavew
adc
cmp
mov
mov
push
mov
fs
test
ljmp
mov
sbb
test
add
lret
or
pop
icebp
subl
and
jl
scas
ffreep
and
and
jp
inc
ljmp
pop
push
fs
clc
stos
pop
int3
jg
adc
push
dec
std
jo
mov
sarb
push
iret
jae
jb
out
or
jns
xor
and
test
mov
mov
add
pop
and
out
insl
push
out
jo
adc
sti
lret
pop
jl
stos
cwtl
sbb
std
bound
sub
sbb
jmp
fdivr
sub
test
dec
clc
jl
or
sahf
mov
sbb
inc
cld
fdivs
jmp
cmp
scas
scas
pop
inc
mov
or
add
push
lds
mov
mov
or
jle
dec
and
fs
pusha
jbe
push
mov
in
dec
mov
cmpsb
cmp
pop
add
sub
ret
stc
imul
lcall
xchg
xor
add
into
in
inc
push
sbb
std
xchg
aad
adc
mov
pop
sub
jns
pop
lret
jl
mulb
repnz
mov
push
push
jg
adc
inc
aad
or
cmpl
xchg
inc
ret
cltd
cmp
cmp
cmp
popf
nop
adc
loope
adc
sbb
or
fxam
arpl
dec
shrl
xor
inc
jnp
les
jle
ja
cld
mov
cmp
testb
clc
push
mov
xchg
fldl
pop
cmp
cmp
or
inc
lahf
inc
push
push
dec
sbb
mov
pop
and
in
jg
xlat
jo
push
mov
lret
jns
pusha
jbe
out
js
stos
pop
cmp
dec
mov
les
or
adc
mov
shr
fucomip
mov
push
pop
enter
xor
mov
daa
addr16
push
dec
push
ret
rolb
divl
icebp
insl
into
xchg
out
fsts
mov
scas
xor
xchg
cs
iret
cs
clc
xchg
jl
cltd
scas
mov
sbb
push
imul
adc
ret
stos
jo
aad
out
pop
arpl
pop
push
test
xor
sti
xor
loop
rcr
lods
mov
and
and
cmp
xchg
pop
scas
stc
fisubs
fwait
or
push
sub
jae
dec
sbbl
data16
popa
filds
sub
out
aad
fyl2xp1
jmp
nop
xchg
sahf
addr16
or
mov
dec
lods
push
push
mov
push
xchg
pop
add
lcall
mov
out
inc
subb
aad
fistl
xor
lret
push
ret
aaa
adc
push
mov
push
push
mov
mov
mov
gs
enter
mov
cmp
inc
push
mov
cli
fidivrs
cs
fucomip
sbb
cli
dec
ficoml
sbb
add
dec
orb
or
popa
sbb
xchg
mov
push
mov
add
cmp
js
dec
adc
jp
in
mov
out
pop
adc
inc
mov
add
xchg
adc
out
scas
cld
dec
test
sub
jle
into
mov
mov
push
dec
or
inc
cmpsb
mov
xchg
mov
cmp
out
fsts
jb
pop
push
adcl
rorl
and
pop
xchg
enter
addl
popa
lret
inc
test
push
cmp
or
iret
push
adcl
imul
adc
mov
xchg
or
mov
shlb
ret
adc
roll
cmpsl
inc
adc
mov
or
leave
xlat
ficompl
scas
paddb
setb
pop
jo
outsb
and
and
ret
dec
popf
adc
mov
or
mov
dec
loopne
mov
jle
addr16
je
fisubs
xchg
and
js
les
stc
idivb
or
mov
bound
pusha
jecxz
lods
out
cwtl
loop
shlb
shrb
sbb
shl
jno
nop
inc
mov
cmp
cmpsb
mov
sbb
cmpsl
adc
rorl
sub
lcall
leave
jnp
fcomps
lods
mov
mov
or
nop
adc
scas
mov
stos
mov
stos
mov
xchg
fnstcw
sahf
xor
sahf
mov
add
aaa
sbb
mov
movsl
movsl
push
push
into
int3
xor
mov
ss
mov
push
rcrl
dec
popa
xchg
xlat
cmc
cmp
sub
cmpsb
dec
insl
roll
sub
jecxz
xor
cs
inc
popa
outsl
inc
inc
aaa
pop
mov
sbb
xor
inc
test
cltd
fs
rol
or
jecxz
mulb
xchg
ret
mov
inc
xchg
mov
test
in
pop
dec
ret
push
aam
sub
push
dec
int3
pushf
xchg
add
cwtl
push
pusha
repz
inc
push
pop
xor
cs
inc
xor
dec
pusha
andb
int3
repnz
mov
les
btr
cwtl
push
mov
jb
imul
cmp
fdivr
mov
out
cmc
mull
cmp
pop
pop
xor
cli
jno
ficomps
pop
ja
pop
push
out
pop
in
out
mov
or
das
cli
xor
xor
imul
movsl
mov
mov
cmp
fwait
jmp
mov
stc
adc
divb
insb
bound
notb
jle
mov
pop
and
data16
or
outsb
outsl
mov
stos
rcrl
xor
and
mov
xor
mov
clc
xchg
sub
adc
cltd
loope
or
shrl
ret
push
pop
add
mov
dec
sub
sbb
jo
mov
sub
cmp
push
inc
xchg
cmp
xchg
out
jns
cmp
jne
lods
sub
ss
fisttpll
and
movsl
fs
mov
mov
push
daa
lock
in
in
sbbb
or
add
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
xchg
xor
jl
dec
pop
jl
and
or
call
out
dec
std
fwait
adc
das
mov
roll
push
xlat
loop
cs
jae
das
dec
jo
mov
push
call
aad
xor
xchg
pushf
mov
mov
xchg
aam
addr16
mov
adc
incl
and
ret
in
das
add
ja
xlat
pop
jge
pop
and
sbb
jmp
sub
int3
sub
push
out
call
pop
data16
pop
adc
inc
xor
enter
or
pop
sbb
mov
adc
inc
pop
and
icebp
ret
les
inc
scas
sub
stc
shrl
call
add
out
repnz
sbb
shrb
jmp
mov
flds
aaa
mov
aam
push
add
and
dec
nop
unpcklps
fidivrl
ds
inc
and
cmp
dec
dec
push
pop
ret
xlat
and
xor
out
mov
and
xchg
adc
dec
or
fs
imul
ds
mov
sub
sbb
sub
mov
cmp
mov
push
or
pusha
out
aas
arpl
inc
pop
mov
or
aam
loop
pop
xchg
mov
add
out
jmp
lret
in
xor
ficomps
mov
ljmp
in
push
dec
lahf
imul
sahf
fstps
sarl
sub
imul
sahf
test
cmpsb
mov
inc
and
sub
jno
ret
adc
out
sub
mov
das
fisttpl
sarb
cmpb
ds
mov
push
cmp
mov
jns
fsub
cli
add
jo
popa
pop
inc
loopne
adc
push
mov
xchg
mov
xchg
mov
cltd
xor
mov
outsl
dec
jne
ficoms
jp
or
xchg
cmpsl
or
xlat
mov
int
ja
roll
cltd
mov
movsl
ds
ret
out
data16
outsl
jl
jno
adc
mov
mov
in
dec
or
dec
test
aaa
out
dec
cwtl
dec
pop
mov
jnp
popf
mov
ja
out
push
xchg
xchg
or
push
pop
mov
or
jne
lret
mov
lods
lods
int3
int
bound
jnp
mov
xchg
push
andb
sub
mov
adc
fstl
movsl
add
xor
jno
leave
jp
mov
daa
ss
fmuls
imul
xor
or
cmp
push
xlat
and
roll
push
push
daa
mov
ret
das
sub
aas
push
sti
jl
cmp
cmp
je
in
fwait
shlb
inc
test
ljmp
pushf
lea
sti
push
cltd
es
inc
cmp
mov
outsb
lret
out
lahf
out
int
mov
push
push
in
inc
jle
add
adc
aad
push
addr16
shrl
push
roll
and
mov
mov
mov
les
lods
jge
adc
mov
jmp
dec
fnop
leave
xchg
cli
das
mov
or
popa
and
xor
js
lock
repz
fs
int3
or
mov
in
xor
xchg
or
shll
jo
and
pop
in
mov
adc
aas
dec
or
xor
outsb
in
dec
inc
mov
push
cmpsb
stos
inc
cli
sub
inc
mov
mov
inc
jno
in
lods
xor
in
xchg
push
iret
js
lds
fwait
pop
pusha
mov
loope
jg
cs
outsl
sub
lea
or
add
inc
hlt
out
pop
jle
lretw
dec
aad
in
incb
outsb
xchg
mov
xor
mov
repz
pop
xchg
push
mov
sub
mov
adc
lods
pop
mov
inc
rolb
bound
mov
repnz
and
push
fldl
clc
mov
mov
ffreep
or
jge
or
xchg
sbb
dec
es
pop
icebp
add
js
sbb
movsl
xchg
push
mov
push
lods
or
dec
dec
sbb
xlat
scas
cli
mov
popa
dec
lods
cs
sarb
out
cmp
jg
dec
lret
sub
adc
fucomp
inc
and
cmp
pop
int3
inc
movsb
rcl
jno
bound
pop
jl
jg
movsb
add
adc
aad
sub
adc
les
push
jbe
mov
dec
outsb
idivl
test
lods
jge
or
xchg
call
stc
mov
fwait
pop
ret
in
lea
aas
mov
fbld
jb
inc
cmp
xchg
sbbb
mov
out
aam
sub
and
lds
jbe
add
in
mov
pop
outsb
adc
and
or
pop
xchg
imul
nop
test
fistpl
and
aaa
cli
xchg
addb
popa
push
mov
xchg
repnz
out
loope
pusha
sbb
jne
mov
hlt
jns
mov
push
xorl
lcall
fstps
jns
popa
adc
jo
popf
xchg
push
shlb
mov
dec
jno
repnz
ret
pop
out
lret
jge
fisubrl
out
pop
add
sbb
jbe
cmpsb
push
jae
and
dec
sub
ds
daa
sbb
dec
jl
das
adc
push
fiaddl
fwait
lret
mov
popa
test
mov
xor
pop
jae
mov
push
and
inc
sarb
shlb
jbe
mov
movsl
lock
loop
adc
inc
inc
mov
jae
inc
dec
arpl
movsl
cmp
test
adcb
push
sbb
jp
call
xorb
mov
pushf
mov
xchg
jbe
gs
in
mov
jbe
outsl
cmp
int3
lock
mov
lock
hlt
push
mov
dec
xor
cmpl
movsl
sub
xchg
pop
dec
pop
mov
negl
jle
sub
dec
imul
and
arpl
or
xchg
cmp
pushf
sahf
jl
mov
mov
xchg
out
dec
push
xchg
xor
adc
loopne
test
sbb
test
lods
fsubs
pop
xchg
ds
cmpsl
pop
adc
fsubrl
sti
xchg
scas
insb
pop
cli
inc
rcr
cli
fwait
lcall
xchg
or
repnz
adc
fwait
inc
addr16
dec
jb
inc
arpl
dec
add
out
and
push
add
fnsave
in
fdivl
out
fwait
popa
movsb
call
dec
jle
rorb
sub
jne
pop
lret
sbb
insl
gs
sbb
cmpsb
inc
ret
in
and
pushf
hlt
enter
dec
dec
dec
dec
popa
push
inc
push
fstps
lret
pop
sub
orb
jmp
mov
push
cmpsl
and
negb
jbe
adc
leave
jae
out
cmp
jmp
shrb
cltd
sub
mov
sbb
push
inc
js
rdtsc
movsl
mov
xchg
push
les
pop
insb
scas
jne
xchg
jmp
mov
push
nop
mov
ljmp
push
rclb
dec
loopne
or
add
sbb
push
add
loop
pop
rol
int
pushf
shrl
inc
push
xor
ss
xchg
test
mov
scas
xor
jb
hlt
dec
mov
xor
push
add
stos
insl
push
xchg
dec
faddl
push
aas
push
add
add
sbb
cmp
enter
test
movsb
jge
iret
push
xchg
mov
mov
frndint
push
xchg
fisubl
push
sti
cmp
xchg
cmp
push
mov
xchg
popa
stos
jge
jecxz
pop
out
adc
inc
rcll
fdivs
out
add
xchg
pop
or
not
mov
cmp
inc
sti
mull
mov
movb
and
jb
inc
cmp
incl
mov
insb
jge
and
mov
xchg
mov
enter
jle
push
lock
jecxz
sbb
out
bnd
repnz
movq
add
mov
je
movsl
dec
push
ss
cmpsl
mov
adc
fsubp
nop
sub
jge
inc
add
addr16
or
inc
add
add
dec
dec
xchg
sti
and
lret
xor
addr16
lret
cltd
rolb
in
outsl
sub
pop
lods
inc
fimull
std
aas
add
notl
fsub
fcoml
movsb
test
repnz
mov
mov
jb
lret
mov
rcrl
cltd
imul
mov
sbb
adc
xchg
cmp
ret
loop
shl
repz
out
mov
add
xor
fs
enter
sbb
stos
cs
xor
insl
adc
cmpsl
shl
inc
push
xor
inc
mov
out
mov
rcll
cld
lods
mov
xor
cmp
leave
cmpsl
popa
xorb
xlat
dec
rorl
jle
popf
fsubrs
pushf
out
scas
clc
jne
pop
xchg
loop
sub
pusha
test
test
lcall
out
sbb
cmp
loop
inc
rclb
movsb
lcall
jne
sub
push
push
insl
in
mov
push
adc
dec
xchg
shrl
aam
cli
jp
or
mov
test
jo
jnp
sti
mov
ds
stos
repnz
idivb
pop
rcr
jmp
or
aas
inc
add
fsts
int3
adc
popf
jg
sub
lret
cli
xchg
test
and
mov
push
xchg
andl
test
scas
lcall
mov
pop
sub
pop
in
push
leave
push
ret
adc
stos
add
test
push
jae
mov
jnp
pop
inc
ljmp
push
add
test
es
or
mov
lahf
loopne
dec
cwtl
jo
data16
fildl
mov
pushf
sbb
popa
cmp
out
dec
arpl
nop
mov
jns
mov
scas
hlt
and
jo
gs
dec
adc
test
ss
movsb
mov
xchg
ja
int3
fdiv
rolb
insb
in
push
leave
mov
cltd
pop
into
lock
fsubrp
cmc
gs
imul
out
outsl
frstor
iret
paddusw
stos
or
pop
push
cmpsl
or
shrb
dec
jne
mov
js
sti
dec
inc
lret
cmp
and
lods
or
push
mov
dec
insl
pop
popa
adcl
inc
cltd
mov
adc
scas
xchg
cli
and
push
add
nop
call
les
xchg
jmp
xchg
add
or
stc
sub
dec
ds
rep
outsl
sahf
push
and
out
int3
js
push
ja
xor
mov
aad
adc
inc
aas
and
push
and
dec
cmc
sub
push
sbb
push
movsb
fimuls
fcoms
les
mov
popf
cmp
lret
out
test
push
cltd
pop
cmpsb
inc
loopne
pop
adc
addr16
pop
or
push
ja
movsb
xor
pop
outsl
enter
pusha
xchg
vfnmadd213ps
outsl
dec
adc
push
add
lcall
test
int
inc
mov
push
ror
out
arpl
mov
ss
sub
and
mov
fs
stos
adc
mov
lea
ret
and
aam
loope
add
inc
lods
scas
push
xchg
and
daa
mov
push
pop
js
rcll
and
xchg
dec
xchg
or
dec
fidivrs
repnz
mov
and
push
imul
ja
mov
sub
test
lea
cmp
cmp
add
cmp
cmpsl
adc
mov
inc
xchg
decl
inc
stos
das
aaa
sbb
sbb
repz
nop
aam
sub
push
jo
aam
xor
ja
test
out
ss
idivl
mov
sbb
mov
lea
xchg
inc
sbbl
ret
loopne
cltd
adc
pop
or
cmp
aad
rcll
sbb
fwait
mov
fwait
test
stc
push
sub
mov
ljmp
or
lods
sub
shl
jle
adcb
cmp
sub
scas
scas
adc
push
sub
hlt
add
mov
push
jecxz
sub
pop
or
sub
insb
jl
pop
add
add
je
push
push
es
outsb
test
fdivrl
pushf
stc
push
sbbl
pop
mov
gs
in
ret
pushf
xchg
mov
fidivrs
out
jp
daa
cmc
sub
adc
loopne
pop
shrb
pop
stc
xor
xchg
fsubrl
cld
lods
push
xchg
jle
dec
push
push
das
insl
daa
sbb
lods
cltd
dec
and
inc
cmp
mov
mov
loope
clc
cmp
in
sbb
fcmovbe
cltd
lods
mov
lods
cmp
ret
push
mov
cld
daa
out
add
cmp
pop
and
sub
sbb
mov
sub
cmp
ja
or
mov
inc
xchg
cmp
sub
and
into
pop
inc
in
mov
cmp
mov
out
xchg
dec
imul
daa
insl
cli
sbb
cmp
sbbb
xchg
push
pushf
hlt
loop
pop
arpl
ja
push
jl
dec
adc
out
pop
test
and
ss
in
jg
pusha
ss
pop
sub
add
jmp
loopne
test
add
fimuls
lds
cwtl
dec
xchg
sbb
sub
insl
out
xlat
sub
int3
jp
loopne
cmpsl
pop
dec
xchg
into
jmp
sahf
and
xchg
loope
outsb
mov
test
mov
test
fidivrs
outsl
fucomp
mov
in
pusha
insb
les
test
adc
clc
shll
loop
outsb
add
xor
mov
mov
xor
xchg
xor
dec
xor
inc
xor
repz
or
sub
mov
mov
daa
imul
stos
ficoms
jns
cltd
scas
lret
iret
mov
cwtl
sbb
call
js
incl
test
bound
mov
and
cmp
in
or
and
out
enter
imul
out
pusha
insl
sbb
cmp
shlb
les
and
cmp
leave
or
push
cld
dec
icebp
enter
rorl
mov
or
cmp
add
icebp
inc
inc
inc
dec
imul
inc
xchg
dec
sbb
sub
js
cli
jmp
scas
or
nop
jo
mov
sbb
pusha
test
fcompl
std
push
jecxz
sbb
aas
pop
in
xchg
int
jl,pn
out
lds
and
xor
stos
ret
xlat
pop
lahf
xlat
enter
sti
xchg
mov
xchg
idivl
stc
mov
and
xchg
sahf
andl
aam
out
mov
dec
cmp
enter
mov
pop
frstor
push
int3
mov
cmp
pop
insb
add
bound
lea
arpl
add
mov
inc
mov
inc
dec
insl
and
cmpsl
sub
or
mov
inc
scas
push
pusha
cmp
xor
xor
mov
lods
in
sub
daa
jne
fwait
mov
mulb
in
sub
es
movl
cmp
and
test
or
test
out
jmp
adc
mov
mov
or
nop
aad
jno
lret
push
jle
sub
cmp
fstl
f2xm1
jo
aaa
jmp
stc
shr
mov
lahf
push
loope
and
sbb
cmpsb
cmpsl
jmp
in
lock
jne
xor
test
lods
fsubrl
into
cli
stc
and
out
cmp
lods
sbbb
jg
fadds
push
stos
pop
dec
inc
sub
enter
push
pushf
and
inc
or
int3
pop
ret
mov
loope,pt
ds
cmp
add
jp
in
lock
jnp
push
mov
lret
sbbl
sarb
sti
jno
mov
enter
push
fucomp
mov
push
push
dec
xchg
pop
bound
fwait
gs
cs
andb
out
test
ds
sti
iret
sub
mov
ret
outsb
jle
mov
mov
mov
fs
cmp
jle
in
adc
out
push
cli
pop
rcrb
dec
fnsave
push
outsb
roll
mov
stos
aad
clc
mov
aaa
jl
jne
faddp
fisttpl
popl
mov
add
dec
jno
xor
imul
ljmp
fldl
mov
push
sti
cwtl
outsb
jp
int3
in
inc
out
loop
sahf
ss
outsl
mov
pop
fs
jmp
stos
divb
dec
mov
mov
or
ljmp
ss
mov
push
in
mov
jne
stos
cs
aad
or
out
scas
int
mov
pop
xor
addr16
leave
clc
shll
out
js
in
outsb
push
dec
push
outsl
lret
inc
xor
mov
dec
cmp
sub
sahf
jecxz
movsb
insl
test
js
test
insb
stos
jnp
push
mov
and
sub
outsl
lods
in
sbb
xchg
ja
mov
or
jae
mov
sub
cwtl
pop
aaa
sbb
add
mov
mov
movl
jp
jne
dec
adc
sbb
int3
cmp
pop
pusha
xchg
stos
or
jae
in
lods
ficoml
pop
mov
add
leave
mov
cmp
mov
xorb
js
jno
lret
mov
xchg
dec
inc
fldln2
push
dec
sahf
jp
repz
and
in
adcl
pop
cmpsl
pop
xor
or
pushf
mov
ror
lods
fstpt
adc
mov
mov
das
ja
cmpsl
lcall
out
and
cmp
cmpsb
shrl
comiss
mov
pop
jb
inc
pop
filds
js
xchg
leave
mov
jp
mov
loopne
call
cmc
cs
adc
out
pop
cmp
ja
insb
sbb
sahf
mov
xchg
popf
scas
add
mov
adc
fistl
scas
fsub
das
icebp
movsl
and
dec
mov
divl
aas
inc
xor
xchg
ljmp
xor
add
mov
lret
cmp
inc
sbb
hlt
and
movsb
insl
push
mov
call
or
xorb
or
adc
or
xchg
sub
ss
dec
xchg
sbb
mov
mov
call
jne
pop
ljmp
mov
lret
test
or
push
mov
repz
xchg
dec
dec
pop
lds
pop
push
adc
test
rcrb
and
jbe
daa
jb
in
cmp
mov
inc
push
fs
loopne
psubd
incb
cmp
mov
mov
jg
sbb
xor
mov
ja
je
in
movsl
mov
pop
iret
lcall
mov
popa
outsb
leave
mov
aaa
test
out
cmpsb
icebp
fcos
pop
adc
mov
jp
mov
lds
repz
push
scas
out
aam
stc
sub
jmp
cmpb
push
ljmp
cmp
dec
ljmp
sbb
xchg
ret
jp
sahf
cltd
mov
or
and
insl
sub
inc
xchg
stc
std
iret
cwtl
emms
jl
jae
adc
pop
lahf
sbb
lahf
or
js
push
push
repnz
push
dec
add
xchg
lock
dec
mov
sub
rorl
lods
or
inc
mov
jns
dec
clc
mov
mov
add
pop
xchg
leave
call
mov
movsb
pop
es
mov
adc
jo
or
lcall
cld
test
xchg
adc
pop
fcomp
stos
mov
ja
es
jge
dec
shl
addb
ljmp
fisubrl
sar
lret
mov
mov
pop
xchg
push
mov
out
std
test
mov
xchg
xchg
xchg
sbb
and
pop
aad
lock
clc
movsb
jmp
or
mov
cmp
in
stc
stos
sbb
push
lcall
add
sbb
loope
dec
xor
xchg
jmp
dec
cmp
sub
pop
into
in
or
mov
push
or
jmp
xlat
es
push
push
mov
inc
fldl2e
mov
sti
push
out
cmp
repnz
or
sub
jbe
push
xchg
pusha
mov
add
push
subl
cmpsb
es
stos
cmp
cmpsb
ror
jae
icebp
arpl
inc
lea
popf
out
stos
mov
aas
mov
dec
xchg
jge
push
daa
fdivr
in
cwtl
std
stc
sbb
adc
push
mov
imul
jno
sub
jnp
in
push
decb
adc
inc
sbb
add
dec
push
cmp
cmpsb
gs
mov
out
insl
push
int3
or
xchg
daa
xor
stos
jmp
jg
sbb
add
sub
xlat
test
xchg
xchg
dec
cltd
iret
movsl
test
cltd
cld
cmp
aaa
xor
dec
je
push
sbb
fs
repz
mov
jecxz
lock
mov
popa
fstl
outsb
sbb
and
xor
or
mov
jp
in
xor
xchg
testb
cltd
movl
lods
cs
xchg
pushf
shlb
xchg
xchg
sbb
filds
dec
xchg
rcrb
and
cli
inc
and
jne
notl
sub
pop
jns
das
mov
inc
add
lock
xor
ds
pop
sub
xor
sbbb
stc
popf
fwait
dec
ret
sub
pop
scas
cmp
add
es
mov
fcoms
out
and
xchg
enter
mov
call
shlb
xchg
cmpb
ja
sti
lock
outsb
mov
mov
sbb
sahf
popf
inc
and
jg
jo,pn
mov
test
push
jg
enter
dec
jnp
lock
mov
adc
adc
stos
mov
pop
outsl
popa
jbe
fisubl
loope
pop
push
inc
and
cmp
rcr
stc
fcmove
cmpsb
aad
or
and
mov
cmp
sub
stos
sbb
inc
daa
or
mov
adc
adc
jae
push
out
imul
icebp
or
push
test
ja
lret
test
xchg
inc
adcb
adc
jge
and
xchg
loopne
enter
lcall
mov
ljmp
xchg
fcmovne
add
mov
icebp
add
test
sbb
sub
insl
popa
adc
wrmsr
push
test
cwtl
sub
enter
sub
orb
in
scas
push
xor
pusha
fiaddl
mov
cmpl
mov
and
or
sbb
cmp
es
fsubp
cld
mov
pop
loopne
sti
dec
loopne
shlb
sbb
scas
or
lret
stos
repz
dec
push
jg
lds
js
rcll
shrb
outsl
int3
in
jge
enter
push
xlat
imul
fcmovne
es
adc
aaa
pop
iret
jp
jp
pop
sub
test
shrb
push
out
jb
loopne
dec
int3
imul
sub
mov
aaa
push
stos
mov
dec
or
addb
mov
dec
mov
cmc
push
js
test
xor
pop
xchg
icebp
inc
xchg
add
xorb
add
pop
and
cmp
push
xor
outsb
mov
dec
add
fsubs
cmp
mov
xchg
xor
xor
jl
and
fwait
ds
cmp
outsl
and
adcl
mov
adc
mov
inc
pusha
add
icebp
jnp
lds
mov
clc
pop
repnz
xor
sbb
test
enter
inc
leave
sub
mov
nop
cmc
inc
sub
dec
ficoms
add
sti
jg
dec
sub
test
and
mov
xchg
mov
push
and
jno
push
fisubs
push
ret
cmc
std
stos
push
dec
movsl
fidivl
lds
inc
xchg
int3
add
push
cmp
dec
lret
add
dec
sbb
sub
imul
adc
cli
in
sbb
test
mov
ror
scas
xchg
call
cmp
das
mov
jp
mov
outsb
inc
hlt
pop
call
or
jb
jl
jmp
push
add
imul
gs
addr16
mov
inc
sbb
lret
jb
adc
roll
cmp
mov
cmp
push
inc
xor
jmp
mov
and
dec
or
shlb
es
mov
fs
xchg
fistl
dec
jecxz
pusha
rcll
incl
mov
cmc
popa
cmp
inc
lods
dec
xchg
inc
dec
inc
aad
jl
mov
add
xchg
mov
jnp
dec
mov
sbb
lcall
jae
jns
cmc
and
inc
sub
cwtl
mov
decb
das
pop
xor
into
xor
outsl
ror
dec
ss
xchg
insb
inc
push
push
jae
arpl
scas
or
dec
jl
and
repz
fwait
jo
aas
xor
cmc
imul
sbb
test
inc
lret
dec
aam
aad
sti
sbb
stos
xor
jo,pn
jecxz
mov
mov
int3
sub
jmp
cmpsl
lret
pop
jge
and
add
and
or
add
fisttps
mov
mov
inc
pop
fcompl
adc
pop
sbb
xor
inc
lret
mov
pop
out
jp
inc
inc
dec
iret
mov
cmp
pop
add
cwtl
das
push
cmp
pop
and
imul
shr
dec
hlt
clc
cmp
push
pop
int3
enter
or
sbb
lahf
adc
cmp
aas
loope
sub
bound
mov
divb
inc
xchg
inc
arpl
or
xor
movsl
add
mov
mov
test
adc
rclb
jge
ficoms
int3
cmp
stos
lock
loope
push
mov
sub
cmpsl
inc
adc
mov
cmp
inc
in
sar
into
jle
fnstenv
cs
popf
cmpsb
fisttpll
hlt
xor
lahf
xor
add
push
mov
in
adc
sbb
sub
aad
and
test
pushf
mov
shll
mov
icebp
adc
cmp
adc
xchg
cmpsl
cli
call
pop
cltd
mov
call
sub
aaa
xchg
and
insb
mov
sbb
notl
sbb
inc
jns
cmpsb
inc
push
insl
sub
mov
xor
sub
test
mov
shll
call
es
lods
jnp
int
test
and
ljmp
arpl
int
repz
ror
arpl
shrb
cmc
xchg
shrl
mov
push
mov
out
inc
in
sbb
adc
cltd
lret
pop
aad
mov
dec
dec
ret
adc
push
test
sbbb
xchg
dec
in
fcomps
fwait
gs
or
push
mov
xchg
or
pushf
jb
mov
add
pop
mov
call
mov
adc
stc
inc
faddl
data16
xor
xor
sbb
sbb
lcall
pusha
imul
sbb
repz
daa
or
mov
mov
insb
pop
and
sub
mov
sbb
loop
enter
cmpsb
ror
mov
and
mov
pushf
in
jbe
jmp
dec
mov
mov
nop
leave
cmp
sar
ret
pop
xchg
jbe
movsl
daa
ret
popa
and
mulb
cltd
fisubs
mov
cli
movsb
call
xchg
xor
pop
out
add
ljmp
inc
or
testb
icebp
adc
pop
pop
shrb
out
sub
adc
push
or
ljmp
mov
loope
xor
push
mov
jno
es
aam
int3
cli
lock
fs
stos
mov
jecxz
les
mull
dec
jg
sbb
call
inc
lock
push
lret
push
add
imul
sbb
addr16
inc
dec
aas
je
pop
test
fs
or
ljmp
fiaddl
frstor
inc
out
stos
out
mov
jns
sar
insl
and
mov
push
sub
repnz
cmp
loopne
xchg
popa
pop
sbb
icebp
scas
test
jp
mov
leave
popf
push
movsb
sub
cmp
fdivrl
jge
popa
cmp
repnz
jmp
or
or
fisubs
nop
test
xlat
inc
cmpsb
fiadds
or
and
and
push
and
mov
and
sub
push
daa
push
jle
adc
icebp
lods
xor
push
or
jg
insb
das
sahf
and
inc
in
shlb
xchg
cltd
in
push
mov
loope
in
rclb
xchg
push
adc
popf
sarl
mov
pop
fs
std
xchg
xor
cwtl
movsl
or
iret
cmp
in
addr16
lret
mov
dec
xchg
xor
rcrb
cmpsl
jns
rorl
jmp
popf
mov
push
xor
jmp
adc
sub
test
push
arpl
shl
clc
push
scas
pop
dec
int3
xor
or
pop
adc
es
xor
mov
jg
movsl
adc
push
out
icebp
loopne
jl
jmp
adc
movsb
pop
cmpsl
inc
xlat
inc
scas
in
arpl
faddl
jns
adc
scas
jge
cmpsl
in
ret
cmp
mov
in
xchg
or
jg
xchg
jecxz
mov
pop
xor
mov
lea
lcall
popa
adc
mov
add
cmp
mov
cmc
mov
adc
push
pop
mov
ret
stos
shlb
int3
or
mov
iret
test
jns
ret
fidivl
sbb
mov
push
cmp
pop
lds
sarb
and
jge
fdivl
inc
dec
jecxz
sbb
mov
ss
mov
mov
xor
les
mov
aam
lea
pushf
or
enter
sti
mov
imul
addr16
lahf
ds
daa
and
push
rcrb
pop
and
enter
repz
jl
and
dec
test
clc
sahf
adcl
into
add
add
jl
lods
and
les
or
popa
sub
subl
jle
scas
sub
sbb
cld
inc
daa
insb
push
mov
push
xor
xchg
cli
fxch
leave
and
cmpsl
jns
aad
repz
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
add
jl
dec
pop
jl
scas
test
and
out
pop
cmp
inc
repz
fisubrs
notl
insl
imul
std
arpl
aas
and
jbe
push
push
sti
jb
cmp
xchg
aas
fisubrs
aaa
add
jbe
loope
insl
add
pop
jb
sbb
call
fs
sub
int
mov
mov
or
add
decl
and
add
dec
add
dec
clc
adc
jns
and
popa
cs
xchg
jae
xchg
mov
push
mov
std
or
mov
out
stc
popf
ja
out
and
inc
xorl
shrb
jns
gs
sbb
loop
cmpsb
fmull
jp
leave
jmp
jl
cld
mov
xchg
sarb
outsb
inc
push
into
cmc
cmpsl
in
add
or
test
ret
jecxz,pn
out
sarb
mov
mov
push
data16
mov
xor
ljmp
fistpl
push
push
mov
test
adc
jp
mov
add
inc
rorl
mov
les
xchg
push
jp
pop
dec
rol
enter
push
test
out
dec
xchg
cli
mov
cmp
xchg
scas
mov
push
insl
jb
or
cmp
sub
cmpsl
xor
jge
popa
test
xchg
or
aas
inc
cli
mov
out
jecxz
test
nop
cltd
cli
sti
dec
jmp
or
ds
shr
xchg
pop
sub
dec
push
mov
flds
cmp
data16
mov
rolb
and
js
stc
mov
mov
push
loope
sahf
or
shr
daa
fdivs
xchg
add
jbe
negb
xchg
cvtps2pi
sbb
and
stos
adc
push
cltd
out
xchg
fidivs
pop
addr16
outsl
sub
sbb
movsl
lods
sbb
fstpl
rcll
jne
rcrb
jle
mov
mov
jge
daa
jp
mov
mov
pop
gs
shl
pop
enter
enter
inc
movsb
dec
dec
ret
cmp
mov
fistpll
cwtl
cmp
fwait
inc
std
shll
popa
cmpsl
pop
popa
jle
mov
mov
inc
loopne
jb
addr16
in
pop
mov
dec
pop
pop
or
scas
or
out
adc
jb
test
sti
xchg
popa
xchg
mov
jno
push
adc
arpl
sub
stos
push
mov
and
dec
out
cmpb
call
jecxz
push
xchg
lret
and
sub
xor
ret
xchg
std
adc
xchg
repnz
adc
cli
cmpl
dec
movsl
cmc
leave
add
popa
loop
fstl
sbb
cli
sub
xchg
in
aam
jmp
jge
aad
jnp
out
filds
sbb
les
mov
lea
xchg
mov
sbb
or
pop
cmc
stos
rcrl
lea
push
cmpb
xchg
xor
or
mov
pop
insb
cs
add
sti
popa
jns
push
bnd
jno
or
cmp
pop
les
out
jne
adc
dec
in
repz
sbb
stc
adc
movb
cmp
ja
or
push
push
gs
mov
ret
push
addb
rolb
mov
je
jbe
or
mov
cwtl
jge,pt
dec
jbe
dec
fmull
inc
mov
pop
je
push
pop
mov
jp
xchg
fiaddl
in
lods
imul
sbb
adc
stos
data16
xor
fldl
clc
sub
fisubrs
inc
add
lds
pusha
adc
cld
mov
xchg
mov
jbe
add
mov
shll
es
xchg
je
hlt
enter
fsubr
hlt
std
and
sarb
sahf
lods
push
in
repnz
or
push
cmpsb
xchg
int3
pop
inc
lods
add
lods
rcrl
movsb
xchg
cmp
mov
or
cltd
ds
jl
mov
mov
inc
xorl
pop
test
sub
jle
repnz
mov
inc
cmp
xor
sbb
sub
in
popf
cmp
jns
xor
pop
dec
std
lds
sbb
call
ficoms
push
lcall
push
jp
add
jae
or
test
es
test
or
adc
test
jmp
fadds
pop
sub
sub
adc
in
arpl
mov
leave
sub
jmp
sahf
jnp
sub
loope
cmp
jg
loope
not
lret
adc
shl
jge
dec
pop
cmp
jmp
add
ret
movzbl
and
jae
test
rorl
mov
xorl
add
loop
dec
xlat
push
loopne
add
test
ljmp
cmp
test
or
dec
pushf
add
pop
mov
outsb
aas
and
or
lcall
sub
adc
addl
imul
sti
adc
std
cs
push
fwait
cmp
je
mov
jbe
sbb
rorb
cltd
arpl
add
or
fs
pop
and
std
sub
pop
dec
lods
and
push
mov
icebp
jbe
sbb
leave
outsb
lahf
mov
dec
xor
xchg
fimuls
mov
out
cmc
and
pusha
and
push
sub
mov
aas
mov
mov
or
mov
cs
xor
mov
mov
stos
mov
pop
lea
test
add
sub
call
cs
dec
and
les
and
cmp
das
mov
cmpl
cwtl
xchg
je
outsb
rcrl
xchg
loopne
pop
lcall
inc
in
out
ja
pop
lds
sub
mov
imul
push
int
jns
out
xchg
cmc
ret
mov
push
icebp
imul
push
popa
out
jo
in
jle
mov
lea
or
sti
sti
fdivs
mov
clc
in
sub
cltd
add
mov
xlat
lea
mov
loope
pusha
pusha
lea
cmp
mov
stos
mov
jp
pop
insl
mov
les
daa
gs
aad
push
imul
sub
dec
mulb
clc
dec
push
mov
push
xchg
sahf
stc
pop
adc
gs
mov
mov
pop
aaa
mov
pop
fisttpll
stos
sub
xor
or
jge
push
icebp
xchg
lahf
lds
or
adc
test
mov
sarb
pop
cmp
rorl
enter
inc
cwtl
xorb
add
sub
dec
fsts
mov
insb
and
addl
js
push
dec
cmp
push
or
pop
xchg
or
in
fisubrs
ret
lock
aaa
jmp
lahf
aad
and
lret
mov
lods
ret
adc
addr16
movups
mov
ret
rolb
push
sbb
lcall
dec
dec
out
push
jmp
adc
or
pop
jbe
xlat
sub
loope
xchg
fistpll
in
jp
and
test
repnz
icebp
add
sbb
aad
sbb
lods
inc
sahf
push
cmp
push
mov
rcr
movsb
xor
pop
cli
xchg
dec
xchg
push
popf
mov
mov
jmp
movsl
fstl
push
test
outsb
jb
lea
vmread
mov
xchg
or
fwait
cld
dec
sarb
mov
popa
or
in
int3
shr
mov
cmp
sbb
cmp
in
aas
push
lds
adc
xchg
xchg
int
fldt
or
add
data16
mov
test
insb
lret
jns
js
or
rorb
sarb
test
xchg
fistpll
adc
gs
das
push
pop
push
xor
aaa
jecxz
cmc
inc
xchg
test
sbb
mov
jmp
sub
push
mov
stos
and
pop
hlt
inc
imul
mov
or
shll
sbb
mov
shll
adc
xchg
xchg
aad
lret
clc
lret
lods
jo
xchg
inc
inc
mov
aas
rol
xchg
mov
ret
push
insl
enter
mov
aad
ret
or
aam
dec
scas
adc
movsl
mov
rcrb
fnsave
push
or
pop
out
sbb
adc
mov
jmp
data16
mov
dec
mov
mov
mov
adc
mov
mov
mov
scas
jo
pusha
rclb
lds
in
sbb
rclb
lcall
stos
jno
xorl
adc
lea
ror
mov
mov
aas
sbb
dec
inc
mov
adc
out
jae
pop
inc
xor
mov
jae
adc
jmp
insl
or
iret
ret
or
es
aas
leave
cli
mov
mov
pop
xor
scas
int3
push
fwait
in
pop
mov
dec
imul
pop
pop
idiv
insl
mov
add
sti
roll
rclb
and
fisttpl
movsb
xor
pop
pop
push
int3
sub
frstor
and
imul
xor
fadds
add
data16
dec
lds
es
inc
mov
pop
icebp
iret
lods
data16
sti
stos
mov
out
rcll
dec
sbb
bound
scas
rcrb
imul
je
cmpsb
lahf
adc
inc
xor
mov
xchg
aam
push
cwtl
or
cmp
out
loop
ljmp
push
subb
fcoms
pop
jmp
mov
int3
fimull
jae
scas
mov
ss
into
cmp
pushf
mov
cmp
mov
mov
ficomps
testb
pop
mov
ja
mov
scas
dec
mov
xchg
rorb
icebp
cmp
xor
imul
cltd
iret
push
fcompl
nop
je
pop
dec
pop
enter
leave
arpl
push
repz
xchg
jg
jb
jae
add
loopne
cld
inc
notl
xchg
ret
fwait
stos
add
sbb
cmpsl
or
mov
mov
mov
pop
mov
pop
test
pop
repnz
sbb
in
std
mov
test
sub
xchg
stc
push
gs
push
mov
xor
inc
bound
enter
mov
test
sbb
pop
push
cmp
fcomi
out
lea
je
test
adc
test
clc
out
or
jge
inc
xchg
or
adcb
and
dec
xor
aad
lea
ja
pushf
mov
add
xor
jle
cmc
fadds
sub
adc
xchg
hlt
int3
add
arpl
stc
pop
dec
xchg
adc
leave
pop
cli
inc
sbb
imul
and
xor
in
fstpt
cli
out
xchg
jne
je
and
sub
icebp
dec
arpl
or
in
cwtl
add
movsl
inc
movsl
xchg
mov
dec
add
test
loop
inc
rorb
cmp
pop
fs
enter
sbb
jno
add
jmp
xor
mov
inc
mov
in
shrb
lods
push
ret
jns
sub
xchg
lods
adc
outsl
add
repz
dec
xor
add
insb
cmp
iret
ss
sub
imul
xlat
jno
imul
es
cltd
push
jbe
aad
lret
adc
mov
xlat
mov
dec
lock
inc
testb
bound
test
xor
and
popf
jo
rolb
aad
out
out
fcoml
lds
lret
inc
xor
add
mov
dec
sbb
arpl
push
jp
out
push
test
jp
xor
loop
jecxz
in
jns
pop
ds
lea
dec
insb
imul
mov
adc
xchg
test
in
mov
stc
or
stos
fbld
leave
xchg
inc
xchg
lds
pop
sbb
push
inc
das
ret
lret
ljmp
push
mov
js
sbb
lods
stos
repz
mov
inc
cmp
jg
iret
inc
cmp
mov
mov
js
cmp
iret
mov
ja
repz
dec
mov
out
jecxz
or
and
add
push
icebp
mov
out
mov
sub
cld
aam
sub
ret
ds
pop
pop
fwait
cmp
xchg
pop
adc
inc
jmp
je
xchg
cmc
negb
pop
in
inc
mov
test
mov
jns
inc
bound
flds
jnp
or
lret
insb
pop
jb
pushf
shlb
mov
xchg
push
add
popa
jbe
push
xor
aam
lods
jo
xchg
ds
mov
cmpsb
outsl
iret
fisubl
pop
lock
lahf
pop
push
xor
popf
lahf
lods
rclb
inc
loopne
xor
dec
cmp
or
adc
sub
cmpsl
xor
or
and
cld
lret
scas
sar
jl
fs
decb
and
enter
aaa
inc
es
fwait
adc
jns
push
shlb
add
add
jecxz
mov
fisttps
jle
pop
test
fcmovb
xchg
nop
out
push
mov
hlt
addr16
jae
popf
stos
pop
pop
mov
or
add
mov
adc
inc
dec
sbb
insl
jecxz
jns
jne
pushf
sub
or
std
mov
movsb
out
jbe
lahf
mov
mov
daa
int
add
cmpsb
mov
outsb
das
mov
dec
sbb
mov
pop
adc
stos
sub
sub
jne,pn
sbb
cs
clc
das
mov
hlt
out
dec
shll
leavew
pop
aaa
or
orb
shll
lods
jecxz
mov
cmpsl
jnp
jecxz
int
jns
push
xor
mov
xlat
sbb
out
jnp
sbb
add
mov
mov
add
out
push
xor
or
sub
stos
mov
in
adc
call
sbb
aad
cmpsb
or
out
pop
jo
mov
test
insb
out
and
mov
cmpsl
or
lahf
testl
mov
fstpt
fisttpll
mov
jg
loop
sbb
repz
pop
inc
dec
popf
fisttps
push
addr16
into
test
jecxz
inc
cmpsl
addb
in
nop
sbb
jg
rorl
add
xlat
in
xchg
hlt
daa
xor
pushl
xchg
les
addr16
out
cltd
lock
cwtl
sbbb
jo
pop
imul
sub
stos
in
arpl
outsl
push
mov
fs
fistpl
into
test
loop
xchg
mov
push
push
cmc
ja
pop
iret
jbe
mov
cmc
pop
lock
mov
inc
adcl
push
std
int3
push
cmp
adc
insb
shr
add
aad
jecxz
sbb
inc
inc
sub
repnz
cmp
adc
push
jae
mov
idivl
incl
mov
cld
test
sub
adc
lds
mov
jo
arpl
add
sbb
cmp
pop
movsl
pusha
adc
or
imul
pop
add
mov
mov
dec
dec
jl
test
push
push
ret
xor
inc
xor
inc
call
cmp
jns
arpl
push
nop
inc
das
shl
loope
cmp
inc
pop
xor
jno
insb
dec
mov
adc
sbb
jp
jmp
stos
jmp
mov
sbb
sbb
daa
stc
je
pushf
loopne
and
pushf
sub
sub
pop
cmpl
or
dec
inc
ljmp
inc
xorl
dec
adc
popf
cmc
and
push
adc
pop
lds
cwtl
in
mov
mov
cmp
add
lods
mov
push
loop
mov
sbb
enter
sahf
lcall
push
test
inc
cmp
inc
popa
fmuls
cmp
dec
add
test
pop
sti
mov
outsb
pop
push
jbe
mov
xchg
imul
pusha
inc
scas
ja
sub
out
repnz
enter
xchg
inc
add
mov
push
mov
push
gs
inc
sub
enter
sub
or
pop
cli
mov
inc
int
inc
sbb
fs
pop
ds
mov
jp
rclb
mov
add
mov
test
jecxz
and
loope
ret
es
lahf
imul
lahf
xchg
aad
sub
nop
mov
jmp
das
dec
nop
outsl
sub
and
jmp
mov
call
xchg
mov
out
movsl
lds
cmp
mov
int3
pop
stc
out
sub
mov
lods
inc
scas
je
or
insb
ljmp
cmp
aas
stc
je
imul
mov
inc
insl
adc
imul
xor
and
and
lcall
push
push
push
sbb
stos
jmp
mov
inc
adc
aas
sti
xchg
mov
loop
fisttps
sbbl
mov
adc
les
test
stos
arpl
cmpsw
test
pop
negb
xor
mov
sub
nop
je
pushf
jmp
dec
loopne
pop
add
sbb
fdivrs
xchg
or
arpl
or
lea
test
adc
mov
pop
jmp
mov
icebp
aas
arpl
push
adc
push
bound
ficoml
ss
mov
lods
out
sub
pushf
loop
imul
cmpb
int
ret
pop
shll
sub
sub
arpl
lock
xchg
lret
jne
jne
mov
mov
cmpsl
rorb
cmpsb
insb
sbb
sub
in
and
cltd
mov
or
sbb
xchg
xchg
outsl
or
mov
add
sub
cli
imul
mov
or
lret
shlb
hlt
outsb
xor
imul
loop
movsl
xchg
cmp
cmp
loop
push
repnz
dec
je
and
scas
pop
jns
rorb
loope
dec
mov
inc
adc
lods
cmc
lds
aad
inc
fbstp
sbb
jb
pop
xchg
pop
lret
cmc
hlt
push
adc
and
jno
adc
scas
pop
mov
out
int
repz
fwait
dec
test
jnp
inc
sbb
repnz
jmp
repz
mov
jnp
pop
test
movsl
inc
ss
mov
or
xor
sbb
jg
fisubl
mov
mov
popf
out
dec
add
adc
push
cmp
sub
les
pop
jle
jmp
hlt
or
cmp
pop
into
es
push
mov
inc
mov
sbbb
dec
int3
fwait
je
in
lret
ret
lahf
push
sub
push
mov
sub
inc
xor
xor
aad
call
insb
stos
jle
xor
cmpsb
push
dec
mov
mov
neg
or
dec
ret
xor
mov
jne
and
or
jmp
push
negl
pop
adc
int
cwtl
and
jb
lret
push
adc
sbb
lret
push
ror
mov
insl
pop
test
push
xchg
jge
push
sub
gs
mov
sahf
mov
inc
cmp
dec
add
mov
sub
mov
fwait
popf
mov
xchg
outsb
ljmpw
jae
mov
push
mov
sub
pop
push
and
inc
pop
add
loop
fldt
mov
imul
xlat
aad
rcrb
fsubrs
jne
add
xchg
pushf
adc
inc
test
incl
pushf
xor
cmp
and
pop
jmp
sbb
loopne
mov
add
xor
vcmppd
repz
stc
inc
jge
push
mov
les
pop
xor
xchg
fmuls
sub
dec
fidivrl
into
push
roll
popa
push
clc
jge
mov
pop
outsb
mov
mov
xchg
clc
xchg
xor
movsl
lea
aaa
cld
mov
out
lahf
out
cmp
mov
aas
gs
test
adc
jle
cmp
sub
adc
jno
repnz
push
jle
std
lahf
push
call
push
stos
cld
mov
adc
sub
pusha
sbb
andl
pop
test
and
pushf
pop
mov
sbb
adc
lea
xor
xor
sub
mov
pop
mov
and
pop
xlat
cli
cmpsl
push
xor
decb
dec
lods
xor
sbb
insl
adc
das
fldt
adc
xchg
add
arpl
out
scas
push
xchg
mov
cs
mov
mov
xor
or
pop
mov
pop
cmc
adc
xchg
jo
les
xor
push
and
cmp
dec
jl
arpl
das
cli
mov
add
mov
xchg
clc
push
xchg
hlt
pop
sbb
or
insl
sub
xchg
les
nop
inc
jnp
fidivrl
lods
ss
mov
fwait
jne
mov
mov
fistpll
xlat
in
cmpl
sbb
mov
inc
sbb
jl
clc
stc
jo
pop
xchg
div
hlt
out
aam
xor
mov
test
mov
add
imulb
lods
and
daa
xor
sbb
mov
arpl
and
int3
jmp
jl
sub
mov
in
scas
aas
push
dec
addl
cmp
std
popa
pop
mov
out
add
dec
inc
dec
xchg
ja
push
jb
out
es
xchg
jge
sub
xlat
pushf
xchg
xchg
cmpb
dec
mov
cmp
sbb
adc
daa
les
movsl
pop
push
mov
cli
scas
and
adc
in
lods
arpl
add
aad
and
push
pop
test
bound
mov
mov
jp
push
cltd
xchg
adc
or
roll
jge
pop
pop
jmp
sbb
aam
pop
xor
lds
ds
inc
rclb
scas
cmp
outsl
add
in
sub
xor
enter
cltd
jae
jns
and
enter
cmc
cmp
inc
in
je
jg
pop
sub
push
sub
jbe
call
incl
pop
add
sahf
loop
lret
std
out
out
test
outsb
ret
inc
jb
out
mov
pop
call
test
les
mov
es
push
cmpsl
dec
mov
xor
jns
cs
dec
pop
scas
push
xchg
jne
sbb
mov
popf
dec
xacquire
dec
mov
push
stc
outsl
fistpll
in
orl
pop
add
adc
xor
sub
push
pusha
xor
add
xchg
jl
and
mov
idiv
in
fcoms
push
shrl
mov
clc
mov
inc
std
jmp
int3
jns
mov
and
jle
arpl
lds
mov
insb
jmp
push
popa
mov
inc
xor
mov
shlb
dec
aas
pop
arpl
in
test
push
push
inc
pop
sbb
mov
popa
mov
adc
jne
sub
subl
cmp
fisubrs
adc
test
sbb
call
adc
dec
imul
movsb
push
or
nop
dec
fsubs
xchg
cld
addr16
sub
add
test
out
sahf
inc
imull
shlb
inc
enter
mov
push
in
aam
out
insl
sbb
iret
clc
xchg
xchg
cwtl
cmpsb
movsb
gs
mov
xchg
inc
inc
addr16
dec
loope
nop
call
push
lcall
adc
ror
mov
iret
enter
push
hlt
pop
or
xor
dec
cmp
sub
sub
cmp
pop
outsb
cs
js
or
xor
bound
inc
repz
xor
inc
mov
fmul
jg
mov
jg,pt
jne
sbb
sbb
test
ss
int
push
call
int3
sbb
outsb
shl
out
testb
pop
pop
xchg
pop
push
cltd
mov
push
stc
sbb
push
push
and
add
je
imul
rcrb
mov
mov
filds
test
js
inc
pop
sub
outsl
adc
cmc
mov
daa
pop
test
test
pop
add
fiaddl
cmp
jecxz
ret
or
int3
sub
sub
aaa
fmul
cmpsl
std
sub
jmp
pop
mov
push
pop
push
push
pop
and
ja
jmp
cld
daa
lret
lds
mov
xor
mov
jp
mov
mov
push
add
mov
or
icebp
loopne
adc
jge
ds
push
nop
push
mov
lret
cwtl
aam
cs
call
repz
mov
gs
xlat
pop
cmc
ret
ficompl
jp
mov
sub
xchg
xlat
pop
push
lahf
xor
in
cmp
fs
data16
scas
sbb
or
imul
je
adc
xor
push
mov
fildl
add
pushf
add
rcll
inc
fwait
sti
rcll
es
outsb
mov
ficomps
rorb
sti
sub
fstl
xchg
loop
or
jp
leave
sub
add
inc
aad
leave
cwtl
sub
enter
mov
pop
mov
adc
mov
jmp
sbb
insl
lcall
xchg
xchg
in
pop
das
es
imul
aas
xor
xchg
mov
push
lods
fsub
loopne
push
lods
out
jg
lcall
jl
leave
scas
or
push
cmpsl
lods
adc
mov
push
mov
add
and
fs
dec
cltd
xlat
xchg
div
loope
arpl
mov
fcmove
dec
pop
and
lea
or
cmc
ja
repnz
adc
arpl
lahf
mov
or
mov
sarb
scas
cwtl
nop
push
aad
outsl
adc
stos
imul
push
imul
mov
mov
cwtl
dec
xor
popf
test
mov
pop
sbb
cmp
lret
mov
jecxz
mov
lahf
lret
outsl
cmp
dec
add
lret
push
popf
push
inc
dec
pop
inc
lret
adc
adc
arpl
pop
test
fs
enter
notl
cmp
lahf
dec
gs
mov
mov
subb
mov
mov
lock
adc
add
pop
dec
pop
mov
mov
cmp
xor
dec
ja
insl
mov
mov
mov
fwait
scas
and
fs
xor
jl
cli
jb
scas
lock
xor
push
adc
rcrl
lcall
lret
hlt
inc
in
jnp
sub
into
mov
and
sbb
dec
cmpsl
movsb
fwait
repnz
pop
jb
insl
sarl
aad
lds
scas
sbb
and
fstl
inc
sti
add
std
ret
add
daa
test
in
cmp
and
push
inc
push
in
cld
push
aad
sub
out
xor
shr
mov
mov
mov
jno
out
and
aad
cli
adc
lret
fisubl
push
mov
and
and
or
xor
into
sbbl
inc
insb
sub
dec
adc
sbb
test
es
aam
fiadds
sub
out
xor
pusha
ftst
pusha
jge
cltd
jecxz
not
ss
aaa
adc
mov
lock
ss
adc
mov
arpl
mov
clc
cmc
shll
leave
push
fwait
pop
push
repz
sbb
add
push
push
out
shr
push
lods
pop
sti
push
mov
jecxz
fstps
or
mov
push
xchg
adc
mov
xchg
loop
imull
pop
hlt
scas
mov
cmpb
xor
xchg
into
mov
outsb
xchg
subl
std
dec
rclb
or
sub
std
adc
testl
dec
fimull
leave
or
addr16
sub
std
adc
cld
cmp
fistpl
sbb
and
cmp
leave
pop
add
outsl
cld
fidivrl
lods
cmp
imul
ljmp
dec
inc
mov
sub
out
ss
in
mov
cltd
dec
insl
jg
jle
mov
fwait
cld
pop
leave
addb
xor
xchg
fldl
fstps
push
xchg
ficoml
fwait
mov
adc
in
std
loop
sbb
push
adc
fbstp
test
mov
mov
push
mov
popf
xchg
lahf
cmp
test
inc
mov
rclb
sarl
fisttps
adc
ja
inc
enter
inc
cmpsb
lods
sbbl
fsubr
jnp
adc
xlat
pusha
sbb
dec
ds
mov
out
add
sbb
test
adc
punpckhdq
mov
mov
and
add
scas
adc
dec
sbb
dec
sti
rcr
mov
push
fnsave
out
xchg
fisttpl
sbb
loope
imul
sbb
jno
cmc
cld
ds
mov
sub
pop
bound
xor
cs
outsb
subb
cli
dec
arpl
inc
jle
xor
mov
lea
push
sbb
sub
jl
xor
es
in
or
dec
repz
lret
movsl
inc
clc
cmpsb
rorb
cmpsb
les
or
xchg
xchg
lea
jp
pop
shll
mov
sub
scas
or
pop
sahf
inc
or
ja
xor
add
scas
and
shll
testb
pop
mov
push
jno
jp
cmc
mov
xor
in
dec
cmp
scas
add
push
es
ret
mov
clc
int
cmp
fcomi
pusha
arpl
into
mov
push
cmp
pop
jle
ja
lcall
cmp
ss
adc
add
orl
inc
inc
test
inc
out
int3
fistpll
jge
ficomps
dec
pop
cwtl
push
sbb
dec
dec
jns
ss
loop
and
lock
testb
add
xlat
rcll
cmc
inc
and
sti
jl
inc
int
pop
insl
aaa
push
and
jo
in
or
stos
sti
and
js
aam
inc
cwtl
inc
and
adc
lods
rolb
lret
icebp
arpl
mov
out
out
inc
sub
ds
xor
xor
scas
xor
push
sub
aad
adc
lcall
popf
push
shlb
ret
aam
inc
pop
push
cmp
nop
std
mov
push
ret
xchg
jnp
lock
int3
or
lock
push
push
and
outsl
push
aad
adc
popf
or
jae
lret
xlat
xchg
fmuls
pusha
cmpsb
out
bound
addb
sub
leave
faddl
xor
scas
and
icebp
int3
cmp
mov
js
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
sub
cwtl
jl
jl
inc
pop
jl
ret
clc
fnstcw
stc
jp
mov
inc
fnsave
jecxz
push
cmpsb
cmp
pop
stc
mov
cmp
mov
pusha
xor
inc
cmp
test
sarb
negb
sub
jne
mov
not
mov
mov
push
add
popa
xor
xchg
mov
mov
arpl
in
sbb
cld
jg
jl
cwtl
jl
dec
insb
cld
sub
pop
lods
test
ret
dec
inc
fmulp
mov
xor
push
dec
lcall
iret
nop
add
adc
push
mov
xchg
ret
aam
sub
les
rep
cld
adc
daa
inc
lcall
jecxz
pop
xlat
adcl
sbb
cmp
ret
xor
jle
adc
xor
cmp
mov
pop
gs
mov
sub
mov
inc
xchg
jno
mov
imul
jp
int3
jge
stc
movsb
jnp
mov
aam
fisubrl
cwtl
ja
sti
std
sbb
mov
push
jbe
jno
std
outsl
cmc
in
push
sub
lods
out
xchg
xlat
jle
cltd
inc
pop
inc
lods
fcoml
mov
fildl
std
mov
mov
outsl
add
lods
jo
imul
in
jp
cmovo
sahf
enter
inc
mov
jmp
mov
and
pop
nop
bound
cmp
ljmp
vmwrite
mov
xchg
and
xchg
mov
adc
das
dec
sub
jp
inc
inc
push
jge
ficompl
xor
in
inc
insb
jmp
pop
fnstenv
push
fisttpll
mov
jecxz
enter
les
fmulp
out
stos
sub
pop
pop
jl
jmp
inc
xor
inc
roll
push
xchg
xchg
in
stos
lret
adc
aam
cmp
inc
popl
repz
rcrb
dec
mov
jns
mov
add
orl
testl
sub
call
ds
bound
sbb
xor
mov
aas
cmp
add
in
jns
adc
push
fdivs
in
adcl
mov
cmp
and
mov
mov
cmc
cmpsb
mov
sbb
sti
dec
daa
mov
sbb
inc
add
and
nop
testl
cmp
in
adc
push
fnstenv
adc
mov
shll
fstpl
popf
mov
nop
mov
insl
clc
cmp
cli
xchg
ret
push
out
mov
aad
xchg
or
fwait
scas
roll
mov
mov
mov
flds
push
leave
ds
dec
sbb
call
lods
xchg
mov
ret
test
add
add
jecxz
aaa
and
sub
mov
sti
mov
les
push
gs
dec
sub
xchg
push
sbb
les
and
or
cmp
push
int
xor
jbe
hlt
cmp
cmpb
cwtl
mov
pop
mov
xor
pop
in
xor
xorl
clc
fwait
inc
xor
sub
xchg
push
sbb
scas
test
push
popa
xchg
add
or
addr16
sub
or
lcall
push
std
push
jle
bound
lahf
repnz
jo
mov
pop
pop
sbb
add
das
inc
mov
mov
ss
mov
out
movsl
jne
jg
in
cmp
fs
in
roll
jbe
mov
cmp
inc
push
fbstp
and
jmp
cmp
pop
push
fcompl
cmc
insb
xchg
rcrb
movsb
jbe
lods
pop
scas
add
xchg
adc
mov
ja
push
mov
xchg
jnp
add
or
jl
stos
movsb
loopne
lods
sub
pop
mov
and
pop
jg
imul
addb
mov
adc
test
enter
xor
fcmovb
scas
xadd
lock
pop
addl
inc
push
outsl
lahf
clc
inc
adc
stos
das
and
sbb
je
shl
or
fidivrs
fcompl
adc
std
out
mov
cld
mov
ss
mov
cld
xor
cmp
and
lea
push
sub
xor
pusha
mov
sub
lods
js
int
mov
xchg
mov
mov
dec
ja
stos
cs
push
js
and
test
push
pop
mov
je
fcompl
test
movsl
jle
mull
inc
or
pushf
sahf
mov
shll
outsl
je
fldl
mov
cmp
sbb
aaa
call
pop
mov
and
cmp
int
shr
outsl
cli
pop
aaa
lret
mov
scas
sub
out
cli
xor
out
in
fwait
push
sub
add
vminps
jge
call
imul
add
dec
and
cmp
adc
test
jecxz
rorl
push
lcall
lds
mov
shlb
fs
mov
testl
repnz
jmp
jmp
cld
int3
xlat
jo
add
aam
dec
lret
mov
cli
stos
fnstsw
push
fists
dec
loop
push
mov
paddsw
jge
in
lods
inc
es
cli
std
xchg
cmp
dec
fcmovnu
xchg
mov
lcall
dec
rep
push
fidivrs
cs
adc
mov
xchg
call
jl
sbb
shlb
cmpsl
or
and
ficompl
fdivrl
gs
mov
or
cwtl
xchg
pop
pop
movsb
je
pop
add
push
or
dec
and
das
out
outsb
xchg
lock
mov
xchg
jae
or
xchg
out
out
pushf
adc
push
mov
push
jnp
push
xchg
jnp
mov
fistl
jle
push
or
popf
mov
inc
pop
jg
pop
lea
sbb
in
shll
dec
sbb
or
xor
cmp
pop
mov
add
jbe
fst
popa
jnp
outsl
push
adc
dec
loop
cmp
daa
mov
sbb
sub
xchg
xor
loop
cld
imul
sub
and
pop
jmp
rcr
jno
sahf
test
mov
aas
ficoml
cmp
inc
roll
lods
jno
xor
jbe
cmp
push
and
lods
cld
push
call
hlt
ret
and
and
inc
cmp
inc
and
sahf
mov
mov
adc
cmpsl
push
stos
fbld
loop
xchg
daa
pusha
xor
cmp
insb
mov
pop
xchg
or
and
mov
dec
and
inc
scas
loope
xor
dec
xchg
xor
out
jbe
xor
cli
setbe
inc
test
lea
mov
xlat
mov
fstps
test
cmp
or
jnp
aaa
ja
jecxz
stos
in
std
mov
pop
or
inc
scas
adc
fstps
fstp
sarl
mov
or
cmp
add
cmpsb
add
inc
mov
pop
movsl
sar
xchg
adc
and
adcb
push
and
out
mov
in
aaa
xchg
xchg
mov
lahf
aas
lret
fildl
hlt
add
mov
les
rol
mov
jmp
and
mov
aaa
pushf
xor
addr16
pop
add
pop
fdivrs
xchg
outsl
push
jecxz
test
scas
cmp
jns
mov
rclb
outsl
cmpb
inc
push
out
arpl
adcl
cmovnp
sub
or
sub
or
clc
bound
in
pop
cld
and
hlt
push
add
rcrb
jb
mov
mov
and
aaa
push
mov
sbb
pop
es
push
lret
out
jmp
fwait
std
int3
pop
fldl
mov
ret
jge
adc
ds
je
jae
scas
inc
shrl
xchg
roll
pop
push
test
roll
das
push
lods
inc
out
testb
xchg
ss
jmp
inc
dec
adc
pop
cld
out
fwait
xor
andl
adc
ljmp
lds
ss
cmp
mov
pop
daa
in
mov
add
pop
fdivr
jne
push
xlat
aam
gs
adc
cmp
dec
adc
inc
fs
jecxz
or
arpl
mov
jl
jb
xchg
mov
push
xchg
sbb
fcmovnu
sub
clc
bound
xchg
adc
mov
jecxz
inc
in
mov
imul
mov
in
cli
xchg
jns
out
mov
test
lret
adc
daa
pop
sbb
fdivrl
out
push
std
ljmp
in
inc
sbb
mov
sub
enter
mov
loope
jbe
icebp
out
aas
jnp
ss
xor
xor
jo
mov
add
jmp
imul
out
add
jp
movsl
mov
xor
cld
and
in
mov
or
out
jg
xor
enter
jmp
push
xor
mov
pop
cwtl
daa
ljmp
sti
xlat
shrl
push
mov
adc
stos
shlb
fsubrl
xchg
fwait
jns
mov
pop
js
andb
push
inc
aaa
add
push
addr16
pop
sahf
dec
test
sbb
xchg
or
imul
cs
imul
jb
or
adc
es
mov
pop
push
scas
rclb
inc
hlt
lcall
add
sar
mov
into
ss
lea
les
mov
sahf
add
imull
sbb
jbe
lock
pop
faddl
xchg
or
pop
inc
call
push
call
mov
cmp
arpl
or
and
js
mov
cmc
mov
or
lods
lds
inc
or
inc
out
popa
icebp
jmp
sbb
repnz
and
loop
loope
aas
sub
mov
les
adc
enter
jnp
push
ljmp
xchg
mov
mov
stos
sbb
jmp
adc
jecxz
push
int3
adc
or
aas
icebp
adc
cmc
scas
nop
js
clc
dec
neg
push
dec
adc
inc
lret
mov
and
mov
enter
pop
subb
ds
pop
in
push
xchg
ret
dec
lcall
lods
sub
inc
cmp
push
fisubl
mov
xchg
sub
jp
insb
push
dec
lods
push
mov
jmp
add
pop
and
mov
negb
sub
mov
das
pop
sub
lret
imul
xor
mov
cmp
test
rol
lock
shlb
ljmp
pop
movsl
hlt
ss
cltd
mov
xorl
push
pand
adc
cmp
sbb
inc
shlb
ss
dec
fsubrs
icebp
test
aas
flds
push
divl
xchg
imul
push
clc
inc
mov
or
cld
dec
inc
outsl
pusha
sub
pop
and
stc
dec
enter
push
xchg
or
mov
cld
not
int3
lret
or
enter
mov
movsl
mov
push
test
sbb
xor
dec
or
ja
fisttpl
jp
and
ja
js
jbe
lea
xor
data16
push
mov
lahf
mov
jge
out
cmp
outsb
sbbb
or
out
xor
test
cmp
pop
xor
mov
rcll
shlb
dec
ret
cmp
insb
test
test
mov
adc
lods
add
cmpsl
jae
pusha
mov
pcmpgtw
cli
popa
outsb
je
push
rol
cmp
jp
and
lret
inc
push
or
stos
stos
aad
cmp
hlt
cmpsb
clc
sub
test
scas
jne
mov
cmp
and
xchg
jp
or
mov
and
mov
jbe
fst
and
dec
fwait
mov
int3
pop
jne
mov
cltd
pop
sbb
pop
mov
mov
loope
dec
sbb
out
mov
pop
lcall
mov
mov
sbb
loop
adc
mov
lahf
lods
and
ja
in
mov
jbe
xlat
insl
and
sub
dec
jno
jg
sbb
mov
insl
or
mov
fsts
pop
or
call
rol
mov
rclb
jl
addr16
push
jae
psubusw
cmpsb
lret
jns
shlb
or
push
sbb
sbb
iret
iret
mov
xor
lock
insl
cmpsl
inc
adc
jbe
or
sbb
add
movsl
xor
cltd
xor
adc
mov
pop
jg
adc
sar
hlt
xchg
push
insl
inc
ja
mov
sub
in
xlat
rcrl
dec
adc
inc
pop
mov
mov
sbb
push
add
xor
cmp
add
in
repnz
call
fs
push
pop
ss
mov
sub
push
mov
sbb
mov
and
sub
cmp
mov
dec
push
loope
jmp
icebp
jge
and
aad
xor
dec
mov
lret
notb
ja
shlb
lea
mov
shrb
leave
mov
jb
shlb
xchg
sub
cmp
mov
aaa
mov
fs
ja
add
inc
and
push
adcl
adc
loop
mov
lds
inc
mov
cmpsl
lahf
xchg
dec
push
push
outsb
rorb
imul
sub
mov
les
arpl
popa
inc
pusha
outsb
fcomps
push
mov
mov
mov
outsb
rcl
push
mov
inc
push
loope
adc
adc
sbb
xchg
ljmp
xor
adc
xor
xor
sti
jne
or
lock
enter
jmp
loopne
cmp
popf
push
and
movsl
jns
iret
daa
in
iret
loop
pop
or
push
sbb
or
lock
call
stc
daa
cmp
jb
and
inc
mov
ljmp
xchg
loopne
cmc
mov
pop
dec
enter
out
ljmp
int3
out
sbb
dec
or
scas
maskmovq
testl
or
jg
add
ret
xor
das
pop
dec
adc
out
ret
cmp
pop
sbb
jmp
fdiv
cmc
mov
idiv
sahf
cmpsb
xchg
popf
push
xor
ret
loop
insl
and
cmp
or
inc
cs
std
cs
sbb
cmpl
push
add
sub
movsb
lret
mov
fdivrs
mov
mov
push
xchg
cld
jmp
jmp
dec
adc
dec
xchg
sbbl
or
orb
push
movsb
xorl
rcll
fcmovb
lods
adc
push
mov
add
cwtl
dec
dec
mov
add
mov
shr
push
jno
sbb
ret
inc
pop
das
in
mov
and
int
push
or
push
cld
xor
lock
sub
and
xchg
out
fsubrp
and
inc
sbb
sbb
sub
mov
fsubl
mov
pop
jp
test
dec
push
pop
mov
nop
ja
repnz
std
out
lock
cld
pop
mov
inc
push
out
inc
xchg
lcall
sub
or
clc
mov
and
jbe
and
cmpsl
pop
out
or
rolb
mov
sbb
insl
jb
xchg
inc
push
lock
lods
mov
scas
aad
sub
adc
jbe
cli
push
push
test
pop
add
lds
stos
lds
insl
mov
jo
enter
fimuls
sub
and
add
std
sbb
push
cmp
sbb
jno
arpl
xchg
cmp
mov
push
adc
inc
aam
test
push
and
inc
gs
mov
cmp
or
pop
add
les
sbb
mov
enter
pop
ja
pusha
push
scas
sub
inc
inc
jge
mov
dec
divb
addb
push
filds
ja
mov
push
loope
cmpsl
dec
cmp
push
fists
sbb
pop
les
jae
inc
daa
stc
jnp
xchg
lock
jmp
and
jbe
jecxz
call
scas
imul
jp
imul
adc
sub
outsl
sahf
loop
test
out
fs
push
mov
jl
int3
ret
sub
rolb
xchg
xlat
add
fdivl
pop
lcall
add
push
pusha
adc
inc
fdivrs
popa
mov
mov
nop
sbb
imul
bound
cmpsl
es
mov
jg
loope
mov
sahf
clc
bound
ja
sbb
adc
add
mov
imul
lea
inc
dec
or
jae
hlt
es
in
jmp
cmpsl
push
jno
lock
rorl
xor
xchg
jno
mov
adc
jle
add
mov
and
cmp
dec
mov
lods
jl
sbb
je
das
loop
sbb
fldt
daa
fldcw
rclb
mov
or
sub
leave
cmp
lahf
clc
push
rcll
mov
jg
in
cmpsb
pushf
cmpsb
adc
sub
jge
xlat
ja
cmp
fs
push
arpl
mov
push
inc
jo
ds
push
push
stos
xor
lock
mov
xchg
mov
dec
xor
pop
inc
or
xchg
inc
int
xchg
dec
mov
mov
popf
ret
std
add
insl
inc
pop
aam
mov
fcoms
sbb
ret
es
insb
mov
inc
and
inc
or
cwtl
iret
test
aad
pop
pop
adc
stc
mov
lods
mov
out
push
adc
mov
nop
ret
imul
xor
lret
push
or
xor
sub
aas
cmp
push
or
je
xlat
sub
inc
popf
cli
mov
push
mov
out
push
daa
push
dec
loopne
sub
inc
push
imul
mov
jne
pop
jmp
adc
iret
or
jle
and
jne
inc
sbb
pop
ja
dec
cld
rol
std
add
mov
cmp
pop
arpl
inc
mov
lret
cmp
xchg
sub
daa
sub
mov
add
dec
push
insl
mov
fdivrs
stos
rolb
out
xchg
loopne
into
xchg
push
xor
or
sbb
adc
mov
daa
bound
and
call
sbb
jbe
in
jmp
gs
test
popa
loopne
nop
mov
jno
jl
mov
push
cmpsl
sub
loope
fmull
je
pop
pop
call
popa
mov
push
mov
and
stc
loop
sbb
fidivs
jle
sub
mov
mov
sub
sub
xchg
outsl
adc
les
dec
jp
imul
or
mov
mov
aam
dec
push
les
sbb
cs
lods
lea
xor
hlt
mov
mov
in
mov
movsb
jl
in
sbb
jb
or
cmpsb
lock
hlt
mov
mov
dec
repz
into
jg
xchg
lahf
inc
or
imul
shll
data16
cmp
rorl
or
push
jo
cmc
push
pop
jae
or
lds
jl
add
cmpsl
pop
enter
sub
in
sub
push
rclb
pop
xor
leave
or
stos
bound
aam
mov
sbb
loopne
scas
adc
lods
and
and
ja
bound
mov
popa
bound
push
popa
mov
adc
andl
in
es
or
mov
cmp
out
dec
xchg
xchg
mov
hlt
gs
out
mov
mov
sbb
jbe
out
inc
pushf
mov
gs
add
test
pop
jb,pn
adc
sarl
or
ror
pop
inc
stc
mov
xor
ds
mov
cmc
adc
dec
jno
adc
inc
shll
mov
jae
mov
js
cltd
fildl
sbb
mov
jno
push
hlt
dec
test
mov
roll
push
mov
pop
loope
mov
fdivs
add
int
fnstsw
xlat
ret
test
sub
mov
call
icebp
pop
mov
stc
sbb
mov
mov
pop
mov
mov
std
push
int
std
iret
dec
adc
out
jg
sbb
movsb
enter
insb
pop
dec
outsb
or
aaa
inc
jle
loop
xchg
push
scas
pop
sbb
les
daa
xchg
inc
jle
and
dec
pop
jle
sbb
aas
dec
test
bound
nop
enter
sub
adc
add
inc
pop
lods
sub
xor
lcall
and
jo
mov
fisttpll
out
cwtl
mov
mov
fisubrl
add
adc
testl
dec
outsl
bound
push
mov
addr16
in
push
les
pop
ret
pusha
loope
mov
fstp
push
cld
js
incl
pop
leave
jp
jg
notl
pusha
mov
jge
loop
xor
pop
stc
cli
cmp
pop
pusha
xchg
cltd
dec
gs
sub
dec
sub
or
adc
push
arpl
xorl
lret
sub
stc
dec
and
fwait
jno
test
mov
sti
mov
shl
scas
sub
cmp
cmpsb
hlt
leave
adc
and
push
and
jp
xchg
xor
in
jne
jns
pusha
in
clc
leave
mov
pop
popa
testl
popa
aad
sbb
inc
mov
lds
cmp
insl
pusha
adc
cld
push
lcall
sub
or
add
std
and
fs
xchg
adc
inc
push
outsb
pop
pop
scas
adc
mov
loope
xor
jnp
ja
jb
dec
pop
scas
test
inc
cmpsb
lods
or
and
cmp
mov
or
pop
outsl
jmp
sub
pop
xchg
push
in
pop
movsb
sbb
clc
enter
pop
cmc
xchg
pop
aad
stc
or
lods
mov
jp
jb
mov
orb
vsubpd
sbb
aad
or
aad
xchg
ss
sub
xor
pop
jns
jg
xor
pusha
in
shrb
cmc
pop
dec
jne
xchg
dec
dec
test
lods
cltd
fcmovnb
addr16
sbb
leave
fmuls
push
adc
push
cwtl
icebp
shll
pop
rclb
jmp
pusha
pop
je
sbb
inc
cwtl
test
add
loopne
fs
pop
jae
aad
mov
add
add
jle
jo
sub
jge
iret
sbb
cmp
mov
jge
inc
sbb
outsl
in
mov
adc
insl
mov
out
mov
cmc
lods
push
cmp
inc
out
mov
sbb
lods
in
aad
shrb
push
nop
inc
aaa
push
dec
xchg
dec
mov
icebp
pop
push
stc
mov
pop
pop
mov
pop
inc
or
xchg
outsl
dec
mov
cmp
scas
sub
sbb
jno
mov
jmp
jb
mov
push
dec
sahf
fs
xlat
fadds
sarl
aaa
popa
add
std
sbb
aas
loop
outsb
pusha
cmp
pusha
sarb
and
fdivrp
and
or
xchg
cmp
cmc
nop
sbb
xchg
mov
inc
pop
fnsave
or
outsl
clc
lret
idiv
sub
out
inc
jl
bnd
ret
mov
xor
in
out
jbe
cmpsl
dec
push
xor
push
popa
lret
test
int3
cli
icebp
aaa
andl
xor
lret
andb
icebp
xchg
sahf
mov
addl
pop
cmp
out
cli
pop
sub
mov
arpl
sub
icebp
das
std
les
dec
mov
lods
imul
aas
das
sub
popa
and
mov
push
pop
sarb
xor
into
jge
rcrl
aad
and
jns
ds
jmp
cmpsl
mov
scas
rcrb
add
outsb
push
das
and
jecxz
jbe
jp
mov
sahf
push
xchg
inc
dec
mov
pop
faddl
and
xor
jb
mov
xchg
xchg
sbb
das
jo
les
not
sub
mov
inc
sbb
jo
jae
icebp
clc
dec
sub
cmp
xor
xor
mov
ja
movsl
inc
aam
int3
test
fs
insl
xor
sbb
xchg
cld
in
test
mov
push
aad
or
sbb
fsubrp
add
push
imul
or
pop
sub
mov
enter
sub
mov
sbb
filds
xchg
cmc
sbb
ja
add
mov
ss
in
inc
mov
ss
jmp
xlat
adc
adc
mov
imul
dec
lcall
daa
xchg
pop
push
and
gs
push
enter
test
adc
in
outsl
fisttpll
jg
ss
xchg
pop
cmpsb
jmp
push
mov
in
fistl
add
mov
aas
addr16
stos
popl
push
into
xchg
pop
test
outsl
lea
insb
scas
mov
and
movsb
cmp
fmull
or
jmp
dec
cmp
mov
or
in
mov
jbe
xor
mov
mov
dec
cvtps2pd
dec
fisubrs
cmp
or
pop
xor
iret
cmpsb
movsl
repnz
scas
and
notb
push
push
movaps
lds
xchg
lods
test
dec
in
cmpsb
addr16
cmp
xchg
mov
mov
jp
xlat
pop
push
xchg
push
mov
inc
and
lock
dec
dec
jnp
popa
inc
insb
cld
pop
mov
dec
es
jg
xor
andb
sbb
sub
addr16
lock
cltd
ret
rcll
cmc
sbb
sti
scas
sub
xorb
cmp
pushl
loopne
ds
ret
xchg
js
fisttpl
shlb
ret
ret
or
mov
adc
outsl
addr16
lea
pop
pushf
xchg
adc
xor
adc
int3
mov
fsts
jb
aam
jo
inc
ds
adc
aas
andb
arpl
fiadds
lds
mov
or
push
jne
jg
mov
test
pushf
dec
rorb
push
xchg
pop
sbb
push
in
sub
cmp
mov
mov
nop
sub
addr16
push
test
ror
sti
mov
fidivs
mov
push
aas
add
adc
jmp
imul
xor
add
jne
mov
mov
xor
jno
aaa
sti
sti
sbb
or
imul
inc
dec
outsb
mov
in
push
cmpb
roll
ret
call
cmpsb
adc
pmulhw
mov
pop
hlt
in
out
dec
xchg
repz
flds
shll
out
nop
push
out
popa
add
lods
mov
cltd
jae
xchg
dec
inc
lods
add
jg
out
popa
inc
aad
push
lret
pop
test
jl
cmpsl
push
cmp
jg
add
lret
xchg
mov
mov
clc
sbb
push
shrb
and
jno
into
popf
cld
in
fmul
movsb
push
jmp
mov
loope
insb
cmpsl
mov
and
mov
pop
push
jge
xor
lret
add
sarl
cld
push
or
and
or
lret
lahf
imul
mov
push
lret
cmp
inc
push
mov
cmp
xchg
push
lods
imul
popa
orl
fiadds
dec
fwait
cmp
rcl
and
lock
movsl
ss
imul
pop
dec
jnp
stc
add
jae
or
xlat
jmp
pop
lods
divb
sbb
jp
outsb
cld
or
mov
pop
mov
add
leave
and
insl
cmp
pop
sahf
mov
mov
or
bound
enter
out
cmp
out
aaa
das
jg
out
lods
popa
xor
sbb
test
pop
fdivrp
jnp
fmuls
enter
lea
and
es
adc
sbb
insl
push
outsl
and
fwait
or
xor
cwtl
loope
repnz
sub
gs
aad
xchg
mov
mov
xchg
cmpsl
hlt
movsb
inc
pop
and
mov
xor
push
aam
or
mov
inc
mov
jp
xor
adc
jae
push
mov
mov
test
mov
mov
sbb
sub
inc
xorl
lock
inc
lea
and
push
dec
pop
xchg
or
sub
dec
sub
add
mov
sbb
popa
or
scas
cmpsl
dec
pop
inc
movsb
pop
adc
sahf
scas
std
fisttpl
mov
stos
lock
dec
adc
inc
xchg
mov
push
out
pop
sub
sarl
pop
mov
mov
pop
sbb
and
testb
stos
hlt
iret
dec
sbb
mov
push
outsl
int
bound
fisttpll
mov
hlt
in
scas
in
cld
xlat
xchg
xchg
xor
gs
adc
push
pop
adc
mov
sbb
and
sub
repz
or
pop
sbb
nop
enter
cmp
or
mov
movsb
in
inc
loop
lds
fndisi(8087
mov
rcrl
daa
int3
das
popa
sub
xor
pop
mov
inc
addr16
pop
add
inc
fadds
adcl
dec
adcl
jne
pop
mov
lcall
pop
push
cmc
loop
stos
adc
in
cli
add
je
cwtl
pusha
pop
insb
inc
add
ljmp
sub
test
mov
lods
dec
xor
cmp
inc
out
in
sub
popl
push
cmp
and
dec
and
mov
pusha
negb
popa
fdiv
fsubl
or
push
push
pop
cmp
iret
dec
call
lret
mov
inc
push
iret
mov
adc
jmp
rorl
adc
stc
sub
rorb
xor
std
push
xchg
std
jmp
jb
insl
sbb
fwait
mov
test
sub
cmc
jge
aas
fisttpll
push
int3
pop
sbb
sbb
add
or
pushf
int3
jb
add
mov
test
aaa
in
ja
cmc
sbb
imul
sub
int
aad
or
rcl
mov
inc
sar
jbe
xlat
pop
arpl
jno
pop
cmp
loopne
sahf
add
or
sbb
jecxz
jb
push
jo
xor
ljmp
int
ficoms
ds
lahf
sarl
push
test
xor
leave
dec
sbb
jmp
mov
mov
in
xchg
adc
push
xchg
bnd
pop
fildl
mov
adc
jo
mov
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
push
test
jl
pop
jl
xor
or
pop
cli
push
push
xchg
addb
sbb
std
cmp
mov
jecxz
xchg
jnp
mov
pop
lods
or
jne
ret
jg
testb
fistl
jmp
xchg
add
mov
data16
jecxz
adc
stc
sbb
scas
movsb
push
sahf
pop
in
ret
mov
inc
mov
pushf
dec
xor
sbb
push
inc
adc
mov
testl
out
pushf
les
mov
das
stos
mov
and
dec
popf
lcall
test
fcomip
cmp
pop
imul
outsl
jmp
lret
shr
test
nop
or
out
dec
leave
adc
adc
rclb
pslld
pop
xor
inc
les
mov
cltd
mov
pop
inc
mov
pusha
jbe
jle
out
pop
cmpb
mov
jmp
cwtl
js
sti
pushf
and
pusha
cmpl
jecxz
xor
jne
cmp
sbb
ret
sub
cmpb
lods
cmpsb
fcoms
jp
lahf
pushf
addl
dec
testb
pop
mov
les
add
cli
jb
loope
cmp
mov
mov
fs
repnz
push
xor
add
roll
sub
aas
mov
ret
fimuls
stc
mov
test
push
push
mov
insb
mov
jle
clc
fisttpll
cmp
push
adc
in
repz
add
cld
pop
adc
add
sub
out
mov
xchg
mov
adc
sub
hlt
lds
xchg
xchg
in
rcrl
int3
fsubr
vphadduwq
sbb
mov
repz
les
xor
mov
outsl
pop
jns
adcl
jge
push
push
ss
push
dec
sbb
lods
push
sub
les
xchg
mov
insb
iret
dec
or
mov
lcall
xchg
mov
sub
xlat
mov
jb
ret
leave
dec
scas
mov
jecxz
shll
inc
testb
scas
and
jg
push
push
je
adc
movsb
add
push
push
mov
sbb
jae
dec
bound
shll
mov
test
shll
leave
and
out
push
ja
fcmovnbe
arpl
jne
lds
ret
leave
pusha
std
adc
jge
dec
clc
mov
adc
inc
out
sbb
ficomps
fisttpl
dec
mov
in
mov
dec
lcall
pushf
daa
nop
add
mov
add
mov
jmp
push
js
and
mov
or
mov
fldcw
xchg
dec
fisubrl
aaa
sbb
pop
shlb
sbb
inc
inc
lds
xor
out
mov
jbe
ret
aaa
imul
sbb
xor
shrb
jecxz
lods
inc
adc
stc
jnp
ljmp
test
inc
dec
cmp
xchg
ds
push
jecxz
lcall
lods
sub
clc
jae
nop
jae
movsb
xor
pop
dec
cmp
dec
sub
adc
push
nop
cmpl
ficomps
subb
fmuls
filds
dec
or
test
push
add
add
sbb
sbb
insb
cmp
and
sbb
push
xchg
dec
cwtl
ret
jb
add
lret
sti
mov
inc
andb
and
cld
jmp
insl
ss
shlb
popa
inc
into
mov
inc
inc
rep
inc
push
in
int
pusha
inc
add
add
dec
sbb
lds
adc
lods
sub
shll
aaa
lock
sbb
xchg
test
aaa
jmp
cmp
mov
shlb
push
mov
lret
pop
dec
leave
addl
mov
lds
sahf
popf
fwait
je
add
xor
dec
or
inc
leave
stos
jp
jecxz
mov
mov
leave
rorl
js
sbb
dec
cmc
or
dec
mov
or
or
or
sahf
jmp
ljmp
fisubrl
mov
fildl
daa
and
icebp
cli
pop
test
leave
mov
push
call
add
add
ljmp
sub
lcall
xchg
pop
mov
sbb
or
out
call
mov
ljmp
jecxz
aaa
gs
inc
xchg
pop
fcoml
out
mov
gs
and
ljmp
cmp
aaa
dec
pop
daa
lea
pop
call
rcrl
inc
inc
mov
into
push
call
cmpsl
inc
push
pop
mov
adc
add
and
pop
xchg
ss
frstor
push
sub
pop
loop
cmp
insl
aaa
or
mov
orb
dec
cmp
call
mov
repnz
sub
and
jmp
sbb
fidivs
inc
xchg
call
dec
leave
add
lods
sti
std
sub
clc
pmaxsw
jno
ljmp
movsb
and
mov
sahf
out
mov
cli
cmpsl
inc
addr16
je
push
mov
fdivr
cwtl
sub
mov
dec
outsl
stos
sub
push
mov
adc
test
repnz
aad
rorb
insb
pop
adc
sub
sub
arpl
fisubl
inc
mov
jmp
fwait
push
inc
pop
dec
fs
daa
aam
out
scas
sbb
inc
xlat
or
push
in
mov
mov
lods
mov
sbb
adc
xchg
gs
cli
mov
push
xor
cld
fldenv
call
das
cld
dec
aaa
xchg
push
fstl
stos
push
and
enter
orb
sahf
in
outsb
out
push
sub
push
and
mov
mov
jmp
imulb
dec
push
sub
jle
hlt
js
gs
roll
fwait
cld
call
and
in
dec
cmp
shll
xor
es
ss
mov
imul
xor
ljmp
mov
sbb
push
xchg
mov
test
pop
sub
sbb
add
cli
xchg
push
xor
repnz
xchg
mov
repz
jnp
sahf
mov
fchs
cmp
dec
push
push
cmp
repz
adc
out
outsl
xor
je
and
cwtl
jmp
adc
jl
das
leave
sbb
imul
jg
sub
leave
lea
sbb
mov
faddl
push
je
push
add
push
and
add
or
jle
xor
andb
in
push
dec
jae
in
test
xchg
movsl
jmp
sub
sbb
movsb
and
mov
aaa
jecxz
hlt
pop
mov
pop
aas
inc
mov
xor
add
pop
add
roll
mov
sbb
mov
inc
loopne
cmp
insb
cmp
inc
ja
lret
jb
rolb
pushf
popa
inc
push
insb
setns
mov
loope
je
bound
fs
xor
and
push
push
jge
cmpsb
push
repnz
inc
lahf
add
inc
int
pushf
lock
sahf
call
popf
jg
dec
mov
mov
scas
in
lock
xchg
inc
jo
push
cmp
nop
cmpsl
inc
jb
xor
jno
and
and
incl
fsubrs
push
adc
jge
xchg
xor
push
adc
inc
inc
cwtl
in
lods
sbb
cmp
call
pop
lods
out
loope
dec
cmpsb
mov
inc
cmp
or
stc
or
jo
aaa
jp
inc
or
lret
jae
dec
xchg
push
fsubp
and
fcmovnb
cmp
xchg
sub
pop
fwait
xchg
xlat
repnz
xor
push
and
mov
bound
lds
pusha
jmp
mov
inc
ret
push
cmpsl
sbb
cltd
push
xor
addb
cmp
sbb
mov
push
xor
pusha
add
pushf
rorb
fstl
std
adc
mov
sbb
pop
jno
mov
add
lret
cmp
mov
sbb
mov
inc
push
mov
inc
xor
xor
mov
adc
sub
dec
sub
fwait
adc
cmp
add
jno
pushf
movsb
in
lret
imul
sub
call
jnp
test
and
sbb
adcl
sub
push
testl
int3
js
xchg
pop
shrb
dec
les
sbb
add
mov
lahf
add
or
in
fsubs
rolb
cwtl
push
xchg
aaa
lahf
push
xor
aas
cmc
and
sti
gs
addr16
lcall
push
test
mov
popf
jge
cmp
sub
iret
shrb
sub
stos
out
nop
push
dec
movsb
add
cld
lcall
pop
into
xor
lret
in
stos
mov
add
or
pop
dec
push
jnp
cmp
pop
or
pop
inc
push
cmp
push
cmp
lret
cmp
unpckhps
inc
jmp
xlat
mov
jmp
inc
sub
imul
xor
push
punpckhdq
pop
aam
jmp
or
mov
js
jno
lock
push
push
lea
ret
leave
push
adc
sub
mov
insl
rorl
nop
gs
and
popa
dec
and
roll
sahf
ds
mov
sar
adc
cmc
addr16
sbb
in
cmpb
jnp
ljmp
into
rcrb
ret
dec
inc
cmpsb
xchg
sub
add
push
push
pop
sbb
mov
mov
std
icebp
cmc
lret
loopne
iret
iret
outsl
inc
stc
jg
mov
mov
mov
inc
sbb
inc
test
ja
imul
mov
add
or
femms
punpckhdq
jge
jb
sub
les
lret
lods
mov
push
adc
loopne
out
sub
movsl
xor
lds
addr16
outsl
dec
inc
addb
out
mov
inc
push
mov
xor
ss
mov
jmp
aaa
test
loopne
imul
jbe
jge
mov
inc
icebp
movsl
andl
add
lods
cmpb
sub
adc
leave
sbb
and
pop
inc
jmp
test
rol
aaa
xchg
push
cli
mov
mov
sub
and
jo,pn
xchg
aad
xlat
out
push
inc
sbb
enter
mov
sbb
movsl
mov
in
je
sub
push
push
mov
pop
jae
adc
xor
and
movsl
mov
rcrl
insb
outsb
add
pop
fdivs
jae
lock
loop
sti
arpl
insl
jp
cmp
daa
xchg
adc
mov
scas
or
shrb
shlb
clc
mov
outsb
xor
adc
pusha
stos
loop
pop
pop
aaa
jg
jmp
dec
aaa
mov
jp
mov
dec
cmc
outsl
insl
iret
add
lcall
push
xchg
jmp
cmpsb
cmp
mov
cmpsb
or
xchg
xchg
ret
iret
ror
je
jmp
nop
xor
cld
mov
dec
mov
imul
lret
and
add
pop
dec
rclb
ljmp
subl
jle
notb
out
jmp
pop
xchg
outsb
dec
xchg
or
jne
mov
push
pop
mov
sbb
fidivrs
call
jbe
add
xchg
jmp
push
in
shlb
sub
mov
lcall
out
stos
xchg
xchg
fsts
adc
xor
pop
add
dec
movsb
adcl
fmul
test
je
ret
sahf
test
pop
dec
pop
mov
adc
mov
sub
mov
test
sahf
orl
faddl
clc
andb
repnz
mov
cmp
xchg
mov
and
xchg
adc
sarb
sub
inc
movsl
mov
adc
call
sub
pop
xchg
jmp
push
mov
push
mov
sub
test
andl
cwtl
mov
fscale
dec
stos
je
gs
std
dec
adc
xchg
pusha
cli
inc
sbb
adc
xor
shrb
std
mov
ljmp
sbb
cmp
add
inc
fldl
pusha
and
popf
dec
xchg
or
add
or
push
int3
mov
pop
lret
lahf
xor
inc
mov
cmc
lds
in
aaa
mov
es
in
js
js
imul
mov
mov
xchg
lret
mov
adcl
adc
mov
pusha
dec
sbb
testl
loopne
jle
stos
jge
sbb
cmp
mov
pop
call
jb
in
add
cmpsl
xor
fwait
sub
int3
pop
popf
add
mov
sti
xchg
xchg
mov
mov
stc
xchg
push
aaa
xor
loopne
xchg
das
nop
mov
cmpsl
leave
sub
jp
insl
inc
call
iret
into
outsl
xor
ja
add
icebp
mov
daa
cltd
cmp
stos
dec
dec
sub
test
add
lahf
gs
mov
mov
addr16
cmp
pop
or
jmp
insb
outsl
decb
adc
add
or
adc
mov
iret
jmp
addr16
mov
xchg
out
testl
cmp
or
add
aas
mov
jecxz
std
jmp
adc
push
pop
je
xor
aas
xlat
xor
mov
push
les
out
lahf
jbe
pushf
mov
mov
xchg
cmp
int3
nop
xchg
imul
je
add
leave
daa
outsb
pusha
mov
outsb
sbb
outsb
aad
mov
pop
push
cs
mov
cld
jbe
jle
adc
aam
in
dec
int3
pop
lret
cmp
data16
adc
cmp
push
sarl
mov
xchg
inc
test
add
sub
mov
jb
icebp
mov
imul
inc
pop
mov
jge
add
and
flds
rorl
shr
dec
out
and
push
cmp
mov
add
shl
cld
mov
mov
and
add
and
pop
lret
std
lret
sub
imul
cli
add
movl
in
rorb
mov
adc
repz
add
stc
xchg
outsb
incb
push
or
push
jl
ret
mov
jnp
xor
xor
loopne
xor
dec
add
jl
loop
das
xor
fildll
mov
xchg
movsb
je
sbb
das
push
sahf
inc
add
and
mov
lds
scas
mov
popf
mov
test
or
pop
mov
mov
xchg
dec
xchg
sahf
mov
daa
push
sub
jle
sub
dec
fcom
jmp
or
xchg
push
fidivs
insb
xchg
adc
jno
outsb
pop
lea
and
mov
sbb
jne
push
test
push
call
popa
and
mov
movsb
sub
adc
push
je
mov
mov
iret
or
pop
sbb
pop
xchg
test
int
popl
push
popf
in
cwtl
ss
lret
das
sarb
mov
and
or
fwait
push
stos
dec
or
clc
pop
out
jb
push
sahf
test
cmc
filds
mov
adc
loopne
dec
imul
sbb
cmp
cli
fisttpl
xchg
cmp
xor
jbe
lods
or
jnp
cli
lcall
xor
push
stos
loopne
imul
pop
icebp
and
push
lahf
imul
mov
push
xchg
insb
dec
add
hlt
sbb
call
jae
cmp
push
mov
cmp
movsl
sub
stos
jge
shrl
or
jae
in
pop
into
push
and
lock
mov
int
fildl
icebp
cmc
scas
inc
mov
cmp
cs
mulb
sub
daa
sti
out
sti
ret
aam
xor
jbe
les
inc
add
add
sub
mov
mov
xor
fmuls
or
mov
adc
xchg
push
in
pop
xor
leave
xor
out
out
and
stos
outsl
sti
js
aas
fstl
ret
mov
dec
mov
and
lods
jne
pop
testb
sbbl
sub
test
cli
adc
sub
pop
push
adc
gs
stos
test
push
sub
mov
jmp
inc
adc
mov
pop
movsb
aam
test
fwait
jno
jns
xor
dec
subl
adc
fnsave
dec
dec
pop
out
mov
inc
mov
aam
pushf
ficompl
fldcw
or
scas
jne
cmpsl
mov
cmp
std
in
daa
scas
pusha
mov
lcall
test
inc
gs
out
inc
out
push
mov
sub
filds
xchg
fidivl
push
sbb
and
jle
or
rcll
pop
es
stos
add
stos
js
sub
negb
xor
sub
sbb
add
cmp
xchg
out
add
xchg
mov
imul
movsl
or
mov
pop
mov
xabort
outsb
pop
fs
bound
mov
pushf
mov
xchg
lret
nop
xor
dec
pop
pop
jae
xchg
push
adc
sti
fsubp
pop
sbb
lds
loopne
cli
xchg
stos
mov
adc
jmp
sbb
lcall
pop
xchg
xor
xor
paddsw
outsl
cwtl
pop
cmp
sub
fs
mov
fcomps
imull
mov
adc
cmp
pop
sub
push
dec
mov
pop
pop
and
xor
add
dec
outsb
in
jmp
daa
push
inc
cs
std
pop
sub
dec
js
loope
sbb
jecxz
dec
lcall
clc
js
adc
push
enter
sub
fiaddl
pop
cli
mov
add
popf
mov
iret
add
add
es
fwait
xchg
mov
fisttpl
pop
out
xchg
push
inc
cmp
mov
pop
test
mov
jecxz
mov
xor
mov
out
in
mov
jecxz
xchg
dec
sbb
or
aas
data16
jmp
sahf
mov
xor
movsl
jle
lahf
mov
or
jge
mov
push
sbb
jne
push
int
pushf
jne
rol
xor
jmp
adc
fnsave
cltd
jae
shl
dec
sbb
stos
xchg
dec
ja
out
scas
xor
lds
in
inc
sbb
pop
adc
imul
xor
out
shlb
mov
mov
jns
out
xchg
and
fsubrl
lds
cmp
adcl
pop
sub
sub
jbe
jnp
cltd
dec
inc
call
mov
inc
and
and
xchg
mov
push
pusha
pop
lds
xchg
and
push
xchg
andb
lret
arpl
push
jecxz
icebp
or
push
imul
shrl
pop
out
cmp
push
cmc
shrb
icebp
jb
popf
jb
inc
repz
pop
cmc
cmp
jmp
mov
jno
pusha
cld
and
pop
movsb
int
mov
gs
adc
movsl
fldt
aam
imul
mov
leave
sub
iret
nop
push
and
jb
pop
push
fisubrs
mov
jmp
enter
xorb
and
adc
mov
in
fwait
in
jl
outsb
dec
in
popa
adc
pop
test
xor
stc
test
ljmp
pushf
loope
adc
jns
je
and
fisttpl
fwait
or
jecxz
xor
push
cmpsb
clc
inc
sysexit
and
mov
jg
fwait
pop
mov
mov
and
rolb
inc
push
adc
push
lret
inc
pop
out
sub
mov
jle
dec
fs
int
sub
into
faddl
or
dec
popa
sbb
out
sahf
js
movsb
scas
or
and
adc
xor
mov
sbb
inc
lcall
xchg
dec
push
xlat
insl
cmpb
in
fnstcw
shr
testb
mov
xchg
and
jmp
dec
sbb
mov
xchg
pop
std
movsb
ret
pushf
pop
or
jmp
scas
adc
pop
jp
fstpl
adc
xchg
in
or
sub
jae
lret
lock
xchg
xchg
jns
loopne
scas
mov
jmp
movsb
xchg
push
mov
jle
rcrl
cmp
in
sbb
xor
pop
jl
pop
pop
inc
enter
stc
jg
or
mov
std
mov
xchg
arpl
jnp
mov
int3
jp
aad
push
cmp
sbb
mov
ljmp
daa
insb
repz
cmp
in
or
test
shrb
dec
int3
shll
in
shll
movsb
mov
cltd
enter
gs
sbb
xchg
mov
mov
adc
fildll
add
push
dec
addr16
adcb
jg
mov
pop
pop
dec
test
xchg
sbb
xor
lret
repz
push
fcomps
inc
and
inc
mov
jmp
clc
adc
add
lock
aad
pop
hlt
out
xlat
fists
cmp
js
mov
xchg
jne
cwtl
mov
lods
or
fs
and
xchg
cwtl
stos
jle
jnp
dec
mov
mov
xor
xchg
outsb
sti
les
mov
inc
test
test
shrl
push
mov
fsts
inc
push
mov
scas
mov
icebp
iret
inc
je
sub
mov
gs
xchg
or
outsl
sub
dec
loope
fcomp
cli
mov
subl
mov
sub
push
cmp
xor
std
dec
inc
aas
loop
jns
dec
insb
daa
sti
into
cmp
dec
xchg
mov
fisttpl
mov
stos
int
push
xchg
addr16
ss
add
cld
push
in
push
inc
inc
sti
cmp
and
shlb
ljmp
icebp
cmp
in
pop
pop
adc
jecxz
mov
roll
cmp
mov
add
add
lret
adc
aaa
xor
push
add
pop
aas
dec
push
or
mov
cmpsl
xor
pshufw
jg
pusha
cwtl
arpl
fdivrp
ja
xchg
mov
adc
stos
outsl
cmc
cmp
sahf
int
loope
imul
loop
std
mov
movl
or
mov
adc
pop
scas
jb
jno
out
mov
outsb
push
insb
faddp
mov
mov
lahf
dec
lods
scas
add
dec
movsb
ret
je
insb
and
jnp
lock
faddl
cmp
xor
in
add
and
push
insb
insl
loopne
xor
cmp
mov
outsb
mov
jo
movsb
dec
jl
gs
cmp
mov
insl
inc
push
in
mov
fsubs
and
dec
dec
cmpsb
pop
or
hlt
fdivr
push
shrb
movsl
xchg
sub
fucom
push
icebp
sub
lea
xchg
outsb
sub
pop
add
inc
mov
cmpsl
js
sub
adc
mov
jle
imul
adc
mulb
or
dec
or
outsb
sbb
mov
cmpsb
mov
movsl
int
mov
test
jno
xor
xchg
xchg
xchg
mov
imul
test
dec
sbb
cli
mov
ret
push
cmp
lds
mov
stos
add
enter
dec
ljmp
std
scas
es
add
push
lods
out
test
leave
cmp
je
in
aas
dec
test
les
pop
xorb
lcall
push
mov
add
jl
inc
pop
mov
push
lds
mov
insb
mov
jp
pushf
movsb
jnp
xchg
out
add
dec
pushf
insl
outsl
or
aam
sub
sbb
push
pop
jmp
or
aas
es
std
xabort
movsb
iret
int3
push
push
adc
xor
mov
jae
fldt
sarl
lods
mov
repz
in
xor
pause
fsts
mov
dec
arpl
or
cmp
lahf
mov
fists
stos
or
xchg
sub
aad
mov
adc
cmpsb
outsl
push
cwtl
lahf
lret
add
push
push
aaa
rol
mov
pushf
popl
shll
inc
dec
pusha
push
imul
jae
mov
sti
mov
ss
inc
andb
pop
mov
js
mov
aam
je
ss
mov
mov
xchg
xor
xchg
push
cmp
in
stos
scas
or
sbb
inc
inc
mov
jno
sbb
ficoms
enter
imul
xorb
xor
adc
aaa
gs
mov
bound
inc
jnp
mov
rolb
ja
les
fstpl
adc
mov
adc
xchg
pop
jbe
sti
jl
mov
add
push
lods
push
push
pop
or
out
pop
rcll
dec
sbb
adc
add
sbb
out
mov
xor
fstpl
dec
mov
sbb
bound
jbe
mov
jae
mov
mov
jg
add
leave
aaa
push
jno
call
jb
test
mov
adc
jg
mov
pcmpgtd
mov
mov
adc
inc
in
dec
cmp
jb
roll
pop
into
or
movsl
jle
jg
out
add
dec
rcrb
sti
scas
push
xor
movsb
scas
jbe
loopne
jl
or
dec
lock
sub
and
ljmp
xchg
fsubp
sti
pop
and
into
xor
test
cmp
test
mov
sub
xor
mov
js
jae
push
push
pusha
pushf
adc
insb
pop
shrb
pop
mulb
pop
and
dec
adc
test
xchg
aad
jecxz
push
adc
fsubrl
xchg
adc
xor
cmp
enter
xor
loopne
icebp
mov
xchg
or
xor
lcall
lret
xor
sarl
jne
mov
xchg
push
cmp
push
inc
dec
out
add
insl
mov
bound
aas
stos
xchg
push
mov
out
mov
hlt
scas
loop
insb
pushf
push
xor
imul
negl
jne
mov
push
ja
cli
stos
jp
fidivs
aam
in
ja
lds
dec
pusha
sub
adc
pusha
cmpsl
sub
jbe
fwait
lret
mov
mov
rclb
std
call
loopne
xor
push
lret
fisubrl
pop
dec
test
push
cwtl
push
push
push
pop
jne
inc
cmp
mov
xor
out
andl
jnp
ret
mov
add
jp
cmp
cwtl
gs
add
or
rorb
loope
cmp
dec
fistpll
xchg
test
mov
leave
dec
sbb
aaa
jge
fadds
dec
outsb
sarl
push
sub
popa
ljmp
sbb
xchg
jnp
push
pushf
inc
iret
push
push
adc
pop
call
out
mov
add
jb
mov
and
mov
mov
cmpsb
add
decl
dec
mov
fs
aaa
sub
dec
je
shlb
push
scas
jg
xchg
rclb
mov
push
addl
jp
sub
mov
leave
bound
gs
pop
cmp
clc
and
or
outsl
xlat
aad
cmpsb
fisubs
and
jb
push
adc
aam
add
fistps
in
sub
adc
test
cltd
leave
sarb
ss
scas
sub
or
xchg
push
mov
into
xor
push
fs
in
jb
lock
mov
sub
popa
add
pop
ret
pop
push
out
jmp
clc
push
or
mov
sbb
pop
lock
jbe
test
mov
addr16
nop
mov
xlat
shrl
fisttps
jae
loopne
dec
inc
mov
ret
cli
dec
imul
and
sub
jbe
or
cmp
in
mov
movsb
push
mov
mov
push
test
and
fidivrl
lret
fildll
cmc
loop
pop
out
lahf
repz
and
or
repz
mov
leave
jo
out
mov
dec
xchg
push
outsb
lcall
and
div
xor
sbb
mov
in
js
cli
cmp
leave
adc
ja
mov
fs
call
test
cld
xchg
stc
imul
lret
mov
dec
jae
xor
push
icebp
arpl
mov
movsb
or
mov
sub
mov
inc
xchg
call
xor
loop
sarl
mov
inc
cmpsl
mov
cmpsb
mov
sbb
loopne
mov
outsb
xchg
jne
cs
decb
adc
add
inc
adc
aas
dec
int3
push
and
shr
or
jae
sbb
lea
pcmpgtb
clc
xor
jp
mov
mov
push
mov
shlb
pushf
pop
rclb
mov
in
adc
sub
rcll
jae
pusha
ds
fs
sub
add
xchg
or
and
orb
inc
or
sbb
add
faddl
push
pop
adc
mov
ss
add
aam
or
iret
iret
cmp
cltd
cmp
sti
inc
je
inc
and
push
iret
pop
movsl
mov
push
sbb
inc
xor
lds
test
fists
jae
mov
cmp
push
orl
push
cmp
in
in
les
mov
in
jge
fistpl
push
pop
xchg
cwtl
je
aad
fwait
inc
adc
mov
mov
mov
adc
das
mov
into
sub
adc
xor
xchg
dec
or
sub
xchg
jne
test
popa
jecxz
repz
add
jno
cmp
cmp
les
sarl
aas
pusha
jno
das
sub
inc
add
mov
lods
scas
pusha
inc
sbb
xchg
jl
mov
mov
dec
lods
lret
adc
aam
outsb
pop
in
inc
xorl
push
add
loope
and
cmp
cmp
outsl
jnp
fcoms
push
jae
mov
rolb
inc
stos
into
mov
mov
adc
jl
sub
dec
or
fsubrl
cmp
sahf
pop
sub
sbb
pop
leave
cld
cmp
inc
mov
sub
lahf
mov
shll
adc
movsb
sbb
arpl
sahf
push
and
pop
pop
mov
cmp
inc
add
or
lods
and
test
popf
aas
inc
and
roll
mov
sbb
fcom
fwait
pop
jmp
outsl
lds
jo
call
dec
mov
les
pcmpgtd
mov
dec
add
addr16
les
fadds
add
add
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
stos
inc
pop
adc
jl
inc
pop
jl
inc
pop
and
ss
or
add
cltd
ja
lahf
adc
shl
popf
cmp
pop
dec
imul
mov
ja
xorl
pop
pop
jp
movsb
pusha
fs
or
jne
in
mov
xor
test
outsb
fmull
xor
inc
out
jge
mov
add
xor
les
lods
scas
outsb
push
mov
movsb
mov
iret
ljmp
int
scas
test
lahf
shll
and
or
mov
ljmp
jae
jae
cmc
lods
das
fwait
lock
xor
add
lret
mulb
call
jle
loope
lock
sub
cltd
movsl
pop
lret
fadds
lods
xor
mov
dec
adc
cmp
mov
and
loopne
lds
xchg
outsl
mov
sbb
inc
pop
xor
stos
std
psubsw
inc
pop
test
mov
mov
nop
pop
mov
nop
dec
and
cmpsb
mov
or
jmp
das
push
adc
rclb
push
stc
arpl
mov
in
sbb
stos
or
in
xlat
mov
roll
or
dec
insb
fsubrl
push
in
pop
popf
dec
mov
jb
in
adc
jnp
cmp
incb
jnp
iret
dec
lods
fsubs
jb
ss
and
pop
and
cwtl
test
mov
jg
cmp
push
and
jnp
mov
mov
mov
adc
stos
adc
fistpll
jle
test
cmpsl
icebp
sbb
filds
inc
jno
shll
sub
nop
or
jmp
sub
dec
sbb
outsb
add
loope
mov
popf
es
dec
push
or
fnsave
ret
or
out
lock
fnstcw
pop
mov
rcrb
out
or
inc
pop
in
inc
imul
adc
inc
ss
test
fisubl
sti
cmpsl
mov
push
pop
dec
movsl
dec
sub
pop
movsb
ret
cmp
sub
sub
in
dec
aaa
out
nop
scas
dec
cmp
jmp
push
out
hlt
adc
into
mov
mov
inc
lret
rorb
push
call
mov
sub
iret
repz
add
cmp
push
rcl
je
pushl
push
scas
lea
das
ss
mov
push
pop
stos
cltd
into
loop
outsl
pusha
xor
sahf
cltd
mov
or
out
and
outsb
bound
and
stc
ror
pop
popf
xchg
xchg
or
mov
pop
in
imul
outsb
mov
add
popf
pop
mov
push
or
mov
xor
sbb
mov
pop
add
test
adc
pop
inc
pop
cwtl
sub
or
jno
ljmp
or
or
iret
loop
cmpsb
cmp
fsubs
xor
enter
add
pop
xchg
bound
aas
stos
out
and
std
jge
xor
je
mov
test
inc
rolb
pop
addr16
mov
call
or
stc
xlat
stc
xchg
jmp
push
cld
push
mov
iret
mov
out
jle
arpl
sbb
or
push
xchg
mov
out
or
xor
mov
in
jne
roll
push
xchg
or
jl
fistpl
sbb
aas
cmc
fnstcw
sahf
mov
mov
inc
lock
cmpsl
into
lret
inc
cmp
decl
lods
imulb
adc
insb
fbld
nop
lock
mov
jg
mov
inc
jnp
lods
xor
pop
popa
daa
fadds
aam
mov
mov
mov
in
push
xchg
scas
in
mov
mov
lret
popa
sbb
roll
and
jg
xchg
push
daa
lret
stos
push
cmp
or
sub
pop
push
jecxz
cld
fs
sahf
pusha
xchg
mov
jmp
icebp
cmpb
in
leave
out
hlt
xor
aas
sub
mov
mov
pop
aaa
sbb
cmc
jbe
cwtl
xchg
xor
dec
adc
xor
jmp
jmp
xchg
xchg
test
mov
negw
leave
dec
xchg
jb
mov
adc
stos
xchg
rolb
loop
or
mov
mov
adc
sbb
fstp
or
cltd
and
sbb
inc
fists
dec
loop
inc
mov
inc
jg
cwtl
das
lock
sub
stos
loopne
and
punpckhbw
int3
loop
das
sbb
xor
adc
out
push
pop
lods
push
push
rolb
mov
rcrb
test
mov
imul
push
lret
mov
icebp
mov
testb
data16
idivb
fmul
in
xchg
int
lea
aam
gs
je
sbb
rolb
mov
shll
arpl
std
adc
pop
invd
fcomp
cmp
dec
sbb
push
inc
push
in
sub
loop
bound
rclb
int3
fistl
lods
jp
xor
cmp
ret
cli
ret
shlb
lods
and
add
or
add
out
dec
call
iret
jno
test
mov
cmp
jl
xchg
repz
dec
mov
xlat
xor
sub
adc
es
mov
imul
mov
inc
jecxz
std
add
scas
sub
pop
mov
nop
in
push
dec
xchg
ljmp
jp
xor
andb
jnp
jle
stos
sub
jle
mov
jns
xor
in
outsb
ficomps
adc
out
cmpsl
xor
cwtl
stc
push
hlt
clc
daa
sahf
add
movsl
aaa
testb
cmc
int
fcomps
push
mov
imulb
je
cmp
add
or
fcoml
cmp
out
sub
mov
dec
and
cmp
mov
and
bound
cmpb
repnz
sbb
outsb
xchg
mov
test
push
push
push
push
cli
push
xchg
add
scas
jg
fs
test
mov
out
movswl
mov
jl
xchg
push
daa
es
inc
push
repnz
shrl
out
push
sti
test
xchg
xchg
mov
movsb
ror
xchg
pop
jnp
mov
and
das
jmp
ficompl
adc
lods
push
pop
jmp
int3
loop
pop
popf
ret
inc
xor
mov
divl
loop
daa
js
mov
les
fmuls
enter
push
mov
cltd
jg
movsl
xchg
popa
iret
aas
lcall
mov
icebp
loope
mov
adc
test
or
mov
lock
fimuls
mov
fstl
movsl
xchg
sub
daa
push
mov
cltd
mov
push
add
pop
aas
push
rorl
pop
rcr
sbb
popa
mov
or
and
xor
mov
test
xor
and
adc
scas
jg
mov
dec
dec
mov
cmp
mov
int
dec
jae
pop
stos
mov
cmp
dec
xchg
and
or
dec
jmp
fcomps
inc
cmpb
jno
and
xchg
inc
popa
sti
rcrb
ret
outsb
shrl
jae
movsb
inc
pop
push
dec
push
push
addr16
cmp
rorb
cmp
mov
cmp
iret
mov
mov
push
xchg
push
movsl
outsb
sarb
fcompl
inc
adc
push
cs
and
mov
out
jb
fisttps
movsl
arpl
dec
mov
in
dec
xchg
mov
ss
test
jp
fsubr
loopne
mov
in
push
rol
sbb
fdivl
and
outsl
fdivr
sub
outsl
push
ja
dec
xchg
mov
ljmp
or
xchg
aam
hlt
or
test
jo
mov
mov
xor
push
in
cmp
scas
and
jecxz
xchg
gs
and
fcomp
leave
scas
inc
jne
test
or
mov
iret
pop
sbb
or
mov
ficomps
cmp
cs
add
cmpsb
into
mov
das
push
insb
and
fidivrl
fwait
mov
and
mov
out
mov
testl
pop
negb
arpl
in
js
subb
inc
enter
stos
outsl
cli
filds
mov
jb
mov
dec
js
xchg
ds
lret
icebp
cmp
and
adc
into
in
cmpsl
mulb
sarl
push
adc
loopne
xchg
mov
cmp
jae
sub
mov
sub
mov
push
dec
and
in
call
das
jmp
call
roll
in
ret
into
fwait
rclb
shl
aas
xchg
or
rolb
mov
dec
cmpsb
addr16
jns
in
add
imul
movsb
sbb
movsl
xchg
push
and
popa
imul
loope
or
movsl
loopne
cwtl
popa
mov
sub
cmp
fstl
xor
int3
in
lods
test
je
out
xchg
addr16
cmp
mov
mov
xchg
push
lock
rolb
imul
and
adc
sti
clc
jl
inc
jp
ds
lret
cmp
test
mov
cmpsb
and
fldl
notb
pop
int
call
xchg
or
inc
in
adc
push
std
out
pop
jge
nop
push
out
jne
out
xor
cld
popa
in
pusha
pop
adc
push
mov
ljmp
push
aas
test
xor
sub
ljmp
mov
test
cmpsl
push
in
jle
jmp
and
sub
dec
cli
mov
in
jge
popa
sub
outsl
dec
and
insb
aas
lock
cmc
push
sbb
mov
mov
movaps
repz
mov
in
dec
or
cld
cmpsl
jecxz
pop
xlat
shll
mov
mov
and
fldt
mov
rcrb
cli
mov
mov
pop
add
dec
mov
dec
pop
adc
or
fistl
cmp
jp
pusha
cmp
push
shll
and
jmp
loope
in
add
arpl
test
mov
sub
loopne
sarb
ja
jg
push
sahf
sub
inc
push
sbb
lods
scas
popa
shrl
call
or
lea
out
mov
icebp
pop
and
out
ret
dec
stos
xor
and
je
mov
negb
pop
sub
add
das
in
xchg
call
mov
lds
rol
xchg
gs
mov
jns
cmp
pop
add
addr16
std
mov
cmp
dec
sbb
lea
xorl
mov
lods
push
lret
ret
test
jg
sbb
daa
stc
pop
ret
adc
add
std
sbb
stc
out
aaa
frstor
and
imul
imul
movsl
in
add
pop
iret
hlt
sub
jl
lds
stc
xchg
cld
cmpsl
and
dec
nop
fidivrl
inc
adc
pop
jne
or
and
aam
jmp
bound
cltd
mov
fcmovnu
add
pop
mov
ret
adc
jbe
in
mov
popf
mov
lods
test
xor
adc
pop
pop
enter
call
sbb
sbb
sub
jecxz
push
int3
inc
ss
stc
inc
mov
jno
fs
bsf
jbe
mov
scas
sbb
stos
sbb
ficoml
jl
das
sub
inc
pop
dec
popa
jbe
js
in
push
push
xor
int
bnd
insb
inc
jp
and
mov
fnstsw
iret
push
cmp
mov
aas
or
or
dec
cmpsb
fisubl
cmp
ds
mov
sbb
scas
test
and
rorb
sbb
subl
xor
iret
jb
int3
or
out
inc
in
and
pop
mov
xor
xor
mov
lea
sbb
stc
mov
testl
in
mov
call
jnp
inc
lahf
mov
jmp
mov
dec
inc
pop
js
cmpsb
jno
arpl
mov
cltd
push
leave
push
aad
arpl
ja
adcl
cmp
std
es
loop
lock
mov
add
cmpsl
insb
push
mov
lock
xor
addl
test
xchg
mov
add
and
mov
push
xchg
adc
dec
push
iret
xchg
addb
push
mov
mov
scas
xorl
xor
pop
add
rolb
jae
dec
push
cs
repz
scas
jbe
lods
int
fwait
into
aam
outsb
mov
fisubs
or
xlat
popl
xchg
adc
dec
ret
sahf
mov
flds
add
xor
xchg
jmp
sbb
sbb
inc
xchg
dec
iret
lea
mov
push
popa
je
xchg
sub
mov
mov
push
add
in
push
adc
leave
ret
adc
cwtl
sbb
xor
adc
into
into
lea
sti
out
push
xchg
iret
xor
pop
xor
sub
xchg
jnp
mov
test
dec
push
jae
xchg
fldl
cmp
in
mov
jecxz
or
sub
xor
lret
cld
cmpsl
and
icebp
dec
clc
lahf
add
xrelease
adc
fs
out
rclb
and
xchg
lahf
jnp
test
jecxz
loopne
aam
add
popf
call
sub
and
push
leave
xchg
mov
sub
add
lret
mov
mov
lea
lods
add
xor
movsl
outsl
mov
lret
bnd
hlt
lret
loop
pusha
iret
xchg
imul
call
xor
adc
mov
fstp
call
sbb
mov
pop
xchg
fsubrl
sub
ss
shrb
lock
hlt
xchg
push
mov
jecxz
outsb
push
mov
test
xacquire
loop
sbb
mov
shll
pop
mov
das
dec
pushf
push
sbb
scas
jne
int
iret
scas
push
ljmp
fisubrl
xchg
adc
xlat
jp
push
mov
loopne
hlt
cmp
push
dec
test
lcall
jae
dec
push
lcall
inc
inc
push
pop
jo
cmp
repnz
fisubrl
dec
in
sub
lea
loope
inc
out
mov
ret
adc
popa
fcomi
jle
push
outsl
xchg
push
sbb
insb
add
pop
aaa
jne
mov
sbb
repnz
shl
sub
and
add
push
jmp
cwtl
rol
iret
fsubrs
in
add
xchg
sub
mov
sbb
insb
xor
clc
lock
scas
jecxz
xchg
stos
jbe
mov
sbb
in
sbb
pop
dec
popa
mov
inc
mov
pop
inc
js
push
outsl
stc
faddp
lea
into
stos
test
into
sbb
lods
mov
mov
mov
loopne
sahf
mov
std
push
xchg
pop
fsts
test
lea
sub
stos
icebp
mov
shll
cwtl
adc
dec
sub
pop
mov
dec
shll
in
push
pop
out
rolb
lods
adc
or
mov
je
xor
int
cmp
imul
mov
ljmpw
push
fs
jnp
imul
push
mov
mov
jb
aam
fsts
outsl
cs
dec
mov
mov
lock
pop
outsb
mov
fisubl
ljmp
in
fscale
repz
cmp
cmp
dec
inc
mov
jmp
scas
mov
ret
data16
sbb
jl
ljmp
pop
push
jp
es
insb
mov
dec
xchg
add
add
push
jo
lock
inc
push
dec
jae
scas
scas
jbe
psraw
nop
sbb
mov
jo
data16
daa
mov
jae
adc
insl
je
mov
xor
push
add
inc
movsl
mov
out
pop
push
pop
scas
fiadds
dec
xchg
inc
insb
xchg
mov
jae
int3
nop
sub
jnp
js
push
icebp
fiaddl
lea
adc
xchg
mov
adc
xor
add
and
adcb
inc
jnp
femms
sbb
xor
mov
xchg
jle
imul
push
pop
andl
sbb
aaa
dec
leave
loope
arpl
jae
adc
shlb
mov
test
lea
jecxz
push
sbb
adc
pop
aaa
scas
sub
insb
adc
insl
mov
daa
test
addb
push
stos
mov
push
xchg
xchg
pop
adc
pop
fcoml
fcomps
movb
fdivrl
mov
add
mov
arpl
stos
add
test
pop
or
lahf
gs
jmp
push
jmp
arpl
sub
fstpl
out
inc
inc
xchg
jae
xor
dec
pop
adc
pop
arpl
ret
shr
and
imulb
shrl
and
ljmp
xor
add
add
das
test
mov
xchg
mov
pop
dec
sahf
adc
adcl
pop
loopne
cmp
sahf
imul
mov
and
imul
add
xor
dec
data16
lds
push
jp
in
lahf
pushf
test
out
cmp
jo
push
dec
xor
mov
pop
sub
inc
std
mov
arpl
in
in
mov
mov
jp
jbe
sub
pop
mov
fwait
xor
xchg
in
pop
jmp
clc
jae
mov
imul
mov
cmp
xor
rcll
ja
pop
movl
das
add
sbb
flds
mov
xchg
mov
arpl
lret
out
in
aas
sahf
adc
sbb
sub
mov
enter
test
push
enter
mov
mov
or
pop
pop
adcl
imul
clc
es
push
pop
loopne
sub
ror
cli
cmp
adc
push
iret
cld
sub
push
sbb
insl
ja
xchg
cmpsb
aad
ficoml
dec
add
dec
jno
fbstp
push
aam
mov
cld
aad
pusha
and
mov
inc
dec
lret
pusha
arpl
out
test
aad
in
sbb
fcomps
adc
sbb
inc
js
mov
jge
xor
dec
mov
out
sbb
icebp
insb
mov
das
inc
mov
lods
adc
xlat
mov
jecxz
sbb
jae
xchg
iret
shrl
jp
jp
xchg
dec
xchg
sbb
in
stc
mov
dec
add
sbbl
sbb
xchg
roll
add
std
scas
or
enter
push
out
mov
jno
scas
or
call
push
in
xor
cmp
popa
daa
sub
jae
jo
dec
adc
sarb
pop
rorb
add
loop
cmpl
or
mov
xchg
xchg
repnz
lret
inc
sti
mov
cmp
dec
outsl
out
in
sbb
sub
inc
gs
in
cmp
popf
out
push
jb
jb
movsb
fmull
xchg
movsb
push
scas
sub
mov
push
pusha
test
sub
dec
dec
push
loopne
xor
lret
mov
in
fsts
pop
mov
adc
cmp
xchg
xchg
cltd
out
sbbb
add
cmp
fildll
push
sbb
hlt
iret
push
and
out
lret
pop
daa
add
sbb
xchg
cmpsl
sahf
mov
jno
jb
ret
int
aam
xchg
dec
adc
stos
or
push
mov
dec
mov
ja
adc
shlb
cwtl
into
cmp
pop
xor
sbb
cmp
fstpt
pop
xor
orl
mov
inc
imul
add
jmp
scas
jecxz
in
pop
sti
aas
sbb
das
adc
fnstenv
test
mov
cli
out
push
outsl
sbb
iret
pop
and
test
shlb
aas
pop
cmp
mov
enter
js
xchg
xor
js
ljmp
inc
popf
inc
jecxz
scas
jae
mov
mov
cmc
fwait
sub
push
stos
fucomp
out
das
inc
insb
add
pop
or
push
lods
cmp
or
stc
push
pop
repnz
cmp
inc
lods
xchg
negb
sub
mov
lods
jp
mov
cli
popf
aam
jg
in
div
sbbb
sub
aad
fs
or
repnz
mov
loopne
and
or
and
ret
lods
xchg
mov
or
loope
mov
or
xchg
inc
push
jge
xor
lock
jecxz
test
shlb
repz
add
bound
add
sbb
in
dec
push
sbb
out
sub
les
cmp
mov
mov
mov
or
out
push
and
out
jg
movsl
loop
testl
lock
fnstsw
jne
popl
xchg
push
pop
loop
negb
in
xor
cmpsl
sbb
pop
mov
add
in
push
pop
dec
pop
in
nop
mov
sbb
insl
push
pushf
jne
mov
popa
rcll
mov
mov
mov
pop
pop
mov
pop
cmp
loop
bound
mov
cmpsb
sub
mov
faddl
and
es
push
cmp
lods
mov
into
pop
lret
mov
inc
add
shll
jno
cmp
mov
jecxz
outsl
shr
sbb
jb
mov
test
dec
sub
shlb
push
rcrb
pop
mov
pusha
scas
clc
adc
mov
sbb
scas
ja
test
jp
or
dec
sub
loopne
nop
xchg
popa
adc
enter
mov
les
daa
stc
jmp
sbb
xor
jnp
enter
decl
cmc
daa
jl
ljmp
testb
fcoml
cmpsl
cmc
lds
dec
pop
push
adc
popf
roll
icebp
adc
cmp
xorl
fs
bound
test
arpl
jl
push
and
dec
jmp
mov
insl
mov
mov
in
popa
lcall
ret
scas
jp
or
add
addb
and
adc
clc
int
sub
push
and
orl
fwait
lcall
mov
jecxz
inc
mov
daa
clc
fcoms
inc
loop
pusha
popf
rolb
mov
mov
loopne
movl
testb
xchg
sti
sub
outsl
mov
aam
xchg
loop
lret
mov
mov
jnp
mov
mov
inc
push
mov
adc
add
fsubrs
fisubrl
imul
js
mov
jecxz
cmp
sbb
ds
ss
inc
mov
dec
xchg
rcrb
jl
imul
insl
or
lds
cmpsl
in
cmc
mov
je
pop
testb
sbb
jbe
push
xchg
xor
lahf
fcomip
loopne
jg
cmp
sbb
aas
pop
push
push
cmp
sahf
cmp
loop
ss
cmp
scas
jbe
jmp
jns
lods
dec
xchg
sub
add
xor
mov
dec
fidivl
cli
movsb
xor
sahf
inc
enter
into
int3
fisttpl
pop
jae
fcmove
aad
mov
pop
ss
notb
push
scas
pop
cmp
mov
mov
insb
ret
ret
mov
or
sbb
xor
xchg
inc
adc
scas
mov
mov
imul
dec
dec
pop
fcom
push
sub
out
pop
sbb
mov
call
aaa
inc
xor
sub
loop
add
and
xor
pop
xor
or
push
add
rclb
pop
mov
xor
inc
pop
mov
lret
sub
pushf
pushf
pop
pop
mov
push
movsl
pop
and
add
loop
les
js
pop
jg
iret
mov
ret
push
sbb
aam
mov
mov
in
mov
enter
daa
inc
test
fwait
xor
cmp
jno
jbe
dec
outsb
sub
mov
mov
xchg
bound
mov
or
mov
mov
mov
xchg
jb
andl
ljmp
jle
sti
xchg
daa
push
leave
dec
daa
pop
sbb
push
jns
out
sysexit
or
pop
stc
cltd
mov
and
icebp
inc
into
mov
or
xor
imul
das
rcr
mov
ret
cmpb
lods
addl
movntps
xchg
adc
pop
outsb
lcall
xchg
cmp
push
add
pushf
inc
fimull
fsubs
push
shrb
xchg
arpl
xchg
cmp
leave
fs
mov
xchg
pop
arpl
mov
xor
fdivrp
xchg
rcrl
fidivl
push
and
pop
add
and
pop
mov
fwait
negb
dec
inc
cld
and
out
je
push
loopne
aas
add
push
mov
push
add
mov
mov
adc
sub
addl
in
arpl
or
xchg
mov
jmp
sub
out
je
mov
mov
inc
pusha
scas
addl
jno
decb
test
popa
cmp
dec
inc
xchg
xchg
mov
mov
mov
pop
stos
or
in
mov
sub
pop
inc
hlt
xchg
mov
xor
inc
xchg
push
lcall
negb
icebp
fcomps
leave
push
xlat
xchg
lea
pusha
std
cmpsb
ret
sbb
addr16
imul
add
dec
fwait
and
stc
mov
xor
icebp
sub
jnp
cmp
xlat
insl
xlat
std
mov
inc
xchg
mov
adc
lcall
mov
hlt
mov
mov
xrstor
jo
hlt
jo
scas
mov
mov
jne
add
xrelease
push
enter
adc
mov
and
fcmovu
push
stos
mov
insl
mov
cmp
lcall
xchg
faddl
mov
sti
repnz
mov
pop
add
mov
lock
inc
mov
cmpsb
ja
js
xorb
mov
je
cli
sbbl
dec
dec
cmpsl
mov
popw
inc
dec
pop
gs
shl
iret
fidivs
sbb
inc
popa
aas
pop
clc
xlat
insl
mov
push
sbb
movsl
call
mov
push
xor
and
dec
lods
or
or
sub
dec
jecxz
or
fmuls
lock
xchg
mov
in
mov
clc
pusha
sarb
mov
jmp
adc
xchg
add
jno
rcll
dec
adc
or
aaa
push
lods
mov
push
jae
pop
ljmp
fucomp
cvtps2pd
lods
cmp
dec
test
movsl
in
movsl
push
fnstenv
inc
dec
dec
push
out
in
aam
fimuls
mov
sarb
or
mov
fists
and
aad
dec
popa
std
mov
test
filds
pop
nop
dec
fnstsw
jo
adc
es
dec
sub
lcall
sti
push
ret
push
push
sub
mov
mov
test
xor
movsl
outsl
dec
adc
out
imul
data16
mov
push
jae
sbb
xchg
adc
xchg
sbb
xchg
inc
push
cwtl
mov
cmp
pop
xchg
add
das
inc
push
cmc
pop
adc
mov
mov
or
mov
adc
sbb
jge
sbbb
xor
cmp
sarb
std
mov
and
push
out
lds
rcrl
jne
push
mov
xor
das
leave
add
jmp
add
xchg
mov
and
mov
bound
jnp
mov
fldpi
inc
fbld
mov
outsl
xchg
outsb
cmpsb
lret
es
dec
rorl
and
pop
lock
pop
xchg
int
es
pop
test
push
bound
lods
push
sarb
aas
sbb
jmp
cmpsl
cmp
ja
test
xchg
xlat
pusha
xchg
pusha
xor
subl
mov
fidivs
loopne
push
mov
addr16
mov
out
ret
out
mov
ds
pop
stos
shl
xchg
stos
cs
pop
inc
or
mov
pop
mov
sub
jnp
mov
les
and
dec
into
dec
in
sub
push
push
and
push
iret
ss
dec
add
loope
lcall
out
das
dec
ljmp
stos
pusha
sub
jmp
sbb
mov
add
mov
outsl
idivb
sbb
mov
fsubrs
mov
sar
sub
dec
push
jb
aam
jp
bound
dec
xor
lds
pusha
filds
mov
sub
fcoml
push
in
xor
jg
iret
outsb
lret
cmp
pop
add
cwtl
pop
and
add
leave
div
icebp
dec
aaa
lds
jl
sbb
aaa
jge
std
dec
test
sub
ficomps
pop
stos
fisttpll
fcmovu
jns
add
aaa
pop
and
fidivrs
and
rolb
nop
add
cmp
fsubrp
aad
mull
xchg
inc
pop
popf
cmc
adc
movsb
iret
cmpb
mov
psrad
sbb
rclb
mov
dec
mov
lock
dec
popf
out
inc
jo
or
lds
mov
jmp
cli
arpl
imul
pop
cmc
nop
xor
ficompl
dec
add
scas
imul
stc
data16
addr16
xchg
aaa
jg
in
pop
add
jo
or
and
ds
or
loop
enter
pushf
push
inc
push
fisttps
loope
scas
adc
sub
out
xchg
xorl
mov
cmp
fsubr
cs
fsubr
ret
inc
dec
mov
jne
dec
jb
out
sub
mov
or
lahf
ja
mov
imul
js
ret
cmp
rcl
inc
stc
jnp
adc
pop
sub
lds
es
test
push
das
popf
enter
cmp
fcoml
icebp
test
loope
jle
scas
jnp
xor
mov
out
add
mov
mov
push
inc
pusha
test
xor
lret
jnp
lods
sbb
divl
dec
test
ffree
cli
hlt
lret
jb
sub
jno
push
adc
das
cli
push
lret
dec
ret
push
repnz
push
inc
cmp
je
or
in
and
xor
into
push
lahf
mov
popa
int
lret
test
in
cmpsb
fucomip
cwtl
imul
aad
dec
and
pusha
movsb
sub
adc
push
pop
les
clc
es
mov
std
mov
aad
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
ds
cli
adc
fstl
call
orl
cmp
and
pop
mov
sbb
inc
inc
adc
mov
in
outsl
xor
andb
xchg
adcb
ret
mov
pop
or
imul
jne
adc
mov
es
inc
imul
call
in
sub
pusha
shlb
fs
pop
fnsave
cs
les
jecxz
lock
rcll
lret
xor
fwait
dec
outsb
std
pop
arpl
sahf
push
dec
inc
fnstsw
mov
sbb
gs
pop
adc
push
lock
jo
pop
cltd
mov
dec
sbb
fstps
mov
dec
pop
es
je
inc
mov
fs
sub
in
cmp
xchg
repz
xor
adc
stos
push
out
cmpsb
insb
xchg
mov
cwtl
sbb
sbb
or
inc
xor
fs
jmp
dec
in
push
xchg
std
fstl
and
fs
std
pop
stc
in
popf
mov
aam
inc
inc
or
aad
xchg
loopne
iret
stc
dec
test
mov
fwait
dec
push
cmp
mov
push
mov
icebp
popa
xlat
mov
mov
lods
mov
sar
mov
fptan
out
mov
int3
inc
inc
and
adc
sub
int3
cltd
sub
orl
jg
rol
out
cmp
sahf
or
add
les
dec
jecxz
pop
sbb
das
in
adc
pushf
mov
testl
sbb
add
push
out
jecxz
mov
adc
fdiv
divl
mov
das
mov
arpl
dec
mov
aas
sti
xor
mov
inc
jmp
dec
icebp
out
movsl
cs
std
xor
jp
add
cmp
ret
mov
mov
push
push
in
pop
roll
mov
dec
xchg
gs
cwtl
sub
dec
dec
push
inc
xor
pusha
xorl
sbb
push
mov
aaa
pushf
pop
inc
pop
mov
dec
mov
mov
inc
pop
adcb
pushf
rol
cmp
mov
and
xchg
mov
xor
out
bound
mov
inc
push
adc
out
xchg
jb
push
jbe
adc
push
popf
push
push
and
jg
cs
sub
popa
mulb
push
iret
imul
lds
mov
popl
jbe
aaa
movsl
sub
push
mov
clc
jbe
shlb
flds
push
pop
icebp
push
lock
int3
push
data16
pop
iret
cmp
adc
sub
pop
xor
mov
cmpsl
sub
scas
rcll
push
add
add
add
ja
sbb
sarb
sbb
cli
push
xor
push
mov
xchg
clc
jp
paddusb
jg
sahf
mov
jns
testb
cwtl
mov
insb
sub
data16
outsb
cwtl
cs
jno
adc
test
mov
jo
jmp
call
mov
fstl
es
out
or
xlat
or
addl
and
xchg
push
pop
sbb
pop
cmp
je
add
jae
in
rorb
int3
lcall
mov
popf
test
out
adc
sbb
mov
cmp
gs
push
enter
or
add
lret
hlt
push
flds
sub
dec
pop
and
sub
cmp
loope
lret
sub
insb
push
std
inc
cltd
lret
fbld
movb
testb
inc
inc
das
int3
imulb
pop
aad
test
into
xor
mov
pushf
std
push
leavew
cltd
jl
jge
cmp
scas
jecxz
mov
add
xchg
xchg
in
add
daa
mov
xchg
test
and
adc
fildll
mov
cli
sub
mov
shr
cmpsb
cmp
sub
rcll
loope
jle
mov
cmpsb
iret
cmp
xor
or
adc
mov
jo
fdivs
sbb
iret
aaa
fsub
in
bound
mov
mov
mov
mov
add
lods
popa
sarb
mov
inc
sub
aaa
ss
jecxz
xor
out
sahf
jle
inc
int3
jmp
jno
jl
das
or
insb
sub
jle
lret
mov
iret
pop
sub
sbb
dec
cwtl
sub
cmp
pop
lcall
pop
push
fcoml
repnz
fdivr
cmpsl
addr16
fimull
dec
inc
adc
sub
in
jns
dec
cld
sub
fcompl
js
ss
add
insl
adc
fcomps
lods
sbb
nop
inc
insb
fst
gs
fimull
fs
add
lret
push
mov
lea
xlat
out
clc
fnsave
pop
test
es
push
sub
cwtl
mov
push
adc
incl
adcb
sbb
jbe
pop
shl
out
sbb
stc
out
sbb
loop
lds
test
pop
lea
andl
mov
and
scas
mov
mov
pop
mov
jl
dec
push
jae
adc
xchg
shll
fadds
in
mov
clc
ror
in
shl
sub
fucomp
add
cmp
in
nop
loopne
outsl
cmc
adc
xchg
adc
loope
rcr
repz
xchg
xorb
testb
stos
mov
pop
push
pop
xchg
rorl
loope
bound
daa
out
ja
movsl
out
mov
cmp
nop
xchg
sub
outsl
mov
out
sub
and
cmp
jae
cmp
and
and
jge
faddl
cli
xchg
sbb
ja
and
sub
cmp
cmc
xchg
push
into
add
sub
jmp
cli
lret
ret
div
fsubrl
mov
adc
dec
jg
aas
and
loopne
mov
xchg
scas
ljmp
cmc
cmp
jne
jo
mov
popf
push
inc
and
pop
imul
insl
adcb
cmp
shll
in
mov
or
je
shlb
and
hlt
js
lock
dec
inc
mov
int3
pop
lds
cmp
dec
jno
add
mov
mov
cmpsl
ret
iret
loope
pop
lods
insb
mov
mov
ffree
movl
arpl
cmc
mov
xchg
adc
or
push
lea
jge
mov
mov
mov
fimull
lods
jae
sbb
xor
dec
aaa
pop
cmovs
fnstenv
out
cwtl
clc
mov
repnz
mov
loope
mov
adc
mov
popf
imul
sarl
imul
ss
mov
jbe
xchg
xlat
xchg
fldln2
mov
pop
lcall
scas
sbbb
gs
and
stc
dec
mov
xor
add
jge
out
mov
shll
fisubrs
or
mov
mov
movsb
sbb
nop
dec
push
cltd
incb
insl
nop
cltd
fdivrl
sbb
push
insb
aad
loop
scas
out
xchg
cs
lods
mov
cmp
sbb
push
nop
mov
int3
add
subl
outsb
negb
out
mov
data16
insb
add
and
aas
aas
std
daa
divl
mov
pop
js
push
push
imul
fidivs
nop
clc
mov
mov
ds
cmc
sbb
fisttpll
scas
cli
pop
movsb
mov
sub
lods
shrb
and
fbld
add
out
and
sbb
fsubrs
aaa
inc
pmulhuw
mov
out
mov
in
or
dec
xor
cmpl
imul
mov
cmp
sahf
fwait
mov
xchg
dec
in
das
cs
pushf
mov
mov
and
xor
frstor
mov
fldenv
test
test
movsb
inc
sub
test
mov
cs
xchg
fcmovnu
mov
xchg
push
mov
push
mov
xchg
sarl
aad
frstor
adc
jle
in
mov
adc
ror
ljmp
pop
into
pop
and
sbb
popf
in
repz
mov
cmp
mov
sbb
fisttps
and
out
dec
test
add
cltd
neg
cli
ret
lret
cwtl
ret
in
cmp
int
cli
ss
ss
mov
imul
lahf
call
and
outsb
lods
push
push
das
fdiv
inc
dec
cmp
or
mov
pop
push
fildll
add
cmpsb
insb
mov
xor
ja
pop
or
filds
xor
test
dec
stc
scas
rcrb
mov
push
testl
test
frstor
mov
add
add
std
mov
jo
sub
movsb
aas
mov
push
cmp
push
mov
inc
xor
rcrb
cmp
cmp
mov
aam
jns
rorb
lcall
sub
pop
push
aaa
jmp
jbe
mov
test
mov
xchg
pop
mov
pop
mov
push
test
pop
cltd
mov
scas
inc
inc
jp
or
out
mov
sub
lret
in
or
repnz
push
xchg
js
test
dec
inc
insb
fisttpl
xchg
mov
mov
or
stos
nop
enter
movsl
xor
call
ret
sbb
inc
push
fiadds
xchg
push
bound
daa
adc
adc
in
and
lcall
leave
jp
cmpsl
mov
fst
test
push
icebp
mov
cli
loope
mov
call
push
call
jne
dec
popf
xchg
int
rclb
fldt
movsb
imul
and
push
cmp
mov
ficoms
push
dec
jl
jge
push
xchg
xlat
sbb
sbb
xchg
in
outsb
sbb
daa
push
mov
jg
mov
mov
movl
sub
movsl
mov
ds
inc
in
les
fstp
test
and
rcll
lods
jns
pop
xorb
sbb
ret
cli
pop
cltd
mov
out
fisttpll
jle
ret
push
call
ljmp
mov
lcall
addr16
test
scas
shll
xorb
outsl
cmp
pop
gs
xchg
adc
xchg
xchg
mov
int3
js
pop
push
xchg
mov
mov
inc
aas
insb
sti
inc
aas
stc
das
adc
inc
mov
jnp
adc
sub
mov
call
out
popfw
jnp
cli
loop
push
push
outsb
loop
divb
adcb
xchg
enter
or
jne
add
xchg
cmp
test
xor
std
mov
pcmpgtb
mov
mov
xlat
dec
insl
in
nop
sti
xor
cmp
insl
or
lret
and
loopne
das
xchg
outsl
mov
es
adc
loopne
jge
cmpsl
ss
bound
xchg
mov
popa
fists
outsl
mov
movl
dec
mov
adc
bnd
ret
pop
mov
xchg
xchg
test
sbb
mov
test
jecxz
mov
cmpsb
xor
jno
mov
push
lahf
inc
mov
fcom
shrl
inc
repz
in
daa
or
mov
xor
jnp
cmpsb
pop
cli
rcrl
lock
fsubr
jle
cltd
push
mov
push
lea
inc
cwtl
add
cmc
enter
mov
add
in
shll
fs
fwait
lea
cltd
mov
cli
data16
pop
mov
lret
lea
movsb
xor
dec
jne
test
dec
mov
fisubl
inc
push
mov
lcall
je
and
rcrb
pop
and
mov
push
xchg
and
outsb
jle
outsl
jp
adc
insl
mov
and
shr
sahf
mov
call
mov
stc
mov
cmc
and
mulb
and
pop
pop
jnp
mov
in
inc
call
mov
fisubl
js
sub
mov
cld
clc
xchg
cwtl
mov
or
add
lods
sbb
add
mov
loop
imul
cmpb
shlb
lods
cltd
mov
ja
mov
bound
xor
jecxz
clc
xchg
out
in
outsl
push
jmp
push
mov
jmp
cmp
mov
jbe
inc
stos
pusha
jns
add
mov
ja
adc
mov
push
fcom
lods
pop
mov
push
loope
push
sbb
mov
push
or
arpl
call
mov
test
rorl
dec
clc
pop
add
outsb
sbb
ljmp
bound
adc
mov
or
test
mull
and
movsb
sbb
mov
xchg
fcoml
lock
inc
mov
repnz
movsb
inc
into
jg
incl
into
rcr
mov
xor
addr16
jno
lds
jb
shrb
shl
sti
push
comiss
mov
lds
sbbl
mov
adc
jl
imul
jle
push
push
push
add
jb
adc
shll
mov
or
mov
shll
int3
int
ret
rcll
xor
mov
fs
dec
sbb
jecxz
pop
scas
jmp
mov
loope
sbb
divb
or
dec
xchg
xor
and
popf
pop
fwait
mov
jmp
enter
cmc
and
sbb
inc
pop
imul
lret
pop
jmp
pushf
push
into
andb
xchg
dec
push
jbe
mov
into
push
sub
leave
xor
adc
outsb
scas
mov
insb
fmulp
mov
sbb
push
mov
or
ret
and
cmp
stos
scas
jle
push
push
into
ficompl
popf
ljmp
in
inc
mov
int3
outsb
jnp
xchg
dec
and
mov
sub
adc
lret
mov
ljmp
add
push
jl
loop,pt
repnz
imul
push
iret
daa
mov
loop
push
arpl
add
ret
mov
int3
mov
dec
inc
mov
push
imull
cmpsb
nop
mov
or
pop
push
roll
imul
or
imul
iret
mov
fcoms
into
out
lret
aam
movsb
inc
jae
inc
lock
sbb
push
cmp
outsl
and
sbb
or
add
mov
movsb
test
mov
ss
rorl
leave
jb
mov
mov
ds
arpl
arpl
fnstsw
jae
sub
jge
jo
repnz
addr16
xor
pop
adc
pop
or
mov
les
cmp
xor
lods
mov
and
iret
sbb
inc
push
movsb
sub
andb
push
sti
add
pop
dec
lds
xchg
mov
cmpsb
push
pusha
push
add
push
jb
lret
das
icebp
testb
lahf
lret
stos
mov
push
shll
xor
mov
pop
adc
jo
scas
inc
lea
adc
data16
inc
aam
cmp
scas
dec
lods
aas
dec
cltd
xor
fldenv
popf
pop
jl
hlt
fs
xchg
adcl
adc
cmp
xorb
es
sbb
jae
in
ss
pop
in
add
xchg
mov
data16
cmp
sbb
out
push
cmpsb
lds
shrb
punpckhdq
cmc
dec
cmp
add
mov
add
fwait
dec
dec
std
in
aas
jmp
insb
xor
cmc
mov
pop
mov
pop
mov
cmp
daa
mov
ss
sub
in
xchg
mov
loopne
pop
pop
mov
mov
lahf
lds
sbb
jle
in
sbb
loop
pop
aaa
in
repnz
push
inc
cld
arpl
cmp
jge
jmp
fcom
sub
iret
jnp
pop
mov
mov
rclb
mov
jae
dec
insb
and
add
lret
cmc
push
ds
mov
jge
test
lds
cmc
aas
sbb
and
mov
into
fwait
repz
fimull
negb
ficoml
movsb
rorb
repnz
rol
lock
arpl
test
daa
cmp
cmp
in
ret
dec
stos
cmp
inc
rol
pop
rclb
mov
lret
and
negb
loope
mov
shrl
daa
into
inc
enter
sub
jo
movsb
sbb
push
sti
ds
add
fisttpl
mov
aas
shlb
mov
push
outsb
mov
orb
clc
dec
out
lock
outsl
push
fistl
sbb
jg
sbb
dec
rcl
jae
js
and
sub
enter
push
mov
and
das
cs
jl
cwtl
mov
jp
rorb
mov
cmp
lcall
or
adc
rcrb
cmp
fmul
mov
popa
mov
pop
inc
imul
adc
test
out
inc
mov
out
mov
mov
outsb
jno
adcl
out
cmc
stc
mov
push
outsb
mov
faddp
icebp
roll
sbb
inc
fisubrs
push
popa
push
xchg
jmp
leave
xchg
popa
fs
int3
push
mov
fwait
xor
pop
xlat
out
sbb
and
add
jnp
je
rclb
in
xlat
mov
bound
icebp
in
outsb
pusha
cmc
ds
xchg
dec
fstpl
jmp
out
lret
int
push
xor
xchg
pop
fcmove
fldl2t
or
arpl
add
in
xchg
popf
adc
leave
adc
cmc
clc
pop
dec
mov
orb
mov
add
mov
jle
ret
xor
sbb
mov
in
fnstcw
cmp
and
adc
push
or
cmp
popa
mov
xor
xor
xlat
inc
popf
imul
movsl
adc
xchg
aaa
les
inc
cmc
dec
push
xchg
stos
add
divb
and
icebp
inc
sbb
xor
mov
and
insl
jne
js
lahf
sub
mov
cmpsb
sub
fldl
fstps
mov
xor
icebp
popa
push
adc
cmp
push
or
jl
cld
or
pop
shl
test
sbb
fdivr
leave
loop
imul
sbb
movsb
jmp
repnz
loop
jecxz
pushf
jmp
outsl
dec
cmp
mov
clc
adc
dec
inc
lds
push
jnp
outsl
dec
pop
jbe
loopne
scas
dec
sbb
mov
mov
mov
lret
cmp
jp
pop
mov
pop
int3
not
mov
dec
sbb
outsb
das
mov
std
or
cli
mov
and
xor
push
sti
dec
mov
out
adc
cmp
adc
cmp
pushl
and
popf
sti
jno
lret
sbbl
inc
sahf
stos
mov
ret
ret
push
out
pop
and
dec
outsb
mov
xchg
lret
inc
sub
and
jb
shlb
or
ljmp
jle
lret
dec
fisttpl
xlat
xor
xor
cmp
mov
ficompl
cmp
and
xchg
cmp
sti
into
das
mov
int
or
jns
push
cmp
mov
cmp
mov
adc
test
xlat
sbb
ss
sbb
xlat
add
ds
mov
enter
repnz
sub
lea
in
idivb
popa
dec
lods
adc
inc
sbb
lea
push
loope
dec
mov
pop
pop
or
int
jmp
pop
jae
adc
arpl
out
push
pop
or
stos
sbb
lods
xor
movsb
cmp
xchg
movsb
and
lret
push
cmp
mov
lods
add
fldcw
fsubrl
sbbb
dec
cmp
or
int3
idivl
les
adc
jo
and
in
cmp
push
dec
les
insb
aas
fstpl
incl
lods
push
cmp
cmp
in
insl
fs
sub
insl
and
lcall
xchg
push
mov
lahf
mov
test
or
and
mov
add
jl
add
jb
xor
nop
xor
aam
fidivl
push
ja
fs
and
inc
jecxz
push
adc
pop
add
je
mov
inc
xor
mov
or
popa
push
in
jmp
push
outsl
getsec
pushf
cmp
rcrb
movsb
ffree
pop
mov
sbb
add
jmp
and
ljmp
inc
das
adcb
sti
cld
pop
mov
shrl
pop
xchg
stc
ss
sbb
popf
iret
xor
lods
push
sbb
adc
mov
xlat
dec
and
pop
aad
js
lcall
push
xor
and
lcall
icebp
ss
adc
xchg
cmp
pushf
jmp
adc
negb
shlb
dec
jo
ljmp
out
in
push
loope
shll
aam
fs
dec
les
out
dec
out
mov
in
adc
jno
mov
jle
dec
mov
mov
adc
test
push
jno
xchg
ds
pop
add
pop
pushf
aas
cltd
xlat
pop
ss
mov
out
push
push
cltd
cmp
jnp
sbb
out
sbb
dec
xchg
ljmp
fldt
add
pop
inc
in
pop
sbb
mov
xor
jp
sub
xor
sub
sbb
add
xor
andb
imul
in
sahf
mov
loop
jmp
and
daa
ljmp
inc
push
lds
pop
out
iret
sbb
loope
fbstp
in
out
inc
mov
and
or
xor
sub
sbb
xor
fimuls
rep
shll
lods
xor
outsb
stc
mov
xor
mov
imul
pop
jge
and
xchg
cmc
xor
cmpsl
or
mov
mov
dec
cmp
adcl
inc
lahf
jge
push
orl
mov
add
ret
or
sbb
adc
mov
loopne
movsl
imul
mov
dec
jp
mov
rcrl
mov
mov
cltd
pushf
xor
into
lods
fnstenv
outsb
xor
test
cmpsl
fisubs
mov
or
cmpsb
mov
aas
addl
add
pop
imul
pop
mov
in
jmp
pop
dec
adc
push
cwtl
mov
insb
movsl
pusha
in
push
xchg
cmp
fcompl
sbb
imul
lcall
std
jmp
fsubr
push
xor
jp
or
or
jo
insl
or
cmpsl
adc
xor
aas
sub
mov
mov
insb
mov
mov
call
xchg
in
lret
xchg
bound
jbe
cmp
or
sbb
push
bound
cs
into
pop
js
jl
push
test
xor
jl
ljmp
and
sbb
iret
test
and
aam
mov
enter
dec
sub
xor
pop
test
lods
cld
nop
inc
js
fsubs
dec
cmpsl
pop
fisubl
popa
lea
add
fists
push
lret
cmpsl
dec
mov
pop
adc
push
adc
clc
lcall
mov
and
test
mov
mov
push
cmp
pusha
mov
lahf
nop
sbb
xchg
shrl
daa
cmp
push
mov
mov
cwtl
std
mov
xchg
and
fisubrs
xchg
bound
jge
sub
fiaddl
sub
test
jecxz
push
mov
inc
xor
iret
xchg
pop
xor
pop
std
mov
dec
test
xchg
xor
xchg
inc
movsl
mov
or
sbb
es
test
lock
push
adc
sub
pop
cmp
icebp
in
sbb
lods
call
vorpd
iret
xor
fists
mov
les
push
loop
sbb
cld
adc
test
lods
cmp
shl
das
pop
je
sub
push
jmp
insb
pop
iret
pusha
mov
dec
xchg
arpl
popa
fwait
mov
stos
imul
and
ficomps
aam
xor
fwait
jbe
mov
dec
mov
daa
cs
adc
mov
out
in
jmp
jecxz
imul
lods
fldcw
xor
popa
clc
push
ret
cmp
ds
lahf
sti
ljmp
rclb
push
loop
lret
push
add
cmp
pop
sbb
int
mov
and
sbb
dec
sub
mov
jp
call
xor
pop
pop
movsb
cmpsl
stos
mov
ljmp
or
adc
mov
popa
push
and
add
jge
out
leave
lahf
loopne
int3
jae
jb
mov
nop
cmp
cwtl
mov
out
push
pop
cmp
ret
insl
sub
scas
lods
xchg
fistpl
mov
fcoms
jge
push
ja
mov
xchg
imul
jmp
cmpsl
loopne
in
test
push
mov
sub
pushf
cmc
fwait
loopne
iret
push
lods
test
or
ret
cmp
pop
cld
cmp
mov
ja
add
inc
int
and
sub
pop
push
mov
mov
xchg
repz
pop
push
cmp
mov
cld
mov
xor
sti
sahf
xchg
aam
stc
orb
popa
cmpsl
mov
popa
lods
lret
insl
and
loop
push
bswap
inc
mov
shlb
sahf
jnp
out
mov
pusha
lcall
dec
jo
out
mov
les
cltd
in
push
aaa
jns
dec
stos
mov
jnp
fidivl
mov
daa
icebp
insl
adc
adc
adc
mov
sbb
adc
xor
lods
push
mov
mov
data16
or
sbb
add
add
int3
dec
cmp
xchg
sub
ss
shl
jno
sbb
rorb
xchg
push
cmp
icebp
inc
xchg
ja
int
fs
cmp
pop
and
into
cmpl
mov
inc
cmp
mov
sub
pop
out
jb
and
loope
pop
pop
adc
mov
lret
mov
xchg
jnp
subb
mov
dec
xchg
pop
stos
inc
repnz
push
mov
test
mov
pop
xor
jne
iret
mov
lea
adc
stc
enter
popf
shl
adc
scas
cmp
add
fs
xchg
and
jns
movsb
ret
lock
jns
movsb
mov
subb
xor
lock
xlat
dec
mov
mov
push
cmp
cltd
out
iret
mov
dec
and
mov
pop
repnz
cmpsb
push
scas
add
sub
fstpt
sbb
dec
sbb
stos
icebp
lahf
push
sub
mov
enter
jnp
call
mov
jnp
test
sti
push
adc
push
xchg
xchg
push
jle
pop
sbb
push
mov
xchg
adc
js
cmp
pop
fidivrs
cltd
mov
jecxz
dec
mov
mov
cmp
fs
pop
push
adc
adc
clc
out
cmc
adc
test
sub
xor
jo
mov
cmp
xor
in
and
aaa
push
push
mov
jae
jecxz
lds
cwtl
sarl
incl
and
es
pop
fldcw
shll
cmp
push
sti
and
leave
lcall
repnz
adc
into
lret
cmp
dec
subb
ret
enter
mov
pop
sbbb
sbb
xlat
enter
lahf
pop
rcll
mov
in
adc
pop
jmp
dec
popa
stos
cli
xor
pop
mov
or
xchg
xchg
loope
pop
sbb
cmp
ret
popa
dec
in
sti
aaa
or
xchg
bound
or
push
inc
gs
add
in
mov
lds
jge
idivb
cmpsb
mov
push
push
mov
jge
or
jo
rcrl
fs
push
and
add
arpl
or
test
pop
mov
and
cmp
dec
nop
xchg
pop
imul
adcb
jo
add
jne
js
add
pop
addb
test
sub
mov
ficompl
fiaddl
ret
push
add
sbb
add
shl
pop
aad
sub
cli
mov
and
jg
sbb
lods
push
add
inc
cmpsl
mov
pushf
or
fidivs
dec
cmp
push
ljmp
sahf
lock
ljmp
int
cmc
iret
mov
subb
ljmp
aad
and
and
add
add
push
inc
jmp
test
fmul
xlat
sbb
lahf
movsl
sbb
lea
and
orb
ficomps
push
jbe
cmp
xchg
sbb
in
push
mov
xor
sub
sbb
into
mov
mov
or
js
or
sub
dec
jno
mov
mov
stc
pushf
mov
or
pop
adc
sub
les
mov
jl
push
pop
pushf
mov
fbstp
testl
add
unpcklps
adc
popf
dec
mov
ffree
push
inc
in
jo
push
adc
pop
sub
movsb
out
ffree
addr16
adc
xor
mov
scas
rolb
mov
sbb
faddl
sub
cld
mov
pushl
push
rcrb
push
push
xor
xor
push
nop
gs
xchg
sbb
rolb
lret
mov
ds
lea
cmc
mov
jle
and
icebp
inc
dec
enter
jecxz
sub
hlt
cld
and
xchg
je
add
iret
sbbb
adc
dec
aad
xchg
fildll
scas
sub
cmp
dec
push
lods
arpl
aas
jmp
adc
or
jl
es
xor
adc
cwtl
inc
or
pop
or
xor
lds
dec
pop
xchg
inc
fnstsw
ljmp
mov
sbb
test
mov
sub
out
push
cmc
and
out
ss
jbe
es
mov
pop
adc
arpl
sbb
mov
sbb
pop
mov
call
sub
or
outsb
push
lods
cmp
add
jmp
cmp
pop
xchg
mov
xchg
fcoms
fistps
sahf
pop
lret
cmp
xlat
shll
jl
lret
jg
ljmp
add
push
mov
cltd
jae
shr
jecxz
imul
sbb
or
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
push
jecxz
int3
xor
inc
pop
jl
neg
scas
push
adc
mov
lods
push
test
lcall
inc
movsl
xchg
mov
dec
ds
data16
jb
mov
adc
mov
pop
les
mov
or
mov
fs
ror
lods
mov
inc
lret
add
xor
in
dec
nop
mov
mov
lahf
add
cmpl
and
call
jle
clc
cld
ret
mov
add
jmp
push
nop
push
mov
outsl
test
add
mov
lds
inc
shll
inc
loopne
mov
cmp
verw
lahf
add
and
and
scas
movsl
push
push
movsl
les
iret
push
vmread
push
fdivrl
lods
sbb
fildl
fisttps
stos
in
ljmp
xchg
ss
aas
stc
jg
outsl
jnp
push
sar
sub
push
pop
and
fildll
mov
lds
mov
popl
jmp
push
loopne
pop
adc
dec
inc
fildl
test
sub
adc
pushf
call
pop
sahf
push
mov
xor
mov
adc
sbbb
mov
test
dec
inc
xchg
jo
clc
sub
pop
imull
dec
sahf
mov
xor
in
and
mov
leave
ficomps
pusha
push
pop
das
bound
imul
popa
mov
lcall
mov
adc
rcl
xor
dec
cs
xchg
pop
js
sbb
xor
cmp
fstps
lret
dec
fnstenv
loop
xor
cmp
dec
inc
cmp
iret
shl
jne
pop
push
call
cltd
sahf
cs
ret
loope
shl
xlat
push
xor
sarb
mov
jecxz
subl
out
fstps
or
jecxz
jb
enter
and
sti
inc
frstor
test
push
out
sub
aad
mov
xor
addl
imul
xor
and
mov
cmp
xorb
ret
in
cmp
ror
cmpsb
ret
in
jns
push
and
mov
or
add
jmp
fnstsw
ljmp
add
push
addr16
fildl
js
ror
add
cmp
addr16
xor
mov
aaa
loopne
cmpsb
mov
iret
push
jae
push
into
pextrw
jne
lods
or
daa
rorb
jp
xchg
or
push
dec
mov
dec
xor
inc
pushf
xor
push
scas
negl
ljmp
jo
and
mov
andb
cmp
ret
sbb
cmp
rcl
pop
cs
or
xchg
js
xchg
or
test
pop
ja
aam
jmp
inc
cmp
pop
push
es
mov
daa
jge
or
adc
es
insb
dec
xor
sbb
test
out
jmp
js
push
and
jne
aaa
pop
cmpsl
les
xchg
add
movsl
pop
add
jle
jnp
shll
lahf
aad
repz
testl
dec
cmp
pushf
xor
or
in
push
sbb
aaa
mov
mov
or
jl
push
inc
adc
jne
mov
xchg
mov
mov
mov
push
mov
std
icebp
or
lea
jg
pop
idiv
enter
movsl
inc
dec
dec
mov
push
je
pop
sub
and
cwtl
dec
cmp
loop
sbb
in
or
xor
andb
cmp
imul
addr16
rcll
loope
mov
lcall
bnd
xchg
adc
imul
pop
inc
mov
cli
leave
push
je
pop
adc
mov
fsubrl
sub
pop
arpl
jne
ret
aad
shlb
adc
sbb
outsl
inc
gs
dec
out
stos
lock
and
mov
lods
outsb
leave
xchg
mov
xchg
lods
aas
loop
popf
sbb
pop
mov
jnp
fneni(8087
push
jbe
cli
sub
clc
push
insl
sbb
lds
mov
adc
adc
mov
ret
lods
mov
mov
xchg
push
jns
push
jbe
push
or
out
cltd
sahf
leave
mov
imul
pop
int
in
shll
popf
adc
mov
mov
rolb
mov
xlat
mov
cmpsl
ss
lcall
inc
xchg
push
mov
sarb
xor
mov
adc
cmp
jecxz
jo
jnp
and
xchg
and
in
sahf
scas
mov
loopne
dec
repnz
outsb
xor
adc
jmp
outsb
adc
lret
sbbl
or
xor
mov
pop
fidivs
ds
stos
rcrl
inc
xchg
lea
mov
jmp
fisubrl
bound
inc
out
mov
aad
cmp
nop
int
dec
mov
xchg
mov
xchg
pop
enter
add
scas
inc
stos
pusha
jge
pop
aaa
adc
fwait
and
orl
jl
push
pusha
sub
ljmp
dec
jmp
sbb
mov
xchg
xchg
sub
nopl
dec
loop
imul
xor
xchg
mov
pop
insb
add
inc
pop
push
jp
lcall
sbb
repz
jae
dec
sbbl
push
in
jecxz
loop
ljmp
mov
mov
and
sti
imul
dec
and
xchg
outsb
sahf
in
jg
fsubl
jecxz
add
mov
jg
cmp
insl
jle
lcall
xchg
mov
adc
popf
stc
test
dec
scas
mov
movsb
xlat
add
int3
or
xor
dec
dec
xchg
ret
scas
adc
das
lods
adc
mov
adc
int
add
inc
mov
das
push
add
push
aas
subb
mov
faddp
ja
add
cmc
pusha
cmpsl
sub
jo
andb
insl
dec
xchg
xchg
sub
cmp
je
mov
dec
inc
adc
push
pxor
cmp
mov
inc
xlat
pusha
and
mov
inc
push
les
aaa
cmp
jmp
int
cmp
movsl
arpl
out
jle
or
mov
mov
incb
arpl
xor
rcl
sub
cltd
jae
inc
mov
or
outsl
dec
mov
xor
aam
push
in
loopne
dec
jecxz
or
stos
sub
mov
cmp
es
call
test
inc
jo
or
inc
push
pop
es
adc
rclb
das
push
mov
stc
loopne
fucomi
mov
xchg
jg
add
xor
leave
push
pop
out
push
adc
mov
outsl
fcomps
imul
sbb
jl
adcl
std
js
out
or
cmp
cmp
push
xlat
mov
cmp
jns
lods
inc
nop
iret
push
xchg
ljmp
daa
jns
popf
orb
out
inc
adc
mov
and
sbb
push
sbb
ror
lds
mov
daa
push
leave
dec
sbb
mov
jns
lds
mov
lret
loop
mov
mov
pop
scas
dec
incb
pop
sbb
icebp
mov
or
lock
sti
xor
xlat
sbb
pop
insl
pop
push
out
mov
cmpsb
dec
and
in
mov
aaa
jge
cmp
push
fsts
lahf
xor
test
xlat
rcr
sbb
jno
push
sti
je
out
dec
bound
cltd
lahf
dec
pop
sarb
lret
push
aas
fwait
jle
mov
pop
or
mov
add
repnz
into
push
testl
fldt
mov
lret
cltd
rolb
or
dec
cld
or
or
nop
cwtl
xchg
add
ja
cmp
imul
cmp
outsl
aam
fwait
in
pop
arpl
push
cmp
adc
pop
lahf
dec
adc
les
sbb
sub
fbstp
inc
lcall
flds
push
xor
lea
mov
ss
mov
pusha
inc
int
push
stos
add
pop
xchg
data16
loope
and
mov
mov
out
cli
or
mov
adc
mov
xor
or
das
xor
fimull
jg
push
adc
ja
mov
sar
pop
pop
icebp
movsl
cmp
sbb
add
sarl
jnp
scas
ljmp
nop
jnp
jnp
rcrb
inc
add
fcmovbe
mov
fcoms
cmp
cmc
add
enter
ficomps
xchg
sub
fisubl
cmp
ficompl
in
daa
lret
loopne
jae
cwtl
push
xor
dec
mov
aad
hlt
xor
dec
pop
in
fdivrl
rclb
and
inc
add
mov
adc
cmp
ret
fs
test
add
sbb
push
jno
frstors
mov
dec
or
lds
sbb
rorb
mov
and
or
mov
in
xor
out
leave
xor
fsubrl
fldcw
push
dec
jns
jbe
pop
mov
inc
jmp
iret
test
lret
test
and
test
lcall
mov
je
xchg
ret
repz
insl
imul
mov
imul
js
js
xor
fidivrs
in
lea
cmpsb
push
shlb
inc
dec
xor
leave
push
jbe
cmp
outsl
insb
ret
dec
test
sub
mov
and
sbb
testl
sub
push
jb
cmp
movsl
fwait
add
dec
or
ljmp
pop
jo
pop
scas
fwait
insl
pop
or
add
in
ret
push
cmp
jbe
nop
sbb
int3
mov
loop
ret
imul
cmp
xchg
sbb
cli
pop
xor
int
mov
xchg
sbb
lock
cmpb
shl
and
mov
clc
nop
loopne
xor
or
out
pop
movsb
jp
adcl
inc
lods
mov
adc
or
fwait
pop
call
movsb
pop
test
lea
scas
scas
in
out
mov
mov
test
sbb
push
push
pop
or
pop
adc
loope
ss
xchg
mov
dec
loopne
xchg
cmp
adc
rcll
mov
jge
fucom
repz
inc
clc
add
in
mov
fs
je
sbb
lock
or
ljmp
jo
pusha
out
push
test
into
cld
cmp
jmp
jae,pt
jae
in
les
cmc
mov
aam
daa
repz
leave
inc
popa
aaa
subl
jns
push
mov
jl
adcl
inc
inc
ja
push
pop
mov
xchg
daa
cld
sub
inc
mov
js
push
je
lret
mov
mov
fnsave
clc
lds
stos
sbb
shlb
cltd
dec
mov
push
sub
lock
dec
adc
fld
fidivs
imul
adc
push
sbb
inc
xor
movsl
out
pop
jg
mov
addr16
jae
and
pusha
or
jne
and
sbb
out
dec
shl
mov
fcom
jnp
dec
xchg
jmp
icebp
jge
nop
mov
jmp
cmc
inc
cmp
lods
loopne
fxch
adc
or
inc
lds
inc
cmp
mov
mov
lret
dec
movsl
mov
mov
aad
adc
ffreep
fwait
gs
jecxz
add
xrelease
jmp
popf
outsl
push
popf
fbld
cmpb
pop
jo
ja
xorb
les
jbe
mov
addr16
mov
test
pop
sbb
repnz
es
in
pop
sub
mov
jnp
das
test
and
loop
bound
or
mov
popa
or
mov
and
lret
jp
push
mov
dec
push
nop
daa
adc
dec
loop
int3
mov
lret
in
les
es
clc
je
mulb
adc
lcall
arpl
or
xchg
cmp
scas
dec
sub
cmp
arpl
pusha
pop
jns
pop
mov
andl
inc
inc
repnz
mov
adc
fcoms
adc
cmp
sub
clc
inc
popa
xor
dec
shrb
push
mov
je
out
adc
xchg
add
fdivrp
fs
fstpt
and
outsl
and
dec
outsl
cmp
iret
ffree
sti
ja
adc
rclb
cmp
mov
fwait
jl
or
popf
mov
cmp
loopne
xchg
cmp
adc
push
add
xor
pusha
into
adc
mov
sbb
cmc
test
jno
and
movsl
or
data16
fisttpll
das
xor
lret
cwtl
xor
mov
cmp
mov
or
pop
mov
push
mov
add
push
lods
sarb
rcll
shrb
push
pop
into
jmp
push
test
jo
lcall
jbe
mull
les
and
insb
jno
cmpsb
push
or
xchg
int3
push
lret
xchg
dec
roll
enter
xchg
stc
jle
out
jmp
clc
adc
mov
mov
xchg
sbb
xchg
ds
xorb
pop
mov
repnz
test
ret
push
test
mov
mov
gs
nop
pop
fsubl
popa
inc
sbb
sub
inc
xor
daa
dec
cli
movsl
jbe
push
fadds
popa
daa
addr16
push
loop
loope
add
mov
lret
add
fsubp
mov
jmp
and
pop
movsb
call
popa
and
xor
fwait
mov
sarb
lret
outsl
ret
mov
xor
in
test
cmp
jl
movsl
push
movsb
test
nop
mov
cmpsl
test
aam
dec
cmp
lds
sahf
mov
inc
mov
mov
mov
fmull
push
push
repnz
or
js
xor
bound
mov
adc
lahf
jns
outsl
ret
lahf
stc
or
out
xchg
and
dec
add
ja
mov
shl
lret
adc
fxch
popf
xchg
out
fsubrl
fs
pushl
and
mov
lret
dec
jmp
cmpsb
push
les
jbe
xlat
addr16
sbb
dec
cmp
clc
bound
fadd
pop
lret
popf
ret
pusha
jl
inc
mov
xor
jge
or
ror
mov
jg
mov
inc
and
cmpsb
or
jmp
sbb
data16
mov
or
sbb
pop
pop
mov
dec
pop
ret
hlt
push
aaa
fmulp
xorb
movsl
inc
clc
lods
mov
fisubrs
lds
cmpsl
and
pop
dec
add
aas
lret
mov
add
fsubrl
mov
and
pop
push
xor
dec
mov
inc
jae
testl
jge
xchg
cmp
test
sbb
sub
out
fcmovu
stos
ja
ret
insb
ret
into
pop
test
mov
stc
sar
cmp
in
jo
sbb
insb
cld
xor
jmp
stos
loopne
add
adc
pushf
cmp
push
jbe
out
fsubl
mov
pop
outsl
or
adc
jbe
rorb
mov
sub
dec
jae
or
test
mov
mov
cs
lods
pusha
pop
ret
xchg
push
mov
aam
sbb
shlb
push
inc
shrb
imul
push
sbb
adc
in
adc
fs
sbb
jb
add
out
test
rorl
into
pop
popa
aam
int
xor
imul
mov
test
fs
push
jp
ss
dec
dec
push
push
aaa
mov
xor
mov
in
icebp
xchg
cltd
mov
and
in
cmp
lret
in
mov
add
scas
gs
jne
fdivrl
jno
ss
js
lock
scas
jns
push
mov
pop
jne
es
mov
out
or
dec
mov
push
lock
and
mov
mov
lret
and
lock
in
jns
sqrtps
adc
cmp
cmpsl
cli
xchg
in
jbe
mov
push
jmp
movsb
outsb
lret
aam
mov
sub
inc
cmp
and
sub
dec
cvttps2pi
sbb
inc
jg,pt
xor
hlt
fistl
mov
cmp
mov
inc
int
inc
fmull
and
hlt
sbb
xchg
or
setns
sbb
push
insb
mov
xchg
imul
int3
xor
loopne
mov
mov
ret
mov
in
jmp
xor
adc
jns
jo
mov
jb
mov
jl
fsubrl
push
jg
pop
push
push
inc
lcall
imul
add
mov
or
mov
or
stc
cmp
fcoml
mov
push
pop
xchg
pop
orl
aaa
std
ds
pop
fcmove
pop
movsl
std
and
in
dec
xor
sub
lahf
fwait
cwtl
cld
mov
lldt
xchg
xchg
out
addr16
mov
out
inc
mov
js
jbe
movsl
adc
inc
and
xchg
sbb
push
cmpsl
ret
bound
cld
adc
add
in
push
cmp
xchg
dec
shll
pop
pop
pop
loop
push
pop
xchg
dec
repnz
insl
xchg
sbb
jmp
pop
xor
lcall
test
mov
lret
es
jp
jmp
sbbl
pusha
dec
jo
in
loopne
inc
in
jg
outsb
or
icebp
add
sub
lods
xchg
pushl
add
sbb
jae
fsubp
sti
fistpll
repnz
lahf
outsb
insb
int
cmp
outsl
pushf
pushf
mov
mov
rolb
push
popf
mov
xor
xchg
cld
data16
rcrb
repnz
mov
in
outsl
cmp
and
sbb
shlb
outsb
jbe
fidivl
es
fdivrp
sub
add
dec
loop
mov
stos
xacquire
cmp
daa
mov
xor
repz
cmc
pop
push
pop
sub
jle
cmpsb
cli
ds
shlb
inc
les
jecxz
test
mov
inc
push
mov
in
cmp
call
hlt
jle
lock
inc
ret
adc
xchg
out
add
pop
mov
lahf
sbb
pop
out
mov
rclb
sub
mov
push
sahf
xor
add
out
dec
scas
roll
clc
or
cwtl
loopne
je
ss
xor
adc
repz
fistl
push
shrb
inc
dec
or
cmp
pop
out
addr16
or
stc
cmp
pop
js
jnp
lret
xchg
and
sub
push
inc
pop
sub
shrb
cmp
leave
cld
inc
jmp
inc
inc
and
jecxz
xor
mov
repnz
add
cmc
push
ret
lds
adc
dec
not
je
adc
xchg
cld
sbb
xor
push
or
jb
imull
push
add
insb
adc
loopne
fndisi(8087
jae
mov
inc
pop
int
vpacksswb
xchg
mov
pop
cltd
ds
mov
or
cmpxchg
test
cwtl
pusha
jp
pop
pop
mov
mov
cli
jns
xor
sahf
inc
cwtl
outsl
cmpsl
punpckhdq
mov
mov
smsw
jne
add
test
shrb
dec
ret
arpl
idiv
std
pop
mov
out
mov
mov
cli
adc
mov
sahf
xchg
aaa
cmc
scas
mov
inc
xor
push
test
dec
sub
pop
push
mov
ljmp
fldenv
test
sub
ficoms
mov
jns
lods
jae
xchg
jb
push
insb
sbb
out
or
test
inc
xlat
mov
test
lds
out
and
adc
je
sub
xchg
mov
aas
enter
adc
testb
add
dec
addr16
inc
icebp
cmc
stc
test
xorb
cmp
cmp
pop
sbb
mov
cmp
sub
in
mov
dec
push
jp
dec
jbe
fldl
mov
mov
mov
mov
call
enter
jo
daa
push
sub
icebp
lea
and
pop
cmp
lcall
enter
dec
cmp
and
push
shrl
in
pop
ds
inc
jp
mov
pusha
arpl
das
mov
mov
insb
idivb
out
arpl
je
mov
mov
in
mov
ja
cmp
mov
mov
das
inc
dec
or
cmpsb
lds
cmp
mov
mov
icebp
xlat
in
sti
xlat
fs
push
jns
xor
lahf
adc
mov
call
dec
sbb
sub
aad
jle
jp
add
jmp
cmp
in
mov
pop
add
jecxz
les
mov
add
or
xchg
dec
push
shlb
stos
les
cmpl
into
lea
fistps
stc
sub
pushf
and
inc
adc
or
rorb
jmp
add
mov
aam
sbb
in
cltd
sub
or
imul
adc
push
in
or
adc
dec
sbb
and
lea
std
jecxz
loop
sub
ja
es
into
inc
or
or
and
jbe
std
pop
je
add
outsb
and
add
pop
dec
loop
sub
outsl
fisttps
mov
inc
lea
movsl
jae
popl
clc
mov
inc
dec
aas
ss
leave
jo
jnp
es
rcrl
xchg
enter
xchg
and
pop
sub
sti
stos
cmp
pushl
pusha
pop
imul
push
adc
pop
inc
loope
mov
mov
aas
icebp
sti
ljmp
mov
and
mov
cmp
outsb
sahf
mov
mov
scas
or
push
and
pop
clc
add
into
jmp
or
test
push
js
mov
lcall
jbe
push
pop
sub
adc
dec
into
or
test
mov
into
mov
or
daa
pusha
imul
pop
mov
outsb
shrb
mov
fwait
mov
xchg
lahf
adc
mov
insl
lea
fwait
push
sti
xor
pop
negl
jae
ds
xchg
mov
and
sbb
push
dec
add
pop
nop
hlt
sbb
and
jge
mov
rdtsc
fcomps
lcall
mov
add
cld
jns
pop
xchg
jnp
lea
add
jmp
ret
ds
pop
adc
adc
push
and
pop
lods
je
jl
cmp
xor
jl,pn
sub
or
jmp
inc
lahf
push
sbb
dec
adcl
xchg
mov
push
mov
mov
cmp
je
dec
inc
push
jge
out
adc
mov
fistl
pop
mov
dec
or
pop
jmp
push
outsl
and
ljmp
sahf
in
cmp
jp
frstor
neg
cmp
daa
sbb
sub
hlt
or
outsl
xor
faddl
or
adc
cs
leave
inc
in
sbb
dec
cmpsb
xor
jne
rcrl
dec
ljmp
push
cmpsb
daa
or
adc
inc
and
sub
jo
cmc
nop
adc
or
mov
inc
lret
add
xchg
push
sub
mov
sbb
popf
jne
mov
mov
xor
dec
cmc
xor
sbb
sub
test
test
lock
pop
arpl
dec
sahf
mov
inc
xchg
add
cmp
adc
addb
adc
lret
sahf
mov
icebp
fsubs
aas
mov
adc
jle
inc
in
bound
stos
xchg
lret
aam
adc
mov
add
dec
fiaddl
jns
dec
sbb
add
cltd
cli
daa
xor
shl
mov
mov
popa
insl
pop
lret
push
jecxz
test
test
push
int
mov
dec
push
out
fbstp
mov
mov
les
mov
clc
shl
imul
dec
push
and
std
sarb
popa
ret
test
cmpsl
xor
mov
cmc
add
testl
popf
push
les
into
insl
jne
mov
cwtl
or
pop
jg
add
dec
in
inc
call
into
xor
adc
cltd
jno
shlb
icebp
sbbb
pop
sub
push
mov
mov
jmp
xchg
xor
mov
xchg
test
mov
xchg
pop
std
jp
pop
push
movsb
mov
bound
cmpl
xchg
arpl
mov
into
jo
push
test
dec
mov
test
add
add
in
xor
mov
movsb
lret
lret
sti
dec
mov
mov
mov
imul
lds
scas
mov
adc
cmpsb
push
jns
push
add
insb
push
xchg
push
dec
rcl
loope
xlat
fldl
lds
insl
inc
ljmp
jge
jl
mov
in
and
lds
xor
imul
mov
ret
fnstsw
dec
xlat
std
mov
outsb
movsb
int
xor
push
fimull
idiv
lock
pop
push
movsb
jno
or
popf
push
aad
mov
mov
lock
mov
cmp
jmp
call
jb
cmp
cmp
sub
dec
or
test
aaa
sbb
std
add
jnp
cld
lods
mov
in
lods
or
mov
int
test
mov
scas
jo
imul
enter
or
lods
cli
adc
out
icebp
scas
jl
fdivl
sbb
cli
not
pop
cli
ja
pop
xor
and
nop
popf
mov
mov
add
jl
aas
mov
dec
push
test
xchg
add
mov
ret
movb
or
jbe
adc
sbb
fnsave
sub
out
insl
jns
or
or
les
jbe
adc
sub
dec
out
inc
inc
rolb
imul
scas
mov
sbbl
jae
push
loope
data16
daa
in
stos
rcll
pop
pop
inc
lcall
sub
jmp
stos
pop
dec
test
pop
push
or
mov
mov
aad
lret
into
and
and
inc
mov
mov
inc
cmp
xor
arpl
mov
mov
add
adc
and
or
vunpcklps
dec
mov
lea
loopne
int
mov
mov
pop
test
outsl
sub
push
mov
pop
dec
aad
in
push
fs
mov
adc
mov
fsubrs
pop
sub
out
scas
mov
sti
mov
jb
testb
pusha
dec
fucomip
leave
xlat
xor
int
jb
push
test
jae
mov
pop
pop
test
rcr
std
inc
loop
xor
push
dec
mov
loopne
mov
sbb
mov
and
fsubrl
adc
aaa
and
pop
std
sbb
cmpsl
cmp
xchg
push
mulb
adc
push
roll
iretw
lods
xor
lcall
sti
cmp
cmpsl
jne
sbb
lods
push
dec
enter
adc
pop
dec
mov
lret
xor
cmp
fcmovu
decl
out
push
dec
in
jno
inc
fstpl
xchg
std
lods
outsl
lea
or
push
lods
xor
cltd
ss
xchg
jae
fs
fldenv
mov
insb
sbb
lods
or
lahf
fsubr
pop
xorb
dec
sub
repnz
clc
xchg
push
and
fsubs
sbb
lret
adc
pushf
sbb
js
shl
sub
fldt
and
pop
push
or
pop
inc
in
mov
testb
pop
add
xlat
in
mov
testl
mov
push
shlb
scas
sub
les
inc
loop
out
andl
into
icebp
mov
stc
mul
call
fnstenv
rorb
rcll
or
mov
mov
mov
call
cmpsb
dec
push
jecxz
mov
aaa
aaa
push
jle
jg
dec
add
inc
mov
lods
iret
pop
mov
movsl
xchg
int3
enter
call
adc
or
dec
ss
iret
adcb
into
mov
jo
lahf
mov
pop
cld
add
pushf
sbb
mov
add
or
cmpb
push
dec
pusha
ret
sbb
and
cld
xor
lcall
popa
mov
xor
or
cwtl
imul
repz
iret
out
adc
aam
outsl
lret
xor
movsb
xor
sbb
aaa
in
icebp
inc
lea
cs
sti
jae
cmp
dec
cli
mov
mov
es
lds
push
insl
mov
addl
movsb
lcall
inc
jb
xchg
cld
imulb
or
inc
mov
icebp
or
call
les
adc
movq
xor
mov
cmp
loop
fldl
cwtl
paddb
pop
call
insb
sub
xor
lret
mov
mov
nop
iret
out
jb
dec
shrb
cld
fwait
sbb
out
repz
mov
xchg
fsubp
daa
negb
add
xor
pushf
fs
ds
inc
pop
mov
or
lods
push
sbb
fisttpll
out
push
mov
sub
dec
rorb
test
and
out
cwtl
cmc
insl
add
loopne
inc
sub
and
and
jno
inc
cmc
pop
cwtl
enter
cmpsl
jmp
aam
cmp
cld
fidivs
cmpsb
jo
fstps
mov
aaa
and
sbb
sub
daa
inc
sbb
mov
mov
fdivl
or
rep
nop
pop
sahf
fiaddl
loopne
fistl
sbb
jbe
out
mov
sbb
push
inc
inc
repz
jnp
jnp
inc
fwait
in
mov
pop
jb
pop
stos
cmpsl
push
and
int
push
xchg
xchg
mov
lcall
jno
push
sbb
vpcmpeqw
xchg
aas
jp
xor
jne
pop
hlt
xor
sbb
popl
int
cmp
rcll
cmpsb
mov
xchg
into
out
mov
ret
cmpsl
mov
mov
in
outsl
sbb
jl
test
nop
sbb
icebp
sbb
insb
testb
insl
test
fists
adc
and
adc
xchg
stos
xchg
sub
mov
data16
ja
ret
push
lret
xlat
sub
mov
les
fsubs
hlt
gs
repz
sbb
jns
mov
aam
loopne
push
in
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
lret
jge
inc
pop
jl
and
into
iret
jne
movsl
mov
cmp
stc
int3
inc
fisubs
sti
cmpsl
inc
repnz
cld
stc
insl
out
or
mov
sub
cmp
in
mov
fsubr
fstps
and
pop
mov
adc
and
pop
push
mov
jp
mov
mov
mov
cmc
mov
rolb
in
stos
mov
pop
out
or
adc
push
or
mov
das
add
cmp
cmpb
cmpb
adc
cs
sbbl
cmp
mov
pop
sbb
call
add
lret
ret
and
xchg
push
rcrb
loopne
push
mov
das
push
or
enter
arpl
iret
add
pop
cltd
sti
mov
xchg
inc
scas
je
ss
fldt
fbstp
cmp
mov
mov
xlat
xor
repz
sbb
out
adc
or
stc
scas
adc
movsl
jge
ret
add
pop
outsb
stc
mov
fwait
jmp
dec
loopne
fldenv
arpl
dec
out
inc
mov
jle
or
fdivrs
inc
and
jl
sbb
jecxz
pop
stos
and
mov
adc
icebp
push
hlt
cmp
push
pushf
cmp
inc
jl
repz
in
test
xlat
repnz
sbb
je
mov
pop
fisubs
mov
orb
sti
sbb
mov
outsb
hlt
pop
iret
inc
inc
push
push
jg
ss
push
cli
cmp
and
test
or
sahf
pop
popf
fwait
mov
mov
and
rolb
test
sbb
mov
push
inc
inc
or
sbb
ret
pop
adc
icebp
xchg
nop
ret
jnp
fs
in
xchg
cmp
xchg
movsl
push
xchg
mov
mov
out
gs
dec
subb
loop
cmpsl
xor
repz
arpl
subl
pop
mov
push
jo
aaa
rcr
cwtl
cmpsl
mov
pusha
pop
lds
mov
fists
mov
or
push
push
cmp
cwtl
cwtl
jp
push
sbb
mov
mov
sbb
inc
mov
xor
inc
sbb
xor
push
xor
mov
adc
roll
push
pop
adc
dec
jmp
ficomps
and
jae
mov
xchg
sub
fwait
or
negl
push
mov
jb
pop
addr16
jnp
sbb
mov
push
lods
sub
test
dec
fistl
ret
xchg
mov
lds
cmp
loope
jnp
pop
scas
pop
dec
outsb
xor
jmp
push
lea
mov
andb
fcmovnu
rcrb
je
fstps
stos
jl
sub
push
xlat
cmc
cmpsl
inc
dec
and
jo
sub
les
jp
xchg
movsb
shrl
dec
add
out
cwtl
lcall
cwtl
and
adc
pop
cltd
scas
mov
pop
test
stos
adc
insl
fwait
and
xor
bswap
test
xchg
cmp
add
in
enter
xor
inc
inc
int
pop
jmp
jg
xchg
dec
fnstcw
in
in
rclb
xchg
mov
sub
nop
ds
push
xor
inc
sbb
sub
movsb
mov
cmp
test
cmp
pop
xchg
das
mov
dec
mov
stc
dec
inc
stc
cmp
inc
daa
imul
xlat
sbbb
movsl
aad
in
and
sti
gs
test
pop
sub
mov
mov
pop
adc
dec
out
js
push
inc
mov
test
jb
test
adc
or
leave
mov
fidivl
adc
insl
ror
mov
insl
sub
mov
or
dec
jecxz
mov
aaa
cmpl
mov
shll
enter
outsl
scas
cli
mov
in
sbb
insb
popl
adc
sub
fs
mov
cli
dec
fadds
xor
rorl
out
push
push
das
mov
lods
mov
add
pop
test
fidivrs
aaa
stos
xor
out
insb
fdivs
pop
js
inc
add
cltd
mov
mov
push
inc
stos
push
mov
jne
push
and
xchg
mov
scas
nop
xlat
data16
fdivrl
jp
mov
fildll
push
and
mov
cltd
sub
stos
movb
call
movsl
cmp
xchg
pinsrw
rorb
in
aad
jecxz
xchg
jg
in
mov
addr16
pop
cmp
decl
jnp
ret
ud2
ss
fldcw
std
xor
inc
adc
cs
ds
psllq
and
lahf
stos
jo
add
ficompl
aad
jmp
imulb
mov
in
xor
sahf
in
sub
mov
add
insb
mov
jns
adc
cwtl
add
and
into
xlat
xchg
lcall
adc
sub
lret
add
dec
repz
scas
insb
arpl
adc
add
cmc
lcall
xchg
xor
mov
jae
mov
fsts
test
mov
andb
call
leave
outsl
sbb
roll
xchg
scas
lret
xchg
mov
out
inc
sub
mov
push
loope
insl
and
jecxz
xchg
insb
scas
and
in
cld
or
xchg
pushf
xor
sti
push
ds
mov
mov
outsb
xchg
fnstenv
mov
stc
cmp
movsb
jecxz
mov
push
arpl
hlt
sbb
inc
mov
cmp
repz
and
das
push
mov
push
shll
ret
push
pusha
adc
add
test
cmp
mov
adc
mov
xor
dec
adc
rcll
xorb
arpl
cld
add
loopne
fldt
mov
pushf
out
shl
neg
outsl
pushf
gs
int
rolb
cs
std
push
je
push
into
xor
mov
hlt
inc
push
jle
lods
mov
sub
dec
xorb
loope
hlt
clc
ja
popa
push
int3
pop
push
loopne
add
movsb
add
and
add
lds
cmp
jbe
jle
movsb
adc
sbb
sbb
inc
lds
mov
cld
pop
fdivrl
dec
fistpll
add
mov
adc
popf
or
sahf
gs
dec
out
xor
iret
xchg
pop
cmp
clc
jl
pop
fcmovbe
insl
negb
push
mov
cmpsb
inc
orl
mov
clc
movsb
ja
jmp
jmp
pop
fsubl
jae
clc
cmp
jb
dec
aas
dec
ret
mov
xchg
scas
loope
je
pop
in
sub
rolb
mov
icebp
div
push
pop
or
out
in
in
testl
pop
iret
enter
mov
sbb
cld
lock
test
dec
orl
sbb
inc
in
xchg
push
jae
outsb
lret
and
ljmp
cmp
inc
popa
sbb
xchg
loop
xchg
nop
es
and
push
lcall
inc
adc
push
popa
loope
aas
notl
and
mov
addr16
inc
or
xchg
je
xor
inc
cmp
cmp
or
inc
fwait
js
mov
fcompl
pop
push
or
xor
cmp
and
mov
dec
mov
inc
xor
dec
mov
pop
xor
in
and
pop
jne
jl
xlat
or
popa
js
xchg
inc
jae
ret
mov
xchg
pop
sub
dec
inc
addr16
hlt
les
inc
add
dec
es
pop
gs
ds
mov
test
push
popa
push
jmp
pop
jecxz
aas
gs
adc
leave
dec
lds
jmp
loop
push
fcoms
mov
into
lock
into
pop
inc
loopne
scas
pop
xchg
fs
xchg
outsl
lcall
insl
and
cmp
adc
punpckhwd
add
ljmp
repnz
in
sbb
cmp
in
pop
inc
div
in
and
add
call
or
je
fstpl
dec
es
jp
mov
rcrl
xor
test
jnp
loopne
cmp
pop
gs
lcall
and
aaa
in
dec
mov
out
adc
int
mov
pop
mov
enter
test
mov
and
push
aaa
lcall
aam
jo
into
cltd
sub
sub
mov
xor
nop
je
lea
sub
xchg
pop
or
fnstsw
pop
lds
push
mov
and
mov
dec
inc
lahf
cmp
jge
fisubl
daa
jne
jnp
je
cs
repnz
mov
repz
mov
and
std
rorb
mov
test
nop
sub
sub
mov
sbb
xor
jmp
sub
fdivs
adc
cmp
data16
lret
lea
push
div
movb
jne
and
inc
pop
inc
nop
mov
mov
sahf
repnz
xchg
stos
cs
daa
fildll
out
jae
inc
dec
xchg
cltd
sub
sbb
mov
mov
hlt
gs
pusha
mov
hlt
cmp
cltd
or
mov
or
pop
inc
sub
add
mov
pop
cmp
adc
imul
ljmp
aas
js
jo
cmpsb
sbb
div
inc
outsb
pop
shlb
jge
data16
add
and
mov
cltd
inc
sub
inc
or
jge
jae
aam
popa
sahf
outsb
jge
push
lock
pop
dec
xchg
adc
dec
pop
mov
fidivs
cld
add
test
test
nop
pusha
jmp
jecxz
rorb
je
jmp
mov
jecxz
push
push
movsb
mov
add
popf
sub
aaa
mov
aaa
aad
xor
jg
int3
daa
add
push
pop
mov
adc
icebp
xchg
mov
and
iret
add
loopne
fmull
pop
loopne
loopne
xchg
xchg
scas
pop
inc
cld
dec
idivl
xchg
cmp
push
push
aad
dec
inc
jo
sub
hlt
stc
push
outsb
mov
mov
in
adcl
add
lret
test
pop
int3
hlt
loope
je
ljmp
jle
insb
int3
jne
mov
mov
jl
es
dec
ret
icebp
cld
push
jl
daa
imul
add
xchg
movsb
mov
xor
ja
shlb
cld
mov
sti
cmp
movb
dec
shll
jmp
sub
inc
mov
addb
inc
xchg
subl
inc
jle
lods
pop
add
fcomp
mov
test
jo
pop
xchg
xor
mov
std
lods
insl
pop
ret
xchg
mov
inc
cwtl
lea
inc
shlb
sarb
inc
push
inc
sub
loopne
cmpsb
sub
mov
add
sub
in
int
pop
adc
inc
and
test
adc
push
dec
jmp
cmp
cltd
push
jae
xchg
fdivrl
popf
test
pop
mov
les
or
cld
ja
test
push
pusha
jnp
mov
xor
cmp
jns
mov
sub
data16
fsubrs
ss
jl
jp
xchg
sbb
cltd
das
insb
mov
movsb
pop
pop
lds
mov
sub
pop
lock
mov
sub
addl
inc
pop
add
out
dec
jecxz
add
adc
mov
les
cltd
ljmp
pushf
inc
int
popf
xchg
scas
add
xchg
dec
dec
iret
sub
inc
mov
xor
rolb
mov
arpl
jno
mov
xor
or
call
arpl
fldl
inc
mov
push
add
lds
test
loop,pn
jmp
xor
adc
loop
adc
ret
fs
mov
movsl
mov
cwtl
sahf
les
jb
filds
jg
dec
pop
ret
add
sbb
lret
enter
jae
iret
aam
jmp
faddl
inc
mov
jo
dec
mov
mov
mov
scas
mov
sbb
imul
dec
jnp
aas
ja
mov
cmp
data16
mov
std
test
sbbb
and
push
jae
push
cmp
xchg
stos
int
jo
jmp
push
dec
pop
dec
inc
das
enter
and
mov
movntps
fwait
dec
inc
mov
mov
insb
cmp
dec
je
inc
xor
out
adc
nop
lods
int3
pop
fwait
xchg
cld
addr16
jg
adc
mov
mov
daa
jbe
or
cmc
or
jp
add
lahf
cmp
in
aad
in
pop
ljmp
leave
lret
jae
iretw
sti
or
and
mov
shlb
stos
pop
lea
loopnew
hlt
sti
xor
adc
xchg
dec
or
lock
pop
imul
mov
fcoml
outsb
lods
xchg
jge
inc
std
sahf
mov
scas
arpl
jnp
sarl
mov
sub
jo
icebp
fsubl
in
clc
iret
nop
sbb
pop
cmp
or
jne
jp
test
add
adc
jle
jnp
outsb
lds
insl
ss
in
or
or
mov
in
mov
outsl
lcall
xorb
mov
and
add
add
aaa
jmp
inc
imul
andb
movl
cmp
dec
sarl
mov
pushf
subb
push
out
mov
dec
fdivs
add
outsl
cltd
pusha
scas
inc
aam
shr
cmc
repz
sub
test
fadd
add
lret
or
cld
out
clc
jns
cs
out
lret
clc
mov
or
roll
mov
cld
xor
dec
xchg
insb
jmp
sub
mov
in
ret
inc
lret
adc
xor
loope
xor
dec
movsb
in
cld
sub
sbb
and
sbb
test
out
and
loop
rorb
addl
shlb
mov
cld
jp
popf
xchg
mov
fldl
ret
push
pop
add
loope
dec
nop
xchg
stos
test
out
pop
mov
das
stos
shlb
lods
jae
cmpsb
pushl
das
leave
pop
lds
xchg
subl
inc
jge
repnz
cld
lcall
pop
xchg
push
pusha
and
or
sub
adc
imul
mov
mov
inc
out
inc
sub
pusha
je
shlb
pushf
mov
fdivrs
jmp
das
dec
repz
xchg
adc
mov
loope
repz
jmp
fisttps
pop
call
das
popf
jmp
cmp
loopne
insb
out
lock
frstor
lds
xor
ret
xorb
inc
cmpsb
ss
dec
addr16
iret
xchg
jecxz
push
jns
or
orb
cmp
xor
lods
and
cmpb
in
sub
int3
mov
mov
pop
mov
js
push
mov
divb
add
pop
and
cwtl
test
jle
in
push
aas
xchg
rorl
out
or
sub
lret
call
adc
outsb
lea
insl
cwtl
sbb
insl
mov
call
shrl
fwait
cmp
ljmp
je
dec
adc
cmpsb
repz
loop,pn
jae
lahf
xlat
mov
sub
jecxz
adcl
adc
ret
fisttpll
add
mov
xchg
mov
jo
leave
sbb
aas
ja
sub
add
cmp
cmpsl
aam
sub
je
aas
jno
mov
mov
lret
hlt
dec
popa
pop
idivb
rorb
adc
add
dec
arpl
cmp
stos
cmp
aaa
mov
xchg
xchg
js
or
pop
sub
sbb
sti
arpl
lds
repz
mov
jnp
aad
fmull
jnp
out
hlt
pop
jns
mov
xchg
sub
cmp
andb
xor
pop
adc
mov
pop
shll
rdmsr
out
xchg
or
cs
hlt
push
imul
fistpll
mov
and
push
hlt
jo
or
mov
pop
addr16
into
mov
sbb
pusha
sbb
inc
lods
pop
xchg
into
mov
call
jg
test
push
es
arpl
es
push
cmp
fldcw
xor
adc
testl
jbe
sar
mov
jmp
add
mov
mov
mov
fmuls
mov
pop
sub
lods
inc
into
mov
pop
adc
push
mov
adc
mov
stc
mov
dec
or
test
fstl
out
popw
pop
out
insl
in
mov
pop
jge
cmp
xchg
adc
sti
jbe
add
cs
mov
into
int
jae,pn
cmp
ljmp
or
pop
push
loop
sub
xor
jecxz
test
dec
lock
sub
cmp
cmpsb
roll
pop
xor
push
out
repnz
scas
inc
subl
sti
mov
orl
arpl
xor
pop
lods
fiadds
or
or
dec
lahf
sbb
sti
add
jg
jg
mov
jne
mov
mov
test
gs
in
or
push
iret
pop
mov
push
fldcw
and
ret
xchg
mov
jne
mov
addr16
cmp
in
ljmp
imul
mov
in
pop
stc
xchg
push
iret
ret
xchg
dec
jae
pop
dec
mov
lock
in
sbb
push
sub
sbb
push
dec
inc
std
inc
jo
mov
adc
and
xor
pop
inc
add
cs
push
cmp
mov
cmp
mov
mov
xchg
and
and
mov
or
push
cli
jmp
cmp
sub
icebp
jb
outsb
push
dec
aaa
and
push
into
inc
mov
xor
pop
lahf
cmc
inc
push
imul
testl
in
inc
xchg
jle
mov
dec
jmp
pop
add
int
sti
sbb
and
aad
cmp
je
es
xor
dec
ss
ret
mov
inc
xchg
arpl
into
sbb
pop
inc
dec
jg
clc
rol
les
push
or
mov
decl
jmp
sbb
mov
enter
sbb
sub
and
call
dec
sbb
outsl
mov
mov
jmp
and
pop
inc
push
mov
rclb
jmp
xor
mov
scas
inc
inc
dec
inc
mov
sahf
ret
rcll
test
jle
addr16
add
xchg
push
jne
in
inc
ljmp
mov
xchg
in
out
rcrb
fs
jae
cli
jne
and
cwtl
divb
sahf
sub
cmp
data16
and
adc
iret
or
push
add
sahf
cmp
adc
shl
nop
lods
push
lret
pop
or
add
fildll
aas
scas
sub
pop
xorb
std
aam
es
and
push
or
pop
jl
ds
sbb
mov
xchg
sahf
and
outsb
jno
ss
dec
int3
into
insl
mov
stc
in
push
aad
mov
xchg
sub
ret
in
xchg
push
dec
mov
mov
in
mov
subb
test
cmp
xchg
jg
ficoml
imul
dec
lret
dec
loopne
pop
and
sub
iret
fidivs
stc
shll
sbb
push
mov
iret
pop
lahf
faddp
sub
dec
arpl
lahf
scas
enter
imul
jecxz
cmp
mov
dec
xchg
xchg
add
dec
or
jae
out
xlat
push
mov
jns
test
pop
rcrl
add
pop
jns
xchg
sbb
leave
in
jo
push
ret
repnz
iret
sbb
inc
cmp
push
jmp
jns
mov
fisubrl
mov
arpl
xor
fists
das
jmp
add
lods
or
loopne
or
aas
xor
imul
in
cmpsb
mov
test
sbb
test
das
fcoml
enter
adc
and
jle
mov
adc
push
sti
scas
mov
incb
xchg
cli
loop
in
jbe
dec
fnstsw
rcrb
mov
mov
insl
cmp
cs
xchg
sbb
xchg
mov
pop
std
cmp
sbb
dec
in
mov
push
jns
sbb
mov
or
aam
stos
lcall
dec
and
out
inc
mov
xchg
jmp
leave
sbb
push
in
rep
notb
jle
out
lods
or
cmp
popa
lahf
push
xor
mov
pop
or
aas
adc
push
cmp
push
test
mov
pushf
inc
adc
jae
rcrl
les
dec
out
adc
sub
lods
or
jp
fdivrs
ja
iret
cmc
scas
pushf
gs
es
sub
xchg
cmp
cltd
push
cmpsb
sbb
xchg
out
divb
shrl
cmp
arpl
notb
addr16
in
jne
add
or
dec
popf
cmpb
in
pop
daa
inc
mov
lcall
jg
mov
rcll
mov
enter
mov
movsl
fldt
or
inc
popa
push
cmpsb
fmul
out
pop
inc
mov
cs
mov
pop
mov
adc
out
and
xlat
rolb
or
icebp
leave
jle
stos
inc
lea
pop
mov
das
cmp
pushf
fwait
leave
stc
mov
jecxz
gs
sub
and
test
not
mov
lcall
mov
mov
jbe
add
mov
jnp
mov
mov
imul
pop
rcll
cmp
dec
pop
add
mov
mov
lahf
cli
pop
mov
lahf
adc
leave
xchg
inc
push
mov
repnz
daa
outsb
dec
bound
or
push
js
or
not
sbb
jbe
jl
mov
push
xchg
imul
mov
xorl
hlt
inc
insb
leave
aad
cmc
push
pop
add
ss
in
loopne
mov
mov
addr16
xchg
mov
mov
rcrb
add
mov
jl
int3
xlat
xchg
lret
divl
ret
arpl
scas
push
dec
test
scas
push
sbb
cli
fiaddl
repz
cmpsb
or
icebp
xchg
loopne
inc
popa
aam
sbb
fldcw
clc
mov
push
arpl
or
sbb
adc
ret
cvtdq2ps
insb
ret
dec
inc
int
enter
xchg
daa
push
jbe
adc
outsl
inc
cmp
jbe
mov
out
mov
xchg
or
inc
daa
dec
adcb
jmp
and
inc
movntq
out
cmpb
out
xchg
dec
scas
mov
xor
icebp
push
or
xchg
lahf
xor
inc
pop
mov
jge
mov
xchg
repz
jbe
cmp
xcrypt-cfb
cmpsl
gs
jo
mov
daa
scas
jns
sub
out
mov
pop
rorl
push
pusha
lret
pusha
mov
mov
insb
sub
mov
jmp
int
add
fs
out
sahf
dec
jnp
push
aaa
or
pop
mov
xor
and
sub
imul
mov
adc
add
jmp
popa
shl
cltd
movsb
aas
outsb
mov
rdtsc
sub
out
nop
es
andb
adc
rclb
and
sbb
fsubl
pop
xchg
inc
in
and
mov
fadds
fmull
cltd
imul
test
add
cmp
xchg
out
stc
xor
adc
jecxz
jae
mov
addr16
fsub
inc
outsl
mov
lock
out
xorl
in
jge
jmp
dec
sbb
std
mov
push
push
shrb
sti
int
call
int
repz
cmp
insb
rorb
lock
test
cmp
jp
aam
jnp
dec
sub
data16
sahf
cld
bswap
scas
inc
in
sbb
dec
jne
ret
jb
pop
ret
jecxz
pop
clc
out
inc
fisubrs
jecxz
divb
and
or
cwtl
xchg
jle
xchg
mov
mov
push
mov
dec
notl
clc
jne
pop
fstps
lock
lock
jo
sahf
dec
mov
or
gs
shrl
lahf
sbb
adc
mov
sarl
sub
xorl
in
jecxz
sbb
xchg
xchg
dec
cmc
and
xor
lock
dec
pop
add
push
sub
les
aam
loop
and
scas
mov
pop
or
add
fldl
cs
pop
out
xor
inc
cmp
inc
in
sbb
bswap
and
sbb
xchg
icebp
cli
sbb
pop
nop
iret
lods
pop
push
je
scas
dec
mov
sbb
pop
test
out
cs
jp
pop
in
jg
mov
mov
dec
xor
test
into
or
jno
mov
push
push
shrb
lret
push
in
loop
or
inc
push
in
ja
mov
arpl
sub
imul
inc
rep
mov
push
or
inc
xor
sbb
cltd
icebp
daa
cmpsb
sub
fs
sbb
pop
mov
loopne
icebp
jl
adc
xchg
clc
cmp
sbbl
call
outsl
scas
inc
repz
aaa
pop
rorb
add
or
push
mov
test
or
adc
shrb
jno
pop
mov
loope
mov
stc
xchg
add
xchg
gs
orl
shlb
pop
mov
jecxz
daa
imul
fsubrs
cld
aad
repz
mov
xchg
jne
sbb
and
idivl
insb
pop
std
mov
push
scas
sbb
lea
int3
cli
iret
mov
or
pop
ja
popa
add
jns
nop
in
int
jnp
mov
push
add
dec
add
push
nop
ud2
es
outsb
inc
inc
insl
clc
daa
aam
and
dec
mov
adc
sbb
fwait
jnp
cmp
neg
xchg
out
cld
mov
jnp
aad
sbb
repz
push
push
mov
cs
filds
cmp
sti
add
pop
sub
xor
int
movsl
inc
addb
cmp
jae
push
mov
scas
jl
lods
ja
or
dec
fdivrs
dec
or
icebp
dec
inc
mov
mov
out
ret
jbe
mov
jl
ficoml
adc
lcall
mov
jmp
scas
adc
iretw
loop
orb
cmp
aam
inc
xchg
cltd
lcall
sbb
lods
lods
decl
mov
mov
hlt
sub
rclb
adc
paddd
pop
push
xor
adc
dec
mov
outsl
ficoms
fstpl
nop
adc
push
out
mov
sub
loopne
cmpb
sahf
insb
adc
insl
call
in
les
fs
pop
push
pusha
dec
rorb
inc
push
mov
sbb
mov
imul
arpl
repnz
cmc
sbb
mov
cmp
dec
sti
imul
cmp
xor
cli
push
or
adc
cmp
mov
jl
notb
es
jno
test
pop
scas
insb
sti
mov
mov
and
sub
fstps
scas
pop
cmp
in
in
loope
and
shll
jo
adc
loope,pt
imul
testl
bound
mov
sub
dec
outsb
fstpl
ds
bound
adc
jmp
push
imul
cld
test
mov
sbb
insl
out
sti
push
sbb
sub
je
pop
cld
hlt
and
mov
lds
out
or
bnd
dec
ffreep
dec
xlat
daa
jg
rorb
mov
ret
dec
js
and
enter
lcall
sub
lcall
aaa
push
xchg
adc
fdivrl
jp
push
pop
push
ret
jg
adc
cmpsl
movsb
cmpsb
stc
das
or
cmp
push
pop
loopne
arpl
push
cmp
pop
xor
cmp
popa
mov
movsb
pop
inc
jb
shr
loope
movsl
punpckhbw
or
dec
es
jmp
cmp
sahf
lods
xor
mov
fucomp
pushf
test
adc
add
filds
add
dec
pop
mov
rcll
xchg
test
xchg
stos
enter
mov
lock
mov
pop
cs
fistpll
shl
jmp
pop
fcmovnbe
fsubs
xor
faddl
cs
jae
gs
adc
inc
insl
loopne
test
xor
push
jecxz
addb
int
xor
jl
xor
subb
sbb
lock
fldcw
iret
sub
or
jbe
inc
mov
xchg
in
add
test
dec
lds
lods
cmp
lret
out
mov
add
cwtl
xchg
scas
lret
loope
cmp
rcrb
in
jl
xchg
pop
notb
mov
mov
sub
add
rolb
orl
rclb
popf
pop
adc
mov
ljmp
mov
cmp
sub
cmp
ret
pop
insb
sbb
dec
in
repnz
and
adc
popa
add
jbe
push
lods
dec
xor
push
xchg
fyl2x
sbbl
pop
and
out
mov
jbe
movsb
sbb
jle
or
in
aas
aaa
das
shlb
pop
sub
lret
mov
ret
es
leave
dec
gs
adc
pop
nop/reserved
and
insl
or
and
inc
xor
cwtl
jp
jne
push
and
rcrl
or
in
in
outsl
sbb
gs
xor
fcoms
subb
xorl
fimuls
jle
sbb
dec
jl
add
aaa
mov
aaa
lcall
add
movsl
jp
fs
mov
mov
test
mov
test
sbb
push
xlat
pop
jo
lods
movsl
imul
mull
sti
popa
in
xor
aas
roll
js
fimuls
jbe
sbb
aam
loope
fstpt
repnz
in
mov
cmp
movsl
hlt
mov
shll
pop
adc
aam
pop
jge
repz
aaa
and
dec
mov
jne
out
mov
or
add
dec
and
sub
shlb
or
or
adc
push
inc
pop
inc
cmp
cmp
pop
xlat
out
ret
push
push
sbb
daa
push
jae
mov
out
xor
xor
dec
mov
sub
mov
inc
jmp
scas
pop
mov
repz
repnz
push
or
sub
pop
dec
add
aam
inc
dec
inc
or
and
adc
fs
jmp
paddsb
fisubl
fnstcw
sbb
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
dec
jmp
add
das
or
aas
aaa
adc
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
retw
jmp
add
sti
add
add
insb
mov
lcall
test
push
inc
mov
pop
and
inc
std
dec
cmp
and
aaa
push
xchg
cmpsb
dec
jnp
int
out
sub
pop
test
scas
mov
pop
stos
insl
adc
adc
xor
or
sub
sub
mov
rorl
rclb
pop
fisttpll
sarl
push
int
std
lods
bnd
pop
sub
mov
loope
test
push
add
and
xorl
iret
dec
adc
aas
push
pushf
mov
and
mov
loopne
cmc
outsl
stc
jge
in
cmpsb
inc
jb
jb
xor
dec
stos
cmp
aaa
adc
inc
mov
bound
es
shl
adc
or
mov
dec
in
lahf
push
sub
pop
int
inc
push
add
xor
jae
mov
test
sub
xchg
scas
fsubs
outsl
lods
rcrb
cmp
dec
cmp
jp
push
test
add
jbe
mov
add
addr16
sahf
aaa
sbb
sar
cmpsb
iret
jno
mov
xor
fistpl
mov
repnz
fcoml
popf
mov
idiv
dec
xchg
pop
popa
arpl
cmp
pusha
rcl
rcrl
push
shlb
xchg
cs
js
mov
cwtl
push
mov
adc
ret
dec
not
sbb
lret
aas
lret
xor
iret
dec
dec
dec
scas
je
xchg
fmull
rcr
push
lret
incl
stc
rorb
lea
loop
cli
xor
pop
sbb
aam
jae
js
mov
lcall
push
flds
pop
ret
xor
pop
and
cmp
jne
movsb
add
or
shlb
xchg
cmpl
bound
jne
adc
ja
idiv
jg
mulb
adc
add
add
and
inc
pop
test
pop
push
bound
icebp
mov
pop
outsb
lea
xlat
pushaw
repnz
and
hlt
push
xchg
sbb
mov
push
std
add
mov
mov
lahf
in
xor
sub
hlt
aad
jmp
sti
cmc
pop
outsb
xchg
je
xchg
xchg
or
xor
sbb
dec
movsl
jl
xor
pop
aad
inc
or
push
jp
mov
and
jle
push
test
inc
imul
fldcw
cmp
in
ja
incl
lds
test
xor
roll
mov
dec
push
imul
pop
sub
insl
cltd
add
xchg
fcompl
iret
pusha
push
adc
ljmp
mov
fwait
addr16
scas
xor
and
mov
cs
push
outsb
cmc
stos
in
ret
xor
xor
push
outsb
sbb
jno
push
dec
mov
dec
test
subl
adc
and
push
push
pop
jne
push
mov
in
jb
adc
repz
inc
pop
mov
stos
ficompl
xlat
fnstenv
jge
add
mov
mov
or
adc
dec
stos
dec
mov
xor
sbb
lods
hlt
mov
adc
or
jecxz
cmpb
cld
mov
cmp
insl
sbb
or
pop
shrl
dec
jno
mov
mov
shrl
lock
xchg
jecxz
pop
pop
movsb
sahf
repnz
cmp
addb
push
dec
stos
lcall
mov
fdiv
fists
mov
pop
out
push
sbb
hlt
lret
les
or
int3
mov
ret
dec
cmp
sarl
jecxz
test
fisttps
inc
jb
xchg
sub
add
pop
sbb
pop
std
jg
fldenv
xchg
add
add
add
sub
hlt
scas
sub
sbb
mov
lea
cmpsb
daa
xchg
mov
scas
aaa
adc
rep
pop
roll
jne
pop
popf
mov
sub
sub
cmpl
cmp
jmp
std
push
rol
int
sub
pop
adc
mov
fs
adc
sbb
pop
mov
dec
xor
jno
in
xor
or
ret
mov
xchg
jg
jnp
xlat
mov
in
mov
sub
cmp
jecxz
test
mov
dec
in
loopne
jbe
fisubs
cmp
and
sub
cmp
imul
cltd
sbb
in
push
fimull
cmp
push
adc
mov
xchg
xchg
push
std
call
dec
mov
cld
pusha
sahf
mov
xor
xchg
dec
popf
into
stos
repnz
xor
ret
sbb
out
sbb
mov
popf
and
fwait
setnp
daa
out
out
in
movsb
sbb
rorl
test
or
cmp
mov
ficoms
popf
dec
leave
in
mov
cltd
jl
cmp
in
jae
xchg
lods
mov
sbb
add
insb
ret
shrb
out
push
fsubl
das
xchg
xor
cmp
mov
lods
xor
xor
hlt
xor
pop
iret
stos
xor
leave
cmpsb
lahf
xor
gs
in
in
sub
sub
rcr
inc
jne
rol
sub
int
lret
xchg
mov
jecxz
aad
xchg
nop
repnz
or
gs
es
shll
insl
adc
sub
mov
xchg
push
xchg
sub
mov
and
push
add
mov
int
mov
adcb
stc
mov
add
add
add
mov
mov
xchg
cli
inc
neg
adc
lea
dec
sbb
scas
adc
adc
mov
movsl
iret
xor
out
je
push
dec
mov
aaa
jl
push
test
rcrb
adc
lods
dec
mov
fsubrl
push
fs
xor
clc
or
fwait
dec
inc
std
iret
fstpl
int
xchg
fsubs
inc
lds
mov
or
dec
sbb
popf
dec
loopne
inc
adc
inc
test
insb
ret
lds
inc
lret
test
pop
and
jnp
sub
jp
or
out
std
enter
sbb
cld
inc
cli
loope
mov
mov
push
bsf
push
cld
icebp
jns
dec
lock
and
dec
mov
jmp
mov
movnti
sub
into
movsl
inc
add
fs
mov
lret
aas
fwait
aam
push
pop
movsb
iret
lea
ss
pushf
push
in
mov
mov
shl
mov
inc
shr
shrl
jecxz
pop
jg
test
imul
adc
push
adc
fiadds
jmp
jae
adc
sub
and
push
adc
cli
test
sbb
daa
jg
les
add
dec
fdivrs
mov
roll
pop
sbb
dec
push
in
and
dec
xor
xor
loope
aas
xchg
xor
outsb
and
adc
icebp
clc
fucomp
jno
xor
add
ds
sub
sti
mov
push
inc
sbb
or
or
outsb
cmp
inc
xchg
sti
imulb
and
inc
aas
xor
dec
dec
insb
insb
addr16
fwait
sub
ja
and
fwait
adc
cmp
out
cmp
push
cmp
add
js
hlt
mov
std
jl
xor
jg
sbb
mov
mov
add
add
add
xchg
lds
add
repnz
push
xchg
jl
fcompl
clc
data16
push
jo
mov
jbe
push
imul
push
xor
jno
push
mov
pop
sarl
push
adc
cli
push
fwait
and
jo
test
dec
out
cmp
cmp
xchg
cwtl
leave
xchg
xorb
inc
movsb
addr16
cmp
push
sub
pushf
subl
mov
je
add
shrl
jno
or
and
pop
xor
mov
aad
add
fcoms
lods
xlat
enter
pushf
pop
mov
cmp
adc
jmp
mov
orl
xlat
pop
test
add
sub
mov
pop
pop
xchg
leave
inc
pop
inc
std
pcmpgtd
push
mov
ss
push
into
push
rcrb
clc
lods
pop
imul
adc
xchg
add
dec
imul
repnz
repz
mov
xchg
cs
test
fs
push
mov
lods
test
sbb
sbb
dec
arpl
adcb
icebp
ret
adc
jne
lret
push
push
jb
mov
gs
stc
inc
fmuls
cmp
int3
cmpsb
xor
mov
or
bound
pop
pop
or
imul
pop
test
dec
out
xchg
or
mov
call
scas
loop
js
or
dec
notl
pop
into
cmc
sub
jns
jecxz
jne
rcrl
stos
xor
cmp
adc
ljmp
mov
push
xor
lea
jo
sub
xchg
mov
int3
into
out
je
adc
aad
jne
cwtl
xlat
cltd
mov
loopne
pop
mov
in
jge
addb
mov
jge
movsl
fdivs
in
add
imul
fdivrl
in
addr16
mov
mov
add
add
add
mov
push
pop
js
xchg
enter
scas
cmp
mov
js
movsb
jecxz
inc
gs
cmpsl
push
dec
out
and
sbb
sub
xchg
push
lds
dec
pavgw
xor
lcall
add
sbb
push
or
jnp
in
push
mov
mov
lods
and
fsubr
inc
or
lea
stos
imul
ljmp
shrb
shrb
scas
inc
jns
jp
jb
xchg
mov
jbe
push
jp
test
cmpsb
mov
xchg
stos
mov
pop
scas
mov
mov
repz
in
pop
adc
stos
dec
arpl
jbe
dec
imul
psraw
jno
pop
pop
push
mov
hlt
fs
pop
mov
out
imul
cmp
inc
daa
mov
xor
mov
pop
adc
push
mov
lods
mov
push
mov
test
stos
fcomps
adc
mov
push
les
ljmp
imul
or
sbbb
nop
aaa
cmc
add
xlat
xchg
inc
in
addr16
push
in
xorb
xchg
aas
ficomps
xchg
cli
jmp
stc
mov
lret
add
xchg
adc
in
jne
adc
les
cs
jp
shl
push
rclb
push
mov
in
scas
mov
inc
mov
ja
sbb
cmp
test
push
es
xor
les
in
mov
xchg
add
sub
push
addl
mov
add
xchg
sbb
test
jl
fisttps
iret
mov
scas
in
adc
shl
shl
aad
or
push
ret
pop
sahf
test
rcrl
push
xchg
hlt
xchg
mov
push
mov
loopne
cmp
ds
add
jg
pop
fstps
ljmp
add
pop
add
mov
stos
adc
push
pop
mov
movsl
mov
dec
sub
test
sub
pushf
loopne
ljmp
push
lret
sbb
mov
xchg
mov
sub
cmpsl
lea
pop
enter
jbe
fsubrs
lret
xor
ret
xchg
cmpl
loope
push
test
xor
pop
cmp
xchg
push
jbe
leave
popa
out
dec
stos
nop
xchg
jle
pop
mov
add
sti
shlb
into
adc
cwtl
add
mov
out
bound
test
sbb
and
push
dec
subb
mov
adc
sti
leave
shlb
cmp
imul
sub
cmp
mov
add
enter
add
dec
std
and
mov
pop
push
xchg
and
xchg
mov
out
mov
jb
imul
push
fldenv
sbb
test
inc
cmpsl
mov
cld
arpl
fidivrs
pusha
sbb
fs
rcrb
ret
mov
pop
ja
jno
out
lods
adc
adc
adc
fsubs
dec
aaa
xchg
test
pop
sti
call
dec
dec
loop
sahf
sub
push
and
ret
aaa
cli
pop
add
push
mov
arpl
fadd
xor
outsb
rolb
js
push
jge
xor
repz
call
add
xchg
js
jmp
jns
dec
lods
push
xchg
sbb
push
cmpsl
lea
dec
mov
push
mov
jnp
loopne
or
popa
idivb
int3
xor
lods
adc
js
mov
cmpsl
movsb
pop
rcl
popa
mov
push
insb
test
or
jae
xor
dec
jbe
and
daa
adc
ja
inc
pop
and
sbb
add
cmc
fistpll
movsb
fidivl
mov
nop
add
sti
add
add
inc
inc
cmpsb
jg
mov
xor
fstpl
sbb
movsb
adc
jae
iret
xor
jp
pop
jecxz
add
shlb
rorb
outsl
push
mov
sbb
in
mov
test
push
enter
mov
mov
test
or
pop
xchg
xchg
mov
rolb
arpl
sub
sub
into
sbb
popa
mov
sub
pop
push
inc
lret
sbb
fs
sbb
xchg
cwtl
jp
jmp
les
imul
cmc
loope
aam
xor
lea
int3
or
movsl
pushf
test
imul
pop
hlt
xor
or
jp
jge
jle
jnp
pop
outsb
inc
push
or
jmp
xchg
cmc
rolb
adc
dec
push
stos
or
xchg
mov
lea
rcr
xchg
dec
pop
cmp
xor
lahf
iret
cmp
and
aam
jns
mov
stc
push
adc
inc
stos
enter
mov
xchg
sub
lods
xor
mov
sbbl
mov
cmp
mov
adc
arpl
fsubl
cli
push
xchg
popa
lcall
outsl
inc
fidivl
sti
jp
negb
add
push
cmovne
push
inc
arpl
lret
into
inc
inc
popa
outsb
into
outsl
stc
pop
dec
xchg
push
in
mov
jnp
jns
adc
jb
dec
or
push
pop
repz
aad
mov
xchg
test
movsb
xorb
sub
xchg
scas
hlt
aad
movsl
mov
dec
ja
cmp
cs
mov
std
pop
fdivrl
dec
clc
push
cld
fbld
xacquire
aam
xchg
add
fs
ljmp
jne
cmp
imul
repz
mov
scas
add
push
movsb
lea
sub
mulb
fs
xchg
add
sti
add
add
jle
mov
mov
mov
dec
lock
sti
fstl
add
dec
jecxz
mov
daa
mov
inc
or
cmc
lahf
dec
xchg
mov
xorl
fnstsw
xchg
xor
sbb
or
rcr
lea
repnz
xchg
mov
xor
fisttpl
push
ret
sub
inc
cmp
les
mov
xor
stos
lods
icebp
out
jp,pt
andl
adc
jmp
aaa
add
and
jbe
pop
int
inc
sub
and
or
cmc
dec
loop
mov
sbb
js
push
push
mov
iret
and
mov
addr16
ficompl
dec
and
fisubrl
scas
cmpsb
arpl
call
and
insl
mov
fisttps
sbb
dec
jecxz
shl
jne
jne
shlb
jmp
loope
in
fidivs
and
mov
ds
rcrl
movsb
daa
int
aam
add
call
jbe
mov
in
pop
fdivs
in
mov
xlat
xor
ret
test
out
pop
leave
cltd
mov
hlt
sbb
push
lds
xchg
jo
inc
add
pushf
lea
add
fdivs
stos
pop
sbb
imul
mov
dec
xchg
inc
xchg
popa
test
sbb
jge
movsb
mov
jg
mov
lods
mov
mov
pop
sbb
push
es
cmp
xor
pop
mov
add
cmp
test
mov
fsubs
insl
xchg
fyl2xp1
cmp
cmp
xor
roll
call
repnz
pop
xchg
jbe
xor
pop
daa
loopne
push
fcomp
stos
stc
orb
neg
add
test
mov
cmp
sti
add
add
stc
add
stos
in
rclb
int3
fdiv
jecxz
ja
push
jle
adc
fbstp
insb
enter
ljmp
loop
push
int
push
mov
pop
mov
push
pop
push
push
xchg
loop
sub
mov
iret
xor
xchg
or
pop
inc
adc
shlb
std
or
push
bound
lods
dec
xor
iret
cmp
and
mov
jb
mov
pop
cmp
int3
xchg
enter
mov
push
sbb
rcr
dec
iret
in
incb
jne
lods
popa
mov
xchg
pop
je
inc
or
ljmp
shrl
cli
push
cmpsb
inc
cmpsb
push
in
stos
mov
pop
iret
adc
jge
push
pop
imul
rolb
aam
cmpsb
jne
arpl
jb
xor
pop
out
and
das
cmc
jnp
mov
cmp
cld
cmpsb
xor
inc
imul
ds
leave
push
lss
movsb
pop
test
inc
mov
stos
push
jl
jp
xlat
mov
cs
pop
mov
sub
aaa
fisubl
mov
notb
mov
lods
mov
stos
dec
lods
xchg
push
mov
pop
jp
add
push
sbb
mov
cmpsl
or
outsl
cmpsb
inc
rcrl
xorl
shl
mov
cld
fdivrs
mul
dec
fstl
dec
fmuls
xchg
pop
mov
add
xchg
mov
lods
mov
adc
or
in
daa
stos
inc
and
shll
ja
inc
fnstenv
imul
sbb
ffreep
jnp
int3
out
into
push
mov
fadds
sub
jl
repz
push
and
push
cli
ret
push
xchg
into
add
xchg
std
jg
mov
lods
lock
xchg
add
sti
add
add
into
mov
clc
adc
pushf
sbb
das
shlb
in
stc
pop
xchg
stc
xor
fs
lods
pop
cmp
mov
mov
mov
fs
es
cmp
or
mov
inc
int3
lret
dec
movsb
imul
push
mov
xor
lahf
and
dec
add
and
lods
add
cwtl
mov
adc
mov
out
mov
push
incb
mov
ljmp
bound
sbb
in
enter
xchg
push
xor
es
lock
stos
xor
dec
aas
lock
imul
cmp
xor
sub
fstpt
insb
movsb
popa
and
popa
jb
sarb
mov
rcrl
out
lret
xor
mov
cmpsl
jp
lds
sub
nop
testb
jl
cmp
icebp
dec
repnz
adc
xchg
push
xchg
pop
mov
stos
cwtl
xor
xor
adc
lret
jle
bound
movsl
push
lods
into
inc
push
dec
dec
das
xchg
fimuls
xorl
add
into
sbb
mov
jmp
jge
sarb
or
push
movsl
sub
mov
mov
mov
inc
testb
call
pop
gs
sbb
stos
je
sub
icebp
stos
xchg
repnz
push
cltd
jl
cld
adc
xchg
pop
add
pop
loopne
inc
in
aas
call
adc
adc
adc
cmp
mov
insl
sbb
popa
lea
mov
xchg
imul
mov
test
mov
or
push
test
iret
pop
inc
subb
gs
mov
bt
sbb
sbb
dec
jl
jg,pn
xor
lret
and
push
dec
and
mov
idiv
iret
rorl
cld
hlt
dec
or
cwtl
add
sti
add
add
add
cld
data16
data16
faddl
xor
fidivl
inc
mov
fstp
dec
bound
push
add
sti
lods
dec
fs
sub
pushf
xor
xchg
lahf
mov
mov
popa
outsb
cmp
mov
inc
test
out
jno
cwtl
inc
sbb
or
movsl
jl
fisubrl
jecxz
and
movsb
jae
cltd
aad
stc
jmp
jge
and
inc
lock
ret
lds
inc
out
push
mov
or
dec
push
cli
or
jmp
jp
or
decb
fidivs
jp
ficomps
in
fisubrs
movaps
imul
xor
int
mov
jno
daa
insb
pop
or
mov
nop
adc
std
adcl
sbb
or
cmpsl
popf
je
push
iret
loopne
ljmp
out
pop
testl
push
add
scas
decl
in
adc
pushf
fsubrl
out
xchg
jb
ficomps
ja
out
jb
decb
and
cmp
in
mov
pop
pop
scas
inc
mov
sub
mov
jl
mov
push
lods
out
jle
shl
js
ja
sbb
mov
mov
push
pop
packsswb
jne
jnp
jo
lea
sbb
fcompl
adc
push
push
push
mov
push
lret
fistps
cmp
shlw
outsl
mov
outsl
cmp
dec
js
xor
mov
mov
ror
imulb
lahf
sub
pusha
pop
test
mov
sbb
and
repz
mov
xchg
dec
test
sbb
out
adc
push
dec
or
sub
pushf
pop
int3
sar
mov
fdivl
add
ret
mov
ja
or
lcall
xchg
out
push
mov
mov
jae
in
jle
dec
xor
inc
shrl
jge
and
xacquire
stc
mov
xchg
xor
adc
mov
js
sub
movsl
pusha
add
shrl
aad
lods
jnp
push
dec
popl
and
aad
mov
push
mov
mov
mov
pop
jo
mov
jnp
lahf
sahf
test
cmp
stc
push
lods
movsb
sub
cltd
in
jbe
stos
push
out
nop
shrb
clc
pop
cwtl
pushf
sbb
xchg
inc
adc
sbb
pop
adc
jecxz
rcl
xchg
inc
jp
and
roll
mov
aad
sub
cmpb
fsub
sub
sub
push
je
dec
insb
or
loop
adc
cmp
jnp
sbb
sti
sbbb
ja
and
mov
jo
sbb
push
lcall
mov
xchg
sub
imul
pop
imul
jbe
loop
jae
imul
sub
jne
push
or
addr16
mov
pusha
inc
cltd
pop
imul
ror
std
std
push
lods
into
pushf
xchg
xchg
cmpsl
xchg
int
bound
es
xchg
stos
pop
loopne
imul
sbb
mov
pop
ja
or
pop
jl
pop
xlat
scas
jne
ficomps
dec
inc
lret
and
test
push
jecxz
das
jmp
inc
xor
jb
inc
add
ss
jbe,pt
sbb
and
cmc
ss
pop
std
xor
xchg
std
inc
les
mov
mov
das
push
xchg
in
jle
fcomps
xor
dec
pusha
push
aam
mov
gs
inc
lcall
push
pop
mov
mov
lods
mov
push
push
inc
mov
orb
mov
add
push
jle
xlat
lret
push
testl
pushf
add
sti
add
add
push
push
stos
es
or
pop
and
adc
jecxz
int3
mov
movl
ja
into
ss
push
hlt
loopne
push
fisttpll
lahf
jbe
jae
pop
cmp
sbb
int3
stc
jb
dec
xchg
ja
insb
jns
xlat
fcomps
cmp
rcl
add
mul
adc
stos
icebp
sub
lods
jmp
into
mov
ljmp
and
test
pop
jne
lahf
les
rcl
aas
and
or
movsb
sbb
xchg
addr16
notb
mov
mov
xchg
or
sbb
add
adc
iret
iret
jno
out
sub
sarb
lea
pop
mov
cmpsb
sbb
push
add
mov
pop
jne
jo
or
stos
cmc
in
cmc
mov
je
dec
add
lret
mov
outsl
add
pop
jnp
sbb
out
popa
fnstcw
aad
imul
out
jne
mov
lcall
test
ljmp
aaa
dec
xchg
std
dec
lret
jl
imul
jo
cmpsb
test
sbb
loope
pop
sahf
jns
gs
pop
fcomi
cmpsb
pop
add
dec
mov
pusha
xchg
stos
inc
std
jbe
loopne
lock
sub
or
lcall
gs
adc
lcall
arpl
clc
pop
das
xchg
xor
stos
scas
or
popa
and
std
push
gs
xor
mov
pusha
fnsave
xchg
movsb
xor
add
loop
sti
and
ror
leave
jo
dec
cmpsl
jno
add
adc
shl
loope
xchg
mov
scas
sub
sbb
fsubs
jne
cmp
aaa
xchg
add
push
or
pop
out
repz
fucomp
jnp
insl
pushf
ret
add
add
add
gs
xchg
sbb
loop
xlat
adc
movsl
push
and
lret
fisttpll
inc
adc
fwait
lcall
js
pusha
test
inc
aad
mov
and
pop
jmp
and
lds
stos
or
pop
sbb
fwait
ret
ret
cs
dec
mov
push
mov
stos
jle
sti
mov
out
dec
mov
pop
push
hlt
jae
int
jns
cmp
scas
shl
push
fwait
jle
pop
xchg
imul
add
aaa
ljmp
scas
fwait
cmc
xor
pusha
mov
and
lret
int
push
repz
arpl
pusha
push
lods
pushf
scas
sbb
adc
stos
shlb
push
xchg
imul
sarl
cmp
lret
into
xchg
fidivl
leave
cmpsl
and
jbe
out
push
cmp
pop
loope
repz
adc
ret
xor
aam
push
lret
cmpsb
and
push
cmpsl
int
push
sahf
push
fwait
mov
fldl
push
ret
fcomps
hlt
ljmp
pop
out
mov
aaa
std
imul
fld
stc
push
mov
sub
jno
sarl
push
sbb
add
aam
jne
sub
stos
stos
push
inc
xchg
cmp
push
lahf
iret
jle
xchg
lods
xorb
mov
fidivrl
insl
in
sub
lea
jl
mov
fld
data16
jb
jl
pop
mov
push
push
and
dec
pop
test
sbb
inc
stc
movsl
adc
xchg
movsb
pop
fisubs
or
ret
outsb
jo
repnz
in
dec
clc
jns
shlb
lret
adc
iret
cld
pop
push
out
mov
jecxz
add
mov
xor
stc
aad
xor
jne
leave
xchg
insl
mov
out
nop
sbb
xchg
ret
add
sti
add
add
xchg
inc
push
mov
cmp
pop
int3
push
push
lret
adc
sub
sub
loop
or
pop
push
in
mov
fisttpl
stos
data16
mov
jbe
addr16
dec
dec
push
popf
jp
and
subb
sbb
cmpsb
in
daa
stos
inc
pop
pop
mov
stc
push
cwtl
inc
mov
xchg
mov
pop
jb
enter
imul
push
push
adc
or
xor
aas
jns
iret
push
outsb
pop
mov
mov
add
dec
sbb
mov
dec
mov
mov
stc
pop
mov
mov
les
insb
insl
ljmp
lret
call
pop
lcall
and
scas
push
fisubs
dec
jmp
xor
imul
scas
imul
sbb
cmp
or
and
and
adc
pop
jmp
fs
notb
movsb
fldt
pushw
adc
adc
rcl
cmp
sub
iret
pop
test
pop
out
fsubs
insb
xchg
jmp
pop
sub
pop
sub
insl
add
ret
test
ja
add
add
or
jge
outsb
dec
lcall
inc
adc
ret
add
mov
mov
jge
sub
stc
jbe
xchg
insb
dec
arpl
pop
mov
xor
mov
scas
outsb
pushf
lock
sbb
mov
repz
orl
je
in
ss
add
out
pop
das
mov
rol
sub
repz
stos
fimull
dec
lods
lds
mov
es
ljmp
pop
mov
push
int
or
mov
or
and
xchg
rclb
sub
fcomps
add
dec
out
ja
idiv
pop
out
cmp
pop
dec
mov
add
add
leave
push
adc
movsl
cmp
add
shlb
out
jg
addl
sbb
mov
sub
outsl
sbb
in
push
xor
adc
adc
loopne
jp
adc
xchg
outsl
xor
ror
mov
fildll
inc
loopne
stos
test
lcall
std
stos
into
dec
mov
and
scas
adc
addr16
jg
dec
and
xchg
mov
and
sti
push
gs
inc
faddl
adc
inc
scas
lods
inc
mov
mov
adc
dec
je
dec
add
ljmp
and
cmp
not
out
inc
and
xchg
in
sbb
xchg
mov
enter
xor
iret
sub
or
xchg
push
sarb
xchg
jp
xlat
in
pop
fnstenv
pop
cwtl
dec
inc
mov
jp
imul
movsb
daa
or
adc
push
movsl
subl
mov
dec
push
mov
sti
jns
loop
push
add
stc
call
fildll
stos
fdivl
std
sub
test
jl
jp
dec
mov
push
das
ja
sbb
or
scas
xchg
sub
loopne
and
icebp
sbb
xor
out
mov
mov
sbb
insl
scas
jmp
rcrl
sbb
pop
xchg
xorl
add
sub
rcll
push
cmp
out
pop
fwait
loop
and
mov
rcrb
jo
cmpsl
or
adc
mov
or
inc
add
sahf
cltd
sub
imul
mov
cli
popf
roll
xor
cltd
sbb
push
pavgb
mov
out
jle
xchg
xor
jae
sbb
mov
popa
test
inc
pop
push
icebp
add
sti
mov
inc
jno
dec
clc
mov
add
sti
add
add
roll
iret
add
lahf
mov
inc
jb
and
iret
pop
push
out
aaa
dec
ret
in
push
or
xchg
or
mov
dec
loopne
sbb
int3
out
dec
inc
adc
mov
jb
lahf
mov
cli
divb
push
mov
addr16
adc
ljmp
sub
paddq
shlb
call
dec
repnz
es
or
dec
jno
mov
push
pop
mov
hlt
nop
and
push
rcrl
mov
add
jp
test
sub
mov
insl
leave
in
jl
fsub
mov
sub
jae
mov
movsb
xor
fwait
mov
mov
clc
sbb
roll
pop
into
dec
xor
cltd
lods
loop
sti
jle
iret
xchg
imul
ja
popf
sahf
out
nop
pop
inc
test
rclb
xchg
js
sub
shll
xchg
test
in
mov
daa
or
or
cli
out
sbb
and
adc
sub
mov
push
pop
arpl
rcll
outsb
push
ljmp
lret
jb
fldl
xor
mov
cli
pop
pop
cmp
popf
and
push
sub
lds
outsb
mov
inc
idivb
loope
lret
inc
add
jae
adc
fs
pop
jae
popa
lcall
je
mov
mov
push
xor
ss
mov
int3
dec
xchg
mov
mov
les
ret
lahf
mov
dec
stc
cli
jmp
jbe
xchg
rolb
mov
inc
sub
adc
mov
les
add
dec
ficoms
dec
jmp
mov
pop
cmp
clc
sbb
mov
cmp
sub
sbb
jecxz
xorb
push
rclb
add
imulb
add
add
sahf
xor
sub
mov
add
add
add
xlat
xor
xor
into
mov
shll
lret
cli
add
push
out
shrb
xchg
inc
adcb
mov
addb
ss
hlt
push
shlb
aam
mov
gs
movsbl
inc
sub
ret
shufps
and
imul
fmull
xor
imul
xor
ds
jecxz
fcoms
loop
cltd
add
test
dec
add
mov
xchg
test
push
mov
ljmp
mov
sbb
or
pop
test
int3
fwait
or
je
xchg
outsl
xor
popa
xchg
mov
fmul
and
arpl
push
jnp
xchg
ret
rorb
test
xchg
dec
mov
sbb
aas
dec
int
pop
sbb
dec
mov
push
inc
or
loop
sbb
bts
rcr
in
xchg
jb
xchg
fidivrs
ljmp
outsl
adc
or
mov
loopne
adc
imul
ljmp
in
fadd
shr
xchg
dec
in
fcomi
stos
cmp
push
in
mov
sbb
inc
call
enter
jmp
outsb
ds
leave
jns
add
or
mov
add
shrl
out
test
aam
jg
fcompl
stos
add
jge
js
jmp
out
dec
test
push
jle
push
ficompl
popf
xchg
call
and
out
mov
ret
xorl
movsb
xchg
sbb
mov
mov
inc
js
and
add
mov
cmc
fst
adcl
lcall
ljmp
mov
jl
hlt
xor
adc
sub
xor
je
cmpsb
add
std
in
mov
mov
std
cmp
mov
test
add
add
xchg
mov
fdiv
aam
lods
sbb
sbb
cltd
dec
insb
dec
adc
or
dec
add
movsb
cmp
mov
in
das
jp
cmp
sti
push
imul
rorl
add
dec
mov
jl
inc
sbb
mov
cli
xchg
mov
push
arpl
clc
mov
sbb
into
xchg
stos
cs
pop
dec
test
cmpsl
aas
mov
popf
adc
aad
mov
cmp
std
aas
arpl
mov
cmp
daa
xor
neg
jo
mov
sbb
pop
clc
mov
push
or
dec
std
mov
jne
lahf
cmp
sbb
pop
add
xchg
push
xlat
stos
sub
lcall
xchg
push
adc
cwtl
sbb
push
mov
or
pop
cmp
add
sbb
shr
jmp
loop
mov
push
js
inc
add
and
mov
xchg
mov
xchg
and
mov
dec
fbstp
adc
push
inc
test
outsb
movsl
and
lods
mov
xor
ja
repnz
xchg
fimull
fldt
pop
or
enter
mov
enter
adc
sub
into
xorb
jo
adc
out
pop
sub
movsb
pop
push
test
or
xor
adc
mov
push
xor
aas
scas
test
mov
imul
mov
dec
add
stos
mov
pop
mov
das
in
int3
movb
push
jge
xchg
pop
cmp
ret
rorl
ss
push
lods
cmc
loop
mov
mov
pop
js
stos
pop
rcll
adc
ss
xor
mov
mov
xchg
xchg
xor
repnz
testb
inc
movsb
js
insb
movsb
stos
add
sti
add
add
pop
outsl
hlt
ficoms
or
lret
sub
push
cmpsb
cs
sti
in
dec
cli
sub
aaa
mov
or
pop
test
lret
mov
adc
rorl
mov
aaa
jo
ds
inc
adc
mov
pop
and
inc
in
mov
fwait
dec
xchg
sar
add
sub
loop
cmp
in
loopne
dec
mov
cltd
sahf
dec
fbstp
stc
pop
rcll
dec
fdivs
mov
jmp
call
push
adc
aas
mov
and
mov
and
pop
sbb
jp
adc
or
lahf
jmp
xchg
loopne
mov
jmp
dec
lods
aas
ret
inc
sub
stc
iret
in
int
test
dec
jg
lcall
insl
mov
ret
push
inc
mov
movsb
sahf
sub
fldl
push
mov
js
cld
int
dec
xlat
push
lds
xchg
loope
insl
cli
fxch
lea
xor
dec
push
rolb
icebp
jle
lods
subl
mov
cmp
das
lahf
mull
sti
clc
rcr
lods
inc
cmp
stos
inc
hlt
mov
push
insb
inc
cmp
lret
xorl
pop
inc
push
push
fwait
cmpsb
and
cld
in
cmpl
mov
mov
mov
add
mov
cmpsl
loop
adc
add
jecxz
fcomps
push
jmp
pop
lret
scas
adc
mov
xor
mov
sub
sbb
inc
xchg
pop
lds
push
fists
push
fs
orb
stos
and
xchg
arpl
mov
or
test
xchg
das
pop
je
push
xor
xor
lock
jecxz
pop
add
popa
data16
gs
mov
iret
sti
xor
lods
add
sti
add
add
lcall
xchg
andl
fcomps
ss
cmp
dec
outsb
sahf
test
test
cmp
loop
or
stos
xchg
adc
push
mov
xchg
pcmpgtd
jne
xor
mov
imul
mov
das
movsl
ljmp
push
inc
lock
shlb
cmp
cmpb
sub
popl
gs
and
popl
mov
mov
insl
inc
das
sub
ja
mov
dec
call
out
jg
ljmp
push
mov
cmc
lods
sub
mov
leave
sbb
iret
xor
jl
ljmp
inc
cltd
std
inc
mov
pop
in
dec
mov
adc
mov
lret
sub
ret
outsl
in
dec
cmp
and
adc
je
repnz
and
pop
sub
popa
jl
popf
cmpsl
push
or
cmp
das
in
sbb
popa
and
push
lea
cmp
pop
xor
fdivrs
cld
js
sahf
es
cmpsl
cmp
je
pop
mov
outsl
icebp
lret
mov
adc
push
sub
iret
mov
cmpsl
ret
fwait
cmp
mov
adc
push
xchg
nop
movsb
mov
dec
sub
or
cmp
stc
push
lea
jae
inc
in
shr
mov
movsl
das
cmp
testl
arpl
imul
jle
repz
mov
adc
push
and
aam
sub
push
ss
sarb
jle
cwtl
divl
or
mov
addl
cmp
pop
and
mov
test
dec
fwait
jmp
inc
mov
pop
cmp
mov
inc
out
stos
sti
sub
daa
das
pop
adc
fdivrs
xor
call
xor
add
mov
rcrl
repz
cli
cmp
adc
loopne
xorb
add
sti
add
add
sbb
cmpsb
jge
outsb
sub
mov
into
add
cmp
mov
ja
xchg
pop
sbb
fldenv
and
les
ja
test
dec
sbb
xor
shr
push
ss
scas
sub
inc
inc
pop
xor
mov
das
data16
bound
cmp
rcrb
data16
mov
mov
mov
fwait
push
mov
out
or
pop
or
and
test
orl
idiv
test
fidivs
enter
imul
push
icebp
mov
daa
cwtl
loop
cmc
or
nop
push
int3
enter
ffree
mov
fwait
or
testb
jmp
sub
sahf
test
std
pop
iret
mov
mov
aam
loopne
in
mov
imul
sbb
xchg
out
mov
addr16
xchg
cmpsl
rorl
inc
les
popf
sbb
dec
mov
inc
jge
jmp
insb
jp
cmp
dec
sbb
dec
sbbb
xor
in
fildll
stos
fstpt
sbb
cmp
sub
mov
test
outsb
sbb
pushl
idivl
loopne
mov
dec
rorl
sti
fcomps
mov
loopne
insl
xor
mov
scas
mov
or
dec
mov
jmp
das
pusha
or
push
mov
outsb
scas
in
adc
imul
lret
ror
sub
lcall
out
lret
and
mov
cmp
rorb
mov
cmpl
cmpsl
dec
inc
xchg
adc
mov
pop
aam
add
and
push
push
cmp
mov
mov
add
add
add
mov
inc
cmp
dec
imul
and
imul
outsl
lcall
iret
add
dec
popa
rorb
mov
addr16
pushl
xchg
and
popa
testl
ss
sbb
fadds
sub
adc
aas
push
movb
popf
fmul
cmc
std
hlt
ljmp
gs
adc
inc
jle
fcmovnbe
test
mov
jo
dec
and
cli
lods
roll
fwait
imul
mov
jmp
int
push
insl
cmp
xchg
lret
mov
out
dec
ljmp
mov
lds
insl
pop
rolb
and
aaa
sbb
mulb
mov
inc
repnz
cmpsb
orl
cli
cld
cs
inc
in
sbb
push
out
push
and
and
mov
inc
pop
xlat
es
imul
jge
addl
pop
in
mov
ljmp
and
test
jle
inc
xchg
jecxz
sbb
dec
mov
xchg
shl
pop
int
lea
dec
xchg
inc
jns
mov
ds
inc
adc
xlat
aas
xchg
stos
jl
stos
xchg
fnstenv
mov
jmp
xchg
xor
fcoml
push
push
int
divl
add
outsb
or
mov
das
iret
jg
mov
add
push
imul
ss
jl
jmp
stos
mov
mov
call
xchg
dec
dec
pop
pop
push
push
mov
mov
pop
dec
mov
shl
xadd
pop
clc
push
sbb
dec
inc
pop
ljmp
fs
mov
test
shlb
pushf
popa
cmp
ja
fnstsw
mov
in
outsb
fs
scas
xor
test
add
add
outsb
push
sbb
call
int
mov
xchg
movsl
fwait
insb
xorb
int
fs
and
mov
and
lds
cmp
cmp
add
xchg
jno
repz
sbb
icebp
push
inc
cmp
mov
out
sbb
scas
test
fisubrs
add
sahf
pop
push
push
push
insb
or
push
stos
sub
hlt
int
andl
mov
fsubr
call
mov
mov
data16
inc
and
lock
ds
test
dec
cmc
adc
hlt
mov
outsb
mov
insl
fsubrs
sub
mov
lods
mov
stos
in
or
or
xor
scas
adc
cs
dec
xor
jbe
shlb
mov
nop
scas
push
iret
cmp
mov
and
cmp
or
or
in
push
and
ret
push
repz
or
ud1
cmpsl
popf
jg
mov
jecxz
test
sub
ja
xchg
pop
loop
addr16
sbb
pop
ss
hlt
fs
pop
cmp
pop
shrb
imul
fimull
lods
cmp
cmp
add
cld
sbb
sub
or
xor
dec
sub
mov
ror
mov
sbb
inc
pop
jae
fcoml
shlb
push
pushf
sub
mov
iret
push
js
pop
push
in
cmpsl
dec
mov
jnp
mov
and
paddusb
inc
dec
push
jnp
mov
es
loopne
xor
inc
pop
bound
icebp
shll
mov
mov
xlat
mov
out
adc
pop
dec
lahf
lcall
test
test
mov
int3
incb
mov
fwait
add
inc
mov
jb
nop
inc
pop
mov
add
mov
push
lods
and
add
lcall
lods
pop
ljmp
aam
in
insl
aad
sbb
leave
and
es
rclb
daa
mov
lret
lock
mov
adc
mov
cmc
addr16
enter
jbe
and
mov
scas
or
mov
inc
xor
test
js
push
sbb
shrb
push
cwtl
fistl
mov
frstor
leave
lods
inc
cs
lcall
pop
dec
pop
inc
flds
adc
jl
arpl
xor
jl
lret
mov
mov
in
sbb
shlb
movsl
pop
int3
push
push
cmpsb
pop
dec
mov
push
je
xchg
pop
nop
and
mov
das
pop
cmpsl
jnp
pop
pop
mov
cs
mov
jp
sub
jb
jae
lock
mov
pushf
xlat
adc
adc
iret
cli
imul
mov
test
mov
mov
imul
push
repnz
cmc
mov
adc
pop
notl
and
pop
push
mov
dec
loopne
inc
xor
push
adcb
mov
push
sbb
aad
ret
cwtl
daa
mov
adc
jmp
ja
mov
xchg
and
pop
pop
fnsave
stos
sahf
outsl
mov
dec
or
inc
in
jne
lea
cmp
roll
jbe
insb
iret
inc
mov
nop
pop
popf
xchg
xor
mov
mov
pushf
icebp
test
fsubrl
add
call
repz
and
repz
faddl
rorl
mov
icebp
call
sti
aam
int
pop
popa
pop
cmp
out
je
inc
outsb
loop
call
into
aaa
in
sbb
or
add
mov
cmp
mov
movsl
add
add
add
add
addr16
fadd
inc
mov
or
add
pop
movsb
xchg
idivb
ljmp
lcall
ficoms
das
cltd
fildl
add
sbb
nop
mov
hlt
sbb
mov
fucomp
and
pop
mov
mov
and
push
xchg
sti
inc
and
push
aas
mov
leave
popa
bound
scas
cwtl
lock
and
ljmp
lret
cld
pushf
jmp
pop
inc
jo
out
dec
xor
es
jo
enter
iret
rcrb
jno
mov
fistl
stos
mov
inc
ficomps
arpl
sbb
int
into
or
hlt
hlt
jb
adc
inc
dec
sbb
mov
orb
or
stos
pusha
imul
dec
orl
dec
sub
push
pop
scas
out
aam
lcall
pop
lods
shll
cmpl
cmpsl
pop
cmpsb
les
nop
aam
and
adc
xchg
xor
xlat
pop
pop
idivl
push
mov
jb
shll
sub
mov
mov
sub
inc
and
inc
lcall
dec
test
fmuls
sub
addb
lcall
and
and
rcr
adc
pop
movsb
repnz
out
lret
mov
fistpll
mov
push
gs
jge
and
test
sti
jge
xchg
push
test
test
xor
jmp
ja
aam
rorl
add
daa
in
iret
mov
dec
jns
bswap
in
dec
inc
push
pop
mov
ret
push
xchg
icebp
fs
es
fisttpll
pop
lcall
insl
pop
pushf
out
or
push
xor
sub
and
fldcw
jecxz
cmp
add
sbb
out
idivl
test
xchg
sbb
mov
add
xchg
arpl
pop
sbbl
inc
out
imul
aam
jb
loope
and
mov
in
aaa
fstpt
adc
dec
popf
les
data16
add
jg
movsb
pop
push
clc
jl
mov
or
pusha
sub
push
pusha
test
mov
mov
dec
icebp
and
js
add
cld
mov
or
cmpsb
dec
push
sub
or
sbb
popa
shlb
mov
push
btc
enter
fadd
cltd
daa
adc
loope
or
dec
mov
popf
rcr
mov
cltd
das
mov
and
mov
jg
inc
push
push
adc
push
xor
dec
fsqrt
jne
dec
leave
inc
test
fsubp
inc
dec
mov
in
aas
scas
and
pop
inc
addl
cs
dec
xchg
andb
jmp
push
add
pop
add
pop
mov
mov
and
adc
mov
mov
repnz
inc
jecxz
jnp
aad
add
mov
and
fbld
insb
inc
mov
mov
sub
sahf
sbb
pop
scas
mov
bound
cltd
inc
dec
add
xorb
mov
in
sub
les
lods
xchg
enter
jecxz
adc
aam
in
cmp
sub
test
fwait
lahf
stos
repz
pop
jnp
mov
negl
das
jbe
mov
xchg
inc
iret
repz
mov
pop
cmp
push
mov
add
dec
rolb
outsl
cmp
xchg
dec
repz
stc
dec
hlt
js
jge
ljmp
sub
and
adc
orb
in
sub
xor
dec
gs
imul
ja
lret
fnstsw
cli
shl
push
fwait
loopne
shrb
xor
sub
xorb
aam
shrb
test
add
sbb
fsin
out
fs
popf
outsb
mov
nop
lret
add
sti
add
add
scas
jo
fwait
pop
and
jle
cmp
add
insl
pop
mov
add
ss
mov
lock
push
mov
daa
lods
icebp
lock
or
stc
iret
test
jmp
sbb
movsb
push
fwait
lret
into
insb
pop
les
lcall
subl
pop
pop
dec
push
inc
lea
push
jecxz
pop
dec
mov
je
fldcw
das
outsb
ficomps
sub
mov
inc
insl
imul
and
cmp
movsl
jae
pop
test
dec
sub
mov
mov
pop
jnp
mov
cli
inc
dec
loopne
daa
shlb
lret
scas
gs
mov
pop
nop
xlat
mov
xchg
and
imul
xor
dec
adc
mov
ds
enter
jb
jns
dec
out
outsb
jo
js
in
inc
jg
fcmovnu
in
add
sub
sbb
imul
push
push
push
or
scas
sbb
loope
inc
dec
test
mov
leave
mov
cld
js
adc
mov
adc
mov
imul
imul
sti
push
cmp
or
jl
enter
out
xchg
adc
ficomps
jg
xlat
pop
push
stc
mov
call
int3
push
scas
hlt
insb
dec
cmc
mov
or
cmp
mov
cmpsl
movsl
frstor
dec
scas
call
outsb
leave
jge
mov
icebp
outsb
pusha
mov
xchg
sbb
sub
push
pop
xchg
popf
cmp
jnp
jecxz
sarb
pop
push
sti
jecxz
inc
repnz
cli
mov
aad
xlat
daa
cltd
mov
xlat
mov
adc
fbld
aam
insl
jne
sbb
bound
int3
push
sar
mov
inc
add
fsubs
jmp
adc
jl
dec
dec
push
mov
sti
add
add
stos
jp
inc
loopne
and
das
movd
les
bound
jmp
popa
jp
jbe
mov
fs
stc
test
sbb
sbb
mov
dec
push
adc
and
or
push
pop
add
inc
out
add
lea
rorb
aas
add
cmp
sahf
loopne
mov
xorb
mov
xchg
loopne
sahf
rcrb
pop
test
jp
into
ror
mov
out
in
sub
sbb
vpaddw
data16
ss
hlt
scas
fwait
jns
mov
cmp
mov
xchg
out
paddsw
push
hlt
push
xor
outsl
adc
mov
adc
pop
sub
scas
movsb
lret
sub
icebp
add
pop
sbb
jge
sbb
inc
data16
popa
and
cmp
xchg
sti
notl
je
leave
sbb
or
sub
sahf
imul
add
mov
testb
jmp
inc
inc
jg
adc
mov
ja
sbb
jmp
add
mov
and
mov
adc
in
sti
mov
push
and
mov
int3
or
ds
bound
jnp
in
sbb
test
in
jg
orl
clc
sarl
out
jge
dec
frstor
imul
rcrl
mov
sti
imul
pop
stc
inc
lea
aad
arpl
cwtl
sahf
out
xchg
cmc
push
out
cli
pop
xlat
mov
rorb
xor
jo
push
leave
add
out
inc
gs
test
or
loop
sbb
cltd
cltd
sar
cs
clc
or
ja
mov
ficompl
fldenv
xor
push
xor
nop
push
sbb
and
stos
jle
scas
xchg
or
add
and
xor
sub
mov
mov
add
mov
out
push
jb
sub
in
fs
adc
mov
cmp
fiaddl
fsubl
sahf
or
mov
lahf
aad
gs
adc
adc
pop
lods
test
in
mov
ret
lret
aaa
and
or
cwtl
mov
sarb
insb
je
or
ret
add
or
cmpsb
subb
lock
and
add
xor
mov
jns
sub
cmpsb
or
ljmp
out
mov
pop
fdivr
ds
fmull
mov
xchg
hlt
test
jbe
inc
ret
or
stos
or
divb
int3
dec
cmp
das
jmp
or
fldt
dec
in
movsb
push
and
test
imul
mov
mov
lock
inc
pop
sbb
mov
data16
add
jl
push
cmpsb
adc
cmpl
xchg
aas
mov
rcl
ret
idivb
jne
jns
repnz
aaa
call
jae
xchg
mov
lods
push
repnz
outsl
mov
sbb
mov
lods
xchg
and
mov
add
gs
sbb
cmc
insl
ljmp
std
js
jp
adc
mov
xor
daa
inc
fmull
xchg
fwait
je
clc
addr16
add
mov
sahf
cmpsl
test
out
or
scas
bound
pop
cmp
movaps
sbb
pop
inc
movsl
push
cmp
les
push
sarl
xchg
xor
mov
xor
aad
incb
adc
push
xchg
popl
gs
repz
arpl
adc
call
mov
insl
in
pop
inc
stos
add
pop
mov
jg
data16
sbb
jo
sub
add
sti
add
add
and
push
cli
pop
inc
push
mov
pop
xor
fnstenv
stos
fimuls
pop
scas
sbb
fs
mov
xchg
push
jmp
lcall
mov
fstpl
mov
iret
sbb
jb
scas
lods
outsl
daa
adc
fdivs
outsl
mov
pusha
sbb
sbb
rcrb
xchg
and
das
xchg
outsl
cmp
addb
inc
stc
fucomi
xchg
add
xchg
dec
dec
repz
dec
jmp
sub
adc
repz
inc
jns
add
adc
movsl
pop
lods
mov
fadds
add
int3
rorb
mov
sbbb
jle
js
or
cli
add
jae
cmp
push
xchg
mov
mov
mov
push
mov
out
test
sub
mov
popa
push
cmc
xchg
lds
xchg
sarl
dec
mov
test
jl
inc
push
std
inc
add
push
or
dec
in
mov
imul
das
xchg
or
add
xchg
mov
or
ljmp
jns
mov
mov
rcrb
mov
xor
clc
or
xchg
lods
fidivrl
ret
xlat
xor
daa
scas
mov
xor
add
xchg
jno
jo
xchg
aad
cmp
pusha
jge
push
in
jns
pop
hlt
mov
xor
stc
jae
addr16
pop
or
dec
mov
fdivr
jb
test
sbb
adc
lods
ret
jno
mov
push
iret
nop
jns
cmc
push
loope
push
lock
scas
xchg
js
repnz
xor
push
outsl
ss
xchg
loopne
stos
insl
adc
fstl
insb
ficoms
jo
aam
clc
inc
popa
decl
jle
sbb
into
mov
add
pusha
jbe
out
test
stos
outsb
or
add
add
add
push
inc
and
insb
pusha
inc
pop
pop
in
mov
add
sbb
mov
jne
bound
pop
mov
fstl
adc
sub
pop
shrb
push
cmpsb
push
add
std
sbb
push
hlt
aam
repnz
popf
cs
fcmovu
sbb
cli
add
push
in
roll
dec
mov
sbb
inc
stos
rcrl
xchg
push
ja
xor
dec
mov
test
int3
scas
cmp
push
and
shlb
aaa
add
jae
inc
dec
inc
ds
adc
mov
xor
mulb
mov
data16
add
sbb
adc
pop
sbb
out
adc
add
xor
ss
mov
pusha
imul
pop
sbb
insl
mov
fstps
fwait
or
imul
inc
fsubs
push
lea
cs
xchg
je
lahf
pop
jge
and
push
fwait
or
js
mov
in
ja
pop
and
out
xlat
inc
adcb
scas
fcoml
mov
jle
or
mov
js
xor
and
cmp
jge
xor
sbb
push
jmp
cmpsl
push
mov
xlat
clc
mov
es
push
inc
dec
dec
inc
dec
cmp
lcall
movsl
cltd
inc
fimull
sub
mov
out
sahf
xchg
pop
dec
cld
push
xchg
shr
das
shr
sti
stc
inc
adc
cs
out
rcr
inc
pop
mov
hlt
fwait
inc
sub
inc
arpl
fistpl
pop
mov
rorb
jl
xchg
mov
repz
xchg
inc
lock
cs
adc
mov
movsb
lcall
sub
out
and
iret
cmpsl
sub
test
test
in
in
mov
xchg
fcmove
add
pop
lcall
addr16
lods
push
cld
arpl
add
sti
add
add
lock
cmp
fstp
mov
sub
mov
cli
push
sbb
enter
sbb
enter
push
or
mov
jmp
test
and
mov
clc
lea
xchg
inc
mov
push
cs
pop
dec
sub
pop
aad
repz
out
iret
rol
repz
cmc
sub
jns
pop
clc
mov
sbb
divb
inc
inc
and
push
push
orb
sarl
rcrb
adc
ljmp
test
sub
les
adc
mov
inc
aam
or
add
mov
xor
sub
enter
or
mov
loope
xor
popf
rcll
cmpsb
call
dec
jbe
nop
in
je
xor
cwtl
loope
sub
bound
in
mov
jmp
xor
xor
pop
sbbb
mov
shrl
insb
cmp
jae
jbe
fadd
mov
fwait
scas
push
repz
pusha
cs
pop
xor
shr
ret
pop
push
fisubrl
mov
movsb
pop
movb
jnp
hlt
cmp
mov
sub
xlat
fwait
cmp
nop
arpl
or
inc
rcr
fucomi
dec
cs
jle
out
push
xchg
out
adc
fisubl
mov
mov
sub
sub
dec
fs
out
out
pop
mov
adc
xlat
stc
es
out
sbb
and
push
imul
andb
fiadds
fildl
mov
stos
adc
mov
adc
adc
push
xchg
add
shrb
dec
iret
sbb
inc
xchg
sub
xorl
fcoms
pop
out
arpl
insb
sub
outsl
daa
insl
push
addb
imull
jnp
movb
sti
add
add
sbb
adc
lahf
js
cli
sub
cmp
jge
test
inc
imul
or
sub
sub
fisubs
js
bound
dec
sub
push
mov
xchg
popf
lret
mov
outsl
mov
fmull
push
mov
pushf
js,pt
pop
adc
adc
cld
jae
sbb
xor
jl
sti
stc
add
jo
sbb
xchg
imul
test
pop
or
sub
mov
sbb
adc
dec
imul
lcall
jae
jmp
out
aam
add
push
inc
movsb
inc
js
or
fst
pushf
mov
testl
xchg
xor
movsl
aam
mov
andl
sub
dec
xchg
sub
fld
or
mov
clc
inc
jecxz
shll
and
repz
jno
fildl
fsubs
push
fwait
and
push
mov
sbb
cld
jge
cwtl
jbe
negb
and
mov
nop
push
icebp
loopne
pop
push
fsubl
cvtpi2ps
sbb
xchg
lret
rorb
push
test
cwtl
adc
push
mov
lea
xlat
mov
cmp
int
pop
xchg
dec
imulb
adc
jbe
xor
adc
sbb
dec
test
movl
or
xlat
or
cwtl
mov
stos
pop
cli
div
ret
notl
pop
cmp
cmp
ljmp
push
test
cmp
jg
mov
mov
sahf
mov
inc
out
repnz
and
cmp
cmp
mov
mov
repnz
in
shrb
sbbl
insl
mov
pop
stc
ret
popf
arpl
xor
lcall
inc
dec
popa
in
outsl
incl
movsl
test
insl
push
add
pop
and
mov
out
leave
enter
sub
add
sti
add
add
rcrl
jl
xchg
cmp
xchg
in
mov
jae
ljmp
fstl
add
lods
adc
or
stos
mov
mov
mov
or
mov
inc
mov
stos
ljmp
jg
js
hlt
inc
das
sbb
cmp
andl
mov
inc
repz
ds
fcoms
movsl
dec
fbstp
mov
test
add
imul
dec
push
dec
cmpsb
sti
or
xchg
outsb
mov
testb
arpl
inc
fstpl
mov
repnz
mov
les
stos
or
cmp
shll
push
jne
push
out
sar
mov
lds
movsl
mov
cmpsb
mov
enter
inc
xlat
out
jns
dec
aas
sub
or
cltd
cli
test
or
jl
js
jne
mov
out
mov
repz
jns
adc
lahf
jmp
arpl
add
and
aas
jp
inc
rorl
xor
mul
ja
mov
mov
inc
movsl
into
test
cmp
pop
pushf
inc
mov
mov
xchg
enter
insb
adc
dec
mov
movzbl
fcomps
jge
cmpsl
in
xchg
cmp
ret
insl
outsl
xor
inc
shll
inc
sub
fst
out
leave
cmpsl
or
add
jnp
jp
add
fxam
and
sarl
or
js
cwtl
push
scas
cmp
pusha
dec
fiaddl
pushf
jecxz
cmp
pop
loope
sbb
mov
daa
and
cmp
cmp
lea
ret
dec
add
xor
mov
mov
scas
adc
scas
mov
add
inc
push
pusha
pop
shrl
loop
xlat
push
mov
inc
mov
add
add
cmp
mov
pop
shll
push
lret
sti
add
add
adc
adc
cld
adc
imull
mov
rcrb
xor
jb
pushf
mov
rorl
aaa
dec
sub
jmp
jge
call
mov
call
mov
rclb
cmp
dec
in
addr16
lds
mov
inc
and
mov
rorb
xor
aad
shlb
cmp
cmp
cmpl
leave
lret
or
pop
add
in
lcall
mov
mov
lahf
inc
mov
jbe
cmc
ret
movsl
xchg
xchg
ja
add
and
xchg
mov
push
das
cmp
mov
cmp
cltd
push
push
sbb
mov
pop
lods
out
cli
xlat
xor
mov
movsl
dec
std
test
das
xor
xor
gs
je
and
in
testl
lock
sbb
mov
into
iret
xchg
inc
jg
insb
dec
in
int3
inc
pop
and
inc
xchg
aad
push
je
dec
sbb
cli
fucomp
pop
and
aas
mov
push
mov
xchg
inc
push
cwtl
popw
sub
imul
mov
or
pop
sub
fbstp
insl
stos
and
mov
xlat
or
xor
iret
adcl
lods
adc
imul
lcall
divb
add
sbb
sbb
je
push
daa
jbe
xchg
ficompl
lea
imul
add
xor
aam
jne
addr16
push
pushl
jno
out
lds
nop
mov
cwtl
mov
xchg
movsb
and
dec
popf
aaa
mov
and
push
enter
or
xchg
cmc
inc
push
cli
add
sbb
jge
aam
dec
inc
aas
loope
dec
int3
add
sti
add
add
push
les
fistpl
pop
add
inc
lock
mov
xchg
ret
scas
jno
and
cwtl
jecxz
push
inc
test
loopne
repnz
das
lock
or
jnp
jmp
cli
or
sub
adc
jae
cmpsb
aam
inc
ret
lcall
xor
pop
push
nop
pop
jns
loop
cli
push
cmp
or
test
sub
dec
push
cmc
jae
int
or
lret
ficompl
stos
pop
xchg
mov
mov
insb
cmpsb
and
outsl
sbbb
fbstp
test
add
mov
enter
in
push
cmp
stc
iret
pushf
xor
push
add
xchg
pslld
pop
mov
jae
cmp
das
dec
xor
xchg
jno
mov
bound
add
xlat
fistl
dec
mov
cmp
in
iret
push
lods
inc
inc
dec
sbb
push
xlat
jmp
iret
bound
sbb
les
push
sarb
btr
sub
icebp
or
int3
ficoms
or
mov
shlb
imul
push
ljmp
and
adc
into
sub
xchg
dec
es
or
movsl
scas
xchg
mov
push
jecxz
lahf
push
loope
sahf
scas
push
pusha
xchg
and
pop
sbb
into
push
cli
mov
xchg
enter
outsb
xlat
sbb
ss
sahf
jns
mov
mov
stc
xchg
fldt
fstl
leave
adc
push
in
sub
and
mov
or
jle
neg
lret
pop
jge
and
pop
test
imul
cli
xchg
xor
test
shlb
aaa
jge
pop
add
cwtl
enter
xchg
bound
mov
add
iret
jg
out
sub
mov
mov
nop
push
mov
add
sti
add
add
cmpl
rcrl
inc
jbe
mov
out
mov
dec
inc
jo
loop
jecxz
lret
sub
aad
sub
xchg
sub
xchg
test
sti
inc
sub
xor
aad
hlt
push
sbb
pop
enter
or
push
jge
mov
pushf
pop
dec
pop
stos
mov
repnz
repnz
sub
lcall
int
lcall
push
or
int
loop
insb
cmpsl
sub
jae
test
imul
add
jbe
inc
in
cmp
xor
rep
or
aaa
sarl
cmp
xchg
and
sbb
add
mov
mov
jno
mov
dec
and
xlat
pop
dec
ljmp
icebp
xchg
insl
iret
loope
push
jno
pop
xchg
mov
jnp
rcll
inc
loop
inc
xchg
pop
sbb
je
inc
adc
sbb
xchg
add
cmp
stc
stos
xlat
repnz
mov
insl
dec
mov
scas
sub
test
in
adc
xchg
adc
add
daa
xchg
push
jae
or
cli
mov
inc
mov
call
or
xchg
insb
xor
notb
sub
xchg
pushf
cmp
ret
into
pop
popf
sub
mov
aad
dec
fsubl
add
fcoms
das
mov
sub
mov
lea
xchg
jne
popf
push
fstl
arpl
cltd
xchg
pop
jmp
inc
jae
sub
push
insb
inc
mov
mov
dec
insl
fwait
mov
adc
xchg
jmp
gs
cmp
push
mov
lcall
inc
mov
ljmp
cmp
neg
movsb
aad
lods
idivl
scas
push
inc
jb
pusha
les
push
or
jno
push
les
iret
shll
dec
inc
mov
in
dec
cmp
mov
rolb
add
add
add
mov
mov
sub
mov
arpl
js
fdiv
sub
push
cmp
mov
orb
shll
stos
dec
jl
fwait
lea
push
push
jle
aaa
addr16
fs
inc
jo
jmp
sub
das
push
push
dec
dec
push
lea
fisubrl
pop
pushf
enter
out
clc
push
insb
pop
pop
lahf
scas
aaa
adc
mov
xchg
dec
mov
scas
jle
push
and
lods
add
mov
inc
hlt
dec
icebp
and
or
scas
dec
mulb
neg
scas
int
leave
sub
jge
mov
mov
lret
or
pop
push
xchg
popa
push
int
jb
fsubrp
loopne
enter
adc
sbb
fldcw
fs
ret
test
arpl
mov
mov
ror
out
scas
mov
pop
cltd
ljmp
sbb
add
cli
jb
pop
loop
jecxz
repnz
jnp
cmp
inc
test
popl
out
bound
or
or
pop
dec
in
test
or
and
pop
inc
or
dec
jecxz
push
scas
lret
push
rorb
cmpsb
stc
in
xchg
inc
rcll
jnp
xor
jl
loope
inc
add
mov
inc
xchg
int3
das
test
xchg
mov
imul
inc
stc
in
ret
and
mov
dec
test
bound
lock
cs
lahf
sub
movsl
imul
dec
and
shlb
pop
or
test
mov
dec
mov
and
mov
push
cltd
outsl
pusha
ret
leave
mov
rorl
mov
sbb
push
aas
sub
xchg
or
call
push
call
and
int
add
fldcw
mov
rolb
add
add
add
cmp
test
sbb
xchg
mov
push
pop
fidivrl
imul
adc
lea
inc
xchg
stc
int3
push
inc
cmp
jge
out
test
push
pop
lods
jne
jl
xor
pop
lock
orl
pop
add
jg
sub
xor
jmp
add
jge
xor
mov
cmc
mov
jle
aad
jecxz
cmp
std
add
out
xchg
push
sbb
mov
aad
test
lcall
and
cmpsl
into
pop
or
push
xchg
adc
inc
movsb
int
out
jne
dec
sbb
cwtl
int3
xlat
clc
push
mov
cmp
xchg
data16
loop
inc
push
sbbb
xchg
jns
lret
std
jb
xor
cltd
outsl
aas
stos
test
xor
ds
loop
cmp
add
add
outsl
call
pop
rclb
call
test
rcl
scas
pop
rcrb
outsb
cmc
push
xchg
sub
stos
mov
inc
pop
movsl
push
dec
pop
cmc
and
add
sub
std
sbb
gs
mov
lock
sub
xchg
mov
xlat
mov
cmp
dec
in
fldl
aam
jb
pop
out
popa
inc
dec
push
jae
cwtl
aad
jne,pn
add
mov
mov
test
mov
mov
push
push
out
fidivs
sub
pop
push
lock
mov
or
mov
arpl
inc
lods
movsb
in
pop
insl
into
in
movsl
aam
fnstcw
and
and
sar
sbb
jl
mov
sbb
out
adc
cltd
xchg
xchg
jmp
fisttpl
subb
test
mov
shll
lds
push
pop
popa
xor
roll
icebp
loopne
mov
addb
xchg
push
bound
cmp
dec
xchg
pop
xchg
mov
sbb
aam
add
add
add
subl
in
mov
dec
notl
or
sbb
pop
cs
jnp
dec
mov
sbbb
lea
or
lock
icebp
pop
lcall
insl
cmp
push
cmpsb
out
pop
push
movsl
mov
add
cmp
sub
push
jnp
insb
movsb
and
cmpsl
fdivrs
stc
jmp
adc
aam
mov
or
xor
out
mov
adc
add
and
add
mov
xchg
pop
mov
cmpsl
or
gs
fwait
sbb
inc
fidivl
imul
into
pop
xlat
xchg
jg
mov
push
nop
mov
stc
fsubl
lcallw
icebp
add
cli
cwtl
fadds
pop
mov
mov
rcrb
gs
in
sbb
xchg
out
dec
push
out
nop
push
push
or
fildll
pop
xchg
sbb
insl
call
sahf
dec
pop
add
cmpl
aad
test
xor
push
testl
pop
les
adc
or
lock
or
or
xchg
out
clc
out
enter
lret
int3
mov
add
aaa
mov
jo
xchg
sub
subl
jmp
cld
jmp
andb
adc
nop
push
gs
adc
ret
pop
pushf
mov
lret
andl
mov
jp
adc
leave
aad
xchg
xchg
dec
addb
test
jbe
sub
or
test
repz
ret
icebp
loop
push
repz
rcr
inc
in
in
push
pop
enter
jecxz
pop
aaa
outsl
stos
lea
mov
jne
adc
je
jo
adc
mov
push
iret
add
mov
inc
mov
pop
xchg
jp
enter
movq
or
dec
mov
sub
sub
popf
mov
add
sti
add
add
dec
fwait
push
push
cs
add
mov
shll
adc
sbb
add
jae
jl
leave
shll
cmp
mov
lods
std
inc
out
mov
mov
lock
or
scas
cmp
subb
push
and
adc
and
push
and
jb
jbe
insb
sub
xlat
daa
pop
pop
lcall
inc
loopne
mov
sbb
inc
push
in
insb
hlt
mov
pop
mov
dec
outsb
cmpsb
fisttpl
add
loop
mov
iret
jo
push
stc
xchg
dec
xlat
inc
cs
dec
add
loope
jmp
mov
sbb
cmpsb
push
or
mov
jmp
repz
push
adc
adc
dec
leave
repnz
es
call
mov
repnz
cmp
call
lock
sbbb
adc
mov
lea
inc
xlat
shlb
cmp
test
into
jl
add
icebp
sbb
imul
inc
call
jno
pop
mov
lcall
pop
xor
mov
and
dec
pop
xchg
ret
inc
sahf
push
jg
and
mov
inc
ja
mov
mov
aaa
pop
xchg
jne
mov
dec
mov
ret
cmp
cmpsl
sbb
adc
xchg
mov
call
sbb
adc
xlat
popf
loope
inc
pop
popf
mov
dec
fsubl
and
and
push
pop
sbb
int3
addl
push
xor
sbb
imul
insb
ret
xchg
inc
add
sub
arpl
inc
enter
cmp
mov
dec
mov
ljmp
imul
shlb
es
xor
or
sub
add
and
dec
repz
fldt
mov
mov
add
add
add
push
loope
dec
pop
in
inc
ret
popa
mov
xchg
js
mov
in
and
inc
scas
aas
push
andl
aaa
rcrl
es
jl
es
mov
dec
inc
int3
ret
call
std
mov
aas
sub
stc
or
jns
in
add
into
sbb
push
into
inc
cs
repnz
lcall
push
xchg
aad
cs
sbb
or
insb
jmp
cmp
outsl
mov
dec
or
pop
push
xchg
incb
aam
cmp
push
jnp
mov
jecxz
push
adc
pusha
scas
xchg
lea
and
gs
push
fnstsw
inc
pop
push
pushf
mov
in
cmc
jecxz
cmp
inc
pop
cs
pop
cwtl
xchg
push
xchg
sbb
rolb
movb
xchg
xor
add
in
enter
mov
mov
je
push
dec
out
jl
es
pop
icebp
int
push
xor
lcall
add
xor
cld
mov
sbb
inc
dec
std
insb
sti
sbb
push
test
sti
into
ret
or
mov
lock
mov
sahf
pop
in
cmp
push
mov
ja
xor
xchg
push
pusha
xchg
jne
mov
mov
loopne
loope
pop
xchg
push
loope
or
into
xor
pusha
jns
outsb
xor
sbb
jbe
fwait
in
xor
mov
in
inc
dec
mov
scas
dec
xor
mov
out
mov
cmp
or
int3
mov
push
ret
adc
dec
pushf
xchg
add
push
clc
fistpll
arpl
mov
mov
rorl
call
push
mov
xchg
xchg
lods
shrl
cld
dec
jmp
adc
lcall
jnp
push
mov
popf
mov
sbb
fiaddl
add
add
add
sbb
es
clc
push
stos
lods
xchg
out
sub
inc
call
jns
xchg
scas
shrb
adc
fsubl
andb
dec
pop
sahf
xchg
push
out
clc
rorl
and
mov
push
jb
xchg
cmp
or
jne
aas
test
ret
or
sub
mov
dec
or
lret
inc
into
cmpsb
mov
aad
xor
add
mov
or
xchg
xor
sub
sarl
cwtl
ret
mov
daa
out
mov
cmp
xlat
outsl
add
jecxz
in
or
daa
out
sbb
sahf
mov
addr16
jp
rorb
nop
roll
inc
cmp
cltd
push
adc
jecxz
pop
mov
mov
repnz
rcrl
sarb
pop
or
lahf
cmp
dec
loop
or
test
popf
jno
and
dec
mov
cs
repz
movsb
ds
negb
cmpsl
movsl
mov
and
pop
cld
xchg
subl
push
popa
cld
les
or
lret
les
fldcw
popa
or
std
and
xor
out
sub
pop
sbb
jnp
cmp
fwait
sbb
pop
cld
mov
dec
leave
adc
inc
mov
sbb
jg
or
test
and
pusha
jbe
les
mov
mov
ds
idivl
rorb
fstpt
repz
cmp
js
inc
mov
loope
aas
mov
inc
or
jecxz
cmpsb
push
sub
or
and
in
fs
sti
out
mov
popa
xor
xchg
dec
adc
xchg
pop
lret
push
fisttps
clc
xor
xchg
mov
cmpsb
xchg
lds
rolb
dec
idivl
jg
mov
sub
sti
add
add
jecxz
jns
fidivrl
in
mov
jno
inc
pop
jle
fptan
push
ja
inc
rolb
and
mov
lods
subl
dec
push
adc
ret
leave
addr16
lea
jmp
inc
testb
mov
inc
loope
inc
add
ret
je
fsts
pop
mov
sarl
lods
jae
mov
fmull
add
xor
adc
dec
add
fwait
fs
add
std
cld
xor
or
xchg
popa
pop
imul
lods
cmp
mov
mov
pop
test
aam
lods
push
xor
fcmovbe
test
sub
mov
pop
push
sbb
jns
insl
xor
in
mov
inc
inc
jge
cmc
jle
test
rcrl
jnp
sbb
jmp
pop
mov
pop
out
shl
add
test
fisttpl
rcr
shrw
pushf
andb
xchg
fldenv
in
aad
inc
xlat
jo
hlt
inc
repz
xchg
lock
pop
pushf
mov
vandnps
xor
mov
in
or
add
lock
inc
es
sahf
clc
sbb
jp
pop
mov
in
sarb
xchg
and
pop
test
int
orb
loope
jle
pop
xor
xchg
sahf
xor
cmp
loope
cmpb
mov
pop
rol
add
lock
out
dec
popa
jo
es
sub
daa
outsl
dec
adc
push
jo
inc
movsl
jecxz
lods
jmp
and
pop
sub
jmp
add
jb
xchg
pop
fdivl
and
push
pop
xor
inc
xchg
imull
sub
jecxz
imul
add
mov
call
mov
xor
movsl
mov
sti
add
add
addr16
mov
xchg
fcompl
imul
jle
in
iret
test
mov
mov
je
movsb
leave
mov
push
jb
aam
jge
cmp
fwait
mov
data16
mov
mov
sbb
sbb
rcrb
push
nop
in
cmp
aad
test
pop
jecxz
adc
adcl
mov
dec
mov
test
fs
mov
lret
pop
cld
out
daa
imulb
mov
rclb
xor
cltd
pop
fs
lcall
dec
mov
mov
mov
inc
gs
pop
or
sahf
sub
nop
add
ret
add
and
cmp
loope
pop
ds
pop
add
fsubrp
dec
aas
movb
loope
xchg
mov
inc
popa
dec
ds
sub
jmp
pop
dec
dec
dec
sbb
inc
aaa
jge
out
push
jbe
shlb
vrcpps
cltd
in
cmp
pusha
pop
lret
xchg
rcll
loopne
ss
push
xor
xor
mov
xchg
mov
ror
int3
ljmp
inc
loopne
pusha
inc
dec
xchg
add
fstl
push
or
rcrl
inc
lret
fstpt
or
imul
mov
cmp
cwtl
imul
sub
das
mov
sbb
or
sbb
clc
lock
outsl
xlat
mov
xor
out
or
push
sbb
mov
divl
dec
xor
lret
stos
pushf
inc
xlat
daa
aas
mov
into
push
pop
mov
mov
jns
test
lock
call
and
in
mov
fcompl
or
fwait
out
aad
loopne
add
add
add
pop
pop
insl
movsl
dec
movsb
in
mov
mov
fimuls
inc
leave
idivb
xchg
mov
mov
or
adc
enter
cmp
in
mov
fwait
shl
fwait
fwait
mov
lcall
push
pop
mov
jmp
je
pop
test
jnp
lods
in
dec
fstpl
mov
nop
jno
cld
popa
sbb
stos
push
imul
sub
mov
sub
xor
fsts
mov
cltd
or
test
mov
mov
pop
pushf
leave
adc
jle
hlt
cs
sbb
cld
adc
mov
ss
imul
in
inc
cmc
cmc
cmp
ja
sub
popa
xchg
xlat
test
es
push
jnp
mov
loop
testb
mov
repz
xor
pusha
xor
insl
ret
hlt
lret
sub
xor
mov
sub
stc
xchg
rclb
and
lock
push
loop
test
or
pop
or
xorl
jge
mov
mov
lock
shll
lahf
pop
and
push
mov
outsb
insl
repz
push
push
les
or
mov
jg
or
mov
jecxz
gs
fs
jmp
dec
mov
jle
cli
add
sub
mov
in
xchg
sbbb
adc
fsubl
and
aam
out
call
pop
bound
sbb
sub
inc
mov
ficomps
jge
sbb
mov
call
insb
arpl
sub
les
dec
push
cmc
and
mov
cld
mov
pop
iret
ljmp
les
push
jmp
xchg
or
or
mov
in
sub
mov
idiv
cmp
out
dec
shlb
add
pop
sbb
cli
inc
cli
mov
ret
enter
add
sti
add
add
push
push
fwait
stos
fldl
or
in
xchg
lret
lods
into
mov
jecxz
outsl
cmp
das
sub
scas
xchg
lods
xchg
and
sti
loop
and
js
daa
adc
insb
push
push
adc
mov
js
cltd
test
pop
sub
jge
fnsave
sbb
lods
andl
mov
cmpsl
adc
stos
cmpsb
fwait
dec
cmp
test
jle
and
push
push
xor
sub
pop
xchg
dec
lock
push
fildl
jo
xchg
mov
mov
push
mov
push
mov
push
inc
add
ret
sbb
lcall
sub
jl
lahf
mov
pop
notl
push
loope
fadd
adc
mov
leave
jle
sti
sarl
pop
cwtl
lahf
dec
push
mov
jbe
mov
sbb
sti
fstpl
adcl
xor
imul
xchg
faddl
push
dec
jge
daa
pop
packuswb
in
lcall
jns
mov
mov
enter
sarb
ljmp
fcompl
adc
cmp
movsb
jp
pushf
ss
cwtl
fwait
movsl
add
mov
das
jg
fsubp
dec
adc
xchg
clc
in
sti
mov
ljmp
mov
pop
shlb
mov
pop
cli
add
xor
enter
cli
lret
mov
jg
lcall
data16
add
mov
push
dec
xchg
or
cmp
add
scas
add
femms
ret
pop
or
rcl
mov
leave
or
repnz
mov
in
inc
pusha
add
fcomps
mov
ficoml
xchg
add
ja
out
push
lahf
ds
inc
aas
adc
add
sti
add
add
mov
jae
sbb
lret
into
dec
stc
das
mov
loopne
fisttpl
mov
int3
aaa
js
inc
ret
sbb
stc
daa
dec
cltd
or
jg,pt
enter
jge
in
and
jns
inc
jbe
sub
loope
dec
dec
mov
mov
xchg
jb
cmp
loop
cli
lods
sarl
nop
test
aam
inc
jno
mov
sbb
aam
add
aam
jp
pop
mov
push
fmul
mov
test
lret
lret
jecxz
sub
daa
out
add
adc
jns
xor
insb
sbb
aaa
sub
mov
hlt
jo
mov
mov
push
sahf
xchg
ret
loope
rolb
jp
fildll
and
or
movsl
mov
lahf
push
stos
sbb
add
enter
cld
fimuls
movups
orb
inc
push
push
pop
insl
dec
jp
sub
pop
jp
movsb
xchg
out
lods
aam
mov
mov
in
lock
xchg
lods
pop
inc
mov
xchg
insb
cli
cs
aas
in
int3
popf
adc
data16
xchg
xchg
imul
adc
movsl
add
sbb
out
sub
scas
out
pusha
dec
and
mov
adc
mov
shlb
xchg
gs
sub
bound
cmp
ds
mov
push
leave
mov
and
stc
sub
fs
dec
movsl
xchg
sbb
cmp
jae
aas
inc
or
xchg
or
xchg
push
xchg
roll
ret
fcmovne
mov
out
xchg
rclb
iret
fs
rcr
pop
fdivrp
adc
jle
stos
mov
fwait
outsb
stos
fadd
or
jnp
pop
add
mov
inc
ljmp
cmp
inc
aam
xchg
mov
or
sahf
into
adc
int3
mov
inc
loop
hlt
fildl
cli
rcll
jmp
xchg
push
add
add
add
in
push
xor
scas
dec
loope
mov
rorb
dec
ljmp
ds
mov
pop
sub
insl
add
scas
fsubrl
add
xchg
popa
faddl
xor
roll
loop
mov
sbbb
add
adc
outsb
fcoms
sbb
dec
cmp
push
mov
cmpsl
mov
push
das
ss
adc
loopne
mov
andb
mov
bound
arpl
dec
insl
mov
cmp
mov
add
add
xor
pop
xor
dec
jb
ffreep
arpl
insl
xchg
jmp
cs
mov
jge,pt
or
or
cmp
dec
xchg
push
xor
dec
insb
cltd
icebp
dec
ret
sub
nop
imul
mov
inc
xchg
lret
dec
mov
lods
xchg
out
enter
in
cwtl
ss
lock
pusha
in
xor
push
popl
mov
sub
jae
and
in
push
mov
mov
vpackuswb
push
cld
mov
test
ja
stc
sahf
mov
jg
mov
sti
addb
sbb
inc
jne
push
cmp
dec
ret
inc
jl
cmpsl
push
je
test
dec
cmc
mov
repnz
test
lea
lahf
fsubp
sahf
aaa
in
jne
es
cmp
xor
sub
mov
lret
jns
push
pop
adc
sub
sbb
adc
cmpsb
ja
add
add
and
or
jne
fnstsw
cmp
pop
stos
sbb
jmp
repnz
incl
lods
pushf
ret
imul
cld
fisttps
sub
out
hlt
mov
and
ficoml
repz
into
sub
sbb
add
iret
negb
mov
testb
or
add
sti
add
add
lahf
dec
loope
mov
push
pop
xchg
notl
dec
xor
mov
add
jae
dec
mov
xor
bound
lcall
push
inc
out
push
xor
insb
fadds
inc
mov
lods
or
pushf
gs
mov
scas
fisubrl
test
dec
mov
ret
fmulp
arpl
mov
inc
leave
bound
cmovns
out
test
cmp
ret
dec
pop
aaa
ret
mov
mov
mov
loopne
xor
xchg
sbb
cmp
and
jle
jg
add
xchg
bound
in
and
and
ret
push
test
repnz
inc
push
add
sti
mov
or
rorl
das
push
mov
scas
out
loop
dec
lods
out
mov
and
or
push
movsl
sub
adc
stc
push
shl
xchg
rcr
fsubrl
add
xor
jecxz
inc
xchg
gs
inc
or
ljmp
or
std
mov
int3
ret
fbld
pop
fst
push
adc
jbe
fisttpll
inc
sbb
xlat
outsl
xor
and
lock
inc
stc
dec
hlt
jnp
arpl
mov
pop
xor
xlat
jge
es
mov
cmp
xchg
jecxz
jp
adc
sti
notb
cwtl
shll
or
cmp
mov
stos
push
push
aad
mov
mov
jl
je
ret
je
cmp
jge
dec
xor
mov
push
push
push
daa
pop
leave
push
aaa
push
dec
lods
xor
pop
push
inc
jb
test
fs
rcrb
mov
jg
movsb
add
fcomi
sub
sti
xor
mov
add
push
push
jnp
outsl
jno
dec
fsubrs
add
sti
add
add
jl
xchg
push
test
in
popa
sbb
fisttpl
lea
dec
mov
pop
fs
cmp
adc
push
lea
push
cmc
dec
stos
sub
idivl
add
inc
repnz
pop
lods
mov
or
jno
nop
add
jb
lahf
mov
jne
lock
clc
jmp
outsb
mov
pop
add
inc
push
enter
add
add
adc
cmc
jecxz
adc
stos
mov
in
dec
push
insl
cmp
add
sbb
sub
call
sub
pop
push
loop
xor
mov
in
rcrl
bnd
sahf
cmp
mov
xchg
sub
or
jmp
jae
jbe
cmp
push
xlat
adcb
inc
in
iret
xchg
or
mov
or
jmp
in
in
icebp
cmp
jl
das
jp
dec
popa
jno
xchg
jmp
rcrl
fcoml
test
xor
inc
or
lahf
in
out
cmp
cmp
jo
outsb
ret
popa
aaa
mov
rorb
dec
pop
dec
mov
popf
movsb
loope
movsb
daa
cmpsl
jmp
js
je
arpl
insl
cmp
xchg
bound
mov
sarb
loopne
and
or
cmpsb
in
int3
repnz
stos
dec
leave
adc
ret
pop
test
cmp
inc
mov
lcall
dec
xchg
xor
sub
or
pop
cmp
pop
push
or
adc
shlb
mov
push
sub
jmp
int
clc
aaa
loope
inc
add
cs
lods
mov
mov
cmp
leavew
leave
roll
jecxz
int3
pop
lods
xor
jne
iret
inc
pop
les
push
call
out
or
adc
mov
shll
inc
add
addr16
loop
arpl
cltd
enter
mov
stc
popf
outsl
lahf
lahf
sub
jmp
add
add
add
mov
notl
lea
or
push
and
mov
push
jge
sbb
insb
jecxz
fs
fwait
jge
popa
dec
adcb
mov
xor
int
mov
lcall
and
test
mov
sbb
loop
adcb
repz
and
in
add
nop
pop
clc
iret
out
mov
jp
ljmp
mov
xor
mov
mov
lds
mov
sub
sub
lods
js
adc
lahf
sbb
pop
fs
mov
popa
test
insb
xlat
xor
sti
and
push
xor
sub
mov
mov
mov
push
mov
sbb
out
aam
add
pop
int
and
fstpt
aad
sahf
cmc
sub
ja
in
jp
mov
xor
int3
out
pop
dec
fimuls
jg
sbbl
inc
push
lahf
jg
divl
and
adc
xlat
imul
mul
sub
rcr
je
mov
roll
lea
shrb
push
aas
pop
sub
mov
and
pop
pusha
xchg
gs
int3
sub
and
lahf
outsl
and
push
inc
fdivp
sub
inc
dec
and
push
dec
add
rcll
jo
dec
cs
das
push
mov
adc
cmpsl
pop
cmpl
push
mov
cmpsb
mov
jno
push
inc
sub
sub
rcr
das
inc
stc
shrl
sub
cmp
jns
push
subl
ret
push
iret
lcall
leave
sbb
sub
cs
push
jmp
xor
pop
scas
cmp
mov
jns
sbb
jge
and
dec
enter
cli
in
add
sti
add
add
das
push
add
aam
jno
jecxz
mov
negb
sbb
or
aad
scas
and
cmc
aaa
xor
jb
outsb
and
jge
sub
lahf
sub
icebp
mov
ret
cmc
repnz
rclb
pop
insb
jne
scas
imul
fisttps
addr16
test
popf
and
fisubrl
adc
push
jp
insl
mov
sub
xchg
push
xchg
and
lret
adc
and
outsl
and
and
aas
sbb
adc
fisubrl
sub
mov
insb
faddp
add
sti
cvttps2pi
mov
push
movsl
imul
or
pop
outsb
cmp
dec
pop
decl
dec
inc
stos
mov
fidivrs
push
mov
stos
popf
and
xchg
orb
push
cmpsb
in
and
xchg
std
cmpsl
xchg
jp
pop
leave
sbb
scas
mov
jg
cld
lock
cmp
push
sarb
rcrl
cmpsb
loope
cltd
lds
stc
repnz
and
add
cltd
inc
or
push
inc
add
xchg
push
pop
shll
sbb
mov
sti
jp
addr16
fs
dec
adc
ss
ficomps
xchg
iret
inc
cmpsb
mov
bound
sub
and
mov
sbb
xor
mov
inc
out
in
xor
xchg
loopne
ret
sbb
jecxz
jnp
pop
adcb
leave
hlt
inc
es
jno
ljmp
ffreep
mov
dec
push
xchg
jmp
or
jne
inc
mov
lods
jmp
jo
dec
fistps
push
add
movsl
mov
cmp
push
subb
pop
xchg
sbb
xor
inc
ljmp
pop
cmpsl
lods
xor
add
roll
pop
arpl
mov
cmc
out
add
sti
add
add
loop
push
dec
pop
sbb
sub
xorl
repz
mov
xchg
lcall
and
jno
in
or
call
bound
fcoms
popa
jge
js
jo
stos
rorb
pop
bound
mov
pop
xchg
xor
push
jg
movsb
pop
fadds
fdivs
or
mov
sbb
dec
lds
pop
xchg
jle
lds
aam
lea
lahf
in
sbb
mov
inc
je
dec
xor
adcl
mov
js
aad
mov
cld
jl
aaa
imul
imul
sbb
xchg
mov
mov
dec
jg
xor
dec
mov
mov
and
clc
mov
inc
pop
fdivs
mov
rol
arpl
mov
sbb
cmp
ret
cltd
push
fcompl
rcl
subb
mov
dec
add
icebp
ljmp
and
jno
add
loopne
in
adc
mov
lods
and
aaa
out
inc
jmp
cli
fcoms
iret
into
fistps
ret
and
inc
mov
data16
lret
and
daa
pop
fwait
or
inc
sub
and
into
sub
sub
add
lret
dec
scas
icebp
pop
xor
sub
mov
push
jno
jecxz
sahf
mov
push
addr16
push
and
mov
xor
subl
sub
inc
addr16
and
sbb
lret
adc
xor
jns
aas
in
int3
insb
jge
xchg
push
mov
add
lret
sti
in
inc
mov
pop
into
add
mov
jo
fdivl
scas
fldln2
mov
lea
adc
pushf
add
daa
pushf
cli
mov
xchg
out
cltd
pop
jg
je
icebp
add
sti
add
add
mov
bound
cmp
jns
test
cs
es
push
shrd
mov
outsb
sbb
addr16
cmpsl
test
leave
call
dec
pop
mov
imul
mov
xor
fucomip
xlat
dec
push
cmp
pop
daa
xchg
add
pop
inc
sub
mov
sub
pop
mov
jle
dec
inc
pop
jge
les
and
jge
sub
imul
popf
mov
scas
scas
out
cltd
lock
lahf
adc
dec
leave
cwtl
xchg
sbb
xchg
gs
push
mov
adc
mov
imul
mov
xchg
jg
add
icebp
paddusb
jp
and
aad
out
rcll
imull
jo
clc
js
or
pop
pop
dec
hlt
xchg
cmp
mov
adc
dec
loop
mov
out
and
xor
and
pop
lods
jno
sti
mov
test
adc
mov
ss
and
cmpsl
gs
jp
popa
pusha
cmp
gs
jns
lds
aas
mov
mov
out
mov
push
and
push
rcrl
cmpl
jno
xor
into
scas
or
xchg
add
mov
push
enter
inc
icebp
mov
stos
xchg
mov
rorb
clc
jmp
mov
adcl
in
cmpsb
and
mov
add
mov
sbb
and
cmpsb
imul
jp
push
repnz
sub
and
rcrb
xchg
pop
mov
in
xchg
arpl
adc
pop
sbb
mov
in
jb
std
and
inc
out
sub
ljmp
mov
fiaddl
in
dec
outsl
cmp
jp
test
int3
mov
push
iret
fcmovne
fisubs
add
fisubl
and
in
movsl
hlt
jmp
add
sti
add
add
sub
ficomps
jae
xchg
popa
dec
xor
out
call
mov
mov
loopne
xchg
iret
popf
je
cmp
jp
sub
test
out
pop
imul
adc
xlat
leave
mov
scas
mov
lock
jno
subb
lahf
pop
cmpsl
aam
mov
repz
ret
out
lds
pop
push
pop
shll
adc
andl
or
mov
or
jne
mulb
outsb
repnz
shlb
push
int
mov
out
inc
movsl
aam
lahf
mov
hlt
and
repnz
jl
xchg
call
in
lcall
int3
insl
push
inc
xchg
neg
and
and
xlat
adc
js
out
test
into
xchg
cmpsl
sub
dec
inc
pop
or
push
adc
fisttpl
lods
xchg
dec
xor
into
nop
lret
sbb
sti
push
leave
test
cmp
sti
into
insl
xchg
sub
enter
int
fimuls
fs
or
fidivrs
addr16
xor
in
push
or
scas
mov
fbstp
adc
sub
adc
ljmp
sti
mov
lds
movsl
jns
fbld
xchg
xor
incl
faddl
call
pushf
addb
or
into
iret
jnp
cmp
mov
insb
xlat
pop
dec
out
dec
int
loopne
and
ljmp
mov
std
mov
das
rol
cvttps2pi
enter
inc
test
push
jmp
out
les
insb
rcrb
fs
lahf
cmp
xchg
pushf
flds
mov
mov
dec
dec
aaa
ret
push
outsb
jbe
cmp
xchg
mov
sti
cmp
aaa
mov
mov
fstps
add
iret
cmc
sti
pushf
and
push
sub
rcrl
cmc
add
sti
add
add
sub
enter
mov
cmp
test
nop
and
push
cmc
das
cmpsl
outsb
inc
test
fimull
into
dec
xchg
nop
jo
fidivrs
call
jecxz
aad
cmc
inc
out
adc
mov
fsubr
stos
movsb
fs
jle
or
push
mov
cwtl
test
lods
aas
and
mov
ss
jmp
ja
or
insl
cmpsl
mov
fadd
ljmp
in
arpl
and
inc
mov
sahf
add
or
pop
cmp
and
push
pop
lods
xor
ficomps
or
mov
test
insl
lods
cld
mov
in
xor
fisttps
es
adc
add
mov
pop
jno
jo
or
xchg
fidivrl
dec
test
jae
pop
sbb
fcompl
aaa
mov
push
das
xchg
push
push
idiv
pusha
inc
mov
arpl
xor
out
mov
jno
push
bound
inc
and
jo
sbb
aas
aam
jo
adc
cld
inc
subl
mov
pop
cltd
pop
mov
xor
pushl
notl
sbb
adc
cmpsb
sbbb
loopne
dec
outsl
das
fimull
std
xor
in
cmp
push
jge
xchg
xor
clc
dec
push
rol
sahf
arpl
mov
ss
cmp
xor
cmp
and
jle
lea
popl
ja
icebp
push
add
out
call
jae
xchg
aas
mov
pop
inc
pop
andb
scas
or
inc
loop
jp
xchg
xchg
test
in
scas
add
leave
xchg
mov
push
out
gs
add
sar
addr16
and
xchg
or
imul
add
add
add
cmp
stc
jl
stc
jne
lret
loope
add
sti
add
add
ja
daa
mov
sahf
ret
lahf
inc
jo
sbb
stos
mov
fldenv
push
adc
inc
rcrb
pop
sbb
mov
push
add
adc
pop
push
roll
in
push
push
xchg
insl
in
sub
push
ret
jbe
pop
cmp
push
mov
dec
pop
sub
mov
pcmpeqw
cmp
mov
xchg
jecxz
shrl
push
xchg
xchg
mov
js
leave
andb
dec
aas
pushf
and
ja
jp
adc
hlt
cmp
add
std
or
fdivrs
out
cli
sub
xchg
cmpsl
push
rcll
int3
lods
cmp
aas
mov
push
sbb
shll
mov
pop
mov
jg
sahf
mov
inc
divb
mov
aaa
fcompl
fnsave
addr16
push
mov
inc
push
daa
cmp
or
mov
out
leave
cmpsl
cmovs
adc
call
jb
mov
loopne
inc
ja
mov
push
repnz
fcmovb
mov
repnz
outsl
lret
addr16
cmc
dec
pop
sub
sub
mov
xchg
jmp
and
rorl
push
dec
lahf
xlat
faddl
iret
test
xchg
decl
inc
es
push
pop
sbb
adc
arpl
daa
push
push
negb
sub
lret
jle
gs
inc
add
sbb
and
call
inc
mov
jg
pop
in
popa
adc
int
adc
inc
lcall
outsb
push
arpl
jle
ss
mov
icebp
insb
in
jb
inc
pop
mov
push
inc
sub
push
add
sub
mov
in
cmp
mov
and
jo
cmpsb
mov
or
movsb
add
cmp
test
fdivr
add
pop
add
add
inc
aas
cmpsb
cmp
sti
adc
mov
js
notl
hlt
movsl
bnd
