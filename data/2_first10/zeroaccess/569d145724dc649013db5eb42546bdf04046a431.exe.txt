push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
pop
cmp
pop
addl
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
jns
pusha
inc
jo
icebp
test
mov
pop
fcomps
cmp
mov
addr16
imul
movsl
add
lret
mov
dec
sbb
stos
leave
adc
mov
push
sub
filds
push
adc
mov
mov
daa
push
cli
sbb
pop
mov
dec
nop
test
out
jnp
or
fwait
cmp
das
push
pop
pusha
subb
inc
addr16
jmp
xor
sbbl
rclb
push
dec
or
mov
mov
je
cmp
sub
arpl
incb
cli
xchg
pop
mov
in
mov
mov
into
jnp
outsl
mov
sti
xchg
xor
aaa
adc
inc
cltd
fwait
pop
test
out
add
test
roll
repz
add
ds
pop
stc
jae
into
mov
and
sub
sbb
cmp
mov
lcall
sbb
sub
sub
xchg
dec
and
dec
lahf
adc
mov
mov
and
subb
pop
xchg
pop
inc
push
mov
push
mov
push
jb
adc
in
shlb
fs
leave
mov
sub
lret
rorb
add
mov
fsincos
aas
scas
push
cmp
and
or
sub
cmpsb
dec
ficoms
leave
inc
cli
pop
pop
pushf
pop
dec
mov
pop
jae
push
fdivl
mov
mov
xchg
test
jnp
lret
inc
and
rol
adc
jae
das
xor
fwait
shlb
xor
das
addr16
dec
sub
loope
sbb
movsb
in
lret
out
mov
add
sbbl
inc
data16
lret
pop
mov
test
sahf
inc
cmp
mov
inc
loop
dec
pop
cmc
cmp
out
jb
jle
inc
in
push
ja
ret
xchg
test
icebp
pop
pop
call
inc
mov
sbb
jno
scas
lea
ret
stc
mov
xchg
xlat
jo
imul
int3
shrb
or
sub
dec
add
or
sub
pop
decb
sti
imul
push
mov
fdiv
stc
mov
xchg
stc
xor
fsubrl
test
mov
push
adc
pop
dec
mov
add
in
test
iret
pop
inc
aam
adc
mull
sahf
andb
cmp
jae
and
jae
or
dec
dec
inc
loope
push
loope
xor
ss
in
xchg
mov
sbb
fisubl
out
shl
jnp
clc
or
or
push
scas
xor
sbb
in
pop
lods
adc
gs
movsb
hlt
cs
mov
push
enter
lahf
pop
mov
or
imul
jg
sti
push
aad
inc
push
xchg
fnstsw
or
adc
inc
cmp
imul
add
pop
adcl
mov
adcl
ret
lahf
xor
imul
add
orl
lea
or
loope
xor
loope
sub
xchg
lea
add
mov
sbb
fnstenv
mov
lods
neg
mov
sbb
jecxz
repz
mov
negl
sbb
fisubl
shlb
pop
lcall
mov
sub
xchg
fmull
and
mov
jl
mov
push
xchg
cmp
gs
cltd
daa
adc
jl
xchg
cmp
jo
subl
sub
rcll
push
and
pop
sub
adc
adc
cmc
mov
pop
in
je
push
int
xlat
shll
js
in
and
jg
clc
push
inc
int3
sbb
mov
inc
push
cwtl
in
mov
ret
out
inc
popf
ja
and
fwait
leave
dec
sahf
jns
xor
fsubrs
jo
jl
xor
iret
mov
push
push
divb
adc
mov
aad
push
stos
addr16
faddl
or
dec
adc
mov
sub
nop
cmpsl
leave
xrelease
cmpsb
jnp
arpl
jecxz
jns
add
mov
pop
icebp
sbb
adc
loope
jmp
insb
sbb
adc
inc
sub
fsubrs
es
lock
inc
fimull
movsl
leave
xor
mov
cmpb
scas
pop
leave
mov
hlt
jmp
mov
push
nop
pop
movsb
cmc
js
lods
sbb
loope
lods
jp
int3
sbb
clc
inc
orb
and
idivl
ret
xchg
ret
imul
cmp
mov
loop
jmp
cwtl
fisttpll
xchg
insl
push
mov
cld
mov
add
fwait
cmp
gs
xor
mov
addr16
out
mov
add
jns
xor
push
jae
sbb
rdtsc
stos
pop
cld
and
in
lahf
fs
sub
or
movsb
pop
jp
pusha
fadds
xchg
sbb
int3
xchg
push
push
jg
mov
std
cwtl
add
or
mov
stos
into
mov
jb
aam
in
cli
adc
xor
add
jge
push
xor
xlat
push
int
pop
inc
and
cld
sub
loop
out
push
cmp
mov
adc
test
out
test
sbb
fidivrl
and
mov
and
mov
test
sbb
sbb
cmp
es
lret
sub
add
loope
mov
push
mov
iret
sbb
cmpsl
cmc
ret
insl
loope
sbb
jo
addr16
arpl
mov
gs
iret
jae
xchg
cmp
adc
dec
scas
sbb
xchg
cmp
cmovne
insb
sbb
out
ja
repz
addl
jae
cmp
pop
outsb
shl
bound
mov
pop
mov
lea
lcall
adc
pop
call
sbb
dec
andb
loopne
je
inc
adc
cwtl
ja
jmp
daa
std
pop
adc
fdivr
sub
sahf
clc
and
xor
xchg
xor
gs
outsb
fistpll
or
ljmp
or
adc
inc
jb
xchg
call
push
mov
insb
sbbb
rorb
inc
xor
or
gs
aam
je
cmpsl
test
hlt
and
js
push
add
pop
movsl
outsb
out
add
clc
popa
dec
popf
sub
push
jmp
addr16
xchg
xor
ja
mov
xor
aad
mov
push
je
sahf
sar
aaa
pop
loopne
push
xchg
jb
xor
adc
lret
ja
and
stos
dec
in
mov
mov
xor
jno
dec
out
push
and
cmp
outsl
in
gs
or
xor
into
mov
fwait
mov
mov
out
dec
pop
dec
int
in
dec
or
pop
push
inc
sti
push
pop
xor
into
jno
cmc
sbb
sub
xchg
push
pop
in
xchg
mov
mov
lods
mov
mov
out
sbb
sub
aaa
push
push
mov
clc
add
pop
cmp
je
movsb
ds
test
mov
xor
add
popa
push
rol
inc
ret
das
rorb
mov
rcl
or
cli
rcl
repz
and
jbe
sbb
bound
jl
loop
loope
in
scas
xor
xchg
subb
sti
mov
or
add
aad
gs
mov
or
sub
rclb
dec
nop
int
stc
aam
dec
leave
inc
lcall
and
sbb
cmpsl
imul
push
ret
lcall
mov
xchg
jno
adc
ljmp
adc
lret
push
push
xor
sbb
jbe
negb
ds
lahf
mov
mov
movsb
push
sti
push
int
fsts
inc
loopw
mov
fidivs
mov
cwtl
pop
dec
out
imul
outsb
mulb
sub
lods
xchg
fisubrs
out
pop
push
pop
sbb
push
sub
inc
jp
sahf
mov
aad
jmp
addr16
imul
mov
sbb
test
mov
jns
arpl
fcmovb
fcomi
mov
cli
or
cmp
add
xchg
adc
adc
jb
lcall
pop
jne
stos
adc
cwtl
and
das
imul
adc
cltd
inc
and
inc
jb
sarb
mov
leave
popf
cmpl
lock
setne
dec
inc
mov
adc
adc
cmc
fdivr
and
cmp
test
or
popf
je
loopne
push
movsl
dec
js
mov
popf
ss
jae
scas
pop
lcall
dec
lret
lret
ljmp
nop
cmp
add
push
pop
xchg
jno
fmul
stos
sub
out
ds
adc
or
push
cltd
jmp
adc
dec
inc
push
xor
icebp
mov
dec
sub
push
jp
mov
dec
cmpsb
in
jne
mov
cmpsb
repnz
test
dec
es
mov
mov
sub
pop
adc
pop
scas
adc
xchg
dec
out
icebp
cmp
test
fldt
xor
jo
add
mov
gs
jne
test
mov
push
inc
test
inc
xchg
xchg
mov
sub
xchg
addr16
push
pop
mov
mov
dec
das
cmp
testb
ret
cmp
insl
cld
add
pop
jne
aas
jne
cmp
mov
dec
out
aad
mov
movsb
mov
test
mov
jmp
push
xor
lea
pop
and
lcall
fdivrs
aad
fdivr
aam
das
and
mov
scas
lahf
outsl
aam
scas
mov
ss
xor
loopne
mov
adc
sub
cmp
adc
sub
sbb
xor
dec
mov
mov
mov
inc
mov
js
pop
inc
mov
fsts
or
sbb
cltd
mov
mov
jle
and
or
sbb
mov
aam
xor
fisubrl
inc
mov
dec
add
jo
cwtl
or
call
sub
jb
in
jo
mov
or
clc
ja
mov
aaa
adc
mov
push
mov
mov
pop
mov
sbb
repnz
out
lretw
ret
movups
dec
mov
hlt
mov
xor
stos
jo
push
jb
addr16
cmp
mov
push
jle
mull
push
cwtl
stc
adc
mov
adc
inc
add
daa
icebp
mov
jmp
mov
push
rcll
push
arpl
dec
popa
cmpsl
or
xchg
cmpsb
das
pop
sub
sahf
pushf
inc
jp
dec
push
shrl
mov
cmpsb
into
mov
jl
orl
fcompl
or
mov
sbb
cmp
push
mov
mov
imul
cmpsb
pop
ret
mov
in
popa
add
sub
sub
jg
js
lock
fs
adc
addr16
push
push
fs
xor
out
jmp
stos
insl
scas
mov
stos
ret
sub
jb
dec
xchg
arpl
mov
in
loop
add
adc
push
fwait
dec
test
push
leave
popa
cltd
inc
mov
sub
leave
popa
sub
adc
roll
or
out
sbb
xchg
sbb
and
sub
call
out
in
int3
test
sub
push
ds
jp
and
mov
mov
pop
push
jg
pop
adc
sbb
mov
inc
lods
lahf
pusha
push
je
xchg
aad
pop
popa
addr16
or
pop
push
and
jmp
int3
punpcklwd
jns
lds
lods
cwtl
pop
pop
aaa
popa
cli
inc
sub
ss
fidivrs
push
pop
rcr
mov
lods
mov
dec
push
aas
and
mov
mov
mov
mov
xor
or
cmpsl
and
jae
mov
mov
inc
xchg
sub
jmp
pop
data16
jbe
inc
inc
adc
adc
pop
jmp
push
sbb
hlt
xchg
lret
jmp
push
cmp
lds
repz
inc
icebp
daa
add
lock
hlt
movsl
fadd
outsl
frstor
cmp
je
xchg
sahf
add
jb
lahf
mov
lret
cmpsl
or
adc
and
sub
repnz
adc
adc
xchg
sahf
jmp
fidivl
inc
sbb
inc
call
mov
fadd
ret
scas
bnd
xorl
dec
jne
pop
movsl
pop
mov
rol
mov
mov
rcrl
icebp
mov
add
mov
push
jl
cmp
inc
mov
in
mov
outsl
lods
ror
adc
lods
inc
insb
add
push
je
popf
dec
adc
sub
pop
jecxz
imul
push
stos
inc
test
add
lock
cmpsb
jmp
sbb
call
mov
cltd
push
cld
mov
jl
test
mov
pop
movsl
dec
jmp
movsl
mov
or
aaa
test
mov
push
mov
cmpl
int
cmpsl
fldl
movsb
adc
dec
xchg
mov
xchg
pusha
cmpsl
push
or
push
pop
das
jae
cmp
adc
bound
and
in
push
add
inc
orb
adc
mov
inc
mov
outsl
mov
dec
mov
subb
and
pushf
subb
je
xor
or
dec
sahf
mov
mov
int3
cmc
mov
rcr
jge
xchg
sti
movsl
shrb
test
add
add
bound
mov
ds
andl
mov
shl
cmp
mov
scas
jne
in
mov
mov
shll
shr
push
imul
mov
mov
pop
stc
std
mov
cmp
pop
cli
mov
inc
mov
subb
jne
dec
mov
mov
mov
jnp
jb
pop
outsl
aaa
inc
sub
xor
jg
and
jp
outsb
inc
lds
jns
test
jo
mov
mov
and
lahf
decl
test
jecxz
or
stc
jbe
cltd
and
dec
sbb
ss
add
and
jmp
inc
imul
lds
sub
mov
or
dec
pop
mov
rclb
jno
sub
add
mov
cltd
out
jge
daa
mov
lret
dec
das
rcl
sahf
xor
packuswb
xchg
sub
mov
cmp
sub
js
rclb
mov
aad
inc
jns
jbe
lahf
scas
inc
jae
adc
outsl
cmpsl
fistps
jae
ljmp
fstpt
gs
insb
pop
addr16
loopne
mov
or
test
shlb
lock
adc
ss
add
dec
push
and
movsb
pop
not
ret
inc
fadds
pop
cmc
pop
aad
jb
add
aam
pop
lods
insl
inc
jp
shlb
lret
push
cmp
pop
mov
test
sub
push
mov
shrl
leave
mov
subl
dec
repz
mov
gs
jmp
and
pop
mov
jp
iret
fnsave
cmpsb
loope
movsl
in
lock
jle
mov
lods
pop
in
sub
lods
adc
or
and
sbb
or
jl
cmp
or
cmp
jg
leave
mov
jbe
jmp
adc
pop
push
cmpsl
xor
ja
out
xchg
decl
mov
shrb
push
or
cmp
das
cmp
push
sbb
mov
addr16
inc
clc
enter
xchg
ret
pop
popf
movsl
add
pop
jne
aad
add
hlt
lahf
or
rorl
shr
or
xor
and
and
or
jo
mov
or
sahf
aas
inc
insl
inc
jl
mov
mov
xor
loop
loopne
sti
push
inc
jmp
adc
test
pop
or
lds
test
ljmp
pop
jge
pusha
dec
inc
jb
xlat
repz
push
das
dec
sti
sub
mov
ret
fdivrl
fwait
pusha
aad
addl
xchg
jb
xchg
aam
ds
mov
add
dec
cs
jno
jne
aaa
mov
or
das
fdivl
sub
adc
mov
adc
dec
xor
test
out
hlt
cmp
sbb
push
cmpsl
shlb
dec
or
or
mov
add
xchg
aaa
pop
xchg
lds
jp
push
lods
xchg
mov
cmp
sub
push
sbb
push
or
adc
dec
mov
cwtl
dec
std
xchg
jae
jne
imul
sbbb
jl
push
pop
sbb
xchg
out
stos
movsl
fldenv
addr16
nop
cmpsl
jmp
pushf
mov
push
lcall
jg
lcall
rcrl
scas
cmp
add
mov
and
add
outsb
fisttpl
das
adc
dec
cmc
and
loope
and
stc
jo
nop
fs
dec
mov
cmpsb
loop
test
scas
shrb
xchg
jg
mov
je
dec
jns
cmpl
mov
lret
repnz
fstps
int3
jae
xchg
or
sub
xchg
les
addb
mov
sbb
dec
fldt
ret
pop
or
addr16
pushf
sub
jp
and
in
int3
enter
es
and
enter
jne
lods
ficoms
sub
sbb
adc
fdivl
inc
in
or
pop
aas
loope
pop
fdiv
adcb
sbb
mov
jg
popa
cs
int3
icebp
js
sbb
jns
jle
cld
mov
lcall
cld
xchg
push
out
push
jecxz
sbb
ss
inc
loop
or
outsb
int
mov
sub
inc
add
push
inc
stos
jo
fsts
aad
inc
ret
std
mov
adc
pop
cmp
mov
lcall
icebp
inc
test
or
cmp
mov
mov
arpl
mov
xor
mov
stc
je
pop
cmp
mov
nop
test
fcmovu
ljmp
push
ds
imul
jo
addr16
addr16
rcll
sub
sti
lahf
out
push
rorl
sti
sbb
sub
repz
mov
mov
adc
lret
cltd
int3
mov
jmp
insl
fimuls
add
or
test
stc
inc
adc
in
pushf
gs
adc
xchg
das
mov
stos
daa
cli
cmpsb
fsubl
push
and
je
mov
dec
cli
arpl
mov
punpckldq
mov
fwait
jno
or
mov
push
cwtl
pop
push
sbb
jne
addr16
pushf
ret
mov
ret
lock
out
sub
cwtl
scas
adc
mov
pop
xor
mov
jnp
push
fsubl
roll
push
je
inc
pushf
mov
adc
sub
xchg
and
lods
mov
mov
xlat
dec
cltd
cltd
jo
sbb
add
jns
dec
xchg
and
loopne
sbb
mov
out
rolb
loop
pop
lods
or
paddusw
jnp
lret
inc
push
mov
fs
push
rorl
cmpsl
pop
jnp
dec
sub
mov
shlb
mov
pop
loopne
inc
dec
mov
call
test
push
insl
mov
repnz
jecxz
aaa
push
sub
arpl
stos
out
gs
leave
push
in
fdivl
pop
pop
jae
adc
dec
dec
lahf
xor
test
insl
dec
repnz
ss
xor
add
and
sti
pop
xor
cmp
and
mov
xchg
mov
loopne
ret
loope
push
lods
adc
and
icebp
xorb
or
jg
cld
xor
cmp
push
xchg
cmc
shll
adc
pop
push
imul
sarl
rcl
fadds
xchg
dec
sbb
or
cwtl
negl
cmp
push
test
xor
pop
andb
sub
sbb
push
test
loopne
adc
sbb
jae
mov
mov
add
fst
roll
test
inc
les
aaa
outsb
fmuls
xlat
scas
outsb
lret
loopne
andb
and
add
imul
icebp
add
jmp
fcomi
xor
outsl
mov
sarb
or
and
notb
movsb
sarl
repz
sub
add
into
sub
arpl
lea
xor
sbb
shl
ds
xchg
lods
aas
fdiv
cs
xorl
daa
push
fmull
leave
mov
test
insb
fwait
jns
divl
out
dec
inc
out
mov
das
call
push
mov
mov
rcrl
lahf
pop
negl
pop
bound
das
mov
loopne
lock
lcall
add
jmp
jo
aam
cmp
cmpsb
and
aas
adc
jns
cli
lret
jmpw
sub
xor
pusha
adc
pop
mov
pop
in
xor
adc
dec
push
pop
or
cltd
push
sub
aaa
mov
sbb
push
rolb
cli
gs
sti
push
out
push
outsl
cmp
test
and
adc
loope
gs
jmp
or
xlat
dec
lea
daa
mov
sbb
adc
cli
pop
cmc
mov
mov
xchg
addr16
sub
jns
pushl
sbb
jae
jae
mov
fidivrs
sub
inc
mov
add
data16
xor
ret
loopne
dec
xchg
dec
loopne
test
insl
dec
je
jae
movsl
test
and
fldt
aaa
jnp
mov
gs
ljmp
rol
xchg
push
sub
cmpsl
jl
aam
in
into
xchg
js
jnp
in
dec
pop
inc
push
inc
jl
popa
jge
sub
sbb
int3
push
push
adc
mov
testb
ljmp
test
sub
fucom
fcom
push
loopne
push
or
testl
call
daa
mov
and
push
jae
ljmp
pop
mov
scas
cmp
adc
pop
xchg
sub
in
outsb
jnp
push
insb
outsb
xchg
jg
test
and
mov
jnp
mov
in
rcll
addr16
daa
jg
testb
fnsave
adc
cs
pop
sub
adc
pop
jle
xchg
cmpsb
shrb
call
sub
xchg
or
add
sbb
pop
enter
ljmp
pop
sub
xor
es
shrl
xchg
jp
bound
outsl
out
movsl
pop
mov
inc
popl
jnp
cwtl
jmp
lock
xor
addr16
and
pop
xchg
sub
and
mov
jmp
popf
std
push
cmc
push
mov
leave
mov
jnp
aas
pop
loopne
out
jae
dec
not
xorl
mov
scas
stc
aas
cmp
inc
iret
out
cmp
xor
adc
ja
mov
mov
sub
fmull
lret
aas
and
lcall
jl
mov
add
stos
xchg
sub
rcrb
repz
mov
mov
mov
ret
call
das
xor
xor
adc
jmp
js
into
push
movsb
pop
pop
xor
dec
jmp
push
testb
arpl
out
jnp
sbb
and
mov
jmp
mov
pop
sbb
lcall
pop
sar
shl
mov
dec
out
and
lahf
jae
sub
pop
push
orl
mov
xlat
mov
sti
out
ljmp
inc
push
push
in
test
jg
mov
push
fwait
xor
mov
sub
mov
xor
and
int3
mov
and
scas
mov
fcomps
and
arpl
xlat
mov
gs
mov
xor
fidivrs
cmp
pop
and
ja
sbb
fwait
push
ds
push
adcb
jae
xlat
jno
pop
setne
imul
leave
cmp
imul
pop
adc
cmp
pusha
sub
lods
pop
push
in
push
and
mov
or
js
or
cmc
mov
movsb
fwait
and
je
inc
mov
popa
aad
add
adc
icebp
inc
add
sbb
sti
pop
shl
loope
mov
pop
fldcw
stc
inc
je
and
pop
or
call
cmp
push
fmuls
call
aam
leave
mov
xchg
push
push
mov
jmp
sbbb
fdiv
mov
aad
gs
outsl
inc
daa
cli
lcall
mov
dec
movsb
jae
and
popf
pusha
lds
or
jge
shll
rorb
add
adcb
sub
aad
fldl2t
scas
dec
ret
lods
cmpsb
mov
fnstenv
pop
or
xchg
jns
ret
sahf
icebp
mov
jae
icebp
or
adc
push
jp
push
iret
mov
cmc
and
enter
pop
les
and
jge
xor
push
insl
sbb
adcl
mov
adc
stos
dec
push
pop
scas
add
xchg
xor
int
adcl
sahf
mov
out
aam
nop
xor
inc
mov
mov
loope
in
push
push
cmpsl
lcall
test
imul
mov
mov
mov
rolb
movsb
mov
fldt
xlat
mov
and
iret
push
in
xor
std
mov
lods
mov
dec
pop
adc
adc
jb
call
pop
xchg
mov
pop
jecxz
sbb
in
jmp
cli
movsb
fnsave
xor
adc
adc
xor
repnz
fdivs
pop
test
xchg
fsts
sbb
cmp
inc
dec
in
dec
push
cmp
ret
mov
fldenv
sbb
mov
pop
xor
mov
fiaddl
fiadds
jge
rorl
lock
and
add
lds
xchg
mov
sbb
cmp
idivl
int
pop
push
or
stos
je
xchg
std
enter
adc
cmp
pusha
mov
shr
pop
dec
ret
mov
pushw
movsb
mov
sti
mov
sub
addr16
insl
fs
xlat
push
add
add
pushf
add
dec
mov
add
pop
inc
shr
mov
mov
push
dec
xchg
in
or
pop
xchg
mov
outsb
jno
dec
fs
jle
iret
xchg
push
or
dec
adc
cmc
push
mov
lcall
xor
cld
or
xlat
mov
adc
sbb
jns
push
mov
jecxz
mov
pusha
or
or
int3
movsb
outsl
mov
sahf
dec
dec
xorl
sub
or
negl
xor
dec
sub
daa
pop
xlat
clc
mov
daa
std
and
pushf
push
les
addr16
ss
add
add
bound
jge
jecxz
jne
push
jmp
out
dec
int
mov
and
shlb
add
loope
insl
mov
sbb
rcll
test
ficoms
cmp
negb
sbb
jne
icebp
xlat
fcoms
ja
ja
popf
test
xorb
call
mov
sbb
ret
xor
mov
jp
inc
icebp
inc
cld
scas
add
ficompl
adc
xchg
adc
push
mov
sbb
pushl
xchg
hlt
sub
stc
xchg
mov
and
xchg
pop
bound
enter
andb
push
xor
cmc
mov
out
adc
push
sar
mov
cs
scas
loopne
inc
popf
stos
in
pop
xor
sub
add
ss
je
lahf
mov
inc
lcall
aaa
cmpsb
out
aam
mov
inc
cmp
lahf
ja
add
jbe
jns
sbb
jno
lcall
adc
std
mov
cs
fwait
push
movl
sub
pushf
mov
xor
aaa
out
aaa
mov
push
pop
dec
out
xchg
rcrl
lcall
xor
mov
js
dec
adc
cwtl
mov
lds
mov
dec
xchg
adc
push
mov
push
cmp
jmp
test
fiaddl
pop
in
xchg
sbb
pop
call
cmp
cmp
inc
lods
jle
xchg
dec
outsl
mov
pop
sbb
push
lret
jl
clc
ds
pusha
mov
imul
in
inc
fstps
mov
mov
outsl
jle
fsub
pop
add
add
leave
iret
cmpsb
adc
push
mov
ja
mov
and
int3
hlt
ret
rorl
dec
jo
lea
pop
imul
and
mov
pop
xchg
mov
dec
dec
push
sbb
sbbl
pop
aad
and
imul
ror
bound
sub
testb
xor
ret
jecxz
fcmove
sub
or
xchg
or
ss
lock
ret
xor
enter
push
mov
into
icebp
pop
std
xchg
mov
addr16
mov
sub
cmp
call
xchg
adc
jmp
popf
into
cmp
imul
sbb
enter
cli
jno
ljmp
and
addr16
iret
mov
jae
xchg
xlat
xlat
fidivl
ret
lods
in
lods
push
mov
dec
xchg
jbe
cwtl
jno
jl
imul
ja
jae
mov
ss
sar
jecxz
mov
jl
add
ss
fs
dec
lret
push
pusha
add
pop
or
jb
mov
lods
dec
cs
cmp
cmp
pushl
add
pop
jmp
insl
and
ficompl
fsubp
add
sub
mov
adc
test
add
jecxz
adc
mov
les
in
xchg
ljmp
sub
mov
dec
and
jge
sar
pop
loopne
in
mov
fcmovne
arpl
jmp
lcall
lods
jne
ret
adc
mov
mov
movsl
dec
stos
adc
mov
js
inc
mov
cmp
cli
loopne
mov
pop
stos
inc
jl
fldenv
push
add
clc
cld
loop
and
inc
flds
mov
js
push
inc
cmp
data16
sub
test
jnp
insl
inc
mov
jo
and
sbb
outsb
int3
cmp
or
xor
rorb
in
je
sbb
jae
or
xchg
dec
and
dec
cmp
fnstenv
dec
aas
xchg
xor
jmp
lock
rol
and
imul
inc
pusha
pop
jp
sbbb
in
in
mov
pop
pop
test
push
sbb
jns
and
mov
mov
out
test
test
lahf
shl
loop
push
xchg
outsb
outsl
mov
mov
xchg
notl
sub
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fnstsw
shr
pop
addl
add
in
sub
and
imul
pop
pop
cmp
rcr
cltd
lcall
rolb
cmp
out
push
and
stos
adc
mov
cltd
jo
sbb
int3
sub
pop
jb
das
mov
push
addr16
inc
sub
aas
dec
lcallw
sbb
ljmp
outsb
cmc
adc
movsl
outsl
pop
xchg
mov
mov
mov
call
scas
adc
jge
shrb
sub
and
mov
or
popa
outsl
incb
loope
sub
jge
mov
out
addr16
inc
mov
test
out
nop
scas
inc
insb
addr16
mov
xchg
sbb
lahf
leave
ss
testb
add
shlb
data16
out
shlb
mov
mov
mov
mov
inc
add
test
dec
xchg
repz
xchg
push
and
pushf
adc
pop
adc
sub
int
decl
or
in
add
xor
mov
clc
mov
mov
repnz
fidivrs
daa
mov
imul
aas
add
push
testb
fadds
outsl
jecxz
jle
stc
jno
or
push
je
pop
fisttpl
push
cmp
bound
adc
insb
push
add
add
cmpsb
pushf
lret
dec
jb
cmp
jne
mov
xlat
jecxz
jne
aad
inc
lods
cmpsl
test
dec
xor
push
dec
call
lea
outsl
mov
mov
loope
push
insb
out
jne
push
repz
xor
sbb
add
xor
adc
iret
movsb
push
inc
enter
and
xchg
and
or
insb
nop
ja
gs
psubusw
mov
or
jo
aam
inc
adc
fbld
fldl
das
jne
xor
xchg
mov
jp
stc
bound
sbb
stos
mov
loope
mov
int3
adc
orl
pushf
in
cmc
push
test
ja
dec
mov
mov
jl
dec
mov
mov
jmp
stos
aam
push
rcrl
add
or
repz
jo
jne
xchg
addr16
push
sbb
loopne
int
incb
sub
shrl
dec
mov
lock
pop
or
fcoml
sub
jecxz
mov
or
imul
jbe
fcomi
sub
insb
shlb
mov
cmpsl
cld
and
or
es
aam
rcrb
cmp
and
popa
fcompl
enter
lret
aam
cwtl
in
and
or
mov
inc
aad
jns
shr
push
mov
pop
shr
jnp
sar
repnz
adc
repnz
jnp
jge
mov
sbb
stos
call
popa
enter
ficompl
and
mov
fwait
push
shlb
outsl
movsl
jno
inc
dec
and
out
call
sbb
sbb
xor
lldt
and
xor
jg
mov
xor
mov
mov
cld
jno
add
lods
mov
push
js
fdivrl
mov
mov
adc
mov
mov
mov
cltd
repnz
add
cmc
mov
jge
pop
dec
rorb
add
jo
out
jge
dec
sbb
hlt
imul
lods
js
bound
cmpsl
xor
inc
dec
or
sbb
call
sti
ss
sub
hlt
jns
addl
sbb
and
mov
adc
insl
push
lcall
sbb
inc
inc
repnz
aad
mov
rorl
paddd
mov
xchg
mov
and
lcall
jns
cmpsb
jecxz
push
xchg
adc
lahf
xchg
shrb
mov
fs
pusha
sbb
js
xchg
insb
cld
jns
jne
bound
xchg
idiv
in
int3
pop
push
sbb
outsb
cmp
jno
pop
into
dec
loop
das
sbb
loopne
push
mov
hlt
fistl
insl
sub
rorb
mov
repz
cli
adc
pop
mov
xor
mov
popa
push
add
aas
aad
push
jnp
xor
mov
loopne
std
push
movsl
pop
or
add
scas
cwtl
or
lret
mov
insb
stos
nop
mov
mov
xlat
call
ljmp
into
stos
lock
std
add
into
push
push
insb
lock
adc
aaa
pushf
imul
ret
xchg
and
push
es
jmp
adc
mov
jae
inc
lods
aam
pop
cmp
aas
cmp
add
mov
pop
inc
je
and
lret
outsl
xor
stos
dec
in
sub
sub
sti
in
data16
mov
jns
arpl
and
xchg
push
stc
or
sahf
js
out
dec
in
aas
testb
pusha
sahf
rcll
dec
mov
dec
fmull
mov
std
and
out
shl
mov
orl
push
leave
cltd
push
addr16
jg
fldcw
pop
je
sbb
xchg
rcrb
shrl
mov
in
clc
cmpsl
jle
ss
inc
mov
lds
add
push
xor
cmp
aam
sub
gs
cs
loop
mov
cmp
pusha
or
clc
clc
shr
jnp
or
mov
fildll
dec
ja,pt
flds
inc
loop
in
or
or
cmp
cltd
addr16
lods
popa
mov
gs
jbe
push
sbb
cld
pop
and
and
iret
push
mov
or
loop
mov
mov
sub
test
ficomps
push
pop
cmpsb
mov
scas
out
and
pop
or
in
push
pop
sub
mov
and
xor
lahf
and
ja
push
imul
or
dec
enter
jb
sub
and
or
and
rclb
fincstp
xor
pop
push
int3
xlat
test
scas
out
jecxz
iret
pop
jecxz
sbb
mov
shlb
int
mov
negb
dec
test
add
int3
daa
jmp
add
popa
aad
lahf
push
sbb
add
xorb
xor
cltd
fdivr
ss
mov
xor
js
push
daa
cmp
mov
outsl
rclb
pop
stos
lods
xchg
test
inc
inc
lcall
and
add
cwtl
movsl
mov
add
sti
loop
das
inc
xor
imul
mov
insb
jae
pop
cltd
mov
mov
ljmp
dec
inc
ljmp
pop
adc
ss
jo
mov
js
inc
mov
cld
popa
dec
fnsave
sbb
jae
mov
aam
cwtl
aaa
addr16
lret
pop
out
int3
pop
lret
add
popf
jbe
inc
outsb
mov
ret
jo
arpl
bound
mov
add
dec
cli
ljmp
jmp
in
jge
xchg
adc
gs
bound
cmpb
hlt
insb
pop
push
add
outsl
add
dec
loopne
stos
ss
daa
jno
push
stc
add
xchg
cmpsl
scas
imul
lret
int3
shl
or
xor
faddp
hlt
mov
xor
stos
inc
aad
ret
or
mov
mov
push
jge
and
ret
test
fistpll
shrb
push
cmp
and
ss
jns
inc
dec
sbb
loopne
imul
popa
lret
inc
outsb
fmull
jge
jb
mov
enter
jne
adc
push
sahf
movsb
adc
or
mov
add
inc
mov
lret
cmp
shl
loopne
fcomp
sbb
or
shl
mov
sub
nop
push
ljmp
loop
sub
and
sub
pop
and
icebp
enter
jl
ret
mov
icebp
jb
bound
adc
inc
cltd
sub
or
shr
cmc
test
push
mov
sti
mov
imul
push
sub
mov
sti
sarl
mov
jmp
in
add
fsubl
inc
adc
jmp
fdivrl
jno
lcall
sbb
rcr
xor
mov
and
stc
xchg
ret
sbb
push
cmpb
and
ficoml
or
sbb
cwtl
jno
add
pushf
aam
pop
aaa
jp
das
imul
jmp
popa
jp
mov
mov
xchg
add
add
and
jge
jl
pop
and
daa
adc
or
xor
ss
add
push
xor
icebp
dec
xor
mov
pop
stos
push
adc
xchg
or
pop
lods
jmp
pushf
loop
fimuls
in
jle
insl
sbb
or
aas
test
cs
test
xchg
addr16
inc
cmp
ja
stos
jbe
and
jle
jp
scas
subl
dec
or
xchg
or
mov
xchg
lahf
mov
push
leave
pop
push
pushf
mov
mov
bound
inc
fs
aad
cmp
or
and
sbb
mov
jg
dec
mov
push
inc
fidivrl
movsb
mov
add
cld
popf
lods
adc
outsb
pop
push
push
bound
int
mov
cmpsl
iret
outsl
jge
jle
adc
scas
test
push
popf
ret
lcall
out
inc
test
xchg
out
scas
sub
ja
mov
je
scas
das
cmc
adc
mov
pushl
mov
insl
inc
xchg
movsb
pop
outsb
gs
xchg
insl
dec
push
push
push
aam
inc
int3
jp
sbbl
mov
or
push
nop
dec
xor
ljmp
xlat
outsb
loopne
mov
xchg
mov
arpl
lret
rcl
test
mov
test
mov
int
rcl
xlat
and
jo
and
dec
insb
mov
sbb
test
fcoms
enter
and
inc
pusha
arpl
or
or
repz
push
test
stos
cwtl
in
pop
cmpsb
pop
xor
or
clc
scas
or
add
jl
rorl
ss
push
cmp
sub
insl
div
sub
mov
cmp
inc
pop
loop
or
aaa
push
insl
jmp
bound
sub
test
mul
or
xor
inc
cmp
push
cmp
je
sub
lret
int3
xor
cmp
lock
jge
and
sub
dec
or
and
and
movsl
lock
lret
sbb
jb
and
jbe
aad
data16
movsl
pop
scas
xchg
cmp
rep
push
js
fcoms
subb
cmp
ljmp
or
jl
imul
inc
cmp
push
xor
test
mov
push
mov
jae
ret
push
test
inc
and
stc
je
mov
dec
sbb
rcrl
pop
in
mov
or
into
mov
scas
mov
es
xor
push
inc
sbb
rclb
cmc
movsl
and
lock
aas
xchg
add
aad
mov
dec
push
jmp
lea
jne
fcompl
insb
sub
pushf
sub
mov
aam
cmc
outsl
into
imul
jnp
jns
add
out
sti
cli
ljmp
sahf
loop
lcall
out
dec
inc
and
push
push
das
jbe
xor
mov
and
rorl
cs
mov
subl
jmp
xchg
adc
jl
cltd
pop
mov
pop
jp
jle
iret
cmp
mov
mov
pop
sbb
andl
xchg
pop
mov
push
inc
sbb
adc
jge
sbb
mov
pop
jge
test
inc
ret
mov
cmc
push
pop
hlt
pop
push
je
xor
les
sbb
cmpsl
mov
push
insl
ret
stos
pop
mov
or
inc
loope
fisttpl
call
js
jns
cmp
dec
call
jae
imul
or
push
dec
ja
seta
lahf
xchg
or
subb
mov
out
leave
adc
cmp
push
dec
fcompl
es
movsl
xchg
out
fadd
adc
cmp
les
popa
cmpsl
daa
jmp
inc
mov
or
cmp
dec
hlt
push
outsb
xchg
jb
sub
or
xor
cltd
jecxz
outsb
das
pop
dec
mov
sbb
lds
pop
mov
je
jp
mov
jle
mov
test
enter
dec
fsubrp
pushf
pop
mov
pop
inc
push
mov
scas
sub
int3
adc
add
xor
decb
stos
out
lock
sub
and
adc
add
andb
or
sbb
inc
sbb
dec
dec
jge
outsb
out
cld
shll
push
or
jmp
lods
adc
dec
sbb
push
mov
jo
das
lahf
insl
xlat
shrb
in
ja
jne
mov
int
mov
out
mov
jmp
mov
cmp
pusha
scas
dec
add
insb
cltd
pushf
mov
lock
repnz
adc
lea
xor
push
push
imul
push
xor
jae
int
or
imul
cmp
insb
mov
test
pop
push
jecxz
decb
mov
sub
rcl
inc
dec
cltd
bound
mov
jbe
outsl
in
cmpl
lcall
fdivrs
push
adc
inc
mov
faddl
cmpsb
push
push
xor
mov
popf
cs
xchg
mov
dec
jo
push
mov
mov
jmp
xchg
inc
mov
lea
cmc
or
sahf
push
data16
pop
addr16
or
dec
jmp
dec
repnz
xchg
leave
and
outsl
mov
push
mov
xor
adc
popf
mov
cmp
shrl
testb
pop
scas
rcrb
mov
inc
repz
test
xor
xor
mov
jmp
and
push
push
das
pusha
pop
cmc
mov
divl
orb
mov
movsb
mov
imul
cltd
mov
adc
mov
imul
pop
enter
and
ds
jno
ror
inc
xor
outsb
jbe
in
cmpsl
aas
ss
xchg
pop
mov
cli
adc
insl
push
or
lock
repz
jge
sub
leave
in
rcrb
cmp
mov
inc
sbb
mov
fwait
sub
imul
push
out
mov
cs
dec
negl
mov
mov
fucomi
sbbl
shlb
sub
or
dec
mulb
inc
inc
xchg
iret
mov
and
sbb
ss
inc
xchg
test
test
clc
push
iret
mov
pop
cwtl
shr
gs
adc
pop
call
sbb
xor
aas
icebp
adc
pop
sbb
movsb
fwait
test
sbb
outsb
adc
imul
movsl
aas
bnd
jns
sub
xchg
rcrl
imul
adc
xlat
cvtps2pd
dec
push
mov
xchg
lock
mov
rcll
mov
mov
pop
pop
movsl
push
jmp
cmp
mov
popa
imul
fidivl
xlat
loopne
dec
and
loope
scas
iret
cmp
mov
xchg
ficompl
aam
es
mov
icebp
jae
nop
xor
add
adcb
push
adc
mov
cltd
repz
cs
addr16
lea
sbb
jmp
outsb
jp
notl
add
dec
push
xor
pop
mov
leave
std
jge
in
ret
out
xchg
fbld
jb
pusha
test
jmp
xacquire
ss
arpl
mov
push
mov
xor
ror
pop
jo
inc
and
and
sbb
in
mov
mov
mov
or
mov
bound
jno
sahf
out
inc
xchg
setne
nop
mov
out
leave
rcll
insl
push
adc
stos
push
mov
mov
jge
pusha
test
jne
lcall
pop
insb
adc
or
xchg
jae
add
add
cs
pop
addr16
outsb
push
gs
pop
mov
xchg
xchg
adc
pop
mov
clc
push
xchg
lds
dec
les
jnp
sbb
aaa
xor
push
sbb
ficomps
hlt
movsl
pop
mov
push
push
push
inc
decb
cmp
cwtl
push
or
mov
push
or
repz
pop
sbb
push
in
loope
mov
incl
inc
enter
mov
loopne
addr16
sbb
push
ret
fisubs
stos
jo
mov
lea
adc
mov
cs
in
jns
dec
fwait
adc
andb
xchg
inc
sbb
sbb
add
pop
and
push
mov
hlt
cmp
push
into
adc
mov
hlt
mov
xor
jns
movsl
shrl
repz
jl
add
jge
addl
mov
or
xchg
dec
sbb
fsincos
dec
cmpsl
cmp
sbb
pop
cld
jge
pop
out
adc
and
mov
cmc
mov
insb
or
mov
lcall
xor
inc
testl
jmp
push
lret
jb
sbb
mov
or
xlat
and
add
jmp
sbb
sub
aas
dec
xchg
lea
pop
lcall
mov
jmp
stos
scas
notl
jo
cmpsl
dec
jg
fwait
sbb
dec
cmpsl
xchg
push
test
add
rcr
clc
mov
out
add
mov
inc
push
fstpl
pop
push
lock
out
mov
sub
push
hlt
imul
sub
dec
xchg
jmp
sub
testb
mov
pop
mov
outsl
imul
testb
xchg
or
inc
push
xor
std
xor
or
hlt
std
enter
xor
xchg
aad
test
adc
xor
das
clc
inc
cmp
sub
push
mov
sbb
lods
push
inc
sbb
mov
ret
jbe
add
xor
push
add
xor
lret
mov
cmp
cmp
mov
outsl
adc
lret
sbb
sub
inc
jns
sbb
cld
fdivl
es
xchg
pop
outsl
push
sbb
xchg
cwtl
xor
stos
shrb
data16
test
pop
xchg
or
mov
sbb
enter
cmc
test
adc
stc
js
adc
mov
mov
stos
or
in
adc
insl
push
sti
mov
cmp
and
pop
xchg
fldt
mov
xchg
lcall
add
stos
loop
dec
out
mov
enter
push
shrb
inc
mov
out
mov
jl
or
out
and
xor
dec
cli
xchg
into
cli
jge
test
out
pop
xor
lret
pop
jbe
adc
into
fucom
jae
dec
test
and
mov
aad
inc
inc
stos
and
rorb
scas
loopne
push
jo
sub
pop
jmp
lcall
ljmp
imul
pop
imul
movsb
and
sbb
sti
sbb
inc
adc
jl
or
bound
push
pop
pop
sbb
dec
outsl
popf
adc
lea
ds
fst
cmp
jae
leave
jae
pop
call
mov
cmpb
aaa
pop
popa
bound
mov
out
stos
jnp
data16
shr
cmpsb
xchg
fwait
sti
jne
mov
mov
rcrl
mov
push
mov
jne
inc
mov
push
xchg
cs
pop
cld
aad
mov
movsl
popa
inc
sbb
adc
add
sar
jmp
jl
fdivl
sub
sub
push
sbb
jle
xor
sarl
push
push
outsl
inc
or
mov
rorl
outsl
sbb
test
sub
push
das
jecxz
mov
sbb
cli
mov
mov
test
or
add
and
jno
add
and
out
js
jae
test
lcall
leave
mov
andb
adc
adc
out
push
inc
inc
clc
or
scas
add
int
add
inc
jb
pop
jno
fsubrs
inc
loop
cmp
js
push
mov
fwait
pop
mov
shll
rorl
push
pop
add
xlat
stos
aam
xchg
xor
dec
push
xchg
movsl
inc
sub
fistl
pop
aad
cmp
xor
cmp
cmc
movsb
add
or
xor
jmp
outsb
fcmovnu
jne
mov
insb
orl
sbb
and
addr16
mulb
push
dec
or
push
xor
adc
mov
mov
addr16
dec
or
lods
nop
into
adc
adc
mov
fnstcw
fisttpl
int3
push
aad
les
ja
mov
mov
mov
aad
mov
daa
xorb
call
sub
sbb
sbb
cltd
ja
push
pop
mov
xor
xchg
data16
cwtl
and
push
cmp
mov
mov
cmp
xchg
hlt
mov
sbb
testl
push
sub
and
or
xchg
mov
mov
push
sub
jmp
aad
push
xor
dec
icebp
xor
lret
jnp
adc
fists
sub
ds
fs
sub
cmp
int3
or
ja
lods
and
inc
iret
ds
in
jmp
xchg
jl
mov
std
jmp
addr16
adc
imul
xor
mov
in
lods
mov
fstl
repnz
xchg
incl
xchg
iret
out
adcl
cmpsb
add
sub
repz
sahf
push
out
mov
mov
dec
shlb
mov
mov
inc
jmp
hlt
xor
xchg
push
out
mov
or
pop
clc
cltd
cmp
mov
ret
fs
add
lods
test
pop
cld
push
ret
sbb
lea
rorl
or
mulb
test
jecxz
push
bound
enter
lock
sbb
icebp
mov
ja
imul
addr16
push
setp
lds
mov
sub
aad
xchg
lods
icebp
cld
sub
inc
ss
jl
xor
cmp
mov
xchg
xchg
cld
outsb
sbb
mov
ljmp
add
ss
sbb
sbb
push
push
jl
inc
sbb
cwtl
sub
or
adc
stos
inc
in
popa
scas
sbb
pop
iret
pusha
adc
clc
orl
fimuls
xor
push
push
aad
or
inc
push
lds
add
inc
push
sub
cmc
fmul
mov
jp
mov
test
lcall
xchg
dec
dec
jns
in
xchg
test
xchg
jae
pop
cmp
pusha
fldcw
cmp
dec
mov
out
cmp
adc
int
pop
outsl
mov
jo
mov
xchg
xchg
sbbb
nop
pop
mov
jmp
pusha
addr16
cmpsb
mov
cmc
xchg
subl
fidivl
insb
or
cmpsl
out
aam
dec
xchg
xor
outsb
fisubrl
adc
adc
sub
push
pop
fildll
into
mov
movsl
inc
jns
insl
and
test
inc
in
out
loop
shl
xor
jbe
lret
cmp
sahf
mov
jmp
xor
es
sub
sub
xchg
shrb
xchg
add
sbb
das
pinsrw
xchg
movsl
adc
mov
push
pop
push
dec
mov
ss
mov
xchg
popf
outsb
jbe,pn
jg
fisubrs
mov
rcll
int3
shll
and
cmpsb
rcll
dec
jno
les
push
fisubs
dec
and
aaa
sbb
loopne
xchg
or
dec
jmp
mov
movsb
or
sbb
mov
fmull
cmp
dec
sbb
mov
jns
movsb
xor
lock
sub
sbb
ss
std
stos
jg
fbstp
dec
insl
idivb
cmp
jae
subb
call
xor
sti
cmp
lahf
subb
mov
divb
rol
cmp
mov
inc
iret
ja
dec
negl
mov
mov
daa
jno
xor
add
cmp
out
test
nop
mov
aas
lret
sbb
cmpsb
stc
ds
pushl
movl
pusha
sbb
and
dec
mov
pop
pop
scas
aad
adc
aaa
loopne
pop
xchg
mov
roll
das
outsb
ss
nop
sub
ja
loopne
dec
in
xchg
sub
xchg
mov
orl
iret
and
ds
sbb
jno
iret
adc
dec
ret
test
mov
mov
xchg
ret
das
popa
and
inc
mov
sub
or
fmulp
cmp
lock
jg
lea
jge
inc
inc
sbb
scas
clc
mov
sub
push
ror
or
inc
aam
jnp
adc
pop
stos
in
sub
leave
adc
gs
and
or
fldl
pop
aaa
jo
les
xchg
rorb
mov
rol
cmp
sti
inc
mov
cli
insl
cmp
adc
lea
sbb
test
mov
mov
fisubrl
pop
push
push
lret
inc
jge
mov
push
mov
sbb
loope
out
inc
mov
or
mov
lds
lock
js
out
xor
data16
into
inc
fmull
inc
ret
loopne
and
lcall
rcrb
icebp
push
jge
mov
int
sub
sbb
cmovae
sub
mov
rcrb
les
mov
sbb
addr16
mov
sub
push
stos
mov
mov
in
shlb
xlat
bnd
push
mull
push
cmp
jne
scas
xor
pop
jo
clc
sub
icebp
mov
mov
or
in
lods
pop
aam
stc
rolb
fwait
jp
sti
inc
xor
add
inc
loope
hlt
push
sbb
lret
xchg
sbb
mov
pusha
dec
les
xor
jmp
pop
mov
out
mov
jle
ljmp
sub
pop
aam
jo
pop
dec
adc
pop
fdivrs
and
dec
mov
mov
out
pop
mov
stc
adc
adc
push
cmp
data16
fwait
out
insb
add
cmc
push
inc
or
mov
insb
pusha
loopne
mov
add
pminub
push
stos
mov
add
xor
ret
bound
sti
adc
out
adc
jmp
enter
add
fsubl
cmpsl
enter
xor
adc
dec
test
inc
mov
xchg
sbb
into
pop
addl
notl
cmp
jecxz
ljmp
mov
std
in
pusha
cli
in
addr16
cmp
sbb
sti
xchg
mov
push
into
add
or
jmp
imul
das
sub
push
sbb
lret
pop
popl
addr16
sbb
push
pusha
icebp
push
mov
adc
and
cmp
inc
jecxz
pop
inc
in
cwtl
shlb
or
or
gs
push
xchg
rcl
push
pop
adc
into
sub
test
andl
aam
fs
cmp
aam
xor
movntq
xchg
pop
xlat
sub
lds
xchg
loopne
sbb
call
enter
incb
push
in
shlb
mov
out
add
mov
cwtl
xor
jb
lahf
repnz
enter
push
cmpsl
loop
ds
jmp
mov
fistpl
push
dec
lds
aam
loopne
mov
inc
mov
leave
gs
mov
cmp
incb
sub
mov
jle
mov
sbb
sbb
addl
dec
lods
out
test
push
xor
pushf
dec
andl
xlat
xchg
daa
cltd
pop
jle
into
pop
jge
out
in
inc
add
ja
sub
mov
je
cs
mov
gs
push
lahf
nop
push
push
in
inc
scas
inc
push
out
jns
jbe
leavew
les
cmp
das
jl
lea
push
stos
or
and
adc
rorl
jmp
dec
xchg
push
jmp
pop
xchg
mov
addl
lods
in
xchg
hlt
pop
adc
cmp
cwtl
xor
jnp
jge
cmp
fnstsw
xchg
bound
xchg
shll
fwait
xchg
xor
cltd
mov
fists
dec
or
jp
clc
pop
xchg
out
fistps
outsl
test
ret
xchg
daa
add
ljmp
cmp
or
in
cld
shll
jns
mov
int3
ljmp
cltd
lock
std
jno
lods
mov
pusha
lods
jg
sbb
ja
pop
movsb
loop
push
pop
jl
pop
ljmp
je
mov
or
pushf
ret
pop
fists
inc
adc
or
xchg
mov
imul
adc
inc
push
scas
pop
in
or
js
jb
push
push
xchg
out
pop
inc
les
jnp
imul
jne
jnp
std
rolb
mov
shll
rcll
scas
sbb
cmpsl
and
mov
popf
sub
xor
mov
add
pop
xor
adcb
pop
sbb
jb
fildl
iret
roll
scas
and
bound
cld
popf
lahf
and
or
int3
xchg
fidivrs
in
loope
dec
jge
jg
jnp
lcall
sub
jle
ror
dec
test
jp
inc
xor
stc
xchg
jo
pop
pop
pushf
in
xor
xor
dec
add
gs
or
in
or
push
movb
or
test
mov
push
rcrb
imul
inc
pop
test
sbb
xchg
aam
jb
sbb
sub
sub
aam
cmp
in
and
hlt
cmpsl
subl
push
loop
inc
out
leave
nop
mov
cmp
out
push
sbbb
stc
mov
stos
fcomps
cmp
dec
xchg
xchg
jge
mov
out
adc
test
popa
repnz
inc
fwait
sbb
movsb
inc
xor
dec
out
faddl
fldl
xchg
jp
aas
out
mov
mov
stos
imul
xchg
push
cmp
pop
jnp
es
mov
cmp
jae
pop
jns
xor
and
std
cmp
mov
push
stos
test
pop
sbb
add
lea
mov
popa
xlat
test
insl
sbb
pushf
mov
cltd
dec
fsubp
jecxz
xor
cltd
dec
arpl
repnz
mov
mov
jle
xchg
outsl
jl
dec
mov
pop
mov
cmp
xor
jmp
cmp
mov
stos
dec
stc
fcompl
inc
mov
mov
lcall
arpl
imul
or
insl
fsub
jp
push
movsb
xor
ss
lods
orl
and
or
cli
sarb
test
test
inc
pop
jb
insl
inc
loop
push
mov
mov
dec
in
dec
in
push
test
pop
shrb
jge
jecxz
pop
movsl
push
fwait
icebp
add
icebp
aam
cs
xor
cltd
or
inc
sub
mov
stc
or
or
dec
sbb
scas
loope
mov
pop
xchg
int
mov
stos
stc
shrb
and
ret
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
rorb
cmp
sbbl
jp
in
push
or
adc
lea
push
mov
mov
mov
fisttpll
imul
es
or
dec
stc
loope
test
loopne
adc
hlt
mov
xlat
push
insl
xor
aam
lods
lcall
int3
std
xchg
push
or
sbb
repnz
mov
inc
and
jle
jne
adc
push
add
out
pop
or
mov
orb
push
or
fdivs
sahf
cs
jne
xchg
shlb
loope,pn
push
sbb
adc
ljmp
mov
adc
mov
pop
aaa
lods
lods
jl
into
jns
jle
das
pop
fwait
mov
add
fucom
rdpmc
in
mov
xchg
sub
out
or
sbb
ss
jo
mov
lods
movsl
scas
stos
lret
push
push
fidivs
aaa
sbb
mov
or
lds
inc
mov
sub
jb
xchg
pop
lods
or
push
adc
shrb
cmp
mov
popa
out
mov
stc
in
out
cmpsl
xchg
jns
subb
jnp
xchg
into
xchg
push
sub
pop
xchg
sti
pusha
mov
cmpsb
push
inc
pop
movb
jb
mov
jecxz
jnp
stos
or
and
mov
cmpsb
clc
push
jno
out
sub
icebp
add
or
es
sub
orb
popf
int
cltd
add
cmp
ljmp
jg
inc
and
outsl
fcmovu
push
inc
stos
iret
push
imull
dec
das
ret
loop
sbb
dec
repnz
mov
push
and
sbb
dec
pop
stc
jns
jns
fdivr
add
mov
les
pop
mov
test
addr16
lcall
das
imul
push
mov
insb
xchg
pop
push
or
pop
neg
inc
or
ds
cmp
or
rcrb
xor
mov
mov
je
mov
sbb
or
cmc
ror
mov
in
inc
xchg
test
mov
xchg
pop
sub
add
sub
jmp
push
mov
into
es
jb
cmpsl
mov
mov
test
test
lahf
ljmp
mov
adc
std
cld
cmp
mov
outsb
mov
popf
xor
push
or
xor
negb
mov
push
xor
hlt
inc
shrb
call
mov
or
mov
mov
insl
pop
ja
jmp
fstpt
ds
fmull
jmp
dec
vpsubsw
dec
sbb
into
cli
pop
and
aam
and
mov
mov
std
sbb
dec
loopne
push
pop
adc
cmp
testb
push
or
mov
add
dec
mov
adc
inc
mull
cmp
xor
nop
pop
add
inc
mov
cmp
imul
ljmp
xor
out
and
aaa
xchg
push
xor
mov
jae
or
inc
jae
outsl
lret
push
and
and
or
popa
push
and
mov
je
lods
cmpb
pop
fsubr
ds
aas
jmp
xchg
sub
cli
and
or
xor
inc
jg
imul
xchg
mov
test
mov
imul
leave
sbb
mov
js
cltd
outsl
xchg
out
lods
fcmovu
cs
out
jp
cmp
ja
addr16
mov
shrl
cld
jno
or
pop
cmpl
and
les
test
push
int
push
jbe
pop
lret
popf
cs
push
jns
les
or
lods
insl
jno
dec
fldl
add
pop
loopne
dec
pop
and
mov
insl
fdivrl
orb
rcll
xor
mov
xchg
cmc
xlat
cmp
push
sub
mov
clc
adc
xor
mov
movsl
dec
mov
sbb
jp
inc
inc
jmp
mov
jmp
mov
call
xor
and
stos
repz
scas
push
jl
sahf
int
sbbl
lds
jp
add
test
push
fsubl
popl
mov
ss
test
es
xchg
inc
mov
pop
ficoms
jp
scas
xacquire
add
clc
xlat
bound
mov
rcrb
dec
dec
into
adc
mov
sub
sub
lock
int
stos
mov
sarb
jno
aaa
add
cmc
jg
dec
popa
and
outsl
sub
jnp
push
or
xor
inc
adc
add
or
in
in
inc
in
push
pop
jbe
bound
push
out
and
push
inc
inc
inc
test
adc
iret
icebp
addr16
ds
das
jl
sbb
xor
sub
dec
out
fisubrs
xchg
dec
jae
xchg
cmp
xchg
cmp
dec
sub
mov
cld
mov
faddp
cwtl
mov
repz
mov
inc
ret
mov
xchg
lret
push
jmp
mov
leave
in
mov
mov
xchg
xchg
xlat
pop
lahf
xor
and
andb
jae
jb
dec
xchg
xchg
leave
scas
dec
aaa
and
push
ja
push
pushf
fs
inc
mov
bound
outsl
setne
int3
in
sbbl
dec
rcr
dec
loopne
lret
xor
sbb
xlat
and
sub
popf
gs
sbb
cmp
jbe
gs
and
push
inc
dec
aam
dec
pop
xchg
int
lret
mov
movsl
insb
cmp
in
add
mov
sbb
and
pop
mov
dec
pop
mov
or
test
xchg
cld
add
jecxz
sub
fcoms
mov
test
mov
cmp
fcomp
inc
jbe
imul
push
push
mov
stc
dec
pop
mov
int
sti
lock
lea
and
pop
out
adc
sbb
iret
ficoml
aaa
rolb
insb
in
hlt
popa
cmp
sahf
push
push
mov
lea
lret
arpl
jb
adc
imul
jo
add
outsb
jne
mov
or
ds
pop
push
push
ja
nop
mov
or
sbb
sbb
ret
push
xchg
call
adc
clc
xchg
xchg
and
push
pop
cmpsb
jae
andb
mov
stos
test
sahf
cmp
mov
sti
out
aaa
jno
mov
test
mov
pop
icebp
xor
into
pusha
mul
stos
outsl
xor
les
pop
mov
imul
ja
insb
loopne
imul
mov
data16
pop
dec
add
addb
adc
or
pop
add
push
out
hlt
mov
xor
sbb
jo
icebp
lret
stos
sub
pusha
pop
sbb
push
repz
cmp
sub
jnp
xchg
sub
arpl
xchg
bound
push
or
sub
adc
mov
xchg
jecxz
adc
cmp
in
mov
cmc
sahf
xchg
xor
lcall
cltd
and
gs
cli
jae
mov
cmp
dec
dec
imul
mov
sub
add
mov
daa
js
cmp
jg,pt
mov
dec
stos
dec
adc
pop
shlb
xor
mov
psrld
jg
repz
fwait
enter
inc
test
lea
cmc
sub
add
imul
dec
pop
icebp
in
out
in
mov
lahf
lret
aam
loopne
lods
mov
cmpsl
pop
adc
loopne
rorb
arpl
stc
cmp
fiaddl
fcoml
mov
test
es
inc
dec
add
jp
test
aad
push
pop
int
dec
aam
jb
scas
subb
sbb
jo
in
lret
xor
int
mov
pop
mov
push
pop
ss
inc
fidivl
xchg
rorl
rol
push
ss
pop
ja
fsubs
adc
push
popa
inc
iret
cmp
and
imul
adc
xchg
jbe
shll
in
push
dec
es
in
adc
ret
xchg
popf
adc
fmul
adcl
jge
popf
push
js
test
cwtl
cmc
adc
lock
inc
jmp
mov
pop
stos
inc
jns
mov
das
inc
popa
icebp
dec
into
xor
stc
stos
inc
sub
push
cli
mov
movsl
daa
es
fildll
pop
xchg
stos
sahf
xchg
pop
jae
sub
ja
out
rep
mov
mov
aaa
jmp
push
pop
out
mov
xor
cmp
test
adc
ss
repz
pop
adc
fisttps
add
and
jne
subl
push
cmpsl
inc
lret
lods
leave
js
mov
mov
or
dec
cmp
or
cli
movsb
xchg
mov
mov
xorl
test
mov
xor
adc
lods
daa
adc
push
mov
or
lret
leave
pop
int3
cltd
pop
push
or
inc
or
adc
loopne
fs
outsb
scas
lea
cmp
add
push
cmp
mov
xor
cmpsb
fdivrl
jo
adc
in
and
enter
pop
cltd
dec
pop
xor
cmp
stos
aaa
sahf
add
fldcw
add
inc
pop
jnp
cmpsb
into
mov
pop
mov
pop
movntps
fs
mov
xor
mov
dec
insb
adc
test
popf
sbb
mov
movsl
in
mov
sub
bound
cwtl
bound
sub
mov
outsb
dec
dec
xor
mov
xchg
mov
fwait
xor
movsb
mov
or
clc
cmp
mov
mov
jno
xchg
sub
push
mov
pop
xchg
mov
dec
rolb
pop
or
lahf
cmpsb
inc
jae
sar
ret
stos
inc
dec
loopne
push
test
daa
mov
addps
xchg
jns
inc
sub
ret
dec
dec
aam
mov
mov
or
mov
sub
and
mov
sub
mov
cmc
lret
stos
inc
and
inc
fs
jae
ljmp
lret
and
jnp
mov
lret
test
inc
test
aam
mov
sahf
mov
movsl
stc
fwait
add
mov
xchg
push
cmp
pop
cmp
into
inc
insb
xor
bound
add
or
cmp
cwtl
fistpll
mov
sub
xor
aad
iret
pop
jnp
mov
jnp
arpl
add
mov
ss
outsb
xor
mov
adc
sbb
lods
push
xor
movsl
mov
sub
in
dec
call
das
cli
mov
and
cmpsl
cmp
out
and
push
movl
mov
xchg
out
dec
loope
fisttps
insb
lcall
mov
les
dec
cli
add
adc
adcb
js
cld
inc
sub
clc
inc
sbb
jle
mov
xorl
adc
push
loop
push
lea
dec
jns
jmp
addr16
xor
mov
sub
inc
adc
sbb
mov
xor
cmp
outsb
xor
pop
hlt
sti
push
pop
pop
and
fwait
imulb
in
jl
mov
les
push
mov
mov
mov
cmp
adc
sbb
fmulp
jo
neg
jge
int3
jae
xor
sub
jge
ljmp
cmc
mov
nop
dec
mov
iret
push
xor
fcompl
dec
push
dec
nop
jg
dec
or
sbb
outsb
inc
push
add
mov
xchg
fs
insl
inc
mov
cld
push
adc
mov
loop
aas
cmpsb
sub
jmp
outsb
ja
cmp
sub
icebp
mov
fdivl
jbe
or
add
adc
lcall
cmpsl
push
inc
add
mov
inc
sub
loopne
mov
ret
dec
js
jp
outsb
inc
daa
and
sub
push
bound
xor
mov
js
xor
cmpsb
adc
adc
sub
jecxz
js
imul
ss
sbb
in
lods
xor
ret
fsubrl
and
cmp
ja
xchg
sahf
addr16
call
stos
insb
mov
jl
or
mov
inc
lea
jb
and
int3
adc
mov
hlt
bound
mull
lahf
je
imulb
xchg
add
mov
or
jne
add
jns
cld
inc
mov
test
cwtl
enter
cs
inc
mov
arpl
sub
dec
int
ret
jle
std
dec
sbb
adc
inc
or
in
adc
sbbl
dec
lock
jge
fdivrs
xchg
cwtl
mov
or
scas
mov
sbb
loope
xor
mov
and
out
arpl
jl
cmp
jge
scas
out
mov
mov
inc
cmp
fsubl
das
dec
repnz
fsubr
shl
addr16
push
fistl
nop
les
out
pop
ss
cld
out
in
xchg
ror
inc
mov
sbb
pop
in
shl
je
shl
aam
das
or
mov
sub
sar
sub
xlat
lcall
xchg
sbb
arpl
ret
mov
sbb
or
repnz
call
xor
loop
xor
pop
out
into
scas
xlat
cmp
call
or
aad
xor
test
jmp
nop
mov
jnp
jo
enter
icebp
push
fsubl
pop
jmp
dec
cmpsb
or
adc
inc
sarl
jmp
cmc
lahf
inc
bound
jg
inc
xchg
mov
adc
loope
lods
add
push
dec
cwtl
mov
cmpsl
xlat
aad
and
mov
or
jmp
fcom
and
xor
daa
push
lods
jne
hlt
cmc
fcompl
data16
jecxz
pop
push
idiv
mov
enter
mov
in
nop
jge
mov
cmp
insb
pop
inc
pop
lahf
mov
mov
out
dec
jne
push
or
shll
repnz
mov
loop
adc
mov
inc
dec
xor
adc
adc
outsb
mov
inc
cld
mov
das
xchg
cmc
lahf
cltd
cltd
cwtl
xor
hlt
aas
into
mov
pop
ret
nop
push
xor
xchg
lret
mov
shr
mov
in
sbb
mov
adc
lcall
sbb
rol
inc
call
jecxz
aad
rcrl
sub
cli
push
ljmp
jbe
sbb
mov
movsl
subb
jb
inc
cltd
or
pop
data16
pushf
dec
mov
addr16
pop
ljmp
jo
and
adc
jmp
xchg
push
fs
mov
mov
xlat
popa
and
hlt
pop
jecxz
jnp
pusha
test
xlat
jge
add
dec
adc
xchg
arpl
es
sbb
out
fdivr
out
inc
adc
add
mov
mov
push
dec
repz
into
shld
les
rcrl
jmp
inc
or
sbb
mov
mov
cltd
cmc
pop
lahf
jno
cmp
dec
stos
cld
pop
call
out
mov
xchg
loop
in
jle
imul
jne
aam
push
arpl
cld
mov
adc
pusha
xchg
xor
dec
sub
outsb
decb
cs
fsts
xchg
fldcw
mov
xor
mov
push
adc
inc
out
jmp
adc
and
test
mov
mov
outsb
cli
fsubl
mov
sti
sub
push
xor
xchg
and
xchg
adc
aad
push
or
hlt
mov
jbe
inc
xor
dec
mov
dec
scas
push
xor
shlb
movsl
lods
out
cmp
dec
mov
or
inc
or
fmuls
insb
imul
push
add
std
inc
subb
flds
cmp
xchg
nop
cmp
call
mov
add
addr16
movsb
orl
out
shll
sub
xor
xchg
fnstenv
cmp
movsb
cmp
daa
andb
fstl
iret
jg
imul
imul
mov
data16
push
mov
mov
and
dec
adc
into
push
and
pusha
adc
sub
aad
push
dec
loopne
jbe
add
or
adc
data16
and
sbb
sti
scas
mov
mov
inc
lods
nop
leave
xchg
sbb
imull
addr16
jno
mov
mov
test
mov
lahf
ljmp
xchg
mov
pop
stos
push
jle
setnp
cld
push
xchg
mov
mov
iret
loopne
fiaddl
and
cld
jmp
je
test
xchg
xor
lret
mov
repnz
xor
imul
imul
clc
aas
mov
push
mov
mov
add
lea
fstpt
add
pop
push
fimull
mov
scas
rclb
hlt
ret
adc
xorl
jl
mov
adc
push
sub
sub
dec
adc
mov
insl
jmp
jns
sub
out
fwait
push
scas
cmp
popa
mov
push
lret
fwait
aas
daa
mov
xchg
fs
loopne
test
mov
push
dec
test
dec
pop
pop
cmp
fwait
sarl
push
cli
adc
stos
adc
loop
sti
out
push
mov
int3
inc
cmp
sub
mov
hlt
inc
pop
outsl
push
jae
test
jnp
clc
sbb
aad
mov
inc
push
lahf
pop
lock
ret
and
jl
cmp
push
test
pop
imul
cld
mov
cltd
movsl
mov
adc
inc
jmp
sbb
aas
mov
mov
pop
lcall
cmpsl
sbb
cmp
xchg
int3
and
scas
aaa
push
rolb
nop
rcr
dec
bound
and
ja
inc
xor
adc
cltd
lahf
shlb
sbb
ret
jbe
fsubs
inc
mov
popa
mov
xchg
cmpsb
test
ja
push
in
xchg
inc
and
lret
add
stos
push
xchg
xchg
addb
ss
mov
int
stos
out
mov
cmp
cmpsl
hlt
fidivs
adc
push
lods
je
or
mov
push
scas
pop
mov
test
xor
push
push
adc
fisubrl
cltd
loope
psrad
xor
push
inc
adc
movsl
sub
loope
test
inc
iret
or
in
ja
xor
js
rcll
mov
fldl
cmp
add
shrb
hlt
fs
fs
leave
lcall
in
call
jne
xor
test
push
cmp
dec
push
xchg
sti
jp
mov
pop
pushf
add
test
sub
mov
popa
orl
popa
xor
testb
sbb
or
pop
repz
arpl
or
mov
and
mov
in
andb
xchg
inc
loop
cld
mov
aas
xor
and
mov
insl
dec
pusha
test
cmp
clc
inc
into
mov
ficoms
inc
dec
xchg
xchg
xchg
inc
jmp
jns
mov
aam
adc
call
in
adc
and
outsb
mov
xor
fwait
insl
pop
and
jnp
jae
gs
inc
aas
xchg
test
into
pusha
pop
xchg
cmp
or
push
sub
adc
loope
lods
sbb
inc
mov
cmp
cmpsb
mov
daa
mov
outsb
ret
add
push
add
cwtl
add
lcall
push
loopne
fildll
xlat
dec
xorb
inc
and
dec
inc
test
jno
mov
popa
push
xor
in
mov
lock
xchg
emms
mov
ds
xor
push
sbb
scas
ret
sbb
bound
mov
push
enter
cmc
xchg
add
push
inc
mov
jge
jo
sti
add
ja
jb
lods
aam
ljmp
sbb
aad
nop
inc
scas
add
roll
push
mov
subl
adc
xor
xor
push
push
xorb
dec
xor
pop
cld
jecxz
push
lret
dec
daa
clc
push
pop
cmp
mov
mov
ja
je
pop
stc
icebp
fldcw
out
into
cmpl
and
jge
pop
pop
and
int3
and
jle
mov
dec
sub
mov
jle
jo
ss
js
out
cmp
das
mov
shl
pop
pop
inc
insb
mov
xchg
dec
sub
ret
mov
push
and
jp
cld
sbbb
idivb
iret
fstpl
mov
mov
cmpb
xchg
andl
fsubr
push
outsl
addl
stos
and
rclb
inc
xor
adc
inc
in
push
xor
cmp
idivl
and
lahf
dec
in
add
mov
xor
mov
pop
cmp
in
scas
imul
cmp
je
sub
pusha
in
rcll
loope
je
sub
out
movsb
sbb
mov
cmp
fwait
and
popf
fsubr
pop
xchg
daa
mov
sbbb
or
cs
outsb
popf
int
sub
lcall
and
mov
xor
fisubl
dec
jmp
add
push
test
lahf
xchg
sub
lods
cmpsl
jae
xchg
decb
int
cli
aaa
movsb
sbb
ja
add
jo
insb
pop
sbb
cltd
jp
lods
adc
inc
ficoms
inc
nop
popa
jmp
icebp
xor
xchg
fsubp
je
ret
xorl
xchg
mov
insl
stos
cmp
fstl
jne
js
pop
xor
sub
rcl
adc
repz
fsubr
and
shll
setbe
add
push
and
mov
fdivs
cli
push
lret
push
ret
or
push
xchg
adc
xchg
cmp
dec
xchg
add
xor
iret
or
movsl
ja
cmpsb
mov
pop
dec
pushf
aad
and
cwtl
sbb
push
stos
adc
pushf
push
mov
fnstenv
test
dec
xor
out
cmpsb
fsubrp
test
adc
insb
lea
les
test
xchg
les
rcrl
dec
enter
hlt
mov
frstor
lahf
shlb
fwait
xchg
in
sbb
add
sti
mov
and
mov
cmpsl
xor
sbb
jnp
mov
dec
repnz
std
jl
or
push
lods
push
lods
pusha
enter
cmpl
mov
insl
scas
push
xchg
stc
ja
iret
insb
inc
xchg
lahf
jmp
xchg
test
pop
fcomip
lcall
test
gs
icebp
xor
xor
jmp
mov
clc
push
arpl
les
outsl
cmp
ret
cmc
or
adc
sbb
sub
pushf
int
sub
ja
mov
xor
out
jle
nop
jne
mov
push
or
sbb
into
rclb
fsubs
insb
aaa
ss
insb
mov
in
movb
jae
lds
sbb
inc
nop
ret
fadd
push
sub
mov
popf
jbe
popa
loope
fcmovu
imul
jl
jbe
pusha
aad
inc
ljmp
fwait
ret
push
dec
jno
fwait
leave
movsb
add
mov
cs
add
pop
cli
adc
or
or
pop
fmull
fldt
popa
pop
inc
ss
lock
loopne
nop
jbe
sub
lods
pop
adc
inc
pop
cmp
testl
inc
mov
in
inc
addr16
xchg
loop
cli
jp
mov
add
popf
ret
movsb
inc
xchg
cld
jno
dec
fldenv
movsl
in
xchg
imul
lods
or
jne
cli
lcall
pushw
jmp
push
sbb
outsb
mov
cmp
pop
fisttpl
push
repz
stos
out
outsb
sti
inc
cwtl
jno
iret
int3
lds
sti
fnstsw
or
adc
dec
sti
in
es
jle
lds
xchg
lods
mov
push
mov
sub
inc
out
pop
in
inc
cmpsb
or
test
inc
mov
scas
scas
xchg
jno
lods
mov
jns
loopne
cwtl
hlt
aad
popa
mov
or
aad
fidivrs
pop
hlt
adc
and
fwait
dec
jne
and
mov
or
aaa
push
aaa
ja
scas
test
add
mov
cwtl
mov
and
pop
and
mov
mov
jbe
push
jmp
js
fs
and
mov
or
ss
cltd
xor
fmull
fiadds
fistpl
jns
or
lods
in
adc
scas
decl
or
movsl
and
inc
jg
aas
push
pop
xchg
mov
or
dec
out
jbe
cs
pop
bound
jne
shll
jne
inc
jge
jae
sarl
negb
pop
or
fildll
lea
fisttpll
dec
jmp
test
out
adc
mov
pushf
cmp
sub
aam
in
aad
js
les
insl
imul
dec
loop
push
iret
push
jne
sub
std
push
xchg
xchg
lods
sub
mov
pop
int3
pusha
out
mov
sbb
je
fxch
loop
pop
mov
mov
inc
push
xorb
andb
stos
test
xor
ljmp
les
aas
cmp
in
or
ss
inc
mov
sub
dec
aas
movb
pop
js
jno
or
es
fistpll
pop
movsb
pushf
addb
xchg
dec
and
xor
lea
add
mov
dec
jl
push
addb
neg
stc
gs
or
push
out
lds
or
cmpsb
test
mov
rcl
aas
ss
lret
xorb
subb
sub
add
test
xchg
jmp
movsb
mov
movsb
mov
stos
fadds
add
or
cmp
sub
int
add
adc
mov
push
or
pop
inc
outsb
jle
cmpsb
xor
xchg
out
into
mov
adc
sub
int3
dec
add
data16
adc
cmp
xchg
xchg
mov
mov
mov
data16
cmpsl
push
mov
pop
xlat
aaa
mov
add
and
fdivrl
jmp
jl
icebp
test
or
add
repnz
push
or
sbb
repnz
push
jae
or
cld
push
xchg
cmp
jnp
mov
stc
adc
rorb
mov
fnstcw
xor
lahf
jge
insb
add
xchg
dec
stc
out
sbb
fs
test
clc
fisubs
test
sub
pop
popf
scas
gs
je
sub
pop
stos
cwtl
pop
aam
pop
jo
xchg
jmp
stos
cld
xchg
xchg
or
pusha
jb
xchg
mov
scas
mov
fs
jp
pop
xchg
cltd
ret
mov
cltd
movsl
fdivs
push
pop
xor
xorb
jb
adc
pop
push
xlat
push
xor
xchg
jge
test
hlt
push
sub
in
adc
sarb
xchg
jno
jl
shll
insl
data16
lret
push
push
je
and
lock
sbb
or
mov
out
cmp
cmp
fisubs
les
pop
or
dec
mov
call
cmp
push
cmp
inc
ja
add
imul
icebp
loope
inc
xor
push
push
ds
out
add
mov
cmp
into
inc
enter
jo
imul
stc
sbb
outsl
loopne
fwait
bound
xor
jp
jp
inc
mov
ret
mov
push
pop
xor
push
xor
pusha
dec
paddd
add
dec
gs
mov
int
sbb
or
in
imul
mov
insl
pop
jb
rorb
add
enter
xchg
aam
ret
loope
sbb
popa
rcl
ja
scas
dec
sahf
add
into
test
dec
inc
sub
or
push
jp
sbb
mov
iret
cwtl
jge
dec
rol
add
jecxz
ja,pt
xchg
jae
sbb
and
or
or
mov
pop
mov
gs
jl
jge
inc
dec
and
aam
or
mov
pushf
pop
mov
fs
in
mov
imul
fdivrs
jbe
pop
pushf
repz
push
push
iret
jne
arpl
adc
adc
inc
jne
icebp
or
stos
mov
into
push
ljmp
lret
in
or
xlat
fdivrs
push
shll
sbb
mov
push
fisubrl
cmp
cmp
cmp
push
test
mov
xchg
pop
dec
push
fs
or
jl
add
mov
fisttpll
push
sbb
cli
lods
xchg
fldl
jns
out
andb
xchg
sub
rol
and
adc
loop
push
stos
adc
lock
sub
addb
or
in
outsb
insb
stos
je
xchg
mov
mov
mov
ret
sub
pop
and
add
sub
ljmp
lds
sub
inc
push
pop
jb
or
push
adc
popf
pop
add
incl
pop
sbb
adc
rorl
dec
and
mull
push
insb
pushf
lret
dec
test
outsl
push
inc
xor
lret
std
cld
inc
jg
cmp
das
ds
adc
sub
xor
outsl
mov
xchg
sti
sahf
out
repz
hlt
outsl
xchg
jo
pushf
mov
adc
lea
adc
push
jl
sub
cmc
push
outsl
shrb
adc
mov
sbb
pop
cld
lods
decb
dec
or
mov
xchg
lea
inc
insb
fcmove
sbb
and
xchg
mov
adc
nop
test
push
sub
push
adc
shrb
js
stos
sub
popf
bnd
sub
jp
repnz
inc
shll
mov
out
data16
sbb
xorb
adc
adc
aad
pushl
notl
shr
rol
enter
daa
pushl
inc
inc
sarb
adc
mov
dec
in
iret
lret
pop
pop
popf
dec
imul
mov
mov
pop
mov
mov
jp
popa
imul
pop
push
adc
packsswb
out
xchg
push
dec
mov
hlt
cld
js
std
mov
mov
push
sti
adc
int3
sub
xlat
inc
xchg
insl
gs
inc
rclb
xchg
adc
dec
xor
jne
mov
or
ss
sub
aas
std
inc
xor
mov
pushf
roll
pop
or
pop
sahf
xchg
in
add
rolb
sub
inc
add
lcall
das
and
test
movl
insl
pop
xchg
mov
rorb
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
clc
adc
addl
cmp
lret
fistl
sbbb
push
mov
mov
sbb
inc
mov
xlat
or
push
mov
mov
cmp
ret
xchg
nop
fsts
mov
jbe
aaa
xlat
fidivs
aam
jbe
pop
sub
push
int
aad
in
jmp
aaa
bound
loope
sub
xor
imul
inc
sub
movsl
pop
mov
int
mov
cwtl
jno
sti
jmp
mov
adc
adc
cmp
mov
pop
xchg
out
push
daa
out
loop
push
jecxz
stc
pop
je
in
and
cld
jnp
adc
mov
ret
pop
lret
ss
lcall
mov
call
inc
arpl
lds
call
popf
into
les
inc
cltd
repnz
jne
call
mov
cmp
orb
imul
shrl
cmp
test
xor
dec
ss
xchg
mov
mov
and
mov
popa
shll
inc
push
mov
xchg
je
dec
in
add
mov
stc
add
es
jle
xchg
rol
mov
xchg
jp
cmp
cmc
ret
nop
fstpl
add
imul
das
enter
pushf
cmpsb
repz
push
jne
pop
dec
bound
inc
adc
jp
push
pop
xor
jns
mov
cmc
or
add
sub
ljmp
sahf
and
cmp
mov
mov
pop
jae
scas
mov
out
repz
or
sub
out
xor
mov
daa
push
cld
scas
add
imul
cmpsl
jle
insl
xor
pop
fidivrl
sub
mov
mov
into
push
jp
and
dec
dec
lea
insl
sbb
or
mov
sahf
or
sbb
gs
je
jmp
xchg
mov
pop
xchg
mov
incl
sub
stos
xchg
mov
inc
mov
inc
dec
clc
fisubrl
jle
cmp
addl
jae
jmp
jecxz
fdivrl
sbb
xchg
xor
je
add
cmp
mov
push
inc
insl
jno
jbe
or
sub
add
ljmp
movsl
cmpsb
pop
cmpsl
mov
xor
mov
cmp
cmp
and
and
mul
add
cmp
inc
push
push
das
jnp
subb
xor
push
cmp
lahf
scas
cld
or
cwtl
lods
or
bound
insb
aam
je
mov
rol
movsl
pusha
xchg
mov
fistl
fcoml
inc
call
in
addr16
dec
js
mov
cmp
inc
push
lahf
mov
jl
xor
push
push
and
inc
add
add
inc
xor
imul
jp
and
daa
and
ds
notb
cmpsl
in
int3
add
clc
aam
orb
rorl
int3
cld
sbb
mov
cmp
mov
or
mov
pop
loop
shl
dec
aam
add
push
push
sbb
push
lock
jg
test
loop
aad
cmpsl
xchg
push
add
or
lods
xchg
out
adc
mov
xor
and
in
adc
fcmovbe
lock
call
xchg
jp
push
sbb
neg
push
inc
imul
xlat
mov
lock
mov
and
out
add
jp
inc
lea
sbb
pusha
add
imull
iret
pop
sahf
xor
adc
inc
sahf
js
je
mov
ror
mov
cltd
pop
add
dec
jmp
mov
daa
daa
pop
mov
inc
test
pop
cmp
hlt
xor
lret
mov
repz
dec
in
scas
mov
movsl
pop
mov
inc
ds
into
mulb
mov
mov
repz
cmc
jg
mov
lds
popf
cs
insb
jno
xor
inc
pusha
in
stos
shl
cmp
sub
pop
jge
jg
std
imul
adc
mov
and
inc
clc
pop
sbb
jmp
inc
or
aas
push
push
mov
addl
movsl
lock
icebp
sbb
pop
lcall
pop
mov
mov
jbe
daa
cmp
lods
popa
arpl
hlt
mov
mov
test
push
mov
adcl
xchg
push
dec
jno
sub
andl
sbb
mov
fs
sbb
add
cs
pop
lahf
mov
je
cld
xor
popa
js,pn
add
mov
mov
push
mov
mov
dec
xor
insb
cmpsl
lahf
jae
shll
jmp
js
mov
jbe
std
jge
mov
push
jne
testl
ret
pusha
cli
cmp
cld
fdivrs
mov
jae
mov
into
lods
icebp
hlt
jb
xchg
lea
sub
pop
pop
mov
sbb
xchg
sbb
stc
cmp
dec
hlt
fstpt
mov
xchg
pushf
ret
jg
or
sbb
mov
cmp
push
adcl
incb
sub
pop
fdivrl
mov
fs
fiaddl
movsl
daa
popa
mov
nop
dec
jp
cmc
aas
sti
adc
inc
jno
pusha
andb
xchg
orl
jnp
adc
ja
mov
clc
aaa
jmp
in
lods
mov
pop
fwait
loop
js
les
nop
or
cmpsb
ljmp
sbb
mov
inc
ret
adc
cmovns
cmp
fwait
aas
jmp
mov
jno
sbb
push
fstps
jecxz
test
into
imul
stos
insb
shrl
outsl
fsubl
mov
lcall
shrl
test
test
or
adc
fwait
mov
movsl
adc
pop
insb
aad
jmp
push
pop
hlt
sub
xor
cmpsb
lret
lods
cmpsl
jne
mov
enter
add
inc
std
push
pop
ljmp
fisubrs
jo
aaa
dec
inc
ljmp
sbb
rolb
lahf
and
scas
or
fcoml
ret
inc
pop
sbb
enter
xor
std
dec
iret
xchg
pop
sbb
jne
nop
pusha
mov
xor
jne
push
push
insl
bound
dec
inc
lds
ds
cmp
mov
dec
mov
cmp
and
dec
dec
mov
out
sahf
sub
lea
push
xchg
movsl
lock
add
fbld
and
je
scas
dec
pop
fwait
sbb
mov
cmp
int3
andl
sbbl
push
ja
aas
sub
out
stc
cmp
or
jg
mov
push
inc
push
fcoml
nop
pop
mov
sbb
or
int
test
pop
or
mov
inc
int
jnp
outsb
add
xchg
xchg
fadds
enter
push
out
jmp
leave
jmp
pop
popa
add
inc
ljmp
and
jnp
lcall
fcom
push
ds
and
push
sbb
sbb
add
mov
mov
nop
aad
loop
dec
add
fnstcw
out
das
pop
ja
mov
mov
mov
mull
push
sti
mov
loopne
dec
dec
ja
mov
sub
cmp
xchg
add
add
cmp
data16
fwait
xor
test
push
sbb
mov
mov
pop
in
ja
lock
xor
mov
loope
pop
and
ret
outsl
cmp
nop
or
push
aad
push
shlb
jl
mov
mov
popf
cmpsl
push
adc
das
mov
insl
sbb
push
and
xchg
push
js
mov
dec
scas
or
cwtl
sbb
lods
sahf
xchg
adc
jp
jno
dec
mov
xchg
je
repz
int
xchg
jns
mov
xchg
xor
hlt
jae
sbb
add
nop
fisttpll
test
xorl
ss
sub
daa
sti
fnsave
in
test
jb
inc
aam
add
shrl
push
mov
sbb
xchg
cmp
and
inc
mov
test
data16
cmpsb
mov
or
xor
inc
test
add
test
or
mov
mov
sub
mov
negl
into
fnstsw
push
test
and
arpl
enter
push
fimuls
cld
jmp
xor
insb
ret
cmp
cmp
shlb
rclb
adc
movsl
dec
xchg
xchg
mov
push
dec
in
in
popa
int3
jl
imul
insb
je
fdivl
stc
pushf
inc
das
stos
sub
push
add
dec
push
cmc
or
dec
mov
arpl
push
movsl
leave
dec
stc
xor
out
cmpsb
pop
data16
add
push
inc
xchg
pushf
add
sbb
pop
or
imul
daa
pop
inc
test
das
lret
call
data16
push
mov
and
enter
xchg
ds
xor
add
scas
sbb
dec
and
push
fsubl
cltd
je
pop
inc
sbb
xchg
in
add
dec
lds
addb
std
inc
adc
push
loop
inc
mov
mov
dec
pop
dec
sar
mov
sub
fsubrl
jp
push
lock
add
lret
mov
test
cmp
xchg
inc
dec
cltd
mov
jno
cmp
mov
adc
pop
fisttps
cmp
lods
pop
mov
dec
jae
sti
cmpsb
imul
cwtl
fisttpll
bound
cmp
gs
fucomip
repnz
sub
mov
and
shlb
aam
inc
push
in
cmp
leave
dec
cmpsl
adc
outsl
sahf
cmp
or
sub
popa
xchg
and
lcall
adc
sub
xchg
xlat
xchg
jae
fadd
fcoms
dec
xchg
cli
repz
mov
inc
or
sarl
lret
mov
and
push
addr16
addr16
mov
push
push
mov
loop
sti
sahf
aam
dec
insl
daa
test
push
jo
jo
pop
cltd
fwait
orl
fstpl
jmp
scas
add
subb
cmp
xchg
xchg
in
adc
into
mov
je
cld
sti
into
xor
cmpl
aaa
jl
mov
fbstp
jae
movsb
and
mov
fwait
adc
cmp
mov
fnstsw
mov
lods
loope
loopne
adc
xor
or
mov
orl
mov
test
or
mov
pop
sbb
nop
fimuls
mov
fisubrs
add
push
int3
and
mov
or
fisttpl
gs
jmp
shlb
std
clc
xchg
data16
iret
cmp
push
cmpsb
and
in
inc
sbb
sbb
xchg
rorl
jo
cmpsl
cltd
xchg
sbb
outsb
gs
xchg
sub
and
xchg
adc
pop
mov
push
hlt
call
xchg
jge
sbb
xchg
xchg
fxch
or
add
mov
outsl
inc
mov
xchg
mov
or
and
push
add
les
and
sbb
mov
jne
lcall
sahf
mov
scas
mov
data16
mov
jg
repnz
std
cwtl
jne
scas
xchg
lods
sti
pop
lahf
movsl
sbb
dec
pop
rorb
sub
and
and
not
ret
fdiv
dec
test
and
loopne
cmpsb
sahf
or
fcoms
xchg
xor
sti
dec
lret
mov
aad
ror
xchg
mov
jmp
addr16
jge
fdivrs
in
rorb
dec
movsl
js
outsl
inc
mov
aaa
aas
push
mov
or
rolb
push
pop
lahf
sub
xchg
xchg
sti
mov
subb
loope
jl
in
rorl
loopne
xchg
pushf
jl
shr
mov
or
out
loope
adc
jnp
add
inc
xchg
fnstcw
add
mov
fcmove
sbb
dec
mov
movb
ds
push
ret
cld
testl
mov
push
out
sahf
jne
adc
in
mov
xchg
mov
jmp
jb
fcoml
ljmp
xor
lds
sbbl
sbb
pushf
jecxz
inc
leave
sarl
cmp
dec
sub
pop
sub
push
pop
lods
rolb
jl
dec
pop
loop
stc
mov
inc
cmc
xor
or
popa
push
cmc
outsl
mov
adc
cmp
pop
mov
pop
add
jmp
sbb
scas
je
cmp
sub
xchg
sub
cmp
movsl
pop
xchg
test
inc
sub
dec
insl
push
push
es
xchg
xchg
out
xchg
dec
fiadds
fwait
sub
mov
inc
lahf
cmp
aaa
aam
test
mov
popa
movsb
clc
in
mov
jge
lahf
dec
lcall
jmp
inc
xor
mov
xor
in
xor
or
or
sbb
nop
enter
xor
mov
pop
mov
pop
pop
xor
pop
outsb
out
popl
mov
add
ja
repz
jge
in
mov
xor
ret
fnsave
push
repz
mov
repnz
sub
lcall
scas
sahf
sets
dec
in
orl
inc
xor
cli
dec
aas
push
movsl
push
mov
int3
in
or
stc
xor
and
ss
mov
pop
movsb
sbb
popa
arpl
mov
sbb
cmpsl
jae
mov
fisubrl
test
mov
mov
xchg
in
jmp
sti
mov
jae
xchg
aam
xchg
mov
xor
lds
ds
cmp
xlat
imul
push
fistl
ret
jbe
sarb
mov
sub
push
shll
outsl
sub
xchg
push
push
scas
outsl
inc
xor
pop
push
inc
enter
movsl
adc
sub
loope
or
fcomps
sbb
xor
adc
xchg
in
xlat
inc
sbb
adc
out
jo
bound
mov
stc
jge
clc
adc
loop
insb
mov
sub
jmp
mov
stos
idivb
jbe
stos
cmp
shll
scas
inc
pop
fimuls
push
rorl
stos
cmp
push
lock
sti
lock
or
insl
fimull
fwait
jbe
ret
pusha
or
add
fcomps
mov
or
je
nop
faddl
and
imul
mov
sub
jnp
repnz
lahf
inc
mov
sahf
lods
xchg
push
add
pop
xchg
fbld
js
sub
in
mov
push
stos
inc
mov
iret
das
lods
inc
push
std
fldl
jg
jae
mov
lods
scas
aam
outsl
pushf
pop
add
mov
adcl
das
add
sub
cs
or
push
jp
je
xor
inc
jl
jmp
pop
ds
pop
fsubrs
sti
xor
ret
fldl
sahf
test
es
push
in
dec
lea
mov
jge
push
je
dec
jb
ds
jmp
or
cltd
mov
mov
movlps
aam
sub
loop
jmp
push
sub
cmp
inc
or
mov
and
loope
scas
movsl
leave
pop
fbld
popf
sub
inc
aam
pop
es
sbbb
add
pop
out
cli
les
pop
cmp
push
pusha
xor
xchg
pcmpeqw
mov
inc
shll
cmp
cmp
out
mov
cmpsb
inc
mov
mov
movsl
aaa
stc
in
inc
pop
push
pushf
hlt
xchg
dec
es
sbb
xor
mov
stos
and
push
outsl
jmp
lea
rol
mov
push
bound
inc
push
cli
std
nop
mov
and
call
subl
add
aaa
dec
cmp
mov
cld
inc
push
je
mov
lock
xor
aaa
xchg
ja
mov
and
out
mov
pusha
dec
out
outsl
hlt
dec
xor
or
jmp
mov
push
daa
popa
mov
cs
pop
mov
cmp
cmp
lods
sbb
jns
test
mov
js
and
stc
xchg
cli
es
jmp
cwtl
ret
mov
cmp
mov
push
push
out
jecxz
fs
xchg
jno
or
pop
pop
mov
bound
stc
sub
or
iret
pop
jg
cmp
out
repz
add
push
adc
data16
mov
out
cs
rol
aad
cwtl
repnz
mov
jle
push
push
jne
jge
push
inc
cmpsb
sub
mov
push
sub
sub
scas
hlt
add
xlat
int
aaa
adc
pop
rcrb
stc
mov
lock
cli
leave
add
stos
jmp
icebp
scas
xorb
cmp
sahf
add
inc
jecxz
mov
iret
lods
jae
stc
insl
mov
jl
xchg
out
out
arpl
push
daa
adc
or
imul
inc
cmp
mov
pop
sbb
cmc
enter
xchg
arpl
sub
lahf
and
mov
xor
or
lods
aas
lahf
xchg
cli
fdivrl
xchg
cmpsl
inc
mov
mov
dec
call
ss
in
loope
ljmp
out
lds
loope
inc
and
jg
and
push
cli
mov
ljmp
lret
rcr
cmp
push
jl
rcl
xchg
mov
mov
inc
dec
loope
mov
adcb
xchg
iret
cmc
and
and
popf
popf
sbb
dec
push
test
xchg
rol
fidivrs
xchg
fst
xchg
and
lret
jnp
mov
sbb
insb
fucomip
mov
jb
mov
rolb
dec
filds
cli
fs
cli
ret
add
cwtl
sahf
or
xor
lahf
mov
das
xchg
mov
dec
inc
jno
dec
mov
push
fadds
push
and
jp
clc
loop
jmp
lock
mov
cmpsb
fists
cmpsl
sub
pop
lock
cmp
lods
or
stos
fs
into
cs
lds
sti
les
xchg
mov
xor
shlb
jno
pop
sbb
daa
dec
add
or
xchg
xor
push
cmp
dec
and
pop
mov
fsubrs
ja
in
lret
cmp
imul
jb
rorb
pusha
dec
cmp
dec
ds
call
dec
xchg
data16
cmc
ret
cmp
pop
and
mov
mov
or
ret
in
add
mov
out
or
popa
clc
mov
jo
adc
frstor
xchg
mov
xor
inc
fs
jo
push
cwtl
sahf
push
jae
in
adc
mov
dec
les
repnz
scas
inc
xchg
jl
sbb
xor
rolb
xlat
gs
imul
inc
cltd
inc
adcl
mov
push
adc
roll
inc
das
sbb
outsl
and
pusha
je
cmp
inc
fsubp
outsl
sti
repz
not
movsl
aaa
cmp
aaa
sahf
ss
mov
insb
sarl
jecxz
into
cld
iret
adc
add
and
fcomps
pop
mov
ret
dec
push
and
or
fildll
pop
mov
mov
iret
xchg
aad
or
das
inc
test
loop
push
xchg
jmp
mov
testb
pop
push
mov
cltd
xchg
enter
cld
lahf
xchg
jbe
pop
pop
movsb
push
out
ficoms
adc
mov
mov
jb
mov
in
orl
pusha
dec
xchg
jecxz
cld
and
mov
sbb
and
mov
mov
dec
mov
jo
lods
xchg
out
inc
jne
js
cld
movsl
dec
into
es
dec
mov
dec
dec
cmp
lock
inc
int
inc
jae
outsb
sbb
cmp
scas
mov
sbb
bound
je
sub
or
stos
mov
xrelease
mov
hlt
sbb
movsb
mov
andb
pushl
adc
loop
js
cmc
fimuls
sahf
nop
aad
subl
pop
cmpb
or
and
mov
bnd
pop
sub
mov
pop
jle
stos
jne
out
add
addl
mov
mov
sub
cs
aas
sub
mov
pusha
xchg
out
enter
and
adc
daa
or
push
push
jmp
das
adc
push
mov
call
cmp
xor
mov
fwait
push
pop
in
cld
jne
push
cmc
inc
test
mov
pop
cltd
mov
push
out
in
add
push
push
addr16
int
sarb
test
pop
sub
out
adc
lcall
fcoms
out
pusha
ss
outsb
jp
sub
outsw
or
pop
mov
pop
fdiv
dec
test
fistl
mov
out
out
dec
ss
or
fstpt
sti
fsts
lea
call
scas
test
pop
adc
inc
nop
rcr
push
mov
pop
sbb
push
cmp
mov
mov
mov
push
test
scas
sete
mov
ftst
adc
test
mov
sbb
lea
push
jne
mov
test
and
aam
addr16
sub
arpl
fcompl
fdivrl
sub
ja
push
xchg
pop
push
das
sub
jns
and
loopne
xchg
dec
dec
imul
movsb
and
inc
je
popf
cmp
push
mov
rorl
push
pop
hlt
pop
lahf
sub
pop
and
sub
mov
cmp
pop
int
mov
int3
outsl
mov
fdivrp
aam
fidivrs
lahf
or
scas
push
cmp
das
outsb
repz
jns
pop
loop
xchg
xor
push
ror
cs
cltd
pop
add
mov
fisubs
jmp
dec
lds
inc
fsts
cltd
loopne
xor
push
rcrl
out
mov
xlat
sti
jl
fcmovnb
popf
add
sbb
pop
jl
adc
ret
fisubrl
inc
xchg
adc
out
add
int3
xor
jle
rclb
aam
mov
std
sbb
xor
mov
inc
enter
pop
test
les
mov
out
adc
sbb
jmp
mov
in
daa
lods
pop
test
and
imul
xchg
mov
shll
aaa
out
cmpsl
orb
xchg
adc
sbb
lock
mov
or
mov
and
sub
cmp
ds
ljmp
push
dec
or
les
sub
inc
dec
stos
inc
adc
pop
inc
pushf
cmc
sub
cmp
cmp
adc
inc
lret
iret
fmull
jmp
dec
mov
push
add
mov
sti
sbb
lock
movb
test
insl
jecxz
or
sbb
mov
cs
adc
dec
jnp
push
les
lret
les
mov
push
xor
in
subl
pushaw
fimuls
lea
mov
pop
and
xlat
rcrb
jp
dec
insl
arpl
pop
dec
sbb
repz
fwait
hlt
mov
push
inc
test
or
pop
dec
push
sub
adc
aad
addl
insb
lds
mov
daa
push
daa
cmpsb
les
insb
mov
jle
lds
mov
roll
lcall
mov
dec
xchg
adc
cltd
insl
mov
jg
mov
xchg
stos
xlat
mov
roll
insb
push
xchg
jecxz
hlt
lods
sub
dec
add
lret
xchg
xor
inc
insb
call
call
and
test
push
sub
xchg
mov
adcb
sub
test
ja
ficoml
mov
cmpsb
mov
enter
mov
cs
rcr
dec
es
sub
ss
ror
pop
inc
and
mov
in
add
imul
pop
and
fcmovnb
aaa
jno
mov
adc
lods
orl
xchg
fsubrs
rcll
pop
cmp
test
sahf
push
pop
mov
lds
mov
shll
pop
pop
and
in
jp
cmp
xchg
mov
out
daa
adc
hlt
sbb
mov
pop
enter
push
push
cwtl
data16
cmp
mov
mov
mov
das
sbb
mov
pop
inc
cmpsb
sub
pop
pop
dec
lcall
push
xor
jecxz
fwait
jg
mov
repz
pop
bnd
xchg
outsl
pusha
add
mov
and
es
xchg
in
adc
pop
mov
xchg
cmp
je
mov
insl
sbb
inc
mov
cwtl
mov
cli
movsb
clc
rcr
or
jge
xor
lret
dec
adc
adc
sub
mov
inc
xchg
sbb
movsl
aas
jbe
ret
and
add
sbb
dec
mov
test
loope
sub
mov
les
xor
pop
and
in
rorb
jge
mov
fwait
cmc
ret
lock
cmc
mov
mov
test
arpl
inc
xchg
push
add
sub
lret
add
aam
pop
mov
in
inc
lods
xchg
mov
imul
mov
aas
mov
stc
imul
mov
fidivrs
aaa
sbb
stos
aas
fld
cwtl
test
in
jne
gs
jnp
mov
inc
daa
lds
shr
inc
sbb
mov
insb
xchg
aas
adc
sbb
and
div
fnstcw
add
test
fwait
xlat
ror
dec
dec
movsl
cmp
mov
cmp
lret
sbb
out
push
aaa
in
test
pop
pushf
jge
push
or
inc
pop
roll
pop
in
fstpl
cwtl
or
repnz
jg
insb
fadds
push
daa
cmpsl
xor
fldl
cmc
clc
inc
mov
or
shrl
imul
loope
jle
test
sbb
add
and
cs
push
js
push
cmp
jl
dec
or
sub
sub
add
ljmp
addr16
incb
repz
lds
pusha
iret
test
out
decb
fwait
xor
cltd
in
jg
aas
push
push
sahf
imul
popf
jg
data16
outsl
mov
cld
out
out
sub
mov
ja
xchg
subl
jp
cmpsl
gs
iret
aam
xor
in
leave
adc
pop
es
adc
mov
xor
scas
inc
outsb
js
cmp
push
ficoml
cltd
outsb
ret
push
fbld
xor
imulb
imul
dec
ret
jae
aas
sub
fwait
jl
pop
sub
pop
lds
push
stos
or
xor
mov
mov
pop
pusha
dec
lret
sub
fidivrs
enter
lret
sub
sahf
pushf
ret
xchg
inc
push
mov
lret
loope
popf
adcl
lahf
and
sbb
push
test
push
out
mov
mov
push
nop
mov
add
mov
xlat
mov
stos
notl
clc
jne
xlat
or
orb
jnp
imul
or
inc
pop
inc
pushf
pop
cli
dec
addb
ds
decb
cmp
jne
xor
jmp
xchg
es
add
cld
xlat
xor
sbb
ljmp
ficoml
out
push
mov
les
loop
cmpsb
out
mov
and
test
push
mov
adc
sbb
addr16
pushf
cmp
loope
loope
fld
jnp
pop
mov
hlt
xor
mov
inc
fsts
test
sbbl
push
fsts
jg
dec
xor
ret
push
movsb
pop
cwtl
or
test
nop
out
pop
mov
add
jno
testl
adc
lds
arpl
xchg
pusha
xchg
sbb
sub
repz
add
pop
mov
xchg
cmp
adc
jne
outsb
push
outsl
sub
cli
mov
dec
nop
idiv
in
jle
push
sub
cmpl
je
loope
mov
outsb
or
cmp
and
ficomps
jle
push
in
sar
fimuls
mov
lds
mov
sub
lock
jmp
lea
fadd
adc
mov
sti
in
out
sub
cmp
inc
incb
shl
fnstenv
shlb
and
mov
xchg
sub
imul
pop
mov
fisttpl
pop
mov
jle
jns
or
nop
popf
out
and
xchg
dec
stc
jle
or
xor
repnz
mov
popa
sub
xchg
fists
xor
xlat
cld
repnz
mov
movsl
adc
mull
inc
fbstp
lcall
mov
sti
je
stc
sbb
mov
cltd
fbld
aas
es
clc
fisttps
mov
clc
dec
push
or
mov
out
push
sub
movsl
mov
jnp
mov
xchg
mov
inc
mov
idiv
ljmp
xchg
inc
inc
sbb
xchg
xchg
xor
pop
stos
jne
rcrb
int3
cmp
lock
jmp
dec
in
sub
or
jbe
jo
push
call
lahf
notl
adcb
stos
test
mov
or
imul
fs
inc
push
in
sbb
xchg
ds
outsb
call
push
push
ret
pushf
leave
sub
sbb
imul
and
adc
jmp
dec
inc
pop
iret
test
pop
or
mov
gs
gs
push
dec
aam
decl
hlt
inc
xchg
pop
jae
mov
call
mov
dec
sahf
pop
jmp
sub
lods
mov
jge
mov
cwtl
mov
push
dec
push
dec
test
push
mulb
mov
mov
adc
out
aaa
or
xchg
push
pop
in
mov
adc
loop
adc
shlb
mov
mov
jl
push
pop
dec
cwtl
push
jne
js
or
adc
popa
inc
mov
hlt
cmc
lods
jns
cltd
mov
jb
fmull
mov
fcmove
mov
mov
xchg
or
das
push
rorb
xor
push
rorl
pop
add
sarb
aas
imul
and
push
addl
jecxz
mov
jns
lcall
int3
lcall
sub
dec
inc
insb
mov
aaa
push
test
cmp
fwait
jmp
mov
pop
sub
mov
and
jmp
pop
jmp
insb
outsb
rcrl
repz
jmp
aam
test
xchg
imul
dec
ret
mov
pop
inc
mov
push
adc
sbb
cli
xor
dec
inc
add
shl
cli
xor
repnz
mov
lret
push
cmp
jle
jb
jae
popa
in
pop
clc
sub
xor
add
jo
ret
dec
inc
inc
mov
ficompl
mull
mov
pop
xchg
inc
add
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
fcompl
pusha
inc
jmp
cld
push
mov
mov
fdivl
sahf
jge
rclb
add
xlat
flds
dec
jns
loop
pop
and
cmp
mov
rcll
adc
pop
test
addl
cld
pop
cmc
cmpsb
sub
aas
ljmp
das
mov
mov
out
stc
mov
mov
add
fistpll
jbe
sbb
mov
sbb
mov
dec
aaa
sti
push
je
mov
ror
es
jns
inc
add
ret
imull
pop
add
xchg
pop
add
mov
inc
sbb
push
nop
arpl
push
test
adc
test
sbb
aam
add
adc
jo
fcomps
mov
sbb
movsl
xor
add
and
and
fisubrs
inc
dec
fstps
fstps
or
cmp
mov
push
dec
andl
dec
aam
sahf
adc
lret
or
jnp
cld
fwait
push
scas
iret
ss
mov
pop
nop
lret
lods
out
pop
into
mov
jb
jno
arpl
sbb
icebp
jecxz
std
or
addr16
adc
pop
mov
stos
loopne
xchg
mov
cmc
fimull
xchg
jp
and
and
mov
cmp
aas
dec
mov
push
mov
nop
pop
adc
sbb
xchg
es
popa
mov
inc
jns
xchg
aas
sub
mov
aad
std
pusha
jge
imul
mov
sub
xchg
mov
add
xor
repnz
shrl
mov
pushf
adc
mov
pop
mov
ds
push
jo
add
dec
add
mov
mov
lds
and
gs
loop
push
add
in
sarl
adc
in
andb
sub
or
jle
sub
ja
and
fdivrl
and
ret
repnz
flds
sub
mov
lods
pop
pop
nop
outsl
pop
mov
adc
inc
in
scas
cld
ja
mov
mov
je
sbb
xor
sar
out
sub
stc
jmp
lahf
push
jae
subl
mulb
movsl
push
loop
sub
into
ret
add
and
inc
movsb
xchg
sub
pop
xchg
pop
call
mov
pop
das
in
mov
addr16
and
push
xchg
sub
imul
mov
repz
aad
insb
and
xlat
xchg
lret
test
int
inc
out
or
lods
cmpsl
mov
xchg
rcl
inc
inc
mov
pusha
jp
add
xchg
dec
out
push
shl
pop
dec
sbb
mov
and
xchg
cmp
and
xor
fimuls
fimull
repnz
xor
dec
jmp
aam
sub
fistpl
push
xchg
lret
in
inc
lock
icebp
jno
xor
dec
rcrl
out
lds
jmp
popf
dec
mov
push
adc
mov
mov
les
jmp
or
daa
xchg
incl
call
test
cmpsl
je
push
cwtl
ljmp
cmpsl
mov
mov
jne
pop
out
sub
inc
std
call
mov
xacquire
lcall
mov
cwtl
mov
cmp
int3
mov
inc
cmc
push
push
daa
out
sub
cmp
inc
xor
push
mov
add
add
mov
mov
adc
std
jle
out
addl
insl
pop
addr16
mov
in
or
pop
dec
aad
aas
je
dec
decb
lock
fbld
dec
jne
sub
adc
add
inc
sbb
jp
rolb
stos
pop
popa
or
mov
ja
addr16
inc
mov
sbb
loop
test
inc
push
mov
mov
pop
bound
fisttpl
xchg
cld
inc
bound
orl
cmp
daa
scas
addr16
ljmp
xor
mov
mov
fbld
mov
ljmp
pop
jmp
push
lret
ljmp
add
push
out
mov
dec
mov
je
paddw
int
fstl
xchg
inc
shl
inc
add
mov
out
stc
inc
cmp
xchg
mov
jbe
lods
ud0
mov
imul
test
add
dec
in
xor
movb
loope
jl
pusha
xchg
push
inc
cmp
out
and
dec
push
jmp
push
mov
push
cwtl
pop
mov
mov
add
notl
cld
cmp
add
jnp
mov
lcall
pop
sarb
bound
sub
jge
out
in
fistl
lods
cltd
sti
xchg
je
xor
jp
mov
loope
adc
aad
jl
cmp
cmpsl
ds
lds
lods
pushf
jmp
pop
cmc
mov
sub
mov
in
xchg
dec
sbbl
pop
shrb
fsub
pop
adc
cltd
cli
jbe
test
and
lahf
out
subl
lods
and
jbe
call
jg
cmp
divb
movntq
fistps
lcall
jmp
jns
bound
insb
stos
leave
movsl
addr16
or
orl
push
movsb
jge
lahf
push
fistl
dec
xchg
mov
js
jns
outsl
ds
les
repnz
insb
xor
sbb
and
or
rcrl
jno
inc
dec
out
scas
xor
aas
fidivrl
fisttpl
ljmp
je
or
loop
addr16
test
ja
mov
inc
ret
sti
push
jecxz
inc
add
in
xor
or
jae
sbb
pop
rol
imul
or
inc
inc
pop
xchg
or
sahf
xor
sarb
and
add
sbb
pop
into
in
rolb
xor
shl
mov
add
test
jno
jmp
in
mov
pushf
or
in
insl
mov
pop
filds
pop
jge
cmpsl
out
or
fwait
and
lea
in
nop
or
movl
sub
pop
or
push
jmp
xor
movsb
in
cmp
icebp
sbb
cld
mov
scas
sbbl
ljmp
mov
xadd
lcall
inc
dec
inc
push
inc
dec
aas
ss
aaa
inc
sub
push
add
faddl
fwait
sbb
scas
lahf
pop
lds
xchg
push
ret
sub
xchg
xchg
out
dec
lret
xchg
sbb
jne
mov
pop
jmp
fcmovnbe
ss
mov
pop
push
popf
dec
cmp
dec
add
xchg
pop
dec
push
dec
pop
pop
js
push
fisubrl
dec
mov
daa
sbb
mov
inc
iret
in
test
popa
cmc
loop
cld
dec
ja
add
mov
ja
sbb
fidivrl
rcrl
mov
div
jns
cmp
ret
or
push
pop
xlat
push
out
mov
imul
mov
fnsave
xchg
mov
stos
jae
push
test
ficompl
movsl
jno
cs
fldenv
movsl
jp
subb
lock
int
adc
ja
fistpl
xor
cli
push
jo
sbb
dec
push
shr
dec
fsubp
cld
iret
test
in
jge
inc
loopne
dec
ret
push
js
sub
adc
pushf
dec
cwtl
inc
test
mov
outsb
lds
and
rcll
cmpsb
js
sbb
shlb
jns
xor
jecxz
xorl
test
cmp
mov
stc
nop
mov
xor
fs
mov
imul
mov
mov
mov
fistps
or
mov
mov
dec
ds
xor
push
and
shlb
mov
test
adcb
dec
cmc
jle
adc
std
pop
scas
sarb
filds
and
adcl
sarb
lock
adc
outsb
test
ja
pop
movsb
outsw
inc
add
mov
clc
mov
xor
mov
xorb
cmp
ret
jnp
fs
cmp
inc
in
js
test
andb
xchg
jmp
sahf
cmpsl
std
sub
mov
in
data16
xchg
push
pop
mov
cltd
sbb
dec
cli
add
xchg
or
xorl
inc
in
xchg
loopne
adc
or
stos
jle,pt
loop
mov
xor
enter
adcb
cmp
cmpsl
xchg
jmp
mov
sbb
mov
and
imul
inc
mull
pop
push
addr16
shlb
or
inc
push
aad
fdivl
pusha
sbb
fcompl
push
sbb
cmc
pop
fldt
sbb
xor
mov
rclb
fstl
pushf
sub
push
push
filds
lds
cmc
les
ret
xor
imul
scas
mov
pop
pop
pop
stos
cmpsl
push
lret
loope
aad
xchg
ja
imul
xor
int
dec
push
and
cmp
cmpsl
test
sbb
bound
xchg
incl
mov
test
or
pop
pop
cmp
addr16
sub
loope
cmp
scas
sti
repz
xchg
sub
bound
loop
insl
pop
add
adc
mov
call
repnz
outsb
cmp
pop
push
es
pop
cmp
in
cmp
inc
dec
mov
add
nop
ljmp
push
movsl
iret
mov
mov
pop
fimuls
roll
outsl
loop
adc
mov
imul
mov
arpl
cmc
dec
pop
into
add
push
daa
sbb
ja,pt
push
shlb
leave
adc
js
mov
push
and
int3
in
pop
push
test
lahf
push
mov
sbb
pop
popa
cmpsb
loop
add
outsl
nop
push
jmp
dec
in
stos
mov
test
data16
mov
cld
outsb
lahf
jbe
sbbb
xchg
lods
mov
rcrb
sub
loopne
inc
in
notb
hlt
sub
mov
sub
mov
adc
ret
in
outsl
mov
pop
adc
jno
popa
inc
mov
lahf
dec
dec
ljmp
jmp
add
cmp
dec
fnstcw
nop
jp
sbb
and
mov
mov
jge
xor
out
sahf
xchg
leave
lds
in
mov
scas
movsb
sbb
mov
lahf
jmp
mov
cltd
jo
jg
push
test
call
add
or
mov
cld
arpl
movsb
mov
pop
das
jae
cmp
add
insl
jge
and
xchg
add
sar
ss
push
and
cltd
or
aam
cmpsb
in
push
call
xchg
popa
je
lock
pop
shl
lds
or
test
xor
mov
rol
test
inc
xor
daa
and
cmp
or
jle
or
lcall
in
mov
jno
cmpl
ss
sub
shll
cmp
xor
mov
mov
mov
jo
and
cwtl
repz
inc
sub
xor
dec
add
fistpll
adc
xor
dec
cwtl
inc
jb
popf
movl
lea
jne
mov
rcrb
pop
xor
push
sub
fs
mov
adc
decl
gs
mov
out
push
pop
and
faddl
pop
fadd
cmp
add
add
inc
xor
idivl
inc
and
dec
arpl
arpl
cmpsl
hlt
cltd
mov
lds
jno
pop
nop
mov
pop
sti
ljmp
rcll
xor
orb
imul
and
cmp
pop
pop
pushf
cld
add
fists
mov
mov
dec
sti
add
loop
js
fisubl
hlt
jno
popa
out
pop
mov
jmp
inc
icebp
ja
sti
insl
scas
dec
push
rep
and
cmp
jo
jae
ret
lret
shl
sub
mov
lcall
shrl
sub
in
and
add
insl
push
arpl
insl
xchg
js
add
push
mov
inc
mov
mov
add
mov
test
mov
popa
mov
adc
jp
cmpsl
or
ficompl
stos
sahf
aas
push
sbb
hlt
or
dec
or
pop
jle
gs
jno
xor
mov
outsb
push
mov
int3
mov
aam
data16
sahf
sub
mov
cli
sbb
cmpl
mov
and
adc
push
mov
enter
hlt
pop
cmp
push
cltd
test
add
addr16
and
lcall
lahf
enter
xor
cmpsb
inc
aaa
push
cmpsb
lret
adc
push
andl
repnz
sub
stos
cmpl
jge
and
mov
adc
or
aas
cli
in
test
cmp
in
cmp
pop
je
pop
imul
fdivr
aad
mov
in
mov
xchg
in
jp
daa
sarb
lret
cmpb
inc
or
mov
pop
mov
cmp
int3
jle
pop
lea
mov
add
add
and
std
dec
cmp
add
sub
mov
xchg
mov
aaa
xchg
xchg
lcall
pop
mov
repnz
inc
add
jecxz
mov
pop
enter
and
cmp
cmp
jne
ljmp
xchg
xchg
add
mov
out
lahf
sbb
mov
mov
or
call
test
insb
and
out
mov
adc
mov
mov
mov
data16
insl
dec
inc
adc
adc
repnz
lret
mov
adc
stos
pusha
jno
pop
mov
cwtl
xchg
add
dec
push
jo
inc
pop
daa
sub
and
sbb
adc
mov
jl
mov
fwait
sub
cwtl
pop
jle
aas
lea
or
jmp
sub
fmul
xchg
cwtl
inc
push
addr16
dec
sub
push
and
add
mov
imul
adc
adcb
ror
mov
pop
pop
jg
mov
shlb
mov
bound
lods
mov
arpl
sbb
daa
sub
out
test
lock
mov
clc
shrl
bound
adc
or
int3
ljmp
lahf
test
fcompl
sbb
repz
leave
xor
insl
jns
push
xchg
jne
push
jae
shll
popf
xor
arpl
scas
fdivrl
and
jb
mov
shrl
mov
imul
mov
and
dec
rcrb
xor
mov
push
add
pop
lods
jg
push
lahf
push
xor
adc
insl
cwtl
inc
jne
xchg
mov
fwait
scas
pop
in
mov
sub
adc
sbb
add
xchg
and
and
push
mov
push
dec
mov
leave
xchg
mov
cld
pop
sub
call
test
adc
mov
or
cmp
out
or
and
push
rorl
ds
sahf
mov
mov
sbb
icebp
mov
mov
mov
sbb
test
leave
les
jle
pusha
imul
add
cld
mov
notb
inc
fistl
add
icebp
pop
cmp
push
xlat
leave
xchg
push
ret
je
or
push
mov
mul
mov
faddp
xor
xchg
adc
in
sub
or
ss
ficoms
fildl
lahf
int
mov
push
inc
mov
cltd
lock
enter
xchg
mov
outsb
dec
leave
and
test
loop
push
push
cltd
pop
xchg
addr16
stos
sbb
mov
push
adc
flds
xchg
dec
jl
fmull
mov
push
adc
pusha
add
in
stos
lods
mov
mov
sbb
push
sti
lods
lret
cltd
mov
sbb
int3
scas
mov
arpl
inc
inc
adc
cmc
mov
adc
rclb
stos
mov
jp
iret
aad
outsb
add
jb
mov
mul
out
cwtl
xor
incl
mov
in
js
jno
stos
cmp
ljmp
dec
stos
das
push
dec
stos
pop
test
lds
jge
dec
mov
jne
add
cs
dec
cmp
add
fmuls
push
aad
xchg
cmpsl
add
cli
adc
loopne
rorb
icebp
jmp
into
ficoms
and
js
mov
inc
mov
repz
inc
mov
and
into
pop
and
inc
ret
jg
js
ja
jge
imul
stos
repnz
add
jno
mov
inc
cmp
push
sub
nop
mov
mov
jmp
popa
out
aad
cmp
sbb
or
sbbl
outsl
push
stc
clc
xchg
loop
loope
inc
dec
filds
ljmp
cmp
addr16
rcr
lock
mov
shr
push
popf
jge
mov
negb
mov
jns
cmpsl
les
jmp
xor
mov
push
rcll
cwtl
inc
or
xor
fs
xchg
hlt
loopne
jno
lods
les
sub
pop
bound
cmpsb
mov
xor
nop
lds
stc
call
popf
xor
inc
mov
sarb
fadd
mov
adc
lahf
dec
jns
sub
ss
push
popa
movsl
add
pop
rolb
inc
lods
lock
fsts
hlt
fsubr
cmp
shlb
sti
xchg
cld
scas
sbb
movsl
sub
dec
lret
xchg
test
mov
pop
mov
aam
xchg
pop
stos
sub
inc
out
loope
in
insl
jae
lcall
xor
scas
enter
cs
leave
push
mov
bound
mov
push
sbbl
pop
mov
stos
repnz
mov
jb
iret
fwait
adc
sbb
dec
mov
imul
push
fldpi
andl
leave
int3
mov
addb
fadds
xor
ljmp
lahf
push
dec
push
jb
push
mov
adc
ss
rcr
mov
testb
stc
jge
xchg
jnp
in
add
jb
popf
pop
xchg
pop
mov
sub
dec
inc
pop
fcompl
mov
sbb
lahf
out
ror
dec
inc
xchg
jl
mov
lret
lcall
shlb
cmpsb
ret
sbb
cmpsl
sub
inc
push
lret
incb
dec
push
mov
cwtl
mov
sbb
inc
push
lds
loop
mov
sarb
dec
jbe
xor
jmp
nop
in
jl
lods
fiadds
dec
icebp
xchg
and
or
and
ret
rcrl
pop
xchg
scas
test
jle
jnp
adc
xor
mov
loop
jns
xlat
and
mov
rcl
mov
incl
test
bound
lods
pusha
sub
jb
add
test
adc
jae
cmp
pop
loop
mov
lret
xchg
ret
push
pop
call
loop
mov
roll
push
enter
pop
sub
pusha
out
push
mov
imul
aas
mov
js
ja
nop
in
inc
xchg
mov
jle
insl
sub
or
test
mov
and
and
sbb
lods
cli
scas
and
mov
out
test
mov
push
std
cli
daa
dec
add
cmp
cs
push
loopne
inc
cltd
lock
inc
icebp
and
faddl
dec
sbb
aas
cltd
das
push
and
dec
sbb
mov
xchg
pop
jb
test
popf
mov
loope
xchg
je
out
stos
pop
into
jbe
adc
xchg
je
mov
cwtl
pop
mov
add
mov
push
xchg
xchg
add
cld
cmc
ficoml
mov
push
stos
sbbb
ds
in
idivl
call
add
mov
fwait
lret
lcall
scas
xor
clc
xor
or
sub
dec
stc
stos
add
mov
sbb
mov
adc
mov
lods
add
loopne
pop
imul
jge
cmp
jge
sbb
repz
adc
imul
push
popa
gs
lods
filds
adc
lcall
stos
jl
mov
addr16
cmp
fcoms
mov
inc
lods
pop
sbb
hlt
into
testl
mov
test
ds
or
repnz
sarb
testb
xor
ret
or
nop
pop
pop
jno
sbb
pop
jp
mov
jp
cmpsb
lea
dec
lods
clc
aam
mov
pop
rolw
test
int3
cwtl
ds
adc
push
call
sbb
leave
out
xchg
xchg
push
jno
cmp
lret
jno
pop
push
aas
test
mov
scas
loop
jl
clc
jge
repz
loopne
jne
pop
add
cmp
stos
pusha
fnstcw
sar
lea
fnstsw
pop
pop
or
popa
shr
mov
and
sub
pop
xchg
pushf
mov
xor
in
pop
rcl
shl
enter
push
xor
xchg
sti
data16
inc
test
and
adc
je
gs
add
in
scas
lds
mov
mov
jle,pt
lahf
xlat
mov
push
mov
sub
pop
push
mov
je
std
mov
rclb
push
cltd
or
stc
inc
push
adc
fistps
das
xchg
cld
jbe
add
mov
lock
pop
push
aaa
outsl
clc
xchg
testl
imul
xchg
rclb
add
test
mov
push
test
adc
mov
adcl
mov
int
push
push
dec
test
adc
outsl
jbe
push
insb
outsl
hlt
aaa
and
jns
pop
ja
shlb
inc
and
lods
cmp
jno
aaa
arpl
mov
arpl
jl
xor
sub
push
dec
jg
test
test
or
mov
sub
cmp
cmp
fidivrs
jnp
inc
cmpb
dec
data16
iret
jle
mov
inc
pop
sub
push
pop
sub
mov
lcall
sbb
and
loope
ret
bound
jmp
outsb
xchg
stos
jp
std
ret
movsb
mov
je
adc
aas
lea
clc
das
sbb
and
jae
mov
pop
out
cmp
shl
sbb
lahf
and
pusha
outsl
jmp
sbb
hlt
inc
sbb
xor
cmp
sarb
cli
pop
inc
push
mov
aad
imul
mov
pop
sub
cmp
incb
sbb
jnp
and
xor
lret
pushf
mov
xchg
sub
mov
push
xchg
cmp
aaa
loope
add
mov
icebp
cwtl
popf
int3
daa
sbb
sub
js
xor
pop
cmp
mov
fists
xor
mov
xchg
shl
repz
outsb
das
lea
imul
mov
sub
pop
fiaddl
xor
stc
je
pop
sbb
sub
mov
lea
int
dec
or
ret
or
jns
fstl
lods
es
adc
addb
add
push
sahf
xchg
lret
xchg
cmp
andb
jae
sub
aas
adc
mov
notl
xor
mov
sahf
in
out
mov
jno
outsb
or
notl
adc
sahf
cli
cmc
inc
test
inc
hlt
movsl
xchg
adc
jmp
lock
stos
sbb
dec
fs
push
xor
jne
orl
xchg
pushf
sti
add
xchg
int3
dec
cld
sub
pop
jbe
fldt
data16
dec
dec
mov
rorl
aad
sbb
pusha
jnp
dec
je
test
push
inc
mov
or
dec
pop
mov
out
clc
add
sub
pusha
cmpl
cmp
inc
sbb
shlb
jecxz
dec
add
lahf
repz
dec
xchg
mov
stc
clc
push
leave
push
scas
fimull
lret
je
jp
dec
es
les
sbb
dec
cltd
stos
stos
inc
imul
jb
or
jne
fldenv
xorb
loope
dec
xor
imul
or
mov
test
movups
mulb
mov
push
jbe
pusha
test
pop
add
sub
xchg
sti
ds
jbe
xlat
pop
hlt
adc
dec
mov
adc
xor
jne
outsb
mov
pop
mov
dec
cld
icebp
xor
sbb
xchg
sub
xchg
adc
pop
imul
pop
add
arpl
cmp
mov
popf
fs
xchg
test
dec
push
es
xchg
jl
lret
fistps
daa
sub
or
daa
fidivrs
out
push
adc
adc
cmp
adc
xor
cmp
test
jbe
sbbb
dec
dec
loopne
outsb
xor
xchg
negl
sub
push
xchg
aam
push
xchg
mov
push
iret
jg
jmp
rclb
rorl
cwtl
mov
out
mov
ljmp
icebp
sub
xor
sub
cmc
dec
push
out
int
ss
clc
aaa
sub
add
cmp
dec
dec
and
mov
or
push
sbb
cmpsb
out
rcrl
cmp
cmp
imul
or
loopne
xchg
push
icebp
insl
add
cwtl
xor
imul
scas
push
xor
jl
dec
add
cld
aad
aaa
imul
repnz
clc
xchg
pusha
add
icebp
dec
test
callw
dec
pop
push
rep
dec
push
jb
pushf
xchg
sbb
and
inc
movsl
and
lock
jbe
jecxz
or
xchg
xchg
and
and
outsb
in
pop
clc
add
roll
cmp
jo
cmp
mov
push
push
mov
mov
insb
cmpsl
fs
sbb
cmpsb
jbe
xlat
je
jno
cmpsb
pop
dec
lret
test
dec
movsl
sti
push
sahf
cs
and
and
xchg
in
jmp
jb
mov
cld
xor
mov
ljmp
icebp
adc
sub
lock
sub
sub
sti
lret
lcall
cmp
test
mov
mov
es
xchg
movsl
movsl
sar
es
out
cli
mov
cwtl
xor
ret
adc
out
in
shl
cmc
jb
les
push
outsb
and
je
out
and
rclb
into
cmp
scas
or
shlb
lock
sub
xor
mov
xor
xchg
push
aam
adc
addr16
rcrl
jno
loop
mov
sbb
jbe
dec
mov
leave
sahf
dec
adc
aad
add
mov
jb
movsb
mov
or
arpl
ror
jp
xor
aaa
mov
fadds
push
mov
sub
dec
mov
mov
jg
pop
xor
mov
mov
jecxz
outsb
int3
sbb
in
adcb
and
incl
je
in
dec
addr16
lds
jo
xchg
xchg
xchg
loop
and
xchg
popa
ret
lret
test
or
jb
popa
icebp
lds
pusha
pop
pop
jo
or
jmp
dec
mov
mov
sub
cli
clc
int3
nop
and
popa
movl
jg
dec
loope
pop
loopne
xor
and
mov
notl
imul
mov
lahf
sub
outsb
pop
push
push
mov
pop
jnp
stc
in
shl
xor
pop
bound
or
pop
push
dec
lahf
std
adc
sahf
jnp
arpl
sub
and
sub
or
loopne
nop
dec
cwtl
clc
aaa
inc
int3
mov
scas
jo
outsl
nop
sbb
mov
imulb
shlb
outsb
lahf
push
push
inc
out
popf
jle
mov
test
xor
jb
aas
lds
int3
or
mov
idivl
add
sahf
mov
xor
adcl
add
scas
mov
into
psubusw
and
stos
test
dec
sbb
sub
pop
rclb
jp
jo
sub
shrb
xchg
fwait
push
push
aaa
pop
ss
pop
mov
mov
sbb
or
inc
and
push
aam
jns
add
sub
repnz
pop
xchg
mov
xor
sbb
inc
lea
bound
jl
iret
fildll
sub
test
and
test
or
addr16
outsb
rolb
jns
lss
jae
std
inc
add
or
add
xchg
mov
icebp
push
loopne
pusha
xor
sbb
jno
loopne
sub
daa
gs
xlat
xchg
aas
lds
not
jp
insb
cwtl
test
bound
push
and
mov
bound
das
mov
dec
mov
adc
stos
lock
jmp
pop
inc
push
sub
mov
aas
fcmovb
pop
mov
push
push
out
sub
lea
add
fmuls
out
aad
les
pushf
and
cltd
in
pop
sbb
sbb
cmpsl
xchg
add
pop
mov
push
adc
pop
add
sbb
push
mov
and
cmp
cmp
push
call
idivl
push
adc
fsubrp
pusha
addr16
scas
enter
dec
pop
jbe
push
lea
mov
movsl
xchg
push
cmp
lahf
aaa
es
shrl
mov
loope
in
stos
push
cmp
and
bound
add
aam
jb
cmp
addr16
dec
pushf
lret
push
xchg
mov
lds
dec
jmp
mov
inc
dec
adc
jmp
nop
out
and
push
jo
js
frstor
sti
test
std
xchg
sbb
roll
pop
or
add
jl
imull
mov
xchg
pop
inc
jecxz
out
mov
or
icebp
xor
lock
test
xor
in
or
incb
clc
jecxz
shrd
fcomp
sahf
clc
insb
aas
adc
mov
push
xchg
bound
mov
pop
push
jle
mov
or
mov
adc
mov
std
test
faddl
dec
xor
push
test
xlat
std
movsl
jg
sahf
aad
xchg
add
dec
jns
lea
rcrl
sub
push
pop
or
jmp
mov
cmp
push
push
xchg
mov
fidivs
mov
xor
shll
add
call
leave
lret
jae
pop
movsb
pop
imul
add
jo
xor
mov
mov
jns,pn
out
or
insl
push
fcmovb
div
prefetch
push
adc
jg
xchg
subb
movsl
add
mov
xorb
cmp
xchg
pop
aas
or
ja
adc
out
lcall
mov
daa
push
xor
inc
pop
scas
cmp
pop
sbb
pop
inc
pop
mov
jle
cmp
out
int
mov
ds
jnp
test
jo
cmp
xchg
pop
xor
in
xchg
fcmovnb
pop
cmp
in
pmullw
cmpsl
andl
pushf
or
push
add
in
rol
jmp
xchg
mov
cmp
ds
jmp
call
sub
push
ljmp
xchg
rcrb
aad
mov
mov
sbb
mov
out
adc
sbb
push
out
mov
pop
sbb
xchg
sub
gs
cmp
lret
andl
test
add
add
and
add
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
iret
sbbb
call
or
mov
add
lret
scas
mov
inc
lea
xor
punpckhbw
sbb
loope
das
xchg
std
in
push
repnz
call
int
mov
pop
mov
jno
mov
and
cmp
jg
mov
aas
xchg
mov
cli
insl
in
scas
aam
shlb
std
into
cltd
inc
push
cmpsl
sbb
iret
or
negl
iret
hlt
fdivrs
mov
xchg
hlt
jbe
sub
jg
lods
dec
out
popa
arpl
dec
filds
mov
mov
roll
xor
js
idivb
and
test
or
xor
jecxz
and
repz
ret
lds
insb
jne
adc
scas
scas
sbbb
add
lods
out
mov
into
lcall
ja
inc
mov
pop
inc
nop
push
mov
dec
cmpb
push
cmp
loope
fisttps
dec
rcrb
aad
ret
addr16
adc
mov
xchg
in
jns
jle
icebp
into
fisubrl
loop
ja
xchg
mov
mov
sbb
jno
popf
scas
mov
jnp
adc
mov
dec
xchg
lret
arpl
adc
or
and
enter
out
lret
mov
mov
stos
push
mov
mov
push
hlt
cld
stos
add
std
popa
sbb
inc
xchg
inc
push
dec
cli
insb
imul
shlb
sub
or
push
push
mov
xor
iret
jne
dec
mov
pop
inc
addb
ss
jno
addr16
sbb
ja
cmp
dec
test
sbb
leave
sarb
sbbb
sub
sbb
lds
mov
or
mov
addr16
movsl
nop
cltd
outsl
mov
mov
mov
cs
icebp
into
js
js
inc
andl
dec
adc
andps
in
jno
and
cmc
pop
cmp
dec
sub
out
repz
sbb
sub
mov
ljmp
mov
in
out
ret
jno
sbb
test
and
lock
ss
ret
dec
test
xor
pop
mov
or
xor
mov
scas
pushf
fmull
fsts
sub
into
mov
mov
mov
adc
shlb
stos
test
cmpsl
insl
jg
bound
add
inc
shrl
xor
lea
test
shlb
xchg
jg
je
xor
ficompl
jge
pushf
sub
mov
add
lods
lahf
mov
or
cltd
adc
insb
aam
cmp
sti
stos
mov
ficoml
push
mov
jecxz
mov
je
repnz
push
xor
sbb
dec
xor
loope
imul
cmp
dec
add
inc
lods
test
or
adc
sahf
das
out
cwtl
jb
lock
xor
mov
or
and
xrelease
icebp
push
jns
jmp
pop
shrb
sub
mov
dec
mov
jb
add
ror
adc
lcall
xor
mov
pushf
out
xchg
mov
outsl
cmp
inc
clc
xchg
or
sub
xor
pop
cmpsl
or
jg
lahf
add
scas
mov
add
xor
rorl
mov
add
adcl
out
ret
andl
lret
xor
rcll
cmp
ljmp
fstpt
clc
and
xchg
sub
or
leave
cmp
xor
add
cmpsl
and
xchg
inc
dec
out
fs
or
test
sbbb
mov
lret
add
movsb
sarl
dec
in
leave
roll
lods
ret
cmp
in
shlb
xor
xchg
xchg
adc
mov
cmp
push
add
adc
push
nop
cmp
and
repnz
inc
mov
and
mov
repnz
and
test
inc
je
scas
daa
cmp
std
push
xchg
inc
and
jns
in
add
xor
mov
add
std
insl
fwait
bound
js
cld
cmpsb
xchg
sub
das
mov
adc
or
call
xchg
push
and
sbb
pcmpeqb
loopne
mov
out
repz
push
fmull
outsb
sbb
mov
addb
sbb
ret
jno
lods
jb
incl
mov
movsb
inc
das
gs
push
outsl
cmp
cld
push
mov
adc
mov
outsl
adc
testb
std
dec
decb
push
push
rcll
imul
mov
jbe
aas
and
mov
or
je
in
mov
mov
adc
repnz
pop
push
dec
jb
mov
inc
xor
jo
jge
and
in
sbb
test
int
js
hlt
push
inc
xchg
imul
cmc
cli
fisubrs
xor
movsl
dec
mov
xor
pop
mov
dec
mov
std
leave
xor
cmp
jnp
insl
mov
inc
insl
mov
mov
mov
mov
fwait
loop
ljmp
mov
int3
xchg
xor
cwtl
lret
stos
xor
xchg
int3
cli
push
sbb
repnz
add
outsb
add
jne
mov
cmp
js
cmp
rorb
fsqrt
cwtl
push
mov
sti
cmpsl
mov
bts
in
pop
dec
imul
test
fstpt
xchg
and
xchg
movsb
in
bound
aaa
mul
mov
out
mov
test
inc
and
push
stos
push
add
scas
mov
adc
pusha
js
stos
aaa
xchg
movsl
test
es
mov
lods
into
push
xlat
sub
xor
loope
xchg
repnz
jle
sub
cmp
stos
rorl
mov
push
shlb
jb
push
cmp
mov
fldt
and
jbe
cmp
inc
jp
ds
insl
jecxz
into
pop
mov
mov
pop
mov
cmc
aam
mov
or
pop
mov
pop
imul
cmp
pop
clc
xchg
mov
mov
dec
sbb
fucomip
xchg
in
sub
cmpsl
sbb
jge
outsl
loopne
pop
hlt
jnp
sub
scas
std
out
sbb
cmp
jmp
inc
add
xchg
mov
sbb
fmul
xchg
cltd
and
nop
inc
xor
pusha
addr16
jns
mov
rol
fists
add
mov
cmpsb
daa
push
dec
or
inc
jbe
pop
pusha
mov
cmp
mov
pop
pop
icebp
sub
pop
test
int3
scas
jo
xor
xchg
mov
dec
mov
lret
ds
loop
mov
test
mov
popf
pop
xor
sti
andb
lret
popa
std
shrl
lret
add
nop
out
ds
sbb
fcmovne
and
iret
mov
ret
rol
out
scas
xchg
adc
aad
add
shr
xchg
test
add
in
pop
inc
xor
jle
jns
lods
jnp
sbbb
push
push
sti
les
jns
xlat
adc
arpl
jp
mov
fldenv
cltd
push
jl
pop
dec
sub
pop
clc
fcoml
stc
xchg
cwtl
xchg
aas
or
xchg
dec
sbb
adc
into
push
popa
mov
fs
rorl
mov
mov
jae,pn
outsl
adcl
fcompl
mov
enter
lea
mov
sub
data16
enter
and
shll
or
mov
jg
and
cmp
scas
xchg
fwait
cmc
addl
xor
ljmp
fisubrs
jp
add
jp
xchg
cmp
dec
dec
sahf
cmp
mov
out
dec
clc
mov
push
ret
ss
lret
mov
and
fisubl
xchg
and
inc
test
jp
mov
ret
push
xor
fisubl
mov
stos
hlt
daa
nop
out
addr16
cwtl
sub
mull
push
ds
xor
jle
pop
jb
push
mov
outsb
jp
insl
dec
inc
push
imul
fst
aas
pushf
lret
dec
dec
in
mov
in
sbb
js
xchg
inc
mov
dec
into
popl
jae
pop
jnp
xchg
scas
mov
xchg
sti
and
lret
sub
jg
cmc
ror
lock
test
fldenv
or
jecxz
mov
jmp
pop
fbld
mov
add
or
roll
jp
cld
cmp
jle
mov
inc
enter
inc
cmc
sarb
loope
xor
and
add
add
inc
or
adc
outsb
je
dec
arpl
outsb
outsl
or
repz
aam
jp
sub
pop
pop
into
mov
adc
rcll
or
mov
leave
inc
dec
and
adc
dec
shll
cmpsb
jno
mov
inc
cmp
mov
test
fnstenv
pxor
je
adc
lea
lods
movsb
or
scas
push
xor
std
cmp
and
movsl
adc
popf
jg
cmp
xchg
movb
xchg
stos
aas
cmpsl
movsl
test
pop
iret
fiadds
loopne
cli
iret
mov
loope
out
push
pop
orl
dec
jl
aaa
push
ds
push
fwait
pop
sub
in
xchg
into
ds
insl
sbb
in
ljmp
je
in
pop
mov
xor
push
imul
mov
xor
xchg
inc
push
sahf
xchg
fwait
in
js
ret
mov
ss
dec
lods
into
pop
inc
nop
lods
dec
mov
stos
mov
pop
imul
imul
fldl
sbb
mov
es
das
fstpl
repnz
rcrb
pop
pop
xor
xor
dec
pop
jmp
pop
flds
negl
sub
jmp
in
xchg
adc
stos
iret
sahf
in
adc
imul
mov
jp,pt
cmp
sbb
enter
bound
lock
sub
hlt
mov
push
mov
or
in
push
stos
lds
cmc
dec
repnz
inc
lea
shlb
les
bound
mov
scas
fimuls
inc
je
xor
mov
sub
mov
and
mov
xor
gs
sub
mov
add
push
fnstsw
dec
inc
push
fs
mov
test
jno
sbb
mov
mov
pop
pushf
popf
push
mov
and
cmpsl
jae
xchg
aas
xchg
adc
test
iret
mov
pop
mov
rcrl
dec
pushf
push
inc
mov
add
mov
or
stos
push
into
es
scas
out
xchg
sbb
cmp
xchg
pop
lea
pop
test
pop
xchg
sbb
mov
sbb
daa
sub
fdivrl
xchg
adc
and
mov
sbb
je
movsb
mov
push
fnsave
fcmovbe
and
push
pop
pop
in
lret
aam
inc
mov
lret
shl
ret
sub
adc
xchg
sarb
incb
jo
out
push
jp,pt
pop
lods
xchg
jl
xchg
and
ret
mov
pop
or
inc
mov
ljmp
jne
sbb
push
jge
xor
scas
out
cli
mov
ljmp
gs
mov
xchg
mov
arpl
mov
push
inc
dec
cli
movsl
xchg
mov
pushf
or
outsb
dec
and
xor
hlt
stc
out
mov
repnz
movl
es
pop
jg
fwait
or
rcrl
pop
pop
sbb
push
nop
cmc
and
cmp
mov
ss
mov
mov
sarb
outsb
mov
scas
mov
test
xlat
popf
lock
lret
sbbl
xchg
dec
mov
mov
or
mov
push
out
bound
xchg
xor
or
out
mov
sbb
dec
cwtl
mov
mov
sub
fldt
xchg
stos
aad
sbb
mov
rcll
icebp
mov
movsl
into
in
leave
mov
sti
cwtl
ret
in
negl
test
mov
push
mov
js
inc
and
fstps
or
in
jge
dec
mov
aaa
stc
std
mov
out
scas
cltd
xor
ja
pop
inc
fsub
pop
fs
lahf
jp,pn
inc
sub
icebp
pop
dec
mov
sub
shlb
les
out
lock
push
rcrl
dec
ljmp
pop
push
mov
test
aas
mov
mov
sahf
xchg
mov
push
mov
cs
call
test
ret
pusha
xchg
mov
mov
mov
dec
mov
dec
mov
pop
lahf
fs
movsl
addr16
xor
dec
mov
int
das
clc
jp
push
mov
push
add
adc
cmc
lods
in
ja
or
ljmp
jmp
or
popf
fldt
stos
shl
into
rcll
mov
pushf
mov
cmp
lahf
cmp
lods
jb
sub
aad
mov
xchg
mov
cmp
mov
and
fldcw
pop
push
call
imul
scas
shrb
and
and
add
dec
xor
xchg
das
push
fnsave
aas
xchg
xor
inc
and
inc
cmp
or
xchg
xorl
sub
mov
pop
jg
mov
jle
cmpsl
push
loop
stc
aam
popa
aaa
mov
sub
mov
adc
xor
dec
imul
nop
or
fisubrs
sub
fwait
push
sbb
dec
pushf
pusha
inc
stos
imul
cmpl
es
jbe
shr
ficoml
dec
lods
rcrl
fwait
in
mov
icebp
mov
inc
cmpsl
xchg
lahf
add
push
xchg
test
xchg
leave
sbbl
aam
mov
cli
mov
out
fs
test
mov
in
jmp
mov
aas
inc
not
iret
xor
jl
inc
std
ficompl
adc
popa
shrb
sub
push
js
dec
test
aaa
dec
outsl
mov
and
lods
leave
mov
outsl
jae
scas
neg
test
pop
mov
fsubs
ljmp
notl
fs
lret
xchg
pushf
popa
ret
pushf
or
mov
xor
daa
cmp
fisttpll
dec
push
mov
in
stc
push
sbb
push
sbb
mov
shll
jg
data16
leave
int3
jmp
push
clc
fsubl
fs
jo
and
or
and
lock
jbe
es
and
icebp
lods
fildll
leave
lret
or
cmpsl
sbb
fcmovbe
mov
jl
jbe
dec
cmp
ret
dec
dec
mov
mov
arpl
outsb
addl
push
lahf
or
or
sahf
dec
sub
sbb
fdivl
sbb
insl
adc
and
jae
mov
and
lcall
sub
add
and
lds
jne
cmp
loope
clc
or
stc
imulb
inc
cmc
xorl
push
mov
jb
cli
push
mov
sbb
out
push
jae
in
xlat
mov
pop
lock
sbb
jae
shlb
ret
sbb
lret
and
mov
or
mov
sub
inc
rclb
stc
imul
mov
imul
sub
and
fdivrl
aad
nop
jge
mov
or
sbb
aaa
insl
psraw
cmp
das
roll
and
test
hlt
add
ds
test
movsl
jl
pop
sub
or
loop
cmpb
pop
cli
or
dec
push
lea
and
xor
mov
xchg
fidivl
sbb
fdivrl
xor
fcoml
lcall
xor
sub
negl
outsb
adc
mov
jmp
fcoml
and
stc
cs
pop
leave
or
fsubrl
data16
sbb
xchg
sbb
push
je
out
aam
movsb
sarb
inc
cwtl
dec
xor
adc
ret
push
inc
pushf
sbb
jmp
jns
cld
fcmove
stos
mov
fbld
rcll
in
cmpb
or
adcl
jg
lcall
jo
int
in
addr16
std
sub
xor
mov
add
push
dec
frstor
xor
enter
mov
push
pushf
push
nop
add
cmp
dec
mov
jp
pop
mov
xor
push
nop
xchg
loope
repnz
insl
push
xchg
xor
rclb
stos
repnz
sbb
sbb
mov
inc
or
push
mov
and
fstpt
inc
imul
jl
xchg
fsubl
fisubl
ljmp
daa
dec
mul
add
sbb
pop
and
shrb
std
pop
pop
popa
idivl
pop
addr16
add
cmp
adc
mov
repnz
xlat
or
dec
adc
bound
out
fidivs
adc
or
leave
and
xor
cltd
pop
and
sahf
lcall
xor
dec
adc
push
push
and
cltd
movsb
movsl
sbb
testb
enter
gs
ret
xchg
lahf
jno
or
aaa
jecxz
lock
lcall
imul
push
jae
dec
and
popf
xchg
shrb
dec
mov
push
sub
jbe
mov
decb
cmp
adc
cmp
or
stos
mov
je
mov
in
iret
mov
stc
insb
test
iret
inc
add
pushf
mov
aaa
push
in
outsb
stc
dec
jg
or
add
test
lret
sti
add
nop
popf
stos
xor
inc
push
sarb
rcl
lods
stos
dec
leave
add
hlt
cmpsb
les
xchg
xchg
cld
dec
mov
ficomps
pop
push
lcall
imul
pop
mov
add
jg
mov
mov
adcl
xchg
mov
inc
sub
and
sub
mov
mov
test
loopne
data16
sbb
cwtl
pop
add
stos
jmp
fstp
pop
pop
xor
inc
inc
test
mov
push
icebp
shr
mov
in
pop
sub
adc
cmp
lods
push
insb
aam
add
mov
sbb
push
add
mov
mov
mov
sbb
pop
sub
cmp
out
fbld
leave
sub
jo
mov
xchg
inc
aaa
mov
mov
fwait
cld
call
mov
fdivrl
inc
inc
push
cmpsl
js
jmp
and
cli
out
lret
dec
jge
aas
pop
pop
dec
add
or
sbb
cmp
add
cli
cmpsb
dec
mov
lahf
nop
data16
sub
mov
or
stos
sbb
jno
in
cmp
ja
pop
pop
addr16
xor
xor
out
sub
mov
cmpsb
push
fdivrl
jp
sbb
lret
iret
lods
adc
xchg
or
enter
push
jl
or
inc
mov
xchg
push
xor
jne
cmpsb
movsb
mov
aad
xchg
cmpxchg
cmp
in
sub
aaa
insl
rclb
pop
aam
loop
xchg
mov
jl
cmp
ret
push
aaa
in
imul
les
loop
sahf
rclb
mov
mov
add
or
fwait
sub
pop
fistps
cltd
jb
jp
inc
push
push
add
inc
mov
push
xchg
inc
in
sub
mov
cmpsl
mov
push
movsl
loopne
loop
or
inc
and
adc
lret
nop
out
ss
ret
je
ss
cltd
fsts
inc
sub
ljmp
out
or
int3
and
arpl
add
cltd
or
fnstsw
adc
inc
insb
or
mov
fstpl
mov
in
jle
jae
aam
in
and
rorl
cmp
dec
cli
adc
pop
ret
inc
outsb
mov
test
sub
mov
pop
ret
sbb
pop
push
sbb
testb
pop
xchg
adc
shlb
lods
inc
cld
xchg
lock
ljmp
stc
movsl
stos
pop
mov
push
test
addl
cmp
add
aam
xor
pop
sbb
sbb
dec
fbstp
test
mov
jle
and
or
cli
adc
dec
add
inc
or
push
test
and
dec
mov
enter
xor
push
test
sub
jnp
iret
push
fs
es
adc
test
rcrl
mov
sbb
pop
int
loope
hlt
mov
inc
mov
pop
dec
pop
adc
hlt
pop
daa
imul
ljmp
ljmp
cmp
ret
and
jle
xchg
lea
pusha
dec
dec
cmpsl
xchg
dec
adc
pop
lock
push
dec
punpcklbw
cmp
mov
enter
lods
fbstp
lret
jb
mov
cs
pop
sahf
insb
mov
cld
or
or
cwtl
sub
pop
and
ret
popa
jmp
jmp
jle
mov
ficomps
insb
aam
or
movsb
and
mov
aad
aas
push
sbb
sbb
in
idiv
or
imul
xchg
and
pop
add
cwtl
jmp
xchg
je
loopne
int
pop
test
outsl
testb
movsb
test
and
mov
add
sub
mov
popf
push
mov
hlt
adc
mov
outsb
jne
idivb
icebp
jecxz
loop
mov
out
xor
lock
pop
jo
mov
testb
loopne
or
scas
dec
inc
mov
add
mov
ds
mov
jge
aaa
push
mov
xchg
adc
call
mov
sbb
mov
pop
jmp
xchg
add
gs
movsb
jmp
sti
fldl
dec
pop
cmp
mov
rcll
ret
sbb
or
call
mov
sbb
out
jecxz
pop
inc
and
enter
rcrl
mov
or
xorl
push
ja
add
inc
leave
or
hlt
push
adc
mov
cmp
xchg
inc
nop
je
sub
xchg
lds
divl
add
repnz
loop
xlat
cli
inc
push
pop
ljmp
iret
nop
pop
add
pop
jmp
mov
xor
sbb
mov
aaa
jno
push
jns
stos
sub
stos
les
mov
lea
pop
and
add
xchg
outsl
cmp
iret
mov
ret
xchg
fdivr
cltd
inc
jle
mov
or
mov
fidivl
loope
leave
and
scas
popa
gs
push
popa
in
movsb
lock
add
test
rorl
icebp
rclb
xor
negl
pop
sbb
push
psubusb
push
jl
mov
das
sub
lcall
sub
pop
test
dec
adc
imulb
dec
mov
xchg
fidivrl
test
jo
out
popf
inc
cmpsl
mov
mov
iret
push
sbb
cmp
cltd
lods
pop
daa
test
inc
and
inc
or
outsb
imul
or
mov
mov
out
loopne
scas
xchg
mov
jno
sub
and
popf
jno
lcall
sbb
jp
pop
fwait
inc
dec
lahf
pop
mov
adc
dec
add
test
mov
aad
mov
cmp
jae
aas
xchg
mov
lcall
jecxz
std
xor
sub
js
jo
jp
idiv
idivl
mov
in
lahf
mov
pop
test
jp
stc
sbb
mov
fsubl
negl
scas
insb
jle
sarl
stc
or
in
aad
dec
icebp
out
lahf
push
es
xlat
int3
dec
out
imul
shlb
add
cmp
add
inc
cmp
cltd
sbb
dec
mov
int3
rolb
xlat
enter
adc
lods
pop
xorb
jmp
mov
mov
xchg
lret
xor
idiv
je
movsb
dec
lea
out
call
imul
jmp
je
pop
jne
inc
rclb
sbb
jo
mov
push
addr16
add
fsubrl
push
mov
xlat
scas
pop
sbb
push
pushf
xchg
addps
rcrb
xlat
cmp
sub
es
in
adc
mov
mov
mov
cmp
pcmpeqd
jbe
lcall
fbld
std
push
xchg
mov
cmp
popa
call
or
inc
mov
sub
je
inc
out
inc
mov
lock
or
dec
add
pop
js
mov
mov
fildl
notl
in
mov
dec
enter
hlt
imul
shll
jns
sbb
sar
das
ret
mov
add
jp
ficompl
lahf
nop
adc
jg
outsb
into
sahf
pop
push
ffree
mov
scas
lock
js
lret
out
push
push
in
popl
add
or
xchg
and
pop
fdivs
mov
mov
jns
pop
mov
mov
mov
mov
mov
inc
in
fcoml
sahf
test
shlb
pop
mov
ljmp
mov
hlt
call
sbb
into
dec
repz
sbb
repz
cmpsb
stos
stos
pop
pop
adc
lahf
rcr
sub
or
cld
cmp
lea
cmp
lcall
jge
push
test
push
clc
pop
mov
xchg
sub
mov
xor
mov
leave
push
sub
xor
shl
jge
stos
test
push
mov
out
imull
push
lods
into
mulb
mov
push
mov
fisubrs
lds
sbb
push
xlat
mov
or
out
sbb
sub
repnz
mov
es
pop
dec
pmaxsw
jg
jne
loope
shlb
ret
dec
fs
and
add
mov
addl
inc
shl
adc
sbb
sub
fs
jge
mov
rolb
and
lea
xchg
fs
pop
rcpps
jecxz
cmpl
sbb
jno
clc
push
xor
sbb
push
lods
std
enter
push
add
inc
loop
inc
or
mov
jae
lahf
xchg
xlat
imul
xor
je
mov
mov
dec
and
dec
push
adc
and
jmp
in
cmp
sbb
imul
and
in
sub
stc
pop
mov
xchg
add
add
add
loope
roll
rclb
outsb
xchg
adc
ss
aam
insb
imul
mov
shll
adc
or
jmp
in
xchg
dec
sbb
push
mov
sbb
mov
and
mov
dec
imul
jecxz
rcrb
mov
cmpsb
adc
and
mov
add
jp
lds
fcmove
test
cwtl
les
fadds
xchg
mov
rcrl
stc
cld
xor
mov
ret
mov
pop
mov
jle
shll
mov
push
lea
ljmp
stos
xor
sub
imul
sub
or
and
cwtl
mov
cli
stc
scas
cmpl
mov
pop
or
aaa
out
leave
enter
and
jnp
stos
adc
sbb
out
sub
fadd
inc
cltd
inc
xor
out
das
cmpsl
jnp
ds
addr16
movsb
push
adc
adc
dec
dec
call
sbb
imul
not
ret
xchg
fdivrs
popf
mov
movsb
in
push
repz
in
push
pop
cwtl
inc
dec
push
pop
insl
mov
or
adcl
mov
add
and
clc
pop
dec
cmp
arpl
jns
cmp
cmpsb
add
push
mov
push
repnz
mov
xor
jmp
pusha
shrb
sbb
mov
or
xchg
out
popf
movsl
ret
adc
mov
mov
scas
int3
pop
and
call
stc
sub
mov
or
stos
and
pop
inc
mov
jle
adc
jns
fisttps
pop
sbbl
mov
sub
xchg
add
movsl
sbb
mov
out
movsb
push
and
pop
movsb
cld
insl
insl
xchg
add
pop
in
adc
xor
movl
lea
push
push
test
xchg
and
mov
and
in
movsb
sub
clc
rcll
or
fnstsw
frstor
push
pop
mov
jbe
in
fs
lock
mov
outsb
fs
out
sub
jp
in
in
icebp
arpl
or
lods
scas
out
add
sbb
or
imul
cmp
xchg
adc
add
mov
sbb
scas
mov
xchg
mov
arpl
pop
shlb
and
ljmp
sub
int
mov
cmc
pop
jecxz
mov
int
push
inc
fistpl
aaa
fwait
sbb
out
push
and
flds
inc
daa
jge
mov
xchg
adc
inc
aas
int3
test
sqrtps
push
fadds
jmp
adc
fstps
and
popa
inc
mov
std
xor
jmp
je
rclb
shrl
cwtl
mov
add
mov
mov
fs
icebp
fucomip
insl
and
pop
adc
push
sahf
and
inc
cs
xor
xor
add
jecxz
mov
push
call
lods
das
pop
les
sub
sbb
dec
adc
inc
xchg
cmp
cli
in
add
mov
dec
or
jle
lcall
les
dec
xor
xor
cmovnp
push
mov
negl
les
mov
sbb
inc
sbb
or
mov
push
scas
mov
push
mov
push
insb
fimull
mov
pop
xor
mov
pop
or
fstpl
jecxz
push
jmp
hlt
and
inc
das
push
xor
jp
pop
ficompl
int
scas
enter
ret
imulb
not
cmp
inc
or
or
fcomps
mov
out
out
xchg
fs
jg
push
in
dec
push
int
push
icebp
pop
cmpsb
int3
lcall
shll
rclb
hlt
jl
sub
bound
and
test
imul
inc
lret
lock
nop
outsb
lds
clc
je
int3
mov
imulb
shlb
mov
cmp
sub
jo
fnstsw
nop
sbb
mov
inc
ja
cwtl
xor
xchg
repz
push
andl
into
cwtl
xor
dec
or
mov
aam
ja
das
das
mov
test
call
push
or
lret
mov
div
cmp
fimuls
rcrb
or
pop
test
adc
mov
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
xor
scas
addl
fwait
cmp
xchg
cld
ret
cmp
mov
sub
das
xchg
cmp
ja,pn
decl
pop
or
cmpb
pop
xchg
pushf
arpl
imul
adc
insl
mov
int3
lods
enter
cmp
push
xor
cmp
cld
movsb
imul
or
fistps
in
aad
adcb
cmp
int
add
xchg
outsl
subl
dec
cld
dec
rcll
or
and
jb
inc
xlat
das
loope
push
mov
bound
ror
jge
outsl
ja
mov
loopne
es
dec
mov
imul
cs
pop
rcl
out
stos
mov
scas
mov
and
icebp
adc
sbb
push
pop
rcrl
mov
inc
dec
add
xlat
fisubl
xorb
ret
loop
push
adcb
icebp
stos
fimull
stos
push
dec
inc
dec
and
lds
lea
pop
or
inc
jp
cmp
mov
int3
out
stos
add
hlt
fs
xchg
push
js
loope
lahf
inc
mov
mov
dec
movsb
ja
cli
dec
iret
call
sti
data16
fildl
mov
ja
leave
adc
pop
in
jno
mov
push
sub
mov
aaa
out
clc
cmp
test
inc
dec
outsb
je
jmp
out
rorb
aam
mov
cmpl
jl
push
fistps
icebp
add
mov
data16
push
lock
mov
jnp
rol
inc
gs
cli
xchg
mov
cltd
insl
test
mov
push
push
dec
mov
mov
sti
pmaxsw
jae
xor
add
mov
outsb
sbb
icebp
push
inc
mov
in
adc
negl
enter
lock
adc
mov
mov
and
rolb
enter
fcomps
inc
ljmp
adc
aaa
mov
cmp
andb
or
mov
cmpsb
dec
push
or
fstps
adc
nop
inc
movsb
fldt
dec
movswl
adc
movsl
adc
xchg
jge
or
jns
mov
mov
aaa
mov
mov
cltd
jae
pushf
pop
jp
iret
lods
jae
popf
cld
mov
jmp
cmpsb
and
jno
jp
push
or
jb
xor
mov
cmpsb
insb
movsl
cwtl
push
imul
sub
daa
out
popa
in
jae
and
jns
push
jne
inc
or
push
sbb
popa
adc
sbb
or
and
out
mov
out
ljmp
fisubrs
loop
or
jns
push
lock
adc
push
clc
inc
xchg
xlat
dec
xchg
and
or
int
dec
xor
mov
xlat
ja
jbe
sbb
jnp
out
and
test
xchg
insb
mov
or
les
lret
iret
adc
into
push
lds
int
push
adc
lea
loopne
fadd
fidivrl
fs
xor
mov
lcall
orl
inc
fisttps
mov
sbb
sub
loopne
subl
push
xchg
mov
adc
add
pop
xorb
xchg
lcall
fdiv
out
and
jnp
clc
pop
cmpb
jg
fadds
adc
cld
hlt
jae
sbb
clc
jge
cli
mov
inc
push
aad
fsts
push
fidivrs
cmc
mov
inc
pop
repz
daa
aaa
in
aaa
gs
test
mov
and
mov
mov
jge
push
mov
jnp
adc
pop
inc
mov
aam
xor
dec
mov
imul
mov
cmp
lds
dec
push
pop
frstor
mov
sbb
pop
jbe
adc
dec
jl
push
aas
shrl
repnz
pop
shlb
xorb
xchg
lods
mov
push
mov
int3
adc
rcr
adc
js
cld
or
jge
and
and
mov
sti
mov
loopne
pop
xchg
pop
and
adc
pushw
fisttpl
and
jb
shll
inc
xchg
jl
xchg
sub
fiadds
adc
loop
dec
pop
xlat
add
inc
mov
push
and
push
pop
dec
aaa
jle
sub
scas
popf
clc
out
lods
test
dec
adc
fiaddl
add
sub
mov
sahf
test
adc
in
outsb
bnd
push
sbb
xchg
push
push
inc
bound
fsubr
cmc
aad
icebp
inc
test
nop
or
xor
rcr
jnp
outsl
pop
cmc
and
push
fwait
cmc
stos
test
test
ja
stos
subb
push
cmpsb
cmc
jo
add
dec
lret
inc
inc
sbb
inc
int
dec
mov
or
test
sbb
pushf
cmp
mov
dec
or
and
ss
add
and
sub
lods
or
adc
fnstenv
fcoms
lret
mov
test
push
daa
lahf
movsb
xchg
aad
sub
add
pop
push
push
pop
loopne
sbb
or
xchg
arpl
jne
mov
outsl
xor
jb
cmpsl
or
mov
jae
test
inc
rcpps
out
cmpsb
cmp
movsb
mov
rcl
pop
mov
mov
pop
fistl
sbb
out
sarb
or
lahf
xorl
or
ret
dec
leave
adc
jmp
add
xlat
xchg
or
fisubrs
es
or
pop
fstps
sbb
sub
mov
push
das
xchg
sub
push
out
cli
inc
andl
daa
inc
mov
xor
push
mov
push
xchg
fists
int
xchg
adc
cmp
in
jns
xchg
sbb
in
lahf
outsl
int
adc
jb
cmp
sbbl
mov
add
dec
and
cltd
insl
pop
adc
cs
mov
add
out
mov
sbb
cmc
icebp
xor
es
adc
push
jecxz
cs
pop
cmp
lahf
rorb
xor
out
and
pop
lock
xchg
and
rorl
adc
and
in
add
in
mov
sbb
jnp
lds
adc
divb
sbb
out
cltd
movsl
jns
mov
sub
xchg
aaa
shrl
incl
dec
cli
push
push
in
addr16
out
es
jle
cmpb
sarl
xor
push
mov
subb
jns
mov
hlt
mov
pop
mov
push
es
dec
cmp
mov
push
dec
or
add
cmp
xchg
loop
cmp
mov
aas
inc
push
fsubs
ret
xor
xor
gs
push
and
shll
enter
push
std
sbb
mov
mov
jl
push
cmp
enter
sbb
sbb
adc
outsb
pop
jnp
or
repnz
xor
aaa
cmp
int
stos
add
mov
cmpsb
das
and
test
enter
je
fs
mov
gs
dec
pop
push
adc
sarb
test
sti
or
insl
pop
and
repz
mov
jl
inc
movsb
jns
les
lods
jecxz
movsl
scas
cmp
add
pop
xchg
cmp
std
push
fwait
sarb
or
add
in
das
add
mov
rcll
cmp
insl
cmpsl
jp
push
dec
popf
ljmp
adc
loope
sarb
dec
mull
mov
cltd
xor
mov
pop
stos
mov
xchg
popf
in
hlt
push
mov
aam
mov
ret
in
cmp
cmpsb
push
xor
or
fdivs
add
mov
js
push
and
in
or
jmp
cmp
stos
mov
outsl
pop
jmp
in
out
lea
jmp
sbb
js
je
mov
cli
icebp
nop
fadd
stos
xlat
jae
push
sbb
nop
out
in
dec
adc
shl
lock
imull
mov
dec
fldl
jo
mov
rcrl
call
cmpsb
pop
pop
mov
xchg
sub
aas
call
mov
ss
hlt
push
inc
lods
fimuls
pcmpgtw
add
inc
or
mov
popa
out
in
inc
fsubr
add
xchg
test
sub
pop
push
ja
in
inc
and
ljmp
jl
jmp
rolb
aam
or
mov
orb
shll
jl
add
cmp
test
or
inc
xchg
adc
add
inc
jmp
shlb
xor
popa
fimull
sbb
not
and
leave
lea
sbb
jns
mov
mov
cmp
popa
dec
ret
jb
mov
cmpb
jge
and
inc
mov
jge
jle
je
dec
pop
adc
sbb
sbb
mov
jg
jg
push
das
push
xor
dec
mov
pop
xor
mov
iret
push
cwtl
pop
add
nop
andl
test
pop
push
js
je
std
mov
mov
fwait
jo
or
call
aas
sub
push
mov
icebp
pop
shl
nop
fisttpll
and
add
scas
push
xchg
dec
push
and
pop
or
out
mov
push
loope
cmc
mov
std
push
sbb
out
or
adc
cmc
xor
sbb
mov
xchg
lock
enter
aad
fldt
arpl
lahf
dec
stos
cmpsb
mov
push
fsts
jg
dec
jnp
addl
repnz
call
loopne
or
mov
mov
gs
arpl
in
dec
push
inc
adc
push
mov
lret
popf
nop
jle
xlat
dec
push
mov
push
aaa
jno
sub
dec
xlat
imul
push
adc
mov
xchg
mov
dec
adc
inc
mov
out
pop
cli
shll
out
jmp
call
pop
jno
mov
repnz
adc
loop
or
sub
add
ret
dec
xlat
push
dec
loop
push
bound
mov
rcrl
loop
nop
sub
and
pop
add
int3
fisttpll
loop
dec
xor
inc
sarl
xchg
insb
test
movsb
and
mov
movsb
lahf
push
push
out
jle
ds
mov
dec
push
aam
push
mov
ljmp
mov
jb
mov
cld
ret
mov
fcom
inc
inc
push
inc
es
cli
pop
cmpsl
lret
adc
inc
rcll
cmc
adc
mov
push
test
das
testl
hlt
sub
pop
dec
mov
push
xorb
and
repz
jno
xchg
das
jae
pop
test
mov
mov
loopne
add
pop
cli
aad
jle
push
sarl
jmp
roll
loopne
jl
and
and
pop
fists
jno
and
cwtl
mov
cmp
das
shlb
test
xor
arpl
ja
stc
jecxz
and
xchg
inc
insl
fcoml
mov
sbb
sbb
sub
push
stos
cmp
xor
adc
ret
loop
ss
in
fwait
shlb
shlb
pushf
mov
push
aaa
mov
xor
and
movsl
sub
pop
lcall
or
and
aas
add
daa
std
addb
mov
ret
outsl
jmp
jmp
push
ret
jecxz
dec
shl
cmc
and
jge
sub
pushf
aaa
xor
jp
nop
adc
jno
lcall
enter
arpl
shrb
mov
add
mov
fnstsw
pop
insw
pop
lods
pop
push
inc
mov
or
loop
daa
mov
xor
dec
dec
pop
rcrb
or
cmp
xchg
repz
sub
push
ds
inc
sub
lcall
dec
clc
mov
in
test
cmpsb
mov
pop
andb
jns
sbb
sub
lods
cmpsl
mov
js
ficoms
jg
fcmovbe
mov
sti
xor
mov
hlt
daa
mov
cmp
pushf
pop
call
sar
pop
jnp
or
push
cmpsl
je
mov
xchg
pop
jo
nop
or
mov
jae
mov
adc
insl
xor
jbe
push
mov
adc
or
ljmp
jmp
fisttpl
cmp
shr
stos
fwait
push
fnstenv
cmc
scas
dec
push
jae
xor
push
xor
movsl
add
and
loope
arpl
pop
scas
inc
ror
inc
insl
imul
dec
lea
adc
mov
mov
imul
dec
xchg
sub
xor
data16
cmc
jle
jp
inc
xchg
mov
mov
ja
test
mov
pop
int
mov
xchg
inc
icebp
push
iret
stos
mov
xor
jbe
push
jge
xlat
cmc
xchg
add
ficoms
sub
stos
jnp
in
into
or
imul
aam
loop
ss
movsl
pop
push
faddl
clc
leave
or
les
cld
or
popf
rorb
add
pop
pop
hlt
add
outsb
cmp
dec
or
mov
cmp
jb
adcl
test
jnp
mov
ljmp
mov
xor
imul
xchg
inc
mov
lret
mov
fmuls
jle
das
outsb
fwait
mov
dec
pushf
sub
movsb
dec
call
loopne
jmp
adc
out
shrw
xchg
imul
das
arpl
adc
psadbw
lahf
dec
shr
outsl
xchg
xchg
inc
aaa
shll
nop
dec
call
add
xor
push
data16
ljmp
inc
rolb
int
ds
daa
in
dec
pushf
testl
cli
mov
mov
sub
add
popf
add
mov
add
push
pop
loopne
mov
ror
sub
xor
inc
mov
loopne
and
fwait
int3
inc
pop
mov
add
in
mov
mov
inc
mov
in
mov
scas
mov
sti
into
jae
jb
mov
popf
aad
adcb
adc
add
and
pushf
pop
lds
push
mov
movsb
push
jge
es
sbb
mov
subb
ja
repz
pop
xchg
pop
jae
jmp
pop
stc
push
cmp
jge
mov
rorb
mov
cmp
leave
out
mov
xchg
mov
jns
and
mov
cmp
outsl
dec
loope
mov
into
inc
xor
xchg
lds
push
sbb
and
sbb
cmp
test
xchg
enter
mov
or
sub
mov
orl
fdivr
test
xor
negl
into
xor
lods
mov
shlb
aam
mov
in
es
sbb
pop
jecxz
ret
test
rcrl
jp
or
std
cli
fcmovu
add
jmp
pop
lea
and
push
push
inc
sbb
mov
and
mov
orl
ret
cmp
js
cmpsl
jns
out
mov
inc
jno
push
inc
stos
bound
push
out
hlt
mov
fnsave
mov
movsb
cmp
or
fcmovnbe
ret
add
cmp
pop
out
push
mov
dec
movsl
aad
push
cld
xor
adc
mov
push
hlt
arpl
dec
aas
rorl
bound
inc
hlt
push
push
icebp
ret
mov
lahf
adc
fs
insb
stos
cmp
fisubs
ljmp
outsb
stc
stc
jl
xor
test
jo
bound
shlb
sbb
pushl
cmp
call
lods
xorb
dec
out
loop
jbe
je
add
xchg
stc
imul
push
ret
cmp
sarl
dec
or
pop
mov
pusha
xor
xor
xchg
xchg
jmp
cmp
mov
sbb
mov
cmp
rolb
adc
les
inc
ds
hlt
pop
notl
sub
into
push
popa
add
add
xchg
repz
inc
push
cmp
sbb
add
leave
dec
add
mov
sar
xchg
pusha
sbb
push
insb
sarb
jp
jns
idivl
inc
add
jns
adc
lods
ret
pushf
cmp
mov
mov
fmull
mov
jns
xorl
dec
jae
mov
xchg
mov
and
outsl
rclb
push
repz
repnz
xor
xchg
pop
stc
and
aaa
idivb
push
insl
inc
icebp
cmc
mov
lcall
sub
xchg
int
mov
push
adc
xchg
stos
sbb
inc
imul
jge
nop
lret
pop
push
push
mov
into
fsts
pop
repnz
adc
cltd
flds
mov
add
mov
in
or
outsb
nop
jae
fidivrs
aaa
jne
sbb
mov
les
clc
or
xor
dec
pop
lret
ss
xor
ss
mov
inc
sub
push
jg
outsb
jbe
pop
orl
jne
inc
dec
inc
mov
pop
cmpsb
xchg
dec
sub
repnz
xchg
fsubrl
pop
cmp
mov
pushf
inc
lcall
outsb
mov
mov
push
test
or
mov
test
js
nop
push
push
dec
inc
xchg
push
pop
add
push
and
leave
sbb
test
inc
jp
out
jecxz
aas
icebp
mov
pushf
jecxz
push
lods
xor
xchg
es
add
mov
mov
sarl
aas
inc
push
cld
in
cmc
or
fldenv
jb
stos
inc
xchg
lock
mov
or
stos
test
mov
lock
ret
jg
xlat
jg
inc
mov
dec
test
pop
imul
out
adc
lods
insb
cmpsb
jbe
subb
jp
and
jne
ficoms
lcall
mov
pop
xchg
push
dec
lahf
mov
ud2
sbb
inc
xchg
or
bound
xchg
stc
lock
js
fisttpll
jmp
dec
sbb
and
cmp
imull
sub
mul
push
sub
xor
or
jnp
ljmp
and
repnz
popl
push
pmaddwd
add
outsl
stos
push
ljmp
push
adc
sbbl
cli
aas
inc
nop
xor
das
dec
mov
pop
jl
outsb
lods
les
cmp
test
sahf
dec
and
out
pop
sbb
les
jg
inc
sahf
sarb
xchg
pop
test
or
fists
mov
icebp
mov
loope
fnstcw
xor
mov
sub
xlat
lret
adc
push
adc
dec
lcall
out
orb
adc
mov
mov
mov
xchg
add
scas
add
outsl
add
clc
negb
adc
sbb
jecxz
pusha
or
repz
ss
mov
popf
sbb
mov
push
imul
std
shll
stc
xor
aad
fcomp
movsb
lahf
ljmp
movb
mov
adc
addb
push
es
aaa
cmp
and
pop
in
movl
sbb
aam
call
fnstcw
mov
cmp
mov
mov
inc
cs
shrb
lret
shl
jle
mov
cltd
inc
fcmovbe
mov
fwait
dec
push
jl
imul
popf
pushf
lods
inc
in
adc
dec
and
addr16
std
or
leave
mov
cli
mov
or
stos
lret
lea
rclb
test
repz
and
jne
loopne
std
in
enter
inc
cmp
jg
inc
imulb
fisubl
dec
icebp
sub
or
out
adcb
mov
lea
sub
js
rcl
clc
gs
or
jo
mov
xorb
out
ret
in
loop
xor
stos
mov
in
cli
lock
popa
sti
sub
xlat
ja
jecxz
imul
lds
iret
push
mov
gs
ret
dec
sbb
jg
cmp
jbe
inc
lea
arpl
inc
xor
pop
test
push
or
hlt
jp
jmp
outsb
inc
or
daa
sti
mov
call
dec
cld
pop
lahf
xchg
dec
jne
ror
lcall
leave
and
rorl
or
push
rorb
sbb
into
jo
add
enter
into
lock
test
sub
sarb
push
sbb
mov
xor
hlt
cmc
rorb
cltd
rorb
adc
pop
dec
daa
pop
jle
mov
or
inc
arpl
inc
dec
cmpsb
clc
jecxz
in
mov
dec
mov
sbb
xor
jg
jmp
mov
xchg
addb
cmp
clc
mov
pop
xchg
cmpsl
cmp
idivl
movsl
push
aas
sub
pop
nop
cmp
jo
ds
in
mov
dec
mov
orb
scas
add
ret
sbb
aaa
sbb
sub
pop
daa
fisubl
cmp
or
sahf
movsb
sbb
dec
roll
mov
push
in
pop
dec
js
xchg
loopne
cmc
js
lods
les
sub
sub
rolb
andb
cmp
sbb
or
clc
push
clc
ljmp
fcoml
adc
ret
or
loop
fbstp
push
scas
arpl
mov
xchg
adc
lds
pop
sbb
mov
idivb
js
rcrb
sub
add
call
popf
cltd
and
int
sbb
pop
push
sub
mov
repz
adc
sbb
mov
xor
pop
shlb
jne
push
pushf
push
jno
inc
imulb
jl
pop
inc
daa
jg
jmp
cli
popa
adc
sub
push
call
lret
sbbl
out
mov
and
in
jns
popa
fdivp
pop
int3
hlt
sub
outsb
jecxz
xor
stos
add
mov
cmp
lods
cli
sub
mov
daa
sbb
repnz
cmp
xchg
daa
inc
jno
xchg
and
out
imulb
aad
sub
add
cmp
ret
lock
cmpsl
add
and
dec
ret
inc
outsl
sub
fnstenv
jecxz
or
inc
adc
inc
mov
inc
outsl
dec
cmp
or
pop
adc
mov
popf
mov
repnz
cmp
push
aad
sbb
les
popf
in
sbb
jae
pusha
push
int3
lahf
xor
fsubr
stos
pop
test
stos
cmp
adc
and
mov
clc
ja
adc
lret
test
frstor
fistl
push
nop
mov
pop
enter
pop
mov
fucomp
test
scas
mov
cmp
push
jl
adc
stos
sahf
lcall
ja
mov
fsubrl
imul
xor
or
cmp
sub
pop
lds
movsb
loop
lcall
data16
push
out
imul
test
jl
movsb
pop
xor
xchg
rsqrtps
xor
das
cmp
or
cmpsb
pop
push
pop
test
test
push
push
pusha
xchg
pop
out
xchg
sbb
lods
jne
addl
push
jne
out
push
sbb
jecxz
add
imul
out
pop
mov
mov
push
test
pop
jl
roll
jnp
push
xlat
outsb
xor
pop
sub
mov
inc
pop
cli
imul
arpl
ljmp
and
es
mov
pop
push
data16
inc
adc
mov
stos
imul
xchg
sub
or
sbb
or
in
push
test
enter
jmp
icebp
push
jns
pop
fmuls
xchg
and
out
out
ret
push
xor
mov
push
loope
ljmp
jp
jg
pop
cmp
lcall
mov
mov
xchg
ficoms
cmp
jmp
pop
test
out
stos
push
adc
pop
xor
movl
pop
push
and
mov
jnp
rcrb
sbb
inc
imul
jl
je
data16
mov
mov
dec
and
sbb
push
jl
mov
inc
std
adc
or
std
out
jecxz
adcl
or
fnstsw
add
mov
test
nop
cmp
lea
add
aad
mov
mov
dec
mov
cmp
mov
pop
popa
nop
test
test
std
in
jecxz
idivl
sbb
dec
add
data16
or
pop
add
imul
insl
jmp
sub
and
sub
xchg
xor
cmp
inc
ja
adc
std
xchg
fisubrl
xchg
pop
inc
les
mov
pop
cmp
mov
mov
xchg
leave
jge
add
mov
ljmp
in
sti
ss
nop
xor
mov
push
lcall
mov
mov
push
sbb
mov
sbb
fldl
and
jnp
out
fcoml
add
mov
addr16
mov
cwtl
je
mov
inc
xchg
repnz
in
mov
cltd
addl
cs
aaa
sbb
xchg
inc
dec
scas
dec
jae
mov
clc
push
lea
add
sub
push
push
inc
mov
cltd
cmpsb
gs
mov
inc
aam
sub
jg
mov
lcall
push
repz
lret
dec
lds
gs
out
fists
mov
pop
outsl
popl
nop
and
std
nop
sbb
negb
xor
iret
mulb
addr16
movsl
shrb
scas
or
fildl
dec
test
pop
dec
push
jmp
xchg
jo
mov
xchg
jo
test
mov
sbb
or
ret
sub
cmp
mov
outsl
add
and
scas
cmp
lcall
jge
scas
movsb
sbb
lock
ds
jne
adc
ficoml
popf
pusha
jae
dec
add
jbe
xor
xchg
in
adc
int3
jae
push
cmp
cmp
xchg
scas
push
into
pop
xchg
sarb
push
subb
stc
xor
mov
ficoms
fwait
push
lods
arpl
sub
dec
xchg
fcmove
scas
test
pop
push
cmpb
and
adc
jnp
lcall
loopne
push
sahf
mov
push
push
mov
sti
aad
cmc
mov
outsb
mov
pop
sti
add
adc
cmp
mov
lret
fcoms
mov
xor
sbb
mov
jb
mov
xchg
jns
xchg
xor
adc
add
push
xor
sbb
test
push
add
sbb
xchg
jnp
aad
fidivs
mov
scas
xchg
test
test
or
rorb
jbe
scas
mov
sub
sbb
jns
popa
hlt
add
mov
out
xchg
frstor
pop
arpl
pop
xchg
fdivr
push
mov
pop
dec
sub
xor
inc
into
xchg
mov
sub
cmc
dec
shll
ret
push
jl
aam
in
orb
jae
fwait
test
out
mov
jle
mov
in
imul
jb
sub
mov
mov
push
cmpb
filds
mov
popf
loop
decl
xor
loopne
dec
pop
outsl
cmp
out
sbb
mov
hlt
ds
mov
mov
stos
adc
inc
ss
dec
sti
andb
xor
pushf
fcoml
ret
jle
in
jg
in
lret
push
ss
add
fsubrl
inc
mov
or
add
clc
inc
mov
push
mov
insl
jae
mov
xchg
push
out
pop
es
mov
pop
xor
stc
mov
sahf
insl
loop
loopne
mov
mov
lahf
mov
dec
test
pop
jo
rcll
out
in
inc
aam
sbb
and
es
push
sub
imul
cmp
subl
cltd
repnz
xchg
jle
mov
mov
jp
and
aas
add
jno
pop
sub
cli
adc
mov
paddd
pop
push
and
push
mov
inc
mov
test
faddl
cld
stc
cld
sub
xor
pop
adc
das
cmc
nop
lea
mov
cs
out
or
pop
test
jb
inc
insl
ret
das
xchg
jae
push
insl
mov
hlt
jp
fisubs
inc
lods
sbb
in
popa
mov
xor
mov
sub
ss
iret
mov
lret
add
es
jne
adc
add
movsb
xchg
jle
jno
mull
adcl
subl
mov
lods
jae
in
sbb
icebp
dec
fs
popf
in
repz
mov
outsb
adc
sub
mov
sub
mov
xor
cmc
subl
in
dec
xchg
add
sahf
scas
pop
js
pop
outsb
push
in
push
je
fdivs
stos
mov
adc
jl
test
pop
dec
insl
xchg
and
in
add
pop
insb
mov
lret
leave
rorb
mov
aaa
icebp
push
or
mov
adc
subl
lahf
mov
aam
stc
mov
rcr
jbe
mov
xor
mov
jbe
out
std
add
scas
ret
mov
pop
int3
jns
jg
push
lods
xchg
lods
mov
jmp
mov
ret
fdivs
push
push
or
pop
push
out
xor
dec
subb
cwtl
je
cmp
ss
stos
daa
filds
fcmovbe
stos
mov
sub
out
lahf
std
mov
mov
movsb
mov
sub
imul
rcl
lret
in
push
mov
pop
cltd
int3
mov
test
pop
in
jne
sti
aad
or
pop
xchg
jbe
lds
mov
mov
push
xchg
jnp
pop
add
mov
adc
mov
fwait
cwtl
adc
xchg
pop
sahf
jl
repnz
cmp
and
movsb
push
xchg
add
jle
roll
adc
push
pop
add
test
sahf
fwait
testb
aad
sbb
xor
daa
mov
vshufps
adc
sub
xor
out
mov
or
sti
adc
jns
mov
jecxz
imul
sub
movsb
lea
addb
lahf
fs
jne
fstpl
sti
sarl
ja
lret
cmpsl
aas
xchg
aam
aad
aas
jbe
hlt
and
pop
inc
adc
aam
jae
sti
xor
adc
cmp
pushf
subb
xchg
mov
jne
and
mov
or
lods
or
iret
jno
ret
or
mov
pop
mov
int
and
mov
push
loope
push
pop
xchg
inc
les
inc
sbb
imul
lock
inc
xor
jno
pop
jge
jp
js
into
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
xor
imul
xor
xchg
or
ret
xlat
fs
fwait
jmp
push
push
sarl
cmpb
push
add
push
aas
stc
aaa
push
in
sbb
ja
push
fisttps
fistl
pop
xor
fs
and
imul
inc
fsubs
jae
pusha
imulb
rcpps
mov
cmp
adc
jle
lock
xchg
sbb
int3
out
mov
aam
gs
add
mov
popa
adcl
outsl
addr16
test
cltd
int
or
mov
gs
dec
adc
mov
mov
aas
or
or
lock
xor
fstpl
cmpsb
pusha
mov
xchg
hlt
lods
mov
cli
mov
movsl
or
mov
xchg
cmpsl
mov
sbb
mov
sbb
je
test
test
rcll
pop
push
daa
mov
lret
inc
lahf
fimuls
insb
lahf
clc
sbb
mov
pushf
fcomp
jb
test
fcmovu
push
lahf
sub
inc
sub
adc
push
pushf
aad
movsb
lock
lock
dec
shlb
aad
shrl
aaa
adc
inc
mov
nop
das
aaa
nop
imul
stc
xor
xchg
repnz
sti
pop
lds
mov
and
or
push
mov
xchg
int
push
es
ud1
das
pop
jno
leave
push
jb
push
mov
xchg
adc
xchg
cmpsb
pop
mov
clc
test
loop
dec
inc
mov
mov
add
inc
jo
fsubrl
mov
imul
in
add
mov
jecxz
xor
fildl
stos
inc
leave
fldcw
fiadds
test
lods
inc
sbb
xlat
call
out
or
outsb
push
jp
mov
es
fucom
pop
aad
rol
inc
je
dec
mov
scas
lods
mov
hlt
inc
jne
jo
fldl
outsl
movsb
ljmp
mov
cwtl
outsb
sbb
or
repnz
mov
sar
stos
std
loopne
les
mov
inc
mov
cmp
nop
sbb
add
jl
outsb
je
cmp
xor
stos
add
fstpl
sub
cs
pop
popa
pop
sbb
stc
sahf
and
lea
adcl
iret
scas
sub
pop
mov
push
add
cmp
insb
mov
arpl
scas
mov
test
in
movb
leave
loop
mov
push
push
test
sub
sub
cmp
repz
add
push
and
es
mov
daa
ja
rcrl
jnp
scas
mov
addr16
sub
mov
mov
mov
ss
mov
dec
popl
shl
sub
jbe
xor
cmp
mov
rcrl
push
popf
in
loopne
stos
inc
pop
in
push
ret
rolb
sub
jo
xor
insl
push
push
and
gs
aaa
in
ud0
mov
fwait
jo
cli
inc
push
add
adc
pushf
aas
push
shrb
adc
jecxz
or
shl
inc
popa
outsl
push
dec
stos
gs
insb
rol
jb
ret
lea
fadds
arpl
mov
pop
xlat
adc
jg
cmp
in
cmp
sub
ljmp
pop
pop
mov
mov
cld
jg
push
rclb
dec
mov
clc
adc
push
add
out
aas
push
inc
pop
pop
fbstp
fstpl
cltd
mov
mov
int
jle
mov
fstl
pop
xor
mov
and
pop
ss
inc
add
dec
xor
stos
push
leave
jle
lahf
cmc
mov
mov
cmp
xchg
mov
mov
lea
add
jl
mov
sti
loopne
push
pusha
mov
inc
mov
popa
cmp
pop
xor
cli
movaps
pop
mov
insb
cli
popa
hlt
fs
pop
repnz
pop
test
push
lods
roll
in
insl
pushf
push
xor
inc
lret
cmp
dec
aas
push
arpl
adc
xor
add
adc
jnp
jno
ffree
cmp
in
and
fdivrs
jg
jecxz
cmp
in
push
cs
adc
mov
cmpsl
rcrl
lods
push
adc
dec
movb
flds
cmp
call
mov
in
xor
jle
mov
mov
rorb
enter
arpl
shl
xorb
mov
negl
scas
dec
ret
ret
rorl
jge
mov
pushf
cmpsb
inc
stos
lods
imul
mov
hlt
fadds
and
cmp
xor
xor
cld
and
enter
mov
push
jmp
mov
outsb
mov
stos
into
ss
mov
xor
jno
testb
fdivr
iret
out
sti
adc
out
dec
adc
fadds
or
inc
adc
jl
inc
jg
add
push
pop
mov
test
push
push
out
mov
xor
push
xlat
repnz
call
gs
mov
pop
stos
dec
lcall
cld
adc
dec
test
mov
popf
mov
and
cwtl
test
sbb
add
insb
sub
loop
in
mov
cmp
sub
add
repnz
test
push
filds
push
push
imul
roll
test
ffreep
pop
ss
jl
sbb
inc
out
push
jge
cmpl
aam
sub
dec
ss
or
xor
mov
movsb
dec
cmp
jae
sarl
jecxz
sbb
push
sbb
pop
mov
ror
loopne
jp
loope
xor
inc
rcrb
pushf
jle
sub
ss
iret
mov
inc
jle
jl
cmpsl
dec
or
push
jmp
jle
inc
sbb
in
loopne
mov
pop
push
and
loope
dec
push
mov
mov
xor
andl
mov
and
xchg
cmc
mov
pop
js
mov
push
jecxz
mov
repz
cmp
mov
insl
xlat
xchg
mov
jmp
int
jb
push
dec
sarl
push
dec
xchg
and
jb
stos
and
and
bnd
and
sbb
shll
adc
sbb
je
lock
cmp
push
ljmp
sbb
mov
loop
or
cmp
pop
jecxz
jae
xchg
stc
jg
pushf
lahf
or
addl
mov
mov
cmp
mov
sub
mov
inc
mov
clc
arpl
cwtl
jae
push
adc
jge
movsl
mov
jmp
mov
aad
or
loope
je
jmp
inc
sbb
add
sbb
or
sahf
inc
and
insl
fcomi
loopne
fildl
into
xchg
sbb
ds
jno
icebp
push
pop
and
pop
mov
jge
or
inc
negl
mov
push
mov
pop
jo
xorl
xor
fs
xchg
xchg
bound
push
and
pop
pop
lds
add
adc
push
dec
xlat
dec
mov
xchg
js
lods
in
pop
inc
in
outsb
xlat
mov
insb
cli
pop
cmp
hlt
mov
xchg
xor
scas
in
lods
mov
scas
orb
inc
pop
rcrb
mov
mov
cmp
sbb
xchg
mov
mov
and
ret
ficoml
and
mov
or
fwait
pushf
adc
fdivp
aam
imulb
rolb
pop
push
xchg
aaa
push
mov
stc
arpl
pop
dec
sub
mov
and
pop
iret
vmaxpd
or
lahf
lds
push
lea
sbb
aas
cld
push
lea
dec
and
movsb
icebp
sub
inc
add
mov
stos
test
or
imul
dec
clc
add
pop
ja
pop
mov
imull
in
movsl
push
cli
scas
mov
cmp
cs
push
imull
mov
mov
xor
and
cmc
fnstsw
shr
cmp
cltd
xor
pop
nop
push
popa
jmp
add
inc
leave
mov
or
lcall
mov
mov
inc
sub
pop
sbbb
push
push
push
lock
lretw
sbb
daa
outsb
add
arpl
scas
jnp
sti
decl
ret
xchg
out
add
es
jecxz
xchg
insl
stc
mov
dec
adc
mov
cs
stos
test
adc
ss
aam
aas
int
or
dec
mov
imul
aam
inc
xchg
mov
jge
xor
aas
into
push
scas
test
xor
jno
push
adc
iret
cmpsb
and
sbbb
movsl
and
test
in
adc
in
les
aaa
sbb
xchg
shll
jg
lea
outsb
cltd
pushf
repnz
push
cmp
sub
or
add
dec
cld
lret
cmpb
pop
test
or
jae
mov
push
lods
xchg
pop
xor
inc
pop
test
mov
sbb
cmp
and
stos
in
jo
imul
hlt
daa
and
pop
or
pop
pop
call
mov
loop
aam
insb
add
sti
sbb
push
in
push
xchg
andl
sub
sub
mov
mov
pop
mov
ja
hlt
sub
fwait
mov
repnz
ss
xchg
or
in
fimuls
cmp
pop
pop
jecxz
jg
inc
cmc
inc
mov
jmp
push
pop
movsl
jg
pop
xchg
ja
adc
adc
xor
xchg
mov
je
stos
mov
ret
mov
jp
pop
push
rcr
mov
sti
mov
mov
sarb
inc
imul
sahf
fdivs
in
mov
xchg
mov
pop
add
cmpsl
fists
cpuid
mov
test
inc
lods
cwtl
pop
jl
pextrw
in
adc
jmp
and
in
cmp
mov
nop
dec
rcll
mov
mov
xchg
push
push
add
cmp
sahf
add
push
popa
cmpsb
jp
lcall
ret
in
notl
dec
jmp
cmpsl
fidivs
js
sbb
adc
out
and
cmp
insl
jp
jbe
inc
ret
sub
pusha
cwtl
ret
mov
fbstp
lret
sar
ljmp
outsl
inc
fs
pop
mov
addl
rol
les
sub
daa
add
les
or
push
mov
je
popa
outsl
lds
test
xor
mov
sahf
fnstenv
jle
lret
pop
and
add
cld
cltd
jecxz
adc
cltd
add
add
mov
xor
cmpsl
jmp
sbb
addr16
out
push
mov
rolb
pop
jnp
ret
dec
bnd
leave
xlat
push
push
cli
lahf
or
mov
stc
loopne
stos
dec
jno
pop
out
cltd
push
mov
lcall
bound
cmpsb
dec
or
xor
andl
lods
sbb
fdivr
icebp
test
push
daa
out
fwait
test
hlt
cmc
jle
mov
into
mov
add
cmp
adc
sbb
sub
test
sub
stos
lret
sbb
lds
dec
pop
std
dec
rcrb
test
lret
xor
cltd
mov
adc
out
add
dec
mov
movsl
mov
lock
jns
jp
push
push
inc
inc
and
mov
xchg
faddl
mov
push
inc
mov
and
enter
addr16
mov
into
fildl
pop
lds
js
insl
aaa
push
xchg
fbstp
scas
adc
fmull
pop
inc
fwait
and
lahf
adc
outsl
popa
out
fstpt
cmp
push
ret
cmp
push
insb
xor
inc
or
lods
push
hlt
pop
loopne
stc
outsl
or
sub
xor
js
popa
je
pop
adcb
dec
inc
dec
dec
mov
sbb
xchg
mov
psrlq
push
bound
inc
fidivs
pop
inc
sbb
xchg
xchg
cmpsl
or
pop
xlat
addl
inc
gs
lret
stos
cmp
test
inc
xorb
pop
scas
push
push
cmp
lock
xor
es
jecxz
sbb
xor
mov
bound
std
fstl
mov
movsl
insb
jae
and
movsb
loopne
sub
loop
cld
xchg
inc
cmc
cli
adc
push
mov
adc
jns
popf
fbld
js
dec
cmp
jb
jnp
jmp
xchg
cli
inc
dec
inc
gs
jge
sti
inc
or
xchg
addr16
cmpsb
mov
mov
into
std
fs
mulb
xchg
outsl
mov
ja
cmc
out
adc
orl
push
ret
lcall
jb
fisubl
lret
mov
loopne
fucomp
jae
cwtl
sarb
int
push
jbe
adc
adc
mov
mov
mov
ss
xchg
fistl
int3
std
adc
pop
daa
sub
stos
in
das
mov
sub
xor
dec
ds
cmp
addr16
out
adc
adc
sahf
and
mov
cmpsl
mov
pop
xor
sub
cltd
fs
xchg
adc
addr16
mov
sbb
adc
scas
mov
sbb
pushf
ss
mov
in
addr16
movsl
test
jle
dec
dec
jno
sbb
data16
jle
iret
test
mov
lcall
imul
insb
mov
pop
sub
push
out
push
das
fucomp
jb
cld
arpl
mov
add
sub
popf
lahf
rorb
xor
cmpsb
cwtl
jbe
enter
aad
adc
or
lock
cmpsl
mov
test
cwtl
jg
pushf
cmp
adc
xchg
sbb
sub
into
add
dec
pop
pop
lahf
pop
jno
mov
xor
dec
mov
cmp
idiv
loop
xlat
mov
sti
out
xlat
mov
test
add
out
jp
test
addb
jmp
cli
ficoml
push
and
fisubl
mov
adc
cs
cltd
push
sahf
adc
pop
cmp
pusha
nop
inc
add
ficoml
test
xorb
stos
out
dec
adc
repnz
mov
push
inc
jle
outsb
xor
add
scas
xor
aam
inc
fimull
lahf
lods
and
aaa
ret
mov
push
cmpsl
add
repz
ja
adc
fisttps
dec
loopne
push
inc
mov
test
push
pop
ret
sbb
push
xor
nop
movsb
push
scas
push
xor
loop
bts
and
xor
jp
pop
fnstsw
push
xor
cmp
mov
dec
xor
data16
jae
pop
call
mov
push
shrb
pop
adc
popf
xchg
jo
arpl
cmp
scas
scas
mov
push
sub
mov
ljmp
adcb
adc
xchg
or
inc
out
mov
fists
cmp
sub
and
cmp
inc
cmp
jne
cmc
xor
dec
cmp
or
mov
mov
nop
mov
rorb
push
cmpsl
out
pusha
in
int
js
movl
push
sub
cld
jl
jmp
mov
mov
sub
xchg
das
push
je
mov
pushf
xor
xor
jge
lock
loopne
and
adc
shll
jp
or
lods
xor
es
das
jg
pop
mov
iret
inc
enter
dec
es
lret
fdivs
dec
incl
repnz
int3
push
insl
xchg
ss
rorb
cmpsl
bound
cmp
leave
inc
mov
cmpsb
pop
aam
jb
loop
into
jns
stc
lods
add
jne
sub
movsl
xchg
sub
ja
jno
gs
outsb
test
leave
incl
mov
js
cmp
mov
push
fprem
faddl
mov
outsb
lock
mov
pop
imul
pop
sbb
jg
into
int
push
sub
mov
cmc
push
sbbb
xchg
xor
inc
and
mov
or
adc
push
shlb
mov
outsb
inc
movsl
hlt
mov
mov
sbb
xchg
aaa
lods
jmp
mov
gs
incb
leave
jle
scas
mov
and
push
xchg
shrb
test
inc
inc
mov
pop
cld
ss
test
mov
in
mov
xchg
xchg
mov
push
mov
push
mov
push
mov
jle,pt
aaa
roll
pop
push
and
mov
mov
divl
fs
je
fnstcw
sbb
aad
add
jae
bound
and
or
stc
mov
pop
gs
jns
movl
lods
aam
popa
jmp
mov
js
js
push
popa
or
push
jae
daa
lock
int
xor
imul
int3
subb
xchg
test
and
out
jns
in
sub
cmp
xor
sub
movsl
je
lds
sarb
addr16
and
or
and
call
dec
test
orl
or
add
arpl
xchg
cli
cmp
daa
jae
rcr
jg
dec
jnp
mov
outsb
or
jge
fisubrl
push
cmp
jbe
push
pusha
nop
outsl
fst
mov
push
pop
pop
shll
aaa
into
xchg
aad
lods
testl
aaa
js
repnz
pushf
cmp
imul
in
bndstx
test
repz
adc
fistps
int3
aad
repnz
bound
add
and
dec
in
pushf
in
mov
rcrb
ss
sub
lcall
adc
ret
pop
xchg
dec
sub
xchg
xchg
lods
cmp
sbb
fs
fsts
add
lret
xchg
sahf
int3
jns
mov
jns
out
adc
pop
cmp
addr16
lea
fsub
mov
xchg
mov
cmc
popf
test
daa
pusha
mov
push
idivb
rorl
mov
pop
call
cmpsl
das
cltd
int
push
mov
sti
push
xlat
cmp
mov
mov
gs
sbb
lret
sbb
ret
pop
mov
das
ret
pop
mov
push
mov
xchg
cmp
shl
sub
or
hlt
sti
ja
lods
push
cmp
rcl
push
or
lock
xlat
into
popf
ret
adc
xchg
mov
jnp
rcr
imul
mov
rcr
xchg
lcall
cmp
lret
out
push
xlat
and
and
hlt
mov
inc
fbld
das
push
hlt
jbe
cmp
cmpsl
jp
call
mov
mov
sub
daa
cmp
sahf
push
inc
test
add
daa
push
mov
mov
jb
pop
mov
mov
rol
lret
inc
es
pop
dec
jb
mov
sub
pop
ljmp
scas
std
push
push
sub
inc
ds
call
hlt
or
jg
jp
sbb
add
add
pop
loope
sub
mov
inc
inc
push
hlt
push
dec
inc
xchg
aad
dec
fbld
mov
cld
stc
cmpsl
jae
out
sbb
out
lret
out
scas
popf
mov
and
adc
mov
in
xchg
fists
fldenv
cmp
sbb
lds
xor
into
push
test
mov
push
dec
push
add
loopne
sbb
mov
imul
pop
sbb
sub
jno
mov
push
add
rorb
sbb
mov
adc
test
adc
stos
push
subb
xchg
lea
mov
int3
adc
shll
jns
pop
mov
in
pop
sub
and
out
sub
push
scas
mov
loope
outsb
adc
sarl
subl
gs
xchg
xchg
inc
adc
sbb
dec
push
jle
mov
popf
lret
sbb
shrl
lea
sub
add
shll
jle
stc
jmp
push
pop
lahf
mov
pop
rclb
jno
mov
mov
bound
mov
fs
mov
xor
es
inc
cs
adc
ror
inc
out
mov
xor
notl
xchg
orb
stos
rcl
add
in
mov
inc
inc
cmpsb
ss
mov
lods
pop
mov
add
shr
pop
ljmp
and
xor
ret
pop
xchg
aaa
pushf
orb
sahf
pop
inc
fs
das
sbb
outsl
pushf
jns
push
or
jne
scas
push
sub
loopne
sbbl
mov
xor
mov
push
cmp
jbe
int3
cmp
jb
cwtl
cld
push
pop
test
cs
int
inc
adc
jle
lahf
mov
inc
ds
flds
mov
cld
pop
mov
xchg
or
jno
jmp
inc
sar
xor
daa
in
or
psubusb
mov
add
sbb
xchg
test
leave
inc
enter
inc
cmp
nop
in
pop
cmpsb
divb
jo
push
int
mov
pop
xor
lret
fstpt
jecxz
int
xchg
test
push
and
or
inc
mov
dec
je
add
cmp
stc
mov
scas
or
cwtl
xor
ja
lds
repz
sbb
mov
mov
cmp
mov
or
xchg
push
jo
sub
jo
add
xchg
repnz
leave
fwait
and
shl
test
lahf
and
mov
xor
push
dec
outsl
push
push
add
push
es
les
inc
aas
dec
lcall
jae
test
out
xchg
sti
daa
clc
push
cmp
fidivl
xchg
sub
xchg
loop
jb
jmp
imul
jge
lret
inc
call
push
sbb
outsb
xor
incl
dec
mov
fcomps
std
pop
rorl
adc
movsl
or
push
mov
scas
pushf
call
pusha
sub
dec
es
pop
jnp
std
jge
xchg
cld
subb
leave
xor
pushf
sbb
mov
cmp
testl
push
fmulp
fnstsw
sub
push
insl
inc
in
out
jnp
ljmp
fisubrl
ds
insl
push
lds
mov
jmp
ds
mov
loope
insb
pusha
dec
mov
push
adc
inc
inc
and
frndint
sub
mov
movsl
xchg
test
adc
mov
lret
int3
stc
pop
mov
popa
out
jb
nop
dec
mov
or
enter
sbb
and
mov
push
push
inc
divb
adc
int
mov
and
jne
movsb
call
jae
pop
mov
sbb
stos
sub
fwait
sub
push
imul
lock
shl
cmpsb
repnz
inc
inc
jno
inc
fwait
pop
pslld
cld
fwait
scas
adc
push
adc
jbe
push
pusha
cmpsl
sarb
xor
sbb
ds
push
test
cmp
clc
inc
mov
hlt
mov
pop
loop
dec
rclb
imul
nop
lret
mov
dec
add
sbb
mov
cltd
push
xchg
fisubl
rol
loop
jbe
jp
mov
aam
outsb
or
ffreep
lcall
dec
stos
mulb
sbb
mov
mov
push
leave
mov
icebp
js
bound
mov
jo
cwtl
pop
push
push
fs
cltd
out
cmpsb
inc
repz
xchg
jae
pop
scas
add
sbb
mov
xchg
push
fldl
test
orb
in
xor
movb
push
in
mov
les
mov
sub
sbb
push
jo
lock
frstor
call
into
popa
ret
imul
pop
cltd
dec
fadds
sub
push
fldenv
rorb
adc
dec
in
mov
pushf
push
scas
ja
mov
jne
cmp
jecxz
jg
sbb
pop
daa
pop
lds
pop
popf
shlb
push
ret
mov
cmp
popf
sbb
add
out
div
sahf
data16
adc
mov
mov
pop
sbb
rorl
xchg
cmpsl
mov
rolb
xchg
xchg
mov
xchg
leave
stos
jno
jne
rcrb
cmp
pop
cmp
fs
sub
and
mov
outsb
frstpm(287
adc
jecxz
xchg
push
mov
jnp
or
lods
mov
scas
jmp
mov
out
lcall
in
rcrl
call
push
push
and
imulb
mov
loop
inc
adc
scas
push
nop
mov
stos
cmpsl
push
leave
mov
jo
push
add
enter
sub
sbb
and
std
aaa
lret
lds
mov
ficomps
lock
ror
cmp
pop
add
add
icebp
mov
daa
es
int
mov
xor
sti
insb
pop
outsl
subl
enter
daa
xlat
add
dec
and
sbb
mov
lds
add
pop
pop
int3
inc
jo
lcall
dec
pop
rolb
pop
dec
enter
iret
in
std
into
ja
push
popf
das
push
mov
mov
outsl
aad
rcll
pop
cmp
imul
inc
ds
out
fs
shl
add
int
leave
mov
jmp
ja
adc
sub
lahf
cmp
push
xchg
xchg
stc
xchg
insb
or
insl
imul
xor
mov
xchg
je
clc
les
sbb
mov
add
sub
dec
lock
lea
dec
or
shrb
jae
iret
and
jae
adc
lods
dec
add
cmp
xor
arpl
pop
arpl
ret
aam
and
inc
sbb
repnz
hlt
or
pop
mov
dec
push
andl
das
cwtl
clts
jecxz
in
subl
aad
sub
add
repz
call
leave
adcb
repnz
pop
jne
xor
push
push
cld
adc
jae
fsub
dec
cmp
xchg
lods
jne
adc
cmp
ja
pop
push
and
mov
aam
add
movsb
mov
jno
push
mov
xchg
jnp
or
cmc
icebp
nop
test
pop
cmp
int
lret
stc
cmc
sub
das
jge
lock
or
orb
js
xchg
mov
cmpsb
pop
fidivl
jae
imul
movsl
cmpsb
adc
jno
jmp
sbb
test
xlat
pusha
push
jno
mov
dec
pushf
push
daa
sbb
push
fistl
mulb
into
mov
int3
rorb
popa
stos
adc
mov
mov
dec
adc
mov
mov
dec
icebp
inc
sub
mov
in
test
add
lods
je
mov
int
sbb
cmpl
mov
mov
subb
cmp
pop
scas
outsb
sub
pop
xor
cwtl
sub
push
and
clc
loop
dec
aam
js
mov
cs
mov
imul
incl
cld
add
fidivl
subl
imul
sbb
dec
leave
dec
scas
test
int
cwtl
xor
cmpsl
or
cmp
in
fld
loopne
fldenv
sysenter
cld
lcall
popa
and
sbb
xchg
xchg
ljmp
mov
sub
fcmovbe
pop
int3
jne
addb
ljmp
imul
or
fistl
mov
sbb
jl
sbb
push
push
pop
add
jbe
mov
push
adc
xchg
loopne
sti
xchg
sub
adc
stos
movsl
cmp
test
popf
jns
stc
xor
insb
sbb
scas
and
or
andl
pop
jae
dec
sti
add
mov
pop
push
loop
adc
jmp
sub
inc
das
subl
pop
pop
test
lods
out
pop
xchg
cld
lods
jl
cmp
das
mov
data16
fiadds
jnp
push
jae
lahf
mov
cli
push
faddl
add
mov
fs
je
sbb
add
stc
jl
call
jmp
cmp
lock
decb
jge
sbb
mov
and
pop
jmp
mov
lret
jnp
jae
pop
pop
jbe
jo
idiv
xor
popa
stos
add
push
in
fmul
xor
mov
xchg
mov
test
dec
jl
adc
outsl
aam
xor
les
scas
sub
cld
adc
cwtl
out
or
mov
fmuls
enter
arpl
dec
lcall
push
pop
nop
or
pop
sahf
lcall
adc
in
and
push
inc
fcmovu
out
mov
jl
into
jnp
ja
pop
arpl
out
scas
lds
js
aam
out
adc
in
pop
js
adc
or
rorl
or
call
jnp
mov
jl
inc
push
lret
mov
mov
xor
test
dec
jge
jmp
bound
lret
add
mov
fsubs
cmp
dec
cmp
fisttpll
push
add
push
stos
xchg
pop
push
testb
adc
scas
cmpsl
and
cltd
sti
adc
aas
dec
sti
xor
clc
cli
jae
mov
push
sub
js
lea
sbb
mov
loop
subl
ds
test
sub
jle
pop
and
mov
aas
lea
dec
repz
mov
popf
mov
lahf
pop
inc
inc
das
sahf
sub
push
adc
scas
pusha
mov
stc
mov
mov
fnstsw
xchg
or
pop
adc
sbb
sahf
dec
daa
rorb
loop
insl
pop
xor
filds
pop
xor
dec
lcall
ss
insl
push
insb
int3
jmp
mov
rclb
xchg
pop
dec
imul
inc
icebp
cltd
cwtl
hlt
repnz
sbb
fdivs
dec
mov
stc
fmulp
pop
sbb
xor
jmp
add
test
xor
push
mov
fldt
xchg
es
mov
cltd
roll
mov
jne
jmp
cmc
enter
xor
aam
cmpl
jecxz
sbb
cmpl
data16
add
mov
scas
jb
nop
mov
push
ja
jl
sti
pop
add
mov
xchg
mov
xlat
xchg
int
in
aaa
mov
popa
js
or
fwait
mov
orb
pushf
enter
repz
xchg
jae
sub
stc
ret
mov
loopne
push
dec
xchg
stos
dec
into
cmp
nop
lods
movsl
jg
xchg
sub
insb
jno
mov
xchg
fnsetpm(287
jb
mov
xor
cmp
push
mov
dec
stos
sbbb
cmp
inc
jp
test
stc
ud2
fcoml
hlt
jg
add
xor
cwtl
xor
dec
movq
loopne
sbb
adc
cmp
mov
ffree
loope
push
faddl
leave
mov
mulps
enter
sub
loopne
cmpb
or
mov
xlat
cli
push
in
or
push
lret
fsubp
shlb
rcrl
jb
jp
mov
sti
mov
ret
adc
int
pop
push
cmp
dec
loope
pop
cmpsb
mov
ret
imul
out
cld
js
mov
xchg
testb
jne
stos
scas
pop
mov
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
rcr
add
addb
addl
fnstsw
lods
lea
adc
scas
mov
test
adc
clc
cmc
in
xchg
clc
fsubrl
adc
push
push
es
xor
das
pop
lods
xchg
ja
or
nop
dec
cwtl
int
pop
jp
push
bound
andl
test
xchg
cmp
roll
lret
std
or
sti
xor
push
stos
aad
adc
subl
out
adc
imul
and
pop
outsb
inc
jbe
sbb
pop
movsb
cmc
scas
outsb
or
lods
fcoms
lods
clc
add
loopne
mov
out
jns
mov
push
imulb
sub
jle
and
popa
imul
cmp
sbb
xchg
push
std
in
jnp
ljmp
pop
push
stos
in
pop
cmc
inc
mov
add
dec
sbb
inc
mov
out
lods
sub
mov
imul
and
xor
mov
stc
xor
out
xchg
shlb
and
adc
aaa
sti
mov
pop
pop
orb
out
push
dec
lcall
mov
addr16
jp
sub
or
push
jmp
dec
pushl
dec
mov
dec
pop
sbb
shl
lea
inc
xor
aas
mov
lahf
sbb
mov
jne
daa
lds
mov
lock
test
pushf
xchg
outsl
fstl
jne
mov
pop
mov
pop
cmpsl
sbb
int
or
xor
jo
pop
lcall
enter
loope
mov
or
dec
ds
mov
pop
push
inc
aaa
dec
mov
mov
mov
cmc
out
mov
inc
loope
or
inc
notb
popf
sbb
mov
lds
dec
sbb
sahf
cmp
lods
sbb
outsl
and
out
ret
mov
pop
add
adc
xchg
jge
and
icebp
lock
sbb
inc
mov
fmull
aam
in
jne
int3
jmp
iret
xchg
jg
mov
push
add
jb
sahf
sub
int
pop
adc
pop
cmp
and
out
add
add
dec
pop
dec
jg
xor
pop
inc
sub
pop
jl
cmp
push
jae
clc
fmuls
cmc
push
add
inc
mov
push
sub
xor
test
pop
xchg
jl
mov
ss
adc
xchg
add
fsubr
out
ss
test
and
mov
stc
lahf
clc
popf
aad
test
clc
mov
sub
scas
mov
insl
jae
test
sub
mov
inc
xchg
xchg
and
cmpsb
test
sti
lods
cltd
insl
pop
and
not
std
daa
xorl
cli
popf
mov
push
jb
sub
and
out
xlat
add
mov
iret
mov
mov
inc
xor
push
addr16
dec
adc
in
lret
push
or
iret
push
aad
test
push
lret
xchg
js
sbb
pop
js
icebp
testb
add
jecxz
push
xlat
imul
shl
adc
jg
adc
dec
jecxz
out
mov
adc
test
aaa
subb
iret
mov
lea
orb
sub
mov
cmpsb
jbe
sbbl
cmpb
mov
lcall
sti
xchg
mov
xor
dec
dec
dec
testb
stos
jno
ret
andl
jp
mov
hlt
dec
xor
push
lods
les
loope
shl
lea
add
cs
pop
or
sbb
orl
sti
push
cli
pusha
cmc
push
cmp
adc
inc
sub
scas
push
clc
jne
sbb
mov
fldl
sub
movsb
mov
pop
sbb
cmpsl
stos
shlb
enter
or
sub
mov
or
xor
test
push
int3
enter
rolb
out
icebp
dec
pop
inc
xchg
leave
pusha
jbe
pop
adc
cmpsb
repz
sbb
pop
shlb
jno
jns
rcr
and
jb
pushf
mov
inc
pushf
add
les
mov
jl
adc
insb
test
dec
or
cmp
ret
cmp
lods
mov
push
stc
jge
xchg
movsl
movsl
push
xor
pusha
lods
aaa
inc
xchg
jle
ja
xor
lods
pop
or
inc
repz
xor
mov
push
mov
push
cmpsl
icebp
stos
test
sbb
mov
jmp
sahf
mov
cmc
imul
mov
jmp
and
movsb
mov
mov
ja
xlat
fadds
hlt
add
xor
repnz
loop
and
popf
jmp
fucomp
pop
add
cmp
sbb
sub
inc
lahf
rcll
bound
jle
mov
fcomip
mov
mov
dec
cwtl
push
mov
imul
cmpsb
iret
fs
lahf
inc
les
stc
adc
es
or
and
cmp
inc
xchg
jmp
ljmp
sti
jno
pop
jg
jp
lock
xchg
sbb
adc
arpl
out
mov
dec
ja
cmp
add
ret
cmovae
xor
or
jmp
and
cmp
dec
mov
dec
test
pop
lds
into
jo
dec
fiaddl
dec
xchg
ss
mov
inc
fisubs
adc
jnp
scas
stos
in
lcall
dec
adc
inc
fldcw
lods
mov
ss
pop
out
mov
add
dec
into
pop
sub
and
ret
movsb
mov
inc
insb
push
cmpb
push
mov
mov
xchg
jg
sub
mov
enter
mov
or
mov
push
xchg
mov
mov
jg
rorl
vpmacssww
out
shlb
enter
mov
adc
icebp
outsl
mov
clc
lret
or
into
pop
jb
cmc
mov
aad
pop
sbb
pushl
adc
or
insb
or
push
int
and
dec
movsl
loope
lret
icebp
arpl
mull
mov
ja
loop
cmp
cltd
dec
mov
mov
outsl
and
cmp
das
je
stos
mov
dec
pop
arpl
jl
test
lods
rolb
adc
lret
jmp
push
stos
movsl
mov
pop
pop
pushl
or
jg
xor
arpl
out
clc
mov
pop
das
and
xor
and
daa
dec
mov
xchg
xchg
std
out
and
sbb
popf
loop
out
inc
test
lret
ret
add
xor
rol
mov
js
pop
out
sub
jne
push
lods
shrb
mov
gs
push
popa
lret
adc
cmpl
pushf
shll
push
pop
and
jns
mov
je
cmc
mov
movsl
mov
jle
faddl
div
xor
stos
aam
adc
repz
fdivs
out
ss
adc
inc
adc
sub
mov
pop
jbe
roll
scas
cmc
ds
popf
je
mov
js
cmpsb
cmp
push
in
pop
outsb
lock
hlt
push
shlb
and
cwtl
jno
push
lret
test
pop
cmp
mov
andl
fcmovne
insb
add
arpl
in
cmp
xlat
call
xor
enter
xor
dec
or
add
out
adc
inc
insl
lret
dec
outsb
inc
iret
cmc
es
adc
outsl
and
cli
addr16
xorl
arpl
jp
ljmp
imul
stos
dec
mov
dec
sbb
sbb
lret
and
sub
mov
adc
ss
sarl
lret
rol
push
sbb
or
jne
xchg
mov
pop
jle
cld
mov
psubd
mov
aas
dec
or
pusha
mov
dec
add
jns
aaa
loop
push
mov
hlt
les
popa
out
lcall
std
les
xchg
mov
clc
push
rorl
out
push
jb
jne
inc
aam
mov
iret
mov
push
add
jbe
fcoms
pop
call
mov
adc
js
inc
negl
xlat
pop
cwtl
sahf
mov
fstl
mov
jl
int3
cmp
dec
test
pop
je
dec
pop
xchg
cmp
xchg
lcall
popa
dec
repz
add
push
add
sbb
fsubrp
test
xchg
cli
dec
push
insl
push
pop
cltd
int3
cltd
sti
xchg
jg
mov
dec
mov
mov
mov
rolb
push
fisubl
sahf
test
andb
inc
push
out
push
pop
pop
mov
push
std
test
aaa
repnz
adc
jle
pop
call
cmp
push
jg
stc
inc
jg
xchg
sbb
insl
adc
sbb
je
iret
inc
lea
dec
sub
fldt
xchg
mov
and
and
scas
push
xor
mov
jb
test
test
adc
fisubrs
mov
add
sbb
popf
push
lcall
ss
sub
icebp
and
lods
xchg
or
push
jecxz
xor
das
mov
mov
pop
jmp
mov
xlat
mov
lret
jle
jb
adc
push
inc
jae
loopne
movsl
sub
out
adc
pop
sbb
xor
adc
ljmp
addr16
cs
push
pop
std
negb
jne
mov
mov
scas
mov
cli
in
push
cld
loop
out
and
adc
pop
dec
pop
inc
pop
sahf
loopne
loop
adc
sbb
inc
push
cmpsl
inc
add
push
sub
sahf
lods
lods
jno
scas
lods
test
xchg
add
push
dec
arpl
mov
dec
icebp
imul
add
out
in
mov
add
push
dec
mov
out
add
cmc
fsubrs
and
int3
dec
arpl
movsl
fcomps
jbe
test
mov
insl
push
push
jle
cmp
xchg
jmp
mov
lock
popa
xor
adc
add
lods
sub
sar
lock
stc
aad
xchg
adc
ljmp
rcll
fldt
repnz
jecxz
cmp
repnz
add
push
ror
inc
push
ds
out
divl
ja
stos
fistpl
cmp
icebp
lods
push
mov
inc
mov
fiaddl
xchg
mov
in
mov
addr16
jp
jecxz,pt
test
in
ja
mov
cltd
insb
pop
sahf
xor
pop
call
xor
and
sbb
dec
fs
sbb
push
mov
enter
push
imul
xor
add
in
jnp
gs
xadd
mov
mov
jmp
inc
stc
sti
call
out
and
sub
dec
cltd
inc
sub
xchg
dec
pop
bound
cmc
lret
push
pop
mov
je
inc
pop
cld
pop
xchg
popa
outsb
fnop
repnz
es
add
sbb
mov
and
cmpsb
cmp
push
sbb
loopne
mov
pop
aaa
sub
adcb
pop
jo
sbb
mov
sub
fnsave
push
in
subb
mov
add
cwtl
add
cmp
dec
add
and
fisttpl
popa
mov
sub
xchg
push
not
scas
or
mov
sahf
hlt
push
mov
jo
inc
mov
hlt
outsl
imul
int3
lahf
ret
ror
fbstp
int
sarb
mov
popa
inc
insb
jecxz
dec
xor
fstl
push
leave
shlb
cmp
add
pop
in
repnz
fdivrs
je
loop
ja
xor
mov
stos
jecxz
loop
inc
jle
and
or
jecxz
xor
sbb
das
shl
mov
pushw
pop
loopne
call
sub
mov
fldl
xor
imul
inc
mov
push
repnz
push
cmp
cmpsl
movsl
push
push
ss
mov
xchg
jae
rol
std
ret
add
add
aam
in
fwait
mov
jae
mov
pause
xor
jae
dec
xor
or
push
push
xchg
lret
inc
cs
aaa
pop
imul
sbbl
and
xor
iret
dec
int
inc
rorl
adc
std
mov
or
int3
mov
xor
jge
imul
stos
xchg
enter
pop
popa
cld
outsb
push
cltd
mov
cmp
adc
aas
dec
jns
lahf
jge
fmulp
test
mov
cmp
sbb
add
dec
adc
sbb
add
push
pop
xchg
addr16
hlt
inc
in
test
sbb
mov
push
add
sbb
mov
sub
int3
and
cwtl
test
lret
mov
add
sbb
sahf
jmp
cli
js
push
adc
jle
dec
sbb
scas
je
ljmp
cmpsb
fistpl
rcll
xchg
xchg
out
jnp
daa
add
iret
stos
aam
inc
pusha
mov
fdivs
mov
or
sub
lea
sbb
mov
or
popf
or
in
fcoml
mov
fstl
cmp
push
cmp
lods
imul
jg
popf
pop
pop
push
sbb
and
xchg
pop
mov
or
pushf
or
xchg
adc
bound
push
jo
or
roll
test
inc
adcb
mov
dec
pop
movsb
sti
pop
xchg
rorb
push
mov
inc
leave
sbb
sti
jmp
xchg
cmp
repnz
adc
pop
mov
sbb
fisubs
aad
imul
not
insb
adcb
lcall
mov
jbe
sub
dec
pop
std
arpl
cld
push
or
push
imul
mov
jmp
stos
jnp
xor
inc
jns
gs
int
jmp
aad
imul
sub
ljmp
je
movsl
add
scas
sub
arpl
pop
mov
sub
xor
push
xorb
fwait
mov
sahf
je
xchg
push
sub
sbb
inc
mov
sbb
mov
addr16
and
loope
es
mov
sbb
dec
cmp
jbe
scas
rorb
adc
gs
adc
push
dec
add
and
sub
out
notb
mov
out
lods
sbbb
push
add
into
push
mov
mov
or
mov
xor
add
xor
shll
cmp
cmp
aam
das
out
pop
xchg
adc
ds
xchg
adc
cwtl
xor
hlt
mov
aam
xor
xor
jp
cmp
pop
dec
and
dec
cmpsl
lods
cmp
ljmp
inc
xor
aad
push
test
enter
mov
adc
inc
push
cli
nop
fimuls
adc
inc
lods
pop
inc
int
fisttpll
xchg
hlt
cmp
jb
cmp
fwait
jbe
aam
decl
mov
rcll
add
jle
aam
sarb
sub
mov
rcrl
aaa
mov
inc
or
push
jg
adc
pop
add
lahf
addb
enter
ss
out
outsb
ficoms
pop
mov
sub
lea
out
pushf
xor
fidivl
in
mov
sub
cmp
cld
hlt
inc
mov
call
rcrl
sti
mov
ret
je
xchg
loope
fstp
cli
mov
dec
in
fbstp
not
iret
xchg
dec
sbb
mov
mov
pop
mov
xor
call
adc
pop
or
and
scas
dec
and
adc
ss
pushf
or
dec
cld
mov
add
data16
cmpb
ss
adc
out
dec
cwtl
lcall
push
inc
enter
cld
jnp
stos
cmpsb
inc
aas
test
sub
aad
sbb
int3
fs
cmp
jg
xor
scas
imul
or
cs
lret
testb
mov
test
divb
mov
pop
cli
cmp
sti
fadd
cmc
inc
pop
lods
xchg
cs
sbb
fs
cltd
inc
daa
enter
les
mov
arpl
and
lret
cmp
sbb
cmp
and
out
lods
pushf
loopne
stc
add
push
sub
lret
cmp
popf
inc
and
fcomps
lret
pcmpgtb
lcall
int
or
mov
sub
sti
jg
dec
sahf
sahf
hlt
cli
call
jmp
cmp
mov
mov
jb
out
sbb
or
in
cmpsl
fistpl
gs
ds
cli
rcrl
pop
scas
leave
lahf
ss
lods
fcmovnu
add
or
dec
xchg
das
adcb
imul
adc
ja
adc
cmp
jns
rcll
cmp
ficompl
and
push
movb
jmp
int3
adc
les
cmp
fpatan
and
in
or
jns
es
ret
add
pop
aad
xchg
cmpsl
call
daa
ds
lcall
outsb
mov
sub
js
inc
sub
scas
popf
adc
adc
sbb
mov
sub
xchg
inc
sub
divb
les
cmp
adc
int3
xchg
cmp
lahf
pop
xor
xor
shll
jb
sbb
inc
enter
rol
stc
icebp
addr16
in
mov
fcoml
cmpsl
jae
psubsb
pop
cmp
or
jge
mov
aas
mov
jnp
mov
stos
loopne
adc
pop
or
cmp
inc
shll
xchg
imul
int
scas
xchg
movsl
adc
inc
packssdw
sarl
rorl
ds
repnz
add
mov
jb
addr16
aad
mov
fildll
negb
cmp
shlb
ret
jecxz
add
dec
and
cs
ja
sub
dec
fistpl
test
mov
mov
inc
or
cmp
inc
xchg
cmpsb
mov
std
dec
jg
inc
iret
xchg
lds
jle
mov
cmpb
and
enter
push
lcall
out
add
push
push
ret
int
jmp
mov
in
repz
je
push
mov
daa
jge
lods
mov
ret
push
cli
inc
mov
sbb
or
sarl
fisttps
in
incl
sub
int3
icebp
xchg
jecxz
arpl
push
ret
mov
dec
pushf
out
test
movsb
sbb
xlat
mov
jbe
in
push
pop
mov
sbb
jecxz
into
js
addb
push
pop
cmpsb
lret
mov
push
or
movsb
arpl
aam
rorl
adc
jmp
test
insb
jno
jg
rcll
daa
repz
out
xlat
and
icebp
out
loop
fbld
mov
lret
outsb
je
sar
jmp
scas
aas
jnp
xor
xchg
imul
or
sahf
aas
xor
or
push
and
hlt
imul
pop
dec
setae
adc
loop
out
in
ret
ss
push
movsl
jg
divl
out
int
push
shrl
pop
and
fstps
adc
jp
xor
pop
or
dec
xchg
xor
aam
sbb
test
or
loop
inc
int3
cmpl
adc
sub
xchg
xchg
leave
imul
gs
int
es
jle
mov
adc
pop
pop
add
xlat
nop
push
mov
movsl
stos
iret
cld
cwtl
int3
jb
out
add
xor
xor
jnp
push
cmpl
mov
mov
inc
aas
or
outsl
sub
pusha
arpl
mov
mov
cmpl
cmp
jge
icebp
arpl
xor
jle
xlat
adc
sub
js
setb
pop
or
sbb
inc
sbb
jmp
cmp
xchg
adc
js
xchg
mov
and
push
enter
stos
or
ljmp
dec
adc
mov
mov
and
sbb
loopne
xchg
dec
fimull
xor
inc
andb
inc
in
cmp
lods
mov
mov
lock
in
jg
rcrl
sbb
inc
call
sub
adc
sub
cmp
es
outsl
repz
pop
test
mov
adc
lods
xchg
cmp
and
and
mov
loope
leave
test
cmpsb
and
lcall
pusha
pop
aam
adc
cs
data16
in
imul
loop
sar
xchg
imulb
arpl
pop
pop
xchg
leave
pop
push
cld
jg
or
adc
ficompl
lret
and
sbb
adc
push
ret
mov
out
scas
sbb
into
ret
fisubl
fistps
push
frstor
fninit
cwtl
hlt
outsl
xor
outsb
popf
outsb
ficoms
nop
fdivs
mov
mov
cmpsl
out
dec
call
lds
andl
sub
rcrl
mov
fmuls
fcmovne
xor
xchg
sahf
jmp
ja
adc
xchg
pop
sub
fsubl
mov
outsl
shlb
cmpsl
xor
inc
ds
or
lods
sub
mov
dec
stos
fnstcw
andb
push
pop
mov
in
std
sub
fldenv
repnz
lods
adc
jl
mov
jg
scas
stc
xchg
sbb
sub
or
inc
mov
imul
inc
sub
shrb
sub
cmp
sbb
sbb
xchg
into
daa
push
push
repnz
fdivrl
push
dec
repz
inc
pop
dec
mov
ja
push
shlb
idiv
sub
push
loope
push
xchg
xchg
jp
lahf
xor
jge
mov
dec
xchg
loope
pop
dec
daa
and
loope
mov
dec
mov
fcoml
sbb
cmp
dec
loope
bound
xlat
push
add
gs
mov
repz
out
inc
and
xchg
xor
lock
out
repnz
orl
add
push
insb
mov
jb
divps
mov
movsb
and
in
loopne
cmp
les
dec
xchg
xchg
jb
vunpckhps
mov
insb
cmp
fldt
dec
in
iret
dec
arpl
lahf
das
mov
shlb
popf
pop
xchg
nop
dec
scas
cwtl
xchg
imull
dec
sahf
jne
out
sub
fst
scas
xchg
inc
in
data16
pop
test
cmp
out
xchg
push
cmp
and
jne
xchg
popa
xchg
shl
repz
fdivl
xor
cmpsb
test
mov
mov
adc
jo
adc
fdivrs
cmpsl
adc
cmp
outsb
pop
ret
dec
icebp
lahf
pop
stos
sbb
loope
inc
scas
pop
pop
outsl
lcall
scas
pop
leave
test
test
repz
inc
adc
ljmp
jbe
jnp
call
dec
pop
cli
sbb
sub
in
push
fwait
pusha
cmc
jmp
push
jmp
sub
sbb
movl
into
fs
mov
push
movsl
jno
enter
inc
cld
cmp
cld
insb
cmp
int
pop
lcall
sbb
xchg
sbb
inc
mov
hlt
xchg
in
adcl
int3
mov
sahf
fwait
pop
dec
sbb
imul
jae
sahf
push
hlt
daa
xchg
adc
pop
add
lock
mov
mov
cli
jmp
cmc
mov
testb
repz
adc
jg
data16
ffree
adc
adc
fsubrl
adc
lahf
xchg
movsl
xor
rcll
inc
pop
fisttpl
imul
inc
fwait
dec
adcl
mov
mov
js
and
in
lcall
movsl
bound
out
cli
aaa
out
push
icebp
push
mov
leave
mov
mov
filds
cmp
fsubs
pop
jge
xor
jmp
sbb
pop
add
xor
cs
and
xchg
sarb
mov
ret
xor
mov
popf
push
xor
lret
dec
sub
out
cmp
hlt
fstl
test
adc
test
fcoms
movsl
push
pop
dec
jns
lds
xchg
imul
icebp
add
inc
push
or
mov
sub
addb
cs
or
inc
lea
adc
ja
inc
into
out
clc
test
jle
sarl
dec
ss
sub
xorl
incl
sbbb
stos
fbstp
and
pop
adc
scas
imul
fiaddl
fs
lcall
cmp
cmpsl
mov
cli
aas
cmp
cld
lds
mov
lcall
fstps
pusha
shrb
in
dec
icebp
lods
mov
cwtl
add
push
hlt
scas
hlt
nop
cmp
cmp
into
int3
mov
sub
push
mov
fs
push
popf
mov
ljmp
in
repz
into
mov
in
inc
into
stos
jp
jb
xor
sbb
or
cmp
adc
pop
loopne
jo
shlb
jmp
pop
cwtl
iret
and
jp
lods
mov
mov
out
sahf
leave
sbb
shll
cmp
xchg
in
fxch
jo
xlat
sub
sbb
jnp
pop
cmp
insb
mov
add
dec
ret
add
xchg
mov
mov
movsb
lret
and
jp
and
lock
fwait
pop
xor
xor
aad
movsb
pushf
jae
mov
sub
frstor
mov
mov
nop
rcrl
insl
leave
inc
pop
inc
fldl
adc
testb
sbb
push
xor
leave
mov
push
rcrb
mov
pusha
shrl
and
cmp
rcl
dec
ss
cmc
fwait
sarb
pushf
inc
cmp
bound
test
inc
inc
lock
jo
test
jl
fistpl
push
ret
sub
jp
test
add
imul
pop
iret
sahf
sub
repz
sbb
mov
push
xor
mov
fdiv
nop
addl
and
lahf
adc
rclb
stc
fstpl
push
pop
sbb
ret
sarl
cmp
push
jl
rclb
testb
cs
test
inc
xchg
incb
fs
pop
mov
xchg
idiv
xchg
push
ret
stos
sub
add
pop
ljmp
scas
push
cmp
test
test
in
push
add
mov
adc
sti
hlt
dec
sbb
lcall
push
lret
ret
xor
lea
dec
fdivs
xchg
std
sub
arpl
shrl
int
lock
lds
mov
xor
and
std
aad
dec
mov
stos
xor
jo
shlb
inc
mov
push
stc
int3
push
aad
nop
xor
ret
icebp
push
shl
in
jnp
and
cmp
out
dec
addr16
cmpsl
fnstsw
mov
mov
ds
js
out
addb
test
lcall
ds
or
mov
push
push
in
push
xor
aam
adc
add
pop
ret
cmp
nop
inc
mov
test
mov
inc
jo
fwait
ja
or
jne
lret
je
in
or
mov
in
rcll
inc
xor
lret
push
fldenv
sub
divb
movsl
and
pxor
fadds
lods
dec
mov
fidivl
call
xchg
ret
xchg
test
loope
mov
imul
in
xor
add
push
cmpsb
mov
loope
jb
mov
leave
and
add
push
mov
dec
ss
scas
pop
iret
mov
dec
cli
mov
movsl
jb
mov
adc
pushf
mov
fstpt
inc
push
jns
push
in
sub
shl
popa
mov
push
insl
jb
std
scas
shll
aas
and
repz
and
or
inc
cld
ss
aad
jg
cmpsb
out
jb
es
movsb
pop
sub
dec
clc
movsl
push
or
ljmp
mov
cmp
fsubs
aaa
adc
icebp
loopne
aaa
xchg
out
xchg
xor
push
push
sub
mov
pop
jbe
inc
and
add
sahf
xchg
push
repz
mov
scas
add
jle
push
dec
pop
arpl
push
sbb
data16
add
in
test
pop
loop
repnz
adc
je
hlt
pop
xor
outsb
pusha
std
ss
or
pop
sbb
add
rorl
leave
xchg
je
xchg
push
stc
fdivrl
clc
push
popa
push
movsl
mov
lahf
scas
enter
iret
mov
scas
scas
outsl
mov
xor
push
push
mov
cmc
push
fstpt
daa
outsl
out
inc
xchg
jle
add
inc
mov
int3
inc
bound
push
or
adc
or
fldt
outsb
cmp
cs
fcompp
mov
push
add
sbb
xor
into
movsl
lock
cli
test
fsts
aad
or
mov
sbbl
push
jb
mov
jbe
add
jg
cmpsb
loope
push
mov
test
pushf
enter
movsl
pop
push
test
fwait
ret
mov
adc
sahf
hlt
in
jg
mov
fwait
cwtl
dec
fwait
mov
adc
jbe
push
aam
mov
sbb
and
mov
sbb
mov
loop
xor
jp
clc
cs
xchg
cli
pop
add
popf
mov
ds
fsubrs
mov
mov
mov
fisttps
sbb
sarl
mov
call
shufps
mov
int3
aaa
insl
sub
stos
ret
xchg
pop
fistpl
jne
jle
stos
sbb
xor
cltd
adc
xor
mov
lret
movsb
mov
xor
dec
push
div
in
and
daa
test
jmp
fsts
loope
pusha
stos
cltd
mov
push
bound
mov
testl
adc
jg
jne
sti
sub
lods
cmpsl
in
push
inc
rclb
push
sub
jb
shll
aam
pushf
mov
test
jne
and
insl
scas
mov
daa
inc
jge
stos
imul
fwait
xor
xchg
xchg
cmc
jne
cmpsl
int
inc
dec
mov
aas
fs
add
daa
adc
push
xchg
mov
insb
into
jp
or
add
test
scas
xor
mov
add
mov
jbe
mov
adc
mov
jp
sti
push
cld
outsb
stc
jae
sbb
cli
pushf
lahf
jmp
jle
inc
mov
lret
jg
sbb
jmp
xchg
add
jge
inc
push
aam
sar
xchg
sbb
mov
call
imul
jbe
repnz
or
jb
mov
outsb
push
push
ljmp
insl
mov
cmp
dec
lods
jne
xchg
dec
pop
xor
leave
mov
cmpsl
out
adc
cltd
movsl
and
int3
hlt
out
je
and
and
push
inc
sbb
jb
sub
xor
repnz
cmp
jne
jle
pop
pop
inc
es
sub
movsl
sbbb
mov
mov
fmul
pop
or
jl
dec
sti
out
sub
subl
xchg
xor
sub
sub
jmp
adc
test
mov
inc
addb
pop
xor
push
test
pop
mov
sbb
push
imul
jmp
sub
push
addb
mov
loope
jns
pop
pop
xor
mov
fwait
jae
mov
push
into
dec
scas
cmp
xor
mov
or
cmp
mov
sbb
pop
js
add
push
pop
mov
ss
les
sbb
int3
jmp
mov
fiaddl
rcr
sbb
outsb
andb
mov
test
jp
shr
mov
pop
lods
sbb
fidivs
cld
mov
cmp
and
fcoml
jns
jae
mov
scas
mov
lahf
lret
in
ret
sub
jae
jp
aad
mov
jbe
test
ficoml
aam
bound
cmp
mov
enter
adc
test
inc
push
enter
or
lcall
lret
push
mov
cwtl
dec
push
in
lcall
inc
mov
add
dec
xchg
jmp
std
aam
pop
fucom
rclb
add
mov
in
cmpsl
xor
sahf
mov
add
pop
in
cmp
dec
rcl
pop
jp
shlb
jno
ja
xor
xchg
hlt
movsb
push
int
push
inc
cmpsl
push
out
jnp
mov
popf
icebp
decl
mov
repnz
xor
push
repz
pop
int3
cmp
sub
lcall
cmp
in
divl
repnz
loopne
pop
mov
jne
mov
mov
mov
sti
mov
sbb
xchg
push
cmp
in
cmp
push
jl
aas
xor
aas
and
sbb
or
sbb
test
pusha
lods
outsb
stos
pop
cmp
fildl
ja
push
adc
test
jle
cmp
mov
rclw
mov
and
add
stc
dec
add
sub
push
add
adc
mov
xchg
add
mov
out
fs
xchg
ror
mov
and
sbb
je
adc
push
add
mov
dec
in
pop
adc
mov
mov
cmpsl
push
mov
stos
mov
fnstcw
xchg
or
enter
sahf
cmpsb
xor
mov
dec
push
mov
jbe
sub
stos
jno
pop
xchg
adc
les
pop
lock
pop
inc
nop
ss
xorl
leave
ljmp
adc
bnd
inc
inc
dec
js
fsubrl
lcall
and
sti
xchg
push
stc
dec
push
mov
pop
pushf
shlb
daa
daa
hlt
ficoms
mov
mov
jb
scas
jge
lea
mov
pop
mov
shrl
hlt
cli
sbb
test
imul
into
jecxz
adc
jge
es
addr16
movsl
movsl
test
xor
jo
mov
jmp
sub
inc
mov
and
ljmp
push
jp
ret
push
inc
push
adc
cltd
cmp
hlt
test
call
into
jl
out
imul
jns
mov
lea
push
sbb
scas
push
mov
out
imul
pop
outsl
xor
push
mulb
jnp
adc
cmp
cmp
movsb
jnp
mov
mov
out
stos
sbb
and
mov
insb
je
jnp
shlb
inc
test
add
sbb
cmp
mov
mov
ss
test
daa
fsts
cltd
sbb
cmp
mov
fucomp
add
pop
lret
shll
sub
stos
inc
sub
dec
cltd
sub
out
pushf
push
orb
lds
lds
cmpsb
pop
or
jl
hlt
add
cltd
test
mov
ret
mov
addr16
sahf
add
xor
sbb
mov
gs
adc
cmovge
mov
inc
loopne
pop
outsl
pop
mov
add
leave
stos
stc
dec
fsub
and
push
pop
ja
mov
push
mov
sahf
into
fistpll
or
mov
cmp
loop
cmp
cmp
sbb
jl
dec
adc
loop
fistpl
inc
outsl
cmp
mov
push
test
clc
mov
jmp
mov
sbb
jne
sbbl
movsb
pop
fisubs
pop
pop
iret
mov
rcrl
sub
test
xchg
jp
fistpl
push
pop
jo
push
inc
jno
inc
and
pushf
in
push
adc
jno
out
sub
dec
bound
dec
push
sti
pushl
popf
loop
jmp
sub
insl
mov
lods
mov
xlat
pushf
test
ljmp
testl
xor
outsl
dec
sbb
bound
ds
pop
mov
adc
xchg
mov
inc
shr
add
or
rclb
push
cli
push
mov
sarl
dec
pop
sbb
outsl
pop
jo
int
cmp
test
jbe
lret
test
pop
inc
push
inc
lods
inc
inc
xor
or
daa
pop
cltd
push
sbb
stos
outsl
aad
int
pop
xchg
iret
cltd
inc
mov
in
sar
aaa
aad
lods
in
cmp
mov
ljmp
movsl
sahf
repnz
hlt
cwtl
insl
cwtl
outsl
jle
subb
xorl
loope
jo
dec
xor
push
lcall
scas
jbe
bound
in
or
ja
pop
fbstp
out
sub
adc
cltd
jbe
out
popl
inc
and
inc
aaa
ja
scas
or
fidivrs
pop
jnp
out
jnp
divb
ja
andl
jb
insb
dec
push
push
and
mov
xor
add
and
sub
ds
insb
xchg
in
or
iret
pop
mov
cs
sub
fistpll
daa
dec
scas
mov
sub
shrb
xchg
adc
mov
arpl
or
fldenv
add
sbbb
ljmp
int3
mov
xor
mov
sbb
jg
push
aaa
lods
inc
pop
jle
pop
scas
adc
or
mov
xor
mov
sti
in
outsb
data16
mov
push
and
xchg
inc
adc
scas
fstpl
int
sbb
dec
lea
shlb
and
mov
imul
jo
mov
inc
leave
inc
adc
stos
clc
inc
aad
int
pusha
stos
int3
pop
sub
pop
pop
inc
bound
in
mov
xchg
insl
adc
inc
test
push
shlb
lock
mov
sub
pop
ja
aaa
xchg
not
adc
add
imul
sub
pop
dec
rorb
fldt
xchg
dec
enter
out
fwait
mov
adc
push
xchg
icebp
jbe
jns
imul
ja
shl
icebp
push
popa
dec
mov
sub
dec
push
xchg
repz
stos
or
cmp
mov
pop
les
or
in
icebp
outsl
add
sti
xor
hlt
sub
and
loopne
mov
movsl
cld
aad
or
fcomps
ret
std
les
cmpsb
rolb
int
std
dec
aam
mov
sti
mov
insb
push
dec
hlt
scas
insb
popf
cmp
test
scas
adcl
dec
loope
fs
loop
add
pop
xor
repz
gs
jo
popa
ljmp
mov
std
mov
loop
lahf
jle
pusha
scas
dec
mov
sti
xchg
push
test
scas
testb
or
sbb
xor
add
and
imul
push
push
xchg
scas
xor
xchg
dec
cmpsb
mov
xacquire
xor
sti
push
inc
inc
or
xorb
loopne
push
les
idivb
aad
sbb
push
arpl
int3
jl
mov
xchg
push
fs
jecxz
enter
mov
mov
inc
add
sbb
pop
sub
sahf
nop
ficompl
adc
fwait
test
dec
test
cltd
mov
cmp
pop
sbb
cld
addr16
pop
data16
and
xchg
faddl
imul
add
pop
sti
sbb
inc
popf
mov
or
mov
dec
je
cmpsb
pushl
aas
pop
aam
insb
rorb
imul
mov
pop
aaa
and
data16
aad
leave
aaa
loope
xor
fwait
rcrb
dec
outsl
inc
lods
nop
in
leavew
rcrl
mov
push
lods
shll
lods
inc
and
lock
scas
jmp
adc
es
into
popf
add
fstl
fs
xor
cmpsl
rcrb
sbb
cmp
dec
or
pop
sub
dec
ficompl
fwait
shr
insl
mov
jnp
jp
lcall
cltd
mov
adc
add
scas
pop
push
mov
inc
xor
or
cbtw
jb
enter
sub
sub
mov
mov
lea
dec
cld
jne
scas
in
bound
pop
mov
jbe
push
mov
nop
sahf
lds
imul
add
icebp
jbe
mov
iret
inc
cmp
mov
nop
inc
mov
out
dec
loopne
aam
fisubl
repnz
mov
cmp
test
mov
vcvttss2si
push
mov
sbb
adc
and
stos
out
sub
mov
test
into
pop
cwtl
adc
lahf
pop
mov
mov
out
jl
push
shrb
movb
and
xchg
adc
gs
and
fistpll
mov
or
mov
sub
mov
jecxz
in
lahf
and
inc
inc
bound
jae
adc
or
jl
out
push
cld
jl
cmpl
ja
call
sbb
mov
dec
add
addr16
imul
decb
add
shll
fnstsw
pop
xor
push
fs
sub
andb
cmp
jo
jp
es
mov
stos
fiaddl
xchg
add
sub
scas
je
pop
jecxz
fisubrs
adc
inc
pop
dec
cwtl
adc
mov
repz
lea
shrl
pushl
stc
popf
pop
cmpsl
pushf
mov
sub
jle
out
push
jg
xlat
push
adc
dec
xchg
lods
cwtl
lcall
pop
xchg
sub
loopne
mov
and
mov
lods
aad
mov
adc
push
push
sahf
dec
mov
or
nop
dec
cmp
mov
lods
pop
or
test
and
es
movl
fdivr
adc
fdivs
mov
jne
adc
clc
sbb
movsb
mov
mov
jge
sahf
sbb
mov
gs
aaa
dec
das
push
test
add
inc
xchg
dec
insb
stc
push
aad
adc
icebp
insl
int3
sbb
scas
pop
push
xor
mov
mov
inc
cmp
test
das
mov
stos
jg
bound
test
add
xchg
mov
cld
inc
clc
and
imul
std
jmp
repnz
sahf
iret
clc
imul
mov
movsl
mov
push
jl
dec
inc
or
xor
clc
xor
rcrb
into
adc
mov
mov
cli
adc
lahf
push
fxam
xor
mov
rorl
jno
add
ret
roll
aas
push
ljmp
pop
repz
inc
sbb
push
mov
adc
loop
loop
mov
cli
fdivs
or
mov
and
cmp
mov
subb
out
or
mov
mov
jp
in
adc
add
sub
push
push
stos
cwtl
imul
lahf
nop
sbb
ljmp
jb
add
outsb
in
stc
add
xor
daa
enter
pop
nop
shll
or
xchg
mov
fdivs
cmp
nop
aam
bound
arpl
pop
aad
and
mov
ds
and
mov
adc
repnz
lahf
mov
add
xabort
negb
rcrb
pop
cmp
sbb
inc
les
pop
sbb
fdiv
in
outsb
das
shll
out
xchg
aas
in
adc
push
shll
fstps
and
test
fdivrs
push
add
inc
cmp
int3
push
dec
mov
test
dec
enter
inc
ljmp
test
cld
add
popf
repz
mov
ret
xchg
jg
mov
add
outsb
add
leave
jl
or
cmp
data16
pop
scas
iret
shll
or
adc
iret
test
sbb
scas
mov
sahf
movsl
sbbl
fmuls
lea
add
rcrb
mov
loopne
sub
cmp
dec
and
shr
push
hlt
test
push
scas
std
outsl
cmpsb
mov
inc
push
jnp
in
push
enter
movsl
dec
dec
mov
ss
cmpb
out
cmp
sub
pop
adc
loopne
add
int3
orl
insl
inc
jnp
out
lea
push
ror
stc
mov
pop
xchg
test
movsb
iret
jo
sbb
test
pop
jbe
fcomps
dec
and
sub
sti
pop
or
mov
xchg
shlb
dec
add
mov
xchg
fs
push
pop
iret
je
pop
aad
push
jmp
jo
sub
js
or
jecxz
cld
add
sar
inc
push
push
sar
dec
jne
ret
and
leave
fsubrs
leave
jns
and
roll
repnz
jo
xlat
fucomi
stos
je
adc
daa
add
jp
dec
gs
cmp
xor
sub
jne
lret
lahf
jge
push
jecxz
add
mov
and
mov
dec
and
mov
fiaddl
mov
sbb
and
std
popf
inc
mov
pop
push
push
outsl
jne
rorb
dec
mov
mov
push
adc
jno
cwtl
mov
push
jbe
scas
sbb
aam
xchg
jp
mov
xchg
jp
and
push
sbb
jns
and
jmp
mov
add
adcl
out
cltd
dec
nop
jo
sahf
mov
mov
xchg
mov
iret
xchg
divl
sbb
mov
mov
mov
scas
idiv
add
sub
mov
les
mov
cltd
inc
mov
nop
popf
inc
add
cmp
inc
fsubr
repnz
and
pop
mov
cmp
inc
cmp
outsl
in
jne
dec
sbb
lock
cli
loope
dec
es
pop
cltd
mov
roll
adc
adc
shrl
sbbb
dec
rolb
pop
jae
test
loope
sahf
mov
lods
and
jge
cli
dec
aad
xchg
pop
loopne
ljmp
push
xor
repnz
sbb
jecxz
stos
scas
xchg
mov
xor
pop
popa
loopne
and
jnp
and
add
jl
andl
mov
dec
cmp
cmp
fstps
dec
dec
fcompl
dec
mov
loope
mov
out
sti
or
leave
inc
or
mov
and
andb
push
movsb
out
cwtl
call
push
inc
scas
adc
fsubs
sub
fists
dec
adc
inc
fbld
outsb
lods
push
mov
pusha
fistpl
jl
and
jne
ret
mov
movsl
lock
nop
mov
lret
push
add
add
scas
add
add
test
jb
stc
cmpsl
jns
jb
push
mov
and
sbb
pop
fisttpll
pop
xchg
push
outsl
jns
rcr
es
test
out
add
sbbb
hlt
imull
sbb
jo
ret
dec
mov
mov
cmp
sti
insl
xorb
cmpsb
inc
scas
adc
fistpll
xor
adc
stos
jecxz
dec
mov
rolb
in
imul
xchg
dec
fnstsw
js
add
ja
mov
sysexit
in
or
das
testl
inc
pop
enter
or
pop
dec
icebp
sbb
pop
das
vpmacssww
sbb
xchg
mov
or
xchg
sub
daa
pop
int3
popa
jo
dec
adc
mov
sbb
xor
push
dec
std
pop
loope
sub
repnz
and
or
xchg
rcll
out
or
popf
sarl
cmpsb
add
xchg
cmp
push
pusha
pop
mov
cs
mov
or
or
sbb
or
call
int
jno
push
bound
gs
xchg
add
add
test
push
xchg
or
test
scas
mov
lcall
sub
xchg
mov
cmp
adc
xorb
cmp
pop
out
dec
fistl
outsb
cmp
hlt
jno
dec
call
out
cmp
push
mov
xor
xchg
pushw
out
arpl
xchg
int
xchg
pop
fincstp
pop
mov
das
xchg
test
push
bswap
leave
cmpsl
pop
cmpb
jb
scas
cmp
popf
ljmp
mov
sbbl
dec
out
leave
mul
push
inc
cmp
xchg
xchg
push
and
mov
into
nop
imul
xchg
test
in
jge
mov
dec
push
fsubp
and
jecxz
ja
cmp
push
sub
cmp
dec
xchg
sub
cmp
lock
or
and
aam
push
xor
inc
imul
sbb
sub
aad
daa
mov
cmpsl
call
stc
and
out
or
in
scas
fs
push
dec
aas
dec
mov
xchg
mov
sub
mov
bound
mov
lahf
lea
inc
jge
xor
and
push
pusha
fisttpll
inc
mov
std
mov
jb
xchg
adc
imul
and
inc
ja
xchg
xor
sub
cmpsl
adc
add
popf
xchg
jns
xchg
into
popa
out
xchg
or
cmp
sbb
mov
lea
dec
cli
push
ret
shl
dec
popf
xchg
popl
imul
sbb
and
inc
and
lret
ret
fwait
hlt
rcl
in
inc
xchg
jle
push
add
cmp
jl
sub
loope
jle
je
imul
jno
fcmovnb
cmp
mov
xchg
add
pop
loope
rcl
mov
lret
or
dec
sti
push
sbb
mov
enter
aas
mov
jae
ficomps
dec
add
cmpsl
shlb
test
cmp
mov
gs
jecxz
test
sahf
test
sbb
mov
nop
les
subb
sbb
leave
mov
sbb
mov
es
sbb
push
addl
insl
inc
push
mov
cmp
lock
add
fistpl
inc
jnp
push
mov
and
je
jae
sub
xchg
lea
insl
ret
push
repnz
mov
cld
add
clc
iret
scas
in
xchg
in
cmp
lods
outsl
xor
pop
fidivl
mov
xchg
fwait
mov
mov
mov
in
and
dec
movsl
loopne
imul
push
addr16
ret
jne
popa
leave
push
xorb
mov
xor
adc
dec
push
movsl
xchg
mov
pop
sbb
nop
jae
dec
into
push
ja
cmp
cmp
cmpsl
inc
scas
push
mov
pop
adc
pop
mov
mov
mov
xchg
pop
xchg
inc
dec
popl
stos
loop
jp
loopne
into
mov
dec
andb
loopne
pop
fbstp
rcr
test
xchg
cmpsb
ret
jmp
popa
popa
je
repnz
add
xchg
and
pusha
adc
inc
es
pop
test
push
insb
aad
aad
xchg
cli
sub
adc
in
sbb
jnp
ficoms
dec
std
ficoml
lahf
scas
or
pop
hlt
scas
icebp
movsl
mov
inc
fwait
cmc
rcpps
clc
shlb
inc
mov
stos
pop
pop
addr16
in
imul
sbb
stc
subb
cli
jle
stos
xor
pop
icebp
mov
into
pop
fsubr
mov
imul
mov
mov
push
out
pushf
aaa
int3
or
xor
jno
sub
movsl
cmp
outsl
dec
xor
dec
les
xchg
jbe
push
jle
fisubs
mov
ljmp
incb
mov
and
mov
and
test
dec
lods
add
fyl2xp1
pusha
popa
jo
jns
dec
and
lock
aaa
inc
shrl
sarb
fdivrl
scas
and
adc
dec
adc
das
push
cmp
cmc
dec
sti
dec
push
xor
aaa
adc
cmp
adc
insl
in
xchg
dec
std
inc
add
sub
sbbl
cld
adc
dec
sub
cmpsl
push
adc
mov
jne
iret
out
push
mov
cmp
in
out
ds
inc
test
inc
lods
int
je
ficoml
add
xor
pop
addr16
inc
movsb
loope
stos
jmp
push
mov
rcrl
push
push
xor
jnp
orl
aaa
or
int
lds
inc
push
pusha
sub
lods
mov
stc
shl
mov
push
jns
and
fildl
push
and
add
in
sub
cmp
jmp
mov
and
push
jno
xchg
sbb
xor
fnsave
ret
mov
sarb
lret
arpl
out
xchg
push
pop
loope
ror
shll
push
loop
push
ja
mov
out
jl
outsl
sbb
mov
repz
fstpt
aad
imul
idiv
push
jnp
loop
lmsw
xor
or
dec
push
out
mov
fsubs
add
mov
cld
xchg
pop
enter
mov
mov
add
adc
insb
andb
or
push
imul
iret
push
mov
and
cld
push
popa
pop
pop
int
out
ror
shrb
mov
xchg
jnp
es
shlb
shlb
in
jne
sub
imul
or
or
and
pop
sub
movsl
sub
out
negb
and
pop
pushf
cmpsb
inc
stos
test
xchg
jb
jl
in
cmpsb
adc
mov
roll
loopne
xchg
pop
fwait
icebp
faddl
std
nop
push
arpl
mov
add
mov
xlat
push
push
mov
int3
mov
les
outsb
ficomps
ret
or
and
stos
cmpsb
dec
or
mov
cmpsb
pushf
add
fsubl
scas
xlat
fstpt
repnz
dec
arpl
mov
aaa
xor
daa
je
sbbl
pushf
cmpl
lcall
jbe
mov
arpl
lods
add
dec
xor
lcall
repnz
lea
push
loopne
jns
and
fs
adc
stos
lods
xchg
decb
ss
jecxz
lea
fsubrl
mov
add
and
mov
arpl
sbb
dec
adc
push
inc
xchg
sub
fstps
cwtl
mov
cmp
popf
and
in
ljmp
test
popf
out
std
cmp
push
cld
fsubrs
jne
outsb
dec
mov
mov
sahf
push
test
jl
mov
jb
push
mov
push
xchg
pushf
lea
test
push
mov
std
push
sub
or
pop
sarl
outsl
dec
push
stc
cmp
shlb
push
and
loop
jnp
loope
iret
je
dec
mov
and
or
push
rcl
and
inc
shll
mov
cli
jno
fstpt
mov
leave
push
test
xchg
mov
mov
xchg
inc
sub
xor
imul
sbb
mov
inc
js
mov
aam
insl
fildl
filds
push
xchg
mov
movsl
mov
add
jmp
jno
pop
mov
lods
jp
movsb
mov
sub
repz
xchg
dec
mov
jle
out
pushf
sub
adc
out
add
sub
out
std
jmp
add
lahf
and
cmpsb
cld
xchg
fnstsw
inc
and
add
mov
pop
je
jmp
jbe
adc
hlt
lods
cmc
in
xchg
mov
in
lret
push
or
shll
lock
xchg
inc
shrl
and
cmp
add
mov
pop
xchg
push
xor
lret
stos
dec
scas
sbb
pop
popaw
and
dec
mov
mov
addr16
dec
and
dec
mov
int
ret
test
js
cmpb
push
cmp
loop
cmpsl
push
int
iret
int3
sbb
out
cmp
sbb
test
fbstp
sbb
test
pop
cmp
movsl
aad
pop
mov
push
mov
pop
jbe
adc
adc
cmp
cmpsl
nop
stos
rolb
das
decl
push
pop
arpl
daa
fisubl
ljmp
sbb
jnp
adc
mov
ja
fs
filds
jns
or
push
adc
or
fdiv
inc
aaa
cmp
insl
test
aas
ja
push
fisubl
sub
sub
daa
flds
insl
out
jmp
mov
fmulp
push
sbb
sub
std
and
push
dec
nop
mov
daa
lock
cmpsl
push
das
and
push
rcl
mov
jae
jno
push
aas
sti
mov
ljmp
scas
inc
mov
ret
shll
push
insb
dec
pop
inc
pop
push
push
sbb
daa
xchg
cs
cmp
fildl
push
pushf
mov
daa
sbb
insb
loope
jb
iret
daa
fcoml
add
push
mov
pop
ds
mov
pop
nop
add
leave
lock
dec
out
gs
test
xlat
in
jg
cld
mov
sbb
cld
jae
cmpb
out
popf
or
adc
aaa
and
cwtl
and
xor
sub
mov
pop
test
xor
sbb
sbb
jns
addl
fs
adc
scas
outsl
add
ds
daa
cmpsb
adc
xor
jecxz
or
sbb
nop
push
pushf
xor
or
fs
dec
dec
adc
movsb
lret
jp
out
movsb
and
mov
inc
and
mov
jbe
inc
push
adc
pop
jb
scas
pop
adc
jbe
cmpsb
and
ret
dec
xchg
xchg
push
and
dec
mov
cltd
sbb
out
sbb
lahf
out
imul
mov
test
push
mov
mov
inc
fbld
jnp
cmpsl
mov
add
rcrb
stos
mov
or
xor
jo
nop
repnz
pop
dec
or
pop
into
fbld
jecxz
or
sti
sub
rolb
xor
in
loope
mov
dec
daa
sub
rorb
ficoms
stc
inc
lret
out
or
into
in
cmpsb
mov
sbb
push
daa
scas
push
cwtl
jg
mov
fstl
mov
mov
push
aad
ret
and
jle
jmp
aaa
mov
mov
and
icebp
mov
rcr
out
cli
cmp
mov
xor
push
imul
cmp
add
pop
mov
xor
cmp
dec
nop
cmp
out
dec
hlt
sub
inc
inc
mov
inc
xor
add
cmpb
aam
sub
mov
jo
jne
aad
xor
xchg
push
jp
roll
lret
insl
rorl
push
pop
or
stc
mov
int
cld
out
cmp
jbe
stc
mulb
stos
sub
mov
push
inc
dec
or
mov
lcall
daa
mov
sub
adc
ror
add
in
mov
icebp
inc
jae
or
adc
repz
inc
shll
sub
lret
jno
lea
adc
dec
cmp
xor
adc
add
divb
sub
lods
repz
inc
insb
xchg
popf
cmpsb
cld
add
push
pop
sub
pop
ss
xor
out
sub
fimull
mov
mov
mov
lds
pop
xchg
mov
fcmovnu
fsubrl
clc
and
scas
or
and
testl
push
fbstp
inc
cwtl
in
cmp
mulb
sub
jb
mov
pop
sahf
sarl
xor
mov
mov
cli
mov
dec
rclb
jnp
adc
push
jmp
in
and
loope
data16
jmp
dec
outsl
ljmp
das
jne
pop
cmpsb
cmpsb
aas
outsb
cmp
scas
mov
pop
xchg
fadds
xor
adcb
int3
push
mov
dec
jg
xchg
mov
add
xor
imul
lahf
mov
add
mov
pop
xor
xchg
pop
add
popf
rcrl
jl
push
adc
adc
les
sbbb
mov
mov
aaa
mov
cltd
mov
lcall
test
lahf
les
xor
adc
std
adc
movsl
sub
xor
cmp
push
insl
test
mov
mov
or
lret
data16
insb
inc
fistpll
cltd
data16
jo
repz
fldt
and
outsl
xor
lret
cmp
cmp
js
push
int
fidivl
lahf
lds
jmp
loopne
push
sbb
lahf
sbb
lret
add
aas
inc
lret
loopne
or
insb
lods
bound
sbb
sbb
pop
dec
push
or
ret
ss
mov
cmp
mov
shl
fiaddl
pusha
test
jmp
push
add
lock
pop
sbbl
xor
cmp
sbb
jle
jg
add
popf
adc
fsubrl
aaa
cmp
mov
scas
sbb
sbb
sub
pushf
sub
xchg
sub
sub
xchg
lea
lods
mov
packuswb
lock
lock
xchg
sub
or
into
jbe
cwtl
push
lock
dec
xchg
mov
lds
and
xor
add
dec
mov
pop
jo
mov
rol
sub
shrl
xchg
cmp
xchg
jb
in
insl
jne
pop
sbb
lock
rorl
jo
loop
cmp
jb
sbb
dec
insb
jne
imul
sub
in
sahf
lret
sbb
shll
scas
mov
icebp
shll
sub
sti
lcall
cmp
in
rcrl
js
mov
jecxz
inc
jg
imul
dec
lret
mov
rolb
jno
mov
mov
mov
gs
add
and
mov
out
outsl
sub
dec
movsb
stc
arpl
cmc
mov
pop
cmpsb
mov
dec
jg
adc
lcall
sbb
outsb
xchg
mov
cwtl
add
aam
lds
das
and
sub
orl
mov
add
repnz
push
xchg
sub
addr16
clc
mov
dec
jnp
test
fnstenv
ss
push
mov
stos
sbb
mov
lods
mov
dec
je
ffree
cmp
pop
and
add
lret
cmp
loopne
and
pop
movsl
cltd
movsl
and
mov
adc
mov
dec
or
test
shl
push
add
scas
lret
test
dec
or
pushf
clc
add
lret
lods
mov
jmp
aad
mov
mov
rorb
adc
mov
sbb
adcl
addl
xchg
jnp
xlat
stc
loope
out
fwait
test
sbb
cwtl
insl
bound
imul
push
mov
push
or
pop
icebp
aam
add
xchg
fucomp
sbb
js
addr16
int
inc
into
outsb
xchg
pop
jns
ret
inc
mov
sbb
in
jp
daa
pop
cltd
cmpsl
cmp
fs
leave
pop
subb
mov
push
and
jecxz
dec
sub
test
sbb
pop
pusha
jo
jmp
jne
mov
and
iret
dec
inc
outsl
jg
adcb
and
xorb
js
nop
adc
fisubrs
enter
add
imul
push
loopne
cmp
xchg
aaa
sub
outsl
jmp
pop
enter
cmp
mov
daa
imul
out
cwtl
or
fucomip
mov
mov
inc
out
cmp
dec
xchg
xchg
inc
js
dec
adc
xor
and
push
ljmp
jne
jno
stos
lcall
leave
in
arpl
divb
aaa
sub
movsb
loop
sbb
std
and
xor
mov
mov
sub
mov
cmp
movsl
sub
push
cmp
loopne
lret
das
mov
repnz
xor
aam
push
push
sti
aaa
xor
in
clc
movsb
lret
push
xor
ja
xor
xor
mov
sub
cmpsb
in
rol
popf
rcrb
test
hlt
push
or
gs
fstpl
sbb
iret
inc
cmpsb
xor
clc
push
mov
mov
clc
push
mov
pop
clc
jns
push
lahf
shr
xchg
push
repz
cmc
ljmp
pop
sbb
mov
sub
xchg
sbb
push
pushf
lds
clc
mov
sub
stc
sbb
lcall
insl
lods
nop
sbb
pop
cmp
push
fwait
mov
int3
popa
sub
ret
and
push
or
mov
lret
dec
sar
jno
jno
cmp
mov
test
pusha
inc
pop
ss
push
mov
orl
lds
push
rcrl
mov
mov
add
leave
cmp
lock
lret
scas
lcall
jp
test
push
sahf
or
adc
and
jmp
sub
in
adc
sahf
inc
ja
stos
movsb
push
ret
sbb
sub
or
icebp
out
adcb
adc
imul
scas
add
test
or
and
or
xchg
andl
sbb
loopne
and
addl
rcrl
into
mov
mov
sub
testl
mov
in
mov
mov
stos
mov
mov
aam
xlat
cmc
add
std
fnstcw
or
mov
pushl
test
sub
imulb
popa
test
pop
rcrb
adc
add
test
push
push
stc
adc
push
fwait
aad
push
adc
sub
test
rcl
and
push
popf
mov
inc
cmp
fstpl
neg
mov
xor
mov
js
ficomps
loope
and
mov
xchg
mov
push
and
test
xchg
jp
jne
divb
stos
das
jb
lcall
in
jmp
mov
dec
dec
push
and
stc
sbbb
arpl
push
aad
dec
jns
adc
cmp
aam
cmp
int3
data16
cmp
cli
mov
jns
jns
adc
addr16
push
pushf
mulb
testl
icebp
or
test
jne
or
mov
pop
mov
cwtl
shlb
fwait
setbe
pop
sahf
hlt
fisubl
clc
incb
daa
xchg
xchg
or
lods
adc
xchg
in
insb
xor
sbb
lds
adc
sub
sbb
sub
test
mov
jns
mov
adc
jmp
dec
mov
pushf
push
fistl
push
cmp
adc
jb
jbe
xchg
jnp
add
loop
xor
push
jno
imul
cmpb
jmp
mov
pop
adc
adc
jge
jmp
mov
rorl
stos
mov
fisubl
pop
push
lods
and
pop
xchg
out
mov
dec
jo
inc
mov
jle
xor
push
in
aam
mov
push
icebp
repz
dec
sar
mov
shll
pop
add
fnstcw
and
jae
cmp
scas
pop
push
and
mov
pop
aad
jbe
cmp
scas
xchg
pop
jmp
repz
inc
cmp
or
push
sub
mov
nop
pushf
leave
xchg
aaa
in
lcall
xor
push
mov
jae
repz
cwtl
sub
inc
adc
jbe
test
out
add
mov
pop
out
testb
mov
and
push
or
sub
xchg
lcall
call
jg
push
pop
cld
fdivrs
scas
push
xor
xor
popa
imul
lock
jae
cmc
sub
xor
lret
xor
pop
cmp
test
callw
icebp
cmp
mov
stos
xor
jle
inc
in
adc
clc
mov
mov
mov
das
stos
mov
mov
idivb
mov
ficompl
xor
mov
dec
aas
mov
cmp
mov
repnz
sbb
mov
addr16
sbb
add
mov
movsb
adc
shll
mov
or
pop
aad
and
push
aam
shl
popa
push
lds
mov
movsb
adc
lahf
cmp
push
das
cwtl
popf
jo
xor
fs
push
repnz
mov
push
int
mov
lahf
fwait
mov
sub
shl
imul
or
call
jge
xchg
jmp
addr16
insb
mov
leave
mov
bound
mov
scas
cmpsl
cmp
fwait
ret
mov
adc
xlat
rcrb
enter
das
mov
mov
xchg
lds
mov
inc
sub
mov
rolb
mov
push
loop
cmp
aam
andl
lret
scas
cli
lcall
push
mov
repz
mov
pop
xchg
pop
jns
gs
out
sbb
decb
mov
rolb
mov
out
int
mov
leave
mov
aas
sbb
add
outsb
subl
ret
dec
pop
inc
sbb
in
pop
inc
push
int3
jg
pop
pop
jl
aad
leave
pop
sbb
push
cli
das
xchg
inc
cld
jecxz
les
adc
sbb
hlt
les
decb
inc
mov
mov
dec
jmp
popf
mov
xchg
popf
cmp
adc
mov
cmpsl
sub
out
xchg
cmp
mov
int3
push
or
jae
dec
sub
cmp
adc
daa
sti
cld
cmp
and
adc
clc
sbb
and
push
fildll
and
xorl
loope
mov
call
mov
lret
test
into
push
out
lods
das
xchg
movsl
into
push
jecxz
cmpsl
testl
das
test
adc
push
jp
sahf
xchg
push
test
mov
adc
sti
in
add
addl
test
jp
dec
bnd
jno
rorl
jp
addb
sahf
inc
pushf
xor
cmovbe
push
test
les
imul
cmc
subl
in
test
xchg
mov
out
mov
cwtl
imul
psrlq
aas
leave
pop
jnp
enter
inc
popf
jmp
sarb
inc
mov
sbb
adc
test
pop
dec
pop
push
jge
aas
aaa
push
or
idiv
fstpt
cmp
fscale
fsubrp
sub
mov
in
scas
mov
and
jge
cmpsb
jg
dec
dec
dec
push
and
and
xorl
imul
cmp
popa
into
and
lods
lret
call
push
or
movsb
xchg
jb
cmp
loope
dec
ror
mov
dec
data16
icebp
insl
insb
xor
xchg
shlb
movsb
mov
or
jno
mov
movsb
loope
cli
lods
lret
dec
fadds
mov
mov
ds
jge
loop,pn
xor
lds
add
push
les
dec
mov
xor
cmc
push
pushl
loopne
out
arpl
dec
jp
lea
add
dec
sbb
jns
push
mov
ja
xor
movl
call
repz
mov
add
adc
icebp
xor
int3
xchg
cwtl
mov
xchg
xlat
pop
int
sub
call
fcmovne
enter
dec
shl
sub
jp
lods
jae
int
and
stos
shlb
call
jae
push
sahf
in
in
std
inc
sub
add
sub
loop
mov
pop
daa
xchg
sub
outsb
mov
sub
cmc
vpacksswb
mov
mov
pop
cmp
xor
mov
ret
shrb
outsl
pop
lods
add
fsub
and
push
inc
sub
stc
sbb
cmp
test
xor
ret
popa
jnp
pop
mov
mov
aaa
fisttpl
or
shll
and
dec
inc
inc
push
cs
arpl
mov
sahf
jmp
fcomip
mov
cwtl
pop
out
das
out
sub
dec
xor
pop
in
push
fisubrl
pop
and
test
data16
pop
daa
out
cmpsl
push
xchg
daa
mov
test
or
xchg
dec
adc
dec
jbe
gs
jnp
out
mov
ficoml
loop
pop
out
outsb
xor
sub
dec
mov
xchg
jae
pop
xchg
loop
and
scas
adc
sub
aas
add
fcom
pop
dec
jge
pop
addr16
add
pop
clc
inc
lea
sub
lock
sbb
outsb
xchg
dec
std
inc
or
add
jmp
sbb
inc
mov
ds
dec
call
lds
pop
mov
sbb
icebp
int
inc
add
xlat
out
xchg
sbbb
mov
out
lret
lds
mov
push
lods
sbbb
leave
out
repnz
movsl
adc
das
scas
les
xchg
loopne
orb
sbb
mov
lret
iret
outsl
sub
fsubs
enter
arpl
inc
aam
inc
hlt
es
and
xor
clc
push
pop
xor
or
cmp
cmp
rcrl
inc
mov
jae
sahf
cwtl
fistps
arpl
add
fwait
sub
dec
mov
loop
ljmp
mov
and
test
pop
subb
std
mov
dec
dec
xlat
sbb
sbb
mov
xor
movsl
push
or
cwtl
and
inc
sbb
inc
jbe
movsl
stos
aas
outsb
sbb
or
dec
cmp
pop
xor
or
outsb
adc
mov
jp
or
mov
cmp
sub
push
sub
jb
add
jb
mov
loop
mov
roll
bound
cmp
es
xchg
mov
or
pop
jne
mov
sub
jno
int
in
cmpb
jg
sbb
aas
iret
add
js
fstpl
sub
arpl
std
lock
fsubp
jecxz
mov
outsl
insl
inc
leave
jo
addb
lods
mov
cld
into
fcoms
dec
clc
ret
fdivrl
sti
out
cmpb
in
aad
pusha
mov
mov
mov
test
hlt
xor
sub
sti
sti
call
and
leave
bound
in
stc
jno
test
or
push
rcr
ds
mov
mov
cmp
es
mov
ret
popa
outsl
cmp
stc
jo
push
maskmovq
testl
hlt
mov
mov
push
xchg
pop
sub
sub
loope
sub
daa
imul
test
mov
mov
push
cmpsl
pop
call
in
mov
lahf
sub
cmpl
imul
jae
add
sub
insl
sbb
es
jno
rcr
lret
cmpsl
mov
sysret
or
loope
icebp
add
je
shl
test
sti
xor
in
cwtl
jl
pop
mov
stos
adc
mov
sti
add
and
push
sub
dec
fld
pop
std
cmp
cmp
sub
shll
stos
in
dec
sub
iret
mov
push
call
cltd
je
jbe
xor
push
lods
push
mov
mov
or
out
loopne
xchg
lds
popa
dec
lcall
ret
jo
add
jmp
call
cmp
stos
xor
jno
test
stos
hlt
jp
jbe
pop
ljmp
xor
call
adc
insl
mov
sub
inc
xchg
and
jecxz
push
sbb
cld
add
sbb
xchg
mov
cmp
popa
icebp
dec
lock
rol
lret
push
add
addr16
jp
js
repnz
fadd
jl
push
int
xchg
push
inc
nop
sub
iret
arpl
mov
xor
nopl
lods
stos
aad
aas
sbb
xchg
in
out
dec
enter
into
loope
jae
jno
arpl
or
adc
sub
ja
rcll
push
bt
es
imul
clc
jnp
ficompl
imul
cwtl
ds
add
sub
mov
jns
pop
imul
idivl
pop
iret
shl
out
jecxz
loopne
cmc
jmp
mov
mov
add
cltd
je
pop
push
fwait
and
mov
hlt
sub
mov
lret
clc
cmp
dec
mov
out
add
pop
mov
popa
loop
jo
mov
or
jbe
loopne
outsb
ror
jne
gs
jg
call
push
in
in
mov
adcb
mov
outsb
rcll
sti
test
imul
mov
lahf
and
fcompl
aaa
push
or
push
xor
xor
cmp
std
ss
fiadds
sarl
pop
mov
jb
mov
xchg
into
mov
ljmp
pop
xchg
mov
insl
jnp
imul
mov
push
cmp
or
jne
fisubs
test
iret
add
in
ffree
pushf
inc
add
dec
adc
repnz
adc
sub
and
gs
mov
adc
fadds
push
int
pop
ljmp
mov
lret
mov
mov
mov
inc
test
dec
dec
mov
in
movsb
aam
mov
push
mov
cmc
or
and
xor
inc
push
xor
pop
and
lods
mov
xlat
mov
pop
lea
sbb
inc
aaa
push
and
gs
push
jns
push
xlat
push
or
pop
cmp
xchg
nop
inc
xchg
pcmpeqb
vmovlps
jne
pop
adc
bound
mov
loopne
and
inc
mov
xor
or
xlat
xchg
ja
aam
dec
push
sub
lods
pushf
dec
rcll
sti
in
imul
dec
bound
lea
sti
inc
add
cmp
push
movsl
and
mov
sub
test
leave
lret
outsl
jae
lret
sbb
ja
adc
stos
mov
roll
mov
or
pop
pushf
outsl
xor
dec
addr16
rclb
arpl
xchg
fisubl
add
mov
mov
in
out
pushf
add
sub
mov
fdivs
jno
test
xchg
pop
popa
fistl
inc
dec
inc
cs
cmc
inc
cmp
loop
dec
inc
add
test
enter
ljmp
push
cmp
sahf
lahf
mov
or
pop
jae
mov
jnp
je
scas
lret
lds
scas
testl
in
pop
in
push
sub
mov
out
pop
inc
hlt
inc
add
sub
xchg
ficoms
ja
mov
mov
mov
mov
sub
adc
xor
cmc
cmp
cmc
sub
xchg
cmp
push
jbe
repz
add
cmpsl
in
test
push
imul
cmp
jo
popa
push
jge
jmp
xor
sub
sbbb
dec
dec
cld
jecxz
xorb
sbb
loopne
xor
mov
pushf
lret
xchg
adc
popf
inc
sbb
xchg
pop
pop
lea
bound
cwtl
gs
inc
stos
icebp
fisttpl
xchg
andl
je
push
mov
sbb
outsl
out
sub
pop
sbb
nop
pop
pop
outsb
sbb
jns
jnp
push
loopne
cli
mov
test
stos
daa
rcrl
aam
cli
insl
enter
lret
jns
loopne
jl
aas
dec
mov
nop
cmp
lret
lret
sbb
xor
rcrl
mov
roll
fs
xor
sub
mov
or
push
je
fs
hlt
cli
shlb
xchg
xchg
popf
lods
push
mov
jmp
xchg
lea
stos
push
ljmp
jg
arpl
insl
pop
frstor
adc
int
jg
adc
fld
outsl
adcb
ja
push
jl
arpl
fwait
ljmp
or
lock
inc
jmp
xor
dec
pop
or
sahf
ds
jno
test
cmc
lahf
rclb
xor
out
push
add
dec
xor
orb
cmp
pop
sub
push
push
mov
fsubs
and
sbb
dec
ds
cmp
dec
scas
sub
and
inc
jmp
test
aaa
divl
xor
movsl
addr16
inc
shll
sbb
and
inc
pop
add
test
out
mov
dec
pop
lcall
and
xor
jo
push
out
gs
mov
roll
imul
jo
insb
lea
dec
call
mov
xor
fisttpl
bound
sbb
ret
cmp
cmp
lret
inc
shrl
scas
popf
popa
sub
jmp
test
in
lea
test
cmp
pop
add
dec
xchg
popa
imul
js
addr16
clc
cs
pushf
and
mov
push
loopne
es
mov
cld
popa
mov
mov
repnz
jne
outsl
mov
lea
mov
aad
mov
and
pop
je
jge
mov
daa
xlat
fcoml
loopne
mov
in
outsl
rcrl
loop
sahf
push
fsubrl
jnp
dec
enterw
add
repnz
aam
xchg
or
pop
inc
jb
sbb
fbld
mov
fsubrl
jns
js
add
or
cmp
mov
orl
cmp
mov
jp
jb
sbb
cltd
mov
scas
xor
int3
addr16
cmpsl
lcall
dec
aam
lods
cmpsl
sti
fsubrs
adc
sbb
inc
cltd
sbb
mov
pop
leave
cmc
pop
push
cmc
xor
add
or
fisubl
xor
add
stos
inc
stos
dec
xlat
out
lahf
sbb
or
js
cmpsb
mov
pcmpgtb
xchg
mov
jmp
lahf
mov
into
mov
cmp
adcl
cmpb
notb
mov
lods
stos
xchg
fmuls
pop
xchg
ret
add
pushf
push
cmp
scas
scas
xor
lock
fnstenv
sahf
divl
cmp
push
sarl
xchg
jg
or
inc
jg
divb
add
jg
mov
imul
je
stos
and
inc
xorb
mov
ret
pop
lret
lahf
and
mov
flds
mov
pushaw
dec
dec
dec
xchg
pop
icebp
dec
mov
push
xchg
imul
jecxz
push
sub
push
push
js
movsl
lret
xchg
out
jns
sbb
pop
sub
cmpsb
test
xchg
dec
or
ss
dec
daa
insb
xor
push
jl
imul
push
aaa
sti
push
out
inc
leave
cmp
pop
or
es
push
pop
imul
pop
pop
inc
shll
xchg
movsb
add
enter
cmp
test
in
ljmp
inc
xchg
push
mov
xor
in
mov
xor
jne
and
push
ret
dec
mov
rcll
test
sbb
test
rcl
fwait
xchg
adc
adc
ja
dec
jl
xchg
mov
insl
xor
into
jne
ror
in
stc
jo
jnp
notb
mov
inc
test
adc
stc
lret
add
sub
xchg
cltd
pop
pop
sbb
stos
jae
cmp
or
outsb
inc
xchg
pop
inc
test
out
xor
mov
pop
les
adc
add
test
mov
xlat
mov
out
inc
jnp
xchg
cwtl
shll
and
imul
mov
mov
mov
push
xor
pushf
jg
inc
mov
cmpsl
and
jg
gs
push
add
shlb
push
stos
test
cmp
mov
mov
adc
add
movsl
daa
in
call
add
or
add
sbb
adc
lret
or
fistl
idivb
pusha
fbstp
fs
in
mov
or
popa
or
dec
and
mov
sbb
pop
scas
negl
out
mov
sbb
mov
add
adcl
test
jns
fnstcw
or
jmp
fcmove
adc
cmp
jecxz
lahf
and
inc
push
mov
mov
mov
cwtl
sub
adcl
mov
into
int3
push
rcll
mov
mov
xlat
ret
jne
pop
jle
add
bound
ret
xchg
cltd
cld
lods
outsb
push
cmp
test
int3
dec
popa
push
outsl
hlt
pop
test
xchg
ljmp
scas
out
adc
jb
inc
pop
imul
and
mov
stos
dec
mov
push
outsb
xchg
mov
jo
mov
mov
leave
lret
sbb
cmp
test
push
rol
and
push
aad
outsb
cmp
jae
push
push
clc
sub
xchg
cltd
hlt
lock
dec
cmp
push
mov
adc
into
sub
ficomps
jne
rol
cltd
icebp
outsb
xchg
and
int3
sti
sub
jo,pt
dec
lea
adc
shrb
enter
test
sub
outsl
jb
int3
leave
sarl
std
mov
add
pop
hlt
mov
nop
std
inc
popf
neg
dec
mov
and
jb
dec
mov
fisttpl
xchg
nop
push
ja
lods
push
popf
lds
inc
xor
loopne
sub
push
fidivs
sbb
mov
into
pop
cltd
ficompl
adc
xchg
movsb
sbb
cmc
pop
xor
mov
lret
fnstsw
mov
iret
lret
roll
mov
int3
data16
pop
in
and
pop
jo
mov
pop
int3
pop
dec
inc
pop
out
jp
mov
and
jo
mov
adc
add
xchg
ljmp
pop
or
sbb
push
shrl
add
insb
subb
loopne
add
test
popa
mov
inc
xbegin
inc
xor
push
pop
sbb
mov
push
ret
test
pop
cmp
mov
notb
std
push
dec
adc
es
test
add
cmpsl
ds
mov
es
rcrb
scas
int3
and
add
xchg
jbe
mov
movsl
mov
ret
das
or
aad
push
imulb
stos
and
xor
stc
jnp
hlt
mov
sbb
inc
mov
shrb
dec
add
shll
shrl
inc
mov
inc
cmp
fsubl
or
push
test
sahf
cs
lds
inc
insl
fcoms
mov
or
mov
sarb
mov
mov
mov
push
inc
inc
test
cmp
gs
fs
fidivrs
push
sub
lods
mov
cmc
lret
or
rclb
mov
xchg
hlt
hlt
les
loope
jne
pushf
testl
push
push
sbb
fucomip
lret
mov
movsb
pop
and
inc
cmc
jg
cmp
loop
xchg
mov
xchg
pop
sbbb
push
fldl
add
bound
je
push
jb
inc
iret
mov
push
sub
jge
dec
jns
imul
shlb
int3
inc
mov
lcall
inc
fsts
aad
sbbl
xor
in
push
cs
sub
lret
adc
xchg
adc
imulb
mov
imul
fdivrl
xchg
out
mov
mov
xor
adc
sahf
cltd
dec
int
add
rorb
mov
addr16
mov
cmp
mov
xor
fldt
push
dec
jno
movsb
data16
ficompl
inc
xor
lahf
or
pop
adc
mov
mov
test
insl
xchg
mov
ret
xor
xor
inc
clc
faddp
sub
rolb
cmp
daa
imulb
std
xor
and
or
cmp
repz
lods
les
fstpt
cmp
xor
jo
or
out
adc
adc
cs
in
out
mov
enter
enter
hlt
scas
jmp
mov
lods
push
push
std
adc
adc
in
notl
adcb
sub
insl
orb
pop
sarl
cmpsl
sbb
in
cmp
aaa
jnp
insb
icebp
fcmovnbe
divb
mov
adc
or
inc
mov
out
pop
loope
imul
push
call
add
fisttps
js
inc
repnz
push
lea
push
ret
dec
push
adc
and
stos
imul
imul
and
fstl
lds
fisubs
push
xchg
adc
nop
scas
and
ja
jnp
fs
jecxz
mov
rcl
sbb
pushf
add
outsb
add
mov
cmp
mov
push
shrl
mov
lret
push
dec
sti
jne
push
adc
cmp
cs
lret
mov
pop
or
in
push
push
mov
pushf
test
pop
lcall
movsl
xchg
mov
out
and
insb
mov
add
add
enter
mov
pop
sbb
fcoml
imul
jmp
xchg
jns
cmp
xlat
fimull
and
cmp
sbb
test
ficompl
xchg
cwtl
push
fwait
cmp
add
arpl
rorb
dec
and
scas
mov
enter
out
cmovns
int3
sbb
jae
mov
lahf
rcrb
int
ret
inc
cli
les
cmp
stos
mov
dec
aad
js
sbb
dec
int
call
mov
sbb
xchg
fidivl
push
test
and
imul
inc
jb
shr
enter
mov
push
jmp
dec
lret
xchg
dec
jno
fwait
sbb
xor
and
loope
gs
mov
sahf
sub
leave
adc
cmpb
adc
lea
cmp
sub
cltd
jnp
jnp
fstl
sbb
push
pop
out
enter
adc
in
xchg
fisttpll
jg
push
lds
dec
lahf
push
js
test
mov
ljmp
cmp
inc
pop
push
sub
std
pop
mov
mov
mov
push
jecxz
push
es
mov
mov
test
fcom
fwait
roll
sub
fiaddl
cmp
mov
jg
cmp
mov
lret
cmp
cwtl
outsb
lods
jp
mov
inc
fst
rclb
push
rorl
ds
and
outsl
jg
or
test
push
inc
fwait
and
xchg
rcll
sub
scas
sbb
push
shlb
lods
pop
and
mov
xchg
hlt
cmc
sub
ss
inc
jb
push
jg
xor
ss
or
cmpsb
push
or
icebp
call
ljmp
jmp
dec
aaa
mov
in
inc
inc
push
lret
addb
addr16
das
mov
cli
inc
xchg
xchg
jbe
popf
xor
adc
fnstcw
int
mov
int
xchg
iret
ja
xchg
inc
jbe
cmp
mov
movsl
add
mov
xlat
push
adc
pop
xchg
mov
mov
xchg
inc
test
xchg
sbb
pop
jecxz
and
int3
in
mov
in
test
cwtl
inc
mov
test
std
ret
cmpsb
sbbl
mov
shrl
cmp
imul
xchg
scas
push
sub
jl
data16
or
add
pop
bound
xor
scas
aas
ret
stos
lods
xchg
push
jbe
scas
insl
xor
sub
iret
gs
xor
mov
mov
mov
xchg
mov
and
and
mov
in
sub
xchg
fs
dec
cltd
insl
loope
add
sbb
es
dec
ljmp
lock
add
dec
xchg
jns
inc
jns
jb
cmp
ja
int3
mov
adc
sbb
js
adc
cld
pop
xchg
mov
xchg
out
out
push
xchg
sub
pop
bound
daa
outsb
cs
arpl
xor
xchg
add
sub
mov
fsubr
movsb
fmuls
mov
mov
test
pop
insl
and
xor
pop
mov
pop
lds
dec
add
daa
arpl
inc
jnp
jge
daa
pop
loopne
jmp
cld
int3
inc
cmc
cld
lahf
jnp
mov
adc
in
insl
jecxz
inc
pop
jl
daa
out
aaa
mov
and
fdivs
daa
push
cmp
fmull
push
or
mov
das
out
movsl
pushf
sti
test
addr16
adc
shrl
xchg
and
aas
loop
std
jbe
mov
or
cli
aam
xchg
and
lret
ja
xchg
xchg
ljmp
leave
out
pop
dec
inc
or
jns
test
dec
punpckhwd
test
rolb
pop
lret
xor
scas
inc
mov
mov
mov
xchg
xor
bound
mov
lahf
cmp
testl
out
jb
jp
arpl
add
bound
or
mov
clc
mov
push
in
sar
xor
sbb
shll
jbe
dec
shlb
arpl
push
sbb
jmp
mov
mov
aas
mov
not
sahf
add
mov
mov
add
stos
pop
push
inc
sbb
pop
dec
sbb
iret
push
xor
mov
xchg
xchg
out
xlat
mov
mov
xchg
push
dec
lods
cmp
mov
sti
roll
pop
mov
sub
push
in
jg
loop
xor
int
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
rcrl
stc
addb
orl
mov
mov
cli
add
ret
sbb
adc
or
push
test
push
pop
inc
bnd
sub
jbe
push
aas
enter
xchg
out
ss
pop
xor
mov
cld
push
sub
insb
add
mov
cpuid
or
cltd
sbb
rol
out
test
outsl
cltd
lock
negl
das
push
outsl
mov
mov
push
js
adc
push
cmp
mov
push
jo
fdivp
and
sbb
out
inc
lods
inc
sarl
rorb
ljmp
into
jg
inc
movsb
mov
xchg
or
xchg
mov
inc
mov
cmp
outsl
inc
neg
add
and
mov
dec
inc
adc
cmp
cmpsb
or
pushl
mov
cmp
lods
push
adc
sbb
push
adc
lods
fsts
and
into
into
in
mov
cli
addr16
fs
shrb
ljmp
stc
movsl
push
adc
mov
imul
loop
jcxz
and
xor
jecxz
pop
xchg
ret
clc
hlt
addr16
mov
jno
outsl
ja
movsb
jnp
hlt
push
sti
jb
ss
mov
add
ljmp
addb
lods
in
addr16
mov
and
xor
imul
je
sahf
cwtl
mov
arpl
add
xlat
xor
pop
loopne
inc
jecxz
sub
push
push
push
jne
into
cwtl
push
sti
dec
push
shrd
dec
lret
adc
out
sbbl
imul
gs
orl
lret
cs
test
jmp
push
mov
cmp
ja
jge
je
mov
sub
lock
movsb
mov
icebp
xchg
ja
loopne
mov
hlt
sbb
cmpsb
pop
xchg
cmpsl
sbb
dec
add
test
loop
arpl
stc
pop
pop
push
fwait
or
inc
out
mov
nop
je
fstps
push
push
dec
test
cmp
sub
mov
in
adc
sub
mov
cwtl
dec
iret
movsb
add
dec
sub
jo
fs
in
dec
fsts
dec
inc
and
ds
dec
pop
cs
adc
add
lods
xchg
jmp
sub
pushf
in
sub
or
inc
dec
sti
push
daa
test
imull
leave
mov
inc
lcall
cltd
jno
imulb
lcall
dec
pop
outsb
jnp
ljmp
loopne
add
fisubl
sahf
ds
aaa
lods
into
jle
cmpsl
out
ljmp
xchg
sbb
push
mov
ljmp
nop
mov
sub
xor
or
mov
mov
out
decl
mov
cmpsb
arpl
cmp
push
and
or
jmp
in
xchg
pop
sub
rcrl
ds
leave
divb
pop
stos
fs
decl
dec
je
int
pop
jb
cmpb
mov
stos
loopne
sahf
outsb
mov
cmc
jb
dec
hlt
sbb
sbb
sbb
jmp
imul
clc
popf
xlat
push
xchg
int
fsubs
cwtl
into
rcll
scas
or
mov
xchg
xchg
test
idiv
fcmovnu
xor
mov
stos
mov
fbld
fdiv
das
jb
push
call
into
pop
mov
or
cltd
aaa
xchg
inc
adcb
mov
push
mov
cmp
cmpsl
push
cmp
push
mov
ret
fmul
je
jg
sbb
push
push
adc
out
mov
les
or
mov
cld
fwait
std
xor
and
and
mov
push
xor
insb
aam
or
xchg
scas
mov
fadds
add
inc
sbb
mov
pop
fdivrs
add
pop
ret
popf
push
xor
int3
xchg
stos
shll
jl
std
mov
ja
and
sub
sub
aas
repnz
add
pushf
mov
xchg
in
push
mov
daa
xor
or
aam
test
xor
push
pop
pop
cli
xchg
xor
fstpl
nop
sbb
xchg
cmp
inc
orb
clc
insb
loope
leave
popa
pop
sub
inc
inc
xor
std
add
fdivr
or
loopne
jle
imul
xorl
icebp
mov
adc
pop
imull
adc
inc
cmp
movsb
cmp
sbb
sahf
xchg
dec
out
adc
xchg
mov
clc
pusha
jb
lods
mov
gs
aaa
cmp
stos
or
dec
inc
es
enter
int
mov
bound
mov
cmove
fwait
xchg
lods
dec
push
popf
shll
dec
sub
in
push
and
mov
scas
xchg
mov
loopne
xchg
inc
mov
rorw
mov
pop
fsubs
push
mov
loopne
negb
jmp
mov
movsb
xor
insb
repz
jge
adc
or
adc
dec
or
xchg
mov
ret
push
lods
or
in
xor
dec
push
and
pop
or
jmp
into
push
cmpsb
mov
xor
fisubl
sbb
insb
inc
ljmp
sub
addr16
aaa
icebp
fwait
stos
pop
fucomp
cltd
xor
fdivs
cmpb
mov
aas
or
pop
mov
pop
and
lock
fildl
or
sub
xchg
je
pusha
add
jp
add
call
bound
cmp
mov
add
jne
pushl
push
imul
ret
adc
inc
mov
pop
xor
test
in
movsb
mov
cs
idivb
loopne
shl
cmp
pmovmskb
shlb
push
cs
out
push
or
fwait
in
xchg
call
out
xor
push
scas
push
loope
adc
and
add
or
aaa
sbb
mov
arpl
pushf
fbstp
mov
adc
lods
ja
inc
and
or
dec
stos
sub
pusha
mov
or
ret
scas
cmp
ss
sub
repz
in
mov
rcrb
jmp
jle
gs
push
sarb
push
les
push
pusha
movzbl
mov
shlb
or
jg
leave
xorb
push
insl
push
pusha
lods
imul
adc
inc
insb
or
inc
cmp
jmp
int3
cmp
icebp
cmp
rorl
andb
mov
mov
cmp
pop
daa
lret
inc
hlt
arpl
out
and
mov
cld
lahf
jge
fnsave
cmp
lock
imul
imul
lret
rcl
outsb
ja
sub
sbb
enter
fiadds
jmp
fistpl
sbb
adc
or
fdivrs
out
push
cmp
dec
push
das
rdmsr
pushf
xchg
repnz
in
insb
popf
or
bnd
push
imul
cli
adc
adc
jns
inc
out
push
in
movsl
ss
sub
adc
rolb
cmpsl
cli
mov
lock
pop
adc
cli
inc
mov
jae
mov
cmp
call
xor
out
mov
negl
push
inc
xchg
cmp
rorb
inc
lock
or
stos
lods
leave
jo
enter
lods
cld
mov
mov
inc
jmpw
lods
push
leave
cmp
xchg
enter
fsubrl
out
in
and
pop
pusha
insb
jg
bound
jbe
add
js
shlb
inc
outsb
pusha
xor
and
imul
sub
insb
ret
scas
ret
daa
sbb
daa
outsl
gs
shll
pushf
lds
mov
push
xchg
push
les
pop
aad
xchg
push
and
sub
cmp
mov
inc
sbb
adc
aad
inc
jmp
sub
stos
in
add
in
addb
inc
sub
xor
xchg
or
cld
jno
push
es
or
pop
xor
and
cwtl
cmp
sti
test
and
cmp
inc
popa
cmp
push
lods
mov
jmp
ljmp
adc
les
mov
and
pop
and
roll
push
xchg
lcall
rep
dec
gs
mov
pop
mov
fistpl
jae
and
mov
je
aaa
cmpsl
jecxz
es
fiaddl
dec
xchg
mov
out
int
push
dec
lods
loopne
mov
cwtl
stc
mov
cmp
fildll
ja
jge
sub
pop
imul
cmp
mov
xlat
mov
pop
and
andl
sarb
nop
xor
outsl
add
jg
add
mov
arpl
jge
mov
dec
jp
xor
imul
test
test
jns
xorb
sub
push
out
cmp
scas
int
rclb
test
shrl
mov
adc
subl
push
test
dec
les
scas
lret
test
dec
or
aam
imul
and
or
push
popa
outsb
aaa
add
arpl
pop
out
add
cld
subl
in
cmp
jo
mov
js
out
add
or
ret
mov
and
push
adc
cmp
es
mov
lods
test
stos
push
adc
push
sbb
mov
sbb
repz
lea
mov
xchg
sub
add
scas
push
cmpsb
test
sti
add
data16
xchg
pop
mov
push
add
sbb
dec
testl
mov
inc
mov
sbb
leave
mov
fiadds
enter
push
outsl
leave
icebp
jg
dec
jmp
adc
mov
insl
idivl
daa
or
aaa
mov
inc
out
mov
int3
repnz
lret
mov
popa
mov
jb
xor
pop
push
dec
test
int3
mov
inc
flds
clc
repnz
loop
lock
ds
ret
and
testb
fistpll
lret
xor
xor
add
jno
fsubrs
mov
sub
imul
cmpsl
inc
mov
mov
pushf
sbb
mov
out
jno
aas
popf
es
xchg
outsb
jne
cmp
rcr
push
mov
out
pop
push
aas
sub
faddp
sub
adc
pop
push
dec
xchg
add
cmp
add
scas
sub
xor
cmp
popf
pop
jl
add
cmp
cmp
sub
jle
mov
push
outsl
popf
dec
push
xor
dec
inc
cltd
sub
out
sbb
push
push
push
repnz
dec
bound
int3
cmp
movsb
test
test
pop
movsl
push
pop
push
lret
jmp
fldl
lds
adc
es
jg
loop
std
mov
mov
pop
cmp
data16
lods
xlat
xor
dec
in
mov
adc
push
sub
pusha
dec
cmp
jecxz
mov
cwtl
mov
adc
repz
sub
adc
or
pop
cmpsl
jbe
jno
shll
jno
sub
in
loope
adc
jnp
jno
fdivrl
mov
push
mov
xor
or
push
jmp
fs
pop
das
jp
jne
jno
stos
xor
push
ret
inc
xor
lcall
dec
and
dec
dec
add
and
xchg
movsb
iret
and
push
push
mov
xor
subl
push
xchg
fs
xchg
sub
icebp
out
pop
das
popf
mov
leave
mov
push
mov
loop
mov
loope
add
sub
cmpsb
or
outsl
xacquire
fsubp
insb
xchg
in
iret
je
dec
jge
inc
sbb
fidivrl
jns
inc
outsl
hlt
andl
inc
cmpsb
sbb
fs
mov
inc
aas
add
nop
mov
and
dec
movsl
sbb
scas
stos
dec
ret
jbe
jb
sbb
shl
or
jo
insb
hlt
sub
sbb
mov
icebp
jge
hlt
pop
jne
push
cmp
xor
sbb
pop
scas
and
jle
mov
push
pusha
mov
push
push
int
adc
and
dec
lds
push
faddl
jnp
popa
pop
jae
cmp
jmp
xchg
adc
subb
cmp
movsl
xchg
mov
arpl
inc
sbb
cmp
mov
and
sahf
sub
out
cltd
sahf
pushf
mov
stos
stc
int3
pushf
and
sbb
test
adc
ficompl
aaa
mov
cmpsb
mov
notb
mov
je
pop
xor
or
xor
lea
push
dec
push
in
push
lcall
push
mov
cmpl
lcall
inc
sar
shlb
add
xor
cvtps2pd
mov
frstor
stos
dec
adc
loop
ja
les
inc
jmp
scas
jp
or
pop
sbb
push
ds
cli
dec
fcoml
fiadds
xchg
fisttps
into
lock
or
push
jge
xor
rcrb
cmpsl
cmp
aad
push
mov
fcoms
gs
sti
pusha
ret
out
ret
adc
xchg
rep
sub
pop
sahf
mov
inc
roll
adc
mov
pushw
out
and
jl
popa
loop
mov
inc
pop
in
test
xchg
push
push
ja
push
jne
jmp
adc
and
jb
push
jge
mov
fnstcw
popa
cmc
roll
js
js
mov
adc
insl
jle
mov
cmpsb
pop
xchg
lock
loope
movsb
outsb
stos
cmc
cmp
jmp
ds
dec
mov
stos
in
cs
cmp
xor
fnstsw
cmp
icebp
divb
inc
cli
pop
add
or
jmp
mov
out
sbb
mov
add
jne
xor
xchg
dec
pop
out
push
dec
mov
mov
jb
inc
pusha
xor
daa
push
sbbb
jmp
or
mov
xor
xchg
inc
sub
arpl
iret
sbb
jmp
fildl
out
sbb
sbb
mov
mov
adc
dec
popa
jle
mov
lahf
xor
rol
and
mov
mov
out
push
and
loopne
movsb
pop
inc
add
xchg
dec
mov
dec
popa
sbb
or
push
fsubr
mov
mov
xchg
mov
shrl
ja
dec
outsb
jbe
add
push
aad
nop
lea
sbb
testl
scas
imul
pop
inc
gs
cmpsb
dec
fwait
scas
mov
push
sub
inc
dec
stos
adc
mov
jb
sub
outsl
adc
xchg
or
scas
lea
mov
push
sahf
xor
adcl
or
pop
cwtl
nop
sub
mov
negb
or
test
pop
ja
psrlw
mov
es
xchg
pop
or
mov
je
cmc
sub
cmc
cmpsl
jb
test
sahf
mov
fsubr
inc
ja
call
daa
mov
sbb
imul
aad
push
das
adc
jl
xor
outsl
mov
ds
dec
test
arpl
lret
aas
jmp
mov
mov
cmp
int3
dec
out
inc
xor
pop
inc
mov
jecxz
xchg
xchg
inc
cmp
loopne
jb
in
loop
push
clc
mov
aas
push
mov
movsl
add
mov
fwait
mov
fidivl
ja
add
fnstsw
insb
xor
push
sahf
js
dec
in
aam
int3
ljmp
inc
cld
cmc
fstl
jle
cmp
pop
cld
and
add
ficoms
jle
es
shll
add
pop
sbb
ds
xor
inc
inc
lcall
or
lods
cmp
cmp
sbb
inc
call
cmp
adc
in
or
xchg
mov
pop
mov
lods
adc
les
in
testl
jg
xor
js
cmp
daa
dec
data16
js
out
jg
sub
lods
fistps
mov
scas
inc
into
icebp
xlat
dec
movsl
adc
adc
icebp
xchg
pushf
rcr
ja
das
xchg
push
and
rcrl
in
mov
andps
int3
inc
scas
mov
ja
push
out
or
repnz
in
dec
outsl
mov
push
jge
aaa
jnp
jae
add
notb
lods
aaa
or
outsb
mov
fcmovb
pop
ret
sub
aaa
pop
and
shlb
aam
sub
cmpl
adc
mov
iret
dec
jmp
subl
and
stos
es
mov
add
mov
fcmovnbe
pusha
xchg
les
daa
xchg
and
repz
in
fmuls
jbe
mov
mov
icebp
and
pop
loopne
mov
mov
jns
inc
lods
sbb
add
sbb
add
and
sbb
jno
pinsrw
loopne
int
je
fcmovnb
out
jb
addb
pop
sbb
xchg
adc
pop
cmp
adc
int3
movsl
push
push
sti
fwait
mov
test
mov
outsb
push
push
mov
pusha
adc
testb
lret
call
ljmp
add
and
inc
xchg
xlat
dec
pop
lock
pop
cmp
and
test
fs
lret
test
inc
fdivrs
cltd
mov
mov
jno
movsl
into
sub
cmc
sub
or
mov
mov
rcll
out
js
jno
jne
test
jg
xor
daa
ret
stc
xchg
mov
mov
sub
push
and
fadds
jnp
adc
cmp
mov
xchg
inc
cli
jge
adc
icebp
and
out
mov
pop
inc
fidivrs
rcrb
mov
cwtl
fucomi
xchg
sahf
cmpsb
addb
inc
jecxz
movl
push
jmp
mov
sub
inc
lock
push
sbb
stos
xlat
lds
shll
testl
pop
add
shlb
mov
jo
loope
outsb
mov
lret
jb
shll
aam
and
sub
outsl
rcrb
mov
arpl
jnp
out
mov
xlat
mov
inc
bts
adc
ljmp
gs
jno
mov
mov
mov
add
fcompl
xor
and
test
adc
adc
sbb
test
stc
notb
sbb
or
movsb
gs
test
push
or
mov
push
mov
adc
add
shr
bnd
enter
mov
aam
in
pop
inc
fisttpll
mov
es
jb
mov
rol
fwait
push
dec
push
push
xor
xor
ds
mov
cmp
out
imul
and
push
jp
sub
cmpsl
push
stos
mov
pop
and
jbe
lea
neg
cmp
cmp
mov
outsb
fstps
lods
jecxz
push
std
pop
jae
out
jge
gs
test
les
int
das
inc
dec
or
and
xor
mov
daa
add
insl
cmpsb
or
int3
movsb
scas
lcall
sub
dec
inc
push
sbb
loope
aas
xor
shll
pop
xchg
push
in
or
out
inc
cmp
add
jp
and
mov
cwtl
add
ret
xchg
mov
sub
in
aam
lret
mov
pop
and
dec
push
test
push
sub
fsubrl
and
int3
xchg
xorl
mov
idivl
mull
subl
mov
sub
cwtl
cld
sbb
ficoms
or
mov
insl
mov
sub
xor
jl
in
cmc
lock
xor
inc
xor
ds
lret
pop
mov
push
and
dec
mov
bound
leave
std
ret
lods
mov
push
push
jns
ret
rcl
negb
subl
jne
rcrl
fwait
aam
cmc
xchg
pop
lret
pop
or
push
out
mov
inc
imul
mov
and
dec
lock
jg
xor
mov
sbb
mov
orb
movsb
pop
push
pusha
jnp
fcoml
sub
add
imul
sti
fwait
cmp
sub
pushf
dec
jle
rolb
mov
in
clc
mov
repnz
xor
xlat
pop
fcmovnb
test
jne
mov
push
ror
aas
ja
pop
sub
xchg
std
imul
imul
ret
idivb
pop
and
jecxz
popa
mov
cmp
loop
sbb
es
dec
mov
add
xchg
and
dec
push
push
dec
lds
mov
aad
pop
mov
sub
push
xor
sbb
stos
jg
mov
ja
sub
insb
push
push
sbb
adc
pop
ds
pushf
lret
sbb
push
jae
dec
jbe
mov
xchg
add
rol
mov
sub
inc
cs
or
add
leave
inc
dec
jl
int
jmp
test
ja
out
adc
inc
in
add
repnz
addr16
data16
popf
push
loope
ds
mov
push
sbb
shl
sbb
in
test
and
lds
pop
xor
js
aaa
dec
mov
inc
pop
stc
push
jecxz
mov
and
jbe
fwait
xchg
xchg
ds
xchg
mov
imul
sub
test
pop
xor
mov
je
mov
scas
mov
andb
and
and
sbb
pusha
rol
shll
xchg
xchg
fsubs
add
into
sbb
pop
stos
pop
leave
in
sahf
adc
nop
sbb
sub
mov
subps
xchg
fs
sahf
out
aam
in
sbb
jl
jo
movsl
cltd
mov
sbb
sub
lret
pop
pop
inc
test
outsb
push
and
dec
scas
call
mov
dec
imul
xor
dec
sbb
inc
inc
cmp
inc
cmc
shlb
cmp
mov
loope
imul
sub
xchg
push
jno
cmp
push
mov
cmc
ljmp
cld
ljmp
and
xchg
iret
push
xchg
loope
cmp
pop
jo
inc
repz
jl
jae
stos
and
jbe
xchg
dec
and
push
out
daa
imul
or
out
std
pop
jl
xchg
mov
add
adc
pop
cltd
and
aad
mov
and
addr16
sahf
and
fmull
jnp
mov
xor
mov
and
dec
lea
and
fsubrl
lea
jns
mov
lret
repnz
shll
or
inc
inc
lods
cli
inc
jb
insb
xchg
call
sbb
leave
dec
jle
mov
test
hlt
jno
add
popf
repnz
mov
lret
mov
cltd
into
xchg
mov
jge
fbld
inc
cmp
aad
jne
out
or
sbb
dec
cmpb
xchg
inc
fadds
pop
bound
dec
rcrl
int
negl
int
jns
mull
mov
iret
add
push
pop
dec
xchg
in
or
lcall
mov
jb
pop
enter
jbe
pop
adc
stc
push
fildll
imul
ja
jg
cmp
jl
lock
and
pop
xchg
aas
xchg
or
js
repnz
jb
out
pop
popf
push
sbb
mov
add
xchg
inc
repnz
out
push
dec
std
or
lea
jg
ds
in
mov
push
dec
mov
mov
or
xor
inc
test
xchg
in
imul
sbb
dec
outsl
mov
cli
das
mov
loop
and
push
mov
dec
add
adc
sbb
les
dec
xor
loopne
loopne
int3
sub
arpl
popf
and
pop
adc
out
and
js
xchg
int
cs
inc
rcll
inc
pop
call
adc
sub
inc
pushf
inc
std
inc
xor
test
push
loop
aaa
inc
pushf
mov
jno
insl
scas
aam
aam
mov
outsb
add
sti
push
scas
mov
das
sbb
je
inc
jno
cld
sbb
fiadds
push
sbb
mov
cltd
inc
inc
lahf
adc
addl
xchg
push
stos
pop
xor
inc
outsb
push
insb
xchg
add
mov
xchg
rcrl
jo
jg
push
or
mov
icebp
mov
in
loop
mov
test
inc
cmp
sbb
xchg
lea
mov
leave
push
nop
hlt
pop
mov
cmpsl
call
inc
or
jb
jge
push
es
data16
pushf
sub
or
dec
pop
mov
mov
xlat
sub
and
jl
leave
inc
frstor
mov
lock
jns
aam
lods
jl
sti
pop
inc
pop
shlb
sub
pop
pop
xor
sbb
enter
jle
repnz
loopne
xchg
xlat
lret
jae
cmp
clc
mov
mov
jmp
pop
scas
inc
inc
xor
gs
xlat
pop
inc
jae
je
aaa
cmp
xchg
shll
and
cmp
int
xor
lret
jmp
cwtl
mov
sbb
daa
cmp
pusha
inc
inc
jle
ret
and
dec
xchg
sub
dec
jbe
fisttps
adc
sub
inc
mov
inc
inc
aas
out
movsl
jl
adc
adc
pop
xor
cmp
fstpl
fcmovne
aas
jmp
inc
sub
sbb
jae
inc
jle
add
xor
pop
jge
fs
jl
add
icebp
inc
jp
leave
cmpsl
pop
shll
and
pop
inc
push
adc
push
into
aas
add
arpl
sub
cwtl
or
mov
ja
rorl
cmp
lds
jnp
cmc
mov
sbb
int
lahf
sub
les
mov
push
xchg
inc
out
mov
lret
movsl
push
mov
inc
sbb
aas
cmp
rorb
push
add
icebp
gs
outsl
inc
cmp
jnp
adc
dec
sbb
push
in
cli
jmp
xchg
das
push
sub
or
mov
rol
push
bnd
mov
xchg
mov
inc
mov
sub
dec
lods
fdivrp
lds
ret
rol
inc
iret
xor
hlt
xor
das
adc
cmpsl
push
inc
jne
pop
mov
pop
adc
sbb
outsb
pop
shrl
pop
dec
lods
out
mov
sbb
fldcw
pop
or
mov
inc
mov
xchg
adc
jecxz
imul
adcb
mov
enter
jmp
aad
lret
or
or
push
adc
mov
faddl
addr16
scas
stos
repz
add
xor
dec
lahf
sbb
arpl
mov
movsb
adc
pusha
nop
hlt
dec
es
imul
je
outsb
pop
js
cwtl
pop
xchg
mov
adc
xchg
and
loopne
shrl
xor
js
xor
sti
fidivrs
inc
xchg
cmpsb
add
and
jp
push
lea
loop
add
or
mov
push
add
ret
mov
add
iret
lock
mov
out
sahf
xchg
jno
jge
scas
frstor
outsb
out
xor
jbe
out
mov
call
adc
fcomip
sub
sahf
mov
jp
xlat
sbb
sub
repz
add
xchg
dec
xchg
clc
dec
es
jle
icebp
mov
je
loope
pop
pop
shlb
and
test
pop
inc
mov
jp
cwtl
stc
loop
xchg
out
sub
fnstcw
or
push
mov
int3
adc
pop
out
ficoms
fdivrs
mov
test
add
ret
push
mov
lret
popa
push
xor
shrl
insb
addr16
xchg
insb
or
xor
pushf
dec
rcll
test
dec
inc
xchg
pop
ja
xchg
and
fwait
jg
add
mov
sub
jecxz
add
mov
mov
lods
xchg
aam
adc
mov
jb
aad
push
xor
lahf
lret
mov
adc
add
inc
jmp
mov
mov
lea
test
sar
jle
mov
cmpsl
hlt
test
ret
fwait
nop
stos
sbb
push
lods
std
in
ss
inc
lds
mov
nop
dec
call
jmp
scas
inc
mov
arpl
ror
sti
mov
pavgb
push
mov
jl
rcr
sub
repz
inc
jge
cs
fstpt
in
adc
sub
sbb
sbb
mov
mov
cmp
je
in
adc
pusha
bound
idivl
pop
sbbb
js
in
cmc
addr16
add
and
inc
sub
dec
xchg
xor
call
jno
cmp
push
adc
mov
inc
ja
push
subl
test
sub
jge
inc
sarl
out
xchg
push
hlt
in
sbb
mov
cmp
push
movb
stc
jmp
popf
ss
imul
mov
loopne
inc
movsb
jecxz
fnstenv
xor
and
fcomps
leave
mov
and
add
imul
mov
adc
inc
mov
lods
mov
iret
cmp
push
std
ret
xchg
mov
adc
jae
nop
cmpsb
jo
xchg
push
clc
cltd
in
add
shlb
mov
aam
cli
pop
xor
pop
adc
aas
subb
ljmp
pusha
ja
cmpsl
mov
jl
out
loope
pop
push
inc
lcall
outsb
cmp
decb
dec
add
and
in
sbb
sub
pusha
sbb
adc
daa
xchg
into
sti
cmp
ror
aas
inc
xor
cmc
push
jno
pop
cmp
sbbb
xchg
xor
mov
test
mov
fwait
loop
movsl
bound
jle
testb
sbb
stos
mov
std
mov
insb
jecxz
adc
xor
fimuls
sbb
cmp
cmp
ret
imul
mov
movsb
or
push
sarb
addr16
mov
mov
inc
pop
jmp
sahf
add
mov
pop
or
fs
arpl
mov
sbb
jecxz
sti
or
mov
cmovbe
ja
mov
jge
mov
ret
ret
mov
push
int3
add
or
jns
cmp
xchg
aad
mov
inc
cmp
mov
bsr
push
lret
lds
xor
pop
jp
cmp
inc
mov
cmp
in
hlt
sub
jmp
ljmp
sub
gs
cmp
in
cmpsb
and
dec
rolb
jle
mov
movsl
jns
pushl
dec
fisttpl
fstpl
sub
int
pop
bound
div
mov
ss
popl
int3
test
and
push
jecxz
or
sub
lods
mov
mov
mov
lock
stos
push
movl
and
sub
jae
pop
out
notl
or
outsl
cpuid
pop
and
imul
insb
mov
adc
fcmovne
popf
jecxz
mov
in
xchg
cmp
js
sbbl
cmpsl
insl
orl
movl
test
add
add
and
inc
cld
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
xor
adc
addb
add
ss
out
rcrl
mov
int3
inc
in
das
sub
orl
xchg
push
sub
sub
jp
movl
ds
mov
test
cld
pop
cmpl
jp
and
clc
pusha
cs
adc
es
mov
mov
mov
inc
xchg
pop
mov
pop
out
loope
enter
std
push
mov
out
into
xchg
pop
push
leave
insb
mov
pop
lods
mov
rdpmc
xchg
hlt
xchg
dec
mov
mov
mov
test
in
add
add
js
jb
mov
or
lods
popl
cmp
push
adcb
sub
adc
andb
and
loope
xor
mov
sub
jno
cwtl
mov
scas
sarb
and
inc
stos
rcrb
push
repz
lods
lods
push
fmull
mov
add
sbb
das
ret
xchg
push
imul
fsubr
mov
sub
push
jns
xor
mov
fidivs
jle
rcr
jnp
sub
icebp
fwait
scas
adc
leave
adc
mov
push
ds
mov
fisubrl
or
mov
mov
bound
fisubs
fidivl
into
xchg
test
bound
adc
fcomps
mov
nop
sbb
sbb
mov
mov
add
mov
mov
das
xchg
enter
xor
mov
or
insl
or
out
mov
je
and
jne
jg
into
cmpsb
shlb
inc
xlat
xor
jne
jns
decl
fs
adc
hlt
lahf
push
insb
scas
push
pop
call
in
dec
inc
dec
test
xlat
xadd
jg
test
mov
pop
popa
insl
ljmp
push
xor
subl
lds
iret
push
mov
iret
xchg
test
push
lea
and
xchg
in
cwtl
jae
int3
ret
fildl
stc
scas
push
mov
cmp
rorl
adc
fdivs
jp
shlb
mov
and
push
cltd
ljmp
cld
daa
aaa
jnp
xchg
mov
sbb
jbe
sub
iret
pop
sub
rolb
mov
fbld
push
push
ds
clc
cmp
pop
ret
popf
insb
cmc
dec
lock
stos
outsl
inc
bound
mov
lcall
cmp
push
insb
cmp
push
shlb
jno
jne
fnstcw
dec
out
xor
fcmovnb
test
mov
push
loop
xchg
incb
shll
cmp
sbb
mov
xor
sbb
push
scas
inc
ljmp
aad
nop
push
push
xchg
gs
mov
mov
pop
and
cmp
sub
add
mov
pusha
mov
sub
jp
fnstenv
xlat
xchg
test
jecxz
dec
pop
ss
stos
lcall
insl
fildll
and
xor
fsubs
movsb
dec
imul
fists
jne
testl
vunpckhps
or
movsl
filds
jp
movb
dec
dec
xchg
nop
clc
je
adcl
xorb
mov
add
or
cwtl
jmp
in
outsl
aas
push
jmp
push
loop
ret
stc
out
aas
and
stos
ljmp
pop
pushf
pop
mov
add
and
cmc
cmpsb
adc
subl
lret
add
mov
imul
xor
dec
jno
arpl
dec
push
push
ljmp
jmp
bound
mov
and
sti
adc
lock
mov
pop
mov
jb
mov
int
popf
andl
inc
pop
mov
inc
xor
inc
cmc
aam
xlat
outsl
sub
add
xor
popf
out
bound
loopw
adc
and
adc
icebp
jp
pop
ret
mov
cltd
jne
cmp
neg
lock
stc
repz
adcb
xchg
mov
shrb
xor
sub
aad
adc
mov
repnz
push
cwtl
cmpsl
mov
dec
push
xor
push
out
mov
stos
push
mov
dec
adc
sbb
in
pop
pop
addr16
add
mov
aam
xlat
pop
pop
mov
aaa
lods
addr16
test
sbb
out
and
cmp
pop
icebp
cmpsl
mov
aaa
out
js
loope
jp
add
daa
mov
mov
fdivs
loope
pop
sbb
add
sub
into
xchg
fidivs
and
cmpsb
adc
setl
jge
cmp
clc
and
jb
jle
aad
mov
imul
out
and
cli
out
adc
addr16
pop
fidivrl
jmp
aam
rcrl
ss
cli
xor
push
ljmp
fdivl
add
or
lods
shll
xor
or
dec
dec
and
lock
in
mov
cmp
sub
in
xchg
leave
adc
call
pushl
jb
sbb
cmp
subb
inc
lahf
cmp
bound
pushf
out
movsb
push
push
daa
cmpsb
dec
cltd
loopne
in
fiadds
andl
sub
mov
imul
int3
adc
push
add
iret
lret
insb
clc
lahf
or
addr16
insb
dec
out
or
fisttps
cmpsb
rcrl
add
nop
sbb
mov
lods
hlt
call
push
mov
mov
mov
push
mov
sub
mov
pop
es
xchg
mov
or
stos
and
ds
ret
mov
mov
imul
jp
out
sbb
sbbl
and
lods
outsl
cmp
xor
lock
lods
mov
xor
lods
mov
popa
mov
shl
push
shll
adc
xchg
dec
mov
jb
jnp
inc
icebp
add
pop
xor
dec
mov
add
loope
cld
bound
arpl
leave
mov
andl
or
aas
hlt
out
enter
inc
pop
fimuls
xchg
stos
mov
pushl
clc
push
add
cwtl
pop
or
mov
loop
flds
cmc
dec
stc
clc
insl
pop
pop
loope
nop
in
sarl
pop
sti
les
push
sub
mov
repz
stc
xchg
scas
rolb
push
xor
fwait
mov
mov
jmp
dec
daa
mov
imul
push
mov
inc
insb
mov
push
and
aas
dec
cmp
jne
out
lds
lock
cmc
push
jb
aam
push
mov
les
or
inc
notl
fcoml
in
adc
icebp
lods
cmp
adc
imull
mov
add
test
pop
loopne
iret
dec
jne
test
fdivr
inc
in
adc
shlb
cli
mov
loope
cmp
mov
stc
pusha
push
jne
bnd
movsb
pop
and
jb
cltd
iret
mov
pop
sbb
mov
jge
dec
mov
das
out
sbb
cld
push
int
shrb
clc
leave
sti
aas
add
mov
pushf
adc
nop
mov
jns
jbe
fsubl
in
xchg
das
scas
xor
fcoms
outsb
pushf
pop
xchg
into
outsb
aaa
push
clc
in
mov
adc
data16
int3
dec
push
in
cld
and
test
pushf
mov
add
dec
pop
cmp
stc
mov
jge
inc
mov
ret
popf
dec
xor
sbb
mov
or
test
popf
mov
add
xchg
push
or
mov
imul
cmp
loope
fidivs
xor
sbb
lods
neg
lahf
loopne
xchg
push
aaa
jg
popa
cli
cwtl
imul
inc
shll
pop
mov
cmpsb
push
pop
cmp
nop
mov
mov
and
cmp
sti
jp
jo
mov
or
je
je
rorb
dec
or
imul
aas
mov
lods
int
aad
bound
loope
sti
and
imul
adc
into
pop
test
push
xchg
fcomip
out
sbb
mov
sub
jns,pn
mov
add
es
pop
mov
dec
add
loope
jp
scas
cmpsb
lcall
jbe
inc
out
mov
addl
cli
icebp
sub
cmp
xchg
in
movsl
addr16
std
leave
push
cmp
fsubr
mov
inc
inc
push
xor
hlt
mov
jno
call
adc
and
imul
sbb
or
pushf
xchg
jg
mov
stos
inc
mov
mov
inc
les
int3
sub
mov
mov
out
pusha
or
ds
pop
cli
lea
pop
dec
and
test
adcl
push
jns
xchg
imulb
or
jmp
jl
pop
popf
ret
fildll
cwtl
cmp
sbb
or
gs
ljmp
add
adc
cmp
movsl
pop
mov
dec
aam
xor
and
or
add
fbld
cmp
jnp
or
jo
inc
inc
dec
insb
loop,pn
pop
icebp
xchg
imul
lods
in
into
es
xor
stc
cli
sbb
int
popa
push
mov
outsl
jbe
and
out
iret
xor
popf
xchg
stos
ds
filds
and
insb
or
out
sub
in
fidivrs
das
out
inc
inc
pushf
popa
mov
sbb
mov
pop
scas
lods
and
nop
setns
into
mov
outsb
add
cmp
insl
insl
mov
mov
fiaddl
or
add
mov
pmaxsw
jae
aam
pusha
inc
dec
sub
pop
lds
xor
inc
daa
std
mov
xchg
hlt
loopne
xchg
adc
jnp
insb
repz
popf
movsl
stc
cwtl
fs
and
push
shll
cli
mov
test
push
sti
mov
add
pop
scas
or
add
dec
les
sbb
repz
iret
scas
arpl
sbb
loope
xor
orl
dec
popf
out
test
subl
push
xlat
fsubs
xor
cmpsb
pop
in
fcoms
test
xor
addr16
jns
xchg
movsb
jno
in
fsubrl
mov
and
sbb
cmp
imul
push
int3
mov
in
xchg
mov
adc
shl
xor
jl
add
sbb
out
mov
add
push
push
pop
push
sbb
mov
fcoms
loop
enter
ljmp
adc
les
rcrb
cmp
jb
iret
ret
cs
scas
cmp
inc
pop
cmpsb
xchg
mov
rcl
clc
sub
xchg
xor
sbb
mov
adc
inc
movsl
icebp
or
js
mov
jne
test
mov
rol
gs
in
inc
add
shll
out
mov
push
int3
and
shrl
adc
xchg
fiadds
sbb
xchg
xor
fwait
aad
ds
movsb
lds
sbb
inc
dec
push
mov
lds
ds
mov
jecxz
pop
inc
adc
mov
jle
mov
sbb
icebp
test
push
in
push
cs
jno
cltd
push
out
rorb
or
jmp
pop
mov
outsl
adc
sbb
fcomip
cmpsb
sarl
mov
mov
aam
or
mov
push
xor
out
and
scas
push
pop
loope
pop
jae
and
xchg
ficoml
xlat
fldz
add
and
mov
inc
cltd
sub
ds
inc
int3
and
imul
imul
and
add
loope
js
inc
mov
push
and
sbb
add
jnp
fistpll
sub
inc
lods
push
cmp
test
lret
shlb
mov
mov
repz
ss
push
pop
roll
fsubs
xor
mov
in
icebp
fists
fsubl
incl
test
imul
mov
in
cmp
add
inc
lahf
out
add
cli
cmpsb
je
mov
divb
andl
jae
push
insl
xchg
lahf
add
mov
jmp
jae
dec
aas
les
xchg
test
push
mov
or
bound
pop
test
sbbl
add
inc
pop
scas
sub
loop
adc
or
mov
cmpsb
xor
push
xchg
mov
dec
mov
mov
mov
pop
test
ret
pusha
mov
inc
hlt
fldl
cltd
jno
cmpsb
push
sbb
clc
push
and
ud1
and
xorl
lret
lcall
and
xchg
cmp
pop
mov
pop
xor
cs
cmp
xchg
cmp
cli
mov
ds
mov
add
xor
xchg
pop
xchg
mov
ret
cmp
int3
lcall
scas
adc
jmp
notb
xor
or
mov
icebp
aaa
lea
loopne
scas
add
adc
and
xorl
mov
jmp
mov
add
pop
add
cmp
pop
in
push
imul
fs
mov
fs
xchg
sbb
jmp
scas
dec
sbb
lods
outsb
pop
dec
test
mov
adc
dec
sti
lock
sbb
and
setge
jno
lods
pushf
scas
outsl
jecxz
pop
scas
outsl
sub
mov
pop
clc
sbb
imul
mov
adc
and
jo
sub
jmp
xchg
or
stos
adcl
jge
jp
push
lea
mov
insl
mov
xor
jbe
push
popf
outsb
sbb
and
lret
lea
fwait
loopne
mov
mov
fisubs
sub
movsb
cmc
jae
lea
mov
repz
adc
andl
cmp
lds
or
out
dec
push
lods
pusha
iret
aas
subl
push
jno
inc
push
mov
and
mov
int3
push
pop
fnstsw
mov
rcrl
mov
lahf
xor
notb
orl
clc
addl
cmc
xorb
push
adcb
rorl
scas
mov
ja
loop
ret
out
lea
mov
xor
mov
push
jecxz
mov
dec
dec
or
lods
and
insl
push
movsl
xorl
inc
dec
xor
repnz
ja
inc
inc
sbb
or
inc
ret
mov
push
pop
arpl
scas
icebp
push
out
ret
mov
lods
fisubrs
cltd
nop
stc
arpl
jg
or
add
or
jno
addr16
jae
loop
pmaddwd
mov
cltd
cmp
rolb
je
mov
mov
imul
inc
aam
fdivrs
push
inc
sub
test
mov
xchg
mov
scas
rorb
push
mov
outsl
jecxz
pop
mov
and
lock
mov
lahf
xchg
mov
jns
inc
fdivrs
lret
mov
pushf
mov
in
and
test
push
nop
divl
leave
or
dec
fldcw
mov
nop
jbe
jmp
mov
mov
add
cmc
fucomip
mov
data16
pop
pushf
inc
add
mov
xchg
loopne
mov
and
jae
stc
pop
pusha
mov
call
dec
mov
insl
cwtl
fs
xor
mov
jae
cmp
ss
lods
or
mov
add
push
jns
ljmp
mov
repz
test
sub
test
inc
test
dec
push
xor
dec
insb
inc
bound
mov
loopne
cli
dec
dec
and
mov
lcall
add
iret
push
inc
inc
bound
sub
int
sbb
or
stc
test
mov
out
push
insl
jmp
or
or
cmp
jnp
xchg
das
sahf
mov
jmp
cmpsl
sbb
outsl
cltd
jne
xchg
push
dec
es
fwait
or
jmp
mov
inc
cmpsb
lret
adc
stos
test
mov
dec
cmp
fcmovb
jle
test
mov
addb
cmovo
xor
out
mov
gs
xlat
out
lret
mov
push
cmp
add
mov
lret
stc
popf
imul
jb
cmp
push
lods
jp
dec
mov
inc
fdiv
notb
mov
js
add
lea
hlt
daa
ret
mov
int
cmp
mov
push
mov
cmpsb
inc
clc
ret
and
jne
jp
out
orl
je
cmp
adc
xchg
xchg
test
idivb
push
adc
dec
in
sbb
gs
loope
arpl
fwait
imul
lock
or
rcrl
push
icebp
test
pop
sahf
sbb
out
push
add
pop
stos
mov
das
fdivrl
push
imul
cmp
inc
jmp
jb
dec
jbe
fwait
pop
push
call
adc
dec
ljmp
rorl
ja
jl
in
icebp
int3
enter
jl
popf
arpl
add
addr16
ficomps
cmp
dec
pop
test
lds
pcmpgtw
adc
push
xor
sub
test
cmp
aas
out
xlat
loop
jbe
cmp
mov
add
mov
push
pop
inc
pop
cmp
jne
movsl
pop
stos
pop
aas
mov
test
or
test
je
and
in
incb
adc
loopne
jmp
mov
ja
fwait
pop
mov
jle
aas
hlt
aam
sar
jb
insb
mov
imul
movsl
adcb
sub
jo
in
leave
data16
mov
mov
push
adc
rcrl
cmp
daa
add
mov
out
clc
jge
rcrb
leave
xor
mov
mov
popf
cmp
sbb
and
pop
nop
int3
shrb
push
lods
jo
sahf
aad
fidivrl
aaa
adc
int
and
jns
xchg
arpl
sahf
sbb
ja
test
sbb
je
stc
cs
outsb
sbb
out
pop
push
rclb
jnp
inc
decb
mov
ss
cld
add
and
or
into
testb
int
inc
sbb
dec
out
movsb
inc
out
outsb
and
fwait
scas
mov
in
pop
int3
in
mov
shrb
mov
faddl
pop
daa
in
hlt
lcall
imul
notl
stc
cwtl
sbb
popa
and
arpl
or
fwait
jp
inc
dec
je
sub
daa
dec
aas
adc
movsl
dec
xchg
lods
jl
stos
rcrb
cmpsb
jno
cld
jbe
js
sti
jae
inc
inc
xor
adc
xor
data16
xor
inc
dec
jg
arpl
and
popf
fstpt
fildl
lret
xor
movsb
mov
movsb
or
daa
es
inc
popf
shl
and
jne
jnp
js
scas
stos
in
mov
inc
addb
cmc
cld
sub
les
inc
rcr
call
xor
movsl
dec
sub
notb
icebp
pop
in
mov
jp
icebp
cmpb
mov
mov
xchg
xlat
das
stos
cmc
mov
imul
jne
jge
sub
cmp
pminub
pop
and
ja
mov
pushf
pop
sbb
adc
inc
jp
aad
in
iret
enter
cmp
adc
xor
test
imul
sbb
adc
cld
stos
add
dec
out
loopne
ret
jg
lods
daa
roll
xor
lods
cmp
sbb
addr16
dec
aas
pop
inc
ljmp
mov
sub
pop
mov
add
push
inc
mov
dec
pop
sub
pop
out
and
or
push
je
jb
arpl
or
inc
daa
lea
lods
pop
xchg
jg
stos
jo
mov
cmp
adc
shlb
movsl
mov
loopne
push
stos
jbe
mov
fwait
lret
inc
imul
mov
daa
data16
cmp
dec
xor
xchg
fsubl
mov
test
daa
or
mov
xlat
mov
shrb
incl
xchg
xor
mov
repnz
or
imul
shll
setg
lea
add
stc
mov
mov
sahf
shrb
pop
pusha
in
bound
jo
mov
push
enter
push
or
mov
test
push
sbb
cs
rclb
inc
inc
adc
lret
xor
xchg
xor
popa
push
push
adc
and
lds
lahf
rolb
and
xchg
subl
xchg
and
mov
loop
mov
xor
sbb
out
test
mov
mov
push
scas
cmp
xlat
and
inc
sbb
adc
shr
pushf
scas
dec
cs
adc
fnstenv
xchg
cmpsl
sti
lock
push
fs
xor
jo
lret
ljmp
gs
push
or
pop
cmp
test
push
sbb
cmp
xor
push
xor
or
mov
mov
xor
pop
xchg
and
xchg
cmp
inc
dec
stc
and
rorb
mov
push
in
dec
adc
mov
fisttpll
add
clc
vmwrite
ja
xchg
mov
aaa
jecxz
ds
jle
push
mov
mov
push
and
in
mov
jmp
arpl
out
xchg
popf
and
jle
movsl
lods
iret
addb
mov
sbb
mov
or
pop
or
pop
xchg
mov
dec
adc
fbld
mov
push
je
call
inc
vmovaps
in
push
cmp
dec
adc
lock
push
test
mov
popa
cmp
pop
and
mov
cmp
inc
or
xchg
lcall
aad
sub
fcomps
cmp
rcr
in
adc
rol
lods
and
dec
mov
fdivp
loop
scas
push
repz
mov
sbbl
into
js
sahf
outsb
cmovb
ja
loop
ja
xchg
rcrb
sub
imul
imul
dec
clc
lret
loopne
mov
sbb
das
pop
jns
jb
add
outsb
jmp
fnstcw
adc
push
dec
cs
xchg
dec
push
cmp
mov
pop
pop
push
sub
insb
push
add
aaa
std
cmc
in
stc
or
dec
mov
test
int3
cmp
cmc
fisubs
fwait
test
icebp
loop
test
and
daa
in
loop
or
sbb
sub
and
xchg
lods
cltd
or
cs
and
out
sub
cmpsb
sub
aam
js
push
inc
sbb
xchg
arpl
outsl
stos
mov
pop
add
jne
hlt
fwait
rcrb
out
movsb
jle
scas
add
repnz
sbb
cltd
inc
or
jecxz
sub
sub
xchg
pop
push
lret
dec
add
mov
loop
pop
and
cmp
inc
rclb
jb
jb
aam
insb
iret
mov
jnp
dec
push
ror
leave
das
cmpsl
les
and
lea
push
or
call
mov
or
xchg
mov
mov
and
mov
mov
shll
pop
jno
js
xor
imul
push
adc
negb
lods
cmp
nop
xchg
sahf
mov
jnp
add
loope
mov
in
scas
xor
push
push
push
iret
in
fimuls
xor
pop
mov
push
sbb
cs
lock
sbb
push
test
dec
pop
cmp
mov
lea
mov
arpl
sbb
push
aas
xlat
xor
jno
xchg
ja
jb
cmp
test
pusha
icebp
movsb
mov
sbb
lods
out
sub
jae
cmp
lahf
dec
sub
or
repnz
mov
push
dec
pop
pop
jae
or
sbb
mov
mov
inc
ds
xor
cltd
dec
jno
cmp
loop
lea
mov
and
insb
sbbb
nop
mov
ret
cmp
mov
and
mov
test
mov
push
test
and
jb
int
shrl
sbb
sysenter
xchg
subl
mov
inc
xlat
cmp
push
push
aas
test
cmpsl
mov
push
cmp
add
mov
unpckhps
js
jbe
or
mov
into
xchg
mov
ss
pop
loope
and
or
adc
cmp
addr16
fwait
dec
push
or
scas
aam
pusha
stos
addr16
dec
in
jg
adc
flds
aam
sbb
stc
in
push
push
jmp
insl
inc
sub
sbb
shlb
test
repz
xchg
push
adc
mov
mov
and
fwait
push
daa
fisubrs
cmp
mov
pop
add
fisubrl
scas
pushf
call
shl
adc
xor
std
inc
addl
lds
mov
pop
xor
add
testl
or
mov
lods
xor
sti
jecxz
push
jne
sbb
cmp
xor
cltd
or
stos
adc
insb
lret
insl
rclb
cmp
nop
shl
test
mov
adc
mov
arpl
xor
add
lock
mov
mov
xchg
xor
mov
jae
jl
push
cmp
stos
leave
lret
mov
pop
dec
xor
cmp
aam
dec
sub
sub
dec
sbb
fucomi
pop
and
cmc
bound
push
movsb
push
in
sbbl
jp
jb
push
add
ss
push
sbb
sub
jl
cmp
mov
jecxz
stos
iret
in
xchg
pop
fsubl
xor
dec
mov
pusha
in
cmpl
out
int
pop
mov
adc
mov
rolb
inc
in
jnp
popa
sbb
or
jmp
outsl
icebp
nop
fmuls
int
test
add
cmp
dec
mov
jns
clc
jb
js
and
ja
mov
xor
pop
xchg
cmp
cmp
add
jle
or
das
and
cli
dec
mov
jge
lock
fcomp
add
lret
mov
push
lea
loopne
cld
mov
rcrb
lcall
stos
or
xor
gs
jo
cmp
inc
adc
xchg
push
test
pusha
aas
adc
daa
fcomps
dec
in
scas
andl
dec
insb
dec
ret
ror
je
lret
gs
adc
sub
test
adc
pop
sarl
inc
lret
mov
faddl
std
les
jae
push
cld
push
ficompl
sbb
xchg
inc
pop
je
xor
mov
icebp
mov
add
mov
andl
xor
sti
fdivs
hlt
testl
mov
dec
push
loopne
sbb
adc
inc
testb
or
loopne
push
mov
mov
hlt
inc
fs
xor
imul
lds
into
add
fdivl
movsl
dec
mov
es
pop
or
insb
cltd
out
sbb
sahf
pop
mulb
invd
notb
in
insb
xchg
lods
gs
pop
aaa
push
daa
xchg
ljmp
jae
dec
sbb
sbb
js
aaa
cmc
cli
pop
push
imul
rorb
clc
scas
push
lcallw
pushf
mov
xchg
inc
lahf
jns
add
mulps
add
dec
xor
push
push
push
mov
jmp
jmp
add
sbb
div
pop
sub
xorb
mov
or
call
dec
mov
mov
add
jae
mov
mov
adc
adc
jb
cmp
loop
add
dec
popf
add
mov
adc
cmp
cmp
mov
in
jg
add
sarl
je
and
cmp
fsubr
pop
nop
in
enter
lock
aam
leave
mov
imul
mov
insb
mov
push
fcompp
gs
xchg
inc
adc
leave
fsubrl
testl
push
push
cld
call
loop
xchg
sbb
mov
dec
mov
adc
movsl
fnsave
pop
lods
lock
push
cmp
ficoml
clc
add
jle
xor
sub
dec
add
sbb
mov
adc
out
push
xor
lret
mov
mov
jl
mov
adc
and
ljmp
sub
pop
dec
xor
sub
adc
leave
loop
push
sbb
enter
pop
inc
pop
push
pop
pop
xchg
sub
add
inc
aaa
and
sarb
es
cli
push
add
ja
dec
repz
arpl
add
movaps
into
out
mov
inc
insb
sbb
mov
call
push
sahf
jg
fstpl
cmc
pop
cmpsl
pop
stos
pusha
jp
dec
test
cmovno
dec
inc
cld
adc
insl
mov
bnd
pushf
out
aam
adc
push
ljmp
into
bound
dec
in
sbb
dec
xchg
add
dec
dec
iret
fdivrl
adc
hlt
insb
mov
fs
xor
call
mov
lds
es
sub
lock
mov
data16
stos
daa
idivl
mov
popf
xor
rclb
rol
inc
daa
pop
jp
shlb
into
fldcw
cs
popa
mov
and
in
gs
adcl
mov
subb
ss
jp
or
xchg
dec
lock
test
mov
jae
mov
jb
daa
or
out
adcb
and
mov
aam
jnp
xchg
scas
cli
cmp
mov
bound
or
xor
mov
and
xchg
add
jns
je
mov
mov
dec
mov
add
popa
and
gs
mov
mov
cld
and
mov
scas
jg
add
or
inc
xor
jne
fsub
push
add
xchg
and
addr16
mov
cld
test
das
inc
fadd
test
cli
sahf
in
movsb
sub
xchg
push
fldt
push
push
push
sbb
pop
in
mov
adc
call
cmpsl
movsl
icebp
call
dec
stos
or
iret
push
lods
sub
jno
clc
xor
jbe
notl
outsl
dec
mov
loopne
cwtl
repnz
sahf
adc
pop
and
cmp
mov
pop
movsb
in
mov
push
enter
int
aaa
inc
lcall
adc
mov
inc
jae
lcall
stos
sbb
andl
cmp
mov
lret
leave
iret
rclb
fs
pop
push
xchg
lret
inc
cmp
flds
into
add
sbb
repz
inc
call
mov
cli
adc
sub
lds
dec
mov
pop
movsb
sub
cmpsl
mov
aam
into
sahf
aad
inc
jne,pt
aad
mov
xor
jg
aam
sub
xchg
aam
jmp
xchg
mov
cmp
sbb
adc
push
mov
cmp
sbb
sub
sbb
insb
fadd
mov
sbb
clc
fisttps
or
int3
inc
and
loope
rorl
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
pushf
enter
addl
addl
jge
add
out
or
in
out
and
and
add
push
sbb
add
inc
adc
icebp
and
dec
inc
pop
cmp
mov
in
inc
scas
loop
fwait
xchg
lahf
xchg
scas
pop
lock
or
jne
jge
mov
and
mov
lahf
mov
data16
inc
ret
push
mov
ret
inc
outsb
pop
and
jg
out
sbb
mov
dec
sbb
push
inc
jg
aam
iret
movsb
push
jo
or
pop
push
orl
daa
lcall
cs
and
xor
or
cmp
mov
fcmovnbe
push
arpl
dec
js
or
or
xchg
pop
or
paddusw
xor
xor
test
mov
push
push
sub
ret
xchg
mov
cmp
popa
sub
stos
imul
jo
fcompl
sarb
cmp
stc
lret
imul
push
jg
js
outsb
or
sbb
insb
into
loopne
cld
cltd
pop
inc
pop
add
xor
ds
insb
jge
dec
add
mov
lods
cmp
inc
icebp
mov
inc
movsl
nop
test
mov
imul
out
shrl
rolb
cmp
mov
jb
push
jnp
cmp
out
or
xor
cs
decb
ds
dec
mov
mov
pop
movsb
rorb
hlt
arpl
xchg
popa
adc
repz
xchg
cltd
or
cltd
push
cmc
imul
in
dec
sbb
mov
xchg
bound
mov
add
cmp
mov
adc
jns
jmp
push
nop
sbb
mov
pushfw
js
jbe
rorl
push
push
aas
and
lret
inc
and
stos
or
jg
mov
out
daa
es
cwtl
mov
adc
mov
aam
jg
dec
sub
cmpsl
enter
sti
rorb
xor
adc
mov
xor
lock
cwtl
mov
adc
and
sbb
add
and
into
inc
rorl
or
cmpsb
addb
pop
loope
cmc
je
push
imul
andl
clc
pushl
sub
mov
mov
inc
notb
lods
fld
out
leave
inc
imul
js
cmp
fcompl
adc
leave
testl
mov
int3
outsb
popf
push
mov
je
rcl
js
inc
mov
sub
fimuls
fstps
sahf
insl
cmpsl
popa
lret
mov
pop
xor
jns
mov
jle
imul
fistpll
dec
aaa
mov
jecxz
mov
fstpl
pop
scas
fsub
cmc
in
in
mov
je
in
das
mov
int
cmp
mov
inc
push
lea
xchg
pop
stc
test
mov
mov
sti
lret
cli
cmp
jae
fistl
add
imul
pop
sub
leave
or
in
in
dec
fisubrs
mov
jp
scas
jns
je
cmp
mov
push
shll
dec
jle
cmpsl
mov
imul
lcall
mov
addr16
inc
popfw
add
arpl
xchg
dec
xor
aam
pop
in
add
xor
cmp
test
stos
xchg
cmp
out
ffreep
mov
dec
decb
push
jmp
cmp
jecxz
daa
in
push
cmpsb
pop
sti
mov
adc
sbb
cwtl
inc
pop
cmc
add
sbb
pop
es
and
pop
push
shrl
and
bound
lcall
stos
push
xor
or
pushf
adc
mov
sub
leave
movntq
mov
push
xchg
mov
mov
leave
cmp
jnp
or
aad
je
ret
inc
dec
lea
call
icebp
leave
adc
mov
pop
mov
pop
leave
mov
cld
popf
push
lahf
iret
push
inc
sub
je
sbb
ljmp
scas
mov
jo
add
adc
addl
xchg
jg
push
mov
outsl
out
push
sub
rolb
dec
rol
outsb
mov
shrl
dec
add
sbbl
push
adc
xor
jge
loop
adc
loop
cmp
enter
mov
in
not
lock
test
and
pop
repnz
push
jmp
mov
cld
pusha
mov
stc
cmp
pop
push
fwait
xchg
pushf
or
jno
clc
add
sbb
and
mov
adc
xor
push
adc
movsl
push
pop
mov
xor
cmp
lods
ffreep
xlat
or
push
jl
aaa
or
and
out
bound
xlat
icebp
fs
pop
repnz
inc
inc
je
fs
loopne
sarl
cmp
sbb
sbb
push
xchg
sub
aad
sub
outsb
add
or
lea
ss
or
mov
jl
add
mov
and
lcall
sub
mov
ljmp
or
mov
sbb
jg
jmp
jmp
icebp
push
sti
lock
push
and
outsb
push
aaa
cmp
and
rcrb
mov
sti
in
jbe
cmp
jecxz
in
mov
dec
jle
popf
adc
rorl
cmp
and
push
mov
popa
or
xor
inc
rclb
mov
pushf
in
inc
clc
cmpsl
mov
pop
pop
in
push
jno
push
arpl
pop
inc
pop
sbb
dec
and
sbb
cltd
pop
mov
xor
dec
movsb
int3
or
mov
xchg
inc
shll
in
in
inc
or
jg
jmp
jmp
hlt
insl
push
dec
pop
mov
addl
or
jno
sahf
movsbl
clc
sub
lcall
sub
lea
sub
inc
arpl
mov
out
rcrl
mov
ljmp
mov
xchg
insb
jne
cmp
pop
adc
sub
adc
jmp
and
mov
mov
in
pop
pop
rol
adc
iret
mov
push
mov
stos
xor
pop
jne
mov
les
mov
push
scas
adc
sti
push
pop
mov
in
jg
popa
sub
mov
cmp
test
dec
in
xchg
sub
jnp
mov
xor
sarb
sti
faddl
ret
outsb
shlb
cmc
cmp
gs
cli
or
xor
hlt
xchg
or
fidivs
or
mov
dec
in
jns
cwtl
not
push
xchg
sti
push
out
xchg
leave
xor
rclb
xchg
cmp
xchg
xor
mov
mov
ja
mov
lret
rcrb
cmp
push
scas
inc
inc
mov
imul
pop
pop
xchg
addl
nop
std
bound
push
jmp
scas
lock
sti
or
daa
push
loop
inc
or
cmp
jno
xchg
es
rcrb
mov
xor
push
dec
stc
cs
jge
mov
and
loopne
sbb
add
jl
outsb
ljmp
hlt
data16
stc
sti
lahf
js
aad
rcr
sar
fisttpll
sbb
xor
mov
xor
mov
jl
ljmp
dec
add
cmp
test
repz
sbb
jb
jb
scas
cltd
aam
xorl
mov
mov
mov
mov
jl
xor
cmp
pop
push
roll
cwtl
fstpt
mov
scas
test
test
xlat
cmp
sahf
sub
lock
inc
mov
jb
mov
les
fwait
clc
sbb
sbb
or
aas
je
icebp
scas
faddl
mov
mov
nop
and
popa
insb
mov
sbb
in
movsb
mov
pop
mov
jnp
testl
jno
xchg
movsl
fstl
cmp
dec
test
pushf
popa
dec
js
inc
cmp
sbb
stos
fildll
and
xchg
cmpsb
mov
loope
fistpl
push
in
es
cmp
xorb
push
ss
xchg
dec
out
jg
xchg
popa
mov
test
inc
inc
scas
popf
movsl
dec
and
int
cld
movsb
adc
mov
aam
ds
imul
aaa
jne
mov
and
add
push
out
fmuls
jg
cmp
or
call
mov
cwtl
push
pop
fidivl
incb
fistpll
mov
pop
pop
in
jle
jbe
sub
xchg
imul
ss
mov
not
sbb
or
push
or
push
scas
paddd
mov
cmp
jnp
decb
mov
sysret
sbb
pop
fwait
sbb
push
pop
es
fdivrl
icebp
jne
test
outsb
xchg
lahf
xlat
cmp
cltd
imul
inc
daa
xor
pusha
push
ss
or
imul
push
out
movsl
icebp
fwait
cltd
add
int
repnz
mov
sub
clc
lret
sbb
lea
adc
sbb
sbb
fisubrl
fnstcw
adc
adc
loop
adc
hlt
and
ss
insb
aaa
push
cmp
in
sub
aad
mov
lcall
ja
or
cmpsb
ret
dec
aas
ljmp
ljmp
rcl
pop
jp
fisttps
clc
sbb
xchg
mov
sahf
lahf
inc
scas
jg
jp
lret
push
sub
test
dec
dec
fnstcw
mov
popa
rcrl
sbb
in
push
cmp
mov
ja
jb
fwait
adc
icebp
inc
jne
fmull
hlt
shll
int
or
push
testl
adc
xchg
shl
mov
scas
sub
dec
subb
arpl
mov
aas
mov
xor
call
mov
insb
xchg
fwait
das
mov
clc
pop
je
imul
pop
fdivl
ss
mov
sub
movsl
mov
outsl
xor
adc
ss
pop
and
push
mov
sub
sahf
inc
lods
fwait
aam
lods
mov
jns
aaa
mov
test
sbb
mov
push
int3
je
cmp
int
movb
lods
insl
repnz
cmp
cmpsl
add
roll
and
add
pop
movl
mov
mov
jo
jno
mov
jbe
cli
loop
int3
icebp
cltd
js
adc
mov
test
clc
pop
or
clc
inc
mov
pop
divb
xchg
stos
inc
inc
jp
mov
push
out
or
xchg
imul
fnstenv
bound
loopne
mov
mov
popf
lcall
jp
lret
shl
lcall
lret
jle
sbb
cmp
sbb
insb
rol
cmc
jp
mov
fwait
add
in
rcrl
mov
adc
push
sub
in
and
leave
repz
scas
outsb
jne
rorb
inc
out
fldenv
mov
push
adc
push
and
popa
lods
out
loope
or
arpl
fistpl
imull
sub
jecxz
aad
scas
lods
sarl
pop
push
ljmp
and
in
iret
mov
xchg
xchg
jle
xchg
loop
outsl
aad
sub
ja
dec
push
js
fstpt
stos
xchg
cli
in
ret
mov
mov
jno
lret
cli
movl
add
xchg
or
int3
loop
stos
inc
ljmp
fmull
popa
mov
gs
jp
adc
lods
rcrl
shl
bound
jb
repz
xor
sub
cmpsb
hlt
fld
int
sahf
push
dec
inc
test
sub
sbb
xchg
ljmp
inc
fnstsw
pop
outsl
dec
insl
mov
outsl
pop
imul
stos
mov
add
cmp
cld
mov
jg
fidivrs
and
sub
adc
add
dec
fiadds
imulb
adc
lds
pop
cmc
or
lret
shrb
rcll
fldenv
daa
ljmp
inc
mov
into
sahf
adc
inc
fistl
xchg
dec
repnz
jb
test
xchg
mov
js
mov
shrl
push
scas
sub
push
and
andb
jnp
dec
cmp
movb
push
mov
scas
inc
fdivrs
mov
add
sub
inc
loope
add
xor
pushw
cmp
fwait
bound
add
addl
cld
cmp
inc
mul
cmpsl
or
add
ss
xor
lock
adc
jb
inc
jb
sub
lret
xchg
jns
or
mov
pop
rcrl
fcompl
push
mov
xor
dec
cmpsl
inc
pop
dec
push
mov
mov
in
imul
fldl
cmp
xchg
sbb
dec
lock
cmp
mov
lods
aad
fdivs
and
xchg
xor
inc
dec
add
and
cmp
dec
popa
inc
mov
rcll
sbbb
mov
cltd
orl
cmc
aam
jo
lock
sub
xchg
pop
jbe
stos
divb
call
pop
mov
cmp
xchg
je
mov
test
lret
mov
cltd
cltd
lea
mov
adc
sbbb
or
jbe
inc
mov
mov
and
dec
inc
adc
adc
imul
xor
jecxz
pop
adc
sahf
lahf
cmp
in
xchg
popf
cwtl
dec
xchg
dec
addr16
cli
jmp
jnp
rorl
cmpsb
jne
jae
dec
sub
jecxz
adc
popf
daa
fidivl
rol
inc
push
add
pop
xchg
bound
dec
test
pop
xchg
stos
mov
mov
and
push
inc
sti
jecxz
in
mov
xchg
pop
adc
loop
loopne
imul
sub
inc
cmp
cmp
pop
dec
mov
pusha
data16
jg
call
jmp
adc
std
lods
sbb
icebp
mov
dec
ljmp
ds
out
inc
add
clc
adc
js
adc
fldt
in
adcl
repnz
imul
hlt
addr16
lret
xchg
test
js
fwait
cmp
ljmp
pop
ljmp
add
lods
loope
cld
jo
pop
push
dec
clc
aaa
inc
ret
jno
nop
push
out
push
mov
leave
popf
mov
sahf
pop
dec
xor
mov
loop
mov
xor
pop
sbb
jae
mov
ljmp
pop
dec
pop
enter
movsl
cwtl
mov
or
and
ret
cmp
pop
cwtl
les
jae
imul
add
xor
add
push
test
inc
add
stos
inc
cmpsl
jp
jbe
shlb
aas
in
dec
ret
adc
push
push
inc
aam
lea
aam
pop
sahf
arpl
test
lock
adc
xor
test
fstpt
inc
xor
sbb
mov
inc
popf
mov
sub
scas
mov
data16
mov
int3
push
fwait
add
lahf
out
inc
jmp
xor
push
sub
jne
dec
lods
jne
sbb
inc
out
clc
lods
mov
push
roll
xor
mov
pop
xor
sub
jne
jg
mov
fadd
adc
inc
and
outsl
xlat
mov
in
sub
negb
lods
das
mov
xor
xchg
lea
fisubl
cli
or
mov
arpl
sbb
adc
inc
jne
nop
xlat
rol
mov
pop
fwait
std
ret
mov
cltd
repnz
aaa
shlb
icebp
icebp
out
shll
out
lahf
add
js
pop
fcomp
xchg
loop
mov
xchg
out
mov
jne
or
xchg
mov
pop
push
imul
push
push
jne
lret
push
sbb
cs
cmpsb
pusha
sbb
stc
imul
sub
js
sbb
xchg
xchg
mov
loop
jp
jnp
imul
aas
mov
jl
jae
rcl
mov
adc
pop
imul
mov
sarb
and
or
mov
mov
fildl
sbb
out
ffree
aam
pop
outsb
std
mov
push
cs
das
icebp
xchg
and
je
movsl
imul
and
jno
pop
and
xor
dec
mov
add
inc
ljmp
loopne
repnz
xor
inc
je
xor
xchg
jmp
mov
push
rolb
and
sub
push
mov
dec
pop
lcall
dec
mov
pop
les
ja
mov
mov
dec
xchg
loope
lea
notb
jae
cmpb
scas
pop
cmc
call
mov
jl
jmp
pop
sub
add
jno
pop
je
mov
rcl
xchg
cmp
sub
pop
data16
loope
mov
push
push
cmp
int3
sub
sub
cmp
jbe
imul
cmp
lret
sbb
jno
in
dec
js
push
jmp
sahf
les
sub
sub
xchg
nop
push
or
mov
ljmp
dec
and
inc
add
and
adc
aaa
jl
sub
xchg
int
xor
xorb
pop
mov
mov
nop
es
jle
cmp
dec
or
fimull
pushf
sub
cmp
xor
in
mov
jle
push
call
jns
lcall
mov
mov
mov
and
pop
or
adc
pushf
pop
fdivrs
push
dec
jle
lahf
xchg
jbe
xor
mov
mov
popa
ja
call
or
pusha
sahf
mov
cs
xor
jnp
outsl
sbb
clc
fs
test
fidivrl
adc
pop
add
ss
frstpm(287
out
clc
test
mov
lds
sti
or
jns
and
in
in
aad
push
dec
testb
test
push
and
jmp
cwtl
add
call
mov
hlt
ljmp
dec
cmpsl
push
adc
adc
cmp
or
hlt
lret
fnstcw
je
fcoml
loope
jne
in
or
daa
pop
xchg
lea
aad
add
dec
inc
orl
rcr
loope
dec
mov
addr16
out
pop
push
repz
cmp
cmp
in
adc
lret
lock
gs
add
repnz
xor
sbb
out
pop
cmp
sbb
daa
lea
insl
cmpsb
dec
sbb
imul
roll
xchg
dec
jecxz
rcr
inc
push
ret
sahf
pminub
stos
mov
mov
test
cmc
rcrb
dec
mov
rcll
push
jle
sbb
les
lods
jns
or
loopne
and
add
sub
shl
mov
mov
std
and
cmpsl
and
aas
xlat
sti
rcl
rorb
cmp
jne
dec
jmp
sub
ds
fimuls
rclb
xchg
scas
jmp
mov
xchg
sbb
stos
pop
sti
xchg
sbb
ss
jp
insl
add
pop
roll
subl
lods
and
mov
mov
mov
pop
scas
aaa
push
test
adc
jns
push
mov
mov
int3
dec
sub
in
aas
and
es
jbe
push
mov
lret
push
aam
lcall
daa
jno
insl
sub
jae
js
out
out
std
mov
adc
mov
cs
or
cmp
scas
nop
insb
das
je
test
pop
int3
push
pushf
or
mov
push
push
lahf
cmp
fwait
inc
imul
test
int3
mov
pop
jo
into
lret
fs
add
and
shl
jbe
daa
dec
mov
lret
add
test
push
mov
hlt
mov
arpl
iret
add
mov
pusha
jb
sbb
movsl
sbb
xchg
stos
push
jl
push
scas
icebp
sub
push
clc
into
mov
sbb
shll
movsl
arpl
xchg
cmp
pusha
lahf
ret
jg
lds
push
jle
lock
jecxz
scas
stos
fcmovnb
adc
rcrb
or
jecxz
js
pop
mov
dec
lods
lods
jmp
push
outsb
cmp
test
lahf
inc
mov
push
dec
nop
movl
dec
xchg
lea
leave
ljmp
cld
pop
pusha
cltd
gs
mov
or
lods
lds
imul
loop
mov
add
xchg
mov
cmp
add
inc
ss
imul
jmp
jne
push
adc
pop
imul
imul
xchg
or
enter
jmp
xchg
xor
mov
fmuls
xchg
dec
call
xchg
push
aad
rorb
int
aaa
jo
into
pop
dec
pop
ds
push
mov
pusha
add
insl
adc
cmp
sbb
jmp
push
mov
dec
sbb
mov
cwtl
ljmp
jl
push
cmp
adc
lret
inc
notl
flds
fisttpl
push
add
cmp
mov
and
jnp
jmp
dec
inc
and
cmp
push
cli
repnz
sbb
rcr
adc
std
and
dec
in
add
jmp
loop
add
mov
inc
mov
jno
xchg
lds
mov
sbb
and
add
aad
shll
rolb
imul
inc
cmp
or
fwait
jp
xor
mov
aaa
out
outsb
xchg
fs
fists
aaa
pop
sbb
mov
int
xchg
in
rcrl
lds
jmp
cmp
js
shrl
and
and
dec
rcrb
add
add
cmp
mov
and
dec
sbb
mov
testl
outsb
out
cli
mov
sbb
adc
pop
push
dec
mov
call
jmp
jo
shlb
mov
push
addr16
xchg
push
mov
inc
mov
shr
mov
cmpb
dec
mov
sahf
push
js
xchg
aad
sub
lock
cs
into
out
dec
scas
jge
ds
movsl
push
lds
addb
adc
in
popf
dec
pop
sar
fiaddl
mov
mov
lock
push
mov
mov
jmp
subl
popa
out
adc
inc
adc
aam
sbb
xor
inc
push
add
or
repz
shll
mov
push
insw
inc
sub
and
xor
pop
mov
std
pop
cmp
dec
mov
or
pavgw
mov
stos
sbb
jmp
xlat
cmpsl
mov
xchg
cwtl
cld
mov
pop
push
std
daa
xchg
lcall
inc
rcll
sarb
pusha
push
nop
daa
add
cmp
lods
das
jb
mov
es
jb
cmp
xlat
clc
pop
inc
clc
push
add
jbe
leave
testl
push
and
sbb
adc
sbb
stc
cld
cs
stc
shlb
cmp
ss
int3
cltd
and
jmp
pushf
mov
jns
ds
es
les
popa
sbb
jp
cmc
ds
adc
jl
sbb
xchg
int
lcall
sub
pop
hlt
cmp
mov
testl
movsb
je
jle
sub
test
popf
js
stos
and
repz
sbb
sti
in
negl
add
addr16
lahf
cmp
in
mov
dec
mov
inc
mov
mov
fbld
sbb
mov
sarb
inc
mov
or
mov
pop
mov
test
loopne
mov
rorb
adc
out
mov
sbb
insl
jns
mov
cs
in
and
rcrb
imul
push
imul
fistpll
or
sub
into
push
mov
es
nop
xchg
sbb
in
mov
push
xor
jns
ret
jb
add
clc
mov
sbb
add
mov
inc
movsl
loopne
dec
sbb
add
iret
cmp
aam
xor
mov
loop
inc
sub
dec
sbb
jae
movsb
dec
adcl
xor
jg
xor
out
sbb
sbbl
lods
xor
xlat
cmp
imul
sub
xchg
sbb
push
andb
inc
in
jp
and
xchg
lret
adc
mov
stc
mov
repnz
ja
lcall
adc
xor
mov
rolb
sbb
xchg
pop
mov
pop
sbb
imul
sub
stc
pop
and
push
ret
sbb
push
dec
dec
std
pop
shll
mov
adc
push
and
mov
gs
mov
fstps
addr16
mov
mov
into
ret
and
icebp
xchg
repnz
in
repz
std
int3
pushf
or
dec
insl
enter
out
daa
xor
and
lods
js
scas
sti
xchg
aaa
mov
lds
fwait
push
xchg
enter
or
cmpsb
mov
sbb
sub
inc
inc
mov
maxps
cmpsl
jno
push
in
xor
leave
aaa
insl
jmp
jbe
and
repnz
shll
iret
dec
mov
xor
pushf
xor
sbb
cmpb
mov
pop
cs
jae
fs
push
mov
dec
add
pop
push
cltd
cmp
imul
add
pop
rcrl
scas
or
and
mov
adc
call
mov
pop
mov
scas
lock
pop
pop
xchg
mov
mov
in
and
jl
cmc
pop
and
stc
lret
or
test
nop
shll
in
out
addr16
xlat
sbb
xchg
xchg
jg
inc
lods
push
lret
push
add
xor
pop
mov
mov
cmpsl
jb
pop
ss
mov
adc
xchg
mov
inc
mov
jae
cmp
and
scas
rcr
test
push
push
pop
call
xor
xchg
jp
test
jnp
mov
cmp
dec
aad
lods
pop
in
pushf
pop
scas
mov
sub
jae
out
stc
inc
xor
inc
divl
xor
pop
enter
icebp
sbb
in
addr16
jo
jnp
test
xchg
or
dec
jns
add
push
adc
jle
andb
in
push
stos
aad
stc
push
pop
sub
insb
notb
pop
out
cwtl
popf
rorl
popf
data16
add
add
js
xchg
push
inc
dec
mov
dec
jb
cmpsb
xor
shrb
sbb
xor
fidivrs
test
adc
cltd
fidivl
xor
dec
mov
ss
mov
adc
bound
movsl
sahf
or
shrl
sbb
or
test
push
push
lret
lret
pop
jg
movsb
cs
aaa
js
jae
jge
inc
clc
mov
sub
int
cltd
xlat
adc
pop
mov
xchg
outsb
lea
scas
stos
dec
mov
cmp
mov
push
jns
aas
sbb
nop
or
sbb
mov
adc
sub
stos
fisttpl
cmc
stc
inc
out
mov
bound
push
popf
cmc
hlt
fadds
push
lcall
jg
gs
jnp
rclb
lds
sub
data16
aad
aad
adc
das
cltd
or
jle
fmulp
jecxz
cmp
dec
loope
pop
sub
xor
lds
pusha
sub
in
stc
scas
std
out
andb
add
popf
pop
scas
insb
mov
dec
jnp
ds
jo
dec
pop
mov
inc
jo
and
sahf
loop
jmp
inc
dec
xlat
sbb
lods
jbe
nop
inc
sub
mov
out
jge
call
adc
pop
xchg
mov
mov
popa
mov
or
cli
inc
sahf
in
into
pop
fs
xor
cmp
mov
outsb
insb
ja
imul
shll
hlt
push
dec
mov
addr16
jo
lcall
in
fldt
mov
sti
push
stc
outsb
outsl
das
pusha
push
mov
popl
es
mov
pop
xchg
aaa
add
lea
cmp
addl
dec
pusha
fldenv
sbb
inc
jmp
dec
decb
jbe
mov
imul
push
mov
add
cmpsb
ja
xchg
outsb
jmp
xorl
test
ret
mov
stos
fxch
mov
adc
mov
cs
or
test
ss
aaa
mov
adc
or
mov
lods
fsubrl
sub
push
mov
mov
mov
cmp
popl
pushf
std
push
and
adc
or
fmull
cmc
inc
push
pop
jbe
mov
lcall
fwait
cmp
pop
xchg
adc
add
in
push
test
test
mov
cld
dec
adc
fcomip
cld
xor
jo
fsubrs
aad
dec
into
dec
test
mov
push
add
into
jns
mov
or
and
outsl
les
sbb
scas
ja
jp
stos
pop
in
mov
ret
add
imul
or
or
dec
mov
fs
inc
cmp
xchg
stos
ret
rol
stos
lea
pusha
xor
lea
lret
push
mov
mov
aad
mov
mov
lcall
dec
lret
out
scas
xchg
jno
mov
cli
fldenv
sub
inc
xor
ljmp
test
xor
in
out
das
mov
js
in
add
pop
push
test
add
sub
lcall
cmp
or
pop
sarb
jle
sub
fcomi
cwtl
out
sub
pop
movsb
jecxz
frstor
mov
cmpsl
mov
mull
jne
bound
dec
or
shl
fsubl
xor
mov
inc
push
movups
pop
mov
jae
imul
mov
sti
jae
insl
scas
lds
std
clc
and
ds
dec
and
or
and
xlat
out
jbe
into
int
clc
ljmp
in
pop
pop
out
xor
mov
imul
icebp
nop
dec
add
push
inc
int
repnz
loop
or
and
call
ret
test
dec
dec
aas
fldenv
jmp
fdivrl
test
xchg
repnz
inc
das
xor
arpl
mov
inc
jmp
and
sub
push
cwtl
push
push
xor
stos
cmpsl
and
inc
gs
jmp
inc
loopne
inc
subb
sub
mov
scas
xchg
jle
inc
xchg
xchg
and
push
jae
xchg
outsb
mov
xchg
sahf
mov
jns
insl
addr16
pop
cmpsl
jg
cmp
pop
inc
in
mov
push
adc
dec
or
stc
sarb
mov
pushf
clc
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
call
fstpl
mov
mov
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
