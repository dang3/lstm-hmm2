push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
jg
js
adc
adc
adc
adc
stos
sbb
mov
stos
cmpsb
jmp
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
cmp
negl
pop
in
enter
movsb
fwait
imul
sbb
inc
fidivs
adcl
dec
daa
lds
cs
or
push
push
mov
lret
mov
imul
push
push
imulb
mov
xchg
and
mov
push
ds
into
mov
lods
or
das
mov
pop
gs
mov
fnstsw
xchg
dec
and
or
and
popa
push
push
push
add
add
pop
daa
repnz
sbb
fistpl
mov
or
stos
and
add
adc
add
cmp
xchg
stc
out
int
mov
dec
icebp
into
push
and
sahf
xor
repz
xchg
aad
fstpl
mov
mov
push
mov
dec
jns
sbb
jbe
xchg
in
sub
sbb
loope
test
or
sahf
cmc
adcl
pop
movsl
inc
pop
inc
insb
pop
push
clc
sti
jge
mov
xchg
cltd
push
cmpsl
inc
jg
loope
mov
daa
int
inc
loopne
mov
out
push
xor
pop
sub
insl
jo
stos
xchg
sbb
push
addr16
mov
ret
insl
or
test
push
jg
mov
lret
dec
mov
in
sbb
push
mov
inc
mov
push
inc
aaa
sbb
aam
mov
stos
push
fwait
jno
ss
jne
and
xchg
xchg
mov
jns
int3
adc
jns
dec
ljmp
test
testl
cmp
push
push
sbb
ret
mov
dec
sub
inc
std
sbb
jno
inc
push
xor
repz
shrl
jle
loopne
lcall
inc
push
cwtl
popa
jmp
inc
cmp
or
es
stos
loope
pop
pusha
shlb
lret
imul
test
std
jae
mov
popa
fdivs
js
loopne
push
push
bound
ljmp
mov
imull
lods
les
jp
fmull
adcb
cwtl
mov
xlat
or
jg
xlat
addr16
inc
jge
mov
or
cli
and
out
cs
leave
test
mov
and
xchg
inc
mov
mov
enter
stc
push
inc
scas
jge
testl
idivl
sar
push
push
fcoms
cmp
loop
fs
sub
in
mov
insl
push
dec
dec
std
insb
roll
mov
sbb
mov
mov
cmp
sbb
xorb
daa
inc
push
fildll
jne
xchg
addr16
xchg
mov
cli
inc
shrl
stos
add
daa
mov
pop
sub
ja
push
imul
and
mov
fcoms
inc
and
jmp
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
lret
int
adc
int
adc
scas
adc
inc
or
mov
cmp
push
or
add
lret
push
or
ret
dec
call
xchg
popa
stos
cmc
clc
mov
jns
jae
iret
cltd
scas
jl
jns
fistpll
add
mov
les
fstl
iret
or
push
push
jmp
or
cmp
ja
jmp
push
dec
adc
push
lret
xchg
pop
mov
cmp
add
into
and
sub
sub
add
jecxz
mov
jns
or
dec
shlb
insb
lds
jp
dec
mov
jmp
ss
popf
inc
mov
ljmp
add
test
ds
ss
dec
add
ror
adc
cmp
and
ret
pop
insb
movsl
sbb
clc
js
mov
aaa
xchg
jg
movsl
in
add
mulb
std
push
insl
fmul
xchg
add
out
mov
in
mov
fucom
fcom
mov
aaa
adc
xchg
mov
mov
imul
mov
cmp
nop
add
xchg
jnp
fcom
popf
mov
inc
filds
ss
fmuls
ret
sbb
loop
fcompl
fwait
adc
sbb
jmp
notb
fcoms
inc
in
ljmp
cmpsl
push
mov
loop
adc
in
es
cltd
pop
push
iret
ss
movb
xorl
ss
insl
xor
adc
cmp
ja
xor
mov
dec
push
mov
data16
sbb
repnz
hlt
cld
sbb
mov
enter
push
or
pop
mov
outsb
mov
aas
lcall
ror
pop
xchg
jno
test
psraw
popa
pop
cwtl
and
out
mov
jns
inc
jns
bound
inc
ljmp
fisttps
ljmp
imul
xchg
fnstsw
jno
rorl
pop
call
ds
fisubs
shlb
iret
xchg
cmpsb
mov
shrl
icebp
aad
mulb
jae
jne
sbb
dec
ficoms
jns
mov
in
jae
outsl
push
inc
movsb
xor
fisttpl
rorb
dec
jg
sub
inc
outsl
adc
lea
lods
mov
cmp
dec
and
add
mov
mov
enter
xchg
lcall
out
dec
jle
stos
fmuls
cmp
and
dec
testb
insb
xchg
cmp
cs
or
pop
subb
pop
pusha
into
add
xorl
push
andl
insb
fldenv
outsb
push
cltd
push
pop
idivb
test
xchg
xor
fwait
lock
lods
dec
ds
ret
xor
xchg
pop
push
shl
xchg
loop
into
imul
ss
dec
loope
and
mov
shll
les
pusha
push
pusha
dec
ficomps
inc
pushf
mov
in
sub
adc
inc
subb
jecxz
push
mov
out
mov
adc
addr16
xchg
push
sti
pop
lahf
imull
sar
in
jle
mov
and
mov
dec
mov
dec
out
xor
mov
mov
arpl
xchg
adcb
add
ret
popf
out
dec
and
pop
add
pop
mov
popa
sti
rcrl
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
loopne
sarb
or
adc
adc
adc
mull
and
repnz
xchg
xor
stos
push
inc
jg
gs
imul
ljmp
pop
test
mov
xchg
pop
stc
clc
sbb
adc
cmp
sbb
dec
mov
jbe
push
and
pcmpeqw
incb
xchg
jnp
stos
mov
mov
push
mov
call
loop
xor
add
push
stc
xor
cs
jle
call
add
or
outsb
xchg
mov
andl
push
mov
out
sbb
add
jecxz
out
cmp
mov
fsubrl
mov
out
push
std
call
pop
std
movsl
std
xor
cli
movsb
cmc
in
mov
mov
add
cld
sub
jmp
mov
arpl
repnz
mov
fistpll
mov
inc
mov
frstor
imul
xchg
adc
sbb
mov
negl
and
inc
mov
negl
in
movsb
cmp
mov
inc
push
xchg
cs
cmp
cmp
mov
fwait
scas
xchg
into
mov
mov
icebp
jo
mov
mov
xor
das
adc
in
into
notl
push
mov
mov
adc
add
sahf
mov
pushf
push
scas
mov
cli
je
aad
pushl
mov
mov
std
push
sbb
jo
sti
mov
ss
rol
adc
sti
inc
jmp
lods
sub
dec
sub
cmpb
mov
mov
jo
divl
lcall
cmp
cmp
fmull
lods
mov
sub
mov
loop
dec
pushf
cwtl
cmp
cmp
lahf
pop
pop
orb
jge
pusha
mov
sub
pop
out
push
jb
jmp
ret
mov
shrl
xchg
in
fnstcw
into
cmp
enter
and
mov
sti
aaa
pop
xchg
or
adc
push
cmpsb
in
fdiv
cmp
fidivl
inc
xchg
cmp
iret
lret
das
in
pop
inc
loopne
movsb
fiaddl
push
rcr
sub
push
or
jg
sbb
out
clc
scas
inc
fcmovnu
mov
xchg
xchg
cli
push
dec
cmpsl
scas
inc
inc
pop
pop
fnstenv
stos
test
jl
lock
sbb
inc
test
pushf
adc
mov
mov
jne
insb
or
aad
cmp
cmpsl
pop
cld
faddl
or
cli
int3
pop
sbb
inc
stos
dec
fistl
lods
popa
mov
push
int
imul
lods
pop
mov
lock
addr16
push
adc
lods
xor
popa
stc
andb
jecxz
jae
sbb
jne
mov
push
les
xorb
jmp
xchg
lock
cmc
popa
mov
jmp
lcall
mov
push
mov
jne
movsb
icebp
popa
jg
sub
xchg
sbb
mov
adc
mov
and
es
and
out
jbe
imul
movsl
sub
mov
gs
jl
mov
mulb
movb
dec
in
sbb
test
and
lods
ret
pop
mov
aad
inc
pop
mov
add
imul
movsl
sbb
lret
mov
mov
xchg
sub
and
or
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
xchg
push
js
jbe
cmc
cwtl
xor
sub
aam
imul
shlb
pusha
mov
mov
ret
mov
stc
andb
iret
js
mov
fstps
add
inc
add
outsl
popa
testb
lret
fwait
les
add
jg
mov
dec
push
mov
add
xor
cmp
sarb
cld
aas
and
sbb
out
aas
fsin
arpl
sbb
es
xor
das
repnz
cmc
cld
xchg
jge
popf
sub
lea
out
push
shrb
jp
or
popf
adc
inc
adc
sbb
push
out
xor
xor
push
insl
out
fildll
lcall
and
pop
mov
lret
test
addb
add
inc
pop
loop
dec
and
stc
mov
lahf
jmp
iret
add
fsubp
ret
insl
or
test
pop
adc
mov
je
cmc
shlb
sub
scas
push
dec
icebp
or
rclb
jmp
scas
xchg
movsb
mov
xchg
orb
lods
add
jb
inc
cmpsl
sti
mov
std
mov
add
inc
sbb
popa
push
mov
jmp
loopne
fwait
dec
pop
push
xchg
ss
aam
imul
fnsave
pushf
mov
pop
cmp
pushf
outsl
sbb
fwait
dec
rclb
repz
loop
sbb
push
je
mov
cmpsl
int3
ljmp
andb
orb
lcall
icebp
push
cli
xchg
in
sbb
hlt
imul
fwait
dec
xor
jge
test
mov
cld
jp
mov
popf
shlb
dec
sub
andb
call
xor
mov
sarb
pusha
out
push
jmp
js
ds
and
adc
push
fidivrl
jg
sarb
lea
cmpsl
add
lods
push
cs
inc
cmp
cmp
mov
pop
jmp
cmpsl
sti
add
scas
xchg
mov
jl
pop
mov
fimull
into
repz
sbb
adc
andl
ret
xor
fstpl
mov
fisubs
out
adc
xor
dec
addr16
push
xchg
bound
pop
cmpsl
dec
jo
popf
fsts
sub
test
add
out
xor
mov
dec
ljmp
aam
mov
stos
daa
xlat
insl
and
jp
jae
xor
popf
or
push
push
popa
loop
add
das
mov
test
mov
stc
xchg
bound
dec
sbb
into
sbbl
movsb
mov
movsl
push
dec
fnsave
mov
scas
mov
cmp
enter
sub
sub
adc
inc
mov
mov
movsb
popa
shll
pop
inc
outsb
cmc
add
add
pop
es
ret
ficompl
sbb
xchg
rcr
dec
shrl
adc
fucomip
mov
push
aad
inc
mov
sti
icebp
test
rcll
xor
inc
mov
incl
jnp
and
push
nop
mov
dec
sbb
test
dec
scas
xchg
mov
shl
xchg
fiaddl
inc
pop
dec
dec
sbb
rorl
lods
dec
xor
xchg
jmp
inc
xor
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
add
mov
int
adc
xor
lods
push
push
iret
and
sub
xchg
cmp
dec
imul
inc
mov
into
lock
jmp
outsb
xchg
incb
mov
daa
outsl
xlat
scas
add
loopne
pop
push
mov
mov
mov
icebp
mov
mov
sbbb
mov
cmp
dec
inc
dec
insl
cmp
adc
cli
mov
arpl
in
popa
jg
movsl
add
inc
aad
pop
shll
adc
add
test
xchg
loopne
mov
xor
daa
mov
mov
lret
mov
add
push
mov
and
inc
mov
pop
stos
pop
imul
or
jmp
imul
pop
lds
insl
addr16
sub
sbb
rcr
lsl
sti
ret
push
fldt
movsb
int3
inc
call
push
xchg
mov
insb
jp
inc
adc
out
aam
in
cmc
dec
ss
mov
subl
add
cmpsb
leave
xchg
jge
and
lret
stc
push
mov
cmp
popa
ljmp
add
sbb
clc
aaa
in
jmp
add
inc
xchg
addr16
and
jmp
mov
and
lds
cmpsl
ja
sbb
push
jbe
shrb
out
rcr
pop
pop
fisttps
pop
xor
rep
shll
add
cmc
pushf
divb
cmc
inc
fdivl
andb
out
dec
mov
add
pop
lret
push
push
int
jp
ja
aam
pop
pop
dec
stos
adc
jmp
jnp
insb
test
inc
loope
or
dec
jle
xor
fisttpll
call
adc
sarb
jno
popf
lods
xor
mov
cld
rclb
sbb
repnz
jecxz
pop
loopne
rorb
lock
movsb
fdivl
adc
cmpsl
lods
sub
xchg
insl
lds
inc
scas
adc
or
fwait
insb
sbb
push
sub
mov
int3
aad
mov
cld
xchg
pop
vdivpd
add
insb
int
inc
pop
leave
orl
pop
out
and
pop
imul
add
cmpsb
push
lods
imul
movsl
cltd
cmp
in
addr16
push
fsubrs
dec
inc
jg
jnp
stc
shll
cltd
lock
or
push
sahf
in
clc
jns
aas
and
jo
leave
push
adc
jp
not
push
jmp
sub
scas
cwtl
lcall
idiv
insb
push
es
orb
sbb
xchg
aam
loope
cmc
jnp
int3
sbb
lret
test
xchg
or
pop
and
inc
sbb
xchg
sbb
sub
push
jo
push
inc
ljmp
sbb
cwtl
xor
jnp
push
xchg
mov
sub
add
and
ss
nop
popa
push
pop
and
adc
mov
inc
push
lds
gs
mov
jge
or
cld
push
aas
adc
add
nop
adc
movsl
or
inc
xor
inc
adc
dec
idivb
lods
outsb
jae
push
and
fcomp
mov
inc
xchg
push
mov
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
push
fstl
adc
adc
adc
inc
and
mov
push
push
int3
pop
push
sbb
repz
sbb
pop
xchg
sub
lds
jl
push
fcmove
leave
leave
mov
cmp
xor
xchg
adc
lea
imull
mov
xchg
icebp
cmp
sbb
enter
push
mov
add
jmp
adc
and
aaa
outsl
and
jno
mov
pushf
rol
stos
arpl
lods
xor
sbb
mov
xorb
inc
enter
cmp
sub
jmp
shlb
daa
jp
out
dec
xchg
imul
mov
test
roll
outsl
sbb
xchg
pop
or
cmp
lahf
mov
in
jl
cwtl
xor
dec
inc
dec
test
and
mov
ret
rorl
pushf
cmp
out
addl
rolb
dec
jmp
xor
into
les
push
fisttpl
fwait
dec
rol
mov
mov
pop
js
mov
sbb
insl
mov
lret
pop
push
pop
pop
xchg
icebp
sahf
pop
test
clc
mov
xor
loop
ret
jae
push
or
mov
cwtl
loop
mov
popa
andl
outsl
push
stos
int
fsubp
inc
jl
sbb
dec
mov
lcall
nop
pop
sbb
orl
fmul
and
sub
add
cltd
inc
arpl
ljmp
and
xchg
cmp
lock
jmp
sbb
mov
ret
imul
sub
inc
push
pop
and
inc
adc
ja
int3
popf
push
rol
add
cld
push
out
jl
leave
out
fyl2xp1
cmpsl
into
test
lds
roll
xchg
test
insb
cmp
or
jne
test
push
shll
adc
sbb
lock
aam
or
inc
jns
mov
xchg
ret
jb
in
xchg
pop
popl
loopne
push
push
dec
inc
ficoms
je
call
lds
jnp
sub
pusha
sbb
xchg
stos
inc
test
push
add
lods
mov
sub
mov
hlt
push
pop
pop
dec
xchg
pop
inc
xor
mov
scas
xor
roll
jae
cwtl
xchg
out
negb
push
in
orb
xchg
sbb
int3
inc
push
outsb
cli
aad
fdivs
popf
ljmp
sbb
and
std
leave
fs
sub
iret
cmc
and
mov
pop
in
mov
js
imul
push
mov
jle
or
int
jecxz
add
mov
or
and
sbb
std
xor
subl
shlb
or
add
mov
xchg
and
loop
bound
sub
sbb
lret
orl
scas
jne,pn
cmp
fcoms
imul
imul
hlt
dec
sbb
aas
movsl
pop
add
sar
push
lods
jo
lret
or
int
xchg
add
xchg
xor
in
add
inc
xor
cmp
mov
push
js
dec
dec
inc
mov
pop
imul
pop
data16
ljmp
xor
or
jno
inc
les
push
jo
mov
repnz
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
cmc
jnp
mov
int
adc
pop
mov
call
and
scas
fisubrs
pop
inc
inc
out
inc
jne
push
xchg
sbbl
lea
jbe
pop
mov
xchg
dec
jecxz
ss
push
lahf
notb
inc
jno
sbb
or
adc
mov
arpl
enter
mov
jge
aaa
xor
call
and
push
mov
mov
enter
dec
fldt
scas
mov
sub
loopne
xor
jne
shl
mov
xchg
adc
pushf
fwait
pop
dec
add
bound
push
push
mov
movsb
mov
dec
fbld
movsb
adc
jns
mov
fistps
dec
inc
fldl
shr
cltd
mov
stos
rclb
push
ljmp
push
mov
pop
dec
mov
iret
pop
cmp
hlt
mov
in
fstpt
jbe
fwait
and
xchg
inc
jno
jnp
jno
and
loope
insb
xor
lcall
jecxz
adc
adc
fldcw
mov
or
cwtl
stc
mov
test
xor
pop
push
lods
xor
jp
fistpl
xor
xchg
mov
lret
pop
aas
xchg
mov
jnp
fbstp
mov
mov
pop
jecxz
xchg
xor
mov
loop
sbb
xchg
addl
ja
push
jno
rolb
test
rclb
out
jecxz
je
pop
xor
push
int3
inc
das
mov
stos
lret
push
inc
add
dec
cld
sub
lret
ja
lret
addb
in
add
fwait
pop
pop
test
sahf
leave
js
cld
sub
push
push
push
mov
insb
ret
xchg
js
push
pop
or
call
sbb
and
xlat
outsl
dec
popa
mov
nop
or
sub
inc
sbb
jmp
call
xchg
or
sbb
fstps
loop
cmp
dec
stc
dec
cmp
pop
lahf
xlat
aaa
or
rorb
pop
fsubrl
insb
enter
adc
xchg
in
dec
jle
icebp
jbe
jecxz
adc
jo
lret
fdivrp
in
stos
insl
jns
cmp
and
ss
ljmp
stos
add
cmpsb
inc
sahf
mov
jg
jbe
repz
lock
ret
push
mov
sarl
pop
movsl
pop
mov
cltd
mov
rorl
adcl
sti
sar
out
mov
add
nop
lock
ja
test
jp
or
in
pop
and
inc
push
shll
or
jno
aaa
inc
out
in
out
xor
sbb
imul
add
movsl
cmp
sbb
and
push
loopne
sbb
lock
mov
or
icebp
lock
test
pop
mov
lock
in
dec
cmpsl
jno
and
add
inc
or
pop
hlt
ds
shr
xchg
test
lods
nop
adc
shlb
fidivl
ljmp
mov
or
mov
aas
and
pop
stc
jg
inc
jge
fs
xor
xchg
adc
inc
push
dec
adc
push
add
xor
sub
andb
push
mov
jg
testb
mov
mov
lret
fmuls
cltd
or
lds
nop
sub
scas
cmp
mov
push
and
mov
aas
popa
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
and
pop
lods
adc
adc
int
adc
xor
xor
push
popf
arpl
std
mov
negl
sub
mov
movl
les
sbb
in
push
in
add
repz
add
dec
fstl
out
cwtl
pop
insl
and
jae
stos
out
imul
leave
sub
iret
fildll
int
sarl
pop
cltd
cmpsl
std
jno
stos
loope
loope
sub
fwait
lahf
data16
adc
cmp
jns
jl
or
sahf
scas
or
mov
mov
xor
xor
add
ret
sti
imul
xor
inc
test
imull
cmp
or
push
into
rcr
test
daa
adc
addr16
cmp
xor
addl
inc
push
sbb
mov
pop
movsl
std
push
andl
negl
and
adc
sub
out
mov
iret
sub
mov
mov
mov
out
pop
push
fcoms
fnstsw
xchg
ret
add
insb
xchg
adc
icebp
xlat
dec
push
push
xchg
and
xchg
in
cmpsb
push
mov
faddl
fwait
cli
jle
sub
inc
pop
pusha
pop
insb
mov
mov
xchg
mov
pushf
cmp
pop
pop
out
jb
dec
mov
add
mov
push
and
ret
sbb
xchg
js
aaa
xchg
test
jp
sbb
out
ret
add
push
sub
or
and
adc
mov
sbb
push
or
outsb
sti
and
bound
jge
fs
leave
mov
jmp
xchg
ficoms
jp,pn
add
icebp
adc
mov
pop
cmp
jl
lcall
cmp
shrb
inc
jno
aas
mov
dec
js
cmp
sbb
mov
jl
roll
insb
cwtl
jbe
icebp
mulb
mov
shll
aas
std
mov
and
ljmp
enter
movsl
sub
xor
sub
xchg
imul
inc
add
shrl
fcoml
roll
xor
push
inc
push
mov
bound
inc
cmp
adc
leave
into
mov
stc
fists
and
repnz
popa
into
add
inc
vorps
shll
xchg
xchg
out
inc
in
test
stc
jns
mov
jnp
out
adc
xor
fs
xchg
fcomi
loopne
rcr
mov
lods
lea
aas
sub
aas
test
pop
push
xchg
add
out
out
xchg
nop
mov
mov
dec
sbb
outsl
leave
lock
cwtl
jbe
xchg
insb
cwtl
jle
xor
lret
scas
movsl
mov
adc
in
ljmp
jg
mov
jmp
xchg
mov
sahf
jne
sub
pop
pop
inc
mov
ficoms
mov
in
add
clc
xor
rorl
jb
getsec
push
mov
sub
mov
jnp
fcoml
dec
add
inc
loop
adc
xorl
push
pop
jle
imull
call
xor
jb
dec
in
call
mov
inc
pop
fdivs
hlt
in
mov
or
jmp
mov
jno
dec
rorb
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
shll
scas
insb
ficoms
adc
adc
adc
insb
shlb
pop
mov
ja
push
imul
jecxz
xchg
jg
xchg
mov
call
inc
mov
aam
icebp
mov
mov
add
mov
js
pusha
add
jne
inc
icebp
sbb
lret
sbb
gs
or
xchg
aas
arpl
fsubr
mov
pop
aaa
xchg
jae
jecxz
and
adc
or
aaa
inc
lahf
inc
loope
xor
mov
je
rorb
jbe
popa
call
adc
mov
out
cwtl
and
sub
sbb
mov
push
repz
lods
test
add
jne
cs
int
ss
jle
sbb
sbb
icebp
out
jno
and
int3
stc
fsubs
xlat
in
mov
dec
sub
js
fdivrl
jge
int
popa
and
cwtl
cmp
push
add
loope
mov
jns
cmp
std
xor
and
pushf
cmp
jl
aas
mov
and
aad
dec
mov
mov
fs
adc
push
inc
iret
xchg
mov
shl
sub
ficoms
mov
mov
cld
dec
fdivrl
push
cmp
mov
xor
out
pop
inc
in
sarb
ret
push
cmpsb
in
lahf
add
mov
mov
mov
xchg
push
xor
lods
rcr
add
push
inc
lods
test
leave
das
pop
sub
adc
mov
addr16
sub
icebp
stc
jno
leave
fwait
pop
in
mov
insb
aad
sarl
aam
xlat
in
inc
mov
leave
adc
or
mov
xlat
mov
push
int3
and
dec
loop
testb
pop
stc
pushf
sub
xor
mov
test
cli
ja
jo
mov
ja
mov
lret
jo
scas
mov
ret
fmuls
pushf
dec
pop
outsb
in
jmp
inc
notl
mov
and
out
mov
sub
xor
inc
repnz
test
jl
lods
sbb
mov
daa
xchg
mov
cs
mov
js
popf
sbb
push
jne
xchg
pop
pop
pop
into
cmp
add
mov
addr16
dec
mov
pop
cmp
sbb
rol
inc
sbb
mov
mov
addr16
loopne
push
jge
adc
pop
andb
mov
ret
insb
arpl
xor
lods
mov
pop
sar
mov
ret
mov
mov
mov
pop
xor
and
repz
hlt
push
dec
sub
jecxz
mov
sbb
inc
scas
aas
nop
mov
add
test
pop
pop
sub
int3
jle
pop
mov
idivb
stos
notb
jge
loop
lods
fiadds
sub
test
pop
xchg
sub
fimull
dec
xchg
in
cmp
popa
mov
fwait
add
jle
pop
outsb
fs
cmp
pop
mov
push
shl
xchg
scas
cmp
pop
outsl
movsb
mov
or
jecxz
daa
loope
ds
fs
jbe
sar
sarb
mov
aas
fisubl
movl
mov
and
push
cmpsb
pop
add
scas
ret
stos
ds
push
movsb
pop
mov
test
xchg
shr
mov
mov
shl
jmp
fmuls
sbb
mov
dec
mov
int
adc
adc
call
cmp
aam
test
mov
fcompl
cmc
and
int3
cwtl
xor
xchg
pop
ljmp
shrb
pusha
dec
shrl
inc
mov
das
pop
mov
jecxz
test
and
push
aam
and
push
and
inc
mov
sub
add
into
sbb
pop
bnd
push
pop
xchg
push
in
mov
in
aad
push
push
lret
mov
push
sbb
mov
cmp
imul
leave
aas
into
jle
xor
je
lea
pop
pop
pop
pop
adc
xlat
imul
xor
pop
xor
lcall
pop
xor
outsl
inc
loopne
sti
mov
cmp
subl
jg
push
add
push
push
push
lret
inc
mov
mov
lahf
in
in
push
aam
enter
inc
jnp
pop
dec
push
cmpsb
xchg
int3
adc
jecxz
jae
add
test
lret
mov
shrb
push
addl
in
addr16
xor
sbb
jg
inc
pop
dec
jmp
xchg
sub
jge
icebp
add
pop
mov
cmp
movsl
ja
pop
xlat
sbb
sahf
lahf
inc
popf
add
in
gs
sbb
ja
cmp
xchg
arpl
dec
aas
je
mov
test
add
lods
add
xchg
stos
bound
fcomip
xor
pop
int3
gs
jge
dec
jge
lods
gs
sarb
jnp
mov
inc
outsl
cli
loop
int
jnp
and
xor
mov
inc
testl
das
jecxz
mov
or
dec
divl
imull
imul
test
imul
mov
and
sub
adc
rolb
in
in
mov
test
shll
ja
and
add
orl
stos
outsb
and
mov
mov
push
xchg
or
negb
dec
adc
xor
inc
xchg
mov
jns
jb
add
cmc
jae
lea
roll
test
mov
cwtl
jg
iret
mov
jno
mov
push
jp
addr16
pop
mov
pop
and
and
xchg
jb
in
test
dec
cmpsb
add
jb
in
mov
inc
sti
dec
dec
shl
or
mov
jno
ljmp
rcll
bswap
cmp
or
out
xorb
jge
push
and
or
push
fisubl
sub
into
mov
pop
xor
test
inc
push
repnz
xor
add
jo
lds
arpl
sub
fmull
sub
popa
pop
mov
pushf
das
push
push
adc
frstor
adc
inc
inc
pop
lods
xor
push
or
popa
pop
add
imul
insb
ljmp
xor
dec
rclb
cmp
mov
jmp
pop
push
mov
xor
addr16
mov
mov
pusha
movsb
sarl
sarb
shrb
sti
test
test
xchg
mov
negl
mov
ja
xor
adc
pop
lock
adc
cltd
cmp
test
nop
test
jno
mov
outsl
jo
pop
jo
push
sbb
add
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
lock
sbb
int
adc
addr16
call
or
fucomi
mov
test
xchg
jg
add
sbb
mov
mov
add
test
xchg
or
hlt
xchg
mov
repz
inc
adc
cmp
clc
adc
cmc
aad
mov
inc
inc
push
mov
inc
xor
cmp
mov
inc
push
dec
iret
scas
sarl
pop
add
outsb
sub
push
stos
push
push
ljmp
cmp
xchg
sbbb
std
dec
in
jo
xchg
xchg
sbb
gs
add
test
cmpsl
lcall
cld
sub
and
cli
mov
out
dec
adc
loop
xchg
sub
xchg
out
pop
xchg
insb
pushf
mov
lock
iret
mov
in
insl
and
in
movsb
push
call
dec
mov
cwtl
loop
push
xchg
dec
jl
xchg
pop
icebp
je
push
jo
xchg
das
cmp
pop
fildl
cmp
adc
call
push
pop
test
mov
push
jp
fdivrl
mov
les
addr16
or
insb
mov
aam
aam
mov
or
je
outsb
sub
pusha
out
nop
mov
and
mov
mov
xor
shl
outsb
sbb
xor
aas
inc
push
fimull
mov
dec
and
jo
push
mov
push
inc
dec
mov
in
jecxz
fcoml
or
adc
and
sbb
and
push
sbb
bound
push
add
inc
out
popf
xchg
outsb
into
xchg
or
pop
mov
lret
stos
das
out
adc
cld
cmp
jp
mov
inc
dec
daa
mov
xchg
stos
mov
push
inc
jb
pop
sub
push
test
xchg
push
adc
inc
mov
and
xor
inc
fldl2e
and
xorb
jo
push
cltd
mov
addr16
sahf
jp
notb
mov
inc
addr16
inc
in
fwait
out
jns
inc
jp
mov
push
das
into
push
lret
test
imul
icebp
fistl
test
mov
lret
subb
lods
adc
inc
cmp
clc
jmp
bound
stos
daa
mov
fnstsw
lds
adc
sbb
cld
lahf
gs
mov
int3
xchg
sti
lock
pop
and
pop
xor
sub
popa
in
nop
mov
mov
push
repz
sahf
mov
lret
jo
dec
sub
xor
and
call
adc
cs
rcr
cmc
add
sub
mov
fdivrs
shlb
stos
dec
sbb
pop
mov
lods
dec
push
shr
or
aas
addr16
mov
jp
inc
push
cmp
sub
cmc
ds
and
and
xchg
mov
mov
adc
and
push
xchg
scas
adc
jbe
pushf
sub
sbb
dec
cld
lds
stc
push
aam
je
lds
cmc
test
dec
xorl
inc
das
cmc
or
ss
lock
push
out
mov
pop
mov
sub
test
push
fwait
ljmp
cmpsl
xchg
sbb
cmp
mov
std
test
inc
cmp
adc
adc
mov
or
add
pop
sub
inc
daa
lcall
aad
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
insl
sbbl
adc
adc
adc
adc
xor
push
fadds
loope
clts
jle
adcl
shlb
icebp
push
cmp
int
test
dec
shlb
jb
ljmp
inc
mov
cmp
cmp
mov
xchg
push
je
sti
push
jb
push
mov
mov
push
lea
mov
pop
loopne
addr16
xor
popa
adc
dec
push
shlb
test
mov
sbb
sbb
lods
les
icebp
int
imul
fidivrl
jl
loop
in
xor
in
das
or
shrb
mov
mov
enter
stc
mov
mov
xchg
add
idivb
mov
fwait
inc
loop
add
in
pop
fidivrl
mov
sarl
not
xchg
fcomip
gs
mov
aad
sbb
dec
lods
push
and
in
out
mov
dec
mov
bound
out
xchg
incl
inc
jp
mov
inc
loopne
jg
and
add
push
in
or
hlt
jns
inc
push
bswap
movsb
pop
sti
jnp
in
mov
inc
jno
je
jb
cmp
xchg
mov
or
adc
cltd
sbb
pop
pop
lods
rcl
das
cwtl
cmp
and
loopne
xor
xlat
nop
inc
popf
ja
ljmp
test
icebp
out
pop
test
mov
jmp
jmp
add
or
mov
jle
inc
mov
xchg
pop
cmc
sbb
sub
add
je
xor
or
insl
ja
gs
and
mov
xor
jno
inc
testl
jg
xor
cmc
int
data16
dec
icebp
xchg
pop
mov
xchg
and
in
adc
mov
pop
addr16
outsb
mov
in
shrl
mov
jp
addr16
cli
dec
add
jg
xchg
jae
repz
or
mov
push
xchg
lods
push
dec
jmp
dec
outsl
stc
jae
push
push
ficoms
and
xchg
out
fwait
pop
pop
ljmp
in
das
in
flds
and
or
in
popa
jns
sub
mov
cli
cld
xchg
jmp
mov
inc
and
sbb
out
cltd
mov
int3
popa
dec
xchg
fisubrl
jecxz
test
bound
dec
ds
xchg
stos
mov
xchg
xchg
mov
xor
inc
mov
call
scas
push
ds
arpl
lods
lods
ficoms
das
shrl
or
repnz
xor
push
cli
scas
pop
jmp
fisttps
aad
mov
popf
in
or
pop
shrl
xor
xor
rcr
bound
cmp
or
xchg
pop
sbb
pop
mov
push
lods
or
and
stos
xor
cmp
mov
rorb
out
aas
lds
cmp
sbb
push
and
add
jo
push
cmp
jp
jl
jo
adc
shl
rcr
sbb
adc
add
repz
xlat
rclb
pop
sbb
fldl
test
out
sbb
adc
push
in
and
jnp
xchg
pop
loope
push
adc
in
jbe
sub
inc
adc
imul
sbb
scas
cmp
and
inc
xor
push
insl
cmp
fildl
adc
sbb
dec
or
mov
iret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
fmulp
mov
adc
adc
adc
fsub
mov
loopne
xor
adc
and
testb
mov
scas
movsl
ret
inc
cltd
mov
xorb
out
dec
sub
sbb
pop
cmpsb
lods
das
xor
movsl
sub
mov
cmp
cwtl
insl
jge,pt
jne
mov
cmp
outsl
adc
pusha
fimull
or
jae
push
subb
inc
dec
fnstcw
mov
mov
cmc
nop
popf
cmp
cmpsb
sub
fwait
lods
pushf
lock
xchg
lret
adc
cmc
sar
adc
add
xchg
sbb
jg
aad
gs
loopne
xchg
mov
inc
cmpsl
add
pop
ja
shl
shll
enter
shll
nop
add
sub
ja
xor
ret
out
jo
add
dec
nop
inc
push
or
popf
mov
nop
rcrl
mov
or
mov
push
shlb
xchg
sbb
xchg
dec
xchg
inc
pop
adc
imul
jb
jbe
loope
or
unpckhps
mov
adc
xchg
xlat
jg
pop
dec
mov
adc
xchg
lods
sbb
inc
in
dec
popf
mov
mov
mov
cmp
add
test
push
add
test
leave
divl
test
lahf
test
arpl
ss
aas
bnd
fdivrs
add
mov
cs
xchg
add
adc
push
dec
insl
xor
push
xor
cld
enter
mov
mov
fs
jmp
mov
adc
lcall
insl
dec
std
into
mov
pop
pop
mov
xor
ds
cmp
add
cmpsl
and
mov
sbb
enter
push
and
fsubl
adc
push
pop
adc
outsl
out
fsubr
cmp
gs
iret
std
call
sbb
and
data16
jmp
jno
pop
aaa
xchg
lods
mov
jmp
mov
divb
push
dec
mov
mov
sti
pop
std
shl
cli
sub
shrb
scas
popl
ss
shrl
xor
mov
xor
ret
add
push
mov
mov
sbb
pop
push
arpl
push
shrb
fdivrs
addr16
xor
pop
cltd
push
fsubs
xchg
inc
mov
and
fdivr
cltd
xchg
loope
mov
aas
rcr
pop
ss
push
in
clc
inc
mov
lds
push
push
decl
movsb
orw
data16
pop
cwtl
or
insb
push
std
push
and
pop
jno
cli
push
outsl
daa
rorb
bound
sub
jl
jg
sbb
add
cmpsb
adc
shlb
cmp
bound
shl
dec
nop
dec
adc
jp
gs
cli
mov
sbb
pop
test
lcallw
adc
adc
xchg
mov
enter
in
mov
or
and
movsb
clc
pop
std
or
mov
sub
xlat
shll
mov
dec
jnp
cmp
fdiv
adc
push
inc
pushf
pop
popa
cmp
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
mov
adc
int
adc
mov
and
inc
adc
mov
setne
jg
mov
sbb
sub
mov
out
or
or
and
fisubs
mov
mov
sub
xchg
loopne
inc
outsb
pop
scas
out
jmp
movsb
mov
hlt
inc
mov
xor
and
fidivrs
hlt
xchg
cmpsl
mov
inc
neg
nop
xchg
add
sub
and
xor
push
ljmp
es
mov
shrb
sti
push
lahf
lods
inc
mulb
lds
aas
fs
in
ss
clc
das
push
jge
sahf
sbb
aas
jmp
fsubrl
cmpb
in
mov
lret
into
jo
push
sbb
test
inc
arpl
and
jg
call
cmp
adc
pusha
int
or
pop
adc
scas
pop
add
xorl
addl
xchg
in
sbbl
daa
imul
mov
gs
or
xchg
test
adc
mov
scas
aas
sub
aaa
cmc
jo
int
out
dec
jmp
in
cli
dec
repnz
xor
inc
pop
gs
scas
xchg
pop
push
in
lock
cmp
scas
sbb
mov
mov
insb
jnp
pusha
adc
push
cmpsb
fyl2x
stc
shrl
ljmp
xor
movb
push
cs
cmp
test
imul
jbe
popa
stc
pop
imul
sbb
icebp
loop
push
int3
rcr
push
adc
cld
sub
out
rorl
js
ss
int
sub
mov
xchg
out
sub
pop
xor
mov
pop
stos
lcall
lds
paddusw
out
mov
or
cli
cmc
fstpl
xor
out
movsl
pop
popa
pop
loopne
lds
inc
push
jl
es
dec
push
loope
std
inc
or
dec
sbb
mov
iret
fnstsw
push
pop
or
add
pop
lcall
cmp
mov
notl
jg
into
data16
out
sbb
sub
insl
add
jecxz
outsl
iret
pop
push
xor
add
insl
stos
xlat
ds
lret
sub
push
pop
xor
cmpsl
jg
ljmp
arpl
scas
in
xchg
arpl
stc
call
shll
hlt
ds
mov
ret
jp
mov
pop
sbb
aad
aas
aaa
and
push
push
aas
in
jbe
mov
cmp
mov
in
mov
mov
jl
arpl
push
aas
ret
int
or
adc
imul
and
and
push
fimull
mov
lea
jle
xorl
and
out
xor
ss
mov
jo
xlat
jmp
loope
rsqrtps
lret
sbb
push
xchg
mov
adc
jnp
cmp
pop
pop
mov
dec
push
lret
push
dec
ja
jl
int
sbb
sahf
mov
add
ret
inc
pop
or
push
subl
in
roll
std
lahf
rep
push
dec
scas
pop
xchg
fistpl
movsb
jp
mov
lods
dec
inc
scas
stos
jno
popf
cmpsb
inc
add
loope
fldt
mov
xor
fldl
rorb
jp
adc
xchg
lea
sti
popa
jae
lret
jmp
test
lods
dec
shl
push
data16
add
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
and
int3
lods
pop
mov
adc
adc
adc
aad
xor
lcall
sub
adc
sub
into
add
sub
push
addb
adc
adcb
sub
nop
add
fidivrl
add
popf
outsb
in
ds
rcl
mov
pop
push
aad
push
in
pop
sub
jb
into
enter
and
push
ljmp
rcl
mov
das
push
and
hlt
adc
aaa
jne
andl
mov
data16
mov
cmpb
out
rcr
insl
repz
dec
popa
pop
sbb
data16
add
lcall
add
jecxz
dec
sub
ss
pusha
or
cmp
dec
in
add
jne
stc
cmp
gs
int3
mov
fiaddl
push
cwtl
aas
push
pmulhuw
clc
xor
cmpsl
inc
lcall
lds
push
xlat
enter
ds
repz
xor
rorl
iret
jb
lods
loop
pop
adcl
jl
cld
dec
cwtl
mov
push
inc
jne
mov
les
ja
pop
mov
and
addr16
inc
mov
popa
dec
leave
call
pop
pushf
lret
movsb
xlat
or
mov
adc
pop
shr
dec
int
add
adc
inc
stos
addr16
shlb
push
mov
addr16
xchg
jne
shl
ds
mov
adc
add
push
testb
int3
popl
or
in
xchg
dec
adc
int
xor
xor
mov
fistps
and
add
xchg
test
cs
pmullw
jno
sub
lahf
aas
test
in
sub
sbb
xchg
xor
adc
es
test
sbb
xor
and
sbb
or
push
or
pop
lds
lcall
lret
lret
cmp
sub
sub
jbe
or
out
out
shrl
data16
test
imul
jmp
pop
or
jae
or
addb
js
pusha
lcall
je
cmp
mov
lds
or
xor
jb
push
loop
xchg
nop
mov
in
imul
jae
mov
loopne
xchg
fsubrs
adc
inc
fldcw
pop
test
mov
push
mov
inc
inc
add
inc
loopne
popa
fs
lret
inc
sub
cmova
jb
cltd
int
xchg
repnz
sarl
daa
out
xor
adc
dec
jecxz
inc
dec
daa
jne
jbe
mov
fnsave
adcb
mov
inc
pop
xchg
pop
lahf
jecxz
and
leave
loopne
out
adc
push
push
enter
sbbl
mov
cli
mov
int
addr16
popf
lods
mov
test
rclb
sbb
push
fadds
sbb
daa
je
inc
cmp
add
push
mov
jbe
and
xchg
push
int3
test
fcoms
push
cli
out
sub
adc
and
leave
adc
enter
insl
lods
out
aad
push
int3
mov
sahf
faddp
js
leave
ja
and
pop
insb
es
adc
test
roll
sarl
xchg
inc
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
xchg
in
shrl
adc
jmp
in
mov
jno
mov
std
xchg
cmc
push
in
mov
ljmp
mov
inc
outsb
cwtl
xor
stos
mov
cmpsb
xchg
loope
cmpsb
inc
jns
xor
rcll
mov
mov
pop
jg
cmc
fidivs
sbb
dec
fsubl
into
xorb
scas
or
push
dec
and
in
neg
mov
push
jmp
and
add
add
aad
mov
jmp
pop
js
jecxz
lret
fwait
ret
int3
ss
push
in
loop
xchg
sub
ret
mov
xor
mov
xor
push
jmp
jle
xchg
inc
es
flds
push
push
fsubs
add
mov
mov
movsl
sub
lret
pop
push
mov
and
xor
dec
lret
sbb
popf
imul
imul
or
pop
mov
xorb
xchg
or
lret
outsl
into
pop
mov
cmp
testl
cmpsl
repnz
pop
fs
xor
push
cmp
or
fs
ret
aam
out
mov
push
xchg
xor
jo
and
or
test
test
ljmp
ret
push
jecxz
cmp
arpl
mov
std
ror
pop
dec
ret
push
pop
pushf
mov
stos
andb
inc
jne
jle
mov
and
sub
mov
pop
jmp
ret
push
and
fcom
testl
inc
inc
andl
sbb
xchg
leave
insb
sub
subl
jae
imul
pop
sub
and
xchg
sbb
cmp
rcl
loopne
cmc
sub
pop
dec
ds
cmp
mov
push
sbb
loopne
jle
push
push
cmp
imul
out
push
sarb
aaa
shl
shlb
es
mov
in
and
xchg
jae
adc
mov
inc
and
inc
test
jg
ficoms
nop
hlt
xor
or
in
das
jbe
jns
sahf
scas
ja
in
cmpsb
psubsb
inc
roll
int
pushf
push
adc
test
ss
cmp
addb
xor
pop
dec
jecxz
pop
xchg
orl
pop
mov
mov
push
fists
add
xchg
xchg
iret
dec
jbe
dec
scas
arpl
bound
pop
loopne
je
or
shlb
fdivrs
notb
out
and
cmp
and
cmp
pushl
dec
mov
and
fxch
lock
mov
and
mov
in
pop
push
push
add
xor
sbb
push
push
dec
in
cmp
ja
inc
lea
insb
adc
cmp
adc
in
fwait
push
dec
adc
loop
loopne
std
ret
jmp
mov
jae
pop
pusha
pop
pop
in
sub
scas
arpl
inc
cmp
js
loop
rcrl
lcall
xchg
jle
popf
and
push
sarb
pop
and
jg
enter
rcrl
cmc
mov
leave
mov
loopne
adc
xlat
lret
les
adc
fsubrl
lods
lahf
stos
sbb
xlat
std
xchg
seto
mov
fdivrs
xlat
xchg
cmpb
pop
inc
ficompl
cmp
sbb
stc
clc
mov
enter
test
mov
xchg
xor
sahf
jns
xor
mov
xchg
test
roll
nop
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
fidivl
adc
int
adc
push
pusha
sbb
cmc
and
es
fisttpl
loop
lods
pop
or
psubq
pop
sar
mov
fnstenv
add
mov
outsl
or
xchg
xor
stos
dec
add
mov
bound
mul
dec
dec
and
aam
cmc
leave
repnz
lret
inc
pop
dec
js
cmp
ret
shlb
push
or
mov
or
stos
cmpsb
push
mov
arpl
jmp
mov
stos
jnp
jge
pop
das
mov
jb
cld
xadd
cld
push
shlb
sbb
mov
mov
sbbb
ficomps
fcmovnb
popa
push
dec
inc
in
loopne
xor
dec
push
repz
gs
cmp
xchg
pushf
pop
pop
loope
ja
stos
or
lahf
pop
xor
mov
mov
jge
out
fxch
and
es
fcompl
nop
xchg
xchg
sbb
clc
pop
cmp
jge
aam
add
mov
or
in
mov
stc
popf
push
dec
jb
aas
and
push
or
insl
inc
sbb
pop
dec
push
in
pop
arpl
mov
incl
pushf
mov
pop
lods
stos
mov
movsl
sbb
ret
repz
insl
loopne
out
loopne
repz
mov
sub
pop
das
sahf
adc
or
push
imul
movsl
inc
gs
pop
mov
arpl
add
shlb
add
pop
ret
pop
sbb
jo
add
push
ds
add
mov
test
or
nop
push
pop
push
mov
addr16
scas
imul
out
daa
add
and
xchg
mov
shrl
cmpsl
es
fldln2
stos
mov
jns
iretw
dec
mov
xchg
xor
sti
rcrl
jmp
pushl
push
insb
roll
dec
dec
mov
int3
scas
das
sbb
pop
call
push
pop
push
xchg
adc
scas
in
jp
inc
ds
push
sbb
sbb
xlat
je
mov
push
roll
sbb
scas
shrl
lret
clc
aam
push
push
iret
arpl
add
lea
cmp
repz
inc
xor
or
mov
pop
imul
out
sub
mov
and
xchg
negb
xchg
mov
loope
arpl
dec
cltd
movsb
dec
xlat
fsubr
adc
imul
push
cmpsl
insb
je
mov
jo
sbb
mov
lods
ret
stos
adc
fs
in
icebp
pop
cltd
loopne
int
test
fcmovne
mov
movsl
movsl
and
xor
mov
xchg
jnp
sub
stos
or
pop
addr16
cmpsl
std
adc
inc
data16
push
aas
stc
add
mov
das
mov
and
or
jg
sbb
inc
add
fwait
dec
fisubl
push
xor
fsubrs
fwait
inc
push
jb
cltd
call
and
shl
lods
test
jo
call
out
divb
mov
mov
pushf
and
mov
push
movsb
outsl
fdivrp
sbb
or
and
xchg
jge
sti
and
fnstsw
add
lds
pop
pop
lcall
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
in
js
sahf
adc
int
adc
xchg
pop
pop
fistpll
push
rcr
scas
fiaddl
sbb
sbb
scas
sbbb
push
pop
cmc
and
int3
sbb
fcmove
jno
adc
mov
mov
fs
add
mov
lods
xchg
fnsave
lock
pop
lods
xor
pop
lea
loop
in
adc
dec
shl
mov
dec
sub
mov
sub
sbbb
mov
mov
test
mov
std
or
ret
push
push
shrb
inc
or
cmpsb
inc
sbb
lret
mov
inc
add
fisubs
mov
mov
sub
pop
call
jne
inc
pop
push
je
stos
push
lock
cwtl
aam
mov
rcl
fdivrl
test
inc
cmp
mov
pop
das
pop
mov
ljmp
mov
bound
sbb
sarl
fldenv
push
fisttps
hlt
cmc
sbb
xor
nop
or
lret
lea
push
loope
das
stc
out
push
mov
xchg
insb
xchg
mov
in
cmp
fsts
test
inc
call
jbe
jl
cmp
les
int
sti
mov
lahf
loopne,pn
adc
stc
push
mov
pop
add
sub
and
aam
inc
icebp
cmp
push
test
aad
or
lahf
mov
add
loopne
xorl
movsb
sub
pop
popa
jl
adc
aad
test
dec
hlt
push
push
push
xorl
call
outsl
xor
push
add
and
sub
cmpsl
and
mov
ljmp
lcall
ficoml
stos
and
movsl
xor
sbb
jae
repz
popa
repnz
in
pop
aad
cli
fadd
adc
pusha
jns
mov
pop
pop
push
pop
pop
in
fwait
dec
pop
dec
push
push
int
clc
clc
movsl
sbbb
cmp
loopne
or
fnstcw
pop
ret
cld
and
cmp
push
cmp
icebp
sub
mov
cmc
iret
xchg
in
sbb
adc
sbb
sbb
repz
bound
jp
les
sub
mov
pop
shr
xchg
dec
adcl
daa
pop
enter
fstps
xor
mov
jns
or
and
jbe
je
sti
pop
mov
xlat
das
lahf
lds
cmp
mov
pop
daa
adc
test
sete
or
addl
pop
push
add
sub
jns
sbb
and
gs
fnstsw
in
insl
xchg
mov
call
jle
pop
cmp
out
ja
mov
fcomps
lcall
aaa
xchg
clc
sub
lcall
enter
loopne
cwtl
pop
dec
jnp
xchg
ret
cmpsb
xchg
sub
out
push
xchg
jb
mov
out
test
int3
test
lcall
sub
inc
dec
test
rorl
int3
mov
jae
mov
mov
mov
xchg
sub
or
or
cwtl
ljmp
ljmp
sbb
push
push
sub
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
xchg
jmp
popf
fbld
adc
test
mov
sbb
mov
cmp
mov
fimuls
fdivrl
cmp
cmpb
sub
push
sbb
mov
xchg
cmp
cmpsb
sbb
pop
push
lods
vpmaxsw
ja
inc
je
mov
dec
sbb
outsl
cli
mov
xchg
out
dec
stos
xor
fmuls
or
xchg
pop
leave
mov
add
lahf
scas
adc
xor
xchg
mov
jg
ret
cmc
pop
push
pushf
rcrl
push
test
jmp
movsl
inc
popf
inc
or
roll
lahf
movsl
push
out
fsubr
out
inc
mov
scas
ja
xor
add
mov
inc
fmuls
daa
arpl
pop
xchg
mov
jge
cltd
push
insl
mov
mov
or
and
xchg
xlat
mov
jecxz
gs
mov
cmp
cs
dec
mov
lods
xchg
add
jp
les
fcoms
ror
sbb
mov
scas
pop
fidivl
dec
jmp
ljmp
movsl
add
xor
mov
les
out
gs
stos
ror
ljmp
cltd
pop
loopne
fadds
sub
or
daa
je
cld
adc
pop
fiaddl
sbb
pusha
pusha
or
dec
or
shll
pop
push
sbb
inc
outsl
pop
push
sub
xor
test
mov
adc
sub
cmp
add
movsl
pushf
pop
data16
adc
hlt
insl
jmp
mov
into
scas
xlat
bound
imul
shrl
jmp
out
xchg
dec
inc
in
xlat
pop
movsl
movsl
addb
fldcw
bound
fbstp
xor
xor
pop
mov
mov
in
lds
sbb
fiaddl
and
jmp
add
in
gs
jno
shll
divl
add
or
mov
and
nop
sbb
sub
pop
dec
pop
mov
mov
add
jl
add
push
pop
mov
lods
in
std
mov
xor
nop
inc
nop
mov
mov
addr16
scas
cmova
jp
pop
sub
xor
mov
jl
addr16
popf
test
addl
jge
out
clc
and
xchg
lea
pop
bswap
jae
pop
inc
sub
scas
mov
push
sbbl
pop
popa
scas
pop
aad
enter
cmpl
mov
int
and
das
jne
sub
rolb
push
push
sub
xchg
aam
sub
cvtps2pd
ret
adc
push
jbe
scas
lods
mov
push
jae
push
out
pop
inc
pop
mov
push
xorl
xchg
enter
push
insb
push
jbe
mov
sub
mov
jecxz
decb
xchg
loope
scas
in
loopne
push
jg
lret
and
and
push
jmp
mov
or
mov
aad
jecxz
fs
mov
sbb
inc
push
jl
add
mov
lret
pop
ja
cwtl
sub
data16
and
arpl
xor
pusha
jecxz
adc
std
mov
add
mov
pop
cmp
mov
mull
sahf
loop
jns
js
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
mov
lcall
adc
xchg
mov
out
inc
pop
mov
test
loopne
in
loopne
outsb
out
push
lock
mov
add
lods
fldcw
sbb
sbb
xor
mov
subl
cli
out
lahf
adc
aas
push
dec
and
pop
push
mov
mov
cmp
xchg
fcmovnb
imul
mov
cltd
mov
adc
push
loopne
jb
mov
mov
jmp
and
pushf
aad
sbb
xor
outsl
push
push
in
roll
inc
sbb
pusha
xor
lcall
push
adcb
dec
ret
add
mov
or
pop
mov
testl
and
outsb
mov
pop
fcoms
test
xchg
int3
jae
lds
mov
or
loope
cmp
sbb
outsl
cltd
rcr
sti
std
xor
imul
add
sarl
cli
or
scas
rclb
ret
fnsave
sbb
dec
adc
roll
testl
push
mov
sbb
xchg
int3
aas
addr16
frstor
push
push
sbb
insl
sub
push
inc
adc
add
hlt
out
xchg
push
or
xchg
fisttps
xorb
jl
imul
iret
out
ds
pop
lcall
popf
xchg
enter
add
cmpsl
or
jns
jno
frstor
cs
lahf
lcall
dec
push
ret
repnz
pop
pop
stos
in
cli
dec
es
xchg
mov
rcrl
lcall
adc
xchg
jmp
mov
test
mov
xchg
mov
testl
mov
adc
in
shr
dec
in
das
pop
pop
mov
or
inc
int3
and
cmp
daa
jbe
addr16
idivl
cltd
daa
dec
dec
push
movsb
jge
addr16
daa
sbb
sub
adc
push
and
mov
mov
mov
and
push
sbb
into
inc
jne
and
mov
gs
subl
mov
imul
mov
icebp
mov
popa
push
lret
sub
imul
push
filds
jo
adc
xchg
sahf
mov
add
test
rolb
pop
sbb
pop
lret
addr16
jp
outsb
sub
lds
jge
test
adc
and
js
push
cvtps2pd
orb
dec
push
and
pop
xchg
push
push
cmpsl
pop
out
mov
push
or
mov
push
cmp
rorl
sbb
xor
dec
mov
mov
icebp
inc
cwtl
xor
call
shlb
sbb
loope
mov
cs
repz
insb
test
dec
loop
mov
dec
and
push
in
push
inc
repnz
jmp
pushf
rcl
sahf
fstpl
gs
lock
mov
nop
scas
fnsave
mov
push
into
mov
icebp
sbb
xor
xchg
xchg
xchg
adc
dec
or
mov
gs
mov
das
out
sub
add
inc
in
out
mov
enter
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
sub
jp
dec
test
adc
adc
adc
subl
imul
ret
mov
jae
jb
rorl
lea
nop
cmp
dec
mov
or
insl
pop
xchg
pop
stc
inc
mov
pop
insb
add
mulb
call
sub
insl
push
push
mov
lcall
mov
push
add
or
or
mov
push
repz
dec
xor
pop
mov
sahf
test
gs
cmp
push
adc
pop
loope
dec
iret
repz
sbb
mov
push
repnz
lock
dec
ljmp
loope
das
std
fs
das
lcall
stos
or
mov
inc
popa
les
clc
dec
cli
leave
dec
cli
sbb
insl
dec
push
pop
jae
mov
test
push
mov
ds
pop
aaa
push
or
cmp
iret
push
mov
aam
inc
inc
pop
out
gs
pop
push
pop
mov
push
shl
shl
push
inc
icebp
lahf
gs
xchg
aad
cli
mov
push
mov
jne
lock
lret
cvtps2pi
ja
push
in
adcb
jmp
fcomps
cltd
add
pop
aas
mov
iret
xchg
mov
out
mov
jle
push
xor
inc
data16
repnz
sbb
xchg
sahf
imull
dec
push
add
add
stos
loopne
jno
mov
jns
jbe
push
or
push
rorb
stos
gs
dec
push
mov
and
scas
sbb
dec
les
push
pop
mov
xchg
sbb
sub
int
push
cmpsl
sub
adc
xchg
lahf
jae
add
adc
dec
mov
xor
movsb
fiadds
cmp
pop
mov
xor
imul
inc
mov
iret
mov
hlt
pop
adc
popf
hlt
adc
fcomip
adc
hlt
ja
int3
out
and
xlat
std
mov
loopne
mov
push
gs
xchg
sbb
into
jecxz
dec
mov
xchg
cs
iret
or
bound
jb
and
out
scas
mov
out
xchg
ds
add
nop
inc
mov
jo
push
cwtl
mov
sbb
fisttps
xor
loopne
push
in
mov
mov
ror
jl
lahf
mov
xchg
or
aam
mov
hlt
cwtl
movsl
mov
jp
jae
sahf
sbb
inc
iret
fdivl
leave
or
push
cwtl
and
movsl
fdivl
dec
ret
bnd
mov
adcl
mov
add
xor
sbb
notb
xor
ret
das
int
push
push
add
mov
jmp
pop
ret
sbb
arpl
test
mov
cmp
lahf
xchg
in
adc
mov
les
sti
dec
mov
adcb
add
stc
xor
mov
test
pop
fmull
insb
cld
sbb
jns
jnp
mov
inc
dec
dec
push
mov
insl
adc
idiv
jp
jecxz
in
inc
or
test
loope
dec
xor
and
cmp
jg
jo
ss
fwait
aas
xchg
sub
insb
and
push
imul
daa
cmc
in
xchg
js
and
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
cmp
and
jl
adc
adc
adc
or
pop
bound
outsb
pusha
jmp
mov
or
int
dec
addr16
and
cmp
movlps
test
cwtl
rclb
iret
mov
cmc
pop
or
andl
loope
mov
pop
call
out
aad
inc
push
inc
cwtl
insb
lock
xor
cltd
pop
sbb
hlt
sub
lds
push
mov
push
arpl
inc
out
cmp
jbe
popa
inc
adc
adcw
popf
imul
loop
cmp
ret
fisttpl
faddl
aam
fbld
jmp
call
adc
sbb
test
xchg
les
fidivrl
in
xor
mov
js
repnz
iret
pop
test
xor
clc
or
lock
cmpsl
xor
andb
mov
xor
int3
aam
xor
in
mov
cmpsl
mov
js
fbstp
mov
dec
and
into
movsb
test
insb
add
jns
jbe
movsl
adc
add
movsb
fdivs
sahf
rcr
mov
cmp
xor
push
stc
xor
fcmovne
jo
sbb
adc
les
rcr
jbe
jecxz
jecxz
stos
inc
pop
sub
repz
inc
or
adc
push
mov
xor
pop
outsb
and
es
imul
in
stc
inc
fistps
jge
pusha
sarb
jecxz
flds
insb
add
inc
or
pop
out
mov
leave
xlat
pop
jo
dec
pusha
loop
push
sbb
adc
mov
into
xor
in
pop
fidivrl
sub
sarb
popf
fwait
push
inc
aaa
outsb
into
jno
adc
mov
testb
cmpsl
bound
jmp
iret
sub
out
jp
movsl
pusha
aas
mov
mov
push
popa
push
ja
mov
xor
xchg
test
imul
mov
fnstsw
out
xorl
leave
aas
adc
test
or
test
xchg
jecxz
add
sahf
xchg
out
xor
push
rcrb
cmp
dec
xchg
and
mov
jb
pop
push
xchg
sar
daa
mov
inc
inc
jl
cs
dec
mov
and
outsl
xchg
mov
mov
gs
and
mov
je
ss
inc
ficoml
mov
in
test
xchg
cli
mov
xchg
in
cmp
pop
or
mov
cmc
ljmp
jno
aad
push
int3
insb
dec
adc
shll
inc
jne
pop
mov
sbb
pop
sbb
pop
jae
jne
mov
sbb
fisttps
adc
fists
xchg
cltd
jmp
xor
fadd
scas
dec
mov
mov
mov
lcall
popf
test
sbb
lds
jb
sub
js
popl
dec
or
lahf
push
sub
cld
add
xchg
jmp
and
fadds
into
dec
add
xor
xchg
push
mov
in
xor
mov
or
mov
das
in
iret
mov
mov
xor
jmp
in
cmc
ss
sub
sub
mov
ss
js
xor
cmp
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
out
pop
mov
mov
adc
adc
mov
sub
jecxz
imul
add
scas
inc
lea
mov
push
insb
stos
andb
push
mov
sbb
popa
push
mov
or
inc
cmp
push
sbb
push
dec
push
aam
sub
lods
rorl
cmpsb
leave
push
jns
inc
ret
std
cld
mov
xchg
sahf
adc
in
adc
in
mov
cmpsl
jle
lods
jle
mov
arpl
push
pop
loop
nop
or
cmp
loopne
sub
subl
ljmp
mov
lock
push
test
dec
add
or
dec
push
add
aam
aaa
xchg
push
add
in
repz
mov
cmpsb
fwait
inc
insb
jl
out
cmpsl
adc
jbe
les
das
sub
jae
ss
fstpl
or
out
jbe
pop
sub
mov
fucomip
cmp
or
lahf
bound
dec
roll
sbb
xchg
sbbl
or
jle
dec
xchg
or
inc
mov
sbb
in
subb
fs
mov
push
push
or
gs
mov
sti
xor
outsb
or
daa
push
shll
or
cmpb
mov
data16
int
mov
push
jmp
dec
fcmovnu
out
rorb
movsl
xor
enter
mov
stos
mov
out
dec
cli
fldl2t
cmp
das
and
or
xchg
ret
outsl
cwtl
aaa
push
jmp
mov
test
addr16
adc
fwait
int
jp
jo
mov
aam
cmp
dec
adc
daa
rorl
push
scas
xchg
pop
mov
mov
icebp
push
xchg
loope
movsb
aas
cwtl
xchg
mov
mov
mov
jo
outsb
hlt
ljmp
fs
adc
movsb
shll
mov
cmp
aaa
insl
mov
mov
int3
adc
std
mov
lret
adc
inc
or
gs
or
mov
aam
jb
ret
lds
in
popf
outsb
mov
sbb
adc
sub
sbb
mov
dec
mov
add
int3
xchg
push
cmp
insb
cli
adc
icebp
pusha
and
xor
push
push
ss
pop
movsb
sub
popf
shll
jae
mov
pusha
in
cmp
lret
gs
lea
mov
lcall
lret
incl
daa
pushf
cmp
xor
in
out
test
or
push
outsl
inc
jmp
scas
mov
les
rcll
xor
inc
mov
insb
iret
insb
shlb
and
jae
in
add
push
mull
push
sub
pop
popa
sbb
pusha
gs
cmp
ds
in
lretw
mov
shrb
xchg
outsb
lret
call
add
js
mov
dec
cld
push
movsb
les
cltd
mov
jge
out
mov
pop
ja
mov
jl
ljmp
add
push
push
lock
jo
negl
lret
xchg
dec
scas
and
push
adc
loop
push
pop
cmp
outsb
sub
or
ret
dec
sbb
jle
add
mov
and
jp
pop
in
dec
xchg
mov
shrl
and
adc
shrd
jmp
ja
jle
sub
xchg
mov
test
jb
adc
adc
adc
mov
pusha
push
aam
sbb
jno
jge
xor
mov
fsubs
in
xor
imul
fmuls
add
mov
lcall
xchg
daa
movsb
add
inc
adc
in
in
addr16
or
mov
lea
aas
fsubl
sub
stos
lret
rcll
mov
or
dec
pop
testl
pop
jne
push
mov
aam
addr16
lahf
aam
daa
xor
ficoml
fstl
orb
push
inc
clc
in
xlat
test
add
imul
icebp
aad
icebp
loop
ss
mov
mov
cld
popa
lea
xchg
mov
setp
dec
out
xchg
int
sub
dec
mov
scas
push
mov
in
xor
icebp
movsb
and
jnp
push
insb
sbb
arpl
mov
mov
jle
repz
out
stc
or
sbb
data16
inc
testl
insl
sbb
outsl
or
jp
loopne
pop
cmp
or
push
xor
jg
jmp
sbb
sub
adc
push
add
mov
std
jae
jmp
xor
push
arpl
sub
pop
lea
inc
jb
mov
les
das
add
sub
fistpl
sub
jle
jle
mov
or
adc
ret
clc
jg
scas
lcall
sarb
sub
stc
insb
push
sahf
imul
iret
inc
andl
sbb
insb
jp
mov
adc
enter
adc
data16
mov
lcall
mov
mov
fcoms
or
test
cltd
jmp
lcall
data16
fsubr
in
sub
xchg
test
push
xchg
scas
cmpsb
jnp
mov
adc
dec
push
push
cmp
pop
xchg
negl
adc
aaa
mov
aas
outsb
leave
sti
fsubs
pmuludq
and
adc
mov
xchg
push
test
mov
popf
jle
mov
jmp
sbbb
insl
iret
mov
add
cmp
xor
add
push
rcll
je
xchg
mov
es
xorb
jl
push
cli
cmpsb
not
mov
mov
test
mov
jg
jbe
xchg
enter
loopne
test
mov
push
cltd
jge
shrl
movsl
fsub
mov
repz
mulb
in
inc
push
mov
daa
fmul
inc
adcl
int
add
adc
dec
pop
ja
xor
std
xchg
push
push
jno
mov
dec
sub
push
daa
lret
in
sar
call
in
sbb
push
adc
nop
inc
jmp
aam
call
dec
and
add
lret
sub
orl
xor
ret
cmp
inc
into
mov
add
in
mov
adc
add
pop
mov
push
rcrb
mov
push
and
dec
lods
imul
xchg
lods
pop
inc
dec
mov
xchg
dec
rcl
cmpb
fsubrs
test
pop
test
xchg
pop
lods
add
in
jns
les
fisubrl
dec
stos
dec
sub
rcl
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
aaa
lods
out
and
adc
int
adc
lret
sbb
xchg
clc
fidivs
insl
pop
cmp
call
inc
lea
pusha
stos
jecxz
out
and
jbe
xchg
shll
js
in
mov
pop
stc
sub
sbb
inc
call
loopne
sarb
xor
daa
or
movsl
pusha
sub
sub
out
ds
mov
cmpb
jecxz
mov
or
ffree
push
into
jb
dec
sub
divb
sbb
sbb
fnstcw
push
add
add
in
and
push
lahf
sub
push
hlt
repz
xchg
test
das
push
dec
cmp
add
dec
dec
repnz
jmp
push
aad
rorb
xchg
push
ds
loop
lds
and
dec
sbb
adc
xor
pop
mov
dec
movsl
mov
xor
push
leave
shll
push
mov
jbe
cwtl
stc
imul
testl
aad
rcrb
inc
rorl
test
ja
icebp
fsub
mov
fcmovne
jns
scas
in
rcll
out
js
pop
sub
jmp
movsl
xor
mov
mov
sub
test
addr16
sbb
inc
stos
ja
cmc
in
imul
test
and
mov
mov
inc
test
out
adc
and
imul
fildll
push
cmp
popa
lahf
bound
das
fucomp
inc
pop
test
mov
sbb
outsb
jo
cmpsb
add
cmp
popl
aaa
lret
lea
lahf
mov
fnstenv
add
cltd
or
pop
sbb
xor
ss
arpl
dec
xlat
es
mov
add
sub
out
mov
scas
shl
divl
movsl
int
aam
out
sub
aad
arpl
cltd
cmp
add
push
dec
mov
push
cmpsb
sahf
jle
adc
add
or
push
mov
or
aas
leave
ret
mov
ljmp
mov
dec
push
js
dec
imul
insb
cmp
mov
popf
mov
pop
repnz
xchg
xor
outsb
out
jbe
lea
outsl
stos
add
rcr
xor
xchg
cmp
mov
aaa
shlb
jmp
paddusw
xchg
dec
out
xor
cmp
jnp
jge
in
insl
xchg
sub
sub
sub
dec
push
rorb
rcrl
mov
cmp
xorl
xchg
mov
fbld
in
inc
loop
sub
in
out
test
arpl
xor
popa
pop
jne
pop
jecxz
in
mov
and
mov
je
sub
and
inc
movsl
mov
into
push
idivb
fstpl
jo
in
ret
loope
mov
xchg
push
or
test
cld
adc
out
push
addr16
push
int3
out
sub
xchg
adc
cwtl
mov
inc
sub
push
popf
movsl
jae
aad
aad
cmp
das
hlt
jg
or
mov
mov
stos
sahf
xchg
xorl
in
sub
xchg
and
pop
jmp
cmp
sub
mov
pop
cltd
push
lret
mov
push
xchg
or
cmp
fstpt
es
ja
jnp
lcall
bound
add
loope
sbb
xchg
pushf
mov
push
add
jge
lods
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
shrl
push
bound
adc
adc
mov
negb
popa
loopne
repnz
push
cmp
and
cmpsl
sbb
in
lods
cltd
xorl
push
xchg
sbb
repz
xchg
nop
push
sub
pop
mov
incb
std
mov
add
leave
fucom
pusha
fidivrs
push
sar
inc
cmpsl
inc
lods
push
je
shl
or
fwait
mov
jle
std
into
bound
pushf
and
in
stos
divl
aam
scas
ja
push
aam
mov
adc
das
jmp
repz
addr16
or
mov
insl
in
pop
test
xor
in
sub
xchg
loopne
out
jo
cmp
imul
fwait
iret
mov
div
in
push
sub
xor
in
xor
fsubr
sti
arpl
lcall
sbb
sbb
icebp
data16
jmp
stos
lahf
std
cmp
lcall
sub
divl
sub
add
icebp
stos
xor
pop
arpl
mov
ror
fcomi
stc
pusha
in
movsb
cli
in
in
daa
dec
push
jp
add
incb
push
adc
cmp
adc
aad
sbb
cli
xchg
arpl
push
in
icebp
and
cmp
pop
iret
push
mov
push
enter
dec
loop
mov
mov
call
addr16
popa
xchg
pop
mov
or
add
andps
js
dec
mov
rcl
mov
cmp
xchg
ret
pop
mov
jg
mov
pop
fs
cld
cmpsb
test
sbb
loop
pop
fildll
fucom
push
in
leave
add
add
jae
ret
mov
add
xlat
enter
xor
jmp
adc
lods
sub
inc
out
mov
mov
jns
add
pop
push
fisttps
rcrb
lahf
and
and
pop
pop
mov
stos
add
add
insb
pop
push
sarl
imul
xchg
sahf
bound
das
mov
push
pop
call
icebp
or
loopne
mov
pop
mov
aas
stos
cli
pop
pop
fwait
jp
mov
loop
mov
pop
pop
mov
jbe
int
jp
lret
hlt
fistpl
dec
daa
mov
cmp
add
inc
dec
cmpsl
lret
pushf
or
rolb
inc
mov
sub
sbb
mov
jne
scas
jp
in
inc
psubb
mov
xor
ficompl
popf
inc
sub
mov
mov
pushf
push
sub
mov
adc
sub
lods
sahf
mov
push
sti
or
ljmp
xchg
in
les
push
aad
dec
pop
outsb
in
sub
cmp
jo
imul
and
shll
xor
jecxz
mov
xor
jmp
add
xor
test
mov
dec
mov
aas
adc
movsl
enter
call
aaa
push
jb
in
data16
into
jge
jmp
xchg
pop
lret
jl
rcrb
mov
sbb
and
movsbl
mov
lret
push
fwait
mov
cwtl
mov
rcl
addr16
lret
pop
xchg
test
stc
lods
add
xor
scas
pop
cld
push
jnp
xor
cwtl
in
hlt
or
sbb
xchg
mov
push
dec
mov
jp
lahf
in
idivb
in
xchg
inc
aad
cmp
xor
stc
int3
sub
dec
les
loop
pop
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
fbstp
lret
pop
adc
xor
adc
daa
je
xor
hlt
jns
enter
movsl
cmpsl
or
or
fldl
xor
cmp
scas
mov
sbbb
mov
shll
dec
sbb
xorb
inc
xor
ljmp
pop
xchg
ret
daa
out
insl
cs
mov
or
notb
popf
not
push
push
add
js
push
in
jp
or
fmuls
nop
push
lds
mov
xor
cmp
mov
and
jns
stc
pop
mov
mov
lods
cmp
leave
xchg
mov
mov
mov
test
and
pop
jecxz
hlt
sbb
xchg
ljmp
dec
mov
and
sub
dec
pop
out
push
fdivrs
les
and
int3
adc
ficoms
xchg
dec
mov
xchg
in
lcall
icebp
outsl
test
xchg
pushf
decl
xlat
dec
ja
and
fcomi
lret
notl
pop
fldcw
xchg
lods
mov
sub
test
mov
call
xchg
jns
jmp
in
cmp
dec
out
daa
cmc
fxch
add
mov
pusha
and
out
pop
jbe
lcall
insb
and
aas
cmp
dec
inc
dec
into
xchg
add
leave
or
mov
movsb
fmulp
xchg
fucomp
je
xchg
mov
mov
adc
pushf
adc
testl
xor
pop
or
outsb
stos
inc
dec
mov
fnstenv
mov
pop
vmread
xlat
stos
sbb
xorl
fmull
mov
cmpsb
mov
sub
push
popf
sub
nop
lods
in
cs
or
jp
into
or
push
int
jge
cmc
sub
sbb
rorb
sub
inc
cmp
jo
jnp
xchg
pop
fsubp
cmp
pop
dec
sub
push
daa
dec
dec
mov
sbb
push
call
pusha
jb
sub
incl
out
xor
in
lock
or
test
mov
bnd
mov
rcrl
in
rcr
adc
jno
cmpsb
pop
sbb
cltd
je
xchg
movsb
lea
cltd
or
sahf
div
inc
sbb
pushf
dec
outsl
cmp
roll
push
lret
fmuls
je
fnstsw
fmuls
loop
xor
xchg
adc
jmp
mov
pop
inc
lret
mov
rcrl
rorl
and
arpl
ss
and
es
and
sub
stos
stos
lret
adc
jmp
outsl
fimull
dec
cmp
and
and
gs
call
mov
fcomi
jg
cli
lahf
les
loopne
dec
js
mov
mov
orb
push
xchg
testl
xor
les
mov
leave
cmp
xchg
mov
adc
mov
ss
shlb
sbb
dec
or
fbstp
sbb
mov
xor
cld
neg
lcall
pop
inc
iret
ds
jecxz
push
and
mov
shlb
xor
add
hlt
lea
sbb
cld
mov
lods
je
cmc
jns
add
mov
cmp
imul
xor
cld
pop
mov
add
dec
cwtl
cmp
cmp
dec
xchg
sar
push
pop
hlt
pmaddwd
lahf
test
arpl
add
jmp
add
sub
test
cmpb
push
cmp
inc
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
inc
ljmp
xor
adc
enter
enter
rcll
cs
je
aas
imul
pop
jno
shlb
jns
push
inc
clc
cwtl
js
pop
adc
lahf
imul
xlat
cltd
cmpb
test
stc
je
pop
add
mov
dec
in
ja
jp
pushf
scas
mov
push
fistps
sti
in
inc
in
xor
mov
pushf
inc
gs
jp
push
leave
clc
pushl
mov
pop
xchg
lcall
sbb
lock
stc
jp
xchg
test
fistl
jbe
enter
mov
jns
mov
adc
adc
out
push
sub
push
loope
jne
pop
adc
pop
lock
mov
test
and
mov
adc
push
jge
and
dec
add
ret
out
enter
out
sarl
pop
push
filds
push
jg
lea
jae
and
sub
push
cmp
or
cld
shll
hlt
or
in
fiaddl
dec
fsubs
jle
pop
sbb
fs
call
fs
and
das
addr16
sahf
and
out
mov
repz
push
dec
outsl
mov
pushf
scas
add
cwtl
sub
inc
mov
mov
sbb
dec
xchg
outsl
mov
cwtl
xchg
popf
sbb
int3
pop
mov
push
lock
xor
popa
push
roll
pop
fs
mov
dec
sub
sbb
clc
loope
dec
dec
es
xchg
and
jb
in
shr
mov
ret
and
adc
icebp
jae
movsl
xor
enter
fmull
xchg
shll
loope
in
leave
stos
cld
rep
lds
movsb
in
std
iret
inc
in
xchg
inc
fisubrl
nop
addr16
push
out
es
int3
or
xchg
insb
jbe
bnd
mov
or
or
dec
hlt
out
cltd
add
push
sub
pop
leave
adc
push
or
incb
xchg
in
aaa
inc
iret
adcl
xchg
mov
inc
outsb
fisttps
loope
lods
scas
xchg
jmp
sub
pop
sbb
mov
lds
pop
movsl
test
and
jmp
cs
push
mov
fcoms
cmp
pop
fwait
bound
xor
or
loop
push
dec
sub
dec
fldenv
cmp
add
push
lret
cli
cmp
dec
mov
subb
hlt
cli
outsb
sbb
lahf
xchg
mov
push
jbe
loope
fistl
ds
jae
mov
sbb
mov
nop
pop
dec
ret
mov
push
mov
out
call
inc
data16
xor
inc
int3
test
lods
fcmovne
push
and
cmp
adc
jns
add
add
sub
pop
xor
pop
lods
mov
stc
push
or
decb
cmc
jge
mov
arpl
xor
mov
jns
repz
push
xchg
dec
sub
scas
outsb
fs
push
mov
shrb
enter
adc
xor
aad
and
mul
mov
dec
pop
sub
xchg
sbb
cmpl
lahf
mov
xchg
in
sub
bound
ss
dec
sbb
add
lcall
loope
hlt
lcall
or
dec
xor
idivl
jno
fcmovu
inc
daa
jmp
mov
lock
push
mov
cmp
enter
cwtl
cld
shlb
lock
bound
sti
int3
out
mov
test
cli
xchg
add
inc
push
jne
mov
pop
pop
sbb
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
mov
lods
inc
dec
adc
xor
adc
iret
pop
inc
xor
jae
popa
ds
cmp
mov
sub
fstps
loop
adc
loopne
inc
fwait
mov
ljmp
xchg
fs
pop
repnz
mov
negl
imul
clc
aam
jmp
hlt
add
and
pop
push
and
int
mov
xchg
mov
pop
subb
push
loop
int
jmp
jns
inc
xchg
add
mov
xchg
push
push
jecxz
aam
sub
push
cmpsl
pop
clc
lahf
testl
testb
xchg
outsb
cmp
in
pop
dec
push
mov
inc
sub
cli
mov
cli
and
insl
sub
dec
lahf
mov
mov
xchg
rcl
push
cs
and
inc
je
inc
loopne
add
xor
jbe
in
push
popa
fcoml
mov
sub
sbb
call
test
movsl
mov
outsb
ret
in
mov
dec
jl
je
ret
mov
test
loop
mov
mov
and
repnz
pushf
insl
insl
jmp
fs
into
fdiv
popa
xor
aam
cmp
jae
and
adc
cwtl
fidivrs
sub
mov
mov
inc
das
mov
and
inc
jne
dec
out
test
movsl
jl
rcl
pop
cmc
mov
inc
dec
inc
loopne
mov
add
add
leave
loop
shrl
inc
in
add
xorb
sar
jb
mov
es
mov
call
stc
sub
call
add
fidivl
dec
je
fsubl
and
hlt
xor
mov
push
iret
inc
pop
hlt
dec
jle
outsl
fdivr
int
imul
test
test
jae
push
sub
jne
or
push
movntq
out
bound
ja
mov
xor
add
fiaddl
leave
and
pop
push
leave
mov
fwait
pop
or
fsubr
nop
shrb
out
mov
jg
insl
int
pusha
mov
aam
ror
pusha
lds
mov
out
dec
adc
inc
inc
mov
pop
and
test
sbbb
inc
ret
mov
sub
or
xchg
cmp
sar
into
jns
daa
or
jl
push
jg
rorl
pusha
andl
adc
adc
mov
cltd
aam
mov
fmul
fdivrl
mov
lods
inc
mov
cwtl
lds
pusha
push
fwait
jp
xor
outsl
sub
xchg
test
jmp
push
cmp
hlt
popf
lds
mov
sbb
xor
shrl
mov
sbb
imul
or
pop
xchg
mov
sbb
pop
loopne
mov
pop
repnz
xchg
sahf
loopne
jno
loopne
fmul
jge
add
add
xchg
dec
adc
insb
shll
outsl
fistps
jmp
add
inc
or
cwtl
lods
inc
mov
push
mov
imul
dec
and
inc
pop
test
adc
cmpsb
clc
outsl
leave
inc
push
outsb
lcall
aad
adc
sti
cwtl
pop
adc
push
sub
ja
push
mov
pushf
movsl
enter
xchg
pusha
popa
shlb
mov
add
inc
fcmovbe
test
pop
mov
mov
cwtl
jmp
call
roll
inc
jns
inc
cmp
inc
fsubl
outsl
sub
rcrb
into
pop
rcl
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
ljmp
mul
pushf
dec
repnz
dec
pushf
and
lret
aaa
inc
dec
repnz
ss
pop
jns
daa
mov
imul
lds
or
sbb
xchg
cwtl
repz
dec
outsl
mov
fsts
ds
daa
mov
ljmp
add
push
pop
rcl
pop
adc
mov
sbb
mov
out
xchg
outsb
or
pop
xlat
or
mov
lahf
pusha
and
outsb
lods
push
sub
js
adc
xorl
xchg
mov
into
mov
enter
pop
test
pop
ret
cmpsb
adc
cmp
and
inc
mulb
xchg
nop
mov
mov
scas
jo
cmpsb
in
in
sahf
insl
scas
push
fiaddl
test
mov
dec
out
fs
addr16
push
out
int
pop
scas
lds
xchg
pop
fisttpl
sahf
test
inc
js
hlt
cmpl
lret
ss
and
push
dec
outsl
adc
cmpsb
mov
out
sarb
mov
jmp
and
cmp
dec
adc
jnp
sub
imul
cmp
and
sahf
les
sbb
and
sub
js
fistl
ss
sti
lods
fcmovb
daa
pusha
movsl
cwtl
setge
cwtl
je
adc
mov
or
fwait
rcrl
adc
xlat
dec
xchg
pop
sub
add
xchg
test
bound
xchg
mov
jnp
repnz
aaa
je
mov
pop
cmp
aad
mov
fcmovbe
jae
mov
or
out
xchg
mov
mov
addr16
mov
stc
vminps
push
addr16
and
xor
ljmp
adc
enter
mov
sub
push
lcall
negl
adc
aas
or
into
sbbb
jns
icebp
mov
and
in
pop
hlt
sahf
fwait
mov
jns
add
mov
mov
cli
shl
jge
pushf
jae
jns
repnz
dec
pop
movsl
lods
and
cmp
push
insl
sub
pop
das
mov
es
ret
into
push
jns
lock
sahf
ror
in
push
movsb
ja
rcll
test
jecxz
mov
sbb
or
cmp
sbb
and
sbb
arpl
pop
mov
out
lods
mulb
fldenv
bound
adc
lcall
push
mov
push
inc
jae
ret
dec
mov
sti
mov
xor
inc
cmc
out
sti
sbb
adc
pop
in
jl
loope
mov
mov
jns
in
outsb
xchg
imul
stos
sbb
mov
mov
iret
fsubrp
popa
gs
or
pop
loop
pop
scas
pop
cmp
pop
jno
movsl
push
mov
imul
push
out
adc
scas
dec
mov
mov
insl
xchg
mov
mov
push
and
rol
mov
stc
dec
push
imul
mov
ret
stos
push
faddl
sbb
nop
int3
test
and
jno
add
shl
push
outsl
mov
sub
outsl
mov
into
and
clc
arpl
movsl
pop
pop
pop
in
scas
andb
test
fwait
jns
dec
sahf
stos
or
sbb
scas
cmpsl
push
in
clc
jae
dec
jmp
jae
xor
adc
movsb
adc
mov
repz
and
loopne
incl
cmp
movsl
and
and
pop
xchg
lret
repz
pop
repz
stos
cwtl
mov
jb
sbb
sahf
mov
pop
dec
cmc
jp
and
push
cmp
xor
adc
or
int3
and
adc
cmpsb
in
fisttps
cwtl
xchg
mov
faddp
inc
repz
and
lret
sti
rcl
xchg
mov
xor
adc
mov
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
jmp
jnp
adc
xor
adc
sbb
roll
fwait
lods
sub
jle
jge
cli
stos
bnd
sti
mov
jge
jmp
insb
push
add
sub
pop
aam
sub
fists
inc
pop
outsl
sub
jmp
jae
mov
xor
xchg
pop
sbb
dec
mov
xchg
leave
sbb
sub
push
adcl
inc
jg
sahf
xchg
mov
popf
shl
data16
adc
sahf
lods
mov
addr16
out
pushf
stc
stos
mov
insb
pop
or
xchg
jne
add
and
aam
jg
stos
fdivl
add
imul
mov
jbe
mov
push
into
pop
mov
cwtl
outsb
jp
lds
insl
pop
imul
push
adc
insb
pop
mov
hlt
pop
addr16
inc
and
lahf
test
repnz
out
jns
mov
popa
mov
dec
push
adc
fs
or
push
jg
pop
aaa
mov
mov
dec
dec
adc
jmp
aas
mov
sbb
push
in
lods
scas
in
jne
pop
pop
jne
lahf
shlb
leave
ss
lds
test
in
aam
pushf
push
xor
inc
mov
movsb
scas
adc
fstpt
push
rorb
xchg
xchg
mulb
stc
xadd
xchg
clc
push
pop
pop
sbb
dec
cmpsl
push
push
sub
dec
jle
mov
xchg
mov
sbb
popf
sub
mov
jmp
push
imul
adc
push
ja
adc
jnp
movsb
and
pop
jmp
cmpsb
fisttpll
cmpsb
iret
cmp
leave
xor
cmp
lds
test
lcall
mov
dec
mov
mov
popa
push
es
sub
mov
fcompl
aaa
mov
test
add
sahf
mov
ret
outsl
push
stos
jp
inc
sbb
cmp
xor
mov
test
dec
xorl
lods
insl
mov
enter
test
inc
xchg
mov
fnstsw
roll
mov
dec
xchg
cld
mov
popa
lret
pop
pusha
pop
test
pushf
cmc
adc
mov
cli
fidivrl
dec
mov
mov
and
adc
scas
lds
xor
imul
lea
je
dec
jnp
adc
jecxz
add
cmp
cmp
inc
loopne
imul
das
into
loope
cwtl
test
sub
mov
mov
ds
clc
js
jno
scas
dec
xor
cmp
les
movsb
and
jecxz
enter
sbb
mov
xchg
in
daa
scas
sub
loopne
xchg
pop
mov
in
insb
pop
mov
xchg
jmp
loopne
push
mov
dec
fwait
inc
cltd
rorl
pusha
add
ss
mov
into
or
pop
sti
cmp
push
mov
add
iret
imul
xor
xchg
add
in
mov
cmc
sub
inc
into
call
cmc
ret
fstpl
xchg
lret
shlb
pop
mov
cmp
int
lahf
dec
add
jle
sbb
jge
lret
iret
xchg
out
mov
rolb
push
sbb
mov
std
mov
into
test
add
jno
iret
out
test
jbe
jmp
and
gs
or
repnz
in
or
xor
adc
into
mov
xchg
add
add
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
aam
sbb
xorb
stos
xor
mov
stos
push
loop
mov
orl
xor
imul
sbb
jge
or
pusha
mov
arpl
aad
cs
lret
nop
cmpsl
push
jo
cmp
cmpsl
add
dec
rclb
mov
xor
addr16
mov
test
mov
add
jae
mov
sbb
stos
out
mov
mov
out
jecxz
add
in
mov
es
stc
add
dec
test
pop
sub
sub
pop
test
push
jns
adc
inc
mov
push
ss
movsb
mov
adc
fisttpl
stc
push
popf
outsb
stos
adc
stos
cli
mov
pop
pop
xor
subl
inc
test
and
test
pop
dec
add
jno
xchg
loopne
aad
add
dec
lods
mov
lods
sub
push
add
dec
gs
dec
gs
fisttps
test
popf
push
inc
fucomip
rcll
fiadds
pop
inc
cmc
cs
mov
push
sub
and
adc
imul
push
push
rcll
scas
in
cmp
sub
dec
outsl
call
jo
xchg
xor
adc
loop
push
and
jecxz
test
xor
and
adc
jo
mov
xor
dec
int
rorb
pop
iret
clc
rcrb
aad
and
mov
aad
or
cmp
xchg
jge
ficomps
pop
shl
pop
dec
cld
lods
repz
sbb
fstpl
mov
sub
shrb
enter
shlb
lea
ret
push
sbb
scas
add
adc
dec
jp
in
push
inc
cmp
pop
sbb
mov
inc
cmp
movsb
out
and
jne
jmp
je
pop
lret
add
aam
xchg
jp
in
bound
jbe
adc
loope
sbbb
imull
jns
rcpps
mov
imul
fsub
or
push
push
js
xor
xchg
mov
adc
addr16
sbb
xor
push
dec
xor
call
or
test
insl
jle,pt
inc
xchg
mov
outsb
jmp
test
scas
lret
inc
repz
inc
dec
pop
ss
lcall
fwait
testb
lods
sub
cltd
and
and
jp
popf
sahf
outsl
lea
mov
out
jno
outsl
jmp
ret
cmp
aad
jne
ljmp
xor
fisttps
sbb
flds
mov
push
repnz
test
add
mov
mov
gs
jne
cli
pop
mov
jo
std
add
push
popf
or
hlt
aaa
pop
lret
xlat
movsb
mov
aas
cmpsl
loopne
bound
lcall
nop
sbb
jecxz
lds
imul
fisttpl
inc
xchg
or
addb
xchg
sub
jno
add
add
subb
and
xchg
shlb
jg
int3
test
or
ret
in
es
fbstp
sub
adc
cmp
aaa
ret
jl
xor
ret
mov
movsb
ror
fdivrs
out
add
jg
adcb
xor
fstpt
and
aas
insb
andl
lahf
cmp
addr16
inc
dec
mov
in
jmp
add
lods
and
mov
sub
xchg
push
mov
xchg
push
sub
xor
mov
or
nop
rep
pop
mov
je
std
les
rolb
xor
jmp
mov
popa
lcall
xor
js
sub
adc
adc
adc
sbb
ljmp
pop
psubd
iret
test
mov
xchg
xchg
and
cli
imul
push
xor
pmulhw
subb
or
cmp
leave
mov
aam
ret
sbb
dec
cmp
add
pusha
push
out
call
sbb
stos
push
iret
cmp
xor
mov
call
cltd
pop
adc
inc
sbb
adc
insl
fwait
insb
adc
adc
repnz
push
sbb
xor
pop
lds
orl
dec
gs
loop
sbb
cltd
sbbb
push
sti
dec
in
xor
pop
push
shrb
out
icebp
mov
jo
hlt
in
inc
filds
out
push
sub
jae
xlat
or
dec
mov
scas
push
mov
cmpsl
jns
cmp
and
or
in
sbb
mov
sti
ret
and
das
xchg
jnp
xchg
pop
cmp
adc
mov
scas
js
movsb
xor
or
jg
lock
rorl
xchg
inc
push
mov
or
pusha
dec
push
jle
xorb
je
xchg
cli
sub
lahf
inc
je
imul
test
sub
mov
jo
pop
or
pop
mov
push
or
and
out
in
inc
in
arpl
jecxz
daa
lea
out
inc
ret
scas
xor
out
xchg
test
psubusb
shll
and
xor
mov
in
pop
out
jg
es
dec
stc
rcl
and
sub
pusha
dec
mov
dec
stc
mov
in
imul
mov
lods
push
mov
sti
mov
mov
inc
aas
sarb
push
sbb
int3
sarl
sub
mov
xchg
clc
mov
cmp
adc
ja
test
mov
xchg
sbb
imul
scas
pop
sbb
subb
pop
dec
cs
outsb
mov
dec
movsl
jle
ret
sub
mov
add
lahf
jnp
stc
mov
out
inc
outsb
jb
push
loope
sti
stos
add
jle
jbe
aad
mov
jbe
je
or
jae
fldt
inc
sub
inc
push
dec
dec
cmovl
ret
mov
xor
pop
dec
sub
sub
xor
insb
gs
cmp
cmp
mov
aaa
iret
and
shr
sub
shrl
adc
push
or
mov
pop
cwtl
sub
xor
jg
push
fmul
sbb
and
movsl
sbb
xor
inc
stos
adc
test
xor
push
dec
xchg
xor
mov
mov
xchg
or
sub
daa
inc
xor
test
je
adc
std
push
and
jne
fstps
call
decb
and
rcll
push
mov
mov
out
adc
add
leave
xor
xchg
jp
sub
fwait
into
xchg
xchg
popa
pop
shlb
sub
inc
stc
mov
fcomi
inc
cmp
inc
ja
sti
aas
lods
pop
cmp
fs
and
aad
cmpsb
ds
dec
ret
pop
lods
loope
mov
pop
ret
xor
and
daa
xor
mov
push
xor
jns
xchg
bound
sbb
push
and
pop
mov
mov
sbb
pop
dec
mov
add
or
sbb
and
dec
jp
jg
in
out
stos
ret
movsl
add
xchg
mov
dec
fiaddl
jmp
xchg
xchg
mov
pop
popf
imul
pop
shll
mov
mov
leave
pop
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
mov
lods
int
adc
fmull
adc
pusha
aas
xor
xlat
dec
sti
push
cmc
movsb
dec
and
inc
sbb
xchg
push
into
push
mov
in
xchg
in
push
pop
jge
insl
add
sub
xchg
mov
push
xlat
sti
mov
imul
inc
adc
mov
adc
pop
sbb
addb
push
jo
and
mov
inc
jp
push
fs
adc
jmp
inc
mov
and
push
inc
stos
sbb
add
push
push
addr16
cmpsl
mov
imul
mov
inc
lods
add
sub
in
push
lea
sub
xchg
or
cmp
std
mov
ror
test
icebp
gs
mov
div
subb
jmp
jbe
in
gs
cmp
in
fidivrs
mov
push
xchg
xchg
test
and
call
xchg
fimuls
lret
js
aad
cmpl
test
adc
outsl
hlt
rcr
test
lea
add
and
add
aaa
bnd
fcomi
sti
xchg
cld
pop
and
jns
xchg
mov
sub
popf
loop
sub
push
push
in
loope
inc
mov
xor
push
xor
or
cmpsb
lahf
or
lds
pop
ret
roll
popf
jg
test
push
push
and
mov
mov
push
lret
or
lret
js
add
xchg
imul
mov
jns
das
fcomi
aad
aam
push
div
jne
dec
stos
mov
negb
sbb
cmp
in
xor
xor
push
int
add
loopne
mov
mov
adc
inc
std
out
cmp
imul
in
sub
mov
cmp
clc
push
and
out
fmul
imul
lcall
inc
bound
dec
cmc
adc
je
xlat
std
fstpl
mov
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
and
adc
adc
movlps
sbb
sbb
xor
xchg
jg
fldt
jg
xchg
mov
in
xchg
rorl
push
push
jp
mov
ljmp
xchg
jp
jmp
std
cli
cmp
cmp
aam
adc
jp
sbb
sub
cmc
clc
je
data16
or
ljmp
cmp
bound
shufps
inc
pop
cmc
push
add
sub
mov
push
jl
leave
loope
shl
push
test
imul
int
int3
aas
mov
cmp
ja
mov
inc
icebp
lds
cmc
and
insl
mov
punpckhbw
and
imul
aam
ss
sub
movsl
outsl
pop
in
addb
jecxz
xchg
inc
jle
push
enter
loop
ret
push
bound
frstor
loop
mov
ret
push
adc
mov
js
scas
dec
or
es
jns
inc
fiadds
adc
mov
pop
or
outsl
mov
adc
push
mov
add
xchg
adc
data16
cmpl
jb
pushf
out
inc
dec
stos
pop
jbe
into
iret
int3
test
xchg
pop
xchg
xor
dec
jb
out
ja
jg
dec
stc
cwtl
mov
leave
cmp
decl
sbb
rolb
les
adc
lods
cli
cwtl
ja
xchg
dec
and
pop
push
int
jo
repz
push
test
jl
jns
int3
ds
sub
push
into
push
addr16
push
mov
lods
xchg
ficomps
mov
scas
movsb
xchg
sub
addl
cmc
ror
repnz
mov
cwtl
hlt
jle
adc
jecxz
lahf
lock
xchg
hlt
sub
xchg
xor
or
xchg
sarb
xchg
mov
bound
faddl
and
mov
add
add
pop
roll
add
stos
icebp
inc
mov
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
adc
sbb
adc
movlps
out
or
xor
jae
ss
mov
xor
mov
mov
or
fwait
in
leave
inc
addl
push
rorl
pop
jmp
stc
stos
mov
mov
aad
loopne
mov
iret
loope
lcall
jae
mov
jae
cmpsl
mov
and
mov
fwait
cltd
out
testl
jl
sub
xor
movsb
or
popa
jle
pop
mov
addr16
push
fldl
add
rcll
fmull
mov
lahf
iret
jmp
adc
ret
mov
inc
addr16
imul
and
cmpsb
jne
in
ja
sub
in
mov
push
test
mov
stos
out
mov
in
dec
pop
mov
inc
int
lahf
dec
pop
push
popa
ficoml
jnp
int3
mov
pop
imul
stc
mov
sbb
repnz
cmc
in
or
adc
ja
mov
sbb
cwtl
sahf
cmp
pop
shlb
add
lods
push
sbb
lock
jo
dec
or
pop
daa
dec
mov
add
pop
aaa
pop
push
xor
in
and
out
lcall
xchg
add
arpl
in
scas
sub
add
jle
ljmp
pop
adc
xchg
sti
sub
sbb
jmp
xchg
orb
jmp
push
aad
fistpll
mov
test
cltd
inc
outsl
lcall
pop
or
push
dec
and
push
mov
add
ljmp
push
hlt
mov
pop
inc
dec
sub
jge
and
and
dec
iret
mov
cmp
pop
adc
pop
xchg
xor
outsb
in
loop
shlb
push
scas
das
loopne
cmp
or
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
inc
nop
js
adc
adc
movlps
loop
sbb
mov
ds
inc
gs
imul
pop
imul
mov
cltd
cs
push
or
xchg
in
mov
inc
std
adc
add
dec
sub
xor
rcr
jecxz
push
std
call
inc
iret
nop
mov
mov
sub
mov
cltd
add
sub
xlat
out
pop
outsl
pop
out
cmpsl
sbb
mov
xor
sti
mov
xor
cmpsb
test
notb
dec
filds
mov
shr
xor
insb
jb
sbb
test
test
jne
xor
push
in
pop
add
jae
mov
jae,pt
mov
fldt
out
and
mov
fstp
jg
sub
inc
mov
repz
stos
jns
incl
push
insb
push
push
in
add
out
movsl
mov
les
int3
out
push
popf
outsl
jge
mov
mov
push
nop
mov
bound
mov
mov
bound
decb
jle
sar
shlb
dec
adc
xchg
add
lods
add
pop
or
jle
outsl
adc
xor
subl
xor
out
mov
pop
add
lock
inc
test
imul
pusha
aam
jg
inc
cwtl
fsubrs
fdivrs
pop
movsb
movsb
fs
pusha
cmpsb
mov
rclb
test
jl
cli
mov
lcall
or
sub
fcomps
adcb
inc
or
sbb
enter
pop
dec
xor
mov
sub
lds
mov
push
cmp
in
imul
setnp
mov
push
adc
cmp
arpl
dec
xchg
jmp
xchg
scas
imul
test
mov
arpl
pop
sarb
ret
push
adc
fisttps
int3
dec
iret
test
in
ret
mov
lcall
sldt
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
sbb
in
adc
adc
movlps
out
adc
sahf
mov
imul
push
sub
pop
mov
xor
imul
stc
mov
fdivrl
sub
sub
push
and
scas
std
cmpsl
cmp
mov
push
mov
jnp
mov
jl
notl
mov
lret
xor
divl
ja,pt
xchg
add
test
fisubs
jge
xor
pop
cmc
test
sub
mov
fmuls
bound
loop
cmp
imul
fdivs
popf
out
mov
pop
xchg
jecxz
pop
dec
mov
pop
stos
aam
jge
xchg
push
xchg
jle
adc
fsin
pop
inc
movsl
sub
cli
mov
sub
aad
test
rolb
aad
fsubrl
cmc
fmuls
pop
call
ret
mov
adcl
lcall
ffreep
jnp
mov
jmp
sbb
imulb
pop
jbe
or
pop
lret
ja
fbstp
or
out
cwtl
test
les
adc
mov
jno
sbb
mov
adc
sub
xchg
jge
shll
daa
mov
adc
push
ret
jmp
andl
fsubr
in
cmp
pop
mov
imul
mov
xlat
cs
pop
add
pop
cmpsl
fbstp
insb
mov
mov
lcall
push
xchg
imul
pop
loop
mov
cmp
pop
sbb
fsts
call
int
add
add
call
mov
and
sub
popa
mov
pusha
and
xlat
aad
cmp
pop
mov
sahf
jmp
push
popf
pop
adc
add
push
jmp
ss
add
inc
movsb
pusha
loop
jnp
pop
js
leave
fwait
inc
int
fs
data16
xchg
jno
pop
repnz
mov
mov
loopne
test
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
lret
xor
out
push
jecxz
mov
adc
incl
pop
test
pop
jns
xchg
sub
jns
das
sbb
jg
inc
mov
dec
xchg
mov
cmpsb
inc
mov
inc
or
jbe
stos
jae
aaa
cmp
leave
les
sarb
sbb
nop
pop
mov
outsb
mov
mov
inc
std
dec
lock
sub
mov
shlb
mov
jne
mov
out
jle
push
jnp
mov
mov
mov
cmovbe
lock
les
or
sbb
sub
cltd
push
fisttpll
xchg
mov
ret
outsl
or
cmp
ffreep
ret
and
stos
add
int3
jo
pop
nop
gs
movsl
test
cmp
mov
pop
cmp
push
sub
mov
ljmp
push
and
rcrl
sbb
cmp
cmp
repz
cmp
lock
in
jno
imul
xor
push
inc
shlb
adc
fstpl
lock
add
mov
push
sub
popa
sbb
test
cmp
or
divl
fstps
push
sbb
add
or
xchg
repnz
mull
js
scas
mov
pop
xor
pop
xor
mov
mov
fildl
pop
loopne
fcmovnb
testl
sarb
fsubrl
jmp
in
cs
int3
xchg
jmp
mov
idivl
push
fstpt
rcrl
pusha
push
scas
ret
push
xchg
cmp
lcall
lock
testb
cmpsl
or
fldl2e
test
outsb
pop
jp
xchg
into
mov
add
jae
int3
rcl
rclb
addb
out
xor
fbld
aas
mov
sub
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
stos
fs
or
adc
movlps
and
mov
cs
lds
pusha
jge
cwtl
addb
in
les
lret
ret
popa
mov
popa
jo
sub
add
inc
inc
rcll
adcb
movsl
cmp
cmp
ret
lret
fwait
mov
add
int3
daa
sbb
imulb
push
rcll
or
inc
pushf
dec
xchg
movsl
outsb
movsl
or
push
insb
dec
in
repnz
dec
mov
push
push
inc
idivl
ret
loope
movsl
xchg
jb
or
mov
cmpsl
mov
lods
and
in
shll
pop
in
paddusb
push
js
lret
mov
pop
pop
dec
mov
notl
rcrl
stc
cmp
testb
movsl
ljmp
fadds
shll
mov
jmp
mov
xchg
in
bswap
cmpl
jns
mov
or
push
cs
cmp
sbb
in
cld
adcb
out
cmp
aas
dec
sbb
lods
out
adc
lds
mov
or
jne
bound
jns
iret
adc
inc
insb
cli
push
push
add
out
clc
mov
dec
inc
cli
shll
inc
or
imul
xchg
mov
ljmp
dec
subb
or
fwait
outsl
mov
push
scas
mov
inc
fidivl
imul
push
push
jne
in
mov
adc
mov
stos
clc
jecxz
adc
adc
and
xor
push
inc
mov
jp
mov
dec
fstpl
mov
xchg
xchg
mulb
mov
jmp
pop
in
mov
loope
dec
rcrl
imul
cld
andb
adc
incl
sahf
push
cmp
cld
xchg
cld
cmp
cmpsl
test
ret
jmp
int3
add
sub
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
roll
mov
inc
pop
das
inc
mov
mov
and
mov
pop
cwtl
mov
xchg
sahf
dec
xchg
and
sbb
out
xor
inc
or
inc
nop
ret
dec
mov
je
push
mov
xchg
jb
and
imul
and
push
mov
xchg
loope
imul
mov
add
fwait
push
test
or
sahf
inc
stc
aaa
cmp
std
mov
testl
jmp
lret
leave
and
insl
xchg
pop
insl
cs
or
scas
inc
lea
or
repz
add
inc
aam
inc
jg
push
jp
mov
out
jo
lret
js
testl
add
ja
popf
out
mov
or
aam
stc
imul
push
scas
mov
aad
in
jne
push
mov
into
and
stc
das
dec
pusha
movsl
mov
sahf
pushf
dec
mov
mov
jns
cld
push
cld
clc
add
jbe
jo
aam
push
fstps
out
pop
push
dec
bound
stos
pop
aam
xor
and
jae
pusha
into
mov
sbb
sahf
and
xor
adc
jae
sub
jns
jnp
xchg
jbe
cmp
and
mov
out
vhsubpd
std
test
in
mov
sub
ds
cwtl
scas
cmp
push
pop
push
xor
out
test
notl
outsb
jne
adc
rcl
push
xchg
xor
xor
xchg
movsb
cmpsl
rorb
sbb
xchg
dec
movsb
sbb
cmp
xchg
mov
sub
mov
scas
pop
pusha
sub
mov
cmp
pop
movsb
xchg
mov
roll
mov
xchg
inc
pop
divl
shl
int3
mov
aam
fsts
fwait
rcll
into
pop
inc
repz
outsl
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
mov
lods
sbb
into
rcrl
jl
fcmovb
pushf
sbb
and
fsubl
pop
xor
pop
leave
adc
lcall
loop
lods
dec
cmc
dec
inc
dec
mov
dec
pop
cmp
xchg
mov
push
clc
mov
loop
cmc
orb
fadds
cmp
lcall
mov
fmull
into
mov
cmpb
xor
sub
cmp
sub
and
add
pusha
sbb
mov
push
rcl
inc
cli
ret
shlb
cwtl
stos
adc
rcr
sbb
pop
pusha
jge
lret
sbb
cli
xchg
sbb
mov
mov
add
mov
jae
lods
ret
xchg
jo
sub
scas
sub
insb
xor
into
sahf
push
push
daa
out
sub
mov
push
loope
inc
call
out
mov
pushf
mov
mov
push
xor
lcall
loop
push
sub
sub
jg
leave
out
pop
ret
jno
cld
aas
outsb
mov
in
rcll
cmpsb
or
jbe
xor
cmp
stc
mov
dec
int3
je
xchg
inc
int3
push
xchg
test
inc
jae
cmp
fidivrl
dec
loope
fcomps
bound
inc
inc
sahf
jb
int3
inc
or
addr16
sbb
nop
test
mov
jo
mov
hlt
lock
sbb
cmp
jge
aad
xchg
xor
dec
sbb
pop
mov
lods
mov
mov
adc
xchg
push
sbb
test
into
popa
sbb
add
mov
stos
push
push
cmp
dec
pop
insl
outsb
xor
jecxz
hlt
xor
outsl
cmp
std
cmpsl
pop
fimull
popl
push
outsl
xchg
mov
sub
cmpsb
and
add
xchg
cmp
dec
dec
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
das
scas
cmpb
movlps
push
data16
hlt
adc
insb
lock
and
cmpsb
jp
or
arpl
add
mov
xlat
adc
adc
repz
dec
xchg
add
data16
add
xorl
test
shll
push
sbb
xchg
outsb
stos
scas
adc
mull
pop
lahf
lds
inc
and
dec
xor
xchg
rcll
sbb
pop
jb
cmp
je
rolb
ret
inc
je
jo
cmp
shr
xchg
sub
aaa
es
inc
les
or
cld
xchg
je
jbe
sarb
or
xor
jge
repnz
cmp
or
arpl
mov
out
movsl
pop
int
int3
and
sahf
ljmp
jae
lahf
push
xlat
mov
xlat
jl
sbb
stos
jle
call
mov
jg
sbb
cmp
movsl
loop
adc
ljmp
pop
mov
xor
aam
sub
pop
dec
sub
jae
sarl
pop
cmp
pushl
les
lret
cmp
outsl
pop
inc
aas
aaa
add
mov
add
add
xchg
xchg
fists
lcall
popa
fistpl
ret
mov
pop
mov
insb
push
mov
dec
shl
lods
repnz
adc
lahf
push
jge
lds
push
jle
mov
pop
jno
fcmovnb
push
in
dec
pop
xor
icebp
and
mov
mov
shll
inc
add
add
push
ss
icebp
ljmp
adc
or
pop
dec
lods
inc
cmpsl
jnp
movsl
aad
mov
jl
mov
aam
add
cmpsl
sub
xor
xchg
cmp
mov
leave
outsb
mov
addb
les
aas
sbb
mov
ret
add
lea
sub
data16
cmp
lea
dec
std
js
stos
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
lea
push
cli
adc
fmull
adc
add
push
pop
adc
ret
fidivs
inc
icebp
adc
jns
cmp
push
cmp
and
adc
inc
inc
sub
push
xchg
sbb
pop
mov
int
cmc
xor
scas
cs
mov
cwtl
filds
lret
sbb
mov
movsl
shll
cmp
jge
sub
popa
or
and
loop
je
lret
jne
xor
jo
push
stc
dec
cmp
fistpl
mov
sbb
mov
xchg
mov
jge
fmuls
push
sti
xchg
adc
in
imul
daa
cmp
faddp
adc
cmpl
ret
repz
push
std
jmp
aad
jno
adc
push
adc
imul
enter
xor
push
and
add
pop
pop
adc
adc
jp
inc
ficompl
mov
jae
cmpb
aad
xchg
and
add
mov
cmp
ljmp
in
js
and
shlb
xor
inc
pop
adc
stos
loopne
repz
aad
pop
cmpsl
cmp
dec
out
es
ret
mov
jl
cmp
roll
or
arpl
movsl
icebp
mov
aaa
sbb
pop
cmc
lcall
enter
mov
xor
std
scas
in
bound
pusha
jo
and
sbb
mov
push
js
xlat
repz
and
lods
jnp
cmp
jbe
sahf
push
or
loop
sbb
sub
sbb
cld
stc
cmc
cmp
test
std
pop
push
mov
adc
or
cwtl
sub
adc
sti
ds
sbb
in
mov
mov
fnsave
and
add
xchg
stos
mov
mov
stc
push
sbb
push
mov
sub
cmp
mov
in
outsl
shrd
popa
ljmp
inc
loopne
mov
in
lcall
sub
adc
rcl
test
int3
sbb
aam
shl
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
mov
and
notb
adc
movlps
pop
pop
ficoms
sbb
cli
sahf
sbb
jb
ljmp
test
das
aad
aad
cmp
imul
in
and
test
sarl
xchg
xchg
hlt
cmp
adc
lea
cld
and
push
dec
lret
mov
sbb
daa
dec
push
push
ds
xor
or
or
enter
clc
add
lock
and
orl
sbb
addb
nop
adc
add
xchg
xor
rclb
cmp
arpl
movsl
lea
loopne
loope
push
lock
lret
mov
divl
xchg
shll
cmp
scas
xor
push
pop
scas
push
cli
sub
or
aam
add
bound
xchg
aaa
fidivrs
mov
pop
faddl
add
xor
ljmp
jecxz
mov
mov
lods
adcl
xchg
test
jecxz
inc
push
xchg
sbb
aad
cmp
jae
jg
push
loop
aad
mov
push
cmpsb
pop
cli
sbb
xor
sbb
mov
jae
push
mov
comiss
inc
xchg
int
fidivl
clc
int
insb
xorb
mov
repnz
xchg
xchg
xorb
add
cmp
mov
icebp
popf
les
ds
push
cwtl
pop
jg
setnp
test
and
sub
xchg
movsb
outsl
sahf
push
jns
arpl
jbe
jbe
push
sub
xlat
pop
mov
add
and
or
sub
movsl
cmc
fcomp
xchg
lds
scas
sti
scas
test
mov
outsl
ret
inc
xchg
or
mov
pop
or
adc
mov
sbb
decb
insb
push
mov
lcall
cli
mov
in
stc
sahf
movsb
sub
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
mov
mov
and
cmp
cmc
fidivrs
sub
push
repnz
sub
add
icebp
gs
cmp
xlat
pop
xlat
nop
int
jp
xor
xor
das
pushw
cmp
ret
ret
sbb
les
mov
ret
movsb
stos
xchg
enter
jge
lahf
mov
and
out
cmp
enter
je
xchg
push
inc
fiadds
addl
shl
mov
aam
xchg
sbb
mov
icebp
clc
lahf
dec
mov
cld
sub
inc
aas
loop
mov
jo
aas
incb
adc
mov
mov
sub
and
push
push
jmp
xchg
imul
adc
or
inc
jge
lds
or
lret
or
int3
xor
and
rep
test
cwtl
and
movsl
and
fsubrp
fidivs
in
jnp
loop
cmp
xor
sahf
mov
fsubrs
pop
push
adc
mov
mov
dec
out
jmp
inc
pusha
int
mov
lcall
xchg
or
mov
ja
adc
es
inc
jno
or
imul
out
movsl
or
mov
mov
outsb
xchg
xor
cmp
lock
pop
cltd
aaa
fisubrl
int
pop
js
pop
sub
xchg
sahf
sbb
loope
dec
xorb
adc
lods
mov
cmpsb
loope
push
cmp
fs
into
aas
jmp
jae
test
pop
aad
or
outsb
mov
sbb
mov
jne
jne
fwait
nop
lock
rcrl
cwtl
push
ds
sub
or
and
loopne
xchg
jns
cli
xor
loope
xchg
leave
dec
pusha
push
push
mov
jb
adc
insl
pop
cmp
cmp
in
add
in
cmp
das
loopne
outsb
xor
mov
lret
dec
cwtl
insb
mov
ficomps
xchg
xlat
arpl
push
and
xchg
cmp
in
jae
arpl
outsl
inc
push
rcll
cmpsl
ljmp
addr16
jecxz
mov
test
lds
mov
fmull
je
daa
cmpsb
push
mov
cld
mov
das
inc
mov
lret
mov
sbb
negb
dec
nop
mov
inc
dec
gs
movsb
cmpl
jae
cmp
out
xchg
lcall
das
jecxz
sub
xchg
imul
stc
hlt
and
popf
or
jno
insl
inc
or
sbbl
out
add
mov
dec
in
sbb
sub
or
stc
repz
mov
movsl
imul
adc
xor
aas
aad
fwait
out
and
pop
sahf
add
sub
testb
mov
and
xor
xlat
push
int
mov
jp
pop
mov
jne
push
nop
dec
out
daa
cmp
cld
push
adc
fdecstp
adc
mov
fbstp
fnstcw
jns
dec
dec
dec
push
push
xor
jecxz
mov
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
and
mov
jo
adc
shlb
ljmp
shrl
sahf
and
cmpsb
xchg
xchg
fisubrl
add
imul
mov
scas
jne
lods
xchg
push
out
mov
mov
cmp
insb
lret
or
pushl
loope
sbb
mov
adc
pop
pop
pushf
xchg
cmpsb
out
xor
xchg
or
push
and
sti
or
sar
pop
or
cmp
cmpl
and
cli
lret
mov
jl
push
imul
mov
stos
or
sar
push
dec
nop
dec
test
inc
dec
jmp
or
push
add
cmp
xchg
sbb
into
mov
arpl
daa
enter
xor
xor
mov
negb
fstpl
sub
arpl
lret
xchg
daa
cmp
jnp
add
xchg
mov
fs
lods
mov
sbbl
call
cmp
and
push
fwait
push
or
cld
mov
and
sbb
test
and
or
dec
push
push
sbb
push
jge
mov
inc
mov
dec
cmp
xchg
jmp
fs
out
shrl
push
jns
sbb
sbb
mov
mov
pushf
dec
or
outsb
dec
jbe
hlt
or
gs
pop
into
ret
cmp
enter
pop
bound
js
and
pop
cmp
sarl
aaa
mov
jl
clc
mov
aam
int3
add
cld
lock
push
jno
sub
and
shlb
mov
pop
into
jge
leave
mov
loope
fsubl
xchg
adc
sbb
mov
shrl
mov
push
inc
cmp
fs
mov
jno
add
pop
outsl
xchg
xchg
adc
xchg
orl
lock
add
shlb
lods
sub
pusha
fistps
inc
pop
push
test
les
rcrl
mov
outsb
imul
test
ljmp
test
mov
push
inc
fs
lods
lods
jge
xchg
cltd
push
mov
mov
jnp
mov
rclb
cwtl
outsl
out
les
lret
scas
jb
mov
loop
and
loop
mov
jp
jb
cmp
pushf
pop
pop
stos
push
adc
loopne
sbb
sub
add
addr16
cltd
pop
cmc
int
movb
jecxz
inc
orl
push
insl
lods
mov
jns
adc
in
repnz
in
filds
rolb
test
sbb
sbb
call
dec
and
shrl
repz
mov
push
dec
scas
xchg
imul
movsl
adc
jl
gs
jnp
mov
pushf
sbb
inc
and
dec
aas
rclb
aas
test
jmp
jle
iret
dec
gs
clc
sti
sti
testl
cmp
and
sti
rcrb
cli
jge
pop
inc
xor
push
dec
inc
loop
idivb
call
outsb
ljmp
inc
cwtl
pusha
je
xchg
loop
je
je
inc
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
ljmp
jo
adc
mov
mov
into
int
bound
xor
pusha
jge
outsb
xchg
xor
rcrl
test
loopne
jne
or
pusha
mov
lds
jae
xor
inc
jg
mov
xchg
pusha
jmp
mov
ds
pop
fsubrs
andb
ffree
add
packsswb
in
into
cmp
push
into
sbb
fimull
add
das
das
stc
cmp
pop
dec
call
orb
cwtl
inc
lahf
inc
outsl
xchg
pop
push
inc
fcmovnbe
pop
add
scas
pusha
jbe
fs
repnz
mov
and
mov
mov
in
pop
inc
jb
push
jg
movsl
lcall
add
ja
clc
lods
or
fnstenv
jmp
test
sub
cmp
pop
ror
or
xchg
jl
push
test
adc
jp
mov
lret
in
xchg
je
xor
sbb
dec
mov
insb
jl
cmp
dec
jmp
xchg
add
fbstp
xchg
aam
std
scas
dec
and
pop
test
in
jne
sub
fnstcw
push
adc
inc
or
dec
sbb
fs
loop
inc
in
test
stc
int
xor
iret
sbb
stos
outsl
sbb
icebp
pop
stc
fadd
pop
xlat
in
mov
push
outsl
ret
jge
mov
insl
mov
inc
ret
inc
push
sarl
mov
xor
jo
jns
mov
mov
add
mov
lods
xor
mov
test
loop
fcompl
lcall
adc
lret
xchg
mov
dec
movsb
fstpl
dec
jae
add
xor
test
xchg
out
je
or
jg
shrl
sbb
and
stos
dec
int3
mov
jbe
test
lahf
imul
cld
cld
sub
lret
sbb
xor
hlt
adc
rcrb
cmp
stc
cld
popa
mov
les
pop
pushf
lret
push
cmp
flds
push
xlat
mov
mov
aas
cltd
leave
or
inc
cmp
ss
popa
stos
sub
jg
or
mov
or
pop
enter
cld
jns
xor
push
stos
xchg
jp
add
sarl
popa
imul
mov
jae
pop
mov
addr16
inc
lock
bound
fs
xchg
testb
and
sbb
ds
mov
test
sub
loop
gs
fsubrs
subb
shrl
and
clc
inc
cld
mov
cmpsb
jecxz
lods
inc
dec
out
adc
push
pop
jnp
aad
mov
or
dec
shll
jb
xchg
fmull
incl
icebp
lahf
aam
dec
and
cmp
push
pop
out
xor
xchg
pcmpeqd
mov
out
cmpsl
add
loop
mov
xchg
arpl
and
test
pop
out
cwtl
jne
loop
sub
lods
rclb
mov
adc
adc
scas
popf
lahf
fisubs
shrb
and
mov
jl
fsubs
push
cmp
cmp
pop
sub
ja
mov
xchg
jge
pop
push
push
add
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
pop
and
fstl
adc
adc
sub
pop
sub
adcl
adc
sub
sbb
mov
mov
mov
or
and
aas
xlat
mov
cmp
push
nop
mov
mov
adc
xlat
ljmp
movsl
fidivrl
clc
mov
andb
lods
xchg
iret
xchg
xor
stos
xorb
dec
cld
push
jmp
sbb
ret
jmp
and
scas
fadd
fs
out
mov
mov
idiv
mov
add
jle
xlat
xchg
jmp
inc
or
mov
fs
aas
dec
mov
mov
int
xchg
scas
mov
int
jg
in
jne
in
push
lret
dec
ret
push
sbb
mov
xchg
adc
add
out
sub
lods
push
sub
sbb
in
dec
lret
mov
cmp
cmp
cmp
fsts
push
out
jg
bound
ss
clc
mov
inc
lret
jge
cmp
fcmovnu
loope
mov
sbb
rorl
pop
jge
jp
xchg
adc
mov
movsl
lds
mov
stc
xchg
add
sub
push
dec
inc
fmuls
pop
aaa
js
xor
cmp
inc
sub
outsl
ficomps
sbb
jp
shr
sbb
movsb
hlt
jbe
and
push
and
leave
inc
mov
std
sbb
inc
dec
sahf
je
test
inc
movsb
loopne
call
pusha
cmp
pop
negb
dec
popl
sbb
xor
jmp
mov
ds
push
xor
loop
rclb
dec
pop
repz
pop
add
popf
sub
jb
adc
loope
cmpsl
pop
aaa
push
icebp
out
jle
mov
jmp
pop
add
scas
repnz
and
add
int3
push
and
aad
inc
in
ss
and
loopne
sub
jbe
jae
adc
xchg
sbb
int
mov
stc
jno
fsubp
lock
push
dec
inc
mull
popa
inc
cmp
pop
in
shlb
jne
jne
add
pushf
adc
dec
jbe
jbe
mov
inc
movsl
add
push
test
and
pop
jle
sub
dec
int3
mov
mov
push
fldcw
sahf
out
in
ret
clc
and
mov
sbb
cs
and
ss
mov
jle
cli
mov
adc
sbb
lret
or
orb
icebp
into
sbb
fs
pop
js
sti
icebp
divl
sbb
inc
sarl
dec
mov
idivb
dec
movsl
mov
dec
pop
cmp
or
push
mov
icebp
insb
jae
sub
xlat
popf
and
jl
adc
jmp
pop
mov
or
xchg
sub
nop
and
movsl
in
pop
push
pop
and
dec
mov
xor
add
dec
dec
sbb
in
test
data16
and
shrl
add
xchg
lods
dec
rolb
xchg
fwait
mov
cltd
cltd
mov
aas
xchg
loop
cmpsl
sbb
push
clc
les
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
jbe
rep
sahf
aad
adc
adc
pop
mov
jno
xchg
jmp
xchg
jns
jle
or
adc
jb
lret
xchg
in
rorl
lret
cmp
adc
les
fsubrl
and
push
dec
inc
mov
cmp
mov
movsb
into
xor
pop
out
mov
shr
jns
es
push
inc
test
ds
movsl
jmp
lcall
add
mov
out
xchg
notl
daa
add
fstpt
ljmp
stos
pushf
repz
enter
pop
fistpll
gs
rcrb
shll
or
pmaxsw
cmp
outsl
les
mov
lcall
cld
rcrl
cld
out
stos
aam
aam
out
mov
imul
sbb
mov
int3
adc
xor
add
xor
xchg
dec
or
mov
ficomps
xor
fldt
inc
mov
in
outsb
lds
jne
inc
in
or
mov
cmc
inc
mov
sbb
into
pushf
push
pop
dec
js
xchg
pop
sti
movb
cs
inc
btl
inc
jno
outsb
decb
mov
scas
mov
pop
pop
and
add
icebp
in
inc
popa
sarb
lret
push
pop
sti
and
je
sub
roll
add
das
mov
inc
aam
adc
mov
push
fildll
std
sub
inc
and
test
lea
add
mov
add
add
mov
mov
sbb
clc
out
cmp
jns
imul
loopne
aam
les
mov
fldcw
push
fldenv
out
xor
or
xchg
and
ss
sub
cmp
out
insb
mov
push
and
mov
adc
mov
icebp
rcrb
lock
int3
mov
ret
jl
and
dec
inc
int3
ret
xchg
mov
testl
ss
std
fwait
repz
cmpsl
or
sub
sti
call
std
inc
pop
in
ja
dec
imul
mov
bound
lcall
xchg
jmp
in
xchg
or
int
sahf
stos
add
loopne
sub
jno
mov
adc
xchg
fldl
sbb
push
pop
inc
insl
xchg
jmp
ds
lret
push
mov
inc
xor
in
sbbb
fstpt
outsb
fwait
daa
xchg
xor
test
mov
dec
mov
push
jae
xor
ds
mov
sti
out
lahf
inc
insl
es
mov
push
inc
add
pop
inc
push
js
xchg
push
sbb
xchg
push
je
rorb
pop
ja
out
cltd
int
pop
dec
dec
int
fldt
mov
mov
adc
cmpsb
mov
ret
jb
les
push
and
jmp
jns
jge
scas
pop
sbb
jbe
xchg
punpckhdq
aad
jne
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
lds
mov
jo
adc
mov
stos
stc
aaa
cld
repnz
cmp
jnp
jo
int3
xor
xor
mov
aas
sub
loope
sub
xor
lahf
add
stos
dec
jbe
xchg
sbb
push
mov
add
sti
xor
nop
addr16
scas
mov
in
adc
or
push
jl
and
imul
out
push
imul
ret
add
add
mov
xor
sbb
sbb
test
inc
adc
mov
sbb
push
inc
insl
jp
shl
mov
or
pop
xchg
push
pusha
xchg
rcrb
sbb
mov
sub
loopne
xor
cmp
mull
loope
or
test
es
pop
lods
fs
mov
mov
xor
in
into
xor
cltd
mov
cmp
adc
lcall
dec
aam
add
dec
aaa
out
dec
out
mov
clc
xor
or
adc
ja
push
inc
stos
dec
std
in
enter
mov
aam
imul
xchg
jg
insl
mov
test
add
dec
mov
cmp
mov
out
mov
push
mov
lahf
jae
xchg
xchg
lock
nop
lret
out
in
fwait
das
ja
leave
xchg
jl
xchg
push
xchg
mov
pop
xor
and
xchg
adc
scas
xor
pop
mov
clc
sub
dec
loop
add
jne
rclb
mov
push
mov
cwtl
sbb
fsts
adc
test
sub
push
sub
mov
add
push
in
mov
adc
or
cmp
xchg
push
inc
dec
lds
lea
imul
std
mov
clc
xor
mov
cmp
jmp
aad
test
mov
mov
test
add
fiaddl
mov
es
xchg
in
or
mov
pop
inc
mov
adc
js
mov
out
jge
xlat
fstp
lret
mov
pop
jns
cvtpi2ps
insb
push
sub
xchg
lret
movsl
mov
dec
fwait
scas
or
or
or
aaa
pop
xor
outsl
pop
sbbb
jae
movsl
int
mov
sysenter
cmpsb
popa
std
sub
mov
scas
xor
test
lret
clc
test
mov
inc
inc
mov
jne
xchg
sahf
inc
icebp
adc
mov
sbb
xor
dec
loopne
mov
jl
sub
shl
das
pop
out
jnp
dec
pop
les
test
imul
int
xchg
jge
sub
dec
mov
sbb
scas
sub
xor
add
xchg
dec
pop
push
add
xchg
and
cmpsb
sbb
add
sti
pop
cmpsl
outsl
cmpsl
aaa
cmp
in
je
stc
pop
adc
in
mov
inc
dec
stc
mov
jns
dec
xor
fisttpl
jae
dec
fmulp
int3
xor
mov
push
push
or
jmp
ja
xor
rorl
enter
pop
int3
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
outsl
out
inc
xor
das
jne
test
ljmp
push
xchg
mov
aaa
cwtl
aas
pop
cwtl
cmpsl
mov
mov
push
pop
leave
pop
pop
cmpsb
lret
inc
or
loope
adc
popa
fisubl
inc
jo
add
jno
popa
xor
or
mov
pop
outsl
push
into
rcrb
lods
mov
sbbl
push
lods
mov
jo
dec
inc
sar
sub
movsl
pop
cltd
jge
fldt
test
imul
and
xchg
or
test
ds
js
mov
repnz
loop
adc
push
pop
in
out
fsts
call
xchg
sarb
or
push
cmp
adc
repnz
imull
rclb
rclb
sbb
xor
cld
xchg
insl
adc
aas
arpl
adc
int
nop
or
sub
lret
cmc
scas
push
movsb
sub
cmp
test
push
imul
mov
jmp
adc
js
push
pop
aaa
pop
jns
adc
mov
call
or
xor
pop
adc
out
or
xor
adc
cmp
sub
nop
and
sub
ss
jg
or
cwtl
lds
xor
xor
scas
clc
lret
jo
xchg
inc
cmp
in
das
ds
fisubl
dec
rcrl
mov
mov
aas
imul
out
stos
mov
cmp
sahf
cmc
push
in
mov
andb
xchg
movsl
sbb
mov
mov
and
mov
add
es
std
sbb
fucomp
push
outsl
mov
loope
xor
dec
cmp
lock
iret
add
dec
fbstp
add
pop
movb
jle
je
lahf
dec
mov
jg
cmp
push
movsl
les
inc
rol
fsubrs
mov
sbb
push
icebp
and
stc
jmp
cmp
push
aam
insl
mov
pop
mov
cld
in
mov
dec
add
push
pop
stos
mov
dec
mov
lods
popf
fwait
sbb
int
and
pop
dec
and
inc
mov
lret
fimull
or
sbb
push
cs
xchg
xor
jno
jmp
rcrb
fisubl
jne
int
in
pop
jl
cmpsl
out
fbstp
aas
xlat
mov
fidivs
xchg
mov
movsb
gs
mov
cmp
cli
jge
stos
fistl
cmp
ja
xor
in
inc
cmp
mov
sbb
add
push
pusha
stos
loope
xchg
sbb
mov
jbe
push
push
pop
ljmp
pop
out
es
in
cmp
arpl
sub
mov
daa
notb
cmp
pop
jecxz
aas
daa
cmp
int3
jb
xchg
dec
fisttpl
adc
aad
lret
mov
and
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
in
inc
pop
lods
mov
adc
jo
adc
ja
or
push
and
mov
sbb
xchg
test
adc
repnz
sbb
xchg
test
fwait
bsr
subb
sbb
adc
cli
aad
dec
popa
fmull
or
sub
jl
and
je
iret
push
aaa
jecxz
mov
in
arpl
lds
sub
data16
push
mov
sub
jne
rcl
jae
std
popf
mov
addr16
push
subl
xor
fnstenv
jmp
loop
mov
in
sbb
or
dec
push
dec
outsl
loopne
push
xor
in
insl
lret
imul
push
pop
mov
mov
xchg
out
dec
stc
add
fwait
mov
pop
jp
dec
sti
repnz
cmp
inc
mov
mov
mov
arpl
shrb
cmp
or
jp
out
js
jo
push
mov
pop
stos
fidivrl
jl
pop
sub
lock
icebp
xchg
addr16
lahf
pop
sub
jne
dec
out
lret
pop
popf
popf
cmc
outsb
xchg
int3
dec
shrl
push
cli
loopne
xchg
std
mov
inc
jno
fdivl
cmc
pop
xor
mov
mov
imul
cmpl
lock
pop
lds
xchg
push
sub
cmp
aad
inc
push
and
pusha
fidivs
jne
inc
out
loopne
lcall
push
testl
shlb
sti
cli
sub
call
mov
scas
jns
xchg
xchg
repz
gs
lret
jecxz
outsb
add
jle
dec
ret
jmp
shl
cli
call
inc
lods
cltd
aam
jmp
dec
pop
sub
dec
jp
push
popa
je
shrl
lret
sub
in
outsl
adc
pushf
popa
shlb
cmp
mov
jle
dec
jo
push
or
adc
jle
mov
sub
pop
out
lahf
jno
cld
je
rclb
stos
enter
sbb
inc
or
jno
aad
imul
or
sbb
dec
insb
lds
adc
mov
xchg
cmp
dec
lock
dec
in
shrb
sbb
jne
mov
popa
xchg
jae
movsl
idivl
lods
cmp
cmpsl
dec
fcomps
cli
and
addl
imul
push
ss
xor
sbb
or
and
inc
js
divps
add
pushf
xlat
inc
xlat
mov
shl
fsubrs
clc
mov
or
jno
pop
cmpl
add
lods
jnp
mov
sbb
sbb
jnp
mov
inc
mov
leave
push
int3
ret
pop
mov
inc
les
and
hlt
lock
or
jno
jne
xchg
xchg
inc
dec
aam
iret
bound
inc
cmpsb
jl
filds
add
sub
cmp
mov
push
mov
pop
lods
xor
xchg
shrl
xchg
insl
test
ret
xlat
lcall
and
subl
push
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
fildl
icebp
stos
push
mov
adc
adc
aaa
stos
mov
dec
push
daa
loope
fildll
into
shll
pop
push
mov
xor
scas
test
mov
movsb
int3
leave
das
aad
daa
pop
or
popw
dec
cli
adc
jle
mov
jle
daa
mov
ss
inc
lret
jnp
jle
popa
mov
sbb
mov
insl
ss
or
sub
xor
in
aam
xor
mov
lcall
xor
xchg
xor
cmp
jg
add
pop
pop
mov
push
jg
inc
jle
mov
xchg
insb
daa
lock
jmp
push
sub
je
cmp
iret
outsb
in
xchg
mov
jle
jle
pusha
das
dec
mov
xor
je
test
dec
jmp
push
jmp
ret
xor
xchg
push
mov
push
nop
xchg
insl
inc
fbld
adc
call
outsb
inc
pop
popa
jbe
das
mov
pushf
push
push
in
pop
shll
mov
add
adc
dec
jp
xor
movsb
sbb
in
push
xor
ss
lret
xchg
stos
mov
mov
in
xor
loopne
mov
add
vcvttps2dq
sbb
mov
movb
xor
push
ret
mov
xchg
test
fimuls
or
xlat
gs
sub
lds
bound
shll
stos
cmp
dec
pop
mov
call
push
xchg
mov
xor
xchg
push
jo
mov
mov
mov
movsb
xchg
mov
cli
cmp
push
push
arpl
outsl
push
mov
mov
cmp
cmp
jmp
or
popf
sbb
js
testb
pop
inc
push
push
aas
into
in
out
xchg
mov
and
insb
ror
jg
lcall
cmp
fdivl
and
pop
jecxz
loopne
lret
push
mov
push
adc
adc
jo
jns
pushf
cmp
or
or
mov
rclb
sbb
imul
jbe
adcb
fcoms
pop
popf
sbb
pop
xchg
lret
cltd
test
jbe
dec
push
cwtl
imul
outsl
lret
push
int
xor
addl
sub
std
adc
insl
xor
sub
dec
cmp
divl
data16
add
test
and
jle
shrb
lahf
cmp
hlt
fidivl
insl
sbb
imul
xor
sub
xor
fnstcw
insl
out
add
in
out
insb
and
jl
mov
push
fsubs
insb
nop
fs
inc
stc
or
inc
outsb
sbb
inc
or
push
cwtl
and
movb
jae
ds
imul
or
aaa
fcmovb
sub
xor
mov
movl
sarl
sti
cs
loope
mov
andl
aaa
jge
push
notl
data16
mov
movsb
icebp
or
add
inc
fistps
scas
sbb
or
pusha
fucomi
or
pop
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
sub
xor
aaa
xchg
mov
loope
int
mov
pushf
pusha
xchg
in
push
lods
or
and
cmpsl
mov
jbe
test
dec
push
dec
daa
mov
ret
stc
or
loopne
or
xchg
ret
sar
sti
test
fdivrs
clc
cmp
test
mov
jne
adcb
xchg
jmp
stos
push
test
sbb
jae
popa
push
cli
sbb
in
shl
mov
cmc
adc
es
jmp
adc
or
ja
loop
push
mov
in
insb
sub
cwtl
frstor
lret
push
inc
mov
jmp
test
xchg
add
sub
sbb
ds
js
in
punpckhwd
xchg
imull
lds
xor
push
push
enter
shll
xchg
cmc
mov
pop
popf
add
scas
js
ljmp
aaa
shl
xor
push
jge
scas
aaa
pop
jae
and
test
or
les
and
int3
xchg
dec
loop
pop
rcrb
aas
daa
mov
js
call
add
lret
or
or
xchg
roll
jge
mov
jp
pop
add
push
sahf
fstps
sub
insl
push
and
jnp
sub
xchg
call
jle
push
dec
xor
and
pushf
or
add
xchg
or
mov
jnp
inc
sub
lods
inc
js
xor
add
mov
arpl
jle
insb
loop
jp
clc
dec
sbbb
loopne
cltd
je
nop
push
subb
popa
orl
jne
aaa
out
mov
dec
push
sbb
xchg
or
dec
fisubl
push
sub
es
imul
mov
inc
or
in
jecxz
sbb
in
out
lret
jns
jnp
mov
cmc
out
mov
lcall
jne
out
inc
mov
cmp
add
fwait
dec
sbb
push
lahf
lea
pop
xchg
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
loop
js
stos
adc
stos
movlps
cmp
pop
fbstp
sub
int
fsubl
mov
inc
adc
shrl
pushf
mov
pop
mov
imul
popa
add
das
out
cmp
jo
enter
test
dec
jae
xorl
rep
pop
es
xchg
test
xor
ljmp
inc
add
repz
out
fstps
je
jno
cld
les
or
out
xorb
pop
in
push
clc
icebp
xchg
in
fistl
push
les
clc
in
cld
rorl
imul
jge
ljmp
ret
insb
xchg
cltd
inc
inc
sub
mov
pop
ds
jnp,pt
test
sbb
pop
pop
mov
in
repnz
imul
rcll
sbb
push
stos
orb
popa
ja
push
cli
lcall
not
xor
ja
and
jno
mov
bound
cmp
inc
lret
clc
repz
aaa
loope
das
add
insb
mov
add
mov
push
push
xchg
mov
push
sbb
imul
add
sbb
dec
jp
aam
dec
std
sahf
ja
or
ja
loopne
mov
xor
fs
out
test
mov
jbe
pop
gs
adc
mov
into
testl
cmpb
std
push
gs
jge
sti
jmp
mov
adc
test
repz
outsb
xor
stc
test
inc
mov
insl
inc
pop
push
dec
fs
mov
fstps
nop
pop
sbb
in
int3
icebp
push
and
les
adcb
sbb
jmp
or
add
loop
sbb
movsb
add
lock
jne
xchg
xchg
and
lods
pop
imul
mov
repz
ljmp
mov
and
mov
pop
pop
stos
xor
jo
out
mov
add
sbb
dec
repnz
scas
adc
and
movsb
dec
in
out
lahf
mull
movsl
mov
adc
mov
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
dec
jp
mov
adc
loop
test
loop
or
dec
aad
pop
xorl
jl
leave
aam
pop
mov
add
mul
shl
pop
xchg
mov
xlat
jae
enter
pop
push
add
adc
jle
push
iret
outsb
pop
cld
inc
xlat
dec
mov
push
push
sub
xor
imul
xchg
jbe
lods
hlt
sbb
cmp
ss
nop
bound
adc
push
push
mov
outsl
mov
mov
dec
cltd
pop
and
icebp
es
cli
fmuls
pop
mul
and
ret
mov
or
sahf
sbb
push
pusha
cli
inc
sar
mov
sti
jge
jmp
rcrb
fcompl
jle,pn
inc
lret
in
lret
sarl
mov
hlt
pop
xor
inc
mov
aam
sbb
xor
pop
push
movsl
jg
repz
jge
sbb
push
test
cmpsb
leave
pop
add
xchg
loop
cltd
sbb
mov
or
invd
cmpsl
or
mov
stc
call
push
fdivs
shll
sub
js
into
lret
je
cltd
push
push
js
push
fbld
out
ljmp
scas
movsl
cmp
sub
sbb
or
pusha
lret
pop
mov
push
test
nop
into
and
sbb
hlt
and
pop
add
sbbl
pop
and
fwait
jp
outsl
lret
dec
add
xchg
cmpsl
lods
and
repz
push
pop
cmpsl
and
hlt
and
addr16
pop
mov
fmuls
jp
pop
fcoml
mov
into
scas
sbb
enter
ds
inc
mov
or
jbe
imul
mov
jnp
xchg
dec
rcll
or
jecxz
sbb
xchg
inc
or
dec
pop
push
fcoms
jl
sub
out
lods
inc
sub
popa
ljmp
or
data16
ret
push
mov
pushf
push
std
mov
pop
leave
cmc
sti
leave
imul
dec
pop
ficoml
push
rorl
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
in
lcall
stos
movlps
jns
xorb
cmp
lret
sahf
ss
cmpb
cwtl
xor
cmp
push
adc
lods
and
int
jp
push
stos
pusha
adc
adc
and
xor
daa
mov
mov
mov
into
fcom
inc
cmp
daa
jle
inc
test
sub
cmc
and
jmp
mov
jo
mov
sahf
inc
test
inc
in
fwait
jo
mov
xchg
dec
js
fnstenv
xor
xchg
imul
mov
cwtl
inc
fidivrl
add
fwait
mov
push
adc
into
in
and
into
nop
dec
push
mov
sarl
sub
stos
or
or
mov
aam
inc
shr
in
hlt
xchg
dec
xor
arpl
mov
adc
and
out
add
jg
mov
test
insl
sbb
ljmp
dec
xchg
in
fisttpl
push
or
push
pushf
dec
incb
ret
and
xor
mov
pop
lahf
add
in
jl
icebp
scas
and
jle
loop
push
mov
mov
lds
cmc
adc
inc
dec
mov
scas
sahf
jle
jns
shrl
or
jg
push
adc
jge
ja
and
adcb
mov
jg
mov
dec
mov
dec
push
sub
cmpsb
mov
shll
lods
jge
mov
jnp
mov
lahf
mov
cmp
or
jo
mov
or
out
cmpsb
xchg
je
imul
add
fists
push
out
inc
fldcw
fbstp
imul
mov
pushf
or
mov
aas
adc
xor
and
inc
jo
loopne
roll
adc
sbb
mov
dec
pushf
int
xchg
sub
lea
ss
out
fimuls
xor
pop
mov
out
dec
mov
mov
jne
repz
sbb
cmc
insl
movl
clc
dec
sbb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
lret
insb
mov
adc
stos
movlps
adc
int3
xor
movsb
sbb
add
in
cmp
jns
stos
call
cwtl
xchg
add
and
leave
fimull
jecxz
cmp
add
dec
bound
push
push
loopne
xor
and
imul
ljmp
mov
push
es
lret
push
shrl
dec
ss
testb
repnz
rorb
imul
in
daa
lea
cwtl
mov
ljmp
push
or
ss
orl
mov
dec
xorl
iret
lods
jno
dec
push
sbb
ret
decb
xlat
cmpsl
cmp
hlt
xor
mov
jp
pushf
dec
jnp
jmp
test
mulb
je
fcoms
lods
sub
test
pop
inc
ljmp
pop
mov
dec
and
inc
in
add
push
mov
sbb
je
dec
sbb
imulb
jle
cmpsl
add
pusha
cmp
mov
sti
outsl
mov
std
inc
xor
call
mov
daa
mov
fdiv
pushf
sub
dec
push
dec
sub
jge
outsb
shl
add
inc
es
dec
and
mov
or
adc
or
subl
inc
movb
mov
jl
loope
adc
fadd
xchg
jns
out
jbe
mov
in
adc
jle
gs
scas
dec
int3
dec
push
jl
lahf
lcall
dec
stc
mov
inc
ss
int
les
int
lret
stc
cmp
test
test
cwtl
and
sbb
lahf
stos
or
pop
push
scas
mov
and
inc
outsl
sbb
mov
pusha
daa
mov
pushf
leave
in
int3
xor
shll
mov
jge
or
sti
mov
into
flds
stc
mov
jne
in
inc
pushf
adc
aad
jns
stc
mov
cs
mov
movsb
into
and
jmp
push
lcall
add
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
cli
test
or
dec
scas
rcl
xchg
sub
inc
mov
xchg
xor
nop
loopne
out
mov
fs
xor
test
out
outsl
sbb
mov
jecxz
jmp
arpl
and
faddl
loope
add
push
adc
mov
or
sub
cmp
cmp
ss
adc
and
xchg
add
mov
fsubs
mov
les
lds
mov
pop
adc
xor
enter
in
insb
enter
pop
scas
mov
jp
bound
jge
std
mov
push
adc
push
or
divb
inc
adc
or
inc
addr16
std
mov
lea
push
mov
int
sub
mov
test
pop
jno
or
fldcw
flds
mov
dec
xchg
fs
sub
mov
imul
pop
xchg
adc
lcall
xlat
sbb
mov
sahf
and
xor
mov
outsb
mov
jmp
and
sbb
sub
and
xchg
lret
pushf
cmp
jns
je
bnd
test
shll
mov
lret
and
outsb
fwait
xor
or
cmp
sbb
adc
aas
mov
mov
in
outsb
mov
shl
insb
add
test
xor
jae
js
xchg
sub
jl
sbb
cmp
cmp
inc
mov
push
add
testl
pop
mov
mov
cltd
fwait
add
cmp
push
cltd
cli
or
imul
mov
sbb
in
sub
push
out
cmp
test
sbb
out
jb
push
lahf
dec
insl
xchg
xchg
into
jl
ss
andb
outsl
pop
sarb
add
nop
cld
daa
sbb
icebp
mov
mov
push
es
fldt
mov
test
daa
ret
imull
sbb
or
iret
stos
into
mov
subb
lods
sbb
fldt
xor
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
fsubrs
outsl
jns
xchg
dec
pusha
mov
out
adc
loope
inc
test
mov
shrb
ljmp
test
jle
clc
out
lds
fnstenv
pop
lea
testl
pop
rorl
push
sahf
xchg
sub
enter
adcl
dec
push
les
sbb
inc
sbb
jge
call
mov
js
xorl
cs
push
ret
jle
add
sbb
sti
push
loopne
jbe
jmp
test
test
int
imul
cmpsb
lret
xlat
xchg
hlt
push
jnp
je
insb
sub
push
in
sbb
cmp
mov
adcb
pushf
mov
cmp
test
test
loopne
xor
repz
fwait
mov
pop
mov
clc
and
je
push
dec
rcrl
inc
stos
aaa
sbb
jbe
stos
stos
lods
int
jns
test
push
adc
and
xchg
in
lret
dec
push
mov
xabort
adc
sbb
adc
testb
sbbl
mov
fimull
lret
mov
fdivrl
sub
call
rclb
div
sbb
add
xor
cmp
lret
pop
jns
shll
dec
hlt
loop
dec
sti
movsl
mov
sbb
jne
lock
gs
ret
test
adcb
mov
dec
fwait
popf
pop
xor
inc
test
cmp
repnz
add
mov
xchg
inc
shrb
dec
daa
xlat
outsb
dec
dec
lea
dec
jo
test
push
in
je
xor
negl
int
mov
mov
shrb
inc
mov
ret
psrlw
test
mov
adc
mov
xor
mov
subb
lret
repz
aad
jmp
adc
faddp
imul
lods
andl
push
dec
les
shlb
lds
push
push
sbb
stc
test
add
mov
mov
xor
shll
outsl
adc
test
or
mov
dec
xchg
adc
xchg
mov
adc
scas
cmpl
and
popf
loope
test
inc
out
push
xor
ss
xchg
mov
mov
ljmp
icebp
xchg
lret
cmp
mov
cmpsl
aaa
inc
negl
out
inc
adc
sahf
arpl
add
int3
test
lds
pop
enter
mov
aad
jle
push
cmp
cmpsl
insl
in
int
inc
adc
xchg
mull
enter
cmp
in
push
adc
test
fldenv
aad
cmp
mov
mov
mov
in
test
es
cmp
sahf
inc
push
xchg
jb,pn
rcrb
pop
repz
add
mov
xchg
js
insl
loope
push
imul
mov
and
mov
pop
cmp
inc
in
adc
lods
mov
mov
cmpsl
loopne
dec
adc
imul
pop
cmp
inc
lock
inc
scas
int
aas
in
repnz
xchg
mov
rcll
fsubrs
and
test
scas
dec
sub
mov
rcrl
xchg
add
fidivrs
xor
stos
pop
jne
mov
addr16
dec
fwait
ljmp
jl
inc
bound
dec
mov
pop
mov
out
stc
dec
sub
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
mov
adc
pop
adc
adc
into
aas
ljmp
arpl
aad
int3
unpcklps
xchg
and
sub
test
in
adc
dec
sahf
mov
pop
mov
sbb
xor
mov
shlb
insl
push
jb
mov
push
xchg
pop
adc
loop
decl
or
fidivl
js
stc
in
cmp
inc
mov
pop
cmp
in
dec
add
pushf
add
mov
jnp
cmp
aaa
sub
cli
adc
fiaddl
lret
xor
test
call
push
fiadds
mov
bnd
dec
fists
inc
cmp
adc
push
test
pop
xchg
andl
loope
pop
jbe
cmp
scas
dec
scas
pop
cmc
inc
divl
xor
ror
mov
xor
mov
je
cmpsl
stos
out
mov
sbb
sar
mov
mov
push
imul
int3
add
and
js
sub
in
sbb
test
inc
das
cmp
fldenv
mov
cmpsb
mov
lods
cmp
aas
push
pop
add
pop
pop
mov
or
repz
xor
add
adc
pop
movsb
std
pushf
jmp
data16
pop
xor
xlat
mov
popl
and
pop
fistpl
outsb
adc
xor
roll
dec
popf
fsubs
jae
adc
cwtl
xchg
mov
mov
inc
loop
js
pushf
lea
daa
and
sbbl
in
sbb
jp
adc
jae
add
add
sbb
mov
xor
or
fs
push
pop
cmp
repz
pop
je
pusha
jnp
shll
push
sti
mov
pusha
pop
imul
add
pop
or
xor
and
jl
out
lahf
jnp
adc
fsubl
in
dec
popa
jge
leave
mov
mov
lea
add
pop
push
pop
jl
or
inc
pusha
jmp
pop
stos
dec
das
ljmp
adc
jl
ret
jo
orb
mov
aas
fstpt
xlat
in
xor
stos
jmp
jb
xor
insb
dec
outsb
sbb
mov
and
mov
push
inc
pusha
lods
mov
mov
xor
push
aad
mov
cli
sub
push
mov
pop
mov
mov
sbb
cmpb
hlt
mov
and
sbb
jp
inc
ret
mov
mov
xchg
xchg
in
in
cmpsl
repnz
cli
repz
cmp
lods
xchg
mov
cmp
mov
fists
sti
jo
xor
lds
fistps
ret
lahf
fnstenv
int
and
and
int
adc
add
ret
rorb
cs
movsb
aaa
fistpll
fimull
aad
and
or
imul
mov
movsb
mov
inc
cmp
cmp
jne
add
jns
dec
adc
sub
pop
mov
mov
fcoml
inc
rolb
das
imul
push
mov
pop
dec
sbb
in
mov
dec
mov
mov
out
adc
ret
fs
ja
jle
dec
ficompl
dec
push
mov
data16
out
xchg
daa
mov
mov
mov
arpl
cmp
xor
stos
xor
orb
inc
mov
icebp
mov
dec
testb
or
add
dec
loopne
xchg
and
cltd
mov
jns
loopne
cmp
jno
fwait
sar
pop
xchg
inc
or
cmp
stc
and
mov
dec
mov
dec
aaa
pop
jo
out
and
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
aas
xchg
push
in
mov
adc
movlps
stos
test
hlt
mov
push
lret
jmp
cwtl
mov
ss
inc
pop
into
add
mov
inc
xchg
xchg
adc
or
sbb
ss
ljmp
pop
in
movsb
lds
mov
lea
cmp
mov
and
mov
push
mov
das
adc
fimuls
jns
jo
je
push
jae
dec
clc
adc
push
and
scas
cmpsb
mov
inc
jae
push
and
call
pop
stos
out
out
sbb
shll
ret
ficoml
lahf
or
xchg
cmpl
dec
adc
jb
jl
stc
sarb
dec
inc
pop
mov
sbb
xchg
push
inc
pop
cmpb
stos
push
loop
mov
cmpsl
ficompl
fwait
out
int3
push
cmpsb
xor
lahf
xchg
or
xchg
xor
insb
sbb
xchg
push
or
fdivrs
dec
and
lret
movsb
clc
jns
loopne
sbb
nop
movsl
ret
das
ss
adc
push
pop
sub
xchg
int3
adc
es
aas
int3
jne
xchg
push
pop
inc
lods
jp
std
sbb
xchg
ljmp
mov
xchg
icebp
incl
pop
ss
imul
sub
dec
sbb
test
mov
and
ret
mov
or
mov
filds
and
sbb
cld
sub
xor
jmp
xor
dec
shl
leave
dec
pop
jnp
cli
cmp
je
lcall
das
or
sbb
je
cmp
mov
push
dec
call
or
int3
jle
jecxz
adc
add
addr16
insl
or
aaa
imul
jmp
push
sub
bound
adc
or
mov
aas
pop
roll
fcomp
in
mov
and
or
ds
lea
fiadds
jns
scas
cmp
push
shl
fst
pop
mov
mov
popa
mov
dec
jns
stos
jae
cmc
dec
pop
adc
xor
and
test
add
std
sbb
lds
mov
mov
popf
cmc
iret
jb
sub
data16
and
xchg
movsl
js
and
sbb
cmp
frstor
fisubs
ja
adc
lcall
mov
clc
lods
or
xchg
ss
inc
insl
push
mov
jne
add
push
mov
mov
jne
push
mov
push
cmpsl
inc
or
call
out
sti
sti
jecxz
cmc
sbb
lcall
fwait
jno
push
push
mov
push
sti
fimuls
shll
int3
loopne
fstl
mov
mov
popf
xchg
cs
fsts
push
cwtl
rcr
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
jno
and
call
xlat
xchg
cs
mov
mov
out
or
cmpsl
mov
je
cli
stc
fwait
mov
mov
ljmp
mov
mov
xor
inc
dec
movsl
push
xor
pop
adc
jle
pop
aas
dec
sbb
mov
iret
pop
xchg
jnp
sub
mov
jb
orl
mov
mov
and
cmpsl
fstps
pop
dec
push
and
push
outsl
inc
icebp
rorl
mov
lods
or
test
nop
mov
into
fwait
test
bound
add
loopne
lret
push
lret
push
jae
mov
addr16
loop
mov
pop
popf
shrl
dec
xchg
add
test
adc
jae
sbb
js
ds
in
sbb
sub
sbb
push
mov
cmp
fdivs
xchg
imul
mov
sub
mov
adc
popa
adc
jnp
imulb
mov
and
mov
pop
xlat
cmp
test
repz
jge
xchg
ss
and
sbb
push
fsubl
bound
sarl
sub
mov
fldenv
imul
cs
stc
push
mov
push
roll
les
lock
push
repz
mov
std
or
mov
xchg
bound
data16
cmpsl
std
sub
addr16
adc
pop
stos
test
cmp
stos
imul
mull
addr16
in
dec
xchg
xor
int3
or
sub
call
rorb
dec
pop
imulb
jg
scas
pop
outsl
mov
aaa
push
xor
testl
mov
cmpsl
adc
repz
fsubs
add
xor
imul
xchg
push
dec
jbe
cs
enter
inc
in
insl
pop
and
or
push
add
fs
mov
int
jl
cmc
dec
movsl
mov
loope
call
add
pop
push
xchg
mov
test
cltd
push
popa
push
sarb
xor
int
fisubrl
xor
inc
stc
pop
jae
mov
filds
add
mov
add
aad
sub
pop
pop
xor
inc
ret
pop
imul
xchg
xchg
mov
and
cltd
xchg
xchg
loop
hlt
pop
shrb
out
imul
pop
sub
cwtl
icebp
pop
jmp
ficoms
mov
mov
xor
pushl
pusha
cmp
cli
xchg
inc
sbb
pop
xchg
cmp
xor
mov
pop
pop
adc
sbb
sbb
sahf
inc
movsl
fdivrs
jbe
dec
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
pop
lods
add
adc
movlps
push
stos
cld
xor
and
shl
data16
mov
xchg
nop
inc
mov
jecxz
jo
xor
fldenv
jle
xor
dec
out
add
and
mov
imul
mov
jmp
nop
mov
jge
ss
iret
push
fwait
js
pop
inc
and
addr16
xchg
mov
fsubr
push
in
xchg
xlat
mov
mov
adcl
push
int3
pusha
jmp
sbb
xor
mov
or
stc
mov
in
pop
dec
jle
rcrl
xchg
pop
aas
add
xor
add
int
adc
stc
inc
out
minps
orl
pop
fildl
fcompl
adc
lods
popf
je
mov
inc
adc
fwait
xor
mov
xchg
mov
xlat
mov
xchg
adc
pop
pushf
lcall
mov
repnz
lret
cld
add
mov
cmp
aad
xchg
sub
shrb
mov
rcll
sub
test
js
cli
push
dec
aaa
jge
aad
in
popa
push
ret
movsl
lcall
nop
or
or
and
sar
pop
and
js
leave
sub
push
xor
iret
popf
mov
push
xchg
sbb
add
pop
adc
sbb
xchg
ret
cmpl
and
mov
imul
add
ljmp
xor
int3
sbb
pop
insl
fwait
cmpsb
aaa
movsb
jb
cmpsl
imul
cs
cli
hlt
lahf
movl
jne
adcl
or
jmp
imul
enter
das
cmc
sti
clc
xlat
or
out
and
jnp
std
or
xchg
inc
cmp
mov
insb
loop
cmpsl
movsl
in
mov
insb
cmpsb
bound
sub
out
push
sub
fsubl
fcmovu
sbb
into
xchg
ret
shrl
imul
xchg
sub
leave
and
loop
ljmp
xchg
mov
bound
aaa
add
lahf
dec
push
ficompl
stc
enter
insb
icebp
repnz
and
xlat
lret
dec
sbb
push
paddsw
mov
call
and
pop
xchg
stos
jecxz
mov
and
hlt
mov
or
and
dec
out
or
add
movsb
or
outsb
call
add
fdivr
jecxz
dec
mov
xor
in
dec
xlat
pop
mov
and
inc
sub
lods
movsb
add
and
mov
xchg
sub
lret
ds
pop
pop
sahf
sub
les
pop
dec
add
sbb
jnp
aam
or
dec
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
shlb
lods
pop
jae
adc
das
or
xor
inc
test
adc
lahf
stos
mov
data16
cwtl
mov
inc
call
jne
cmp
jmp
insl
popl
sarb
movsl
pop
jbe
jno
sub
xor
add
fimull
sbb
mov
in
stc
mov
dec
xor
ret
cmp
gs
lea
jno
and
hlt
fisttps
test
sub
dec
lahf
jae
jmp
loop
sbb
and
inc
mov
out
fsubrs
push
icebp
faddp
loopne
push
loopne
cmp
fidivl
pop
inc
fstpl
scas
mov
popa
stos
fiadds
cmp
jnp
add
ja
fistpl
pop
fwait
push
xlat
inc
cmp
xchg
add
add
or
adc
inc
scas
iret
fcompl
cmp
cld
sti
and
cmp
cmpsb
cwtl
xor
sbb
xchg
dec
aad
jo
pushf
pop
dec
sub
inc
adc
dec
pop
pusha
inc
hlt
jb
jecxz
dec
xchg
faddp
pop
cmp
fs
loopne
mov
imul
loopne
cmpl
add
push
idivl
fstps
dec
or
pop
out
cwtl
ret
mov
jo
bnd
jg
jp
loopne
xchg
jae
fucomp
cmpsl
jmp
test
mov
mov
hlt
mov
std
dec
subl
adc
sbb
test
int
lret
push
notl
in
cmp
sbb
data16
arpl
jp
fwait
out
or
int
pushf
js
pop
popf
inc
jae
int3
inc
push
mov
out
test
push
nop
addr16
out
popa
push
iret
dec
mov
out
add
inc
mov
shr
dec
add
and
dec
cltd
loop
rcll
mov
cltd
imul
test
jge
into
clc
sub
sti
test
jg
cmp
add
jns
aam
lods
subb
xchg
scas
mov
pop
popf
stos
sbb
cltd
mov
sahf
dec
in
pop
iret
lahf
add
jge
mov
ja
xor
ficomps
aaa
daa
lahf
fldcw
cmpsl
jns
or
repz
dec
mov
add
jge
rolb
dec
imul
fiadds
popf
dec
pop
fisubs
fadd
add
test
stc
aad
add
xor
add
ljmp
dec
pop
or
shlb
pop
xchg
idivl
inc
arpl
xor
push
in
dec
fidivs
imul
sub
xchg
pop
dec
ret
dec
aam
popf
mov
addr16
cli
sub
sbb
clc
inc
mov
jl
enter
fiaddl
mov
jne
or
xor
dec
mov
pusha
inc
fstl
icebp
pop
addr16
cmpsl
push
xchg
xor
shrl
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
or
popf
sbb
jae
jnp
inc
in
sub
test
popa
or
cmp
insb
pop
add
imul
xchg
mov
or
adc
or
mov
rcr
and
mov
jmp
adc
xchg
mov
mov
xchg
ret
or
dec
adc
mov
ja
fdivp
imul
jns
repnz
es
insb
dec
sbb
inc
imul
rep
inc
xor
pop
int3
push
pop
sarb
add
push
imul
add
enter
aam
xchg
lock
stos
xchg
add
fs
rcrb
pusha
out
xchg
in
mov
mov
lock
push
ds
mov
xor
ret
add
fisubrl
xchg
ret
pop
inc
pop
fiaddl
xor
sarl
sti
pusha
adc
enter
and
mov
sub
jmp
cmp
adc
jne
in
jbe
ja
aam
pushf
sbb
stc
inc
mov
loope
int
aad
scas
xchg
lods
mov
dec
pushf
adc
icebp
sahf
jmp
mov
bound
cmc
jbe
insb
and
pushf
cmpsl
pusha
inc
mov
and
fdivl
cltd
icebp
push
loope
les
jle
cmp
mov
add
cld
fsub
sbb
xor
scas
ds
mov
mov
or
mov
aas
pusha
cmpsb
lret
sbb
jp
in
cmp
cmp
mov
fistpll
je
enter
enter
lcall
stos
sub
and
cmp
daa
dec
dec
clc
push
mov
rcll
arpl
ret
add
jecxz
and
orl
enter
push
push
imulb
cltd
add
inc
mov
sbb
pushl
mov
test
push
jecxz
jbe
mov
mov
sub
fisttps
orb
jle
mov
in
jo
enter
mov
or
jno
xchg
leave
push
jmp
pop
xor
inc
cmc
out
lods
shl
push
push
cmp
push
mov
out
pop
add
fisubrs
arpl
dec
int3
mov
ret
xor
cmpsb
sub
xchg
fldcw
aaa
and
outsb
add
in
rolb
test
ret
call
out
aaa
cmp
stos
cmpsl
dec
or
leave
rcl
lret
and
divl
ficompl
cmc
es
mov
iret
inc
cmp
push
movsb
xor
scas
adc
inc
pop
push
adc
movb
dec
pop
sarb
jg
or
fs
notl
mov
lcall
sbb
in
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
push
jb
repz
or
xchg
lahf
loopne
mov
dec
xchg
jne
in
ljmp
mov
scas
mov
pusha
shrb
mov
pop
dec
ret
imul
push
lds
push
lret
push
das
or
mov
inc
adc
scas
pop
int3
bound
push
push
insl
inc
mov
out
mov
mov
movsb
xor
cmp
inc
aam
sbb
test
es
ret
xchg
jg
adc
hlt
dec
inc
and
xor
mov
repz
imul
test
pusha
pop
inc
or
cmp
cmpsb
div
xchg
xor
sbb
inc
cmpsb
inc
mov
je
movsb
dec
or
data16
aam
mov
dec
add
sub
sbb
iret
pop
pop
insl
sbb
xor
subb
clc
mov
dec
fisubrs
pop
jp
mov
lods
pushf
aam
int
push
frstor
mov
jmp
test
testb
aam
pop
mov
mov
aam
add
pop
xorl
outsb
imul
mov
push
fcmovnbe
sub
data16
fidivrs
inc
or
add
daa
int3
or
outsb
adc
test
out
test
xor
push
jbe
pop
cli
mov
push
dec
xchg
lods
test
out
mov
inc
dec
cltd
adcl
pop
jbe
lahf
sti
fcoml
or
aam
enter
mov
vandnps
hlt
dec
sarl
dec
push
mov
dec
xor
xlat
ds
ret
dec
pop
daa
hlt
lods
dec
in
or
pop
sub
cwtl
jb
repnz
fwait
push
xchg
jae
sbb
mov
cmp
in
xchg
sbb
xor
lock
test
mov
fdivs
stc
cs
sbbb
stos
cmp
inc
lods
push
xchg
and
xor
adc
pop
mov
call
add
dec
jp
orb
jle
in
lods
enter
xor
inc
push
mov
test
adc
pop
push
push
pop
mov
daa
das
adc
scas
adc
fistps
or
nop
or
sbb
jl
pop
pushf
inc
jb
cmp
loope
imul
adc
jae
test
lahf
fcompl
inc
cmpsb
push
xchg
pop
sbb
fwait
out
dec
xorb
adc
mov
pushf
cltd
sub
mov
pusha
mov
xor
xchg
xchg
push
push
cmpsb
int
xchg
cltd
push
add
or
fcmovne
jb
cwtl
sbb
inc
mov
xchg
adc
cld
int3
je
ficomps
and
and
scas
jmp
jp
sbb
mov
pushf
fcomp
out
ret
or
or
outsl
lds
lods
fsts
insb
shlb
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
cmp
out
jno
add
pop
in
mov
adc
add
loop
pop
rclb
push
and
mov
cmc
adc
pop
pop
push
cli
or
jb
iret
lods
inc
sbb
lret
outsb
add
and
das
lods
fbstp
fsub
or
add
xchg
js
adc
add
or
mov
scas
cmp
test
pop
repz
call
or
push
test
push
notl
pop
test
aas
or
pop
xor
movsb
test
scas
je
bound
cmpsb
push
icebp
sarl
xor
mov
cmp
popa
jge
mov
push
pop
inc
fcmovbe
out
lods
add
and
sbb
js
dec
jbe
mov
dec
mov
jg
push
push
out
fsub
jae
mov
xchg
adcb
push
mov
out
sub
dec
or
test
and
std
push
ss
xchg
ljmp
in
cmp
leave
mov
xchg
es
xchg
dec
inc
idivb
mov
mov
bound
dec
dec
sub
das
outsb
dec
mov
sub
sbb
aaa
andl
test
out
sbb
mov
ljmp
enter
outsb
and
xor
popa
inc
push
and
cmp
repnz
inc
inc
mov
lret
aam
int
xlat
xchg
cmp
adc
aam
mov
inc
sbb
jno
jno
push
mov
popa
or
lock
dec
mov
pop
mov
push
xchg
loop
mov
jne
lods
xor
loop
ret
inc
xchg
aam
rol
push
out
add
xchg
dec
push
cwtl
imul
scas
pop
test
stc
movsl
aas
leave
fldt
cli
sbbb
mov
out
fs
inc
pop
aad
je
int3
sub
sbbl
les
adc
scas
jb
cwtl
dec
mov
pop
xchg
add
adc
and
arpl
sbb
add
adc
jge
fs
adc
and
mov
xchg
jp
test
mov
xchg
mov
out
out
int
cmp
ljmp
imul
sbb
and
call
pop
adc
inc
sub
push
inc
lock
add
ret
mov
lods
cwtl
mov
aaa
out
xor
mov
dec
lcall
pushf
shrl
adc
cmp
xchg
add
mov
fistpll
xchg
xlat
inc
xor
rcrb
call
fldl
cmp
push
xor
lock
addr16
sbb
and
in
sbb
xchg
mov
inc
les
mov
xlat
lea
test
popa
mov
sbb
sbb
mov
mov
push
int3
jle
fisttpll
imul
movsl
sbb
mov
incl
gs
ss
mov
lret
jbe
mov
jl
adc
out
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
push
shrb
inc
pop
adc
jp
adc
loop
enter
aam
sbb
ret
inc
dec
jmp
push
int
aaa
or
not
jmp
in
mov
icebp
pop
jae
dec
rcll
ret
adc
lds
pop
mov
push
mov
arpl
cmpsl
sub
adc
pushf
ficompl
add
fstps
mov
dec
dec
xchg
movsl
adc
enter
mov
lret
push
mov
imul
shll
inc
sub
push
daa
xor
and
fdivrs
test
icebp
out
into
adcb
pop
loopne
and
sbb
test
sbb
push
fwait
inc
dec
shll
hlt
clc
cmp
das
in
movsl
xor
cmp
xchg
lods
int
pop
div
scas
movsb
jnp
sbb
jmp
cltd
sub
hlt
lods
mov
scas
adc
and
nop
lret
push
insl
mov
jmp
or
std
add
dec
push
mov
ret
out
jbe
stos
lock
in
hlt
rcl
mov
orl
fdivl
icebp
fs
sbb
sub
adc
xchg
ret
push
outsl
xchg
jo
jbe
dec
dec
into
sti
mov
jnp
int3
mov
je
icebp
cli
adc
outsb
and
push
mov
mov
add
cmc
sub
push
mov
dec
sub
cs
gs
dec
fcoml
inc
sbb
and
sbb
add
and
mov
jno
rol
push
xor
sahf
das
cs
jp
inc
jns
enter
pop
sbb
fdivrs
lret
push
xchg
mov
popf
mov
les
iret
cmpl
mov
xchg
jo
cmp
gs
adc
pop
loopne
mov
sti
add
xchg
push
xchg
les
orb
arpl
into
push
popa
ljmp
sbb
pop
lcall
xchg
scas
mov
jp
bound
push
xor
lds
ret
mov
aad
pusha
shrb
sub
and
push
xor
repnz
loopne
cld
pop
xchg
hlt
rolb
loop
push
adc
fldt
sbb
cmp
mov
and
xor
mov
es
lcall
sahf
lret
ljmp
xchg
pop
mov
insb
push
pop
push
jmp
and
jge
push
ljmp
pop
mov
repz
dec
bound
jmp
mov
lret
cmp
mov
aam
mov
seta
ret
fcmovnb
xchg
or
xchg
pop
jbe
cmc
std
out
or
es
pop
cli
push
daa
mov
lods
mov
xchg
jns
mulb
mov
ljmp
iret
in
xchg
inc
or
mov
pop
push
push
mov
cmp
inc
sub
jne
outsl
fldenv
lret
divl
sub
pop
inc
iret
je
stos
dec
push
mov
lcall
scas
xchg
fimull
pop
cli
sbbl
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
repz
push
pop
adc
jp
adc
pop
pop
and
js
out
mov
jmp
fcmove
dec
aas
setne
in
lret
jecxz
js
imul
mov
pop
pusha
in
into
arpl
insl
jmp
xor
adc
mov
incb
mov
sbb
cli
cwtl
mov
jae
xlat
cld
dec
insb
xor
adc
jp
sub
cmp
es
xchg
jle
pushf
xchg
frstor
or
inc
lret
call
sub
sbbb
push
sti
test
xor
popa
shlb
mov
jo
push
ret
std
fistpl
mov
or
cwtd
pop
loope
ja
or
test
jne
xchg
jne
sub
sub
pop
xchg
inc
sbb
hlt
mov
lods
jns
cmp
mov
mov
ret
adc
ss
add
das
ljmp
mov
lods
mov
les
adc
mov
fdivr
sub
mov
fwait
repz
das
out
in
movsl
cmp
inc
sub
mov
in
lret
rorb
sub
idiv
imul
push
and
xchg
dec
scas
mov
test
dec
notb
xor
mov
test
jle
mov
adc
aaa
imul
rclb
cmpsb
or
fdivs
xor
or
cmp
out
mov
jmp
add
xchg
jecxz
sbb
pop
xor
test
stos
aas
and
push
popf
adc
adc
loope
ret
mov
and
flds
mov
cmp
ljmp
add
lods
inc
adc
adc
nop
cmp
js
cs
and
loopne
sbb
arpl
jp
mov
aad
cli
xor
push
pop
inc
stos
adc
jp
out
or
dec
rol
popf
test
das
je
push
cs
jae
add
shlb
daa
fistpll
xchg
cs
int
mov
sub
cmc
ljmp
aad
jmp
push
fisttpll
jmp
repz
xor
lods
xlat
inc
leave
addr16
pop
push
cmovg
test
jge
in
xchg
clc
xchg
dec
sbb
and
and
dec
ss
sbb
and
les
or
xor
sub
rclb
xor
mov
lcall
stos
ja
popa
add
xor
cmpl
jno
adcb
sahf
dec
push
call
mov
cmpsl
sub
push
fwait
push
fnstsw
xor
or
xchg
jns
lahf
xchg
sbb
xor
sbb
xlat
mov
mov
adcl
popa
mov
mov
or
sub
mov
dec
daa
setae
jae
sbbl
das
lea
push
add
or
lret
aad
leave
popf
aas
lret
fldlg2
adcb
fldl
aad
mov
mov
fnsave
sbb
popa
push
test
mov
push
fdivs
out
lret
add
in
lcall
push
fmuls
jnp
add
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
js
pop
push
adc
jp
adc
push
jns
sub
dec
outsb
or
push
data16
scas
push
bound
xlat
cmp
addb
daa
scas
ja
stc
adcl
pop
mov
jno
and
fisttps
add
adc
aas
icebp
insl
xor
mov
iret
shrl
lret
pop
imul
fwait
popf
inc
jnp
sub
pop
sahf
add
mov
out
enter
shlb
and
adc
jmp
add
in
mov
fs
xchg
pop
mov
pushf
push
bound
push
cmp
scas
jg
mov
hlt
pop
add
fidivs
inc
addr16
loop
test
pop
lretw
pop
adc
repnz
mov
aas
cmp
mov
pop
inc
cs
ja
out
movsl
jne
repnz
ja
push
mov
popf
loope
aad
arpl
enter
cmp
jge
inc
jnp
lea
xorb
pop
add
push
jo
adc
jmp
or
loope
or
jno
ljmp
test
xchg
xchg
repnz
mov
nop
cmp
push
ss
and
aad
xchg
push
lret
lret
ds
xor
jg
call
pop
ret
jecxz
mov
movsl
popf
lock
xor
mov
or
jne
sbb
pop
mov
xchg
and
repnz
popf
push
lahf
loopne
jmp
outsb
jecxz
fwait
test
inc
fcmove
sbb
testb
or
lahf
cltd
sbb
and
rcrl
xchg
xor
test
xor
vpcmpeqd
cmp
ljmp
mov
xchg
sub
pusha
xchg
fcompl
push
outsl
clc
aam
jno
xlat
insb
orl
orb
insb
xor
pushf
xchg
subb
insb
adc
cmp
lahf
sub
pop
jae
pop
adcl
cmp
out
lods
fcoml
xchg
xor
call
dec
rol
xor
mov
and
or
out
or
fadds
xchg
or
lea
mov
icebp
adc
mull
xchg
out
das
repz
mov
loopne
adc
xor
ror
test
cs
rcrl
push
lock
data16
icebp
lret
andl
pop
cmpsb
and
clc
fimull
rolb
test
hlt
jmp
push
loope
pop
scas
mov
push
mov
out
call
aaa
jecxz
in
hlt
xor
gs
mov
pushf
cmp
pop
jp
loope
pop
das
cmp
call
cmp
aas
call
xchg
lds
pop
mov
inc
xchg
movsb
mov
jb
push
push
rorb
lea
push
into
mov
vmwrite
mov
jge
lock
sbb
adcb
divb
es
adc
or
aam
in
cs
xor
and
out
jb
sbb
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
dec
js
inc
adc
lea
adc
or
mov
inc
popl
hlt
pop
xchg
pop
adc
arpl
insl
pop
neg
cmpsl
xchg
pop
out
ljmp
fistl
nop
xchg
xor
sbb
leave
push
jmp
and
lret
xrelease
pop
orl
or
mov
std
inc
adc
shll
pop
cmp
pop
inc
std
div
adc
pop
aad
sub
mov
mov
fucomip
adc
cmp
dec
mov
outsl
in
inc
in
or
xor
pop
fwait
jge
adc
xchg
sub
and
pop
lds
in
xchg
shll
xorl
fs
push
insl
divl
std
out
pop
jnp
inc
mov
pop
mov
inc
cmpsl
xchg
mov
aaa
push
shl
adc
mov
std
orl
inc
push
mov
stos
cwtl
add
mov
mov
dec
dec
loopne
jns
rcrl
mov
pop
lock
divl
je
mov
sbb
sahf
cs
divb
fnop
push
inc
fstl
dec
xor
inc
aaa
fists
or
sbb
jbe
pusha
push
je
sub
inc
mov
xor
mov
cmpl
mov
mov
ja
mov
movsl
xchg
js
adc
sbb
xchg
sub
xor
cli
sti
sub
hlt
cmpsb
test
mov
lahf
nop
movsl
xor
mov
jmp
dec
jae
cli
and
dec
or
vmwrite
mov
xor
mov
pusha
push
jle
add
jne
fsin
int
xchg
lret
clc
testl
jo
fnstsw
jns
xchg
dec
aad
adc
push
test
mov
and
jge
cmp
xlat
les
gs
imul
mov
negl
mov
add
pusha
adc
and
pop
jbe
scas
pinsrw
mov
repz
xor
cs
and
push
test
pop
sar
clc
pop
outsl
push
int3
rcrb
mov
fbstp
lods
movsb
mov
les
add
and
ret
pop
out
pop
xchg
inc
xchg
fcmovnbe
or
cmp
lcall
cmp
addr16
add
orb
pop
repz
inc
dec
sete
cmp
pushf
add
sub
dec
leave
out
fmull
push
inc
out
jle
mov
rolb
jge
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
bound
sbb
lds
mov
sub
ret
leave
ja
mov
push
fdivrs
mov
sti
jl
cmpsl
lds
xor
push
adc
mov
inc
cltd
sub
or
mov
push
mov
jo,pt
push
cltd
inc
mov
ja
add
mov
pop
aam
adcl
loope
adc
fildll
inc
outsl
jp
jo
aam
push
mov
sub
ficoml
inc
fistl
sar
cltd
aas
add
pop
rcrl
clc
push
adc
xchg
fsts
add
mov
test
inc
sbb
adc
cmp
push
fnsave
adc
test
shll
pop
subl
xor
pop
push
mov
shlb
push
add
jge
shll
int
pop
mov
int
dec
cwtl
sbb
mov
in
test
bound
in
push
mov
aam
shll
or
or
loop
int
jns
leave
jnp
xor
cmpsb
out
insl
mov
icebp
in
pop
push
add
je
out
pop
rclb
insb
push
shlb
stos
or
xchg
movsl
repz
dec
fucom
sar
jo
jmp
idivb
push
inc
rclb
xor
jecxz
orl
mov
or
dec
imull
push
adc
cmpb
loopne
movsb
jmp
cmpsb
shrl
sahf
sbb
cmc
lret
stos
mov
jecxz
mov
dec
mov
fcompp
push
pop
addr16
mov
fstl
and
jnp
inc
adc
fimuls
testb
int
sub
stos
sbb
ljmp
jo
pop
push
out
dec
ljmp
push
mov
or
pop
movsl
mov
cmp
ds
imul
in
ja
inc
mov
sbb
arpl
sub
dec
movsl
adc
xchg
das
dec
std
hlt
push
xor
in
or
loopne
push
pop
mov
mov
add
jnp
mov
dec
lret
cmpb
ljmp
sbb
cmp
test
inc
inc
fldcw
jecxz
std
mov
or
int
lock
ficomps
jnp
repnz
mov
roll
mov
push
push
roll
in
lret
fdivrs
inc
add
xchg
dec
popf
scas
data16
mov
push
cld
movsb
js
cmp
sahf
dec
out
jns
cmp
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
aaa
push
inc
call
sub
xor
sub
leave
cmp
ds
fstpt
xor
ja
or
sbb
inc
push
adc
xchg
adc
pop
adcb
test
pop
out
je
insl
cwtl
inc
sbb
sub
sarl
mov
jl
not
jecxz
cvtps2pd
and
sbb
nop
inc
icebp
adc
sbb
jae
mov
loope
lahf
notb
pop
mov
int
sbb
sbb
adc
push
pop
clc
push
das
xchg
stos
add
movsl
push
sti
fwait
pop
adc
out
sub
rcll
test
push
stos
js
daa
mov
std
push
outsl
push
repnz
inc
std
hlt
lret
pusha
push
jmp
sbb
xchg
sbb
in
mov
jle
ret
and
nopl
xlat
xchg
jp
sub
les
out
mov
lods
shl
ret
push
inc
xchg
jne
sbbb
mov
aas
ss
jl
cs
mov
mov
dec
cmpsl
mov
jnp
or
data16
aas
aaa
xor
and
test
or
and
ficoms
and
push
je
dec
mov
push
add
xor
or
dec
jge
pushf
aas
cmpsl
fs
xchg
xlat
jl
push
inc
fwait
enter
stos
nop
idiv
pop
mov
in
icebp
xchg
cmp
hlt
dec
fbstp
lea
int
fs
or
das
dec
out
sti
pop
in
cmp
test
pop
psllq
cwtl
xchg
dec
pop
jno
xor
stos
orl
jle
mov
xlat
ret
imul
out
add
add
sub
stc
mov
sbb
jo
push
scas
test
jg
fwait
shrl
xor
dec
jmp
push
pusha
test
ds
push
icebp
divb
fiadds
ret
in
mov
mov
mov
sub
push
movb
mov
add
fdivs
cmp
push
into
mov
sbb
inc
jg
in
fdivs
sbb
int
hlt
xchg
xchg
stc
adc
fistps
ss
and
dec
jg
shl
sbb
xor
mov
insb
popa
pop
hlt
les
leave
faddl
adc
call
pop
jecxz
mov
inc
das
enter
fstpt
dec
pop
or
cmp
mov
daa
xchg
add
fidivl
sbb
xor
pop
shl
mov
dec
imul
add
mov
rorl
pop
mov
ljmp
push
cmp
xchg
test
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
outsl
imul
aaa
adc
lea
adc
imul
sub
mov
imulb
mov
mov
cld
push
cltd
adc
sub
mov
insb
xor
int3
gs
popa
and
inc
cmc
iret
dec
xchg
jbe
mov
adc
out
jl
test
cmc
mov
sub
mov
xlat
mov
bound
rclb
pop
ficomps
lret
sbb
add
scas
xchg
popa
insl
adc
test
cmp
mov
inc
jb
inc
in
adc
push
je
cmp
scas
pop
icebp
and
sub
sbb
cld
outsl
ss
push
int
adc
cs
ljmp
enter
shll
in
xchg
cmc
test
neg
subb
mov
dec
outsl
adc
adc
mov
in
lock
dec
lds
inc
dec
mov
pop
jnp
shlb
lahf
sar
test
iret
pop
sub
or
dec
outsb
repnz
stc
pop
and
test
mov
in
inc
data16
pop
in
rorb
std
data16
xor
scas
push
jbe
and
inc
pop
scas
outsl
dec
push
add
cmpsb
sub
lods
cwtl
fldcw
and
shrb
jno
dec
jno
jle
aad
push
mov
popa
pop
icebp
sub
cmpb
out
int
dec
insl
mov
xchg
xor
addb
loopne
sub
bound
and
dec
mov
movl
shll
mov
mov
outsb
outsl
xchg
je
pushf
jo
loope,pn
sbb
lret
xchg
std
shr
into
add
mov
push
scas
push
lods
out
inc
stos
pop
rcl
outsl
into
adcb
sti
lods
jp
mov
mov
pop
out
xor
das
jae
xchg
cwtl
rol
movsb
mov
or
pminsw
pushf
pop
pop
repz
jns
pop
rcrl
in
sub
ljmp
arpl
lock
cli
out
fistpl
pusha
lahf
or
pop
lret
jl
dec
push
loope
push
mov
jecxz
hlt
or
push
mov
adc
jne
in
or
mov
push
cli
jp,pt
cmp
jp
jbe
mov
sbb
aam
in
push
mov
lods
mov
jecxz
fcoms
stos
xchg
orl
lock
loop
jmp
outsl
push
mov
inc
sbb
fmuls
es
das
movsb
jae
pop
mov
dec
fnstsw
sub
xor
ficoms
mov
mov
or
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
cmp
inc
xor
adc
out
mov
mov
sbb
mov
sarb
idivb
lods
sbb
mov
adc
rolb
enter
jnp
mov
push
sub
loop
fsubr
sbb
mov
gs
xchg
push
mov
cltd
xor
inc
jge
inc
fimull
lock
ljmp
and
rol
xchg
into
dec
inc
mov
sbb
adc
test
movsb
in
mov
aas
push
movsl
mov
add
pusha
or
aaa
imul
mov
imul
or
test
shrb
cmpb
fcompl
jo
mov
pop
mov
mov
fsincos
jb
or
notl
mov
sarl
xor
inc
fimull
fcompl
lock
cli
mov
or
bound
popw
testl
mov
xchg
sub
jle
dec
add
add
pop
fildll
jo
mov
add
sbb
das
cmpb
lcall
sub
fnsave
pushf
call
and
stos
mov
scas
pop
ficoms
daa
clc
xor
mov
jo
hlt
nop
xchg
inc
mov
ds
or
sub
in
mov
and
xchg
inc
std
or
cmpsb
xchg
dec
sub
or
push
nop
rcrb
mov
stos
jge
inc
fiaddl
rol
jmp
mov
shlb
aas
xor
imul
jbe
jecxz
xor
mov
mov
inc
push
stos
pop
and
loope
pop
loopne
mov
dec
mov
notl
jae
or
adc
jnp
add
cmp
xchg
pop
mov
sbb
pop
xchg
adc
stos
mov
not
dec
mov
pushf
std
movsb
fs
roll
je
dec
cmpsb
out
mov
cwtl
popa
sti
lock
sub
mov
sub
sbb
sbb
or
loopne
sub
shlb
mov
je
jg
loope
out
sbb
ljmp
ficompl
aaa
pop
and
filds
mov
cli
in
dec
aad
imul
push
pop
flds
cmpsb
mov
jecxz
jbe
cmc
insl
test
addl
adc
dec
xor
push
rorl
cmp
adc
repnz
cmp
mul
scas
push
repz
mov
and
fildl
jnp
lods
mov
fwait
push
xor
add
js
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
mov
adc
lea
adc
aas
ret
fisttpll
dec
push
jmp
fwait
std
pop
aas
cmp
movsb
outsb
pop
rorl
mov
or
jmp
mov
into
ror
stc
mov
out
fwait
jnp
addb
icebp
lock
or
in
pop
dec
cmp
inc
push
lcall
and
pop
call
pop
jbe
adc
rorl
dec
icebp
pop
dec
xor
leave
rcrb
test
mov
fiaddl
les
movsl
pop
cmp
mov
push
leave
int3
xchg
pop
jmp
add
cmp
ret
add
mov
push
ja
scas
pop
sub
das
jae
stc
mov
mov
dec
jmp
pop
or
and
repnz
xor
mov
add
dec
movzbl
int
rorl
pop
arpl
das
cs
dec
dec
int
push
aas
repnz
stos
fsqrt
adc
xchg
cmpsb
sysret
inc
ljmp
ja
add
lods
lock
jmp
jns
cmc
push
int
adc
imul
lods
adc
or
push
pop
cmpl
cmp
data16
sub
mov
sbb
aas
mov
push
loope
into
andl
add
lds
sub
mov
fwait
push
jp
mov
and
push
iret
addr16
jg
clc
mull
into
sbb
pushf
cltd
imul
call
lods
test
push
pop
fisubrl
fs
iret
cmpsl
xor
clc
pop
mov
in
insb
lds
insb
cwtl
imul
cmpsb
out
inc
ret
outsb
and
jb
orb
ret
or
adc
fidivrs
out
lock
adc
in
rcl
fisubrs
scas
jmp
in
adcb
or
xchg
mov
xor
mov
cmp
and
enter
cmc
punpckldq
xlat
xor
lret
jne
mov
cltd
bound
mov
jns
xchg
lds
pop
scas
jmp
push
testl
fnstenv
mov
into
dec
xor
xchg
or
incl
jge
arpl
mov
lcall
pop
xchg
out
jmp
addr16
lret
ja
sti
clc
and
push
xchg
fisubrl
xor
mov
out
ds
mov
out
or
sbb
jg
sbb
test
dec
stc
and
repnz
push
push
xchg
hlt
cmp
pushf
imul
sub
adc
or
xor
or
push
add
jmp
and
lods
and
js
push
xor
xor
adc
lea
adc
jo
lods
sbb
dec
pop
shlb
test
adc
imul
push
and
rol
repz
lahf
in
dec
mov
ret
cmp
repnz
andl
jb
pop
mov
sbb
lea
je
in
loopne
dec
cli
add
mov
pusha
shrb
arpl
push
xor
push
test
sub
and
cltd
test
shrb
cmp
mov
and
aaa
icebp
insl
jle
sahf
fbld
nop
push
push
dec
movsb
daa
dec
xlat
dec
cmp
xchg
rcll
sbb
mov
jge
xchg
inc
sub
mov
dec
adc
clc
pushf
pop
das
test
ljmp
and
jbe
in
xor
and
push
es
xchg
bound
dec
pop
sbb
push
add
movsb
div
adcl
cmp
ret
mov
mov
movhps
je
adc
test
add
xchg
mov
lcall
dec
stos
mov
push
call
mov
mov
cli
cmpsl
xor
std
leave
sbb
push
sub
dec
mov
loop
scas
iret
int3
fcom
mov
jnp
test
mov
clc
xor
ljmp
jecxz
xor
leave
gs
cwtl
negl
test
int
pop
pop
fwait
int3
rcr
mov
popa
into
out
push
add
movsl
inc
xchg
arpl
add
inc
fwait
cmpsl
shr
sbb
scas
repz
aaa
cmc
sub
dec
push
push
push
cld
cld
or
inc
dec
pop
push
subl
ljmp
pushl
mov
lea
xorl
loopne
das
push
sub
rolb
scas
push
pop
out
xchg
adc
insb
mov
inc
fcoml
sti
jp
testl
lahf
and
lahf
and
dec
shrb
or
pop
ret
dec
rolb
das
cli
not
mov
inc
and
mov
ds
aaa
pop
sbb
jo
pop
sub
xchg
xchg
icebp
pushf
out
cmp
aas
mov
jbe
xchg
sub
dec
jmp
add
push
and
mov
jge
stc
jg
push
jno
hlt
imul
imul
jno
adc
addr16
jecxz
and
scas
mov
ds
mov
dec
mul
jecxz
hlt
sahf
sub
pop
pop
jnp
add
mov
add
mov
mov
scas
mov
jg
sub
stc
lahf
cmp
add
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
repnz
jle
fwait
pop
mov
push
in
cmp
ja
out
lock
setne
scas
mov
out
mov
mull
mov
daa
scas
ret
cmp
jge
fnsave
cld
xorl
sub
test
testb
movsb
jnp
cmpsb
stc
inc
out
outsb
cwtl
xorl
and
sub
add
jns
mov
stos
mov
rorl
mov
popa
pop
popf
lods
jbe
mov
pop
push
loopne
adc
cmp
arpl
xchg
dec
int
xor
std
mov
add
adcl
jne
orl
mov
dec
lcall
xchg
testl
ds
outsb
adc
loopne
jmp
fsubl
fisubl
sub
add
xor
divl
cmpsl
sub
or
jb
xchg
pop
xchg
sub
sarb
aam
mov
or
jle
cld
andl
push
repz
inc
cmc
push
les
pop
shlb
cmp
add
mov
outsb
inc
cmpsl
test
mov
cwtl
inc
mov
iret
shrb
push
mov
xchg
stos
pop
xchg
xchg
pop
mov
xor
add
pop
movsl
sahf
cmp
sub
sbb
push
movsl
mov
loope
mov
lods
or
test
movsl
cmp
xchg
es
jo
pop
mov
pop
add
movsb
and
js
imull
orl
adcl
push
out
xor
inc
repz
mov
and
call
jmp
xor
movsl
sub
push
cltd
sbb
in
mov
xchg
into
fildll
xor
jmp
negb
and
fisttpl
jg
xchg
insl
pushf
mov
xor
cltd
pushl
outsb
pusha
push
arpl
bound
out
in
lcall
push
sbb
lods
cs
jne
icebp
xor
test
and
add
aad
rorb
xchg
cld
sbb
sub
jo
dec
xchg
mov
adc
dec
jl
pop
pop
cmp
dec
out
pop
cmp
movswl
rcrl
fnstsw
icebp
test
jae
xlat
shlb
mov
cwtl
inc
out
jb
into
leave
pop
pushf
les
xor
lea
test
jb
xchg
jle
xchg
std
jle
push
jmp
es
dec
adc
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
or
lea
adc
aaa
xchg
mov
out
add
call
jg
dec
stos
push
cld
dec
sbb
add
rolb
std
xchg
fisubl
sbb
sbb
cltd
jns
pop
dec
cli
andl
mov
clc
cltd
or
fcoms
xchg
aam
dec
shlb
and
test
xchg
push
out
pop
push
imul
fwait
xchg
mov
fidivrl
js
repz
pop
loope
mov
sbb
ljmp
divb
lret
mov
jo
js
mov
mov
xchg
push
sahf
jns
mov
lods
push
loopne
fs
cwtl
mov
jb
or
mov
mov
js
sbb
sbb
sti
push
sbb
adc
xchg
xchg
loope
add
les
fstl
mov
xchg
fsubrs
mov
out
iret
lods
ret
daa
mov
es
push
sbb
rolb
xor
sbb
fwait
js
mov
push
or
or
cmp
stc
xchg
pop
test
imul
les
ljmp
mov
cmpsb
roll
loop
lock
daa
and
rcrl
iret
stos
sbb
lock
jb
outsb
in
cmp
mov
cli
popf
push
icebp
fsts
imul
cmp
aad
insl
sahf
aam
xchg
mov
insb
jo
fcompl
xchg
incl
push
push
pop
pop
pop
sbb
xor
mov
pop
fdivs
jl
notl
dec
sub
mov
ret
mov
mov
ret
adc
mov
pushf
mov
cmp
xchg
sbb
test
idivb
xchg
push
push
out
repz
je
movsb
xchg
mov
add
push
pop
out
add
pop
or
int3
idiv
mov
mov
test
add
mov
cmp
or
jl
mov
imul
subb
jne
test
addl
int3
add
xor
dec
sarl
int3
and
pop
add
out
ret
mov
jo
sbb
out
rolb
push
adc
or
fimull
dec
adc
sbb
add
lahf
out
jbe
and
push
ljmp
mov
clc
lods
fisubrl
dec
cmp
lods
push
fwait
push
adc
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
sbb
fidivrl
mov
out
add
dec
adc
add
scas
dec
mov
decl
outsb
fnsave
lds
mov
fistps
dec
out
sbb
cmc
push
and
xor
pop
jo
lds
adcl
mov
inc
into
mov
inc
cld
push
lret
das
and
cltd
mov
test
mov
adc
mov
dec
mov
fnsave
cmp
jge
imul
or
push
outsb
inc
xlat
jecxz
mov
cmp
js
xor
cmpsb
ds
ror
sub
and
int3
cmpsb
dec
outsl
lock
xchg
lods
adc
imul
add
in
jle
or
xchg
xchg
pop
fs
loope
xchg
jnp
add
sahf
cltd
push
insb
dec
push
repnz
repz
xchg
adc
inc
mov
das
testb
dec
subb
pop
das
xlat
xor
mov
sbb
inc
cltd
in
sub
in
pop
clc
jbe
dec
push
movsl
mov
add
sub
add
mov
sbb
lahf
add
loop
cli
jecxz
into
push
aaa
fimull
mov
cmp
in
push
pop
bound
dec
jae
loope
mov
dec
dec
cmp
and
in
fistpll
inc
mov
jge
adc
scas
mov
ret
arpl
mov
mov
mov
into
loop
ljmp
mov
xorl
roll
jg
add
dec
sbb
aam
adc
sbb
cmpsl
mov
cli
into
pusha
inc
cmpsl
lods
xchg
test
jno
sub
repz
push
push
bound
rorl
testb
push
and
adc
dec
xor
lea
incb
mov
dec
and
hlt
pushf
push
test
jae
pop
lahf
and
pop
jmp
fimuls
iretw
adc
lret
loop
push
cmpsl
mov
outsl
cli
cli
add
addl
outsl
pop
enter
test
int
je
mov
jne
jae
rol
imull
pop
adc
cmpsb
mull
imul
cmc
rorb
xchg
cmp
adcl
mov
push
or
mov
in
testb
pop
dec
push
insl
cld
movsb
inc
inc
fnstenv
inc
inc
imul
inc
mov
and
stos
jns
xor
imul
popa
dec
rorb
and
test
jb
lods
or
fidivs
out
cmp
loopne
popa
imul
mov
xchg
or
incb
psrlq
xchg
nop
cmp
mov
test
add
mov
and
dec
or
xchg
movsl
mov
scas
jg
lcall
xchg
pop
or
repz
or
inc
test
repnz
outsl
leave
or
push
push
mov
dec
loop
dec
scas
aaa
jmp
mov
jns
testl
xor
inc
and
test
pusha
cmp
jp
mov
xchg
xor
adc
imul
inc
in
mov
cs
push
pop
pop
cli
sub
inc
popa
cltd
sbb
aas
mov
pushf
dec
pop
jo
inc
pop
out
test
push
xchg
mov
in
jno
in
out
int
sub
cltd
and
xor
mov
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
mov
jle
unpckhps
mov
adc
jmp
xchg
ret
daa
divl
leave
clc
cmp
xlat
push
push
mov
insb
push
pop
stc
jno
sbb
mov
jle
stos
pop
cld
push
orb
cmp
lods
sbb
cmpsb
loopne
jbe
sbb
pop
jnp
jmp
fidivs
out
xorb
sub
scas
inc
mov
fsts
pop
iret
test
aas
lahf
sbb
movsb
movsb
mov
sbb
add
inc
bound
cvtps2pi
xchg
ds
pop
and
ret
mov
sbb
ret
mov
xchg
xchg
sub
sahf
aad
idiv
adc
insb
cmp
ret
cmc
mov
pop
leave
mov
jmp
cltd
aaa
or
mov
cmp
lret
and
aas
push
jns
les
loopne
sub
mov
inc
xor
stc
cmp
shl
jge
sbb
push
mov
and
mov
xchg
xchg
jmp
jb
inc
or
andb
ja
test
push
and
lock
sbbl
ret
cmpsb
sub
adc
sbb
rolb
stc
add
fxch
iret
mov
fstl
mov
aas
xchg
or
sahf
push
test
shrl
lods
daa
and
mov
mov
std
jmp
cmc
push
cwtl
jp
adc
roll
sahf
jmp
test
aam
push
lock
xchg
js
mov
sub
inc
std
test
push
sti
adc
xor
dec
pop
mov
out
pop
dec
adc
stos
jle
pusha
lds
sub
cmp
scas
in
pop
fcoml
cmpl
lret
or
and
inc
sub
mov
cmpsb
je
push
je
arpl
inc
jb
sub
mov
cmc
push
fcoms
adc
in
jns
xchg
popf
lahf
nop
es
arpl
mov
cli
rorb
adc
rcrl
fistps
movsb
pop
shrl
inc
into
imul
aad
jge
stc
adc
jnp
inc
mov
mov
jae
mov
out
idiv
mov
aad
outsl
mov
and
pusha
sub
or
rorl
sahf
add
movl
sub
cmp
gs
addr16
pop
clc
dec
movsb
cli
fidivs
xor
loop
xchg
lods
sahf
and
std
aad
je
es
mov
sbb
sub
outsb
inc
jnp
mov
popf
loop
pop
dec
inc
js
lds
inc
push
mov
sti
jecxz
and
and
and
pop
loope
out
mov
lcall
movsb
fistpl
xor
inc
loop
iret
mov
shr
test
pushf
pop
decb
xlat
and
sbb
negl
jle
push
mov
pop
pop
lea
stc
sarb
ss
sub
fadds
sbb
jle
fcmovb
and
inc
jno
jne
test
rcll
out
cli
ljmp
je
pop
pop
add
push
cmpb
inc
sub
js
js
or
and
imul
rcll
pop
fstps
push
pop
and
cmp
sahf
adc
push
jno
or
push
aad
cmp
adc
lods
xor
xchg
out
cli
mov
pop
js
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
jle
pop
adc
adc
out
out
jnp
jbe
ds
test
pushf
mov
ljmp
inc
js
mov
mov
fsubrs
pop
mov
add
xchg
xchg
push
cwtl
mov
loop
push
and
xchg
push
mov
inc
shrl
adc
int
das
adc
fnstsw
imul
shrb
or
dec
dec
insl
mov
fcomps
out
je
adc
mov
inc
add
jno
mov
sub
fistl
dec
mov
cmp
std
sbb
imul
jge
and
push
pop
push
cli
dec
and
and
add
add
jnp
fcomip
jb
adc
mov
dec
outsb
inc
fsubl
add
insl
es
in
sbb
repz
jno
push
mov
and
ret
scas
adc
arpl
xchg
int
ljmp
add
push
cld
test
adc
dec
enter
test
out
cmpsl
mov
xchg
movsl
dec
pop
aas
sti
mov
dec
daa
mov
sub
mov
inc
push
lahf
inc
pop
xchg
loope
repz
push
xchg
insl
xchg
subl
sub
or
outsl
mov
out
sbb
pusha
dec
test
ret
xor
xor
mov
lret
cmpsl
pusha
test
sub
in
mov
sbb
push
pop
mov
bound
in
xchg
mov
mov
mov
out
rolb
inc
cmp
and
mov
test
int
mov
stos
jbe
mov
out
add
adc
lret
or
lret
lds
push
ss
and
pop
adc
mov
inc
cld
ret
scas
xchg
mov
int
insl
mov
xlat
xchg
add
stos
pop
test
fwait
push
pop
mov
ljmp
push
cwtl
repnz
sbb
rolb
mov
dec
movsb
mov
push
mov
out
lods
mov
pop
sbb
inc
mov
pop
paddw
call
mov
insl
or
pop
out
jge
sub
cmp
std
data16
inc
cmp
mov
dec
repnz
adc
jge
iret
push
sub
cltd
std
lods
outsb
pop
orb
test
ret
add
clc
test
push
lods
out
cmpb
and
in
add
sbb
mov
ds
dec
mov
out
mov
xchg
jmp
outsl
aas
sbb
popa
jg
jbe
adc
je
jae
mov
mov
rep
mov
mov
aad
enter
mov
adcb
imul
mov
fdivl
insl
dec
add
repnz
jmp
lahf
in
xchg
sub
cli
mov
fs
mov
jg
mov
into
adc
xchg
xor
lds
and
cld
xor
jae
in
loop
fstps
mov
mov
and
loop
jnp
mov
sub
mov
hlt
jo
into
xor
xor
push
icebp
jp
fstp
cltd
inc
dec
ljmp
lahf
repnz
xchg
mov
adc
push
mov
sbb
fldt
sub
mov
dec
out
push
mov
push
imul
push
leave
cmpsl
enter
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
hlt
jo
push
call
adc
fstps
hlt
pop
ds
pushf
mov
cmpb
in
mov
movsl
gs
shll
xchg
cmpsl
cli
cmp
xlat
sbb
sub
and
inc
pop
pop
mov
xor
sbbl
push
xor
out
ja
pop
cmpsl
shll
mov
or
jmp
aam
out
or
xchg
sub
dec
mov
jns
inc
pusha
pop
xor
daa
movl
fstpl
cmp
lret
enter
sub
fmul
call
jae
push
imul
cs
xchg
add
into
es
cli
sbb
xor
or
mov
jne
sbb
or
dec
lret
mov
inc
fisubs
pop
push
out
xchg
mov
sub
jno
sub
into
push
loope
push
mov
aaa
int
push
out
ja
roll
leave
xor
loope
jge
hlt
fs
fwait
mov
adc
mov
je
and
mov
sti
mulb
add
xchg
in
std
lret
test
int
lret
popa
fsts
push
inc
rcrb
mov
xchg
testl
adc
js
add
inc
outsb
xchg
xor
or
sub
stos
dec
movsl
cmp
idivl
push
inc
mov
loop
cmp
push
pop
inc
mov
adc
add
mov
jle
jo
cmp
js
mov
mov
mov
mov
and
add
sub
push
mov
jne
shll
std
jmp
pop
mov
or
xchg
xor
fidivrs
adc
stc
ret
aas
test
int
call
jmp
dec
jmp
sbb
sbb
test
ficompl
stc
decl
cmp
push
pusha
sti
mov
mov
pusha
fs
pop
aaa
dec
push
sub
pop
jo
mov
push
cmp
pop
loop
cmp
mov
push
push
or
push
sub
test
push
in
dec
mov
sub
push
jle
xchg
fdivrl
push
add
jecxz
jb
in
push
dec
xchg
fwait
gs
das
cmpsl
dec
loopne
xchg
cmpl
dec
push
and
aam
mov
mov
mov
jno
adc
ret
cli
xchg
addr16
xchg
mov
lea
xor
push
pushf
std
dec
sub
jae
aam
std
sub
loope
popf
stc
jo
pop
mov
test
or
pop
push
js
pop
shlb
jp
scas
repnz
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
or
adc
push
pushl
int3
sub
xor
lock
sub
data16
cmpl
pop
jp
inc
add
mov
xor
out
pop
and
xchg
push
jne
add
daa
popf
push
lds
addr16
lock
shlb
ljmp
jo
sub
pop
cmp
ljmp
add
dec
aaa
adc
mov
jbe
inc
add
js
insb
test
mov
cmpsb
fsubrl
scas
icebp
xchg
cs
aas
xchg
pop
lds
xchg
inc
mov
jle
jns
inc
mov
rcl
es
call
inc
or
push
lea
mov
addr16
and
icebp
adc
loope
stc
pop
pop
mov
xchg
call
call
outsl
mov
mov
mov
adc
iret
inc
add
in
jp
js
fisubrl
xchg
mov
dec
mov
or
xchg
out
fwait
fs
daa
popa
js
mov
push
dec
xor
mov
sbbl
sub
movsb
nop
jns
dec
jp
push
pushf
test
andl
mov
hlt
mov
jmp
fisubrs
in
enter
or
fnstsw
dec
add
add
mov
sbb
cs
or
outsb
cli
add
sub
sbb
je
test
add
pop
cwtl
in
fldt
scas
inc
pop
inc
lea
mov
dec
cmp
xchg
and
jg
push
mov
xchg
xor
scas
cltd
in
es
cs
push
dec
out
shll
sbb
xor
stos
sub
icebp
inc
repz
imul
cltd
sbbb
gs
jle
dec
or
insb
jbe
mov
lret
cli
ja
xchg
test
add
cs
inc
sarb
dec
lahf
lret
jmp
dec
push
div
sub
jge
daa
push
and
mov
jle
xchg
cli
ljmp
fwait
xor
sahf
mov
mov
sbb
dec
xchg
test
add
fistpll
mov
xchg
rcll
mov
fs
dec
or
mov
and
enter
xor
rolb
pop
clc
fs
xor
mov
xor
aas
cli
out
dec
inc
repnz
adcl
cmp
cmp
dec
sbb
or
adc
or
push
jbe
push
adc
xor
push
aad
outsl
mov
cmp
test
cmp
add
add
mov
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
pop
mov
movlps
outsl
dec
dec
xor
xchg
test
sub
and
orb
test
sub
imul
cmp
addb
iret
loope
inc
or
cmp
mov
fwait
icebp
mov
lods
mov
cmp
dec
fadds
and
xchg
sub
or
mov
add
jg
aam
roll
int3
sub
add
enter
ret
out
adc
fmull
cmp
into
jge
jg
and
jbe
ficoms
jle
xchg
pop
jl
pop
sbb
sbb
jl
addr16
dec
movb
jne
mov
dec
and
movsl
jnp
imul
cmc
lock
jl
das
pop
mov
and
dec
arpl
cld
inc
iret
rol
insb
movsb
sub
test
or
fwait
jecxz
pop
idiv
jge
xchg
jne
fs
sbb
add
es
mov
aas
insl
jb
data16
out
pop
inc
test
adc
mov
fcoml
fs
outsl
inc
xor
addl
xchg
xchg
push
jecxz
repz
lods
insb
repz
adc
jmp
push
mov
imul
arpl
dec
call
mov
jno
out
push
and
dec
mov
into
sub
sbb
mov
outsl
arpl
or
mov
insb
rorb
pushf
push
inc
cmp
or
aas
sarl
cltd
pop
scas
push
sbb
js
pop
jmp
and
pop
sub
inc
fyl2x
nop
cwtl
push
clc
je
cmp
out
icebp
scas
dec
jae
cmp
data16
shll
les
mov
adc
push
inc
inc
lods
dec
jmp
xchg
in
jnp
loopne
pop
adc
stc
mov
loop
lret
ret
or
mov
aaa
xor
insb
jmp
xchg
xor
xlat
inc
shrl
hlt
jecxz
pop
adc
inc
testl
mov
jge
add
fwait
add
push
repnz
or
jbe
out
dec
mov
xchg
pop
add
nop
das
pop
jecxz
clc
adcl
movsb
xchg
arpl
scas
pop
lahf
sub
jle
xor
sub
rorb
insl
movl
mov
lcall
adc
mov
push
out
push
stos
icebp
jno
xchg
xchg
jl
out
stc
dec
bound
dec
adc
mov
mov
sub
mov
in
out
add
rol
add
inc
add
daa
add
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
cld
xchg
js
out
adc
adc
xor
lret
rcrb
jnp
dec
add
mov
push
test
inc
mov
jo
sbb
jb
mov
sbb
aas
pop
aad
out
xchg
xchg
js
loop
jae
clc
or
mov
and
les
mov
jo
push
shrl
cmp
sbb
es
cwtl
ljmp
adc
pop
or
jns
mov
lds
dec
loopne
xor
inc
push
cmp
cmp
push
lahf
mov
sahf
mov
jb
fnstsw
sub
insl
cs
cmp
jae
xchg
aaa
mov
popf
rclb
mull
shrl
cmc
inc
sub
fcomi
aaa
stos
xchg
push
outsb
repnz
xor
xorb
adc
adc
mov
mov
aaa
cmpsl
lods
jle
repz
pop
mov
cmpsb
jp
fldcw
scas
xor
cmp
push
sub
push
push
sub
add
sti
les
cltd
pushf
mov
inc
dec
cmp
sbb
out
add
int
cmpsb
ds
mov
mov
sbb
xchg
cli
test
sbbl
cld
movsl
lret
into
inc
shlb
mov
sti
or
je
pop
cli
or
das
pusha
in
mov
icebp
lcall
mov
lods
cmp
jbe
adc
mov
dec
pop
add
gs
push
in
adcl
push
outsl
xchg
inc
imul
clc
mov
js
add
push
cmpsb
rolb
mov
rorl
clc
lock
dec
pop
lock
push
inc
in
scas
test
notl
push
das
int3
loope
add
adc
mov
mov
div
idivl
movb
cmpsb
lock
nop
push
fadds
sbb
movsl
jne
jne,pn
or
outsb
aas
loop
das
jecxz
je
mov
fisttpl
jns
jl
lahf
subl
pop
repnz
pop
mov
mov
int
std
mov
jge
leave
cmc
sub
mov
fistps
in
fimuls
mov
xchg
fcoml
adc
in
cmpsl
int3
mov
sti
xchg
xor
cld
mov
inc
push
daa
int
cli
and
jne
fimuls
cmc
jmp
or
mov
fbld
add
mov
cmpsl
sbb
pushl
test
popfw
jno
sub
jl
sbb
aas
adc
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
jp
inc
stos
sub
adc
sbb
inc
sbb
mov
fcomip
enter
imul
neg
mov
aam
inc
loopne
fs
push
les
push
sub
adc
add
and
shll
movb
mov
or
lock
repnz
fiaddl
xchg
loopne
enter
adc
mov
popa
inc
fcom
out
incb
and
mov
cltd
and
sti
dec
out
lcall
xchg
pop
xchg
jbe
mov
push
sbb
clc
pop
jbe
jns
std
in
add
ret
sub
adc
clc
ret
iret
in
xor
mov
les
pop
pop
and
xchg
push
std
xor
mov
adc
xor
xor
push
add
scas
or
jne
repz
push
out
dec
adc
repnz
xchg
mov
mov
cwtl
pop
fidivrl
movsb
pop
push
repnz
lods
sub
mov
mov
in
mov
pop
hlt
stos
cmp
lret
fcoml
dec
dec
dec
cmp
mov
aaa
lock
push
lds
pop
xchg
test
xor
and
dec
sarb
sub
mov
insb
inc
mov
push
mov
sub
fnstenv
std
mov
imul
adc
or
es
sub
jmp
mov
cli
stos
xchg
int3
xor
push
sub
xlat
ret
and
lods
popa
pop
xor
push
aad
pop
cmc
or
xchg
test
in
out
and
xchg
aam
jns
sarl
jecxz
inc
dec
in
neg
sbb
imul
mov
scas
xchg
adc
mov
out
ret
int3
or
and
inc
mov
jb
jbe
sbb
and
pop
fcomp
add
shr
out
loopne
shlb
push
mov
mov
clc
outsb
mov
and
or
sbb
or
decl
bound
inc
xor
sub
fiaddl
dec
dec
mov
sbb
je
enter
aam
cmp
fwait
xchg
jae
adc
push
nop
xor
out
pop
ret
sub
sbb
nop
push
lret
jecxz
subl
jg
fstl
loopne
mov
arpl
mov
xor
cld
jno
iret
add
dec
or
sti
lcall
clc
xchg
arpl
xlat
loop
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
imul
adc
dec
cltd
sbb
in
inc
in
jae
sub
cwtl
adc
pop
xorb
stc
rcrl
mov
aam
sub
adc
jb
jg
shlb
cmp
xlat
addr16
addr16
and
or
loopne
fwait
adc
gs
jecxz
xor
xchg
ret
mov
rcl
movsl
int3
adc
pop
shrb
mov
mov
mov
jnp
bound
xor
aad
sub
je
stos
leave
ret
or
cmp
mov
mov
xor
stos
cmp
xchg
inc
shrb
mov
sti
test
insl
jecxz
jno
fistpll
stos
jo
insl
push
fnstcw
jnp
add
stos
push
fisttpll
cmp
pushf
call
inc
in
aas
mov
stos
decl
mov
ja
mov
or
stc
lods
ret
in
ja
sarb
push
mov
sub
dec
enter
ret
pop
iret
mov
add
outsl
popa
int
test
in
mov
movsb
fs
or
and
push
repz
push
xor
pop
les
push
xor
add
outsb
xlat
scas
ljmp
repnz
inc
push
adc
aam
push
mov
shl
mov
mov
ret
mov
push
sbb
daa
and
mov
inc
fwait
pop
js
push
xchg
ret
roll
pop
inc
test
inc
ret
mov
inc
imul
cmc
imul
jmp
loope
sbb
sbb
mov
dec
int3
inc
sbb
imul
or
inc
pop
clc
or
lret
shl
sbb
lea
icebp
fisttps
aaa
fsts
in
lahf
dec
jge
ja
mov
push
jnp
std
mov
mov
loop
lds
out
mov
aad
divb
mov
imul
test
dec
adc
ljmp
scas
movb
sub
xchg
and
jbe
or
and
push
ljmp
lret
fsubrs
push
lods
xchg
into
aad
xchg
adcb
cmpsl
and
pop
add
mov
inc
nop
xor
pop
lods
jno
mov
push
rclb
out
stos
xchg
sbb
cmc
ss
pop
adcl
mov
push
xchg
lea
arpl
outsl
fistl
daa
jg
fisttpl
dec
and
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
sub
adc
adc
std
jae
scas
leave
sar
outsl
dec
push
and
jl
or
hlt
pop
or
in
aaa
xchg
inc
pop
js
jg
sub
add
int
and
inc
ficomps
mov
dec
jle
clc
fs
push
mov
inc
repnz
xchg
push
cli
mov
jo
jbe
and
mov
mov
or
sub
cmpsb
rcrl
add
fiaddl
aam
pop
mov
not
fldenv
add
add
lret
push
out
jecxz
pop
dec
xchg
out
pop
add
pop
pop
int3
add
data16
int
cli
stos
pushf
in
in
aad
push
loop
and
pop
je
insl
push
pop
aam
add
sub
adc
aas
jns
pop
dec
sbb
push
xchg
cmp
sub
add
aas
jl
sbb
dec
test
aaa
push
or
nop
mov
test
sbb
jno
fldcw
add
outsb
add
rclb
pop
call
cmp
fdivr
or
inc
sbb
subl
xchg
mov
out
out
insl
shl
mov
add
mov
in
and
insb
rcrb
enter
jnp
mov
mov
adc
xor
adc
dec
insl
cs
adc
ljmp
in
cmp
xorb
out
jnp
cmpsl
or
jbe
adc
test
test
jae
pop
aas
push
sbb
mov
stos
daa
out
lds
jb
mov
mov
fidivl
insb
cld
xor
sub
sbb
lea
loop
dec
dec
mov
lock
xrelease
cmpsl
mov
out
outsl
repnz
cmp
dec
adc
or
sarb
popf
mov
mov
rorb
out
ja
mov
and
adc
jecxz
xchg
or
addl
sub
aam
add
adc
dec
xor
adcb
cmpsb
xor
lcall
xor
lret
and
shrl
adc
push
jle
ss
cs
lock
dec
xor
cmpsl
fsub
cmp
add
or
cltd
iret
xchg
mov
lock
cli
or
ret
sub
and
cwtl
cmpsb
movsb
mov
scas
data16
mov
lcall
jns
dec
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
stos
ficoms
adc
fistps
push
sahf
fists
or
jmp
push
test
stos
enter
lahf
mov
jmp
pop
fcomip
js
cmp
data16
inc
rcrb
jmp
mov
mov
pop
pushf
je
fldcw
add
arpl
mov
repz
ds
mov
mov
neg
test
jmp
les
bswap
push
cwtl
cmp
mov
fiadds
mov
mov
sti
pop
mov
sub
push
imul
or
repz
pop
mov
mov
arpl
jl
in
loope
or
xchg
les
fistpl
inc
nop
arpl
outsl
cmp
xor
add
or
fwait
sub
xchg
sbb
movsl
push
sub
xor
sub
test
lock
call
jo
push
ds
xor
pushl
aaa
test
add
dec
xchg
int
mov
or
jmp
out
mov
insb
or
pop
sbb
int3
xor
test
sbb
xorb
xor
xchg
cmp
mov
hlt
loope
das
mov
aam
push
jae
xchg
jg
cmp
stos
data16
jl
cmp
mov
cmpsb
jo
cwtl
mov
cs
pusha
pop
into
enter
popa
xchg
mov
pushl
lret
adc
inc
push
cmp
add
add
pop
xchg
pop
dec
sub
jp
xlat
inc
stc
and
movsb
hlt
movsl
and
sbb
clc
push
sub
clc
jno
in
mov
mov
pop
lcall
mov
decb
shlb
xor
aam
int3
dec
sub
pop
mov
test
stos
push
movsb
or
mov
mov
cmpb
insb
lcall
or
push
test
cltd
jmp
mov
jo
dec
xchg
jecxz
fs
lods
pop
pop
shlb
dec
mov
and
ljmp
jmp
neg
push
outsl
cmpsb
out
mov
xchg
push
xor
pop
jb
dec
into
inc
mov
ljmp
sub
lods
sub
sub
inc
ficoms
in
xchg
loop
stc
xchg
iret
mov
loop
cmp
xor
sub
jae
push
std
outsb
jle
out
or
fisubl
xchg
rcll
dec
push
daa
mov
loopne
scas
xor
int3
inc
jg
cmp
sub
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
or
mov
xchg
movlps
clc
test
call
les
testl
dec
inc
stc
nop
xchg
ret
test
ja
clc
mov
inc
add
mov
std
adc
clc
popa
xor
or
mov
aam
adc
jne
push
cmp
pop
xor
dec
cmp
sub
loopne
icebp
arpl
push
xchg
or
imull
aad
jns
cmc
bound
sbb
insb
cltd
clc
push
push
jg
jmp
mov
popf
mov
jne
jbe
push
add
out
fcom
jo
rcl
dec
daa
lock
aaa
out
mov
sbb
mov
cltd
cmc
dec
rcrb
and
ret
mov
mov
pop
cmp
and
jge
push
cmp
xchg
add
push
jle
jle
cltd
mov
popf
dec
mov
and
movsb
int3
mov
mov
pop
imull
dec
dec
ss
ljmp
xchg
xor
test
rcr
mov
jmp
adc
into
cmp
aad
jns
jge
loop
jae
faddl
shll
xlat
sub
push
push
push
inc
jbe
and
xor
shlb
out
fsubrs
push
inc
les
orb
call
mov
pop
add
jle
icebp
pop
cmpsb
loopne
dec
sbb
cmp
sub
xchg
xor
mov
lret
sbb
jne
and
imul
sahf
jecxz
out
loopne
cmp
shrb
negb
inc
rcr
mov
fmull
loop
add
lea
dec
inc
and
dec
xor
call
stc
add
xchg
icebp
out
mov
idivb
stos
and
call
and
jb
adc
popa
pusha
cli
jae
andb
or
roll
sbb
pop
xchg
push
mov
mov
and
mov
dec
or
mov
adc
xchg
xchg
pop
inc
call
es
cltd
orb
mov
mov
aaa
xor
mov
repnz
or
in
ret
sub
stos
xlat
mov
sbb
cmp
repz
pusha
or
fwait
push
cmp
inc
pmaxub
jae
enter
lock
sbb
pop
mov
aaa
mov
jle
gs
xor
sub
pop
mov
jbe
out
mov
loop
and
sbb
mov
cltd
pop
lods
xchg
sbb
icebp
cs
xchg
movl
pop
adc
data16
mov
iret
xorb
mov
sub
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
xor
call
push
xor
mov
push
push
repnz
mov
cmp
shr
les
push
push
es
and
mov
sbb
push
jns
outsb
loop
rolb
cltd
mov
pop
cltd
and
dec
iret
sbb
insl
sub
loopne
cmp
pop
pushf
adc
mov
ret
pop
mov
fstl
cmp
mov
inc
dec
sub
pop
add
addr16
adc
inc
and
movsl
xchg
or
mov
movb
jnp
xchg
js
sbb
jns
fucomp
pop
rcll
jne
xor
sahf
push
xchg
add
jl
or
leave
std
clc
jp
adc
ljmp
xchg
test
leave
push
cmp
fnstenv
arpl
ror
sbb
dec
adc
sar
mov
lret
sbb
or
add
outsl
xor
loop
push
test
or
ljmp
push
rcrb
mov
xchg
inc
dec
xchg
cmp
lret
push
adc
popa
rclb
push
sbb
lea
and
movsl
out
sub
into
xchg
cmp
sub
adc
push
gs
mov
xlat
fmul
pop
call
movl
into
add
pop
mov
cltd
aaa
sub
push
pop
adc
stos
mov
push
jnp
lret
cmc
addr16
in
out
xor
movsl
mov
sarb
mov
xlat
aaa
pop
pop
sbb
ret
mov
dec
addb
dec
push
fsubrs
push
test
gs
sbb
push
les
inc
iret
pop
xchg
rcrb
push
mov
daa
mov
add
ljmp
out
or
iret
xor
outsb
pop
dec
jmpw
push
repnz
jmp
out
test
xchg
or
leave
cld
sbb
je
les
or
lock
roll
std
and
xor
sub
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
sub
push
into
adc
adc
jp
sbb
hlt
inc
mov
mov
mov
shl
stos
js
imul
outsl
xchg
adc
add
movsl
mov
lea
repz
popf
xor
stc
out
dec
mov
pop
stos
pushf
sbb
inc
xchg
cltd
sbb
pusha
xlat
shrl
in
rcrb
sbb
sbb
push
out
fucomp
add
pop
sub
adc
arpl
push
mov
dec
push
inc
cli
lods
ficomps
gs
inc
movsb
lods
inc
jp
ds
jb
and
adcl
sbb
dec
mov
mov
data16
gs
fcmovnb
xchg
xchg
push
push
sbb
fnsave
pop
inc
roll
test
cmpsl
sbb
pushf
mov
xchg
ret
cmp
mov
mov
pop
mov
je
xchg
or
or
cmp
or
xchg
enter
mov
ficomps
jmp
shlb
push
addr16
fs
push
ja
scas
inc
push
cmc
pop
lcall
adc
dec
push
jne
int
push
xlat
data16
push
sahf
sub
imul
xchg
imul
shll
fbstp
adc
jge
repz
insl
and
xchg
jbe
aaa
xchg
imul
mov
cmp
cli
imul
pushf
cwtl
jmp
mov
stos
sub
cmpsl
mov
lcall
out
mov
sbb
aaa
fsubl
xchg
xor
sbb
or
jno
rcl
pop
sbb
cmpb
mov
jmp
lods
mov
leave
das
outsl
push
cmp
leave
std
stos
mov
cmp
push
pop
dec
bound
and
lahf
daa
lcall
or
fbld
pop
into
orb
cmpl
sub
pushf
sbb
xchg
icebp
dec
cmp
mov
bound
pusha
mov
cmp
sbb
or
dec
cmpsl
adc
mov
ja
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
add
adc
adc
cmp
inc
fmull
pop
stos
popa
push
cmc
je
rol
data16
inc
in
decb
enter
repz
xor
cmpsl
pushf
repnz
add
fsubrl
out
inc
das
mov
adc
push
out
xchg
pop
ficompl
shl
bound
xchg
sbb
fdivrl
xor
jbe
stos
inc
cli
lret
add
adc
xor
shll
cmpsl
mov
faddl
lock
mov
sub
push
cmc
test
push
inc
out
sti
xchg
negb
popf
push
lea
bound
pop
js
mov
leave
in
notb
mov
cmp
add
jns
popa
pop
jmp
add
sub
mov
scas
mov
sbb
jae
enter
loope
jnp
push
jne
adc
or
and
pop
push
js
jo
in
add
adc
into
xchg
jae
pop
fmull
call
sbb
dec
lea
incl
inc
push
xor
stos
xchg
lds
jbe
imul
test
out
pop
jbe
sarb
in
sbb
stos
or
mov
mov
outsb
adc
jg
add
dec
mov
pop
stc
js
cmp
rol
xchg
dec
out
sub
test
addr16
and
shr
dec
mov
lds
hlt
push
dec
sbb
pop
jno
mov
jmp
or
adc
outsb
mov
push
mov
push
out
inc
mov
xlat
add
fsubrl
dec
mov
xchg
dec
inc
imull
xor
shl
mov
sbb
cmc
lret
in
and
dec
jecxz
test
adc
xchg
or
stos
enter
je
rcl
mov
mov
dec
hlt
ret
xlat
push
sbb
inc
adc
ja
int
lcall
sbb
ret
push
cwtl
dec
inc
cld
cmc
imul
clc
imul
pop
aaa
or
ret
loop
sti
pop
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
xor
adc
movlps
xchg
loopne
push
fldcw
repnz
pushf
mov
jg
or
fisubs
frstor
sbb
mov
das
sbb
je
sbb
ficomps
lret
daa
ja
dec
lods
jl
jge
mov
lea
enter
dec
lahf
or
pop
sbb
and
scas
lea
ret
mov
frstor
jge
leave
pop
insl
mov
jae
testb
inc
test
and
outsl
aad
push
push
jns
cltd
xor
pop
adc
out
lods
stc
pop
fistpl
fldt
adcl
ljmp
pop
out
jb
stos
dec
push
xchg
ret
push
lods
sbb
cld
jno
shlb
mov
sbb
mov
dec
movsl
sub
cmpsl
mov
test
push
and
stos
loope
sub
mov
and
cld
mulb
arpl
or
call
adc
push
loopne
mov
or
or
hlt
lret
mov
add
push
cld
js
insb
adc
rclb
stc
push
mov
ss
cmpsb
out
cmp
fs
xor
pop
push
push
jg
adc
pop
imul
loope
out
hlt
ret
lock
lret
xor
jne
xor
insl
rol
loop
push
les
pop
ret
dec
aas
fwait
sbb
sbb
xor
sbbl
negb
test
xchg
mov
leave
push
les
pop
js
loop
fisubrl
mov
jecxz
loopne
out
lret
push
clc
xor
aas
pop
fsubr
jmp
sbb
and
mov
mov
ret
sbb
dec
sahf
add
sub
ja
sarb
push
jle,pn
add
push
mov
dec
mov
outsl
test
out
mov
stos
je
enter
xor
leave
xlat
fucom
add
mov
pushw
fidivrl
test
pusha
loop
bound
xorb
popa
nop
nop
jp
ss
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
mov
leave
ret
enter
fistpll
movsl
fsubl
and
repz
cmpsb
aam
add
push
mov
or
cmc
jne,pn
shlb
lock
inc
je
jg
sbb
imul
and
mov
jbe
push
pop
xor
loopne
fcmovnu
sar
into
inc
jns
sahf
mov
aad
sbb
xchg
jmp
xchg
stos
and
mov
mov
outsb
pop
mov
fwait
popf
xor
mov
lock
out
testl
movsl
sahf
out
sbb
adc
in
sbb
shll
dec
or
loop
sti
jbe
cmp
mov
rcll
sub
scas
lods
add
jl
sbb
add
push
lahf
mov
sbb
xchg
pavgw
imul
dec
inc
filds
stos
fimuls
rolb
imul
xorb
iret
push
mov
jmp
popf
jg
cli
and
test
ret
or
mov
scas
inc
pop
lds
push
orl
aam
out
cld
push
sahf
push
cli
fidivs
or
add
lock
and
out
fmull
sub
push
ret
pop
rcrl
jnp
iret
sub
pop
mov
icebp
test
insb
cmpsl
and
jno
pop
pop
adc
adc
mov
mov
xor
es
jne
xchg
xor
insb
fisttpll
mov
repz
jnp
addr16
and
mov
scas
and
xor
lcall
aas
out
cwtl
push
in
jns
jno
movsl
stos
jae
inc
scas
xchg
sbb
mov
push
push
fistl
jge
dec
subl
jbe
pop
mov
push
stos
and
or
push
xor
sbbl
int
inc
lahf
xor
int
push
mov
and
inc
stc
jnp
pop
insb
push
push
ret
pop
lret
xchg
movsb
enter
mov
add
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
aaa
out
jge
adc
adc
enter
fnstsw
subl
xchg
xchg
adc
mov
shlb
js
lods
imul
scas
xchg
mov
cmp
or
and
fistpll
inc
out
cld
arpl
mov
xor
ss
jnp
flds
fidivrl
push
and
cld
pop
out
dec
jo
sbb
or
fisubs
out
mov
lods
gs
mov
out
jbe
outsl
push
and
or
repz
into
std
jg
mov
fwait
adc
test
jle
int3
sbbl
test
xchg
xchg
popl
mov
xchg
test
es
sub
dec
arpl
fisubrs
push
outsl
insl
daa
repz
add
clc
aad
or
cmp
pop
pop
and
xchg
sti
scas
sub
dec
and
jno
mov
dec
adc
ljmp
xor
shll
mov
dec
jmp
xchg
or
loop
and
jnp
or
pop
push
dec
inc
push
insl
jle
hlt
bnd
out
inc
out
jmp
mov
xchg
jns
ret
xor
dec
dec
repnz
add
lret
stos
ret
into
repnz
mov
ret
jo
les
dec
pop
jecxz
fidivrl
push
loop
les
dec
mov
xchg
add
lcall
mov
fcomi
lret
mov
sbb
insb
xor
jbe
push
push
adc
adc
adc
popa
bound
cmp
add
add
mov
imull
test
jp,pn
jecxz
imulb
push
inc
push
sbb
out
inc
das
aas
popa
mov
mov
dec
cmc
sbb
xor
js
sub
cmp
insl
lock
test
dec
push
pop
movsb
add
add
xlat
push
outsb
andb
sub
cmp
pushf
mov
shrl
les
test
pop
mov
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
bound
mov
adc
fldcw
aad
fbld
cmpsl
add
aad
push
pusha
xor
sub
fdivr
jbe
pop
adc
cld
mov
fidivs
and
mov
add
daa
pushf
push
jo
push
and
in
loope
or
rolb
outsb
push
aad
adc
pop
and
sbb
ja
xchg
mov
adc
aas
and
in
mov
mov
imul
push
xchg
movsl
jno
mov
and
aam
insb
inc
sti
push
xchg
xchg
inc
loop
sub
test
push
sbb
push
cmp
push
jbe
jae
fistpll
xor
stos
inc
or
scas
fdivrp
popa
jp
jno
repz
and
pop
stos
mov
dec
dec
inc
xchg
jle
out
dec
pop
scas
sbb
dec
rcrl
fistps
xchg
mov
push
push
arpl
cmp
lret
outsl
mov
insl
movsl
or
pop
test
ljmp
pop
movb
xor
out
sub
data16
mov
mov
jnp
stos
push
test
jmp
test
sub
outsb
inc
scas
mov
cmpsl
or
mov
push
xchg
and
fldl
cltd
cmpsb
add
xor
push
push
arpl
mov
mov
lret
sahf
jne
xor
in
adc
push
pop
mov
mov
cmpsb
cli
adc
es
addr16
mov
jae
roll
pop
stos
lret
sub
cmpb
sub
movsb
mov
adc
subb
lret
aam
jge
mov
push
enter
inc
lods
add
ds
adc
ljmp
cmp
sbb
pop
sbb
mov
adc
mov
rolb
mov
pop
and
jns
or
mov
push
ror
sbbl
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
inc
push
mov
enter
dec
lcall
cwtl
push
xor
add
mov
inc
push
inc
inc
push
out
xchg
cwtl
je
mov
xor
cmpsl
dec
insl
adc
pop
inc
push
mov
pop
xor
push
xor
leave
mov
push
sub
insb
inc
pop
adc
imul
icebp
pop
mov
addl
xor
mov
in
sbb
inc
jle
mov
and
xchg
pop
add
and
sbb
popf
mov
sub
mov
and
or
jo
cmpsl
les
push
sbb
xchg
stos
pop
cmp
rolb
push
scas
out
mov
jg
cmpsb
call
loop
sub
push
or
push
add
mov
fadd
cmovns
hlt
mov
xchg
inc
xchg
dec
or
fadds
jle
mov
fdivrl
adc
sbbb
repz
test
ror
mov
push
mov
add
or
into
sbb
test
not
cltd
mov
mov
jl
jecxz
jb
push
jbe
cmp
ror
push
iret
mov
or
pop
das
imul
cmp
mov
sbb
iret
and
inc
xor
lods
dec
inc
mov
cmp
push
or
xor
mov
loope
insl
test
dec
scas
movsl
mov
leave
mov
mov
cwtl
lahf
hlt
push
cmp
push
push
xchg
fidivrs
mov
pop
jle
mov
pop
cld
stos
mov
inc
lea
out
test
fs
in
mov
clc
ffreep
lret
or
mov
pop
cltd
adc
je
dec
ljmp
in
xlat
js
js
inc
xlat
jmp
mov
mull
mov
xchg
sbb
inc
xlat
shl
pop
stos
adc
and
add
adc
sbb
or
sub
in
test
imul
mov
cmp
ja
inc
psrlq
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
mov
adc
adc
test
repz
xchg
or
jecxz
je
das
and
dec
and
imul
sub
sbb
scas
das
mov
cmp
daa
dec
pop
repz
das
loop
call
movsb
or
test
sub
cmpsl
mov
sbb
lcall
jne
cld
cltd
bound
adc
jle
and
sbb
repz
xor
pop
out
hlt
cmp
ja
jp
inc
jl
xchg
adc
dec
jge
xchg
xchg
vpmacsdql
aas
cmpsl
jge
pop
sub
push
sti
mov
push
push
lret
jp
xor
iret
jb
pop
enter
mov
and
inc
or
lret
sub
pop
or
xchg
and
sbb
push
mov
inc
call
frstor
es
xor
data16
test
dec
xor
cmp
rcrb
dec
icebp
sbb
add
je
sub
sub
bound
fistpll
add
jae
inc
sub
sub
adc
cmpsl
inc
shlb
and
lock
mov
aam
imul
mov
int
scas
insb
test
adc
mov
and
movsb
dec
test
cmp
push
jae
repz
pop
mov
sub
cs
dec
sbb
movsb
or
ret
and
arpl
pushf
jmp
or
push
paddsw
jb
lret
mov
xor
cli
lods
fs
aad
add
cmpb
lret
xor
cmpsb
jg
push
ficompl
imul
cli
and
scas
xchg
pop
rol
pusha
push
aaa
xchg
out
in
pop
add
in
fnstenv
dec
int3
xchg
sahf
pop
jne
xchg
ja
sub
or
ljmp
dec
or
cli
lret
and
and
test
shlb
push
ret
push
pusha
ficompl
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
mov
cmpb
movlps
push
fadd
xor
je
push
pop
fcmovbe
inc
andb
lcall
or
xchg
push
push
rorb
push
push
out
push
je
mov
and
sbb
popa
sti
popa
dec
mov
int3
dec
ljmp
out
shlb
popa
add
filds
xchg
mov
shl
sbb
dec
push
pop
dec
lret
inc
aaa
push
outsb
pop
hlt
sbb
in
test
fimull
roll
clc
or
dec
in
gs
lds
mov
fs
xchg
jnp
cmp
bound
pop
xor
addr16
movsl
gs
insb
insb
xchg
adc
dec
rclb
xor
xchg
sbb
mov
js
jnp
dec
ret
and
call
or
imul
push
dec
mov
lcall
mov
out
mov
dec
idivl
punpckldq
scas
pop
fwait
lret
movsb
xor
mov
dec
stos
xchg
aam
dec
and
mov
addr16
fildl
push
mov
iret
mov
mov
or
jns
pop
and
and
pop
fimuls
repnz
push
sub
movsb
cmp
pop
popf
std
int3
aaa
xchg
push
xorb
insl
inc
cmpps
mov
pusha
inc
mov
test
es
add
je
add
pop
mov
and
add
pop
mov
cmp
cmc
mov
push
jmp
mov
jo
xor
mov
loope
pop
or
lret
gs
test
xchg
hlt
xchg
mov
inc
fwait
inc
stos
std
ret
sbb
xor
jbe
mov
inc
fdiv
push
mov
iret
rorb
test
stos
mov
lods
pop
fadd
push
mov
mov
pop
xchg
mov
lret
sbb
daa
nop
fistps
pop
test
or
in
jecxz
outsb
jnp
fwait
mov
pop
ljmp
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
sahf
mov
add
adc
push
push
aad
jl
scas
ljmp
dec
adc
rol
pop
loope
mov
xor
push
pop
mov
or
std
push
sub
dec
aam
xchg
adc
inc
jle
mov
leave
adc
mov
sub
pop
aas
jmp
mov
fwait
sbb
in
sub
aam
xor
out
je
ljmp
insb
add
cwtl
or
sbb
popf
sahf
xor
stos
ljmp
mov
mov
xchg
sub
pop
mov
xor
xor
and
jge
mov
mov
and
push
fisubrl
dec
jbe
fisttps
inc
aaa
jge
pop
lods
jbe
inc
iret
lahf
inc
cltd
mov
push
xor
out
ljmp
cmpsb
push
jecxz
sbb
xor
pop
or
pop
faddl
mov
pusha
lret
std
xor
add
jg
out
repnz
sub
add
inc
mov
clc
adc
jnp
sub
clc
lcall
call
lods
mov
sti
cmp
mov
or
mov
negb
fdivrs
jecxz
sub
out
inc
insl
pop
sti
jmp
js
bound
sahf
push
outsl
lock
insl
fnsave
pop
push
hlt
jns
cmc
loopne
or
nop
inc
mov
mov
dec
fiadds
movsl
xor
imul
mov
cmpsl
sbb
sub
add
mov
in
push
jecxz
xor
inc
movsl
xor
jmp
ds
bound
test
sbb
jmp
cmp
gs
adc
ret
xorb
cs
pop
icebp
imul
popf
out
cmp
push
mov
jno
jl
inc
mov
ret
out
out
add
lcall
xchg
dec
jmp
popa
pop
shlb
mov
push
scas
lret
push
dec
mov
sub
fmuls
inc
dec
movsl
push
sbb
out
ds
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
sub
mov
adc
adc
xchg
subl
sahf
lret
adc
cwtl
mov
nop
xchg
ljmp
jnp
dec
outsb
inc
cmp
cltd
and
dec
mov
loope
test
clc
arpl
xorl
aaa
cs
jge
adc
jg
out
cld
in
and
dec
mov
and
inc
enter
jl,pt
push
cltd
cmpb
adc
loopne
push
add
cmpsl
xor
inc
pushf
shrl
dec
mov
les
add
mov
loope
movsl
out
jbe
push
sarb
in
inc
movsb
push
cmp
add
sub
movsb
inc
cmp
jmp
imul
push
in
and
mov
shlb
ja
mov
cmp
jo
cltd
in
lahf
xchg
gs
cmp
xor
jb
cld
divb
jmp
and
pushf
sub
mov
pop
and
sti
pop
orb
aas
imul
dec
xchg
sbb
xor
adcb
daa
and
dec
mov
loopne
push
or
cltd
push
mov
xor
mov
cwtl
and
sbb
mov
scas
test
cli
cmpsb
adc
andb
pop
cld
mov
mov
jmp
sti
push
inc
xchg
jb
sbb
loope
mov
inc
sarl
stc
clc
and
lahf
sbb
add
roll
mov
push
into
pop
mov
popa
in
jl
jno
pop
mov
int3
jne
in
outsb
jns
es
mov
and
push
out
sahf
in
fdivs
in
insl
cwtl
divb
mov
js
mov
pop
adcl
loope
andl
aam
xor
push
mov
scas
cmp
pushf
stos
mov
pop
or
fcoml
xor
pop
sub
popf
ret
dec
xorl
inc
push
add
push
lea
dec
jbe
scas
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
mov
enter
ja
jo
dec
test
test
jg
xor
cwtl
decl
mov
cmp
test
sub
aas
lret
lcall
std
mov
jae
or
mov
push
stos
movb
pop
lock
mov
movsb
int3
inc
cmp
fstpl
repnz
or
ret
push
pop
adc
jne
xor
shl
cmc
das
pop
scas
pop
ja
mov
cmc
fdivrl
mov
mov
fistpl
repz
cmp
lea
push
add
sub
pop
and
out
in
dec
mov
cmc
mov
ljmp
shr
imul
cld
ss
popf
lea
sub
xor
das
mov
daa
sahf
pop
mov
in
mov
add
adc
and
ror
pushw
mov
xchg
push
subb
mov
in
cmp
iret
inc
daa
scas
lods
fst
xchg
out
and
mov
fidivrs
repz
sbb
mov
push
out
pop
pop
cs
out
fidivl
jno
aas
fucomip
pop
adc
das
mov
sbb
int
inc
sub
lods
stc
or
xchg
jl
add
xor
sub
imul
and
out
xchg
add
leave
int
imul
xor
and
loopne
das
and
pop
dec
nop
call
mov
pushf
cmp
cld
and
ret
pop
int
push
pop
inc
push
push
jno
sbb
and
dec
outsl
fmull
mov
and
xchg
cmp
push
and
shr
xlat
fcmove
dec
sti
and
decb
inc
cmp
inc
fnstenv
test
fsubrl
fstl
shrb
or
ljmp
push
shlb
fnstenv
ss
fsubrl
clc
sbb
xchg
scas
mov
gs
mov
stc
sub
stos
mov
sbb
pop
std
adc
xchg
daa
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
inc
pop
mov
enter
or
jo
pop
and
push
rol
lahf
mov
shr
adc
scas
dec
push
mov
sarl
out
cmpsb
or
xor
int3
ficompl
sub
jbe
popf
imul
stos
or
stos
fdivrp
pop
dec
add
mov
addb
adc
and
push
popa
ja
lcall
and
jecxz
in
sub
shl
sub
stos
aaa
es
xor
bound
sub
push
out
fsubs
xchg
incb
pushf
jle
mov
xchg
repnz
xchg
imull
xor
mov
or
test
daa
inc
push
and
lea
sbb
in
ds
sti
cmpsl
xchg
mov
dec
jbe
repnz
lret
mov
push
popf
sbb
sbb
pop
mov
mov
inc
xchg
idiv
push
loop
push
add
scas
mov
ret
mov
ret
pusha
jle
fs
hlt
mov
inc
cmp
rcrb
popa
shrb
adc
xor
and
std
sbb
lds
xchg
adc
cs
in
push
or
pop
sub
lods
shrb
repz
adc
cmp
pop
xchg
cmpsb
sti
and
insb
psubusw
sbb
dec
xor
rolb
ret
imul
clc
jns
test
fcmove
pop
inc
jp
cmp
fwait
sub
lds
cs
pop
in
adc
sbb
popa
insb
cld
push
hlt
inc
shll
mov
adc
leave
sbb
push
add
les
pop
xor
sahf
outsb
push
pop
test
and
jnp
hlt
je
cmp
js
cmp
mov
jecxz
imul
bound
xchg
in
in
cmp
mov
mov
mov
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
xchg
std
jle
xchg
adc
adc
xchg
jmp
push
cmp
inc
es
test
mov
lret
js
add
stos
add
test
xchg
lahf
and
loopne
xor
add
pop
nop
repz
sbb
dec
xchg
cmp
jns
shrd
leave
lea
sbb
inc
data16
sti
aaa
loopne
push
cmp
out
mov
incb
lret
lahf
xchg
mov
and
data16
jg
jmp
fmulp
sub
lds
repnz
shlb
mov
leave
lret
ret
ss
clc
push
in
mov
cmpsl
rolb
mov
sti
ret
fstl
andl
hlt
mov
pushf
lods
loop
test
lods
bound
lods
mov
lcall
adc
nop
icebp
mov
loop
out
shrl
or
adc
mov
lods
pop
shr
ret
rcrl
daa
lods
sbbl
pop
sti
add
mov
dec
jno
xchg
dec
lahf
push
out
outsl
mov
xlat
or
sbb
ljmp
in
stos
mov
xor
mov
insl
mov
adc
jge
adc
sbb
inc
adc
imul
mov
iret
xchg
mov
and
enter
pop
cs
inc
jo
adc
and
dec
shlb
jl
jg
dec
pop
out
nop
inc
in
inc
pop
fstps
scas
cwtl
mov
hlt
fistpl
mov
inc
and
pop
push
and
adc
les
cmp
int
sbb
pop
popf
ds
pushf
sbb
lret
cmp
mov
push
aas
int3
leave
cltd
gs
pop
lods
sub
sub
mov
sbb
in
adc
addb
fstpl
movsl
jne
dec
jle
jmp
adc
iret
lret
adc
cs
push
in
mov
sub
stc
in
ret
jge
pusha
mov
out
addl
pop
lods
outsb
nop
pop
into
inc
cmp
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
sti
out
stos
xchg
adc
cmpb
leave
fdivrs
xor
repz
sub
xchg
jge
das
sub
mov
hlt
jp
sub
sub
add
roll
shlb
das
jg
leave
stos
cmp
filds
mov
adc
popa
and
inc
inc
lret
cmp
adc
inc
and
pop
push
mov
sbb
sbb
int
ret
mov
test
test
bt
pushf
push
push
jo
jae
hlt
into
jp
add
fs
mov
std
daa
pushf
push
pushf
jno
sbb
cmp
push
sub
stc
arpl
cld
test
sbb
test
mov
shlb
dec
lahf
movsb
imul
xor
setno
jb
rorl
sbb
push
cli
and
fcmovnu
jle
outsb
sarb
xchg
imul
fbld
jge
and
ss
std
fwait
inc
sub
add
pop
adc
pop
shr
jg
sbbl
sub
push
into
push
add
sti
bound
addl
or
push
pushf
push
notl
pop
and
shrb
sbb
imul
push
sbb
add
or
sbb
mov
pop
imul
mov
cwtl
test
push
push
adc
inc
aaa
incl
out
xor
sarb
ss
mov
fisubrs
cmp
repz
insb
cmp
inc
jle
ljmp
shr
sub
aam
pop
xor
cmp
out
pusha
cmc
scas
ss
or
inc
hlt
hlt
insl
mov
das
aaa
mov
mov
lret
add
lea
jae
xchg
sub
fwait
dec
in
inc
test
fwait
mov
rcl
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
inc
jle
stos
cmp
adc
pop
lds
stos
outsl
data16
jae
fwait
inc
jl
mov
or
rclb
mov
sub
mov
xchg
xchg
popf
dec
mov
inc
mov
inc
jno
xchg
int3
cmc
sbb
lret
pusha
mov
xor
and
xchg
je
outsl
jp
mov
lret
into
mov
xchg
fnstsw
xor
and
xor
or
aam
and
call
sbb
ret
jle
push
push
imul
sub
adc
mov
pop
jo
cmpsb
sbb
xor
outsl
iret
mov
fs
daa
imul
fistpll
xchg
inc
aaa
orl
movsb
or
xor
movsb
pop
inc
pop
push
ret
lea
or
xchg
mulb
mov
dec
inc
ljmp
cli
addr16
mov
aaa
cltd
dec
shll
call
cli
sti
iret
lahf
pop
xchg
cmp
push
in
std
aad
mov
inc
sarl
inc
sahf
adc
xor
xor
lods
cmp
mov
inc
in
shll
mov
test
add
aaa
dec
xchg
shufps
mov
movsb
test
jle
aam
mov
shll
mov
or
push
jns
xor
out
jg
xlat
mov
test
in
cmp
push
fprem
jb
fisubs
mov
pusha
adcb
mov
and
xchg
dec
inc
adc
xlat
mov
loope
sub
insb
stos
and
rorl
lods
hlt
out
addl
cmp
xchg
into
pop
test
ljmp
movsl
and
dec
mov
popf
jne
dec
jmp
xor
xchg
sub
aam
sub
arpl
repz
jns
out
xor
mov
xchg
scas
and
repz
in
push
in
outsl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
sarb
push
and
lock
push
sahf
pop
scas
add
or
push
or
das
lcall
xlat
fst
sbbb
rclb
mov
fistpl
je
jl
dec
into
cmp
out
out
shll
mov
mov
sbbb
cltd
lods
imul
xlat
lcall
cmp
mov
adc
push
gs
shlb
mov
insb
repz
lods
push
les
inc
test
push
int
scas
xchg
repz
fildll
sti
rcrb
and
movsb
push
cli
lcall
or
iret
push
xchg
popf
jnp
fnstcw
call
bound
roll
and
lods
test
aad
jl
add
jnp
mov
testl
sub
pop
in
sahf
loope
popa
add
adc
mov
insl
je
mov
inc
mov
jns
stos
xlat
or
repz
mov
mov
mov
jne
imul
push
outsl
clc
pop
mov
sub
xor
daa
xor
inc
mov
pusha
xchg
xchg
movsb
add
adc
sbbb
lret
iret
inc
in
sbb
test
push
add
mov
into
mov
leave
push
stc
rcrl
int
mov
ficoml
xchg
pop
adc
leave
test
or
mov
cwtl
rol
cmp
cmc
cmp
inc
inc
cs
add
push
mov
aas
pop
xchg
inc
into
leave
arpl
pop
mov
mulps
cmpsb
imul
xchg
out
xlat
push
pop
cwtl
ret
lret
jne
loope
pop
push
cmp
dec
cli
outsb
lret
scas
mov
clc
push
cmp
sub
enter
sub
in
jns
les
enter
inc
out
cltd
xchg
loope,pt
mov
jno
push
sbb
jns
rorl
or
je
xchg
nop
scas
mov
into
add
enter
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
xor
xchg
adc
push
xor
outsl
inc
ror
inc
es
pop
pop
sub
push
les
fdivs
cmpsl
mov
repnz
out
mov
mov
jnp
add
sub
inc
xchg
push
loop
dec
adc
mov
into
push
punpcklbw
sti
jp
icebp
xchg
loope
dec
and
pop
fnstcw
add
jmp
in
inc
das
jmp
js
xchg
and
lcall
inc
mov
xchg
stos
mov
cmp
dec
shlb
jle
hlt
rcr
mov
sbb
dec
xchg
cmp
bound
popa
adc
xor
sub
cmp
stos
mov
pop
cmp
into
in
inc
das
push
push
xor
loop
push
pop
scas
repz
add
scas
push
test
sarl
mov
push
and
inc
cld
mov
adcb
cld
and
lcall
inc
sarb
and
pop
sbb
shl
xchg
mov
stos
std
setno
pop
cli
jp
push
push
arpl
dec
cwtl
cli
xchg
stos
imul
sti
lea
negl
cwtl
jno
lds
stos
push
add
inc
test
sbb
ficomps
push
pop
jl
lds
mov
es
movsl
push
sbb
ds
jp
mov
jg
div
cld
dec
ljmp
mov
and
lret
test
push
movb
arpl
inc
mov
jle
insb
xchg
out
sub
push
sub
addr16
inc
mov
lahf
cmp
push
test
mov
aam
push
jno
xor
ss
loop
es
inc
xor
stc
dec
imul
push
das
out
cmp
xor
dec
and
mov
aaa
mov
repnz
addl
mov
and
and
push
iret
pop
std
push
pop
fistl
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
inc
call
adc
movlps
adc
mov
xchg
jbe
ficompl
call
or
cltd
ja
xlat
mov
add
mov
sti
cltd
in
pop
outsb
sbb
jae
outsb
arpl
jne
in
jecxz
and
push
and
jno
dec
jnp
jnp
pop
loop
notb
clc
call
mov
jne
mov
aas
fwait
imul
adc
mov
shl
vmptrld
xor
js
or
call
mov
sub
das
popf
mov
stc
add
mov
cmpsl
sbb
sbb
pop
cmp
cwtl
bound
push
popf
dec
sbb
movsb
jo
jmp
inc
stos
rcl
popf
std
pop
sti
xchg
repnz
push
inc
sbb
ljmp
iret
cmp
cmp
dec
jp
imul
inc
loop
mov
pusha
pop
jecxz
sub
out
adc
clc
mov
nop
inc
mov
mov
jmp
xlat
adc
and
repz
test
fldenv
mov
dec
or
outsl
fnstsw
ror
cmp
push
or
mov
repz
sahf
scas
dec
dec
rcrb
push
arpl
jbe
xchg
rcrb
dec
fisubs
stc
dec
pop
pop
hlt
mov
xchg
xchg
dec
jno
in
repz
add
nop
cli
jns
jo
rclb
mov
jl
mov
dec
int
mov
xor
adc
and
js
icebp
push
sub
sbb
iret
stc
jmp
push
inc
xchg
xchg
pop
fdivr
lods
into
add
daa
movsl
mov
jo
push
inc
cmp
filds
sarl
mov
clc
mov
pop
xor
movl
jl
or
lea
inc
adc
cmp
and
push
insl
cs
inc
mov
ror
fs
ss
in
sahf
movsl
mov
push
inc
std
cmc
cli
addb
xor
mov
pop
dec
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
dec
push
adc
adc
lea
xor
or
sbb
sar
sbb
sub
adc
imul
icebp
bound
adc
adc
bound
xor
stos
iret
push
lea
enter
ja
mov
pushl
cltd
loope
jl
mulb
aad
arpl
mov
aam
out
sbb
data16
in
and
lods
xchg
clc
sbb
xor
mov
or
lahf
jecxz
repnz
xor
les
mov
mov
cmc
out
and
gs
push
lock
mov
movsl
insb
mov
push
pop
leave
lea
lods
inc
sub
idivl
ret
adc
insl
js
push
xor
clc
jmp
repnz
lcall
in
jbe
sbb
jo
test
sbb
aaa
cmpl
inc
daa
jle
push
rcr
and
ficomps
outsl
scas
test
adc
test
lcall
ljmp
call
mov
xor
je
insb
sub
adc
aad
fcmovnbe
stc
icebp
xlat
stos
nop
imul
inc
fs
mov
mov
pop
mov
mov
lock
cmpsl
lret
adcb
das
scas
pop
jnp
lret
movsb
and
cmpsb
loopne
or
test
leave
xor
jns
adc
pop
dec
imul
daa
pop
xchg
jb
cmp
imul
in
push
mov
outsb
mov
sub
lods
aaa
icebp
repnz
sub
pop
sbb
xor
popf
push
mov
adcb
pop
xchg
std
mov
xchg
push
leave
push
mov
out
or
addr16
cmp
fs
xchg
rorl
push
xor
rcrb
inc
cmp
sar
fstpl
jbe
dec
jbe
out
loope
decl
daa
orb
pop
jb
inc
data16
jae
and
jp
mov
fs
add
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
pop
enter
adc
adc
dec
ds
or
cmc
lcall
out
dec
cmp
jg
xchg
xchg
and
icebp
jae
test
ret
hlt
test
shll
cmp
push
hlt
xchg
out
xchg
sub
jo
adc
mov
scas
add
outsl
adc
je
test
hlt
cli
cmp
arpl
div
jo
mov
outsb
xchg
push
lea
sub
test
adc
in
push
add
mov
fmul
pop
test
xchg
push
int
add
lock
repz
shr
jo
fcoml
jge
pop
pop
inc
mov
and
xchg
stc
loope
mov
dec
icebp
ss
pop
mov
repnz
xchg
push
cmp
add
jne
mov
lahf
lahf
push
negb
mov
out
mov
bound
rcll
test
jno
shll
mov
stos
cmp
jle
sub
mov
imul
sti
clc
mov
adc
lds
xor
cmp
jecxz
ds
xor
sbbl
cmpsb
push
push
mov
ficompl
aaa
outsl
dec
aas
stc
insl
mov
dec
sub
mov
sbb
ss
jnp
jmp
xchg
ja
imul
cmp
xor
rcll
sbb
mov
sti
lds
in
add
mov
mov
int
jno
leave
lods
xchg
pop
andb
add
cmc
jns
pusha
cmp
imul
push
and
mov
pop
lds
adc
roll
mov
add
cwtl
test
insb
cli
xor
mov
popa
sbb
dec
xchg
adc
lock
pop
or
push
mov
stc
dec
xor
sti
nop
xchg
mov
bound
xchg
and
lea
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
repnz
jle
jo
adc
movlps
pop
jno
jmp
mov
rorb
push
jl,pt
stos
inc
pop
dec
inc
add
jle
mov
out
mov
pusha
sub
dec
jecxz
repz
pop
cmp
cmp
push
push
int3
cmp
movsb
adc
cli
dec
pop
push
add
jb
lock
jmp
loopne
mov
shll
fisubrl
arpl
or
test
mov
bound
mov
out
inc
and
lea
aaa
mov
int
lcall
push
push
lds
subb
mov
movsl
cwtl
lock
or
leave
leave
cmp
or
test
push
dec
jbe
popa
data16
out
mov
push
jne
cli
lea
adc
sgdtl
xchg
jb
bound
sti
xorb
mov
cmp
rol
gs
or
push
and
lea
lods
shll
lret
loope
mov
mov
ret
adc
jne
mov
or
outsb
cmp
jnp
lods
pushf
clc
cs
inc
adc
adc
rcr
nop
add
hlt
test
insb
pop
cmp
shr
test
or
mov
jge
lods
rorl
and
rcll
push
mov
dec
call
lds
cmc
jnp
addr16
jmp
dec
sbb
push
pop
repz
dec
xor
inc
xchg
sub
gs
mov
jmp
cld
dec
icebp
sub
jno
loop
or
sbb
cs
push
mov
xlat
mov
enter
xor
fs
imul
push
push
ja
and
inc
mov
jae
pushf
imul
pop
outsl
cs
addr16
das
mov
add
clc
int3
ds
cmpsb
std
xor
rolb
clc
fmuls
inc
test
dec
or
push
push
mov
lret
cmp
pop
mov
cmp
sbb
ret
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
adc
push
push
insb
adc
adc
in
pop
das
or
xchg
push
aaa
lods
ss
push
jo
cmpsb
mov
push
xchg
ret
fildll
dec
inc
xchg
push
mov
mov
andb
mov
pop
idivl
dec
into
inc
jecxz
call
sbb
add
stos
mov
call
int
mov
out
add
and
pop
mov
sub
mov
sahf
push
add
and
pop
push
pop
adc
jno
cmc
out
in
xlat
mov
inc
push
hlt
push
xchg
sarl
mov
push
sbb
cwtl
pop
jg
push
xchg
rol
pop
in
jp
dec
ret
push
jno
je
gs
sbb
mov
mov
std
fwait
test
test
ficoms
push
ret
cwtl
xchg
or
sub
inc
ss
pop
and
lahf
add
nop
out
mov
jnp
aas
mov
jg
int3
pop
addl
push
xlat
dec
and
mov
fildll
mov
dec
adc
jo
adc
jl
xchg
insl
popf
sar
pop
pop
cmp
dec
jg
js
mov
lret
shlb
push
js
into
out
mov
mov
push
mov
daa
lahf
jbe
icebp
sti
stos
dec
and
push
add
ljmp
xor
mov
mov
jp
lea
lret
les
mov
push
fwait
inc
jae
and
subl
jb
dec
mov
adc
lret
data16
push
shrl
jmp
cltd
iret
mov
cmp
enter
fmul
das
iret
push
jbe
aaa
sub
loope
push
faddl
cli
xchg
cmp
mov
add
sub
loopne
das
mov
pushw
push
pop
mov
jge
mul
or
bound
lret
imul
lea
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
xchg
or
enter
lahf
cltd
inc
ljmp
daa
ja
mov
mov
push
movsl
adc
out
iret
dec
ret
add
push
xchg
imul
fisttpl
lahf
adc
jno
jb
xor
into
xchg
mov
dec
sbb
sbb
sub
mov
mov
rclb
xchg
pop
out
mov
lcall
notl
pop
xorl
add
loope
rcrl
xor
xor
cmp
stc
cltd
mov
push
mov
sub
cs
sub
jg
inc
notb
pusha
movsb
stos
inc
cmp
xor
sarl
dec
in
sbb
popf
jp,pt
and
mov
fistps
inc
and
xor
sbb
mov
test
mov
std
outsl
in
int
xchg
mov
or
adc
inc
pop
mov
cltd
leave
rcrb
mov
scas
mov
sti
cmp
mov
push
jbe
inc
scas
mov
pop
sbb
je
hlt
inc
sahf
scas
xor
jb
stc
mov
das
inc
je
and
icebp
inc
adc
sarl
pop
push
sub
out
ret
in
lahf
pop
lock
fidivs
mov
fisubrl
clc
pop
dec
scas
loope
push
xor
fdivrl
xchg
and
mov
imul
addr16
fbstp
in
xchg
push
pop
dec
mov
insl
iret
mov
xchg
bound
jg
in
rol
mov
dec
rorl
mov
add
dec
fnsave
or
pop
mov
orb
nop
jecxz
mov
int
adc
ficoml
cmpb
xor
cmp
push
lock
out
dec
sbb
ss
out
divl
call
mov
inc
xchg
addr16
jb
xlat
push
insb
push
xor
shlb
xchg
jne
mov
cwtl
mov
cmpsl
imul
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
cwtl
lods
lea
enter
ja
std
xor
add
push
sbb
and
pop
outsb
scas
dec
pop
mov
sbb
jmp
adc
addr16
xor
cmp
cmp
mov
or
sbb
into
and
jne
les
cwtl
cmpsb
movsb
stc
xchg
ss
add
jmp
aam
mov
fcomps
imul
loop
jo
data16
andb
mov
mov
mov
aam
out
dec
cmove
mov
or
xchg
xor
mov
mov
loopne
adc
lret
les
shll
mov
cmpsl
popa
cmp
pushl
shl
in
clc
sub
push
pop
mov
dec
and
mov
pop
out
inc
test
xor
inc
repz
pusha
fs
jmp
inc
inc
rcrb
add
in
cli
push
sub
fistpll
jno
enter
and
inc
popa
add
xchg
fcoms
and
or
sub
inc
in
aas
inc
jbe
mov
sbb
ret
aam
xchg
jl
or
daa
pushf
sbb
mov
pop
cmpl
fwait
dec
ja
inc
sarb
fsubrs
int3
dec
outsl
sbb
sahf
mov
push
pop
jle
xlat
inc
cltd
xor
test
std
fwait
add
adc
scas
out
out
mov
xchg
mov
dec
push
ss
outsb
ficompl
movsb
nop
sbb
jno
movsb
pop
jmp
movsl
ljmp
xor
lahf
adc
xchg
pop
mov
mov
sbb
shll
popf
lods
sbb
aam
std
mov
xor
je
mov
aam
sbb
adc
jge
push
repnz
ss
aaa
or
fwait
loop
jns
cld
xor
jno
xchg
mov
mov
hlt
xchg
dec
jl
xor
scas
sub
mov
or
popa
outsb
shl
imul
arpl
and
sbb
jb
or
xor
lcall
cmpsl
jns
aaa
jne
sbb
test
add
fcoms
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
sahf
loop
dec
in
add
add
jmp
shlb
bound
ret
or
xlat
adc
adc
jecxz
cmpsb
ja
xlat
rcrb
dec
mov
fstps
out
adc
shl
sub
adc
out
pop
fistps
scas
fildll
aas
loopne
test
or
iret
ret
adc
testb
jg
je
sbbb
fwait
mov
jnp
and
sarl
ret
xor
inc
sbb
loope
in
add
xchg
imul
mov
repz
push
add
inc
mov
mov
jae
nop
pop
add
adc
xorb
in
movsl
loop
sbb
dec
pop
cmp
scas
rcl
inc
stos
inc
sbb
movsb
sahf
scas
mov
mov
cmp
mov
lret
cmpsl
dec
jg
dec
jl
sbb
cmp
and
jne
adc
or
pop
push
outsb
call
aas
cmp
test
push
jne
jmp
orl
clc
clc
bswap
push
ja
xor
pop
lock
outsl
mov
decl
pop
add
jle
mov
stc
cld
in
cwtl
xor
movsb
dec
aaa
jbe
jge
aad
xor
pusha
adc
int
movsl
add
aaa
je
pop
rol
iret
push
sbb
cmovbe
push
pushl
cmpsl
lret
ret
fstpt
mov
dec
sub
icebp
nop
insl
gs
cmpsb
jmp
dec
dec
imul
outsb
mov
ret
pop
fnstcw
fildll
mov
adc
sub
push
push
fcom
in
pop
cmp
mov
jbe
push
jnp
loope
sahf
xchg
lods
fdivs
cmp
cmp
and
aas
lret
jge
lods
xor
or
xor
out
jle
jg
lds
ja
pop
mov
pop
dec
pop
ffreep
test
sub
fidivrs
notb
add
popf
sbb
dec
xchg
aaa
scas
mov
add
jge
movl
sub
mov
movl
jmp
adc
add
jnp
bound
ss
push
push
data16
pop
adc
adc
loop
fistpll
add
loopne
jo
mov
repz
pop
push
lods
mov
mov
pop
or
insb
inc
jge
xlat
lock
and
sub
mov
lret
mov
and
and
inc
lock
jbe
push
push
addr16
xor
mov
bound
cmc
clc
out
add
mov
or
pop
or
xchg
bound
test
sub
dec
shlb
jmp
pop
movsl
add
js
and
subl
outsl
sahf
addr16
push
stos
outsl
or
pushf
lcall
roll
call
icebp
and
push
repnz
imul
cs
loope
dec
popf
xor
mov
or
or
mov
push
xchg
test
repnz
pop
add
adc
xchg
in
xchg
sub
js
inc
push
xchg
int3
inc
push
dec
ss
or
jl
les
outsb
int3
xchg
idivb
push
and
push
sti
std
loopne
insl
push
and
loop
int3
icebp
ret
push
clc
sti
pop
enter
xor
adc
inc
loop
fdivp
jo
out
inc
out
daa
lds
fnstcw
dec
test
in
icebp
scas
and
pop
leave
fiaddl
sbb
daa
push
mov
div
dec
adc
lods
flds
mov
out
js
sbb
xlat
cld
xor
jb
mov
pop
in
repnz
repz
inc
push
sub
push
inc
jns
mov
pop
push
and
stos
rcrl
xor
and
dec
push
add
pop
pop
cs
data16
adc
hlt
cwtl
popf
outsl
pusha
add
ds
and
mov
push
dec
aas
cmp
arpl
test
add
jle
rolb
call
loop
gs
xor
add
adc
fildl
and
inc
lret
xchg
aaa
adc
mov
pop
sbb
or
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
xlat
pop
jp
stos
pop
adc
adc
subl
roll
mov
aas
pop
pop
sub
repnz
out
inc
push
call
push
cli
push
inc
xchg
mov
arpl
jns
mov
mov
adc
fdivrl
cld
push
and
dec
loopne
cmp
xchg
pop
push
or
push
ret
adc
sub
das
push
pop
and
icebp
loopne
aaa
pop
movsl
xchg
push
ja
mov
lods
mov
cmpsb
in
dec
sbb
or
push
int
les
cld
mov
sbb
mov
cltd
push
rclb
and
lret
loop
lret
ret
sub
loopne
jmp
push
stos
push
addl
fisttpll
mov
mov
sub
das
out
pop
adc
pop
inc
or
sbb
test
inc
ret
adc
into
cmp
in
push
roll
ja,pn
dec
clc
jno
xor
adc
cmpsb
xchg
mov
inc
mov
cmpb
fsubs
shll
imul
jge
and
mov
gs
mov
mov
faddl
push
jbe
into
or
mov
ss
xor
add
mov
jle
or
xor
addr16
push
out
lock
clc
xlat
test
scas
ret
sbb
push
adc
insb
rcr
jae
inc
or
out
je
dec
add
and
xor
dec
sbb
add
add
mov
stos
leave
jno
push
jecxz
dec
sbb
cld
imul
imul
xchg
mov
xchg
movsb
leave
push
dec
test
push
cld
xor
sub
test
daa
cmc
sbbb
std
inc
sbb
pop
fadds
testl
pop
popf
fs
mov
cmpsl
xchg
cld
movsl
sti
inc
xor
data16
rolb
inc
xchg
call
pop
push
xor
daa
fstps
sarl
into
repnz
bound
dec
les
xor
xor
lock
push
rdtsc
enter
mov
mov
jns
add
sub
inc
jo
addr16
add
insl
push
pop
ljmp
out
or
rcll
inc
push
push
loope
test
test
jo
and
out
shl
dec
sub
mov
jns
push
push
sti
mov
pop
push
sbb
xchg
xlat
aad
mov
dec
xor
mov
or
dec
call
leave
addb
cwtl
xchg
dec
cmc
xchg
lods
jmp
adc
mov
jo
pusha
ss
in
iret
mov
insl
jne
call
and
mov
test
push
js
or
mov
inc
hlt
mov
xlat
test
jge
icebp
insb
pop
xchg
jmp
or
mov
push
push
push
mov
push
fdivrs
dec
in
and
pop
sbb
and
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
js
push
adc
adc
fldenv
stos
enter
sbb
lock
pop
xchg
xor
mov
sub
test
test
mov
mov
insb
jge
fs
mov
xchg
jmp
out
xchg
loope
leave
add
das
cmpsb
rcll
sub
ftst
mov
imul
xor
imul
dec
xchg
push
cmp
inc
adc
int
or
movsb
push
scas
nop
ret
push
bound
mov
sbb
add
fbstp
mov
mov
fisttpl
dec
sbb
movsl
push
loope
clc
sub
out
cs
fmuls
mov
aad
and
mov
mov
xor
out
xchg
jb
dec
test
sub
fistps
popf
in
and
push
cmpsl
push
pop
add
ficompl
popa
andl
test
and
jmp
shlb
mov
mov
and
dec
dec
syscall
dec
test
sti
imul
aas
jecxz
adc
scas
test
push
fisubrl
sbb
mov
inc
push
mov
add
test
fsubs
scas
add
mov
pop
stos
int
stos
fwait
cwtl
or
xchg
push
sub
or
add
push
adc
add
and
in
es
js
sbb
adc
adc
cmp
cmc
xor
pop
les
jno
push
jno
aam
xchg
pop
pop
js
xchg
xchg
push
mov
xor
pop
sub
repz
ja
movsl
in
sbb
pop
nop
sub
mov
xchg
scas
cwtl
clc
enter
insl
aam
aad
fs
shlb
wbinvd
pop
sub
cmp
popl
pop
ret
mov
leave
inc
cmpsl
xchg
dec
sbbb
adc
decb
adc
xorb
sbb
xchg
shll
imul
sub
sbb
push
shlb
pushf
xchg
adc
sbb
sub
xchg
mov
mov
aaa
scas
xor
mov
movsl
adc
pop
sbb
pop
mov
in
add
dec
sub
addl
and
popa
push
xchg
test
dec
jmp
xchg
es
mov
sub
test
jb
cmc
fs
bound
in
sbb
mov
mov
scas
aas
add
lahf
dec
ret
and
mov
movsb
sub
gs
mov
adc
sbb
cltd
push
aam
leave
mov
sbb
stos
aas
cmp
popa
rorl
enter
imul
adc
ja
cmpsl
and
or
jb
pop
jp
and
nop
mov
sbb
lret
sbb
or
xchg
cmp
add
pop
out
lret
and
mov
cmp
icebp
jbe
addr16
in
out
iret
lcall
insl
dec
in
xchg
pop
xchg
or
mov
out
aaa
add
xor
dec
pop
inc
fs
mov
loope
test
pop
sbb
lock
pusha
cmp
insl
hlt
fists
jecxz
clc
in
push
dec
adc
mov
hlt
mov
xlat
push
movq
xchg
mov
test
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
