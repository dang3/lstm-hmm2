push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
movsb
and
jo
jle
jo
xlat
cmp
rol
pop
push
add
pop
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
lock
test
lea
fsubl
mov
shrl
iret
int
or
mul
jbe
repz
sub
push
xchg
int
sub
xchg
out
cmpsb
pushf
xchg
shrl
or
out
cld
adc
mov
les
sub
push
in
sarb
lea
sub
cmpsb
sub
bound
push
jbe
mov
adc
imul
cmp
jb
mov
in
jp
sbbl
cmp
sub
mov
enter
sbb
nop
mov
jns
mov
out
cmp
cmpsb
jne
push
cwtl
adc
inc
push
ss
pop
xchg
icebp
or
push
stc
mov
xchg
ja
lods
pop
or
or
xchg
test
cmpsl
mov
aad
sti
popf
dec
outsb
inc
jge
call
loop
jl
insb
mov
adc
mov
cld
inc
iret
cmp
fsubr
bound
mov
cld
aas
shr
test
sbb
ss
iret
sahf
ficoml
pop
dec
decl
jle
pop
jae
jb
dec
jle
mov
hlt
ljmp
add
pop
mov
sub
and
mov
jmp
clc
icebp
mov
icebp
ficompl
lret
jle
jo
jle
jo
loope
cmpsl
sbb
jo
pop
mov
jg
jecxz
mov
sub
sahf
mov
dec
xchg
ss
fcoml
xchg
adc
sbb
out
lock
add
fidivl
repz
imul
pop
cmp
or
outsb
inc
jg
jmp
jne
shlb
add
mov
les
adc
and
negb
push
in
loope
mov
lods
int3
lds
cmp
cmp
and
dec
fnstcw
ja
jne
fcompl
inc
mov
sbb
mov
inc
idivb
clc
lcall
test
int
lcall
icebp
cltd
cltd
push
negl
sbb
cmpl
xchg
scas
inc
ja
sub
repnz
stc
mov
adc
call
mov
loop
jle
inc
sti
inc
outsb
in
sar
mov
popa
xor
das
int3
dec
stc
mov
ljmp
scas
in
dec
das
dec
bound
mov
dec
repnz
sub
sbb
dec
sbb
aas
cmp
mov
sub
leave
std
inc
idivb
sub
push
inc
cmp
loope
xor
gs
icebp
fs
adc
dec
popf
dec
inc
adc
sbb
inc
adc
cwtl
cmp
repz
daa
scas
and
rclb
add
mov
mov
movsl
pop
mov
stc
loop
push
out
ret
inc
cmp
jl
sbb
cmp
cli
ror
gs
cltd
xchg
outsl
push
dec
paddusb
loopne
mov
ljmp
xor
insl
cmp
adc
lcall
add
bound
sahf
push
add
xchg
js
hlt
mov
repnz
sub
enter
push
mov
pop
dec
add
cmp
sti
push
nop
push
test
xchg
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
pusha
test
jo
jo
lret
daa
leave
mov
fwait
mov
rsm
adc
fsts
dec
in
jne
dec
rcll
or
insb
ret
xchg
push
jecxz
jmp
decb
mov
cmp
cmp
sub
sarb
dec
sbb
mov
outsb
mov
xchg
jle
mov
or
xchg
lods
sub
xor
es
mov
ja
sahf
or
stc
xlat
fs
aam
sbbl
rcl
adc
repz
dec
pop
xor
shll
push
mov
jnp
mov
into
pushf
xchg
hlt
popa
gs
daa
movsb
jb
lahf
sub
fidivs
nop
xor
sub
mov
or
fsub
js
sti
out
popf
rcrl
jb,pt
fisttpl
mov
das
rcll
aam
fwait
clc
jb
cmp
or
jmp
sub
aas
adc
mov
xchg
in
rolb
imul
adc
aaa
inc
jmp
sahf
in
mov
outsb
jbe
sbb
jo
mov
mov
xchg
mov
jg
cltd
push
xchg
cmp
out
repnz
sbb
aas
test
in
pop
push
andl
push
adc
ljmp
test
mov
jae
enter
push
ret
xchg
nop
pop
inc
les
push
roll
mov
aad
in
lret
sub
or
fucomip
jne
add
jb
lret
adc
aas
inc
ds
inc
adc
sbb
and
inc
dec
xor
sbb
push
rcrl
bound
dec
test
inc
xchg
xchg
cmp
lret
cmp
dec
repnz
xor
sub
sub
in
jle
xlat
outsb
mov
jbe
inc
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
imul
jo
jle
jo
pop
imul
inc
lds
int3
mov
sarb
bound
subb
push
sub
push
ret
daa
lds
dec
in
pop
and
pop
cmpsb
insl
push
pop
sub
sbb
and
lods
jae
movsb
les
mov
push
cwtl
sbb
add
and
ds
sbb
push
es
rclb
popf
sub
out
lret
jl
lea
test
mov
test
scas
inc
push
xchg
fs
fiaddl
out
jmp
cmc
mov
sbb
xchg
imul
enter
add
outsl
or
fsubrs
scas
mov
pop
mov
sbb
jb
movsb
mov
aas
mov
insb
pop
sub
stos
arpl
repz
aad
mov
ret
das
inc
xor
daa
repnz
mov
aaa
mov
and
push
decl
iret
aam
push
add
push
bnd
lods
dec
xor
mov
pop
push
lret
into
mov
xchg
and
mov
and
aaa
add
aad
push
pop
mov
adc
daa
dec
divb
jbe
jnp
xchg
xorb
mov
sti
test
ret
data16
mov
arpl
outsb
js
leave
aam
lahf
mov
sub
in
out
jmp
iret
mov
jb
stos
ret
stos
ret
lods
shll
or
fs
mov
adc
aas
iret
dec
movzwl
push
adc
pop
xor
int
mov
incl
outsb
add
mov
movsl
jno
mov
xchg
adc
cmp
sahf
mov
xor
and
psubd
mov
iret
sbb
lea
jnp
jp
test
and
outsb
test
jle
mov
and
sarl
lock
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
cli
mov
jo
jle
jo
aaa
mov
mov
andb
mov
add
mov
push
jp
jl
add
xor
xor
mov
or
jae
hlt
pop
out
push
sbb
repz
pop
sahf
sub
mov
fcompl
xor
push
daa
cld
cmpsb
dec
test
pop
mov
push
push
adc
jmp
jmp
add
mov
push
pop
adc
pop
add
pop
and
or
es
sbb
jg
mov
and
inc
call
out
les
sub
inc
xchg
dec
inc
leave
test
xor
lock
push
adc
sub
inc
fucomi
jo
arpl
push
cmp
dec
xlat
gs
in
jbe
pushf
ds
in
add
mov
jecxz
jecxz
xchg
test
outsb
sbb
int
scas
sub
sbb
int3
push
push
inc
sub
mov
push
idivl
adc
push
paddsb
mov
test
mov
insl
inc
dec
mov
out
jp
aam
cmc
or
add
cmc
xchg
negl
push
or
mov
imul
push
adc
or
push
sbb
popa
movsl
ds
and
loopne
xor
inc
orl
push
push
jmp
fwait
les
or
popf
push
lds
fmull
dec
push
push
mov
out
pop
mov
dec
push
int
jo
push
and
shlb
ret
xchg
test
shll
test
sbb
or
iret
jbe
push
sarb
xchg
sti
add
mov
xchg
or
mov
into
adc
arpl
inc
cwtl
imulb
cli
add
xor
sbb
daa
pop
add
in
into
add
push
mov
sbb
push
and
dec
jecxz
loop
dec
mov
xor
jecxz
inc
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
gs
push
jo
jo
jo
push
pop
stos
js
imul
push
dec
stos
sub
and
lods
and
push
lahf
sub
and
sbb
mov
js
push
pop
loope
push
scas
mov
xor
mov
pop
enter
xchg
and
test
xlat
add
incl
dec
nop
inc
out
pop
pusha
pop
test
ss
inc
test
int
inc
shrd
fstps
xchg
and
insl
nop
stos
insl
cwtl
es
pop
adc
cli
idivb
pop
sahf
add
pop
mov
mov
mov
pop
pop
out
and
and
and
and
push
das
test
lret
dec
push
movsb
ja
das
mov
pop
xor
lahf
stc
mov
stos
fcmovnu
push
lahf
push
jmp
rol
or
push
push
xchg
data16
imul
fdivrl
cmpsl
pop
int3
pop
push
mov
push
sti
enter
and
scas
mov
ja
mov
dec
dec
inc
mov
push
sbb
cli
hlt
cld
insb
mov
lcall
xchg
mov
mov
xchg
daa
divl
aam
sub
pop
outsb
jg
sub
sahf
mov
adc
in
jb
mov
jbe
data16
inc
xor
xlat
enter
sub
or
addr16
xchg
fnstenv
std
ja
out
adc
push
jno
movsl
clc
push
pop
mov
fisttpll
jo
stos
push
dec
inc
xchg
xchg
push
pop
sub
das
mov
movsl
xchg
inc
mov
sbb
and
dec
add
fs
cwtl
mov
mov
mov
lahf
test
call
loop
jg
inc
xchg
jl
fsubl
sbb
shrl
sbb
aad
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
addb
sbb
jo
jo
pop
out
idivl
jne
ss
rcrb
lods
hlt
fisubrl
and
pop
add
roll
pop
xor
or
cmpsl
sub
pop
pop
fiaddl
mov
inc
jge
mov
leave
pop
in
or
scas
out
enter
dec
jmp
ljmp
repz
test
fsubs
mov
jae
mov
imulb
or
adc
dec
sub
loop
pop
pop
leave
daa
xchg
xor
or
mov
jp
das
movb
movsb
xor
dec
in
sbb
and
mov
inc
dec
mov
pop
lods
inc
fs
aaa
mov
idiv
xchg
mov
inc
or
stos
hlt
cmp
cld
pop
daa
xchg
jo
leave
push
sbb
add
out
mov
arpl
sahf
sub
jecxz
pop
xor
add
xor
das
xchg
xchg
lcall
push
sbb
rolb
pop
mov
pop
xchg
test
pusha
cmpsb
rolb
out
lds
insb
sub
jb
aad
push
sbb
add
sbb
sti
sbb
ljmp
adc
ss
ja
bound
fidivl
ficomps
jl
int3
adc
xor
dec
lods
xor
fsub
jne
mov
or
pusha
repnz
movsl
xor
mov
mov
shlb
sti
xor
shll
push
mov
mov
mov
jmp
jbe
or
shr
xchg
sbb
call
lea
int3
loope
mov
mov
inc
out
xor
jmp
pushf
and
lcall
mov
push
aam
add
cs
test
mov
mov
mov
dec
dec
dec
cld
push
rorl
add
add
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
inc
jo
jo
jo
jo
push
sahf
rcr
inc
pop
sub
mov
icebp
pop
out
add
lahf
lcall
shll
jp
dec
enter
movsb
mov
aaa
push
xor
mov
stc
jns
test
cmp
fidivrs
inc
add
sbb
mov
jle
sahf
inc
repz
and
mov
mov
repnz
div
dec
lret
and
js
loope
sbb
adc
mov
cmp
cmpsb
js
ja
pop
fwait
push
jae
fs
ljmp
lock
fsubrs
fistl
movsb
cmp
aas
mov
das
pop
xor
roll
fmuls
fdivrl
popf
out
adc
notb
pop
stos
mov
inc
push
push
sbbl
xchg
mov
xchg
mov
shll
fisttpll
sub
sub
xor
jmp
movsb
sbb
stc
in
fwait
mov
mov
xor
xchg
data16
jmp
cmp
scas
inc
mov
mov
or
paddusw
aas
xor
or
mov
inc
inc
leave
push
pop
aaa
sub
push
cs
aas
outsb
cwtl
jnp
fdivl
or
fidivs
push
imul
jmp
bound
push
shlb
mov
fidivrl
cld
jnp
mov
or
and
inc
sbb
lods
aas
ss
pop
test
test
cwtl
jno
cmp
hlt
sbb
mov
xorb
sbb
dec
dec
jb
adc
add
rcrl
dec
rclb
pop
xchg
ret
ja
adc
push
out
pop
cwtl
jmp
jne
mov
push
rcr
cmc
adc
iret
mov
push
ret
loopne
dec
movsl
mov
cmc
push
ds
pop
push
add
or
ja
repz
rol
ret
jp
dec
mov
lods
xchg
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
pshufw
jo
jle
jo
jne
lea
stos
or
push
loope
orb
mov
cmp
and
mov
and
test
cmp
jg
inc
mov
outsb
xchg
divb
xchg
push
shlb
mov
xchg
jecxz
incb
lea
lock
push
std
cmpsl
fdivs
add
or
push
mov
iret
pop
sbb
mov
xchg
sbb
je
pop
jne
sbbb
xchg
inc
insl
or
jnp
dec
dec
in
mov
mov
mov
shr
out
aaa
iret
inc
xchg
div
xor
or
cmp
adc
fildl
je
pop
xchg
cmp
fstpl
dec
ret
push
subb
or
pop
gs
mov
in
js
pop
lods
inc
jl
inc
add
dec
clc
jl
push
pop
iret
push
adc
iret
mov
stos
sbb
xchg
xor
hlt
inc
les
or
xchg
mov
jno
xchg
fsubr
xlat
dec
xchg
imul
inc
xchg
lea
sub
jl
adc
out
std
xor
test
insb
xchg
cs
das
pop
shll
aas
iret
out
pusha
add
pop
cmp
jmp
cmpsl
hlt
pushf
push
dec
or
ss
adc
mov
pop
popa
mov
sub
je
mov
dec
or
loopne
testw
add
push
in
and
insb
lock
cmc
cmpsb
aaa
push
lock
fstl
and
xchg
or
enter
outsb
or
and
jp
jecxz
inc
pop
lcall
lahf
sub
jae
push
outsb
mov
and
xor
mov
stos
add
dec
inc
mov
jno
cld
mov
cmpb
mov
jecxz
mov
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
aas
cwtl
ja
movsb
or
mov
jne
out
cltd
mov
fidivs
cltd
pop
lods
push
mov
leave
scas
xchg
or
and
mov
xchg
lcall
ret
sbbb
out
mov
and
out
stc
mov
mov
dec
cs
dec
mov
add
cwtl
scas
inc
inc
push
and
dec
shlb
lods
push
sbb
sti
arpl
leave
push
les
std
loopne
sbb
xor
or
cmpsb
mov
mov
nop
xchg
out
pop
push
cmp
mov
lds
je
inc
fdivs
jle
imul
fdivrs
mov
inc
mov
inc
xchg
imul
sarl
cmp
and
popf
mov
xchg
fs
or
xchg
mov
push
mov
xchg
inc
in
cltd
and
and
mov
mov
xchg
xor
or
das
inc
out
adc
jb
push
scas
enter
sub
jo
outsl
pop
call
das
xchg
lret
mov
push
xchg
jp
out
sbb
xchg
add
cmpsl
fsubl
inc
push
cmp
bound
cmp
fs
adc
ret
test
mov
std
loop
rcrl
out
fdivs
adc
shll
mov
stos
jl
js
push
dec
cmpsl
pop
hlt
push
dec
and
ret
mov
dec
fstpt
leave
cmpsb
movsb
jns
add
adcb
jnp
jge
test
imul
pop
push
push
pop
enter
cmc
in
mov
sub
ljmp
jge
test
sbb
inc
in
and
sbb
lahf
mov
pop
hlt
adc
jmp
shlb
sbb
lret
pop
mov
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
jp
adc
mov
icebp
inc
or
mov
nop
call
adc
xlat
insb
pop
ds
push
push
and
imul
fdivl
cld
push
mov
pop
clc
or
add
in
or
dec
shl
ljmp
xor
fwait
push
bound
jnp
mov
xor
jno
mov
insl
jae
cmpsl
xchg
cmp
cli
in
outsl
pop
sbb
fdivrl
pop
cli
jle
mov
bound
dec
sahf
shlb
loop
fistps
out
test
fimull
xor
movsb
xorb
pushf
jns
rclb
sub
or
cld
jge
xlat
jge
dec
sahf
dec
mov
pop
mov
repnz
hlt
jg
xlat
xchg
sti
dec
and
mov
fisubl
cmpsl
cmpsl
fiadds
inc
push
sub
into
pop
bound
mov
mov
adc
in
rcrb
shll
lds
mov
pop
xchg
cmp
cwtl
fidivl
cmpsl
loop
pushf
lret
mov
cld
mov
dec
sahf
push
mov
add
xor
les
push
ret
xchg
dec
fldcw
cmp
iret
dec
ljmp
shlb
xchg
and
dec
mov
push
fsub
sub
jp
fistpll
cmp
lahf
fs
push
cmp
dec
and
push
or
sub
xchg
push
repz
jnp
call
stc
icebp
ss
jl
mov
cmpsb
sub
int3
sbb
pop
adcb
in
and
sahf
jb
repnz
pop
xchg
sub
movsl
test
popa
dec
cmpsb
nop
sub
inc
testb
lds
dec
adc
fwait
aad
rcll
push
dec
jge
sub
out
lret
imul
loopne
outsl
imul
sub
mov
test
ljmp
scas
arpl
dec
jno
xchg
rclb
mov
fstl
push
and
shrb
mov
lcall
jb
fidivrs
or
fsts
jnp
push
fcomi
insl
lds
mov
ret
loope
pop
cltd
push
ss
aam
add
sbb
sub
xchg
pop
jge
fidivrs
js
pop
xchg
scas
dec
xor
fcomps
imul
bound
call
mov
push
or
xchg
out
sub
sub
cmp
xlat
out
cmp
rcrb
pop
and
subl
push
mov
or
fucomi
adc
rolb
xor
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
test
adc
jle
jo
test
imul
pop
sub
pop
test
test
stos
cs
ffree
mov
or
movsb
sti
iret
jp
mov
cmp
bound
jmp
lock
lds
cmp
xlat
ja
mov
adc
jp
sbb
mov
orl
lret
hlt
cltd
and
dec
mov
lret
out
jg
inc
mov
mov
pusha
adc
and
push
pushf
sbb
fs
ds
test
jecxz
ds
adc
orl
movsb
leave
adc
sbb
mov
xor
int
mov
jecxz
movsl
and
pop
add
jp
sub
int3
inc
popa
cwtl
test
call
cmp
test
jb
cmp
xchg
fadd
or
push
fnstsw
mov
mov
mov
sub
pop
push
push
mov
push
es
xchg
cmpsl
push
pop
icebp
loopne
test
push
push
push
sub
rorl
cmc
mov
stos
push
mov
mov
jnp
pusha
lods
add
and
mov
xchg
lock
test
cmp
push
xchg
loopne
inc
decb
mov
pop
negb
jle
jmp
or
out
sub
cmc
inc
and
rcr
les
xchg
popa
loopne
dec
jle
lds
js
mov
ret
outsb
xchg
out
filds
cmp
pop
test
mov
pminsw
ds
push
cmp
cmp
lea
rcll
jecxz
jmp
movsb
xor
lret
xchg
cwtl
movsl
popf
fimull
loope
in
xchg
pop
inc
lds
orb
mov
xchg
pop
popf
add
rclb
mov
movsb
in
aam
imul
sub
or
or
fwait
cltd
jno
adc
add
sbb
adc
sbb
dec
mov
loope
fs
mov
icebp
scas
andb
jecxz
dec
adc
test
mov
subl
scas
push
mov
cmp
pop
mov
xor
cli
inc
pop
insl
push
sti
dec
and
inc
jne
xchg
xor
fadds
xor
outsl
mov
push
inc
daa
icebp
mov
outsb
lods
out
xchg
or
mov
enter
fistpl
mov
cmp
test
dec
ds
mov
into
and
mov
loop
xchg
inc
xor
dec
xor
push
push
sub
mov
push
test
repz
cmpsb
out
dec
jbe
sbb
rclb
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
out
push
pop
jo
mov
int
sti
out
repz
xchg
rol
fwait
call
shrb
shl
dec
iret
jl
rcpps
fs
div
in
push
roll
xor
fistl
test
repnz
fs
cs
mov
dec
dec
ds
adc
mov
icebp
cmp
dec
lret
ja
ret
pop
test
mov
outsl
lock
rorb
adc
pop
dec
stc
mov
test
sub
mov
inc
scas
lock
or
rol
mov
mov
sbb
into
mov
cwtl
in
rolb
jecxz
icebp
xor
outsb
push
xchg
daa
inc
cmc
xor
xchg
arpl
and
and
movsb
aam
sub
inc
mulb
mov
dec
pop
pop
push
rorl
test
sub
outsl
cli
ret
and
loop
pop
cmpsb
aad
out
pushf
repnz
test
lock
ret
xor
fildl
inc
mov
lods
int3
lods
mov
arpl
cld
inc
subl
lea
cltd
push
and
push
add
insb
xchg
pop
lret
mov
mov
pop
gs
inc
cmp
adc
out
call
inc
repnz
cmpsb
xor
jb
jp
xchg
mov
ret
pop
test
mov
mov
adcl
sbb
test
jnp
dec
or
ret
jno
pop
mov
pop
push
icebp
hlt
adc
jns
push
bound
jmp
jns
ja
xchg
cmpsb
mov
sub
or
dec
cmp
cmpsb
mov
lret
into
popaw
int3
sub
mov
sbb
mov
sahf
xor
out
inc
pop
jns
dec
adc
or
or
mov
and
call
xor
les
ljmp
mov
mov
or
data16
lds
cld
cmp
jmp
inc
repnz
inc
jo
adc
inc
movsb
inc
enter
movb
lock
fcompl
sahf
sub
mov
ret
fisubl
fiadds
pop
nop
andl
stos
inc
xor
sti
loop
and
je
stos
dec
stos
jge
add
test
popw
jge,pn
insl
fildl
sub
sbb
push
jns
aas
imul
xor
jmp
out
fwait
or
mov
enter
dec
leave
xchg
rolb
push
xchg
cmp
xchg
push
ds
sub
add
ljmp
sbb
imul
inc
inc
mov
fimuls
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
mov
cmp
mov
push
in
cld
in
cmpsl
pushf
xchg
repz
or
mov
jmp
mov
cmp
fwait
aaa
lods
jno
pop
aaa
inc
cmp
divl
sub
out
stos
mov
ljmp
pop
popf
and
pop
pop
jnp
clc
int3
pushf
mov
mov
shll
xchg
xor
sub
repz
outsl
frstor
je
push
sub
ret
or
or
in
addl
data16
out
push
cmp
pusha
mov
ret
lock
xchg
and
sbb
sbb
movsb
or
push
or
cmp
and
sbb
push
push
ljmp
xor
xor
or
fcmovbe
mov
sarb
dec
xor
les
sti
sbb
mov
rcrl
insb
push
int3
pop
sbb
shll
lcall
rorl
aad
pop
cmp
test
add
test
adc
popa
sub
paddd
mul
pop
popf
dec
cmp
adc
jl
sahf
lea
pop
jp
inc
cs
xor
ret
push
aad
dec
xor
mov
arpl
insb
cltd
scas
add
ss
push
push
mov
out
scas
push
mov
lds
addb
gs
aas
imul
cmp
in
jle
fiadds
test
cwtl
jbe
sub
ret
hlt
adc
aad
xor
pop
repnz
inc
aaa
jl
dec
shll
es
movsb
add
inc
cmp
mov
ss
popf
punpckhwd
mov
pop
pop
sub
f2xm1
mov
fbld
jecxz
mulb
mov
cmpsl
or
enter
sub
lods
jecxz
pop
jmp
bound
or
jge
test
push
mov
mov
call
and
mov
add
std
mov
push
jno
ds
out
pushf
notl
inc
sub
jns
jne
aaa
inc
xchg
push
cmp
cmp
cmp
lods
aas
into
push
loopne
dec
cltd
and
jmp
rolb
sbb
imul
push
mov
xorb
sbb
popa
cwtl
les
cmp
inc
or
sahf
sti
sbb
xchg
cmc
dec
adc
scas
insb
jl
sub
xorb
xor
jnp
sar
mov
lods
jo
ret
popa
fstpt
dec
mov
pusha
jno
mov
testl
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
pop
push
cmp
xor
icebp
add
fs
data16
cmp
push
lret
cmp
mov
imul
mov
lret
jecxz
orl
testl
icebp
call
pop
mov
lea
lret
test
cmp
pop
movsb
cmpsb
inc
and
mov
xchg
push
sarl
test
mov
bound
inc
fisttps
push
in
jbe
or
xchg
js
cmp
fs
add
fiadds
fdiv
loopne
gs
adc
rcrl
xor
loop
cmp
out
fwait
xlat
xchg
scas
repnz
mov
test
ret
neg
cwtl
jnp
rorb
inc
fsubrs
push
cmpsl
mov
push
mov
sub
cmp
adc
and
cmp
cmpsb
movsb
pushf
sub
mov
aam
les
incl
cmpsl
das
sbb
out
jp
dec
push
xchg
sbb
lock
dec
sub
xchg
sub
xor
mov
jae
push
je
jo
inc
dec
lret
lret
mov
lahf
pop
fidivrl
loopne
pop
repnz
push
pop
dec
or
pop
ret
sbb
ds
or
icebp
lods
xor
enter
sarl
cld
inc
add
movsb
fucom
test
sbb
pop
jecxz
ficomps
cmp
adc
lods
push
mov
clc
xor
add
xor
sarb
insl
push
imulb
lret
je
add
cmp
pop
xchg
popa
mov
mov
jne
lds
xchg
add
cmpsb
sar
fwait
mov
je
xor
sub
fnstcw
mov
lret
inc
cmp
stc
imul
es
fs
lahf
mov
scas
push
add
xor
sbb
pop
xor
adc
cmp
call
jp
cmpsl
xchg
outsb
sub
cmp
push
imul
fisttps
sahf
aas
in
mov
addr16
sbb
repz
dec
lods
xor
ja
jb
es
lea
in
xchg
call
and
jns
jp
sub
inc
sbb
stos
sub
scas
adcb
add
xchg
out
sbb
jge
mov
push
xchg
sub
sti
inc
dec
sbb
aas
inc
push
adc
xchg
mov
mov
cmovb
pop
fists
scas
out
push
jp
out
fcmovnbe
imul
jae
fst
sub
mov
cs
add
clc
inc
jb
push
test
mov
movsl
mov
popa
orb
shl
das
inc
cmp
mov
xchg
adc
cli
adc
sbb
cwtl
test
inc
mov
cmp
mov
outsl
std
xchg
repz
jne
pop
sbb
mov
std
imul
repz
rolb
out
in
popf
mov
movsl
outsb
xorl
dec
insl
xorl
pop
push
add
adc
orl
jns
mov
inc
decl
mov
imul
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
add
push
jo
cmp
fdivrp
sbb
dec
in
aam
dec
fidivrl
dec
mov
pusha
dec
dec
pop
mov
jmp
pop
movb
in
test
pop
add
push
xor
lock
fiaddl
push
xchg
bound
popf
out
pop
rolb
or
fistl
lret
sti
shl
repz
xchg
mov
icebp
add
movsl
push
addr16
jle
lods
aam
nop
mov
fildll
xchg
nop
xchg
lcall
and
xor
push
pusha
xchg
mov
lahf
sub
xchg
stos
sbb
cltd
insl
dec
fnstcw
adc
ret
xor
jp
insb
stc
dec
movsb
mov
xor
fisttps
dec
jg
dec
hlt
sti
leave
push
aad
jb
pop
das
nop
cs
jns
push
repnz
xor
inc
pop
pop
mov
sub
pop
mov
scas
rcr
cld
pop
sbb
testl
sbb
pop
inc
and
pop
sub
xchg
sub
push
test
lret
in
iret
arpl
xor
push
sub
cmpsb
mov
mov
inc
imul
or
dec
scas
xor
sahf
xor
xchg
popf
lock
outsl
aam
xchg
stos
and
sahf
adc
mov
lea
cmpsb
rol
dec
sbb
sbb
xchg
or
sub
xchg
or
and
mov
sbb
fiaddl
popf
inc
cwtl
inc
adc
cld
pop
sbb
test
dec
xor
push
inc
jmp
pop
rclb
mov
mov
pop
test
testb
sub
jo
jb
sbb
rcrb
aaa
add
loop
xor
sbb
leave
or
xlat
lds
insb
push
xor
lcall
sub
pop
inc
call
adc
fs
jl
xor
cltd
mov
dec
and
inc
loopne
scas
mov
cmp
shll
lret
push
add
rolb
popf
adc
lods
inc
leave
outsb
inc
mov
aad
pop
push
outsl
cmc
xor
xchg
inc
jle
jne
jns
inc
aad
or
dec
stos
fs
std
jle
inc
sub
adc
mov
jle
inc
and
pop
mov
adc
ret
or
push
pop
cmp
rorb
je
xchg
push
jbe
cmp
or
cwtl
test
xchg
sbb
xchg
movsb
mov
and
insb
int3
popf
jno
ljmp
int
rcr
cmp
xchg
xor
and
mov
wrmsr
je
enter
in
cmc
int3
pop
orb
adc
cld
mov
in
push
xor
xchg
stos
mov
inc
addr16
fcmovbe
and
jnp
je
sbb
xor
adc
cmp
jns
dec
divl
adc
bound
orb
and
icebp
popf
dec
inc
insl
sbb
push
adc
mov
mov
pop
pop
mov
mov
addr16
pop
xor
jo
pop
cwtl
movl
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
cmp
cmp
mov
xchg
xor
fidivs
test
pop
xchg
fadd
out
stc
pop
stos
mov
fs
ret
cmp
and
imul
jno
jl
sbb
outsb
lea
adc
addb
sbb
insl
mov
xor
adc
pop
cmp
add
adc
push
lahf
lods
insl
cltd
in
jae
sbb
or
add
movl
ret
stc
and
call
fwait
es
repz
mov
jg
sbb
pushf
mov
pop
cltd
or
jecxz
nop
lret
push
arpl
xor
dec
mov
pop
insl
mov
aas
inc
mov
pushf
add
les
xor
inc
xor
lods
aad
adc
xor
mov
insl
push
lods
dec
xlat
ds
iret
pop
jle
andl
mov
dec
ljmp
inc
push
inc
ret
dec
dec
call
mov
inc
xor
jmp
je
push
xchg
push
aas
cmp
in
dec
push
lahf
mov
sbbb
in
in
pop
cmpsb
xchg
subl
lret
js
ljmp
and
jnp
fdivs
ja
pop
xor
cltd
xlat
lods
mov
das
bnd
ja
sub
xor
mov
push
push
cmp
es
xchg
stos
jle
iret
push
xor
fnstsw
mov
push
push
int3
lcall
jnp
inc
push
pop
popf
add
sub
add
push
dec
sub
mov
jg
out
dec
add
aas
nop
daa
xchg
dec
scas
cmp
jno
push
pushf
aaa
and
mov
cmp
mov
js
sbb
clc
pop
imul
out
jle,pt
test
shl
and
lahf
sbb
mov
repz
jmp
cmp
dec
pop
xor
or
das
pop
lods
loop
int3
fisttpll
mov
dec
push
gs
dec
rcll
bound
xor
jne
repnz
popf
inc
out
int3
sub
add
mov
lea
fs
push
arpl
and
mov
lret
and
or
jno
mov
mov
fistpll
or
rcll
je
jno
pop
test
mov
inc
inc
out
adc
fadds
fldcw
cmpsl
mov
xor
fwait
mov
arpl
jne
stos
add
add
imul
mov
mov
mov
pop
jb
and
popa
sub
popa
shll
int
jp
fucomi
in
adc
imul
mov
jecxz
imul
idiv
jae
aam
mov
or
fsubrl
outsb
addr16
inc
jne
insl
out
cli
sub
push
loop
add
push
jne
and
pusha
push
stos
jmp
mov
out
mov
loopne
add
jb
outsb
xchg
jnp
addl
jecxz
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
mov
jo
jge
jo
arpl
lret
cmp
fmuls
pushf
add
add
jge
add
mov
lcall
sarl
mov
fistl
or
jg
sub
movsb
adc
xor
adc
mov
sbb
xchg
aas
mov
add
aaa
dec
gs
scas
call
lahf
int3
add
add
outsl
mov
sbb
jmp
mov
lret
sahf
adc
cmp
fidivrl
pop
xchg
sub
cwtl
mov
enter
out
mov
call
jmp
fistpll
cwtl
pop
cmp
or
nop
mov
enter
mov
push
stos
data16
nop
push
pop
arpl
into
pop
mov
pop
and
ret
std
pushf
dec
divl
push
or
in
lahf
out
xchg
inc
xchg
jne
les
jno
sub
subl
into
pop
lret
xor
mov
es
lods
loope
mulb
addl
jg
push
movsl
lret
cmpl
sahf
adc
pop
popa
and
pop
mov
inc
cmp
mov
dec
mov
dec
inc
sub
in
ds
lds
je
pop
push
fwait
mov
sbb
ss
rcll
and
and
inc
inc
cmp
enter
icebp
pop
shr
push
data16
or
stos
push
in
push
xor
lods
push
fdivrl
push
shll
mov
sub
fldl
movsl
sbb
push
jmp
inc
push
jl
cli
xor
aad
pop
pop
push
push
fdivrs
loop
lods
inc
mov
popa
into
mov
sub
outsl
in
rcrb
icebp
imul
xor
mov
popf
je
sub
push
ja
das
in
daa
sbb
cmc
mov
sub
pusha
aad
mov
push
pop
xor
mov
sbb
pushl
fnstcw
gs
lods
xchg
cmp
int3
daa
aad
jp
push
sub
mov
pop
in
movsb
mov
daa
movsb
fdivr
stos
rcr
ret
and
lods
cwtl
jbe
imul
and
in
out
insl
jecxz
xor
rsm
sbb
dec
lahf
sbb
sub
or
xchg
dec
dec
sub
cmp
scas
mov
add
pushf
push
push
and
daa
std
popf
and
int
lret
mov
enter
mov
dec
lea
scas
movsb
and
dec
hlt
mov
pop
cmc
inc
jbe
mov
push
push
mov
dec
sbb
xor
cmp
clc
and
or
adc
inc
mov
pop
push
and
lret
nop
dec
xchg
outsb
adc
loop
sub
jle,pt
test
stos
dec
pusha
out
fbstp
push
outsl
jge
orl
push
pop
inc
mov
gs
xchg
lret
xchg
outsl
test
insb
out
dec
call
push
fidivrl
mov
mov
mov
pusha
cmp
dec
clc
outsl
jb
and
mov
jmp
push
jge
add
jb
inc
sbb
cld
cmp
push
and
jo
jge
jo
add
cmpsb
push
sarb
jle
jb
jmp
and
pop
pop
js
sbb
push
scas
aad
push
mov
inc
popf
push
out
arpl
daa
lcall
dec
lcall
setge
jmp
mov
add
inc
rolb
popf
inc
push
sbb
lahf
aam
xchg
rcll
sub
xchg
movsb
enter
stos
movsl
cmp
jbe
add
test
jmp
cmc
push
xor
mov
sahf
mov
movl
mov
push
in
movsl
cld
aas
rclb
fldl
sub
push
scas
and
jmp
add
clc
popa
push
or
loop
mov
xchg
in
push
nop
pop
add
dec
or
in
jno
in
add
fiadds
subb
sub
xor
xchg
fisubs
mov
and
lock
insl
jb
jmp
sbb
fstp
fisubl
mov
and
sbb
aaa
cmp
pop
xchg
xchg
pop
push
push
mov
data16
dec
jne
mov
es
adcb
mov
sub
or
out
add
sub
add
stos
int3
loopne
sbb
xchg
jmp
scas
push
mov
out
sub
out
mov
mov
enter
into
mov
or
insb
mov
and
lahf
add
jae
or
test
cwtl
sahf
push
clc
mov
add
xor
dec
cmp
pop
setl
push
out
pop
jecxz
pop
cmpsl
fs
ljmp
shl
adc
adc
shrb
outsb
mov
call
divb
in
popa
or
jl
icebp
data16
cwtl
mov
fcmove
mov
push
fwait
stos
fstpt
lods
in
add
adcl
data16
test
jne
dec
lret
mov
imul
mov
mov
dec
mov
icebp
inc
or
fwait
cwtl
bound
cmp
or
pop
lods
shlb
mov
dec
out
rcrb
push
clc
sarb
add
mov
xor
inc
and
mov
bound
repz
mov
push
sub
cmp
mov
jnp
fimull
cmp
mov
fidivrs
fs
xchg
mov
push
cmc
ds
fcoms
fisttpll
out
sub
jb
adc
pop
pusha
mov
jmp
movsl
lds
push
clc
jmp
mov
mov
push
rcll
je,pt
xchg
jmp
orb
add
mov
adc
popf
sbb
arpl
cli
sbb
scas
inc
xchg
fisttpl
add
insb
dec
fisttpll
cmc
repnz
das
jp
frstor
push
jmp
cmpsl
inc
push
sub
cmpsb
cmpsl
fs
popf
or
hlt
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
jge
mov
jge
jo
mov
xlat
cmp
and
cmp
out
movsl
fsts
leave
mov
mov
das
sbb
fdivrl
mov
inc
add
orl
divb
jns
add
or
sub
inc
cmc
push
pop
jle
mov
push
dec
subb
in
mov
push
inc
jge
inc
je
stos
add
lea
mov
mov
roll
push
push
and
pop
pop
test
xor
dec
jno
dec
and
arpl
cmp
dec
push
sbb
sub
adc
in
sub
sbb
clc
add
inc
cmp
and
insb
cmp
mov
mov
leave
add
and
stc
into
cwtl
movl
movsl
sbb
in
jo
cmp
mov
stc
js
jle
mov
fistpll
inc
or
mov
push
negb
nop
sub
mov
adc
and
sbb
mov
lret
xor
es
fcoml
cmp
and
xor
push
rcll
bound
imul
cwtl
push
cmpsb
andl
inc
into
adc
push
sbb
xchg
cmc
mov
mov
xchg
testb
push
mov
xor
insb
jg
push
icebp
add
or
sbbl
adc
stos
loope
xchg
sbb
or
call
and
mov
jo
push
loopne
dec
dec
xor
clc
xor
fwait
mov
mov
lock
push
adc
dec
pop
sbb
pusha
or
mov
add
or
or
pop
aam
mov
adc
push
push
sbb
clc
pushf
add
mov
dec
repnz
scas
mov
or
push
leave
pop
test
mov
and
mov
inc
xchg
adc
ss
push
mov
or
aas
xor
push
rorb
aaa
pop
pop
adc
into
mov
lahf
fidivrs
cmp
inc
arpl
icebp
call
in
repz
mov
or
out
lea
cltd
lods
and
mov
pop
dec
jmp
dec
add
fwait
pop
movsb
mov
notl
push
or
mov
mov
dec
jp
jne
mov
test
je
mov
loopne
push
fwait
add
inc
imul
dec
pop
sti
clc
fcomps
mov
xchg
adc
bsr
ss
mov
push
cmp
sbb
lret
push
jae
mov
in
sbb
adc
das
push
fdivs
xor
dec
lock
lcall
xchg
fcoml
xchg
pop
cltd
xchg
cld
inc
es
inc
jae
inc
cmpl
and
mov
jle
mov
jbe
sub
jge
cltd
sub
fucomp
movsl
loope
ret
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
mov
sti
xchg
jo,pn
cmp
addr16
icebp
sub
mov
add
mov
xchg
subb
push
jl
jmp
ljmp
mov
push
cld
push
cs
mov
sbb
inc
popf
mov
fxch
mov
xchg
test
jl
mov
iret
int
mov
pushw
rorb
cmp
nop
push
push
lea
jmp
jmp
adc
dec
adc
outsb
int3
pushf
inc
pop
mov
jp
jbe
mov
orl
out
test
push
push
ljmp
inc
js
pop
bound
clc
pushl
ret
subl
cmp
lock
push
or
lahf
xchg
je
xorb
xchg
lret
mov
out
pushf
or
outsl
push
cmp
mov
gs
mov
inc
lods
pop
mov
sbb
stos
jno
aaa
push
or
test
mov
fimuls
push
test
inc
mov
xchg
jne
cmp
dec
mov
aam
pushf
movsb
mov
in
mov
fists
inc
fimull
mov
test
sbb
popa
push
scas
call
mov
pop
into
adc
xor
movsl
fsubr
std
pop
lret
adc
rcll
mov
out
ljmp
cmp
stos
popa
ret
into
and
fisttpl
das
arpl
inc
pop
fistps
ljmp
pop
jo
inc
or
jg
xchg
jae
jo
add
enter
add
aas
xchg
cli
jecxz
mov
test
ljmp
inc
xor
mov
sbbb
scas
mov
das
jmp
cmp
inc
sub
mov
and
outsl
pop
fidivs
cmp
orl
aad
hlt
mov
push
jmp
clc
pushl
lret
push
subb
push
cmp
xor
adc
mov
cmc
push
dec
aaa
mov
je
or
mov
dec
xchg
pop
sti
adc
xchg
loopne
dec
push
jmp
nop
push
nop
inc
mov
arpl
adc
fists
ret
sbb
mov
mov
ja
adc
ret
jne
cmp
testb
jns
jae
jne
add
call
cltd
jno
inc
je
mov
sbb
arpl
sub
ret
fdivs
dec
enter
mov
xchg
xlat
cwtl
call
xor
xchg
sahf
outsl
sub
sbb
adc
cmp
mov
inc
xor
add
pop
aam
fildll
jne
roll
mov
lret
mov
stos
in
pop
imulb
xor
inc
push
xchg
sub
in
mov
and
mov
call
stc
movsw
add
adc
and
jecxz
fidivs
in
mov
call
pushf
dec
hlt
decl
mov
out
inc
out
jae
sarb
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
roll
push
sub
cmp
xchg
aas
scas
fnstenv
sbb
addr16
das
pusha
in
adc
loopne
cltd
pop
xor
pop
roll
mov
fcompl
inc
mov
std
out
lock
jg
lret
outsb
test
inc
add
mov
movsb
pop
movsl
xchg
fistpl
add
mov
ror
pop
out
cltd
hlt
push
xor
mov
xor
pop
sub
xchg
xor
mov
adc
hlt
rorb
push
pushf
jns
cmpsl
ja
in
into
imul
cli
adc
mov
inc
insb
fcoms
mov
and
or
xor
scas
pop
dec
xchg
nop
sbbl
in
push
leave
mov
clc
mov
pop
hlt
clc
mov
rolb
lock
pop
leave
xor
pop
xor
jo
aad
ficoms
push
pushf
add
test
sbb
xlat
popa
sub
call
jns,pn
jl
jge
je
ret
dec
out
fiaddl
or
push
inc
lods
popf
jnp
xchg
mov
std
movb
add
inc
cmpsb
mov
jl
iret
in
in
jnp,pn
xor
leave
sbb
lods
out
cmp
xchg
rolb
push
sti
shll
stos
add
sti
js
push
adc
cld
dec
or
cmpb
cld
jbe
pusha
repz
bound
fmuls
cmp
lea
and
xlat
dec
dec
stos
dec
leave
int3
add
leave
scas
push
dec
xchg
mov
and
fsubp
fnstsw
mov
in
inc
push
pop
mov
lret
sbb
cmpsl
pop
not
push
push
dec
rcl
out
sub
ret
mov
cmp
mov
popf
out
dec
dec
movsl
dec
xchg
bound
add
pop
loop
lret
fwait
xor
je
cli
lret
addb
or
xor
enter
xlat
imul
enter
leave
iret
fucomi
fisubs
mov
rcrl
mov
and
lahf
out
cmp
ljmp
pushf
and
sub
jb
mov
mulps
push
jecxz
jecxz
nop
inc
std
mov
mov
xor
rcll
add
out
out
xlat
outsl
leave
out
jl
jnp
jle
nop
in
cld
repz
xchg
test
inc
xor
inc
fistpll
xchg
in
insl
xor
mov
into
cmp
pop
lcall
scas
das
mov
sub
xchg
mov
mov
xor
fcomp
mov
push
movsl
shr
mov
neg
movb
movsb
int
call
sbb
mov
pop
sbb
cmp
jne
push
xchg
in
pop
aam
arpl
sub
jo
sahf
in
sub
inc
movsl
cmp
cwtl
das
pusha
cmp
test
pop
aas
push
imul
ret
negb
call
add
jp
sarb
mov
cmp
ret
mov
int3
and
cmp
add
in
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
inc
bswap
push
adc
jo
stos
jle
jo
jmp
and
add
ret
pop
push
add
add
cmp
pop
dec
sarb
notb
mov
sbbl
int
jae
or
or
mov
jle
xchg
rolb
adc
out
andb
inc
adc
out
inc
es
mov
dec
imul
dec
rcrl
push
or
xchg
mov
insl
test
scas
mov
jbe
fmull
xchg
int
out
in
rcll
or
stos
sbb
call
pop
add
cmp
daa
dec
mov
enter
rorl
inc
push
mov
mov
lds
mov
rcll
test
or
scas
cli
mul
inc
pop
lret
ljmp
mov
push
fs
cld
das
adc
mov
fs
pop
aas
sbb
dec
rcr
and
shl
fisubs
out
pop
repz
sub
lods
ss
and
mov
fldt
dec
add
or
nop
cltd
mov
stc
movsb
roll
xchg
and
xchg
cmp
clc
cmpsb
mov
pop
pop
inc
cmp
sti
mov
sbb
pcmpgtw
ss
je
jne
test
shlb
adc
push
repnz
and
int
clc
inc
dec
fcmovu
jbe
je
push
lds
out
adc
js
sbb
push
push
fildl
aad
push
push
jb
stos
adc
cmp
ljmp
insl
in
push
leave
or
cli
xor
mov
pop
clc
push
mov
or
shll
inc
les
ret
mov
mov
push
std
cmc
scas
adc
adc
dec
lret
js
jmp
test
or
in
scas
add
sub
cmp
mov
movsl
sub
fwait
xor
pop
cmp
inc
out
sub
add
les
ret
lock
das
dec
test
pop
sub
pop
or
dec
aad
stos
adc
sbb
or
add
sti
lcall
jl
cmp
arpl
mov
mov
ror
dec
les
inc
ror
push
mov
dec
cmp
or
scas
push
sub
out
mov
pop
pop
into
imul
loope
aam
or
xor
fmull
jg
movzwl
and
mov
jmp
ja
and
dec
xchg
rcrl
dec
xor
jo
and
jb
pop
lock
add
leave
shlb
lea
out
sti
sti
fistps
inc
fsubr
push
or
jg
jg
mov
or
mov
aas
popa
mov
and
ret
int
scas
mov
push
dec
xor
dec
xchg
cs
ret
imul
lea
xchg
pop
lcall
xchg
dec
lret
pop
rcl
and
ds
lret
subl
mov
cli
lret
cmpsb
rcr
inc
pop
jecxz
fnstsw
loop
das
mov
in
xor
jo
dec
in
jne
fwait
ljmp
add
xchg
rolb
sub
xchg
aas
xor
cmp
aaa
std
repnz
pop
movsb
and
or
ficomps
mov
cli
cmp
outsl
cmp
jmp
out
push
addr16
mov
icebp
or
pop
xchg
imul
div
inc
in
test
les
inc
push
outsb
dec
and
or
adc
push
lret
mov
call
aad
aam
pop
jmp
scas
loop
or
mov
test
xlat
cmp
roll
daa
not
xchg
in
xchg
adc
repz
jb
or
pop
sbb
dec
mov
adc
inc
xchg
out
das
or
jg
push
jae
and
pop
das
adc
cltd
sahf
hlt
dec
push
fsubp
xchg
jmp
pop
popa
or
scas
jae
mov
cmpsb
faddl
cmp
lret
and
and
jge
inc
push
insl
mov
cmp
les
adc
cwtl
or
adc
mov
push
jo
and
addr16
out
shl
mov
mov
cmc
loop
sub
lret
mov
push
cmp
xchg
movsl
mov
scas
out
aaa
or
or
sbb
sbb
mull
add
stc
dec
inc
xchg
andl
cs
sub
adc
cmpsl
xor
aam
push
fnstcw
jg
jno
lods
mov
push
or
ret
and
repnz
rcr
out
dec
pop
outsl
les
scas
push
jp
inc
mov
mov
aam
stos
sbb
sarb
daa
lcall
hlt
test
js
dec
cmp
cmpsb
leave
or
jp
dec
mov
jmp
dec
std
xor
cmp
ljmp
sub
push
cld
jb
mov
mov
and
pop
pshufw
shll
and
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
fstpl
xor
stos
jle
jo
jo
into
cmp
push
or
and
in
mov
test
loop
mov
sahf
loopne
out
jl
in
in
les
push
lret
stc
std
bound
andl
subb
out
icebp
mov
rorb
pop
mov
int3
js
gs
ds
lock
adc
cmp
out
gs
leave
jge
subl
push
test
pop
mov
inc
and
sti
loope
cmc
ret
jg
or
insl
sbb
mov
mov
sbb
stc
not
mov
xchg
shll
mov
inc
and
outsl
call
or
cmp
loopne
mulb
inc
aad
mov
push
jp
sub
ja
xchg
scas
add
sbb
sub
in
inc
xor
sahf
xor
out
push
cli
jns
aam
xor
in
push
mov
mov
mov
scas
pop
addr16
xchg
mov
not
dec
insb
fstpt
dec
add
clc
adc
es
notb
sbb
ffree
push
ret
jbe
shrb
js
mov
mov
add
or
mov
cmp
movsl
mov
jmp
cmp
mov
loopne
in
negl
sub
cwtl
push
inc
sub
jne
xor
in
sbb
hlt
rcl
cmc
inc
lea
outsb
mov
jns
or
incb
pop
jp
imul
xchg
aas
lods
fiaddl
mov
fsubr
sub
xchg
aad
sub
add
mov
je
je
mov
inc
stos
pop
scas
mov
into
push
in
inc
sbb
add
mov
and
xchg
mov
jmp
mov
fwait
cmp
into
aas
push
iret
les
adc
mov
cli
jo
cmpsl
pop
lds
shl
sahf
xchg
mov
sbb
inc
jg
outsl
rcr
pslld
push
mov
repz
rcrl
xchg
mov
cs
mov
cmp
loope
out
or
fistpll
mov
hlt
pop
arpl
fildll
mov
scas
mov
lea
or
or
imul
test
clc
and
cmp
gs
rcpps
imul
out
bound
sbb
lahf
leave
mov
aam
pop
jg
fldcw
arpl
dec
pop
aad
fisubl
pushf
or
jmp
or
hlt
test
dec
cmp
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
ret
xchg
pop
ds
jo
cmpsl
jg
jo
jecxz
in
test
xor
jl
adc
adc
into
xor
jno
cwtl
aas
jmp
in
cmp
iret
mov
pop
aaa
jecxz
push
jb
out
mov
cmp
mov
lret
mov
mov
cmc
or
push
ret
cmpsl
xorl
pushf
cmp
fsubl
jp
jle
hlt
mov
sahf
adc
int3
sub
into
pop
cmp
flds
pop
cmp
xchg
in
pop
cmc
lock
adc
repnz
push
push
jle
sub
adc
fldcw
and
gs
jge
add
or
jge
jns
add
shl
pop
out
add
inc
jbe
pushf
fstp
mov
stos
cmc
inc
pop
cltd
push
gs
xor
repz
jb
mov
mov
xor
repz
push
or
mov
lret
add
ret
shrb
jle
shll
inc
mov
jno
mov
push
adc
xor
int3
push
leave
cli
clc
xor
and
fucomi
fimuls
mov
cmp
enter
inc
in
stc
lea
js
clc
xchg
cmp
das
std
arpl
loope
enter
dec
pop
or
loop
andb
lcall
mov
push
dec
add
mov
pop
sbbl
adc
int3
dec
imul
push
and
dec
test
daa
pusha
adc
jns
pop
sarl
push
add
ret
lock
jae
mov
sub
add
les
ret
into
sahf
mov
call
push
in
in
pushf
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
xor
jo
cmpsl
jg
jo
jle
mov
mov
rcrl
jg
sbb
mov
jnp
int
inc
pop
sub
jae
pop
lods
mov
xor
mov
lock
push
jns
fadd
mov
in
pop
push
cmp
dec
jg
lds
push
and
push
inc
mov
jmp
ret
cmp
xorl
mov
dec
pop
mov
or
mov
dec
fisubs
movsb
jp
pop
shll
cmp
xchg
rcll
dec
sub
mov
enter
and
push
rcl
rorl
je
outsb
mov
stos
stos
js
je
and
int
inc
sahf
xchg
sub
mov
xchg
lock
cld
ficomps
es
push
rclb
xorb
add
insl
push
jecxz
mov
bnd
mov
int3
adc
sub
lods
test
mov
aaa
xor
inc
xchg
test
mov
mov
mov
es
mov
add
dec
std
sub
hlt
mov
hlt
pusha
push
cwtl
repz
stos
inc
mov
in
cli
es
ficompl
sarb
pop
inc
cmp
mov
dec
jg
arpl
cmp
push
mov
jecxz
dec
fisubrs
lods
and
and
enter
call
ret
push
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
rclb
jo
cmpsl
jg
jo
popf
pusha
xchg
xor
xor
xchg
mov
insb
adc
pusha
data16
sahf
cmp
jg
add
inc
dec
test
movsl
or
adc
xchg
pop
outsl
inc
cmpsl
cmp
pop
or
jno
pop
out
ret
xchg
mov
mov
lcall
popf
and
sub
lret
adc
data16
inc
lods
lcall
scas
shrl
inc
sbb
outsb
lret
cmpsb
js
xorl
sbb
fcompl
add
adc
dec
and
je
xchg
fnsave
int3
cltd
outsb
pop
leave
jp
jp
or
ret
mov
sub
insl
mov
lcall
pop
inc
lods
mov
ja
int3
or
jb
xlat
leave
xchg
aaa
cmp
dec
or
inc
xchg
jb
es
xchg
jp
push
dec
ljmp
adc
lret
xor
mov
shl
cmpsb
pmaxsw
xchg
dec
add
mov
cmp
aad
outsb
jae
es
jo
mov
mov
xchg
fadds
xor
adc
mov
jnp
cmp
mov
ljmp
call
test
es
in
dec
adc
sbb
in
ret
mov
sub
cmp
js
cli
jnp
outsl
pop
pop
jecxz
and
dec
jae
jne
mov
lods
add
out
loope
add
sti
mov
pop
dec
push
fmulp
mov
in
cmc
jno
and
add
dec
fcompl
mov
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
mov
jp
xor
jo
loop
jo
pop
xchg
dec
mov
test
push
ljmp
ss
clc
rcrl
pop
out
and
lea
popf
test
ljmp
xchg
dec
mov
mov
jnp
mov
int3
cmpsb
mov
filds
bound
jmp
rcrb
push
hlt
leave
pop
jmp
bound
dec
and
fisttps
in
icebp
jno
inc
mov
lea
fsubrl
out
rorl
or
subl
sbb
mov
xchg
ret
clc
aad
jcxz
clc
outsl
lock
sbb
in
mov
sbb
test
pusha
lcall
jmp
dec
mov
pop
and
daa
fbld
sub
ja
insl
push
or
pop
xchg
xor
push
sub
jg
cmc
pop
lret
lcall
mov
jmp
dec
std
sbb
aad
rcrb
jl
icebp
popa
imul
jg
pop
or
cmp
mov
mov
cld
in
and
mov
cmp
enter
or
outsl
mov
or
dec
mov
dec
pop
imul
push
jbe
sbb
pop
sub
mov
xchg
pop
mov
iret
lods
inc
xor
adc
iret
fnsave
add
outsl
xchg
inc
pushf
hlt
in
and
sub
int3
xchg
cmpsl
mov
mov
ja
out
clc
imul
lcall
lds
pop
jmp
dec
lods
jno
cli
sbb
sbb
inc
add
dec
cli
mov
dec
pop
xchg
mov
fsts
jae
sbbl
sbb
negl
fstpt
inc
push
jp
mov
ja
pop
popf
dec
cmp
add
pushf
mov
dec
push
jle
xchg
je
pop
mov
add
add
lods
mov
out
in
mov
fistpl
jmp
adc
mov
xchg
cmp
decb
or
add
retw
gs
mov
idivl
dec
pop
pop
cs
ja
mov
jo
mov
xor
mov
and
fwait
dec
jge
sbb
icebp
adc
dec
ud0
cmp
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
out
sub
jle
jo
into
sbbb
out
push
imul
inc
repz
bound
cmc
mov
dec
in
mov
xchg
std
pushf
jno
xchg
movsl
cmp
push
test
xor
inc
in
stc
mov
xchg
insl
cld
in
adcl
mov
push
xchg
inc
cmp
and
xorb
loopne
push
jnp
xlat
xchg
jmp
sbb
nop
inc
out
dec
jbe
pushf
dec
movsb
pop
lds
movsl
fmulp
in
ret
cmp
lock
sbb
jecxz
arpl
mov
jge
push
loope
mov
insb
mov
into
popa
sbb
ds
cmp
mov
test
inc
clc
out
adc
lahf
std
jl
sbbl
xlat
xchg
sub
fsub
cmp
int
notb
jnp
mov
scas
cwtl
test
andb
add
lods
ja
cmp
sbb
scas
negb
lret
or
je
cld
dec
inc
cmp
notb
mov
xorl
enter
test
mov
lcall
sti
lret
fdivrl
lods
gs
ficoms
adc
bound
cs
push
xchg
pop
jecxz
xor
jnp
pop
dec
inc
es
pop
push
jbe
mov
xchg
xchg
loope
mov
lods
push
mov
fsubrp
les
cmpsl
loop
push
adc
lahf
push
adc
out
movsl
push
pushf
sbb
pop
hlt
mov
mov
xor
iret
xchg
movsl
xlat
mov
and
je
roll
repnz
testb
adc
mov
pop
mov
inc
cld
pusha
pop
icebp
push
pop
inc
xor
out
dec
and
fcmovb
push
and
outsb
sub
repnz
add
negl
jne
jp
xchg
and
or
repz
pop
dec
xchg
push
jecxz
adc
mov
stos
mov
xchg
in
add
add
pop
inc
mov
daa
adc
mov
mov
sub
jg
cmp
adc
cmp
mov
dec
jne
roll
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
je
popa
pop
lds
and
jo
lcall
movsl
popf
int3
out
fcmovnu
cmc
jmp
push
jno
push
mov
flds
hlt
pop
or
sbb
push
fs
loopne
popa
lds
fldenv
pop
xchg
push
fcoms
jl
jle
mov
xor
es
roll
pushf
psubusb
and
daa
scas
les
std
adc
jl
rol
fs
into
aad
cli
aam
ljmp
cwtl
in
cli
leave
popa
dec
lds
lods
cmc
mov
gs
sub
mov
gs
xchg
adc
or
lods
xchg
dec
scas
cmp
xchg
sub
dec
in
leave
sbb
ljmp
sbb
mov
sbb
cld
and
mov
mov
shrl
inc
roll
loop
in
rcrl
xchg
in
jbe
push
test
je
loopne
int3
in
mov
lds
jns
jp
movsb
mov
hlt
dec
lcall
xchg
test
sub
cmpsl
xchg
sbb
mov
push
add
push
pop
fiaddl
pusha
cmpsl
dec
in
push
fiadds
adc
inc
lret
xchg
pop
cwtl
test
bswap
push
lcall
mov
repnz
in
aad
pop
fisubl
pushf
xchg
in
sbb
imul
jne
int
push
mov
cwtl
sbb
cld
mov
out
into
xchg
pop
xor
jae
xchg
pop
mov
push
xlat
arpl
ret
cld
jge
push
or
adc
pop
pushf
mov
lea
adc
push
out
jecxz
mov
enter
sub
inc
push
dec
mov
xor
sbb
int3
gs
inc
cli
jge
call
lcall
adc
jns
xchg
mov
sub
test
popf
into
lret
jle
adc
mov
adc
out
or
bound
sbb
gs
enter
jae
shlb
xor
rcrb
push
nop
jge
lock
sbb
out
pop
faddl
idivl
sahf
gs
out
sbb
mov
das
pop
ja
sbb
aam
xchg
dec
jl
jae
sbb
in
fwait
test
mov
lahf
scas
int
pop
mov
mov
sub
ret
pop
push
mov
sahf
adc
jnp
fidivs
jp
clc
sbbb
inc
dec
mov
mov
mov
xchg
loop
jle
jge
lock
add
mov
inc
sbb
dec
push
mov
inc
ret
test
push
xchg
mov
or
comiss
scas
adc
or
test
negl
inc
dec
or
mov
mov
mov
jnp
mov
stos
int3
repz
mov
movsl
es
add
sbb
sahf
mov
jbe
repnz
inc
xchg
loop
mov
movsl
adc
sbb
scas
push
dec
repz
mov
iret
cmp
sub
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
jle
lahf
mov
jo
mov
lahf
jle
enter
aad
jecxz
mov
pop
jg
cli
pop
loop
mov
into
mov
orb
inc
sub
mov
and
mov
cmp
push
pop
loopne
mov
bound
fmull
add
daa
push
fmuls
cld
mov
cmp
outsb
popa
cmp
shrl
scas
test
or
add
ss
push
stos
add
andl
jp
data16
inc
ja
out
sbb
loopne
cmpsl
enter
jae
dec
inc
dec
or
push
das
xor
fists
js
fcmovnbe
outsl
pop
imul
xor
push
push
jmp
inc
push
fcmovb
xchg
and
push
push
fwait
aad
pop
mov
xchg
pop
iret
or
aaa
loopne
std
push
dec
inc
inc
loopne
insl
arpl
outsb
movsb
cmpsb
daa
sub
push
mov
pusha
adc
je
mov
jo
aaa
push
in
add
or
jge
je
jmp
mov
xor
inc
jmp
int3
cld
jb
cmpb
mov
push
add
sbb
inc
ret
cmp
mov
repz
out
jne
and
push
cltd
jmp
out
andl
add
lock
sub
pop
imul
dec
lock
dec
addl
lods
xor
mov
test
shlb
xchg
and
mov
fwait
lea
lret
dec
movsl
sub
jp
paddq
gs
xchg
loope
ficoms
lcall
insb
icebp
cld
cmp
nop
inc
sub
int3
dec
in
enter
push
in
mov
and
aad
xor
in
das
fs
fisttpll
clc
nop
arpl
pop
dec
mov
mov
lods
ret
div
adc
filds
inc
mov
jb
cmp
dec
and
ret
dec
dec
dec
mov
aaa
in
rcll
movsb
movsb
fsubr
into
iret
cwtl
mov
mov
mov
push
jecxz
jmp
fildll
mov
stc
adc
jg
cmp
pop
out
jecxz
lahf
add
ja
lea
les
mov
xchg
cmc
outsl
jo
jp
mov
sub
fbld
cmpsb
pop
dec
int
movsb
pop
push
scas
xchg
test
xor
ja
cmp
jg
push
jmp
inc
inc
mov
push
pop
jge
jle
roll
mov
cmp
inc
iret
jnp
sbb
fmuls
add
cmp
cltd
push
icebp
mov
out
fdivl
imul
ljmp
sub
push
and
cmpsl
dec
pop
dec
inc
loope
sbb
inc
mov
sbb
sub
or
inc
add
pop
push
out
pop
jecxz
mov
mov
and
jne
mov
aad
pushf
cmp
and
pop
dec
mov
hlt
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
jne
sub
test
jo
in
mov
mov
lods
mov
xchg
imul
dec
cmp
mov
out
push
pop
sahf
stc
cmp
inc
jmp
sub
iret
in
jno
int3
repz
das
dec
pop
stc
insb
rcll
std
aaa
lret
out
or
push
lea
and
sarb
test
jae
fldcw
sbb
dec
push
xor
mov
cmp
test
fdivl
xchg
jle
cli
cmp
jg
push
frndint
aas
lods
and
leave
sub
repz
inc
xor
cmc
pop
jmp
sub
fdiv
cs
jp
or
std
aad
movsl
push
mov
js
bt
jmp
mov
dec
scas
jbe
scas
mov
rcrl
mov
mov
or
xchg
lods
movsl
inc
inc
mov
xor
add
and
mov
fisubrl
sbb
mov
dec
xor
addr16
jle
xchg
mov
dec
mov
jl
inc
cli
fwait
mov
inc
inc
jg
arpl
cmp
mov
mov
je
add
adc
mov
fsubrl
pop
loop
bnd
xor
xchg
mov
fisubl
loopne
inc
xchg
push
mov
push
sbb
mov
mov
jmp
jle
call
lods
cli
stc
xchg
gs
add
pusha
movsl
push
pop
cld
xchg
jl
mov
sahf
sub
inc
xor
pop
repnz
push
xor
lods
jle
or
jle,pn
test
mov
xchg
cmc
lds
sbb
xor
ret
xchg
outsl
xlat
idiv
fildll
inc
fildll
mov
pop
jne
jnp
or
inc
call
sub
rcrl
pop
repnz
repz
imul
lcall
lods
shll
inc
and
xor
xchg
arpl
out
clc
push
fs
iret
and
andb
add
fdivrl
mov
outsl
xchg
mov
push
mov
sbb
sahf
mov
pop
lret
jl
out
adc
mov
or
sub
push
sbb
and
iret
in
pop
mov
decl
xchg
cld
adc
push
xchg
lea
pop
pushl
jns
push
test
loope
mov
ds
orl
pop
inc
jge
pop
or
and
in
arpl
cvtps2pi
lret
sbbb
popa
lret
pop
dec
cmp
adc
jg
xchg
pop
aam
and
int3
int
mov
fs
add
sti
jp
mov
cmpsl
mov
cmp
or
loopne
ficoml
les
movsl
adc
mov
in
mov
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
push
lods
sti
cmpsl
int3
jo
and
jo
add
loopne
testb
jge
shll
push
jb
stos
jmp
pop
bound
cmpsb
cmp
jge
arpl
in
sbb
filds
lret
jns
out
mov
or
cmp
mov
negb
cmp
stos
and
inc
push
mov
add
notl
mov
and
push
jmp
lret
inc
sbb
icebp
adc
mov
cwtl
or
xor
xchg
mov
push
add
repnz
and
fmul
aaa
mov
xchg
mov
xor
jmp
xor
aad
sbb
jno
push
scas
cmp
add
xchg
push
sbb
je
adc
daa
test
cmp
notl
push
xor
lods
std
mov
lcall
or
sub
enter
out
cmpsb
mov
loopne
push
push
popf
rorl
movaps
insb
cli
shll
mov
ret
dec
inc
hlt
cmpsl
stos
testl
subb
or
push
fwait
bound
xchg
stos
jno
xchg
xor
iret
xor
sbb
icebp
mov
outsl
push
dec
xchg
sti
cs
lahf
push
leave
jno
out
leave
ror
fildl
mov
movsl
mov
outsb
lahf
pop
ds
test
pop
cmp
or
inc
xchg
jae
call
push
dec
shl
scas
lret
js
push
sbb
mov
mov
mov
adc
subb
mov
or
aas
sub
sbb
xlat
and
pop
shlb
in
jo
aas
pop
aad
gs
sbb
cmpb
aad
adc
ja
ja
mov
int3
out
sub
mov
lret
enter
xor
xlat
dec
fdivrl
divb
push
or
loopne
rolb
xchg
cmp
maxps
or
outsb
js
adc
or
jmp
dec
fstpt
movsb
pop
fstps
push
into
jo
fistpl
or
arpl
js
xorb
push
jg
insb
push
stos
lea
shl
test
adc
mov
mov
es
in
inc
negl
mov
lcall
xor
mov
scas
jne
mov
mov
push
jne
gs
pushf
scas
dec
cli
xchg
test
lahf
lods
pop
inc
ljmp
jle
arpl
lods
mov
push
pusha
mull
out
push
ficoml
or
lock
jg
xchg
lret
test
fstp
mov
xorb
lds
sub
and
mov
ds
in
push
jl
mov
xchg
in
cltd
repz
push
out
jbe
dec
cmpsb
in
sbb
cmpsl
popa
scas
aaa
sbb
out
out
cld
inc
pop
mov
inc
hlt
cmp
fcmovu
sbb
mov
and
sbbl
cmp
mov
in
or
movb
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
aad
push
leave
jo
and
jo
push
cmp
mov
lahf
ds
leave
cli
xchg
test
sbb
pop
inc
cltd
add
sbb
mov
mov
mov
fldt
ret
fisubrs
idivb
repnz
popa
aas
xor
xor
or
shll
lahf
adc
mov
and
sbb
jbe
movsl
sub
inc
xchg
test
pop
inc
and
es
shl
dec
cld
adc
xchg
xorb
inc
mov
sbb
lret
push
in
mov
mov
inc
mov
mov
add
sub
push
in
xchg
xchg
insb
in
fidivl
mov
jo
popf
cltd
lcall
cmpsb
nop
jle
dec
xor
inc
dec
dec
mov
mov
and
push
pop
mov
dec
into
enter
loop
cltd
jl
lret
adc
mov
mov
movsl
lret
icebp
std
loopne
mov
cmpsl
sbb
fs
or
jo
popl
xor
inc
xor
repz
push
sti
cli
push
addl
jae
std
adc
bound
mov
adc
and
js
xor
push
sub
insl
push
aas
js
pop
cmpsl
xlat
push
cs
int3
jne
lods
inc
xor
inc
cmpl
mov
push
out
jne
xor
push
ss
sbb
mov
cmp
add
mov
add
xchg
adc
or
push
bnd
mov
push
pop
push
leave
sbb
test
and
ffree
xchg
mov
cmp
iret
sbb
mov
add
mov
lea
and
int3
test
test
inc
mov
mov
pop
push
stos
bswap
loope
pop
rorl
mov
jecxz
arpl
sub
outsb
or
popf
fidivrl
je
aam
jnp
pop
fistps
dec
xor
outsl
dec
subb
adc
stc
mov
aas
fs
test
jnp
or
push
adc
inc
mov
sub
int
lea
cmp
xor
mov
pop
or
pop
iret
loope
push
sbb
jecxz
and
pop
pop
push
mov
pop
mov
add
xor
ds
fldenv
sbb
mov
pop
shrb
xchg
xor
add
insb
scas
ljmp
or
rcrb
leave
lcall
mov
xchg
pop
andb
fwait
test
jg
sbb
jg
das
pushf
sub
nop
mov
insl
xlat
addr16
aas
and
loop
sub
jne
fsts
xor
pop
push
andl
fbstp
adc
test
cs
xchg
pop
adc
incb
cmc
sbb
jmp
sub
mov
cmp
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
sbb
fisubrs
and
jo
repnz
xchg
pop
fsubr
aaa
push
inc
outsb
int
sbb
push
mov
add
sbbl
mov
mov
and
pop
cmp
fwait
repz
clc
bound
lahf
cmp
ret
jbe
out
insl
lods
cmpl
sub
inc
mov
dec
jecxz
and
lret
cmpsb
subl
xchg
cmp
push
test
dec
xchg
xor
sub
in
xchg
or
icebp
pop
adc
push
mov
call
fmul
jbe
mov
pop
dec
inc
mov
jp
mov
cmp
and
iret
scas
mov
pop
aam
fimull
xor
mov
es
cli
mov
inc
popa
xchg
dec
out
fisubs
stos
sbb
popa
sbb
pop
sbb
sub
icebp
jns
je
icebp
mov
xchg
iret
inc
xchg
xchg
sti
mov
fisttps
jno
bnd
mov
lret
sbb
lock
in
pushf
jnp
pop
dec
out
arpl
xchg
mov
xchg
lods
cmpsb
xchg
xchg
in
jns
add
sub
dec
pop
stos
out
dec
sbb
mov
dec
pop
lahf
mov
pop
and
pusha
xchg
inc
dec
jg,pn
fisttpll
dec
mov
ffree
test
fisubrs
jns
cmp
pop
addr16
xchg
scas
xchg
push
inc
push
nop
test
push
dec
dec
adc
pop
push
ror
dec
cmc
repz
arpl
jge
sub
cmpsl
inc
ja
call
int
ja
xchg
jle
and
jbe
push
sbbl
mov
out
leave
mov
pushf
js
inc
push
push
adc
push
jg
dec
jmp
cmp
push
xor
nop
aad
cwtl
pop
jnp
scas
mov
sub
mov
xorb
stos
jmp
mov
aas
pop
movsl
dec
mov
mov
les
jne
out
cmp
out
lret
scas
xor
dec
pop
inc
test
int
lahf
lea
sbb
popa
xlat
maxps
mov
cwtl
scas
push
mov
in
jmp
inc
mov
xchg
jno
in
pop
mov
mov
cmpsl
mov
jns
dec
mov
jb
lcall
out
popa
jl
or
fwait
pshufw
adc
push
jp
xchg
mov
hlt
cmp
xchg
adc
jecxz
es
in
movsl
cmpl
adc
lret
push
and
into
adc
clc
inc
aas
adc
adcb
sub
mov
ja
lcall
and
pop
inc
js
xchg
inc
in
inc
cs
mov
mov
into
inc
jg
xlat
or
mov
sahf
cli
push
lods
cmp
das
pop
movsb
outsb
mov
add
fstps
sub
and
lds
jb
inc
add
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
xor
out
aaa
shlb
and
jo
mov
add
fdivrp
and
mov
ds
ljmp
push
stc
mov
sbb
into
int3
imul
push
shll
movsl
cwtl
fnstcw
ss
loope
pop
iret
sbb
sbb
in
ret
xor
jbe
mov
adc
pop
stc
ja
repnz
rclb
out
dec
imul
mov
mov
mov
jmp
fnstsw
jecxz
sahf
daa
fildll
and
ja
fimull
data16
orl
xchg
or
inc
xchg
add
pop
mov
jmp
cmp
or
lods
cwtl
std
leave
add
sahf
lods
into
in
pop
popf
mov
fimuls
scas
out
or
dec
lock
les
bound
pushf
or
cld
fsubs
pop
sbb
testl
inc
xor
pop
int
push
popa
out
shll
inc
roll
pusha
nop
stos
and
mov
and
test
jbe,pn
jle
cmpsb
xor
or
and
imul
adc
popf
sbb
or
mov
sar
dec
pushf
fcmovbe
sti
cmpb
adc
mov
jle
xchg
in
dec
inc
leave
or
push
inc
lock
es
repz
shr
movsb
dec
mov
pushf
dec
and
xor
stc
mov
push
std
push
jmp
lret
je
ret
push
lods
or
push
xchg
pushf
or
adc
pop
bound
push
sub
aaa
xchg
sub
movsb
xlat
add
es
jb
mov
shll
push
sbbl
jbe
imul
repz
lahf
mov
adc
mov
xchg
insl
insb
fsub
adc
mov
adc
xchg
adcb
add
jmp
jne
push
jbe
lcall
ja
ss
xlat
mov
dec
out
mov
push
adc
cld
mov
dec
cli
movsl
stc
cs
add
mov
lods
cmp
pusha
fucomi
push
push
cmpsl
lret
or
shll
popa
mov
stos
ds
mov
mov
and
xchg
add
int3
daa
aad
fstps
mov
pop
popf
loope
pushf
pop
inc
jmp
pop
dec
xchg
jnp,pn
lock
ljmp
xchg
insb
jo
mov
mov
pop
sbb
mov
fistpll
xchg
jge
push
lods
insb
cmpb
cmpsb
out
pushl
sub
inc
sbbl
repnz
push
dec
mov
lods
xchg
dec
ret
jg
adc
cltd
mov
leave
add
nop
inc
addr16
mov
lds
push
sub
jle
into
cmpsl
int3
insb
mov
loop
mov
cmpsl
test
or
add
add
fisttpl
jp
xchg
mov
out
jo
and
jo
fidivrs
mov
clc
sti
mov
pop
xchg
loope
cmp
cmp
pop
cwtl
mov
push
push
ret
bound
out
xchg
sub
fidivs
outsb
fs
and
add
jmp
push
inc
jle
jbe
pop
mov
dec
adc
sbb
sti
ja
sbb
xchg
xchg
iret
push
lret
xchg
les
mov
pop
and
pop
pusha
cltd
dec
jmp
and
adc
mov
mov
fisubs
mul
or
jmp
cltd
cmp
pop
mov
mov
mov
jp
jg
insb
dec
cs
mov
repnz
lcall
js
pop
and
xor
sbb
test
lock
dec
cmc
aaa
pop
pop
imul
add
in
in
push
xchg
adc
mov
xor
cs
mov
xor
push
dec
adc
andb
pop
jns
adc
shl
in
or
jp
lret
roll
clc
cmp
sbb
pop
sub
in
fldl
dec
sarl
mov
pop
jo
ficoms
shrb
mov
jns
stos
pop
sbb
push
lea
pop
jae
sub
cltd
push
inc
rcll
adcb
pop
inc
dec
daa
inc
jne
xor
test
adc
loope
and
or
adcl
lock
or
mov
mov
rorb
scas
sbb
xchg
inc
jmp
mulb
add
or
clc
push
addr16
add
sbb
add
mov
push
int
ret
ds
xor
dec
scas
js
sub
jbe
pop
jo,pn
sub
xchg
xor
clc
inc
xchg
add
jmp
mov
fmuls
dec
cld
icebp
adc
sti
into
sbb
daa
sbb
ja
cs
ljmp
cmpsb
cmp
push
cwtl
add
pop
sub
push
push
ret
nop
fldl
enter
int3
stc
inc
xor
jb
test
xor
outsb
sarl
xor
popf
inc
xor
mov
cmp
mov
clc
pop
inc
inc
sti
xlat
aad
stos
in
call
frstor
mov
mov
jl
in
out
xchg
push
lods
scas
test
pop
cmp
out
aad
fcmovnbe
push
lcall
push
pushf
ficoms
enter
out
sbb
in
sbb
dec
out
int
mov
jo
aas
add
dec
mov
fptan
xor
lods
pop
xchg
loopne,pn
callw
add
cmpsl
dec
mov
aam
mov
cmp
xlat
pop
lods
jnp
cld
cmpsl
inc
popa
mov
call
mov
push
rcrb
shrb
orb
mulb
push
ljmp
loope
push
mov
add
jno
mov
ror
dec
orl
adc
push
into
hlt
pop
xchg
test
cmpsl
test
pop
and
bound
in
pop
inc
sti
rorl
test
jp
push
inc
xor
add
jmp
mov
fwait
xchg
fwait
jae
roll
push
xor
and
jo
inc
nop
mov
sbb
mov
xlat
ss
stos
test
pop
mov
jmp
lret
pop
scas
ja
sub
leave
sub
in
stos
jp
pop
inc
pandn
les
daa
mov
dec
mov
inc
push
sbb
mov
popf
sbb
fsubp
inc
jmp
repz
jg
adc
loop
test
imul
push
dec
mov
sub
es
cmp
xchg
adc
mov
imul
fwait
add
push
xchg
push
xchg
jnp
dec
data16
jl
jae
int3
push
lods
cmc
das
mov
fisttpl
into
and
fcmovb
js
mov
int
inc
aas
mov
add
int3
dec
rolb
cli
push
test
push
out
sub
and
inc
adc
mov
sar
jne
inc
and
daa
cmp
je
sbbb
int
sahf
cmp
leave
jg
pop
xorb
rorl
stos
test
fs
mov
mov
xchg
jae,pn
inc
xor
movsl
xor
and
jmp
into
es
aaa
or
jb
decb
cltd
int3
add
lret
pop
enter
loopne
orb
nop
movsl
popa
xlat
jbe
xor
adc
out
leave
push
in
pop
sbb
movsl
push
loopne
insl
push
jbe
dec
jae
mov
shl
sub
addl
jl
inc
in
test
std
cmp
shrl
cmp
lret
mov
stos
dec
push
int3
jnp
dec
jp
xchg
repz
cmp
sti
gs
xor
dec
push
fimuls
ret
mov
outsl
dec
push
cmc
test
cmp
cmpsb
xor
lcall
inc
xor
cmc
jno
dec
inc
ret
xchg
and
and
imul
jb
xor
cmp
loop
ja
push
inc
pop
pushf
sti
and
arpl
popf
sbb
adc
insl
test
push
mov
popa
push
mov
jmp
mov
mov
les
imul
xchg
aam
scas
es
jae
mov
mov
mov
loop
lods
popf
mov
int3
hlt
das
xor
pop
xor
jg
mull
mov
push
dec
jno
mov
jg
jp
lahf
mov
inc
mov
das
lret
fsubrl
test
mov
out
test
mov
movsl
ja
xor
push
call
mov
or
int3
dec
pop
push
sub
push
lods
push
in
sbb
sbb
and
rcrb
test
lahf
mov
push
ljmp
pop
sub
xor
iret
mov
int3
ljmp
into
mov
scas
and
inc
pop
mov
call
shl
add
lock
xor
pop
das
adc
lock
xchg
fmul
cld
push
and
addr16
add
pop
xor
inc
inc
ltr
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
sub
inc
fnstenv
and
jo
outsb
sbb
adc
pop
mov
int
lds
adc
into
int
inc
pusha
js
inc
xchg
les
cmp
add
add
lods
jp
test
test
arpl
pop
push
jne
add
cmp
pop
xor
lret
and
xchg
dec
and
std
mov
adc
push
daa
jno
sub
jne
lea
mov
sub
push
aas
incb
sub
daa
ds
cli
sub
jmp
movsb
dec
xchg
mov
pop
and
movsb
lcall
andl
and
or
andb
jne,pt
loop
jg
repnz
push
loopne
add
gs
add
popf
in
and
add
add
jae
clc
in
scas
insl
xor
xchg
movsb
xor
mov
push
sub
sbb
mov
jg
jge
mov
xor
insb
ja
pop
mov
adc
scas
fiadds
xchg
rclb
into
movb
xchg
xchg
inc
cltd
std
pop
and
jns
push
pop
enter
sub
sbb
mov
in
in
fmulp
pop
test
sub
daa
pop
std
sahf
addr16
inc
int
and
aad
fnstsw
ss
aas
lea
mov
lds
cmp
popf
mov
sbb
jle
xor
cli
loopne
dec
in
int
ficoml
mov
sbb
addr16
cmp
in
xor
and
ret
mov
adc
xor
xlat
int
mov
js
fdivrp
or
pop
mov
mov
lret
sti
lahf
ds
xchg
or
mov
sti
jge
cmc
cmp
aaa
jne
ret
imull
sbb
ljmp
mov
stos
sub
cs
rolb
xlat
pop
dec
int3
mov
mov
jns
xlat
mov
fwait
mov
push
cmpsb
rorl
inc
in
stc
mov
in
xlat
sub
jl
mov
mov
rcrl
and
inc
lods
pop
dec
stos
xor
mov
aaa
negl
int3
dec
sbb
sarb
dec
jl
in
push
cmp
sub
mov
jmp
push
out
loop
cmp
mov
push
repnz
rolb
dec
in
xor
xor
popa
popa
or
mov
les
stc
cwtl
ljmp
dec
push
fwait
out
add
pop
jns
xor
stc
inc
or
jp
cmpsb
sbb
leave
ss
sahf
or
stos
stos
cltd
xor
mov
ljmp
cmp
inc
in
push
mull
sbb
enter
movsb
je
mov
or
shrl
add
jle
test
add
or
pushl
lea
jmp
add
out
out
xor
call
mov
jo
and
jo
pop
pop
fwait
inc
jecxz
cwtl
xchg
push
movsb
or
inc
sarb
xchg
push
xchg
push
and
in
dec
adc
mov
ja
sub
inc
movsl
movsb
push
mov
jno
dec
xchg
cmc
mov
inc
sub
mov
xchg
iret
cld
mov
cmpsl
xchg
insl
jne
jg
jnp
cmp
lea
arpl
push
jbe
stos
mov
jns
std
fadd
loop
xchg
arpl
push
addl
fistpl
dec
inc
in
popa
aaa
cmpsb
inc
push
insb
mov
xchg
scas
jmp
popa
pop
pop
out
jne
ss
sti
add
add
mov
push
sbb
pop
xor
mov
fnstcw
inc
mov
mov
pop
ljmp
pop
nop
mov
test
sbb
mov
ljmp
and
shll
aaa
xchg
xor
mov
lahf
xor
sbb
inc
dec
cmpsl
xlat
sub
lds
in
shll
mov
ret
push
stos
mov
jl
movsb
out
xor
adc
push
pop
push
rorl
hlt
xchg
jnp
sahf
cmpsb
cmp
jb
push
aad
sahf
bound
cmp
cmp
icebp
pushf
add
sub
popa
mov
testb
inc
shll
je
dec
and
dec
inc
shl
jnp
aaa
cmc
cltd
jno
mov
or
hlt
add
loopne
shlb
outsl
adc
shlb
lods
data16
adc
pushf
subb
test
pop
dec
xor
sub
mov
arpl
add
jnp
outsl
aas
mov
push
xchg
nop
xor
pop
cli
push
imul
lahf
leave
mov
popa
ss
mov
xchg
into
xor
mov
jae
mov
lods
aaa
rorb
sub
sub
adcb
inc
sub
fwait
lods
movsb
loop
je
or
js
cmp
mov
jo
cmpsb
cli
shl
fisubrl
pushf
add
sbb
ljmp
inc
pop
and
lods
cmpsl
sbb
adc
filds
add
push
aam
dec
add
test
outsl
or
dec
xor
jmp
cmp
push
ffreep
cmp
stos
or
lock
test
repz
xchg
sbb
mov
int
push
rorl
mov
sbb
int3
lcall
daa
or
mov
lret
cmpsb
add
push
cs
adc
xchg
mov
and
lods
in
sub
leave
inc
xchg
cltd
fisttpl
dec
jnp
stc
pop
xlat
cmp
inc
xchg
lds
add
insl
jns
js
ljmp
mov
cmp
adc
pusha
inc
inc
xchg
cmp
xor
mov
adc
mov
push
divps
lret
mov
mov
lods
movsb
outsb
loop
mov
push
ds
fs
fisubrl
in
pop
push
add
int
and
pop
cmp
adcb
insl
rorl
lahf
adc
andb
ljmp
aas
and
xor
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
push
adcl
loop
jo
jge
jo
mov
loope
add
cmp
cs
imul
mov
mov
sub
xchg
jecxz
adc
test
popl
mov
cmpsb
imul
or
jl
cmp
mov
in
ret
inc
cmp
imulb
pop
pop
repnz
inc
outsb
scas
shlb
lret
cmp
sub
sub
cmp
dec
mov
push
sbb
pop
fnstsw
daa
fdivrs
xor
pusha
xor
push
fsubs
or
jg
hlt
imul
xchg
mov
sarl
test
repnz
xchg
shlb
cmp
fnstsw
adc
xor
data16
fidivs
jle
test
dec
hlt
test
imul
jmp
stos
pop
out
fwait
insb
stos
movsl
sbb
in
pop
adc
mov
rcl
repnz
push
loope
pop
mov
lahf
popa
int
js
scas
jp
dec
adc
aad
shr
lock
pop
mov
adc
jae
insb
or
add
cwtl
mov
xchg
jne
icebp
dec
fistl
xchg
js
aad
mov
bound
sti
xchg
push
icebp
pop
fcompl
cmp
jle
rcll
jmp
test
add
sub
mov
pop
sti
add
xor
fistpll
mov
outsl
fcmovnbe
xor
mov
clc
cwtl
mov
das
sbb
adc
addr16
mov
lds
cld
enter
icebp
ljmp
xchg
inc
lret
stos
ret
stos
and
rcl
aad
push
pop
cs
testb
mov
sti
xor
pusha
mov
call
sbb
add
sbb
testb
scas
mov
popa
scas
movsb
mov
outsl
test
rclb
jg
cmovbe
cmp
sbb
xor
lcall
cmc
adc
cmp
shr
pop
sbb
nop
add
mov
cld
cmp
mov
scas
jge
arpl
jnp
rol
int
pop
jns
sub
mov
pushf
ss
andb
inc
push
sbb
in
sbb
stos
pusha
sbb
in
fidivl
jmp
pop
mov
aas
lods
mov
mov
je
pushf
adc
into
dec
andl
pop
imul
shrl
inc
cmp
inc
dec
int3
add
mov
add
aaa
repz
leave
inc
jo
xchg
push
jmp
shl
imul
test
mov
mov
pop
or
push
inc
inc
sarl
push
mov
or
xor
inc
in
lahf
sub
mov
es
mov
mov
mov
daa
adc
outsb
into
les
pop
in
hlt
loopne
iret
jnp
jno
js
mov
adc
push
ja
ret
mov
sbb
mov
xor
lahf
jbe
mov
js
mov
mov
sub
push
add
and
inc
add
dec
add
add
mov
ja
add
xchg
pop
sub
jo
jge
jo
sub
adc
jb
pusha
inc
and
jecxz
or
xor
nop
jae
mov
int3
push
xlat
ss
mov
xchg
fdivrs
inc
inc
adc
inc
sub
sub
jg
jle
js
leave
or
out
and
out
shll
mov
test
test
mov
or
shll
or
stos
push
xlat
fwait
scas
outsb
cmp
mov
mov
movsb
or
dec
in
mov
in
js
and
dec
xchg
xchg
inc
rcll
cmp
int3
nopl
or
std
stc
xchg
stos
xor
jno
jecxz
xor
push
sub
sbb
mov
add
mov
sub
cpuid
mov
fs
or
int
jnp
inc
idivl
cmc
sbb
push
shrb
into
fadd
in
pop
cli
xor
inc
jno
idivl
xchg
sub
insl
mov
dec
jo
adc
push
lock
or
mov
ret
add
xchg
shlb
jmp
flds
in
jne
nop
pop
jecxz
xchg
add
sub
shr
mov
jo
mov
inc
aas
movups
leave
mov
hlt
movl
daa
aaa
orb
rcl
repz
xor
insl
imul
cltd
testb
push
xor
loope
jnp
and
mull
xor
loope
xchg
mov
and
xor
or
stos
in
and
adc
lods
adc
xchg
int
sbbb
sbb
inc
jl
lods
cmpsl
xorl
sbb
pusha
push
shlb
loop
outsb
and
out
xlat
lcall
jne
sbb
andb
mov
pop
arpl
xchg
xor
stos
xchg
std
pop
int
mov
jbe
pop
jns
pop
and
mov
or
movsb
cltd
adc
shlb
pop
mov
mov
bound
mov
lahf
mov
xor
aad
jl
sub
fstl
sti
mov
clc
xchg
int3
rcrb
ret
jne
and
sbb
decl
inc
lret
sub
pop
repnz
cmpsl
pop
icebp
pop
jbe
aas
movl
testb
and
ljmp
xchg
xor
push
xchg
mov
push
test
sti
mov
xchg
ret
xchg
mov
jbe
outsb
dec
jbe
push
xlat
sub
lea
push
mov
push
test
int3
adc
ds
in
notb
or
nop
sub
xchg
inc
test
pop
inc
xchg
inc
pop
dec
fstps
cmp
aad
lahf
mov
cld
and
mov
orb
xchg
pop
adc
addr16
sbb
popl
cmpsl
clc
mov
pop
push
fisubl
test
push
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
testl
in
jo
lahf
jge
jo
out
cmpl
outsb
pop
bound
and
gs
sub
and
inc
adc
popf
out
mov
clc
cwtl
mov
hlt
xor
xchg
iret
idivb
jmp
sbb
nop
inc
and
push
aam
jns
push
xor
push
lea
jg
leave
andl
sbb
loopne
cwtl
fcmovb
xchg
inc
test
pop
mov
je
jecxz
dec
xchg
inc
adc
xor
ret
pop
jnp
pop
mov
outsb
sub
nop
shrb
xchg
or
or
fnsave
sbb
push
stos
or
and
repnz
outsl
into
mov
sub
mov
xchg
cmp
pop
sub
dec
adc
out
dec
data16
daa
mov
sbb
popa
orl
lods
xchg
mov
ja
fldt
and
fwait
aaa
aam
mov
pop
lcall
sahf
pop
out
cld
mov
pop
jg
and
pop
pop
push
xor
jle
or
shlb
int3
aaa
mov
and
insl
jge
test
cmp
insb
fnstsw
add
xchg
lods
ret
and
jno
jle
sbb
test
lods
fadd
push
popa
mov
mov
sbb
inc
sub
je
cmc
movsb
js
add
out
mov
dec
jnp
sbb
ret
sbb
sub
enter
push
je
in
mov
jg
xor
fmul
and
xchg
jbe
out
push
pushf
fdivs
loope
jecxz
int3
stos
jecxz
or
pop
lea
jo
or
add
and
push
pop
xlat
mov
mov
pop
jae
push
adc
leave
mov
push
mov
cltd
jecxz
ljmp
subb
out
arpl
and
ljmp
jle
mov
pop
dec
imul
inc
les
enter
xchg
mov
pop
sti
inc
pop
inc
xchg
out
sarl
pushf
pop
sarl
loopne
lahf
add
pop
sub
mov
xor
arpl
xchg
dec
push
mov
in
cs
loop
xchg
mov
or
imul
imul
mov
add
scas
jmp
imul
rcr
pop
lods
inc
fdivrs
fwait
cmc
push
fstps
ficoms
xor
mov
pop
lods
out
and
sbb
rclb
nop
dec
xor
push
shll
cs
dec
ljmp
xor
mov
jne
pop
test
inc
mov
aas
cs
xchg
adc
aaa
push
cmp
stos
push
jg
call
mov
repz
mov
jl
jmp
xchg
int3
cmp
sub
and
outsl
cltd
cmpsl
mov
inc
out
push
out
ret
mov
or
pop
cmpsl
fistpl
xchg
loope
or
mov
adc
mov
mov
out
jnp
and
faddl
push
orb
icebp
pop
xchg
push
nop
mov
xor
frstor
idiv
lahf
lret
std
out
mov
dec
sub
or
test
outsb
jle
mov
push
jae
rcrb
dec
int3
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
mov
jecxz
es
jo
mov
pop
repz
inc
mov
rcrl
mov
loope
movsb
and
mov
std
jns
fdivr
out
loope
lods
aas
pop
adc
aas
outsb
scas
inc
fildll
or
jo
popa
lods
std
inc
mov
sahf
pop
xor
popa
or
shufps
push
or
fs
jecxz
pop
and
movsb
pop
mov
lret
push
fisttpl
xchg
add
fdivs
push
arpl
scas
mov
sbb
ss
jl
cmp
jge
pop
xchg
xchg
imul
xor
call
mov
cmpsl
fistpl
repz
sbb
stos
pop
imull
imul
jl
mov
push
je
xchg
add
stos
inc
jno
jne
cwtl
dec
cmp
mov
pushf
mov
lret
adc
xchg
sti
sbb
cmp
mov
jle
out
push
lcall
loop
or
and
jne
jnp
insb
inc
add
sti
insb
pusha
mov
shll
sbb
or
push
arpl
iret
or
daa
and
push
adc
rcll
shll
or
mov
loop
loopne
mov
nop
add
pop
test
sbb
inc
das
add
jb
sti
xchg
mov
cmp
or
xor
pop
das
cmp
cld
mov
jo
fadd
out
xor
xchg
std
popa
lea
inc
ret
fwait
js
aad
ja
lea
mov
fmul
fcomp
std
lock
push
outsl
adc
mov
pop
enter
adc
shlb
hlt
adc
inc
aaa
inc
cltd
pop
imul
jno
or
jno
or
xchg
dec
xchg
in
mov
dec
popa
push
les
push
inc
and
xor
and
xchg
movsl
scas
inc
mov
dec
mov
test
repnz
cmc
loopne
pop
fdivr
daa
lcall
imul
push
push
inc
sbb
enter
dec
add
mov
and
and
jmp
jmp
lods
adc
jnp
sub
cmp
push
fimull
sti
xor
repnz
jge
cmp
mov
jg
or
adc
jp
adc
cltd
dec
push
out
mov
xlat
jb
mov
mov
xchg
cmp
clc
cwtl
frstor
movsl
cmp
or
sahf
or
enter
ret
mov
pop
test
xchg
ljmp
aam
les
xchg
xchg
mov
js
std
inc
push
aaa
int3
mov
divl
push
pop
pusha
mov
jecxz
sub
ret
cmp
sub
inc
scas
push
jbe
les
std
loop
pop
mov
push
and
mov
loope
push
int
iret
cmp
xor
js
mov
mov
std
leave
sub
or
mov
push
frstor
sarb
jge
and
loop
push
out
mov
adc
mov
sbb
sub
sbb
and
icebp
out
jmp
ljmp
adc
mov
movsl
adc
arpl
xchg
and
jae
imul
inc
pop
stos
mov
mov
pop
add
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
push
and
push
inc
cmc
jo
lahf
jge
jo
icebp
and
mov
and
xchg
push
jl
inc
sbb
pop
add
dec
popa
mov
and
mov
or
jmp
aam
out
xor
je
sbb
daa
push
sub
mov
mov
rol
and
sbb
addl
adc
pushf
sub
pusha
dec
rcr
push
mov
data16
dec
test
lods
jge
mov
fistpl
ret
out
mov
inc
add
cmp
les
push
call
xor
mov
pop
pop
std
movsb
insl
inc
clc
adc
adc
and
dec
jae
adcl
lahf
add
lods
cmp
xlat
stos
popa
les
movsb
cli
sbb
incl
nop
ret
movsb
call
idivb
adc
sub
mov
aaa
mov
insl
xor
pop
fwait
push
or
insl
push
mov
sub
sub
inc
shrb
bound
lods
cmp
pop
jbe
test
nop
cs
lods
jmp
cmp
adc
push
sti
inc
insb
sahf
lret
push
lods
mov
inc
and
cs
push
add
xchg
insl
mov
xchg
sbb
xchg
leave
lods
push
out
jnp
loopne
repz
stc
jle
xor
cld
pusha
mov
dec
jmp
fldl
jge
ljmp
aas
inc
jp
pop
int3
push
outsl
dec
cmp
mov
xorb
pop
xor
jns
add
sbb
xchg
repnz
aam
cmpb
mov
push
add
sub
dec
jg
mov
mov
bound
movsl
in
mov
push
mov
mov
dec
cmpsl
and
mov
mov
inc
fwait
sbb
leave
push
pop
adc
or
test
xchg
sub
pop
sbb
mov
ljmp
enter
clc
push
or
mov
dec
sbb
into
jmp
loop
mov
lods
in
xchg
xchg
or
sahf
push
mov
pop
daa
adc
push
pop
lret
jp
sub
out
into
push
xor
hlt
stos
ds
mov
or
mov
lock
fcmovne
add
pusha
sbb
ss
adc
aaa
imul
jb
aaa
and
insl
cmp
cmp
xlat
pop
and
inc
and
or
scas
mov
shrl
dec
jnp
pop
mov
fldcw
stc
hlt
jg
dec
sub
divl
xchg
jb
stc
mov
inc
lahf
sbb
or
aam
mov
add
mov
push
mov
mov
xchg
jl
add
adc
adc
test
rcl
jbe
lahf
push
push
fists
sbb
jbe
scas
es
sti
or
shr
popf
pop
xchg
push
pop
scas
push
por
and
mov
fidivrl
dec
fwait
fwait
leave
sbb
aas
movsl
sti
and
testl
imul
std
xchg
cli
sbb
mov
xchg
pop
stos
movsb
push
arpl
add
mov
fdivp
mov
mov
xlat
push
cmpsb
dec
dec
pop
push
push
push
add
neg
stc
add
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
sub
cltd
jmp
lahf
jge
jo
loope
fmull
dec
sarb
lahf
call
sbb
sbb
dec
jae
fcomi
fnstcw
insl
stos
pushf
or
jbe
push
test
popf
outsl
jge
push
jnp
outsl
sub
cmp
clts
sbb
fisttps
add
mov
mov
and
jp
xchg
subl
xchg
shrb
xchg
mov
fwait
xchg
adc
mov
fcmovnbe
jmp
cmc
lret
add
out
cmp
into
sub
xchg
push
adc
pop
pop
daa
jbe
or
inc
push
jge
jb
xchg
and
test
test
jecxz
adc
out
leave
jnp
xchg
jae
loope
and
fldl
cmpsl
mov
push
outsb
adc
rorl
pop
jl
loope
dec
push
aaa
mov
or
mov
addl
dec
adc
pop
fdivr
or
roll
insb
std
shlb
popf
xchg
sti
fadds
sub
js
adc
cmp
cmpsl
and
xchg
in
cmp
dec
xor
sbb
aad
xor
insl
js
push
call
and
pushf
pop
cld
aas
in
add
cld
out
pop
mov
dec
aad
and
imul
out
and
mov
jp
scas
int
data16
jecxz
data16
jmp
not
mov
stc
int3
lock
gs
nop
aas
dec
out
mov
test
pop
fiadds
ficoml
sub
stos
add
mov
lahf
lods
inc
cld
mov
pop
mov
xchg
cmpl
idivb
sub
jae
insb
rcrb
xor
rcrb
cmp
stc
data16
icebp
xchg
nop
sub
shrl
loopne
jb
pop
inc
mov
test
or
mov
inc
pop
or
push
out
pushf
xchg
push
adc
adc
or
and
imul
jp
jle
fldl
jle
sbb
cmc
xchg
mov
or
pushf
pop
fcomip
push
jbe
and
mov
fld
inc
inc
xchg
jbe
loope
pushf
shlw
xor
mov
rol
add
or
rorb
divl
inc
jne
mov
pop
dec
lcall
je
sbb
fisttpl
pop
stc
sub
shll
in
cmp
sub
into
mov
mov
test
testl
jne
lret
es
mov
sarl
sub
pop
jo
dec
out
daa
or
movsl
add
mov
in
cltd
int3
mov
inc
out
in
xor
in
jno
repz
outsb
pop
inc
mov
mov
mov
adc
sbb
popf
mov
vpaddq
sbb
lcall
push
inc
and
ljmp
loope
fisubl
mov
repnz
sub
negb
sub
sub
push
sbb
mov
mov
mov
adc
pushf
xchg
dec
sbb
fsubs
xor
xor
cwtl
dec
iret
mov
push
dec
adc
pushf
add
int3
outsl
outsb
xlat
loope
cmpsb
sahf
mov
iret
cmp
mov
mov
push
mov
jae
xchg
cmp
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
inc
xlat
mov
lahf
jge
jo
pop
push
rdmsr
xchg
outsl
fldt
out
xchg
mov
and
mov
sub
aaa
mov
sub
in
adc
dec
mov
push
sbb
pop
pusha
xchg
xchg
jb
adc
fisubs
fstps
pop
jne
mov
xchg
fs
stc
std
xor
jns
jg
sbb
mov
shrl
cwtl
int
mov
add
and
dec
or
popf
lret
add
push
mov
sub
movsb
and
jb
shl
xlat
push
out
lcall
pop
icebp
stos
xchg
loope
icebp
sub
and
add
std
popa
add
adc
aad
sub
loop
adc
inc
pop
cmp
pusha
push
leave
out
jmp
pop
imul
cmc
adc
loopne
cmovl
lret
mov
or
inc
pop
inc
xor
xchg
std
xchg
scas
add
pop
dec
xchg
push
sbb
or
or
nop
jnp
push
aaa
push
dec
shlb
lret
aam
dec
mov
cmp
sub
ret
mov
mov
push
adc
or
lcall
pop
jno
imul
jle
insb
cmp
pop
cltd
mov
jno
cmp
in
sub
clc
repz
inc
aaa
stc
push
mov
add
xchg
repnz
and
mov
xchg
push
roll
sbb
cld
fcom
frstor
jmp
add
and
shll
mov
add
pusha
and
or
out
mov
lea
mov
imul
shll
cmpsl
repz
jl
imul
xor
jle
sar
js
or
insl
dec
and
in
inc
jbe
pop
cltd
addr16
xlat
push
es
sar
sub
pushf
push
push
inc
sub
push
out
pop
into
pop
dec
popa
xor
pop
mov
mov
mov
sbb
sub
inc
mov
cld
inc
rorb
shll
lods
sbb
jle
int
psubb
jle
mov
enter
movb
lret
into
push
sbb
mov
and
sbb
pop
aam
or
jl
jmp
subb
xchg
rep
add
push
mov
push
shr
clc
and
imul
int
adc
adc
or
push
inc
iret
in
xchg
sub
popf
cmpsb
push
out
cmp
call
daa
int3
add
pop
rorb
lods
outsl
mov
and
bound
sbb
pop
enter
jns
jecxz
test
dec
in
test
push
lods
xchg
lcall
scas
jp
lods
lret
pop
fidivrs
or
fcompl
in
cmpl
dec
mov
aam
push
mov
dec
cmp
lock
das
mov
inc
jb
or
out
mov
ret
or
ret
xor
leave
pop
push
dec
xor
sbb
xor
adc
shlb
mov
test
mov
cld
outsl
mov
insb
jmp
and
adc
mov
in
push
lahf
jp
and
jae
jne
dec
and
mov
call
shr
mov
jne
sub
lret
inc
test
mov
jge
jo
js
xchg
jmp
lea
sbb
ret
ja
jo
pop
stos
mov
cwtl
fildl
or
add
test
into
pop
sub
mov
and
dec
fimull
lds
xchg
and
jns
mov
xchg
add
repz
add
add
add
ja
jg
pop
insl
inc
or
pop
inc
jo
sub
fists
jnp
lret
pop
add
xchg
div
cmp
add
aaa
adc
out
mov
xor
cld
pop
xor
lcall
daa
clc
and
cwtl
sub
fsub
or
rorl
or
mov
push
sub
mov
jb
test
stos
adc
add
cmc
mov
lods
int3
pop
insl
aam
xchg
iret
addl
popf
pusha
and
adc
sub
leave
add
jmp
aaa
in
sar
inc
jae
out
fwait
xor
lods
fcompl
inc
mov
call
aad
push
das
xchg
add
push
jbe
cmp
sub
shlb
gs
sbb
adc
fildl
cmc
idivb
dec
mov
test
sub
cltd
cmp
and
fs
xchg
pop
jns
lods
loop
test
xor
cmc
push
push
and
sahf
repz
out
mov
scas
into
outsl
mov
xor
sbb
rclb
sub
inc
mov
pop
mov
test
push
pop
mov
jg
insl
jne
test
shrb
out
jp
test
aas
or
stc
add
fbstp
jb
mov
push
movsb
pop
int3
sub
add
mov
push
mov
mov
push
lods
jne
aam
mov
insb
add
repnz
mov
in
push
sub
inc
loopne
test
add
cmp
push
fcomip
ds
mov
mov
add
in
inc
jl
sbb
popf
cmp
push
xor
dec
cmp
xchg
mov
xor
lahf
fnstsw
sbb
cmc
cmpsb
xor
out
or
cmp
jnp
mov
outsb
mull
mov
lahf
lea
push
and
cmp
mov
and
dec
mov
icebp
outsl
cmpb
pop
out
imul
dec
cmpsb
cmp
lock
inc
dec
inc
pushf
mov
adc
cmc
xchg
cld
pop
outsb
and
outsb
mov
mov
mov
xchg
movsb
jp
shll
cmp
pop
in
jp
roll
flds
pop
adc
test
negl
jae
pop
adc
mov
mov
push
adc
sbb
sub
ror
movzwl
das
mov
or
mov
pusha
pop
xchg
sub
or
lods
or
enter
das
insl
imul
xchg
jg
push
jecxz
xchg
push
in
mov
sub
repz
fisttpl
sub
cmp
cmc
cmp
mov
jl
mov
leave
jae
sbb
cmp
lret
xchg
imul
repnz
es
fisttpl
arpl
mov
fdivl
and
std
js
incl
test
pop
push
rolb
repnz
jae
pop
outsb
mov
jmp
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
pop
mov
jo
jge
jo
xlat
sbb
or
dec
bound
es
mov
loop
mov
push
push
jno
mov
icebp
movsb
cmp
cli
lret
push
lea
jge
or
pop
xor
adc
js
cs
movsb
repz
test
testl
pop
adc
ljmp
pushf
dec
mov
pop
sbb
inc
shrl
dec
inc
js
and
fcmovne
stc
pop
pop
jo
jecxz
pop
mov
cmc
xlat
je
pusha
ja
and
cwtl
mov
or
stos
mov
imul
ds
push
repnz
mov
outsl
push
xor
lret
icebp
adc
inc
inc
out
lods
out
dec
xor
mov
fcoml
mov
lds
jg
das
xchg
and
xor
cmc
nop
adc
sub
lahf
xchg
jle
es
fimuls
jecxz
mov
fldl2t
adc
out
mov
js
and
clc
out
in
sti
pop
adc
sub
call
into
fidivrs
add
cmpsl
mov
add
adc
pop
push
push
mov
cmpsb
add
mov
pushf
andl
cmp
sub
lcall
pusha
inc
out
cwtl
movsl
inc
pop
pushf
add
and
jb
cmp
xchg
adc
xchg
iret
aam
add
ja
fdivp
in
sbb
faddl
jp
cmp
mov
sub
xlat
ret
jae
xor
dec
arpl
lock
inc
mov
jmp
lahf
arpl
aam
inc
int
mov
mov
repnz
jae
add
lock
in
inc
insb
pop
pop
vandpd
or
mov
adc
xchg
xor
sbb
fdivr
adc
nop
es
add
push
add
out
push
stc
xor
push
mov
sub
xchg
fs
add
in
xor
mov
pop
xchg
loope
inc
xor
xchg
clc
lods
dec
loop
push
stos
mov
jmp
mov
inc
mov
pop
lret
in
mov
mov
and
shrb
cltd
and
jnp
loope
pop
jbe
ror
mov
sahf
jbe
jae
add
movsb
dec
inc
jno
push
jmp
lret
fildll
loop
aad
fimull
pop
cld
xchg
or
jo
mov
lods
lods
idiv
out
es
ds
xchg
mov
adc
and
mov
cs
adc
dec
fwait
stos
dec
cmp
xor
ja
rorl
stos
jecxz
xchg
and
xor
cmpsl
pop
xchg
pop
jns
scas
mov
xchg
add
fdivrs
test
icebp
outsb
outsb
mov
lods
sbb
mov
inc
xor
mov
sahf
jo
js
lock
aaa
inc
pusha
movsl
xchg
xor
cmp
pop
jp
mov
jo
pop
call
mov
faddl
cmp
pop
sbb
ficompl
jecxz
sub
xchg
roll
stc
dec
xor
ds
arpl
mov
xor
call
pop
leave
out
xor
and
push
cli
fildll
add
push
mov
xchg
mov
rcrb
push
stc
pop
test
fcomp
add
shrb
push
sbb
push
insl
push
xor
sub
loope
imul
pop
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
xlat
cld
pusha
xorl
jge
jo
fwait
fwait
sbb
repnz
mov
mov
scas
ja
jge
mov
mov
dec
fldcw
or
shrb
cmp
dec
out
xchg
repnz
fucom
sub
inc
cmp
mov
divl
lahf
add
xor
into
fdiv
dec
cmp
sti
push
mov
arpl
rorl
or
cmovge
dec
lock
mov
mov
dec
sarl
int3
inc
xchg
ficoml
popa
shrl
lods
sub
dec
sahf
xor
mov
lret
xchg
rcrb
daa
xchg
scas
out
mov
in
dec
std
into
jl
fists
sub
inc
jo
adc
mov
in
outsb
pop
test
sub
add
mov
sbbb
sbb
popa
test
imul
repnz
pushl
mov
cmp
adc
mov
xor
aad
loopne
mov
xchg
inc
cmp
cmc
jne
xchg
xchg
mov
incl
aas
adc
and
mov
iret
insl
int
add
in
and
xor
cmp
dec
lds
aaa
dec
jns
sbb
dec
loopne
iret
stc
aad
loope
shrl
jae
lret
leave
in
sbb
push
add
out
mov
popa
xor
stc
js
sbb
lods
and
pop
rcrl
daa
shl
divl
fmuls
out
mov
fcomip
sbb
xor
imul
rcrb
insl
dec
fildll
fstpl
es
out
insb
mov
mov
lods
fmuls
in
movsl
pop
mov
divl
mov
clc
dec
dec
jp
xor
out
dec
lahf
mov
jl
addr16
mov
push
fcoml
adc
loopne
loop
lods
addl
sub
ljmp
pushf
mov
mov
std
cld
sbb
clc
into
sbb
subl
lcall
loop
in
imul
sub
jecxz
sub
insb
call
mov
fs
loop
stos
loop
lcall
int
in
jge
mov
enter
or
xchg
adc
dec
push
fsubrl
dec
mov
in
cmp
xlat
jp
xchg
ret
dec
cli
xchg
subb
fldl
sub
std
out
fs
cmc
testl
pushf
inc
repnz
pop
pop
fcompl
pop
xchg
mov
sbbl
fists
push
xchg
shlb
das
ljmp
sub
or
mov
jp
fwait
mov
push
fisttps
loope
jecxz
mov
pop
xlat
mov
and
mov
cmp
out
out
or
push
xchg
pop
cmp
jo
dec
out
aam
or
iret
cmc
mov
movsb
jae
jge
mov
mov
sub
mov
sbb
stc
mov
nop
lret
sbb
dec
pop
repz
inc
imul
jns
push
mov
mov
rcrl
in
roll
orl
out
push
adc
inc
and
aad
xor
xchg
mov
adc
jmp
out
dec
data16
outsb
push
test
int
imul
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
movsb
mov
lahf
jge
jo
lods
dec
cmp
jo
leave
mov
pushf
jecxz
adc
push
fwait
int
cmp
inc
lock
leave
leave
mov
lods
iret
xchg
pop
cli
adc
insl
bound
in
shlb
out
sub
ret
out
or
cwtl
xchg
xchg
adc
aad
cmp
inc
xor
inc
mov
add
popa
call
fiadds
jbe
jmp
fiaddl
add
pop
pop
xor
adc
mov
dec
or
xor
mov
jle
lret
push
xchg
ljmp
cmp
subl
xchg
aaa
scas
pop
xchg
dec
int
fsts
mov
push
mov
and
jae
jne
cmc
push
sub
pop
sub
imul
and
into
iret
test
or
cld
cmp
sbb
jp
movsb
push
insl
adc
loopne
sbb
stos
out
scas
and
js
clc
arpl
xchg
push
sub
fwait
lret
pop
dec
mov
or
inc
adc
dec
adc
mov
push
mov
sysret
sbb
sub
fistpll
dec
lods
ds
adc
mov
sbb
imul
jae
loopne
cwtl
mov
lock
jne
and
pop
push
adc
jp
sti
ret
xor
sbb
inc
sahf
dec
inc
repnz
fisubl
out
push
mov
lcall
popa
test
xchg
xchg
jae
cmp
int3
adc
repz
loope
pop
push
in
xor
adc
cmp
mov
mov
call
addb
sub
or
fadd
aas
fadds
push
mov
test
cli
dec
idivb
mov
dec
shlb
inc
mov
push
test
and
dec
lods
lcall
mov
popa
popa
ds
cwtl
testl
and
inc
or
int
test
lret
adc
push
lods
add
dec
loop
popf
rcll
lods
push
inc
sbb
push
pop
and
stos
pop
stos
movsl
sbb
in
push
aad
mov
icebp
push
lock
ret
imul
inc
fs
jle
daa
in
loope
call
mov
mov
sub
dec
shl
stc
cmpsl
clc
call
and
xor
das
scas
mov
inc
pop
inc
and
add
push
ds
jp
mov
stos
mov
cltd
inc
bound
repz
mov
ljmp
ret
sbbb
out
inc
repnz
jb
lcall
sbbl
repz
outsl
sbb
pop
lods
pop
aad
sub
jg
add
in
test
push
jnp
sub
add
cmp
repz
sub
roll
cmp
sbb
das
mov
xchg
or
pop
in
insb
add
sub
loope
push
add
xchg
push
imul
pop
add
add
jecxz
out
pop
jmp
nop
maskmovq
divl
fucomip
aas
or
sbb
loop
bound
inc
jg
loope
les
lret
mov
mov
scas
xchg
inc
push
sarl
lret
jmp
inc
stos
hlt
aam
stc
aad
sub
jecxz
mov
fsubrs
mov
ja
bound
repz
nop
and
push
ficoml
jmp
lret
sub
jge
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
in
xor
mov
lahf
jge
jo
or
outsl
leave
jnp
inc
pushf
clc
out
mov
sub
sub
in
jno
sub
les
sti
xor
in
loope
lds
movl
xchg
stc
jmp
cmp
xchg
pop
adc
arpl
fmull
mov
aas
pop
push
push
aas
and
inc
fstp
nop
lret
subl
sbb
fdivrp
and
push
push
mov
jne
sbb
push
dec
adc
add
loop
sbb
ja
addr16
inc
ret
cld
fistpll
daa
adc
fstpt
in
lods
mov
add
aas
jmp
iret
mov
pop
mov
int3
insl
mov
ja
push
fcmovnb
fs
stos
addr16
lcall
sbbl
sub
icebp
mov
pusha
addr16
test
xor
xchg
or
stos
pop
mov
xchg
pop
outsl
aaa
inc
sbb
add
cmc
shlb
aaa
add
sub
lock
pop
mov
andl
push
sbb
sub
mov
nop
cmp
lret
popf
cmp
push
mov
lcall
or
dec
adc
dec
lods
dec
jns
cmpb
cmp
sbb
inc
pop
cs
mov
or
or
mov
mov
inc
fcompl
mov
push
pop
hlt
add
fwait
xor
in
stos
xor
es
sbb
insl
mov
fsts
jne
inc
mov
jne
jle
adc
sbb
cmp
xor
cmpsl
and
mov
test
push
mulps
inc
mov
mov
and
and
icebp
aam
imul
inc
fisttps
xor
pushf
lods
xchg
mov
mov
loopne
or
out
leave
xchg
xchg
cmpsl
cli
fnstsw
out
testl
cmp
push
or
iret
aad
lds
lods
test
ja
jl
jg
das
add
loop
leave
push
repz
pusha
clc
clc
bound
xor
mov
sub
pop
add
sub
sub
mov
enter
popa
cmp
mov
insl
mov
fadds
sbb
repz
outsb
cmpl
shl
sub
in
xor
int3
lret
mov
div
adc
movsl
mov
cltd
cs
push
mov
imull
mov
jl
add
xchg
jmp
mov
fistps
mov
sti
testl
sti
movsb
lods
mov
jnp
repnz
xchg
daa
sub
cmp
add
xor
xchg
clc
add
xor
sub
push
gs
cmp
cmpsl
jne
mov
xlat
push
mov
xchg
imul
inc
das
push
dec
pusha
insb
and
test
push
fld
into
xor
pop
sbb
lret
mov
and
mov
sbb
mov
outsl
inc
test
xchg
pop
mov
scas
stos
ret
lahf
rcrl
push
xchg
xchg
imul
xorb
lods
and
std
mov
pop
mov
jno
pop
mov
inc
adc
mov
mov
or
lahf
popa
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
ret
jns
mov
lahf
jge
jo
and
sarb
jae
lret
shrb
dec
data16
or
xchg
mov
pop
pop
xlat
int
jnp
add
popa
mov
xchg
mov
jmp
popa
les
fsubr
xor
mov
sahf
and
inc
pop
jnp
sarb
cld
dec
rcrl
mov
pop
inc
movb
pop
xchg
aas
add
clc
fcoms
loope
notl
adc
fidivrl
je
xor
notb
cltd
or
and
xchg
ss
aas
in
pop
movsl
mov
pusha
jno
jne
scas
lods
in
cld
dec
subl
or
mov
cmpsl
lods
mov
mov
mov
and
mov
imul
outsb
lods
adc
outsb
sti
shll
repz
addr16
adc
movsl
pop
xor
inc
fidivs
sub
xchg
sub
inc
xlat
out
inc
mov
jle
add
pop
jecxz
push
add
jg
xchg
adc
xor
or
mov
push
push
mov
mov
mov
jnp
loop
push
add
sub
xor
mov
xchg
pop
mov
push
inc
gs
push
sbbb
outsb
jmp
jbe
js
test
nop
cmp
xlat
jmp
jp
add
pushf
ljmp
dec
push
push
sbb
xchg
outsb
jp
cmp
fdivl
cltd
cltd
sti
xchg
sub
xor
leave
mov
xchg
pop
jl
repz
push
mov
stos
or
mov
es
add
xchg
call
adc
rorb
xchg
xor
lock
aas
add
jb
mov
ds
mov
mov
fnstenv
and
or
push
xchg
pop
lcall
inc
xchg
daa
dec
aam
inc
in
xor
push
xchg
aaa
in
sub
inc
hlt
mov
iret
negl
lds
sahf
sub
jbe
hlt
jo
adc
sub
sahf
les
push
mov
xchg
iret
jno
scas
inc
daa
into
xor
in
stc
mov
xchg
sbb
cltd
xor
repnz
adc
inc
mov
out
ljmp
imul
sbb
neg
mov
cmp
shll
out
cmc
push
scas
jg
outsb
int3
out
cmpsl
xchg
ss
daa
popf
and
fldt
push
fwait
sub
pop
inc
arpl
jbe
fwait
pop
out
data16
stc
loope
test
xlat
fsubl
sub
das
dec
mov
sarl
popf
mov
mov
xchg
xchg
mov
mov
insl
pop
sbbl
jp
mov
iret
pop
int
sahf
push
in
push
lahf
jbe
xchg
cmovnp
inc
mov
mov
sbb
outsl
ds
or
push
fdiv
loope
test
shrb
dec
ror
les
jo
orb
outsb
int
gs
aas
xchg
sbb
mov
in
jb
sbb
cmp
push
mov
push
test
ss
shll
xor
sbb
sub
mov
cmp
cmp
cmpsl
xlat
ljmp
aam
and
in
pushf
pushf
inc
das
loopne
mov
mov
inc
cmpsb
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
js
or
lahf
jge
jo
xor
adcb
fdivr
ret
fs
jns
mov
fists
ja
pop
stos
cmp
addr16
lock
push
xchg
sbb
subl
mov
out
sbb
mov
or
mov
rcrb
ljmp
sub
jne
sbb
dec
mov
mov
push
fwait
aam
ret
pop
cmp
add
negb
mov
scas
hlt
pushf
xlat
lock
add
cmp
lcall
inc
adc
push
inc
mov
mov
mov
subl
fiaddl
and
pop
add
cmp
outsl
in
push
mov
sarl
jmp
jbe
dec
mov
movsl
sarl
in
sub
inc
jmp
ds
stos
pop
lret
cmp
sub
push
xor
cmpsb
xor
sti
xchg
pop
cmc
mov
or
std
movsl
push
clc
mov
sub
sbb
cs
adc
mov
movsl
js
push
fs
dec
jae
pop
lock
and
imul
push
loope
sbb
out
cltd
jg
std
out
mov
bound
jns
pop
stos
scas
data16
fidivs
lds
outsl
xchg
inc
repz
je
addr16
mov
push
in
xchg
ret
xor
lds
xchg
dec
cmp
push
inc
xchg
mov
mov
mov
sub
push
and
xchg
shr
nop
dec
push
mov
sahf
adc
pop
inc
xlat
cmp
lret
mov
xchg
jno
orl
js
pop
aam
mov
mov
arpl
cs
cmp
sub
push
fisubl
mov
imul
movb
jno
scas
movsb
in
mov
sbb
in
mov
mov
add
pop
bound
mov
pusha
push
lahf
mov
lcall
aam
js
fbstp
lods
gs
lret
stos
mov
sbb
lret
adc
xor
jae
ja
xor
std
pop
scas
stos
jecxz
int3
fwait
cmp
jnp
xor
int3
dec
mul
add
dec
sbb
pop
ret
sub
pop
adc
imul
ljmp
std
jnp
mov
xchg
push
xchg
std
sbb
repz
cmpsb
lock
sbb
push
mov
pusha
shll
xchg
shlb
jle
lods
dec
xchg
and
addl
mov
xor
fidivl
mov
cmp
cmc
or
jae
xor
or
jecxz
js
dec
les
jb
test
inc
call
int
hlt
es
pop
xchg
ljmp
ljmp
fiaddl
mov
fistps
dec
divb
inc
adc
je
lods
cmp
sahf
inc
fisubl
push
jmp
mov
int3
sbb
loopne
or
jae
mov
mov
push
lret
xlat
sub
cmpsb
repnz
lods
sbb
mov
jbe
sbb
mov
xchg
push
inc
jae
xchg
cmp
xchg
addb
test
dec
loope
lds
and
pop
pop
xchg
dec
psubsb
or
xlat
adc
mov
lret
cmpsl
rcll
roll
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
adc
add
jo
jge
jo
imul
mov
repz
sbb
pusha
push
ss
stos
mov
imul
lods
mov
jne
pop
mov
cli
xchg
pop
shrd
dec
dec
test
js
or
divb
leave
mov
mov
call
xor
sub
mov
mov
jb
mov
jnp
push
mov
cmp
outsb
lcall
ja
jo
popa
popa
xchg
push
out
inc
dec
push
lods
mov
jns
fbld
pop
cld
mov
sub
scas
push
mov
inc
push
mov
loopne
rcll
fimuls
ret
inc
xor
xchg
push
mov
jno
inc
test
imul
lock
pop
fdivs
jae
fs
fsubp
xor
lock
gs
mov
sub
jmp
push
pop
add
push
jo
adc
jl
jp
mov
in
push
ja
repnz
sub
pop
and
cwtl
push
scas
popf
jbe
arpl
xchg
jbe
xchg
add
lahf
xchg
push
pop
xor
or
mov
mov
dec
in
jp
push
test
test
mov
mov
xchg
push
or
push
mov
or
jp
jecxz
leave
push
push
mov
push
lds
jns
dec
mov
testb
mov
ret
int3
movsl
jbe
ljmp
inc
iret
pop
ja
and
xor
sbb
stc
std
push
jge
mov
dec
push
les
iret
cmp
pop
in
popf
xchg
dec
cmp
add
inc
or
add
pop
cmp
jns
xorl
inc
ss
xchg
aam
inc
shlb
cmpsb
pop
and
jns
inc
in
and
jnp
loop
in
in
pop
arpl
test
stc
rcr
push
mov
repnz
or
mov
in
pop
sub
or
jg
xor
or
es
adc
sarb
cmp
dec
pop
fisubrl
lret
lahf
jbe
and
mov
ds
push
out
dec
xchg
imul
push
cmp
jae
int
gs
mov
cli
push
inc
mov
stc
add
sbb
bound
push
std
cs
adcl
dec
leave
lret
shll
mov
imul
inc
stos
jecxz
movsl
leave
repz
faddl
mov
mov
pop
scas
mov
and
lahf
push
push
stc
adc
inc
mov
inc
daa
aaa
sahf
adc
popa
or
movsl
lods
jmp
push
xor
adc
gs
mov
xor
pop
mov
sbb
aaa
sbb
adc
pop
fdivrs
push
xor
out
mov
pusha
mov
pop
adc
lcall
dec
dec
xlat
add
mov
es
xchg
std
dec
adc
add
inc
jnp
sarl
dec
mov
cld
adc
daa
or
and
push
fcompl
ret
xchg
lret
repz
xchg
pop
leave
sbb
outsb
pop
js
jg
ss
cmc
adc
xchg
push
adc
aam
fdivp
movsl
cwtl
lds
inc
hlt
dec
outsb
pop
fnstenv
mov
leave
sub
iret
addr16
int
outsl
sbb
lcall
arpl
ficomps
sbb
das
pop
out
mov
out
sbb
xchg
or
loopne
stos
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
popf
jo
lahf
jge
jo
and
fildl
data16
movsl
sti
sti
popf
iret
mov
pop
sbb
sbb
cs
testl
inc
sbb
jo
inc
sbb
jl
insl
pop
in
ret
add
sub
scas
jns
xchg
dec
cmpsl
cli
inc
push
pop
imul
popa
jl
mov
imul
mov
in
adc
stc
hlt
jno
fisubrs
sbb
fdivrl
add
mov
jge
out
dec
loop
mov
xchg
data16
mov
add
ds
aad
dec
lods
add
insl
mov
push
loop,pt
call
sbb
and
push
or
pop
pop
outsl
mov
adc
jp
pop
stos
push
mov
subb
jp
out
andl
daa
mov
out
pushf
mov
call
inc
lods
mov
sub
iret
jbe
fsts
jnp
add
jg
and
das
test
add
rdmsr
lahf
jnp
xor
add
adc
das
out
cmp
sub
into
jae
xchg
inc
inc
xor
and
rcr
pop
inc
or
enter
loopne
cmc
fmuls
imul
xchg
shlb
ret
movsb
es
inc
imul
pusha
jecxz
push
fwait
loope
adc
idivl
mov
cmp
pushf
and
mov
shlb
add
adc
dec
out
cmpsl
add
out
add
es
push
xor
jmp
fdivrl
inc
fldl
test
xchg
lcall
fs
mov
into
ret
repz
testl
add
xchg
and
dec
push
imul
mov
and
sub
icebp
add
push
fnstsw
lcall
pop
inc
shll
hlt
mov
loope
loopne
sti
jo
jle
popa
sbb
push
push
int3
and
lret
mov
cmpsb
dec
inc
mov
leave
mov
imul
int
adc
and
jns
add
xor
subb
cli
jp
mov
cmp
and
sbb
sahf
inc
clc
out
nop
sbb
add
jae
ret
mov
popf
mov
aas
and
and
xor
cmp
jl
ja
or
sub
xchg
cltd
outsl
out
push
pushf
fisubrl
dec
mov
sbb
inc
imul
adc
push
dec
filds
pusha
or
xor
pop
sbb
xor
add
mov
cltd
and
and
fisttpl
inc
adc
out
insl
das
lret
bound
sub
ret
lea
jg
iret
insb
push
stos
sub
sub
and
xor
mov
popa
jmp
pop
add
js
test
xor
les
bound
mov
js,pn
cltd
loop
xlat
xor
mov
sbb
imul
scas
fdivl
inc
cmp
das
loopne
orb
scas
clc
shll
mov
sub
mov
fcompl
push
push
pop
in
mov
sbb
fistps
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
pop
mov
jo
jge
jo
popa
pop
mov
test
popf
push
clc
pop
jae
jno
adc
outsl
push
in
xor
cli
mov
jle
pop
mov
fs
test
fdiv
dec
push
imul
aas
dec
das
fs
mov
mov
shrl
jmp
add
int
shlb
stos
dec
mov
push
mov
adc
scas
xchg
inc
mov
jmp
rorb
popf
adc
xor
mov
mov
cmp
leave
mov
test
lods
sbb
in
cmpsb
lods
jp
xchg
xor
jle
and
xor
xchg
test
jb
or
in
dec
sbb
mov
ficompl
ljmp
loop
in
aas
lahf
xor
aas
mov
daa
jecxz
js
inc
mov
pusha
mov
jecxz
mov
aas
fcompl
add
xchg
rolb
mov
addr16
aad
inc
pop
imul
push
pushf
arpl
xchg
push
imul
mov
lret
les
mov
push
sub
sub
mov
and
xchg
sub
jmp
into
mov
inc
add
or
sub
fwait
pop
xor
mov
sub
subl
push
and
push
mov
sub
adc
jbe
xchg
xchg
scas
cmp
inc
pop
lods
inc
jg
in
data16
out
inc
sbb
mov
mov
dec
mov
xchg
mov
outsl
inc
sub
in
cmpl
mov
sub
pop
adc
mov
sbb
nop
fwait
xor
add
gs
je
mov
pop
dec
pop
xchg
pusha
xchg
imul
add
mov
jp
mov
pop
add
icebp
jg
inc
roll
pop
sbb
xchg
cmp
popa
aam
push
dec
cmp
repnz
test
cmc
jg
jge
adc
iret
test
mov
out
shrl
push
xchg
in
mov
cli
dec
test
mov
outsb
push
push
push
lods
aaa
xor
mov
or
lret
cld
insb
push
cmp
pop
addl
dec
lret
rol
scas
inc
cmpsl
test
es
mov
jmp
add
call
or
inc
cli
std
dec
ljmp
adc
cmpsb
sahf
dec
push
sti
add
pop
sub
lret
popf
dec
ljmp
movsl
mov
xchg
inc
jg
dec
mov
sbb
sbb
pop
pop
xchg
and
push
add
mov
xchg
mov
jo
xor
scas
mov
xor
cli
pop
adc
xchg
imul
out
cmc
data16
cmpsb
pop
mov
jge
pop
adc
xchg
jae
addr16
imul
aas
push
shlb
rorl
jo
outsl
sbb
jge
push
flds
fstpt
push
jge
mov
aas
push
or
add
or
adcb
movsb
xor
fnstcw
push
or
out
je
lret
flds
int
pop
pop
in
adc
fadd
cmp
pop
lret
rclb
out
lret
push
rcll
lods
mov
mov
xchg
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
movsb
popa
push
jg
jo
push
jnp
inc
mov
bound
jmp
rcll
xor
cmp
mov
enter
popf
xchg
std
jle
pop
mov
vhaddps
dec
aam
cmpb
movsl
add
xchg
push
loopne
imulb
test
dec
cmc
fisttpll
adc
jge
shll
add
js
gs
sub
push
cmp
xor
mov
jmp
mov
pusha
shlb
add
lret
dec
rcll
ficoms
das
test
mov
mov
jle
and
pop
adc
outsb
scas
negl
jns
xor
inc
cmp
ds
sub
stc
dec
call
fwait
movsb
test
out
scas
xchg
sbb
inc
movsl
stc
sbb
cmp
jp
in
mov
xchg
or
adc
jnp,pt
ss
pop
mov
ja
cmp
das
into
ljmp
xor
dec
pushf
cs
out
add
dec
lret
ss
push
testb
lret
mov
sbb
mov
adc
push
dec
inc
cld
cmp
in
pop
imul
jp
js
stc
test
jae
xchg
add
popa
add
jbe
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
jg
adc
cmp
jo
add
xor
xor
dec
out
jge
jle
push
ficoms
mov
iret
pop
das
mov
inc
adc
mov
dec
inc
or
push
pop
insb
cmp
fsubl
push
mov
pushf
loopne
movsl
cmpl
das
arpl
sti
lock
or
sbb
sbb
cmp
sti
inc
repz
andb
cmpsl
outsl
mov
pushf
repz
movsb
sahf
adcb
or
jb
imul
mov
cld
add
inc
push
push
xlat
push
mov
sbb
in
inc
lret
dec
mov
sbb
or
add
repnz
popf
std
subl
jnp
pop
scas
aad
pushf
pushf
adc
or
pop
addr16
cmp
in
int3
sub
stos
aaa
les
jmp
push
push
out
sbb
pushf
pop
test
nop
push
add
sub
stc
int3
xchg
adc
lods
repz
rcr
sbb
daa
aaa
daa
aam
mov
add
addr16
leave
mov
imul
mov
enter
mov
sahf
add
arpl
fisttps
jle
sub
aad
idivl
mov
jo
fwait
movl
and
lea
mov
jmp
rorl
sbb
push
mov
jg
jo
sbb
stos
push
mov
test
cmp
sbb
pop
aad
or
jno
ficoms
js
add
inc
es
mov
clc
or
scas
sbb
cltd
rcrl
add
adc
sbb
pusha
sbb
jbe
nop
lds
xchg
js
das
pop
loopne
test
jne
inc
cmp
jl
inc
popa
mov
shll
xchg
stos
popa
xor
test
cmp
xchg
into
insl
sbb
call
lahf
and
imul
push
pushf
xchg
iret
push
loope
loop
ficoms
add
inc
loop
fwait
push
lods
pop
test
jb
in
outsb
push
out
rcrl
roll
cmp
cmp
xchg
dec
movsb
out
mov
adc
mov
push
roll
outsl
dec
sbb
mov
xchg
sbb
mov
flds
popa
push
test
sti
test
mov
sbb
sbbb
mov
into
sub
jp
dec
push
scas
push
daa
mov
push
cmpb
lock
lock
mov
notb
and
inc
push
and
hlt
cltd
lret
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
pop
clc
out
cmpsl
push
mov
jo
daa
push
int3
cmp
mov
nop
sub
jl
iret
in
test
pop
sbb
mov
mov
adc
mov
pop
lods
jge
lret
ficoml
and
aas
lret
dec
jg
cmpsb
mov
mov
add
xchg
pop
push
fistpl
sub
in
mov
inc
int
jle
loope
jp
lret
test
sbb
pop
fwait
xor
pushf
ja
jg
sub
loopne
add
and
sub
push
inc
sahf
pop
call
fwait
test
pop
orb
lock
jno
mov
mov
rol
je
iret
outsb
push
dec
cmp
mov
sub
dec
jbe
push
in
mov
cmp
cmp
xchg
pop
into
pop
sub
xchg
jg
cltd
jo
mov
imul
pop
push
in
or
push
stos
mov
shl
notb
or
idivl
sbb
enter
out
pop
xchg
cs
popa
sti
ja
push
ljmp
push
mov
mov
mov
and
sarl
sbb
jae
test
add
add
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
scas
imul
jo
jg
jo
mov
adc
insl
sbb
jne
or
and
loope
mov
add
out
bnd
push
cmpb
ss
in
cmc
test
pop
or
outsl
loope
cs
inc
push
popf
addr16
insb
and
sarl
je
cltd
adc
jno
mov
aas
insb
pop
andl
mov
shll
mov
sbb
xchg
push
lock
pop
popf
push
mov
cmp
mov
xor
mov
jl
dec
mov
add
xchg
nop
stc
xchg
pop
mov
fisttpll
add
adcl
push
mov
sbb
shrl
test
push
test
push
in
call
add
iret
pop
fs
hlt
addr16
xor
test
scas
sbb
icebp
in
cmpl
stos
cmc
mov
fwait
ret
xorb
test
jge
sbb
xlat
jl
inc
ds
xor
add
sub
sub
imul
adc
rcll
cmc
scas
aas
rol
out
inc
rcrb
fisttpll
lret
shl
jne
add
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
repnz
pop
imull
jo
into
jle
push
addb
inc
or
sbb
daa
add
inc
ret
fnstenv
aam
inc
or
cmp
jnp
js
or
push
pop
enter
movsb
gs
adc
fisubs
pusha
cld
outsb
push
fdivs
dec
jno
add
pop
xor
sti
fcmovnu
jb
mov
popa
pop
mov
adc
and
push
lret
lods
fisttpl
sub
movsb
dec
mov
sbb
jnp
cs
shll
cmp
ret
mov
adc
jge
push
and
mov
and
adc
sub
pop
inc
or
popf
cmp
sub
sub
cmp
xchg
mov
lock
loop
data16
lcall
fisttpl
mov
cwtl
push
ret
gs
add
xchg
bound
pop
orl
ljmp
cltd
outsl
cli
xlat
es
out
addr16
push
pop
lock
pop
mov
push
out
xchg
in
mov
rclb
loop
sti
lret
es
xchg
stos
bound
fisubs
ret
mov
fiaddl
jo
dec
adc
adc
mov
rorl
cld
jmp
movntps
push
rep
mov
push
jle
xlat
lret
mov
scas
jo
ret
jg
jo
add
dec
jns
adc
pop
mov
shrl
xor
ja
and
into
inc
adc
mov
pop
iret
nop
jg
andl
sub
cmp
pop
add
jmp
test
ljmp
sub
stos
adc
xchg
imul
int
or
cmp
push
sbb
lcall
gs
sbb
inc
leave
movsb
arpl
inc
adc
cmc
sub
adc
js
push
inc
shll
pop
ret
and
jb
shrb
sub
ss
adc
pop
jo
inc
into
ret
mov
daa
cltd
pop
xor
sub
les
stos
out
bound
loope
inc
test
sub
arpl
fsubr
push
mov
sar
xor
cld
sub
push
movsl
mov
outsb
jne
bound
sti
loop
bound
or
adc
dec
jg
jp
xchg
lock
cld
pop
mov
sub
inc
pop
int
xorl
sti
movsl
les
dec
jno
sbb
cwtl
mov
sub
mov
or
sub
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
and
jo
jg
jo
jb
mov
xor
adc
lret
subl
outsl
sbb
push
xchg
dec
jo
aad
cwtl
shrl
hlt
lods
data16
out
and
enter
data16
xor
xor
stos
stos
repnz
in
or
jnp
pop
fsubrl
std
andl
int
xor
fmull
stc
jne,pt
xor
xorb
outsl
xchg
sub
or
aas
jns
clc
call
cmp
jg
out
fnsave
mov
jns
movsb
sbb
ljmp
dec
pop
adc
or
in
imul
xor
out
mov
dec
jecxz
mov
ret
ds
pop
js
or
scas
lcall
xchg
cmp
test
inc
popf
mov
cmp
mov
js
mov
cmpl
popf
sbb
add
or
jbe
hlt
idivl
insl
mov
fwait
xchg
mov
inc
mov
out
jmp
outsb
int
nop
mov
andb
pop
daa
rcll
xchg
mov
jp
lcall
fsts
mov
cmp
push
ljmp
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
gs
shrb
jo
mov
out
push
pop
scas
das
das
adc
cmpsl
icebp
outsl
mov
adc
int3
xchg
inc
jnp
test
adc
inc
pop
aam
inc
or
push
mov
pop
cmp
xor
popf
leave
add
adc
in
iret
int3
inc
cmp
inc
pop
sbb
mov
inc
cmpb
add
xor
shll
mov
adc
imul
repnz
add
push
and
cmc
and
cltd
loope
push
xchg
mov
iret
pop
sub
xchg
daa
cmp
cmpsb
bound
mov
movsl
int
or
xchg
leave
sub
stos
push
cmpsb
test
push
mov
mov
les
mov
xchg
frstor
popa
mov
lret
mov
push
in
sub
les
mov
jg
in
adc
mov
in
imul
out
out
nop
jbe
imul
insl
pop
xor
movsb
mov
aas
xlat
mov
int
or
mov
jge
neg
xchg
adc
inc
out
xchg
jno
mov
imul
jecxz
sub
add
dec
iret
insb
add
popa
ret
adc
sbb
test
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
sbb
mov
ret
jg
jo
xchg
dec
and
xchg
dec
outsl
das
mov
mov
sbb
cld
imul
mov
loopne
and
out
loop,pn
pop
inc
jle
jle
xchg
mov
push
bound
mov
adc
mov
data16
mov
add
jge
push
mov
sub
push
pop
into
jge
cltd
fbstp
cmpsb
gs
or
sub
lahf
clc
push
aam
gs
adc
jge
imul
ja
ret
and
ljmp
or
sbb
inc
sbb
shl
insb
or
push
xor
lds
decl
pop
sahf
mov
push
call
fs
lods
xlat
or
arpl
xchg
ror
push
fadds
nopl
repz
sub
mov
mov
pavgb
rcr
push
ja
adc
aad
mov
dec
xchg
adc
idiv
sbb
enter
ss
call
or
cmp
and
les
adc
push
jl
jb
mov
jno
adc
movsl
add
or
fcomps
inc
push
or
mov
sub
add
test
xor
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rolb
mov
jo
jg
jo
inc
dec
xor
sub
cltd
pop
fstps
dec
xlat
cmp
adc
fwait
std
xchg
mov
push
inc
jno
popf
arpl
ss
fldcw
loopne
cmp
lret
in
out
scas
inc
jge
push
ljmp
out
cmpsb
lret
push
nop
xchg
xor
sub
popa
xchg
and
jp
push
push
sub
mov
pop
ficomps
push
inc
pop
repnz
push
jae
shl
mov
fsubr
imul
and
fs
shll
loope
dec
imul
cmp
pop
jle
ds
mov
or
sbb
adc
lret
rcr
data16
jno
flds
inc
das
jle
loope
les
cwtl
stos
aas
pop
in
pop
mov
scas
mov
stc
mov
jecxz
roll
inc
rep
jecxz
mov
jp
lds
xchg
mov
mov
cmp
jecxz
pop
es
vpsraw
popf
insl
das
adc
cmp
pop
jmp
movsb
dec
and
hlt
test
push
or
in
test
mov
mov
gs
loope
pop
dec
adc
push
ret
out
push
cmpsl
ss
sahf
cmp
inc
int
inc
clc
jmp
inc
gs
icebp
imul
dec
sbb
out
mov
jo
jg
jo
in
xlat
addr16
sbb
fistpll
roll
push
lods
or
add
mov
push
jae
xchg
outsl
js
mov
sub
les
fsubrl
das
adc
lcall
dec
adc
add
and
scas
jae
add
jmp
mov
das
imul
icebp
mov
push
lods
scas
jmp
pop
sub
sbb
mov
and
addr16
negl
mov
sub
fldenv
pop
sub
or
xchg
ret
lahf
addr16
sub
subl
mov
popf
gs
sub
call
outsl
ret
mov
je
push
mov
inc
push
call
inc
push
pop
mov
loop
out
std
call
imul
out
lds
dec
test
pop
imul
dec
and
in
jmp
jmp
imul
mov
jne
push
xor
das
mov
addr16
cmc
bound
push
scas
in
ret
jbe
js
in
in
lea
cmp
pop
insl
sbb
inc
gs
xchg
loope
cmc
xchg
mov
jle
push
push
movsl
mov
cmp
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
jge
daa
cmp
jo
out
add
test
lret
aam
arpl
test
es
mov
movsl
push
in
imul
inc
mov
jne
dec
sbb
movsb
das
push
mov
adc
or
jno
cmp
jge
jp
mov
repnz
add
push
fsubl
enter
pop
sbb
mov
pop
ficoml
jg
mov
cmp
es
xlat
loop
add
std
leave
adc
scas
mov
fwait
aad
sbb
pop
jecxz
sub
adc
or
pop
mov
push
push
adc
data16
xchg
pop
push
inc
xchg
movsl
dec
xlat
dec
jl
add
or
out
dec
jge
mov
fsubrs
imul
fmulp
cmpsb
inc
movsb
cmpb
nop
sbb
out
jno
and
cmpsl
std
pop
insb
or
or
pop
stos
sti
pop
push
dec
into
pop
loopne
add
repnz
pop
fs
out
push
gs
lock
test
sub
pop
pop
xchg
nopl
jecxz
pop
fiadds
stc
inc
divps
int
cmp
mov
out
push
xchg
rcr
pop
sbb
pop
push
or
cmp
pop
mov
inc
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
daa
mov
mov
jo
jge
jo
je
iret
lods
xor
cmpsb
ljmp
cmp
lret
xchg
dec
ds
sbb
in
xchg
jnp
push
fldcw
xchg
ljmp
sti
pushw
mov
popf
jo
test
cld
dec
sti
fnsetpm(287
add
and
dec
dec
cmp
xchg
fists
mov
push
mov
sbb
mov
or
das
enter
dec
mov
pop
sbb
push
xor
test
sub
popf
out
mov
icebp
push
dec
in
add
push
out
inc
fucomip
popf
sbbl
mov
in
shlb
mov
cmp
mov
ja
mov
into
out
cmc
push
in
mov
fimull
adc
add
and
es
jnp
mov
xchg
scas
imul
cwtl
lock
cmc
mov
xor
jmp
fprem
pop
push
xlat
imul
imul
push
adc
cmp
dec
js
fmul
jmp
iret
pop
mov
stos
pop
push
negb
inc
cmc
pop
lret
and
sub
pushf
clc
xor
mov
and
insb
or
loope
into
mov
push
cmpsb
mov
or
ss
ffree
in
sub
cmpsl
push
mov
fisttpl
je
fwait
stc
jp
aas
and
test
mov
jbe
decb
xchg
inc
ja
stos
insb
popf
pop
out
pop
scas
rolb
lods
and
sub
dec
pop
outsw
pushf
in
adc
in
loop
mov
cli
shrb
xchg
adc
cmp
pop
cmp
movsb
sbb
jne
enter
ljmp
adc
jns
ljmp
pop
test
test
sbbl
roll
lds
rclb
lcall
jb
fnsave
jecxz
icebp
sub
or
xchg
insb
add
mov
mov
cmp
aas
dec
insb
lahf
sbb
adc
cmp
mov
cmp
or
cmp
aad
sbb
push
jns
cld
add
rorl
imul
mov
or
arpl
ret
push
or
lea
cmp
mov
mov
push
ss
int3
lea
ret
std
in
cs
jno
fisttpl
sbb
jge
xor
fs
cwtl
mov
fcompl
jge
sbb
mov
pushf
insl
mov
sti
cmc
int3
lret
jae
dec
mov
shl
hlt
or
xchg
mov
pop
iret
inc
jns
ret
popf
sahf
mov
and
mov
sub
movsl
sbb
lret
mov
or
pop
dec
push
dec
cmp
cld
fwait
add
mov
xlat
fldenv
sub
xor
lcall
inc
push
push
ja
shlb
inc
test
cld
outsl
das
int3
stc
inc
test
adc
fnstenv
add
jbe
fisubrl
sub
es
mov
adc
pop
ret
sbb
fisubs
push
pop
xchg
push
in
mov
dec
adc
mov
mov
dec
imul
fmuls
and
jl
sub
mov
push
std
sahf
mov
xchg
out
inc
lock
xchg
sub
push
into
test
pop
test
dec
or
roll
orl
mov
lock
imul
xchg
in
xor
popf
adc
mov
mov
sbb
jmp
mov
cli
xor
testb
dec
icebp
insb
xorb
jo
fwait
imul
jns
test
fucomp
cmp
test
fs
cmp
pop
pop
cmp
pop
enter
xor
cmp
adc
data16
std
adc
dec
stc
xlat
test
in
movsb
clc
lods
xlat
fs
xor
mov
mov
dec
enter
daa
or
push
mov
and
add
lcall
xor
cli
lock
dec
cmp
popa
fbstp
jg
imul
int3
pop
mov
rolb
pop
outsb
mov
fsts
call
lock
sbb
adc
icebp
adc
xor
xor
cmpb
stc
mov
mov
movsb
sarb
lret
mov
inc
rorb
imul
adc
hlt
sub
outsl
pushl
sub
lret
stos
lods
data16
xor
or
push
test
lock
cmp
xor
dec
pop
jmp
movsl
sub
add
mov
mov
ljmp
adc
mulb
xchg
pop
sti
scas
jns
add
into
cmp
jecxz
sub
insb
xor
xor
sub
in
fs
in
je
repz
xor
scas
xor
mov
iret
xlat
movsl
out
aad
icebp
cltd
aad
jg
mov
flds
push
xchg
dec
mov
pop
aas
gs
xchg
mov
or
int
in
imull
sbb
out
inc
or
ss
pushl
sbb
sti
in
rclb
ss
aas
jne
push
mov
out
arpl
push
fiaddl
jp
lods
adc
mov
and
ja
cmp
and
cmp
std
in
in
or
cmp
add
bound
test
sbb
adc
stos
lcall
jno
iret
mov
push
xor
add
insl
push
pop
into
sbb
ret
jno
jle
jg
and
pop
push
icebp
push
imulb
mov
inc
push
pop
push
daa
imul
cmpsl
xlat
lret
mov
sti
jo
testl
jns
jnp
add
stos
loope
neg
test
fistps
mov
push
inc
sub
insl
ds
es
xor
jae
aad
sub
push
loop
xor
repnz
loop
or
dec
stc
add
jmp
xor
in
pusha
cwtl
and
movsb
mov
aad
scas
push
mov
sub
rcll
lret
or
xchg
fmuls
xchg
aad
mov
pop
out
aad
cmp
loopne
push
lahf
insb
inc
jle
add
push
xchg
clc
push
xchg
push
sub
test
or
inc
bound
xchg
cmp
bound
cmp
mov
or
push
inc
in
std
rorb
adc
fsubs
and
push
pop
test
mov
sub
mov
xlat
pop
cmp
xchg
shr
lock
push
push
mov
jl
stos
sti
sbb
mov
and
out
mov
jnp
rcll
xor
outsb
or
or
sub
ret
and
cltd
mov
xor
or
loope
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
outsb
imul
jo
arpl
pop
sahf
cli
push
jbe
add
cmpsb
repnz
dec
hlt
sub
hlt
mov
aaa
inc
test
lods
shrb
pop
and
cmc
mov
repnz
into
xor
xor
test
or
jno
ficoms
rcrl
push
jle
in
fisubs
sub
cltd
imul
hlt
cmp
mov
hlt
dec
loope
sti
cmp
add
ret
outsb
popf
orb
push
jae
push
imul
pop
xor
test
mov
lret
push
xor
adc
ljmpw
mov
xchg
scas
mov
jae
pop
mov
pop
cmc
movnti
and
jecxz
pop
sarb
adc
xchg
daa
sbb
adc
jns
repnz
pop
adc
test
xor
pop
cmpsl
clc
fcmovnu
inc
ror
lods
cmpsb
jno
mov
fldt
cmp
and
xchg
cmpb
icebp
pusha
mov
gs
bound
or
jo
xor
jno
adc
and
in
ss
push
adc
ja
adc
cmpsl
jbe
orb
divb
push
rorb
sbb
push
cmpsb
insl
lahf
nop
repnz
ret
addr16
sti
mov
imul
test
dec
pop
insb
sub
fdivl
and
xor
xor
jge
or
sbb
shrb
pushf
push
out
movsb
inc
and
bnd
imul
sub
cli
push
add
hlt
pop
fnstcw
lret
addr16
sbb
jns
pop
or
call
sbb
mov
cmp
pop
es
push
and
cld
jp
cmpsb
mov
push
xchg
stc
bound
xor
repz
cwtl
inc
push
sbb
xor
insb
xor
aas
scas
dec
jg
xchg
insb
jne
mov
and
mov
mov
cwtl
mov
add
adcl
sub
dec
fiaddl
xchg
dec
scas
sar
and
add
mov
mov
mov
jecxz
mov
push
inc
fistl
xchg
jmp
vunpcklps
xchg
lea
loop
and
jb
jmp
iret
pop
out
sub
scas
mov
lret
data16
idivb
adc
mov
mov
mov
clc
rorl
pusha
push
and
push
adc
fbstp
jl
test
lahf
dec
inc
pop
jnp
jmp
sbb
daa
aad
fistps
divl
fldenv
dec
out
rorl
cmc
movsl
adc
loope
push
cli
fucomp
fwait
cmp
into
push
decl
dec
jmp
mov
inc
movsl
fnstenv
adc
lods
xchg
call
push
jae
stos
sbb
fs
pop
ret
je
sbb
push
enter
mov
cmc
jnp
int
add
stos
inc
xlat
inc
lds
out
pop
psraw
cmp
test
push
hlt
mov
adc
mov
std
pop
faddl
lahf
push
mov
loop
cmp
dec
adc
xchg
lea
pop
mov
jbe
test
add
or
movsb
sub
jmp
sub
dec
lds
pop
sti
and
jg
sbb
out
cmpsl
fldenv
mov
jecxz
dec
repz
push
js
xor
and
add
test
inc
add
or
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
mov
mov
mov
nop
xchg
cli
xchg
mov
pop
add
movsl
dec
push
inc
or
lods
stc
aas
jae
rclb
call
popa
add
jae
jno
sub
subl
push
outsb
pushf
inc
adc
test
xchg
jne
jbe
inc
push
ds
dec
push
or
sub
inc
ret
mov
mov
es
and
testl
stos
inc
rclb
outsb
push
mov
inc
in
cmp
in
xchg
into
bound
mov
xchg
fidivrs
mov
sub
pop
pop
or
out
shll
out
or
dec
dec
pop
adc
sahf
jne
mov
leave
les
push
mov
rolb
ss
sub
sub
cmpsl
push
in
adc
pmullw
ja
xchg
nop
mov
cmp
inc
or
mov
popa
outsl
or
fisubrs
pop
pop
aam
lds
fsubrl
fimuls
arpl
scas
xor
jae
dec
mov
mov
sub
xchg
movzbl
cmp
ret
xlat
dec
dec
call
xor
mov
std
inc
mov
sti
stos
lret
movsb
negl
push
into
sbb
out
mov
xchg
mov
adc
jmp
sahf
cmp
adc
or
rol
rorb
jno
dec
pop
andb
jns
aas
pop
hlt
cmp
dec
mov
sbbb
xor
js
push
loope
loopne
les
adc
dec
sbb
imul
call
jecxz
pushf
cwtl
mov
jl
jo
xorl
jge
push
fcoms
cmpsb
pop
and
or
pop
leave
lret
ret
ret
iret
sub
in
sub
lods
mov
cmc
dec
push
xlat
xchg
pop
and
add
add
outsl
sti
mov
jbe
cmpsb
pop
lcall
xor
cwtl
out
mov
push
xchg
add
clc
mov
adc
inc
add
lds
adc
xchg
push
mov
aaa
xchg
adc
leave
inc
fwait
int3
in
cmpsb
or
inc
mov
push
test
adc
lods
test
push
cmpsl
into
aas
js
btcl
and
insb
or
mov
dec
ljmp
xchg
mov
movsb
test
xchg
lds
int3
out
mov
aad
pushf
call
cli
mov
test
xor
jb
aam
nop
and
cmp
je
inc
xor
enter
rcrl
inc
fstps
cmp
cmp
sbb
popf
dec
pop
test
mov
popf
mov
lods
inc
insb
stc
mov
sbb
stc
cli
lods
into
inc
ds
data16
pop
mov
pop
aas
lods
lahf
inc
es
xchg
push
xchg
and
lds
fs
in
jle
cli
lods
out
or
cmp
das
mov
fcoms
jb
adc
xchg
aas
iret
lds
xchg
xor
jmp
roll
jne
stc
xlat
mov
pop
mov
das
test
pop
nop
dec
inc
and
test
xor
push
out
test
ret
lahf
enter
xchg
in
test
andl
sahf
out
loope
xorb
fs
mov
push
es
insb
jecxz
inc
mov
sbb
mov
add
jmp
outsl
mov
or
imul
dec
push
test
mov
jo
jge
jo
mov
stos
gs
test
adc
sbb
loope
jae
xor
push
lcall
jmp
xchg
leave
xchg
fiaddl
test
cs
lea
arpl
fldt
mov
out
push
jl
clc
cmpsb
repz
lods
and
jp
mov
lock
xchg
cmc
mov
adc
leave
jg
out
xchg
push
repz
cmp
push
inc
mov
pop
inc
test
insb
and
into
or
add
clc
pop
and
jnp
iret
inc
add
or
sbb
mov
popa
or
push
fchs
jne
jno
cvtps2pi
scas
adc
test
loopne
mov
shl
scas
daa
enter
pop
out
push
imulb
std
jg
cmp
dec
popa
nop
push
mov
xchg
add
loopne
jns
imul
hlt
movb
stos
mov
sbb
repnz
clc
bound
sbb
xchg
xor
enter
xchg
shrb
pop
in
lods
add
lds
imulb
adc
fcmovb
jnp
and
cld
fwait
loopne
aam
cmpl
mov
cmc
xor
das
repz
mov
mov
and
jg
xchg
notl
fidivs
dec
lods
in
cli
aad
xchg
jnp
orl
stc
sbb
jno
xchg
jecxz
jl
mov
pop
adc
flds
push
out
std
pop
insb
addl
push
icebp
dec
push
movsb
lea
outsl
jo
inc
jbe
lret
mov
mov
aad
lds
shll
imul
mov
mov
sbb
jns
xchg
flds
mov
push
out
pop
push
mov
push
stos
das
clc
nop
insl
mov
in
test
or
aaa
shrb
repnz
jns
pop
arpl
inc
or
inc
cs
inc
cmp
test
stos
pop
push
jnp
sub
imul
imul
xchg
inc
pop
rorb
sub
iret
xchg
sbbl
cmpsl
inc
and
ljmp
jp
jns
jg
jl
adc
scas
out
cmp
mov
popa
xchg
and
stc
dec
loopne
xchg
icebp
fstpt
pop
decb
scas
xchg
jbe
adc
iret
mov
add
cmc
add
sbb
pop
icebp
sbb
iret
data16
inc
inc
shr
sub
out
mov
mov
jle
ss
fwait
sub
and
mov
dec
push
arpl
ficompl
mov
xchg
sarl
dec
mov
dec
stc
cwtl
iret
jmp
add
mull
jns
cld
lret
xor
xchg
xchg
sbb
jecxz
mov
imul
shl
enter
mov
push
test
cmc
cmpsl
fidivrl
scas
mov
dec
lods
arpl
mov
push
ret
sub
fnsave
pop
in
das
pop
stc
dec
xor
popf
das
rcrl
add
xchg
mov
les
sub
lcall
push
jo
dec
repnz
and
js
fwait
mov
pop
mov
sbb
jle
aaa
mov
cmp
pop
or
int3
sub
out
fwait
cmp
enter
adc
call
fdivs
test
dec
or
jnp
icebp
loopne
and
mov
add
jae
xchg
add
and
lds
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
cmp
jo
jge
jo
orb
jbe
cs
imulb
jg
in
out
dec
dec
inc
mov
xchg
ss
loope
je
int
xor
fiadds
jecxz
or
les
cmpsl
ja
decl
dec
push
jo
pcmpgtd
mov
push
mov
into
sbbl
repnz
data16
push
cmc
push
mov
adc
adc
in
enter
dec
cwtl
repnz
xchg
xchg
test
imul
cmp
leave
cli
dec
gs
jl
lret
jno
sbb
sub
clc
lret
fistps
loop
cmc
test
adc
arpl
or
loope
adc
push
adc
adcl
std
daa
enter
cli
negb
subl
test
jl
add
pusha
rorb
mov
mov
sub
cmp
jg
int3
test
cli
stos
imul
jmp
cmp
cmp
addl
sub
xchg
outsb
test
mov
pop
scas
and
nop
and
mov
xorb
xchg
aad
mov
cli
stc
mov
mov
adc
pop
popa
xchg
mull
pop
movsb
es
or
fs
xchg
test
and
pop
cwtl
ljmp
movsb
outsb
inc
mov
inc
mul
ss
adc
iret
pop
imul
push
adc
push
es
jl
outsb
cmpsb
jl
fnsave
fldcw
pop
les
loope
ss
push
adc
jp
push
ss
aam
inc
int
fidivl
pop
lds
imul
aam
xor
movsb
push
ret
jo
rclb
add
mov
lock
jnp
cmp
add
movsb
jle
pop
std
jl
aas
lret
dec
loopne
popa
pop
andb
test
xor
xor
shl
mov
adcb
jmp
sarl
inc
xchg
lea
add
or
or
imull
lcall
jge
test
arpl
repnz
inc
jo
or
in
xchg
jmp
out
jae
xchg
adc
add
cs
xchg
xlat
mov
mov
jne
nop
push
lret
in
xor
mov
scas
xchg
xchg
iret
sbb
pop
jl
xor
aas
imul
ss
sub
xchg
cmp
push
jno
push
adc
and
jbe
ds
push
mov
push
add
fimull
adc
push
faddl
dec
xchg
stos
and
int3
leave
adc
ret
or
xchg
pop
mov
sbb
sarb
pop
mov
push
jp
sahf
pusha
subb
push
faddl
xor
in
lock
enter
add
jp
inc
dec
test
loope
shr
es
popf
bt
xchg
push
adc
adcb
or
jo
shrb
out
stos
out
lret
mov
mov
addl
mov
ror
inc
xor
sub
xor
mov
int3
mov
shll
mov
mov
enter
popa
cltd
or
push
arpl
nop
sub
dec
add
sub
or
mov
in
sbb
mov
sbb
sub
js
push
fwait
pop
inc
mov
push
mov
mov
lret
mov
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
into
pop
fmull
leave
lock
xlat
fbld
ret
aas
push
pop
sbb
inc
jmp
shrb
stc
dec
out
cwtl
jmp
inc
repz
mov
test
mov
xchg
xchg
cs
test
je
jnp
and
push
cli
hlt
repz
jno
roll
daa
icebp
scas
call
add
fldl
sbb
stos
jmp
dec
pop
sar
jb
fdivrs
push
adc
jnp
stos
dec
cmc
pop
loop
test
pusha
cmc
add
out
cmpb
lds
idivl
sub
xlat
test
sbb
jne
pop
inc
sbb
mov
push
adc
cli
icebp
mov
cmc
pop
pop
mov
cmp
leave
pop
fcompl
and
mov
sahf
pop
addr16
stos
imul
cmp
aam
push
mov
jg
push
paddd
dec
push
add
mov
dec
mov
sarb
mov
push
mov
in
inc
test
rcrb
or
sbb
push
add
sub
daa
ret
das
xor
and
or
dec
push
mov
out
loop
lock
jnp
adc
leave
xchg
inc
xlat
and
in
xchg
imul
jecxz
pop
gs
addr16
out
loope
jbe
popf
cmp
push
mov
inc
mov
xor
pop
sbb
pop
js
pop
sub
sti
pop
mov
aad
test
mov
xlat
inc
ficoms
ds
popa
scas
jbe
lcall
add
leave
incb
sbb
test
test
push
push
mov
and
ret
or
bound
push
xor
stos
jge
sarb
incb
insl
ret
into
icebp
add
or
movsl
aad
cmp
mov
add
loopne
lea
mov
stc
das
insb
fwait
lods
hlt
cmc
mov
cmp
es
insb
arpl
jle
repz
call
xlat
mov
aaa
cs
lock
xor
mov
shll
clc
stos
test
loopne
mov
aad
subl
clc
fsubp
in
xor
jg
out
mov
lds
mov
aam
cmp
mov
repnz
mov
jne
xor
sbb
es
fs
jl
jg
mov
negb
and
and
or
push
mov
lea
add
push
movsl
mov
std
push
push
loope
add
out
jbe
jge
or
sbb
negl
inc
pop
mov
inc
xchg
gs
jnp
add
inc
mov
sub
arpl
shlb
add
test
jno
iret
mov
test
daa
jno
jl
cmpsb
push
ds
cmp
mov
xchg
cli
sub
enter
mov
add
add
adc
add
out
adc
adc
insl
stos
dec
push
shll
fsub
fadds
cld
lock
orb
cmpsb
icebp
add
jle
cmp
lea
testl
rorb
dec
aas
xor
dec
or
or
cs
xor
jge
xchg
jp
xchg
cmp
fidivl
pushf
cmp
add
sbb
push
fsubs
fs
push
inc
jbe
pop
add
dec
sub
sub
push
add
push
in
inc
aas
fsubs
lods
fwait
add
and
sahf
popf
sbbb
ljmp
mov
jno
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
xchg
or
xor
dec
jo
pop
jge
jo
fiadds
out
lock
lret
ljmp
popa
jecxz
sub
pop
addr16
or
jno
xor
cmpsb
movsb
ret
lods
push
inc
movsb
inc
imul
test
dec
arpl
pop
stos
loop
jmp
add
movsl
orl
inc
lahf
sarl
adc
lcall
push
jo
sub
push
out
cli
adc
xor
nop
cli
mov
push
adcb
push
in
push
adc
push
aaa
xor
stc
les
add
mov
xchg
lret
cs
in
std
lret
add
jno
lahf
shll
icebp
faddl
movl
fwait
sub
pop
fwait
jns
jae
jle
scas
push
sub
and
outsb
adc
pop
divl
int3
ret
or
insb
test
cs
inc
jge
jns
dec
fcmovu
inc
popa
pop
push
sbb
push
ja
xor
nop
mov
inc
pop
out
insl
mov
fnstenv
mov
loopne
cwtl
sub
cmp
pop
cmp
into
mov
xor
test
jg
sub
icebp
jns
xchg
xlat
or
jle
pushf
xor
cmc
int
adc
in
push
mov
mov
fsubrs
inc
icebp
cmp
cmpsl
out
cltd
mov
add
movsl
inc
ret
and
arpl
mov
or
mov
push
add
imul
push
imul
out
jle
pop
adc
and
mov
inc
mov
add
inc
and
push
add
aad
movsl
cltd
mov
push
mov
jno
pop
sub
push
pop
arpl
shrl
cmp
stos
outsl
push
inc
mov
adc
fs
cltd
imul
xor
push
call
fcompl
orl
ja
mov
cmpsl
push
push
rcll
data16
xor
jne
dec
pop
mov
mov
xor
cmp
cli
insb
repz
add
insl
dec
cmpb
xchg
or
popa
repz
inc
pushf
jmp
push
cltd
aad
stos
mov
roll
int3
xor
mov
sti
fsubrl
imul
jg
mov
push
mov
mov
out
pusha
into
andl
cmp
shl
lret
lahf
jne
cmp
ds
jmp
sahf
dec
xor
das
hlt
movsb
xor
insb
mov
pop
add
mov
lds
mov
addr16
loopne
and
pop
add
add
add
xchg
dec
sub
pop
aas
loop
dec
je
lods
xor
cmpsb
shr
push
lea
cmpsb
shl
test
mov
adc
call
cs
cli
push
ljmp
pop
fistpll
adc
or
pushf
xchg
data16
jb
fimull
lds
sbb
fisttpll
lock
adcb
pop
mov
je
dec
jne
push
and
add
jge
fnstsw
out
pop
stos
les
repnz
aad
loopne
ffree
mov
ljmp
or
jae
jge
mov
scas
in
mov
push
sub
sti
cmc
sub
popa
sub
mov
dec
sbb
into
pusha
iret
inc
inc
mov
in
cmpl
adc
mov
js
lea
loopne
sbb
hlt
mov
lods
mov
ja
dec
xchg
cmp
in
add
pop
jno
xor
add
clc
ret
and
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
mov
push
jo
pop
jge
jo
cmp
mov
ds
fsubrs
int
and
sarl
push
dec
outsb
out
scas
imul
push
mov
adc
fnstsw
or
pop
cmc
adc
mov
add
outsb
mov
lock
push
cltd
adc
lcall
adc
or
inc
in
jge
xor
pop
fwait
add
and
pop
orb
test
push
and
inc
dec
push
rorl
lods
mov
jmp
mov
ljmp
fistl
xchg
add
movsl
vunpckhps
xlat
or
jp
ffreep
stos
popf
or
jo
push
mov
pop
and
xchg
xchg
lods
and
push
mov
es
pop
je
or
imul
xchg
into
popf
inc
pop
fnstsw
faddl
sbb
clc
clc
sub
adc
cmp
push
add
loopne
adc
push
or
mov
sbb
jp
outsl
xlat
jge
inc
jg
shl
stos
rcrl
pop
aam
int3
jecxz
mov
lods
mov
popa
push
xchg
shrb
jbe
xchg
xor
sub
mov
lods
fdivrp
xor
xchg
jg
icebp
jecxz
dec
mov
rcrb
data16
mov
dec
push
scas
mov
mov
push
push
fisubl
aam
loope
adc
lock
clc
add
pop
sahf
xor
xchg
pop
cwtl
shrb
mov
std
xchg
fsubrp
lods
out
xchg
and
pop
movsb
cmp
push
xor
mov
je
into
sub
fistps
inc
lret
fucom
dec
mov
lahf
cmp
pop
fists
lods
popa
mov
mov
je
xchg
mov
scas
xor
add
ret
test
fsqrt
inc
adc
xor
pop
aam
adcb
fs
mov
nop
mov
idivb
jge
std
push
sub
mov
push
mov
push
in
inc
inc
arpl
jle
jae
pop
jp
out
sub
insl
mov
sarl
int3
cmp
sbb
fadds
jno
daa
lahf
add
cmpsl
out
hlt
data16
addr16
cmp
and
inc
sub
pop
add
in
dec
push
dec
ljmp
jmp
adcb
xchg
and
cmpsl
gs
enter
push
push
pop
addb
xchg
mov
lret
lahf
and
push
test
xchg
pop
pushf
int3
jle
cmpl
jle
adc
mov
and
lahf
dec
xchg
scas
pop
mulb
xchg
jle
inc
dec
cld
push
stos
push
and
inc
push
jo
jl
xlat
mov
xor
and
scas
pop
push
inc
stos
out
sub
scas
or
jle
into
andl
scas
pop
popa
jle
and
rcll
adc
pop
pop
scas
sarb
aaa
sub
jnp
and
mov
int3
in
and
aam
ss
xor
mov
mov
orl
pop
jl
add
sub
popa
dec
sub
and
xchg
add
xor
rclb
ljmp
stos
push
fldt
jmp
and
movhps
sbb
mov
xchg
mov
cmp
xchg
lods
pop
je
rolb
mov
sbb
and
inc
cli
xchg
out
and
ss
arpl
data16
inc
ja
ljmp
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
rcrl
jo
pop
jge
jo
add
xor
adc
mov
popa
cmpsb
push
cld
xorb
jp
inc
inc
std
cmpsl
push
dec
popf
xchg
sti
cmp
clc
bound
in
push
sahf
add
fxch
loope
fisubs
cli
ds
fwait
loop
xlat
dec
scas
aas
mov
aam
in
mov
dec
out
and
mov
stc
jl
lock
add
lock
dec
adc
sub
mov
divl
pop
xor
lret
pop
lds
fwait
daa
xchg
ds
pop
push
ds
pop
cmp
aam
movups
ret
pushf
insw
fisubrs
mov
jnp
ror
add
sahf
pushf
jecxz
test
sbb
xor
mov
das
out
aaa
inc
xchg
jl
jl
mov
xor
daa
adc
mov
xchg
sarl
jge
xchg
lret
stos
xchg
fdivs
push
mov
out
jb
cmp
add
in
loopne
cmpsl
xor
out
nop
imul
and
leave
cs
sub
jo
outsl
loop
daa
movsl
fcomip
xorl
mov
stos
push
or
xor
out
inc
sbbb
imul
jb
jg
xchg
sbb
lcall
sti
and
ljmp
mov
movsl
test
popf
jbe
out
dec
aas
andl
jl
mov
cld
add
mov
scas
insl
jns
push
test
rorb
jl
je
and
dec
inc
test
adc
in
cmp
or
scas
dec
js
push
fucomip
pop
popa
adc
sbb
sbb
or
rcrb
imul
mov
test
and
push
inc
mov
cmp
xchg
fsubrl
insb
arpl
call
cmc
aas
xor
ss
dec
pop
lock
pop
out
jae
cmc
mov
lock
mov
lods
jmp
sub
or
sbb
jbe
pop
std
test
xor
add
in
jecxz
test
iret
aaa
faddl
mov
and
out
stc
push
sub
mov
nop
or
xchg
add
mov
shl
jnp
sbb
adc
push
mov
pop
stc
movsb
inc
push
mov
lret
leave
push
fsts
insb
add
repz
mov
mov
loope
ret
std
jmp
dec
jmp
inc
push
xchg
mov
das
add
ja
mov
popf
pop
push
sub
leave
pop
jmp
jne
outsl
xor
imul
test
pop
pop
mov
inc
fimuls
push
cmp
sub
push
sbb
mov
stos
hlt
mov
loope
mov
adc
and
dec
mov
stos
sbb
sbb
addr16
xchg
nop
xchg
cmp
mov
dec
loopne
fsubrp
icebp
es
dec
lret
and
lea
enter
iret
popa
lret
dec
sub
mov
sub
dec
scas
imulb
cltd
dec
out
dec
ljmp
inc
push
repnz
jbe
jmp
xor
jne
mov
into
dec
sub
push
mov
sbb
xor
pop
jne
jnp
int3
or
test
sti
mov
incl
mov
shlb
iret
push
sarb
pop
loope
or
sub
fmul
jae
pop
add
cltd
pusha
inc
or
inc
je
mov
mov
xor
xchg
dec
jne
sub
mov
inc
or
mov
add
or
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
jp
xlat
jb
pop
jo
mov
popf
in
inc
ja
imul
stos
mov
idivl
sarb
std
popa
and
xchg
pop
aad
cwtl
hlt
mov
lods
mov
insb
popa
sti
fcompl
adc
mov
adc
inc
divl
xchg
dec
lock
fcmovnbe
adc
jne
xchg
cmp
in
sbb
add
arpl
mov
pop
imul
mov
xor
dec
int
inc
nop
sbb
mov
inc
imul
pop
sub
popf
pop
inc
fadds
dec
inc
push
lcall
push
xor
sbb
and
pop
xor
xor
arpl
mov
sub
insl
mov
add
es
cmc
xchg
jmp
xor
jl
and
mov
repnz
sub
add
xorb
addl
dec
dec
or
add
inc
jge
ds
sbb
sub
cwtl
mov
mov
cmc
or
repz
pop
outsl
loopne
imul
imul
or
cltd
mov
mov
xor
sub
push
sbb
fs
jle
inc
fldenv
out
addr16
into
cmp
movsb
pop
stos
xor
movsl
push
push
cmpsl
cwtl
lahf
rcr
std
data16
inc
sub
push
mov
fstpt
dec
and
or
outsb
imul
ljmp
push
int
sub
out
mov
or
inc
jns
adc
popa
mov
sub
cmpsb
jmp
scas
push
jge
jbe
out
loopne
ljmp
jle
dec
adc
adc
mov
and
xor
pop
cmc
das
jnp
add
loope
or
pop
mov
test
jp
xchg
dec
jge
cmpsl
dec
aaa
lahf
stos
and
imulb
xchg
sbb
lcall
jmp
pop
ljmp
out
push
repnz
pop
xchg
mov
or
cmp
test
mov
xchg
shrb
loope
jmp
call
rorb
maxps
xor
rcl
and
fdivrl
inc
je
cmp
cli
cmpsb
cmp
and
xor
loope
inc
or
or
pop
xor
stos
stos
mov
arpl
push
or
addb
mov
sbb
and
mov
inc
push
lcall
add
pushf
fs
sbb
lcall
push
jnp
xchg
outsb
scas
mov
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
lcall
jo
jle
jo
lret
ljmp
bound
dec
push
mov
lods
xor
mov
shlb
dec
aam
inc
cmpb
sahf
outsb
loop
nop
push
push
pop
lea
addr16
push
hlt
ljmp
jno
lods
aam
push
out
xchg
sbb
test
sbbl
mov
cmp
fdivrp
popf
mov
rclb
mov
repnz
and
pusha
push
xchg
pop
mov
sti
nop
add
sub
push
decb
adc
jne
addl
lret
negl
xchg
mov
cmpsl
sti
push
cmpsl
loop
or
mov
cmc
rclb
cmp
mov
or
lods
aam
and
or
mov
lea
dec
mov
jle
cld
test
xchg
sub
cmp
cmpl
or
ret
pop
ret
adc
hlt
int
cld
xchg
int3
popa
bound
mov
rcrl
leave
cmc
fidivs
push
jg
mov
arpl
jle
insb
insl
rsm
arpl
filds
push
cmp
and
lock
leave
scas
je
jmp
into
sub
dec
push
test
or
mov
rorl
push
jl
aad
push
fs
xchg
das
jle
jns
test
in
sub
add
jmp
sub
lods
jp
ret
fstps
popf
or
mov
push
pop
mov
mov
sub
scas
adcb
cmp
jmp
xor
das
rorl
call
pop
and
cmp
movsl
aam
jecxz
and
adc
sahf
push
add
enter
xor
daa
push
rorb
jmp
jne
andb
jne
mov
ja
stc
xor
movsl
xchg
notb
jb
fucomi
sahf
xchg
mov
aaa
in
jnp
add
fs
push
adc
sbb
or
mov
pop
jp
and
jecxz
jg
sbb
mov
lahf
sub
mov
das
mov
sbb
out
pop
dec
clc
jmp
mov
ds
sub
xchg
into
mov
inc
mov
lret
test
divps
test
pop
inc
cmp
cmp
dec
xchg
or
sbb
inc
inc
aas
mov
jae
adc
inc
testb
shlb
mov
jbe
rclb
nop
add
arpl
call
in
and
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
pop
jo
mov
xchg
pop
rcr
mov
inc
or
add
repz
mov
lods
adc
xor
stc
and
xor
cmp
popa
mov
ss
js
jno
cmc
sahf
xchg
adc
fdivrl
sub
push
dec
push
pop
cld
loopne
adc
and
loop
adc
je
hlt
sub
ret
adc
insl
adc
addr16
and
dec
loope
fcoms
push
cmp
fxch
and
xor
int3
adc
lock
mov
jb
mov
fmul
or
insl
pop
push
std
dec
cmpsl
cmp
push
xlat
mov
bound
pop
dec
test
iret
dec
or
pop
sub
jmp
dec
dec
fiaddl
and
cli
inc
pop
add
pop
test
jo
data16
clc
jb
jno
daa
push
push
pushf
push
push
jl
jecxz
cld
fmul
jbe
push
pushf
out
cmpsb
jb
decl
push
mov
leave
daa
pop
arpl
mov
mov
push
leave
adc
fsubrl
into
test
repnz
jo
into
in
push
cli
inc
aas
or
xchg
enter
inc
shll
mov
xchg
cmp
sahf
cmpsb
ljmp
shll
std
mov
jae
fisttps
add
ljmp
sub
adc
sub
nop
dec
xchg
inc
sbb
inc
pop
fs
je
mov
subl
es
mov
cmp
popf
pusha
mov
lods
aam
sub
mov
dec
imul
or
inc
pop
adc
xchg
aad
sarb
cmp
fisubs
mov
push
dec
sahf
mov
sarb
adc
daa
scas
ss
mov
inc
mov
jb
fdiv
lock
mov
enter
adc
or
push
movsb
insb
lods
and
pop
mov
mov
and
mov
or
stos
dec
cmp
mov
push
jg
push
and
pop
je
sub
xlat
hlt
lret
rcrb
aam
xchg
and
mov
xor
and
mov
outsb
scas
xchg
jns
cmp
lock
push
and
mov
mov
add
popa
das
outsb
add
fwait
mov
ss
aad
cmpsl
xlat
push
ja
rcrl
cmp
inc
pop
xchg
test
push
pop
jge
or
add
rcl
xor
pop
add
subl
insw
adc
dec
pop
call
ss
loope
push
pop
jle
test
add
add
mov
or
testb
std
inc
add
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
sub
data16
mov
jle
mov
das
cmpsb
fistpll
cli
lods
sub
movsb
add
fstpl
pusha
dec
xchg
popf
cmp
mov
add
xchg
popa
sarb
mov
adc
loope
hlt
fstps
pop
mov
pop
mov
fisttps
dec
cld
lds
adc
push
int3
cmp
ret
fnstcw
in
add
xor
fadds
js
inc
sbb
push
cbtw
loop
inc
sbb
mov
push
lods
in
add
leave
jge
test
mov
test
loop
cmpsb
xchg
adc
lds
pop
rcll
adc
inc
or
and
lcall
roll
mov
mov
and
or
xor
nop
jge
iret
pop
inc
pusha
inc
sub
add
mov
cmc
into
fcmovnu
xchg
pusha
sub
adc
mov
push
push
sub
jne
push
leave
out
xlat
cmp
or
jnp
mov
rorl
imul
xlat
nop
idivl
pop
push
push
or
mov
pop
outsb
in
add
imul
xor
lods
outsb
jle
ljmp
cs
stc
push
lahf
mov
jmp
jmp
jle
fbstp
sbb
push
pop
cmc
sbb
xchg
outsl
stos
pop
and
fildll
inc
out
xor
pushf
jbe
ret
in
fsubr
xchg
xor
imul
lret
ret
push
push
fwait
jg
int
call
outsb
rolb
mov
imul
add
or
xchg
pop
lods
out
cli
loope
int
fst
cmpsb
inc
test
xor
xchg
sbb
jle
sbb
pop
cld
jno
jg
outsl
dec
in
imul
dec
cmpsl
sar
test
xor
cmc
mov
push
scas
mul
adc
jne
hlt
les
xor
out
inc
notl
push
jo
in
mov
dec
loop
pop
push
xchg
je,pn
aaa
mov
jne
inc
icebp
inc
mov
sub
in
dec
cltd
and
pop
dec
xchg
inc
or
inc
mov
test
mov
mov
aad
inc
xlat
adc
xor
push
arpl
mov
sub
sbb
mov
or
inc
movsb
mov
out
push
push
cmp
push
push
jge
outsb
mov
xor
adc
fwait
push
sbb
test
cwtl
stc
cmp
fmul
pop
stos
es
repnz
lea
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
popa
pop
fs
mov
test
mov
push
xchg
repnz
dec
scas
pop
inc
imul
sub
push
iret
insl
cltd
sub
mov
sub
jmp
sahf
lods
mov
dec
packsswb
in
arpl
test
sub
iret
fiadds
outsb
ja
add
inc
jmp
mov
fistpl
sub
push
or
dec
dec
jno
pop
pop
dec
mov
jge
jae
out
mov
pushf
cs
and
push
and
jecxz
mov
imul
pop
lock
and
sub
push
ret
es
jp
sub
frstor
jne
jmp
int3
pop
add
pop
xchg
fisttps
push
insb
inc
and
jl
hlt
mov
outsl
xchg
scas
xlat
mov
shlb
call
popa
and
mov
mov
sub
mov
inc
out
mov
inc
lcall
arpl
cmp
sub
and
pop
jne
mov
adc
rorb
enter
loope
outsl
push
aad
in
fbstp
pop
adc
stos
test
mov
push
jb
sub
fisttps
inc
push
jne
jno
add
push
call
outsl
mov
lret
dec
int3
pushf
mov
jo
sub
mov
xchg
mov
leave
arpl
lcall
mov
aas
xchg
push
popa
cmp
cmp
loope
lret
push
xor
inc
xor
mov
stos
push
notb
int
out
cmp
enter
cmp
mov
enter
fdivp
xchg
inc
inc
inc
xor
icebp
aad
fldenv
lret
inc
mov
push
push
sbb
ljmp
icebp
xchg
icebp
xchg
arpl
mov
fwait
loopne
shll
pop
adc
xchg
pop
in
in
push
imul
cmc
xor
mov
xchg
and
inc
add
pusha
gs
stos
dec
push
leave
insl
adc
mov
jae
jge
mov
cmp
call
push
or
dec
sub
dec
sub
mov
sbb
xchg
sub
add
mov
leave
fidivl
shrl
cmc
jnp
mov
add
or
sbb
xlat
pop
nop
shlb
insb
popf
mov
insl
lods
jo
sub
aam
push
jle
sub
test
cmp
ja
imulb
cwtl
xchg
gs
sbb
sbbb
stos
dec
mov
es
fstpl
dec
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
je
xor
jo
jle
jo
jge
stos
movsl
xor
sub
xchg
mov
ljmp
fidivs
xor
add
dec
stos
or
pop
xor
push
sub
pop
mov
sbb
or
xchg
mov
sti
aaa
push
dec
xor
mov
push
xor
insb
lds
mov
sub
mov
jo
pushf
div
jl
mov
les
mov
xor
cmpsb
xchg
out
insl
fimuls
push
dec
pusha
pushf
repz
fcmovnb
in
std
mov
mov
ss
jle
dec
fldcw
adcb
adc
xor
mov
js
lret
out
aam
jno
out
mov
scas
leave
dec
out
aam
call
sbbb
dec
dec
sbb
vminpd
jg
xchg
xchg
mov
incl
test
mov
das
lahf
xchg
add
mov
adc
aam
test
jno
cltd
pop
sub
and
push
mov
xchg
push
je
push
sbb
loopne
sbb
sbb
mov
in
hlt
test
lret
shll
pop
lods
dec
imul
mov
aad
fldenv
jge
lea
mov
sbb
mov
pop
xchg
pop
call
inc
addr16
jle
out
mov
aas
adc
test
hlt
mov
mov
or
fiaddl
and
cwtl
mov
mov
cmp
push
test
mov
dec
lcall
shrl
adc
out
jb
loop
or
imul
sbb
lret
loop
loop
scas
xchg
cltd
dec
jmp
jne
push
jge
inc
sub
pop
fnstenv
aam
pop
push
xchg
push
loopne
ljmp
jp
mov
test
fs
mov
lahf
icebp
movb
inc
insl
fstpl
mov
sub
dec
lcall
std
adc
cmp
mov
addr16
lock
push
cltd
popa
push
lds
jne
sbb
adc
dec
jmp
fisubrs
fsubrs
mov
fisttps
in
add
and
pop
mov
and
xor
test
test
dec
sub
insb
sbb
ds
int
and
cmpsl
addb
sbb
mov
cltd
int3
test
jns
cwtl
push
adc
push
ljmp
bound
cwtl
lods
xor
rolb
dec
out
jb
dec
xor
lret
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
outsl
in
outsb
jo
mov
sbb
jns
or
leave
or
addb
or
xchg
and
cmpsl
add
stos
cmpsb
xchg
aas
out
lret
pop
mov
rcrl
daa
scas
ja
mov
mov
pushf
lret
or
loope
lcall
add
in
in
fcompl
int3
loop
cmc
add
add
dec
out
or
and
gs
shll
fwait
std
sub
mov
cmpsl
mov
push
scas
sub
jo
es
ljmp
xchg
push
sahf
jp
xchg
insb
pop
sbb
dec
rcl
or
push
shrl
ja
sub
ret
mov
mov
jne
push
push
jae
rclb
pusha
pop
popa
jl
scas
test
jne
bound
sbb
xchg
dec
xchg
and
mov
aam
arpl
inc
outsb
ret
mov
jmp
push
push
ficomps
mov
dec
mov
stc
cmp
and
into
das
jns
xchg
push
mul
fsts
sahf
adc
loope
mov
dec
scas
jae
sub
test
and
mov
in
push
testb
int3
sub
push
shrb
adc
xor
adc
mov
cmp
es
in
add
xor
scas
jbe
fsts
push
lods
mov
jbe
jae
test
scas
or
xchg
xorb
push
add
stos
jne
test
jb
cld
push
xor
leave
push
mov
mov
imul
fsubl
cmpsb
push
repz
mov
clc
inc
and
adc
xor
repz
fucomi
push
rolb
xor
scas
jl
sarb
or
ja
push
dec
gs
inc
aaa
rolb
mov
jne
fiadds
iret
pushf
inc
fwait
mov
jo
aas
test
and
pushf
stc
inc
testl
ss
inc
xchg
jne
jp
and
jne
xchg
in
insb
push
dec
loopne
adc
jecxz
cmp
adc
iret
add
popf
xchg
aas
add
shr
sbb
fstl
outsl
insl
aam
mov
jnp
test
jecxz
pop
cmp
dec
fldl
mov
out
outsb
out
addr16
imul
pop
jecxz
rorb
lret
mov
push
movsb
and
dec
je
mov
fstps
scas
ds
js
pushf
popf
sbb
pop
loop
lret
cmp
iret
xor
fs
test
pop
pop
js
adc
outsl
pop
testl
in
sub
test
add
pushl
jmp
and
lods
shrb
in
das
mov
ss
jle
jo
aas
mov
fcmovnu
xor
out
jne
stc
or
push
aaa
mov
push
adc
mov
cmp
adc
cli
dec
sub
mov
xchg
ret
mov
pusha
xchg
mov
outsb
push
aam
jnp
lea
cwtl
jnp
test
jae
fistpl
dec
xchg
aad
xchg
cmp
aaa
shlb
sbb
adc
in
bound
fldcw
fdiv
ret
jmp
pop
and
inc
cmp
cmp
pusha
jae
stos
pop
cs
pusha
mov
adc
sar
mov
fists
sarb
inc
fs
pop
loop
push
adc
xor
adc
in
shlb
mov
sti
cmp
mov
cmc
xchg
mov
lods
inc
repz
add
push
dec
pop
testl
inc
pushf
or
test
xor
pop
push
mov
add
xor
popa
jbe
fdivrl
pop
mov
popa
clc
jae
aas
mov
fisubl
push
push
cmc
push
xchg
subb
mov
rol
mov
cmp
inc
in
jns
jmp
call
ret
pop
mov
in
out
xor
adc
es
rdmsr
rcrl
rcrb
mov
fidivrs
dec
or
outsl
add
or
scas
and
dec
dec
aam
addl
iret
cmp
movsl
push
push
xor
cmp
and
adc
fxch
repz
mov
or
pop
lahf
outsb
jmp
add
adc
jno
mov
clc
pop
subl
gs
fdivs
dec
jmp
jle
fidivl
imulb
outsl
leave
test
clc
push
sti
mov
xchg
push
pop
or
lcall
or
outsl
icebp
shll
sarl
push
clc
sti
mov
pop
or
inc
sub
mov
sbbb
into
xor
sti
gs
ror
rorl
pusha
pop
test
rorl
stos
or
mov
insl
rol
xchg
and
push
and
sbb
mov
arpl
xchg
lret
mov
lahf
adc
xchg
mov
data16
mov
jp
loope
and
insl
mov
cmp
call
jbe
jbe
or
ret
cli
int
dec
cmp
xor
pop
orl
cmp
mov
shll
xlat
inc
or
ja
jmp
pop
insl
and
xor
insl
jp
or
data16
lret
jle
jo
mov
jle
cmp
adc
cmp
mov
jge
xor
mov
or
aas
mov
xor
aam
aaa
inc
mov
push
shlb
dec
xchg
dec
bts
jl
repnz
inc
pop
dec
push
icebp
and
push
sbb
mov
mov
les
adc
xor
pop
jmp
cltd
jg
mov
mov
adc
call
shll
jns
cltd
lock
enter
leave
sarl
mov
jge
adc
rorl
icebp
mov
sbb
xor
inc
sbb
insb
out
xchg
lods
cmp
push
mov
out
iret
jp
dec
adc
loopne
data16
cmp
inc
lock
jo
and
stos
cwtl
lods
scas
push
sub
jp
aaa
inc
xor
pop
jg
xlat
data16
fidivl
bound
inc
int3
scas
mov
test
mov
push
imul
xor
or
mov
adc
sbbl
hlt
and
rol
cmpsb
xor
mov
stc
add
aas
pop
mov
int
pop
enter
jecxz
bound
sbb
push
sbb
test
lods
out
adc
mov
mov
int
movsb
pop
popl
mov
cmp
lahf
cmp
popa
les
mov
jb
xor
mov
adc
int3
dec
daa
jns
cmpsb
sti
dec
sbb
cmp
shr
dec
sti
pusha
pop
into
mov
mov
mov
fistps
dec
rcl
mov
ljmp
mov
push
insl
cld
jle
je
xchg
mov
sti
xchg
mov
push
dec
mov
mov
dec
xor
mov
lds
push
or
lock
adc
pop
call
push
mov
lret
dec
sbb
cli
push
dec
movsb
push
or
adc
aaa
sarl
loope
mov
loope
mov
loope
cwtl
in
aam
fstpl
cmc
mov
jecxz
or
aas
sbb
adcl
fidivs
idivl
stc
fwait
xchg
xchg
cmc
cs
pop
jl
adc
mov
sbb
cmpsl
mov
rcl
xchg
iret
je
mov
shrb
pop
lods
adc
pop
or
test
pop
cmp
sbb
idiv
dec
push
pop
push
jmp
adc
or
rorb
addr16
loop
outsb
inc
xchg
cld
loopne
dec
fdiv
dec
repz
in
cmp
and
adc
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
sub
jbe
jo
jle
jo
mov
mov
push
xchg
xchg
mov
dec
cmc
js
sub
sub
cmp
xchg
cmp
scas
or
pop
into
cltd
repz
in
push
and
fmuls
dec
stc
ret
mov
sbb
hlt
clc
shrb
inc
adc
jae
mov
mov
xchg
bound
adc
data16
push
je
inc
pop
dec
mov
inc
pop
mov
sbb
add
hlt
dec
test
jno
cmp
sub
sbb
scas
loop
xchg
fs
pop
mov
cmp
or
or
daa
adc
inc
outsb
push
std
mov
aas
cld
add
pushf
cmp
test
out
arpl
adc
mov
inc
mov
push
push
cmp
push
dec
xchg
pop
lahf
jle
xchg
cmp
mov
iret
mov
mov
stos
dec
sbb
jo
jns
inc
in
pop
pop
daa
pop
enter
pop
jg
and
into
scas
xor
out
xchg
mov
sub
fisttps
sub
push
adc
sub
cld
or
jnp
std
and
mov
or
xchg
insb
mov
xor
xor
jb
inc
out
rsqrtps
or
cli
push
mov
shlb
icebp
push
aam
aas
and
mov
push
arpl
add
test
sti
ljmp
mov
dec
stos
jg
test
fistl
nop
addb
js
outsb
pusha
stc
cmp
pop
sbb
push
add
lock
or
cwtl
cmp
frstor
scas
sub
mov
xor
sbb
adc
pop
and
lods
mov
cld
shll
iret
sbb
mov
fs
and
adc
int
sub
jge
push
mov
xchg
add
shlb
mov
push
push
inc
je
dec
das
push
arpl
cli
ret
push
cmp
sub
mov
xlat
inc
and
pop
inc
les
xchg
mov
mov
or
and
pop
shll
dec
cs
or
lret
loopne
add
out
dec
in
sbb
push
sbb
cmc
sub
or
movsb
jmp
push
mov
lea
ret
fwait
sub
mov
xchg
mov
push
push
or
jg
jl
test
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
pop
cmc
pop
xorb
mov
inc
mov
out
xchg
shlb
in
lcall
popf
xchg
fimuls
dec
scas
jle
stos
xor
fisubs
mov
leave
push
inc
ja
pop
jbe
mov
push
pop
aas
add
jg
decl
inc
jb
aaa
mov
jecxz
bound
push
mov
in
jb
inc
cltd
loop
test
jl
in
lcall
sbb
popf
or
dec
and
mov
popf
pop
mov
pop
test
pop
xchg
clc
mov
pop
adc
mov
hlt
jmp
ret
jbe
pushf
jg
sub
mov
test
fwait
mov
ja
jmp
fnstenv
mov
jae
inc
inc
cmpl
xchg
hlt
cwtl
enter
push
out
adc
in
inc
xor
pop
adcl
sbb
fincstp
iret
pop
xchg
call
jae
jnp
add
lock
pop
xchg
pushf
jl
into
inc
sbb
mov
das
pop
push
push
jno
push
dec
mov
dec
mov
push
loope
push
jne
mov
ror
test
jl
pop
pop
movsb
daa
sti
addr16
addl
mov
cmpsl
xchg
jbe
rcr
aam
shl
imul
jne
and
insl
test
push
push
push
cmpsb
xor
and
ss
jae
xchg
test
call
xchg
inc
and
dec
test
es
jmp
pop
fimuls
fs
adc
daa
es
jmp
cmpl
daa
popf
inc
sub
mov
mov
fisttpl
jb
jns
lcall
rcl
repnz
xchg
add
ret
push
dec
fnstcw
lods
sbb
frstor
xor
inc
leave
mov
jno
xor
iret
jae
fisttpl
xchg
iret
add
dec
push
jecxz
gs
sbb
adc
fidivrl
or
fisttps
loop
sub
adc
loope
fisubl
mov
lret
sbb
scas
cmc
mov
popa
scas
shlb
push
mov
fistps
jne
loop
outsb
inc
mov
push
cmp
cltd
mov
mov
xchg
es
xor
test
aas
mov
jbe
popa
pop
add
data16
je
cmp
mov
pop
xor
mov
xor
xchg
mov
daa
sbb
xchg
fcmovne
inc
insb
popf
popa
mov
aad
dec
mov
loope
mov
xchg
orl
jge
int3
aas
pop
lea
mov
fdivrp
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
pop
or
jo
jo
jle
jo
in
or
int
lcall
adc
out
adc
sub
aad
lock
js
and
repz
sub
in
shl
fwait
mov
push
pop
es
sbb
in
ret
fwait
jmp
dec
fsubrl
cmc
mov
rorl
es
dec
mov
sbb
fistl
icebp
pop
rcrb
mov
cli
or
arpl
add
ficoms
lahf
pop
pusha
mov
sub
imul
pop
mov
out
dec
or
gs
jnp
pop
out
clc
aas
fmull
fisttpl
call
rclb
push
dec
mul
das
jp
push
dec
inc
and
or
mov
stc
push
in
fwait
loope
pop
subl
clc
inc
dec
cli
adc
jle
lock
pushl
rcrl
push
push
or
into
mov
fisttps
into
mov
push
or
in
outsb
sbb
insl
lret
call
dec
inc
inc
xchg
add
std
jl
push
pop
fucom
adc
add
pushf
stos
sbb
pop
mov
in
in
andl
mov
xor
or
or
js
daa
int3
dec
jl
mov
jbe
ja
aad
xchg
xor
cmpsl
adcl
push
dec
xor
cmp
scas
add
test
xor
lcall
ficompl
lret
aad
dec
xchg
and
test
adc
jo
loope
sub
mov
mov
dec
mov
and
cs
aad
xlat
mov
adc
test
and
cmp
jl
sbb
ret
xchg
orb
fisttpl
cwtl
rorb
sbb
loop
push
fldenv
pop
sub
in
fcomp
rcrb
stos
adc
pop
mov
jbe
push
out
push
in
fnstsw
ret
mov
repnz
dec
das
loope
inc
mov
orb
cmp
xor
mov
ficoml
add
dec
es
hlt
adc
mov
ficompl
jne
adc
pop
repnz
dec
mov
inc
adc
test
xor
shlb
xor
and
add
xor
leave
loopne
jmp
xchg
sti
das
adc
gs
sbbl
test
loope
and
mov
pop
push
mov
xchg
movsl
pop
push
in
test
lods
mov
xchg
lahf
shll
ficoms
sbb
mov
rorb
or
jmp
add
mov
jb
jge
jge
pushf
pop
enter
jo
jle
jo
decl
mov
sbb
in
fbld
mov
or
loopne
jne
mov
jmp
faddp
hlt
mov
mov
call
cmp
add
cwtl
ljmp
and
lahf
jb
jle
inc
dec
xor
push
in
inc
enter
rorb
sbb
sbb
add
or
cmpsl
movsb
xor
in
lret
cwtl
call
negl
xchg
sarb
clc
data16
js
mov
sbb
or
test
rcrb
add
pop
sub
pop
xchg
adcl
test
pop
popf
inc
mov
in
test
pop
push
add
pop
pop
std
shlb
stos
lret
jb
in
aaa
jnp
insl
push
aaa
nop
adc
cmp
xor
repz
dec
mov
add
lds
insl
xchg
push
int3
in
fidivrl
pusha
push
jo
adc
push
cmp
xchg
ja
jo
adc
popa
xorb
int3
into
inc
inc
sahf
out
sub
in
ljmp
rolb
push
add
sub
lock
add
mov
popa
dec
shll
mov
out
and
mov
nopl
mov
xchg
pop
leave
test
jmp
or
imul
adc
test
mov
shlb
imul
xchg
mov
in
cmp
sub
xlat
rolb
xor
sub
popa
shrl
subl
inc
jp
xchg
into
jmp
mov
aas
adc
int3
lods
add
sets
cli
jp
sbb
jge
loop
in
mov
negb
fnstcw
cli
outsb
in
adc
or
xorl
or
mov
out
push
movsb
aad
dec
jg
dec
and
sbb
int3
daa
ret
flds
inc
pop
lahf
pop
jl
imul
in
arpl
jge
loop
dec
sarw
cmp
sbb
jbe
scas
push
fdivs
push
dec
xor
cmpsl
xchg
dec
xor
xor
jae
pop
fdivrp
inc
fistpl
inc
xor
mov
cld
nop
lds
cmp
out
dec
std
and
mov
imul
xor
insb
adc
insb
or
or
sub
sub
cmp
lods
mov
gs
dec
pop
lret
test
repz
std
mov
push
xchg
inc
jae
push
rorl
stos
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
mov
xchg
jle
jo
and
jle
shrl
pop
and
xlat
mov
pop
xor
aas
enter
in
call
nop
inc
xchg
inc
cmc
loope
add
pop
shll
mov
xchg
sub
xchg
mov
scas
es
push
pop
jg
adc
xchg
mov
and
adc
xchg
cmp
xchg
mov
jne
repz
sbb
push
movsb
jmp
xchg
adc
rol
push
addr16
or
mov
xor
dec
mov
out
adc
xor
dec
xchg
js
cmc
aaa
ja
push
sub
jecxz
call
adc
movsb
ja
dec
aaa
jmp
out
jecxz
daa
dec
push
daa
jno
fdivp
test
sbb
xlat
out
rcll
dec
jmp
add
arpl
imul
call
xlat
aas
fdiv
pop
dec
mov
push
push
xor
insb
dec
ljmp
hlt
sti
and
outsb
cmp
loop
push
lods
dec
clc
pushf
or
sahf
adc
jmp
repz
inc
fstps
sbb
sbb
xchg
mov
mov
sub
aad
xchg
sbb
push
andb
and
mov
je
popf
mov
xor
inc
nop
mov
cmpsb
repz
pop
shll
sub
mov
leave
lret
inc
and
or
insb
mov
dec
push
cli
stc
sti
pop
out
jnp
pop
inc
popa
mov
pop
cwtl
movsl
cmp
inc
ds
xchg
enter
sbb
addr16
cld
das
sbb
xor
std
pop
push
and
pusha
jg
adc
andb
mov
xchg
dec
mov
loope
inc
inc
mov
mov
inc
test
test
mov
pop
xor
imul
push
jno
mov
xchg
lds
jecxz
sub
pop
test
fiaddl
push
loop
jmp
and
cmp
std
inc
test
or
sub
rolb
cwtl
push
sahf
inc
mov
ja
loopne
mov
aad
and
imul
inc
cmp
sub
in
sbb
mov
leave
insb
push
and
fwait
pop
and
or
cmpsl
scas
lea
dec
rorb
pop
inc
mov
rolb
mov
jnp
fcom
pop
push
lret
pop
sbb
sbb
push
sub
sub
mov
stos
sbb
add
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
sbb
jmp
jo
jle
jo
rcll
outsb
pop
lcall
mov
outsb
push
lods
xchg
push
pop
mov
cmpl
sub
imul
push
and
clc
jns
jne
iret
fcmovnbe
lret
dec
in
jns
jns
pop
jmp
lock
dec
pcmpeqb
xchg
leave
inc
scas
int
and
loopne
jae
jg
lahf
movsl
push
push
dec
int3
leave
dec
out
sbb
pop
cmp
xchg
lret
sbb
inc
adc
jae
dec
sahf
cmp
lahf
les
pop
shll
out
xlat
xor
outsb
in
outsl
sbb
mov
and
push
gs
xchg
loop
push
and
out
jno
cmp
cmp
test
hlt
lret
mov
pop
int
mov
repz
mov
imul
add
bound
pop
inc
mov
enter
ret
ss
sbb
sbb
cs
inc
cmp
mov
jae
adc
sar
fmuls
mov
dec
pop
jne
cmp
fs
sbb
icebp
out
dec
cmpsb
rorb
mov
or
bound
sbb
and
push
lcallw
insb
dec
scas
mov
aam
inc
pushf
sub
xchg
repz
mov
push
xchg
adcb
je
ret
cwtl
push
stc
outsb
decb
mov
addr16
es
or
std
cmp
sbb
mov
repnz
pop
fdivrl
mov
dec
pop
inc
xor
lods
push
std
out
dec
lods
xchg
pop
cmp
jnp
fistps
clc
cmp
jge
je
mov
mov
inc
lods
cmc
sbb
out
imul
in
and
sub
inc
mov
shlb
xchg
mov
mov
or
fmull
pop
stc
jbe
fstpt
pushf
lahf
cltd
mov
sbb
test
mov
inc
cmp
sub
pop
lds
add
jle
flds
test
aad
fcmovnbe
dec
jne
xor
jg
add
rcr
pop
or
in
iret
sbb
and
test
xorl
cmc
and
insb
sbb
mov
push
out
in
push
loope
inc
testb
and
pop
lods
add
cmp
jmp
ret
les
mov
xchg
add
inc
adc
lea
pop
movsb
icebp
sbb
sub
cmp
stos
cltd
icebp
popa
adc
out
mov
mov
mov
sub
mov
imul
xlat
pop
lret
mov
aas
icebp
jp
aaa
out
movl
mov
mov
xor
mov
jmp
mov
jne
pop
push
flds
es
add
jo
xchg
pushf
jo
or
ds
inc
aas
fiadds
dec
cmpsl
out
and
mov
inc
imulb
xchg
clc
xchg
lret
test
mov
cmpsb
push
fucom
cltd
ficompl
pop
sub
fcmovbe
cmp
xchg
stos
cs
sub
std
iret
lods
andl
pusha
cmp
xlat
xor
sub
out
fwait
fs
addr16
mov
out
ljmp
and
inc
push
sub
cmp
mov
cld
xchg
ficoml
insl
or
mov
jl
shll
and
fstpt
je
dec
movsl
cs
enter
ljmp
out
outsb
shr
popa
test
loope
pop
dec
cmp
adc
or
mov
xchg
fcoml
into
push
je
lret
adc
jne
xor
aad
scas
hlt
arpl
ljmp
repz
pop
popa
mov
jle
test
pop
inc
inc
xchg
mov
and
mov
hlt
arpl
addr16
movsl
xchg
sti
or
xlat
in
cmp
dec
pmovmskb
mov
mov
xor
jnp
pop
cld
jl
mov
aas
cmp
loop
jnp
stos
sub
xor
jno
xchg
mov
into
push
xchg
xor
jae
int3
pop
scas
enter
popf
in
sahf
loop
pop
xor
nop
and
lea
cmp
ss
adc
mov
xlat
push
cmp
mov
ja
inc
jns
sahf
enter
popa
mov
mov
dec
jno
test
mov
pop
pop
movsl
daa
test
gs
dec
iret
sub
aas
es
push
cmp
fistl
out
sbb
test
mov
mov
xor
icebp
das
and
fisttpll
lret
sbb
divb
mov
cmpsl
int
mov
ret
xorb
cmpsb
aas
push
push
adc
inc
jl
or
mov
dec
xor
cmc
outsb
jno
push
and
je
rorb
call
and
jbe
push
adcl
or
mov
sbb
mov
lods
and
mov
fimuls
lds
fptan
hlt
xor
sti
push
sbb
push
jle
or
fistps
sub
cs
jbe
jno
bound
push
push
repnz
jg
jns
jno
call
divl
xchg
mov
pop
shlb
pop
stos
in
test
ss
pop
jecxz
jle
fsts
leave
xchg
je
cmp
addb
ds
inc
inc
insl
xchg
ja
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
out
mov
mov
push
outsl
rolb
cmpsb
cmp
xchg
stc
aad
test
dec
pop
push
je
push
ret
lds
arpl
xor
mov
inc
and
push
nop
stos
dec
jno
adc
stc
push
push
xor
dec
das
mull
xchg
cmp
ds
mov
cltd
jg
test
out
cs
inc
mov
push
enter
inc
add
cmp
dec
xchg
mov
xlat
cmc
loopne
rol
das
out
pop
lret
sbb
inc
cmp
repz
xchg
inc
fcmovnbe
or
in
pop
into
icebp
xchg
fstpl
cmp
ret
cmp
repnz
pop
and
std
popf
roll
sbb
sub
dec
sbbl
rorl
fwait
add
jmp
les
lds
sbb
mov
jmp
test
sbb
test
std
stos
lods
fcoms
into
pop
pop
lahf
aad
add
sub
cwtl
in
mov
popa
in
sbb
movlps
inc
dec
popf
nop
xchg
movsl
jge
pop
lods
adc
lret
shrb
arpl
dec
jl
loope
iret
jp
jge
repnz
mov
es
std
loopne
add
pop
lods
leave
arpl
and
cmpsl
and
cli
test
call
cmp
lret
inc
divl
sub
sub
and
stc
lods
xchg
or
nop
pop
cmp
call
bound
test
mov
rcl
cmp
loope
daa
in
lcall
cmpsl
test
xor
popa
lahf
ds
and
out
in
push
mov
out
pop
in
cmp
sub
mov
cli
sub
ret
mov
sub
test
mov
sub
dec
inc
jbe
aas
ds
enter
lods
popl
es
push
mov
les
jae
and
mov
cmpsl
push
xlat
js
jo
call
adc
insl
dec
adc
rcrb
mov
je
ja
mov
jge
inc
pusha
je
nop
je
jecxz
ljmp
xchg
jne
addb
mov
push
xor
mov
mov
mov
lcall
and
or
lcall
mov
xorb
dec
insb
jbe
rcrb
sbb
fdivs
sub
push
out
loop
jmp
xchg
cmpsl
adc
push
push
push
jg
jo
mov
sub
sub
pop
dec
outsb
arpl
lret
aam
xor
filds
jmp
inc
into
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
lock
jg
mov
es
loope
dec
fsubp
add
sbb
mov
sbb
mov
add
jg
jle
or
or
pop
cmp
cmp
cltd
jns
pop
adc
sahf
out
rcll
adc
or
push
xorl
movsb
sbb
movsb
rcrl
mov
jno
push
mov
jnp
ds
mov
imul
js
fs
mov
push
ja
inc
sub
push
inc
jg
loope
cld
cmp
scas
out
fisubl
xchg
sti
add
adc
mov
pushf
out
sub
pop
rorb
icebp
inc
add
lcall
loop
push
and
xchg
xor
gs
or
std
mov
mov
lods
ja
push
outsb
cmp
fdivs
and
pop
add
xchg
jp
xor
mov
punpcklbw
pop
pop
sti
push
cmc
mov
mov
rclb
xchg
xlat
mov
enter
add
or
dec
stos
xchg
minps
negb
and
mov
inc
fimuls
lahf
sub
fldcw
fstps
stc
push
xchg
push
xor
cmp
dec
and
xlat
rcll
fidivs
mov
pop
add
mov
in
ror
rorl
mov
decb
divb
insb
pusha
out
in
and
xor
push
inc
lods
dec
addr16
pop
out
out
ss
data16
pop
add
mov
cld
je
xchg
mov
cmpsb
jp
sahf
inc
jns
popf
cmp
jnp
fnsave
sbb
jecxz
and
ja
mov
mov
or
push
mov
inc
pusha
mov
sub
dec
icebp
sbb
and
mov
shrb
shr
divb
out
pop
or
out
movsl
xchg
lods
mov
cmp
int3
fwait
rclb
xchg
mov
adc
scas
push
rcll
sub
shlb
repnz
cli
sti
das
mov
adc
inc
movsl
mov
xchg
lret
sub
lret
fsubp
out
jecxz
xor
fildll
movsb
adc
pushf
fidivs
sti
push
icebp
sbbl
dec
mov
js
pop
jbe
clc
push
sub
adc
cmp
sub
mov
es
pop
lds
loope
and
iret
mov
sbb
mov
sahf
and
popf
test
mov
popf
inc
mov
bnd
sub
negb
hlt
das
pop
cltd
xchg
inc
xor
mov
sbb
mov
pop
cmp
sbb
out
xor
cmp
shrb
and
mov
jecxz
sbb
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
pop
mov
mov
jle
jo
mov
lods
cmpsl
xchg
or
jae
insl
xor
add
aas
adc
pop
xchg
dec
lcall
iret
cmp
cld
jl
jmp
fwait
xor
xchg
loopne
inc
dec
outsb
cmpsl
mov
mov
lahf
mov
sbb
outsb
xlat
mov
negb
outsb
mov
mov
out
and
movsl
dec
xor
dec
and
fistl
inc
xchg
cmp
sub
dec
test
divb
sbb
imul
mov
or
fisttpll
jmp
push
mov
sub
inc
push
loopne
add
pop
inc
xor
lods
mov
das
or
pop
outsb
into
movzbl
inc
lcall
shll
popa
int3
jmp
jbe
in
fmuls
xchg
cmpsb
add
push
int
push
fistps
outsl
dec
call
push
fsts
sti
cld
ficoms
push
std
pop
adc
jecxz
mov
jne
and
xchg
clc
mov
mov
add
pop
inc
jmp
scas
or
pop
lds
adc
js
xor
xchg
mov
xchg
jbe
jns
out
movhps
push
movzbl
repz
or
jl
lock
in
jecxz
add
sub
jb
dec
fwait
clc
pop
push
das
cwtl
pop
sahf
and
rcrb
aam
enter
sbb
pop
pop
lea
and
stc
push
add
imul
push
pop
push
mov
hlt
cwtl
dec
rcl
push
sub
dec
xchg
xor
mov
pushf
scas
lea
lea
push
arpl
jns
inc
jns
jecxz
mov
in
and
lcall
sub
push
test
xchg
inc
dec
stc
adc
int3
xor
mov
mov
test
std
sbb
add
inc
xor
fldcw
add
into
or
sarb
mov
dec
cmp
enter
push
ljmp
jns
ret
call
mov
sbb
jno
mov
out
popa
and
xlat
dec
push
bound
test
mov
cmp
pop
loop
nop
vmovq
fidivs
adc
mov
out
clc
subb
stc
xchg
or
or
inc
xor
loope
sbb
jecxz
xor
testl
ss
popa
sub
mov
mov
and
mov
adc
or
in
inc
and
jmp
xor
jl
lds
inc
out
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
xchg
shll
jo
lret
dec
mov
cmc
adc
dec
andl
push
gs
mov
js
lock
mov
shll
cld
mov
mov
and
insl
mov
shrb
push
sub
adcb
mov
dec
xor
es
sbb
fstpl
jp
lcall
dec
mov
adc
js
aam
jp
and
mov
dec
flds
sub
stos
out
test
inc
lcall
into
add
mov
inc
stc
adc
and
add
fwait
imul
das
pop
adc
push
pop
daa
mov
pusha
aaa
pop
sahf
pop
sbb
adc
in
ret
inc
fisubrs
pop
iret
outsb
insb
cld
aaa
fistpl
daa
sbb
pop
mov
dec
mov
cmp
movlhps
xchg
mov
insb
cwtl
ja
cmc
mov
and
mov
adc
sahf
xchg
and
mov
cmp
xchg
adc
dec
inc
xlat
test
jae
or
aad
inc
shr
insb
pushf
ja
push
jge
or
jg
cmp
in
inc
add
daa
sbb
mov
jmp
xchg
lds
and
bound
push
add
les
ror
dec
sub
ljmp
push
xor
jecxz
shrl
mov
sub
fistl
lahf
pop
xchg
mov
stos
mov
xor
es
sub
xchg
mov
mov
xor
mov
push
pusha
inc
sbb
jecxz
gs
repnz
fnstsw
add
rcl
imul
cld
nop
cmp
xchg
dec
sbb
icebp
push
push
push
mov
bound
mov
and
lock
jg
xor
mov
jae
insl
pop
and
xor
push
std
sub
pop
rcrl
test
out
jnp
sub
data16
adc
xor
loop
cmp
sahf
xchg
jge
mov
test
fidivrs
pop
xlat
out
mov
push
xchg
nop
jge
in
repnz
adc
mov
je
jns
xchg
sub
mov
loope
pushf
mov
jne
push
ss
in
cmpsb
mov
or
sub
sahf
testl
shlb
adc
sbb
adc
roll
inc
jns
pop
sahf
es
insb
push
adc
xor
push
adc
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
cmp
jo
jle
jo
cmp
aaa
cmp
cmp
jb
or
push
test
sbb
push
adc
mov
mov
push
ja
arpl
hlt
fcom
push
aad
mov
aas
andl
aam
out
jns
pop
fsubp
mov
jns
dec
mov
out
movsl
cmp
out
and
outsl
add
outsl
outsb
jns
loopne
leave
pop
sbb
test
leave
movl
mov
data16
stos
fdivrl
jle
mov
outsl
mov
ljmp
or
xor
out
test
cltd
pusha
ja
xchg
jb
xor
loope
dec
xchg
or
pop
lods
ret
js
lea
pushf
lcall
addr16
aaa
and
xor
sbb
cmpl
enter
out
loop
push
in
shlb
push
fs
xchg
iret
ljmp
aaa
out
ret
and
sub
in
jbe
fistpl
xor
nop
dec
or
es
mov
jecxz
add
adc
jge
data16
sub
xor
push
in
mov
dec
cld
lret
xchg
js
call
int3
sbb
popa
repz
lahf
or
in
cmp
shrb
int3
cmpsb
cli
js
jmp
mov
mov
imul
adc
pop
jbe
test
or
jge
je
dec
push
or
lret
insl
aaa
cmp
cli
scas
lds
jno
add
out
cmp
pop
sbb
xchg
es
add
ret
lret
mov
pop
call
in
xor
cmpsl
add
leave
jno
outsb
sti
outsl
lds
mov
xchg
dec
cmc
addl
cs
insb
jl
incl
unpcklps
mov
cmpsl
sub
fcoms
stc
add
mov
pop
mov
lahf
ljmp
outsl
mov
inc
pop
out
or
pop
pop
fs
lcall
icebp
and
cmc
mov
sbb
lret
cmp
jbe
outsl
mov
push
test
cmpsl
aam
dec
into
std
push
insb
lods
pop
out
sub
dec
mov
fadds
or
inc
mov
lods
mov
fnsave
daa
xlat
rclb
insb
or
mov
iret
or
xchg
or
push
aas
mov
mov
xchg
dec
mov
jb
xor
add
insb
sub
jns
cmp
mov
mov
enter
icebp
xchg
and
push
cmp
shll
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
mov
jo
jle
jo
das
or
int
pop
jle
dec
fnstsw
cs
loope
ljmp
daa
xchg
jnp
les
mov
mov
sbb
xor
pop
lcall
xchg
cmp
mov
xchg
dec
mov
add
jae
loop
sarb
cmc
jle
imull
sub
xchg
rorl
ss
lcall
push
push
lret
repz
or
mov
pusha
out
dec
push
cmp
pushf
dec
movsb
outsl
lock
dec
xchg
cmp
jns
in
push
aam
lahf
add
mov
sub
mov
jecxz
lods
inc
sub
hlt
out
jns
mov
jno
fidivrs
sub
popf
popf
xchg
fwait
jo
jae
xor
pop
sbb
movsl
fidivs
pop
aad
sbb
loope
dec
rcll
mov
push
dec
sbb
xchg
inc
mov
fistpl
jl
lret
test
jns
sub
sub
fwait
ret
mov
push
cmp
das
cmp
pusha
cmp
insb
cmpsl
rcl
cmp
arpl
or
dec
mov
mov
mov
push
pop
sti
clc
ljmp
ja
ret
subl
mov
adc
and
bound
xor
dec
lods
pushf
and
cmp
in
or
adc
sbb
push
push
shll
int3
es
lea
jo
lcall
sub
push
test
inc
cmp
lock
pop
data16
jle
ljmp
mov
add
out
cmp
sarl
pushf
mov
loope
test
std
and
fisubrl
aas
mov
jne
fsubrs
mov
lret
or
xchg
cmc
add
push
or
test
sbb
add
push
rcrb
arpl
movsl
les
jg
xchg
pop
mov
arpl
mov
fstpl
loopne
or
add
cltd
les
cs
cmp
mov
andb
jo
out
jmp
out
xchg
inc
pushf
sbb
mov
jb
jns
xor
sub
test
sti
insl
and
jnp
pop
sbb
adc
cmp
fwait
dec
push
sbb
fstl
xchg
or
sbb
enter
adc
mov
mov
sub
addb
das
ss
cmp
into
dec
sub
cmp
icebp
sbb
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
dec
sarb
adc
mov
call
or
adc
aam
loope
in
lea
xchg
xchg
repz
push
test
fldl
add
cmp
sub
movsb
inc
rol
test
cmc
adc
fdiv
or
jge
shl
dec
les
mov
scas
cmp
test
mov
inc
push
adc
std
gs
pop
jecxz
pop
ficompl
push
fnstenv
or
cmp
xor
shl
mov
pop
rclb
mov
fiadds
movsb
subl
mov
add
cmp
lret
xor
mov
ljmp
shll
mul
or
adcl
dec
mov
sbb
jg
push
int3
mov
xor
cmp
jl
insl
inc
out
add
popf
push
sbb
fcomps
xorl
test
cwtl
push
cmp
cmpsl
jle
shr
and
rcrb
pop
xchg
add
jge
pop
and
cmp
cs
sub
outsl
arpl
and
lret
pop
cmp
xchg
cmp
or
xchg
mov
xchg
in
adc
mov
adc
fidivrl
bound
cld
pop
fs
loopne
push
push
sbb
ret
cmpsb
addr16
iret
nop
into
adc
rclb
inc
icebp
sbb
sysexit
mov
loop
inc
rorl
std
jnp
jmp
dec
pushf
push
out
push
or
daa
pop
js
cs
dec
mov
or
insb
pop
loop
push
inc
and
pushf
nop
adc
les
fs
rclb
repz
fbld
cs
dec
mov
dec
mov
pop
pop
das
push
ss
pop
ja
mov
shrl
sub
cwtl
daa
mov
cs
shrb
sbb
adc
cld
cmp
and
pop
popf
pop
ljmp
stc
dec
stos
fldl
jg
mov
mov
fldenv
add
addb
lret
add
scas
lcall
nop
pop
lret
mov
dec
pushw
fstl
int
push
aas
mov
lds
sub
xchg
iret
mul
popa
jmp
rorb
in
addr16
fiadds
push
cld
dec
cmp
push
push
lock
mov
das
arpl
jmp
or
pop
push
adc
push
jmp
cli
mov
loopne
pop
jle
stos
push
or
jae
mov
dec
sbb
adc
cmc
insl
test
dec
xchg
mov
adc
sbb
lret
jmp
cmc
std
fs
jno
mov
lods
es
jl
pop
jg
mov
loop
pusha
xchg
jmp
jg
fstpl
push
cmp
into
cmpsb
mov
insb
sarb
pop
faddl
or
aam
test
das
and
or
insl
adc
daa
jmp
lock
dec
aas
stos
je
stos
mov
mov
mov
sbb
fimull
std
pop
imul
into
mov
in
repnz
test
jbe
outsl
fistpl
push
cltd
or
mov
lret
jb
flds
out
pop
mov
rcrl
aas
jmp
pop
rolb
jl
mov
lods
mov
push
loop
xchg
bound
pop
xor
mov
dec
ljmp
mov
push
cwtl
pop
ljmp
mov
push
mov
testl
dec
dec
imul
test
jle
inc
call
lods
js
sar
pusha
shrb
pushf
sti
fmul
adc
xor
dec
cmp
xlat
add
jbe
jo
sahf
movswl
rolb
or
int
jg
nop
inc
mov
insb
push
out
outsl
mov
mov
mov
adc
daa
xor
loope
xor
mov
jae
sub
add
lock
inc
stos
dec
fsubp
xchg
mov
stc
dec
pop
adc
lods
subl
mov
xchg
xchg
xchg
add
or
mov
call
out
xlat
cmp
sbb
mov
mov
sub
mov
es
ficoml
push
jb
fcompl
fwait
inc
stc
test
jnp
adc
and
mov
cmp
bt
inc
pop
push
cwtl
jge
adc
sahf
mov
imul
and
fidivrs
pop
inc
adc
xor
in
or
in
adc
sub
in
mov
out
dec
lret
cmp
fwait
fistpll
or
add
jl
push
mov
push
cmp
loopne
sub
idivl
pop
arpl
fcmovbe
out
ss
mov
mov
pushl
cmp
mov
xchg
and
dec
xchg
jmp
mov
jns
test
aaa
jg
insl
mov
cli
clc
repz
cli
mov
xorb
sbb
add
rorl
xor
pop
pop
outsl
scas
in
jno
xchg
int3
clc
mov
dec
and
jecxz
jne
push
in
cmp
inc
pusha
iret
lods
xor
mov
icebp
or
ficoms
xchg
sub
out
xor
inc
sbb
jns
mov
push
or
push
mov
inc
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
pop
pop
fildll
sbb
jo
jle
jo
xchg
cltd
inc
jecxz
push
les
dec
fadds
dec
pop
or
jae
add
insl
xchg
adc
jno
clc
insl
sub
fucomp
dec
lds
push
ret
mov
adc
mov
outsl
sarb
mov
cmp
mov
xor
xchg
sahf
aam
pop
ss
add
xor
fbstp
xchg
lea
mull
lods
outsb
sbb
arpl
sarb
xchg
add
fdiv
xchg
adc
mov
xor
pop
add
ss
test
jl
enter
mov
in
dec
push
xorl
pop
frstor
pop
sbb
xchg
ret
out
in
loopne
pusha
int3
or
in
inc
push
dec
adc
movsl
mov
mov
outsl
xor
push
push
pop
cmp
sub
pusha
incl
mov
mov
push
mov
out
gs
pop
aas
sbb
cld
mov
fsubrl
jecxz
aaa
sarb
hlt
test
shl
jg
loope
aad
lret
lret
or
sbb
shrl
pop
jns
dec
sub
add
xor
in
pushl
insl
shll
xlat
bound
push
lods
cmc
dec
loope
dec
push
pop
iret
sub
cs
xchg
stos
push
scas
movsb
add
adc
push
sti
jno
je
and
xchg
addr16
int3
jp
push
jbe
adc
lods
insb
cltd
pop
jno
inc
int3
hlt
fbstp
push
movsb
shlb
and
scas
inc
subl
ljmp
pop
mov
ficoms
jns
sub
push
enter
orb
push
jbe
and
std
sbb
mov
pop
jg
pop
push
sti
push
xor
xor
scas
pop
subl
push
xor
pop
aad
pop
int
push
loop
jmp
ret
leave
lahf
cli
sub
dec
aam
mov
or
push
pop
push
cmp
popf
push
fwait
mov
pushf
repz
lret
mov
dec
jno
pushf
cwtl
dec
adcb
out
add
mov
jo
orl
lret
adc
xchg
push
mov
pop
xchg
mov
stos
aam
jne
inc
jecxz
push
dec
repnz
pusha
mov
push
and
and
and
aas
or
mov
sahf
sub
and
lea
or
xlat
insl
push
pop
fs
leave
imull
and
jg
scas
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
and
sbb
mov
pop
jnp
jns
sbb
repz
dec
testl
adc
mov
in
inc
fldlg2
pop
pop
push
rcl
cmpsl
inc
out
mov
clc
dec
pop
dec
divl
mov
int3
jge
dec
mov
out
mov
cmp
lret
mov
imul
push
outsb
inc
cld
mov
jne
pop
popa
hlt
iret
sbb
and
xchg
mov
adc
in
lock
cmp
sub
in
divl
adc
mov
dec
cmp
addr16
fldl
mov
mov
mov
rorb
push
xor
or
shrb
lcall
jo
in
jnp
rcl
loop
sbb
orl
lea
sbb
mov
xchg
jp
jbe
aaa
and
movl
inc
out
push
ds
int
loop
adc
cmp
scas
mov
idivb
push
insb
ljmp
push
mov
inc
fwait
es
fnstenv
sbb
xlat
push
pop
push
insb
lret
aad
in
push
jae
in
mov
in
jge
mov
xchg
cmp
cmp
bound
ds
dec
add
cmp
mov
and
stos
dec
add
clc
or
add
dec
aam
arpl
jb
jmp
rolb
fsts
sub
mov
xchg
inc
andl
adc
aas
mov
pop
sub
push
js
fnstenv
push
lds
lret
pop
mov
inc
int
ljmp
and
and
notb
scas
test
test
mov
cmp
ljmp
inc
pop
in
adc
xchg
cmp
mov
in
cmc
mov
data16
fistpll
orl
pop
out
push
push
sub
push
in
push
jmp
mov
mov
xchg
stos
or
inc
mov
into
lds
and
push
sbb
push
adc
pop
xchg
mov
add
inc
stos
jno
rcl
testl
or
add
and
xor
xchg
mov
in
test
outsb
out
mov
adc
xor
jmp
or
mov
das
es
jle
add
insb
xchg
aam
push
mov
sbb
sbb
inc
mov
addb
xor
mov
test
aaa
rcr
adcl
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
xor
cli
pushf
jo
jg
mov
sar
mov
mov
mov
ds
inc
xor
jge
iret
and
xchg
iret
xor
inc
xor
aam
mov
jg
dec
popa
js
pop
push
shrb
roll
out
jae
fs
dec
fs
push
xor
add
les
loopne
cmp
mov
dec
push
shl
jae
push
jo
sub
mov
arpl
test
cmp
cmp
dec
or
lods
stc
mov
imul
arpl
fdivl
mov
add
lods
add
mov
in
and
cli
jnp
push
xlat
dec
pop
dec
xchg
pop
xchg
pop
sti
negl
mov
stc
push
mov
push
sbb
xchg
loope
adc
popa
stos
jo
dec
xchg
lret
push
into
ja
and
sub
int
sti
gs
sub
pop
mov
xchg
pop
jecxz
pusha
testb
imul
dec
test
and
mov
jg
adc
fstps
inc
nop
mov
jb
loopne
push
xor
inc
or
hlt
sub
jnp
or
out
pop
shl
sub
insl
dec
clc
mov
sub
sub
add
cltd
xor
and
dec
mov
loopne
mov
push
adc
js
add
mov
shll
or
cmpsl
mov
fsubrs
subb
mov
psrad
movsl
das
mov
aam
xchg
and
mov
jbe
mov
push
mov
push
dec
add
test
loope
adc
push
mov
cmc
dec
jbe
cmc
jnp
pop
inc
rcrl
pop
cltd
rolb
in
sub
cmpsl
out
outsl
xor
nop
fucomp
sbb
adcb
loope
jge
stos
inc
popa
gs
add
cld
ss
and
movsb
dec
shrl
inc
add
lcall
in
adc
into
mov
cmp
pop
movsl
mov
pop
adc
pop
es
jo
cmpsl
arpl
mov
mov
mov
int
fwait
test
pop
cmp
mov
jnp
xor
pop
mov
frstor
divb
sti
into
inc
popf
mov
add
mov
mov
fisttps
jmp
xchg
xchg
cmp
int3
test
imul
sub
int
dec
xchg
jmp
inc
dec
jns
out
mov
scas
xchg
outsb
movsb
and
cmp
sbb
imul
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
and
jo
jle
jo
pusha
pop
jp
pop
out
addb
jmp
rcl
je
sub
lcall
ljmpw
les
jne
pop
leave
data16
adc
fdivs
pop
pop
jmp
sti
mov
call
nop
iret
push
adc
imul
jecxz
jmp
sub
sub
arpl
cmp
mov
lret
mov
sbb
das
ret
std
lahf
jge
inc
cs
push
ljmp
mov
xlat
pop
inc
roll
xlat
sbb
dec
mov
cwtl
data16
js
sbb
cmp
cmpsl
loopne
mov
sbb
sbb
jle
and
push
in
push
mov
stc
xchg
div
jbe
idivb
nop
xor
cmpsb
ror
adc
add
loop
std
inc
repz
mov
dec
cwtl
and
int3
inc
xchg
cs
inc
lret
dec
lret
push
jg
pop
ficompl
aaa
std
cmc
add
loopne
cmp
js
lods
lds
inc
test
mov
jbe
cmp
out
push
adc
cld
scas
add
lret
cmp
push
in
mov
mov
pop
adc
or
cmp
xor
aaa
push
icebp
loop
out
sub
mov
ss
and
stc
lahf
sbb
and
loope,pn
xchg
pop
std
push
sti
mov
mov
ret
mov
dec
push
scas
mov
test
pushf
cmp
hlt
sbb
sbb
inc
cltd
fsubl
movb
inc
add
pop
imul
adc
in
gs
mov
dec
pop
js
sub
sub
inc
push
imul
mov
inc
xchg
push
or
push
pushf
add
push
cmp
dec
adc
mov
repz
xchg
aaa
aad
or
test
push
lods
pop
mov
ja
gs
push
push
jae
jmp
and
movsb
shll
out
xchg
test
xchg
movsl
mov
popa
cmp
adc
sbb
xchg
lret
mov
add
adcl
sbb
aaa
inc
out
pop
test
mov
mov
fstpt
dec
push
dec
or
stos
mov
in
xlat
pop
xlat
outsb
cmc
jbe
pop
inc
arpl
std
or
mov
js
insb
jns
or
clc
or
pop
pop
xchg
ficoml
aam
add
mov
test
popf
dec
cmp
xchg
cmp
into
movsb
xchg
stos
push
push
rclb
incb
add
or
add
adcb
mov
fldl
clc
xchg
test
cmpl
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
