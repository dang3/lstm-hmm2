push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
push
push
push
call
mov
dec
mov
jmp
xor
or
mov
add
xor
mov
mov
mov
sub
sub
mov
or
mov
mov
mov
xor
mov
mov
andl
movl
or
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
call
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
mov
movzbl
xor
mov
jmp
lods
insl
lcall
xchg
add
mov
jnp
jnp
sahf
jnp
aam
rcr
fcmove
test
mov
mov
test
orl
xchg
lods
jle
jno
jle
inc
mov
sti
xchg
jle
or
sub
or
rcrb
push
out
cwtl
dec
imul
out
sti
fldcw
cmp
mov
test
jne
sub
inc
sbbb
push
out
arpl
jb
sbb
xchg
insb
mov
xchg
add
imul
xor
sub
xchg
lods
in
mov
stos
sub
and
xchg
cld
xchg
xchg
inc
clc
mov
stc
mov
push
data16
test
imul
cmp
cmpl
pop
push
and
xchg
xor
inc
in
lds
out
or
cltd
popf
test
pop
cs
jecxz
pop
cld
sarb
ja
mov
bound
push
jle
cld
sti
std
repz
rorb
dec
leave
imul
mov
mov
iret
ret
enter
xor
lret
fadds
xchg
mov
add
cmc
adc
arpl
or
std
inc
ljmp
fstpl
add
adc
icebp
push
dec
jno
js
cs
repnz
cmpsl
ror
sbb
into
push
stos
ljmp
jmp
addr16
mov
or
and
cmp
push
outsb
mov
jne
and
divl
loop
movsb
ds
xchg
adc
sbb
movsb
lock
subl
or
out
inc
pop
insl
cmp
loopne
add
pop
loopne
aas
in
cmp
cmp
stc
mov
dec
shll
pop
shrb
cmp
test
je
adc
ss
push
push
and
xchg
fwait
or
enter
xchg
mov
je
push
dec
adc
mov
and
out
lcall
pushf
sub
stos
lds
bound
pop
lods
and
lods
pop
mov
jge
or
xor
cmp
loop
mov
sar
or
sub
or
xor
and
push
lret
mov
jno
movsl
cmp
mov
es
add
std
mov
out
or
push
dec
add
in
push
ljmp
aaa
test
test
and
sbb
or
xor
sbb
fdivs
and
mov
cs
mov
xlat
xor
test
mov
mov
sti
jecxz
mov
adc
and
cmpsl
mov
sbb
jg
add
pop
test
repnz
mov
cld
pop
push
rolb
stc
lea
cli
out
repnz
sahf
jbe
out
cmc
mov
xchg
test
push
cmpsb
lret
adc
imul
lret
js
int
idivb
ficompl
inc
add
dec
stos
lret
test
out
ja
push
lret
xchg
adc
adc
mov
mov
jl
dec
mov
gs
mov
jno
inc
sbb
mov
scas
jo
test
mov
pop
or
clc
rcll
icebp
lods
out
icebp
repz
lahf
shrb
push
xchg
movsl
mov
push
cmp
cmpsb
icebp
sbb
clc
add
stos
sub
lods
stos
sub
adc
frstor
or
scas
call
fs
or
popf
mov
fdivl
scas
pop
cmp
mov
cmp
dec
sub
add
sub
dec
jns
adc
mov
xor
push
mov
outsl
les
fs
xor
mov
or
push
or
rcl
rcrl
dec
xor
pop
cmpsb
jmp
dec
test
pushf
jae
inc
inc
push
loopne
out
movsl
lret
lods
bound
inc
daa
int
ret
sbb
pop
and
cmpsb
sub
aam
lcall
int3
cs
loopne
cmp
mov
sbb
sub
jae
imul
out
mov
mov
fldcw
pop
dec
mov
rcrb
int3
pop
adc
rorb
xor
xchg
bound
sarl
inc
repnz
icebp
es
push
imul
adc
xchg
pop
inc
sub
lods
lods
dec
xor
cmp
or
xlat
pushf
mov
mov
add
xchg
cltd
jo,pn
in
cmp
adc
jp
das
filds
js
imul
xchg
mov
daa
ret
lea
or
mov
dec
lahf
cmp
and
clc
xor
or
lods
lea
and
jns
cmp
xchg
xorl
in
js
jmp
sti
es
sub
mov
pushl
in
adc
push
sub
add
lds
mov
sub
lods
dec
mov
stos
jb
xor
inc
xor
jns
cmc
addr16
mov
jbe
adc
pop
test
loope
iret
mov
mov
mov
sub
pop
cmp
ret
mov
inc
out
sub
stos
inc
cmpsl
fsubrl
adc
cmpsb
test
mov
cmpsl
test
and
out
loopne
icebp
sbb
lds
fsubl
jge
lret
pushf
sbb
push
hlt
mov
pop
decb
mov
mov
fsubs
inc
fisubs
jl
loope
mov
lahf
cwtl
lret
int3
sub
push
xor
repz
adc
loopne
movsl
jg
add
pop
sbb
js
jbe
xor
aas
pop
sbb
idivb
lahf
lods
sub
push
nop
pop
pop
repz
mov
inc
mov
pop
nop
dec
shll
fstpl
xchg
dec
inc
es
movsb
mov
pop
or
adc
sub
cmpl
out
subb
aas
into
inc
add
jl
in
sahf
mov
fists
or
pop
out
loop
jl
xchg
bound
xchg
mov
outsb
xor
mov
ljmp
mov
mov
in
mov
jmp
verw
pop
decl
pop
push
test
fbld
add
subb
xchg
shll
jne
jns
add
adc
push
lods
add
dec
imul
mov
mov
mov
lock
push
stc
xor
test
cli
push
sub
icebp
inc
mov
into
mov
stc
stos
daa
xor
adc
xchg
jnp
stos
cmp
xlat
ljmp
jns
mov
fidivs
cwtl
xor
ret
mov
in
repz
jg
daa
test
jno
add
jmp
push
mov
aam
test
add
xchg
mov
jb
fsubrl
roll
lods
xchg
push
test
lret
popf
sub
jb
es
fstps
dec
or
lahf
aaa
outsb
inc
daa
pop
shrb
mov
inc
mov
movd
pop
jno
pop
into
or
mov
sbb
jb
popa
mov
xor
xchg
iret
sbb
loopne
movsb
in
xchg
ret
inc
cli
pop
pop
and
aad
in
push
mov
mov
mov
push
cs
or
aaa
lock
adc
pop
pop
mov
enter
add
dec
fwait
stc
mov
int3
xchg
int
pusha
andb
std
mov
xor
mov
popa
pop
testl
enter
dec
push
adcl
imul
in
sbb
push
mov
test
add
jae
call
add
pop
hlt
mov
add
add
sub
daa
cmp
add
flds
or
std
les
mov
mov
and
mov
je
or
or
ja
jns
adc
imul
mov
fwait
pop
fstpl
jg
pop
out
std
jl
sub
pop
fs
xor
fbld
adc
inc
add
sub
les
scas
pop
idivb
xchg
mov
stc
iret
jp
mov
outsl
adc
push
and
imul
repz
mov
jge
int3
push
dec
imul
xchg
xor
cmc
or
and
push
roll
pop
orl
mov
cmc
jecxz
and
mov
es
mov
loop
sub
sbb
enter
aaa
adc
outsl
test
push
jbe
int
into
cltd
faddl
sub
sub
sub
sub
mov
mov
daa
lahf
mov
mov
call
outsl
adc
or
mov
scas
sarb
out
int
mov
cmp
imul
add
jp
shufps
loope
sub
in
lods
test
mov
and
sti
in
fs
mov
inc
loope
int3
and
fld
xorb
lods
sub
int
xchg
std
test
lods
cs
xchg
cli
aad
add
mov
push
xor
lea
cwtl
cmovle
test
cmpsb
iret
aaa
fwait
push
call
repnz
arpl
shlb
aam
mov
pop
aaa
dec
adc
xchg
lea
jle
jo
out
and
inc
call
ja
jecxz
mov
and
imul
xor
dec
cld
cli
adc
jne
out
inc
inc
test
std
lret
andl
add
cmp
loop
bound
adc
ja
xchg
clc
stos
xchg
pop
scas
jl
stc
xor
or
ss
mov
cwtl
push
xor
scas
inc
pop
xor
ja
push
mov
fdivrp
sbb
test
mov
popf
movsl
ljmp
les
dec
xchg
cltd
cwtl
in
xchg
and
pop
data16
movsl
mov
inc
sahf
je
xor
imul
push
fbstp
in
xchg
pop
ret
xchg
xchg
shr
lahf
push
test
mov
cld
inc
xor
aaa
pop
and
fldcw
inc
out
inc
xor
lret
jb
mov
inc
and
ja
mov
ret
and
cwtl
mov
mov
data16
lret
sti
rcrl
outsb
scas
mov
out
pushf
stos
mov
inc
lret
bound
jns
push
push
mov
insl
dec
push
std
int3
hlt
ljmp
fiadds
xchg
loopne
in
movsb
dec
mov
adc
leave
outsb
or
loope
rorl
je
lret
lcallw
xchg
fisubrl
and
pop
addr16
sub
fwait
add
jbe
stos
jbe
add
push
push
mov
pop
data16
xlat
mov
test
adc
sub
pop
cmp
popl
testb
and
mov
xchg
add
loope
fldenv
mov
jne
and
pop
repnz
mov
daa
pop
cmp
jae
adc
es
mov
mov
mov
es
cmp
ucomiss
dec
cmpsb
xor
mov
mov
and
adc
lret
pop
fstl
cwtl
xchg
out
and
pusha
leave
cmpsl
in
ret
jle
inc
hlt
jl
test
mov
shll
cmp
je
icebp
fwait
dec
sarl
fnstsw
mov
pop
cmp
fwait
cmp
xor
inc
cmpl
xchg
push
adc
addl
and
dec
xchg
pop
lcall
lahf
cmp
mov
and
loopne
imull
mov
in
sbb
xorl
dec
cld
or
sub
clc
ret
sub
xchg
lods
mov
mov
test
inc
imul
push
mov
lret
and
out
sti
adc
pop
int3
outsl
cmpsb
mov
test
aam
mov
insl
repz
arpl
aam
adc
pop
fs
je
aad
mov
inc
in
loop
out
jae
lea
mov
and
jmp
xchg
in
aad
mov
mov
and
inc
ret
addr16
mov
jp
rorl
nop
pusha
jae
icebp
fidivl
out
dec
jp
out
ljmp
outsb
jne
jae
lods
cmpsl
mov
arpl
cs
stos
in
sub
jle
addl
adc
jge
cltd
xor
or
popf
add
lds
and
sbb
imull
add
shlb
mov
add
and
sti
insl
icebp
iret
pushw
dec
test
out
push
mov
loopne
push
jnp
sub
inc
push
cmc
mov
inc
mov
cmp
ja
pop
aaa
lcall
mov
push
mov
mov
xor
push
inc
mov
push
daa
xchg
and
addr16
call
mov
subb
inc
scas
cwtl
lahf
push
adc
sahf
out
mov
xor
dec
shlb
and
xchg
popf
fsubl
sbb
and
sbb
ret
add
xor
sbb
dec
cmpsb
dec
cmp
sarl
out
fistpl
jo
mov
lret
add
sub
cmp
lock
xchg
or
popf
ja
push
test
iret
iret
pop
and
mov
aam
lahf
or
xchg
sbb
hlt
mov
or
sub
add
loopne
loope
enter
aam
imul
movsl
mov
clc
xchg
cmp
inc
out
test
jno
pand
or
cmp
test
adc
mov
or
or
jb
mov
jae
sub
cmc
ret
idivl
mov
adc
cmp
jns
loopne
les
xor
ja
push
dec
push
dec
push
dec
loop
push
mov
jl
test
je
jne
pop
inc
cmp
pop
rolb
out
or
fs
and
sbb
or
es
fistps
ss
aas
push
movsb
sti
push
aad
sahf
xor
movsb
sbb
or
mov
inc
jge
dec
xchg
cmpl
mov
je
test
sbb
mov
test
mov
push
sti
vmovaps
in
insb
add
mov
call
cmc
mov
sub
xchg
sbb
bound
cmp
push
and
mov
xchg
subl
or
into
sbb
and
fisubs
cmc
mov
push
add
hlt
cmpsb
int3
mov
inc
mov
call
cs
repz
sub
das
lret
outsl
movsl
push
leave
repnz
pop
adc
popa
add
xor
push
push
pushf
decl
addr16
mov
andl
mov
adc
push
pusha
jb
xor
mov
xchg
sub
pusha
jge
mov
xchg
daa
mov
addl
jle
iret
into
mov
sub
cmp
fidivrl
into
and
jg
ret
dec
mov
imull
add
mov
pop
lahf
xor
jne
pusha
lret
cmpl
mov
add
shl
mov
jp
data16
js
pop
outsb
cmp
sti
ss
movsb
xchg
sub
mov
mov
loope
pusha
shrb
pop
in
push
js
sub
enter
ss
or
pop
loopne
repnz
jo
and
out
mov
mov
pusha
movsl
mov
fwait
dec
in
lods
push
imul
bnd
roll
or
and
dec
fimuls
repz
rclb
repz
xchg
sbb
fs
mov
fldz
hlt
stc
mov
push
cmp
xchg
adc
and
cmc
jg
xor
in
mov
fdivp
adc
pop
outsb
outsb
push
cwtl
pop
cli
mov
loope
loopne
and
lods
popa
xchg
ljmp
jmp
lods
lods
adc
lock
scas
jp
push
call
adc
sub
jo
cld
divb
cltd
mov
adc
jno
fimull
inc
inc
in
jmp
jmp
lahf
sub
frstor
pop
aaa
adc
sbb
mov
idivl
push
je
mov
fstpt
stos
pop
outsl
ret
inc
jle
loopne
cmp
sbb
clc
es
inc
add
inc
xchg
xchg
pop
push
mov
mov
xchg
push
lret
es
out
fs
bsr
in
cmp
inc
cmc
or
lret
cmp
dec
imul
cwtl
push
mov
addr16
fidivs
cmp
icebp
dec
iret
rcr
push
inc
andb
insl
cmp
aas
sbb
cmp
popa
cmpsb
roll
pop
dec
xchg
xor
scas
inc
inc
aad
cwtl
repz
fstpt
cmp
lods
mov
clc
int
xchg
mov
adc
mov
adc
jns
test
test
or
pop
test
jne
aas
inc
jns
repnz
push
lcall
stos
cmp
cld
jp
mov
std
cmc
push
outsb
add
fnsave
js
mov
cmpsl
es
and
das
mov
jae
std
jle
aas
nop
sbb
push
stos
inc
dec
push
jp
rclb
js
pop
jnp
fildl
jo
mov
push
in
push
xor
cmc
arpl
push
cmpl
pop
out
dec
in
cli
xor
inc
popf
jno
xchg
or
xor
divb
or
mov
std
push
arpl
mov
lds
cmpsb
aad
push
and
push
cmp
das
push
xchg
or
vcvtsi2sdl
mov
xlat
negb
push
xor
sbb
psraw
popa
dec
ret
xor
add
lds
mov
clc
push
fwait
cmp
add
xchg
push
mov
inc
mov
add
les
mov
xor
xor
test
gs
ljmp
out
jo
mov
aas
push
insb
imul
cmp
jl
fisttpll
push
js
inc
mov
cmp
ret
jmp
scas
add
jg
loope
jne
push
pop
jl
xchg
xor
iretw
push
sub
xchg
insl
xchg
xor
pop
iret
clc
and
xor
js
mov
adc
sti
xor
sbb
stos
cmc
fsubrs
mov
in
push
outsl
fldenv
mov
xchg
inc
mov
cmp
shll
xchg
or
ret
sub
fcomip
jns
sbb
mov
inc
sahf
cld
push
push
lock
and
sub
adc
faddp
xchg
insb
aam
jno
fnsave
fs
mov
daa
aad
sbb
addb
sbb
pop
sbb
adc
cmp
sahf
jns
stos
lods
dec
fistpl
adc
decl
icebp
add
sub
ucomiss
mov
pop
sbb
inc
dec
arpl
pop
daa
int3
fs
pop
mov
sub
mov
jecxz
jno
shlb
sbb
inc
xor
or
or
xorb
jg
sbb
pushf
mov
test
mov
jecxz
push
jbe
dec
push
outsb
push
out
mov
and
push
std
mov
test
fisubs
jne
pop
test
into
mov
xor
mov
jle
or
insl
aad
shl
int
fldl
mov
mov
stos
pop
dec
scas
adc
jecxz
xor
arpl
cmpsl
mov
jl
jae
xor
adc
push
mov
mov
js
iret
dec
cmp
movsb
call
push
and
or
lods
cmp
adcl
into
mov
and
xor
ret
cmp
jp
rcll
int3
aam
mov
das
add
fnstenvs
sti
xchg
push
or
cmpsl
icebp
push
xor
push
mov
int
les
lea
in
cmp
xchg
hlt
xchg
int
xchg
mov
cwtl
mov
xchg
cltd
out
in
cmp
xor
test
ret
jl
pop
mov
xchg
pop
sub
mov
cmpsl
mov
push
jno
cmp
mov
mov
or
add
or
dec
out
sbb
dec
and
inc
adc
in
cmp
lcall
pusha
add
inc
loopne
and
aas
enter
mov
xchg
or
lcall
add
mov
inc
mov
into
stc
movsb
cmp
xor
nop
daa
adc
mov
ficoml
add
stos
sahf
xchg
push
fldenv
aam
xor
int3
out
ja
xlat
pop
cmp
inc
int3
inc
jl
mov
movsb
es
pushf
cmp
arpl
adc
popa
repnz
sbb
xchg
jecxz
pop
fiaddl
scas
mov
jp
lea
call
push
jno
cmp
inc
mov
bound
xlat
imul
inc
sbb
outsb
std
jne
cs
icebp
jb
outsb
sub
push
jp
test
mov
fsts
adc
xor
lret
pop
cmp
scas
push
mov
adc
test
adc
xor
cmpsb
aas
jne
pop
rcll
dec
dec
aas
fnstsw
cwtl
push
jae
jne
mov
mov
cmp
jp
dec
sti
popf
and
insb
jge
mov
fstpl
lock
int
fidivrs
mov
popa
sbb
or
ret
out
mov
xor
sti
shlb
push
xchg
sub
adc
pop
dec
nop
mov
push
int3
dec
and
jne
sbb
pop
sbb
movsl
addr16
clc
push
mov
fildl
std
lahf
test
cmp
jo
cmp
cmp
jecxz
lcall
and
cld
xchg
daa
enter
add
jbe
mulb
push
inc
jmp
fstpl
jle
add
add
je
in
inc
xchg
sub
sbb
xorl
jp
jno
push
lahf
les
int3
mov
sub
mov
out
ljmp
hlt
movsl
dec
ret
and
dec
adc
xor
mov
sarl
loop
lods
call
push
popf
add
cli
addr16
xchg
jne
decl
add
mov
out
popa
adc
cmp
mov
mov
pop
xchg
cmp
call
cmovle
mov
cmp
jl,pt
mov
or
mov
fadds
arpl
or
ja
lahf
je
fdivrs
xor
andl
lds
insl
sub
pop
or
int
inc
or
lds
cwtl
cltd
imul
cli
insl
xlat
xchg
call
call
add
add
lret
loopne
cwtl
ret
ds
jbe
outsb
mov
mov
into
add
scas
xchg
push
jns
hlt
xorl
pusha
xchg
jno
mov
pushf
cmp
mov
adc
test
xchg
xchg
add
push
mov
in
sub
imul
xchg
mov
dec
movsb
sub
dec
or
sbb
xor
nop
inc
mov
xlat
or
inc
les
sub
mov
hlt
push
jno
dec
inc
ss
sbb
popf
les
es
lea
inc
xchg
enter
mov
pop
jmp
decb
cmpsl
dec
pop
add
sub
popa
sub
inc
idivb
xchg
sbb
sub
lcall
cmp
mov
and
inc
cli
sbb
test
loop
cmpsb
and
shll
mov
sub
imul
pusha
les
sahf
repz
imul
adc
inc
or
xchg
test
jo
or
hlt
shrd
inc
bound
mov
or
ja
sbbb
call
dec
pushf
test
push
xchg
negl
mov
insl
sbb
cmp
cmp
repnz
ret
xchg
dec
mov
mov
lods
fmulp
xchg
std
inc
jge
loopne
fucomip
pop
push
dec
sub
pop
add
mov
icebp
cmp
jns
mov
xor
inc
fwait
cvtpi2ps
jo
movsb
push
sbb
rorb
clc
dec
pop
pop
in
sti
inc
jp
mov
xor
or
scas
cli
mov
mov
xorl
jb
push
push
push
aaa
lcall
popf
out
dec
cmpxchg
cmc
cmpsl
addb
shlb
popf
xchg
mov
into
imul
stos
jp
mov
loop
repz
and
dec
xor
mov
jno
ret
idivb
or
or
jbe
arpl
mov
jl
ljmp
aam
rorb
adc
out
and
scas
out
ds
push
xor
mov
or
xchg
ja
xchg
outsl
je
dec
pop
mov
out
sahf
lods
dec
add
inc
stc
aam
push
and
lea
lock
cs
mov
mov
out
ss
movsb
mov
andb
cmp
cli
ljmp
outsb
popf
inc
xchg
xchg
mov
add
lcall
daa
in
mov
xchg
test
dec
xadd
jp
pop
out
pop
lahf
xlat
in
pusha
jns
pop
or
testb
into
sbb
xor
int3
xor
dec
lahf
push
outsb
or
lcall
imul
push
mov
jmp
fwait
les
rcl
rorl
test
xor
cs
fwait
cmc
cltd
mov
mov
jns
ret
scas
sbb
cmpsb
hlt
lods
lret
xchg
jle
jp
fidivrl
mov
or
rolb
das
cmp
jae
sti
mov
in
lods
push
leave
mov
add
inc
sbb
push
dec
jge
inc
pushf
mov
inc
mov
ss
push
sbb
mov
mov
icebp
mov
ljmp
pop
cmpl
movsb
nop
sbb
in
jl
add
xor
dec
mov
add
adc
add
mulb
mov
sub
adc
push
add
mov
lods
push
and
sub
dec
pop
jns
pop
enter
test
adc
push
cmp
hlt
pop
dec
ss
cltd
mov
and
sub
dec
test
pop
sbb
call
arpl
and
test
cmp
mov
cwtl
add
imulb
cmp
dec
pop
test
or
ret
xor
lea
jno
clc
pop
hlt
mov
dec
jbe
jnp
imul
cmp
adc
add
mov
xor
js
cmp
jne
lahf
aaa
adc
fidivrs
out
lret
dec
push
test
ljmp
out
inc
push
cmpsl
jecxz
xchg
mov
shl
int3
mov
cmpsl
js
mov
scas
add
xor
inc
push
and
call
js
loopne
jae
or
sahf
arpl
insb
mov
cmpsl
inc
movsl
push
or
push
mov
mov
pop
int3
insl
mov
push
cmp
xlat
xor
cmp
sbb
sbb
xchg
mov
pop
cmp
ja
insl
js
sbb
int
pusha
mov
jb
dec
or
mov
fsubs
jle
inc
stc
aaa
dec
outsb
sub
dec
scas
lea
cmp
xchg
lahf
push
xchg
pop
push
sbb
cmp
jg
push
push
repz
xor
cmpsb
movsl
leave
out
adc
aaa
cmp
out
jle
arpl
mov
fisubrl
pop
cld
inc
scas
pop
lods
sub
dec
fisttps
arpl
push
sbb
and
movsbl
popl
xor
xchg
fsubrp
vphaddwq
xchg
lock
insb
mov
inc
add
xor
xchg
pop
addb
cwtl
mov
inc
lahf
sub
rorl
add
lret
enter
jecxz
jecxz
scas
push
sbb
mov
incb
inc
aas
mov
scas
dec
es
popf
pop
imul
jnp
aaa
and
jnp
std
ss
cmp
jo
aam
dec
jbe
sbb
xchg
jb
int3
mov
cmpsb
mov
leave
push
lret
push
pop
pop
or
mov
adc
call
push
decl
ret
xchg
inc
dec
jb
inc
adc
fs
mov
pop
sbb
jno
cld
xchg
cmpsl
insl
adc
push
sbb
call
cmp
xchg
push
mov
aam
jae
out
jmp
popf
jge
loope
cltd
pop
rolb
pop
xchg
and
mov
clc
loopne
push
mov
pushl
add
test
push
jbe
xchg
in
js
xchg
nop
sub
cmp
aaa
or
mov
cltd
iret
sbb
aad
int
and
cmp
pop
fbld
sahf
les
jns
aas
ljmp
mov
push
or
adc
mov
aam
cwtl
jae,pn
jecxz
popf
inc
jns
imul
push
jmp
add
fmuls
inc
sub
jb
sub
mov
dec
stc
add
mov
push
shrl
aad
mov
push
and
fs
push
hlt
xchg
daa
xor
rcll
add
xor
insb
mov
pop
mov
call
xor
sbb
movsl
enter
lds
sub
mov
jg
aas
es
lods
inc
jae
push
je
jo
mov
inc
mov
loop
test
cmp
inc
fisubl
outsb
stc
mov
pop
and
xchg
in
inc
in
int3
sti
dec
sub
test
mulw
ret
mov
xchg
ja
das
rcl
xor
stos
pop
insb
sti
fimuls
pushf
imul
push
aaa
or
adc
dec
sub
mov
xchg
call
imul
jecxz
push
sahf
es
push
cmpl
enter
xor
mov
mov
test
sub
inc
sbb
fists
pop
mov
lea
mov
or
mov
clc
lret
inc
xchg
and
dec
js
insb
lret
xor
or
and
loope
pop
mov
fimull
jo
gs
jle
push
fiadds
dec
xor
inc
mov
jl
adc
test
insl
add
and
loop
xchg
xchg
mov
addr16
cld
xor
cmovbe
push
mov
mov
add
sub
lock
mov
dec
xchg
shll
icebp
enter
negb
popf
cwtl
test
fwait
cmp
mov
xor
xchg
stos
push
jbe
pop
dec
xchg
add
push
lcall
into
adc
ss
dec
daa
ret
pop
mov
sbbb
out
hlt
fsub
fldenv
push
push
addr16
xor
adc
pop
stos
mov
inc
dec
jmp
inc
or
out
mov
sub
icebp
adc
mov
add
sub
push
movsl
xchg
sbb
aad
cmp
jns
xchg
mov
jl
repz
xchg
adc
adc
outsb
dec
fidivl
mov
sahf
pushf
mov
mov
outsl
cmp
mov
jmp
frstor
cmc
xor
jg
xor
push
pop
andl
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
add
movl
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jb
mov
mov
mov
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
orl
mov
movzwl
sub
mov
xor
xorl
add
mov
lea
mov
adc
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
push
adc
mov
orl
xor
orl
add
orl
push
or
mov
push
pushl
call
and
mov
movzbl
sbb
mov
mov
mov
movl
mov
mov
lea
orl
mov
sub
movl
movzwl
sbb
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
sub
movl
mov
movl
mov
mov
movl
mov
cmp
movl
je
mov
mov
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
push
call
jmp
mov
xor
orl
div
mov
sbbl
mov
andl
xor
xor
sub
movl
cmp
movl
jne
mov
xor
mov
sub
mov
or
mov
xor
xor
sbbl
add
sbbl
add
mov
movl
cmp
jae
xor
lea
mov
mov
xor
add
lea
movl
mov
mov
mov
cmp
movl
jbe
addl
addl
jmp
decl
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
push
call
jmp
mov
xor
adcl
inc
incl
subl
add
cmp
jb
notl
mov
add
mov
adcl
xor
sbbl
mov
sub
add
sub
mov
sbbl
xor
xorl
sub
subl
ror
xor
mov
xor
add
sub
imul
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
jmp
iret
xor
jne
jns
cmp
mov
inc
pop
mov
jnp
mov
jnp
push
shll
mov
iret
jns
mov
cmpsb
sub
pop
sahf
mov
mov
add
push
jnp
hlt
sbb
subl
push
cs
jae
stos
or
adc
dec
or
repnz
repnz
cs
in
push
cmp
push
popa
lock
lahf
jle
jp
and
stos
jae
rol
dec
adc
jecxz
pop
sbb
xchg
push
sub
adc
adc
icebp
pop
xchg
clc
es
cmp
or
mov
push
jb
dec
sub
pop
pusha
and
or
xor
mov
out
push
iret
sti
jg
mov
roll
cmp
aas
mov
dec
mov
or
and
pop
push
and
xor
mov
stc
rcl
mov
shll
add
jo
dec
je
cmp
std
and
ss
and
dec
add
fisttps
adc
divl
ficoml
fistps
jl
jae
xchg
inc
aas
add
data16
inc
add
addr16
sbb
mov
pop
in
dec
push
adc
mov
cmp
fbstp
movsl
cmp
cmp
add
inc
jp
lcall
sub
fisubrs
fdivs
inc
arpl
cmp
jb
int3
cmp
and
inc
enter
fdivl
jg
ja
mov
push
dec
in
mov
push
xorb
xchg
stos
mov
push
xlat
xchg
test
pop
pop
jle
icebp
jmp
pop
fistl
or
mov
mov
aam
adc
sbb
out
mov
dec
in
enter
scas
cmp
lods
scas
inc
xchg
aad
sub
jae
push
sub
adc
mov
dec
jo
push
leave
aad
cld
lock
mov
jno
or
imulb
leave
add
aad
push
mov
leave
lds
mov
sub
inc
inc
in
sbb
jbe
pop
xchg
clc
fmull
aam
jno
xor
xchg
inc
imul
push
xor
cmc
shl
pop
bound
sub
scas
and
pop
lods
adc
sub
mov
ret
test
sbb
add
test
inc
rclb
adc
bound
addr16
insb
pop
push
adc
imul
js
and
or
js
mov
rclb
pop
pop
pop
cwtl
xchg
jmp
xlat
push
inc
ds
aaa
aad
cmpb
push
pop
repnz
cmpsl
mov
mov
and
loopne
mov
mov
adc
aam
cmp
stos
ss
push
loopne
mov
mov
mov
mov
cmpsb
mov
pop
in
stos
pop
stos
lods
xor
xor
mov
enter
insb
push
mov
repz
ss
icebp
pop
iret
sti
pop
out
pop
xchg
sub
sub
dec
cmp
popa
cmp
push
out
aad
xchg
test
dec
out
mov
divb
xchg
cltd
rclb
orb
mov
je
sahf
mov
scas
imul
inc
lods
mov
dec
std
ret
sbb
mov
js
pusha
movsb
mov
xor
je
mov
and
cmp
mov
out
lods
jo
push
push
push
sti
pusha
sub
mov
mov
lds
jnp
cwtl
jbe
movsl
insl
mov
cmp
push
lret
fsub
es
jns
mov
mov
or
sub
add
lods
pop
pop
sbb
add
cltd
mov
lahf
xorb
mov
cmp
clc
jmp
jnp
stc
inc
dec
lret
mov
clc
movsb
pop
into
sbb
out
lret
loop
fdivs
aad
xor
xchg
or
inc
push
into
lock
test
or
push
pop
jecxz
mov
mov
sub
lea
add
jmp
mov
cltd
ljmp
cmp
sub
in
in
xlat
fwait
dec
sbb
mov
xor
mov
dec
cwtl
adc
add
jl
xchg
dec
iret
mov
idiv
subb
cs
or
mov
dec
cmpsb
mov
inc
in
fisubs
pop
mov
mov
mov
fmulp
cli
mov
xor
jne
cs
jb
jno
or
xchg
sbb
outsb
push
lds
sbb
and
mov
adc
aaa
push
cld
outsb
lds
mov
push
xlat
rorl
push
xchg
pop
mov
xchg
sbb
cld
and
or
lahf
mov
rcr
fsubrs
orl
in
inc
mov
sub
idivl
ss
jmp
push
mov
lret
test
cmp
pop
mov
add
push
aam
jmp
xor
push
mov
pop
add
lahf
in
cwtl
xchg
sub
lods
insl
pop
xchg
sti
xchg
out
fsubrl
or
je
jns
mov
ss
mov
xchg
inc
arpl
pushf
push
insl
pusha
cmp
mov
scas
adc
shlb
gs
ror
loope
jnp
push
hlt
es
insl
sbb
jecxz
inc
dec
sbb
nop
mov
jns
pop
jns
mov
or
std
imul
push
mov
fstps
push
repnz
jecxz
test
cmp
xchg
push
sub
xchg
fistpll
hlt
leave
pop
mov
inc
out
enter
sbb
mov
dec
push
lcall
lods
xchg
and
clc
negl
pop
inc
jbe
int
or
popf
cmc
add
dec
bswap
adc
mulb
in
sub
push
cmpsb
fistpll
adc
lret
or
push
shll
push
mov
xorb
pusha
sarl
pop
mov
mov
jbe
pop
or
sti
test
push
scas
leave
rcrb
cmp
movsb
inc
cwtl
in
jnp
dec
insb
mov
fistps
jns
movntps
xchg
scas
cmp
stos
pop
add
outsb
mov
cmp
lret
aam
and
push
push
stc
inc
add
mov
mull
cmp
inc
mov
sarb
notb
leave
loop
push
mov
xor
popl
pop
sub
mov
pop
test
mov
outsb
out
or
mov
jo
push
cmp
xor
jg
cmc
cmc
negb
popa
popa
jecxz
xchg
jns
mov
data16
gs
loope
jl
xchg
insb
fs
out
add
enter
push
mov
dec
stc
add
mov
xchg
pop
mov
aam
in
jmp
test
jnp
fldcw
push
out
mov
mov
adc
in
cmp
sbb
sbb
cld
stc
dec
out
dec
rorb
shl
outsb
and
int
mulb
dec
ds
pop
jp
data16
fld
pop
pusha
fwait
sbb
xchg
mov
dec
add
xchg
in
cmpsl
pop
sbb
in
and
or
or
scas
sbb
jg
mov
jnp
sub
pushf
unpcklps
xlat
call
add
mov
int
dec
dec
adc
stc
sbbl
repz
sbb
cwtl
pop
mov
fldl2t
inc
sub
or
pop
ret
out
sub
test
ret
cmpsl
mov
insb
popf
lods
add
cmc
inc
push
movsb
xchg
popa
fidivl
out
leave
in
or
push
in
data16
and
std
in
stc
ffree
mov
aam
jae
xchg
mov
xchg
push
stos
inc
lcall
dec
xor
dec
in
stos
cli
dec
loop
mov
lret
lcall
mov
rcrl
inc
adc
loopne
scas
mov
push
inc
inc
jle
hlt
jle
mov
mov
adc
push
fldt
in
jbe
cmp
arpl
cmp
mov
repnz
in
stc
pop
inc
movsl
push
lods
daa
fdivl
fadds
mov
inc
xorb
mov
ret
dec
frndint
movsl
dec
mov
mov
or
dec
ds
jmp
in
inc
cltd
outsl
js
je
cmc
ss
sbb
cltd
addb
cmp
addb
out
cmp
add
int3
push
ds
sbb
xor
call
xlat
in
enter
sbb
adc
ljmp
mov
push
inc
shrl
dec
add
mov
outsl
inc
imul
test
and
push
fisttps
push
daa
fdivrl
test
lods
cmc
inc
mov
xor
sbbb
inc
push
hlt
aad
mov
cmp
scas
es
imul
icebp
mov
fistps
cmp
and
xor
xchg
ds
mov
dec
loopne
mov
lock
or
jge
inc
mov
mov
repz
pushf
cmp
add
in
cmp
in
push
push
xchg
xchg
jp
push
gs
push
jae
pop
jno
push
cmp
popl
cmpsb
adc
jp
push
pusha
nop
cwtl
cmc
pop
aam
adc
cmp
cmp
mov
adc
jg
jmp
xchg
mov
inc
lock
jnp
mov
lahf
inc
push
mov
pop
not
daa
sub
inc
push
dec
pop
adc
mov
mov
andb
scas
mov
inc
push
jge
adc
lock
int3
or
ret
stc
mov
xlat
push
movb
int3
mov
mov
push
out
adc
or
inc
push
mov
imul
or
xor
xchg
ja
xchg
sub
or
sub
lahf
cmp
shlb
daa
ficompl
sbb
dec
rcrl
test
push
int
rclb
jne
aas
pusha
add
pop
jmp
mov
pop
ret
cmpb
mov
push
dec
pop
pushf
mov
fcomp
outsb
dec
jle
in
stos
loop
cwtl
lret
adc
dec
sbb
nop
dec
jg
in
push
xor
in
inc
stos
movsl
lret
xor
mov
jb
test
push
mov
dec
sub
iret
and
mov
pop
and
cmp
push
and
sub
in
stos
scas
add
add
mov
pop
leave
cmpsl
mov
xchg
adc
cmp
rorl
jmp
lock
add
sub
adc
inc
mov
cltd
cmp
xchg
ret
or
xchg
fmul
pop
ja
ret
dec
xchg
cmp
pop
loop
in
and
ror
add
adc
aad
in
sbb
mov
jo
int
dec
inc
mov
mov
adc
jne
jnp
mov
sahf
add
jl
dec
dec
int3
lock
movsb
dec
xor
out
ss
and
jnp
popf
ds
nop
push
bound
lods
or
add
je
dec
dec
int
test
push
fimull
lock
iret
mov
stc
fxch
pop
es
lcall
xor
loop
dec
mov
adc
mov
in
push
adc
push
out
scas
lahf
insb
std
popf
adc
imul
mov
push
xor
dec
jmp
dec
shrb
ret
mov
popa
in
ret
shrl
pop
cltd
popf
inc
addr16
sbb
push
adc
pop
mov
addr16
mov
push
add
xchg
push
imul
hlt
jmp
and
push
sahf
icebp
cli
jle
push
and
imul
inc
lods
sub
sub
orb
negl
sub
sub
dec
jnp
mov
mov
adc
test
xchg
mov
push
push
loope
jmp
cmp
push
cmc
mov
dec
pop
in
push
pop
sub
dec
or
mov
aam
push
adc
adc
mov
movl
loope
push
mov
repnz
scas
fdivl
sub
add
xchg
add
gs
fsts
mov
pop
push
test
outsl
sub
jl
adc
out
sub
jecxz
or
mov
mov
or
or
xchg
les
adc
popf
or
jmp
xchg
push
sahf
add
stc
loope
xchg
xor
outsl
movsb
rcrl
jecxz
sub
pop
pushf
or
mov
dec
xchg
arpl
jae
mov
inc
aam
dec
in
cmp
adc
push
mov
mov
cld
and
aam
clc
sbb
push
incb
cmc
pop
xor
repnz
cld
int3
mov
sahf
bound
and
test
insl
xchg
loope
and
aam
sbbb
in
adcl
ret
popa
popa
aaa
xchg
std
push
push
pop
inc
cmp
iret
scas
dec
in
push
mov
pop
adc
push
cmpsb
jge
ja
int3
addl
shll
pop
push
jbe
dec
xchg
lcall
mov
lret
dec
cmp
in
shll
fwait
jnp
cmpsb
add
and
or
cmp
push
cmp
lods
xor
loopne
xor
in
aam
push
scas
jns
cld
cmc
mov
xchg
adc
cld
or
and
mov
das
sub
adc
mov
jo
pop
inc
les
or
ja
popf
sub
ficoml
daa
mov
inc
fwait
lea
aaa
adc
cmp
add
in
cld
inc
mov
mov
test
adc
adc
xchg
iret
cwtl
lods
mov
out
ljmp
rolb
mov
cmp
out
jg
cmpsl
pop
jge
adc
dec
sub
adcl
in
dec
xor
pop
mov
xor
jo
xor
daa
sub
ss
cmpsl
lahf
push
in
sub
cmpsl
test
mov
and
in
mov
pop
adc
mov
push
push
xchg
lret
push
gs
aam
jg
dec
cmp
xchg
jae
aam
add
or
push
nop
xchg
lods
cwtl
shl
xchg
aam
pop
inc
inc
and
and
push
jg
or
popf
mov
add
push
cmp
add
jns
in
add
add
mov
xor
ljmp
mov
push
dec
add
in
daa
adc
std
ret
daa
push
cwtl
xchg
js
mov
push
dec
iret
adc
lahf
pop
push
aad
sub
sub
jle
cmpb
adc
dec
rcr
pop
pop
incl
nop
inc
aaa
movsl
push
mov
adc
out
loopne
cmp
rcll
cmp
mov
cmp
out
out
mov
sub
aas
mov
loope
jl
push
pushf
jo
sub
mov
cmp
cmpsl
subb
mov
shrb
mov
icebp
filds
in
lds
dec
pop
aaa
loope
dec
popl
inc
iret
xchg
loop
and
call
xchg
loop
outsb
test
cmp
sub
xor
xchg
shrl
dec
mulb
mov
mov
fidivrl
sub
sub
lret
sbb
out
insb
adc
pop
xchg
jecxz
outsl
stos
insl
mov
or
jbe
cwtl
add
sbb
push
pop
and
lret
mov
aam
xlat
pop
nop
and
or
fnstenv
pop
lret
ror
xor
pop
jb
pop
cltd
add
shr
xor
add
adc
fidivrl
push
shll
sub
jmp
loop
push
sbb
add
cmp
stos
jle
mov
push
mov
lods
xchg
add
pop
pop
mov
fucomip
cli
popa
mov
sub
ret
jns
paddq
imul
add
ljmp
xor
push
stos
xor
ja
test
cmpsl
mov
outsl
out
add
mov
and
cmp
fiadds
filds
add
inc
xchg
aad
jg
adc
int
test
push
jg
pop
shlb
adc
mov
out
xchg
adc
sbb
sub
or
push
sbb
int3
jge
mov
and
insb
xor
icebp
ss
lods
dec
lea
fisubrs
inc
pop
inc
adc
adc
sarb
aas
mov
ret
adc
out
filds
xor
cmp
cmp
pusha
aaa
jno
mov
out
mov
mov
enter
hlt
mov
pop
mov
xchg
fadds
and
dec
inc
or
testb
xchg
pop
test
push
xchg
mov
pop
stos
dec
ficoms
pop
add
nop
pusha
pop
scas
loopne
arpl
jbe
sub
xchg
inc
pop
jle
jb
inc
pushf
imul
adc
loop
gs
cmpsl
jo
jnp
xor
adc
aas
insl
cmp
fstl
or
negb
sbb
cs
jb
push
fisubl
mov
cltd
mov
dec
dec
loop
mov
xchg
mov
adc
mov
and
jbe
movsl
mov
jno
ja
pop
movsl
or
sub
test
jnp
les
outsb
mov
cmp
cld
cwtl
out
push
jmp
movsl
mov
test
mov
fbstp
imul
ss
pusha
or
and
dec
flds
flds
mov
mov
inc
fs
fs
sub
add
ljmp
js
add
cs
es
jg
or
add
dec
mov
inc
dec
pop
bound
push
push
jl
lock
aam
adc
push
int3
stos
iret
pop
dec
popa
adc
aam
rcl
jg
sub
mov
outsb
in
pop
clc
pop
rorl
rol
dec
cli
call
and
clc
je
sbb
mov
xchg
jno
inc
inc
test
mov
pop
loopne
inc
test
push
aaa
xchg
fwait
mov
sub
aas
aas
push
push
adc
fwait
inc
leave
andb
repz
orl
mov
adcb
in
mov
push
loope
out
stos
xchg
mov
or
jnp
adc
or
icebp
imul
xor
lahf
inc
pop
testl
cmpsl
jmp
add
jns
imul
jno
and
or
movsl
das
xlat
mov
sub
cmp
out
inc
pop
or
int
fldenv
cmp
rorl
jge
data16
pop
cli
push
jns
fwait
testb
jno
ret
xorl
call
xchg
test
dec
ret
xchg
leave
jne
in
shrb
jae
xor
dec
test
pop
subl
xchg
fldl
hlt
add
mov
pop
aaa
dec
cmpsb
lcall
push
int
sbb
fistps
ljmp
mov
fldenv
lods
loopne
xor
push
push
sbb
push
sub
adc
adc
or
mov
or
sti
mov
ss
jbe
hlt
mov
fisttpll
call
iret
fdiv
sti
lods
jp
icebp
adc
push
inc
mov
mov
mov
rcr
insl
ret
lds
sub
jae
test
jno
sub
iret
jns
enter
rcr
xchg
pop
rep
push
insb
mov
mov
sar
cwtl
jno
pop
xchg
inc
jno
daa
sti
push
inc
mov
pop
shll
mov
push
jl
out
pop
sbb
mov
fiadds
test
lcall
mov
fs
sub
mov
push
cmpsl
push
insl
sahf
sub
dec
stos
xchg
and
mov
addr16
mov
cmp
sub
mov
and
inc
jnp
jnp
shll
int
and
push
dec
scas
gs
out
jo
mov
int3
in
out
mov
cmpb
xor
outsl
andl
and
cmpsb
xchg
mov
lods
xchg
pop
push
lcall
and
or
xchg
pusha
xchg
jp
xchg
gs
fsubrl
popl
je
dec
popf
pop
mov
sub
out
cmc
push
ljmp
and
std
mov
xor
movsl
push
dec
in
leave
inc
jmp
mov
mov
pop
xor
sahf
fisubrl
cmp
sbb
inc
cmpsb
lcall
push
loop
sub
xchg
faddl
pusha
sub
in
push
cmp
sub
sub
insb
pusha
leave
cmp
aas
xchg
mov
icebp
push
push
inc
pop
push
dec
cld
aaa
cmp
inc
push
adcl
cwtl
stc
xchg
push
fcompl
in
shl
sub
dec
jl
outsb
mov
test
or
cmpsb
lahf
inc
cmp
sbb
ret
mov
sub
jae
xchg
xchg
xor
push
adc
cmc
adc
jns
xor
insb
sub
repz
stos
sbb
pop
pop
movsb
jge
test
sbb
push
xchg
ret
in
xchg
push
add
push
jecxz
mov
fidivs
adcl
mov
jnp
fiadds
fistps
pop
push
inc
sti
addr16
repz
enter
mov
sbb
jmp
in
fimuls
loop
imul
lock
fmull
xchg
and
adc
lea
mov
pop
scas
xchg
xor
mov
pop
add
cmp
cmp
out
inc
imul
js
mov
mov
xchg
movsb
jnp
shll
pusha
sahf
jns
std
xchg
push
mov
jbe
int3
adc
fisttps
sub
cmp
pop
xchg
sbb
sbb
ds
test
xchg
xchg
mov
xor
ret
fdivrs
lret
enter
cli
dec
push
adc
xchg
out
nop
and
mov
xchg
movsb
inc
add
mov
cwtl
jno
push
stos
inc
popa
call
sti
es
adc
icebp
add
cmpsl
xor
test
jae
pusha
adc
push
into
dec
dec
lahf
xor
pop
mov
jbe
xor
push
push
or
xor
sahf
lock
imul
inc
shll
sti
sbb
dec
addb
pop
mov
sahf
repnz
ret
mov
rcrb
mov
push
cwtl
or
mov
std
fdivrs
into
jbe
outsb
les
mov
mov
cltd
or
and
adc
xlat
cmp
jbe
gs
scas
or
ret
jae
dec
mov
sbb
repnz
repnz
push
xchg
or
fimuls
pop
sub
sub
mov
sarb
xchg
inc
cld
out
rol
jge
pop
pop
sti
sarl
movsb
jmp
fdivrl
dec
loope
mov
jns
nop
movsb
inc
enter
lahf
std
xor
push
inc
lods
pop
sub
inc
mov
lcall
fmuls
push
adc
dec
mov
cmp
cld
rorl
in
out
ss
divl
adc
aad
jb
inc
jg
loop
add
mov
je
and
mov
xor
add
mov
adc
or
mov
sahf
lcall
pop
outsb
shll
mov
push
xlat
add
std
pop
test
lcall
adc
decl
mov
pop
push
loopw
xor
xchg
dec
in
pop
mov
sti
mov
int3
or
ret
jb
pinsrw
ret
inc
inc
push
int3
and
jne
or
addr16
mov
push
nop
outsb
xor
lcall
cmc
hlt
test
into
dec
cwtl
pusha
sbb
iret
adc
inc
cmp
movsb
jge
push
mov
cmp
or
andl
sbbb
test
pop
pop
fimull
push
fdivrl
out
push
rcrb
sub
mov
xlat
mov
imul
push
mov
test
mov
pop
ljmp
sub
sti
mov
idivl
pop
mov
dec
push
and
in
mov
jmp
cmp
loopne
sub
mov
in
jno
cld
jnp
mov
inc
sub
cmpsb
cmp
and
std
lods
in
sbb
dec
in
or
xor
and
mov
cmc
lahf
loop
divb
nop
dec
clc
adc
mov
cli
dec
repnz
out
cmpsl
leave
movsl
mov
sbb
pop
mov
hlt
jnp
and
or
or
dec
mov
sti
rcr
in
lods
mov
aas
pop
dec
sbb
jno
insb
dec
pop
scas
in
daa
mov
jae
repnz
stc
sahf
sahf
xchg
sbb
sbbl
insb
cli
jge
or
add
sub
jnp
stos
cwtl
jp
cwtl
inc
jg
mov
rorl
and
leave
sbb
sbb
xor
xor
sbb
push
sub
xchg
pmaddwd
imul
and
cld
fiadds
dec
js
mov
adc
mov
cwtl
std
jnp
mov
jl
jg
in
mov
xor
ret
stos
int
inc
popa
push
xchg
jnp
xchg
sbb
jae
jnp
ret
data16
or
xchg
xchg
and
mov
js
push
dec
xor
inc
push
test
inc
push
xchg
in
adc
dec
mov
scas
sbb
cwtl
and
mov
ljmp
out
lock
and
js
iret
shrl
insb
inc
inc
sub
insl
dec
inc
es
icebp
arpl
xor
outsl
fdivrs
mov
dec
mov
inc
xchg
fisttpll
sub
out
movsb
jl
jp
outsl
or
fsub
into
sbb
bound
mov
xor
loopne
sbb
ss
dec
loope
push
jne
rcl
mov
test
cmp
push
cmp
sub
dec
stc
cmpsb
inc
enter
data16
lods
daa
fidivl
inc
xor
inc
lods
cltd
or
mov
jp
jp
adc
push
dec
xor
std
jge
dec
inc
sbb
adc
inc
pop
cwtl
cld
or
push
mov
mov
enter
mov
xchg
adc
cmpsl
mov
pop
fsubr
mov
jne
or
fwait
inc
pusha
and
aaa
jecxz
out
add
add
push
gs
pop
loop
cwtl
in
dec
xor
inc
sbb
cmp
and
int
clc
push
inc
ja
adc
and
adc
jg
movsl
dec
and
scas
inc
jle
inc
jb
lock
insb
push
bound
mov
xor
push
decb
add
inc
adc
dec
mov
jno
sbb
stos
and
push
cmp
arpl
fcomps
addr16
out
adc
xchg
fcom
in
sbb
fldcw
es
and
or
pop
sbb
mov
push
mov
pop
call
jmp
mov
push
shrl
jp
add
clc
fwait
inc
jle
jmp
dec
xchg
push
adc
shr
shrb
mov
xchg
push
stc
les
mov
loop
mov
mov
daa
mov
or
mov
dec
popa
loop
inc
mov
cmp
int3
jns
cmp
dec
test
pop
out
jp
movsb
sbb
jecxz
xchg
scas
int
stos
fwait
inc
mov
js
cmp
adc
shlb
movsl
mov
xchg
cs
les
or
mov
dec
xchg
xchg
mov
mov
arpl
jmp
and
dec
mov
sbb
in
pop
addl
aaa
outsl
iret
cmp
scas
mov
push
movsb
mov
push
aad
mov
jp
stc
popf
xor
or
test
das
sub
fwait
jae
pop
adc
mov
inc
adc
rclb
fs
add
cltd
mov
int3
jp
add
pop
mov
sub
mov
fstl
int3
cwtl
loope
outsl
mov
nop
pop
sub
hlt
sbb
repz
dec
test
fsubrs
bound
push
call
add
stc
pop
test
jmp
enter
insl
cmp
cmc
hlt
sbb
add
inc
int
cmp
cmp
insb
jbe
xchg
ljmp
mov
aad
lret
push
nop
sbb
jbe
adc
xor
or
test
xor
mov
stos
mov
ret
mov
add
or
sbb
xlat
cmp
dec
dec
fsubp
adcb
shlb
xchg
in
negb
popa
enter
fcmovnbe
jae
inc
mov
cwtl
and
xlat
jae
inc
xchg
movsl
xchg
xchg
les
push
adc
push
add
or
mov
pop
jge
loopne
lret
mov
mov
shl
cltd
fistpl
add
xlat
adc
mov
jmp
push
lret
xchg
mov
sahf
ljmp
imul
inc
push
movsb
addb
cmc
push
bswap
and
mov
push
scas
das
stc
xchg
fdivl
or
push
scas
xchg
adc
popf
push
push
std
jo
inc
loope
mov
shrl
daa
lock
dec
imul
pop
sbb
cmp
cld
jl
jno
adc
dec
mov
sub
xor
mov
adcl
push
pop
bound
lcall
ret
les
loopne
jbe
xchg
mov
inc
and
jg
lock
mov
fstpl
sti
sbb
call
add
xlat
pop
hlt
jle
jno
xchg
dec
lods
addb
adc
push
jl
test
inc
pop
repnz
loopne
xor
iret
xor
xor
pop
mov
push
inc
data16
dec
push
push
mov
mov
ljmp
outsl
xchg
outsl
mov
mov
mov
add
jmp
jnp
push
in
jno
out
test
out
test
mov
or
inc
popa
sbb
adc
sub
cmp
out
sbbb
or
sbb
sub
jecxz
cmp
insl
sbb
mov
call
and
fbstp
sub
jle
dec
push
xor
sbb
xor
jmp
xor
les
mov
mov
adc
cli
xchg
leave
xchg
fsubs
repnz
pop
pop
push
leave
push
or
pop
adc
iret
hlt
cmp
sbbb
mull
lock
pop
data16
call
xor
mov
or
mov
mov
mov
xchg
rcll
cmp
mov
push
push
stc
cmp
rcrb
imul
mov
into
repnz
sbbl
int3
jecxz
aaa
popf
push
cs
ret
popf
xchg
or
shr
xor
fxch
fcmove
das
sub
jns
dec
filds
call
lock
mov
or
mov
hlt
idivl
pushf
int
cmp
shl
or
addr16
pop
out
and
movsb
xlat
push
push
cli
cwtl
arpl
inc
mov
icebp
call
mov
inc
rcr
fsubrp
popf
mov
sub
add
into
loop
adc
xor
sub
mov
mull
push
xchg
nop
stc
push
pop
popf
adc
pop
shrb
test
ds
inc
and
inc
lea
lcall
cli
inc
aam
ret
push
ds
js
lahf
into
sub
in
push
std
in
aaa
and
pop
lock
stos
inc
popa
push
pop
ret
lretw
pop
jae
rclb
adc
gs
jae
les
push
sub
outsl
int
mov
loop
or
and
rcrb
adc
or
push
hlt
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
jmp
add
test
pop
add
push
popf
and
sub
jnp
mov
jnp
add
lods
and
mov
inc
mov
sub
iret
push
pop
lds
xor
dec
cmp
enter
adc
pop
mov
ljmp
fucomi
pop
daa
pushf
mov
leave
mov
mov
adc
in
enter
jle
xchg
mov
cs
andl
jmp
sbb
das
mov
pop
xchg
scas
fcom
and
pop
pop
jmp
sahf
arpl
jl
mov
xchg
mov
je
insb
rcrb
imul
es
jb
pushf
xchg
xor
cltd
sbbb
sbb
mov
sub
popa
movsb
jge
or
in
xchg
mov
int
leave
mov
cmpsb
cld
sub
test
popf
xchg
adc
loope
push
xchg
cmp
aaa
insl
inc
mov
jbe
and
pop
cmp
stc
xor
fs
mov
stos
in
idivb
fdivrl
mov
xchg
bound
mov
xchg
xor
stos
cltd
mov
stos
jg
jnp
fsubs
jp
add
mov
mov
xor
out
cwtl
mov
stos
lea
jne
inc
jge
out
fcompl
adc
mov
push
jp
popf
cmpsb
rolb
inc
iret
cmp
lods
lret
cmp
andl
add
cmp
cwtl
and
sub
addr16
loop
xlat
repnz
add
outsb
insl
shrl
xchg
sub
or
jle
jne
jge
leave
popa
in
xchg
cmp
lret
and
sub
loopne
lcall
cmp
xchg
fmul
dec
jmp
scas
sub
mov
loop
jnp
lcall
mov
cmc
mov
pop
fstl
cmp
mov
aad
or
and
pop
pop
xor
xor
sbbb
add
cltd
mov
sbb
xadd
sub
roll
dec
outsb
lcall
mov
mov
cmpsl
jecxz
pushf
idivb
loop
mov
inc
mov
jmp
fnstcw
pop
push
jp
push
inc
ret
inc
mov
jnp
cmpsb
loope
mov
bound
fnstcw
mov
adc
andb
inc
sbb
adc
fstp
into
ljmp
scas
and
inc
or
stc
sub
mov
adc
jle
fsubrs
lahf
mov
sub
pop
sub
jecxz
jns
mov
or
cld
addr16
loopne
stc
push
sbb
cli
movsl
adc
and
ljmp
sahf
pushf
sub
push
daa
dec
fcompl
or
xor
in
xcrypt-ctr
cmpsl
sbb
cmp
xchg
mov
in
das
insb
xchg
orl
call
mov
inc
shll
pop
and
stc
test
lahf
xor
nop
testl
mov
sbb
in
or
fdivrl
mov
jmp
mov
xorb
gs
into
js
pop
jo
mov
mov
xchg
vpmulhuw
dec
insb
daa
cltd
adcb
movsl
in
popa
jb
pop
mov
mov
push
push
jle
pusha
jbe
rcl
mov
xchg
gs
pop
pop
mov
sahf
js
dec
xorb
fdivp
sbb
into
mov
cmc
dec
push
lock
shrl
push
fs
xchg
jl
push
ja
xor
call
pop
addr16
sbb
sbb
insl
mov
cmpsb
dec
shrb
cmp
data16
xor
nop
inc
inc
adcl
aaa
das
das
push
sub
push
mov
xor
mov
ja
xchg
mov
out
int3
std
cmc
aaa
xchg
push
adc
iret
dec
sbb
inc
movhlps
mov
loope
xchg
loopne
aaa
cmp
push
cmp
lahf
mov
xchg
mov
stos
xchg
inc
sbb
push
aaa
into
push
cli
rcrb
sbb
xchg
repnz
faddl
subl
pop
popa
scas
jnp
cmp
inc
add
sbb
mov
mov
jl
movsb
mov
mov
push
lret
dec
mov
or
subb
dec
cmp
lds
stc
mov
sarb
out
mov
ret
and
ffree
adc
fdivrl
sub
mov
out
xor
or
lods
or
out
aaa
dec
iret
xor
out
mov
in
ret
add
pusha
ljmp
lcall
cli
das
inc
mov
add
out
push
jno
or
or
out
adc
jmp
mov
std
jecxz
jnp
std
cmp
inc
push
rcl
divl
jbe
popa
outsl
sarb
leave
cmc
sub
outsl
add
dec
xchg
jb
pop
in
inc
mov
sbb
push
insb
jnp
rcl
das
xchg
or
push
sub
scas
push
clc
pop
mov
adc
std
arpl
cmpsb
pop
mov
inc
fisttpl
lret
sbb
jge
dec
jo
scas
sub
hlt
mull
fistpl
add
inc
mov
sub
pop
mov
xchg
mov
fsubs
fs
cltd
inc
and
rcrl
fmuls
xchg
jbe
inc
mov
les
sub
daa
push
push
dec
fbstp
mov
dec
adc
out
mov
or
jp
xor
test
jnp
lock
mov
bound
lds
ljmp
pop
sbb
iret
cld
dec
aas
fdivs
sti
mov
int3
outsl
fisttps
je
negb
cmp
sbb
in
les
test
jns
mov
popa
iret
jp
int3
test
jle
add
cmpsb
test
jmp
std
pop
inc
imul
pop
or
sub
jmp
lcall
scas
push
mov
scas
jo
xchg
stos
sbb
add
mov
leave
stos
dec
or
out
or
pop
xchg
pop
loop
fisubs
in
fmuls
xor
mov
cld
loopne
fimuls
jae
ss
cltd
cmpsb
dec
jbe
cli
out
jae
test
inc
push
sbb
dec
fdivrl
sub
xchg
data16
pop
adc
xor
jae
je
sub
sbb
je
movsb
pop
mov
mov
call
cmp
pop
in
stos
ret
pop
add
sub
sub
mov
cltd
shl
mov
push
sahf
addr16
sbb
cmp
lret
shrb
xchg
test
jnp
or
in
jl
pop
push
ljmp
or
imul
xchg
idivb
ljmp
in
dec
daa
loope
xchg
inc
mov
jl,pt
xchg
xchg
mov
call
sub
jg
lcall
scas
and
imul
cmp
xchg
subb
or
xchg
dec
les
mov
or
movsl
dec
inc
or
hlt
in
mov
inc
xor
dec
loope
cmp
inc
call
mov
pop
jecxz
push
mov
sub
cs
xor
leave
and
js
das
jecxz
jecxz
dec
adc
jne
dec
jns
inc
cmp
and
and
add
into
push
pop
jo
adc
jne
mov
and
lods
enter
int3
shr
jmp
es
loope
flds
fcomps
add
add
push
cmp
out
xchg
in
push
add
jns
outsl
and
cmp
mov
push
sub
lcall
iret
fwait
mov
mov
xor
int
ficoml
stos
mov
pop
mov
lock
xchg
sahf
sbb
jecxz
lods
or
inc
mov
mov
pop
jae
jmp
addr16
lret
movsl
sbb
mov
fldt
ret
sbb
imul
test
mov
push
pop
xorl
sub
pop
or
inc
jge
cmp
mov
pop
loop
and
fdecstp
and
xchg
sahf
cltd
vmread
ljmp
lods
pop
xor
test
add
scas
shrb
push
lods
movl
mov
mov
cmp
cli
cmc
jmp
xchg
lret
rcrl
mov
mov
inc
stos
ss
in
xor
mov
das
or
loopne
dec
mov
pushf
xchg
push
sbb
sti
hlt
outsb
sub
flds
hlt
cmp
xlat
inc
push
fnstsw
aas
fucomp
xor
mov
call
sti
sbbb
push
dec
stos
out
test
jnp
push
loop
add
test
gs
adc
divb
pop
inc
pusha
or
les
pop
dec
call
clc
in
lods
ret
xchg
jbe
ljmpw
sub
mov
mov
jl
push
fadd
or
imul
in
loop,pn
bound
mov
mov
mov
nop
hlt
mov
cmp
dec
push
push
out
inc
cs
sbb
push
push
cld
lods
testb
dec
push
pushf
xlat
push
mov
xchg
sti
pop
jp
pop
push
jno
fdivrs
jno
cmc
push
sbb
stc
sub
push
inc
cmp
or
mov
ficoml
insl
insl
lods
push
test
addr16
jne
add
shl
ja
fimull
lcall
fcomip
enter
aas
aad
fmul
das
mov
test
push
or
loope
push
dec
pop
fadds
pop
xchg
cwtl
das
in
mov
cmp
fcmovnb
dec
xlat
sub
enter
add
mov
sbb
pop
push
out
xchg
mov
xor
icebp
and
jbe
add
fbstp
ljmp
xchg
mov
dec
push
add
cmpsb
inc
fstpl
movsb
das
mov
sbb
je
mov
cli
sub
cmc
shlb
or
scas
mov
or
bound
test
xchg
subl
aam
pop
cmc
ss
xor
ret
sbb
mov
dec
push
int3
pusha
movsl
sub
mov
shll
jl
je
sbb
scas
adc
vmread
mov
pop
mov
test
inc
cmp
xchg
sub
and
out
mov
lret
out
scas
out
jg
dec
daa
xor
jnp
adc
mov
mov
push
cmp
add
pop
iret
jne
in
aad
mov
sub
dec
sbb
jae
in
sub
or
mov
add
and
iret
out
mov
fcompp
lret
adc
imul
fsubs
jae
mov
cmp
out
jecxz
in
lds
daa
sub
and
shlb
scas
js
call
pop
cltd
stos
or
mov
test
adc
decl
sub
push
push
aad
ret
xor
jno
cld
xchg
jecxz
dec
mov
lock
sub
insb
mov
push
sub
jo
adc
mov
sbb
repnz
rolb
sbb
jbe
push
xchg
test
ja
pop
push
and
fldl
xor
push
jl
xchg
outsb
lock
das
adc
ds
push
pop
or
adc
adc
nop
es
adc
arpl
daa
flds
or
pusha
inc
fs
mov
pop
mov
dec
fiadds
repnz
lds
shrl
fs
popf
ret
repz
cmp
cmp
fxam
jmp
adc
jo
into
inc
cmc
jle
pop
lds
int
popf
clc
movsl
adc
pop
pushf
ror
push
xchg
add
js
std
mov
jbe
enter
or
xlat
call
dec
pop
or
xlat
test
pop
sarb
sub
sbb
daa
xchg
ret
mov
inc
scas
mov
add
enter
imul
loope
icebp
pop
adc
push
in
jecxz
arpl
push
adc
out
in
cmp
mov
mov
sbb
pusha
mov
xchg
daa
bound
xchg
imul
roll
roll
int3
pop
nop
in
mov
test
push
call
xlat
out
repnz
out
mov
outsb
scas
in
pop
inc
push
je
xor
cmc
or
and
lret
add
cwtl
outsb
sti
je
sbb
je
inc
push
mov
inc
cwtl
mov
inc
mov
add
mov
xor
push
cmp
adc
sahf
sti
mov
mov
mov
ret
aaa
mov
pushf
push
ja
mov
or
es
test
int3
fcompl
adc
inc
lcall
loope
repnz
ret
xchg
orl
into
andb
inc
icebp
sub
jge
add
dec
mov
insl
out
push
lret
add
stos
aaa
aaa
push
aam
mov
movl
or
shlb
out
push
inc
movsb
xor
lret
scas
sub
adc
inc
int3
xor
cwtl
loope
jg
aaa
in
xor
stc
fs
inc
inc
inc
mov
imul
out
sti
xchg
stos
xchg
subl
cmc
mov
rcll
in
ficoml
aaa
push
mov
dec
push
scas
cmpb
cmp
push
loopne
push
inc
xlat
push
dec
xor
es
stos
pop
ficoml
fadd
in
adcb
sub
push
fcoms
movsl
xor
push
sub
mov
mov
test
inc
push
mov
pop
data16
ficompl
scas
mov
rcrb
pop
xlat
stos
xchg
in
arpl
in
pop
sti
shl
in
out
and
xchg
rolb
sbb
lods
pop
add
cli
jg
pop
xlat
lea
sbb
icebp
lret
or
push
pop
push
test
sub
jae
xchg
addr16
mov
aad
bound
in
lret
xchg
nop
pusha
lcall
or
jp
gs
dec
sub
lret
enter
fdivs
andl
mov
jmp
scas
xchg
ret
mov
mov
sub
rorb
sbbb
adc
stos
int
lods
mul
xor
mov
sub
rorb
les
cmp
mov
or
jle
negb
adc
xchg
or
pop
sub
mov
orb
jmp
ss
lahf
sub
sbb
sbb
push
pop
sub
sbb
std
hlt
ja
xchg
movsl
pop
xchg
int
sbb
ss
ss
iret
pop
and
idivb
pop
pop
mov
int
xor
out
sbb
int
out
jnp
lods
negb
fidivrs
arpl
cmpsb
jl
push
pushf
in
test
mov
add
adc
fsubrs
stos
movsl
push
imul
adc
lahf
mov
data16
lahf
inc
fdivs
insb
dec
mov
pop
jecxz
lea
outsl
jl
stos
inc
mov
nop
add
xor
dec
sbb
addr16
lea
mov
jl
xor
mov
lods
mov
popa
daa
and
enter
les
lcall
adc
int
test
jnp
outsb
fucom
pop
ret
sub
mov
jbe
mov
lods
enter
aas
pop
call
jnp
jg
das
jae
pop
push
in
mov
mov
cmp
pop
xchg
lds
jecxz
cmp
icebp
cmp
lret
xor
hlt
jo
shrb
cli
mov
sbb
jl
and
inc
jmp
icebp
sbb
stc
lods
and
jns
mov
add
cmp
in
add
ljmp
mov
and
not
pop
ret
lret
xor
cmpsb
in
push
nop
xchg
imulb
daa
mov
sbb
inc
adcl
xorb
pop
sub
sti
bound
addl
fdivl
push
jns
mov
fwait
repnz
push
dec
xchg
outsb
push
mov
jl
cmp
pop
adc
out
daa
ror
sti
jl
and
cmp
out
jnp
fnstcw
std
jnp
fidivl
xor
lock
insb
jge
lods
fdivl
and
mov
cli
add
addl
scas
push
std
push
loop
ret
xor
xlat
xchg
ret
stos
mov
push
dec
xchg
icebp
pop
repnz
pop
and
jo
out
into
push
pushf
cwtl
jo
add
push
aas
mov
xchg
ss
jne
mov
adc
lahf
or
lods
mov
cltd
test
hlt
stc
cwtl
mov
lea
sbb
stos
cmp
sbb
mov
xchg
and
or
orl
fildll
and
cs
fwait
inc
mov
data16
pop
sbb
outsl
add
fs
js
mov
outsb
flds
mov
sahf
iret
add
sbb
mov
ljmp
jecxz
clc
cmpsb
pop
pop
icebp
mov
cmpsb
fnstcw
sub
cs
mov
cmc
pop
push
pop
into
sub
dec
insl
mov
test
or
dec
sub
add
xchg
daa
lods
aad
pushf
adc
xchg
pop
mov
fnsetpm(287
mov
add
xor
lret
push
cmp
pop
hlt
pop
sub
ss
repnz
outsb
vunpckhpd
stos
and
hlt
leave
xchg
les
or
sub
lock
sub
dec
insl
add
sub
jnp
xchg
cmp
mov
pop
shll
or
push
lea
cmp
ret
inc
xor
cmp
test
inc
aam
mov
gs
fcompl
insb
ret
pop
mov
das
lahf
push
out
add
jo
mov
cmovs
and
sbb
subb
and
aas
or
push
xor
mov
push
jmp
adc
jae
les
push
jecxz
jne
leave
adc
sbb
mov
js
rorl
filds
inc
sub
lret
xor
into
pop
movsb
nop
mov
ret
and
ljmp
aam
cmp
xchg
dec
and
xchg
nop
in
imul
sbb
cmc
gs
push
sub
fdivs
lret
bound
mov
popf
fiadds
push
stos
pop
jle
rclb
mov
insl
sti
test
add
fmul
cmp
lcall
call
pushf
jecxz
test
test
push
into
stos
xchg
stc
or
insb
loop
les
jae
and
dec
dec
sahf
ljmp
jl
leave
push
gs
repnz
pop
lret
cmpsb
repz
or
mov
xchg
and
in
stc
and
inc
in
mov
and
xor
or
mov
add
pushf
in
data16
inc
push
cmp
in
leave
mov
les
jge
nop
das
outsb
out
cmpl
push
xor
fwait
imul
sarl
dec
or
in
push
cld
nop
and
add
lock
mov
mov
push
push
ret
andl
lcall
sbb
mov
ret
lahf
pop
push
or
dec
adc
lea
int3
mov
or
or
dec
sub
into
push
ljmp
in
sbb
mov
jbe
fisubl
mov
sahf
cmp
jnp
xlat
loope
inc
push
push
mov
cmp
jg
jae
pop
sub
hlt
pop
pop
inc
iret
jecxz
dec
aas
scas
or
sub
push
sbb
in
lds
cltd
mov
push
xchg
ss
gs
push
lcall
mov
pop
pop
out
in
aas
gs
mov
imul
ret
das
mov
jg
pop
cltd
lds
shlb
mov
lock
xor
in
cltd
inc
data16
add
addr16
mov
cld
add
addl
jge
xchg
mov
push
jl
mov
je
pop
ds
push
inc
jmp
cltd
sahf
inc
xchg
adc
testl
popa
rorl
or
test
rcll
test
loopne
pusha
jecxz
jmp
mov
leave
push
push
or
inc
push
xchg
mov
add
jg
cmpsb
push
xor
mov
sub
jg
mov
scas
insl
hlt
sbb
into
fldt
sahf
push
das
adc
imul
sbb
dec
jb
jnp
int
fmull
mov
rcrl
xor
sub
hlt
lods
xor
add
and
sbbb
jnp
repz
add
pop
jg
mov
inc
add
jno
nop
sub
outsl
test
cwtl
ljmp
filds
add
add
leave
lods
mov
insb
scas
clc
dec
sub
rclb
jl
inc
stos
cmpsl
cmpsb
lahf
sub
sub
sbb
or
jle
addr16
mov
xor
leave
xorl
nop
or
push
loopne
ja
stc
lds
xchg
scas
adc
aas
clc
or
popf
mov
call
push
aad
inc
mov
ljmp
mov
push
jnp
mov
jnp,pn
adc
sahf
bound
mov
fsubs
nop
jle
pop
imul
push
lcall
adc
cmc
bound
ret
or
add
dec
idivb
adcb
jno
xor
movsb
cmp
lea
mov
dec
outsb
cmc
call
xchg
sbb
insl
int
sub
rorb
add
aad
fldcw
sahf
pop
pusha
fisttpll
dec
outsl
es
xor
iret
pop
inc
jl
cmp
out
push
sub
sarl
subb
xchg
pop
or
inc
push
fcompl
outsb
iret
das
fistl
sbb
sbb
sbbl
jmp
jmp
jmp
xor
cmp
or
mov
stc
pop
cmpsb
lock
sub
xchg
xchg
jg
stc
mov
xor
and
mov
xchg
push
xchg
adc
dec
jno
bound
xchg
jno
jmp
jmp
dec
ret
out
test
insl
xor
out
aaa
lret
fnsave
fildll
xchg
xchg
out
xchg
and
fmul
faddl
test
push
jle
int3
andb
stos
imul
pop
lock
dec
push
dec
push
ds
mov
inc
sbb
fdivrl
xchg
inc
aam
loopne
jge
imul
jo
pusha
ret
pop
mov
fsts
aad
pop
dec
and
addr16
pop
sbb
loop
push
inc
inc
mov
sahf
jmp
adc
inc
hlt
inc
jno
aaa
or
and
bnd
sbb
pop
stos
divb
jle
mov
sbb
mov
mov
les
adc
jl
test
or
clc
dec
int3
mov
jns
sahf
mov
scas
testl
push
test
and
mov
xchg
jp
cwtl
or
out
hlt
mov
add
inc
fsubr
pop
pop
pop
xor
fdivrs
pop
popa
sarb
mov
or
mov
adcl
mov
xor
enter
sbb
xchg
insl
inc
sbb
inc
or
in
movsb
inc
leave
movsb
ds
jbe
loope
pop
sub
lock
push
les
dec
xchg
cmpsb
negl
push
stos
loopne
mov
push
pop
cltd
dec
bound
adc
dec
pop
and
cmpl
xorb
jmp
rclb
push
pop
mov
dec
mov
fnstsw
jmp
fsts
lods
cmp
insb
loop
push
jmp
test
dec
cs
mull
mov
xchg
in
mov
andb
rcrb
enter
mov
xorb
jns
fldt
mov
sbb
cmp
fwait
loope
les
xchg
push
mov
rcr
sahf
jb
jle
mov
je
repz
xchg
mov
int3
int3
pop
lea
int3
pushf
xchg
pop
push
add
xor
sarl
cmp
mov
adc
adc
outsl
mov
pusha
std
dec
pop
mov
pop
test
call
mull
xor
xchg
inc
mov
push
outsl
in
fidivrs
mov
jns
imul
mov
and
arpl
mov
xchg
inc
mov
lret
and
fdivs
mov
cmp
mov
add
hlt
push
icebp
jg
dec
push
in
xor
stc
sub
movsb
fisttps
mov
xchg
jne
enter
aaa
sbb
es
sbb
test
cmp
inc
sbb
mov
lock
xchg
inc
push
ret
push
lea
xchg
pop
jo
jae
leave
cld
xchg
fcoms
lahf
movsl
movsb
leave
dec
push
or
xchg
cmp
cmp
adc
ds
push
cld
mov
ret
arpl
cmp
cmp
orl
int
ds
sbb
sbb
push
fsubs
hlt
sbbb
push
mov
out
gs
xchg
filds
sub
jb
pop
lret
sbb
repnz
mov
jp
or
clc
in
mov
or
and
int3
repnz
mov
test
shl
fwait
pop
movsb
out
push
fldl
xchg
imul
in
xor
push
mov
cwtl
push
add
and
inc
mov
pop
pop
push
jne
nop
adc
or
dec
jnp
add
inc
in
and
mov
dec
add
cld
call
add
nop
dec
xchg
jae
hlt
dec
sar
mov
sbb
pop
das
push
fsubl
and
mov
std
js
lcall
repnz
mov
cmp
jb
outsb
push
out
jnp
es
es
push
fs
cmp
sbb
or
push
sbbb
dec
push
loop
or
push
lods
push
rclb
sub
pop
xchg
ljmp
dec
mov
jns
data16
inc
pop
fwait
inc
incb
test
sbb
xor
xor
ss
in
andl
test
mov
and
pmaddwd
imul
xor
jecxz
pop
jmp
nop
sub
stos
mov
add
loope
into
sub
stc
aad
push
ljmp
data16
jmp
ss
in
xor
mov
or
mov
add
xchg
test
adc
mov
clc
cmp
jl
xorl
pop
arpl
inc
rorl
fwait
cmc
inc
sub
jne
mov
aaa
int
lods
outsl
arpl
dec
in
repz
mov
cmp
movsl
jle
xor
add
imul
data16
mov
sbb
fs
lcall
shlb
cmp
nop
rcrb
jge
jp
mov
lods
push
lock
jo
pop
push
add
push
je
and
xlat
push
pop
out
push
lret
ror
jne
sbb
aaa
stc
out
or
into
push
loope
dec
mov
fidivrs
int3
pop
sbb
ljmp
arpl
movsl
mov
push
fmull
dec
xchg
sub
lsl
lods
mov
arpl
and
xlat
jo
sarb
mov
pop
std
xor
gs
dec
mov
std
ss
dec
push
sub
lds
pop
cli
in
stc
in
pusha
std
ficomps
and
test
mov
out
mov
mov
cmp
test
sub
pushf
sub
arpl
pop
pushf
ret
test
aaa
sub
dec
sub
xchg
or
shll
rep
in
mov
ss
mov
lods
sbb
pop
push
loope
shlb
clc
loope
ljmp
cmp
pop
sbb
mov
out
cmp
imul
xchg
test
gs
pop
push
cmpsb
xor
int
leave
xor
enter
orps
dec
lahf
lods
insl
repnz
pop
daa
ss
fisubrl
push
in
adc
fimull
arpl
rolb
and
push
js
js
and
mov
add
outsb
mov
sbb
sahf
popf
push
push
lea
decl
insb
and
push
stc
inc
insl
pop
js
pop
mov
push
add
push
mov
xchg
lcall
movsl
imul
push
xlat
daa
arpl
lds
or
and
fwait
pop
xor
push
pop
mov
test
or
mov
imul
jbe
cltd
xor
jno
aam
scas
rclb
shrb
ret
inc
lods
outsb
sub
jl
aas
or
mov
xchg
in
inc
xlat
mov
xchg
mov
mov
scas
jb
add
jno
add
adc
adc
push
pop
int3
cmc
dec
aaa
std
push
cmp
out
fmull
sbb
jae
push
lcall
movsl
dec
cmp
pushf
mov
push
fstpl
sbb
lods
lods
mov
jmp
mov
shrb
rolb
cmp
int3
and
fsubrs
sub
pusha
test
je
dec
add
push
sub
mov
mov
inc
scas
pushf
pop
or
cmpl
scas
inc
pop
scas
sub
pop
scas
sub
repz
cmpsb
adc
pushf
fimull
dec
rclb
call
add
xorb
pushl
insl
aam
int3
loopne
repz
popf
pop
mov
sub
fsubp
leave
cs
add
add
sbb
xchg
mov
pushf
rep
test
in
addr16
lret
mov
mov
ret
movsl
sbb
adc
and
jle
aaa
sarb
test
outsb
cmpsl
fdivs
pop
daa
jl
xchg
inc
fwait
add
add
mov
insb
xchg
loopne
cmc
lcall
mov
mov
fwait
cmp
movsb
movsl
xor
adc
cltd
ret
ds
sbb
xchg
ja
jbe
lcall
cmpsb
sbb
push
adc
push
jne
fsubrs
es
imul
and
push
jge
mov
sub
pop
and
xor
inc
adc
sahf
add
ret
imul
scas
jl
sub
adc
fdivrl
test
insb
addr16
xor
push
xor
or
sti
and
or
push
stc
pop
test
sbb
arpl
roll
int3
push
fstl
jb
cmp
mov
es
xchg
xchg
mov
pop
ss
adc
gs
jno
lods
add
mov
xor
adc
xchg
testl
or
out
pop
jb
fsub
xlat
sub
movsl
lea
add
insb
sbb
les
or
xchg
cmp
cli
inc
js
pop
cmp
pop
nop
hlt
push
jg
and
sbb
lcall
popf
pop
lods
mov
bound
fidivs
fistpll
sbb
inc
loopne
jno
pop
dec
or
lcall
push
add
cmpsl
adc
cmp
out
int3
es
mov
lods
rorl
xchg
push
cmc
mov
push
into
ljmp
insb
test
jae
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
ret
push
mov
sub
movl
adcl
push
sbbl
movl
addl
mov
subl
push
sub
mov
xor
adcl
push
mov
subl
add
subl
mov
mov
test
je
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
sbbl
mov
mov
and
mov
xor
add
movzbl
sub
mov
mov
sub
mov
xor
orl
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
sub
add
mov
sbb
mov
sub
xor
movl
add
mov
sub
xorl
lea
orl
xor
orl
xor
movl
cmp
je
mov
addl
xor
sbbl
add
cmp
jne
pushl
call
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
sbbl
xor
andl
add
cmp
movl
je
xorl
pushl
pushl
xorl
call
mov
mov
sub
mov
sbbl
xor
sbbl
add
movl
cmp
movl
je
movl
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
decl
mov
addl
add
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
addl
add
or
mov
sbb
mov
mov
add
movl
mov
jmp
add
mov
mov
add
mov
mov
and
mov
mov
xor
subl
add
cmp
movl
je
jmp
mov
and
mov
xor
decl
add
movl
cmp
mov
movl
je
andl
mov
xor
add
movl
cmp
movl
je
lea
xorl
push
pushl
sbbl
pushl
call
or
mov
sbb
mov
xorl
xor
sbbl
add
movl
cmp
movl
je
movzwl
mov
movzwl
mov
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
jmp
fbstp
cmp
cmpsl
fnstsw
lods
mov
jnp
sahf
jnp
mov
lods
jbe
adc
pop
mov
nopl
in
popa
jge
shl
std
push
rorl
sub
fs
add
adc
mov
test
in
stc
adc
call
lcall
cmp
out
dec
sti
sbb
sub
repz
jle
loope
dec
jmp
nop
out
mov
mov
stc
dec
shlb
xor
push
imul
pop
int3
dec
adc
inc
fdivp
sub
sbbb
movsl
ss
add
lds
fcmovb
sub
int3
int
pop
cmp
lea
fsubrp
add
add
fldcw
mov
inc
and
fistps
lret
stos
enter
leave
lret
imul
push
scas
jns
xor
in
dec
bound
mov
dec
jns
int3
mov
int
add
stos
cmp
movsb
push
sub
cmp
push
mov
inc
sbb
decl
and
sub
pop
nop
lods
adc
mov
popf
stc
adc
or
fisttps
xor
cmpsb
in
add
xor
test
mov
fsts
pop
arpl
icebp
orw
xchg
adc
faddl
fs
adc
popf
xor
sbb
loop
adc
hlt
inc
adc
addr16
add
push
lods
pop
mov
push
pop
sub
out
call
fcmovnbe
push
popf
and
dec
cmpsl
out
sbb
addr16
pop
adc
scas
div
je
cmp
inc
pusha
dec
lods
cmc
stos
popa
sbb
jge
jnp
xor
mov
test
cld
sbb
add
xor
rol
add
popa
mov
clc
mov
jo
addr16
mov
xchg
sbb
in
add
xchg
dec
xchg
sbb
jecxz
mov
inc
jp
jg
jno
movsl
jge
lods
popf
imul
xchg
pop
sub
cli
popf
mov
scas
mov
das
fwait
push
notb
or
movsb
pop
enter
add
dec
mov
or
hlt
pop
divb
and
sarb
das
xchg
mov
scas
test
mov
pop
cmpl
jle
push
pop
sarb
pop
cmp
mov
mov
sub
add
fmuls
xor
in
cmpsb
push
cmc
js
and
filds
das
add
sub
or
or
outsb
inc
and
jnp
daa
in
xor
jb
xchg
mov
aad
add
outsb
pop
and
ljmp
pop
lds
mov
pop
out
mov
out
cmc
dec
psubq
mov
sub
pmaxub
stc
or
test
cltd
fldl
cmp
sti
xchg
dec
aaa
cmp
dec
je
dec
adc
test
or
dec
aam
imul
jo
outsb
scas
pop
mov
in
stc
pusha
dec
out
sub
fldl
push
and
pop
lret
stc
jnp
sti
xchg
inc
jge
push
out
jbe
ss
ds
xchg
fisubrl
outsb
sub
mov
or
orb
test
pop
sbb
jb
xor
add
xor
add
jl
movsl
fcompl
jae
imul
sub
fistps
pop
pop
push
adc
aas
mov
test
and
inc
ss
jb
sbb
scas
insl
popf
mov
cltd
xchg
inc
mov
push
sbb
xor
or
xchg
pop
and
adc
cmpsb
lock
out
adc
pop
out
xchg
testb
inc
imul
or
sbb
or
in
icebp
add
insb
push
scas
inc
idiv
jnp
idivl
iret
xchg
sub
and
popa
jbe
adc
call
cmp
rcl
test
sbb
loopne
into
aad
insb
mov
dec
mov
jmp
pushf
sti
adc
fxch
ret
pushl
sub
and
stos
push
pop
popa
push
adc
dec
pop
or
aam
dec
cmpsb
mov
mov
xlat
jbe
repz
test
and
fidivs
lcall
js
rorb
jbe
cmpsl
or
stos
pop
roll
add
or
pop
push
push
call
rcl
clc
outsl
bound
dec
andl
scas
push
sbb
xchg
ss
dec
sub
cmp
cmc
push
cli
xchg
pop
inc
jp
mov
mov
fisttpll
mov
lret
dec
hlt
sbbl
enter
xor
out
aaa
outsl
mov
imul
adcl
in
jmp
stos
ret
inc
xchg
movsl
testb
mov
inc
or
push
sub
leave
imul
nop
into
jbe
mov
dec
pop
pop
lcall
fbld
jo
or
aam
mov
pushf
xor
ja
or
push
xchg
fdivs
fldt
repnz
ret
fmuls
stos
mov
jne
push
addb
xor
xor
cmp
xor
pop
pop
xor
xchg
mov
aas
insl
hlt
dec
lahf
or
fisubrl
dec
bnd
jmp
test
xchg
call
pop
jns
jb
xor
daa
test
out
sub
out
insb
xor
aas
xor
testl
or
push
in
notb
es
jae
roll
pop
fwait
pop
mov
lods
sub
imul
jo
mov
loop
inc
fdivl
jmp
jle
nop
and
mov
sbb
in
and
mov
inc
aad
mov
insl
sub
and
jne
mov
push
fisubl
dec
sbb
sub
addr16
inc
fnstenv
into
and
shr
push
rcll
cwtl
push
es
aas
sbb
sbb
pop
adc
in
dec
sbb
sahf
ja
pop
or
push
push
pop
clc
xchg
in
addr16
gs
shll
ret
jle
cmp
mov
or
xor
aam
cmp
jg
pushf
mov
js
shr
sbbl
mul
dec
xchg
pushf
jo
mov
cs
mov
mov
xlat
jecxz
ror
mov
test
push
insl
pop
out
sub
mov
push
pop
flds
shll
dec
ret
lahf
aad
dec
fsubrs
lret
popa
xor
les
pusha
sbb
cmp
xor
in
add
das
addr16
outsb
lods
jle
xlat
inc
sar
jle
inc
test
sbb
mov
mov
dec
xor
xchg
lods
mov
adc
sub
test
das
movsb
shl
ja
push
cmp
push
xchg
pop
xchg
loope
outsb
mov
inc
roll
sbb
pushf
sbb
and
fs
cli
dec
mov
jb
rcrb
mov
push
stos
mov
push
pop
lds
gs
out
jb
cmp
xchg
cmp
or
pop
icebp
int
jg
mov
pusha
push
cmp
testb
pop
leave
shrl
lock
sub
jo
or
cmp
cmpsl
adc
push
inc
xlat
int
aas
jno
xor
mov
sbb
arpl
jb
call
pop
xchg
clc
lods
mov
out
ljmp
scas
mov
mov
push
jne
es
cmp
jmp
shll
pop
push
scas
leave
sbb
shlb
mov
add
jae
or
mov
or
fnstcw
dec
jnp
hlt
out
sub
int
push
lret
push
xchg
sbb
cwtl
leave
in
out
jo
cmp
lods
cmp
pop
mov
es
pushf
sub
outsl
adc
fwait
lea
inc
fistpll
dec
sbb
adc
mov
int3
and
jne
jbe
lahf
pusha
and
push
js
cmp
sbb
popa
jmp
cmc
jno
and
add
jns
push
pop
aad
xchg
jne
sbb
nop
xor
or
xor
inc
jmp
adc
jp
push
lods
jge
adc
daa
sbb
stos
sub
ror
pop
mov
cmp
aam
fidivs
jl
rcrb
rolb
inc
dec
push
sub
xchg
push
mov
add
js
arpl
xchg
mov
xchg
test
jo
insb
hlt
jns
jg
int3
mov
adc
bound
pop
or
es
or
loop
sbb
mov
pop
daa
addr16
jp
xchg
clc
cld
xchg
sarl
icebp
insl
sub
into
xchg
sbb
adc
sbb
sbb
out
xchg
dec
call
in
lret
sbb
or
pop
pminsw
add
cld
adc
std
lock
shll
lds
pop
mov
inc
add
sub
imul
xor
stos
fldcw
cmp
lret
aam
jns
mov
orb
test
or
rclb
bound
arpl
xor
movsb
fcmovu
nop
rcr
sti
push
mov
mov
mov
arpl
sub
bound
int3
cltd
jg
sbb
in
or
in
or
xor
sbb
scas
loopne
jp
push
imul
lret
lock
push
mov
lahf
mov
inc
in
bound
mov
or
test
add
xchg
ret
adc
lods
insl
movsb
or
mov
adc
or
jae
mov
add
bound
shlb
mov
je
dec
rcll
mov
adc
jecxz
add
and
lods
cmc
out
test
sbb
pop
pop
mov
xor
dec
cltd
cmp
jne
imul
pusha
enter
das
jg,pn
insb
lods
arpl
mov
scas
fwait
jb
cmp
pop
cmp
push
push
push
push
stc
push
push
jno
in
mov
push
mov
pusha
mov
loop
pusha
movhps
in
insb
hlt
add
notl
xlat
mov
out
inc
pop
std
es
fldt
pop
insb
or
test
xor
dec
dec
cmp
mov
fistl
gs
sub
mov
mov
xchg
pop
ja
repnz
inc
lods
arpl
mov
inc
push
sub
sahf
loope
inc
add
loopne
cmpsb
add
lods
cmp
stc
aas
clc
ret
jns
push
es
push
ljmp
jo
jp
cmp
mov
paddusw
lods
and
jb
ss
mov
cmp
pushf
cmpsb
jno
sbb
insb
add
arpl
mov
sbb
in
lods
xchg
loopne
adc
push
xor
test
neg
sbb
push
xchg
nop
dec
in
js
mov
fdivs
inc
lret
in
sub
or
pop
loope
jae
jmp
movsb
cmp
fisubl
leave
std
xchg
dec
das
lret
or
ja
sub
mov
jo
cli
iret
xchg
mov
fdivrl
and
fildll
dec
cmp
and
mov
jne
xchg
mov
cmp
es
sbb
fsubs
jbe
xchg
jne
sub
cmp
jl
cltd
push
testb
pop
shll
and
jmp
push
jp
mov
dec
fldt
mov
adc
push
pushl
pop
ljmp
fcoml
add
lcall
pop
push
ret
jbe
pop
mov
xchg
sarb
or
fucomi
roll
xor
sbb
cmp
inc
in
les
mov
iret
call
dec
or
sti
incl
pop
dec
arpl
ret
jo
adc
popf
icebp
stos
loope
lret
sub
mov
xor
xor
pushfw
fwait
jns
or
je
imul
push
jmp
adc
xor
and
mov
push
pop
shrl
fiaddl
test
push
mov
aas
push
es
imul
mov
pop
cli
sbb
gs
inc
aaa
call
dec
cwtl
int3
dec
lods
imul
or
mov
xchg
inc
ljmp
mov
xchg
imul
gs
mov
stos
inc
aaa
loopne
push
mov
jmp
movsl
mov
push
scas
push
adc
mov
jecxz
or
lahf
and
int
mov
fs
cmp
cmp
adc
enter
push
xor
rcrl
sbb
dec
stos
or
pop
sbb
mov
jne
push
sti
shr
mov
mov
arpl
and
fimull
das
cmp
push
xorl
or
push
loope
das
fsin
pop
adc
addr16
cli
in
pop
cmp
stos
adc
dec
sbb
adc
arpl
pop
add
rorl
hlt
push
add
add
cmp
rorb
mov
xor
ss
fistl
add
sub
pop
inc
mov
and
insl
jne
mov
arpl
adc
call
pop
sbb
push
push
push
push
push
ljmp
and
lock
mov
push
into
pop
mov
cs
xchg
jae
xlat
lock
out
xchg
pop
mov
fucomi
test
iret
rorb
scas
pop
clc
imul
cmp
add
mov
call
lods
jl
pushf
test
jne
jl
push
sub
out
mov
sub
lods
cmp
out
loop
jmp
push
cmp
aam
clc
mov
push
cmp
fwait
push
jle
cmp
loopne
mov
js
or
mov
jp
pop
cmp
inc
shl
hlt
and
and
sarb
dec
jne
shrl
sub
ret
mov
mov
and
cmp
sar
ficompl
push
pop
pop
and
xor
movsbl
jmp
je
cmc
dec
jns
out
cli
cs
sbb
aas
jl
xor
lods
xchg
and
jb
pavgb
xor
test
push
adc
push
iret
inc
fcomi
pop
jnp
fldt
fcoml
mov
dec
push
into
or
mov
stos
mov
sub
adcb
inc
jns
scas
or
jp
push
mov
pop
pop
call
enter
inc
cmp
fcoml
sbb
vcvtss2si
jne
push
out
mov
mov
xchg
push
mov
vpmacssww
dec
nop
lret
test
xchg
mov
mov
outsb
or
fs
xacquire
aad
pop
fwait
jnp
arpl
lods
ljmp
test
cmp
sub
xor
mov
ja
aam
dec
lods
sarb
mov
aad
enter
pop
or
call
xor
xchg
inc
cmpsl
and
sub
ret
into
loopne
mov
sbb
loop
sub
add
or
push
push
mov
lods
pusha
ja
pop
sbb
test
mov
inc
xchg
loope
add
mov
sub
mov
pop
test
adc
in
xchg
lcall
out
adc
add
cmp
dec
lds
pop
insl
loope
xchg
mov
imull
addr16
insl
push
dec
push
in
or
mov
repnz
pop
sub
adc
sbb
and
dec
aaa
xchg
ja
lcall
or
movl
xorl
mov
push
mov
push
mov
mov
jl
mov
dec
push
jnp
mov
pop
ret
or
jnp
cmp
rorb
inc
movsb
inc
jl
testb
mov
addr16
mov
les
cltd
cmp
pop
xchg
icebp
popf
and
and
fidivs
jge
sbb
dec
fstl
pop
pop
or
dec
ljmp
xchg
push
lods
pushf
scas
ds
cwtl
arpl
push
fiadds
leave
jno
test
or
repz
fistpl
pop
adcb
cwtl
nop
dec
jnp
xchg
xchg
inc
insl
int
adc
pop
jne
lahf
dec
js
cld
xchg
scas
xor
push
mov
rcrb
aaa
into
and
nop
mov
cmpsl
or
push
xchg
jb
int3
cmp
ret
fdivp
mov
mov
sbb
jmp
mov
adc
pop
test
jno
clc
mov
mov
lock
nop
fistps
pop
cmp
mov
movsb
imul
xchg
mov
cmpsb
cmc
jmp
xor
jns
pop
inc
mov
in
pop
int
repnz
sbb
add
repnz
pop
loope
pop
sub
stos
aad
cmp
leave
in
test
out
add
call
mov
cmp
sbb
mov
cmp
mov
ret
and
enter
lahf
dec
fwait
lods
call
call
jle
popf
lret
fdivrl
xor
mov
xlat
push
stos
fisubl
dec
hlt
jns
andnps
or
add
fisttpl
cli
lcall
pop
das
cli
cli
and
xchg
in
push
sbb
dec
int
sub
lds
sub
cmpps
cmp
or
jae
sbb
inc
push
cld
pop
sti
das
bound
add
or
rclb
mov
int
fs
mov
push
sub
cmp
dec
ret
aam
mov
cmp
fcompl
loopne
cmp
dec
jbe
adc
cmp
repz
sahf
jns
cld
or
jmp
jns
jge
ljmp
andl
mov
mov
jmp
test
js
ret
test
jge
pusha
xchg
sub
stc
cmp
inc
jle
hlt
leave
out
ror
jno
or
int
mov
dec
mov
push
mov
jmp
repz
sbb
pop
mov
in
arpl
popa
ds
stc
jne
cltd
inc
xchg
sarb
enter
stc
xlat
fcoms
bound
push
push
cmc
mov
enter
mov
xor
clc
cmp
pusha
add
sub
or
adc
sbbl
push
cld
dec
jno
xchg
orb
cli
loop
dec
mov
sub
mov
insb
or
aam
jg
gs
adc
jecxz
loope
das
mov
sub
rcl
testl
adc
shrl
imul
pop
jmp
jo
pop
sahf
ficoml
push
and
fistl
pop
sbb
pop
jno
push
je
mov
es
test
push
add
fnstsw
or
or
xor
repz
inc
ret
scas
popf
test
aam
pop
pop
in
and
jno
lods
or
mov
adc
mov
int3
and
jle
or
cmp
cwtl
push
mov
addr16
testl
bound
flds
sub
sbb
xchg
aam
gs
or
sbb
xchg
pop
lahf
jo
rolb
loop
jle
push
lods
popa
mov
pop
js
sti
and
cmpsb
cld
xchg
outsl
xchg
negb
fdivrs
ret
add
pop
jae
push
dec
pop
push
adc
insl
out
test
stos
arpl
sbb
jge
dec
mov
cmp
gs
xchg
mov
inc
sub
lds
jl
sub
cltd
ds
ret
iret
add
rorb
pop
cs
sbb
enter
divb
dec
inc
push
pop
fisttps
xorb
push
cmp
cmpsl
cltd
or
and
out
pop
sbb
les
lods
adc
sbb
loopne
mov
ret
in
xor
popf
jnp
lods
sahf
popf
pusha
out
inc
into
cli
fidivrl
pop
xor
enter
lret
or
xchg
aaa
mov
movsl
sarl
jnp
xchg
imul
sub
sbb
mov
sub
mov
ret
arpl
gs
ror
dec
out
roll
stos
adc
pushf
lods
enter
shlb
rcll
xchg
mov
or
filds
push
les
scas
mov
scas
stos
loopne
xor
dec
out
mov
xor
and
ljmp
lea
xor
stos
ss
scas
out
sub
adc
lea
xor
pusha
mov
clc
inc
mov
test
lahf
add
test
testb
lods
scas
cmp
fdivrl
or
inc
imul
push
repnz
aaa
inc
xor
sbb
jbe
scas
pop
aas
xchg
in
orb
shlb
aaa
lods
xor
in
mov
ret
bound
aam
cltd
and
inc
dec
int
ljmp
lret
loop
sahf
out
cmp
das
decb
outsb
jns
dec
jns
or
adc
js
pusha
mov
and
mov
jo
sub
into
sub
cltd
pop
cwtl
pop
lods
push
jmp
leave
sbb
insl
mov
push
loopne
ds
adc
mov
sti
shl
and
push
shrb
mov
add
int
mov
call
jle
je
xchg
pop
pop
and
cmp
fnsave
insb
es
sarb
and
loope
add
and
das
adc
adc
mov
cmc
push
sub
mov
mov
rol
jo
jne
gs
cmp
mov
loope
jmp
or
dec
ficompl
adc
leave
xor
mov
lret
pop
dec
pop
push
sbb
mov
out
cwtl
and
fildl
push
sbb
iret
icebp
shl
cli
xchg
sbb
mov
sub
or
sub
or
movsl
in
xchg
cltd
cltd
or
dec
dec
xchg
sub
scas
test
sbb
adc
pushf
adc
repnz
idivb
stos
lock
jp
adc
mov
aam
scas
mov
push
mov
xchg
mov
insb
jecxz
fadds
jle
shlb
sub
mov
pop
outsl
and
das
outsb
or
test
mov
jl
nop
repz
dec
outsb
rcrb
nop
loope
jns
xor
xor
test
xor
aad
sti
test
mov
stc
jae
mov
pop
scas
mov
push
xchg
in
fadd
and
jecxz
push
imul
jg
jge
pop
aad
sub
clc
mov
or
push
filds
jb
push
ret
mov
dec
aam
roll
pop
lods
ret
loopne
ret
jns
dec
loop
rol
adc
pusha
mov
xor
sbb
aas
lods
pushf
fwait
pop
push
dec
pop
xor
push
addl
jbe
mov
or
adc
push
popa
jb
dec
sbb
fcoms
jo
inc
jg
stos
out
sbb
rorl
lods
xor
je
xor
add
loope
push
aam
xor
jns
popa
in
cmp
cltd
pop
mov
loope
rep
xchg
pop
mov
ret
mov
xchg
std
jp
sbb
sub
dec
push
jae
pop
mov
inc
dec
fldl2t
sbb
xchg
sbb
divl
xor
push
or
lahf
loopne
stos
push
mov
and
dec
xor
int3
int
xlat
sub
cmp
xlat
mov
lret
mov
repnz
cs
sub
sub
test
dec
out
xchg
add
paddusw
pop
pop
mov
jge
testb
inc
or
mov
add
mov
test
jmp
cmp
add
in
mov
mov
mov
cwtl
jno
mov
or
fs
cmpsl
jg
idivb
sbb
je
cltd
stos
fisubl
sub
push
cmpsl
dec
sub
add
cmp
loop
pop
and
sbb
data16
sahf
mov
aam
bound
jne
popa
mov
mov
adc
ret
xchg
inc
insl
pushf
mov
dec
aaa
mov
ljmp
pop
pop
mov
push
mov
ret
push
xor
cwtl
pushf
cmp
mov
xchg
stos
div
ja
mov
enter
iret
jecxz
push
fsubrs
inc
xor
das
clc
pop
mov
add
je
inc
sub
shl
sub
push
cmp
aaa
ret
sbb
add
insb
push
fistps
inc
orb
jae
imul
add
and
ficomps
dec
ljmp
jp
mov
add
adc
mov
loope
xor
in
or
fsub
xchg
jecxz
les
mov
pushf
jne
push
lret
cmpsb
or
ljmp
sarb
test
fcom
mov
xchg
xchg
mov
pop
inc
xchg
pop
ja
jb
loop
jge
jbe
ret
jge
xchg
outsb
cmp
or
daa
es
test
mov
push
mov
mov
imul
xor
mulb
and
aas
pop
test
out
dec
pop
mov
rclb
jp
ret
imul
lds
sti
lea
pop
in
es
mov
scas
dec
inc
out
push
gs
jge
inc
add
push
pop
popa
gs
xor
jmp
dec
sbb
mov
fs
or
scas
cmpsl
and
aad
push
loope
inc
add
pop
jecxz
or
fwait
sbb
mov
pop
sbb
mov
sbb
sbb
test
adc
setge
pop
push
xchg
jbe
xor
gs
and
or
or
nop
rcl
loop
scas
mov
in
jg
mov
icebp
sti
mov
sub
jnp
lret
mov
movb
mov
data16
imul
fimuls
xor
mov
adc
xchg
jmp
jnp
fsubrl
cmp
outsb
pusha
out
xor
cmp
mov
xchg
pop
jge
movsbl
cmpsb
xchg
or
ficoms
adc
sbb
add
fcmove
jmp
push
imul
fdivrl
movsb
sbb
push
xchg
rcrb
or
imulb
aam
sbb
das
or
loopne
pop
xchg
outsl
fdivs
cmp
push
pop
cmp
jecxz
lar
sahf
xor
dec
inc
jne
xchg
pop
int
jb
and
sbb
jl
test
push
jle
xor
push
aad
lock
add
mov
movsl
lret
jg
cmp
and
movsl
mov
xorb
xchg
mov
add
mov
mov
je
in
cs
pop
sub
jg
jbe
ficoml
mov
clc
sub
sbb
dec
push
sahf
sub
out
add
cmp
sbbl
dec
cmpsl
nop
mov
xchg
and
xchg
mov
arpl
jnp
ret
mov
mov
or
push
xor
pop
outsl
or
and
mov
and
adc
mov
into
lock
faddl
mov
test
push
mov
mov
fmul
sub
daa
pop
mov
mov
jp
ficompl
adc
dec
pushf
pop
loope
xchg
cmpsl
popl
outsl
js
lds
xchg
int3
lret
pop
jmp
inc
dec
inc
mov
jnp
cmc
adc
ds
mov
ss
mov
adc
xorl
lret
movsl
fsubrs
pop
push
pop
xchg
out
imul
adc
add
ss
add
mov
jnp
aaa
or
into
pop
addl
push
push
cld
mov
mov
cmp
jecxz
mov
hlt
cwtl
rcrl
cwtl
cmc
imul
jg
shlb
jns
int
or
xchg
cmp
xor
fimull
cmp
das
mov
cli
add
dec
sbb
pop
pushl
int
inc
or
into
loopne
aam
cmpsb
orl
mov
cwtl
js
inc
addr16
test
sahf
and
ss
push
ret
orl
add
lahf
xlat
lahf
adc
out
mov
ret
fs
push
mov
std
inc
jmp
mov
and
lea
sbb
push
jno
jne
inc
xor
mov
fidivs
mov
cmp
mov
movsb
jg
aad
mov
adc
test
push
add
stos
push
xchg
or
pop
pop
leave
sub
lret
or
jmp
mov
cmp
popa
lret
inc
jp
or
cmp
loop
stos
push
movsl
lret
xchg
test
jl
cmp
test
adc
inc
cmp
mov
cmp
fdivrs
mov
adc
addr16
jo
insl
into
inc
mov
inc
xor
pop
xchg
xchg
rcll
add
fsubl
pop
mov
leave
int3
adc
jp
lods
mov
fidivrl
sbb
xchg
push
inc
pop
adc
push
add
js
loop
sbb
fcomp
cmpsl
dec
outsl
mov
ja
xchg
push
cli
data16
xchg
jecxz
mov
je
dec
stc
or
mov
testl
or
imul
sbb
adc
mov
push
dec
mov
pusha
jno
rcrl
or
test
sub
fadds
xchg
xchg
in
mov
daa
sbbb
in
pop
hlt
pop
adc
add
add
test
xlat
ds
addr16
jle
xor
dec
push
mov
sbb
cltd
jg
cmpsb
cmp
adc
stos
jno
xor
add
call
mov
ret
add
cmp
loope
and
cmp
jbe
js
cli
std
sbb
dec
aas
js
pop
jmp
leave
or
jg
clc
sbb
cmp
icebp
sbbb
sbb
mov
in
xchg
int3
fldcw
mov
shll
dec
or
lcall
xor
test
iret
lock
imull
test
stos
push
rcll
inc
movsb
cmp
xor
in
xchg
lods
std
popf
jmp
and
andb
cs
adc
hlt
adc
scas
sub
das
sbb
jne
arpl
mov
das
es
ljmp
inc
fldt
mov
pop
sub
das
push
push
imul
adc
xchg
mov
mov
mov
out
inc
dec
push
es
outsl
push
inc
mov
dec
sub
xor
dec
outsb
outsl
subl
cli
sub
imul
int3
scas
jg
out
xor
stos
ljmp
xor
lock
enter
inc
mov
fdivrl
lcall
add
dec
push
jg
scas
call
int
sub
and
pop
gs
dec
add
or
push
pop
stc
dec
out
pop
bound
push
adc
imul
cmp
ficoml
andb
cli
popf
mov
fnsave
nop
test
mov
adc
int3
add
or
out
xchg
sbb
ds
and
hlt
jp
hlt
xchg
xor
adc
mov
inc
jp
xchg
pushf
lods
and
repz
mov
lea
stc
cmpsb
pushl
test
ret
xor
mov
and
mov
test
mov
mov
in
dec
into
es
sbb
xor
repnz
adcb
cwtl
in
popa
lret
into
and
shlb
jge
rcll
lahf
and
xchg
pop
xchg
repnz
add
movsb
jmp
sbb
adc
xlat
cmc
and
outsl
sub
xlat
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
jmp
mov
out
fwait
push
xor
push
lods
or
sahf
jnp
test
popf
push
loope
shl
jne
mov
hlt
test
xlat
jns
pop
mov
inc
data16
sbb
mov
inc
aas
in
cld
int
fsubrl
jge
in
and
out
lds
imul
dec
add
nop
bound
xchg
aam
fwait
xchg
sets
enter
mov
jl
adc
xchg
rorb
xlat
cmp
cmp
xor
xchg
sub
fsub
ficoms
inc
repnz
add
sarb
jl
jmp
fsubrs
imul
or
xchg
xchg
stos
insb
repz
in
jns
push
add
rcll
pop
scas
jge
lods
repz
repnz
mov
xchg
loope
call
jno
pop
pop
mov
jns
or
dec
xchg
adc
int3
aas
cmc
sub
xor
ss
repnz
jnp
inc
mov
ucomiss
mov
nop
movsl
xchg
cmc
push
jl
lret
enter
mov
sbb
js
roll
and
cmpsb
rcrl
xlat
xor
jo
mov
std
jne
sub
pop
outsb
mov
in
js
imul
mov
sbb
or
inc
cmp
pop
fwait
push
sahf
inc
mov
inc
xor
xchg
jo
jge
sub
push
shr
push
xor
push
ja
and
and
sbb
ret
jb
jne
inc
call
mov
aaa
mov
push
sbb
test
adc
sub
cmpsl
xor
out
sbb
dec
pop
adcl
xchg
cli
adc
push
notb
xor
sbb
mov
lea
fbld
adc
cmp
mov
xor
fstpl
pop
xchg
or
ds
aad
lret
cmc
movsl
jo
jg
mov
add
out
mov
add
mov
inc
pop
pop
xor
lock
es
jl
out
cmc
insb
pushf
xor
aas
dec
push
pop
repz
js
cmp
in
xor
adc
lcall
movsl
sub
push
pop
adc
icebp
adc
out
jge
jmp
adc
into
jb
fisubrs
dec
sbb
mov
pop
xchg
push
mov
insl
add
imul
call
push
les
xchg
and
pushf
cwtl
scas
subb
inc
push
sub
push
or
icebp
sbb
xchg
sub
adc
push
fstpt
aas
cmp
bound
loop
or
pushf
arpl
iret
mov
push
mov
fs
cmp
xor
xchg
pusha
in
pop
mov
xchg
pop
in
xchg
ss
pushf
jae
aaa
adcl
into
les
js
ljmp
int3
push
cs
addl
mov
pop
adc
push
push
mov
ret
cwtl
cmpsb
call
mov
jo
enter
sbb
fdivrs
sbbl
pop
mov
mov
repnz
xor
repz
xor
and
inc
sbb
leave
imul
and
lock
mov
adc
jo
mov
sbb
add
mov
out
mov
and
lret
mov
adc
jl
mov
mov
and
jge
ss
adcl
inc
dec
or
xor
mov
dec
js
fdiv
not
shrl
loopne
add
sti
sti
test
dec
lret
lock
ret
fidivs
lahf
rcr
rclb
lds
pop
push
mov
loopne
roll
and
ds
dec
loope
xchg
xor
pop
lods
jae
out
xchg
rcrl
mov
sub
or
out
sbbb
adc
dec
ljmp
dec
lods
pop
lahf
aam
or
int
xor
xor
cmp
pop
mov
and
xchg
cwtl
addl
mov
pusha
inc
sbb
hlt
dec
test
enter
test
jns
mov
pushf
pushf
adc
ss
lahf
fs
insl
dec
sbb
aas
subb
ror
pop
int
ljmp
sahf
add
hlt
or
scas
loope
por
mov
lock
fnstenv
xchg
sahf
lods
js
insl
dec
cmp
ljmp
push
mov
pop
dec
pop
dec
cs
aad
scas
gs
add
aam
fldenv
adc
mov
dec
andnps
cmpsl
or
cmpsb
insb
xchg
push
idiv
cltd
sub
pop
mov
push
aad
outsb
dec
sbb
ror
rclb
lcall
mov
and
cmp
les
test
mov
xchg
das
shl
in
mov
out
push
fldt
sbb
popf
cmpsb
adc
inc
sub
xchg
mov
aas
imul
sahf
scas
push
int
cmp
xor
jl
gs
mov
ljmp
push
push
mov
xchg
sbb
dec
mov
jns
inc
aad
jns
stos
xchg
inc
push
mov
mov
and
ret
fnstsw
pop
xchg
sub
dec
fs
xor
ror
sbb
inc
sub
jae
mov
imul
out
ror
pop
dec
jmp
mov
scas
or
add
cmp
test
pop
rol
sub
xchg
xchg
pusha
bound
popa
xor
inc
and
shrb
jl
testb
or
stc
fs
out
mov
mov
out
cmpsl
mov
sbb
sbb
pushf
pop
mov
lds
pop
xor
fldcw
and
xchg
loop
and
sub
in
sub
cmp
sbb
fcompl
outsb
test
iret
xorl
mov
jecxz
mov
call
ret
push
sbb
subb
sub
cmp
mov
andb
push
mov
aaa
dec
dec
ds
push
int3
mov
jno
ret
cmp
xchg
aam
dec
in
mov
movsl
jle
cmp
jb
pop
in
enter
adc
push
jg
clc
lgs
add
sbb
stos
insl
adc
xchg
pushl
test
mov
ror
nop
in
test
mov
lret
dec
mov
mov
imul
out
stos
sub
imul
insb
imul
cmpsb
mov
aaa
inc
fdivrs
cmp
movsb
adc
sub
sub
lds
outsb
sbb
ret
and
lahf
mov
jge
jg
mov
lock
jle
and
dec
jno
sbb
pop
xor
mov
sub
das
leave
xor
popf
mov
into
mov
shlb
lods
adc
test
xor
dec
cmpsl
in
mov
rorl
adc
insb
out
out
push
jae
in
or
ljmp
jns
popf
fbld
jg
stos
test
jmp
pop
es
sub
bound
out
sbb
lea
cmp
scas
lcall
mov
push
shll
into
clc
xchg
pop
or
es
enter
pop
push
dec
push
add
pushf
fwait
je
movsb
outsl
pop
cli
sub
and
mov
xchg
xor
add
adc
ficoml
or
or
aam
adc
jl
pop
adc
cmp
test
cltd
adc
pop
lret
push
into
ret
cmp
into
mov
aaa
dec
rcrl
sbb
js
mov
sub
xchg
mov
movsb
flds
es
repz
sbb
push
or
mov
leave
pop
mov
and
stos
cwtl
mov
mov
or
push
mov
or
fcomps
es
scas
hlt
insl
or
sub
fldenv
or
inc
sbb
push
sub
jae
push
and
into
pusha
xor
push
sub
int
stc
addr16
mov
outsb
jb
loope
fwait
int
and
add
cmpb
nop
cmp
lock
cmpsl
shl
add
in
mov
push
pop
lcall
or
movsb
outsl
adc
jge
lret
sbb
pop
adc
adc
sub
jbe
iret
stos
int3
int
sub
adc
jo
stc
and
cmp
pop
sbb
mov
push
adc
pop
popa
enter
ret
xchg
mov
imul
test
jp,pn
popa
sub
lods
cmp
mov
decb
stos
cwtl
pop
dec
mov
cwtl
fidivl
jae
sti
pop
or
mov
roll
arpl
sbb
scas
addr16
testb
sub
in
call
popl
mov
mov
es
add
int3
in
push
sub
adc
cmp
sub
mov
pop
or
cli
or
adc
dec
in
insb
or
negb
push
or
adc
or
nopl
adc
jne
or
sbb
pushf
cld
pop
inc
xchg
cmp
leave
pop
addr16
gs
dec
ret
inc
enter
fdivrp
jb
movsl
stos
push
iret
add
jb
fcmovu
les
or
pop
mov
repz
dec
mov
das
inc
pop
in
dec
jl
lds
adc
mov
pop
in
sbb
jmp
xor
mov
les
testb
and
pop
adc
and
xchg
and
and
pop
pusha
dec
cmp
push
mov
mov
mov
lock
daa
icebp
fcom
xchg
pop
jle
outsb
hlt
cltd
mov
inc
test
jl
lret
scas
ret
xchg
jnp
cmpsl
mov
dec
jp
mov
adc
cwtl
shl
push
lods
mov
add
repz
mov
lahf
call
fcompl
push
pop
xor
rol
lret
xchg
pop
push
jnp
test
mov
mov
in
popa
xor
gs
add
lods
movsb
in
shrl
enter
insl
push
adc
cmc
cwtl
and
stos
data16
dec
ljmp
stc
mov
popf
or
adc
sbb
mov
imul
cmp
sbb
scas
add
es
rcrb
je
xor
repnz
cmp
popa
outsl
mov
repnz
das
cli
sub
out
or
xchg
out
mov
lds
fadds
mov
leave
pusha
dec
and
push
cmc
mov
add
push
adc
dec
jmp
jge
xor
xor
mov
test
cmp
aaa
cmp
xchg
andl
jne
jae
stos
gs
pushf
push
cmp
outsb
jb
int3
les
sarl
fs
adc
lods
nop
jg
add
push
dec
mov
enter
dec
and
cmpb
nop
pop
pusha
mov
adc
inc
dec
sub
inc
xchg
inc
stos
mov
mov
ret
out
shl
into
ret
shrb
icebp
cld
sbb
adc
pop
pop
repz
pop
push
pusha
add
sbb
xchg
mov
aas
xchg
mov
push
daa
jl
popf
into
sbb
enter
or
pop
push
mov
fldcw
sbb
std
inc
ss
cmpsb
or
leave
lock
jmp
sbb
xchg
call
sbb
cltd
xor
gs
movsl
inc
add
in
xchg
xchg
psubusb
push
jp
add
jb
out
imul
push
xlat
pop
fcoms
cld
cmpsl
pop
and
inc
inc
pop
adc
test
fstl
cmp
aam
pop
scas
sbb
cmpsb
lret
inc
mov
jns
xor
mov
pusha
cli
mov
adc
xchg
and
jmp
roll
jmp
adc
mov
hlt
int3
push
aam
push
out
data16
adc
lods
in
pop
call
jle
adc
aaa
or
lret
push
push
shll
or
adc
pop
cwtl
dec
out
es
out
push
or
test
or
out
outsb
jp
sub
imul
mov
add
pop
xchg
imul
call
mov
aam
xor
sub
std
repz
nop
add
xchg
outsb
nop
mov
lock
arpl
imul
add
jae
ja
add
stos
jo
sub
in
push
fsts
dec
mov
or
jle
in
jne
sbb
or
mov
and
repz
rclb
add
out
sti
pop
mov
icebp
shll
sub
xor
rcrl
in
ret
sbb
fisubrl
rolb
into
push
call
xor
test
idivl
mov
cli
xchg
in
sub
fisubrl
mov
hlt
gs
xchg
inc
xchg
xor
iret
sub
jnp
dec
scas
movsb
cmc
adc
aad
in
hlt
jae
adc
popf
repz
scas
and
daa
sbb
in
sti
mov
xor
call
pop
movsl
cltd
mov
popf
test
jo
dec
ja
imul
aas
jge
push
add
inc
lret
jmp
loopne
mov
addr16
xchg
mov
data16
cmp
rcrb
filds
pop
sbb
xchg
in
insb
and
repz
pop
loop
loope,pt
push
jmp
or
dec
xchg
adc
mov
xchg
push
into
loope
adc
andl
mov
mov
pop
mov
and
mov
stos
jne
add
xchg
mov
push
pusha
pop
cmpsl
lahf
aam
mov
rcll
insb
sbb
rclb
mov
in
add
mov
sbb
push
push
push
inc
inc
sub
out
sub
cmpsb
sbb
ljmp
punpcklbw
mov
stc
rorb
mov
mov
subb
imul
xchg
adc
pop
ror
jg
inc
inc
int
in
pop
push
test
addr16
or
call
pusha
mov
loope
lods
filds
pop
loope
rcll
out
lods
push
push
ret
sbb
xchg
insl
pop
cwtl
bound
cltd
and
repnz
jge
xchg
aaa
bound
cmc
and
or
or
rcl
dec
mov
inc
push
sbb
xchg
sarl
xor
out
push
aam
mov
cld
sbbl
mov
xor
ud0
cmpsl
dec
pushf
iret
fidivrs
loope
cmpsb
test
clc
cmc
rorl
imul
idiv
jb
sub
movsb
jecxz
jmp
and
dec
test
ja
cmpl
cmc
or
add
loope
fisubrs
je
imul
in
mov
mov
mov
dec
test
inc
aaa
mov
out
lret
andb
repnz
inc
addb
sbb
movsl
sub
pusha
pop
jns
push
jmp
fsubs
push
sbb
aad
fnstcw
add
adc
fcmovnbe
and
orl
and
jo
arpl
ret
mov
pop
jl
pushf
add
xchg
insl
mov
outsl
xor
mov
icebp
fcoml
and
aad
add
dec
inc
popf
push
inc
or
filds
jecxz
jle
loopne
ret
mov
test
cli
lahf
push
lcall
mov
push
sbb
or
rcr
rclb
rorb
dec
inc
shll
mov
xor
mov
jmp
jbe
inc
lahf
or
sarb
push
shlb
sbb
jp
mov
push
hlt
out
fbld
or
test
orl
fidivs
xor
jbe
movsl
mov
cwtl
imul
add
ss
aaa
adc
stos
sahf
or
mov
in
push
sbbb
push
jbe
ret
dec
push
insl
notl
sub
mov
and
cmpsb
mov
jo
mov
and
dec
fs
jmp
jne
pop
into
div
mov
xchg
lds
call
push
mov
pusha
repnz
pop
jae
sub
mov
xor
mov
xchg
sub
lahf
push
mov
adc
push
aaa
xchg
mov
sarl
mov
aas
mov
addr16
jle
add
pushf
pop
insb
mov
je
fistps
scas
add
fwait
cmpsb
xor
hlt
clc
out
mov
nop
add
inc
lahf
pop
sbb
mov
cltd
clc
mov
repz
fwait
pop
sti
push
cld
enter
lahf
pop
movsb
lret
mov
cs
mov
mov
lahf
dec
push
ss
out
mov
outsl
sbb
notb
push
adc
and
mov
push
mov
dec
add
ljmp
inc
icebp
loopne
pop
add
jle
pop
sbb
clc
inc
pop
or
adc
pop
fmull
shlb
imul
sub
xchg
and
push
mov
into
mov
inc
inc
aam
pop
fsubs
shll
jae
pop
fwait
ss
cli
mov
and
jmp
movsb
and
xchg
leave
or
ja
sub
dec
arpl
add
popa
add
and
mov
dec
sub
and
gs
push
sub
scas
stos
mov
scas
and
ja
in
or
dec
sarb
push
xchg
je
in
inc
ret
push
sbb
test
addr16
lret
nop
jns
or
mov
xor
xor
leave
aas
hlt
mov
mov
add
jns
mov
cs
and
xlat
pop
and
push
lcall
fcmovbe
cmp
inc
inc
jp
ds
cmp
push
iret
push
data16
fmull
jnp
mov
push
shrl
enter
push
mov
shrl
lcall
testl
sbb
outsl
jg
xchg
inc
and
push
enter
in
into
ja
hlt
and
and
xorb
sub
xchg
add
cmp
push
stc
nopl
clc
sub
rol
repz
cmp
je
mov
aad
mov
xchg
lahf
loopne
and
ficoms
nop
decb
je
cmp
mov
test
xor
hlt
loop
scas
mov
fcmovb
ljmp
mov
mov
faddl
inc
je
in
mov
pop
loope
and
gs
push
jno
sub
mov
out
imul
inc
cmp
adc
xchg
or
cmp
test
or
lcall
shlb
push
das
push
test
cmp
and
xor
lds
ss
lret
mov
or
loopne
push
pop
test
or
mov
insb
sub
fwait
mov
mov
jns
pop
pop
shr
xor
sbb
xchg
mov
into
push
or
mov
fwait
xlat
dec
cmpsl
jle
mov
sub
sbb
shlb
lea
test
mov
cmc
cmc
jecxz
pop
testl
add
hlt
mov
hlt
mov
jae
push
xorl
aam
push
add
lahf
jmp
pushf
push
movsl
sbb
adc
shlb
push
add
ret
dec
mov
mov
sub
data16
cmp
push
adc
push
push
bound
jecxz
pop
push
mov
mov
add
lcall
idivl
add
mov
xorl
pop
push
sub
cmc
and
jl
call
hlt
adc
lods
shl
xor
mov
pop
sub
in
add
xchg
xor
sbb
iret
mov
and
pushf
call
sahf
fistpl
movsl
jae
dec
add
out
and
mov
stos
mov
jns
pop
ret
repnz
fpatan
cmp
add
test
stos
cmp
test
lcall
outsl
push
mov
push
adc
sahf
das
mov
setno
adc
movsl
imul
cmp
daa
xlat
or
sbb
and
jbe
and
shlb
orl
sbb
adc
test
dec
sub
imul
ret
sub
and
test
stos
pushf
lcall
xor
cmp
or
or
in
fs
in
pop
xor
and
pushf
lcall
fiaddl
cwtl
sub
loop
cmpl
cmp
jns
mov
aam
pop
gs
jne
and
lea
mov
add
and
out
es
enter
popa
lock
pop
js
lods
dec
sbb
lcall
ficoms
add
insb
mov
mov
dec
test
jae
pop
xor
inc
mov
test
test
inc
stc
gs
dec
xchg
adc
popa
iret
adc
leave
dec
in
aam
pop
pushf
mov
xor
push
jb
aad
pushf
int
lock
or
loop
imul
push
clc
test
or
push
sti
dec
dec
inc
addr16
rol
cmc
xor
bound
push
imul
ja
stos
aaa
aas
je
jb
lods
mov
pusha
or
add
mov
stos
and
xchg
test
xchg
addr16
fdivl
aad
stos
cs
lods
pop
xor
gs
loop
pop
xchg
fsts
mov
sbb
inc
in
add
xlat
or
test
ja
in
pop
or
mov
lcall
mov
popa
bound
mov
cmp
push
aad
ds
pop
xchg
mov
ret
incb
xor
ret
sbb
dec
push
mov
jo
fdivs
inc
jl
pusha
mov
insb
addr16
enter
notb
movsb
int3
and
cmp
rol
neg
je
insl
xchg
mov
mov
scas
ja
ficoml
sub
stc
testb
or
lods
mov
dec
cmpsl
jno
and
cmpsb
cltd
lret
cmovl
int3
in
jbe
fcoms
in
js
arpl
mov
inc
mov
enter
pop
aas
pushf
pop
stos
rorb
das
or
test
mov
stc
sub
pop
inc
incb
push
mov
pop
xchg
orl
int3
rcl
das
stos
mov
xchg
mov
add
push
aad
xchg
js
and
loop
cmp
bound
and
adc
push
xor
cwtl
sub
lret
popa
mov
fwait
scas
fucomip
mov
push
sbb
push
loope
cmpsb
pop
add
push
xchg
cmp
test
cmp
sti
jp
xchg
out
dec
pop
or
std
mov
sarl
jb
movsl
dec
fucompp
mov
sbb
mov
inc
xor
addr16
sbb
or
and
pop
cmp
and
jle
fldenv
fsts
jno
pop
lods
cmp
fsubl
mov
mov
das
adc
jno
or
pop
xchg
inc
scas
mov
sub
mov
cltd
push
stos
mov
or
dec
adc
add
dec
jmp
loop
sti
or
inc
and
inc
test
cmp
push
call
cmpl
shlb
sbb
cmp
aam
mov
xchg
xchg
rcrl
jo
lret
popw
sub
loopne
std
dec
mov
jmp
xor
pop
dec
xchg
and
adc
mov
outsb
add
outsl
std
jo
cltd
mov
in
dec
into
lock
mov
aam
pop
jns
cmp
push
lods
dec
xchg
jp
jb
iret
loopne
mov
stos
in
outsb
xlat
jns
pop
fstpt
and
arpl
or
adc
sub
in
jecxz
test
push
das
out
das
dec
sub
int3
jecxz
les
xlat
repz
and
gs
jg
sub
lods
fcmovbe
orl
pop
and
inc
sub
data16
mov
clc
pop
js
and
sahf
loop
pop
push
out
jnp
cmp
shl
nop
xchg
xor
and
pop
dec
jns
jb
lods
pop
rolb
fidivl
fprem
jbe
daa
or
push
push
lods
les
add
xchg
test
lock
sub
jb
jmp
mov
inc
fstpt
inc
cmpsb
sub
test
js
fisubrl
test
pop
dec
jecxz
jnp
cmp
imul
mov
lret
or
rolb
out
push
xchg
push
cmp
loope
sbb
jnp
xchg
sub
js
mov
rcl
mov
cmpb
mov
fisttpl
lret
adc
pop
imull
push
and
xchg
mov
int
testb
jmp
adc
jne
cmpsb
sahf
out
sahf
pusha
out
push
enter
scas
sbb
xlat
add
inc
cli
shll
inc
insl
dec
sahf
mov
fisubrl
push
mov
int3
adc
popf
aaa
cmpsb
inc
push
push
sbb
adc
push
jo
dec
and
xchg
cmp
jns
push
scas
add
andl
add
lock
push
test
fidivs
mov
imul
mov
daa
push
push
jno
add
mov
imul
xor
or
pop
out
call
loopne
frstor
or
lods
push
addr16
es
icebp
xchg
cmpl
lret
fisubrs
int
mov
aaa
dec
sbb
hlt
ss
mov
push
ret
jl
xor
arpl
test
stos
pop
repz
sbb
lods
fchs
jp
push
pusha
mov
shlb
lea
aam
jae
xchg
dec
stos
ret
mov
dec
lcall
imull
xor
iret
inc
pop
add
mov
cmpsl
sbb
pop
and
jmp
pop
jo
xchg
add
repz
adc
xchg
clc
or
jbe
pop
fnsave
add
scas
sub
lret
jne
daa
xor
inc
and
and
pop
shrl
insb
outsl
inc
mov
adc
daa
mov
dec
out
mov
xchg
adc
mov
sti
outsl
pop
ret
sub
stos
je
std
xchg
jns
mov
pop
inc
mov
in
fmull
sbb
sbb
cmp
das
jle
ja
inc
mov
xchg
test
test
fidivrl
and
das
flds
fdivrs
cld
adc
out
xor
ss
enter
mov
pop
stos
mov
jl
cld
dec
std
push
add
sub
cmpb
fdivrp
into
push
leave
lock
xchg
add
adc
push
pop
int3
jns
adc
cmp
idivl
adc
or
popa
shrl
jnp
lcall
in
ja
sbb
sub
xchg
push
xor
popf
in
divl
inc
icebp
jmp
adc
pop
das
call
jnp
and
jbe
mov
scas
xchg
sbb
jo
into
or
aaa
jne
daa
imul
stos
les
ficomps
or
dec
repnz
sbb
sbbb
xchg
sbb
imul
xlat
insb
cmpsb
icebp
ret
mov
lods
dec
dec
xor
jo
call
lock
ret
dec
cmpl
cwtl
mov
mov
jne
lret
cmp
sbb
dec
shll
test
sarb
jg
popf
gs
inc
or
mov
push
adc
cmp
enter
mov
xchg
pop
enter
mov
push
xchg
repnz
enter
sbb
and
jno
leave
sbb
lods
addb
xchg
cmp
outsb
sar
shl
or
dec
mov
testl
mov
sahf
cmpsb
mov
jl
add
jb
sti
inc
out
mov
in
in
mov
inc
add
mov
in
sti
jo
pushf
loope
dec
and
pushf
lock
es
shlb
jns
jge
mov
rorb
test
jl
scas
outsb
xchg
jo
jmp
or
rol
loope
out
jp
pusha
test
jns
ret
insb
cltd
mov
cmp
dec
sub
pop
hlt
push
dec
sbb
mov
clc
push
mov
or
dec
popf
lods
aad
jnp
mov
jne
loopne
cltd
xchg
add
icebp
add
or
je
test
ja
fildll
out
sub
jne
adcb
fs
push
aad
pop
in
iret
enter
clc
xor
pop
sbbb
iret
rclb
cmp
jmp
ljmp
sub
int
inc
mov
and
inc
fmuls
mov
fnstenv
jp
mov
mov
fildl
mov
lcall
call
pop
cmp
lods
shl
js
lock
arpl
jecxz
fwait
inc
lcall
dec
sbb
clc
sarb
sbb
mov
insl
shll
lahf
and
push
add
mov
pushf
es
add
sub
add
sub
ret
mov
push
outsb
insl
shlb
je
popf
add
stos
adc
cmc
sub
movsb
and
fcoml
and
bound
mov
sub
mov
pop
jecxz
lock
mov
cs
cmp
jecxz
cmp
mov
icebp
adc
clc
jns
cmp
inc
cmp
or
in
dec
xor
push
loope
icebp
lds
and
or
pop
push
mov
dec
xchg
cmpsl
cwtl
leave
adc
jmp
adc
gs
out
adc
jle
movsb
mov
xchg
mov
les
xchg
hlt
push
mov
adc
lahf
cmp
pushf
pop
out
imul
popf
xchg
pushf
orl
dec
adc
movl
pop
mov
xor
jno
jb
rcll
imul
mov
pop
pop
loope
mov
dec
sbb
xor
xor
adc
xchg
sbb
out
cmp
xchg
sub
rorl
mov
test
cld
out
pop
cmp
add
mov
xchg
in
pop
sub
lcall
pop
scas
stos
test
dec
sbb
inc
adc
adc
shll
and
popa
push
popf
rclb
or
sarb
les
fucomp
add
out
push
cmpsl
adc
push
cmc
mov
rcll
push
aaa
push
mov
iret
inc
clc
pushf
push
lods
inc
ljmp
stos
jp
jp
loop
cmpsb
xor
aas
insb
out
mov
lock
cmp
or
pop
adc
xor
mov
adc
test
fsubrl
cs
es
sbb
mov
jge
lcall
dec
int3
outsb
push
add
mov
mov
xlat
jg
int3
subl
in
mov
repnz
ret
push
jns
sti
xchg
xchg
movb
mov
addr16
lods
enter
cmp
sbb
inc
mov
popa
sbb
lds
mov
dec
leave
mov
mov
xor
inc
adc
pop
test
gs
cmp
mov
jmp
cmpxchg
les
push
arpl
pop
cmp
test
fisttpl
inc
pop
push
mov
xor
test
int
cmp
sbb
loope
orl
out
and
enter
jp
sahf
pop
test
daa
aaa
scas
jl
fwait
rcrb
mov
pop
clc
outsl
loopne
sub
xor
fs
xchg
xchg
inc
cmc
fs
in
sub
xchg
aas
and
icebp
das
lock
scas
xchg
xchg
ss
adc
or
jg
or
dec
rcrb
pop
xchg
bound
mov
sbb
adc
dec
mov
gs
hlt
push
cmp
adc
pusha
roll
pusha
loopne
icebp
filds
sub
test
fldcw
xchg
mov
xor
rolb
pop
or
xor
cmp
jne
mov
xor
add
mov
mov
add
jmp
iret
jmp
sub
cli
in
xchg
sbb
or
sub
sahf
jnp
shll
mov
ret
imul
hlt
push
test
mov
xor
pushf
cmp
push
cmp
mov
call
pushf
int
sub
push
adc
ret
xchg
jle
jae
aad
lods
inc
sbb
mov
dec
inc
dec
fwait
and
cmp
mov
mov
and
sbb
sbb
xor
fsub
mov
out
or
inc
jle
inc
sub
mov
imul
stos
adc
int
jp
int3
rcrb
mov
cli
push
adc
adc
or
rclb
add
adc
aad
xchg
pop
cmp
into
push
int
pop
mov
ja
mov
filds
jge
sahf
jns
push
xor
push
dec
cltd
xchg
xor
out
mov
inc
lahf
push
icebp
push
or
lret
xor
or
jne
cwtl
pusha
in
inc
mov
xor
ss
test
xchg
aad
movb
movsb
outsl
add
push
out
mov
lods
pusha
pop
es
in
dec
imul
and
sbb
fldenv
lret
adc
sbb
mov
mov
fcomip
mov
cmc
arpl
or
or
mov
mov
mov
dec
incb
push
mov
dec
inc
aas
xorl
xor
jg
pop
sahf
stos
xor
je
add
xchg
dec
inc
xchg
xlat
rolb
mov
insl
mov
mov
inc
jo
pop
xchg
cmc
faddl
inc
jmp
inc
inc
sub
pop
cwtl
xor
out
mov
cmp
mov
adc
mov
addr16
in
push
xchg
iret
iret
stos
testb
rcll
lahf
mov
push
popf
jmp
xchg
pand
cmp
sbb
inc
adc
call
push
dec
sbbb
stc
xchg
in
pop
inc
xchg
mov
pop
and
ja
fnstcw
int
insb
lods
sti
adc
jl
das
mov
enter
sbb
jb
mov
mov
push
and
outsb
sbb
jae
addl
es
leave
xlat
addr16
xchg
pop
les
mov
inc
mov
arpl
and
xor
cltd
outsl
out
sub
jno
pop
xor
jle,pt
inc
inc
call
add
sub
shrl
and
lds
adc
jge
into
and
insb
push
je
imul
inc
jl
pop
int
pop
pop
adc
jbe
mov
mov
sub
out
in
test
std
cmp
cmp
sbb
jp
adc
sahf
mov
push
addr16
cmp
add
pop
sti
aam
movsl
dec
mov
mov
popa
subb
adc
movsb
and
shlb
xchg
mov
mov
push
and
dec
int3
or
xlat
out
lock
dec
iret
les
jmp
xchg
mov
mov
lahf
fwait
popf
sbb
mov
cmpsl
dec
mull
cltd
ja
in
mov
inc
or
jle
mov
sub
push
mov
or
xor
sub
add
int3
shl
jmp
jae
sub
repnz
shlb
push
ss
cs
xor
mov
xchg
sub
dec
jmp
or
ljmp
pushf
cwtl
xchg
add
dec
jl,pt
pop
adc
clc
sbb
push
stc
push
stos
sbb
fs
lret
mov
pop
adc
sbb
das
mov
adc
pop
mov
imul
stos
leave
push
test
lds
xor
pop
add
add
jne
lea
out
in
adc
inc
ljmp
mov
rolb
and
stos
ds
pushf
cmpsb
mov
es
add
mov
test
les
inc
outsl
sti
cmp
ja
loop
xchg
jg
ret
cmp
test
adc
adc
mov
mov
movsl
push
and
mov
shr
lds
mov
fwait
popf
in
sahf
enter
shrl
sbb
cmp
into
out
fimull
mov
pop
mov
rclb
inc
movsl
mov
out
mov
mov
popa
test
stc
xchg
mov
jle
lcall
cmp
mov
xor
xlat
imul
push
jl
fmul
addr16
inc
adc
xor
dec
cli
test
sbb
dec
xor
shll
cmp
fbld
shll
push
mov
dec
lock
mov
and
cmp
sub
push
mov
into
mov
loope
or
xchg
xchg
pop
fistps
fdivp
hlt
les
and
sub
xor
sub
mov
repnz
inc
test
jge
dec
cmc
adc
or
test
js
mov
lods
lods
cmp
mov
mov
xchg
xchg
mov
sub
lret
sbb
mov
negl
xor
fdiv
jns
loope
mov
repnz
jno
cld
sub
sbb
xchg
idivl
addr16
mov
fs
or
push
sub
push
lea
xor
xor
xchg
pop
ljmp
pusha
das
lret
jmp
loop
pop
mov
in
push
cmp
popa
sahf
mov
mov
adc
notb
mov
mov
pop
pop
int
nop
mov
mov
sbb
fiadds
movsb
inc
push
jl
addr16
dec
mov
inc
imul
or
out
xor
sub
sbb
mov
popa
lods
cmpsb
add
add
push
loopne
lods
push
into
jno
movsb
jo
xchg
nop
dec
out
clc
sbb
adc
out
mov
frstor
pop
ds
pop
pop
dec
push
nop
ds
scas
sbb
jo
insl
mov
stc
mov
mov
jg
clc
sub
push
outsl
mov
mov
push
or
xchg
out
xor
sbb
fiadds
mov
mov
cmp
or
lret
lret
popa
data16
xchg
pmulhuw
xchg
jbe
jne
mov
jle
int3
std
jae
push
pop
dec
das
hlt
pop
push
mov
mov
rcr
mulps
repz
incl
fisubl
ret
mov
fcomi
icebp
cmp
or
fstpl
push
dec
aas
cmc
in
andb
popa
scas
andl
std
jae
popf
mov
ret
dec
jae
sub
cs
or
test
mov
test
dec
arpl
and
xchg
xor
jns
and
adc
int
std
push
or
fnstcw
mov
jl
cmp
push
jmp
dec
inc
xor
and
lock
mov
test
mov
xchg
inc
movsl
sbb
test
aad
insb
bound
fnstsw
cmpsb
fldt
loopne
jg
into
js
dec
vpmullw
cmp
scas
adcb
sar
fwait
int3
inc
out
sub
xchg
sbb
loop
cli
and
divb
push
inc
cmp
mov
add
outsl
jmp
mov
mov
ret
out
jle
pop
mov
fisubrl
shl
cwtl
mov
lods
mov
push
and
gs
pop
in
lret
divl
sub
cmp
xor
cmp
stos
xor
testb
dec
and
sbb
and
inc
int3
std
pop
cmp
cmp
sbb
add
lret
jp
aad
in
clc
stos
cltd
adc
fldl
mov
sub
loop
add
push
cmp
js
inc
int3
push
jp
sub
in
mov
pop
aad
test
sti
mov
je
cmp
pop
or
sbb
jns
pusha
cmp
into
dec
push
ss
sbb
push
jno
and
mov
mov
cmpsb
mov
pop
lods
test
mov
bound
pop
repz
pop
fsubl
or
push
pop
pop
loop
push
push
xchg
jecxz
icebp
mov
jns
bound
aam
mov
pop
addl
xchg
pop
leave
popf
mov
int3
lahf
test
mov
dec
outsb
dec
out
jl
or
outsb
cmpsl
cmpsl
mov
pop
in
test
cld
hlt
push
cld
outsl
xchg
aaa
mov
mov
jne
or
jecxz
faddp
icebp
mov
push
sti
sbb
and
js
pop
fists
cmp
gs
dec
pop
xlat
jle
and
jo
adc
jl
imul
inc
incb
xor
fldenv
xor
lahf
out
mov
xor
aam
jge
pop
add
enter
and
cli
je
test
fisttps
add
into
adc
test
outsb
sub
inc
mov
jb
test
movsl
shrb
push
and
fwait
insl
mov
xchg
fcompp
ja
rcll
sbb
mov
dec
xor
sbb
sbbb
inc
jl
mov
scas
add
or
lret
aaa
stos
fbstp
out
dec
mov
popf
and
insl
push
pushl
xchg
in
hlt
pop
cmpsl
and
adc
shr
cmp
cwtl
sbb
sub
inc
lahf
jle
mov
es
add
in
hlt
xchg
imul
sarb
adc
jo
repnz
push
ja
cmp
xor
leave
rcll
add
cmp
test
push
ljmp
int3
mov
aam
mov
cmpsl
in
dec
cmp
push
xor
aam
mov
in
mov
cld
push
adc
xchg
repnz
inc
add
fwait
xchg
adc
xor
push
sbb
and
or
mov
xchg
adc
mov
dec
cmp
lods
xchg
jns
scas
insl
lock
or
fdivl
loop
mov
andl
xchg
movsb
sub
xchg
pop
jg,pn
insb
movsb
xchg
xorl
fsubrs
xchg
sub
shlb
pop
insb
adc
imul
seto
dec
inc
sbb
push
mov
sub
and
out
push
aad
inc
jae
add
bound
cltd
or
repnz
and
aas
popa
mov
rcrl
insb
ret
test
stos
add
xchg
inc
jo
test
je
jno
sbb
ret
or
or
lret
push
ljmp
mov
dec
into
cltd
mov
add
ret
cld
dec
mov
rcrl
ret
add
mov
sti
xchg
je
dec
sbbb
jbe
sbb
push
xorb
sub
xorl
call
fs
xchg
cli
mov
mov
cmp
aad
push
xchg
imul
lods
bound
push
in
mov
pop
pop
adc
jmp
hlt
stc
and
scas
sbb
fsubp
xchg
xchg
xor
bound
pop
dec
sub
xor
jbe
xchg
or
fwait
adc
and
push
popf
jecxz
jo
mull
aaa
loop
add
cmp
and
adc
xchg
imul
add
xchg
cmp
jl,pt
stos
addr16
or
jp
popa
test
jmp
pop
xchg
jge
sbb
gs
and
lret
fwait
imul
int
cmp
cmp
mov
sub
cld
xchg
andl
mov
mov
dec
jl
mov
push
das
lcall
adc
sti
pop
movl
sub
in
mov
ficoms
movl
popf
mov
loope
fidivrl
inc
das
out
adc
ss
add
inc
adc
popa
xor
daa
test
push
xchg
mov
sub
sbb
nop
in
mov
or
out
xchg
add
lret
mov
out
xchg
scas
bound
push
ljmp
push
xorl
sarl
mov
aad
orl
jb
push
sbbb
inc
insb
jo
rcr
pop
fsubr
adc
pusha
pusha
mov
fldenv
lock
dec
xorl
push
cmc
push
push
fstpl
xchg
dec
mov
fwait
push
out
iret
mov
push
lret
add
mov
mov
xchg
cwtl
rolb
into
dec
mulb
add
add
out
cmp
dec
or
popf
dec
shrb
mov
mov
pop
and
sub
int3
jg
negb
cmp
fdivp
lcall
loop
xchg
loop
das
movsb
repz
lret
jmp
dec
mov
stc
adc
rolb
xchg
lcall
loop
pop
aas
movsl
repnz
add
test
scas
mov
loop
ret
sahf
cmpl
xchg
aaa
sub
jbe
aad
insb
pop
cmp
jp
jnp
cmpsb
cmp
mov
dec
out
add
dec
mov
into
stos
imul
lret
jmp
pop
int
out
mov
stos
in
inc
mov
mov
popa
cmp
inc
lds
sub
mov
outsl
pushf
lcall
jmp
pop
sub
sub
mov
data16
pusha
xchg
cmp
jl
xor
jecxz
stc
jbe
scas
hlt
jns
in
stos
jmp
aad
inc
mov
sbb
dec
int3
cmp
iret
cli
sbb
test
fidivs
sti
sahf
add
xchg
jle
or
loop
imul
add
hlt
mov
popf
and
jbe
out
ljmp
sub
sbb
aad
pusha
sbb
mov
mov
pop
into
sbb
psubw
ds
pop
repz
cmpsb
jp
subb
cs
in
dec
jnp
testl
inc
mov
dec
push
int
sahf
fstps
incb
mov
inc
push
cli
dec
pop
clc
cmp
arpl
and
repz
xor
sub
pop
cmpsl
sbb
faddl
clc
icebp
inc
push
mov
jnp
aad
int
push
ror
or
cltd
xchg
mov
in
push
push
nop
mov
imulb
mov
notb
ljmp
repz
fildll
mov
fidivrs
das
addr16
push
cmp
addr16
adc
hlt
mov
lret
ret
into
and
stc
inc
clc
stc
mov
addr16
sbb
mov
mov
pop
mov
insl
xchg
adc
push
sbb
mov
gs
lds
cltd
jae
lea
dec
ret
dec
test
mov
xchg
inc
pop
jp
pusha
mov
cmp
pop
ret
das
adc
cmp
jecxz
rol
jne
mov
incb
in
rol
push
aas
pop
jo
stos
jbe
add
sbb
sti
sbb
ljmp
xor
sub
bound
fistps
mov
mov
sti
inc
pop
sub
sti
ss
add
fwait
mov
lahf
std
js
pop
xchg
mov
int3
leave
rcrb
idivb
pop
dec
pop
adc
pop
xchg
xchg
jecxz,pn
loopne
sub
sub
outsb
out
sub
jne
adc
mov
pop
adc
pop
xchg
outsb
sbb
cmp
rclb
pushf
lods
dec
jno
in
lods
sbb
inc
decl
sub
or
or
add
lods
jae
add
dec
in
test
ret
in
leave
inc
jmp
jmp
sbb
stos
xchg
cmp
jae
in
ret
jb
cld
lret
adc
inc
bound
cmpsb
movb
adc
xlat
and
ljmp
xchg
add
jmp
bound
cmp
jmp
push
jle
jl
adc
leave
pop
aas
cmp
out
mov
mov
iret
and
shlb
lahf
mov
cwtl
movsl
std
mov
adc
leave
sbb
aam
xor
pop
je
out
pop
inc
notb
lret
mov
sub
xchg
jp
hlt
je
outsl
xor
in
push
jecxz
ret
jl
adc
shrb
clc
and
sbb
movsl
mov
sbb
sub
mov
inc
mov
adcb
aad
mov
movsb
push
bound
bound
repnz
out
cmp
adc
loop
pop
or
push
xor
mov
icebp
push
cmp
repz
push
mov
xlat
xlat
push
or
inc
pop
or
push
ret
scas
adc
jl
xlat
mov
in
xchg
fisubrs
sub
and
in
push
mov
pop
pop
jnp
and
jl
jno
jge
divb
movsb
subb
ljmp
ja
xor
sti
push
push
rolb
cwtl
sub
and
sbb
lcall
pop
push
xchg
in
dec
mov
mov
pop
jae
fildl
add
xchg
mov
lahf
nop
xor
mov
ds
jne
cmp
jle
dec
rclb
test
push
aad
and
sbb
lret
in
mov
std
mov
and
stos
sbb
sbb
cwtl
ljmp
push
in
inc
shlb
outsb
mov
repz
cmpsb
ds
xchg
add
pop
sbb
aas
mov
mov
jle
ret
and
fldt
out
push
sub
inc
fwait
inc
mov
pop
inc
orb
push
ss
fucomp
and
je
cmp
mov
in
rolb
mov
in
cli
cmp
sti
pop
aam
jp
imul
push
mov
stos
ret
jne
xchg
pop
ja
js
aaa
sub
sub
or
pop
aam
inc
scas
add
imul
sahf
dec
aad
cmp
fistps
jns
mov
mov
loopne
sub
loop
mov
xor
pop
or
int
push
mov
inc
sub
cltd
jg,pt
icebp
mov
xor
xor
mov
push
or
and
sub
test
sbb
jnp
sbb
adcb
push
aad
push
imul
mov
or
push
add
xor
or
les
mov
mov
in
das
xor
push
xor
push
rcr
mov
push
movsl
cmp
xor
adc
xor
push
fists
inc
repz
mov
mov
pop
inc
mov
xchg
inc
lahf
mov
add
movsb
pusha
cwtl
cmp
inc
xor
xor
fwait
push
lret
arpl
addr16
ffreep
pusha
push
pop
or
mov
mov
loopne
pop
out
xor
ret
cmp
repnz
dec
int
fldl
dec
cmpsl
loope
int3
sub
pop
dec
xchg
pop
imul
cmp
xor
inc
xor
sub
insb
jecxz
push
in
scas
inc
pop
push
mov
or
push
xor
pop
test
popf
aad
sub
fiaddl
call
and
aaa
inc
sub
jne
shrb
push
xchg
call
aas
mov
mov
adc
or
les
xor
frstor
mov
inc
aam
jbe
test
and
fists
and
sbbl
and
inc
lcall
or
ficompl
add
sbb
jmp
cmova
push
add
or
inc
xchg
sub
stos
test
push
xchg
es
pop
arpl
and
in
jb
jmp
test
repz
sbbl
subl
in
nop
inc
add
cwtl
sub
clc
ljmp
int3
add
fcomi
repz
ja
inc
test
or
sti
pop
cmc
dec
push
or
addl
add
repz
fildll
pop
out
adc
mov
xchg
xchg
cld
push
xor
lcall
and
cld
outsl
cltd
push
inc
dec
mov
pop
loop
nop
aad
sub
shrl
ret
jne
dec
popa
pop
pop
adc
add
cmc
xchg
add
fsubl
dec
aaa
mov
pop
clc
sbb
and
aaa
sub
jns
push
cwtl
push
sbb
or
popa
xor
icebp
cmpsl
cmp
dec
add
icebp
adc
xchg
lcall
dec
push
dec
push
test
fmuls
fsubl
dec
cmp
xchg
addr16
cmpb
sahf
add
ds
cwtl
push
mov
inc
dec
clc
sub
push
jle
andb
xor
mov
das
int3
lret
icebp
cmc
ja
scas
in
std
lds
xchg
push
mov
xchg
or
fistl
inc
gs
adc
divl
pop
pop
xor
ljmp
sub
cli
push
xor
mov
xchg
fstpt
test
adc
xchg
mov
cltd
xor
call
les
xchg
or
cmp
jecxz
adc
scas
fildl
cs
inc
test
arpl
scas
cmpsb
enter
or
push
imul
pop
mov
pop
jmp
cltd
xchg
mov
movsl
scas
push
clc
mov
cmp
inc
mov
and
dec
and
dec
hlt
sbb
mov
adc
aam
fs
mov
or
mov
cmc
ss
mov
stos
movaps
and
pushf
mov
ljmp
add
pop
repnz
xor
in
push
outsl
jno
jecxz
inc
sub
push
test
sbb
sub
in
mov
mov
loope
mov
dec
mov
jge
ljmp
jge
sbb
in
repnz
dec
sahf
or
pop
push
pop
ss
jp
dec
sub
jmp
bound
sub
loope
out
rclb
ds
pop
jno
shlb
xchg
lds
ficoms
clc
js
push
test
xor
jmp
dec
jmp
mov
add
in
aam
in
sub
test
xchg
and
out
mov
fwait
andb
or
mov
adc
sub
sub
pop
mov
lods
aaa
lahf
outsl
xchg
icebp
pop
mov
shlb
in
push
shlb
arpl
mov
dec
push
mov
inc
ror
aam
aad
inc
jae
addr16
xchg
and
jg
fisttps
fists
enter
scas
mov
adc
test
movsl
dec
fs
jnp
mov
and
cmpsl
adc
pop
dec
cmp
adc
std
jns
jne
shll
ss
mov
cmpsl
leave
call
loop
push
je
xchg
mov
push
aad
sarb
repnz
das
push
inc
push
lea
adc
jnp
pop
fs
xchg
jmp
aas
fimuls
push
insl
pop
adc
stos
xchg
ficoml
push
push
mov
mov
mov
pop
insb
xchg
pop
aam
lods
cmp
mov
cmp
push
nop
or
hlt
fs
out
and
ja
mov
mov
xchg
cmp
or
je
pop
add
data16
adc
or
je
dec
outsb
cltd
or
mov
and
repz
mov
push
mov
inc
add
popa
mov
dec
mov
cmp
movsb
lods
call
pusha
jecxz
in
aad
test
mov
mov
mov
jno
jnp
jno
fdivr
sub
cwtl
loope
mov
and
cmp
jp
out
or
push
or
pop
push
push
scas
or
lods
push
loope
dec
mov
xchg
add
out
mov
pop
sbb
adc
nop
mov
inc
xor
scas
push
push
dec
mov
idivb
out
xor
test
je
mov
pop
in
fnstcw
lcall
leave
enter
cmp
repz
lods
hlt
jo
sbb
xor
mov
adc
sub
aam
sbbl
ss
mov
xchg
cmc
jnp
mov
sub
aad
imul
xchg
pop
push
mov
pop
mov
ficoms
jle
pop
out
imul
ss
cmp
mov
sbb
aas
adc
push
and
popf
cmp
dec
adc
jge
imul
pop
push
cmp
fbstp
pop
ja
fs
dec
fwait
inc
iret
mov
inc
icebp
iret
imull
movsb
adc
stos
sbb
data16
insl
adc
andl
mov
mull
ja
cmc
xchg
nop
lret
test
adc
mov
sti
adc
es
loop
jecxz
jno
in
ficoml
cmp
popf
ds
ljmp
cli
popf
cmpsb
test
lret
sub
mov
add
lds
mov
push
inc
lea
adc
xorb
mov
dec
push
pop
sub
ret
lret
jmp
loopne
push
mov
jne
mov
call
inc
dec
fs
mov
xchg
push
stos
dec
mov
mov
mov
cvtpi2ps
inc
dec
popa
loope
adc
fiaddl
cwtl
lods
and
out
sub
add
repz
inc
and
andl
inc
das
das
outsl
mov
dec
mov
add
sub
jne
and
es
aaa
ret
les
jge
jb
jl
sbb
xor
mov
jp
rcr
cli
out
mov
stos
xchg
dec
or
jo
in
pusha
mov
fs
sub
testb
sbb
and
xchg
testb
xchg
jb
xor
arpl
in
aaa
mov
movsb
int3
or
mov
out
ds
pop
inc
jmp
cwtl
xchg
and
pushf
int3
push
push
stos
pop
xor
mov
sub
push
push
mov
test
shl
push
sbb
dec
add
xchg
mov
cmp
rolb
sbb
out
jnp
fcomp
push
mov
pop
test
rorb
dec
movsl
xchg
lea
mov
adc
sbb
add
sub
iret
pop
cmpsb
adc
xor
sub
es
dec
repnz
and
lods
pop
mov
cmp
shrl
mov
gs
andb
test
int
insl
mov
stos
adc
fisttpll
popa
inc
cmc
add
sub
imul
pop
xchg
fcmovnbe
out
stos
insb
push
inc
dec
aaa
jge
test
enter
push
out
or
arpl
test
outsl
rorl
sub
lods
repnz
fwait
mov
push
mov
mov
mov
mov
push
ljmp
cmp
pop
or
push
and
test
das
xor
insb
aas
push
fst
cmp
cli
push
popf
inc
push
xchg
adc
mov
out
ja
push
subb
and
aad
adc
mov
mov
xchg
jns
es
scas
add
fists
rcr
cmp
fbld
popa
pop
jg
push
xor
or
pop
jae
cs
xor
adc
push
into
cmpb
mov
mov
cwtl
orl
orb
lret
push
add
mov
xor
inc
and
xchg
fidivrl
enter
inc
adc
clc
mov
xor
nop
lcall
addr16
xchg
jp
and
call
sbbb
pop
adc
push
pop
les
push
jmp
dec
popf
fnstcw
mov
test
push
lret
push
dec
in
xor
mov
nop
sbb
cmpsb
adc
cwtl
pop
add
in
pusha
sbb
xchg
and
jae
lcall
ret
push
sub
pop
int
out
data16
cmp
in
fs
inc
int3
loop
mov
or
mov
ljmp
cmp
add
mov
js
test
es
sub
into
add
push
mov
or
lret
ss
in
pop
test
ret
push
les
aad
mov
int3
aaa
je
xor
mov
faddl
divb
js
stc
lock
sti
je
sbb
fildl
sbb
jl
pop
fiaddl
adc
add
xchg
xchg
in
dec
mov
pop
out
jg
mov
xor
pop
cmpsl
jae
negl
std
aas
add
pop
dec
test
inc
xchg
jno
mov
pop
sti
mov
mov
iret
mov
gs
add
aad
sbb
jge
and
cmp
cmpxchg
sbb
andb
mov
pop
mov
xchg
xor
lret
loope
mov
rolb
lcall
inc
or
pop
xorb
xchg
mov
mov
push
fsubrs
or
dec
sub
and
jecxz
fbstp
add
sub
out
in
mov
test
xchg
mov
and
add
pusha
mov
or
xchg
xchg
xchg
adc
test
sub
mov
aad
out
lea
xor
jae
xor
inc
or
cmpsb
mov
out
shlb
jp
rorb
mov
sub
mov
pop
lock
hlt
rorl
cmc
pop
adc
mov
fadds
cmp
movsb
int
sarb
cmp
jg
cmovp
jno
cmpsl
mov
push
xchg
movsl
hlt
testl
daa
rolb
test
ficomps
clc
sub
pushf
push
push
cmp
adc
je
aaa
xchg
rol
out
xchg
sbb
mov
mov
pop
and
mov
addl
bound
ljmp
ret
xchg
lock
dec
mov
loop
pop
mov
insl
stos
out
jns
add
lcall
inc
fmull
mov
das
mov
push
xchg
or
xor
cmc
lea
in
lcall
and
dec
jle
movsl
jecxz
jno
dec
sarl
insl
pop
push
ljmp
lea
mov
roll
fistpll
jge
or
push
cltd
cmp
movsl
out
mov
fld
push
nop
jle
std
imul
mov
js
adc
inc
push
and
mov
jbe
aas
shrb
pop
loop
cs
test
xchg
xor
push
dec
push
int3
xchg
pop
inc
and
mov
xor
lahf
jnp
push
add
mov
lods
pushf
xor
sbb
cmp
stc
mov
cmpb
jb
pop
fsubl
jbe
hlt
jno
add
insl
fiaddl
xor
xor
repnz
jl
cmc
popf
cmp
scas
call
cmp
inc
sbb
and
add
aas
in
sub
fsubrs
sbb
jl
imul
in
mov
push
sbb
cwtl
pop
or
clc
inc
dec
mov
fisttps
push
pop
inc
inc
std
pop
ret
push
jmp
cmp
xchg
xor
inc
aas
dec
mov
mov
scas
ja
mov
inc
sub
push
mov
out
pop
enter
sbb
fldenv
add
movsl
fwait
or
test
mov
push
sbb
mov
outsl
ss
test
es
pop
jmp
mov
jne
xchg
mov
add
xchg
lret
xlat
xchg
in
leave
pushf
push
cmp
scas
out
data16
mov
in
sti
jo
out
cmc
out
pusha
xchg
lds
test
aam
push
jecxz
movsb
lea
and
lods
in
int
cli
sarb
mov
out
stos
imul
and
pop
or
repnz
push
add
push
jecxz
cmp
bound
lret
cmpsl
aaa
xor
mov
aad
mov
add
inc
jecxz
and
out
loopne
ficompl
mov
repnz
xchg
cmp
xchg
mov
ror
ficompl
inc
imul
imul
jae
dec
lock
mov
lods
cmpsl
fs
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
mov
xor
add
mov
mov
xor
orl
push
xor
mov
mov
subl
add
mov
mov
subl
mov
xorl
mov
mov
mov
subl
mov
add
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
sbbl
xor
and
mov
add
movzwl
xor
mov
movb
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jb
lea
mov
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
mov
add
mov
xor
subl
add
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
push
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
or
dec
mov
jmp
movl
mov
push
mov
andl
xor
or
mov
sbbl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
not
mov
orl
xor
sbbl
add
movl
jmp
sbb
mov
subl
mov
sbbl
xor
orl
mov
orl
add
movzwl
mov
and
mov
movzwl
addl
xor
add
inc
mov
movl
mov
inc
mov
mov
movl
cmp
jne
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
call
jmp
mov
mov
sub
xor
add
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
xor
add
neg
mov
or
movl
movzbl
or
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xor
mov
adc
mov
adcl
xor
orl
add
mov
mov
mov
je
add
mov
andl
mov
xor
adcl
xor
sub
notl
sub
xor
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
adc
mov
subl
lea
movl
mov
mov
mov
add
adcl
imul
mov
xor
mov
xorl
mov
movl
add
movl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
xadd
dec
push
dec
dec
sar
mov
fildl
mov
jnp
xlat
sahf
jnp
sbb
les
loop
xchg
cmc
xchg
xor
stc
mov
adc
stos
negl
ljmp
push
fisubrl
outsl
sbb
es
test
test
sti
mov
shrl
sub
ret
sti
cs
fimull
cmp
mov
pop
cs
cmp
or
dec
mov
icebp
fwait
jge
mov
enter
into
cmc
imul
jecxz
jo
fcoml
sbb
xor
outsb
cmp
jns
xor
clc
or
sbb
jge
fisttps
add
dec
movsb
fs
pop
arpl
mov
js
mov
sub
scas
popf
push
sbb
jo
add
jne
add
push
out
jae
test
push
lret
dec
out
cs
cmpb
sub
push
sub
pushf
mov
scas
mov
and
test
push
dec
xor
push
push
in
icebp
xor
mov
and
mov
in
lds
and
xor
jne
and
rorb
setb
inc
inc
out
mov
out
dec
lret
into
pop
out
mov
inc
pop
jb
dec
xor
insl
mov
push
xlat
mov
sti
sbb
pop
inc
cwtl
nop
je
and
lahf
testb
fs
into
sbb
pusha
ljmp
mov
xlat
lret
adc
cmp
push
sub
xor
adc
dec
or
sahf
insb
in
pop
cmc
mov
dec
fcomps
mov
je
std
add
push
cmp
mov
jo
clc
inc
fmull
iret
hlt
dec
adc
test
mov
movb
adc
dec
or
inc
mov
mov
les
add
test
in
pop
outsl
enter
inc
mov
stos
iret
cmpsb
xchg
nop
pusha
push
jne
sti
js
fidivs
dec
loopne
jl
push
adc
jl
mov
aas
sbb
mov
subl
jl
xorl
or
iret
xchg
jmp
push
rcl
pop
mov
mov
loopne
xor
mov
das
test
cld
jbe
adc
stos
addr16
mov
xchg
aam
into
ja
jne
inc
pushl
mov
imull
jbe
iret
cld
mov
mov
into
stc
mov
push
mov
add
dec
aaa
int
jp
mov
push
outsb
xchg
stos
pop
mov
mov
sbb
shrl
decb
mov
out
mov
inc
fldt
adc
loope
mov
daa
popf
outsb
xchg
cmp
aam
jns
lea
and
and
pusha
lock
or
mov
lret
lock
cmp
jnp
dec
shrb
shl
push
mov
jae
sub
jns
xlat
jae
fcomps
mov
daa
ja
push
fnstcw
push
add
push
jle
icebp
xchg
sarl
fimuls
xor
jmp
push
xchg
mov
cmp
mov
je
insl
lahf
ret
insl
jge
push
popa
pop
jae
mov
mov
mov
pop
inc
push
pop
iret
dec
fwait
dec
push
cmp
je
cmp
and
add
dec
les
add
cs
fmull
pop
pop
sbb
into
mov
add
mov
aaa
jno
cmp
jns
add
cmp
orl
jae
sub
stos
mov
push
adcl
xchg
inc
pop
dec
cltd
bound
sahf
jne
adc
std
fsubs
es
cltd
insb
test
cmp
into
adc
clc
xchg
cmpsl
add
in
push
push
clc
add
scas
mov
in
sbb
ss
pop
and
jbe
lock
pop
jl
or
sar
add
std
fisubs
xchg
sub
push
out
xlat
xor
lret
sub
jnp
js,pn
or
lea
dec
mov
jns
hlt
add
loopne
push
data16
les
mov
inc
imul
xchg
int
outsl
add
scas
xor
mov
xor
test
leave
ret
fmul
dec
aaa
xchg
mov
sbb
and
imul
jnp
cmp
dec
dec
xor
mov
lds
sub
push
je
icebp
add
jnp
xor
cltd
ret
or
add
pop
repz
cli
or
insl
aaa
jg
pop
ja
and
sub
nop
dec
repnz
adc
test
in
inc
adc
gs
inc
iret
or
push
jns
push
xchg
add
dec
sbb
jecxz
sti
inc
ljmp
lahf
outsl
stos
mov
mov
inc
fisttps
lret
and
les
mov
or
push
push
cmp
adc
outsb
addr16
cmc
xchg
xchg
xor
sub
push
iret
jb
mov
testb
mov
pusha
xor
jl
imulb
mov
fldenv
fwait
pop
imul
icebp
insl
cmpsl
cmpb
fmul
jge
and
sbb
push
pop
and
mov
push
adc
insb
or
mov
mov
push
lahf
sarb
lock
nop
inc
popf
movsb
cmpb
cld
test
jnp
aam
and
into
fcmove
xchg
xor
add
cmpsl
cmp
nop
shll
daa
push
xchg
or
sbbb
xor
inc
lret
daa
movsl
popf
mov
mov
sbb
mov
push
insl
addr16
inc
mov
cld
xchg
xchg
sbb
hlt
out
insl
push
test
jns
addr16
hlt
lea
cmp
ja
jo
imul
xor
in
mov
fisttps
ja
cmc
test
xchg
movsl
or
bound
jge
popf
or
cltd
or
sub
pop
jo
sub
loope
pop
ret
lods
sub
arpl
int
ss
mov
cmp
pusha
cmp
add
dec
je
pop
pop
xchg
jle
call
mov
cmp
jno
push
popf
testw
pop
mov
mov
fs
test
nopl
fsubrs
test
clc
sbb
cmp
jbe
xchg
hlt
popl
in
cmp
inc
add
push
dec
jg
lcall
mov
cmp
sbb
mov
sahf
outsl
sub
js
mov
pop
test
push
flds
sub
stos
stc
lods
sarl
pop
lret
les
shlb
cmp
xor
stos
cltd
or
mov
mov
mov
xor
test
mov
popf
inc
das
ficomps
pop
setne
std
push
jae
jnp
adc
inc
lahf
imul
enter
leave
das
and
repnz
push
adc
lods
xchg
cltd
push
cmc
mov
pop
cld
jbe
jne
push
pushf
cmp
mov
out
mov
loope
enter
mov
and
jo
imul
push
pop
mov
push
pop
cmp
sbbl
mov
cmc
imul
jo
push
add
jmp
in
sbb
aam
push
jne
mov
jns
and
inc
fildll
jns
xor
and
into
mov
adc
add
call
jns
ret
cmc
pop
out
sub
sbbl
subl
vorps
pop
jg
cmp
mov
jg
mov
cmp
dec
xchg
bound
dec
loop
mov
xor
add
es
js
dec
test
les
sub
cmp
into
xor
push
ret
icebp
fists
cmc
ss
iret
cmp
cmp
inc
arpl
scas
fisubrl
sbb
push
mov
jne
jno
or
add
int3
leave
into
jb
test
jmp
test
pop
lahf
out
ja
rolb
aam
push
mov
adc
sbb
or
addr16
aam
mov
fmul
mov
aad
jg
pop
xchg
fnstsw
insl
mov
stos
jno
ja
shr
lods
leave
loopne
mov
sub
xchg
mov
sub
push
pop
in
pop
push
loope
fwait
inc
xchg
mov
sub
mov
adc
mov
jno
scas
cltd
sbb
cmpsb
pushf
and
mov
das
sbb
xchg
dec
adc
faddl
stc
fidivrl
fidivrl
loopne
or
and
fiaddl
mov
pop
lret
mov
or
push
in
and
shll
lret
xchg
push
xor
push
in
mov
mov
pop
push
mov
dec
xor
call
fdivr
xor
jmp
rorb
imul
add
cmc
out
xorl
jle
insb
mov
les
and
cld
adc
mov
cmp
mov
ret
out
loopne
stos
pop
push
xchg
xor
or
push
popf
dec
out
add
push
and
cmpsl
inc
mov
lock
push
mov
mov
shll
in
dec
fcomps
or
mov
pop
cmp
adc
cltd
inc
cmc
cmp
jmp
adc
fidivl
pop
or
cwtl
das
out
jle
xor
enter
xchg
sub
mov
pop
loopne
ljmp
or
stc
frstor
test
fsub
adc
loope
fcomps
inc
push
ret
cmp
inc
sub
popa
dec
sbb
mov
push
jl
adc
fnstsw
jb
fisubl
ss
sbb
aaa
adc
outsl
dec
data16
cmp
xor
push
xchg
cltd
lcall
das
mov
and
dec
movsl
inc
jg
dec
mov
inc
inc
das
shll
ret
mov
shrl
fidivs
aad
call
lcall
mov
sbb
icebp
fwait
xor
shr
mov
sbb
mov
sub
cmpsb
push
nop
mov
xchg
aam
loopne
ds
cmp
rol
xchg
lods
push
mov
aas
push
jge
in
cmp
xor
iret
arpl
std
pusha
xchg
xchg
testb
push
and
fiaddl
inc
cmp
aad
jle
mov
iret
aad
mov
fwait
pop
adc
adc
pop
mov
inc
les
xchg
repz
mov
push
adc
xor
sbb
aad
into
mov
mov
add
sub
ja,pn
dec
gs
jb
mov
xchg
push
ror
mov
mov
and
arpl
lock
jg
adc
ds
aad
in
pushf
add
out
stos
xor
iret
xchg
fiadds
in
pop
stos
mov
movsb
jo
jp
pmulhw
jbe
sbb
stc
mov
jp
sub
sub
sti
add
lea
pop
sahf
xor
shlb
popl
add
jo
addr16
mov
les
stos
cmp
cmp
or
xchg
mov
and
mov
mov
scas
dec
lea
push
leave
jb
mov
out
and
push
out
jp
imul
repz
js
movsl
out
sbb
filds
mov
decb
dec
adc
xchg
and
dec
test
sbb
mov
mov
sub
outsl
mov
jbe
mov
push
pop
test
xor
sub
sbbl
lsl
out
cmc
cmc
xlat
xor
pop
and
jo
jecxz
sub
mov
mov
sub
ljmp
pop
dec
and
mov
divps
inc
outsb
test
jne
sub
stc
or
icebp
fucomip
icebp
push
jne,pn
mov
test
and
mov
loope
push
mov
dec
and
insl
push
cld
lods
imul
mov
add
fistl
lahf
pop
pop
cld
dec
sub
lahf
and
mov
orb
fucomip
aad
arpl
cmp
push
mov
xor
mov
sub
mov
jge
into
mov
cmpl
mov
pop
adc
fstp
ret
fwait
cli
into
sbb
jo
iret
mov
out
push
dec
cmp
stos
outsb
aad
std
call
mov
mov
cwtl
bound
sbb
mov
ljmp
cmpl
or
sbb
xor
scas
inc
add
jae
inc
push
into
or
xlat
pop
mov
fnstsw
sbb
sahf
add
adc
xor
in
add
sub
sbb
mov
cli
adc
jbe
fisttps
push
pop
and
jns
popa
sub
dec
mov
or
push
repnz
jmp
or
add
inc
dec
sbb
push
xchg
mov
cmpsl
push
xor
out
sub
mov
andl
dec
add
leave
testb
outsl
or
adc
outsl
jns
roll
sub
cmp
cmp
movsl
xchg
ja
inc
or
sbb
lret
push
ret
mov
imul
sub
jle
pop
and
xor
push
fld
popa
and
test
xor
fcoml
rcr
or
leave
outsb
into
scas
jg
out
xor
mov
fisttps
or
mov
arpl
ficoms
jo
dec
mov
pop
push
dec
push
xchg
aas
imul
sbb
or
dec
or
das
mov
xor
sub
lds
mov
cmp
inc
lret
add
in
lcall
pop
mov
loop
clc
pop
push
mov
lret
adc
inc
shll
adc
jo
roll
ja
orb
lahf
imul
lret
ret
or
jg
mov
inc
mov
test
gs
inc
outsb
adc
or
std
dec
xchg
int
mov
and
test
cmp
lds
aam
adc
aas
iret
dec
xchg
jmp
dec
test
cmp
ljmp
lock
cmp
and
scas
ret
mov
push
scas
dec
rorl
pop
movsb
jns
adc
aaa
mov
enter
int3
out
mov
lcall
mov
lret
xchg
loopne
xchg
leave
addr16
addr16
mov
sahf
xchg
cmp
push
cmp
daa
push
jnp
ficomps
movl
or
jno
push
add
jo
push
add
pop
and
pop
jmp
xchg
add
cli
cmpsl
xor
lahf
mov
loope
cmpl
repz
jmp
out
pop
or
cmp
ds
movsl
sbb
jecxz
mov
push
sbb
xchg
ds
scas
cmp
and
dec
push
mov
or
and
sbb
cmc
pop
add
in
pop
rol
mov
into
mov
adc
mov
mov
roll
ret
repnz
inc
je
imul
inc
js
cwtl
push
pop
in
fsub
daa
mov
imul
scas
xor
out
cwtl
jecxz
xor
imul
push
lea
notb
add
xor
je
mov
sub
shr
loopne
dec
xor
cli
xor
ret
fsubrp
lcall
push
jne
js
add
daa
insb
adc
inc
jnp
xchg
dec
mov
mov
jb
sahf
jmp
or
out
popf
or
decl
lods
add
xchg
inc
adc
inc
enter
mulb
and
imul
mov
xor
mov
cmpsb
or
enter
inc
xchg
or
shrb
rcrb
jp
movsb
js
es
int
lds
loop
cmc
testl
cmp
mov
into
inc
fcomp
out
add
push
add
scas
inc
mov
out
mov
and
addr16
cmpsb
jne
and
sysenter
cmp
pop
pop
fistps
jecxz
pop
clc
sbbl
sti
es
dec
dec
imul
outsb
push
pusha
xchg
lcall
sbb
dec
cmp
lahf
nop
jg
jbe
mov
mov
lods
int3
rcrb
and
leave
dec
ret
mov
push
jnp
icebp
aad
lods
in
cmp
push
jnp
or
int3
jle
lock
mov
shrl
mov
add
pop
fisubs
fldl
jg
not
mov
aam
rcrl
loop
cwtl
insl
sbb
movsl
sti
xchg
aad
sub
fildll
aaa
popf
and
mov
call
dec
aaa
and
xchg
ljmp
nop
xchg
mov
sub
mov
dec
arpl
das
cmp
mov
mov
lods
jo
dec
fbld
bound
pop
fscale
dec
mov
mov
and
pop
sahf
xchg
dec
cmpsb
gs
sbb
inc
rcrl
mov
not
movsl
in
add
sub
mov
sub
cmp
and
aaa
lods
outsb
repnz
test
je
movsb
or
pusha
jo
add
inc
mov
cmp
mov
in
jne
imul
sub
adc
je
in
test
filds
and
push
gs
ja
inc
push
sub
mov
push
pop
cltd
cmp
mov
inc
lahf
dec
add
int
cmp
repnz
xchg
leave
xor
jp
jns
les
iret
lds
mov
adc
shlb
jge
bound
loopne
push
inc
dec
lea
bound
stc
cmp
or
mov
in
push
out
xchg
andl
aaa
ficoml
pop
inc
cmp
outsl
and
lcall
aad
dec
xchg
hlt
pop
es
push
sbb
stc
jo
insb
mov
scas
inc
ds
xor
jb
dec
adc
cwtl
ret
ja
mov
data16
test
cmp
mov
cmp
pushf
or
jo
daa
pop
mov
mov
data16
cmpsl
sbb
sti
cld
hlt
pop
xchg
daa
xchg
mov
ret
imul
das
push
xor
je
add
dec
cwtl
mov
sbb
mov
out
mov
mov
out
mov
in
lds
add
xchg
cmp
mov
xor
psubq
sub
jmp
lahf
lret
inc
insb
mov
jle
lds
inc
dec
lret
jecxz
push
cmp
lods
shll
int3
dec
in
sub
movb
sub
stos
stos
clc
jle
xorb
inc
sbb
into
test
movl
and
xor
sub
xorb
arpl
add
or
rorl
arpl
jg
mov
int3
jmp
push
rcrl
popf
xchg
ja
shll
aas
mov
xchg
imul
es
dec
scas
sub
sbb
stos
cmp
arpl
aam
popa
sti
xor
dec
bound
mov
push
mov
insl
inc
repnz
jno
idivl
adc
movl
and
adc
lahf
xchg
cmc
movsb
push
push
sub
cld
scas
mov
insb
cmp
ret
dec
xchg
sbb
mov
cmpsb
mov
mov
aaa
out
pop
sub
clc
pop
icebp
dec
in
aaa
sub
ret
inc
ljmp
xor
popl
push
stos
sub
xchg
addr16
fisttps
inc
sbb
in
iret
shrl
xor
andb
lret
push
aad
or
adc
mov
xchg
pop
mov
cmp
sbb
lcall
add
loopne
xchg
rol
int
pusha
in
xchg
movsb
sti
aas
cmc
scas
pop
mov
adc
fisubrl
adc
add
mov
and
add
addr16
lea
jb
and
test
lods
add
pop
outsb
mov
sbb
dec
ds
jo
in
add
adc
scas
cs
orb
bound
loope
ds
add
jle
insl
push
ficoml
stc
lds
leave
dec
ja
mov
cwtl
out
dec
sti
mov
stc
add
ljmp
xchg
mov
jb
inc
adc
push
andl
mov
arpl
xchg
mov
pop
add
movsl
in
sarb
repz
addb
sub
pop
aaa
push
jnp
ja
xchg
ret
push
mov
lret
dec
mov
aam
or
inc
inc
mov
or
ljmp
ret
outsl
sarb
or
mov
cmp
xchg
dec
scas
nop
jl
jge
and
icebp
popf
mov
insl
fsubrs
xor
imul
lret
nop
mov
dec
ficompl
xlat
ljmp
pop
sub
data16
jo
bswap
jb
out
outsl
iret
jo
scas
add
push
pop
imul
in
mov
ret
rorl
cmp
cmp
jecxz
pop
es
jae
imul
xchg
mov
gs
ficomps
inc
push
bound
jno
lcall
lods
lods
sti
mov
cmp
fbstp
icebp
mov
cld
jo
ret
dec
jp
aaa
aam
add
and
loop
divb
lds
ret
lock
fstps
in
cmp
lds
jne
mov
xor
int
add
add
dec
sbb
dec
imul
addr16
lret
xlat
rclb
inc
mov
fs
out
cmp
dec
xor
sub
adc
inc
loope
in
sbb
sub
push
sub
ldmxcsr
add
les
int
jno
dec
out
outsb
add
movsl
ljmp
cmp
arpl
imull
lcall
cli
mov
xor
jle
rcr
push
fs
shrb
jge
outsl
push
jl
popa
jb
pushf
mov
jb
ss
fldln2
jne
mov
outsb
pop
dec
adc
movsb
xchg
jl
jne
ret
sti
jmp
pop
pop
xchg
stos
lcall
lock
push
adc
dec
adc
inc
mov
fwait
mov
pop
rolb
hlt
inc
push
add
outsl
pop
push
xchg
faddl
jo
push
imul
out
out
repz
and
imul
scas
sbb
rorl
add
or
dec
push
lods
mov
inc
mov
ja
xor
pop
mov
dec
mov
sub
jl
divb
les
mov
and
cmp
sub
xor
ret
mov
loop
sub
lea
push
mov
sar
pop
adc
loope
lcall
push
mov
ss
ss
scas
test
stos
jnp
dec
aas
push
adc
mov
xor
outsl
xor
out
inc
add
cmp
popa
dec
imul
mov
andl
inc
push
and
rorl
mov
pusha
adc
addr16
mov
cmpsl
test
sbb
aas
xor
and
mov
mov
sbb
or
mov
aam
jnp
scas
jmp
inc
addl
add
mov
gs
jns
pop
inc
dec
sbb
pop
xchg
insb
push
fisubrs
pop
fstps
iret
adc
xchg
and
mov
ss
lahf
test
mov
js
mov
or
out
lret
call
or
inc
cmp
push
jmp
push
jg
mov
leave
xchg
mov
pop
sbb
rcr
bound
das
aam
or
insl
ret
xor
lock
std
add
xchg
jno
jae
add
jns
jnp
xor
sub
pop
sahf
mov
push
dec
cltd
inc
add
outsb
lds
mov
cmp
xchg
cmpsl
or
cmp
ret
sbb
dec
and
sbb
in
outsb
movsl
decl
and
jle
add
divl
push
push
stos
add
out
daa
add
pop
jbe
adc
fcmovu
insb
sbb
enter
daa
mov
movsb
mov
sub
pushf
add
dec
fs
mov
or
cmc
push
cmp
inc
add
cmp
imul
pop
filds
and
aam
leave
sahf
mov
data16
inc
pop
sbb
sbb
jmp
add
movsl
pusha
jno
dec
sbb
dec
xor
call
mov
inc
push
inc
push
fnstenv
cltd
cli
mov
mov
cmc
jge
push
push
jnp
outsb
in
stos
daa
or
cmp
add
repz
xchg
pop
dec
shlb
fwait
lods
pop
int3
fisubs
jle
scas
sub
out
insl
fisttpl
mov
and
cltd
sbb
push
es
inc
xor
dec
std
mov
and
mov
pop
call
push
xor
jns
dec
sub
sub
xchg
aad
push
push
std
dec
into
test
int3
es
jmp
cmp
pop
gs
push
mov
std
xlat
aas
es
adc
pop
jno
add
xchg
int3
push
xchg
out
mov
jecxz
imul
jecxz
xchg
adc
inc
inc
dec
cmp
cmp
adc
pop
cmp
inc
pop
add
mov
xor
xlat
inc
pop
movsl
cmp
inc
push
aad
int3
xchg
sub
cmp
loope
scas
movsb
fbstp
adc
daa
stos
adc
and
movsl
movsl
push
fldenv
mov
xchg
into
jmp
or
and
addr16
test
push
xchg
out
pop
shrb
out
mov
adc
movsb
mov
repz
inc
rolb
scas
shl
sahf
inc
fldt
xor
jnp
mov
xchg
dec
insl
outsb
cltd
lret
adc
ffreep
lock
dec
and
mov
inc
icebp
subl
aas
not
ret
imulb
aaa
cmp
pop
add
jae
out
pop
test
leave
and
xor
inc
insl
pop
pushf
out
movsb
ret
inc
dec
push
lret
fs
cmc
popa
dec
or
cltd
in
sub
out
ret
jp
aaa
cmp
stos
xor
rol
imul
jecxz
dec
mov
imul
dec
fistps
mov
pop
movsl
push
repz
push
mov
dec
out
push
mov
mov
lcall
int3
sbb
mov
inc
xchg
insb
mov
ret
pop
popf
and
adc
mov
add
xchg
js
or
movsb
pop
imul
pop
xor
daa
movsl
jl
mov
jle
mov
sbb
cmc
pop
push
push
xchg
pop
stos
adc
mov
in
outsb
sbb
insl
jg
jmp
shlb
fisubl
lret
addr16
adcb
in
scas
fcmovnb
jne
pop
inc
dec
cmp
cmp
or
nop
pop
idivl
dec
call
add
sbb
test
scas
in
lret
rcrl
icebp
jge
mov
pop
fldl
imull
xlat
pop
ret
fists
jle
lcall
pop
xchg
inc
jo
ss
mov
mov
fisubrl
sub
add
add
inc
ja
ds
jg
jg
jne
lea
cs
into
pop
addl
jnp
out
push
call
and
or
or
xchg
cmp
push
push
xchg
lds
mov
lcall
xchg
mov
jo
mov
jmp
cld
push
dec
sub
vpminsw
mov
add
mov
mov
cmp
or
std
inc
pop
pop
movhps
outsl
sarl
mov
sub
loop
or
push
inc
mov
dec
inc
jmp
lahf
cmp
lds
jge
cmp
cmpsl
xchg
in
sahf
and
clc
subb
outsb
shrb
sub
lcall
pop
mov
into
mov
jge
jnp
pop
lcall
jge
pop
or
xor
cwtl
iret
sub
fwait
test
push
into
jge
loope
out
mov
jnp
jae
sar
and
mov
jp
adc
stc
adc
xchg
mov
popf
mov
xchg
sbb
adc
jmp
xor
add
shlb
jae
mov
pusha
xor
lds
call
lahf
popa
xchg
aas
mov
popa
enter
cmpb
add
out
xchg
lods
scas
or
add
and
leave
pop
pop
in
js
fistl
mov
push
ror
ret
nop
loop
cli
sbb
inc
iret
lods
sbb
add
or
ficoml
adc
out
and
les
repz
repz
out
or
lock
xchg
shll
leave
lret
add
push
enter
mov
mov
movb
subb
lea
or
stos
out
loopne
cwtl
ffreep
dec
fnstcw
cltd
sbb
enter
adcb
add
div
movsb
repnz
jmp
in
aas
fidivrl
sarb
cmpsb
lods
cltd
and
es
dec
mov
xchg
out
pop
insb
mov
dec
out
ss
pop
inc
push
das
pop
dec
sbb
shrb
jbe
jmp
mov
sbb
test
jp
sti
cwtl
out
fidivrl
cmp
jne
push
nop
xchg
mov
iret
popa
test
push
cwtl
arpl
lods
jae
rcrl
pop
ror
ja
sbb
jae
mov
xor
je
leave
push
mov
imul
addr16
jbe
cmpsl
roll
insb
push
test
sub
popf
jmp
imul
dec
adc
add
lret
mov
sbb
movsl
sbb
loope
out
je,pt
inc
cmpsl
jle
inc
inc
jp
mov
push
cmpsb
fmull
sbb
sarb
frstor
add
cmp
gs
pop
jge
and
xlat
shrb
push
dec
bound
dec
add
loope
popa
push
fistl
cld
add
jmp
into
xchg
popa
cmp
negl
ret
fwait
ret
xchg
das
adc
enter
clc
push
cltd
add
xchg
sub
inc
adc
out
dec
jmp
add
pop
dec
cmp
out
xor
and
cltd
pop
fdivrs
push
xchg
push
out
cmp
call
xchg
and
in
movsl
ss
pop
scas
ss
cmp
shr
cmpsl
cli
mov
lret
gs
cmp
andl
mov
mov
rcr
push
xor
aam
inc
iret
cmpsb
ficompl
fisttps
das
inc
aas
or
call
pop
sub
imul
cmpsl
data16
jne
add
std
xor
mov
mov
push
mov
cli
rcrb
bound
aaa
xchg
shl
dec
push
push
iret
push
xor
in
ss
sti
testl
xor
hlt
xor
pop
fadd
ja
cmpsl
ja
pusha
cmp
hlt
int
or
repnz
xor
imul
out
lret
js
and
test
mov
cmpsl
dec
stc
mov
ss
in
cmp
fsubs
sbb
fs
pop
sub
sbb
das
mov
or
movsl
cmp
mov
cmp
int3
loope
hlt
inc
sti
gs
cmp
inc
jl
in
dec
adc
xchg
adc
push
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
incl
add
sbbl
or
movl
cmpl
je
cmpl
jle
jmp
pushl
call
mov
dec
mov
jmp
mov
add
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
sub
add
sbb
mov
xor
mov
mov
sub
mov
add
xorl
xor
mov
movzbl
adc
mov
xorl
xor
add
movl
jne
jmp
mov
inc
sub
movzbl
xor
xor
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xorl
xor
xor
subl
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
jmp
enter
jecxz
dec
push
add
xlat
shrl
jnp
xlat
sahf
jnp
add
mov
ret
mov
int
data16
push
jns
or
push
iret
pop
jo
mov
jl
aad
inc
push
jno
push
mov
divb
push
std
xor
rorl
popa
rcl
adc
inc
mov
filds
push
mov
cld
fisubrl
imul
iret
lret
stos
inc
jne
ds
mov
pop
sub
pop
xlat
rorb
in
enter
sbb
xchg
loopne
mov
lds
shl
cmc
mov
ror
into
lock
jp
pop
adcl
mov
repz
sub
outsb
lahf
pop
mov
flds
push
push
test
imul
leave
jg
clc
ss
data16
xchg
call
xchg
pop
scas
xchg
inc
ficomps
push
fcoms
dec
cmpsb
pop
es
pop
xchg
mov
xor
pop
cltd
adc
or
add
xchg
jg
jle
insl
adc
sbb
jae
ja
in
cltd
cld
gs
mov
sbb
xor
cmp
jge,pn
mov
aad
js
fisubrl
jmp
jno
mov
sarb
ret
push
or
push
lahf
ss
lds
aaa
jge
inc
cmpsl
stc
stc
das
inc
in
cmp
ljmp
push
push
test
arpl
pusha
out
mov
cs
ljmp
dec
mov
popf
mov
leave
andb
sub
xchg
inc
xchg
mov
mov
dec
test
loop
sub
pusha
hlt
cltd
call
mov
lcall
adc
xchg
push
pop
or
addl
andl
imul
sti
pusha
pop
add
or
inc
inc
and
jb
push
rcll
sahf
fmull
mov
lods
iret
cld
fstpl
xchg
pop
cwtl
lods
cld
iret
add
xchg
aam
daa
lea
sbb
pop
jle
outsl
aam
imul
daa
mov
out
fisttpl
lea
cld
iret
sahf
pop
cmc
into
sub
and
jb
cltd
inc
mov
movl
mov
push
sbb
push
cmpsb
push
pusha
mov
data16
lds
sub
mov
popf
dec
popf
dec
xor
sub
mov
je
ljmp
js
loope
addr16
into
fldt
repz
lds
arpl
fmul
sahf
xchg
test
stos
lods
and
fnsave
xchg
pop
or
xor
lahf
sbb
pop
repz
jae
ret
inc
rorb
outsl
fs
es
xor
loop
xor
int3
repz
daa
cmp
push
cltd
repnz
inc
aas
sub
pop
jmp
out
mov
sbb
cmp
ja
xchg
gs
rol
nop
clc
test
in
nop
dec
addb
xor
dec
jmp
inc
vmptrld
test
hlt
inc
sbb
xchg
inc
dec
ljmp
push
outsl
clc
push
push
iret
mov
test
nop
xchg
sub
out
push
repnz
stc
push
and
xor
dec
add
pop
rcl
cmpb
add
ss
or
mov
sarl
dec
lea
push
mov
jbe
into
sbb
add
xchg
adc
push
or
mov
test
jp
jg
or
xor
jecxz
jp
or
or
test
nop
out
jb
pusha
pop
leave
in
add
xlat
hlt
imul
mov
stc
leave
add
inc
fadds
fwait
xor
pop
das
mov
loop
pop
inc
pop
mov
push
das
xor
addr16
xor
and
lods
ret
pop
pop
int
sbb
and
and
ret
dec
outsl
out
xor
aaa
leave
inc
push
ffreep
movsb
sub
inc
mov
xchg
xor
pushf
push
xor
call
mov
les
jp
push
sbb
cmp
jo
cld
test
xor
cmp
or
sub
xchg
fwait
movsl
adcl
nop
or
sub
pop
pop
cmp
add
push
pop
ljmp
imul
std
or
xlat
pusha
cmpsl
push
mov
cmpb
rorl
dec
mov
test
clc
movl
mov
in
bound
xchg
xor
sub
xchg
inc
mov
pop
pop
dec
fdiv
or
xchg
xchg
leave
dec
outsb
ljmp
rorb
call
movsl
push
jnp
shlb
inc
test
adc
mov
mov
movsl
in
add
push
dec
imul
es
aam
outsl
xlat
sub
push
pop
sti
pushw
mov
iret
add
mov
jmp
test
pushf
dec
ljmp
lcall
inc
push
cmp
lret
sti
iret
and
iret
inc
jle
and
jbe
aas
subl
dec
lds
lea
mov
sub
mov
adc
pop
inc
xchg
lods
inc
imul
sub
loop
ja
int
test
insl
rclb
cs
add
mov
pop
outsb
lods
clc
leave
xor
mov
cmp
fucomip
lea
repz
fucomip
mov
popa
push
icebp
pop
push
rcrb
icebp
push
in
and
and
xchg
xor
sub
push
push
and
push
lcall
insl
int3
jg
adc
insb
pop
shl
btr
test
dec
jl
dec
fcmovbe
jbe
sbb
test
cmp
addb
das
sbb
and
es
imul
cli
dec
shrd
stc
movsb
jb
add
std
xor
sbb
outsb
lcall
mov
loop
lahf
pop
pushf
nop
xlat
scas
fldcw
leave
es
subl
sarb
into
pop
or
sbb
adc
fwait
aas
inc
cld
mul
or
jle
rcrb
jb
test
minps
and
or
pop
stos
outsb
jb
and
or
push
in
mov
sub
push
das
inc
pop
fwait
jb
push
pusha
xchg
cmpsl
shlb
mov
xchg
sarb
pop
andl
pop
and
or
xor
or
int3
cmpsl
cld
cmp
in
fdivrs
mov
ss
push
insb
sub
outsl
aas
hlt
test
aam
jg
call
xor
adc
xchg
push
repz
dec
loopne
jae
out
push
lock
fisttps
xchg
adc
jo
dec
sub
jnp
hlt
inc
jb
cmp
andb
addl
jge
sub
dec
inc
sub
xchg
int
mov
cmp
mov
mov
mov
std
push
comiss
xchg
iret
push
or
cmc
pop
sahf
mov
xor
lods
test
inc
testl
rorb
test
sbb
xchg
mov
push
sbb
aas
fs
ljmp
movb
xchg
mov
scas
jnp
out
fwait
movsl
dec
std
jbe
ja
push
adc
or
jmp
shll
cmp
mov
xor
enter
imul
aaa
lock
into
jae
stos
daa
nop
sub
pop
mov
inc
imul
jmp
push
jae
inc
dec
pop
mov
insb
jne
fldt
push
test
dec
adc
mov
dec
sub
rclb
jb
arpl
cmp
cmp
pop
pop
mov
cmpsb
or
jecxz
es
add
pop
xchg
inc
lret
jecxz
cld
jge
lret
icebp
sbb
ja
test
pop
sub
jmp
flds
sbb
int
dec
adc
adc
and
dec
mov
xchg
push
shlb
jnp
push
movsl
jl
jecxz
pop
gs
rcrl
lock
and
ss
dec
mov
and
cmp
lcall
gs
je
decb
ljmp
or
daa
mov
enter
mov
or
pop
sbb
in
xchg
sahf
xor
adc
arpl
jge
fs
and
and
bound
mov
lods
mov
mov
push
out
adc
xor
lea
add
add
shrl
push
xor
cmp
stos
ss
fmull
int
dec
xlat
aas
dec
sub
movsl
xor
lods
ret
mov
mov
inc
ret
cmp
jmp
mov
pop
cmpsl
dec
lret
or
sbb
add
jbe
pop
sbb
add
xchg
insl
push
pop
cli
dec
xchg
xchg
mov
push
push
fsubs
loop
push
inc
lret
orl
or
sbb
insl
imul
adc
mov
mov
cld
rcl
dec
cmp
mov
lret
mov
xchg
adc
push
add
shrb
shll
out
outsl
scas
inc
pop
mov
ja
test
xchg
inc
and
cld
pop
mov
lods
cmc
lea
cmp
sbb
ja
mov
mov
arpl
pop
enter
pushf
enter
jg
inc
outsb
and
jge
fs
sub
imul
jecxz
push
jnp
lcall
push
hlt
xlat
lahf
push
in
jo
xchg
jmp
movsb
push
lods
fistpll
mov
and
cmp
mov
push
sbb
inc
sub
push
sub
lahf
fwait
scas
in
cmp
ss
roll
sub
lcall
jmp
xchg
mov
in
inc
pop
fisubrl
movl
adc
fdivrp
cmc
int
mov
out
stc
and
cld
cmp
pinsrw
lahf
or
inc
out
rorb
lea
movsl
outsl
xchg
cmp
ficoms
sti
xor
xchg
jle
mov
xchg
in
pop
fisttps
and
jne
dec
cmp
test
adc
shll
jb
pop
or
sti
cmp
dec
cmc
or
xchg
lods
mov
xorb
mov
add
rorl
xchg
mov
in
insb
pop
scas
push
out
sbb
xchg
shll
jge
outsb
mov
inc
push
cmpsb
pop
hlt
xchg
insb
lcall
cmpsl
outsb
push
xor
xor
shlb
pop
aam
movsl
xor
pop
inc
inc
or
adc
imul
and
mov
test
mov
sbb
jne
ret
popf
sbb
out
sub
xchg
xor
mov
pop
inc
jbe
fdiv
test
mov
loopne
inc
jle
shr
xchg
cli
jbe
jle
lds
pop
data16
out
or
adcb
mov
fsts
mov
test
daa
test
jle
sbb
gs
popf
sub
inc
repnz
sub
into
cs
imul
jmp
mov
dec
xorl
out
push
inc
enter
insb
push
xor
xchg
jmp
adc
mov
outsl
xor
xor
adc
inc
or
cmp
repnz
dec
inc
mov
mov
dec
ret
xor
xchg
adc
xor
out
xor
cmp
or
push
or
jg
xor
dec
loope
jecxz
test
mov
pop
in
lret
std
jge
clc
repnz
cmp
xor
jno
out
mov
bound
dec
push
in
test
test
push
cltd
int3
lock
jecxz
test
jo
lock
int
scas
and
dec
insb
adc
mov
daa
mov
pop
jmp
and
inc
test
push
dec
cmc
jns
in
sti
and
mov
arpl
pop
and
imul
in
sub
stc
out
pop
jno
jmp
inc
mov
in
inc
cmp
fs
and
push
push
call
aas
add
dec
mov
dec
adc
in
or
mov
fmull
add
sahf
jmp
inc
adcb
cwtl
fsubrp
cs
inc
sub
out
pop
xchg
ljmp
andb
enter
out
push
mov
dec
mov
out
outsb
sbbl
fstpt
xchg
mov
pop
cmp
fmul
lret
sub
in
mov
popa
aas
pushf
xchg
inc
in
dec
addr16
mov
mov
mov
addr16
pop
cmp
pop
cmp
jmp
dec
popa
in
lea
or
ret
enter
sub
into
adc
pop
jne
add
sti
fwait
jbe
mov
push
push
inc
das
or
cs
push
xchg
jmp
pop
mov
push
out
push
popa
mov
jb
jge
push
xchg
mov
xchg
mov
and
cli
xchg
loop
inc
xchg
inc
add
xor
push
pop
pop
je
lods
sub
cli
inc
dec
xor
or
mov
mov
aas
and
mov
push
add
pushl
lods
xchg
out
fcmove
sub
or
pop
clc
or
enter
mov
pop
rolb
xchg
pop
xchg
lock
or
test
cmp
cmc
addr16
scas
mov
mov
xor
mov
aaa
sarl
xchg
mov
sbb
rorl
push
xchg
pushf
std
mov
add
xor
lods
and
jecxz
cmp
imul
and
pop
add
adc
ret
jg
cmpsb
test
ret
mov
fidivrs
pop
cmp
insl
loope
sbb
test
sub
movl
iret
adc
test
dec
sbb
aas
inc
dec
or
jbe
aaa
daa
or
or
pop
jecxz
sub
cmp
inc
add
mov
adc
movsl
dec
add
jg
push
cwtl
cmpsl
loop
and
test
int3
push
adc
sbb
pusha
mov
sarb
clc
fisubs
cmpb
sbb
push
sti
mov
push
shlb
or
bound
add
cmp
int3
cwtl
sub
insb
hlt
ja
lea
shrl
sbb
jae
jmp
outsl
jb
mov
or
icebp
fcomp
push
stos
xor
inc
pop
cmp
gs
fcomi
inc
dec
push
ss
loopne
mov
in
mov
ror
mov
pop
scas
push
push
mov
mov
shlb
pushf
jne
and
pushf
shll
shrb
push
clc
sub
mov
jmp
push
push
push
xchg
testl
mov
repz
loope
das
mov
leave
jnp
lods
aas
xchg
insb
mov
jl
xor
pop
fwait
or
xor
ja
inc
sub
mov
pop
in
jmp
out
cmc
sti
add
je
or
xchg
out
mov
repz
cmpsb
xor
inc
push
out
dec
pop
push
add
jnp
aad
sub
or
pop
les
lcall
mov
out
mov
call
in
or
mov
nop
dec
pushl
mov
mov
xor
push
dec
dec
pop
popf
push
loopne
adc
xor
cs
xchg
int3
sub
xor
ret
rclb
inc
mov
jl
lea
inc
sbb
sahf
jae
out
scas
arpl
testl
fildll
addl
xchg
lret
pop
das
sbb
dec
cld
pop
jb
loope
loope
cs
jge
psubq
scas
cmp
jmp
cltd
leave
sub
mov
jns
setnp
xchg
push
sti
int
xchg
insb
jp
popa
jns
cs
loope
fistps
fwait
rolb
lods
xchg
sbb
std
jmp
jne
jge
push
lods
mov
lret
cmc
outsl
mov
lahf
out
adc
pop
enter
mov
or
and
aaa
sbb
out
fcomp
jnp
in
mov
daa
fwait
sbb
loopne
out
fsubrl
out
push
mov
mov
repz
cmp
pop
shll
test
xor
adc
outsb
lcall
dec
inc
rcrl
jns
cwtl
mov
mov
xchg
mov
enter
fdivrl
xchg
scas
xchg
mov
xchg
jge
in
mov
mov
add
js
fadds
xchg
inc
arpl
inc
fsubs
and
add
push
pop
xor
dec
jmp
mov
pusha
xor
out
adc
cld
jns
mov
insl
fdivs
xchg
stos
aas
cmp
repnz
jno
xchg
mov
fimull
pop
aad
mov
sub
sar
dec
pop
mov
mov
cmp
daa
repz
mov
lds
lods
mov
xorl
js
rorb
hlt
lahf
and
cmp
mov
inc
and
push
or
test
mov
out
hlt
mov
mov
dec
pusha
inc
pushf
inc
and
testb
out
sub
shll
xor
test
mov
fcoml
ret
loopne
push
in
xor
dec
jle
je
sbb
xor
mov
jge
cmpsb
stos
sub
rol
movsl
imul
out
daa
push
in
icebp
inc
aaa
test
mov
arpl
sub
jo
stos
scas
scas
or
sar
pop
movsb
hlt
lock
insb
bound
jl
jmp
loopne
mov
sbb
jecxz
mov
inc
loop
cmp
scas
je
adc
push
inc
dec
lods
fmull
test
hlt
or
dec
jns
frstor
adc
mov
push
push
xor
pop
xchg
mov
shrb
inc
adc
xchg
ret
push
call
rcrb
mov
loope
outsb
or
xor
sbb
test
inc
in
negl
jge
fnstcw
mov
cmc
adc
mov
out
push
das
es
mov
jmp
adc
shl
scas
and
xor
lock
es
sbb
in
fiadds
jg
rorb
out
je
mov
push
rcrl
nop
push
push
cltd
jns
and
test
mov
mov
int3
inc
aam
inc
cwtl
enter
push
aam
lcall
inc
push
inc
js
jge
mov
nop
cs
sub
insb
mov
das
xchg
fisubrl
mov
stos
cld
test
sbbb
pop
xor
cs
add
push
hlt
sbb
mov
mov
dec
gs
adc
inc
aaa
ljmp
in
cmpb
jo
loopne
popa
push
repz
popf
int3
les
mov
jmp
mov
pmaxsw
jge
stos
inc
fdivrl
mov
add
lods
xor
sahf
or
xor
into
enter
pop
push
cld
pop
dec
shll
xorl
mov
bswap
sarb
push
fsubs
mov
rorb
stc
and
int
call
inc
stc
repz
mov
in
pop
xchg
mov
aaa
insl
push
std
imul
xor
pop
xchg
ror
sbb
cli
cmp
jnp
bound
mov
int
mov
jbe
inc
jb
xor
pusha
or
hlt
out
push
cmp
out
cltd
cmp
jge
cmp
fs
stos
xchg
xor
int3
mov
xchg
nop
sarb
pop
cmp
jl
mov
mov
in
outsb
sahf
or
push
call
and
call
mov
or
push
fwait
or
data16
cmp
push
or
push
cld
and
sarb
int
imul
mov
test
icebp
scas
add
jae
dec
and
cmp
sbb
pop
daa
mov
and
xchg
push
cs
test
jae
cmp
xlat
add
lods
jl
adc
fistl
stos
scas
jno
or
jge
push
shll
mov
out
ja
sub
stc
mulb
adc
and
imul
popf
lahf
mov
aaa
test
insb
xor
sub
mov
ret
fnstcw
sub
scas
ljmp
mov
rcrl
fisubl
ljmp
es
pop
cmpsb
shll
outsl
or
xor
daa
pop
lods
sbb
sarb
rcr
push
cmp
stos
out
push
mov
out
test
xchg
cmp
in
xchg
fsubrs
pushf
mov
or
es
ficoms
lock
fs
mov
cwtl
mov
das
adc
mov
mov
jge
test
jbe
fdivl
adc
aam
xchg
xchg
setb
push
adc
imul
add
push
imul
adc
add
inc
addr16
mov
out
les
cmp
ds
push
in
and
or
jae
testl
jns
jmp
and
rolb
mov
call
mov
mov
cwtl
jae
dec
adc
or
mov
xchg
dec
inc
xor
pop
jo
pop
mov
loop
sbb
icebp
ret
hlt
jmp
mov
lahf
popa
push
leave
out
loopne
cmp
push
call
mov
les
sub
inc
cltd
in
in
and
stc
sub
or
pusha
jnp
and
mov
add
or
cmpsb
int3
lods
lcall
push
dec
stc
jo
mov
sub
mov
dec
xchg
mov
in
adc
xchg
daa
pop
out
pop
mov
mov
and
jp
iret
mov
dec
jp
gs
sbb
cmp
xor
xchg
mov
mov
adcb
sbb
aam
in
test
push
sti
fyl2x
std
adc
push
jl
mov
sbb
adc
add
lds
shll
sbb
push
sbb
mov
jne
arpl
ds
inc
mov
or
shr
or
fmuls
cmpsl
mov
ds
ret
adc
mov
ja
mov
sbb
pop
cld
cltd
inc
sub
or
sub
scas
sbb
adc
sub
leave
or
into
mov
jbe
mov
cmp
sahf
dec
or
imul
imull
aas
andb
push
js
inc
xor
std
and
fyl2xp1
pop
aam
pop
imulb
jl
imul
pop
je
xchg
ljmp
or
outsl
mov
dec
cmp
enter
test
push
xor
enter
pop
mov
pop
popa
sahf
or
mov
adcb
int3
mov
dec
xor
call
inc
sub
xchg
and
test
mov
jmp
mov
mov
adc
sub
jecxz
dec
loope
jno
xchg
out
dec
sbb
je
or
aaa
pop
in
pop
dec
push
xor
jmp
dec
mov
jl
les
xchg
js
or
cltd
data16
fadd
das
rorb
pop
test
out
stos
mov
mov
fwait
in
mov
sub
mov
mov
mov
sub
adc
pop
in
xchg
rcll
mov
xchg
arpl
sbb
sysexit
push
loop
gs
orb
mov
mov
push
in
addb
das
dec
aam
and
xchg
cmp
les
adc
sahf
pop
mov
push
outsl
mov
xchg
jns
setae
call
jb
push
inc
cltd
inc
jb
ja
test
cmpsl
mov
leave
jo
add
sub
sbb
and
push
aad
fldcw
fildll
dec
or
test
mov
shlb
ficoms
inc
jnp
test
leave
pop
nop
lock
mov
addr16
sarl
and
or
cmp
push
or
mov
add
cs
jo
and
dec
sub
movsl
push
call
arpl
into
pop
push
out
nop
cmpl
mov
push
test
sub
push
andl
lret
cmp
mov
jbe
jo
jo
cmp
or
pop
out
mov
aad
and
xchg
call
pop
mov
sub
cmp
loope
pushf
movb
popa
arpl
pop
test
iret
loopne
dec
adc
sbb
lret
test
scas
inc
jo
jge
mov
aaa
dec
cmpsl
xchg
mov
jge
mov
inc
pop
mov
inc
fsubr
mov
shlb
or
jne
scas
pop
mov
and
mov
jl
test
movsl
sbb
mov
and
stos
sahf
and
or
mov
adc
cmp
cs
leave
adc
out
cli
scas
testl
out
ljmp
lock
lods
pop
mov
icebp
mov
sub
add
imull
lret
out
idivb
add
dec
cmp
sub
inc
lea
icebp
pop
add
sarl
pop
sub
lahf
cmp
push
daa
mov
aad
repz
in
pop
sub
test
sarl
loope
jge
add
lret
pop
outsl
ljmp
mov
pop
sub
jmp
xchg
push
lods
fildl
inc
add
dec
cwtl
mov
pop
and
ja
push
mov
outsb
fbld
mov
lock
out
mov
stos
lcall
dec
stos
sarl
repz
push
sbb
cli
add
xchg
aaa
xchg
and
outsb
dec
das
pop
mov
ja
inc
cs
mov
stc
out
mov
gs
ror
push
and
out
push
add
inc
xchg
loope
push
xchg
into
lcall
inc
dec
and
or
fimuls
inc
sbbb
mov
cmp
scas
inc
inc
push
clc
lock
dec
pop
sahf
in
mov
xchg
adc
test
insb
repz
jbe
andb
xor
daa
dec
and
punpckhdq
stos
cmp
dec
test
loope
bound
fs
jno
cmpsl
test
pushf
es
dec
lret
push
in
mov
lods
push
call
xchg
sbb
cmpb
xor
iret
mov
std
ffree
fucomip
stos
jae
inc
subb
xlat
out
ja
push
lgs
in
ljmp
mov
imul
repz
mov
mov
mov
ljmp
cmc
cs
pushf
and
roll
hlt
into
fsts
in
mov
lds
jmp
ds
lds
push
mov
cli
mov
test
and
lds
lret
loopne
popf
mov
mov
fistl
cmovnp
idivl
out
ds
imul
pop
mov
lea
mov
mov
xchg
rorb
in
fdivrp
dec
cs
fildll
or
bound
incl
pop
fisubrs
jle
jno
lret
mov
mov
stos
push
mov
mov
nopl
outsl
sbb
adc
jp
pop
sbb
and
or
mov
add
mov
stos
mov
sub
mov
xor
jns
nop
push
adc
sbb
fmulp
xlat
lea
inc
movsb
push
seta
out
stos
mov
xchg
sub
jno
adc
fs
cld
add
dec
inc
rcll
mov
dec
lds
mov
pop
out
out
and
and
pusha
cs
roll
inc
movsbl
mov
inc
lahf
adc
mov
xchg
mov
cmp
in
push
inc
cmpsb
mov
adc
out
xor
xchg
rolb
push
inc
repnz
xchg
popf
notl
adc
xchg
test
mov
adc
fwait
ret
and
inc
push
push
and
inc
aam
cmp
pop
mov
dec
test
xlat
or
lcall
xchg
ret
jge
andb
inc
loop
sbb
out
ret
fwait
fs
fldt
aad
cmp
aam
jle
fmul
sbb
pop
shlb
dec
cmpl
mov
mov
shlb
ficompl
pop
aas
popf
vorpd
es
pop
mov
jge
leave
sahf
mov
mov
or
inc
mov
jae
cmpb
xchg
js
sahf
call
clc
imul
push
sahf
or
cmp
ret
push
xchg
int3
xor
cltd
dec
dec
dec
insl
fists
add
mov
pop
popf
mov
mov
jo,pt
lods
mov
xor
jns
xor
and
sub
fists
dec
in
dec
add
sbb
mov
fbstp
addr16
lea
jbe
outsb
stc
adc
xor
repz
js
test
repz
into
xchg
pop
inc
lcall
scas
mov
and
inc
jno
xchg
idivb
data16
sbb
push
fwait
jns
add
and
ret
add
call
idivb
adc
mov
stos
hlt
cli
push
cmpsb
mov
mov
sti
paddw
adc
inc
pop
push
ficomps
out
pop
pop
push
or
mov
push
jo
add
inc
inc
dec
pop
loopne
dec
es
or
xor
ljmp
push
mov
arpl
out
out
fs
add
add
dec
andl
cmp
ret
adc
pop
pop
jecxz
nop
adc
or
push
divb
push
rcll
outsl
cmp
or
aad
xchg
stos
adc
sbb
int
mov
ret
test
test
stc
push
mov
fistps
and
xchg
jge
sahf
scas
cld
dec
jns
repnz
stos
mov
movsb
xchg
ret
and
insl
or
cmpb
sub
out
jno
cmp
sub
pop
call
nop
lret
dec
cmpl
ficompl
rclb
imulb
push
pop
js
xchg
dec
xor
ret
test
enter
pop
jnp
into
idivl
jb
mov
out
jo
lods
cltd
cmp
xchg
push
inc
xchg
adc
lret
leave
push
cmp
sarb
pop
mov
das
movsl
into
loopne
stc
and
aas
mov
insl
mov
inc
or
loope
inc
push
pop
jg
mov
stos
lock
xchg
pop
scas
jge
movsb
add
pusha
dec
int
loope
daa
cmp
jno
mov
xor
push
fistl
add
push
sbb
das
xchg
rcll
in
icebp
dec
divl
or
cmp
imul
and
jecxz
arpl
rcrl
inc
sti
jo
stc
mov
sub
cmpsb
inc
sbb
push
mov
xchg
mov
push
inc
sub
mov
sub
pop
or
add
lods
dec
mov
test
adcl
orl
pop
cmp
mov
rcrl
imul
std
arpl
add
movsb
lahf
pop
sti
mov
cmp
pop
imul
jmp
cmpsb
decl
cmc
pop
ljmp
sub
leave
sbb
and
decb
dec
dec
xchg
xor
xor
cmpsb
std
ss
jecxz
dec
dec
mov
jo
jl
mov
and
mov
sbb
mov
jmp
mov
dec
or
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
xor
sub
add
push
adc
push
and
mov
mov
add
mov
addl
mov
sub
movl
movl
xor
mov
orl
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
xorl
mov
neg
mov
sub
mov
orl
addl
mov
adc
mov
add
sub
add
mov
orl
adc
mov
mov
adc
sub
xor
mov
orl
mov
negl
mov
sub
xor
xor
xor
xor
sub
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
call
jmp
mov
mov
xor
adcl
mov
andl
add
or
orl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
jmp
mov
movsl
aas
jns
jns
pop
popw
inc
or
repnz
jl
mov
push
shll
add
sub
add
aad
sarb
cmpsl
mov
xor
ficoms
outsl
mov
test
fistpll
lcall
decb
dec
add
or
or
int3
psrlq
inc
and
inc
lcall
push
adc
stc
cmpsl
cs
mov
sbb
xchg
les
inc
add
lds
jne
jno
fidivrs
testb
add
mov
repnz
inc
cmp
adc
push
out
ljmp
mov
mov
js
das
fildl
push
mov
adc
push
jbe
sbb
repnz
int3
test
jbe
stc
adc
iret
jno
aam
push
cmc
xor
rcll
adc
cmp
mov
aas
hlt
push
sbbl
jns
insb
jg
push
std
imul
loope
inc
popa
loope
je
mov
ror
mov
out
mov
xor
addl
pop
sahf
pushf
jne
ljmp
test
and
rorl
inc
or
pop
aad
pop
ret
jae
aad
in
push
ror
jle
jne
in
jmp
add
push
inc
stc
push
lret
adc
push
sub
enter
dec
dec
add
bound
mov
mov
sub
mov
ds
ss
ja
or
cmp
push
mov
jg
inc
xchg
pushf
sti
insb
xchg
sub
ret
xor
out
aaa
push
push
lds
lahf
jns
sbb
stos
inc
ss
jg
mov
adc
or
dec
mov
or
in
out
cld
mov
xchg
xor
lcall
insl
cmp
sbb
jmp
dec
sti
mov
xchg
push
ret
adc
iret
mov
jo
inc
cltd
popa
cltd
pop
or
inc
in
pusha
sarl
jo
bnd
mov
inc
scas
xchg
mov
out
jge
jae
mov
cs
jne
fwait
inc
mov
inc
push
or
push
cmc
pusha
sbb
lret
jecxz
inc
mov
lea
ja
sub
mov
js
and
pop
jne
cmp
push
sti
push
lret
test
xor
pusha
sub
out
jl
int
into
leave
xor
popa
pop
fsubrs
mov
cmc
dec
int
jl
pop
adc
add
jmp
xchg
fwait
outsl
push
data16
es
imul
fstps
and
test
xchg
cmp
repnz
push
jge
cmp
lahf
pop
stc
sub
cmp
adc
das
mov
xchg
fwait
mov
add
mov
pop
and
enter
sbb
pop
add
cli
and
sbb
adcb
pop
pop
pop
aam
or
cmp
xchg
pop
lods
xor
das
jmp
or
push
pop
mov
mov
mov
inc
ss
jne
notb
loope
mov
mov
lds
mov
mov
sbb
fs
cmpsl
add
rolb
ficoml
cltd
xor
mov
mov
mov
mov
add
mov
mov
imull
add
int
ret
test
imul
add
pop
js
lret
adc
test
lea
mov
enter
xchg
iret
adc
sti
jecxz
dec
addb
mov
sub
mov
pop
or
or
enter
addr16
popa
dec
mov
or
jmp
jae
cmp
rcrl
cmp
movsl
mull
das
xor
in
in
xchg
loop
adc
stos
jno
sub
scas
imull
pop
mov
sahf
daa
mov
mov
out
mov
fldenv
es
or
and
dec
inc
cmp
std
xchg
dec
cmp
je
pop
fcompl
add
out
das
xorl
sbb
jo
lock
xchg
test
stos
addr16
stos
pop
test
jb
push
or
in
movsl
push
aaa
lret
or
js
das
lock
adc
pop
push
add
aad
push
sbb
aas
insl
stos
lahf
pop
mov
lock
lret
aad
scas
mov
jno
jae
xor
dec
imul
fmuls
dec
push
dec
imul
call
inc
jmp
jge
mov
aaa
jnp
inc
add
push
cmpsl
jbe
dec
andb
sti
or
sub
push
add
je
jae
sub
mov
les
xorl
mov
clc
cmp
xor
or
mov
pop
out
mov
loop
or
mov
jbe
cmc
ret
mov
sub
dec
loope
inc
xchg
mov
pop
lahf
or
adc
ds
adc
das
daa
jp
inc
or
mov
jb
cmpsl
sbb
rolb
push
in
mov
xorl
inc
shlb
mov
jp
xor
lcall
jno
nop
or
add
push
jb
dec
out
push
outsl
lock
lock
cmp
and
scas
out
cmpsl
and
xchg
mov
push
pushf
sbb
dec
imul
mov
adc
xchg
push
mov
jno
mov
xchg
push
call
lcall
add
mov
mov
pop
cmp
pop
popa
xchg
jp
mov
mov
sub
push
jbe
pushf
dec
dec
pop
stc
and
inc
js
push
dec
stc
xchg
addr16
xchg
in
inc
scas
pop
jbe
fisttpl
fdivl
pop
xchg
mov
sarl
frstor
lods
push
dec
in
cmp
and
int3
push
lcall
pop
in
pop
bound
and
outsb
mov
faddl
add
ss
sub
adc
arpl
ss
jg
jns
ret
sub
xchg
mov
lcall
mov
and
mov
and
call
push
push
fnstsw
shl
pop
pop
xor
push
out
fcomp
pushf
cmp
sbb
mov
push
data16
adc
ds
ja
scas
sub
loope
lock
jg
testl
mov
ret
pop
inc
shll
daa
sbb
cmp
insb
xchg
scas
cltd
aad
lret
fsubrs
sub
jae
push
pop
stos
mov
lods
insb
sub
add
cs
inc
mov
push
fucomi
jecxz
mov
mul
shl
incb
adc
pop
outsl
jno
leave
cmp
xchg
repnz
xchg
popf
push
pusha
testl
sbb
out
sub
lods
adc
and
popf
int
xchg
pushf
imul
pushf
jg
incb
movsb
outsb
jb
xchg
aad
lahf
mov
je
inc
decb
push
mov
push
cld
lock
pushf
incl
dec
mov
divb
xchg
xor
pop
xchg
pop
hlt
sub
out
pop
jo
and
int3
pop
add
or
mov
call
sbb
out
in
aam
push
xor
mov
fstpl
stc
or
sub
stc
inc
push
insb
xchg
iret
aas
dec
or
xchg
and
sbb
dec
or
xchg
push
jo
loope
sbb
adc
icebp
xchg
pushl
outsb
mov
inc
cli
mov
jl
mov
ret
adc
loopne
pop
jge
in
ficomps
xchg
pop
push
push
lds
jnp
cmpsb
fcompl
mov
in
out
hlt
int
fnstcw
pop
dec
shll
adc
cltd
call
mov
sbb
jl
xor
pop
faddp
sbb
push
lret
stc
add
call
enter
jecxz
sub
inc
loop
pop
stc
push
pop
xlat
jmp
out
push
shrl
pop
cmpsl
insb
dec
push
inc
mov
dec
push
ja
or
add
pop
imul
sbb
lock
clc
mov
sbb
ljmp
mov
cwtl
cli
push
cmp
sub
mov
bound
mov
lds
inc
cmc
ss
mov
ja
orb
jecxz
and
mov
or
and
push
rorb
xor
push
mov
pop
cs
ljmp
insl
sub
pop
xor
mov
jl
out
dec
inc
pop
pushf
andb
fisttps
jmp
pop
xchg
push
loop
test
mov
mov
sbb
dec
mov
lds
cli
xor
push
mov
jge
shrb
xchg
pop
fnstsw
mov
movsl
adc
jge
daa
and
mov
scas
xor
adc
add
shlb
sbb
inc
insb
scas
inc
cmpsl
repnz
add
adc
hlt
popf
push
les
iret
inc
in
out
movsl
gs
mov
sub
adc
cli
jnp
cwtl
icebp
fnstenv
jae
int3
dec
loope
pop
xor
rcll
call
and
loopne
out
lods
fmulp
fnstsw
js
rcrl
xchg
push
pop
fistpll
xchg
cmpsb
scas
rcll
lcall
dec
movsl
cwtl
mov
jne
lds
sbb
xor
pusha
mov
sbb
adc
cmp
or
cmc
decb
mov
mov
test
imulb
ds
mov
xor
and
sbb
faddp
test
daa
in
and
cld
shr
sbb
jbe
sbb
rclb
xchg
es
jmp
negl
test
pop
das
jmp
in
js
scas
jb
popf
ds
je
mov
pop
adc
call
cmp
mov
sub
sub
pop
test
cmp
dec
jp
xor
or
xchg
pop
out
push
xlat
cmp
shrl
mov
sbb
iret
add
outsl
mov
dec
lock
jmp
mov
fadd
xchg
js
je
and
mov
mov
sbb
cmp
push
dec
outsb
fs
xor
xor
lods
lods
rolb
dec
add
ss
cld
mov
fistps
in
adc
testl
push
fisttpll
movsl
push
cmp
and
mov
addb
fstps
adc
xor
js
sub
jnp
decl
xchg
adc
sbb
or
shlb
pop
sar
jo
sbb
mov
sub
pusha
adc
cmp
cmpsb
push
in
shrb
mov
jae
cld
loopne
inc
xorb
in
rorl
push
xchg
hlt
in
jle
mov
cwtl
mov
mov
arpl
cmpl
jae
push
fildll
cmp
loopne
mov
add
xorl
test
xchg
pushf
dec
dec
scas
dec
push
jecxz
mov
lock
lret
inc
lret
out
inc
stc
dec
int
ret
cmp
xchg
mov
cmpsl
add
mov
or
sub
jae
mov
mov
adc
insl
jno
cltd
push
sahf
addr16
inc
jns
lret
hlt
jae
stos
lahf
loope
outsl
pop
mov
mov
or
mov
das
lods
nop
ljmp
dec
daa
imul
and
fwait
add
push
sub
or
mov
dec
call
lcall
mov
mov
and
in
ret
lea
mov
xchg
xchg
es
nop
rol
push
pop
in
push
jne
orl
sbb
test
mov
lret
or
cmpsb
std
pop
and
cmpsb
inc
cltd
xchg
cld
push
mov
inc
test
mov
jp
push
xor
push
inc
lahf
push
push
loop
ss
lret
cs
push
cmc
cmc
pop
test
jmp
jne
pop
mov
adc
mov
ret
push
sub
out
mov
enter
aaa
mov
int3
aas
test
dec
insb
movsb
shlb
iret
into
out
fcmovne
adc
mov
jno
mov
sbb
fsubrl
pop
repz
dec
aaa
xchg
int3
jbe
adc
adc
pop
and
dec
outsb
jecxz
cld
and
ljmp
add
subl
inc
pop
and
lret
xchg
std
pop
fcoml
inc
jae
xlat
out
fsubp
rcrb
sub
std
inc
push
jmp
and
inc
inc
xchg
jbe
push
jo
add
out
jno
mov
adc
test
xchg
js
mov
jnp
or
sub
fiadds
lret
orb
jno
xchg
dec
dec
push
mov
clc
shrd
pop
aad
fimull
insb
xlat
mov
cmp
ds
loop
test
sbb
jno
push
pop
shlb
mov
pop
cmp
shlb
rclb
loop
insl
dec
and
add
lret
lahf
lods
xchg
jl
pop
out
dec
cmp
add
xchg
sub
daa
clc
std
add
push
loop
add
xchg
inc
push
ds
rorl
adc
xchg
adc
xlat
mov
popa
insl
outsb
inc
pop
sub
lret
ljmp
negl
add
ljmp
xchg
pop
cmpsl
lcall
call
out
out
sahf
int
push
cmpl
aam
dec
sub
adc
fidivs
mov
fcomps
push
pop
cli
jge
mov
mov
std
and
add
jmp
pop
xor
mov
incl
cmp
pop
add
pop
mov
pop
add
add
lret
sbb
push
call
sbb
pop
pop
negl
cltd
stc
addb
into
insb
sbb
jo
pop
fnstenv
fistl
dec
jg
std
es
xor
fisttpll
dec
cmp
daa
mov
loope
mov
out
jge
sbb
in
xorl
cld
dec
es
sub
or
mov
jne
xchg
jle
mov
stos
inc
dec
test
cmpsl
pop
xor
jne
xor
adc
xchg
fldcw
jecxz
mov
in
pop
into
pop
inc
lret
fsubr
xor
ret
jl
cmp
cmp
pusha
sub
stos
xchg
pop
imul
sub
fldln2
dec
cmp
aaa
outsl
cli
dec
loopne
mov
jns
xchg
jp
cmp
xchg
in
mov
adc
and
out
ja
mov
cmpsb
stc
icebp
stos
mov
fdivrs
adc
fcoms
jno
popf
and
dec
or
mov
push
cli
push
sbb
push
sbb
sti
xor
dec
outsl
iret
lock
pop
mov
inc
fnstsw
xor
sbb
pop
mov
mov
aaa
pop
scas
arpl
cmp
jae
xchg
xchg
repz
sbb
in
or
mov
mov
jno
in
lret
pop
inc
ss
jmp
adc
repz
inc
jecxz
fbstp
cli
stc
mov
push
adc
sti
sub
cmp
push
push
lcall
mov
test
cmp
mov
jecxz
repz
fcompl
rcrl
inc
adc
xor
inc
cmp
lahf
clc
pop
xchg
jmp
pushf
cli
sub
add
pop
iret
push
jle
arpl
jge
sbb
mov
out
jl
fs
fisttpll
add
roll
adc
pop
lds
aaa
pop
and
loopne
add
jmp
hlt
dec
jmp
lahf
pop
mov
test
clts
sub
cltd
ret
pop
xchg
adc
imul
jb
push
mov
in
adc
cmp
loopne
rcll
into
test
cmp
loope,pt
dec
push
fldl
movl
dec
push
mov
adc
mov
push
cmp
sbb
adc
das
mov
sub
inc
adc
fwait
gs
push
or
mov
mov
add
in
push
jle
mov
xchg
push
lds
or
loopne
mov
inc
das
cli
mov
jge
js
stc
sbb
mov
jae
stos
inc
int3
dec
loopne
dec
enter
mov
push
ret
jg
xchg
pushf
xor
repnz
sbb
adc
dec
es
jmp
test
push
sub
outsb
sbb
fucomip
mov
jno
pop
adc
ficomps
xchg
cmc
aam
addr16
decb
sahf
ficomps
aam
inc
in
add
xchg
xorl
xor
aas
movsl
int
and
cli
outsb
mov
scas
outsl
dec
fwait
ret
test
cmp
int
fsubrl
ja
add
lds
adc
out
addr16
jno
shl
xor
mov
addb
xchg
or
adc
cmpl
push
mov
scas
scas
jp
push
das
ljmp
movsl
mov
and
adc
hlt
fistps
cmp
fcomps
rolb
adc
shll
and
js
add
lods
mov
fnstsw
xor
gs
mov
add
in
stos
lods
addr16
and
std
fisttps
repz
sbb
ljmp
inc
psrad
add
cmp
or
mov
pusha
mov
push
mov
pop
ljmp
jo
xchg
mov
addr16
jl
and
adc
pop
orb
je
add
xchg
dec
cmp
cwtl
mov
dec
jns
pop
jb
and
sbb
jae
daa
cmp
inc
cltd
mov
inc
cmp
push
adc
inc
jbe
stc
outsb
adc
xlat
test
xchg
ret
stos
sub
xchg
fistl
and
jno
nop
loop
outsl
push
out
gs
sub
mov
cmpsl
ficoms
jp
push
push
mov
jae
mov
or
fldt
bound
xor
jle
mov
insl
pop
inc
inc
jnp
out
call
xor
mov
push
dec
neg
je
daa
icebp
cltd
iret
xchg
sbbl
sarl
arpl
leave
and
fmulp
xchg
mov
mov
pushf
ljmp
sti
in
add
push
jne
adcb
sub
les
lea
xor
mov
xchg
jno
mov
loop
xlat
sub
cmp
or
lcall
jnp
cmp
das
cltd
mov
mov
mov
aaa
fdivrp
das
movsl
imul
push
fs
addb
leave
les
xor
mov
sbbb
xor
lcall
pop
pop
mov
inc
ljmp
push
adc
mov
or
ret
push
in
imulb
fldl
fcmovnu
lret
dec
lret
dec
adc
sub
mov
aas
xchg
sbb
adc
pop
fldenv
fildl
ret
ret
fwait
aas
sahf
push
sbb
and
mov
hlt
xchg
dec
inc
push
pushf
ss
push
mov
fsubrl
xor
scas
call
push
hlt
aad
imul
out
add
jp
lods
enter
jne
sbb
lret
scas
pop
popw
jecxz
push
xchg
adc
xor
ret
cmpsl
xor
out
inc
imul
pop
ret
sub
mov
push
jb
test
ja
jge
insl
and
fsubrl
push
ret
jo
jmp
cmp
xorb
xchg
mov
scas
pop
outsb
mov
loop
sub
mov
and
negl
mov
mov
lods
mov
fs
mov
out
lds
fwait
rcll
lods
jb
cmc
lods
in
int3
add
pop
add
call
loope
jo
outsl
repz
cmp
int
lds
ret
ds
in
dec
jne
mov
dec
in
cmp
xchg
push
clc
arpl
push
lret
popa
insb
movsl
adc
sub
cld
pop
lea
xchg
dec
rorl
aad
mov
aaa
dec
push
pop
dec
cld
in
js
mov
or
mov
fs
lock
rclb
lock
push
sbb
jmp
sbb
int3
sub
dec
push
fwait
inc
pop
mov
ret
pop
cli
into
loope
fdivrp
jno
cltd
xlat
int3
leave
fucomip
sbb
lock
push
cli
or
adc
test
xor
jno
pop
or
mov
xchg
test
into
out
pusha
mov
in
fwait
mov
push
shlb
test
jo
xchg
insl
fldenv
cltd
cli
loope
scas
pop
ret
cltd
push
imul
cs
repz
loop
imul
mov
out
jp
xor
cld
loopne
push
in
mov
mov
fdivl
pop
into
repz
rcrb
or
or
mov
cmp
repz
imul
fisttpl
adcb
push
jle
scas
cmpb
movsl
inc
pop
and
and
mov
bound
mov
mov
inc
jmp
ret
scas
add
es
mov
das
pop
sub
imul
int3
add
jecxz
and
xor
pop
pop
cld
push
mov
icebp
pop
and
out
iret
in
jl
mov
iret
icebp
and
enter
or
or
dec
sub
cmpl
les
enter
cmp
mov
push
dec
movsl
pop
mov
dec
inc
fldt
mov
mov
icebp
cmp
out
lock
push
add
xchg
mov
mov
sub
scas
inc
mov
popa
into
das
mov
cmpsl
les
fs
je
sub
lahf
mov
pop
cmpsb
sti
das
push
test
mov
pop
inc
enter
int3
push
mov
ud0
lock
rcll
xchg
mov
sub
outsl
or
lods
cmp
repz
test
ja
or
dec
les
iret
movsb
dec
jno
int3
or
pop
pop
fistps
int3
jae
nop
mov
pop
lea
mov
mov
cmpb
pop
loopne
fwait
andb
inc
mov
inc
mov
insl
mov
ja
div
push
cmp
mov
xor
decb
jle
adc
std
ficompl
and
repnz
jns
lret
inc
outsl
outsb
push
imul
test
ficoml
lahf
push
ret
pop
dec
cwtl
out
pusha
jno
cmp
movsb
es
sahf
sbb
dec
and
pop
mov
push
adc
test
cmp
fsts
loopne
jne
ljmp
in
daa
pop
dec
std
ljmp
mov
ljmp
xchg
push
and
sbb
ds
push
fcomip
push
mov
fwait
cmp
test
xor
mov
sub
jo
aas
stos
scas
pushf
mov
cld
dec
mov
xchg
jg
cmp
mov
jp
sarl
loope
aas
add
cs
jbe
xor
ret
and
aaa
movsb
lods
mov
ss
adc
xchg
mov
fcomip
ret
ljmp
xor
mov
movsb
mov
adc
ret
jge
les
enter
dec
cmp
dec
xor
jle
lcall
test
pop
sbb
pop
daa
aas
icebp
pop
xchg
sbb
adc
mov
and
xchg
loope
scas
fadds
jb
jp
out
jne
sbb
pusha
in
jg
jg
sub
jg
pop
mov
cmp
jmp
test
inc
rcl
jecxz
xchg
outsb
repz
orb
scas
insb
cs
sub
js
ljmp
pop
add
gs
push
xchg
pop
call
push
jb
dec
sub
jbe
in
sbb
push
xbegin
push
pop
mov
jge
call
test
sbb
dec
cltd
sbb
and
fdivl
stc
cmpsl
mov
addb
test
add
mov
insb
jno
xor
ss
mov
movsl
outsb
mov
stos
inc
ficompl
bound
repnz
mov
in
push
pop
and
add
cli
ljmp
outsb
and
filds
jbe
in
pop
inc
inc
sub
sub
out
push
nop
or
pop
xor
outsl
and
jge
popf
mov
and
fsts
mov
pop
in
sub
pop
les
jge
pop
lret
sbb
adc
out
sub
mov
dec
or
in
mov
in
cmp
lods
ljmp
test
xor
push
xor
lods
test
gs
mov
xorl
inc
nop
je
filds
hlt
ljmp
mov
sub
pop
shlb
lea
lahf
sub
sub
insb
mov
int
incl
and
and
mov
mov
pop
bound
out
pop
and
cmpb
out
scas
fnstsw
push
ficompl
cmpsb
sti
dec
fistps
imul
inc
push
hlt
loop
adc
jmp
mov
rcl
sbb
lods
or
faddp
loopne
lcall
scas
add
mov
repz
mov
mov
sarb
popa
fs
inc
jbe
xorb
int
jle
cmpsl
push
loop
and
test
mov
popa
xchg
inc
and
lods
iret
ror
or
inc
out
shlb
insl
fisttpll
int
out
shlb
sti
add
repz
xorl
stos
xor
adc
inc
out
stc
adc
dec
out
fdivl
inc
cltd
test
test
jmp
enter
add
push
ds
aas
in
insl
jmp
and
mov
sub
cmp
pop
add
dec
sub
adc
sub
pop
jecxz
or
lea
dec
es
mov
popf
ss
and
pop
mov
mov
push
push
into
pop
lret
xor
les
sahf
adc
sahf
and
push
jnp
mov
arpl
add
sbb
dec
orl
jle
iret
dec
stc
and
mov
xorl
iret
lds
test
ret
inc
pop
mov
movsb
add
pop
xorl
mov
pop
pop
mov
mov
mov
pop
cltd
cmp
fisttpl
mov
lds
orl
in
mov
arpl
xchg
cltd
and
insl
lahf
xor
xor
mov
mov
adc
leave
int3
sarl
fwait
scas
ljmp
outsb
push
push
mov
xor
aad
adc
orl
ret
test
das
aam
int3
pop
and
stos
jbe
pop
insl
pop
lret
mov
xchg
add
fiadds
dec
fwait
sub
icebp
push
dec
mov
xchg
fdivrl
sub
cwtl
out
lret
lea
popf
sbb
mov
adc
arpl
cmp
mov
in
sbb
frstor
mov
push
sub
fildl
ja
fmull
xor
xor
jno
and
fldcw
xor
popf
add
test
lcall
inc
push
in
mov
sti
sarl
mov
xor
in
or
out
push
test
cld
icebp
mov
and
cs
out
sub
not
test
lods
popf
ret
lods
call
iret
mov
xchg
jl
inc
pushf
aaa
mov
xor
xor
mov
subl
sub
xchg
bound
hlt
shll
ja
add
int3
stos
mov
sub
lret
xor
pop
pushf
sti
push
imul
push
loop
add
push
xchg
out
pop
iret
inc
lret
pop
scas
ficompl
mov
lods
jnp
jge
aaa
outsl
fmulp
adc
mov
mov
pop
dec
inc
mov
dec
and
outsl
adc
xchg
xor
fsubrs
inc
stos
mov
cltd
cmp
mov
dec
jmp
pop
js
mov
jl
ret
cmp
push
mov
scas
xor
fistl
or
mov
gs
aam
outsl
jge
pop
int
mov
insb
fs
pop
dec
lods
mov
mov
rorb
popf
inc
mov
sti
in
push
cs
movsl
sub
mov
mov
inc
std
cmp
test
or
sarl
sub
adc
xor
cmp
aas
adc
mov
popf
or
or
loope
enter
mov
insb
in
aam
dec
or
ja
xchg
and
addr16
and
jmp
stos
jecxz
stc
loop
xor
cli
push
dec
add
jmp
out
in
add
adc
push
cmc
call
cli
sub
imul
dec
lahf
mov
mov
lods
push
pop
cmpsl
push
out
push
dec
pusha
adc
out
test
cmp
push
or
mov
mov
fs
push
inc
cmpsl
xor
cmp
push
mov
incb
jecxz
stos
loop
jno
nop
xor
int3
hlt
orl
mov
bound
movsl
sbb
or
xor
xchg
jae
test
push
mov
aam
inc
push
xchg
lds
loope
push
notb
sbb
test
mov
push
push
cld
mov
inc
fistps
mov
push
lods
loop
sub
jl
xchg
mov
push
push
add
into
stos
sbb
adc
mov
leave
dec
aam
sbb
xchg
jmp
fdivl
pop
xor
sbb
or
adc
and
xor
jne
sub
mov
xlat
add
dec
mov
loope
adc
pop
das
andl
pop
pop
dec
stos
or
inc
mov
xor
mov
shlb
ret
idivb
ret
je
or
cld
lods
gs
es
inc
ljmp
jp
pusha
mov
inc
sbb
jmp
lea
adc
sbb
and
mov
mov
je
inc
inc
jo
lea
pop
add
mov
cmp
scas
ja
div
lret
imul
paddsw
mov
mov
imul
jb
enter
ret
adc
xchg
cmp
xchg
sbb
cmp
sub
add
cmc
push
fldenv
mov
xor
daa
iret
xchg
mov
fs
decl
push
les
je
push
sbb
inc
sbb
cmp
fsubl
pop
add
test
sarl
in
je
mov
arpl
cmp
xor
cmp
in
add
rcr
movsl
jns
mov
out
jns
mov
xor
nop
in
es
into
mov
enter
sub
subb
adc
add
xchg
packuswb
outsl
push
push
or
mov
or
adc
hlt
clc
push
call
add
rcrl
and
push
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
push
push
movzwl
or
push
movl
lea
mov
movl
sub
lea
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
mov
mov
or
mov
xor
decl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
sbb
mov
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
add
movl
cmp
movl
je
mov
movl
jmp
sbb
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
mov
mov
mov
cmp
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
movl
cmp
jne
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
push
call
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
jmp
sbb
cmp
inc
fst
inc
test
out
stos
mov
jnp
shr
int
jle
or
dec
mov
xchg
lahf
test
and
push
inc
pop
xor
mov
iret
inc
jge
mov
push
jle
cmpsb
repz
jmp
stc
push
dec
jb
fucomi
out
icebp
addl
or
or
fnstcw
xor
push
mov
rcr
adc
ret
inc
and
xchg
ja
xlat
jno
mov
pop
cmp
ja
or
xchg
jbe
jge
add
les
daa
scas
insl
sbb
cwtl
adc
xchg
adc
dec
and
push
lret
sbb
xchg
aaa
cmp
popl
sbb
std
stos
aaa
xchg
pop
jbe
inc
sbb
imul
outsl
mov
push
mov
xor
cs
sub
inc
mov
fldt
jg
loopne
inc
jb
push
jo
jnp
mov
and
adc
xorb
add
pop
rclb
xor
add
push
mov
push
mov
jmp
cmpl
cmpsb
cmp
and
popf
inc
pop
pop
in
pop
mov
adc
js
shr
mov
imul
ficoms
repnz
stc
cmp
push
rcrl
cmpsl
orl
roll
sbb
popf
push
dec
and
dec
adc
js
mov
sahf
adc
mov
shrl
lods
or
mov
add
in
into
xor
mov
pop
in
pop
jo
jge
xor
fsqrt
mov
arpl
ljmp
add
ja
adc
sbb
pusha
sub
xor
stos
sbb
xchg
bound
add
inc
or
inc
repz
and
mov
pop
popf
cwtl
xchg
mov
dec
dec
addr16
mov
or
fiaddl
mov
dec
and
cld
cli
mov
sub
addr16
mov
mov
lahf
push
inc
sbb
test
mov
pusha
fcomps
divl
mov
mov
iret
out
imul
mov
jp
xor
or
jmp
jl
or
mov
shll
orb
int
sbb
adc
scas
insl
mov
cmp
cli
mov
pop
or
xor
jge
iret
fcomip
cwtl
mov
lret
cltd
inc
and
test
mov
test
sbb
repnz
popf
adc
scas
mov
fbld
mov
fdivrp
roll
dec
or
and
xchg
shlb
cmp
or
jo
mov
push
cmpb
aam
push
jo
in
jmp
mov
pop
push
adc
dec
and
xor
add
mov
xor
sub
je
or
xchg
mov
movsb
adc
addl
loopne
in
mov
xor
daa
in
cmp
inc
daa
fists
jge
lock
push
pop
inc
dec
push
aam
and
jg
mov
or
aad
cmpsl
mov
hlt
cmp
repz
repnz
inc
cli
cmp
jne
push
or
jb
mov
inc
das
aas
xchg
jg
pop
ret
jne
xlat
mov
mov
js
pop
mov
mov
sbb
ds
fstps
and
pop
ljmp
addr16
dec
dec
in
adc
pop
cltd
or
test
xchg
or
bound
test
jmp
push
ja
xchg
aam
and
mov
movsl
jae
popf
pop
loope
xchg
xchg
or
jge
pop
xor
mov
mov
or
out
out
aad
mov
mov
inc
out
xchg
out
push
icebp
cli
mov
pop
mov
fisttps
sbb
ljmp
adc
movsb
mov
rcrl
lcall
call
mov
and
or
and
or
dec
mov
aaa
out
rcrl
push
lock
xchg
or
xlat
xchg
pop
arpl
pop
mov
xorb
es
daa
enter
pop
inc
inc
test
es
rcrb
scas
fsubs
aaa
mov
xchg
pop
loopne
mov
outsl
cli
sub
or
call
test
pop
and
fs
pop
shll
xor
scas
int
xor
cmp
shl
pop
and
xchg
aas
pushf
or
cld
push
das
andl
jne
aam
mov
and
mov
push
pop
sub
insl
stos
ja
cmp
test
push
dec
inc
scas
mov
add
push
jne
mov
enter
sub
les
and
fadds
int
notl
out
xor
cmp
test
lahf
add
call
out
adc
xor
and
js
daa
xchg
int
test
test
shll
sbb
pop
xor
aad
mov
mov
push
sub
adc
adc
ljmp
popf
xor
xor
ficomps
sub
jo
sbb
jns
mov
or
sti
xchg
fcomps
aad
testl
lods
ja
lds
sbb
pop
add
shrb
sahf
jg
jmp
and
jno
xchg
push
cmp
cli
dec
or
lods
lcall
fs
mov
icebp
nop
movsb
mov
int
shrb
ja
enter
sbb
mov
test
shlb
cli
pop
arpl
add
xchg
mov
push
shl
mov
xchg
push
mov
nop
pop
pop
pusha
faddl
lock
mov
movsb
jno
push
or
cmpsb
sbbb
and
push
adc
xchg
leave
cmp
negl
out
jae
out
inc
test
loopne
pop
mov
imul
fisttps
movsb
movsb
push
xchg
sbb
jge
stc
cmpsb
cmc
sub
shrl
pop
mov
ret
test
aas
imul
fstpl
gs
dec
sbb
adc
test
lods
daa
ret
push
negl
or
in
mov
icebp
mov
push
inc
out
popf
jge
das
push
mov
pop
popa
xchg
fsubs
testb
jns
add
in
imul
out
test
testl
int3
lahf
push
call
add
xor
out
mov
pop
pop
sub
repnz
dec
add
sti
cmp
popf
repnz
scas
inc
data16
push
jae
sub
pushf
cmp
mov
push
push
or
mov
mov
pushf
imul
daa
ja
cmpsl
adc
jb
jg
mov
repnz
xorl
out
popf
enter
fbstp
cmpsb
dec
fsubl
movsl
out
pop
sub
shrb
das
rorl
add
leave
ljmp
push
fs
fsubl
mov
sahf
punpckhwd
xchg
sub
mov
dec
jle
inc
xchg
add
std
jecxz
jg
dec
jecxz
iret
dec
nop
xlat
dec
mov
push
rol
jns
shrl
btcl
repnz
push
sub
mov
mov
xchg
cmp
mov
push
sub
leave
ljmp
add
push
or
stos
aas
test
jnp
and
aas
aas
mov
fs
sbb
ljmp
inc
hlt
jp
fwait
mov
xchg
gs
stc
cmpsl
inc
inc
fidivs
mov
roll
or
add
rcl
xor
cmp
add
jnp
cmc
adc
mov
sub
repz
xchg
or
pushf
stc
mov
cmpsb
or
enter
mov
xchg
sub
dec
cmp
jb
inc
movsl
stos
popf
and
cmpsl
lods
push
adc
aas
icebp
mov
subb
jl
dec
mov
stc
mov
jnp
push
jmp
in
mov
je
outsb
dec
stos
stos
jnp
jae
ret
mov
inc
xchg
enter
imul
lds
out
push
cmp
and
jne
or
in
call
loop
lods
sbb
xor
mov
sbb
xor
loope
jg
frstor
mov
or
adc
movsl
std
xchg
mov
in
rorl
clc
fistl
addr16
jo
dec
notb
push
sub
rep
inc
mov
pop
sub
push
xor
lahf
jnp
pop
lock
xor
clc
cltd
sub
xchg
lds
dec
insb
mov
orl
add
inc
sbb
test
dec
movsb
scas
repnz
cmp
bound
xor
pop
clc
mov
repz
loope
adc
fisttpll
out
std
cmpsl
fcmove
xchg
aaa
aad
pop
lds
in
push
lcall
xor
fldt
arpl
movl
add
int3
scas
ss
mov
dec
push
and
test
xchg
dec
loop
cli
cmp
outsb
push
divb
inc
cmp
es
mov
pop
ret
fnsave
lret
mov
pop
lods
cwtl
cld
imulb
or
repz
js
xor
mov
xchg
pop
mov
dec
jo
fcomip
fnsave
cmp
lret
mov
iret
sbb
and
cmpsb
leave
stos
inc
bound
mov
push
jmp
pop
push
jae
mov
mov
mov
popf
dec
xor
or
aam
sub
pop
jl
fs
or
dec
ljmp
in
daa
sub
adc
les
sbb
sub
or
fdivrl
push
sar
push
adc
dec
mov
add
lret
arpl
sub
pop
pop
mov
xor
rcrb
sub
adc
les
cmp
arpl
xor
pop
xor
aam
clc
int3
mov
lock
xor
sbb
fimuls
cwtl
xor
add
jo
into
push
cmp
sahf
or
cmpsb
mov
fmulp
push
ss
mov
cmp
add
pop
jae
xchg
cs
and
cmp
xchg
adc
scas
dec
les
or
aad
push
jp
subl
js
in
fildll
push
or
cmp
sub
cmpsl
xchg
les
data16
and
xchg
rolb
mov
xlat
lods
fcomi
dec
enter
aad
mov
or
arpl
pop
scas
push
jg
mov
mov
mov
outsl
pop
dec
dec
or
stos
jns
push
insl
lods
testl
adc
test
mov
in
movsb
ficoms
mov
jmp
rolb
scas
mov
pushf
jecxz
mov
cmp
arpl
sti
sub
cs
loopne
in
dec
mov
pop
adc
sbb
cmp
fld
mov
test
ljmp
inc
add
cmp
aaa
imul
inc
shlb
mov
lret
ds
mov
subb
inc
fstps
xchg
cwtl
mov
clc
sbb
mov
xchg
stos
sbb
nop
stos
shll
jns
jbe
cmp
or
lahf
sahf
lahf
cltd
push
pop
loope
sahf
push
shll
cmp
xchg
mov
mov
mov
mov
lods
subb
mov
bound
pusha
ja
jbe
int
mov
mov
inc
es
je
inc
pop
out
lea
rol
dec
in
dec
push
addr16
or
mov
test
inc
setbe
pop
cmp
push
cmp
cli
jnp
fdivs
aam
xchg
dec
pop
arpl
push
ljmp
movsl
leave
movsb
jne
test
cmp
push
in
xchg
mov
sbb
dec
xchg
xchg
mov
lock
icebp
push
rcll
xchg
mov
push
mov
lock
sbb
and
ret
and
popf
fisttpl
mov
insl
popa
push
pusha
xlat
shrl
lds
sbb
fdiv
int
add
inc
jno
in
jmp
stc
aaa
dec
adc
out
sbb
lds
pop
add
hlt
fsubrl
pop
das
pop
xchg
rcll
stos
cmp
test
or
or
or
pop
mov
nop
dec
mov
dec
dec
push
cmp
ror
jp
aam
add
stos
jb
jb
cmp
adc
mov
fnstsw
xchg
test
pop
adc
mov
mov
int3
sbb
imulb
mov
das
test
jb
push
cmp
popf
and
outsl
outsl
xchg
enter
inc
dec
imul
push
sbb
in
cld
cmp
pop
inc
jmp
in
aam
outsl
sti
xchg
std
movsb
cmc
sbb
and
outsb
gs
js
mov
sbb
xor
pusha
loope
push
push
sbb
jne
popf
jge
mov
push
out
cmp
mov
into
and
sub
jno
cmp
lock
fsubrp
mov
icebp
lret
shll
jg
adcb
loope
mov
ds
mov
push
xor
bnd
or
and
leave
inc
cmp
clc
std
cmp
mov
xor
data16
xor
bound
fcoms
bound
pop
cltd
adc
int
or
add
inc
pushf
and
decl
sbb
or
and
dec
cmp
push
inc
cmp
cmp
rclb
adc
xor
dec
test
xchg
jae
in
mov
roll
out
fisubrs
xchg
jge
jg
push
daa
jb
pop
mov
jbe
push
mov
outsl
jle
inc
fbstp
pop
add
dec
std
inc
cmpsl
xchg
xor
pop
or
push
lods
xlat
int
into
jp
sar
mov
dec
ja
push
imul
out
hlt
jns
mov
cmpsb
xchg
mov
imul
lahf
cmc
clc
aad
arpl
lods
and
add
mov
add
lret
cmp
inc
nop
ror
fistpl
enter
in
mov
popf
mov
sub
cmp
push
sub
hlt
fsubl
stos
nop
repnz
push
jmp
mov
mov
sti
xchg
shlb
faddl
dec
mov
hlt
fs
fnstcw
dec
dec
push
dec
sarb
in
mov
dec
sbb
sub
pop
imul
pop
jge
pusha
sub
fiadds
in
and
sbb
push
xor
adc
jno
mov
fsub
fbstp
cmpsb
sub
mov
adc
jp
repz
xchg
sub
mov
jecxz
insl
movsb
enter
cld
cmp
dec
xchg
dec
xchg
xchg
adcb
nop
inc
gs
adc
jl
jo
cmp
mov
dec
sahf
jle
sti
and
filds
mov
daa
mov
add
addr16
dec
push
shrb
fdivl
mov
inc
cmpsb
inc
adc
jne
sub
cmp
lret
mov
mov
jle
nop
stos
or
js
lock
sbb
push
mov
jle
push
xor
fisttpll
cmc
imul
dec
add
mov
inc
addr16
inc
mov
mov
icebp
or
add
fldt
addr16
in
aaa
adc
decb
std
cld
sbb
cmp
aas
and
dec
lods
int3
xchg
pop
cmpsb
aas
dec
stc
and
add
es
je
push
shrb
pop
pop
sbbl
mov
pop
xor
cli
mov
mov
cmp
xchg
xchg
stos
mov
subl
lcall
cmp
push
cld
xchg
lods
dec
pusha
in
push
or
shlb
aaa
xchg
cmp
jp
fbstp
mov
pop
mov
cmp
dec
jnp
icebp
shl
out
scas
cld
movsb
iret
xchg
dec
and
fisubrl
test
loop
aam
in
sub
mov
push
addl
nop
pop
outsl
adc
lret
dec
pop
dec
push
fsubrl
xchg
sbb
out
xchg
test
mov
outsb
push
or
gs
fldenv
sub
repnz
lret
mov
inc
or
mov
jl
push
lds
rcrb
cli
mov
adc
mov
mov
popf
add
mov
adc
push
push
loope
fcmovnu
ficomps
sahf
cmp
cld
and
cmp
mov
push
add
daa
sbb
in
ljmp
mov
dec
jmp
lret
lret
aas
xchg
lods
leave
negb
mov
sub
test
dec
aaa
inc
out
inc
sub
je
stc
mov
lahf
daa
fcomp
fildll
pop
adc
inc
add
repz
movsl
mov
arpl
pop
mov
adc
cltd
mov
dec
or
out
clc
repz
sahf
mov
repnz
jne
sbb
mov
dec
imul
cmpb
push
stos
leave
jae
imul
jle
popf
cmp
aad
ret
fidivrl
push
lods
sbb
cmp
mov
sub
aad
pop
and
add
or
xchg
movsb
lret
mov
xchg
mov
icebp
in
adc
mov
shl
mov
mov
dec
sbb
fstpt
sbb
dec
cmp
sbb
stos
arpl
xchg
inc
mov
inc
inc
in
ret
push
mov
sub
add
push
jg
cmpsb
mov
int3
mov
pop
xchg
pusha
push
cmp
pop
or
jmp
inc
cmpsl
mov
jmp
hlt
test
mull
push
pushf
jmp
and
adc
test
xchg
mov
jnp
clc
xor
lods
cwtl
iret
int3
loope
stc
syscall
dec
loopne
test
int3
sti
adc
mov
les
fcompp
mov
mov
jge
cmp
fcmovne
ficompl
mov
jg
outsl
mov
xchg
js
push
mov
adc
rcrl
enter
das
pop
ss
cmp
mov
out
xlat
push
mov
mov
add
mov
add
rorl
or
fildll
or
mov
jge
push
or
gs
leave
cmp
push
and
dec
xchg
imul
add
sbb
cmp
and
clc
add
clc
cvttps2pi
adc
lock
call
ret
pop
xor
jle
jle
and
cmpsl
std
add
ds
mov
add
insb
lods
rol
std
push
adc
xchg
push
shlb
add
lods
out
add
testl
jo
inc
jmp
lea
bound
add
je
mov
mov
imul
add
in
mov
inc
scas
cmp
dec
outsb
cmc
dec
jle
inc
bound
sti
outsb
push
push
dec
jmp
out
and
and
clc
xchg
insl
lahf
inc
jmp
fidivrl
movsl
or
ret
lds
adc
dec
push
lret
cmp
mov
xlat
sbb
xchg
lret
test
pop
mov
les
adc
out
popf
in
pop
add
xlat
mov
call
loope
imul
lock
imulb
outsb
xor
js
mov
push
adc
sbb
in
data16
lds
push
adc
adc
jle
rolb
inc
cld
aaa
sti
daa
xor
scas
mov
aad
icebp
mov
sti
pop
inc
xchg
in
test
sbb
test
fadds
add
adc
fwait
iret
andl
jmp
add
test
add
and
mov
add
hlt
dec
sub
pop
jb
loopne
jmp
push
push
enter
xchg
in
inc
dec
adc
pop
ss
repz
pop
sub
xchg
push
adc
sub
inc
test
push
fadd
mov
mov
fdivrs
jno
test
jl
leave
icebp
or
or
mov
lea
stos
movsl
in
movsl
ds
xor
sbb
ficomps
sub
sahf
cld
mov
cmp
cmp
insb
nop
mov
mov
push
call
repz
mov
sbb
mov
lods
xchg
dec
dec
fildll
popf
and
mov
fs
std
outsl
adc
mov
and
lock
pop
dec
push
into
sahf
push
lahf
cli
fs
int
push
cmp
mov
dec
add
push
add
fidivs
add
mov
jl
inc
movsb
cmpsl
adc
mov
cs
sub
nop
mov
mov
out
fstpt
nop
out
mov
adc
push
mov
movsb
adc
sahf
in
cltd
sbb
cmp
push
or
testb
cmp
int3
add
add
movb
mov
ljmp
mov
mov
or
inc
movsl
pop
popa
std
and
sbb
comiss
xor
jo
pop
rol
cmp
insb
out
out
mov
and
push
sbb
lds
jbe
mov
adc
add
add
xor
sub
mov
lods
push
test
out
loope
jae
mov
add
stos
cwtl
mov
push
fists
arpl
and
ret
divl
dec
and
dec
mov
pop
movsb
in
imul
jo
cmp
std
jg
adc
mov
addb
daa
sbb
fs
mov
idivb
movl
mov
ds
sub
stos
or
test
cmp
ret
push
push
out
fidivrs
adc
xlat
loope
inc
pop
push
ret
in
int3
daa
push
lea
in
je
aad
pop
fstl
daa
adc
mov
mov
adc
sub
add
cmc
push
ja
in
in
xchg
xchg
adc
pusha
test
rcrb
mov
cmp
ljmp
rorb
pushf
push
addr16
popa
repnz
jb
push
call
repz
sbb
pop
mov
mov
popl
into
in
push
add
andb
es
and
push
std
lds
in
dec
les
mov
mov
or
pusha
addl
int3
outsb
cmp
mov
outsb
movsl
pusha
lock
test
popf
out
lret
inc
in
lea
hlt
inc
add
pop
gs
in
inc
popf
push
add
pop
cmp
js
cld
push
idivl
ret
ficoml
movsb
and
in
pop
adc
sub
cwtl
or
jmp
aas
cli
sbb
fildll
inc
js
sbb
sbb
rcl
mov
xor
xor
int
cmp
xlat
addr16
orl
int
dec
cmc
gs
cmp
jl
sub
fsubrs
hlt
adc
jb,pn
daa
xor
pop
or
or
xchg
inc
popf
fdivs
push
mov
lods
stc
orb
or
push
dec
jecxz
jg
int3
xchg
mov
adc
and
popa
xor
mov
lret
rcl
mov
jnp
jmp
sub
lock
cmp
jae
mov
insb
inc
scas
sub
lds
cs
cli
jge
mov
jge
push
loopne
xor
pop
pop
add
lock
nop
fcmovnbe
in
mov
loop
add
lahf
lret
fimull
out
sub
xlat
imul
enter
xchg
sub
mov
add
push
mov
stos
lret
xchg
add
hlt
in
mov
lock
push
push
popf
sarl
mov
xchg
enter
aas
mov
add
movsb
push
shlb
or
imul
shrb
mov
dec
aaa
lcall
cmpsl
cltd
scas
ss
and
inc
xchg
das
lret
in
scas
mov
imull
add
ja
ja
cs
push
xor
lods
into
aas
sbb
rorl
repnz
notb
and
pop
mov
jl,pn
sub
pushf
cmp
inc
cmc
and
dec
adc
jo
les
in
rol
jb
sbb
inc
dec
inc
mov
es
jnp
cmp
in
jg
xor
inc
cwtl
pop
lea
hlt
out
cmp
out
push
jne
addr16
imul
int3
jae
jmp
ficoml
or
hlt
inc
fbstp
test
or
int3
hlt
loop
leave
rcrl
sub
mov
push
add
das
loope
imul
push
lret
cmp
cltd
scas
arpl
xchg
push
out
andl
ret
shll
jp
pushf
popa
push
pop
cmp
pop
and
and
cmpsl
push
sub
inc
pop
nop
sbb
sbb
test
stos
xor
sti
pusha
jle
movups
mov
push
add
mov
pop
sbb
inc
arpl
mov
or
dec
jecxz
cs
iret
push
push
and
dec
into
push
xchg
inc
fcoms
push
lret
ret
pushf
sbb
inc
mov
les
out
loop
es
test
mov
cmpsb
scas
sbb
stos
push
clc
iret
loopne
scas
icebp
mov
in
lock
lods
push
push
andb
dec
insb
dec
xorb
pop
lahf
sbb
push
dec
out
movsl
cmc
xchg
cmc
cmp
test
mov
subps
fsubrl
insb
xor
hlt
add
lds
mov
fsubl
adc
sti
lret
xchg
mov
repz
or
loopne
lea
push
ds
adc
nop
jg
mov
ss
lods
jmp
lds
push
or
mov
ds
mov
idivb
daa
mov
inc
hlt
int
push
push
pop
xchg
pop
mov
mov
push
andl
out
fadd
push
pop
mov
cmpsb
mov
pushf
inc
jp
push
iret
pop
mov
xchg
gs
addr16
cmc
hlt
out
in
rcl
iret
rcrb
adc
stc
add
addb
fimuls
data16
cmp
or
or
or
aad
mov
std
dec
push
fdivrp
lret
subl
sub
inc
rcrb
lock
xchg
enter
push
mov
mov
test
in
and
push
addr16
and
dec
dec
cmp
push
outsl
lret
in
mov
mov
xor
lods
lahf
jne
add
mov
mov
cli
arpl
nop
sbb
aam
xchg
repz
sub
xchg
imul
lock
adc
push
push
mov
xor
insl
xor
int3
imul
mov
sub
xor
mov
mov
xchg
adc
mov
enter
and
outsb
sbb
pop
dec
adc
xchg
inc
add
cmovns
or
push
or
push
int
hlt
cmp
cmp
icebp
jmp
push
cs
mov
xchg
jnp
mov
jp
push
sub
repz
jne
scas
sub
mov
push
mov
dec
xchg
std
dec
sarb
xchg
push
out
mov
dec
xor
jge
jb
shll
test
addr16
pop
fcompl
push
mov
jbe
cmp
incb
js
in
adc
cltd
push
mov
icebp
mov
pop
lock
add
and
loop
xchg
cmpsl
mov
test
insl
push
fadds
stos
mov
sbb
push
jp
sub
js
fdivr
sbb
jp
adc
xchg
cmovs
xor
pop
push
cltd
ja
shlb
sbb
jnp
push
xor
jmp
iret
pop
mov
rcl
adc
push
adc
pop
or
xor
or
mov
aam
jl
jno
out
scas
add
xorl
shrl
lcall
xorl
mov
xchg
xchg
xchg
repz
xchg
pop
mov
adc
test
xchg
and
mov
outsl
es
dec
out
aaa
xor
jns
shr
sub
mov
inc
jns
mov
idiv
ljmp
repnz
mov
adc
stos
nop
push
test
and
add
inc
ljmp
fistpll
lock
es
mov
pop
jb
adc
add
int
popa
cmp
clc
shlb
mov
sbb
mov
or
inc
mov
mov
or
or
push
and
or
pop
dec
shrl
mov
cld
daa
mov
adc
jne
sbb
add
cltd
push
jmp
mov
xor
xchg
iret
in
arpl
popf
push
jmp
mov
dec
pop
in
outsb
inc
enter
inc
pop
and
sub
ja
vmpsadbw
arpl
adcl
sarb
mov
xchg
inc
push
jo
popa
fmull
pop
in
mov
ficomps
out
shrb
aam
sbb
cmp
insl
arpl
loopne
stos
adc
std
cmp
push
cli
cwtl
or
lret
cmp
push
fs
addb
fldl2t
jns
xchg
test
js
ret
lahf
fwait
sub
sub
popf
sbb
cmp
loope
clc
int
mov
shrb
push
nop
in
int3
fbstp
add
pop
je
fs
and
addr16
fs
jle
into
xor
xor
mov
lock
mov
cwtl
pop
outsl
jmp
mov
or
mov
lock
mov
xchg
cwtl
jmp
adc
test
or
mov
stos
sbb
push
jle
xorl
daa
in
jns
add
jl
imul
jmp
cli
sbb
rolb
cmpsb
sub
cld
repnz
inc
outsb
ret
xchg
push
ljmp
or
push
mov
sbb
mov
dec
std
jno
sbb
inc
dec
test
jg
flds
fwait
into
inc
pop
sahf
jl
and
jo
sbbb
cltd
imul
stos
lcall
pop
flds
test
add
push
mov
jns
lahf
adcb
or
sbb
add
insl
arpl
lock
jne
pop
jl
loop
fstps
in
dec
fmuls
mov
add
pop
inc
mov
mov
xor
dec
inc
test
cmpsb
lock
mov
into
pop
je
fwait
xchg
imul
shrb
inc
stos
add
mov
cs
aas
enter
inc
shl
ss
jmp
imul
addl
or
sti
or
scas
mov
dec
or
inc
xchg
jnp
mov
ret
popf
fcompl
call
jl
xchg
sub
jne
dec
out
cmp
test
lea
popf
add
and
test
pop
mov
iret
ret
enter
shlb
mov
jecxz
lahf
fnstenv
pusha
mov
cmp
sti
cmp
aam
push
push
icebp
cltd
sbb
push
inc
push
dec
push
outsl
xor
or
in
xchg
cmpb
mov
aaa
dec
inc
sbb
sub
inc
testl
gs
adcb
stc
add
jnp
cs
xchg
adc
adc
outsl
mov
pushf
xlat
push
adc
ds
hlt
decl
call
or
lds
add
mov
add
leave
in
xor
dec
cmp
bound
cmp
insb
pusha
scas
lcall
aam
aam
popf
pushf
cmc
mov
hlt
jmp
test
jbe
sub
das
filds
out
pop
stc
dec
movaps
scas
hlt
iret
pusha
jg
popf
jo
jb
adc
inc
cmpsl
nop
push
cmp
cs
js
scas
adc
lss
xor
mov
cmp
pop
ficompl
xor
sub
mov
add
cmp
mov
mov
jg
jmp
push
bound
jp
xchg
js
repz
sbb
lock
mov
adc
push
lods
sbb
mov
aam
movsb
addr16
lret
ja
lret
add
and
jne
jns
pop
jge
sbb
adc
shlb
leave
out
sbb
popa
xor
aad
outsb
adc
dec
mov
xor
adc
leave
add
ffree
dec
sbb
pop
test
sub
mov
dec
call
mov
jnp
sub
imul
outsb
xchg
iret
mov
aaa
movb
xlat
cmp
mov
pop
add
fbstp
cmp
add
fcoms
cmp
jle
shlb
xchg
jg
andb
sub
sub
adc
mov
jg
lods
ret
je
int3
sbbl
cmp
ret
push
dec
insl
mov
incb
mov
xlat
or
xor
push
dec
push
push
inc
xchg
arpl
nop
jo
mov
pop
push
push
and
mov
lret
jnp
inc
or
fcoms
xchg
stos
mov
jp
cmp
xor
test
mov
xchg
fldl
xor
inc
or
mov
loope
imull
mov
call
test
mov
stos
std
test
loopne
mov
pop
add
fldcw
out
jo
push
jp
stos
inc
repz
xor
sub
adc
cs
adc
scas
jns
loop
pop
sbb
cmpxchg
jns
push
jmp
mov
cmp
unpckhps
movl
add
push
mov
movsb
clc
and
call
aam
sarl
jle
aaa
int3
clc
and
shll
das
jns
fstpt
inc
rcl
mov
mov
aam
and
dec
cld
stc
ja
push
dec
pop
sub
lock
popf
or
cltd
ds
clc
jp
jno
lock
lea
mov
inc
hlt
je
popf
mov
and
insb
jnp
gs
dec
ficoms
mov
cmp
mov
mov
inc
add
or
jb
xor
push
sbb
cmp
nop
mov
int3
xlat
out
mov
or
nop
and
jp
xchg
mov
jbe
cmpsb
inc
outsl
cmc
jb
gs
rclb
cmp
scas
test
xchg
pop
out
jno
lret
movups
or
push
adc
frstor
jecxz
jno
mov
mov
mov
lret
and
into
mov
addr16
mov
pusha
into
mov
xor
jb
int
adc
or
and
mov
scas
mov
sub
xchg
xor
int
cmp
dec
shll
push
inc
out
cmpsb
push
sub
sub
xchg
clc
push
dec
sahf
outsb
and
jno
clc
test
sub
dec
xor
adc
push
xchg
xchg
insl
inc
mov
outsl
aad
popa
dec
sbb
pop
scas
add
dec
jae
inc
or
jp
inc
push
sti
fld
leave
xchg
loop
test
call
xchg
sar
mov
sub
js
and
add
jp
sti
fisttps
ja
popa
push
mov
ljmp
mov
in
in
inc
hlt
into
push
dec
mov
xor
loop
pop
add
orl
add
or
test
mov
lret
sbb
or
mov
outsl
stos
pop
pop
imul
out
adc
xlat
mov
sbb
xchg
js
mov
jle
jp
lret
fidivrs
lret
jg
int3
ficompl
fnstsw
popf
daa
add
adcl
sarb
das
and
add
pop
es
xchg
xlat
fwait
test
les
xchg
in
sti
and
jo
icebp
xor
ret
rcpps
imull
scas
clc
ret
repnz
push
pop
loop
ds
xorl
mov
adc
pavgb
cmp
out
or
dec
fisttps
mov
inc
mov
inc
jno
inc
lea
inc
in
sarl
cmpb
rcr
add
dec
sbb
pop
test
icebp
adc
sar
jg
jg
add
rcrl
mov
jbe
jbe
pop
fwait
lret
loope
pop
pop
les
in
pop
add
and
jns
pop
arpl
mov
push
ljmp
dec
mov
popl
add
or
pop
pop
or
mov
cmpsb
xchg
call
or
or
ds
ficoml
push
notl
aam
insb
repz
popw
clc
imul
xchg
pop
mov
js
ret
mov
dec
dec
shlb
cs
imul
pop
stc
xor
aam
lods
cmp
and
mov
adcl
mov
push
sub
jp
daa
scas
pop
mov
push
and
xchg
inc
mov
lock
out
ljmp
subl
int
mov
insl
out
mov
ja
mov
ret
and
mov
nop
imul
mov
dec
adc
shl
push
int3
je
dec
rcr
in
jno
pusha
cmpsb
ljmp
push
imul
je
sub
lock
fidivs
fwait
in
dec
insb
rcrb
pop
dec
cmp
xchg
subb
jmp
scas
cmp
or
or
jl
gs
push
sarb
hlt
dec
push
imulb
pop
sbb
jne
push
insb
movsb
sbb
stos
pushf
inc
hlt
iret
push
cwtl
shrb
jge
sbb
jae
or
lea
icebp
lret
mov
adc
xchg
sbb
loope
cmp
stos
negb
lock
rorb
dec
mov
je
inc
push
sbb
dec
xchg
pop
sub
xor
inc
inc
mov
pop
xchg
popf
add
mov
fdivs
rclb
xchg
jnp
xchg
sbb
das
lcall
mov
add
jge
ja
lcall
pop
psubsb
mov
mov
ss
sbb
in
add
inc
test
in
mov
outsl
add
loop
or
sbb
xchg
xlat
dec
sahf
nop
sub
sbb
cmc
sti
mov
js
jle
pop
xchg
cmp
sti
into
clc
mov
dec
daa
sbb
add
scas
std
sub
mov
repnz
pop
xor
push
cmp
je
ret
sub
xchg
das
scas
dec
bnd
add
mov
sbb
cmc
or
fistps
jo
repnz
jne
repnz
mov
jb,pt
push
in
pop
xlat
mov
cs
jns
cmpsl
incl
jae
push
pop
sbb
ds
pop
aam
mov
pusha
arpl
rorb
je
jle
stos
loop
testb
rolb
stc
imul
sar
push
pop
pop
jmp
sbb
repnz
jp
sbb
loop
test
das
or
push
mov
xchg
popf
jnp
xchg
push
push
sarl
addl
ja
repz
push
inc
aad
out
xchg
sarb
addr16
dec
outsb
inc
dec
pop
fwait
gs
xor
into
mov
lods
dec
jnp
mov
nop
jmp
into
mov
mov
aam
mov
pop
in
ds
std
dec
mov
gs
andl
in
int
push
add
and
push
setb
dec
xchg
jle
push
mov
fs
inc
adc
test
out
jno
mov
outsb
cli
and
neg
negl
add
jbe
cli
aas
pop
xor
out
test
outsl
aaa
hlt
dec
xchg
pop
dec
xor
and
fwait
cmp
mov
lahf
cmp
imul
test
xchg
mov
mov
mov
test
dec
push
aas
ss
scas
add
push
andl
jo
daa
imulb
jmp
scas
lcall
xchg
push
cmpsl
cmp
xchg
incb
aam
gs
xchg
pushf
jae
jp
push
jg
pop
adc
push
daa
sti
js
push
mov
mov
pop
jmp
adc
movsl
filds
or
into
dec
in
push
movsl
inc
cwtl
jae
fistps
jmp
in
mov
cmp
pop
icebp
xchg
xor
fimull
fmuls
mov
int3
fisubs
out
push
mov
fistps
shrl
out
xor
movsl
and
mov
addr16
lods
les
mov
push
fcoml
xor
mov
fnsave
jge
mov
popf
mov
cltd
sahf
xchg
imul
pop
sbb
push
in
popf
ss
jbe
jnp
out
mov
ret
fwait
jmp
pop
cwtl
xor
or
cltd
mov
jbe
sub
sub
repz
int
pusha
pop
std
fsubrl
add
mov
jecxz
pushw
add
test
sahf
adc
dec
push
sbb
sti
dec
stos
xchg
out
adc
mov
push
push
icebp
mov
aas
aaa
jns
outsb
adc
jmp
cmp
jecxz
xor
xor
pop
inc
ret
in
xchg
andl
repz
mov
mov
mov
in
bound
js
and
xchg
shl
xchg
xor
es
xor
xlat
test
repz
ret
mov
scas
mov
pop
xor
aas
and
pusha
dec
jl
cmp
push
sarl
add
pop
adc
imul
cmp
iret
stos
xor
xor
dec
push
sbb
xor
pop
pop
daa
push
insl
jae
rorb
dec
sub
xchg
test
idivb
in
cmpsl
or
or
ljmp
test
std
lret
xchg
lds
add
scas
add
sub
dec
xchg
lods
pop
rclb
rorb
add
orb
outsb
push
jo
in
mov
sub
lcall
pop
adc
faddl
pusha
nop
jge
dec
push
incb
mov
dec
push
incl
lcall
leave
mov
cmp
mov
imul
fnstsw
and
gs
outsl
adc
adc
xor
int3
xlat
jle
mov
sbb
popf
dec
add
mov
pop
mov
xchg
xchg
shrb
loopne
jno
inc
mov
out
iret
shll
fstps
lret
mov
cmp
cmc
jne
cmpsb
sub
stos
and
xor
jbe
cmp
cli
mov
jp
jne
mov
pop
and
cmpsb
fndisi(8087
sahf
shl
lods
sahf
pop
inc
ja
and
lea
xor
aad
or
dec
mov
sbbl
jbe
ret
int3
push
push
push
imulb
sub
mov
in
xor
pop
dec
into
push
adc
out
dec
aam
xchg
mov
pop
mov
dec
pop
nop
sub
add
push
stc
outsl
push
dec
in
mov
jg
cwtl
scas
pop
adcl
sub
xlat
aaa
fcmovnbe
mov
cmp
jbe
out
in
xchg
jmp
pop
sarb
nop
adc
or
push
mov
loop
dec
cmp
es
jae
xchg
sbb
dec
jno
sahf
or
xor
cmp
dec
and
mov
pop
inc
jbe
mov
pop
fistl
dec
mov
pop
out
test
out
sbb
xor
sbb
cmp
mov
mov
popf
mov
sarl
test
inc
cld
outsb
or
enter
jecxz
mov
enter
cmp
test
adc
lahf
fcmovb
ret
subb
mov
insb
jecxz
in
rcrb
lock
cmp
mov
add
cli
jbe
lock
xchg
out
jbe
fidivrl
mov
inc
push
es
sbb
popa
es
or
jbe
jmp
xorb
jp
sti
ljmp
and
xchg
inc
xchg
cmpsl
inc
jo
jne
addr16
out
aam
ja
ss
adc
cmp
cwtl
cld
jae
fisttps
jnp
dec
sahf
cmp
pop
mov
je
das
cmp
jnp
adc
sub
rcll
test
add
in
and
xchg
pushf
xor
insl
xor
fwait
jl
mov
dec
cmpsl
lods
hlt
add
imul
je
dec
push
and
inc
push
test
popa
push
mov
pusha
outsl
sub
cmp
sahf
inc
mov
xchg
dec
fnsave
loopne
adc
jp
cmp
in
cltd
mov
bound
and
out
inc
xor
inc
icebp
push
xor
or
pop
pop
cmpsl
in
xor
mov
jg
cmc
sbb
xlat
inc
ljmp
test
icebp
fistl
add
jle
xor
ficompl
sub
jnp
add
sahf
jno
out
pop
mov
mov
movsl
or
cli
inc
adc
aaa
in
xchg
aaa
push
jl
sbb
cmp
fwait
adcl
cld
jp
dec
rcrb
mov
leave
fcmovnbe
dec
lcall
jecxz
out
fs
cmpsb
lods
sbb
cwtl
into
jo
das
fsubr
and
xor
inc
pop
adc
notl
mov
push
inc
call
lea
xchg
lock
fnstenv
cmp
sbb
shrl
mov
aam
orb
dec
cmc
cmp
popf
push
xchg
push
pusha
sarl
nop
pop
push
and
pop
xor
cmp
pusha
mov
mov
adc
mov
lods
lret
mov
hlt
mov
push
cmp
faddp
aaa
pop
sub
inc
lea
sbb
popa
mov
sbb
mov
jno
ja
mov
pushf
loope
pushf
cmp
movsb
sub
imul
push
pop
pop
jae
sbb
or
clc
lcall
jmp
repnz
aaa
inc
shl
fsubrp
imul
or
push
test
xchg
mov
xchg
xor
fidivrl
rolb
sbb
test
std
into
inc
jo
cmpb
dec
stos
sbbl
mov
mov
sti
les
adc
fdivrl
clc
inc
push
jge
adc
icebp
or
test
imul
insb
push
push
rcr
lods
movsl
xlat
pushf
cmpsb
pop
scas
cmp
sbb
adc
xor
rdpmc
cltd
xor
lret
jbe
fwait
mov
scas
or
sbb
add
mov
int
jle
aas
icebp
cmpsb
das
arpl
repnz
push
movsl
stc
mov
cmp
ficoms
xchg
xchg
jnp
stc
pop
mov
enter
dec
cmpsb
adc
mov
mov
mov
mov
dec
add
mov
ret
fucomp
push
push
mov
stos
cld
cmp
repz
test
jge
pop
jo
push
bound
jge
sbb
notb
jl
adc
jo
shl
popa
cmpl
fistps
cmp
adc
fildll
inc
fildl
aam
sbb
cmpl
mov
lock
fwait
add
or
lret
cmpsl
call
cs
adc
adc
xchg
xchg
les
xor
sahf
push
sbb
pushl
inc
push
cltd
xchg
fwait
inc
inc
xor
mov
or
dec
scas
cmpsl
mov
mov
adc
sbb
cmp
mov
adc
jecxz
lds
pushf
hlt
adc
jne
dec
mov
sub
andb
add
gs
stc
jne
in
nop
push
xor
pop
inc
les
or
iret
cmp
push
mov
xor
es
outsl
push
add
mov
and
icebp
lret
movsl
shrb
dec
dec
inc
jecxz
aam
lds
js
add
cs
inc
in
aam
sbb
xor
dec
repnz
mov
mov
cmpsb
cmp
mov
sbb
sub
cmp
push
dec
outsb
mov
and
adc
push
cmp
pop
ds
jns
mov
xchg
cmp
hlt
lret
sahf
sbb
mov
rcll
fmul
sbb
cwtl
loopne
cmpsb
in
paddw
pop
pop
outsl
jne
out
add
pop
dec
push
xlat
mov
sub
enter
mov
lret
and
push
xor
sarb
pop
rcrl
daa
out
inc
mov
testl
xor
xor
add
add
vdivpd
mov
test
lret
jne
andl
mov
dec
and
scas
rclb
cmp
dec
das
or
pop
fmulp
cmp
movl
pop
and
pop
addl
mov
lds
fwait
xor
inc
cmp
sahf
movsb
xchg
push
and
push
jl
pop
jo
cmc
cmp
sbb
mov
stc
or
push
mov
out
lods
add
loop
xchg
rclb
lcall
dec
in
or
mov
lods
mov
popa
mov
decb
cs
mov
push
inc
xchg
pop
and
and
fs
test
or
pop
ljmp
jno
cmp
aaa
mov
push
cmp
clc
data16
adc
mov
push
mov
test
mov
bound
dec
rorb
cmp
arpl
insb
push
not
mov
lds
addr16
and
or
adc
fs
movsl
insl
jl
movsb
enter
mov
sarl
pop
pusha
cs
inc
ficoms
inc
jno
inc
cmpsb
std
fld
pcmpeqd
cmp
leave
je
jg
outsb
pop
cld
fwait
push
lret
fdivl
mov
pop
pop
push
stos
xor
lret
ret
cltd
in
xor
mov
lock
out
clc
mov
out
mov
xor
mov
test
jns
xchg
push
jae
scas
xlat
leave
repnz
dec
enter
ja
repz
jbe
insb
cmp
in
stos
fcoms
dec
sub
mov
rcll
nop
sbb
test
push
push
dec
stc
fwait
stc
rsqrtps
nop
jg
sub
gs
jmp
sub
daa
mov
push
cmc
in
or
sahf
fndisi(8087
into
int
cmp
test
pop
sub
notl
repz
repnz
pusha
cmp
int3
xor
mov
je
dec
mov
jge
into
xor
mov
test
xchg
or
pushf
jle
lret
les
mov
mov
nop
mov
aam
or
pop
mov
jle
xchg
xchg
insb
and
jae
or
cmpl
xchg
in
inc
lods
repz
lcall
pop
movsl
pusha
xchg
das
sbb
movsl
cwtl
cs
xor
push
out
dec
pop
inc
push
mov
je,pn
fidivl
ja
adc
cs
ret
jno
jle
sarb
insl
adc
dec
movsl
test
arpl
imul
inc
mov
aaa
subl
fistl
mov
jecxz
jnp
out
adc
subl
mov
es
mov
push
jnp
mov
sbb
repnz
pop
lea
test
jmp
jbe,pt
cmp
sub
daa
cmpl
xchg
ret
cltd
les
in
xor
or
cltd
sbb
fstpt
and
cmp
fdivs
adc
or
jecxz
addl
jecxz
fbld
mov
add
imul
lret
add
mov
lahf
ja
lret
inc
and
into
fucomip
inc
cmp
mov
jle
repnz
test
jno
cmpsb
adc
or
jns
and
add
pop
xor
int
divb
imul
add
xchg
pop
mov
ds
into
jmp
arpl
dec
add
gs
fldl
fs
data16
xchg
pushf
pop
int
ljmp
and
fs
mov
sbb
mov
xchg
lret
es
add
mov
xor
xchg
xlat
push
enter
bound
decb
dec
filds
push
aam
mov
jbe
popa
lods
push
inc
hlt
push
fidivs
add
push
in
pusha
jle
es
leave
xor
stc
sarl
sbb
insb
mov
test
fistl
inc
pop
in
or
js
insl
sub
jmp
fadds
cltd
dec
and
adc
adc
sub
mov
jge
mov
addr16
lcall
dec
movsbl
loop
add
shrb
cld
insl
movsb
rorb
push
lret
enter
xchg
loopne
or
dec
and
push
dec
add
mov
pop
pop
dec
mov
cmp
lret
insl
movsb
jecxz
out
decw
sbbb
sbb
mov
adc
and
jb
pop
out
iret
sbb
in
sbb
or
xor
aaa
jecxz
xchg
arpl
sub
cmp
add
sub
loop
or
js
imul
cmp
scas
ficoml
jmp
icebp
mov
rcr
mov
sar
stos
aaa
inc
mov
aad
leave
stos
ljmp
fldcw
jne
or
stos
stos
shlb
int
sub
lock
xchg
or
add
pop
xchg
lea
jle
add
adc
sahf
add
aad
insb
pop
aas
pop
pop
or
daa
xor
std
js
cmp
push
push
sbb
shll
xor
add
dec
popl
testl
nop
cmpsb
jmp
add
cmpsl
cmp
fistl
inc
and
xchg
movl
fistl
push
adcl
lret
push
mov
push
pop
inc
push
or
mov
pop
xchg
jne
shr
movsl
sbb
push
cltd
xchg
fcomp
push
mov
pop
cmpl
cmp
xor
insb
in
jg
movsb
adc
mov
scas
mov
lock
xor
mov
xchg
repz
aad
push
lea
pop
enter
enter
sarb
pop
in
sbb
pop
scas
jp
mov
lock
stos
test
mov
or
push
sbb
mov
mov
inc
out
add
popl
clc
jge
imul
data16
pop
lret
cmpl
sbb
jl
clc
jbe
xor
xchg
cwtl
int
rolb
leave
popf
test
mov
cmp
jae
aam
add
es
cli
rclb
adc
mov
gs
and
sbb
in
add
or
lahf
xor
sub
xchg
pop
lods
stc
jns
nop
push
pop
mov
add
jb
aas
xchg
inc
ds
dec
pop
mov
pushl
lcall
or
sub
inc
mov
in
jo
mov
jmp
popa
fldt
add
aas
and
add
xlat
repnz
into
gs
add
add
shr
inc
loopne
int
mov
xchg
addr16
call
ljmp
push
pop
decb
iret
lock
test
mov
loope
ljmp
sub
mov
fnstenv
enter
int
fisttpl
clc
sti
dec
call
popf
push
mov
pusha
mov
and
jecxz
std
pop
inc
stc
je
push
mov
pushf
imul
sbb
cli
fwait
mov
sbb
or
imul
pop
jne
aad
mov
sahf
loopne
cli
pop
mov
jle
shlb
fwait
int
push
sbb
pop
or
jae
sub
adc
fildl
in
push
jl
sub
add
jle
mov
push
jp
cmp
cmp
push
dec
mov
or
xchg
xchg
cld
enter
les
not
das
add
and
std
loop
out
or
add
scas
stos
aad
xchg
push
nop
gs
aaa
pop
xchg
lds
inc
shlb
rolb
mov
fldl
in
mov
loopne
lret
xor
or
movsl
push
out
inc
push
in
jecxz
or
and
sahf
lahf
inc
and
pop
mov
enter
inc
enter
outsb
out
mov
paddd
fwait
dec
or
adc
pop
out
jno
and
jnp
xchg
scas
orl
sbb
cmpsl
pop
mov
lods
cmpsl
xor
pop
cld
scas
shr
mov
arpl
jle
xorl
push
cs
loop
lea
ret
dec
pop
arpl
xor
jnp
push
test
dec
mov
add
cmp
bound
jp
iret
lea
outsb
pushf
mov
push
mov
sub
mov
mov
push
loope
cmpps
das
inc
mov
movsl
mov
mov
in
fnstsw
std
push
pop
ss
adc
mov
adc
cmp
in
call
addl
xchg
scas
jbe
jg
sbb
or
repnz
xchg
test
and
adc
leave
mov
inc
dec
add
faddl
mov
push
mov
jne
push
std
pop
in
rdmsr
jnp
push
xlat
cli
jne
jb
pop
dec
stos
scas
movsl
jecxz
or
or
sub
and
cmp
sbb
or
pusha
outsb
adc
sbbb
pop
jg
adc
and
xchg
xor
or
push
setbe
lcall
addb
dec
mull
adc
jnp
bound
jg
xor
idivb
jg
iret
xchg
xlat
ljmp
jmp
cmp
movnti
pop
and
repnz
adc
mov
in
jg
std
jmp
xchg
jmp
incb
fwait
and
or
insl
xor
and
cmp
lock
add
scas
test
xchg
das
push
pop
inc
mov
jae
addl
sbbl
pop
xchg
rclb
mov
test
jne
jbe
push
xchg
popf
xchg
cltd
out
adc
mov
imul
pop
push
daa
rolb
sbb
or
les
xor
out
sahf
fnsave
iret
jnp
mov
flds
dec
cmp
xchg
jmp
cmp
add
jnp
scas
push
idivl
mov
mov
mov
jg
lock
lods
dec
cmp
lret
push
adc
cwtl
les
pop
ret
jge
and
mov
jnp
mov
aaa
pop
repnz
xor
cld
pop
xor
cmpsl
adc
ret
pop
cmc
out
sbb
fsts
dec
push
mov
outsl
pusha
stos
cli
and
jle
cwtl
pop
or
jmp
data16
inc
rorb
inc
inc
xor
in
mov
sbbb
dec
pop
decl
adc
call
xor
cmp
jae
rorl
test
xor
insb
addr16
jge
movsb
pushf
jg
push
or
add
int
stos
and
mov
in
test
xor
xchg
stos
sub
cmpsl
or
sub
lods
mov
shlb
add
sbb
xor
jl
mov
ret
rorb
dec
push
mov
rcrb
cmp
inc
iret
adc
loope
addr16
cmp
dec
xor
xchg
cltd
mov
push
inc
fldcw
adc
xchg
lea
sbb
or
mov
pop
fs
pop
push
mov
in
or
lods
into
bound
push
xchg
or
das
dec
rcl
stc
addb
jp
dec
or
or
jb
fsts
push
fcompl
jp
test
shlb
push
dec
in
cmc
dec
cmpsl
and
mov
mov
iret
insb
insb
push
aam
inc
bound
enter
push
and
mov
and
les
lock
cmp
inc
and
xchg
sub
imul
mov
aam
bound
dec
pushf
mov
cld
mov
lea
clc
push
and
dec
cmc
imul
sbb
sbb
sub
call
pop
lahf
mov
punpckhwd
test
or
xor
stos
and
insl
fidivrs
rcl
jg
xchg
mov
mov
ljmp
cwtl
inc
jae
ret
adc
pop
icebp
pushf
mull
mov
fnstcw
pop
stos
jns
push
sahf
rclb
loop
insb
nop
in
mov
sbb
mov
push
fisubrs
rcrl
inc
push
mov
scas
or
ret
push
push
sbb
sbbl
xchg
cmpsb
in
mov
fldcw
arpl
cwtl
xchg
into
scas
xchg
pusha
xchg
lods
test
ss
and
outsl
sub
fisubrl
cs
push
movsl
cmp
push
mov
repnz
and
popa
lea
xorl
mov
insl
xor
adc
push
jmp
and
stos
das
mov
test
test
mov
test
xchg
xchg
popf
pop
les
dec
inc
push
push
aam
ljmp
test
test
xor
aam
movsl
mov
aam
push
cmp
sbb
test
sarb
sub
pushf
lcall
adc
scas
dec
loopne
mov
insl
adc
or
inc
add
insb
je
xor
lea
xor
jnp
out
inc
xor
call
test
adcl
xorb
mov
xchg
std
cmc
pop
dec
mov
lock
mov
fisttps
arpl
jno
fsts
icebp
pop
adc
roll
pushf
roll
sti
outsb
mov
mov
lret
test
cmp
rorb
sti
inc
mov
sub
mov
jns
lret
sbb
stos
fwait
pop
add
sti
add
xchg
repz
mov
sar
pop
or
iret
inc
jae
in
test
jecxz
les
add
insl
and
jg
add
mov
nop
daa
insb
addr16
int
repz
insl
cmp
movsl
ret
lock
add
mov
add
dec
sub
shll
orb
xor
das
mov
cmc
das
mov
daa
dec
jecxz
mov
add
mov
sarb
jno
or
cmp
inc
faddl
mov
psrld
xchg
popf
sbbl
xchg
out
xchg
or
enter
mov
jp
dec
ficomps
mov
or
mov
insl
push
adc
adc
pop
nop
push
lret
aad
pop
aaa
xor
dec
sub
jb
ds
cmp
adc
or
stc
shlb
adc
xchg
cmp
cli
ljmp
xchg
pushl
fcomip
sbb
cmp
dec
mov
stc
test
pop
insl
loop
aaa
cmp
dec
out
inc
pop
jecxz
lods
mov
mov
push
or
and
pop
sti
fwait
xor
mov
jl
pop
xchg
pop
xor
and
test
or
gs
repz
mov
lds
xchg
pop
jl
mov
xchg
imulb
push
imul
movsl
jae
dec
shl
mov
jl
mov
push
push
or
inc
inc
jl
sub
sbb
jae
adc
fwait
mov
pop
shll
mov
inc
stos
test
push
or
push
fildl
popw
in
sbb
pop
popf
popf
cld
dec
dec
lods
mov
jl
xchg
xchg
imull
sbb
dec
adc
jp
sub
mov
sub
jmp
cmpsl
mull
and
addb
jb
iret
lock
data16
sub
and
or
mov
orl
xchg
adc
test
aas
push
jnp
push
dec
cwtl
stos
sub
jbe
inc
stos
pop
sbb
mov
out
adc
cmpsb
mov
inc
or
out
mov
lods
cli
pop
mov
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
jmp
lret
pop
idivb
addr16
push
into
inc
in
jns
add
sahf
jnp
push
inc
sbb
shrl
jo
or
mov
sbb
aam
jnp
push
lods
cmp
pushf
sbb
jp
jne
out
in
or
paddusb
xor
push
in
mov
imul
mov
mov
cs
mov
ret
sub
repz
pop
xchg
mov
lcall
inc
inc
mov
cli
jp
jno
xchg
daa
push
pushf
loopne
mov
mov
test
pop
js
js
mov
jecxz
cli
inc
jecxz,pt
push
adc
xor
lock
push
mov
adc
mov
aam
and
and
jbe
jle
cs
push
ret
xchg
push
sbb
loop
xlat
icebp
or
rcr
aad
aas
sbb
mov
leavew
mov
addr16
mov
xor
fildl
test
mov
daa
xor
jmp
out
fimull
xlat
int
inc
call
ret
pop
cmp
jne
lret
jb
scas
xlat
loop
jb
lea
filds
cmp
lcall
inc
out
xchg
test
dec
or
rcrl
cltd
or
xor
aam
pop
fbld
dec
add
std
enter
cmc
add
mov
pop
mov
js
cmpsb
cmpl
dec
ljmp
adc
test
push
mov
mov
or
popa
push
bnd
or
test
inc
inc
jmp
sub
in
iret
xlat
test
out
xor
fsts
adc
les
enter
repnz
out
ret
push
jl
jb
dec
jge
stos
xchg
sbb
lock
mov
fwait
bound
ret
mov
xchg
xchg
fwait
cmp
dec
xchg
int3
push
out
push
dec
repz
lcall
fadd
aam
or
dec
sbb
ja
adc
inc
scas
pop
imul
ficomps
jns
and
outsl
sub
lea
xchg
pop
int3
ja
call
aas
shl
mov
mov
rolb
jg
jle
mov
leave
cmp
js
into
stos
mov
mov
in
add
cvtpi2ps
imul
loopne
inc
lret
lcall
xor
xor
pop
pusha
enter
mov
inc
das
in
out
push
ljmp
adc
pop
jbe
stc
sbb
ss
lea
mov
mov
sbb
mov
xorl
mov
mov
sub
adc
lds
mov
xchg
push
ret
xor
aad
pushf
pop
inc
lcall
pushf
outsb
add
inc
or
aam
mov
or
ljmp
call
ds
mov
out
test
dec
fcmovnu
pmaddwd
test
xor
pop
push
aaa
and
leave
or
pushf
loope,pn
cwtl
fstps
add
xlat
mov
out
jmp
lods
jb
adc
lret
xor
pop
xchg
lock
inc
jmp
inc
push
adc
jmp
adc
adc
adc
les
or
lds
jge
pusha
loope
stc
daa
hlt
inc
mov
jp
xchg
cltd
and
push
js
hlt
mov
adc
ret
iret
cld
pop
lret
xor
push
addr16
insl
mov
push
in
sbb
fdivs
or
aas
jns
rolb
sar
sub
icebp
sbb
insl
rcrl
fcoml
mull
jle
repnz
imulb
pop
xchg
stos
push
pop
xchg
popa
arpl
fwait
xor
push
cmp
pop
xor
inc
sarl
inc
jnp
dec
notl
mov
add
and
les
jl
cmpb
or
jp
mov
out
roll
xorb
push
ljmp
rolb
push
fidivrl
jl
inc
loope
cmc
int3
loopne
or
mov
imul
imul
je
sahf
ds
jo
add
adc
pop
jg
mov
pop
or
ret
lock
pop
and
fsubl
dec
xchg
in
insl
push
das
daa
mov
lds
imul
test
pop
sbb
and
pop
or
add
adc
fiadds
jl
sbb
xchg
mov
and
lret
cs
jae
mov
fisttps
addr16
lcall
add
pop
in
sbb
mov
fistpl
arpl
cmp
rorl
pop
pop
push
xchg
movsb
popa
mov
pop
aad
imul
jmp
mov
test
dec
lcall
je
sbb
pop
xchg
bound
xlat
xchg
or
push
inc
cmpsl
push
pushf
mov
shrb
sbb
lret
adc
leave
dec
cs
cmp
push
sub
ljmp
sub
dec
ficoml
aas
dec
ss
rclb
mov
mov
int3
faddp
push
fmuls
xchg
mov
inc
cltd
outsb
sti
sbb
in
in
xchg
mov
mov
pop
sahf
mov
loope
leave
jae
mov
jne
iret
jae
xlat
pop
lret
mov
testb
rcrl
sub
stos
dec
enter
jmp
les
cs
pop
pop
jno
xchg
std
aaa
pop
cmc
nop
aad
push
repz
ret
adc
mov
and
fcomps
mov
xchg
sarb
jo
push
mov
test
fs
aad
mov
sbb
inc
fcmovbe
add
jb
andb
mov
add
call
aas
pop
leave
adc
mov
and
or
bswap
adc
mov
mov
push
jle
mov
sti
ljmp
cmp
dec
mov
imul
movsb
gs
stc
stc
in
adc
jnp
mov
mov
popf
add
pop
add
xor
and
xchg
pop
and
fwait
pop
push
jo
mov
mov
pop
test
push
xchg
imul
sbb
scas
subb
add
lea
decb
es
jns
sarl
ret
push
mov
jae
cmp
dec
call
inc
inc
and
adc
push
jg
dec
pop
mov
sbb
jge
inc
lods
push
lods
psrld
dec
cmp
or
test
jle
cli
xchg
int3
js
insl
mov
iret
gs
mov
cli
pop
jno
out
push
ficoms
and
cmp
lret
and
and
xchg
scas
xchg
jge
lret
lahf
inc
icebp
inc
outsb
faddp
lcall
fildl
test
cmp
sub
adc
pop
ficoml
inc
addr16
jo
mov
mov
adc
fnclex
testb
mov
dec
mov
adc
loop
movsl
dec
mov
ds
in
jg
js
mov
cmc
xor
dec
scas
push
int3
pop
cmp
jmp
sti
xor
bswap
int3
aaa
nop
dec
les
test
dec
mov
push
dec
nop
dec
gs
push
cmp
mov
in
rolb
inc
lods
les
cmpsl
addr16
neg
out
lret
dec
fstl
push
loop
cs
dec
out
lret
mov
in
adc
pop
push
inc
loop
into
in
push
lods
rolb
mov
shrb
xor
fmull
sub
sbb
jge
xor
add
jge
stos
pop
or
and
into
setge
jle
popa
pushf
xchg
jo
fistpll
dec
ret
rolb
mov
lods
adc
and
adc
cmpsl
jl
imul
cmp
stos
xchg
or
ficompl
sarb
cmp
jnp
add
mov
mov
push
fxch
mov
mov
and
jecxz
int3
lahf
pop
mov
fucomp
xchg
and
nop
push
push
jne,pn
fistps
or
jb
mov
test
lock
loopne
rorb
scas
adc
mov
sahf
fwait
mov
outsb
stc
loopne
cmpsb
xor
fwait
xchg
cld
cmp
dec
dec
xor
add
lods
jbe
insb
fsubp
and
or
adc
pop
out
and
jmp
xchg
push
mov
push
xor
es
pop
xor
inc
mov
jae
mov
imul
lods
pusha
cmc
out
xor
and
dec
imul
cwtl
shlb
popa
fisubrs
push
fwait
sub
in
cmp
movsl
and
clc
cmp
in
push
xchg
mov
add
xor
xor
xchg
icebp
mov
xchg
inc
cli
push
inc
es
inc
adc
jmp
jmp
pop
lea
out
out
push
push
cli
push
mov
and
je
mov
sbb
in
or
pop
push
repz
jmp
pop
xchg
sub
adc
iret
mov
imul
sbb
out
sbb
push
call
mov
add
addb
jge
jnp
mov
sub
or
std
and
stc
sbb
push
sarl
imul
dec
scas
mov
add
stc
xchg
aad
sar
and
fidivs
mov
outsl
imul
ja
out
enter
out
stc
lods
mov
movsb
push
adc
xchg
fs
das
in
clc
test
push
xchg
mov
cltd
test
mov
or
aaa
sbb
popf
cltd
outsl
push
addr16
inc
call
jns
jns
loop
ljmpw
test
or
mov
mov
std
pop
fs
ja
sbb
stc
push
jmp
addl
lock
mov
shrb
cmp
scas
pop
mov
lods
leave
cld
std
mull
jg
repnz
push
sbb
frstor
push
unpcklps
fstps
lcall
inc
pop
inc
jne
inc
or
jns
cli
aam
fs
xchg
mov
dec
mov
dec
and
push
pop
cmp
test
xchg
mov
pop
inc
mov
jns
loopne
xchg
fists
outsb
or
mov
notl
movsb
dec
dec
movsl
in
mov
clc
mov
inc
mov
adc
shr
xchg
add
scas
sbb
xchg
push
out
inc
pop
and
lock
call
lods
jecxz
mov
lret
mov
fcmovnb
das
loop
xlat
lods
loop
mov
pop
call
dec
mov
or
ss
ja
inc
lock
scas
popf
sbb
mov
mov
push
test
sbb
adc
dec
mov
test
inc
lret
push
pop
cmp
into
mov
sub
mov
sbbb
jnp
lods
adc
dec
arpl
sahf
mov
pop
lods
dec
lods
cmp
rcll
lcall
push
testb
sub
add
adc
data16
push
repnz
xor
dec
and
insl
in
dec
inc
dec
push
test
sub
scas
dec
xchg
mov
adc
mov
lcall
imul
sbb
push
lock
and
adc
les
inc
cld
aaa
loop
push
bound
add
jne
sbb
call
rolb
jg
adc
enter
pusha
inc
jle
inc
mov
and
jns
dec
lahf
pushf
cmp
cmc
rcr
mov
mov
sbb
pop
jecxz
sub
inc
addr16
mov
repz
jl
mov
dec
jb
ljmp
mov
or
lret
add
in
cs
out
or
iret
lock
nop
dec
in
mov
inc
xor
mov
cmpl
xchg
mov
mov
test
xor
sbb
fucom
lret
sti
inc
add
or
dec
cld
jmp
jnp
add
pushf
scas
test
div
pop
mov
mov
xor
mov
add
nop
daa
xadd
notb
xor
jl
inc
xchg
and
add
mov
sub
mov
movsl
xchg
iret
lds
mov
inc
jg
and
sti
std
mov
lods
test
into
ljmp
mov
mov
add
or
lret
in
adc
cwtl
cmpsl
fs
ljmp
aas
scas
loope
mov
jecxz
outsb
sbbl
out
mov
dec
stos
inc
mov
pop
lea
fs
movsb
xor
sub
addr16
cmpsb
clc
into
cmp
scas
jnp
popa
das
mov
rolb
xor
in
aas
fsubrs
lahf
dec
push
mov
mov
cmp
movsl
lods
mov
mov
loop
and
out
push
cmp
xlat
test
stc
imul
and
mov
mov
push
insl
shlb
in
push
pop
test
adc
jle
and
jnp
movsl
pop
cmp
jecxz
adc
aas
cltd
xchg
push
int
add
add
pusha
mov
cld
fisubrl
je
xlat
cwtl
repz
pop
jbe
jbe
sar
imul
cmp
mov
adc
xchg
lret
or
lcall
rclb
pop
pop
inc
jle
repz
mov
leave
fcomps
and
push
dec
or
sub
imul
gs
enter
adc
stos
push
dec
je
pop
push
dec
mov
inc
loop
push
and
dec
xchg
mov
pop
push
inc
test
push
cmp
loope
mov
ret
sub
push
xchg
fsub
pop
adc
movsb
jle
push
std
sarl
pop
cmp
add
and
lock
sahf
mov
enter
pop
dec
dec
popa
pop
sbb
mov
or
xor
insb
adc
dec
push
repz
stos
sbb
idivb
jge
popf
daa
jbe
ljmp
popf
out
mov
jbe
imul
mov
xor
inc
mov
cmpsb
lock
aam
adc
aaa
mov
cmp
mov
mov
inc
adc
popa
scas
sub
cmpsb
mov
iret
int
inc
dec
pusha
hlt
ds
adc
test
sub
mov
stos
in
std
arpl
testl
dec
and
insb
loope
add
xchg
rcrl
xor
mov
loope
test
cmp
out
push
pushf
cli
inc
cmp
adc
xchg
gs
sbb
stc
sbb
nop
gs
push
jmp
push
mov
add
cmpsb
mov
push
mov
dec
inc
es
das
mov
pop
inc
sbb
clc
lds
pop
arpl
pop
mov
bound
insb
inc
out
test
or
lods
fmuls
mov
mov
mov
in
push
jbe
adc
popf
ljmp
mov
mov
dec
cmp
les
sub
stos
push
cwtl
sbb
ljmp
jbe
cmpl
fstpl
mov
xchg
fwait
mov
add
xchg
sub
jmp
push
and
ja
sub
cli
sbb
scas
push
adc
pop
lods
filds
mov
pop
mov
daa
imul
sahf
sbb
icebp
mov
rorb
das
cmp
popf
repnz
mov
cmp
xlat
jb
sbb
je
in
xor
mov
lods
call
call
test
adc
pop
shrb
movsb
popf
fs
pop
and
adc
inc
mov
dec
dec
mov
mov
xor
out
jne
scas
int3
mov
xorb
into
hlt
mov
lods
adc
jecxz
xchg
inc
roll
pop
push
clc
sarb
stc
adc
cmp
mov
aas
pop
push
pop
dec
std
aad
add
and
xchg
xchg
dec
lea
leave
sbb
mov
daa
or
cmp
ja
nop
jle
data16
fidivrs
mov
inc
loop
push
inc
push
mov
daa
jle
sbb
mov
mov
data16
push
cltd
icebp
push
push
cmc
add
xchg
rorl
xchg
push
push
cld
orb
or
inc
cmp
dec
in
cmp
mov
mov
cwtl
dec
ja
mov
in
stos
sbb
mov
movsl
aas
movb
push
addl
sahf
div
nop
cmp
mov
inc
sub
and
hlt
enter
lahf
imul
add
adc
out
add
xchg
or
test
mov
dec
or
int
jg
cmp
sahf
adc
sub
rolb
cmp
dec
or
outsb
sub
dec
ss
icebp
push
cld
insl
out
inc
adc
test
push
int
push
fstpt
and
add
jge
fdivs
lea
lahf
sti
dec
fcmovbe
jge
icebp
sub
adc
mov
loopne
ja,pn
adc
int
xlat
sub
neg
and
xchg
jnp
xor
jb
cltd
sbb
sbb
data16
shrb
imul
pop
hlt
xor
and
pop
jbe
jg
inc
inc
push
fists
inc
xor
adc
lcall
movaps
inc
out
stos
aaa
mov
pushf
jmp
in
jne
mov
cmp
arpl
mov
loopne
xchg
dec
mov
mov
sti
je
mov
mov
pop
inc
push
ljmp
adc
ljmp
pushl
jb
inc
adc
xchg
shrl
mov
aad
js
mov
repz
pop
pop
push
lea
adc
or
loop
cli
cwtl
pop
mov
mov
cld
sub
sbb
adc
cmc
cmp
test
inc
sbb
ret
popf
shl
or
mov
jne
popa
rclb
xor
sub
popf
orl
nop
sbb
rcrb
dec
dec
shrb
push
adc
jg
lret
shl
pushf
dec
lea
inc
jg
inc
jg
sahf
adcb
movsl
mov
mov
mov
loope
pop
cmc
in
xchg
imul
cmp
mov
push
fstps
xor
ljmp
push
jmp
mov
mov
fistps
cmp
fidivl
pop
jg
stos
push
shrl
jno
cli
lcall
movsl
and
scas
cli
inc
dec
movsl
repz
jmp
adc
outsl
xor
inc
pop
adc
adc
int3
cmp
sbb
or
jecxz
mov
pop
je
jg
rclb
mov
pop
daa
cmp
imull
nop
ret
std
or
add
nop
mov
arpl
inc
mov
aas
aad
sahf
mov
leave
cmp
xor
cmc
rorl
cmp
cmpsb
mov
fisttpl
inc
jp
jl
mov
jns
cmpsl
mov
ss
sub
xchg
add
addr16
insb
push
stos
test
cmp
push
push
vpunpckhwd
adc
add
adc
xchg
cli
clc
mov
xchg
dec
mov
mov
push
mov
mov
mov
stc
cltd
or
add
insl
cmc
loope
aad
mov
mov
inc
ss
xor
cwtl
popa
mov
mov
and
mov
in
lret
aam
insl
inc
rcrl
jbe
mov
jb
lcall
call
add
and
popa
es
fsubs
shr
lods
mov
nop
repnz
lods
les
or
sti
or
in
pop
iret
mov
inc
jmp
add
sbb
fwait
enter
popa
outsl
movsb
jmp
or
imul
ds
add
and
fwait
imul
mov
xchg
data16
sti
and
fs
mov
inc
or
inc
dec
cmpb
hlt
out
cmpl
push
cmp
pop
pop
ret
pop
xor
mov
aas
xchg
movsb
jns
scas
aam
daa
call
mov
lcall
jmp
sub
mov
push
xlat
popa
jns
jl
loopne
js,pn
pop
cltd
cmp
loope
xorl
mov
sbb
push
ror
popf
or
mov
ss
or
push
or
and
cmp
lods
or
sbb
mov
repz
mov
mov
outsb
or
add
xorb
add
inc
mov
mov
pushf
or
in
nop
roll
icebp
and
xchg
jo
mov
int
sbb
mov
call
xchg
sbb
pop
pop
jo
or
int
lret
dec
and
mov
into
jle
stos
mov
sbb
cwtl
rcrb
fstpt
dec
push
pushf
mov
xor
outsb
dec
xchg
pop
lcall
sub
lods
push
push
enter
adc
in
mov
pop
roll
and
xchg
fwait
in
mov
dec
scas
outsl
xor
inc
int3
or
stc
jmp
dec
and
pushf
pop
sub
data16
mov
inc
xor
ret
fists
push
and
or
mov
sub
and
stc
push
call
mov
cli
adc
add
xor
pop
push
lcall
fimuls
adc
cmpl
and
push
stos
cmpsb
adc
mov
in
push
mov
cmp
aam
test
sbb
adcb
repnz
sub
and
out
dec
testl
lock
jmp
dec
mov
xchg
pop
inc
mov
mov
clc
scas
lods
jecxz
fsubrl
xchg
xor
jnp
inc
lock
pop
cli
imul
dec
nop
ret
pushf
clc
pop
jg
xchg
xor
decb
scas
sbb
mov
loope
sbb
daa
dec
testb
xchg
iret
test
popa
fiadds
cltd
scas
pusha
mov
scas
loop
scas
scas
aas
mov
or
mov
lahf
jbe
dec
sub
cwtl
inc
jl
mov
lret
cmp
ret
fcoml
psubusw
xchg
adc
test
adc
jp
dec
insl
xor
mov
fwait
cmp
sub
lret
adc
lea
mov
mov
pop
mov
mov
jno
imul
pop
cmp
es
cmpsl
inc
xor
pop
bound
fldenv
out
lcall
pop
fidivrs
daa
fildll
mov
cld
repnz
shrl
mov
sub
cmpsb
inc
cmpb
pop
sti
out
out
xchg
and
add
push
jb
in
push
pop
addr16
sti
and
gs
int
mov
cmpsb
dec
mov
std
mov
out
mov
negl
test
jg
movsl
repz
int3
pop
scas
inc
mov
adc
xchg
stos
xchg
mov
and
stos
push
or
rorb
push
pop
cmp
lock
dec
inc
rcl
shl
fisttpl
mov
xchg
xor
sub
xor
pop
fstpt
push
test
mov
outsl
sahf
lods
add
jns
jo
jae
mov
dec
fwait
push
cwtl
xorl
adc
pop
inc
daa
scas
mov
adc
push
mov
push
push
hlt
dec
in
add
mov
inc
sub
imul
dec
pop
lahf
fistpll
into
sbb
mov
dec
add
fimuls
mov
jp
mov
jle
andl
popa
fdivs
popa
aad
mov
in
push
lahf
mov
push
inc
sub
aaa
movsl
cs
mov
subb
pop
pop
ret
sub
push
jge
icebp
sbb
ret
add
mov
loope
lret
test
cwtl
mov
cmp
out
push
repnz
jecxz
loope
in
jbe
lret
iret
add
faddl
cmp
test
popa
dec
adc
inc
out
dec
adc
xor
push
sub
repnz
dec
jnp
dec
sahf
jge
mov
mov
ja
es
mov
repnz
ret
mov
notb
mov
add
out
popa
mov
sub
cmp
sub
aam
cmp
inc
cmp
std
fsts
xchg
adc
loope
lret
lret
andb
call
add
cmpsb
sbb
addr16
lret
inc
sbb
lock
mov
xchg
enter
into
fimull
pop
out
not
mov
loope
loopne
in
add
fstl
jno
ror
dec
daa
negl
jle
testl
cli
out
mov
push
shrl
jg
mov
push
and
pop
imul
aaa
leave
call
insl
and
or
xor
int3
mov
dec
mov
std
adc
js
adc
mov
dec
dec
jb
out
inc
add
insl
mov
mov
sbb
or
mov
add
jecxz
dec
leave
lds
rorb
leave
aas
aam
nop
pop
aas
mov
pop
jns
mov
xchg
rcrb
inc
sub
ret
ret
arpl
sbb
pop
xor
je
cmp
cmp
jecxz
sbb
lods
test
loope
dec
shll
mov
je
xchg
pop
mov
gs
lahf
mov
lock
lahf
je
sbb
or
test
aam
out
cltd
nop
xchg
sub
loop
add
fmull
sbb
mov
mov
insw
inc
ja
xchg
push
cmp
mov
mov
sahf
rolb
mov
jnp
loopne
rolb
add
mov
dec
mov
cmpsb
pop
cmp
push
push
lret
mov
mov
call
daa
loop
leave
jp
push
aas
xchg
push
inc
std
andl
xchg
mov
cmp
inc
std
ss
add
les
and
adc
fcoms
jae
mov
int3
mov
cmp
jmp
add
mov
imul
adc
inc
pushf
xchg
inc
cmc
ss
dec
subb
fmull
in
jecxz
push
xchg
pop
call
sbb
xor
dec
jne
push
aam
mov
es
and
ret
mov
cmpsl
cltd
pop
jmp
cltd
jae
inc
inc
jmp
nop
fs
stc
jg
cld
or
cwtl
cmp
inc
mov
add
in
mov
popa
pop
adcl
and
shlb
cmp
scas
ret
mov
hlt
into
push
mov
ret
iret
xchg
pop
xchg
mov
imulb
mov
xchg
aad
fstpl
les
pusha
or
adc
xchg
adc
cld
aam
lahf
cmpsb
out
sti
mov
cmp
mov
call
test
sbb
jg
jle
sbbb
jno
and
sbb
cmpsb
sahf
rcrl
pusha
enter
popa
cmp
or
mov
dec
cmpsl
mov
out
push
adc
inc
push
or
push
leave
aam
cmpsb
cmc
lock
int3
sbb
shr
lods
cmp
pop
and
sub
push
lret
imul
dec
lret
fmull
xchg
pusha
aas
sbb
and
jae
sbb
test
xchg
and
je
xchg
das
sti
mov
xchg
leave
inc
int
fistpl
ficoms
mov
insb
outsl
dec
out
lods
mov
fsubrs
or
ss
movsl
ss
inc
jnp
mov
int
or
call
rcll
fsubrl
lahf
jp
shl
and
nop
and
cld
sbb
loopne
add
sub
ficoml
pusha
and
push
lret
mov
sbb
mov
pop
je
std
negb
cwtl
mov
paddb
mov
push
cmp
adc
cmp
sub
mov
cli
fstps
adc
xor
roll
and
lds
cmp
loopne
sub
shlb
sbb
add
loopne
aas
mov
clc
xchg
add
aad
mov
pop
popf
out
lcall
mov
sbb
cmp
push
fimull
cs
inc
in
xlat
ljmp
mov
das
rolb
xchg
lock
mov
sbb
jecxz
inc
jmp
dec
repz
lods
push
ret
mov
ret
cwtl
mov
push
gs
push
cmp
iret
outsl
and
inc
cmc
faddl
mov
pushf
lcall
outsb
out
std
push
ja
mov
xor
mov
xchg
push
jl
loop
add
mov
nop
jl
fcomi
sbb
sub
aaa
add
fisubrl
add
insb
cli
dec
mov
shrb
outsl
xchg
imul
cmc
add
mov
adc
jo
scas
jo
cld
pusha
lods
ret
dec
stc
mov
mov
push
jae
and
inc
or
add
inc
stos
cmp
popa
sbb
and
orl
sbb
imul
jle
and
mov
ss
aam
movl
add
and
dec
sub
or
shll
in
mov
xor
loop
xchg
sbb
push
add
inc
sti
mov
outsb
pop
std
xchg
and
mov
xchg
cmp
nop
mov
lahf
sbb
movsl
add
pop
cwtl
jno
and
jbe
pop
movsb
xchg
push
sub
and
dec
inc
loop
dec
pushf
mov
out
mov
pop
cmc
add
mov
ror
aam
mov
ds
ss
movsb
loope
sub
push
and
jp
popa
test
fwait
or
lret
push
ror
mov
pusha
xchg
ficoml
inc
sbb
stos
push
adc
adc
sbb
sub
movsl
in
cmp
dec
mov
dec
adc
adc
or
in
xor
fsubrs
stc
stos
out
mov
out
jg
rcrb
ror
jbe
lds
cmpsb
jecxz
rcrb
fcomi
test
in
imul
fs
dec
sbbb
push
arpl
sahf
sbb
stc
popa
sahf
jae
stos
aas
das
sub
js
jne
das
push
or
ret
xor
push
ret
adc
subl
insb
push
loopne
mov
hlt
sub
je
push
jmp
pop
mov
test
in
rcr
outsl
sahf
push
rcll
jge
inc
nop
inc
adc
dec
test
pop
daa
dec
mov
jno
jle
not
aad
into
inc
xlat
insb
pusha
cs
call
push
ds
test
push
loop
data16
and
sbb
inc
insb
inc
das
clc
cltd
imul
out
mov
shl
push
mov
xor
mov
pushf
scas
jge
stos
cmp
push
adc
mov
mov
shlb
je
jns
arpl
inc
sti
sbb
sar
jnp
xchg
push
push
cmp
or
insl
adc
or
daa
lods
mov
hlt
or
jae
mov
dec
cs
pop
fisubl
fisttpl
inc
lret
cwtl
mov
aas
dec
xor
xchg
push
enter
dec
int3
lock
adc
ret
sub
ss
pop
sbb
adc
add
call
mov
fimull
nop
into
add
lock
jo
mov
je
lret
xchg
pop
cmpsl
fidivs
icebp
mov
jp
insl
xchg
jmp
pop
lret
jp
push
mov
dec
push
add
mov
dec
sub
push
jle
and
or
push
ret
les
sbb
push
inc
pop
pop
inc
enter
rorb
mov
xchg
sarl
push
add
in
sahf
push
xchg
stc
push
repz
add
enter
dec
push
pushf
outsl
sbb
inc
rorl
pop
rorb
sti
xor
mov
inc
fdiv
push
dec
jle
cmp
ss
mov
cmpsl
and
inc
aas
cli
push
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
mov
push
movl
push
movl
push
movl
movb
cmp
je
xor
movl
jmp
mov
movl
cmp
jne
mov
push
adcl
push
call
sbbl
test
movl
je
push
andl
push
call
andl
push
subl
lea
adcl
push
xorl
call
add
movl
or
mov
adc
mov
movl
dec
lea
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
push
call
cmpl
jb
mov
adc
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
or
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
sub
xor
addl
mov
orl
add
movl
mov
not
mov
cmp
jne
neg
mov
mov
xorl
mov
xor
addl
add
addl
mov
mov
xor
add
mov
mov
subl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
mov
mov
sbbl
mov
movzwl
sub
mov
mov
mov
mov
addl
mov
subl
mov
movl
mov
add
mov
xor
add
jmp
mov
cmp
jne
mov
cmp
movl
jne
push
xorl
push
call
orl
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
incl
push
call
test
movl
je
sub
mov
sbbl
mov
addl
xor
adcl
lea
push
mov
andl
xor
xorl
lea
push
xor
mov
pushl
xorl
call
xor
xor
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
add
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
adcl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
and
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sbb
mov
mov
mov
mov
decl
sub
xor
movl
mov
lea
movl
mov
lea
movl
mov
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
sbbl
push
sbbl
call
orl
test
je
movl
mov
cmp
movl
jne
movl
mov
cmp
jne
addl
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
addl
push
call
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
call
orl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
addl
call
andl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
push
call
subl
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
addl
push
sbbl
push
addl
call
test
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
sbbl
push
orl
push
adcl
call
adcl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
subl
push
push
movl
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
adcl
push
adcl
push
call
subl
test
movl
je
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
push
push
sbbl
call
subl
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
mov
or
movl
sbb
mov
sbb
push
mov
incl
xor
sub
mov
adcl
push
mov
xorl
add
movl
cmp
je
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
xor
or
mov
andl
xor
addl
xor
adcl
add
add
adc
andl
xor
xorl
mov
push
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
adc
xor
xor
cmp
jmp
pop
popf
cwtl
jo
jp
mov
cmp
sub
and
jnp
sahf
jnp
out
into
cmc
mov
inc
sahf
adc
mov
mov
jg
mov
cld
add
inc
mov
movsb
push
sub
fldl
mov
std
cmpsl
mov
xor
out
aad
dec
mov
sbb
enter
push
pop
leave
lods
mov
or
shlb
add
add
xchg
imul
xor
stc
data16
loope
into
jle
mov
int3
je
in
rcr
int3
cmp
cmpsl
daa
xchg
sar
or
push
lea
jmp
stos
mov
scas
orl
call
xlat
add
or
xor
rcrb
mov
xchg
std
cmpsb
fsubs
jo
inc
aad
cmp
or
inc
movsl
mov
cmp
cld
push
sub
dec
loope
lea
repz
loopne
xchg
ret
mov
xchg
sbb
push
and
pushl
int3
lods
mov
sub
pushf
insl
mov
pop
cmp
or
dec
arpl
cmc
lods
pop
divb
orl
cmp
mov
push
ja
enter
pop
jnp
xor
aaa
loop
hlt
orb
jg
arpl
shlb
push
int
std
aaa
outsb
or
add
inc
jae
imul
inc
fs
jns
xchg
in
movsl
lahf
mov
ds
cmpb
jge
sub
pop
or
cli
dec
popf
add
out
stos
insb
jnp
jg
adc
jle
jmp
dec
push
add
xor
dec
push
or
stc
cmp
adc
imul
jno
inc
cmp
add
inc
lock
xchg
sar
das
call
and
push
mov
xchg
pop
mov
les
dec
clc
jle
movsb
mov
xchg
or
mov
fbstp
dec
fsubr
inc
leave
lea
arpl
push
sbb
aam
sti
jecxz
dec
add
inc
inc
fwait
ret
add
cmp
stos
movsl
cmp
xor
mov
add
sub
repz
or
mov
mov
sbb
xor
sub
mov
fistpl
sbb
test
fsubl
in
dec
nop
outsb
insb
xor
xchg
mov
adc
paddusb
dec
fistps
adc
mov
push
in
inc
scas
out
ficoms
inc
imul
out
or
lock
sbb
out
jl
aas
ss
das
mov
inc
cmc
lock
jle
outsb
stos
inc
xor
aaa
mov
clc
in
xchg
out
adc
mov
sub
out
xchg
mov
dec
add
pop
loopne
xchg
mov
add
dec
mov
mov
int
add
insb
stc
test
pushf
cwtl
xlat
xor
fnstenv
in
mov
mov
dec
dec
fadds
stos
bound
adc
push
mov
push
cmp
inc
add
xchg
dec
jo
pop
push
and
jae
scas
fwait
stos
popa
rol
rcrl
nop
xchg
cltd
je
mov
das
cmpsl
dec
sub
cmp
or
fidivrs
pop
das
jmp
dec
push
lods
jl
bound
sub
add
xchg
sbb
lahf
xor
pop
sbb
xchg
jns
xor
or
inc
inc
pop
ljmp
mov
mov
sahf
mov
dec
hlt
adc
pushf
xchg
gs
pop
inc
lods
lahf
cmpsb
ljmpw
test
push
or
les
out
pop
push
leave
mov
or
mov
stos
xchg
lock
fistpll
mov
data16
xchg
dec
scas
fistpll
lods
ret
adc
mov
jmp
stc
adc
push
ficoms
in
and
adc
xor
push
call
scas
mov
or
inc
fcomi
cli
out
push
xor
add
adc
movsl
js
mov
xor
testl
dec
pop
subl
mov
shl
insl
jmp
jno
cmp
dec
push
cmp
cmpsb
jmp
xchg
mov
cmp
fsts
cmp
lock
push
sbb
in
shll
ret
sbb
sbb
xor
movsl
fnsave
int
popf
mov
cs
sbb
notl
add
lods
or
rorl
sub
aam
xor
mov
jno
cld
cmp
jecxz
rcll
add
cmp
add
out
mov
lds
push
and
stos
cmp
pushf
sti
xchg
and
subl
lret
insb
mov
inc
mov
jmp
rclb
test
and
rolb
sub
adc
rcrb
pop
aam
cmp
adcb
in
mov
cli
imul
into
jbe
jge
xchg
or
into
pop
pop
out
push
loope
add
arpl
clc
test
lret
ljmp
sub
test
sti
mov
and
dec
lock
jl
sti
fisttpll
push
mov
fstpt
sub
mov
in
movsl
add
int
scas
pop
and
jge
xor
int3
loop
fs
notl
push
push
mov
xorl
xor
fsubs
aad
lds
loope
mov
scas
jno
inc
xchg
mov
inc
cmpsl
sbb
inc
cli
hlt
movsl
jno
repnz
add
mov
xchg
or
xchg
aas
jmp
mov
mov
jo
leave
sub
imulb
dec
mov
add
inc
inc
jg
pop
sub
lods
pop
inc
enter
stos
int3
or
rcl
adc
mov
into
pop
scas
jno
add
push
mov
mov
push
leave
in
or
pop
adc
and
int
xlat
jne
lds
outsl
xchg
mov
push
xchg
jecxz
inc
repz
fucomi
insl
mov
subl
cld
daa
xcrypt-ofb
cmpsl
sub
sbbb
nop
pop
xchg
loopne
loopne
adc
lahf
fsubs
rorl
and
lock
mov
xor
out
jo
scas
xchg
jge
subl
mov
test
pushf
pop
push
jle
in
push
int
call
adcl
leave
sub
inc
mov
jae
or
mov
add
cmc
xchg
in
mov
push
stc
adc
cmp
mov
fisttpl
push
or
mov
les
mov
cld
mov
mov
adc
rep
icebp
pop
loope
out
sub
add
call
enter
pop
mov
cli
mov
test
cmpl
repnz
xor
aaa
mov
les
mov
xor
push
push
ljmp
fidivrs
out
inc
cmp
mov
adc
loopne
add
outsl
lret
jge
idivl
and
dec
sub
sbb
xor
call
lret
pop
hlt
mov
test
jo
and
or
mov
ljmp
fldenv
add
mov
and
mov
mov
mov
push
sbb
inc
int3
hlt
mov
test
sub
or
push
push
loope
sti
adc
loopne
lret
or
pop
clc
or
cwtl
mov
neg
aaa
adc
sbb
imul
ret
xor
mov
out
rcll
push
mov
push
xchg
test
lds
xchg
pop
outsl
or
aaa
xor
cmp
adc
addr16
or
lret
adc
cmp
inc
sbbb
gs
adc
int3
pop
in
jmp
jge
sbb
sub
push
hlt
jbe
push
adc
sbb
mov
out
xchg
adc
and
and
iret
push
js
push
outsb
adc
orb
push
mov
dec
shrw
mov
or
pop
sub
repz
sub
lods
lcall
sahf
adc
out
mov
push
mov
daa
push
sbb
frstor
iret
mov
xor
jp
scas
push
push
icebp
adc
ss
push
out
into
fbld
fistpll
insb
push
scas
fisttpl
subl
fld
add
dec
mov
into
and
pusha
push
xchg
mov
popa
sahf
daa
jle
xor
add
sbbb
ds
cmpsb
sbb
imul
cmpsb
lcall
aad
addr16
fimull
xor
jp
jne
in
outsl
test
pop
cwtl
mov
cmp
outsb
cmpsl
cli
outsb
cmp
das
sub
sarl
mov
addr16
je
clc
loop
stc
sbb
fsubl
and
push
cmp
sahf
ret
push
push
pop
push
mov
cmp
mov
in
pop
cmp
sbb
mov
mov
ret
adc
inc
adc
inc
insb
out
add
add
rorb
sbb
adc
and
stos
inc
inc
fidivrs
pop
or
outsl
insl
loop
scas
lret
decl
fsin
cmp
lods
pushf
out
or
mov
xchg
loope
mov
dec
sbb
sbb
mov
jbe
mov
cmc
push
popf
arpl
lret
out
sbb
pop
inc
cmp
mov
mov
mov
pop
lea
sub
icebp
subb
scas
jb
fcmovu
push
xchg
mov
lods
mov
mulb
mov
add
add
pop
mov
nop
push
outsl
mov
loop
pop
sub
xor
dec
sub
xchg
sbb
sbb
sahf
cmp
adc
push
data16
mov
and
pushf
adc
jno
fs
mov
pop
mov
mov
ds
jp
sub
into
stos
cmc
pushf
popa
xchg
jmp
in
inc
xor
iret
cli
cltd
mov
push
dec
out
orl
xor
movsb
enter
sbb
xchg
sub
les
adc
lods
push
inc
jmp
and
fwait
out
sbb
ss
daa
dec
inc
dec
inc
in
sub
lods
pop
mov
mov
imul
sarb
or
fldl
sbb
cmp
movsb
js
cwtl
push
in
lret
outsb
add
lahf
inc
push
or
jno
mov
inc
inc
inc
and
inc
movsb
sub
neg
add
ljmp
dec
aas
xchg
dec
arpl
adc
push
stos
hlt
adc
cmp
add
xor
hlt
dec
dec
mov
fists
mov
cli
cmc
mov
sbb
gs
js
add
inc
mov
push
dec
fisubrs
add
mov
mov
lea
leave
jns
sbb
negl
hlt
xor
mov
xchg
call
jle
inc
cwtl
add
das
addb
or
sbb
andps
cmp
andl
out
add
inc
icebp
jae
in
xchg
ja
cli
cmp
sub
jmp
mov
adc
or
fidivs
fdivrl
lods
xlat
ljmp
int
ljmp
ss
cmp
and
xchg
push
jno
jb
aad
out
icebp
inc
in
decb
pop
inc
fiaddl
cmp
jns
enter
lods
dec
adc
pop
aad
sbb
or
lret
xchg
in
xchg
out
sbb
xchg
xchg
fbstp
stc
icebp
pop
imul
decb
test
popf
ljmp
shr
or
inc
gs
mov
mov
jl
cwtl
les
push
sbbl
arpl
fs
mov
lods
out
inc
inc
inc
and
dec
ljmp
sub
xor
xor
aad
inc
pop
lcall
jno
xchg
repz
out
cmc
loope
add
push
ljmp
push
jns
std
into
jecxz
jns
push
xor
ss
xchg
in
outsl
into
xchg
test
fnstsw
mov
mov
jle
inc
sub
aad
adc
mov
adc
pop
jno
aaa
rcl
push
jnp
dec
imul
xchg
subb
cmc
xor
out
pop
ret
sub
stos
mov
mov
push
sbb
mull
aas
mov
aas
mov
dec
pop
repz
lods
and
inc
pop
sub
cmp
loopne
xor
insb
jno
xchg
adc
mov
xchg
scas
out
jle
int
loop
jns
in
cmp
je
mov
iret
sbb
xor
sub
and
mov
bound
out
adcb
pop
mov
scas
jno
scas
cli
lcall
inc
or
ljmp
adc
xchg
pushf
dec
outsl
jecxz
lds
fisubrs
cmc
pop
nop
pop
add
rclb
lea
out
dec
cs
rolb
gs
cmpsb
jp
add
dec
imul
movsb
nop
xchg
dec
or
xlat
mov
sbb
push
out
lods
shr
fwait
jl
es
pusha
enter
mov
add
ret
mov
enter
mov
cwtl
inc
fwait
mov
jge
mov
xor
movsb
bound
dec
mov
mov
mov
lods
and
jg
cltd
and
scas
sbb
mov
xchg
sbb
imul
adc
and
adc
inc
cmp
testl
jmp
push
mov
pushf
pop
incb
jg
xchg
fnstenv
hlt
std
add
adc
mov
repz
xor
or
jge
daa
cltd
push
inc
or
add
pusha
and
sbb
add
adc
inc
cld
mov
test
flds
repnz
xor
insb
gs
in
je
mov
scas
repnz
jecxz
mov
rcrb
inc
mov
add
sbb
push
in
push
cmp
or
mul
jne
sub
push
xchg
xchg
or
ret
fcompl
loop
jb
sbb
int3
sbb
or
inc
xchg
in
or
mov
xor
out
insb
popf
lea
push
rolb
arpl
cmpsl
xor
bound
sbb
in
data16
sbb
push
sub
fistpl
andl
cs
cmc
cld
ja
mov
sub
jge
scas
loopne
jg
inc
or
dec
add
mov
mov
push
push
scas
lret
pushf
xor
push
lea
add
jno
leave
iret
mov
leave
mov
pop
fwait
mov
dec
add
ss
sti
pop
mov
scas
xor
cmp
adc
jmp
rolb
movsl
push
test
inc
bound
into
lea
fldt
ja
pop
mov
aaa
lods
js
jl
in
push
add
fbld
int
pop
out
out
sub
in
shlb
inc
sbb
push
enter
dec
jle
xor
sahf
cltd
inc
jmp
or
imul
in
xor
aam
jae
cld
sub
mov
lock
jl
popf
dec
out
mov
mov
mov
push
push
pop
dec
or
xor
loop
sub
dec
push
sub
mov
mov
mov
scas
xchg
mull
jp
inc
ljmp
inc
push
adc
jp
rorb
in
ds
imul
xchg
mov
push
mov
cmpb
xchg
lea
xor
stos
je
out
sub
dec
push
pop
mov
leave
and
lds
xchg
stc
sbb
or
ja,pt
scas
es
mov
pop
xchg
xlat
push
or
outsl
add
push
and
insb
sbb
pop
sub
dec
jecxz
xor
xlat
es
xchg
xor
sub
lea
xlat
test
inc
pop
out
in
test
pop
scas
adc
inc
cltd
cmpsl
popa
dec
stos
or
pop
pop
pop
outsl
pop
arpl
fisubl
fstpt
int3
test
loope
inc
or
cwtl
jmp
in
fmull
cwtl
out
ja
inc
loopne
jbe
cli
cld
adc
sti
sarl
push
repz
enter
icebp
flds
inc
mov
jecxz
into
jb
in
adcl
leave
test
negl
jge
sub
repnz
fidivl
movsl
shrb
out
add
negb
sub
aad
cmp
aas
xlat
sar
and
jo
sbb
xchg
xchg
ret
push
mov
out
add
mov
add
aaa
movsb
adc
lret
rorl
lock
cli
adc
inc
outsb
insl
cmc
mov
cltd
loopne
inc
xchg
and
nop
add
jb
pop
sbb
sbb
mov
mov
out
std
out
mov
shll
mov
inc
xchg
dec
mov
int
inc
sarb
dec
and
cmc
add
fldz
jnp
mov
mov
ss
ljmp
sub
cmp
repnz
dec
jo
add
xchg
jb
push
imul
xor
in
mov
push
loop
clc
inc
and
loope
add
mov
call
fs
add
jmp
les
sbb
dec
repnz
sbb
in
cmp
mov
and
shrb
vmwrite
lds
into
and
js
mov
fisubl
or
movsl
stc
rcr
xor
mov
out
movsl
in
mov
lods
xor
jne
aam
xchg
inc
inc
shr
mov
ljmp
lock
pop
icebp
rorb
pusha
outsb
dec
das
std
in
dec
mov
scas
xor
sub
lods
inc
mov
cld
sub
repnz
mov
js
pop
cwtl
loopne
inc
mov
dec
sbb
outsb
adc
inc
xchg
imul
mov
test
xchg
push
dec
push
add
lea
pop
push
int3
xor
test
xlat
popf
add
mov
adc
pop
xor
cld
lods
push
dec
xchg
ds
adc
push
push
xor
push
mov
jg
dec
mov
in
cmpsl
stos
pop
fs
ss
in
and
pop
xchg
das
and
xchg
sti
sbb
or
or
test
inc
ss
flds
loope
pop
imul
adc
dec
xchg
or
repnz
test
mov
stos
mov
mov
out
mov
mov
rclb
mov
shl
subl
int3
push
and
pop
jp
enter
mov
cld
and
ret
orps
or
sub
loope
pop
push
inc
ficomps
jnp
pushf
movsl
leave
loop
out
or
cmpsb
fldenv
xchg
aad
jl
lret
movsb
aad
sbb
cld
stos
cmp
shrb
push
dec
pop
sbb
in
mov
loop
roll
mov
mov
cs
push
sub
pop
sbb
mov
or
cmc
or
pop
sub
sbb
mov
pop
xlat
push
add
push
push
call
cmpsl
cmp
pop
jo
fstpt
out
add
mov
repnz
dec
nop
aas
sbb
jo
inc
dec
out
jl
sub
jnp
lret
sub
or
jo
and
mov
cmpsl
mov
js
pop
mov
sarb
ja
inc
dec
adcl
out
push
ja
mov
test
push
sub
mov
mov
lcall
nop
push
daa
call
loop
mov
xchg
pushf
flds
sub
adc
insl
jae
fiaddl
lahf
popa
mov
ss
mov
out
sub
push
int3
mov
and
test
je
cmp
mov
cld
xor
mov
cmpsb
pop
dec
das
popa
hlt
ficomps
mov
and
fwait
out
aas
repz
cwtl
push
and
adc
push
or
and
repnz
xchg
jg
fadds
ja
pop
dec
inc
aaa
jbe
mov
cwtl
sahf
fiadds
pop
fdivs
shll
sub
into
mov
mov
lret
sbb
inc
mov
cmp
adc
add
fisubl
and
sub
mov
adc
sub
test
shl
adc
bound
lods
loopne
dec
sbb
mov
test
sbb
or
stos
mov
dec
and
imul
xchg
cltd
scas
lds
mov
lods
lcall
push
std
sub
jns
sub
cmc
sti
sbb
repz
push
pop
ja
ja
xor
jmp
js
mov
repnz
fnstenv
inc
gs
mov
sarb
or
rcr
pusha
mov
imul
popf
add
fdiv
cwtl
push
push
imul
imul
adcl
shr
leave
lock
fistl
test
mov
dec
or
jae
add
add
xor
jae
sub
imul
pop
mov
xchg
mov
sub
shll
clc
insl
mov
loope
mov
fisubrl
sti
jae
outsl
ljmp
jge
pushl
mov
loope
lahf
and
test
bnd
mov
loope
dec
and
mov
testl
jl
xor
movsl
imul
xor
loop
cmc
lds
xchg
mov
sbb
fstpl
repz
dec
cmp
push
pusha
jb
dec
push
sbb
pop
xchg
dec
fsubs
jnp
lret
pop
push
out
cmp
adc
pop
sbb
jne
pop
dec
sbb
mov
fldcw
imull
ja
sub
movsl
cmc
aaa
cmp
imul
shll
aas
icebp
gs
std
js
scas
idivl
inc
xor
adc
imul
xor
sbb
dec
popf
jne
push
stos
push
je
cs
repz
cmp
inc
xor
xchg
in
frstor
outsl
nop
sub
movsb
fldl
lock
xor
ss
inc
pushf
cmp
xor
cmp
pop
and
insb
repz
sub
data16
pop
pop
adc
shrb
push
enter
cmpsb
fs
sbb
mov
movlps
jg
icebp
xchg
insb
stc
sbb
sti
and
sub
sti
lods
rcrb
int3
xchg
cld
fstps
cmpsb
push
repnz
sbb
add
pusha
jbe
jo
xor
mov
xchg
flds
lock
in
mov
pop
pop
xor
or
rclb
fimuls
mov
cmp
sub
es
pop
jb
and
divl
cmp
addl
mul
roll
fwait
mov
mov
ds
fsts
xor
das
ret
pop
nop
push
insb
sti
add
jnp
xchg
lea
or
ficompl
push
add
inc
loopne
inc
add
fs
popa
xor
jge
cmp
aam
outsb
xchg
ffree
mov
sbb
and
shlb
inc
add
repz
dec
enter
adc
stos
xor
sub
jnp
pop
loope
push
cmp
mov
xor
lcall
dec
loope
mov
lret
fldt
pop
int3
jb
or
enter
or
daa
pop
repnz
les
insl
cmp
cmc
xchg
and
mov
mov
ror
add
inc
test
hlt
shll
rolb
mov
inc
dec
mov
mov
xchg
or
cmp
ret
mov
dec
xchg
test
das
out
mov
insl
or
xchg
push
popa
xlat
or
inc
lcall
mov
insl
jnp
jns
fcompl
push
adc
cmp
sub
ss
jno
clc
fildl
add
cld
xor
mov
insl
and
mov
inc
push
push
orb
adc
mov
aad
and
xor
sub
and
mov
jmp
outsl
and
mov
repnz
mov
push
sbb
xchg
add
rcll
scas
lock
xor
insb
or
push
jnp
mov
inc
inc
xchg
push
mov
push
scas
ljmp
out
mov
hlt
imul
pop
add
xor
mov
insb
je
adc
mov
in
ret
dec
xchg
fdivs
mov
in
insb
push
aad
jge
mov
or
mov
outsb
fcom
pop
mov
inc
inc
test
mov
lods
jmp
push
xchg
mov
hlt
in
xor
imul
xlat
cld
out
mov
repnz
adc
fmull
fidivl
cwtl
dec
std
cli
sub
subb
stos
cmpsl
cmp
jp
aas
lcall
adc
add
insb
cmp
jmp
sbb
cmp
add
fnstcw
pop
data16
clc
mov
mov
fbstp
hlt
push
jl
or
cmp
sub
data16
mov
inc
lret
mov
pop
jne
out
test
in
and
and
insb
cmp
xlat
pop
lret
jle
xor
add
sub
mov
cwtl
shl
or
mov
adc
test
pop
into
push
idiv
mov
lods
push
mov
call
fcmovbe
dec
out
mov
lods
and
or
pop
lock
insb
xor
jl
ljmp
loope
fsub
mov
cmp
iret
push
xor
sub
scas
addr16
mov
andb
pop
sbb
les
fbstp
pushf
push
adc
push
pushf
mul
jl
enter
cltd
pop
adc
bound
sub
shll
out
cld
xchg
sbb
jb
movsb
push
test
or
dec
xchg
or
rolb
xchg
scas
shrb
cltd
jl
xchg
int3
lcall
mov
adc
incb
pop
push
xor
sbb
push
mov
jne
mov
sbb
mov
jge
scas
mov
out
bound
clc
in
addr16
jae
imul
je
dec
jecxz
insl
ret
or
lock
jno
rcll
fcomip
int
clc
sbbb
in
cmp
ja
movsb
xchg
fbld
dec
or
jne
cmp
lcall
pop
and
adc
pop
mov
mov
xor
jae
jl
mov
mov
mov
xchg
sbb
xor
mov
out
daa
inc
jmp
call
sbb
lods
jg
adc
outsl
outsb
cmpsl
mov
lahf
out
test
cltd
dec
int
es
pusha
into
jae
inc
paddb
sbb
and
in
fisttpl
push
int
icebp
or
pop
int3
mov
mov
divb
ret
xchg
lahf
and
mov
movb
xor
push
shl
xor
cmp
mov
adc
add
push
mov
pop
xchg
jae
and
gs
push
adc
mov
mov
rcrl
or
mov
test
test
test
cmpsl
and
pop
in
lods
jge
xchg
push
mov
daa
mov
pop
lock
pushl
mov
mov
pop
adc
push
sbb
xchg
pop
test
jne
test
mov
cmp
jp
rcr
xor
das
out
adc
iret
mov
stos
and
rcrl
pop
mov
out
mov
dec
xchg
mov
xor
adc
icebp
cmpsb
addr16
loopne
lds
push
mov
daa
into
leave
xchg
icebp
aaa
sarl
mov
mov
incb
mov
mov
call
fldt
adc
sbbb
xchg
jg
jne
sti
stc
jno
pop
or
xor
lods
lcall
in
xor
js
daa
pop
sbb
arpl
outsb
xorl
lea
cltd
cli
dec
xor
mov
mov
inc
fwait
shrb
dec
out
scas
test
inc
jmp
or
jns
push
xchg
push
adc
push
cmp
iret
or
cli
cs
pop
and
mov
inc
punpcklwd
add
shl
dec
mov
ret
mov
add
cmc
in
adc
vsubps
add
sub
cmp
leave
pop
fisubs
fnstsw
mov
xor
add
ljmp
loopne
ret
imul
imul
lahf
and
cmp
inc
int3
cmp
lock
sbb
repnz
mov
push
pop
fsub
sbb
xor
ss
roll
sarl
sbb
imul
cmp
push
and
pop
push
xor
and
stc
or
idiv
pushf
mov
in
xchg
pop
cmpsb
insb
stc
and
jne
fisubs
mov
insb
xchg
sbb
test
aas
pop
pushf
add
out
jmp
pop
iret
pusha
loope
add
mov
frstor
loopne
shll
lods
ret
or
adc
repz
mov
pusha
mov
xor
jo
popf
add
mov
nop
lods
nop
test
sbbb
jp
setbe
insl
dec
mov
pop
cmpsl
fdivrs
pop
pop
jb
bound
mov
pop
inc
mov
lock
jae
and
mov
aad
cli
inc
scas
mov
lds
push
inc
push
push
mov
xor
mov
push
mov
push
shl
nop
mov
cmpsb
icebp
outsl
std
psraw
or
pop
add
popf
jl
fidivs
iret
popf
push
out
mov
jnp
xor
dec
lods
inc
mov
popf
je
lret
inc
and
lods
sbb
ds
ficomps
daa
cmpb
sahf
or
push
mov
loope
cmpsl
mov
aaa
xor
mov
js
mov
bound
sahf
push
sti
push
js
pushf
inc
xchg
inc
sahf
mov
mov
fidivl
and
fmul
adc
outsb
jl
scas
div
loopne
jns
jno
out
push
fwait
xchg
mov
mov
data16
icebp
mov
sub
imul
add
nop
xchg
cs
dec
inc
and
je
fs
insb
je
jnp
push
inc
shrb
movsl
push
dec
notl
sar
jp
popa
push
xor
int3
mov
dec
mov
inc
pop
sbb
divl
test
ret
iret
scas
jne
sub
test
imul
leave
jmp
push
mov
push
stos
lret
adc
fwait
jns
pop
lods
rcl
or
inc
ret
pop
iret
xor
or
clc
mov
gs
out
es
sbb
sti
mov
xchg
stc
cmpsb
mov
cld
jb
sbb
add
or
arpl
jnp
movb
andl
push
fcoms
dec
in
mov
cmp
loop
sar
aam
inc
ror
and
dec
inc
xchg
sbb
sbbl
rcrb
decl
push
and
pop
call
jno
and
ljmp
or
xchg
loope
test
iret
xor
xorl
dec
das
fcomps
xor
and
test
fs
idivl
or
stos
xchg
loop
scas
fnstcw
sub
dec
mov
adc
push
jecxz
xchg
inc
and
cmc
sbb
dec
push
fldenv
adc
fisttpl
push
ror
ret
fs
xchg
pop
cmpsl
cmp
inc
cmpb
loop
pop
adc
add
add
pop
hlt
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
jmp
int
stos
ljmpw
dec
jnp
xor
mull
inc
jl
sbb
pop
pop
sbb
popa
int
pop
jae
shlb
and
shll
dec
dec
cmp
and
inc
insb
movl
xchg
jns
sub
dec
push
stc
xor
jp
dec
inc
mov
inc
pop
jmp
xor
inc
vfnmsub213sd
mov
mov
xor
xchg
jge
mov
sbb
les
sti
cmp
test
or
cmp
cmp
sbb
in
jge
push
pop
pop
or
inc
les
add
in
push
pop
mov
mov
mov
xor
lods
nop
inc
mov
push
xchg
out
and
push
cmp
stos
flds
jae
les
pop
mov
add
mov
inc
push
fldl
sbbl
add
shll
and
les
inc
dec
cltd
ucomiss
push
daa
idiv
lret
add
inc
add
mov
or
mov
aam
mov
and
or
mov
pop
xor
pop
adc
call
es
adc
mov
xchg
insb
jb,pt
pop
push
lret
mov
repz
idivb
sub
pop
pop
inc
pop
mov
in
icebp
mov
out
push
or
fstp
dec
movsb
std
addr16
adc
dec
and
test
push
inc
lock
loop
fimuls
cld
fisubrs
cmp
mov
in
add
enter
sub
or
les
daa
sub
pmaxsw
shl
mov
or
shll
cmp
xor
dec
inc
sarl
nop
loope
jne
mov
or
pop
inc
in
dec
sahf
pop
xor
addl
loopne
lahf
adc
data16
in
mov
jecxz
fmul
inc
cmpl
push
jle
inc
sbb
pop
mov
lods
das
notb
inc
lock
hlt
dec
jne
sub
jge
out
xor
adc
sub
lret
cld
into
cmp
mov
adcl
std
adcl
push
loop
in
pop
aad
sub
iret
jp
jne
push
shl
std
nop
jns
aad
mov
jb
je
xor
fcoml
pop
pop
hlt
dec
sbb
xor
shl
lahf
mov
mov
loopne
movsl
idiv
test
mov
cs
xchg
pop
sub
xchg
and
cmpsb
mov
notb
loop
cmpsl
fistpl
inc
cmp
sub
fisttps
mov
test
test
push
mov
inc
fistpl
mov
dec
adcb
pop
or
stos
dec
movsl
pop
mov
sub
ret
mov
inc
push
push
lret
cmpsb
add
xchg
out
fidivl
adc
sub
sbb
jns
xor
xchg
lds
fs
jns
sbb
inc
ljmp
repnz
mov
xchg
lret
jmp
insl
inc
jl
cld
je
adc
mov
test
or
lods
pusha
adc
and
pop
andl
jnp
jmp
popa
mov
je
add
cmp
push
mov
shrb
fs
jle
fistpll
push
in
in
push
sbb
xchg
jle
aaa
cmpsl
dec
xrelease
dec
sub
mov
movsb
dec
adc
pushf
adc
lock
aam
dec
push
inc
dec
or
lcall
icebp
rorb
dec
scas
js
out
mov
fstps
mov
aad
xchg
sarb
sub
ds
btc
leave
cld
clc
mov
mov
lock
popa
or
mov
in
cwtl
cmp
loopne
pop
dec
mov
mov
xchg
aaa
out
out
sbbb
imul
dec
mov
ficomps
pop
shlb
cmp
mov
adc
mov
dec
pop
pop
mov
movsb
cmp
xchg
inc
test
mov
outsl
cmp
sub
aad
push
ss
inc
ret
mov
js,pt
mov
add
cmc
shlb
and
aad
or
pop
ja
sub
sub
cmp
dec
nop
imul
es
xchg
xor
mov
cs
mov
imul
sbb
cmp
cmpl
mov
jg
mov
jg
int3
sbb
xchg
xchg
outsl
inc
fistl
add
pop
cmp
xchg
out
es
jne
leave
scas
cmpsb
into
or
fldl
cmp
lcall
rcr
bound
xchg
and
xchg
std
xchg
adc
push
out
pop
jp
lahf
out
cmp
or
jne
ret
outsl
cmp
xchg
leave
mov
dec
mov
scas
les
je
lret
mov
roll
pushf
stos
push
sub
sarb
daa
mov
rcl
pop
mov
add
imul
jo
mov
pop
push
cld
enter
inc
ret
lahf
ja
add
adc
in
or
cwtl
lds
adc
ret
mov
push
cmp
mov
jecxz
roll
mov
add
imul
mov
push
rcll
dec
or
jne
mov
push
xlat
or
jg
xlat
mov
inc
xchg
loope
inc
test
hlt
outsb
ret
add
orb
mov
jno
or
pop
pop
sbb
fildll
jnp
jns
mov
in
and
add
ljmp
sarl
mov
inc
ret
and
dec
mov
sbb
pusha
xchg
arpl
cwtl
and
mov
xchg
das
xchg
lea
sub
push
imul
mov
scas
sbb
jecxz
sahf
lret
and
ja
loopne
xlat
cmp
xor
sub
and
cmp
outsl
pusha
sbb
push
daa
ret
push
push
jl
scas
pop
mov
ja
and
test
dec
fidivrl
icebp
rol
sbb
jle
pop
out
sub
lods
inc
xor
ss
mov
cltd
mov
sbb
mull
mov
sub
and
xchg
and
inc
and
sub
xchg
add
imul
cmp
mov
int
mov
das
push
lea
pop
pop
dec
push
mov
fisttps
imul
push
xchg
inc
and
adc
les
insl
in
add
inc
dec
xor
loop
mov
jmp
sub
sub
fs
cwtl
rclb
iret
hlt
push
ror
xchg
xor
int
xor
mov
jge
ret
and
cmpsb
dec
cmc
and
shrb
adc
in
mov
jle
lahf
sbb
repz
out
cmc
sbb
js
or
mov
jge
out
or
lods
ficoml
call
rorl
jb
mov
push
addr16
dec
sub
lcall
test
ja,pt
clc
dec
or
sbb
gs
adc
adc
movsl
mov
jno
test
jmp
aam
daa
out
decl
pop
lret
loopne
sub
adc
shr
inc
data16
mov
cmpsl
loope
cmp
adc
aas
lods
lock
and
daa
mov
fwait
nop
dec
sar
cmp
add
inc
stc
fcmove
out
sub
push
fnstcw
getsec
inc
imul
adc
ss
adc
inc
adc
inc
xchg
and
xchg
dec
out
sbb
or
je
xor
nop
cmc
cmp
fidivrs
adc
add
push
push
inc
xchg
push
data16
daa
cwtl
mov
out
test
pop
inc
fidivrs
cmc
ljmp
adc
mov
fsubrp
shrl
cmpsl
xor
pop
push
sub
cmp
mov
sub
jl
mov
lock
fs
cmp
enter
xor
shr
mov
xor
aad
imul
cmp
out
fwait
pop
or
mov
sbb
fucomip
push
fcmovnb
loopne
cmp
mov
loope
js
add
ja
outsl
add
adc
pop
fdiv
int3
out
cmp
or
subb
jb
cmc
push
fists
or
mov
les
and
or
or
adc
idivb
insl
fidivrl
loope
scas
push
push
arpl
dec
aas
push
xchg
cmp
or
mov
cmp
xchg
fstl
fadd
xchg
stc
ficompl
jne
repz
lret
dec
and
iret
repz
push
std
and
mov
cmp
stos
lods
adc
xchg
leave
pop
inc
sti
daa
sub
popa
xor
dec
cmpsb
mov
das
lods
out
add
es
das
add
cmc
push
sub
shr
and
xchg
icebp
inc
int
sub
aam
ds
in
pop
add
test
add
and
inc
and
lret
pusha
sub
push
jne
je
and
lock
stos
xlat
icebp
mov
pop
sbb
or
inc
mov
ljmp
outsb
sbb
push
clc
fs
cmp
xor
cwtl
push
out
mov
dec
out
lock
fcmovbe
iret
movsl
jle
rcl
inc
sub
ficomps
lret
cmc
hlt
mov
addl
adc
clc
pusha
ljmp
sub
call
out
mov
pop
inc
mov
xor
out
jnp
fnstcw
outsl
adc
rorl
les
cli
ja
mov
dec
sbb
subl
jns
sti
mov
ss
out
adcb
xchg
out
in
cli
js
jp
mov
ficomps
jo
sbb
mull
push
inc
test
push
outsb
stos
addr16
push
cmp
cltd
adc
jg
outsb
nop
sti
cmpsb
aaa
imul
dec
xchg
popl
mov
fnstsw
inc
adc
test
cmp
push
imul
lahf
lahf
sbbl
psraw
stos
lods
and
pop
add
dec
xchg
mov
mov
popf
sbb
das
or
pusha
xchg
repz
pop
xor
push
in
nop
call
fwait
jo
lret
cmp
lret
add
mov
enter
jmp
pop
orb
outsl
cmp
subl
jnp
cltd
in
rolb
pop
and
in
cmp
mov
fstpl
cltd
movsl
pop
outsl
xlat
sarl
pop
out
push
test
inc
and
mov
adc
inc
jle
pop
jp
call
xchg
loop
lret
js
jge
inc
push
or
mov
mov
xchg
mov
xchg
loope
sbb
test
sbb
pop
out
fs
cltd
cmp
jl
ret
mov
push
mov
xlat
clc
xor
inc
jle
cmp
loop
add
pop
jns
or
dec
test
test
mov
lds
adc
adc
in
in
cs
repnz
mov
adc
leave
dec
lods
mov
mov
or
je
sbb
mov
outsl
rolb
jg
xchg
das
sti
dec
inc
jno
test
sbb
out
pop
leave
jg
lahf
or
es
add
and
in
test
call
in
pop
inc
jle
jo
fwait
cltd
out
hlt
es
shl
test
xchg
mov
push
and
out
mov
inc
mov
xchg
fnstenv
movsb
add
ja
sti
idivb
bound
mov
lock
lock
xchg
data16
les
fwait
add
jp
sbb
int3
xchg
push
scas
movsl
or
and
adc
sub
jbe
rcrb
das
movsl
jl
or
or
outsl
dec
dec
imul
mov
add
insb
inc
hlt
js
mov
fcmovb
enter
mov
pop
out
fs
xor
xchg
lret
movsb
gs
xlat
dec
cwtl
fists
mov
pop
cmp
push
popa
xchg
stc
mov
and
sub
popa
retw
mov
lods
mov
push
pop
jge
add
shrl
inc
push
inc
sbb
insl
push
loop
dec
lds
movsl
lds
addr16
pop
mov
sbb
stc
mov
jo
cld
cld
aam
aas
inc
or
jp
in
xor
push
aaa
fcmovne
xchg
loop
lret
out
add
dec
ljmp
add
fwait
jg
jl
aas
cmc
sbb
lods
scas
test
mov
mov
sub
inc
dec
enter
in
jecxz
and
in
adcb
frstor
cmp
stos
xor
adc
lods
fisttps
into
xchg
lock
adc
cwtl
mov
push
mov
pop
xchg
mov
imul
ret
xor
mov
xor
insl
xchg
or
jno
js
push
push
data16
push
push
insb
arpl
pop
push
ret
fildll
push
outsw
jae
fisubrs
push
mov
jae
jb
sub
bound
mov
pop
fistpll
xchg
cmpsl
xchg
push
mov
cmp
aam
push
mov
jmp
sbb
and
sahf
loop
pop
push
xchg
inc
sti
or
hlt
and
push
or
sbb
jae
push
loop
and
sbb
test
cmp
adc
outsb
insl
test
inc
cmpsb
xchg
and
aas
mov
xchg
sbb
dec
adc
ret
ss
pushf
popf
pushl
scas
mov
nop
setne
push
cs
mov
mov
in
xchg
pop
les
adc
test
movsl
rolb
cmpb
inc
repz
push
aaa
sub
lahf
fs
ds
pop
ficomps
repz
popa
loop
xchg
adc
hlt
es
mov
lcall
push
xchg
in
dec
int
cmp
or
push
es
out
jne
jno
cmp
imul
mov
std
lret
cmp
dec
mov
and
insl
in
aam
or
in
je
out
cs
negl
fstpt
push
push
push
cmp
and
jnp
arpl
pop
arpl
out
or
test
sub
mov
loopne
mov
je
sbb
push
jns
inc
jecxz
mov
fwait
dec
fiaddl
inc
jns
mov
cmpsb
pop
xchg
clc
mov
or
pop
cli
sbb
xchg
mov
cmp
cli
mov
call
mov
outsl
pop
xor
sti
push
fcoms
push
popa
dec
stc
and
inc
or
xchg
stc
xor
popa
push
cmpl
mov
movsl
xor
jp
nop
imul
mov
iret
or
or
mov
and
push
out
movsb
mov
fstp
outsl
mov
imul
mov
lahf
pop
add
xor
scas
sbb
mov
clc
jle
aam
lds
loope
pusha
cmp
mov
daa
mov
pop
mov
decl
lahf
leave
mov
jp
xchg
jge
lea
xchg
nop
jbe
cmp
dec
out
dec
and
data16
adcb
jbe
shlb
test
mov
pop
xor
pop
in
pop
push
inc
cmp
add
cli
mov
scas
cmp
ret
outsb
daa
in
mov
mov
ljmp
xchg
js
out
cmp
adc
dec
repz
xor
or
adc
pop
jb
nop
int
cmc
push
mov
pop
mov
mov
sub
fisttpll
inc
jns
jg
stc
bound
fimull
lea
mov
xchg
addr16
push
sbb
test
movsl
cwtl
add
incb
jb
mov
cmp
imul
mov
inc
cmp
jecxz
xchg
pop
cmpsl
sbb
jp
std
mov
iret
sbb
inc
inc
rolb
adc
rcll
std
mov
shrl
sub
adc
mov
push
imul
add
nop
ljmp
ret
arpl
push
bound
rorl
jmp
js
inc
in
pop
lock
sbb
repz
cltd
push
daa
push
imul
in
and
mov
mov
inc
psadbw
pop
in
movsb
std
add
jl
inc
aaa
aad
and
aas
xchg
sbb
clc
pop
jae
sub
lahf
aas
sti
push
mov
jmp
cs
test
gs
lock
aas
jae
es
inc
inc
pop
xchg
movsl
repnz
xchg
insl
imul
mov
ret
push
xchg
aad
rol
and
push
mov
pop
test
fmulp
cltd
fcoms
mov
mov
pop
inc
mov
xorl
and
inc
pop
or
fisttpl
leave
into
jns
int3
mov
orb
sarl
lahf
test
out
jmp
aad
cs
std
in
jb
aam
mov
xchg
imul
sub
enter
mov
xchg
and
push
and
inc
cmp
mov
nop
sub
stos
ljmp
aam
mov
mov
addr16
push
orl
pop
sub
or
mov
or
push
in
int3
fadds
test
sub
and
movsl
stos
adc
add
mov
test
test
inc
or
ret
aam
aas
jne
scas
sub
cmpsl
jne
int3
jecxz
inc
or
mov
ja
or
ss
push
shufps
fcmovnb
faddl
or
mov
jge
es
leave
daa
inc
pop
int3
mov
and
adc
leave
or
mov
enter
hlt
daa
iret
fildll
xchg
in
jno
clc
mov
lds
mov
aaa
fisttps
and
mov
std
leave
jbe
pop
inc
xchg
js
jne
sti
stos
xchg
mov
cwtl
push
pop
pop
xchg
cmc
jnp
test
mov
jecxz
pushf
jb
or
paddsw
in
jp
daa
insb
fstps
pop
mov
pop
ret
stc
pop
pop
jbe
sbb
lcall
xchg
adc
fstl
xchg
inc
mov
fwait
xor
pop
enter
cmc
sbb
je
lret
xchg
and
jns
lea
cmc
es
test
xor
cmp
fwait
sub
rcll
dec
call
add
push
adc
lret
push
loop,pt
pop
lds
sbb
mov
xchg
push
mov
mov
cli
icebp
ss
mov
popa
push
push
rcll
jmp
lcall
fwait
outsb
push
fcmovnu
loop
leave
es
rep
add
jnp
add
mov
mov
outsb
push
adc
andb
pop
pop
pop
inc
loop
dec
jbe
ja
mov
call
jne
adc
cmp
add
inc
dec
outsb
loope
fisttps
mov
ror
stc
stos
or
cmp
imull
js
xor
mov
lea
cmpsl
mov
ss
sbb
and
and
jo
int
adc
hlt
mov
cmpsb
aaa
xor
mov
subb
loop
ficompl
ljmp
jne
bound
xor
mov
fcmovnb
and
xchg
ficompl
lret
inc
shlb
mov
jmp
outsl
jno
repnz
xor
lods
inc
outsl
ret
push
testb
cltd
xchg
push
inc
cli
dec
sbb
fwait
pop
mov
data16
loop
leave
mov
dec
xchg
aas
xor
cmpb
fs
jns
out
sbb
rcll
mov
mov
pop
pop
bound
mov
cwtl
aad
mov
mov
sbb
xor
mov
jb
dec
fsubrs
xchg
gs
cmc
leave
pop
and
and
mov
dec
mov
push
ficomps
cltd
ret
add
call
and
je
fucomip
and
jno
sbb
cmpsl
cmp
or
dec
stos
fdivrs
jle
call
and
loopne
xchg
std
popf
sub
cmp
jno
mov
xor
push
jns
sbb
cmp
jg
in
bnd
adc
mov
cmpsl
popa
mov
jbe
rol
xchg
rcll
and
sub
insb
repz
repnz
or
pop
dec
sti
xor
cmc
xchg
scas
jns
mov
sar
jle
cmp
adc
or
xchg
popf
adc
mov
out
aaa
jl
out
pop
and
js
pop
aaa
mov
mov
or
sbb
das
push
pop
pop
out
xor
arpl
mov
and
icebp
cmp
cmp
push
cmp
nop
dec
adc
xor
idivl
or
in
lds
cmpsl
out
mov
fisttpl
pop
ja
dec
mov
je
dec
shlb
jne
decb
or
scas
jp
repz
nop
dec
sbb
jbe
mov
inc
int3
inc
mov
arpl
test
jbe
jb
lods
cmp
hlt
ret
test
lcall
jno
xchg
xchg
incb
fcomps
sub
fidivrl
xlat
sbb
xchg
or
pand
movsb
jb
dec
jno
or
popa
push
adc
or
popf
into
jno
fisubs
sbb
test
dec
push
mov
divb
push
cmp
xor
roll
scas
or
sbbl
cli
push
cltd
stos
out
sub
xor
rorb
pop
fucom
pop
xor
fmulp
mov
jnp
adc
add
inc
test
add
adc
into
test
mov
je
xlat
push
loopne
and
fdiv
and
loope
je
push
scas
clc
xchg
jle
movsl
or
sbb
jecxz
lret
jnp
cmp
mov
imul
imul
push
xchg
cwtl
cmp
pop
pop
pop
mov
add
sbb
sarb
xchg
and
xor
sbb
xor
add
push
xor
iret
pop
inc
in
xchg
dec
out
cmp
dec
adc
ss
fstpt
dec
addl
rorl
inc
push
jg
jp
jl
js
xor
lret
jnp
lret
lds
into
lods
inc
add
stos
adc
loop
or
hlt
leave
aad
pushf
enter
push
xlat
and
insl
and
sub
mov
or
scas
sub
outsb
adc
daa
call
add
adc
addr16
mov
fcoms
xor
sahf
jns
outsl
pop
test
jns
pop
mov
enter
movsl
or
inc
sbb
and
outsl
sbb
cmp
inc
cli
aad
fs
subl
push
aaa
xchg
js
pop
data16
dec
mov
into
push
mov
jne
lea
push
aas
movsl
or
stos
xor
cltd
sarl
cmp
mov
jmp
jecxz
push
pop
int
leave
mov
popa
outsl
sub
pop
cli
xchg
dec
xor
mov
dec
clc
pop
and
popa
shrb
inc
into
aaa
into
mov
mov
cmp
loop
leave
aaa
mov
mov
lea
bound
loop
jmp
hlt
push
adc
into
popf
cs
inc
loope
cli
fs
insl
in
add
stos
lret
fldt
mov
bnd
xlat
mov
dec
addr16
jns
mov
ja
das
dec
sahf
movsl
dec
or
xor
shrb
push
gs
imul
pop
dec
in
adc
xchg
mov
pop
or
icebp
in
imul
push
xor
sub
mov
and
sub
jmp
xlat
daa
inc
cmc
inc
xchg
fs
jp
lods
cmp
dec
fldcw
xchg
aad
shll
outsb
inc
xchg
xchg
and
dec
lcall
lods
ss
in
mov
fcoms
inc
rcll
bnd
fsubs
in
mov
sub
js
pop
xor
mov
call
lret
pop
xchg
pop
pop
pop
or
and
icebp
fdivrl
sbb
lods
mov
jns
stos
push
jp
rcr
push
push
mov
sbb
pop
push
or
leave
ret
js
xchg
aad
push
addr16
sti
lret
mov
aaa
sbb
adc
inc
lret
jl
cmp
ljmp
repnz
in
xor
and
sub
or
xor
jecxz
or
xchg
mov
cmp
mov
mov
mov
xchg
sbb
add
mov
dec
ficomps
leave
and
adc
mov
cld
stc
cmp
mov
cmp
fs
ds
mov
dec
loopne
jge
pushf
and
outsb
sbb
mov
cmp
outsl
pop
in
daa
adc
js
insb
cmpsb
mov
jbe
int
jbe
xchg
imull
xchg
sub
clc
lahf
push
xor
call
es
adc
imul
into
icebp
cmp
cmpsl
add
jp
into
add
push
or
daa
pusha
pop
xor
mov
aaa
das
divl
push
repz
xchg
imul
jecxz
push
add
ret
cmp
popa
mov
ret
call
cmp
lret
fidivs
xor
out
sbb
xor
divb
add
mov
outsb
inc
ret
testb
mov
mov
push
dec
repnz
push
sbb
pusha
stos
mov
and
mul
or
mov
lods
and
loopne
pop
jge
imul
or
cs
stos
mov
ljmp
js
outsb
orl
mov
in
ficoml
adc
jle
xor
fiaddl
xor
fucom
push
push
add
add
sbb
sbb
xchg
or
lods
cmpsl
mov
dec
xchg
lea
push
xlat
dec
lcall
mov
fdivs
daa
in
loope
imul
sub
sbb
mov
lret
jno
dec
mov
adc
cltd
mov
ss
push
movsb
mov
xor
lea
cs
push
mov
cltd
test
call
imull
xchg
out
mov
and
test
or
dec
cmp
outsl
out
push
jmp
into
ja
push
xchg
fldln2
dec
sub
lret
lahf
xchg
xchg
inc
mov
mov
aas
out
nop
pop
repz
ja
dec
push
pop
mov
imul
stc
push
insl
outsl
adc
int
shr
inc
push
ljmp
xchg
aad
scas
popl
cmp
out
pop
pop
lret
scas
xor
inc
orl
cltd
ja
sub
dec
or
std
push
inc
nop
push
pop
jbe
push
mov
scas
jp
insl
pop
cmpl
xchg
mov
lret
movsl
jo
xlat
ljmp
push
pop
pop
ret
call
or
les
adc
ljmp
sub
decl
fidivrl
sahf
call
push
mov
imul
or
imul
jle
add
ljmp
xchg
jo
outsl
lea
out
jnp
xor
rcll
movntps
jecxz
xchg
rorl
pop
jmp
jbe
loopne
push
push
sbb
mov
jl
lea
xchg
fsubs
gs
add
pop
mov
fidivrs
sarb
sub
ja
mov
push
ss
jb
aad
in
xorb
flds
imul
xor
inc
inc
dec
hlt
and
scas
shlb
add
dec
xchg
pop
adcb
addl
pop
loop
andl
pop
pop
mov
inc
pop
inc
leave
and
mov
sbb
mov
mov
pop
push
adc
clc
dec
mov
fwait
sbb
mov
out
sahf
sbb
loope
test
fdivrl
lds
out
mov
mov
loope
pop
cmp
mov
fcmovnb
inc
sahf
mov
add
jl
vmwrite
pusha
test
dec
das
add
stos
fwait
and
push
mov
std
sub
mov
clc
mov
andb
enter
lret
out
stos
js
adc
call
gs
test
insl
dec
push
push
jb
mov
out
xchg
test
mov
int
cs
lods
push
rcr
xchg
cs
cli
and
in
mov
pop
dec
sbb
jp
pop
xchg
rcl
shlb
mov
jbe
sbb
iret
sbb
std
fmul
xor
mov
mov
sub
sbb
iret
or
push
cmc
es
loope
push
lcall
sbb
movsl
inc
lock
mov
cmp
pop
dec
or
ja
outsb
ret
lahf
xor
jmp
aam
sub
dec
mov
cmp
push
std
aaa
scas
and
pop
or
jmp
push
mov
repnz
stos
pop
mov
and
cmp
sbb
imul
mov
jg
pop
xor
or
xchg
xchg
pushf
sub
adc
leave
mov
mov
lods
or
lret
mov
adcb
push
imul
ss
xor
aas
hlt
mov
jl
mov
mov
inc
mov
sbb
jg
mov
imul
mov
lcall
in
test
gs
and
in
icebp
xor
movl
sub
pop
out
rorl
jne
mov
rolb
jl
cmp
or
aam
push
mov
pop
jbe
in
inc
mov
inc
sbb
push
repnz
mov
sbb
stos
iret
push
subl
js
or
in
xor
mov
std
into
mov
cs
xlat
mov
mov
add
xchg
cmp
sbb
pusha
jne
and
jo
push
lock
cwtl
jnp
imul
pop
inc
jmp
movsb
inc
or
jmp
cmp
es
scas
je
rcrl
mov
push
in
ljmp
nop
aaa
dec
jecxz
and
js
mov
inc
fwait
xchg
adc
jae
push
mov
inc
or
hlt
fwait
shlb
test
inc
rolb
movsl
push
dec
and
addr16
jae
cwtl
add
xchg
xor
mov
aad
test
xchg
sbb
rolb
mov
je
outsl
dec
mov
out
out
add
and
add
push
hlt
dec
xchg
out
xor
add
jmp
movsb
orl
dec
jecxz
or
mov
push
push
hlt
loopne
es
lods
push
inc
inc
mov
mov
inc
ss
sub
or
lods
aad
mov
mov
in
mov
or
popa
pop
std
add
stos
lods
mov
jae
jo
sub
test
and
mov
leave
xchg
repz
addr16
in
int3
jl
dec
fs
or
sbb
in
pop
cmpsb
jg
sub
or
xor
jae
cltd
cld
pop
xchg
push
mov
cs
daa
dec
jle
sar
je
in
add
call
or
mov
out
jge
xlat
dec
inc
adc
jg,pt
push
aaa
add
outsl
adc
leave
stc
test
aam
lcall
push
cmpsl
add
xor
mov
fistpl
in
add
jno
push
mov
call
ja
fcomp
mov
test
cmpb
mov
cld
jnp
jnp
ljmp
xorb
int
arpl
dec
fdivr
cmp
pop
stos
jns
jg
sub
lcall
cmpb
xchg
add
pop
and
jne
xor
mov
jp
test
pop
nop
ret
rolb
iret
mov
pushl
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
and
movsbl
sub
mov
xor
add
and
sub
mov
subl
xor
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
adc
push
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
xor
add
dec
mov
jmp
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
pushl
push
push
call
jmp
mov
xorl
push
movl
cmpl
je
cmpl
ja
jmp
push
push
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
iret
lods
mov
add
add
add
add
add
loopne
add
loopne
add
add
add
push
push
inc
push
and
pop
inc
cltd
shlb
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
jbe
cli
push
sbb
or
or
cltd
mov
lea
sub
lea
lods
sarb
mov
sarb
mov
mov
mov
sbb
or
push
cld
mov
mov
stos
lods
fistpl
or
mov
mov
mov
mov
mov
sahf
and
shrb
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
