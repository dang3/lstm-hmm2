push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
gs
sbbl
pop
jl
adc
and
popa
pusha
pop
jnp
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
jns
and
adc
dec
push
push
in
pop
sub
sub
repnz
movsl
loopne
mov
shll
in
cmp
cld
jno
sbb
mov
lock
negl
xor
lahf
pop
lods
pop
adc
mov
mov
xchg
push
sbb
cld
push
icebp
cmp
and
mov
mov
inc
cmp
xorl
cli
dec
int
adc
cmpsl
mov
jecxz
imul
inc
lahf
stos
sbb
push
dec
and
xor
sbb
ds
xchg
iret
inc
jmp
arpl
xchg
push
mov
mov
pop
cmp
mov
jl
iret
loop
lods
adc
jl
ret
fwait
fs
shr
loop
dec
test
xchg
shr
clc
push
imul
subb
mov
push
frstor
cli
pop
add
or
data16
aam
add
push
orl
pop
imul
ffree
mov
adc
ret
sbb
scas
out
and
cmpsl
jecxz
jecxz
xchg
inc
xchg
inc
sbbl
inc
xchg
popa
ret
pop
repnz
fcmovnbe
cmp
arpl
pop
xchg
scas
cmovo
xchg
mov
je
pop
mov
or
clc
call
push
pop
push
jnp
pop
mov
in
ror
int
xor
bound
jno
xor
xchg
loope
cli
sbb
add
add
hlt
jle
test
jne
adc
jl
adc
pushf
sbb
test
inc
frstor
repnz
push
mov
sub
pop
outsl
jecxz
inc
inc
mov
out
pop
rorl
pop
in
cmpb
stos
fisubs
jns
in
daa
lea
mov
mov
popf
out
out
lea
es
mov
lds
pop
pop
dec
shlb
push
mov
ss
push
pop
xor
mov
fistl
lock
movsl
addb
inc
imul
rcrl
dec
cwtl
lcall
pop
pushf
adc
out
inc
add
inc
icebp
test
adc
insl
and
mov
mov
dec
ljmp
sbb
pop
lea
adc
cmpsb
push
out
mov
add
mov
out
push
push
jp
cld
xchg
popf
push
inc
out
std
sbb
outsb
mov
int
adc
clc
xchg
push
cltd
jmp
mov
lods
lods
jg
jb
pop
nop
ljmp
pop
aam
loop
lock
ret
enter
je
stos
and
pop
lds
push
movsl
jb
push
or
lock
jne
aas
lea
das
loope
mov
push
js
jecxz
add
pop
cld
xchg
cmp
popa
jne
push
pop
inc
hlt
sub
or
mov
push
movsb
test
lret
in
in
xor
xchg
add
ficompl
or
es
dec
or
mov
or
add
inc
xchg
adc
lahf
pop
pop
jle
cmp
xor
xor
jp
out
add
dec
mov
push
jge
cmc
test
test
movsb
adc
pop
pusha
jle
or
fadds
fwait
mov
mov
in
mov
jl
rorb
rcr
adc
cmpsl
hlt
sub
scas
ret
mov
outsb
or
sti
xchg
adcb
adcl
push
dec
xchg
cli
sbb
sub
add
notb
sub
push
and
pop
jg
jne
mov
fnsave
mov
addb
mov
mov
rcrb
inc
pop
xchg
test
add
es
mov
xor
mov
cmp
movsb
xchg
pusha
push
mov
aas
pop
sbb
test
pop
jmp
popa
scas
push
xchg
rcrb
sub
inc
or
test
std
push
icebp
lock
aas
rorl
lahf
loope
jnp
sub
mov
sahf
pop
add
xchg
push
rcl
loope
aas
and
orl
movsl
ret
daa
adc
popf
ss
ret
roll
or
dec
jno
cltd
stos
xor
pop
aas
xlat
lcall
lret
outsb
pop
dec
mov
pop
dec
or
in
lods
push
sub
lcall
dec
inc
push
leave
mov
pop
push
jecxz
shlb
push
pushf
sbb
or
outsl
xchg
push
mov
test
cli
xchg
dec
int
and
pop
mov
mov
pop
mov
test
push
jb
jb
in
dec
imul
stos
je
and
sbb
cwtl
out
xor
push
jno
in
or
in
adc
inc
inc
scas
or
jecxz
pop
cmpsl
adc
scas
xlat
fisubrl
cmpl
fs
xlat
cmp
aad
add
jle
out
fsubl
lods
dec
fs
and
jo
imul
adc
stos
sub
imul
jne
mov
inc
inc
jl
mov
movsb
inc
test
adc
nop
leave
scas
incb
lods
scas
cmp
aad
add
mov
cmc
or
jecxz
out
rcr
add
push
jecxz
xor
mov
cmp
adc
add
jge
mov
push
mov
cmp
out
and
cmpsb
pop
dec
lea
in
mov
pop
cmp
jmp
clc
mov
pop
xor
xchg
inc
push
rorb
cs
xor
mov
cmp
cwtl
int3
in
movsb
lods
cs
rcl
rclb
inc
leave
or
lods
hlt
dec
lret
and
pop
or
and
xlat
stos
mul
lods
cmp
orl
andl
cmp
or
shlb
xor
pop
lock
mov
jns
inc
xchg
and
jae
popf
mov
xchg
pop
rcrl
lahf
dec
push
in
cmp
mov
mov
cmp
mov
les
cmp
stc
lods
mov
or
jb
adc
inc
jae
sub
jecxz
mov
xchg
fldl
sbb
fdivrp
push
xchg
dec
test
pop
hlt
andb
push
shll
mov
movsb
cmpsl
js
push
jnp
jnp
lret
jae
or
inc
lock
fisubrs
mov
lcall
mov
sub
cltd
mov
inc
sbb
repz
mov
daa
shll
test
xchg
das
mov
jge
add
inc
mov
je
mov
mov
jge
push
dec
or
push
mov
dec
pop
fstl
cmp
mov
mov
xorb
jno
adc
pop
push
lods
pushf
xchg
enter
push
mov
push
std
out
cmp
imul
xorb
xchg
inc
cmpsb
cmp
aas
inc
je
insl
inc
in
pop
es
sub
pop
cmpsl
xor
in
popf
imulb
push
pminsw
pop
inc
xchg
lock
push
int
lret
orl
out
jle
or
pop
psadbw
frstor
js
data16
sub
dec
mov
add
test
inc
fidivs
aaa
movsl
adcb
xchg
cmp
hlt
xchg
pop
mov
jb
lret
and
mov
inc
shll
scas
or
hlt
cli
sub
pop
or
das
jle
loopne
mov
sbb
jbe
mov
cmpb
dec
loopne
lret
test
mov
jae
pop
xchg
pop
in
push
lea
js
test
jp
std
mov
jns
dec
cmpsb
cwtl
sbb
push
loop
xchg
cld
test
loop
push
mov
test
xlat
les
add
fistpll
fs
test
push
loopne
cmpl
cmp
fnstcw
test
jmp
test
roll
xchg
dec
mov
addr16
outsl
sub
nop
and
xchg
iret
movl
xor
les
movsl
mov
adc
popf
dec
movsb
test
into
mov
into
push
cwtl
xor
push
test
xchg
mov
xchg
ret
popf
movsl
mov
cld
pop
stc
lcall
icebp
or
adc
and
rol
lcall
jbe
rolb
mov
xchg
mov
shl
stos
mov
aas
sbb
inc
jmp
dec
cmp
fistps
fnstsw
jb
mov
jo
xor
and
outsl
mov
pop
imul
or
in
cltd
aam
mov
cmp
nop
push
xchg
inc
jne
arpl
in
lea
fistpll
inc
xchg
leave
pop
mov
notl
sahf
pusha
mov
cmp
dec
js
not
fisubl
jo
lods
addr16
in
mov
mov
outsb
and
out
imul
xor
and
push
xchg
xchg
in
mov
add
mov
push
adc
push
push
inc
test
movsb
cmp
push
push
xchg
mov
cs
lods
mov
mov
add
sti
jnp
inc
push
xlat
aas
movsb
in
rcrb
adc
stos
scas
mov
lods
clc
lret
loop
in
cltd
mov
and
sbb
loopne
xchg
sbb
dec
aam
bound
adc
in
enter
and
in
push
push
loope
mov
mov
nop
lret
int
mov
or
clc
stos
xor
in
sub
ret
xor
inc
xchg
and
xor
aas
rolb
mov
mov
or
pop
adc
sbb
mov
cmp
jg
addb
icebp
xchg
movsb
sbb
es
aas
cli
xchg
scas
fisttpll
dec
mov
cmpsb
xchg
xchg
jae
mov
inc
out
enter
sti
xor
xchg
fs
jmp
testl
xchg
inc
pop
stos
fnstsw
sub
addr16
std
roll
add
cmp
cmpsl
cmp
sbb
sub
lret
movsb
loope
bound
adc
in
inc
dec
aam
mov
adc
inc
xor
sub
ljmp
inc
pop
test
mov
out
mov
xorb
pop
cmp
adc
rol
leave
lods
xor
test
mov
push
outsb
add
add
sbb
mov
rorl
mov
add
loope
stc
pop
inc
fisttpll
adcb
sarb
xchg
rorl
ficompl
inc
inc
and
ds
stc
call
sub
outsb
into
jae
adc
add
jle
es
cs
dec
jno
loop
xchg
pop
mov
mov
sbb
lcall
fimull
movsb
mov
sub
push
xor
jo
inc
mov
jae
adc
repz
aaa
ljmp
mov
leave
in
mov
xchg
xchg
lods
pop
std
inc
mov
xchg
imul
jno
cwtl
and
and
cmc
adc
mov
cmpsl
sub
repnz
shl
outsl
fidivrl
and
push
loopne
jae
inc
loopne
adc
mov
movsb
call
enter
mov
leave
jns
insb
adc
mov
xchg
lret
xor
imul
sub
aas
ret
jmp
lret
into
fwait
aaa
xchg
gs
mov
jge
std
jecxz
push
mov
movsb
dec
hlt
push
jae
push
cmp
pop
daa
clc
sbb
cmovbe
in
cmp
int
stc
dec
xchg
outsb
idiv
in
fsubrs
sbb
and
sub
loope
addr16
data16
mov
sub
xor
mov
aad
add
lods
cmp
cmp
insb
test
out
mov
aam
inc
mov
les
rclb
xchg
sub
cltd
aad
mov
dec
jl
push
aam
dec
push
scas
jmp
sbb
pop
xlat
inc
mov
pop
sbb
dec
out
mov
ljmp
mov
jmp
into
clc
sti
lods
mov
cmp
adc
push
dec
pop
pusha
mov
jne
test
leave
cmp
adc
leave
mov
lds
nop
push
pop
mov
icebp
push
movsb
int3
sub
es
scas
fsub
gs
add
mov
xor
int3
fwait
inc
mov
ret
loope
adc
pop
js
pop
shlb
les
sti
lcall
outsb
pop
lea
into
pop
dec
jl
cmp
dec
stos
or
scas
pop
addr16
test
xchg
dec
fiaddl
rorl
and
insl
xchg
xor
jmp
cld
dec
add
pop
push
rclb
jnp
lcall
lret
inc
xchg
stc
hlt
loop
shll
adc
dec
mov
xlat
lock
lds
pop
xchg
arpl
mov
jbe
arpl
js
mov
push
lret
repz
jns
xor
sahf
out
movsb
sbb
fcmovu
sub
daa
sub
mov
in
ss
push
outsl
add
dec
jp
test
stos
add
mov
sub
mov
ss
add
fldenv
lahf
imul
insl
fwait
adc
aad
negb
pop
fwait
dec
and
rclb
icebp
sub
lcall
xchg
push
xor
push
out
repz
mov
hlt
movsb
stos
or
fisubrl
in
hlt
push
stc
dec
or
loopne
mov
scas
ret
add
adc
sub
xor
xchg
dec
popa
mov
sub
mov
push
jo
mov
add
sbb
push
hlt
repz
pop
xor
mov
pop
xchg
stos
cmp
dec
push
xchg
xor
and
xchg
jno
stos
mov
stos
xchg
cwtl
mov
inc
jno
imulb
pop
mov
jecxz
xor
loop
sbb
popa
cltd
mov
dec
enter
nop
lods
mov
movsb
dec
popa
imul
sbb
lcall
mov
call
ss
jne
lock
lret
jns
jb
nop
arpl
in
jge
or
jae
adc
movsb
push
pop
and
push
mov
mov
and
outsb
mov
cmp
je
movsb
lods
fmulp
lock
sahf
pop
inc
mov
dec
out
shll
scas
mov
dec
or
xor
imul
frstor
add
ror
sbbb
pop
je
cmpsb
cmpsb
fwait
orl
hlt
pop
insl
out
les
push
es
jae
cmp
jl
loope
push
xlat
push
les
in
jno
rorl
cmp
mov
add
pop
inc
sub
out
dec
inc
dec
jns
or
cmp
data16
sahf
mov
jle
pop
mov
and
pop
arpl
adc
xor
in
cmpsb
lock
mov
and
pusha
jo
cmpb
aaa
xchg
aaa
pushf
mov
js
lcall
dec
out
imul
inc
fnstcw
jno
es
pop
dec
xor
inc
dec
inc
aad
pop
mov
cmc
test
lods
adc
xor
pop
ret
notb
lods
int
sbb
pusha
push
sti
outsl
cmp
lahf
les
repnz
fidivs
inc
add
lahf
testl
test
aad
popf
cmp
repnz
in
cmp
or
add
test
xchg
jns
hlt
cld
divl
inc
mov
addl
mov
rcpps
das
inc
dec
pushf
mov
aaa
pop
pop
nop
fnstenv
pop
and
fistl
out
cmp
sub
stos
test
or
aas
popl
mov
inc
adc
xor
rcrb
mov
xor
sbb
dec
rcll
in
fimull
add
lahf
shld
and
pop
jge
loope
popa
jo
xor
push
sbb
jge
add
add
sbb
add
sub
xchg
mov
stc
cmp
cmp
mov
aam
insl
imul
gs
mov
popf
lock
fcomps
fwait
push
push
mov
in
inc
fstl
pop
push
pop
cmp
fcom
dec
repz
pop
icebp
arpl
sub
cmp
jbe
cmc
push
xchg
add
hlt
addr16
sub
loope
js
mov
pop
xchg
push
mov
push
or
xchg
fisttpll
loop
mov
out
lock
das
movsb
pop
test
mov
pushf
fidivs
push
std
inc
ret
or
popf
cmpsb
or
imul
jo
and
push
cli
adc
sbb
pop
insb
sub
xor
fmull
out
xchg
into
jnp
sub
adc
mov
xlat
dec
jb
movsb
mov
cmp
fcompl
ljmp
inc
xchg
dec
fdiv
jl
cli
adc
jo
lods
mov
adc
adc
mov
push
sub
xor
xlat
cmc
cmc
shrl
cmc
pop
lds
in
sub
sub
adc
test
and
out
push
imul
cmp
inc
cltd
sahf
mov
fists
xchg
mov
jg
stos
sbb
pop
insl
mov
sti
push
inc
mov
adc
pop
adc
pop
call
fildll
jge
sub
or
jp
popl
enter
adc
mov
and
cmp
fucom
mov
je
es
xor
test
pop
mov
adc
lret
push
mov
mov
mov
fbstp
or
jge
xor
out
test
rclb
xchg
adc
popl
xchg
jbe
cltd
push
clc
xchg
cmpl
pop
mov
mov
jo,pt
int
mov
cltd
iret
call
xlat
inc
fists
movsb
pop
jle
mov
sub
in
das
hlt
mull
or
popf
mov
jecxz
xor
ret
fildl
push
mov
inc
xor
adcl
push
fstpt
push
pop
mov
xchg
ret
lods
add
enter
shlb
ficoml
pop
rorl
gs
dec
clc
mov
lret
inc
dec
push
daa
out
dec
popa
push
mov
repnz
fstpl
pop
pop
jno
seta
imul
push
shrb
in
sbb
repnz
jne
cs
push
scas
cmp
xchg
push
ds
shlb
dec
xor
mov
xchg
push
pushw
cmp
lret
add
dec
call
inc
push
fsubl
or
cmpsb
push
cltd
sub
xchg
stc
repnz
lcall
jl
sbb
cmp
pop
add
scas
jnp
jnp
outsb
stos
hlt
mov
and
mov
and
das
sub
testl
leave
lock
and
mov
scas
cmpsl
mov
mov
and
xchg
fcoml
stos
push
adc
inc
jmp
les
xor
adc
aas
push
mov
pop
cmp
ds
stc
cmp
adc
fwait
outsb
cltd
xor
pop
pop
test
jbe
inc
sub
movsl
ljmp
add
cwtl
lret
sub
mov
mov
jo
sti
jg
jmp
and
movsl
cmp
add
out
sub
aas
adc
lret
lods
or
mov
add
mov
push
dec
iret
cld
sbb
cmp
cli
outsb
mov
dec
adc
mov
adc
popa
repnz
fisubrs
xchg
jmp
cmp
loop
je
xor
inc
aas
dec
pop
sub
adc
xchg
pop
pop
loopne
out
sbb
int
leave
mov
add
sub
cltd
push
pop
testb
cmc
out
test
icebp
xor
loop
pop
lret
daa
pop
je
xchg
cmp
xchg
xchg
add
scas
cmp
pop
in
jp
xor
jb
pop
mov
adc
add
xor
insl
out
push
xchg
sbb
loope
pushf
jmp
adc
push
test
xchg
or
ds
lret
mov
es
sbbl
push
mov
inc
add
jnp
pushf
fdivs
hlt
dec
xlat
clc
sbb
int
add
dec
cmp
mov
jae
outsb
sti
cmpsl
call
fucomi
and
int3
sahf
imul
and
and
mov
or
lock
fbstp
out
or
int3
mov
idivl
icebp
pop
or
pop
out
enter
push
les
out
jb
pusha
loop
push
gs
mul
cmp
gs
xor
push
sti
xchg
sub
xchg
mov
mov
roll
fisubl
add
movsb
divl
or
jge
rolb
push
xchg
jp
or
xlat
add
ror
cmp
lock
xor
mov
out
ds
pop
mov
dec
push
sub
sub
shll
je
hlt
xchg
les
pop
int
xchg
fists
mov
out
pop
sub
repnz
push
imul
cmpsb
push
movsl
sbb
icebp
mov
stos
xor
jp
jmp
xchg
int
cmp
stos
sub
sbb
rclb
les
xor
lock
mov
mov
xchg
and
cmp
aas
lahf
out
push
xor
stc
xor
popa
jnp
cmpsl
mov
insb
in
lods
and
fwait
inc
mov
mov
and
xchg
mov
jae
jo
lret
iret
ss
out
mov
inc
mov
cld
popa
out
dec
xchg
addl
loope
xchg
loopne
mov
mov
or
mov
mov
pop
mov
movsb
gs
ja
xchg
int
xchg
andl
xchg
iret
popa
rol
sbb
out
push
pushf
jb
rolb
jmp
cs
in
mov
fdivrs
and
sbb
mov
sbbl
push
fistpll
ficompl
repnz
jmp
sub
xor
std
divb
mov
xlat
pop
push
xchg
xor
fiaddl
outsl
repz
sbb
dec
or
leave
sbb
mov
inc
pop
shll
imul
xchg
outsl
out
add
adc
popf
or
sbb
call
stos
adc
and
pop
pushf
add
fstpt
pushf
fadds
adc
test
mov
cwtl
jecxz
add
loopne
jl
jae
sahf
pop
mov
pop
loope,pt
mov
dec
call
jne
imul
xor
jmp
pop
adc
jp
jne
imul
push
imul
and
clc
or
outsb
adc
addl
dec
inc
mov
hlt
mov
int
xchg
in
push
in
fistpl
popa
movsb
orl
repz
fwait
xor
enter
out
testl
fdivs
fwait
and
jne
dec
insb
xchg
push
xor
cmp
inc
and
inc
mov
gs
ds
into
inc
popa
xchg
notl
fwait
hlt
cwtl
lahf
repz
push
movb
mov
lods
imul
adc
arpl
adcl
jg
sbb
in
hlt
and
lgdtl
icebp
aas
in
pop
pop
ret
cmp
loop
nop
cmp
repz
lret
mov
stos
cmp
and
in
cmp
mov
out
call
iret
push
fs
inc
hlt
frstor
in
icebp
ja
repnz
add
test
jne
repz
out
jle
xchg
mov
outsl
xchg
jmp
loop
fwait
push
push
and
adc
cs
inc
mov
fisttpll
sti
lret
and
xchg
shlb
lcall
out
cmp
xchg
adc
test
mov
add
add
jg
adc
jmp
jnp
push
cmp
mov
pusha
pop
inc
ficoml
aas
push
aam
out
mov
imul
icebp
inc
pop
jg
sub
jbe,pn
out
and
das
sarb
add
je
rcrl
lods
insb
fwait
cmp
cmp
inc
jae
inc
out
loop
mov
cs
mov
jmp
add
cli
inc
stos
ret
ficompl
ret
jbe
xor
test
xorl
pop
push
adc
in
cmp
sbb
xchg
scas
ror
and
push
xor
test
mov
test
mov
xor
js
js
mov
lods
stc
gs
xchg
cmp
inc
outsl
jnp
aam
push
sub
xchg
cmpsb
xor
ds
inc
aaa
aad
sbb
rclb
addr16
add
dec
jmp
stos
aaa
fldt
mov
rcll
sub
lds
nop
fwait
mov
lret
fdivs
bound
pop
push
mov
xchg
mov
push
cld
outsl
sahf
mov
pop
pop
ljmp
out
xor
enter
sbb
mov
mov
cmpsb
enter
add
shr
push
bound
xchg
adc
mov
cli
dec
dec
push
cmpsl
loop
jne
mov
xchg
sub
mov
inc
nop
rep
int3
lret
xchg
inc
xor
push
jp
cmpsl
sub
out
or
or
aas
in
pop
jg
ficomps
stc
ds
es
rclb
rcrl
lret
cld
lea
std
fisttps
or
jnp
xchg
ds
int
addb
fwait
out
or
scas
lea
sbb
mov
sbb
mov
mov
xchg
aad
push
adc
inc
push
jge
add
not
sbb
and
dec
and
and
xchg
rcr
das
push
sti
and
or
jbe
mov
sub
mov
fisubl
rolb
push
sahf
mov
xor
cli
insb
mov
lods
stos
arpl
lahf
dec
js
mov
dec
jae
mov
pop
inc
push
sahf
inc
rolb
sub
jo
js
les
or
xchg
and
imul
test
mov
mov
imul
sbb
out
mov
dec
or
popf
dec
sub
lcall
inc
inc
cmp
jb
jne
out
add
enter
mov
int3
flds
cli
dec
xchg
push
aad
sub
fistl
jb
jo
cmp
sarl
inc
jo
test
roll
mov
xor
fidivl
push
dec
pop
jp
mov
sbb
inc
jbe
xchg
adc
or
jl
mov
jmp
in
std
cmc
xor
xor
sbb
lock
ret
jne
shlb
mov
add
loopne
lods
mov
mov
inc
ret
xor
cmpsl
enter
mov
sbb
stos
pop
or
pop
and
sbb
bound
cmp
sub
jg
mov
fdivl
jo
test
push
outsl
pop
mov
hlt
xor
data16
aam
dec
cmpsl
xor
out
test
sbbb
dec
add
les
in
adc
shr
jle
inc
cmp
fs
sbb
repz
sbb
mov
add
js
pop
xor
fs
mov
cmc
xlat
sti
rep
add
cltd
add
movsl
inc
iret
xor
push
cltd
pop
pop
data16
xchg
jecxz
movsb
mov
int3
das
sub
xor
or
scas
adc
daa
push
out
sbb
out
xchg
into
inc
jmp
jl
dec
movsb
lock
orl
mov
xor
fidivrs
inc
cmp
xchg
and
in
fistps
sbb
stos
addr16
daa
jecxz
pop
inc
out
jne
jb
dec
call
pop
enter
inc
add
test
inc
fmuls
and
popa
pop
outsb
subb
cmp
xor
test
fisttpll
stc
sbb
mov
insl
test
mov
movsb
inc
aas
xor
push
cli
inc
rcrb
js
push
loop
cmp
cmc
stc
insb
pop
std
jp
xchg
fcompl
dec
jmp
fisubrl
scas
imul
pop
add
fisttpll
les
mov
add
icebp
sbb
popf
jns
sbb
ret
adc
je
jne
daa
call
rolb
sbb
les
sub
add
push
ret
nop
out
mov
std
pop
mov
movsl
xchg
std
aam
cmp
imul
out
jmp
mov
call
addr16
inc
add
mov
or
cmpsb
cmp
inc
imul
sub
jnp
aas
add
jae
fwait
jle
shrl
jl
sub
mov
pusha
or
js
cmp
dec
iret
sbb
mov
loop
cltd
lahf
sahf
push
fnstsw
mov
adc
subl
sbb
fnsave
fstps
xchg
js
push
and
mov
js
ja
mov
dec
out
call
aas
add
push
add
std
cmp
ja
in
enter
mov
adc
insb
xchg
push
xchg
jb
add
scas
arpl
scas
pop
mov
add
sahf
insb
add
mov
sti
adc
call
lock
in
test
fimuls
xor
scas
lods
jmp
cmp
xor
mov
imul
bnd
jae
aas
cmc
xchg
scas
xchg
pop
testl
or
lret
adc
insb
pusha
jno
aad
outsb
add
leave
sub
sub
shll
sub
ss
test
sbb
adc
and
sub
and
dec
test
inc
into
push
das
mov
unpcklps
in
or
adc
push
dec
aad
dec
ljmp
in
addl
xlat
inc
and
inc
movsl
mov
lahf
scas
xor
adc
out
cmp
data16
lret
stos
xor
sbb
mov
pop
arpl
ds
mov
and
pop
add
leave
push
mov
cmp
sbb
push
xlat
mov
scas
cmpl
mov
fs
mov
xchg
or
dec
fs
mov
push
adc
ret
dec
arpl
inc
push
aam
pop
repz
jmp
add
stos
or
mov
ljmp
jge
bound
push
add
jge
fdivl
subl
leave
cmp
push
sub
out
inc
ret
xchg
jno
insl
orl
push
lods
jbe
mov
xchg
sahf
or
mov
sub
mov
imul
push
pop
cmp
into
mov
mov
out
jbe
subl
cld
sbb
pop
dec
subb
shrl
pop
xchg
out
roll
sbb
mov
mov
ljmp
cmc
aad
adcb
call
dec
repz
mov
push
cmpsb
mov
mov
pop
dec
mov
mov
mov
mov
mov
xor
iret
jecxz
mov
dec
inc
pop
outsb
and
xchg
decb
dec
inc
lcall
add
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
xor
pop
jl
dec
pop
jl
xchg
sbb
iret
test
adc
loope
adc
movsb
sub
leave
jbe
bnd
pushf
sbb
mov
aaa
daa
stos
inc
mov
ret
cmp
add
or
lock
leave
lods
cmp
nop
pop
and
pop
sub
push
cwtd
stc
push
jp
inc
fdivrl
pop
fisubs
xor
repnz
mov
dec
mulb
lret
sbb
jnp
mov
jg
int3
fadd
add
and
pusha
jno
ss
lsl
xlat
jnp
scas
mov
add
enter
rorl
test
pop
cmp
mov
push
out
jp
xchg
cmp
mov
pop
xorl
outsb
in
fdivrp
popf
jo
out
adc
add
sub
add
jne
arpl
shrb
pop
fmul
ds
addr16
ss
cmpsl
jns
scas
sti
push
mov
xchg
popf
repnz
arpl
popf
mov
out
inc
sbb
sub
scas
rclb
in
imul
jo
loop
hlt
pop
dec
loope
adc
mov
sti
loope
cmp
enter
and
mov
xchg
mov
inc
pop
sub
xor
mov
lods
lock
lahf
sub
xor
stos
xor
loope
ds
xchg
xor
push
test
scas
mov
mov
cmpsl
dec
ret
jns
or
sti
dec
pop
outsl
int3
inc
inc
xchg
popl
imul
inc
and
cmp
cmp
out
test
shll
sub
jmp
stos
pop
sub
jae
insl
mov
dec
arpl
cmp
inc
test
in
into
mov
gs
stos
xor
jg
test
push
scas
jg
adc
dec
sub
jg
mov
jno
cmp
pop
mov
mov
insl
mov
les
rcll
xor
pop
adc
xchg
jbe
pop
cmp
lret
mov
leave
into
and
negl
lret
out
or
aam
leave
cwtl
add
loope
dec
or
push
mov
inc
arpl
cmp
adc
fadd
movswl
cmpsb
fs
rol
and
lret
add
xor
mov
pushf
loop
cmp
cld
xorl
cwtl
out
pop
xchg
mov
mov
or
test
loop
lcall
jp
push
idivl
pop
jg
pop
pusha
push
mov
jg
and
pop
or
in
jmp
fxch
sbb
cmp
popf
rolb
mov
cmpsl
pop
cmpsb
xlat
out
xchg
mov
lea
lret
or
pop
jge
push
mov
dec
mov
outsl
pop
sti
imul
dec
jmp
push
push
dec
pushl
inc
inc
mov
loopne
xor
fs
dec
mov
aas
push
nop
adc
sbb
inc
repz
shrl
cltd
and
addr16
insl
mov
xchg
stos
or
in
lods
lods
xchg
sti
aas
out
inc
or
lock
add
xor
loop
mov
mov
mov
mov
stos
mov
inc
movsl
stc
sbb
sbb
fnstcw
fmuls
lret
in
mov
loopne
popa
and
scas
or
dec
jle
mov
sub
push
sub
push
xchg
ja
sbb
mov
icebp
and
inc
push
dec
jge
dec
sub
out
pop
fwait
fs
mov
test
out
mov
aas
and
or
loop
ds
jge
psubq
imul
mov
mov
not
nop
xor
dec
nop
inc
push
push
pop
jecxz
cmpsl
mov
insl
xor
cltd
cld
aas
adc
sub
pushf
testb
cmpsl
movsb
dec
lods
into
pop
mov
test
lahf
aam
xor
cltd
scas
mov
inc
pop
mov
in
dec
scas
out
sbb
dec
push
roll
jecxz
jp
cmp
mov
loop
ret
jo
jge
in
stos
inc
jge
cwtl
mov
xor
and
cmp
out
inc
or
xchg
sbb
divb
addr16
cwtl
and
sub
add
mov
dec
xlat
fistl
iret
aas
xlat
cld
adc
push
dec
out
push
clc
sbb
jl
test
mov
lds
push
fsubrs
mov
cmpsl
xorl
loop
or
xor
aam
scas
jle
outsb
mov
inc
mov
inc
outsb
inc
outsb
inc
and
jge
dec
mov
loop
rol
xchg
cli
xchg
xchg
pop
aaa
and
xlat
divb
jmp
lds
mov
test
rcl
pop
in
js
and
hlt
insb
and
mov
fucomp
int3
xchg
adc
in
and
add
cmp
imul
pushf
inc
xchg
jnp
cld
fldt
push
add
dec
js
ljmp
repnz
push
or
repnz
in
sbb
mov
rolb
adcb
daa
movsb
call
leave
push
cs
cld
mov
cwtl
fdivrl
adc
mov
dec
jno
mov
sti
push
push
ret
xchg
push
cmp
imulb
mov
mov
outsl
movsl
ret
or
cmp
push
mov
shlb
ja
cmp
jae
lret
loop
push
dec
lahf
sbb
pusha
test
enter
shll
sar
cmp
cmp
out
je
andb
mov
sbb
jno
cmp
inc
mov
sbb
popf
mov
leave
cmp
pushf
pop
xor
stos
mov
rcrb
ret
push
xor
cmc
dec
mov
sahf
adc
outsl
jns
mov
and
clc
stc
aas
or
jecxz
inc
add
lret
mov
andb
pop
stos
ja
and
js
loopne
jmp
fidivrl
mov
out
push
xor
push
dec
jb
sub
cld
arpl
pop
adc
add
mov
imul
ss
cmp
jp
cli
add
out
jo
les
jb
mov
lea
xlat
fmull
pop
lods
mov
cmp
xlat
mov
mov
jmp
outsb
cmpsb
jb
movsl
add
movsl
jge
ss
xchg
ret
add
jle
loopne
xchg
pop
mov
pop
ret
cltd
and
push
xchg
sbb
in
adc
cmp
mov
jge
dec
daa
daa
jno
xor
cmpsl
out
inc
rol
sbb
loope
loop
fnstenv
lret
fistps
lret
xlat
stos
mov
mov
sti
mov
int3
sbb
adc
adc
cmpsl
adc
aas
sti
xchg
add
testl
push
push
aas
repnz
and
sbb
out
imul
loopne
or
xor
sti
jle
shll
sbb
cli
clc
pop
out
fstl
in
and
or
push
lcall
dec
dec
xchg
rcrl
sbb
sbb
pop
repnz
fidivs
test
jge
pop
fdivr
adc
daa
lcall
aas
out
fcoms
adc
jle
mov
jmp
out
xchg
stos
cs
or
lock
cmp
sbb
jb
cmp
scas
cmp
in
not
or
stc
dec
ja
add
popf
mov
jl
cmc
mov
fdivrs
or
push
jg
aaa
inc
xchg
ret
sub
jns
jg
or
or
sbb
cmp
dec
mov
and
or
lock
fstpl
ret
pop
mov
es
xchg
sbb
out
and
jne
test
sub
inc
inc
lahf
neg
and
jmp
sbb
dec
sbb
ss
mov
fsubrs
pop
in
sbb
mov
in
cmpsl
imul
mov
mov
push
cltd
lea
sub
mov
cmp
add
jmp
mov
dec
in
lods
rol
std
push
imul
iret
push
setb
in
dec
fildl
push
xchg
shrb
std
jecxz
js
subl
iret
and
or
and
rcr
xchg
test
lock
pop
imull
sbb
loop
mov
mov
mov
cmp
or
mov
or
or
fstps
repnz
lahf
ds
dec
cmp
test
rolb
cmp
loop
jmp
dec
test
repnz
jecxz
sarb
mov
repnz
jnp
jne
push
movsb
int3
xchg
mov
pop
cmpsb
gs
movsl
lods
arpl
add
popf
dec
sbb
rclb
ret
push
insb
dec
sub
pop
movsl
jnp
div
sub
ds
sub
inc
fs
sbb
or
cmp
ret
aad
es
jle
pop
ficoms
test
in
insl
mov
fsubr
outsb
push
mov
pop
lahf
out
push
jae
imul
fcomps
call
leave
sub
outsl
push
mov
mov
cmp
and
mov
divl
mov
jns
mov
lock
sti
ja
scas
adc
push
jg
outsb
cmpsl
fnstsw
pop
xchg
pop
popf
mov
fstl
ja
lret
sbb
mov
dec
js
add
mov
popa
pop
add
mov
jmp
pop
into
mov
jbe
cmp
std
cmpsl
data16
sbb
js
sbb
inc
aas
xchg
xchg
cs
lret
xchg
fwait
push
dec
cltd
xchg
add
ja
pop
mov
lods
pop
iret
push
jecxz
xor
add
in
ret
cmc
mov
in
sub
or
std
loop
or
dec
loope
in
sbb
incb
pop
adc
mov
sahf
iret
test
and
dec
cmp
push
jl
lahf
mov
fisubl
ret
es
insl
jae
cs
add
add
ljmp
das
in
pop
jg
push
xchg
imul
xchg
lret
sahf
cmp
movsl
and
and
mov
sarl
lcall
lret
negb
mov
xlat
add
fwait
inc
test
xor
push
sahf
sahf
outsb
lret
xor
std
shlb
xor
push
jecxz
jne
ret
cli
and
adc
or
mov
and
in
mov
add
or
ret
ror
push
enter
stos
xchg
aaa
in
and
adc
pop
cltd
mov
fsubrs
cmp
std
ret
shrb
jns
jnp
inc
inc
push
rcrl
xchg
jb
jmp
inc
xchg
rol
loop
mov
xchg
cmp
cmc
sub
ds
and
movsb
lcall
loopne
pop
pop
outsb
repz
aad
mov
ret
inc
icebp
rcl
or
lea
xor
push
outsb
in
add
je
and
je
mov
subb
jl
add
adc
lret
push
push
xchg
js
cmpb
scas
cmovp
jg
test
cmc
les
mov
js
jge
loop
sbb
mov
or
adc
lds
popl
outsb
adc
dec
cmp
add
outsb
rcrb
stos
adc
lock
cld
xchg
jl
push
mov
into
daa
mov
pop
push
cwtl
stos
mov
iret
insl
add
mov
enter
inc
pop
fwait
push
rorb
jl
push
inc
sbb
dec
stos
and
sahf
jne
insl
push
xor
jg
lods
hlt
cmp
outsb
dec
int3
xchg
mov
fbld
test
cmc
add
mov
sbb
xor
fldt
jns
addl
leave
test
inc
data16
aaa
lods
das
dec
aad
ss
add
pop
pop
or
icebp
mov
mov
jbe,pt
add
fdivl
push
cmpsl
adc
add
sub
fwait
jbe
mov
pop
scas
inc
xor
in
lods
les
icebp
ljmp
ret
mov
mov
jb
cmpsl
jne
sbb
fstpl
outsl
insl
ret
test
push
jb
jo
sub
movsl
add
inc
cmp
dec
cmp
xor
aam
push
mull
sub
add
and
sub
dec
dec
add
les
mov
les
std
test
push
cmpsl
movsb
sub
ss
jg
fildll
out
fisubrl
inc
xchg
into
add
out
pop
push
jge
and
jg
or
pop
test
and
jnp
test
cmp
std
jne
aam
cmp
popf
inc
imul
push
mov
lret
jmp
xor
mov
ljmp
jp
jmp
pop
mov
and
cmp
cmp
jns
cld
pop
push
enter
jnp
push
inc
cmc
fistpll
pop
lahf
sbb
and
in
pop
push
shll
mov
lods
leave
imul
mov
or
push
in
add
xchg
loope
mov
dec
fistpl
mov
mov
hlt
cmp
leavew
sub
and
xor
jmp
or
mov
cli
xor
fcmovbe
out
xor
aad
add
dec
push
sub
lds
loop
pop
mov
test
ret
clc
in
shr
cld
ja
jecxz
fs
mov
andb
inc
fs
xchg
aaa
movl
push
push
jle
test
ret
add
jo
rcll
aam
cmp
loop
hlt
cld
fiadds
inc
cs
int3
xchg
loop
mov
jg
pusha
mov
stos
aas
or
inc
cltd
mov
call
mov
mov
mov
jne
popf
cwtl
mov
sbbl
push
jmp
bnd
pushf
inc
mov
js
jae
nop
sub
loope
cmpsb
les
test
xor
pop
mov
mov
repz
xor
loope
dec
add
into
mov
ret
cmp
xor
mov
mov
outsb
jmp
cmp
popf
and
mov
in
inc
sbb
lock
data16
sub
cltd
popa
dec
pop
mov
jmp
inc
mov
ret
jg
clc
or
in
ficoml
icebp
inc
rcrl
mov
pop
fsubrp
xchg
popa
mov
mov
xor
gs
or
shlb
pusha
js
aas
aas
sbb
pop
gs
outsb
dec
dec
loop
mov
or
iret
pop
cld
pop
ret
inc
imul
pushf
xor
scas
addr16
in
adc
add
in
add
push
pop
mov
jbe
out
pop
cmpsb
fbld
pop
mov
cs
sbb
push
cmp
inc
outsl
cmp
call
sub
mov
out
adc
out
add
leave
fs
push
mov
ret
add
push
inc
adc
xor
sub
ja
sbb
das
lods
cmpsb
ljmp
push
aas
cmp
mov
mov
mov
subb
scas
rorb
cmp
sub
lea
inc
fstl
sbb
mov
outsl
movsb
aas
fsub
add
ret
aaa
aas
sbb
dec
jnp
pushf
cmp
add
inc
pop
lea
out
cmp
pop
addr16
fidivrs
push
xchg
pop
cwtl
sbb
dec
movsl
fucomp
cmp
inc
loop
mov
cmp
popa
sbb
push
clc
sub
lret
movsl
imul
scas
cmp
adc
hlt
out
xor
push
mov
mov
stc
ret
push
mov
mov
sbb
lret
cs
push
aas
daa
insl
jl
mov
sub
lock
dec
xchg
lds
scas
test
jo
iret
mov
jmp
stc
stos
pop
xchg
rcl
push
mov
ror
xchg
leave
adc
jl
lcall
sarl
lret
aas
inc
ffree
stc
push
mov
mov
repz
and
sbb
aas
addr16
in
xchg
sub
cmp
das
mov
push
xor
add
rorl
pop
lea
out
add
mov
sbb
int3
cmp
xor
sub
outsl
mov
mov
pop
shll
pop
inc
sarl
sub
aad
lcall
arpl
sbb
andb
and
inc
add
repz
adc
mov
cmp
lret
rol
imul
lahf
inc
add
push
push
add
sub
mov
or
jnp
hlt
push
jle
movsl
inc
test
imul
adc
jb
sahf
fidivs
pop
fmul
jnp
repnz
imull
dec
inc
sub
xor
jge
gs
es
dec
mov
bound
xchg
push
pop
xor
jno
jp
add
xchg
lahf
sub
dec
add
fbld
lods
push
mov
in
iret
jmp
or
inc
enter
mov
push
xchg
popf
mov
pop
or
jne
lret
inc
jb
scas
xlat
xor
sbb
push
mov
icebp
loope
clc
inc
int
pop
daa
push
mov
jo
jae
lcall
jae
cmp
orl
loopne
mov
fnstsw
mov
adc
aas
xor
pop
addr16
popa
addr16
push
mov
sbb
mov
pop
push
into
inc
mov
fadds
add
popa
xor
xor
sbbb
ljmp
mov
mov
mov
or
cmpsb
xchg
loope
fstpl
data16
adc
cld
repnz
scas
cmp
in
popa
adc
test
movsl
sti
mov
insb
shrb
xlat
push
test
aaa
fbstp
addr16
lds
call
sub
cli
or
mov
mov
or
in
mov
dec
mov
test
mov
in
xchg
xorl
int3
sub
sahf
lret
fscale
ss
iret
outsb
fldcw
and
sub
jg
add
test
out
jnp
pop
push
fisttpl
loope
je
dec
push
sub
sbb
icebp
xlat
add
in
adc
repnz
dec
dec
outsl
fsubl
mov
xchg
push
mov
insb
push
mov
xchg
lcall
jg
fnstcw
fimull
fbstp
icebp
fcomps
mov
mov
repz
jecxz
xchg
mov
push
arpl
call
shr
jg
sbb
dec
mov
mov
outsb
xchg
mov
loope
adc
jb
test
movb
push
mov
cwtl
pop
pop
mov
cmp
lret
jecxz
xchg
sbb
xchg
xor
scas
cmpl
mov
push
aas
cli
lcall
xchg
sbb
add
and
popf
dec
cli
out
cmc
andb
imul
sbb
xchg
add
adc
jmp
add
push
sub
jp
enter
cmpsb
push
lock
clc
mov
ljmp
push
js
xor
sbb
clc
test
xchg
sbb
cmp
dec
into
jmp
mov
jo
mov
push
xor
imul
hlt
jle
out
push
bound
insl
xchg
dec
and
in
lret
sub
bound
es
pcmpeqw
into
sub
ret
dec
xchg
pop
fs
call
mov
addr16
add
nop
je
adc
or
push
jae
out
dec
ss
xchg
sbb
out
or
insl
or
xor
sti
mov
push
ret
shrb
add
mov
js
movq
outsb
jns
lds
pop
add
cmp
jnp
or
xchg
call
sub
mov
jp
std
fwait
push
out
shr
xchg
and
outsl
mov
out
cld
mov
xchg
les
repz
and
mulb
or
jno
shrb
add
pop
out
mov
fstl
fistpl
jp
xlat
int3
jl
mov
jo
push
pop
xor
in
loopne
push
loopne
loop
sub
aas
adc
loope
mov
test
sbb
ret
cli
pusha
cmp
fisttpll
inc
inc
mov
imul
ret
sarl
fcoml
mov
adcb
es
adc
popa
pop
pusha
sub
outsb
cld
out
arpl
pop
xor
inc
jmp
stos
mov
fiaddl
test
adc
outsl
jg
jl
xchg
inc
xor
push
pop
sub
adc
fsubl
scas
into
push
inc
or
cmp
insb
xchg
lcall
arpl
adc
jnp
sub
adc
or
in
dec
pop
dec
mov
shrl
mov
add
scas
cmp
clc
cs
mov
outsb
and
jns
cmp
or
and
cmc
sub
rcrb
xchg
repnz
test
cmp
jl
dec
jl
shlb
adc
lret
aad
sub
jb
repz
jb
es
aam
mov
addr16
call
test
mov
pop
pop
icebp
jp
repz
jmp
movsl
inc
bound
shl
dec
inc
fdiv
mov
or
fldl
dec
add
xor
ret
int3
cmpsl
cmp
push
insb
mov
aam
push
xor
cli
add
xchg
mov
add
out
mov
xor
ret
xchg
lods
fistps
mov
add
orl
loopne
repz
push
cmp
jns
mov
inc
jl
test
idivl
rclb
jne
fs
out
xchg
jo
push
cmp
cmpsl
into
push
stos
jle
or
cmp
js
mov
pop
or
fldt
sub
dec
int
into
mov
out
push
jle
data16
rclb
cmp
sti
popa
js
inc
imul
bound
sbb
lahf
in
arpl
or
popf
pop
lods
in
movsl
jmp
sbb
lock
andb
mov
les
pop
fs
jmp
call
ss
and
and
xchg
sbb
mov
pop
mov
movsl
insb
lcall
jb
fdivrl
xor
dec
out
pop
jl
push
jnp
inc
sbb
xchg
sbb
sub
fiadds
and
push
adc
nop
inc
or
shll
cmp
sub
out
push
mov
rcr
out
fs
testb
jnp
cmp
je
pop
sbbb
das
xchg
leave
jnp
mov
xchg
push
push
mov
loop
cmpb
test
inc
stc
pop
jge
or
jecxz
ja
int3
cwtl
es
jle
ds
dec
into
push
jns
leave
jbe
push
insb
clc
pop
xchg
dec
cs
stc
mov
lods
sbb
jo
sti
inc
or
int3
call
inc
stos
pop
inc
adc
pop
icebp
adc
sbb
and
cmc
mov
and
pop
or
lcall
adc
mov
inc
jb
lcall
cmp
mov
mov
jnp
or
xchg
insb
pop
jo
gs
das
std
ss
loope
pop
les
xchg
popf
fistpl
and
das
pusha
pop
or
mov
dec
iret
jmp
mov
arpl
sbb
cmp
jo
jns,pn
pop
pop
fadds
outsb
insb
xchg
out
xchg
fnstcw
es
imul
mov
dec
and
dec
lret
int
lods
cltd
mov
mov
lret
mov
aam
movsl
mov
sti
movsb
mov
out
aas
imul
aas
jo
inc
repnz
pop
aad
push
aad
mov
mov
cmc
sub
push
mov
push
push
mov
jmp
add
cmpsl
stos
scas
sbb
popf
sbb
add
out
and
adc
mov
sub
sbb
jne
mul
xor
xorl
jbe
and
mov
shll
div
popf
or
push
fsub
lahf
dec
fstpl
fstl
insl
dec
inc
out
pop
mov
icebp
out
xor
xchg
dec
push
outsb
mov
daa
and
xor
xchg
and
fisttpll
js
shlb
sub
mov
insb
lods
into
jl
cmp
dec
lea
jo
ret
xor
out
sbb
test
clc
sahf
sub
out
or
aas
insl
push
jno
bound
xchg
in
cld
pusha
fwait
and
push
xchg
mov
and
sub
sub
mov
dec
je
pop
clc
xor
cs
iretw
test
fldt
add
push
dec
push
push
inc
cmp
popf
mov
ds
sbb
stos
jbe
sub
jo
adc
fxch
or
and
lea
xchg
scas
jns
pop
mov
xor
mov
mov
ljmp
pop
sub
pop
jmp
pop
and
shrb
or
fwait
push
lret
jo
nop
xor
out
mov
mov
jb
inc
js
into
mov
std
in
addr16
fiaddl
mov
dec
dec
push
mov
adc
mov
dec
rol
mov
rorl
mov
sahf
inc
inc
das
clc
pop
aam
stos
out
dec
sti
mov
mov
jle
push
mov
mov
stc
ja
push
scas
mov
xor
fwait
mov
repz
mov
fsubs
or
cmpsb
ret
sub
repz
jecxz
or
or
push
mov
and
adc
stos
imul
in
popf
pop
sub
push
push
outsb
cmp
sub
add
or
mov
std
pop
jmp
adc
lods
pusha
inc
rcll
lahf
jp
sub
loope
pop
mov
push
jmp
repnz
call
aaa
sbb
sbb
pushf
dec
xlat
or
mov
mov
jmp
imul
mov
es
xchg
lock
adc
ret
pop
out
dec
insl
push
clc
push
mov
jl
enter
pop
and
bound
push
pop
mov
cmp
adc
js
sub
lds
pop
ljmp
loopne
test
adc
in
repz
les
call
fwait
insb
jge
nop
ljmp
in
add
cs
mov
scas
pop
adc
je
popa
dec
add
or
mov
push
movsl
mov
lret
ret
jne
push
in
adc
pop
xchg
xor
xchg
mov
xchg
adc
popa
into
lods
jmp
jbe
outsl
mov
int
inc
pushf
jecxz
push
mov
loopne
jp
xor
imul
add
mov
add
cmp
mov
push
aad
lcall
push
mov
cmpsl
mov
sti
dec
mov
aam
insl
jle
cmp
sbb
inc
mov
mov
loope
jo
test
and
jp
ljmp
in
rcll
subb
outsb
cmp
ljmp
pop
clc
sub
loopne
cmp
dec
mov
addr16
sahf
aad
jae
xor
repnz
and
lret
mov
inc
cmp
std
aam
add
add
dec
mov
pop
data16
push
xor
leave
mov
stc
scas
ds
jnp
xorl
insl
mov
sahf
mov
jnp
rcll
xchg
cmp
sti
push
dec
pop
decb
jo
mov
jb
push
int3
testb
adc
xlat
leave
test
lahf
sbb
mov
adc
adc
inc
roll
dec
adc
es
jg
and
call
pop
repnz
fistpl
shll
cmpl
iret
insb
in
in
sbb
sub
dec
push
sbb
cmp
xlat
mov
jnp
xchg
popf
cld
mov
outsb
add
inc
push
xor
outsl
adc
ja
out
add
pop
or
dec
add
ret
icebp
fstpt
mov
out
mov
int3
jno
out
sub
jl
ja
mov
dec
arpl
sub
rcl
out
push
fwait
sbb
dec
out
sbb
test
mov
ror
inc
cltd
xor
out
cmp
imul
jp
mov
aas
repz
cmc
adc
dec
ss
nop
pop
data16
int
pop
aad
sbb
add
mov
lea
movsl
cmpsl
mov
shlb
xor
and
mov
jecxz
sub
push
push
cltd
ret
int3
inc
outsb
pop
nop
aad
mov
loopne
rcrb
xchg
addl
aas
hlt
and
andb
sbb
lock
hlt
sub
hlt
in
mov
cmp
adc
mov
pop
sub
jb
or
lret
rcrb
pop
mov
sbb
fstps
clc
mov
les
test
adc
test
test
jbe
subb
add
jbe
add
xor
sbb
sub
mov
pusha
jmp
mov
adc
daa
stos
in
sbb
cmp
xchg
lcall
movsl
mov
mov
mov
or
psrad
cmp
cld
fwait
inc
adc
aas
adc
adc
je
addb
jbe
imul
add
lods
inc
je
dec
push
pop
loop
mov
rorb
and
fldt
mov
cli
pop
cmpsb
jmp
in
xor
popa
imul
lds
jb
dec
dec
or
pop
xchg
sbb
scas
cmp
mov
and
inc
fcomi
loopne
sub
inc
jb
pop
test
and
dec
out
lret
out
push
aad
push
mov
add
lods
jbe
xor
jecxz
stc
popf
jb
sbb
and
cmp
push
xchg
inc
ljmp
lcall
clc
or
leave
ja
mov
scas
sarb
sub
pop
push
push
clc
mov
push
aas
lods
adc
xchg
cmp
loop
adc
mov
inc
and
divb
fildl
xchg
jmp
cmp
inc
jne
sub
repz
mov
fimuls
aaa
dec
fs
mov
pop
xchg
ds
mov
inc
mov
push
test
xchg
je
cmc
int3
mov
cmp
sar
xchg
jecxz
sbb
les
icebp
xor
add
inc
jmp
xchg
ret
adc
call
pop
and
testb
orl
pop
mov
mov
orl
mov
cmpsb
lods
mov
insl
pushf
in
cld
cmp
push
pop
mov
xor
xor
into
movsb
jmp
cmp
jge
jg
cmp
in
stc
jnp
arpl
leave
xor
int3
inc
ret
inc
and
data16
ja
xor
mov
mov
lock
sarb
repnz
mov
pop
cmpsb
sbb
ret
hlt
mov
adc
sbb
loop
rcll
cmp
sarb
jo
lods
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
repz
mov
xor
mov
mov
inc
and
mov
mov
mov
decl
stos
cmpl
stc
jo
fsts
push
fwait
jmp
xchg
pop
push
xchg
xor
clc
cmpsl
or
or
and
jo
dec
pop
ds
add
cmp
aad
push
packsswb
push
jl
int3
xchg
add
xchg
fimull
fldt
adc
loope
fildll
stos
mov
adc
lock
inc
stos
or
jge
lahf
ret
dec
js
cmp
inc
test
mov
sub
lret
dec
outsb
cli
xor
je
xlat
xor
imul
shr
lret
sub
push
mov
std
add
or
movsl
mov
and
les
lock
jno
out
push
rcrl
mov
ret
scas
xor
add
inc
mov
jne
cmp
push
cmpsw
dec
mov
mov
pop
into
dec
dec
pop
xchg
rcr
jno
lods
rorl
aad
sbb
ss
mulb
cmp
mov
inc
xchg
jl
xchg
cmpsl
jmp
repnz
inc
fistpl
jmp
in
cmp
sbb
cmp
cli
inc
inc
dec
data16
or
mov
loope
ret
dec
cwtl
adc
sub
aad
inc
dec
xchg
xchg
xlat
inc
or
ljmp
repnz
dec
and
mov
sahf
imul
into
stos
pop
add
inc
divb
xchg
add
mov
ss
sub
icebp
push
stos
jecxz
sub
xchg
mov
mov
xchg
sub
rcrb
test
test
jnp
mov
lahf
fnstsw
cmp
xchg
shll
mov
push
jne
pushf
cmp
dec
xor
mov
sub
adc
push
negl
push
dec
andb
adc
push
xchg
inc
fstpt
sbb
dec
and
cmpsb
inc
adc
adc
cmpsl
sbb
mov
lcall
test
xlat
dec
data16
popf
mov
gs
std
mov
mov
xorl
pop
xlat
sub
push
in
push
sub
and
mov
and
rorb
icebp
movsl
iret
adc
lahf
lea
mov
cmp
push
divb
lret
cmpsl
inc
cmpsl
adc
lret
ret
sbb
pop
inc
mov
adc
adc
sub
jns
inc
pop
push
mov
int3
jne
loop
lret
mov
test
adc
push
pop
jge
ja
lods
call
ret
stos
arpl
or
xchg
cmp
shr
shrl
jmp
add
add
fstps
jbe
pop
bound
sub
mov
mov
stos
xor
or
cld
push
in
mov
inc
pop
cmp
cmp
pop
test
add
in
push
or
sbb
jne
cmp
push
pop
int3
lds
mov
mov
adc
movsb
dec
inc
inc
or
fisubl
arpl
mov
sbb
mov
mov
enter
js
mov
popa
stc
out
imul
mov
ja
andl
fwait
cmp
jo
fst
mov
mov
stos
out
add
fcoms
lret
mov
data16
sti
adc
mov
in
aas
or
out
ss
addl
cmpsl
in
jmp
cmp
sbb
pop
xor
fs
pop
or
jae
lret
mov
test
cli
sub
gs
mov
xchg
mov
or
push
addr16
mov
negb
arpl
popf
xchg
dec
pop
cmp
mov
push
pop
outsb
mov
outsl
jg
push
jb
es
adc
dec
push
lock
sbb
test
push
scas
mov
cmc
add
jecxz
lods
hlt
bound
pop
mov
and
jns
push
test
fwait
js
cmp
adc
orb
mov
aaa
and
sti
mov
les
jne
cmp
decb
cmpl
push
js
jecxz
das
fsts
or
je
jmp
fmuls
insb
mov
mov
inc
xchg
mov
mov
xor
dec
divb
sub
jmp
inc
jmp
sbb
push
sbb
mov
fidivl
arpl
imul
push
mov
jge
sub
aam
push
jns
loop
mov
mov
mov
cld
lds
dec
dec
loop
mov
add
ljmp
jp
mov
fisubrl
xchg
test
in
jle
cmp
icebp
sub
push
jg
out
xchg
stos
sub
xchg
mov
lods
ret
idivl
xchg
and
test
add
fs
in
lret
xchg
sub
pop
sub
imul
xor
clc
push
pop
sbb
ljmp
out
push
fsubs
into
sbb
mov
sti
cmp
jecxz
mov
xor
stos
xchg
sbb
iret
insb
add
add
adc
mov
lock
js
lods
add
xor
and
and
cmp
xor
or
and
test
mov
and
idivl
movsl
test
pop
sbb
movsl
cli
pop
shlb
dec
xchg
cmp
scas
pop
out
out
mov
xchg
push
and
loop
sub
push
jmp
push
or
and
dec
dec
repnz
ss
cmp
lcall
mov
inc
neg
sbb
adc
popa
dec
push
roll
cmpsb
nop
dec
popa
test
roll
or
mov
cmpsb
or
pusha
fldcw
adc
loope
xchg
daa
aam
mov
fldenv
fcompl
jo
cmp
je
pop
xor
imul
call
xchg
popa
ficompl
shl
or
jle
jl
movsb
xchg
dec
sub
mov
mov
in
test
dec
ret
xchg
push
push
fstpl
push
fs
sub
pop
lret
aad
sbb
and
test
loope
adc
sub
orl
arpl
shlb
into
xchg
inc
dec
or
and
ljmp
add
aas
add
rcr
popf
mov
out
xchg
xchg
cld
pop
inc
jge
mov
sti
stc
fiaddl
in
mov
xchg
shll
mov
ja
mov
mov
pop
jmp
jnp
jg
mulb
ja
xchg
mov
rcrb
insl
out
cmp
andb
jnp
clflush
out
enter
arpl
lds
jb
sub
mov
aad
fldl
mov
sahf
adc
lock
fistps
loope
xorb
mov
xchg
aas
cs
inc
in
xor
cli
pop
inc
adc
mov
and
add
dec
fidivs
mov
ss
jp
out
neg
test
and
jne
mov
or
jnp
mov
sub
sub
cmp
ss
xlat
push
dec
add
scas
sbb
xchg
out
push
arpl
fsubp
adc
mov
cwtl
dec
in
aaa
lods
aas
xchg
sbb
dec
int
jb
jnp
push
mov
mov
mov
fimull
pop
mov
or
xchg
clc
sbb
sbb
lahf
cmpsb
push
and
pusha
hlt
dec
xor
and
or
lods
cmp
imul
sahf
fwait
cmpps
sub
dec
push
js
fs
xchg
or
push
fcomi
data16
and
movsl
sbb
shrl
cwtl
push
orl
sub
inc
cmp
cltd
fwait
mov
gs
std
or
into
orl
inc
leave
popa
xor
dec
out
mov
inc
hlt
mov
addr16
jecxz
pusha
mov
adc
rcrl
ss
shrl
mov
inc
pop
mov
push
sbb
jle
es
inc
inc
pop
mov
dec
adc
jmp
into
pop
cmpsb
mov
and
adc
outsb
inc
sub
mov
adc
pusha
outsb
xor
push
add
imul
mov
or
cmpsb
scas
enter
xor
ljmp
decb
scas
and
stos
dec
jb
mov
shlb
ds
jecxz
xlat
xlat
popa
icebp
dec
push
mov
mov
loopne
cs
adcl
mov
and
adc
pop
xor
fscale
loope
or
pop
ret
testb
pop
mov
fs
mov
lahf
loop
pop
movsb
pop
gs
mov
jecxz
adc
cmp
imul
mov
lds
pop
call
inc
ss
int3
movsb
cli
mov
pop
fcomps
cmp
aas
mov
out
or
jecxz
pop
imul
fisubl
mov
mov
into
ret
dec
mov
fcomip
test
inc
jl
pop
sahf
nop
xor
icebp
sub
rolb
sbb
dec
xchg
cmp
gs
insb
popa
out
mov
mov
stos
pop
ja
jo
ja
js
hlt
adc
push
stos
mov
pushf
push
into
pushf
pop
ficompl
and
push
push
add
lods
sub
or
xor
sahf
sbb
out
cmp
aas
popf
add
mov
xor
sahf
imul
dec
xchg
xor
xchg
das
ja
cld
add
cli
es
jno
fldenv
push
shlb
ja
mov
icebp
ljmp
fsubr
push
lret
mov
mov
push
aam
jp
push
nop
mov
sub
mov
nop
adc
pop
in
in
shr
js
push
scas
mov
int3
pop
jmp
mov
mov
iret
mov
fcoml
lods
in
lods
hlt
sbbl
shlb
and
jge
fsubrl
mov
data16
into
outsb
inc
push
bound
cmpsb
sbb
arpl
outsb
subl
out
sbbl
mov
enter
outsl
sub
stos
xor
xchg
sbb
lcall
fs
lea
movsb
mov
push
scas
leave
adc
lcall
mull
into
sbb
dec
loope
ficoml
adc
loopne
xchg
add
mov
dec
mov
dec
sub
aaa
jg
pop
push
imulb
bound
or
sub
and
in
xchg
cmp
rorb
cmc
int3
pop
out
xchg
adc
ss
leave
outsb
popf
or
xchg
sbbb
jno
push
sbb
pop
arpl
clc
hlt
shll
ljmp
pop
das
xchg
and
bound
hlt
inc
jl
mov
xchg
jnp
sub
mov
sub
jecxz
rcll
dec
and
test
mov
jo
mov
iret
push
push
mov
stos
jo
int3
inc
imul
test
data16
cmpsl
adc
lea
orb
test
clc
push
pop
mov
arpl
mov
test
and
pop
inc
add
call
inc
and
arpl
jne
mov
arpl
icebp
inc
sub
sub
sub
dec
sti
push
jae
cmp
sti
adc
or
mov
gs
call
ss
pop
mov
dec
movl
xchg
fwait
int
xor
rorb
fsubrs
mov
sub
stos
test
xor
add
mov
push
loop
and
pop
and
xchg
sub
add
mov
fsubp
cmpsb
leave
inc
lret
insl
outsl
cmp
xor
std
adc
adc
in
cmp
out
push
xchg
in
lods
out
push
test
and
mov
arpl
cmc
xchg
mov
stos
push
xchg
mov
and
loopne
lahf
out
and
mov
sbbl
dec
outsl
add
mov
insl
fnstenv
push
pop
jle
push
push
ljmp
out
mov
or
pusha
lods
repnz
subb
decb
ds
jae
mov
pop
or
pop
cmp
aad
mov
pop
jns
or
jae
jl
lret
jp
popa
mov
iret
lret
adcb
mov
mov
out
sbb
cltd
cmc
fdivs
pop
inc
pop
push
jmp
cmpsl
push
sbb
outsb
xchg
outsb
and
xor
adc
push
test
mov
xchg
cmpsl
xor
lea
dec
sbb
outsb
ret
pop
cmp
mov
pop
sbb
add
int3
mov
outsb
js
sbb
sub
cmp
or
mov
mov
adc
cmp
jae
xchg
push
push
inc
jb
hlt
int
xorb
ficomps
mov
adc
sbb
imul
mov
xchg
mov
lahf
popa
call
or
cmp
stc
lahf
add
adc
mov
cmp
es
stos
pop
clc
inc
jl
fnsave
cmp
adc
cli
jb
cmp
push
in
mov
inc
xor
xchg
sbbl
dec
and
sub
fisttps
test
sbb
and
movsb
imul
repz
call
stos
lock
cmp
mov
mov
xor
lods
xacquire
popa
xlat
or
mov
xorl
mov
aas
int
orb
push
in
pop
pop
aam
enter
jne
movsl
push
push
out
push
fidivl
dec
jns
jbe
adc
push
jp
sub
jb
sub
adc
cltd
add
jb
and
xor
daa
fmuls
mov
inc
inc
shrl
inc
xor
cmpsl
add
mov
cmp
rcrl
push
push
and
fmulp
rcr
cmp
add
pop
movsb
jle
pop
jecxz
out
test
dec
dec
dec
pop
and
shrb
dec
mov
dec
sahf
fcmovb
pop
imul
dec
xlat
push
fdivrs
push
cmp
or
xchg
and
cltd
hlt
sbb
lods
test
sti
mov
mov
fbld
out
adc
inc
or
repz
mov
jbe
sub
push
sub
xor
sbb
or
out
fisubs
adc
xor
notl
clc
gs
push
inc
in
add
sbb
sub
add
addr16
lahf
out
fcmovnu
adc
jge
mov
clc
imul
adc
push
out
lods
leave
and
adc
sbb
xor
test
nop
fidivs
adc
pushf
mov
das
jge
and
mov
cmpsb
pop
in
out
data16
cmp
loop
jp
cld
xor
js
fwait
nop
sarl
lahf
push
mov
add
nop
cmc
xchg
fildll
insb
jne
xchg
leave
in
sub
rorb
divb
cmpb
andl
xchg
daa
rorb
xchg
sub
clc
icebp
dec
inc
imul
loop
iret
jb
xchg
mov
xchg
stc
das
rcrb
out
push
pop
lea
das
dec
xor
movsl
in
rolb
sbb
sub
out
notl
les
pushl
mov
cmp
in
bound
sbb
rep
sub
insl
adc
mov
push
and
bound
sub
push
aaa
out
dec
or
jb
mov
fildl
shrl
and
je
gs
add
jecxz
sbb
insl
mov
lods
sub
push
dec
jl
sub
mov
adcb
out
iret
inc
mov
mov
jno
xor
add
loope
xor
cmp
sub
jns
fbstp
je
mov
sbb
test
pop
or
les
adc
rol
and
movsl
lock
pusha
hlt
lret
movsb
mov
lods
lret
flds
mov
jmp
mov
out
ja
jno
push
into
test
stos
es
ljmp
mov
xchg
jg
std
sti
lea
add
je
iret
pop
inc
push
mov
icebp
push
mov
iret
leave
jne
inc
mov
inc
mov
dec
scas
push
cmc
sbb
dec
icebp
hlt
outsl
jnp
ja
movsb
scas
jns
push
or
jmp
jbe
dec
mov
push
clc
xor
mov
fisubs
pop
push
enter
xor
jb
lcall
nop
xchg
sbb
lret
sub
push
lahf
lock
addr16
nop
aam
stos
push
mov
pop
pop
push
out
mov
enter
cmp
aas
mul
in
xor
shrb
outsl
fisttpll
sub
xchg
imul
icebp
test
ret
sahf
pop
xchg
cmp
cs
repnz
dec
and
fiadds
mov
dec
xchg
xor
or
or
sub
cmp
xor
push
shll
fadds
sub
xchg
orb
inc
inc
push
out
mov
xchg
add
adc
aas
repz
and
or
xchg
lret
dec
push
repnz
fdivrl
push
jb
lcall
and
repz
cmp
iret
jl
cmp
xchg
cmp
push
xor
jge
xor
cmpsl
les
adc
dec
pandn
adc
mov
mov
mov
fiadds
in
add
xchg
std
stos
add
iret
mov
fisubrl
fs
test
aaa
movsl
jb
push
inc
adc
dec
test
push
outsb
icebp
pop
nop
add
dec
js
nop
and
in
add
shrl
mov
cmpsl
xchg
cmp
jne
mov
insl
lds
popf
sbb
push
pop
test
out
adc
cmp
shlb
lcall
mov
decl
fld
rclb
nop
inc
lea
mov
adc
mov
mov
pop
pushf
mov
lods
cmp
out
push
mov
jno
cs
and
jp
pop
imulb
pushf
cmp
jg
test
jle
and
push
pop
aam
filds
test
xchg
out
lahf
xor
sbb
addr16
jbe
add
aad
pushf
lods
lods
mov
xchg
mov
xchg
pop
sub
pop
stos
out
addl
dec
mov
mov
pop
popl
lea
inc
push
xchg
mov
fcoms
xlat
mov
enter
fcomi
jecxz
jae
in
add
addl
cmpb
fidivl
add
cs
mov
clc
xor
mov
inc
enter
ds
dec
std
pop
jae
out
stos
dec
cli
scas
test
or
roll
sub
sub
sbb
mov
jmp
xor
fdivrs
es
inc
imul
push
into
xchg
pushf
mov
decb
jns
test
addb
mov
mov
xorl
and
add
dec
and
adc
mov
fwait
sub
inc
lahf
xchg
fwait
roll
fidivrs
mov
adc
out
cmpsl
sbb
sbb
push
mov
hlt
testb
push
popf
sub
inc
fsubrs
nop
sub
fprem
xor
mov
je
push
fidivrs
fwait
jb
or
mov
jle
jns
inc
pushl
rol
push
popf
adc
inc
in
fcoms
leave
in
negl
inc
pop
dec
int
jbe
mov
stos
stos
inc
cmp
outsl
fwait
jno
ret
or
adc
movsb
cwtl
sub
push
leave
rclb
jge
test
pop
mov
sbb
sbb
psubsb
popf
adc
lret
out
mov
enter
test
lods
lcall
aaa
xchg
jle
out
pop
popa
pop
or
imulb
push
or
aad
cmp
xchg
punpckhwd
push
dec
pop
mov
pop
ds
mov
idivb
mov
push
pop
outsb
fistl
mov
and
pop
add
mov
je
loop
fwait
cmp
or
add
ret
rcrl
filds
or
gs
sar
gs
ss
fcoml
xchg
stos
out
stos
pop
xchg
mov
cli
shrl
mov
sar
pop
jle
push
fidivs
cmp
adc
push
outsb
lret
jne
in
sub
adc
inc
adc
mov
mov
bound
push
add
cmp
mov
loopne
lahf
add
jo
mov
dec
aam
addl
jmp
jge
daa
mov
pop
sub
xchg
into
sbb
fs
movsl
ret
into
cmpsb
xchg
add
dec
loope
mov
add
dec
lcall
xchg
jg
lods
call
in
cmpsb
push
out
or
adc
sub
int
sub
test
test
jb
push
cwtl
ja
dec
fisttpl
test
sub
test
or
xor
fistpll
aad
repnz
out
sub
movsl
or
ss
jns
push
pushw
in
push
adc
lods
pop
mov
adc
out
sbb
and
fcom
cwtl
inc
aam
adc
lret
and
aam
push
xchg
orl
lock
push
enter
mov
mov
add
in
cmp
add
dec
mov
xor
adc
test
lcall
in
dec
pusha
pandn
pop
jae
or
mov
jo
cmp
fdivrl
ljmp
inc
lods
cmp
push
mov
dec
dec
repz
mov
sbb
adc
pop
aaa
jae
jnp
ja
out
jo
xchg
js
scas
jle
jp
lds
movb
int3
stc
sar
dec
add
subb
xor
pop
mov
test
add
popf
jo
xchg
aam
inc
push
push
mov
inc
mov
dec
push
xchg
inc
pop
mov
or
clc
nop
pusha
mov
cs
aam
and
cmp
mov
sub
mov
and
pop
mov
or
jl
mov
mov
mov
rsqrtps
addb
and
aaa
mov
icebp
roll
xchg
fwait
mov
cmp
or
aas
stos
shrl
mov
inc
inc
add
out
add
int
mov
leave
jnp
jl
or
cmp
mov
es
lret
outsl
subb
push
in
adc
adc
iretw
mov
xor
xchg
xchg
cmpb
push
jmp
xchg
dec
mov
lods
dec
or
sbb
daa
cmp
dec
inc
inc
insb
test
shr
mov
jl
out
fists
clc
cli
call
popf
mov
add
faddl
cli
push
jmp
inc
xchg
jl
mov
in
movsb
stos
out
and
divb
push
ret
pusha
push
or
fnstcw
cwtl
sub
pop
cltd
xchg
dec
push
testb
mov
imul
mov
je
fdivs
inc
adc
add
lods
addr16
xlat
sbb
inc
and
sub
pop
add
mov
popa
sahf
fiaddl
jnp
push
sti
pop
mov
dec
sub
jne
movsb
rcrb
push
mov
push
jne
ror
rorl
arpl
gs
cmpsb
cs
mov
nop
and
adc
xor
scas
ret
arpl
fidivrs
pushf
cmpsb
mov
addr16
cmp
in
icebp
fcompl
fnstsw
js
pop
movsb
shlb
pop
rcrb
xchg
add
pop
negb
test
loop
cmp
sbbl
aam
push
push
add
push
inc
pop
push
xchg
clc
pushf
enter
repz
outsb
xlat
iret
cmpsl
sbb
and
inc
ret
dec
cmp
test
push
push
mov
mov
test
mul
mov
cli
jg
iret
pop
enter
push
and
jne
movsb
jno
lahf
add
mov
cmp
fnstsw
fdivs
mov
mov
cmpsb
mov
leave
add
dec
and
adc
mov
jp
inc
mov
jne
pop
sbb
mov
loope
push
scas
push
fistps
sub
xchg
sub
push
mov
sub
cmpb
mov
int
imul
push
sahf
insb
pop
stos
es
push
sub
mov
repz
add
int3
mov
pop
sahf
lcall
popa
push
fidivs
lret
cmp
inc
fstps
dec
mov
jnp
ret
adc
cmp
adc
jg
xor
inc
mov
mov
pushf
in
dec
lods
leave
mov
insl
ss
pop
test
push
test
jp
dec
sub
insb
orb
xchg
mov
mov
popf
push
or
in
sbb
cmp
add
into
fsts
mov
add
push
scas
out
jg
icebp
rolb
sub
sub
loope
adc
pop
push
je
int3
subl
mov
pop
je
push
adc
lea
jae
inc
push
icebp
ret
jb
jne
int3
xchg
test
xor
stos
xabort
pushf
int
lods
push
mov
mov
push
aad
inc
jl
push
movsl
das
lods
mov
mov
or
je
jecxz,pn
popa
out
loop
clc
in
stos
mov
cltd
mov
jecxz
rcr
pop
and
rep
outsb
pop
incl
loope
mov
sbb
and
paddb
shl
add
mov
mov
into
dec
sub
mov
fidivrs
movsl
leave
or
add
xlat
fwait
and
mov
in
push
lods
loop
cmp
lcall
lea
sub
push
inc
ljmp
adc
ss
call
mov
sub
xchg
sbbl
mov
jle
push
icebp
sbb
pushf
loop
lea
pop
insl
movsl
and
sub
xor
pushl
mov
mov
dec
mov
jmp
aaa
mov
cmpsb
ret
push
bound
and
dec
jno
add
aaa
aad
push
aas
or
pop
sti
mov
sub
jns
ds
adc
lods
jb
mov
xchg
dec
fs
push
push
testl
sti
clc
ficompl
dec
xor
pop
stc
fwait
imul
shr
xchg
cmp
dec
mov
lret
jae
cmp
out
adc
shlb
sub
push
aam
cmp
sbb
faddl
xchg
js
jmp
lods
imul
cs
loopnew
mov
call
sub
inc
jae
ja
fdivs
mov
js
adcb
xchg
insb
jg
in
cmp
xchg
sbb
les
iret
lret
icebp
and
mov
lods
imul
and
cltd
pop
aas
mov
out
xor
lret
mov
pop
inc
nop
inc
adc
jnp
pop
test
inc
shrb
or
cmp
test
mov
mov
das
cmc
mov
mov
mov
pop
cmc
sbb
outsl
cs
mov
adc
andl
pop
and
int
cld
aam
mov
pop
es
mov
popf
mov
xchg
xchg
ds
nop
popa
xchg
shrl
shll
daa
jns
dec
mov
xor
mov
xor
pop
xor
adc
jg
mov
std
data16
pop
pop
call
sub
mov
sbb
stos
xchg
or
jp
sbb
jg
clc
negl
push
out
adc
imul
test
lcall
add
push
adc
mov
mov
sbb
adc
cwtl
aad
push
push
pop
nop
adc
jle
cwtl
mov
mov
lcall
sbb
gs
adc
mov
pop
outsl
addr16
push
push
jb
cmp
push
cmp
or
mov
out
lret
mov
ret
xchg
mov
xor
lods
out
sub
mov
adc
test
in
pop
sub
inc
js
aaa
bound
clc
xor
sbb
out
in
aaa
or
lds
nop
clc
mov
clc
and
adc
scas
ds
fisubrs
mov
and
and
lret
xorb
filds
int
or
push
pop
xlat
bound
cwtl
cmp
ficoml
pop
mov
pushf
rolb
insb
mov
dec
jno
out
push
stos
jmp
dec
shll
adc
mov
push
enter
cmpl
lods
sarl
ror
sbb
add
mov
jae
xchg
fidivs
mov
inc
fstps
lea
push
push
movsb
test
jo
lds
loope
fldenv
enter
push
out
pusha
fcomip
dec
sub
sbb
adc
cmp
mov
pop
add
mov
rorb
cmpsb
loopne
mov
sbb
cmp
mov
mov
sub
and
jno
push
mov
and
pop
lcall
or
mov
pop
jecxz
lock
push
and
jnp
ret
daa
ja
dec
cmpsl
cmpsb
jle
sub
pop
adc
mov
enter
jg
mov
inc
sub
cli
or
push
jp
aam
int3
in
imul
ljmp
mov
fsubrs
fdiv
jl
adc
neg
scas
fmuls
xchg
lds
divl
cwtl
shrl
enter
jnp
cmpsl
dec
push
inc
fimull
cmc
ret
push
jb
pop
adc
outsb
mov
push
xor
adc
ss
sbb
inc
popa
xor
adc
movsl
xchg
movsl
mov
push
jb
and
addr16
cmp
jmp
sti
jnp
test
pop
and
lcall
cmp
mov
and
shr
cwtl
js
push
sbb
clc
jno
std
daa
sub
fwait
aas
sbb
shll
cmpsl
insl
mov
packsswb
xchg
adc
push
or
add
pop
in
pushf
mov
shrl
adc
pop
mov
sarl
xor
pop
push
rcll
aas
mov
sar
int
jno
ja
fcmovu
cmp
jo
fs
out
pop
lods
push
mov
out
fbstp
mov
pop
test
pop
mov
push
and
jo
pop
sti
rclb
pushf
push
cmp
mov
pop
and
mov
xor
jg
adc
and
cwtl
fsubrs
fistps
lods
mov
out
sbb
addl
popf
mov
mov
ss
add
add
jg
stc
pop
lret
sub
mov
push
sbb
mov
fmull
aam
pusha
fistpll
push
and
jl
ficoml
lods
pop
cmpsl
pop
inc
incb
mov
push
cld
fildl
mov
or
jmp
loopne
sbb
cmp
test
inc
xor
mov
or
jl
xor
and
lock
scas
ret
xor
jb
stc
adc
add
movsl
cltd
in
ja
mov
mov
hlt
or
jmp
stos
frstor
add
sub
in
adc
cwtl
mov
roll
fcoml
iret
sbb
cmp
fwait
push
out
mov
xchg
jae
fs
dec
fldenv
xor
dec
inc
xchg
rolb
sub
jg
out
shll
xchg
cltd
aad
in
jns
test
in
add
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
pop
icebp
test
push
push
jl
jmp
jl
inc
arpl
bound
mov
in
in
ret
fsubr
adc
push
or
test
mov
jnp
pushf
repz
dec
jae
cmp
stos
dec
test
cli
sbb
fsubl
rcrb
pop
cmp
mov
sub
das
shl
and
ds
mov
arpl
aam
clc
inc
mov
subb
in
or
pop
mov
cmpsb
cli
jle
fldcw
icebp
sbb
push
sub
sub
inc
shlb
imul
and
mov
cwtl
lret
xchg
cli
pop
out
mov
in
push
mov
out
xchg
add
or
mov
adcl
and
jne
xor
mov
inc
int
cmp
outsb
out
push
lods
mov
and
jns
push
pop
mov
andl
lock
jecxz
dec
xchg
pop
add
xchg
jns
mov
mov
insb
cwtl
out
lret
ss
inc
add
dec
pop
dec
mov
xchg
jg
enter
fstl
imull
xor
aad
xchg
push
cmp
push
insb
xor
add
clc
call
mov
push
lods
lods
dec
popf
cmp
dec
jb,pn
in
fdivrs
imul
scas
inc
das
std
fwait
sbb
fs
jge
into
dec
movsl
sub
mov
scas
fwait
cmpsb
dec
xchg
add
add
repz
fisttps
leave
dec
and
ret
jo
in
dec
or
mov
push
xor
sbb
jae
ret
and
dec
adc
xchg
imulb
lods
sbb
pop
std
dec
outsl
and
mov
lahf
pushl
sub
mov
inc
xchg
push
popa
dec
cmp
dec
xchg
dec
pushf
cltd
xor
jp
fs
imul
fildl
mov
es
xchg
scas
xor
mov
jb
in
outsl
xchg
xor
pop
inc
jle
dec
leave
jg
faddl
xlat
push
and
xchg
mov
jge
lahf
movl
cwtl
insb
or
mov
xor
clc
jns
xchg
fistps
adc
sub
addr16
and
inc
sub
in
cltd
into
jp
or
sub
movsb
outsb
lcall
lret
inc
push
jne
sub
pushf
sbb
out
iret
adcb
sti
fucomi
pop
pop
fcoms
rcrl
iret
push
aas
jmp
loop
mov
sbbl
cmc
xchg
enter
inc
sti
push
mov
sbb
add
and
mov
xchg
mov
add
int3
dec
sbb
push
pop
movsl
sub
insl
ret
push
data16
call
jb
cld
movsb
xchg
mov
inc
cmc
mov
sbb
fwait
lcall
dec
mov
loope
lock
pop
pop
in
dec
or
jns
or
pop
dec
ret
xor
mov
fs
inc
pop
sbb
call
insl
and
dec
or
cltd
imul
enter
stos
test
stc
mov
out
ss
out
pop
sub
xchg
pop
pop
inc
nop
repz
mov
hlt
aas
sub
sti
jge
add
cld
add
movsb
mov
xchg
mov
mov
add
popf
cs
imul
out
mov
test
or
int3
mov
xchg
jmp
adc
out
pop
inc
rclb
pop
inc
push
mov
xchg
jno
std
dec
mov
sub
shrl
sub
aaa
xchg
mov
jae
in
dec
call
xchg
sbb
xchg
adc
jne
sub
xchg
jns
loop
inc
dec
in
lods
xchg
out
mov
adc
jl
inc
lcall
test
pop
adc
in
cmp
pop
push
scas
fstpt
cmovae
in
inc
dec
xor
push
mov
stos
imul
cmpsl
int
xchg
xchg
in
jne
mov
movb
aaa
insb
xchg
jmp
jge
aam
test
insl
mov
push
pop
pusha
out
push
sbb
imul
mov
sbb
and
sbb
stos
movl
int3
add
nop
rcrb
mov
mov
es
shrl
add
add
jns
stc
mov
test
mov
leave
jp
push
and
int
outsl
jo
sub
sbb
jbe
jle
in
mov
pop
stc
cld
add
cltd
ret
clc
sbb
xchg
cli
xchg
ds
push
inc
sub
pop
jmp
push
sbb
mov
test
mov
or
aaa
aad
lea
cmp
ljmp
xchg
push
pop
out
adc
inc
xchg
push
loope
gs
in
and
mov
mov
inc
adc
or
push
xchg
pop
push
loopne
dec
and
and
inc
les
xchg
data16
ret
dec
or
fmuls
roll
sbb
cwtl
imul
stos
or
inc
scas
movsb
incl
add
inc
outsb
adc
lock
adc
xchg
rol
mov
lea
ret
cmpsb
jnp
test
scas
cltd
adc
call
mov
mov
mov
pop
mov
jb
imul
pop
rolb
in
xchg
stc
in
push
and
dec
lret
call
popa
pop
addl
adc
add
negl
mov
enter
int3
mov
stos
xor
xchg
testb
cmp
lock
mov
pushf
fwait
push
aaa
pushf
mov
aam
mov
and
pop
lret
add
adc
xchg
dec
inc
pop
sbb
mov
fcompp
fsubs
fisubl
scas
mov
mov
out
dec
sub
jo
or
sub
pop
push
mov
pushf
sub
pop
xor
sub
sbb
sub
test
mov
repz
aas
imul
pop
jmp
rorb
aad
test
enter
dec
jecxz
dec
adc
in
and
push
test
dec
pop
pop
and
pop
dec
jns
aam
lret
fimuls
in
loope
mov
lcall
push
push
das
xchg
fildl
dec
dec
xchg
dec
data16
inc
xchg
mov
scas
add
push
adc
add
sub
nop
das
jl
out
cwtl
add
mov
add
push
imul
jl
icebp
sub
mov
fsubrs
cwtl
mov
pop
ljmp
into
out
push
jo
mov
inc
cmp
sub
mov
shrb
adc
jae
ret
sbb
sti
in
and
aad
or
leave
cmpsl
mov
xor
jbe
dec
stos
out
mov
mov
test
pop
test
cld
and
dec
add
cltd
aaa
or
popl
fcomps
inc
daa
mov
push
push
dec
inc
repz
xchg
out
fists
jnp
mov
int
xor
out
mov
add
sub
in
mov
jge
adcl
add
gs
jo
xor
aad
test
sub
imul
fimuls
adc
jl
sub
cmp
or
sub
test
push
xor
push
mov
push
inc
ret
sti
daa
sbb
lock
or
cmp
and
adc
mov
sbb
loop
test
je
xor
bound
ret
stos
pop
shrl
sbb
jb
daa
out
jle
fidivl
adc
cld
push
pop
jae
lea
fyl2xp1
lods
mov
xor
sub
pop
jne
mov
pop
dec
outsb
out
fwait
cltd
mov
dec
cli
jns
loope
xor
xchg
das
xor
and
addr16
jae
lahf
jnp
mov
stc
test
sahf
mov
ljmp
stos
addr16
and
push
in
mov
mov
mov
adc
push
xchg
or
mov
std
mov
push
xchg
out
xlat
dec
add
std
std
jle
hlt
mov
cs
aaa
push
mov
add
fmull
fstl
xor
sub
add
ds
and
ja
push
adc
xor
and
hlt
das
push
insl
dec
test
pop
inc
pusha
arpl
addb
testb
cmp
sbb
xor
loopne
mov
inc
data16
fcomip
jne
fcmovnu
mov
cmpsb
mov
aaa
lods
xchg
ds
mov
loope
sbb
cwtl
sbb
and
push
je
ja
pop
dec
mov
pop
xchg
loop
dec
out
pushf
test
sbb
mov
leave
test
cmp
inc
xchg
cs
into
mov
in
sub
mov
jmp
mov
arpl
xor
adc
inc
and
enter
outsb
adc
rorb
lahf
xchg
sub
mov
aam
repnz
mov
push
dec
push
dec
adc
cmpsl
adc
ret
fwait
les
xchg
aaa
xchg
mov
nopl
or
cmpsb
cltd
xor
rcrb
rclb
idiv
push
out
inc
stos
bound
sub
xchg
jge
and
mov
jns
xchg
ret
sbb
adc
add
adc
mov
push
arpl
mov
jns
mov
dec
xor
lahf
clc
mov
in
and
cmp
xlat
jecxz
or
imul
iret
xchg
adc
lea
cwtl
idivb
jg
gs
mov
sahf
decb
data16
nop
mov
inc
cli
ss
mov
sbb
pushf
cmc
incb
fsubp
push
psadbw
xorl
ss
daa
fidivrl
inc
mov
xor
pop
ljmp
loope
pop
lods
aad
cmp
push
shlb
or
inc
aaa
ja
das
outsb
subb
out
idivb
jo
lea
xchg
push
sbb
inc
gs
sbb
jnp
ss
test
add
fidivl
cmp
mov
jg
mov
dec
int
or
inc
inc
cli
test
decl
sub
fwait
inc
xchg
jne
into
adc
sbb
adc
je
dec
sub
das
mov
cltd
fnsave
daa
jmp
aad
sub
dec
mov
sub
div
push
inc
cmp
fsts
cmp
mov
stos
rcl
xchg
shrl
mov
or
sub
or
test
test
bnd
sbb
or
into
sub
pushf
and
pop
cs
ss
test
pop
cli
inc
push
imul
add
sbb
push
cmp
pop
jns
repnz
push
in
or
xchg
gs
sub
scas
int3
cmpsb
ret
int
sub
mov
cli
das
mov
mov
mov
andb
push
cs
sub
ret
push
imul
out
into
imul
loopne
xchg
and
dec
in
jp
xor
call
imul
xor
loope
js
or
or
adc
push
ja
xchg
inc
hlt
in
stos
push
repnz
imul
and
sbb
sahf
stos
cmp
sub
jnp
sti
adc
loope
imull
xlat
mov
pusha
and
push
sbb
stc
movsb
mov
sub
xor
jl
push
mov
xlat
sub
mov
jp
fisubs
hlt
sbb
jbe
iret
ss
xchg
dec
aaa
popa
cmp
mov
and
fcoms
jmp
loop
xor
cmc
popa
and
xor
jmp
xor
lock
dec
pop
fiaddl
imul
sub
aaa
push
dec
add
movsb
pop
insb
jg
out
rolb
inc
out
sbb
scas
insb
push
adc
push
mov
testb
dec
add
dec
mov
and
sahf
xchg
clc
sbb
loop
xchg
lods
dec
adc
sbb
mov
push
dec
sbb
sbb
jae
add
xor
testl
pop
ret
cmp
ficompl
or
xchg
pop
lret
push
inc
aad
arpl
cltd
fildl
loope
stc
and
cmp
nop
imul
add
fwait
insb
dec
aam
mov
adc
les
or
xlat
cmp
sub
mov
and
icebp
or
es
pop
pop
cwtl
fldt
scas
push
mov
xor
mov
imul
push
movsb
sub
inc
jmp
outsb
lahf
add
inc
xor
hlt
out
jg
cwtl
mov
xchg
push
adc
imul
das
in
mov
fmul
jb
sub
sub
mov
adc
adc
mov
jmp
sbb
inc
scas
inc
adc
ljmp
inc
outsl
in
and
imul
fsubrs
mov
aam
das
sub
inc
lret
pusha
pop
cmp
loop
jmp
or
dec
cwtl
nop
xor
test
inc
xchg
rolb
ja
inc
or
jg
nop
or
ss
inc
fisubrl
das
add
xchg
jb
in
popf
or
popa
inc
cld
lods
loope
jmp
and
inc
xchg
adc
enter
mov
adc
lcall
cmp
push
cmp
ret
or
and
jno
aas
scas
cmpsb
scas
js
jb
aad
xchg
pop
lds
push
in
cmp
add
sbb
roll
int
icebp
rclb
push
sbb
pop
push
mov
pusha
pusha
inc
inc
loop
dec
fistl
jge
mov
add
push
xorl
jl
xor
cmp
fwait
imul
cmp
cld
adc
dec
jge
out
insb
mov
or
out
jl
add
pop
fistpl
pop
push
cmp
pop
data16
mov
adc
add
or
inc
sub
fbstp
jns
lret
add
shl
aad
mov
cmp
push
mov
test
pop
jns
sub
scas
sub
shl
xor
shrl
clc
pop
jo
in
repz
scas
dec
imul
push
lods
shrl
shrl
dec
insb
pushf
jae
push
dec
add
and
dec
rclb
jle
cmc
lods
fldt
nop
jno
mov
adc
and
and
push
arpl
mov
mov
test
call
sub
sbb
sub
sub
insb
dec
lea
inc
add
stos
xor
cmp
fdivrs
nop
and
jl
inc
dec
fdivp
jbe
lock
pop
pop
push
inc
cmpsl
push
mov
fidivrl
jo
test
scas
mov
nopl
subl
mov
or
ja
mov
jmp
sbb
in
movsb
imul
jmp
mov
movsl
sbb
xor
ret
loopne
mov
mov
sub
js
mov
pop
in
lea
stc
pop
mov
out
or
jbe
data16
xchg
insb
push
ja
cltd
iret
add
test
push
jmp
sarb
stos
push
mov
sbb
jne
push
mov
shl
cmpsb
loope
jns
movsl
fs
movsl
sub
xchg
outsb
dec
add
fldcw
imul
cli
roll
outsb
imul
pop
and
lcall
jl
or
aam
push
xchg
sbb
or
and
add
ds
shll
push
and
lea
xor
dec
jnp
or
mov
jmp
es
in
push
sub
std
daa
rcll
int
xchg
mov
xor
roll
adc
sti
addr16
popa
addr16
mov
xchg
xchg
subl
sahf
nop
xorl
jnp
xor
mov
mov
jge
lock
leave
sbb
mov
xor
fbstp
lret
lret
pushf
push
push
dec
mov
mov
mov
xor
push
insl
mov
test
sbbl
lea
xorb
fcoml
repz
sti
xor
sbb
sbb
aas
lret
leave
mov
sbb
mov
das
xchg
push
clc
add
imul
adc
stc
mov
sub
into
shrb
or
call
cmpsb
push
icebp
or
pop
inc
in
outsl
push
pop
dec
sbb
imul
sub
out
enter
sbb
xchg
bound
inc
out
and
cmpsl
mov
push
stos
outsl
jecxz
push
sbb
pop
dec
in
push
push
mov
xchg
subb
cs
mov
addl
xlat
decb
push
push
dec
out
lret
lsl
cmp
sub
adc
aaa
loopne
stc
cltd
sub
leave
int3
jecxz
and
or
xor
cld
icebp
mov
loop
push
fmull
flds
test
decl
mov
orb
mov
rcrl
adc
push
iret
lods
das
xor
sbb
adc
pop
pusha
mov
or
jmp
aam
and
mov
pushf
push
add
in
or
xchg
test
jo
add
rcll
leave
jbe
sub
insl
and
add
leave
jno
xor
clc
icebp
iret
sti
not
mov
orb
and
sbb
sbb
mov
cltd
lods
cltd
sbb
jo
mov
cmp
lds
loopne
test
add
or
add
daa
mov
in
xchg
jno
outsl
jb
repz
sub
pop
mov
inc
xchg
xchg
push
incl
cmc
push
mov
jp
mov
xchg
icebp
adc
pop
hlt
test
pop
mov
inc
test
andl
repnz
jge
bound
into
arpl
test
inc
push
sub
pop
add
adc
fiaddl
es
xchg
loop
pop
nop
adc
enter
cmp
xlat
cmp
cmp
pop
add
xor
fwait
aaa
push
push
es
pop
mov
xchg
or
stos
and
roll
mov
mov
xlat
or
xchg
roll
pop
sub
pop
sub
lds
xor
jp
sarb
push
aas
test
push
inc
jg
mov
push
push
shll
jge
mov
mov
out
pop
pusha
cli
cli
call
data16
test
jns
and
rcll
shlb
and
inc
imul
test
xchg
loope
or
sub
call
adc
gs
jb
sub
movsb
or
in
mov
cmp
sbbb
pushf
mov
movd
cmp
sub
lcall
into
cmp
xchg
rcl
pop
fstpt
jp
cmp
ficomps
arpl
xor
rol
hlt
insb
fs
pop
aam
add
and
fwait
sub
iret
or
aaa
mov
in
sbb
push
sbb
cld
and
add
in
int
sbb
mov
jmp
xor
or
repnz
jp
leave
jmp
inc
daa
mov
mov
ret
mov
or
mov
and
loop
mov
shlb
les
push
repz
fwait
inc
sbb
xchg
jnp
sar
leave
test
mov
fbld
cwtl
or
loope
mov
mov
or
shl
js
inc
xchg
insl
iret
sbb
nop
pusha
jae
ljmp
in
or
xchg
sub
sbb
in
sbb
je
cmp
test
push
fnstcw
and
lcall
aam
mov
pop
pop
sub
and
aaa
add
pushf
mov
cmpsb
pop
test
rorb
fs
cmp
jecxz
dec
push
push
sub
pop
arpl
movsl
outsl
or
aam
mov
or
movsb
dec
adc
sub
orl
out
xor
les
outsb
push
mov
pop
dec
pop
jo
mov
lret
xchg
and
mov
jmp
lahf
jecxz
divl
movsl
lret
bnd
aad
movsl
mov
jno
adc
mov
mov
mov
ja
rorb
cmpsl
inc
dec
insl
mov
enter
int3
sub
roll
clc
cld
scas
pop
pop
inc
je
mov
iret
cmp
gs
arpl
cmpsl
cltd
rcrl
sub
add
fs
and
jle
xchg
jno
lret
add
mov
cmc
jno
or
fcmovb
in
movsb
in
sbb
es
iret
repz
sbb
lcall
push
fidivrl
sbb
sahf
add
pop
mov
imul
sbb
dec
arpl
mov
daa
les
dec
and
adc
add
dec
xchg
jnp
scas
or
or
sarb
push
jmp
in
lcall
or
and
popf
push
mov
in
jmp
and
xchg
add
sar
add
push
subl
popa
in
push
jae
add
cwtl
pop
mov
scas
push
jmp
pop
pop
out
push
dec
xchg
mov
cmp
addl
cltd
mov
fisubrs
dec
dec
pop
repz
leave
cwtl
xor
sbb
pop
lods
rorb
cmpsb
pop
lea
sbb
test
fildl
das
hlt
ljmp
pop
mov
fisubs
add
outsb
fdivrs
lret
out
pushf
cmp
cmpsb
jne
mov
out
adc
mov
xchg
mov
ss
loope
mov
and
cld
sub
dec
in
dec
movl
leave
xor
lock
addr16
dec
inc
aad
cli
test
pop
popf
stc
jmp
rcrb
cmp
jnp
xchg
ficompl
scas
std
mov
cmpsb
mov
mov
jle
sub
hlt
mov
jmp
jge
lods
test
inc
rolb
lcall
pop
pusha
push
or
mov
incb
cmp
inc
sbb
mov
xor
and
in
jmp
and
jbe
push
xor
aam
fldenv
popf
add
inc
pop
mov
arpl
xor
adc
xor
enter
pop
out
pop
push
mov
inc
mov
jecxz
les
push
dec
push
movsl
nop
add
pop
xor
cli
gs
mov
pushf
lret
and
out
mov
add
adc
push
add
xor
xchg
mov
movsb
sahf
ss
and
mov
adc
shrb
and
ret
js
mov
and
fs
mov
mov
mov
push
aaa
sbb
ja
dec
outsb
hlt
fstpl
jl
loopne
aas
adc
jle
push
and
jns
push
mov
xlat
mov
cltd
inc
adc
out
sub
sbb
or
movsl
dec
push
add
xchg
in
jae
dec
scas
fwait
pop
shll
pusha
insl
adc
push
les
adc
mov
cltd
and
dec
xor
pop
inc
and
xor
daa
mov
xor
das
fisubrs
push
repnz
movsb
mov
cs
mov
mov
scas
jno
mov
jle
imul
and
movsl
in
jno
sub
mov
adc
loop
lea
cmp
xchg
aam
and
test
insl
jo
xchg
int
mov
arpl
rclb
adc
push
add
insb
shlb
sub
add
imul
sbb
cmp
push
ja
movsl
dec
stos
outsl
mov
int3
xchg
mov
fisubrl
sbb
iret
cwtl
call
ret
cmp
adc
mov
sub
movsl
xor
mov
dec
imul
popa
dec
jbe
inc
cmp
in
pop
and
xchg
jg
inc
leave
mov
cli
pop
por
into
jb
fsubs
loopne
adc
fstpt
insl
xor
enter
imul
ficoms
aas
movsb
sub
mov
scas
pop
scas
add
xor
arpl
push
idivl
or
cld
mov
fsts
xchg
jae
aad
xor
cwtd
insl
fs
ds
fmul
ret
dec
mov
mov
imul
lock
push
mov
rorl
push
mov
add
loope
or
cmp
xchg
cld
xor
mov
pop
stos
roll
inc
adc
or
or
or
pushf
xlat
adc
nop
mov
sbb
add
cmc
ljmp
or
sti
mov
cmp
or
ret
cmc
jne
push
jns
fldenv
pop
push
loop
or
pop
hlt
aam
divl
enter
push
ret
and
dec
mov
cmc
add
aam
imul
pushl
icebp
adc
xor
lret
nop
push
jge
and
jp
sbb
and
add
mov
scas
pop
lds
lret
fcmovne
pop
scas
pop
jp
sub
xor
sti
jb
xchg
jge
jne
push
pushf
adcb
push
in
lcall
xlat
inc
les
jae
into
jmp
dec
and
nop
sbb
cwtl
loope
lret
aas
jne
cmp
sbb
dec
push
jmp
cmp
popa
inc
cmp
inc
out
outsl
filds
in
imul
mov
and
pop
in
cld
outsl
ret
out
pop
mov
roll
xchg
lods
jl
mov
out
mov
sub
lock
mov
lods
dec
sub
rol
or
xchg
rcrl
int3
jae
xchg
addl
sub
sub
cwtl
jbe
push
sub
out
jl
cli
mov
sahf
stos
mov
fldenv
mov
fwait
push
rolb
mov
inc
and
mov
rorb
xlat
sti
nop
xchg
mov
add
push
into
ret
xor
test
mov
je
notl
js
mov
ficompl
inc
or
popa
or
imul
mov
adc
xorl
loope
icebp
adc
inc
cmp
sub
jmp
mov
fcoms
fstps
pop
mov
int3
test
int3
and
addr16
mov
arpl
shrb
ljmp
mov
dec
addr16
xlat
inc
repz
mov
jae
pop
xlat
pop
ret
push
cmp
adc
pop
test
xor
add
mov
inc
push
int3
ja
mov
or
fsubl
cwtl
js
inc
jle
andl
sub
mov
ja
dec
pop
mov
pop
dec
divb
bound
dec
sbb
pop
les
fisubrs
xchg
pop
add
insl
xchg
jmp
pop
jg
or
iret
jl
in
mov
in
pop
and
mov
into
sub
inc
mov
hlt
mov
adc
xlat
jmp
adc
sarl
cmp
fnsave
add
aaa
enter
pop
add
adc
mov
push
out
or
xchg
sub
call
nop
shlb
inc
jnp
dec
cmpsl
dec
adc
mov
in
add
mov
mov
pop
add
scas
xchg
mov
xchg
mov
cli
and
in
lahf
aas
cmp
fs
inc
or
loop
stos
shll
in
sbb
xor
mov
aad
xor
inc
stos
xorl
sub
fnsave
stos
stos
mov
mov
cmp
sahf
mov
and
fcoms
incl
ret
jle
xchg
mov
mov
outsb
idivb
pop
iret
mov
push
mov
inc
popf
sahf
push
adc
push
mov
lcall
cmpsl
dec
mov
dec
ljmp
mov
rcll
push
adc
xor
es
xor
mov
mov
add
xor
push
sub
xchg
cmp
adc
and
xchg
mov
rcl
rolb
loope
in
popf
jo,pt
add
ret
jmp
and
fwait
and
mov
jecxz
movsl
lret
and
inc
pusha
nop
adc
adc
stos
sub
cltd
iret
xchg
and
mov
fldt
sub
xchg
js
lahf
cmpsl
dec
lret
mov
xchg
inc
pushf
push
mov
mov
xchg
xor
sbb
xlat
push
pop
ss
ficompl
andb
or
rclb
andb
out
lods
pop
add
and
ss
push
push
push
nop
lret
adc
enter
imulb
notb
std
xor
xchg
jno
scas
nop
lret
sbb
push
jae
cmp
sbb
test
pop
push
cmpsb
mov
dec
shrl
and
inc
cmp
xchg
shlb
out
mov
pop
jae
popa
jno
fldenv
inc
jns
mov
push
lock
int
lret
out
sbbb
mov
popa
jl
mov
xchg
mov
jle
fidivrs
ret
fisttpll
mov
xchg
jle
mov
out
push
pop
fsub
out
and
jnp
inc
jae
sti
mov
jo
scas
pop
or
xchg
cmp
adc
icebp
pop
movsb
ljmp
aas
outsb
cwtl
add
push
jnp
out
push
aam
cmc
lcall
mov
xchg
inc
clc
ror
imul
and
inc
push
dec
xlat
enter
addb
rcrl
xchg
xchg
push
sub
add
jl
adc
adc
add
adc
push
cmpsl
xlat
enter
imul
pop
xchg
pop
jae
sbb
mov
fldcw
scas
int3
scas
js
sub
lea
cmp
or
sub
lret
stos
subl
ret
push
inc
aas
dec
pop
cltd
xlat
sti
aam
push
sahf
mov
das
mov
adc
sub
fwait
pop
add
out
cmp
mov
ja
cs
lea
dec
cmp
cwtl
mov
out
inc
push
mov
push
or
fmulp
inc
aaa
or
cltd
inc
sbb
mov
imul
popf
fcmovnb
loope
jg
mov
dec
mov
push
test
fdivrs
inc
das
xchg
mov
push
bound
add
and
jbe
or
jno
mov
jecxz
scas
or
xor
mov
mov
and
jle
jge
sub
rep
call
mov
and
in
cmpsl
leave
mov
ret
jmp
xchg
daa
cltd
mov
mov
mov
divb
add
stc
jb
cli
sbb
into
lock
xchg
add
dec
dec
or
mov
out
xor
aaa
ja
xor
test
scas
pop
mov
aas
inc
xchg
stos
mov
icebp
cmc
jecxz
xchg
loop
insb
push
ffreep
into
cmp
mov
or
cmpl
stc
outsl
or
push
inc
outsb
jmp
add
xor
xchg
in
mov
fsubrs
mov
ret
adc
jg
mov
jae
xchg
jbe
out
mov
xor
jecxz
inc
loope
lret
out
push
stos
fstpt
inc
mov
fld
xchg
cld
inc
jge
dec
ljmp
arpl
cmpsl
addl
mov
xor
inc
test
sub
push
dec
lret
mov
dec
xchg
mov
out
repnz
push
or
jo
loop
xchg
sbb
stos
inc
js
cmp
sbb
mov
or
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
in
sub
jmp
jl
jmp
in
les
inc
xchg
in
arpl
push
push
stos
cmp
daa
or
mov
fnstcw
out
int
jno
mov
mov
mov
cmpb
shr
jae
jp
adc
and
pop
xor
push
cmp
and
mov
jmp
adc
mov
mov
inc
mov
cmc
ljmp
test
inc
or
jmp
or
mov
lock
hlt
push
pop
stos
repnz
mov
pop
inc
addr16
xchg
add
lret
pop
sub
in
lahf
bound
or
sbb
lahf
shlb
adc
ds
xor
or
mov
inc
mov
push
filds
jbe
imul
mov
mov
stos
cmp
mov
dec
iret
xor
add
jg
shrb
test
lock
or
pop
cmp
in
cmp
dec
mov
xchg
js
fnstcw
lahf
sub
icebp
scas
or
sub
cmp
pop
mov
mov
mov
repnz
inc
leave
and
cmp
push
loope
aam
pop
mov
pop
mov
inc
inc
mov
mov
adc
pop
mov
pop
imul
pusha
pop
arpl
cmp
mov
gs
adc
mov
jp
aaa
sub
pop
pop
into
inc
sahf
fnsave
xchg
pop
xchg
lea
insl
test
fcmovbe
xchg
adc
sbb
pop
js
xlat
mov
adc
in
jmp
lret
sahf
loop
and
push
add
dec
sub
sbb
in
outsb
cs
xchg
ljmp
dec
mov
in
push
mov
enter
mov
ret
adc
adc
mov
jno
fxch
jbe
shll
cltd
inc
ret
lods
add
loopne
aaa
std
fcomps
repz
sub
data16
js
sub
push
arpl
ss
and
fdiv
outsb
mov
inc
lcall
aad
mov
inc
xchg
int
fsubs
fimuls
call
adc
inc
inc
jae
andb
adc
push
movsl
inc
jbe
fidivrs
nop
sub
cltd
enter
aaa
lret
test
shlb
aad
je
arpl
cs
push
cmc
frstor
and
sub
repnz
xor
aad
xchg
ds
in
aam
xchg
out
testl
cmp
or
lret
pop
mov
adc
out
xlat
add
sbb
push
jmp
cmp
ss
iret
std
mov
mov
or
insl
mov
out
cmp
enter
test
inc
test
push
inc
fcoms
mov
call
or
icebp
fcmovbe
into
mov
repnz
int3
pop
dec
mov
faddl
push
bound
stos
ljmp
stc
aad
das
push
movsl
mov
jle
adc
and
pop
inc
scas
fnstcw
mov
cli
test
int3
inc
push
outsb
stos
sbb
lea
add
mov
sub
jp
jmp
shlb
add
test
jnp
out
inc
inc
xchg
shr
scas
into
cmp
popa
imul
xchg
jo
aaa
ds
sub
fimuls
fisttpl
sub
push
mov
insb
mov
popa
mov
faddp
xor
shrl
mov
in
jge
cs
cmp
mov
mov
popl
jne
incb
call
movsb
jmp
fnstcw
int
add
adc
testb
add
adc
outsb
mov
jnp
jno
add
pop
ds
sub
sbb
in
xchg
fisttpl
fidivs
fstpt
je
aaa
loop
mov
sbb
popf
mov
cmpb
mov
inc
sub
xchg
pop
insb
pop
dec
dec
lea
mov
int
arpl
js
shll
jmp
fidivrl
push
push
jnp
shll
faddl
dec
dec
lahf
nop
cmp
call
iret
lods
cmc
mov
xchg
rcrb
pop
movl
mov
pushf
out
mov
cld
ds
lock
xor
mov
jne
pop
dec
jl
clc
xor
rcll
add
mov
pop
add
or
mulb
lret
pusha
add
outsb
in
mov
mov
cmc
mov
ja
dec
mov
into
ljmp
jb
iret
psubq
push
and
mov
popf
inc
pushl
mov
sub
insb
fmul
xor
sti
sti
notl
sbb
jecxz
jb
cwtl
mov
pop
icebp
dec
ljmp
add
in
jnp
scas
les
mov
pop
jns
mov
adc
dec
outsl
xor
cmp
jge
cld
ret
dec
movsl
test
pushf
jmp
mov
inc
sbb
ja
cmp
push
xchg
insl
lods
hlt
xor
dec
or
jmp
sbb
jo
insl
push
insb
insb
ror
add
jmp
out
mov
cmp
cltd
mov
or
cmc
cmp
cmp
jp
mov
neg
mov
push
jo
pusha
faddl
scas
je
push
push
imul
aad
lock
mov
xchg
addr16
out
push
push
sbb
cwtl
dec
loopne
or
sti
enter
xor
sbb
insl
dec
imul
xor
cmp
fs
dec
cmpsb
in
shlb
ds
repnz
push
sbb
out
dec
jns
hlt
clc
int
inc
ror
mov
imul
lods
movlps
push
or
jne
in
pop
mov
pop
lods
lahf
in
mov
xchg
inc
stos
and
and
je
ja
pop
dec
push
int3
sahf
mov
imul
pop
lcall
insl
mov
xor
jne
out
fyl2xp1
pop
sbb
or
int
test
loope
rolb
push
adc
xor
inc
sub
dec
and
mov
shl
mov
rcrl
xchg
dec
push
int3
mov
jle
lret
out
jg
sti
cli
xchg
inc
popa
pop
jp
pop
shlb
xlat
cmc
ljmp
je
sub
xor
mov
jge
loope
lahf
add
jg
jo
aam
push
cmpsl
aaa
mov
call
imul
push
cmpsb
xchg
ret
sbbl
cmpsl
addb
mov
push
repnz
or
inc
xchg
dec
mov
mov
ja
cld
fs
popa
inc
and
jb
das
loope
jl
mov
lret
scas
les
lcall
pusha
and
jo
mov
shlb
lea
and
in
cmp
rcr
mov
dec
cmp
sbb
and
call
lds
push
xor
call
push
popf
and
movsl
sbb
test
sbb
dec
mov
adc
imul
jb
mov
xor
in
test
cmpsl
jecxz
jecxz
shll
mov
adc
addr16
aas
mov
lahf
sub
inc
cmp
cmpsb
sti
ret
cltd
les
dec
pop
pop
or
lret
mov
sub
or
les
add
aam
imul
add
enter
ficoml
mov
sarb
adc
mov
aas
inc
and
mov
clc
sub
dec
jnp
xorb
xor
movq
nop
add
sbb
sub
cmp
les
mov
xchg
mov
or
xchg
push
aaa
mov
jge
pop
jnp,pn
dec
push
sarl
jmp
test
ja
cmp
sarb
daa
lret
pop
jecxz
add
ficoml
inc
mov
jnp
cmp
mov
je
inc
jmp
mov
jns
mov
xchg
mov
or
rcrl
arpl
xchg
dec
rclb
pusha
mov
int3
sub
out
std
jle
out
adcb
jg
jecxz
cmp
xchg
push
cs
jl
in
nop
pop
sub
fcoms
shrb
xor
into
data16
outsl
fcom
cmp
jg
xor
adcb
inc
fsts
sub
mov
lea
sbb
jge
daa
push
and
rorb
pop
loope
xchg
or
test
xchg
push
loop
imull
cmp
in
push
mov
int3
jns
les
fimuls
jle,pt
testb
xor
inc
lods
pop
addr16
loope
xchg
stos
prefetcht2
inc
dec
cmp
iret
nop
mov
pop
call
push
dec
sbb
insb
pop
shrb
add
sbb
sbb
mov
adc
push
mov
shrl
cmpsl
leave
mov
outsb
or
std
mov
push
mov
cmp
dec
rol
jae
mov
and
push
pusha
stos
cmpsb
cld
test
push
and
push
out
jl
iret
mov
sbbl
push
mov
push
popa
insb
imul
sti
mov
jmp
adc
std
mov
rolb
push
scas
push
and
idivl
mov
pop
pop
mov
inc
push
mov
sbb
fwait
imul
mov
jbe
out
pop
inc
sbb
shlb
mov
lods
ds
add
loopne
jl
mov
sbb
addr16
arpl
cs
stos
push
push
int
dec
icebp
pop
push
stos
mov
stc
iret
js
jb
pop
mov
xor
test
outsb
popa
cs
aad
pop
adc
rcll
ret
pop
mov
cmpsl
cmp
dec
mov
sarl
xchg
out
inc
pop
add
mov
mov
xchg
lea
loop
adcb
push
ljmp
mov
out
test
push
out
xor
mov
lahf
add
jle
or
shrl
push
mov
push
sahf
xchg
mov
ds
jbe
dec
stos
ret
or
mov
insl
insb
inc
repz
lret
jno
ja
xchg
cs
mov
les
xlat
dec
cmpsb
ds
stos
add
orb
inc
ds
pop
dec
jecxz
xchg
inc
sub
push
loopne
jmp
adc
lahf
inc
and
fdiv
test
orb
cmp
cmc
inc
out
cli
sub
fwait
ret
lods
add
or
leave
inc
jb
jne
cmp
mov
mov
loopne
out
mov
sub
popf
xor
enter
scas
jmp
and
loop
repnz
outsb
std
and
xor
add
inc
cltd
and
lahf
adc
lcall
push
leave
repnz
pop
leave
fwait
ja
out
inc
lock
jmp
sti
loop
xor
adc
addr16
or
rorl
int3
cld
sub
sahf
mov
dec
inc
out
mov
push
pop
loop
lods
xchg
jnp
mov
imul
int3
xor
adc
push
fcmovu
lods
test
popa
test
or
cwtl
scas
ds
sub
xchg
xor
cld
inc
push
add
lea
daa
mov
and
std
sub
inc
add
push
cld
outsb
popa
outsb
popa
inc
xor
sti
mov
sub
jo
add
pop
std
mov
adc
mov
push
divl
data16
stos
ret
ficoms
repz
dec
xlat
sub
sub
xor
hlt
mov
negl
push
dec
push
pop
fbstp
fwait
divl
mov
ret
aam
lcall
jge
stos
fsubs
xor
jl,pn
xchg
sarl
enter
bound
dec
cmp
cmpsl
dec
lea
cmc
inc
pusha
nop
arpl
test
mov
jmp
aas
lods
popf
stos
lret
xchg
shl
sub
dec
adcl
jb
sub
inc
in
jns
imulb
mov
cli
outsb
cmc
adc
and
lea
lret
push
sub
fwait
cmp
jg
sub
sub
add
mov
jp
and
push
ds
lock
out
mov
ret
mov
cmp
imul
add
shrb
daa
and
inc
mov
push
iret
adc
fnstsw
fldenv
lahf
mov
dec
cwtl
lods
repnz
cmp
sbb
test
movsb
fwait
jmp
inc
cmp
aas
rcll
mov
imul
pop
shr
pop
hlt
in
mov
mov
nop
add
ds
leave
loopne
rcrb
in
adc
xor
pop
out
inc
clc
push
mov
adc
cmpsl
shll
lock
and
test
not
stos
pop
mov
push
ds
in
adc
mov
stos
int3
push
mov
testb
shll
pop
xchg
inc
sbb
les
mov
test
sbb
xor
xchg
sub
sbb
xchg
mov
or
and
cmpsb
incb
mov
cmp
cli
inc
lahf
and
dec
iret
lret
les
dec
aaa
enter
inc
movsb
orb
sub
pop
push
dec
cmp
jno,pn
push
fs
shl
mov
pushf
outsb
and
jns
jne
in
pop
adc
rol
lock
popf
jecxz
filds
in
push
and
lea
sbb
lds
push
aaa
pop
insb
mov
inc
hlt
add
mov
mov
adc
and
inc
aaa
fisttpl
cmp
pop
jl
xchg
es
cmpl
lret
les
testl
imul
pop
add
repz
mov
js
movsl
sbb
cmp
sub
mov
in
jo
jnp
and
push
fdivs
adc
cmpb
adc
sbb
push
fsub
test
adc
adc
ret
fucomip
mov
cltd
sbb
stos
aam
movsb
fsubr
sbb
pop
mov
lds
sbb
scas
sub
lret
in
pop
addr16
sahf
fidivl
cli
popa
scas
popf
pop
cmp
stos
out
repz
or
push
jge
xchg
pop
mov
xchg
cmp
mov
and
iret
add
shrl
shrb
stc
push
daa
xchg
movsl
jecxz
pop
lods
scas
leave
jg
jmp
xchg
lcall
cmp
jno
push
outsb
dec
pop
sbb
inc
sub
in
or
inc
leave
push
loopne
sub
pop
cwtl
mov
movsl
movsb
or
cli
pop
or
fs
cmp
jae
dec
movsb
ficoml
inc
xchg
gs
cmpb
xchg
cltd
in
adc
pop
add
in
cmp
loope
hlt
pop
out
mov
jmp
push
mov
imul
push
sbb
lea
cmc
or
cmpsl
call
cld
out
and
sub
fstpt
sbb
adc
adc
sahf
jle
add
testl
jp
jae
jecxz
add
xor
enter
xchg
and
aas
push
xor
aaa
or
cmp
cltd
scas
out
fistpll
jecxz
hlt
lahf
faddp
icebp
and
push
shll
sub
mov
sub
mov
inc
lods
xchg
data16
add
sbb
imul
arpl
dec
inc
xor
adc
daa
adc
filds
cmp
rcl
push
incb
sbb
scas
or
leave
les
dec
xchg
outsb
enter
push
rolb
push
mov
repz
imul
std
insb
insl
ret
mov
push
insb
into
fistpl
jmp
jecxz
fildll
pop
pop
jno
popa
pop
xchg
fidivrl
test
sbb
or
mov
sbb
xor
ret
rorb
cmp
lcall
adc
push
mov
sbb
aam
shll
movsl
add
sbb
imul
mov
clc
adcb
stc
ja
push
mov
xchg
shrb
jo
push
in
and
mov
ljmp
push
mov
jle
in
cmpb
or
fistl
aam
and
sar
jae
push
mul
mov
cli
pop
inc
dec
incl
add
mov
leave
mov
push
out
std
add
push
rcll
pop
and
adc
movsl
jb
mov
lea
call
push
pop
mov
dec
mov
loopne
loope
rorb
movsb
sub
dec
arpl
lds
test
inc
in
pop
pop
andb
cmp
mov
mov
fcompl
lahf
add
push
push
rcl
dec
xchg
popa
sub
rcrb
mov
je
pop
arpl
or
popa
xor
mov
mov
cmp
test
popf
ja
icebp
jle
push
xor
jge
and
test
sub
stc
negb
mov
xlat
push
sbb
repnz
jp
ja
cmp
inc
jle
pop
test
mov
fisubrs
daa
add
dec
xor
inc
or
lea
aad
pop
mov
xlat
xor
pusha
aaa
lock
push
xchg
push
jl
jge
fisttpl
stc
mov
sbb
jne
push
scas
push
xchg
in
add
pushf
mov
pop
cmp
push
stos
cmp
push
sub
pop
into
push
mov
in
shlb
inc
mov
gs
xchg
loop
sub
cwtl
pop
sbb
stc
sti
cli
imul
aam
movsb
lahf
cmp
xor
inc
cmp
pop
or
xor
or
adc
sub
pusha
in
sahf
jno
mov
mov
call
and
xor
frstor
dec
and
pop
setp
daa
sub
xchg
and
pop
push
cld
in
ljmp
mov
test
pop
mov
mov
cli
popf
adc
sub
sub
xchg
push
test
imul
jns
fs
sbb
add
xlat
imul
sbb
dec
lods
push
cmc
cmp
roll
mov
filds
clc
jne
jmp
lea
sub
int
jmp
xchg
fdivrs
and
dec
enter
lock
add
fnstenv
lods
shl
gs
outsb
push
jecxz
cld
mov
and
mov
push
les
xchg
scas
jmp
jp
mov
mov
lahf
xchg
lods
outsb
sbb
in
push
sarb
scas
push
or
jns
and
imul
jg
imul
hlt
sub
mov
cmp
pusha
xor
in
out
arpl
sbb
adc
outsl
imul
xorl
out
mov
ljmp
aam
xchg
pusha
cmpsl
pop
pop
cmpb
fists
push
je
mov
fwait
or
sbb
pop
ja
sbb
or
out
xchg
add
add
jg
sub
incb
inc
xor
jo
pop
and
stos
shl
rcrb
lods
fsts
push
daa
sti
sbb
cmpsb
in
mov
sbb
mov
idivb
insb
sbb
lea
mov
cmp
das
lcall
pop
pop
mov
push
cmp
lock
je
cmpl
mov
push
mov
push
adc
fmuls
aad
push
sbb
mulb
les
lods
mov
imul
mov
je
outsb
dec
scas
pop
mov
lods
aaa
lcall
sbb
mov
xchg
sbb
outsb
sbb
or
je
adc
pusha
stos
cwtl
dec
dec
sbb
loop
pop
inc
xor
jns
pop
or
adc
sub
mov
test
js
negb
lea
pop
xor
dec
pop
ret
iret
pusha
repz
cmp
movntq
out
shrb
addb
insb
pop
and
jmp
pop
cmp
inc
cld
sarb
cmpsb
xchg
push
ret
xchg
shrl
gs
daa
mov
mov
sbb
popf
in
dec
les
ficomps
mov
cld
lret
outsb
xlat
inc
jge
jo
cltd
fucomip
scas
cwtl
mov
pop
mov
jb
mov
dec
ret
xor
and
es
and
mov
push
mov
fwait
test
or
out
test
dec
lods
adc
pop
faddl
sub
jl
cwtl
cmpsb
push
adc
jo
mov
es
adc
sbb
je
dec
xor
add
loop
arpl
dec
lret
push
xchg
lock
mov
cmp
fldt
adc
div
push
lea
mov
dec
and
jb
arpl
dec
mov
clc
orl
mov
mov
mov
daa
fiadds
outsl
repz
sub
jle
es
arpl
insb
xlat
sbb
cmpsb
cld
dec
aam
jno
jge
cmp
lods
sar
cmc
pop
xchg
lahf
and
and
mov
outsl
outsl
mov
or
xor
adc
bound
out
mov
ret
adc
cwtl
pop
pushf
mov
fsubp
jp
sbb
fcmovbe
push
jge
push
in
mov
add
push
fdivr
out
rcrb
jecxz
adc
or
xchg
gs
push
cmpsb
ss
or
push
fwait
int3
xor
xor
sbbb
sub
push
sub
mov
popf
xor
add
push
lock
icebp
push
adc
xor
scas
rcrb
pop
dec
ret
dec
shll
add
ds
xchg
ss
or
mov
or
ja
repnz
mov
ljmp
lods
mov
ret
or
mov
scas
fwait
cmp
test
test
jae
mov
or
std
mov
aad
mov
dec
and
mov
mov
dec
ds
jmp
or
loope
mov
or
int
sbb
xor
negl
cmp
adc
cmp
dec
push
fisttps
scas
xor
out
sub
jb
jecxz
into
enter
leave
mov
xor
in
sub
cs
das
mov
insl
pusha
in
cs
notb
xchg
mov
lahf
hlt
icebp
xchg
sub
and
aaa
out
fisttpl
inc
adc
movl
sbb
xchg
mov
scas
mull
sbbb
jae
ja
or
or
xor
xor
movsl
jbe
into
xor
pusha
dec
es
in
test
orb
cmp
mov
and
bnd
mov
jne
arpl
popl
or
test
jo
xor
adc
lahf
fdivs
and
rcll
mov
std
dec
enter
xor
into
iret
dec
mulw
sub
pop
aad
and
sbb
push
pop
adc
sbb
fcoms
out
decl
testl
xor
push
cmp
lret
dec
or
push
test
jg
xor
mov
les
xor
xchg
cmp
aaa
add
inc
out
scas
pop
sub
dec
jno
in
mov
or
or
xchg
je
add
inc
mov
mov
mov
outsl
addr16
pop
pop
push
inc
sub
addb
fildl
rcrb
and
aaa
push
ja
sub
mov
in
jg
push
dec
add
mov
sbb
fidivs
lock
insb
cmpsl
jecxz
adc
jecxz
imul
jbe
cwtl
adcl
das
xor
jg
je
push
ret
xchg
das
mov
mov
adc
pushf
movsl
shlb
lret
ds
into
sub
mov
aas
push
dec
mov
and
movl
loop
adc
or
mov
or
ret
dec
sbb
xor
ljmp
out
or
dec
clc
rcrl
cltd
push
inc
mov
stc
repz
aaa
cmp
pop
xchg
and
out
xor
push
out
repnz
repz
xchg
sub
mov
daa
out
icebp
sbb
insb
cmp
xchg
xor
cwtl
or
imull
mov
push
hlt
pop
fs
add
bound
ftst
xchg
pusha
out
mov
lods
add
loope
sub
xchg
jmp
xchg
jle
out
data16
out
or
xlat
adc
aad
xorl
push
insb
std
adc
stc
or
rol
mov
pop
push
xchg
xchg
xchg
imul
add
sahf
cmpsl
jno
and
fwait
pop
daa
into
test
stc
pop
push
jle
pop
into
gs
nop
scas
xchg
cmp
xchg
cmp
jmp
or
push
lahf
mov
jl
add
and
addr16
andb
pop
andl
sbb
testb
in
and
push
jb
and
enter
scas
add
mov
ja
dec
cwtl
jae
adc
add
jmp
pushf
jo
imul
mov
pop
daa
pusha
cmp
inc
add
inc
cmp
cltd
pop
adc
and
push
jbe
js
pop
add
inc
popa
arpl
lods
clc
loope
pop
inc
add
cmp
fstpl
inc
es
adc
jne
sub
push
orl
adc
jg
jg
dec
and
sub
daa
or
insl
inc
repz
xrelease
arpl
mov
xchg
jo
push
dec
push
push
subb
icebp
inc
inc
add
ja
dec
jns
cmp
cmp
fwait
add
pop
mov
in
ficomps
hlt
xchg
mov
testl
clc
cmp
stc
jp
add
ds
stc
test
mov
xchg
inc
mov
mov
inc
scas
hlt
add
dec
dec
dec
lock
or
push
sub
cmp
pop
jle
push
or
adc
jo
cmp
push
inc
out
pop
jp
daa
outsl
jg
pop
mov
pop
jne
enter
out
repnz
push
add
xchg
push
in
in
inc
mov
or
icebp
out
add
daa
cmp
cmpsb
xor
dec
pop
push
cmp
xchg
cmpl
or
add
test
iret
in
pop
dec
mov
xor
xor
sub
das
add
int
addr16
sbb
icebp
adc
or
leave
push
push
cmp
into
adc
test
mov
in
jno
jo
in
cmc
sar
icebp
test
xchg
mov
inc
adc
jnp
mull
dec
xlat
rcr
call
inc
dec
and
push
lock
shl
stos
adc
into
xor
arpl
xor
sbb
outsb
test
aas
sub
mov
inc
sub
fsubs
mov
push
sub
push
jnp
bound
outsb
lods
push
inc
jg
scas
xor
ds
adc
push
iret
pop
fistpl
lods
adc
aas
bsf
icebp
into
cli
sub
insl
test
out
mov
je
insl
push
lcall
out
call
mov
mov
mov
adc
mov
icebp
mov
out
jp
inc
fwait
nop
push
jmp
addr16
dec
stos
mov
cld
or
inc
rcll
std
imul
dec
jmp
sbb
pop
jp
dec
mov
stos
outsl
dec
sbb
inc
xor
stc
data16
cld
sti
aad
jl
lds
pop
les
xor
sbb
addl
mov
int3
fisttps
test
mov
ljmp
ljmp
je
adc
inc
dec
lods
rolb
sbb
sub
loope
out
mov
adc
mov
sbb
mov
and
cmpb
cmp
cmc
loop
add
mov
fistpl
lds
jge
pushf
mov
mov
leave
push
push
inc
lea
dec
lods
popf
or
pop
roll
mov
fs
mov
adc
pop
fsubs
stos
sub
xlat
pop
cmpsl
fs
sbb
adc
mov
movsl
add
mov
rcr
movsl
ret
rorb
outsb
add
add
stos
icebp
mov
popf
fs
pop
inc
add
xchg
divps
popa
mov
test
mov
bound
ds
lahf
imul
or
sub
inc
test
sbb
sub
push
xor
push
jp
mov
mov
mov
lret
cli
cmp
inc
lock
cmp
xchg
in
pushf
loope
xchg
loopne
dec
loopne,pt
popa
mov
inc
mov
push
and
fistpll
pop
adc
mov
cwtl
pop
pop
ljmp
pop
push
mov
mov
and
jb
xchg
loop
mov
and
icebp
in
shrb
xor
add
pusha
mov
mov
add
divl
popf
pop
arpl
nop
jmp
data16
mov
inc
dec
add
cs
cmp
sbb
rcrb
sbb
orb
xchg
inc
js
push
jg
xchg
mov
cmp
dec
push
inc
push
rcrb
daa
arpl
outsl
push
adc
ror
ja
push
shl
mov
and
add
add
shll
in
in
in
imul
popf
leave
loop
mul
bound
gs
mov
pop
addb
push
cwtl
jo
int
in
mov
add
shrl
mov
test
es
scas
out
dec
add
in
out
inc
push
add
orl
sub
rcrb
dec
mov
jne
outsb
mov
cmp
shlb
jle
cltd
xchg
std
inc
inc
into
jl
fidivl
mov
dec
icebp
ja
das
push
cltd
and
sub
jl
pop
dec
push
orb
sub
pop
repz
fwait
enter
popa
insb
inc
xchg
mov
fdivl
push
adc
setbe
bound
xorb
cmp
test
scas
xor
ja
orl
out
push
shll
jle
cmp
lgdtl
or
lods
inc
mov
insl
fiadds
jne
mov
inc
cs
je
lret
push
loop
fwait
cs
loop
aaa
icebp
and
leave
lret
out
fcomps
xchg
pop
fisubrs
mov
cmp
xlat
insl
in
xchg
pop
and
les
cltd
xchg
call
inc
inc
pop
hlt
out
inc
movsb
js
test
jp
pop
xchg
cli
int3
call
lret
adc
add
bound
adc
push
stos
pop
dec
pop
pop
push
js
xlat
lock
rclb
jmp
add
or
xchg
lcall
ss
aaa
push
clc
rcll
and
xchg
mov
mov
cltd
lods
pop
inc
pop
addr16
lods
adc
add
dec
in
mov
insb
xor
jle
pop
je
xor
adc
sbb
in
mov
sub
jge
sub
sub
ljmp
sarb
in
or
fsubl
imul
das
mov
xor
jb
push
cs
lahf
mov
pop
int3
jns
div
aad
pop
jl
xchg
jo
stos
xchg
lcall
stos
sbb
sub
mov
ja
inc
leave
dec
sbb
test
push
xor
cmp
adc
inc
adc
jp
loope
mov
adc
testb
xlat
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
dec
idivb
jl
pop
jl
icebp
pop
shll
mov
mov
pop
mov
scas
leave
add
idiv
sti
push
cmp
aad
movsb
inc
cmp
call
jecxz
test
test
pop
pop
lds
mov
push
push
sbb
jecxz
jl
aas
gs
mov
jae
add
sub
mov
cmc
and
iret
mov
call
sbb
lock
cltd
lahf
fdivl
mov
test
xor
mov
jle
jge
inc
int
mov
mov
mov
mov
ljmp
lods
or
sarb
arpl
stos
rcr
mov
adc
outsl
xor
cld
push
cmp
lahf
leave
adc
or
add
mov
addr16
shrl
mov
loop
stos
out
cld
push
mov
cs
xor
rorb
push
push
mov
sub
ds
movsb
rcl
movl
je
xchg
inc
or
xor
mov
daa
fistps
cltd
cmp
enter
cmpb
xor
xchg
stc
mov
sub
push
adc
cwtl
and
repnz
into
xor
add
andb
cmp
mov
outsb
mov
lods
cmp
jbe
out
aaa
enter
addr16
pop
lds
jge
je
cmc
pop
int
pushf
mov
aas
int
push
xchg
pushl
jns
or
jmp
loope
cltd
adc
push
or
mov
sarb
xor
cwtl
jmp
mov
callw
sbb
enter
data16
pop
or
mov
sbb
pop
addr16
and
mov
pop
cmc
icebp
sub
in
movsb
sbb
outsb
cmp
pop
lds
push
jl
bound
xchg
rcrl
push
fidivl
xchg
rorb
das
sub
pop
cld
or
outsl
pushf
leave
xor
add
mov
fmuls
dec
ret
mov
sbb
jecxz
xor
mov
movsl
test
push
out
lcall
xlat
dec
pop
and
mov
cmpsl
push
arpl
mov
xor
fcoml
loope
std
aas
movq
leave
in
adc
adc
inc
test
int
insb
cs
aas
push
or
orb
pop
daa
mov
pop
fwait
stos
shrl
lret
js
sub
push
bound
popf
loope
fsubs
repz
jno
jge
movsb
xchg
test
out
sbb
adc
inc
dec
sbb
test
mov
cmpsb
xor
jmp
xchg
jmp
jb
iret
jmp
leave
xchg
mov
cmp
mov
pmaxub
pop
push
insl
mov
stos
repnz
int3
jg
dec
mov
ja
pop
push
jge
dec
add
dec
aad
scas
fidivl
mov
insb
dec
clc
push
ljmp
inc
inc
loope
call
ficomps
push
push
jg
loope
mov
insl
pop
enter
push
add
adc
fwait
push
test
nop
rcrb
in
and
shlb
jmp
inc
push
xchg
mov
xchg
mov
dec
int
push
jp
adc
xor
in
mov
aaa
xor
cld
subl
rorl
sub
sbb
rol
pushf
loop
mov
ljmp
in
cmc
push
loop
xchg
sub
lahf
in
sub
cmp
mov
sub
shr
sbb
xlat
push
jbe
stc
loopne
sbb
add
cmp
jle
loopne
stos
or
cmpsl
test
inc
hlt
and
je
push
pop
mov
jnp
adc
fs
ret
inc
mov
push
pop
jne
inc
lret
mov
iret
sbb
mov
jmp
repnz
pop
xlat
adc
stos
mov
mov
std
xor
ret
sbb
and
icebp
data16
in
inc
testl
clc
sbb
cmpl
inc
lret
test
stos
mov
push
sarb
ljmp
arpl
iret
nop
cmpsb
test
subb
push
mov
flds
or
mov
xor
xor
xchg
loopne
hlt
sbb
outsb
fnstsw
xor
xor
nop
fsubs
adc
mov
push
pop
iret
push
dec
test
mov
mov
or
sub
mov
ljmp
inc
add
or
fisttpl
pushf
and
xor
jp
dec
ss
dec
xor
push
addr16
inc
cmp
xchg
sbb
push
lods
lock
pop
ds
add
loop
xchg
addr16
outsl
movsb
and
fsubl
popf
sub
lods
mov
xchg
fcomps
pop
int3
push
shl
jecxz
outsl
mov
sub
adc
cmp
or
xchg
shl
insl
imul
push
jnp
js
fdivrl
ret
xchg
fistl
sbb
inc
call
push
data16
pop
js
in
adc
xchg
or
jecxz
dec
mov
jo
and
pop
leave
jne
jl
cmp
sbb
dec
lret
int3
std
or
imul
push
sub
xchg
and
aam
jnp
xchg
test
xor
mov
not
jecxz
lds
cmpb
mov
push
jns
push
ret
call
int3
out
mov
or
xchg
loop
rcrb
mov
pop
adc
push
shll
js
xchg
js
push
adc
jnp
call
xchg
jmp
jns
and
jge
sar
xchg
jp
mov
mov
aam
je
ja
lods
orb
pop
adc
fisttpl
repnz
pop
popa
lea
sbb
jno
sub
fcomip
sahf
cmpsb
lcall
adc
inc
das
je
scas
inc
push
xor
into
fcom
lret
or
out
shlb
lret
lds
iret
mov
in
pop
push
add
dec
and
je
cli
push
add
pop
mov
out
cmp
jmp
incl
xor
sbb
outsl
mov
outsb
aam
into
jae
pusha
jo
sub
push
pop
mov
xchg
push
in
xor
mov
jo
push
imul
or
pop
addb
sbb
xor
cmp
sahf
aad
je
ficompl
cmp
mov
and
xlat
cltd
cmp
enter
push
jge
add
xchg
lds
rorb
pop
jb
jns
stos
ret
lcall
or
pop
xchg
fs
xchg
xchg
adc
jae
ret
cmc
imul
nop
notl
addr16
ficomps
pop
push
subb
iret
in
mov
adc
in
out
mov
imul
pop
push
rcrb
mov
test
mov
insl
sti
xchg
inc
int
or
add
mov
sahf
jl
outsl
scas
and
sub
push
std
jno
xor
mov
mov
inc
ffree
cs
fldt
dec
or
adc
stos
adc
sbb
scas
daa
ds
sub
push
into
fdivl
push
repnz
int
les
jg
clc
xchg
pusha
fninit
push
sbb
call
or
iret
sti
pop
cwtl
les
rclb
mov
sbb
sbb
pop
aaa
js
adc
and
push
es
mov
inc
push
daa
out
sub
cmc
arpl
jmp
roll
or
inc
mul
lret
pop
addl
jo
mov
sbb
pop
add
pop
push
dec
mov
dec
int3
inc
lahf
out
xchg
pop
das
aaa
cmp
or
lods
pop
icebp
call
and
bound
mov
icebp
and
in
pop
jo
push
jo
fiaddl
jmp
push
jno
and
enter
pop
test
xor
ss
mov
mov
xor
sub
push
add
pop
shlb
je
xlat
mov
pop
dec
push
andb
mov
add
mov
pop
xchg
mov
fstl
xor
push
xor
mov
dec
ficompl
xor
add
push
repnz
lds
in
xchg
add
repnz
add
xlat
xchg
mov
repnz
lea
pushf
cs
out
mov
shlb
push
call
mov
push
fsubrp
fs
popa
inc
mov
lret
inc
fimuls
sub
sub
scas
test
cmp
fnstenv
jmp
sbb
or
in
bound
push
out
out
mov
or
lds
lock
mov
pop
cmp
adc
out
mov
cmp
xchg
ja
adc
dec
loope
or
cld
movsl
cmp
ljmp
mov
dec
scas
and
scas
push
lret
jmp
sarb
mov
aad
sbb
push
push
popf
cmpsl
data16
cmpsb
test
mov
stc
push
mov
lods
cs
adc
pushf
mov
cmp
jbe
lahf
add
and
cltd
or
lcall
sti
jbe
dec
dec
adc
movsl
xor
popf
int
divl
or
ret
lcall
xor
movsl
sahf
or
lock
mov
jl
fbstp
les
jae
jmp
fisttps
movsb
jno
mov
lret
pop
sbb
jno
add
int
cs
sub
lods
and
lds
outsl
outsb
fs
mov
test
icebp
xchg
call
sbb
push
popl
movb
pusha
das
jg
dec
push
movsl
push
test
icebp
ds
inc
jns
xchg
in
push
ds
push
lds
hlt
inc
lret
rcrl
scas
pop
pop
scas
cs
jns
jne
icebp
dec
xchg
ficoms
mov
push
lock
pop
in
jb
inc
insb
cmp
xchg
aad
testb
adc
lret
cmpsl
add
out
xor
test
scas
adc
and
test
sti
mov
or
nop
jl
in
add
popf
xor
pop
adc
push
idivb
lods
sti
mov
pusha
stos
scas
pmullw
addb
fwait
inc
mov
adc
lods
fists
dec
lea
add
mov
push
dec
mov
daa
mov
add
mov
out
nop
shlb
out
iret
adc
cmp
aas
fadds
xor
ljmp
add
mov
mov
lods
mov
push
andl
jg
xchg
pop
cmp
xchg
xor
cmp
sarb
cmp
test
mov
cmpsl
dec
mov
outsb
and
hlt
hlt
push
adc
mov
and
pop
movsl
sarb
aas
push
sbb
sub
cwtl
mov
daa
pop
jns
lock
cmpb
clc
sbb
pop
in
repnz
loopne
pop
mov
loope
into
jns
mov
or
xchg
push
rolb
std
mov
pop
mov
mov
push
movsb
push
jno
mov
sahf
adc
call
les
fmull
lret
cmp
pop
pop
ljmp
push
pop
xchg
mov
sbb
xchg
pop
push
lods
pop
ss
ss
dec
push
mov
jnp
sub
sub
rclb
mov
enter
dec
sbb
imul
in
mov
jl
loope
and
popf
mov
xchg
xor
dec
ja
cwtl
insl
enter
pushf
aas
cmp
and
leave
push
jno
pop
mov
inc
dec
adc
add
inc
out
adc
test
xor
jo
mov
int
push
or
push
jecxz
ret
jnp
int3
dec
push
and
adc
pop
fdiv
jge
pop
notl
jbe
jne
shrb
lcall
push
fnsave
push
dec
jg
xchg
int
xchg
imul
shrb
cmpsl
dec
pop
fdiv
out
xor
jne
js
inc
and
add
sub
mov
jnp
jmp
adc
xchg
es
movsl
inc
scas
mov
mov
adc
incl
cmp
and
xchg
push
insl
cmp
push
add
andl
lods
add
iret
sub
daa
inc
and
sub
jmp
inc
lcall
dec
outsb
icebp
iret
dec
push
fwait
out
movsl
adc
mov
js
add
pop
mov
fdivl
lods
imul
sub
test
jmp
push
or
imul
add
or
push
ljmp
shll
xchg
dec
aad
loopne
mov
mov
mov
popf
xor
add
loopne
testb
dec
sbb
fisubrl
push
outsl
popa
push
sahf
and
in
add
int3
std
ds
ljmp
stos
adc
ss
sbbl
dec
stos
sbb
fs
lds
cltd
mov
xchg
pop
mov
add
addb
lods
cmp
mov
mov
cmp
adc
inc
push
or
jb
mov
or
jb
adc
les
inc
mov
fistpl
sub
cwtl
adc
push
stos
outsb
xor
inc
icebp
nop
and
in
insb
cmc
lahf
push
inc
int
and
push
test
cwtl
roll
mov
int3
push
out
hlt
mov
cmp
inc
add
int
push
and
dec
aam
scas
fcoms
adc
rorb
andw
mov
push
mov
sbb
ret
out
xor
jp
dec
and
xlat
out
mov
shrb
mov
xor
repz
pop
fstp
das
jmp
pop
leave
nop
pop
es
mov
in
dec
add
xor
push
pop
andb
repz
leave
leave
cmpsb
pop
push
xor
in
lea
popa
rolb
push
push
sbb
icebp
adc
cmp
subl
fmul
jg
cmp
adc
imul
adc
fisubs
xor
pop
xchg
jnp
push
in
aaa
mov
into
pop
lret
cld
cmp
jge
bound
int3
test
add
mov
ss
mulb
fwait
pop
add
mov
je
inc
mov
sub
pusha
sub
pusha
leave
lods
push
les
pusha
mov
out
push
xlat
adc
imul
push
jg
shr
push
xchg
xlat
lret
add
sbb
xchg
push
mov
add
data16
add
inc
ffree
dec
cltd
jbe
push
imul
push
or
scas
cmp
sub
clc
and
cld
sbb
or
and
and
fnstenv
pop
into
adc
mov
arpl
jne
out
test
add
xor
jb
or
pusha
sahf
imul
ret
and
adc
add
mov
sbbl
out
xor
repz
shlw
shl
scas
cmpsl
jnp
scas
out
clc
cs
inc
rcll
sub
mov
cmp
pop
xchg
push
or
pop
pop
ja
in
cmp
cmp
fistpll
sub
push
inc
int
scas
sbb
ja
fsub
pop
sub
xchg
jge
ret
or
mov
sbb
roll
pop
addr16
loopne
loopne
lret
lea
inc
push
xor
xchg
mov
lods
popa
icebp
in
inc
scas
sarb
adc
inc
pushf
aas
addl
in
push
ljmp
xor
pop
fidivrl
in
sub
mov
shrl
or
jecxz
in
dec
lahf
inc
fcompl
cmp
call
dec
leave
into
xchg
mov
ficoml
push
mov
dec
lcall
mov
add
mov
jb
and
pushf
push
sbb
lret
or
cmp
sub
outsl
fildl
jl
cmp
data16
addr16
jl
iret
cmpsl
push
pop
and
and
out
jns
adc
mov
outsl
mov
aaa
aad
xor
sarb
cmp
fimuls
addr16
xor
idivl
cmp
or
push
lcall
repz
sbb
in
or
pextrw
xchg
js
out
jmp
or
cltd
jne
sti
icebp
xor
push
imul
jmp
push
insl
inc
xor
into
jmp
mov
jecxz
in
arpl
ljmp
xor
pop
icebp
cld
cmp
ret
mov
leave
negl
sub
pop
aam
jecxz
dec
sbb
icebp
iret
inc
mov
cmpsl
jl
fstpt
xchg
in
cltd
div
xchg
cli
push
adc
and
shl
xchg
push
xor
loop
mull
xorb
aaa
add
nop
push
fidivrs
jns
push
popf
lock
or
sbb
jmp
popf
pop
sbb
sub
je
dec
add
gs
inc
test
inc
insl
inc
fcmove
cmp
hlt
mov
lahf
mov
in
lret
fidivrs
xchg
sbb
sar
lret
cmp
cmp
out
or
and
mov
inc
cli
sbb
test
mov
movsl
jge
lret
cld
pop
loope
mov
xchg
xchg
ret
ficoml
sbb
pop
icebp
xchg
aam
xor
pop
mov
shll
aad
xor
stos
mov
je
push
adc
fistps
out
inc
mov
stc
and
push
add
pushaw
push
rolb
aam
outsb
insl
inc
sub
lods
jo
icebp
push
jp
std
into
hlt
sub
jo
ja
cmp
adc
inc
pop
mov
push
nop
pop
inc
jl
adc
lods
adc
sbb
sarl
jl
adc
and
cmp
cwtl
mov
mov
mov
pop
fwait
xchg
jno
loop
or
sbb
testl
sbb
fdiv
adcl
rol
mov
xor
mov
mov
lock
in
repnz
scas
inc
outsl
mov
lods
mov
mov
and
xor
jg
mov
out
pop
aaa
push
cmc
dec
mov
out
mov
sub
mov
stc
jb
idivl
jno
mov
xor
pop
nop
adc
jge
test
mov
pop
or
inc
cmpsb
xchg
clc
cmp
xor
cs
sub
sti
lret
mov
mov
dec
push
shll
lds
mov
inc
filds
ret
stos
fisttpl
std
fwait
hlt
push
out
jnp
xor
dec
lahf
lods
inc
rclb
iret
test
out
imul
sahf
aas
cmp
inc
imul
mov
adc
mov
mov
fsubr
fsqrt
and
dec
mov
shl
fs
inc
gs
fld
clc
test
test
aas
sub
imul
mov
xchg
push
test
dec
call
push
jge
xchg
sbb
or
adc
adc
jne
pop
in
aam
push
lods
mov
xor
xchg
mov
sub
dec
cmpl
out
pop
mov
mov
xchg
and
xor
pop
xor
fbld
lods
mov
es
rcll
sbb
push
sbb
mov
out
fstpl
dec
les
lea
aaa
mov
jl
mov
testb
das
push
or
out
adc
or
dec
jae
and
push
sub
mov
lcall
mov
pusha
ret
outsb
or
mov
roll
subl
mov
loope
jb
mov
push
cmp
or
xchg
adc
data16
add
jp
std
mov
mov
in
fisttpll
jl
rcl
xor
mov
in
and
sbb
fmull
inc
nop
lods
scas
movsb
and
and
mov
test
imul
push
mov
and
cld
jmp
mov
push
es
jno
les
push
mov
gs
scas
pop
outsb
mov
mov
mov
and
mov
leave
lcall
pop
jbe
add
sub
aam
jae
push
stos
push
dec
test
andl
cld
outsb
test
inc
clc
add
cli
cmp
sub
pop
ds
xchg
in
cli
negl
inc
movsl
sarl
xlat
push
popf
sub
or
ds
xchg
in
xchg
jle
jo
jnp
test
xor
and
push
mov
mov
stos
pusha
adc
inc
push
daa
jo
push
and
mov
leave
sub
adc
outsb
xor
mov
jecxz
gs
fldenv
dec
shl
xor
mov
jne
fidivl
push
jmp
inc
dec
xor
enter
dec
js
insb
outsl
sub
lods
mov
cld
loop
sbb
out
repz
int3
pop
xor
cmc
pushf
xor
inc
pop
dec
stos
sbb
shl
das
and
je
jmp
lea
lahf
jl
xchg
jbe
addl
imul
test
add
and
pop
inc
jbe
xor
mov
inc
negl
inc
shrb
lret
mov
sub
jno
outsl
movsl
or
clc
jl
arpl
arpl
sbb
fistpll
adc
xlat
jl
mov
sbb
jle
in
inc
pop
dec
pop
push
cmp
cmpsl
mov
stos
fwait
lock
out
dec
gs
jo
or
orl
cld
add
cmp
pop
sahf
push
cwtl
in
push
aas
xchg
or
push
cltd
jmp
lahf
push
push
lea
push
add
call
mov
and
cmp
jle
stos
cld
out
clc
fsubr
pop
ficomps
outsb
int
in
push
sub
jecxz
pop
cmc
cmpsb
test
or
jle
fidivrs
inc
or
ljmp
cltd
jmp
add
sub
pushf
movsb
pop
loope
xchg
mov
adc
push
aam
fsub
mov
mov
mov
jno
pop
push
ffree
xchg
loope
push
and
jg
sub
sbb
mov
sbb
hlt
movsl
cmp
insl
movsb
jbe
mov
jno
cmpsb
sbb
push
in
sahf
clc
add
fldenv
mov
lock
sub
imul
jge
cmp
sub
sbb
mov
stos
xchg
cmp
xchg
and
jnp
inc
int3
pop
mov
mov
adc
mov
idivl
inc
mov
lods
mov
out
mov
idivb
aas
and
mov
and
jae
sahf
cltd
mov
sub
test
lods
gs
cli
fwait
inc
dec
je
fimuls
out
add
pop
pop
pusha
xchg
das
or
fsubrl
mov
nop
pop
ljmp
or
inc
movl
cmpsl
fmul
out
sub
cmp
push
push
and
lret
shl
loopne
adc
mov
push
addr16
xor
movsb
lret
sub
and
push
cmpsl
push
sbb
cli
lods
out
out
pop
ljmp
dec
add
jno
imul
jecxz
js
push
pop
mov
sbb
in
jecxz
add
inc
mov
loopne
adc
aad
add
pusha
push
inc
sub
imul
bound
popa
loope
adc
sar
sbb
jmp
jbe
inc
jl
cwtl
pushf
rcrb
mov
jnp
lret
fisttpl
pop
dec
adc
and
repnz
jns
stos
push
ds
jmp
xchg
pop
dec
call
inc
cwtl
int
into
out
adc
xchg
insb
inc
mov
dec
cmc
call
inc
int3
push
roll
fisttpll
dec
out
jb
addb
or
lods
mov
and
push
add
push
adc
cwtl
pop
pop
call
or
fwait
popf
mov
xchg
ficoms
cli
fistpl
je
sbb
js
shll
or
sbb
out
mov
mov
mov
orl
jmp
mov
xorw
test
or
adc
cmp
lea
pop
adc
inc
mov
les
fdivl
cmp
or
ljmp
les
push
adc
push
hlt
ja
add
std
pop
out
jmp
adc
cld
nop
es
arpl
leave
mov
outsb
cltd
push
arpl
lret
add
insl
dec
repnz
cmp
fnstenv
jo
lea
cmp
fidivl
out
sub
mov
xor
mov
xchg
jp
adc
pop
ss
popf
test
jecxz
dec
mov
out
add
loope
mov
jo
mov
pop
loopne
sbbb
xchg
jge
insl
sbb
mov
push
xor
outsl
call
lods
push
add
arpl
xor
push
je
stc
cmc
cmc
pop
adc
xorb
addb
ljmp
and
in
add
das
cli
repz
outsl
mov
xchg
sub
std
cmp
sbb
xor
push
pop
dec
repnz
fisubrs
jno
inc
aas
sbb
shl
push
sub
and
jb
scas
add
xor
lods
adc
mov
jo
mov
pop
nop
enter
pop
ljmp
mov
cmp
xor
sbb
pop
mov
mov
mov
and
mov
xchg
movsb
mov
bndstx
adc
int
fisubs
jmp
repnz
xlat
cltd
shrl
push
or
aas
and
out
sub
or
les
sub
roll
xorl
ficomps
pop
lock
sub
les
popa
jl
cmp
jle
xor
in
jp
sbb
clc
mov
aam
cvtps2pd
pop
xchg
fldcw
btc
pop
add
cmp
sbb
jne
fbld
sti
data16
imul
mov
leave
push
rcl
pop
or
jnp
stc
jno
and
cmp
out
ljmp
cmp
in
xchg
aas
clc
cmp
out
aaa
adc
push
test
loopne
sub
sbb
inc
jb
test
pop
mov
push
test
cmp
movsb
xchg
add
add
call
or
inc
adcb
adc
js
jno
jno
push
fwait
aas
cmp
or
add
pop
inc
out
shl
sub
xor
das
pop
xchg
jg
jo
call
call
and
mov
jno
in
xchg
stos
cld
test
xor
and
xchg
push
lret
cmp
xchg
push
inc
fwait
mov
aas
int
push
leave
xchg
dec
aad
imul
cwtl
js
xchg
insb
les
xor
in
fsubrl
sub
inc
iret
stos
test
es
jns
rcll
leave
dec
inc
inc
sub
mov
ds
stc
repz
jb
mov
cmpsb
inc
ss
mov
sahf
xlat
pop
sbb
das
sahf
lret
into
aad
and
out
adc
outsb
xlat
enter
shll
repnz
inc
ret
rorl
inc
mov
pop
and
data16
push
fs
adc
fbstp
jecxz
and
pop
jns
or
shlb
sub
aaa
imul
fdiv
pusha
lods
jb
les
jnp
in
subb
push
or
pop
loope
sbb
cmp
pop
pusha
and
jp
ficompl
mov
push
xchg
push
inc
pop
xor
sahf
sub
add
scas
cwtl
lods
add
lcall
in
pop
dec
mov
jo
enter
add
sbb
xchg
stc
xor
roll
enter
mov
scas
sbb
sub
jl
push
xor
dec
addb
shll
sub
and
push
lock
xor
pushf
xchg
addb
incb
orb
pop
sub
mov
mov
mov
scas
dec
adc
es
test
push
hlt
in
or
sbb
daa
clc
leave
repnz
or
mov
and
dec
imul
mov
mov
push
jmp
nop
dec
cltd
or
outsb
pop
filds
add
fnstcw
mov
das
pushf
cmp
sub
lods
pushf
fs
mov
loop
test
xlat
jp
xchg
inc
sbb
call
and
jmp
scas
add
push
jae
xchg
clc
or
xchg
andb
outsl
mov
jnp
pushf
adc
mov
fildll
repnz
fs
mov
js
clc
push
jmp
cmp
dec
fucom
and
fnstenv
scas
cs
inc
outsl
xchg
xlat
mov
pusha
or
sub
dec
jno
test
mov
cmp
decl
fisttps
jge
pop
push
sub
and
imul
push
mov
iret
mov
dec
sub
in
inc
jmp
push
or
aas
rorb
fmull
xchg
fisttpll
inc
mov
loope
fldt
jne
inc
int
sbb
shlb
cmp
mov
cmp
sbb
sbb
pop
out
xchg
sbbl
push
adc
std
clc
mov
push
xchg
gs
cmp
ret
aas
or
lds
adcb
mov
mov
aad
pop
fsts
mov
popf
push
adc
daa
mov
fimuls
jmp
push
jge
sbb
cmpsb
jb
or
sub
jp
mov
and
jns
fimull
lods
imul
cmp
andb
adc
jne
jae
fistl
pop
xor
and
addr16
lret
adc
or
jo
insl
and
lods
push
js
mov
xlat
jns
dec
dec
mov
and
inc
jno
xchg
stos
mov
pop
fmull
dec
stos
mov
mov
and
shll
std
hlt
sbb
xchg
lock
rolb
jno
lret
out
fisubrl
pop
xchg
rorl
insb
sti
test
clc
repz
xchg
lcall
lock
and
lock
cmp
sbb
sbb
stos
mov
lods
je
stos
mov
mov
or
out
fisubs
clc
daa
daa
sbb
cmp
lds
lahf
or
mov
mov
and
add
repnz
shl
sbb
mov
pop
popa
ret
push
sbb
push
sbb
daa
adc
mov
test
xchg
stos
sbb
push
std
mov
cmpsb
out
movsl
dec
pop
push
mov
inc
cmp
cmc
mov
in
in
lds
daa
xchg
pop
push
xchg
imul
ljmp
add
cmp
push
lret
jno
adc
jg
mov
cmp
in
mov
fldl
enter
outsb
pop
mov
inc
add
push
and
jmp
inc
into
push
mov
inc
sbb
ja
adc
dec
cli
xor
pop
and
lock
into
jbe
mov
in
mov
rolb
cmp
cmp
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
popf
setge
test
jl
xlat
lods
imul
in
mov
fxch
cmp
stc
in
inc
into
repz
in
rcll
pusha
pop
popa
push
inc
insl
gs
mov
adc
mov
fsubl
dec
fstpt
int
or
mov
in
std
adc
loope
mov
pop
fistl
cwtl
ja
jg
sub
push
lcall
jns
pushf
pop
and
lcall
lret
stos
hlt
frstor
inc
mov
in
cli
pop
enter
xor
add
pop
data16
rcrl
mov
push
cmc
pop
lret
pcmpgtw
shll
testl
iret
cmp
movsb
and
push
fists
int3
cmpsl
cli
mov
adc
dec
jnp
mov
xchg
stos
imull
sahf
inc
sbb
aas
inc
mov
push
testb
fldcw
loope
mov
cmp
mov
iret
scas
push
mov
mov
outsl
in
divb
daa
sbb
push
inc
xchg
jmp
sbb
repz
jle
pop
push
in
pop
decl
mov
or
les
je
mov
mov
sti
pop
xor
dec
pop
mov
dec
lea
inc
jno
and
popf
insb
test
out
mov
cld
sub
pop
lods
aaa
xor
ljmp
js
sbb
or
in
mov
and
sbb
cwtl
scas
cmp
and
testl
push
inc
pop
dec
jge
imul
add
fstpt
cmp
test
js
mov
lret
ja
inc
jb
loop
rorb
or
call
fisubrs
out
idivb
aaa
lea
scas
jecxz
adc
fnstenv
jb
sbb
pop
imul
jbe
lret
fisubs
push
into
lret
sub
jl
test
dec
cmp
jmp
dec
pop
dec
movsb
adc
gs
pop
loope
into
test
or
sub
ret
cmpsl
lods
cwtl
push
xchg
loopne
dec
in
push
rolb
mov
jb
jae
stos
jns
inc
sub
out
adc
insb
arpl
aas
mov
pop
or
and
mov
jg
scas
cli
mov
push
rsqrtps
aad
jb
in
imul
movsb
fnsave
push
in
inc
xchg
ja
decb
adc
mov
mov
mov
cmp
test
cs
push
fisubrl
sub
dec
mov
sub
out
les
jb,pt
rcrl
cltd
repz
mov
lcall
aaa
lea
inc
repz
shll
mov
pop
xor
fwait
sahf
dec
push
test
jge
pop
in
aad
cli
in
push
dec
es
mov
xor
insb
sbb
inc
push
aad
jg
movsb
scas
jns
pop
gs
rcll
cltd
movsl
decl
mov
nop
lret
repnz
push
nop
mov
push
into
and
movsl
xchg
jge
out
fsubl
ror
test
or
or
je
in
pop
arpl
adc
dec
mov
js
mov
out
xorb
mov
pop
dec
js
adc
aam
inc
add
loopne
inc
push
mov
mov
insb
pop
jb
and
aam
stc
cmp
outsb
mov
lea
and
test
xlat
pusha
jo
adc
mov
pop
scas
adc
jne
jge
xchg
movsb
andl
fisubrs
loope
xor
outsb
mov
jg
sbb
sahf
or
sub
into
daa
adc
jns
adc
xchg
add
fbstp
cli
xlat
sbb
xor
xchg
add
mov
cltd
sbb
sbb
fwait
xchg
cmpsl
xor
mov
movb
push
sbb
or
sbb
fstps
lret
sbb
arpl
sub
adc
pusha
mov
mov
outsl
or
sub
out
push
cltd
and
jp
popf
add
icebp
fisttps
lret
dec
push
shll
mov
pop
inc
pop
xor
mov
xor
sub
cltd
test
jae
loopne
xchg
push
stos
xlat
xor
inc
xchg
xchg
pop
jo
xchg
mov
pop
pusha
sbb
sub
ret
adc
les
ljmp
push
lods
mov
push
sbb
aas
outsb
out
push
out
xchg
jbe
pop
and
jbe
fnsave
mov
and
cli
push
or
push
or
andl
into
mov
push
std
lret
outsl
aaa
jg
sub
sarb
push
push
lods
or
jb
pop
push
cmp
mov
mov
push
dec
in
mov
jp
fs
add
popf
loopne
ret
xchg
sub
push
mov
or
push
jmp
dec
push
ret
and
leave
cmpsl
and
sbb
push
dec
clc
test
and
xchg
push
xorl
add
mov
rcl
cmpsb
mov
dec
xor
cmpsl
cmp
dec
jno
mov
jo
add
jbe
shll
lret
loopne
cltd
pop
mov
push
xchg
call
testb
popa
sti
pop
int3
int3
sti
std
pushf
sbb
pushf
repnz
xorl
pusha
cmpsl
dec
xchg
jg
and
xor
das
xor
mov
sub
xchg
pop
sbb
repz
test
divl
push
sbb
mov
push
ds
xchg
pop
gs
inc
jge
cmpsb
inc
loopne
stc
jns
mov
test
or
inc
pusha
push
jge
imul
pop
push
jmp
test
mov
cmpsb
xor
repnz
js
imul
and
arpl
dec
jp
mov
dec
addr16
xchg
cmc
rolb
outsb
and
fadds
and
xor
into
shll
lret
mov
and
cmp
lret
fisubrl
scas
add
jns
cli
lea
cld
adc
testl
aad
mov
mov
cmp
loop
cmp
push
call
push
xchg
and
inc
aaa
adc
in
sbb
test
sub
xlat
push
mov
push
or
cs
adc
mov
sti
add
cmp
jb
daa
pop
cwtl
test
pop
rep
sahf
das
stc
aad
inc
pop
sub
lret
fldcw
loop
xchg
push
imul
fdivr
mull
fidivs
and
xor
insl
jge
in
ret
je
mov
sbb
mov
pop
xlat
cmp
mov
shrb
inc
enter
mov
vunpcklps
decb
inc
in
popf
cmp
sarl
in
push
push
mov
xor
xchg
mov
jg
and
push
mov
pop
ja
xchg
andb
push
push
mov
in
cwtl
arpl
icebp
in
iret
cmp
lret
sbb
mov
xlat
inc
mov
mov
push
and
mov
xchg
movsb
lahf
add
loope
pushf
xor
jge
xchg
jo
movsb
cmp
into
mov
fwait
js
xchg
mov
xchg
push
mov
repz
rcrb
test
rcrb
pop
jo
and
cmp
int3
adc
loop
leave
cmc
jmp
and
push
in
pop
test
aad
imul
add
dec
xchg
test
mov
xchg
mov
add
fsubrs
scas
and
inc
enter
pop
outsb
jg
sahf
mov
jecxz,pt
xchg
push
dec
sbb
xor
push
sbbb
fnstcw
fstpt
repnz
add
pop
sbb
in
mov
pushf
das
mov
leave
call
pop
mov
ja
test
mov
xchg
mov
lahf
imul
lds
jbe
or
movsl
pop
imul
in
idivb
xor
push
xchg
xchg
add
cmp
das
xchg
icebp
jbe
nop
xchg
fwait
out
test
xchg
cmc
sarb
in
fstpl
add
stos
imul
aam
adc
sub
loope
jle
adc
in
xor
mov
iret
push
and
lcall
and
push
hlt
stos
cmp
ss
loope
mov
or
adc
loope
in
cmp
aad
push
adc
mov
lods
pop
pop
fwait
xor
cwtl
icebp
shlb
in
mul
ja
inc
ret
add
inc
add
xchg
pop
pop
inc
dec
out
mov
mov
daa
into
fadd
std
shl
add
enter
stos
testl
pop
enter
push
mov
mov
jnp
insl
xchg
mov
xchg
sbb
xor
push
lods
adc
cmp
mov
lods
pop
push
pushf
mov
cmp
jmp
adc
inc
xchg
sub
inc
hlt
iret
ret
fcmovnb
movsl
mov
xchg
rorl
fnsave
xchg
testb
bound
or
iret
sti
popf
lods
sub
sbb
xchg
fmulp
mov
jno
cmc
shr
outsl
shlb
and
sub
pop
popf
inc
jmp
mov
aad
arpl
sub
cmpl
pop
movsb
pop
cltd
mov
inc
ror
cltd
jno
inc
fdivrs
fldl
arpl
cmp
cmp
jb
inc
mov
int
pop
jne
inc
or
jmp
pop
mov
push
jae
xor
jg
movsb
cmp
scas
jbe
imul
push
or
imul
aaa
push
sahf
pushf
xchg
pop
and
xor
and
in
add
cwtl
test
mov
orb
push
insl
hlt
aas
testl
add
enter
jmp
sbb
jne
test
add
push
jbe
cmp
xor
mov
jl
inc
inc
lds
dec
std
pushf
lods
scas
xor
xchg
es
sbb
jns
imul
adc
lahf
pop
xor
jp
jg
mov
mov
inc
cmp
pop
ret
mov
nop
push
mov
or
movsl
cwtl
add
adc
dec
mov
lods
adc
jecxz
pop
inc
loop
out
mov
sbb
lock
sbb
xchg
mov
dec
or
jg
adc
dec
add
jmp
xchg
les
xchg
decl
mov
scas
rolb
inc
push
push
ja
xor
add
adc
les
jge
push
cmp
xor
add
stos
jno
cmp
push
adc
fstl
mov
push
pusha
inc
jnp
lea
shl
add
dec
sbb
inc
aaa
sbb
mov
ret
jecxz
mov
sbb
sbb
test
cli
jge
cld
gs
nop
fwait
dec
test
push
sbb
mov
adc
test
pusha
add
inc
popa
aaa
jne
jb
jmp
or
fst
test
sub
jge
scas
out
ljmp
xchg
mov
mov
outsb
les
push
or
scas
push
aad
test
lcall
rcrl
pusha
push
fimull
or
repnz
xor
dec
imul
and
aam
push
jge
adc
mov
or
mov
cwtl
xor
xor
jecxz
xor
mov
es
stos
or
dec
xor
repnz
lock
not
lods
aad
mov
std
xchg
sbb
sbb
movsl
pop
call
aaa
rcrl
adc
mov
mov
lcall
loop
dec
ss
pop
push
xor
mov
fs
mov
cli
ret
lcall
pop
add
adc
pop
mov
push
inc
mov
push
push
jnp
repz
jns
mov
jne
cltd
xchg
lret
sbb
aad
sbbb
loop
push
mov
loop
cmc
cmp
or
mov
int3
jle
pop
ret
or
or
test
test
xchg
push
sbb
loopne
shl
je
int3
sbb
mov
jns
int
lret
xchg
xchg
loopne
fs
lahf
push
xchg
jnp
xchg
mov
int
cltd
and
mov
jecxz
push
imul
mov
xchg
fimull
add
aaa
pop
test
icebp
push
cmp
xchg
sub
mov
sub
idiv
lcall
or
cmp
incl
xor
das
mov
into
xlat
popf
mov
cld
scas
cmpsl
cld
dec
pop
push
bnd
rolb
jns
cmpsb
cmp
enter
jge
rol
stos
fcmovnbe
jae
scas
push
popa
xchg
adc
call
xchg
sahf
addr16
in
xor
xchg
push
dec
cmp
or
out
push
jge
mov
adc
sarb
iret
xor
mov
adc
lahf
add
and
mov
dec
mov
fwait
fwait
mov
ret
negb
cmp
mov
cltd
ss
inc
and
int3
lods
fs
adcb
mov
cmpb
adc
mov
jae
cltd
push
mov
mov
inc
pop
mov
test
xor
call
gs
negb
call
rcrl
into
dec
sub
adc
or
sub
int
jmp
hlt
ds
push
sbb
or
xor
or
push
aam
subl
ret
push
jl
pop
jecxz
test
push
fldl
shrl
mov
xchg
pop
pop
jne
mov
mov
jb
inc
pop
cmp
fldenv
jle
pop
ljmp
sub
outsl
cli
jge
xlat
shl
sbb
and
arpl
dec
xchg
or
test
imul
je
stc
gs
mov
setle
js
jmp
movsb
push
pop
aas
test
fisubrl
or
pop
pop
scas
idivl
les
shlb
scas
xchg
sbb
int
insb
es
add
sbb
dec
jns
push
xchg
cmp
js
dec
sahf
loop
stos
arpl
pop
xor
outsl
mov
movsl
inc
jns
movsb
xchg
fwait
rorb
test
or
mov
xchg
clts
aaa
cmp
sub
sub
xchg
mov
mov
ljmp
sbb
inc
mov
jl
sub
xchg
notl
imul
pop
or
or
dec
clc
mov
lods
mov
pop
xor
dec
jbe
lea
or
inc
mov
sub
loopne
xchg
movsb
jecxz
in
xlat
jge
negb
stc
xor
cmp
sub
test
rorl
jecxz
in
inc
cli
js
inc
pop
and
pop
sbb
or
xchg
inc
sub
pop
fildll
in
data16
and
and
hlt
sarl
fcomps
repnz
outsl
add
outsb
pop
test
xchg
cmc
xchg
test
inc
dec
mov
aad
cmp
mov
sti
push
mov
xor
jge
out
lock
loope
mov
lret
out
inc
scas
and
hlt
rcrl
sbbl
jne
repnz
loopne
sub
xchg
lret
call
dec
stc
ss
sbb
lret
je
rolb
push
lahf
mov
and
pop
pusha
pop
hlt
and
outsl
fsts
cmpsb
pop
out
in
shrb
imul
jmp
ss
inc
ret
pop
xor
mov
fisubrl
mov
ss
jecxz
adc
jb
dec
add
arpl
jle
imul
out
adcl
push
and
or
xchg
pop
pop
pop
test
push
or
stc
in
dec
push
sbb
and
or
iret
xor
add
mov
lds
push
dec
fnsave
out
inc
lods
into
test
xor
dec
cmp
mov
push
pop
fistpll
mov
inc
pop
push
aad
push
mov
sarl
add
add
daa
in
mov
cmp
mov
mov
inc
fcomps
cmpsb
test
push
into
jp
push
or
fstl
dec
dec
sub
ret
dec
inc
inc
xchg
mov
into
mov
and
cmc
or
lods
dec
mov
les
sub
push
ret
mov
and
mov
or
jo
in
sbb
jb
mov
daa
add
mov
dec
test
pusha
ds
sbb
cmp
dec
push
xchg
lcall
sub
sbb
jp
inc
push
jmp
pop
icebp
xor
fstl
out
jge
rorl
sbb
jmp
sub
or
lds
inc
cmp
fcomps
ja
xchg
or
xchg
mov
mov
and
xchg
shlb
xor
mov
call
or
dec
out
adc
cmpb
call
and
jg
dec
mov
add
loopne
sahf
jne
pop
shll
inc
cmp
and
push
cmp
jmp
loope
sbb
leave
test
mov
jo
iret
clc
movsb
les
aam
sahf
pop
fs
sub
je
jno
sub
jbe
lea
inc
jo
out
mov
and
loop
outsl
add
or
xor
mov
mov
pop
sub
mov
jnp
lds
imulb
cmc
xor
int3
scas
mov
mov
xchg
bound
test
inc
push
je
jmp
lds
mov
xchg
popa
std
in
sbb
jmp
push
jae
mov
lea
movsb
hlt
loope
aam
fs
out
inc
ret
in
cs
imul
dec
loop
add
stos
push
adc
push
cs
je
xchg
mov
loop
jmp
jmp
loop
ficoms
mov
mov
fcomi
aas
jno
add
mov
mov
js
or
outsb
xlat
pop
pop
pop
inc
pop
sbb
push
out
sub
out
test
clc
adc
shrb
imul
into
or
cli
mov
rclb
mov
or
xor
mov
arpl
js
sub
aad
jbe
icebp
mov
popf
mov
mov
repz
pop
and
enter
jb
in
repz
mov
xchg
xchg
jb
aas
jo
pop
orl
in
or
icebp
mov
data16
fwait
push
mov
xor
adc
lahf
sbb
push
or
sbb
jne
jne
mov
and
or
js
add
aaa
fwait
inc
test
push
iret
int3
sub
cmp
bswap
jmp
arpl
aam
fsts
or
pop
hlt
ljmp
dec
jle
imul
xchg
jns
push
inc
cs
roll
inc
daa
xor
lret
pushl
in
mov
xor
mov
sbb
push
les
lods
dec
and
lahf
clc
adcl
enter
cli
mov
imul
xor
cmc
pop
inc
outsl
fstps
test
xchg
fwait
and
rcll
jle
jle
pop
mov
sahf
jmp
ljmp
or
addr16
mov
inc
sub
jae
cmpsl
sub
jl
dec
xchg
out
pop
out
sub
jb
test
outsl
sub
js
mov
cmp
fsubrs
adcl
mov
mov
test
pop
add
mov
or
add
decb
add
cs
lock
in
mov
xor
pop
dec
arpl
repnz
and
jge
icebp
xchg
mov
adc
inc
cld
pop
mov
scas
fwait
xor
arpl
std
ljmp
and
dec
cmpsb
pop
outsb
popf
jecxz
xor
mov
clc
testb
and
add
push
dec
cmc
push
xchg
mov
stos
in
cli
add
jno
sbb
test
movsl
test
xchg
add
test
xchg
xorl
jbe
mov
fsubp
test
xchg
mov
dec
mov
scas
xchg
mov
mov
add
sbb
adc
xchg
mov
insb
jo
push
aad
dec
gs
and
inc
out
lods
push
mov
fchs
pop
das
pop
enter
in
jle
or
or
add
xchg
push
dec
leave
call
addr16
sub
daa
nop
test
rolb
add
pop
ljmp
xchg
int3
data16
insl
std
pop
iret
cmpl
sti
subl
sbb
ret
inc
mov
mov
fsubrl
jge
shlb
scas
cmp
arpl
push
jge
jle
ficoms
mov
sub
test
ret
inc
cltd
test
ljmp
dec
rcrl
mov
pop
nop
ds
mov
mov
add
out
jne
xchg
push
fcomi
aad
lods
adc
js
push
dec
mov
mov
mov
loope
or
add
cmp
dec
sub
shll
pop
cli
mov
fisttpl
mov
in
or
inc
fnstcw
or
cmp
lahf
pop
jmp
or
scas
fisttpl
int3
push
iret
int
adcl
sbb
inc
es
sub
into
jns
inc
xchg
push
mov
mov
xor
sbb
nop
jbe
xchg
or
xchg
push
wbinvd
nop
pusha
or
sbb
cmp
je
data16
rorb
incl
imul
cmp
dec
mov
add
mov
in
dec
adc
mov
push
or
adc
sub
daa
adc
or
push
mov
or
std
cld
cltd
cmp
and
xchg
dec
in
inc
test
push
add
aaa
outsl
or
pop
fidivrl
xlat
loope
push
pop
dec
add
push
dec
cltd
and
out
outsl
mov
cmpsb
insb
movsb
or
ds
jae
sub
movsb
outsl
mov
adc
jl
test
les
scas
dec
or
ret
imulb
jecxz
imul
sbb
add
hlt
adc
push
jnp
cmc
in
or
cmc
test
jg
jnp
mov
scas
mov
sub
pop
xlat
lea
cmp
mov
xchg
dec
xlat
leave
dec
and
sub
dec
mov
dec
push
and
fadd
mov
mov
and
lahf
jnp
mov
mov
scas
mov
cmp
fistps
xchg
push
push
mov
or
aaa
mov
enter
lret
imul
jmp
mov
sub
or
add
mov
mov
cwtl
in
cli
mov
in
push
or
mov
fisttps
cmp
cmpl
rcr
stc
lcall
dec
gs
adc
je
sub
rcl
leave
out
inc
sbb
out
cmp
fnstcw
mov
dec
mov
stos
push
sti
repnz
sbb
ja
nop
mov
testb
repz
pop
call
imul
popa
and
push
jg
cmp
xchg
add
or
fidivs
loope
mov
outsb
mov
inc
mov
sbb
sbbl
push
mov
mov
or
mul
pop
nop
arpl
mov
mov
or
cmp
sub
addb
sahf
jge
inc
test
pop
lea
xchg
jl
shlb
dec
leave
pop
pusha
js
cmpsl
jo
pop
test
shl
inc
test
xor
sbb
test
arpl
add
ljmpw
xchg
sbb
and
orl
pushf
mov
insb
and
lods
cltd
test
push
inc
rcl
or
rcrl
mov
xchg
push
inc
lahf
lret
cmpsb
sti
jbe
je
loopne
sbb
lea
sti
fs
ret
aam
movsl
xchg
sbb
leave
fdivrl
leave
lea
mov
sub
addb
loope
test
stc
icebp
pop
fsubrp
inc
push
rorl
loopne,pn
sbb
pop
and
push
push
jmp
sub
test
mov
aam
fidivrl
or
mov
inc
sbb
jnp
dec
lods
push
lods
xchg
mov
inc
ljmp
dec
inc
lds
xchg
popf
sbbb
loope
sub
add
jecxz
mov
cmp
mov
jle
lret
in
jo
inc
shl
xchg
repnz
cmp
fs
les
pop
mov
imul
xor
and
pop
into
scas
xchg
push
xchg
dec
mov
mov
dec
jae
cs
cmp
or
sub
cmp
pop
adc
je
sub
jmp
mov
in
dec
jbe
jae
ret
insb
ja
jecxz
dec
dec
iret
push
mov
cmp
rcl
pop
and
repz
das
cltd
adc
pushw
cltd
push
insl
lcall
repnz
imul
mov
push
jo
pusha
dec
adc
notl
sbb
adc
cmpsl
inc
and
jle
xchg
dec
roll
addr16
xor
fdiv
jge
into
les
scas
mov
mov
sbb
add
inc
xor
arpl
pop
jae
adcb
pop
dec
inc
pop
pop
ljmp
jge
sub
subb
rorl
and
lock
dec
xor
jp
out
lock
jo
xor
jecxz
clc
mov
push
out
testb
cmpb
scas
in
add
inc
adc
mov
push
cmpl
fadd
movsl
jne
inc
leave
fstps
jb
xor
cmp
jmp
nop
or
hlt
sub
mov
popa
je
sbb
mov
divb
loopne
and
out
push
cmp
fldlg2
ret
outsl
rcrb
shl
jns
leave
fdivl
cltd
push
dec
xchg
test
pusha
mov
sub
cmc
notb
shl
pop
mov
mov
adc
lret
je
stc
sbbl
add
shll
adc
cli
in
jmp
add
out
xchg
hlt
shll
out
stos
jns
je
mov
push
subb
mov
xor
jmp
clc
adc
movsb
arpl
sub
pushf
pop
nop
adc
cmp
addr16
push
push
jecxz
add
inc
push
dec
adc
arpl
cmpsb
das
push
cmpsl
fwait
les
xchg
xchg
ret
sub
sahf
dec
push
icebp
mov
adc
lret
xchg
pop
inc
mov
sbb
push
in
inc
pusha
add
fnstsw
sub
scas
push
repnz
fwait
adc
inc
pusha
fcoms
jge
ds
popf
daa
xchg
mov
test
fdivl
cmp
fdivr
inc
andb
fnstsw
cmp
data16
cmp
mov
outsl
add
add
cmpsl
popf
loopne
sahf
sub
out
fstpl
shlb
mov
sbb
pushf
repz
insb
lods
cmp
or
sub
jmp
xor
insb
mov
push
jl
jae
sbb
adc
gs
sub
jmp
adc
fsts
mov
sbb
out
mov
dec
lock
mov
mov
sbb
cmp
pop
mov
mov
push
bound
adc
iret
rclb
outsl
bound
dec
mov
addr16
mov
and
dec
xchg
in
sbb
cmc
mov
xchg
sbb
add
pusha
dec
mov
scas
inc
loop
nop
arpl
xchg
int3
push
xchg
pop
inc
mov
cmc
inc
sub
mov
insl
dec
aad
mov
jno
jbe
out
fstl
xchg
adc
sub
cltd
ret
rcrl
into
push
add
sbb
sub
jnp
test
sub
lods
and
fnstsw
jmp
test
stos
dec
gs
xor
mov
inc
jge
mov
xor
call
fistpll
xchg
nop
xchg
popa
outsl
and
pop
les
push
movsl
cmp
lret
sti
mov
cmp
lea
inc
jns
sbb
ficomps
add
test
and
and
inc
out
jb
int3
inc
and
add
adc
loope
lea
test
addb
sbb
lods
dec
cld
lcall
gs
outsb
mov
cld
fldt
mov
inc
jbe
movsb
mov
xor
push
or
pop
push
cltd
insb
or
cmp
mov
pop
mov
into
mov
pop
mov
lahf
cmp
xor
inc
imul
out
dec
inc
push
rcll
enter
and
lret
out
mov
inc
add
sbb
movl
cmc
adc
jne
or
adc
and
mov
and
pop
add
into
lret
divps
sub
es
roll
dec
inc
in
jns
shll
mov
shrl
out
std
mov
push
dec
pushw
mov
sbb
mov
inc
or
sysexit
mov
outsb
jns
mov
inc
xchg
sbb
sti
out
lcall
sub
fcompl
ret
add
hlt
scas
mov
xor
lahf
jae
int
jmp
in
xchg
push
aaa
je
loop
or
lahf
mulb
xchg
add
pop
arpl
cmc
rorb
sub
mov
xor
push
aaa
mov
xor
test
xchg
pop
movsb
mov
sbb
ret
dec
jnp
in
pop
daa
mov
rcrl
sub
outsb
iret
pop
adc
jle
add
lea
ljmp
sbb
pushf
iret
sbb
scas
pop
xchg
add
or
mov
rorl
out
sbbb
ja
adc
mov
aam
xchg
orl
xchg
xor
cmp
pop
int3
jb
sbb
mov
int
xchg
xor
pop
leave
xchg
enter
ss
sahf
mov
push
insl
and
push
xor
icebp
imul
dec
mulb
add
cmp
mov
push
and
push
orl
insl
leave
mov
sbb
test
test
mov
jno
adc
xchg
cmp
mov
ret
adcb
lret
xchg
mov
inc
dec
sub
loop
or
xor
mov
add
dec
sbb
adc
shr
aad
and
in
popf
sahf
dec
mov
mov
dec
into
imul
xchg
xor
and
loop
jge
test
mov
adc
shlb
cmp
cmp
push
mov
pop
cmpsl
pop
jno
fmull
jg
push
mov
sub
leave
cmp
sub
jmp
out
cmc
sbb
jbe
psrlq
outsb
mov
push
xchg
outsb
or
or
dec
jle
shll
cmp
testl
iret
and
sub
adc
movsl
retw
repz
push
fistps
std
cs
dec
les
enter
jbe
pushf
test
push
loopne
loop
pop
add
jo
xchg
cmp
mov
in
xchg
shlb
jnp
test
nop
sub
stos
les
push
daa
add
or
cltd
popa
and
jl
pop
dec
leave
adc
sbb
fs
pop
pop
cwtl
pop
and
movsb
out
mov
xorb
jae
sti
jae
jge
int
aam
xor
aaa
jo
test
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
add
jnp
je
jl
pop
jl
xchg
adc
xchg
xlat
aad
mov
sbb
cwtl
mov
mov
popf
ficomps
dec
fdivr
retw
fucomip
push
push
push
test
xchg
je
into
mov
jecxz
sub
mov
mov
xor
jbe
mov
loop
push
stos
sbb
mov
scas
jl
and
pop
push
cmp
inc
sbb
fs
orb
xchg
mov
into
jns
and
inc
push
sbb
pushf
jge
pop
push
push
inc
add
call
cmc
and
hlt
leave
es
and
js
inc
leave
dec
rcrl
lret
sahf
pop
mov
jecxz
int3
pop
js
push
stc
lea
mov
aad
nop
scas
push
repnz
add
loop
dec
cltd
aad
sar
jns
pop
mov
js
insb
popf
mov
mov
vpperm
or
aas
jbe
mov
into
xchg
sub
jl
iret
mov
fimull
and
popa
shrb
dec
dec
arpl
std
sti
dec
jb
stc
rclb
scas
jl
sti
dec
hlt
test
pop
mov
xor
icebp
cs
jecxz
add
shll
and
or
pop
cltd
mov
and
ja
xchg
pop
gs
std
stos
xor
sbb
xchg
aas
in
push
push
jp
stos
out
test
dec
into
insl
dec
pop
pop
xor
pop
fildl
cmpl
js
lret
ja
cmp
pushf
cltd
add
xor
rolb
loopne
jp
dec
jg
out
nop
mov
scas
shl
loope
pop
icebp
hlt
mov
push
test
movsl
testl
fmul
push
iret
cs
xor
pop
ja
inc
shlb
lock
lret
adc
sti
das
repz
stos
xor
stos
and
push
test
inc
les
popa
test
push
sbb
dec
dec
test
out
add
nop
mov
mov
xchg
and
je
xlat
and
adc
mov
push
cwtl
xchg
nop
out
and
adc
subl
scas
mov
test
pop
outsl
call
sbb
or
dec
mov
jno
push
push
pop
in
push
popa
rcrb
add
jp
push
jge
push
cld
xchg
sub
stos
dec
cs
xor
mov
sahf
test
out
add
sbb
mov
push
lret
jmp
test
pop
or
xchg
shll
pop
shlb
fadds
and
inc
imul
dec
mov
lret
mov
sbb
fdivr
sub
pop
jo
subl
out
xchg
inc
add
mov
pop
or
loopne
push
je
or
roll
stos
cs
jg
mov
add
jae
mov
aas
xchg
sti
mov
jns
pop
aas
adc
jnp
stos
push
cmpsl
xchg
stos
xor
xor
adc
sbb
das
mov
pusha
cltd
cmp
cmp
xchg
loop
outsl
in
mov
or
adc
adc
aam
int
decl
jno
dec
jge
jne
add
scas
sbb
jmp
cs
jbe
pushf
pop
inc
mov
jae
mov
lods
popa
icebp
daa
adc
scas
or
je
int3
cmc
outsb
mov
and
add
inc
pushf
mov
jbe
add
cli
inc
sarb
inc
divb
cmpsb
pop
orl
in
js
sub
inc
mov
push
rolb
sti
test
mov
push
cmp
xchg
bound
mov
lret
js
sbb
scas
sbb
lcall
aas
xchg
jno
and
cmp
xchg
out
dec
dec
add
cmp
out
mov
dec
inc
adc
dec
sbb
pop
xor
in
jecxz
cmpsl
dec
lret
in
push
loope
gs
in
cmpsl
inc
push
jns
mov
js
mov
mov
imul
cltd
inc
inc
add
and
xchg
fadds
shll
mov
sbb
shlb
mov
xor
add
mov
and
insb
hlt
lods
aas
mov
jle
xchg
inc
xor
jg
xchg
xor
push
into
out
dec
dec
adc
fincstp
xchg
mov
leave
icebp
adc
mov
ficoml
sub
pop
mov
mov
jmp
jp
loope
xchg
mov
pop
test
aaa
add
cmp
cltd
inc
test
js
repnz
lcall
cmp
mov
aad
adc
lahf
pop
jbe
cmpsl
and
fs
outsl
add
into
mov
mov
pop
inc
scas
bound
jns
jns
inc
mov
loopne
ret
ss
lret
test
xor
daa
adc
popf
rorl
jb
and
mov
cltd
sbb
addl
mov
push
xchg
movsl
xchg
lret
jb
push
cmpsl
test
dec
mov
mov
mov
mov
or
push
mov
lcall
and
clc
jo
sub
das
insb
inc
test
std
mov
ds
push
cmpsl
cmp
scas
cmp
sub
in
push
jmp
fstpt
mov
enter
push
icebp
mov
sub
mov
std
dec
jno
stos
add
jg
inc
mov
adc
dec
xlat
pop
push
sbbl
cld
stos
shll
mov
push
pushf
movsl
scas
jo
cld
xchg
and
xchg
push
ret
pop
cltd
mov
jne
in
fildl
ss
les
mov
aad
std
mov
ja
adc
jae
add
test
dec
lret
adc
subps
pop
add
aaa
mov
movsb
movsl
sbb
push
mov
pop
jae
adc
clc
shl
pop
roll
adc
gs
or
sbb
mov
inc
and
jle
das
xor
jo
movaps
lods
inc
in
scas
adc
out
jmp
xor
pop
sub
mov
stc
inc
outsb
push
int3
push
mov
insl
xchg
ds
cs
cmc
aas
addl
mov
pusha
int
in
daa
push
pop
daa
push
out
pushf
mov
lret
or
jnp
add
pushf
inc
arpl
push
sub
xchg
push
and
sub
adc
pop
mov
jp
mov
addr16
jne
jp
xchg
daa
dec
subl
inc
nop
dec
inc
jno
popf
in
test
xor
aas
ja
sarb
xlat
arpl
mov
icebp
mov
stc
and
or
and
notl
jl
imul
call
inc
adc
lcall
movsb
and
dec
sbb
scas
filds
inc
mov
fucomip
ror
fnsave
lahf
xchg
pop
mov
sbb
xlat
hlt
repz
iret
fwait
test
jmp
xor
add
dec
inc
xor
call
push
aaa
add
pop
cld
sbb
adc
xchg
repnz
pop
ret
mov
fisttpll
sbb
or
aad
notl
xchg
cmp
fbld
xchg
jle
mov
rcll
imulb
pop
mov
adc
sbb
stos
pop
test
scas
movsl
sub
or
xchg
test
jmp
mov
mov
jb
arpl
lcall
in
in
mov
mov
fwait
push
aam
mov
lock
out
add
mov
lret
mov
lret
adc
add
bound
or
dec
pop
out
mov
xor
push
xchg
imul
mov
lahf
jnp
pop
imul
or
jp
cmpsb
sub
fstl
ja
jns
imul
cmpl
xchg
es
into
insl
data16
into
mov
call
adcb
lret
mov
js
push
jno
fmull
andb
mov
in
mov
sub
addr16
adc
test
lock
test
push
xor
js
mov
sahf
fbld
iret
testl
fwait
jbe
lods
mov
mov
push
jge
insl
pushl
ja
push
das
pushf
add
cmp
sub
cli
add
mov
testb
adcl
pop
or
pop
std
jle
out
sbb
in
rcl
inc
cmp
stos
mov
push
fwait
jbe
push
push
outsl
sbb
push
jnp
or
sub
adc
es
out
js
sbb
jg
add
dec
or
cmp
fbld
inc
adc
je
stc
aas
mov
dec
jecxz
shrl
xchg
repnz
adc
push
ret
js
fwait
push
addr16
movsb
arpl
fcomp
out
ljmp
addr16
mov
dec
or
xlat
mov
aad
mov
cld
cmc
sbb
pop
push
add
in
jno
into
mov
and
lock
jecxz
je
cmp
dec
push
in
shr
xor
dec
dec
xor
fstps
imul
push
stos
mov
add
movsl
rcr
sbbl
or
add
xchg
jg
aas
sahf
sub
out
test
stos
cs
jg
ja
xor
and
jmp
aas
ljmp
pushf
push
icebp
nop
inc
aas
inc
rorb
nop
or
insl
inc
sahf
aad
filds
fwait
call
mov
push
adc
push
fcmovne
inc
push
jo
je
adc
int
xor
sub
xchg
ss
xlat
jo
sbb
sbb
cmc
and
pop
sbbb
mov
ds
sub
out
stos
out
sbb
jl
addr16
fcmovnu
cmc
pop
adc
add
pusha
fldcw
cs
into
push
daa
or
sbb
mov
inc
sbb
push
and
jne
out
dec
jns
incl
xor
pop
push
lret
shl
icebp
scas
xor
cli
aas
mov
dec
lahf
and
shrl
gs
pop
mov
rcrb
arpl
call
push
mov
in
sub
cld
adc
xchg
xor
test
mov
insb
pop
aas
adc
cmp
icebp
mov
and
cmp
not
and
test
mov
push
test
add
xchg
pop
adc
xor
mov
mov
popf
or
adc
stos
and
test
aas
mov
test
loopne
cmp
in
test
sti
out
in
mov
pop
sbb
in
adc
out
adc
add
mov
inc
push
xchg
jno
adc
mov
rclb
fs
int
shrl
adc
stos
std
xorl
mov
dec
daa
das
push
pop
pop
sub
and
push
sbb
out
jp
fcmovne
sub
repz
fmul
xchg
mov
inc
sbb
sbb
add
jne
mov
fimull
shll
xor
adc
adc
pcmpgtw
cmp
inc
cltd
xchg
jl
test
pop
pop
call
inc
fsub
clc
sar
cmp
ss
jp
lea
scas
movsl
mov
and
sub
inc
ret
lret
movsb
mov
aas
rorb
adc
and
aam
fidivs
add
jl
adc
ret
das
in
push
aas
std
cli
sbb
test
jp
jbe
notb
inc
adc
out
rcl
push
xor
xchg
inc
ror
iret
sub
or
roll
ja
jmp
inc
repz
xchg
dec
hlt
daa
clc
rclb
xor
data16
jge
xchg
or
ror
outsb
mov
shrl
sbb
sbb
cmp
or
mov
inc
add
and
pop
sbb
mov
jecxz
sar
lahf
sub
and
push
adc
fwait
jno
inc
push
adc
mov
jmp
in
sbb
std
arpl
call
sub
mul
aaa
aas
lcall
cmp
orl
ss
pop
lds
add
fists
loope
dec
cmpsl
in
xchg
incl
jge
mov
inc
mov
arpl
push
dec
lret
jb
sub
and
add
ljmp
cmp
add
data16
dec
or
fsubrl
xor
jo
dec
xchg
jbe
push
dec
pop
fcoms
addr16
jle
mov
jae
das
lock
pop
xlat
mov
cli
fcomi
sti
sbb
push
or
ret
cmp
negb
cmp
inc
rclb
push
loopne
add
fwait
lret
filds
pushf
movsl
dec
hlt
int
dec
sahf
mov
xor
pop
cmc
xor
mov
inc
lret
imul
push
push
fmul
lcall
xor
int3
jmp
scas
add
pop
dec
enter
enter
into
fstpl
push
mov
aam
cli
push
es
pusha
pop
xchg
das
sbb
add
cmc
lret
push
dec
push
mov
jb
or
adc
test
inc
lret
out
adc
ret
mov
or
imul
push
aas
iret
dec
push
adc
jb
arpl
cmp
iret
mov
insl
mov
inc
pop
or
mov
mov
ds
or
arpl
sbb
jnp
fstps
ret
push
jbe
xor
insb
insb
jle
lock
roll
mov
hlt
cmp
in
or
adc
mov
sbb
mov
jecxz
jg
mov
push
ficompl
mov
sub
scas
out
lret
stc
inc
cli
fimuls
adc
sub
jbe
sbbl
subb
mov
pop
sub
aaa
mov
and
idivb
xchg
mov
fs
or
test
mov
mov
sub
dec
dec
inc
cmp
nop
popa
mov
xor
ror
dec
in
push
hlt
cmp
mov
faddl
inc
mov
mov
loope
mov
cltd
jo
scas
xchg
push
add
mov
adc
lcall
dec
and
jp
and
faddl
mov
popf
or
cmp
pop
fidivs
jmp
xchg
stc
mov
js
out
xchg
jno
sub
out
dec
cmp
cmpsl
inc
ljmp
adcb
and
mov
iret
xor
fisubrl
push
andb
xchg
in
loope
xchg
mov
or
pusha
rcrl
icebp
mov
out
movsb
xchg
mov
pusha
adc
popf
add
cmp
fs
gs
test
adc
add
vpshufd
lea
xlat
cmovs
cmp
mov
lds
leave
jns
sub
mov
popf
outsl
push
outsb
out
inc
adc
push
mov
jg
ret
add
mov
out
fistpll
add
leave
mov
jecxz
ficoms
test
jg
mov
or
sub
stos
sub
clc
and
rclb
pop
into
mov
aam
bound
jae
popa
ret
popf
mov
mov
xor
mov
pop
sub
icebp
inc
pop
in
in
lods
out
cmp
insl
jp
in
xlat
in
mov
in
imul
jae
mov
pop
pushf
mov
add
cwtl
and
test
aaa
jle
and
pop
sbb
cmp
xchg
cmpsl
aaa
pop
in
jbe
out
add
mov
test
add
cmpsb
pop
sbb
ds
mov
fucomip
adc
mov
cmp
lcall
xchg
in
adc
lock
ljmp
popa
jbe
xchg
rcll
rorl
shlb
outsl
sti
xor
ds
jne
jmp
movsb
test
jne
pop
out
pop
out
mov
in
nop
mov
sbb
mov
shll
push
dec
insl
jns
sbb
jbe
jnp
lea
ret
sub
stos
dec
enter
xchg
imul
mulb
rcrb
or
jmp
lods
insl
mov
pop
loopne
cmp
mov
fcmovb
bswap
fcomi
inc
add
loope
adc
jge
loope
mov
push
mov
enter
lods
int3
scas
ret
scas
push
aaa
sarl
arpl
loope
xor
sbb
mov
mov
clc
add
cs
pop
adc
cltd
push
je
push
ret
sub
scas
in
mov
mov
adc
xor
push
daa
cwtl
cmc
mov
in
push
mov
sbb
out
lahf
add
add
nop
jb
lock
das
or
adc
popf
lahf
fimuls
dec
imul
or
adc
xor
cmp
push
incl
cmp
sbb
xor
xor
loope
cld
pop
inc
test
cmp
fisttps
js
outsb
xor
xor
sbb
jmp
mov
sub
mov
mov
xchg
je
pop
push
cmp
in
inc
xchg
sbb
fmul
pushf
adcl
push
xchg
sub
lods
es
popf
icebp
fisubs
dec
sub
nop
movsb
lea
jle
das
lret
and
jo
out
scas
pop
inc
nop
js
push
push
mov
icebp
imul
pop
repnz
push
mov
jle
dec
add
dec
mov
rol
fwait
push
cs
outsl
push
cld
enter
out
jp
aam
and
in
loopne
mov
inc
icebp
xor
inc
loop
movsb
jns
out
lods
loope
pop
add
out
jmp
xchg
push
in
mov
inc
cmp
jle
les
sub
push
fstpl
and
mov
clc
lock
imul
pop
movb
xor
cli
add
push
cmpsl
push
add
mov
mov
inc
xor
outsl
and
fwait
rorl
cltd
push
dec
sbbl
adc
push
push
es
add
lcall
test
lea
jae
push
loopne
out
or
cmp
mov
or
sub
loope
sbb
xor
add
lock
fildll
xor
icebp
add
shl
call
push
push
push
jl
mov
pop
pop
ret
sub
jno
mov
xor
das
sti
xchg
push
int3
hlt
mov
clc
xchg
cmc
xchg
lret
lock
mov
inc
lahf
mov
jo
pop
subb
jo
popf
test
adc
push
pop
pop
push
in
outsl
outsl
adc
pop
cld
and
mov
sbb
insl
sbb
jae
out
fcmovne
fldcw
call
mov
or
mov
jg
mov
pop
mov
mov
xor
dec
jle
jbe
stos
xchg
and
mov
push
inc
gs
dec
out
mov
das
pop
or
hlt
loop
xor
repz
pop
aaa
or
dec
outsb
ret
and
cs
xor
sbbb
dec
xchg
and
and
jo
sub
jne
jb
das
adc
loope
add
outsb
std
addb
lea
dec
jns
clc
leave
int3
jecxz
ja
ja
sahf
or
push
mov
call
in
mov
int
mov
inc
fnsave
jg
xor
sub
test
cltd
cmp
xlat
xchg
push
cs
dec
call
mov
sbb
outsb
lcall
pop
pop
or
jnp
lea
xchg
push
ljmp
pushf
dec
cmp
fdivr
jmp
jg
incb
pop
push
in
inc
jne
cmc
outsl
enter
pop
add
mov
cmp
hlt
jl
stos
mov
rol
aam
push
sub
inc
push
jecxz
pop
xor
stos
mov
mov
mov
js
lea
or
filds
testl
xor
in
jge
dec
inc
dec
stc
xor
pushf
dec
test
xchg
call
sbb
inc
jo
fwait
pop
ss
and
repnz
dec
cltd
lret
addl
loopne
les
aam
addb
das
outsl
fcmovbe
cmp
add
cwtl
or
stos
push
stos
cmp
cwtl
das
sbb
inc
xchg
mov
mov
mov
jbe
mov
push
dec
stos
push
repz
imul
imul
movsb
cmp
test
test
jle
add
xor
ljmp
loopne
inc
mov
sbb
mov
ds
fs
popf
outsb
pop
notl
call
xchg
daa
rorb
xor
std
mov
push
xchg
fs
and
or
jb
ljmp
popa
pusha
xchg
loop
cld
jbe
cmc
mov
inc
repz
les
adc
cld
loop
leave
mov
arpl
jns
xor
mov
ss
stos
mov
sub
cmp
mov
jae
adc
inc
inc
push
nop
mov
out
test
ret
in
in
mov
and
or
cld
add
in
cmp
jmp
pop
add
mov
out
xlat
pop
aad
ss
sbb
add
fdivl
outsb
and
xchg
pop
xchg
rclb
dec
and
mov
out
addr16
adc
sbb
jns
mov
mov
fbld
addl
sub
pusha
push
fwait
sbb
mov
lock
idivl
dec
mov
mov
jmp
jae
fwait
add
int
xor
fildl
daa
fwait
icebp
fwait
mov
jg
gs
mov
cli
call
ds
leave
cmc
shl
mov
xchg
xor
and
ffree
sub
movsl
fisubrl
jmp
ds
stos
dec
mov
js
mov
push
push
jecxz
mov
or
jecxz
ljmp
push
lods
dec
mov
mov
sbb
cmpb
xchg
jns
dec
add
xor
jbe
xor
rorb
xor
jmp
das
jb
dec
xor
bsf
imul
fsubrl
xchg
mov
aas
pop
hlt
into
mov
repnz
adcb
cmp
lret
je
mov
mov
jg
add
mov
rcrl
jno
push
lds
cs
mov
sub
mov
and
mov
cmpsb
or
in
sbb
ror
cli
and
shr
push
data16
in
inc
mov
push
push
fisubl
mov
out
xor
out
das
iret
and
int
iret
push
pusha
cmp
addr16
sbb
or
fbld
lods
outsl
sbb
ja
xor
or
ret
std
dec
lods
jmp
xchg
adc
and
push
push
sbb
mov
cltd
and
movsl
aam
push
mov
mov
xlat
xchg
mov
inc
out
xor
subl
mov
push
mov
mov
xchg
mov
mov
in
sahf
lret
mov
xor
inc
sbb
in
xor
scas
out
mov
cmp
pop
aas
and
push
push
outsb
loop
dec
in
dec
arpl
aam
je
mov
fnstenv
decl
pop
pop
dec
push
or
sub
xchg
ja
addr16
lods
push
in
dec
jnp
jecxz
cmpsb
and
lcall
sub
pop
add
data16
mov
out
ror
mov
insl
out
aam
les
icebp
jge
add
test
insb
xchg
test
inc
ja
jne
pop
imul
adc
mov
leave
rol
mov
movsb
in
add
mov
test
cmpsb
dec
cmp
cli
je
cmp
nop
dec
jge
out
imull
imul
fisubrl
stos
pusha
ljmp
dec
jl
push
mov
int
es
and
pop
fidivrl
dec
repnz
shl
inc
or
in
out
pop
jmp
cmp
lahf
ja
loop
dec
sub
insl
and
rorl
xor
push
sub
sub
pop
xor
adc
sub
push
pop
xchg
dec
or
shll
dec
je
mov
mov
adc
mov
mov
or
jno
mov
mov
shrl
xor
push
push
mov
ret
outsb
in
xor
stc
sub
jle
dec
add
xchg
outsl
jl
adc
add
sbb
fildl
jge
inc
mov
cli
xor
xor
rolb
add
nop
ja
in
push
mul
shrl
mov
mov
repnz
outsb
dec
jns
sbb
xchg
jnp
xor
lea
std
stc
sbb
cmpsl
int3
pop
mov
mov
mov
mov
push
negl
mov
cs
stc
adc
arpl
aaa
into
ds
out
arpl
pop
cmpl
clc
fldcw
mov
and
mov
mov
jp
cwtl
cld
jmp
and
sub
pushf
scas
loop
jle
je
push
mov
jecxz
loope
and
arpl
add
add
push
mov
out
imul
loope
test
in
and
inc
pop
xchg
roll
cs
pop
sub
sbb
outsl
jge
add
int
and
es
sbb
jb
mov
lahf
rcrl
mov
fsubrs
imul
fdivs
mov
cmp
sub
jbe
lahf
mov
in
ljmp
pop
xchg
lock
aad
aad
loopne
push
mov
iret
or
mov
sub
mov
loope
mov
outsl
ss
jb
out
mov
stc
bound
out
and
test
bound
outsl
sub
push
lahf
ficoms
sub
push
mov
jo
mov
add
cld
imul
es
in
mov
outsb
cld
aam
cld
test
push
sub
lods
test
lods
sbb
pop
out
sbbb
push
lods
ja
sbb
nop
scas
lock
lahf
and
sbb
mov
cmpsl
mov
push
add
out
sub
idivb
mov
dec
cmp
mov
sub
push
idivb
or
cwtl
dec
cmpsl
jb
jl
xor
pop
ljmp
dec
shrl
clc
mov
divl
adc
push
call
inc
push
fnstenv
push
xlat
lods
sbb
icebp
sbb
out
loop
jo
sbb
jmp
jg
fcomps
insb
lea
sub
fbld
je
push
cmp
mov
mov
cli
pop
lahf
stc
in
movsb
mov
inc
sub
movb
cmp
addl
das
cmp
xor
pop
cmp
mov
addr16
lcall
out
mov
cmpsb
adc
xchg
jmp
push
pusha
pop
imul
test
or
jbe
pop
orl
out
mov
pop
js
pusha
movl
cmpsl
push
dec
shrl
pop
jne
sub
scas
push
gs
cmp
repnz
shll
sbb
daa
orl
pop
rol
sub
hlt
pop
out
cli
xchg
mov
lods
pop
mov
jno
or
push
divl
fimull
mov
std
das
xchg
ljmp
imul
xchg
and
jge
mov
push
dec
in
pop
shl
xchg
sarl
mov
das
stc
xlat
jge
jg
xlat
cwtl
adc
mov
lret
xchg
push
pop
insb
or
or
pop
mov
jae
fwait
aad
sbb
cld
jo
jl
fwait
into
push
jb
dec
repz
or
cmp
dec
stos
movsl
outsb
sarl
stos
aam
frstor
jnp
loop
and
lahf
xchg
aas
jl
nop
iret
pop
scas
fisubrl
mov
sbb
stc
push
std
lret
adc
or
js
mov
je
iret
or
mov
fmuls
insb
mov
rorb
aad
mov
push
adc
lock
mov
sub
fwait
pop
pop
or
or
mov
jo
or
ljmp
cld
dec
fwait
mov
clc
outsb
adc
pop
repnz
xor
jl
inc
xchg
add
pop
cs
movsl
cli
inc
mov
mov
add
jg
jl
mov
sti
int3
repnz
mov
dec
loope
add
pop
cmp
sub
sub
divl
shlb
jmp
mov
mov
jns
push
xor
pop
out
pop
and
jl
loope
xchg
cmpsl
aad
add
sahf
sbb
add
ljmp
insb
mov
dec
loopne
mov
scas
jl
fdivs
in
dec
dec
add
pushf
mov
push
cli
inc
dec
push
jb
andl
add
push
add
sbb
clc
aas
jns
adc
cmp
leave
push
add
movsb
and
movsl
xchg
sub
mov
stos
jg
arpl
mov
push
pop
pop
ja
fbld
sbb
mov
or
adc
lret
stc
adc
int3
sub
dec
xchg
repz
sub
xchg
mov
mov
movsb
adc
rclb
popa
cmp
movsb
sti
add
sahf
in
push
aaa
cwtl
mov
sbb
dec
ss
pop
pop
mov
mov
in
sub
lret
adc
addr16
and
or
push
push
shll
cmp
aaa
sbb
cmpsb
ds
loopne
xor
gs
inc
sbb
clc
pop
and
add
sbb
bound
into
icebp
mov
inc
xchg
fwait
out
insb
pushf
test
lea
bnd
call
inc
and
xchg
jmp
repnz
and
in
ror
adc
mov
xor
xor
out
xchg
dec
gs
fwait
cmp
jne
cs
inc
sbb
sub
inc
sbb
dec
jnp
adc
in
mov
ja
notb
and
repnz
scas
nop
aaa
and
outsl
xorl
push
repz
iret
frstor
test
pop
cmpsb
or
sbb
btc
and
js
sbb
push
push
and
add
adcb
pop
jmp
ficompl
pop
or
xchg
inc
or
push
xchg
sbb
mov
xorl
xchg
icebp
inc
dec
dec
pop
xchg
adc
or
fdivrl
xor
stc
mov
negb
and
mov
or
mov
and
enter
mov
test
or
aam
xorl
aam
sub
shlb
push
xchg
popa
out
hlt
sbb
fdivrs
xor
mov
sbb
subl
push
fnstsw
xchg
mov
fsubl
in
or
cltd
or
enter
and
push
out
or
inc
out
pop
pop
movsl
stc
cmc
negl
insl
and
cmpsb
or
cmpsb
jae
mov
sub
fs
repz
outsb
into
mov
stos
pop
jmp
fstpl
lock
and
and
or
mov
inc
xchg
dec
xor
ficomps
xor
lods
sbbb
enter
arpl
addb
adc
loop
div
or
clc
fimuls
stc
xor
scas
inc
jmp
pushf
push
xor
dec
rclb
xor
mov
mov
inc
test
dec
aas
insl
and
dec
mov
mov
repz
adc
or
lahf
push
aam
sbb
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
jae
std
int3
jo
dec
mov
pop
add
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
cmpsl
cmc
rcrl
pop
dec
mov
je
mov
stc
bound
jno
xor
mov
cmp
mov
jl
test
sbb
add
cmp
push
push
rcrb
xchg
clc
mov
fistpl
clc
test
cmc
imul
loopne
in
push
mov
pushf
mov
movsb
dec
mov
mov
push
in
mov
fsts
and
push
ss
push
and
notb
cli
cmc
and
imul
lahf
stos
gs
xchg
in
out
movsb
and
xchg
xchg
mov
ror
push
fmull
xchg
adc
pop
test
repz
aam
mov
enter
imul
clc
adc
dec
movsb
jno
cmp
mov
mov
dec
lods
add
daa
hlt
jno
or
xor
ret
push
jp
jecxz
ds
andl
enter
mov
repnz
mov
or
sub
mov
xlat
push
ljmp
xor
and
out
dec
mov
cwtl
or
sbb
add
bnd
mov
xchg
xchg
mov
ret
sahf
cmp
sub
mov
bound
cmp
shl
movsl
xchg
push
es
sub
pop
dec
ss
sbb
pusha
adc
sub
call
imul
mov
and
mov
and
das
dec
fcmovu
ds
inc
movsb
push
jecxz
out
lea
xor
jb
dec
pop
dec
mov
js
aas
cmp
cmc
loopne
push
pop
insl
pop
out
sbb
jns
ret
push
ret
lcall
mov
push
sub
rorb
ja
in
sub
cmp
pop
push
cmp
xchg
push
push
lods
lock
loop
or
cmpb
push
loopne
dec
push
sub
inc
cltd
mov
fstl
js
cltd
mov
popf
in
dec
and
mov
pop
pop
stos
scas
test
xchg
fdivl
or
hlt
xchg
jbe
cld
aaa
xlat
cmp
and
mov
pop
sbb
stos
push
sbb
popa
or
inc
test
xor
dec
loope
dec
stos
jo
sarl
lea
push
pop
pop
cmp
push
xchg
and
xor
push
insl
xchg
mov
add
mov
adc
and
fdecstp
rcll
insl
cmp
dec
xor
stos
xchg
push
cmp
mov
pop
inc
fsubs
test
cld
scas
std
enter
xor
dec
daa
pop
insb
lcall
out
ds
es
in
daa
inc
in
mov
out
lods
inc
inc
cmpsl
sbbl
shl
pusha
sub
jno
pop
aas
push
test
pop
or
xchg
pushf
xor
sbb
loop
popf
adc
mov
fs
xor
pop
cmp
mov
mov
jp
imul
dec
out
lods
sub
fldcw
cld
repz
es
add
movsl
mov
fwait
or
dec
enter
push
cmp
int
addr16
jno
cld
fmul
cmp
cmp
int3
xchg
dec
shll
inc
add
jmp
or
xor
sbb
adc
add
scas
add
add
pop
xchg
rclb
shrl
mov
out
mov
xor
insb
das
bound
test
fsubrs
jo
adc
ficoms
ficompl
add
dec
addl
or
and
lds
call
pop
scas
std
inc
mov
sub
and
bound
jo
enter
lods
jae
je
inc
xor
cmpsl
mov
xor
mov
loope
inc
mov
data16
cmp
jge
push
sahf
arpl
loop
and
jbe
leave
aam
lods
pop
mov
popf
imul
out
les
xchg
inc
mov
xor
imul
sbb
add
mov
adc
pop
mov
jae
and
ret
repz
mov
icebp
inc
hlt
call
loop
adc
ss
or
ljmp
dec
lock
adc
enter
repnz
mov
cmp
pop
les
jl
mov
xor
movsb
mov
cs
stc
addr16
sbb
imul
cmp
lock
outsl
sub
fwait
mov
ds
stos
jns
inc
adc
adc
lds
or
inc
outsb
in
jno
adcb
popa
test
push
into
mov
cmp
adc
daa
mov
ds
jmp
mov
mov
int
mov
adc
pop
sub
call
scas
popa
fcmove
aad
popa
shlb
outsl
fsubp
lahf
mov
xor
leave
xchg
clc
xchg
insb
lret
ljmp
stc
adc
sbb
and
mov
mov
loop
stos
call
sbb
push
repnz
in
or
cmpsl
call
outsl
or
sbb
repnz
cmc
add
std
cltd
enter
jp
iret
imulb
jno
mov
imul
out
sub
out
roll
test
mov
inc
shll
test
aas
xor
xchg
int
xchg
mov
adc
mov
pop
test
pushl
insb
pop
lea
dec
das
pop
xchg
pop
cli
jmp
pop
jbe
push
ficompl
jle
ret
adc
cmc
int3
xlat
mov
add
into
gs
fs
push
mov
sub
jbe
mov
and
decl
cwtl
xchg
imul
and
mov
xor
push
mov
sub
subl
pushf
xor
mov
fstl
xor
adc
mov
xchg
add
subb
fiaddl
pop
jl
imul
push
pop
ljmp
mov
dec
xor
sub
and
cmp
sbb
iret
imul
adc
addb
xor
mov
mov
lods
ds
cltd
insl
adc
mov
inc
andb
movsb
jp
add
fildll
ret
add
cmp
ret
negb
sbb
aam
jmp
dec
or
orb
mov
ret
je
je
push
test
xchg
hlt
hlt
xor
rorb
dec
pop
push
lea
push
push
push
incb
rorl
or
data16
mov
cmpsl
enter
mov
inc
stos
jmp
jno
loopne
dec
sahf
add
mov
or
lcall
and
add
push
add
and
popa
mov
mov
popf
mov
sub
ljmp
or
insl
out
lcall
dec
cld
add
mov
dec
xor
or
pop
outsb
scas
inc
aad
arpl
scas
mov
jno
pop
or
mov
fwait
mov
popf
insl
sbb
adc
cs
dec
lret
loope
ret
inc
lahf
insl
xchg
xchg
mov
mov
imul
fdiv
fisubl
sub
push
sbb
dec
mov
sbb
ss
push
add
ret
outsb
rcrb
dec
lcall
sti
daa
movsb
dec
icebp
xor
inc
cmp
les
fstpl
mov
and
loopne
jmp
mov
lret
andb
inc
scas
xchg
out
adc
subl
add
gs
pop
mov
push
imul
cmpsb
and
cmc
ja
iret
andl
xchg
sbb
loope
cmp
mov
sti
stos
pop
insb
add
jns
fwait
outsb
xchg
test
dec
cs
je
and
movsl
add
subb
dec
lods
scas
cwtl
andb
and
out
dec
mov
adc
mov
mov
imul
lods
loopne
clc
xchg
sbb
das
aam
cmc
cltd
nop
mov
shll
mov
out
stos
add
push
sub
sub
jbe
in
call
xor
and
pop
push
xchg
jbe
fcoml
add
dec
je
push
filds
stos
or
or
mov
jae
fs
mov
sti
pop
stos
xchg
int
jg
xor
add
push
orb
jno
sub
push
mov
adc
insb
mov
and
cmp
sbb
pop
imul
scas
inc
loop
cld
fwait
outsl
sti
adc
mov
imul
dec
pop
shrl
lds
test
insb
div
sub
and
jnp
mov
inc
pop
inc
mov
cmp
pop
es
rcl
daa
popa
mov
mov
jnp
mov
xchg
cld
ret
sub
xor
mov
pop
shlb
outsb
fmuls
popf
sbb
sbb
dec
popa
out
sbb
sbb
adc
sbb
pop
sti
mov
push
xlat
dec
jl
jne
loopne
rolb
daa
test
adc
pushf
push
int3
xor
xchg
dec
and
adc
xchg
fmuls
in
push
enter
aaa
test
pop
or
xor
fisttps
aas
jne
push
sbb
push
mov
pop
addl
sub
or
popf
cmc
into
jns
repnz
dec
cltd
dec
test
mov
ja
jmp
dec
loope
gs
xorb
sarb
fistpl
pusha
ret
mov
jnp
pop
cmp
mov
fisttps
arpl
mov
sbb
jbe
push
sahf
pop
jmp
jmp
mov
aaa
shrl
ret
or
cmc
mov
cmpsl
cmc
popf
rcr
out
sub
mov
mov
mov
dec
sub
fcompl
lods
lea
mov
pop
aad
fmul
pop
lds
fwait
mov
int
add
gs
popf
jg
mov
dec
sahf
leave
push
cmp
add
dec
pop
shll
addl
sbb
cmpsb
xor
pop
mov
cli
cmp
jl
mov
or
mov
cwtl
stos
push
or
ret
out
mov
out
mov
lods
pop
push
sarb
add
sahf
adc
mov
mov
push
dec
or
mov
xchg
push
pop
xchg
lret
xor
dec
fnstcw
push
and
push
add
loop
data16
mov
arpl
inc
xor
ss
xchg
xchg
fcompl
loope
adc
sub
ret
loope
leave
mov
xchg
mov
sbb
cmpsb
mov
push
mov
iret
ljmp
push
xchg
iret
loope
lock
mov
mov
mov
fdivrp
lcall
jno
jmpw
xchg
push
in
xor
or
pop
sub
mov
es
mov
sbb
adc
xchg
loopne
or
test
xchg
and
cmp
mov
mov
mov
leave
cmp
lret
pop
pop
outsb
fcoms
test
inc
pop
int3
in
mov
outsb
and
and
pop
adc
mov
inc
add
xor
xchg
scas
aad
aas
pop
arpl
xchg
jb
inc
shrl
mov
ret
outsb
enter
fcmovu
hlt
mov
fmulp
jp
ds
or
cmp
xchg
cmp
enter
aam
les
aas
fcmove
cltd
test
cli
sbb
out
loope
cmpsb
push
lcall
pop
and
jbe,pn
sarb
fmuls
jo
shll
outsb
inc
lds
pop
repnz
or
dec
push
jp
stos
jnp
xor
or
adc
ljmp
loop
loopne
and
fxtract
inc
fbld
cmpl
daa
add
imul
ret
and
aad
dec
cmpsb
lods
inc
repnz
loop
jl
add
in
addr16
in
inc
xchg
rcr
ret
cmp
iret
lods
mov
sbb
and
inc
test
xor
das
cltd
xor
sbb
and
jae
add
icebp
add
inc
push
cltd
inc
imul
hlt
lods
adc
mov
xchg
aam
mov
jbe
sub
mov
add
sbb
sub
pushf
test
push
enter
push
jb
iret
push
mov
cmc
hlt
add
pop
subb
out
sbb
test
fimull
xor
or
or
dec
cmp
xchg
loop
arpl
iret
push
sub
fs
shl
loope
mov
jae
gs
jnp
add
lods
ss
stos
test
das
movsl
jb
enterw
pop
fistpll
adc
push
xchg
movsl
rsqrtps
or
mov
out
bnd
and
pop
fidivs
add
jecxz
das
insb
test
xor
dec
dec
mov
lcall
imul
fsin
movsl
std
pop
iret
sub
call
xchg
cmpsb
call
cmp
enter
mov
imul
cmc
xlat
nop
sbb
fs
jae
or
inc
sti
cmp
arpl
xchg
mov
int3
pop
shl
push
push
mov
xchg
loop
and
mov
xchg
xchg
or
mov
loopne
arpl
push
dec
add
inc
shl
adc
xchg
jg
bound
add
sbbb
dec
imul
sub
add
cmpsl
out
xlat
fnsave
out
nop
dec
mov
sub
dec
push
sub
lahf
mov
dec
jge,pn
hlt
xor
lcall
mov
and
or
stos
adc
cmpsb
pusha
and
xor
je
aas
and
and
fadds
inc
xchg
inc
lret
fadds
pop
imul
aad
bound
in
jge
fldenv
sub
gs
test
addr16
pusha
jmp
bound
jns
jl
pop
mov
add
mov
iret
or
push
sbb
ret
sti
jp
sbb
sbb
and
cmp
push
pop
enter
add
pop
fcmovu
pop
daa
mov
movsb
pop
jns
rorb
cmp
xchg
lds
jp
xlat
push
subl
popl
std
fildl
mov
daa
rorb
out
push
or
mov
fiadds
push
add
inc
cmpl
cwtl
clc
mov
nop
icebp
and
fisubl
and
das
imul
bound
add
sahf
lods
out
adc
ret
inc
fimull
xchg
sub
mov
pusha
xor
dec
and
push
cmc
mov
sub
dec
out
push
jns
pop
push
add
cmp
call
mov
sti
mov
call
dec
jae
int
mov
or
or
add
add
mov
cmp
sbb
imul
inc
stos
in
sbb
cmp
pop
push
sbb
push
into
jl
stc
es
mov
insl
lds
pop
in
push
mov
xorl
or
inc
jb
push
sbb
xchg
lock
mov
sar
popf
xor
std
mov
lods
shlb
pop
and
dec
xor
jecxz
and
inc
pop
inc
into
lods
pop
push
inc
pop
movsb
loop
add
and
cmc
pop
pop
in
xor
repz
add
pop
sub
shrl
sbb
mov
cmp
fmuls
dec
dec
sti
jg
sti
mov
xor
fdivp
and
lret
fimuls
jmp
lock
pop
out
sub
sub
cli
addr16
movsl
mov
das
push
jle
push
shlb
int
in
xchg
lods
cltd
xor
imul
and
iret
idivl
mov
in
inc
add
mov
inc
xor
mov
mov
dec
adc
jp
shll
mov
push
test
dec
shrb
out
or
sahf
es
scas
or
sahf
mov
sahf
xchg
sbb
add
mov
pop
cmp
shlb
aas
insl
ds
dec
jp
test
notl
adc
push
mov
movsb
and
fisttpll
cmpsl
insb
sbb
and
inc
mov
incb
mov
sahf
dec
adc
mov
test
ljmp
and
dec
pop
or
ret
push
mov
les
push
scas
std
lret
ror
int3
fistps
inc
sub
jecxz
mov
sti
ljmp
jno
cli
scas
test
bswap
das
jl
xchg
andl
fisubs
cmp
movsb
xchg
jb
mov
or
adcl
fcompl
outsb
stc
sub
sahf
jge
aam
add
call
jecxz
jns
shr
cmp
adc
add
scas
add
add
dec
xor
leave
pop
aas
pusha
mov
and
in
cmpsl
fcmovbe
ljmp
and
aas
mov
movsl
movlps
out
movl
xchg
xlat
add
inc
or
xchg
in
insb
fs
and
mov
fsin
and
int
fmul
push
mov
adcb
push
call
dec
out
adc
insb
adc
imul
cli
pusha
mov
dec
les
in
fwait
cmpsl
mov
mov
mov
ret
jae
push
sti
xchg
ret
ljmp
jo
jp
cmp
imul
and
dec
sbb
push
scas
xchg
mov
cwtl
rcl
sbb
and
pushf
add
scas
mov
mov
popf
and
sbb
sbb
add
inc
aam
enter
les
mov
mov
icebp
inc
add
nop
add
mov
mov
sbb
pop
jb
pop
sub
in
pop
mov
xor
or
xchg
jb
inc
fcoml
cltd
jmp
ret
dec
sbb
arpl
mov
mov
mov
add
pop
subl
fmul
rcl
cmp
leave
dec
jmp
sbb
fs
jo
push
out
xchg
aas
mov
inc
dec
lods
mov
test
aas
aaa
daa
je
mov
fcomps
dec
push
jg
xchg
popf
add
daa
pop
cmpb
push
xchg
xchg
lods
jbe
insl
or
test
fimuls
mov
sbb
sbb
push
js
mov
sbb
jne
sub
je
xchg
and
dec
mov
xchg
inc
cmc
stos
popa
cmc
daa
pop
movsl
xchg
nop
insb
adc
test
test
das
aas
lea
jg
mov
out
loopne
xchg
scas
push
push
loop
je
lds
divl
mov
or
test
divb
loopne
gs
or
lret
sub
out
xchg
push
sub
fdivs
cmpsl
icebp
xchg
lret
jmp
int
xor
mov
test
cmpsb
push
mov
cmpb
push
stc
cld
xchg
aaa
jne
rclb
dec
jmp
add
inc
mov
mov
sahf
mov
lret
sti
mov
xor
mov
pop
clc
dec
or
js
sub
outsb
int3
push
les
mov
pop
inc
fs
adc
add
push
leave
jnp
bound
out
insb
push
add
xor
sub
lds
and
stos
cmc
jae
xchg
out
test
sub
inc
in
into
pop
pop
add
sar
sahf
cmp
or
mov
mov
pop
fisubrs
test
iret
int
mov
and
les
cmp
pop
sbb
test
mov
mov
cltd
dec
hlt
fucomip
cmp
movsb
jmp
cs
cs
fwait
lahf
push
dec
xor
fcmovnu
sub
and
xor
outsb
dec
adc
ja
cmpsb
aam
ret
add
fbld
popa
stos
and
stos
push
es
lds
or
adc
cmp
adc
mov
movsb
jmp
lahf
iret
sbb
cmp
testl
mov
cli
jecxz
xchg
popf
in
pushf
cmp
test
mov
lret
jbe
xchg
sub
cmp
add
add
add
out
data16
lods
cld
mov
hlt
xor
jg
add
scas
add
add
add
mov
jns
daa
mov
mov
or
jge
fldcw
mov
out
jne
sub
mov
jge
adc
mov
jmp
ljmp
xor
hlt
popf
sbb
mov
inc
xchg
cld
mov
and
movl
jae
xchg
das
or
xchg
out
push
out
cmp
js,pn
xlat
fmulp
push
dec
mul
aaa
push
adc
shrl
enter
les
mov
xchg
fmulp
push
out
mov
sarl
aad
mov
dec
jmp
movsl
fwait
pop
lret
fidivrs
adc
dec
in
addl
jmp
lahf
adc
push
fwait
xchg
cld
test
hlt
pop
or
cmp
idivl
enter
jle
lock
push
addr16
dec
ja
les
pop
pop
push
inc
das
psraw
aad
fstps
adc
add
mov
xchg
jmp
or
and
mov
std
or
inc
or
loop
outsl
or
inc
les
int3
mov
bound
pop
add
das
sub
xchg
xlat
sbb
xchg
sbb
mov
movsb
mov
mov
lds
add
popa
mov
dec
movsl
jecxz
mov
jle
lahf
mov
sub
xlat
mov
scas
sbb
jg
pushf
sub
pop
in
push
push
leave
mov
fsubl
inc
pop
lock
push
jns
and
fbstp
pop
and
shr
repz
mov
or
lret
fnstcw
lock
jmp
ficomps
js
jecxz
sub
cmpsl
lahf
lea
clc
scas
iret
pushl
cli
jnp
inc
push
cld
push
adc
faddl
loopne
xchg
cmpl
ret
jp
orb
xchg
arpl
xor
xchg
loope
addb
aad
inc
xor
das
mov
out
loop
lahf
out
or
mov
movsl
in
aas
stc
fcompl
movsb
mov
filds
or
cmp
cmp
mov
mov
jns
push
repnz
dec
stos
mov
mov
or
dec
out
jg
cmpsb
cmp
pop
ljmp
int3
xchg
into
mov
cmp
loopne
pop
mov
data16
rorl
adc
cmp
enter
std
add
add
ds
iret
dec
loopne
push
pop
xor
fildl
hlt
outsl
movsb
jne
data16
mov
sarl
aaa
in
mov
jno
sub
xchg
mov
leave
push
pop
or
pop
out
mov
and
sub
negb
mov
push
push
dec
cld
aad
mov
sub
or
xlat
scas
popa
or
sbb
ret
lret
lret
jno
mov
je
mov
ljmp
insl
mov
lret
or
je
dec
std
jl
pusha
enter
add
add
in
mov
jnp
mov
xchg
mov
in
jecxz
or
fs
pushf
insb
aas
bound
jg
mov
in
jo
jg
lods
sub
mov
adc
pop
add
xchg
sub
cmp
xchg
into
pushf
pusha
jle
lods
call
mov
lds
aas
adc
mov
aaa
add
neg
jmp
cli
and
and
add
or
jmp
mov
xor
aam
xlat
loop
aam
pop
mov
add
xchg
push
jle
or
xchg
rclb
outsl
mov
and
and
push
scas
mov
pop
dec
push
pop
fadds
add
pop
pop
aad
pushf
aad
mov
pop
stc
jne
inc
jle
lcall
push
out
outsb
test
cmp
jg
test
sub
jge
mov
add
decb
jmp
into
cmpsl
push
xorb
mov
dec
in
and
arpl
mov
dec
fwait
mov
fcomps
repz
pop
cmp
inc
ror
inc
ss
aas
xchg
jno
pop
push
fwait
movsb
stc
repnz
sti
push
fwait
aad
sti
mov
daa
out
jl
filds
add
mov
mov
cmp
lahf
shlb
addl
ss
movsb
mov
dec
fisttpll
scas
packssdw
aas
pop
cmc
mov
add
aam
fisttpll
jb
sti
mov
jo
dec
and
dec
loopne
push
and
xor
xlat
xchg
ds
nop
ret
cmc
mov
jns
xchg
sbb
jg
push
ja
xlat
jl
rclb
adc
xchg
js
lcall
mov
jge
sub
jbe
ja
pop
lock
pop
cld
xchg
mov
fstpt
xchg
cmp
int
out
out
test
dec
aad
jno
push
or
mov
pop
jmp
daa
jne
mov
xchg
xchg
pusha
pop
cli
jnp
das
ja
aaa
in
xor
addr16
loopne
mov
stc
mov
push
shld
cld
call
je
push
test
adcb
sub
cmp
mov
sub
mov
xchg
lahf
stos
or
sub
ds
mov
xor
ds
inc
inc
inc
mov
mov
jne
jb
sbb
fistpll
pop
cmc
pusha
xchg
mov
dec
and
push
ljmp
mov
mov
or
jecxz
cld
mov
adc
fcmovb
test
jo
cmc
mov
notl
das
es
cld
out
jge
jne
xor
pop
push
movsb
mov
inc
dec
and
jne
jmp
scas
loop
pop
imul
sbb
cld
fnstcw
fcoms
loope
std
mov
xchg
lahf
fcompl
dec
jno
les
adcl
and
or
rol
mov
loop
xchg
test
dec
push
xor
jl
dec
mov
cmpsb
les
jl
cwtl
test
pop
mov
xor
jnp
jg
stos
cmp
jbe
sub
xor
inc
sub
lret
rcr
das
push
dec
pop
xchg
push
cld
cwtl
mov
xchg
jae
mov
mov
jle
icebp
dec
or
adc
repz
dec
sub
in
test
pop
test
movsl
mov
mov
call
test
je
and
or
cmpsb
jge
xor
cmp
dec
in
cmpsl
or
ljmp
adc
outsb
ja
outsl
arpl
push
sbb
push
inc
mov
mov
add
and
insb
ljmp
jecxz
xchg
jns
rclb
psraw
call
mov
mov
out
cmp
inc
int
cld
mov
and
jmp
mov
cmp
add
mov
and
ljmp
ss
into
xor
sub
subb
jg
or
in
shrl
xor
loope
negl
sbb
mov
mov
cmpb
mov
out
xor
jge
insl
mov
cmp
dec
or
rcrb
jne
or
sub
rcrl
xor
nop
cs
mov
jns
addr16
pop
add
cli
cmc
pop
ja
xchg
call
or
sbb
and
add
movsl
xlat
push
push
or
inc
fmuls
in
in
ja
pop
subl
mov
sub
or
push
inc
dec
pop
ds
fcoms
cmpsb
xorb
and
vmovlps
cmp
outsl
cmp
mul
nop
int
mov
jl
mov
stc
fisubrs
dec
imul
arpl
xchg
ror
xchg
pop
lds
dec
hlt
cs
mov
jmp
cmc
iret
outsb
mov
jmp
inc
out
mov
mov
sbb
sbb
cmp
enter
mov
pusha
add
ljmp
bound
inc
js
out
addr16
or
jecxz
dec
call
out
scas
cmp
push
adc
std
dec
jbe
push
mov
mov
sbb
gs
cli
jp
cmp
xchg
gs
in
jae
mov
ja
imul
jmp
loop
std
stc
mov
stos
jmp
movsb
push
fmull
or
dec
sub
fidivl
lods
popa
pop
xorl
mov
aam
je
push
cmpsb
popa
je
bound
push
sbb
out
sub
push
pop
xor
xchg
push
inc
cmp
popf
sbb
bound
fsubl
ret
cmp
add
xchg
xor
or
popa
dec
imul
mov
ja
repz
sti
scas
aam
sbb
mov
jb
lods
or
inc
not
or
mov
inc
mov
cmc
sbb
cmpsl
pop
jnp
out
int
movsb
shrl
xor
add
aas
out
or
xchg
out
adc
inc
test
and
add
cwtl
outsl
popf
cmpsb
into
mov
rcrl
adc
adc
test
lds
mov
xlat
dec
test
lods
in
dec
aas
sahf
nop
in
je
daa
rclb
jnp
cli
push
adc
add
arpl
pop
push
inc
aas
push
cmp
sub
mov
mov
out
int
or
outsl
jmp
fadds
lods
xchg
mov
icebp
mov
mov
in
aad
imul
jae
outsl
in
js
enter
cltd
lea
inc
mov
pop
sti
nop
sbb
gs
mov
jge
pop
ljmp
icebp
mov
or
pushl
adc
mov
pop
add
inc
mov
cmp
lahf
or
jns
pusha
or
push
xchg
jge
mov
sub
mov
imul
add
mov
push
cld
xorb
out
xchg
xchg
ret
nop
push
pop
fmull
hlt
jmp
or
push
addr16
mov
addb
lods
cmc
xchg
xchg
stc
inc
mov
sub
add
add
add
test
sbb
dec
fisubl
jnp
test
scas
add
add
loope
rcl
test
sub
nop
decl
fnstcw
test
pop
adc
dec
pushf
test
lock
jge
push
repz
jp
je
jmp
repz
jl
imul
xor
inc
cmpsl
in
hlt
cmp
dec
or
inc
jp
dec
shl
cmp
jno
cmp
int3
fcompl
sub
pusha
push
fmuls
mov
gs
out
popf
dec
in
mov
cld
in
cwtl
sub
rcrl
rorb
jae
mov
mov
dec
inc
scas
je
hlt
ucomiss
or
loop
cmp
fnstcw
adc
lcall
push
xchg
nop
bound
and
push
dec
iret
rcl
xor
rcl
mov
out
mov
cmp
movsb
sbb
sahf
inc
pop
ljmp
mov
cli
lret
mov
cmp
adc
test
pop
das
mov
jmp
fs
xchg
clc
outsb
add
dec
push
add
orb
jne
push
jmp
lahf
push
out
push
jge
in
cs
sbb
sbb
in
sub
pop
in
xchg
mov
or
icebp
mov
add
xor
mov
sub
scas
ret
jle
jno
leave
xchg
add
mov
imul
xor
add
add
jae
mov
dec
shl
lods
cmpl
sub
sbb
inc
mov
mov
scas
frstor
xor
mov
jae
jmp
inc
mov
cmp
fwait
mov
cmp
scas
insl
mov
std
push
lods
mov
xor
pcmpeqd
fldenv
int3
add
xor
inc
add
jns
lcall
sub
jge
xor
hlt
lods
in
sbb
lods
cmpb
mov
aad
pop
mov
jo
push
push
addl
imul
and
sub
aam
inc
cmp
test
jl
push
jl
hlt
xor
push
jo
push
mov
mov
insl
movb
pop
and
loope
or
pusha
cltd
sbb
dec
fisubs
dec
mov
inc
fiaddl
xor
inc
pop
jne
or
add
or
cmpsb
bsr
ljmp
pop
enter
lcall
pop
sub
xchg
xor
xchg
mov
jg
mov
and
pop
bswap
cmp
call
aam
cli
les
mov
mov
push
call
and
insb
push
cmp
sbb
push
xchg
lods
shll
loopne
pop
out
push
mov
cwtl
sub
mov
in
leave
nop
stos
inc
xchg
imul
xchg
stos
negb
mov
cmp
test
shrl
or
mov
aas
addr16
out
dec
leave
adc
cmp
stc
fidivl
sbb
hlt
pop
mov
shr
js
or
xor
push
adc
lds
jg
dec
xor
rcll
ror
inc
jo
nop
je
hlt
je
lcall
push
andl
inc
xchg
fs
scas
add
jb
adc
loopne
push
and
cltd
dec
dec
aas
add
out
inc
dec
add
pop
cmp
add
or
fsubrl
jo
inc
lods
cmpb
mov
sbb
sahf
push
repnz
sbb
mov
xchg
sbb
clc
lcall
cmp
mov
inc
sbb
adc
cwtl
mov
roll
add
jmp
push
or
sub
mov
add
cmp
fbstp
outsl
or
push
xor
das
mov
mov
orl
dec
popw
add
nop
addr16
push
cltd
out
aas
mov
mov
or
mov
push
fnstsw
scas
int
fldl2t
int3
ret
and
movsl
call
push
dec
inc
add
out
adc
insb
ficoms
cltd
pop
and
in
fdivrl
fsubs
mov
and
lea
loope
jmp
pop
sahf
sub
popf
xchg
ret
lret
fdiv
sbb
mov
jns
aad
repnz
fistpl
cmpsb
testb
sub
sub
sbb
fcmovnu
and
daa
inc
xchg
add
mov
sahf
jae
xchg
push
xadd
into
xchg
in
push
test
ret
jle
xor
xor
rcl
data16
test
mov
mov
stc
pop
jle
testb
pop
outsb
dec
mov
lcall
push
int3
xchg
mov
rcrl
leave
pop
jo
jmp
mov
int
mov
cld
mov
xor
inc
ss
in
sub
ds
jbe
cmp
mov
fimull
cmc
fisubl
add
dec
cs
mov
pop
cmpsb
orb
inc
jmp
insb
and
es
loop
jno
fsubs
cmpb
shl
cltd
test
outsl
dec
out
adc
cmp
fsubrl
movsl
sub
fnstenv
add
in
repz
outsl
les
icebp
and
cmp
and
lret
insb
decb
jle
push
call
in
inc
pusha
imul
ret
aas
sub
mov
insb
mov
mov
int3
outsl
js
xchg
ret
pop
outsl
jne
sahf
in
pop
aas
sbb
sti
mov
out
and
xorl
aaa
pushf
aad
jle
adc
fidivs
ja
or
push
dec
mov
pop
push
xor
out
pusha
pop
popf
push
mov
rcrb
add
xchg
cld
lahf
add
mov
pop
add
sbb
ficoms
adc
xor
pop
add
jne
inc
dec
or
popa
adcl
mov
fs
mov
pop
or
sbb
ja
xor
loope
outsl
stos
lds
ss
pop
pusha
cld
mov
pop
and
jmp
add
and
test
stos
je
insl
mov
cmc
roll
xor
aas
sbb
add
or
rclb
and
out
mov
fisubrl
jg
and
notl
je
inc
mov
or
lar
add
arpl
arpl
insl
dec
and
test
adc
mov
in
aas
push
push
inc
sbb
sbb
mov
jle
mov
popa
push
fldl
sbb
mov
jge
in
mov
pop
in
sbb
pop
pusha
cmp
xor
mov
jb
xchg
cwtl
push
push
inc
sarl
mov
add
add
add
add
leave
or
add
or
sbb
ljmp
add
inc
das
insl
xchg
das
dec
push
dec
xor
dec
mov
sarb
dec
cmp
cmp
pusha
into
out
or
mov
adc
pushf
mov
or
cmpsl
cmpsb
push
or
jnp
push
nop
je
or
sbb
adc
clc
test
adcl
push
push
cmpsl
push
push
iret
repnz
test
sbb
repnz
cwtl
pop
pop
leave
cltd
pop
outsb
aad
fisttpl
mov
xchg
faddl
insl
xor
jmp
mov
push
stc
pop
add
into
movsb
into
xor
or
cltd
imul
jge
std
push
jg
xchg
and
mov
mov
rcrb
and
cmc
pop
test
mov
stos
fucomp
ds
lea
xchg
cmp
int3
adc
fcomp
pop
and
mov
fcomip
dec
test
sbb
xor
xchg
mov
in
pop
jle
into
hlt
lret
push
or
push
es
loopne
jmp
and
jae
sbb
pop
jno
hlt
add
mov
insl
mov
inc
shlb
in
repz
int
xor
mov
insl
ljmp
into
dec
es
jg
out
sub
arpl
test
ror
or
int3
jmp
adc
pop
adc
sub
lea
out
stc
loope
in
in
inc
mov
and
mov
shll
xor
fs
push
inc
push
xchg
insl
mov
shll
aaa
mov
push
sub
das
insb
mov
jle
pop
rorl
cmc
lahf
mov
test
popf
inc
sarb
sub
lods
cmp
loopne
push
mov
push
mov
mov
loop
fnsave
cld
dec
in
fs
into
add
je
inc
or
lods
jl
adc
or
bound
dec
in
lea
adc
cmpsb
lds
mov
out
test
push
das
sar
pop
mov
add
pushf
push
incb
sbb
imul
fiaddl
inc
lods
shrb
pop
test
aaa
ficoml
nop
xchg
cmc
ss
dec
fcomi
lret
pop
mov
std
pop
stos
xor
js
insb
psubusw
int
adc
jp
outsl
movsb
push
adc
mov
rcl
lods
jns
test
int
std
pusha
pop
les
cli
ss
fsubrs
or
adc
fmull
rcl
fwait
icebp
mov
mov
push
enter
aas
mov
xchg
cmp
xchg
fdivrl
les
mov
into
jp
rcl
xchg
nop
or
mov
dec
or
ret
cltd
and
inc
jbe
xchg
jno
adc
aaa
popf
or
roll
repnz
scas
pop
int
dec
outsb
mov
xchg
cmp
popf
inc
or
xor
pop
dec
mov
lea
lods
out
xchg
mov
mov
jg
sub
push
xchg
dec
push
mov
fstps
jmp
int3
xchg
push
aad
or
imul
unpcklps
pop
ss
push
call
adc
inc
jo
scas
mov
dec
into
repz
inc
mov
jo
dec
pop
mov
cmpsl
mov
pusha
dec
mov
ja
lods
out
pop
and
pusha
orb
fsts
mov
test
dec
mov
lcall
jle
and
pop
aas
pop
inc
push
addl
add
add
add
add
cltd
ja
daa
xor
cltd
dec
add
scas
add
add
outsl
les
ljmp
gs
stc
and
or
dec
sbb
call
cmpsb
xchg
pop
or
rcrb
inc
push
jmp
and
sub
push
fsubl
jb
dec
cmpsb
sub
pusha
mov
inc
add
popf
stc
pushf
call
loopne
push
and
jge,pn
cmc
lahf
adc
fnstsw
or
sarb
xchg
push
xchg
jnp
push
pop
pop
lea
mov
fcompl
mov
stc
jo
mov
stc
inc
int
loopne
and
sub
gs
ds
popf
or
clc
test
loopne
adc
pop
fisubl
shlb
ljmp
jp
stos
scas
pop
jmp
ljmp
inc
mov
stos
mov
lcall
ret
in
cmp
xchg
dec
adc
inc
add
cmp
cmp
mov
mov
sbb
ds
andl
cltd
out
and
push
lock
ljmp
jo
and
jb
pushf
outsb
into
mov
sub
adc
js
push
pop
cwtl
sub
pop
add
lcall
and
add
cmp
mov
in
and
sub
jmp
or
mov
push
xchg
fdivs
dec
cmp
or
pop
gs
add
cmp
fdivrp
sub
xor
mov
jecxz
out
mov
subb
inc
adc
scas
jae
and
cmpb
fidivrs
cwtl
sahf
outsl
notb
or
jmp
mov
adcb
inc
pop
lods
imul
dec
stc
mov
enter
hlt
cwtl
hlt
fidivl
cmp
fwait
adc
incb
andl
jnp
jno
hlt
dec
mov
dec
mov
stos
movsb
pusha
push
xchg
jle
arpl
mov
xor
in
outsl
xor
sarb
out
adc
faddl
inc
cmpsl
adc
roll
js
mov
iret
adc
dec
pushf
fistpl
sub
jnp
ljmp
push
insb
adc
jae
les
bound
lods
mov
xlat
arpl
das
add
mov
fwait
jae
push
andl
mov
or
clc
shr
sub
fcom
sahf
data16
movsl
mov
popa
mov
cwtl
jmp
fdivs
jnp
sbb
hlt
addr16
aaa
mov
int
adc
rcr
pop
sub
add
pop
xor
dec
test
or
fsts
and
js
mov
iret
pop
in
pop
jne
jnp
pop
test
pusha
outsb
jl
inc
aad
push
mov
movsl
orb
fistps
clc
test
mov
mov
xchg
mov
jg
lret
push
or
repnz
inc
mov
dec
pushf
ret
mov
mov
popf
fsubs
sbb
jl
push
mov
jp
mov
add
out
jp
cmp
or
cmp
shlb
push
dec
mov
mov
or
jae
add
stos
addr16
push
ret
mov
pop
mov
shll
add
mov
mov
cmpsl
shl
movsb
mov
loopne
mov
fidivrl
xchg
outsb
and
hlt
jns
inc
mov
xor
jge
or
nop
xorb
add
iret
lahf
push
loop
aad
sbb
bnd
dec
add
scas
add
add
push
cltd
outsb
pop
in
dec
mov
cmpsb
mov
test
push
pop
push
dec
jecxz
xchg
mov
out
cmp
scas
out
dec
mov
repnz
cltd
loop
scas
inc
cmp
xor
fdivs
imul
stos
faddl
fidivrs
bound
push
cmpsl
shlb
adc
jns
xchg
iret
mov
jne
mov
jmp
es
or
sti
call
pushf
sbb
test
xchg
in
in
cmpsl
and
mov
cli
cmp
icebp
pop
dec
or
jg
cmc
push
push
adcb
pop
lret
jns
das
sbb
imul
sbb
mov
cs
and
orb
mov
aas
xor
inc
fstpt
mov
add
push
or
cli
fidivl
add
pop
pop
push
inc
sbb
inc
rolb
push
aas
sbb
cltd
test
cmc
xchg
and
pop
cltd
les
push
xchg
je
and
loopne
pop
lds
mov
jae
js
imul
popa
dec
inc
repnz
or
pop
inc
stc
mov
mov
notb
mov
jge
push
add
xor
enter
jb
aad
dec
mov
scas
dec
jo
sarb
into
das
push
push
dec
packuswb
pushf
sbb
vmread
xlat
enter
sti
mov
fsubrs
xchg
adc
mov
ret
jmp
or
adc
fnstenv
fildll
cmpl
insl
es
push
and
outsb
es
shrb
fcmovne
pop
lds
push
sub
jmp
xor
movsb
pop
and
pop
mov
mov
mov
or
daa
cltd
not
in
mov
mov
adc
sbb
iret
xchg
insb
pop
jo
dec
mov
xchg
xchg
jns
mov
mov
test
in
shlb
mull
mov
jbe
push
sbb
and
mull
jl
sub
mov
xchg
or
sti
push
sbb
mov
jmp
stos
push
cmp
sti
lret
cmpsl
es
push
jae
frstor
mov
push
push
pop
jge
stos
adc
in
cld
mov
rorl
imull
push
je
pop
cmp
ficoms
addr16
clc
out
xchg
xor
xor
or
dec
js
iret
iret
int
stos
js
outsb
in
das
push
add
cmpl
push
sbb
ja
xor
jg
mov
cmpsl
subb
adc
cltd
jmp
add
filds
and
pop
lds
mov
push
int
add
cmp
imul
mov
xchg
vandps
or
pop
xlat
pop
into
insl
sub
add
ljmp
in
and
insl
add
mov
out
mov
out
sahf
popa
es
loopne
push
xchg
mov
pop
dec
push
sub
push
sub
rcll
push
cli
adc
pop
fistpl
push
dec
repz
pop
xor
aam
aam
out
aam
push
fisubrs
dec
cmpsl
pop
adc
cmc
push
loop
add
pop
pop
jmp
mov
adc
dec
dec
les
iret
addr16
push
lods
vshufps
sbb
add
add
add
stc
mov
stos
popf
outsl
mov
add
cli
cmp
stos
mov
call
in
or
inc
pop
dec
decb
mov
hlt
in
push
leave
sti
sbb
invd
les
mov
stos
and
in
test
aaa
add
cmpsl
std
or
cmc
mov
call
sub
inc
loopne
push
adc
jb
mov
sti
in
sti
mov
dec
aad
outsb
mov
inc
shlb
mov
mov
lahf
xchg
ja
pop
mov
push
lds
cld
test
jp
xor
iret
xchg
fwait
in
loope
xor
insb
dec
sub
mov
push
and
das
cltd
add
pop
sbb
hlt
outsl
mov
js
or
sahf
push
insb
mov
lds
call
cld
xor
add
inc
or
xchg
mov
adc
xchg
cld
pusha
bound
les
inc
ljmp
adcb
lahf
or
ss
clc
mov
lds
xor
jnp
xchg
rclb
out
xchg
pushl
pop
scas
fdivs
jo
sub
mov
push
pop
aaa
mov
lret
pop
pushf
jae
orb
test
imul
pusha
inc
and
std
nop
or
cmpsb
repz
aas
cmpsl
popf
fdivrs
and
jp
xchg
jg
cmpsb
jp
cmp
aam
push
hlt
cmpsb
mov
and
int3
mov
pop
push
push
nop
out
popa
fisubrs
add
jbe
inc
je
xchg
jle
arpl
or
test
out
andl
cli
push
das
jp
adc
in
mov
sbb
dec
out
sti
push
mov
or
xor
and
sbb
scas
stos
stos
jb
push
inc
out
pop
ljmp
and
out
adc
inc
push
or
adc
pop
sub
mov
push
jbe
sbb
inc
mov
inc
outsb
mov
mov
and
daa
mov
mov
mov
push
fcomps
aad
and
and
dec
aam
outsl
pop
jmpw
jge
ds
fdivrl
and
aam
loop
ret
push
out
jge
push
in
or
test
scas
gs
mov
repz
loopne
dec
push
in
xor
mov
mov
mov
xchg
pop
dec
push
xchg
shl
fwait
add
push
pop
dec
pop
cmp
inc
int3
test
aad
std
jno
jnp
std
and
outsl
and
adc
xor
aas
iret
popf
xor
add
mov
and
into
int
int
or
push
mov
fucomp
out
pop
scas
inc
cmpsb
in
pop
mov
out
mov
sahf
mov
loopne
sti
divl
xchg
bound
add
lds
das
sub
or
and
pop
mov
inc
xor
jns
push
mov
sbb
imul
sbb
fildl
aad
sub
testb
sub
mov
cld
ret
cmpsb
mov
jl
lret
sbb
xchg
test
lock
or
imul
jl
cmp
addr16
and
pop
inc
sbb
sbb
xor
ljmp
inc
jge
mov
and
clc
test
loopne
fcomp
push
xchg
mov
sub
in
mov
add
add
add
add
xlat
dec
call
adc
inc
lods
cmpsb
push
add
scas
add
add
std
inc
in
jge
xchg
or
push
outsb
push
xchg
mov
sub
jg
imul
inc
push
test
cmp
pop
mov
out
mov
xchg
aad
arpl
fimull
out
xchg
jo
lret
nop
mov
je
mov
jg
push
inc
dec
xor
mov
ja
in
xor
jno
fsubrs
pop
les
fwait
stos
xor
push
sahf
lahf
cmp
das
adc
test
or
mov
rcr
insl
jmp
out
jae
stos
fisubs
test
lods
loop
daa
pop
movsl
adc
pop
fwait
sbbl
mov
dec
jne
ljmp
inc
push
cmp
pushf
movsb
add
jl
sbb
push
xchg
fcmovbe
mov
jae
and
call
push
popf
in
sub
mov
xorl
add
push
xorb
inc
mov
inc
or
arpl
shrb
xchg
lods
mov
js
aaa
pop
cmp
fisttpll
adc
cmpl
and
or
jg
icebp
xor
mov
mov
outsl
stos
add
inc
loopne
fsubl
push
scas
neg
popf
or
aad
push
sbb
jno
bound
push
roll
sub
sbb
into
pop
push
pop
push
sub
dec
add
sub
mov
mov
dec
ss
js
ljmp
jae
and
dec
dec
mov
xchg
push
cmp
pusha
cmc
fistpl
xor
sbb
pop
and
and
notl
or
sbb
enter
js
xchg
mov
cltd
dec
mov
cmpsl
pop
add
pushf
dec
pushf
adc
xor
mov
mov
hlt
insl
loop
pop
mov
daa
les
push
ljmp
sbb
repnz
cwtl
fwait
ret
mov
mov
ret
add
xchg
andb
sub
rclb
sahf
mov
jmp
dec
je
in
jae
stos
ss
cltd
inc
aaa
es
or
cmp
mov
pop
xchg
aam
pop
and
inc
loopne
shr
fwait
decb
mov
push
add
shr
xchg
push
cwtl
inc
push
gs
sti
ja
pushf
fs
inc
mov
fistpll
addr16
fdivl
mov
lock
aas
shrb
sbb
gs
push
pop
ljmp
push
jmp
sub
popf
nopl
mov
cwtl
cmp
fimuls
sbb
rorl
xchg
mov
cmp
aam
ss
sbb
fsubrs
xchg
jecxz
das
push
adc
aaa
test
dec
push
and
jno
ret
shrl
in
lret
inc
cltd
jecxz
stos
repnz
push
call
fdivr
dec
push
mov
inc
or
sbb
rolb
cmp
add
push
push
aaa
and
out
dec
sbbb
mov
pop
mov
ljmp
pop
mov
push
cwtl
and
dec
inc
pop
pop
and
imul
es
bound
fisubl
mov
les
inc
mov
xor
sub
or
jo
xchg
movsl
flds
pop
leave
das
or
adc
out
in
xchg
cmp
adc
mov
adc
sub
stc
jle
xchg
add
and
add
jnp
mov
cmp
sub
add
scas
add
add
adc
mov
fiadds
int3
push
inc
das
bound
push
sub
adcl
mov
and
loopne
aaa
in
mov
adc
ret
cmp
addb
lret
ja
jmp
add
mov
add
bound
bound
insl
jae
pop
cmp
mov
push
fistpl
insl
outsb
loope
inc
and
push
orl
movb
int3
adc
ficomps
test
xor
mov
cli
push
popa
push
js
lea
inc
int
mov
dec
popa
lods
mov
jp
jne
test
add
daa
or
dec
or
xchg
mov
pop
mov
in
paddd
push
jg
les
es
sahf
rcll
das
sub
es
dec
inc
mov
stc
mov
aam
into
jae
push
nop
xchg
push
mov
and
mov
or
jbe
sahf
inc
mov
fincstp
aam
mov
mov
mov
push
pop
cmp
loope
push
jns
adc
push
adc
mov
inc
lret
ret
cmp
push
js
xor
dec
cs
push
cmp
out
mov
adc
call
pop
shrl
stos
push
leave
xchg
adc
pop
cmp
loopne
push
add
dec
cmp
or
adc
dec
ja
frstor
leave
repnz
adc
in
adc
dec
sbb
xor
push
jae
mov
or
popa
pop
cmp
out
dec
pop
cmp
ljmp
pop
loope
aas
dec
sub
js
mov
mov
enter
dec
add
cltd
jnp
into
push
mov
xchg
fs
jno
xchg
ret
je
mov
int
scas
std
dec
adc
inc
add
data16
andb
sti
ss
cmpsb
mov
pushf
fs
daa
shrl
push
repz
dec
jge
dec
jae
aas
out
scas
dec
jbe
mov
inc
cwtl
xor
xchg
push
andb
ljmp
xor
repz
sub
nop
add
pop
ljmp
mov
cli
sarb
shlb
movsl
mov
sarl
xchg
dec
xchg
mul
mov
orl
test
push
cltd
fs
lahf
shl
sub
add
pushf
xlat
icebp
daa
mov
dec
inc
jge
mov
fsubr
shll
xchg
mov
sub
mov
mov
push
sub
fidivrl
rclb
nop
into
pusha
push
jge
outsl
outsl
lahf
dec
mov
xchg
aaa
add
pop
sbb
inc
lret
jb
outsb
mov
dec
cmp
ss
mov
push
inc
cmp
icebp
lods
outsl
adc
popf
outsl
push
push
mov
daa
sbb
frstor
add
sbb
shll
cwtl
push
jns
jge
mov
test
ljmp
jae
mov
push
fdivs
cmp
xchg
test
xchg
or
jb
add
push
push
xor
adcl
xchg
nop
rclb
xchg
adc
lea
cmc
sbb
sub
test
cmp
sbb
enter
dec
mov
pop
and
pop
mov
outsb
fwait
lock
cmpsl
dec
es
and
mov
sbb
adc
jg
jns
pop
cmpb
pop
loop
pop
add
scas
add
add
or
push
lret
sub
xor
int
shrb
lcall
mov
fisttpll
imul
out
jmp
scas
ss
mov
ret
mov
ret
cwtl
leave
lods
lret
frstor
mov
aas
sahf
xchg
cs
mov
and
lds
in
mov
lea
pop
xlat
rdpmc
mov
out
mov
lret
lret
cld
sub
cmp
xchg
add
je
aad
cmp
jl
sub
push
bound
xchg
cmp
shll
push
push
mov
push
mull
gs
cmc
leave
pop
sbb
fimull
loope
movsl
imull
fcoml
test
sub
add
ret
fdivrs
cld
ret
adcl
jbe
sub
xchg
mov
adc
gs
adc
xchg
stc
or
je
mov
pushf
insb
sub
jmp
pushf
sbb
jl
push
mov
arpl
imul
mov
or
mov
in
jle
pop
leave
cmp
out
mov
sarl
ret
add
mov
mov
addl
inc
mov
or
test
push
jb
test
test
add
and
pushf
pop
sub
xor
sbb
push
gs
jg
jmp
or
sarl
icebp
sub
fldl
jp
push
fildl
leave
jge
mov
xor
in
repz
jmp
mov
gs
in
ds
insl
jns
sub
push
jns
rclb
add
mov
sub
or
sub
and
imul
mov
aad
ja
pop
dec
fwait
inc
movsb
xor
adc
repnz
test
adc
rep
jne
test
sti
and
xor
sarl
mov
out
int
outsl
sahf
hlt
lret
push
mov
cmp
sbbb
popf
adc
add
test
jecxz
mov
sbb
jecxz
push
dec
lcall
mov
sar
inc
xor
mov
cmp
scas
mov
push
push
pop
out
sbb
lock
stos
push
pop
jge
adc
xchg
cmp
cmp
ret
cwtl
popf
fmull
push
jecxz
ret
in
out
or
push
jl
dec
pop
daa
cmp
pop
sar
xor
rep
adc
add
fidivs
mov
pop
add
mul
jl
push
ficompl
push
jmp
xchg
dec
iret
imul
frstor
icebp
sbb
inc
xlat
dec
push
mov
shrb
cmp
popa
mov
xchg
loope
nop
pop
mov
sahf
jbe
inc
into
add
test
jmp
fimuls
cmp
je
push
fdivr
push
jmp
test
sahf
imul
adc
mov
fisttpll
pop
cmc
movsl
in
jl
sahf
add
leave
sbb
mov
mov
push
pushf
xor
jecxz
enter
lahf
or
mov
push
lret
rep
sbb
sti
outsb
jge
mov
lret
xlat
inc
jns
movsb
cmp
sbb
repz
cmpsl
or
clc
arpl
mov
add
add
add
mov
notl
pop
movsb
xchg
adc
add
add
add
sbbl
imul
mov
pop
mov
nop
cmp
pop
clc
dec
push
fldcw
or
leave
ret
fnstcw
adc
data16
out
adc
fisttpl
add
cmp
scas
jle
dec
pop
sbb
jp
jnp
inc
in
adc
mov
sbb
push
mov
mov
rolb
aas
aaa
or
cwtl
movsw
loopne
aas
mov
cmp
mov
pop
mov
xlat
mov
dec
cmp
lahf
xchg
imul
and
or
popa
fistl
add
inc
mov
mov
xor
inc
add
jne
dec
lcall
loop
push
je
arpl
or
sbb
pusha
sbb
hlt
push
faddl
sbb
cmpsl
outsl
cs
jns
push
cmpsb
jb
frndint
xchg
xchg
dec
cmpb
fdivr
dec
mov
dec
loopne
sbb
sub
pop
sbb
iret
mov
push
sbb
jnp
cmp
sub
adc
cmpsl
adcl
mov
or
movsl
inc
movsb
jae
jae
mov
addl
jno
xchg
imul
fs
pop
ret
leave
sti
lret
rcrl
sub
push
test
aam
fnstenv
outsl
nop
lods
cld
je
sbb
pushf
push
popa
cli
or
xor
outsl
scas
pop
mov
int3
pusha
out
add
mov
cmpsl
daa
iret
lods
int
pop
lock
aas
pop
lock
lock
mov
lret
enter
xchg
adc
cmpl
pusha
mov
testb
mov
imul
add
xlat
adc
lods
jecxz
sub
imul
push
test
xor
sbb
lock
mov
test
negl
addr16
imul
inc
and
push
addr16
sub
xchg
push
inc
es
adc
in
imul
roll
sbb
call
inc
push
hlt
loop
add
adc
adc
xor
pusha
inc
andb
jle
and
inc
push
xchg
inc
popa
test
add
jne
and
xor
add
popf
inc
movsb
int3
dec
aad
push
inc
sbb
pop
mov
jle
mov
daa
push
inc
lcall
cltd
test
out
in
mov
lret
popf
adc
sahf
test
clc
addl
xchg
mov
bound
xor
push
repnz
testl
test
sbb
push
mov
cmp
xorl
or
mov
cmp
cltd
sti
push
cmpsl
shlb
notb
fisttps
pop
or
xor
cmp
rcrl
popa
dec
mov
jnp
ljmp
les
rol
cmp
pop
rcll
test
mov
arpl
sbb
sbb
cmpsl
mov
leave
out
sbb
imul
enter
or
push
lahf
ja
or
jo
scas
lods
xchg
ret
mov
jne
mov
xor
add
lock
sarl
imul
adc
push
into
lret
dec
mov
mov
sub
nop
xor
addr16
or
add
add
add
sti
lods
or
jmp
mov
scas
add
add
lcall
test
iret
or
mov
mov
mov
bnd
mov
test
clc
pop
pop
jp
and
hlt
mov
out
mov
mov
mov
ds
pop
sbb
fnstsw
jmp
bound
movb
inc
dec
dec
adc
movsb
clc
push
ret
xor
cmp
adc
jnp
mov
lods
and
sbb
mov
fmuls
dec
pop
jge
or
int
push
xlat
xchg
rcr
movsb
mov
sub
add
dec
les
out
jmp
adc
ret
push
jl
gs
jmp
mov
popf
add
test
les
cmc
lea
pop
test
fucomi
fwait
add
lods
popl
call
sbb
mov
int
shl
or
jg
mov
push
not
xor
push
dec
dec
or
mov
mov
out
fisttps
addr16
dec
aaa
leave
in
push
pusha
ja
sbb
cs
test
int
pop
mov
xorb
call
sub
xchg
aam
repnz
and
lock
lret
icebp
addr16
sbb
in
adc
call
add
aam
jae
fsubrs
sub
out
and
pusha
push
jo
cmp
movsb
or
adc
push
add
pop
dec
sub
cs
mov
mov
add
daa
inc
pop
cld
mov
inc
push
adcb
test
pop
repnz
or
xor
push
ss
rorb
add
mov
jbe
leave
scas
xor
jae
adc
out
push
in
lods
repnz
pusha
rcrb
add
call
dec
cltd
jnp
mov
sub
icebp
mov
cwtl
mov
nop
mov
mov
outsb
neg
js
in
add
stos
incl
jge
leave
es
call
push
cmc
out
into
test
iret
jg
lret
fmuls
shlb
dec
clc
orb
mov
ficompl
and
ljmp
cli
loopne
das
dec
adc
ljmp
lahf
sbbb
std
inc
dec
loope
test
push
pop
xchg
lcall
sbb
das
lahf
jg
sbb
clc
push
imul
push
jbe
aad
jo
popf
push
lods
or
dec
mov
repnz
jmp
add
aaa
inc
mov
adc
mov
lahf
jp
fs
test
jbe
out
cltd
or
mov
mov
lret
dec
jecxz
lcall
dec
cmp
notl
cltd
xchg
xchg
hlt
add
adc
sub
cmp
dec
push
insb
xchg
pop
sti
push
mov
mov
mov
cmp
mov
jl
jge
mov
scas
mov
mov
mov
in
xor
inc
xchg
mov
pushf
outsb
jns
ss
mov
xchg
int
mov
shll
shrb
data16
mov
sub
pop
fisttpll
hlt
jmp
add
sbb
iret
stc
mov
push
or
sbb
push
mov
pop
push
mov
scas
fdivr
out
or
cmp
xchg
add
in
push
cld
cs
repnz
add
xor
and
aam
add
scas
add
add
lods
pop
imul
jbe
leave
movsb
movsb
sub
push
push
scas
xor
push
lock
test
mov
push
movsb
sub
movsl
lock
cltd
lcall
scas
add
popf
shlb
ljmp
imul
dec
fwait
adc
inc
dec
and
sub
sar
mov
out
mov
movb
stos
testb
mov
ja
sarb
das
push
shll
gs
inc
int
stos
cmp
mov
test
fs
xor
adc
inc
jbe
sarl
ret
dec
scas
sub
xchg
adcb
inc
fptan
clc
add
lahf
stos
push
call
dec
std
lret
and
iret
jbe
mov
dec
loop
sbb
sbb
mov
in
sub
dec
mov
imul
cmpsl
sbb
inc
push
xchg
outsb
mov
cli
pop
xor
aas
loope
sub
pop
add
xchg
mov
enter
mov
mov
popa
xchg
mov
pop
jmp
mov
or
add
xchg
push
mov
mov
push
push
xor
sbbl
cmp
mov
or
nop
aas
and
cmpsl
sbb
rcll
mov
dec
sbb
loop
sub
or
in
cli
xchg
mov
cli
adc
sub
mov
das
sub
popaw
repz
jno
popa
fsubp
inc
mov
lret
mov
aam
movsb
in
and
push
je
mov
imul
xor
mov
neg
adcl
jl
hlt
sub
pusha
lahf
xchg
clc
in
jmp
push
scas
cld
inc
dec
fsubrl
outsb
push
fsubrl
int3
pop
fisttps
les
cmp
xchg
jno
test
jge
and
or
fcmovnb
mov
cmp
test
xchg
jecxz
imul
push
lock
ret
mov
inc
push
and
pop
aad
add
xchg
hlt
mov
fbstp
cmc
lret
shlb
xor
frstor
push
mov
inc
pusha
and
shrl
loopne
into
and
jae
jg
and
mov
sbb
inc
cmpsl
mov
xlat
mov
jg
sbb
lods
daa
test
lds
lock
xchg
out
rcr
in
mov
fs
pop
add
lock
xchg
or
pop
cmpsb
adc
mov
push
shrl
or
sti
push
in
adc
nop
cwtl
pop
mov
call
cmpsb
cmpsl
xchg
jecxz
push
cmpsb
shll
add
mov
popa
pop
push
pop
xorb
jp
in
cmp
subb
cli
add
lods
dec
pop
push
sbb
subl
dec
rolb
push
jmp
out
add
xor
adc
xor
mov
ljmp
sbb
push
mov
stos
inc
adcl
js
cld
dec
shr
sub
add
cli
scas
aas
imul
inc
leave
addr16
fprem1
je
in
inc
into
pop
fprem
sbb
ljmp
scas
mov
push
aad
mov
fs
xchg
or
popf
clc
jmp
fadds
aaa
lret
cmp
push
sti
test
cmpsl
aam
push
jne
mov
test
cli
data16
push
adc
into
pop
mov
mov
or
xchg
inc
nop
inc
mov
dec
leave
mov
dec
nop
lock
scas
add
add
fbstp
testb
jg
imul
sbb
mov
jl
shrb
push
sbb
and
ljmp
je
xchg
lret
and
dec
sub
or
or
push
shrl
xor
jae
dec
push
xchg
push
or
aas
scas
lock
adc
outsl
xor
aam
add
in
adcb
xchg
mov
pop
test
cmp
xor
push
subl
jmp
adc
loope
lock
sahf
das
js
xchg
xlat
xor
lret
mov
mov
aam
pop
xchg
mov
push
dec
mulb
sbb
push
inc
sub
push
or
insb
and
data16
fiaddl
xlat
xchg
push
push
addl
sahf
mov
ss
sub
inc
and
mov
dec
add
pop
inc
mov
sub
or
test
xchg
fimuls
adc
in
sbb
xchg
mov
cltd
and
inc
rcrl
and
add
rcrl
sub
jl
imul
mov
leave
mov
push
mov
cmp
cs
mov
mov
push
test
leave
jb
fists
loopne
outsl
pop
ss
mov
adc
inc
popa
out
pusha
loope
pop
es
loop
cs
iret
test
cltd
ror
test
movsl
call
xchg
arpl
sbb
dec
jns
cwtl
cwtl
mov
pop
add
mov
pop
mov
mov
test
fnstsw
or
cli
pop
xor
cs
shufps
xchg
test
push
or
mov
and
xor
push
dec
mov
adc
insb
mov
cwtl
cli
xchg
in
or
in
cmp
mov
mov
jae
xchg
mov
lea
mov
xchg
das
test
push
fisttpll
jmp
mov
cmp
rcl
das
push
lds
mov
dec
out
insb
mov
adc
daa
inc
jns
cmp
out
lock
jbe
mov
scas
mov
jle
jp
cmp
insl
pop
and
nop
clc
or
mov
push
and
xchg
push
ljmp
dec
cmpsl
cmp
mov
aam
and
mov
jge
mov
into
call
sti
mov
jb
mov
jg
push
mov
pop
movsl
xchg
push
jmp
les
pop
loop
sub
outsl
aas
mov
add
add
cmp
adc
movsl
inc
cmp
rcrb
fiaddl
gs
xor
mov
pushf
nop
sbb
inc
cmc
jecxz
movsl
aam
loop
mov
repz
jae
inc
lea
sub
mov
fidivrs
das
sbb
cmp
push
xchg
cmp
nop
push
xchg
dec
sub
add
xor
aaa
call
negl
inc
dec
insb
xchg
cmpsl
icebp
in
push
jnp
js
dec
add
das
adc
into
jo
sbb
adc
add
adc
in
mov
in
inc
and
out
push
pusha
ja
int
movsl
fistpl
mov
xchg
sbb
in
dec
shll
insb
sbb
xor
fisttpl
xor
jl
incl
xor
and
repz
fcmovnb
pop
sbb
mov
shrl
add
scas
add
add
mov
in
inc
inc
or
cmp
cmp
jmp
cmp
icebp
jecxz
int3
inc
dec
adc
dec
mov
xchg
into
mov
fiadds
roll
pushf
pop
jne
outsb
adc
daa
pushf
sbb
movsl
xor
icebp
adc
sbb
sti
or
inc
lcall
jnp
aas
sbbl
mov
mov
mov
mov
enter
ja
daa
lcall
mov
xor
ret
jg
jo
shll
repz
jl
imull
stc
cli
adc
out
jb
sahf
or
in
jo,pt
jmp
pop
rorl
jmp
pop
push
inc
push
test
es
or
push
mov
ds
mov
arpl
insb
shlb
cmpsl
scas
mov
nop
mov
jmp
add
pop
test
and
fcmovnu
push
lods
mov
data16
xchg
dec
pop
jno
adcl
inc
xor
xchg
push
jecxz
js
repz
xlat
test
and
xchg
iret
jmp
jns
bound
jnp
imul
int
fldcw
and
mov
xchg
jmp
lret
test
sbb
cmp
or
ret
mov
fwait
aad
jge
aaa
sbb
scas
fsubrp
test
or
in
pop
xor
nop
repz
insb
mov
bound
into
jae
stos
sbb
cmp
jge
and
arpl
or
stos
lods
nop
mov
addr16
adc
inc
lahf
cmp
ret
and
mov
out
mov
push
add
ror
lcall
push
imul
addr16
xor
or
mov
sarb
xor
fxch
jno
and
mov
sbb
sbb
adc
add
push
cld
jg
jg
sub
push
pop
orl
cmpsb
ret
out
cmc
or
test
and
shl
dec
js
mov
lcall
sbb
cmp
dec
push
scas
adc
mov
dec
out
sbb
inc
jge
push
loop
jecxz
rorb
mov
rcll
into
inc
sub
test
mov
dec
pop
test
xchg
jg
mov
sub
lahf
push
cmp
inc
pop
movsl
push
jg
jmp
mov
jge
mov
mov
dec
loope
inc
dec
inc
ret
mov
lret
fcoms
popa
inc
adc
clc
push
mov
push
pop
mov
in
mov
adcb
mov
ljmp
mov
mov
push
call
add
push
jmp
or
mov
dec
popf
jmp
neg
xor
inc
pop
sbb
mov
lahf
or
int
push
jge
and
in
out
xor
push
dec
jnp
out
dec
mov
mov
adc
and
dec
lea
pop
jl
jae
add
adc
cmp
fs
mov
push
das
mov
lahf
lahf
and
cmp
int
cs
je
clc
push
scas
int
imul
repz
mov
adc
jge
jge
icebp
and
lcall
lret
cld
pop
test
decb
loop
dec
xchg
sarl
xchg
xchg
icebp
push
and
scas
nop
daa
popf
jg
mov
pushf
popf
test
mov
incb
inc
add
inc
daa
sti
mov
push
out
add
push
jno
add
addr16
sarl
idiv
cmp
xchg
fldt
pop
sbb
loop
int
sub
push
or
scas
mov
xchg
push
push
xor
mov
test
cmpsb
and
notl
jl
mov
mov
movlhps
stos
icebp
sbb
add
out
sbb
popa
aas
les
dec
fwait
into
shrl
pop
std
mov
push
mov
mov
mov
outsl
and
adc
lds
mov
lods
pop
fsubrs
adc
fstl
pusha
mov
mov
jno
aam
jnp
fs
pop
ds
cs
xchg
shrb
jne
dec
out
mov
orl
fsubrs
cltd
jge
add
addr16
add
and
cld
mov
pop
push
dec
popa
rcr
ljmp
jg
mov
sub
push
jmp
rcrb
into
jg
es
or
mov
or
test
jnp
inc
adc
mov
dec
mov
cs
ficompl
xchg
iret
adc
loope
negb
jp
push
aaa
xchg
pop
fxch
dec
aas
lcall
adcl
pop
mov
dec
mov
jecxz
xor
cs
inc
in
insl
outsl
imulb
loopne
icebp
mov
pop
aam
rcrl
in
test
lahf
fiaddl
xchg
inc
iret
push
adcb
mov
cmp
pop
out
stos
xchg
rcl
jb
push
mov
nop
and
lods
push
lret
push
push
pop
inc
add
dec
xlat
or
imul
adc
add
inc
int
xor
inc
xor
xchg
fadds
mov
jns
lcall
jno
fld
ja
cmp
dec
pop
jnp
and
daa
orb
ja
repnz
outsl
mov
inc
mov
lahf
cld
movsl
mov
fiadds
jo
mov
inc
xor
gs
gs
test
bound
mov
jb
lock
pop
addb
jnp
or
jbe
jp
xorb
mov
jmp
inc
or
jb
dec
mov
xchg
test
and
repz
repnz
mov
loop
leave
pop
add
mov
in
out
lea
insl
bound
push
jne
sbbb
int
sub
repz
cmp
ds
jge
adc
push
pop
sbb
scas
push
add
pop
dec
inc
jge
outsb
std
lret
mov
sub
fimull
pop
lods
jb
incb
push
fsubrl
cli
mov
jmp
xor
mov
cmc
pusha
popa
inc
aad
add
js
mov
cmpsb
ljmpw
adc
imul
inc
out
mov
mov
outsl
dec
add
add
or
pop
lcall
sbb
fstl
cmp
fnsave
inc
nop
and
loope
jp
test
fisttpll
mov
nop
dec
jge
rclb
aam
into
gs
adc
xchg
adc
dec
mov
xchg
cmp
aas
xchg
add
mov
jecxz
test
imul
cli
shl
cltd
sbb
add
and
add
ret
fdivs
jo
dec
push
mov
out
sub
sbb
sbb
clc
adc
idiv
push
sarl
sub
mov
mov
aas
sysexit
pop
push
decb
push
mov
scas
add
add
ficomps
or
bound
in
cmpsb
out
cltd
or
pusha
push
clc
sbb
into
movsl
lock
xchg
lret
jge
cs
fsubs
jmp
dec
shlb
xlat
aam
add
inc
ss
in
mov
xchg
out
imul
mov
add
aad
in
int
sub
jmp
mov
lahf
in
lea
data16
out
xor
adc
cmpsb
ds
push
enter
lahf
sub
xorl
insl
nop
pop
out
out
cmp
fiadds
ret
push
jg
std
out
aaa
mov
ret
adc
xor
sbb
dec
in
xchg
mov
scas
faddl
inc
mov
pop
sub
sbb
cmc
cmp
add
push
ret
jmp
dec
movsb
stos
push
jecxz
call
jp
sbb
aas
stos
flds
jl
cmp
add
insl
movl
cmpsl
mov
mov
imul
js
fnstsw
mov
or
out
push
sbb
mov
insb
jg
loope
pop
pop
jmp
rol
or
mov
sub
add
cmp
pop
and
push
pop
sarl
dec
mov
cmp
faddl
mov
pop
test
in
mov
xor
int
fisttpll
test
mov
xchg
inc
inc
dec
loopne
sti
pop
scas
into
pop
and
scas
stc
inc
mov
push
out
loopne
mov
jno
push
sub
add
shll
mov
mov
data16
aad
xchg
shll
adc
jp
mov
mov
sbb
ret
shrb
jnp
fidivl
pop
fstpl
mov
test
jle
mov
mov
ds
repz
push
jae
cld
pop
inc
mov
inc
xchg
into
push
and
mov
and
int3
pushf
inc
das
push
push
adc
pusha
cmp
stos
sub
mov
mov
mov
test
lds
in
ljmp
insl
jne
jae
push
popa
mov
xor
dec
jmp
adc
and
in
adc
dec
out
sahf
xchg
cmp
out
in
shl
test
aad
sbb
inc
out
adc
mov
push
pop
xchg
inc
jmp
and
pop
je
sub
adc
dec
ret
es
into
incb
call
dec
movsb
rcrb
ror
pop
inc
cli
fsts
adc
adc
je
cmpsl
jmp
pop
cltd
cmp
mov
mov
jl
stc
jmp
cmp
pop
sub
les
sub
fiadds
push
aam
js
rclb
adc
sbb
cmp
popf
imul
jo
and
mov
js
fcom
cmp
pusha
lcall
fwait
mov
push
xor
xchg
adc
push
push
mov
dec
pop
out
andl
dec
in
mov
lods
das
and
popa
cmp
cmpsl
hlt
push
mov
xor
sub
in
xchg
dec
iret
or
rorb
adc
pop
jo
jg
dec
scas
ljmp
sbb
jae
pop
jge
out
pop
mov
lea
mov
jo
insl
je
fs
sub
add
add
add
mov
push
cmp
or
sarb
add
push
imul
js
and
aaa
mov
mov
pop
aam
shll
fcmovnb
fsubl
cmp
mov
popf
jge
and
jl
lcall
mov
cmpsb
dec
dec
fisubl
pusha
push
adc
out
sbb
sub
inc
push
ss
les
xadd
adc
adc
lock
std
outsb
sbb
sub
movsl
outsb
dec
xchg
repz
ds
iret
lds
xchg
ljmp
sub
je
leave
fisubl
imul
out
bound
or
mov
jp
ret
adc
icebp
lock
pushf
loopne
mov
inc
ljmp
pushf
jl
filds
inc
aam
leave
aam
data16
sbb
imul
adc
lahf
lcall
inc
popa
outsl
jle
pop
scas
icebp
jp
outsb
push
add
sub
fdivrs
xchg
ss
push
xchg
iret
dec
pushf
aad
aas
cli
push
xor
and
enter
sub
xchg
sbb
call
movsl
rcr
sbb
mov
pop
les
pop
cmp
mov
jp
inc
xchg
js
push
cmpsb
xchg
out
inc
hlt
adc
adc
mov
inc
dec
push
aam
loopne
xor
imul
add
orb
inc
mov
loopne
sbb
xor
xchg
sub
mov
test
inc
aas
push
jns
or
sbb
xor
pop
scas
jle
mov
mov
fs
lret
mov
out
mov
imul
out
outsb
dec
cmp
mov
sub
jecxz
aas
or
and
push
filds
fcoml
cmp
je
fadd
lea
cld
fidivrl
mov
arpl
and
jae
mov
pop
aad
scas
jae
cmp
lahf
aaa
outsl
lock
push
mov
popf
push
addr16
dec
mov
push
mov
mov
and
jae
jb
pop
repz
mov
in
lock
imul
fnstcw
and
inc
push
jl
arpl
jns
pop
lds
enter
dec
adc
jl
mov
inc
in
sbb
out
push
push
adc
dec
std
ds
mov
mov
cmp
les
jge
cmp
xchg
mov
int
xor
in
sub
pop
test
addr16
sbb
icebp
pusha
adc
sub
out
mov
test
fisubrl
mov
and
jmp
sbb
into
jae
sti
and
insl
or
dec
test
setp
orl
dec
pop
das
pop
dec
outsb
aas
add
sahf
out
insb
jmp
shl
sub
jb
dec
pop
adc
jb
xor
mov
inc
bound
sbb
mov
movsl
or
push
jmp
loopne
into
scas
out
ds
lret
fstps
push
xchg
push
je
sub
or
mov
jbe
mov
cmpsl
and
pop
scas
test
and
inc
xchg
mov
xchg
jl
sub
xor
daa
jnp
sub
in
repz
xor
inc
pop
inc
cmpb
xchg
mov
dec
inc
in
pop
repnz
mov
addr16
stos
mov
popa
mov
add
sbb
insb
sbb
mov
xor
xchg
notl
bound
mov
imul
sldt
add
add
add
add
xchg
lcall
add
jl
add
stos
xchg
lcall
jb
iret
add
bnd
out
cwtl
push
pop
dec
addb
dec
inc
xchg
jp
imul
xchg
lret
and
xor
pop
cmc
inc
enter
into
and
push
sbb
push
mov
and
lock
ljmp
notb
nop
clc
scas
cmp
dec
mov
adc
mov
cmp
jmp
imul
dec
stos
dec
pop
sbb
sti
lret
and
mov
repnz
jle
cmp
add
mov
shll
and
ficoml
jae
aam
into
sbb
add
inc
lret
pop
lods
lahf
add
mov
push
push
filds
adc
mov
fs
dec
jp
dec
mov
test
and
scas
cmp
jb
iret
pop
orb
iret
xor
xchg
inc
in
adc
xchg
stos
cs
pusha
push
gs
stos
aam
adc
aas
and
or
les
test
loope
inc
or
lea
jmp
cmpsb
mov
fs
and
push
add
jns
and
lret
fisttps
call
mov
and
mov
divb
sub
cmpsb
call
lcall
pop
mov
scas
jmp
jb
out
mov
dec
ret
es
enter
not
test
dec
pop
popf
push
aaa
push
sub
sub
pop
fcoms
adc
sbb
add
inc
xor
cmpsb
add
push
ffreep
outsb
in
ficoml
fwait
cmp
jmp
pop
push
xchg
or
outsl
push
pop
mov
xor
cwtl
jmp
xor
faddl
xchg
test
call
test
and
stos
js
fs
mov
leave
in
das
mov
push
pop
push
inc
das
shl
jge
push
or
lea
cmp
mov
stc
dec
aam
adc
mov
icebp
orb
xchg
ficompl
ljmp
mov
dec
repnz
fidivs
mov
cmp
outsb
sub
in
fcomps
outsb
add
mov
in
test
xchg
stos
andb
push
xchg
push
and
lret
rorl
cmp
push
das
mov
lcall
add
or
mov
cmp
push
adcl
fisttps
adc
jo
insl
inc
mov
xchg
adc
fs
pushf
ret
jb
ja
mov
sti
fs
repnz
outsl
das
dec
fadds
test
ret
and
aaa
add
dec
mov
mov
shrb
nop
push
mov
cmp
cmp
stos
adcl
sub
pop
mov
outsb
push
test
sbb
arpl
shll
pop
sbbb
mov
roll
shll
cs
jne
sub
jns
cmc
mov
les
jecxz
sbb
ja
mov
push
mov
sbb
nop
xchg
into
dec
pop
push
out
mov
ficomps
sbb
sub
inc
into
lahf
out
aaa
sahf
in
or
movsl
lock
and
gs
sub
in
imul
sbb
xchg
pop
lret
jns
mov
rcr
rcrb
imul
jno
loop
loop
stc
sbb
jne
out
jo
in
pop
mov
hlt
add
call
jmp
and
jge
sub
add
add
xor
mov
pop
fwait
cli
sti
fs
xchg
shrl
inc
fwait
sti
cwtl
inc
jne
popf
dec
jne
testb
call
sub
ja
shll
xchg
pop
mov
push
add
in
add
pop
lret
repnz
pop
push
mov
mov
mov
je
in
fwait
mov
movsb
in
add
loop
mov
iret
and
jns
sbb
dec
add
out
add
pop
sbb
inc
push
cmc
mov
test
jb
into
xor
jl
adc
mov
loop
lea
roll
ss
loop
in
push
scas
dec
sbb
adc
loopne
in
gs
jns
into
hlt
shll
mov
sbb
icebp
fiadds
push
sub
fsubrs
jl
jns
leave
rcl
sbb
stos
test
push
rolb
adc
addb
mov
lock
sbb
icebp
dec
pop
inc
fs
jnp
pushf
and
shll
sbb
outsl
sbb
movsl
xchg
adc
or
inc
out
movsl
test
in
push
scas
fiaddl
out
ss
sahf
mov
cltd
pop
loopne
mov
lcall
movsb
std
lea
lods
out
call
mov
dec
lock
pop
sbb
adc
and
cmc
int
sbb
test
jle
data16
pop
hlt
sub
lret
lods
push
lret
add
push
dec
xor
fdivl
mov
cmp
mov
pop
pop
out
pop
pop
and
push
dec
adc
xchg
repz
leave
iret
cmp
ffree
inc
inc
aas
mov
stc
or
xchg
sub
test
sbb
add
adc
xor
mov
push
sbb
fwait
xchg
imul
movsl
inc
shrb
pop
xor
and
lods
or
or
jno
and
rorl
dec
sbb
push
loopne
popa
test
popf
bound
jae
testb
sbb
xor
or
stc
push
inc
xchg
push
inc
sar
mov
sbbb
icebp
imulb
fcompl
lret
cmp
inc
lret
sub
mov
add
mov
pop
xor
ss
stos
and
jb
dec
insl
cmp
loope
adc
mov
or
jmp
dec
adc
sahf
movsb
mov
mov
adc
and
fstpl
mov
nop
outsb
fidivrl
movsb
sub
out
sub
mov
xchg
in
pop
insb
and
lret
outsl
and
sahf
adc
pop
xchg
adc
pop
sub
pop
and
shr
not
cmc
jle
sbb
adc
xor
xchg
mov
dec
in
mov
data16
mov
xchg
cmp
sbb
pushf
sbb
jno
pop
pop
fcomi
push
mov
fidivrl
les
dec
in
inc
psllq
shl
into
push
inc
int3
shlb
dec
sub
repz
or
divl
add
push
in
push
mov
shll
pop
push
int
repz
in
shl
jmp
in
jns
xchg
negl
mov
push
or
inc
aad
lds
jno
stos
sub
in
xor
jg
test
xchg
stos
mov
aas
add
pop
mov
adc
jmp
fiaddl
fstpt
add
cmp
pop
rcrb
addl
scas
add
add
pop
out
lret
les
pop
mov
adc
stc
and
or
arpl
hlt
icebp
out
pop
and
sbb
or
jnp
pop
xchg
ret
movsb
mov
cmp
ss
mov
data16
ds
mov
cmpsl
loopne
mov
sub
cmp
pop
mov
pushl
mov
xorb
orl
sbb
sub
hlt
es
gs
loope
jmp
jns
cmpsb
sahf
aas
push
call
pop
xchg
ret
mov
mov
jmp
aaa
iret
movsb
ds
push
fsubrl
mov
xchg
scas
hlt
cmp
xchg
lahf
dec
mov
inc
mov
pop
roll
mov
xor
je
leave
cmp
inc
daa
mov
mov
jl
cs
cli
mull
push
sub
popf
nop
sub
adc
pushf
add
repz
scas
cmpsb
adc
mov
lock
or
hlt
push
add
outsb
jmp
add
jle
mov
fwait
call
and
mov
sub
scas
aaa
or
mov
jo
push
xor
cmp
jnp
popa
orb
icebp
mov
push
xor
lret
xchg
insl
add
xchg
jge
popf
mov
pop
roll
xchg
sub
lret
test
nop
jp
add
dec
fs
push
sbb
dec
and
add
adc
xchg
cmp
dec
pop
cmp
loopne
adc
push
sti
or
dec
movups
dec
repz
sbb
jb
loop
cmp
fisubl
dec
je
and
test
add
inc
push
push
mov
je
ret
fimull
rcrl
stos
ja
faddp
jecxz
lods
lods
jno
mov
sahf
les
stos
cwtl
mov
leave
sub
pcmpgtb
daa
mov
ss
insl
adc
push
cmc
xlat
sbb
stc
xchg
mov
or
cld
xchg
cmpsb
mov
lods
push
sub
call
mov
inc
add
enter
lahf
cmpsb
lea
cmp
mov
movsb
fistpll
out
cmpsl
std
inc
insb
dec
jb
and
int3
inc
mov
in
pushf
xor
and
pop
sbb
in
es
adc
or
jne
lcall
pop
xchg
mov
mov
stos
xchg
icebp
stos
pop
lfs
pop
cmc
cmp
mov
rolb
xorl
rorl
test
pop
mov
cmpb
das
ljmp
push
push
add
inc
imul
fidivl
push
sub
shll
push
les
sub
popa
cmp
mov
repnz
pop
inc
fidivl
or
stos
fsubrs
mov
ds
add
es
hlt
pop
jp
lock
add
fsubrl
mov
loop
dec
mov
xor
aaa
or
je
rol
pop
cmp
in
pushf
xor
cmp
push
andps
pusha
out
and
fldt
jb
popl
dec
add
jmp
sbb
std
xchg
mov
repnz
repnz
mov
xor
mov
mov
push
lods
xchg
push
fidivrs
fistps
push
test
icebp
push
fisttpl
dec
xchg
cwtl
jmp
add
mov
cmpsb
mov
insb
lcall
scas
add
add
pop
mulb
data16
add
mov
xchg
or
push
or
lcall
aas
cmc
in
cmp
cwtl
sub
push
roll
cmpsb
xchg
test
bound
jns
adc
in
jns
sub
or
inc
and
cmpsb
in
xchg
arpl
repz
adc
out
push
xchg
and
push
adc
dec
sbb
movsl
xchg
or
stos
iret
mov
loope
mov
out
data16
fsubrs
pop
adc
es
shr
mov
pop
cltd
dec
pop
das
inc
mov
xor
adc
xchg
lods
dec
mov
sub
push
negl
pop
pop
lock
fnstenv
int
pop
clc
frstor
stc
outsl
outsl
sarb
mulb
cmp
mov
lods
ds
mov
jp
shrl
cli
xchg
mov
je
and
jg
xchg
aas
add
mov
jle
scas
xor
outsb
add
dec
jle
in
and
jae
or
sbb
notb
movsb
aas
in
addr16
cmp
cmp
mov
repz
cmp
add
scas
pop
jnp
icebp
xchg
sbb
mov
mov
sbb
stc
cmp
arpl
inc
cmpl
xor
in
inc
push
xlat
aaa
pop
or
daa
gs
cmp
sub
stos
cli
scas
xor
xchg
aad
dec
divl
fisubrs
outsb
pop
stc
push
add
mov
sti
ret
movsl
aaa
mov
dec
ret
stos
ret
push
mov
out
inc
push
xchg
pop
aas
stos
in
in
cli
das
cmp
outsb
pop
mov
adc
aam
or
test
pop
das
mov
inc
stos
pop
repz
stos
dec
mov
inc
pop
or
cltd
mov
mov
outsb
jne
mov
jae
ret
xchg
dec
mov
lcall
mov
push
test
xor
or
rorb
mov
lcall
or
and
jns
dec
out
adc
fcompl
mov
scas
sahf
scas
mov
lret
js
js
les
fildll
test
inc
out
mov
mov
dec
nop
nop
repnz
dec
int3
jle
pop
arpl
test
mov
ljmp
inc
incl
cmp
addr16
bound
gs
out
jl
and
insb
xor
repnz
sti
ficoms
clc
rorl
sbbb
roll
sbb
je
mov
das
rol
ljmp
call
push
in
adc
adc
jle
cmpsl
fildl
and
mov
xlat
mov
call
fbstp
popf
jmp
mov
mov
push
das
ds
les
jg
in
shrb
imul
mov
jp
inc
pop
push
ds
pop
jno
xchg
xor
fbld
sahf
mov
movsl
inc
popa
stc
outsb
or
jge
popa
outsl
jno
sub
hlt
imul
popf
clc
scas
lea
jo
add
jge
ljmp
cmp
test
sub
inc
ljmp
fbld
mov
das
or
xchg
mov
fistl
sub
aam
sub
xor
add
add
add
dec
jo
jl
cld
out
jbe
outsl
cmp
scas
push
push
jg
mov
add
cld
cmc
cmp
dec
rorl
or
fbstp
jecxz
notl
mov
mov
pop
inc
xor
insl
orl
mov
data16
or
lock
test
push
fwait
aad
mov
jp
ja
and
cmp
xchg
shlb
mul
ret
sub
sub
cwtl
cmp
mov
call
sbb
and
add
or
addr16
mov
push
imul
cmpsb
es
scas
stc
je
out
jne
je
gs
outsb
sub
sbb
movsl
push
sub
xchg
inc
mov
mov
pop
adcl
cwtl
inc
les
sbb
bound
jne
fstpl
jl
sub
clc
and
cmp
pop
out
dec
pushf
shll
divps
sahf
sbb
pop
mov
xchg
pop
test
mov
add
subl
dec
out
mov
adc
push
adc
cwtl
xor
mov
jl
adc
mov
cmp
cmp
lahf
cltd
pop
ja
adc
adc
add
roll
mov
push
sub
xchg
and
imul
js
mov
iret
add
xchg
sarb
sub
cltd
in
mov
sbb
ljmp
out
jbe
dec
pushf
add
jbe
pusha
dec
inc
pop
ret
loope
int3
pop
jns
pop
mov
aam
xor
xor
and
cmp
notl
jecxz
pop
jle
std
shrb
fwait
es
lret
movsb
mov
sub
xor
out
arpl
mov
cmp
loope
cmpsl
adc
xor
shlb
add
hlt
xlat
and
xchg
mov
xor
xor
fbstp
push
aas
pop
leave
mov
into
shlb
in
fistl
int
xor
push
push
adc
xchg
xor
and
pushf
call
incb
pop
and
or
sahf
fildll
rorl
or
in
sarb
loopne
pop
repz
mov
and
push
loope
cmp
orb
push
popa
xchg
insb
adc
lret
mov
cwtl
adc
xchg
inc
nop
jb
mov
lock
out
adc
ja
repz
movsl
inc
cli
mov
mov
jns
cmp
push
jl
push
xor
ret
pusha
pop
mov
in
lds
fisubs
add
jle
ret
mov
sub
jge
jae
push
cmp
popf
mov
sub
mov
push
xchg
sbb
push
mov
ss
rorb
loop
jg
cltd
sbb
out
popf
bound
mov
or
out
sbbl
les
stos
cmpsl
adc
sbb
add
push
fstl
cmpl
aas
daa
xor
rolb
and
or
daa
push
movsb
and
imul
scas
addr16
mov
nop
and
mov
push
cmc
je
xor
les
xchg
adc
sahf
and
cli
scas
add
xchg
jno
es
mov
mov
and
ficomps
nop
adc
mov
mov
xor
movsb
add
cmp
inc
jne
stos
aas
je
cltd
sahf
out
xchg
iret
and
fldl
fstpl
push
pushf
xchg
mov
add
mov
aam
cmp
popa
fcmovnb
sbb
xlat
pusha
daa
xlat
ds
xor
clc
mov
mov
std
xchg
dec
adc
imul
xchg
xchg
fsts
lahf
sub
hlt
push
rcll
push
dec
bound
stos
ret
sub
xor
pop
dec
mov
nop
or
jle
jge
test
dec
stos
mov
pusha
mov
mov
mov
loopne
mov
cmp
ds
stos
mov
scas
xchg
aaa
insl
fmuls
jp
sub
cmp
cmpsl
in
cmp
pop
mov
into
gs
xor
sti
sub
xor
aam
inc
jp
adcb
dec
xchg
ja,pt
pop
jns
mov
inc
les
vpsubq
dec
and
add
adc
mov
dec
sbb
in
adc
sbb
inc
xchg
xorl
or
push
add
pop
jp
sbb
xchg
push
cli
call
sub
mov
iret
lret
adc
add
imul
cmp
adc
sub
cltd
shll
mov
shl
and
test
push
shlb
dec
and
mov
pop
ret
mov
aad
jmp
xorb
jmp
xor
push
out
shlb
idivb
mov
repnz
jp
sbb
mov
bndldx
sbb
mov
lea
cwtl
cltd
xor
in
cwtl
ret
push
popl
and
jnp
inc
pop
ljmp
loopne
stos
imul
dec
xor
lea
andl
xor
stos
mov
sbb
cmpsb
stos
loop
sbbb
ds
sub
in
dec
ds
mov
stos
jecxz
int
not
xlat
adc
push
mov
xor
icebp
and
jb
inc
pop
dec
jne
test
mov
loopne
pop
adc
pop
inc
daa
cmc
pushf
and
add
pop
mov
xchg
pop
in
cmc
test
jmp
or
mov
inc
std
negb
int3
popf
mov
fwait
and
jl
sar
xor
sbb
pop
frstor
nop
jl
insl
ss
nop
jns
addb
aas
repz
int
mov
sub
mov
push
xchg
mov
jne
mov
adc
int
xchg
ljmp
lods
xchg
in
mov
xor
lret
push
sti
mov
lods
push
sbb
mov
jl
xchg
sbb
mov
icebp
cmp
sbb
and
mov
cmp
test
shll
call
inc
mov
jl
mov
mov
add
sbb
cltd
jmp
xor
pop
jle
xchg
icebp
movsb
mov
cmp
out
inc
xchg
inc
jmp
mov
mov
dec
push
push
or
or
or
addb
leave
pop
lahf
daa
jg
cmpsb
adc
xchg
out
add
dec
hlt
aas
std
data16
bound
inc
dec
mov
cs
cmp
jle
inc
sahf
push
jle
lcall
jo
jae
mov
mov
mov
push
or
push
add
inc
dec
mov
popa
dec
push
sbb
xchg
add
scas
add
add
ret
cmpsb
inc
cs
js
pop
lods
subl
xor
out
in
es
aad
mov
jl
stos
cmp
rcrl
mov
and
decb
and
fisubrl
xlat
mov
xlat
adc
adc
pop
and
insl
add
mov
outsl
ret
lret
or
adc
dec
jge
add
jns
inc
lods
mov
add
test
lods
adc
jns
adc
xor
and
xchg
iret
in
test
cmp
fwait
in
imul
repz
sub
xor
test
jb
aas
outsb
adc
ljmp
fldcw
jne
cmp
imul
sub
lds
fildl
rcrb
jg
fdiv
or
fwait
pushf
mov
out
or
or
ficomps
xor
adc
jnp
imul
stos
leave
cmpsb
insb
jbe
gs
ficoml
outsl
imul
fsts
pop
or
jno
and
jo
mov
stc
push
sbb
dec
imul
xor
in
inc
icebp
xor
nop
inc
loop
cmpsl
push
add
pop
popa
test
jae
ret
jmp
outsl
mov
jl
fldlg2
in
shll
daa
in
inc
rcll
test
sub
sub
fnsave
pushf
mov
pop
mov
ja
dec
cmp
fistps
outsl
push
bound
popa
cvtdq2ps
imul
mov
and
push
mov
mov
loope
jp
loopne
push
movsl
lods
mov
out
xchg
adc
into
cli
bswap
mov
std
mov
cltd
dec
mov
js
push
or
bound
rorb
stos
outsl
mov
dec
xor
push
xchg
jae
push
insl
pop
adc
rorb
aam
xor
fisubrl
pop
xchg
movsl
insb
mov
les
ljmp
nop
mov
shrb
out
lods
pop
mov
xchg
add
or
sub
push
mov
es
push
lcall
popf
mov
and
repnz
imul
mov
jnp
lods
push
or
jne
mov
xor
iret
sar
lret
loopne
lahf
fcmovnu
dec
mov
xor
imul
push
add
jle
xchg
or
ljmp
mov
mov
xchg
cs
jecxz
mov
mov
xchg
adc
sub
mov
sub
lret
sbb
xchg
nop
xchg
inc
pop
inc
sbb
mov
mov
xchg
lock
jecxz
shl
stos
loopne
nop
outsb
into
mov
mov
ljmp
addr16
icebp
in
in
adc
in
enter
idivl
xchg
or
int3
add
imul
insl
fs
sub
lahf
into
pop
xor
cli
pop
add
mov
jne
inc
addr16
movsb
dec
push
jae
ljmp
pop
dec
out
out
in
mov
test
lods
mov
fcmove
loop
and
xchg
lret
lahf
call
cltd
or
xor
mov
mov
loope
das
lds
lahf
push
pop
out
mov
adc
cmp
int3
add
xlat
and
aaa
std
out
and
and
xor
xchg
add
scas
add
add
enter
and
or
xchg
mov
imul
outsb
clc
or
test
cmp
xchg
lahf
ret
sub
mov
add
or
out
fsubrp
mul
scas
aas
jg
lea
cmpl
xchg
add
or
in
lret
mov
jge
dec
lock
xchg
lret
sbb
xchg
pusha
xchg
dec
clc
leave
mov
insb
mov
out
test
pop
jbe
xchg
xchg
jle
jae
mov
sub
add
les
add
pop
dec
xchg
and
jle
push
arpl
push
pop
sbb
pushf
add
dec
rcll
insb
sub
into
pop
pop
loop
sarb
pop
sbb
inc
pop
pop
aas
pop
mov
aam
scas
outsl
int
cs
mov
fsts
lea
pop
daa
scas
daa
es
test
movsl
push
movsl
and
int
cmp
jge
push
pop
imul
mov
cs
and
sub
jg
mov
xchg
sbb
sub
inc
fadd
adc
out
or
in
sbb
sarb
xchg
jecxz
add
test
movsb
mov
movsb
inc
xor
jmp
push
pop
mov
or
cmp
mov
sub
js
inc
ljmp
jmp
lcall
data16
sar
rcl
es
ficomps
pop
xlat
adc
movsl
pop
and
sbb
push
or
insl
sti
cmpsl
loopne
ja
sbbb
adc
jle
aas
mov
add
jmp
sub
iret
int3
adc
popf
pop
sbb
into
push
fimull
or
call
shll
xchg
gs
pushf
cmpsl
push
xchg
xorl
rcr
push
mov
push
pop
xchg
adc
and
out
cmp
in
push
push
dec
jp
mov
lods
mov
sub
mov
push
xchg
jbe
add
inc
cmpsl
sbb
ret
lret
mov
mov
and
std
call
shl
imul
out
mov
stos
dec
loope
mov
xor
fcompl
rcrl
jmp
lahf
xor
jl
mov
pop
xor
mov
mov
jno
and
xor
inc
mov
sbb
sub
mov
jbe
adc
inc
push
sub
mov
shrl
test
and
popa
pop
popa
or
cmp
movl
mov
jbe
cmp
test
outsl
mov
fs
pop
daa
mov
movsb
fisttpll
or
lods
mov
cmp
popf
iret
push
dec
inc
sbb
in
popa
adc
dec
jmp
mov
aas
filds
mov
pop
xchg
dec
jecxz
mov
lds
jno
add
fistpll
les
xchg
push
push
jns
jb
push
add
in
testl
stos
xchg
out
dec
push
or
lret
cmpsl
lahf
inc
repnz
cmc
jb
lea
mov
cmp
or
inc
cmp
xchg
je
fstpl
cmp
icebp
inc
cmp
test
fwait
loop
loop
sub
ja
loopne
pop
in
and
or
pop
ret
popf
in
mov
pop
in
aaa
rcll
insl
js
lds
or
push
rorb
jno
add
nop
int3
popf
fistps
lea
jmp
loop
cltd
add
scas
add
add
mov
dec
in
stos
std
adc
repz
into
sub
lahf
jb
mov
dec
mov
xchg
adc
test
jnp
xorb
mov
xor
cmp
lods
sub
push
sahf
mov
xchg
cmpsb
les
js
sbb
adc
jg
das
dec
xchg
lret
mov
in
mov
inc
inc
and
mov
xchg
icebp
fidivrs
lcall
sbb
dec
jmp
cmpsl
divb
mov
iret
push
shrl
dec
ret
and
addb
lock
in
mov
sub
test
inc
and
movl
adc
dec
mov
jo
xchg
mov
add
cmova
push
jle
test
in
outsl
fs
or
repnz
and
lods
sbb
out
xchg
or
mov
fidivs
or
cmp
sub
xor
addb
shrb
aam
mov
mov
cmp
int
adcl
jmp
pushl
jb
into
popa
stc
sahf
scas
ret
scas
hlt
in
pop
push
jmp
pop
out
jl
pop
mov
out
xchg
add
xor
addr16
adc
jl
je
in
cltd
jno
cmpsb
xlat
out
xor
iret
enter
int3
xchg
xchg
add
mov
pop
xor
gs
ss
lea
xchg
andb
sub
sahf
dec
test
or
popf
cs
repz
outsb
lds
iret
dec
lea
push
dec
subl
ds
pop
and
jno
fwait
dec
outsb
cmp
and
mov
test
adc
cmpl
test
and
inc
fistl
loop
test
adc
jns
in
in
imul
hlt
cmp
jb
cs
stos
or
rcrb
mull
xorl
adc
insl
rclb
mov
bound
xchg
cmpb
jns
jp
add
mov
ret
xchg
jecxz
andb
jle
inc
xchg
outsl
cmp
and
xlat
and
aad
mov
loop
fistl
xlat
xchg
push
pop
push
push
stos
insb
movsl
fildll
jne
inc
fdiv
add
pop
xor
fwait
xchg
jno
scas
dec
xor
mov
xor
data16
cmp
inc
hlt
data16
push
call
addb
adc
in
dec
insl
pop
push
xor
jb
cwtl
cmp
dec
push
sbb
or
loop
in
imul
jbe
lds
add
xor
lahf
int
push
or
mov
std
sbb
insl
mov
stos
xchg
push
popf
xchg
or
xor
jns
mov
mov
clc
cmpsb
lods
jmp
lret
stos
jae
jae
rol
mov
pop
mov
repnz
fsts
inc
fwait
adc
sbb
jmp
xor
jge
mov
test
fiadds
pop
push
dec
aaa
add
jmp
push
in
sub
pop
xchg
adc
ds
stos
or
ja
xchg
cmpsb
cld
mov
inc
xchg
and
ja
push
xchg
jns
jnp
mov
adc
push
iret
or
nop
out
aaa
in
mov
push
inc
test
mov
pop
pop
ret
add
add
add
add
loopne
cli
mov
pop
dec
shrb
pop
push
popf
add
scas
add
add
leave
dec
jae
mov
sub
pusha
in
cli
out
sub
test
lods
ljmp
insb
aas
ljmp
pop
lods
mov
jecxz
test
loope
popf
pop
push
das
sub
push
fwait
mov
mov
xlat
pop
mov
sub
xchg
stc
xchg
jns
jp
pop
out
and
or
jle
jp
test
andb
dec
add
adc
sub
push
neg
xor
sti
fwait
cmp
subb
arpl
mov
daa
jns
mov
inc
int
insl
out
adc
push
call
arpl
xor
xchg
into
cmpb
scas
outsb
imul
cmp
iret
imul
repnz
mov
or
call
xlat
pop
jp
pushl
mov
ss
add
mov
int3
mov
sbb
pop
cwtl
sub
sub
xchg
js
mov
add
dec
or
js
sbb
sbb
inc
jl
add
shll
cmpb
mov
adc
push
nop
lea
movsl
pop
aad
ss
int
pop
add
lcall
lret
mov
fwait
sub
mov
mov
test
cmpsl
imul
cmp
scas
aaa
push
inc
es
sub
roll
sbb
lock
pop
scas
shl
adc
mov
adc
sub
fsubs
jne
xchg
pop
or
ror
and
xor
dec
pop
mov
mov
jbe
insl
and
add
and
dec
shlb
iret
mov
and
xor
std
mov
dec
push
and
jg
pop
jo
ja
mov
sbb
in
iret
lret
lret
xlat
sbb
insl
fsqrt
cmc
or
lock
outsl
lock
sub
or
cli
ljmp
and
xchg
repz
mov
movsb
fwait
ljmp
sbb
sahf
sub
sub
push
mov
sub
testl
mov
test
sub
cmp
sbb
loope
pop
dec
sbb
ljmp
jno
cmp
or
sarl
pop
nop
nop
push
call
xor
jae
clc
jl
jmp
xchg
lds
mov
mov
fisubs
dec
xor
iret
out
dec
pusha
lods
cwtl
pop
cmpsl
xchg
sbb
inc
xor
lods
pop
sub
push
sub
jns
pusha
in
aas
dec
aam
movb
xlat
ljmp
adc
xchg
dec
add
pop
sbb
mov
cli
and
andb
mov
mov
sbb
mov
pop
arpl
mov
xchg
cmpsb
shrl
push
dec
je
int3
mov
mov
in
push
xchg
adc
push
fdivrs
adc
inc
lods
in
popa
pop
pop
push
adc
sub
pushw
adc
sub
xchg
sub
dec
cmc
dec
cld
scas
mov
mov
jecxz
ds
aam
cmp
aas
jg
lahf
ret
adc
pop
lret
dec
push
jecxz
shl
dec
ja
mov
sti
adc
mov
sbb
dec
sarl
lret
sbbl
sbbb
addr16
inc
fdivrp
out
ja
or
pop
mov
mov
add
sub
mov
outsb
or
push
stos
add
shl
inc
mov
lret
data16
xchg
nop
mov
shll
ret
jne
pushf
out
pop
add
mov
push
jo
pop
orb
jno
or
movsl
les
mov
adc
pusha
cwtl
scas
faddl
insb
mov
in
out
cs
sahf
leave
sbb
notb
je
mov
data16
cltd
adc
push
xlat
sbbb
aad
lds
dec
test
dec
cmp
pop
rcr
arpl
xor
jg
mov
popa
and
sub
in
in
popf
mov
mov
es
out
scas
jl
pop
mulb
add
mov
cmp
in
push
rorb
js
xlat
sub
rcrl
add
ret
rcrb
pop
xor
cmpsb
add
idiv
add
pop
push
fnsave
dec
sbb
in
lock
leave
out
sub
loopne
adc
mov
add
xchg
pushf
cmc
stos
shrl
ret
fs
add
adc
inc
xlat
xlat
mov
inc
notb
cli
jne
mov
lret
mov
push
cmp
inc
dec
outsl
dec
mov
insl
cmp
mov
out
subb
popf
push
or
cmp
imulb
sbb
sahf
dec
xchg
test
mov
and
insb
sahf
mov
arpl
fwait
xchg
sbb
mov
pusha
push
mov
arpl
mov
lcall
stc
cmpsl
xor
cmp
push
lock
sbb
mov
pop
fs
xor
or
scas
mov
or
lds
dec
arpl
je
jg
in
pop
cmpsb
and
mov
xchg
icebp
scas
aam
push
lds
cltd
jl
loopne
push
adc
loope
adc
jns
sbb
cmp
and
sbb
sub
mov
insl
sbb
mov
add
adc
fyl2x
mov
mov
lds
mov
mov
lds
add
ljmp
cli
pop
cs
sub
push
out
and
in
xchg
or
pop
sarl
mov
adc
mulb
and
je
sub
into
es
ret
cmpsb
enter
cld
cmp
mov
test
sbb
into
jge
push
push
push
pushf
sbb
addl
dec
aad
dec
adc
inc
lea
sub
iret
xchg
and
jg
insl
xchg
lahf
mov
mov
and
or
aas
cmp
imul
push
mov
mov
dec
jg
xor
push
imull
push
pop
mov
mov
lcall
cmp
mov
cmp
cmc
imul
mov
mull
addr16
fsubs
mov
and
outsb
nop
xlat
sbb
jp
scas
notb
pop
je
in
aaa
mov
scas
push
loopne
in
push
jge
mov
faddl
dec
lods
adc
xchg
shll
dec
push
pop
inc
in
mov
cld
mov
orl
ja
and
int3
je
push
ss
push
mov
call
loop
dec
push
hlt
inc
push
loopne
mov
nop
cld
cmp
fdivrl
adc
xchg
cmpsl
mov
ret
lret
sbb
mov
nop
sbb
into
xchg
mov
cltd
mov
xor
movsb
add
scas
add
add
or
add
movsl
push
pushf
xor
sahf
inc
movsb
ljmp
repnz
testb
push
jo
push
popa
jl
dec
repz
je
fstp
or
mov
cmp
xlat
mov
xor
cmp
daa
aad
push
arpl
push
pushf
aas
aad
push
fs
cmp
cmpps
je
cs
adc
fstpt
shll
mov
vfrczss
lds
cmovl
ja
iret
rcrl
add
aam
mov
fwait
push
out
push
and
into
adc
aam
into
rorl
addr16
jne
repz
xchg
scas
jbe
in
jns
dec
sub
mov
data16
pop
push
jns
adc
into
test
pop
fidivs
fwait
push
dec
in
test
cld
ret
inc
dec
sbb
in
fdivl
jg
cmp
fidivrl
mul
cmp
mov
ret
xchg
jmp
push
into
fistpll
cmp
fnsave
jne
mov
ds
rorl
pop
inc
clc
jmp
shl
js
loope
cmp
out
add
sbb
inc
dec
popf
pop
push
jmp
scas
sub
push
cli
cmp
mov
lret
cli
loopne
in
mov
push
pop
cmc
sbb
scas
inc
bound
pushf
jmp
xchg
sti
sti
mov
fmul
mov
dec
add
enter
and
mov
xchg
xor
or
cmp
xor
push
test
sub
sub
mov
aaa
in
sub
out
fwait
test
lret
ret
insb
movsb
dec
rclb
outsl
inc
je
jno
int
sbb
stos
add
insb
cmp
ret
xorb
jge
push
pop
push
icebp
flds
scas
jle
jns
out
aas
push
mov
and
mov
sti
cli
fs
push
cs
or
arpl
imul
cmc
push
mov
mov
sbbl
mov
mov
mov
push
mov
sbbl
push
out
add
ljmp
sbb
xchg
xor
fstp
add
lods
andb
and
push
rclb
push
mov
cmc
cmc
lock
lahf
into
adc
daa
into
push
fbstp
xchg
ret
sub
xchg
xor
jge
ja
jl
out
pop
and
or
sbb
mov
in
shll
in
jae
cld
lahf
dec
adc
xchg
and
jle
xor
inc
mov
lock
nop
nop
pop
cmp
jae
dec
pop
std
les
mov
ror
xchg
lea
sbb
lret
jno
push
xchg
jle
xor
xor
repz
sbb
pop
pop
push
mov
ds
xorb
push
in
push
enter
add
cs
mov
push
test
sbb
dec
pop
lods
movsl
dec
jmp
mov
das
sbb
leave
mov
xor
imul
add
rclb
shrb
lods
pop
aam
aad
lock
jle
push
jmp
xchg
adc
test
cli
addr16
js
pushf
lds
aad
imul
fwait
out
out
cmp
fbstp
mov
jnp
psubsw
or
in
fsubr
or
jle
jg
cmp
movsb
mov
test
jne
add
mov
mov
fsubrp
mov
sub
add
scas
add
add
xorl
push
jg
inc
adc
jae
dec
mov
fdivr
ret
add
aad
inc
ja
cmp
lcall
dec
cmp
cltd
cs
mov
insl
rcr
lcall
xor
or
scas
jg
stos
mov
test
sub
mov
gs
pop
push
loope
in
cs
loope
cwtl
js
and
dec
push
or
xor
fisubl
mov
add
cmp
mov
rorb
adc
or
fs
dec
jnp
xor
popl
add
sub
cmp
sahf
add
dec
or
in
js
push
mov
mov
pop
mov
xorb
cld
scas
shl
sbb
out
or
js
clc
js
xchg
cmpsb
cmp
scas
in
mov
stos
and
pop
and
mov
movsl
orl
sti
cmp
into
jg
cmp
mov
cli
and
subb
jge
clc
add
lods
jb
xchg
mov
andb
xor
add
mov
jbe
ret
jecxz
roll
test
aaa
lahf
sti
or
xor
pusha
push
inc
xor
mov
cmp
cli
xchg
out
repz
pop
mov
nop
pop
movsb
sub
mov
roll
adc
inc
xor
loop
inc
push
push
insl
mov
pop
xor
repz
out
outsl
xor
adc
fildll
je
orl
inc
cmpsl
add
add
or
inc
mov
popa
lret
test
sbb
mov
dec
mov
jno
stos
roll
es
xor
dec
push
adc
adc
push
je
out
mov
pop
and
push
fistl
cwtl
xor
ficoms
imul
add
xchg
jl
fwait
xchg
icebp
or
out
and
test
sbb
aaa
scas
and
stos
xor
std
shlb
int
mov
xor
aas
pusha
adc
xchg
sub
mov
arpl
bound
jmp
jnp
inc
std
jmp
pushf
adc
sub
nop
andl
or
cs
lret
fucom
ret
std
lds
xor
clc
pop
rol
in
pop
jo
jb
leave
test
mov
imul
cmp
or
push
out
popa
pop
cmpsb
lret
add
in
inc
push
es
pushf
xor
pop
inc
jae
mov
jns
dec
shl
das
imul
mov
insb
pop
or
test
sti
mov
lock
test
dec
aam
dec
xchg
pop
dec
stos
xorl
jno
inc
xchg
imul
clc
jb
out
gs
std
sbb
inc
sti
cmp
lds
imul
push
test
test
imul
imulb
dec
fucomp
enter
add
fisttpll
mov
in
test
cs
daa
jae
fldenv
mov
jecxz
dec
mov
call
arpl
push
mov
aas
mov
in
sbb
sbb
fs
inc
js
hlt
cmp
add
dec
mov
rcrb
cli
dec
push
ret
mov
jge
cmp
in
add
push
lods
add
scas
add
add
lcall
out
mov
add
loop
adc
out
mov
bound
in
and
movsl
pop
scas
jae
xor
out
pop
cltd
outsb
jne
stc
add
or
xor
test
adc
dec
lret
sbb
lcall
mov
xchg
sbb
ficoml
clc
pop
fmul
jns
sbb
out
mov
sbb
repnz
mov
mov
jg
shlb
jo
xchg
and
pusha
pop
hlt
popf
xchg
push
shlb
cmp
mov
push
dec
adc
int
fimull
xchg
movsl
pop
adc
or
test
scas
je
out
std
or
jo
sar
inc
cmc
cli
in
jg
clc
cmp
mov
cmpsb
inc
stos
pop
pop
test
stos
ret
pop
lds
xchg
xchg
and
stc
mov
repz
lods
mov
sbbl
sub
std
xchg
cmc
cmpb
outsl
popa
popf
mov
aaa
scas
xlat
lret
or
out
sbb
fdivrs
idivb
inc
cmp
push
or
pusha
rorb
das
js
rclb
fldenv
scas
and
and
pop
cmp
cmc
xor
ss
and
insl
and
scas
pop
sbb
mov
xor
testl
aam
xchg
mov
inc
aaa
scas
popf
push
adc
xlat
push
push
std
negb
ljmp
cmc
cmp
int3
mov
orl
add
xchg
adc
pop
mov
ds
outsl
jb
push
jp
xchg
incl
inc
and
jle
test
loopne
cmpsb
shlb
dec
sbb
mov
test
jmp
icebp
fwait
pusha
or
mov
lock
insb
mov
pop
pop
or
leave
cmpsb
sub
mov
xchg
cltd
sti
lahf
or
cmpsb
sub
xor
lcall
repz
jle
cmp
lahf
mov
dec
mov
paddq
and
jae
mov
adc
aad
xor
fimull
jns
mov
jb
sbb
in
in
mov
lods
test
sub
mov
imul
xchg
pop
xchg
xchg
ss
in
xchg
pop
push
mov
call
jle
lret
sub
xchg
fbld
icebp
out
rclb
ljmp
loop
movsb
inc
lcall
mov
out
add
pushf
push
sub
and
xchg
sub
cltd
test
int
sbb
lret
cmpsb
or
nop
dec
arpl
shll
sbb
jne
jle
xchg
inc
cmpsl
out
in
cwtl
std
add
or
out
jns
movsl
mov
pop
xor
push
jne
inc
add
sarb
arpl
mov
out
shlb
clc
out
std
xchg
sub
mov
xor
lea
adc
or
xchg
scas
out
and
aam
gs
pop
aam
and
repz
test
aad
fwait
test
repnz
stos
mov
mov
ret
in
mov
jle
sar
sbb
pushf
sbb
mov
sbb
and
subl
add
in
scas
rolb
stos
jae
mov
sbb
in
jmp
lahf
jle
stos
xchg
mov
add
add
inc
pop
pop
test
inc
js
lods
mov
fnstenv
pop
orb
push
lcall
fdiv
mov
cwtl
push
hlt
popa
insb
testb
paddw
jecxz
movsl
or
sbb
leave
sbb
decb
ret
push
lcall
jp
sbb
inc
test
adc
push
lds
je
inc
and
push
inc
clc
lret
jle
cmp
negb
cmpsl
sahf
add
pushl
jecxz
lcall
xor
xor
xor
xor
pop
mov
lcall
mov
mov
int
mov
cmc
leave
outsb
xchg
mov
mov
or
push
icebp
in
icebp
mov
pop
pushf
sbb
add
xlat
xchg
fidivs
dec
mov
cld
inc
sub
jno
xchg
mov
lock
and
cvtps2pd
mov
test
jge
std
mov
out
loopne
inc
fstps
and
leave
sbb
xchg
cmp
dec
push
and
mov
mov
scas
pop
cmc
mov
sub
sub
mov
mov
and
lods
add
cmp
xchg
imull
xor
push
jbe
mov
mov
xor
add
pop
push
add
mov
loope
nop
and
xchg
in
fisubs
or
insl
push
pop
orb
xchg
dec
lock
xchg
xor
lahf
std
inc
imul
dec
cmp
rclb
adc
lcall
xchg
or
out
mov
pop
jnp
not
lods
icebp
add
icebp
test
out
mov
cmpsl
rep
sub
outsl
test
sub
and
adc
fistl
scas
outsl
es
sub
sbb
out
loope
cmp
aad
dec
mov
jo
xor
pop
inc
pop
mov
jle
push
dec
mov
or
mov
dec
mov
push
jo
in
or
mov
ror
xor
jmp
mov
in
lcall
insb
xchg
call
iret
mov
hlt
ret
mov
std
dec
dec
and
cltd
notb
int3
test
xor
add
cmp
data16
adc
or
aaa
movsl
cmpsb
call
dec
nop
lcall
mov
fldenv
scas
out
mov
pop
adc
lea
outsl
inc
lret
stos
cmp
clc
pop
xor
mov
push
jnp
xchg
mov
aad
clc
sbb
adc
icebp
rcrl
push
notl
mov
xchg
test
fists
jne
int3
push
testl
jo
inc
inc
out
into
jae
outsl
pop
test
imul
add
leave
jecxz
inc
jg
cmpsl
test
js
push
or
or
gs
cmpb
addb
aam
es
sub
and
or
les
js
imul
push
sbb
gs
sub
xchg
clc
subl
aam
cmp
lock
js
mov
cltd
mov
ss
ljmp
arpl
xor
stos
iret
imul
aad
aas
sahf
pop
mov
mov
fcomi
inc
xlat
jb
jbe
movsl
add
mov
decl
mov
mov
add
scas
add
add
push
out
push
xchg
pop
cs
mov
pop
pop
daa
push
adc
jg
mov
stc
cmp
dec
xor
xchg
sub
movsb
test
inc
sub
pop
inc
xchg
xor
mov
fisubrs
aas
dec
nop
cmp
and
dec
in
bound
scas
pushf
adc
cmp
out
dec
lea
push
ja
test
repnz
in
and
es
push
jle
and
cli
aaa
xor
pushf
nop
fwait
cwtl
jge
mov
movl
outsb
ror
out
icebp
xchg
cmp
popf
pop
pop
outsb
icebp
in
sbb
xlat
inc
jecxz
popf
jecxz
mov
mov
sub
mov
in
push
inc
cltd
inc
and
jnp
push
xlat
xor
les
pop
hlt
mov
jg
call
dec
mov
mov
mov
mov
imul
insb
adc
fdivrl
add
jecxz
push
mov
inc
mov
mov
jns
jmp
cwtl
mov
pop
scas
and
xlat
test
fadds
mov
lret
daa
popa
mov
or
mov
ja
cld
or
arpl
xor
hlt
in
mov
sub
in
inc
divb
cmpsl
jp
mov
pop
push
or
jo
jae
jb
mov
mov
aaa
jge
rolb
xor
repnz
imul
xor
pop
shl
jno
lret
insb
sbb
inc
xchg
sbb
and
js
popa
mov
pop
push
jmp
das
hlt
les
loopne
mov
jae
lcall
xchg
repnz
dec
fptan
insb
insb
in
jmp
or
push
jmp
mov
into
mov
loope
dec
repz
cltd
adc
pop
jmp
fld
dec
into
pop
or
lods
cld
add
out
outsb
shl
loope
lcall
test
pop
lods
fistpll
jl
les
sub
dec
push
rclb
inc
sti
mov
cmc
out
push
ss
dec
inc
repz
das
repnz
pop
pop
aad
mov
incl
sub
jns
incl
jae
cmpsb
mov
dec
sbb
sub
movsb
addl
scas
lcall
add
gs
ljmp
sbb
aas
sbb
insl
in
dec
mov
sbb
inc
lret
lret
fidivrl
xchg
popa
jmp
pop
pop
lods
lock
test
pop
sub
fistpl
inc
ja
jp
lret
jbe
xor
stos
loope
pop
pop
test
cwtl
shlb
movsl
fsubr
int3
out
jns
stc
cmp
insb
mov
int3
xchg
movsb
and
push
mov
fcmovnb
xchg
stc
ss
gs
add
cmpsb
es
dec
jne
cmp
in
stc
mov
push
mov
lcall
subb
mov
jnp
add
xchg
and
adc
rol
inc
lock
test
dec
lock
cmp
aad
testb
ss
sub
call
je
xor
xchg
in
test
push
mov
jmp
xor
cmc
imul
es
mov
push
mov
loop
out
jle
dec
add
jbe
mov
jae
add
lret
xorb
icebp
lret
aam
imul
ja
in
mov
add
pop
dec
cmp
pop
jnp
es
test
stc
sub
bound
hlt
pop
loop
add
aam
fbstp
lock
dec
xor
mov
icebp
add
inc
add
stc
inc
imul
bound
mov
pop
pop
xor
jbe
cltd
sub
addr16
jecxz
out
sbb
rorl
cmpsb
repnz
or
pop
outsl
mov
mov
push
mov
sub
out
and
inc
or
push
les
mov
jo
nop
inc
andb
add
jge
out
and
shr
cmp
jb
outsl
cmp
mov
insl
push
leave
push
mov
adc
sub
sahf
insb
call
fsubl
out
lock
insb
jg
and
leave
inc
inc
push
sub
mov
push
sti
xchg
ss
cmp
insl
cs
pusha
mov
and
mov
repnz
cmc
adc
add
stos
or
mov
dec
jl
aas
dec
repz
xor
cmp
push
add
inc
or
das
jnp
in
dec
push
icebp
lds
mov
cmp
inc
pop
sbb
and
pop
push
ljmp
jmp
movsb
add
test
jae
mov
cmp
jnp
cmp
jge
dec
rolb
xchg
cli
movb
adc
inc
sbb
out
sub
sbb
shrb
push
outsl
or
fdivs
div
cltd
ljmp
ds
hlt
xor
xchg
je
pop
mov
xchg
scas
mov
test
and
ss
pop
dec
notl
add
lcall
and
hlt
pop
add
pop
and
xchg
mov
out
cmp
push
cmp
inc
push
jg
cmp
xor
xor
gs
add
sub
scas
adc
xchg
mov
jmp
push
insl
orl
movsb
les
cmp
mov
and
rorl
addb
aaa
jns
dec
sub
in
jmp
fdivr
cmp
pop
sub
shlb
sbb
pop
and
inc
push
pop
insl
jp
rorl
push
push
xchg
out
sbb
imul
inc
jg
dec
test
dec
pop
cmpsl
mov
and
stos
pop
inc
jnp
pushf
push
cli
mov
or
add
ds
mov
xor
add
ss
xor
lods
push
repz
cld
or
inc
hlt
cmp
add
fistps
dec
imul
sub
mov
inc
es
pop
loop
pop
fimull
call
adc
shrb
and
pushf
mov
lcall
test
mov
adc
lret
loopne
inc
sti
and
sub
cwtl
fs
sbb
sub
lret
push
not
icebp
aad
mov
mov
push
stos
cmp
cld
mov
int3
jne
push
in
sub
les
mov
lret
popa
jecxz
inc
mov
cli
sbb
leave
filds
fs
js
mov
inc
add
inc
data16
jmp
mov
ret
shll
adc
adc
insb
mov
dec
xor
repnz
subl
xchg
mov
add
add
add
in
jp
jp
in
sarl
in
insb
lret
add
ja
and
dec
or
pusha
xor
int
dec
out
out
loopne
pop
pop
adc
push
pop
test
sbb
int3
std
lret
cmp
inc
sub
sti
mov
adc
ljmp
rclb
and
push
inc
pop
and
aad
add
pop
fsubr
xchg
and
lea
daa
ficoms
mov
lods
mov
repz
repz
nop
push
nop
cmp
and
lods
ljmp
sbb
sahf
orl
dec
movsb
sub
mov
out
mov
pop
sahf
rcrl
or
mov
es
sub
es
movsb
pop
pop
jno
loop
sub
shrl
punpckhbw
cmp
fisttps
lret
stos
fcompl
mov
inc
pop
in
jo
inc
or
and
inc
insb
adc
stos
or
jns
adc
nop
jo
js
lcall
les
mov
in
movsb
out
insb
movd
aaa
in
mov
lret
or
xchg
cltd
xchg
enter
add
addr16
scas
mov
xor
push
sarl
xor
mov
adc
or
out
xchg
nop
push
xor
pop
lock
pop
sbb
jp
icebp
aam
inc
arpl
mov
add
xchg
mov
cmpsl
adc
jge
repz
adc
call
dec
testb
pop
pop
rorl
fldln2
inc
repz
mov
sbb
fucomp
fs
sub
sti
inc
xlat
sarl
into
and
dec
shll
xor
rolb
and
mov
add
mov
lods
ficoml
pop
loope
dec
dec
dec
lahf
or
xchg
sub
mov
jp
ljmp
lret
push
jae,pt
shll
xor
bound
in
and
pop
test
or
push
adc
lds
arpl
mov
mov
push
mov
out
xor
pop
jcxz
incl
mov
js
dec
popf
ds
sbb
cmp
push
push
sbb
push
xchg
mov
in
mov
mov
sub
pop
icebp
fwait
cmp
leave
push
cltd
jo
mov
cmp
cmpl
ret
cmpsb
in
sbbb
dec
mov
jl
shrb
adc
mov
loopne
shl
adc
sti
adcb
or
pop
sub
fidivrl
mov
sbb
lea
dec
ss
jb
imul
sbb
fisubrs
cld
repnz
and
pushf
dec
jb
mov
adc
mov
test
and
cmp
lret
cld
enter
sbb
jbe
cltd
fildll
pop
dec
icebp
sub
in
clc
aaa
or
or
pushf
pop
jne
scas
addr16
insb
inc
cmpsl
ljmp
pop
fmull
stc
fsub
mov
jmp
lret
in
inc
out
push
cli
push
mov
mov
dec
and
mov
out
sbb
push
popf
les
or
leave
and
je
arpl
mov
xchg
mov
jl
cli
popf
xchg
add
mov
lcall
or
mov
add
pop
push
and
mov
into
mov
add
pusha
rcl
mov
jns
xor
loope
mov
xchg
aaa
xchg
pop
scas
stc
and
pop
stos
rclb
int
cs
outsb
push
sbb
ss
jnp
or
out
lahf
mov
mov
mov
jecxz
pop
test
outsl
das
xchg
orl
lods
cmp
xchg
pop
mov
jmp
nop
xlat
sbb
push
out
lret
cmp
popf
ds
jno
xor
sbb
push
rolb
decl
popa
mov
lods
or
out
xchg
out
in
xor
push
mov
movsl
sbb
mov
xchg
jne
test
xchg
decb
pushf
xor
ss
rorb
out
outsl
add
or
xchg
fimuls
and
loop
jecxz
test
cmpsl
sub
mov
shl
xchg
fisubrs
xchg
dec
gs
and
shl
pop
test
dec
push
pop
pop
ja
and
dec
repz
jns
stos
es
mov
es
sti
lock
int3
pop
loop
in
and
add
pusha
dec
pop
stc
mov
or
push
cmpsb
jp
jb
in
or
rcl
js
sarl
int
push
fsubrl
mov
mov
add
xor
lret
mov
pop
mov
lds
mov
sti
mov
sti
mov
mov
int
sbb
scas
xchg
jns
mov
sub
xchg
je
roll
pop
sti
cs
push
repz
ja
aam
jg
inc
mov
pop
adc
sbb
leave
es
xchg
mov
mov
jnp
sbb
into
inc
shlb
lahf
test
test
sarl
push
inc
add
and
stos
ret
add
mov
or
sub
inc
inc
pop
sub
cmp
rcrb
dec
push
jo
adc
enter
dec
lods
mov
dec
scas
incl
fs
test
cmc
jb
rcll
inc
pop
cmpsb
jno
mov
xchg
jmp
or
dec
add
adc
mov
xor
xor
sahf
mov
dec
daa
pop
jg
cltd
gs
fldl2e
fadds
xchg
clc
scas
jb
gs
inc
shr
das
movsb
mov
xchg
sbb
outsb
das
sbb
add
or
and
add
jl
or
sbb
lea
mov
and
mov
scas
ss
add
loopne
and
sub
in
lods
repnz
sbb
cli
jbe
cmp
push
rorb
ret
loope
mov
add
add
arpl
int3
push
rcrb
mov
pop
xor
push
sbbb
mov
cmpsb
repz
dec
in
push
icebp
cmpsl
xor
cli
lret
mov
sbb
cmp
inc
pop
setge
loopne
xor
xchg
xor
lahf
clc
dec
sbb
sbbl
mov
iret
addr16
into
ja
fsts
orb
insb
add
push
lcall
addl
xchg
xchg
pop
call
jecxz
mov
std
vmwrite
push
jns
jmp
test
xchg
fbld
lcall
inc
cmp
pop
inc
or
mulb
cmp
push
jae
and
cmp
add
out
mov
cmp
in
push
mov
sub
add
scas
add
add
lcall
aad
mov
sbb
dec
push
cmpsb
rcr
testl
icebp
pusha
adc
bound
push
popl
jge
jge
hlt
xor
add
push
lods
pop
mov
and
lods
stos
mov
idivl
mov
adc
outsl
jne
stc
lock
mov
jl
lods
or
jmp
loope
dec
pusha
data16
lds
xchg
xchg
adc
fcmovu
and
ljmp
push
fyl2x
js
jns
push
fprem
outsl
rclb
imulb
mov
icebp
imul
pusha
and
jmp
outsb
xchg
jle
rorl
cmp
cmp
inc
dec
push
sub
insb
leave
leave
call
add
mov
dec
insl
pop
and
mov
imul
jne
ljmp
outsl
mov
out
js
cmp
inc
sbb
punpckldq
and
int
pop
cmp
inc
fsub
inc
mov
push
mov
pop
inc
popa
jo
cmp
dec
fs
pop
inc
call
es
lahf
orl
xor
cmp
xor
leave
xchg
inc
mov
ljmp
mov
push
imul
imul
out
les
dec
iret
negb
shl
or
js
sbbb
icebp
js
loope
and
add
loope
out
xchg
lods
adc
cmp
movb
inc
jb
in
rol
stc
pop
or
pop
cmp
in
fucom
int
dec
fildl
in
mov
mov
cltd
outsb
subl
push
mov
jl
pop
fsubl
push
pop
lret
xchg
sti
adc
ret
xor
lock
popf
rorl
in
push
popa
mov
pop
adc
jle
lahf
push
sub
xor
movl
dec
mov
ja
iret
xor
xor
shlb
cli
clc
pop
int
cs
in
sub
pop
sbb
push
push
lahf
lret
pop
cld
out
loopne
xchg
shlb
push
mov
inc
jb
push
jb
das
popa
jl
adc
mov
push
pop
cwtl
mov
inc
nop
jge
es
popf
push
outsb
repnz
xchg
call
mov
lock
xchg
stos
adc
adc
push
mov
inc
aad
ret
pop
push
sbb
xor
xor
fcoms
or
jle
dec
lods
cmpsb
shll
fidivrs
in
lret
dec
xor
inc
adc
jle
push
call
std
inc
es
cmp
int3
or
dec
sub
ds
sbb
in
push
cmp
sbb
mov
mov
mov
mov
out
repz
mov
imul
or
movsb
inc
mov
dec
and
cmp
add
xor
and
cmp
stos
std
ss
sti
dec
pop
cmp
sbb
mov
mov
movsl
xchg
dec
into
mov
xor
or
mov
das
cmc
mov
sub
xor
shll
cmp
in
and
outsl
dec
aam
fiaddl
push
push
cmpsl
xor
add
mov
xor
jbe
jg
lds
add
mov
mov
xor
js
in
pushf
push
aam
movsb
xchg
xchg
sub
out
cmp
pop
xchg
sbb
popa
ret
add
nop
push
dec
loop
cwtl
and
add
sti
in
cmp
std
jl
stos
jmp
in
lods
les
mov
fsubs
mov
mov
in
xchg
gs
repz
xchg
mov
mov
mov
mov
lahf
js
ret
insb
mov
jnp
xor
push
jmp
cmp
lock
mov
aaa
sub
hlt
int
fists
jecxz
ret
sbb
dec
fsubr
daa
inc
xorl
push
pushf
scas
lret
imul
out
sbb
dec
sti
test
xchg
lods
jo
sbb
movsb
fstpl
lret
pop
pop
cmp
jb
pop
cmp
cld
mov
pop
adc
or
stc
lcall
bound
je
aas
jno
rolb
sbb
sbb
lcall
mov
push
fidivl
push
cwtl
test
push
cmp
and
push
push
call
mov
sub
cs
dec
ja
sbb
hlt
mov
adc
add
xchg
lock
cmp
push
rcll
in
inc
push
jg
xchg
add
call
mov
fwait
sar
ss
in
jae
inc
xchg
inc
aad
cmpsb
int
or
mov
out
pushf
popa
out
cmpsb
fists
lret
lret
pop
aaa
daa
mov
popf
shrl
sti
loopne
add
insl
ja
mov
ja
cmp
xor
dec
inc
jo
lods
push
adc
xor
cmp
sub
cltd
psllq
lea
std
add
into
aas
decb
push
movl
push
cli
cmp
gs
adc
lods
cmp
movsl
xor
shlb
and
lods
add
int3
adc
sbb
cs
fidivrl
lret
clc
bnd
jo
sbb
orb
cmp
hlt
ret
push
xor
leave
adc
mov
jbe
imul
xchg
push
pop
xor
shrb
dec
sub
test
dec
andb
push
hlt
shll
jae
mov
jge
std
fimuls
lods
mov
add
fnstsw
sub
cwtl
pop
fcmovb
ret
out
jle
dec
jb
or
arpl
jle
adc
mov
cwtl
ret
fcomps
mov
repz
xlat
pushf
les
scas
inc
in
insl
rclb
xchg
mov
aas
jns
addl
jge
jmp
add
xchg
push
iret
sub
mov
xchg
fildll
xchg
lea
mov
jns
add
jge
repnz
sub
je
loopne
ss
sbb
push
icebp
pop
mov
data16
pshufw
mov
sub
jmp
mov
and
add
xor
sbb
mov
je
mov
rcrl
lret
mov
cltd
and
or
call
leave
loopne
sub
cmpsl
xor
sbb
imul
in
cmpsl
dec
mov
inc
push
outsl
dec
clc
popa
jo
stc
pop
mov
lock
sti
cli
iret
repz
sbb
cmp
fiadds
push
cmp
add
cmp
jnp
dec
pop
ljmp
add
sti
jns
jbe
test
es
ds
lret
pusha
inc
xchg
xchg
sub
push
out
sub
jo
int3
rcrb
pop
cli
adc
xchg
dec
fnsave
jecxz
outsb
and
dec
jns
push
mov
dec
lahf
rol
sbb
push
cmp
mov
fsubrs
xchg
arpl
mov
xor
mov
mov
adc
int3
and
jmp
pop
ja
xchg
push
sti
nop
xchg
dec
jge
imul
and
popl
dec
jnp
add
inc
frstor
xchg
mov
outsb
inc
sub
xchg
call
pusha
cmp
orl
fnsave
ja
inc
push
lcall
pop
and
repz
inc
std
std
dec
xor
jae
jo
adc
pop
into
adc
stc
push
adc
divb
mov
cmpsl
xchg
sbbb
cld
pushf
push
jle
daa
addb
jns
push
or
jae
icebp
sbb
fcom
push
das
dec
inc
pop
cld
cmpsb
inc
adc
xchg
and
and
lahf
jle
es
rcll
lods
ficompl
xchg
pop
jbe
jae
push
je
mov
inc
repnz
lret
add
jbe
inc
pop
repz
xor
add
jg
jecxz
mov
lds
sti
pop
adc
test
js
pop
pop
dec
sbb
imulb
push
fsubs
and
xlat
scas
mov
mov
cmp
fisttpll
add
mov
pop
fnstcw
es
push
cmp
cli
lahf
iret
sub
mov
dec
loope
inc
out
jmp
sub
jmp
dec
push
ret
cmp
inc
dec
not
inc
xchg
pusha
int
sub
je
or
adc
sbb
dec
test
jne
xchg
mov
and
fistpll
jp
sub
xchg
push
mov
add
test
sti
adc
pop
sbb
mov
push
cmp
jnp
adc
jmp
test
and
and
mov
mov
popa
push
mov
push
movsl
sub
jo
jg
outsl
bound
sbb
cmp
clc
je
jns
and
out
add
mov
mov
fidivs
xchg
sarb
int3
cltd
pusha
or
iretw
dec
in
xor
rcl
xchg
adc
dec
out
stos
icebp
daa
mov
add
add
fdivrs
lahf
inc
ds
cmp
or
lea
jp
lock
xor
inc
cld
mov
push
adc
lods
cmp
sbb
mov
jno
push
dec
loope
add
cmpsb
xor
std
mov
jo
adc
jnp
inc
xlat
fsubrl
lea
les
stos
ja
sub
add
jl
mov
inc
sbb
stos
notl
lds
inc
bound
jns
icebp
iret
jmp
divl
stc
lods
adc
into
cmp
fidivl
rcl
cmp
xchg
popf
aaa
mov
lods
sbb
jg
pop
and
cltd
sub
popf
cmp
pop
push
mov
push
sbb
test
cmpl
push
adc
mov
xor
and
mov
outsb
repz
lds
loopne
cli
rcrl
xchg
ret
pop
mov
push
cmp
out
in
inc
adc
inc
jo
xor
or
test
int
test
cmpsb
jl
iret
movsl
inc
jecxz
in
push
dec
inc
adc
shlb
xor
out
aam
subb
arpl
jg
negl
add
dec
or
scas
jmp
popa
mov
or
and
xchg
xor
add
add
xorb
sbb
xor
dec
shl
push
daa
cmp
leave
and
cltd
push
repz
daa
jp
and
xchg
inc
cmp
push
decb
adc
out
mov
std
scas
into
push
testb
jae
lar
movsl
sub
mov
pushf
lcall
repz
cmpsl
aam
negl
lods
jae
push
shll
arpl
aam
shl
xchg
jmp
xor
fidivl
pop
pop
push
pop
pop
xor
rcrb
in
outsl
sbb
cmp
mov
loopne
jae
mov
dec
sub
cmp
daa
lds
and
inc
dec
mov
and
imul
int3
jle
cmp
fstps
push
add
sbb
adc
pop
loope
cmp
in
sbb
pop
jecxz
aaa
out
out
ffree
test
pop
jno
cwtl
mov
outsl
mov
jmp
cld
sub
jp
cmp
push
inc
loop
fcmovnu
test
sub
lret
add
lahf
enter
outsb
pop
jp
in
xchg
int3
cld
and
xor
lods
shrl
test
sub
dec
popa
dec
dec
or
imul
int
add
test
lods
addb
mov
nop
mov
cmp
dec
sti
push
out
fimuls
scas
lcall
xor
notb
cs
popf
sti
pop
stos
push
imul
pop
loop
mov
mov
or
movsl
ss
cmp
orl
lret
addr16
inc
addb
call
add
fcmovu
dec
and
adc
xor
mov
sub
mov
and
lret
insl
les
adc
xchg
push
inc
mov
mov
test
jge
insb
dec
dec
sbb
rorb
mov
lret
pop
xchg
aaa
mov
mov
mov
daa
jne
cmpsb
jae
cmpsl
push
and
xchg
adc
into
stos
xor
sub
mov
and
sbb
aaa
xchg
inc
push
repnz
arpl
pop
testb
push
mov
adc
pop
cmp
aam
dec
out
adc
stos
xlat
in
pop
pop
mov
dec
mov
lahf
insb
loop
ja
push
xor
sub
inc
lret
sub
fisubl
loope
jmp
and
inc
out
cmp
call
mov
lret
add
movsb
das
fmuls
sbb
inc
clc
sub
test
dec
add
pop
jns
rcrb
dec
xchg
lods
xor
iret
cmp
movl
mov
flds
xor
jmp
pop
leave
add
int
sub
pushl
inc
add
fildll
std
cld
mov
xchg
push
pop
loope
xor
pop
mov
xlat
cltd
cmp
shlb
xor
push
sbb
dec
and
sar
inc
cmp
xchg
pop
jb
sbb
fidivrs
mov
aas
mov
mov
notb
pushf
sbb
push
leave
jno
or
popa
into
arpl
cmpsl
stos
test
rclb
mov
xlat
loopne
sbb
vmovsd
stc
aas
sub
shrl
push
adc
pop
and
imul
mov
xchg
test
jne
xor
add
add
add
add
add
test
push
cld
mov
in
add
scas
add
add
lods
fldl
inc
ret
out
pop
pop
or
addl
lret
enter
out
mov
leave
xor
outsb
lahf
nop
push
aaa
jo
faddl
in
mov
and
dec
push
pushf
push
xchg
or
jo
pop
xchg
xlat
ja
pop
cmp
lea
ja
mov
jg
sbb
xchg
xor
inc
push
fs
out
outsb
xchg
cmpsl
leave
xlat
cmp
sub
sarb
mov
idiv
dec
jmp
sub
mov
jg
mov
lea
adc
or
mov
addr16
sub
into
movl
add
mov
xchg
xor
jp
dec
lods
jbe
xlat
popl
outsl
shll
int3
sub
lods
pop
pop
mov
xchg
mov
movl
sub
adc
std
adc
cltd
out
xchg
and
aas
nop
mov
lods
adc
push
jns
cmp
cltd
dec
adc
push
lcall
lcall
jg
pop
fiaddl
mov
scas
out
pusha
fs
lds
inc
or
jae
xorl
xor
add
mov
inc
jns
outsl
or
icebp
shlb
adc
or
or
sbb
lret
out
adc
mov
in
lods
cmp
repnz
lahf
neg
jo
dec
sbb
mov
ds
push
push
and
loopne
sbb
or
dec
icebp
jecxz
divl
sub
mov
xchg
adc
enter
or
movl
jmp
cmp
lahf
jb
mov
inc
stos
adc
xchg
and
xor
aas
pop
enter
std
nop
shld
jne
jmp
push
xchg
lcall
ret
push
adc
scas
std
pop
mov
cmp
out
test
dec
aad
mov
push
das
add
xlat
or
pop
iret
mov
cli
or
rolb
les
and
or
lods
outsl
data16
inc
inc
sbb
add
push
test
xor
mov
inc
pop
and
inc
lret
mov
mov
lods
outsb
xchg
or
dec
sub
pop
push
das
lods
pop
mov
in
ret
rorb
aad
sbb
fwait
icebp
imull
xor
jnp
dec
sbb
push
cmp
ficoml
pop
inc
lcall
aas
push
cld
mov
adc
mov
mov
jo
mov
or
xchg
xor
les
xor
decl
into
scas
cmp
setae
cwtl
mov
mov
inc
jle
jecxz
and
sbb
add
cs
pop
ja
push
dec
aas
std
dec
or
mov
int3
sub
add
outsb
jb
fildl
xchg
out
pop
cltd
cs
mov
sahf
addl
sub
stos
dec
mov
sbb
xchg
inc
xchg
popa
enter
dec
dec
inc
pop
adc
inc
movsl
orb
mov
js
mov
add
test
sub
xor
push
out
sar
icebp
push
imul
xor
mov
add
leave
popf
lret
popf
pop
xlat
loope
lock
aas
fsts
add
add
inc
adc
aas
mov
push
or
out
xor
cmp
in
sbb
sub
dec
daa
mov
cmp
sbb
jmp
cltd
out
push
test
pushf
cmp
stos
inc
push
loope
sub
iret
lods
sbb
aaa
cwtl
mov
cmp
lret
sbb
fmuls
sbb
lock
or
push
mov
xorb
mov
xchg
sbb
mov
push
jp
xchg
stc
xor
out
stc
mov
subb
lock
dec
bound
in
iret
fs
adc
or
call
xchg
inc
aad
pop
push
xor
cmp
mov
jns
cmpsl
aas
cltd
or
or
rorb
sarl
lcall
cwtl
inc
aas
push
and
pop
jae,pn
push
repnz
pusha
ja
fs
mov
jb
lcall
xchg
pop
sub
movsb
cmpsl
imul
adc
pusha
mov
add
add
pop
sbb
out
rcr
outsb
jnp
mov
cmpsb
push
mov
dec
popf
pop
and
repnz
insl
cli
or
rcrb
gs
aas
fiaddl
fs
fcmovu
push
cmp
push
fnstsw
fs
xor
aad
add
ljmp
mov
mov
pusha
xchg
push
out
gs
int
mov
inc
dec
fldl
movsl
pop
fs
imul
lds
fnsave
loope
ljmp
lods
and
add
xor
xor
pop
and
and
xchg
mov
in
mov
enter
lea
push
gs
stos
xchg
insl
movsb
aam
ja
pop
fidivrl
scas
mov
into
lock
cmpsb
jno
pop
fs
mov
cmp
lret
decl
outsl
je
lods
pop
add
repz
mov
ret
ficompl
aad
iret
sub
dec
sahf
int3
pusha
imul
dec
cld
loop
lret
data16
jne
pop
sub
jnp
mov
jo
fdiv
xchg
mov
fs
out
xor
jle
xor
dec
mov
iret
cmp
ljmp
ret
aam
pusha
js
xor
mov
imul
add
imul
scas
pushf
aad
in
xchg
scas
push
mov
push
mov
add
sub
into
cmp
or
sub
xchg
xor
imul
add
rolb
lds
mov
fists
sahf
loope
mov
xor
dec
mov
loop
jl
cmp
stos
xchg
repnz
inc
int
ja
xor
dec
sub
jne
xorl
sbb
sbb
loop
rep
adc
or
adc
shrb
xchg
sbb
push
mov
mov
lahf
es
pop
mov
dec
lods
adc
bound
adc
imul
mov
gs
or
mov
push
std
loop
push
gs
sbb
sub
dec
and
xor
je
daa
mov
fcmovnb
pop
sub
jnp
push
pop
stc
negl
jo
mov
test
push
lods
addl
add
add
add
call
pop
out
dec
pop
popa
sub
mov
add
test
xchg
dec
lret
ds
loope
inc
xchg
pop
gs
sub
outsb
adcl
and
cmp
sub
push
cmp
dec
inc
adc
in
pop
jae
loope
std
push
mov
cmpsb
popa
push
mov
in
lea
inc
ret
push
mov
mov
xchg
test
out
cmp
and
icebp
fidivs
stos
add
mov
in
jmp
movsl
cmpsl
and
out
stc
push
cmp
lods
adc
in
jns
mov
aas
and
into
rcrl
ds
mov
jle
mov
ret
or
mov
inc
sbb
cmp
adc
sbb
dec
or
push
jbe
imul
sbb
jnp
ret
adc
or
outsl
add
mov
fs
push
les
dec
in
pop
loopne
mov
sbb
aad
les
jp
lret
adc
lret
sub
out
and
adc
xchg
add
orl
movsl
aaa
inc
push
out
sbb
jecxz
and
push
push
jecxz
xor
pushf
mov
pop
push
ds
mov
out
into
xor
es
add
fistps
pop
cmp
sub
mov
pop
mov
or
xchg
fsubrs
or
insl
and
call
push
inc
inc
add
out
mov
sahf
lret
jns
sub
sbb
push
mov
and
inc
repnz
out
push
xlat
mov
dec
mov
icebp
cmpl
jge
push
outsl
aaa
pop
enter
mov
les
pop
out
cli
mov
stc
pop
jmp
gs
cmp
add
insl
dec
iret
mov
insb
nop
add
pop
cld
sub
sub
lods
dec
imul
fwait
xchg
jg
outsl
jae
fdiv
jnp
xchg
les
fcom
cwtl
cli
xchg
ret
xchg
sub
jp
inc
cmp
inc
mov
stos
mov
popa
and
xchg
inc
paddsb
xorl
subl
loopne
dec
in
sbb
mov
ret
jmp
sarb
mov
notl
mov
cmp
mov
dec
hlt
push
xor
inc
inc
dec
divb
dec
inc
mov
test
fisttpll
scas
loope
jge
pop
idivl
add
cmp
mov
push
xor
and
int3
in
sbb
sti
incb
in
lods
adc
cli
xor
dec
dec
stos
xor
sub
add
inc
lcall
movsb
dec
insb
jbe
mov
push
nop
mov
ja
mov
xchg
pop
xchg
out
xor
imul
out
sbb
pusha
mov
adc
in
mov
test
cmpsb
iret
fidivrl
inc
divb
mov
les
mov
mov
pop
das
sub
cld
jns
and
sbb
rcrb
icebp
cmp
pushf
xor
fimuls
mov
push
les
sbb
lods
jne
shl
ljmp
test
push
push
sbb
nop
data16
fsubs
and
jmp
jecxz
aad
daa
push
sbbb
loop
push
data16
decl
std
or
icebp
cmp
fildl
add
ljmp
leave
and
fidivl
mov
lods
stos
sbb
inc
sub
cmp
or
or
iret
in
pusha
jp
sbbl
popf
and
add
lock
mov
lret
cmp
std
out
cmp
mov
cli
inc
dec
and
and
sbb
mov
int3
mov
sarb
leave
mov
sbb
jae
icebp
cli
or
sbbb
fcomps
inc
and
and
dec
jb
xchg
fisubrl
repz
cmp
mov
push
sub
je
div
xor
loope
sub
cmc
push
leave
ja
jbe
cwtl
idivb
or
cmpsl
sbb
adc
out
test
inc
out
mov
js
out
push
dec
pop
push
pop
addr16
pop
mov
ljmp
fistl
push
push
mov
gs
xor
into
mov
push
jno
insb
xchg
mov
and
inc
rorb
out
fnstsw
lahf
imul
push
iret
scas
xchg
and
jne
dec
jp
es
movsl
sub
cltd
cltd
push
sahf
mov
int3
loopne
gs
ds
mov
jg
xchg
data16
xchg
push
rcpps
pop
hlt
cmpsb
sbb
addb
lcall
das
inc
stos
xchg
lock
cli
push
pop
push
push
stos
jl
push
xlat
xor
add
or
adc
cmp
inc
cli
mul
sbb
arpl
add
subb
pop
ds
cmp
loop
pop
test
rcrb
push
loop
inc
mov
test
jecxz
pusha
add
xor
xchg
int
fcomi
data16
inc
sbb
xchg
mov
ss
xchg
ljmp
jp
mov
mov
je
pusha
out
mov
scas
loop
mov
push
sbb
xlat
imul
dec
jae
sub
mov
xchg
mov
icebp
mov
adc
idivl
push
repnz
hlt
pop
jge
add
dec
pop
shll
mov
mov
push
dec
jge
or
addl
adc
aas
cltd
popa
xchg
jb
enter
clc
sbb
loope
jp
cmp
sbb
stos
lcall
mov
aas
pop
in
hlt
in
and
sti
mov
pop
jns
or
cmpsb
cmp
xchg
push
jae
pop
idivl
scas
js
pop
stos
rol
dec
mov
test
mov
xchg
pushf
or
mov
pushf
fidivl
cld
cld
mov
insb
cmpsl
mov
pop
fildll
test
mov
enter
cwtl
mov
fiadds
decl
pop
or
test
add
adc
hlt
and
xchg
cmp
push
cmp
mov
cmp
inc
test
inc
popf
xor
or
inc
test
lock
inc
pushf
iret
and
cmpsb
dec
push
dec
orb
mov
adc
adc
cmp
andl
sbb
fistl
xorb
and
mov
rcl
enter
mov
ficomps
jecxz
subb
sub
pop
jns
test
out
outsb
pop
inc
sbb
dec
fisttpl
fisttpl
xchg
nop
mov
jge
dec
das
div
cltd
mov
mov
jns
stos
in
add
jge
shrb
cmp
add
add
add
add
add
into
psrld
rcr
fistpll
push
addl
add
mov
icebp
lret
sbb
adc
daa
imul
push
cmp
add
cmpsb
push
xchg
gs
lock
cmp
aad
iret
jno
cmpsb
xchg
pop
and
xchg
jmp
in
sbb
cmp
cmp
jg
or
adc
ja
je
popf
addl
in
lahf
popa
mov
repz
mov
jmp
inc
lret
lcall
rcrb
mov
mov
in
xchg
and
jp
jecxz
ljmp
jge
repnz
in
lds
cmp
mov
lret
repz
mov
inc
inc
lahf
mov
mov
mov
fbld
jbe
pop
mov
das
jo
and
jge
cmp
out
les
xor
test
movsb
xchg
stos
and
ds
sub
dec
pop
lret
ffreep
rolb
mov
inc
clc
and
mov
loope
mov
rorl
out
les
push
or
test
push
cmpsl
leave
out
lret
jo
shr
jecxz
pop
dec
mov
iret
out
mull
test
out
cmpl
popf
or
sbb
inc
pop
xchg
imul
add
mov
arpl
in
and
ret
icebp
push
jb
push
int3
jae
jnp
stos
andb
pop
push
dec
fistps
cmp
lods
lea
into
daa
xor
push
insl
xchg
xchg
mov
imul
imul
adc
add
jae
mov
mov
xchg
and
flds
shll
out
mov
cltd
into
jl
sar
and
sub
lahf
addr16
add
mov
insl
fbld
adcb
daa
dec
scas
fiaddl
test
pop
nop
rorb
mov
inc
pop
cmpsb
cwtl
and
shrl
mov
bound
add
push
lret
imul
pushf
icebp
subl
ljmp
lods
loop
js
je
cltd
inc
mov
mov
aas
cld
leave
inc
test
std
inc
sub
or
fs
test
aad
sub
inc
imul
daa
adc
pop
test
adc
sbb
mov
je
rcrl
jmp
mov
insb
sbb
arpl
into
jge
aaa
inc
sub
sarl
jmp
xor
mov
int
adc
sbbb
popa
cmc
pop
imul
xchg
jne
mov
stos
push
mov
and
pop
testl
test
push
iret
ds
dec
push
nop
mov
mov
stc
insb
push
jl
cmpsb
popf
cmc
mov
imul
xchg
mov
fs
sbb
cmp
mov
dec
hlt
lds
fdivs
add
das
mov
out
add
jmp
sbb
sub
shl
and
addr16
pop
aaa
pop
jp
mov
fs
pop
jnp
cwtl
xchg
sub
push
inc
push
fs
lret
xchg
pop
pop
push
sbb
push
and
and
or
mov
flds
movsl
data16
inc
xchg
sub
lcall
mov
xchg
faddl
cltd
movhps
jno
leave
add
clc
cli
and
sub
shl
jecxz
sahf
enter
and
cwtl
and
mov
add
add
add
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
jecxz
add
sub
and
insl
jno
mov
daa
cltd
nop
enter
cmc
or
nop
jbe
mov
xchg
inc
dec
push
aam
aas
push
or
add
adc
dec
test
and
dec
jne
xor
rcr
loop
cmpl
cmp
lock
push
push
aaa
stos
push
daa
insb
hlt
outsl
bound
outsl
or
stos
pop
cmp
mov
adc
adc
xchg
movsb
inc
int
fnstcw
xchg
sbb
xchg
stos
imul
sbb
negb
dec
mov
cld
jmp
xchg
xor
cmp
mov
dec
and
out
sbb
jne
lahf
pushf
inc
clc
sbb
lods
mov
es
jecxz
arpl
insl
inc
js
jo
leave
sahf
mov
jmp
adc
push
jecxz
sbb
mov
je
and
data16
loope
aaa
or
add
arpl
addr16
sbb
sarl
adc
adc
ljmp
lods
xchg
fabs
jne
call
popa
push
shll
paddd
jo
mov
movsb
ret
dec
mov
stos
cmpl
ljmp
vpmadcsswd
int3
add
daa
cmpsb
xchg
es
add
xchg
pop
jl
mov
ds
gs
movsb
xor
mov
mov
or
mov
repz
shll
cs
cs
stos
rorb
in
mov
mov
mov
test
out
cmpsb
std
adc
push
enter
fdivs
call
addb
dec
ss
sub
popa
xchg
xor
in
icebp
insb
xor
xchg
push
xchg
rorl
mov
xchg
jae
xchg
mov
jg
aam
adc
mov
xchg
call
fmul
ret
jmp
lret
xchg
outsb
fsubs
das
stos
pop
fadd
je
test
aad
hlt
rorl
xor
enter
xlat
outsl
iret
lea
push
adc
lock
inc
or
data16
je
nop
mov
dec
test
push
cld
cmp
in
and
leave
in
mov
xlat
cli
outsl
aaa
cmp
ret
insb
mov
js
aam
mov
icebp
lods
imul
ss
cmp
jno
adc
sbb
add
iret
mov
adc
popf
sbb
lds
mov
subb
test
insb
inc
push
imul
fidivs
fwait
push
push
dec
jecxz
adc
adc
aad
push
movsl
or
or
cld
push
lcall
data16
fwait
mov
dec
mov
mov
mov
movsl
gs
je
inc
xor
mov
mov
jb
push
out
mov
rcl
jg
sub
lods
add
not
test
or
jl
pop
cmp
lods
mov
enter
xchg
mov
test
movsb
lahf
je
xor
xor
push
cmp
xor
mov
cmpsb
lcall
dec
pop
xlat
cmp
repz
push
fdivp
fcomip
mov
popf
fidivrl
int
mov
das
xor
out
loop
sbb
push
xor
jae
bound
sbb
dec
xchg
roll
jle
jnp
xor
je
xchg
incb
out
xor
inc
out
insl
aas
or
andb
add
inc
gs
jg
mov
rcrb
mov
xlat
out
add
dec
sbb
push
dec
test
inc
xchg
mov
push
mov
insl
mov
pusha
mov
sub
xchg
mov
inc
adc
add
sub
pusha
or
dec
dec
mov
mov
push
inc
out
sahf
fisubl
lret
inc
push
shlb
add
xchg
fnstcw
cmp
sub
add
sarb
int3
mov
or
xor
sub
and
outsb
pop
and
jns
out
xchg
ja
inc
movsl
adc
pop
mov
inc
mov
js,pt
mov
cltd
push
push
mov
out
sar
xchg
bound
jge
das
xor
mov
xor
mov
iret
mov
jns
test
mov
cwtl
adc
in
mov
loopne
add
loope
loope
and
lahf
mov
lods
nop
fwait
scas
loop
adc
cs
stos
cli
call
or
cld
sub
mov
mov
mov
arpl
mov
cli
call
pop
xchg
push
cmp
adc
cmp
sarl
sbb
fisubs
push
pop
mov
push
xchg
xor
mov
lahf
jmp
and
stos
daa
sub
push
xor
cmp
outsl
dec
stc
outsl
xchg
sarb
sahf
sub
or
lret
push
add
arpl
push
pop
sarb
enter
adc
fs
scas
js
cmp
out
or
mov
dec
out
daa
dec
lds
add
out
cs
dec
shlb
cmp
out
fimull
rorl
push
jmp
or
xor
dec
es
jp
xchg
jmp
add
mov
std
mov
mov
js
cmp
jl
jmp
push
pop
dec
sub
aaa
ret
dec
add
pop
add
xor
shlb
pop
ljmp
test
pop
ljmp
xlat
jbe
xorb
lods
jle
push
and
xchg
loop
and
inc
dec
jecxz
cmp
aaa
outsb
stos
xchg
jo
jecxz
mov
into
jmp
xchg
mov
rcl
add
jg
cwtl
jnp
jecxz
push
outsb
jge
fisubs
sti
push
sbb
mov
fdecstp
cld
inc
pusha
loope
enter
add
jne
ja
repz
or
cmp
add
sbb
int
mov
ljmp
movl
aam
mov
stc
add
ret
aaa
add
divb
int
push
mov
fxam
movsl
lods
mov
cmp
adcb
sbb
les
sahf
out
push
hlt
movsb
or
xchg
lods
dec
jl
pop
movsb
xor
cmp
test
lahf
sbb
fucomi
es
mov
test
push
push
rorl
mov
sbb
cmp
repz
mov
jl
mov
adc
mov
nop
dec
in
adc
rorl
repz
xchg
cltd
fs
lahf
adcl
lock
cld
cld
ljmp
mov
sbb
xchg
aas
imul
into
imul
jge
pop
ret
es
jle
scas
xor
mov
or
pop
imul
shl
add
dec
and
sub
cmpb
mov
add
add
add
add
inc
xchg
dec
xchg
mov
rclb
lods
ljmp
negb
mov
jb
sahf
adc
cmp
pop
mov
stos
cmpsl
stos
pop
clc
push
das
add
sbb
xor
imul
jo
cmpsb
test
xor
pop
js
ljmp
loop
sti
fsubrs
mov
fsubrp
negl
scas
jecxz
mov
sbb
fmull
adc
xchg
sbb
mov
pop
repz
jp
mov
jb
mov
leave
and
mov
mov
sahf
dec
gs
mov
jg
nop
pop
pop
xchg
gs
pusha
sarb
pop
mov
ret
xor
xchg
dec
xor
aam
push
jl
xor
cmp
idivb
test
adc
pop
pop
mov
out
mov
push
mov
jae
shlb
and
cmp
sti
lcall
cltd
out
dec
orl
clc
jp
inc
xor
mov
popf
test
stos
push
dec
lea
adc
nop
test
and
push
fwait
inc
imul
lds
cmp
jle
lret
sti
pop
push
lods
xchg
adc
sub
ret
pop
shlb
mov
cmp
aas
xchg
repz
int3
add
jmp
pushf
ljmp
and
ret
push
pop
cli
jns
mov
mov
pop
sub
or
fidivs
pop
icebp
inc
xor
nop
into
and
xor
inc
mov
dec
sub
jp
add
jl
fistps
sub
cmp
cmovle
jne
and
clc
test
repz
mov
aas
or
subb
pusha
data16
cmp
sub
push
and
or
rorl
or
ds
xor
jbe
jne
or
ljmp
adc
or
into
sbb
cmp
and
mov
in
mov
add
lock
adc
push
hlt
push
adc
imul
or
aam
pop
test
jp
movsl
cmpsl
loopne
jecxz
jge
mov
movsl
inc
push
bound
jne
pop
hlt
mov
ja
push
push
in
bound
mov
mov
int
push
xor
insl
sub
push
repz
shll
into
in
out
add
sti
lods
pop
cwtl
pushf
adc
jb
and
fucomp
lahf
sub
mov
popa
es
lret
add
cmp
push
add
nop
mov
out
insl
enter
jnp
jnp
mov
test
stc
dec
int3
shr
mov
fnstcw
jae
xchg
cmp
inc
dec
push
imul
iret
loope
push
mov
test
ficoms
adc
push
fs
movsl
dec
shrb
jecxz
mov
inc
add
xchg
rclb
xor
sub
jne
mov
dec
inc
inc
inc
inc
in
or
ror
xchg
sarl
push
inc
fwait
sbb
inc
push
stos
sbb
and
xchg
outsl
jl
fbstp
push
and
sbb
insl
or
xchg
in
sbb
fnstsw
andb
lret
and
dec
test
inc
xor
outsb
xchg
call
movb
xor
ret
mov
mov
lret
mov
adc
subl
dec
sub
add
add
add
sub
and
jg
push
adc
insb
mov
scas
add
add
cwtl
fldenv
adc
orb
mov
lea
aas
jbe
mov
std
push
data16
jbe
sub
mov
aas
addl
inc
push
sub
cld
inc
or
clc
sub
js
mov
dec
mov
jmp
adc
cli
mov
mov
scas
cltd
mov
loop
ja
push
scas
lock
xor
pop
xor
hlt
iret
or
ret
loopne
addr16
bound
push
jb
movsb
nop
and
fcoms
inc
dec
jae
cltd
outsl
or
iret
and
pop
mov
adc
es
sub
mov
jae
jo
insb
scas
sub
inc
jle
inc
icebp
iret
mov
pop
pusha
xlat
movsb
lcall
stos
test
xchg
dec
arpl
je
fistl
int
cmp
inc
cmp
mov
call
adc
inc
scas
mov
stc
pop
jle
mov
lret
cmp
jo
inc
sti
fwait
out
data16
aad
xor
sbb
add
iret
push
out
sub
sbb
xchg
push
jg
movsl
dec
mov
mov
jne
daa
lea
mov
movlps
jle
hlt
pop
lds
shll
push
and
xchg
pop
jns
push
and
stos
mov
insb
or
and
add
sbb
jl
ficoms
fcompl
nop
test
loop
sbb
mov
out
idiv
es
lods
sbb
data16
xor
stc
dec
outsb
mov
arpl
ffreep
jne
sbb
sbb
movb
mov
divb
int
hlt
movsb
cmc
sub
push
mov
adc
inc
mov
aas
and
andl
call
jns
int
mov
repnz
mov
inc
xchg
mov
pusha
rol
sub
lds
fdivrs
sbb
outsl
inc
call
inc
jne
dec
icebp
and
clc
mov
aaa
sub
push
inc
xor
adc
xchg
push
add
xchg
xlat
push
icebp
in
mov
leave
push
dec
fisubs
adc
dec
cs
sbb
xor
adc
iret
hlt
out
dec
adc
out
xor
fimuls
out
ds
sar
fcomi
scas
pusha
xchg
loope
cwtl
mov
mov
sbb
shll
iret
mov
jb
sub
pop
pop
inc
or
test
inc
jno
bound
dec
cmp
out
mov
cli
inc
jl
fs
pop
clc
sub
in
popf
subl
in
loope
xchg
packssdw
cs
out
gs
outsl
ret
jns
pop
fbld
jmp
xor
adc
mov
aam
int3
outsb
jne
jnp
mov
add
jae
and
gs
push
out
sti
fistpl
int
jno
xor
mov
test
mov
movsb
out
dec
stos
xor
iret
add
repz
cmp
jns
inc
pop
mov
mov
sbb
inc
std
dec
fadds
insb
test
xor
pop
add
inc
sbb
xchg
test
xor
push
push
sbbb
aas
rcrb
pushf
jno
push
mov
lds
lcall
insl
roll
stos
and
or
clc
insb
loopne
dec
mov
add
loopne
cmp
mov
aaa
mov
or
add
scas
add
add
mov
fwait
jmp
jecxz
mov
push
adc
shlb
or
sbb
inc
shrb
adc
test
inc
xor
cld
popf
js,pt
xchg
dec
cmc
xor
dec
test
lret
sbb
lcall
movsl
cmp
aas
pop
insb
sub
push
mov
dec
subb
outsb
bound
pop
and
xor
out
cwtl
mov
call
adc
lock
je
pop
pushf
push
setle
aad
xchg
add
test
lds
and
adc
enter
cmpb
mov
sti
cmpsl
xchg
imul
push
arpl
imul
pop
pusha
imul
shlb
push
inc
sub
mov
rolb
test
xor
jno
and
in
test
mov
mov
out
daa
andb
test
and
sbb
cltd
cltd
dec
push
inc
cmp
pop
test
out
push
aaa
lret
xor
inc
loopne
loop
divl
mov
push
clc
jg
jl
jle
loop
cmc
mov
sbb
mov
js
xor
push
jp
incb
pusha
lcall
roll
mov
addr16
movsl
dec
xor
gs
fiaddl
faddl
out
mov
pusha
dec
out
add
and
add
mov
pop
cmp
fcoml
nop
pop
sbb
dec
add
push
shlb
aad
ds
ror
fcompl
or
data16
jno
pop
mov
and
flds
rolb
xor
pop
arpl
inc
in
cmpsl
inc
out
fisubrl
pop
adc
xchg
or
call
clc
int3
ja
scas
lock
dec
js
cli
out
mov
inc
fsts
jno
mov
out
int3
adc
andl
pop
in
je
push
test
lahf
mov
add
gs
ljmp
dec
jmp
mov
dec
dec
sbb
push
jmp
mov
mov
xchg
jb
enter
fildll
fsubrs
fistpll
and
out
daa
or
daa
inc
int3
call
mov
mov
test
jnp
pop
jne
and
cmp
stc
imul
xchg
push
cmp
int3
push
mov
ja
inc
in
cwtl
rol
and
sbb
daa
test
out
divl
pop
mov
and
imul
leave
push
mov
mov
or
ret
stc
int
int
mov
ret
jo
aam
ja
ror
lret
imul
pop
and
or
mov
dec
mov
sbb
push
dec
sub
adc
jl
mov
mov
or
push
dec
pop
xchg
adc
or
cmpsb
push
das
mov
frstor
pop
addr16
lret
stos
pop
cwtl
ja
dec
push
push
mov
jb
inc
aam
sub
jne
cs
mov
test
dec
jb
loopne
jns
mov
or
dec
cwtl
iret
cwtl
inc
aam
fdivs
jecxz
xchg
pop
add
inc
push
jae
ret
cld
jge
fs
xor
sbb
inc
arpl
mov
dec
cs
add
add
add
mov
fbstp
mov
mov
add
add
xor
clc
cltd
hlt
iret
cld
arpl
cwtl
mov
mov
sbb
ljmp
add
adcl
out
jns
cmp
mov
xchg
insb
stc
add
outsb
lret
cli
and
jnp
dec
mov
leave
pusha
or
dec
jnp
xlat
jbe
out
lret
scas
cmp
aad
gs
ror
adc
and
pusha
xor
aam
push
sarb
and
sub
daa
mov
jp
dec
stc
dec
filds
add
add
std
add
xchg
inc
mov
scas
mov
in
jne
push
push
push
loop
cs
inc
iret
test
sub
fwait
and
xchg
int
inc
sub
cwtl
icebp
mov
sbb
fdivl
push
cmp
lock
inc
cld
xchg
add
xchg
inc
jmp
lock
push
and
imul
cmp
adc
mov
iret
mov
pusha
scas
inc
insb
outsb
jns
lds
xor
mov
pushf
fidivrl
jae
ret
test
inc
test
xor
mov
pop
repnz
dec
push
mov
shlb
orb
xchg
and
cmp
shll
mov
pushf
mov
pop
sbb
sti
pop
lods
repz
pop
idiv
mov
call
push
stos
filds
icebp
ret
push
sbb
mov
xchg
gs
adc
jno
ficoml
jnp
imul
push
adc
mov
in
imul
pop
xor
jne
arpl
fs
cmp
pavgw
ds
push
repnz
inc
ret
cmpsl
add
jno
pop
xchg
dec
xorb
insb
adc
in
stos
dec
or
pop
clc
out
rcrb
and
pop
and
add
cmp
incb
xchg
iret
lods
push
push
gs
cmp
adc
stos
mov
stos
ljmp
xchg
pop
and
pop
lret
pushf
ds
adc
pop
addb
test
imul
jo
int
icebp
test
mov
test
mov
xchg
stos
or
sub
out
mov
mov
popf
sbb
xor
in
adc
add
frstor
push
lcall
inc
mov
fs
adc
jecxz
mov
push
out
cmp
cmpsl
cmp
lea
lahf
sti
dec
arpl
mov
xor
clc
jbe
repnz
cmp
mov
pop
mov
xchg
enter
sbb
xlat
lcall
mov
push
and
out
stos
pushf
jg
pop
lahf
outsb
add
xchg
iret
mov
sub
push
sbb
aas
mov
pusha
jmp
lods
jmp
and
jns
js
dec
imul
mov
inc
int
push
lahf
xchg
ds
add
and
dec
sbb
int
lods
xor
mov
pop
xchg
cs
mov
out
fwait
xchg
push
aad
int
mov
cld
sbb
push
mov
pusha
dec
ret
pop
cld
fldt
xor
nop
or
sarb
fstl
lods
push
outsb
push
imul
in
dec
