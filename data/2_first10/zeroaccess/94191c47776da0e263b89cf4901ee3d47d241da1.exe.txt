push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
jmp
out
add
outsb
sbbl
hlt
stos
push
jne
bound
lret
bound
sub
pop
add
pop
jne
xchg
dec
jb
jno
iret
lret
hlt
inc
aam
cltd
add
pop
jno
mov
daa
mov
shrb
adc
and
dec
fbstp
mov
jo
dec
pushf
pop
jae
sti
push
push
pop
cmp
add
push
jge
mov
mov
stc
inc
popf
xchg
in
fstpl
jg
cmp
mov
dec
loop
inc
orb
inc
pop
mov
xor
sbb
inc
add
dec
nop
xchg
dec
mov
pop
les
sub
vpsubusw
mov
test
bound
in
push
subl
imul
add
test
jmp
cmp
mov
je
fnstenv
dec
mov
or
add
lds
jmp
test
xchg
jnp
test
scas
fidivrs
xchg
rorl
sbb
cltd
push
test
les
cmpsb
les
imul
push
cmp
dec
mov
popa
or
adc
scas
loopne
cld
sahf
lods
jo
sub
fisttps
and
in
pop
xlat
inc
iret
cmpsb
pslld
adc
fdivs
das
pop
sub
das
push
pop
and
add
in
mov
xor
mov
push
std
imul
push
cmpsl
or
ret
out
pop
or
popf
popa
mov
add
psraw
xchg
mov
dec
xor
rolb
pusha
icebp
and
lret
cld
test
js
in
jno
adc
or
out
push
rolb
pop
jl
inc
mov
pop
lcall
test
pop
gs
es
lds
xor
lds
jae
ror
subb
fdivp
out
cld
aam
or
testb
sahf
test
dec
xor
repnz
repz
cmp
pop
imul
ret
dec
int
psubb
cli
xor
ja
xchg
sub
cmovnp
ljmp
jp
cmp
out
fiaddl
mov
fmull
sbb
mov
stos
xchg
inc
popf
cs
outsb
movsl
push
loope
sbb
dec
fcmovb
imul
push
push
sbb
jns
iret
adc
lods
enter
iret
lock
movsb
pop
add
das
cmp
cmp
arpl
mov
adc
cwtl
repnz
hlt
fdiv
mov
lods
insl
adc
xchg
and
jb
mov
shll
daa
push
stc
lock
cmpl
adc
jg
insb
lods
push
mov
daa
dec
pop
add
enter
rolb
mov
in
pop
push
xlat
cld
sbb
orps
sbbb
and
stos
xchg
lds
pusha
in
stos
pop
add
lret
jb
outsb
aas
ret
push
pop
enter
insl
push
mov
pop
cmp
out
lret
shrb
stc
shlb
enter
lea
jns
cmpb
xor
rcrl
sbb
cld
arpl
rcl
mov
dec
pushl
or
xchg
mov
dec
mov
pop
ljmp
xor
in
and
mov
xor
push
cmpsl
scas
in
cmp
pop
out
bnd
incb
div
gs
adc
push
movsb
and
fisttpl
negb
imul
mov
xor
cmp
sti
mov
lds
test
repz
inc
mov
sbb
mov
dec
daa
pop
je
mov
add
stos
jmp
dec
xlat
xchg
and
pop
lods
mov
adc
inc
movb
mov
pusha
sbb
pop
add
subl
push
mov
ljmp
mov
fstps
inc
das
inc
gs
cli
add
mov
sub
cmp
pop
out
nop
or
mov
xchg
add
inc
out
leave
iret
ss
sub
xor
lods
les
sub
add
add
or
push
sti
fmuls
addb
add
pushf
aas
push
xchg
jg
sub
stos
ret
js
mov
pusha
or
push
xchg
xor
inc
lock
es
popa
jl
pop
inc
ret
inc
cli
popf
rcrb
adc
mov
xchg
sub
test
lcall
xchg
stos
imul
mov
fimuls
in
lret
inc
sub
jge
or
pminub
or
sub
imul
or
adc
enter
jmp
add
jbe
push
cmpsb
fidivs
dec
push
pushf
pop
mov
adc
sti
jno
jae
popf
or
addr16
adc
mov
daa
jmp
cmpsb
aaa
mov
inc
pop
cltd
or
js
sbb
cmp
rcr
fists
or
je
ds
movsb
xor
mov
and
mov
popa
rcrb
or
repnz
sub
cmpsl
cmpsb
inc
fdiv
out
mov
test
rcl
lock
or
insb
movsl
dec
pop
or
cmp
pop
enter
pop
and
outsl
push
cwtl
or
push
xor
in
lods
and
rclb
lretw
mov
arpl
pop
loop
add
xor
sahf
rcrl
dec
push
jb
mov
jne
or
das
bnd
sbb
xor
sub
addr16
lret
inc
inc
mov
test
scas
in
sub
inc
inc
xor
dec
sub
bound
cld
add
sbb
add
aaa
xorl
xor
divb
out
jl
jle
cwtl
mov
cld
test
and
mov
push
push
cmpsb
shlb
outsb
pop
or
dec
cld
pushf
icebp
in
std
out
movsb
adc
fisubl
and
test
inc
iret
cmp
loope
pop
mov
jnp
pop
jmp
sahf
je
lea
mov
popf
data16
xchg
scas
std
pop
jbe
jg
mov
out
cltd
xor
xor
push
sub
repnz
push
daa
sahf
movl
nop
out
sahf
and
addr16
inc
fwait
movsb
fldl2t
xchg
iret
jmp
fnstenv
cmpsb
add
xor
ljmp
cmpl
add
jae
shl
inc
in
aas
inc
jl
push
push
dec
cltd
andb
in
int
pop
cwtl
cld
and
or
stc
push
pop
leave
mov
mov
xchg
in
push
data16
mov
xchg
jbe
pop
mov
pop
xor
test
xchg
mov
mov
push
ljmp
and
mov
mov
lcall
je
iret
je
push
pop
push
stos
clc
into
pop
jge
in
jmp
or
fisubrl
cmpsl
shld
sbb
leave
mov
sbb
movswl
imul
add
out
mov
dec
cmp
fldcw
push
je
sbb
mov
cld
mov
adc
adc
test
andb
subb
in
adcl
mov
jge
pushf
iret
jmp
ljmp
aas
xchg
or
mov
dec
xlat
jmp
and
mov
mov
sti
in
mov
outsb
mov
outsl
arpl
daa
repz
mov
inc
mov
fs
test
jb
lret
enter
hlt
sub
loop
movsl
and
push
ss
pop
test
lcall
test
pop
adc
push
fisubl
add
mov
mov
cltd
test
pop
inc
sub
jns
imul
cld
adc
shl
es
jo
add
imul
fsts
jb
aaa
mov
xor
arpl
filds
stc
pop
xchg
push
ret
les
pop
outsb
push
pop
test
lds
and
fisttpl
ss
outsb
sbb
rclb
mov
adcl
clc
xor
lret
imul
pop
les
sbb
movsl
sbb
inc
inc
or
or
push
inc
or
inc
test
and
test
mov
sub
insb
sub
lret
cli
scas
sbb
mov
bound
xor
pusha
scas
addr16
dec
jp
add
movsb
xor
aas
push
das
and
data16
pop
jo
ja
push
jp
adc
lret
stc
cmpsb
mov
cwtl
cltd
add
dec
mov
leave
sub
push
push
leave
insl
cmp
sbb
bswap
xchg
movsl
cmp
inc
ret
pop
sbb
cmc
add
jle
jecxz
pop
bound
and
adc
mov
pushf
or
push
scas
je
aaa
test
xchg
sbb
adc
ret
push
call
outsl
sbb
or
addr16
sub
orl
or
jge
test
mov
fiadds
jg
inc
xlat
jne
stos
inc
or
popf
js
dec
xlat
mov
lret
or
stc
pop
add
xchg
popf
rorb
or
arpl
mov
mov
jns
in
adc
test
ret
cmc
and
ss
add
push
jmp
out
inc
jecxz
inc
test
out
xchg
js
pop
push
pop
jecxz
mov
inc
outsl
icebp
int
xlat
repz
movsl
jle
ja
pop
cmp
sahf
mov
stc
xchg
dec
adc
adc
repnz
mov
xchg
mov
outsb
stc
daa
jmp
add
dec
int
jb
mov
enter
xchg
fildll
fidivrs
imulb
hlt
ss
call
cmp
fiaddl
subb
add
mov
add
sub
fs
dec
mov
pop
cmpsl
or
mov
xor
or
call
sti
int
pushf
push
repnz
das
add
stos
rcl
xor
ljmp
jle
cmpsb
fdivrs
test
icebp
cmpsb
sbb
pop
jp
cmp
xchg
mov
and
gs
scas
cld
es
dec
loopne
cmpl
outsb
sbb
jmp
imul
or
fildl
rorb
xlat
aam
sbb
sarb
pop
lea
cmpsb
lahf
out
repnz
inc
mov
std
mov
pushf
mov
pop
mov
or
xchg
mov
inc
ret
fbld
push
xlat
js
pop
cmp
dec
jecxz
lods
and
jmp
adc
xchg
jb
in
mov
push
or
test
ja
ja
imul
das
movsb
pop
inc
loope
sbb
or
cmp
sarb
or
lock
sbb
scas
data16
inc
aam
fiadds
sti
rolb
inc
icebp
mov
popf
ja
mov
dec
ret
lret
test
and
fldenv
pop
mov
shrb
xlat
addr16
pop
add
sub
subl
mov
jno
pop
jge
mov
sbb
push
test
rorb
mov
mov
mov
and
dec
sbb
xchg
ficompl
pop
lret
sahf
lret
in
jae
aaa
and
push
cmpl
inc
or
loopne
cmpl
adc
cli
mov
sbb
out
aam
ret
and
in
je
stos
mov
push
jo
int
jecxz
sbb
adc
daa
sbb
addr16
ds
roll
in
dec
sub
mov
aaa
cmpsb
sti
adc
out
fs
push
decb
into
stos
dec
push
pushf
mov
add
icebp
mov
mov
ja
xchg
adc
sub
jbe
call
xchg
push
fptan
pop
inc
loop
sarl
lahf
into
pushf
or
dec
jecxz
or
cltd
leave
dec
inc
es
fcomip
test
andl
pop
xchg
pushf
push
mov
aad
and
sbb
test
rcrl
push
test
mov
lcall
xor
add
xchg
outsl
mov
std
mov
sub
pop
mov
pusha
and
ret
in
fimuls
mov
xor
pop
xor
outsl
outsb
hlt
aad
test
mov
mov
push
mov
cwtl
test
enter
cmpsb
mov
sub
fdivrs
sbb
jl
fadd
push
xchg
bound
fwait
ret
sbb
adc
nop
stc
bound
cmp
inc
and
fstps
out
loope
dec
sahf
or
fiadds
sub
test
popa
insl
cltd
rclb
sarb
mov
dec
sub
pusha
mov
or
in
icebp
xchg
loop
dec
sbbb
sub
popl
sub
lcall
daa
mov
cwtl
or
adc
xchg
in
mov
pop
std
in
mov
stc
pop
lock
inc
xchg
dec
jge
jp
int3
or
lret
or
daa
fcomps
cld
add
les
loop
add
xchg
and
stos
jns
aam
sbb
mov
fs
push
shlb
pushaw
lret
insl
push
jnp
sets
mov
sbb
xchg
or
mov
mov
pop
nop
dec
lcall
das
pop
outsb
outsl
adc
mov
mov
repnz
into
jp
je
into
movsl
xchg
ss
daa
push
loop
pop
ret
inc
test
or
mov
insb
flds
push
jl
inc
jmp
push
add
in
lds
bound
xchg
ss
sub
aaa
add
test
inc
lds
inc
xor
vunpckhps
int3
adc
inc
scas
push
jmp
push
cmp
jbe
pop
popa
jecxz
shl
sbb
gs
enter
outsl
jecxz
pushl
sbb
dec
in
es
sub
sbb
dec
fisubs
std
mov
jecxz
mov
aaa
fisubs
or
fsubrs
lock
into
lods
sbb
add
xchg
dec
orb
xlat
xchg
ret
ds
inc
ljmp
pop
inc
pusha
aaa
or
push
dec
inc
ds
insb
mov
ss
push
daa
jg
in
sub
aaa
and
shlb
mov
lods
push
lods
lcall
add
mov
pop
jne
outsl
xchg
cmp
cmp
int3
adc
imul
outsb
mov
shll
pop
or
sub
das
stos
test
mov
and
inc
out
rclb
bound
aam
push
cs
movsl
ja
adc
inc
sbb
lods
cmp
iret
xchg
push
sbb
popa
mov
jl
movsb
cmc
outsb
lods
pop
mov
xor
lock
iret
mov
jg
lcall
ss
mov
jl
movb
dec
pop
ficoml
adc
inc
xchg
gs
jp
cmovnp
jge
ss
pop
icebp
out
adc
test
or
xor
ss
hlt
push
out
faddp
xchg
push
or
adc
xor
mov
and
inc
sbb
inc
xor
fldenv
jmp
fimuls
xchg
jg
popa
sub
push
cmp
pop
xchg
xor
jb
adc
mov
lods
ja
in
push
cmp
inc
cmp
mov
scas
mov
das
xor
test
sub
cwtl
test
mov
mov
data16
push
sbb
jne
jp
cwtl
nop
jmp
mov
xor
loopne
in
jecxz
call
pop
pop
pop
outsb
lret
jnp
mov
pop
jg
jnp
insl
sbb
fwait
push
pop
adc
outsb
adc
mov
stos
pop
dec
popf
sbb
sti
mov
dec
and
mov
int
jae
pop
mov
pop
pop
lcall
mov
pop
adc
mov
push
pop
sbb
test
ja
push
adc
roll
cwtl
test
lods
xor
lock
outsb
inc
fisttpl
mov
arpl
repnz
jae
push
pop
mov
dec
push
insb
leave
jno
cli
out
jnp
lret
dec
xchg
mov
sti
loopne
rolb
or
push
pop
cmp
shlw
mov
xchg
pushf
inc
popf
adc
dec
or
mul
sub
js
dec
pusha
push
fcoms
incl
sub
mov
dec
and
ljmp
dec
adcl
js
pop
and
es
mov
popa
mov
sbb
sahf
mov
push
xchg
insl
loope
iret
push
mov
mov
lods
incl
scas
outsl
fstpt
xchg
mov
mov
xlat
mov
testl
xor
mov
dec
push
mov
or
lea
xchg
add
cltd
push
out
ret
sti
fisttps
xor
push
inc
push
mov
sub
fnstcw
mov
pop
das
xor
les
leave
dec
and
xor
mov
daa
popf
xchg
lock
mov
jb
sub
in
sub
nop
out
mov
cld
push
push
sub
nop
mov
es
test
or
cmpps
in
xchg
push
int
jecxz
mov
mov
xor
popf
mov
fisubl
test
pop
mov
pop
rol
sbb
iret
sub
movsl
int
and
push
repnz
or
adc
mov
std
aaa
pop
push
xchg
fs
jbe
mov
cmp
mov
lods
fisttpll
adc
inc
mov
inc
xor
sarl
orb
sbb
and
xchg
out
in
pop
repz
stos
sub
ret
push
aaa
xor
out
mov
xchg
adc
scas
loope
add
jo
add
push
decl
in
mov
or
adc
and
add
mov
xor
out
sub
es
ds
sbbb
mov
fisubl
add
xorb
lret
xchg
fldt
cli
das
mov
bound
push
lea
jne
test
addr16
lods
dec
and
js
dec
xor
pop
mov
jno
lock
mov
adc
dec
xor
inc
cltd
call
fiaddl
inc
xchg
lock
movsl
lock
xor
add
ja
in
call
push
cld
adc
adc
dec
clc
jp
jp
in
mov
inc
jmp
mov
lods
out
mov
xchg
jb
adc
jne
bound
insb
shrl
pop
cmpsl
addr16
out
mov
ss
mov
jb
fbstp
jns
pop
xchg
jle
push
sub
das
les
fsubl
xchg
dec
mov
add
and
fwait
daa
nop
mov
cmp
mov
imul
mov
sbb
sub
repz
jmp
in
push
out
enter
sub
sbb
xor
mov
push
mov
addl
xchg
add
dec
test
xlat
mov
add
jg
sub
or
fsubrp
adc
add
lcall
cs
jmp
mov
addl
add
dec
lcall
test
inc
lods
and
aas
fistpll
xchg
push
das
jno
jbe
out
lret
pop
inc
lds
pop
mov
cltd
sub
leave
inc
loop
or
aaa
pushl
cmpsl
mov
cmpsl
int
shlb
jno
sub
push
mov
cmp
rcrb
fwait
jecxz
pop
out
mov
lods
xchg
and
cmp
jo
es
int3
cmc
daa
cmp
dec
push
enter
leave
pop
inc
mov
sbb
pop
xchg
jecxz
mov
rorl
ficomps
in
imul
push
adc
outsl
mov
xchg
jne
fsubrl
pop
insl
mov
int
mov
faddl
sub
inc
mov
jbe
cli
dec
fs
mov
pop
jnp
mov
call
jbe
mov
loopne
dec
aaa
in
xchg
jge
dec
leave
sbb
je
push
mov
mov
xor
enter
cmp
je
in
pop
xchg
or
sub
repnz
pop
cwtl
cmp
xor
lock
pop
cmp
out
inc
repz
fistpl
inc
push
inc
mov
loop
and
push
sub
and
pop
ror
out
shll
xchg
out
inc
adc
jl
stos
clc
adc
sbb
popa
cmp
shlb
popa
aaa
js
daa
mov
fcomip
sbb
out
jno
sbb
dec
or
stos
sub
inc
mov
fsubs
mov
pop
sub
cli
pusha
pop
lret
imul
cmp
or
nop
jno
sbb
clc
lret
loop
cmp
bound
outsb
pop
or
xor
jae
mov
jmp
lock
das
xchg
aam
and
in
mov
arpl
and
enter
mov
es
push
pushf
movsl
aad
inc
and
or
adc
popf
movsl
push
push
adcl
ljmp
mov
insl
adc
subb
sbb
xchg
jle
jmp
mov
aaa
test
xorl
subl
jg
xchg
inc
add
sub
add
or
push
ss
mov
out
repz
sbb
or
leave
pop
mov
xchg
adc
jns
sub
jmp
sbb
arpl
push
xor
xchg
xchg
xchg
ficoms
dec
loope
in
jbe
mov
pop
jno
jmp
sbb
and
cmpsb
pop
inc
faddl
sub
or
or
jl
push
xor
daa
or
and
rorl
les
add
in
loope
push
lock
mov
dec
mov
arpl
lcall
sbb
je
cmpsb
sub
sbb
mov
dec
xchg
mov
ljmp
adc
cmc
pop
into
and
mov
xlat
and
inc
mov
ljmp
push
sbb
ds
dec
xchg
push
cmpps
jp
rclb
xchg
dec
adc
loope
repnz
jbe
andb
inc
push
rclb
cwtl
lods
aam
mov
jns
out
push
int3
xchg
mulb
rcr
or
mov
inc
or
test
pop
data16
push
lret
jmp
imul
inc
loope,pn
mov
sbb
inc
jno
jmp
in
xorb
fdivrs
lahf
cmpsl
bound
lods
mov
add
in
inc
cld
test
pop
mov
lods
jmp
pop
dec
fadd
jmp
shlb
daa
push
xor
shr
test
and
inc
xor
sbb
shrl
or
fcmovnu
nop
pop
xchg
pop
lea
adc
out
cwtl
popa
test
sahf
mov
mov
mov
loop
test
pop
sub
mov
out
fnsave
stos
inc
sub
mov
inc
out
xor
add
inc
mov
sbb
sbb
cs
rorl
icebp
or
lret
xor
popf
jno
mov
xor
sbb
pop
ss
std
popl
fildl
xchg
pop
cwtl
sub
cmc
push
pushf
loope
mov
and
mov
hlt
push
dec
inc
repz
cmpl
jns
jle
sbb
pop
addr16
mov
popf
test
cmp
fcomi
popl
cmc
and
fs
pop
adc
lcall
sub
aaa
mov
xlat
out
mov
aaa
sbb
cld
push
or
cmpl
mov
in
sbb
and
inc
addr16
cmpsb
push
imulb
xchg
sbb
xor
add
cmpsl
and
inc
adc
stos
dec
pop
lahf
lock
xor
mov
sub
inc
mov
cmpsl
push
jns
test
jae
lods
lods
jmp
pop
lret
cmp
xor
mov
repnz
sarl
adc
adc
bound
mov
add
xor
mov
dec
cmp
les
and
bound
pop
inc
xor
lcall
xchg
inc
push
out
jae
mov
hlt
inc
fisubrs
xchg
or
jno
xor
inc
mov
adc
adc
data16
push
xlat
int
data16
mov
repz
sbb
dec
out
xor
jge
cli
ror
fbstp
ds
into
inc
xchg
fldcw
jle
add
mov
xchg
shl
push
scas
in
mov
push
push
push
dec
cmp
repz
popf
xor
mov
adc
push
lds
inc
scas
push
add
inc
call
mov
sti
stc
mov
or
call
mov
mov
lea
gs
addl
lret
test
shl
fwait
dec
xor
fcmovne
data16
movsb
or
pop
cmpsb
daa
mov
loop
push
sbb
sahf
fs
xor
ljmp
mov
mov
aaa
push
scas
pop
je
or
mov
jne
cmp
out
push
mov
jge
xor
jle
adc
lock
lock
mov
outsl
jle
jbe
or
pop
mul
stos
jmp
add
mov
cli
dec
pop
jns
stos
or
enter
pushl
ja
jg
jecxz
aaa
xor
add
out
pop
stos
inc
pop
pop
pop
fwait
push
xabort
add
ret
out
or
out
es
mov
or
xchg
jecxz
push
das
je
imul
and
aaa
jo
adc
decb
rorb
jb
mov
jb
dec
cmpsb
add
sbb
mov
ret
xchg
icebp
ljmp
adc
out
out
adc
xor
in
cmovp
addr16
nop
out
add
cmp
fdiv
les
cli
adc
fs
ror
inc
add
rorl
add
mov
fldenv
jnp
sahf
xchg
sub
sub
aaa
mov
aad
ffreep
pop
shrb
or
fdivp
jmp
mov
fchs
jl
jg
push
push
sbb
or
pop
mov
lds
lcall
movsl
mov
mov
sbbb
push
pop
sub
sbb
popa
call
ret
aaa
repnz
sbb
jg
mov
scas
ds
add
call
aaa
push
enter
mov
cmovbe
jmp
sub
mov
add
stos
add
iret
pop
jg
icebp
add
sbb
inc
lods
push
inc
jne
ss
and
scas
xor
ffree
rcrb
and
push
enter
negb
dec
and
pop
xor
shlb
popa
push
je
xchg
mov
lcall
mov
mov
jecxz
xor
mov
clc
push
jge
sbb
ja
shll
xlat
adc
fmulp
mov
insb
pusha
cld
mov
lds
out
popa
lcall
scas
icebp
push
rcl
roll
imul
add
dec
cltd
mov
enter
mov
cltd
sahf
stc
cld
sbb
sarl
jmp
in
inc
js
inc
test
out
cmp
lods
dec
fadds
dec
adc
mov
adc
pop
in
xchg
movsl
test
ljmp
out
mov
shrb
stos
lds
adc
das
das
jne
xchg
push
push
int3
add
test
jg
rcrl
sub
aad
mov
lret
mov
mov
lods
in
in
scas
and
mov
or
cmp
rcrl
repnz
bound
push
xchg
jbe
adc
xor
or
pop
scas
shrb
aaa
sbb
dec
shrb
cmc
ja
xor
in
cli
mov
jl
and
xor
xchg
lods
fsub
ds
cmp
movsl
xor
push
sub
xchg
ficoml
sub
or
cmp
mov
fldt
jmp
mov
andb
fmull
cmp
fwait
mov
pusha
hlt
dec
pop
cs
add
mov
pop
sarb
fdivs
pop
or
xchg
inc
insl
jbe
repz
fsubp
xchg
add
rclb
stos
pop
jno,pt
sar
mov
push
sub
xlat
adc
shl
sbb
popa
ljmp
jmp
add
fdivl
andb
mov
xor
xor
push
lds
fsts
ret
test
sarb
mov
aaa
push
sub
xchg
ret
mov
cpuid
int
cmpsb
fldcw
mov
push
add
in
push
xchg
lea
add
es
orl
push
fldl
out
adc
sbb
movsb
mov
push
xor
mov
sbb
lretw
lret
and
imul
or
cmp
push
ret
push
inc
fstpt
mov
xchg
sahf
cmp
jo
xchg
mov
jmp
push
mov
inc
sti
outsl
or
in
cmc
and
repnz
add
ss
jo
das
xchg
bound
inc
mov
mov
into
push
inc
out
sub
push
add
mov
dec
add
mov
mov
inc
lret
adc
push
jae
mov
aam
pop
or
loop
addr16
test
fstps
fst
in
pop
call
mov
jo
movsl
fisubrs
pop
jb
lret
pusha
pop
mov
enter
xchg
rcrb
jo
movsb
xlat
loop
jmp
pop
in
dec
sbb
push
pop
test
push
dec
sbb
ret
or
push
pushf
pop
cmpsl
and
pop
sti
pop
stos
pusha
int3
push
pop
jo
adc
mov
imulb
pop
sti
or
mov
push
push
clc
clc
mov
repnz
ficoms
loop
rcrb
jge
jns
mov
lods
movsb
les
add
and
ljmp
ds
jno
addb
das
jo
insl
push
cs
mov
fdivl
enter
or
stos
sub
xchg
mov
je
xchg
imul
hlt
adc
notl
in
stos
das
inc
ljmp
loop
mov
dec
aad
out
fimull
and
out
test
mov
in
jae
push
sarl
test
push
pop
ffreep
jg
add
sbb
mov
sbb
xchg
jg
xchg
repnz
aas
js
aas
push
dec
mov
rcrl
pop
xor
inc
in
add
xor
leave
addb
jp
flds
jno
add
lahf
scas
mov
cmpsb
add
jp
inc
dec
add
mov
imul
mov
add
jmp
push
enter
das
dec
push
xchg
xchg
out
or
or
imul
mov
inc
sub
loop
outsl
int3
jne
rcr
mov
fs
and
movl
test
inc
jl
fiadds
mov
rorl
push
push
mov
je
arpl
xchg
cs
ret
inc
movsb
jp
addr16
mov
imul
mov
das
dec
pop
and
jle
mov
jnp
mov
rolb
pop
xchg
dec
inc
dec
loopne
pop
sbb
jbe
sahf
pushf
ret
xlat
push
push
jno
imull
adc
inc
hlt
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
jmp
fnstenv
xchg
gs
test
sbb
xchg
sahf
mov
pop
bound
pop
bound
sarl
inc
xchg
ret
dec
arpl
mov
scas
push
iret
in
insb
loopne
mov
leave
cmp
inc
fnstsw
xlat
jb
sti
mov
push
mov
shll
xchg
jb
inc
subb
loop
inc
in
incb
pop
std
daa
inc
jg
jb
test
dec
xor
mov
stos
cmp
testl
mov
daa
mov
fcompl
out
mov
lcall
cmp
push
cmpsl
adc
psrad
cmp
dec
js
mov
sbb
push
lods
and
push
add
imul
sbb
pop
push
mov
daa
mov
mov
adc
in
inc
cwtl
idivl
adc
pop
adc
mov
leave
or
lretw
icebp
addr16
inc
adc
and
mov
xchg
rcrl
cmp
jo
pop
data16
fcmovne
dec
pusha
adc
jbe
sbbl
jp
mov
or
arpl
pop
hlt
sub
cld
inc
or
jno
out
shrl
pop
clc
fimull
aam
ret
popf
mov
in
shrl
cwtl
aas
mov
mov
cltd
inc
add
xchg
and
fisttps
pusha
int
cmp
inc
aas
ret
andl
jecxz
aas
xor
inc
dec
repnz
cmp
stc
mov
inc
outsb
lcall
clc
xlat
add
fnstsw
in
jp
mov
ja
sbb
scas
adc
xor
jb
fsubp
bound
adc
test
dec
pushf
std
notl
shr
out
fstl
int
pop
scas
dec
ss
out
icebp
pop
cmp
inc
fidivrl
sbbb
repnz
iret
add
in
inc
lock
scas
adc
sar
movsb
test
lcall
aam
sub
cmp
mov
data16
scas
inc
add
jae
cmpsl
imul
inc
cltd
das
and
pop
sti
stos
clc
fisttpl
shrb
xchg
repz
std
sbb
fcomps
jno
sbb
jne
popa
out
shrb
cltd
nop
cli
adc
hlt
ret
sub
out
xor
mov
mov
rorb
outsb
adc
mov
out
xchg
jns
fwait
mov
loop
aad
dec
divb
pop
jp
add
inc
dec
add
xchg
mov
cmp
sub
xlat
jg
mov
mov
arpl
or
repz
out
xor
outsb
bound
push
in
sahf
xor
mov
pop
xchg
arpl
pop
roll
leave
and
mov
fsts
xor
dec
lea
cli
nop
jl
outsb
xchg
ss
fs
dec
cmpsb
imul
aaa
cmpsl
jno
inc
mov
or
push
dec
negl
dec
mov
or
ljmp
shr
shr
push
repz
bound
pop
jne
notl
in
test
sbb
cmp
movsl
or
inc
mov
xor
xchg
ljmp
sbb
cmpl
fsts
addr16
dec
arpl
inc
mov
xchg
je
pop
xchg
std
sbb
inc
jecxz
addr16
push
pop
sub
div
or
push
cs
sub
imul
ret
mov
inc
stos
inc
hlt
push
popa
into
xchg
and
xor
repnz
lods
cmpsl
jg
add
cmp
das
out
jmp
lret
inc
repnz
mov
outsb
dec
lods
adc
and
add
iret
fs
int3
lods
push
aas
push
neg
mov
in
mov
out
sub
lret
stos
cmpsb
cmp
or
lds
lret
inc
mov
leave
cwtl
data16
addr16
mov
ds
push
idivl
sbb
scas
dec
xor
pop
sbb
push
out
cmpsb
lock
fistps
xlat
and
xchg
sub
dec
or
mov
cs
cmc
int
fiadds
aad
lcall
mov
xchg
out
loop
stc
push
adc
das
mov
repnz
test
jnp
xor
xchg
popa
jns
mov
xor
shrl
dec
add
push
sbb
cld
les
mov
push
sbb
cmp
inc
adc
adcl
sub
jecxz
outsl
xchg
movsb
adc
mov
dec
jge
lods
fucomip
cmp
push
jbe
std
dec
sbb
aas
out
push
loopne
pop
popf
sub
push
inc
in
sub
aad
adc
jnp
out
fnstsw
imul
mov
mov
mov
cwtl
xor
negl
push
ficomps
lahf
inc
adc
dec
cmp
test
push
xchg
fcomps
xor
out
aaa
fs
mov
mov
xor
shlb
cs
push
icebp
inc
inc
push
sub
inc
dec
in
in
cmc
aaa
push
mov
fwait
jl
mov
dec
pusha
push
dec
inc
popf
xchg
test
jmp
jo
iret
pop
mov
add
xor
and
pop
fidivl
icebp
cld
push
fcoml
add
outsb
cmp
jns
cmp
loop
negb
mov
mov
jge
popf
push
cmp
data16
push
rorb
lds
inc
pop
std
std
xchg
mov
gs
les
pop
dec
add
lds
imul
scas
add
addr16
push
pop
mov
pop
nop
ljmp
cmp
std
jl
mov
call
pusha
pop
push
pop
adc
jge
icebp
inc
cmp
pusha
test
subl
loop
clc
add
mov
rcrb
insl
cld
mov
gs
jp
lret
in
jl
and
test
cmp
mov
xchg
mov
rolb
jp
push
sti
ret
popa
xchg
dec
test
test
push
roll
sub
xor
add
sbb
lret
nop
or
gs
or
jmp
add
daa
movsl
movsb
ds
fisttpl
leave
mov
adc
pop
sub
dec
cmp
jbe
push
out
addr16
out
fists
outsl
jnp
jge
pushl
cmpsl
popa
push
fists
mov
lock
jmp
je
xchg
out
movsl
repz
push
gs
fld
lds
out
sbb
mov
cltd
jne
inc
lods
in
stc
adc
xlat
add
pop
hlt
clc
push
pop
sbb
cwtl
clc
push
cld
into
adcb
out
jmp
mov
pop
dec
pop
out
fst
ja
xchg
or
mov
lods
push
and
mov
movsl
ss
xor
dec
push
pop
mov
sti
lahf
push
jmp
xor
mov
sub
or
pop
addr16
adc
in
fcmovb
dec
inc
push
pop
call
js
popa
add
xchg
cmp
ss
fdivl
sub
cwtl
push
stc
and
xchg
imul
adc
insl
add
jg
into
jecxz
inc
lcall
and
scas
int
call
sbb
or
push
push
daa
dec
nop
fisubl
inc
mov
push
out
mov
mov
jecxz
xor
push
and
cmc
lret
sub
or
repz
push
or
insl
dec
test
fidivrs
scas
stos
or
pop
add
mov
mov
cmp
sbb
push
popa
shlb
dec
mov
pop
push
scas
insb
adc
mov
or
icebp
rclb
lea
movsb
pop
fptan
adc
jmp
jmp
sbb
loop
aad
icebp
mov
mov
push
loopne
sbb
not
xor
sub
pop
or
roll
cli
lock
fimull
fisttpll
inc
addr16
repnz
test
popf
mov
jno
sbb
aaa
sub
leave
add
add
and
in
cmpsb
shlb
loope
xor
inc
popf
js
popa
aam
sbb
jmp
xor
push
jmp
mov
fcomip
fwait
lock
lahf
xor
xchg
push
pop
jmp
push
push
xor
and
sub
pop
pushf
jno
or
inc
dec
insl
mov
dec
out
sub
adc
inc
loopne
jl
mov
mov
into
enter
mov
fwait
jb
xlat
inc
rclb
or
mov
sub
mov
mov
into
std
movswl
cmc
inc
cmp
or
cmpsb
push
loope,pt
dec
sbb
mov
xor
or
pop
xor
nop
jecxz
add
movsl
sahf
jbe
popl
pop
jmp
sub
fidivl
xchg
insb
mov
data16
clc
xchg
rolb
or
out
roll
out
pop
pop
and
dec
iret
scas
movsl
lock
xor
lcall
scas
pop
scas
push
fucomp
push
pusha
into
jmp
gs
ja
div
pop
mov
iret
bound
out
and
push
pop
mov
adc
gs
out
das
fwait
test
sti
outsl
pop
inc
dec
add
ja
in
pushf
jl
ja
cld
scas
sub
add
pushf
ds
jne
pop
push
je
cmp
shlb
test
xorl
mov
dec
push
sub
jo
mov
not
cmp
cmp
pusha
fldt
pop
sbb
pop
mov
add
or
and
scas
inc
pusha
fwait
out
xchg
sbb
jle
mov
adc
mov
lret
xor
fbstp
stos
mov
mov
cmp
in
hlt
out
or
xorl
dec
fimuls
dec
xor
push
lcall
jg
pop
dec
sbb
push
test
cmp
test
or
mov
add
sub
and
pushf
mov
decb
into
into
sbb
in
std
mov
ret
jbe
sbb
jbe
mov
xor
das
pop
ja
mov
dec
test
push
cmp
test
adc
sti
movsl
cmpsb
iret
jle
sar
aaa
lods
bound
pop
adc
rorl
lfs
andb
cs
push
je
xorb
mov
cmp
cmpsl
adc
xchg
or
cs
jno
mov
sub
iret
push
fwait
xchg
push
dec
xchg
je
cmpsb
rolb
bound
lea
cmp
loope
andb
jecxz
dec
out
ret
mov
xchg
loop
and
xchg
inc
movsl
out
mov
xchg
leave
outsb
xor
adc
out
aad
push
clc
cmpsl
jp
adc
jecxz
xor
xor
xchg
cmp
mov
or
push
push
cmp
divl
pop
inc
ret
cmc
mov
in
idivl
cmp
or
insb
push
aas
jmp
push
movsl
mov
xchg
arpl
imul
sub
dec
jno
add
movsb
test
es
outsb
ljmp
aas
fsubr
cmp
and
scas
jle
mov
push
xor
cmp
sahf
arpl
xor
imul
mov
push
sub
out
loopne
test
inc
jnp
out
mov
shrl
outsb
jnp
adc
and
es
and
aas
leave
push
out
rorl
push
xchg
ljmp
inc
mov
icebp
aas
sbb
cld
and
jo
inc
jl
sub
test
and
ljmp
adc
mov
add
push
mov
das
xlat
xchg
int
push
sub
add
cli
lock
jg
dec
je
cmpsl
loop
rorl
sbb
faddp
icebp
js
aam
add
sahf
and
pop
lcall
xor
scas
ds
shll
clc
lea
pop
shlb
push
or
lods
aad
shr
jns
mov
pop
pop
fs
test
je
je
or
or
fnsave
mov
fs
jns
sbb
out
popf
adc
lret
out
and
sti
cld
ret
test
cmp
in
int
xor
dec
xor
leave
or
adc
pusha
push
jle
addr16
dec
and
push
stc
outsl
gs
mov
ljmpw
dec
jns
je
loope
ss
mov
jns
cmp
jae
dec
cli
ds
mov
mov
sbb
pop
push
faddp
sub
cmp
mov
jno
loop
xor
sub
push
jae
movsb
std
jnp
scas
mov
or
xchg
lds
cmpsb
pop
in
sbb
sub
xchg
jg
cltd
adc
jb
cmp
mov
adc
mov
int3
loope
jmp
cs
add
or
movsb
in
cltd
out
pop
mov
push
fisubrl
cld
adc
mov
cld
testl
dec
jb
insl
xor
inc
or
mov
int3
mov
push
lock
scas
rcll
cmp
or
jecxz
sbb
aaa
xor
pushf
xchg
in
bound
cmpsb
ja
mov
int
xchg
fisubrl
and
test
aas
xor
lret
jo
nop
dec
rep
inc
xor
fbld
adc
cld
in
jp
test
sub
test
xlat
mov
inc
movsl
xchg
lret
cmp
testl
iret
sahf
dec
xchg
mov
push
pop
mov
or
push
jnp
fwait
cltd
insb
gs
repz
aad
push
daa
imul
ljmp
leave
out
fwait
mov
aad
rorl
les
xchg
dec
inc
in
xchg
inc
dec
lret
cmp
aad
mov
xchg
jmp
cmp
push
lahf
xor
jb
mov
repnz
mov
sbb
addl
std
cmp
rclb
loopne
icebp
loope
popf
je
std
out
dec
lcall
test
jle
mov
subb
pushl
jecxz
clc
js
mov
pushf
outsb
lahf
and
adc
xchg
push
add
aam
adc
xlat
mov
mov
xor
xorb
movsl
and
cs
daa
xchg
pop
push
jne
add
dec
call
orl
xchg
jg
ljmp
lahf
xchg
pop
lods
dec
inc
out
jo
pop
xor
addr16
nop
adc
and
gs
test
adc
out
push
and
scas
test
les
add
popa
fstl
std
mov
jae
mov
sub
add
xor
cli
outsb
cmc
sbb
dec
sarb
cmp
pop
cli
xorl
movsl
nop
repz
dec
cmpsb
arpl
lods
fwait
jg
sub
fsts
dec
out
cmpsl
fwait
adc
sbb
jmp
jge
push
shll
out
int
xor
fdivrs
outsl
bound
movsb
and
cmp
lret
pop
cli
push
fdivrs
fidivs
out
sbb
js
add
add
in
int
lods
push
pop
or
pusha
adc
sbb
clc
or
test
dec
dec
out
xor
cltd
dec
dec
bound
iret
loope
mov
xchg
insl
dec
movsb
leave
xor
lret
cs
mov
int
xchg
xchg
pop
imul
xor
pop
mov
xchg
std
mov
insl
test
pusha
dec
push
dec
pop
shrl
xchg
dec
sub
adc
xchg
inc
je
bound
cmc
aam
push
f2xm1
add
and
mov
jge
inc
and
xor
cwtl
in
pop
adc
cmp
lret
push
cmp
popf
push
push
jbe
push
shrl
pushf
add
scas
clc
nop
dec
cs
sbb
leave
or
sahf
adc
jae
aaa
pop
loope
mov
nop
push
in
xlat
push
lret
cmpsl
xorb
ljmp
test
enter
dec
std
sti
insl
movsb
push
gs
fwait
add
adc
push
cmp
xor
mov
xor
mov
mov
stos
dec
pop
dec
sub
pop
xchg
xchg
jmp
sbb
push
cltd
push
icebp
out
rcr
xlat
xchg
in
and
jo
insb
mov
ljmp
and
or
xchg
sub
into
jbe
fstps
xchg
insb
movl
pop
adc
cmpsl
mov
enter
mov
loope
inc
sub
add
push
test
ret
jl
aad
stos
push
sahf
jge
sahf
fsubrs
fwait
lcall
les
fxch
insb
mov
mov
xrelease
insb
sets
mov
outsb
push
pushf
sbb
push
mov
lock
aaa
or
sub
mov
in
mov
xchg
add
fldenv
popa
cmp
sbb
sbb
xchg
dec
stc
lea
enter
subl
imul
stos
outsb
notl
sarl
mov
stos
sub
push
adc
rorl
mov
adc
aam
lds
in
cs
aad
orb
mov
mov
and
cli
icebp
enter
jae
sbb
cli
cmp
test
orl
sub
adc
adc
aad
mov
fcomps
mov
insb
push
sbb
mov
in
lds
sbb
cmc
sbb
pop
clc
adc
fisubrl
mov
pop
mov
push
lret
rol
idivb
sbb
cmp
jl
addr16
mov
pop
sti
mov
shl
dec
shll
pop
mov
loope
xchg
mov
das
ret
add
pop
in
hlt
or
ljmp
push
mov
xchg
imul
jno
lret
push
and
xor
push
sub
pop
adcl
sub
adc
push
pop
sub
or
inc
ret
jno
jno
inc
fldcw
or
xchg
or
mov
xchg
push
hlt
repz
ret
hlt
arpl
stos
insl
sbbb
and
imul
push
test
dec
dec
mov
call
test
int3
adc
mov
imul
repnz
les
add
jbe
mov
test
push
decl
hlt
and
mov
mov
xor
jmp
stos
insl
and
insb
leave
adc
int3
in
dec
fwait
xchg
aad
in
je
clc
pop
out
sub
adcb
mov
outsb
xor
mov
out
add
outsb
loope
push
testl
jmp
aaa
mov
xor
sbb
mov
loopne
pop
insb
daa
test
adc
and
cmpsb
cmp
inc
shrb
lret
mov
notb
xor
add
inc
mov
mov
sub
dec
push
mulb
sub
ljmp
movsl
cltd
icebp
pop
adc
mov
test
jnp
mov
in
push
and
mov
ja
mov
or
or
orl
cmp
add
cli
jb
push
xchg
add
sub
sti
push
mov
inc
xchg
cltd
xor
fadd
mov
rol
xor
test
push
lcall
std
cmp
jns
jp
dec
test
mov
pop
cmp
into
xchg
dec
cmc
rcrl
in
mov
nop
sbb
mov
mov
out
pop
sub
stc
push
test
sub
push
mov
sbb
add
divl
fwait
mov
push
outsl
dec
cltd
leave
xchg
xchg
jecxz
arpl
or
fsubl
or
mov
jnp
mov
call
subb
inc
cmp
ret
aam
int3
pop
inc
bound
mov
idiv
jns
popf
loopne
inc
fcom
mov
cmp
rcl
pop
add
mov
cld
or
lods
jo
jl
push
mov
jnp
or
inc
lods
or
pop
fcomp
ret
pushf
outsl
pop
bnd
sbb
or
int3
popa
notl
pop
aaa
test
dec
push
xor
fsubr
jmp
xchg
out
int3
into
xor
fwait
movsb
dec
insb
test
enter
aam
addb
xor
ficoml
test
scas
pand
mov
sbb
imul
rclb
push
xor
mov
mov
call
mov
xor
mov
shrb
mov
dec
sbb
xor
out
xchg
and
mov
xor
mov
inc
jns
or
sbb
dec
test
jg
jle
stos
pminsw
cltd
fimuls
mov
or
ss
in
sbb
jns
jne
pop
fildll
test
or
jno
and
inc
push
in
xchg
pusha
aas
fcompl
int3
cmp
orb
adc
pop
popa
xchg
insb
stos
orl
sbb
rorl
mov
in
shlb
nop
xor
int3
sti
xchg
xchg
mov
bound
fidivl
jg
pop
std
aaa
push
shll
in
lods
mov
sti
js
popf
outsl
push
or
inc
je
inc
fstl
ss
lcall
mov
pop
out
outsl
push
loopne
sub
xchg
aas
or
adc
lret
or
cmp
sbb
jle
xor
push
lods
mov
sub
lods
mov
add
or
dec
enter
test
dec
push
in
push
es
mov
jmp
or
jp
mov
pop
in
stos
bound
lods
aam
push
icebp
xchg
arpl
scas
bound
imul
sub
aad
xchg
mov
mov
fsubrs
pusha
adc
jp
into
jecxz
out
jle
stc
iret
or
or
sub
mov
out
pop
inc
int3
icebp
in
sahf
ss
dec
int3
xchg
or
or
inc
and
push
adc
dec
test
xchg
add
dec
sub
std
fmull
in
loop
ror
jae
mov
mov
test
mov
xor
cmpsb
xchg
js
jmp
jnp
inc
mov
loope
ljmp
outsl
jecxz
mov
jnp,pn
mov
cltd
stos
pop
adc
cld
rcrb
ljmp
add
push
mov
scas
sti
jne
mov
test
pop
dec
inc
add
into
int3
scas
out
div
push
fcmovnu
jnp
pop
in
jns
mov
idivl
mov
xor
push
push
jecxz
icebp
loope
mov
cmp
add
lcall
mov
inc
or
pop
call
sarb
andl
repz
add
and
sbb
jo,pt
and
push
mov
movsb
adc
xchg
sub
mov
mov
aas
jg
stos
xchg
pop
xor
insl
out
dec
push
lret
dec
jmp
fisubl
ret
jl
jmp
aaa
rep
repnz
subb
and
add
stc
inc
xchg
and
cmc
jnp
and
sbb
adc
pop
cltd
mov
in
and
rclb
scas
je
repnz
loopne
adc
rclb
add
sub
shll
pushf
lret
je
sahf
push
pop
push
rcll
nop
add
out
in
test
cmp
dec
jle
insb
movsl
pop
mov
cs
dec
sbb
mov
decl
push
pop
jbe
jnp
rcrl
dec
jge
adc
cmp
jns
lods
into
lea
or
cmp
sahf
mov
jg
mov
dec
call
sarb
inc
test
inc
adc
ret
movsl
aad
repnz
add
subb
movsb
sysenter
and
pusha
xchg
addb
inc
fdivl
add
mov
in
scas
test
inc
add
rep
dec
xchg
xchg
push
cmpsl
add
popl
int3
fstpl
add
xor
jnp
inc
loope
scas
subl
sub
pop
pushf
ljmp
fsts
sbb
pop
or
xchg
scas
mov
imulb
mov
aas
push
lods
sub
jle
sub
cmpsl
xor
loop
jmp
out
sub
scas
pop
add
mov
pop
ds
fdivs
movsb
add
out
cmc
scas
lcall
adc
movb
cmp
aas
and
jb
mov
icebp
and
pop
inc
add
lahf
ljmp
jge
pop
and
mov
and
std
jmp
and
sti
jmp
orb
and
pop
mov
mov
xchg
dec
xchg
cmc
movsl
arpl
cmp
shrl
arpl
sbb
pop
ficoml
add
cmp
mov
in
and
push
add
rcrb
call
jle
outsl
cmp
sti
aad
xchg
mov
mov
push
fsubrs
add
pop
sbb
mov
pop
cli
cmpsl
xor
lock
jb
cmovle
in
bound
sahf
cld
pop
pop
xchg
adc
xchg
mov
xchg
outsb
mov
rcrl
inc
sub
fcomp
outsl
std
xchg
xor
cmc
pop
push
fcmovnb
into
push
adc
and
pop
test
mov
imul
mov
or
add
pop
sub
mov
imul
popa
add
push
imul
mov
pop
clc
mov
movsb
jns
lcall
inc
insb
aaa
push
mov
out
nop
adc
vsubps
stc
adc
jbe
sahf
add
cli
in
popf
xchg
arpl
inc
cwtl
or
push
ret
in
xor
mov
stos
cmpsb
outsl
in
mov
mov
ret
in
jb
icebp
fistps
sbb
pop
aad
insb
xchg
push
daa
push
sbb
in
movsl
cltd
subl
mov
jmp
pop
inc
add
jbe
enter
xchg
or
or
sbb
mov
push
or
inc
stos
and
shll
hlt
sub
xor
jl
dec
scas
repz
mov
leave
mov
leave
dec
pop
mov
adc
mov
xor
int
shrl
sbb
xchg
mov
fstps
pop
aas
fdiv
pop
jae
lcall
pop
sub
leave
mov
iret
mov
jo
add
push
mov
xchg
dec
movsl
dec
rclb
loope
jecxz
fmul
xchg
adc
aad
pusha
lock
mov
lods
adc
xor
nop
ja
cmpb
push
rorb
daa
ret
es
mov
andb
aaa
push
jecxz
fimull
addr16
jbe
and
sbb
mov
mov
inc
rol
push
mov
dec
icebp
test
js
cmpsb
scas
jp
cmp
lea
subl
cmp
pop
mov
mov
fidivrl
mov
cmp
mov
mov
nop
aam
add
jle,pt
pop
pop
out
dec
test
inc
sahf
add
out
and
sub
pop
lcall
fnstenv
adc
push
call
mov
mov
lea
cwtl
mov
mov
in
jae
hlt
pop
ljmp
iret
test
push
in
repz
push
pop
or
ds
adc
scas
scas
fsubrl
mov
sahf
rolb
sub
lea
mov
sbb
dec
stos
out
out
mov
mov
aaa
icebp
xchg
and
repnz
push
or
and
mov
shll
in
mov
push
stc
clc
call
mov
adc
lahf
in
add
mov
fimuls
fcompl
lret
mov
mov
push
call
fmuls
ja
movsl
lds
sbb
int
push
shl
pop
adc
arpl
jne
dec
imulb
imul
shlb
aaa
xor
test
cli
adc
sahf
dec
mov
into
imul
inc
dec
adc
mov
sub
jnp
shrb
imul
inc
jno
loop
xor
xchg
fidivrs
in
incb
pop
les
addl
mov
ljmp
add
out
stos
loop
xchg
fucomi
xchg
call
lods
push
mov
and
std
jecxz
shl
je
ljmp
fisubrl
cmp
add
and
je
fxch
ss
xchg
sbbl
inc
or
in
and
cmp
aam
shrb
xchg
push
aad
insb
push
jg
fwait
imul
sbb
ljmp
sub
cltd
pop
or
lock
dec
jmp
xlat
and
or
sbb
or
sti
ja
sti
call
dec
push
or
addr16
sub
adc
imul
popf
dec
mov
and
lds
fsubr
jbe
push
arpl
cltd
jge
popa
mov
mov
rorl
xor
jns
cmp
dec
loopne
and
jg
or
push
or
std
js
sbb
xlat
inc
inc
push
cmp
xchg
cmp
fstps
fists
js
sbb
std
test
mov
sub
dec
aas
jae
rcrl
inc
test
jae
dec
mov
inc
mov
mov
pop
push
pop
mov
sbb
mov
xor
lret
lods
push
xor
inc
subb
mov
sub
shlb
scas
out
mov
sbb
sbb
xchg
ds
jg
orl
mov
jns
add
out
adcl
aam
shl
jecxz
and
loop
fsubr
xchg
add
rorb
out
into
dec
adc
test
jge
jae
sub
ja
nop
lock
or
xor
mov
scas
mov
mov
stc
leave
adc
scas
jb
inc
push
mov
aad
fmull
jns
test
jo
pop
pop
mov
adc
into
stc
gs
push
jg
fldenv
fiadds
pop
jge
push
xor
pop
loopne
inc
pushf
cs
lea
sub
pop
dec
fisubrl
lret
add
aam
stos
dec
push
outsb
xor
adc
mov
cmpsl
mov
sub
xor
aad
and
icebp
int3
sbb
pop
push
add
or
xchg
test
ror
push
repz
fwait
hlt
add
rorb
repnz
jg
into
mov
loope
pop
mov
dec
dec
or
mov
fwait
sub
aaa
mov
jb
mov
xor
xchg
push
int
rclb
add
sbb
add
divb
call
sub
jmp
sbb
cld
cmp
push
loop
push
cwtl
push
fcmovbe
jp
jnp
adc
sti
mov
test
sub
add
xor
movsl
mov
xor
xchg
int3
ret
cmp
inc
or
dec
ret
into
xlat
cltd
xchg
dec
ds
xor
inc
mov
data16
fiaddl
mov
rcll
adc
repnz
cwtl
les
mov
ljmp
stos
loope
in
test
mov
mov
jg
mov
arpl
cmp
add
mov
mov
adcb
das
adc
addr16
xor
mov
pop
pop
jae
sahf
loopne
xor
dec
mov
movsl
mov
sahf
subl
in
jnp
sbb
pop
mov
aad
call
lret
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
jmp
jecxz
cmp
sbb
filds
push
cmp
negl
bound
leave
cmp
ss
arpl
repnz
jle
mov
sbb
dec
scas
dec
rorl
xchg
sub
mov
repz
pop
sbb
arpl
pop
dec
stc
jns
add
fsubs
or
mulb
call
lods
jns
std
ret
lods
xchg
insb
and
mov
call
push
cmp
push
lcall
lret
add
sbb
loope
repnz
pop
pop
dec
ja
jne
dec
jle
insb
sbbl
out
xor
outsb
les
mov
daa
pop
add
xor
fidivs
mov
push
into
pop
loop
jo
jge
movsl
aam
pop
pop
icebp
push
scas
sub
cmp
cmp
jnp
sbb
xor
push
xor
xchg
ds
into
adc
ss
fmuls
jo
mov
gs
lea
cmp
add
ret
add
sub
loope
adc
pop
notb
sub
cmp
iret
xor
push
dec
jne
lods
test
lods
push
arpl
push
mov
pop
enter
cmpl
cli
push
insl
lea
in
test
es
add
and
movsb
xchg
imul
push
jg
cmpsb
push
sub
loopne
xchg
jle
xchg
movsb
call
xchg
ret
sti
pop
test
lret
leave
jge
clc
rolb
or
shl
xchg
mov
out
cmc
add
imul
pop
and
fs
xchg
lret
and
ds
fwait
mov
push
inc
frstor
sub
mov
mov
sub
sbb
stos
mov
scas
imul
jl
push
testb
mov
cmp
push
or
int3
leave
pop
fisttps
rcr
xlat
jp
shlb
pop
push
mov
mov
mov
push
in
out
push
addl
daa
lods
xchg
aad
add
clc
pop
sbb
icebp
out
add
and
out
aas
mov
push
push
and
jmp
sahf
jns
nop
in
lods
or
pop
push
clc
xor
test
loop
into
cmpsl
sahf
loopne
lret
outsl
fisubs
inc
jns
jmp
xor
mov
or
mov
in
je
adc
ret
cmp
jns
sbb
push
in
mov
dec
aad
jl
xor
daa
pop
dec
xor
aaa
repnz
sub
dec
lea
xchg
sbb
xchg
mov
loopne
pop
inc
xor
xchg
ret
pop
or
loop
pop
or
mov
enter
adc
nop
mov
dec
es
xchg
mov
movsb
dec
in
in
fdivr
xor
push
movsl
fcmovbe
xchg
lret
testb
xchg
aas
jg
push
test
lock
shll
rolb
popa
cmpsl
js
repnz
jmp
stc
xchg
mov
stos
loope
pusha
icebp
inc
push
test
lea
cmp
add
cmpsb
aaa
imul
inc
pusha
inc
fs
ds
pop
mov
clc
fwait
ja
inc
nop
ret
test
aad
out
add
loopne
sahf
stos
cli
cmp
aam
cmpsl
xor
inc
dec
jns
test
repz
lcall
subl
jbe
push
movsl
push
xchg
xlat
xor
ret
stc
sbb
jp
stc
inc
push
xor
push
jg
leave
mov
jae
sub
push
stos
les
out
xchg
dec
mov
pop
inc
jg
pop
jo
lcall
insb
xchg
out
or
push
repz
cmpl
or
jbe
popa
lcall
dec
adc
les
xlat
call
cmc
inc
insb
push
sub
jmp
jns
xchg
mov
pop
jl
dec
stos
das
test
sub
inc
mov
mov
rorl
xor
and
push
dec
outsl
fsubrl
mov
xor
sbb
mov
pop
mov
ja
adc
dec
jno
xchg
test
orb
shlb
mov
xchg
pop
shl
jg
or
sarb
pop
jno
scas
jge
push
dec
cli
push
iret
cwtl
outsb
xchg
loop
jge
mov
jl
xor
pop
cmp
dec
cmc
xor
mov
mov
icebp
pop
stc
cmp
mov
mov
jne
jnp
xor
push
xchg
lods
aad
scas
cmp
mov
cmp
add
out
lea
test
lcall
fstpt
test
adc
lds
mov
bound
xchg
pop
xchg
xlat
dec
inc
adc
popa
lods
sbb
dec
inc
dec
sbb
pushf
mov
mov
popl
push
mov
pop
in
jg
add
ljmp
jbe
mov
and
jmp
mull
pop
aad
or
mov
add
das
sub
cmp
pusha
adc
xor
insl
jns
mov
pop
mov
pop
cmpsb
mov
and
outsb
xor
pop
cmpsl
inc
add
call
mov
add
out
mov
xor
mov
xchg
imul
sbb
in
add
xchg
out
hlt
lret
stos
sbb
ffree
or
rorl
and
xor
xor
pop
lock
add
into
mov
dec
cmp
mov
in
arpl
fdivs
in
xor
stos
imul
adc
arpl
adc
pop
sub
in
jno
xchg
push
add
lea
adc
testl
lea
jle
je
and
or
clc
sbb
jmp
jo
or
ja
cmpsb
jmp
js
mov
jno
rcll
orb
jp
test
js
mov
lock
mov
push
imul
sub
cmpsl
mov
shll
cmp
shrl
rcl
std
jb
add
in
out
icebp
scas
movsb
iret
inc
fnstsw
loope
std
in
or
icebp
mov
loopne
mov
add
pop
and
lea
push
push
frndint
pop
jo
aas
pushf
sbbl
or
sbbb
lcall
xor
mov
sbb
xlat
sub
mov
adc
mov
repz
sub
add
push
mov
sbb
mov
in
mov
xor
inc
and
shrb
add
xor
xor
ss
ret
ljmp
inc
sbb
stos
jge
push
fcmovu
and
aaa
fwait
mull
adc
loop
loopne
clc
sbb
inc
xchg
or
sbb
xor
stos
popa
push
mov
xor
and
aaa
cmp
jmp
pop
addl
pusha
or
cmp
lcall
mov
loope
vpsadbw
in
push
icebp
mov
mov
dec
stc
cmpsl
mov
mov
mov
inc
xor
xor
popf
lea
add
mov
cmc
mov
into
pop
cmp
adc
cmpsl
ds
jmp
cmp
cmp
mov
and
sub
icebp
or
push
jle
push
xor
aaa
xchg
inc
sahf
pusha
mov
orl
test
sub
cmova
dec
push
mov
xorl
les
repz
xor
ljmp
or
xchg
int3
fisubs
dec
add
xchg
sub
xlat
mov
iret
adc
sub
scas
dec
in
fsubrs
mov
jnp
mov
sahf
inc
call
push
leave
and
add
jmp
push
xchg
jo
loope
hlt
or
jo,pn
sub
cmc
jne
pop
jb
pop
enter
cli
push
sahf
fdiv
mov
mov
outsl
xor
adc
sbb
idivl
jecxz
ficoms
cmp
dec
pop
jmp
loopne
pop
repz
mov
sahf
jmp
mov
xchg
out
fildl
mov
mov
xchg
cmp
andb
jge
iret
int
push
or
shll
pop
xor
add
fisubl
popf
cmpsb
xor
loopne
popa
int
jle
addb
xchg
insw
mov
bound
or
sbb
pop
mov
mov
mov
cld
sub
out
mov
lret
fucomp
lret
xchg
fs
push
sbb
lea
mov
xchg
add
nop
push
movsb
push
loopne
push
cld
push
mov
and
xchg
out
pop
insb
and
scas
xchg
xor
push
je
sbb
push
ja
mov
and
jp
xchg
ret
das
scas
cwtl
dec
mov
bound
mov
or
mov
cmc
mov
dec
dec
inc
in
pop
push
dec
stos
into
jecxz
popf
data16
addr16
mov
cltd
movsl
orl
inc
sub
jecxz
pop
xor
shrb
push
cwtl
xchg
jne
std
pop
inc
dec
cmp
push
mov
and
int
cltd
or
shl
insb
adc
and
rdpmc
push
push
gs
bound
dec
mov
adc
cltd
shrl
and
and
jns
stc
xchg
mov
add
push
aad
dec
movsb
loope
pop
push
sbb
orb
cmp
xchg
mov
fcomps
jns
push
movsl
data16
aam
mov
inc
inc
inc
mov
es
fnsave
mov
mov
movsl
mov
or
push
cwtl
mov
pop
jge
mov
test
popf
repz
in
inc
xchg
repz
cmp
and
pop
mov
pop
aam
in
ret
shr
test
insw
or
xchg
push
dec
add
add
xor
imul
lock
mov
jp
jle
iret
ret
jbe
jno
push
shr
pop
and
test
mov
ret
push
push
push
jb,pt
and
inc
adc
push
mov
cmp
jb
pop
xchg
dec
and
jae
sub
adc
mov
mov
popf
push
push
addr16
add
push
cmc
dec
subb
sbb
js
cmpsl
mov
mov
test
mov
pop
or
jg
add
push
aad
adc
mov
cmp
inc
dec
and
aas
fsub
add
add
jne
shrb
lret
xchg
jmp
xor
data16
movsl
cmp
mov
aaa
cmp
pop
mov
notb
adc
pop
jae
jg
aam
lea
add
in
adc
fildll
aaa
and
or
adc
mov
and
pop
adc
mov
out
and
decl
inc
pop
push
inc
push
rcl
sub
xchg
adc
fadds
and
mov
fadds
mov
hlt
jg
mov
shll
movsl
repnz
dec
lahf
lret
cwtl
das
jns
repz
roll
loopne
out
sub
xor
xchg
cmp
cmp
adc
sub
pop
addl
ret
mov
fs
cli
push
pop
lods
inc
imul
xchg
adc
out
insl
movsl
popa
mov
pop
sub
jnp
xchg
dec
cmp
or
fmul
fdivl
lahf
jl
fstp
mov
or
cmp
mov
int
mov
push
subb
out
movsb
js
cmp
push
sbbb
sbb
iret
mov
test
or
addr16
pop
out
aam
jmp
scas
pop
sub
dec
mov
hlt
jo
jl
inc
lds
jg
mov
jne
test
std
arpl
inc
rolb
mov
loopne
cmpsl
cmp
sarb
add
xchg
insl
leave
push
mov
mov
and
add
insb
sub
sti
push
inc
jb
ljmp
hlt
jmpw
push
mov
sbb
pop
outsl
jb
mov
insb
or
cmp
mov
roll
lret
cmp
dec
inc
jo
mov
test
xchg
cli
cli
push
inc
push
fidivs
out
cltd
push
in
jae
test
arpl
jnp
sbb
je
dec
jb
jp
mov
mov
cmp
sub
aam
mov
rorl
outsb
test
js
sub
jns
xchg
pop
jne
xchg
jb
pop
jecxz
mov
pop
nop
pushf
sbb
mov
push
mov
fistps
sti
mov
stos
pop
outsl
repz
and
ret
cmp
sub
mov
pop
push
and
xchg
cmpsb
mov
arpl
leave
xor
mov
adc
fmull
mov
and
xchg
xor
ret
sbb
mov
iret
xor
es
addb
loop
mov
inc
push
push
decb
pop
xchg
dec
in
mov
sar
mov
fldl
movsb
mov
push
jmp
push
jbe
jne
push
xchg
int3
and
test
aad
jne
push
cmp
es
sti
icebp
pop
and
sbb
fistpll
mov
jmp
rorb
add
inc
mov
dec
ret
and
adc
loope
inc
rorb
popf
pop
dec
scas
cwtl
mov
arpl
pop
or
loopne
jns
aaa
push
popa
lcall
shl
push
into
ss
sbb
mov
inc
jecxz
push
outsb
test
mov
dec
sbb
ret
dec
aam
add
mov
push
pop
out
xor
lods
push
xor
in
pop
icebp
push
xor
jge
dec
test
inc
dec
adc
xchg
or
popf
mov
adc
adc
imul
sbb
loope
xor
cmp
lahf
aam
sbb
popf
pop
ds
hlt
xor
mov
scas
xor
jmp
in
scas
xchg
ret
daa
sbb
fdivp
xchg
sbb
adc
push
adc
adc
jmp
out
sbbb
inc
stos
push
pushf
mov
sbb
ficomps
mov
int3
movsb
stos
push
fadd
int3
data16
ss
pop
mov
cmp
add
mov
psubusb
jle
rcrl
sub
repnz
push
jl
pop
es
movsl
jb
ja
adc
cmp
pop
sub
pop
mov
cltd
push
das
add
mov
xor
shll
popf
pop
push
xor
mov
xor
mov
mov
int3
mov
xchg
xchg
push
push
cli
adc
dec
sbb
sub
je
xchg
dec
dec
nop
mov
and
push
cltd
mov
aas
push
jo
dec
mov
adc
test
add
mov
mov
push
fidivrl
int
mov
mov
add
pop
mov
repz
sub
jno
or
fcompl
cmc
xchg
and
ja
or
xchg
dec
daa
out
sar
dec
mov
mov
mov
push
push
push
stos
mov
insb
pushf
dec
outsl
push
jnp
mov
xor
loope
in
std
ret
or
popf
xor
popf
outsb
sahf
in
xchg
add
loop
pop
outsb
cmp
lock
mov
insl
adc
sbb
rcrl
addb
fcoml
lock
out
mov
adc
dec
mov
leave
xchg
leave
cmp
scas
test
dec
sub
cltd
hlt
jl
pop
imul
jg
es
pop
ds
fsub
ret
lea
roll
inc
mov
ja
xor
movsb
push
mov
push
out
cs
or
test
inc
test
xchg
es
into
dec
enter
test
inc
mov
in
mov
int
out
test
pop
pop
mov
jl
std
outsb
xchg
out
dec
or
fisubl
mov
repnz
jg
addl
mov
dec
fisubl
push
push
imul
xor
ret
mov
mov
stos
fdivl
subl
fistpl
inc
sbb
cmovl
push
js
push
xchg
ret
fidivrs
imul
mov
and
push
inc
cmpsb
add
cmpsl
and
xor
push
mov
mov
divl
pop
idivb
push
cmp
or
dec
sti
pop
cli
std
pop
xor
leave
mov
cmp
ljmp
sub
movsb
ljmp
das
or
sti
insl
adc
mov
aas
cld
fwait
or
sti
fists
jbe
inc
clc
imul
pop
adc
addl
adc
imul
fldl
mov
jne
ret
mov
xlat
and
cmp
cltd
xchg
lcall
fldt
or
ja
sbb
loopne
adc
fisubrl
inc
adc
pop
inc
sub
repz
mov
adc
int3
jbe
ret
jecxz
inc
popf
pusha
adc
cmp
cmp
lahf
and
loop
mov
xor
mov
aad
push
and
and
xchg
mov
in
repz
xor
lds
xor
test
adc
mov
push
xor
das
add
jnp
out
pop
mov
cs
fiadds
mov
mov
xlat
test
fnsave
inc
or
fnsave
pushl
adc
lret
mov
sbb
jno
mov
movsb
dec
dec
sbb
arpl
jle
inc
sbb
pop
and
sbb
repz
pop
push
in
lcall
loop
or
inc
add
insb
stos
xchg
mov
in
push
shrb
inc
adc
bound
imul
mov
inc
mov
fmuls
adc
adc
jge
test
cmp
xrelease
lahf
cli
push
inc
add
inc
cmp
and
out
jge
dec
ja
xlat
movsl
rorl
jmp
or
fcomps
ds
mov
pop
movsb
testb
aam
lahf
arpl
xor
xor
xor
pop
int3
iret
int
sub
fsubrl
mov
test
cwtl
cmp
ss
pusha
xor
pop
xchg
lock
cmp
inc
push
flds
xor
popa
push
dec
inc
jmp
mov
inc
lret
sub
in
orl
pop
shl
out
push
xor
or
iret
xor
js
inc
imull
sbb
and
ret
pop
hlt
cs
adc
mov
pop
push
mov
xor
inc
xor
adc
or
pop
mov
mov
ret
sub
sub
test
test
pop
dec
jo
cmpsl
fdiv
push
mov
mov
sti
out
out
jl
xchg
lock
sub
filds
sbb
lret
add
in
loope
dec
out
mov
out
enter
cmpsb
icebp
xorb
mov
add
pop
fadd
fldt
add
test
flds
fcomip
push
and
push
aad
int3
or
cmpsl
aas
mov
lret
xchg
aaa
mov
std
rorb
rorb
arpl
mov
stos
mov
add
mov
pop
enter
push
push
jp
jl
or
sbb
xor
data16
out
sub
and
cwtl
xorb
icebp
push
pusha
add
fcmovne
xchg
in
sbb
daa
inc
xchg
adc
das
mov
dec
lea
adc
xchg
jg
cmp
sub
loope
mov
outsb
mov
outsb
sti
and
sub
cmp
imulb
or
ja
popa
adc
pop
rcrb
sbb
jl
jo
test
jge
or
cmpsb
jbe
daa
sbb
xor
adc
jo
shl
xchg
sub
inc
adc
out
outsl
or
test
lds
cli
and
add
or
sub
pop
and
stc
dec
cmp
fildl
or
jecxz
lret
dec
hlt
cli
out
and
imul
cwtl
jg
fcmovnb
mov
inc
pop
mov
sar
test
xor
mov
shl
fcmovnb
or
sub
aam
inc
push
arpl
add
out
sarb
fldt
mov
shl
xor
cmp
scas
lahf
mov
andl
aas
mov
mov
xor
hlt
dec
push
out
ds
mov
jns
mov
cwtl
pop
and
in
inc
test
xchg
pop
fistl
cli
push
loope
int
bound
mov
int3
cld
mov
pushf
jp
adc
nop
and
adc
scas
pop
mov
imull
mov
pop
shlb
mov
mov
and
outsb
mov
mov
sahf
inc
jg
addr16
imul
lock
mov
mov
into
xchg
arpl
add
loopne
enter
lods
addr16
mov
gs
sbb
or
fiaddl
bound
insl
stc
cmp
pop
js
movsl
insl
mov
push
xor
mov
xor
stos
cli
inc
test
data16
mov
cmp
cmp
ja
and
mov
jb
push
mov
or
out
sbb
sbb
clc
aad
adc
sub
jne
pop
int
push
outsb
dec
cwtl
repz
gs
add
cmpsl
aam
lahf
jae
shl
popf
pop
sub
jae
mov
jno
dec
js
outsl
in
jmp
out
mov
iret
aad
jns
jnp
iret
and
stos
lock
jp
inc
ss
mov
ljmp
mov
pop
es
hlt
test
push
inc
arpl
pop
pop
xchg
sbb
ficoml
mov
inc
testl
outsl
mov
add
push
cli
cmp
pusha
lret
movsl
int3
dec
mov
pop
enter
ljmp
btr
mov
bnd
jmp
push
ja
pop
push
dec
push
or
xorl
test
push
cmp
loop
cltd
in
mov
jp
sbb
pop
mov
cli
test
ret
inc
dec
mov
in
mov
jne
outsl
and
push
clc
adc
sti
push
jg
pop
inc
imul
sti
pushf
push
shrb
imul
bound
test
xchg
pop
ja
lahf
ret
and
sbb
xchg
pop
adc
and
add
addb
jae
mov
pop
add
outsb
outsb
das
mov
dec
adc
shlb
push
jno
or
dec
or
cmpsl
sbb
js
push
add
xchg
int3
out
sbb
jne
hlt
and
sub
adc
or
pop
pop
jmp
ret
dec
cmp
pushf
popf
push
test
pop
mov
je
imul
sahf
loop
dec
pop
fwait
adc
leave
and
jns
jno
cmp
dec
cli
bound
sub
sub
jge
in
xlat
loop
fiadds
sub
mov
test
sarb
cmp
mov
inc
test
jnp
popa
repz
mov
sub
ret
mov
push
push
sub
jp
dec
or
testb
mov
ljmp
daa
test
mov
fiaddl
loope
in
sahf
mov
and
xchg
dec
leave
icebp
bound
call
aas
pop
add
mov
pop
xchg
and
insb
mov
cmp
loope
mov
cli
inc
pop
negb
pop
ret
not
sbb
sub
push
es
fsubl
arpl
cmp
les
out
mov
jo
fstl
repz
rcl
nop
ret
clc
xchg
add
or
pop
pushf
sbb
jp
lahf
xchg
push
shr
sbb
int
movsb
pop
inc
lock
sub
iret
shlb
or
adc
cld
pop
cmpsl
mov
jnp
inc
adc
lret
add
dec
jb
out
inc
shrb
mov
fs
dec
push
mov
inc
out
jl
scas
ljmp
inc
cmp
cmp
mov
aad
xchg
mov
jns
cmpsl
adc
mov
ret
cmp
cmp
dec
jb
add
pop
mov
and
fstl
sti
mov
ret
out
push
xchg
lds
sub
sbb
in
pushf
or
push
into
mov
jecxz
xchg
push
addr16
call
in
push
insl
out
lock
pop
or
aaa
or
imul
pop
ror
movsb
adc
cli
je
mov
inc
shlb
ret
sub
push
scas
xchg
mov
xor
std
or
adc
test
test
out
jmp
stc
push
imul
inc
leave
loop
dec
cld
push
or
inc
xchg
mov
adcb
xor
push
sbb
jns
rorb
mov
je
cmpl
data16
inc
sub
mov
cmpsl
popf
adc
push
rcrb
push
xchg
mov
stos
bound
sub
cmp
in
cmpb
ror
jno
sbb
xchg
aad
and
pop
add
out
insb
jecxz
movsl
out
push
pop
inc
push
shll
push
pop
jns
hlt
jecxz
cmc
rcrl
test
pop
aaa
mov
call
int3
cmp
aas
data16
int
pop
push
test
cmp
sbb
ljmp
or
add
push
iret
xorb
xchg
mov
fwait
pop
shlb
xor
jbe
cltd
mov
in
or
xchg
ret
movsl
test
jno
std
aad
movsb
popa
xorl
scas
imul
fsubrs
orb
dec
mov
popl
pop
data16
pop
int
fdivrp
sub
sub
jecxz
add
dec
in
pop
cld
xor
inc
push
or
and
jne
testb
aas
jg
sarb
fs
cmp
adc
pop
push
test
popa
or
push
in
sti
jns
mov
adc
jae
jb
jp
add
xchg
or
shll
jo
ljmp
adc
popf
arpl
test
sbb
fcmovnbe
adc
xor
add
leave
inc
pop
mov
addb
shll
dec
xor
mov
movsl
mov
pop
sbb
out
ljmp
aad
inc
push
ja
jno
ds
xor
jp
ja
cmp
push
sub
call
mov
cld
loope
sbb
inc
lret
pushf
pop
cmp
jo
icebp
stos
mov
or
fsubl
mov
imul
aad
jge
mov
lods
movsb
add
test
cli
scas
cmpsl
xor
imul
mov
incl
mov
loop
out
pop
jge
repz
in
push
add
cwtl
xchg
jae
dec
ja
mov
xchg
jnp
mul
sbb
push
inc
insb
mov
cmpb
jnp
sti
xchg
sarb
pusha
les
xorl
push
add
push
push
call
sub
out
loopne
sub
sub
hlt
sti
int3
popf
jb
sarb
inc
adc
incb
icebp
and
js
mov
cmpsl
mov
cmpsb
xor
pop
add
lahf
inc
jo
sub
sbb
hlt
mov
mov
test
sub
call
ja
mov
xchg
push
loop
lock
mov
out
push
popf
ljmp
addr16
cmp
push
incb
pushf
push
push
nop
out
cltd
call
jno
int3
fadds
dec
cmp
jbe
cmp
lret
divb
adc
mov
sub
or
outsl
movsl
xorb
and
xchg
out
or
ss
xchg
repz
in
mov
xchg
test
xchg
push
lret
push
pusha
cltd
ja
dec
adc
lods
and
pop
sahf
pushf
lods
cld
add
mov
rol
imul
xchg
nop
mov
loope
sub
sbb
jo
call
fdivl
ret
adc
or
ja
aas
xchg
hlt
inc
int3
or
mov
adc
jle
xor
or
xchg
std
data16
icebp
out
mov
mov
pop
or
fnstsw
ljmp
sbb
out
leave
add
lods
xchg
or
out
jno
sti
shl
inc
xchg
adc
inc
dec
imul
movsl
popf
push
test
cwtl
dec
fwait
cmpsl
js
or
lret
or
cmp
insl
adc
lods
sub
push
or
jbe
popa
jp
xchg
call
xor
mov
xor
sbb
fs
divl
cwtl
mov
cwtl
pushf
sti
inc
jno
dec
out
or
sbb
sbb
in
clc
dec
push
jns
ficompl
pop
xchg
ljmp
push
stos
outsl
aas
xor
repz
jmp
jnp
divb
dec
jp
mov
insl
adc
decl
dec
repz
pop
xlat
sbb
fsubrl
idiv
sahf
insb
xchg
bound
push
xor
or
pop
pushf
in
bound
rcll
iret
ret
dec
jmp
gs
xchg
or
fwait
sub
sbb
into
xchg
lea
add
sti
out
ret
xor
std
movsb
pop
jb
xor
pop
push
sahf
and
les
rorb
popa
ffreep
dec
insl
mov
int
jle
sbb
jbe
sbb
cmp
push
testl
xchg
arpl
out
dec
pop
clc
push
lods
fs
fdivs
jl
clc
ret
fstpt
dec
mov
xchg
test
loop
cmpsl
cmp
test
cwtl
xchg
subl
test
gs
or
mov
inc
pop
xchg
lcall
mov
sub
arpl
inc
jmp
ret
pxor
jmp
jns,pt
add
popa
fisubrs
inc
jns
dec
sub
fildll
outsl
mov
or
mov
xlat
xchg
loop
mov
in
push
sub
fsts
scas
ljmp
gs
sub
into
xor
roll
add
adc
jge
rcrb
mov
sahf
sub
add
jle
int
push
loopne
incb
iret
cmp
jnp
aas
push
lods
push
addr16
gs
insl
mov
inc
arpl
inc
test
dec
popf
aaa
mov
insl
aas
pop
shrl
hlt
enter
in
push
sbb
mov
mov
mov
in
icebp
sahf
lock
xor
jg
dec
stos
mov
testb
int3
push
fsubrs
push
shl
insb
hlt
aad
outsl
in
jo
or
data16
jmp
jb
jg
je
aad
pushf
imull
rorl
mov
xchg
or
xchg
jle
xchg
mov
and
mov
jae
js
mov
repz
mov
subb
jnp
ret
cwtl
push
or
xor
dec
and
pop
jns
pop
orb
call
cmpsb
outsl
dec
xor
mov
jae
add
out
xcrypt-ecb
cmpsl
iret
pop
fists
xchg
scas
roll
or
int
cmp
push
jbe
push
jns
imul
insl
negl
sti
pop
fstl
shl
cmpsb
jns
daa
aad
inc
mov
imul
shrl
test
mov
addr16
fwait
and
cwtl
add
adc
shrb
ficompl
xchg
dec
adc
mov
clc
das
jo
sub
negb
push
dec
cmp
je
cmpsl
xchg
xchg
or
sbb
jnp
mov
mov
pop
dec
pop
shrb
scas
gs
push
pop
or
sbb
sub
mov
in
add
stos
inc
xchg
clc
inc
sbb
inc
dec
leave
out
mov
loope
lcall
into
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
jmp
mov
enter
imul
data16
xchg
pop
bound
xor
cmpsl
stc
mov
jns
das
clc
push
into
adc
fdivl
push
xor
jecxz
dec
xor
adc
in
repz
mov
xchg
movsb
rcr
push
jbe
sbb
xchg
sbb
inc
popf
enter
push
inc
push
push
jns
pop
jne
lods
mov
jmp
inc
mov
ljmp
jl
pushf
rol
dec
mov
fwait
dec
popa
pop
adc
push
andl
addr16
xorl
fadds
data16
insb
fsubs
mov
ljmp
hlt
roll
lret
pop
jo
dec
xorl
out
mov
cmp
adc
jnp
pop
sti
mov
sarb
sub
rclb
jnp
jno
icebp
sbb
popf
sbb
mov
cmp
fidivrs
aam
std
push
inc
imul
dec
out
jl
clc
add
pop
and
mov
or
and
and
push
in
fs
cli
cmp
sahf
push
insb
imul
add
out
in
mov
outsl
lods
lock
ljmp
lret
sub
out
xor
arpl
jbe
or
loopne
add
faddl
dec
or
pop
out
push
outsl
jl
xchg
aas
xchg
inc
pop
pop
add
int3
sub
lcall
shl
call
jnp
xorl
aad
xor
dec
es
jmp
mov
pusha
dec
test
or
into
xchg
iret
and
mov
xor
mov
pop
test
pop
add
movsb
hlt
aas
popf
lcall
and
test
push
mov
push
sub
rcr
or
mov
xchg
andl
pop
fs
sbb
push
xchg
fdivrs
fsubp
ret
adc
sub
mov
sbb
lea
push
and
xor
push
sbb
sarb
fistpll
mov
mov
adc
push
mulb
dec
mov
mov
outsb
xor
fcmovne
push
es
dec
push
add
mov
fstps
cwtl
ficomps
pop
sub
fadds
pusha
pop
inc
pushf
in
mov
int
in
leave
pop
inc
sub
add
pop
aam
adc
mov
sub
mov
repz
movsl
cltd
adc
or
xor
loop
cmp
pop
in
mov
push
call
xchg
int
inc
xacquire
test
ficoml
adc
jmp
aaa
outsl
pop
cmp
mov
jecxz
or
adc
insb
hlt
xor
jbe
push
ljmp
out
or
pop
add
mov
call
pushf
repz
movsb
mov
sar
data16
push
jmp
lods
mov
xor
xchg
mov
out
sub
mov
test
add
xchg
rcr
les
ret
andb
inc
sarb
insb
and
jge
ds
fcmovnu
out
ret
adc
add
aad
xchg
mov
mov
int3
or
xchg
xchg
test
divl
scas
jmp
cmp
mov
push
loop
addb
and
pop
fcmovnb
mov
out
lods
dec
in
sbb
aad
xchg
jns
push
sub
insl
adc
mov
and
jg
call
out
xor
lock
mov
xchg
ss
icebp
popa
sti
dec
and
int3
jbe
roll
in
pop
xor
xchg
nop
gs
ficomps
mov
xor
jo
outsb
aas
dec
iret
mov
es
sti
lock
cmpsb
pop
stos
in
push
inc
divl
cltd
jne
xchg
rcrl
mov
repnz
fwait
dec
mov
in
jb
in
js
lret
ret
aam
dec
mov
pop
cmp
js
dec
out
fwait
jge
lock
ljmp
xchg
lds
stos
fldt
hlt
movsl
test
int3
xlat
fstpt
mov
lea
jns
cld
fistpll
xchg
cmp
lods
mov
stc
fs
ret
mov
lock
shlb
jg
xor
jle
cld
push
fwait
loopne
dec
cmc
pop
xor
mov
and
hlt
rorb
out
loope
push
loopne
scas
loope
mov
push
fs
aaa
in
repnz
ss
xor
rcrl
jbe
imul
rcl
ficoms
icebp
and
jmp
push
cwtl
pusha
insl
rcl
jge
fldl
xchg
negb
repnz
in
aaa
mov
adc
jbe
imul
adc
mov
out
inc
pop
mov
sbb
addr16
sub
or
push
jae
popf
push
inc
imull
addr16
andl
pop
js
push
pop
mov
xor
sbb
push
icebp
push
sbb
or
fcmovnbe
add
pop
call
add
xor
adc
push
mov
loope
mov
sub
popf
flds
xchg
loopne
dec
mov
aad
sahf
fisttps
sub
xchg
in
addr16
fwait
test
js
bound
and
lcall
xchg
xchg
add
inc
mov
outsl
inc
into
pop
jle
add
pop
fdivs
in
or
insb
mov
idivl
dec
jge
and
or
lahf
mov
lock
xchg
aas
jl
clc
aam
xor
mov
subb
adc
inc
loope
arpl
pusha
push
rcl
jge
cmc
testb
adc
push
imulb
lahf
dec
xchg
mov
cmp
jne
testb
inc
adc
sub
inc
in
push
xchg
mov
or
mov
inc
sbb
loope
dec
dec
loopne
pop
fdivrs
jge
dec
mov
mov
jl
pop
fidivrs
mov
adc
in
fcoml
ficoml
lods
imul
cld
ret
outsb
jae
sbb
mov
sbb
insl
call
or
dec
daa
fwait
sbb
popf
ja
jmp
adc
hlt
pop
pop
incb
imul
and
pop
mov
push
mov
cmp
das
scas
lock
inc
rclb
in
stc
aam
inc
adc
push
pop
in
mov
xchg
sarb
sar
popl
cwtl
jb
or
daa
ss
adc
mov
push
xlat
adcl
xchg
mov
icebp
pop
pusha
jecxz
push
ds
ljmp
fiadds
out
sbb
pop
push
fwait
mov
sbb
leave
xor
arpl
sbb
dec
hlt
hlt
sbb
adc
fildll
push
mov
int
pop
shll
inc
push
dec
fsubrs
jmp
fidivrs
adc
mov
pop
adc
fiadds
cmpsl
mov
and
push
adc
pop
dec
loopne
setnp
sti
mov
adc
js
sub
jbe
imul
sub
iret
xor
je
add
adc
and
pop
sub
cmc
push
push
jl
jecxz
mov
dec
loope
xor
ja
xor
xchg
push
ffreep
sti
sbb
stc
dec
mov
sub
cmc
and
mov
jno
xchg
xchg
stos
xchg
xor
dec
adc
and
xchg
adc
jg
sub
fadds
jns
cmp
shrl
jne
xchg
jbe
inc
pop
flds
xor
cwtl
lods
xchg
pop
jge
sbb
jbe
test
in
pusha
outsl
cmp
cmp
xor
movsl
nop
lret
inc
insb
jp
pop
sbb
sub
and
int3
jecxz
fstpt
sbb
js
push
stos
aad
add
stos
in
mov
or
lret
daa
notl
add
sub
pop
mov
outsl
fimull
sbb
shr
lods
mov
jnp
dec
test
xchg
pushf
pop
xchg
or
xor
mov
xor
aam
mov
hlt
push
sbb
xchg
stos
arpl
outsb
sub
cmp
cmpsl
fwait
push
in
mov
push
push
mov
or
inc
jne
aam
icebp
orl
into
xor
in
sbb
rorb
push
mov
xchg
mov
cmp
mov
movsb
sarb
mov
repz
add
jmp
xchg
dec
sbb
in
sbb
jle
pop
xchg
push
fmuls
xlat
sub
mov
cmp
mov
mov
jnp
mov
imul
cmp
ljmp
dec
and
mov
stos
lret
adc
mov
cmp
sub
jg
cmp
push
and
mov
out
mov
and
xchg
dec
xchg
fs
xorb
loop
push
in
xchg
std
inc
das
mov
push
cmp
cmpsb
cmp
sbb
add
data16
rcrb
cmp
jecxz
fisubrs
je
lea
push
and
imul
mov
lds
clc
aas
sarl
jge
loope
in
mov
fcompl
test
rep
shrl
dec
mov
test
outsl
mov
and
cmp
sub
or
push
add
mov
cmp
rcll
test
sbb
loopne
or
cld
and
cltd
cmc
jecxz
imul
mov
pminsw
cmp
mov
adc
push
addr16
mov
mov
adc
fdivl
pop
mov
out
fmuls
popf
mov
test
iret
add
xchg
jb
add
mov
xor
jecxz
adc
test
ret
loop
or
jns
xchg
ss
cli
out
xchg
cmc
out
lret
mov
cmc
ret
movsl
sahf
push
sub
push
dec
faddl
pop
sbb
idivl
jg
inc
sti
mov
jmp
push
dec
mov
xchg
xlat
mov
xor
les
xchg
pop
mov
insl
pop
mov
ret
lret
sbb
loope
adc
xchg
enter
push
addl
ror
shl
pop
in
push
mov
fmul
frstor
ja
fwait
jb
push
daa
outsb
aad
loopne
mov
or
es
dec
insl
ss
xchg
pop
pop
in
pop
aad
fs
loopne
les
or
shld
loope
data16
sub
inc
xor
enter
in
out
xlat
lock
sarl
push
orb
dec
test
cld
mov
ret
sbb
aad
in
jl
add
adc
sub
mov
push
adc
jle
lcall
jg
loopne
mov
dec
jo
repz
divl
or
mov
aad
sbb
and
imul
movsb
jno
xchg
add
add
cli
arpl
in
dec
cmp
inc
sahf
je
scas
lcall
inc
xor
cltd
push
es
mov
sbb
push
gs
in
out
lds
andb
leave
or
sub
pop
inc
jo
addr16
aaa
loope
jmp
xchg
fiadds
rclb
push
sbb
aad
inc
and
xor
iret
shrb
mov
ljmp
lea
aam
inc
aad
das
inc
dec
out
imul
addb
mov
jb
pushf
fstps
cld
mov
or
xlat
push
imul
pop
ss
push
or
sub
dec
jl
lock
lock
xchg
and
xlat
or
in
test
in
add
push
sbb
stos
stc
jb
loopne
adc
mov
lret
ja
pop
jge
dec
ret
jb
outsb
push
jo
rclb
or
cmp
cld
andb
lcall
mov
cld
fwait
aam
push
xchg
cmp
jne
mov
rcrb
xor
mov
dec
shrb
sti
ljmp
and
out
lds
dec
mov
fcoms
mov
hlt
lods
cmc
pop
pop
int3
shl
test
sti
aaa
push
popf
popf
xchg
cmc
lret
fcomps
xchg
fmuls
outsb
or
cltd
lds
fst
jge
lock
insb
call
push
cmp
mov
and
xor
adc
movsl
das
add
add
fwait
mov
mov
push
loop
aaa
mov
call
lods
cmpsb
mov
ljmp
cs
sub
sti
popl
xchg
mov
lds
outsb
hlt
and
xchg
xor
mov
jno
out
jge
push
xor
rcrb
sbb
popl
jo
test
xorb
dec
xlat
jmp
cmp
ror
sub
push
cmp
xor
outsb
fidivrs
repnz
fstpt
test
push
adc
add
addr16
xchg
mov
mov
call
dec
imul
pop
data16
dec
push
test
adc
sbb
push
mov
cmp
sub
movsb
repz
lea
pop
int3
add
push
mov
sub
pop
add
cmp
add
mov
xchg
sbb
push
aas
xchg
jns
jnp
jb
and
gs
aas
mov
lea
pop
int
adc
faddl
jle
cld
imul
bswap
cli
and
ljmp
pop
xchg
fisttpll
daa
jge
mov
ljmp
movsb
in
lods
clc
mov
test
push
repz
aas
jbe
mov
cmpsl
sub
outsl
sbb
pop
divl
into
in
nop
add
push
test
icebp
or
jno
cmp
mov
enter
xchg
jbe
sbb
aam
jae
or
mov
or
adc
rolb
clc
lcall
xchg
movsb
jg
icebp
rcrb
cs
mov
insb
ds
cli
mov
movsb
push
in
sar
cltd
cmp
pop
inc
cmp
daa
xlat
lahf
pop
xor
pop
int3
push
jmp
add
sbb
jb
mov
jecxz
xor
mov
clc
mov
add
ljmp
mov
inc
and
jecxz
pop
repnz
int3
sbb
popf
gs
mov
cmc
push
pop
lcall
in
call
or
orb
dec
leave
xor
xchg
mov
jne
iret
enter
js
and
sbb
add
mov
cmpsb
mov
aas
inc
movsb
add
les
je
idivl
sbbl
fcomp
pop
xchg
sbb
idivb
sbb
imul
dec
sub
inc
mov
push
outsl
inc
lahf
sbb
dec
sub
mov
or
jnp
inc
sbb
mov
out
vpmacsdql
ja
or
push
dec
bswap
pushf
aad
xchg
cmp
mov
mov
rcr
xor
hlt
movsb
pop
cmp
pop
pop
sti
int
sti
outsb
inc
pop
and
and
pop
mov
mov
ljmp
jbe
sbb
mov
add
sbb
sbb
sbb
and
mov
mov
outsl
imul
lahf
inc
insl
mov
je
movsb
lods
mov
stos
test
sbb
clc
cs
adc
fidivrs
sti
xor
mov
data16
leave
add
lret
js
jp
or
fmul
push
sti
mov
adc
scas
stc
jecxz
shl
xor
loope
xor
adcb
je
xchg
sub
aas
mov
mov
gs
repnz
jmp
add
add
mov
in
mov
rolb
rorl
mov
dec
out
xor
inc
ret
cmp
mov
pop
jle
enter
lods
sub
in
adc
cmpsl
aaa
sub
mov
arpl
mov
lock
adc
stc
sbb
lods
inc
aad
pop
imul
mov
aas
daa
xor
jo
fs
add
aam
push
push
mov
cmp
pop
cli
mov
ja
or
and
adc
jecxz
inc
fsubrp
fcoms
and
bound
outsb
pop
jae
mov
fwait
sbb
sbb
sbb
xchg
jle
mov
cmp
mov
movsb
or
scas
jae
bound
hlt
into
test
and
xchg
push
repnz
psraw
adc
mov
cmp
cwtl
jnp
push
scas
push
inc
lods
mov
cld
lds
pushf
aas
rorl
xchg
bound
enter
arpl
loope
jb
mov
insb
dec
mov
xlat
or
insb
bound
aas
mov
mov
ficompl
mov
mov
loopne
xchg
out
cltd
mov
loop
xchg
sub
in
inc
lods
xor
push
add
sbb
rcrb
mov
daa
xchg
sbb
sahf
dec
iret
xchg
cmp
adc
pop
dec
sarb
xor
fstps
jle
cs
fs
mov
fucom
flds
mov
loopne
mov
and
mov
daa
xchg
bound
add
push
cmc
xorb
or
cmpps
adc
popf
jecxz
xchg
xlat
sbb
loope
push
fldt
bound
out
icebp
or
mov
repz
mov
rorb
sbb
idivb
ret
hlt
sub
pop
mov
xchg
pop
pop
sbb
fisubs
out
inc
in
jns
inc
adc
add
psllw
sub
lahf
and
xchg
push
xor
iret
popa
dec
push
aaa
lret
pop
sub
pop
ror
in
jg
das
sub
mov
pop
pop
sub
dec
jnp
fiaddl
hlt
jle
hlt
aas
and
das
adc
cwtl
push
loopne
imul
stc
sar
cmp
aam
outsl
insb
or
pop
das
stos
outsb
xchg
popf
cwtl
jno
pop
loop
push
insb
loope
jns
iret
mov
mov
cmp
cmpsb
loopne
pop
in
rcll
sub
sbbb
inc
aas
push
mov
cli
repz
jbe
mov
mov
cld
sbb
lret
jg
or
cmc
or
leave
or
cmp
push
adc
hlt
inc
push
stos
outsl
ljmp
fldt
js
ss
aam
fidivrl
js
sbb
sub
cmpsb
dec
push
stos
mov
orl
fs
push
push
hlt
dec
test
rcll
testl
mov
std
pop
dec
xor
sub
hlt
rol
divl
mov
jb
or
xchg
ja
addb
int3
leave
inc
push
or
lret
inc
sbb
pop
or
inc
out
dec
sub
push
pop
jge
mov
jle
xor
xchg
in
mov
mov
or
imul
jbe
push
or
addb
mov
test
ret
sahf
xor
gs
sub
outsl
push
ss
jno
xor
loopne
sar
dec
inc
push
mov
icebp
push
or
push
lret
push
outsb
adc
jae
mov
shll
negl
mov
lret
jmp
jae
arpl
push
mov
orl
xchg
pop
sbb
jge
push
lods
fwait
in
cmp
mov
mov
cmp
repnz
pop
push
or
mov
out
test
jg
mov
cltd
pushf
addr16
inc
repnz
rorb
dec
js
rcll
push
inc
stos
cmp
repz
loope
push
sub
or
lret
dec
mov
test
sub
lret
mov
push
mov
test
mov
push
push
les
insb
mov
pusha
ljmp
aaa
loope
jp
inc
incb
cmpsl
rcll
testb
pop
rol
jno
push
fwait
jle
orb
or
pop
aad
adcb
test
outsl
lea
pop
in
les
dec
jo
inc
test
mov
jecxz
cmp
in
pop
cmc
sarb
sub
mov
test
push
scas
stos
or
js
add
push
dec
loop
mov
test
adc
loop
insl
mov
scas
adc
lret
mov
dec
pop
int
popf
adc
push
cmp
fnstcw
sar
mov
xchg
xchg
popf
mov
mov
mov
push
lock
mov
xchg
dec
sub
mov
pushf
or
adc
ss
test
adc
das
push
stos
lds
popl
mov
repz
sub
ljmp
xchg
xchg
fwait
cmp
outsb
insl
sub
ljmp
dec
push
mov
mov
fs
jnp
pop
fsubs
mov
mov
mov
ss
sti
addl
in
loopne
xor
xchg
dec
test
mov
call
das
movsl
lahf
xor
dec
iret
in
scas
push
stos
mov
mov
sub
bound
xchg
add
lods
in
mov
shl
inc
push
sbb
dec
popa
inc
push
xor
outsl
in
sub
push
and
sbb
sbbb
jbe
arpl
mov
add
inc
pop
js
mov
xor
pop
inc
decl
cmp
mov
dec
mov
mov
imul
mov
test
xchg
loop
sub
mov
xchg
xchg
int3
push
adc
sbb
pop
lds
push
stos
sbb
ret
lods
clc
push
hlt
push
add
cltd
hlt
push
jle
pop
or
in
bound
adc
pop
sbb
pop
push
cmp
jno
mov
movsb
dec
flds
jns
jg
mov
mov
push
dec
and
dec
lods
imul
mov
je
adc
cltd
mov
pusha
push
ss
dec
mov
repz
int3
jns
sahf
xor
and
js
sbb
xorw
dec
iret
fwait
fwait
cltd
mov
cs
push
clc
jns
imul
int
jp
ljmp
add
stos
ljmp
stos
sbb
psubw
pop
insl
cld
xchg
faddl
sti
bound
jo
jne
jle
push
cmc
dec
out
mov
es
insb
mov
movsl
jns
mov
pop
es
daa
pop
sub
stos
dec
mov
sub
push
or
shrb
sti
adc
jmp
pop
cmp
xchg
dec
ret
sub
sti
mov
call
lcall
enter
adc
or
adc
add
add
fisttpl
dec
movsl
aas
jno
test
or
mov
pop
jno
pushw
andl
int
in
out
dec
or
adc
add
mov
mov
inc
adc
jmp
shrb
pop
jb
subb
wbinvd
push
movddup
lods
orl
popa
icebp
pop
mov
pop
xor
loope
pop
jbe
adc
jnp
jmp
leave
xchg
ja
jae
int
pop
dec
sarb
dec
into
repnz
cmpl
jge
icebp
dec
inc
stos
jle
jo
cld
cmpsl
cmp
lods
jo
dec
sbb
adc
push
lds
cli
xchg
out
idivl
jae
movntq
mov
hlt
mov
mov
adc
sub
icebp
cmp
pop
std
jo
lock
dec
fidivs
scas
sbb
dec
test
std
out
add
add
jb
dec
pop
xchg
jge
jno
or
cmp
scas
fidivl
sbb
mov
lea
adc
or
prefetch
enter
mov
pop
cltd
ss
loopne
and
mov
imul
shll
push
imul
inc
mov
adc
jl
add
sub
and
addl
cmc
loop
cwtl
subl
sub
push
ljmp
cmp
stos
cmp
sbb
inc
adc
dec
and
scas
xor
insb
mov
roll
sbb
psrlw
clc
push
mov
mov
je
sub
xorb
fbstp
popf
cmp
add
lds
push
inc
repz
out
and
cmp
or
xor
aaa
shlb
adc
sbb
mov
pushw
mov
cmp
adc
push
xchg
rorl
jo
xchg
out
mov
bound
mov
int3
sbb
mov
mov
or
inc
scas
mov
sub
das
adc
je
test
hlt
sub
into
pop
out
pop
icebp
or
into
lds
divb
cmp
or
sti
shlb
or
sbb
pop
add
cmc
mov
sbb
or
xor
lcall
dec
mov
out
add
add
inc
sti
push
jo
pop
imul
cmp
loopne
inc
mov
inc
gs
jb
sbb
inc
xor
mov
jp
inc
js
xchg
push
notb
inc
xchg
es
push
cmp
in
nop
mov
push
add
stc
mov
mov
sti
testb
iret
inc
xchg
pusha
les
push
pusha
imul
fwait
push
cltd
jo
aaa
loopne
and
cli
pusha
imul
paddsb
iret
xchg
dec
addr16
mov
jns
pusha
mov
push
loopne
leave
add
imul
cli
jae
cld
cmp
and
add
call
sub
mov
je
gs
test
icebp
scas
test
push
shlb
jmp
stos
rcl
ljmp
loop
mov
pushf
pop
push
sti
mov
push
jbe
insb
andb
fbld
nop
test
scas
sub
in
dec
cli
imul
xchg
call
int3
jmp
xchg
add
hlt
cmp
mov
or
nop
sub
sahf
mov
and
sbb
cmpsl
add
aas
hlt
iret
pop
inc
cs
xlat
push
sbb
pop
subl
insb
mov
mov
jg
xor
push
in
insl
mov
lret
movsl
out
cld
pop
xchg
ffree
inc
push
outsl
xor
sub
ret
fs
pop
mov
pop
lret
pushf
pushf
dec
mov
cmp
es
test
inc
cltd
popf
mov
xchg
leave
cmp
lcall
mov
mov
inc
xorl
sti
outsl
add
lods
jl
pop
xor
stos
mov
les
mov
aam
call
movsb
std
inc
pop
jp
outsl
ja
jns
in
shr
mov
mov
les
test
andb
and
inc
mov
cwtl
fists
and
fcoms
pop
mov
insb
fisubrl
pop
mov
ja
in
jno
jo
mov
clc
push
pop
arpl
sub
or
sbb
mov
lea
pop
jecxz
push
insb
cmp
inc
lret
push
dec
sub
cmp
jbe
imul
ret
cmpl
repnz
cmp
test
adc
out
fsubr
aam
je
mov
xchg
xchg
xchg
stc
push
cltd
clc
insl
in
pop
ss
sbbb
fnstcw
popa
cmp
rclb
lret
pop
out
outsl
adcl
test
incb
lret
mov
arpl
mov
dec
js
sbb
sarl
loopne
push
xchg
jge
xor
add
stos
leave
pop
adc
movsb
out
adc
stos
xor
loope
sub
scas
adc
dec
sbb
or
mov
fwait
mov
movsl
sub
stos
push
push
decl
inc
push
pushf
mov
sti
mov
xchg
inc
clc
push
xor
add
mov
sub
mov
dec
jo
and
cli
hlt
mov
pop
std
xor
sub
and
sub
popa
shlb
or
aad
cmpsl
add
xchg
sar
cs
ret
xorl
jmp
cmc
lahf
mov
arpl
hlt
add
sub
pop
daa
xlat
mov
addl
mov
dec
insb
push
mov
lahf
or
sub
xlat
aam
ds
sub
pusha
cmp
out
xchg
mov
clc
push
add
imul
mov
adc
add
aaa
in
sbbb
in
and
repz
mov
pop
loop
adc
mov
outsl
in
mov
sarl
or
lock
cli
mov
jno
inc
inc
pop
pusha
rcll
or
jecxz
fdivp
out
sbb
xchg
ret
dec
push
cwtl
fildll
xchg
clc
jno
xchg
jle
pop
push
pop
leave
jle
fdivr
mov
mov
cltd
push
mov
scas
flds
xor
popf
movsl
mul
fwait
cmpb
movsl
ljmp
aad
pop
fisubrs
inc
lods
add
shll
or
gs
sbb
outsl
mov
add
pushf
test
sbb
aas
cmpsl
fld
outsl
cltd
addr16
sub
orl
in
mov
jecxz
jno
insl
mov
in
outsb
into
stos
test
fsubs
dec
insl
fmul
in
xchg
sarb
push
fstp
das
add
ret
inc
xchg
jge
mov
adc
faddl
outsb
shlb
push
cmp
adc
and
xchg
or
jnp
and
scas
xorl
push
inc
sti
cmp
pop
mov
dec
push
lcall
hlt
xchg
lods
sub
and
mov
dec
push
jo
xchg
std
inc
mov
mov
imul
mov
iret
clc
add
or
ud1
jge
mov
and
movsb
mov
inc
cmpsl
mov
fdivr
aaa
add
outsl
jbe
jl
bound
arpl
push
aad
sbbb
pminub
loop
scas
inc
pop
mov
fsubrs
lock
dec
das
adc
and
icebp
xor
jae
jns
inc
es
cmpsl
adc
cmp
insb
adcl
testl
jae
jo
inc
pop
dec
mov
lret
sub
mov
push
push
loopne
repz
and
les
gs
mov
icebp
push
stc
sti
xchg
push
aas
push
push
int
pop
cmc
xor
xchg
lea
out
sub
add
cmp
inc
push
dec
aam
cmpsl
jae
adc
inc
jae
cli
pop
insl
jns
loop
cltd
lcall
inc
jle
insl
stos
xchg
fmull
in
ss
dec
jns
inc
loop
dec
imul
call
aam
sub
in
daa
lcall
fs
cmpsl
rcl
sub
pushf
das
mov
dec
je
ss
fisttps
pop
out
js
adcb
jns
fstl
scas
sub
icebp
into
dec
or
lcall
cmpsb
out
js
adc
mov
inc
data16
les
inc
sahf
pop
sarl
mov
sbb
stos
nop
sbb
lret
push
fsubrl
imul
pop
push
nop
mov
mov
inc
or
mov
pushf
pop
dec
xor
push
cmp
jae
in
cld
fcmovnb
sub
int3
mov
cmp
cli
xor
es
dec
lds
loope
sbb
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
jmp
cmpsb
or
imul
fs
bound
pop
bound
pop
push
adc
pusha
pop
daa
inc
xchg
push
sub
add
jne
scas
mov
mov
jmp
and
sub
lds
shlb
pop
ds
outsl
sub
std
lods
lcall
int
mov
scas
jns
sbb
xchg
sub
mov
sarl
cmpsb
cwtl
jge
add
push
fcoml
sti
cmpsl
jne
pop
mov
lcall
inc
js
cs
daa
ja
mov
cmp
dec
mov
pop
std
enter
fnstenv
aaa
xchg
fisttps
das
xlat
pop
in
daa
dec
xor
add
lods
inc
xor
xor
aad
jp
nop
mov
out
pop
push
add
mov
or
repnz
test
pop
adc
arpl
je
cwtl
inc
repnz
adc
fcomps
mov
jne
dec
pop
and
sub
mov
dec
call
test
pop
add
lahf
cmc
out
shrb
outsb
pop
inc
movsl
adc
jmp
outsb
sub
xor
stc
scas
int
xchg
test
cmp
icebp
addr16
shl
xchg
rcrb
dec
mov
cmp
outsl
addr16
sub
repz
rcr
imul
arpl
andl
adc
pop
dec
daa
xchg
lods
clc
rorl
aas
mov
cmpsl
ja
outsb
and
jle
dec
or
lahf
adc
pop
shll
in
aas
fndisi(8087
test
xor
mov
addr16
ja
adc
pop
subl
pop
cmp
pop
push
adc
xchg
jp
sbb
and
mov
in
aam
add
pop
xor
mov
loopne
push
rorb
push
sbb
jno
sbb
repz
das
cmp
dec
mov
pusha
mov
movb
rolb
repnz
es
or
add
push
jmp
outsb
jl
decl
xor
insb
or
sub
lods
aam
jno
adc
outsb
dec
imul
ret
sbb
test
jecxz
inc
ret
sub
sahf
jecxz
fsub
test
jmp
and
into
dec
or
jmp
jo
fisubrs
mov
hlt
add
popa
orb
jge
push
je
fimull
push
push
adc
stos
push
add
cs
or
adc
in
xor
hlt
mov
ss
fcompl
pop
lea
push
fwait
or
sbb
mov
xor
faddl
xor
adc
push
jl
add
pop
push
adc
mov
pop
and
add
sti
push
push
mov
movsl
and
add
mov
les
cs
mov
xchg
xor
dec
lds
aam
xor
inc
sbb
mov
fnstenv
test
add
js
xchg
xchg
out
mov
push
jnp
jmp
in
ja
ds
cmpsb
xchg
push
cmp
rcrl
xor
pop
xchg
inc
xchg
mov
adc
add
decl
cmp
pop
push
lea
iret
fistps
pop
inc
cmp
fcoms
xchg
inc
clc
mov
cmp
fbstp
mov
cs
test
aas
jl
or
dec
nop
test
lcall
add
push
xor
insb
rolb
sahf
js
inc
scas
fbstp
pusha
xor
rol
nop
ds
push
xchg
aaa
loope
pop
adc
mov
ja
lods
xchg
add
and
js
repnz
push
jne
adc
fsts
addl
movsb
out
sbb
adc
test
in
data16
mov
stos
mov
hlt
mov
lcall
std
add
nop
mov
inc
leave
in
push
out
rcrb
push
lds
imull
or
push
inc
xor
loop
jmp
cmp
test
add
div
es
xchg
dec
jg
inc
int3
add
mov
cmpsb
sbb
in
xchg
ss
push
cmp
dec
out
xor
in
aad
loop
cmp
rcr
or
push
ljmp
clc
dec
lcall
fidivl
jl
daa
cmpsb
lods
push
mov
sbb
mov
inc
cmp
push
cmp
or
xor
shl
push
mov
shr
jne
ret
loopne
jne
scas
movsb
fwait
dec
mov
push
movb
stos
mov
xor
jmp
sahf
and
pop
cltd
fcoms
pop
into
and
fbld
clc
mov
jae
jnp
sub
mov
cmp
inc
addr16
dec
adc
sarb
and
pop
adcb
aad
leave
das
add
enter
test
fsubs
adcl
mov
stos
out
insb
fimuls
mov
call
xor
movsb
cltd
lods
add
cmp
adc
jns
popf
aaa
out
aaa
in
aam
enter
mov
pushf
xchg
xor
mov
or
lds
aaa
jecxz
imul
lods
cltd
cwtl
rcrl
popa
and
daa
xchg
dec
sbb
aas
dec
stos
pushf
add
pop
sti
fbstp
dec
popa
in
jo,pn
in
adc
mov
dec
push
out
adcl
inc
iret
mov
mov
data16
lcall
adc
xor
sahf
cmp
gs
pop
cmp
ds
push
mov
fistpl
stos
dec
loopne
sbb
stos
test
mov
notl
rorb
pop
dec
dec
inc
pop
aaa
imul
mov
cmpsb
sub
cmp
pop
rorb
data16
xor
adc
sub
in
inc
adc
jp
and
cmc
into
jecxz
insl
mov
outsb
aad
add
movsb
test
jg
push
mov
inc
add
cmp
imul
cltd
inc
ja
mov
pop
push
scas
fneni(8087
stos
aaa
out
ss
std
add
xor
cwtl
pop
or
dec
mov
and
sbb
ja
mov
inc
jmp
push
es
jb
mov
popf
stc
test
bound
rcrl
sbb
test
xchg
icebp
mov
sub
pop
imul
xchg
mov
sbb
popa
popa
mov
sbb
cmp
daa
jp
loope
or
dec
dec
mov
mov
pop
push
aas
inc
fistl
xchg
cli
insb
push
mov
mov
and
and
mov
test
or
jae
mov
pop
or
mov
mov
leave
shlb
notb
pop
inc
ja
or
addr16
pop
stc
push
lds
mov
mov
in
dec
pop
xchg
jecxz
adc
or
sbb
bound
jno
cwtl
out
and
jmp
rorb
push
mov
fdivrl
sub
push
loope
and
dec
or
ret
shl
fistpl
cltd
lock
shrb
pop
xchg
insl
jne
cli
scas
inc
out
loope
popa
push
in
inc
xchg
xor
enter
sbb
or
jb
xor
arpl
imul
mov
mov
and
and
jp
adc
imul
aas
dec
inc
leave
dec
jp
jg
gs
adc
add
dec
fs
cwtl
outsl
jp
add
xor
dec
out
pusha
xor
imul
test
out
or
ja
jne
cmp
or
mov
pop
aas
push
inc
lods
jmp
pop
cmp
out
adc
sbb
push
add
jp
ret
clc
cmpb
xor
add
aad
dec
xchg
jno
jp
js
je
fxch
in
loope
xor
imul
xorb
rorb
gs
jmp
mov
jle
pop
sti
add
iret
out
sub
add
adc
repnz
push
cmc
cmp
scas
into
pop
sub
lret
mov
sahf
faddl
hlt
cli
dec
lods
mov
jne
inc
pop
out
push
mov
les
adc
or
mov
push
mov
dec
das
jmp
les
push
inc
add
mov
jge
jnp
jae
ficoms
out
lods
xchg
ret
inc
mov
mov
int
pop
add
pop
and
ror
and
imul
inc
fnsave
or
int3
sbb
loop
roll
cwtl
mov
movsb
test
cltd
jecxz
jae
mul
ret
aas
mov
loop
pop
xor
jp
jne
popa
dec
dec
repnz
in
in
push
fwait
sahf
add
outsl
adc
push
lods
inc
or
aad
sub
adc
add
jno
stos
sub
stos
arpl
dec
pop
xchg
and
pop
insb
jp
repnz
dec
jmp
popf
dec
aaa
cwtl
add
or
xor
cmp
mov
adc
sub
stc
daa
cmp
test
fmull
std
add
or
add
cltd
xchg
mov
arpl
ljmp
cli
shll
or
inc
fcomps
into
mov
sub
pop
clc
inc
pop
mov
sbb
popf
in
scas
pop
jbe
sub
sub
orl
xor
or
push
push
and
loopne
add
cmpsb
jg,pt
bound
dec
insb
mov
push
cmc
shll
cmc
lock
ds
cmp
mov
pop
cld
xchg
mov
ret
pushl
insl
ljmp
cwtl
test
in
jmp
sbb
testl
dec
sbb
xchg
sahf
mov
mov
mov
orb
or
inc
push
or
push
adc
sbb
xor
xchg
add
popf
insb
lret
iret
and
shrl
push
addb
xchg
or
int3
fisttps
cli
fcompl
lds
mov
imul
xchg
lods
out
pop
xchg
add
ss
insl
stos
or
and
pop
scas
out
and
cmc
out
sti
or
pop
xchg
imul
sub
pop
rolb
dec
inc
push
out
pop
cmp
push
push
push
pop
jb
lret
inc
dec
push
dec
das
test
pop
mov
jmp
pop
sub
fmull
push
mov
fsubl
lcall
mov
scas
inc
pop
in
fsubrp
stos
sbb
sbb
xchg
test
js
pop
mov
fwait
aam
dec
cmp
and
notb
les
jno
in
repnz
stos
frstor
addl
add
cmc
outsl
xor
ret
xor
add
adc
push
pop
cmp
mov
jns
insl
pop
pop
mov
add
call
test
je
outsb
pop
add
sbb
aaa
and
push
rcrb
sub
cltd
es
or
scas
stos
mov
pushf
stos
adc
inc
inc
loope
jno
cmpsl
or
insl
xchg
sbb
mov
pop
dec
cwtl
rorb
mov
adc
movb
or
ror
ss
jns
movsl
fisubrs
push
cld
ret
decb
jae
cmp
push
mov
mov
inc
mov
xchg
rorb
sub
out
dec
lea
mov
mov
rclb
in
jo
out
fcoms
push
ja
mov
aad
xchg
test
lret
adc
push
cmp
add
daa
les
sbb
pop
mov
or
xchg
clc
xor
xchg
lds
lds
shll
outsb
daa
mov
fs
adc
and
fsubs
jb
pop
jns
ss
xchg
push
pop
fwait
inc
mov
or
mov
adc
sub
sub
ret
repz
std
lcall
jno
pop
lcall
lea
mov
sbb
pop
in
shlb
cmp
rolb
sub
or
pushf
mov
push
in
add
aas
imul
mov
jnp
in
push
repz
sub
cld
scas
pushf
mov
daa
int
mov
adc
cmp
insl
push
xor
pusha
adc
cmp
jg
jmp
push
jne
cmp
pop
lahf
mov
and
daa
in
inc
push
push
les
das
dec
out
or
push
sub
pop
mov
cmp
pop
xor
aam
xor
mov
xor
add
mov
mov
fimuls
fiadds
add
sub
mov
inc
lea
jns
adc
mov
aaa
cmp
mov
push
adcb
test
jo
mov
jmp
push
mov
pop
cmpl
loop
in
cmp
popa
xchg
inc
cmpsl
aad
sbb
xor
jbe
clc
mov
xor
lcall
ja
hlt
cmp
popa
push
pop
inc
jge
fcompl
xchg
pop
inc
ficoml
push
mov
sarb
push
js
sub
mov
cmc
test
and
jecxz
mov
sub
in
push
imul
gs
sub
xchg
cmp
sub
jb
jbe
lds
in
jae
sbb
jae
cld
fsubl
xchg
cmp
dec
xchg
xchg
sbb
int
scas
repz
in
adc
mov
das
loop
adc
jecxz
or
test
mov
aam
std
pusha
leave
sub
adc
in
inc
mov
sub
loop
test
in
sbb
xor
mov
aam
sub
xor
mov
sub
sub
popl
pop
aas
ds
leave
jecxz
sub
shll
sbb
into
pop
inc
aas
xchg
cltd
push
xchg
mov
sub
jg
lds
jle
js
int3
shrl
cmp
adc
xchg
push
sbb
jmp
pop
jmp
movq
fninit
fistpll
fstps
rcrl
fldenv
inc
mov
jge
movsl
in
ror
cltd
pop
fsubrl
cmc
push
and
dec
and
xchg
popf
xchg
and
adc
cwtl
mulb
popf
pop
inc
push
mov
andb
cmpb
mov
adc
jbe
out
aas
push
mov
fidivrl
cltd
sub
xor
mov
int
imul
shrl
xchg
xlat
pop
sub
adc
jp
ret
xor
stos
lret
cmpb
pop
or
ja
adc
push
scas
gs
sbb
push
imul
jns
xchg
not
rclb
out
mov
xchg
stos
jecxz
test
pop
in
stos
jb,pn
push
stc
insb
sarb
pop
jl
lret
arpl
fmuls
and
xor
ljmp
fcmovu
bound
lods
sti
pop
dec
lret
lret
mov
add
bound
enter
in
fisttpl
popf
loopne
scas
jp
loop
out
int
cmp
out
jbe
fsubr
inc
cmpsl
lea
fdivl
xchg
das
int3
mov
lds
fucomp
shll
jmp
cs
jl
adc
test
xchg
into
cmp
jnp
jecxz
xlat
cltd
mov
pop
clc
rclb
add
fwait
dec
adc
mov
xchg
mov
ds
nop
iret
inc
int
sbb
inc
fdivrl
testb
cmp
or
daa
dec
jle
dec
add
xchg
mov
rorl
and
pop
je
icebp
dec
or
ljmp
pop
jb
ret
rep
ja
sbb
pop
pop
xchg
out
cmp
loopne
fidivl
mov
in
rcl
lods
call
mov
loopne
and
lahf
popf
pushf
sbb
js
jns,pn
enter
push
xchg
mov
in
jge
dec
jmp
sbb
aaa
mov
test
add
aam
cmc
pushf
mull
nop
cli
lds
outsb
ret
mov
pop
push
sbb
push
nop
das
into
test
out
test
push
xor
inc
int
into
push
and
je
mov
add
nop
out
jmp
scas
mov
lods
ja
cmp
iret
push
arpl
cld
sub
add
stos
js
aad
iret
inc
adc
cld
cmp
int3
adc
dec
mov
sti
lret
jl
dec
ret
xchg
adc
shrd
add
pop
test
repz
in
movsb
sub
negl
mov
cmc
stos
fldenv
cwtl
call
inc
push
fcoms
aam
xchg
movsb
push
sbb
icebp
xlat
jnp
jle
pop
hlt
cmp
insl
jmp
mov
push
cltd
ss
jle
mov
insb
push
out
cmp
mov
cmp
jae
jge
aam
cmc
push
int3
stc
sub
fsts
daa
mov
xchg
punpckhbw
jns
add
jle
or
jmp
inc
mov
call
push
mov
xchg
dec
movsl
jg
pop
or
out
scas
fwait
jle
dec
or
in
mov
jg
arpl
xchg
rclb
movntq
out
filds
enter
or
lret
cmpsb
mov
adc
shrb
sbb
movsb
out
in
xor
sub
cmp
enter
sbbb
cmc
push
enter
pop
pop
dec
les
cmp
inc
add
push
sub
movsl
jge
xor
in
inc
mov
push
sbb
push
xchg
ret
in
add
jmp
mov
or
dec
insl
add
cmp
pop
jp
call
dec
fcomps
movb
mov
and
pminub
add
xchg
mov
jmp
jns
dec
jnp
xlat
push
add
dec
cmpsb
xchg
dec
sbb
add
pusha
jno
mov
bound
or
mov
daa
add
test
out
mov
cmp
cmpsl
jle
lcall
push
loop
push
push
mov
inc
xchg
dec
xor
outsb
or
ret
lock
jmp
dec
add
in
icebp
insb
aad
rsqrtps
lcall
sbb
sub
push
incl
mov
dec
cwtl
das
mov
and
outsl
push
lea
cmp
and
fldl
sahf
push
jb
sub
movsl
dec
add
mov
repz
int3
iret
or
mov
jmp
cli
out
cmpsb
repnz
mov
sbb
sbb
subb
mov
mov
jo
ret
outsb
pop
test
jp
mov
jno
cmpsb
sbb
popa
xor
jle
mov
repz
push
movsb
notb
sbb
jp
pop
xchg
pop
lahf
scas
mov
js
movups
xor
push
movsl
jo
insb
add
movsl
lods
jb
add
mov
stos
fwait
cltd
xchg
and
adc
in
popf
jmp
jb
mov
sub
jg
inc
aam
inc
sub
in
addl
arpl
mov
lds
hlt
loope
ds
jnp
test
out
stos
or
lock
insb
movsb
cs
testb
mov
mov
xchg
sti
popf
adc
pop
repz
pop
inc
and
cmpsb
sub
iret
push
xchg
pop
inc
cltd
xchg
pushf
cld
and
sbb
outsb
aad
ljmp
adc
std
xchg
inc
cltd
int3
push
sysret
and
inc
cli
js
movsl
mov
hlt
inc
into
cmp
xor
lds
jb
push
les
shrl
pushf
fstps
sahf
lods
add
ret
clc
stos
ret
cmp
movsl
outsl
aam
and
inc
fisubrl
cmp
xchg
sbb
rcrl
inc
rorb
lods
push
dec
scas
icebp
ljmp
jl
cmp
int
cmp
cmc
mov
pop
jmp
xor
into
cltd
fwait
sbb
aad
fsubs
mov
leave
jl
mov
push
test
arpl
ret
mov
sbb
pop
jle
shlb
mov
fisttpl
sub
ljmp
xlat
movl
out
bound
xor
ret
popa
shll
add
mov
mov
push
bound
push
scas
out
xor
int
loope
xchg
adc
dec
fisubs
rcl
or
xor
push
aas
std
mov
test
mov
pop
or
pop
cmp
cs
shlb
inc
scas
fs
jnp
insb
rol
push
movzbl
push
jecxz
push
sbb
stos
data16
push
xchg
inc
sub
jge
jo
mov
call
shl
lret
adc
inc
xchg
pop
fidivrl
ret
ja
dec
add
dec
sti
sub
xor
pop
orl
inc
pop
sub
push
xor
mov
ficoms
mov
test
out
jb
cld
pop
adc
xlat
adc
scas
test
test
outsl
js
and
rcrb
inc
jle
jmp
and
and
mov
rcl
stos
xor
mov
xchg
pushf
lods
xor
dec
mov
es
scas
add
sbb
pop
call
add
add
xchg
bound
imul
push
mov
outsb
lea
mov
arpl
sbb
ds
dec
cmc
push
ljmp
push
dec
ret
je
outsl
fbld
push
rcrl
mull
cmp
pop
subb
and
data16
mov
mov
lods
outsb
jnp
cmp
cwtl
xchg
movsb
popa
push
and
xchg
add
lret
bound
outsb
xor
pop
push
xchg
mov
outsl
mov
push
sub
lret
aad
imul
jmp
aas
xchg
cmp
cmpsb
pusha
xor
pop
loop
lret
pop
into
cmp
add
pop
fimuls
jo
jl
ret
aas
adcb
daa
ret
mov
imul
push
lods
enter
cmp
push
hlt
divb
push
mov
ds
pop
cmp
leave
push
aad
subl
xor
icebp
and
aas
imul
sub
jge
inc
dec
mov
push
sbb
arpl
push
mov
loop
repz
rclb
pop
inc
xchg
andb
in
aaa
outsl
jmp
mov
addr16
nop
enter
add
pop
addr16
jbe
mov
loopne
movsl
xchg
fisttpl
cmpsb
test
dec
inc
daa
mov
fsubrs
sub
mov
inc
ret
inc
mov
pop
pop
sub
push
ljmp
cmp
ljmp
fcompl
enter
out
rcr
xchg
or
mov
out
out
mov
ror
add
inc
push
pop
xor
cmp
push
mov
popf
cltd
aas
insb
xor
mov
pushf
mov
dec
fisubrl
movsl
aaa
imul
cmp
lods
lret
je
xchg
push
xor
xor
mov
das
cmp
xchg
frstor
inc
mov
push
insb
jne
inc
xchg
xchg
xor
cs
aaa
sbb
lds
scas
pop
inc
frstor
mov
inc
and
clc
xchg
ret
test
xchg
test
push
or
mov
je
cmpsb
repz
xor
add
mov
mov
sbb
inc
sti
stos
fisubl
push
call
jae
sbb
xor
roll
sub
cmpl
call
in
jnp
mov
repnz
cltd
test
shlb
adc
stos
pusha
in
inc
mov
push
shlb
jb
imul
stos
sub
subl
jns
test
push
in
cmpsl
enter
xor
xchg
add
and
inc
mov
mov
ret
xchg
cmpl
push
arpl
jo
insl
data16
pushf
pop
mov
and
push
mov
sti
or
ljmp
in
ss
fwait
popf
mov
push
out
enter
nop
gs
test
rcrb
and
jno
or
xchg
movsb
les
xor
pop
jecxz
aam
ja
repnz
ret
or
fdiv
rolb
popf
scas
inc
les
add
push
popf
push
aaa
ret
out
mov
and
adc
mov
pop
sub
inc
repnz
mov
jb,pt
pop
pop
sahf
or
inc
add
out
mov
movsl
adc
push
mov
adc
mov
stc
push
pop
lahf
ret
lods
add
add
push
mov
ljmp
jns
ret
cmp
jbe
int
add
xchg
jb
cmp
sub
or
shlb
fsubl
lcall
rcrl
movsl
scas
add
out
loopne
cmp
pop
push
push
dec
mov
call
leave
je
or
and
ja
jl
mov
xlat
cmpsl
adc
std
jecxz
sahf
pop
push
pushf
push
adc
mov
or
sbb
daa
test
push
outsb
repz
scas
and
push
cli
sbb
imul
lret
mov
rol
jne
icebp
mov
pop
mov
inc
xchg
lock
aam
xor
add
mov
popa
xchg
popa
xor
iret
shl
inc
mov
add
loopne
push
sub
imul
push
aas
mov
pop
lea
and
daa
sub
sbb
js
pusha
sub
call
loope
add
icebp
push
xchg
xchg
mov
gs
mov
es
cmp
sbb
add
pop
stos
cmpsb
and
adc
iret
mov
inc
xchg
cmp
add
imul
sbb
xchg
or
in
int3
pop
mov
iret
dec
pop
je
mov
push
mov
pop
mov
push
jae
shrl
mov
lock
gs
fs
mov
add
push
ss
mov
mov
xorl
es
loope
pop
pushl
pop
es
roll
push
mov
add
fwait
push
adc
icebp
call
hlt
data16
cld
scas
push
daa
sub
push
iret
xlat
mov
subl
add
xchg
aam
loop
loope
or
and
iret
mov
push
ljmp
sub
enter
jg
nop
jbe
adcl
test
adc
cmp
cltd
imul
push
cmp
pop
cmp
push
inc
lods
ja
adc
xor
movsl
stos
popf
arpl
and
push
clc
aad
fisttps
into
jb
xor
stc
loop
data16
mov
jb
fistpl
push
fmull
or
aad
ror
add
shl
sub
cmp
sub
adc
pop
jbe
push
adc
cwtl
dec
pop
pop
lods
es
mov
push
sub
sub
and
push
mov
out
fidivs
cli
popf
int
out
adc
dec
dec
xor
adc
sbb
push
push
dec
push
rcrb
sub
negl
sbb
cmc
jb
stos
pop
push
cmp
das
adc
mov
jne
xchg
sub
je
adc
icebp
mov
sub
dec
popf
xchg
inc
push
pop
mov
sub
cmpsb
and
mov
push
bound
jo
stos
data16
mov
mov
mov
sti
pop
cmpsl
jns
sub
xchg
dec
lcall
pop
pop
cld
gs
lea
aad
jno
test
stc
dec
jg
and
cs
push
push
xchg
fbld
in
and
push
jbe
sub
pop
rep
loop
repz
inc
pop
cmpsb
xchg
dec
jbe
cmp
add
pushf
mov
jne
xchg
stc
push
in
cmp
ljmp
shrb
lock
jl
and
sti
js
test
dec
bswap
and
leave
cli
jl
xlat
mov
aas
ret
push
xchg
xor
je
mov
les
addr16
jge
mov
nop
in
adc
sarl
or
je
scas
cmp
int3
jmp
mov
sub
aas
rcll
orb
notb
cmp
dec
subl
loope
scas
or
outsb
dec
sbb
leave
rcrb
dec
aas
sbb
fcomp
or
repnz
xor
push
out
xchg
les
push
adc
push
ror
and
int3
mov
jmp
sbb
push
in
in
mov
out
fimull
cmp
mov
notb
dec
mov
pop
aad
in
test
pavgb
xchg
mov
les
sbb
mov
in
jno
cmp
femms
push
insl
imul
sbb
frstor
jmp
aam
mov
out
pop
xchg
pop
in
btr
jo
dec
dec
repnz
cmp
out
addb
lea
push
test
gs
add
xlat
jecxz
cs
mov
inc
orb
push
jge
scas
in
inc
inc
adc
push
pop
out
data16
push
cmp
outsb
mov
xchg
or
call
loope
mov
jne
gs
and
lret
inc
loope
sub
sub
pop
pop
repz
stc
xchg
add
lods
jg
fstps
inc
sub
mov
lcall
jae
stos
mov
out
dec
jo
mov
dec
sbb
lock
jb
lds
cmpsb
sbb
mov
push
jle
stos
xchg
adc
push
and
inc
stos
incl
fisubrl
pop
repnz
or
daa
icebp
bound
xchg
dec
inc
sub
out
shlb
push
jno
push
mov
dec
inc
lock
sbb
int3
cmp
js
fiadds
or
mov
xor
pop
loop
in
xchg
push
mov
stc
dec
mov
stos
mov
mov
loopne
sub
pushf
jns
or
sbb
push
je
ja
inc
or
mov
push
fsubl
jmp
pushf
pop
dec
into
je
lods
inc
cmc
stos
adc
sub
mov
movsl
push
out
add
add
in
and
add
imul
ret
mov
xchg
jmp
cmovbe
hlt
dec
and
mov
aas
pop
push
mov
mov
adc
fistps
cli
xchg
xchg
jo
cmp
fs
arpl
fwait
cmc
test
jl
dec
push
ja
lret
push
cmpsb
jns
out
lret
xor
leave
adc
cmp
ss
mov
push
std
mov
adc
adc
pop
dec
xchg
sahf
in
lahf
xchg
fistl
mov
test
nop
leave
data16
cwtl
lods
pop
push
pop
sbb
pop
cs
cltd
push
popf
sbb
push
test
repnz
dec
adc
or
add
pop
in
xlat
add
cmpsl
sarl
lret
adc
sti
jmp
pop
cmpsb
pop
push
loopne
add
loop
mov
sarb
in
sbb
dec
pop
jbe
mov
repz
mov
int3
dec
push
jno
jg
cmp
fdivr
outsb
mov
call
loope
pop
xor
out
mov
and
ret
pop
push
cmp
push
xchg
aad
call
loope
ja
inc
inc
aas
sahf
roll
inc
aas
pop
and
add
pop
xor
xor
test
imul
mov
es
lcall
call
inc
jne
pop
xor
sub
adc
mov
mov
mov
orl
mov
inc
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
jmp
and
scas
jecxz
arpl
jns
cmp
push
ljmp
pop
bound
ror
xor
repz
pop
addl
xchg
adc
add
daa
outsb
mov
je
leave
insb
sbb
sbbl
xlat
jge
insl
push
sahf
xchg
push
adc
test
jb
jmp
inc
or
mov
pusha
push
clc
clc
adc
adc
mov
pop
mov
add
lahf
xchg
inc
and
cmp
test
inc
push
cmp
inc
sbb
jb
or
jmp
mov
fcomp
add
push
xor
dec
ficomps
imul
jnp
xor
inc
fadds
xorl
int
jns
loop
push
fsts
cmp
inc
mov
fnstenv
fisubrl
sbb
sti
js
push
xchg
xor
fwait
int3
insb
sahf
or
test
push
je
mov
and
or
mov
cmp
pop
fildl
mov
or
or
sbb
cmpsl
pushf
sub
clc
mov
or
push
mov
outsb
setnp
mov
push
addr16
adc
test
cwtl
xor
pop
sub
xchg
jne
arpl
sbb
lcall
jae
pop
sarl
ret
fwait
cmpsb
mov
pop
push
cld
adc
or
sub
dec
sti
outsl
lret
inc
push
ret
sbb
js
pop
test
xchg
jne
xchg
aad
jp
mov
pop
pop
das
lret
rcr
add
aad
sbb
imul
push
insl
je
push
xlat
lcall
dec
mov
dec
cltd
and
in
inc
add
es
dec
es
push
push
lods
in
jge
sar
into
mov
fwait
push
rorl
push
addb
push
jno
jg
mov
xchg
sahf
subb
inc
mov
pop
insb
mov
into
arpl
rclb
scas
popf
mov
pop
incl
rcll
scas
inc
jp
cmpsb
int3
cmpb
popa
mov
shll
inc
fninit
fdivrl
das
jp
or
inc
les
pop
daa
adc
push
mov
fsubrl
xlat
in
fsubs
lea
lds
es
lret
or
sub
jno
int
inc
aam
jecxz
mov
stos
fisttpl
pusha
or
adc
and
push
adc
sbb
mov
call
add
mov
pop
cli
push
add
aad
mul
enter
stos
nop
inc
in
cmp
ficomps
xchg
push
dec
push
add
xlat
mov
xchg
cmp
mov
mov
adc
pop
pop
test
into
mov
fstl
push
test
into
mov
sbb
in
xchg
test
sub
imul
iret
add
jl
cmp
mov
jmp
shr
push
cmp
push
add
scas
mov
inc
sahf
fldt
lret
out
sub
leave
cltd
or
pusha
jo
scas
decl
xlat
xor
mov
add
inc
call
gs
push
push
push
push
inc
neg
xchg
mov
mov
hlt
shll
jns
sbb
mov
ss
mov
adc
sbb
mov
adc
cli
int3
or
je
jge
xor
pop
std
mov
inc
test
jecxz
inc
pushw
pop
ljmp
sarb
imul
sbb
mov
add
pop
mov
sub
popf
filds
shll
push
into
jns
mov
xchg
fnstcw
imul
xor
jl
inc
push
fsubs
jnp
test
mov
aas
pop
adc
nop
shlb
arpl
lahf
clc
mov
or
test
jns
jmp
std
aad
lcall
popf
fs
xor
pusha
push
dec
hlt
cmp
cld
push
outsb
icebp
lods
gs
jecxz
cmpsb
cmp
shlb
je
scas
int3
loopne
les
push
push
dec
or
in
lods
pop
mov
mov
cmp
mov
pop
ds
xor
rcrl
dec
jae
dec
in
adc
stc
adc
xor
xlat
or
dec
push
or
mov
cmpb
mov
rclb
inc
enter
test
push
add
aas
ja
jae
xchg
fildl
pop
sahf
mov
ret
aam
pushf
inc
push
and
push
js
mov
jb
xchg
sub
jl
andb
cmpsl
popa
jp
cwtl
in
outsl
pop
les
pop
imul
fcmovnbe
scas
imul
mull
jb
mov
xchg
mov
jecxz
mov
inc
inc
add
cld
xor
ds
pushf
fiadds
push
or
fsubr
movsl
inc
inc
or
inc
lock
loopne
orb
mov
push
push
mov
xor
xor
adc
xchg
pop
aam
int
aas
cmp
lret
shl
jp
sub
getsec
test
jle
ljmp
mov
xchg
fsubs
negb
cmp
aam
and
std
je
push
ds
das
jle
mov
pusha
or
lret
lcall
repnz
pop
push
je
jl
mov
xchg
fsubl
sbb
sub
pop
lret
rcl
fwait
and
sbb
clc
xor
outsb
pop
inc
mov
cmp
lret
mov
xor
push
sbb
push
cmp
cmpsb
sbb
fimuls
cmp
sub
fcoml
cmpsl
pop
jp
and
mov
push
icebp
std
aam
mov
aad
sbb
test
jnp
jmp
mov
scas
pop
jno
push
push
test
dec
test
sti
adc
or
push
lods
shl
stos
xor
das
adc
movsl
andb
mov
and
xchg
repz
cmc
cli
mov
add
cli
add
lods
or
sbb
jb
lods
jge
std
pop
push
and
sti
jno
mov
cmp
xlat
mov
dec
push
stc
or
aam
cs
lret
cli
push
xor
cmp
add
pop
xchg
jb
xchg
roll
push
and
rolb
fnstcw
inc
jecxz
xor
cmpsl
mov
rcrb
jmp
test
adc
shrl
shll
data16
push
xor
fsub
xor
add
fidivs
or
sub
jbe
test
cmp
nop
cmc
and
inc
dec
dec
rorb
mov
lock
mov
add
xorb
and
xchg
dec
imul
frstor
add
dec
outsb
push
mov
orl
dec
sbb
leave
or
mov
decl
push
inc
repnz
mov
adc
outsb
inc
in
and
movsl
push
cmp
xor
inc
pop
lock
cmpsb
les
pop
inc
mov
movsb
scas
add
lods
sub
and
fnstsw
ljmp
cmp
xorb
adc
pop
fwait
cmpsl
outsl
sysret
pop
out
insb
and
dec
xchg
stos
fucomp
data16
jno
xchg
adc
scas
dec
adc
aad
in
mov
inc
popf
dec
cmp
lods
adc
aaa
imul
jae
mov
dec
mov
push
mov
add
loop
imul
add
dec
movsb
lret
mov
fisubrs
ljmp
imulb
daa
scas
repz
out
repnz
jns
add
stos
cmp
xor
in
out
rcll
xchg
loop
xchg
scas
adc
adc
pop
sub
cs
pushf
xor
dec
daa
lret
push
test
mov
insb
movsl
xchg
jp
mov
push
add
nop
in
lods
andl
xchg
add
add
mov
cltd
and
cmp
or
les
into
or
pop
dec
xchg
sbb
xchg
scas
mov
push
ret
pushf
loop
xor
sub
ror
mov
jge
bound
fisttpl
imul
addr16
ret
out
push
inc
lret
iret
dec
xor
cmp
shll
jp
or
mov
jb
jae
xchg
repnz
fs
mull
testb
and
mov
fldenv
gs
inc
ja
repnz
xchg
or
call
pop
jp
dec
call
jae
scas
and
or
or
push
xor
mov
push
cwtl
cli
push
dec
aad
mov
hlt
xchg
or
js
lods
bound
mov
lods
mov
xor
push
push
jle
sub
mov
inc
std
incl
mov
sbb
rcr
daa
cmpsl
insl
add
imul
clc
xor
ficompl
xor
dec
cmpsl
mov
jne
mov
add
pop
sbb
pop
inc
mov
lret
aad
xchg
push
fimuls
in
xchg
pop
aas
adc
pop
mov
pusha
mov
mov
repnz
data16
mov
xchg
pop
xchg
popf
aam
dec
push
mov
sub
mov
xor
xchg
inc
xor
cmp
es
rcll
lds
in
inc
xchg
push
lret
mov
cld
dec
bound
cmc
jg
data16
jmp
mov
xchg
pop
hlt
scas
mov
jg
std
loopne
enter
ret
or
mov
mov
leave
mov
xor
fyl2x
push
add
sbb
xchg
jns
xor
push
in
push
mov
push
mov
loop
mov
pushw
mov
dec
out
test
loop
cmpsl
mov
lods
jecxz
mov
mov
sub
enter
repz
push
fnstsw
dec
jns
sbb
pop
cwtl
jl
sbb
lahf
cli
cmp
push
and
pop
cmpsb
jg
xchg
cwtl
xchg
dec
jns
cmp
cmp
dec
mov
daa
push
or
inc
adc
inc
shll
pop
mov
loopne
xchg
sub
push
push
or
outsb
frstor
loop
pop
mov
dec
or
xor
call
imul
xchg
fdiv
adc
ds
lahf
jns
push
mov
loopne
push
pavgw
lods
movsl
add
mov
movsl
cwtl
test
jl
adc
insl
push
xor
nop
pop
jnp
dec
mov
nop
fisttpll
ret
sbb
jbe
cli
cmp
xchg
xchg
inc
movsl
lods
push
inc
into
pop
xor
ljmp
sub
xchg
idivl
shlb
pop
and
mov
stc
jae
push
cmpsl
sbb
jne
movsb
insl
into
mov
push
xor
dec
add
mov
inc
test
jb
ret
lcall
ret
gs
or
add
or
cmpsl
cmp
mov
clc
mov
loopne
call
addr16
sub
jl
and
das
notl
push
or
push
ja
stos
jnp
aam
jae
mov
dec
neg
sub
jge
pop
jp
psraw
mov
xor
aad
mov
adc
cmp
shlb
xor
pusha
xchg
movl
mov
movsl
xor
call
push
ljmp
add
jnp
aam
inc
xor
sbb
scas
loop
int
outsb
lret
aaa
pop
cld
lahf
mov
sahf
mov
dec
cmpsb
sbb
sbb
mov
psubusb
js
lods
aad
icebp
jecxz
clc
or
jp
and
out
shlb
pushf
xor
enter
cmc
sar
push
or
scas
inc
dec
out
pop
pop
jp
int
lret
jg
int3
cld
inc
jge
in
push
mov
enter
push
ss
int3
in
inc
and
xchg
daa
ds
into
mov
or
push
lcall
or
lock
dec
sti
push
lods
and
iret
cmp
mov
cmp
adc
pop
xor
sub
ss
xchg
mov
xchg
push
jno
test
add
neg
xchg
arpl
mov
fs
movsl
daa
out
xor
insb
xchg
ret
dec
jecxz
nop
jnp
xlat
adc
shll
sti
out
sub
cmp
sbb
pop
popa
push
bound
jno
filds
test
jns
jns
scas
ljmp
out
stc
lret
cwtl
scas
or
pop
pop
xchg
or
push
je
mov
jnp
or
hlt
fwait
pop
jge
inc
mov
inc
adc
mov
xlat
mov
das
shll
mov
add
dec
cmc
mov
sub
les
sahf
icebp
mov
push
ljmp
imul
add
cmp
movsl
xor
or
pop
dec
cmp
in
je
sub
fs
shrl
lret
sbb
add
les
aad
jae
pop
sub
cmpsl
mov
repz
xchg
sub
cmp
jno
mov
enter
and
loop
sbb
ja
lds
and
cld
pop
mov
xchg
inc
js
repnz
getsec
sbb
into
shlb
int
sub
insl
cwtl
pusha
inc
loop
testl
inc
into
addr16
lret
push
jg
add
push
push
adc
repz
je
lcall
gs
ret
jge
jp
aas
adc
or
or
jns
lock
pop
cwtl
push
ds
call
cltd
push
daa
stc
pop
jl
test
xchg
mov
cmp
inc
push
imull
sub
fdivrs
cmp
and
dec
adcl
and
clc
idivb
test
adc
shr
repz
cmp
inc
add
xchg
add
push
and
cs
add
dec
sbb
add
cmp
and
add
leave
xchg
pop
sub
testl
inc
jge
adc
ja
fisubs
loop
sub
mov
int3
mov
sbb
jns
or
push
mov
aad
adc
and
sti
fisubs
imul
jns
sti
test
add
lret
es
cmpsl
int
pushf
popa
int
rcll
xchg
inc
push
icebp
pop
bound
or
add
xor
aam
clc
mov
icebp
lret
add
test
fsubr
data16
ds
idiv
sarl
jne
jbe
mov
nop
dec
scas
cmpsb
pop
or
cmp
mov
cltd
mov
jg
cli
fnstsw
std
lds
add
enter
adc
mov
sahf
mov
lods
leave
jne
push
adc
push
out
nop
lret
imul
imul
jmp
lods
jl
lret
add
mov
ss
push
mov
int
lods
lea
pusha
push
dec
xchg
lods
sbb
jp
cmp
ret
mov
daa
icebp
inc
loope
mov
push
stc
or
xchg
add
push
xlat
fs
mov
lea
outsl
inc
mov
pop
out
add
sarb
ljmp
xlat
out
mov
or
lahf
ss
cmp
adc
xor
cmp
daa
sti
sbb
out
lods
xor
inc
mov
test
ffreep
jl
std
inc
pop
jle
jecxz
mov
adc
rcl
cmp
jae
mov
jo
popa
out
mov
xchg
jae
enter
inc
or
push
lahf
arpl
mov
insl
xor
dec
stos
in
push
add
cmp
cli
sub
mov
mov
dec
mov
inc
jne
icebp
push
lods
mov
popf
push
ret
jge
push
ss
ret
stos
inc
nop
sub
lret
int
cmpsl
test
out
mov
jnp
ss
inc
push
mov
mov
call
inc
lret
dec
das
roll
jp
inc
mov
les
imul
mov
mov
inc
jle
push
fcoms
and
insb
mov
ljmp
jecxz
pop
sbb
jp
mov
movsl
push
xchg
inc
pop
or
ret
or
and
mov
aaa
add
push
loopne
fsubrl
push
or
dec
xchg
cmp
imul
pop
sarb
push
add
cmp
pop
int3
iret
xchg
mov
xor
push
pusha
and
and
stos
fs
adc
sbb
mov
test
int3
int
and
sahf
int3
ja
xor
pop
fcomi
jmp
out
arpl
lds
insl
push
xor
dec
xchg
aam
aaa
data16
sbb
mov
mov
sbb
adc
mov
fmuls
push
sbb
add
andl
xchg
scas
xor
in
mov
or
data16
mov
xor
fs
lods
xor
pushf
lahf
fsubs
cmp
outsb
mov
and
add
pop
in
out
pextrw
adc
sub
jg
mov
sbb
ja
inc
jno
in
shll
pop
mov
rorl
cld
cmc
pop
fsubrp
lea
je
xchg
ss
arpl
aam
sbb
jno
stos
mov
sbb
test
xor
aam
es
scas
pop
dec
int
aas
sub
sub
adcl
lock
xlat
out
adc
xorl
inc
mov
and
dec
incl
pop
jecxz
fdivrp
jne
and
pop
jl,pn
dec
mov
xchg
mov
std
jo
shll
mov
push
out
inc
out
and
jl
mov
flds
rorl
bswap
sub
push
fnsave
mov
xor
push
adc
out
push
sti
inc
cltd
cld
jle
aam
mov
xor
adc
ss
and
push
sbb
mov
and
xor
sbb
mov
xor
pop
mov
bound
lret
aam
mov
push
sarl
pop
pop
popf
sub
sub
es
jle
xor
js
sub
popa
inc
mov
fs
out
xchg
and
fwait
idiv
jle
aam
push
mov
or
sbb
jns
sti
idivb
inc
jns
sahf
cmpl
jl
ljmp
sbb
mov
jmp
xchg
xor
xor
sub
xor
sti
popa
jmp
mov
inc
pop
mov
cmpsl
call
push
or
std
adc
xor
ret
movsl
xchg
sub
xchg
and
call
xor
cwtl
stos
mov
scas
mov
and
sbb
ds
loop
out
jns
popf
mov
imul
cmpsl
xchg
nop
dec
idivb
dec
add
add
ds
pop
je
sbb
sbb
add
and
addr16
push
xor
std
xchg
push
xchg
push
jmp
test
pop
loop
jns
ret
adc
inc
and
incb
test
dec
aas
push
cmpsl
cmpl
adc
cmp
jno
ret
out
sub
nop
jl
dec
push
cmpsb
je
mov
xchg
xchg
jg
pushf
addb
xor
pop
pop
mov
pop
ret
lds
inc
xchg
bound
pop
subb
ret
jle
mov
lret
les
dec
mov
les
push
sub
js
xchg
pop
mov
bound
fbstp
or
fisubrs
addr16
dec
sti
movsb
mov
mov
lahf
aam
dec
xchg
ja
pop
mov
lea
cmp
push
mov
lahf
add
jp
jp
daa
jmp
pop
cmp
into
mov
insb
dec
sbb
jb
inc
mov
mov
repnz
pusha
test
imul
out
in
in
lods
xlat
dec
or
lods
shl
dec
dec
fldt
jno
or
vmwrite
sarl
test
lods
mov
imul
cmp
add
xor
mov
repz
or
push
movd
ret
test
push
mov
mov
lods
cmp
into
xchg
pop
cld
xor
mov
xchg
lds
ljmp
sar
and
jmp
dec
scas
xchg
inc
mov
sbb
ret
jl
dec
add
mov
xor
ja
cmpsb
stc
fists
and
ret
mov
sub
xor
fstps
mov
mov
and
pop
sub
in
push
cld
in
and
push
outsb
outsl
andl
shll
push
pop
aas
dec
sub
sahf
and
movsl
lea
jg
pop
and
ret
sub
or
ret
add
mov
and
mov
cs
insl
mov
mov
inc
sbbb
or
ss
fsubr
adc
rcrb
dec
in
cld
sbb
lret
sahf
cltd
push
sti
dec
push
mov
outsb
dec
inc
cld
and
push
mov
push
inc
fs
sbb
add
cwtl
mov
and
in
dec
push
dec
call
subb
cmc
sbb
popa
inc
lahf
stc
and
pop
push
divl
sbb
add
sbb
jnp
into
mov
push
sbb
mov
jg
sbb
cmpsl
sahf
arpl
out
and
data16
dec
inc
in
mov
jl
loope
sti
and
stos
das
in
rorb
rolb
js
insb
jb
mov
xor
or
hlt
rcrl
push
or
adc
loop
adc
in
lea
out
dec
dec
and
push
and
adc
andl
fimull
pop
mov
pushf
or
test
sub
insb
mov
int3
test
inc
add
inc
cmp
sbb
pop
sarl
sbb
or
mov
inc
xor
divl
or
push
add
and
adc
sbb
stc
ss
mov
xchg
addr16
push
mov
cmc
mov
and
movsl
aad
hlt
scas
out
mov
pusha
dec
pop
dec
sub
fcomip
xor
push
stos
or
std
inc
xlat
pop
or
sti
adc
cs
ja
popf
hlt
insl
ret
inc
js
sbb
clc
and
mov
push
jmp
addr16
cmpsl
pop
push
imul
sub
adc
stos
jmp
mov
mov
sbb
addr16
std
cmp
jmp
fs
add
jmp
jl
lahf
sbb
and
dec
lret
mov
pop
jmp
adc
insb
mov
in
loop
sub
rcl
sub
mov
xchg
testl
rcll
cmc
scas
jo
scas
xchg
hlt
notb
pop
das
ffree
mov
cmp
roll
out
inc
push
inc
xchg
adc
arpl
int3
ds
fs
mov
ror
jmp
rcl
stos
and
mov
mov
pop
mov
cmp
clc
xchg
dec
lock
testb
xor
out
arpl
inc
xor
mov
and
or
cs
or
inc
imul
jg
add
ljmp
and
xchg
and
add
sub
ja
adcl
sahf
or
dec
fidivs
mov
jp
add
and
adc
xor
cmp
sahf
mov
je
and
pop
aam
xchg
scas
into
xor
movsb
dec
jp
xchg
cli
or
push
dec
lcall
repz
andl
push
sahf
call
jbe
lods
ja
pop
idiv
repnz
out
push
es
lods
inc
les
cmc
fcompl
adc
cmp
push
mov
jno
rorl
mov
lret
add
ret
mov
jecxz
test
push
fs
leave
cwtl
mov
inc
fs
inc
adc
iret
sub
out
test
push
loop
loopne
imul
adc
push
into
cmp
inc
ffree
shrl
loop
imull
gs
xorl
popa
or
mov
and
sar
sbb
add
addr16
insl
out
xchg
dec
fsubrl
and
inc
xchg
fisttpll
mov
int
loopne
in
pusha
jl
push
xchg
psubd
fs
nop
sbb
insl
sbb
jecxz
fs
inc
fdivp
xchg
cltd
popa
or
xorl
in
fadds
aad
push
inc
sti
idivl
aad
inc
and
repz
std
pop
adc
and
sbb
xchg
loopne
add
or
add
dec
xor
xchg
inc
inc
push
inc
jo
cmp
xchg
xchg
dec
add
fs
js
push
daa
test
mov
andb
out
mov
jo
mov
imul
jmp
cmp
add
xor
dec
jno
lret
movsb
aad
enter
push
cmpsl
jmp
movsb
pop
xchg
mov
popl
pop
pop
scas
cld
shll
sbb
push
adc
mov
lods
cwtl
aam
lcall
cmp
adc
jbe
sub
insl
mov
addr16
jge
push
jns
gs
mov
dec
sbb
jmp
leave
pop
ljmp
call
push
ja
daa
loop
andb
xchg
int3
sub
cs
lea
and
divb
nop
mov
jecxz
aam
adc
cmc
cmp
mov
jbe
push
mov
mov
cmpsb
ja
pop
out
fwait
notl
pop
fistl
call
push
adc
hlt
lcall
push
add
addr16
pop
sbb
aaa
xorb
jnp
addb
mov
cmp
pop
dec
clc
pushf
and
pop
out
pop
rcrl
in
add
mov
call
rolb
je
or
xchg
daa
mov
xor
jg
cmpsl
or
xchg
stos
mov
rcll
mov
rcl
add
xlat
jno
cmpsl
lods
cltd
sbb
lcall
addr16
cmp
and
stos
shl
insl
ja
mov
inc
xchg
js
inc
and
dec
sbb
out
mov
jl
and
adc
sahf
mov
aam
popa
add
cmc
aaa
shl
pop
adc
sub
out
mov
jle
loope,pt
shlb
insl
insb
rclb
cmpsl
js
mov
outsb
stc
nop
mov
std
out
push
adc
or
add
aad
daa
lods
mov
jle
into
sub
xor
push
nop
int
inc
mov
out
inc
and
or
cmp
loope
nop
xor
mov
sbb
outsb
xlat
mov
ret
mov
mov
js
cmp
fwait
push
dec
xor
repnz
mov
cmpsl
add
jl
sar
and
sbb
pop
push
jle
adc
addl
mov
inc
and
cmp
jmp
mov
and
cltd
mov
mov
mov
out
mov
fcmovb
push
cltd
jo
push
outsl
js
adc
add
pop
mov
fdivrs
cmp
test
mov
mov
add
insb
dec
int
into
arpl
cmpsb
in
mov
adc
cmp
jmp
inc
dec
loop
jecxz
add
push
fdivrs
pop
cmp
mov
outsl
and
ja
movsb
gs
xchg
add
mov
mov
movsl
adc
test
faddl
ret
dec
lret
ret
inc
push
xchg
gs
jno
bound
in
loope
dec
xor
fwait
push
les
add
and
sbb
pop
int3
dec
mov
fmull
ret
adc
jmp
xchg
jle
fists
out
sub
fs
cli
mov
and
or
xchg
movsb
pop
in
dec
mov
xchg
stos
jp
sub
adc
repnz
gs
sti
incl
mov
xchg
hlt
sti
jmp
lret
repnz
pusha
xchg
sub
xlat
adc
clc
les
call
cwtl
pop
cmp
add
cli
ror
pop
mov
cltd
jecxz
inc
sbb
in
xor
dec
jbe
into
fwait
xchg
mov
xor
imul
xchg
mov
out
dec
mov
and
jp
or
in
push
cmpsl
pop
sub
mov
fwait
adc
dec
out
pop
add
jno
ret
imul
jg
test
std
pusha
fildl
mov
into
mov
sbb
dec
stos
sub
jg
cmp
in
cwtl
mov
mov
xor
insl
mov
sbb
lods
pop
nop
pop
mov
mov
frndint
pop
test
in
iret
push
ljmp
gs
cmp
sub
filds
out
mov
gs
sub
repz
roll
jbe
xchg
gs
andl
inc
cmp
nop
push
ret
pop
test
sbb
mov
pop
es
add
lds
cmp
insl
cmp
mov
lea
popl
adcl
xchg
test
test
mov
into
cld
mov
dec
imulb
lods
mov
mov
lret
push
xchg
mov
js
and
or
data16
dec
push
and
data16
mov
scas
movsl
add
insl
mov
ja
out
in
mov
dec
imul
xor
fiadds
dec
sbb
popl
insl
sti
shrb
xchg
insl
sub
or
cmp
push
adc
and
add
pop
mov
inc
movsb
jo
cmpsl
cmp
scas
rclb
subl
mov
ret
andl
cmp
pop
xor
push
xchg
adc
and
enter
lods
dec
stos
adc
loop
xchg
sarl
xchg
mov
loop
jecxz
sbb
pop
mov
mov
xchg
fimuls
div
sahf
outsl
cld
idivl
push
mov
out
shll
push
dec
and
fidivl
or
jne
push
inc
xchg
outsb
call
aas
aam
sbb
pushf
addr16
lods
jns
pop
in
mov
cmp
fnsave
loop
mov
lea
fildl
data16
popa
mov
ds
into
jae
pop
movsl
push
push
adc
pop
sbb
jno
and
xor
stc
push
and
out
push
ss
or
icebp
push
pop
sbb
aas
nop
andl
add
pop
push
mov
mov
mov
mov
lods
cli
rcr
lods
dec
mov
mov
adc
and
sub
pushf
push
mov
pusha
or
leave
push
lret
mov
jne
mov
or
in
add
aas
call
and
jns
in
add
and
mov
pop
xchg
lret
xchg
inc
sbb
lea
mov
pushf
jl
push
cs
inc
les
ficomps
xchg
mov
cmp
push
lahf
and
aaa
loopne
adc
flds
cmc
xor
outsb
jl
hlt
les
rol
pop
mov
inc
shll
sub
dec
test
insb
daa
das
jae
xchg
scas
jmp
jae
sbb
loopne
outsb
sbb
popf
fcmovnb
jl
fsts
ljmp
imul
arpl
push
cmc
shll
xchg
in
out
into
xchg
lea
jecxz
nop
or
xorb
js
ds
jmp
mov
dec
outsl
sbb
icebp
outsl
adc
push
jle
jg
mov
mov
in
inc
dec
push
inc
xor
rorl
mov
shll
sti
mov
imul
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jmp
lods
jbe
loop
jmp
into
cld
scas
in
mov
pop
bound
adc
or
jl
mov
jne
popa
loope
cmp
lods
lret
dec
adc
cs
fwait
sub
es
inc
jne
lods
lret
rolb
mov
fimuls
orb
fs
sahf
push
hlt
loopne
mov
daa
adc
sbb
and
adc
mov
dec
test
jecxz
iret
or
lcall
mov
xchg
xlat
shlb
test
push
ljmp
dec
stc
jo
or
je
into
jge
outsb
arpl
popa
xchg
inc
mov
imul
add
popa
out
pusha
xchg
cmp
subl
xchg
cltd
mov
cmp
sarb
scas
fisttpll
add
add
aaa
shll
ja
leave
sub
call
ljmp
dec
xchg
std
xor
jae
repnz
jns
xchg
sub
and
sbb
mov
lcall
push
jg
dec
and
pop
das
mov
dec
lods
popl
imull
insl
push
sbb
and
addb
pusha
sub
or
loop
push
das
pop
push
and
sti
cmpsl
mov
or
or
popf
pop
pop
push
push
push
fists
mov
outsl
dec
lret
fstps
lds
clc
and
jns
xchg
cmp
inc
mov
jnp
sbb
orb
pop
mov
pop
aam
push
or
pop
mov
daa
sub
lahf
scas
ds
out
popf
movsb
pop
adcb
xor
jae
push
adc
pop
or
mov
jne
lahf
pop
or
sahf
sbb
lods
jmp
xchg
adc
pop
push
into
leave
jl
sahf
sub
lods
test
hlt
das
push
mov
sarb
pop
sarl
cwtl
repnz
movsl
aam
mov
inc
cltd
sub
in
leave
mov
fbstp
frstor
leave
inc
mov
test
fwait
rcrl
cmp
mov
imul
out
out
in
pop
xchg
cmp
push
hlt
test
mov
imul
adc
push
fldcw
sub
faddl
movsl
std
std
dec
repz
mov
sbb
pushf
and
clc
add
mov
mov
and
fucomp
xchg
mov
sub
mov
or
jno
adc
xor
lock
cmp
cld
xor
subl
clc
stos
fwait
lret
aas
lret
mov
pop
ja
xchg
and
lahf
cmpl
sub
int3
cmpsl
jmp
dec
shrb
aad
bound
adc
js
lods
pop
ljmp
cmpsb
fwait
test
xchg
mov
stc
fwait
sub
divb
mov
jg
mov
insl
fimull
pop
out
lds
std
lods
rorb
cmp
adc
notl
mov
loop
dec
mov
or
cwtl
dec
adc
addb
adc
lret
icebp
and
lret
mov
mov
nop
and
mov
in
jns
mov
mov
lds
push
mov
xor
ss
sti
jle
jmp
adc
adc
insb
sbb
jecxz
pushf
xor
xchg
mov
push
out
mov
jbe
sub
cmpsb
leave
ja
and
pop
sbb
or
push
pop
clc
xor
outsb
paddq
pop
test
mov
xchg
add
es
arpl
mov
jb
mov
xchg
xchg
leave
loopne
cmp
test
push
shr
xchg
dec
mov
adc
sbb
xchg
test
sbb
lock
mov
push
loopne
mov
test
sub
idivl
pop
sbb
jno
ja
mov
adc
inc
xlat
push
clc
xchg
dec
dec
fiaddl
fmull
cltd
sub
adc
mov
pop
gs
fnstsw
lods
iret
add
ret
decl
aad
pop
adc
or
pop
push
pop
sahf
xchg
jge
shr
or
mov
adc
pop
jp
test
xor
ja
out
xor
cwtl
add
fsts
lret
std
dec
or
adc
xor
mov
rorb
push
imul
int
test
div
mov
mov
aas
push
sbb
scas
cwtl
sbb
movsl
iret
jge
or
and
in
rorb
mov
xchg
aam
sbb
add
sbbb
ds
cwtl
mov
repnz
jmp
add
pusha
adc
xor
int3
sti
pop
dec
pop
inc
push
push
mov
ja
leave
or
ret
sub
adc
pop
psubsb
mov
fbld
lods
xchg
loopne
fsubrs
inc
xchg
push
test
xchg
pusha
orl
sub
daa
div
xlat
fwait
cmc
stos
adc
shll
fisttpll
xchg
jecxz
addr16
cld
lret
loope
adc
stos
popa
imul
pop
nop
or
xor
ss
cmp
andb
data16
sub
test
lods
mov
push
mov
stc
inc
gs
or
pushf
sbb
jmp
iret
jb
les
xchg
fwait
arpl
rcrl
push
ja
in
jbe
jae
fs
fstpt
minps
lods
jl
xchg
sub
mov
push
ret
cmp
ja
cwtd
movsl
stos
xchg
hlt
dec
jae
lret
pop
mov
and
das
fsubrs
js
decl
mov
addr16
bound
or
aaa
inc
fs
add
nop
mov
or
gs
mov
jbe
push
stos
mov
lds
mov
lds
sar
xor
leave
jnp
push
hlt
push
push
adc
js
jae
push
sbb
repz
call
push
sub
jmp
in
add
test
gs
sub
into
pop
sub
les
adc
addb
imul
fcmove
pop
aam
inc
cmpb
fwait
scas
sbb
mov
fwait
mov
mov
xor
mov
pop
adc
xchg
sbb
pushf
inc
jmp
ret
mov
inc
pop
cmp
scas
in
inc
push
cmp
sub
adcb
fmuls
les
mov
add
outsb
xor
popf
sub
inc
loope
push
jno
inc
mov
leave
mov
xchg
jb
cmp
and
mov
stos
or
movsb
int
repz
enter
mov
data16
pop
mov
and
daa
inc
sbb
sbb
xchg
cli
fmull
je
repnz
hlt
pusha
pop
scas
fldt
inc
jbe
ja
push
xchg
dec
xor
lods
aas
inc
push
mov
mov
add
aad
xlat
shrl
rolb
mov
pop
pop
xor
mov
and
in
lock
mov
aaa
dec
xchg
xor
cmpb
ss
rcrl
inc
into
int3
in
sbb
push
insl
xchg
in
movsl
sub
inc
jl
push
sbb
inc
dec
add
xchg
sbb
jo
adc
inc
loope
ror
addr16
mov
out
or
pop
repnz
cld
mov
mov
in
xchg
outsl
push
jp
sub
insb
dec
push
test
call
add
sbb
push
inc
xchg
mov
adc
ret
mov
push
testl
xchg
mov
pop
mov
insl
sar
popf
sub
sahf
sub
std
xchg
adc
and
jb
sub
iret
mov
into
cwtl
pushf
xchg
adcb
mov
xor
mov
pop
mov
shr
in
mov
aas
mov
jb
movsb
call
cmp
cs
jecxz
test
ret
mov
mov
rcrl
cmp
jb
jmp
mov
adc
iret
or
mov
int3
bound
jbe
in
pop
test
gs
pusha
jmp
rol
dec
xlat
or
push
lods
mov
cwtl
push
sti
aam
xchg
fisubrl
or
add
cmp
lahf
loop
sub
movsl
in
mov
xor
data16
lock
decb
mov
sbb
cmp
aad
rorb
jge
lret
sbb
jb
mov
flds
xchg
lret
repnz
std
adc
jmp
inc
mov
outsl
rcrl
popa
test
sbb
shrl
enter
mov
sbb
add
aas
mov
xchg
das
sarb
insb
fbstp
enter
push
xchg
xchg
sub
pop
in
cmpsl
les
jge
adc
mov
mov
pop
push
std
fcompl
or
cmpl
cmpsb
insl
lret
andl
andl
sub
sub
lret
adc
mov
mov
pop
xor
stos
mov
adcl
cli
lock
fsubr
test
movb
rorl
sub
sub
adcl
sbb
pop
rcrl
sub
add
aam
or
out
aaa
enter
or
push
enter
cmp
imul
sbb
lahf
sarb
or
int3
sahf
dec
cmp
shlb
ficomps
push
jb
jg
mov
jle
into
adc
jge
or
rcll
call
test
gs
rol
vmovhpd
fs
pop
fxch
mov
and
stos
push
data16
or
repnz
dec
xchg
jp
dec
repz
mov
or
repz
mov
mov
mov
repnz
inc
inc
pop
jo
imul
cmp
dec
ret
pop
shr
lods
call
stc
cmp
loope
add
pop
loope
sbbl
or
and
js
test
push
arpl
sub
pop
call
cmc
test
sbb
dec
xlat
ja
cltd
pop
mov
jnp
les
sarb
inc
clc
lods
sbb
sub
inc
hlt
das
enter
nop
js
stos
pop
repz
imull
arpl
repnz
data16
pop
in
push
pushf
xor
gs
or
pusha
insl
pusha
imul
fucomip
push
cmp
pop
add
cltd
jg
mov
inc
adc
and
push
xor
xlat
jb
mov
and
xlat
mov
pop
ss
stc
scas
test
adc
push
fs
dec
cli
jne
add
xor
push
ret
movsl
push
cld
mov
ret
xor
or
loope
lock
push
iret
mov
loop
lds
pop
fistpll
jmp
xlat
pop
fwait
mov
gs
mov
scas
mov
mov
and
push
test
loope
lret
jp
and
movsb
movsl
or
cmc
mov
cli
add
cmp
popa
push
push
sbb
lock
pop
ret
ja
xor
ja
fsubr
mov
andl
pop
add
movsl
sub
pop
das
jae
mov
dec
xlat
mov
sti
pop
sbb
and
sbbb
mov
insl
dec
add
sub
lcall
push
bound
test
add
int3
sbb
fwait
xor
sub
mov
fdivl
mov
nop
ljmp
mov
sbb
subb
mov
fcmovb
cmpsb
ja
xor
fwait
imul
in
data16
xchg
mov
sub
in
sub
call
int
sub
ja
loope
jb
add
cld
bound
inc
push
pop
push
js
xchg
inc
cmp
mov
add
mov
lret
mov
call
inc
test
cltd
or
or
xchg
adc
pop
sbb
fisubrs
movsl
jnp
xor
addl
mov
xor
sti
jge
cld
fists
cmp
fsub
pop
and
lret
je
jl
push
rorl
push
rcrl
push
adc
cmc
negb
insb
decl
sbb
lds
and
sub
iret
push
scas
out
jae
lea
jmp
lcall
loope
mov
into
sbb
idiv
dec
xor
mov
xor
shl
mov
mov
iret
xchg
push
and
cmpl
ljmp
iret
sbb
jg
ret
pop
movsl
sub
gs
enter
xchg
mov
push
fsts
mov
inc
in
in
popa
cltd
push
int
push
bound
cli
adc
push
aam
popf
jae
incb
popa
in
push
mov
or
cmp
jnp
push
dec
das
mov
insl
nop
xchg
sub
repz
adc
xchg
and
es
rorl
lock
inc
int3
hlt
push
dec
pop
cwtl
fnstcw
dec
or
lock
aad
daa
adc
and
mulb
orl
stos
mov
enter
lret
out
mov
inc
mov
pushf
and
sti
and
xchg
and
lret
mov
fimull
cmpsb
mov
add
fcomps
in
iret
addr16
adc
cwtl
out
mov
mov
cltd
xchg
cmp
or
lods
fmuls
lret
lcall
sbb
cld
jb
fistps
mov
cmp
add
xor
lret
cmc
cmp
fucom
das
cmp
pushf
add
pop
and
lods
jae
jl
call
and
test
jge
adc
cmp
lods
leave
fsubrl
fwait
or
sbb
ret
cmpsl
jg
cmp
mov
leave
push
in
inc
lret
sub
loope
cmp
jb
fdivrp
sti
rep
arpl
addr16
sbb
jmp
into
push
cld
popf
ds
daa
out
inc
or
fnsave
outsb
ljmp
icebp
sub
xchg
push
inc
ret
inc
mov
in
sub
out
jbe
outsb
addb
sub
sti
xchg
fdivl
dec
jl
dec
mov
ret
jl
in
loopne
outsl
sbb
mov
cmp
and
and
pop
and
sbb
test
pop
pop
jno
cmp
sbb
roll
hlt
xlat
add
insl
outsb
dec
insl
adc
and
dec
mov
push
lock
xchg
fadds
and
iret
lods
bound
hlt
in
test
ds
fcmovbe
loope
push
sub
je
in
les
in
aam
jle
jp
addb
cs
out
dec
shr
adcb
fsubs
jno
jo
cmpxchg
addr16
fs
jg
sahf
jae
pop
leave
ror
adc
insb
fwait
lea
std
push
cmp
loop
out
std
add
mov
xor
into
mov
cs
push
lahf
cli
mov
loop
cld
jmp
add
and
movsb
fbstp
out
pop
fsts
ljmp
sbb
lea
mov
jno
ret
push
jns
in
mov
and
mov
cmp
mov
and
test
aaa
fs
repz
out
rcll
xchg
adc
pop
push
enter
out
or
call
movsl
in
sub
enter
sub
adcb
adc
faddl
gs
dec
filds
je
rorl
sahf
mov
icebp
or
aaa
xchg
mov
mov
xchg
sbb
and
adc
loopne
mov
or
sbb
cmpsl
pop
pop
daa
mov
jnp
inc
push
jo
in
sbb
cld
cmp
das
int3
in
dec
inc
add
push
push
insl
in
push
mov
jo
in
push
xchg
pushf
xor
fnstenv
hlt
mov
mov
xlat
stos
jb
mov
sbb
mov
and
lea
or
jne
cmp
insl
popa
fsubrl
mov
cmpsl
cmpsb
aam
add
enter
int3
lock
in
jge
scas
leave
repnz
inc
jge
cwtl
mov
leave
fisttpll
sub
rorb
push
mov
repnz
cmp
movsl
cmp
inc
stc
pop
call
jg
aad
scas
xchg
es
jne
cltd
movsb
mov
or
testb
dec
pop
jnp
sti
mov
mov
mov
nop
inc
cmp
call
mov
ret
sub
in
insb
pop
pop
jle
jg
adc
sub
mov
ret
sarl
ds
into
cmp
lods
fsubr
xor
xor
xchg
stos
rcll
xchg
pop
mov
xchg
lret
sbb
sbb
and
pop
insl
cld
mov
fcmovnbe
pop
out
ret
sub
aad
push
icebp
stos
inc
cmpsl
repnz
adc
and
adc
int3
push
sub
cmp
loopne
jne
test
fstps
idivb
frstor
push
cmc
mov
enter
xchg
or
cld
mov
and
test
aas
pop
popa
aam
lcall
pop
or
add
mov
adc
jo
aam
cmp
mov
fistpll
or
repnz
mov
mov
inc
pop
stos
mov
fiadds
imulb
scas
scas
sbb
arpl
mov
pop
cmp
fisubrl
pop
js
mov
aaa
inc
jg
adc
xchg
out
out
push
push
jmp
fldl2t
xchg
mov
ret
mov
test
add
jb
iret
mov
cltd
out
rorl
out
loopne
adc
cld
mov
xchg
and
sbb
loop
jnp
inc
es
scas
inc
cwtl
mov
xchg
xchg
sbb
lret
lret
mov
out
jno
jmp
push
ficompl
scas
xor
mov
stos
mov
repz
bound
icebp
or
je
sub
dec
jo
jo
lret
out
dec
ss
clc
pop
sbb
mov
ss
call
rcrl
mov
mov
iret
mov
jmp
cmp
sbb
test
rclb
es
rolb
int
jl
xchg
movsb
popa
add
dec
insl
testl
test
xor
dec
adc
imul
andb
sarl
mov
xchg
in
adc
sub
dec
js
stos
movsl
cmp
stos
jne
adc
push
sti
dec
dec
lods
fldenv
sbb
dec
out
aam
shll
mov
mov
mov
enter
shll
mov
mov
cmova
xlat
jne
pop
jle
bound
push
sub
mov
loopne
fldenv
and
lods
jmp
xchg
roll
nop
shll
or
cmpsb
fsubl
sbb
repz
mov
clc
aas
inc
push
ljmp
push
pop
xlat
arpl
cmp
mov
stos
test
mov
aaa
outsl
jmp
out
cmpsl
rclb
dec
shl
std
fwait
cmp
inc
cs
addr16
jno
pop
cmp
lock
xor
jmp
ss
cmp
adc
jecxz
pop
mov
call
xchg
dec
loop
and
xor
imul
cmp
pop
push
lock
shlb
ficomps
push
fisubs
adc
push
jle
pusha
roll
inc
ja
test
mov
sbb
push
test
sub
mov
jne
dec
mov
fistpll
rclb
pop
pop
dec
shr
lds
ror
addb
in
dec
add
inc
into
test
jg
sub
sbb
cmp
pop
cld
push
fs
add
sub
ja
mov
out
stc
cmp
leave
jae
mov
xchg
push
hlt
xchg
pop
mov
imul
push
nop
lcall
cmp
xchg
fists
or
jle
and
xor
and
fxtract
repnz
sti
adc
sub
lods
mov
push
into
pop
add
sarl
out
sahf
enter
push
loop
xor
dec
xor
fildl
push
fcmovb
movl
jnp
aam
pop
imul
das
test
out
dec
add
sbb
adc
mov
xchg
repnz
or
or
loop
arpl
scas
mov
aas
fs
pop
aam
mov
inc
std
push
adc
faddl
test
rcrl
add
push
adc
arpl
imul
push
mov
lahf
fsubl
push
gs
das
inc
ss
scas
xor
stos
fwait
xchg
loopne
imul
xor
xchg
push
cmpsb
mov
or
scas
add
stc
test
test
loop
enter
jecxz
xor
aaa
sbb
sbb
cli
inc
push
dec
dec
xchg
and
mov
cld
imul
shrb
pop
pop
leave
push
out
dec
sbb
mov
mov
sub
sti
es
out
stos
mov
sarl
mov
adc
mov
inc
jl
push
sbb
dec
mov
das
arpl
popf
fisubrs
pop
pop
and
mov
xchg
out
push
imul
xor
xor
xchg
jl
idivb
fs
inc
sub
dec
inc
xchg
lcall
xlat
jns
pusha
test
push
dec
lods
jns
das
or
aam
rcrb
jle
sahf
adc
jae
cmp
ljmp
rcrl
add
xor
out
pop
movsl
push
stos
mov
outsl
mov
outsb
inc
pop
or
pop
jae
test
add
in
jge
fstpl
dec
jne
push
mov
or
and
xor
mov
add
cmpl
dec
push
shll
shrl
ficomps
popa
sub
cs
cs
cld
bound
push
test
jl
aad
andb
mov
inc
xor
mov
jns
pop
out
add
repz
iret
addb
js
mov
sahf
cli
cmp
xchg
and
dec
out
rcll
imul
aaa
idivb
int
sbb
lock
lcall
mov
adc
mov
int3
sar
or
pop
adc
dec
inc
push
cmp
sti
ror
xor
ss
dec
jge
jnp
dec
int3
sti
roll
sub
adc
mov
in
xor
loope
call
add
rcr
push
cs
aad
das
pop
es
mov
adc
mov
ja
repnz
adc
push
dec
sbb
bound
sbb
pop
xchg
ljmp
sub
repz
addr16
pop
jmp
and
sbb
jbe
sbbb
mov
adc
decl
and
adc
movsl
mov
cmpsl
push
loope
sub
dec
scas
fdivrs
mov
pop
popf
dec
or
jg
xchg
repz
xlat
sub
in
or
mov
rol
int3
repnz
mov
stos
mov
cmovle
dec
jb
imul
jnp
shr
lods
pop
mov
ja
pushf
sub
lods
sahf
out
pop
jmp
les
pushl
mov
icebp
call
popf
sti
iret
xlat
fdivs
inc
pop
out
mov
iret
in
inc
pusha
adc
inc
lret
push
es
xchg
pop
cwtl
inc
and
xlat
es
cmp
in
jp
add
fstpl
gs
mov
adc
sub
cmp
xchg
push
push
loopne
aad
jg
and
xchg
or
sbb
sbb
sub
sbb
jae
xchg
dec
jnp
mov
inc
stos
inc
mov
inc
imul
aad
movsb
in
add
xorb
popa
pop
nop
stos
mov
sbb
mov
adc
ja
pop
or
lret
cmp
or
stos
sbb
inc
or
mov
fdivrs
pop
xchg
pop
ret
test
xchg
mov
fisubs
pop
jg
imul
xor
cs
shrb
insb
daa
jae
cmp
and
fcom
data16
and
scas
cmp
js
sbb
outsb
arpl
adc
mov
xchg
mov
stos
add
call
daa
iret
and
iret
aaa
mov
lret
sarl
pop
popa
lcall
jo
loopne
ret
push
dec
cwtl
jno
xchg
popa
mov
jo
mov
movl
fstpl
sub
cld
outsl
jl
jnp
es
movsl
pop
bound
rorl
mov
sahf
js
mov
cmp
xorl
mov
jns
fildl
mov
sbb
inc
push
into
lret
jle
cltd
push
lds
xor
sbb
sub
mov
xorl
mov
fimuls
sbb
dec
sub
sahf
cmpsl
je
lahf
sub
aad
test
shlb
fcomps
cwtl
adc
loope
push
ret
jns
and
xlat
mov
movsl
jae
sti
aas
ds
loope
je
jecxz
xchg
adc
mov
cli
nop
adc
outsb
sbb
cmp
sub
jb
ficoml
and
jne
mov
cld
jle
jg
cwtl
js
hlt
add
fimull
xlat
pushf
push
dec
lea
pop
or
mov
push
cmpsl
ret
nop
int
push
ret
pop
pop
popa
mov
push
push
sub
cmp
push
lock
mov
sub
xchg
dec
not
pop
adc
insl
notb
jbe
stc
repnz
adc
stc
shl
inc
sub
xchg
aas
ror
add
mov
leave
syscall
sahf
fs
insl
mov
int3
and
push
sbb
pop
pop
ljmp
add
mov
xor
lret
jne
pop
jnp
pop
xchg
aad
mov
jmp
fadd
or
ss
aad
das
incb
cmpsl
ficoml
and
iret
fwait
sbb
out
frstor
repz
mov
add
xchg
xor
sub
xchg
lods
shlb
dec
faddl
clc
lcall
aas
mov
cli
mov
cwtl
ja
sbb
fsubp
sub
xor
dec
pop
sar
mov
mov
jo
je
rolb
gs
inc
ja
jecxz
pop
pushf
mov
outsl
push
ds
xor
or
les
and
sub
pusha
jge
aam
jmp
or
imul
out
mov
fsubrl
jmp
clc
scas
movsl
push
stc
sbb
pop
add
push
fs
xor
fstl
jmp
clc
or
push
test
push
inc
adc
xor
movsb
jmp
push
ja
xor
jnp
into
push
cmp
push
mov
adc
les
pop
xor
out
insl
cmp
sbb
outsl
and
push
mov
arpl
clc
jle
into
arpl
xchg
nop
rorl
mov
inc
mov
in
mov
dec
aaa
push
adc
xchg
incl
add
sti
dec
push
dec
leave
sbb
or
sub
cltd
add
mov
inc
lock
jl
xor
call
or
fimuls
add
xchg
ret
mov
jle
arpl
int3
push
leave
sub
jp
ds
dec
out
insb
push
clc
pop
cs
in
mov
adc
mov
pop
mov
popf
jbe
pop
mov
mov
andb
btc
sub
inc
and
lock
int3
dec
cmp
test
lods
rclb
xchg
pop
jp
adc
jmp
iret
mov
mov
pop
fbstp
mov
mov
mov
mov
sbb
mov
stc
jp
mov
cwtl
in
enter
add
cmp
scas
cmp
xchg
jbe
add
mov
push
adc
mov
mov
xchg
popf
add
dec
rclb
cmp
out
mov
cld
cs
jp
or
dec
decl
int3
sub
mov
mov
pop
push
push
or
cmp
loopne
out
fsts
cmpsl
loope
mov
pushf
mov
mov
cmc
bound
sbb
dec
xor
pop
xchg
leave
ss
iret
stos
sbb
jne
mov
mov
out
jmp
xchg
dec
mov
jno
sahf
sub
mov
in
adcb
sub
test
ret
incl
or
jbe
imul
push
sahf
ljmp
jo
lea
xor
mov
xchg
jnp
and
cld
cmc
jmp
pop
dec
test
pusha
das
pusha
mov
adc
es
jo
jecxz
loopne
dec
xchg
push
icebp
jmp
repz
cmp
stos
adc
dec
xor
stos
ds
jne
shll
inc
popa
fs
in
fistpl
push
sbb
push
cli
xor
sahf
or
push
or
xchg
pop
int
icebp
xor
jecxz
sbb
dec
bound
aaa
pop
test
push
mov
dec
outsl
cmp
stc
adc
sbb
data16
out
in
rolb
mov
outsl
mov
addr16
popa
adcb
sbb
push
adc
call
adc
cmpsl
mov
into
pop
cwtl
jmp
mov
out
xor
pop
jge
les
shrb
cwtl
mov
int
push
insl
sahf
mov
subl
rcll
sub
enter
dec
xor
cld
stos
xlat
nop
cmp
and
xlat
jae
cli
aaa
jmp
call
sub
pop
aas
mov
ficoms
adc
fstl
iret
dec
mov
mov
adc
cmp
xchg
mov
xchg
mov
sbb
jge
jg
inc
pop
mul
xchg
sub
inc
int3
sbb
adc
pushf
mov
jl
out
adc
jno
xchg
pop
test
adc
mov
int3
les
adc
stos
mov
pushf
xorb
addr16
xor
sub
cmpsl
xchg
sub
sahf
pop
ljmp
outsl
cltd
ja
scas
mov
xchg
popf
sbb
xor
arpl
jo
cmc
xchg
pop
mov
addb
push
movsb
cmp
push
xor
mov
test
pop
fwait
insw
sub
sbb
scas
push
or
out
lea
fsubrs
mov
loop
jnp
ss
lods
and
int3
mov
dec
jecxz
and
inc
mov
sub
imul
cltd
adc
dec
mov
xlat
push
mov
addr16
push
mov
jne
or
xchg
std
pushf
mov
sbb
aad
in
loope
xor
sbb
jns
push
inc
shr
adc
mov
sub
pop
sub
insb
aam
adc
push
pop
inc
adc
lods
out
insl
les
cmp
das
cmp
or
mov
roll
into
or
sub
xchg
clc
xchg
imul
cmp
or
sub
cmpsl
pushf
stc
pop
xchg
or
mov
add
lods
aas
or
mov
jo
pop
stc
enter
sti
pop
inc
scas
push
mov
iret
pop
fdivp
repnz
jecxz
arpl
pop
rorl
test
sub
xchg
xchg
inc
leave
inc
add
inc
and
lock
and
inc
and
pop
and
mov
loope
mov
out
push
lret
das
jmp
leave
dec
movsl
cmp
call
imul
testb
in
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
jmp
sbb
sbb
push
mov
mov
and
bound
pop
bound
gs
lret
mov
xor
jno
pop
inc
andl
scas
fsubs
lret
push
and
jg
mov
mov
xlat
test
addl
xlat
nop
dec
in
je
jp
fwait
or
cmp
inc
xchg
or
pop
test
dec
pop
insl
or
andb
shlb
mov
lea
ret
popa
dec
lods
push
pop
mov
sub
mov
mov
mov
mov
in
pop
add
daa
jge
push
cmp
sub
pop
mov
xlat
xchg
xor
add
loopne
loop
xlat
fldenv
cltd
adc
pusha
notl
into
fcomi
jnp
add
enter
repz
lahf
outsb
ret
jno
push
jns
inc
bound
sub
inc
gs
subl
addb
add
aam
mov
fdiv
decl
test
mov
dec
xor
pusha
xor
in
mov
loope
and
movsb
sarb
std
dec
mov
lods
push
cmpsb
test
negb
add
mov
push
rcr
and
lret
hlt
aad
fwait
rep
js
push
and
int3
out
jbe
xchg
je
inc
in
pusha
pop
push
testl
inc
push
mov
sub
cmp
repz
mov
sub
sbb
inc
fnstsw
lods
inc
sub
call
inc
mov
loopne
xchg
in
and
jle
jns
fldl
addr16
adc
pop
fs
icebp
fldl
add
or
push
xchg
cmpl
out
pop
sub
jnp
lahf
and
pop
roll
cld
dec
test
call
bound
pop
insb
jae
pop
mov
inc
in
sarb
add
aas
sbb
jns
xor
xchg
jbe
sti
clc
add
fs
lahf
xchg
add
mov
out
pusha
in
dec
andb
scas
cs
mov
mov
push
fmulp
mov
popw
and
call
ja
fdivl
cmp
pop
inc
cs
aaa
dec
xor
mov
insl
pop
inc
push
adc
aas
popaw
jp
mov
sbb
mov
lds
frstor
mov
mov
js
inc
sbb
pop
add
enter
mov
mov
mov
popf
push
rcll
adc
out
jmp
mov
sbb
pop
sub
adc
inc
push
sbb
pop
jne
icebp
add
or
adc
fwait
ja
dec
sub
ds
cmc
fsubrs
xchg
add
cmp
out
fyl2xp1
add
dec
sub
rorb
je
xchg
pop
add
daa
outsb
sbb
jo
pop
xchg
jo
mov
push
xchg
fmull
mov
aas
jae
xchg
xchg
scas
lcall
jg
test
lret
add
ja
pop
mov
test
call
sti
movsl
mov
cmp
mov
int3
push
adc
mov
cmp
loop
lahf
pop
sahf
mov
pop
sub
out
adc
jl
xor
xor
xchg
xchg
stc
jbe
jb
or
mov
xchg
jb
orb
cmp
inc
inc
in
jge
cmp
popa
mov
sub
mov
mov
or
mov
inc
lods
sar
adc
mov
add
jg
xlat
gs
jmp
or
mov
mov
movsb
lea
test
in
insb
xchg
dec
hlt
cwtl
pop
and
push
push
mov
addr16
mov
mov
adc
ficoml
cmp
shlb
sub
adc
test
jno
imul
dec
pushf
inc
or
movb
and
pop
enter
push
xchg
fs
mov
out
movsl
inc
jecxz
aam
pop
add
popf
mov
cli
pusha
pop
andl
int
movsb
icebp
stc
xchg
in
hlt
popl
sub
cmp
xlat
sbb
jnp
dec
lahf
scas
xor
mov
nop
mov
ficoml
cmp
insw
ja
mov
xchg
xchg
inc
cld
add
push
xor
les
fs
aad
nop
dec
fisttpl
fidivrl
dec
ficoml
push
int
dec
sub
push
push
sub
add
push
jecxz
mov
push
mov
sub
pop
mov
lods
ret
inc
cmpl
sbbb
mov
dec
push
inc
dec
movsl
out
cs
push
pop
pop
insb
xchg
iret
adc
scas
ja
and
in
jl
mov
sbb
test
ds
mov
mov
cmc
and
xchg
mov
cmp
arpl
and
stc
inc
push
mov
cli
testl
sbb
popf
je
outsl
mov
push
out
in
lods
imul
imul
or
cmpb
addl
mov
cmp
shlb
cmp
out
pop
mov
sti
xor
xchg
mov
or
js
rcll
push
fstpl
cli
rorb
adc
mov
popf
filds
in
decb
jmp
or
or
jl
sarl
dec
pushf
push
adc
aam
outsl
mov
cmpsb
gs
in
adc
pop
fmul
test
add
cld
mov
or
add
cmpl
mov
mov
daa
dec
js
push
xchg
jno
jle,pn
push
fcom
scas
imul
mov
sub
jo
iret
pop
inc
sbb
mov
movsl
mov
in
jne
out
dec
jl
pop
push
adc
pop
mov
xor
loope
rcrl
or
xor
mov
shlb
jmp
or
pop
dec
js
sbb
adc
sti
pop
mov
sub
mov
into
inc
movb
ret
mov
out
dec
les
push
or
cmp
std
push
aas
test
pop
pushf
movsb
loopne
sbb
loop
stos
test
fstps
or
xchg
lock
outsl
sbb
mov
cs
test
xchg
push
push
mov
pop
rcll
xchg
and
scas
fldenv
sub
cmp
sbb
mov
shlb
jge
movsb
fs
jge
daa
mov
loop
cld
rcll
mov
test
pop
js
daa
mov
pop
mov
mov
and
adc
flds
push
out
pop
inc
xchg
jmp
lcall
aas
and
sbb
aad
clc
aas
ficoms
lods
push
fadds
jno
xchg
mov
insl
jecxz
cmp
cli
cmpsb
xor
or
or
sub
cmpsl
test
icebp
mov
inc
jl
adc
or
in
movsb
sub
dec
pop
jecxz
inc
popl
sub
cmp
jmp
adc
inc
sbb
daa
cmp
xchg
xor
or
movsl
jbe
xchg
loope
pop
mov
sbb
and
sub
push
push
ja
popf
mov
inc
dec
pop
lret
mov
cld
aas
repnz
fsub
hlt
push
int3
popf
fwait
pusha
dec
xor
mov
mov
push
and
jmp
dec
pop
test
popf
in
mov
call
push
push
adc
adc
or
dec
call
in
ds
sub
pushf
mov
int3
mov
add
adc
fdivl
jp
std
dec
push
test
xor
or
or
fstl
pop
jge
ss
scas
xchg
subb
ret
out
mov
ret
test
sbb
pop
mov
or
jecxz
fsubs
add
popa
aaa
das
sbb
js
into
jno
cmp
push
fmull
bound
push
sbb
jle
lds
in
mov
or
xorb
inc
or
sub
cmc
out
add
or
cld
dec
loope
std
mov
mov
fildl
shlb
jecxz
mov
popf
sub
adc
xchg
pop
sbb
sub
xlat
into
ljmp
sbb
loop
in
test
add
shll
orl
ds
pop
jle
and
adc
leave
mov
repz
das
dec
sub
or
push
bound
push
imul
jnp
and
jbe
in
fildll
outsb
xor
xchg
cmpsl
mov
push
xchg
push
jae
ret
push
mov
test
xor
hlt
xchg
xchg
push
mov
in
int
cmp
pop
aam
jo
inc
xor
push
dec
loop
loopne
out
jo
aaa
jg
in
pop
add
jo
mov
jge
jne
xchg
dec
dec
ds
ljmp
push
vmread
rcrl
popl
cmpsb
cli
inc
aam
pop
jle
pusha
xlat
lock
dec
sub
nop
rolb
repnz
inc
movsl
mov
stc
addb
out
shll
mov
push
not
nop
jg
addr16
in
mov
aas
inc
imul
aad
or
std
sbb
ja
jp
shrb
and
rolb
pop
inc
cmp
inc
push
dec
das
jp
lret
cltd
add
cmp
imul
shr
sub
jne
in
lods
leave
rclb
and
js
or
jbe
mov
xor
daa
jo
add
push
pop
das
out
call
push
addb
test
jbe
rcrl
test
mov
dec
mov
dec
subb
test
movsb
bound
vandps
push
dec
or
movsb
and
das
lret
test
mov
mov
and
xlat
mov
fwait
mov
scas
xchg
jg
push
pop
xor
outsl
fwait
sbb
mov
sbb
add
movsl
jge
add
aaa
xchg
sahf
pop
cmpsl
ljmp
inc
aaa
fwait
lock
xor
xchg
jge
mov
pop
mov
or
dec
xor
pop
push
or
mov
mov
in
out
aas
cmp
mov
fadds
adcb
iret
add
sub
lods
pop
push
aad
nop
sbb
stos
xlat
js
mov
pushf
xchg
sbb
pop
pop
mov
push
mov
lahf
pusha
xchg
push
sub
in
pop
das
pushfw
and
inc
or
mov
dec
mov
pop
add
ret
sub
adc
enter
out
daa
jno
out
movq
add
push
lods
test
in
jle
ss
mov
or
insb
loop
add
inc
hlt
dec
mov
mov
aas
jmp
les
and
ljmp
cwtl
mov
jecxz
sub
sbb
popa
ss
mov
fcomps
and
loop
into
lcall
das
scas
pop
or
mov
fbstp
add
xchg
repnz
jns
sub
push
adc
dec
mov
rorl
mov
adc
test
icebp
scas
sub
and
add
jns
mov
or
mov
rclb
fbld
popf
test
insb
jae
sub
jge
bound
call
pop
loope
dec
push
add
or
lcall
mov
add
or
movups
lret
rorl
pop
ret
mov
inc
add
cli
cmpb
shll
pop
dec
jmp
imul
jnp
arpl
ret
xchg
push
mov
jno
and
mov
mov
out
xchg
dec
jmp
scas
push
or
out
xor
or
daa
push
xchg
or
rcl
adcb
repnz
inc
mov
xlat
cmpsb
and
test
mov
pop
lds
or
mov
jno
xchg
jbe
js
mov
fidivrl
lods
mov
mov
lret
add
test
pop
lret
fistl
sub
mov
cmp
mov
add
shlb
xor
outsl
push
add
cmp
enter
push
test
leave
sbb
in
mov
daa
add
outsb
mov
jne
shll
dec
ret
cmpsl
js
push
lods
and
adc
popf
cmc
adc
lret
sub
push
xchg
out
shll
xchg
add
inc
mov
fwait
sbb
in
orl
jae
les
fwait
xor
jb
and
daa
loope
jle
inc
int3
cmp
mov
and
ror
stc
sbb
cmp
dec
mov
mov
repnz
adc
into
and
cmp
mov
mov
daa
sub
add
rcr
jnp
repnz
cmc
repz
iret
int
repnz
lods
int
xchg
push
ljmp
sahf
add
outsl
imul
push
cmpsb
mov
lcall
cmc
int
test
inc
imul
sub
iret
xchg
push
scas
lds
jecxz
adc
inc
mov
ss
dec
cmp
mov
ret
movsl
or
and
insl
hlt
stos
jecxz
fnstcw
loopne
xlat
repz
jb
out
fstl
icebp
and
dec
pop
test
dec
outsb
inc
xlat
call
cmc
mov
pop
pop
add
jno
out
mov
shrb
cld
int3
mov
cmp
dec
jbe
pusha
fbstp
lea
aad
hlt
xchg
xor
insb
repz
jb
inc
cld
and
lds
jo
xor
les
push
enter
or
pop
sub
add
fadds
lods
scas
call
sub
xor
jae
xchg
push
xchg
mov
insb
loop
cmp
bound
mov
mov
push
jbe
int
scas
mov
mov
mov
inc
and
push
outsb
inc
pop
loope
cs
fs
xchg
jge
inc
push
mov
xlat
test
or
test
cwtl
push
lods
popf
and
jns
or
and
adc
aaa
movsl
ret
or
in
sbb
pop
cmp
mov
jl
and
adc
cmpsb
cld
mov
xchg
xchg
imul
pop
or
mov
in
add
mov
pusha
stc
jge
sbb
adc
or
jmp
scas
add
adc
lahf
scas
sub
add
sub
cmp
push
fnstenv
adc
or
outsl
pop
filds
pop
adc
outsb
jl
cmp
repz
insl
push
and
loop
or
inc
pop
mov
pop
roll
mov
stos
insb
mov
movsl
pushf
dec
inc
frstor
xor
jp
xchg
push
out
xor
nop
or
jne
mov
insl
mov
fists
rdpmc
test
in
popa
push
xchg
mov
ljmp
ljmp
inc
fldenv
and
sub
mov
jl
fwait
jg
pop
rcrb
pushf
push
and
stos
sbb
xor
mov
adc
lcall
xchg
inc
test
iret
xor
outsb
mov
ljmp
out
mov
pop
mov
pusha
push
xor
in
lock
sub
cmp
out
sbb
test
ja
outsb
ss
add
ret
jb
inc
push
xor
test
pop
jb
dec
test
mov
adc
enter
push
pushf
arpl
leave
rcrl
imul
cmp
aaa
adc
dec
push
out
inc
pop
jb
test
jae
out
stc
dec
cmp
pusha
inc
movsb
push
xchg
jmp
push
cmp
xchg
xlat
in
lret
insl
fildl
xlat
xlat
hlt
or
sbb
add
dec
rcll
and
pop
cmp
mov
mov
mov
push
sysretw
bound
xchg
and
dec
mulb
jno
test
daa
ret
int
outsb
fiadds
push
fimull
jne
mov
sarb
repnz
adc
xchg
jle
aas
xchg
les
cld
subb
inc
push
fwait
shrl
adc
test
int
push
sbb
addr16
fwait
lret
push
movsb
xchg
jg
lods
mov
xchg
out
jo
mov
mov
insb
pop
add
out
pop
scas
pop
les
push
ljmp
out
sub
or
addr16
outsl
imul
sahf
fxch
int3
inc
adcb
xchg
imul
adc
cmp
pop
sub
fwait
outsl
sahf
into
ror
dec
jb
cmpsl
mov
cmpsl
xchg
mov
mov
mov
and
arpl
sub
jno
mov
xor
mov
jno
pop
mov
push
orl
push
inc
ret
fsubr
mov
dec
outsb
push
xchg
test
repz
inc
and
mov
push
clc
inc
sbb
cmp
shll
sbb
sbbb
pop
and
xor
cmp
into
aaa
push
mov
and
fstps
ret
mov
dec
add
rorl
lahf
stos
jecxz
xchg
ds
nop
xchg
lret
clc
aas
in
jae
jbe
adc
push
lahf
loopne
push
fsubrl
dec
sbb
cli
mov
pop
cmc
call
ss
push
dec
mov
ret
inc
daa
clc
mov
mov
add
xchg
cmpsb
scas
cmp
xchg
push
inc
mov
push
adc
out
int3
test
fisubrl
jp
stos
mov
push
push
add
dec
sbb
fnstsw
and
scas
icebp
js
cmc
or
xchg
int
test
pusha
ret
mov
inc
scas
icebp
lds
mov
je
divl
cs
cmpsl
jcxz
xor
enter
sbb
adc
add
sahf
inc
cltd
call
dec
fimull
loope
sub
add
or
xchg
cmp
sarb
sbb
sbb
inc
mov
movl
fwait
add
xchg
das
int
leave
xor
cmp
push
test
aam
push
dec
sub
jle
inc
in
in
insl
or
xor
xchg
xchg
push
sbb
pop
jb
or
push
lock
xor
hlt
nop
xchg
rol
xor
scas
jne
mov
iret
inc
and
lods
mov
fbld
sub
fmuls
push
xor
inc
ficoml
mov
sub
push
fildl
dec
lock
out
test
push
les
dec
sbb
cmpsb
je
aad
push
pop
stc
mov
lret
outsb
mov
gs
ficompl
cli
lret
js
les
mov
out
stos
push
mov
test
notl
adc
sub
push
lods
movsb
and
adc
inc
fidivrs
insb
lret
dec
cmp
jg
mov
push
mov
sbb
loopne
cmc
nop
push
je
divb
frstor
mov
jb
insb
mov
pushf
sti
stos
cmp
lahf
lret
idivl
xchg
add
pop
cmp
out
subb
push
cmp
jo
les
sbb
sbb
xchg
push
mov
sub
sub
mov
out
imul
inc
pop
sti
out
pop
add
add
jmp
nop
enter
addr16
sbb
inc
cmp
and
movsb
js
sbb
scas
aad
sbb
adc
outsb
ret
into
sarb
push
scas
or
mov
jge
outsl
push
cmpsl
mov
sub
mov
movsb
pushl
add
out
sbb
dec
lds
aam
stc
push
addr16
insb
in
pusha
jbe
and
cmpsl
push
cmp
pop
dec
dec
test
outsl
mov
or
movsb
jl
mov
in
sub
jge
pop
xorl
xchg
sarl
out
iret
out
push
dec
mov
xchg
adc
jns
test
and
cmp
dec
fisttpl
outsl
scas
add
lock
int3
push
movsb
adc
push
hlt
sti
push
call
mov
ret
nop
call
xor
lahf
dec
adc
movsb
push
jmp
mov
arpl
pusha
leave
push
pop
push
outsl
frstor
mov
out
vmread
jmp
inc
shrb
adc
sbb
xchg
dec
lret
lds
dec
or
cmpsl
fldl
stos
jl
mov
jbe
xchg
dec
js
cltd
cmpsb
ret
popa
sbb
pop
mov
bound
and
push
into
mov
addr16
repz
xchg
xor
ds
fcom
and
mov
data16
jp
pop
test
fwait
ljmp
xor
add
movsl
sbb
lods
cmp
jno
and
mov
pusha
mov
ss
movsb
inc
aaa
adc
cmc
mov
or
addl
add
pusha
shlb
mov
cwtl
mov
jmp
ret
cwtl
orl
jns
mov
dec
scas
out
idivl
add
and
addr16
xorps
adc
popa
ljmp
popa
lods
xor
fcomps
xchg
push
loop
dec
or
in
inc
sbb
sbb
and
xchg
jge
jnp
in
cmp
xchg
orb
mov
and
lock
das
and
cltd
es
jl
aam
add
inc
add
repz
je
push
icebp
repz
mov
xchg
popa
movsb
pop
xor
dec
mov
jl
cmp
mov
and
in
lods
push
lahf
mov
xchg
loope
negl
cmp
sbb
add
jmp
sub
or
push
pop
fwait
cmp
sub
lods
jmp
mov
js
cmp
shrb
test
decb
nop
arpl
and
mov
jmp
inc
cmp
mov
pop
aas
cltd
fs
stos
dec
cmc
jp
mov
pop
pop
dec
add
loop
inc
data16
into
xchg
arpl
icebp
jb
jno
mov
xchg
outsl
nop
test
add
les
xchg
adc
mov
inc
in
xorb
add
and
mov
xchg
push
imull
in
pop
jnp
pop
cs
sbbl
jnp
xchg
cmp
cmp
inc
pop
push
not
call
push
out
sbb
dec
lds
fdivrs
jne
and
ret
rorl
jne
sbb
push
cmp
arpl
mov
pop
sub
lods
shll
sub
ret
jecxz
sti
popf
jne
xor
dec
push
pop
stos
pop
cwtl
jae
rolb
mov
adc
movsl
ret
int3
int
in
pop
iret
and
push
sbb
les
push
not
bound
adc
mov
cs
xchg
in
xchg
pop
mov
fdivrl
push
pusha
xor
pop
and
lret
loop
mov
aad
fstpt
mov
popf
rorb
pop
sub
xchg
cs
hlt
mov
mov
xor
sbb
jo
pop
test
fistl
xchg
mov
add
lcall
shl
mov
ljmp
sub
sbb
push
js
adc
sbb
mov
outsl
pushf
loop
out
sbb
push
mov
jge
mov
imul
nop
pop
cld
test
dec
or
mov
mov
call
rcll
popa
pop
jb
out
push
out
bound
negl
sub
add
mov
das
lods
cmp
roll
lods
call
mov
callw
xchg
in
rorl
insb
out
mov
xchg
cltd
cmpsl
jno
pop
jo
addl
test
push
dec
mov
add
popf
mov
test
mov
scas
pop
mov
movsl
adc
push
out
add
sub
dec
arpl
pushf
leave
push
std
xor
in
in
pop
dec
mov
test
and
pop
mov
sbb
rcrl
sbb
arpl
cltd
clc
ficomps
xor
insl
jl
push
jns
or
xor
or
js
popf
ds
pop
hlt
gs
xor
pop
cmpsb
int
add
mov
imul
mov
mov
and
cmpsb
test
xlat
gs
add
jne
fldt
jge
jns
sbb
add
test
in
mov
adcb
mov
mov
jne
out
pop
fwait
loope
push
divb
jne
dec
stc
mov
cmp
xor
out
pop
xchg
popa
int
inc
or
mov
js
cli
or
jle
xchg
das
mov
scas
push
sahf
mov
int
scas
fnstenv
jno
adc
add
pop
insb
pop
sahf
aas
push
mov
setbe
add
jno
test
nop
fnstcw
call
fisubrs
jmp
or
cmpsl
xchg
mov
andl
or
mov
mov
pop
nop
js
imull
imul
inc
and
popf
mov
pop
xchg
lret
out
push
push
adcb
enter
push
pop
loopne,pt
nop
jne
notl
enter
rclb
ret
cltd
dec
inc
mov
inc
ror
loop
inc
data16
jmp
xor
jne
ret
push
cwtl
shll
test
call
aam
cmp
fstpl
rclb
lds
fcoml
fmuls
cmc
lret
dec
adc
daa
sti
sti
xor
adc
cmp
fwait
push
aam
int3
cmpsl
adc
daa
shrl
dec
inc
addr16
jmp
outsl
data16
xchg
mov
inc
xchg
jns
adc
or
pusha
add
into
push
lret
mov
inc
xchg
shlb
nop
fs
push
inc
inc
cmc
pop
add
jle
xchg
mull
loopne
xchg
mov
sbb
jecxz
in
cmp
inc
jnp
sbb
jge
movsl
ss
or
jae
jmp
bound
iret
repz
mov
mov
bound
sbb
test
cli
pusha
mov
xor
lds
push
ret
xchg
mov
and
dec
sbb
dec
arpl
nop
movsl
jne
xlat
cs
fs
push
sbb
je
jo
jb
xchg
andl
lds
mov
adc
push
stc
jge
repnz
inc
int3
jmp
enter
ja
dec
sarb
scas
push
addr16
test
add
jmp
pushf
shr
adc
cmp
aaa
xor
fisubrs
rolb
inc
subl
pop
cs
mov
outsl
lock
sub
add
je
xor
fs
inc
jno
sub
mov
xorl
mov
mov
fs
in
gs
fbld
jmp
lock
dec
push
jb
dec
lret
pop
xchg
lcall
jno
inc
dec
sti
xchg
adc
mov
sbb
mov
sbb
mov
or
mov
lock
push
rcrl
inc
loopne
xor
pop
dec
iret
dec
mov
pop
shll
push
inc
push
jns
push
movsb
fwait
cli
shll
lret
sar
out
and
mov
loop
cmpsb
scas
mov
das
loop
sub
jl
mov
push
pop
mov
push
in
gs
mov
xchg
shrb
out
dec
das
inc
rcrb
out
cmpsb
ret
test
mov
fmulp
fstpt
cld
mov
mov
dec
popf
mov
pop
pop
mov
xlat
dec
cmpsb
or
mov
jg
xchg
data16
pop
mov
aad
ljmp
inc
xchg
lret
dec
pop
cmpsb
inc
and
and
shl
push
fisubl
sub
lret
repnz
out
inc
sub
ja
pop
not
outsl
dec
inc
xor
jmp
lds
call
sti
push
cmp
movsl
add
xchg
std
das
shrl
ljmp
mov
xor
repnz
into
sbb
jb
fistpll
aad
mov
mov
out
movsl
gs
popa
xor
cmp
mov
enter
pop
inc
jp
push
inc
arpl
sub
pop
cltd
ret
push
cmp
push
orl
fstpt
pop
cltd
das
ss
insb
stos
lods
scas
je
imul
fidivs
sbb
jb
inc
xor
mov
outsl
push
xor
movsl
shll
mov
sub
lcall
xor
xchg
push
cli
inc
ret
clc
js
mull
aaa
seta
jp
push
subb
rorb
in
pushf
das
mov
rolb
sub
repz
imul
stos
mov
mov
in
xor
mov
lods
sbb
insb
jns
pop
jbe
pusha
test
repnz
mov
gs
fcmovnbe
fs
adc
insb
or
call
cs
ret
loopne
cmp
cld
xor
cmpsl
pusha
dec
xchg
push
inc
inc
mov
sbb
stos
push
dec
push
leave
fwait
inc
mov
xchg
ss
sbb
mov
icebp
jmp
mov
enter
sub
bound
scas
int
cmp
adcb
cmc
push
fildl
or
mov
push
fs
shr
pop
lds
cltd
pop
push
dec
rcrl
test
cs
iret
jecxz
mov
xor
cmp
xchg
or
icebp
scas
movsl
push
jne
push
scas
push
jae
and
jns
ja
lcall
lcall
mov
sub
add
push
adc
xor
jae
or
add
fcom
fimuls
int
or
or
xchg
pusha
cltd
pop
inc
addr16
aam
mov
scas
je
mov
push
sub
out
adc
push
shlb
sbb
ret
cmpsl
dec
bound
aas
pop
sub
xor
aaa
out
push
cmp
xchg
push
jg
jbe
lret
scas
in
mov
pop
popf
dec
sahf
sub
adc
adc
scas
sbb
lcall
test
mov
xor
test
jb
pop
xor
icebp
inc
pop
pushf
dec
push
popa
dec
insl
lods
xlat
cld
out
inc
fidivrs
pop
sti
aas
pushl
mov
adc
test
jne
sahf
adc
mov
mov
add
insb
leave
data16
inc
and
mov
push
sub
sub
adc
add
leave
hlt
lret
mov
test
xchg
adc
pop
inc
cmpsl
rcrb
or
addb
es
sbb
std
repnz
cmp
rcr
cmpsb
ret
mov
sub
lods
mov
push
sub
inc
lock
rcrb
push
insb
sbb
cmc
cmp
push
decb
xchg
mov
addr16
cmp
cltd
sbb
mov
mov
pop
push
sub
ljmp
shl
dec
test
mov
rclb
rorl
aaa
cmc
and
mov
push
sti
pop
ror
push
test
stc
pop
jl
cmp
repz
sbb
sub
dec
std
add
enter
daa
mov
mov
push
push
xor
or
adc
hlt
or
imul
sbb
xor
push
outsl
pop
andl
push
xchg
ss
add
es
jbe
xor
mul
adc
mov
into
xor
adc
adc
xchg
add
clc
fldlg2
cli
cli
bound
add
imul
fcmovb
hlt
mov
cs
cmpsl
cmp
sub
jmp
cmpsb
xchg
lret
dec
mov
movsl
xchg
dec
mov
repz
adc
popa
bound
pop
bound
fsubrp
inc
cmp
mov
scas
or
mov
mov
cmp
aad
or
iret
sbbl
cli
ret
out
xchg
shll
loope
mov
pop
sbb
pop
xor
jno
and
rolb
xor
dec
push
inc
adc
xchg
jne
cmp
mov
or
test
sarb
jno
fcom
gs
or
mov
in
push
inc
fldpi
pop
je
pop
inc
pop
repz
cmp
pop
mov
cmp
lret
inc
pop
mov
int3
shlb
es
test
stc
sub
mov
jle
les
cmp
scas
push
and
arpl
lods
push
adc
testl
fwait
xchg
cwtl
push
push
push
and
je
and
fstpt
sbb
movsl
or
cmp
push
xchg
cmp
mov
mov
outsb
or
repz
dec
or
lcall
cmp
mov
clc
repz
lcall
lock
loope
cwtl
jbe
sub
adc
roll
mov
jno
in
pusha
sbb
mov
test
test
sbb
cmp
push
pop
inc
hlt
shl
shll
fs
outsb
imul
push
lahf
stos
out
cmp
std
rolb
aas
xchg
lahf
xchg
pop
pop
jp
ja
sbb
jnp
xor
mov
iret
and
rcrb
jnp
fwait
xchg
cli
cmp
mov
cmp
pop
nop
rolb
push
out
lods
test
mov
or
mov
mov
loopne
cmpsb
aas
jp
ss
leave
imul
fadd
or
push
aam
jmp
xchg
mov
adc
push
shll
fmul
ret
jl
fidivl
inc
xchg
out
sbb
dec
adc
push
scas
lahf
mov
xchg
rolb
cmp
aad
xor
lcall
sub
cld
jno
cmp
or
or
mov
cs
seta
out
outsb
mov
mov
xchg
leave
cmpsl
xchg
lods
daa
imul
jg
jl
mov
and
mov
sbb
add
push
test
lock
mov
pop
insb
jle
testb
inc
cmp
dec
xchg
cmpsl
xor
ret
inc
addl
rolb
lret
notb
fidivrl
push
test
fucom
dec
stc
sub
jge
cmpsl
jecxz
stc
sbb
or
mov
push
push
lock
or
popf
scas
dec
rcrl
insl
cmc
ret
adc
sbb
orl
adc
adc
notb
xchg
push
pop
jbe
xchg
fnstcw
cltd
pop
pop
sbb
sub
inc
push
and
push
dec
push
imul
add
cmp
out
addr16
stc
fldt
and
test
jns
sbb
pop
stc
jnp
or
mov
or
sbbl
xor
dec
ljmp
pop
scas
enter
xchg
cwtl
sub
add
xchg
push
push
clc
mov
je
push
addr16
out
add
jge
pop
cmp
sub
sbb
inc
mov
daa
xor
pop
inc
sbb
fildl
cli
dec
cmp
pop
jge
imul
xchg
xor
inc
int
testb
inc
ljmp
ret
pop
je
ret
rclb
repnz
mov
mov
lahf
sbb
or
cmc
pop
pop
mov
mov
fistl
pushf
in
in
or
pushw
xchg
leave
std
out
push
dec
shr
jl
es
inc
dec
dec
test
mov
dec
sbb
or
nop
xor
mov
into
inc
xor
jno
clc
int
jl
and
rcll
push
loop
mov
call
addr16
ja
xor
jno
sarl
movsl
lahf
test
nop
or
inc
mov
outsb
jp
or
rorb
scas
in
loop
aas
mov
push
repz
insl
test
lea
in
pop
aad
xchg
cli
adc
xchg
xchg
bound
enter
ftst
lods
jb
or
in
loop
jae
xor
mov
and
mov
fwait
inc
inc
sarl
push
into
dec
les
cmc
fs
clc
test
push
xchg
rcll
pop
pushf
loope
mov
pop
jmp
pop
inc
xchg
rcr
cmp
mov
and
mov
pop
popf
loope
nop
mov
xor
mov
pop
in
push
xchg
mull
fldenv
fisttpl
cmp
popa
aad
and
bnd
sbb
divl
cmp
hlt
movsl
fisttpl
pop
add
inc
mov
fldcw
das
push
lcall
iret
pop
lcall
xchg
out
inc
int3
sbb
cmpsb
je
xor
std
cvtps2pd
aam
mov
inc
lcall
notl
loope
push
addr16
inc
stc
pusha
fnstcw
xor
daa
sbb
mov
mov
mov
mov
or
call
xchg
fstpt
rcll
shll
mov
xlat
fucomi
mov
out
sub
adc
std
into
enter
out
mov
push
adcl
dec
js
test
jno
xchg
les
xor
rcrl
pusha
mov
popa
push
ret
xor
pop
adc
jecxz
int3
push
loope
insb
sbb
add
imul
mov
lret
iret
dec
rcr
lret
xor
push
mov
lea
push
jb
xchg
insb
mov
ret
sbb
adc
pop
sub
mov
push
lret
lock
jnp
xor
adc
mov
adc
jl
jg
ds
mov
dec
les
rolb
ret
rclb
fsubr
xor
sbb
jno
mov
push
outsb
mov
xchg
fldt
enter
jmp
or
dec
cmp
call
shl
add
and
add
or
ja
push
lds
xor
xchg
add
xchg
sbb
incl
in
inc
xor
lds
mov
ret
out
xchg
out
push
ret
in
fidivrl
xchg
hlt
mov
adc
push
fsubl
sbb
movsb
lods
push
and
or
fldcw
popa
xlat
cwtl
and
test
xor
stc
mov
or
or
ret
cltd
cmpsb
mov
cld
mov
xchg
jmp
mov
lods
lahf
clc
andb
adcl
addr16
sub
cmp
push
dec
insb
xchg
adc
and
je
cmpsl
sti
lret
imul
faddl
stos
fnstcw
in
mov
aad
pop
sub
fiadds
rcl
std
sti
mov
je
or
aaa
cmp
and
and
cmp
sub
cmpl
fstpl
mov
jnp
ret
vprotd
cltd
add
ret
mov
inc
repnz
es
and
loopne
lret
ror
dec
pop
jge
lea
mov
mov
dec
mov
pop
imul
push
insl
fwait
adc
mov
cmpsl
sub
xchg
cmp
cmp
mov
xor
out
lea
pop
ljmp
cltd
out
xchg
aam
mov
mov
leave
stos
xor
or
std
push
push
xor
xchg
xor
pusha
leave
mov
stos
shlb
xlat
jo
hlt
cmp
dec
jbe
sarl
jecxz
and
sbb
ja
push
cs
jo
lock
push
mov
cld
cs
addr16
fcomps
push
or
out
pop
test
mov
lock
add
in
mov
or
addr16
shll
push
adc
mov
imul
jle
ret
pop
xchg
inc
shr
gs
iret
fidivl
in
cmp
in
xor
dec
je
mov
repz
test
loope
ja
mov
cs
jp
add
add
cmp
push
pop
loop
cmc
dec
xchg
dec
pop
int
mov
push
sub
jno
inc
repnz
bound
add
or
pop
loopne
loope
das
push
mov
xor
jecxz
push
mov
mov
push
fs
stos
cmp
or
sbb
xchg
shll
test
jno
aad
sbb
push
xchg
call
cmp
cmc
stos
les
mov
xorl
jne
or
mov
xor
xor
cmp
push
adc
adc
icebp
daa
cmpl
sbb
push
mov
fnsave
mov
bound
test
push
mov
jle
into
sbb
pusha
add
and
in
jle
pop
pusha
or
adc
ss
lods
sub
xchg
fidivrs
fidivs
push
bound
cmpsb
sub
xor
mov
lahf
xor
fs
loope
mov
rclb
xchg
xor
adc
stc
cmp
jmp
cmpsb
or
mov
psubb
add
pop
cld
outsl
insl
pop
adc
pop
lahf
lcall
sar
mov
push
js
push
in
xchg
ss
xor
sbb
int3
inc
shlb
and
dec
xor
ss
lret
fidivl
scas
pop
pop
or
pop
cmp
mov
divb
imul
in
and
jge
sbb
jae
push
mov
xchg
ss
mov
subb
mov
mov
mov
adcl
outsb
jb
aad
xor
daa
jge
push
xor
ja
clc
xchg
shlb
mov
orl
and
or
cwtl
sbb
es
aaa
fsts
cmp
xor
push
mov
addr16
and
jmp
xor
insb
lcall
scas
cmp
xchg
adc
sub
inc
and
pop
movsb
push
pusha
inc
sbb
loopne
mov
mov
test
roll
lock
rcrb
xchg
aad
sbb
pop
notb
mov
popf
ljmp
xchg
inc
lods
cmpsl
adc
test
jle
sahf
insb
nop
xlat
push
xchg
sarb
sub
cmpsl
inc
stos
mov
lods
insl
int3
or
subb
xor
loope
push
test
mov
and
ret
xchg
rcl
pop
cmpsb
cld
data16
cli
cli
push
idivl
sbb
repz
mov
or
sub
inc
push
iret
pushl
mov
mov
mov
mov
mov
push
or
incb
mov
dec
sbb
adc
mov
lret
inc
jg
out
shll
dec
sahf
ficompl
call
dec
cmc
cltd
frstor
push
and
jp
call
xchg
aad
leave
les
ja
or
jno
stc
clc
sub
inc
mov
aas
insb
jo
ja
mov
stos
dec
mov
push
inc
sahf
sub
roll
sub
pop
mov
bound
imul
out
lea
mov
movsb
sub
cs
loope
and
sbb
cmp
popf
push
repz
les
pop
add
push
sub
movsl
xor
pop
ret
sub
pop
sub
cmp
scas
dec
push
or
popa
mov
inc
stos
dec
xchg
lds
pop
dec
adc
jno
jns
xor
xchg
aad
fidivl
push
ror
mov
push
lahf
scas
sarl
repnz
mov
cmc
jne
mov
bound
or
mov
pop
data16
mov
sub
mov
pop
jns
in
imul
es
dec
aaa
fsub
movsl
imull
stc
jecxz
js
pop
add
dec
push
adc
or
cmp
add
cld
inc
das
data16
fs
pop
jo
inc
push
jmp
jle
std
mov
pop
stos
or
push
and
jno
mov
dec
ljmp
xchg
fildl
lret
push
jbe
popf
or
and
add
lock
adc
dec
xchg
daa
loope
mov
frstor
test
pop
xor
stc
test
or
movsb
sub
mov
leave
loope
out
pop
fiaddl
fdivrl
cli
xchg
jb
jmp
jg
jo
es
inc
push
in
fstl
fcmovnu
add
xchg
jmp
jb
dec
push
mov
int
jne
ret
jl
sbb
into
repnz
and
mov
mov
leave
sub
xor
jmp
xor
dec
sahf
fs
pop
inc
or
push
pop
cltd
inc
inc
mov
mov
dec
push
or
jp
mov
adc
bound
jnp
add
nop
fdivrs
or
cmp
dec
aad
out
fmuls
int3
popa
sbb
push
jmp
lea
dec
out
aad
sbb
pop
xchg
movsb
loopne
dec
sub
jnp
cmpl
pusha
les
jns
jmp
xor
aam
pop
mov
rclb
sub
jo
sub
xor
xor
or
xor
imul
sub
bnd
push
mov
cmovae
stc
lahf
testl
in
ret
mov
pop
fildl
push
mov
pusha
add
mov
pop
sub
sbb
call
daa
dec
shlb
cmp
sub
imul
or
jo
jg
fisttpl
cmp
sub
xor
lds
das
mov
lcall
inc
mov
imul
push
mov
or
adc
sub
popf
pop
mov
js
outsb
jecxz
push
xor
imulb
inc
mov
add
sbb
fnsave
and
repz
xchg
cmpsl
rcr
lock
mov
testb
jl
hlt
mov
mov
mov
xor
xor
cmpsb
cmp
xor
lea
sub
jbe
pop
or
mov
hlt
clc
aaa
stos
jb
sbb
andl
test
ret
cmp
jb
loopne
xor
push
iret
dec
sahf
push
mov
movsl
int
xchg
dec
mov
test
cli
mov
sub
loop
jne
pop
add
into
and
dec
jl
and
shll
mov
dec
ret
insb
push
mov
shl
into
pop
cmp
das
xor
addb
inc
fdivrs
and
mov
test
das
mov
ret
lcall
mov
adc
arpl
cmp
mov
adc
ds
push
popf
lds
shll
sar
gs
jae
daa
push
fcomps
and
mov
push
fldt
pop
dec
pop
pop
js
rclb
movsl
cmp
xchg
ss
lcall
clc
fwait
jge
test
lahf
lahf
fcmovb
jecxz
idiv
jg
lret
push
imull
out
mov
outsb
stos
and
cmp
sbb
xchg
inc
dec
cmc
jae
in
jmp
daa
mov
mov
push
adc
jge
fnstenv
or
out
mov
xchg
jmp
in
or
xchg
repz
leave
cmp
mull
mov
add
ss
pop
ja
or
out
fcoms
add
sbb
fidivrl
xchg
add
jnp
cmp
sar
and
nop
mov
adc
es
lret
push
pop
scas
out
addr16
add
inc
das
sub
jno
dec
sbb
adc
jbe
nop
sub
test
imul
xchg
add
mov
cs
cwtl
test
data16
push
jb
mov
and
lods
xchg
cli
and
pop
push
push
sti
dec
xchg
sub
loope
adc
gs
outsb
jbe
dec
dec
xchg
or
pop
test
adc
out
scas
movzbl
jle
aam
inc
popa
and
adcb
or
sbb
jb
bound
xor
lods
sub
cli
jbe
cmc
fisttpll
fcmovu
cwtl
lahf
jns
ret
data16
popf
stos
ds
mov
inc
inc
inc
push
lret
xchg
xor
test
sub
cmp
mov
push
ret
rcll
pop
mov
sahf
sub
gs
xchg
mov
push
pop
aaa
stos
push
mov
adc
jg
mov
and
int
lahf
push
shlb
adc
cmpsl
push
mov
cmpsl
push
dec
arpl
es
add
dec
stos
or
testb
and
push
das
sti
mov
mov
sub
lods
xor
sbb
insl
xchg
sbbb
clc
push
scas
inc
outsl
popl
stc
movsb
jb
shlb
scas
nop
jg
mov
mov
push
lahf
enter
mov
and
imul
sub
hlt
dec
push
or
sub
movaps
jno
jg
cltd
stc
rolb
cmp
movsl
xor
rorb
pop
aam
imul
ja
add
add
dec
test
stos
fisubrs
or
or
mov
dec
xchg
mov
popf
jmp
mov
mov
popa
jns
insl
mov
loopne
xor
pushf
gs
data16
sub
out
cwtl
ljmp
sahf
inc
mov
sub
add
shl
ds
mov
push
stos
std
out
lods
pop
pusha
sub
xor
fnsave
adc
push
mov
shlb
or
sarl
stos
pop
mov
push
mov
and
mov
out
cmp
pusha
aad
lods
cld
into
fbld
jns
xchg
ror
roll
mov
fcmovnb
sub
rcll
xchg
mov
fnstsw
mov
ds
call
dec
sbb
add
jecxz
mov
or
fsubrs
add
movsb
test
xor
aaa
lret
sub
jge
jb
ds
icebp
or
mov
enter
push
ljmp
loope
adc
cli
cltd
ds
dec
pop
adc
sbb
inc
aas
mov
popf
sahf
jno
jg
xchg
mov
mov
inc
ret
mov
imul
add
mov
scas
xor
add
mov
mov
xchg
jbe
test
mov
adc
mov
lds
aas
test
stos
je
dec
dec
push
add
adc
inc
dec
insb
cmp
jp
pop
scas
leave
std
cltd
mov
adc
sti
lock
and
mov
paddsw
fwait
adc
mov
or
cmp
cmpsl
sub
in
xor
lret
adc
pop
inc
dec
sbb
pop
negb
add
jo
cmp
jne
xchg
pusha
loopne
rcll
fadds
shll
loopne
push
push
xchg
adc
jno
out
adc
dec
mov
loope
mov
iret
mov
mov
cs
ret
leave
jne
pop
xor
das
sbb
push
aad
ror
daa
test
adc
lahf
or
sbb
xchg
loop
das
lds
les
ss
push
adc
push
mov
in
into
xchg
fnstenv
adc
jno
sbb
test
ss
or
scas
sbb
cmpsl
rcr
fcomps
fcomps
pushf
fsub
lahf
mov
roll
sbb
scas
outsl
mov
enter
in
out
dec
inc
sub
aam
stos
arpl
and
jae
stos
aaa
aam
sahf
mov
inc
in
sti
insb
xlat
repnz
clc
shl
adc
dec
psubusw
dec
jae
fildll
sarl
scas
xor
leave
sbb
jae
or
mov
adc
mov
mov
gs
mov
pop
jp
and
in
pop
sub
aam
inc
adc
sub
addr16
call
clc
std
jae
lahf
mov
jg
jg
jl
dec
inc
xor
cmpsb
mov
fstps
je
out
push
ljmp
sub
push
pushf
cld
lods
or
cwtl
ret
mov
add
movl
sbb
daa
fmuls
loop
shl
sub
cwtl
mov
mov
mov
lock
js
inc
xor
pop
push
mov
mov
lcall
mov
mov
inc
inc
push
clc
inc
mov
ss
adc
jns
das
dec
cwtl
and
mov
jecxz
lds
jge
insl
push
pop
out
jg
adc
cli
add
cmpsl
enter
gs
mov
fwait
jg
xchg
lods
sahf
pushw
inc
jecxz
adc
inc
shll
loop
jb
adc
pop
dec
hlt
aam
mov
movsb
add
cltd
bound
mov
int3
sbbb
jle
scas
outsl
push
cmc
xor
push
cmp
stos
mov
xchg
inc
fists
inc
outsb
imul
pop
xor
xor
addl
xchg
mov
inc
mov
sub
jns
jae
sahf
test
dec
stos
das
pusha
cmp
divl
int3
divb
popa
dec
mov
inc
and
popa
dec
stc
repz
test
pushf
push
lret
xchg
jge
rorb
mov
lock
data16
inc
inc
sub
cmp
enter
push
in
rcr
cmc
adc
sub
cwtl
mov
adc
test
xchg
dec
andb
adc
jno
add
enter
test
jno
insl
xor
dec
push
movsb
movsl
popl
je
mov
out
pop
cmp
bound
inc
dec
or
xlat
mov
test
rcll
push
add
adcl
es
test
and
and
or
scas
and
test
incl
insl
dec
cmp
je
jp
pop
fbstp
mov
movsb
cli
lret
jl
popf
add
and
out
outsl
dec
insb
push
inc
inc
stc
pop
stc
test
xchg
and
adc
fcoml
xchg
inc
es
jno
pushf
lods
stos
or
xor
pop
mov
jg
xor
xchg
pop
mov
testl
push
movsb
push
sarb
adc
jb
jbe
mov
add
dec
inc
fldcw
inc
add
cs
out
jecxz
outsl
popa
jb
xor
cld
das
aad
xchg
sbb
popa
loopne
cmp
push
push
loopne
ret
inc
scas
sub
shlb
repz
and
jbe
mov
xor
xchg
sub
fisttpll
cpuid
xchg
bound
lods
pop
js
shrb
sbb
or
xchg
in
ret
add
les
inc
jae
shlb
pop
aas
cmp
mov
pop
test
add
mov
adc
xor
dec
add
out
lret
xor
jecxz
in
lock
pop
mov
sub
jg
shl
pusha
ds
enter
xchg
cmp
xchg
push
loop
mov
in
inc
mov
xchg
int
xor
add
imul
mov
ljmp
jle
xchg
movsl
or
aas
xor
ja
pop
xchg
sbb
das
adc
mov
out
add
jbe
or
pshufw
xchg
mov
xor
insb
lahf
aas
orl
lahf
mov
push
fnstsw
inc
inc
js
mov
sti
rorb
adcl
sub
shr
arpl
pop
or
lahf
inc
insl
inc
sahf
test
sbb
mov
cmpsl
sbb
data16
adc
push
push
push
in
sbb
inc
mov
jmp
dec
dec
push
xchg
sahf
ljmp
pusha
imul
lds
out
xchg
loopne
lock
popf
cld
fistps
inc
rorb
das
std
sub
shlb
or
aam
inc
dec
push
cmpl
sar
push
fstpt
ss
push
jb
pop
mov
push
mov
rolb
xchg
in
daa
jg
jmp
arpl
mov
sbb
push
xchg
mov
jl
mov
adc
loope
jae
adc
les
xor
lods
push
xchg
mov
push
add
jecxz
mov
push
mov
mov
dec
ja
pop
push
outsl
pop
cld
sar
lret
jp
nop
fcoml
icebp
test
in
push
pop
andl
push
mov
adc
and
mov
mov
loopne
nop
sub
sbb
imul
inc
sub
adc
sbb
les
loope
inc
fucompp
lret
xor
rcl
ds
std
push
test
mov
into
ret
inc
out
or
les
xor
pop
data16
or
dec
movsb
mov
lods
pop
xor
ljmp
push
mov
push
jmp
jns
in
xor
and
shrl
dec
jnp
add
out
hlt
outsl
cmpb
cmc
cmp
inc
lea
inc
or
push
xchg
repz
nop
imul
hlt
mov
test
dec
test
lods
es
imul
addl
dec
out
push
outsl
or
and
mov
inc
pop
repnz
jp
adc
inc
inc
cmp
mov
mov
subb
je
push
movsl
add
xor
mov
les
push
and
or
mov
test
sub
sbb
mov
sub
push
adc
not
stos
jg
mov
fwait
iret
popa
jge
daa
mov
movsb
icebp
and
xor
cmp
popa
mov
mov
xchg
repnz
add
jl
inc
cmp
xrelease
inc
mov
sbb
xchg
sbb
sar
push
scas
inc
pop
xchg
xlat
into
mov
adc
inc
nop
mov
faddp
addl
pushl
add
lods
cmp
push
pop
out
stos
pusha
ljmp
in
xchg
push
aam
dec
loope
std
mov
add
fwait
pushl
ret
nop
dec
fsubs
push
repnz
aam
out
faddl
mov
or
jns
mov
xor
in
push
inc
mov
sub
or
outsb
dec
sub
movsb
cmp
scas
out
testl
fsubl
or
pop
fldpi
push
lret
jbe
cmp
pop
jb
sub
push
pop
lods
out
mov
xchg
lret
sbb
cmp
mov
test
mov
cmp
cmp
popa
xchg
lret
mov
adc
or
add
jl
or
and
lods
cmp
sub
subl
jne
push
or
push
cmp
mov
mov
insb
scas
inc
xchg
sbb
hlt
sub
xor
mov
pop
sub
aam
dec
jb
mov
lcall
dec
in
pop
xchg
jl
sarl
les
or
inc
sbb
out
aas
rcrl
shlb
xchg
ret
into
adc
das
insl
push
mov
inc
push
data16
adc
sti
test
mov
subb
pop
sbb
mov
jmp
fadds
add
jo
test
sub
std
subb
add
push
jne
bound
hlt
cmpsb
ret
sub
adc
loopne
loop
pop
cmp
loope
xchg
push
add
jmp
and
insb
outsl
sub
xchg
nop
or
lods
sbb
mov
dec
divb
mov
movsl
pop
xchg
cwtl
fsubrs
movsl
leave
js
xchg
jno
lret
push
outsb
bound
mov
push
ljmp
sbb
call
mov
lahf
jbe
xchg
daa
pop
out
ljmp
mov
ret
jae
ds
sbb
lock
fs
in
jge
dec
mov
loope
cmp
push
pop
cmp
imul
xchg
push
aad
add
jecxz
dec
cmpsl
imul
divl
pop
sbbb
mov
mov
movl
pushf
clc
sub
jb
push
push
sbb
loopne
insl
popf
or
add
adc
iret
xlat
pushf
xchg
mov
clc
outsb
fdivl
aaa
sub
scas
sub
test
and
outsl
mov
imul
mov
test
or
stos
bound
sbb
inc
ret
gs
add
fsts
add
mov
inc
js
outsl
sub
add
inc
lret
sbb
push
jmp
outsb
sub
pop
dec
jl
mov
cmc
sub
jns
push
testl
mov
sub
fldl
pop
pushf
mov
and
jae
aad
jg
arpl
mov
arpl
adc
les
iret
push
ja
std
jl
fidivs
in
cld
pop
mov
aam
sarl
dec
sar
pop
test
sub
and
pop
sbb
jge
sbb
aad
leave
loope
mov
pop
scas
sub
rcrb
xchg
jbe
popa
imul
aam
pop
lds
fdivr
sbb
popa
maskmovq
mull
pusha
xor
mov
xor
mov
loopne
or
je
js
rcll
mov
insl
mov
mov
and
repz
inc
xor
push
mov
add
inc
lods
into
xor
lahf
or
pop
mov
leave
cltd
fiaddl
scas
sub
mov
mov
in
and
dec
push
cmpb
insl
mov
ret
xor
ja
popa
cmp
mov
jle
cmpsb
cmp
sbb
lods
cld
sbb
jp
imul
pop
ret
xchg
xor
xor
xchg
xchg
mov
mov
add
xchg
icebp
adc
dec
jbe
xchg
sub
fsubp
pop
jl
stos
xchg
out
push
lds
pusha
add
jecxz
xchg
nop
jl
sub
add
fs
push
cmc
loopne
pop
loopne
int3
pop
jge
sub
dec
jge
dec
cli
add
cli
popf
push
sbb
push
push
movb
repnz
xor
pushf
daa
mov
pusha
push
adc
pop
lret
mov
out
mov
and
pop
mulb
shll
inc
cmp
pop
ss
repz
cmp
push
ficoml
pop
sub
pushl
add
aaa
jle
mov
popa
cmp
sub
push
movsb
mov
aaa
movsb
sbb
loop
cmp
fdivs
push
inc
lret
dec
fldt
xchg
std
jge
es
xor
pop
das
imul
dec
mov
pop
adc
inc
icebp
outsb
jne
filds
jns
push
es
rorb
or
in
sahf
sub
js
int
inc
mov
repz
les
movsl
loope
adc
lods
cmp
clc
push
cmp
pop
dec
fidivrs
rcr
xor
pop
mov
xchg
lock
test
out
int
outsl
lock
jecxz
add
mov
dec
out
ret
clc
lods
mov
xchg
aad
in
lods
jnp
stos
test
or
enter
push
cli
cmp
js
in
mov
xor
cwtl
mov
out
cltd
rcr
and
pop
adc
loope
test
js
nop
imul
imul
stos
dec
sbb
pop
jle
mov
or
and
pop
loopne
insb
stc
adc
xchg
inc
push
jle
arpl
xchg
mov
pop
pop
mov
nop
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
push
ja
cmp
add
adc
xchg
push
mov
fisttpl
bound
pop
bound
not
pop
movsl
push
inc
scas
outsl
bound
jp
xchg
jae
inc
stos
pusha
adc
and
out
addr16
xor
rorl
cltd
inc
or
adc
stos
popf
imul
ljmp
cmp
in
call
ficoml
and
call
and
dec
xchg
dec
mov
mov
lds
jno
ss
dec
push
sub
and
and
mov
andl
jne
jns
cltd
out
adc
repnz
mov
jecxz
lds
jne
or
and
jae
lcall
insl
icebp
pop
insl
mov
dec
lock
mov
and
nop
mov
jl
popf
or
repnz
or
ds
dec
mov
neg
adc
movsb
jno
into
jbe
out
xchg
push
pushf
adc
out
mov
mov
and
xchg
popf
hlt
mov
sbb
cmp
jne
mov
cmp
psadbw
push
std
push
sub
sub
arpl
scas
fdivl
xchg
cmp
int3
pop
inc
mov
aas
lds
push
lret
gs
icebp
imul
imul
cmp
stos
aaa
das
sbb
orl
and
das
cmp
fisubrl
push
inc
leave
pop
push
sbb
cmp
icebp
loope
dec
add
lds
xor
shll
and
scas
pop
out
pop
pop
pop
push
repnz
leave
pop
mov
mov
sbb
mov
jnp
lods
mov
fwait
dec
into
dec
sbb
sbb
adcl
or
or
jmp
mov
mov
lds
push
fiaddl
dec
aaa
pop
mov
push
or
scas
bound
sbb
inc
repnz
inc
xchg
data16
and
xlat
mov
aad
push
jecxz
pop
lret
movsl
cmp
roll
xor
pop
in
out
movsl
fimuls
jge
jecxz
sbb
aaa
xchg
mov
mov
lods
mov
xchg
sub
hlt
inc
adc
insl
cli
or
mov
jnp
aaa
mov
push
push
inc
stc
in
and
adc
pop
lahf
iret
jae
xor
sarb
xchg
jge
add
jge
outsb
pop
xchg
cmp
or
sbb
cs
adc
xor
jge
or
sbb
rcrb
scas
test
pushf
mov
cmc
std
mov
rep
fbstp
fsub
sub
jb
push
outsl
into
into
sub
pop
add
xor
mov
mov
dec
push
dec
mov
and
subl
pop
push
jl
cmp
xorl
adc
mov
ljmp
faddl
push
push
xchg
dec
rcll
sub
or
clc
test
leave
xchg
push
jae
dec
popa
and
loop
jnp
fcomip
ss
adc
pop
out
test
add
das
pop
and
xor
fisubrs
repnz
rorl
xor
imul
mov
mov
xchg
insl
push
arpl
mov
leave
xchg
lock
scas
repz
add
mov
xor
pop
inc
cwtl
rcl
out
push
mov
mov
daa
and
scas
inc
push
fnsave
inc
adc
cmp
jge
add
and
fstpl
fs
and
or
sarl
lock
fs
and
outsl
cmp
pop
or
xchg
cmp
imul
stc
xor
test
int
int
sbb
test
pop
shlb
jg
or
data16
outsb
jnp
mov
imul
sarl
loop
jmp
out
push
pop
mov
inc
mov
pop
hlt
dec
inc
jo
mov
xchg
movsb
mov
arpl
in
shrb
adc
and
clc
ja
sub
fdivs
sbb
sbb
pop
xchg
bound
bound
mov
test
sub
pusha
pop
and
orl
xor
shrl
cmp
sub
dec
test
dec
push
or
lods
inc
mov
addr16
cmp
jecxz
mov
pop
imul
pop
sub
stc
xor
or
xor
xchg
xor
jle
mov
sarl
push
out
ds
loope
repz
fld1
std
je
subb
loope
lods
pop
dec
push
in
xchg
out
or
dec
mov
pop
jge
sub
cmp
mov
fnsave
xlat
pop
cmpsl
shr
repnz
cltd
sbb
jb
stos
mov
lods
enter
js
adc
push
xor
jns
add
inc
sub
mov
sarl
cmp
testl
adc
adc
imul
jecxz
mov
mov
sub
xchg
hlt
jnp
in
cmp
mov
orb
or
fsubr
sbb
sub
lea
fsubl
push
jecxz
fwait
add
fisubl
pop
pushf
clc
jmp
or
adc
xlat
pop
sbb
jp
ficompl
data16
push
loopne
ret
xchg
fildl
and
repnz
mov
int3
repnz
inc
and
mov
fxch
cmp
cli
push
adc
adc
dec
mov
dec
mov
int
arpl
ds
adc
addr16
lret
loope
aad
loopne
shlb
jge
outsl
pop
pusha
ds
dec
xchg
cmp
pusha
int
inc
out
mov
jae
pop
ljmp
cmp
dec
sbb
pop
ds
sti
ror
jb
in
icebp
inc
movsb
scas
pop
mov
loopne
jge
rclb
aad
gs
add
mov
adc
pushf
es
jecxz
cmp
pop
dec
add
sti
adc
pop
xor
js
sbb
cmc
decb
xchg
sub
leave
lods
push
sub
fiaddl
xor
sbbb
fcomps
mov
sub
in
lock
ret
pop
pop
xchg
loopne
jg
sub
inc
pop
inc
sbb
adc
and
in
add
fidivrl
push
leave
popa
icebp
enter
push
out
cmpl
add
ss
mov
cmp
pop
adc
loopne
fsubs
xchg
push
sub
int
mov
jp
add
or
xchg
in
repnz
jne
inc
mov
jno
inc
dec
inc
push
dec
inc
jmp
lods
push
lods
fnstsw
sub
mov
pushf
out
clc
pusha
dec
test
jp
mov
movsl
fsubs
inc
ja
cmp
sub
mov
lock
xlat
popa
jns
insl
push
or
fstpt
sbb
sbb
jmp
int
cmp
fwait
push
das
sbb
mov
xchg
xor
outsl
mov
cmp
lods
ret
popa
mov
orl
push
leave
mov
aaa
and
hlt
push
mov
dec
jge
pop
mov
jmp
mov
imul
insl
pop
dec
repnz
icebp
pop
outsb
shl
call
xor
iret
cmp
adc
stc
sbb
test
fidivrs
mov
xor
inc
mov
or
pop
jle
test
repz
inc
lcall
mov
ret
push
das
mov
fstl
mov
mov
sbb
aaa
and
imul
xor
call
jge
mov
sbb
mov
divb
adc
addr16
inc
jbe
xchg
adc
in
icebp
sub
jecxz
push
test
call
dec
cwtl
enter
popf
sbbl
mov
dec
pop
repnz
sub
js
inc
jmp
pop
inc
fadds
xchg
xor
adc
pop
inc
adc
xor
add
jbe
loopne
or
addr16
mov
in
aad
aam
ficompl
lahf
mov
sub
sbb
dec
lods
movsl
outsl
xchg
stos
sarb
inc
dec
pushf
adc
inc
push
jmp
hlt
leave
xor
jmp
push
in
dec
mov
and
inc
shrb
jb
mov
aas
mov
push
mov
pop
adc
outsb
stc
movsb
rcrb
lcall
xor
dec
xchg
sbb
ljmp
add
out
into
fwait
in
pop
cmp
fxch
xchg
mov
xchg
fsubrs
js
pop
push
xor
imul
pop
ret
rolb
movsl
xchg
mov
addr16
inc
sbb
mov
pop
scas
movl
adc
and
mov
shlb
xlat
xchg
sub
inc
sub
bound
scas
pop
adc
pop
dec
fldcw
cmc
xchg
and
fbstp
adc
dec
mov
mov
push
out
insl
repz
popaw
mov
sar
pop
mov
mov
and
mov
adc
rcrb
jne
loopne
aam
fsubl
imul
loopne
sub
mov
repnz
sbb
lds
orb
xchg
dec
mov
push
sub
mov
gs
movsl
add
bound
sub
out
enter
hlt
sub
jmp
dec
insl
mov
push
inc
rep
and
fcompl
jns
lods
cld
mov
pop
loope
shlb
mov
pop
add
je
push
movsb
mov
jg
pop
les
test
mov
adc
fstl
sub
jb
jne
mov
rcll
std
addr16
into
cmp
sahf
outsl
fistl
lcall
lahf
mov
enter
dec
pusha
iret
lretw
and
shll
loopne
sbb
ret
jb
mov
sarb
call
cmp
cld
ss
movsl
mov
push
shlb
mov
fildll
nop
mov
push
ror
mov
test
jnp
rolb
push
adc
loope
fbld
int3
stos
cmpsb
shrb
ret
push
sbbb
jmp
cmp
cld
test
or
push
adc
and
aaa
scas
fistpll
movsl
gs
push
lcall
jp
cmp
push
sub
mov
std
ja
shlb
adc
ret
adc
pop
out
jae
push
insl
fsubrs
in
scas
enter
lcall
push
movsl
lea
adc
xor
push
iret
sub
xor
in
scas
mov
push
pop
jge
push
pop
dec
out
arpl
int3
incl
push
mov
inc
hlt
pop
mov
fs
and
adc
hlt
inc
xchg
jge
push
add
test
enter
arpl
pop
nop
daa
ljmp
cwtl
in
loopne
sub
mov
pop
hlt
rcr
bound
cwtl
sub
shlb
fnstenv
gs
push
xchg
xchg
outsl
xlat
inc
movb
in
pop
sub
inc
out
stc
mov
loope
pop
imul
mov
add
leave
in
xchg
lcall
xchg
mov
out
add
cld
aaa
es
inc
sub
or
cld
push
loopne
into
mov
inc
in
mov
dec
cmc
aam
leave
push
fimuls
mov
inc
cmp
jmp
jmp
bound
sub
iret
sahf
enter
aad
push
adcb
jb
dec
lea
icebp
inc
repnz
int
movsl
pop
jne
xchg
sub
sbb
jo
sub
addr16
push
ss
xor
test
int
inc
sbb
push
inc
cmp
jg
out
push
xor
mov
ljmp
cmpsl
fbstp
mov
adc
cmp
ret
adc
ds
inc
int
mov
cmc
clc
idivb
jo
cltd
out
mov
imul
push
pop
divl
fdivrl
ds
mov
aaa
jno
jns
dec
mov
mov
stc
mov
or
add
into
inc
fwait
pop
pop
out
cmp
xchg
mov
inc
cmp
sub
fimuls
xor
shr
mov
lods
xor
pusha
inc
xchg
ljmp
push
mov
lahf
insl
arpl
or
out
cmp
xchg
out
popf
xchg
sub
jg
and
dec
sarb
ret
adc
sub
mov
test
xchg
xchg
rol
push
xchg
cltd
adc
mov
test
out
dec
pop
out
xchg
lods
shlb
and
dec
sub
mov
adc
cld
rcll
adc
mov
aas
loop
insb
andb
mov
loope
mov
xor
es
or
icebp
xchg
and
rcr
inc
aaa
sub
fldl
dec
mov
les
ja
mov
adc
jns
leave
repz
mov
xor
mov
sub
jnp
incl
sbb
es
ficoml
pop
jb
icebp
pop
dec
mov
add
lds
jl
xor
pop
adc
bswap
shr
add
leave
push
inc
hlt
jp
sub
add
xchg
call
inc
int
cmp
sub
sbb
std
fdivl
ds
mov
jecxz
push
loopne
push
jo
add
dec
stc
stc
pop
inc
daa
xlat
and
sti
std
mov
call
gs
icebp
icebp
enter
lcall
sbb
or
shlb
out
pop
adcl
into
or
and
fwait
aam
adc
out
xchg
ret
bound
mov
in
fbld
or
xchg
and
fwait
jmp
shrl
icebp
fmull
jecxz
aas
aad
mulb
inc
mov
dec
not
and
imul
sub
iret
xchg
and
cmp
fdivl
dec
mov
dec
sbbl
inc
xor
push
mov
dec
pop
dec
push
push
scas
sbb
pop
sbb
rcr
aam
xor
mov
xor
scas
fldt
stc
ret
push
sub
pminub
loopne
add
nop
les
mov
addl
adc
cmp
ret
adc
xor
jae
push
jae
jp
cmp
cmp
push
xchg
adcl
add
pop
sarb
ret
push
or
cmp
sbb
xchg
or
push
cmpsb
jg
outsb
jae
test
pop
imul
arpl
sub
push
cli
pop
rclb
test
ret
and
cmc
test
push
mov
fcmovne
stos
pushl
loop
pop
stc
lret
xchg
negb
in
pop
dec
cmc
popf
ret
ss
or
addb
or
mov
inc
dec
pusha
sub
xor
adc
in
cmc
daa
lahf
rorb
and
push
pop
xchg
lock
and
xor
icebp
int
incb
push
sbb
sbb
mov
sbb
mov
imul
cld
popa
xchg
fisubrl
lods
dec
cmp
push
bound
sarl
inc
and
aad
mov
movsl
push
stos
xor
jge
in
leave
inc
movsb
iret
add
fcmovnbe
sbb
jg
inc
xchg
pushf
inc
js
in
js
rorl
mov
jmp
xor
pop
out
cli
dec
lcall
sub
sbb
cmpsb
mov
mov
test
in
mov
stos
dec
or
dec
popf
inc
mov
add
and
and
cmpsb
cmp
sar
jnp
mov
xchg
aad
and
ljmp
subb
int3
cmp
or
out
or
mov
xchg
mov
xor
mov
xchg
sbb
popf
pop
sub
stc
push
jb
pop
xchg
xor
bound
fnsave
xchg
fadds
xor
aas
imul
test
push
xchg
add
insb
les
fcoml
push
and
popf
mov
dec
imul
add
push
daa
lea
sbb
clc
xorl
xor
push
pop
sbb
and
hlt
scas
dec
xor
push
ss
xchg
mov
dec
incb
lds
xchg
adc
loop
xchg
xchg
cmp
sub
mov
and
std
mov
int3
jne
fsubrs
mov
sbb
jbe
dec
pusha
or
xchg
sub
jnp
cmp
jmp
imul
inc
movsb
jnp
and
or
popa
xchg
jecxz
lret
and
and
lea
cli
inc
push
in
cmpl
iret
loopne
imul
pop
ficoms
xor
into
lock
add
shll
inc
bound
mov
sub
dec
andb
hlt
xchg
int
jge
cmpsb
ret
mov
jp
sub
inc
mov
lret
mov
in
pop
or
mov
lods
fistl
mov
das
lods
divb
mov
and
pop
push
stc
push
lahf
push
rcll
jmp
mov
insb
adc
out
leave
sahf
shll
mov
subb
je
cmpsl
pop
test
sahf
or
mov
cld
lea
shr
int
mov
hlt
inc
mov
loope
inc
mov
out
push
jb
mov
inc
mov
test
int
pop
mov
or
xor
fistpll
pop
push
pop
adc
and
outsb
and
cmp
popf
push
out
pushf
xchg
mov
jmp
sub
mov
out
pop
std
push
xorb
inc
pop
ret
dec
pop
jne
sbbb
cmpb
ljmp
dec
mov
or
add
xlat
adc
dec
nop
xchg
add
movsl
pop
push
or
push
push
cmp
ds
sti
fistps
test
iret
jb
sub
inc
jmp
xlat
and
mov
repz
pop
or
sbb
and
pusha
xchg
mov
sahf
and
push
ja
xorl
mov
xor
rcl
mov
cld
jecxz
out
xor
sbb
ret
outsb
rcll
aaa
push
pop
mov
xchg
cmp
jmp
cmpsl
push
imul
mov
xchg
lods
jecxz
imul
imul
rorl
lods
in
sbb
xor
andb
jecxz
sub
xor
jle
jge
add
vxorpd
orb
xchg
imul
movsb
mov
and
or
fldt
jne
subb
push
jns
insb
ret
fwait
test
loopne
ljmp
test
add
pop
mov
and
aad
icebp
and
mov
call
lods
mov
push
inc
pushf
out
outsb
icebp
popa
ret
mov
cmc
insl
lret
inc
movsb
xor
mov
xor
xor
sbb
loope
inc
test
out
and
out
add
test
inc
mov
dec
xchg
dec
and
aam
rorl
mov
xor
sbb
mov
enter
lods
push
push
and
ja
inc
cs
mov
dec
xlat
leave
jnp
pop
test
test
call
jge
scas
pusha
inc
mov
jnp
add
mov
ds
cwtl
aad
nop
sub
mov
xor
nop
rorl
jnp
lds
repz
xlat
cs
jno
ds
ss
sub
mov
inc
inc
stc
leave
mov
lds
xchg
rclb
adc
sti
int3
push
lea
mov
push
out
pop
aas
inc
dec
in
push
mov
test
or
repnz
mov
sub
aam
lock
fwait
and
les
inc
test
mov
fs
mov
jl
jbe
aas
test
into
dec
jne
add
mov
add
es
xchg
in
pop
ret
add
cmp
adc
mov
out
sub
outsb
push
pop
or
mov
mov
dec
dec
cmp
stos
mov
cmpsl
icebp
mov
out
ret
int
cmpsl
lret
icebp
ds
stos
cmp
xorb
inc
inc
mov
mov
add
aas
sti
loope
add
mov
inc
lret
clc
dec
sbb
mov
repz
xchg
pusha
bound
sti
jo
mov
iret
jge
loopne
and
es
sub
repnz
sub
and
pop
ds
xchg
mov
and
dec
mov
push
and
and
ja
out
int
je
xorb
pushf
lret
lea
mov
out
and
pop
dec
mov
insl
dec
out
inc
dec
xor
scas
cmp
lds
add
mov
and
pop
push
bswap
xchg
sbb
cmp
int
lahf
in
hlt
ret
sbb
sub
jbe
mov
dec
sub
xchg
daa
and
jmp
mov
push
xorb
sub
mov
jl
and
shll
in
dec
test
or
repnz
and
rcll
dec
pop
out
andb
push
clc
jae
push
out
mov
cltd
std
mov
scas
sbb
inc
and
mov
mov
push
sbb
mov
mov
jle
adc
int3
in
xchg
push
in
pusha
je
mov
sbb
fstl
test
out
pop
sti
in
popa
pusha
sbb
and
dec
int
in
push
aad
mov
sub
js
pop
sub
or
sub
cld
movsb
aaa
mov
imul
scas
loop
mov
and
or
in
je
dec
mov
js
test
enter
push
movaps
and
sbb
outsb
add
mov
dec
inc
pop
ret
popf
cmpsb
rorl
mov
and
sbb
lret
push
push
pop
inc
pop
lret
pop
stos
sbb
sub
pop
movsl
mov
lcall
pop
mov
jns
clc
movsb
shll
fdivl
dec
jl
dec
jb
aas
inc
leave
test
mov
outsl
lds
arpl
test
push
sti
adc
out
fimuls
fsubr
insl
rorl
inc
cs
stos
in
in
mov
pop
scas
push
outsl
xchg
xchg
fmull
test
dec
mov
adc
adc
gs
add
hlt
popa
cwtl
xor
dec
push
outsb
cmp
jbe
je
add
jle
clc
pop
aas
lahf
mov
adc
stc
fs
mov
mov
sti
hlt
jbe
imul
pop
outsb
dec
xchg
mov
stos
sbb
enter
fildl
nop
mov
xchg
in
loopne
mov
push
mov
add
test
pop
popf
xlat
fisubrl
loop
jbe
int3
pop
aas
adc
add
jl
inc
jno
sbb
jg
stc
sarb
fs
fwait
leave
pop
popa
or
jp
push
mov
adc
sub
xchg
clc
jnp
inc
push
and
xchg
pop
sti
adc
inc
pop
add
stc
pop
out
shl
lock
sub
lea
xchg
or
mov
jmp
mov
jo
push
int
push
cmp
std
xor
mov
and
pusha
cmp
jecxz
adc
mov
sarl
inc
pop
push
movsb
out
jbe
mov
dec
mov
inc
popa
push
popa
or
sub
cmp
mov
inc
bound
aas
adc
jo
lret
push
xlat
cmp
je
xchg
xor
scas
and
or
jmp
sti
push
or
fmull
and
or
or
pop
test
add
aam
pop
mov
add
or
loope
push
dec
xor
dec
add
adc
jp
pusha
scas
adc
sar
pop
nop
xchg
int3
das
mov
or
cltd
adc
fdivrp
jns
lcall
adc
mov
push
fidivs
sub
fadd
lds
jl
mov
push
test
stos
ret
sub
mov
out
push
fistpl
sub
and
sub
xor
ret
ret
les
repz
xchg
gs
das
int
sbb
ds
mov
pop
pop
push
mov
jne
add
fsts
xchg
add
ss
cwtl
cmp
or
lahf
shll
push
in
lahf
aaa
xchg
and
lock
outsl
loopne
leave
dec
roll
aas
mov
fimuls
sub
adc
sub
movsl
data16
outsl
ret
loope
dec
xchg
inc
push
mov
mov
out
xlat
push
sahf
xchg
jl
xchg
sti
or
pop
pop
dec
pusha
shrl
ljmp
in
stos
movsl
xor
lahf
fiadds
repnz
or
ss
push
sbb
cmpsl
clc
push
ror
cld
cltd
cwtd
imull
nop
loopne
inc
dec
mov
pop
popf
mov
push
sti
or
shrl
outsl
lods
stos
cli
push
out
jge
dec
jecxz
lcall
pop
mov
mov
and
dec
jle
stc
sub
test
std
xchg
xor
xchg
test
aad
jo
xchg
orb
mov
xor
cmp
inc
sbb
push
movsl
pop
sbb
leave
xorb
xor
icebp
leave
adc
push
mov
fisubrs
bound
call
push
mov
xchg
ja
in
out
loop
and
mov
outsl
int3
call
stos
jg
push
xchg
dec
pop
inc
or
roll
daa
mov
sub
in
mov
inc
dec
outsl
or
or
sahf
lahf
je
stos
dec
js
jo
or
ret
dec
jb
inc
xchg
pop
cmp
out
pushf
pop
xchg
mov
mov
aad
inc
call
int
dec
or
fisttpll
adc
bound
dec
popa
xor
movsl
sbbb
arpl
movsl
mov
mov
addl
jecxz
or
xchg
push
idivb
lcall
sbb
insb
xor
fildl
outsl
rolb
sub
jle
mov
test
movl
bound
scas
xor
xlat
inc
out
xchg
mulb
sub
pop
push
cmpsb
push
sbb
jb
push
mov
pop
or
xor
inc
ret
subl
add
outsb
fisttpll
or
ljmp
hlt
xor
push
in
jne
sahf
jne
fwait
rcr
clc
mov
cmp
outsl
outsb
stos
add
sbb
xchg
cld
in
cmp
test
sahf
inc
lret
xchg
add
inc
sbb
test
fwait
xor
int
sbb
aaa
test
sbb
push
mov
into
leave
mov
aaa
jae
fwait
xor
int
pop
xchg
fs
psrlw
xchg
sar
outsb
and
xor
aam
adcl
data16
movsb
ss
push
int3
or
sahf
mov
cmpb
shlb
ret
movsl
mov
inc
jns
addb
dec
int
mov
std
xchg
je
mov
sarb
loope
push
cmpsl
lods
test
sub
adc
pop
mov
mov
push
sbb
adcb
mov
icebp
dec
mov
jge
and
pop
cmp
mov
enterw
and
enter
es
add
es
lret
sbb
int3
jp
int
mov
dec
sbb
mov
xor
sub
stc
not
sbbb
fisubl
push
fisubrl
out
add
testl
jecxz
mov
sub
fisttps
push
dec
jmp
in
and
xor
and
xor
in
out
jle
or
sti
fs
xchg
push
mov
fcmove
fstps
cmp
scas
mov
jle
fcoml
aad
popf
lods
ret
dec
mov
cltd
imul
in
adc
push
gs
cmp
inc
adc
rolb
mov
popa
jne
cmpsl
movsb
pushf
mov
mov
dec
inc
adc
mov
cltd
push
fists
cmp
stos
xchg
add
dec
xchg
jmp
sub
dec
mov
mov
sti
mov
cli
repnz
pop
and
imul
inc
loopne
lods
mov
lock
and
pop
xchg
dec
out
sti
and
repz
xor
or
push
cmc
mov
mov
adc
jne
lds
push
pusha
mov
popf
cmp
mov
sbbb
mov
push
leave
ficoms
fidivrl
xchg
inc
inc
int
pop
sub
push
or
add
pop
enter
pop
popf
dec
mov
fisubs
movsl
cmp
inc
aad
push
data16
lret
xchg
sarl
dec
dec
lods
push
mov
cmp
pop
xchg
fxch
xchg
lods
test
shll
sbb
cmp
loop
arpl
mov
lret
ljmp
push
and
sub
cmp
and
insl
scas
pop
popa
pop
cwtl
das
mov
in
xor
sub
call
mov
jge,pt
clc
dec
mov
xchg
das
or
int3
push
pop
inc
aad
pop
ljmp
stos
inc
pusha
sti
clc
pop
aam
daa
iret
dec
lea
int
xor
aaa
mov
xor
loop
jno
sbbl
test
pop
aam
jb
inc
scas
push
scas
inc
xor
lahf
inc
fildll
fsubrs
in
ss
adc
lret
adc
test
sub
push
jne
or
dec
fstpl
inc
cmp
or
xchg
cwtl
in
lret
sub
sbb
aad
jns
mov
inc
adc
cwtl
rclb
cmp
je
cli
xchg
jo
cmp
jo
mov
fisubrl
js
or
lcall
adc
pop
in
cld
in
setae
mov
rorl
stos
inc
stc
jmp
dec
fs
inc
and
ja
test
mov
in
lahf
dec
das
fst
xor
test
push
movsl
jmp
mov
dec
call
mov
cmc
mov
pop
cltd
jmp
mov
jl
cli
xchg
jp
sub
push
addr16
xchg
scas
mov
popa
push
push
ret
movsb
or
imul
mov
shr
jne
scas
rcrb
sbb
fs
nop
lahf
ret
fists
int3
pop
push
mov
or
adc
outsb
outsb
or
cltd
xchg
jb
leave
or
push
inc
leave
mov
mov
add
xchg
and
adc
pop
pop
aad
dec
pushf
fiaddl
cwtl
jae
mov
mov
insb
dec
leave
stos
sbb
adc
lods
mov
cmc
dec
jnp
nop
cmpsb
andl
dec
push
sbb
xchg
scas
fnstsw
add
inc
add
rcr
and
mov
jno
inc
cmpsb
rclb
or
cmp
fildl
mov
nop
add
sub
xor
filds
dec
scas
mov
xchg
mov
sub
pop
pop
mov
cmp
push
orl
stos
sbb
jo
dec
jl
in
mov
pop
repnz
add
fdiv
repnz
loop
add
roll
cltd
std
sub
ja
pop
sahf
imulb
or
adc
push
hlt
ret
gs
hlt
jo
aas
testl
in
repz
adc
push
ja
rolb
hlt
pop
or
sarb
int3
cmp
out
pop
mov
push
and
jo
je
dec
add
fst
pop
mov
pop
and
push
sahf
fs
mov
insl
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
mov
movl
cmp
movl
jne
movl
adcl
pushl
andl
pushl
pushl
orl
call
xor
mov
or
mov
mov
mov
sub
movl
lea
mov
adc
lea
notl
mov
mov
mov
sub
and
mov
mov
mov
and
mov
mov
xor
mov
add
movl
mov
movl
mov
movl
cmp
movl
jne
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
sbb
mov
andl
mov
movzwl
add
xor
add
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
and
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
orl
add
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
mov
mov
mov
xor
add
mov
sub
add
mov
notl
mov
mov
neg
mov
sbbl
mov
sbb
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
inc
mov
subl
xor
xor
andl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
add
mov
subl
xor
orl
xor
add
movl
lea
mov
mov
mov
cmp
ja
or
mov
add
xor
lea
addl
mov
adc
mov
inc
xor
lea
xor
add
mov
or
mov
mov
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
decl
mov
adc
movl
adc
mov
mov
sbb
mov
xor
sbbl
add
cmp
movl
je
mov
movl
mov
xor
orl
xor
subl
add
sbbl
add
adc
xor
sbbl
xor
mov
mov
or
mov
xor
mov
add
adc
xor
xor
movl
mov
movl
mov
movl
cmp
jne
mov
cmp
movl
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
mov
sbbl
xor
sbb
mov
add
not
movzwl
mov
movb
sub
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
sub
mov
xor
adcl
sub
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
inc
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
sub
mov
xorl
push
andl
mov
xor
mov
push
add
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
sbb
mov
decl
xor
add
movl
jmp
mov
jmp
ud1
mov
std
mov
add
add
bound
mov
sub
cmpsb
sbb
ror
jbe
xor
fs
ja
mov
lcall
add
std
dec
lret
cmc
lret
lcall
mov
and
mulps
test
lgs
add
fldl
and
rclb
lahf
insl
xor
dec
xor
jl
lods
push
popa
xchg
sbb
mov
xlat
dec
pop
mov
or
cmp
int
mov
int3
dec
int3
dec
in
push
test
cld
fs
jmp
dec
or
mov
mov
data16
push
mull
push
ljmp
mov
leave
or
push
iret
push
add
sub
cltd
push
mov
mov
jl
int3
sbb
pop
pop
push
mov
sar
out
lret
stc
fisubrs
mov
pop
cltd
mov
cmp
pop
aam
pop
lahf
lahf
leave
sub
sarl
pop
cmp
rcr
add
test
popa
je
in
in
cwtl
xor
cmpb
jl
jmp
in
insl
add
outsl
out
arpl
inc
stos
test
sub
ja
dec
in
add
adc
scas
pushf
imul
mov
filds
dec
mov
mov
outsl
in
jecxz
jecxz
fucomip
xlat
cld
xchg
xor
lret
xchg
pop
pop
jno
stc
jmp
mov
and
pop
mulb
ds
mov
stos
inc
mov
mov
test
in
out
gs
jae
mov
mov
iret
in
cmpsl
lahf
scas
sub
mov
out
lds
pop
int3
mov
int3
enter
mov
jbe
lcall
push
or
scas
mov
sbb
push
xchg
sbb
mov
icebp
cmp
push
jmp
clc
int3
cmp
mov
shrl
sbb
data16
dec
lock
push
adc
fists
push
push
jnp
dec
scas
nop
roll
sub
dec
leave
mov
ds
mov
and
aaa
lods
mov
mov
cmp
push
adc
pop
int3
out
push
mov
pop
popa
in
cmpsl
push
cltd
out
pushf
push
testb
cld
int3
push
inc
ljmp
sbb
sbb
or
adc
adc
test
cli
divl
xor
push
mov
jmp
push
loopne
leave
pop
out
adc
xchg
mov
add
int3
das
cmpsb
xchg
and
xorl
rcl
insb
pop
rcrl
cmc
pop
ret
sub
xchg
xor
sbb
sub
jnp
popa
mov
cmpsl
mov
test
xchg
ds
and
in
aam
and
push
loop
or
mov
xchg
idivb
mov
out
cltd
hlt
icebp
int3
mov
add
adc
mov
test
sahf
xor
ljmp
pusha
outsb
arpl
xchg
add
pop
dec
mov
divl
push
rclb
inc
cmp
inc
enter
test
ljmp
scas
andb
lea
stc
sub
and
stc
sbb
pusha
out
xor
inc
dec
jle
outsl
loop
stos
gs
out
xor
or
mov
lock
cmc
pop
mov
pop
inc
sbb
dec
add
insl
dec
and
inc
xor
add
jge
cmp
lods
cltd
repnz
jns
and
lds
ret
cmc
loop
insb
and
shlb
sarb
lods
test
cli
cld
repnz
insl
xor
mov
hlt
or
xchg
dec
insb
ret
pop
dec
lret
fsubs
jp
lret
clc
mov
pop
cmpb
rcr
mov
inc
dec
sahf
jmp
test
icebp
aam
jl
pop
daa
lcall
adc
xor
add
push
jno
jge
cwtl
push
mov
sbb
xor
mov
cmp
scas
mov
sbb
push
mov
cmp
xchg
lret
mov
cmp
call
jmp
ret
push
add
test
xchg
adc
js
cmp
stos
mov
xchg
pushf
punpckldq
add
push
xor
je
and
bound
and
fcomps
ljmp
pop
push
lods
sub
xlat
in
push
lods
and
shrl
sub
ja
add
and
inc
jne
out
push
lea
mov
fistps
loop
ds
adc
mov
mov
cwtl
jne
nop
fmuls
enter
leave
fwait
test
fst
cmp
std
fmuls
and
sub
dec
insb
push
mov
jb
aas
shlb
sbb
pop
hlt
roll
push
mov
push
gs
bound
enter
xchg
or
mov
and
stc
jno
mov
sbb
gs
mov
leavew
inc
std
test
andb
call
adc
int3
sub
pop
cmp
test
and
mov
cli
stc
cmp
sub
add
jnp
adc
push
pop
adc
jl
les
stc
push
adc
nop
add
mov
sub
dec
add
add
or
rorl
ret
adc
icebp
mov
inc
fmuls
pop
cmpsb
data16
and
lock
sbb
add
push
imul
xchg
gs
xor
incb
orb
push
idivb
dec
add
andl
adc
es
mov
push
sahf
test
cwtl
mov
mov
jge
jno
stos
mov
out
clc
adc
pop
and
fsincos
pop
das
outsb
js
push
push
jp
mov
mov
push
cmc
add
insb
sarl
scas
push
jns
lcall
mov
mov
sbbl
out
pop
push
mov
ret
mov
arpl
dec
add
or
in
lods
dec
mov
sub
xor
call
jbe
push
mov
xor
pop
sahf
adc
inc
lock
lret
clc
lock
pop
mov
shlb
insb
outsl
aas
dec
movsb
dec
andb
add
ret
mov
xchg
dec
popa
rcr
je
testl
int3
hlt
fcompl
pushf
and
fisubrl
icebp
dec
lods
iret
in
xlat
dec
jmp
sbb
scas
jmp
add
xor
mov
inc
stos
ffree
rcrb
js
enter
hlt
je
shlb
in
sbb
call
inc
nop
xchg
pop
ss
pop
sub
mov
and
mov
jne
dec
jmp
aad
out
mov
insl
jl
cmp
mov
ret
sbb
inc
adc
inc
cwtl
sbb
jge
push
push
js
iret
mov
inc
push
dec
icebp
cmc
xchg
push
dec
in
dec
pop
cld
insb
cmp
and
out
pop
js
jnp
dec
iret
cmp
sbb
outsl
mov
cmp
mov
xchg
mov
push
pushf
fisttps
in
inc
test
shll
mov
dec
movsb
movsb
inc
out
out
jecxz
sub
and
je
mov
inc
testb
pop
jle
jmp
mov
mov
dec
inc
ret
pop
jae
pop
xor
cld
cwtl
sub
bound
shlb
fisubs
scas
jle
dec
xchg
jns
dec
insl
xor
sub
sub
xor
aam
xlat
loope
mov
push
xor
sub
mov
or
mov
rclb
push
and
rcrb
jbe
sbb
push
test
xchg
fcmovb
lcall
scas
or
and
enter
shll
out
jne
inc
aad
lret
adc
cmpsl
mov
cmpsl
and
daa
adc
push
fs
jne
sub
cmp
dec
sub
jns
mov
aad
iret
test
int3
mov
inc
add
xchg
imul
add
ret
outsl
pop
inc
and
dec
shrl
cmp
jne
fists
jmp
push
stos
test
mov
adc
call
fmuls
cmp
adc
dec
aam
mov
dec
sbb
inc
mov
push
dec
inc
add
and
cli
gs
lods
mov
jns
imul
pop
dec
aad
loope
jae
test
sub
add
inc
adcl
cmp
sti
add
add
cltd
lds
dec
mov
jmp
bound
inc
add
out
xor
cmp
subl
and
in
jecxz
jmp
xchg
lret
xorb
mov
cmp
push
lods
adc
xchg
int
xchg
jp
icebp
mov
ss
jl
imul
insb
xor
push
aaa
adc
nop
xchg
inc
subl
mov
out
jnp
movsl
gs
or
fs
sub
or
aas
xorl
hlt
pop
mov
dec
in
rsqrtps
jno
xchg
jo
shlb
fs
loop
scas
sti
mov
pop
scas
fs
idivl
in
mov
popf
insl
adc
dec
fsubrs
mov
adc
icebp
jbe
push
push
aam
shl
mov
jns
test
repz
aas
orb
ljmp
ret
push
fcomps
stos
lcall
jae
cmc
out
pop
jns
push
xor
jae
and
lods
scas
jp
lock
jge
gs
ret
or
jle
int3
lahf
aad
adc
fstl
popf
xchg
jl
sbb
lret
dec
jb
ficompl
cmp
stos
add
sub
and
push
das
push
add
lock
daa
test
xor
cmpsb
aam
std
ret
repz
jbe
hlt
stos
xlat
and
mov
jnp
in
rcrl
aas
lcall
and
xchg
arpl
xchg
mov
push
mov
fwait
icebp
test
les
add
push
test
lock
mov
mov
in
daa
pop
xchg
clc
mov
rclb
repnz
pop
enter
cmc
fxch
mov
idivb
bound
pop
mov
stc
scas
or
xor
inc
jp
and
outsl
data16
mov
imul
push
jae
adc
xlat
jns
into
inc
loopne
jb
and
cltd
inc
fisubrs
mov
loop
cwtl
jmp
or
add
rcl
ret
pop
or
cmpsl
in
sub
enter
mov
test
add
add
fcmovnb
scas
fisubl
int
or
cmc
ret
push
adc
hlt
lret
nop
xchg
add
enter
pop
test
jb
mov
mov
mov
aam
xchg
in
xchg
mov
mov
mov
dec
fs
cwtl
mov
add
clc
lock
fldl
fsubr
xchg
lret
out
das
push
push
mov
jo
shlb
pop
orl
dec
enter
imul
adc
mov
aaa
mov
xor
jne
cmpsb
sub
adc
les
adc
pop
push
ficomps
mov
cmp
sbb
stos
scas
movsl
dec
push
mov
xlat
roll
fisubrs
iret
negl
data16
cmp
dec
sbb
rcrl
in
addr16
adc
in
xchg
test
xor
fcomps
pop
xor
jo
test
jg
push
mov
test
loopne
xlat
sbb
xchg
mov
mov
fldenv
add
in
mov
push
shl
iret
push
out
stos
icebp
add
lcall
mov
xor
or
pop
aam
push
stos
data16
data16
inc
sbb
push
or
mov
insl
enter
leave
and
sbb
shl
mov
push
mov
outsb
rdmsr
jmp
aad
subb
mov
jno
out
xchg
repnz
jb
ret
xor
loopne
shrb
xor
in
stc
mov
xlat
push
aad
mov
pop
loope
mov
dec
or
outsl
push
insl
mov
jge
xchg
sub
adc
sahf
leave
repz
mov
addr16
data16
mov
jb
pusha
loopne
addl
in
out
enter
fs
test
add
pop
push
cmpsb
dec
mulb
insl
shrb
int
cmpl
or
or
mov
adc
add
mov
sbb
add
loop
sub
call
cmp
mov
hlt
rorb
addr16
push
cmpps
int
and
sub
mov
mov
fimull
xor
je
lds
mov
data16
inc
cmp
jp
inc
push
out
sbb
jbe
inc
inc
xor
imul
add
pop
mov
outsl
jns
xor
test
pop
cltd
in
clc
xchg
stos
js
push
and
mov
dec
mov
fwait
aaa
sub
sbb
inc
cmp
insl
mov
icebp
rcr
pop
dec
je
push
loopew
sahf
test
jns
sbb
stos
inc
popa
popa
dec
imul
aam
pop
cmp
gs
imul
fistl
js
jp
push
jns
imul
add
jne
bswap
xchg
mov
inc
je
cwtl
adc
cmp
cltd
push
lcall
mov
mov
xlat
jnp
jo
cltd
mov
cli
lret
cmp
dec
xchg
push
lret
xlat
sbb
movsb
pop
popf
inc
push
pushf
stc
push
jge
movsl
adc
in
fcoml
mov
outsb
test
add
out
addb
mov
jne
test
xor
inc
adc
inc
fstp
mov
mov
adc
std
sub
popf
mov
mov
pop
imul
dec
sti
lahf
in
mov
lods
fprem1
repz
or
mov
call
lea
xchg
jge
or
xchg
add
sbb
cmp
movsb
aaa
fs
outsl
addb
mov
notb
rcll
ja
mov
jge
mov
sbb
cs
jg
pop
fs
xchg
pop
lahf
in
sub
pusha
add
pop
push
jnp
jo
sbb
xor
cs
xor
and
push
hlt
lods
mov
lock
jl
xor
cmp
push
pusha
add
add
cld
and
sub
jno
int3
xor
dec
js
add
call
inc
mov
or
inc
inc
dec
test
jne
in
fs
mov
inc
clc
mov
cmp
aas
lret
sarl
dec
sbb
outsl
and
iret
fwait
add
adc
mov
cmp
rolb
push
stos
test
out
jae
repnz
sbb
scas
cmpsl
and
idiv
les
in
push
js
mov
mov
mov
fdivrp
dec
pop
sti
stos
mov
out
mov
iret
arpl
xor
cmp
dec
jae
shrb
repnz
lcall
js
xchg
in
daa
scas
orb
inc
push
nop
inc
and
sbbb
mov
lds
jo
add
or
out
pop
xchg
inc
loop
and
cmpsb
repnz
dec
fwait
add
std
pop
lods
mov
lret
and
add
cmpb
and
in
pop
lret
lea
add
inc
test
incl
push
call
inc
add
mov
inc
inc
cmp
pop
testl
add
inc
mov
cli
pop
test
or
scas
ss
lcall
or
mul
dec
mov
jno
stc
inc
loope
fisubl
out
into
rol
enter
out
mov
movsl
dec
add
enter
stc
sbb
rorl
shlb
mov
xor
int3
test
loopne
ljmp
xchg
lds
xchg
add
jl
xchg
cli
xor
xchg
orb
pusha
lock
pop
push
add
fmuls
cmp
mov
push
in
xor
lret
push
out
mov
aam
mov
sbb
add
pushf
dec
cmp
rcrb
aad
pop
mov
enter
decl
jnp
dec
mov
adc
push
inc
arpl
jno
aam
fwait
pop
jecxz
push
adc
sub
xor
lds
xor
aas
ret
scas
sarl
push
push
sub
pop
lahf
popa
imul
pop
shrl
mov
test
lcall
pop
mov
ja
and
jae
sbb
sbb
xchg
lcall
cmp
push
enter
clc
and
int
cmp
jae
sbb
pusha
add
jns
add
inc
sahf
shrb
sub
mov
enter
or
mov
cld
aaa
inc
jo
lods
or
mov
shl
xchg
incb
push
ljmp
pusha
cmp
stos
mov
add
inc
add
jo,pn
jg
loopne
adc
jnp
out
int
fdivs
sbb
je
mov
mov
mov
mov
mov
push
jle
loop
add
dec
dec
xrelease
sbb
jmp
fmuls
or
mov
enter
pop
lcall
pushf
popf
or
xor
bound
ret
inc
out
add
movsb
push
fiaddl
fs
cmp
xchg
xor
mov
imul
adc
ret
repnz
xor
sub
jle
inc
cmp
lea
or
inc
dec
xchg
xlat
cs
movsb
dec
lcall
int3
mov
mov
ss
inc
sbb
and
stos
pop
inc
rcr
mov
xor
das
push
push
iret
loop
cmp
lods
jecxz
bound
outsb
fwait
imul
sbb
test
push
out
xchg
outsb
push
jmp
loope
bound
cltd
xchg
xlat
test
or
ficoms
fistl
test
xor
hlt
decb
jge
mov
js
push
mov
mov
sbb
cmpsl
shrb
repnz
sbb
fbld
push
dec
pop
dec
add
sub
mov
inc
loope
cld
mov
adc
mov
repnz
pop
pop
arpl
xor
divb
cmp
leave
lret
mov
adc
pop
mov
stos
mov
fxch
insb
sbb
loopne
mov
jge
addr16
xchg
scas
pop
das
jg
lods
xor
push
add
sarb
stc
mov
sahf
sbb
push
subb
in
lret
fcomps
lods
sbb
push
inc
push
cltd
arpl
into
das
sub
insb
repz
push
fcompl
enter
mov
add
mov
mov
rorb
movsl
mov
cli
inc
mov
dec
dec
inc
add
mov
cld
pop
mov
movsl
sete
add
rcrl
sbb
mov
cmp
imul
jecxz
mov
pop
insl
loope
add
sti
pop
pushl
je
fadds
stc
jno
add
fmulp
pop
xchg
mov
xchg
xor
jle
and
daa
test
mov
cmp
adc
jo
adc
les
mull
arpl
mov
xchg
es
in
or
pop
stos
and
add
jo
mov
or
je
adc
mov
outsl
hlt
dec
loope
popf
shlb
pop
push
test
in
mov
sub
jg
movsl
mov
adc
jne
cmp
pop
mov
daa
insb
out
dec
out
pop
xor
adc
dec
mov
mov
jmp
int
leave
mov
push
js
pop
push
stos
xorb
test
jg
mov
mov
out
dec
hlt
ljmp
dec
loop
test
loopne
cmp
aam
sub
aam
mov
into
out
push
aas
adc
je
dec
loope
cmpsl
rorb
pop
xchg
lea
fwait
xor
adc
lcall
mov
lcall
rcll
mov
jbe
mov
mov
lods
sub
movsl
aas
mov
push
push
repz
ja
cmpsb
push
adc
cltd
mov
in
cltd
mov
imul
adc
jns
jns
pusha
movsl
or
adc
cmp
dec
lock
lods
sbb
sub
push
or
mov
shll
push
cmovle
iret
test
inc
lds
mov
stos
in
xchg
cmpl
jle
cwtl
xchg
orl
mov
loopne
pop
mov
js
mov
lods
pop
aaa
popf
jge
movsl
lds
test
scas
lcall
cmc
jecxz
out
and
clc
jns
sub
jns
and
jge
jnp
add
lds
mov
popl
push
lea
adc
and
clc
mov
xlat
stos
std
xor
xor
mov
iret
xchg
sub
mov
push
mov
in
jb
icebp
sub
movsb
or
loopne
jge
test
jno
stos
pop
mov
or
enter
test
test
mov
sub
dec
lods
mov
je
repz
mov
and
cmp
js
test
cld
cmp
das
and
adc
adc
cmp
adc
sub
pop
push
pushf
cltd
and
jnp
or
in
and
xor
bound
and
out
fs
ret
hlt
mov
lret
jne
mov
or
dec
add
jnp
push
dec
out
xor
scas
pop
fnsave
mov
movsl
jne
jb
popa
inc
aaa
adc
repz
xor
pop
mov
push
jl
add
xor
pushf
cs
cli
in
imulb
std
enter
or
xchg
sahf
iret
fcompl
into
xor
cmp
sarl
in
mov
sti
sub
sub
mov
lcall
out
fidivs
ss
and
loop
mov
lret
insb
iret
mov
sbb
dec
xchg
scas
jb
pop
lcall
iretw
xor
stc
inc
xor
mov
in
popa
mov
xor
lods
mov
cmp
stos
ret
aaa
adc
xor
push
shlb
dec
cmc
sub
ljmp
jmp
out
adc
inc
push
stos
jg
sbb
or
mov
mov
call
cmp
nop
les
sarl
jp
mov
popf
lret
xchg
cmc
pop
add
adc
mov
jno
xorb
push
incb
xchg
add
or
movsb
dec
aaa
test
xlat
xor
push
cmp
dec
jg
add
push
sbb
ret
push
aam
pop
jg
mov
mov
es
rcll
out
loopne
mov
push
fnstenv
sahf
ret
je
jae
push
rcll
mov
mov
mov
ficoms
pop
dec
xor
insl
jne
pop
mov
lds
xor
fldt
ljmp
mov
cmp
cmovp
pop
mov
or
jle
jl
enter
pop
jns
pop
mov
pop
das
adc
mov
cmpb
adc
idivb
shl
jns
ret
dec
je
pop
adc
fiadds
push
pop
xchg
or
vaddsd
pop
movsl
cmp
mov
mov
popf
roll
cli
pop
or
inc
scas
fisttpl
in
data16
out
or
in
rorl
mov
pusha
stos
cltd
call
jecxz
into
test
and
jp
rorb
addr16
dec
mov
stc
in
mov
sbb
cmc
inc
ds
push
pop
sar
ret
shll
lea
lcall
push
cmpsl
ljmp
ret
test
or
mov
repnz
stc
xor
lahf
sub
addr16
lock
mov
mov
xchg
mov
sahf
in
pop
stos
mov
xchg
cltd
vmovaps
je
mov
fisubs
cmp
mov
pop
rorl
xlat
fisubs
outsb
jecxz
fdivrs
jne
mov
sarb
aaa
mov
sti
lods
jmp
sub
aaa
pop
push
dec
bound
leave
or
lock
inc
scas
cmp
sub
sti
push
test
push
jle
jp
in
mov
in
pop
movsb
dec
add
pop
cmp
push
jo
shl
jmp
inc
les
push
mov
jae
xor
rolb
into
stos
fstp
popa
lcall
out
inc
insl
stc
ret
cmpsl
mov
mov
cmp
mov
imul
inc
out
test
in
ds
jle
popa
sbb
xchg
xchg
or
pop
sub
inc
insb
leave
jns
jmp
mov
stos
sti
in
sub
cld
scas
jle
dec
or
test
out
adc
fsubl
inc
inc
cli
jecxz
lock
sub
push
ds
add
jae
push
jae
rclb
mov
jne
lret
push
add
lret
icebp
lcall
xchg
pop
adcb
in
xor
add
pop
pop
sbb
dec
mov
jb
jp
mov
aad
mov
sbb
and
push
mov
sbb
dec
jns
in
adc
or
ret
push
jbe
xchg
stos
test
sub
push
pop
inc
or
jmp
mov
mov
lret
and
jbe
ljmp
fnstenv
xor
clc
and
push
inc
xor
adc
and
jnp
xchg
enter
mov
es
data16
or
bt
jge
pop
pop
cli
movsb
jb
jmp
push
xchg
sub
xor
cmp
jae
stos
and
movsb
pop
and
ret
shlb
push
std
xchg
jmp
mov
push
shrl
data16
rolb
mov
bound
cmp
bound
sub
sbb
pop
or
xchg
or
inc
push
stc
mov
dec
fidivs
jno
dec
js
xchg
jle
ja
xor
ficoms
jmp
cmp
repnz
mov
stos
pusha
enter
jmp
jns
jnp
add
jmp
dec
cld
scas
cltd
mov
iret
push
mov
mov
in
lds
icebp
inc
add
jl
dec
ror
test
out
cmp
xchg
loope
mov
in
incb
mov
sub
mov
inc
repz
cmc
adc
outsb
or
add
int
repz
xor
push
sbb
xor
mov
push
mov
test
and
cmp
call
mov
cmpsb
inc
lock
push
ljmp
sahf
jns
mov
sti
rclb
pop
mov
adc
dec
dec
pop
test
test
ss
pop
xor
loopne
lret
arpl
lcall
push
mov
jl
aam
adc
jmp
addb
fstp
xlat
cmp
jb
mov
call
mov
sar
int
push
es
cmpsl
mov
dec
aad
fwait
xchg
mov
stos
dec
and
aaa
mov
mov
and
out
push
mov
inc
in
outsl
roll
and
ss
imul
jg
jno
sbb
mov
jbe
scas
iret
loope
jbe
mov
out
pop
mov
adc
mov
icebp
adc
inc
imul
mov
mov
and
das
dec
cmpb
xor
or
icebp
notl
mov
push
imul
nop
out
incl
enter
mov
add
scas
cli
mov
in
scas
sub
xor
sti
imul
mov
push
xchg
popa
cmp
addr16
sbb
jl
add
popf
adc
popf
lahf
out
add
sub
sbb
sbb
testb
push
aad
dec
enter
stos
out
rorb
std
in
cmp
and
xor
inc
push
push
out
lods
aam
xchg
cmp
ret
lea
pop
aad
add
enter
add
adc
and
jmp
mov
mov
decb
push
xchg
addl
sbbl
insb
push
or
mov
mov
jmp
pop
hlt
xchg
enter
pop
cltd
lock
xor
ja
adc
pop
push
icebp
xor
test
dec
xchg
lods
daa
arpl
mov
cmp
or
stos
cmp
mov
arpl
inc
and
jnp
dec
fstpl
sub
cld
imul
lahf
ficompl
stos
imul
in
sub
sahf
pop
mov
lahf
sti
jo
insl
dec
and
stc
mov
add
push
leave
add
rclb
xchg
jecxz
leave
lods
mov
and
lds
sti
and
jecxz
test
jo
dec
in
mov
mov
jg
mov
inc
fadd
push
jbe
test
jo
cmp
rolb
pop
xchg
xchg
mov
mov
pushf
inc
fdivp
push
xlat
test
aam
fwait
jge
lods
jle
lret
mov
shrl
cmp
pushl
lods
push
and
cmp
xor
ficoms
adc
leave
outsb
bound
cmpsb
sub
lock
push
fldcw
das
xlat
push
dec
jmp
mov
dec
jg
fldenv
sbb
jne
mov
lea
movsl
pop
sbb
jl
ja
pop
or
ljmp
mov
xor
pop
sbb
test
in
dec
cmp
or
jo
lods
jl
and
scas
pusha
pop
sahf
fcomps
mov
xor
loope
cmp
jp
xor
jne
cmpsl
jmp
dec
das
push
fistps
xor
sti
sahf
mov
sub
push
cltd
push
mov
mov
mov
cmpb
and
lea
pop
mov
hlt
pop
jge,pt
sbb
scas
mov
out
icebp
cmc
dec
adc
mov
xchg
mov
outsl
push
stc
inc
ret
adc
lock
and
mov
out
mov
xor
mov
popf
insl
cli
push
adc
lret
mov
lret
in
pusha
adc
fucomip
shll
adc
mov
loope
inc
pop
enter
jg
adc
enter
push
sbb
pop
cmp
add
or
inc
repz
and
mov
jbe
cmp
xor
in
jb
mov
jg
lret
pusha
xor
and
insl
int
adc
cwtl
push
mov
jnp
shlb
xchg
dec
pop
jg
test
xchg
pop
mov
lret
and
mov
push
scas
push
lods
mov
lods
cmp
fs
push
jg
dec
inc
mov
sbb
sbb
leave
xchg
pop
sbb
push
test
jmp
dec
lret
add
pop
and
jle
sahf
jo
push
jo
popa
js
scas
jnp
xor
outsl
in
call
jmp
inc
es
mov
pop
cmpsb
fistl
inc
daa
adc
mov
dec
push
xor
add
test
adc
and
mov
ret
adc
movsl
dec
xchg
fiaddl
outsl
pushf
fistpll
bound
mov
cli
cmp
addl
pop
dec
xor
js
outsl
cltd
dec
jmp
push
push
imul
jp
lea
out
xchg
aas
mov
mov
adcl
inc
nop
jl
orl
lahf
mov
divl
sub
add
or
int
inc
pop
mov
xor
call
call
xchg
loop
mov
dec
subb
lret
mov
or
dec
push
orb
addr16
xchg
insb
imul
fisttpl
mov
sbbl
xor
andl
mov
addl
add
andl
movzwl
notl
mov
and
mov
movzwl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
mov
add
mov
xor
addl
add
mov
or
mov
xor
add
mov
movl
movl
movl
movl
movzwl
mov
mov
jmp
mov
add
mov
sbb
mov
orl
xor
xor
adcl
sub
adc
sub
movl
xor
mov
and
mov
or
mov
lea
mov
orl
mov
movzbl
xor
mov
lea
not
mov
xor
or
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jb
orl
mov
sbbl
lea
and
mov
and
mov
mov
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
adcl
lea
mov
not
mov
mov
and
mov
mov
sbbl
lea
orl
mov
mov
xorl
xor
sbbl
add
jne
jmp
xor
add
mov
sub
and
mov
subl
mov
xor
orl
xor
sub
sub
xor
mov
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
add
adc
mov
mov
mov
sbb
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
rcrl
imul
jae
mov
add
bound
loop
adc
adc
jb
xchg
pushw
pop
cli
in
jp
pusha
fst
mov
loopne
sbb
ret
push
out
mov
pop
out
pushf
mov
pop
clc
je
lahf
stos
xor
push
xchg
daa
fdivrp
cmp
mov
test
jb
outsl
stc
xchg
dec
sbb
or
jb
pusha
fstl
pushf
fmuls
mov
mov
xchg
repz
idivl
xchg
rcrb
xor
lds
pop
in
sub
xchg
stos
mov
xor
xor
mov
je
dec
das
in
mov
arpl
adc
add
stos
movsb
daa
outsl
jo
or
cld
movsb
or
out
test
sbb
pop
add
add
push
sub
data16
dec
mov
daa
adc
xchg
decl
lods
fcmovu
cmp
or
push
inc
cltd
xchg
scas
push
outsl
mov
enter
pop
dec
jnp
push
inc
lods
aam
rcrl
ja
jo
pushf
mov
mov
andl
pop
cmp
inc
daa
inc
jmp
mov
pop
orb
jecxz
addb
pop
out
fnstsw
xlat
xchg
mov
xor
mov
scas
pop
or
xchg
scas
push
lret
and
cld
jbe
jbe
cwtl
adcl
and
or
xor
ret
and
jge
jne
lods
sub
mov
lahf
icebp
sub
ret
xlat
imul
outsb
divb
les
xchg
repz
negb
push
notl
outsl
int
inc
inc
and
and
push
cmpsl
das
push
jecxz
dec
lock
sub
pop
mov
outsl
push
adc
fwait
push
out
pop
test
outsl
adc
cmpl
cmpsl
sub
mov
inc
jge
jmp
jg
mov
mov
fcoms
aad
fldcw
inc
fsubp
in
mov
test
jl
jg
sbb
dec
loope
out
shrl
sbb
aam
pusha
push
daa
sbb
mov
push
inc
fsubs
fcmovbe
xor
ret
xchg
or
movsb
pop
fsts
adc
jo
pop
mov
dec
xor
daa
ja
pusha
daa
js
sbb
sbb
lds
imul
pop
repnz
dec
ljmp
jle
push
decl
scas
push
mov
ret
xchg
or
in
loopne
cmc
mov
jmp
push
xor
scas
sbb
push
in
sar
dec
add
fs
test
aaa
mov
insb
stos
cwtl
mov
jge
mov
push
mov
add
popa
out
mov
pop
push
rorb
imul
mov
cmpsb
mov
lds
test
jne
sub
jp
icebp
aaa
fdivs
dec
xchg
xchg
or
pop
adc
sub
shlb
xor
iret
movsb
jl
and
repnz
cmpsb
add
push
push
inc
int3
add
and
cmpsb
or
mov
push
clc
jne
clc
and
push
pushf
lods
add
stos
inc
lcall
jne
pop
push
push
popa
xor
aas
subb
push
outsl
adc
dec
outsl
popf
inc
pop
inc
std
cld
mov
push
or
aaa
mov
push
outsl
repz
daa
and
popf
call
push
enter
xor
addr16
fwait
lock
stc
lcall
loopne
xor
cmpsb
pop
dec
adc
cld
dec
pop
pushf
inc
in
mov
cmpsb
inc
push
mov
cmp
and
data16
cmp
mov
bound
in
js
sbb
xor
cmpsb
mov
sub
bound
js
jmp
negb
push
imul
hlt
sbb
pop
push
in
xchg
push
loopne
pop
mov
leave
lahf
clc
je
fisttpll
mov
or
aaa
sbb
jge
scas
ja
jnp
or
sbb
scas
sub
pop
inc
jb
jmp
mov
cmc
outsl
insb
xor
xchg
stc
in
rcrb
xchg
jmp
inc
and
push
pop
mov
in
mov
bound
inc
lcall
mov
pop
mov
das
mov
mov
into
mov
mov
aam
add
test
jns
out
adc
sbb
cld
sti
mov
adc
arpl
repnz
mov
ds
in
enter
leave
push
adc
dec
shlb
pop
movsb
fs
in
pop
cmp
out
add
test
push
shll
daa
sarb
push
mov
inc
cmp
cmp
jb
gs
cmp
mov
outsb
pop
popfw
out
je
mov
sub
out
mov
in
push
popf
rcll
mov
sbb
adc
mov
xchg
loope
data16
out
xor
in
loop
pop
cmc
dec
mov
shlb
test
aas
cmp
mov
mov
mov
xor
js
jl
jl
lret
sahf
sub
xchg
daa
mov
jae
inc
mulb
inc
xor
push
cld
jl
adc
push
shll
push
and
sub
push
or
add
sbb
into
in
movsb
lds
cs
jb
xchg
fs
psubusw
sbb
mov
cmp
sbb
sahf
jg
inc
sbb
fadds
out
rorb
lods
cmpsb
pusha
call
jbe
dec
out
inc
clc
call
add
push
push
jp
mov
jecxz
and
mov
test
mov
xor
movsb
lret
jne
shll
cmove
mov
mov
mov
cmp
sub
mov
push
lods
mov
fwait
pop
mov
mov
scas
jle
mov
adc
mov
cli
lds
or
dec
pop
xchg
les
mov
lar
mov
mov
ficompl
repz
jmp
adc
jecxz
out
pop
ret
mov
mov
inc
adc
cmp
loope
cmp
mov
xchg
test
dec
add
dec
loopne
outsb
push
fs
ja
mov
out
sbb
add
xor
fsubr
fstpl
in
sbb
cmp
xor
sub
xchg
loop
nop
cmp
cli
sub
push
xchg
push
out
mov
add
jg
out
testb
inc
jns
sbb
shrl
imul
stos
xchg
je
adc
and
lods
sub
jbe
inc
pop
push
xor
jne
jecxz
fisubl
jno
jo
insb
pop
add
jl
sarb
mov
or
rcrb
cmpsb
nop
and
push
mov
cmp
je
jecxz
cwtl
mov
mov
mov
aaa
ret
fnstcw
push
js
jecxz
cltd
adc
fdivrs
cmp
insl
adc
cmpsb
and
lods
or
in
mov
in
pop
push
push
in
push
mov
push
cld
lods
loop
data16
sub
int3
fdivl
fscale
xchg
ret
dec
sub
fisttps
pop
xlat
js
aaa
cs
sbb
mov
dec
ficompl
xor
mov
dec
jae
xlat
out
js
pusha
pop
stc
adc
cwtl
mov
ss
je
push
jmp
sarl
add
jne
jae
lahf
cmpsb
push
pop
rorl
jo
or
or
adc
mov
mov
and
and
movsl
out
lret
aad
arpl
mov
lret
push
scas
and
xor
mov
repz
rcl
out
and
mov
mov
sbb
jno
bound
sub
clc
fnstsw
push
icebp
pop
dec
pushf
inc
mov
mov
mov
and
mov
push
int
fsubrl
jbe
or
or
call
nop
and
push
dec
mov
jne
loopne
stos
inc
fsubrl
dec
scas
cmp
fisttps
ljmp
orl
test
fadds
adc
or
je
inc
addr16
mov
jecxz
into
in
adc
in
or
enter
ss
mov
inc
addr16
cld
shll
fadds
mov
cmpb
jp
dec
pop
popf
push
jbe
cmc
jge
sti
push
adc
cmp
fistpll
jle
lcall
lahf
stos
adc
mov
out
je
ds
ja
sub
xchg
push
fists
scas
jb
arpl
imull
loopne
inc
sub
mov
push
ljmp
aad
add
sarb
add
arpl
movsb
push
inc
xlat
jb
xor
mov
outsb
xor
adc
cmp
jmp
dec
pop
into
hlt
add
rclb
sbb
push
inc
fs
or
ficompl
cwtl
push
cltd
cmpsb
das
sarl
rcrb
and
fldenv
decl
int3
add
out
push
inc
das
lods
mov
dec
movsl
aam
repz
pop
mov
lods
xchg
pop
int3
pop
xor
gs
mov
lods
sbb
xor
leave
pcmpeqw
icebp
mov
mov
jle
jns
cli
xchg
popf
pop
push
lods
sbb
pop
data16
imul
rorl
xlat
inc
jb
add
cmp
sub
and
scas
sbb
lea
xchg
aad
xor
pushf
loop
fistps
sbb
into
adc
or
fstl
mov
jge
and
fisttps
mul
or
and
call
inc
xor
ljmp
movsl
scas
xor
in
in
cmp
call
dec
ss
push
jae
rclb
push
rcr
adc
adc
push
lock
leave
jbe
xor
cli
faddl
negl
pop
data16
mov
imul
xchg
addr16
shll
sbb
jmp
in
into
insb
adc
into
test
jl
nop
mov
loope
sbb
or
and
cmpsb
lcall
dec
rcrl
mov
into
lods
pop
sahf
cwtl
lcall
cmp
sbb
and
mov
jnp
jae
mov
and
ret
xor
icebp
mov
adc
cmp
cmc
sbb
add
stos
jle
int3
pop
fldenv
jno
stos
mov
scas
dec
insl
das
dec
sub
sub
or
inc
push
nop
mov
loopne
cmp
ss
out
aaa
outsb
cld
pop
fwait
lret
fs
pop
insl
mov
dec
shl
mov
add
inc
aad
mov
outsb
cmp
shll
test
fidivs
mov
outsl
inc
cltd
pop
inc
pop
mov
mov
and
xchg
lds
arpl
and
dec
jle
popa
fs
cmc
cmp
push
insb
push
lock
dec
fcoms
cld
enter
push
pop
cmp
pop
mov
hlt
pop
xor
adc
inc
jnp
stos
cmp
cwtl
mov
jge
lret
je
gs
test
inc
xor
icebp
xchg
lods
and
add
popf
cmp
xchg
dec
cmp
negb
addb
push
pop
xchg
popf
and
inc
ss
dec
movsb
xor
imul
cmpsb
loopne
scas
mov
sbb
scas
inc
adc
cmpsl
xchg
and
jmp
or
and
mull
hlt
into
bound
lret
sub
in
adc
pop
and
adc
sarb
ss
popf
push
mov
jns
and
gs
pop
fmul
and
mov
pop
lahf
cmp
aad
xor
loope
inc
push
add
adc
lret
shll
and
cmp
insl
xchg
lcall
shrb
dec
add
clc
decl
mov
aas
fucomip
repnz
sbb
in
adc
pop
jge
mov
addl
inc
xor
add
jg
add
gs
and
lods
loopne
pushf
add
xchg
stos
ss
push
sbbb
test
add
xor
cmp
inc
pusha
mov
inc
xor
push
pop
mov
scas
ja
add
inc
negb
in
xor
pop
scas
adc
sub
xor
and
cmp
aam
popf
inc
mov
mov
push
mov
and
addr16
mov
jecxz
in
jmp
es
xchg
sbb
roll
cmp
adc
mov
addr16
xchg
sbb
sbb
sbb
jl
push
emms
je
xchg
shll
ss
lods
add
mov
xchg
mov
xchg
out
out
add
popf
mov
xchg
mov
test
mov
fbld
imul
sahf
dec
xor
bound
stos
aam
mov
jae
cmp
ss
or
movsb
jl
cwtl
sbb
pextrw
sub
ret
add
xor
aam
sub
out
aad
or
mov
sbb
mov
ds
insb
lds
enter
cld
test
mov
ret
int3
je
jne
mov
pop
loopne
pop
push
inc
nop
aas
daa
scas
scas
mov
out
mov
popa
int
rcrl
sbb
or
ficomps
dec
jl
fiadds
mov
cs
jae
sub
mov
ficoml
out
pop
fnstsw
xor
jp
addb
push
cmpsb
movsl
xchg
out
mov
pop
or
loope
popa
mov
aad
sub
xor
mov
cld
inc
jge
cs
shlb
or
inc
cmpsl
adc
test
or
pushf
or
dec
push
lahf
push
sub
and
in
xor
fdivrl
ret
popf
jns
inc
ss
sbb
lret
cmpsl
pop
iret
rolb
fbld
imul
ja
lret
inc
lds
out
outsl
dec
add
cwtl
sbb
mov
repz
xor
ljmp
fistps
jnp
call
and
sub
mov
cmpsb
mov
loopne
fildll
push
or
pop
imul
scas
enter
frstor
cmc
mov
sub
lret
xor
imul
addr16
push
sahf
stc
dec
sub
setle
fnstcw
scas
gs
pushf
jmp
fldl
mov
adc
adc
mov
lods
pop
data16
or
mov
sbb
add
fs
stos
lret
clc
cmp
in
mov
push
xchg
ja
mov
mov
dec
jl
dec
mov
push
sahf
movsl
daa
ja
cmc
fcmovnbe
or
imul
lods
cs
jb
shrl
stos
fcoms
sub
xchg
cmc
cld
mov
and
cmp
psrlq
test
mov
test
sbb
ret
enter
stos
add
adc
cmp
addr16
clc
xchg
adc
sub
fwait
sti
movsl
out
inc
or
sub
adc
push
add
mov
dec
xor
lret
cwtl
pop
xor
add
adc
es
lret
iret
mov
and
pop
pop
or
sarb
fisubrl
sub
mov
xchg
inc
loop
popa
sbb
xchg
xor
jbe
and
dec
xchg
push
fidivrs
hlt
ja
es
aam
ret
xchg
adc
test
inc
xchg
cmp
pop
std
int3
jnp
add
bound
mov
pop
not
outsl
ljmp
stos
jmp
iret
ja
xor
jb
xor
gs
aad
jae
daa
out
sti
xor
lret
sub
cmp
push
andl
dec
inc
das
cmc
mov
push
xchg
cmp
cmpsb
aas
or
sub
int
jns
pop
icebp
xchg
inc
rclb
movsb
jb
pop
pop
xor
imulb
mov
and
mov
divl
lcall
test
ret
rcrl
faddl
mov
imul
xor
push
cmp
cmp
jbe
dec
xchg
push
dec
and
arpl
xlat
mov
xchg
mov
repnz
sub
aad
rcll
inc
idiv
xlat
movsl
int
mov
cbtw
mov
mov
xchg
lock
fucomi
add
ror
xor
or
add
adc
push
sub
push
mov
roll
xor
in
xor
insl
jo
das
cmc
jle
xchg
frstor
cmpsb
mov
xor
jns
push
insb
dec
gs
xchg
in
aam
mov
mov
cmp
xchg
loope
push
ss
jbe
subb
or
in
subb
adc
sub
xor
mov
dec
jbe
popa
xchg
and
clc
sbb
push
in
xchg
adc
insl
dec
mov
jnp
dec
xchg
sbb
lahf
or
cmp
popa
jae
sub
xor
testl
mov
add
andb
adc
inc
iret
push
push
mov
xor
or
pusha
xchg
test
adc
roll
cwtl
pop
loopne
and
test
testl
shrl
es
xchg
imul
pop
mov
sub
mov
cmc
into
and
lods
mov
jb
dec
loopne
icebp
das
sbb
bound
sub
xchg
jne
or
fcmove
imul
bound
push
fs
mov
jg
inc
icebp
shrl
inc
out
pop
lret
xchg
cmp
jae
cmpsb
in
lahf
lahf
adcb
push
or
xchg
mov
insl
out
push
mov
lahf
inc
fildl
lcall
add
xchg
cli
add
roll
jae
or
jo
or
dec
ficoms
adc
sbb
jns
sub
and
push
dec
loop
mov
outsl
pcmpeqd
rol
jo
cltd
adcb
mov
cltd
pop
pop
jae
mov
adc
or
ds
lods
fisubl
arpl
push
in
rclb
mov
andl
mulb
in
daa
mov
and
sbb
aaa
push
dec
loopne
icebp
and
push
sarb
movsb
popf
fcomps
xor
sbb
push
cmp
bound
fstps
add
cmp
fcoms
pusha
int3
aam
xor
sub
fsubr
inc
xor
jno
mov
mov
sbb
cmc
jno
loop
xchg
int3
in
fbld
mov
mov
push
mov
or
xor
cld
dec
clc
or
lahf
mov
jmp
imul
adc
ret
fiaddl
sub
orb
insl
sbb
add
mov
popf
mov
mov
pop
mov
pop
aas
sub
popa
lret
add
in
sub
mov
lea
push
aaa
pop
pop
adc
rorb
lds
call
sbb
jbe
mov
or
sbb
mov
push
xor
jnp
mov
jo
or
adc
mov
sbb
jl
mov
and
lock
in
mov
inc
pushf
out
in
out
mov
bound
mov
arpl
ss
cltd
mov
mov
jae
int
out
mov
lcall
cmp
adc
in
ja
pusha
xchg
icebp
cli
movsl
int3
mov
push
xchg
ljmp
adc
add
clc
pop
push
mov
in
add
popf
ss
jb
imul
adc
mov
lods
cltd
or
js
xchg
subb
mov
fmuls
aas
inc
mov
ret
fwait
mov
add
jp
jge
test
sti
pop
mov
sbb
sar
push
add
repnz
xchg
or
insl
or
out
pop
aam
push
inc
lahf
pop
xchg
outsb
or
hlt
popa
add
jge
dec
pop
aam
xor
dec
jae
sbb
sti
loop
jb
es
jecxz
mov
push
scas
sub
adc
stos
adc
jb
add
xchg
dec
fimuls
pop
sub
enter
mov
fwait
jl
icebp
inc
mov
adc
sbb
shrb
mov
shr
cmp
dec
jl
cs
test
add
sahf
insb
scas
shrb
cltd
mov
jg
ja
cli
sbb
test
mov
adc
fsubrs
enter
in
jae,pt
xlat
xchg
mov
ss
leave
popf
fs
leave
sahf
push
adc
pop
sub
cmc
mov
movsl
cmc
jmp
push
bound
inc
nop
mov
stos
stos
push
adc
and
rclb
and
add
adc
or
xchg
idivb
inc
fisttps
adc
lahf
sub
jnp
adc
mov
fdiv
inc
sbb
adc
cmp
dec
lock
and
movsb
and
inc
fsubl
fwait
xor
jbe
add
mov
add
sti
cmp
test
mov
dec
fadd
pop
rol
cmp
xchg
clc
out
pop
push
in
xlat
in
sbb
outsb
pop
or
and
pop
fwait
mov
cmp
out
push
push
daa
outsl
dec
pushf
add
lods
nop
pop
outsb
data16
add
sbb
gs
adc
inc
mov
sub
sbb
cmp
and
lcall
into
mov
into
adcl
add
xchg
fst
sbb
push
sub
ret
sbb
xchg
pushf
adcb
sbb
pop
push
mov
pop
lcall
push
das
mov
aaa
rolb
jbe
or
divl
stc
out
lods
lcall
fwait
icebp
stc
jecxz
sub
pop
sti
out
push
push
add
jno
test
mov
sbb
lock
push
pushf
dec
fmull
add
adc
inc
ds
inc
dec
cmp
sub
jl
aas
lret
dec
mov
and
into
cmp
cld
dec
mov
mov
dec
mov
mov
pop
inc
mov
adc
loop
call
aam
mul
out
inc
jle
repnz
imul
inc
mov
dec
out
in
xchg
cmp
cli
fcomps
addr16
aam
jno
aad
pop
dec
dec
rclb
aad
adc
mov
arpl
addr16
subl
pop
in
sub
arpl
pop
sbb
pop
fs
xlat
inc
js,pt
in
int3
jae
mov
hlt
mov
or
pop
or
push
pop
subb
js
je
xchg
mov
movsl
dec
aad
jg
cmp
pop
sbb
lahf
pushf
cmp
mov
orb
arpl
test
popa
push
lods
xchg
aam
je
fcompl
cld
mov
mov
dec
insl
sub
mov
cmpsb
cli
jb
pushf
ds
or
inc
mov
pause
lcall
movsb
add
pop
dec
fcmovnbe
out
sbb
mov
jb
mov
addr16
pop
jp
pop
imul
xchg
xchg
mov
mov
mov
and
das
loope
mov
inc
loopne
mov
inc
cmpb
jae
inc
and
notb
or
stos
test
pop
bound
cmpsb
mov
xchg
lea
mov
mov
lret
mov
or
das
pop
popa
roll
jmp
pop
ds
mov
pushf
daa
cld
inc
dec
adc
or
lds
loope
dec
and
push
xor
iret
push
fwait
rol
mov
icebp
push
fdivl
loop
rolb
int3
lods
arpl
fcmovb
outsl
andb
and
sub
cmpsb
int3
pop
test
call
cmp
orl
outsb
stc
xchg
out
fcomps
dec
mov
test
mov
mov
cld
adc
out
addr16
sbb
sbb
xor
imul
mov
pop
mov
hlt
rcrb
push
jo
adc
ret
int
test
inc
ret
and
or
and
pop
insb
ror
jl
fstl
inc
mov
loop
sub
xchg
adc
out
jge
mov
mov
lods
lea
cmp
push
insb
jns
pusha
in
dec
clc
jle
or
pusha
fldcw
sbb
out
xchg
popf
lcall
andl
dec
sldt
cmp
mov
test
fidivrs
cwtl
mov
lahf
dec
sub
out
dec
sahf
dec
mov
inc
xchg
pushf
sbb
sub
dec
add
lcall
sbb
data16
lret
sahf
notl
jg
dec
ror
test
xchg
mov
imul
ret
dec
lds
dec
mov
add
popa
jge
loop
mov
lods
mov
leave
mov
fists
aaa
pop
sub
and
dec
add
sbb
pushf
jle
jnp
bound
mov
ja
std
sti
push
fbstp
push
lock
jle
lcall
data16
sub
out
in
daa
jmp
inc
mov
popa
ds
je
enter
fxtract
inc
cmc
daa
inc
mov
adc
mov
mov
inc
jbe
mov
xor
push
ja
mov
xchg
scas
pop
popf
out
outsb
adc
shll
inc
xor
arpl
in
arpl
sub
cltd
popf
mov
repz
jmp
imul
iret
or
and
mov
mov
pop
jle
or
insl
add
sbb
mov
enter
pop
imul
pop
jae
mov
cmc
ljmp
jl
adc
out
sub
repnz
pop
adc
jno
insl
xor
sub
sub
cmp
les
jb
imul
in
popf
mov
in
lods
dec
leave
repnz
inc
movsb
je
cmp
leave
xor
mov
sbbl
dec
call
push
mull
daa
cmp
xchg
mov
in
shll
add
rorb
push
sub
cwtl
jo
or
lret
and
adc
xor
xchg
je
clc
or
push
pop
dec
push
xor
push
loope
sbb
sbb
or
movsb
or
push
mov
mov
aam
fwait
xchg
inc
sub
in
cli
sub
in
mov
xlat
ret
dec
mov
push
lret
push
lahf
pop
push
int
mov
xchg
stos
push
fdivrs
and
sbb
fists
sub
in
shll
aad
test
mov
out
addr16
pop
fiaddl
cmc
pop
sbb
mov
add
sub
jle
inc
xchg
or
insb
or
sub
jnp,pt
add
ret
xlat
cld
lods
mov
repz
lods
or
test
mov
movsl
idiv
pushf
outsb
add
daa
sti
cli
shll
sbb
dec
pop
andb
push
mov
fwait
sub
nop
fstp
mov
or
nop
cld
pop
jmp
fucomip
pop
loopne
fmuls
sub
dec
ss
jo
jecxz
cmp
cmp
adc
xorb
pop
xor
mov
movsl
test
adc
mov
xor
push
jge
insl
das
xor
negb
imul
aad
xchg
enter
rclb
daa
cmp
dec
rclb
cmp
test
inc
cmc
lods
add
int
or
iret
cli
lods
and
pop
and
mov
pop
out
insb
mov
jle
mov
pusha
inc
nop
xchg
ljmp
xor
mov
cmpsl
sub
and
jb
insl
inc
into
mov
xchg
imul
mov
and
mov
sbb
mov
mov
call
pop
jbe
imul
stc
mov
in
pop
pop
and
xor
and
xlat
cmc
xchg
or
pop
pop
jnp
out
cwtl
xchg
or
fstl
push
xchg
adc
mov
lret
icebp
in
sbb
xor
in
cmp
mov
sbb
mov
mov
push
adc
imul
into
jae
pop
push
pop
jp
xchg
cmp
stos
jns
les
inc
movsb
inc
push
push
sub
into
bound
sbbl
mov
sbb
dec
xchg
mov
lcall
orl
sahf
or
cli
stc
push
and
lds
jecxz
dec
ja
sub
test
fidivs
test
sub
lea
sbb
sbb
sub
loop
jge
out
push
adc
mov
and
les
dec
xlat
ja
mov
test
sub
mov
adc
aad
adc
fs
fildl
mov
cmp
jns
xchg
jo
stos
inc
sub
xor
scas
inc
outsl
sub
hlt
xchg
jle
xor
cmc
xor
and
rorl
cmp
inc
lret
adc
sbb
pusha
push
cmp
loopne
inc
cs
or
dec
jnp
sbb
dec
push
ror
lods
jg
mov
mov
adc
sub
and
iret
popf
std
and
or
cmp
imul
dec
cld
jo
sub
int3
jno
pop
dec
sti
nop
scas
xchg
addl
in
mov
cli
pop
add
rorb
sbb
mov
movl
mov
push
xor
mov
sarb
in
sarb
dec
add
nop
and
rorb
fcoms
stos
out
sub
mov
es
pop
xadd
cmpsl
scas
inc
insl
push
mov
jge
aas
data16
test
fwait
dec
je
shlb
and
cmc
jg
xchg
dec
icebp
or
pop
jb
or
mov
xchg
cld
mov
sbb
orl
das
enter
nop
lret
mov
cmp
jmp
mov
into
fdiv
cwtl
insl
test
jae
lea
das
inc
cli
jle
pop
fs
es
xor
mov
loopne
sub
sbb
jge
out
adc
inc
or
imulb
ja
fstp
scas
mov
push
outsl
addr16
ficoml
xlat
testl
jne
mov
sub
mov
popl
xchg
pop
stc
mov
ret
das
xchg
push
add
lds
pusha
insb
xor
and
jmp
fisubl
or
test
lods
jecxz
stos
int
mov
pop
sbb
ffreep
jne
js
addr16
mov
pop
test
push
mov
aaa
push
push
sub
insb
add
jge
adc
push
or
xchg
fldcw
in
insb
mov
js
and
movb
jbe
pushf
dec
imul
mov
mov
push
fsubrl
pop
es
push
and
hlt
stc
mov
fnstenv
lahf
or
add
xchg
ret
mov
lock
out
mov
scas
lods
cltd
jns
cmp
ret
hlt
test
cmp
xor
in
je
sub
fsubrl
out
jnp
jne
sbb
lcall
jl
sbb
mov
jp
cltd
or
mov
sub
dec
jge
xchg
inc
add
lods
inc
hlt
je
push
add
icebp
nop
mov
dec
ljmp
push
mov
imul
lds
mov
add
xor
or
dec
adc
adc
push
jmp
xchg
cmp
jl
and
hlt
sub
out
jg
les
jmp
vmovntdq
adcb
xor
cwtl
out
dec
pop
cmc
out
pop
dec
cmpsb
gs
cvtps2pi
test
stc
addr16
aaa
jne
movsl
out
push
mov
sub
mov
sbb
mov
or
ja
add
ss
in
xor
in
fdivrl
mov
adc
test
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
jmp
dec
xor
test
mov
cmp
bound
bound
cltd
std
pop
and
mov
dec
ss
nop
addr16
sbb
fdivrs
movsb
jg
out
imul
aas
push
push
push
dec
gs
ja
hlt
dec
out
push
push
add
push
sbb
xadd
fiaddl
lret
cmp
js
mov
jb
cs
mov
jp
cli
jns
xor
mov
fucompp
push
jp
jg
pop
adc
sub
mov
stos
mov
aam
and
add
xor
pop
lea
mov
jge
push
imulb
imul
in
sub
ds
movsl
pusha
adc
cli
cld
pop
push
lock
mov
pop
lcall
or
jno
out
xchg
stc
cli
push
pusha
sahf
push
xchg
outsb
iret
jg
nop
shll
addr16
inc
pop
mov
push
lret
ffree
sbb
cmp
sbb
xor
imulb
imul
popa
mov
out
push
pop
add
jmp
xchg
cmpsb
push
or
daa
mov
das
inc
cwtl
imul
mov
cmpsl
sub
push
adc
imul
dec
jnp
ficoml
inc
sbb
and
rcll
add
das
pushl
xchg
xchg
cmp
insb
mov
add
push
bound
push
mov
mov
mov
notb
lods
inc
sub
inc
int3
cmpsl
mov
loop
add
stos
inc
mov
loop
jg
mov
ja
mov
lea
pushf
mov
adc
adc
cmp
cmpsb
and
stos
or
pop
adc
pushf
ja
scas
div
adcl
mov
dec
out
icebp
inc
lahf
and
addl
push
stos
outsl
adc
add
mov
inc
jl
mov
scas
mov
clc
and
jbe
mov
cmp
and
es
lahf
pop
xchg
pop
sarl
int
xor
add
jl
push
mov
lret
gs
mov
sahf
je
jecxz
and
sbb
movsb
enter
mov
jge
cmovge
add
fcomps
int3
push
mov
ss
jo
adc
xchg
push
mov
in
cmp
sahf
adc
adc
call
icebp
lods
dec
stos
dec
jle
data16
jo
xchg
into
or
insb
xchg
repz
dec
lret
or
pop
jo
test
or
or
mov
sbb
dec
clc
jb
pop
loope
data16
aam
fsubrp
push
cwtl
je
bnd
push
les
out
in
pop
mov
in
lds
lret
scas
jmp
mov
push
adc
inc
daa
inc
and
mov
or
lods
mov
inc
decl
or
xor
out
pop
push
sbb
sbb
mov
adc
adc
in
cmp
rcrb
in
les
call
dec
cmpsl
jae
xchg
in
ds
cld
test
add
or
bound
pop
mov
sbb
shl
jbe
aaa
inc
and
push
fsubr
fstpt
fnstenvs
jle
xchg
lret
cmp
xchg
loop
and
push
xchg
inc
ret
pop
xor
mov
jns
stc
aaa
cli
insl
inc
mov
adcb
bound
gs
in
pop
dec
cli
dec
jbe
fadds
inc
in
nop
fldcw
ljmp
lock
popf
mov
shlb
inc
inc
aad
out
jmp
icebp
add
xchg
arpl
mov
aam
xor
pop
push
roll
mov
or
add
cmp
int3
pusha
xor
fisubl
cld
add
jp
sub
sub
enter
xchg
aad
clc
pop
cmpb
xchg
lea
addr16
sbb
mov
jae
sbb
add
pusha
insl
cmpb
cli
dec
mov
js
leave
xor
fwait
shlb
das
shr
pop
xor
js
push
mov
pusha
and
aam
push
adc
mov
jnp
repnz
jge
stos
cmp
mov
inc
movsl
pop
lret
clc
or
lea
cmp
xor
mov
pop
adc
sbb
jmp
popf
xlat
js
js
andb
add
pop
out
inc
inc
lea
pop
data16
adc
cmp
xchg
sub
and
sub
fucomi
sub
mov
jmp
xchg
fnsave
mov
stos
mov
enter
dec
push
sbb
imul
pop
dec
xchg
inc
xchg
sub
jno
push
fcmove
fs
mov
test
dec
test
or
mov
cltd
cmpl
flds
arpl
fmuls
or
ja
jecxz
mov
mov
test
fcmovbe
lods
jb
pop
mov
les
shrl
add
xor
push
ja
stos
movsb
inc
cmp
cmp
into
inc
xor
jo
in
cs
mov
call
ss
stc
xchg
xorl
add
loope
jg
adc
ret
icebp
in
std
scas
push
cmp
mov
pop
idiv
jp
adc
cmpsb
add
inc
fsubl
add
in
cmpsb
aas
xor
hlt
and
test
jne
cltd
xchg
mov
xor
loop
data16
cs
fs
dec
rcrb
scas
loop
push
idivl
and
mov
mov
icebp
xor
out
enter
mov
and
mov
cmc
dec
pop
push
add
shlb
add
cmp
sub
fwait
jl
sbb
in
sub
arpl
mov
and
cmp
insl
dec
in
adc
and
out
pop
shrb
cs
test
push
push
mov
lock
imull
xchg
movsl
mov
push
or
adc
dec
das
push
test
mov
mov
adcb
mov
dec
adc
out
jecxz
repz
and
pop
lods
push
pop
inc
or
subb
jae
arpl
inc
lcall
aaa
cs
inc
xor
cmp
xchg
sub
mov
fcoml
mov
push
sub
sbbb
sub
xor
dec
daa
mov
iret
ss
push
dec
ja
shlb
rorb
shrb
imul
pop
sbb
xchg
arpl
cmc
pop
les
pop
xchg
dec
int3
dec
push
es
inc
call
xchg
add
fmull
xchg
shl
mov
or
out
mov
dec
fcoml
push
ss
or
stos
push
negl
cmp
sarb
in
sbb
ja
xor
xchg
loope
jecxz
mov
jno
or
xchg
rorb
mov
push
xor
pusha
ljmp
xor
mov
jmp
xor
pop
out
inc
mov
je
mov
imul
xchg
xlat
cmpsb
push
or
jge
sbb
cmp
stos
add
dec
sub
nop
shll
or
aaa
jnp
fists
sub
out
xor
cmp
mov
xor
adc
cli
js
outsl
in
dec
and
int3
cmc
mov
push
xchg
dec
fildl
mov
mov
and
out
sti
cmpb
rcl
inc
add
mov
push
pop
cmp
jns
mov
cmp
fcom
cwtl
add
js
mov
xor
xchg
popa
pop
cmp
mov
jge
xor
iret
pop
sbb
hlt
into
mov
cwtl
mov
iret
dec
cmp
push
stc
dec
imul
mov
mov
cld
add
cmp
ftst
mov
lret
pop
scas
xchg
pop
hlt
push
xchg
clc
aaa
adc
mov
sub
aad
dec
lret
mov
ret
cmp
inc
xchg
fs
inc
mov
stos
lea
cld
les
dec
mov
jmp
and
daa
stos
icebp
fildl
sbb
fmull
inc
sbb
adc
lods
test
idivb
cmp
int3
js
adc
jae
lea
sub
xchg
sub
das
inc
lcall
movsb
xchg
mov
xor
and
xchg
sub
and
lcall
in
cmc
or
aaa
sub
cmp
dec
rolb
xlat
pop
repz
push
loope
mov
jno
pop
fdivrs
sbbl
mov
inc
outsb
mov
jge
pop
or
in
pop
movsl
push
sbb
ss
inc
adc
xlat
or
div
fcoml
push
and
sub
ret
mov
outsb
icebp
daa
popa
inc
clc
jge
jne
mov
xor
sub
cli
repz
mov
in
cld
shll
popa
cmpsl
sub
ljmp
mov
mov
mov
cwtl
jb
dec
jo
push
mov
aad
divb
mov
or
data16
lcall
dec
ret
ja
xchg
mov
adc
xchg
sbb
xchg
mov
test
mov
aas
mov
aad
and
jmp
inc
sbb
popa
jno
or
mov
aaa
mov
xlat
mov
push
sbb
mov
cwtl
mov
aam
int3
pop
mov
outsl
and
ret
xchg
inc
sub
or
jne
aam
test
mov
mov
insb
sbb
and
imul
sbb
ret
push
pop
lea
cmp
enter
add
mov
dec
and
sub
and
adc
jbe
imull
inc
lea
jmp
pop
sbb
lods
or
cltd
inc
jnp
mov
mov
jmp
pop
cmpsl
stos
sub
test
cmp
mov
pushf
in
sbb
ds
stos
mov
xor
nop
cmp
mov
adc
sub
fcompl
test
aas
dec
imul
fcoms
sbb
pop
shrb
add
pusha
mov
pop
mov
push
imul
and
adcl
rcll
cmp
inc
movsl
and
lods
adc
xchg
out
pop
xchg
fmull
jbe
sub
push
cli
loope
sbb
ljmp
add
data16
inc
and
inc
adc
popa
outsl
in
mov
enter
into
jnp
xchg
sbb
adc
shll
mov
data16
shl
mov
push
cmp
es
xchg
loope
ja
cld
int3
adc
jae
pop
shll
xor
test
pop
add
mov
mov
ss
roll
jns
test
push
fadds
jns
test
push
lea
dec
xor
stc
xchg
rcr
cmp
sbb
repnz
stos
sub
cmp
pop
sbb
jg
gs
mov
iret
lods
aas
pusha
clc
mov
fxch
pushf
jg
roll
xor
dec
mov
scas
xchg
loope
subb
int
leave
xlat
xchg
call
dec
inc
out
and
push
call
je
adc
xchg
mov
add
stc
addl
aam
xor
jmp
xor
mov
xchg
lods
mov
aas
cmc
movsb
loope
dec
scas
rcrl
jnp
xchg
es
je
xor
aaa
cmpsl
cli
push
sbb
sub
test
and
es
out
pop
je
js
nop
xor
imul
mov
jns
cmpsl
insb
jbe
lcall
shll
xor
mov
test
add
jbe
inc
leave
sbb
and
lods
lock
add
ja
stc
out
imul
push
jo
in
ffreep
ljmp
cmp
mov
cmp
xchg
sti
inc
aaa
cmp
adc
cli
gs
mov
sub
mov
stc
jae
ss
xor
pop
add
rcr
adc
mov
enter
ja
lea
dec
and
or
inc
stc
imul
cmpsl
test
icebp
mov
cwtl
sbb
jne
xchg
pop
cli
pop
dec
cmp
push
jns
enter
pushf
pop
xor
std
hlt
mov
push
xchg
jns
mov
pushf
leave
inc
pop
and
out
sbb
ds
sti
movsl
shll
bsf
cmpsb
sub
lahf
or
jno
jle
jp
int3
xor
pop
outsb
or
test
inc
mov
fbld
jae
ret
and
mov
imul
ljmp
cwtl
mov
mov
add
jb
js
pop
sbb
ret
dec
int
out
mov
dec
push
pop
shl
fstpt
loop
shlb
mov
cmp
fisttpll
xchg
mov
pop
jbe
push
loopne
xchg
lret
inc
ret
data16
in
add
and
xlat
dec
ds
jle
xchg
outsb
mov
add
data16
pop
mov
test
sub
fldt
andl
mov
push
inc
xchg
push
xchg
mov
sbb
or
xor
mov
mov
dec
push
scas
pmulhw
in
je
cmp
mov
mov
cmp
dec
cmp
sub
pop
cmpsl
mov
fsts
dec
das
icebp
sub
inc
jo
movsb
and
and
jge
pusha
push
insb
lea
push
pop
inc
pusha
jno
les
sub
int
mov
dec
push
adc
jne
push
jno
out
fwait
inc
lods
clc
pop
rorb
lods
repz
bound
lds
or
sub
repnz
cmp
push
roll
cltd
sar
std
and
mov
sub
imul
adc
mov
or
or
sub
sahf
lods
push
xor
cmp
cwtl
insb
jae
xchg
dec
or
lcall
push
ja
push
jns
notb
cmpsl
mov
jg
add
jg
aad
js
test
push
push
push
xchg
mov
vmwrite
mov
aas
cld
xchg
das
sbb
je
add
inc
inc
pop
popa
inc
push
cmpsl
push
xchg
mov
imul
adc
stc
sub
rcr
adc
je
sbb
mov
rcr
sti
push
sbb
gs
pop
dec
cmp
scas
lahf
inc
add
insl
clc
outsl
ds
in
jnp,pt
or
ficoml
ljmp
pop
pop
into
sub
mov
sarl
hlt
jmp
sti
stos
dec
mov
inc
mov
dec
and
test
xor
jae
les
inc
mov
sar
xchg
mov
ja
data16
movsb
add
out
or
dec
hlt
and
fcomip
jmp
inc
cmp
outsl
sub
fsub
mov
arpl
std
data16
aam
dec
jne
mov
test
jmp
jecxz
scas
mov
xlat
inc
test
cmp
movsb
dec
rol
mov
popa
aam
dec
jmp
inc
dec
or
push
leave
mov
mov
inc
imulb
mov
pop
loop
pop
xor
or
push
movsb
jp
cmp
aad
and
jp
or
jg
xchg
inc
cmp
xorl
and
lods
subl
pop
jne
cmp
fisubs
sarb
clc
cmp
or
lods
or
add
leave
pop
stos
das
hlt
mov
insl
bound
mov
mov
sub
mov
mov
pop
and
mov
mov
stos
sub
push
xor
mov
push
and
shr
add
cltd
rorl
pop
aas
sub
xor
sbb
lods
or
jge
dec
cmpsb
mov
xor
das
xchg
xchg
ret
or
add
shll
mov
mov
mov
add
pop
jne
and
mov
scas
cmp
push
jne
mov
mov
mov
mov
inc
cltd
sbb
or
add
sbb
enter
cmpsl
xchg
movsb
les
fisttps
lahf
xorb
mov
ret
cld
and
in
mov
arpl
ficompl
cmp
ds
add
adc
fidivrs
es
sbb
cmp
add
or
movsl
rorl
jae
ss
adc
sbb
push
push
out
movsb
nop
xor
stos
jmp
loop
or
sub
lret
push
push
inc
sbb
mov
test
jg
dec
cld
adc
pop
dec
int
mov
jmp
iret
push
fucomi
aaa
imul
sarl
negl
mov
mov
ds
aas
inc
jecxz
adc
mov
push
imull
fidivs
jnp
test
jb
xor
jp
mov
push
push
fdiv
pop
inc
or
cmp
push
out
sbbb
int3
cmp
movsl
es
insl
test
fists
push
mov
popa
je
pushf
roll
sbb
and
fcomps
and
outsb
mov
fcoms
add
stc
push
mov
cwtl
mov
ss
sbb
sarl
xor
aad
adc
lahf
cmp
mov
push
mov
je
pop
lods
cmp
push
arpl
dec
add
test
fucomp
and
pop
xor
test
mov
daa
push
mov
xor
lcall
push
fistpl
clc
dec
ficoml
test
mov
nop
loop
or
fbstp
push
insb
in
and
dec
cmp
shl
and
jl
ja
or
xchg
inc
cs
int
mov
jle
push
out
xchg
pcmpgtw
xchg
scas
popf
lret
pop
sarl
jge
data16
popa
sahf
int3
frstor
dec
out
mov
mov
popl
in
jbe
cmp
div
out
sysenter
arpl
mov
jo
insb
add
imul
or
xor
loope
adc
cmp
pop
push
push
push
push
pop
fstpl
mov
stc
sarb
fwait
xor
je
imul
pop
xchg
adc
imul
jne
popa
stc
inc
leave
ds
mov
mov
add
inc
add
mov
bound
push
fistpll
jo
cmp
xor
fwait
movl
jmp
sub
xchg
mov
mov
sbb
stos
sbb
clc
mov
cmp
inc
sub
sub
ja
mov
int3
add
inc
gs
lock
push
push
in
ss
xchg
roll
sub
or
sti
icebp
jb
repz
pusha
icebp
push
cmpsl
or
mov
into
mov
imul
jb,pt
push
bnd
mov
cs
leave
pop
jo
push
icebp
cs
jle
hlt
inc
lods
adcl
call
mov
push
daa
adc
test
aad
jl
repnz
cmp
sbb
imul
xor
scas
push
mov
test
push
lret
ret
std
xchg
mov
out
or
jl
push
aas
mov
inc
add
or
js
push
lahf
or
and
ja
cs
test
sub
mov
ds
mov
jns
fisubrl
and
xor
cmp
out
icebp
sbb
jne
cmp
loop
dec
jmp
dec
cmp
stc
jle
xchg
lahf
sub
shll
scas
pop
call
push
inc
stos
jno
mov
insb
stos
or
dec
loope
or
cmp
out
ja
mov
enter
jge
movsl
xor
ds
pop
fnstcw
mov
movsb
fucomip
mov
test
insb
and
stc
cld
int
sub
popa
inc
pop
cltd
mov
outsl
aas
pop
enter
mov
ret
jo
mov
mov
jnp
daa
iret
jecxz
xchg
jl
xor
popa
outsb
push
adc
inc
fxch
pop
ds
mov
mov
lret
pop
imulb
and
int3
mov
sub
adc
pusha
frstor
sbb
jnp
call
xchg
gs
fincstp
les
xchg
shrb
inc
and
cli
dec
mov
dec
pop
enter
sbb
test
add
shll
cmpsl
mov
sti
push
inc
mull
movsl
call
das
xlat
jnp
dec
stos
and
in
jne
sbb
push
aam
add
movsb
idivb
bound
notb
dec
sbb
cmp
stos
cli
addb
sbb
in
out
cmp
cmp
icebp
scas
popa
mov
rcll
jns
rorb
push
pushf
mov
jo
add
sarl
cmp
loop
imul
or
pop
rcll
cmp
add
test
cmp
repz
push
arpl
xchg
adc
test
push
or
mov
xor
xorl
push
gs
cmp
out
mov
xchg
or
sbb
dec
ret
jge
push
mov
ret
xor
insl
add
inc
pusha
or
gs
push
into
loope
int
adc
pop
call
xor
arpl
sub
scas
adc
loopne
repz
xcrypt-cbc
cmpsl
push
adc
or
jp
jmp
xor
sbb
rorb
mov
sbb
loopne
call
sub
popa
mov
outsb
fsubrl
jge
adc
xchg
pop
fsts
and
stos
insl
pop
sbb
aad
add
xor
cld
sahf
xchg
fisttpl
out
jne
int
rcrb
lds
cmp
mov
in
or
fwait
das
bnd
or
dec
bound
es
fistps
das
jle
push
xchg
ror
fwait
inc
cmc
xchg
cmpsb
pop
hlt
dec
add
add
cli
addr16
mov
add
repnz
loope
or
inc
jbe
movsl
sub
in
cwtl
insb
data16
out
fs
dec
pop
std
mov
pushf
sbb
and
subl
cltd
rolb
push
cmpsl
aas
lcall
popa
sti
fcoms
jbe
push
les
mov
movsb
sbb
jae
sbb
add
xchg
adc
sbb
mov
cs
dec
and
cmp
sti
ja
pop
jecxz
sbb
dec
dec
cs
add
aas
icebp
sbb
outsl
std
inc
pop
dec
ss
dec
bound
outsl
outsb
pop
rcll
cmp
jg
mov
arpl
xor
push
sbb
cli
lds
cmp
pushf
das
lods
lea
inc
je
stos
xor
stos
fdivrs
cmp
les
dec
or
jecxz
sub
xor
pop
jb
cmpsl
shrb
repz
ss
cmpl
adc
je
mov
mov
dec
dec
popa
jmp
adc
adc
xor
xchg
cmpsl
mov
adc
icebp
sub
jno
mov
out
negl
cmpsl
mov
inc
cmp
sti
hlt
jbe
imul
mov
popa
loop
dec
xchg
push
notl
idivb
addr16
lock
xchg
lcall
mov
clc
mov
xchg
xchg
enter
mov
cmp
pop
jp
sub
xor
dec
inc
or
lods
pop
mov
fs
test
ret
mov
enter
clc
sbb
xor
lret
xor
or
cwtl
cli
fildl
dec
xchg
incb
jmp
test
loopne
inc
in
push
add
testb
dec
loopne,pn
push
push
das
cmp
shl
sub
hlt
cmp
jnp
int
mov
xchg
scas
scas
cwtl
outsl
push
addb
adc
movsb
icebp
sub
adc
mov
jb
mov
fsts
sti
out
es
push
sub
xlat
std
push
lret
fidivrl
xor
push
sub
cli
frstor
imul
sbb
je
push
and
and
shll
mov
fists
ljmp
cs
pushf
loop
popa
sbb
shlb
xor
jl
fidivrl
lock
push
xchg
sahf
imul
mov
pop
fcmovnbe
inc
inc
or
gs
test
cmp
add
and
mov
pop
jge
jns,pt
mov
dec
push
sbb
nop
out
cmp
inc
xor
aam
dec
xor
repz
lret
test
scas
add
dec
addr16
dec
loopne
lock
add
mov
gs
cmp
add
push
sbb
test
push
pop
fldenv
mov
setne
mov
out
lcall
scas
jo
xor
iret
lret
adc
das
push
mov
pop
mov
test
and
cmpsl
movsl
out
or
jg
popf
lock
xchg
gs
into
xchg
cmpsb
add
test
aas
js
pop
inc
pop
mov
mov
pop
jmp
setno
mov
call
and
mov
fs
xchg
sub
xor
and
pusha
aam
mov
out
jecxz
jae
inc
lock
pop
lea
and
cmc
ss
adc
mov
jne
lods
fidivrs
shlb
and
mov
sbbb
outsl
addr16
iret
push
out
xchg
sbb
xor
inc
movsb
mov
push
xor
mov
out
test
mov
push
push
mov
mov
loopne
pusha
shl
rolb
popf
push
jns
enter
dec
jns
dec
out
mov
push
aam
clc
filds
inc
push
fsts
int3
sbb
jecxz
adc
push
fs
jp
xor
iret
xchg
push
inc
sti
adc
into
mov
scas
lahf
stc
stos
xchg
push
lcall
pop
flds
xor
add
cld
sbb
les
leave
movsb
adc
push
push
dec
mov
sbb
les
shl
lods
push
clc
stc
jnp
sub
sub
mov
js
lret
push
inc
lea
lock
dec
pop
lret
lcall
push
imul
imul
adc
loop
test
fists
ficompl
lret
jmp
adcb
mov
repnz
and
jp
push
or
or
dec
lahf
dec
cli
out
dec
cwtl
mov
jno
xorl
mov
movsb
mov
insb
movsl
daa
cmp
cltd
fs
xchg
gs
gs
dec
add
repz
sub
movsb
add
loop
stos
xchg
push
dec
lock
dec
mov
repz
aad
sub
test
fmuls
std
inc
lock
notb
leave
sbb
inc
ret
out
mov
mov
ljmp
loop
sbb
xor
divl
cmc
in
mov
sbb
mov
movsb
xchg
cli
add
nop
inc
mov
call
inc
jmp
xor
sti
jne
push
sbb
pop
or
mov
or
dec
pusha
dec
mov
cmp
jmp
popa
mov
pusha
mov
sahf
mov
pop
lds
xchg
stos
adc
js
aaa
push
lods
pusha
enter
pop
outsb
push
adc
xchg
inc
mov
fwait
jmp
fld
gs
ja
pop
jge
inc
xor
add
and
dec
xchg
cmpsl
lds
shrl
or
jl
add
cmpsl
xchg
jns
cld
jmp
out
mov
push
lahf
cmpsl
mov
divl
into
fbstp
aam
iret
and
lea
sti
sub
test
andb
or
addr16
or
fdivl
mov
push
xchg
imul
xorb
jo
rcl
cmp
mov
add
add
cmp
jmp
add
ljmp
clc
mov
push
push
inc
inc
stc
repnz
pop
in
or
lock
ret
inc
in
pop
xchg
insl
out
lods
aas
dec
dec
leave
or
popa
stc
shll
mov
xlat
loope
out
call
sbb
sub
xadd
adc
sbb
daa
enter
cld
jo
mov
sti
daa
lds
ljmp
into
sbb
sub
mov
sub
sub
and
pop
lcall
ret
pop
lds
sbb
add
loopne
in
pop
in
in
ret
cmc
int
sub
xchg
in
int
jne
or
push
or
test
jmp
lods
push
jns
mov
in
jmp
or
mov
cltd
outsl
je
loop
jge
out
int3
jae
sahf
jae
loop
jb
pop
pop
mov
jmp
popa
xor
int
jne
add
adc
push
push
mov
xor
lcall
sbb
nop
dec
iret
mov
and
sbb
xlat
jb
jns
jo
xor
pop
mov
xor
fiaddl
inc
xchg
sub
mov
sub
xor
das
jnp
in
push
call
shll
imull
push
add
pop
push
jp
or
push
or
or
jbe
mov
out
push
push
pop
fdiv
daa
xchg
pop
cmp
js
addr16
xacquire
add
loope,pt
cwtl
imul
sub
aaa
xchg
shll
cwtl
mov
dec
jle
lret
repnz
cmovno
mov
popf
sbb
sub
mov
xchg
sub
cld
cmp
push
sarl
rcrb
nop
lds
inc
or
mov
stc
adc
xchg
mov
mov
or
push
rclb
in
xor
fisttpl
iret
hlt
mov
lret
mov
insl
imul
add
jns
add
sub
push
lret
mov
repnz
cmp
in
xchg
iret
pop
or
xchg
clc
add
je
stos
sub
sbb
dec
sti
jl
jl
incb
adcb
call
cwtl
nop
sbb
inc
insb
decl
bsr
jb
sub
roll
out
in
popa
sub
ret
jae
rorl
cmp
shlb
shlb
lahf
xor
or
andl
add
aam
int3
pop
out
movsl
je
fnstenv
jle
push
and
xchg
pop
and
push
addb
xor
hlt
lock
call
es
mov
xor
ficoms
test
in
rcrb
inc
dec
or
cmp
shll
adc
mov
pop
pop
sbb
clc
xchg
decb
pusha
testb
add
orl
ret
and
fcoms
or
push
mov
call
adc
push
testl
negb
dec
ret
icebp
push
and
aas
rcrl
or
add
nop
addb
xor
lods
sub
sbb
cli
xchg
ret
cli
lret
or
mov
cli
jne
loope
jmp
push
xchg
pop
imul
sub
popf
scas
outsb
add
pusha
or
mov
or
pop
push
cmpsl
dec
daa
into
aas
fnsave
arpl
test
sahf
addl
sub
xchg
push
shll
ljmp
mov
repnz
inc
pop
sbb
mov
cs
cmp
pop
xchg
push
subl
mov
bsr
cmp
fdivr
adc
mov
mov
std
imulb
push
ja
xlat
ret
mov
cmp
aad
bound
xor
xor
mov
mov
add
stc
xchg
dec
xor
or
call
jbe
sbb
jnp
cmp
push
mov
adc
movb
das
cld
repz
xchg
fisubrl
lret
lcall
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
fisubrs
cmp
add
add
jbe
mov
lds
or
pop
jb
stos
int
ja
arpl
sbb
and
mov
mov
fwait
aad
das
orb
sub
add
data16
mov
leave
decb
jg
stc
or
xor
and
test
jl
dec
fucom
out
mov
int
add
add
add
add
sub
adc
cmp
out
pop
xchg
push
sahf
int3
add
popa
add
add
mov
fwait
sbb
xor
sbb
adc
pushf
jecxz
sub
xchg
push
pop
xor
mov
lahf
shr
leave
enter
jge
push
jne
xorb
mov
pop
inc
je
jle
add
and
inc
loop
cld
push
addl
dec
mov
or
mov
sbb
add
add
add
add
sub
sub
addb
int3
add
popa
add
add
lcall
ljmp
mov
pop
dec
lds
sti
test
push
cmpsb
mov
lahf
sbb
cld
push
push
mov
das
jbe
inc
data16
sbb
adcb
lret
repz
jp
or
pop
jmp
sub
mov
or
insb
add
das
mov
ds
jbe
faddl
add
add
add
das
and
aam
aam
ljmp
je
enter
pusha
int
add
add
add
shrl
mov
mov
mov
aad
adc
push
aas
sbb
sub
cld
adc
push
sbb
into
pop
mov
lahf
shrb
and
outsb
repz
je
jle
sub
pushl
stos
xor
je
cs
xor
add
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
ror
add
add
daa
fstps
xor
pop
sbb
jl
jp
hlt
icebp
inc
das
mov
cmovbe
cmp
ret
cmp
jnp
pop
rcrb
inc
hlt
dec
xor
jecxz
push
fwait
stos
adc
sbb
je
jo
dec
xchg
mov
xchg
push
mov
aas
icebp
dec
mov
pop
adc
and
push
movsl
add
add
add
add
out
lods
cmp
stc
stc
push
dec
dec
and
add
popa
add
add
icebp
push
lret
cltd
mov
xor
movsl
jo
loop
fs
das
out
jbe
ret
sub
clc
fisubs
cmp
fstpt
mov
xlat
add
mov
mov
xor
jae
adc
aaa
pop
xor
fmul
xor
imul
mov
shrb
add
add
add
add
inc
gs
aaa
push
arpl
add
add
dec
cmc
cltd
sub
rorb
ds
jbe
xor
lods
sbb
inc
subb
bound
cli
jecxz
or
push
and
sbb
xchg
repnz
ret
mov
add
ljmp
je
notb
icebp
int3
sbb
sub
xchg
or
adcb
add
add
add
add
mov
push
adc
cwtl
out
pop
lcall
popa
add
add
dec
stc
sbb
shl
pop
xchg
sbb
jp
xchg
in
movsl
adc
test
in
out
mov
push
cmp
sub
dec
dec
cmp
jno
mov
enter
addr16
movsl
push
sub
cmc
imull
cs
pop
inc
testl
arpl
aam
mov
movb
add
add
add
sub
das
jle
jg
imul
pop
scas
in
jne
add
popa
add
add
arpl
push
push
inc
mov
jnp
sahf
das
pusha
mov
jb
sub
pop
ss
pop
cmp
lds
xchg
inc
aas
add
sub
or
les
out
bound
cmp
movsl
jl
lahf
mov
xor
push
mov
jmp
inc
fildl
add
add
add
addr16
and
mov
mov
mov
loope
add
add
jmp
or
mov
test
hlt
mov
mov
test
add
in
loopne
hlt
and
das
or
sub
inc
sbb
stc
mov
sub
cmpsb
popl
lea
sub
jno
push
push
test
mov
and
in
jbe
pop
in
pop
sbb
add
add
add
add
or
ret
lods
sub
mov
daa
aaa
loop
add
add
cmpsb
ds
cmpsl
movsl
xlat
mov
jecxz
dec
push
fidivs
sub
and
or
les
mov
adc
sbb
sbb
mov
xchg
pusha
cli
movsb
mov
or
das
sbb
pop
pusha
mov
ja
inc
xchg
xchg
or
loope
das
add
lea
add
add
add
fld
add
ror
outsl
clc
rcrb
test
cwtl
loop
add
add
or
or
subb
push
enter
cs
rep
lods
mov
aas
test
shlb
sub
into
cwtl
loope
in
arpl
test
repz
js
cmp
xor
mov
sub
add
arpl
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
sbb
jp
inc
add
sbb
out
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficoml
inc
add
sbb
sbb
jle
inc
add
sbb
outsb
sbb
mov
inc
add
sbb
push
sbb
or
mov
inc
add
sbb
ret
add
sbb
or
inc
add
pop
inc
add
sbb
sbb
inc
add
test
ficomps
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
dec
or
add
pop
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
mov
sbb
or
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
cmpsl
xor
add
add
test
pop
lds
test
xorl
jb
xor
outsb
hlt
sbb
push
mov
dec
mov
xchg
test
push
test
pop
jge
and
jnp
add
data16
nop
mov
push
and
dec
xchg
inc
cs
aaa
out
pushf
ss
mov
jle
push
or
and
add
add
add
add
mov
push
mov
xlat
push
inc
and
sbb
add
popa
add
add
mov
sub
mov
loop
mov
enter
in
pushf
int3
add
dec
cmpsb
cld
add
iret
push
fisubrl
jo
add
repz
scas
or
or
test
lret
push
fcoms
fwait
nop
adc
shrl
rol
jns
gs
imul
mov
add
add
add
add
stos
pushl
xchg
push
sub
add
popa
add
add
sbb
and
push
pop
jp
inc
call
inc
sbb
das
adc
out
lcall
cmp
pushf
popa
inc
fldl
push
adc
pop
ljmp
jnp
ret
dec
mov
and
xchg
cmp
cmc
cmp
repz
clc
imul
test
subl
add
cmp
cmp
in
fimuls
shrl
add
popa
add
add
imul
xor
add
cmpsl
sbb
lock
and
fdivrl
lds
inc
sarl
cmp
dec
add
mov
dec
insl
sbb
decb
cmp
icebp
popa
lcall
add
mov
lods
cmc
or
out
dec
sti
les
add
add
add
fnstenv
std
negb
sub
sub
xlat
add
popa
add
add
push
fistpll
adc
pop
adc
mov
pop
out
in
mov
cmp
mov
in
jl
mov
pop
test
scas
xchg
sbb
in
loop
daa
mov
add
inc
repnz
mov
cmpsl
cwtl
cwtl
add
and
enter
ja
and
sbb
test
add
add
add
add
xor
jb
inc
mov
mov
xlat
add
popa
add
add
jnp
mov
lock
dec
or
fistpll
lods
scas
cmp
xor
dec
mov
lods
xor
dec
nop
push
jnp
lret
test
mov
cmpsb
movsl
or
xchg
mov
aam
mov
fldl
pop
mov
aaa
enter
dec
mov
pop
jmp
mov
add
add
add
add
add
pop
sub
cld
xlat
add
popa
add
add
inc
std
in
movsb
clc
jb
cmpsb
mov
push
stc
sub
call
out
nopl
mov
and
and
sbb
fwait
mov
dec
and
add
push
jecxz
pusha
test
mov
mov
inc
add
sbb
pushf
pop
rcll
sbb
cs
mov
daa
fbstp
add
add
add
push
add
xor
jb
insl
xor
and
pop
fadds
add
add
xchg
sub
sahf
and
jmp
mov
sbb
mov
pop
jp
fimuls
mov
call
call
pop
sbb
repnz
push
jmp
fidivrs
jae
sarl
inc
stos
lret
pop
incl
xor
pop
mov
adc
stos
cwtl
add
mov
shlb
jo
rolb
add
add
add
cmp
add
mov
out
mov
insl
mov
add
add
fisubl
sbb
aad
mov
or
lods
jp
jne
inc
sbb
mov
sti
or
mov
mov
pop
push
sbb
popf
or
mov
xchg
push
sbb
dec
mov
cmc
mov
test
sbb
lods
lods
jmp
and
dec
jmp
sbb
sti
xor
xchg
push
add
add
add
add
mov
jmp
fimull
dec
aaa
sub
add
add
icebp
nop
aad
cmp
shll
cltd
sbb
mov
inc
stc
sahf
rorb
sbb
jge
and
aas
push
pop
in
icebp
rol
int
or
test
dec
in
adc
stos
mov
std
cwtl
pop
addr16
in
pop
sbb
and
insb
adc
aas
movsb
mov
mov
add
add
add
pop
inc
pop
iret
pop
aad
ss
dec
sbb
flds
add
add
test
rorb
je
adc
popf
xchg
daa
sahf
push
test
lahf
jg
jl
sbb
mov
mov
repnz
adc
dec
add
adc
cmp
sbb
sbb
adc
mov
push
fcomps
mov
push
dec
or
aad
fsubl
mov
iret
add
add
add
add
cld
inc
push
sbb
loope
add
popa
add
add
mov
xor
loopne
mov
lcall
inc
je
dec
jge
push
shr
mov
and
mov
rorl
xchg
fdivl
and
repnz
lock
pop
push
jl
add
xchg
pusha
aam
mov
jle
popl
cmp
mov
insb
out
or
rcl
push
lcall
add
lock
jle
repz
or
inc
fiaddl
add
add
test
aaa
xor
jmp
xchg
out
push
jge
lods
inc
jmp
xchg
rolb
mov
iret
aas
sub
adc
cmp
push
xchg
dec
dec
int
adc
inc
cmpsb
sub
mov
or
cmp
cld
aad
cwtl
xchg
cmp
imul
add
add
cmc
adc
adc
mov
lds
mov
add
add
mov
cmpsl
sbb
cwtl
stc
rclb
mov
and
and
mov
test
aas
and
jecxz
sub
cli
stos
cli
push
mov
mov
adc
rolb
or
loopne
arpl
mov
dec
adc
inc
push
sbb
xor
push
adc
add
add
add
mov
lock
mov
rorb
add
popa
add
add
aaa
mov
or
xchg
out
or
frstor
cmp
sbb
inc
sbb
movl
loopne
push
pop
std
jl
mov
movsb
cmpsl
jg
jo
xchg
movsl
cwtl
bound
mov
mov
add
out
push
sub
mov
add
add
add
add
sqrtps
cmc
das
sbb
xchg
iret
xchg
adc
add
popa
add
add
xor
or
fldl
fcoms
lahf
fcompl
int
inc
and
fsubrs
jge
adc
mov
dec
adc
test
mov
push
inc
cmp
cmpsl
in
into
pop
mov
push
push
jno
inc
cmp
mov
mov
ljmp
add
add
add
add
sub
fildll
or
add
popa
add
add
or
inc
sbb
add
xchg
jns
cmp
fwait
pop
sbb
adc
and
insb
fcmovnb
xchg
imull
cwtl
push
test
jp
fists
push
fbstp
lahf
aas
sbb
sbb
sti
dec
dec
test
test
fwait
push
sub
stos
inc
add
inc
adc
add
add
add
adc
testl
jecxz
daa
faddl
add
add
pop
cmp
clc
jle
in
shrl
mov
mov
dec
inc
scas
hlt
adc
mov
adc
outsl
and
movsb
mov
gs
lret
mov
clc
mov
sub
sub
aaa
dec
pop
cmpsb
pop
mov
push
and
stos
addr16
jo
out
test
call
add
add
add
jne
jg
clc
cs
push
in
add
popa
add
add
test
clc
icebp
bound
jae
xor
leave
xor
jmp
bound
or
add
mov
cld
adcl
fdivrs
fcoml
pop
dec
movsl
sbb
cmp
xchg
jecxz
dec
push
hlt
mov
xchg
mov
add
cmp
dec
pop
add
loopne
add
push
loope
test
add
add
mov
cmp
sti
dec
mov
je
lcall
add
popa
add
add
pop
sub
add
push
and
and
mov
loop
adc
dec
mov
loop
outsl
adc
jmp
pop
mov
xchg
das
cmp
repnz
mov
sub
in
gs
jo
mov
pushf
push
xchg
push
sbb
add
add
add
add
push
mov
mov
xchg
adc
push
fldenv
iret
add
popa
add
add
sbb
xchg
ret
pop
xchg
neg
mov
inc
xchg
jb
jo
aad
dec
push
cmp
pop
jbe
inc
mov
daa
pop
push
jnp
popf
xor
pushf
adc
idivl
lods
mov
push
mov
inc
push
shll
sbb
dec
aaa
bsf
ret
adc
mov
bound
add
add
add
xchg
fcmovu
fisttps
push
mov
imul
rolb
add
add
mov
sbb
xlat
adc
mov
pop
jg
fdivl
test
in
cmp
jmp
pop
lea
scas
add
pop
out
mov
loope
xlat
cmc
data16
js
mov
je
inc
sbb
mov
pop
jae
outsl
xor
cmp
adc
mov
cwtl
fmull
add
add
add
add
jle
out
sbb
mov
rolb
add
add
ret
mov
lret
aam
lahf
jbe
cmc
insl
mov
enter
stc
out
fisubrs
jb
ret
into
shr
jle
pop
sub
mov
fs
jl
ss
sbb
jle
aad
shll
push
jnp
pushl
int
jle
pop
ret
mov
hlt
pop
mov
mov
outsl
loope
pop
add
add
add
add
and
cmp
push
or
popa
add
add
or
pushf
lret
out
shr
adc
pushf
jge
push
popa
ficoml
pop
push
pop
inc
sahf
pop
js
fnsave
loop
inc
sub
dec
and
lret
lea
nop
test
or
and
pop
in
cld
lret
mov
scas
ja
mov
bound
add
add
add
xchg
nop
ffree
popf
aam
dec
and
sub
add
popa
add
add
mov
dec
xor
pushf
inc
adc
sbb
push
sub
cs
and
dec
dec
fdivp
into
jmp
mov
das
push
pop
andb
mov
mov
or
adcl
out
or
pop
cmp
push
xor
jle
pop
loop
xchg
xlat
and
cltd
xchg
mov
add
add
hlt
mov
jbe
hlt
mov
and
cmpsb
lea
adc
roll
add
add
adc
jmp
dec
adc
mov
sbb
out
cli
push
jge
sbb
xor
or
xchg
mov
in
cwtl
sub
jb
mov
scas
mov
fistl
cmp
xchg
aad
leave
lahf
stc
pop
mov
sbb
arpl
mov
or
or
push
clc
sbb
add
add
add
ror
mov
sub
out
aaa
push
pushf
in
roll
add
add
inc
test
push
testl
outsb
add
pop
lahf
fwait
cli
mov
cmp
dec
in
and
jae
pop
nop
mov
das
or
adc
lcall
rorl
add
jg
js
pop
and
pop
inc
mov
dec
cwtl
and
and
cs
sbb
add
add
add
add
in
outsb
and
pop
mov
dec
rolb
add
add
add
jns
jns
testb
and
or
pop
xchg
out
pop
arpl
push
hlt
in
xor
push
adc
movsl
mov
add
sbb
fcomi
dec
and
pop
sub
call
and
pop
aad
lret
mov
jmp
mov
cmp
lock
add
add
add
add
mov
and
mov
popa
add
add
xor
pop
push
test
xchg
dec
scas
adc
xchg
or
mov
pusha
icebp
mov
lea
push
rcrl
jl
push
pop
pop
inc
push
inc
sbb
out
jns
shrl
jbe
outsb
cmp
mov
stc
mov
adc
aaa
icebp
jle
fs
add
add
add
add
stc
call
into
inc
mov
push
jecxz
fisttpll
roll
add
add
js
mov
jl
repnz
movsb
push
inc
xchg
test
mov
sub
inc
mov
je
std
repnz
insl
subl
imull
loopne
add
push
or
mov
pushf
repnz
out
jle
adc
lock
adc
xlat
mov
test
dec
mov
jge
out
stos
push
add
add
add
add
sub
sub
sti
out
daa
jo
add
popa
add
add
pop
push
in
dec
cmp
rorb
aas
add
push
jns
sbb
rolb
shlb
sahf
push
outsl
sbb
in
sahf
bound
in
pop
idiv
push
sbb
int
je
add
mov
mov
out
mov
lcall
push
mov
add
add
add
add
int3
sbb
out
loopne
lods
fnstsw
rcl
add
popa
add
add
adc
adc
jns
xchg
addr16
test
dec
loopne
cmp
gs
les
dec
fdiv
push
fsubrs
xor
dec
test
add
inc
inc
add
sbb
inc
adc
mov
fstps
mov
jae
ss
rep
sbb
add
add
add
test
fildll
cmc
sub
imul
add
add
out
fldcw
mov
lds
push
mov
push
fs
popf
lods
cmp
xchg
aam
cwtl
lods
xchg
jl
je
xor
and
hlt
mov
in
mov
cmp
jbe
fadds
dec
sbb
mov
stc
adc
insl
jo
shlb
in
pop
mov
pop
sub
add
add
add
fwait
loope
sub
sarb
add
jp
add
add
nop
loopne
mov
fs
mov
cmp
or
sarl
adcb
out
dec
push
add
mov
xchg
or
sbb
aam
adc
stos
adc
subb
roll
sbb
xchg
jg
xor
add
hlt
ss
cmp
sub
jbe
imul
xchg
in
aaa
mov
repnz
add
add
add
divl
dec
cmp
dec
push
xor
add
popa
add
add
repz
lahf
and
pushf
sbb
sub
cmpsb
dec
mov
cmp
sub
pop
push
xchg
add
arpl
fidivl
pop
dec
lea
in
dec
xor
ljmp
jns
cmpl
pop
or
fstl
rclb
jg
lock
imul
xor
xchg
add
add
add
add
arpl
jge
mov
daa
mov
aad
add
add
adc
pop
dec
fists
sub
iret
into
push
pop
lret
push
adc
jg
addl
pop
call
add
jmp
je
lcall
xchg
pop
stos
cmp
scas
jae
push
adc
sub
in
adc
jb
mov
aas
test
and
add
add
push
imul
dec
add
add
popa
add
add
xchg
mov
clc
mov
pop
jecxz
xor
mov
mov
mov
sbb
out
fstl
fidivl
int
cmp
faddp
jne
sbb
loop
add
adc
addr16
or
push
pop
and
ret
mov
insl
xlat
jge
jl
push
mov
cmp
add
add
add
daa
ss
xor
and
mov
add
add
sub
sub
mov
jno
cmp
and
jl
iret
repz
cs
mov
mov
xor
xor
xor
cld
bound
or
push
rcr
out
movsb
dec
popf
test
imul
mov
das
mov
jp
das
jmp
jmp
or
add
add
add
out
mul
aaa
cmc
xchg
lcall
dec
fldl
add
add
sub
dec
dec
mov
js
mov
mov
ret
cmc
jns
sub
lahf
inc
lcall
lods
je
inc
inc
in
jecxz
or
add
push
or
mov
int3
sbb
xchg
js
dec
es
xor
test
adc
testb
add
add
add
aad
out
fucomip
ss
cmp
push
push
stos
fldl
add
add
hlt
xor
xchg
add
test
push
push
jae
sub
push
cli
cltd
xchg
and
add
inc
push
push
and
mov
mov
adc
jae
dec
push
iret
pusha
pusha
bound
movsl
loope
pop
xchg
popa
dec
popa
pop
icebp
dec
dec
mov
into
adc
and
hlt
sbb
outsl
dec
stc
xor
add
add
add
add
in
cld
fisubrl
sbb
push
add
add
sbb
push
mov
jns
inc
sub
push
mov
cld
ja
pop
aaa
ljmp
and
dec
fimuls
jbe
xor
xchg
hlt
xor
jo
ret
push
daa
lds
push
lret
and
gs
xchg
jle
fisubrs
rcl
stos
outsl
xchg
add
add
add
cmp
paddsb
nop
shrl
push
hlt
insl
fiadds
add
add
leave
imul
xchg
push
cmp
pop
es
dec
nop
pop
add
mov
cwtl
cmp
std
push
mov
pop
fmull
jg
adc
push
add
sbb
stos
ja
push
int
lret
xor
pop
inc
mov
mov
cmp
test
cmp
pop
ret
jle
add
add
add
add
jle
call
cli
lcall
add
popa
add
add
lahf
in
icebp
out
dec
insb
out
sub
in
jmp
or
xchg
testl
orb
shll
loopne
into
popa
mov
push
push
xchg
or
mov
jg
popf
jo
dec
xlat
push
sahf
enter
xchg
add
lea
lcall
dec
mov
add
add
add
add
fincstp
shl
frstor
pop
dec
mov
filds
add
add
lcall
cmpsb
mov
xor
pop
fdivl
test
arpl
or
push
and
loop
repnz
jne
cmpsb
movsl
sbb
jbe
es
lock
push
dec
cld
ret
in
jg
ja
mov
les
pop
xor
dec
mov
das
test
mov
cltd
xor
add
add
add
outsl
mov
jmp
push
fcmovu
in
mov
add
popa
add
add
xor
mov
loope
jnp
sti
hlt
js
inc
xchg
scas
sbb
das
insl
and
leave
mov
cld
mov
das
dec
pusha
fbstp
cmp
pop
fs
or
jmp
int3
xor
push
aad
xor
into
mov
mov
lahf
cmp
xchg
mov
in
icebp
sub
and
add
add
add
stc
sbb
inc
jecxz
mov
iret
lcall
popa
add
add
jp
push
xor
sbb
push
clc
cli
sub
movsl
pop
push
lret
lea
or
pop
dec
arpl
stc
add
inc
mov
pushf
fprem
test
adc
rcll
icebp
xor
loop
dec
aaa
xchg
jl
out
int
dec
xchg
push
loopne
sub
pop
call
jmp
mov
cli
sbb
std
shrl
add
add
add
add
mov
icebp
and
and
popa
add
add
aad
in
push
xor
fcoml
or
pop
dec
xor
mov
mov
mov
shrl
pop
sub
mov
adc
sub
xor
jmp
mov
test
loopne
das
cmp
and
or
sbb
sub
cmp
or
add
add
add
add
xlat
repz
das
cli
fists
dec
es
shl
mov
add
popa
add
add
int3
outsb
outsb
lcall
cmp
lret
cs
shl
stc
jp
and
xchg
pop
cmc
add
into
std
out
pop
lret
add
jg
sub
popa
pop
out
sub
dec
mov
inc
cli
repnz
movsb
sbb
lcall
dec
xchg
push
mov
and
jle
sarb
jno
in
jl
int
add
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
xor
ja
add
add
repnz
add
add
add
add
add
add
add
call
aaa
add
lock
add
daa
mov
add
aaa
add
add
push
outsl
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
