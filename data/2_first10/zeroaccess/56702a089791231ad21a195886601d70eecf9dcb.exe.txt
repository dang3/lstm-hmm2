push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
jmp
out
add
outsb
sbbl
hlt
fucom
cs
bound
lret
bound
sub
pop
add
pop
jne
xchg
inc
jb
jno
iret
lret
hlt
inc
aam
cltd
add
pop
jno
mov
daa
mov
shrb
adc
and
dec
fbstp
mov
jo
dec
pushf
pop
jae
sti
push
push
pop
cmp
add
push
jge
mov
mov
stc
inc
popf
xchg
in
fstpl
jg
cmp
mov
dec
loop
inc
orb
inc
pop
mov
xor
sbb
inc
add
dec
nop
xchg
dec
mov
pop
les
sub
vpsubusw
mov
test
bound
in
push
subl
imul
xchg
xor
and
jmp
mov
xor
iret
or
pop
cmp
push
cmpsb
mov
cmpb
push
in
pop
out
or
imul
and
mov
ret
mov
pop
push
dec
xor
or
dec
call
shrb
lock
ja
ret
movsb
arpl
mov
xor
hlt
imul
xor
jnp
out
dec
mov
scas
icebp
aaa
testb
jb
cmc
or
pop
inc
mov
sahf
mov
idivb
fistpll
push
popa
rorb
push
bsr
popf
das
or
subl
push
bound
sbb
int
inc
pushf
mov
incb
es
stos
add
fs
into
pop
das
dec
sub
push
jle
mov
orl
dec
ret
ljmp
jb
jb
in
pop
sbb
addr16
pop
popl
add
popl
cmp
push
rorl
pusha
adc
ret
xchg
and
cmp
and
lods
jle
cmpl
dec
aas
jnp
lods
rcll
cld
sbb
or
mov
clc
sbb
push
xchg
jg
imul
cmpsb
packssdw
cli
in
fdivrs
xchg
test
xchg
subl
sub
bound
cmp
dec
cmp
jne
loop
cwtl
in
push
and
jle
mov
mov
and
addr16
xchg
fdivrs
sti
mov
out
je
sub
outsl
js
lea
xchg
test
roll
fidivrs
lods
sbb
ss
inc
push
push
test
push
push
in
rcl
sub
cmp
mov
insb
inc
jno
fsubl
je
rcrl
mov
les
ljmp
dec
pop
ffree
loopne
imul
add
das
int
cmp
popa
dec
into
or
mov
adc
dec
in
jg
fldlg2
jb
jle
inc
dec
inc
loop
ret
imul
fisubrs
jnp
inc
adc
adc
sub
push
cld
mov
add
inc
int3
aas
push
jae
pop
or
cmpb
fcompl
and
and
sub
insl
fildl
and
mov
je
popf
iret
push
cmc
mov
movsl
fbld
ljmp
cmpb
push
lods
dec
sbb
cmpsb
adc
repz
clc
sbb
jl
outsl
xchg
jecxz
add
out
xchg
notl
fcomp
mov
das
xor
in
lea
inc
loopne
fistps
lcall
cmp
and
jne
repnz
xor
cmpsb
add
in
xchg
jno
mov
mov
sub
sbb
dec
jno
or
or
les
xchg
jp
xchg
sti
sbb
rorb
sbb
out
add
ja
into
aaa
fnstenv
int3
insb
and
in
mov
aas
xor
and
jl
pushf
cli
push
lds
and
mov
cmp
xchg
push
in
out
popf
xchg
push
lds
mov
jb
and
leave
dec
iret
inc
lret
mov
outsb
call
add
or
xchg
out
lds
mov
adc
hlt
jecxz
lahf
stos
mov
test
push
pinsrw
scas
jb
xor
and
ds
aam
sahf
cmp
xor
in
adc
mov
hlt
lods
jmp
das
hlt
hlt
mov
fsubrs
mov
sub
cli
mov
shll
adc
xchg
lret
push
push
shlb
cmp
lea
imulb
xchg
outsb
mov
sahf
xor
sub
cltd
out
sti
mov
dec
outsb
push
cmp
loope
int
repz
mov
adc
push
inc
nop
clc
xchg
mov
jmpw
mov
inc
ret
fdivl
cld
push
cmp
clc
sbbl
mov
mov
pop
sbb
add
push
push
pop
loop
out
jg
xor
add
lods
scas
mov
cmp
sbb
setae
shrl
dec
sub
outsb
add
xor
ret
or
ret
or
mov
pop
or
test
cmp
or
out
in
sti
test
inc
mov
test
in
sbb
lret
adc
shll
cltd
loopne
call
mov
adc
movsb
and
imul
imul
in
or
xlat
sbb
call
roll
mov
mov
fldcw
insb
stos
leave
hlt
mov
popa
adc
arpl
and
inc
cmpsb
ss
sbb
inc
pushf
shll
pop
ss
xchg
and
xchg
add
sub
jo
push
jno
jno
iret
lret
push
push
sub
rorb
mov
mov
dec
sbb
aam
pop
movsb
pmulhw
fidivrs
int3
add
shll
sub
adc
repnz
sub
insb
data16
or
test
fnstcw
xchg
lds
mov
pop
cmp
inc
or
push
jno
push
sub
in
arpl
pop
enter
mov
imul
dec
jae
and
repnz
sbb
and
or
dec
in
cld
adc
lahf
push
dec
out
add
ret
adcb
dec
or
outsb
das
mov
dec
nop
jge
dec
test
je
add
xlat
fsts
dec
xchg
call
cli
je
mov
sti
test
mov
pusha
cmc
mov
add
cld
mov
mov
xchg
or
mov
adc
aaa
jmp
lock
inc
leave
xchg
lock
lea
ja
mov
or
adc
xor
mov
movsb
in
in
inc
cmpsl
mov
xchg
xor
aad
aaa
hlt
add
dec
cli
sub
add
push
mov
sbb
outsl
xor
sub
xchg
pop
cli
fcompl
adc
xor
adc
es
movsb
push
sub
xchg
xchg
shl
adc
arpl
push
arpl
andl
jns
pop
aad
cwtl
addr16
je
pop
int3
or
loop
jecxz
pop
sarl
and
insl
add
add
add
push
lods
and
dec
fisttps
mov
sub
notb
clc
xor
inc
xor
cs
adc
sub
vpunpckhbw
outsl
popf
test
sub
inc
adc
test
btr
mov
mov
fisubrl
fcmovne
pop
or
and
faddl
pop
dec
adc
inc
inc
loop
dec
cwtl
fs
outsb
xchg
sbb
xchg
lods
std
out
sahf
sub
bound
cli
xor
ficompl
cwtd
mov
sbb
or
mov
arpl
dec
into
sub
lret
aam
dec
imul
cltd
mov
adcb
dec
push
shll
stos
pop
xorb
repnz
stc
sub
jl
or
and
iret
mov
lcall
xchg
sub
adc
test
push
ds
leave
fists
inc
or
jnp
sahf
inc
shlb
sbb
pop
inc
fistpl
push
lock
shlb
jbe
int
lcall
cmp
dec
xor
mov
adc
lea
in
add
push
jl
jecxz
lret
jbe
cld
push
jo
imul
adc
mov
or
mov
out
imul
xlat
sbb
mov
mov
test
leave
scas
das
sbb
cmp
aam
adc
or
jne
fistl
inc
hlt
mov
insb
dec
lds
dec
scas
dec
je
cmpsb
xor
mov
loopne
into
test
repnz
movsb
cmp
cli
inc
aas
or
mov
gs
into
xchg
sbb
push
pop
outsb
wbinvd
clc
mov
test
xchg
pop
shlb
test
mov
xchg
hlt
dec
adc
xchg
push
or
pop
add
mov
negb
mov
dec
xchg
cmp
pop
out
icebp
lods
in
and
jl
mov
out
cmc
sub
dec
out
icebp
mov
popf
sub
pop
cmpsb
adc
xchg
mulb
push
cmp
rcl
push
and
pusha
hlt
popf
cmpsl
sbb
jge
int
imulb
lcall
cmp
and
sbbl
jge
jns
dec
push
mov
ljmp
mov
ret
mov
dec
cmp
mov
add
mov
mov
jnp
mov
dec
dec
xor
imul
dec
in
popa
aam
fxam
mov
sbb
xchg
add
pop
popa
or
fcoms
xchg
popf
mov
jb,pn
mov
cli
rolb
cmp
ja
orb
inc
sub
xchg
decl
xor
repnz
pop
fldt
mov
rclb
loopne
les
or
or
jbe
fstpt
arpl
ret
sbb
cmp
jo
inc
and
inc
dec
out
adc
les
lods
aad
stc
pop
inc
pop
lock
sub
ret
ja
push
aam
outsb
or
scas
nop
dec
push
pop
cmp
dec
outsb
cltd
das
push
insl
pop
and
push
mov
jp
mov
mov
les
loop
sub
cmp
aad
nop
addb
mov
adc
jmp
push
jns
xchg
mov
inc
scas
jne
jb
movsb
stos
mov
std
or
push
push
jno
mov
out
popa
sbbb
outsb
jbe
sub
das
add
add
xor
lcall
cli
adc
pop
or
jns
sub
lret
js
pop
sti
leave
mov
pop
leave
sbb
mov
enter
and
xchg
cmpsb
mov
dec
loope
dec
leave
shll
mov
in
mov
adc
popf
outsb
sti
or
fstpl
aam
and
frndint
std
sub
mov
xchg
pusha
pop
pop
in
pop
nop
lret
inc
ja
mov
mov
push
les
imul
in
pop
out
and
vmovapd
shlb
repnz
ljmp
sub
rorl
add
cmp
insb
imulb
add
test
and
int3
jae
or
push
sti
dec
inc
push
std
clc
adc
xor
out
push
aas
fs
jbe
inc
mov
pop
add
sbb
int3
inc
jno
sub
sbb
mov
jo
nop/reserved
dec
aaa
mov
jl
cli
pop
repz
and
add
mov
xor
xor
je
neg
adc
in
push
fidivs
cmp
inc
jae
pop
xchg
loopne
ret
jnp
and
inc
arpl
fwait
add
mov
bound
rorl
sbb
ds
cmp
and
lret
mov
out
mov
inc
xchg
pusha
test
cmp
dec
sbb
ljmp
sbb
les
sub
mov
sbb
or
in
or
mov
int
outsl
sbb
pop
test
mov
jg
es
loopne
call
leave
out
xor
push
mov
sub
test
icebp
call
addl
cs
xor
mov
cld
nop
nop
orl
adc
inc
lret
sarb
pop
jp
xor
mov
and
mov
mov
pop
adc
cmp
cld
cmp
inc
pop
jae
dec
mov
sti
jecxz
pop
insl
mov
repz
loope
popf
sub
rolb
mov
sbb
daa
sbb
mov
sub
xlat
and
push
std
mov
je
push
sub
test
popf
test
adc
data16
push
pusha
cmpsl
pop
lcall
cwtl
inc
push
sbb
dec
and
pop
lahf
call
test
mov
jo
scas
adcb
push
ret
or
ss
inc
pop
int
inc
jns
push
dec
jae
jae
pop
push
xchg
ja
gs
aaa
sarb
cmp
outsl
pop
pop
jne
cmpsl
test
cli
dec
dec
lods
ret
cmc
xchg
jmp
lea
xchg
sarb
arpl
dec
mov
test
hlt
loopne
sbb
pusha
pop
addr16
repz
nop
pop
insb
xchg
int
not
or
sub
and
add
lock
scas
stos
pop
pop
mov
mov
inc
jbe
popf
xlat
dec
add
or
or
leave
sub
js
outsb
xchg
xchg
pop
lcall
js
adc
push
xchg
xchg
ret
mov
pop
sbb
popf
or
scas
in
out
out
lock
call
xor
icebp
push
fsubp
aam
movl
pop
out
or
pop
jl
and
mov
sub
xchg
cmovl
popa
xchg
inc
lea
idivl
iret
add
loope
shlb
xchg
popa
fidivrl
call
nop
test
inc
jbe
inc
mov
adcb
mov
mov
into
clc
sub
fwait
mov
xchg
into
addb
ljmp
mov
push
mov
dec
mov
lcall
or
rolb
mov
adc
mov
cmpsl
jl
rorb
clc
jp
push
mov
lds
push
or
add
push
or
fnstcw
ljmp
cmp
dec
stos
out
in
loope
dec
lea
xchg
xorl
push
test
ja
lcall
pop
stc
cmp
movsl
fldenv
xor
dec
and
mov
std
stos
push
mov
lcall
fcomps
mov
inc
push
jmp
shl
fmuls
push
jmp
xchg
daa
cmp
addb
xor
push
inc
jbe
mov
cld
pop
cmp
stos
dec
mov
shll
cmp
les
mov
in
sahf
xor
in
push
jno
lea
inc
mov
push
push
mov
orb
ja
stc
sub
test
pop
cmp
inc
inc
jne
repnz
mov
lds
jbe
xlat
dec
ret
cmc
add
mov
sbb
xchg
fcomi
ret
jne
mov
or
add
push
mov
test
add
pop
dec
rcl
adc
pop
subl
icebp
in
xchg
sbb
cmp
jecxz
into
mov
xchg
das
xor
or
dec
add
cmc
pop
pop
mov
cli
psubsb
lret
loope
bsf
shll
adc
std
sub
adc
pop
mov
jne
cwtl
out
adc
push
add
pop
mov
xchg
divb
xchg
jecxz
rcl
ja
test
xchg
je
insl
stc
hlt
outsl
pop
lcall
aaa
je
lret
mov
cmp
ret
insb
jae
negl
movsb
dec
mov
ljmp
push
mov
incl
xchg
repz
ss
das
addr16
jg
into
inc
push
jle
mov
cmc
pop
mov
dec
or
std
lcall
mov
rcrb
sbb
pop
movsl
pushf
pop
sub
jb
nop
pop
dec
sub
add
add
shll
in
mov
test
movsl
imul
repz
lahf
das
mov
push
jmp
push
leave
aaa
push
or
cs
inc
test
fsub
icebp
jmp
pop
in
imul
jbe
popf
inc
cld
call
mov
dec
push
sub
push
lods
stc
das
imul
jmp
repnz
inc
sub
insl
jno
in
jno
xchg
imul
pop
pop
mov
aam
mov
icebp
arpl
sub
push
es
icebp
in
ljmp
test
mov
sub
add
int3
daa
mov
mov
xchg
cmp
mov
daa
int3
addr16
cmpsb
lds
add
and
call
inc
cmp
xchg
xchg
les
negl
lret
or
inc
xchg
jl
rcrl
xchg
pop
xor
bound
xor
jae
repnz
jno
movsl
inc
int
aam
ja
cwtl
bnd
inc
adc
int
jno
and
int
or
jb
sub
sub
mov
into
inc
inc
jb
inc
sbb
addr16
adc
inc
dec
pop
out
push
sahf
int3
fwait
insl
add
dec
push
mov
sub
sbb
test
daa
cmc
dec
push
movsb
mov
in
loope
lret
pop
sub
inc
jae
xchg
inc
push
pop
xchg
setge
inc
les
xchg
test
les
movsl
dec
ret
add
out
inc
stc
inc
jb
xchg
les
pop
fnsave
loope
call
jb
cld
mov
fisttpl
pusha
movsl
daa
cmpb
imul
fldcw
mov
xor
fst
xchg
fsubs
pop
adc
pop
insl
add
pop
cwtl
fcomi
mov
mov
fistpll
push
sbb
ficoms
lahf
in
sbb
cmp
fildl
pop
inc
xor
or
test
mov
aad
jns
popf
push
pop
cld
lret
data16
orl
dec
cmpsl
dec
stos
insl
subb
outsb
ja
xchg
sbb
cmp
out
fimuls
pop
cmp
pop
cmc
das
mov
pop
test
iret
insb
sbb
enter
inc
lea
inc
imull
add
jg
enter
jne
xchg
idivl
ud1
enter
leave
ds
xlat
dec
and
ret
sub
cmpsb
ljmp
lea
cmpsb
scas
int3
pop
jge
cmp
mov
idivl
ljmp
lods
cltd
cmp
lahf
pusha
movb
xor
push
cmc
daa
jb
mov
pushf
xchg
mov
xorl
xor
or
push
or
movsb
out
fisubrl
in
lea
push
cmp
in
sbb
pop
rorl
sub
lock
lods
aad
out
fsub
push
jne
mov
in
jne
or
fstl
mov
add
setge
enter
mov
cmp
lret
mov
add
push
lret
and
mov
mov
mov
cwtl
cld
xchg
add
mov
mov
sub
cltd
mov
outsb
imul
or
mov
jge
cmpsb
ret
rol
cmp
pushf
sub
xorb
test
inc
in
or
loop
add
fwait
into
out
stos
in
sbb
xor
push
imul
mov
pushf
sbb
jae
and
fucom
gs
out
std
rcrb
ljmp
add
jae
inc
leave
sub
xchg
or
sbb
das
add
add
jle
mov
mov
sahf
push
jb
sahf
arpl
sahf
and
xchg
jle
in
je
in
aam
push
pop
push
inc
mov
mov
cld
sub
add
imul
push
fnstcw
adc
sahf
iret
mov
imul
mov
jbe
out
or
dec
cmpsl
enter
insl
pop
insb
mov
lret
mov
leave
mov
adc
push
pop
xor
xor
cmc
fstpl
dec
jmp
ss
inc
add
fdivrs
jbe
scas
mov
into
mov
pop
lods
shll
jl
push
cs
test
repnz
push
ss
pop
je
pop
mov
dec
ds
mov
shl
mov
xchg
dec
scas
sbb
loop
sub
imul
mov
ss
xor
push
adc
data16
outsb
lds
add
inc
cmp
insb
stos
lods
or
sbb
mov
ss
in
inc
cld
mov
int
out
pop
push
outsl
adc
xchg
sbb
pop
icebp
sbb
or
rorb
orl
adc
inc
mov
and
mov
cmp
jnp
add
insb
sbbl
fs
xor
nopl
push
ret
and
and
pop
pop
jmp
divb
mov
dec
and
mov
fbld
xlat
mov
es
in
out
cmc
movsb
mov
lds
testb
sub
jle
pusha
dec
popa
pop
rorl
cld
sti
and
adc
mov
imul
cld
hlt
std
lcall
imul
rcl
scas
inc
mov
scas
inc
sub
add
int
pop
cmp
mov
stos
jge
mov
adc
sbb
adc
inc
mov
add
fbstp
jo
adcb
and
imul
inc
or
adc
inc
push
stos
jp
in
cs
inc
mov
sub
sub
ss
pop
sub
pop
sub
lods
sub
mov
cmp
mov
xor
insl
jnp
inc
xchg
bound
stc
out
pop
lds
mov
cmp
jbe
mov
in
mov
repnz
stos
filds
push
out
mov
jbe
dec
adc
push
in
lods
pop
push
shrl
cmp
aad
jge
imul
pop
pushl
adc
mov
xor
lret
aaa
popa
mov
inc
stos
icebp
mov
rol
mov
cmp
mov
sub
push
mov
outsb
or
sahf
shll
mov
mov
mov
into
mov
cwtd
pop
jo
aas
push
int3
jecxz
lcall
insl
or
dec
cmp
inc
shrl
sub
cmpl
andb
cld
inc
bound
sbb
pop
add
pop
xchg
sarb
push
pop
push
mov
in
push
repz
xchg
out
push
das
push
sub
shlb
cwtl
mov
int3
sti
fs
add
adc
mov
addr16
mov
xchg
sbb
jmp
add
lods
addr16
stc
scas
lcall
push
push
outsb
cmp
movups
xor
movsl
push
popa
mov
push
jb
loop
mov
jno
arpl
inc
xchg
jmp
aam
or
repnz
sbb
aam
clc
push
sbb
idiv
test
lret
ret
ss
mov
cltd
shll
ljmp
call
mov
andl
add
sub
sbb
stos
mov
movsb
fstl
outsb
lret
in
dec
repz
out
inc
mov
adc
pop
in
roll
ss
pop
or
mov
mov
xchg
mov
inc
rcrl
sub
stos
cmp
jne
test
add
addr16
and
aam
push
testb
sbb
int
xor
dec
out
jno
sub
fcmovnu
out
cltd
cmp
jno
pusha
cmp
out
mov
jge
sbb
adc
int3
mov
dec
sub
inc
xchg
or
jne
test
arpl
jne
test
xlat
sub
decb
outsb
popf
adc
hlt
pusha
andl
sbb
and
lret
orb
int
mov
mov
enter
int
adc
test
mov
and
repz
cmp
sti
fisttpll
or
sbb
out
jbe
dec
push
pop
cmpsb
push
and
pushf
push
adc
leave
shlb
xlat
mov
repnz
dec
inc
icebp
adc
mov
dec
mov
insb
lock
xchg
xor
pusha
mov
scas
aam
aam
aad
insl
xchg
dec
push
mov
ficoml
or
cmpsl
out
leave
clc
imul
xchg
push
push
fcomps
call
xchg
fidivs
gs
insl
mov
mov
testb
lods
fdivp
lret
inc
mov
fwait
lcall
xor
inc
insb
fucom
loopne
inc
mov
cmp
xchg
sbb
pop
or
mov
xorl
popa
add
jg
scas
jo
movsb
mov
add
sahf
cmpsl
out
ja
inc
push
inc
ffreep
ret
mov
cmp
xchg
sub
sub
sbb
das
xchg
and
mov
mov
jne
movsb
or
hlt
and
jle
and
xchg
add
jge
or
fcmovnb
xchg
in
inc
mov
jne
call
aas
xor
and
jbe
lods
pop
fistpl
addr16
xchg
inc
push
push
push
mov
mov
jecxz
fs
rorl
mov
out
jnp
data16
loop,pn
das
movsb
lods
sub
outsl
cmpsb
or
xor
sti
sbb
out
mov
push
cmc
loopne
fwait
pop
ss
in
xor
mov
inc
arpl
xchg
cmp
fimull
idivb
fwait
sbb
stc
xor
mov
mov
add
rorb
mov
hlt
cmp
shl
jno
mov
or
cwtl
lahf
pop
fwait
dec
fiadds
repnz
cwtl
es
xor
cmc
xor
push
mov
push
mov
push
int
mov
sub
push
rcrb
sbb
mov
lock
or
rolb
push
sbb
cmp
jl
pop
fmull
outsb
cmp
and
lret
sarb
cmc
inc
cld
test
into
das
xor
ljmp
fildl
subb
mov
mov
addr16
jnp
push
lds
nop
fs
test
lcall
mov
add
jl
mov
ficoml
adc
xchg
inc
outsb
int
aas
xor
out
mov
pop
fildll
ds
int
xor
dec
mov
stc
push
or
pop
jb
lahf
out
lods
sub
and
pop
adc
xchg
in
lahf
sar
xor
sub
inc
xchg
mov
data16
cli
and
mov
in
cmpb
mov
and
out
xor
jb
insb
xor
shlb
mov
sbb
cmp
push
mov
and
dec
ret
cwtl
pop
in
or
das
lods
sub
lcall
pop
pusha
mov
lret
pop
adc
push
cmp
xchg
xor
or
popa
mov
test
push
cltd
popf
push
push
add
orb
sbb
insl
std
fcmovnb
xor
xchg
mov
sbb
mov
shlb
push
pop
out
pop
pop
pop
cmp
xor
sti
sub
sbb
pop
loopne
ljmp
scas
jne
cmpsb
insb
lcall
rcr
or
jp
lret
inc
pop
rolb
xchg
mov
in
add
int
pushf
jnp
das
jmp
and
in
ljmp
xor
cmpsb
fcos
cmpsl
repnz
out
xchg
lret
push
ret
adc
cmp
aad
mov
andl
mov
sbb
mov
je
pop
test
sbb
xor
ljmp
push
fidivrl
sbb
and
push
cld
cmpsl
and
shl
mov
aas
imul
into
mov
cld
fdivl
scas
mov
sub
xorl
xor
dec
jo
out
inc
lret
cmp
scas
adc
push
push
popf
int3
into
mov
loope
test
popf
and
cmp
xchg
das
mov
lahf
lret
inc
cmc
icebp
daa
add
fsubs
int
call
leave
stos
mov
inc
fsubl
pop
jno
jg
jbe
fwait
aaa
xor
mov
mov
inc
xor
add
repz
xchg
test
in
es
xchg
pop
xchg
push
jb
lods
inc
or
popf
add
ror
popa
xor
xchg
mov
dec
repz
pop
mov
imul
in
iret
mov
scas
push
jnp
sbbb
dec
dec
cmp
or
jl
in
imulb
rclb
es
or
out
add
mov
mov
mov
call
cmp
adcl
push
pop
lods
xchg
aam
cmp
mov
adcl
push
movsb
jae
int
jns
out
mov
orb
aad
hlt
pop
scas
decl
lock
jbe
or
dec
das
mov
mov
add
jnp
fisubrs
in
fistps
repz
rorl
shlb
dec
pop
add
add
xor
or
andl
mov
or
lea
and
jge
outsl
add
mov
cmpsl
dec
lods
test
cmp
int3
sbbb
test
bound
adc
mov
push
dec
adc
xchg
dec
cmp
push
add
mov
sti
cltd
mov
test
fwait
cmpsb
add
lret
push
mov
lea
pushw
sub
xchg
xlat
int3
mov
stc
sbb
inc
lods
push
inc
mov
push
outsl
mov
lcall
dec
imulb
insl
jge
pop
pop
out
jl
jno
mov
cli
pop
outsb
cmp
sbb
dec
dec
or
test
ret
mov
out
arpl
jle
mov
cmp
lcall
jo
sti
and
add
roll
xchg
shrl
inc
or
adcb
popa
loopne
push
dec
pop
out
mov
popf
pop
es
sti
and
or
dec
mov
pop
or
mov
mov
adc
rorl
outsl
push
lret
jmp
xor
sub
js
xor
cs
jecxz
mov
add
faddp
and
adc
xchg
fwait
outsb
push
arpl
adc
push
mov
add
adc
xor
fld
xor
add
jg
adc
into
mov
xchg
mov
mov
imul
mov
scas
mov
dec
loopw
mov
cmp
dec
fidivl
clc
mov
cltd
xchg
sahf
leave
aaa
fisubrs
loope
leave
dec
jge
xlat
add
or
hlt
pop
daa
in
imull
or
dec
syscall
xchg
sar
mov
and
inc
push
mov
aaa
xor
sub
pop
sbb
imul
fwait
lret
and
sbb
test
out
lea
rorl
lcall
pop
outsl
addr16
push
loop
adc
idivb
les
stos
icebp
aaa
mov
inc
pop
sbb
mov
subl
or
xchg
test
fistpl
je
out
push
jae
lods
shlb
jmp
and
sti
sbb
and
ljmp
ret
fsubs
xchg
sahf
leave
repz
mov
ds
in
mov
sbb
insb
push
rcl
sbb
adc
sbb
cmp
xor
jg
lods
lods
jle
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
jmp
fnstenv
xchg
gs
test
sbb
pop
bound
pop
bound
xchg
cmpsl
sbb
aam
add
xchg
test
insl
xor
push
and
sbb
mov
fsubrl
pushf
fdivr
insb
stos
dec
push
fldenv
aaa
push
pop
inc
call
dec
cld
xor
sbb
scas
xchg
mov
test
outsb
mov
push
sbb
push
mov
rolb
sub
loope
jnp
dec
cmp
mov
and
fistpll
loop
pop
cwtl
push
pop
mov
cmc
pop
and
cmp
mov
push
adc
fisttps
push
aam
cmpsb
add
add
clc
mov
scas
js
mov
mov
aaa
scas
or
jne
aas
loop
xlat
cli
sub
push
mov
daa
cli
cmp
cmp
pop
push
mov
push
xor
xchg
and
rclb
xlat
fwait
pop
dec
pop
mov
xor
xor
popa
je
dec
je
repz
lcall
inc
xchg
sub
aaa
jl
jae
pop
cmpsb
mov
xor
mov
ret
inc
into
sub
jne
or
popa
sbb
jp
fimull
push
lock
int3
mov
push
inc
insl
push
lods
sub
mov
fldenv
sub
test
arpl
or
inc
jnp
imul
sub
dec
adc
dec
mov
lcall
rolb
adc
aam
mov
add
mov
test
jecxz
mov
push
addr16
sub
mov
in
movlps
adc
in
mov
add
or
cmp
fidivrl
aad
dec
mov
xor
gs
dec
xchg
inc
int3
std
mov
and
jnp
push
mov
movsb
dec
sub
sbb
mov
nop
test
mov
inc
jnp
add
jno
insl
adc
popa
dec
arpl
sbb
dec
push
add
mov
jns
or
mov
and
unpckhps
mov
in
mov
pop
xchg
adc
mul
xchg
in
test
lcall
dec
xchg
cld
pop
xlat
push
fcoms
imul
test
jg
das
sbb
fisttpll
push
aaa
mov
push
cmp
adc
cli
pusha
sub
stos
loope
dec
fs
filds
jg
jbe
lock
or
popa
bnd
mov
dec
test
mov
test
cmpb
sbb
dec
xor
pop
jp
mov
out
imul
adc
push
dec
fsubrp
out
out
rorb
out
stos
mov
pop
push
mov
inc
rclb
inc
mov
rdpmc
ljmp
mov
xor
pop
adc
fisttps
mov
int
test
lds
leave
cmc
imul
sbb
mov
lahf
outsb
fld
push
cmp
cli
out
pop
cltd
cmp
pop
scas
adc
lea
into
inc
push
inc
iret
pop
jae
xor
imul
jmp
dec
lret
mov
lahf
xchg
cmp
jb
in
lret
jb
addr16
mov
pop
mov
jne
dec
mov
jp
je
or
int3
mov
mov
inc
xchg
xchg
push
fnsave
outsl
mov
mov
bnd
mov
mov
dec
xchg
insb
and
push
test
in
sahf
push
add
xor
pop
xchg
aaa
jecxz
adc
pop
mov
cmp
adc
and
test
and
sarb
inc
insl
jl
pop
xor
scas
mov
mov
inc
fnstenv
xchg
mov
addr16
test
repz
loop
idivl
into
rorl
inc
scas
insb
je
mov
pop
fildll
ja
dec
stc
xor
lods
and
loopne
ffree
imul
mov
push
jmp
mov
pop
scas
ljmp
adc
aad
sarb
dec
sub
fsubs
and
ret
loope
xlat
lds
setb
cmpsl
cmc
outsl
or
test
daa
add
mov
je
imul
dec
fwait
xorb
std
pushf
popa
ja
dec
mov
repnz
dec
hlt
sbb
out
das
or
cli
sbb
imul
cmp
mov
mov
out
or
fisubs
pop
rcrb
jl
jl
add
std
arpl
pop
sbb
call
xor
fs
imul
movsb
cmpsl
test
cs
and
shlb
push
mov
sarb
xor
in
popa
ret
adc
dec
and
mov
loopne
and
nop
dec
es
xorw
lods
scas
dec
daa
xchg
dec
inc
mov
test
lock
loope
mov
jp
push
out
inc
jge
hlt
pop
jp
mov
xorb
test
lds
in
adc
jnp
les
push
sub
jmp
add
orb
fstpt
inc
xlat
xchg
mov
mov
cmp
xlat
lret
dec
lds
sbb
es
outsb
push
inc
fisubl
xchg
sbb
dec
js
or
push
lret
pop
out
int3
aam
mov
lret
inc
mov
fisubrs
iret
loope
dec
push
cli
test
lea
xor
cmp
jp
jns
push
inc
in
push
pop
sub
jge
jo
cmpl
adc
jo
bound
das
push
pop
test
enter
or
push
les
lahf
loop
addb
push
popa
inc
lret
lds
decb
cmp
js
int
mov
cld
repnz
js
std
cld
jg
imul
cltd
cmp
add
push
fucomp
pop
enter
jl
lock
mov
sub
add
push
dec
jmp
outsb
jp
sub
aas
aaa
clc
rcr
int
mov
cmpsl
pop
notb
dec
lods
fsubp
pushf
in
fdiv
cmp
scas
pop
push
out
mov
push
pushf
ret
or
and
aas
adc
testl
mov
inc
add
pop
outsl
jo
out
rorl
jl
pop
push
cltd
stc
lods
outsb
loopne
pop
outsl
pop
mov
cmpsb
jecxz
cmp
ja
jle
enter
data16
or
insl
lock
sbb
imul
loope
cltd
es
push
int3
adc
or
popa
mov
in
inc
stos
pop
jg
sbb
xchg
jne
xlat
cmp
mov
pop
add
add
aaa
cmp
jle
xchg
inc
nop
mov
inc
inc
xchg
fmull
inc
lcall
mov
into
cmp
inc
jge
cltd
cmp
cmp
mov
inc
js
xlat
lds
mov
test
lods
mov
push
dec
andb
icebp
sbb
lret
out
adc
fwait
roll
cmp
or
cmpsl
adc
dec
leave
sub
sub
fsub
or
inc
add
cwtl
shr
jbe
xchg
dec
shll
int
ljmp
dec
adc
cmp
lods
fmuls
gs
pop
xchg
gs
mov
or
dec
ss
push
or
jns
push
jp
mov
std
addl
mov
lock
ds
adc
dec
arpl
mov
loopne
mov
inc
cmpsb
mov
gs
outsb
or
cli
int
call
inc
sub
pop
xchg
inc
xor
std
addr16
or
xorl
arpl
daa
aaa
mov
sub
lahf
rol
mov
mov
ret
loope
mov
jge
outsb
fists
outsb
pushf
fadds
cmpb
mov
sbb
loope
lods
pushf
loope
rcrl
adc
xchg
dec
fidivrs
maskmovq
mull
stos
daa
jns
xor
pop
shrl
int3
mov
daa
jge
mov
push
sti
fistpll
jp
icebp
loop
push
mov
in
movsl
lds
test
lret
pop
std
xchg
sbbb
mov
jmp
cmp
test
xchg
lods
sub
dec
dec
jl
xor
leave
cmp
fisttpll
push
dec
xor
ficompl
sub
ffree
jo
cs
cmpsl
mul
mov
in
out
scas
ud1
mov
xor
mov
xchg
mov
mov
cmc
je
xchg
or
cmp
push
rcrb
sub
pushf
stos
shrl
rcrb
inc
lahf
mov
mov
inc
test
or
lcall
xor
adc
stc
pushl
movsb
lods
lcall
lock
dec
pop
mov
data16
in
jae
scas
adc
cltd
mov
fs
fiadds
xlat
jno
shl
and
mov
jo
push
xchg
push
jns
in
addr16
xor
jle
mov
push
loop
lahf
icebp
inc
xchg
aam
jecxz
fildll
sbb
push
lods
dec
movsb
or
jl
out
mov
jl,pt
jp
mov
mull
mov
rol
in
testl
inc
inc
mov
push
and
push
into
imul
jnp
repnz
mov
sbb
sub
iret
xchg
jmp
xor
hlt
cltd
sbb
imul
mov
addr16
pop
jb
fisubrl
jmp
js
adc
cmp
or
mov
pop
xchg
int3
lds
jbe
push
adc
mov
inc
subb
xlat
mov
cltd
inc
mov
loope
arpl
push
mov
aad
testl
push
loopne
cmc
lcall
les
fwait
outsb
sahf
cmp
sarl
xor
jmp
push
stos
mov
daa
sbb
inc
push
mov
mov
sub
aas
ss
incb
es
shl
or
xchg
pop
add
jp
or
add
in
dec
dec
push
cmp
mov
pop
imull
xchg
imul
inc
enter
mov
hlt
aad
jb
mov
hlt
cmc
inc
leave
mov
insl
xchg
inc
call
inc
bound
xchg
test
inc
sub
push
mov
stos
movsb
orl
pop
jae
jg
inc
mov
push
mov
xchg
xchg
lock
iret
lcall
clc
in
stos
cmp
repz
mov
movsb
cmp
jecxz
aam
ds
pusha
insb
push
std
out
jg
add
mov
add
mov
in
sbb
mov
push
sub
call
push
add
popa
sbb
add
lock
notl
mov
mov
out
loope
add
mov
cmpsl
mov
and
push
jge
cli
cmp
jl
and
repz
xlat
inc
loope
xchg
aam
dec
hlt
xchg
arpl
dec
in
outsb
jo
test
in
fisttpll
notl
add
and
or
xchg
pop
mov
sub
mov
idivb
test
mov
idivl
shl
mov
fwait
add
cmp
sbb
in
sahf
aaa
xor
push
hlt
pushf
pop
insb
mov
xor
sub
stos
pop
pop
push
mov
push
shlb
repnz
je
push
mov
leave
cmp
rcrb
mov
inc
jnp
xchg
rcl
andb
arpl
imul
jmp
ja
in
lret
rolb
mov
lcall
mov
push
mov
jle
xchg
fs
clc
fimull
aaa
lahf
inc
push
sub
je
sbb
fdivr
filds
cmp
subl
sub
sub
repnz
out
pop
test
outsl
jne
pop
cmp
daa
mov
loop
ret
out
push
pop
xchg
mov
xchg
jecxz
sbb
js
in
push
push
pop
mov
push
jge
icebp
into
xchg
add
ljmp
arpl
dec
push
int3
and
mull
cltd
aad
imul
adc
mov
xchg
mov
mov
pop
mov
fcos
jl
cli
xor
jnp
pop
dec
pop
mov
dec
inc
push
inc
addr16
imul
dec
imul
sarl
pop
sbb
xor
adc
outsb
int3
fnstsw
fs
fnstcw
xchg
xchg
push
xchg
sbb
loopne
jl
mov
mov
dec
sarb
jle
fdivrs
jge
int3
dec
pusha
stos
loop
mov
and
pushl
push
mov
popf
repz
mov
sub
hlt
mov
inc
cpuid
xchg
adc
xchg
cmp
cmp
jae
leave
inc
xchg
decb
pop
stos
popf
inc
jb
jecxz
push
idivb
loope
cmp
inc
fsubrs
mov
xchg
xchg
jge
mov
cmc
ret
scas
loop
mov
mov
andl
aam
adc
sbb
loop
out
sub
sub
fists
xchg
or
daa
pusha
loop
push
jno
mov
pop
sbb
add
cmp
mov
xor
sbb
and
inc
sarl
pop
cs
call
out
int3
fs
ret
adc
sub
pop
xchg
aam
fdivrs
sbb
icebp
cmp
lods
adc
sub
push
adcb
xchg
rorl
push
icebp
xor
sbb
dec
mov
aad
push
jmp
sbb
out
inc
mov
loopne
lock
push
pop
aad
xlat
push
xchg
mov
mulb
mov
jg
movsb
decl
int
sarb
mov
push
jl
push
insb
inc
in
dec
fdivs
mov
push
xchg
pop
aas
inc
cmp
out
pushf
cmpb
mov
add
bndstx
sbb
mov
lret
xlat
mov
push
dec
icebp
cs
sub
mov
xor
and
int
cmp
dec
push
xor
xchg
test
movsl
loope
call
inc
out
sbb
adc
mov
dec
in
pop
inc
popa
xor
popf
jb
inc
xchg
or
cmpsl
cwtl
data16
lea
mov
push
adc
cmp
test
lret
jb
imul
inc
sbb
jnp
leave
sub
add
sti
lods
and
dec
mov
in
into
and
pavgw
mov
pop
insb
or
cmp
shlb
xor
sub
push
jns
test
popa
push
or
inc
push
out
jg
into
or
xor
pop
fbstp
xchg
ficoms
test
push
fadd
cmpsl
into
cmp
arpl
jle
xlat
jbe
insl
fadd
pop
lret
jl
push
add
in
xchg
outsb
jns
push
test
fsubrl
sbb
mov
mov
das
out
repz
mov
pop
inc
dec
mov
ret
int
add
loop
cmpl
lret
enter
xor
xor
mov
mov
incl
sub
jns
mov
jb
push
aas
mov
push
sub
jnp
fildl
sub
fmull
stos
cmp
and
push
jns
mov
push
std
mov
and
je
test
movsl
push
sub
mov
and
jg
adc
mov
or
shll
sub
icebp
mov
jno
in
xlat
bound
stos
add
jno
jne
push
inc
push
jae
pushf
mov
ret
mov
subb
jp
sub
jge
lahf
push
jb
xor
das
push
dec
rcll
dec
movsl
xchg
xor
push
xchg
mov
test
popa
mov
cmp
xor
push
popa
in
mov
push
add
pop
dec
hlt
mov
notl
jae
cmp
pop
cmc
push
imulb
dec
aam
and
sbb
mov
insl
rcr
sbb
test
movsb
loop
sub
sbb
rcrb
mov
lods
sbb
ja
mov
jp
call
sbb
jle
repz
sbb
dec
jle
pushf
dec
jnp
insb
cli
push
inc
pop
fwait
lds
pusha
cmp
call
in
jmp
ja
loopne
aas
jmp
les
pushf
into
imul
sbb
ficompl
inc
ja
adc
fs
call
xchg
lea
aas
mov
loop
hlt
out
xchg
add
lods
cmp
inc
mov
aad
sub
pop
mov
xchg
inc
and
mov
out
cmc
out
mov
push
adc
xchg
iret
xor
arpl
sti
mov
clc
xchg
je
mov
xorb
adc
jle
shrl
push
or
rcrl
in
sub
je
adc
mov
push
ss
and
sti
sti
imul
icebp
shlb
mov
jge
sbb
sub
stc
fdivrs
test
and
in
lea
out
sti
subb
push
ss
xchg
lock
jmp
dec
inc
dec
or
ss
or
sti
movsl
and
jb
mov
jb
loope
jle
and
mov
call
adc
adc
lret
outsb
mov
inc
xchg
jge
in
insl
inc
nop
int
rorb
cmpsb
pop
pusha
sahf
inc
mov
std
fstl
fstl
push
je
popa
aas
dec
pop
jecxz
mov
dec
dec
and
ds
inc
enter
dec
mov
fisubrl
sbb
sbb
cwtl
mov
mov
icebp
stos
dec
cmc
cmp
xchg
dec
out
sti
clc
dec
pop
xor
jecxz
ret
or
es
mov
test
insl
rcll
push
test
xor
adc
jne
fs
adc
xor
jbe
jl
and
lcall
movsl
add
or
jecxz
jge
and
mov
mov
out
pop
fdivs
xchg
les
lods
jmp
pop
push
fwait
xor
popa
aas
xor
bound
pop
and
jg
loop
rol
fsubp
leave
xor
jb
cmp
lahf
das
mov
jp
fisttpll
shrb
es
mov
and
pushf
mov
and
sbb
push
or
loope
cmp
aas
rorb
movsl
ret
cmp
adc
push
sub
sarl
mov
mulb
pop
cwtl
nop
jae
pop
shll
sahf
scas
cmp
xchg
mov
ljmp
or
pop
lahf
dec
push
addr16
hlt
out
rclb
aam
int3
pop
imul
loopne
inc
push
mov
mov
mov
loopne
sbb
xchg
inc
mov
pand
std
int3
mov
add
xor
test
push
xchg
pop
jmp
jge
shrb
mov
sbb
or
push
lcall
loopne
jno
or
test
faddl
out
cmp
dec
sbb
int3
cmpsl
fsubrl
xor
gs
scas
push
mov
sbb
mov
and
loope
subb
dec
pop
add
jp
sbb
and
jmp
adc
arpl
pop
int3
out
scas
and
and
test
add
cmp
pop
and
dec
xchg
xor
sbb
idivb
cltd
jecxz
jmp
in
push
push
mov
or
jnp
or
inc
add
jae
sbb
jle
out
dec
xor
std
scas
push
shl
in
mov
std
ljmp
movsb
pop
in
out
cmp
pop
inc
jbe
aaa
xor
and
dec
mov
aaa
das
icebp
fidivs
mov
xchg
shll
repz
mov
gs
push
sbb
aas
lea
cmp
mov
mov
xor
mov
sub
xchg
mov
shlb
in
test
lahf
or
and
mov
mov
mov
xchg
mov
cmc
dec
xlat
inc
ss
imul
jl
mov
add
sub
clc
adc
xchg
pop
add
push
test
jns
icebp
inc
es
js
sbbb
fimull
xchg
jbe
dec
nop
loop
or
lds
shlb
xor
stos
scas
jmp
jl
ret
ja
pop
sbb
dec
sbb
xchg
dec
inc
int3
xor
fimuls
push
xchg
add
or
or
lods
mov
roll
mov
aam
push
mov
cs
cltd
mov
lret
or
adc
push
pusha
out
xchg
outsl
lods
mov
mov
clc
adc
lret
sub
or
xor
inc
mov
inc
pusha
clc
mov
lea
lret
arpl
into
mov
je
mov
pop
mov
and
fcmovnbe
xor
jb
scas
cmp
xchg
add
fwait
cmp
fxsave
dec
popf
daa
cmp
adc
je
xor
xor
sub
or
leave
pop
fnstsw
jnp
sbb
mov
aad
leave
test
jnp
leave
push
mov
loopne
repz
dec
pop
jbe
mov
jo
call
sbb
sub
scas
fdivl
push
jns
out
rorl
push
pop
inc
pop
lahf
int3
sti
mov
cmpsb
xchg
ds
ljmp
outsb
repnz
jo
xor
jp
lcall
mov
clc
xor
mov
mov
cmp
inc
dec
rcr
push
inc
or
mov
xor
jp
aad
xchg
push
dec
movsl
rcl
out
pop
and
mov
and
mov
pop
imul
fisubl
fnstenv
popa
pop
cmpsl
cmp
mov
jne
std
adc
mov
xchg
lret
adc
xchg
jg
andnps
fiadds
cs
inc
add
or
stos
cltd
mov
sub
xchg
ss
out
inc
and
das
pusha
sti
cmp
xlat
mov
mov
int
sti
cmp
xchg
scas
pop
sbb
or
inc
sbb
adc
arpl
and
cmc
aam
fucom
pusha
mov
add
mov
push
gs
test
gs
icebp
imul
xchg
lods
mov
pop
out
rolb
lods
je
and
movsl
pop
scas
negb
cmp
jo
pop
push
push
stos
pop
push
add
and
mov
imul
mov
adc
sub
push
lcall
cmpsb
shll
clc
scas
mov
std
ja,pn
lea
test
jbe
pop
js
ret
sarb
sbb
sbb
mov
or
std
ja
sbb
ja
or
aaa
xor
repnz
jb
lahf
pop
fildll
leave
cld
lret
fs
xchg
movsl
sub
xor
pop
add
jo
add
jg
std
mov
adcb
xchg
outsl
push
cmp
push
pop
iret
mov
push
out
sbb
enter
or
mov
push
inc
lret
cmp
mov
cs
aad
dec
xchg
dec
jmp
test
mov
aam
pop
sbb
sbb
int
mov
cmpsl
mov
popa
je
cmpsl
cli
sbb
add
jmp
jb
jo
push
movsl
and
lret
repnz
jne
repnz
or
push
mov
dec
inc
adc
rcll
cli
mov
out
cmc
ja
jne
jp,pt
out
gs
lods
ret
je
cmp
lret
add
les
push
xchg
fwait
in
ds
sbb
inc
sub
jns
mov
or
xchg
xor
dec
sbb
adc
or
leave
jb
push
inc
pop
mov
xchg
jne
xchg
dec
cld
add
sub
lret
xor
xor
pop
mov
aam
push
jecxz
xchg
mov
jge
push
mov
fists
iret
and
push
pop
sti
jae
dec
in
jae
mov
adc
inc
fistps
sarl
in
xor
jnp
ror
hlt
jle
out
push
pop
xchg
xor
outsb
in
mov
pusha
xlat
and
and
xchg
loope
outsb
pop
rcr
dec
clc
outsb
cmpsb
adc
or
scas
into
cwtl
cmp
enter
mov
jne
gs
or
jg
push
stos
sub
sub
mov
jl
push
jge
mov
shl
xchg
shl
in
inc
add
push
testb
jnp
mov
pop
add
mov
cmp
cmp
lods
mov
and
dec
shlb
aad
cmpsl
jl
sbb
ljmp
cmp
leave
mov
outsb
dec
inc
push
out
xor
adc
or
lds
pop
mov
fidivrl
lret
pop
mov
test
sbb
jnp
cmp
mov
arpl
je
test
sub
sub
dec
ljmp
mov
xchg
bndstx
test
sahf
mov
enter
outsb
lea
lock
mov
jns
aaa
shlb
in
out
dec
xor
pop
pusha
rcrl
pop
dec
je
call
pop
cltd
leave
xchg
imul
call
pop
iret
nop
lds
enter
arpl
jb
out
lahf
jnp
adc
aaa
sub
push
dec
inc
xchg
xchg
add
rol
cmpsl
sub
subb
or
or
fdivrl
enter
sarb
out
jns
stc
and
xchg
loope
xor
dec
cmp
js
lret
mov
dec
fnstenv
push
dec
or
scas
pusha
add
jp
outsb
jnp
push
jg
ficomps
dec
and
xchg
sub
pop
sbb
sub
mov
jmp
jge
sbb
push
mov
inc
movsb
pop
test
push
jg
adc
mov
inc
pop
push
push
test
rclb
jae
int
and
ucomiss
jae
jbe
fsubrp
cmp
mov
push
ret
arpl
adc
hlt
mov
out
dec
sbb
sub
lcall
xchg
jl
daa
jo
cli
mov
pop
mov
gs
adc
das
fmull
outsb
pop
jbe
lock
dec
mov
fdiv
fsubrl
jecxz
clc
jne
sub
cwtl
xor
sbb
clc
loope
aad
cs
mov
sbb
test
inc
sbb
push
lahf
rorl
inc
movsb
xlat
sbb
fdivl
jbe
dec
add
adc
pop
push
les
int3
sbb
stc
jbe
add
fisubrl
subl
xchg
pop
inc
adc
addr16
and
add
mov
and
push
daa
mov
mov
aas
push
jb
cmp
call
pushfw
push
dec
sar
mov
jb
dec
mov
enter
sub
jb
mov
jle
cmp
movsl
imul
shlb
ds
inc
xor
jno,pt
cmp
inc
dec
imul
nop
sti
jl
xor
fldenv
mov
mov
and
sbb
fiadds
insb
int3
lret
xchg
mov
stc
jae
pop
nop
pop
xchg
mov
jmp
test
sub
push
adc
jg
xor
mov
scas
outsl
iret
dec
fdivrp
repnz
mov
pop
loop
adc
inc
mov
iret
bound
in
cmpsl
xchg
aad
mov
xorb
gs
ret
mov
addr16
sbb
push
adc
cmpsl
lods
jg
push
push
aam
inc
test
sub
and
pushf
insb
and
push
and
xchg
fcoml
int3
jne
dec
sti
jmp
jne
lock
cmpsb
popf
mov
add
incl
fs
test
adc
ja
inc
inc
mov
sub
cltd
mov
mov
pop
dec
jnp
inc
clc
insb
ret
data16
fbld
movb
std
movb
lret
push
xchg
mov
pop
or
sahf
or
jle
sbb
mov
pushf
clc
lcall
movsb
sbb
or
nop
push
les
cs
loopne
mov
popl
or
dec
sbb
lock
xor
mov
inc
popa
add
mov
mov
fidivrl
add
sub
push
popa
cmp
bound
rol
outsl
sti
lahf
mov
call
mov
ja
sbb
shll
ljmp
adc
jnp
mov
cmc
xchg
cmpsb
lds
sub
push
popf
xchg
cmp
aas
inc
mov
ds
push
rorl
call
mov
sub
xor
mov
jl
inc
daa
jne
mov
out
bound
int
loop
shrl
fisttps
cmpsl
inc
xorb
jmp
mov
addr16
xor
insb
jns
mov
mov
sub
mov
ljmp
stos
jecxz
pop
jecxz
cmp
stos
cwtl
inc
iret
dec
jl
mov
aad
rol
psllq
cmp
ss
mov
fstl
sbb
xor
fadd
mov
mov
sti
shll
aaa
adcb
adc
jmp
pop
adc
jp
push
or
or
jg
daa
int
mov
stc
lock
test
or
xor
mov
add
or
cwtl
fisttpll
xor
mov
jp
shr
push
repz
fnstsw
fwait
out
notb
hlt
mov
push
inc
outsl
shrl
repnz
lock
ret
lcall
and
loopne
outsl
dec
xor
cmpsl
sti
add
lock
jp
cmpsl
push
sub
ret
shll
mov
push
fldt
cltd
pop
mov
mov
ja
int3
xchg
add
adcb
add
jle
int3
mov
xchg
xchg
lcall
mov
push
or
cmp
in
inc
adc
test
dec
sarl
push
fxch
shl
scas
pop
xchg
adcb
call
scas
stos
outsb
lahf
sti
jmp
pminsw
sbb
pop
aas
lahf
jb
call
xchg
mov
cmp
dec
jecxz
jl
lret
aad
adc
push
in
xor
cmp
repz
jle
mov
sbb
ret
ret
lods
les
inc
sbb
cmovo
inc
push
adc
in
mov
mov
pop
mov
mov
cmp
pop
pop
inc
fsubrs
dec
xor
sbb
mov
xlat
cmp
mov
or
adc
lods
mov
adc
enter
mov
add
push
stos
or
mov
ljmp
pusha
pop
jo
mov
xorl
cmpsb
sub
adc
cmp
cmp
stos
dec
daa
ds
movsb
sub
test
fidivl
mov
xchg
inc
push
jp,pt
adc
add
push
push
jle
fs
sub
push
xchg
loope
jne
test
cmpsb
aam
cmp
or
stos
inc
sub
push
mov
cmp
and
outsl
jp
imul
mov
int
movsl
push
lahf
lret
cmp
lods
xchg
faddl
jbe
push
cli
mov
pushf
lahf
int
xchg
push
push
cli
out
push
xchg
iret
sub
cmp
jns
scas
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
jmp
jecxz
cmp
sbb
filds
push
cmp
negl
bound
jl
in
sbb
adc
packuswb
cmpsb
ja
mov
sub
and
in
mov
dec
and
fcoml
xor
cmpsb
int
mov
dec
orb
movhps
mov
xor
push
ret
xor
es
push
cmp
add
dec
inc
loop
ljmp
push
lret
call
clc
mov
aad
pop
rcrb
dec
xor
decl
add
shll
and
jbe
lods
xchg
jnp
sub
or
fninit
cmp
cmp
cmp
mov
das
sbb
mov
xchg
xchg
xchg
sbb
call
push
inc
imul
incb
dec
mov
cld
mov
add
scas
lea
and
xor
push
mov
sub
pop
ja
pop
push
out
stc
pop
dec
lock
xlat
xchg
in
xchg
xor
sbb
sarl
insb
sbb
je
out
sahf
stos
out
push
xor
inc
and
aad
pop
push
jne
add
or
pushf
addr16
xchg
push
arpl
or
xchg
xchg
leave
nop
and
jo
push
jae
xlat
and
imul
cmp
mov
clc
stos
xor
add
push
movsl
lods
lcall
pop
cwtl
scas
mov
jge
fidivrs
addl
out
dec
sahf
xlat
mov
push
les
lcall
sub
cmp
out
cltd
mov
scas
dec
fstpl
fisubrl
xchg
out
hlt
rclb
jb
loop
cli
pop
push
xchg
arpl
ret
mov
adc
sbb
adc
mov
aad
mov
push
insb
lock
and
nop
out
xlat
xchg
insb
mov
lock
fwait
add
and
je
jns
lret
ret
in
cmc
and
iret
fcoml
push
inc
or
test
mov
stos
mov
or
cmp
stos
ss
fmuls
dec
lea
inc
mov
les
shl
push
add
add
add
or
scas
fildll
and
daa
addr16
sbb
sahf
jg
repz
push
lds
dec
inc
cltd
xchg
pop
fucomp
add
outsb
add
ficompl
js
mov
lds
scas
sbb
xor
mov
int3
mov
adc
cld
les
call
out
push
ret
jmp
aam
add
cli
test
fldenv
push
repnz
push
repnz
fs
loop
lds
and
sahf
iret
loopne
fsubrl
out
shrl
mov
or
push
add
or
or
inc
mov
pop
lock
mov
clc
cwtl
jp
addr16
outsl
lea
arpl
std
or
cmp
clc
jmp
les
fs
hlt
mov
jns
push
push
in
mov
scas
jle
loop
mov
sarl
pop
icebp
sbb
into
lods
outsb
dec
xchg
pop
bts
lret
fmul
popa
stos
or
fldl
popf
jbe
lods
hlt
loop
aaa
je
mov
outsb
loop
pusha
sbb
jg
insl
xor
pop
xchg
jne
push
pop
stos
add
or
jecxz
sbb
xchg
mov
xor
lahf
ja
sarb
ficoml
mov
enter
inc
loopne
fadds
xchg
add
repz
cmpsb
xchg
inc
pop
pop
dec
stc
lret
jp
xor
xchg
mov
rcl
cmp
inc
popa
dec
mov
nop
imul
jmp
sti
loopne
mov
mov
rcl
dec
lock
xchg
inc
in
adc
xchg
xor
pop
and
in
or
adc
mov
ficoms
add
aam
fbld
cmp
pop
inc
sub
ret
jb
dec
xchg
shl
les
test
cwtl
or
or
div
mov
jae
add
loop
jl
fsts
and
lock
or
or
xor
push
bound
shl
mov
xlat
outsb
in
aaa
mov
jge
mov
push
rcr
imul
test
dec
inc
inc
dec
test
push
fs
aam
loope
test
cmpb
mov
popa
das
jae
push
pop
adc
mov
aad
pop
xchg
int3
popa
daa
and
add
repz
pop
ss
std
mov
pop
mov
cli
dec
jno
jnp
outsb
pop
scas
aas
call
mov
mov
popa
test
sahf
push
push
loope
lea
ja
cmp
es
push
ljmp
imul
pop
or
push
loope
pop
mov
insl
or
out
arpl
push
movnti
ret
psubusw
lods
push
hlt
bound
cmp
enter
or
outsb
cmp
or
mov
lcall
lret
xor
sub
test
sbb
dec
or
jae
adc
cmpsb
inc
lahf
aas
inc
sub
and
sub
cmp
aas
xor
mov
sub
xor
mov
pop
ja
cmp
xchg
loope
stos
jns
inc
das
les
pusha
ss
jmp
sbb
aas
jle
adc
idivl
pop
xor
sbb
add
in
mov
loopne
in
insl
rcrb
enter
inc
jle
sub
cmp
xchg
out
pop
or
mov
iret
inc
pop
xor
push
fwait
dec
and
jbe
inc
popf
aas
and
outsb
push
cmp
push
add
add
orl
dec
push
and
push
push
lea
sbbl
pop
aad
imul
dec
stos
jmp
test
xor
subb
in
mov
out
pop
fsts
dec
scas
mov
call
push
push
xchg
inc
xor
sub
call
jge
and
adc
lds
cmc
mov
dec
rorl
cmp
inc
inc
pop
sub
cmp
ret
aaa
mov
push
icebp
lock
push
add
and
in
add
mov
es
popf
xor
or
ror
pop
jae
sbb
std
cld
les
inc
xchg
hlt
mov
push
addb
dec
not
imul
or
mov
sbb
jg
pop
cmp
push
jmp
in
mov
scas
xchg
clc
mov
jne
shl
ficoml
inc
imul
daa
cltd
pop
ret
popa
sbb
std
xor
add
mov
lds
imul
movsl
ret
es
rdtsc
je
daa
jbe
xchg
cmp
cmp
pop
cmpsb
test
add
and
jp
sti
mov
popa
pusha
loopne
lret
mov
clc
movsl
scas
js
dec
and
mov
pushf
xchg
inc
movsl
xor
push
in
inc
xlat
outsl
xor
push
add
push
inc
outsl
and
mov
push
fists
loopne
add
mov
xor
mov
jbe
jbe
aad
pop
cmp
sub
int
add
xchg
mov
cs
repz
push
inc
addr16
pop
sub
popf
popa
sahf
rorl
adc
inc
stos
sub
mov
or
stos
repz
mov
lods
lcall
dec
mov
add
and
cmp
dec
or
fadd
push
jne
rol
jae
mov
mov
movsb
lods
adc
adc
add
xchg
mov
out
pop
adc
cmc
inc
and
dec
aam
or
out
or
push
mov
popa
scas
jne
ret
ds
cmp
mov
pop
mov
mov
shlb
cmp
jle
data16
enter
inc
sbb
int3
addb
hlt
push
int3
push
orl
xchg
sub
inc
dec
out
inc
iret
and
aam
and
xchg
jecxz
test
test
pop
into
jecxz
mov
aas
mov
in
dec
jb
dec
aam
jmp
fmuls
jnp
fwait
or
add
out
lods
mov
add
fwait
mov
fsincos
nop
xorl
mov
loop
inc
add
scas
mov
ss
push
sbb
fadd
int
push
xor
insb
xor
dec
jbe
sti
jl
lret
cmp
gs
in
sub
movsb
or
jno
in
out
data16
mov
mov
imul
rclb
test
iret
inc
fdivrl
stos
push
mov
dec
mov
cmp
movsl
in
xchg
inc
jl
mov
fs
sub
mov
add
es
jae
es
add
jmp
fnsave
cmp
cmpsb
jmp
aaa
adc
outsl
stos
cmp
ret
push
shr
insl
std
cmpl
mov
test
mov
scas
test
sub
lods
cmc
inc
shll
int
scas
push
cld
leave
jo
mov
cmp
shrl
lret
loop
stos
mov
mov
and
cmc
cmpsl
scas
mov
xchg
dec
cmp
jne
inc
into
fwait
imul
or
mov
icebp
push
ficoms
add
xchg
or
scas
lahf
leave
outsl
sarl
cwtl
pushf
push
mov
rclb
jp
lds
ret
aam
shlb
push
mov
lret
out
mov
adc
loope
ja
jmp
fisttpl
mov
ds
push
aaa
xor
sti
jns
jp
push
mov
mov
dec
sub
sahf
popf
mov
lcall
rorb
pop
push
ffree
and
xor
lds
lock
push
sar
int3
jmp
add
scas
jb
scas
lock
fnsave
loopne
popf
psubw
lock
jae
movsb
pop
sub
leave
lock
sub
cwtl
push
dec
in
int
mov
sub
dec
ds
mov
mov
jl
dec
xor
mov
inc
sbb
add
push
jecxz
fnstenv
insl
xchg
ss
mov
inc
or
xchg
xor
and
lods
push
stc
mov
add
fsubrl
mov
lods
push
lret
sahf
ljmp
adc
test
inc
insl
xor
add
mov
jbe
divl
out
cmp
xor
mov
inc
xchg
mov
mov
fldenv
push
inc
mov
xor
popa
mov
push
mov
loopne
roll
mov
xchg
cmp
adc
cmpsb
stc
in
int
test
jns
inc
mov
testl
fdivr
or
aad
adc
mov
inc
or
loopne
sahf
adc
inc
and
call
jmp
dec
push
sbb
repnz
mov
stos
adc
adc
sub
jle
and
jle
outsl
out
jl
insl
cmpl
outsl
jo
shll
or
out
and
pop
mov
sub
adc
dec
test
lea
jg
xchg
xchg
shlb
fdivrl
inc
loopne
shrl
cmpsl
jmp
cmc
stos
xor
dec
sbb
testl
int
popa
push
sbb
pop
mov
bound
fnstsw
fwait
repz
xchg
fisttpll
enter
adc
test
push
outsb
mov
xor
nop
mov
hlt
push
sbb
aad
mov
adc
xor
popf
push
lods
cld
ret
int3
fcmovbe
mov
mov
jo
aaa
je,pt
or
je
xor
ja
les
pop
mov
lcall
jbe
fnstcw
xchg
inc
cmp
xor
cwtl
std
pop
aam
aam
add
inc
popf
rol
mov
xchg
inc
inc
xlat
or
sbb
pop
stc
push
cwtl
cmp
xor
icebp
jge,pt
cmpsl
js
andl
call
das
xchg
out
addb
mov
pop
rcll
xchg
daa
clc
lds
mov
sub
sahf
lcall
cmp
in
cmp
test
add
add
push
xchg
sbb
cmp
pop
cmp
jl
sbb
icebp
into
jo
mov
lcall
push
xorb
cli
ds
lock
out
mov
adc
jae
sub
mov
cli
add
ja
and
daa
test
jns
sub
scas
push
dec
inc
addr16
stos
add
bnd
dec
xlat
pop
xor
es
popf
push
adc
hlt
repnz
fld
and
dec
pop
lea
popf
xor
mov
orb
into
adc
cltd
push
cmp
lret
mov
ror
cmp
push
adc
sub
popf
addr16
jne
mov
jns
pop
sub
stos
and
arpl
cli
sbb
pop
repz
jp
iret
sbb
push
gs
pop
fldl
ss
aad
mov
mov
sub
cmp
insb
push
ficomps
subb
inc
dec
lock
hlt
jb
cmp
loope
mov
adc
dec
inc
addr16
repnz
lock
jg
add
sbb
fwait
jnp
mov
into
and
stc
sbb
sbb
in
cmpsb
rcl
ja
pop
int
enter
adc
or
lock
cmp
xchg
or
ds
sbb
sbb
jno
outsl
test
ljmp
inc
mov
sub
mov
ljmp
je
mov
in
or
jmp
sub
cmpsl
xchg
jnp
clc
and
aam
cmp
aas
rolb
test
in
pop
mov
cmpl
fs
out
mov
nop
push
pop
mov
mov
xchg
mov
fsubs
je
adc
nop
mov
sbb
les
sbb
and
lea
fnsetpm(287
xchg
cmpsb
aaa
adc
fistps
movsb
sbb
pop
sub
cs
lret
stos
and
je
jp
and
hlt
cltd
aad
loope
loope
xchg
lret
dec
mov
mov
or
pop
fcoms
js
scas
push
mov
lock
sti
mov
push
pop
xchg
push
lcall
pushf
inc
mov
test
in
outsl
xchg
push
insb
lods
mov
mov
pop
inc
jecxz
fwait
pop
lods
cli
notl
lods
out
push
jl
mov
dec
sahf
and
addr16
dec
adc
movsb
jl
pop
lea
sbb
leave
add
cld
arpl
ret
out
out
dec
pop
cmpsb
cwtl
repnz
pop
add
orl
adc
cmp
rorl
mov
shlb
decl
or
fwait
lcall
xor
lret
pop
mov
clc
std
and
cmp
popa
out
cmp
stos
cld
dec
loope
inc
or
sbb
out
daa
imul
sbb
idiv
shll
rolb
cmp
pushf
in
pop
daa
add
fsub
mov
fcoml
cmp
ss
hlt
adc
nop
lock
shll
stc
insb
lds
xchg
hlt
xchg
test
mov
js
sub
mov
fs
mov
movsb
jb
aaa
loop
insb
cs
mov
cmp
out
es
mov
into
incb
outsb
loopne
test
mov
xchg
lret
mov
loopne
or
icebp
xlat
mov
xchg
mov
out
push
js
daa
or
adc
fdivl
jl
fs
xchg
roll
aaa
mov
dec
lret
punpckhwd
popa
push
mov
inc
das
adc
jge
cmp
cs
test
pop
inc
rcr
sub
rorb
and
mov
mov
mov
sbb
sbb
fcmovnbe
into
push
add
in
lods
lcall
and
in
test
lea
jae
imul
xchg
jo
hlt
pusha
push
data16
enter
sub
ds
push
hlt
mov
add
push
push
loope
adc
loop,pt
pop
shlb
jp
pushf
jmp
mov
flds
jmp
aad
pushf
rcll
cmc
lea
xchg
stos
push
adc
sbb
lods
sahf
ds
aad
ret
jle
sub
mov
mov
mov
cmp
jp
jno
jns
cmp
sbb
mov
cwtl
es
sbb
sbb
xchg
xorl
mov
pop
fidivrl
gs
test
inc
xor
inc
imul
subb
or
pop
and
jp
or
test
or
jg
cli
leave
arpl
pop
pop
clc
hlt
sbb
add
aas
jns
push
loopne
inc
push
mov
out
negl
sbb
add
dec
or
mov
xor
or
shll
outsl
ja
lea
add
add
mov
jns
inc
xor
mov
add
pushw
mov
dec
push
and
sbbb
adc
jb
or
xchg
and
sub
sub
arpl
fistpl
xchg
enter
push
insl
add
cmc
lret
rcrl
mov
sub
out
fadd
inc
stos
dec
inc
cld
add
xor
stc
fistl
scas
ss
jo
outsl
jl
or
lea
int3
mov
cmp
cmp
iret
lfs
adc
scas
sbb
arpl
cli
mov
push
xchg
cmp
dec
jns
fdivl
rclb
fistps
sbb
push
mov
mov
jns
push
inc
pop
loopne
lea
cmp
and
jb
mov
into
jge
or
mov
inc
icebp
mov
xchg
in
cmp
xor
xchg
les
stc
lock
mov
sarl
filds
mov
cmp
daa
lret
stos
cwtl
sbbb
jb
push
add
int
mov
mov
or
sbb
push
insb
mov
xor
xchg
psrlw
hlt
jle
mov
out
or
fsubrs
jecxz
xor
sysenter
dec
pop
cmpsb
push
sub
adc
sbb
add
dec
pop
or
adc
cmp
out
loop
sti
jnp
sub
insb
es
jb
add
and
popa
ss
and
xchg
add
shll
movsb
shll
mov
dec
repz
loop
lock
cmp
and
adc
mov
adcl
adc
outsl
aad
or
ret
js
fldl
mov
xchg
imul
imulb
inc
mov
dec
jbe
pop
mov
xor
jbe
push
mov
and
mov
in
lods
xchg
insl
cmp
dec
lcall
call
mov
lret
fsubs
pop
jmp
sbb
mov
test
std
mov
sbb
lods
inc
call
xorl
jo
inc
in
addb
ljmp
outsl
add
imul
sub
or
or
les
testb
repnz
inc
add
fwait
pop
xchg
mov
fistl
subl
cmpsl
or
int
lods
insb
cmp
leave
mov
gs
pop
je
out
sbb
jne
rclb
aad
ljmp
lret
mov
mov
add
or
mov
test
xor
fwait
cmp
jnp
adc
fadd
jns
mov
fildll
push
xchg
aaa
cmp
shrl
ds
mov
fwait
cltd
adc
aas
add
shrb
cmpsl
bound
adc
addr16
xor
sahf
add
push
mov
fistps
adc
outsb
mov
nop
fcmovbe
data16
stos
mov
iret
dec
add
xchg
nop
insb
lahf
mov
mov
fcomi
imul
sbb
or
popa
iret
xchg
shll
mov
push
test
ss
pop
jb
lret
punpckhwd
jnp
stc
in
push
add
orl
mov
adc
lock
cld
jno
ja
je
push
jp
fsubr
jae
movsl
sub
mov
jmp
mov
adc
lods
sub
mov
in
jl
pop
mov
jbe
add
sub
rclb
loop
orb
fistps
and
lahf
int
fcmovnb
and
mov
push
int3
pop
dec
dec
jmp
jae
fnstcw
int3
pop
mov
xchg
push
test
dec
out
test
inc
mov
into
into
pop
stos
setbe
adc
fisttps
cmp
or
rorb
jl
mov
mov
adc
sbb
dec
adc
fiaddl
jne
dec
aam
pop
pop
push
mov
inc
int3
shr
in
mov
out
or
out
inc
lea
and
insb
xchg
jno
add
push
push
pop
sub
icebp
in
aas
ret
scas
and
xlat
pop
sbb
jb
jle
cwtl
frstor
in
sub
sahf
ds
out
subl
sbb
sbb
stos
imul
movsl
ss
lcall
add
in
mov
dec
add
test
xchg
mov
and
sub
xor
add
xchg
jne
xchg
es
cmp
push
xor
out
insb
dec
pop
pop
and
popa
test
lret
sahf
and
mov
aas
xchg
pop
xchg
and
jb
cltd
xor
jg
xchg
push
incl
pop
xchg
data16
andl
push
clc
mov
mov
daa
adc
dec
mov
ljmp
xlat
xchg
repnz
adc
mov
mov
insb
gs
push
xchg
xchg
lahf
loope
dec
pop
push
ljmp
sub
sub
pushf
lock
push
cmp
dec
jge
movsb
mov
lods
jb
insb
push
pop
and
fs
mov
pop
les
movsl
jge
jo
insb
mov
push
andb
jmp
adc
xlat
lods
lods
dec
inc
popa
ret
clc
mov
loopne
sbbl
sbb
jbe
jmp
xchg
push
jl
pushf
inc
mov
cmp
flds
lock
repnz
sti
inc
in
stos
and
mov
inc
sbb
mov
adc
mov
add
shl
in
in
ss
aam
add
pop
mov
scas
test
pop
inc
dec
test
add
sbb
les
push
movsl
mov
jns
in
or
adc
nop
xchg
sub
cmp
xor
mov
dec
arpl
jmp
adc
fwait
jp
movsb
loopne
cs
sbb
or
sahf
aad
in
or
mov
or
mov
jge
dec
mov
sbb
cmp
pop
jnp
loopne
fwait
lahf
jecxz
fiadds
dec
out
jl
lret
mov
or
adc
inc
add
push
sbb
cmp
xchg
inc
push
sub
mov
mov
fcompl
adc
fwait
cmp
cmp
xchg
bnd
push
es
fisttpl
scas
sarl
fsub
sbb
xchg
push
sub
fdivrp
out
sub
popa
push
cmpsb
shrl
and
in
mov
dec
sub
movl
mov
xchg
jmp
je
test
mov
push
out
sbb
sarb
push
arpl
mov
lock
out
fcoml
in
dec
cmpsl
xor
sbb
enter
in
add
mov
gs
into
in
and
cmpsl
and
push
sub
push
cmc
cld
push
mov
test
pop
push
xchg
mov
ret
pop
lods
add
pushf
xchg
push
fbstp
jb
xor
into
mov
out
iret
inc
cltd
cmp
test
scas
pushf
test
in
mov
inc
sub
rcrb
cmp
inc
imul
xchg
jnp
jmp
test
jg
mov
stos
sub
ret
xchg
mov
add
int3
and
mull
cmp
ret
loop
rcl
push
xchg
mov
cltd
fbstp
jns
cli
adc
jl
imulb
jge
daa
fildl
and
push
jnp
or
sub
clc
pusha
roll
ljmp
mov
pop
push
mov
mov
int3
cmpsl
insl
add
jl
scas
icebp
and
addl
jb
ret
popa
out
fwait
add
fldcw
xchg
cmp
and
push
cmpsl
jmp
nop
inc
inc
das
je
push
jecxz
stos
dec
pop
pop
pop
in
mov
mov
inc
jle
sub
shl
and
mov
popf
leave
sbb
inc
xchg
divb
dec
jecxz
loopne
adc
loop
gs
scas
mov
add
xor
in
test
mov
or
lret
cmp
push
xchg
jge
sub
out
add
cmp
sahf
das
pop
lret
dec
gs
mov
test
jns
mov
cmpb
popf
xchg
fstp
fs
scas
shlb
imul
test
aad
dec
mov
mov
push
mov
pop
lret
xchg
pop
adc
loopne
lret
cmpsb
popf
push
xchg
sti
test
sbb
addr16
push
out
es
cmc
arpl
mov
iret
mov
mov
pop
adc
setae
push
ljmp
pop
push
dec
push
mov
and
in
pop
xchg
mov
push
xchg
push
add
adc
dec
insb
popa
fmulp
jno
jle
sbb
dec
jne
pusha
fdivl
mov
cmp
mov
movsl
ret
cmp
pop
jle
push
jo
xor
dec
je
stc
and
sbb
movsb
test
push
or
nop
and
stos
les
pop
sbb
pusha
lcall
sub
icebp
dec
or
push
dec
inc
movsb
ficompl
sub
jg
sti
xchg
pop
call
arpl
pusha
in
cmc
aas
dec
aad
lret
dec
cmpb
inc
movsw
push
push
or
dec
adc
in
lret
xchg
mov
xchg
xchg
fldl
mov
nop
and
shll
jb
dec
inc
jo
std
push
jns
or
mov
xchg
pop
sub
push
gs
and
pop
roll
test
adc
mov
into
mov
mov
lea
cli
fucomip
pop
dec
je
insl
jnp
fimuls
jp
mov
mov
rcrl
jp
cmp
bound
jge
push
fsubl
jae
into
cmc
sti
pop
lods
js
mov
adc
push
mull
lods
pop
xchg
lds
xchg
sub
add
mov
nopl
inc
aam
jl
shrl
inc
stos
push
imul
imul
push
ss
push
lea
or
in
icebp
dec
jmp
mov
lods
ljmp
jge
mov
imul
and
das
lahf
inc
add
xor
loopne
rolb
scas
cmp
scas
sbb
xchg
repz
sbb
test
and
adc
cmpsl
imul
or
pop
filds
cli
mov
lret
xchg
outsb
cs
popa
jmp
outsb
daa
adc
pop
pop
pusha
inc
push
inc
inc
mov
push
inc
push
lret
xchg
test
repz
in
fisttpll
cld
out
imul
inc
aam
push
jns
jg
mov
imul
mov
lret
adc
repz
add
dec
or
call
jecxz
cld
push
sti
pop
push
sahf
cmc
pop
pop
push
jbe
xchg
imul
in
ss
enter
int3
addl
adc
and
cmp
pop
xchg
popa
jge
mov
sub
lock
test
pop
adc
or
dec
ss
gs
iret
loopne
add
cmp
adc
mov
cltd
in
iret
test
imul
popf
je
pop
out
xor
fs
js
imul
adc
ret
inc
mov
cs
jmp
sbb
arpl
push
fimull
adc
pop
shrb
mov
imull
lock
shrl
enter
inc
fdivr
push
incb
mov
out
pop
adc
mov
cmpsb
push
sbb
cmc
xor
add
inc
cld
adc
fdivrs
and
testl
jae
in
sbb
mov
pop
xor
mov
ficoms
jle
rcrb
pop
add
lods
das
cmpsb
hlt
cs
loopne
or
mov
out
sbb
out
sbbb
push
and
mov
add
loop
sub
mov
jae
xchg
sub
push
and
pop
enter
dec
sub
roll
lods
hlt
sbb
mov
inc
pop
iret
das
test
push
mov
enter
fdivl
insl
lret
dec
fidivrs
in
loope
data16
cltd
cwtl
sbbb
test
int
xchg
lods
inc
or
sub
push
in
std
sub
in
push
aaa
push
out
pop
inc
and
bound
push
stos
dec
sahf
inc
ss
inc
adc
dec
push
ljmp
sahf
ss
sarl
dec
out
inc
les
out
pop
int3
jo
mov
adc
jl
rolb
mov
sub
xlat
mov
test
insl
pop
shll
movsbl
cmp
stos
cli
gs
inc
push
mov
gs
ljmp
pop
sbb
stos
pop
mov
repz
or
shrb
pop
push
xchg
imul
pusha
cmp
stos
adc
je
movsl
sbb
cmpsb
jnp
cwtl
loopne
mov
mov
add
dec
das
mov
dec
lds
dec
mov
fmul
imul
mov
jns
orb
cld
sbb
inc
arpl
in
aad
add
jns
add
jmp
inc
pcmpgtd
lcall
push
sub
aam
lds
arpl
in
xor
nop
test
add
xchg
in
mov
adc
into
pop
push
fwait
cs
data16
enter
push
ss
add
enter
mov
jnp
ret
and
push
inc
in
pop
add
sahf
scas
push
js
jne
popa
xchg
lcall
mov
mov
push
sbb
mov
jne
mov
mov
sub
outsl
xor
xchg
mov
scas
out
push
loop
loopne
jle
push
incl
adc
iret
push
mov
xor
add
inc
pop
and
sbb
cmp
push
mov
popf
test
pop
movsb
and
out
push
sub
in
or
stos
mov
popf
addr16
inc
sbb
fisubl
rol
adc
jecxz
xor
or
push
out
mov
xchg
jg
vmread
pushf
pusha
pusha
adc
mov
and
sub
and
mov
cwtl
xor
data16
outsb
mov
add
mov
mov
ds
xor
adc
sbb
jp
jle
add
hlt
xchg
in
adc
and
xlat
and
aam
adc
xchg
inc
int3
add
scas
lods
and
cmc
loopne
mov
les
movsb
inc
sub
loopne
in
and
lea
pop
sbb
and
xor
lret
push
lcall
mov
ljmp
inc
dec
jg
aad
push
insl
inc
push
int3
mov
aam
push
out
in
fwait
jo
aad
dec
out
sbb
adc
pop
and
iret
test
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
jmp
mov
enter
imul
cli
jmp
bound
pop
bound
sub
push
pop
ret
fmull
mov
jo
loop
jge
push
lock
jecxz
in
sub
mov
stos
insb
xchg
pop
mov
mov
mov
push
les
or
push
ja
outsb
push
inc
cli
repnz
movb
xor
cmp
xor
inc
adc
jg
outsb
and
xchg
push
cs
or
pop
jg
cltd
sub
mov
lret
icebp
stc
add
cmpsb
add
inc
sti
adc
sahf
lcall
lahf
test
ds
jns
pusha
and
jne
mov
int
add
arpl
insl
mov
sahf
push
pop
mov
shrb
mov
mov
push
jne
sbb
add
imul
ja
das
scas
test
ret
das
dec
out
clc
dec
jmp
subps
int3
es
push
jmp
xorl
popa
and
loopne
cmp
push
sub
sbb
jno
jne
add
xor
cli
ja
mov
aam
dec
cmpsb
inc
pop
cli
daa
sahf
fsubp
sbb
mov
push
pop
cmp
cmp
push
sbb
sarb
out
pop
add
jmp
in
lcall
fdivrl
sbb
jnp
mov
and
inc
sub
add
cmp
cmp
nop
mov
cs
xchg
dec
lea
jnp
and
adc
arpl
repnz
mov
inc
call
add
push
arpl
cmpsl
pusha
xchg
mov
iret
pusha
es
psubsb
inc
roll
insl
jmp
adc
movsl
pop
std
fldpi
aas
bound
xlat
arpl
sbb
sub
xor
dec
or
and
sub
fbstp
jmp
shr
push
mov
inc
ljmp
xchg
cli
pushf
cmp
push
das
inc
or
mov
shrl
fsts
fcoml
mov
jnp
imull
and
xchg
into
cs
xor
mov
lods
or
subl
mov
cmpsl
aaa
in
add
daa
mov
xchg
push
stos
cmp
mov
sub
andl
add
clc
mov
je
mov
or
out
lcall
out
adc
mov
inc
cmp
ljmp
cld
jge
das
and
xchg
aaa
and
fldcw
repz
jge
mov
icebp
push
inc
fidivl
jmp
cmp
jmp
fs
xlat
dec
imul
pop
inc
sbb
jge
sub
mov
add
or
dec
sub
cmp
xchg
push
jo
push
xchg
jb
setb
incb
addr16
into
mov
mov
pushf
repz
movsb
pop
mov
or
sbb
rorl
pop
push
bound
lcall
sub
or
shll
jns
loopne
pop
jne
xor
es
xchg
out
mov
pop
js
insl
mov
nop
inc
inc
aad
repz
dec
gs
cmp
mov
or
sub
or
dec
push
out
cli
push
lahf
cmp
pop
lea
xchg
movsl
add
repnz
mov
add
add
shlb
bound
movsl
cmp
pavgw
inc
dec
dec
fwait
ja
cli
sbb
xor
repnz
ja
mov
pop
or
and
add
fsubs
dec
loopne
xchg
mov
mov
push
pop
mov
ficomps
xchg
outsl
ljmp
sbb
scas
aam
jb
xchg
les
and
loopne
mov
out
inc
out
daa
inc
jae
pop
int
test
mov
fucomip
sub
jb
repz
pop
jmp
dec
xchg
fldl
inc
out
sub
lods
jno
bound
mov
aaa
enter
push
fsubrl
or
cmpsb
mov
sub
dec
fisubrs
sub
mov
pop
cwtl
cmp
imul
lret
adc
and
insl
iret
stos
adc
pop
lods
jmp
or
adc
sti
jnp
rclb
dec
mov
mov
fscale
rorl
loopne
js
fidivl
jle
lahf
cmp
push
sub
addb
cmpsl
adc
xchg
iret
popf
push
lods
mov
push
testl
or
sub
pusha
repz
pushf
out
cmp
jmp
mov
fadd
push
jl
cltd
or
xor
push
push
sbb
in
mov
dec
dec
adc
pop
nop
push
cmp
mov
fnstenv
out
es
inc
ret
xchg
out
jb
xlat
xchg
outsl
ss
js
hlt
cld
xchg
jno
lret
jne
inc
aaa
cmpb
data16
add
aas
add
cmp
into
xchg
mov
pop
pop
adc
aam
add
shlb
dec
xchg
int
jmp
ret
pop
mov
mov
sbb
sbb
dec
mov
dec
inc
xor
mov
inc
push
in
or
fwait
xor
cmp
xchg
iret
and
arpl
pop
test
xchg
mov
in
mov
shl
hlt
dec
arpl
mov
sbb
dec
outsb
pusha
mov
jge
outsb
sub
xchg
imulb
shl
xchg
aas
iret
lds
pop
ror
dec
data16
in
push
dec
shll
in
psubusw
jo
movsb
sub
mov
push
fmul
mov
fcmovne
mov
lods
or
push
inc
sub
dec
mov
add
insb
xchg
sub
and
les
fdivl
fs
sub
xorl
xchg
push
xor
sbb
adc
xlat
adc
outsb
addr16
adc
fadds
insl
jae
and
movsb
and
add
cwtl
pop
jae
cmc
fsubs
or
adc
pop
scas
jmp
sub
add
sti
jecxz
insb
sti
addr16
or
push
ss
lods
or
lods
xor
lods
or
les
aam
inc
out
and
leave
mov
sar
mov
in
mov
sub
sbb
pop
inc
test
stc
and
fs
es
push
fdivs
xchg
fs
scas
scas
add
xor
push
popf
dec
je
int3
std
cmp
pop
sahf
add
push
sbb
rdpmc
fcomps
push
rcll
or
inc
pop
adc
das
cmpsl
add
mov
pushf
inc
add
fmuls
cmp
adc
outsl
lods
push
push
jno
jecxz
push
loop
mov
jns
dec
cwtl
jne
int
mov
push
mov
nop
jbe
sub
jne
in
fsubr
inc
repnz
xor
outsl
jns
daa
lret
inc
adc
inc
test
cmp
inc
cmp
imul
ret
hlt
roll
inc
dec
fs
or
dec
std
adcb
or
xchg
jp
jg
adc
nop
pop
fimuls
jns
inc
mov
sub
dec
pop
mov
imul
mov
cmp
rcll
push
mov
sub
gs
stc
pop
mov
adc
xchg
das
popf
cli
cltd
sub
cwtl
xchg
cltd
dec
jo
mov
sub
andl
mov
lret
stc
jno
leave
mov
ja
or
out
mov
adc
sub
sbb
inc
cmc
daa
je
and
les
or
sti
leave
dec
push
test
in
mov
ret
xor
ds
jmp
lock
dec
sbb
and
jle
flds
push
add
das
jb
jle
jg
adc
jo
mov
mov
mov
pop
push
movsb
out
push
int
pop
mov
lahf
xlat
add
mov
jnp
mov
mov
add
pop
adc
addb
or
les
mov
mov
pushf
dec
pop
cltd
fildl
adc
cmc
imul
jmp
xor
sub
xor
mov
pop
inc
mov
cmpsl
mov
mov
sbb
das
les
pop
sarb
jns
jmp
pop
xlat
in
loope
inc
cmpsl
add
mov
popl
roll
mov
iret
push
xchg
rcl
cmp
jge
mov
repz
scas
out
cmp
lahf
or
pop
xchg
outsb
cmpsb
pop
ret
arpl
mov
arpl
fnstcw
divl
add
and
jl
and
xchg
scas
loopne
popf
pop
jne
test
mov
in
pop
cs
fldt
pop
test
fdivr
and
ja
jo
fstpt
add
inc
xchg
adc
dec
add
and
add
xor
adc
je
mov
call
adc
in
mov
arpl
loopne
mov
xchg
pop
stos
out
mov
add
lahf
dec
and
mov
and
iret
and
js
pushf
lahf
pop
cli
adc
inc
ss
pop
mov
pop
adc
xlat
aam
imull
pop
mov
dec
xchg
jecxz
fistpll
fwait
imul
mov
mov
lahf
fs
xlat
jbe
add
mov
sub
xor
xchg
adc
cmp
mov
fstpt
movsl
xchg
xchg
pushf
push
mov
jp
fadd
cmp
das
ret
cmp
in
cmc
push
ja
imul
clc
rcrb
and
test
sti
inc
mov
int
addl
xchg
xchg
add
dec
mov
lock
jns
sbb
scas
cmpsl
xchg
mov
les
pusha
cli
xor
call
lret
push
pop
sbb
mov
xchg
cmp
xchg
sbb
rcr
xchg
in
mov
int
jae
mov
hlt
test
sub
adc
cmp
stc
icebp
jge
scas
push
ds
fisubrs
lahf
xchg
aam
or
push
shll
cli
loop
xchg
and
je
sbb
and
xor
repz
pusha
in
push
mov
lcall
push
mov
sarb
js
mov
pop
loopne
push
push
jecxz
mov
jl
out
int
jns
rorb
call
cmp
lcall
sbb
push
push
sarb
adc
sarl
add
jmp
call
inc
xor
cmc
jbe
inc
add
fwait
leave
cli
or
dec
cmp
testb
mov
sahf
incl
mov
mov
mov
aaa
xor
push
pop
jg
add
mov
int3
pushf
add
rcrb
pop
in
imul
xchg
sbb
int3
stc
cmp
test
xchg
lcall
cs
and
jbe
add
iret
jp
loopne
add
push
scas
sub
dec
in
in
fwait
sbb
mov
cmpsb
enter
sbb
push
das
dec
sahf
inc
ljmp
les
cmc
xlat
ss
mov
sbb
gs
mov
les
mov
xchg
cmp
sub
and
lret
pop
imulb
fwait
mov
mov
fwait
mov
inc
cmp
and
lret
push
xor
push
imul
rcl
sub
nop
jae
shr
aaa
test
fs
inc
pop
ret
je
stos
mov
xchg
data16
mov
sub
xchg
pop
pop
fistps
mov
arpl
loopne
add
fidivs
jo
nop
iret
pop
jne
adc
leave
jg
push
dec
pop
repz
les
fsubr
xlat
xchg
ret
push
xchg
repnz
jge
addr16
repz
xor
pop
inc
xor
push
fisubrl
subb
outsl
icebp
leave
xchg
notl
ljmp
push
das
inc
push
out
mov
nop
imul
mov
adc
xor
cmp
mov
dec
stc
push
jbe
mov
stos
mov
lea
sbbl
mov
xor
mov
lahf
xchg
or
bnd
or
pusha
movsl
lahf
int3
nop
mov
das
jge
inc
fsubrl
subb
dec
xchg
aad
in
fsubl
fiaddl
adc
jge
scas
lods
fstpl
lret
repz
cmp
fs
nop
imul
mov
icebp
fldl
jecxz
in
jnp
lods
lds
cmpsb
shrb
xor
xchg
das
insb
sub
add
pop
add
inc
jb
pushf
repz
and
xchg
lcall
fdivrl
mov
mov
outsb
ret
push
dec
movsb
stos
xor
sbb
lret
jae
push
mov
and
shll
add
lretw
sbb
add
adc
add
adc
cltd
mov
dec
out
inc
wbinvd
repnz
lcall
pop
xor
sbb
push
pop
mov
imul
cltd
imul
ja
push
and
jecxz
loop
inc
imulb
cwtl
rolb
pushf
imul
inc
jge
js
imul
push
add
and
mov
xor
mov
cli
jb
je
mov
or
mov
lret
xchg
mov
sbb
lods
mov
ss
test
mov
nop
testl
ficoml
xchg
push
or
fistpl
sub
xor
mov
dec
bound
ficomps
pop
pop
cmp
iret
and
sahf
push
jl
fwait
mov
enter
xor
pop
sub
or
xor
xor
jmp
ret
and
sub
stc
lcall
inc
sahf
mov
out
pop
shl
push
into
cmp
stos
shrb
and
mov
push
or
sub
sub
int
sub
mov
popf
sbb
ret
jge
mov
pop
rcr
jmp
rcr
ljmp
cmp
cmp
add
add
sbb
mov
dec
pop
push
jne
jae
jbe
dec
es
jbe
mov
pop
stos
ds
or
adc
mov
jo
pop
fwait
sti
xchg
add
pop
shlb
pushl
mov
test
mov
sbb
sbb
les
in
icebp
xor
jle
xchg
push
mov
xchg
jne
sub
std
xchg
sbb
cmpsl
inc
dec
dec
stc
repz
sbb
movsb
adc
dec
inc
adc
xor
icebp
popf
test
xchg
call
subb
cmp
xchg
test
inc
lods
xchg
dec
repz
inc
stos
stos
int3
mov
xchg
mov
cwtl
hlt
sub
xchg
jle
add
push
pushf
push
mov
subb
pusha
adc
xchg
adc
push
cmp
fistpl
movsl
enter
add
out
mov
daa
pop
jo
mov
clc
pop
clc
jecxz
orb
xchg
outsl
cmp
ret
ljmp
push
push
and
mov
mov
movsb
loopne
and
out
outsl
push
fcom
cwtl
inc
rcrl
in
pop
and
sub
or
out
cmpl
cs
adc
jg
mov
xlat
adc
iret
pop
pop
jns
ja
dec
enter
lds
lods
int3
sbb
movlps
mov
push
xor
xor
lcall
test
jo
xchg
pop
dec
xor
or
stos
dec
jbe
ret
cmc
jle
mov
aas
mov
inc
add
out
jg
stos
dec
in
push
leave
and
fchs
or
int3
call
pop
mov
aaa
xchg
xor
add
dec
adc
scas
adc
lret
pop
xor
popf
xor
mov
push
push
stc
jp
stos
rcrb
int
push
mov
jns
pop
xchg
xchg
cmp
push
add
popf
stos
push
mov
lods
push
imul
pop
sbb
push
fdivr
addl
nop
and
adc
inc
xorb
add
pusha
cmpsl
mov
loop
nop
leave
aam
add
jle
jge
pop
push
test
into
add
js
xlat
mov
mov
hlt
cmp
mov
inc
repnz
mov
rol
adc
and
pop
push
ret
data16
inc
ret
cmpsb
push
cmpb
mov
sbb
push
dec
mov
mov
mov
pop
and
aaa
pop
insl
mov
push
test
pop
ret
mov
sbb
mov
mov
push
adc
into
jecxz
pop
call
jae
repz
sbb
jne
loope
je
shl
jnp
rcrl
lahf
leave
or
mov
shrl
add
jmp
sbb
rorb
enter
push
add
pushf
push
pop
imul
xchg
imul
test
fistl
ret
ja
sub
jle
xor
sbb
mov
lret
xchg
lcall
xor
mov
push
adc
or
ds
movsb
outsl
outsl
pinsrw
mov
dec
aad
fstpl
cltd
in
mov
scas
mov
lea
cmp
in
outsl
repz
pusha
mov
mov
cmp
and
call
jbe
test
push
sbb
lret
loopne
aas
xchg
xchg
add
es
mov
sub
and
pop
andl
arpl
out
aam
and
lds
adc
movsl
push
add
adc
jl
add
jg
xor
mov
mov
stos
adc
inc
dec
popf
aam
jno
ja
mov
adc
adc
fs
jnp
pop
ds
jp
clc
pop
in
dec
pop
and
in
dec
mov
dec
jl
sahf
das
adc
sbb
inc
mov
sbb
cmp
adc
es
xlat
and
cmp
push
dec
mov
add
and
push
jne
and
mov
lcall
test
gs
dec
fcmovb
fcmovbe
inc
mov
rclb
bound
mov
jmp
ret
inc
pop
xor
loop
in
cwtl
xchg
sbb
mov
inc
cmp
mov
lret
sub
xlat
pop
loope
sbb
add
sbb
cmp
nop
ja
xchg
mov
scas
push
pop
cmp
push
xchg
leave
icebp
mov
ret
or
sbb
sbbb
shrl
inc
ja
sub
fucomip
jnp
xor
inc
cltd
js
ljmp
inc
mov
jnp
out
je
push
push
out
dec
pop
cmp
or
subl
adc
lea
leave
icebp
push
pop
aas
add
ret
insb
cmp
repnz
and
nop
inc
xor
cmp
ret
mov
in
ds
push
rcrb
movsl
adc
inc
std
inc
cli
pop
push
xchg
inc
in
xchg
jmp
pop
loope
lods
mov
shl
fiadds
imul
aaa
cmp
daa
jne
dec
dec
jmp
mov
pop
call
jbe
cmpsb
insb
xchg
xchg
mov
inc
pop
cltd
repz
ja
mov
cmp
xor
fstpl
mov
adc
inc
fsubl
mov
push
nop
push
pop
mov
vrcpps
inc
loope
push
daa
push
cmp
jl
andl
xchg
repz
aaa
and
and
and
stos
mov
std
repnz
xchg
lods
or
push
adc
leave
lock
and
cmpb
dec
sbb
pop
pop
or
jbe
loope
in
inc
outsl
push
jnp
push
or
or
mov
es
xor
shlb
inc
add
dec
xchg
nop
sub
xor
cli
and
shl
inc
or
sbb
pop
mov
add
add
in
ja
push
das
inc
inc
xchg
insl
enter
push
loop
fisubl
arpl
popa
mov
movsl
fwait
mov
aam
xorb
xchg
out
sbb
pusha
nop
lahf
dec
ss
pop
or
aam
test
insl
fisttps
xchg
sub
push
mov
cmp
lahf
jbe
inc
mov
jnp
jns
mov
stos
lcall
inc
int
xor
fldl2t
lret
adc
aas
or
cmp
mov
mov
test
icebp
mov
fnstcw
cmp
daa
ja
mov
sub
mov
addr16
pop
dec
out
ret
jg
sbb
popf
outsl
push
mov
fdiv
sub
lret
mov
adc
push
adc
cmpsw
sub
ja
cmc
inc
inc
cmp
pop
int3
mov
fisubrl
pop
or
lcall
xor
dec
outsl
xchg
repz
sti
mov
rcrl
les
sub
loopne
lcall
mov
mov
dec
jo
mov
xor
and
int
int3
and
aaa
pop
mov
std
mov
aam
mov
sbb
imul
insb
lret
sbb
add
cmp
sub
cmp
xchg
ljmp
stc
in
or
add
mov
mov
dec
pop
adcl
testb
inc
pop
out
ficompl
outsl
loope
sbb
inc
int
xchg
cwtl
cld
mov
xor
int
or
dec
addps
push
or
in
cmp
xchg
sub
or
and
outsb
js
sub
xchg
mov
jns
std
mov
ja
jnp
add
jl
fisubrl
fnstcw
cld
push
lcall
lret
hlt
mov
aam
fwait
in
into
and
or
and
pusha
ss
pushf
lret
in
aaa
cld
and
mov
lods
jnp
push
xor
xor
xchg
nop
mov
leave
movsl
stc
aaa
aam
pushf
roll
and
iret
mov
mov
adc
ds
data16
dec
push
test
cmp
xchg
fdivrl
push
lcall
sbb
pop
push
sbb
jmp
sub
hlt
adc
dec
sbb
add
iret
xchg
jg
and
xchg
mov
xchg
sbb
dec
in
jns
out
test
sbb
add
ret
inc
dec
test
imull
pop
xlat
push
aaa
jecxz
decb
cmpsb
inc
mov
arpl
adcl
mov
and
negb
aad
daa
clc
xchg
aad
sub
push
and
inc
cli
mov
jmp
imul
cltd
dec
aam
lods
push
sub
xlat
push
cmp
xchg
push
in
pusha
subl
push
mov
xchg
imull
pop
ss
shl
mov
mov
ret
and
out
or
add
std
addr16
sub
mov
pusha
push
fs
das
adc
cmp
aad
mov
ss
push
mov
dec
outsl
xor
inc
mov
mov
cmp
clc
rcll
inc
mov
pop
dec
cmp
mov
rorl
mov
in
add
push
push
iret
cmp
xor
lea
mov
ja
jmp
xchg
aad
cmpsl
push
xchg
xchg
and
or
sbbb
mov
dec
xchg
jns
ror
aaa
inc
add
dec
pop
and
aas
xchg
cmp
sarb
sbb
inc
scas
test
aam
push
xor
lret
lods
pop
fidivs
sbb
pop
stos
lea
shrb
idivl
cmp
lea
sub
push
mov
call
cwtl
into
push
xchg
sub
hlt
ret
call
lds
mov
insb
fisubrs
push
inc
pop
in
mov
sbb
and
bnd
sub
dec
and
cli
push
push
hlt
fwait
lods
cmp
cmp
or
mov
ret
subb
cld
push
pop
insl
pop
sbb
sub
xor
imul
cmp
lds
daa
enter
lcall
ja
mov
ss
sbb
adc
lahf
jae
mov
sbb
jno
shlb
xor
fldl
push
cs
sub
rcll
pop
aam
sub
pop
add
std
in
push
dec
push
lods
fsubr
dec
stos
int3
sub
pop
xchg
movsb
ds
push
xchg
scas
sbb
adc
inc
mov
cmpsb
adc
push
aad
cs
xor
rol
lea
lcall
push
sub
mov
sahf
out
out
aas
inc
testl
adc
inc
or
cmc
sub
mov
xor
popf
xor
push
out
mov
imul
jl
push
subl
data16
and
xchg
dec
cmp
pop
ret
jmp
fbld
lcall
in
xor
mov
mov
sbb
test
sbb
popa
mov
mov
ja
mov
inc
add
dec
in
xor
pushf
xchg
aaa
lret
push
popa
dec
les
daa
xor
inc
xchg
leave
pop
jecxz,pt
int3
test
sbb
sub
mov
sbb
mov
cmp
mov
jg
subb
dec
js
popa
pop
or
mov
flds
pop
mov
test
inc
insb
cmp
mov
xlat
adc
sub
loopne
sbb
sbb
adc
add
fmuls
out
ret
data16
aad
in
loop
bound
xchg
jmp
nopl
jge
push
mov
ljmp
or
xor
xchg
mov
lret
out
in
and
dec
adc
xchg
loope
fistps
out
dec
ds
mov
cmp
rolb
sbb
inc
mov
daa
popf
scas
out
js
jg
inc
mov
push
pop
outsl
add
push
mov
push
lea
lods
pop
push
in
andb
xchg
lret
pop
add
dec
int
fldcw
movsb
push
in
shlb
inc
push
xchg
es
mov
in
aad
lock
pop
or
sarl
mov
jle
clc
cmp
mul
out
cwtl
mov
shll
sbb
pushl
pop
mov
imul
cwtl
lds
fwait
mov
divl
xchg
mov
pop
adc
dec
scas
sbb
enter
cmp
pop
or
das
xor
xchg
jl
nop
dec
shlb
ss
nop
shlb
fistl
rorl
lods
inc
or
mov
xchg
dec
je
mov
or
inc
adc
push
rorb
in
push
nop
add
cli
data16
cs
or
xchg
sbbl
mov
mov
mov
mov
stc
fwait
mov
sbb
push
mov
cmp
mov
xorb
loop
mov
sbb
xlat
js,pt
push
loope
xchg
or
jo
mov
fs
aaa
push
data16
call
dec
test
insl
inc
cltd
daa
push
in
out
aam
dec
mov
mov
jne
push
and
daa
mulb
arpl
shlb
lods
in
arpl
xchg
pop
cli
mov
push
xor
mov
in
sbb
data16
dec
in
popf
mov
mov
in
inc
jl
cmpsb
sub
bnd
cmpsl
daa
ljmp
sbb
in
test
test
mov
les
clc
cltd
mov
ret
adc
addr16
mov
mov
push
negb
xor
mov
mov
or
jecxz
mov
std
jp
aaa
xchg
and
ficompl
adcb
push
outsl
adc
cmpsl
adc
mov
pop
mov
add
pop
adc
mov
ret
or
xor
inc
stos
or
sub
sub
dec
xor
sub
data16
std
jb
cwtl
inc
or
cli
dec
jmp
add
mov
and
cmp
mov
xchg
out
bound
sub
fst
push
pop
inc
dec
hlt
test
daa
ret
out
mov
movsb
test
inc
adc
clc
insb
lret
iret
mov
dec
jmp
out
rclb
cmp
mov
rcr
add
push
xor
int
aas
sub
divl
xlat
xchg
cmpl
pop
adc
cmpb
pop
fistl
int
ja
or
cld
test
repnz
aaa
data16
fs
jecxz
push
jae
fidivrl
pushf
repnz
push
add
push
pop
fsubs
movsl
clc
push
lahf
bound
mov
lods
mov
adc
push
lods
add
out
jl
add
fbld
dec
adc
mov
negb
popa
mov
popf
adc
ds
sbb
insb
fstp
fsub
sti
or
aas
mov
or
mov
pop
lcall
popf
inc
aad
bound
and
jge
repnz
add
lods
add
lea
and
dec
push
push
jb
adc
stc
sti
jecxz
or
sbb
pop
cmp
rcr
mov
cmpsl
or
sub
arpl
mov
sahf
and
aam
cmp
dec
xor
cmp
pop
cltd
xchg
movsl
jmp
xorb
repnz
cwtl
stc
popf
pop
stc
leave
rclb
mov
dec
inc
call
lcall
filds
out
add
mov
in
in
loopne
lds
roll
cmp
dec
cmp
push
andl
scas
xor
addr16
cmp
mov
in
mov
dec
pushl
mov
mov
mov
not
stos
or
mov
aas
cld
or
insb
shrl
jg
int
scas
pop
jae
or
mov
js
ss
xor
inc
push
leave
jmp
and
mov
adc
hlt
xchg
dec
gs
lahf
pop
loop
das
repz
xchg
cmp
je
lock
ret
out
mov
xor
jae
in
shll
mov
sub
adc
add
aam
adc
push
ja
jns
and
test
fwait
in
insb
mov
rol
mov
sarl
mov
jnp
add
arpl
ffree
jnp
repnz
iret
test
fs
es
adc
loope
jle
push
push
cmp
fildl
ret
scas
or
lock
ljmp
data16
insb
inc
sub
incb
aam
loope
and
mov
or
cmp
mov
bound
mov
fs
add
insb
pop
or
in
cmp
sbb
pusha
and
fucomip
add
outsl
jmp
sahf
push
out
cmp
mov
push
lods
mov
call
add
fbstp
mov
addr16
mov
mov
and
in
or
ret
or
lock
inc
xchg
imul
sub
sbb
fdivl
inc
sti
fildll
clc
push
or
sbb
mov
push
xchg
lahf
pop
pop
fisubs
sub
cltd
ret
mov
movb
sub
aad
xor
aam
cmpsl
sub
and
enter
scas
stos
mov
jl
sbb
lret
pop
sahf
adc
and
mov
dec
mov
jns
lock
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
jmp
cmpsb
or
imul
and
pop
bound
adcb
nop
push
push
roll
mov
push
ss
and
in
outsl
addr16
fwait
ja
pop
dec
mov
imul
xchg
in
outsl
mov
cld
inc
int3
push
imul
mov
sub
add
loope
dec
push
das
push
into
add
fld
pop
mov
fidivs
mov
xchg
sub
lahf
repz
ret
fisubs
and
stos
mov
lock
mov
das
fmul
add
rcr
sub
cwtl
mov
jae
push
addr16
push
xor
xchg
out
enter
mov
aam
xor
mov
cmpsl
pop
mov
js
dec
lahf
cmp
lods
lock
cmp
stos
outsl
or
aad
or
adc
ret
call
fistl
mov
sbb
shll
dec
cmpsl
or
xlat
lds
cmp
jl
mov
jl
xchg
jp
test
lods
dec
xchg
jp
rcr
shrl
out
icebp
icebp
sarb
rorl
es
iret
filds
mov
xchg
mov
test
and
xor
loope
pop
pop
jne
pop
inc
push
notl
dec
ja
cmpsb
xchg
outsb
mov
mov
dec
add
out
aam
or
shrl
cmp
xor
jge
add
hlt
pop
pop
lret
jbe
ss
into
push
push
lds
add
out
hlt
add
out
sub
test
mov
cmp
push
pusha
fwait
jo
stos
adc
shrl
add
cwtl
push
insb
cmpsb
repnz
and
adc
push
jecxz
sarb
pop
or
outsb
xchg
test
mov
fwait
out
lods
jae
jmp
hlt
sub
pop
jp
in
jae
cmpsb
out
cmpsb
adc
mov
push
sub
sbb
mov
into
push
scas
fdivrp
fadds
pop
addl
into
outsb
cmp
push
add
cmp
mov
or
into
ljmp
xlat
insb
lods
jno
jo
aam
aam
paddw
nop
xchg
adc
jne
fxch
xchg
adc
ds
or
push
and
popa
xlat
stos
xlat
sbb
fcmovb
push
sarl
je
add
lods
inc
hlt
call
lret
add
xorb
add
xlat
nop
data16
fs
int
fimuls
push
push
sarb
movsb
test
test
ljmp
and
shrl
lock
jmp
dec
cltd
in
inc
jo
pusha
dec
xchg
adc
arpl
aad
add
out
mov
pop
dec
gs
jge
sub
adc
outsl
dec
pop
pop
xor
jg
cmc
mov
out
clc
ss
nop
add
pop
out
dec
repz
mov
jno
repnz
lret
sahf
sbb
adc
icebp
mov
addb
ret
ror
popf
loope
add
jns
add
cmp
jp
mov
mov
sbb
dec
xchg
out
push
mov
jle
fldl
mov
inc
std
push
das
jmp
iret
jne
test
mov
jno
push
xor
adc
in
add
fidivrs
sbb
mov
push
mov
xlat
js
lret
pusha
inc
into
adc
adc
or
mov
sahf
lea
into
in
cs
mov
sub
sbb
push
lods
in
pop
shll
out
test
dec
pop
jl
push
mov
mov
jno
fsubrl
mov
xor
dec
loop
mov
jp
test
mov
xchg
adc
mov
jge
test
sub
mov
insb
aad
sbb
js
inc
loopne
xlat
push
stos
xchg
sbb
sbb
sub
loop
sti
bound
or
insb
out
sarl
sub
testl
mov
popa
ds
inc
addl
hlt
pusha
or
xor
mov
push
loop
insb
addl
mov
adc
inc
call
mov
sbb
mov
stos
sti
loop
mov
imul
mov
aad
pop
pusha
aam
sbb
insb
ret
cli
scas
pop
mov
and
sbb
pop
mov
or
inc
inc
sbb
imul
inc
and
lcall
xchg
ret
sub
mov
in
or
xchg
mov
sahf
clc
pop
sub
dec
negb
outsl
push
mov
push
mov
sarl
divl
sub
scas
lods
cmovge
lcall
div
push
cmc
mov
shlb
cmp
in
test
cmc
je
xchg
xchg
call
xchg
adc
xchg
xchg
enter
pop
or
cmpsb
je
ja
lock
jns
push
out
mov
adc
or
jo
jg
mov
push
mov
in
sbb
sbb
or
dec
pop
addr16
xorl
into
mov
mov
movsl
xor
ret
das
or
xchg
mov
les
sti
inc
daa
cld
data16
ficomps
loopne
mov
fimuls
fdivrl
insl
mov
inc
imul
aas
push
xchg
mov
pushf
inc
sbb
mov
loop
jle
ret
sbb
fsts
iret
pusha
pop
in
push
pop
jo
cmp
pop
addr16
pop
xchg
in
outsl
je
mov
cmp
jbe
scas
mov
xor
in
xchg
mov
pop
cmpsl
shll
push
mov
es
sbb
adc
dec
loopne
jno
out
dec
inc
sbb
callw
cmp
pop
mov
rcrb
out
in
pusha
jle
xchg
test
test
xor
jns
mov
or
cs
inc
leave
adc
sub
pop
adc
xor
mov
sarb
cmpsl
lods
pop
mov
inc
cmp
adc
fldt
popf
sahf
inc
loope
sahf
in
inc
inc
ss
sub
xor
mov
and
pop
cmpsl
sbb
push
sbb
jno
cmpsl
mov
int
cltd
nop
dec
out
pop
add
ljmp
neg
push
pop
adc
sub
mov
sub
fldcw
scas
pop
ljmp
sub
and
inc
icebp
orl
cltd
adc
add
outsl
push
sbb
dec
cmp
roll
mov
jnp
test
cli
jmp
xor
or
or
nop
push
lock
enter
mov
lahf
loop
fstpt
add
cmovl
jp
scas
test
jo
testl
dec
scas
les
loope
xchg
lods
test
int
fcoms
adc
push
in
daa
test
sbb
dec
lret
add
shl
fwait
aad
div
adc
into
jmp
pop
fisubrs
sbb
out
nop
out
inc
sbb
mov
or
mov
mov
fidivl
inc
xchg
pusha
jbe
fidivs
ret
movsl
adc
and
jl
lods
xlat
dec
repz
insl
scas
iret
pop
ret
mov
jge
hlt
subl
jno
inc
addl
fcmovnb
jmp
movsb
ljmp
or
cmp
push
fbstp
sahf
out
mov
lds
cmp
pop
cli
mov
fmuls
movsl
push
fdiv
mov
add
push
testb
cli
mov
add
imul
cmp
pop
cmpsl
lcall
movsl
fs
jmp
movsb
or
loop
out
or
dec
out
and
roll
xor
dec
out
dec
lcall
fadds
daa
test
sub
enter
popf
int3
add
cmpsl
imul
repz
xor
mov
in
imul
jns
pop
jp
mov
xor
xchg
rclb
loopne
sub
shrl
mov
mov
pop
cmp
fistpll
out
pop
insb
push
sbb
movsb
test
lahf
dec
test
push
or
mov
fisubrl
or
push
inc
mov
inc
and
mov
bound
gs
jns
movzwl
sub
push
les
aas
push
sub
xchg
lahf
outsl
mov
xor
sbb
and
adc
pop
test
push
das
cmp
or
shrb
add
enterw
scas
mov
inc
cmpsb
scas
bound
adc
inc
jnp
iret
mov
into
lahf
mov
add
or
sbb
jmp
xorb
rcrl
dec
fidivrs
or
xchg
es
into
sbb
mov
mov
out
rorb
sti
xor
pop
lods
repz
fs
push
dec
inc
mov
mov
pop
add
stos
aam
movsl
ja
xchg
ret
stc
inc
inc
clc
push
cmpb
xchg
sub
mov
mov
or
imul
fmul
jge
mov
mul
xor
ret
ljmp
fnstenv
add
mov
push
cmpsb
test
mov
mov
mov
lahf
inc
cmc
xor
cmp
or
movsb
mov
sysenter
repz
inc
nop
sti
std
sub
or
xchg
stos
inc
clc
dec
roll
pop
dec
in
scas
mov
xchg
sbb
adc
stos
popf
incb
cmpsl
data16
push
test
jno
push
or
rorb
mov
movswl
jecxz
test
pop
out
mov
sbb
int3
dec
cmp
xchg
out
rcll
mov
push
cmp
hlt
xchg
inc
lods
sbb
mov
lds
lcall
das
lcall
rolb
outsl
lahf
into
inc
add
aad
xchg
gs
xchg
adc
lcall
cltd
insb
xchg
xor
mov
mov
dec
loopne
xchg
adc
jge
jle
cmp
mov
ret
lcall
or
adc
mov
mov
scas
es
dec
sub
mov
testl
notb
in
pop
scas
inc
dec
shlb
push
jo
add
cs
and
insb
mov
sbb
and
sub
dec
arpl
fs
ss
cs
orb
ja
aad
dec
push
ficoms
push
sti
pushf
mov
scas
push
and
sub
popa
sahf
dec
cli
add
sbb
cs
int
aaa
in
sbb
mov
jmp
sub
jno
or
sbb
imull
sahf
scas
sbb
repnz
in
pop
stc
aam
or
fsts
gs
pop
jmp
mov
mov
or
xchg
loope
ret
lahf
jp
xor
jg
popa
aam
pop
and
mov
ret
loopne
sub
or
scas
mov
scas
adcl
call
test
xchg
pop
bound
inc
imul
aas
inc
and
pop
pop
and
adc
in
cs
pushf
adc
les
pop
and
xlat
cmp
push
or
jmp
jb
sti
xchg
daa
adc
or
inc
fwait
xor
dec
aas
jle
lock
repnz
subb
into
fcoml
rcr
insl
xchg
imul
sbb
inc
inc
dec
fdivrl
push
pushf
push
hlt
mov
xor
mov
push
fldcw
jne
mov
xchg
push
loopne
push
icebp
mov
out
nop
fs
mov
dec
pop
adc
mov
popa
jno
clc
sbb
fiaddl
dec
insl
jmp
stos
push
pop
mov
dec
movsl
push
xchg
or
push
jae
xor
daa
sub
or
lock
data16
js
mov
mov
icebp
add
sub
aas
pusha
les
pop
sbb
jle
test
push
jno
ret
adc
ds
jp
clc
sub
xchg
shrb
mov
idivb
pop
decl
idiv
add
inc
jb
push
lcall
cs
dec
add
fadd
and
push
aam
lds
cld
push
pop
cltd
scas
inc
push
jl
mov
xchg
sti
push
mov
and
or
jmp
out
cmpsb
out
out
add
xchg
add
mov
aaa
xchg
or
and
or
shl
jg
aas
or
loope
sarl
and
gs
ret
inc
jno
pop
push
add
xor
test
in
dec
imul
jo
popa
lcall
iret
and
and
xchg
jno
ja
dec
les
lock
mov
cltd
pop
lret
jbe
mov
sbb
jg
out
rol
ljmp
fsubs
or
lret
jns
add
xlat
fidivrs
cmp
jnp
scas
test
dec
std
in
sbb
jmp
push
add
cmpsl
sbb
ret
mov
popf
mov
or
and
and
adc
pop
enter
call
sbb
fnstenv
cmp
xchg
call
stos
jmp
lret
or
mov
mov
mov
movsb
out
nop
adc
aam
lcall
lcall
adc
into
pop
jle
or
mov
sbb
xchg
xor
push
fdivrs
inc
in
add
popf
jae
stos
outsl
sti
adc
insb
xchg
mov
cltd
cmpsl
mov
xchg
fistl
inc
mov
push
es
ja
mov
cmpl
push
test
mov
sub
in
sub
fiaddl
pop
ljmp
rcll
stos
stos
pop
aaa
pop
cmp
jl
das
scas
fdivs
mov
mov
stos
jne
lahf
mov
notl
xor
ja
cmp
xor
icebp
int
cmp
jge
shlb
ljmp
jae
shrl
pop
stos
xlat
pushf
jns
xchg
call
mov
mov
push
outsb
hlt
movsb
das
cmp
fildl
pop
out
imul
dec
stc
jo
inc
adc
inc
xor
dec
xlat
push
cld
cmp
or
rclb
and
loope
addr16
or
lods
cmp
lds
test
push
jecxz
dec
lret
pop
nop
ss
or
jns
dec
stos
jnp
pop
mov
int
xchg
aam
movsl
mov
xor
lock
mov
jno
add
popf
test
ss
je
ror
mov
inc
cld
xor
mov
mov
iret
jbe
lds
in
push
mov
cmp
push
xor
and
mov
push
adc
cwtl
push
mov
and
repz
fcompl
xorb
mov
jg
cmpb
in
mov
inc
sub
call
adc
sti
sbb
je
nop
push
xor
lret
jp
dec
fwait
dec
div
xor
xchg
lock
negb
mov
cmpb
ds
push
or
cmpsl
and
idivb
push
dec
jae
or
in
mov
cmc
xchg
in
out
out
xchg
int3
lods
or
int3
mov
sbb
or
dec
cmc
popf
jnp
xor
add
cmp
outsb
das
out
jno
cmp
mov
arpl
pop
jo
mov
sub
dec
mov
add
and
push
mov
imul
cmpsl
daa
nop
mov
push
cmc
frstor
or
ret
sti
mov
xor
callw
rolb
inc
and
jns
mov
push
inc
adc
jg
mov
xor
or
pusha
mov
or
sbb
pop
scas
pop
dec
dec
inc
and
loopne
rcrl
or
sbb
je
ja
mov
arpl
push
cmp
ljmp
cmp
xchg
ss
loope
movsl
dec
out
add
jo
xor
jmp
push
inc
mov
sbb
jl
jb
mov
popa
out
mov
push
gs
jle
xchg
loope
loopne
cmp
add
push
pop
xor
cmpsl
leave
xchg
or
mov
popa
les
mov
in
rcl
xchg
gs
push
fcmovnbe
xchg
mov
mov
rorl
dec
ret
int
outsb
dec
pop
or
jmp
sub
dec
cmp
cmp
pop
cmpsb
inc
data16
scas
sbb
test
jae
inc
add
sbb
add
aad
fs
imul
add
clc
pusha
dec
insb
notb
mov
repnz
xchg
iret
inc
push
dec
and
popf
xchg
adc
and
or
lods
or
pop
lock
fistps
cltd
dec
lcall
call
adc
fs
shl
or
inc
mov
imul
repz
xor
cmp
les
inc
inc
fstl
das
adc
push
test
sbb
push
lds
rcl
hlt
out
xor
enter
add
pop
push
aaa
jg
loope,pt
test
adc
jle
jecxz
cmp
in
mov
or
in
mov
test
pop
jle
cmp
push
mov
and
push
addr16
repnz
mov
or
or
cmp
or
roll
addr16
cmc
adcb
jg
adc
mov
loop
jo
jns
sub
xor
xchg
xchg
cmp
cld
dec
arpl
jmp
mov
pop
mov
jmp
dec
xchg
sti
inc
cmp
shr
jne
xor
xor
mov
fs
mov
mov
das
add
ljmp
mov
sub
mov
mov
cmp
sub
cmpsl
icebp
out
test
xchg
pusha
xchg
roll
push
cli
jo
mov
push
jbe
jnp
and
mov
xchg
addr16
sbb
shl
sbb
lods
and
add
sti
mov
jae
mov
or
cs
push
pop
and
icebp
push
add
add
movsl
call
or
aaa
aaa
call
adc
dec
addr16
pop
cltd
pop
into
xchg
jge
push
daa
lea
out
xchg
sbb
pop
push
in
rolb
repnz
xchg
pop
outsl
mov
into
push
cmp
arpl
cs
jl
xchg
jo
call
push
mov
xchg
mov
pop
cmp
xchg
insb
mov
into
xor
inc
push
in
xchg
negb
adc
add
jae
rorl
cmp
cltd
adc
adc
dec
mov
push
loope
scas
or
test
fildll
mov
sbb
ret
add
aad
outsl
adc
or
pop
inc
adc
push
add
sbbb
xor
ret
cmp
sahf
mov
ja
sub
nop
jle
push
outsb
jmp
clc
lret
lahf
lret
mov
inc
je
aam
inc
lea
jb
fsubs
dec
shll
enter
das
add
sub
ret
pop
in
mov
mov
clc
dec
xchg
xchg
cmpsb
inc
loope
xor
jns
bound
pop
das
pop
loop
inc
pop
int3
movsl
dec
test
sbb
in
push
add
and
pop
sub
mov
imul
test
cmpsb
cmp
hlt
sbb
pop
nop
mov
push
inc
jae
and
pushf
push
xchg
mov
xchg
or
xor
xchg
lock
xor
mov
imul
push
lods
aad
adc
sub
and
outsl
jne
lock
push
xor
mov
mov
mov
dec
jge
inc
push
rclb
xchg
or
daa
nop
mov
mov
xor
lret
into
call
dec
pop
popa
shlb
pop
icebp
lods
or
imul
and
or
negb
leave
sbb
clc
pop
lcall
repnz
lock
push
mov
bound
aaa
adc
scas
scas
sar
or
lods
je
popf
xchg
lock
push
xor
repnz
sbb
pop
stos
or
inc
jecxz
pop
jbe
in
sbb
mull
popf
stos
dec
setnp
cmpsl
push
jb
or
cmpsb
roll
loope
iret
or
fidivrs
in
ja
stos
adc
mov
lret
cmpsl
xchg
cmpsb
int3
call
mov
mov
ja
inc
popa
pop
int3
inc
enter
push
xchg
insl
add
cmpsl
cmp
push
pop
stos
jg
add
es
negb
shll
adc
clc
dec
jae
jb
lret
in
rcl
js
sbb
pop
scas
lcall
enter
mov
push
sub
push
les
in
repnz
dec
mov
mov
cmp
or
mov
aam
gs
mov
adc
pop
lods
inc
add
pop
push
jb
mov
cmp
xchg
mov
inc
push
mov
push
cmc
cmc
push
cmp
ret
jmp
ficomps
pop
sbb
scas
mov
fildl
ja
leave
dec
js
and
jne
jb
in
pusha
sbb
and
loope
xchg
push
and
ret
add
adc
xor
out
add
int3
pop
mov
mov
dec
fstpt
and
out
popf
lods
push
push
outsb
jnp
add
rorl
jns
xchg
loopne
dec
adc
rorb
pop
icebp
idivb
and
add
jecxz
mov
out
lea
clc
gs
jmp
outsl
repz
adc
lds
dec
les
push
cli
cmpsb
jl
hlt
jae
pop
and
popf
shlb
fildll
mov
lret
orl
jg
popf
xchg
movsl
jo
jo
mov
into
aam
inc
jo
jb
cmp
mov
and
push
lcall
dec
in
aaa
add
mov
scas
and
insb
cmp
lea
push
xlat
bound
mov
daa
subb
jnp
mov
mov
dec
bound
mov
xor
jmp
stc
testb
jae
jecxz
cmp
or
mov
lock
inc
test
mov
icebp
cmpsl
out
out
pop
pop
jns
mov
addl
repz
add
bound
loopne
cmp
push
or
push
repnz
push
inc
les
push
push
cmp
out
outsl
cmpsl
outsb
sub
test
imul
insb
or
dec
jbe
popa
sarb
push
movsl
int
repnz
and
inc
outsb
mov
outsb
test
rorb
fildl
stos
cli
ljmp
jbe
or
xor
dec
loopne
incb
int
lock
fistps
jl
ds
imull
adc
popf
clc
mov
sbb
das
out
imul
pop
sbb
pop
test
sbb
arpl
das
aam
sti
jl
testl
and
lret
out
outsl
xlat
cltd
push
scas
ds
mov
fcmovne
mov
jae
sbb
lods
add
outsb
push
jmp
cmpsl
in
nop
and
aad
lods
mov
test
bound
out
or
mov
mov
push
push
mov
stos
mov
jo
jno
or
das
push
xor
and
fadds
ljmp
bound
filds
int
xor
mul
mov
xchg
daa
daa
pop
call
subl
das
call
cli
fisttpl
es
in
outsb
call
pop
cmp
dec
mov
mov
sub
mov
cmp
ret
sti
les
mov
sarl
adc
jb
mov
repz
clc
adc
fs
xchg
stc
out
pusha
and
adc
mov
sub
rcrb
lcall
and
fidivs
sub
out
push
lock
int3
mov
or
ljmp
adc
cmp
aas
cmp
imul
imul
scas
jg
bound
xor
jge
out
lock
jge
stos
test
mov
scas
aad
jge
xor
addb
push
test
cs
cmp
add
or
xchg
dec
push
mov
fwait
adc
pop
sub
mov
push
xchg
sti
loope
ret
cmp
or
aaa
inc
popa
ljmp
and
and
cmp
in
dec
adc
lock
jp
and
addr16
mov
mov
leave
add
into
lret
rolb
shlb
iret
in
popl
orl
jb
in
test
inc
or
add
cli
into
mov
push
in
bound
bound
sub
in
mov
inc
cmc
inc
les
rcrb
push
out
fstpt
pop
test
dec
add
sub
xor
fidivs
lods
add
jo
push
xchg
xorl
fucomip
push
das
mov
scas
pop
test
adc
aas
outsb
fisubrl
xchg
rclb
ds
cmp
into
inc
sbb
xlat
in
mov
push
mov
jae
das
inc
loop
push
push
lahf
sub
daa
push
add
in
sub
mov
and
repnz
in
idivl
fistpll
cmp
inc
mov
cmp
push
fimuls
int3
cmpsl
cs
inc
mov
das
jg
sub
or
mov
aad
shl
into
dec
jg
sbb
leave
dec
pop
mov
jle
aas
repnz
je
push
jne
arpl
stos
scas
pop
xchg
fidivrs
fcom
movsl
and
int3
rolb
roll
nop
cs
lcall
scas
push
dec
xchg
push
cmp
dec
cwtl
lret
or
sub
pop
addb
and
repnz
shll
sbb
push
stc
aad
sub
lcall
ss
mov
ret
push
ret
mov
in
testb
fucom
fcomip
dec
aas
mov
dec
imul
lds
xchg
imul
scas
xchg
fs
push
adcl
add
shl
gs
jo
dec
daa
or
push
out
call
cmpl
xchg
mov
fistl
shlb
sub
cmp
add
mov
das
rcrl
pop
std
inc
dec
std
pop
scas
push
out
std
or
mov
and
cmpsl
xor
xchg
mov
filds
loopne
stc
or
mov
xchg
orl
dec
sarb
out
mov
daa
aad
enter
dec
int
loop
or
xor
aam
pusha
adc
notl
filds
popf
call
lahf
sti
and
pop
in
add
ds
enter
mov
repz
mov
sbb
xlat
sbb
dec
dec
pop
clc
lods
jo
fwait
inc
jb
dec
daa
push
sub
rclb
fcmovnu
mov
xchg
sub
shll
je
xchg
mov
mov
jns
xor
push
push
lret
lock
add
cmpsl
cltd
mov
and
mov
shrb
ss
jns
mov
stc
into
cmc
or
iret
sti
rcrb
fistl
push
xor
shrl
pop
ret
popa
jp
lock
scas
cltd
out
insl
jmp
cmpb
mov
push
add
nop
push
popf
das
sub
lret
repnz
lea
pop
daa
mov
ss
jns
repnz
xchg
arpl
mov
int
xor
mov
sbb
adc
adc
pop
adc
testb
jb
jl
in
jg
jo
je
inc
xchg
js
xchg
and
adc
lods
shr
sub
aaa
push
inc
or
mov
in
int
test
fsubrp
sub
push
dec
mov
sub
push
cmp
sub
aaa
stos
rolb
xchg
ret
sbb
or
leave
lret
loope
daa
es
add
cli
aaa
jge
xchg
lock
outsb
jle
and
into
mov
sub
sbb
xchg
aam
jne
jp
or
mov
pusha
lcall
add
xchg
es
notb
xchg
imul
fisubrl
stc
adc
inc
cs
pop
jp
loopne
sti
pop
inc
out
add
or
inc
hlt
test
dec
push
or
xor
mov
stos
iret
shll
arpl
lock
sbb
into
jl
sub
arpl
dec
adc
loope
rcrl
int
aaa
lcall
push
test
sahf
sub
sti
sbb
lea
jne
sbb
inc
lret
loope
lret
jbe
mull
testl
test
ret
pushl
ret
test
dec
jb,pn
or
lods
std
das
dec
fwait
cmovb
jmp
cmp
es
rclb
imul
popa
fimull
push
and
decb
mov
lea
or
into
outsb
imul
movsl
jo
pusha
pusha
test
or
cli
pop
icebp
arpl
sarl
lret
divl
add
das
sahf
ret
inc
call
xchg
ja
jbe
mov
popa
jmp
je
push
pop
repnz
cli
push
adc
out
push
mov
push
push
dec
push
push
outsl
jno
sbb
mov
test
out
add
std
test
jg
in
fndisi(8087
lods
adc
std
iret
stc
popa
inc
push
movsb
push
stos
xchg
mov
mov
push
fistpl
xor
or
xchg
repnz
push
lock
int3
xor
roll
jge
adc
mov
shll
movsb
sarl
dec
jno
mov
lds
jb
outsb
mov
out
sbb
cmp
pop
cmp
dec
inc
xchg
cs
pop
out
mov
lds
inc
sbbb
mov
data16
mov
ror
je
pushf
testl
jb
mov
and
scas
in
inc
aam
pop
call
push
cld
xchg
jge
aaa
xlat
inc
push
out
popa
loopne
xorb
scas
loope
call
sub
mov
pop
sub
push
push
lds
pushf
in
sahf
xchg
pop
sub
and
mov
pop
lret
inc
lret
mov
push
and
ljmp
mov
or
cmpsb
outsb
out
adc
cli
xchg
xlat
adc
adc
shl
and
push
out
inc
mov
mov
lret
cmc
call
pop
mov
aam
inc
jp
mov
jbe
sarl
jmp
pop
xchg
movl
dec
mov
add
and
mov
xchg
jns
xchg
xor
iret
ret
aam
dec
pop
push
cld
call
cmp
rorb
xlat
daa
lods
pop
and
test
ret
jo
out
jge
mov
pusha
mov
testb
je
lods
lcall
int
out
adc
icebp
mov
mov
dec
pop
pop
dec
or
cli
push
mov
xor
cld
jmp
fcmovbe
xor
inc
das
popf
and
pushf
roll
jle
push
movsb
and
cmp
mov
inc
jle
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
jmp
and
scas
jecxz
arpl
jns
cmp
mov
movsl
inc
pop
shll
or
push
lret
fsts
jnp
add
inc
out
icebp
pop
or
imul
in
pop
fisubrl
insb
adc
mov
mov
cli
mov
outsb
fs
mov
or
sbb
sbb
mov
sarb
sub
xchg
push
push
push
call
mov
call
xchg
sub
dec
js
gs
dec
and
sbb
mov
sbb
mov
test
cmp
sub
sub
jp
das
imul
mov
lea
xchg
lods
sbb
fstps
orb
in
das
mov
xlat
mov
std
jmp
test
cmp
daa
xchg
pop
sub
mov
inc
sbb
push
in
lock
push
pop
hlt
dec
jp
push
jo
pusha
int3
pop
sub
lds
mov
lock
rolb
push
or
dec
dec
sbb
dec
setl
lea
notl
pop
or
inc
or
sbb
jae
add
in
add
mov
xchg
xchg
jl
imul
stos
jp
push
sub
rcrl
and
jnp
in
ljmp
dec
test
add
rorb
or
mov
jnp
pop
dec
inc
push
repz
out
pop
jmp
rclb
cli
xchg
ret
mov
jb
cmc
push
jae
and
std
sub
cmpsl
sub
mov
cld
mov
mov
icebp
adc
and
pop
jmp
sbb
xchg
adc
repnz
jae
mov
push
and
push
cmp
pushf
pop
and
popf
incl
push
fstpl
xchg
push
xchg
fiaddl
loope
push
rol
int
stc
or
int3
data16
inc
fwait
and
jns
add
sbb
sbb
dec
sbb
arpl
cmpb
imul
jecxz
orb
insl
sar
pop
add
lahf
pop
pushf
xchg
or
xor
jne
lcall
les
xchg
xchg
dec
cs
pop
inc
bound
dec
fcoms
mov
mov
or
xchg
push
push
and
or
pushf
out
pushf
push
sahf
dec
ret
out
inc
dec
popf
sbb
sub
jne
sub
sbb
in
movsl
or
mov
in
adc
out
loopne
and
push
mov
mov
pop
inc
iret
sub
and
stc
aaa
jmp
cli
outsb
imul
adc
mov
jecxz
and
sub
dec
add
jmp
outsl
dec
fcom
adc
aas
test
scas
shrb
push
mov
out
lret
dec
dec
mov
gs
jb
cld
mov
mov
or
lret
mov
jbe
inc
mov
jb
mov
ss
lock
xchg
shll
sub
andb
mov
push
mov
dec
pushf
mov
mov
je
je
es
iret
xorb
arpl
sbb
jne
mov
imull
sub
xlat
or
or
nop
js
test
je
mov
sbb
repnz
addb
je
lods
in
push
cmpsb
js
sub
lahf
arpl
call
das
rcll
popf
or
shll
or
sti
mov
inc
movsb
enter
in
add
cmp
mov
lock
call
jmp
mov
xchg
push
jo
mov
jp
jg
cwtl
sbb
mov
in
testb
leave
mov
aas
lahf
sbb
pop
xchg
inc
js
js
pop
mov
mov
mov
ret
loope
inc
push
push
jne
inc
push
jmp
imul
adc
jge
dec
sub
sahf
dec
stos
dec
mov
xor
addr16
add
lods
mov
mov
scas
ss
and
mov
pop
dec
pop
pop
jmp
shlb
pop
push
and
pop
cmp
not
sub
dec
xchg
pop
lret
cmp
mov
and
sbb
xor
mov
cwtl
in
sbb
add
push
and
sbb
adc
xchg
add
mov
scas
jg
mov
xchg
int3
ret
push
or
inc
les
fsubs
imul
add
or
in
and
fdiv
inc
and
dec
sub
sarl
xchg
jnp
adc
lea
mov
addr16
mov
popf
nop
insb
and
int
out
jg
ljmp
add
sbb
into
push
fiaddl
cltd
jg
mov
aaa
xchg
loopne
cmpsb
repnz
loopne
and
mov
pushf
mov
pop
or
and
or
cwtl
inc
pop
ds
ret
mov
jb
cmc
cmc
add
stc
xchg
pop
mov
or
ss
sub
rcll
add
loope
notb
xchg
sbb
sti
xor
shll
insl
dec
dec
fwait
mov
mov
pop
adc
or
jecxz
test
lcall
adc
cmpsl
jmp
sub
lcall
mov
fdivl
add
push
loop
and
pop
jge
adcl
pop
out
and
ror
xchg
pushf
jns
cmc
or
jl
call
aam
dec
stos
mov
cmp
imul
lret
fcompl
fcmovnb
loope
inc
bound
pop
sub
loop
xchg
jbe
or
sub
ds
imul
add
dec
movsl
fnstenv
test
gs
shrl
or
push
mov
fwait
test
pop
jp
fidivrs
sbbl
sahf
imul
push
add
or
adc
xor
inc
ret
out
in
popf
rolb
std
stos
in
inc
sbb
xchg
loope
test
lds
lods
mov
or
sbb
aam
pop
daa
jae
xor
push
inc
mov
jae
inc
sub
shll
mov
and
pop
sbb
sbb
pop
mov
xchg
sub
aad
sahf
or
hlt
jle
sahf
add
popf
sub
and
in
inc
dec
cmpsl
lret
inc
iret
pushf
cmpsl
cmp
mov
push
dec
mov
dec
pop
sbb
cmp
dec
out
sbb
rorl
rclb
adc
repz
movsb
push
sarl
ds
pop
xlat
cmc
mov
xor
shr
pop
jne
in
ja
out
movsb
lea
mov
out
aad
cli
jge
mov
ret
lahf
int
mov
dec
adc
aad
test
ja
jb
xor
lds
dec
test
xor
in
xchg
push
fistpll
jmp
cmp
cmc
jnp
lds
push
jmp
cmp
mov
ret
mov
rcrb
push
push
shr
jp
out
add
loopne
stos
mov
inc
pop
call
add
dec
not
icebp
push
cmpsl
and
bnd
xchg
push
or
push
or
pop
mov
mov
jp
lea
inc
cmp
inc
fwait
lods
jb
test
imul
shr
repnz
mov
sub
mov
push
daa
cld
mov
xchg
push
enter
sub
push
push
js
andb
jbe
filds
leave
push
pop
daa
roll
jno
icebp
sahf
add
xor
adc
xchg
in
clc
rolb
stos
mov
sahf
fimuls
pop
outsl
pop
mov
add
outsl
add
or
fbld
push
jne
mov
dec
adc
jg
inc
daa
cs
add
sub
dec
xor
jle
gs
mov
mov
jnp
addr16
pop
jno
aam
je
jo
icebp
inc
scas
pop
fistps
xor
and
test
les
dec
out
movsb
mov
pop
int
andb
movsb
fwait
insb
repnz
inc
sbb
sub
rorl
sub
xor
dec
cmp
ret
icebp
subl
pop
cwtl
adc
mov
in
sarl
fistl
icebp
dec
sub
dec
hlt
cld
mov
mov
rorb
insl
xor
xor
in
imulb
mov
cmpsl
mov
bound
xchg
cwtl
and
sahf
ljmp
popa
inc
or
fmul
idivl
mov
adc
out
sub
js
ds
mov
mov
int
cmpsb
adc
addr16
lods
pop
fdiv
mov
rorl
pop
rolb
shrl
filds
mov
sarb
pop
stos
mov
jno
lret
cld
mov
lods
fs
adc
sub
add
mov
mov
notl
fnsave
jge
mov
jecxz
mov
fcmovnu
xor
fcomp
shrb
inc
std
fcomps
fidivl
mov
daa
push
pushf
sbb
test
mov
popa
inc
mov
mov
mov
ret
fwait
push
dec
mov
rorl
mov
add
dec
adc
fldenv
imul
jnp
or
and
inc
sub
pop
js
inc
mov
xchg
xor
xorl
pop
cwtl
out
cmp
in
inc
push
jp
jb
dec
or
pushf
cltd
cmp
jae
mov
not
test
inc
shr
imul
in
push
pop
mov
sbbb
xlat
mov
outsl
sbb
mov
lds
jb
mov
cmp
inc
test
scas
add
pop
lcall
and
ds
stos
pop
bound
pop
push
rorl
and
cmp
xor
push
lret
ja
leave
cli
mov
xchg
pushf
mov
adc
sbb
mov
push
mov
mov
jbe
test
lret
mov
jmp
inc
loop
and
cmp
cmp
lods
push
stc
repz
addl
mov
cmp
clc
jbe
repz
into
or
gs
into
popf
out
mov
jcxz
add
jns
aad
push
pop
mov
movsb
jge
adc
mov
shll
out
mov
lret
push
sbb
mov
jmp
into
test
pushl
retw
mov
aam
aaa
xchg
pop
movd
mov
jb
fwait
pop
aaa
inc
repz
pusha
xchg
sbb
in
jmp
js
and
dec
jle
jb
push
push
jmp
mov
int
mov
dec
cs
sub
mov
mov
cmp
mov
add
movsb
aam
dec
iret
or
cmpsl
and
ja
fdiv
cmp
shlb
stos
cmpsl
cmp
lods
pop
sbb
into
mov
or
nop
movsl
push
xchg
ret
pop
pop
pop
mov
stc
inc
das
ret
fcomp
iret
cli
hlt
add
je
jbe
flds
or
popf
mov
movsb
xchg
mov
test
cwtl
movsb
popa
iret
adc
in
mov
mov
lea
es
xor
fnstsw
dec
sti
outsl
hlt
sbb
push
insl
in
mov
cmp
xor
aad
mov
jp
enter
call
loopne
loope
mov
jb
sub
mov
xchg
pop
shl
sbb
lods
ret
jo
dec
pop
adc
xlat
xor
daa
arpl
dec
dec
push
nop
mov
popa
or
push
imul
pop
xchg
mov
shlb
push
or
mov
rcl
sbb
push
jns
xor
push
cmp
pop
inc
pop
cmc
insl
push
push
cmp
loop
cli
shll
xor
push
cmpsb
dec
xor
push
cmp
sub
sbb
shrl
loopne
pop
jne
jg
lock
hlt
ds
lahf
pop
and
loope
cs
je
lcall
mov
adcb
xor
xchg
mov
aaa
sub
test
mov
out
cmp
jecxz
in
xlat
xor
scas
pop
pop
out
mov
adc
dec
jge
xchg
mov
lods
ret
js
fwait
outsl
in
iret
mov
jl
fdivrs
shl
cmpl
add
or
pop
cmp
add
in
cmp
ret
jge
xor
inc
jne
sarl
dec
pop
sbb
movsb
dec
adc
dec
ret
ds
insb
cmpsb
scas
mov
sub
adc
adc
push
ret
pop
ja
or
mov
jp
das
mov
or
sub
jnp
fxch
popf
fisttpll
mov
add
icebp
inc
fdivrs
imul
mov
fwait
push
les
cmp
shrl
scas
and
fistpll
bound
hlt
jo
xchg
daa
and
sbbb
andl
es
cltd
pslld
int
ljmp
push
mov
mov
mov
fsubs
xchg
in
das
loope
loopne
dec
adc
mov
rcrb
xchg
dec
lret
adc
movsl
mov
aad
shlb
jl
shl
mov
popl
daa
fxch
movsl
leave
and
pusha
mov
mov
mov
cmpb
int3
xchg
push
jmp
push
lods
dec
shlb
mov
and
jl
push
or
xor
xor
cs
xor
xbegin
imulb
dec
ds
out
jnp
mov
add
int3
aaa
mov
and
fmul
addr16
cli
stos
je
out
clc
out
mov
lret
push
push
pop
std
aam
sbb
aas
imulb
hlt
scas
mov
pop
mov
push
shrb
pop
xor
mov
mov
mov
movsl
out
clc
jno
pusha
dec
insb
frstor
cmp
and
lahf
jb
xchg
or
mov
pop
add
inc
hlt
xchg
mov
iret
jae
imul
fdivrl
pop
jno
dec
adc
out
test
jns
jb
test
sarb
sbb
into
sub
dec
xor
mov
lea
mov
dec
mov
xor
jns
jnp
adc
fildl
gs
ss
cmc
xchg
into
movsl
cmp
and
fisubrs
inc
lock
lcall
pushw
dec
cs
push
xchg
xchg
xchg
pop
mov
vcvtpd2dqy
or
xlat
pinsrw
mov
or
adc
lcall
shlb
xor
frstors
mov
subl
push
in
lcall
mov
daa
pop
sub
xor
jp
mov
or
imul
jo
pop
jecxz
daa
jge
jo
ficompl
stos
insb
push
insl
andl
or
pushf
mov
xor
in
mov
push
ja
inc
arpl
jmp
push
sar
sub
jl
cli
sub
ss
enter
jbe
push
lds
jg
adc
sub
dec
add
movsb
fidivrs
cwtl
xor
jnp
adc
int3
push
addl
or
adc
je
leave
jb
pusha
jae
jp
pop
fistl
rorl
loop
xor
loop
or
mov
inc
xor
xor
or
dec
and
mov
es
jnp
pushf
or
subl
hlt
rolb
or
adc
fwait
scas
imul
mov
sbb
out
dec
mov
dec
pop
mov
rorb
sub
dec
movsb
cli
bound
test
mov
and
dec
out
aaa
jae
insl
add
pushf
into
shl
fcmovnu
fiadds
outsb
stos
fcmovb
je
mov
pop
daa
fldpi
pushf
fisttps
jns
xor
je
push
test
cs
sub
jmp
mov
cmp
add
scas
push
xlat
or
loope
js
inc
bound
mov
sbb
dec
sbb
jae
xchg
xchg
imulb
leave
or
gs
cmp
or
inc
rorb
adc
ret
jae
dec
mov
and
ret
pop
or
or
clc
adc
xchg
dec
fs
ja
mov
pop
lret
mov
adc
out
fsubl
stc
sub
ret
add
lock
cmpsb
js
movsb
sbb
ret
mov
cld
or
call
dec
cmp
mov
cmpl
sbb
fisubl
or
fimull
out
mov
aaa
sub
mov
loope
int
loopne
cld
push
jns
sysexit
jle
pop
sub
mulb
sbb
mov
adc
mov
loop
insb
pop
hlt
stc
push
push
or
out
jbe
fprem
fadd
mov
sub
pop
mov
cwtl
sub
test
ss
mov
xchg
cmp
mov
sahf
xchg
add
cmovl
xor
fstpt
pop
outsb
das
dec
inc
pop
clc
arpl
setg
negl
push
lahf
arpl
addr16
sub
xchg
je
or
aam
xor
cmp
dec
loope
repz
mov
mov
mov
sbb
hlt
sahf
or
popf
dec
in
xchg
pop
popa
mov
scas
in
fmuls
add
sbb
or
lods
pop
stos
xor
dec
xchg
mov
call
jno
cmp
out
call
pusha
jp
fs
xchg
outsl
push
dec
sbb
fildl
out
sub
add
push
xchg
inc
inc
inc
icebp
test
insl
insb
test
dec
enter
insb
push
pop
mov
ljmp
jmp
lds
cmp
cmp
add
nop
lret
into
jbe
mov
mov
test
push
imul
xchg
in
rorb
cmp
movsl
or
jne
ds
repnz
mov
adc
insb
test
movl
xor
in
jg
pop
ljmp
mov
sbb
mov
adc
push
addr16
mov
fiadds
lock
std
ljmp
pop
idivl
hlt
or
subl
add
ja
repz
setbe
inc
xlat
pop
push
out
cmp
movsb
jno
sti
xchg
inc
sub
and
repz
sbb
adc
jmp
mov
and
das
jg
adc
cmp
and
bound
xchg
movsb
sub
sub
loopne
mov
dec
push
hlt
xchg
and
popf
ffree
rclb
adc
mov
cmp
add
aam
xchg
je
mov
cltd
test
cli
andl
mov
popl
pusha
push
mov
shll
cld
pop
pushl
and
or
mov
push
jnp
dec
xchg
pushf
jp
fistpl
imul
pop
out
mov
stc
mov
dec
imul
jo
scas
push
sti
in
insl
cmp
stos
fdivrs
insb
pop
dec
insl
loop
push
testl
sub
mov
push
mov
sub
je
dec
enter
sbb
out
rcrb
push
decl
mov
adc
enter
jge
cmp
adc
sbb
xchg
mov
sub
lds
loop
mov
call
into
jno
cmp
iret
and
cwtl
xor
sti
push
pop
nop
data16
push
movsl
cld
bound
or
push
ret
mov
ret
sbb
cmpl
mov
lds
addr16
clc
aas
jp
push
adc
inc
add
push
gs
dec
ret
pop
test
xlat
dec
cmp
inc
jle
push
add
dec
jo
push
loop
push
mov
dec
xchg
bnd
ret
call
ss
mov
xchg
mov
frstor
outsb
repz
mov
std
mov
jnp
in
shl
push
loop
jp
sbb
adc
mov
outsb
sub
mov
lock
mov
ja
adc
leave
lret
mov
in
add
mov
sbb
xlat
testl
pop
cwtl
cltd
xchg
fndisi(8087
add
jge
xchg
js
in
mov
inc
mov
lret
loop
add
inc
les
jp
fsubrp
cmp
shlb
adc
inc
imul
add
inc
mov
rclb
ljmp
xlat
push
xchg
lds
out
scas
mov
mov
out
pop
pop
sub
push
scas
inc
js
sti
xor
shrl
mov
push
cmp
mov
ja
or
add
mov
xor
xor
dec
adc
pop
scas
inc
nop
cmc
pop
shll
sub
lahf
insl
and
xchg
mov
sub
sbb
push
leave
fwait
inc
cmpsl
dec
sub
push
mov
fmull
xor
sbb
lcall
xor
enter
jp
sub
sbb
test
add
mov
pusha
lret
sbb
xchg
mov
adc
std
adc
repnz
jne
mov
push
out
xorl
leave
scas
int3
scas
jnp
fsubs
push
add
or
fldenv
dec
mov
iret
mov
fs
arpl
and
jbe
xchg
jmp
loop
xchg
inc
cld
lods
push
sbb
cld
jno
clc
xchg
shl
mov
orb
pusha
fs
pop
push
popa
jno
xor
mov
push
dec
imul
and
push
dec
pop
int
pop
sahf
in
push
jnp
jns
punpckldq
add
inc
sub
mov
ret
loope
arpl
add
fcoms
mov
shll
lods
dec
pusha
ja
xchg
fsubs
sbb
pop
mov
cltd
mov
sbb
jge
in
mov
mov
inc
pop
add
xor
mov
js
shl
jecxz
jmp
cmpsl
sbb
jge
inc
ljmp
fcmovne
xor
cmpsl
xor
pop
imul
mov
daa
cmp
stos
insb
arpl
mov
cmp
jle
fisubrs
in
dec
inc
nop
sbb
fsubl
sub
push
outsb
fs
out
rcl
mov
loopne
pop
mov
outsl
out
push
je
stos
cli
daa
lock
fcoml
test
xchg
pop
shlb
inc
inc
enter
lods
mov
out
mov
adc
cwtl
fistpl
jbe
js
or
sbb
aam
xchg
adc
sbb
daa
int3
out
dec
mov
fbstp
mov
mov
mov
in
rol
pop
dec
out
sub
sub
addr16
jmp
and
adc
sbb
cmpsl
mov
jno
lcall
shrl
ljmp
fildll
adc
mov
dec
xchg
popf
aam
popf
mov
mov
dec
popl
aam
mov
mov
push
pop
iret
ret
xor
stc
popf
pop
lret
inc
test
cmp
pop
rorl
in
lea
pop
xchg
jno
aad
xchg
ja
popf
jb
jno
lods
push
xchg
pop
imul
sub
mov
cld
leave
pusha
rorl
mov
mov
daa
sbb
lahf
test
aas
and
mov
loop
mov
pop
sub
lret
mov
fmul
mov
adc
stc
scas
mov
xchg
xor
pop
rorl
icebp
cmp
xlat
push
ja
push
aam
nop
mov
in
sbb
mov
mov
sbb
lea
pop
push
clc
js
xor
and
or
andl
jns
xchg
mov
fimull
dec
stc
or
fdivr
arpl
imul
mov
dec
jno
out
ret
xchg
or
mov
mov
nop
adc
xchg
dec
arpl
sahf
xchg
dec
mov
xchg
xchg
jns
jp
pop
fcmovbe
xchg
sub
cli
jecxz
clc
mov
out
loope
sti
mov
fisttpll
pop
movsl
inc
cli
mov
jle
fimull
mov
js
fmuls
daa
out
mov
pop
dec
mov
popa
sbb
fs
xchg
addr16
out
pop
push
shrb
dec
in
fnstcw
push
outsb
dec
addr16
testl
negb
mov
pushl
pushf
xchg
add
mov
cli
test
je
orl
stos
lret
inc
or
or
das
bound
or
cmp
cmpsb
ret
add
and
sbb
push
sub
inc
cmp
por
pop
lcall
aaa
mov
sub
sbb
test
mov
insl
jns
sti
xor
fnstcw
jmp
popf
push
mov
jnp
fcmovne
mov
sti
adc
or
aas
mov
mov
mov
jl
jl
jnp
xchg
lret
aas
jg
fidivrs
inc
pop
pop
sti
mov
and
lods
movsb
xor
inc
adc
sub
out
repnz
jae
cwtl
pushf
inc
inc
push
es
scas
fwait
push
les
movswl
repz
fadds
cmp
addr16
push
in
fpatan
add
out
insb
add
popf
sahf
jbe
fidivl
gs
jnp
pop
add
xchg
push
cmp
adc
sarb
sub
sbb
dec
outsb
jmp
push
je
xor
jnp
bound
std
lods
push
shlb
insl
ja
andl
imul
stos
dec
dec
fildl
push
fstp
scas
xor
dec
enter
cmpsb
aad
leave
xor
jecxz
xor
inc
pop
adc
push
nop
scas
cmpsl
sub
or
jne
fisttps
mov
push
xor
sub
fiaddl
mov
add
inc
jle
sub
faddl
or
std
fnstsw
push
inc
inc
jle
add
lock
fdivl
mov
jmp
mov
and
mov
or
cmp
xchg
adc
inc
push
sub
cld
push
mov
cld
or
jb
pushf
jns
cmp
jle
mov
cmp
ret
ret
add
lcall
add
mov
out
push
repz
push
adc
jmp
adc
mov
jecxz
into
add
ret
mov
scas
lds
lret
pop
push
jno
push
xchg
in
add
xchg
lret
sub
push
rcll
adc
xchg
xor
cwtl
aad
push
ds
or
lret
in
cld
sahf
outsb
cli
jae
shll
fwait
cmp
cmpsl
cltd
rolb
sti
jo
cwtl
push
xor
sbb
fcomip
xor
mov
jge
les
lcall
outsl
inc
xchg
cld
jmp
fbstp
shlb
iret
mov
int3
shlb
fstpl
sub
jo
cmc
fs
icebp
push
cmp
cs
ror
add
and
stos
sub
add
cltd
orl
arpl
cli
sub
pop
push
popf
mov
sbbb
xchg
xchg
sub
adc
cs
pop
mov
fsubp
inc
inc
ds
sbb
loop
clc
fidivrl
movsl
mov
inc
dec
sub
stc
add
insl
dec
fisttpll
push
rcr
or
push
mov
xor
inc
rorl
ja
shll
loopne
das
out
dec
scas
fisubs
pop
xor
decb
lock
and
popf
repz
push
loopne
xchg
fimuls
mov
fidivl
mov
lock
or
inc
ja
cld
test
pusha
pop
iret
xchg
xor
or
cmp
loop
mulb
jmp
add
mov
jne
sti
or
adc
loopne
test
dec
sub
cmp
aad
iret
add
add
add
jns
xchg
out
push
loope
filds
test
out
ljmp
jne
xor
repnz
cmp
push
repnz
mov
xor
push
xor
or
rolb
inc
mov
shll
xlat
les
or
scas
jnp
bnd
add
sbb
in
cmp
xchg
xor
push
rorb
pop
and
int
push
add
fldcw
cltd
loopne
div
addr16
movsl
sbb
xchg
ffree
pop
push
stc
test
push
jg
icebp
sub
bound
jmp
clc
ds
out
cmp
loope
int
and
jno
int
rcrl
in
daa
cmpsb
in
cmp
fstpl
stos
jnp
bt
sub
addl
cmpsl
movsl
clc
outsl
jecxz
and
stos
cmpb
int3
pop
mov
testb
add
repz
sub
mov
je
sub
sub
das
sbb
jl
sbb
mov
daa
mov
cli
movsl
orl
jae
pop
jmp
bound
cmp
mov
xchg
sbb
push
movsb
scas
and
or
mov
adc
mov
in
cmp
test
adc
ja
mov
adc
xor
jmp
ljmp
jg
cmpxchg
pop
jmp
leave
or
cmpsl
lock
xchg
push
mov
jp
add
sub
outsb
and
xlat
sarl
inc
bswap
rorb
stos
icebp
and
pusha
test
test
mov
inc
sub
fidivl
stos
in
xor
pop
or
xchg
mov
out
lcall
xchg
dec
cmpsb
mov
jp
ret
leave
jge
stos
dec
and
int3
or
mov
dec
xorb
pop
loopne
rorb
aas
xor
bound
mov
and
cwtl
mov
call
popa
xor
lea
pop
imul
mov
xor
mov
sbb
les
test
mov
lret
ljmp
pop
lcall
sub
fisubrl
xchg
test
sub
sub
jbe
pop
gs
scas
int3
fistl
jo
adc
or
cmpl
jl
xor
fdivrl
gs
mov
jne
pusha
rolb
push
das
ret
xchg
sti
stos
push
dec
test
or
shl
addb
fldl
cs
pop
mov
out
mov
mov
mov
dec
loopne
sub
mov
xor
cwtl
xchg
inc
jmp
jl
subl
aas
pop
scas
fcomps
hlt
xor
insl
push
ds
sahf
jmp
ja
outsl
lods
inc
xchg
dec
fildl
and
cs
jb
aas
and
jnp
cmp
lret
hlt
notb
mov
pop
outsl
out
pushl
push
fdivp
xchg
stc
enter
popa
xchg
pop
add
aad
push
shlb
cli
subb
cli
xor
rcl
movl
stc
push
test
push
fcos
call
pop
xor
or
push
outsb
iret
adc
lock
loop
mov
jae
pop
js
adc
or
jg
scas
test
cmp
bound
add
test
adc
bound
mov
sbb
adc
rorl
ss
lock
mov
xor
cmpsl
xchg
lods
insb
in
jne
rcrl
in
shlb
and
or
dec
push
and
mov
and
inc
mov
aam
push
mov
pop
pop
sub
mov
popf
mov
je
mov
scas
aaa
push
or
nop
dec
dec
mov
xlat
push
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jmp
lods
jbe
loop
jmp
into
xor
enter
bound
pop
bound
leave
mov
mov
adc
shrb
sbb
fistps
mov
mov
in
daa
daa
push
cmc
repz
adc
dec
jge
imulb
mov
scas
es
repnz
mov
sti
movsl
and
inc
adc
insl
outsb
push
mov
lea
push
cmp
addb
fwait
mov
adc
pushf
call
jae
out
test
push
mov
sbb
pop
mov
adc
xchg
daa
aad
push
jmp
sbb
xor
sbb
add
mov
aaa
stos
xor
add
fcoms
insl
xor
cli
push
jne
mov
loopne
lods
push
mov
jne
jo
sbb
rcl
mov
orb
or
mov
mov
mov
and
call
fadd
push
stc
mov
test
push
xchg
add
js
cmp
mov
and
pushf
add
call
jp
idivl
or
pop
out
sti
inc
int3
les
mov
dec
pop
cmp
mov
aaa
sub
test
fldenv
daa
insl
jg
dec
jb
in
or
jl
aam
dec
push
xchg
arpl
mov
push
movsb
dec
cmp
popa
mov
pop
mov
xchg
sub
push
xchg
fcmovnb
popf
and
add
and
imul
int3
mov
and
popl
push
adc
arpl
sbb
test
loopne
xor
cmpsb
in
inc
jnp
add
push
and
pop
jg
scas
adc
das
add
shlb
sarb
xchg
frstor
mov
xchg
addl
dec
push
das
nopl
test
pop
lds
cmp
push
or
inc
and
movsl
fdivs
jge
es
cmpsl
dec
leave
imulb
push
or
fstps
push
fcmovbe
pop
cmp
cld
jge
pop
mov
sbb
imul
or
pop
hlt
andl
lcall
jo
push
inc
cmp
and
inc
sub
lods
lahf
pop
cld
arpl
adc
pop
ds
add
jge
ror
adc
sbb
sub
mov
xchg
test
repnz
xchg
pop
das
fs
addr16
inc
loope
or
fwait
and
rcrl
xchg
movsb
add
adc
lahf
lahf
cs
ja
outsl
xor
repnz
scas
out
into
sti
jnp
adc
lock
jecxz
repnz
jecxz
notb
jno
xor
cmc
out
test
addb
jle
push
jecxz
cltd
mov
adc
add
pop
shlb
and
popf
cmp
jle
adc
or
cltd
sub
addr16
mov
sbb
xlat
les
add
and
xchg
mov
sbb
sar
add
aam
mov
pop
cwtl
dec
sbb
jp
int
dec
jp
int3
push
mov
add
adc
mov
les
movsb
mov
cmpsl
and
rol
aad
mov
jae
pop
lret
in
pop
lods
push
mov
xor
sub
sub
sahf
sbb
aad
ja
ret
dec
inc
movsl
or
push
fwait
cmp
sub
adc
out
xor
popf
call
push
dec
inc
bound
outsb
inc
pop
jmp
fcmovne
out
xlat
fwait
lock
xchg
fcoml
ret
gs
jae
lcall
insl
xor
loopne
stos
stc
push
inc
stc
call
imul
lds
aad
ds
cmc
mov
add
lock
mov
cs
lock
pop
push
jne
loopne
mov
cwtl
cmp
mov
std
inc
mov
fnstsw
jae
xor
int3
popa
dec
imul
enter
movsl
sub
add
outsl
pop
stos
jns
fs
call
sbb
insl
in
ja
lods
xchg
jb
dec
xor
mov
scas
outsl
xor
mov
inc
push
push
dec
lret
sbb
loop
dec
notl
pop
jne
or
fs
fnstsw
fiaddl
pop
in
les
adc
push
daa
mov
push
mov
cmp
jl
mov
aaa
mov
loope
push
mov
pop
outsb
xor
or
adc
add
adc
sub
mov
pop
jb
xor
sbb
add
fldt
sub
and
repnz
aad
nop
mov
add
mov
jns
sbb
gs
popa
in
jnp
jl
or
dec
je
adc
shlb
mov
xchg
sub
outsb
fidivl
xor
pop
mov
xchg
into
and
adc
and
add
fnstenv
push
into
mov
adc
jle
js
ds
gs
aam
f2xm1
inc
mov
xchg
lods
adc
mov
stc
adc
daa
addr16
push
rcr
adc
inc
mov
jl
sbb
jno
insb
sbb
jge
mov
cwtl
ret
pushf
negb
mov
or
jl
loop
push
nop
out
or
imul
nop
xor
mov
sbb
movsl
cmp
ds
lret
shrb
andb
sti
push
push
xchg
mov
fadd
lea
cmpsl
push
ljmp
clc
sbb
mov
cmp
push
push
mov
and
popf
sbb
pop
add
int3
cmpl
push
mov
mov
mov
add
cmp
loope
cmc
cmp
dec
xchg
jno
jl
scas
stos
and
fcomps
je
xor
dec
in
cmp
aad
push
loopne
js
adc
mul
sub
loopne
iret
add
scas
dec
mov
aas
fstl
jb
out
ds
in
pop
stos
fistl
inc
sub
bound
cmp
pusha
test
icebp
push
mov
inc
push
in
rol
mov
ret
roll
js
into
xlat
jnp
pop
aad
sbbl
mov
xor
push
push
pop
inc
mov
movsb
jecxz
inc
outsl
pop
insb
jecxz
ss
pop
push
xchg
sub
addr16
pusha
cltd
jmp
fldl
loope
cli
lods
xchg
scas
and
and
xchg
movsb
ss
je
adc
cmp
popl
sub
fstl
imul
sub
shr
enter
arpl
int
dec
dec
cmpb
repz
or
in
xchg
jge
fidivrl
mov
mov
xchg
scas
out
dec
mov
xchg
addr16
xor
fcom
addb
in
cmp
ret
lret
sbb
and
inc
ljmp
aaa
xor
cmp
leave
sub
bound
or
sbb
fimull
inc
mov
push
xlat
or
dec
or
push
sbb
divb
cwtl
cmp
push
add
fmuls
adc
add
nop
xor
jae
icebp
push
push
sar
and
xor
sub
cwtl
mov
jmp
mov
and
and
flds
and
cli
movl
call
inc
jecxz
loope
cwtl
push
pop
aas
jb
dec
sahf
hlt
stc
xchg
inc
mov
jns
inc
mov
es
inc
push
pop
xchg
movsb
inc
in
aaa
xor
movsb
mov
popa
sbb
xor
andb
daa
insl
and
inc
out
mov
and
jno
rorl
ljmp
shll
cmp
sbb
mov
lret
test
test
clc
sbb
dec
enter
mov
fadd
outsl
mov
jecxz
xchg
or
mov
adc
mov
fwait
les
add
xor
jl
xchg
pop
mov
cmp
xor
sub
daa
fdivp
cld
test
push
in
and
inc
mov
mov
push
pop
push
mov
test
rcrl
sub
sar
addr16
push
subb
push
xor
imul
out
xchg
add
jp
jne
xor
in
pop
loop
xor
in
lock
mov
loop
nop
adc
cmc
clc
cmp
and
aas
inc
aad
shlb
shl
dec
push
pop
imul
nop
push
cwtl
icebp
movsl
test
dec
push
sub
clc
bound
push
outsl
xor
mov
jne
push
loope
iret
repz
mov
lret
mov
jecxz
je
jge
aas
loopne
push
xor
pop
mov
ja
jl
mov
stc
ss
jmp
xor
loop
mov
arpl
sbb
sbb
push
and
xchg
sbb
hlt
jb
call
sub
and
dec
xor
in
xor
mov
cltd
inc
add
push
leave
ret
pop
outsl
sub
mov
in
repnz
std
adc
mov
inc
mov
dec
sbb
das
sub
jl
xchg
mov
mov
adc
xchg
jecxz
mov
mov
inc
or
lods
adc
out
xor
pop
dec
scas
cltd
pop
scas
movsb
fst
adc
cmpsb
dec
dec
cwtl
or
bnd
mov
mov
dec
rorl
sbb
icebp
shrb
call
mov
fisubs
lock
out
fmuls
hlt
push
mov
push
and
addl
std
add
mov
aas
aad
subb
xchg
xchg
pusha
inc
je
stos
pop
mov
ss
aam
xor
aaa
mov
out
repz
fwait
sub
mov
pop
into
shrb
shll
jmp
jne
xchg
add
daa
fisubs
add
xor
mov
lock
sub
cmp
xor
inc
out
stos
pop
movzwl
adc
jmp
xchg
iret
xchg
lcall
xor
jmp
sbb
repz
cmp
dec
cmp
pop
xlat
sbb
and
mov
mov
push
adc
leave
shrl
or
or
into
mov
add
jne
arpl
aaa
int3
and
popa
lcall
xor
sub
js
mov
jecxz
xchg
sbb
int
push
sub
orl
push
and
dec
lea
mov
jp
xor
pop
enter
lret
in
insl
adc
adc
push
pop
imul
lret
push
mov
xor
xchg
lods
sbb
or
inc
adc
sub
shll
sub
push
jo
mov
xchg
stos
popa
add
add
xor
dec
arpl
jne
ss
jp
pop
sub
pop
scas
js
inc
mov
cli
xor
dec
and
sub
push
cltd
out
out
mov
xor
inc
sarl
push
loop
popf
enter
sub
dec
addr16
mov
pushf
mov
ret
jne
xchg
loopne
lods
xor
fsub
mov
pop
in
xor
jle
call
loop
jns
jno
lret
loope
fadds
rcrb
inc
dec
jle
cmpsb
sub
and
das
das
incl
and
xchg
mov
fstpt
cmp
arpl
sub
xor
cmp
nop
add
outsb
arpl
cltd
iret
inc
jb
test
inc
orl
push
add
ret
push
sub
xor
es
sbb
sti
xchg
mov
jb
icebp
adc
inc
push
iret
aad
in
mov
sahf
jl
sbb
std
lea
aad
inc
jae
jle
ds
fdivrl
mov
jge
jo
add
imul
adc
sbb
ss
adc
mov
roll
ljmp
mov
adc
imulb
stos
jbe
inc
pop
shl
test
xchg
enter
cmp
test
jne
mov
xchg
inc
sti
pop
insb
or
in
inc
mov
or
add
icebp
push
dec
lds
jns
repz
lcall
cli
adc
cs
push
adc
inc
dec
xor
push
outsl
or
frstor
pop
sti
add
mov
adc
pop
hlt
fwait
xor
xchg
mov
stc
stos
or
dec
jb
mov
mov
lds
aad
jecxz
lret
rorl
gs
push
inc
mov
cmpl
std
lfs
clc
jnp
cmpsl
push
rol
loope
xor
clc
icebp
je
mov
daa
xor
outsl
xor
ljmp
imull
stc
sbb
test
test
pop
jb
ret
fcmovu
lret
out
cli
hlt
in
cmc
cmp
lods
arpl
cmp
mov
ljmp
call
ret
push
hlt
and
jle
and
mov
repz
test
jb
jb
lcall
dec
sbb
ss
push
and
data16
fildll
cli
fbld
lret
xor
or
dec
inc
jne
rcrl
cmpsl
jne
sbb
in
inc
out
push
jge
adc
xchg
les
cmp
jp
adc
push
arpl
jnp
aam
inc
xchg
daa
into
sbb
rclb
mov
mov
call
imull
adc
repz
sub
loopne
mov
mov
xor
aaa
xchg
cmp
int
loope
inc
mov
xchg
out
inc
sbb
dec
mov
shlb
adc
pop
push
dec
repz
aaa
into
add
test
dec
sbb
jb
loopne
pop
push
jg
daa
test
mov
or
lcall
movsl
sbb
adc
iret
test
push
aad
adc
inc
jae
jbe
inc
push
cmpsb
mov
add
mov
and
xchg
mov
dec
inc
xor
je
insl
sbb
out
pop
repz
mov
inc
call
mov
lods
pusha
loop
mov
xchg
dec
adc
enter
push
adcb
pop
fwait
mov
dec
xchg
dec
sbb
mov
mov
mov
push
add
mov
insl
adc
mov
fadds
mov
mov
xor
mov
sub
sbb
movsl
mov
lea
loop
pop
js
xchg
faddl
jecxz
mov
shl
movsb
sub
add
cmp
test
shlb
out
in
xchg
xchg
lret
lods
jae
mov
imul
out
adc
pop
adc
call
or
or
leave
cltd
mov
xor
sub
add
xchg
pop
mov
mov
jb
sbb
pop
xlat
cld
push
dec
or
popa
add
aas
jge
rol
dec
hlt
xorb
fists
sti
insb
cld
test
clc
or
mov
xlat
mov
jns
xchg
das
dec
dec
std
es
and
bound
in
call
mov
pop
cmp
jns
fdivrl
imul
pop
jns
test
aam
adc
andb
notb
xor
cwtl
ljmp
xchg
xchg
repz
test
ret
adc
push
adc
mov
jno
mov
jg
lcall
cmp
jo
iret
push
ja
ja
inc
ret
fs
xor
jcxz
sbb
sub
xchg
fcomip
push
cld
cmp
rclb
stc
dec
das
jmp
adc
pop
jg
jbe
xchg
nop
jns
mov
jp
fstpt
mov
mov
int3
pop
les
and
inc
or
mulb
ljmp
xor
bound
testl
xchg
aad
push
pop
push
lea
or
xor
rolb
popa
test
inc
mov
sbb
mov
inc
out
inc
scas
shl
and
ja
pop
mov
xor
int
ss
outsl
jns
sub
out
jecxz
pop
sahf
xchg
push
ss
call
jb
sbb
aad
lcall
mov
filds
jb
pushf
sbb
xchg
pop
adc
inc
iret
and
fwait
mov
lods
and
je
pop
push
mov
and
lcall
mov
cld
rorb
pop
sub
and
push
add
mov
mov
fstps
test
fdivrs
ret
call
dec
xcrypt-cbc
cmpsl
xchg
mov
push
ret
lea
gs
mov
mov
sub
sub
imul
das
out
lock
push
pop
lret
hlt
gs
les
fisubrl
pop
mov
jae
sub
clc
pop
jbe
adc
dec
in
cmp
adcb
hlt
dec
scas
xor
fstps
popa
lahf
and
cmp
sbb
xor
cmp
sahf
mov
cmpsb
hlt
jae
shlb
iret
inc
imul
jne
test
dec
mov
adc
outsb
cltd
xlat
mov
jge
out
pop
mov
xchg
jp
inc
adc
push
adc
mov
mov
filds
dec
or
jle
pop
pop
mov
test
imul
push
lock
jmp
add
sbb
push
xchg
xor
lcall
jp
mov
mov
mov
pop
lods
jne
leave
lret
notb
cld
xor
in
pop
sarb
push
and
dec
fcmovbe
push
lcall
out
jbe
fcompl
stos
sti
test
stos
fs
inc
adc
cwtl
push
arpl
xchg
in
fcmove
popf
sbb
add
leave
dec
inc
adc
repz
mov
shr
stos
inc
test
cmp
repz
popf
dec
adc
adc
in
sub
cmp
arpl
sbb
das
in
inc
out
out
imul
pop
ret
cmpsl
movb
jmp
out
push
jle
dec
cmp
pop
jne
xor
stc
mov
insb
sub
call
sub
sbb
xchg
sahf
jg
jg
jb
cltd
push
fidivrs
pusha
jge
xor
nop
mov
ds
sbb
stos
cld
aam
inc
xchg
dec
ror
shll
das
sarw
lahf
jne
bound
push
in
adc
sbb
sti
push
aad
add
out
and
mov
or
movsb
pop
pop
mov
das
out
into
push
lret
and
and
iret
mov
inc
lret
rcrb
test
jne
fstpl
adc
loop
jnp
xor
ret
dec
mov
push
test
scas
pop
in
push
dec
lods
sbb
sbb
andb
hlt
lock
repz
arpl
and
jne
dec
dec
and
xor
sbb
or
jb
add
pop
in
jbe
shrb
inc
jnp
ret
and
mov
arpl
add
mov
loope
ret
imul
sbb
adc
and
daa
insb
xor
jns
fcoms
sub
lahf
pop
popa
cld
cli
sbb
pop
test
outsb
mov
inc
jmp
add
jp
ss
jb
sub
into
mov
jne
push
sub
ja
xchg
jle
stos
clc
push
mov
adc
iret
idivl
sub
fsubl
sahf
aad
scas
cmp
inc
or
iret
inc
fwait
push
mov
ja
leave
shr
jne
fimuls
adc
push
lea
or
mov
out
cltd
ficoml
stc
jle
ret
ret
dec
aaa
push
jb
dec
or
xchg
inc
jmp
pop
or
mov
xchg
leave
jp
inc
js
lods
mov
dec
cmp
or
movb
insb
int
push
rcr
andb
xlat
push
sub
push
push
dec
xchg
and
les
jo
cmp
pushf
cmc
adc
inc
jp
aam
mov
jno
add
mov
dec
mov
push
test
mov
jno
repnz
xchg
mov
adc
or
lret
cld
addr16
sbb
sub
push
loopne
or
dec
xlat
sub
sbb
movsb
push
lahf
xor
sbb
cmp
test
xchg
cs
decl
fcompl
inc
jle
js
xorb
cmp
xchg
sub
gs
sbb
xchg
push
out
lods
icebp
pop
and
or
inc
push
fistps
xacquire
shrb
movl
mov
jecxz
out
in
pop
movsb
mov
js
adc
icebp
jecxz
inc
stos
ss
popa
push
and
lods
stos
pop
xor
xchg
sub
cld
sbb
and
dec
outsl
in
jecxz
or
cmpb
push
cs
jnp
mov
push
arpl
cmp
std
out
cmp
mov
pusha
push
popf
inc
js
mov
negl
rep
imul
sbb
pop
jb
or
test
mov
xor
loop
inc
stos
mov
or
pop
je
push
int
sbb
cmpsb
mov
loope
mov
cmp
scas
cs
loop
lods
pop
dec
inc
loopne
in
mov
icebp
movsl
mov
out
cmpsl
inc
inc
xor
sub
and
cli
out
into
ret
lods
in
in
mov
xchg
dec
push
in
lahf
or
cmpsb
fs
popf
jae
ja
aas
imul
mov
mov
pop
push
outsb
push
xor
adc
pop
sbb
jne
xchg
mov
repnz
pop
imul
add
sarb
mov
fsubrs
cmp
shll
out
cli
xor
mov
inc
out
cmp
sub
test
push
and
cmpsl
pop
cmp
inc
aaa
jmp
push
and
pop
push
pop
int
std
push
out
or
xchg
test
fistpl
push
sbb
lret
push
jnp
mov
sbb
or
fcmovbe
insl
adc
shl
mov
adc
pop
dec
into
inc
xchg
adc
push
sub
fcomps
inc
mov
push
loopne
rorl
pop
pop
lock
jo
cs
fiadds
enter
or
call
pop
jns
jne
pop
lcall
cs
sbb
rorl
cmp
pop
aaa
add
in
inc
cmpsl
mov
lret
fwait
std
mov
std
lds
adc
ds
aad
dec
les
sbb
fs
mov
mov
repz
dec
subl
popa
or
and
push
adc
add
enter
rorl
cld
in
cmp
dec
cld
sub
mov
ret
mov
mov
cltd
cmp
push
mov
pop
cld
xchg
cmp
hlt
cmp
inc
xchg
adc
adc
hlt
inc
negb
lret
fistl
sbb
jecxz
nop
inc
sub
pusha
cmp
or
test
fwait
mov
loop
mov
sbb
add
popa
cmp
mov
xchg
pop
cmovno
or
arpl
sbb
mov
cmpsb
xlat
fcom
or
mov
add
jle
sbb
fsub
sub
lret
into
repz
xor
sub
lock
sti
dec
and
mov
xchg
loop
out
stc
or
mov
pop
push
mov
jno
add
adc
jae
loope
fdivl
sub
popf
call
imul
mov
subl
mov
push
cwtl
mulb
xchg
push
mov
jl
jg
stos
stos
cli
stos
mov
mov
out
lock
mov
push
cmp
mov
add
xchg
or
subb
mov
mov
or
cld
lcall
xor
pop
and
dec
aaa
add
stos
arpl
and
mov
int3
movsl
enter
mov
iret
sbb
dec
xchg
ljmp
ss
and
inc
and
push
cmp
xchg
jns
cmp
or
mov
lods
pop
loope
pop
xor
mov
aad
insb
lds
shll
cmc
jns
int
xchg
inc
jno
das
imul
cmpsb
dec
adc
pushf
adc
push
aam
mov
ret
dec
xchg
sub
call
push
jl
push
xor
push
sbb
in
idivl
cs
fwait
stos
iret
insb
out
add
xor
jmp
repnz
xchg
inc
mov
mov
inc
adc
movsb
lea
fldln2
aad
mov
sub
in
jp
xorl
ja
inc
lea
fiaddl
sbb
push
adc
ret
mov
popa
arpl
mov
fiadds
sbb
adc
xor
scas
add
cmp
out
xchg
sahf
or
and
sahf
adc
push
mov
adc
lods
lahf
dec
jecxz
push
push
mov
fs
jg
cs
push
in
adc
andb
and
pusha
ja
fisubrs
scas
clc
adc
test
add
push
push
or
adc
mov
push
stc
test
int3
lods
jb
test
lea
pop
cmp
lret
enter
in
sub
xchg
pushf
mov
les
push
lea
and
pop
repz
add
lret
data16
cmp
in
out
and
aam
cmpsb
hlt
add
outsl
or
xchg
cmp
jle
cmp
fwait
mov
icebp
in
pop
adc
dec
int3
mov
lahf
pop
dec
aaa
loope
mov
fsub
shlb
xchg
rclb
pop
scas
enter
mov
jmp
in
aas
mov
sbb
test
xor
push
lods
pop
xchg
cmp
mov
lahf
xor
mov
roll
loopne
das
dec
cs
jle
jle
aam
jmp
jg
and
mov
mov
test
add
add
je
idivl
add
insl
mov
shll
jb
jns
cmp
dec
out
add
sbb
mov
imul
adc
lods
inc
std
popa
in
cld
int3
into
sbb
repz
xor
sahf
cmpsb
cli
loop
lret
push
in
outsl
inc
dec
inc
icebp
inc
lds
movsb
dec
into
xchg
loope
mov
fs
addl
sub
repz
pop
jecxz
sub
leave
or
test
mov
js
in
iret
in
flds
add
aam
test
cli
mov
adc
pop
jne
fsubrl
rclb
cld
mov
sbb
jo
out
sbb
push
in
inc
and
es
out
loop
jmp
push
dec
dec
lds
pop
push
mov
jge
negb
pop
push
popa
mov
pop
push
sbb
push
inc
scas
daa
mov
pop
dec
sbb
or
or
scas
push
sub
jb
push
rolb
or
mov
jle
sbb
ss
cld
xchg
shll
stos
add
and
sbb
nop
cmp
inc
inc
int3
les
mov
xor
cli
fs
and
adc
mov
dec
test
xchg
xor
jne
xchg
pop
icebp
sahf
scas
cmpsb
rclb
add
aas
insl
sahf
rcrl
pop
lods
addr16
outsb
inc
leave
mov
xchg
int3
push
in
push
out
push
jbe
repnz
jmp
into
les
pop
jl
mov
jnp
fistpl
push
icebp
fidivl
fwait
push
es
stos
push
loope
push
lea
xchg
sub
and
js
scas
dec
in
add
adc
pop
jmp
jb
fisttps
jg
in
outsl
aas
sub
roll
imul
sbb
xchg
pop
aad
cli
rcll
lea
mov
cmpsl
gs
push
jmp
roll
mov
loopne
jmp
pop
push
cmp
scas
sarl
lahf
test
push
movsb
test
addr16
mov
loop
outsl
lahf
jmp
rcr
clc
int3
adc
leave
aas
or
mov
in
shrl
call
xchg
lret
xchg
xor
mov
es
inc
cmp
sarb
loope
dec
inc
push
sbb
inc
dec
lret
inc
test
xlat
sub
push
add
mov
ss
or
dec
ds
orl
push
push
pop
daa
jns
iret
lods
std
jae
nop
lds
xchg
outsl
inc
and
insl
hlt
inc
mov
repz
xchg
xor
push
repz
xchg
cmpsl
adc
xchg
mov
cs
mov
adc
pop
cmpl
divb
iret
das
or
roll
test
and
hlt
or
mov
cmp
pop
stos
and
jg
jae
popf
mov
lea
movsl
xor
dec
push
jbe
and
fcomip
xchg
loopne
mov
out
mov
fadds
leave
ret
push
or
rcl
ds
dec
test
sub
jge
fwait
push
mov
pop
stos
int3
dec
fcoms
orb
leave
fwait
stos
repz
cmp
xor
push
push
add
mov
or
push
lods
insb
aad
out
push
sbb
pushf
fdivrs
lock
das
in
pop
in
mov
cwtl
mov
dec
mov
lahf
into
aas
add
sbb
insb
ljmp
sbb
ljmp
pop
stos
shlb
adc
dec
in
push
test
sarb
mov
add
mov
sub
daa
jo
lea
cmp
lods
and
xor
adc
js
xchg
inc
sub
leave
in
test
ds
inc
mov
adc
push
ja
mov
jo
icebp
stos
or
cmp
dec
loopne
das
push
outsb
mov
add
testb
arpl
mov
mov
fucomip
pop
mov
pop
jle
sti
mov
push
inc
std
aam
mov
mov
mov
das
and
cmp
and
ja
test
ret
pop
hlt
or
sbb
int
mov
inc
popa
sub
inc
lods
orl
adc
js
pop
test
ljmp
adcb
or
in
test
es
cld
adc
pop
add
fdivs
pop
jbe
pop
jae
pop
nop
pop
call
or
addr16
repz
jl
dec
and
xor
and
sbb
es
test
ret
jbe
sbb
mov
rep
mov
fmul
loop
inc
ja
jl
cltd
stos
and
aam
enter
stos
loope
stos
shlb
aas
dec
in
divb
push
cmp
xor
jl
lea
mov
adc
dec
or
addr16
adc
push
lods
or
push
xchg
fidivrl
push
mov
or
inc
cmpsb
bound
negl
rdmsr
adc
add
in
nop
push
pop
mov
jp
and
cld
lret
mov
xchg
cmpsb
int3
and
aad
and
sub
sub
cmp
jbe
popa
dec
mov
gs
mov
mov
cmp
or
jns
jmp
dec
mov
mov
mov
lret
push
push
mov
pop
and
jo
nop
or
xlat
loope
hlt
sti
lea
cli
sbb
ja
mov
pusha
jno
mov
adc
and
rolb
or
pop
push
sub
add
pop
decl
outsb
add
aad
sub
cmpsl
sbb
clc
aam
es
xor
je
fisttpll
cmp
lret
mov
adc
pop
call
andl
xor
outsb
filds
fistpll
and
inc
cwtl
ja
and
insl
ljmp
addr16
int3
adc
xor
test
mov
jg
pop
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
jmp
sbb
sbb
push
mov
mov
decb
bound
pop
bound
movb
mov
sbb
cmc
xor
or
adc
mov
xchg
fisubrs
cmpsb
les
mov
out
aad
ret
fs
pop
fs
loop
dec
in
push
bound
sub
cmp
in
pop
bound
mov
shrl
xchg
fbstp
hlt
lods
add
ss
scas
lret
mov
ds
call
fcompl
adcb
cltd
dec
push
inc
jne
jg
rol
mov
jne
mov
jns
jns
mov
cmp
mov
fisttpl
ja
jp
and
and
mov
pop
xchg
adc
xchg
aad
sub
out
dec
stos
adc
xchg
int
or
cmpl
shl
cmp
pusha
cmpb
dec
inc
xchg
movsl
pop
jge
mov
xchg
push
cmp
sahf
pop
fstl
insb
and
inc
jne
xor
cmp
int
mov
sahf
ret
dec
mov
popa
push
lea
inc
jno
xchg
ja
dec
popa
mov
cmpsb
mov
xlat
inc
repz
inc
xor
dec
adc
xchg
inc
push
dec
nop
pop
out
push
mov
push
jl
xor
andl
pop
jmp
inc
idivl
add
out
jge
movsb
movsl
mov
test
into
and
nop
imul
ljmp
sub
addr16
xor
sti
mov
add
mov
and
movsb
clc
mov
loop
xchg
imul
imul
push
arpl
negl
in
fmull
xchg
xor
movsl
pop
cmp
pop
and
jb
mov
pushf
jle
xchg
ret
jno
pop
dec
jg
fcomip
pop
mov
jge
cmc
fs
movsb
outsl
loopne
mov
cmp
lcall
popa
mov
rcll
ljmp
inc
lea
push
cs
push
enter
test
inc
gs
lock
fdivrs
push
dec
sub
mov
test
xchg
sahf
push
test
adcb
mov
or
pop
repz
sub
xor
outsl
jne
fs
lahf
loopne
into
mov
sub
dec
loop
test
inc
insb
std
mov
aam
dec
jecxz
cs
gs
inc
inc
test
nop
sbb
mov
ljmp
xor
lods
pop
ret
cmp
ja
xchg
lods
addl
pushf
pop
cmpsl
pop
fidivs
stos
rol
adc
mov
pop
push
mov
adc
cmp
xchg
bnd
add
dec
cld
fiadds
mov
xchg
add
ror
aad
pusha
leave
adc
lods
jg
push
lds
push
sbb
aaa
shlb
loopne
pushf
cmp
inc
gs
cmp
sbb
cmpsl
inc
fisttpl
mov
xchg
test
lea
int
dec
icebp
and
addb
and
insb
test
fwait
shlb
notb
sahf
mov
push
into
test
push
out
mov
mov
lods
in
fbld
jo
fsubs
loop
scas
jae
cmp
pop
out
pop
cmpsb
fcmove
and
mov
ror
cmp
out
les
xor
dec
cwtl
xchg
mov
fdiv
scas
xchg
mov
sti
andl
fmul
mov
xor
outsl
push
mov
sbb
cld
mov
push
xchg
ret
sbb
mov
jecxz
mov
jp
out
stos
imul
popa
pusha
mov
add
sahf
cmc
dec
xor
fiadds
mov
cmpsl
or
sub
jecxz
js
push
dec
push
dec
stc
js
jecxz
stos
mov
cmp
dec
jge
or
jnp
mov
mov
cltd
je
and
adc
mov
es
mov
xchg
dec
add
std
out
jno
jecxz
mov
xlat
shlb
push
iret
sarl
add
adc
mov
iret
jg
test
jp
adc
out
mov
mov
adc
cmp
add
sbb
cwtl
sub
loop
in
and
fstps
cld
cmp
loope
mov
push
rcl
sub
dec
push
xchg
add
inc
je
jp
or
iret
adc
jge
movsb
pushl
fimuls
cmp
push
pusha
pop
popf
or
loopne
out
out
xchg
cmpsl
push
push
inc
lret
rorb
jle
mov
cmc
gs
dec
xchg
ror
or
fisubrs
jp
flds
sub
stos
xchg
inc
mov
xchg
mov
jbe
push
ret
into
mov
push
dec
cmp
les
push
stc
or
ds
ret
cmp
pop
push
xor
repz
mov
jmp
pop
mov
shrb
out
cltd
sub
mov
sub
mov
addr16
mov
lock
ds
xor
je
mov
ds
xchg
push
pop
jp
int
aam
nop
lds
mov
adc
cmp
out
xor
jmp
jmp
xor
pop
arpl
add
xor
sub
testb
xchg
fs
xor
push
cmp
sub
test
gs
cmp
push
inc
stos
xchg
lods
cmp
test
pop
push
jg
push
rclb
inc
dec
in
ja
mov
ficomps
stos
jle
jb
cmc
popf
add
nop
and
pop
pop
movsl
xorl
xchg
mov
pop
xchg
mov
sbb
cld
fsubr
inc
mov
dec
push
mov
add
push
scas
std
int
mov
ficoms
mov
lods
call
push
xchg
loope
push
sub
mov
rorb
cmp
out
fstl
fs
pop
bound
xorb
jne
insb
enter
mov
enter
scas
rorl
sti
dec
inc
rolb
dec
sub
push
addr16
jmp
in
or
xchg
rol
out
cmpsb
popf
fs
cli
lods
mov
dec
andb
and
popf
adc
stos
mov
push
icebp
push
or
mov
mov
aad
cmpsl
cmp
xchg
mov
adc
mov
mov
xchg
cli
pop
xlat
cmpsl
jno
gs
mov
aaa
xor
jp
mov
push
movsb
call
push
ret
xchg
pop
inc
lret
imul
mov
cmpb
js
rcrb
and
lahf
leave
testb
cmp
lret
adc
decb
push
cld
jno
les
loopne
pop
and
data16
inc
mov
and
jmp
mov
fs
mov
mov
sti
vandpd
dec
push
xchg
aam
ja
cmp
outsl
cwtl
push
hlt
mov
push
mov
rclb
sarl
mov
outsb
popf
js
dec
mov
mov
mov
cmp
or
adc
add
cli
mov
je
rcrl
pop
cld
shrl
jae
pop
insl
rcrl
pop
mov
fsubrp
out
dec
fmuls
mov
stos
cmpsl
sub
push
or
add
pushf
popa
mov
aaa
aad
fisttpl
or
cmp
mov
xor
sub
adc
pop
pop
shll
sbb
jb
in
jbe
test
into
outsb
and
scas
shr
sbb
xchg
pop
jnp
and
cmp
push
lods
aas
push
dec
jno
ret
inc
divl
push
repnz
sbb
testb
inc
mov
lods
gs
daa
cmp
and
cmpsb
add
ljmp
out
ret
stos
shrl
and
adc
xor
lods
nop
into
push
loopne
sbb
stos
aaa
fdivp
nop
pushl
xchg
ret
test
cld
add
pop
rcl
jmp
mov
ss
lret
jecxz
and
jmp
adc
cmpsb
mov
push
push
or
jg
or
mov
add
nop
inc
cmc
psrld
lods
les
push
shll
cmp
sbb
enter
sbb
inc
push
push
or
es
push
out
insl
mov
aad
cmpsb
or
lret
nop
xlat
push
ja
icebp
fadds
xlat
mov
in
sbb
fcmovne
ja
sbb
sub
xchg
pop
cmp
jmp
sub
cmpl
adc
cmpb
mov
mov
test
pop
out
xchg
pop
xor
test
in
push
mov
icebp
mov
mov
jl
mov
test
mov
inc
dec
mov
adc
lds
fdivrp
les
lods
outsl
loop
push
loope
outsl
jns
mov
icebp
sub
xor
xchg
pop
xchg
ljmp
dec
les
jp
pop
data16
xchg
pushf
jnp
imul
dec
fstps
cmpsb
je
js
sahf
lcall
into
dec
xlat
hlt
inc
mov
cmpsl
or
in
scas
dec
cltd
into
push
jno
xchg
jo
pop
push
dec
mov
aad
inc
int3
xorb
leave
pop
out
lcall
sub
xor
mov
mov
push
in
xchg
inc
movsl
lods
add
add
lret
shll
push
stos
inc
pop
in
mov
mov
shl
scas
adc
inc
mov
push
ret
mov
mov
cmpsl
xor
into
or
std
int
jae
leave
gs
lret
mov
mov
fsubrl
xchg
clc
push
into
fistpl
xchg
cld
outsb
push
sbb
sbb
lahf
sbb
movsb
xor
mov
lods
repz
push
insb
sbbl
xor
cmpsb
out
mov
and
mov
ljmp
and
ret
inc
pop
cltd
adc
fdivp
or
std
ss
xchg
inc
icebp
fistpll
enter
sahf
aas
fistps
jle
mov
sti
test
lds
sub
push
int
stos
mov
sub
mov
pop
cwtl
inc
inc
dec
adc
xchg
dec
pop
mov
bnd
les
je
les
shlb
bound
mov
fstps
inc
fidivrs
cmc
popa
into
hlt
dec
gs
push
ss
dec
jbe
out
loopne
push
cmp
adc
or
idivl
outsb
sub
adc
sub
add
and
xor
popa
xchg
dec
incl
xor
push
jecxz
cld
test
test
add
or
add
cld
push
in
add
fiaddl
or
pop
pop
adc
add
movsl
cmp
in
cmp
fiadds
add
mov
mov
ja
add
xor
loop
lret
sbb
push
push
into
mov
dec
icebp
inc
jae
cmp
out
lods
inc
shrb
pop
mov
ret
mov
int
sbbw
pop
pop
test
push
mov
pop
pusha
mov
aaa
inc
out
dec
test
fisttpll
loope
mov
clc
mov
shrb
lea
mov
or
jb
cld
mov
adc
lret
call
mov
cmp
jo
aam
dec
jne
hlt
mov
out
jne
jmp
ljmp
mov
cmp
cmp
push
in
push
jo
push
add
pop
aad
mov
sub
cmp
sbb
in
addl
addr16
rcrl
cwtl
or
push
pop
aaa
dec
daa
sbb
xchg
add
scas
movsl
adc
in
push
or
stc
xchg
mov
xor
sar
imul
aam
cmc
clc
adc
pop
ret
push
call
xor
sbb
jae
fadd
xor
inc
or
movsl
fidivl
push
pop
jbe
aaa
adc
mov
loop
jl
inc
mov
cmp
sbb
test
pop
jae
sub
mov
pop
or
lock
fisttps
sahf
cmp
add
mov
add
dec
enter
mov
int
mov
or
mov
jg
addr16
cs
pop
sbb
push
ret
or
adc
lret
or
outsb
std
gs
ljmp
ret
ljmp
pop
std
xchg
imul
test
aaa
pushf
lahf
out
ljmp
xchg
inc
negb
push
mov
sarb
popf
int3
and
test
lret
sub
or
pop
mov
dec
adc
jl
inc
inc
mov
insb
xor
pop
sti
scas
xor
push
movsl
adc
les
xor
inc
cmpsl
leave
test
repz
je
mov
cmpsb
dec
push
shll
jbe
nop
inc
fstl
arpl
movsb
sub
mov
cmp
inc
inc
xor
inc
mov
sbbl
push
xor
es
insl
fbld
sub
push
jge
loopne
cmpl
int3
jecxz
cmp
js
jae
mov
lock
cli
adc
xchg
xor
fldenv
mov
out
pushf
mov
movsl
mov
adc
icebp
adc
dec
imul
pop
jge
int
dec
int3
movsl
pop
mov
inc
loope
and
dec
jl
jge
in
dec
pop
movsl
xor
daa
mov
stos
mov
mov
lahf
addr16
or
sub
aad
or
xor
daa
clc
imul
xor
add
aad
int
jmp
xchg
jp
int3
cmp
pop
adc
movsb
sbb
loop
fwait
ljmp
test
psubd
aas
inc
outsb
imul
jg
rcrb
int3
shll
inc
xchg
dec
inc
pushf
and
stos
mov
or
push
daa
inc
inc
xlat
xchg
or
sarl
les
lret
xchg
sub
ljmp
clc
sbb
dec
cmpsb
adc
jg
inc
fmulp
notl
mov
jmp
dec
mov
dec
fdiv
popa
push
scas
std
push
mov
loope
add
rolb
mov
dec
imul
stc
into
add
mov
push
call
push
out
scas
lock
pop
cs
jno
jp
jo
fisubl
test
fdivrl
int
mov
jb
dec
xchg
fistps
iret
dec
clc
loopne
inc
sahf
stc
xor
cli
adcb
popf
dec
shll
repz
notl
sub
dec
and
fisubrl
imul
lock
je
pop
mov
fs
sbb
fcoml
inc
xchg
repz
fldenv
sbb
fimull
in
cs
pop
int3
imul
into
test
push
push
rclb
xchg
out
and
push
out
stos
iret
push
jl
push
addr16
movsl
pop
mov
pop
aas
scas
mov
cmp
dec
clc
pop
adc
rol
pop
das
mov
mov
or
jmp
xchg
in
or
mov
adc
ljmp
xor
aam
adc
add
push
sub
jbe
je
pop
sbb
sbb
aas
nop
inc
out
sahf
sub
dec
arpl
jl
jp
xor
aas
mov
mov
mov
mov
jne
std
mov
das
pop
and
xchg
pop
test
out
in
dec
aaa
std
adc
dec
imulb
mov
int3
outsb
sub
jae
jbe
cmp
xchg
jp
cmc
mov
cli
fldl
and
add
pop
rorb
stos
cmpsb
fwait
outsb
ja
jb
nop
outsl
lahf
loope
test
cld
push
popf
cmp
sti
imul
je
mov
ficompl
mov
xchg
in
test
repnz
pop
mov
jmp
mov
and
mov
sti
push
fisttpll
sti
ss
ljmp
xchg
sbb
rcl
or
out
push
and
xchg
dec
push
arpl
sbb
pop
in
pop
mov
aaa
mov
or
push
jb
repz
test
cli
mov
sbb
sbb
add
adc
mov
mov
xchg
mov
das
jae
ja
sub
xchg
in
cmc
adc
adcb
insl
shrb
mov
mov
mov
mov
aaa
inc
sbb
fcoms
xchg
popa
adc
or
pushl
mov
unpcklps
pop
lods
outsl
and
aam
or
roll
cmp
jbe
mov
sbb
pop
and
aam
fiadds
xchg
enter
out
es
push
lret
pop
mov
and
ljmp
dec
cmp
rorb
ja
mov
mov
push
and
test
in
dec
xchg
fdivrs
lret
std
ret
dec
xchg
cmp
shl
pop
aaa
push
aaa
into
or
insl
mov
repnz
imul
mov
rep
add
and
lahf
ficoml
movsl
rcrb
rclb
adc
out
cli
adcb
push
and
push
add
mov
inc
or
inc
cmpsl
lods
gs
dec
push
flds
jae
nop
fstpt
or
stc
lods
dec
fsub
lds
js
adc
shr
inc
dec
xchg
or
lods
ja
rolb
pushf
or
push
push
cmp
xor
push
push
fldpi
out
mov
inc
mov
push
cmpsl
roll
xchg
mov
in
adc
dec
loope
or
add
sub
and
or
shrb
and
jp
jae
mov
ss
mov
mov
adc
push
xchg
fstpt
adc
bound
xchg
add
mov
push
negl
ficomps
push
push
and
into
int
inc
lret
mov
push
dec
loopne
cmc
shl
xchg
jecxz
inc
add
fcmovnbe
xorl
jl
xlat
push
cmp
jmp
call
mov
or
addl
add
adc
sub
insl
mov
pop
jb
pushf
pushf
sub
bnd
add
sub
mov
ret
movswl
cmpsl
insl
push
adc
dec
push
lea
movsb
adc
jne
mov
mov
popa
push
mov
outsl
jne
push
xlat
push
mul
add
shlb
out
sub
enter
bswap
lret
jno
inc
mov
sbb
add
pushf
leave
jmp
xor
mov
movsl
add
lds
jge
mov
sbb
and
inc
cmpsb
mov
xchg
xchg
outsb
fs
sub
dec
inc
and
cmp
add
push
mov
jmp
cmp
mov
mov
mov
and
in
in
das
mov
sbb
popa
and
adc
in
mov
mov
xor
push
mov
repnz
cmp
test
inc
pop
addr16
icebp
cld
pop
hlt
push
add
dec
add
adcb
xchg
int3
imul
push
cmp
push
outsb
mov
shlb
inc
dec
ja
adc
lret
out
pop
mov
sbb
cmc
lock
push
inc
mov
pusha
add
rol
jne
mov
sub
aam
adc
es
mov
push
dec
sbb
mov
mov
aaa
pop
sub
in
testb
ja
cmp
jmp
and
movsb
pop
nop
cmp
or
nop
jae
fbld
loopne
adc
movsl
fnstsw
inc
fnstcw
mov
out
push
inc
movsb
and
pop
sbb
pop
inc
daa
outsl
test
jbe
jno
cmp
mov
ss
out
inc
fdivrs
adc
rcll
orb
outsb
mov
adc
push
or
sbbl
test
jne
out
dec
xchg
out
mov
cwtl
decl
mov
notl
stos
shl
mov
xchg
hlt
in
sub
push
cmp
lods
scas
push
fisubs
pop
lods
mov
rorb
inc
dec
sbb
xor
cmp
and
add
orb
into
repnz
pop
scas
lods
sub
xchg
add
je
cli
repz
xor
jp
leave
sbb
adc
xor
mov
aaa
lcall
ds
cmp
fnsave
mov
fsubl
test
ss
jb
dec
gs
repz
cmp
cmpsl
out
negb
jle
mov
fdivs
call
std
cmp
inc
cmp
test
clc
pop
jle
ficoms
push
mov
in
or
jp
mov
push
imul
mov
shrb
add
push
jmp
jmp
ljmp
es
push
xchg
mov
mov
mov
leave
out
pop
add
gs
jle
fucomi
inc
cmp
xchg
or
sub
bound
dec
scas
mov
ljmp
pushf
aaa
cli
jecxz
imulb
inc
xchg
mov
mov
add
testl
insb
js
mov
fisubrs
push
mov
inc
sbb
push
into
loope
add
testb
add
mov
popa
data16
dec
mov
mull
mov
cmp
enter
clc
add
xor
dec
jnp
pop
scas
or
dec
inc
nop
sbb
dec
or
fidivs
inc
fld
scas
loopne
jbe
xchg
repnz
in
dec
scas
pop
inc
in
jmp
sbb
cli
jb
nop
jmp
xchg
pushf
mov
inc
stos
and
xlat
or
lret
mov
mov
fdivs
daa
fnsave
lahf
hlt
pop
mov
mov
adc
adc
gs
dec
cmpsl
cmp
cmpsb
push
cs
mov
sub
cmpsl
mov
dec
xchg
pop
movsl
dec
ret
mov
and
pop
mov
fsubrl
rcll
inc
xor
scas
lcall
lret
push
int3
enter
mov
dec
dec
and
cli
ja
lods
or
jno
es
frstor
fidivrs
les
in
mov
insb
push
jle
xlat
jge
bound
jnp
jne
or
xor
das
shll
je
or
iret
jnp
mov
imul
aam
cmpsb
iret
and
dec
sahf
xlat
dec
sub
jmp
fcompl
xor
roll
fwait
pop
mov
cmpsl
xchg
add
and
inc
gs
mov
stos
js
daa
or
mov
mov
jle
and
pop
pop
out
xchg
pushl
mov
sbb
divl
dec
daa
clc
push
ret
neg
xor
leave
jbe
jp
cmpb
dec
jb
add
hlt
jno
imul
dec
mov
cs
inc
cmpsb
and
repz
sub
popf
mov
stc
mov
jbe
stos
mov
dec
lret
jl
xchg
dec
push
adc
and
bound
cmp
cmc
stos
pop
or
lahf
in
sub
or
mov
dec
aad
loope
push
or
xchg
pop
inc
hlt
leave
in
adc
adc
xor
or
add
sub
push
cmp
ror
fistl
push
in
dec
div
sub
jmp
jecxz
cmp
xchg
iret
xlat
pop
mov
xor
aam
rcr
push
jl
ja,pn
iret
shl
inc
xchg
shlb
adc
xchg
data16
xchg
imul
mov
xchg
sbb
psubd
dec
test
push
data16
push
dec
add
push
popf
add
imul
movsl
in
mov
mov
mov
jb
inc
pop
mov
mov
xlat
dec
push
data16
inc
jb
mov
pop
push
jg
push
adcb
and
sub
adcb
inc
lods
xchg
in
push
mov
icebp
or
sbb
or
and
push
mov
aaa
cmp
pop
js
xchg
ret
fdiv
or
repz
push
add
cmpsb
xor
incl
xchg
loope
xor
mov
in
daa
inc
rorl
sbb
sub
xchg
daa
clc
xorl
mov
jnp
in
mov
push
movsb
mov
lahf
jecxz
mov
std
jg
and
inc
xor
outsb
leave
push
add
iret
int3
push
push
je,pn
sub
mov
jno
xor
mov
xchg
shll
daa
fcomp
cmp
jbe
into
sarb
fwait
xchg
out
jo
xchg
and
aaa
loope
mov
movsl
jo
mov
xor
test
data16
mov
sbb
push
xor
xchg
in
sbb
je
cld
jecxz
xor
jp
xchg
push
sub
mov
push
out
pop
outsl
sbb
cmp
lret
aaa
xchg
rclb
sub
hlt
xchg
divl
mov
in
add
mov
test
and
push
dec
rep
pop
mov
and
xor
pusha
mov
push
mov
loop
lock
push
push
lods
xlat
xor
loope
aaa
arpl
push
dec
mov
sarl
test
add
or
out
loop
add
cmpl
and
mov
xchg
mov
cmp
mov
mov
inc
add
fistpll
pushf
xor
or
fwait
jne
outsl
mov
or
shll
push
sbb
orl
and
inc
or
jecxz
cmovne
and
in
repz
cmc
push
cmp
xchg
movsb
sahf
frstor
or
push
pop
daa
xorb
loop
sbb
out
hlt
xor
xchg
loope
in
mov
clc
je
push
add
pop
dec
cmpsl
in
int3
xchg
fstl
loop
int3
leave
push
inc
or
stc
jl
inc
mov
mov
int3
mov
pop
jns
pop
mov
jl
popa
sbb
mov
mov
ret
enter
add
mov
imul
fdivrp
lods
sub
sbb
insl
or
fildll
push
fidivrl
ljmp
pushf
in
jo
pop
sahf
mov
adc
xchg
inc
push
std
outsl
fbstp
lods
testb
push
mov
les
mov
insb
push
adc
dec
lds
sbb
fnstsw
push
jns,pt
xor
adc
mov
jl
mov
pushf
cmp
fmull
call
sahf
sarb
sub
jmp
inc
mov
jge
lds
aaa
dec
sbb
out
cltd
scas
push
jmp
and
mov
mov
xor
pop
loope
sahf
ljmp
mov
cmp
mov
icebp
jae
jbe
push
andl
mov
cld
inc
lods
call
push
mov
add
aad
imul
push
je
adc
rclb
cmp
sahf
fwait
imul
mov
fwait
lock
lock
popa
and
xchg
mov
std
and
inc
out
mov
jne
adc
xor
jne
push
aam
fisubrs
mov
out
and
cmp
sub
mov
or
arpl
movsb
fisttpll
fstl
inc
mov
or
scas
jne
jb
sub
lea
jp
out
mov
push
fcoml
shll
jns
xchg
cmp
cmc
xchg
leave
cmp
xchg
mov
mov
cmp
add
dec
inc
int
clc
mov
and
xchg
nop
pop
push
cmp
sub
repz
xorb
jge
cmp
and
adc
push
into
test
adc
cmc
ret
fcomip
and
jns
or
push
mov
js
and
mov
pop
xchg
xlat
fdiv
mov
jge
ficoms
xor
jb
push
sbb
push
adc
std
iret
xor
shrl
mov
xchg
xor
and
inc
cmp
mov
rcrb
repnz
sti
mov
mov
dec
testb
fnstenv
aam
icebp
movsb
add
mov
retw
xchg
test
fsubp
out
insb
cmp
adc
adc
fsubr
jns
and
cmpsl
out
pop
jne
jno
push
cmp
sub
add
rcrb
jns
pop
xor
jbe
mov
lcall
pop
xor
jg
sbb
fcoml
ss
popf
or
lret
adc
adc
xchg
cmp
mov
inc
xchg
xchg
adc
setae
sti
popa
xchg
int
pop
pop
cltd
int3
loope
lahf
cmp
push
je
fwait
cmp
into
in
pop
int
jl
lods
sahf
ret
sub
sti
xchg
sub
xor
jecxz
arpl
ds
push
and
test
pop
addr16
add
mov
test
add
pop
push
into
xchg
cmp
aas
incl
rep
ja
mov
push
in
leave
xchg
cmpsl
in
nop
inc
xchg
jg
pop
jp
mov
dec
test
mov
mov
pushl
xor
repz
test
gs
clc
rol
fs
jnp
mov
into
movsb
xor
mov
bound
cs
cmp
mov
xchg
xor
or
xlat
pop
std
jge
pop
fcomps
jg
mov
sbb
aas
mov
insb
imul
mov
fsubr
nop
push
fucomip
ds
sub
adc
ret
clc
dec
inc
ret
test
xor
movsb
test
cmp
loop
sbb
mov
arpl
xchg
dec
call
out
sahf
movsb
xchg
call
jb
test
pop
call
icebp
lea
push
sar
adc
bound
addr16
mov
js
xor
add
mov
xor
std
sub
or
mov
repz
xchg
mov
stc
inc
pop
mov
aam
in
mov
lock
jl
test
pop
xchg
xlat
pusha
xor
test
mov
fbld
imulb
rcll
push
inc
mov
je
ljmp
gs
clc
outsl
cld
xor
mov
mov
stc
mov
das
gs
stos
jmp
andb
or
scas
jbe
std
sbb
arpl
mov
jp
rolb
shll
lcall
test
decl
pop
inc
pop
pop
test
fcmovnu
cmp
mov
push
int
fldenv
mov
test
loopne
out
sub
std
shll
push
xor
dec
and
xlat
scas
or
lods
hlt
mov
cmp
dec
cmp
push
and
mov
dec
rcl
loope
testl
jmp
scas
fiaddl
mov
lret
lahf
pop
adc
in
jl
fcomi
jbe
jns
pop
subb
shr
xchg
jmp
je
lret
add
push
or
mov
out
cwtl
xchg
in
jl
addr16
mov
daa
into
xchg
mov
mov
mov
jns
cmp
das
ret
mov
pushf
lahf
pop
jb
jbe
js
ss
jo
or
push
mov
add
movsb
mov
stos
call
icebp
rclb
mov
jmp
in
pop
out
lcall
xor
xchg
aad
mov
push
clc
sub
cltd
fbld
jno
sub
pop
clc
xchg
lods
rclb
iret
popa
jl
imul
sbb
cmp
add
and
test
or
jo
mov
mov
adc
cwtl
test
add
mov
push
aad
jb
cmp
pop
jle
ror
jb
jmp
cmpsl
popf
lahf
xchg
pop
movsb
mov
pop
dec
and
test
inc
shl
mov
push
outsb
inc
mov
ja
gs
dec
jl
xchg
sar
mov
sub
push
xor
leave
push
or
mov
nop
xor
push
mov
lock
cmp
sbb
psrad
jbe
sbb
xchg
std
cld
hlt
adcb
jno
popf
stc
ja
int3
cmp
lcall
adc
cwtl
xor
jne
sub
arpl
sarb
mov
test
mov
insl
xchg
push
js
fistpll
repnz
jmp
pop
outsb
addb
mov
xor
jmp
cmpsb
xchg
lret
dec
mov
movsl
xchg
dec
mov
add
inc
popa
bound
pop
bound
int
roll
mov
rol
ss
test
loop
push
cmpsl
sbb
cmp
mov
fs
mov
loope
js
fsub
cs
ret
fisubs
gs
ds
jmp
or
rcll
jmp
mov
cwtl
addr16
in
leave
rol
sbb
inc
ljmp
test
imul
int
sbb
dec
push
dec
scas
fwait
jbe
in
insl
inc
popa
fisttpll
pushf
dec
outsb
pop
jecxz
mov
dec
gs
xor
sub
mov
mov
icebp
clc
inc
pop
mov
xchg
pop
mov
pop
out
imull
pop
in
cmp
iret
outsb
mov
jb
pop
sbb
insb
ret
fisubrs
pop
das
aaa
add
std
scas
push
pusha
dec
fstl
stc
mov
mov
lret
sub
dec
xor
nop
loope
lcall
or
ds
xchg
lcall
data16
jp
xchg
adc
or
push
aas
xor
repnz
dec
jle
and
adc
out
pop
nop
fcmovne
ss
and
mov
fistpl
dec
ss
jae
out
jg
adc
jbe
sub
mov
jmp
or
aam
pop
cmp
adc
jle
cmp
cmc
psllq
aaa
mov
enter
push
iret
pop
arpl
ja
test
lods
mov
in
jmp
mov
scas
pop
ja
arpl
xchg
jne
in
movsb
adc
push
cmpsb
mov
dec
out
push
mov
dec
popf
in
push
stos
cmc
mov
cmp
sub
jmp
cs
std
jge
shll
ja
inc
xchg
mov
jae
lret
loopne
cmp
xor
push
cld
push
dec
loop
enter
mov
out
jg
xor
add
xchg
jecxz
movl
add
das
out
outsl
and
fidivrs
dec
jbe
mov
bound
pushf
addr16
xorb
jg
shll
adc
push
pop
or
cmp
inc
in
sub
jmp
xor
jl
cmp
dec
cmp
cmpsl
or
add
fidivl
gs
aad
arpl
inc
ja
jg
sub
clc
dec
les
jg
inc
scas
popf
popa
or
or
inc
mov
fwait
fwait
mov
test
imull
idivb
jg
push
push
stos
push
inc
inc
aaa
data16
fwait
shr
popl
stos
pop
sbb
test
ja
cmpsl
insb
mov
orb
push
fcompl
movsl
leave
bndldx
push
mov
dec
add
mov
lcall
lret
inc
arpl
jnp
popf
sbb
dec
stos
int3
push
movsb
or
call
add
loop
sbb
fstpt
xchg
push
popa
int3
mov
lahf
arpl
je
jmp
fisttpll
outsb
mov
xchg
pop
cld
ja
lds
loop
inc
mov
and
jno
sub
imul
in
xlat
xlat
xor
jg
inc
iret
push
add
mov
xchg
pop
xlat
sbb
sub
adc
or
push
sbbb
cli
clc
sti
jecxz
pop
xor
push
push
jb
sbbb
data16
cltd
ja
in
mov
imul
xchg
aaa
repz
out
cmovg
dec
xchg
xor
mov
mov
xchg
iret
xor
aaa
push
dec
dec
mov
fstps
sbb
fisttps
cmpsb
push
push
int3
orl
cld
aad
cmp
stc
js
dec
fmulp
lods
out
icebp
js
inc
push
or
pop
shrb
in
pop
dec
mov
mov
jo
in
mov
push
mov
jmp
cmpsl
xor
icebp
aaa
aad
cli
or
fdivr
fs
and
cmpsl
push
dec
push
aas
pop
lahf
mov
mov
jnp
hlt
andb
xor
inc
movsl
and
ja
cmpsl
sbb
sbb
sub
js
jo
mov
push
fiaddl
jnp,pn
cmpsl
pusha
outsb
mov
imul
pop
divl
inc
fsubs
inc
cmp
fildll
xchg
jo
ret
jp
enter
lcall
pusha
lret
addr16
jmp
in
call
add
mov
lods
arpl
jnp
xor
mov
mov
int
ss
cmp
sahf
push
stc
jne
test
leave
mov
inc
ja
mov
jo
pushf
jno
dec
xor
fstl
inc
std
notl
loopne
push
jb
add
push
pause
outsb
inc
ljmp
gs
mov
popf
insl
push
dec
pop
cs
add
loopne
mov
es
out
mov
call
mov
cld
in
cwtl
lock
mov
cmp
insb
outsb
ret
fnstenv
cmc
and
scas
fisttpll
xchg
jns
pop
fcomi
fisttps
mov
jne
push
inc
push
jecxz
add
mov
jno
popa
sbb
mov
sti
lods
mov
cmpsb
into
push
les
add
mov
and
sti
push
aaa
shrb
xchg
sbb
dec
es
and
and
pushf
lahf
fistpll
ljmp
clc
lret
rcrl
jb
std
xor
or
gs
mov
cmp
ds
cltd
lret
js
mov
add
xor
repz
stc
imul
rclb
or
mov
cld
or
sbb
lds
or
pop
pusha
stc
xchg
mov
push
adc
dec
lret
mov
and
cmp
or
mov
sti
arpl
push
mov
or
jmp
inc
push
pushf
loop
push
cltd
sahf
lcall
xor
adc
movsl
test
sub
dec
mov
dec
mov
cmp
mov
xchg
dec
bound
fxch
push
movsl
push
pop
mov
mov
je
xchg
pop
push
dec
pop
test
into
sub
call
adcl
imul
jno
and
add
mov
push
shl
adc
dec
int3
scas
shlb
aam
mov
ljmp
lret
mov
lret
mov
fisttps
sub
das
lods
lret
cmp
xchg
pop
aaa
loope
ljmp
outsb
cmp
xor
andl
nop
std
out
push
sub
sub
lods
rcrl
pop
mov
mov
sahf
sbbl
loope
pusha
pop
cmp
or
add
aas
nop
mov
or
loope
out
xor
dec
cli
hlt
dec
pop
push
lds
movsb
jb
dec
push
das
inc
loop
jge
pop
subps
aam
lret
xchg
and
dec
xchg
xor
lods
loop
nop
mov
lea
push
das
xchg
dec
lea
iret
out
int3
jne
push
fcomip
in
into
adc
fwait
cmpsb
imul
or
clc
mov
lods
or
sub
movsb
call
jo
inc
aas
and
bnd
in
adc
jb
pop
inc
pop
sub
mov
jle
ss
xor
adc
pop
push
in
addb
mov
lret
mov
ljmp
mov
stos
dec
jo
adc
fs
arpl
fcom
and
fidivrl
mov
adc
out
cmp
fidivrl
mov
in
dec
or
fwait
enter
xor
or
clc
mov
insl
jbe
push
mov
loop
push
or
js
mov
rorl
jno
xor
fs
xchg
imul
push
pusha
testb
cli
or
fwait
sbbl
fiadds
dec
jnp
push
jl
cmp
xchg
xor
jle
gs
sub
mov
out
mov
dec
and
push
xor
insl
mov
repz
cs
jno
jecxz
pusha
push
rcrl
stos
pushf
out
push
or
bound
push
sub
mov
ds
pop
or
movsl
fcmovnbe
in
pop
sub
xchg
push
or
or
fsubs
inc
xchg
nop
ret
xlat
rorb
sbb
fists
into
repz
cmpsb
repz
mov
add
adc
aaa
push
pop
in
sbb
fidivl
mov
sbb
or
aam
dec
or
inc
xor
lret
ret
sbb
pop
sarl
sub
inc
nop
jecxz
cwtl
pop
loop
xor
mov
mov
in
pop
pop
fdivl
jl
in
push
outsb
inc
push
sub
mov
and
sub
mov
popf
lahf
rorl
stc
xorb
add
enter
dec
xchg
dec
pop
sub
xor
sub
shrl
js
ja
fwait
xchg
popa
insb
jg
xchg
add
mov
clc
les
cmp
nop
imul
dec
in
je
adc
mov
or
pop
add
dec
out
pop
push
lea
push
inc
sub
pop
lcall
jbe
cmp
and
and
or
ljmp
stos
xlat
insb
hlt
in
inc
data16
mov
daa
in
stos
inc
outsl
fwait
xchg
stos
xlat
dec
aas
mov
adc
cmp
sub
imul
xchg
jmp
xchg
call
adc
cltd
stos
pop
cmp
data16
sub
repz
push
inc
iret
enter
xchg
cmp
mov
ss
cmp
cmp
push
repnz
add
push
push
bound
inc
cmpsl
fidivrl
xor
fwait
cmp
shlb
pusha
xor
in
testl
pusha
add
icebp
adc
in
inc
pop
test
cwtl
ja
xchg
cwtl
pop
or
sbb
adc
data16
stos
jno
add
inc
jne
stc
leave
in
mov
decb
jne
popf
fisubs
mov
mov
sub
hlt
jecxz
imul
add
add
movsb
push
cmpsl
inc
mov
xor
sbb
cmp
fucomi
mov
inc
jmp
lock
out
fstl
fwait
push
sti
mov
fsub
pushf
out
je
test
push
xchg
fwait
xor
jns
lds
ds
arpl
movsl
ficoml
mov
jo
dec
mov
jno
repz
nop
mov
jo
xchg
adc
push
dec
jno
pop
push
and
cmpsl
dec
or
push
or
jnp
fcmovu
das
jmp
mov
in
dec
stc
jns
fsubs
icebp
fmul
jnp
sub
mov
pop
sarb
inc
sub
addr16
sub
sub
iret
rcll
insb
insb
scas
arpl
push
les
inc
and
xor
mov
push
lahf
xchg
jp
jb
cltd
mov
xchg
fdivrl
ja
adc
cmpsb
or
pop
pop
jl
xchg
fs
stos
jp
mov
insl
sbb
cmp
aad
mov
xchg
mov
mov
adc
cmpsl
mov
mov
sbb
js
jp
sub
dec
xchg
nop
ljmp
push
jmp
adc
js
scas
daa
mov
das
inc
fisttps
aam
rol
mov
xlat
shrb
sbb
out
cs
mov
arpl
mov
fcompl
stc
adc
cmp
mov
mov
dec
mov
cvtdq2ps
push
mov
mov
jbe
out
sar
xor
dec
pop
pop
arpl
inc
addr16
lea
sahf
fcoms
daa
pop
dec
lock
mov
rcll
out
adc
sarl
into
out
out
sbb
imul
int
add
adc
ret
int
dec
rol
cmp
dec
jnp
inc
sbb
jmp
popf
test
jns
xchg
cmpsb
push
cmp
hlt
mov
jbe
and
inc
jle
movsl
or
int3
pushf
cmp
imull
mov
jecxz
les
rcll
fidivrl
cli
or
adc
cmp
fs
push
xchg
rol
cmp
jmp
add
add
mov
sbb
add
xchg
inc
sti
ss
or
add
loopne
in
cmp
loop
mov
xchg
insb
sub
es
sahf
movsb
mov
iret
inc
xor
int3
mov
bound
std
movntq
test
push
sbb
insb
mov
js
dec
cld
fildll
inc
mov
adc
xchg
add
push
movsb
es
xchg
adc
scas
movsl
in
loop
inc
js
shlb
in
sti
fiadds
test
push
dec
dec
pushf
or
ret
shl
shl
cmpsb
fdivs
or
push
mov
lds
ret
mov
shll
dec
pop
sbb
lcall
nop
cmp
out
je
jb
cs
shlb
hlt
cmp
xor
cltd
jmp
cmp
nop
sbb
mov
shl
sarb
fnsave
jg
enter
movsb
sti
in
into
popa
xor
sbb
aaa
outsl
jge
insl
push
clc
cmc
pop
test
push
push
fnstenv
popa
jbe
outsb
push
xchg
cmp
and
or
pusha
loope
jp
pop
add
or
mov
jnp
std
adc
mov
or
in
xchg
push
loope
pop
mov
or
jmp
push
js
xor
dec
add
out
icebp
mov
xchg
imul
pop
or
dec
lret
dec
lods
jl
jmp
adc
cmp
negb
fbld
lret
stos
bound
sbb
pop
inc
pandn
daa
insl
rcrb
xor
decb
in
inc
mov
adc
push
jne
jge
loopne
sbb
das
cmp
int3
and
and
lahf
fdivs
sub
and
les
or
xchg
mov
mov
lds
shrb
int
mov
pop
pop
shrl
js
fidivl
pusha
mov
clc
vpcmpgtw
fs
add
mov
test
out
and
add
add
mov
inc
stos
jmp
jne
ds
cmp
outsl
push
loop
jmp
jne
cmp
dec
dec
mov
loop
insl
cld
adc
test
mulb
gs
dec
hlt
into
lcall
jb
clc
aad
add
xor
out
push
add
pop
pop
pop
and
jae
les
mov
push
pop
leave
aam
cmp
dec
mov
scas
enter
shll
dec
std
shll
mov
mov
sbb
pop
push
scas
mov
clc
dec
dec
rcl
int3
inc
hlt
mov
xchg
scas
dec
inc
push
mov
dec
cmp
retw
jns
and
cmp
loope
cmp
adc
sub
repnz
popl
dec
cmpsl
out
pop
aam
cmp
cmp
clc
xchg
mov
mov
loop
rolb
and
jns
mov
notl
stc
inc
push
mov
or
or
push
nop
scas
adc
out
jecxz
icebp
and
std
and
lods
outsl
test
movb
pop
mov
jp
test
xor
xchg
cmp
mov
push
xor
adcb
and
inc
sub
loopne
mov
rol
pop
jns
dec
jmp
pmaddwd
fldcw
push
mov
mov
jp
dec
push
mov
aam
cmp
jae
in
dec
inc
mov
arpl
in
idivb
int3
xor
inc
mov
inc
push
mov
fbld
or
icebp
or
mov
test
mov
iret
jg
notl
mov
clc
in
fucomi
sbb
dec
add
mov
daa
dec
adc
add
cmp
pop
inc
testl
aaa
hlt
mov
xor
mov
lcall
pop
cmp
mul
adc
enter
pushf
push
lcall
daa
jno
addr16
test
je
ja
cmp
mov
call
mov
cmpsb
jnp
hlt
pop
enter
mov
and
push
jae
pop
push
das
mov
mov
rcll
cli
shl
mov
xchg
ja
xor
push
and
add
and
push
ret
nop
lods
shrl
pop
fldenv
jl
mov
jmp
outsl
and
dec
cmp
cmp
mul
cmp
mov
call
dec
pop
int
pop
xor
and
jp
jae
mov
jecxz
mov
std
and
and
aad
xor
fildl
mov
inc
daa
inc
xor
push
insb
jns
adc
jmp
add
sti
ljmp
or
mov
clc
ja
xchg
pop
fadd
scas
sbbb
inc
bound
sub
nop
lea
push
jo
push
pop
outsb
cli
mov
pop
add
dec
inc
rol
pushl
inc
iret
jl
ljmp
sahf
xchg
daa
pop
sbb
clc
inc
shl
xor
add
adc
dec
jno
fistpl
scas
test
mov
xor
lds
inc
mov
lods
test
data16
mov
imul
jl
pop
imul
cltd
mov
inc
adcb
mov
cmp
fidivl
jg
fnclex
cld
sti
pop
dec
pop
ljmp
test
dec
movsb
add
push
and
clc
sbb
aam
pusha
xchg
shll
mov
sub
shrb
dec
jge
sti
xor
pop
stc
dec
loopne
mov
call
aaa
lcall
and
movhlps
lds
leave
jp
sub
mov
mov
lods
in
push
adc
ljmp
bound
jne
dec
test
pop
icebp
movsb
iret
hlt
fdivl
arpl
cmpsb
enter
cmpsb
call
dec
xchg
mov
jmp
push
push
push
lock
lods
push
mov
nop
stc
imul
or
push
sub
test
pop
mov
and
rorl
mov
ficomps
jge
enter
xchg
mov
into
in
ret
cmp
pop
in
gs
cmpsb
imul
mov
push
in
push
mov
pop
mov
push
adc
imul
clc
cmp
mov
xchg
and
lret
dec
jno
mov
fwait
mov
push
cmp
inc
xor
inc
xor
add
sbb
lahf
xchg
pusha
dec
daa
dec
je
ss
pop
jl
lds
int
ret
push
add
repnz
outsb
adc
out
push
push
mov
jns
sub
std
pop
dec
jp
sbb
jne
add
outsl
addl
insb
mov
outsl
and
jnp
out
pop
pop
jmp
mov
xlat
in
lea
int3
hlt
notb
ss
push
lods
mov
repz
jle
imul
movsl
inc
ds
cmp
shll
mov
pop
mov
pop
aad
in
inc
out
sub
dec
call
pop
es
adc
or
test
xchg
inc
push
sbb
fwait
jo
sti
arpl
mov
jge
test
inc
dec
js
cld
fstps
or
in
jns
mov
nop
cmc
mov
jl
jns
gs
inc
push
pop
pop
mov
push
pop
test
sbb
mov
sub
pop
out
daa
setg
inc
movb
into
cmp
jae
insb
test
aas
imul
imul
mov
jnp
dec
dec
dec
mov
sbb
mov
lods
testb
and
mov
aas
mov
pop
popa
hlt
and
or
sub
mov
ljmp
xchg
cmc
imul
pop
push
fiaddl
lock
pop
xor
jno
cld
popf
cltd
in
scas
add
and
jp
shlb
das
mov
xlat
fs
sub
inc
inc
pop
push
and
les
imull
mov
xchg
addr16
add
xor
jb
in
lea
jno
and
stos
pusha
pop
enter
int3
test
jl
jne
lods
insl
push
sub
add
in
fdivrs
sub
insl
or
jle
sub
lods
mov
push
stc
inc
test
or
dec
and
dec
mov
jmp
push
fmul
adc
jge
xor
jg
shll
mov
dec
xchg
cmp
lods
in
inc
fs
test
cmp
ret
fisttpl
pop
sub
or
test
test
jno
ret
pusha
out
mov
std
fwait
loop
jmp
cld
leave
xchg
pop
mov
in
iret
adc
dec
popf
mov
mov
adc
int3
xor
sbb
cwtl
mov
cmp
lock
ljmp
mov
lret
sbb
jne
xchg
sbb
mov
or
ds
add
adc
and
mov
add
and
loop
out
xchg
lods
in
sbb
testb
cmp
pop
in
fnsave
cwtl
mov
xchg
shll
dec
test
jecxz
jnp
cmp
arpl
pop
fwait
int
cmpsl
jo
cltd
int3
shrb
aam
lahf
arpl
or
jns
mov
mov
fcmovb
lock
mov
fwait
xor
aam
dec
add
add
jmp
sbbb
or
mov
rcrb
in
jmp
mov
xchg
dec
or
daa
inc
xchg
mov
adc
aam
pushf
test
lods
xchg
shrl
shll
cmpsb
lds
pop
mov
andb
push
subb
mov
cltd
aaa
lret
mov
gs
jecxz
sti
adc
mov
pop
repnz
inc
stc
insl
pop
push
xor
add
popa
push
and
push
lret
pop
push
js
cwtl
insl
clc
incl
arpl
jle
call
ror
out
ret
xchg
jo
gs
test
xor
cmc
sarl
lahf
xor
xor
sti
jmp
fnstenv
xchg
or
jecxz
xor
xchg
and
std
insb
lds
xchg
push
mov
aad
cmp
mov
cwtl
jae
daa
icebp
mov
hlt
ret
mov
nop
lret
das
ret
insl
mov
hlt
cmp
repz
in
hlt
and
mov
cmp
mov
cmp
and
mov
sbb
ss
icebp
jmp
mov
cmp
out
sbbl
push
aad
sbb
fnstenv
scas
adc
add
in
fucomp
push
popf
jmp
cmc
sbb
xchg
aad
imul
and
pop
push
pop
into
push
xorb
mov
rcll
jb
jecxz
or
addr16
loopne
sub
lock
jnp
xchg
es
cmp
xchg
sbb
mov
sub
ds
mov
inc
pop
pop
addl
in
loop
xchg
cmpsl
adc
mov
insb
out
loopne
in
imul
lcall
outsl
pushf
rcll
xchg
push
aam
enter
pop
out
mov
decl
pop
popa
lret
inc
mov
clc
scas
bound
mov
xchg
and
cmp
in
pop
iret
xor
lcall
cli
mov
sub
and
sub
mov
adc
inc
dec
out
push
sahf
lret
incb
xor
sti
push
addr16
push
iret
jmp
inc
adc
lods
fdecstp
gs
xchg
out
cltd
pop
ja
int
js
lods
mov
and
fcomps
aam
aad
and
aam
inc
into
or
or
cmp
sbb
mov
pop
sub
inc
xchg
test
popf
pop
add
mov
sarl
mov
sbb
scas
push
mov
dec
sbb
push
or
cmp
insl
mov
inc
fmuls
test
stc
inc
jecxz
jg
jns
bound
inc
cli
xor
into
mov
aas
and
arpl
inc
dec
sbb
pop
mov
jb
test
add
fildll
fwait
popf
adc
push
adc
lds
mov
xor
out
mov
cltd
arpl
jns
in
ljmp
push
dec
mov
ds
dec
mov
cmp
jno
push
push
and
fbld
or
rep
or
cmp
lock
dec
mov
push
mov
aaa
out
aad
jmp
and
js
inc
jp
or
shlb
xor
inc
aam
add
lock
mov
and
repnz
xchg
or
cltd
cltd
ljmp
rcrl
daa
sbb
and
imul
push
fidivrs
sbb
cmc
stc
stc
xor
faddl
inc
cmp
int3
dec
in
push
xlat
mov
lahf
cltd
push
mov
dec
jmp
sub
mov
and
arpl
flds
stc
pop
mov
push
adc
xchg
clc
cs
mov
cmp
outsb
fwait
lods
sub
jle
lret
push
mov
jge
leave
icebp
out
mov
mov
bound
mov
rcll
mull
adc
jecxz
jno
cmpsl
mov
sub
sti
sbbl
lcall
adc
xchg
lods
pop
mov
fcompl
xchg
and
rorb
sub
dec
popa
js
jno
movsb
mov
pop
mov
fisttps
enter
outsb
ljmp
popa
dec
mov
cltd
ret
mov
adc
enter
cs
lds
sbb
sbb
pop
int
adc
jecxz
inc
jne
daa
data16
pop
mov
repz
popa
jnp
jl
out
and
jnp
call
sub
xor
pop
push
subb
dec
pop
cmp
adc
aaa
sbb
or
ss
out
and
imul
push
gs
push
je
xor
out
push
dec
dec
out
ret
inc
cli
xchg
mov
and
ljmp
pop
jnp
mov
push
pop
jl
inc
inc
mov
push
and
push
out
div
out
lock
in
push
inc
loope
mov
dec
or
les
loope
insb
mov
fildll
mov
and
add
fadds
cmp
mov
jge
sar
insb
shll
pop
adc
call
test
test
or
sub
xchg
jo,pn
scas
add
ds
mov
sub
je
imul
and
xor
sbb
and
sbb
test
test
inc
lds
sbb
fdivrs
test
aaa
andl
push
jo
pop
icebp
pusha
stc
inc
add
rolb
in
dec
mov
lea
jl
mov
lahf
mov
cmc
fldcw
xor
jne
jo
mov
ret
push
mov
sbb
inc
inc
cmp
jbe
push
lea
cmpsl
roll
pop
in
cmp
aaa
in
sbb
bound
jg
adc
push
mov
adc
jecxz
inc
xor
xchg
outsb
inc
xchg
pop
xchg
jle
pop
mov
test
and
mov
and
adc
push
pop
les
int3
push
test
in
jle
sti
subb
pop
cwtl
add
inc
mov
sbb
mov
push
out
inc
jne
ljmp
dec
out
adc
mov
in
cltd
jg
scas
pusha
xchg
push
cltd
inc
mov
mov
jnp
push
mov
imul
out
movl
mov
mov
sbb
jle
adc
rep
pop
fbstp
data16
in
sahf
push
mov
push
sbb
xor
imul
inc
cmp
adc
mov
imull
cmovle
or
cmpl
inc
adc
icebp
inc
xchg
lcall
sub
bound
loopne
xchg
mov
xchg
leave
pop
jp
xor
add
xchg
mov
test
mov
rorl
movsl
xchg
adc
mov
mull
int
daa
jns
sbb
sbb
int
mov
xchg
inc
mov
shl
inc
fdivrl
outsb
mov
test
dec
mov
dec
mov
and
repz
pop
insb
loop
mov
xor
ficoml
mov
pusha
adc
dec
dec
add
and
imul
inc
pop
aam
gs
int
stc
stos
into
xchg
jp
int
call
mov
xchg
pop
das
pop
int
imul
jae
in
push
lock
dec
mov
popa
jge
adc
loope
fnstcw
out
jg
push
jl
test
cmp
roll
add
data16
stc
loopne
xchg
gs
jp
adc
stos
cli
pop
sub
add
subl
xor
jp
test
and
lods
clc
pop
sub
cmpsl
in
mov
out
sub
mov
dec
data16
lea
mov
sbb
sbb
sub
xor
mov
mov
jle
jae
rcl
jmp
mov
xor
or
loop
jns
icebp
cs
inc
cmpsb
push
cli
mov
mov
out
mov
dec
pop
cli
xchg
mov
fdivrl
addr16
and
and
call
aam
jmp
pop
inc
ficompl
fldl
sti
or
mov
jmp
loopne
scas
arpl
pusha
mov
cmp
fidivrl
shrl
ret
pop
pop
sahf
int3
dec
fwait
mov
test
sub
adc
push
push
pop
cltd
popf
cmp
mov
sub
dec
jge
jo
movsb
fwait
in
inc
and
jle
into
cli
ja
inc
adc
fucom
xor
push
jmp
xlat
je
jnp
mov
xor
push
int3
push
pop
add
ljmp
out
push
testb
xor
ret
lret
xchg
push
scas
ja
das
xor
lds
cli
mov
xchg
xchg
mov
lods
out
ja
jge
cld
cld
mov
dec
mov
pop
and
add
mov
jle
mov
jl
popa
add
xlat
aam
lods
push
xchg
cmpsl
leave
aas
mov
push
dec
inc
sub
inc
shl
sbbl
dec
fimuls
lea
sti
add
push
shrb
shll
push
cmp
cltd
arpl
sub
pop
out
mov
ficomps
add
insl
jo
xor
hlt
jecxz
lock
jge
push
dec
jge
outsl
cmp
pusha
aas
es
mov
pop
inc
dec
mov
imul
and
jns
scas
stc
or
fiadds
sbb
inc
add
mov
sbb
jns
mov
lea
jmp
test
aaa
inc
in
cmp
cmp
mov
xor
stos
sbb
pop
mov
pop
pop
cld
add
mov
lods
mov
pop
pop
stc
roll
mov
push
or
mov
in
mov
fsubl
icebp
shll
push
fs
xchg
loopne
lahf
xchg
pop
cmpsb
pop
xchg
lcall
jle
imul
loopne
cld
jge
test
mov
jns
loopne
inc
pop
jmp
test
in
out
js
cld
fdiv
out
lods
repnz
enter
xlat
push
jno
pop
les
mov
cmp
mov
xor
sarb
cmp
sbb
push
mov
or
fwait
jp
sbb
out
es
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
push
ja
cmp
add
adc
xchg
push
mov
pushf
in
mov
popa
bound
pop
bound
jecxz
sbb
push
fidivrl
xor
xor
adc
pop
dec
pusha
mov
repz
xchg
mov
shrl
push
sbb
mov
aam
int3
pushf
pop
add
xor
inc
je
jl
or
sarb
and
imul
or
addl
and
stc
inc
fucomi
repz
xorl
mov
jb
jecxz
add
fstp
jnp
pop
pop
mov
pop
jbe
shl
push
scas
aaa
movsl
pushf
sub
jbe
or
subb
pop
mov
mov
sbb
gs
and
in
imul
stc
push
mov
inc
jge
fildl
test
cwtl
mov
or
pop
jno
subb
mov
ljmp
leave
mov
mov
js
push
sub
sbb
pop
loope
lret
jle
or
pop
arpl
pop
cs
push
xchg
and
jns
push
jg
nop
adc
sahf
aad
xchg
mov
lea
pop
dec
pop
addr16
cltd
or
push
das
and
lret
dec
push
xor
shrb
inc
add
inc
sub
xor
int
stos
cs
aas
cs
and
sbb
pop
sbb
mov
and
lods
adc
mov
test
ja
mov
xchg
push
test
cld
daa
inc
inc
fbld
jmp
mov
nop
std
sbb
rolb
xor
dec
xor
lcall
das
lret
sbb
movsb
orb
mov
push
fwait
pop
dec
cmp
fnstsw
ret
add
adc
sub
stos
sub
call
mov
test
ljmp
mov
call
add
xchg
fwait
in
aaa
shl
outsb
cmp
popf
pop
pop
add
jmp
push
cmp
push
in
insl
xchg
fisubs
divb
out
jno
fbstp
adc
jo
cltd
lock
hlt
fwait
cmpsb
inc
xor
and
cmp
sub
mov
jae
mov
das
jne
push
aas
scas
xchg
test
adc
in
bnd
sub
sbb
pop
push
xchg
or
movsb
xor
out
xor
push
ljmp
dec
inc
mov
fsubl
push
frstor
xchg
dec
int
icebp
or
das
push
cmp
inc
lds
popa
in
adc
cmc
insb
cmpb
fstps
adc
dec
dec
lret
jl
dec
ja
cmp
jne
ret
jno
jge
faddl
ljmp
cmp
in
xorl
jnp
sti
or
mov
push
ret
cmp
sbb
or
cltd
repz
mov
lods
push
cmp
hlt
lret
jb
add
push
fs
sub
stc
sbb
cmp
loop
test
scas
jbe
jns
hlt
jbe
cs
add
sbb
jne
dec
sbb
std
xor
xchg
loop
cmp
xor
sar
lea
flds
sbb
stos
push
push
gs
stos
lret
xor
lods
cmpsl
imul
push
fdivs
inc
lret
decb
and
jae
data16
out
cmp
lods
inc
mov
ljmp
cmp
out
inc
push
push
jmp
or
and
adc
inc
cltd
pusha
dec
je
gs
in
xchg
rclb
fsubr
inc
pop
idiv
mov
xchg
outsb
sbb
jg
aaa
shlb
mov
jb
sahf
jno
sti
mov
add
outsb
out
int3
mov
jne
and
fsubrs
sarb
jmp
cltd
pop
mov
and
bound
test
je
cmp
add
add
clc
sbb
cli
imul
mov
and
lret
in
test
sahf
mov
sub
cwtl
roll
loopne
mov
pop
add
mov
sbb
cmp
shlb
or
out
mov
mov
mov
push
mov
xor
insb
flds
pop
push
add
pop
xor
push
jo
into
or
push
xor
sbb
sbb
aam
jmp
std
inc
sti
mov
mov
sbb
pop
clc
lret
ss
xchg
cmpsb
leave
mov
test
mov
hlt
mov
cmp
imul
jecxz
lods
dec
jbe
outsb
iret
ljmp
imul
mov
cmc
mov
and
outsl
inc
cmp
aad
cmp
mov
mov
lret
push
cmp
dec
icebp
mov
data16
xor
hlt
jg
add
mov
cmp
aas
inc
fisubs
insb
jmp
int
push
fcomi
xor
jl
ljmp
mov
aas
iret
mov
pop
sub
pop
fs
testl
ja
loop
or
pop
iret
sahf
jns
adc
test
mov
fisttpl
ror
mov
call
mov
jnp
neg
ret
mov
out
xchg
dec
sbb
add
push
or
fwait
out
std
sub
cmpsb
outsl
fisubl
cmc
xor
arpl
inc
imul
sub
xor
mov
xchg
inc
ret
sbb
dec
push
std
mov
dec
in
mov
movsb
mov
fldenv
pop
mov
pop
jmp
sahf
mov
es
sbb
xlat
push
mov
adc
pop
aad
leave
fidivs
ret
lret
mov
xchg
dec
jge
xchg
dec
paddw
icebp
or
pusha
imul
lret
lock
in
in
and
dec
xor
mov
jbe
sbb
addr16
sarb
xchg
cmp
mov
sub
inc
xor
in
mov
push
cmp
xchg
clc
adc
test
dec
mov
shrl
scas
int3
out
jecxz
and
or
pop
push
inc
mov
pop
test
rcr
mov
cli
ror
fs
jp
fldcw
jecxz
sahf
faddl
cli
fistpl
cli
test
mov
mov
and
adc
test
xor
mov
ja
lcall
push
jl
mov
push
int3
inc
fisttpl
in
push
out
mov
sahf
jnp
pop
mov
mov
sub
lods
movsl
jecxz
out
and
jae
out
test
loope
iret
jbe
inc
pop
xchg
imul
mov
sti
ficoml
je
cs
jnp
xchg
cmp
sbb
sbbb
rorb
xchg
xchg
cmp
sarl
or
stos
inc
pop
xlat
jecxz
shlb
adc
jecxz
ja
test
xorl
jge
xchg
push
cli
inc
xchg
mov
push
cld
iret
dec
mov
push
pop
mov
push
addr16
int
dec
push
xor
fstl
out
xlat
lds
js
pop
fnstenv
adcl
gs
in
jecxz
xor
les
push
pop
rorl
or
hlt
pop
in
xor
loopne
mov
imull
ss
int
addr16
jl
push
lret
add
int3
test
and
loopne
xchg
xchg
cs
jge
pusha
push
lret
fs
push
mov
xor
out
movsb
xchg
lahf
mov
mov
fs
dec
bound
jae
mov
xor
jl
jle
push
push
imul
push
inc
jb
add
and
movsl
jp
insb
jne
xchg
gs
cmp
in
scas
pushf
push
xor
loop
mov
jno
jb
fistl
mov
jno
mov
mov
dec
daa
jp
mov
jmp
xor
outsl
cmpl
mov
ja,pt
xor
inc
cmp
stos
orl
andb
inc
xchg
mov
jg
push
mov
popf
xchg
addr16
outsb
add
ss
out
mov
adc
sub
xor
adc
xchg
cmp
repnz
mov
sahf
sbb
cltd
xchg
lods
jmp
mov
ljmp
xchg
lcall
pop
in
je
push
sbb
mov
cli
test
in
repz
inc
mov
mov
pop
xor
mov
js
push
mov
pop
je
mov
or
sbb
fstps
adc
mov
in
imul
mov
ret
cmp
mov
lahf
lret
xor
lock
sbb
imul
xlat
push
sahf
cmp
or
popa
mov
ljmp
cwtl
ret
mov
push
cli
xchg
pop
ds
mov
aaa
sub
bnd
lret
in
push
xchg
rcrb
shr
popa
ficompl
sti
lcall
movsl
jmp
mov
inc
adc
pushf
leave
push
or
xor
inc
and
lret
jbe
andb
mov
pop
fwait
movl
pop
lret
and
inc
sub
mov
scas
adc
loopne
into
les
es
gs
adc
imul
adc
xchg
mov
cmc
ficomps
sub
mov
addr16
pop
ss
mov
arpl
clc
sub
dec
int
cmpsl
mov
push
fnsave
xchg
lds
jge
int3
rcl
out
nop
mov
lahf
and
cmc
iret
test
push
out
cmp
jbe
jecxz
les
lods
and
jle
outsl
pop
sbb
dec
add
andl
xchg
mov
inc
mov
ret
pop
addl
lcall
cmc
mov
pop
mov
in
arpl
out
or
add
or
push
jecxz
jge
xchg
sbb
inc
mov
jo
popl
xchg
jmp
xchg
stc
subb
lock
push
leave
sub
outsl
push
paddw
out
rorb
not
rcrl
bound
xor
fwait
std
stos
jl
jecxz
and
jb
test
iret
dec
adc
leave
adc
loopne
jmp
dec
add
sub
cld
addr16
mov
ss
xchg
pop
cmc
or
loop
mov
mov
inc
cmpb
cmc
adc
fidivrl
pop
loop
xor
gs
mov
outsb
and
gs
jl
incb
mov
or
xor
sarl
adc
xchg
rorb
xlat
sub
dec
notl
mov
lock
lods
out
jp
fmuls
out
pop
push
icebp
mov
and
or
inc
cmp
dec
xchg
fcomps
pop
sub
out
dec
mov
xchg
sahf
dec
scas
lret
out
add
add
add
xchg
cltd
cmp
push
addr16
scas
mov
testb
sub
xchg
es
mov
adc
dec
mov
popa
jmp
inc
xchg
ret
sub
in
mov
xchg
mov
cli
ss
lret
scas
mov
mov
sbbl
xchg
addb
shl
push
pop
shll
lret
cmpsb
and
hlt
lods
pop
pop
jge
add
jnp
nop
clc
push
pop
movsl
mov
int3
sub
sarb
lods
lock
sbb
sub
call
shr
shlb
dec
xchg
pop
jae
out
adc
mov
repz
enter
dec
mov
scas
mov
jno
js
mov
cli
xchg
push
sub
dec
xor
fs
dec
xchg
ljmp
shl
shrl
enter
imul
pop
movsw
push
mov
mov
xchg
fwait
jo
bswap
leave
fidivs
push
jo
repz
mov
mov
jns
or
pushf
mov
mov
mov
dec
data16
stc
fs
jnp
and
jg
pusha
inc
xlat
out
mov
pop
fildl
adc
das
pop
cmp
sarb
mov
rcrb
mov
out
push
or
dec
inc
dec
xchg
bound
test
lret
call
or
addb
sbb
lea
xchg
adc
pusha
add
sub
fmuls
sub
mov
mov
jns
test
add
icebp
rcrl
rol
aad
int3
and
jge
cmc
pop
inc
push
pop
jae
int
fnstcw
lods
dec
cmp
jo
pop
sbb
or
pop
lods
add
add
std
sbb
mov
cmp
xor
pop
daa
xchg
push
pop
or
mov
jbe
push
jbe
adc
xchg
sarb
in
leave
das
mov
clc
xchg
push
add
push
jg
mov
xlat
rol
js
ret
jae
icebp
mov
mov
sahf
dec
pop
outsl
call
fildll
das
rcll
pop
push
mov
leave
div
jecxz
pop
adc
lds
jns
dec
lret
into
inc
fidivl
add
fadd
or
and
cmp
push
xchg
pop
rol
jge
push
sub
or
fistpll
popa
push
xor
icebp
xor
stc
push
lret
push
cmp
dec
cmp
sbb
dec
and
test
and
cld
mov
loop
cs
sub
mov
pop
pop
mov
pop
jae
icebp
test
jo
divb
fnsave
call
jge
adc
sub
pop
jg
aad
push
and
ljmp
lcall
adc
ds
push
pop
call
pushf
jno
dec
clc
push
cltd
aad
pop
push
and
lret
mov
cmp
jnp
xor
and
mov
push
test
jae
lods
push
jmp
imul
cmp
outsl
ljmp
test
aas
nop
xchg
aas
inc
je
sbb
aas
ror
pushl
inc
lahf
rorb
sbb
sbb
adc
iret
adc
int
mov
push
repz
insl
lea
mov
adc
insb
inc
lret
sbb
lcall
add
mov
xchg
imul
mov
int
mov
cli
add
xorl
xchg
or
sub
inc
xchg
mov
mov
int3
push
dec
or
imul
sbb
mov
aam
mov
lahf
push
push
and
cmpsl
mov
jb
aaa
addr16
loop
hlt
jg
mov
hlt
dec
and
call
sbb
push
jecxz
mov
negl
xlat
and
mov
or
dec
or
sub
imul
add
adcb
mov
jmp
xchg
sub
mov
pop
aas
dec
outsb
in
xchg
xchg
fld
aas
add
jns
add
sarb
mov
sbb
jb
aaa
xor
inc
sbb
xor
mov
mov
and
pop
in
inc
loope
cwtl
sub
push
stos
outsl
test
insb
das
imul
mov
in
dec
jo
adc
xchg
mov
xor
sub
enter
test
pushf
adc
jmp
dec
push
jmp
pop
das
test
cmp
or
pop
pop
and
jne
cltd
aaa
ljmp
inc
pop
repz
mov
mov
jecxz
data16
addr16
imul
mov
imul
adc
enter
testb
test
fwait
outsl
fisubl
dec
pushf
dec
mov
dec
sti
jp
ret
mov
loopne
sti
test
adc
inc
inc
in
lcall
bound
arpl
xchg
adc
popa
push
fstpt
push
adc
fisubl
rcrl
into
cmp
or
fucomp
lret
xchg
dec
lret
ret
js
inc
mov
popf
cmp
sbb
iret
mov
sub
orl
xchg
adcl
call
lea
mov
jl
pusha
mov
xor
cmpsb
mov
frndint
push
fs
in
movsb
push
jmp
inc
pop
arpl
xchg
mov
fwait
pop
and
test
hlt
dec
cmc
jno
scas
adc
test
dec
movl
add
rorl
sbb
sti
jo
das
testl
int3
lea
or
fnsave
int3
mov
stos
inc
aaa
stc
jb
mov
aas
std
je
test
cmpsb
mov
xor
fmull
adc
adc
xchg
je
es
jne
fisttpl
icebp
dec
in
adc
pop
js
idiv
enter
push
cmp
inc
mov
lahf
adc
aam
push
ret
es
or
jl
int
push
xchg
out
xor
movsl
cmp
lret
xor
lahf
fwait
push
pop
ss
or
mov
xchg
pop
or
cmc
fnstenv
stc
fidivrl
in
aaa
stos
push
sahf
out
jno
cwtl
decb
lea
hlt
inc
inc
and
fisubl
insl
rorb
mov
inc
add
insl
sbb
xchg
pop
repz
les
out
arpl
movsl
test
push
add
je
and
ja
clc
cmpsl
push
imul
call
push
or
jp
shl
mov
jb
leave
int
dec
mov
hlt
cld
out
std
sub
sahf
aaa
sbb
clc
inc
push
jnp
jg
xlat
fwait
negl
ljmp
jmp
cwtl
inc
lret
outsb
mov
dec
fbld
std
pushf
shll
aas
inc
xor
jmp
cmp
push
push
xlat
mov
frstor
xor
jb
fninit
cmpsb
inc
sbb
adc
mov
push
push
loop
lds
fdivrs
dec
push
js
mov
add
and
std
andb
stos
inc
mov
out
insb
adc
repnz
xchg
pop
out
inc
aam
jecxz
mov
movsb
es
sarl
push
lds
pop
pop
mov
push
pop
inc
mov
in
add
jmp
out
test
xor
cli
icebp
xchg
mov
cltd
pop
leave
or
dec
fmulp
ja
fistpl
incb
cmpsl
mov
lods
and
pushf
jae
mov
rol
outsl
jecxz
mov
fiaddl
xchg
fildll
mov
or
pop
pop
es
outsb
rcl
lret
loope
add
bound
cmp
int
mov
pop
aaa
pop
xchg
call
cmpsb
aas
mov
mov
jae
add
push
adc
out
jno
aaa
cmp
mov
mov
jmp
in
inc
mov
rolb
pushf
aaa
mov
xchg
push
pop
adc
jne
xchg
shll
dec
cmp
xchg
inc
ret
repz
iret
xchg
pop
lods
mov
into
imul
sub
lahf
js
jl
jl
test
xlat
xchg
gs
sub
mov
fnstcw
mov
jecxz
jnp
test
or
cmc
adc
ja
fwait
stos
mov
stos
cltd
in
faddl
cmpsb
int3
and
popa
inc
movsb
mov
cmp
sub
pop
xchg
dec
inc
ret
xchg
pop
pop
jle
ret
dec
outsl
xor
mov
mov
mull
sbb
es
gs
pop
sahf
jbe
jo
inc
not
push
cmp
shll
add
sbb
in
clc
dec
test
shll
movsl
jl
push
adc
cmp
inc
ret
js
mov
insl
mov
or
out
aad
adc
idivb
stc
out
bound
nop
mov
xchg
je
iret
in
add
xchg
leave
out
cmp
cltd
pop
sahf
movsb
and
cmp
xchg
scas
aam
les
into
mov
dec
pop
pop
mov
and
ja
cmp
lret
lahf
mov
sti
iret
or
adc
sub
aaa
js
mov
cmp
mov
adc
adc
dec
lret
mov
out
jb
inc
stos
ljmp
mov
lock
mov
sbb
lcall
iret
nop
pop
and
fucomi
push
push
cwtl
loop
inc
sub
gs
lock
mov
sbb
or
aam
scas
mov
xchg
cmc
adc
loope
add
xchg
or
sub
popf
aad
lock
insl
in
jno
test
ss
xor
pusha
cld
rcrl
or
lds
ds
dec
clc
les
adc
add
xchg
pop
jp
sub
jmp
push
xor
lahf
out
inc
xchg
adc
test
lret
pushf
xor
or
jge
pop
outsl
inc
rclb
repz
and
jle
adc
jns
in
push
cmp
or
sbb
xchg
adc
inc
push
mov
sahf
std
xchg
sahf
jbe
dec
aas
aam
test
into
addr16
fcmovu
cmpsl
jo
or
pop
mov
xchg
mov
scas
xchg
loope
arpl
daa
popf
mov
xchg
mov
je
mov
lahf
cmpsb
push
subl
mov
fdivs
pop
lods
jo
cld
adc
out
popf
adc
call
push
adc
jl
mov
or
nop
mov
hlt
insl
movsb
fistps
stc
aaa
or
push
sub
scas
jo
xor
add
je
push
or
jo
imul
cmc
out
movsl
mov
pop
test
cmp
and
out
ja
adc
stc
movsl
nop
sbb
xor
out
xchg
or
and
adc
xor
lods
loop
lods
xchg
sub
mov
xchg
rolb
repnz
ljmp
imul
shlb
sbb
push
lds
sar
xor
mov
cltd
xor
pop
xchg
mov
dec
sbb
mov
cmp
mov
out
cmp
inc
mov
les
mov
fs
mov
xlat
test
pop
sbb
jge
pop
negb
lea
mov
andb
jbe
mov
push
hlt
ror
lds
loop
xor
xchg
addr16
or
inc
std
mov
ss
jp
in
sti
jle
mov
cmpsb
das
push
sbb
cmp
movsl
mov
xchg
lahf
std
in
xor
rcl
cmpsb
cs
push
push
int3
cltd
cmpsb
stos
arpl
sub
loop
je
adc
repz
movsb
jmp
daa
xor
loope
gs
imul
xchg
jo
mov
testl
out
sbb
and
fisttpl
mov
icebp
clc
shll
add
xlat
cmp
push
dec
cmpsl
dec
mov
pop
scas
loope
hlt
jb
inc
sti
cmp
xchg
dec
jnp
aam
mov
adc
push
xor
xlat
xor
orb
dec
sbb
js
mov
pushf
shl
mov
add
fidivrs
test
adc
imul
std
je
pop
pop
jae
incl
lret
mov
push
or
jno
pop
lret
stos
loopne
or
lods
mov
jnp
xor
stc
fmuls
pop
lret
outsb
test
call
divl
out
xor
loopne
test
out
ljmp
xchg
hlt
push
test
jle
xor
sti
cwtl
pop
jne
dec
jo
pop
xor
iret
pop
pop
inc
popa
enter
fwait
out
call
mov
mov
js
jl
jns
mov
push
lcall
sub
es
fiadds
test
jmp
adc
fcomip
mov
push
cmp
jmp
mull
stos
ljmp
out
fiaddl
sbb
jne
add
test
jbe
xchg
pop
fstp
or
sbb
dec
sub
divb
jl
ds
and
fs
xor
adc
add
jg
sbb
test
scas
arpl
pushf
dec
cltd
shrl
arpl
repz
push
addr16
dec
push
cmc
xchg
jmp
movsb
mov
xchg
mov
mov
xlat
lret
sbb
imul
add
push
and
pop
repz
xlat
pop
jb
sbb
rol
xor
stos
jno
xor
jae
inc
jg
clc
xchg
shl
dec
movsl
lcall
and
pop
cmp
daa
pushf
dec
mov
push
adc
xor
pop
xchg
icebp
shlb
xchg
adc
xor
sbb
mov
add
and
jmp
add
lods
leave
mov
pop
dec
or
mov
dec
xor
cmpsl
pop
adc
sti
sub
lcall
scas
mov
and
mov
sub
sbb
lcall
out
imul
sub
out
pop
cmc
ret
xchg
inc
dec
mov
fs
and
sbb
xchg
aad
sub
xchg
mov
adc
pop
cmc
push
fnsave
clc
mov
xchg
mov
mov
int3
bound
jg
jle
inc
scas
xchg
in
mov
cwtl
fidivl
sti
push
mov
fidivl
mov
pop
ljmp
pop
add
add
outsl
pop
sbb
fsubrl
loope
fwait
inc
scas
sbb
xlat
out
lds
call
popf
jp
dec
jecxz
je
push
repnz
xlat
into
mov
xchg
lea
cmpsb
ss
xor
popa
es
push
fs
push
or
sahf
cs
test
sub
xlat
jne
add
push
or
push
cmp
mov
mull
insl
push
shlb
jb
fisubrs
fstp
out
xchg
loop
and
mov
cmc
shll
les
push
dec
aas
add
pusha
xor
mov
ja
in
xchg
dec
pop
and
imul
shrb
addb
adc
div
sbb
dec
xor
lret
mov
push
mov
fcom
jb
cmp
movsb
nop
adc
or
or
add
sub
sub
mov
mov
iret
xchg
mov
iret
mov
and
enter
xchg
lret
stos
test
fstpt
inc
repnz
out
push
icebp
dec
mov
lret
mov
inc
jnp
loop
xchg
les
push
mov
jg
cwtl
popf
adc
jnp
hlt
xor
jle
dec
repnz
xchg
xchg
mov
jo
sub
xchg
fsub
into
xchg
sub
push
or
dec
mov
lods
mov
lods
mov
add
pop
xor
jno
lcall
icebp
mov
and
push
lahf
xlat
sti
leave
lahf
pop
movsl
mov
cmpsl
jl
fldl
fucom
fsubl
sbb
movsb
movsl
popf
mov
fidivrl
inc
lret
pop
fadds
cmp
aas
pop
or
jae
imul
and
mov
push
lods
inc
pop
or
int3
sub
outsl
mov
fcompl
lds
and
lods
aam
test
xor
sbb
out
jl
aam
movsb
iret
daa
ljmp
int
jns
jb
add
je
repz
pop
movsb
sub
out
in
and
jne
mov
push
mov
fcom
xchg
xchg
std
pop
xor
mov
daa
aam
and
xor
fadd
int3
pusha
addl
pop
iret
in
sub
and
sbb
mov
jp
cli
cmpsl
jmp
psllw
cld
shlb
cmpsl
lahf
ficoml
pop
jnp
sbb
mov
jno
and
xchg
mov
xor
or
out
push
roll
add
outsb
repz
or
push
lods
mov
xor
js
and
jo
sbb
icebp
xor
add
jecxz
mov
dec
scas
lcall
ret
push
out
add
js
notl
mov
test
and
and
jns
ficoms
test
jecxz
cmc
xchg
rcll
jg
pop
xchg
mov
decl
rol
sbb
movsb
sbb
xor
insb
jo
fsubr
lods
movsb
jne
xor
dec
cmp
mov
lods
daa
fsub
cmp
in
subb
cmp
out
gs
add
or
aas
or
stos
mov
iret
mov
pop
push
adc
sub
lret
sub
add
gs
add
dec
rorl
push
orb
ds
xor
mov
adc
arpl
cmpsl
dec
imul
xchg
adc
ss
insl
jecxz
test
data16
adcb
mov
pusha
imul
inc
cmp
test
xor
xor
mov
jge
dec
stos
lds
out
xor
lods
jnp
adc
popf
outsb
ds
sub
lods
lret
bound
popa
or
adc
mov
sub
push
or
sbb
mov
push
in
rolb
shll
jle
lret
subl
mov
xchg
pop
fisubl
adc
imul
push
mov
jne
and
add
das
enter
xor
test
push
jle
sub
test
cmp
lret
push
clc
pop
sub
mov
scas
mov
inc
int3
lods
repnz
cmpb
cmp
scas
mov
inc
mov
mov
xor
mov
jle
das
test
dec
cli
pop
icebp
inc
add
mov
sub
mov
push
movsl
flds
cmp
xor
push
cmp
iret
stc
in
add
mov
xor
fs
or
jmp
add
test
mov
int
repnz
es
dec
add
cmp
sbb
or
fisttpl
xchg
movsb
and
int3
jno
ja
cmp
movsl
test
je
ret
lret
test
in
mov
sbb
and
push
sub
lea
inc
add
xor
jp
int
mov
ret
add
pop
lods
aad
xchg
cmpsl
xor
xchg
cli
jl
inc
mov
int3
push
adc
inc
enter
lods
cmc
jle
jle
scas
enter
shlb
dec
and
sub
test
sbb
xor
pushf
push
ja
call
dec
lock
adc
fdivrl
jle
nop
adc
scas
fldl
push
xor
arpl
jnp
inc
fistpll
push
clc
in
inc
test
daa
jns
cltd
subb
andb
arpl
rcrl
xlat
imul
lock
out
jle
adc
mov
inc
aad
push
and
pop
xchg
clc
cld
out
sbb
daa
pop
xor
mov
and
push
insl
call
mov
and
and
sub
leave
in
xchg
arpl
mov
sub
mov
inc
out
fidivl
lcall
jae
add
je
scas
mulb
stc
push
filds
loopne
bound
in
pop
js
pop
roll
decl
or
sbb
stc
cmp
lret
push
repnz
sbb
pop
mov
test
inc
call
je
movb
imul
pusha
popa
rcll
lock
xor
lea
scas
xchg
xchg
inc
mov
lea
push
jp
bnd
mov
jno
filds
mov
cmp
mov
push
cld
sbb
hlt
mov
js
dec
rdmsr
aad
ds
lcall
xor
je
and
std
mov
dec
sbb
dec
andl
incb
jmp
repnz
gs
cli
cmp
ds
fisubl
add
ja
cmpsl
testl
fiaddl
xlat
insb
nop
dec
dec
push
imul
insl
jmp
or
cmc
popf
lret
popa
mov
add
sahf
dec
push
sbb
push
ret
hlt
fwait
xchg
sub
scas
in
inc
call
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
mov
movl
cmp
movl
jne
movl
adcl
pushl
andl
pushl
pushl
orl
call
xor
mov
or
mov
mov
mov
sub
movl
lea
mov
adc
lea
notl
mov
mov
mov
sub
and
mov
mov
mov
and
mov
mov
xor
mov
add
movl
mov
movl
mov
movl
cmp
movl
jne
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
sbb
mov
andl
mov
movzwl
add
xor
add
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
and
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
orl
add
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
mov
mov
mov
xor
add
mov
sub
add
mov
notl
mov
mov
neg
mov
sbbl
mov
sbb
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
inc
mov
subl
xor
xor
andl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
add
mov
subl
xor
orl
xor
add
movl
lea
mov
mov
mov
cmp
ja
or
mov
add
xor
lea
addl
mov
adc
mov
inc
xor
lea
xor
add
mov
or
mov
mov
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
decl
mov
adc
movl
adc
mov
mov
sbb
mov
xor
sbbl
add
cmp
movl
je
mov
movl
mov
xor
orl
xor
subl
add
sbbl
add
adc
xor
sbbl
xor
mov
mov
or
mov
xor
mov
add
adc
xor
xor
movl
mov
movl
mov
movl
cmp
jne
mov
cmp
movl
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
mov
sbbl
xor
sbb
mov
add
not
movzwl
mov
movb
sub
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
sub
mov
xor
adcl
sub
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
inc
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
sub
mov
xorl
push
andl
mov
xor
mov
push
add
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
sbb
mov
decl
xor
add
movl
jmp
mov
jmp
ud1
mov
std
pop
sbb
popa
bound
bound
xchg
add
cs
clc
push
lock
imul
or
mov
or
push
jmp
sbb
xchg
and
jp
add
inc
cmp
jle
outsl
in
int3
add
or
std
xchg
mov
cmc
jl
cmp
mov
out
pop
inc
test
or
es
jl
jg
fwait
xor
fdivl
push
je
sbb
rcrl
popf
xchg
sub
cld
mov
pmaxsw
sbb
cld
insb
sbb
and
cmp
cmp
and
out
imul
cmp
in
mov
jle
jne
cmp
add
ljmp
pop
into
mov
mov
xor
mov
xchg
sbb
fildl
out
sub
push
jo
mov
sub
ret
movsl
ret
in
cmp
sub
ljmp
insl
in
addl
inc
std
inc
test
leave
jle
cmp
cmp
out
inc
orb
in
pop
dec
out
cmp
mov
dec
sub
loop
push
addr16
xor
call
push
scas
mov
inc
aam
push
push
syscall
lods
jle
aas
push
dec
sbb
andl
test
lret
clc
arpl
pushf
push
mov
mov
push
pop
or
mov
and
pop
mov
dec
icebp
and
arpl
cli
xchg
or
mov
sahf
xor
out
or
add
inc
pop
out
pop
imul
fsubl
sub
icebp
jns
stos
adcb
insb
push
inc
jp
int
aaa
inc
sbb
loopne
xor
and
in
push
push
sub
jg
loop
mov
add
mov
mov
mov
lahf
push
addr16
das
mov
shlb
repnz
or
xchg
adc
mov
cmc
dec
pop
mov
jge
xchg
sbb
es
insb
shlb
bound
jp
xchg
out
cli
arpl
xor
ljmp
mov
lea
fadds
jno,pn
ss
sbb
data16
inc
stos
sbb
mov
cmp
fcoms
lahf
push
xchg
hlt
mov
xor
jnp
pop
add
inc
mov
xor
cld
push
cmp
insb
hlt
in
decb
dec
repnz
push
adc
ret
rcrb
and
je
loop
jmp
xor
push
or
ja
xchg
ds
adc
out
cmp
cmc
stos
xor
xchg
jb
addr16
inc
inc
xchg
pop
mov
imul
clc
inc
adc
push
xchg
or
jo
jo
sbb
xchg
pop
in
mov
hlt
clc
ret
cs
or
push
repz
insl
aaa
fs
adc
out
push
jne
mov
mov
xlat
or
fisubs
and
in
int
out
add
xorb
stos
xchg
lcall
in
ret
push
push
scas
insb
shlb
divl
mov
xchg
out
mov
lods
mov
dec
out
xor
add
cmp
mov
mov
cmpsl
jecxz
push
pop
xor
pop
shll
mov
jle
xor
and
aaa
fidivrl
dec
push
addr16
add
dec
leave
push
out
xor
mov
push
jmp
push
or
sub
cmc
or
inc
push
xchg
or
sub
cmp
push
aam
or
cmp
clc
pop
jecxz
xor
xchg
sbb
dec
cmpsl
enter
pop
inc
add
rol
sub
shrl
mov
inc
int3
add
push
xchg
cmp
in
addl
out
test
imul
gs
scas
lock
push
out
pop
add
sti
movsl
sbb
mov
ja
pop
repz
pushf
xchg
mov
adc
dec
sahf
push
rcrl
push
andl
adc
and
pop
push
xor
lret
adc
out
push
or
and
jb
sbb
divl
shl
pop
sbb
popf
mov
mov
sub
cmp
pusha
call
add
pop
int3
pop
push
mov
jmp
xor
jecxz
mov
fsubr
pop
cmpsl
sbb
push
repz
jmp
in
jo
bound
cmp
and
adc
test
aam
jnp
fisubs
insb
dec
aaa
or
pop
xchg
cmp
cmpsl
das
mov
add
lds
rorl
adc
testl
pop
rol
mov
mov
add
mov
and
insl
scas
cli
lcall
mov
push
jne
mov
lea
sbb
mov
cmpb
das
pop
mov
and
mov
mov
in
fs
lea
mov
adc
mov
ljmp
mov
jmp
movsl
roll
pop
outsb
les
out
call
cmpsl
and
and
lds
xlat
out
cmp
mov
imull
out
mov
inc
push
xchg
and
sbb
rcl
popa
imul
push
dec
mov
lea
movsb
push
cmp
or
add
xchg
push
jns
nop
ror
xchg
xchg
sbb
or
pop
jle
repz
stc
cmp
adc
std
mov
fwait
or
ret
or
xlat
lahf
xlat
lock
and
adc
xchg
dec
mov
mov
sbb
xchg
add
xlat
rolb
or
sarb
call
enter
test
mov
push
mov
aaa
jne
pusha
inc
push
jmp
outsb
aas
or
mov
adc
sub
cwtl
pop
outsl
test
push
dec
xorb
xor
inc
rcrl
jne
fldenv
mov
and
sti
out
lret
fstl
into
shr
inc
not
pop
notl
xchg
iret
in
sahf
adc
mov
push
pop
icebp
cmp
xchg
pop
scas
or
pop
stos
sbb
in
mov
push
sti
inc
jge
sub
sub
ss
cmp
and
in
mov
add
fwait
mov
push
iret
push
aam
sbb
cmc
add
fistpll
xlat
jmp
push
mov
imul
inc
bound
cmpsl
inc
fnstcw
addb
sti
adc
xchg
push
scas
sbb
insl
fs
jge
pop
out
dec
popf
imul
lahf
push
pop
test
lcall
clc
add
xchg
jae
mov
lds
mov
cmp
int
fstl
aaa
js
sbb
jb
cmp
xchg
mov
das
mov
fistpl
notl
rolb
das
jne
mov
adc
push
mov
mov
dec
inc
cli
clc
xchg
jno
sbb
sbb
nop
push
adc
add
data16
jb
iret
movsl
xchg
leave
nop
in
fldcw
sbb
inc
xor
enter
xor
jge
inc
mov
sub
bound
cwtl
cmp
int3
jle
pop
sbb
add
cmp
and
bound
push
mov
mov
jno
push
cs
dec
add
or
push
adc
ljmp
rcrl
mov
scas
pop
jno
in
mov
popf
add
ret
push
pushf
mov
jbe
stos
sub
mov
fistps
cwtl
cmp
cmpl
aaa
aas
lret
bound
inc
call
xchg
add
xchg
ffreep
lods
je
xlat
jae
hlt
cmp
stc
cmp
inc
or
and
sub
and
and
lahf
sub
xchg
push
cmpsb
add
int3
jle
dec
arpl
sbb
sub
leave
mov
das
into
sbb
es
pop
addr16
rcrb
insb
jmp
xchg
sbb
push
adc
fildl
jl
test
sar
jbe
jns
dec
push
in
or
imul
out
scas
loope
test
or
fisttps
inc
lret
sbb
xchg
pop
jb
adc
in
xor
outsb
dec
or
fscale
dec
outsb
dec
ljmp
test
pop
fiadds
inc
movsl
notl
cmp
mov
hlt
rcll
xor
mov
andl
lret
push
mov
or
cmpsl
mov
mov
bnd
push
mov
mov
sbb
shlb
imul
push
cmc
xorb
push
mov
test
les
andl
das
fidivl
mov
das
test
gs
sbbb
jg
mov
xchg
push
sbb
rcrb
test
sub
mov
mov
dec
js
inc
cmpsb
push
jl
fsubrs
sbb
inc
adc
pop
arpl
jmp
xor
xchg
xor
ret
dec
mov
jmp
aaa
aaa
sub
dec
jno
mov
mov
adc
call
in
xor
cli
dec
xor
cli
cmpsl
mov
sbb
add
mov
dec
pop
cmp
mov
pop
mov
jae
stos
jo
lock
enter
jne
in
je
cs
xor
dec
jb
xchg
sbb
xor
cmp
out
pop
cmc
and
cmpsb
inc
sbb
mov
stos
mov
lds
sbb
push
sahf
xor
lock
call
push
adc
push
mov
imul
iret
leave
fwait
arpl
xlat
xchg
sahf
sub
sahf
dec
sub
and
jb
inc
inc
outsb
push
mov
cmp
cmpsb
call
test
mov
cmpsb
mov
outsl
xor
int3
in
sahf
rorb
xor
mov
shl
push
push
mov
ret
sbb
jae
mov
mov
inc
or
cltd
test
jne
repnz
mov
in
sbb
fcomps
mov
pop
mov
xchg
shrl
jno
addl
idivl
in
jp
dec
mov
enter
sub
fnstsw
pop
outsb
data16
inc
push
ja
push
daa
aam
inc
into
lds
into
add
addr16
sti
add
push
jp
in
js
idivl
into
js
cld
pop
inc
imul
call
fnstenv
sbbl
sbb
and
pushf
push
push
xchg
xchg
jb
cmpsb
lods
rcrl
mov
std
repnz
lahf
xchg
adc
ret
jne
hlt
notl
push
dec
out
cmp
ja
xor
adc
sbb
mov
fldcw
nop
icebp
imul
cmp
imul
add
into
aas
testl
and
jo
sbb
or
gs
out
sbb
cli
ljmp
leave
aad
push
scas
or
adc
into
stc
pop
outsl
push
sub
push
cmpb
cli
sub
mov
jae
adc
pop
sbb
jnp
or
lock
adc
add
sbb
or
sub
in
cmp
inc
dec
jecxz
sbb
mov
cmp
out
test
pop
hlt
stc
xchg
xor
xchg
jns
int3
adc
fwait
cmp
data16
lds
outsb
fisttps
inc
dec
xchg
fwait
test
cmp
fwait
movsb
ret
mov
sub
cltd
std
mov
mov
push
popa
jg
sub
xchg
shrb
and
lret
add
outsb
xor
pop
insb
into
cmp
pushf
xchg
xor
loop
lcall
dec
push
jo
in
push
xchg
and
push
adc
cmc
xlat
ror
fadd
push
jle
mov
dec
in
lea
arpl
bnd
jecxz
xchg
adc
cwtl
and
icebp
pop
clc
mov
xchg
xchg
daa
xchg
xor
out
and
cmc
cmpsl
jmp
ja
daa
in
ficompl
pop
xchg
pop
and
ss
movsl
shr
add
mov
daa
int3
ss
mov
sub
enter
les
sahf
pushf
and
mov
fsubs
flds
scas
inc
xor
or
int
cwtl
adc
push
or
push
cmpsb
sub
push
mov
mov
shlb
inc
mov
xor
jle
shll
fldl
ret
bnd
cmpsl
cmpsl
xlat
fcomp
pushl
pop
gs
sbb
add
mov
cltd
mov
xor
stos
add
arpl
lret
inc
push
adc
cmpsb
aad
jecxz
es
mov
cmpsl
sub
jns
jne
mov
inc
sub
loopne
inc
xor
cmp
dec
mov
shrb
push
cs
nop
jge
push
or
test
sub
push
rolb
js
sbb
and
lods
mov
testb
das
cs
mov
adc
pop
adc
mov
test
add
or
lods
sbb
push
lock
mov
lea
add
dec
adc
negb
fcoml
jns
sbb
rcrl
cwtl
sub
ror
jmp
jns
mov
push
xchg
jge
test
sbb
mov
pop
int
inc
xor
mov
inc
pushf
cltd
les
add
test
sub
pop
inc
sub
mov
xor
jno
jp
mov
rcrl
arpl
dec
mov
imul
dec
dec
orb
cld
or
mov
pop
push
pop
push
push
xchg
and
inc
add
mov
dec
mov
inc
test
sbb
lock
adc
add
pop
in
out
jle
mov
add
add
cmc
into
test
out
mov
lea
and
push
mov
mov
mov
es
cwtl
cld
push
sub
cmp
cli
xchg
jl
push
mov
pushf
mov
scas
ds
push
pusha
lret
outsb
mov
orb
and
jbe
cmp
pop
setp
cs
js
adc
test
or
roll
push
sbb
and
cmpsb
lea
outsb
icebp
jns
mov
or
adc
jecxz
dec
sahf
je
push
scas
adc
push
or
and
inc
dec
and
xchg
rorb
mov
mov
add
xor
pusha
das
jae
sbb
dec
ds
popf
test
or
add
pop
icebp
inc
int
lods
push
lret
or
in
dec
sub
inc
jle
ds
lcall
test
cmpsb
scas
int
test
sub
push
popa
jo
je
push
inc
int
mov
jg
andl
mov
mov
rorl
inc
pop
outsb
in
outsl
push
rolb
inc
mov
ss
test
lds
adc
je
sbb
or
mov
outsl
test
imul
icebp
and
sbb
xchg
mov
cltd
mov
lret
and
mov
mov
push
scas
mov
loop
mov
dec
hlt
cmpsl
xchg
sbb
mov
ds
or
pop
cmp
xchg
outsb
jecxz
sbb
popa
inc
mov
jle
ss
fisubs
jno
out
sti
lret
pop
aad
mov
insl
stos
leave
inc
fsubr
xchg
test
hlt
lock
inc
cld
sub
popf
pop
jmp
ret
imul
mov
pop
jb,pt
ror
addr16
cld
and
adc
dec
mov
mov
mov
data16
push
lret
pusha
lgs
jecxz
lds
pop
sahf
outsl
jns
or
xor
in
cmp
jns
push
divps
movsb
mov
loopne
xchg
mov
cmpsb
and
lock
pop
push
cmp
outsb
lock
xor
loopne
aad
das
push
jg
mov
mov
mov
popf
lea
in
adc
dec
aas
mov
jecxz
adc
les
icebp
out
fwait
int3
out
xchg
mov
jne
repz
stos
scas
cld
mov
pop
lcall
iret
sub
dec
fsubrs
pop
mov
das
pcmpgtb
jecxz
out
lcall
pop
add
fcompl
cmpsb
std
insl
xor
ds
mov
or
inc
ficompl
out
repnz
rcrl
clc
dec
pop
xor
jnp
shlb
adc
mov
add
cmp
mov
out
leave
mov
addr16
xor
mov
ds
pop
sub
rcrb
cltd
ds
fs
in
jo
mov
cmp
xchg
sub
pop
add
lods
cmp
test
jp
and
mov
out
inc
inc
or
jge
rol
enter
cmpb
cwtl
fnsave
push
aaa
sub
sub
shl
jg
jl
lret
dec
sbb
pop
rcrb
jb
jo
sub
cmpsb
sub
pushf
push
add
xchg
pushf
and
out
bound
int
fmuls
xor
inc
in
sub
insb
lds
jge
mov
ret
lcall
jbe
pop
leave
pop
leave
sti
cli
mov
pop
push
fldl
outsb
jmp
mov
push
ds
pop
or
decb
mov
inc
dec
popa
jge
lea
dec
outsb
lds
or
push
into
inc
sarl
inc
ljmp
ja
xchg
dec
out
push
lahf
lods
jbe
lcall
enter
rorl
add
dec
pop
inc
push
aas
mov
and
jnp
inc
out
adcl
movsl
mov
leave
jne
hlt
test
mov
fwait
or
cwtl
adc
fistpll
ds
outsb
sub
xlat
imul
cmp
push
adc
imul
adc
add
jnp
aad
and
insb
das
ds
insl
outsb
cwtl
mov
jno
pop
insl
xchg
pop
es
jae
or
mov
subl
jnp
jg
pop
loope
xchg
mov
sub
imul
lods
xorb
loopne
cmp
sbb
mov
insb
push
mov
imul
and
sbb
mov
nop
outsb
mov
sub
jne
fstps
mov
cltd
and
jb
mov
lods
sub
lea
insb
jl
pop
push
cltd
movb
stos
adc
test
adc
fbld
fsubrs
sbb
in
or
cmp
in
lret
divb
adc
aad
push
dec
push
mov
aaa
test
ja
enter
inc
imul
into
push
shlb
and
and
sbb
sbb
push
jo
mov
aam
adc
aam
sti
push
mov
jmp
mov
scas
ds
push
add
add
je
push
fs
hlt
push
push
sbb
leave
jmp
pop
jno
pop
cmp
jbe
das
jb
sarl
xchg
inc
std
movsb
repz
adc
repz
subl
pop
mov
jnp
cmp
mov
cltd
lahf
cmp
adc
and
xchg
xlat
add
dec
cmp
mov
inc
rolb
cmp
mov
adc
and
mulb
ljmp
xor
xor
cmp
sub
xor
mov
mov
lock
dec
pop
out
pop
jo
mov
mov
inc
sbb
bound
hlt
aad
cwtl
mov
adc
or
push
dec
call
cmp
mov
jmp
cmp
mov
push
and
js
push
mov
fwait
pusha
inc
fs
clc
iret
in
xchg
xor
aad
cwtl
jnp
xor
fdiv
rolb
pop
push
fisubrl
or
cmpsb
shll
push
mov
mov
clc
dec
mov
clc
dec
lea
int
cmpsl
frstpm(287
cmp
pop
ret
cwtl
jo
popf
xor
sub
movsb
xor
aam
dec
out
outsb
jge
das
cwtl
fwait
stos
xor
mov
ds
xlat
xor
xchg
mov
mov
mov
jno
icebp
aam
ss
mov
fbld
lahf
fwait
gs
mov
push
adc
repz
frstor
clc
inc
cs
and
inc
lods
push
sub
inc
inc
outsl
push
or
sbb
or
push
ss
int3
push
ss
mov
push
inc
cmpb
jb
fisubs
mov
mov
jle
pushf
fstl
and
xchg
out
xlat
inc
testl
xor
pop
or
and
pop
xor
pop
fldenv
andl
mov
cs
push
push
aaa
and
cld
xchg
test
ss
adcb
sbb
add
sub
adc
fwait
dec
xchg
daa
in
fbstp
call
popf
sub
xchg
jns
clc
in
and
dec
jmp
ss
sbb
inc
fs
sbbb
cltd
add
cmp
loop
dec
xchg
lret
cli
adc
cmp
lock
lea
int3
jno
cmc
enter
push
fwait
add
fdiv
mov
inc
ud0
sbb
popf
loopne
pop
stc
outsb
loope
in
jp
push
adc
shll
lds
cld
cli
mov
jmp
out
jbe
cmpsb
std
jecxz
push
push
push
clc
cmp
jns
adcl
push
idiv
jp
in
jae
rcr
sub
push
das
mov
inc
jns
out
stos
das
repz
push
jle
add
pop
or
pop
out
mov
ret
cmp
in
jle
je
push
sbb
xchg
nop
push
popf
test
ret
ds
mov
pop
push
nop
dec
xchg
loope
xchg
jmp
in
add
xor
add
push
shll
lahf
xor
xlat
repz
jle
xchg
gs
sbb
inc
sub
imul
mov
or
aas
int3
xor
add
xor
jb
sti
push
loopne
push
sub
push
sub
movsb
jo
fcomi
jmp
fimuls
out
les
dec
cmc
ret
and
dec
inc
mov
pusha
pop
icebp
lods
aaa
arpl
mov
je
jmp
loop
push
insb
xlat
test
loop
inc
je
out
enter
jns
mov
push
cmp
ret
inc
xchg
enter
push
add
repnz
push
repz
ss
adc
sub
data16
insb
add
sbb
push
out
fcomi
aas
pusha
jno
mov
pop
dec
add
pop
adc
stos
push
cmc
movsb
mov
xchg
push
dec
dec
add
daa
xchg
insb
icebp
loope
pop
add
orl
and
cmp
push
out
or
cmp
stc
jp
aas
cs
daa
and
stc
inc
lea
cmpsb
lret
or
xor
ror
fdivs
pop
sub
sub
stos
dec
test
imul
stc
jnp
xor
inc
cs
mov
pop
stc
cmp
xchg
dec
push
in
insl
pusha
popf
xor
add
add
std
jno
sbb
addps
dec
movsb
dec
or
push
add
lods
or
cli
out
mov
stos
pop
add
sub
arpl
mov
data16
inc
leave
jge
data16
mov
pop
dec
hlt
cmp
pop
frstor
add
inc
cmp
xchg
inc
mov
jae
mov
pop
fsts
jle
mov
fabs
push
aas
mov
xchg
test
sbb
fs
pop
repz
mov
and
in
lcall
cs
pop
push
andl
mov
or
pop
in
jbe
gs
sub
push
mov
push
mov
mov
fstl
cmpsb
pop
sbb
mov
mov
sub
inc
mov
push
bound
pop
mov
push
insl
xchg
sahf
icebp
inc
mov
jle
ds
adc
add
jbe
mov
int3
jge
lea
orl
dec
fstp
xchg
sub
fs
cmp
cmp
pop
jg
cmp
dec
in
imul
or
mov
push
mov
leave
call
xchg
mov
lret
cmp
out
jb
add
xor
push
outsl
pop
xor
fstpt
iret
lret
cltd
arpl
int3
in
popf
mov
mov
cmp
out
cmp
into
insl
cmp
addr16
adc
push
sbb
inc
ficoml
aas
mov
and
ret
repz
mov
andl
scas
cmpsl
sti
roll
movsb
mov
xchg
xor
xor
dec
out
es
push
mov
add
imul
cmp
xor
subl
jecxz
test
pop
shl
rol
loop
mov
shld
stos
lock
insl
jmp
push
lock
push
mov
sub
sti
mov
imul
sti
jmp
in
xchg
add
mov
cmc
test
mov
repz
push
scas
in
test
push
add
arpl
pop
or
sub
adc
jns
jo
push
jb
mov
in
xor
pop
je
dec
enter
enter
cmp
scas
leave
daa
scas
push
daa
or
insl
dec
scas
call
imul
imul
in
pop
arpl
dec
and
fldl
addr16
cwtl
mov
sbb
ret
sub
dec
xchg
addr16
ret
std
mov
mov
int
daa
fs
lods
or
aad
int3
sarb
pop
push
mov
xor
jae
leave
mov
out
push
out
mov
pop
out
gs
and
cmp
idivb
adc
pop
aas
push
mov
test
push
push
dec
popa
in
das
cmp
int
sub
enter
jb
fcompl
adc
adc
xorl
xchg
out
fdivrl
clc
and
jae
push
inc
mov
xchg
clc
rcr
cmp
nop
push
xchg
lcall
xchg
neg
jle
push
testl
lock
mov
mov
pop
mov
out
gs
mov
inc
test
cmp
dec
shl
mov
or
mov
add
mov
shl
incb
inc
add
ficoms
rcrl
mov
push
push
xlat
repnz
sbb
cmc
in
inc
pop
imull
mov
adc
insl
stos
and
pusha
lds
mov
inc
loope
int3
in
out
imul
fcomps
xchg
lahf
pop
test
rcrb
in
bsf
fwait
mov
outsb
sub
aaa
lcall
jecxz
xchg
mov
mov
cld
loope
sub
dec
sbb
mov
pop
adc
sbb
adc
push
sub
lahf
test
pop
push
fldcw
sbb
fsubl
nop
push
cmp
xchg
pusha
leave
insb
insb
in
sub
clc
in
fcmovnbe
cmpsl
xlat
ret
not
sub
sbb
add
es
jbe
mov
fcmove
pop
dec
mov
push
pop
imulb
add
jne
inc
es
or
sbbb
ss
iret
sbb
vpackuswb
rcrb
inc
xchg
mov
jle
rol
mov
popa
jne
cwtl
mov
insl
cmpsb
in
lcall
les
imul
mov
cmp
xor
push
add
sbb
std
shll
pushf
mov
mov
mov
shll
push
jg
shl
into
or
xor
and
sub
in
test
js
mov
pop
in
nop
repz
cwtl
loopne
roll
or
mov
rol
mov
fdivrl
out
insl
push
scas
push
dec
int3
jnp
out
bound
push
addl
mov
add
and
adc
xor
mov
xchg
sub
mov
ss
inc
popl
stos
adc
pop
pop
lret
fstp
subl
test
pop
xchg
push
out
dec
xchg
pop
addr16
and
push
clc
repz
cmp
filds
xchg
cmc
xchg
jo
mov
pop
rclb
push
adc
mov
or
push
arpl
int
mov
inc
push
mov
fistps
jne
pop
iret
xor
jno,pt
and
ret
loop
lods
jnp
sub
cs
cmp
incb
cmp
jecxz
mov
fidivs
cmp
test
insl
mov
sub
js
push
xor
push
movsb
mov
in
jecxz
pop
in
sub
pop
sbb
xlat
rcll
enter
cmp
ja
pop
rcrb
push
sbb
lea
nop
in
sub
stos
fnstsw
push
loope
adc
inc
push
movsl
dec
push
push
cmp
psadbw
jp
inc
inc
pop
fldl
ret
bnd
outsl
xchg
iret
aaa
and
xor
sub
fiadds
shl
das
shr
jns
cmp
jmp
lahf
cli
or
lds
add
inc
jnp
or
js
xorl
sbb
sbb
in
andl
sbb
push
in
adc
imul
fisttps
lcall
loope
mov
sbb
pop
call
loopne
mov
or
test
xor
inc
cmpl
mov
cmp
sub
push
mov
dec
mov
addr16
mov
lea
push
sbb
test
sbb
insb
mov
add
rcr
lret
lock
lahf
fs
mov
push
mov
out
or
pop
icebp
in
and
gs
sub
sti
xchg
dec
xchg
jecxz
or
ljmp
inc
aas
rcrl
xchg
push
or
lock
xchg
mov
inc
push
insb
mov
xor
or
pop
jecxz
add
inc
jge
sbb
mov
loopne
xor
je
jae
ret
adc
lods
call
sub
sub
push
dec
scas
int3
jmp
daa
sahf
loope
pop
sub
dec
cmpsb
add
mov
fisubrs
cli
xor
rclb
mov
inc
mov
aaa
cli
std
dec
xor
adc
outsl
push
cs
movsb
add
icebp
push
sub
pop
in
popf
into
roll
adc
or
xchg
popa
repz
out
lock
iret
xchg
sti
jae
jmp
mov
dec
xlat
lahf
and
pop
mov
lods
push
xchg
mov
bound
adc
push
adc
negb
adcb
out
cmpsl
or
lret
push
mov
inc
jmp
iret
scas
add
in
pop
or
lcall
stc
enter
mov
push
cmp
leave
and
mov
pop
pop
iret
test
adc
stc
daa
push
idivb
ret
dec
xchg
fcompl
icebp
psubusb
hlt
jg
pop
outsb
adc
or
sbb
dec
jle
xlat
mov
scas
loopne
movsl
push
mov
int3
add
fld
jle
add
sbb
jecxz
fisttps
aaa
les
pop
sbbl
outsb
adcb
xchg
pop
out
insb
cmp
mov
jns
sahf
sbb
adc
sub
xor
out
xor
mov
mov
lea
fcmovnbe
jge
bound
mulb
aaa
jbe
push
pop
xchg
sbbl
cmp
imul
in
fistl
das
cmc
add
movsl
mov
sbbl
xor
andl
mov
addl
add
andl
movzwl
notl
mov
and
mov
movzwl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
mov
add
mov
xor
addl
add
mov
or
mov
xor
add
mov
movl
movl
movl
movl
movzwl
mov
mov
jmp
mov
add
mov
sbb
mov
orl
xor
xor
adcl
sub
adc
sub
movl
xor
mov
and
mov
or
mov
lea
mov
orl
mov
movzbl
xor
mov
lea
not
mov
xor
or
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jb
orl
mov
sbbl
lea
and
mov
and
mov
mov
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
adcl
lea
mov
not
mov
mov
and
mov
mov
sbbl
lea
orl
mov
mov
xorl
xor
sbbl
add
jne
jmp
xor
add
mov
sub
and
mov
subl
mov
xor
orl
xor
sub
sub
xor
mov
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
add
adc
mov
mov
mov
sbb
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
rcrl
imul
mov
push
loope
popa
bound
bound
popa
push
inc
pop
scas
pop
add
ss
testb
jl
add
dec
sarb
or
repz
jo
cmp
xchg
push
je
inc
repnz
lret
push
inc
popa
call
ret
outsb
pop
adc
and
push
test
rcrb
daa
dec
lcall
cmp
pop
pop
test
and
jnp
pushf
aaa
rorb
lret
pop
inc
orl
fs
insl
test
int3
cmp
dec
push
sub
lea
pop
cmpsb
lods
xor
daa
loop
inc
outsl
lods
mov
jecxz
xor
pop
movsb
mov
outsb
clc
scas
jbe
and
inc
dec
mov
mov
lret
loope
mov
mov
inc
popf
cmc
xchg
mov
push
movsb
xchg
jnp
adc
and
push
sbb
mov
inc
ret
inc
leave
sbb
sbb
pop
arpl
mov
dec
in
insb
aam
jne
jp
cmpsb
sbb
xor
pop
out
inc
push
repz
adc
sbbl
bound
mov
aam
dec
adc
or
mov
sub
rorb
fistps
ret
cmpsl
stos
shrb
sti
mov
fldcw
jle
dec
iret
pop
lcall
and
sti
loopne
mov
lcall
pop
lds
pop
dec
inc
test
mov
das
cmc
mov
push
jnp
in
xor
sub
stos
aam
xchg
cmp
or
and
into
xchg
into
sub
and
data16
ds
xchg
aam
mov
mov
ficoms
add
mov
or
pop
scas
aas
lret
cmpsl
xchg
pop
hlt
mov
mov
dec
jge
jecxz
das
int
pop
xchg
into
int
mov
wrmsr
add
jnp
loop
test
lret
stos
and
sub
scas
mov
mov
jl
sbb
xchg
push
mov
xchg
addl
pop
popf
call
jmp
push
sbb
push
popf
cmc
mov
add
add
rcrb
adc
cmp
jo
push
iret
adc
mov
pop
push
push
inc
popa
dec
xchg
cltd
repnz
lahf
js
mov
cli
inc
sbb
lret
adc
frstor
mov
push
jp
ffree
dec
jle
add
push
xor
xor
mov
sbb
cmpsl
imul
loope
test
aam
insb
fwait
jb
pushf
pop
gs
inc
mov
je
or
shr
push
std
into
movsl
fistps
inc
inc
push
and
cmp
inc
sbb
gs
prefetch
or
lods
pushl
fwait
push
cmpsb
sbbl
push
sub
popa
inc
push
jns
mov
sub
inc
xor
mov
pop
lea
mov
or
inc
pop
in
jmp
adc
xchg
or
push
dec
jns
mov
repz
jle
cmp
cmpl
mov
loope
test
aad
mov
push
ss
nop
les
ss
add
negl
daa
in
fisttpl
jmp
cli
in
jo
test
sub
leave
jo
adc
jmp
enter
aaa
mov
outsl
jbe
scas
call
rolb
jo
push
dec
in
xchg
push
cmpsb
inc
test
test
jo
sbb
shll
sub
sbb
push
cmp
dec
in
jbe
scas
les
not
dec
inc
and
fldt
iret
or
dec
pop
mov
repnz
into
sbb
sahf
fsubrl
ret
push
shlb
mov
sbb
lods
in
or
jle
aad
pop
and
lods
movsb
cmpsl
stos
fnstsw
fwait
dec
add
ljmp
stos
out
xor
push
push
sub
sarl
out
cmp
dec
mov
fldcw
fldcw
sub
pop
into
xor
sub
mov
cmp
out
cwtl
cltd
mov
inc
mov
and
filds
pusha
fs
xor
and
mov
xchg
jb
cmp
push
test
stos
mov
mov
jnp
and
rcrb
cmc
and
ss
pop
out
push
xchg
cwtl
pop
repnz
js
dec
inc
xor
inc
loopw
mov
sahf
cmp
cmp
xchg
push
sbb
inc
out
xchg
enter
adc
sahf
pushf
push
push
dec
sub
push
xor
out
lods
mov
dec
and
rolb
mov
xchg
aas
pusha
xchg
cmpsw
outsl
dec
imul
jg
sub
xchg
pop
das
mov
mov
loopne
das
popf
les
inc
add
sbb
pusha
xchg
add
adc
mov
push
fcoms
sub
pop
dec
sub
sarb
ja
addl
or
dec
sub
faddl
and
xlat
adc
and
adc
popf
cmp
int3
cmp
push
js
adc
pop
push
pop
xchg
push
je
subl
xchg
pop
out
fimuls
adcb
or
faddl
test
and
jae
jo
imul
shrb
push
xchg
and
je
or
int
jo
cmp
popf
in
cmp
imul
dec
jae
int3
jl
and
mov
inc
pushf
adc
test
xchg
jg
inc
mov
mov
mov
lods
mov
or
shl
popf
cli
pushl
clc
mov
sbb
adc
aad
lods
jg
loop
out
xchg
cli
jmp
xchg
cli
cmc
loope
sbb
inc
scas
dec
out
xchg
stos
pop
decb
and
xor
jmp
dec
nop
outsb
lretw
push
add
or
pop
enter
sahf
jne
dec
out
pop
xchg
out
js
pop
cmp
sbb
test
cmp
mov
into
fcoms
hlt
sub
loopne
rcrb
mov
and
mov
orl
sti
ljmp
cld
xlat
sub
adc
push
sbb
pop
repnz
dec
in
push
xchg
cmovp
jp
adc
mov
dec
in
inc
jg
test
aaa
jmp
lahf
add
int3
xchg
xlat
sti
mov
jle
mov
arpl
shrb
ds
and
and
lcall
scas
sbb
mov
fistpl
sbb
pop
in
xchg
inc
ja
in
adc
pop
fldt
idiv
test
dec
mov
mov
xor
pushf
push
jg
test
pop
pop
lock
outsb
and
add
shr
adc
pusha
rcll
leave
pop
pop
sbb
xchg
cmp
push
cmp
push
cld
test
call
call
ds
xchg
icebp
adc
cmp
jae
js
xor
pop
mov
inc
pop
daa
add
dec
ret
insl
iret
xchg
and
mov
or
pop
cld
lods
out
or
shr
mov
sbb
sar
shll
adc
divb
test
rolb
insb
or
sub
sbbb
shll
push
stc
icebp
fnstcw
inc
out
imul
bound
int
mov
cld
arpl
mov
pop
dec
insl
pop
nop
lock
outsl
andb
lea
dec
jb
inc
cmp
jmp
sti
fwait
add
inc
lods
lret
insl
inc
stos
arpl
icebp
push
aam
pushf
aaa
mov
push
mov
sbb
inc
in
movsl
hlt
sbb
fbld
sub
xorl
mov
jge
loopne
sbb
fwait
mov
mov
imul
push
push
fstpt
lret
adc
scas
xchg
in
pop
push
xorb
mov
sub
add
xorb
inc
cltd
add
jns
mov
fistl
and
sub
push
and
mov
mov
jge
mov
test
jl
out
inc
add
les
insl
sub
lahf
insl
adc
in
sbb
xor
xorl
and
push
pop
mov
xchg
pop
dec
or
stc
xlat
adc
pop
loope
inc
daa
dec
mov
jp
or
int
aas
out
inc
sbb
das
cltd
sub
mov
adc
mov
loope
dec
adc
jns
mov
cmp
jg
sahf
divb
jmp
aam
jne
lahf
xchg
test
jns
mov
out
cli
jns
cmp
push
cmpsl
and
xchg
stc
cmp
psrld
sub
or
push
or
movsl
dec
pop
and
mov
jns
lret
jg
push
and
inc
adc
fcomip
add
and
jb
sub
pop
mov
imul
xor
and
scas
adc
cmp
sub
mov
or
lock
jns
fildl
stc
lods
push
lcall
xor
xor
imul
jmp
outsl
scas
in
push
fcmovnu
jp
insl
loopne
les
fwait
and
xchg
and
and
cmp
sahf
cmc
mov
mov
clc
rorl
cli
adc
popa
push
imul
jl
dec
outsl
mov
mov
push
add
in
push
mov
subb
into
xchg
icebp
movsb
sbb
fisubrl
clc
add
loope
or
pushf
sbb
mov
sbb
rcr
xchg
ret
addr16
add
repz
add
loop
xchg
sbb
rep
push
xchg
mov
inc
jl
jns
lods
jmp
add
ficoml
sub
cmp
arpl
lds
loopne
add
pop
mov
jae
scas
fstpl
mov
lea
popf
stos
pop
cmp
cmp
dec
sub
xchg
mov
popa
dec
gs
lahf
cwtl
sub
es
test
jmp
rcpps
lods
in
sub
scas
mov
cmpsb
stc
dec
imul
xchg
pop
mov
add
inc
sub
test
cmp
sbb
jns
pop
mov
arpl
mov
sub
xchg
mov
in
sti
pop
adc
hlt
adc
jg
ret
mov
clc
mov
out
lahf
dec
hlt
push
xchg
fidivl
jnp
enter
inc
daa
out
out
pusha
mov
mov
arpl
lcall
ret
shrl
inc
outsl
imul
je
popf
dec
mov
stc
sahf
pop
and
pusha
jmp
ret
aaa
notl
fsubl
or
add
test
imul
adc
add
and
popa
xlat
xchg
jnp
aaa
add
jg
scas
push
js
pop
sbb
int
mov
test
loopne
mov
cmp
pop
jns
cmp
push
and
jge
filds
jmp
mov
leave
imul
cld
lahf
in
add
cvtps2pd
cmovs
jns
add
xchg
sub
jno
js
ret
jge,pt
mov
push
shll
inc
ss
push
dec
jno
push
xor
fisubrs
aaa
cmp
push
and
sbb
inc
dec
mov
xor
ret
in
inc
and
ja
mov
mov
adc
mov
add
mov
iret
mov
sbb
xor
inc
mov
int3
jmp
inc
inc
mov
add
or
div
cmpsb
dec
cmp
insb
pusha
ret
leave
dec
imul
aam
cmp
mov
stos
xor
adc
add
push
jno
ss
mov
outsl
jl
cmp
xlat
cmc
pop
mov
adc
addb
pop
sbb
clc
sub
xor
leave
mov
push
fildll
mov
roll
mov
aad
sti
scas
arpl
push
jnp
pop
xor
xchg
fmulp
mov
nop
xchg
enter
imul
jl
scas
xchg
mov
ficomps
scas
das
fldcw
test
xchg
insl
and
or
mov
inc
pop
test
adc
test
in
sub
xor
mov
mov
cmp
mov
add
fisubs
mov
pop
or
cltd
mov
or
xchg
jecxz
push
sahf
in
sbb
nop
fmul
std
popa
inc
adc
push
push
cld
outsl
jb
movl
out
push
push
sbb
ljmp
sti
imul
ffreep
mov
add
mov
rcll
decb
push
mov
mov
lahf
cmp
push
arpl
outsb
inc
int
das
stc
mov
or
mov
bound
cmp
repz
loopne
mov
jnp
mov
mov
fsub
xchg
fadds
fs
push
inc
adc
test
mov
xchg
adc
cmpsb
cmp
hlt
push
mov
xlat
xabort
in
out
pushf
or
mov
cmp
add
fdivs
mov
mov
aad
add
mov
rcll
fcmovnbe
jle
jae
xchg
add
scas
and
add
xlat
bound
mov
lret
or
sar
cs
mov
arpl
mov
adc
xor
jmp
shll
pop
adc
sbb
fdiv
icebp
outsl
sbb
xchg
adc
or
nop
aas
and
pop
std
loop
mov
push
pop
test
jae
cli
mov
sub
push
or
jmp
pop
lods
lods
ret
dec
gs
pop
dec
xchg
mov
js
push
scas
es
xchg
push
mov
roll
mov
jb
stos
mov
imul
and
mov
popa
lret
and
xor
mov
ljmp
cld
jns
pop
inc
loopne
sti
lods
test
push
bound
pop
lahf
arpl
testb
cmp
and
xor
clc
in
js
jp
test
jnp
push
fildll
arpl
inc
fcoms
outsl
or
add
sarb
imul
loopne
or
mov
pop
push
push
and
jo
push
jecxz
in
xlat
cltd
mulb
addr16
js
cmpsb
or
gs
shl
and
mov
add
mov
sub
jl
fmull
cmpsb
lds
mov
push
jne
ror
lahf
shrl
repz
daa
jnp
or
xchg
or
add
aaa
daa
dec
test
imull
push
repz
xchg
and
fdivrs
popa
jecxz
aad
fistpl
fdivl
dec
into
clc
xchg
jmp
adc
outsb
jne
mov
ret
mov
dec
or
push
outsl
test
pop
cmpb
dec
popl
das
mov
lahf
jge
rcl
aaa
jae
repnz
popa
jb
dec
mov
mov
lret
xchg
push
cmp
fstpt
lret
xor
add
outsb
push
pushf
jo
imul
mov
xchg
sbb
jbe
movsb
pop
mov
sbb
mov
filds
pop
xor
jecxz
movsb
adc
xchg
popf
loope
std
rorb
sub
xor
mov
aam
xor
cmp
xchg
lcall
sahf
xchg
sbb
aam
or
mov
and
pop
push
sub
mov
arpl
xchg
nop
inc
and
aaa
and
or
sub
es
jp
cltd
push
push
lods
dec
aas
neg
adc
xchg
addr16
inc
ljmp
jp
xchg
and
repz
pop
pop
inc
arpl
pushw
neg
lock
xor
adc
scas
sbb
jge
inc
lock
aam
adc
nop
xor
jl
dec
mov
movsl
xor
or
cld
lods
mov
xchg
test
insl
fscale
cs
rcll
mov
aas
add
mov
repnz
rcrl
outsb
ficompl
ss
in
sbbb
into
stos
adc
lea
pop
cli
test
insb
lret
mov
rep
pop
push
adc
repz
loopne
dec
add
loope
or
dec
sti
call
loopne
sahf
bound
jno,pn
cmp
inc
xor
mov
cmp
sbbl
loop
mov
popa
inc
iret
fs
and
jns
push
into
std
and
pop
pop
pop
adcb
push
sbb
jae
jbe
je
mov
push
outsb
and
and
add
les
xor
mov
or
mov
add
ss
mov
add
mov
fbstp
bound
push
or
rcll
jg
and
sahf
in
sbb
test
sar
sbb
cld
fsubrl
push
cs
pop
xchg
stc
push
jmp
jne
push
pop
add
fbld
cmc
ficoml
push
xchg
rcr
cmpsl
cwtl
mov
add
push
movsb
outsl
cltd
lcall
add
sub
mov
jle
fstl
stc
das
or
cmpsb
push
mov
outsl
adc
cmp
in
inc
or
in
fs
int3
jns
movsl
push
xchg
les
ja
xorb
incb
fldcw
and
inc
add
push
mov
xchg
sti
add
jns
mov
jno
mov
cli
pusha
lea
leave
xor
dec
movsb
fldl
test
push
add
cmpsl
push
pop
and
subl
vmaxss
pop
fisubs
cmp
pop
aad
aam
aad
add
in
mov
sub
lods
cmp
push
adc
and
adc
scas
pop
fwait
mov
cmp
cmpsb
or
dec
mov
rorb
mov
pop
call
test
or
add
imul
mov
pop
add
mov
movsb
lcall
lret
loopne
fstpt
add
in
rorl
lahf
xor
inc
push
mov
cs
sub
sub
and
mov
xor
inc
mov
jo
cs
aad
jmp
and
push
and
xor
jg
daa
jnp
loopne
popa
xchg
fistpl
fiaddl
fiadds
sbb
push
sbb
dec
pop
rorl
xchg
lods
cmp
lcall
aas
adc
int3
sti
inc
xlat
xorb
imul
je
dec
roll
je
cmc
push
insb
stos
sub
dec
and
pop
adc
sbb
xlat
filds
lcall
cs
call
sub
ret
fs
daa
out
repnz
push
mov
mov
and
js
xchg
stos
dec
daa
pop
or
lret
loop
sbbb
xchg
negb
mov
add
scas
mov
push
sbb
mov
lods
adc
sub
sub
lahf
cmp
or
lcall
mov
es
sahf
js
rcrl
inc
shrb
dec
rcrb
inc
addr16
fwait
dec
push
and
or
add
insl
stos
sbb
shlb
ljmp
fcompl
cmc
cld
and
mov
dec
mov
dec
jl
jge
in
ret
sbb
sub
jl
cmpsl
push
rorl
mov
daa
pop
xchg
or
inc
mov
inc
fldenv
repnz
bound
and
xor
out
sbb
pusha
jae
jb
dec
xor
dec
sbb
cmp
xchg
mov
inc
dec
mov
hlt
js
cli
aam
ss
mov
shr
imul
cli
stc
and
and
pop
jp
add
xor
xor
sub
sbb
enter
lret
clc
jns
aad
gs
jg
xchg
dec
dec
jns
jmp
mov
pop
jp
das
shrb
lds
shll
xlat
cs
jnp
sbb
out
sbb
in
mov
ss
pusha
repz
sub
rcrl
andb
aas
push
ret
addr16
dec
sbb
and
rclb
in
inc
mov
or
cs
jb
pop
aam
inc
sub
lds
sti
call
imul
xor
add
or
out
or
sub
sub
add
movsb
sub
into
stos
icebp
or
dec
sub
mov
cli
std
sub
stos
lcall
inc
mov
mov
add
inc
in
and
and
pusha
or
mov
lods
aas
das
ret
std
push
cmp
sub
movsb
adc
mov
pop
test
inc
sarb
fimull
or
or
insb
jo
mov
mov
sbb
fldt
popa
out
in
push
loopne
mov
cmp
push
mov
and
dec
jg
aad
add
push
fdivrp
sar
fisubrs
jbe
sbb
ljmp
out
ss
push
xchg
add
int
push
lods
sub
jns
and
fiadds
sahf
call
out
xor
cmpsb
call
cmp
fnstcw
mov
xor
in
mov
fsts
xchg
sub
cmp
mov
out
jg
in
jb
xor
ljmp
cmp
out
in
mov
ja
push
push
mov
mov
fdivs
push
jo
add
test
xor
jmp
imul
fdivrl
cmp
mov
aad
std
shlb
repz
lods
mov
adc
xchg
cltd
jnp
loope
xchg
adc
sub
mov
jle
add
xchg
ljmp
xlat
inc
mov
loop
jg
mov
mov
aad
xchg
scas
inc
or
jno
push
jbe
mov
and
jb
frstpm(287
dec
test
mov
mov
loop
mov
ljmp
xor
xorb
push
mov
xor
test
push
pop
mov
cmpsb
out
xor
outsl
add
jmp
scas
sbb
cmpsb
and
outsl
shlb
int3
sbb
rol
cmpsl
push
test
or
dec
or
stos
adc
aam
inc
pop
lock
add
lcall
mov
cmp
add
mov
mov
cmp
iret
movsb
inc
cld
movsb
xor
cmp
popa
push
fstl
outsb
insb
loope
jb
sub
scas
push
jo
sbb
les
mov
in
xor
fldcw
mov
cltd
iret
xchg
jecxz
pop
push
mov
jno
xor
sub
push
call
rol
xchg
push
addr16
sbb
stos
inc
imul
shrl
scas
add
and
cwtl
clc
fiadds
cmpsl
inc
jmp
out
ljmp
push
std
repz
aad
out
lock
xor
adc
ret
sti
shrl
in
ja
pushf
outsb
sub
insl
xchg
cmp
pop
fs
incl
mov
inc
pop
loope
mov
icebp
pop
rcrl
negl
inc
sbb
dec
sbb
dec
stos
std
cmp
roll
nop
sbb
add
cmp
sahf
and
das
mov
cmp
lock
xor
mov
je
sbbb
sub
sub
jbe
out
and
insb
fnsave
test
adc
mov
pop
cli
mov
xchg
ss
cwtl
sbb
xchg
enter
xchg
pop
or
xor
push
ss
xchg
sub
push
push
ret
and
mov
lds
ret
add
loop
clc
enter
cli
inc
cmp
mov
add
pop
mov
daa
mov
xor
sahf
cmp
stc
neg
inc
jmp
xchg
pop
in
in
or
xchg
xor
dec
loopne
mov
xor
loop
pop
cmc
cmp
or
mov
imul
clc
mov
fdivr
and
sbb
inc
into
test
test
in
pushf
cmc
cmp
sahf
fldl
scas
push
fs
mov
test
mov
insb
adc
and
out
mov
shl
pop
jle
mov
testb
jge
xchg
int
or
int
aad
cltd
adc
jmp
addb
stos
and
popa
xor
cltd
xor
bnd
lock
subb
push
into
fsubrl
jo
xchg
push
test
lods
iret
int
xlat
aaa
mov
cmp
data16
push
pop
xor
xchg
ret
mov
daa
cli
cli
popa
mov
jne
call
xchg
inc
xchg
sub
outsl
mov
push
arpl
and
in
lret
int
in
mov
test
dec
and
inc
pop
je
sarl
push
aas
mov
stos
sbb
and
leave
sbb
fcmovu
aas
pop
xchg
sub
xchg
or
pop
hlt
decl
imul
in
or
sbb
jae
inc
imul
pop
and
mov
sbb
popa
in
xchg
cmpb
popa
xchg
cmp
lahf
jne
mov
popf
sahf
cmp
nop
sbbl
fstpl
popa
push
outsl
mov
and
ljmp
add
test
rorl
dec
arpl
xchg
fs
ror
mov
aaa
push
or
ss
popa
fisubs
pop
loopne
lock
punpckldq
push
mov
pop
jae
sub
push
movsw
mov
inc
repz
and
inc
mov
movsl
cmp
xchg
sbb
out
sbb
xchg
jne
ss
cmp
mov
fdivl
test
test
fsts
push
repnz
clc
or
inc
xchg
mov
push
push
push
leavew
pop
stos
xchg
mov
cwtl
mov
sti
xchg
pop
sub
ss
shrd
and
lock
sti
dec
xchg
dec
in
test
fbld
xor
cmp
loop
and
outsl
or
ja
repnz
add
incb
cmpsl
stos
push
dec
ss
pop
inc
ret
scas
fdivl
outsl
sub
lret
arpl
shl
adc
aad
dec
lds
xchg
pop
dec
add
xchg
repz
inc
sti
lds
jns
adc
mov
adc
rcrb
mov
roll
add
xchg
inc
ret
lock
pop
imul
lcall
ret
jno
scas
pop
stc
dec
clc
adc
sbb
dec
out
loope
aam
xchg
mov
xchg
mov
femms
jg
dec
clc
lock
adc
fdivs
mov
aas
insb
lret
sbb
pop
mov
aas
lds
bound
repnz
and
loopne
aad
sub
int3
test
mov
pop
xchg
cmp
lods
sub
xchg
adc
lds
in
rcrl
xchg
sti
ret
out
inc
push
lahf
inc
fnstsw
ret
cld
add
xchg
cli
insb
mov
loop
sbb
inc
adc
mov
test
roll
pop
sub
aas
dec
movsl
lret
iret
stos
or
xchg
cmc
xor
mov
mov
data16
fmuls
pop
nop
pop
dec
dec
pop
fs
jp
js
mov
xchg
jns
mov
inc
sub
xchg
dec
adc
pop
lock
testl
int3
or
mov
repz
shr
orb
std
sbb
sbb
push
sub
and
add
mov
inc
and
outsl
repz
xor
lret
loope
fcoms
xchg
push
pop
in
mov
jne
pop
das
fldpi
scas
cmp
inc
push
jle
and
stc
push
inc
out
popa
out
ljmp
clc
daa
xchg
sbb
cmpsl
test
les
lods
mov
pop
mov
jp
aas
cmp
enter
jmp
adc
xor
test
jae
addr16
mov
cmp
push
push
jbe
out
xchg
cmp
adc
cmp
pop
out
test
pusha
push
bound
ja
mov
mov
cmc
mov
std
js
pop
popf
jecxz
lds
pop
jg
dec
jp
jecxz
adc
push
fs
call
stos
and
push
int3
xor
dec
xchg
shl
andb
cmp
inc
out
mov
pop
mov
repz
stos
add
imul
ljmp
push
notb
cld
fs
stos
insl
out
imul
jb
xchg
insb
pop
xchg
jne
loope
lret
add
ret
mov
aas
lods
dec
mov
jno
test
pushl
mov
or
adc
add
popf
dec
mov
jno
adc
inc
adc
dec
sbb
dec
inc
xchg
in
into
xor
cmp
jnp
sbb
mov
pop
stos
mov
mov
or
push
xchg
scas
aam
mov
loope
push
scas
adc
test
sub
pop
pop
iret
adc
xchg
inc
push
jns
mov
fincstp
sub
sbb
push
adc
mov
add
adc
dec
cmc
mov
fisttpll
cltd
sbb
movsl
add
dec
inc
xchg
arpl
outsb
sub
adc
shrb
dec
mov
jno
jle
test
in
lahf
stos
push
push
lcall
jecxz
add
xor
pop
loop
call
loop
out
mov
test
icebp
in
mov
sub
pop
sbb
aas
lock
frndint
push
lret
rcl
xchg
xchg
enter
filds
mov
scas
in
fldcw
add
push
bswap
pop
xchg
xlat
inc
je
stc
aam
fdivrl
lcall
scas
lcall
add
sarb
imul
jae
lahf
sbb
ret
mov
xchg
or
sbb
fmulp
adc
lahf
sahf
dec
mov
inc
mov
int3
adc
pop
mov
pop
jne
arpl
xor
lds
mov
inc
adc
test
icebp
popf
and
int3
adc
mov
xchg
inc
push
xor
adc
ror
mov
lret
xchg
xor
dec
hlt
push
adc
data16
repnz
in
dec
int
sarl
adc
inc
cs
int3
sti
aaa
mov
stc
orl
std
adc
fists
mov
cmp
or
mov
fildll
sbb
add
xchg
loop
sub
dec
mov
movsl
push
mov
mov
aaa
loope
out
or
mov
mov
cld
cmp
fs
push
xchg
sbb
cmpb
addr16
iret
push
jecxz
sbb
xchg
mov
or
fbstp
fidivs
adc
dec
jns
cmpsl
adc
arpl
scas
out
mov
sub
sub
push
lret
lods
xchg
clc
pushf
and
fcomps
mov
mov
adc
xor
sbb
jnp
addr16
inc
push
dec
rclb
mov
and
mov
movsbl
push
xchg
push
sub
cs
fimuls
in
xor
jecxz
movsl
pop
pop
xchg
add
dec
adc
lods
push
movsb
xor
fs
in
mov
pusha
jne
xor
cmp
cmp
insl
jle
fstl
inc
test
jns
dec
pop
pushw
mov
xlat
cli
push
or
inc
ret
sub
mov
loop
ss
and
jle
xor
mov
scas
adc
in
in
cmp
mov
testb
cmpsl
loop
pop
xor
sbb
stos
lret
cmp
pop
sbb
cmp
jecxz
adc
inc
jmp
lret
push
jp
jmp
pop
aas
popa
push
push
push
mov
mov
xchg
popf
sbb
push
enter
aad
mov
or
ret
mov
push
xor
dec
and
jnp
mov
das
mov
cmpsl
jl
arpl
adcl
xorl
outsb
push
push
scas
and
idivl
sub
orl
cmp
dec
xchg
pop
sub
int
inc
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
jmp
dec
xor
test
mov
in
mov
bound
bound
popa
pop
js
jb
xchg
std
and
pop
clc
sbb
test
add
push
das
add
and
sbb
fisubrl
ja
lea
xlat
stos
inc
int3
inc
lret
xchg
out
loope
daa
imul
cvtps2pi
inc
pop
pop
xchg
xchg
xchg
inc
mov
dec
loope
mov
fwait
or
or
jno
outsl
inc
ja
pop
out
mov
jnp
ja
xchg
popa
outsl
jae
mov
idivb
dec
push
movntq
out
loopne
fidivrl
fldcw
push
movsl
cmc
rcll
pushf
adc
lods
stos
inc
xlat
leave
jbe
xorb
andl
lret
imul
mov
lret
add
push
push
add
inc
inc
sbb
adc
shlb
sub
aaa
cs
cmp
dec
test
out
xor
cs
shlb
jecxz
push
sub
fsub
insl
ret
aaa
leave
inc
lods
adc
xchg
sbb
sbb
xor
inc
enter
aad
push
cld
pusha
mov
call
jbe
jnp
daa
rcll
and
add
fcmovnb
enter
pop
and
cmp
lods
push
dec
or
jmp
icebp
int
popa
pop
jne
aaa
std
xchg
add
lcall
js
daa
sub
xor
stos
ficoml
aas
pushf
adc
lea
pop
filds
jns
cmp
iret
fisubrs
mov
or
clc
sbb
cmp
mov
cmp
rcll
mov
cld
lock
jge
push
xor
and
push
push
out
jne
jmp
sbb
jle
fldenv
test
and
pop
int
pop
divl
mov
mov
rcrb
addr16
leave
xchg
add
pop
and
imul
jle
add
sti
and
add
sub
lods
sti
ret
jno
ret
dec
loopne
fs
jmp
fcompl
push
fisttps
sbb
jne
repz
sarl
outsb
adc
test
lock
cmp
lahf
xchg
sbb
test
cmpsb
push
hlt
stos
mov
out
subb
adc
sti
fildll
pop
sub
sbb
movl
mov
pop
add
loope
lahf
xchg
aam
rolb
push
popf
cmpb
sbb
mov
inc
jp
sbb
xchg
cmp
inc
into
mov
mov
fcmove
jne
sbb
sbb
cmp
je
lret
loopne
add
shlb
push
push
mov
sti
pop
inc
adc
jb
loop
cmc
jae
imulb
jmp
mov
nop
inc
or
popa
push
mov
mov
xchg
out
sti
xchg
mulb
fnstcw
or
push
out
js
addl
mov
out
or
pusha
in
or
add
popf
in
addr16
inc
lods
add
push
cmp
lea
push
repnz
js
xor
xor
rclb
and
pop
push
inc
xor
inc
xor
add
daa
cwtl
lock
scas
adc
add
loop
mov
xchg
sub
rolb
push
push
or
dec
imulb
jg
fwait
ret
pop
dec
pop
mov
adc
insl
pop
dec
adc
pop
rclb
in
xor
rcll
lds
mov
cmp
jle
adc
fmul
sbb
negl
mov
out
repz
insb
rorl
sahf
sbb
jae
stc
jecxz
lods
mov
sub
subl
sbb
idivl
sub
adc
out
lods
add
scas
push
adc
sbb
pop
jp
pop
dec
push
leave
int
mov
mov
sub
outsb
push
sub
cs
mov
fsubs
adc
loopne
out
xlat
adc
enter
aaa
sbb
fwait
jp
jmp
or
sub
pusha
out
fcomps
sub
and
mov
add
push
cmp
xor
jb
sub
push
in
xchg
or
std
fldpi
dec
mov
push
or
adc
push
int
mov
fwait
pop
and
cmpsl
jmp
pusha
out
cltd
pop
test
rclb
mov
sub
mov
stos
bound
aas
subb
push
ret
cli
sti
add
into
pop
iret
sub
or
xchg
call
subl
push
sbb
rcrl
mov
sbb
mov
aas
adc
xchg
pop
enter
fwait
jmp
xchg
mov
dec
jnp
sbb
jns
pop
jno
call
inc
jbe
cmp
and
sbb
jns
dec
cmp
push
pop
cmc
adc
jmp
add
dec
jne
fistpl
outsl
iret
insb
cwtl
inc
cmp
lods
roll
notl
add
pop
mov
test
sub
sahf
and
scas
scas
es
and
lret
fimull
leave
sbb
adc
lea
int3
sbb
jp
mov
lret
je
cmpsb
inc
fs
pop
fpatan
in
ja
inc
loop
cltd
mov
add
fildl
mov
lds
out
ficoml
cmp
mov
rcl
in
cs
scas
cltd
or
sub
and
mov
movsb
add
mov
aaa
fs
jmp
push
jnp
insb
shll
push
cmp
stc
aad
orl
jg
mov
jg
and
shlb
or
fwait
clts
mov
xor
add
xchg
mov
popf
inc
loopne
pop
popa
pop
jae
sti
adc
cmp
cmp
xor
hlt
sbb
add
les
xchg
les
mov
ss
push
pop
and
pusha
lret
mov
sbb
or
mov
fidivs
add
aaa
dec
jecxz
inc
ds
push
and
xchg
fidivrl
mov
adc
sub
movsb
mov
xor
stc
test
cmp
jg
out
mov
jno
xchg
scas
icebp
out
inc
hlt
mov
shll
ror
aad
popf
loopne
xchg
lea
loopne
and
adc
js
scas
dec
inc
scas
cmpsl
jae
push
xchg
add
fnstsw
xchg
ja
cmpsb
inc
jp
stos
jb
xor
decl
or
mov
inc
fidivl
iret
lcall
pop
call
js
nop
mov
fistps
add
testl
cmp
scas
sub
jo
fstps
stos
mov
cmp
inc
adc
sbb
xchg
jno
sahf
and
sbb
rol
adcl
aaa
lret
adc
sbb
sbb
scas
xlat
cmp
cs
inc
add
mov
push
cmp
cmp
rcll
fcomps
ret
test
dec
xor
or
jno
push
pop
and
stos
jge
push
loope
stos
fcoms
adc
addr16
dec
popa
xor
gs
loope
lahf
pushf
dec
mov
inc
int3
fstl
sbb
pop
or
ret
mov
les
xlat
inc
dec
and
sbb
pavgb
xchg
mov
and
jb
push
jecxz
das
jg
xchg
jecxz
pop
insb
loope
mov
das
pop
stos
cli
pushf
das
or
pop
adc
mov
call
fs
loope
inc
add
pop
daa
into
mov
das
cmp
sbb
sarl
inc
stc
pop
outsb
dec
pop
outsl
sti
mov
or
sbb
pop
mov
in
push
mov
and
pop
fs
jge
pop
loop
push
push
in
add
icebp
inc
scas
bound
and
mov
adc
ja
mov
pop
xchg
lea
lcall
rolb
jns
inc
lret
add
fdivl
sbb
mov
xchg
jno
int
scas
aam
mov
lahf
mov
sub
push
aaa
push
push
cmovne
fcmovne
sbb
sbb
fimull
fmuls
out
cmc
sub
sub
add
adc
int
jno
in
push
jb
pop
mov
mov
xchg
orb
in
xchg
pop
xchg
aad
mov
mov
push
jo
xchg
int3
pop
je
mov
xor
je
add
enter
push
aad
bound
and
imul
xor
icebp
add
jl
js
repz
fcmovnb
fisubl
jbe
arpl
cs
mov
stos
push
cmp
popf
lahf
out
sub
cmp
mov
rorl
push
es
rolb
push
push
xlat
and
xor
mov
subl
mov
aaa
insl
mov
out
icebp
jbe
std
scas
dec
lods
in
imul
push
mov
inc
and
pop
push
push
stos
sub
jns
arpl
cmpsl
imul
add
leave
push
sbb
adc
mov
xor
adc
pop
bnd
lods
fnstenv
cld
pop
pop
mov
ljmp
xor
sarb
outsl
shrl
ljmp
adc
mov
les
jg
in
cmp
scas
pop
cld
mov
clc
adc
std
xchg
xchg
pop
fs
mov
mov
push
push
mov
push
mov
xchg
push
test
jae
lds
dec
mov
pop
xchg
mov
sub
push
scas
adc
inc
add
clc
clc
inc
cmc
cmpxchg
mov
icebp
lods
in
mov
shrl
in
lods
mov
dec
lods
xor
test
mov
push
inc
cmp
or
add
scas
ljmp
push
push
stos
cltd
pop
sbb
sub
stos
mov
jmp
cmp
mov
fnstenv
push
fwait
xchg
add
lock
popa
inc
sbb
inc
int3
cmp
loop
adc
mov
xchg
into
xchg
cltd
repz
mov
lret
mov
xchg
test
icebp
dec
jp
sysexit
pop
mov
iret
cmp
andl
js
negl
cmp
xlat
mov
sub
jecxz
jnp
ficompl
inc
and
in
gs
pop
je
and
pop
pop
out
or
push
add
dec
ficompl
mov
ds
cmp
pop
cmpsl
nop
pushf
and
hlt
mov
mov
int3
and
rclb
xor
out
rclb
aas
int3
movsl
jae
aaa
pop
fmulp
sbb
cs
insl
pusha
dec
test
xor
xor
or
bound
mov
sbb
loopne
scas
lahf
jo
sbb
dec
shll
inc
testl
mov
and
push
sarl
fs
and
push
pushf
adc
lea
loopne
pop
arpl
adc
ljmp
push
xchg
int
pop
insl
jne
jo
out
mov
mov
sarb
movsb
outsl
fisubrl
jne
shll
movsl
dec
push
sarb
cmp
inc
mov
and
movb
rclb
jl
or
sbb
popf
mov
jmp
dec
test
cmp
jecxz
data16
jle
repz
fdivrl
jp
xorb
xor
xchg
out
jo
loopne
pop
aam
test
cs
icebp
sbb
fdivrl
sub
ljmp
ja
in
jae
shl
push
jmp
in
ljmp
add
in
nop
adc
xor
in
rolb
or
xchg
sub
test
ret
stos
push
test
xchg
or
loop
in
inc
aam
inc
sbb
shrb
cli
fnstcw
gs
or
out
push
int3
push
daa
pop
pop
xchg
jge
jle
int
decb
adc
sbb
imul
jne
pusha
ds
nop
dec
pushf
mov
rcrb
sub
jecxz
negl
enter
fsubl
sub
fists
xchg
dec
xlat
xchg
les
repnz
fwait
nop
leave
popa
cltd
cli
test
jmp
aaa
jne
sub
pushf
pop
jae
add
cmp
test
or
ljmp
or
mov
adc
push
icebp
sahf
add
scas
mov
jmp
loop
sbb
mov
push
cmp
lds
int3
mov
syscall
test
popf
dec
jbe
test
stos
dec
mov
shl
sub
movsb
or
test
cmp
das
mov
jns
fcomps
sub
insl
ljmp
hlt
jecxz
sbb
sub
push
push
ficomps
loopne
jo
cltd
shlb
bound
xchg
sahf
jge
mov
sub
mov
call
jns
scas
nop
rorb
xchg
loopne
loop
stc
or
loopne
push
loope
cmp
insb
daa
pshufw
rcr
mov
sbb
ret
lret
mov
arpl
push
idivl
lret
idivb
rcrb
inc
mov
or
cmpsl
mov
cmpb
push
pop
loopne
fmull
pop
mov
add
movsb
in
jmp
icebp
fs
add
mov
push
jo
pop
or
out
test
cmp
push
int
sbb
cwtl
aaa
popa
add
cmp
adc
aam
ss
jns
dec
mov
mov
mov
add
sub
mov
adc
pop
mov
fisubl
sub
pop
mov
pushf
mov
dec
mov
xor
pusha
sbb
sbb
out
inc
pop
popw
add
shll
lahf
xchg
xchg
dec
dec
stc
xchg
cs
aas
lahf
pop
cmp
push
and
aaa
cmpl
mov
push
mov
sub
les
mov
fwait
or
lahf
aaa
sti
lahf
xchg
outsl
addb
aam
cmp
sub
fsubrs
int
aaa
push
jle
lret
and
push
pop
fimuls
add
xor
cmp
push
sar
das
int3
pop
test
imul
inc
icebp
and
pop
adc
leave
aad
or
lock
mov
add
jo
and
subl
daa
mov
mov
fcoml
mov
xor
mov
sub
and
and
push
push
clc
pop
shlb
mov
imull
jmp
add
jo
cmpsl
negl
loopne
mov
addps
mov
pop
iret
push
iret
js
insb
int3
sub
fdivs
jbe
out
sbb
inc
add
or
cmc
aas
sbb
mov
mov
pop
cld
add
stos
loope
gs
push
movsl
xchg
movsl
jb
inc
movsl
sbb
sub
adc
fwait
pop
jb
cwtl
stos
jo
in
testl
sub
in
je
push
jge
sbb
push
lods
inc
dec
push
dec
push
mov
or
mov
div
lods
aas
add
inc
sub
out
fbstp
jno
in
xor
sub
xlat
dec
lds
cmp
mov
loop
jns
insb
or
jnp
pop
pop
enter
dec
ja
dec
pop
dec
test
adc
push
call
test
notl
pop
lods
mov
push
push
cmc
lods
inc
add
imul
pop
push
les
xor
fldt
add
addb
dec
add
into
fidivrs
jecxz
push
cmp
test
out
clc
iret
cmp
jle
lahf
pop
fistpll
or
fnstenv
popa
sbb
xchg
insb
add
gs
cltd
dec
or
xchg
dec
mov
cmc
ja
adc
imul
dec
int
icebp
mov
inc
cmpsl
repz
popl
repz
mov
sahf
pop
adc
jb
add
push
push
fcoml
mov
pop
xor
mov
das
sub
mov
jp
push
add
imul
xor
ret
ficoms
jecxz
add
or
add
adc
mov
sbbb
jne
imul
nop
mov
and
mov
and
sti
in
jb
mov
push
in
stos
scas
xor
xor
stos
or
dec
mov
jne
movsl
jmp
pop
fstpt
add
aas
inc
pusha
inc
jo
mov
lea
xchg
jnp
dec
cli
mov
add
loop
push
lret
cmp
inc
dec
ja
inc
sbb
xor
xchg
pop
xchg
inc
movsl
fdivrs
add
cmp
aas
pop
aad
dec
xor
sub
leave
repz
jb
imul
hlt
aas
and
sub
adc
dec
sub
sbbl
inc
cld
push
or
sub
mov
inc
aaa
cmc
sub
cmc
idivl
test
pop
call
xor
sub
inc
clc
cli
mov
mov
push
mov
pop
sti
push
mov
lahf
mov
rorb
push
fcmovbe
fcmovnb
sub
rcr
scas
hlt
jl
mov
and
add
into
lds
jae
pusha
inc
add
shl
shll
sbb
inc
popf
imul
movsl
cmpsl
mov
adc
cld
jge
mov
out
icebp
mov
int
jne
sub
sahf
cmpsb
fstpt
pop
xchg
jae
test
mov
fsts
push
pushf
push
sub
popa
fmul
jae
xor
lahf
jle
xlat
out
add
mov
hlt
xor
lock
xchg
int3
push
add
dec
in
fisubs
pop
sub
jmp
inc
jae
mov
cmp
adc
cld
fs
push
rorb
jmp
jne
lret
jl
bswap
inc
js
cmp
mov
gs
sub
sbb
popa
movsb
sarb
jno
movsl
sbb
repnz
inc
lret
rcll
push
mov
pop
mov
push
dec
sbb
jg
aam
repnz
mov
mov
mov
pushf
sti
or
sub
or
or
sbb
mov
xorl
push
dec
cmp
nop
pop
push
xchg
mov
and
jne
xrelease
loopne
adc
or
int3
fsubs
enter
jno
inc
repnz
mov
in
xor
stc
lahf
pop
jo
pop
cmp
vpaddsw
daa
cmp
pushf
pop
xchg
fsubs
xchg
stos
push
push
loopne
jae
adc
pop
insl
mov
shrl
das
mov
fs
cmpsb
add
popa
fistps
mul
mov
sbb
test
jb
mov
push
jmp
js
je
das
jmp
jno
hlt
xor
sub
mov
cmpsl
pusha
fwait
addr16
leave
gs
fstps
fwait
movl
mov
dec
loope
push
lods
adc
mov
call
test
mov
mov
shl
shrd
push
rcr
mov
jns
nop
loopne
stos
xchg
hlt
enter
addr16
sbb
inc
lret
movsb
dec
jle
or
inc
mov
add
adc
cmp
notb
fldt
test
leave
add
imul
adc
mov
cmpsb
iret
mov
fdivrl
xchg
cli
subb
mov
insl
sub
sub
xchg
pop
mov
test
loope
inc
adc
repz
push
lret
mov
xchg
pop
xchg
pop
adc
xor
sti
es
dec
inc
or
repnz
lea
imul
adc
sahf
jecxz
inc
sti
stos
mov
or
imul
inc
and
inc
mov
sub
movsl
ljmp
data16
and
clc
pop
cs
daa
hlt
lcall
push
xlat
xchg
popa
push
dec
and
mov
or
in
fnstsw
mov
push
subl
jne
inc
loop
push
lods
inc
sbb
je
pop
mov
das
repnz
gs
int3
jnp
fnstenv
in
lods
jecxz
js
outsb
push
sbb
fcompl
add
fs
or
jecxz
and
mov
mov
push
pop
pop
cmpsl
mov
das
mov
inc
mov
pop
rcll
fsubrl
sub
xchg
out
adc
xlat
cmc
push
xor
lods
add
std
sti
inc
xchg
sub
clc
movsl
fwait
orb
loopne
ret
enter
rclb
push
test
scas
in
xor
xor
in
dec
inc
inc
dec
out
jbe
pop
cmpb
leave
xchg
or
xor
popa
adc
enter
in
stc
jmp
jne
xor
jno
jo
jge
jo
pusha
or
pop
xor
in
nop
adc
sahf
and
popa
ja
daa
adc
jb
daa
ljmp
addr16
jbe
xorb
out
jecxz
xor
dec
je
mov
std
fildl
test
fildl
scas
dec
mov
jmp
dec
fs
sbb
jne
out
arpl
insb
hlt
mov
ljmp
pop
sbb
lock
dec
loope
pop
mov
or
pop
lret
fisttpl
repnz
icebp
or
in
adc
cmpsl
pop
stos
cwtl
sbb
fcmovnbe
addl
cmpsl
clc
xor
scas
push
push
and
rorl
inc
lret
inc
lods
cwtl
and
loop
lods
imul
jns
or
mov
loopne
cld
incl
lcall
test
std
pop
loope
scas
xchg
mov
sti
xor
xchg
int
sub
inc
xor
popf
xchg
fld
jmp
mov
scas
cmp
xchg
imul
jle
gs
addr16
hlt
and
xchg
lods
push
pusha
push
jmp
es
pop
lea
cmp
ja
pushf
or
pop
and
xor
in
pop
adc
std
into
sbb
fidivl
std
xchg
inc
in
loopne
xlat
mov
dec
int3
jge
adc
sti
mov
mov
fisttpll
sar
outsl
and
push
mov
out
mov
popf
xor
inc
and
rclb
xchg
rorl
out
lock
fildll
push
sub
imul
and
inc
mov
test
scas
daa
filds
lods
push
and
mov
ljmp
in
leave
inc
sbb
cmp
pop
pop
jecxz
sbb
sub
sarl
jle
sub
decl
and
dec
cltd
popl
and
sti
scas
inc
jmp
in
jno
loopne
lcall
xchg
xchg
jg
fildll
cmp
xor
mov
xchg
imul
push
adc
inc
push
cmp
hlt
mov
cmp
adc
rcr
pop
lods
push
stos
jg
pop
test
es
stos
and
cmp
fbld
cmp
push
or
gs
scas
xlat
fstps
aam
sub
pushf
mov
ja
dec
in
stc
jno
test
insb
or
and
fimuls
sub
jae
jno
cmp
mov
push
xlat
mov
movsb
fistps
jmp
fdivs
iret
cmc
cmp
add
dec
cli
mov
bound
das
cmp
xor
cwtl
cmp
or
in
in
es
add
cmpsl
movsb
push
popa
xchg
hlt
dec
inc
lods
loop
cltd
movsb
jae
sbb
cli
loop
arpl
aam
movsl
cmpsb
lcall
and
cmp
imulb
and
add
sbb
mov
mov
xchg
mov
out
xor
test
cli
out
data16
in
xchg
add
jl
add
jmp
sub
stos
push
jne
mov
dec
popf
fdivr
or
and
movsb
cli
add
push
mov
adc
clc
lret
inc
adcl
pop
ja
ret
lods
mov
aad
adc
or
loopne
xor
repz
aaa
jl
pop
cltd
pusha
xlat
in
push
cmc
adc
jo
mov
xor
cli
mov
inc
insb
dec
cmp
aad
dec
adc
in
xor
sub
xor
aas
cld
cmpsl
nop
mov
adc
test
sub
mov
loope
jle
pop
mov
jmp
gs
push
and
fcom
hlt
cmp
jae
movsb
lret
arpl
mov
xchg
repnz
lret
insb
sbb
addr16
add
add
shlb
popf
test
mov
mov
jp
mov
clc
mov
into
or
inc
mov
jo
sbb
faddl
xor
aaa
xchg
sbb
les
push
push
ds
cli
rorl
jns
jecxz
stos
enter
pop
mov
aaa
mov
stc
enter
scas
add
xor
push
jae
clc
shlb
test
mov
jmp
daa
in
inc
jno
push
mov
mov
hlt
out
stc
dec
aaa
mov
inc
sahf
or
mov
jecxz
ret
shl
mov
repnz
ret
push
adc
dec
stos
std
pop
sbb
gs
cmovne
pop
cmp
dec
int
cmp
js
mov
notb
add
cmp
aas
xor
stc
bound
mull
stc
cmp
cmp
rcr
inc
fidivl
add
cmp
lret
mov
movsb
mov
push
xchg
int3
rorb
notb
roll
orb
sub
cmp
lock
mov
lock
pop
cs
fcmovnu
fwait
dec
iret
pop
xchg
cltd
inc
or
mov
lods
in
mov
pop
roll
mov
lret
push
mov
dec
loop
popa
fdivl
jecxz
ret
xor
pop
je
mov
cmpsl
mov
xor
in
add
ljmp
xor
pop
lahf
mov
push
xchg
leave
sahf
mov
inc
rorl
mov
push
popa
je
or
jecxz
xchg
int3
mov
xchg
es
testl
fsts
stos
cltd
std
jbe
xchg
movsb
jno
sbb
mov
xchg
and
jmp
jb
and
cmp
xchg
adc
ds
nop
xchg
call
leave
add
mov
test
fstps
sub
addr16
pop
inc
mov
mov
addr16
jo
pop
in
adc
aam
mov
mov
lds
sub
rclb
jg
loop
jl
jno
mov
mov
outsb
xchg
shll
popf
sbb
hlt
ja
out
or
iret
push
stc
xchg
out
idivl
jg
repz
pop
or
inc
adc
iret
outsl
leave
jecxz
cltd
or
lea
jp
popa
mov
jle
popa
mov
pop
ja
js
aam
ret
push
ficoms
cmpsb
sub
jle
xchg
shlb
enter
cmpsl
xlat
cs
inc
mov
dec
dec
js
xchg
call
dec
sub
push
mov
testb
mov
mov
sbb
inc
inc
shl
rcl
jle
test
outsl
shlb
add
jns
sbb
xchg
jp
stc
dec
mov
dec
mov
adc
mov
jae
cmc
shr
mov
or
cmpl
xchg
xor
mov
mov
and
pop
fcoms
xchg
aas
fadds
sbb
rolb
mov
mov
iret
and
add
andl
pop
shll
dec
test
xchg
rcrl
jge
or
int
pop
into
push
sbb
mov
xchg
fxtract
sbb
mov
xchg
dec
movsl
mov
cld
loop
dec
mov
pop
in
rcrl
dec
push
pop
repnz
popa
mov
fistps
pop
push
jae
test
xor
cld
mov
gs
test
test
sbb
pushf
test
hlt
xchg
mov
xor
insl
jl
movsw
mov
and
xchg
stc
add
xchg
jmp
dec
test
scas
inc
sahf
mov
xchg
mov
pop
pop
dec
fadds
lret
pop
mov
xor
in
imull
sub
mov
sti
fwait
mov
je
mov
add
das
jae
sub
mov
pop
jae
jle
and
imul
int3
xchg
sub
jnp
leave
ds
loop
arpl
inc
sub
sbb
ret
ds
in
mov
and
jno
sub
adc
or
lock
fistpl
mov
and
aas
rclb
rclb
pop
movsl
dec
nop
scas
xor
loop
stos
or
mov
push
xor
mov
sbbb
jnp,pn
mov
rcl
or
dec
add
jmp
and
dec
mov
outsb
mov
std
scas
sbb
lods
xchg
push
and
mov
arpl
in
mov
shll
and
movsb
vaddsubps
jo
cmpsb
in
fistpl
push
lods
ljmp
pop
push
xor
mov
movb
pop
inc
inc
rol
fnstsw
xor
ds
push
shll
je
ret
das
rcr
lods
out
mov
cs
imul
mov
jle
test
adc
mov
int3
mov
loopne
mov
ss
repnz
mov
fwait
in
popa
lods
sahf
cmpsl
mov
ret
and
jno
cli
loop
std
insl
push
inc
push
fs
sti
fstl
cmp
pop
test
jne
pop
cmp
sub
lcall
lahf
mov
pop
pusha
sub
rolb
ss
fsubrs
or
addr16
and
outsb
jge
pushf
sub
adc
out
pushf
pop
lret
mov
push
sub
popf
jo
dec
sahf
push
mov
xchg
mov
add
das
fisubl
xorl
jle
xor
pop
inc
xchg
cmp
pop
out
sub
mov
adc
or
inc
cltd
cmp
or
cld
push
dec
in
mov
adc
and
pop
stos
sub
sbb
xor
lret
inc
and
cwtl
add
fsts
popa
pop
inc
dec
cs
pop
mov
mov
stos
in
inc
fdivrl
or
cld
xor
jmp
pop
dec
sarl
aas
push
shr
ja
or
call
xor
mov
imul
xor
mov
lcall
xchg
mov
dec
frstor
sarb
or
je
aad
inc
jg
xchg
popa
dec
outsb
cltd
push
std
mov
mov
pop
scas
or
jge
mov
push
scas
inc
stos
lock
lcall
inc
es
xchg
insl
mov
sahf
dec
leave
xor
popf
fdivl
inc
fmull
or
test
out
lods
sub
dec
cmp
or
jo
inc
mov
cmp
mov
stos
push
adcb
jle
lds
mov
sbb
cmp
ds
cli
inc
mov
das
jl
sbb
movsl
orl
xchg
addb
fisubrl
push
sub
lret
lahf
lods
outsb
in
sub
xchg
xor
leave
xlat
test
stc
mov
jmp
cmp
fadd
sbb
and
push
push
adc
or
xor
out
mov
ret
sbb
push
xor
lahf
popf
mov
adcb
sahf
and
jb
mov
insb
cld
fidivrs
fcomi
dec
fadds
sarb
pushf
xchg
adc
or
lcall
lea
pusha
add
pop
mov
cs
fmul
jg
popf
mov
mov
cltd
mov
div
loop
daa
flds
shlb
sbb
jno
fisttps
adc
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
cli
adc
add
add
sbb
ret
xchg
ss
push
mov
sbb
movsl
cs
aam
inc
pop
xlat
or
sub
dec
dec
add
lock
popf
adc
ja
pop
mov
das
andl
sbb
mov
dec
pop
gs
xchg
add
add
add
shrl
adc
cmp
out
pop
xchg
push
sahf
int3
add
popa
add
add
mov
lcall
inc
jbe
cwtl
addr16
mov
test
push
and
mov
ja
je
lret
mov
pop
sbb
xor
mov
out
mov
xchg
mov
pop
xchg
xorb
aas
xchg
out
xor
stos
stos
pop
les
cmc
ret
hlt
inc
mov
loope
xchg
add
add
add
sub
sub
addb
int3
add
popa
add
add
cmpsb
and
push
mov
mov
test
push
mov
push
xchg
lock
jmp
add
xor
jecxz
lret
gs
repz
fcomi
test
test
mov
bswap
push
pop
int
daa
jno
inc
adc
mov
mov
jg
es
or
add
add
add
das
and
aam
aam
ljmp
je
jecxz
mov
add
add
adc
sub
pop
pop
jg
xor
gs
push
xchg
fdivs
stc
cld
inc
inc
cmpsl
inc
pusha
outsb
insb
dec
ret
xor
sub
popa
pop
sub
jne
or
xchg
xchg
fnsave
pop
xor
jg
daa
into
fsubrl
jge
in
push
inc
xchg
in
mov
inc
jecxz
mov
mov
add
add
add
add
mov
sti
cmpsl
mov
dec
mov
ror
add
add
shrb
outsb
adc
mov
mov
jae
dec
in
mov
xor
xor
ret
mov
mov
jo
sub
insb
lret
mov
les
lea
inc
lods
dec
dec
push
insl
push
cmp
movsb
aas
das
add
stos
test
jo
push
push
and
daa
stos
aad
add
add
add
add
out
lods
cmp
stc
stc
loopne
lock
add
popa
add
add
sub
jb
push
jno
mov
jbe
or
lds
gs
push
inc
inc
push
fcoml
inc
xor
fld
dec
scas
push
jecxz
xchg
in
xchg
imul
fidivrl
lea
je
cmp
sbb
iret
movsl
fwait
in
jns
mov
adc
or
add
add
add
push
xor
gs
aaa
push
mov
pushf
or
add
add
mull
aam
mov
mov
in
push
cmpl
or
or
pop
roll
sub
sub
int
xorl
xchg
add
push
shrb
jp
xor
sub
cltd
mov
cmp
jle
mov
cmp
loopne
or
nop
sbb
ret
sbb
add
add
add
adc
push
adc
cwtl
out
frstor
adc
adc
add
popa
add
add
pop
movsb
pop
or
sbb
pop
adc
shrb
inc
or
adc
call
or
xchg
jmp
push
out
sbbl
iret
dec
jb,pt
out
lds
mov
sbb
xchg
fldl
aaa
sub
inc
lds
loopne
ja
arpl
push
imul
add
add
add
sub
das
jle
jg
imul
cmp
fbld
popa
add
add
loope
pop
jbe
rorb
xchg
push
jne
int
and
repz
das
mov
sub
arpl
movl
mov
leave
dec
cpuid
test
cmp
scas
push
jne
aad
mov
push
icebp
cli
es
nop
mov
fnstenv
in
dec
mov
mov
add
add
add
and
mov
mov
imul
popa
add
add
adc
out
push
mov
popa
mov
dec
shll
adc
sub
add
into
cmp
dec
xchg
js
je
imul
lcall
jns
nop
mov
rcll
xchg
dec
xchg
fisttps
inc
xchg
cmpsl
test
gs
xor
aad
test
add
add
add
add
or
ret
lods
sub
mov
aaa
loop
add
add
adc
inc
lods
push
movsl
push
dec
dec
sub
std
test
mov
shlb
add
out
test
xchg
jmp
notb
stc
popa
or
daa
mov
cmpsb
cmp
cmpsb
xchg
xlat
mov
roll
pop
xchg
hlt
mov
fidivs
sti
mov
aas
add
adc
ret
dec
cmp
adc
jecxz
lcall
add
add
add
ret
pop
iret
fst
enter
daa
pushf
or
add
add
into
pop
or
jne
addr16
mov
lock
mov
lods
push
adc
jge
inc
and
push
test
cmp
lods
xchg
lods
out
clc
pop
ret
sub
or
cld
push
cmp
add
cmc
and
sldt
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
sbb
jp
inc
add
sbb
out
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficoml
inc
add
sbb
sbb
jle
inc
add
sbb
outsb
sbb
mov
inc
add
sbb
push
sbb
or
mov
inc
add
sbb
ret
add
sbb
or
inc
add
pop
inc
add
sbb
sbb
inc
add
test
ficomps
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
dec
or
add
pop
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
mov
sbb
or
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
dec
mov
add
popa
add
add
cmpsl
xchg
cwtl
sbb
lahf
pop
jbe
dec
ljmp
mov
rorb
flds
jl
xchg
push
sub
push
mov
ret
aad
inc
and
faddl
jb
cmp
or
into
cs
jae
xchg
movsl
pop
mov
test
in
xchg
rorl
test
les
add
add
add
add
mov
push
mov
xlat
push
adc
cmp
pop
add
popa
add
add
cld
mov
ss
sbb
out
inc
cmpsb
cld
mov
jno
imul
repz
mov
in
in
aad
sti
add
xorb
dec
cmc
or
pop
dec
fstpt
shlb
movsb
sub
cmpsl
inc
mov
xor
or
mov
lcall
jb
add
add
add
add
stos
pushl
xchg
push
js
add
popa
add
add
or
mov
mov
inc
jp
xchg
outsb
push
rol
shr
push
adc
cmp
add
push
mov
jecxz
xchg
iret
dec
lret
mov
repnz
mov
xchg
fiaddl
or
jnp
inc
xlat
lret
popf
xor
sub
mov
test
outsl
shr
jns
jns
addr16
add
add
add
add
cmp
in
fimuls
or
popa
add
popa
add
add
xor
sbb
lahf
cmp
gs
push
out
movsl
lock
int
mov
jecxz
pop
xchg
pop
pop
mov
lea
fsubrs
jb
call
pop
jge
nop
inc
xor
sub
fnstcw
or
pop
push
test
or
pop
xorl
fstpt
add
add
fnstenv
std
negb
sub
jbe
incl
add
popa
add
add
pop
pop
pop
push
xchg
test
lods
mov
sub
adc
addr16
push
js
dec
int
adc
fisttpll
xor
cmc
jp
push
ret
and
adc
cli
rol
sbb
data16
call
xchg
pop
push
push
mov
xor
sbb
xchg
das
movsb
test
fstl
lea
dec
fs
add
add
add
add
xor
jb
inc
mov
ljmp
add
lods
fcom
jns
insl
scas
mov
cmp
data16
sub
testb
sahf
xor
jnp
inc
jge
fsts
mov
inc
gs
and
leave
scas
in
loope
out
push
cmp
add
mov
adc
fisubrs
subb
xor
push
add
add
add
add
add
pop
sub
sar
xlat
add
popa
add
add
xchg
pop
adcl
jne
in
repz
dec
cmp
in
in
xlat
imul
fimuls
jbe
pop
pop
sbb
loope
xchg
cmpsl
sbb
int
cs
psubsw
pop
fisttpll
mov
xlat
rcll
arpl
repnz
sub
or
or
jb
push
adc
add
add
add
push
add
xor
jb
insl
xor
and
pop
fadds
add
add
icebp
pushf
mov
aaa
scas
mov
nop
mov
mov
nop
push
mov
and
lock
pop
dec
in
xchg
ds
xor
loopne
inc
dec
push
sub
stos
mov
pop
add
repz
dec
daa
subb
push
arpl
xor
mov
out
adc
push
mov
test
pop
mov
add
add
push
add
mov
out
inc
repnz
fadds
add
add
sub
jnp
insl
mov
lahf
cmp
imul
or
jo
int
dec
cmp
mov
dec
cmc
test
xchg
push
syscall
std
negl
stc
lds
jmp
fcoms
push
mov
xchg
jne
in
pop
jmp
dec
fs
add
mov
pop
ss
xor
mov
scas
and
test
add
add
add
add
mov
jmp
fimull
es
cld
pop
flds
add
add
xor
jno
es
jmp
fbld
std
xorl
mov
leave
pop
nop
or
int3
es
into
in
fisttpl
xchg
popf
mov
sub
and
stc
xchg
cmp
jmp
or
dec
loope
xlat
dec
sub
jne
outsb
mov
jb
xchg
xchg
jno
fimuls
scas
addr16
scas
insl
xchg
pop
jnp
add
add
add
add
pop
iret
pop
aad
ss
dec
int3
and
sbb
add
add
mov
stos
jbe
dec
sub
scas
popf
pushf
jge
shlb
out
inc
add
mov
in
mov
push
insl
cmp
inc
dec
inc
cmp
fwait
mov
push
pop
iret
sarl
and
leave
and
mov
push
arpl
lock
shl
stos
test
call
sub
aas
push
sub
add
add
add
add
cld
les
add
add
cmp
addr16
mov
pop
adc
jp
int
jno
loopne
fldl
rolb
in
dec
ret
mov
adc
mov
icebp
sub
inc
icebp
sahf
jecxz
cmp
fisubrs
aas
and
sub
add
cmpl
int3
call
ja
aas
clc
sarl
mov
add
add
add
add
lock
jle
repz
mov
add
add
test
cmp
push
xor
test
mov
lcall
hlt
nop
adc
mov
pop
fidivl
imul
push
mov
inc
and
mov
repz
adc
imul
xor
out
call
sbb
pop
aas
cld
stc
mov
ss
outsl
dec
out
add
add
add
add
adc
adc
mov
lds
mov
add
add
jecxz
loopne
xor
sub
arpl
enter
push
adc
sbb
es
ja
les
sti
jg
sub
xor
outsl
dec
xchg
xor
icebp
xchg
mov
mull
imul
movl
cmpsl
mov
dec
dec
sbb
mov
lods
push
add
add
add
add
mov
lock
mov
shlb
pop
mov
popa
add
add
xchg
push
add
mov
dec
pop
mov
cmp
jno
fwait
sbbl
xchg
add
daa
popf
ljmp
out
repz
adc
out
dec
mov
cltd
ds
gs
mov
lds
test
shrb
popa
fwait
inc
push
pop
fcmovnu
decb
add
add
add
add
sqrtps
cmc
das
sbb
xchg
iret
sti
push
lcall
add
add
dec
mov
dec
jno
inc
mov
mov
call
inc
shlb
cmpsl
daa
hlt
lret
cli
rclb
mov
jp
daa
cli
into
lcall
jbe
xchg
idivb
and
lcall
jecxz
and
xor
out
inc
adc
lcall
add
add
add
add
sub
fildll
cmpsl
lcall
popa
add
add
xchg
shl
das
movsb
dec
xor
fcomp
and
pop
test
in
pop
xchg
bound
shlb
push
jmp
inc
lahf
cwtl
ss
push
xor
clc
das
xchg
dec
cmp
ljmp
icebp
std
sub
add
xchg
and
jnp
shrl
sbb
std
fimuls
imul
fs
testl
push
outsb
daa
faddl
add
add
push
cmp
aas
lods
fisttps
mov
mov
or
sub
jnp
jbe
icebp
pushf
jno
setae
cs
ret
sbb
push
fsubrl
arpl
lods
repnz
mov
inc
jge
push
xchg
xchg
rcll
in
scas
aas
add
sbb
loope
cmp
add
add
add
add
jne
jg
clc
cs
push
in
add
popa
add
add
xor
push
in
data16
jo
lock
int
lcall
out
mov
dec
sar
sbb
push
addl
and
rclb
loopne
inc
shlb
jle
out
push
fidivrs
test
mov
pop
mov
push
or
inc
push
aam
xor
and
fimuls
add
add
add
mov
cmp
sti
dec
mov
je
lcall
add
popa
add
add
push
aad
call
or
mov
rorb
xchg
subl
cmpsb
scas
scas
dec
outsl
clc
jnp
cmp
push
inc
xchg
divl
adc
push
pusha
cltd
xor
sub
jns
adc
scas
fsubrl
mov
push
cwtl
mov
stos
test
loop
loop
push
or
pop
add
add
add
add
push
mov
mov
xchg
adc
lahf
orl
popa
add
add
popf
pop
faddl
xlat
jo
sti
sti
scas
adc
das
push
jp
sub
int
jns
outsb
imul
mov
or
mov
lahf
lock
jp
arpl
sbb
mov
pop
add
jg
cmp
pusha
in
daa
cmp
inc
mov
pop
cmpsb
add
add
add
add
fisttps
push
out
mov
scas
pop
rolb
add
add
rorl
movsb
xlat
ficoms
push
inc
scas
std
push
xchg
aas
loope
jno
fisubs
pusha
jae
scas
jno
dec
xor
stos
dec
pop
xchg
adc
mov
ljmp
rolb
jne
popa
sbb
cmp
psrad
cmpxchg
inc
sbb
push
dec
ret
scas
jne
lods
add
add
add
add
jle
out
sbb
mov
rolb
add
add
jmp
sbb
mov
sbb
mov
sub
cmp
insl
inc
push
data16
clc
sbb
lds
lods
sbb
pop
daa
jmp
mov
test
sarb
inc
fildll
xchg
jmp
pop
test
cmp
popf
jmp
inc
outsl
fldenv
cwtl
xor
xor
and
add
add
add
jo
and
cmp
out
icebp
leave
rolb
add
add
cmp
inc
mov
mov
addr16
lds
dec
add
and
lret
cld
js
xor
cmp
xlat
xor
mov
dec
mov
add
dec
std
xchg
icebp
sbb
stos
sbb
les
iret
jle
adc
jns
mov
mov
gs
icebp
mov
add
add
add
xchg
nop
ffree
popf
aam
push
jmp
add
add
push
stos
or
imul
aad
and
hlt
sub
repnz
xchg
mov
sbb
aad
adc
jg
mov
mov
sub
push
addr16
xor
mov
push
iret
sub
and
mov
out
test
lea
aad
daa
add
add
add
add
mov
jbe
hlt
mov
and
cmpsb
shrl
popa
add
add
imul
cs
fistl
sbb
mov
adc
std
sbb
sbb
push
movl
clc
addb
add
push
inc
mov
out
jno
or
loop
sub
shll
push
lds
push
jb
add
add
add
xor
into
mov
sub
out
insl
sbb
add
popa
add
add
push
jno
neg
mov
push
enter
mov
xor
jno
mov
iret
test
fisttps
push
in
dec
pop
add
sub
push
mov
mov
sbbb
les
push
push
daa
xchg
mov
ror
cmp
push
dec
add
add
mov
popa
insb
add
add
add
add
in
outsb
and
pop
mov
dec
rolb
add
add
xor
insl
adc
jl
stc
inc
sub
adcb
mov
inc
inc
fnsave
jne
pop
pop
push
mov
add
jmp
cmovg
or
push
stc
fimuls
push
in
jmp
jp
cmp
mov
loopne
pop
sbb
test
mov
xchg
les
add
add
mov
and
dec
scas
rolb
add
add
test
pushf
outsb
idivb
mov
xchg
std
xlat
push
adc
addr16
arpl
xor
push
push
sarl
andb
lods
push
ljmp
aaa
push
cmpsl
loope
inc
jae
test
fs
adc
add
mov
and
add
jp
mov
mov
add
add
add
add
stc
call
into
inc
mov
shlb
add
add
inc
push
aaa
adc
inc
push
stc
push
jae
test
cmp
outsb
mov
aad
pop
test
jae
pop
dec
sbb
seto
adc
in
mov
jmp
jae
sbbb
adc
and
sarl
cmp
pop
mov
add
add
add
sub
sub
mov
roll
add
add
and
into
jo
lock
mov
adc
sub
incb
repz
movsb
jb
ds
addr16
rolb
add
mov
jmp
inc
adc
cmp
in
add
out
call
xor
inc
sub
jle
js
xchg
sbb
jnp
xchg
cmp
imul
sbb
sbb
add
add
add
dec
aas
int3
sbb
out
loopne
lods
js
ja
rcl
add
popa
add
add
sub
ljmp
loope
scas
fistl
scas
jo
faddl
xlat
inc
push
shrb
inc
jb
add
dec
inc
jge
adc
fstp
aam
fists
shl
insb
arpl
rcll
ret
add
mov
push
addr16
and
sub
add
add
add
add
test
fildll
in
nop
xlat
xor
add
popa
add
add
rcrb
jle
pusha
jnp
addl
add
cs
movb
pop
mov
sbb
jle
mov
stc
les
mov
push
cmp
sarb
lods
cmpsb
xchg
pop
or
lahf
sbb
lock
xchg
mov
imull
add
add
add
lods
fcomi
sarb
add
aam
add
add
sbb
push
pop
fcomip
and
shl
push
xlat
movb
pop
jl
sbb
push
in
push
outsl
lret
cmp
jb
jle
adc
daa
rorb
dec
and
addr16
xor
sub
aaa
stos
pop
fmuls
push
jecxz
mov
xor
pop
lods
adc
loop
add
add
add
add
divl
dec
cmp
dec
add
pop
movsb
hlt
aam
add
add
push
push
push
bound
fsubs
mov
xchg
and
mov
movsl
mov
xor
ljmp
ds
aam
mov
lods
inc
push
loope
movsl
xor
fildl
mov
lret
sarl
sub
xchg
movl
les
add
add
add
add
arpl
jge
mov
daa
popf
adc
add
add
xor
sub
fs
push
addb
jb
cmp
push
imul
dec
inc
push
add
sub
movl
ds
stos
or
aam
daa
cmp
add
repnz
mov
add
pop
fidivrl
pop
nop
mov
add
add
add
daa
push
imul
lret
ja
jae
faddl
add
add
loopne
std
mov
stc
xor
xchg
mov
sub
sbb
pushf
ljmp
int3
inc
int
movsb
ficompl
jg
adc
jbe
in
push
mov
cmp
test
das
inc
pusha
sarb
jo
adc
mov
or
jecxz
cmp
cmp
nop
sbb
movsl
mov
add
add
ss
xor
and
daa
cld
jmp
add
add
sub
xor
push
xchg
lock
xchg
push
xor
ljmp
fdivr
pushw
xor
and
scas
sti
jmp
cs
sbb
loop
test
lret
scas
leave
arpl
ret
pop
addl
fmul
bound
rcr
out
push
push
fnstcw
sbb
das
movsl
and
loop
popf
add
add
add
add
out
mul
aaa
cmc
xchg
lcall
dec
fldl
add
add
xorb
add
lds
fdivrp
or
sbb
add
xchg
test
ret
aas
enter
inc
and
or
inc
inc
lahf
int3
subb
jg
push
sbb
aas
mov
ror
mov
push
imul
popf
imul
adc
add
add
add
aad
out
fucomip
ss
cmp
movsl
pop
stos
fldl
add
add
or
adc
fcmove
and
sbb
and
inc
imul
lods
sbb
daa
mov
insb
pop
inc
mov
xchg
popa
stc
and
pushf
aas
mov
sar
xor
push
int
xchg
cmc
movb
iret
push
inc
ret
test
inc
std
mov
rorb
add
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
or
add
popa
add
add
clc
lods
jns
sbb
dec
adc
mov
loope
jp
sub
mov
call
lret
not
sub
addr16
rcl
lds
mov
stos
insb
outsb
xor
xchg
std
push
add
mov
mov
ret
mov
jo
lcall
dec
xlat
mov
add
add
push
les
in
lahf
sti
ja
rcll
sti
insl
fiadds
add
add
cmp
dec
pop
mov
mov
in
lods
shr
stos
ljmp
mov
repz
in
enter
jmp
xchg
in
mov
cmp
dec
loopne
cmp
shlb
cmp
mov
mov
mov
cmp
mov
jecxz
xor
add
add
add
add
jle
call
cli
lcall
add
popa
add
add
gs
aas
pop
fstpt
das
repz
jbe
jle
sub
sub
and
mov
iret
cmp
test
adc
lock
sub
dec
frstor
inc
or
sub
mov
push
cmp
shlb
push
cmc
cmpsl
xchg
push
push
arpl
add
add
add
add
fincstp
shl
frstor
pop
dec
pusha
pop
popf
or
filds
add
add
xor
jecxz
lahf
mov
mov
pop
aas
inc
pop
pop
jns
sub
testb
std
fildl
inc
lods
cwtl
xchg
js
jo
das
jbe
dec
xchg
ret
addl
in
shrl
cmpsb
push
pop
insl
imul
cmp
dec
test
adc
pop
or
inc
jg
sbb
add
add
add
add
aam
fnstsw
out
fcmovu
in
es
nop
filds
add
add
addr16
cwtl
hlt
test
popa
stos
cmc
mov
dec
push
or
lahf
jns
iret
mov
adc
sub
aaa
pop
fnsave
sbb
lock
out
jb
aas
sub
or
cmpl
mov
nop
push
fiadds
push
dec
in
xor
out
jge
iret
mov
push
push
loope
xchg
xor
cld
jne
mov
dec
inc
xor
cmp
and
add
add
sbb
inc
jecxz
mov
mov
mov
popa
add
add
fldt
in
scas
stc
pop
xchg
icebp
adc
inc
mov
movsl
in
bound
test
xor
push
jo
test
xchg
dec
jmp
cmp
loopne
cltd
lea
scas
test
imul
cmp
mov
jbe
not
stos
or
mov
test
andl
lret
add
add
add
add
mov
icebp
and
imul
add
popa
add
add
fucomip
fstpl
ja
mov
pushf
pop
daa
mov
sahf
lods
daa
push
xor
out
adc
lret
mov
jl
mov
fs
inc
pop
or
push
mov
mov
jecxz
and
pop
mov
or
adc
jmp
sub
mov
push
add
add
add
add
xlat
repz
das
cli
fists
dec
es
mov
loopne
add
add
std
cwtl
mov
movsl
push
dec
mov
into
mov
sar
pop
bnd
fidivrs
sahf
mov
out
or
push
push
pusha
mov
clc
cld
in
adc
aad
gs
or
sbb
popf
hlt
push
cmp
jne
jbe
fidivl
and
lret
cwtl
or
lahf
and
jmp
insb
pushf
xor
add
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
xor
ja
add
add
repnz
add
add
add
add
add
add
add
call
aaa
add
lock
add
daa
mov
add
aaa
add
add
push
outsl
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
