fbstp
add
inc
outsl
outsl
insb
gs
outsb
add
add
add
jmp
jae
add
jb
lea
sub
add
push
push
jle
decl
inc
add
dec
outsb
je
addr16
sbb
sarb
fildll
pop
add
jns
insb
daa
push
outsl
jb
out
notl
add
inc
movsl
imul
insl
das
add
cwtl
or
push
je
sub
or
jge
notb
fs
mov
pop
push
imul
jle
or
dec
jnp
jle
add
and
roll
aas
add
mov
xchg
shlb
shll
pushf
mulb
fadds
hlt
arpl
jmp
pop
push
dec
bound
arpl
loope
addl
jns
lds
dec
dec
jbe
sbb
adc
popa
arpl
add
pop
lcall
cmc
add
or
imul
add
mov
sbb
pop
add
push
fs
or
and
clc
jmp
adc
sahf
jo
int3
andb
int
sbb
lds
add
outsl
lds
aas
or
jns
fcmovne
rorb
sbb
sub
xor
fs
sbb
jmp
pmulhuw
fs
inc
push
cld
nop
inc
push
sbb
clc
rolb
sbb
les
sbb
mov
nop
inc
mov
test
nop
inc
push
movsb
hlt
mov
pushf
cwtl
mov
or
ss
xchg
seto
mov
orl
sbb
adc
mov
test
jl
stc
add
mov
ret
add
divb
add
mov
int
ret
aaa
inc
pop
ret
push
or
insb
fdivs
insb
push
andl
in
fisttpl
push
mov
add
push
bswap
push
add
test
jne
xor
pop
leave
mov
sti
in
add
mov
add
lea
push
mov
mov
inc
cmp
cli
fs
mov
mov
mov
push
nop
mov
mov
ret
scas
mov
mov
xchg
mov
test
xchg
mov
mov
push
add
idivl
jge
adc
add
push
mov
or
adc
ret
push
imul
call
mov
mov
mov
and
pop
mov
mov
out
push
or
push
or
ret
ret
fiaddl
repnz
push
or
inc
add
adc
or
aaa
sub
fistpll
jmp
loope
mov
sub
shrl
pop
pop
push
fidivs
call
sti
mov
xchg
cmp
jb
idiv
std
mov
call
ja
and
mov
rcl
out
outsl
add
or
mov
dec
ret
sbb
aas
pop
mov
add
pop
repz
mov
cmp
orb
sub
cmp
jl
sub
mov
aam
or
push
dec
jmp
sbb
scas
sbb
sti
jne
sbb
icebp
or
and
mov
cmp
pop
mov
or
add
xchg
rorl
add
pop
push
jg
ja
loope
clc
mov
test
je
mov
mov
dec
arpl
mov
push
dec
lock
int
lahf
loop
mov
sub
leave
shrb
push
fcoms
jne
icebp
push
push
and
sti
insl
dec
popf
cmpl
in
sub
aaa
movsb
mov
in
mov
loope
add
lret
mov
lock
add
mov
adc
fcmovnb
mov
out
ja
mov
add
cmp
ja
mov
je
jae
or
or
sbb
add
push
or
or
add
inc
enter
cmp
fsubr
orb
outsl
jg
repz
jbe
sbb
push
mov
or
pop
and
dec
hlt
cmpl
adc
cmp
and
mov
add
sbb
xchg
ret
outsb
or
sub
mov
pop
cmp
mov
add
and
mov
cmp
or
or
jbe
scas
adc
sti
push
push
cmpb
adc
sbb
jmp
and
push
and
mov
out
sub
pop
cmp
add
inc
out
sub
or
adc
cld
jle
and
add
sbb
add
inc
push
addl
rorb
mov
ja
clc
mov
aas
inc
pop
flds
bnd
xor
idivl
insl
cmpsb
cmpsb
sub
xlat
mov
pop
and
je
mov
cltd
cmpsb
inc
cltd
inc
ds
adc
jne
push
pop
add
mov
mov
and
push
insb
fdivs
insl
pop
inc
jo
jp
out
cli
jge
xor
aaa
add
je
cmp
inc
jne
xor
jle
sub
loopne
push
stos
hlt
cmp
add
mov
xor
lea
sti
fs
sub
mov
fcoms
or
fwait
pop
and
sbb
lea
test
jne
inc
cld
xchg
jmp
imul
cld
aaa
cmc
jne
nop
cmp
loope
nop
inc
xchg
cmp
cltd
xchg
sarb
inc
popf
adc
push
pop
xchg
cltd
popa
roll
lea
cmc
adc
loope
adc
fidivs
mov
pop
or
ds
rorl
cld
cmpsb
loopne
add
mov
ret
shrl
or
adc
insl
jo
or
adc
ja
jmp
or
or
add
imull
loop
xor
mov
push
fistps
test
cmp
or
add
sub
jbe
js
clc
seta
out
call
mov
xor
jg
mov
inc
cmp
js
jnp
addl
add
aam
add
pop
pop
pop
lds
sub
or
out
loopne
sub
pop
xchg
pop
shl
notb
or
popl
xorl
xchg
or
sub
mov
add
or
inc
gs
pop
outsb
imul
adc
jmp
sbb
sbb
roll
mov
jne
shrb
jb
or
cmp
jg
adc
test
jns
add
sar
rcr
nop
test
and
mov
jne
mov
mov
mov
mov
adc
jmp
dec
add
jb
add
or
mov
cmp
pop
and
bound
jmp
decl
adc
add
mov
jb
test
fucomi
ja
daa
add
or
or
mov
and
jle
mov
sub
test
cld
dec
adc
cli
iret
mov
inc
mov
insl
or
push
or
das
cltd
mov
or
xchg
or
ret
jnp
andl
jg
loopne
adc
je
add
dec
cmc
fistpll
cmpsl
sub
ret
aas
pop
fcoml
push
je
mov
or
cmpsl
lahf
cmp
cmp
cmp
negb
fisubrs
mov
xor
add
jmp
mov
add
and
repz
bound
mov
decb
in
stos
adc
add
jno
das
xchg
cmp
mov
push
adc
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
fnsave
out
xor
daa
xlat
pop
clc
into
cs
lea
and
in
mov
dec
pop
fldln2
aad
lds
aad
jnp
jae
lea
push
jp
xor
sub
mov
xchg
out
cli
pop
push
iret
mov
mov
add
sub
and
push
xor
adc
rol
ret
nop
hlt
pop
pop
into
mov
mov
sbb
cmp
js
hlt
inc
adc
push
pop
add
sub
cmp
jge
jl,pn
mov
pop
test
jnp
sbb
xchg
jae
sbb
jle
adc
or
dec
hlt
ja
movb
sub
or
arpl
mov
mov
pop
and
and
push
loopne
or
add
cmc
and
movsl
mov
test
push
imul
mov
cmp
popa
push
sub
pop
add
xchg
repz
sub
xor
fsubr
js
leave
ret
subl
add
cmp
adc
leave
aam
loope
or
leave
arpl
xor
pop
mov
add
add
pop
inc
stos
pop
push
enter
rol
pusha
enter
fidivrl
mov
cmpsb
ret
clc
add
jg
dec
push
test
ror
adc
or
ljmp
lock
sbb
popa
adc
pop
pminub
icebp
push
jle
adc
jg,pn
pop
mov
mov
mov
pop
pop
jmp
sub
test
sbb
in
testl
pop
cmp
movsb
sub
cmpl
inc
jge
adc
inc
add
ret
sub
xor
iret
xlat
mov
xor
sbb
push
jae
lret
and
leave
jmp
repnz
inc
pop
pop
jne
js
pop
and
xor
inc
sub
test
pop
jne
push
xchg
add
int
clc
stos
jle
lock
out
leave
mov
in
cli
xchg
cld
pushl
mov
add
or
sti
jle
xchg
push
mov
mov
xchg
inc
mov
xor
pop
or
mov
movb
pop
inc
scas
shlb
clc
mov
js
mov
jmp
mov
clc
jmp
adc
popf
or
mov
add
adc
jbe
es
xchg
jmp
mov
jnp
fldcw
les
dec
sub
mov
add
arpl
sbb
push
jmp
inc
adc
out
or
arpl
jmp
push
inc
vmovaps
push
pop
pop
push
push
sbb
push
test
clc
mov
lods
cmp
out
insb
jno
sub
leave
mov
adc
adc
jbe
sub
lock
test
jne
test
ja
rclb
pop
decl
clc
adc
cmp
sahf
push
add
loopne
add
sub
push
or
test
jge
xor
cmpsb
jbe
das
add
xchg
inc
in
ret
cmp
out
jne
stos
in
xorl
add
pop
sub
mov
test
je
inc
jmp
or
cli
add
or
orl
jmp
mov
in
jmp
jmp
js
push
clc
push
adc
xor
dec
adc
mov
and
cmp
xchg
sbb
pop
and
sbb
mov
mov
loope
sub
jge
push
add
jecxz,pt
cmp
icebp
sbb
mov
imul
xor
push
arpl
notb
adc
sub
jge
push
inc
sub
dec
xchg
adc
push
mov
add
cmpsb
mov
rcrl
fnstsw
pop
and
sub
data16
pop
sbb
xor
pop
cmpb
insl
push
and
iret
adc
rcrl
dec
xor
dec
daa
add
add
and
dec
or
mov
push
test
add
sbb
mov
cmp
hlt
mov
pop
mov
sbbb
fsub
jmp
push
or
mov
push
xchg
mov
js
cmp
xchg
ret
cs
xchg
add
ret
add
mov
adc
add
or
pusha
dec
mov
nop
arpl
cmc
adc
addr16
arpl
pop
sub
pop
sub
orps
mov
adc
add
popf
jecxz
jmp
out
adc
call
inc
add
arpl
aaa
fstpt
call
lret
xchg
dec
sbb
decl
shlb
add
ljmp
and
inc
push
or
add
dec
sbb
xor
mov
je,pt
je
incb
leave
je
das
out
cmp
enter
or
mov
ret
push
jmp
pop
xor
add
mov
bound
shl
out
or
dec
push
mov
jo
push
mov
rol
xor
inc
sbb
sbb
push
push
popa
roll
out
mov
cmp
out
xor
jle
jecxz
js
test
sbb
or
jo
mov
mov
cmp
aas
add
and
loopne
adc
dec
ret
push
push
push
xor
xchg
fbstp
rclb
jmp
jecxz
jnp
mov
mov
sub
sbb
ret
sub
inc
jg
fnstsw
sarl
mov
inc
rep
jmp
mov
leave
jmp
daa
sbb
call
xchg
add
lock
jae
ja
sub
push
roll
push
arpl
cmp
add
jbe
add
push
push
push
imul
lea
jle
push
imul
sbb
or
mov
aad
mov
dec
adc
loopne
sbb
mov
xlat
pop
cld
or
sub
divl
je
cmp
rep
ja
loope
std
loop
push
lahf
jns
je
lea
adc
sbb
xor
std
ja
loopne
mulb
adc
mov
je
cmp
jbe
cmpb
xchg
shlb
add
out
in
mov
jmp
cmp
xor
push
loop
fimull
shrb
roll
ljmp
push
in
fstpl
dec
mov
xor
orb
jmp
outsb
cmp
cltd
idiv
jg
ret
jbe
mov
mov
inc
inc
adc
jmp
push
in
pop
pop
into
test
scas
push
jne
sbb
xor
icebp
into
test
push
cld
repnz
mov
arpl
adcl
add
clc
test
scas
jmp
sbb
test
pop
xchg
lock
lea
or
xchg
jae
mov
pop
xchg
divb
repz
pop
add
cs
fadd
mov
out
xor
ss
add
es
je
mov
dec
jmp
mov
ret
negl
je
or
push
or
ja
jge
add
jb
cmp
ja
sub
pop
ja
push
daa
data16
loop
sub
push
out
out
cmp
pop
jae
fwait
pop
pop
scas
in
or
fldenv
add
add
fldcw
lods
jo
std
fldcw
pop
inc
test
inc
out
push
jge
mov
inc
data16
xlat
out
mov
jae
mov
mov
sub
fidivrs
jl
rorl
jb
sbb
pop
sbb
or
call
pop
popf
jno
insb
add
shlb
adc
sbb
mov
mov
cmp
mov
ja
retw
loope
out
and
jne
call
lret
mov
adc
lahf
jmp
mov
mov
mov
xchg
jp
rorb
iret
hlt
aad
jb
cmp
ja
mov
mov
fildl
xlat
imul
cli
pcmpeqd
mov
add
xor
mov
inc
xchg
cmp
pop
add
mov
cmp
push
lret
mov
inc
inc
and
mov
pop
scas
scas
fstl
mov
push
xchg
inc
inc
mov
inc
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
sbb
pop
fidivrs
or
or
loop
push
adc
loop
pop
mov
mov
cmp
jne
push
adc
jne
adc
sub
add
add
adc
std
inc
imul
jmp
add
add
push
mov
shr
or
add
rorb
cmp
ret
add
and
ss
imul
jne
dec
dec
dec
and
mov
dec
sbb
jg
xor
int
loopne
xlat
std
jne
or
adc
nopl
xor
imul
shll
loop
rclb
push
idiv
mov
fstpt
push
inc
cmp
je
mov
or
sub
je
and
je
pop
je
add
adc
dec
inc
xchg
mov
add
sub
and
ja
cmp
ja
lea
out
aas
pusha
pop
push
add
push
iret
out
int
or
jge
ljmp
fdivrs
js
pop
sub
jmp
inc
inc
jmp
mov
pop
andnps
ja
jg
scas
in
xchg
and
ja
add
mov
leave
aad
stos
aad
aaa
jmp
xor
mov
cmpsl
mov
pop
lock
inc
notb
stc
sbb
add
cld
fildl
push
inc
mov
dec
jne
pop
aaa
mov
jle
fnstsw
jbe
xchg
repz
mov
sub
into
cmpsb
repnz
jne
mov
cmp
dec
je
scas
cld
decb
ret
lea
fldt
iret
arpl
je
sub
je
das
and
jo
cmp
je
and
adc
push
repnz
insb
jae
jge
mov
xor
cmpb
sbb
jmp
fstp
fldt
push
out
mov
dec
in
jg
aas
repnz
cmpl
inc
enter
pslld
cmovo
hlt
adc
xchg
cwtl
push
and
repnz
xchg
sbb
xchg
and
inc
mov
mov
cmp
movsl
aam
pusha
in
daa
sub
test
aas
stc
out
out
sub
pop
jecxz
add
leave
sbb
out
out
mov
inc
jbe
imul
cmp
mov
mov
push
pop
bound
cmpb
xlat
fadds
outsb
xor
xchg
mov
push
or
push
push
int3
into
sbb
rorl
mov
push
jmp
pop
test
enter
mov
inc
mov
lret
into
pop
inc
test
decl
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
inc
inc
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
inc
push
stos
mov
cmp
or
mov
pop
out
sub
imul
call
push
jo
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
ljmp
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
call
jecxz
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
cmc
mov
and
pop
mov
repz
mov
subb
and
and
outsb
bound
xor
scas
lret
push
lock
mov
decl
je
clc
pop
jne
push
pop
cmp
repnz
mov
mov
aas
lret
xchg
test
inc
clc
aaa
push
imul
adc
sbb
test
dec
out
and
movl
mov
push
addr16
add
mov
fists
nop
sub
out
mov
ret
sar
mov
pop
aas
or
adc
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
cmpsl
lock
ljmp
imul
push
dec
popa
jae
push
popa
insb
jne
mov
stos
lock
fwait
cmp
into
push
dec
lea
mov
adc
jo
xor
mov
inc
ss
push
or
fildll
sub
cmp
jne
dec
mov
xor
loope
aas
push
out
jne
ret
repnz
mov
ss
fdivl
add
or
rcrb
dec
pop
mov
fld
aaa
mov
add
outsl
test
add
or
daa
pusha
push
movups
xorb
pop
ret
mov
movsl
repnz
andb
outsl
loopne
mov
inc
lea
xor
jns
std
add
jge
mov
xor
push
shr
dec
rep
pop
cmp
ret
sub
pop
fcoml
decl
in
cmp
je
pop
mov
add
jae
lahf
push
mov
mov
popa
sbb
jne
iret
fwait
cmp
lods
mov
mov
mov
sub
cmp
pop
js
ret
sbb
inc
xchg
cmp
jbe
adc
jb
add
inc
ret
jns
roll
popa
ret
mov
rorb
sahf
pop
daa
pop
ret
mov
flds
aaa
xor
clc
pop
and
hlt
pop
mov
and
inc
adc
jg
and
clc
mov
xor
push
mov
push
add
pop
mov
push
sbb
mov
dec
setne
scas
mov
iret
jno
jg
xor
xchg
ret
push
mov
sub
out
scas
jo
pop
mov
cmp
jne
jb
cmp
mov
das
outsl
fisttpll
or
jne
or
loope
sbb
inc
inc
fcoml
pop
jo
and
in
mov
push
mov
mov
mov
cmp
je
mov
cld
inc
jg
jne
mov
add
add
jle
lock
xchg
dec
or
movl
or
cld
pop
icebp
in
negb
pop
add
sub
mov
pop
cs
fdivr
clc
pop
xchg
add
or
jmp
out
mov
movsl
std
mov
out
xor
das
orb
mov
dec
out
es
adc
mov
cld
je
inc
pop
push
aad
or
mov
push
stos
pop
mov
mov
icebp
je
pop
push
xor
decl
std
pop
xlat
xchg
adc
mov
cmp
sbb
add
dec
jne
cmp
mov
icebp
fucomi
sbb
add
sbb
jecxz
into
arpl
add
lahf
push
call
enter
in
leave
pop
repnz
sbb
jmp
jmp
in
push
pop
add
mov
add
add
xor
call
pop
loopne
out
mov
mov
movl
or
test
mov
sub
in
mov
inc
or
xchg
test
sub
outsb
adc
push
clc
aad
outsl
push
sbb
lcall
add
call
lock
fcomp
pop
scas
icebp
in
push
pushf
adc
mov
push
jo
sarb
push
push
cmp
cmp
repz
add
add
push
sbb
scas
or
jae
data16
pop
fcmovnbe
xlat
pop
push
push
and
leave
cmp
aas
mov
add
or
jne
movsbl
inc
inc
jmp
adc
addr16
shrl
push
jecxz
leave
in
inc
jo
adc
loop
jo
xor
cmp
jecxz
pop
lret
scas
cmp
mov
sti
inc
aaa
mov
test
mov
cmp
inc
mov
out
or
mov
adc
outsb
mov
jo
pop
adc
xlat
test
mov
pop
xor
sub
cmp
cli
xor
out
push
je
or
fbstp
add
test
and
scas
mov
cmp
pop
ja
pop
hlt
leave
or
xor
jne
push
jne
push
pusha
in
loopne
dec
or
push
jns
rolb
mov
dec
add
out
jne
pusha
clc
push
sbb
push
sub
faddl
jnp
and
decl
pop
aas
mov
add
in
ret
add
xlat
into
sahf
int
scas
mov
mov
or
cmp
or
jl
xchg
push
add
pusha
hlt
sahf
jne
mov
pop
sbb
rorb
mov
jno
mov
stos
stos
mov
mov
out
sub
repnz
clc
ja
cmp
jne
xchg
mov
push
or
mov
pop
je
mov
pushw
push
dec
jne
mov
adc
inc
and
sbb
adc
sbb
sbb
push
lods
mov
lahf
adc
pop
inc
icebp
daa
adc
inc
mov
sub
mov
push
pop
adc
sub
or
jmp
movups
je
mov
jmp
ret
push
cmp
js
roll
or
dec
add
push
pop
push
push
push
push
push
jo
adc
pop
push
js
cs
jne
and
inc
sahf
sub
decl
or
pusha
add
cmp
aaa
adc
or
adc
cmp
lods
jne
stos
mov
and
pop
mov
mov
cmc
xchg
loope
clc
xchg
jae
mov
sarl
clc
cmp
lods
pop
insb
mov
shlb
loopne
xor
xchg
mov
sub
ret
mov
add
jge
sub
pop
cmp
push
sub
sti
decl
and
dec
je
jmp
add
sub
jb
je
jmp
cmp
jnp
adc
sub
adc
std
sbb
mov
jg
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
addb
add
or
cmpsb
mov
xor
inc
mov
jecxz
loopne
movsb
push
cmp
jp
adc
repnz
mov
inc
pop
inc
sbb
cli
out
in
add
mov
push
inc
cli
sub
add
add
push
or
add
mov
push
daa
pop
push
xor
jbe
push
xchg
movsb
fstpl
scas
sub
sub
cmp
lods
ljmp
dec
cmp
mov
psadbw
cmp
je
cmp
jne
or
scas
xlat
cmpb
inc
cmp
mov
mov
fdivr
enter
pop
test
jle
dec
mov
inc
fiadds
scas
cmp
rcl
jg
jecxz
jo
popa
test
jns
adc
sub
daa
aam
push
mov
push
inc
dec
mov
movsl
js
ret
daa
mov
cmp
inc
cmpb
pop
inc
mov
xchg
cmp
push
jns
lea
mov
aaa
inc
movsl
xchg
pop
or
dec
aas
push
push
scas
push
xor
mov
lea
jle
add
mov
or
mov
cmp
add
pop
inc
and
pop
mov
add
sub
inc
mov
sarb
adc
add
jmp
pop
inc
push
xor
pop
or
adc
mov
aaa
jl
xor
or
sbb
and
dec
and
shl
xchg
cmpsb
data16
jle
aad
jnp
add
cmpl
fadds
ret
vmread
pop
pop
pop
inc
sub
rcrl
sbb
test
lock
lds
xchg
or
and
popa
outsl
xorb
cmp
loopne
in
mov
add
jle
incb
rorl
mov
dec
cmp
jp
fisubrl
mov
mov
push
push
xor
add
dec
dec
out
jmp
xchg
rolb
mov
outsl
adc
ja
add
pop
leave
aas
pop
add
push
push
dec
cltd
push
cmp
pop
test
adc
adc
add
mov
int3
pushf
mov
pop
cmp
push
or
jo
fmuls
xor
repnz
push
fiadds
cmp
or
or
loopne
add
mov
jne
cmpl
addb
adc
int
sub
call
and
dec
and
xchg
xor
outsb
or
andb
add
gs
mov
cmp
add
stos
inc
adc
sbb
mov
push
or
cmp
je
es
add
fildl
jne
mov
or
xlat
cmp
add
adc
push
aad
sbb
inc
sti
ret
pop
cs
daa
pusha
xor
es
loopne
cmp
daa
ss
ss
dec
or
adc
push
pop
add
xor
push
test
pop
fdivr
push
mov
dec
jl
lock
pop
pop
loop
clc
cmpsb
outsl
outsb
insb
fs
fisttpl
add
or
pop
pop
push
mov
arpl
inc
inc
jg
mov
clc
mov
pop
pop
dec
push
lods
pop
pop
jmp
ja
iret
insb
rcr
notb
xchg
jle
pop
xor
push
push
jle
push
add
icebp
dec
cli
sbb
push
dec
pop
movw
pop
xorb
push
cld
movl
mov
cwtl
mov
mov
loopne
aaa
mov
xor
aas
mov
or
pushf
cmp
ret
lods
testl
push
push
adc
dec
dec
or
movsb
xor
aaa
or
js
lock
add
cld
out
mov
jg
ret
cmp
pop
lcall
outsb
add
sub
add
mov
aam
push
push
jl
aam
mov
pop
or
in
sub
dec
mov
pop
sbb
in
pop
pop
jge
xor
icebp
cltd
aas
push
mov
movsb
mov
outsl
clc
sub
nop
xor
ret
cmp
je
push
mov
add
fistps
rolb
jmp
inc
add
jmp
pop
out
sub
and
pop
pop
idivb
enter
or
data16
in
add
jae
jbe
mov
inc
xchg
orb
nop
push
push
scas
mov
imulb
or
pop
add
pop
pop
xor
ss
outsl
push
and
pop
cld
add
loopne
adc
cmp
jl
adc
andl
add
inc
iret
push
aas
push
je
sbb
lret
mov
push
cld
jnp
popa
lock
cmp
pop
and
mov
cwtl
out
nop
fstl
and
mov
xchg
cmp
adc
loopne
adc
mov
std
loop
sub
scas
rorl
add
into
pop
je
je
mov
mov
lds
push
jnp
rcr
sbb
dec
clc
mov
mov
jmp
pop
js
cmp
xchg
adc
or
call
mov
dec
jmp
dec
sti
sbb
add
cmp
gs
dec
jne
mov
pop
out
ja
jge
and
test
pushl
add
dec
jmp
and
inc
pushf
sbb
or
into
pop
dec
jne
add
lods
xor
or
pushf
mov
and
lea
jmp
icebp
lock
rclb
loopne
lods
leave
push
sub
imul
inc
scas
inc
das
pop
dec
shlb
inc
pop
sarb
cmp
sub
daa
cmp
rcll
and
jmp
or
cmp
push
clc
inc
jnp,pn
mov
outsb
add
add
mov
xor
cmc
jne
mov
mov
adc
arpl
fsub
dec
inc
daa
pop
mov
mov
aaa
paddd
pop
and
push
es
jl
cmp
jge
sub
cmp
adc
sbb
adc
cmp
xor
xor
jmp
inc
jmp
jno
push
mov
mov
push
push
mov
aaa
inc
lret
jl
mov
jge
mov
mov
add
stc
add
lea
inc
dec
movsb
push
pop
scas
addb
mov
jbe
mov
mov
push
mov
sub
xlat
mov
fiadds
stc
add
gs
cmp
orps
push
lea
lock
insl
test
mov
mov
inc
pushf
xor
mov
push
insb
dec
js
mov
inc
jae
adc
or
cmp
ficoml
jecxz
roll
pop
aaa
jmp
pop
mov
push
test
cmp
jo
or
push
dec
out
and
clc
add
sub
or
loopne
lds
sub
pop
cwtl
push
lahf
std
jmp
out
arpl
push
sub
cmp
pop
jo
or
jne
push
or
cmp
in
sti
add
push
cs
push
mov
push
push
sub
test
mov
mov
shrb
mov
adc
in
jno
xchg
or
adc
adc
pop
pop
mov
inc
lcall
and
mov
push
cmp
mov
jbe
decl
das
fdiv
fistps
xor
inc
orb
sub
xor
inc
cmp
xor
add
add
add
cmp
xor
jb
orl
adc
enter
lcall
js
sbb
dec
cvtps2pd
or
aaa
sub
add
dec
mov
les
mov
pop
dec
cmp
mulb
imul
mov
sbb
sub
cmp
push
dec
icebp
or
inc
dec
or
dec
add
cmp
shr
and
push
add
cmpsb
ret
hlt
in
adc
cmpsl
jno
loopne
in
cmp
or
daa
cmp
push
inc
popa
cmp
loop
mov
add
sbb
inc
add
jg
mov
dec
add
lea
mov
aam
ljmp
adc
jno
out
cmp
mov
out
add
cs
fbld
push
add
cmp
je
cmp
je
cmp
je
cmp
xor
push
je
cmp
xchg
je
mov
aas
adc
cltd
clc
jmp
pop
fdivp
jle
mov
add
out
jmp
pop
pop
std
add
mov
jne
pop
jno,pn
int
mov
cs
adc
cmp
pop
jmp
cmp
pusha
add
cmp
lock
fcompl
cmp
sbb
add
add
mov
call
push
cmp
loopne
lcall
ds
xorl
jl
das
js
fisttps
mov
cmp
in
adc
jg
adc
push
pop
sti
in
stos
pop
cmp
fbstp
cmp
outsb
daa
stc
popa
pusha
xchg
push
sub
repz
fs
add
ds
cmp
jmp
test
mov
sbb
cmp
inc
fdiv
jmp
jmp
lds
sbb
adc
scas
xchg
sbb
leave
and
lock
test
or
cld
call
dec
clc
push
pop
add
sarl
add
rcll
pop
push
cmp
cmp
xor
pop
cmp
or
or
or
xorl
jo
pusha
cld
adc
push
pushf
xor
and
inc
mov
xor
jnp
jmp
and
push
insb
lea
adc
lods
call
push
inc
dec
cwtl
or
mov
jg
inc
pop
jmp
aas
add
jns
in
aaa
sub
and
cmp
xchg
and
loopne
out
pushf
dec
jne
or
sbb
out
xchg
xlat
test
insb
and
mov
in
inc
enter
push
popa
jge
add
push
jb
enter
add
jo
jne
sub
das
pusha
jno
pusha
imulb
js
xchg
std
daa
adc
les
clc
lds
daa
or
ja
sti
add
dec
mov
fiadds
aaa
inc
ljmp
mov
add
add
je
cmp
ja
push
ja
lret
adc
pusha
and
or
sub
pop
inc
call
push
imul
clc
sar
ds
xor
aad
jge
xchg
xchg
shlb
mov
dec
je
push
inc
pop
rclb
fiaddl
adc
das
aas
sub
add
arpl
inc
push
dec
test
mov
cmpsl
xchg
jg
incl
mov
cmp
and
add
cs
lret
ret
aaa
test
insl
ret
mov
xchg
test
fisubrl
xor
ret
lret
stos
inc
out
jbe
cld
add
jl
cmp
mov
mov
out
idiv
out
sub
inc
jmp
cmp
jne
mov
inc
and
sub
test
sarb
sbb
xor
cltd
jns
cmp
add
sub
filds
cmc
add
ljmp
loop
pop
push
jb
out
mov
clc
and
lock
jmp
sbb
jno
orl
or
aaa
mov
pushl
jmp
jl
andl
rolb
jg
mov
cltd
aas
or
lds
movsb
jno
add
adc
iret
mov
dec
push
hlt
inc
xor
ljmp
inc
fisubrl
stos
mov
rolb
neg
push
scas
loopne
mov
inc
jmp
xor
inc
rolb
or
or
cs
jg
add
and
or
dec
adc
and
and
mov
setb
jmp
setl
cmp
call
add
and
inc
sub
arpl
aas
mov
sbb
xor
aas
mov
loopne
or
dec
pop
cmp
dec
fwait
inc
push
pop
sbbb
loopne
mov
jge
xchg
fimuls
mov
test
jg
inc
mov
mov
mov
lods
cmp
inc
xorl
xor
fists
push
scas
scas
lock
inc
add
jne
xchg
push
call
or
insl
and
icebp
testb
call
fdivrs
imulb
cmp
je
andl
nop
icebp
mov
aas
add
mov
cmp
jge
jno
jg
or
scas
xchg
add
mov
and
add
dec
gs
mov
decl
stos
test
lea
lret
in
xchg
jge
fcmovu
mov
push
in
test
and
adc
in
push
dec
adc
sub
stos
and
dec
push
dec
shl
add
sub
add
mov
out
mov
lock
enter
flds
ret
cmpsl
cmpl
jl
clc
add
cltd
or
xchg
dec
jno
and
mov
or
fisttpl
or
cmp
mov
inc
lcall
dec
jne
enter
mov
cmp
mov
subl
test
lock
jne
lea
push
adc
insl
inc
pop
stos
in
or
sbb
in
cmp
scas
adc
dec
push
push
push
mov
incl
ret
out
pop
pop
jae
call
push
adc
cmp
pop
sub
sbb
add
js
imul
inc
mov
insl
lea
jne
sbb
jmp
outsb
push
into
dec
arpl
mov
inc
lods
mov
int3
sub
xor
jb
aaa
cli
flds
add
mov
cmp
inc
sbb
inc
or
stc
or
pop
push
jo
repz
ljmp
js
adc
cmc
push
shlb
xchg
mov
add
xchg
push
clc
pusha
xchg
dec
inc
mov
ret
pushf
push
mov
xor
and
mov
or
pop
test
fisubrl
call
push
lds
pusha
movsl
sub
jnp
pop
cmp
sbb
cmp
js
pop
jne
int3
jl
pop
mov
lock
aam
xlat
cmpb
divl
icebp
inc
test
jne
mov
cmpsl
lahf
sub
lea
mov
xlat
popa
jno
sub
push
push
cld
rolb
roll
cli
dec
jg
sbb
neg
lds
mov
lret
sti
mov
andl
loop
jp
cmp
inc
cmp
lcall
pop
mov
push
push
mov
inc
mov
cmp
test
dec
call
mov
mov
jb
gs
xor
out
jg
cs
insb
pop
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
es
sub
sub
sbb
dec
fsub
movb
int3
jg
lea
add
dec
loopne
add
and
cmp
sbb
rolb
and
cmp
xchg
sbb
scas
dec
mov
pop
mov
cmp
or
movsl
dec
sub
test
inc
clc
int3
and
shll
cmp
fldt
mov
dec
mov
adc
sti
and
sbb
popf
push
lods
repz
test
mov
inc
test
mov
push
pop
or
repz
or
shll
pop
and
jg
jmp
dec
cmpb
stos
pop
cmp
jne
adc
popf
inc
addb
sub
cwtl
loopne
rcrb
add
xor
jmp
call
jb
in
je
das
outsl
repz
in
ret
xor
cmc
add
mov
das
mov
dec
outsl
data16
popa
jb
stos
fnstsw
das
mov
jae
aaa
mov
push
adc
cwtl
jae
das
rorb
dec
dec
out
add
adcb
dec
add
jecxz
test
mov
adc
jbe
ja
mov
push
enter
push
aaa
sti
push
mov
inc
mov
or
mov
jp
mov
sti
or
jge
sbb
icebp
mov
mov
dec
mov
mov
dec
xor
loop
ja
mov
bsf
or
in
sub
sbb
lock
dec
add
or
xchg
pop
loopne
adc
mov
aaa
mov
inc
add
push
inc
int3
sub
mov
or
mov
sbb
mov
xchg
cmp
ret
in
jmp
mov
sbb
mov
cmp
jne
pop
fistl
std
xchg
cmpsb
sbb
incl
mov
or
sub
cmp
push
ss
ret
pop
mov
mov
sbb
jo
dec
push
inc
mov
je
sbb
pop
or
push
push
mov
inc
testl
pop
nop
stc
les
jg
mov
pop
ret
sbb
push
in
or
scas
pop
add
pop
popa
jmp
aam
push
js
lahf
test
adc
jg
or
push
sbb
lock
adc
mov
add
mov
pop
jbe
mov
test
js
inc
mov
ret
nop
adc
aaa
push
icebp
outsl
arpl
ljmp
sbb
arpl
push
paddusw
push
inc
xchg
repz
lds
jb
xor
addb
sbb
mov
dec
inc
cmp
ja
mov
inc
jmp
cmpl
jbe
lea
cmp
ja
fcmovb
jmp
cmpb
sti
lret
loopne
sbb
adc
and
sbb
and
lret
fnstcw
xor
test
and
and
ror
lret
dec
popa
rolb
clc
adc
decl
jae
cmp
jb
or
lahf
add
cmp
and
sbb
or
add
cmp
lea
sahf
or
mov
lock
adc
and
sub
divl
lock
mov
push
nop
cmp
xlat
out
cld
jmp
orl
test
je
sbb
subl
sbb
loope
and
je
std
pop
sbb
mov
add
jne
cltd
cmp
cwtl
and
jg
loope
or
mov
mov
dec
data16
testb
adc
xchg
push
adc
inc
fwait
orl
or
xorb
adc
stos
clc
cmp
add
and
inc
inc
mov
in
sub
and
pop
in
adc
in
xorb
sbb
arpl
jle
or
jb
inc
sbb
push
test
jmp
lret
sbb
shl
mov
movb
dec
adc
out
in
cwtl
je
adc
sub
sbb
cs
in
inc
lock
push
and
pop
pop
push
sti
repnz
mov
mov
mov
dec
outsl
jmp
arpl
enter
mov
dec
dec
add
cmovl
push
pop
aad
add
rolb
subb
pop
inc
and
loopne
jb
nop
outsl
inc
lods
fadds
jns
inc
cmp
push
cmp
inc
pop
pop
mov
mov
cltd
dec
enter
add
cmc
mov
cmpl
push
jge
addr16
mov
cmpsl
add
sbb
mov
ret
adcb
or
test
subb
xchg
push
loopne
lock
push
sub
lea
push
push
adc
fs
mov
add
das
mov
sub
jo
xchg
push
xor
cmp
stc
ret
mov
daa
lock
push
orb
and
pop
sbb
inc
adc
pusha
pop
in
call
mov
clc
subl
popa
xorl
adc
adc
dec
cld
adc
cld
xor
push
mov
mov
in
pop
js
and
call
jb
push
mov
adc
mov
adc
mov
jo
pushf
nop
push
int3
sub
clc
add
or
cmpsl
lret
rolb
mov
sti
dec
jb
je
jmp
and
push
inc
push
cltd
sub
fwait
sbb
sub
cmp
loopne
push
push
pop
mov
cmp
sbbb
mov
jnp
cltd
pop
push
mov
push
enter
mov
xchg
xlat
fidivrs
fstps
push
insb
mov
jl
movsl
jne
adc
push
fnstcw
adc
sbb
and
pop
or
add
mov
lods
jle
and
lret
adc
sbb
add
ret
std
nop
add
mov
fimull
movl
push
jle
aas
and
add
push
push
or
adc
and
mov
xor
les
pop
pop
jmp
insb
mov
rorl
mov
ja
sbb
xchg
add
sub
cmpl
pop
pop
sbb
stos
pop
push
mov
jge
jmp
out
mov
inc
sub
enter
dec
push
or
jb
add
js
push
cs
add
xor
cli
mov
movsb
or
push
gs
fnstenv
or
adc
lahf
mov
bound
inc
push
outsl
arpl
xchg
jae
gs
jne
je
dec
outsl
je
imul
mov
imul
arpl
or
fnsave
or
xor
cli
jg
xor
outsl
insl
bound
outsl
js
imul
ja
nop
cld
loopne
pop
dec
pop
push
andps
outsb
dec
inc
xor
je
mov
sbb
add
pusha
jae
pop
push
push
or
enter
inc
daa
adc
inc
mov
enter
mov
push
mov
pushf
cwtl
xchg
orl
nop
mov
and
and
and
and
push
orl
push
dec
dec
inc
or
enter
cmp
enter
xor
and
and
adc
or
enter
add
in
and
mov
clc
fs
inc
push
hlt
lock
nop
inc
push
sbb
in
inc
push
sbb
aam
sbb
int3
enter
nop
inc
sarb
pushl
mov
mov
orl
mov
orl
mov
mov
or
enter
mov
enter
mov
nop
popa
xchg
rorb
orl
mov
or
enter
jg
and
cmovno
sbb
test
sbb
mov
nop
inc
xchg
nop
mov
push
mov
jl
je
push
sbb
push
fs
pop
pop
sbb
push
push
dec
fs
inc
push
dec
inc
inc
nop
inc
push
sbb
xor
push
sbb
sub
sbb
and
sbb
adc
or
nop
inc
push
or
and
clc
hlt
orl
lock
call
and
xor
and
inc
sahf
or
mov
pop
inc
push
sbb
cmp
sbb
dec
inc
push
sbb
push
xor
fs
inc
push
sub
and
inc
push
sbb
sbb
inc
push
sbb
or
sbb
add
mov
xor
and
and
and
fadds
sbb
enter
int3
enter
inc
sarb
mov
inc
push
sbb
mov
fs
xchg
nop
mov
test
push
js
jo
inc
push
sbb
inc
push
sbb
pop
push
sbb
push
dec
dec
sbb
inc
inc
cmp
nop
inc
push
cmp
nop
inc
push
sbb
and
ret
xchg
prefetchnta
adc
sahf
or
and
add
inc
clc
hlt
lock
inc
push
in
call
sbb
inc
push
sbb
int3
push
sbb
sarb
mov
nop
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
inc
js
jo
nop
inc
push
insb
push
sbb
pop
inc
push
sbb
dec
push
sbb
inc
inc
cmp
fs
inc
cmp
fs
inc
push
sub
and
inc
push
sbb
sbb
inc
push
sbb
or
or
adc
mov
mov
xor
and
xorl
mov
mov
rol
loop
or
push
mov
jle
nop
es
adc
push
cmp
pop
inc
or
fs
or
xor
push
daa
mov
cmpps
scas
push
int
mov
adc
popf
dec
fnsave
fistps
mov
mov
lret
dec
subb
into
maxps
fdivrl
dec
dec
and
lods
cld
int3
sub
cmpsb
imul
adc
cmpsb
imul
push
out
push
into
pusha
sub
xchg
push
pop
inc
ret
nop
scas
pop
mov
inc
cmpsb
push
stos
and
sub
stos
mov
stc
cmp
aam
outsl
aad
test
cwtl
push
pop
sub
mov
and
aas
pop
sbb
daa
out
enter
push
enter
or
insb
xchg
in
sbb
dec
add
addr16
aam
mov
pop
or
push
movl
push
rclb
popa
gs
add
dec
push
push
dec
inc
inc
dec
add
popw
jp
outsl
arpl
and
dec
sti
vpsadbw
inc
push
dec
pop
and
mov
push
push
pop
sub
sti
outsl
mov
dec
pop
dec
dec
dec
inc
push
das
dec
jns,pn
xlat
bound
leave
bound
outsl
cmp
addb
js
cs
push
or
push
dec
push
dec
pop
push
dec
or
mov
icebp
add
fistl
inc
js
or
gs
imul
lock
daa
inc
arpl
inc
and
xor
es
pop
test
push
mov
adc
gs
insl
es
or
subb
iret
loopne
or
inc
pop
inc
inc
push
mov
push
jle
inc
dec
and
jbe
invd
inc
incb
adc
push
jns
gs
imul
nop
add
arpl
add
add
bound
das
adc
data16
sahf
or
movhps
outsb
push
push
arpl
jmp
pop
add
addl
jg
adc
sbb
inc
outsl
outsb
rep
fdivr
jg
insb
pop
mov
sbb
mov
add
arpl
fs
movlps
imul
bound
pop
dec
sbb
scas
sub
adc
fidivs
sbb
jbe
unpcklps
jo
adcb
jb
repnz
out
mov
stos
shrl
inc
cmp
in
lock
jge
nop
jbe
scas
imul
mov
clc
jnp
mov
stos
pop
push
and
adc
out
push
mov
pushf
cwtl
xchg
nop
or
enter
test
enter
jl
enter
je
insb
adc
fs
jb
jb
mov
mov
lods
jb
mov
and
xchg
enter
out
pop
gs
cmpsb
in
or
gs
test
sub
gs
lret
nop
inc
push
sbb
repz
inc
push
sbb
testl
stc
cli
sti
sbb
cld
std
fs
inc
push
jmp
loope
inc
push
sbb
jecxz
inc
push
sbb
out
lcall
jmp
inc
xchg
inc
push
sbb
rolb
sbb
rcl
aam
fs
inc
aad
xlat
fs
inc
push
fcomp
ficoml
inc
push
sbb
rolb
fs
rol
les
fs
inc
fs
inc
push
enter
inc
push
sbb
int3
int
push
sbb
mov
sbb
mov
mov
fs
inc
mov
mov
nop
inc
push
mov
push
sbb
sbb
mov
mov
fs
inc
movsl
cmpsb
cmpsl
fs
inc
push
test
stos
mov
sbb
pop
repnz
imul
pop
add
imul
and
outsl
out
xchg
or
arpl
and
shlb
sbb
mov
out
mov
push
and
add
sub
mov
insl
imul
xor
inc
dec
gs
jo
ss
dec
xchg
mov
dec
cmp
jne
dec
dec
gs
outsl
jb
cmpsb
mov
pop
adc
fucomp
jae
fisttps
inc
dec
outsb
mov
add
inc
repnz
imul
scas
iret
ret
cmc
pop
je
popa
sbb
add
scas
pusha
pusha
dec
jb
cmp
mov
imul
rol
and
or
sbb
mov
sbb
outsl
imul
and
jbe
jns
gs
scas
jo
orl
outsb
gs
enter
fs
jbe
cmp
adc
out
and
and
aas
insl
addb
nop
scas
jl
aaa
or
jl
insb
fdivrs
xor
dec
jo
aam
add
xchg
aam
jnp
jle
gs
outsb
sub
or
aas
scas
xlat
and
scas
test
push
xor
andnps
mov
xor
xadd
xchg
movsbl
imul
outsl
cmp
jbe
sub
or
or
repnz
push
ds
popa
jae
mov
jecxz
enter
inc
repnz
gs
shrb
rcll
xchg
adc
pop
mov
push
adc
xchg
pushf
pusha
sbb
push
aas
inc
sub
insb
or
in
lret
and
jge
push
orl
mov
mov
add
xchg
addb
mov
sub
inc
scas
pop
pop
sub
mov
repnz
mov
mov
mov
push
addb
fs
jb
shrl
aas
mov
mov
mov
xor
inc
in
inc
out
xlat
mov
mov
add
mov
or
rcl
xor
or
stos
pop
jae
shrl
dec
cld
jno
jmp
gs
push
sarl
jae
adc
cs
xor
xchg
dec
cmpsl
sbb
inc
add
cmp
add
and
aas
adcb
aas
inc
or
push
rcll
mull
negb
outsl
shlb
add
int
and
add
xor
and
jl
scas
adc
shlb
adc
sbb
jae
stc
push
add
sbb
adc
test
decl
fists
jno
cmp
je
lods
nop
inc
je
aas
xor
stc
imul
and
dec
scas
adc
and
jae
fld
lods
outsb
adc
cmp
fabs
jg
push
dec
cmc
ret
adc
repz
out
inc
xor
add
mov
add
aaa
enter
cmp
inc
push
pushw
aas
mov
push
dec
filds
int3
xchg
aam
mov
inc
xor
xor
adc
dec
adc
imul
cld
lods
aaa
dec
adc
jnp
jle
push
inc
inc
dec
mov
sub
add
add
lea
mov
cli
sub
shll
shl
dec
cmp
repz
je
movzbl
pop
push
decl
cmp
mov
movsb
pop
sub
js
repz
jne
xchg
mov
jb
add
aas
push
mov
or
pop
lcall
fwait
add
jmp
and
sti
je
loope
add
pop
push
scas
mov
mov
in
push
insb
mov
xchg
jbe
cmp
add
je
pop
push
adc
daa
loop
sbb
addb
add
clc
addr16
push
inc
mov
adc
mov
push
mov
or
out
jo
add
mov
mov
pop
mul
or
push
push
adc
insb
push
lock
mov
and
mov
test
inc
cmp
jl
cmpb
jbe
adc
fidivrs
dec
sub
clc
imul
add
into
sub
inc
jmp
push
pop
pop
sbb
cmpb
mov
xchg
push
mov
and
add
fbld
add
rcl
test
push
push
cmp
push
loopne
jne
ja
and
out
or
push
jmp
sub
adc
inc
das
dec
mov
or
add
sahf
incl
movl
std
add
mov
dec
jp
mov
jo
aad
mov
mov
add
call
push
in
daa
mov
jmp
xor
mov
call
sbb
imul
dec
inc
ds
stos
mov
add
jbe
mov
sub
je
jae
cmp
add
jl
inc
mov
out
fnstsw
push
in
pop
or
decb
loopne
jae
inc
dec
jne
lret
lahf
sahf
pop
or
jne
sarb
or
jle
mov
inc
dec
ret
ret
mov
shl
icebp
dec
pop
mov
cli
cmp
sysret
mov
idiv
lcall
ljmp
jbe
add
mov
sub
jmp
mov
dec
jne
push
clc
mov
sub
xor
push
outsl
cwtl
xchg
mov
pop
test
mov
xor
jg
and
jo
pushl
mov
negl
lods
cli
jmp
call
xor
gs
fisttpll
cmp
and
adcb
sti
adc
dec
add
dec
adc
sbb
fs
mov
or
fildll
fistps
ret
add
std
std
jmp
fildll
filds
fdivr
mov
xor
movsl
lods
push
xchg
dec
sar
fcom
fstsw
sahf
jae
inc
addl
ffree
ffree
ffree
pop
aad
mov
aad
sub
and
das
pop
rclb
or
jp
and
mov
cli
mov
mov
mov
adc
mov
cltd
inc
daa
dec
lock
mov
dec
enter
or
pusha
add
and
sub
ja
push
popa
or
xorl
insl
imul
addr16
mov
nop
lret
cmp
pop
aas
fmuls
inc
jns
in
inc
add
xchg
xor
cltd
sub
push
mov
dec
bound
cwtl
inc
rcrb
mov
and
insb
cwtl
iret
sbbl
cmpsb
and
xor
xor
adc
pop
add
xchg
lock
mov
inc
call
and
repnz
clc
orl
jo
movsl
fildl
cmp
jmp
dec
jecxz
pop
inc
stos
mov
cli
ja
or
lock
stos
xchg
mov
adc
insl
lock
add
add
xchg
add
dec
ss
push
iret
jbe,pt
lcall
addr16
xor
and
cwtl
fwait
lea
aas
in
popa
add
or
mov
push
xor
loop
int
fsubs
out
test
call
jmp
and
adc
or
mov
xchg
sub
add
adc
incl
and
incb
ja
cmc
and
jge
inc
ja
mov
mov
jnp
inc
sub
push
repz
lods
test
pusha
push
and
into
inc
movq
add
add
add
orl
jge
lahf
push
mov
cmpsl
mov
sub
dec
mov
cmp
pop
out
les
or
fdivl
cmp
pop
loop
sub
pop
out
mov
sbb
dec
cmp
flds
ljmp
stos
or
or
mov
push
enter
mov
dec
aad
jo
loope
push
clc
push
lock
in
pushl
sbb
cmp
out
popf
cmpsl
mov
xor
pop
and
or
sub
iret
sub
or
addb
mov
or
iret
pushf
aaa
adc
mov
sbb
pop
and
mov
repnz
jmp
xor
pop
adc
jae
or
inc
sub
sbb
push
test
mov
dec
ret
jg
push
or
xorl
and
ficoml
and
cmp
rcl
pop
cs
mov
adc
insl
inc
test
popa
scas
or
xchg
xor
pop
insl
addb
mov
xor
push
cs
cmp
leave
cmp
inc
dec
shr
push
lock
pop
xor
mov
test
lock
pop
jne
movb
adc
sarb
lods
cs
frstor
imulb
clc
add
jge
add
cmp
sub
mov
jmp
dec
xchg
fs
jnp
inc
push
or
mov
mov
unpckhps
add
mov
mov
orl
loop
and
jbe
dec
insl
lods
pop
mov
xor
popa
jno
or
mov
lods
cmp
jnp
push
xchg
jle
jne
push
jg
push
pop
mov
out
notl
xchg
push
push
dec
add
mov
or
or
lea
or
inc
jbe
push
lods
sarl
fdivs
stc
push
daa
jp
push
inc
out
call
and
mov
hlt
clc
cld
push
jne
push
cld
testl
clc
daa
inc
call
test
out
xchg
jnp
pop
dec
loop
dec
or
xor
cwtl
dec
leave
lock
or
sti
fadd
adc
out
mov
fcomip
negl
and
movzwl
rol
ljmp
call
or
mov
pop
call
ja
push
adcl
push
jge
xlat
mov
aas
cltd
push
or
fsubr
push
pop
push
ss
lock
not
pop
out
sbb
pop
pop
xor
adc
xor
mov
mov
xlat
pop
das
lea
es
lret
stc
shlb
push
fs
not
mov
lock
rcr
lret
xor
and
pop
pop
ret
mov
and
push
clc
lret
dec
rclb
std
out
inc
sub
pop
lret
fldenv
xchg
out
cmovp
cli
aas
sub
inc
pop
push
mov
cmpb
imul
mov
aas
xor
xor
repz
into
sbb
cmpsb
mov
mov
xchg
push
and
je
dec
jno
cmp
clc
ss
jns
fisttpl
js
sbb
mov
subb
inc
mov
xchg
pop
les
add
inc
sub
dec
add
jne
scas
loopne
mov
jne
inc
out
jg
loopne
inc
inc
dec
je
mov
mov
pop
outsb
js
jge
icebp
jbe
sbb
lods
mov
mov
adc
mov
xchg
and
push
pusha
mov
cmpsl
mov
push
xor
sbb
sub
sbbl
add
mov
shlb
push
sti
xchg
orl
cmc
fbstp
das
jg
lock
fsub
clc
cmp
lock
cmc
jbe
mov
pop
mov
add
jne
or
aad
and
movb
les
and
test
in
push
das
mov
or
std
sti
outsl
test
in
cmp
je
mov
rcrl
add
addr16
shrb
xchg
push
imul
push
call
add
jge
adc
mov
std
aas
mov
mov
decl
lods
cmp
je
stos
dec
jne
cmpsl
insl
xchg
push
insl
sub
mov
repnz
test
xchg
test
inc
out
add
sub
testb
das
hlt
and
mov
lret
lods
jmp
adc
ljmp
inc
mov
fcomps
dec
jmp
pop
sti
das
jae
jmp
pop
adc
cmpb
or
lret
sarl
movsb
xchg
pop
mov
rep
sbb
cmpl
mov
cmp
test
pop
pop
mov
cmp
lock
call
cmp
imul
mov
add
mov
add
pop
dec
es
cmp
notl
std
or
jl
inc
lock
repz
ret
je
xchg
ret
and
mov
mov
cmp
pop
in
sti
idivl
jne
lea
mov
fwait
push
add
and
aaa
xchg
rcrb
mov
sarb
mov
out
imul
into
std
mov
imul
push
push
pushf
xor
mov
lock
sub
dec
fsubrs
shll
or
jle
lea
and
add
cmp
jmp
repnz
pop
lret
enter
sbb
push
xor
cmp
ss
imul
inc
into
imul
shll
and
test
int3
mov
sbb
add
pop
xchg
jns
lock
xor
inc
fistps
scas
int3
inc
mov
cmp
xchg
or
add
aas
and
out
cld
call
pop
jns
mov
ja
fdivrs
fisubrs
std
cmc
cmp
ja
or
dec
je
mov
jecxz
fs
jbe
dec
mov
cltd
pop
ds
leave
push
inc
addb
loope
lods
jp
add
dec
inc
je
cld
repnz
aas
mov
or
add
adc
fbld
pop
dec
jge
mov
mov
ret
mov
xor
jne
xchg
loope
or
fdivrl
into
cmp
pop
mov
push
mov
repnz
iret
dec
mov
xchg
ret
xor
and
test
sbb
lahf
lahf
ds
nop
and
bound
and
test
outsb
lret
push
adc
xchg
xchg
out
icebp
pop
je
lods
jbe
insl
jg
cli
jg
push
dec
in
cmp
inc
push
or
xchg
movsb
adc
clc
paddq
movsb
test
cmc
mov
push
push
sbb
testl
out
ja
add
jmp
dec
fidivs
ret
jmp
add
rolb
ret
adc
lea
cmpl
or
into
mov
xchg
or
push
xor
stos
sahf
lods
xor
ljmp
sub
or
leave
mov
stos
xchg
push
mov
dec
mov
xchg
push
cld
decl
dec
dec
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
cmp
loope
xchg
aam
sub
in
xchg
fwait
sti
push
xchg
cli
sub
mov
push
nop
repz
repnz
aad
mov
in
jmp
lahf
int
icebp
pop
jle
movsl
pextrw
sbb
mov
insl
daa
dec
pop
cmp
adc
jb
rorb
or
jge
movzwl
sub
mov
jae
lea
mov
lea
add
pop
std
clc
cmp
mov
push
add
jnp
or
or
mov
add
faddl
inc
add
sbb
call
dec
cld
movsb
imul
xor
pushf
add
and
lea
or
dec
lods
or
dec
xchg
jge
out
aad
lret
jno,pt
ret
std
mov
aam
adc
or
sbb
sbb
dec
stos
pop
jg
jl
je
mov
stos
neg
sbb
stos
jmp
inc
jnp
out
fildl
je
stos
loop
push
adc
push
pop
inc
push
lods
paddusb
dec
test
push
in
adc
inc
out
dec
sbb
loopne
mov
mov
sub
add
leave
mov
push
cli
rorl
dec
mov
insl
add
fistpll
add
std
addl
add
je
mov
dec
sbb
div
mov
inc
test
jne
sbb
inc
add
das
in
in
stos
xor
mov
add
je
inc
jne
pop
dec
jne
nop
loope
test
and
sub
xchg
sbb
mov
mov
lret
add
lea
lock
pushl
push
push
push
cmp
xlat
rol
pop
sbb
push
roll
testl
loop
push
mov
mov
mov
lret
ret
and
inc
jle
mov
add
and
and
adc
and
sub
inc
sub
xor
inc
es
sbb
fidivrl
sub
sub
ror
fs
sub
sub
sub
sbb
mov
addl
add
cmp
pop
jmp
std
decw
inc
jg
mov
and
jne
testw
lods
push
adcl
cmpl
add
movb
add
xchg
subl
dec
mov
adc
out
fnstenv
push
adc
mov
cld
rcr
scas
scas
out
pop
or
jge
fwait
mov
testb
je
fidivl
in
lcall
jne
lea
mov
inc
sub
xchg
shr
and
jle
clc
pcmpgtd
jmp
shrb
jns
std
add
sub
jge
pushf
or
incl
cmpb
jb
movb
js
decb
and
outsb
paddd
ja
jmp
data16
popa
xor
enter
cmp
push
cld
xchg
inc
xor
push
or
mov
shr
mov
add
xchg
out
sbbb
push
adc
testb
or
je
or
rolb
jmp
fidivrl
or
jge
orl
pop
mov
xor
mov
mov
loopne
jae
dec
add
das
jmp
loopne
push
in
insl
or
lods
loope
mov
dec
or
mov
sbb
mov
sbb
std
add
pcmpeqw
dec
sub
cmp
enter
and
lock
cmc
inc
ljmp
enter
cmpb
lock
jo
divl
pop
jmp
loope
shl
mov
iret
inc
pop
mov
fcomip
add
xchg
loope
jns
adc
cltd
sbbl
mov
ds
lods
or
icebp
es
sub
popa
jne
inc
sbb
std
std
fbstp
and
cmp
jne
inc
push
sub
pop
add
jg
add
ficomps
sahf
add
lds
add
loopne
test
add
aas
jmp
fstpt
cmc
test
add
test
pop
femms
push
insl
and
push
int3
pop
add
addr16
add
add
jae
fimull
inc
jmp
pop
mov
push
negl
orb
ss
push
push
inc
imul
pop
cmp
pop
nop
jb
add
cli
lods
cltd
inc
shlb
addr16
jge
in
mov
enter
pop
fbld
setns
or
jo
in
loopne
fsts
sub
xchg
push
fistpll
add
push
fwait
mov
push
jbe
insl
nop
cmp
mov
fildl
mov
or
pushf
jbe
mov
divl
mov
adc
adc
dec
xchg
adc
clc
out
and
sbb
lcall
jae
stc
inc
pop
arpl
roll
adcb
out
add
sbb
ret
cmp
shrb
xor
sbb
add
sbbb
add
fucomip
ret
movsl
mov
adc
mov
or
dec
add
fnstsw
xchg
fldcw
mov
cmc
out
push
jl
jne
add
push
jmp
add
dec
mov
fsubl
fisttpl
pop
mov
popa
push
cmp
gs
and
ja
aam
ja
mov
roll
jnp
and
fldenv
mov
not
enter
adc
mov
adc
push
mov
mov
add
scas
or
mov
push
pop
idiv
mov
les
sub
jg
add
lea
add
addb
adc
jle
push
jb
or
push
mov
jb
sti
insb
sti
cmp
ja
adc
pop
loope
das
push
jbe
add
inc
dec
jne
ljmp
mov
aas
cltd
idiv
imul
je
rcr
add
sub
loop
mov
aas
pusha
ds
add
popa
ret
or
cwtl
sti
jne
inc
std
std
fdivl
xor
fdivrp
mov
push
sub
and
adc
jmp
pop
pop
cmpsl
out
push
lods
test
call
dec
in
test
jg
mov
inc
nopl
nop
clc
hlt
or
movsb
ret
xchg
ret
sahf
pop
inc
pop
test
dec
inc
cmp
jl
sbb
add
mov
jge
shl
mov
cmp
lods
mov
sti
pusha
lock
decw
cmpl
movsl
loop
xchg
push
sub
repnz
sti
pop
loopne
cmp
fldl
dec
pop
adc
movsl
pop
push
int3
mov
lahf
mov
push
or
jns
mov
rolb
pusha
jecxz
cmp
jb
adc
inc
mov
jmp
ficomps
fisttpll
test
add
out
hlt
mov
stc
fdivs
mov
xor
add
lret
cmp
mov
cld
mov
pop
outsl
mov
gs
mov
push
or
sub
mov
and
sbb
push
cmp
jmp
pop
iret
push
adc
adc
fstpl
popf
add
xlat
or
dec
lock
xchg
and
testl
mov
mov
sub
cmp
imul
rcrb
xchg
and
lea
jle
shlb
add
inc
cmp
add
iret
adc
add
mov
add
loopne
in
ja
cmp
xchg
or
lds
mov
mov
adc
sbb
aaa
test
cwtl
mov
jge
or
loope
mov
push
cmp
or
ret
mov
lock
inc
hlt
out
push
cmpb
jne
push
neg
fisubs
or
lea
or
xchg
sbb
mov
repnz
movb
jae
jecxz
sti
inc
mov
push
in
jge
xor
call
mov
mov
inc
mov
adc
leave
cltd
and
jo
imul
lock
scas
cmp
cmp
movsb
lret
jg
in
add
stos
stos
test
pop
mov
mov
insb
lea
nop
lret
jp
dec
mov
js
jge
push
inc
je
or
rcr
or
inc
mov
fdivl
push
inc
cmc
pop
mov
push
add
sub
mov
jne
mov
loop
push
add
loopne
inc
dec
adc
lcall
lret
ret
xlat
or
push
push
sbb
in
xchg
ret
loope
pop
pop
fmul
ret
add
in
enter
jg
int
xor
or
xor
je
jecxz
clc
sysret
jne
inc
cmpb
jne
push
addl
cmp
and
lock
add
add
pxor
add
add
add
mov
orl
mov
inc
pop
add
sub
incl
popf
push
adc
jecxz
test
mov
in
stos
clts
bt
pop
jmp
lods
into
jno
pushf
or
cmp
mov
repnz
jns
mov
mov
enter
lea
mov
pop
cmp
jne
mov
clc
cmpsl
in
xor
xchg
fisubs
push
mov
inc
iret
mov
and
or
cmovns
repnz
into
or
or
cmp
add
add
or
or
or
addb
jb
lcall
push
out
imul
add
push
xor
xchg
sub
loope
popa
popf
or
and
pop
call
test
or
inc
cltd
xchg
loopne
std
inc
mov
lds
popf
dec
push
lea
scas
jns
xchg
rcr
pop
sarb
and
sbb
addl
xor
sbb
xor
lock
ret
lea
cmpsb
lods
ss
mov
xor
leave
mov
or
dec
add
dec
imul
push
scas
pusha
inc
push
mov
dec
shlb
mov
inc
mov
test
es
and
pop
loope
and
sahf
push
cmpsl
clc
xor
push
ja
jl
lock
pop
and
add
adc
and
std
jle
or
push
jmp
or
pop
je
jmp
sbb
mov
dec
cmp
aam
test
pop
sub
fcoml
adc
sbb
cmpsl
fwait
rolb
jmp
cmp
xor
mov
inc
jne
loopne
test
popa
mov
mov
ret
or
dec
push
sbbw
jmp
movsl
daa
loope
cmp
or
or
jle
ret
loope
jo
jp
push
cwtl
fbstp
pop
add
mov
call
xor
add
add
sbb
in
jno
inc
imul
ljmp
jle
cmp
addl
enter
daa
jns
or
cmp
add
rcr
xchg
ja
jns
adc
leave
mov
sbb
and
nop
add
test
shll
outsl
inc
sub
mov
lea
inc
es
jb
pusha
sti
out
ret
inc
xchg
cwtl
adc
pop
lcall
or
lods
adcl
movsb
mov
sbb
cmpb
sbb
mov
std
ja
mov
orl
cmc
sbb
add
xchg
mov
and
or
sub
aam
in
sub
ficomps
shrb
sub
fcoms
adc
jnp
cli
cmpsb
or
or
scas
or
int3
popa
fcomp
adc
pop
jmp
addr16
cmovno
push
dec
adc
popa
pushw
add
jp
or
out
int3
clc
mov
test
inc
add
inc
ret
jne
or
jge
mov
mov
xchg
adc
mov
pusha
daa
push
lods
cmp
mov
mov
mov
push
xor
xor
daa
xchg
adc
movsb
and
pop
sbb
test
shlb
daa
je
mov
pusha
jg
roll
mull
and
pop
mov
adc
rcll
mov
loop
mov
test
ljmp
push
ljmp
add
sub
jae
push
jb
mov
sbb
pop
pushf
adc
ret
mov
rorb
fs
mov
fsubp
testl
and
adc
xor
xor
or
insb
daa
push
sub
hlt
es
inc
add
mov
or
stos
push
jnp
int3
mov
or
adc
jl
xchg
fcompl
leave
dec
cld
pop
in
cmp
jne
incl
in
es
movzwl
stos
sub
jmp
sub
je
dec
je
sub
imul
scas
sub
je
jmp
mov
jmp
push
push
push
jg
fcmovb
jle
jmp
inc
mov
jle
fadd
pop
push
push
and
dec
add
fnop
je
arpl
rolb
add
push
lea
jg
jl
pop
pop
or
fisttps
jl
mov
mov
inc
js
sub
mov
or
pop
adcb
jmp
add
cmp
mov
jne
in
decl
mov
adc
orl
hlt
sti
arpl
cli
push
dec
ja
xor
sub
add
divl
fidivrl
jle
imul
add
js
add
adc
pop
push
mov
ds
cld
gs
fbstp
psubusb
or
test
and
xchg
js
sbb
sbb
mov
daa
or
cmc
movsb
or
inc
negb
pop
fnstenv
andl
ds
ffree
jne
cmp
pop
mov
push
in
add
movsb
mov
test
mov
andb
mov
nop
cmp
lods
jae
shlb
and
xchg
sub
ljmp
movsb
jns
inc
pop
jmp
aas
or
imulb
jb
and
push
jno
cmp
push
mov
and
hlt
mov
xor
ss
dec
xor
cs
sbb
jmp
lea
lock
jg
sbb
pop
push
std
or
pop
push
jmp
subb
clc
jge
add
fistps
cld
sub
push
fstps
fsubrl
lods
pop
dec
shrl
mov
cmpb
jle
and
fs
jne
testb
or
inc
ret
sub
aas
ja
mov
ret
push
cmpsl
pop
mov
dec
mov
cmp
fwait
lds
mov
add
adc
jb
lods
dec
out
cmp
jno
in
in
jl
jne
sarl
sub
mov
fisttpl
fcomp
das
fidivs
and
test
test
das
sub
imul
out
dec
jns
mov
push
test
cmp
test
xchg
ja
mov
les
jne
repnz
fildl
ljmp
xchg
push
nop
idivb
stos
jl
xor
jmp
push
test
xor
mov
clc
and
push
mov
and
add
fistpl
xor
outsb
push
fsubrl
aam
addl
test
add
pop
inc
dec
dec
enter
add
cmp
xchg
xchg
sbb
pop
les
test
and
ss
mov
inc
ja
subl
movsb
add
rep
aad
in
or
add
add
or
dec
loop
cs
pop
cmpsl
rorb
mov
daa
adc
dec
movb
xchg
into
add
dec
mov
or
cmp
cmc
pop
pop
dec
mov
andb
ret
or
call
xor
adc
fldenv
in
add
sbb
mov
sarb
adc
sub
iret
xlat
jb
mov
mov
jl
or
pop
mov
or
adc
std
mov
cmp
fisubrl
mov
outsl
data16
dec
push
pop
sar
sub
iret
xor
jmp
jo
push
add
sub
jb
mov
je
or
xchg
xor
fwait
outsb
ljmp
lea
dec
push
bound
adc
xchg
test
and
mov
adc
sub
sarb
jbe
addl
jge
add
cmp
adc
and
aam
loope
add
cld
push
push
and
push
add
lods
xchg
sub
sbb
xchg
mov
add
in
push
ret
rcrb
inc
inc
xor
pop
jno
xchg
xchg
xchg
xchg
lock
aas
test
inc
and
fisubrs
sti
or
adc
xor
outsl
or
cs
in
orb
add
mov
call
xchg
in
or
or
add
lods
xchg
je
mov
pop
sbb
les
pop
fists
idiv
jle
inc
lret
push
jge
je
xchg
cmp
fs
add
insb
and
add
int3
mov
push
jnp
and
mov
ret
je
inc
pop
or
in
imul
shll
mov
es
push
and
dec
popa
push
shlb
loopne
mov
or
add
pop
lock
loopne
adcl
add
lahf
jno
jecxz
dec
mov
mov
pop
outsl
jnp
jne
add
sbb
push
push
fsubl
scas
repnz
xor
outsb
repz
into
jb
ror
std
clc
mov
xchg
dec
mov
mov
sbbb
addb
sub
ja
rcrb
mov
jmp
adc
mov
inc
je
sub
je
scas
xor
sbb
mov
jle
mov
mov
inc
jne
push
sbb
mov
cmc
mov
loop
lock
inc
shl
lock
add
jle
mov
xor
lock
cmovnp
hlt
add
jle
clc
xchg
and
xor
mov
and
add
push
sbb
fwait
mov
jb
cmp
xor
pop
je
jne
xor
xor
add
in
mov
xchg
jle,pt
aad
pop
pop
dec
pop
mov
pop
add
cmpsb
or
ja
gs
push
sub
and
or
ret
inc
cmp
pusha
adc
sti
cmc
sar
dec
pop
test
loope
ds
mov
sbb
xchg
rclb
dec
mov
lcall
loope
rcl
push
inc
mull
sbb
or
popf
cmpsl
dec
or
shlb
rolb
repz
xor
divl
or
sbb
enter
push
sbb
neg
jae
jno
or
cmp
mov
clc
add
and
pop
aam
xchg
out
mov
notl
mov
mov
movb
xchg
aaa
and
mov
xor
mulb
pop
mov
sarb
js
into
in
mov
clc
push
lea
xor
mov
data16
cs
ret
pop
or
cmp
xor
lock
mov
xchg
loopne
js
testb
sbb
dec
lods
sub
mov
dec
mov
adc
hlt
jge
in
ds
mov
cmp
test
add
jo
sub
push
movsl
sbb
jno
insb
push
nop
out
cmp
or
sub
icebp
mov
lods
adc
lret
push
icebp
sub
jo
xor
out
leave
sub
sub
inc
and
or
fcoms
les
lea
sbb
xor
sti
jno
mov
test
push
stos
pusha
test
leave
inc
sarl
push
arpl
test
pop
add
inc
inc
push
fwait
add
sub
sbb
jecxz
or
pop
jno
or
lock
mov
push
or
sbb
mov
dec
sub
stos
dec
cmp
fcmovnbe
mov
or
cmp
sbb
sub
mov
jno
loop
sbb
fiaddl
sbb
cmp
or
rcrb
pop
inc
clc
push
or
xchg
addb
loopne
dec
jge
clc
fstpt
ljmp
add
push
inc
jmp
shld
ljmp
sub
pusha
out
xlat
or
jmp
adc
mov
loopne
xchg
push
js
cld
xor
subl
lds
add
xchg
stos
rol
mov
lret
ds
mov
mov
or
xchg
int
jge
in
push
loopne
xor
loopne
jno
and
int3
adc
lahf
cwtl
mov
loopne
sbb
outsl
and
add
mov
dec
insl
add
dec
fcoml
ja
mov
lea
add
mov
mov
adc
push
mov
add
and
sbbl
inc
dec
push
cmp
je
jmp
xor
inc
inc
jle
push
xor
and
sbb
ret
mov
add
pop
xchg
or
or
push
push
xchg
mov
add
mov
out
jns
add
nop
adc
mov
rcrb
lods
mov
cld
mov
pop
cld
cmpl
jne
xor
cmp
jo
dec
js
sbb
sbb
or
ljmp
xor
ret
ja
and
in
xchg
xchg
add
stc
andb
add
and
lea
or
and
inc
sahf
mov
push
pop
enter
int3
jle
mov
lods
aam
repnz
push
ja
push
outsl
outsl
movsb
jmp
fs
adc
xchg
jge
mov
in
in
mov
enter
nop
xchg
cwtl
nop
fstpl
mov
inc
sbb
sub
sub
and
dec
pop
aad
test
incl
enter
std
rolb
or
sbb
and
mov
rcr
push
data16
pop
adc
pop
or
lea
int
test
nop
mov
mov
imul
push
add
jnp
cmpl
add
fcoml
inc
mov
mov
and
cmp
movsb
sub
push
loope
in
or
mov
fistpl
or
mov
fadds
mov
jnp
jecxz
and
test
cmp
lods
push
in
test
inc
or
xor
pop
enter
xchg
dec
pop
inc
movsb
movsb
add
insb
das
les
inc
aaa
adc
xor
adc
adc
dec
mov
adc
or
es
insb
inc
mov
mov
imul
movb
lcall
sbb
mov
add
add
repz
fcmove
push
jp
hlt
ret
push
adc
in
and
adc
addb
mov
cmp
jne
cmp
fadds
mov
fucomip
dec
xchg
inc
cmp
adcl
adc
popl
add
pushf
rolb
pop
push
leave
shll
call
lock
in
push
xchg
leave
sub
xchg
jo
push
sbb
adc
xor
mov
adc
lret
mov
in
add
mov
lea
push
push
cltd
ds
adc
mov
cmpb
test
pusha
add
add
xor
sbb
dec
or
inc
testl
mov
and
out
jb
mov
sub
and
jle
add
inc
outsl
add
add
add
xchg
add
adc
aam
cmp
mov
inc
arpl
in
jle
inc
jbe
xor
cmp
daa
inc
sarl
jle
call
int3
adc
aaa
dec
das
enter
mov
inc
pop
jg
mov
scas
das
adc
or
ja
sub
push
add
and
and
mov
std
out
inc
inc
gs
mov
into
movsl
xchg
pop
mov
daa
pusha
push
sbb
mov
ds
pop
hlt
jge
jl
jne
fsubl
jnp
push
addr16
imul
add
mov
xchg
push
mov
add
dec
or
push
aaa
fistps
lods
cmc
cs
in
sbb
scas
movsl
cmp
pop
mov
addr16
or
or
adcl
adc
sbb
es
ret
mov
mov
jns
scas
pop
cmp
sub
sub
and
cmp
jno
jae
fwait
or
dec
test
mov
xchg
mov
sub
push
repz
ud0
inc
jecxz
inc
jmp
and
aad
add
push
adc
test
adc
cmp
mov
xchg
neg
xchg
sbb
xchg
inc
jmp
sti
sub
inc
push
outsb
mov
adcl
lahf
arpl
mov
aad
cmp
jl
ljmp
mov
test
xor
adc
jmp
cmp
inc
cmpxchg
loopne
outsl
mov
inc
lahf
jge
movsl
cmp
rorb
inc
jp
je
dec
xor
jl
js
jge
bound
les
lcall
pop
mov
test
std
add
loopne
mov
mov
mov
pop
daa
cmc
scas
push
push
out
clc
sub
ss
mov
add
adc
orb
cmp
jbe
adc
sub
cmpsl
aad
xchg
push
xor
push
adc
lock
sub
inc
test
adc
cmc
xor
jp
inc
dec
inc
adc
test
fisubrl
je
dec
inc
inc
inc
or
pop
leave
and
sub
hlt
ret
imul
xor
mov
jne
mov
mov
inc
ret
frstor
pop
jns
sub
push
add
mov
dec
test
fwait
insb
xor
mov
inc
jno
incl
mov
sub
jb
inc
mov
inc
sti
stos
pop
or
sbb
adc
or
pop
pop
jne
sbb
inc
dec
mov
pop
pop
jecxz
loope
sub
jns
push
or
push
jp
xor
or
push
add
jnp
jl
dec
data16
leave
retw
popl
jns
loopne
ffreep
call
xor
nop
mov
mov
pop
lods
add
test
icebp
ret
and
add
add
out
rcrb
mov
rorl
pop
push
repnz
mov
mov
jnp
mov
inc
iret
pop
jne
lea
repnz
push
inc
cmpsl
cld
ret
or
cmpl
dec
mov
mov
aad
gs
jmp
push
into
pop
hlt
jo
imul
sub
sbb
test
repz
insb
sbb
out
rorb
stc
push
shlb
out
imul
ret
shlb
daa
in
or
popf
push
xor
mov
adcb
pop
loopne
mov
mov
dec
call
nop
add
pop
add
inc
sbb
repnz
mov
xchg
mov
mov
and
mov
mov
pop
xchg
fnsetpm(287
sbb
in
mov
mov
add
fcompl
mov
add
pop
push
in
aam
lods
mov
pop
jns
fcomps
pop
ret
and
mov
sub
and
push
jns
movsb
int3
inc
sarb
jae
test
enter
jge
enter
sbbb
enter
adc
fcompl
mov
sbbb
aas
ret
rolb
shl
clc
rcrl
and
add
divb
cld
push
nop
lods
xor
mov
lds
rorb
pop
lock
pop
lds
and
adc
icebp
pop
inc
sarb
das
pop
adc
insl
add
fs
ja
pop
sti
lods
jle
insl
pop
jo
push
pop
notb
outsl
lock
push
les
sub
sbb
xchg
fstps
cmp
pop
push
xorl
xchg
push
std
test
fmuls
dec
jno
or
je
ss
xchg
jbe
pop
mov
jmp
cmp
sbb
adc
daa
dec
or
and
mov
pop
sbb
adc
dec
jge
ss
or
sbb
movl
jno
pop
mov
fmuls
dec
fldl
daa
adc
outsl
or
inc
dec
pop
rolb
xor
mov
mov
push
adc
and
adc
xor
mov
arpl
repnz
mov
or
std
adc
jge
sub
pop
rolb
pop
pop
jecxz
fiadds
dec
xor
imul
add
loopne
mov
ja
loope
xor
iret
lret
xchg
pop
add
sub
or
fsubl
mov
fdivrl
xor
lret
sbb
aas
jb
push
aaa
mov
aas
adc
cmp
subb
or
push
ret
stc
mov
cmc
adc
xchg
mov
pop
xchg
add
rol
pop
push
lret
mov
lahf
shlb
jo
mov
sub
aad
xchg
xchg
inc
mov
clc
push
sbb
mov
jmp
es
jle
jmp
or
mulb
adc
mov
mov
adc
and
jo
sbb
not
ja
in
popf
cmp
mov
pop
and
or
xor
jp
lods
outsb
or
adc
std
imul
gs
jo
inc
js
push
cli
xor
xchg
lock
inc
sbb
pop
dec
ret
xchg
outsb
xor
jg
decb
pop
mov
testb
sbb
or
lcall
sub
jne
inc
cmp
jne
imul
iret
and
test
or
push
les
xchg
and
mov
adc
inc
popa
int3
sbb
divb
xchg
add
ljmp
mov
loopne
push
lods
sbb
std
xchg
in
or
push
jne
mov
inc
or
sub
sbb
lea
arpl
inc
jmp
lea
decl
sbb
js
shrb
bound
dec
cmpsb
aas
int3
pop
andl
lea
or
push
xor
aas
push
loopne
stos
mov
outsl
sahf
orb
inc
inc
add
inc
or
dec
andl
inc
dec
inc
mov
xlat
mov
add
mov
or
fwait
adc
sbb
push
jae
jae
loopne,pn
sub
xchg
outsl
fmul
aad
xor
jne
sub
in
sub
lds
adc
cmp
mov
mov
mov
push
in
popa
pop
xor
cld
adc
sbb
and
xor
adc
loop
loop
clc
push
jnp
ja
je
ja
cmp
push
int
outsl
sub
inc
clc
ds
ror
insb
aam
seta
xchg
ret
or
mov
jmp
adc
js
cld
pop
js
and
mov
out
push
das
cmp
fisubrs
cmc
fists
inc
dec
cmp
sete
incl
xor
dec
or
xchg
inc
decl
dec
adc
sbb
jnp
mov
pop
pusha
in
popa
in
or
int
push
lret
pop
loopne
or
incl
cmp
cmpl
cmp
dec
cmp
adc
roll
push
or
aad
add
push
xchg
dec
inc
call
stos
shlb
ja
in
mov
dec
out
addr16
xor
int
enter
icebp
or
orb
jmp
pop
adc
jge
popf
xor
xor
aaa
in
push
push
inc
push
xchg
movsb
xor
repnz
push
outsb
dec
fadd
inc
pop
mov
enter
shlb
adc
mov
xchg
cmp
into
ja
add
jne
cmp
addl
stos
lcall
aam
mov
push
jns,pt
stc
fstl
shll
fnstcw
sub
lds
test
xchg
test
roll
xor
inc
ret
cmp
jg
lret
xor
jbe
and
js
sbb
adcb
int
pop
push
or
push
pop
cs
add
cmp
pushf
hlt
dec
xor
mov
push
in
dec
insb
push
in
fmull
lcall
push
int3
inc
xchg
lcall
cmp
xchg
out
subb
movsb
xor
mov
xor
push
test
xchg
nop
push
je
notb
xor
movb
int
push
push
push
xchg
mov
in
jbe
pop
cmp
pop
xor
test
add
test
xor
loopne
mov
and
sbb
lods
sbb
dec
das
adc
pop
adc
fsubs
dec
hlt
xor
lcall
fcompl
cld
adcb
pop
das
popa
insl
fadd
es
pop
lock
les
xorb
in
mov
call
data16
loopne
mov
imul
pop
aam
or
xchg
xchg
shlb
int3
fnstenv
xor
mov
shlb
xchg
cmp
or
push
mov
in
arpl
or
pop
inc
sbb
in
dec
xor
shrl
orb
aad
cmpsl
pushf
jne
ficompl
iret
hlt
hlt
pusha
dec
incb
cmpb
mov
pop
push
xor
je
notl
push
sbbl
loopne
xor
mov
push
and
push
xchg
cmp
pop
enter
jge
xor
xchg
mov
in
or
xchg
mov
add
es
fs
pushf
xchg
cmp
xchg
cwtl
mov
jo
cmp
adc
xchg
iret
xchg
sar
add
iret
mov
clc
pop
roll
das
rclb
xor
int
jbe
pop
cmpsb
lea
push
testb
cwtl
mov
in
lret
and
lods
pop
adcb
push
xor
inc
fidivrl
outsl
mov
hlt
lock
in
jge
or
js
pop
mov
data16
shrb
or
mov
sub
ret
dec
loopne
jb
xor
or
fisubs
mov
sub
dec
mov
push
fdivrl
pop
sbb
inc
lock
mov
mov
arpl
push
and
push
xchg
inc
and
nop
mov
and
and
fsubrs
stos
lock
and
xor
xchg
in
idivb
addr16
clc
jecxz
lret
add
fsts
mov
clc
lea
jl
cmpb
cmc
sbb
push
test
add
fnstenv
adc
ret
adc
sub
enter
dec
pop
add
mov
sub
mov
push
add
push
jb
mov
sub
adc
xor
lock
negl
add
jge
adc
sub
stos
jbe
add
addb
loopne
inc
rorb
imul
inc
jns
add
inc
pop
sbb
mov
or
shlb
lahf
je
lahf
push
fadd
fwait
mov
cmp
repnz
lcall
in
and
mov
leave
and
cld
in
xchg
pop
mov
dec
cs
cs
cs
sub
addr16
dec
xor
adcb
mov
addr16
clc
push
in
andb
xchg
mov
dec
rclb
in
fdivrs
test
jns
cs
hlt
mov
fldcw
movsb
clc
cwtl
in
pop
repnz
fimull
les
inc
outsl
pushf
test
sbb
add
jne
pop
jecxz
loopne
lock
push
lods
mov
es
add
outsl
je
fs
or
cltd
into
dec
push
mov
imul
mov
adc
outsl
fs
outsb
dec
jb
pop
mov
jb
inc
insl
jo
inc
jb
insl
push
je
push
ret
leave
push
cmp
fimull
aas
jnp
test
adc
fdivrs
mov
jb
and
outsb
xlat
or
dec
dec
test
fiadds
cmp
add
mov
ret
fistps
rolb
xor
jmp
dec
imul
roll
cmp
push
adcb
outsb
inc
loope
ss
fiaddl
fiadds
add
adc
in
xchg
cmp
sti
adc
lock
repz
aaa
aaa
aaa
cwtl
pop
imul
aas
sbb
push
push
push
cmp
loope
sbb
loopne,pt
push
inc
jne
dec
inc
sarb
cmp
filds
xor
add
add
dec
sbb
fistps
js
dec
aas
or
sbb
adc
inc
mov
sarb
or
pop
loopne
sbb
add
adc
mov
in
loopne
sub
test
popa
sub
loopne
cmp
addr16
dec
fisubrs
loope
aas
jbe
cmpsl
movl
mov
cmp
push
sbb
pop
xchg
xchg
fs
adc
leave
aam
push
rol
enter
pusha
mov
sub
adc
imul
orl
gs
and
xchg
mov
dec
insl
jo
mov
push
leave
jecxz
aas
xchg
pusha
sub
push
inc
jmp
sub
pushf
mov
jo
adc
xchg
jecxz
stos
push
and
stos
xchg
test
ret
jg
xor
loop
and
fists
arpl
cmp
xchg
pop
push
in
in
dec
add
add
enter
iret
mov
push
add
add
call
add
call
nop
int
nop
je
int3
shlb
popa
dec
lea
int3
adc
in
inc
cs
xchg
mov
pushf
in
in
add
and
repnz
in
out
push
loope
out
xor
test
inc
mov
gs
cmp
ss
sub
mov
dec
mov
clc
sub
mov
outsl
das
push
scas
out
sub
dec
je
sbb
xor
in
popf
ja
gs
push
xchg
daa
loopne
inc
nop
outsl
dec
ja
add
call
repnz
xchg
mov
rorb
in
clc
lret
mov
nop
or
pop
cmp
out
cmp
hlt
sub
hlt
loope
leave
and
lock
cltd
fimull
in
and
call
leave
leave
call
fimuls
xchg
ficompl
inc
loopne
inc
push
jns
loopne
and
mov
sub
out
lahf
fcmovne
or
ret
shrb
xchg
xor
fmul
xchg
inc
ss
add
xchg
insb
rorb
adc
jno
call
insb
mov
adc
scas
lea
mov
out
dec
add
aam
fadds
je
scas
add
add
pusha
jnp
jmp
adc
ret
sub
inc
push
push
enter
mov
insb
and
push
mov
push
and
jl
dec
fimull
cmp
insl
loopne
jmp
inc
shlb
jb
dec
add
sbb
lea
xlat
jmp
cmp
mov
add
daa
in
and
imul
roll
movsb
pop
push
add
lret
cmp
pop
setg
dec
ja
jge
stos
sub
repz
fwait
jge
mov
pushf
xchg
jne
push
ret
xchg
out
shr
aam
mov
fdivrl
subb
pop
aam
sbb
int3
pop
in
jecxz
shl
mov
cld
jmp
test
lahf
test
testb
fsubl
sbb
push
stc
pop
jo
add
bswap
sbb
test
or
pop
les
jns
xor
xchg
clc
fidivl
mov
and
lock
arpl
negl
inc
xor
lea
push
call
xchg
lea
push
jno
fiaddl
lea
pop
cs
fildl
add
pop
dec
inc
fsubrl
xor
sahf
jmp
inc
lea
mov
cmp
jns
in
repz
pop
push
test
jmp
out
sbbb
test
nop
popa
jae
loop
fsts
int3
jne
sbb
sbb
sbb
adc
push
lret
xor
adc
or
add
pusha
cmp
mov
xchg
jo
jg
int3
ss
ss
sub
or
jae
das
test
jmp
div
and
jmp
jmp
mov
inc
push
ror
add
mov
clc
and
or
pop
jae
mov
xor
movsb
mov
adc
outsl
add
cmp
test
cmp
jne
outsl
ljmp
pop
mov
push
cmp
into
in
aaa
lods
jne
sahf
insl
pop
mov
sahf
lret
sahf
adc
or
push
lods
in
xor
cmc
xchg
fadds
cmp
mov
or
push
jmp
sub
and
and
xor
sbb
inc
in
push
es
sbb
jmp
sub
or
inc
push
lret
sub
rcrl
cltd
dec
add
and
in
cmp
inc
cmpsl
lret
lock
jmp
arpl
inc
inc
sbb
loopne
aad
push
lea
inc
scas
push
aas
add
lods
adc
xor
or
inc
scas
into
sbb
in
loopne
fs
inc
loopne
nop
and
xchg
in
loopne
push
test
sub
pop
outsl
push
stos
js
fs
jp
stos
in
cld
adc
data16
in
adc
inc
dec
jns
cltd
nop
call
or
outsb
cmp
call
sub
adc
and
nop
jecxz
out
jmp
push
and
imul
push
pop
sbb
lret
leave
pop
xchg
decl
push
sbb
call
lock
add
or
cli
lcall
ljmp
adc
cmp
gs
add
xor
jmp
cmp
jmp
cmp
int3
jge
loope
arpl
jge
sahf
xor
xor
or
cmp
cmp
je
enter
pop
jne
imul
mov
xchg
fwait
mov
mov
mov
xor
fucomip
mov
adc
lock
or
add
sbb
xor
mov
popa
iret
inc
jne
and
popf
imul
jae
aaa
add
fdivrs
nop
ds
or
adc
or
icebp
inc
shlb
pop
inc
pop
out
enter
mov
adc
loopne
cmp
sbb
push
xchg
enter
sub
dec
sahf
sbb
dec
mov
and
xor
test
repnz
pop
test
adc
and
jb
sbb
xchg
push
stc
push
arpl
push
out
push
push
xor
xchg
into
popf
xor
enter
jae
push
push
pop
pushf
adc
mov
popf
std
rol
in
insl
jl
lock
inc
bound
dec
lds
push
rcl
popa
loope
and
es
jbe
in
xor
jmp
mov
sub
xadd
lock
lret
sbb
jae
dec
loopne
cmp
fisubs
mov
in
cmc
ds
adc
adc
movsb
ja
jle
repz
push
mov
shll
hlt
push
push
xor
cmp
cs
jle
cmc
adc
cmc
or
testb
fiaddl
xor
pop
nop
dec
nop
call
sbb
je
or
sub
jmp
clc
xor
test
das
sub
fmull
dec
push
cs
in
mov
jo
fnstcw
aam
xchg
dec
jb
or
clc
sbb
popa
fwait
pusha
fistpll
xor
clc
sbb
mov
or
inc
jl
add
sub
sbb
or
cmp
nop
mov
and
jl
push
cmp
push
dec
jmp
mov
and
jmp
push
xchg
jmp
adc
xchg
xlat
roll
dec
xor
das
insb
sbb
adcl
jg
adc
lods
das
mov
cmc
xchg
and
repz
fwait
clc
and
inc
and
xlat
dec
fidivl
sbb
movups
sbb
sti
std
jg
sub
xor
test
cs
mov
adcl
dec
mov
mov
push
cltd
push
sbb
cmc
repnz
subb
clc
pop
imul
pop
mov
lock
cmp
imul
test
push
mov
sbb
filds
cmp
testb
cmp
and
mov
sub
sbb
inc
sub
inc
ret
clc
movsb
push
push
scas
aam
add
cmp
inc
mov
sub
inc
lahf
lret
xor
push
sbb
rorb
add
xchg
dec
insl
movsl
daa
jae
in
xchg
sti
add
sub
notl
push
addr16
scas
iret
lock
int
push
dec
lcall
data16
sbb
mov
jmp
imul
add
mov
es
sbb
xor
push
sar
cmp
pop
cmpsl
jl
and
push
xor
fildll
mov
in
fs
inc
cs
or
mov
inc
mov
pusha
dec
add
push
or
add
mov
addr16
test
cwtl
je
dec
je
jmp
outsb
lahf
adc
or
icebp
add
push
sub
cmp
test
aaa
lcall
stc
mov
imul
sbb
ds
pop
dec
xor
or
push
pop
jo
loopne
inc
rorl
cmp
add
scas
xchg
mov
fstp
sub
sbb
mov
xchg
fwait
xchg
mov
xor
mov
mov
jns
mov
filds
imul
push
jecxz
xor
sbb
jmp
lods
add
mov
jmp
add
xchg
mov
popf
jecxz
adc
push
inc
push
lods
jbe
and
call
dec
push
sub
cmpsl
daa
add
inc
fucomip
outsl
mov
fbld
call
push
or
add
aad
subb
jge
adc
add
pop
cmp
pop
rcpps
mov
pushf
sub
addb
out
fs
andl
addb
pop
xor
push
rcll
and
adc
nop
xchg
daa
orl
nop
and
arpl
add
loope
cld
popa
mov
sub
scas
cld
rolb
inc
add
cmp
std
and
mov
push
jecxz
push
es
sbb
or
std
jae
add
mov
and
pop
adc
xchg
push
repnz
cmp
pop
add
jmp
aas
add
or
and
adc
rcr
repnz
mov
add
xor
cmp
add
shr
add
shl
std
cmpsb
jg
adc
sbb
and
mov
cmp
xor
call
sbb
or
jle
xchg
push
dec
shll
mov
fsub
push
adcb
mov
movsb
loopne
inc
imul
mov
inc
imul
cmp
sbb
add
test
vpmacssdql
leave
aam
xor
movsl
pop
and
push
jo
cmp
add
jae
mov
adc
loop
jo
lret
mov
adc
stc
xor
aaa
sbb
and
sub
gs
cmpsl
inc
mov
sahf
sbb
pop
ss
hlt
push
jnp
or
jno
daa
ss
in
sub
cmp
nop
test
xchg
or
fsubrs
sbb
ret
inc
inc
push
leave
pop
cli
jmp
dec
call
push
fcoml
fnsave
mov
adc
sub
mov
shl
stos
dec
bound
push
inc
push
xchg
data16
inc
sub
hlt
sbb
mov
bound
call
call
sbb
cmp
lock
and
add
mov
test
bound
add
sbb
cmp
pop
add
ds
shll
jp
mov
rcl
ljmp
lcall
and
xchg
jmp
std
push
dec
loopne
add
push
adc
out
fmuls
and
mov
mov
pop
fisttpll
pop
in
mov
call
sub
sbb
daa
mov
sbb
push
or
xchg
dec
jmp
cmp
mov
jge
inc
bound
xchg
daa
pop
add
js
imul
inc
icebp
dec
xor
push
popw
pop
push
sbb
lds
shll
push
add
mov
pusha
push
mov
xchg
sbb
fs
fstpl
add
lds
imul
inc
mov
sub
push
movsl
jmp
and
mov
mov
nop
push
adc
add
inc
out
das
mov
sub
xor
inc
stc
inc
push
push
push
cmp
and
push
sub
mov
fcmove
lods
fwait
sbb
push
sub
push
dec
jge
push
lahf
dec
jb
das
notb
aaa
jno
pop
divb
icebp
jle
jmp
loopne
jmp
test
sub
xchg
pop
jle
add
aam
fwait
or
inc
flds
cmpsb
mov
test
pop
or
or
mov
push
jo
sbb
out
inc
dec
cmp
inc
out
out
add
into
pop
pop
and
mov
push
add
jb
adcl
or
shlb
sub
push
jb
add
les
mov
pop
or
pop
ss
push
jae
lcall
push
ss
imul
mov
pop
daa
les
or
in
stc
xchg
dec
pop
rclb
or
pop
jnp
adc
out
mov
flds
sub
push
adc
data16
imul
mov
jno
xor
cli
push
incl
sbb
fadds
rclb
aad
push
lods
roll
rcrb
das
add
in
push
and
add
xor
jl
or
xchg
xor
push
push
push
sbb
imul
imul
mov
sub
add
sbb
mov
adc
sub
fildll
pop
sbb
dec
jmp
adc
push
imul
inc
popw
inc
push
mov
add
rorb
cmp
and
sarl
int3
mov
jne
mov
xor
inc
or
or
clc
imul
xor
call
sbb
pop
xorb
push
sti
add
add
sahf
rclb
xlat
mov
aaa
push
add
jbe
bound
adc
pop
pop
xor
jns
dec
adcb
mov
inc
repnz
pusha
movb
push
push
adc
imul
adc
or
pop
or
shll
xchg
movsb
imul
push
inc
push
push
mov
pop
aad
shll
leave
push
fdivp
push
or
and
bound
and
filds
inc
rolb
add
inc
or
in
xor
and
dec
push
lea
inc
or
xlat
lods
or
push
sub
daa
push
mov
rcrb
in
std
xor
popf
adc
insb
adc
inc
dec
mov
dec
pusha
and
push
or
filds
dec
outsb
mov
inc
xchg
dec
je
push
mov
imul
adc
int
imul
imul
xor
and
adcb
mov
and
sbb
xchg
sbb
mov
adc
push
sbb
push
imul
inc
in
icebp
sub
out
fimuls
jmp
es
lds
nop
mov
push
insl
mov
push
jmp
inc
adc
adc
jmp
pop
jmp
imul
add
pop
cmp
dec
cmp
xor
ja
pop
dec
xchg
fwait
dec
adc
lcall
shl
cmpb
mov
push
sbb
inc
pop
sbb
mov
popa
or
xchg
fildll
cwtl
add
notl
hlt
adc
mov
mov
and
and
dec
mov
shr
fildll
sub
mov
or
adc
adc
lods
pop
rorb
sahf
and
sbb
xchg
xchg
push
test
stos
mov
dec
adc
loopne
loop
pushf
mov
sbb
dec
cmpsb
pop
adc
jne
in
mov
data16
adc
into
arpl
push
mov
inc
push
adc
pusha
insl
stc
push
lock
xor
and
push
cmpsl
add
adc
leave
mov
adc
cs
push
dec
pop
andl
sahf
xchg
inc
lcall
mov
cmpsb
xor
pop
daa
std
adc
sub
xchg
add
ds
inc
pop
lcall
imul
push
adc
pop
and
popa
mov
adc
sub
pop
dec
addr16
mov
mov
and
sub
fstl
push
add
popa
sbb
adcl
adc
pop
repz
enter
pop
pop
sbb
and
push
arpl
mov
pop
sbb
sahf
push
mov
or
leave
addl
sbb
cmp
sub
aaa
cmp
aaa
sub
adc
into
adc
adc
fwait
pop
cmp
repnz
push
or
pop
pop
test
pop
clc
rclb
xchg
pushf
das
mov
movsl
xchg
test
leave
xchg
int3
add
push
push
push
jo
push
pop
decl
xor
add
push
roll
pop
enter
push
fisttps
das
xchg
sub
or
push
enter
adc
pop
roll
pop
mov
loop
inc
lcall
dec
imul
pop
sbb
push
insb
adc
imul
cmp
mov
push
testl
fmuls
les
sbb
fs
out
jl
mov
push
pop
dec
repnz
pop
add
inc
insb
adcl
dec
and
aas
mov
add
jae
add
bound
add
mov
pushf
int
insl
nop
jle
push
sbb
sbb
in
pop
rorl
push
add
adc
imul
push
push
mov
inc
pop
push
mov
lods
or
push
pop
mov
inc
dec
adc
sarl
and
mov
xchg
pop
and
push
cmpl
into
stos
shrb
and
mov
cmp
mov
sub
fildl
xor
fmuls
aas
outsl
xchg
hlt
xchg
adcl
rcrl
push
and
push
xchg
xchg
add
incb
repnz
dec
je
and
adc
inc
out
and
leave
sti
jae
pushf
cmp
inc
lock
sub
hlt
pop
hlt
add
inc
push
sbb
cwtl
sbb
lea
inc
inc
add
and
sub
add
dec
inc
mov
cmp
mov
cld
xchg
cmp
into
push
mov
add
xchg
je
pop
sbbb
and
nopl
sub
rcrb
cmp
enter
add
push
add
mov
xchg
and
or
lea
loope
xor
push
loope
push
pop
adc
mov
lcall
xor
ret
add
pop
hlt
ret
mov
imul
test
hlt
mov
sub
enter
orb
out
psubq
dec
mov
dec
shll
hlt
and
pop
lcall
and
lcall
daa
aad
mov
push
or
daa
inc
fcoml
and
xor
popf
or
adc
dec
mov
sub
jns
xor
orl
xchg
fucomi
push
xchg
adc
in
hlt
cmp
add
lock
add
xor
sbb
cmp
nop
in
call
imul
push
xchg
in
inc
pop
sbb
pushf
xor
loope
mov
dec
mov
push
xor
shlb
and
int3
xchg
int3
enter
sub
cli
int
push
dec
push
les
xor
or
orb
sub
daa
or
sarb
pop
in
in
and
and
xor
shll
jb
mov
testb
mov
xor
sarl
cwtl
or
and
mov
mov
test
enter
xor
ss
fnsave
mov
insl
and
cmp
test
test
mov
xor
mov
and
loopne
xchg
negl
cmp
aam
mov
jae
xchg
jno
xor
stos
xchg
scas
loopne
ret
jno
jmp
adcl
jmp
insb
xchg
ds
mov
ret
stos
pop
nop
adc
mov
adc
sbb
adc
and
and
dec
mov
or
xor
mov
mov
mov
in
and
es
push
cwtl
dec
push
and
push
test
dec
or
or
and
mulb
or
mov
push
or
jnp
cmp
jno
push
mov
jo
push
xor
rcl
jb
popa
repnz
xor
mov
xchg
daa
adc
add
sbb
mov
andb
pop
or
aaa
mov
es
adc
dec
push
and
xor
push
sub
pop
lcall
into
fisubrl
add
xor
rcrl
pop
rcrl
test
jle
dec
rcrl
push
sub
jl
cs
jns
sub
lods
es
insl
push
lods
es
xchg
dec
push
test
xor
popa
sub
push
inc
pusha
inc
pop
mov
push
mov
mov
cmp
push
cmp
xchg
cli
in
in
ret
jno
aaa
dec
cmp
loopne
insl
aaa
pusha
ret
fdivs
mov
aaa
aam
aam
pushf
sbb
push
aaa
rcl
insl
dec
sbb
iret
jno
popa
cmpsl
adc
xchg
add
and
ret
subl
es
in
roll
xor
repz
mov
pop
repz
and
shlb
pop
jp
mov
orl
xchg
pusha
add
cs
fs
inc
imul
or
jge
xchg
mov
mov
repnz
fs
adc
pusha
and
sbb
sbb
sbb
jo
aam
movsb
pop
in
pusha
ret
mov
push
es
pushf
cmp
xor
aaa
cwtl
jno
insl
xor
aaa
outsl
ss
sbb
ss
popf
enter
nop
jbe
xor
dec
aaa
es
push
mov
jnp
or
sub
mov
xchg
add
es
test
sbb
nop
int3
loopne
stos
or
test
je
or
sarb
inc
adc
or
xchg
xchg
add
js
mov
add
cmp
add
jg
je
into
push
or
je
jmp
sub
pop
dec
in
sub
cs
jb
js
in
mov
js
or
cmp
push
sbb
data16
aas
test
cmp
xor
add
add
mov
mov
push
addr16
xchg
mov
popa
ja
dec
lret
push
xchg
movsl
pop
sbb
push
pop
pop
data16
add
movsb
loopne
add
inc
insl
nop
add
sub
push
nop
pop
xorb
pushf
nop
or
push
push
movsb
out
in
testw
sahf
lret
inc
rol
lock
jg
mov
pop
jmp
movw
ja
aam
movsl
xor
dec
cwtl
rcr
aas
add
mov
sub
push
push
adc
mov
or
in
int
mov
nop
adc
loope
dec
or
adcb
and
inc
pop
cmpsl
fists
bound
or
fldcw
inc
push
pop
fnstenv
enter
push
push
pop
dec
bound
inc
add
inc
movsb
outsb
mov
dec
fbstp
xor
pop
or
mulb
sbbb
sbb
mov
dec
ds
dec
push
pop
push
push
lock
fistps
stos
inc
dec
aas
outsl
cmp
adc
push
cmp
or
jns
adc
add
jecxz
adc
dec
mov
add
inc
enter
xor
subb
and
or
push
enter
dec
outsl
mov
insb
xor
leave
xor
jmp
cmp
or
xor
lock
out
add
loope
push
push
sub
sahf
insl
dec
cld
and
out
mov
andb
adc
add
push
add
addl
xorb
sti
outsb
xchg
jbe
and
push
xorb
jl
jno
js
pop
jmp
mov
gs
hlt
in
add
test
pushf
mov
adc
cmp
mov
fistl
jp
data16
aaa
lahf
and
xchg
icebp
cmp
lahf
jmp
jo
and
adc
add
jecxz
mov
dec
or
inc
mov
adc
loop
inc
dec
pusha
sbbl
lock
jo
jns
dec
jne
pop
xchg
or
push
mov
and
in
popf
fldcw
xchg
inc
push
outsl
enter
insb
add
inc
outsl
jne
xchg
cwtl
and
outsb
arpl
and
addr16
insb
lds
jmp
add
mov
mov
bndstx
cld
imul
outsb
imul
rolb
imul
push
pusha
or
add
pop
sub
pop
xor
sbb
daa
add
aaa
ss
outsb
clc
ljmp
mov
xor
out
pop
push
mov
int3
aas
ja
leave
push
mov
push
andl
jno
sti
adc
sub
lret
fcmovb
mov
push
jl
nop
lcall
scas
sub
push
lea
sbb
es
mov
data16
fwait
cwtl
jmp
lea
inc
cwtl
adc
loope
hlt
mov
lods
or
xor
add
and
or
sbb
ljmp
in
lods
je
and
dec
xchg
outsb
jns
add
sub
push
gs
push
mov
shll
or
jle
out
pushf
adc
mov
enter
imul
jne
dec
popf
nop
push
hlt
test
push
test
mov
or
push
xchg
ja
jno
aaa
dec
push
fsts
scas
out
lds
xor
add
int
orl
cmp
js
inc
lock
call
push
mov
out
or
push
loop
xchg
test
xorl
push
push
adc
aam
mov
pop
test
or
hlt
lahf
push
adc
cmp
jnp
je
mov
subl
xchg
test
sub
pop
adc
scas
cmp
push
loopne
and
jmp
push
add
loopne
mov
subb
ja
pop
mov
mov
call
cli
adc
mov
xchg
lock
outsb
mov
and
std
cmp
xchg
popa
xor
add
push
cmp
mov
enter
or
xchg
sbb
lret
in
aam
cwtl
sbb
and
dec
jle
add
mov
jg
mov
xchg
mov
adc
out
lods
add
pop
ret
rorb
data16
mov
and
mov
test
fcmovu
popa
pop
enter
pop
push
mov
rcll
pop
popa
daa
lods
pop
mov
pop
cmp
or
jbe
movb
adc
lock
mov
jle
rcrl
cmp
loop
xchg
sti
cmp
cmp
setg
inc
mov
repnz
pop
xchg
loope
cmp
arpl
add
lock
leave
inc
adc
adcl
cmpsb
add
mov
dec
ret
inc
xor
mov
rorb
inc
sbb
dec
cmp
or
inc
fs
sbb
movsb
mov
xorb
lea
pop
cmpb
inc
dec
jne
xchg
cmp
and
mov
or
xor
nop
push
mov
adc
in
shl
adc
in
mov
xchg
jl
or
pusha
mov
lods
sbb
pop
mov
cmp
and
mov
cmp
subl
cmc
loopne
cli
mov
inc
cmp
ss
fcompl
jecxz
mov
inc
repz
nop
xor
cltd
iret
outsl
hlt
xchg
xor
repnz
push
mov
sbb
xchg
in
or
xor
inc
push
cmp
cmpsl
leave
dec
mov
jle
scas
leave
leave
leave
leave
scas
nop
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
xchg
orl
dec
call
xchg
adc
dec
cmpsl
xchg
sub
aas
mov
fcmovb
push
add
pop
pop
mov
adc
test
rclb
jb
or
enter
mov
adc
sbb
pushl
popa
jae
dec
popa
outsb
popa
pop
mov
enter
lret
cmp
pusha
decl
push
jmp
adc
mov
mov
or
out
and
pop
stos
mov
dec
adc
dec
mov
cmp
cs
and
jnp
or
add
mov
or
push
sbb
or
xor
add
pusha
cmp
or
push
sbb
mov
sub
dec
pop
push
mov
aam
or
ss
lahf
add
mov
sbb
adc
enter
inc
push
aaa
add
push
dec
push
sub
int
sub
adc
loop
xor
inc
sbb
xor
inc
push
push
sub
cld
ret
and
dec
mov
cmp
arpl
insl
ja
pop
mov
cmp
popa
fcoms
xor
test
and
add
inc
dec
push
movsb
pop
pusha
aaa
out
hlt
add
inc
orb
pop
jo
pop
cs
clc
dec
sbb
push
pusha
lahf
subl
js
push
xchg
and
xchg
xchg
mov
popa
pop
adc
pop
add
out
or
xchg
sub
outsl
add
je
or
outsl
xchg
jl
ljmp
lea
outsb
mov
xchg
xchg
daa
cmpsl
jbe
push
mov
sbb
add
inc
dec
add
movhps
add
inc
decb
sarb
or
adc
and
push
ss
shlb
push
and
movsw
pop
xchg
dec
mov
adc
fistl
cmp
pop
nop
xchg
xor
fnop
push
dec
stc
adc
insb
enter
adc
add
or
pop
inc
mov
push
add
sbb
popa
jns
mov
or
cmp
mov
outsl
clc
movsb
pop
popa
add
loopne
nop
pavgb
push
gs
dec
mov
ret
jae
sahf
shlb
addl
mov
sbb
mov
pop
fisubl
int
fstl
push
sbb
add
or
dec
es
int
les
ljmp
outsb
jb
push
inc
daa
xor
test
mov
adc
fildl
shlb
push
das
mov
dec
and
xchg
dec
aam
and
cwtl
dec
ja
out
call
dec
or
in
rcrl
inc
daa
das
add
inc
out
test
data16
rclb
in
xor
shrl
gs
sub
jne
add
inc
sbb
sbb
sub
nop
test
and
mov
fcom
inc
add
or
aaa
adc
lahf
loope
or
xlat
fistpl
pushf
divb
mov
pop
movl
jge
loopne
xchg
cmpb
adc
mov
sbbb
das
movsb
dec
adc
adc
dec
adc
mov
andb
out
xchg
sub
shlb
jle
jle
mov
cmp
sub
fildll
loope
pop
sbb
nop
out
mov
sub
xchg
test
dec
sub
jb
cmp
pop
mov
mov
inc
test
xchg
push
lock
out
in
lret
icebp
inc
push
or
fld
sub
cmp
call
xchg
shll
and
xchg
es
jns
loopne
loopne
adc
aad
clc
mov
mov
sbb
rorl
or
fdivrs
std
in
cld
fildll
mov
js
adc
mov
call
negb
pusha
gs
jnp
out
sub
push
mov
ficompl
cmp
dec
push
or
push
enter
dec
enter
jnp
xor
mov
pop
add
fidivrs
andb
jno
notb
fcoml
or
rorl
push
add
dec
mov
and
aaa
movups
jo
mov
push
iret
pusha
cli
inc
rcr
cs
push
test
jmp
pop
popf
mov
mov
inc
adc
mov
cmp
or
add
scas
mov
adcl
test
pusha
mov
stc
mov
jne
pop
adc
sbb
jne
lret
jne
inc
ret
cmpsl
mov
icebp
ret
dec
add
aam
jecxz
inc
and
sbb
adc
or
add
adc
or
mov
add
add
mov
pop
inc
pushf
add
and
add
pop
lea
fistl
mov
mov
mov
dec
sub
fstps
movb
inc
pop
jp
icebp
jns
sub
adc
sub
mov
aad
incl
cwtl
stos
lcall
sub
pop
push
pop
inc
and
rcrb
ss
jbe
adc
movsb
pop
dec
rclb
scas
sahf
icebp
pop
cld
push
dec
or
idiv
cmp
pushl
stos
xor
mov
mov
xlat
leave
mov
cs
mov
pusha
rolb
push
push
les
shrl
sub
or
repnz
mov
loopne
mov
sbb
outsl
or
jo
jb
dec
pop
pop
lock
outsb
je
loopne
add
clc
xlat
outsl
je
clc
mov
es
dec
gs
insb
add
push
dec
pop
pop
jl
cmpsl
cmpb
add
or
jl
or
mov
scas
push
mov
inc
dec
mov
inc
insl
add
pusha
daa
and
xor
add
frstor
or
je
push
push
orb
test
mov
sub
mov
les
xchg
das
pop
loopne
in
mov
insl
daa
sahf
sahf
xchg
loop
cmpb
sbb
int3
or
cmpsb
xchg
xor
test
imul
xchg
adc
clc
shrb
pusha
cli
fcmovbe
rolb
add
inc
or
and
pop
push
fdivr
fs
imul
mov
or
cmp
aam
and
aam
adc
ss
fwait
hlt
insl
rol
shrb
in
inc
mov
dec
push
mov
cwtl
arpl
mov
push
clc
dec
push
dec
inc
pop
cmpsl
adc
and
add
and
fiaddl
gs
jg
inc
insb
jae
ljmp
lods
addr16
mov
push
cmpb
xchg
sub
movsl
and
leave
mov
pop
add
adc
push
or
and
pop
icebp
shlb
mov
mov
adc
nop
leave
push
int
int3
add
fdivrs
dec
pop
lods
test
daa
inc
sbb
adc
push
xor
mov
pop
or
stos
daa
cmp
out
test
push
incb
sbb
inc
rolb
ret
xchg
fwait
dec
adc
jae
cmp
push
in
dec
loopne
mov
pop
into
xlat
sbb
cmp
test
neg
sbb
lcall
mov
test
cmp
dec
mov
mov
cmove
dec
out
stos
inc
test
mov
sub
popa
movd
mov
or
sub
ret
in
cld
popa
mov
jns
shl
sbb
loop
push
hlt
mov
and
mov
adc
lock
mov
pop
mov
push
sbb
push
lods
add
loope
add
xor
sub
mov
loopne
gs
dec
adc
fs
aas
adc
daa
adc
loope
mov
push
aaa
je
nop
loope
cwtl
outsl
sbb
mov
sub
enter
dec
inc
push
pop
add
je
push
jg
push
sbbb
sbb
cmp
inc
push
insl
adc
xor
or
jmp
sbb
sahf
xor
adc
repnz
sub
leave
mov
inc
fsubrl
jno
cwtl
popf
jmp
or
adc
adc
adc
push
int3
les
adc
lock
sbb
popa
test
and
push
popl
and
inc
cmp
sub
loope
pusha
cmp
sbb
mov
insl
clc
sub
cmp
cmp
cli
jle
adc
pop
gs
or
and
add
and
arpl
push
clc
and
cmp
push
stos
jl
dec
push
mov
sub
xchg
sbb
sbb
sbb
or
stos
shlb
add
out
mov
and
sub
hlt
dec
adc
inc
mov
ret
pop
shll
dec
jl
sbb
push
sub
cmp
inc
adcb
adc
jmp
adc
shll
adc
mov
pop
cli
xor
leave
add
inc
adc
or
test
mov
lahf
push
mov
push
test
mov
xor
pop
push
inc
mov
fisubrs
outsl
push
push
outsb
inc
mov
loopne
popf
xor
push
cs
leave
rcll
iret
push
push
or
push
pop
dec
add
adc
insb
xchg
sahf
xor
hlt
pop
add
out
push
les
out
sub
out
jmp
jne
lods
movsb
cmp
faddl
push
call
lods
adc
add
lods
in
lea
jb
inc
mov
nop
add
lret
test
sub
push
push
mov
xor
sub
outsl
mov
mov
loopne
bound
cmp
imul
sbb
popa
push
xor
cmp
or
adc
movsl
fdivrl
daa
loopne
jge
rorl
or
sbb
inc
aam
push
add
pop
out
add
xchg
rcrb
cmp
pop
ja
addr16
lcall
sub
test
mov
in
or
cmp
add
movsl
fstpl
mov
adc
xchg
adc
cmpxchg8b
int3
xchg
sbb
xlat
into
lea
pusha
pop
cmp
ret
add
mov
xchg
test
inc
dec
sub
push
loopne
lods
add
push
mov
adc
es
ds
aaa
push
imul
push
push
mov
hlt
fisttpl
subl
sbb
mov
test
adc
inc
push
sbb
adc
cmp
cmpsl
loopne
cld
dec
pop
cmp
jb
ss
jb
dec
pop
pop
ja
insl
and
sbb
out
arpl
sub
or
lret
addl
rol
pusha
push
pop
mov
in
fs
pop
or
and
in
fdivrs
fmull
push
stc
inc
outsl
push
incb
dec
outsb
jae
popa
outsb
shrb
add
repnz
pop
int3
rclb
mov
int3
dec
call
test
pop
mov
xor
or
jae,pn
insl
gs
sub
jne
jo
outsb
xor
xor
pop
addr16
pop
inc
in
insl
pop
dec
jae
lret
test
inc
pop
lcall
mov
lock
sub
into
and
push
push
aam
stos
int
and
addr16
push
mov
add
dec
loopne
xor
jno
and
adcl
pop
in
cmp
xchg
or
lock
pop
inc
lea
mov
rcrb
jmp
add
add
call
movzbl
cmp
jle
adcb
xchg
sbb
cmpsl
test
mov
decl
test
repnz
mov
mov
dec
adc
push
insl
call
inc
add
and
xchg
pop
dec
xchg
and
loope
sbb
sub
add
adc
loope
adc
daa
pop
jno
dec
jne
xchg
xor
aad
mul
insb
shrl
push
in
mov
mov
cmp
or
xchg
in
les
ret
ret
or
sub
in
in
fs
fcoml
add
in
loop
lods
mov
cli
or
and
cmpl
sub
jbe
push
sbb
xor
outsb
add
xchg
xchg
mov
ret
dec
aaa
test
pop
cs
or
adc
inc
xor
cmp
das
jmp
pusha
adc
adc
pop
push
jge
push
add
or
mov
cmp
dec
or
xchg
adc
push
add
jg
dec
add
cmp
xor
sti
jne
pop
add
fsubs
push
aam
jge
inc
add
iret
and
add
mov
inc
ret
stc
or
mov
insl
in
aam
outsb
jo
add
addr16
pop
idivl
mov
je
sub
mov
push
setae
sub
push
call
dec
rcll
xchg
or
pushf
pop
jg
or
ret
dec
sbb
dec
jns
cld
test
vcmppd
push
pusha
cli
ret
test
loopne
push
xor
jbe
addr16
js
jmp
out
aas
fistps
sarb
dec
sub
test
xlat
adc
inc
xor
sub
dec
and
xchg
inc
xchg
mov
pop
xorps
insb
rcrl
imul
add
les
or
pop
or
cmp
xchg
add
std
dec
sbb
lea
jp
mov
loope
xchg
sub
idivb
xor
or
cwtl
mov
test
jg
outsl
cmp
fiadds
add
adc
lea
push
or
xchg
add
std
stos
in
mov
sarb
pop
nop
xchg
mov
pop
jmp
jae
and
lar
xchg
fs
inc
fiaddl
scas
mull
shl
add
jne
cmpb
jnp
and
mov
mov
mov
push
pop
data16
js
inc
int3
sar
movsl
out
pop
movsb
jl
hlt
mov
sub
lea
add
jo
dec
les
pop
daa
mov
lea
mov
aas
pop
dec
jmp
popa
and
xor
pusha
and
aam
mov
push
add
inc
inc
xchg
push
sbb
or
sbb
push
adc
dec
and
pop
outsb
lock
cmp
stos
ds
adc
jmp
sub
add
or
fdivrs
loopne
xchg
jmp
sub
xor
int3
test
mov
sub
and
shl
sub
out
mov
add
jp
cmpsl
dec
jne
pop
mov
add
jg
imul
jb
cmp
ja
das
or
ss
mov
fnstcw
or
or
pop
shll
imul
dec
jne
mov
jb
and
jmp
scas
pop
or
cld
dec
jne
sub
stc
fidivrl
outsb
cmc
push
push
push
xor
push
or
push
jle
hlt
push
push
push
push
mov
fisttpll
sbb
xchg
sub
pop
lock
dec
and
sbb
dec
pcmpeqd
mov
bound
mov
mov
ja
xor
push
add
mov
pushl
insl
hlt
inc
sar
jne
mov
cmp
fs
out
adc
push
add
movsl
stos
push
mov
lret
jne
repnz
fbld
fldcw
jmp
fisttpll
push
fildll
jbe
and
push
iret
mov
or
cmp
lcall
mov
dec
xlat
add
mov
xor
inc
mov
jo
outsb
jmp
stos
rolb
bound
test
imul
in
mov
add
xor
mov
test
dec
adc
das
inc
mov
sbb
and
shlb
push
divb
jne
fnstenv
pop
fwait
adc
ret
and
ja
leave
orl
inc
and
cmp
cmp
enter
cld
add
mov
addl
mov
sub
push
adc
mov
orl
stos
cld
jle
add
jne
pop
dec
cmp
cmp
mov
iret
movl
jo
fs
push
cld
nop
nop
loop
ret
or
int3
sbb
stc
sub
mov
pop
bound
data16
stc
cmp
daa
arpl
fs
sub
cs
sti
and
imul
fsubrl
cs
imul
cmp
outsl
sbb
test
push
sbb
arpl
or
mov
jecxz
xor
and
or
add
in
gs
aaa
lock
fwait
dec
or
push
and
pop
pop
xor
out
and
xor
mov
cmp
xchg
lock
fnstenv
sbb
xorb
jg
mov
mov
mov
mov
xor
and
dec
bound
add
xchg
ljmp
lods
jno
out
mov
adc
insl
loop
ljmp
or
cli
dec
das
es
outsb
test
lea
cmp
jo
sbb
inc
test
jb
hlt
mov
xorb
pushw
adc
mov
bound
lret
jns
rolb
jg
sbb
rolb
mov
push
data16
sbb
or
mov
test
push
ficomps
mov
or
add
sub
or
loope
sti
xorl
or
xchg
nop
adc
movsl
stos
inc
or
xchg
fisttpl
xchg
xchg
sbb
cltd
movsb
aaa
cltd
xchg
stc
addr16
filds
shll
in
xor
sbb
or
push
dec
loope
adc
fs
or
sub
out
inc
test
mov
push
pop
adc
or
nop
fstps
sbb
pushl
lock
aam
xorb
and
add
add
mov
dec
inc
inc
push
push
cmp
outsb
sub
mov
ret
scas
leave
es
or
jo
and
mov
stos
aam
lcall
pop
mov
add
pop
jne
cwtl
inc
fdivs
push
push
iret
mov
js
pushf
cltd
sbb
outsb
movsl
adc
or
pop
add
lds
and
xlat
es
enter
push
pop
pusha
push
or
xchg
pushf
cmc
pop
pusha
mov
inc
cwtl
int3
jno
rclb
outsb
cmpb
add
xchg
aad
xchg
adc
dec
adc
add
fidivs
mov
mov
xchg
mov
jle
cmpb
pop
push
add
pop
and
lods
out
cmp
mov
cmp
mov
add
ds
mov
filds
dec
pop
mov
and
cmc
jbe
and
iret
mov
mov
mov
push
pop
les
sub
sbb
mov
mov
jns
out
sub
imul
jge
xchg
adc
es
inc
sahf
lar
adc
add
inc
mov
outsl
repnz
test
dec
dec
inc
push
dec
dec
dec
das
stc
fistpll
inc
inc
inc
dec
dec
inc
add
fcmovbe
mov
inc
push
inc
push
push
add
sub
jo
ret
insb
imul
and
push
xchg
test
xchg
js
push
pop
jnp
xor
pop
and
jne
jle
in
adc
mov
push
mov
mov
xor
and
int
xchg
fmuls
ds
insb
jmp
sbb
xchg
shlb
in
nop
out
or
push
cmpl
adc
mov
push
mov
rol
into
jp
or
les
and
aam
lods
pop
cmp
in
push
sub
ret
mov
mov
sbb
and
sub
fwait
mov
faddl
enter
das
or
ds
test
mov
or
inc
fwait
rcrl
shlb
jle
pop
sbb
movl
xor
pop
subl
sti
arpl
xchg
divps
and
sub
jp
mov
add
fs
pop
mov
mov
mov
sub
and
sub
mov
sub
push
inc
dec
daa
push
push
xchg
add
leave
adc
repz
les
das
lea
and
inc
cmc
test
pusha
scas
arpl
test
loope
mov
xchg
stos
pop
sbb
enter
iret
aaa
outsb
aaa
inc
pop
mov
jae
push
ret
test
sub
inc
jbe
pop
adc
or
lea
cmpsl
push
fldcw
jle
and
ret
push
loope
jmp
adc
adc
sbb
test
pushl
mov
ds
mov
out
pop
pushl
cmp
shrb
add
add
add
sbb
loop
xchg
or
rol
sub
in
push
jne
out
push
fsubs
mov
mov
jp
lock
add
mov
xchg
mov
push
push
arpl
lahf
mov
fs
and
out
outsb
mov
sbb
mov
and
stc
pop
jbe
sub
push
sbb
dec
dec
inc
gs
inc
inc
cmp
push
mov
das
stos
add
ret
daa
cmp
xor
orl
sub
orl
and
sbb
or
enter
or
enter
add
ffreep
popw
push
jo
rclb
fsubrs
cltd
cwtl
xchg
cwtl
setns
enter
fwait
pushf
enter
popf
sahf
lahf
and
addb
test
xchg
orl
or
mov
xchg
jo
jb
leave
leave
leave
jae
jne
sbb
enter
jb
sbb
and
mov
out
test
add
das
push
sarb
lea
sbbb
stos
dec
add
inc
or
ja
pop
dec
push
lea
mov
sbb
arpl
mov
repnz
mov
xor
ret
fbstp
jnp
push
das
inc
or
decl
add
clc
jle
xchg
pop
dec
inc
adc
cmp
mov
jnp
jb
cmpl
add
sbb
xchg
int3
scas
ret
sub
adc
mov
test
pop
inc
gs
pop
rolb
mov
in
jg
add
outsb
sbb
mov
movzwl
jmp
gs
sbb
or
cld
dec
jg
adc
mov
and
sbb
push
arpl
sbb
add
jle
fucomip
enter
fbstp
jmp
cmp
sbb
std
loopne
test
out
jne
outsb
push
mov
mov
cmpsb
push
clc
mov
cmpb
pop
xchg
fistps
pop
lar
decb
ja
xchg
lods
jg
mov
shr
sbb
mov
cmp
std
push
mov
jb
or
adc
add
mov
inc
mov
sbb
push
mov
loopne
mov
in
ds
in
push
decl
mov
push
adc
mov
mov
cmpb
lcall
or
testb
call
out
and
lock
mov
or
pop
mov
push
out
fbstp
push
incl
cmp
pop
dec
xorl
fwait
xlat
or
cli
test
inc
mov
lods
cmp
fwait
mov
stos
mov
sarb
call
mov
loope
mov
shlb
lea
add
xorb
pop
mov
pop
daa
pop
inc
nop
lea
sbb
fmuls
cs
mov
adc
rcrb
dec
cld
and
pcmpeqw
lock
cs
push
mov
mov
mov
add
jecxz
decl
or
adc
movsb
outsl
dec
xor
sub
bound
popa
mov
push
inc
jbe
add
add
lea
push
ljmp
out
dec
mov
test
bound
jb
pop
sub
arpl
pop
test
lret
fadds
or
or
push
call
xor
xchg
add
add
add
aaa
lds
xor
inc
cmp
mov
xor
iret
lods
insl
loop
mov
add
dec
stos
test
push
jecxz
add
ud2
pop
or
test
cwtl
loopne
jnp
cmp
add
lahf
shrb
mov
rolb
in
cli
ja
fimull
mov
fstps
movsb
js
adc
or
add
jo
faddl
data16
xorb
pop
cmpsb
popa
insb
js
and
pop
lret
add
nop
or
movsb
xchg
rolb
and
mov
jecxz
sbb
jns
xchg
aaa
or
mov
push
adcb
pop
add
push
out
je
nop
outsl
sub
fisttpll
fisubl
fistpll
or
xor
sub
ja
and
and
dec
dec
pop
and
cmp
jmp
adc
inc
lock
or
loopne
lahf
inc
mov
dec
rcll
inc
repz
pop
fistpll
jns
jno
out
inc
jg
xor
sbb
adc
roll
cmp
mov
adc
inc
inc
sub
mov
loopne
or
int3
orb
cmc
pop
adc
dec
or
dec
add
or
icebp
jbe
and
fisttpll
xor
cmp
sbb
cmp
or
xor
adc
adc
dec
pushf
sbb
jle
test
je
pop
mov
fsts
adc
add
jp
adc
and
sub
add
push
inc
imul
add
adc
bound
sbb
gs
outsl
push
js
push
add
adc
xchg
add
fildll
sbb
push
dec
pop
jp
jle
outsb
insb
jns
jb
int3
adc
fidivl
scas
mov
std
sahf
test
aaa
push
push
xor
sti
sbb
insb
or
cmpsl
or
nop
ds
or
lret
adc
adc
test
or
movsb
and
add
pusha
hlt
gs
subb
js
add
dec
mov
xchg
jnp
out
ss
pop
add
or
fisttpl
pminsw
ja
adc
mov
add
inc
jne
mov
sbb
shrl
or
movb
adc
jns
jbe
mov
pop
push
add
push
push
fcoms
popf
adc
push
add
test
add
aaa
popf
bound
adc
aaa
jl
into
or
mov
mov
inc
inc
inc
leave
aam
nop
nop
subb
leave
in
sub
jne
pop
mov
test
or
dec
push
leave
xchg
lods
gs
jge
sbb
and
daa
or
jp
xchg
sbb
pushf
jl
jbe
jne
aas
pop
lods
orl
sbb
fsubrs
dec
aas
scas
stos
sub
and
inc
and
inc
sbb
rcrl
leave
nop
mov
test
cmp
pop
and
out
add
mov
pusha
jmp
imul
scas
pop
ljmp
outsl
add
inc
int
scas
adc
xchg
sbb
inc
repnz
pop
adcb
loopne
js
cmovne
jo
fidivl
push
mov
sbbb
aaa
push
mov
cwtl
xchg
jb
dec
fimull
and
pop
daa
adc
mov
xchg
mov
cmp
adc
push
and
movsl
xchg
iret
test
pusha
add
push
add
nop
nop
and
dec
dec
subb
xchg
mov
add
pop
mov
add
call
cmp
subl
dec
push
push
cmp
sbbb
lods
test
lods
xchg
outsl
xchg
test
fists
mov
jmp
scas
sub
push
mov
into
sbb
out
pop
and
les
movsl
add
push
xor
scas
mov
imul
fwait
movsl
rcrb
mov
das
mov
cmp
subl
sbb
inc
adc
cmp
push
add
repnz
xchg
fiaddl
in
and
adc
sbb
out
xor
cmp
adc
cmc
cwtl
cmovns
jae
fs
jo
pop
fdivr
pushl
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
pop
sub
pop
cwtl
or
inc
rolb
mov
cmp
mov
mov
sbb
fdivl
imul
mov
jle
xlat
sarb
sub
in
mov
jbe
push
call
push
pop
mov
add
mov
push
lcall
mov
and
sub
sbb
xchg
or
scas
pop
sbb
ljmp
sbb
ret
inc
dec
jg
leave
or
je
aaa
test
push
leave
dec
pop
lock
pop
aaa
nop
pop
leave
or
insb
pop
fst
xor
ret
dec
push
pop
ret
mov
xchg
hlt
pop
lds
push
movsb
jbe
popa
imul
push
aam
das
rol
rcrl
xchg
mov
call
fldenv
outsb
inc
rclb
lds
scas
xor
insb
add
push
push
rorl
and
jl
ja
add
hlt
pop
movb
pop
jo
pop
mov
jl
push
aad
mov
sahf
mov
sbb
rcll
mov
or
ds
jo
daa
lret
and
push
dec
leave
in
cld
daa
lret
push
jle
enter
mov
aam
mov
pop
out
sub
sub
insb
dec
test
adc
and
aaa
adc
dec
dec
adcb
add
add
cmpb
pop
xor
leave
pop
or
mov
enter
xchg
movsb
push
mov
dec
repnz
add
add
je
lds
pop
aaa
and
mov
pop
sub
sbb
push
adc
mov
inc
mov
and
dec
iret
test
inc
mov
fiaddl
test
fs
es
adc
fs
sbb
inc
es
and
add
adc
cltd
mov
adc
lcall
mov
or
fildl
call
imul
push
fwait
cmpsb
mov
int
ja
rcrl
xchg
mov
adc
mov
cmpsb
or
pop
cmp
add
dec
pop
cwtl
mov
lcall
push
adc
xor
pop
push
push
test
and
mov
inc
addr16
fimuls
mov
mov
cmovl
or
out
dec
mov
push
jle
call
mov
daa
jl,pt
push
in
mov
xlat
cmp
pminub
pusha
stc
mov
out
outsb
and
push
jg
xchg
push
sub
pop
push
inc
gs
mov
pushl
pop
data16
or
or
mov
test
shll
mov
jno
cmpsb
jecxz
adc
xchg
aaa
rcrl
and
out
lar
sub
mov
dec
enter
in
adc
enter
aam
aam
stc
fisubl
decl
lea
jmp
adc
and
fcomps
mov
xchg
pop
inc
int
test
inc
push
in
cs
or
inc
sub
faddl
push
addr16
aaa
in
mov
mov
push
subb
inc
mov
xchg
nop
scas
pop
jecxz
in
add
daa
insb
pop
add
cwtl
fisubl
imul
pop
jo
cmp
push
or
test
inc
mov
push
nop
push
mov
ds
jle
jno
mov
sti
pushl
clc
push
push
push
push
push
push
xor
imul
jle
push
sub
dec
cmpsb
xor
push
pop
fisubs
data16
push
dec
or
push
xor
push
sbbl
and
mov
xchg
sbb
sbb
sub
mov
insl
addb
cmp
cmp
cmp
add
add
aaa
cmp
cmpb
adc
dec
pop
lock
mov
adc
xorl
imul
push
inc
imul
mov
imul
imul
das
sbb
mov
nop
and
add
popf
nop
mov
adc
lea
add
gs
pop
repz
or
push
xchg
push
inc
push
cld
es
lcall
or
mov
rcll
sub
arpl
jp
mov
xlat
nop
dec
push
push
movsb
sub
dec
fs
test
or
cmpsl
mov
cmc
pop
test
rclb
mov
dec
mov
ret
es
lea
decl
adc
sbb
pop
jne
push
add
inc
cltd
pushl
inc
mov
scas
xchg
or
jg,pt
daa
loopne
add
inc
jb
movsl
mov
xlat
scas
cwtl
cwtl
subb
setbe
scas
jae
mov
xor
ret
out
nop
popa
xorl
in
push
jo
in
rorb
jno
and
loop
mov
bound
dec
pop
pop
je
jbe
js
scas
or
enter
inc
lret
mov
rcl
sbb
inc
ret
pop
or
mov
ja
and
sub
lock
xor
cld
sub
or
and
jmp
sbb
mov
shr
rcr
and
mov
adc
xchg
aas
ret
xchg
and
and
jg
mov
into
sbb
push
dec
ret
pusha
pop
test
pop
mov
std
mov
subl
xchg
add
cmp
or
xchg
xor
mov
adc
lret
push
add
clc
loop
xor
movsl
and
ret
and
sub
rorb
fdivrl
rcrl
sbb
lcall
inc
or
fildl
sbb
pop
mov
pop
or
push
inc
ret
loop
push
or
mov
std
dec
jne
pop
add
pop
xchg
mov
xchg
lods
jne
fsubs
test
or
cld
mov
test
xorb
jp
inc
hlt
xchg
or
jl
or
and
jl
xlat
or
xchg
addl
aam
mov
jne
mov
cmp
dec
pusha
movsb
sub
inc
cmp
push
mov
arpl
ret
test
and
cmp
aaa
adc
add
movsl
clc
mov
popa
add
add
add
addb
and
push
outsb
push
sbb
test
imul
out
and
je
jecxz
push
sbb
adc
cmc
xchg
and
sbb
imul
test
icebp
cwtl
mov
inc
arpl
add
imull
clc
push
fwait
lea
inc
xor
out
test
pop
cmp
push
xchg
jl
fcmovbe
add
cltd
cmpsb
adc
aas
int3
sub
subb
in
xor
pop
mov
sbb
sub
dec
jne
and
inc
fwait
push
adc
xchg
outsb
lds
inc
add
cld
jg
ja
xchg
rolb
ficoms
mov
jmp
dec
cmpb
xchg
popf
cmpsb
jnp
sub
inc
xchg
push
cmp
leave
shrb
fwait
dec
xchg
mov
sub
cmpsb
xchg
and
fs
cmp
jmp
mov
mov
fwait
mov
xor
das
and
std
movsl
dec
bound
sbb
icebp
mov
jg
mov
mov
and
sbb
xor
gs
test
pop
xor
xor
xorl
or
imul
ljmp
icebp
into
dec
jne
push
xor
cmpsb
lock
inc
cmp
decl
jne
jbe
popa
adc
sbb
cmp
add
xchg
fmul
nop
out
push
sbbl
aaa
xchg
test
out
jbe
pop
inc
test
jle
or
daa
xorb
fldl
rorb
mov
add
ret
pop
xor
mov
mov
push
aam
dec
dec
xchg
mov
hlt
xchg
xor
pop
inc
outsl
inc
lods
push
cmc
mov
lahf
mov
adc
cwtl
pop
dec
imul
or
inc
or
shll
mov
adc
or
xor
xor
test
js
pop
lods
sbb
daa
hlt
daa
shrb
or
add
aam
in
lcall
cltd
cmc
out
pop
das
movsb
scas
mov
in
add
add
add
jb
test
jo
hlt
fwait
inc
pop
enter
sub
add
dec
lahf
orb
fisubl
fwait
dec
or
push
rcrb
enter
mov
pop
inc
push
adc
fwait
les
mov
and
xchg
pop
jno
stc
mov
jle
fwait
lret
adc
inc
js
fcompl
add
mov
outsl
xor
stos
inc
pushf
sbb
push
daa
out
fcompl
sbb
in
lea
in
xchg
or
cwtl
push
jns
fmull
shll
in
sub
orb
and
lods
mov
negb
add
inc
or
and
inc
cmpsb
ss
mov
mov
mov
mov
out
pop
mov
in
mov
pusha
pop
mov
inc
cmc
scas
cmp
inc
pop
aas
cmp
sbb
aaa
jecxz
shll
mov
cmpsl
xor
and
pop
fimuls
or
or
xchg
mov
stos
das
push
adc
out
jns
sahf
addb
dec
push
xchg
cmp
lods
test
mov
cmp
lahf
inc
push
pusha
nop
and
and
std
aad
mov
or
scas
mov
cmp
sbb
fsubs
push
sub
push
ret
pop
mov
pop
jl
pop
jmp
es
gs
dec
cld
mov
jmp
ret
or
or
mov
add
xor
dec
jmp
add
sbb
dec
loopne
sub
insl
push
hlt
or
sub
mov
psubsb
ljmp
adcl
sub
ret
jecxz
pop
movsl
lods
mov
out
je
shrb
xlat
cwtl
cmp
fcompl
push
rolb
mov
xlat
and
xor
pop
divl
push
data16
notb
mov
mov
mov
scas
sahf
push
add
or
xchg
sub
ss
push
xor
fdivrs
mov
mov
fwait
jo
pop
push
mov
ret
inc
sub
das
iret
cwtl
push
and
pop
add
xlat
shrb
mov
dec
mov
ret
jge
add
xlat
arpl
pop
mov
aaa
mov
out
call
adcb
outsb
mov
leave
mov
push
or
adc
add
adc
insb
pop
adc
arpl
inc
aaa
ds
dec
push
xorl
xor
aam
inc
std
cmp
je
mov
mov
mov
sarb
xchg
push
mov
xchg
xor
jno
ret
fdivs
add
mov
mov
jno
js
ret
mov
add
and
xchg
add
rolb
mov
scas
jmp
in
dec
push
push
test
ficompl
xor
in
inc
xchg
mov
subl
sub
and
idivl
sbb
adc
rorl
loop
mov
push
jns
stos
add
lock
cltd
adc
out
sti
movsl
sbb
or
sub
lods
jno
ds
jge
daa
and
sub
pop
jne
adc
mov
jb
mov
movsb
decl
lods
mov
jecxz
push
lea
fists
das
mov
mov
sti
or
movsl
mov
sub
outsl
aas
lods
sbb
or
xor
push
mov
push
pop
gs
sbb
pop
jnp
push
rcl
lea
imul
jge
push
sub
std
add
sub
mov
div
dec
push
pop
jne
mov
or
leave
inc
das
test
jmp
adc
cmp
pop
push
add
out
aas
shll
aaa
sub
or
sub
cmp
or
mov
xor
sbb
mov
cmp
dec
pusha
lods
rcl
lahf
out
push
push
mov
jle
add
jne
xor
in
stos
loope
xchg
fbstp
add
shlb
ret
inc
adc
push
mov
pop
or
leave
int
jne
sbb
lea
jbe
lds
js
test
sti
ficoms
imul
and
rclb
jge
fucomip
filds
add
lea
or
mov
hlt
mov
popa
xor
das
and
test
push
mov
inc
cwtl
sub
mov
mov
or
pop
xchg
push
adc
xorl
pop
xchg
in
popa
cmpsb
out
outsb
add
ret
xor
adc
int
sbb
jne
cmpsb
dec
push
imul
add
mov
fisubrs
jmp
and
lahf
and
mov
aad
mov
jmp
inc
cmp
ja
push
mov
and
repnz
insb
sub
jnp
decl
jle
and
xchg
jae
push
or
xor
inc
sbb
or
or
sub
push
fists
clc
je
mov
xor
enter
mov
push
cmpb
in
xchg
imul
sub
enter
sub
mov
dec
scas
shl
add
pop
js
bound
lods
push
jns
push
mov
jnp
jle
adc
dec
jle
push
pop
or
push
rolb
adc
xor
cli
add
imul
ljmp
std
jg
dec
test
pop
aam
dec
dec
inc
sarl
add
movsl
push
outsb
cltd
jne
mov
mov
out
inc
and
add
inc
and
sbb
shlb
jns
in
add
test
sub
adc
test
sbb
mov
in
inc
and
in
jmp
and
popf
xchg
inc
jne
lds
push
dec
add
add
cmp
inc
inc
stos
jae
push
data16
pushl
xor
pop
ret
adc
and
nop
orl
xchg
jp
xchg
das
add
mov
scas
xchg
cmp
jg
push
ljmp
mov
jmp
shrl
and
xor
scas
add
stos
mov
dec
mov
iret
or
mov
shl
sbb
ret
sub
shl
cmp
je
cmpb
sbb
sbb
popf
push
inc
mov
xor
adcb
lds
sub
inc
xorl
push
fcmovnbe
adc
pop
mov
movups
cmp
out
shlb
fisttpl
leave
je
stos
adc
btr
pop
enter
add
mov
push
push
push
inc
std
xchg
orb
jmp
movsl
subb
out
dec
popa
popf
shrb
inc
int3
fucom
add
repnz
addb
xor
cli
pop
ja
and
rcr
mov
jb
jbe
iret
lahf
mov
hlt
or
dec
mov
jg
jmp
inc
cmp
jne
inc
decl
jne
les
add
lcall
enter
push
and
push
rolb
add
mov
pop
aam
push
movb
adc
xchg
lds
or
pop
add
into
lock
icebp
sbb
adc
pop
sarl
and
push
sbbl
imul
mov
xchg
xchg
cli
scas
push
shrl
pop
cmp
sbb
inc
ret
mov
dec
loopne
xorb
lods
leave
cmp
imul
je
add
scas
cmp
ret
push
out
mov
pop
mov
adc
nop
mov
and
pop
jl
test
xchg
pop
fcoms
addr16
stos
and
mov
push
or
notb
push
ret
scas
push
aam
or
pusha
xchg
inc
outsl
les
jle
push
call
and
scas
xchg
jp
pop
or
orl
lea
shll
arpl
leave
xchg
in
push
mov
add
sub
popa
adc
int
or
add
inc
mov
sub
push
or
and
pusha
test
xchg
rcrl
jmp
mov
repz
push
jns
xchg
clc
icebp
lock
sub
xor
sub
sbb
scas
cmp
pop
xor
pop
mov
mov
sub
add
aam
jo
mov
mov
pop
add
imul
aad
and
mov
mov
mov
pop
inc
fiadds
adc
pop
push
push
pop
push
pop
fs
ret
add
mov
test
cmp
lods
dec
cmpsb
nop
add
call
ret
pop
or
ss
sbb
ja
es
in
dec
rcrb
repz
adc
mov
xchg
inc
lahf
mov
push
inc
test
cmpsb
push
rcl
hlt
loope
or
mov
push
adc
adcb
int3
fbstp
add
aas
mov
decl
jne
add
add
jb
push
adc
enter
xorl
mov
mov
push
or
and
jl
fnstcw
pop
pop
in
jo
lock
pop
in
push
in
or
jecxz
sbb
inc
jne
inc
shll
test
mov
or
aaa
push
sub
out
out
and
sarb
sbb
pop
jo
inc
cmpsb
cmc
iret
lds
sbb
pop
pop
aaa
adc
mov
add
xor
ss
xchg
mov
pop
hlt
adc
enter
imul
loope
out
insb
aad
aad
xor
and
dec
push
push
xchg
and
mov
xchg
std
lock
or
mov
xlat
stos
shrb
mov
and
addl
test
sbb
arpl
loopne
adc
orl
sub
mov
daa
shlb
inc
pop
and
add
and
mov
xchg
imul
lods
push
ror
sbb
push
inc
mov
pushf
add
fiadds
mov
lcall
adc
push
test
pop
sbb
cmp
xor
in
mov
sbb
stos
pop
mov
cmc
sub
or
mov
push
sub
sub
clc
push
out
xor
adc
int3
pop
mov
jge
into
xchg
orl
cmp
inc
dec
pop
mov
xor
adc
inc
push
pop
in
and
dec
fisubl
insb
and
or
loope
mov
stos
push
dec
push
jo
or
rolb
and
xor
sahf
dec
scas
cld
test
xchg
and
xchg
insb
js
loopne
cs
mov
xor
sub
rcrl
adc
add
xor
cltd
rolb
lock
or
pop
pop
test
stos
push
or
pop
or
gs
add
cs
mov
lret
cli
pusha
pusha
xchg
mov
jo
rcrb
enter
out
mov
mov
pop
adc
in
push
clc
clc
add
add
mov
sbb
shr
lock
mov
int3
push
imul
in
jne
push
out
sub
mov
cmpl
addl
lahf
popa
mov
imul
and
and
push
cmp
or
dec
push
add
pop
mov
cmp
mov
xchg
jmp
pushf
loope
adc
pop
es
inc
rorl
roll
push
out
iret
and
xchg
loopne
sbb
hlt
dec
dec
mov
push
add
pop
addb
lds
insb
int
dec
das
scas
insl
test
imulb
dec
push
adc
sbb
sbb
xor
fistpll
mov
sub
inc
lods
xorl
xchg
ja
pop
cmovle
lock
adc
mov
sbb
sub
ss
or
daa
dec
push
lea
mov
adc
in
cmpsb
add
mov
test
sar
mov
jns
mov
pop
dec
testl
adc
cltd
je
or
ds
add
lret
mov
fnstcw
mov
std
cmpb
jne
or
inc
hlt
enter
ret
push
xor
push
or
push
and
mov
xlat
and
in
das
add
rorl
stc
push
je
je
hlt
xchg
push
jmp
cmc
cmp
fdivrl
lods
and
or
nop
xchg
sbb
pop
cmpsl
mov
pusha
cmp
imul
loope
sub
sub
add
mov
popf
push
aad
clc
mov
add
aad
mov
lods
pop
mov
dec
in
fstp
inc
inc
mov
dec
sub
jb
addl
push
pop
mov
das
fs
jmp
mov
jnp
aaa
ret
in
and
jno
loope
push
pop
mov
mov
mov
and
add
mov
lds
ljmp
shrb
test
test
idivl
enter
inc
add
dec
movsb
lahf
arpl
mov
out
push
xchg
and
add
mov
jg
add
outsb
pop
orb
mov
push
add
je
mov
xchg
data16
pop
mov
cmp
dec
pop
pop
add
dec
xchg
gs
scas
xchg
imull
and
sub
call
int
scas
stc
cmp
pop
push
inc
adc
test
movsl
pop
xchg
ficoms
lods
sub
dec
roll
mov
cmp
dec
mov
xchg
movsb
add
repnz
orb
and
mov
sbb
xor
inc
add
inc
loope
jge
xchg
movsb
nop
mov
movnti
orl
pop
cmp
cs
aam
aaa
sub
lret
and
sub
adc
mov
movsb
xchg
test
imul
add
and
push
cmpb
adc
test
lea
ds
les
imul
inc
lock
dec
roll
or
mov
push
jb
int3
sub
je
aam
mov
mov
dec
rorl
mov
sahf
frstor
pop
lahf
xor
clc
add
lock
shlb
clc
adcb
inc
bound
idivb
je
jg
mov
xchg
jmp
mov
sti
cmp
jge
lea
add
pop
xchg
movsb
ret
add
pop
sbb
cmp
jle
mov
xor
add
sbb
dec
sub
inc
addr16
and
pusha
xchg
sbb
jae
push
test
aas
aam
add
loopne
push
ds
push
sbb
repnz
add
mov
out
fwait
or
shll
cmpsl
push
scas
test
mov
push
mov
or
arpl
add
in
mov
push
pop
int
je
dec
xchg
leave
xchg
js
jle
cmpsb
popf
inc
shrl
cmpsl
add
ljmp
rol
je
sbb
or
mov
and
xchg
inc
ret
push
ret
loop
xchg
xchg
lcall
movl
pop
push
xsha256
cmpsb
push
in
jl
enter
subl
inc
hlt
rcl
adc
sbb
cltd
inc
das
or
jae
ss
jns
sti
and
jg
cmp
fistps
cli
mov
jne
mov
or
or
mov
mov
sbb
jle
adc
fistpl
pop
jns
hlt
jl
add
test
inc
sbb
sub
sahf
add
jg
je
andl
adc
push
inc
add
mov
mov
sahf
stc
lret
or
enter
lds
xchg
xchg
inc
jle
adc
push
jge
or
jle
or
orb
dec
out
fistps
adc
out
js
inc
test
mov
add
pmaxub
mov
lea
pop
inc
jmp
sahf
mov
sub
inc
sbb
insl
ret
jno
fwait
and
out
jbe
call
subb
and
mov
push
fadd
pop
aas
jns
lock
jge
and
pop
adc
addr16
insl
loop
sbb
addb
aad
movsb
rcrb
cmpsl
sbb
mov
sbb
gs
scas
les
xchg
sub
mov
xor
push
sub
daa
dec
pop
loopne
mov
xchg
ja,pn
lock
and
xor
enter
cmp
into
jne
sbb
mov
lret
test
mov
hlt
ss
add
mov
jecxz
inc
mov
aaa
clc
adc
mov
push
inc
jecxz
sbb
lret
mov
pop
add
pop
push
xchg
sbb
or
inc
pop
stos
stc
mov
jo
jge
jb
jbe
pop
outsl
adc
dec
push
xchg
clc
test
sbb
xchg
repz
add
int3
push
adc
or
push
dec
or
sbb
add
jbe
push
or
sbb
dec
sub
sbbl
call
cli
mov
cmp
or
add
in
in
jmp
call
jne
lret
stc
adc
mov
pop
sbb
mov
mov
leave
aas
jg
push
outsb
dec
movsl
in
sub
sub
or
test
ret
add
iret
shrb
mov
leave
mov
xor
mov
sbb
push
sbb
xchg
cmp
jge
clc
jmp
xchg
adc
add
sbb
xchg
sbb
arpl
fimull
mov
in
pop
das
add
imul
pop
xchg
rorb
lret
adc
mov
add
cmpsl
pop
or
push
subb
lret
push
add
leave
fstpl
in
sbb
adc
icebp
daa
cmpsl
push
mov
sbb
sub
add
test
push
pop
out
enter
cmpsl
or
lods
out
jmp
cmpl
xor
pop
pop
in
or
sub
fucomp
add
add
cli
shll
cmp
dec
leave
and
nop
jo
loopne
dec
mov
adc
adc
lea
pop
adc
adc
mov
icebp
mov
mov
aad
and
test
or
testl
icebp
add
sbb
out
push
mov
or
lea
jmp
or
dec
or
adc
out
add
add
sbb
cs
or
jno
mov
int
cwtl
mov
decb
or
cmp
imul
inc
cli
push
xchg
push
movsb
fists
pop
mov
jmp
ret
dec
aam
and
sub
pop
fwait
jmp
and
cmpsb
std
into
jg
lea
idivl
data16
sub
xor
jno
inc
pop
cmp
icebp
or
rorl
add
les
mov
test
mov
cmp
push
in
pop
xchg
cmp
je
push
jne
pop
movb
pop
fadds
js
sbb
lods
xchg
adc
movsb
xor
jo
insl
or
mov
or
sbb
mov
icebp
push
jno
fsubrs
dec
mov
add
cltd
addb
std
sub
jnp
jle
or
movsl
xlat
test
and
inc
jno
lds
sbbb
push
add
inc
inc
or
mov
or
adc
scas
add
imul
mov
iret
dec
and
push
lea
xor
lds
add
mov
imul
sbb
adc
jecxz
jo
mov
xor
add
cmp
adc
adc
inc
jb
adc
pop
inc
movsb
jp
jg
dec
mov
adc
test
pop
push
pop
inc
inc
xchg
sub
xchg
aam
pop
js
mov
dec
xchg
bound
dec
addr16
sbb
imul
jl
jp
xchg
or
sarl
sbb
sar
rcrb
iret
shlb
jmp
mov
xor
xchg
mov
jo
sar
dec
fnstsw
decl
nop
cmp
push
mov
ds
nop
push
sub
add
mov
adc
mov
outsl
sbb
adc
adc
repnz
and
pusha
inc
test
mov
js
ja
fiadds
xchg
jne,pn
cmpb
and
movsl
cwtl
jmp
out
mov
data16
jnp
popa
dec
pop
inc
sbb
movsl
adc
xchg
mov
scas
sub
ds
or
push
dec
fsubs
hlt
mov
push
adc
inc
push
cmp
push
arpl
or
add
xor
mov
add
sub
sub
xor
enter
rorb
mov
xor
enter
pop
cli
fistpl
inc
xor
xor
pop
add
adc
fwait
sub
jle
adc
add
jae
xchg
sub
loop
cmp
test
cmp
xchg
imul
or
imul
and
int3
ds
mov
mov
pop
adc
mov
and
lahf
int
xchg
fnstenv
sbb
inc
pop
jbe
or
outsl
or
sbb
xchg
mov
into
mov
sub
pop
rcrb
sub
aad
adc
xchg
xor
sbb
xor
cmpl
sbb
cmp
cmp
sti
aam
cmp
cmp
push
insb
imul
mov
fisttpll
xlat
inc
popa
cmp
jae
xor
lret
cmp
imul
mov
push
dec
rcrl
pop
fwait
pop
cmp
or
push
pop
inc
sub
clc
cmp
jl
or
lods
cmp
push
inc
popa
sub
push
sbb
adc
xchg
mull
addr16
incl
pop
mov
mov
out
sbb
xchg
cmp
popf
add
adc
pop
cmp
and
xchg
inc
jo
fistps
orl
pop
cmpxchg
lea
or
int
adc
adc
sahf
sub
adc
out
mov
pop
repnz
imul
sub
and
cmp
add
and
xlat
outsb
call
lret
aad
int
rcrb
jp
and
mov
mov
mov
inc
idiv
push
fldl
mov
jle
push
inc
arpl
pop
orl
jmp
xchg
jl
rcrb
das
sub
cmc
in
cmp
or
xchg
sbb
cld
ret
mov
xchg
push
jo
shl
adc
enter
inc
call
jo
rol
stos
adc
cmpsl
stc
or
cmpsb
fwait
push
jae
popa
mov
cltd
jns
jnp
cmpsl
ds
mov
lahf
and
sbb
dec
adc
dec
xchg
loopne
divb
inc
js
adc
adc
fdivs
and
dec
jnp
add
arpl
push
mov
aaa
xor
jo
roll
inc
pop
fdivrs
add
add
add
orb
insl
scas
bound
decl
push
pop
rclb
mov
push
insb
mov
sbb
pop
shlb
add
aaa
xchg
aam
mov
insl
movsb
pop
shlb
inc
add
inc
jo
adc
pop
and
jnp
loope
pop
sahf
pop
xor
mov
pop
pop
add
xchg
aaa
clc
nop
pop
rorb
push
xchg
fstps
ss
sub
lock
mov
push
add
add
xchg
push
inc
or
jb
arpl
rolb
fidivl
xchg
or
in
xchg
shl
add
mov
mov
inc
div
pop
loopne
popa
xchg
push
sbb
int3
jmp
shrb
and
sbb
clc
xor
in
adc
lds
movsl
fstpt
push
xchg
xor
leave
xor
rcl
jecxz
ljmp
and
ficompl
movsb
mov
jp
jg
xchg
dec
adc
add
outsb
adc
insl
sbb
mov
dec
pop
dec
fistl
xlat
mov
jne
dec
jne
and
jbe
les
fs
pop
aad
ret
call
pop
clc
xchg
fwait
push
jb
movswl
je
lcall
js
push
inc
xchg
pop
or
ja
push
mov
pushl
dec
jne
jp
enter
je
sub
push
fistpl
mov
mov
int3
add
pop
mov
mov
or
pusha
in
sarl
sub
ret
push
dec
imul
xchg
pop
sbbl
cmp
ja
mov
pop
adc
push
jle
sbb
fsts
add
and
cmp
lret
ljmp
jne
pop
add
and
jl
xchg
jp
test
sbb
cmp
mov
cmpsl
push
cmp
les
or
das
mov
push
or
orl
fistpl
mov
repz
outsl
insb
mov
mov
int3
jne
add
or
jae
adc
dec
add
cld
cmp
xchg
add
jmp
sbb
fnstsw
mov
mov
test
push
sbb
mov
xor
ss
lods
insl
imul
les
sbb
mov
mov
mov
inc
xor
movsl
lcall
int3
cmp
or
aas
mov
shll
je
and
jne
mov
pusha
movsl
add
inc
push
insb
pop
sub
loop
les
push
pop
gs
push
imul
mov
rcll
pop
fs
addb
cmpb
std
xchg
test
mov
or
mov
adc
shlb
sub
movsl
pop
push
or
ret
push
ret
xchg
movsl
mov
lock
xor
inc
movsl
pusha
jmp
sub
cmp
sbb
nop
pop
test
pop
std
xor
sbb
popf
push
loopne
nop
lea
add
dec
cwtl
iret
and
cli
scas
adc
js
sbb
add
and
in
sub
icebp
je
popf
popa
xchg
int
xchg
jo
imul
adc
mov
xchg
in
add
lock
hlt
dec
mov
push
pop
mov
dec
sbb
jb
pop
xchg
cmp
in
pop
lahf
dec
sub
lret
xchg
test
sub
sub
mov
das
dec
nop
imul
add
jo
data16
or
add
loopne
adc
push
sub
mov
sti
nop
add
sub
stc
shrl
adc
sbb
sbb
xchg
or
jne
mov
pusha
adc
inc
andb
inc
pop
loope
enter
mov
xorl
mov
pop
xchg
jmp
nop/reserved
xor
imul
xor
push
or
and
jecxz
mov
and
and
aam
aaa
adc
ret
push
or
push
push
cmpl
xchg
cmc
sub
leave
jnp
mov
mov
fists
pop
ss
pop
sbb
popa
aas
xchg
pop
push
mov
mov
inc
pushf
sub
jne
loopne
xor
test
jbe
sbb
cli
add
adc
daa
xchg
flds
loopne
pusha
sbb
push
jne
sbb
cmp
fimuls
xor
adc
mov
sub
xor
mov
xor
dec
and
sbb
cmp
jmp
adc
pusha
rcr
sbb
sbb
fsubs
or
fsub
dec
nop
push
dec
add
adc
cmp
ret
xchg
shlb
int
das
sbb
xor
xor
int3
and
aaa
xchg
fldenv
sub
mov
fadds
mov
mov
cmp
nopl
daa
fsubr
push
inc
bndstx
ret
sub
mov
scas
clc
add
cld
push
fsubrp
and
xchg
enter
loope
out
cmp
imul
stc
clc
adc
adc
and
stc
sub
jbe
add
ja
cld
cmpsb
ret
cmp
push
scas
mov
leave
adc
nop
xchg
cmpsb
nop
xchg
dec
add
jae
imul
add
add
jb
lock
and
and
push
xchg
imul
cs
lahf
adc
sbb
sbb
fldt
xchg
cmpsl
mov
or
sub
mov
or
lods
int
incl
mov
dec
imul
push
pushf
stos
incb
jecxz
or
mov
dec
sbb
cltd
sbb
fsubl
mov
fldcw
sbb
pushf
pushf
pushf
pushf
and
adc
pop
mov
add
push
pop
icebp
xor
sub
or
and
ss
mov
lahf
movsbl
add
dec
xor
mov
movsb
shl
adc
sub
bound
jecxz
adc
in
insl
push
sub
push
cltd
fwait
rolb
ret
mov
rcl
adc
push
cli
push
aas
mov
inc
cld
mov
mov
jne
outsl
or
and
das
testb
mov
pop
les
ss
stc
xchg
pushf
dec
arpl
fsubrl
call
mov
outsl
cmp
mov
adc
dec
push
or
jl
and
cmp
xor
repnz
adc
pop
and
daa
in
pop
test
call
orl
pop
aaa
inc
mov
xchg
jl
call
dec
aaa
aad
jne
hlt
lret
inc
inc
mov
jecxz
dec
push
stc
ljmp
ljmp
hlt
inc
xor
pop
popa
dec
or
ficoml
sbb
or
fsubrl
sbb
sti
jns
cmpb
mov
div
xor
push
or
mov
add
dec
popf
mov
jo
jae
jae
sahf
adc
xchg
std
fistpl
mov
pop
cmpb
adc
rorb
pop
imul
fwait
call
sbb
jmp
mov
into
in
pushf
jmp
mov
add
lock
mov
or
xor
sbb
ret
push
btc
mov
ret
out
js
mov
adc
jno
repnz
mov
cmp
mov
out
notl
call
mov
pusha
cmpsl
popa
rclb
or
cmpsl
cmp
mov
push
xchg
sbb
rorb
sbb
push
jbe
xor
ret
faddl
movsl
addr16
shlb
aam
push
ret
hlt
js
sbb
ret
fimull
out
in
xchg
dec
sti
add
cmc
xor
mov
andl
addr16
addr16
popa
jge
dec
xor
enter
inc
or
mov
cltd
mov
jl
dec
xchg
add
xchg
out
leave
jge
adc
add
insl
clc
dec
addl
sub
mov
dec
pop
pusha
jecxz
adc
lods
mov
fsubrl
je
mov
lcall
inc
daa
and
fcmovnu
cmp
inc
pop
pop
fs
idivl
push
ret
sbb
jns
call
ficomps
enter
or
xor
dec
fwait
mov
das
mov
cmpsl
in
ret
mov
add
test
loopne
cmp
cltd
mov
into
pop
lret
push
ret
cmp
cmc
or
mov
xchg
fdivl
test
pusha
in
sti
sub
sbbb
cmp
or
jo
fdivl
mov
cmc
movsb
xchg
dec
push
inc
push
sbb
jnp
inc
pop
fcmovne
sbb
push
test
shr
mov
outsb
leave
aam
cmp
push
jo
das
sbb
add
add
daa
loop
aaa
pop
sbb
out
sarb
fiadds
fiaddl
push
push
aas
jns
jmp
jmp
pop
lret
out
aam
adc
test
dec
mov
inc
dec
push
aas
ret
dec
jmp
and
jge
xchg
push
clc
mov
pop
xor
dec
push
lock
pop
xor
add
les
pop
and
sub
aam
shlb
fadd
push
fidivrl
cwtl
shl
pop
dec
popa
sub
in
and
adc
push
imul
mov
imul
out
pop
mov
aaa
jecxz
xor
lods
cld
sub
push
push
sub
cmp
xor
pop
mov
pop
mov
fcoml
hlt
mov
daa
fsubrs
push
imul
xor
mov
pop
lds
movsb
aam
sbb
push
das
scas
and
dec
orl
loopne
cmp
mov
jmp
imul
and
in
test
lret
call
xor
pop
sub
inc
jmp
ficoml
sub
push
dec
pop
lds
add
sbb
push
xchg
outsb
inc
outsl
adc
lods
inc
fsubrs
jne
mov
iret
imul
add
popf
or
xor
loopne
scas
repnz
dec
je
cwtl
int3
add
sbb
inc
lock
shrl
shl
inc
cld
xor
jp
mov
ret
inc
bound
inc
lods
jo
mov
or
rcll
cmp
xorb
inc
mov
mov
push
add
pop
rclb
inc
or
pop
cmp
mov
clc
dec
jecxz
sbb
adc
cs
out
aam
shl
bts
jmp
lock
add
mov
inc
mov
push
xor
xor
js
aam
adc
test
xchg
mov
or
rcrb
daa
fwait
adc
movsb
rcrb
inc
nop
push
leave
mov
hlt
std
dec
mov
incl
jne
fadds
mov
inc
dec
mov
insb
jne
push
adc
mov
cld
sbb
push
and
les
inc
push
hlt
push
aaa
adc
les
jae
fildll
inc
pop
cmc
add
adc
push
adc
jae
jecxz
push
cmpsl
mov
dec
arpl
xlat
sti
ja
call
push
mov
and
add
mov
leave
dec
cmpl
add
xchg
cmp
or
mov
out
jns
inc
lahf
cmc
ljmp
ja
add
add
mov
testb
push
add
lods
cltd
testb
adc
nop
test
ret
add
add
pop
sub
mov
mov
pop
inc
shl
mov
scas
rorl
cli
hlt
scas
cmp
mov
adc
ret
insb
pusha
repz
cwtl
subb
push
pop
mov
adc
clc
jno
push
insb
sbb
imul
aaa
dec
jns
nop
push
pushf
scas
shrb
cmpsb
shl
ds
hlt
push
add
or
sbb
and
inc
pusha
shll
insb
jne
xchg
pop
pop
mov
sub
add
shlb
cmp
shlb
addr16
jmp
adc
mov
pop
push
adc
test
inc
mov
xchg
or
mov
sbb
or
push
pop
add
xchg
aaa
xchg
inc
rcrl
das
clc
rol
adc
xchg
loopne
mov
hlt
jge
xchg
mov
jae
out
and
and
nop
aaa
push
mov
in
orl
sub
jmp
scas
xor
ja
or
in
orl
add
pop
fdivs
cli
xor
out
cmp
aam
jae
mov
inc
sbb
or
jns
cmpsb
pop
inc
inc
push
push
sti
inc
imul
push
push
cmp
sbb
daa
jl
nop
insb
push
dec
xchg
jle
cld
push
orb
xor
outsb
dec
test
xchg
lret
rcll
rolb
into
add
movsl
mov
stc
inc
push
mov
mov
inc
inc
call
call
in
mov
sub
flds
or
ss
cmpsl
sbb
rclb
xchg
inc
sbb
or
push
add
cmp
dec
adc
mov
pusha
arpl
leave
push
test
mov
icebp
lods
jle
ja
mov
push
cmp
mov
push
sub
mov
aaa
pop
jg
js
js
gs
add
mov
mov
sub
lret
fadds
pop
les
lock
aam
cli
inc
dec
inc
popa
adc
movsl
shll
jge
movb
mov
mov
pusha
pop
or
hlt
rcrl
mov
push
dec
enter
xlat
mov
ret
clc
cmp
out
dec
lock
shrb
cmp
movsl
adc
sub
adc
jg
xchg
bound
xchg
add
add
pop
cmp
orb
lret
enter
xor
dec
call
lock
popf
ret
inc
or
sbb
inc
pop
sub
aas
sbb
xor
adc
cs
add
and
inc
push
cmp
push
sahf
paddd
mov
push
aad
or
pop
cs
mov
pushf
push
cs
sbb
imul
hlt
jecxz
or
ret
aaa
cmp
das
jecxz
cs
fcom
movsbl
mov
xor
mov
push
cs
in
enter
xor
jb
daa
int3
mov
and
inc
clc
xor
xchg
or
loopne
insl
mov
push
or
or
push
daa
ljmp
jl
inc
push
mov
sti
cmp
lea
cmp
sub
cmp
mov
stos
add
movb
sub
add
xchg
dec
out
shlb
sub
int3
cmpb
sbb
sub
push
or
xchg
add
add
dec
push
add
mov
cmpsb
cmpsb
push
outsb
mov
ror
xorl
testb
or
mov
pop
sbbb
or
sbb
cmp
mov
or
cmpl
fs
adc
sbb
add
xor
add
mov
sarb
mov
inc
je
fadds
insb
addb
sbb
and
jb
inc
pop
lea
add
ss
mov
dec
popa
mov
jmp
and
loope
test
inc
adc
lock
cmp
push
mov
pop
adc
xor
lods
cwtl
push
fwait
mov
out
pusha
jge
fisubl
add
add
sub
inc
pop
push
addr16
mov
dec
movsl
sbb
mov
cmpsb
sub
pop
xor
push
pop
stos
sub
test
add
inc
fnstenv
daa
add
add
add
pop
jge
mov
pusha
jmp
xor
add
push
push
test
outsl
test
push
cmp
add
insb
sbb
jno
or
hlt
pop
nop
inc
xchg
inc
js
dec
sbb
or
mov
adc
popa
xor
sbbb
cmp
into
pusha
adc
add
js
shlb
in
cld
imul
pop
xor
leave
aaa
loop
test
push
and
rcr
insb
push
inc
call
add
icebp
les
add
das
pop
movsl
add
iret
jmp
cmpsl
arpl
fimuls
jg
or
mov
xor
mov
adc
adc
outsb
daa
push
add
fwait
or
mov
fst
mov
xchg
adc
rcrb
js
or
fdivrl
pop
and
jnp
cmp
mov
inc
push
leave
mov
jne
adc
fimuls
adc
mov
shll
pusha
add
ret
out
dec
sarb
mov
jnp
iret
xchg
shll
sbb
or
xchg
push
sbb
stos
inc
fisttps
adc
push
jns
adc
fcomp
mov
test
push
pop
sbb
push
insb
add
aas
push
cmp
shl
fcomi
mov
xor
fidivrs
mov
mov
inc
test
fsub
xchg
jmp
movsb
pop
dec
imul
xchg
dec
mov
arpl
jp
and
push
xor
mov
xchg
les
shrb
and
mov
mov
pop
shll
cwtl
lods
sub
pop
adc
test
and
mov
scas
sbb
push
orw
ret
push
inc
push
data16
mov
aam
add
adc
sbb
inc
xor
inc
fs
jnp
stos
add
retw
ficoml
gs
hlt
adc
ja
pusha
sub
aad
je
mov
mov
xlat
adc
pop
mov
sbb
cmp
jl
add
mov
jp
xor
aam
and
or
push
loope
cwtl
lods
outsb
add
or
fsts
setne
mov
add
mov
or
inc
add
inc
sbb
mov
adc
push
xor
add
mov
fdivr
push
outsl
jo
data16
into
or
ss
loop
rolb
push
inc
notl
dec
ja
in
sbb
decb
jecxz
xor
xchg
mov
pop
jecxz
ror
or
ret
inc
mov
dec
jne
cmp
jne
es
je
mov
hlt
dec
xchg
and
addr16
jg
dec
mov
adc
push
push
cli
sbb
push
scas
or
pop
xor
ret
adc
out
cmovp
jg
or
call
in
sbb
dec
add
xor
insb
push
inc
jg
arpl
inc
dec
jne
in
and
pop
ret
mov
add
fsubrs
dec
push
xor
mov
xor
xchg
les
mov
xchg
stos
sbb
jmp
sbb
sbb
and
adc
fists
ss
add
daa
adc
sbb
adc
xor
cmpsb
mov
xor
addb
adc
adc
or
xlat
push
aas
lds
xor
push
and
cmp
jg
cmp
cmp
xlat
xor
fs
jmp
fidivl
popa
outsb
mov
jmp
or
inc
aaa
jno
and
outsb
sbb
shrb
and
inc
lock
xor
test
mov
test
xchg
ja
repnz
scas
add
mov
add
cmp
pop
adcl
mov
xor
push
or
pop
jb
dec
cmp
and
and
dec
les
outsb
daa
push
adc
test
fs
movsl
addr16
jge
icebp
ss
mov
lret
cmp
and
or
cmp
and
mov
imull
sti
add
or
cmp
aas
or
shll
pop
cmpsl
adc
iret
push
push
inc
push
add
test
nop
or
fsubr
test
inc
jl
push
jg
outsw
sub
je
int
mov
or
fs
add
sbb
mov
add
sbb
xor
or
push
sbb
pop
clc
jne
mov
mov
sbb
or
call
sarb
call
ja
push
out
inc
push
test
das
mov
push
inc
ja
ja
inc
js
mov
mov
cmp
bound
addr16
pop
push
sub
movlps
arpl
repz
mov
xchg
pop
lahf
push
fwait
xchg
ret
aaa
dec
cmp
inc
inc
je
mov
aaa
loope
push
out
loope
add
adc
add
repz
inc
mov
mov
cmpsl
xor
rorl
cmp
into
cmp
mov
add
gs
xlat
es
mov
adc
and
cwtl
popa
scas
fldl
arpl
cmpsl
wrmsr
fcmovnu
mov
pop
stos
movsb
ret
adc
and
push
mov
lret
movl
int3
fwait
push
adc
js
popa
pop
iret
cmpsb
and
cmp
push
out
mov
xlat
jmp
mov
jle
add
adc
xor
fisttpl
test
adc
adc
xor
pop
insl
jo
add
cmp
fwait
push
adc
xlat
xor
push
sarb
fabs
push
jb
sti
add
add
push
aam
inc
lret
ss
inc
or
adc
and
popa
inc
push
fcoms
cmp
test
pop
sti
cltd
and
adc
pop
xchg
loopne
pop
mov
mov
jne
cmp
add
lret
mov
ficompl
ds
xchg
iret
stc
dec
adcl
and
xor
cmp
outsl
or
push
xchg
ljmp
es
or
popa
ja
out
add
testb
dec
adc
daa
fimull
pop
mov
loopne
jne
jle
jge
hlt
jle
mov
std
inc
enter
pop
dec
or
fwait
and
sbb
adc
xchg
lds
icebp
add
xchg
sub
fcomp
lea
jb
jecxz
incb
and
fmul
sahf
and
loopne
decb
and
add
cmp
rcl
mov
sub
mov
icebp
nop
and
sbb
push
push
sti
inc
xchg
inc
outsb
popf
std
ja
jp
or
sbb
adc
pop
dec
leave
incb
sbb
push
push
repz
in
call
sub
in
mov
sbb
add
inc
lea
rcll
aas
push
cmp
adc
fimull
inc
pop
loope
cmp
insl
jge
negb
dec
cmpsl
lods
jecxz
movl
sahf
inc
sub
sub
jp
inc
add
ret
arpl
enter
mov
sbb
and
nop
push
sub
add
add
fwait
sbb
cmpsl
stos
out
push
mov
aaa
pop
jo
or
mov
roll
loop
scas
or
aad
cmpsl
unpcklps
sbb
lahf
pop
inc
add
adc
xchg
mov
pop
loope
adc
ret
mov
test
push
shlb
mov
enter
loope
mov
jns
add
push
mov
and
mov
fildll
clc
pop
or
add
leave
and
add
imul
add
xchg
cmp
std
jne
fisttpl
mov
pop
popa
jns
ss
or
pop
cmpl
jge
adc
or
mov
shrb
aaa
shll
xor
inc
test
dec
es
test
pop
faddl
xchg
lcallw
pop
sbb
pop
aad
insl
fwait
pop
inc
pop
inc
insb
rcr
push
xor
rcl
jp
pop
add
or
fists
orb
inc
push
call
xchg
out
cmp
lock
push
cld
push
test
rorl
pop
dec
xchg
add
adc
outsb
cld
mov
push
pop
xor
sti
movsb
xor
inc
sbb
cmp
dec
adc
scas
pop
test
adc
push
dec
in
popa
mov
je
bound
inc
scas
orb
lret
pop
xor
mov
dec
and
dec
outsl
push
dec
fiadds
pop
pop
nop
sbb
mov
adc
add
xorl
or
sbb
sbb
cmp
xchg
cwtl
testb
clc
xchg
int
lds
in
mov
addl
mov
push
mov
push
push
pushf
es
repz
pop
loopne
sbb
ret
orb
std
jbe
fsubr
cmpsl
xorl
sbb
sub
mov
lock
adc
fnsave
andl
or
jl
cmp
imul
or
movb
call
pop
push
pop
xor
js
mov
comiss
and
and
inc
xorb
lcall
cmpsl
loopne
sahf
and
mov
insl
pusha
mov
aaa
invd
mov
ljmp
jbe
rorl
jae
lcall
fisttpll
lret
or
sbb
push
xchg
pop
hlt
inc
popa
jb
incb
adc
sbb
jb
arpl
xchg
or
loop
leave
and
mov
rclb
sbb
sbb
cmp
push
sbb
or
mov
or
incl
cmp
jle
push
pop
loope
push
incl
jle
mov
push
xchg
mov
int3
aas
xchg
add
jne
insb
xchg
loope
sbb
mov
sahf
fnstsw
bndstx
shr
sub
xor
sbb
jbe
fsubrp
or
lock
adc
pop
or
adc
push
movsl
add
repnz
jecxz
test
mov
adc
mov
pushl
loope
push
dec
das
ss
dec
or
and
lock
pop
pop
inc
xchg
sarb
or
xor
les
add
lcall
test
in
pop
inc
dec
sbb
dec
xor
jge
enterw
aam
fs
xchg
mov
sub
push
push
shrl
dec
inc
add
or
or
sbb
adc
inc
sbb
mov
inc
shl
js
inc
and
ds
jb
sbb
adc
int
fiadds
or
push
es
xchg
pop
inc
dec
push
push
dec
inc
pop
cmpsl
in
leave
and
dec
int3
mov
int3
nop
adc
sub
push
lods
iret
cmpsl
and
cmp
out
and
mov
dec
inc
xor
rcl
sbb
jmp
push
inc
push
aam
xchg
or
cs
aam
pop
aam
ret
sub
push
push
arpl
stos
aam
gs
test
pusha
imul
je
inc
in
xor
push
gs
pop
or
add
into
mov
add
or
mov
mov
sbb
pop
push
and
shlb
ss
sub
imul
imull
mov
add
adc
or
shlb
or
adc
xor
adc
insb
popa
jns
jae
pusha
sbb
inc
flds
movl
mov
cld
adc
sbb
sbb
mov
jb
nop
rcrb
fs
sbb
push
aaa
fs
adc
and
fadds
push
stos
adc
ret
nop
bound
xor
or
jp
jl
enter
jle
enter
pusha
popa
bound
orl
fs
addr16
xor
and
insb
xor
and
and
and
push
orl
push
push
pop
pop
or
enter
pop
xor
and
and
and
inc
orl
inc
inc
dec
dec
or
enter
dec
xor
and
and
and
xor
ss
cmp
or
enter
cmp
enter
ds
enter
and
and
orl
and
orl
es
sub
xor
pop
mov
in
enter
and
in
add
cs
clc
imul
outsl
push
push
add
add
push
and
adc
mov
repz
push
rorb
test
add
sbb
popf
xchg
gs
sbb
arpl
mov
mov
data16
inc
pusha
add
adc
inc
bound
data16
add
les
clc
or
adc
enter
and
add
outsl
jno
shlb
add
jg
and
push
je
insb
sbb
and
data16
shll
leave
mov
dec
je
arpl
adc
fiaddl
adc
inc
in
xor
jb
movsb
cmc
inc
sahf
je
or
sti
mov
in
nop
das
mov
push
outsb
int
js
pop
push
mov
jo
outsl
sbb
insl
mov
push
or
adc
sbb
inc
jge
or
xchg
or
sub
test
mov
and
bswap
lock
inc
jge
dec
push
xor
push
push
je
outsl
nop
std
iret
insl
dec
outsl
jo
gs
inc
jns
fxch
mov
xchg
jb
gs
sbb
push
lods
and
add
sbb
xor
xor
fldcw
sub
push
aas
mov
loopne
lret
ds
ja
adcl
jb
fisttpl
dec
jb,pt
and
sbb
jge
jp
aaa
or
xchg
ja
sbb
je
adc
divb
fs
pop
inc
outsb
jb
jae
mov
pop
outsl
and
lahf
mov
das
and
pop
addb
sbb
bound
xchg
mov
fiadds
pushl
lea
into
ja
das
and
pop
sub
sub
xor
sarl
js
enter
and
and
sub
inc
pop
and
mov
cmpsl
inc
xchg
insl
pop
dec
sbb
xchg
dec
and
dec
adc
mov
and
sub
inc
mov
inc
pop
fbstp
and
lret
add
mov
dec
cwtl
pop
mov
pop
sbb
inc
xor
add
mov
aas
loopne
mov
aam
ds
pop
add
jmp
cmp
aas
in
push
hlt
aas
lret
dec
loop
push
push
dec
gs
rcrl
sbb
inc
add
cwtl
cli
or
cmp
sbb
add
fninit
jl
jo
int3
fadds
or
les
pop
sbb
push
pop
jb
inc
test
rolb
xchg
xchg
fidivrs
les
out
fcoml
clc
inc
or
sbbl
in
mov
cmp
add
xor
push
aam
add
rorb
and
ds
inc
add
pop
mov
push
inc
je
data16
in
sbb
jmp
daa
rcrb
pop
pop
jb
inc
jo
cwtl
push
cmp
nop
sahf
pop
sbb
add
push
popa
pop
mov
inc
ret
mov
adc
movsb
adc
nop
out
inc
inc
iret
xchg
inc
push
sub
shlb
daa
add
adc
outsl
outsl
dec
rolb
dec
loopne
push
inc
popa
sbb
mov
sbb
mov
dec
mov
ret
add
push
aas
test
add
or
jge
je
test
mov
cmp
clc
or
push
adc
fdivs
push
xchg
ret
sbb
cmp
adc
negb
stos
sub
jne
dec
orl
jp
aam
sbb
or
test
pusha
mov
mov
pusha
scas
mov
and
in
mov
push
js
mov
stc
add
bound
mov
sbb
push
rclb
fs
sbb
or
insl
pushf
pavgb
add
sbb
mov
add
and
test
add
adc
add
test
mov
or
cmp
jnp
jg
adc
sub
test
fadds
mov
mov
mov
add
andb
and
int
imul
push
jo
mov
gs
xchg
add
in
cmpsl
pop
test
insb
inc
jno
pop
pop
addr16
sbb
mov
adc
les
call
sbb
out
pop
fisubrs
movsb
and
das
sub
dec
les
lcall
cmp
pop
pop
cmp
clc
lods
inc
enter
push
imul
out
std
movb
xchg
insb
add
test
aaa
sub
adc
mov
cmp
or
iret
or
or
push
add
popa
addr16
dec
test
in
sub
xchg
push
mov
dec
outsl
jl
mov
lods
int
nop
jle
lahf
loopne
repnz
rcr
shlb
movaps
mov
imul
cld
cmp
pop
jne
mov
sbb
fwait
ss
push
lods
pop
ja
mov
test
mov
jb
mov
xchg
mov
fmuls
jg
mov
imul
pop
and
cmp
cwtl
add
cs
je
pop
test
and
adc
insl
mov
aas
cs
das
sub
xchg
adc
sbb
cmp
lock
sar
jg
jle
cmpb
xchg
xchg
xor
call
dec
lcall
insb
aas
mov
fists
dec
shlb
fldt
cwtl
enter
cwtl
push
clc
push
cmpb
pop
popw
sbb
popa
xor
mov
dec
cmpb
cwtl
sbb
jle
pop
or
outsl
outsb
pop
das
lock
pop
xor
push
xor
in
cmp
hlt
sub
test
cmp
add
add
or
test
xchg
fisubrl
ja
test
pop
sbb
cmp
xchg
pop
in
mull
dec
and
aas
xchg
clc
add
xor
pop
decl
mov
ret
rol
xor
clc
add
jne
mov
mov
mov
test
mov
xchg
push
push
xor
mov
sub
pop
daa
inc
lods
xchg
sar
outsl
arpl
mov
into
push
xor
mov
push
repnz
adc
mov
int
push
inc
xor
call
push
orl
popa
cmp
inc
cmp
xor
lret
sbb
test
outsb
push
and
or
xchg
adc
or
int
js
push
test
decl
or
adcb
cltd
movsb
add
movsb
stos
dec
shlb
and
andb
jnp
lds
mov
decl
push
dec
push
push
pop
push
out
xchg
mov
and
cmp
inc
andl
sub
imul
mov
ss
out
xchg
sbb
fsubrp
arpl
sub
das
popa
xor
fsubr
leave
xor
adc
aaa
js
ret
clc
test
je
fdivr
leave
and
pop
and
addb
push
mov
jmp
sbb
sbb
inc
push
jle
pop
cmp
dec
aad
xchg
and
xor
add
loope
stos
test
add
ret
jge
pop
push
and
testb
xor
mov
sub
mov
push
add
adc
xchg
insb
outsb
xor
push
hlt
adc
add
std
or
in
jmp
dec
or
mov
xlat
mov
xor
adc
add
inc
adc
stc
cld
ds
cmpsb
adc
pop
or
dec
pop
in
or
enter
call
imull
insb
push
add
dec
sbbb
jg
outsl
mov
or
sub
shrl
gs
pop
dec
insb
add
pop
push
xchg
jbe
add
mov
push
adc
inc
push
gs
insb
dec
in
add
aaa
addr16
imul
addr16
je
xchg
addr16
mov
pop
xchg
outsl
ja
xchg
popa
pop
lahf
jne
or
arpl
imul
jno
popa
mov
push
pop
or
mov
scas
daa
jns
add
es
mov
ja
push
or
xlat
inc
dec
addr16
push
test
mov
das
lsl
sub
les
sar
pop
jo
push
pop
imul
sbb
add
inc
push
addr16
and
sub
inc
je
inc
jne
mov
push
xchg
dec
std
insb
dec
or
sbb
das
adc
fidivrl
js
cs
popa
jg
sub
popa
sbb
pushf
dec
cmp
pop
xchg
imul
lahf
sbb
mov
inc
pop
or
push
mov
fsts
imul
fisubs
mulps
inc
sub
leave
jg
mov
repz
adc
ss
add
fs
out
dec
add
inc
imul
jmp
push
outsb
jne
or
push
mov
sub
das
lahf
dec
jmp
aas
push
arpl
lods
clc
jne
add
imul
sbb
jno
das
cmp
nop
xchg
add
es
xchg
das
or
inc
sub
and
add
ret
push
or
popa
leave
ror
lahf
jo
in
loop
pop
xor
fisttps
imul
or
das
add
pop
pop
imulw
jecxz
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
fbstp
dec
xor
inc
inc
inc
repz
notl
dec
inc
dec
dec
arpl
lahf
mov
inc
inc
push
adc
inc
push
dec
dec
push
mov
and
inc
push
xchg
inc
aas
insl
in
cmp
popa
out
inc
inc
xor
xor
xorl
sti
inc
inc
dec
inc
inc
dec
inc
xor
inc
repnz
inc
inc
dec
notb
dec
sub
mov
lea
mov
sbb
inc
inc
inc
add
mov
mov
mov
mov
pop
aad
in
adc
push
push
push
dec
push
inc
scas
and
inc
dec
push
push
xchg
mov
xor
mov
pushf
mov
mov
test
loope
mov
push
rclb
ds
jle
in
add
pop
stos
add
mov
dec
or
sbbb
pushf
xor
adc
jne
add
test
ret
pop
mov
lea
add
mov
and
and
mov
sbb
add
pop
push
movsb
jo
xchg
inc
out
xor
outsb
outsb
or
jmp
add
aam
in
xchg
pop
shlb
mov
xor
andb
ret
clc
sbb
and
adc
adc
ja
cmp
and
mov
and
ret
push
loopne
add
xchg
jmp
lcall
cmpsl
and
push
arpl
cltd
pop
jp
sbb
test
test
and
lea
mov
sahf
loopne
loop
test
cmp
ljmp
mov
mov
test
inc
das
cmp
inc
jo
cli
das
cltd
add
pop
js
lds
and
lret
jae
imul
shr
pop
push
cmp
cmp
push
mov
sub
cltd
pop
mov
mov
stc
lret
aas
test
pop
lahf
mov
std
fildl
dec
pusha
push
dec
jnp
dec
dec
out
in
jne
inc
sbb
repz
testb
sbb
rcl
shr
frstor
stos
xor
push
inc
and
and
or
or
adc
ja
clc
or
push
loope
sbb
mov
mov
pop
sub
cmp
mov
and
mov
sbb
xor
sub
out
xchg
inc
fiaddl
pop
fcomp
add
and
sub
mov
sub
dec
or
lea
push
orl
sub
xor
inc
pop
out
add
es
dec
mov
xor
sub
xlat
stos
rolb
mov
inc
push
sub
adcb
adc
cmp
sub
mov
nop
push
inc
mov
cmp
push
xor
and
imul
lea
inc
sub
sub
inc
pop
pop
jecxz
fs
add
dec
xor
clc
dec
pop
mov
fdivrs
jge
lcall
ficoml
jp
push
clc
cmpl
fbld
push
out
cmp
fisttpll
jl
test
xor
inc
sbb
shlb
mov
jbe
sbb
nop
sbb
sarb
push
dec
xchg
inc
mov
inc
sbb
lods
fs
test
inc
xor
or
jmp
js
and
nop
push
inc
outsl
inc
push
add
xor
mov
and
xchg
add
inc
orl
roll
dec
xchg
inc
enter
in
inc
in
add
cwtl
push
pop
lock
enter
pushf
adc
sub
xchg
push
jne
or
fcomp
mov
rcl
jne
jae
movzwl
mov
in
test
dec
pop
or
cs
lahf
mov
xor
int3
inc
lods
lret
js
cmp
cs
cmp
mov
sbb
adc
lock
or
sbb
shll
adc
pop
or
add
inc
in
mov
cmp
js
inc
repnz
sub
inc
nop
sbb
and
adc
nop
outsl
sub
ret
xchg
js
pop
jb
or
inc
mov
and
test
mov
mull
cld
fimull
inc
fwait
int3
inc
pop
pop
mov
sahf
cmp
jne
adc
pop
xlat
or
adc
jns
push
xchg
inc
mov
inc
adc
loope
mov
insb
adc
insb
das
cmp
or
cmpl
sub
xchg
and
or
adc
lock
je
fldcw
mov
call
add
hlt
lock
pushf
xchg
test
inc
sbb
dec
mov
aas
aaa
push
mov
xor
cwtl
jo
cmp
xchg
bound
nop
out
daa
xchg
cld
adc
inc
cmp
add
inc
testl
mov
mov
adc
or
dec
lods
inc
sahf
dec
sbbl
pusha
adc
sbb
sub
jl
leave
adc
movl
push
inc
lds
test
lods
popf
test
inc
and
jp
je
or
sbb
test
xor
and
push
lea
mov
adc
cmp
pop
jge
mov
pop
decl
rorl
sbb
idivb
rcrb
push
and
push
or
push
add
or
pop
or
or
xor
or
push
sub
push
pop
adc
in
xor
pop
je
or
movb
adc
sub
imulb
jecxz
or
data16
test
pop
xorb
js
jb
or
loope
iret
shrl
mulb
outsl
sbb
push
sub
ficoms
sbb
iret
js
add
cmpsl
rorb
push
and
jecxz
mov
pop
push
add
cmp
pop
mov
popa
xchg
push
in
lods
test
into
push
jge
arpl
rep
or
arpl
and
incl
test
push
mov
push
pop
inc
lret
cld
pop
stc
adc
divl
dec
or
popl
sbb
popf
mov
jo
dec
jl
adc
andl
movsb
mov
push
sbb
sti
or
fsubrs
mov
push
xor
aaa
mov
cltd
sub
cmp
daa
pop
add
push
push
loopne
add
insl
pop
sub
pop
pop
aam
dec
push
jae
fadds
cmp
add
xor
dec
movsb
adc
xorl
adc
push
dec
int3
test
ss
or
lods
hlt
rol
sbb
fcoml
dec
adc
adc
dec
sbb
pop
pop
xor
sub
insl
roll
or
jge
cmp
into
inc
stos
mov
dec
roll
inc
jae
fists
dec
add
mov
and
mov
cmp
je
inc
sub
dec
jmpw
add
sbb
imul
mov
sbb
xchg
in
mov
dec
inc
popl
dec
test
sbb
adc
ja
add
arpl
and
orb
or
lods
inc
mov
ficoms
adcb
sti
lahf
cmpsl
or
shll
sbb
cli
dec
test
ret
je
pop
and
cmpl
push
test
call
push
add
jno
pop
add
or
jo
inc
dec
sub
mov
outsl
sub
call
pop
push
or
lret
xchg
push
cmp
push
adc
or
adc
add
dec
cmp
outsb
imul
jl
jnp
call
shll
push
dec
in
inc
lea
push
mov
dec
add
or
xor
movsb
in
push
test
ja
add
add
or
cltd
aas
cmpsl
and
and
and
add
xchg
loopne
dec
and
push
hlt
sbb
mov
das
sbb
arpl
xchg
xor
xorb
adc
mov
test
or
push
push
and
xor
mov
adc
insl
xor
adc
add
jge
sbb
lea
lods
imul
rorb
lods
and
sti
add
inc
add
xchg
cmp
int3
movsb
hlt
inc
repz
jge
popa
xchg
aaa
subl
aas
cmpb
inc
cmp
test
push
pop
test
add
adc
test
fildl
sti
cmc
fwait
sub
push
sbb
mov
dec
fisttpl
cltd
pop
mov
adc
pop
push
mov
or
sub
fsubrs
jno
out
lock
push
out
aam
jle
push
out
push
imul
inc
or
push
xorb
shll
ret
inc
pop
fdivrl
inc
notb
aad
ljmp
je
cwtl
js
rorb
mov
icebp
outsl
add
jl
loopne
dec
divl
shl
and
pop
shlb
add
and
fcoml
je
cmc
mov
add
mov
mov
jl
inc
dec
pop
sub
test
sub
adc
mov
rol
js
pop
out
test
dec
push
adc
mov
xor
pop
push
or
or
sub
cmp
insb
imul
mov
rcrl
mov
jp
adc
lock
inc
add
in
jge
cmp
pop
mov
pop
add
xchg
imul
fsubl
and
cmpsb
call
ljmp
lock
jmp
jns
jno
insl
sub
xor
add
xchg
lods
loope
fcomps
push
das
mov
adc
mov
js
cli
loopne
movb
mov
movsl
movb
add
dec
out
cmp
jo
adc
or
or
pop
call
xor
loopne
mov
mov
loop
popa
sbb
add
and
mov
push
subl
mov
mov
or
add
ds
xlat
add
dec
pop
faddp
inc
add
xor
pop
dec
add
aas
dec
ret
mov
out
mull
adc
add
pop
pop
inc
clc
xchg
dec
jne
sti
fiaddl
je
cmp
jge
adc
adc
adc
lock
push
sbb
push
inc
mov
inc
and
inc
test
pop
in
or
cld
ljmp
js
and
push
std
out
and
enter
mov
dec
jns
jmp
std
pop
jmp
jecxz
adc
jecxz
mov
mov
rorl
jmp
ja
movw
ss
adc
movsl
add
in
jno
push
cltd
push
ret
adc
mov
int3
add
cmp
jp
mov
jle
cmpl
popa
xchg
test
aas
add
xchg
mov
lea
or
pop
pop
push
cmp
mov
daa
jmp
addr16
pop
mov
push
mov
sub
icebp
pop
or
pop
les
and
or
fcom
xchg
xchg
mov
repnz
adc
add
adc
pusha
cltd
jl
aam
xor
cs
xchg
rol
leave
and
leave
add
or
pop
push
inc
xchg
inc
push
push
popaw
fisubrl
sbb
inc
push
orb
dec
pop
xchg
cmp
dec
cmovb
pop
push
push
dec
clc
data16
orb
aaa
daa
and
fmuls
adc
aas
push
inc
shl
xor
adc
dec
mov
pop
pop
sub
lret
pushf
mov
pop
movups
xchg
mov
add
mov
push
inc
and
push
popa
lods
jo
add
adcl
das
popa
je
push
push
in
sub
loopne
mov
and
sub
inc
push
outsb
push
pop
sub
inc
ret
test
in
mov
les
shrl
adcb
ja
sub
add
sub
add
js
stos
and
enter
out
push
and
lock
rcl
dec
mov
lret
ds
in
mov
push
push
add
and
xchg
or
jecxz
add
hlt
push
pop
int
cmp
add
fldl
sub
mov
out
out
icebp
add
fdivl
mov
pop
pushf
pop
unpckhps
shrl
inc
nop
cltd
adcb
push
lock
int3
and
cmpsb
pusha
shrl
shrb
add
add
cmp
jae
cmp
adc
imul
test
rcrb
ds
or
push
scas
add
and
mov
or
mov
loopne
jnp
mov
inc
shl
cmp
or
add
sarl
inc
fimuls
mov
leave
jle
cmp
jl
aaa
enter
dec
xchg
cmp
jg
test
popf
adc
cmp
jle
inc
cmp
ja,pn
adcb
push
sbb
leave
cmp
jne
inc
pop
xchg
and
mov
xchg
jle
add
loope
sbb
mov
pop
sbb
repnz
inc
bound
mov
mov
fcomps
mov
andb
sbb
scas
iret
xor
dec
sbb
or
xor
sub
lods
sub
pop
test
mov
inc
popa
xchg
xchg
inc
inc
repnz
adc
hlt
test
push
cwtl
mov
sarb
movzwl
imul
sub
loopne
es
cmp
adc
lea
insb
dec
pop
or
das
orb
dec
jne
cmp
aam
adcb
inc
xor
push
mov
pop
or
sbb
bound
cmpsb
in
add
jo
lock
adc
shlb
adc
rcrl
sub
movb
dec
mov
lea
mov
imul
jb
enter
aas
cmp
lock
xchg
pop
cwtl
leave
inc
mov
cld
push
ret
mov
push
mov
les
ret
push
call
es
pop
pop
sarb
cmp
mov
push
mov
mov
mov
push
pop
mov
sbb
or
sub
push
aad
cmp
jnp
fcoml
or
shrb
aas
inc
fimuls
jp
or
fists
push
in
lcall
inc
dec
vandnps
pusha
sarb
jmp
xor
xor
or
cmp
jl
ret
fildll
jle
push
push
pop
es
sbb
aas
lock
aas
sbb
sbb
sub
adc
test
or
pop
and
mov
pop
mov
adc
sub
loop
movb
or
sub
push
mov
push
in
and
test
out
and
sbb
in
dec
test
call
and
sub
andb
dec
cmp
aas
cmpb
fisubs
mov
xlat
mov
and
push
ret
adc
push
or
inc
mov
lret
sub
dec
in
mov
pusha
cmpsb
out
adc
pop
add
adc
inc
jns
or
pop
sub
adc
jecxz
push
and
cmc
mov
pop
push
mov
xchg
add
pushf
xlat
hlt
push
xor
adc
or
add
jo
sub
and
pop
test
fldenv
imul
jecxz
sbb
clc
push
int3
push
xorl
push
push
and
arpl
push
rcll
cs
stos
push
hlt
sbb
pop
daa
mov
pop
or
sub
and
jge
rclb
clc
call
out
mov
imul
cmpl
out
popa
into
add
enter
sub
push
pop
in
hlt
int3
rclb
jbe
loopne
dec
xchg
clc
mov
inc
sub
adc
hlt
lea
mov
dec
mov
faddl
and
mov
loopne
add
inc
mov
add
xchg
add
lock
call
mov
ret
xor
jg
and
push
add
push
lods
or
je
add
lods
data16
push
mov
cwtl
jge
mov
lods
cmpsl
mov
mov
or
adc
jns
sti
stos
stos
mov
mov
dec
hlt
test
lret
fsubr
in
inc
movsb
mov
aaa
test
mov
xlat
and
mov
adc
addb
aad
addl
pop
lahf
sub
scas
adc
mov
cmp
daa
pop
add
inc
xlat
dec
aaa
or
mov
cmp
test
enter
xor
mov
stos
add
adc
insb
addl
sub
ja
xor
nop
outsl
adc
push
adc
js
inc
jae
bound
bswap
aad
xor
ret
out
mov
cmp
xor
lea
test
adc
xchg
jo
test
mov
or
je
sub
mov
jne
std
or
sub
sar
pop
xor
testb
hlt
es
push
jns
ljmp
mov
push
add
lods
lods
xor
fsubl
in
pop
jne
cmp
cmp
rcrb
popa
push
pop
ret
test
adc
arpl
test
lock
aas
add
mov
mov
pop
xchg
mov
shrl
add
pop
lock
adc
sbb
pop
adc
add
mov
or
push
out
cmpsl
pop
ret
out
nop
sbb
adc
dec
sbb
out
je
pop
fidivrs
push
and
mov
shlb
out
pop
jl
inc
and
cmp
jb
in
inc
jl
adc
les
push
add
adc
aas
test
subl
pop
xlat
sbb
xchg
add
adc
or
stc
push
subb
or
xchg
push
xor
and
sbbl
enter
pop
repnz
clc
xchg
sub
cmp
add
das
movsb
hlt
and
cmpl
inc
sahf
inc
sahf
lock
in
pop
mov
adc
data16
push
push
dec
sarl
insl
popw
gs
xchg
cmp
imul
dec
adc
jnp
pusha
aad
inc
jle
inc
xchg
or
pop
sbb
gs
inc
dec
inc
dec
jne
add
out
xor
mov
addb
ss
sbb
lcall
repnz
outsb
shl
out
ret
in
or
das
dec
in
jno
pushf
pusha
fstpl
scas
das
adc
adc
movb
or
jbe
xchg
dec
sbb
daa
adc
lods
cmp
movsl
lcall
xchg
dec
addb
inc
jo
add
loope
jne
pop
sbb
inc
xchg
mov
sub
aas
movsb
sbbb
add
pop
push
insb
imul
inc
cwtl
adc
push
pop
push
xor
sbb
rorl
jbe
add
sub
sbb
jmp
lods
or
mov
dec
lcall
jno
mov
push
or
or
idivb
je
cmp
push
and
js
dec
inc
popl
fistps
pop
or
aas
sub
iret
out
push
sub
jno
sub
jno
pop
and
ret
movsl
jae
jmp
inc
iret
or
mov
ds
or
adc
push
pop
push
mov
testb
xlat
pop
jne
add
sbb
je
add
call
sub
das
adc
aaa
and
sbb
push
inc
inc
adc
and
les
add
xchg
cs
xor
in
mov
add
das
fwait
das
and
or
sub
push
inc
add
pop
add
sub
adc
pop
and
sbb
das
sbb
sbb
sbbb
dec
add
pop
adc
je
sbb
mov
mov
scas
popf
lock
xlat
inc
or
jnp
mov
dec
cmp
outsl
out
into
sub
adc
or
jmp
inc
pop
mov
ret
fcomp
or
pop
push
clc
xor
push
add
cmp
fsubl
mov
les
daa
js
jnp
call
push
sbb
sbb
push
enter
jo
and
je
mov
jns
in
pop
dec
movsb
aam
mov
addr16
daa
mov
mov
ret
fistl
popa
adc
shlb
es
aas
insl
sti
xor
push
inc
stos
dec
rorl
gs
push
jle
add
inc
mov
mov
into
je
pop
push
jl
xor
pop
arpl
mov
fs
aas
scas
lcall
sub
and
into
or
adc
xor
sbb
inc
add
pop
mov
orl
ficomps
or
mov
push
sbb
sbb
enter
adc
cmp
sbb
xchg
vshufps
imull
mov
outsb
sub
outsb
subb
ret
clc
testl
or
push
adc
roll
das
and
pop
in
mov
mov
add
js
mov
dec
daa
inc
cmpl
add
dec
int
popf
xor
sbb
scas
je
sbb
clc
lock
stos
pop
int3
iret
jae
push
pop
xchg
js
cmp
cmp
aaa
adc
sbb
aaa
cwtl
pop
inc
arpl
jne
cli
mov
jb
dec
jb
or
cmpsb
lock
es
add
mov
mov
xor
sub
sbb
push
in
pop
push
add
sbb
sbb
push
cmpsb
std
imul
jl
jmp
push
xor
rorl
push
dec
cli
lea
lret
outsb
xchg
int
jno
jne
or
and
sub
sub
push
pop
add
push
and
fbld
adcl
adc
ret
and
xchg
push
or
mov
loopne
cltd
pop
les
sub
int
arpl
movsb
cmp
push
sbb
dec
and
pusha
jnp
in
pusha
adc
dec
loopnew
lcall
mov
dec
jg
push
add
adc
outsl
mov
pusha
and
loopne
mov
mov
jnp
rcrb
add
idiv
andl
pop
and
and
adc
popl
jle
adc
mov
and
mov
mov
mov
js
xchg
dec
mov
mov
mov
mov
and
jecxz
jmp
mov
sub
pop
daa
mov
push
fcompl
mov
je
fmuls
adc
inc
and
fdivl
test
sbb
inc
inc
pop
cmpsl
xchg
je
sub
or
adcl
add
call
and
push
inc
xchg
push
lea
decl
adc
dec
or
arpl
test
push
jbe
or
sbb
cmp
daa
dec
shlb
mov
inc
sahf
and
mov
jle
out
ss
sub
push
fiadds
pusha
aaa
adc
mov
adc
inc
jbe
xor
addr16
dec
dec
iret
fs
push
cmp
inc
add
inc
pop
inc
cs
inc
bound
xchg
and
cmp
outsb
add
pushf
inc
jae
push
pcmpeqw
ja
pop
rolb
fisubrs
and
sub
scas
xchg
jmp
push
push
sti
dec
cmpb
imul
orb
faddp
out
inc
jns
adc
in
inc
xorb
negl
xor
shll
and
mov
cmpsl
outsb
xchg
lcall
les
add
sahf
sbb
push
inc
mov
test
and
lahf
and
pusha
aaa
movsl
ss
or
xor
mov
aas
sbb
lcall
add
cltd
or
cmc
fistpl
pop
jge
xor
ja
jmp
sti
test
leave
lds
push
lcall
fcoms
out
les
lea
sub
xchg
test
icebp
add
data16
or
daa
dec
adc
push
rcrl
push
test
cwtl
mov
stos
xchg
sti
out
rolb
pop
cld
cmp
mov
shlb
dec
inc
je
add
test
cmc
enter
lods
arpl
xorl
lea
push
dec
enter
push
mov
out
dec
movsb
xor
or
icebp
es
sbb
sub
cmpsl
add
mov
push
addb
xlat
test
jo
pop
int
pop
push
inc
sbb
loopne
lods
fisubrs
inc
push
sub
lcall
fidivrs
jl
jge,pt
lret
subl
sar
or
and
hlt
jp
push
mov
xchg
xor
adc
add
fs
mov
jl
push
mov
push
ret
scas
lret
icebp
ja
or
pop
push
in
ret
es
mov
js
sub
into
or
idivl
pop
rorb
fimull
mov
test
fs
out
add
push
pop
fistl
mov
mov
or
rolb
dec
cld
add
mov
push
lcall
ja
into
add
jne
lock
out
sbb
sti
sub
pop
lret
ret
fadds
xlat
xorl
mov
jnp
or
sbb
movsb
das
aam
sub
mov
sti
mov
stc
jp
dec
xor
in
cmpb
add
je
cmpb
jl
jl
dec
xor
jg
and
inc
cmp
stos
push
lods
fldl
and
pop
xor
or
insb
adc
adc
mov
sbb
and
fnsave
outsl
jnp
or
and
faddl
adc
lahf
dec
aaa
sub
inc
pop
imul
pop
sbb
pop
xor
dec
shr
or
pop
push
xchg
loopne
adc
pop
add
inc
sbb
ret
push
fisubl
loopne
push
sub
xchg
cmp
dec
rorl
or
adc
jb
lret
push
sbb
or
and
neg
sbb
dec
sahf
or
fs
nop
andl
sar
cmp
jle
push
cmp
dec
adc
gs
mov
movsl
or
mov
cs
sub
or
pop
xor
or
jle
test
andl
xchg
jecxz
je
imul
pop
mov
cli
inc
fmulp
push
fsubs
sbb
sbb
and
add
daa
jb
fsubrs
and
jle
insl
push
and
es
lds
pop
or
lds
jle
cmpsl
xchg
xor
push
ds
ror
mov
inc
icebp
mov
aad
data16
adc
pop
cltd
inc
adc
and
push
xchg
and
ja
loopne
pop
mov
push
fwait
mov
cmp
cld
sub
and
or
mov
add
sbb
xchg
lret
ret
jmp
js
and
push
and
inc
sub
push
xor
or
xchg
xor
rolb
mov
and
shrb
adc
popa
inc
jp
add
repnz
push
xor
popa
add
xchg
sbb
inc
xchg
sbb
pop
daa
sub
hlt
pusha
test
jae
sbb
mov
sbb
and
addl
mov
push
js
xor
inc
and
cs
or
jnp
sub
sbb
fisubrs
adc
add
inc
push
repnz
les
shll
fmul
fdivr
or
or
push
test
insl
cmpsl
and
jmp
movb
aaa
and
and
push
cmpsb
push
das
loope
sbb
xchg
or
pop
mov
sbb
iret
subl
popf
adc
fisubrs
add
mov
add
dec
or
mov
lea
andb
icebp
test
jl
pusha
popa
xor
push
roll
add
xor
add
push
cmp
mov
addb
and
shrl
in
stos
dec
imul
jg
loopne
dec
sbb
je
jle
shrd
or
loopne
sub
sbb
loop
repnz
inc
adc
rcrl
repnz
sti
sub
and
outsl
sbb
push
sub
mov
mov
mov
fs
iret
ffree
mov
in
xor
jns
pop
jns
sub
sub
dec
lock
xor
pushl
test
xchg
es
xor
add
in
addl
jae
jmp
daa
inc
pop
in
sbb
bound
xchg
or
add
int3
and
cmpsb
xlat
inc
dec
jo
in
orps
xor
push
pop
dec
adc
insl
testb
int
rclb
fcompl
inc
mov
lods
xchg
sbb
in
test
add
pop
mov
add
mov
or
jne
lahf
mov
and
pop
lods
pop
mov
mov
or
adc
daa
sbbl
inc
insb
add
dec
mov
cmp
cmpsb
cmp
je
mov
in
sub
pop
sahf
js
rcr
adc
test
test
inc
push
out
xor
or
adc
fs
or
cmpsl
loop
lret
mov
and
add
jp
adc
and
mov
aam
mov
and
push
cmpsb
out
in
pop
test
and
and
xchg
sbb
pop
jnp
aam
mov
xlat
mov
aad
je
fildl
cmc
inc
sub
leave
es
fnstcw
pop
movl
jmp
dec
pop
add
cmp
jne
imul
add
or
stos
adc
sub
movsb
pop
jne
mov
sbb
sbb
and
sbb
sbb
insb
xchg
cmc
add
sub
sbb
js
and
inc
rclb
pop
nop
ret
jge
cmp
jno
xor
and
jecxz
add
jle
sub
pop
dec
ljmp
adc
or
scas
or
and
cmpb
test
mov
aas
filds
inc
mov
pop
faddl
add
sbb
add
addl
and
or
mov
pop
es
xchg
clc
mov
mov
fwait
adc
adc
cmp
inc
fisubrl
or
sbb
outsb
sbb
sub
mov
ljmp
add
add
mov
ficoml
test
sbb
lea
and
repnz
pop
in
idiv
sbb
je
scas
dec
jo
mov
dec
and
cmp
and
loopne
inc
xor
insb
in
lret
sahf
sbb
mov
jmp
outsl
cmp
je
mov
pop
daa
sub
jle
loopne
push
adc
inc
mov
ss
push
xor
sub
xor
mov
push
mov
sub
fs
dec
cmp
arpl
mov
xor
test
xchg
sub
je
jo
pop
stos
add
xchg
pusha
stos
adcb
popa
addb
stos
inc
mov
add
push
mov
adc
test
fldt
add
jle
xor
fsubrl
push
add
cmp
push
test
fwait
out
or
dec
dec
add
out
sub
fsubrs
mov
sub
xor
xor
pusha
and
cmp
aam
hlt
fs
lea
lea
xchg
push
and
jmp
push
add
and
pop
add
or
add
mov
push
sub
sbb
loopne
sub
sbb
fadds
fcoml
xor
shrb
or
rorl
adc
pop
decl
call
push
inc
paddusb
xor
mov
stos
push
adc
inc
sahf
sub
and
gs
sbb
adc
lock
es
add
ret
or
call
jbe
mov
lock
iret
push
mov
dec
cmc
sub
mov
xor
add
pop
xor
mov
xchg
shlb
and
stos
addb
or
ret
lret
and
and
nop
dec
lods
mov
daa
sar
sub
mov
ja
test
iret
xchg
sarb
and
adcl
mul
sbbl
daa
inc
or
aad
jbe
xor
hlt
mov
das
pop
mov
movb
pop
test
adc
push
test
into
inc
xchg
sub
push
nopl
mov
mov
mov
popf
rclb
sub
aam
in
dec
lods
rolb
imul
jge
jecxz
or
sub
xor
xchg
or
jns
in
mov
rorl
and
xor
lea
aaa
xchg
push
adc
mov
test
pop
mov
test
es
jl
je
jo
mov
testb
shrb
cld
mov
jno
jge
sub
cmpsb
leave
xchg
sbbb
mov
adc
inc
xchg
jecxz
mov
adc
in
and
in
and
loop
icebp
sub
mov
and
outsl
inc
test
xchg
sbb
push
push
test
mov
sbb
test
mov
or
ss
imul
loope
cmp
jg
xor
mov
xchg
push
mov
test
test
out
or
xchg
stos
inc
ret
xor
rolb
adc
adc
sub
or
subb
jo
ss
test
and
xor
xor
ret
add
testb
lods
fcoml
jecxz
cmp
inc
xor
adc
sbb
xchg
or
pop
test
fstpt
cmpsb
push
or
xor
xor
shll
sbb
lret
int
sub
xor
push
push
test
mov
sub
js
xchg
xchg
ret
rol
dec
mov
das
and
jg
or
or
adc
ja
ljmp
movzwl
pop
dec
sub
scas
shrl
cmp
inc
gs
loope
or
mov
pop
sbb
sbb
pop
jmp
push
insl
pusha
andl
adc
sub
fwait
xchg
lods
or
xchg
dec
add
inc
pop
adc
push
lcall
mov
jmp
call
pop
sub
dec
inc
or
inc
sti
test
push
leave
xlat
inc
sbb
pop
jl
fmul
and
inc
pop
or
scas
nop
mov
cmp
xchg
out
mov
mov
sbb
mov
insl
and
pop
ret
pop
nop
das
adc
mov
loopne
jmp
xchg
sub
loopne
test
nop
cmpsl
xchg
mov
lods
xor
or
es
jnp
jp
and
dec
add
xchg
data16
sub
test
sbb
insb
xchg
mov
xchg
stos
sub
xor
sub
sub
jo
and
mov
sub
mov
clc
sbb
or
jo
jg
loop
call
lock
pop
sub
add
inc
pop
enter
jbe
ret
cmp
pop
mov
xchg
or
pusha
fmul
mov
ret
push
int3
dec
adc
cld
xchg
push
adc
pop
sbb
rolb
push
addl
mov
cmp
mov
jo
push
nop
or
sbb
mov
pop
incb
dec
pop
lods
lea
inc
test
xor
ss
push
or
sub
ja
dec
jecxz
push
xchg
mov
sub
sub
or
inc
or
pop
jb
sti
orb
adc
mov
mov
add
inc
mov
mov
enter
gs
or
inc
jp
adc
adc
push
ja
loop
jnp
jae
repnz
push
cltd
ret
ja
add
mov
ret
xchg
addr16
pop
aaa
into
jne
or
insb
movsl
add
push
iret
inc
mov
notl
fnstenv
aaa
xchg
bound
into
mov
xor
sub
and
and
roll
sub
dec
add
sbb
xor
dec
pop
dec
lods
pop
stos
fisubl
xor
sbb
and
jge
sbbb
inc
adc
mov
add
xor
xchg
mov
fisubrs
sub
sub
adc
loop
xchg
mov
sbb
adc
mov
pop
in
je
cmp
dec
and
fldcw
ss
adc
xchg
enter
sub
xor
rcrb
and
jne
push
push
leave
cmp
das
insl
adc
inc
call
push
sub
ljmp
jmp
pop
popa
sub
mov
mov
cltd
adc
movb
pop
lods
fsts
lock
ret
jge
xor
pushf
or
sub
mov
sbb
lods
lret
mov
jo
sbb
roll
movb
or
gs
das
je
je
jl
imul
lahf
cld
fisubrs
jno
or
adc
adc
out
mov
or
jg
lock
mov
xor
xchg
movsl
add
test
xchg
lea
cmp
add
or
and
leave
lcall
xor
cmp
pop
jno
push
pop
mov
mov
and
jne
es
aas
test
push
push
push
mov
loopne
popf
lcall
push
clc
jno
push
ffreep
filds
cli
imul
loopne
loopne
or
add
inc
dec
xchg
rcrl
loop
orl
stos
mov
inc
xchg
sbb
add
or
inc
hlt
cmpsb
jns
sbb
ret
out
or
sbb
dec
pushf
xor
mov
call
pop
prefetcht0
xchg
cmp
call
rcrb
jecxz
adc
or
dec
or
push
add
inc
dec
enter
imulb
pop
sbb
je
scas
fldenv
mov
daa
negb
and
or
push
daa
jl
push
push
lds
enter
fiaddl
and
adc
dec
mov
rcrb
add
inc
in
sub
and
add
push
or
jne
aaa
push
inc
dec
imull
add
push
adc
inc
add
imul
cmc
jne
inc
push
js
ja
or
adc
test
pop
xchg
mov
movzbl
in
dec
push
rolb
fwait
mov
mov
pop
push
jno
mov
jbe
xor
push
mov
nop
imul
lahf
add
add
cmp
inc
jne
pusha
xor
mov
faddp
test
jns
imul
dec
lods
adc
shrb
sub
cmp
mov
cltd
arpl
in
daa
and
or
fwait
int3
fmuls
xchg
aas
jecxz
imul
adc
adc
inc
lahf
xchg
mov
mov
int3
push
or
aam
inc
cmp
shl
jns
stc
add
loope
sarl
add
add
pop
imul
and
sub
inc
test
sahf
leave
test
sarl
ret
ja
out
or
in
add
in
pop
jbe
adc
mov
push
dec
and
pop
push
pop
into
fs
and
fsubrs
inc
xchg
pop
xchg
adc
and
mov
add
and
mov
stc
lock
in
mov
popf
fcoms
inc
or
sbb
adc
inc
and
mov
pop
mov
cmp
lds
add
jecxz
or
daa
mov
aam
lcall
xchg
pop
and
or
mov
or
mov
dec
push
jle
fcoms
sbb
fisttpll
mov
dec
pop
fwait
mov
jmp
fstl
add
and
mov
jecxz
add
mov
das
lods
pop
xchg
mov
int
mov
test
repnz
daa
outsb
jne
or
inc
fcmovnb
clc
out
or
jae
pshufw
pusha
add
out
fdivs
cmp
fadds
sub
mov
dec
jecxz
cltd
imul
call
lea
push
mov
pushf
int
clc
or
push
lea
or
cmp
mov
jmp
iret
or
jnp
add
push
pop
ja
dec
daa
push
orb
test
call
aaa
icebp
add
push
jg
adc
out
popf
and
add
mov
jmp
and
adc
fsubs
mov
icebp
and
cs
out
mov
sbb
and
push
and
jg
orb
cmpsl
mov
xchg
add
or
add
and
cmp
push
pop
adc
loope
scas
add
jle
or
adc
xlat
adc
or
js
je
pop
or
pop
xchg
ret
dec
pop
pop
arpl
daa
adcb
stc
jge
and
test
mov
lret
ljmp
mov
lods
dec
jge
iret
push
or
ljmp
mov
add
movb
rorl
sbb
popf
dec
lcall
insb
dec
rol
out
aam
or
jne
enter
jnp
pop
xchg
and
in
hlt
mov
pusha
inc
lds
scas
push
loopne
enter
insb
xchg
mov
fbld
je
jge
adc
cmpsb
mov
push
push
push
and
or
cmp
arpl
push
or
cmpb
add
pop
lea
ja
test
jbe
stc
add
push
jne
jo
shrb
repz
and
ljmp
int
push
lea
lods
lea
subb
inc
and
imul
sbb
add
bound
cmp
and
push
cmpsb
sub
xor
fcoml
pop
aaa
or
dec
xchg
sbb
or
call
cmpsl
adc
ss
inc
sbb
fiadds
mov
stos
xchg
into
or
in
daa
and
and
mov
imul
inc
mov
mov
xor
in
popf
dec
inc
and
or
es
fcmovbe
sub
push
loopne
jle
test
add
pusha
in
push
jnp
cmp
xor
out
mov
inc
add
pop
jns
cld
mov
inc
jo
mov
imul
sub
sti
ret
inc
sbb
aam
dec
add
scas
mov
mov
adc
lret
inc
mov
sub
fmuls
or
loopne
mov
and
rcrl
adc
outsb
test
pop
adc
push
jmp
xor
imul
jle
roll
jne
inc
mov
push
xchg
sbb
mov
push
push
aam
in
movsb
mov
mov
xchg
push
movsl
sub
sbb
adc
addl
add
add
add
das
dec
push
test
dec
movsl
nop
or
inc
pop
aam
push
push
pusha
outsb
inc
add
and
imul
mov
popf
pop
dec
jmp
movsb
and
enter
or
and
mov
adc
cmpsl
fcomps
fwait
dec
rclb
inc
lds
mov
in
mov
pop
scas
pop
inc
daa
test
mov
inc
adc
stos
sbb
jb
daa
adc
add
push
scas
xor
mov
cmc
pop
sbb
cmp
xchg
aam
sub
or
pop
sbbb
push
rorl
ds
shr
and
shl
inc
loope
movzwl
cmp
sahf
adcl
cwtl
adc
test
ds
pusha
xchg
inc
testl
xchg
or
jp
leave
and
stos
in
adcl
ret
ljmp
out
mov
insl
insl
cmp
and
int3
xchg
push
stos
inc
cmp
cmpsl
aam
xor
xchg
xchg
popa
andb
xchg
stos
dec
fadd
inc
jecxz
pop
sub
test
mov
mov
bound
inc
stos
or
mov
pop
lret
or
or
sbb
imul
iret
notl
outsl
lods
or
and
inc
ret
cmp
sbb
pop
sub
shlb
pop
mov
jns
cmp
add
cmpsl
xor
and
dec
inc
aaa
sub
pop
xchg
xor
stos
pop
fldt
xchg
pop
mov
fnstenv
push
mov
pop
daa
push
mov
pop
xor
call
inc
icebp
mov
insl
inc
push
push
inc
arpl
xor
jnp
syscall
adc
daa
pop
add
xor
mov
pop
and
addb
sub
cmp
push
sbb
push
xchg
test
jne
xor
test
jne
mov
inc
xchg
ja
mov
lahf
pop
ja
insb
xorb
outsl
adcl
bound
jp
scas
ds
dec
push
and
sbbb
in
and
push
sbb
dec
cmp
sub
pop
xor
or
adc
pop
ret
scas
test
inc
push
push
mov
nop
cmp
outsl
ljmp
cmc
sub
sbb
add
sti
lds
pop
sub
pop
fcmovbe
adc
inc
sub
push
or
imul
enter
and
xor
pop
sbb
pop
lods
sbbl
adc
sarb
dec
pop
and
xchg
or
push
adc
add
notb
adc
inc
and
incb
jmp
jle
dec
or
inc
cmp
sub
mov
test
jne
or
pop
adc
or
bswap
inc
sbb
push
push
movsl
inc
insb
fisttps
pop
das
in
mov
outsl
hlt
mov
test
leave
andl
cmpsb
hlt
mov
inc
push
inc
mov
add
sub
xor
jne
dec
testl
cld
push
fdivrs
inc
mov
pop
mov
insb
test
mov
outsb
add
mov
sarl
jmp
adc
cwtl
add
xor
mov
adc
inc
add
adc
data16
adc
ja
lea
nop
pushaw
pop
enter
sub
or
pusha
mov
hlt
pop
subb
xchg
in
mov
xchg
rcll
adc
mov
jge
je
cld
push
pop
test
dec
mov
dec
and
add
std
dec
les
add
ss
sub
inc
iret
out
add
enter
cmp
adc
and
mov
or
fs
mov
xor
cmp
ja
lock
sarb
push
das
cmp
or
or
mov
cmp
ret
push
ja
sbb
add
lods
xorb
or
dec
popa
xchg
into
rcr
loope
cwtl
sub
mov
test
dec
dec
pop
mov
push
pop
or
fimull
imul
cmp
jge
iret
mov
or
test
pop
js
cltd
pop
nop
iret
push
push
rolb
ss
lretw
enter
push
mov
rcl
push
adc
outsl
andl
jne
mov
mov
push
or
adc
and
outsb
xlat
or
adc
mov
aaa
push
adc
pop
lret
pop
lock
or
adc
pop
stos
subb
scas
add
or
inc
mov
xlat
outsl
sbb
add
mov
push
mov
and
ret
outsl
stc
fbstp
and
add
mov
mov
prefetchw
addr16
mov
xchg
inc
negl
pop
rcll
mov
lods
cmp
inc
fildl
push
inc
mov
dec
pcmpgtd
adc
push
lcall
ret
aam
pop
iret
xor
adc
sti
push
imul
sbbb
dec
mov
insl
in
fcmovnu
fs
js
out
js
dec
cmpsb
add
unpckhps
jo
imul
jnp
adc
adc
xlat
mov
xor
push
sbb
fs
add
inc
jb
divl
orb
adc
aad
jecxz
sbbb
mov
imul
mov
push
scas
popa
cmpsl
andps
jnp
movsb
dec
pop
cmpsl
rorb
push
orl
mov
fcoms
pop
jo
aam
cmp
fstpt
ret
rol
xchg
daa
ret
mov
pop
adc
int3
lods
push
push
pop
lcall
dec
mov
imul
xchg
fwait
xor
cmp
cmc
aaa
insl
add
mov
pop
or
mov
sbbb
or
dec
or
push
fldenv
xorl
sub
sub
inc
imul
ds
mov
add
or
inc
dec
ja
in
es
adc
dec
cmp
push
mov
or
test
and
in
adc
mov
clc
push
aam
jbe
test
sahf
int3
insl
xchg
mov
xor
and
cmp
inc
pop
mov
sub
and
mov
mov
aas
test
in
sbb
pop
mov
xchg
ffreep
jecxz
push
imul
shlb
mov
sahf
xor
mov
test
sbb
scas
pop
pop
mov
scas
into
in
or
sbb
xor
jl
add
mov
add
pop
dec
and
adc
hlt
hlt
pop
jb
sbb
and
rcll
push
adc
shr
mov
xor
and
les
mov
sbb
jle
jg
push
movsb
enter
xchg
prefetcht0
cmp
cmp
cmp
sbb
xchg
sub
push
push
in
das
bound
cmpsl
pop
mov
es
add
or
or
sbbl
outsl
cmp
push
xor
mov
arpl
pop
xor
in
sbb
gs
je
movsl
mov
test
jns
je
mov
jb
sbb
cltd
cmp
hlt
outsl
lahf
sub
jne
push
pop
jle
adc
andb
ret
add
sub
arpl
shll
daa
adc
push
sub
adc
mov
jbe
jmp
cmp
aad
xchg
pop
enter
inc
push
sbb
pop
or
das
add
roll
and
jmp
sbb
call
jg
jne
mov
sbb
adc
push
xchg
mov
mov
je
test
inc
pop
xchg
sbb
jge
lock
add
mov
sahf
or
add
inc
or
jge
cmp
push
jle
shrb
movsb
icebp
leave
test
or
add
cltd
jne
add
setae
shrl
fcoms
push
add
mov
mov
xor
or
popf
add
test
sub
test
push
and
fildll
mov
mov
sbb
femms
and
adc
add
jle
pop
inc
add
or
and
push
pop
mov
and
mov
sbb
in
sbb
imul
popa
sub
je
inc
dec
dec
insl
xor
ljmp
in
pop
imulb
lock
loopne
es
pusha
cmpsl
and
mov
pop
sbb
xchg
xchg
in
adc
shll
jno
out
arpl
add
sub
xchg
add
fstps
daa
adcb
xchg
inc
adc
leave
aad
sbb
xor
jmp
ja
ret
cmp
inc
test
in
jb
xchg
lock
inc
ret
es
lock
push
and
lfs
sbb
inc
call
call
je
addb
mov
and
pop
repnz
mov
adc
cmpsb
jo
dec
inc
mov
pop
outsl
fld
imul
or
shll
enter
jb
pop
or
pushf
scas
shlb
test
xor
xchg
out
xor
sbb
xchg
lock
enter
pop
stos
ret
cmpsb
and
clc
bound
adc
xlat
insb
loope
bndstx
movsb
xor
fcmove
sbb
add
outsl
xor
mov
pop
jne
adc
mov
or
mov
add
out
mov
dec
je
or
sbb
dec
mov
mov
jmp
adc
adc
lahf
push
inc
das
mov
nop
mov
sub
mov
and
jmp
aam
xchg
mov
pop
or
fidivrl
jne
sbb
fsubp
push
adc
adc
es
sbb
shrb
in
jg
xchg
sub
mov
inc
bound
or
out
movsl
adc
clc
xchg
inc
iret
vsubsd
in
movsl
xor
je
cmp
stc
push
xchg
cli
pop
pop
sub
jns
and
add
outsl
insl
push
push
xchg
or
push
push
dec
lods
push
xchg
adc
sub
or
cbtw
mov
cwtl
push
add
inc
dec
adcb
mov
es
dec
fsubrp
xor
sahf
dec
sahf
pushf
js
nop
mov
sahf
xchg
test
xor
and
test
xor
addb
enter
jo
cmp
cltd
nop
out
fdivs
and
repnz
lock
inc
ss
sarb
jl
nop
out
enter
adc
cmp
pop
lock
test
and
test
cmpsl
jae
mov
ret
lock
outsl
insl
arpl
lcall
mov
es
sub
loop
maxps
add
gs
ljmp
push
inc
outsb
sub
lds
push
cmp
mov
ljmp
pop
outsl
jae
insl
mov
pop
daa
jg
add
dec
mov
xor
leave
mov
fadds
insb
aas
hlt
sub
add
inc
rolb
clc
pop
jo
push
dec
mov
lret
pop
adc
test
lret
shlb
jb
inc
add
mov
or
mov
pop
xchg
movsb
push
dec
rolb
in
dec
mov
jbe
add
cld
pop
add
xchg
mov
sbbb
jo
push
enter
mov
xchg
pop
stos
and
clc
std
dec
jb
leave
int3
sti
stos
pop
jle
decl
adc
mov
test
cmp
sbb
cmp
test
mov
cmp
cmp
mov
cmp
cmp
int3
rcl
cmp
cmp
fcomp
loopne
cmp
cmp
call
sbb
cmp
cld
stos
add
pushf
pushf
pushf
or
adc
pushf
pushf
pushf
sbb
and
pushf
pushf
pushf
sub
xor
pushf
pushf
pushf
cmp
inc
pushf
pushf
pushf
pushf
dec
dec
push
push
adc
pushf
pop
push
cwtl
andb
add
pop
add
out
pop
mov
test
shlb
push
add
pop
arpl
fcoml
dec
sbb
into
push
nop
out
fisubs
pop
mov
lods
rorl
mov
repnz
leave
xorl
pusha
sbb
jae
les
cmp
repnz
int3
test
jae
iret
sarb
repnz
rolb
nop
out
loopne
in
jns
in
call
sahf
in
inc
lock
jns
in
hlt
fs
js
dec
sahf
add
mov
cmp
repnz
and
or
repnz
loopne
hlt
cmp
or
jns
in
and
nop
out
sahf
and
sub
push
in
sub
xor
sahf
add
cmp
in
nop
nop
cmp
inc
inc
sahf
add
inc
fdivs
lock
aam
iret
cmpl
sbb
pop
pop
dec
push
push
aas
lods
xchg
inc
pushl
mov
clc
ss
je
push
fistpl
loop
insl
gs
push
mov
push
rcrb
inc
insb
outsl
jae
and
sbb
jne
test
ret
adc
mov
pop
add
push
add
in
test
push
cmp
cmp
pop
sub
lret
ja
cs
jae
test
pusha
addr16
fs
pop
test
popf
dec
arpl
jae
fstl
fs
cmp
outsb
jae
dec
lods
pusha
jo
inc
inc
mov
imul
aaa
pop
add
xor
dec
sbb
pop
push
pop
ret
and
pop
mov
test
mov
scas
pop
mov
pop
dec
xor
add
cmpsl
fchs
push
orl
dec
lods
add
les
sub
jp
popa
and
cmp
imul
in
xchg
inc
push
fs
mov
insb
mov
pop
in
pop
sbb
sbb
aas
pop
xor
das
and
push
xor
ror
mov
fs
jg
mov
xor
jns
outsl
addr16
out
icebp
nop
sbb
sbb
mov
les
sub
mov
add
pop
popf
cmp
or
arpl
mov
xor
loope
jnp
push
mov
adc
pop
nop
stos
rorb
repz
pop
stos
les
adc
mov
xor
dec
into
cmc
aam
pusha
jne
xchg
fidivl
xlat
push
add
jg
daa
inc
xor
aad
sbb
xchg
sbb
add
pushf
add
add
jo
jo
mov
and
das
inc
mov
pop
and
xor
pop
xor
pop
xor
and
aam
nop
add
jl
add
add
or
leave
orl
enter
jne
orl
or
lods
mov
in
sub
in
nop
pop
mov
lcall
mov
pop
test
movsb
pop
psrlq
and
iret
fcom
inc
mov
push
cli
inc
mov
sbb
mov
pop
rorl
out
jmp
into
fldcw
mov
fcmovb
or
pop
jne
roll
inc
sbb
ret
cmp
and
xor
ficoml
loop
fadds
push
gs
jp
cmp
cmp
subb
mov
imul
imul
pop
dec
outsb
mov
push
push
lods
je
and
cmpsl
mov
xor
subl
inc
pop
xor
scas
inc
sbb
mov
cmc
sahf
rcrb
les
add
cmp
cwtl
jne
cmpl
and
sbb
cmp
and
mov
xchg
mov
mov
stos
xor
or
cmp
mov
inc
or
cmp
push
sahf
mov
negb
or
inc
in
lret
outsb
add
call
xchg
in
xor
pop
out
inc
imul
dec
pop
pop
or
mov
out
pop
rcrb
and
cmp
mov
fidivrl
adc
or
in
xchg
mov
push
dec
leave
cwtl
subl
call
ret
push
out
fidivl
cmp
hlt
or
sub
mov
and
and
cmp
fbstp
pop
das
or
add
push
add
adc
or
push
pop
push
dec
dec
pop
dec
dec
add
roll
xor
insb
pop
sbb
insl
hlt
bound
out
push
pop
add
arpl
pop
dec
outsb
inc
gs
ffreep
pop
mov
mov
or
and
jmp
mov
roll
xor
inc
mov
ds
pushf
push
sbb
inc
push
sub
scas
sub
sub
jne
sbb
jg
xchg
fdivr
movsl
ss
xor
jbe
xor
das
push
jmp
sub
mov
addr16
push
loop
add
mov
gs
push
lret
and
jo
pop
es
mov
lahf
mov
mov
mov
sahf
xor
inc
call
imul
push
das
loopne
lock
fdivs
pushw
imul
and
xor
int3
cmpsb
ja
das
xchg
adc
lcall
mov
sbb
ret
pop
fadd
das
jns
push
xchg
jne
data16
or
loop
daa
mov
or
inc
aaa
xchg
loopne
mov
mov
add
mov
push
mov
add
and
mov
cld
adc
pushf
cld
popf
pushf
pushf
adc
add
clc
or
jnp
clc
pop
in
in
inc
loop
add
out
fmulp
fistpll
pop
daa
fidivrs
cmp
push
push
imul
xchg
pop
sbb
loopne
jo,pn
or
or
push
cmp
add
jae
nop
xchg
insl
daa
mov
sbbb
test
int3
jge
push
fdivrl
sub
inc
and
push
imull
inc
add
roll
fbld
add
lahf
sbb
daa
mov
and
jle
fbstp
aas
lock
dec
adc
adc
adc
in
pop
pop
jne
lahf
fistpll
nop
mov
xor
push
inc
in
inc
xchg
rcl
and
movb
or
fmul
jg
push
sub
jmp
pop
lods
mov
cmp
cmpb
cmp
xor
rorl
inc
pop
cld
mov
cltd
xchg
add
inc
or
push
daa
cmp
sbb
or
fidivrl
outsl
pop
sub
xchg
sar
data16
scas
pop
or
cmp
adc
bound
pop
inc
xchg
movups
sbb
adc
adc
fs
inc
adc
inc
push
sbb
sbb
sbb
inc
push
sbb
add
sbb
add
add
fs
inc
add
inc
push
or
or
or
daa
pop
sbb
lock
icebp
or
enter
hlt
xor
and
and
push
rorb
sti
cld
das
push
mov
loope
push
fs
imul
inc
cwtl
cmp
xor
cmpsb
imul
cmpsb
imul
xor
cmpsb
add
mov
push
hlt
dec
shll
cmp
xor
shll
aam
int3
and
xor
rol
sbb
dec
or
cmpsb
imul
cmpsb
imul
insb
shlb
imul
cmpsb
imul
lcall
lcall
push
movsl
imul
icebp
and
mov
hlt
or
xchg
mov
inc
repz
loope
pushf
cmp
add
movsb
shrl
sbb
movsb
in
or
xchg
out
outsb
stos
mov
adc
stc
test
test
xor
cmp
loopne
mov
test
je
stc
dec
nop
adc
push
lods
dec
pop
or
pop
test
or
iret
ja
or
sbb
pushl
mov
outsl
mov
mov
adc
add
pop
add
xchg
and
xchg
out
das
xchg
sbb
jb
nop
test
pop
pop
xchg
das
test
adcb
inc
xchg
insb
mov
mov
or
test
in
mov
push
iret
das
sub
iret
in
mov
add
sub
insb
inc
xchg
adc
test
xor
pop
and
repnz
mov
sbbl
lods
orb
out
mov
and
mov
dec
xor
outsb
in
imul
out
xchg
push
cmp
out
sbb
cld
notb
or
and
popf
add
pop
movups
xorl
inc
lcall
push
adc
popf
dec
add
jmp
pop
mov
cltd
or
arpl
pop
aaa
xor
add
btr
mov
jmp
adc
jmp
add
lahf
and
mov
inc
loopne
push
push
aas
movb
pusha
rorb
lahf
outsl
and
sbb
scas
add
and
mov
jmp
jl
pusha
daa
mov
lahf
add
fcoml
movb
movsb
mov
loope
inc
mov
xchg
cwtl
js
push
ror
dec
es
andl
jmp
rcrb
or
dec
inc
sub
sbb
or
adc
adc
push
ret
pusha
cmp
jne
cs
popa
das
or
add
mov
or
lcall
js
and
or
movsb
fwait
add
arpl
jecxz
jmp
in
mov
sub
mov
es
je
imul
aaa
mov
push
cmpsb
jge,pt
je
pushl
jmp
add
movsb
movlps
addl
jmp
and
out
dec
es
les
and
dec
xor
leave
and
lock
push
lock
fucomip
pop
add
sbb
aam
or
and
add
fadd
lcall
orl
fs
inc
scas
push
pop
enter
cmp
lahf
int3
inc
xchg
add
xchg
lds
sbb
cmpsb
xchg
les
cmp
xchg
mov
shrl
mov
insb
push
in
loop
jns
lock
dec
arpl
pop
jnp
push
push
inc
or
jecxz
sub
mov
pop
pop
leave
xor
jb
sbb
cmp
lods
jns
jl
or
sbb
addr16
pushf
pop
rorb
jne
pop
jp
dec
popf
sub
rorl
mov
add
shlb
cmpsl
aam
imul
ja
jno
jl
or
cmp
hlt
sub
dec
faddl
adc
mov
push
outsb
cmpl
add
adc
push
icebp
mov
mov
pop
dec
xor
hlt
pop
push
les
outsl
jmp
xchg
pop
dec
or
add
add
push
movsb
cmp
inc
and
pop
sarb
stos
imul
mov
pop
enter
jge
pop
les
pop
pop
bndldx
or
movb
pop
subl
mov
cmpsb
cs
adc
jle
das
cmp
inc
cmp
pop
test
inc
outsl
push
out
push
dec
std
or
xorb
pop
cmp
or
push
mov
fsts
icebp
sbb
fcomip
outsb
push
aaa
xchg
out
scas
push
push
movsl
or
jle
pop
sub
ja
lahf
fisubrl
push
aam
out
data16
je
add
in
sti
data16
lods
add
jg
pop
and
aad
fmuls
and
mov
and
mov
and
inc
sub
movsb
or
jne
push
jb
xchg
inc
cmpsb
test
cli
cld
int
push
cmpsb
sbb
out
int3
ret
ror
adc
out
pusha
adc
sub
pop
jb
xchg
clc
clc
sbb
or
cld
adc
rolb
gs
sbb
daa
sbb
push
enter
out
lret
ds
ret
mov
push
popf
ss
lock
adc
inc
loop
jne
mov
mov
inc
bound
lahf
xchg
xchg
sbb
lock
lock
xor
jne
stos
out
je
inc
or
push
sub
popl
bound
stos
add
daa
outsb
adc
cmp
fs
and
sub
inc
mov
repz
push
sbb
push
rolb
mov
addr16
insl
nop
mov
jo
push
cmp
test
xor
xor
dec
imul
pop
arpl
add
jne
add
out
fnstenv
insb
push
or
adc
fwait
stc
gs
pop
js
arpl
pop
xorb
jb
jb
popa
or
imul
adc
insb
bound
cltd
addr16
jbe
daa
ja
imull
jbe
in
add
addr16
jb
addr16
pop
ficompl
and
mov
arpl
insb
imul
sahf
or
loop
xchg
pop
fcmovnu
sbb
and
pop
mov
daa
mov
imul
jo
jb
arpl
insw
fisubl
jns
outsl
dec
pushw
das
sahf
sbb
pop
ja
imulb
inc
pop
pop
sub
inc
inc
lock
mov
pusha
or
loopne
add
jle
popa
hlt
cmp
inc
dec
pop
add
loope
int3
cmp
je
hlt
add
mov
and
dec
dec
cmpb
daa
outsl
lock
jl
or
out
add
popa
adc
mov
imul
dec
lahf
mov
cmpb
lcall
or
xchg
outsb
push
or
inc
insb
call
push
sbb
insb
pop
out
mov
pusha
mov
xchg
fsubrs
inc
rorl
xor
ret
add
mov
scas
mov
lock
mulb
jmp
push
mov
jnp
add
mov
into
xchg
add
cmp
inc
xchg
nop
xchg
mov
mov
xchg
rorb
lds
mov
add
mov
cmpb
fimull
or
lcall
pop
xchg
cmpsl
adcb
in
clc
les
into
inc
push
pop
movsl
xor
sub
xchg
cltd
cmp
das
je
pop
adc
sbb
inc
push
xchg
imul
pop
or
addr16
mov
inc
mov
pop
fs
stc
leave
shlb
jmp
ljmp
mov
add
add
pushl
pop
or
or
or
or
or
or
push
movups
adc
xor
adc
dec
shll
sbb
sbb
push
pop
shll
and
sahf
push
scas
shlb
repz
push
imul
cmpsb
mov
loope
scas
add
adc
ss
dec
shll
mov
movsb
mov
into
fcompl
mov
fprem
sti
jns
jbe
fwait
add
inc
sahf
add
add
push
push
adc
inc
sahf
add
or
in
nop
or
or
sahf
add
or
push
sbb
push
add
in
movaps
sub
xor
in
adc
cmp
sahf
add
adc
inc
push
inc
pop
inc
sahf
add
sbb
nop
sbb
push
sahf
add
sbb
pop
mov
imul
push
repz
repz
imul
cmp
and
and
int
xor
xor
data16
push
cmc
and
and
and
push
roll
test
add
adc
adc
adc
les
mov
xor
and
cli
fcoms
xchg
fdivrs
add
addr16
inc
pop
mov
jp
bound
dec
jae
push
into
je
or
pop
push
ja
sahf
dec
imul
push
add
dec
insl
mov
lock
lock
lock
fiadds
cmp
nop
mov
mov
es
movsb
imul
enter
push
loopne
int3
es
push
pop
pop
lock
int3
mov
dec
cmc
inc
inc
pop
inc
add
les
hlt
std
cli
outsb
push
xchg
pop
push
out
pop
mov
or
dec
sbb
mov
scas
cli
mov
push
mov
out
or
xor
and
cmp
cli
or
jmp
mov
sti
lods
cmp
rolb
add
mov
dec
add
add
push
adc
pop
sbb
dec
aad
dec
cld
or
movsl
stc
add
pop
pop
sbb
push
dec
push
js
or
out
sbb
ss
and
pushf
ret
or
sbb
push
je
outsb
jnp
xchg
inc
add
in
mov
adc
movb
sbb
insl
xchg
add
and
je
movl
xchg
loopne
add
lar
jnp
faddl
lock
fs
and
insl
nop
inc
xor
aas
add
xchg
mov
sub
movsl
inc
inc
stos
loopne
jl
daa
cltd
pop
jo
pop
stc
pop
std
add
mov
or
ror
xor
shll
loope
icebp
xchg
xchg
ss
rcrl
push
std
addb
xor
fs
pusha
pop
les
pop
ficompl
daa
sbb
add
push
popl
or
iret
adc
orl
push
cmp
push
or
pop
dec
adc
loope
loope
xchg
hlt
and
or
push
sbb
aam
add
mov
push
negb
dec
mov
inc
xor
and
outsl
sbb
clc
into
clc
inc
cld
stos
leave
and
loope
adc
dec
call
lret
shll
sub
adc
adc
jo
unpcklps
imul
stos
sbb
pop
push
adc
sar
test
fwait
sub
nop
push
mov
sbb
push
add
and
jmp
pop
mov
inc
imul
movsb
pop
sbb
jns
fsubr
cmp
pop
cwtl
std
pop
lea
mov
push
lods
mov
shll
aas
lods
xchg
cmp
cmpsl
or
pusha
sbb
xchg
loopne
insb
add
inc
clc
sbb
or
fs
adc
push
cmpsb
sbb
push
inc
dec
lcall
xor
and
and
out
pop
andl
mov
mov
lock
mov
lahf
in
in
push
and
lea
pop
mov
dec
repnz
ret
pop
gs
push
xor
push
les
mov
xor
add
xchg
sahf
push
xor
push
add
or
jecxz
mov
inc
sub
sub
and
jg
divb
sub
push
pop
sbb
cmp
sub
sub
and
pop
outsl
sub
xor
das
sub
or
movb
add
add
mov
xchg
testl
pop
shll
cmpsl
mov
push
pusha
add
rclb
test
lods
dec
insl
dec
mov
adc
dec
pop
jo
addr16
adc
sub
mov
mov
inc
in
inc
bound
mov
sbb
movsb
mov
mov
push
mov
es
sub
push
mov
repz
sub
stc
adc
les
or
loop
dec
jne
jo
inc
jmp
xchg
mov
pop
mov
push
push
mov
inc
push
in
or
adc
loop
je
pop
out
add
push
scas
popa
call
sbb
imul
aaa
pusha
jg
cmovp
sbb
add
pop
inc
and
sbbl
add
inc
hlt
and
ja
xor
sbb
fdivr
pop
mov
adc
or
pop
pusha
int
or
sbb
xchg
sbb
jns
shl
push
inc
push
leave
xor
mov
mov
xchg
in
sub
add
clc
or
or
psubd
push
fildl
sbb
add
push
sbb
pusha
sbb
lods
push
fdivl
int3
mov
dec
dec
and
test
or
mov
mov
pop
xor
add
decl
push
dec
dec
dec
inc
dec
push
add
movsb
test
and
and
mov
and
xor
aaa
inc
fcmovnbe
dec
in
or
or
add
shrb
pusha
fisttps
push
jns
add
mov
mov
faddl
hlt
adc
pop
adc
sub
aaa
xor
insl
cwtl
js
loop
aam
sti
jmp
shlb
cmp
push
stos
pop
inc
ret
mov
and
xchg
lock
sbb
add
xor
ss
sbb
int
les
and
les
iret
mov
add
xchg
mov
decl
out
xor
push
adcb
adc
dec
movsb
adc
xor
out
adc
out
push
sbb
sub
cmp
ret
shl
or
xlat
xor
roll
pop
xor
adc
and
fists
push
jae
sub
fstps
sbb
push
test
mov
stos
inc
sti
and
or
and
mov
test
je
adc
test
and
xor
daa
sbb
cmp
les
out
jle
ss
xchg
out
add
dec
mov
pop
sahf
std
mov
or
and
cs
aaa
add
fsubrs
fiadds
mov
dec
xchg
fs
add
xor
js
jb
add
pusha
push
add
inc
push
out
adc
and
pop
popaw
movsb
inc
maxps
jle
and
out
jbe
negb
daa
icebp
lcall
inc
call
hlt
wbinvd
add
add
adc
shrb
and
fwait
js
nop
sbb
aam
pop
adc
sbbb
add
add
outsl
pop
sbb
movsl
icebp
cmpsl
xor
or
pop
js
dec
add
adc
inc
enter
adc
adc
push
mov
iret
push
adc
add
push
or
inc
repz
fwait
dec
jnp
insb
push
mov
mov
fsubrs
lret
lods
inc
rolb
pop
sub
cmp
fildll
lcall
or
test
in
adc
test
adc
add
add
push
or
or
loope
mov
add
pop
ret
or
push
mov
xor
push
add
pop
add
inc
xchg
mov
mull
hlt
movsb
movsl
push
out
out
outsb
xchg
mov
shrd
or
bound
lahf
pop
sub
jl
inc
pop
ret
je
femms
incb
loopne
test
aaa
mov
xchg
or
and
imul
xor
imul
imul
cmpsb
imul
lcall
push
dec
nop
sbbl
pop
xor
push
leave
movsb
test
push
adc
pop
push
sub
hlt
push
xor
mov
mov
or
les
dec
push
iret
outsb
lock
sbb
std
push
cmpl
jle
or
iret
les
inc
outsl
insb
adc
test
sub
add
mov
addl
mov
bound
or
inc
pop
mov
adc
dec
xor
mov
pop
sbb
and
dec
addr16
dec
sub
jne
mov
add
or
mov
fildll
xchg
mov
in
or
int3
fstl
and
and
fidivrl
jnp
dec
mov
scas
lock
pushf
or
or
sbb
push
jne
shl
pop
mov
movsl
sbb
sbb
jb
faddl
ficoms
xchg
push
inc
sahf
push
icebp
pop
add
cmp
adc
inc
mov
mov
mov
xor
jmp
xor
jecxz
mov
stc
add
xor
pop
mov
cltd
or
and
inc
fwait
and
mov
jae
hlt
dec
inc
cmp
imul
andl
adcl
aam
pop
pop
mov
pop
or
rorl
cmpsl
and
push
xor
in
pop
xchg
mov
adc
andb
popf
mov
std
cmp
jne
aaa
xchg
inc
and
dec
mov
or
dec
or
mov
sbb
inc
mov
jl
jno
mov
adc
jp
aas
test
cmp
and
push
lcall
and
adc
inc
scas
mov
dec
imul
fdivp
jmp
sub
das
adc
mov
inc
mov
adc
and
lock
insb
rol
lcall
pop
movsb
mov
mov
inc
call
or
pop
or
push
and
sbb
ror
repnz
sub
cmp
cli
ficoms
adc
nop
inc
adc
push
xchg
push
push
jmp
lods
pop
mov
xchg
and
adc
xor
mov
test
test
dec
cmpsb
popf
dec
aas
push
add
pop
xor
aas
and
sbb
add
mov
sbb
pop
out
aaa
jmp
or
movb
movl
popa
movb
pop
xchg
adc
adc
pop
enter
imul
nop
xchg
ss
sbb
push
cli
aad
push
fs
stos
add
cmp
push
imul
pushf
push
movsb
aas
je
jnp,pt
pop
dec
adc
fmull
repnz
sbb
cmp
sbb
les
add
adcb
dec
mov
pop
xchg
gs
dec
dec
cmp
cmp
adc
adcl
dec
inc
lret
inc
dec
adc
and
push
adc
in
pop
push
pusha
mov
scas
fmull
insb
lret
sbb
dec
push
inc
mov
cmc
es
popa
aaa
test
data16
add
or
pop
movsb
out
cwtl
dec
nop
shll
cmp
xor
icebp
js
xchg
inc
fadds
sti
push
ret
pop
dec
jne
test
rorl
fdivrl
out
mov
and
push
jnp
dec
adc
pop
or
movsb
inc
pop
ljmp
sbb
je
addr16
test
xor
mov
dec
push
push
ret
js
cmc
enter
pop
lahf
lods
add
aad
shlb
sahf
sbbb
jl,pn
inc
push
pop
cmp
mov
cmp
ja
inc
outsl
sub
jmp
sbb
mov
add
dec
push
test
bound
nop
fsubr
out
iret
or
dec
lods
xor
shlb
bound
test
shll
enter
cs
ror
js
int
cmp
adc
je
and
pop
jb
sbb
jl
cmp
and
orb
outsl
or
inc
jne
ss
out
dec
and
test
push
inc
mov
jnp
mov
jg
mull
call
je
arpl
scas
mov
jb
pusha
dec
mov
mov
imul
xchg
cmp
fdiv
push
push
cmp
or
cmp
mov
dec
xor
push
pop
push
add
jbe
add
addb
mov
pusha
lock
dec
test
inc
inc
imul
stos
sbb
out
cmpb
dec
jmp
mov
xchg
jg
sbb
adc
xor
cli
mov
pop
or
imul
pop
jne
fiadds
or
adcl
push
rorl
daa
test
add
in
add
sbb
adc
or
out
add
and
xchg
inc
outsb
into
sbb
daa
call
sub
cmp
jmp
aas
pop
add
jb
sbb
sub
sbb
outsl
in
cmpb
jae
iret
xchg
dec
jae
into
pop
je
mov
sub
cmp
aas
add
ret
insb
fisttps
arpl
mov
adc
push
pop
dec
and
fimuls
jae
jne
mov
push
adc
mov
arpl
adc
dec
loopne
sbb
add
sbb
dec
xlat
adc
adc
xor
mov
xor
jbe
sbb
or
pop
lods
or
sub
js
arpl
inc
jne
jg
outsb
dec
add
and
sub
sti
push
inc
mov
push
das
lods
xor
push
xchg
ficomps
inc
aas
cwtl
or
or
jb
cltd
push
cs
and
leave
loopne
insb
sub
aad
sbbl
cmovne
add
pop
cmp
push
pop
inc
push
dec
inc
push
lock
jl
pop
adc
pop
sbb
insl
outsl
gs
bound
movsb
addl
orl
mov
in
xchg
or
aas
sbb
cltd
sar
ljmp
insl
bound
sbbl
xor
into
dec
mov
pop
mov
pop
push
imul
lods
out
in
add
mov
inc
dec
lcall
sbb
into
and
dec
cmp
pop
sti
inc
imul
or
pop
pop
jl
and
insl
push
push
jbe
stos
add
pop
mov
out
orb
sbb
xchg
lret
divl
pop
mov
sub
mov
popl
repnz
lahf
cwtl
call
adc
sahf
loopne
in
pop
test
repnz
sbb
scas
add
in
sbb
adc
adc
hlt
xchg
notb
cld
push
add
cmpsl
add
test
dec
in
imul
xor
out
movsb
out
push
sub
in
fbstp
cwtl
in
cmp
lods
rorb
cmpsb
push
pushf
pop
imul
jbe
adc
adc
inc
jmp
mov
mov
xor
js
fcoms
jp
xor
stc
nop
xchg
pop
xor
jmp
jne
sbb
pop
add
pop
aad
or
or
dec
test
pusha
or
bswap
and
dec
and
adc
add
or
jno
or
cmp
or
bound
or
xor
adc
push
es
or
push
mov
icebp
mov
int
inc
and
jo
adc
je
or
jg
aaa
sub
mov
push
ljmp
inc
std
das
mov
pop
enter
fbld
invd
lea
adcl
loopne
and
ficoml
js
sbb
sub
cs
fadds
or
xchg
mov
aam
rorw
adc
jmp
imul
jp
push
jns
outsl
jo
addl
lahf
and
out
das
arpl
sub
mov
hlt
or
jne
sbb
xor
cwtl
jge
jnp
adc
nop
xchg
aam
add
nop
nop
or
push
cmp
inc
aaa
or
jo
addr16
adc
mov
arpl
adc
data16
mov
cmpsb
adc
lock
rolb
insl
xorl
imul
push
addl
orb
outsl
dec
popa
and
sub
mov
lods
mov
or
fisttpll
jb
test
sub
mov
mov
subb
sbb
and
fsubr
jo
dec
and
and
or
push
pop
jbe
pop
aas
inc
add
mov
mov
and
push
mov
or
imul
or
in
add
or
fdivs
es
add
push
rcr
inc
adc
fdivrs
push
or
push
jne
jns
inc
outsb
push
jg
mov
mov
mov
nop
xchg
ss
cwtl
or
incl
mov
push
push
dec
sgdtl
pop
fwait
inc
add
fs
negb
lea
outsl
popa
push
jmp
add
pop
push
pop
insl
mov
inc
or
push
imul
std
pop
xchg
mov
adc
xlat
scas
es
pop
sub
mov
clc
add
pop
xor
add
rclb
add
push
insb
add
pop
fmul
pop
faddl
pop
sub
jg
je
loopne
mov
add
in
or
add
add
add
xchg
rorb
repnz
push
ja
xchg
pop
js
ja
notl
sub
add
stc
add
push
push
int3
pop
lcall
xchg
sbb
dec
es
mov
popa
bound
cmp
and
fimuls
fimuls
movsb
fs
jecxz
xor
fdivrs
adc
out
shufps
adc
adc
popf
and
sub
add
add
popl
push
sbb
mov
incl
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lcall
mov
mov
mov
mov
mov
pushl
pushl
ljmp
mov
lods
call
call
arpl
dec
dec
ljmp
or
inc
orb
push
cld
xchg
xor
movsl
stc
pop
test
int3
imul
dec
push
hlt
xchg
fildl
fs
mov
mov
mov
sub
test
cwtl
mov
add
mov
pop
imul
inc
push
jl
data16
in
push
xchg
pop
jl
pop
repz
push
xchg
fcompl
andb
mov
int
pop
pop
and
insb
mov
xchg
scas
lods
iret
pop
push
sahf
orb
in
mov
pop
imul
push
popf
adc
add
enter
mov
lahf
pop
and
or
mov
aaa
mov
bound
ljmp
pop
jo
add
fwait
pop
and
ret
xchg
pop
sbb
or
lret
push
add
and
enter
push
sub
std
push
and
jp
insl
push
inc
ret
ds
orl
in
xchg
jmp
mov
loopne
sahf
mov
sub
aas
cmp
aas
jo
popa
fmul
mov
inc
insb
imul
imul
sbb
jle
frstor
popa
lahf
test
lock
scas
add
adc
pop
inc
outsb
arpl
enter
pop
cmp
loopne
jmp
aaa
or
push
imul
push
mov
adc
xchg
ret
into
mov
dec
lods
push
or
pop
sbb
sub
pop
lcall
or
mov
dec
bound
enter
cld
xlat
cmp
mov
xchg
dec
sbb
cld
sub
lods
inc
je
lcall
sub
cmpsb
pushf
addr16
pop
mov
lret
cmp
or
mov
xchg
inc
pop
cmp
mov
xorl
imul
fnstenv
lods
mov
fimuls
sbb
mov
shrb
lods
lahf
add
call
in
push
xor
add
shll
shrb
pop
inc
test
addr16
xorb
fldenv
enter
add
cmpsl
or
pop
in
adc
push
push
jae
pop
insb
mov
xor
mov
add
push
mov
push
and
mov
test
in
mov
pushf
push
inc
je
pop
cmp
hlt
fwait
push
inc
and
movsb
arpl
inc
insb
pop
pusha
mov
fadds
push
cmp
fs
lods
jae
int3
or
cmp
adc
jo
daa
sub
xor
dec
std
arpl
lds
pop
push
jecxz
mov
das
out
inc
lea
sbb
add
add
mov
push
dec
test
arpl
jb
mov
sub
enter
xor
into
cltd
add
pop
inc
dec
cmpsb
cmp
stc
cwtl
push
int3
pop
fwait
sub
dec
adc
or
jmp
mov
dec
outsb
int3
sub
fsubrl
pop
xor
loopne
and
aad
insb
fs
or
xor
pusha
daa
in
inc
dec
subb
ret
imul
insb
add
sti
sub
adc
add
push
lret
or
xor
cmc
pop
dec
subl
or
int3
add
repz
fstpl
push
outsl
jo
jo
clc
mov
jo
mov
sbb
sbb
push
inc
xor
fnstsw
jno
mov
dec
xor
pushf
loop
push
int
dec
sbb
out
push
sbb
cltd
int
outsl
aaa
ficoml
sbb
ds
xor
cld
mov
in
cmp
jge
addb
gs
movsl
inc
dec
sbb
cltd
and
popa
or
cmp
inc
inc
and
push
adc
je
add
add
rcrl
scas
cmp
test
pop
mov
sbbl
push
mov
dec
scas
daa
pop
push
cmp
outsb
pop
popa
sub
push
jbe
imul
fisttps
xchg
movsb
adcl
ljmp
sbb
ret
add
xchg
idiv
or
fcoms
xor
inc
push
cwtl
cwtl
roll
inc
mov
insb
and
pusha
cmp
push
enter
add
dec
adc
add
pushl
cmpsb
sbbl
push
pop
inc
sbb
xchg
aaa
negb
xchg
jbe
sar
rolb
push
ret
cltd
or
leave
sub
pop
sub
inc
ja
xchg
sub
dec
fadds
testl
sbb
sbb
cmc
and
sbb
pushl
fisttpl
mov
std
dec
hlt
mov
mov
insl
hlt
dec
data16
sub
push
in
adc
and
dec
jb
dec
dec
aaa
fs
lcall
shrb
or
dec
mov
push
mov
inc
imul
xor
sbb
xchg
addl
cmp
cltd
mov
loope
xor
push
xor
and
test
lahf
add
xchg
dec
inc
inc
shll
xor
fcomps
sbb
cld
push
sbb
sbb
inc
data16
push
sarb
lods
push
sti
jae
jae
popf
jns
call
imul
shlb
fldenv
inc
rclb
sti
dec
fcoms
mov
mov
dec
loopne
clc
test
push
cmp
and
inc
push
push
imul
push
add
dec
rcrl
or
push
dec
adc
int3
je
or
push
push
adc
into
push
sbb
je
inc
cmpb
into
rcrl
jbe
jne
fcomps
in
and
or
or
push
sbb
data16
add
mov
dec
test
cmp
xchg
lock
sbb
or
shrb
ss
aaa
pop
pop
or
aam
adc
dec
aas
nop
pushf
sub
mov
mov
test
sub
inc
mov
mov
mov
mov
rcll
mov
mov
mov
dec
mov
fwait
scas
out
aaa
mov
push
imul
test
pop
sub
xchg
or
cmp
push
mov
add
out
nop
dec
adc
sbbb
add
or
lods
int
cmpsb
cmp
sbb
pop
imul
scas
cmp
subb
movsl
test
movsb
cmp
pop
push
in
pusha
xchg
adc
sysret
sbb
dec
xor
add
push
push
or
scas
pusha
or
cmp
cmp
aaa
popa
push
aaa
daa
mov
and
scas
add
das
mov
push
xchg
push
dec
pop
push
mov
dec
mov
andps
mov
add
mov
fadd
popw
and
stos
adc
mov
and
cmc
push
pop
divb
in
imul
add
sub
int
push
cmpsl
lcall
cli
in
mov
call
pop
add
aaa
push
cwtl
movsl
pop
and
es
loope
xchg
loope
xorb
subb
jo
outsb
push
pop
xchg
adc
test
sbb
js
je
push
or
mov
xchg
and
mov
and
mov
pop
test
add
das
sbb
cld
popa
sub
mov
jo
jae
hlt
outsb
mov
popa
xchg
iret
xor
cmp
iret
jbe
adc
push
into
xor
xchg
test
sbbb
add
push
xor
mov
hlt
fldt
stc
lahf
call
or
fidivs
pop
push
or
sbb
rorb
sub
bound
fidivs
mov
pop
xor
cltd
xchg
ss
in
fwait
xor
pop
adc
or
cmp
and
pop
mov
mov
inc
pusha
sbb
xor
pop
enter
xor
sub
push
or
mov
lods
test
lcall
jne
aam
nop
mov
mov
inc
and
loopne
mov
mov
cmp
inc
testb
inc
adc
mov
add
sbb
or
mov
or
cmp
inc
xor
call
or
pop
stc
cmpsb
sub
in
sbb
push
and
lds
cmp
fidivrs
cmp
fidivl
push
and
inc
and
pusha
data16
mov
iret
ja
ficompl
movb
add
movsb
sbb
or
adc
dec
pop
xchg
adc
adc
inc
sbb
pop
imulb
fcom
push
xchg
add
mov
ffree
sbb
ja
das
rcrl
inc
adc
xor
add
imul
add
xchg
dec
push
xchg
scas
add
push
xor
push
pop
stos
add
xor
or
push
xor
push
sbb
xchg
lods
push
or
jne
lods
add
fucomip
add
loop
xorl
and
or
mov
hlt
or
and
ds
sbb
sub
leave
add
and
inc
inc
pop
mov
nop
sub
aam
add
aas
or
shr
sbb
push
and
push
mov
dec
or
mov
inc
or
inc
sbb
dec
and
cmpsl
xor
inc
add
or
push
xor
cli
ds
sub
pop
inc
add
and
xor
std
xor
pop
sbb
popa
sub
cmp
push
adc
add
jb
or
js
xor
gs
or
outsb
push
shl
xchg
add
in
xchg
and
xchg
lahf
and
add
jl
subl
push
lods
push
das
mov
data16
mov
test
dec
cmp
jmp
mov
adc
pop
add
inc
mov
inc
popa
mov
sti
jo
shlb
or
push
inc
add
dec
sbb
iret
add
cld
cmp
add
rclb
dec
add
and
dec
mov
xchg
nop
xchg
add
clc
inc
fsub
or
dec
mov
xor
xlat
xor
rorl
pop
dec
mov
nop
dec
xor
test
inc
outsl
rorb
test
hlt
push
inc
pusha
loopne
mov
cmp
or
push
push
cmp
inc
pop
sbb
adc
nop
pop
movsl
leave
subl
sbb
add
insb
add
adc
std
pop
daa
movsb
js
fsts
jp
lcall
mov
mov
jmp
test
in
xor
and
add
pop
cwtd
cwtl
fsubrs
sub
xor
insb
cmp
pusha
adc
mov
add
gs
addb
js
pop
bound
inc
or
cmp
jno
inc
mov
pop
hlt
neg
jmp
arpl
je
sbb
and
adc
mov
push
mov
push
test
add
add
push
outsl
pop
adc
and
mov
add
inc
adc
insl
add
cwtl
push
scas
xchg
push
bnd
jo
mov
inc
inc
push
ds
jmp
inc
mov
or
nop
adc
mov
mov
aas
pop
push
rorl
mov
jbe
mov
rol
jns
inc
mov
dec
mov
or
sub
nop
sbb
mov
cmpsl
les
lea
xor
or
and
inc
xor
inc
loop
and
inc
add
mov
mov
sti
xor
or
rorb
sbb
pop
dec
or
push
mov
adc
inc
fwait
lods
pop
fcompl
sub
mov
add
cltd
sti
dec
sarb
and
pop
jne
sub
call
dec
enter
xor
aaa
and
or
and
fmuls
xchg
dec
mov
or
je
ss
jmp
mov
vmovntps
adc
ficompl
std
jmp
xchg
add
push
jns
mov
repz
pop
push
xor
add
and
movsb
sbb
fdivrs
cmpl
pop
jle
push
inc
inc
dec
lcall
sahf
push
push
and
shrl
dec
jno
add
dec
inc
sbb
rcr
adc
scas
add
sbb
and
mov
inc
mov
jne
inc
sbb
scas
xlat
nop
and
sti
add
jl
movb
add
push
add
push
add
pop
sub
or
andb
pop
dec
inc
mov
cmpsb
cmp
je
mov
pop
mov
cltd
scas
cmpsb
ds
mov
pushf
aaa
add
sbb
test
inc
mov
call
jle
fucomip
xor
mov
push
add
outsl
dec
push
or
or
je
pop
das
pop
lock
mov
into
cld
push
mov
enter
sbb
mov
jno
sbb
or
push
andl
test
sbb
push
cmp
lds
cmp
fs
xor
mov
xor
js
pop
inc
das
mov
das
dec
cld
push
les
jge
scas
inc
movsb
or
jbe
out
test
jb
cmp
inc
fmull
sbb
ret
push
mov
sub
push
or
fsubs
sbb
sbb
and
mov
jl
cmpl
push
cltd
inc
mov
xor
push
cmp
in
cmp
fs
xor
pop
mov
mov
sub
pop
sbb
push
jb
xlat
jo
xor
fisttpl
and
xchg
fistl
mov
icebp
lods
push
stos
scas
mov
push
mov
mov
push
xchg
sub
sbb
xor
cwtl
cmp
pop
loopne
loopne
arpl
xchg
idivl
data16
adc
or
pop
ljmp
es
and
ds
repnz
notb
mov
mov
adc
or
lea
and
xchg
int3
xchg
jo
add
es
xchg
add
loopne
xchg
js
test
mov
popa
mov
or
gs
rcll
sub
rcrb
mov
xchg
enter
sbb
aas
jno
or
push
add
mov
push
and
push
int3
sbb
push
inc
pop
mov
sub
add
sarb
and
loope
andl
mov
loop
mov
or
js
add
mov
inc
or
inc
icebp
inc
mov
daa
add
iret
lret
js
test
mov
sti
sti
cmpb
cmpsl
loopne
test
sub
inc
lret
sbb
loopne
rorl
out
test
rorb
jmp
jno
insb
dec
sbb
sub
pop
cmp
mov
fcmovu
push
daa
push
pop
rclb
rcrb
psubsb
pop
sub
add
pop
sbb
jg
ss
sbb
dec
popa
cmpb
sbb
cmp
mov
pop
sbb
rol
shr
mov
in
add
and
and
jbe
jbe
xchg
test
adc
lds
xchg
pop
je
mov
fisttpl
mov
stos
outsl
sbb
inc
loopne
or
dec
jecxz
out
popf
inc
rclb
xchg
fistpll
mov
fldt
adc
daa
jns
inc
dec
pop
movb
and
es
mov
sub
inc
mov
insb
xchg
push
and
pop
dec
outsl
and
or
and
add
add
nop
nop
andb
hlt
mov
dec
call
adc
inc
popf
jno
xchg
and
daa
push
mov
dec
jl
loopne
sub
arpl
mov
xchg
test
sarl
mov
cmp
or
cmova
cwtl
sbb
cmpsl
push
retw
mov
push
push
push
lea
push
and
push
sbb
test
les
adc
xor
cmpl
dec
gs
jge
and
mov
sbb
out
sbb
pop
mov
jo
push
jg
mov
outsl
dec
ja
mov
inc
lret
in
or
sbb
test
xchg
mov
mov
pop
orl
pop
jns
rolb
adc
dec
test
rclb
sbb
jmp
cmp
or
push
fbld
shll
or
xchg
sbb
in
add
xchg
orl
add
test
pop
xchg
push
inc
in
or
clc
lock
add
mov
dec
je
mov
mov
add
mov
mov
adc
mov
push
xchg
push
test
pop
push
dec
add
sbb
dec
shrl
movsb
cmp
or
push
jle
mov
mov
jp
orl
inc
test
and
jb
testb
dec
jmp
push
jne
jecxz
xchg
dec
push
adc
push
ret
mov
adc
or
inc
mov
sbb
add
sub
fsubrs
xchg
decb
mov
imul
lods
xor
rcr
xchg
sbb
push
mov
and
xchg
mov
xchg
or
xchg
add
faddl
push
pushf
xchg
add
sbb
sub
sbb
xlat
cmpsb
lods
addb
orl
mov
dec
jle
lret
add
jno
xchg
mov
mov
lods
sarb
pop
xchg
loopne
loope
mov
push
jecxz
xor
es
test
sbb
lock
mov
mov
add
rorb
dec
andl
xchg
shll
add
inc
cmpb
push
jp
add
test
xlat
cvttps2pi
or
mov
sbb
xor
aas
aam
sbb
cmc
push
syscall
sbb
sbb
mov
in
jnp
pop
sub
repz
and
ret
icebp
testb
and
mov
push
sub
mov
dec
inc
push
in
add
mov
and
movsb
or
lock
scas
movsl
scas
dec
mov
test
cmc
mov
xorl
iret
movl
rcll
pop
insl
insb
jle
test
movsb
sahf
add
mov
and
js
idivl
push
call
add
sub
mov
or
or
jg
xor
inc
int3
hlt
add
pop
inc
mov
push
sbb
inc
daa
mov
data16
sub
and
fimuls
ret
popa
add
add
fsubs
pushf
insb
mov
int3
mov
inc
movsl
cmpsl
push
lods
xchg
xor
mov
test
mov
cwtl
sbb
adc
loopne
loope
sub
sarb
mov
das
xchg
mov
add
js
fsubrs
stos
mov
ss
lea
xchg
xchg
pop
xlat
loope
lcall
or
cld
sub
jns
mov
inc
orl
sbb
hlt
iret
sbb
ficomps
pop
push
cmp
mov
aas
imul
jne
test
insb
dec
push
adcl
xchg
ror
sbb
pop
dec
lods
push
adc
add
subb
fiaddl
inc
iret
popa
xchg
testl
sbb
enter
or
outsb
jae
inc
int3
jnp
xchg
push
andl
xchg
add
movsb
mov
sbb
mov
gs
add
push
cmp
cli
test
sbb
sub
ja
pop
push
shl
mov
mov
xor
jg
sub
and
jmpw
inc
insl
dec
jp
jle
clc
jbe
stos
sbb
outsb
enter
dec
scas
xchg
sbb
or
in
movsl
je
mov
mov
jbe
adc
mov
and
pusha
dec
test
iret
sysexit
add
xlat
xchg
push
mov
mov
or
pusha
pusha
mov
jo
leave
insb
jo
gs
mov
xor
or
xchg
shll
mov
jnp
push
jo
dec
je
hlt
cmp
orb
adc
inc
add
cmpsb
add
daa
push
pop
test
mov
psadbw
and
dec
mov
subb
or
pop
pop
xchg
repnz
push
sbb
jbe
shl
push
enter
mov
fdivrl
and
popf
notb
add
and
push
adc
sbb
aam
pop
or
jb
push
insb
insb
and
push
leave
je
cli
add
sbb
xor
sub
or
cmp
sub
lds
nop
or
dec
loopne
fbld
ret
adc
sbb
and
cwtl
mov
or
mov
xor
add
pop
roll
adc
add
add
inc
loopne
add
mov
dec
pop
xor
mov
not
pop
sbb
mov
mov
js,pn
roll
add
dec
dec
dec
and
mov
inc
xor
add
adc
add
mov
mov
xlat
ljmp
or
in
mov
rolb
test
add
pushf
xor
cmpsb
pop
pusha
rorl
dec
fcompl
inc
lahf
loope
push
sbbl
push
add
add
sbb
movsl
sub
loope
dec
pusha
movsb
das
test
ss
and
push
imul
jl
sbb
lea
dec
test
ret
fnstsw
cmpb
movsl
xchg
subl
enter
andl
pop
add
xchg
sahf
inc
pop
push
mov
sbb
insb
cmpl
shlb
out
in
js
movups
xchg
mov
pop
ret
and
sub
add
mov
jmp
xchg
sahf
and
rclb
dec
daa
xchg
adc
mov
xchg
or
add
ds
cmp
push
ds
sbb
int3
enter
loop
frstor
push
clc
cmp
adc
cmpl
lahf
out
cmc
sub
push
jnp
clc
sub
add
adc
jp
push
mov
lods
dec
add
sti
and
insl
cmpsl
adc
fidivs
shlb
and
or
ss
inc
add
popf
stos
add
or
in
or
xchg
icebp
or
imul
aad
pop
rorb
lea
pop
push
push
lock
mov
and
fistl
and
lods
mul
xchg
arpl
push
mov
cmp
lods
pop
adc
js
outsb
addr16
inc
aaa
and
popa
cmp
lcall
je
mov
add
dec
push
lods
adc
and
push
pusha
je
sar
fmuls
sub
adc
ret
loope
sbb
adc
rolb
xchg
fsubp
xor
sbb
mov
int3
rol
sbb
lcall
mov
inc
testb
je
in
mov
aaa
adc
cmpsb
adc
pop
xchg
cmp
sub
inc
add
jb
mov
mov
out
push
cmpsl
or
popf
je
cld
sbb
jne
cmpb
xor
cmpsl
mov
nop
hlt
subb
cmc
fistpl
add
push
add
xor
and
or
jp
call
xor
clc
sbb
inc
cmp
inc
pop
add
mov
insl
adc
subl
or
bound
push
scas
imul
xchg
movsl
clc
jg
je
out
jnp
js
jb
or
and
dec
or
jg
cmp
sub
mov
bound
je
daa
add
sub
add
movsb
fistpll
pop
jne
sbb
xor
test
jne
inc
xchg
push
ljmp
xor
cmpsb
daa
sbb
and
or
sbb
mov
test
push
push
dec
inc
pop
cmp
out
mov
pop
repnz
inc
and
pop
enter
mov
adc
sub
sbb
adc
loopne
adc
adc
xlat
bound
push
dec
sbb
and
cmpsb
inc
sub
or
mov
lea
test
shrb
pop
in
xor
add
fstpt
push
cmp
or
sub
xchg
int3
xor
aas
pop
test
movsl
js
sbb
enter
hlt
cmp
mov
hlt
mulb
loopne
and
dec
addb
push
lea
xchg
es
pop
xorl
test
push
rolb
push
fs
jne
jae
ds
nop
add
inc
lock
out
arpl
add
push
adc
or
sub
lods
lock
gs
push
or
push
lock
xchg
loope
outsb
lea
adc
adc
lock
loope
mov
cltd
rorb
lock
ljmp
xchg
int3
xchg
jl
and
sbb
xor
les
daa
cwtl
push
xchg
test
movsl
sbbb
mov
cmp
dec
lds
sbb
cmp
in
mov
sbbb
aaa
inc
leave
mov
add
cmpsb
aaa
sub
jecxz
loope
js
push
shl
or
pop
dec
push
xorb
call
cmovns
jecxz
mov
sub
adc
shll
jecxz
or
xchg
lea
sbb
or
xor
cmp
jne,pn
push
xchg
das
inc
test
and
decl
aad
inc
push
sbbb
ficoms
test
fmuls
inc
xchg
movsl
and
popa
add
add
mov
and
sbb
lods
inc
adc
add
subb
int3
ret
nop
andl
fwait
ds
mov
adc
jne
shrb
inc
xchg
jecxz
pop
and
dec
adc
cmpsl
sub
inc
or
test
dec
test
fsts
xchg
cmp
rclb
push
int3
sbb
pop
cmp
dec
jno
sti
in
xchg
faddl
icebp
pushf
push
dec
out
andl
notl
and
jle
sub
push
adc
xor
pop
pop
push
sub
push
push
push
push
mov
push
insb
sub
xchg
and
xlat
pop
add
insb
adc
pop
pop
pop
fwait
andb
push
jecxz
or
ja
loopne
lds
xor
fistpll
test
push
and
add
add
lods
sbb
sub
cmp
xlat
add
lret
push
push
das
xchg
dec
xor
adc
jmp
cmpsl
movl
jno
dec
js
jne
popa
push
clc
push
mov
std
push
xor
inc
or
jne
clc
xchg
xchg
or
pop
les
cmp
push
or
mov
sbb
arpl
je
les
cld
movsb
pop
xchg
add
cmp
jl
ret
popf
pop
int3
push
inc
and
dec
cltd
jno
cltd
pop
orb
loope
xor
adc
add
test
push
push
pop
mov
test
jae
inc
sub
xor
sbb
sub
mov
dec
aas
or
mov
rolb
into
jmp
push
xchg
jo
addb
movsl
pusha
mov
cmpl
sbb
add
lahf
pop
jl
imul
cmp
adc
mov
sbb
add
xchg
push
dec
bound
jl
xchg
and
dec
mov
xchg
cmp
loopne
test
add
aaa
jno
das
adc
cmpsb
jo
adc
aaa
test
imul
sbb
push
sbb
mov
xor
mov
add
add
int
movsb
enter
faddl
sbb
sub
shlb
sub
lods
sbb
fldt
orl
pop
pop
fstpl
mov
sub
push
push
push
jp
push
insb
sub
cld
dec
leave
inc
jo
and
test
imul
adc
mov
scas
push
jno
ret
mov
cmp
sysenter
xchg
xchg
or
leave
int3
sub
out
hlt
je
cmp
jp
cmpb
in
gs
add
push
mov
dec
into
sahf
out
loop
cmp
sbb
add
arpl
mov
mov
jne
jmp
stos
popa
pop
leave
ja
ror
cmpb
fs
ret
pop
adc
mov
pop
add
mov
pushf
adc
xchg
jnp
mov
pop
insb
rcll
lahf
push
push
int3
add
pop
fs
fidivrl
pusha
mov
xor
je
fldt
ljmp
popa
test
ret
xor
lds
xor
sbb
lock
shrb
jo
or
cld
popa
cld
or
les
cmp
mov
daa
fdivs
dec
sub
jecxz
inc
or
jbe
orl
inc
popa
jle
dec
jl
imul
inc
adc
into
xchg
leave
mov
and
adc
push
ljmp
mov
xor
and
inc
clc
dec
je
add
lds
je
ss
pusha
cmp
mov
adc
jmp
int
mov
sub
imul
sbb
and
sahf
popf
data16
jmp
mov
jo
mov
mov
push
push
imul
ror
cmpsl
loopne
cmp
pop
push
jbe
cmp
jl
cmp
incb
movsb
or
mov
adc
and
jo
jnp
pinsrw
or
lea
push
addl
sbb
xchg
add
adc
pop
mov
or
sarl
sbb
insb
pushf
or
dec
dec
jg
cmc
sub
in
scas
add
pusha
and
or
jne
je
inc
jo
daa
ljmp
ret
test
sub
popf
mov
inc
xchg
pusha
fildll
jl
rorl
mov
les
imull
mov
popa
subb
daa
sbb
orb
lods
mov
add
jne
lret
shl
mov
add
push
andb
andb
les
bound
mov
push
movsl
inc
ja
add
outsl
xor
lock
xchg
push
xor
push
cmp
dec
aad
cmp
jnp
dec
mov
rcr
and
jbe
mov
adc
aaa
mov
jb
jne
jo
push
push
outsb
sbb
out
mov
sbbl
sub
cmc
popl
lea
mov
push
fisttps
mov
mov
and
or
mov
add
push
cmp
in
push
insl
dec
and
add
test
addl
fcoml
jne
cmp
sti
mov
add
fs
ret
aam
fisubrl
call
cmp
rolb
add
jecxz
xchg
push
xor
pop
sub
in
pop
shll
or
add
mov
inc
lods
loopne
inc
or
push
dec
adc
add
push
outsl
pop
add
push
push
mov
dec
imul
pop
adc
mov
sbb
push
dec
inc
adc
aam
test
push
pop
inc
pop
arpl
andl
cmp
icebp
add
nop
adc
orl
cmp
mov
test
xchg
sub
arpl
int3
subl
popa
lock
test
divb
add
xor
imul
pop
jns
andb
adc
loop
or
push
rolb
sbb
int
pusha
xorb
negb
cmp
adc
and
or
jmp
lret
or
mov
xor
add
xor
inc
adc
shlb
mov
js
fcomps
test
cmc
fdivs
sub
sbb
dec
add
add
xchg
repz
xchg
inc
jecxz
inc
stos
xchg
aam
or
pusha
dec
pop
pop
sub
add
cmp
sub
ret
and
adc
adc
add
pop
dec
sbb
push
or
ja
mov
jl
xchg
les
adc
inc
pop
sub
xlat
shlb
lahf
dec
push
sub
pushf
pop
push
jmp
rolb
hlt
or
push
test
add
repz
xor
outsb
js
fld
ret
out
push
inc
pushf
xchg
mov
pop
jle
test
pop
es
add
lods
jmp
movb
mov
daa
push
and
cmpsl
call
add
lds
jp
push
mov
mov
cmpl
in
pop
jnp
mov
xor
cmp
jmp
push
test
sbb
loope
add
dec
dec
inc
dec
push
sbb
xchg
or
ret
mov
adc
sub
mov
add
test
fwait
sbb
ret
xchg
mov
mov
inc
dec
sbb
pop
and
gs
fiadds
inc
or
call
pop
xchg
adc
sbb
enter
lea
es
lods
jge
ds
loope
pusha
xchg
ja
add
pusha
imul
inc
mov
mov
imul
pop
incl
mul
adc
subb
pop
bound
cmc
out
push
sahf
or
gs
lock
lea
or
or
and
push
sbb
cmc
out
xor
adc
bound
ds
movsb
mov
cmp
inc
pop
cld
xchg
or
add
jl
inc
xor
dec
cli
stos
jnp
clc
lock
mov
or
sub
mov
or
sbbl
jne
test
inc
enter
push
mov
ja
iret
in
and
mov
inc
dec
fsubl
jnp
inc
push
xor
xchg
sub
xchg
and
ret
out
jmp
pushf
inc
roll
repnz
out
testb
cs
pusha
loopne
fsubrl
rorl
outsb
pop
mov
adc
pop
sub
movsb
add
cmp
out
push
les
cwtl
jmp
cmp
adc
test
adc
xor
sub
sub
pop
sbb
subb
and
dec
cs
dec
jmp
and
movsb
insb
sub
and
mov
push
retw
add
inc
dec
lods
dec
jne
stos
jle
cmp
addl
adc
ret
adc
sub
mov
nop
xor
cmp
mov
dec
xor
inc
push
push
mov
rclb
dec
xor
popf
or
xor
pop
cmpsb
ret
cmc
sbb
mov
lods
inc
add
push
sub
mov
enter
add
add
mov
ret
and
jne
dec
test
jle
mov
sbb
shlb
or
fsubrs
jmp
jbe
mov
and
pop
mov
int
mov
push
cli
sub
bound
add
inc
adc
and
push
mov
mov
sbb
add
or
xor
push
nop
and
add
fisubrl
insb
push
test
sbb
and
lock
sub
mov
adc
adcl
mov
outsw
fdivs
cmpl
sbb
rcl
xchg
movsl
pop
pop
sbb
cmp
cmp
sbb
push
adc
and
jo
cmp
sbb
aas
xorl
push
push
mov
mov
or
lea
jns
pop
mov
std
insl
testb
iret
je
cmp
je
ja
cmp
cmpb
jmp
and
insl
sbb
jl
jns
push
mov
push
pusha
hlt
xchg
dec
cmc
flds
movsb
insb
dec
inc
lahf
adc
pop
addr16
and
pop
movsb
test
xchg
rolb
jo
stos
ds
insl
adc
push
sub
push
pop
in
mov
push
xchg
push
mov
repz
fwait
jl
out
orl
add
mov
movsb
scas
mov
sbb
nop
sbb
mov
dec
add
and
mov
dec
add
xor
and
sar
cmp
add
sti
or
sbb
mov
dec
xorl
nop
xchg
in
dec
aad
sbb
cmc
ljmp
push
jecxz
sbb
scas
or
pop
nop
adc
mov
test
jo
mov
inc
shrb
xchg
sub
lods
fcomip
test
pop
push
insl
mov
daa
mov
mov
add
dec
jne
arpl
cmp
pusha
cld
bound
or
inc
pop
shlb
add
lretw
cmp
or
jns
fldt
xchg
sub
insb
xor
xor
and
cmp
sti
fnstcw
push
cmp
inc
pop
mov
inc
hlt
xor
fimull
inc
lods
arpl
lods
popl
xor
lock
adc
push
pushf
movsl
rorb
scas
jnp
lock
lea
lock
add
pop
mov
andb
and
cmpsl
test
mov
jno
adc
push
xor
popf
cs
fisttps
notb
add
adc
and
push
movzbl
popa
fwait
add
pusha
clc
mov
xor
es
adc
cmp
push
push
sbb
dec
leave
sbb
or
in
add
fwait
jmp
dec
roll
push
add
imul
aaa
add
je
pop
cmc
xor
lahf
dec
push
nop
cmpsl
xor
lea
mov
xchg
add
mov
iret
jle
fnsave
sbb
stos
fwait
add
nop
jecxz
loopne
shll
sbb
imull
arpl
xor
or
and
xchg
shrb
or
sub
cltd
mov
fsubrs
or
push
adc
je
xor
ret
add
sbb
add
inc
xor
add
les
out
mov
aad
add
push
and
loope
xor
test
sub
add
dec
roll
mov
sbb
dec
lock
leave
adcb
push
push
cmpsl
clc
aam
daa
out
xchg
mov
dec
sub
jp,pt
add
mov
inc
add
inc
push
adc
es
lock
mov
xlat
inc
or
aam
adc
fwait
push
xchg
jge
test
xchg
je
pop
xchg
pop
xchg
mov
jge
inc
rolb
rcrb
aad
out
xor
add
and
dec
push
js
add
scas
push
push
mov
cmp
inc
add
mov
jo
orl
jo
inc
xchg
orb
jbe
mov
and
ret
push
xchg
mov
pop
pop
add
jp
push
push
arpl
and
mov
inc
push
cs
jecxz
xor
jns
ja
lahf
sub
fwait
inc
pop
inc
add
mov
inc
imul
daa
push
fucom
lds
push
xchg
mov
fidivrl
icebp
popw
adc
add
push
pop
or
out
and
pop
pushf
dec
jmp
pop
mov
loop
iret
movb
inc
pop
jb
add
xor
jmp
nop
or
xor
dec
shr
mov
cmp
add
popa
mov
push
rclb
call
cmp
arpl
into
inc
ss
and
test
sbb
add
xchg
mov
mov
xlat
mov
daa
dec
add
sbb
neg
imul
lds
sbb
fisubrs
and
mov
push
mov
xchg
adc
xor
xor
enter
adc
push
add
push
xor
and
xchg
sub
and
inc
lahf
mov
mov
add
mov
mov
xchg
xchg
push
sbbl
hlt
add
mov
push
rcrl
jne
or
jnp
mov
cmpsb
inc
ret
clc
xchg
add
idivl
push
pop
xor
fisttps
imul
fsubs
sbb
or
testl
adc
fs
or
sbb
in
fidivrl
pusha
jmp
ret
jo
sub
pop
imul
sub
and
cltd
testb
or
add
mov
sbb
mov
clc
mov
daa
jmp
push
pop
sub
dec
pusha
sahf
and
adc
sub
mov
pusha
ror
jg
mov
xor
lock
lock
jnp
dec
push
adc
out
dec
pop
sbb
push
lea
adc
pusha
fiadds
adc
and
jnp
pop
add
and
sbb
push
pop
and
sbb
sbb
inc
xchg
adc
cmc
stos
pcmpeqw
add
sub
mov
movsb
xchg
loope
xorb
add
icebp
mov
scas
rcll
fcoml
cmpb
test
xchg
jo
jo
mov
fcmovnb
adc
in
push
movsb
sbb
and
xchg
fsubl
sub
add
sbb
loopne
lock
fsts
hlt
and
shlb
mov
lods
xlat
jle
xchg
movsb
add
mov
and
mov
add
cmp
pushf
sub
jl
xor
xchg
push
and
dec
xchg
cmc
dec
jbe
xor
addr16
jl
rcl
gs
rcll
and
inc
xchg
movsl
adc
test
fidivrl
or
sbb
scas
lahf
xor
jmp
sbb
xchg
imul
mov
je
ret
jge
mov
sbb
mov
repz
xchg
lret
clc
xchg
sbb
ljmp
std
add
insl
xchg
push
or
add
mov
jno
mov
scas
leave
les
rorl
add
sbb
shll
and
push
int
adc
pop
repz
mov
push
loopne
jne
pop
add
lea
sub
sar
jo
sarl
roll
aaa
cwtl
jl
inc
dec
cmp
jmp
jno
jbe
in
js
xor
add
xor
push
pop
arpl
rolb
or
test
xor
adc
clc
push
and
sub
outsb
loop
sbb
cld
and
add
or
add
sti
jo
jmp
jne
push
es
cmpsb
sub
push
cmpsl
mov
pop
dec
add
dec
add
add
das
dec
pop
jns
add
leave
mov
adc
lds
cmp
inc
popf
adc
adc
pushf
inc
cs
adc
adc
ss
rol
add
sub
xchg
sub
push
sub
or
jb
sub
push
inc
xor
sbb
add
mov
adc
loope
inc
stos
scas
je
adc
and
xchg
ficoml
xchg
cmp
fs
scas
sbb
or
inc
fcoml
dec
or
lea
pop
loope
pop
push
and
adc
outsl
in
dec
movsl
and
pop
int3
lea
mov
dec
cwtl
mov
scas
dec
pushf
out
inc
and
xor
jmp
das
sbb
lcall
lock
xchg
or
push
mov
pushf
andb
xchg
sub
jmp
lcall
mov
sub
mov
js
cmp
test
sub
xchg
xchg
ss
ja
sbb
jle
imul
sub
sahf
jae
pop
nop
add
mov
xchg
ja
cmpsb
push
add
repnz
xlat
xchg
inc
leave
add
dec
lea
rorl
stos
call
loop
pushf
rorb
and
mov
xchg
or
test
jbe
sbb
add
pop
xchg
or
movsb
or
mov
cmp
cmp
xchg
add
xchg
jo
daa
mov
and
inc
jmp
sbb
jne
and
add
xor
mov
add
or
and
and
sub
lret
mov
lcall
and
push
jae
fbstp
xchg
test
call
sbb
adc
sti
xorl
fisttpl
add
adc
popa
xchg
jmp
xchg
sub
mov
xchg
inc
flds
aas
sbb
ret
fwait
or
pop
bound
pusha
mov
ja
add
data16
mov
mov
shlb
test
das
in
shlb
and
inc
xchg
ja
loopne
fwait
mov
jb
xchg
jle
mov
adcb
test
sbb
cmp
or
and
xchg
inc
pop
loopne
lods
loopne
stc
and
pop
aam
or
push
ss
sbb
xchg
pushf
sarl
jmp
sub
sub
test
insb
push
ret
pop
push
fst
or
xor
xor
cs
mov
in
stos
cwtl
gs
lahf
dec
xchg
push
sbb
outsl
pop
sub
sub
sub
and
sub
pushf
addl
cmp
cmpb
lret
test
pop
cltd
sbb
mov
cmpsb
rolb
fadds
arpl
stos
cmp
mov
js
setns
test
sbb
not
sbb
sbb
mov
pop
lods
xor
lea
pop
xor
shrb
add
push
ret
cmp
daa
dec
sub
cmc
in
adc
inc
xor
inc
in
jo
inc
not
jno
sub
cwtl
les
pop
xchg
mov
stos
add
add
sub
scas
mov
add
and
pop
stos
pop
push
xorb
rcl
fistpll
adc
and
and
mov
add
outsb
stos
faddl
push
scas
loope
dec
sub
lea
out
ret
add
pushf
and
mov
xchg
push
dec
inc
add
jnp
xor
inc
shl
fistl
or
negl
lds
mov
pop
sarb
mov
xchg
inc
mov
add
mov
adcb
mov
ret
aaa
les
clc
and
push
inc
lcall
xchg
iret
pop
xor
or
lcall
scas
sbb
xchg
mov
mov
or
cs
mov
jp
ds
adc
sbb
push
test
cmp
out
scas
or
and
lock
mov
fwait
and
nop
add
rcrb
leave
cmp
cmpsl
sub
cmp
ret
add
xchg
popf
stos
adc
test
mov
push
dec
dec
cmp
daa
add
cmp
ret
dec
into
mov
dec
mov
push
cmpsb
pop
cwtl
cld
mov
stos
leave
adc
xchg
mov
out
or
mov
add
stos
mov
sbb
add
xchg
icebp
xchg
push
sbb
je
mov
and
and
lock
jbe
add
inc
mov
in
clc
push
mov
or
jg
dec
loopne
dec
inc
mov
add
mov
inc
lret
iret
mov
ret
imulb
pop
je
sbb
mov
xchg
push
or
shlb
data16
notb
movsb
cmpsl
xchg
call
insl
or
or
in
call
add
lods
icebp
shll
xor
data16
out
out
or
in
ret
daa
ret
imul
in
mov
dec
push
xchg
fs
call
loopne
sbb
je
fwait
idivl
push
push
mov
fs
call
push
push
cs
mov
sarb
add
mov
mov
lea
cmpsl
ja
and
push
andl
jne
jo
clc
add
enter
add
add
add
push
les
mov
mov
popf
sbb
sbb
adc
pop
or
fimull
add
fsubrp
adc
loope
jo
add
dec
lock
or
stc
mov
adc
sbb
adc
push
inc
mov
fmulp
xchg
mov
xchg
and
jno
jne
out
movsb
rclb
fdivr
es
xor
push
insb
push
push
cmpsl
sbbb
int3
in
push
adc
das
fisttpll
pop
sub
mov
je
push
lea
mov
scas
mov
xchg
add
sarb
test
mov
sub
ss
das
inc
repnz
jge
je
pop
adc
jle
inc
popa
and
aas
inc
dec
add
aad
add
fildll
push
or
or
sub
sti
xor
mov
movsl
imul
out
test
test
aaa
add
add
cmp
pop
movsb
pop
sub
loop
push
push
in
in
jo
jmp
sbb
cld
mov
or
dec
add
xchg
and
cld
adc
fs
cld
popa
cmpb
mov
std
test
pop
inc
hlt
xchg
sbb
inc
sub
push
pop
int3
andl
movsl
sub
jo
sub
out
rolb
test
rep
sub
mov
cmp
dec
jnp
das
or
lahf
into
aaa
push
and
pop
iret
sub
and
mov
jg
pop
push
or
js
js
xor
sti
add
cmpsl
hlt
sbb
shrl
cmp
es
cltd
dec
sbb
push
push
pop
hlt
test
pop
jl
push
add
daa
inc
sbb
inc
imul
cmp
and
sbb
lods
sub
idivl
or
mov
mov
cmp
mov
mov
adc
fs
inc
xchg
push
dec
xor
jl
add
adc
mov
jno
lds
pop
lds
dec
jno
fs
lods
adc
adc
push
test
lcall
xorl
push
fildl
xor
jo
pop
dec
dec
and
dec
or
fadds
rcll
pop
mov
push
xlat
pop
jb
and
dec
dec
es
xchg
ss
push
jne
inc
push
and
sbb
sub
sarb
mov
inc
fs
xchg
jnp
mov
iret
inc
mov
inc
movsl
lods
cmc
nop
inc
and
xor
mov
inc
outsl
sbb
add
adc
les
sbb
xor
or
xorb
es
aam
nop
cmp
push
push
xchg
stos
xorb
fisttps
jecxz
sbb
pusha
mov
jg
mov
out
jl
or
jle
or
jecxz
daa
cmp
add
pop
mov
cmpl
pushl
out
test
lcall
lret
jmp
ret
clc
or
jmp
jo
cltd
jle
xchg
daa
pop
push
or
sbb
mov
add
jl
jne
sub
stos
nop
in
fs
jg
jb
sbb
push
pop
adc
xchg
daa
daa
pop
repnz
push
jbe
outsb
mov
outsb
adc
xchg
xlat
add
pop
inc
sub
or
cmp
cmp
inc
pop
inc
or
adc
cmpb
data16
mov
cmp
test
imul
bound
mov
jnp
orb
lea
mov
push
test
lods
adc
leave
or
inc
jge
test
or
mulb
imulb
xor
rolb
pmaxsw
leave
jne
cmp
lea
and
sub
lea
outsb
push
mov
pusha
inc
pop
cmp
push
jne
out
jno
push
jns
push
rcrl
addb
fwait
loope
xor
negb
mov
inc
sbb
test
or
pop
xor
or
bound
cmp
xchg
ret
jae
pop
inc
ret
ret
je
adc
or
and
outsl
jne
ja
jecxz
jae
xchg
js
insb
sbb
xor
scas
cwtl
ret
test
in
mov
dec
mov
rorb
cmp
mov
push
and
pop
std
mov
adc
push
pop
lahf
jmp
push
in
push
push
xor
cmp
sbb
les
dec
pop
outsl
or
pop
inc
in
push
add
cmc
and
daa
pusha
adc
adc
mov
xor
jae
cmpsl
mov
sub
loope
inc
pop
push
call
xchg
pop
hlt
mov
and
loop
inc
jmp
test
push
clc
mov
cs
mov
pushf
mov
cltd
inc
adc
lds
jnp
pushf
clc
in
push
sub
das
stos
jo
add
aas
jbe
incl
xor
iret
insb
enter
cmc
cs
pop
sbb
das
bound
lods
xor
mov
or
add
call
cmp
jge
shlb
and
jbe
lds
adc
sub
test
add
push
xor
sub
scas
or
xorb
or
mov
mov
and
fcmovu
leave
pop
mov
out
dec
add
fadds
cmpsl
rcll
push
pop
popf
add
js
or
loope
xchg
loop
jmp
incl
cmc
adc
testb
inc
add
jnp
push
iret
movb
lcall
sub
sar
adc
inc
setg
out
std
out
aas
xchg
dec
inc
add
mov
add
cmp
setl
lret
repnz
adc
inc
inc
les
mov
jecxz
mov
push
inc
cmp
jbe
sub
pop
inc
dec
inc
or
or
orl
jo
mov
add
sub
or
push
dec
sbb
ret
es
popa
sbb
push
js
lock
cmpsb
inc
test
sbb
or
pushf
lcall
cs
pop
push
and
add
sti
xchg
and
sbb
push
or
sbb
pop
sbb
xor
pop
test
jo
push
into
push
dec
and
mov
xchg
add
and
push
or
jne
pop
inc
push
out
sub
mov
cmp
je
and
mov
add
shrl
push
mov
sbb
rcll
inc
sub
outsl
pop
jecxz
and
inc
or
xor
fdivs
sub
inc
sub
pop
add
mov
sbb
imul
add
mov
cmpl
cmp
hlt
rolb
in
enter
cmp
sub
pop
lea
cmp
loop
andl
movsb
aaa
les
lock
cmpsl
adc
outsb
inc
daa
test
or
bound
fcoms
popa
mov
pop
shl
push
xadd
dec
mov
or
hlt
je
lret
add
cmp
and
jge
adc
sbb
lods
arpl
cmp
sub
mov
subl
mov
pop
shll
sub
outsb
nop
scas
or
insl
filds
lahf
mov
shll
dec
cmp
xor
push
cbtw
inc
test
sbb
popa
xchg
pusha
sbb
jnp
data16
push
mov
lock
dec
xchg
lock
xchg
test
addr16
cmp
mov
fsubrp
push
mov
push
scas
mov
shlb
movsl
push
popa
jmp
in
inc
add
adc
xor
or
in
pop
fucomip
pop
sbb
jl
jmp
gs
outsl
xchg
and
popa
push
mov
xor
mov
divl
xchg
jnp
adc
out
add
cld
mov
hlt
das
sub
cmpl
pop
pop
or
pop
cld
xchg
push
inc
mov
faddp
and
or
dec
pop
inc
imul
pop
adc
or
pop
cmp
add
sbb
int
or
insb
xor
ja
test
ret
mov
sub
dec
sbb
sbb
sub
or
adc
enter
cmp
sbb
inc
imul
shlb
fsubrs
xorps
sbb
push
push
push
cmp
sbb
iret
mov
cs
xchg
lods
test
dec
jns
cmp
pop
mov
movsl
dec
lock
sbb
lds
jbe
add
mov
int
inc
xchg
mov
xor
dec
sarb
js,pn
push
mov
leave
and
pop
pop
jb
sub
mov
xorb
cld
push
jle
sub
sbb
or
cmpsl
dec
adc
ret
fsubs
and
js
or
or
jnp
mov
pop
sub
mov
jno
dec
mov
mov
stos
pop
sbbl
pusha
cmpsl
pop
hlt
and
and
push
xor
les
inc
mov
cmpsb
in
pop
sub
js
xchg
pop
int
pop
jbe
mov
xor
add
sahf
and
xlat
xor
and
lds
test
cs
adc
ljmp
js
cld
dec
idivl
mov
jbe
je
or
popf
add
popf
push
mov
add
les
pop
push
lret
lods
int
inc
icebp
add
popa
pop
pushw
cmc
jmp
int3
daa
sub
popa
or
add
or
push
add
and
insl
cmp
pop
cs
or
or
cmp
je
sti
xchg
les
rorb
dec
add
cmpsb
mov
add
pop
pop
enter
aam
adc
mov
mov
sub
dec
dec
inc
dec
mov
inc
mov
loope
or
sarb
xchg
ja
jne
sbb
gs
or
xchg
inc
jno
lods
leave
inc
sbb
shlb
sbb
cmp
out
xchg
dec
push
cmp
xchg
pop
nop
pop
data16
add
jae
dec
mov
add
dec
dec
add
cmpb
and
movswl
xchg
outsb
xchg
rcll
cmpl
lcall
ljmp
nop
mov
lock
and
add
xchg
ds
sbb
and
xchg
bound
sbb
int3
mov
or
jns
sbb
sarl
inc
sbb
or
push
or
pop
xor
aam
xor
inc
add
aam
imul
mov
push
das
and
imul
repz
push
sbb
or
jo
imul
lret
sub
les
imul
cmp
mov
inc
xchg
ss
rol
stos
add
push
mov
rolb
daa
out
ljmp
dec
push
rorl
push
push
fs
sbb
mov
sbb
insb
mov
cmp
inc
js
jne
adc
pop
add
addr16
aas
adc
pusha
push
pop
add
cmp
jne
bound
xor
lea
mov
addr16
test
jmp
sti
adc
or
in
dec
mov
inc
pop
fsubs
out
mov
mov
fdivrs
repz
cmc
add
inc
sarl
add
inc
mov
add
pop
lock
cmp
in
push
pop
add
lcall
jmp
sub
add
jp
ja
cli
mov
mov
aad
push
xchg
fiadds
pop
xor
in
mov
mov
xchg
dec
fdivrp
pop
loopne
mov
adc
cmp
insb
mov
ret
std
comiss
je
and
lea
jne
test
or
mov
rcrl
test
inc
mov
xor
adcl
add
cmp
mov
adc
mov
mov
jne
or
add
fcmovb
cmp
pop
in
fmuls
mov
jne
adc
inc
cmp
sub
add
shlb
push
fs
push
push
add
loope
xor
or
push
dec
cmp
cmp
mov
mov
pop
mov
and
inc
sub
jg
into
fdivs
mov
dec
mov
and
adcl
push
pop
mov
or
sub
pop
stos
xor
cmp
sbb
push
push
mov
xor
mov
push
inc
add
add
sar
pop
and
inc
loope
or
jp
xchg
xchg
outsl
pop
adc
sbb
cwtl
inc
mov
adc
push
jg
adc
out
xor
cmp
pusha
pop
les
cs
push
aas
mov
in
fisubrs
sbb
call
in
inc
aaa
jle
popa
mov
aaa
stos
sub
insb
addb
pop
jg
push
imul
sub
push
inc
ja
arpl
jb
mov
in
jns
add
lahf
insb
stos
out
add
mov
repnz
pop
push
add
dec
icebp
add
jge
add
push
lret
add
roll
les
xor
stos
sub
cmp
mul
xor
pusha
and
dec
push
repnz
xor
cwtl
mov
mov
lret
or
cmp
pop
jg
movl
adc
inc
es
adc
mov
and
jbe
test
push
pop
add
xchg
and
stos
and
bound
or
icebp
inc
rolb
inc
inc
outsb
cltd
xor
cwtd
adc
outsb
es
xchg
insl
adc
push
lods
imul
mov
scas
test
mov
enter
sub
jno
add
adc
mov
cmp
lods
and
add
adc
add
pushf
fadds
cmpsl
aaa
filds
fidivs
jbe
xchg
aas
add
xor
jne
ret
or
outsl
pushf
into
out
fisubrl
cmp
mov
or
or
and
xor
jb
inc
pop
repz
popf
push
xchg
loopne
jge
rcll
push
mov
mov
ret
push
jle
mov
notl
sbb
or
fstp
cwtl
loope
pop
cmpsl
imul
jo
out
inc
rorl
bound
sti
into
sbb
ljmp
sub
and
shlb
ljmp
int
mov
add
cwtl
pop
push
cmp
jae
xor
pop
cld
pop
data16
bound
jo
push
adc
dec
or
in
or
pop
jo
aad
ret
cmp
movb
mov
and
jbe
sub
xor
or
aad
js
mov
int
test
inc
sub
testb
insb
push
cwtl
das
hlt
jno
pop
push
mov
inc
mov
adc
jae
je
fildll
arpl
arpl
shlb
test
les
cmp
out
and
shl
clc
or
data16
stos
sub
hlt
xor
adc
outsb
add
xorps
inc
movb
data16
mov
aaa
movsb
dec
or
orl
add
insl
sbb
rorl
sbb
push
insb
test
icebp
xor
mov
mov
add
pop
jo
inc
inc
jge
mov
xchg
dec
adc
je
push
add
and
push
pop
inc
inc
push
dec
icebp
cmp
push
ret
jmp
pop
repnz
call
aas
sbb
inc
add
sbb
sbb
push
test
outsb
sub
sub
nop
adcl
icebp
or
or
inc
cwtl
add
andb
mov
add
adc
xchg
psubd
cmp
cmpsl
mov
push
aaa
or
or
and
xchg
hlt
mov
fs
sbb
or
pop
cmp
je
push
std
adc
loopne
addl
mov
mov
test
pushf
inc
lea
addl
fcoms
lods
or
jmp
nop
jne
mov
fld
test
je
negb
and
inc
sub
loopne
lea
jae
jne
imul
pop
fwait
lret
clc
lods
insb
cmpb
mov
inc
imul
lods
sub
mov
js
insl
cmp
cmp
sbb
aas
pushf
and
dec
mov
sbb
gs
fnstsw
test
mov
push
nop
int3
daa
lret
lods
mov
add
mov
pusha
jmp
adc
in
add
adcb
xor
push
push
lock
adc
jne
pop
dec
adc
cli
cmpb
test
xor
nop
mov
rolb
lds
orl
sub
aad
sub
inc
insl
cwtl
sub
inc
in
scas
mov
mov
iret
adc
aad
lea
jno
cltd
das
push
loope
rcll
add
add
add
adc
push
popa
loop
fisubrl
test
jbe
xchg
fdivrs
sbb
inc
cmp
movb
and
cmp
das
sbb
xchg
rcrb
or
push
push
outsb
pop
dec
ud1
fcoml
je
xor
rcrb
call
add
xor
mov
mov
imul
cmpsb
call
mov
lret
mov
inc
nop
ja
jb
push
push
mov
es
dec
stos
cmp
mov
add
popf
jbe
pop
lcall
cmp
sbb
xchg
mov
add
inc
mov
pop
pop
jno
xor
sbbb
adc
lcall
mov
aad
daa
int
inc
pop
pop
inc
mov
dec
mov
sbb
sub
and
sbb
int3
mov
fabs
inc
call
dec
xorl
lods
inc
insl
pop
adc
adc
add
sub
mov
das
fidivl
adc
mov
pop
cmp
ror
arpl
sbb
lcall
arpl
jp
rol
push
ljmp
rcl
cli
and
inc
scas
outsl
pop
adc
lock
push
cmp
imul
and
mov
and
push
xchg
mov
andb
jmp
dec
je
cmp
pop
cs
push
ret
add
enter
in
rolb
jb
and
adc
test
fstpl
rcr
inc
adc
inc
test
and
std
pop
cmp
shrl
outsb
sbb
ds
push
add
loop
mov
int
mov
test
stos
cmp
ret
pop
cmp
xchg
cmp
movsl
int
mov
xor
cmpsl
es
pusha
and
cmpsb
add
test
add
js
mov
mov
jne
push
imul
sarl
xchg
xchg
test
es
mov
or
dec
hlt
add
inc
in
mov
pop
out
add
fstpl
daa
sbb
cmpb
inc
mov
inc
sbbb
clc
dec
inc
test
adc
push
test
push
sarb
loopne
sbb
jb
adc
nop
cmc
jge
sbbl
add
pop
cmpl
adc
pop
push
enter
jg
dec
push
scas
inc
rol
and
pop
xor
mov
push
add
jb
cmpsb
adc
pop
or
sbb
jp
mov
and
bound
xor
imul
iret
addb
xchg
adc
call
and
stos
and
mov
xchg
xchg
test
or
sbbl
outsb
mov
push
sbbb
daa
jno
orl
adc
test
sbb
enter
adc
cmpsb
dec
orb
sub
adc
xor
in
test
jl
lods
mov
cmp
pop
and
xor
xchg
xchg
aam
shll
cmp
inc
and
or
dec
sub
fiaddl
push
cmp
jne
out
jp
inc
dec
push
or
adc
int
xor
bound
in
add
sbb
aam
les
rorb
addl
adc
inc
dec
sub
pop
pop
add
push
xchg
hlt
or
and
add
sti
sub
inc
aaa
add
inc
xchg
in
fld
mov
cmp
test
sbbb
lret
inc
loope
popf
rcr
daa
adc
repz
add
shlb
rcl
add
jo
mov
add
outsb
add
sub
popf
jae
dec
and
stos
xchg
jno
mov
xchg
shl
cmpsl
or
add
push
jbe
adc
xor
lods
aaa
gs
cwtl
clc
pop
mov
sti
test
or
call
mov
adc
imull
add
push
popa
je
cmp
cmp
sbb
loopne
ds
sbb
xor
add
int3
sahf
mov
mov
mov
inc
insb
inc
xor
leave
push
js
js
push
stos
out
and
andl
adc
aad
inc
insb
stos
jle
inc
mov
adc
jmp
inc
mov
popf
aam
push
xchg
sbb
aas
and
outsb
pusha
and
xchg
sbb
pusha
cmp
adc
ja
movl
mov
mov
pop
inc
repnz
mov
stos
adc
cmpsl
sbb
shll
data16
inc
cmp
rorb
mov
sub
dec
pop
sub
mov
push
js
mov
imul
inc
adc
stos
pusha
mov
mov
xorl
test
aad
cmp
pusha
jne
xchg
test
out
ret
push
add
jg
inc
pop
sub
aam
pop
arpl
sub
adc
add
mov
push
fwait
cmp
mov
inc
jmp
push
test
daa
jo
mov
mov
and
icebp
add
sbb
imul
xor
lcall
lock
jg
sub
or
and
aam
jp
js
ja
sahf
mov
xchg
mov
xor
mov
in
and
push
mov
or
mov
cmpsb
xlat
xchg
add
add
call
aaa
fcmovnb
or
xor
mov
mov
push
push
popf
inc
mov
pop
cld
rol
inc
int
xor
jo
inc
cmp
xchg
dec
hlt
cmc
rcll
dec
or
pop
add
adc
jne
pop
add
pop
lock
inc
jne
popa
mov
rdpmc
arpl
xorl
gs
lret
cmp
mov
pop
add
and
mov
sti
or
call
clc
das
jge
mov
sub
push
js
inc
sbb
pop
pop
enter
shlb
adc
inc
xlat
inc
inc
pushf
adc
sub
inc
mov
dec
or
mov
lock
sarb
popf
cmp
push
mov
adc
in
adc
dec
out
popf
lods
jo
test
rorb
push
push
rclb
inc
ret
fdivs
add
dec
jle
cs
jo
mov
cmp
jns
mov
mov
cmpsb
cld
mov
rcr
adc
pop
mov
std
or
inc
xor
inc
arpl
sub
inc
sub
mov
push
sub
dec
rorb
add
push
and
sub
xchg
xchg
sub
je
and
fadds
mov
mov
mov
pop
aaa
jp
or
or
dec
rorb
sti
out
mov
fcmovne
jno
push
cmp
push
add
mov
fnstcw
adc
inc
pusha
jne
mov
inc
aas
push
dec
mov
ds
add
dec
daa
jne
outsl
sub
cmp
mov
push
call
pop
mov
xor
add
daa
je
imul
jmp
jo,pn
and
or
or
mov
outsl
loopne
push
xchg
mov
xchg
lods
inc
fisubrs
cltd
or
add
mov
mov
iret
int
out
cmpsb
xor
test
enter
mov
push
int3
lea
flds
out
push
sub
jo,pt
adc
mov
or
icebp
paddq
mov
add
lea
data16
push
jecxz
jge
cmp
xchg
xor
mov
adc
push
ss
xor
xchg
xor
icebp
inc
sub
inc
pop
sahf
daa
pop
pop
xchg
js
gs
fcomps
psrlq
adc
movsb
pop
sub
xor
pause
add
lcall
sub
or
adcb
pop
inc
test
pop
dec
mov
ficoml
push
rcll
fdiv
out
scas
push
sub
cwtl
mov
mov
insb
in
mov
adc
shlb
add
or
imul
adcl
nop
pusha
les
or
push
mov
sar
cli
add
jmp
add
test
push
aam
sbb
push
or
pop
xchg
rcll
movsl
addl
insl
fiaddl
daa
jmp
push
mov
jge
pop
xchg
insl
or
mov
fdivl
xchg
pop
mov
insb
inc
sbb
jb
addr16
andl
outsb
inc
cmp
je
test
lds
sub
sub
sub
loopne
lret
mov
les
pushf
push
xchg
mov
mov
fs
shl
cmpsb
sub
gs
enter
pop
repnz
mov
xchg
or
movsl
mov
dec
push
inc
sbb
cltd
mov
dec
daa
xor
adc
rorb
jne
test
or
or
into
xchg
mov
mov
jmp
sbb
mov
lods
scas
aad
or
sbb
xchg
shrl
das
fiadds
cmp
add
mov
stc
jecxz
nop
sub
add
add
dec
out
push
shl
cmp
jae
push
fucom
inc
adc
and
mov
cmp
add
lcall
jecxz
popa
jb
mov
pop
push
incl
js
ss
in
imul
add
dec
lcall
dec
sbb
cmc
and
push
xor
mov
hlt
add
rolb
dec
mov
mov
fistps
fildl
fcomp
mov
mov
popf
orb
out
dec
push
add
push
mov
and
pop
cs
lret
in
loopne
repnz
repz
in
and
push
adc
lea
xchg
ss
and
inc
notb
daa
and
rolb
std
adcl
or
mov
je
int
or
adc
lods
sbb
mov
pop
jl
movl
movsl
movsb
dec
inc
inc
sbb
lea
shl
ja
xchg
add
mov
test
sub
sbb
adc
adc
push
push
fisttps
mov
test
sub
scas
and
xlat
jg
sub
jge
xchg
mov
pop
pop
and
inc
cmp
inc
inc
add
out
jmp
sbb
inc
mov
or
xor
inc
push
int3
loope
loope
dec
pusha
cmp
cmpl
push
adc
xchg
rclb
ja
leave
mov
loop
mov
cmp
add
jge
mov
mov
or
inc
insl
mov
ret
aam
in
jbe
gs
or
test
mov
popa
lock
or
inc
xchg
inc
xor
sub
xor
popa
insl
push
push
adcl
cwtl
repnz
mov
xor
filds
shlb
push
ret
push
mov
or
mov
mov
mov
fs
or
or
add
lcall
mov
adc
nop
cs
subl
or
lods
xchg
hlt
push
xor
and
xchg
xor
cmp
inc
aas
aad
js
mov
data16
or
fisubrl
pushf
jecxz
xchg
xchg
ljmp
mov
shl
nop
pop
and
aaa
add
push
imul
into
xor
jno
mov
mov
cmp
sahf
adc
add
rdmsr
fadd
rcrl
or
jp
rep
inc
mov
jnp
movsl
dec
ret
cmp
sub
mov
jne
cld
sarb
cmpsl
in
movsb
icebp
add
mov
jb
aad
enter
push
in
push
push
int
inc
std
dec
or
shl
andb
cmp
clc
push
or
jae
loopne
popa
movsb
mov
hlt
adc
add
mov
out
sbb
loopne
cltd
cmpsl
mov
insl
dec
sahf
out
imul
lods
sub
mov
enter
ficompl
mov
pusha
int
push
xor
mov
push
adcl
sub
push
push
sbb
mov
daa
outsl
adc
xor
push
inc
test
inc
mov
or
push
call
fsubrl
mov
sub
jno
aaa
add
inc
addb
call
xor
mov
or
jne
jbe
pop
push
inc
adc
push
sbb
add
push
push
ds
push
or
inc
pop
loop
xchg
push
jne
adc
adcl
adc
adc
sti
bound
sbb
mov
push
pop
cs
dec
inc
pop
inc
psubsb
adc
shlb
pop
cs
outsb
incb
cmp
push
or
dec
push
mov
inc
loop
and
pop
sbb
popf
dec
xlat
stos
push
rcll
push
in
enter
add
shl
cmp
xor
stos
imul
repz
jns
xchg
jbe
test
cmp
sbb
add
jl
ret
add
xchg
je
cmp
jne
int3
into
mov
cli
or
push
sarb
mov
fwait
inc
xchg
mov
xorl
call
dec
adc
test
and
mov
cmpb
sbb
push
cmp
int3
sbb
jge
leave
add
cli
mov
dec
ret
call
jne
rol
insl
mov
adc
or
add
mov
or
mov
movsb
sub
inc
inc
ret
test
ret
arpl
add
pop
daa
jmp
sub
mov
jo
insl
ret
mov
adc
adc
aam
dec
ret
arpl
add
add
sub
lods
cmpsl
outsl
js
xor
inc
inc
or
andl
cmp
outsb
pop
out
adc
cmp
or
sub
push
lds
sbb
pop
jmp
rcl
std
pusha
mov
or
xchg
lret
rcl
or
lahf
fsubrs
add
insl
popa
and
test
push
sti
sbb
sbb
cmpsb
xor
jmp
xchg
adc
jb
xor
mov
scas
dec
adc
mov
and
adc
and
xchg
outsl
mov
xchg
dec
shll
arpl
and
and
jae
xor
adc
dec
inc
pop
addl
pop
jb
add
out
scas
adc
mov
cltd
in
fstpt
mov
mov
in
adc
cmp
or
sub
mov
ret
test
xchg
pop
dec
adc
sub
mov
dec
add
in
fbld
push
jg
adc
dec
jl
push
cmp
clc
jg
ret
mov
adc
or
aaa
addr16
lock
roll
xchg
sbb
aam
popf
cmp
and
rclb
add
popa
mov
nop
cwtl
iret
sbb
and
fxch
jmp
ret
mov
repz
push
sub
dec
dec
pop
sbb
shll
mov
fdiv
sbb
adc
push
xchg
xor
fdivl
icebp
pop
push
and
popa
adc
and
jno
in
cmp
pop
xchg
in
push
movl
sti
and
adc
xor
jp
pusha
call
data16
add
pusha
fimuls
cld
push
mov
cltd
add
xchg
push
js
shl
pop
add
imul
scas
mov
bound
inc
cwtl
xor
sub
pop
adc
and
mov
mov
in
mov
in
arpl
dec
in
fucomip
clc
add
loopne
push
mov
cmp
imul
test
loopne
inc
push
push
enter
or
pop
les
inc
in
daa
jns
aad
lods
mov
push
adc
xchg
and
inc
pop
lret
and
pushf
stos
in
ret
sbb
jo
mov
mov
test
test
xor
inc
adc
in
lret
imul
mov
sub
push
jnp
js
sub
out
mov
add
nop
pop
sarb
out
jne
dec
cmp
mov
sti
xlat
es
or
xchg
fwait
lret
push
and
or
popa
dec
add
lock
inc
enter
mov
mov
push
push
repnz
mov
inc
nop
add
push
out
ljmp
sbb
adc
insb
pop
jo
hlt
jp
ljmp
lahf
mov
xchg
test
imul
fcompl
je
cmp
jne
rorb
dec
popa
lods
mov
xor
out
pushf
dec
cmp
mov
cmp
clc
add
cwtl
push
sub
and
pop
push
out
mov
fidivrs
push
push
pop
mov
cld
jp
xchg
pushf
sub
xchg
cmp
push
sub
adc
cmp
dec
mov
and
xor
adc
in
lock
test
imul
mov
xchg
xchg
sub
add
aam
pop
in
and
scas
and
add
mov
push
add
sbbl
xor
xlat
mov
hlt
dec
cs
and
add
cmp
inc
cmc
popa
push
gs
in
cmc
push
scas
das
jmp
orb
ja,pt
or
imul
pop
outsl
shr
xchg
testl
imul
add
push
insl
bound
pop
or
fwait
insl
push
popa
jb
add
enter
or
jg
pusha
and
adc
push
mov
push
bound
or
mov
cltd
cmp
cli
scas
push
mov
add
inc
sti
in
adc
and
adc
adc
outsl
add
jecxz
add
mov
fisttps
or
push
inc
fs
arpl
rolb
push
sub
push
push
xor
enter
dec
or
xor
sbb
lods
movsb
xor
loop
mov
xchg
fidivrs
movsb
add
hlt
inc
icebp
xchg
addr16
mov
sbb
or
push
popa
insb
adc
in
clc
add
fistpl
xchg
or
addr16
adc
fdivrp
je
clc
lock
or
adc
or
cmp
add
addb
aam
int
or
test
dec
sti
sbb
pcmpgtd
sbb
dec
test
mov
xor
call
push
sub
pop
inc
push
push
push
or
jecxz
inc
jmp
jnp,pn
xchg
push
sbb
adc
scas
push
adcb
lods
incl
jo
add
stc
pop
ss
adc
lahf
adc
push
inc
or
aaa
je
repz
pop
pop
hlt
aas
sub
aam
sub
rolb
divb
push
pop
xchg
mov
pop
cmp
fwait
testl
cs
push
mov
sub
cmp
sbb
lcall
jnp
mov
aam
or
add
daa
test
push
call
cmp
and
sub
inc
cmp
jle
lds
jns
dec
cmp
movsb
movsb
adc
add
shll
add
and
xor
in
inc
cmp
mov
cltd
sub
inc
fistl
jge
inc
gs
sub
or
cmp
add
inc
js
addl
in
jge
fistpll
icebp
inc
pop
or
or
sbb
adc
xor
dec
das
rcr
or
pop
shll
push
inc
cmp
push
sbb
nop
loope
addr16
aas
add
sbbl
sahf
adc
sub
push
push
mov
and
push
bound
xor
cmp
fildl
and
cmp
test
gs
or
or
xor
insb
cmp
aas
sbb
cmp
cltd
shlb
pusha
xchg
aam
inc
adc
sub
sbb
inc
xchg
dec
sbb
call
jecxz
sbb
popa
cmpsb
roll
scas
adc
mov
nop
cmp
or
imul
test
out
loope
pop
testl
movsb
jge
pop
xlat
daa
lods
test
std
jo
std
lods
xor
add
push
fdivrl
add
add
in
adc
rorb
inc
or
mov
push
push
or
ror
cmp
fstpl
loopne
inc
inc
lock
roll
adc
push
mov
xorb
mov
push
xor
filds
or
ljmp
cmp
pop
mov
pusha
jmp
test
or
add
pop
dec
in
insb
inc
sbb
adc
push
pop
pop
and
or
or
or
add
push
pushf
pop
add
add
add
xor
inc
add
pop
add
add
adcb
inc
adc
jp
pop
inc
or
das
subb
mov
xor
or
or
xchg
cmp
iret
dec
hlt
or
jecxz
icebp
push
inc
iret
sub
or
test
cmp
mov
fcomps
or
dec
cld
lahf
cmpb
sub
jmp
clc
push
jo
mov
xlat
prefetch
or
fstps
dec
inc
outsl
inc
out
jmp
insl
mov
cmp
or
xchg
sbb
push
cmp
jl
sbb
mov
jae
or
sub
mov
mov
sbb
inc
lea
adc
inc
outsl
mov
lods
mov
sub
sbb
in
es
nop
into
in
push
add
adc
sarl
pushf
push
mov
push
mov
push
xor
push
jo
loop
push
push
xchg
or
add
push
pop
and
adc
sub
or
adc
sub
and
add
add
popa
fwait
push
mov
and
and
inc
dec
and
mov
push
clc
fbld
inc
pop
mov
push
and
or
mov
rorl
dec
mov
das
and
push
subl
push
test
inc
sbb
jo
in
xchg
push
add
add
or
pop
cmpsl
es
pop
ja
lods
lds
nop
xchg
pop
xlat
fs
or
fdivrl
in
push
cmc
mov
mov
dec
push
jg
jbe
xor
xor
xor
inc
inc
loop
cwtl
jno
dec
dec
dec
dec
dec
dec
dec
dec
or
scas
sub
push
push
push
pop
pop
pop
mov
sahf
ret
mov
mov
mov
inc
mov
jo
stos
pop
cmp
mov
lret
push
add
je
and
mov
xor
es
out
nop
test
push
testb
imul
adc
sbb
movsb
add
cmp
daa
shll
or
mov
push
cmpl
mov
add
mov
inc
inc
adc
push
adc
or
jnp
mov
mov
mov
sub
jge
add
in
or
add
push
je
cmp
sti
or
orb
mov
push
inc
jge
rcl
dec
xchg
ja
jb
or
sarb
stos
pop
ret
mov
loop
push
rclb
mov
js
lret
adc
jb
je
ret
add
xchg
dec
xchg
in
xor
push
fsubr
imul
daa
lret
and
es
jmp
inc
inc
inc
popf
popa
xchg
imul
lret
sub
js
dec
es
inc
mov
mov
xor
xor
insl
pop
push
add
inc
sub
subl
jbe
cltd
in
mov
cmpsl
adc
enter
js
inc
dec
or
pushf
shrb
xlat
addr16
fs
lcall
or
cvtps2pd
sbb
cmp
push
push
int
cs
or
mov
mov
test
push
xor
test
mov
les
pop
jne
sbb
shl
aam
insb
xchg
add
and
andw
into
shr
out
push
fsubrl
enter
movsl
iret
popa
lods
xor
mov
jmp
test
push
mov
mov
mov
outsb
fstpl
adc
or
jmp
inc
arpl
push
add
ss
cltd
add
mov
movl
adc
mov
rcrb
mov
stos
nop
aaa
or
fildl
push
inc
cmp
add
cmpsl
ret
enter
xchg
ljmp
mov
imul
pushl
sbb
jl
loopne
xor
popa
jne
mov
add
or
cmp
jg
sbb
add
mov
push
fldl
fcmovnbe
or
insl
stc
dec
dec
add
inc
xor
out
aad
mov
ljmp
lock
in
jle
outsb
inc
pop
lret
es
jbe
sub
jle
in
outsb
sub
movsl
cmpsb
out
sbb
cmp
ja
jo
idivb
add
pop
xor
jmp
aaa
jmp
xlat
cmpsb
mov
xor
mov
xchg
pushl
cmpb
cmp
subb
fistl
lret
cwtl
addr16
adc
mov
cmpsb
xor
push
ret
push
mov
mov
loop
inc
lods
and
in
or
add
movsb
out
fs
mov
mov
aas
out
push
adc
dec
aad
ss
ja
imul
nop
pop
sbb
fs
push
mov
mov
inc
adc
inc
push
xchg
adc
and
insl
aaa
movsb
enter
in
add
cs
cmpb
fnstcw
and
xor
movzbl
cmp
test
jbe
filds
xchg
shl
fisubl
mov
imul
iret
test
pusha
movntq
add
xor
push
adc
and
das
iret
push
sbb
subl
cwtl
inc
and
and
xlat
jg
push
dec
enter
je
enter
cmpb
push
and
lcall
and
sub
push
jnp
hlt
xchg
rolb
cmp
cs
push
int3
adc
xchg
add
adc
cs
or
imul
inc
xchg
add
movb
pop
cmp
jle
cmp
cmp
fsubl
mov
cmp
movl
test
adc
nop
lea
outsl
push
lock
adc
jecxz
ret
sbb
mov
jmp
lock
bswap
int3
push
xchg
jg
cmpl
adc
mov
adc
inc
xor
inc
push
iret
hlt
js
push
in
inc
arpl
jne
pop
add
xchg
sbb
xor
cmp
pop
rol
clc
das
add
inc
into
cli
jecxz
adc
mov
or
das
xor
xchg
inc
mov
jle
jle
jle
pop
inc
fucomi
dec
data16
inc
mov
clc
popa
movsb
ds
jle
jnp
andb
push
push
lea
cmp
cwtl
mov
addl
daa
rolb
pop
repnz
dec
push
and
addb
into
int3
ja
hlt
sub
or
aas
out
xor
sbb
movsb
xchg
adc
xchg
dec
cmp
je
push
adc
or
dec
mov
adc
das
nop
add
adcb
movsb
adc
dec
sub
push
mov
les
push
cmp
pop
push
dec
dec
or
or
decl
xor
orl
hlt
cmp
arpl
xchg
roll
pop
xlat
or
jp
fcmovnu
jecxz
pop
xchg
pop
ret
jmp
or
push
inc
shrb
add
pop
imul
insl
pop
jge
cmp
xor
rclb
dec
cli
les
ror
mov
mov
or
pop
mov
cmc
in
push
or
push
in
jmp
mov
push
pop
push
adcb
test
jno
xchg
add
mov
mov
pop
sub
outsl
pushf
mov
insl
adcb
jecxz
mov
xor
xchg
dec
ret
pop
jo
adc
pop
and
adc
push
sti
sub
add
pop
adc
pop
pop
or
loope
movsl
dec
xchg
das
adc
push
jl
pop
pusha
or
push
adc
sub
movb
leave
rolb
pop
add
testb
add
ljmp
and
pop
insb
mov
mov
out
mov
mov
test
repz
pop
insb
jecxz
push
push
adc
or
cmpl
xchg
testb
test
adc
add
je
jmp
in
push
xchg
insb
out
pop
and
incl
push
mov
in
cmp
jo
daa
push
inc
cli
pusha
fstps
mov
sub
ret
push
int3
imul
jge
mov
adc
cmpsl
adc
shll
xor
es
fildl
adc
mov
cmp
mov
ror
cwtl
loop
cmp
inc
cmp
jge
mov
push
xchg
icebp
push
mov
sarb
jmp
jbe
sbb
or
mov
xor
mov
cmp
mov
add
ja
push
or
aaa
or
sub
fwait
cltd
in
push
or
adc
mov
xchg
sbb
pusha
jl
xor
ds
movb
stc
mov
je
mov
ljmp
out
or
ret
adc
pop
lods
add
adc
jno
mov
push
mov
incl
or
clc
push
inc
push
and
add
add
das
nop
rcr
mov
and
xor
pop
push
adc
cmp
jne
push
fiaddl
jmp
faddp
sbb
sub
adc
fwait
jmp
je
in
sbbb
insb
inc
call
icebp
lahf
push
add
push
pushf
push
pop
inc
rclb
mov
push
enter
movsb
mov
inc
addr16
and
or
inc
mov
push
lea
adc
inc
cmp
or
adc
int3
jne
or
add
inc
pop
jns
or
or
mov
or
push
pop
insb
movsb
subl
testb
andb
inc
jnp
das
adc
cwtl
rclb
mov
scas
rorl
and
sbb
ds
jbe
lock
cltd
and
cwtl
js
add
or
adc
and
xlat
jge
cld
loope
add
out
scas
pusha
data16
adc
push
mov
inc
je
fdivs
sbb
dec
sbb
push
sbb
rclb
popa
push
xlat
scas
and
fmuls
iret
adc
loopne
fcmovnb
fcoms
inc
cmpl
aad
jmp
cmp
pop
adc
test
pusha
dec
inc
iret
push
andb
pop
das
loopne
jb
fwait
inc
lock
hlt
enter
sbb
das
std
test
xchg
je
int3
or
xor
call
adc
rcrl
shlb
pop
inc
std
jle
sbb
pop
fistpl
sub
lds
fcoml
pop
jns
sbb
aaa
push
or
or
test
push
mov
cmpsb
loope
xor
pop
push
or
retw
sub
pusha
add
sub
cltd
dec
lock
push
add
loope
sub
fistpl
push
xor
push
sbb
inc
or
dec
sbb
cld
jno
or
mov
xor
or
mov
mov
jns
imul
addr16
cmpsb
cwtl
cwtl
lods
dec
test
lock
and
push
aam
das
mov
adc
mov
popa
sub
lock
inc
cwtl
pop
push
imul
pop
sti
or
mov
inc
adc
cmp
jl
jbe
dec
icebp
push
fsubrs
les
push
not
mov
ss
mov
sbb
dec
sbb
addb
clc
jns
xor
mov
cltd
in
ss
adc
mov
or
aaa
push
dec
or
sub
popa
addr16
mov
add
inc
push
sub
es
repnz
lock
roll
popa
loopne
cmp
int3
movsl
or
mov
inc
jmp
ja
nop
out
mov
pop
dec
jae
push
test
mov
sub
cmpsl
and
lods
fmuls
sub
shrl
sbb
lods
popa
pop
xchg
mov
xor
cs
out
hlt
cmp
hlt
xor
iret
hlt
sub
inc
add
aad
in
rep
or
sahf
mov
add
dec
clc
or
pop
push
aaa
loopne
jns
inc
jne
or
enter
lea
adc
or
scas
scas
or
rorb
or
sbb
ret
ds
sbb
out
pop
fildll
push
sub
inc
imul
xor
outsl
add
cmp
pusha
sbb
mov
jl
jne
cmp
adc
outsb
loopne
mov
aaa
fistps
dec
push
and
sub
push
xor
sbb
add
jne
mov
and
ja
xor
add
int3
or
fwait
loopne
ret
call
lret
mov
xchg
aam
lods
enter
pushf
add
pushf
and
fwait
sbb
add
pop
das
fmuls
orl
rcll
in
fisttpl
adcb
cltd
cmp
pop
xchg
pushf
or
or
adc
xor
enter
xor
sub
jmp
in
aas
sbb
cmp
add
push
add
test
adc
sbb
cli
pop
pop
pusha
adc
dec
and
ret
pop
lods
inc
rol
mov
call
push
push
call
rcll
and
sub
xor
sub
push
cmp
sbbb
daa
call
enter
xor
xchg
xor
bound
push
xchg
pushf
and
adc
clc
sub
push
add
lock
lods
nop
sbb
lock
in
test
lock
clc
cmp
addr16
leave
add
and
enter
pusha
ret
pusha
in
clc
arpl
shrb
pop
xor
aad
pop
clc
test
cmp
sbb
dec
sahf
adc
dec
call
test
jns
inc
movsb
leave
mov
or
and
cmp
pop
push
insb
mov
loopne
jmp
in
pop
cmp
dec
xor
inc
dec
loopne
and
dec
add
and
xchg
fsubp
jne
jmp
xor
xchg
loop
shrb
sub
sbb
add
push
xlat
sub
add
sbb
es
mov
repz
sbb
mov
or
es
add
xor
push
call
lds
xor
mov
enter
and
jmp
mov
jbe
push
ret
add
fwait
pop
shrb
pusha
enter
int3
in
jmp
fistl
or
add
adc
sub
xlat
jne
dec
mov
push
adcb
add
fs
inc
shl
xor
pop
push
xchg
sub
mov
lea
xor
divl
dec
scas
inc
ret
imull
xchg
push
xor
or
sbbl
and
xor
jo
sub
sub
cvtpi2ps
popf
sub
or
add
int
cmpsb
mov
xor
push
cmp
aaa
es
push
mov
mov
jg
call
inc
push
imul
or
lret
mov
jmp
into
aam
jo
dec
es
xchg
or
ljmp
sbb
int
push
add
and
arpl
and
pushf
mov
add
std
xchg
or
add
and
pop
pusha
movb
cmp
dec
loope
inc
int
mov
fimull
push
xor
mov
ljmp
push
out
mov
xor
add
xchg
addr16
sub
adc
sbb
ds
adc
aad
aas
pop
incb
add
subb
bound
aas
push
xchg
xchg
xchg
mov
xchg
pop
fstl
xor
pop
xchg
add
inc
stos
mov
out
xchg
rcrb
and
push
addb
cmp
dec
xlat
mov
ret
adc
cmp
std
andl
sbb
rorl
jp
aas
mov
dec
add
fcoms
fstps
cmp
cmp
testl
je
mov
xchg
mov
pcmpgtw
push
dec
xor
pop
aam
jle
dec
stc
ss
loopne
sub
cmpsl
cmp
inc
mov
pop
xor
rcll
popf
inc
inc
lods
lods
insb
mov
xchg
mov
add
je
jno
mov
sbb
xor
or
xor
mov
mov
movsb
jne
imul
mov
pop
adc
clc
sub
jbe
test
xor
xor
shlb
push
xchg
nop
or
add
pop
mull
loope
cmp
outsb
adc
outsl
fistpll
ds
out
or
inc
rcrl
leave
outsl
in
pop
sbb
shll
xor
inc
sub
rclb
jg
stos
ja
ret
das
lods
pop
mov
add
xor
adc
or
xor
sbb
inc
or
daa
lods
cwtl
and
sub
ljmp
lret
outsl
push
cmpb
in
jg
stc
push
jle
cmp
cmp
pop
cwtl
mov
inc
push
mov
fcmove
aaa
subb
xchg
lret
movb
mov
mov
xchg
insb
xchg
stos
bound
push
ret
sub
cmpsb
repnz
loope
xchg
and
jne
clc
dec
pop
mov
subb
inc
or
push
icebp
test
inc
push
aas
jbe
lock
dec
inc
inc
mov
and
mov
or
scas
mov
mov
sahf
adcl
xorl
ljmp
sub
ret
test
push
dec
adc
adc
xor
mov
adc
push
or
movsl
mov
pop
push
push
inc
fs
or
out
fcomp
imul
gs
fld
inc
es
sbb
mov
or
xchg
jl
sbb
jne
xor
xor
lcall
popa
sub
lock
cmp
es
add
xor
mov
push
ret
je
push
ss
inc
pop
sbb
dec
sub
rcrb
lret
fsubs
jo
add
mov
mov
sub
sbb
push
pushf
lret
jbe
xchg
dec
test
xchg
jg
rcrb
ret
shlb
xchg
add
sbbb
and
xchg
sbb
ljmp
fdivs
adc
cs
movhlps
or
test
or
mov
js
stos
mov
inc
jno
dec
add
cmpsb
dec
or
popf
push
or
dec
aaa
pop
xchg
push
mov
adc
jmp
mov
mov
add
or
or
mov
cmp
push
cmp
add
mov
sub
mov
xchg
cmp
or
pop
sub
push
cwtl
sub
fdivrs
mov
lods
xchg
bound
scas
out
adcl
add
loop
ret
iret
xor
pop
add
pop
xchg
inc
popa
lea
enter
clc
fmuls
fnstcw
lods
popf
cmp
jno
mov
xlat
dec
negl
out
loope
lret
fidivrs
push
cmp
cmp
adc
sub
push
or
lret
lahf
jno
mov
mov
push
in
mov
inc
aas
mov
pop
mov
xor
out
push
repnz
fs
add
jns
bnd
daa
mov
je
add
in
in
enter
mov
out
imul
xlat
push
pop
pop
mov
inc
pop
popf
jl
cmp
or
jbe
movsl
aas
ret
xor
inc
decl
ss
xchg
je
hlt
es
test
push
xor
add
sub
xor
adc
push
outsl
sbb
dec
adc
sbb
insb
inc
mov
shlb
mov
mov
fdivl
adc
adc
xchg
or
push
and
inc
leave
push
xor
xor
xchg
or
inc
inc
mov
leave
push
or
and
xor
je
or
inc
lahf
push
pop
inc
push
pop
push
inc
cltd
xor
pop
repz
mov
mov
push
sub
addr16
dec
pop
lds
divb
jl
aaa
jmp
scas
adc
das
push
sbb
js
inc
inc
push
jl
jl
xor
sbb
xor
adc
in
roll
loopne
jmp
xor
pop
adc
cmpsb
stos
rorb
mov
ret
mov
sub
push
or
sub
scas
rol
sbbb
test
sub
dec
iret
bound
gs
pop
rclb
lods
pop
subl
les
sbb
pushf
pop
int
sbb
cmp
push
inc
adc
das
aam
and
sbb
mov
or
test
and
push
mov
push
sbb
adc
leave
push
xchg
mov
xchg
loope
inc
andl
aad
adc
loope
in
sbb
lret
sbb
into
sub
push
lock
add
lock
inc
adc
lods
lock
repz
push
sbb
pop
cmp
xchg
cmp
aaa
pushl
dec
add
add
mov
dec
mov
or
aaa
sbb
testl
cmpsl
sub
adcl
repnz
pop
ret
dec
int3
and
push
pop
icebp
call
notrack
sbbb
out
out
and
dec
or
dec
sbb
or
sbb
shlb
pop
cwtl
shl
repz
or
loopne
outsl
xor
shlb
sbb
jno
pop
loopne
adc
fadds
enter
movsl
inc
fildl
add
imul
les
insl
inc
or
pop
push
dec
dec
lret
xchg
mul
and
out
les
and
arpl
xor
mov
cwtl
loopne
fs
aad
je
sbb
push
je
push
sbb
dec
loop
repz
int
lahf
mov
shrb
xchg
mov
test
dec
sub
add
ret
push
imul
data16
cld
int3
push
mov
sub
or
cltd
sub
dec
mov
loopne
or
les
and
add
sbb
scas
test
rcrl
gs
xchg
pop
inc
jmp
mov
dec
xor
rorl
mov
jns
je
sub
dec
xchg
sti
xor
cmp
fwait
int3
cmp
jmp
push
and
and
movsb
xchg
and
xor
int
sbb
dec
pusha
inc
fistl
inc
pop
out
sub
cmc
jno
pop
scas
cmp
jle
cmp
xor
dec
pop
scas
movsl
popf
sub
adc
filds
pop
fsubs
or
loopne
pop
iret
fwait
adc
sub
sahf
pushl
xchg
outsb
mov
fs
sub
sbbl
popa
pop
popa
ret
clc
and
inc
jo
into
add
or
xchg
divl
xor
mov
mov
ret
and
xchg
test
inc
daa
jo
xor
and
not
push
mov
jecxz
bound
data16
xlat
aaa
mov
lods
loopne
and
cmp
sub
push
push
dec
sarb
xchg
mov
in
cmpl
cmp
pop
add
lods
mov
pop
shl
inc
iret
rclb
xor
test
sbb
or
and
mov
xor
jg
in
or
aas
inc
shrb
mov
fwait
sub
test
inc
arpl
push
push
movb
sti
sbb
dec
ret
xor
push
pop
inc
sbbl
insl
mov
enter
or
inc
test
or
sbb
xor
jne
outsl
loopne
movd
mov
jg
xchg
sub
push
or
lret
pop
js
sahf
xchg
cmp
mov
jmp
aas
ror
pop
cmpl
mov
das
ret
mov
add
push
cmp
bound
movsl
mov
adc
add
lock
or
mov
jo
inc
popa
xchg
addb
xor
dec
cmp
adc
ret
cmp
pop
cmp
dec
xor
imul
outsl
stos
inc
or
inc
inc
xor
push
lds
push
and
das
push
add
rclb
and
sahf
scas
inc
stc
pop
leave
jecxz
es
inc
sbb
or
inc
mov
xchg
pop
sbb
rclb
subl
jo
or
inc
dec
xor
sbb
inc
lcall
pusha
fstl
and
push
pusha
addl
hlt
inc
les
ljmp
aam
pop
and
push
jno
inc
sbb
and
hlt
inc
push
or
decl
or
sbbb
jb
and
dec
insb
add
mov
push
jecxz
cmp
sub
pop
rcl
gs
or
add
icebp
in
add
aad
inc
lock
adc
leave
data16
js
test
or
int3
js
xor
sub
push
inc
mov
stc
mov
movsb
adc
add
je
dec
mov
pop
popa
jecxz
leave
xchg
in
mov
les
lea
add
inc
push
or
push
fwait
cmp
sbb
cmp
xor
dec
call
mov
aam
insb
xor
push
xchg
mov
negl
sbbb
nop
call
cs
sbb
push
inc
and
mov
inc
cmp
addr16
loopne
adc
cmpsl
jle
ss
sub
imul
or
xchg
nop
push
sbbb
js
and
add
add
ljmp
or
or
or
cmpb
xchg
fstl
mov
add
pop
push
add
lock
call
mov
and
mov
xor
add
mov
mov
jp
inc
or
or
mov
pop
add
sbb
ret
sbb
outsl
adc
push
pop
mov
adc
lea
mov
cltd
fimuls
add
insl
popa
mov
pop
pop
or
call
loopne
inc
aas
push
cli
movsw
cli
xchg
cmc
push
mov
dec
das
sarb
lea
and
and
fdivrl
pop
lret
and
add
pop
in
sbbl
cltd
inc
out
repz
mov
ror
outsb
sbb
dec
imul
mov
push
test
push
fistpll
add
mov
sti
lds
repz
stos
sbb
pop
cmc
test
popa
cmp
rorl
fwait
sub
inc
lods
fdivs
lds
movsb
and
cmpsl
mov
add
jns
sub
push
lea
test
dec
dec
pop
push
sub
or
rorb
push
jbe
push
sbb
mov
jbe
adc
popa
out
xorb
outsl
dec
adc
pop
shl
fildl
lahf
lea
mov
inc
cmpsl
mov
cmp
xchg
or
cmp
ret
aaa
shll
aam
cwtl
aaa
call
sti
xor
jmp
inc
ret
cs
shll
jb,pt
test
mov
jbe
mov
or
inc
push
lahf
mov
test
movb
inc
pop
add
jns
inc
add
or
cli
inc
cmp
pop
clc
jb
testl
mov
or
fcomps
inc
inc
adc
popf
mov
jne
insb
inc
int3
pop
cmp
lods
sti
mov
lea
cmpsl
mov
push
sarb
jmpw
add
mov
sbb
fists
inc
ja
popf
or
pop
adc
or
push
inc
mov
repz
add
add
je
jo
and
lcall
adc
cltd
and
cmp
dec
jnp
dec
fldl
jl
xor
jae
dec
mov
inc
mov
insb
add
pop
lock
inc
pusha
jno
lea
mov
or
add
sahf
nop
mov
cwtl
or
adc
and
jnp
retw
shll
notl
and
fld1
xchg
in
and
out
cmp
mov
or
add
dec
fstpl
iret
dec
inc
xchg
inc
inc
push
dec
inc
dec
pop
pop
and
or
or
cmp
push
pop
loop
sbb
inc
dec
sub
cmp
jno
jg
dec
aas
cmpsb
and
sahf
fwait
ret
sbb
push
push
or
mov
mov
push
jmp
xor
es
adc
pop
inc
inc
xor
dec
push
or
lods
mov
orb
push
jo
pop
add
nop
test
jmp
out
push
dec
arpl
es
jge
jecxz
xor
je
clc
jo
xchg
sub
or
nop
push
sbb
mov
and
and
fs
movsl
rorb
ss
xor
outsb
or
jno
xor
call
add
iret
cmpsb
call
xor
aad
or
lock
fisttps
sbb
arpl
jmp
aas
xchg
les
adc
push
mov
inc
or
mov
inc
jecxz
into
inc
pop
add
test
movsl
sarb
out
jmp
mov
or
aaa
out
insl
pusha
fbld
jb
adc
orb
testb
in
xor
jne
adc
xchg
decl
adc
popa
mov
jno
cmp
dec
or
or
add
and
adc
or
shr
inc
adc
sarb
mov
aaa
in
popa
inc
cmp
pop
inc
fsubs
fnstenv
dec
mov
lcall
enter
popa
xor
popf
lods
mov
jmp
popa
xlat
test
mov
inc
popa
test
dec
or
cmp
and
jmp
jb
cmp
cmp
movsl
xchg
cmp
mov
outsl
push
xor
inc
stc
cld
adc
xor
inc
inc
adc
dec
adc
aaa
sbb
add
add
mov
push
adc
pop
mov
add
push
sbb
ss
mov
xor
cmp
xchg
movsb
test
loop
mov
push
pop
xor
ret
aas
cmp
mov
inc
push
sbb
mov
sub
lea
sbb
pop
pop
inc
mov
jae
cmpl
cmp
add
arpl
or
insl
and
adc
xchg
mov
fmuls
insb
insl
loope
daa
adc
mov
adc
dec
xor
dec
ret
or
mov
aam
or
addb
push
pop
push
icebp
adc
in
les
inc
inc
pop
loopne
sahf
adc
clc
mov
sbb
mov
add
or
add
loop
repz
aaa
add
insb
cmpsl
mov
or
js
dec
xor
and
repnz
fcomps
jecxz
cld
outsb
in
xor
pop
sub
or
addr16
hlt
ljmp
jle
dec
mov
jmp
jl
or
dec
mov
or
add
adc
or
ljmp
test
shlb
and
cmp
mov
ds
xor
js
stos
sub
popa
pop
mov
or
pop
add
fld
or
xchg
es
shll
lret
fmul
clc
sbb
cmp
xchg
mov
pop
imul
loop
mov
and
inc
icebp
add
add
jl
jl
mov
xorl
adc
adc
jmp
sub
xlat
inc
cli
mov
dec
sbb
xor
and
outsl
rorb
adc
adc
and
sbb
sub
xchg
sbb
mov
add
push
loopne
adc
sbb
and
mov
xchg
xor
je
jmp
and
or
pop
mov
xor
xchg
mov
push
scas
pop
addr16
sub
mov
or
adc
js
jo
xor
xor
mov
iret
mov
and
sub
sbb
cmp
xlat
add
jg
inc
xor
pop
imul
fs
add
pop
xor
push
adc
call
daa
adcl
scas
add
in
push
push
out
sbb
fstps
mov
push
fld
mov
leave
pop
repnz
add
adc
sub
and
fdivs
and
nop
fdivr
jmp
pop
cmc
in
jb
popa
xor
push
xor
cmp
in
push
adc
inc
pop
push
movb
inc
fmuls
mov
sbb
fnstcw
loope
mov
inc
aaa
jne
lock
jne
pop
push
test
loope
stos
ds
push
dec
mov
mov
fcom
pop
dec
pop
shlb
cmp
xchg
and
and
aam
mov
lock
push
lds
cmp
pop
pop
jecxz
or
loopne
and
pop
bound
jg
or
adc
test
push
xchg
test
test
push
push
data16
inc
mov
add
or
inc
fimuls
pop
jmp
mov
pop
pop
or
aad
jg
sub
movb
and
dec
les
add
adc
mov
cmpsl
test
push
mov
add
testb
in
lods
inc
dec
aaa
dec
xor
or
or
test
inc
dec
jmp
jge
xor
roll
add
xchg
imul
xchg
pop
sbb
test
jl
pop
or
inc
sbb
add
xorl
cmp
pop
dec
pop
std
insl
mov
xor
shrl
inc
dec
lods
insl
lods
xor
adc
pop
mov
mov
or
in
xchg
mov
xor
push
mov
sub
sub
or
mov
movzwl
push
imul
loope
cmp
pushf
xchg
fsubrs
push
stos
adc
pop
add
push
pop
jo
fcmovnu
in
jno
fs
cmp
fistps
sub
popa
inc
sub
loopne
jle
sub
or
fs
mov
mov
imul
mov
dec
inc
je
pusha
or
cmp
shlb
sbb
sub
xchg
xor
sbb
popa
or
xorb
repnz
add
sbb
pop
inc
inc
cs
push
dec
sbb
jmp
xor
sbbl
pop
lcall
or
mov
scas
fwait
or
push
cmp
lcall
cmpb
sub
out
loopne
inc
leave
sbb
in
loope
imul
sub
xchg
arpl
mov
cmp
jmp
sbb
ljmp
and
test
push
addb
adc
xchg
cmp
jl
cld
sbb
jo
pop
adc
and
and
inc
jnp
es
sbb
mov
jns
ret
dec
frstor
pop
mov
dec
xchg
pop
cmp
stos
lods
sbb
je
push
pop
jbe
or
dec
jmp
ficompl
push
lods
add
pop
lcall
mov
mov
es
in
push
cwtl
xchg
xchg
push
xchg
cltd
mov
jle
lods
push
mov
mov
push
test
andb
jl
or
dec
shll
enter
jo
add
scas
add
dec
push
add
stos
fs
sub
and
andl
jle
adc
xchg
mov
pop
or
mov
pop
int3
and
inc
inc
dec
imul
inc
movsb
arpl
inc
and
pop
addr16
jecxz
pushf
ds
es
popf
mov
pop
add
aaa
js
push
mov
and
and
addl
outsl
jb
ret
add
and
je,pn
or
add
inc
rcrb
leave
sub
popa
insb
scas
add
sbb
or
dec
or
pop
add
adc
mov
dec
adc
hlt
or
jae
dec
adc
rcrb
aas
push
test
loopne
xor
add
inc
add
add
push
xor
fwait
xor
pop
cmpl
sbbb
push
fsub
or
add
jb
dec
pop
and
lods
mov
sub
movsb
inc
incb
stos
mov
shlb
inc
ss
pop
repnz
je
mov
push
push
push
mov
cs
cmp
dec
nop
aaa
pop
add
adc
dec
test
and
pop
sbbb
fildl
xchg
dec
pop
add
andl
push
lock
push
jg
or
nop
xchg
cmp
pop
cmp
andl
sub
mov
or
inc
js
pop
pushf
in
fdivs
int3
mov
test
test
add
pop
push
push
xor
aas
push
mov
in
pop
push
aam
shrb
xor
inc
jns
mov
pusha
pushf
pop
push
test
and
cmp
test
sub
adc
push
adc
add
ret
dec
das
push
push
sbb
pop
nop
movb
imul
aaa
popa
jmp
insl
popf
adcb
lahf
scas
push
add
mov
lcall
sbb
inc
outsb
aam
ficoml
adc
repz
shl
enter
mov
dec
popf
adc
hlt
push
xor
loopne
sbb
mov
pop
sbb
mov
push
scas
bound
pop
push
dec
add
mov
mov
lods
sub
add
or
push
dec
dec
ret
inc
dec
jo
test
mov
bound
aas
insb
or
or
bound
pop
xchg
lahf
out
ja
add
jnp
js
sub
xor
aas
or
cmp
adc
or
fdivs
cmp
dec
psubb
mov
jno
hlt
push
imul
out
imul
sub
or
adc
dec
arpl
out
cwtl
xchg
lods
mov
adc
imul
cltd
pop
or
and
imul
jge
nop
or
js
cwtl
add
lods
xor
xchg
loop
es
and
and
mov
add
push
outsb
xchg
cmpsb
mov
out
pop
pusha
in
into
adc
loopne
pop
adc
dec
movb
adc
or
xchg
inc
lock
xchg
clc
add
mov
push
or
ficoms
nop
mov
inc
or
push
or
out
pusha
rolb
adc
into
or
add
testl
inc
lea
mov
or
xchg
dec
dec
or
jno
push
xor
add
inc
pop
sub
pop
iret
xchg
sub
add
jp
pop
test
pusha
or
mov
push
jmp
int
xchg
add
in
les
sti
sub
add
push
orb
mov
data16
pop
mov
and
xchg
jns
arpl
push
ja
mov
jae
mov
test
sbb
out
adc
xor
cvtdq2ps
xchg
adc
imul
push
aam
mov
leave
add
test
xor
or
adc
les
or
mov
mov
mov
jbe
ja
rcrl
xchg
pop
repnz
call
inc
mov
iret
addr16
addr16
dec
popf
repz
icebp
das
imul
int
addb
fwait
ret
push
movsl
push
sti
add
loopne
jne
hlt
es
inc
arpl
test
push
lea
xchg
add
pop
mov
inc
or
push
xlat
cmpb
mov
or
jp
adc
bound
mov
jne
mov
lcall
lock
inc
test
out
test
add
fistpll
gs
mov
imul
push
lea
and
add
jno
cmp
fcmovnu
xchg
imul
mov
push
xchg
or
push
adc
sbb
add
push
mov
mov
out
and
es
sub
push
mov
jo
pop
push
sub
adc
push
inc
data16
movsb
adc
xor
adc
push
xchg
sbb
imul
or
orl
mov
mov
adc
out
mov
iret
sbb
iret
xchg
jl
in
popf
sbb
clc
pop
outsb
in
and
fwait
adc
pop
mov
je
add
and
sahf
sub
int3
shlb
sbbb
dec
repz
popf
push
pop
mov
lahf
cwtl
pop
mov
xlat
scas
sub
insl
or
fistpll
fwait
imul
mov
cmpsl
mov
adc
inc
dec
imul
shll
dec
cmp
pop
mov
add
inc
add
add
add
sar
inc
add
mov
or
scas
xor
mov
mov
adc
cmp
cmp
inc
std
jg
lods
fsubrp
ljmp
jmp
jmp
dec
cli
aas
push
jmp
jmp
std
jg
fdivrp
fdivr
fcos
fdivr
xlat
call
call
call
call
call
xlat
push
mov
iret
mov
pop
cs
dec
fadds
into
leave
dec
mov
in
movsl
imul
fs
lds
xor
movsb
int3
aam
enter
mov
leave
or
in
into
fcomps
xor
cmp
ss
mov
fldt
iret
add
loopne
mov
mov
test
int
int3
in
dec
mov
cmpsl
mov
imul
movsl
fs
push
insb
xor
mov
mov
mov
mov
lock
xchg
add
test
mov
cs
call
lds
insl
int
push
cmp
lahf
mov
clc
scas
push
mov
movl
leave
nop
push
inc
imul
movsb
sbb
or
enter
add
les
cmp
push
inc
or
xor
jmp
xchg
lods
xor
and
js
adc
cmp
sub
pop
pop
js
pop
ja
lret
dec
push
add
ss
jns
addb
sub
jnp
testl
push
jg
or
inc
and
xor
mov
dec
rolb
mov
leave
lods
ret
dec
mov
and
xor
sahf
sub
push
push
and
cmp
mov
popa
and
adc
iret
dec
sub
pop
sub
push
mov
adc
adc
push
jg
incb
adc
sbb
dec
mov
ss
mov
fbstp
pop
jne
sahf
push
add
enter
insb
and
les
mov
add
cmp
je
out
pop
jle
loope
add
rorb
inc
add
cmp
pop
int
jl
movups
adc
dec
add
sar
sub
sub
cmovbe
lret
and
add
add
aad
jmp
mov
mull
test
adc
sbb
cmpsl
fstpl
add
sbb
add
push
add
mov
mov
push
mov
mov
or
xchg
cmp
or
aaa
imul
sbb
jg
and
mov
mov
mov
add
push
mov
xor
cmp
or
sbb
lret
inc
inc
inc
inc
decl
jl
jmp
inc
jecxz
mov
lods
std
imul
cld
pop
loopne
stc
fwait
mov
pushl
cwtl
xor
jae
pop
cmc
clc
negb
cmp
lods
imul
addr16
in
movsb
hlt
stc
sub
jae
pop
fld
push
lock
xchg
jo
inc
call
pop
insl
imul
push
dec
and
push
sub
dec
imul
push
insb
jl
cmp
cmpsb
stc
mov
and
pop
pop
jo
cmpsb
imul
dec
shll
loopne
or
pusha
lods
mov
ss
push
insb
push
mov
or
pop
shll
push
mov
shlb
xor
or
pop
or
xchg
or
sbb
inc
mov
test
add
mov
xor
sbb
je
dec
shll
js
adc
mov
mov
pop
stos
mov
pop
cld
std
sub
lcall
fcompl
pop
add
mov
lods
stc
daa
add
scas
adc
andb
mov
fstl
push
clc
pop
push
les
push
inc
pop
and
mov
outsl
sbbl
addb
outsb
ret
or
ljmp
pop
inc
add
sub
mov
aaa
add
cvtps2pi
push
pop
aaa
call
pop
sub
push
or
mov
mov
pop
ja
push
out
sbb
and
pushf
mov
dec
js
inc
jb
dec
outsl
mov
mov
mov
sub
daa
xor
push
pop
add
int3
data16
sti
adc
and
or
add
and
cmpsb
mov
jl
js
mov
arpl
andl
dec
pop
pop
mov
jg
add
aaa
add
add
jb
cmp
mov
sbb
jb
pop
sub
es
jb
and
cs
les
test
push
xor
in
mov
imul
add
jge
test
shll
ret
dec
jecxz
ss
sbb
data16
les
jns
jp
ret
popa
incl
xlat
pop
lock
pop
cs
inc
cmp
das
inc
pusha
inc
fs
jmp
out
dec
sbb
xor
out
push
inc
repnz
fwait
sahf
jp
shlb
mov
pop
push
push
adc
dec
and
mov
pop
adc
fldcw
or
pop
add
orb
push
fbld
add
hlt
lcall
and
pop
lea
je
push
sub
mov
xchg
mov
inc
movl
js
imul
pop
hlt
sbb
xor
mov
inc
jmp
jmp
pop
scas
int
or
or
ret
loopne
dec
dec
cmp
adc
push
sbb
xchg
test
pop
dec
ffreep
push
iret
sbb
lock
push
push
xchg
sub
les
jle
jecxz
test
and
sbbb
pop
cwtl
adc
jo
pop
dec
inc
aas
push
push
inc
or
lods
jecxz
in
push
sbb
push
push
leave
pop
sbb
dec
push
push
inc
push
inc
fildl
jo
daa
subb
xchg
or
inc
insb
popa
jae
mov
jno
pop
fisttpll
and
pop
jnp
stc
je
push
mulb
mov
btc
push
sbb
and
add
sub
notb
dec
or
out
inc
cmp
mov
cmp
adcl
mov
xchg
adc
lcall
hlt
cmp
dec
pop
adc
add
xchg
inc
xchg
push
and
mov
xchg
sbb
aaa
mov
lea
movsb
adc
stos
fs
mov
push
sub
add
sbb
mov
push
mov
es
call
out
mov
les
add
aaa
popl
jg
mov
cmpsl
add
ja
movsb
xor
mov
or
mov
loope
add
sbb
sub
add
cmp
jl
inc
sub
pop
das
pop
jecxz
pop
or
fsub
push
inc
mov
cmpsb
pop
xor
or
xchg
jo
add
add
add
orl
push
shll
xchg
mov
test
jmp
dec
adc
jno
sbb
mov
lcall
inc
insl
or
adc
loop
mov
or
loopne
cmp
cmp
jmp
pop
adc
or
or
imul
push
cmp
test
movsb
push
rcll
les
xchg
gs
pop
or
adc
adc
xchg
gs
adc
sbb
and
xchg
gs
sub
sub
bound
dec
mov
push
into
and
inc
shlb
out
push
fsubs
push
xchg
outsl
mov
dec
dec
sbb
out
push
ret
fidivl
loopne
mov
or
inc
popf
aad
aas
jno
dec
sarl
adc
je
sub
je
cmp
movsl
cmpl
pop
or
ja
mov
aaa
and
mov
xchg
jae
sub
sbbl
pusha
sub
inc
daa
mov
dec
mov
inc
in
adc
pop
ret
in
rcll
orb
cmp
or
in
or
cmp
push
inc
popa
sbb
xchg
mov
and
jo
inc
fdivs
push
mov
adc
add
adc
or
scas
aas
hlt
jmp
or
pushl
movsb
jno
out
ss
dec
inc
push
push
sbb
orb
inc
and
or
cmp
repnz
es
mov
push
mov
cmp
sbb
cmp
clc
push
insb
enter
inc
add
xor
adc
xchg
gs
lea
inc
inc
mov
insl
test
rorl
hlt
mov
sub
xchg
rolb
fbstp
fwait
or
movsb
shrb
lods
loope
mov
inc
push
pop
jp
inc
or
aas
ret
ss
push
mov
aas
les
sub
subb
mov
and
inc
or
and
adc
adc
loop
jb
inc
inc
push
push
cmp
leave
adcl
aaa
push
push
ss
mov
xchg
testl
insb
insb
dec
std
rclb
out
lea
js
movsl
cmp
inc
inc
ret
rorl
sbb
mov
mov
xchg
adc
into
enter
pop
xchg
mov
adc
xchg
mov
mov
repnz
or
mov
popa
pop
push
sahf
jle
sub
adc
mov
js
xchg
dec
or
xchg
rclb
add
movsb
xchg
dec
fiadds
mov
xchg
inc
inc
sbb
test
daa
push
lret
ret
mov
scas
lea
fisubl
add
pop
cmpsl
shl
insb
mov
xor
mov
cmp
mov
cmp
out
sub
and
ja
add
das
xor
je
mov
sarl
jb
outsl
xchg
ds
cli
popa
movb
cmp
xorb
addr16
mov
lahf
add
fildl
pusha
and
not
mov
mov
roll
test
xchg
mov
cli
sub
movsl
dec
xor
int
arpl
inc
fiadds
pop
dec
imul
inc
add
jge
cmp
pop
add
inc
rcr
xor
lock
fdivrs
pusha
movsl
in
sub
fidivl
adc
add
jns
test
sar
dec
imul
lea
lods
test
or
imul
xchg
aam
mov
cmp
les
sarb
mov
in
sub
add
fsubrs
push
and
dec
out
test
hlt
shll
push
sub
lods
test
in
aad
dec
fs
dec
add
in
into
insb
test
ret
mov
cmpsl
ret
test
hlt
outsl
testl
sarb
mov
and
dec
test
jg
ror
sub
lods
add
inc
or
push
adc
or
in
xor
add
or
pop
in
xchg
pop
dec
adc
mov
push
xchg
imul
push
pop
cmp
xchg
lock
xor
xor
jle
inc
jno
call
cmpsl
mov
daa
dec
add
sub
arpl
add
rorl
shrb
xor
and
in
adc
sbb
push
and
cmp
sub
movsb
add
and
lods
inc
scas
popa
dec
movsb
inc
ret
popf
mov
cmp
mov
jbe
jne
and
or
jmp
outsb
dec
add
and
mov
sbb
lock
in
cmp
cs
lock
cmp
shrb
pop
xlat
dec
call
das
lods
lret
or
xor
xchg
jle
dec
push
push
pop
inc
cmp
js
adc
inc
loopne
inc
xchg
cmpsb
or
mov
xchg
sub
cwtl
xchg
jle
maxsd
mov
jl
fsubr
aad
sub
ret
dec
lea
jmp
push
hlt
push
cmp
mov
sbb
mov
xlat
cmp
or
addb
push
pop
fisubrl
mov
ljmp
and
outsb
mov
popa
pop
fildll
jo
jl
int
xchg
lods
mov
js
push
or
pop
imul
ds
test
push
cmp
sub
cmp
fimull
fs
push
fs
rcl
out
test
xor
mov
repz
dec
xchg
test
pop
xchg
or
sub
and
jge
fstpl
jge
es
inc
push
sbbl
sti
mov
mov
dec
and
or
mov
in
sbb
or
mov
adc
out
adc
int3
test
adc
adc
int
jecxz
sti
cmp
je
ljmp
out
je
out
cmp
pop
sub
adc
mov
push
add
mov
insl
mov
xlat
xor
es
mov
and
pop
push
adc
and
mov
add
loope
and
and
push
pop
inc
sub
push
and
jo
cmp
std
adcb
js
ret
cmp
dec
nopl
loope
inc
jmp
add
fadds
cs
fldl
sub
dec
sbb
sub
and
push
push
push
cmp
xlat
out
pop
mov
fidivl
mov
and
lea
arpl
fists
pop
fsubs
ret
pop
xor
push
mov
cwtl
pop
test
pushf
jp
popa
out
xor
movsb
push
pop
lret
xor
inc
test
sub
inc
fildl
adc
js
dec
arpl
les
scas
inc
es
mov
xor
enter
fisubrs
sub
and
pushf
fisubrl
jecxz
jmp
add
mov
cmp
popa
adc
fstpt
jmp
test
sub
sub
dec
push
and
and
and
adc
or
inc
lea
lret
fdivrp
fstpl
fwait
jmp
sbb
pop
and
cmp
and
popa
dec
jle
jno
mov
sub
imul
loop
ss
jmp
adc
dec
fisttpl
add
sbb
and
cmp
sbb
sub
xchg
lods
jb
push
push
adc
roll
sbb
addr16
xor
mov
jo
xorb
in
add
push
mov
xchg
roll
fcompl
mov
test
ja
repnz
mov
dec
sarl
inc
and
iret
and
jnp
orb
cs
jecxz
cmp
push
jne
lea
andl
pop
call
les
imul
imul
and
sub
jecxz
push
popf
push
lret
dec
and
inc
dec
jmp
scas
adc
sbbl
push
ss
enter
push
mov
add
cltd
add
pop
sbb
xchg
jno
dec
push
sbb
test
cmpsb
or
mov
adc
dec
push
adc
test
mov
dec
add
int3
stc
cmp
je
push
jne
mov
add
in
push
add
sub
lods
mov
sbb
in
cmp
xor
mov
popl
inc
lret
add
mov
lods
mov
out
xor
out
sbb
test
ret
push
lret
das
ss
dec
enter
xor
adc
xchg
push
push
shrb
cwtl
jno
lahf
and
xor
test
inc
insb
cmc
sub
cmpsb
inc
xlat
and
dec
int
mov
mov
cmp
or
out
test
adc
xchg
fs
je
and
xor
push
sbbb
movsl
adc
push
sub
or
andl
push
rcrl
je
test
sahf
xchg
rclb
popa
cmp
or
xchg
push
xchg
lods
ret
sub
mov
jo
pusha
add
and
or
xorl
mov
loope
or
push
pop
cmp
or
jne
mov
mov
sbb
adc
sub
or
sub
push
adc
fmuls
daa
cmp
shlb
push
xchg
pushf
enter
cmp
jae
and
push
inc
and
pop
mov
addr16
scas
div
adc
add
jecxz
mov
push
mov
inc
imul
js
pop
and
and
jbe
lea
dec
xchg
imul
fwait
dec
popa
dec
sahf
push
mov
xchg
inc
and
push
imul
lds
add
pop
out
mov
ret
sbb
rol
fwait
sub
clc
sbb
add
sbb
jmp
mov
lea
inc
addr16
add
scas
cmp
lsl
push
outsb
pop
scas
add
pusha
or
imul
int3
aaa
mov
add
or
test
repz
pop
xchg
insb
hlt
insl
or
sarl
xchg
test
dec
xor
clc
sub
and
fstl
jne
lods
adc
outsb
mov
adc
sbb
cmp
sbb
xchg
push
adc
add
inc
push
imul
sub
outsl
push
pop
adc
jbe
outsl
mov
lcall
lret
lods
mov
outsb
repnz
subl
insl
rolb
in
jl
xchg
mov
pop
lea
pop
cmp
push
or
or
sub
mov
loopne
pop
add
fs
lock
pusha
or
es
add
pop
insl
roll
cli
mov
mov
push
dec
cmp
add
cmp
aaa
mov
xlat
pop
add
mov
xor
xlat
aam
mov
dec
push
add
arpl
shll
push
pop
pop
jg
adc
inc
xchg
scas
push
cwtl
fbld
mov
test
adc
sbb
adc
pop
or
popa
bound
or
adc
leave
push
orl
out
out
incl
dec
or
or
in
jnp
lret
pop
popf
jge
cmp
push
jl
sahf
xchg
or
adc
je
xchg
imull
ljmp
or
xor
pop
je
cmp
pusha
dec
cmpsb
pop
sbb
addb
sbbb
pop
lds
jb
in
in
sub
adc
push
icebp
adc
add
insl
inc
add
adc
and
ja
movl
jae
mov
inc
out
pop
out
mov
mov
add
inc
xchg
jmp
add
push
jo
scas
mov
mov
mov
cmp
mov
add
sub
mov
pop
and
cmp
dec
jp
sub
add
or
je
mov
adc
lea
xor
shlb
cltd
iret
shll
outsl
fwait
adc
fld
and
sbb
arpl
mov
cmp
xor
test
and
jo
ficompl
outsl
in
or
pop
pop
leave
mov
add
xor
lods
jo
inc
push
mov
mov
sub
syscall
mov
mov
push
aaa
ret
cmp
pusha
bound
bnd
push
sbb
pop
fstl
je
sbb
xchg
cmp
push
js
movsl
xor
add
out
mov
cmp
rorb
repnz
int3
aas
mov
dec
xor
lret
addl
inc
inc
cmp
rolb
cmp
push
or
mov
popa
push
call
xorb
pop
sbb
dec
shlb
inc
add
add
sbb
movb
dec
test
ss
jbe
pusha
push
pop
add
jmp
jge
jp
cmp
xor
ret
fimull
popf
call
sbb
hlt
daa
sbb
ja
mov
adc
movsb
cmp
sbb
and
aaa
movsb
cltd
mov
mov
popa
mov
sub
pop
jns
inc
xor
sbb
sub
nop
push
popa
test
push
add
pop
ret
push
sbb
loopne
loopne
adc
sub
push
and
sub
mov
or
insl
xlat
jl
xchg
ret
xor
pusha
and
sub
or
mov
pop
xor
push
pop
fdiv
mov
push
aaa
push
cmpsb
adc
cltd
lds
fwait
push
insb
sti
mov
pop
xchg
adc
mov
mov
je
inc
push
push
outsl
lret
cld
adc
jmp
orl
sahf
insb
dec
lcall
insb
add
inc
lret
fdivrl
mov
test
pop
xor
ds
lret
push
pop
mov
mov
fs
and
xchg
cli
add
daa
dec
or
popf
dec
dec
push
or
add
push
clc
rcrb
arpl
push
or
cld
push
outsl
ret
dec
xchg
adc
xchg
pop
xor
pop
and
js
and
stos
clc
jmp
mul
xchg
sarb
lahf
les
push
push
mov
xor
pop
loope
xchg
nop
jo
lahf
movsb
xchg
mov
push
cld
test
push
je
jmp
or
test
out
ret
ljmp
xor
dec
jecxz
xlat
jne
inc
jns
mov
push
pop
dec
push
add
mov
adc
dec
dec
in
inc
xor
or
xor
push
cmp
icebp
loope
cmpsb
movsb
in
push
or
js
cs
ret
jb
inc
ja
jnp
jne
add
or
or
dec
xchg
dec
and
or
mov
jns
inc
inc
mov
jp
or
cmp
outsb
out
lret
inc
add
mov
or
iret
dec
push
fisttps
outsl
cmpb
mov
aam
hlt
testb
js
loopne
mov
inc
mov
push
pop
sarb
push
xchg
lcall
or
mov
dec
ss
jmp
adc
ss
adc
jns
or
dec
mov
mov
outsl
fs
sub
sub
imul
and
mov
pop
xchg
jle
xor
lea
xor
pop
ret
insl
adc
das
nop
lcall
inc
addb
xor
roll
mov
testb
lds
dec
add
rcl
cmpsb
ja
xchg
dec
add
aam
add
cmpsl
cmpsl
mov
in
xchg
cmp
je
adc
add
cmp
jo
inc
ja
adc
shlb
into
es
sbbl
rcrb
imul
adc
adc
inc
xchg
in
pop
cmp
cmp
cli
clc
dec
and
int3
cmpsl
push
bound
fs
rorl
cmp
mov
lods
repz
adc
pusha
cmp
and
and
subl
push
or
popa
loope
mov
pusha
mov
jmp
mull
xchg
pop
movb
adc
mull
push
mov
mov
inc
ja
sub
dec
lret
or
outsl
dec
or
or
dec
cmp
dec
fxch
movsl
push
mov
ret
cmp
inc
lock
sub
lds
int
addr16
cmpsb
mov
mov
bound
je
cmp
pop
inc
mov
mov
jbe
pop
xor
pop
add
pop
test
bound
in
add
adc
imul
sub
cmpsl
add
lods
mov
bound
repnz
lea
sub
jb
pop
fiadds
push
or
js
aam
adc
cmpsl
fs
adc
stos
mov
add
sarb
add
inc
add
push
dec
or
sub
rolb
xchg
stc
loope
push
xchg
mov
add
add
jne
pop
pop
stos
push
test
in
int3
inc
mov
aaa
out
cmp
test
test
xor
mov
rcll
inc
push
hlt
lret
mov
adcb
ja
mov
dec
popl
sub
and
test
lcall
push
inc
adc
add
adc
dec
sub
add
or
adc
dec
pusha
xor
adc
pop
sbb
sarb
push
or
cmp
xor
and
xchg
pop
jnp
sbb
and
xchg
dec
adc
insl
add
xor
inc
fwait
dec
inc
shrl
sahf
or
or
mov
cmp
adc
dec
mov
or
in
and
fdivrp
adc
mov
leave
pop
ret
xchg
sbb
push
push
adc
js
jnp
loopne
adc
into
adc
lods
mov
mov
hlt
nop
mov
adc
mov
arpl
push
nop
mov
mov
xor
fsubrs
loop
xchg
cmpsl
ret
inc
push
and
adc
les
xor
movsl
and
push
loop
jo
push
adc
loop
mov
add
lret
mov
pop
or
aaa
mov
aam
loop
out
es
cmpsb
mov
and
jge
scas
dec
mov
adc
sarb
inc
inc
scas
outsb
lods
xchg
movsb
aaa
aas
pushf
inc
and
xchg
int3
or
mov
ror
xor
out
sbb
pop
push
je
jl
mov
pop
or
pop
add
pop
jle
jbe
push
je
lahf
or
pop
mov
add
or
xorl
add
pop
and
enter
and
adc
imul
fcomps
sub
lcall
mov
dec
pop
xchg
or
inc
mov
or
les
pop
add
push
mov
lods
aam
insl
mov
mov
test
adc
and
mov
or
cmp
jg
pop
je
mov
lods
xchg
pusha
leave
or
cmp
jmp
ret
add
push
jno
fwait
sub
jb
insb
jmp
orb
cltd
and
push
cs
dec
andl
int
push
or
inc
fsubl
mov
add
mov
adc
fld
adc
or
es
pop
dec
stos
aas
or
ljmp
vmread
add
cmp
xchg
xchg
cmpl
mov
mov
inc
pop
pop
pop
dec
sahf
mov
or
pusha
faddp
mov
js
data16
and
int3
xor
mov
push
jle
clc
cmp
add
mov
scas
cmp
add
xor
adc
daa
xchg
test
xchg
and
dec
inc
dec
imul
stos
xor
add
or
pop
sarb
dec
mov
push
xchg
test
mov
lods
adc
popa
imul
leave
je
imul
fucomi
mov
push
test
adc
lahf
fwait
int3
test
ret
lea
mov
xor
sbb
xor
dec
xchg
pop
movsb
sbb
leave
jmp
scas
leave
adc
loopne
xorb
mov
lods
push
jecxz
sub
dec
dec
xlat
mov
outsb
inc
lret
or
inc
xor
ret
cs
js
pop
xlat
fmull
and
bound
xor
test
and
std
mov
push
js
dec
jmp
xchg
mov
je
adc
or
mov
mov
rclb
xor
dec
cld
add
pop
test
or
lock
rorb
les
ficompl
lahf
rolb
insl
ljmp
dec
sub
ret
mov
inc
xchg
flds
popf
cvtps2pi
xchg
leave
pop
push
mov
jbe
sahf
xchg
dec
add
clts
pop
test
cwtl
loopne
je
fcoml
or
sub
sbb
push
insb
xor
int3
xchg
inc
mov
vmulsd
outsb
repnz
das
sbb
repz
pop
in
fnstcw
cld
add
push
popa
inc
mov
sbb
dec
push
push
and
popa
cs
mov
and
dec
dec
fnsave
shll
sbb
int3
pop
pop
mov
das
subl
cli
xchg
das
pop
mov
jae
add
imul
inc
sub
push
dec
sub
mov
sarb
adc
jne
add
out
adc
cmp
inc
dec
sbb
push
orb
xchg
int
add
add
sub
test
or
mov
into
adc
out
das
mov
pop
adc
mov
xor
mov
add
mov
sbb
adc
loop
popa
or
push
arpl
push
sarl
lock
aas
pop
bound
dec
adc
mov
or
fistl
movsl
inc
aaa
xchg
sbb
imul
pop
sub
fisubl
or
loopne
or
in
test
call
dec
adc
add
dec
and
inc
or
loope
sbb
fs
mov
adc
cmp
inc
pop
leave
fwait
lea
fst
mov
push
fucomp
adc
inc
or
outsb
add
outsb
or
push
inc
add
or
jmp
mov
loope
add
adc
andl
jl
mov
push
insb
push
mov
jmp
sbb
outsb
pop
xor
xor
xchg
popa
pop
or
mov
inc
dec
mov
or
sbb
inc
jno
into
nop
dec
lret
pop
dec
inc
stos
pusha
cmp
dec
dec
sbb
add
into
xor
push
loopne
lret
sbb
cli
jne
add
lea
mov
sbb
inc
imul
out
js
cmp
or
neg
pop
outsl
jbe
push
imul
stc
mov
jmp
sub
mov
shrb
cmp
jge
mov
sub
push
lcall
sbb
andl
jns
jp
inc
push
and
and
push
or
pop
dec
jl
addl
push
push
pushf
pop
jge
xchg
dec
inc
scas
nop
dec
dec
dec
xchg
inc
into
loopne
mov
push
sahf
sub
scas
push
jg
les
jmp
sbb
add
add
aaa
loopne
cmp
cmpsl
or
mov
adc
fwait
jp
incl
push
mov
mov
ret
cmp
push
sbb
int
decb
inc
push
sub
cmp
aaa
call
dec
loope
add
in
or
fidivrl
push
addl
pusha
push
lcall
mov
sub
cmpsl
lods
sub
call
add
and
cli
in
outsl
or
adc
es
stc
nop
test
jne
aaa
pop
xor
loopne
jp
jo
jns
in
jne
pop
cmpb
mov
les
loopne
xlat
pop
and
fucom
add
mov
push
ss
add
and
mov
mov
jo
sti
and
push
shll
mov
or
xor
iret
push
sbb
xor
lret
shrl
int3
or
addb
mov
or
mov
sub
mov
adc
push
lods
fcoml
insb
addr16
in
cmp
and
movb
loopne
mov
sbb
pop
dec
cwtl
shlb
ret
mov
xor
push
pop
xor
xchg
xchg
or
inc
pushf
sbb
stos
jle
jo
push
sarb
sbb
es
mov
mov
add
addl
or
dec
sub
jmp
lcall
mov
sbb
or
rorb
push
add
add
icebp
sub
mov
sahf
loopne
jbe
pop
adc
js
jne
pop
push
fisttpl
push
test
ss
js
adc
mov
rcll
sub
ljmp
andb
xchg
loopne
mov
test
xor
push
ds
or
dec
icebp
mov
cmp
push
push
imul
mov
aaa
int3
and
and
push
mov
fcomi
add
and
sbb
push
popf
push
and
pop
push
pop
xorl
les
adc
je
pusha
cmpsb
dec
xchg
lcall
movsl
test
subb
movsb
incb
inc
or
popa
lods
sarl
aas
cmc
mov
xchg
mov
push
scas
enter
bound
stos
mov
xchg
mov
jo
inc
or
push
mov
push
xchg
cltd
lock
sbb
jg
xchg
mov
and
adc
pop
push
scas
mov
adc
addb
jg
cmc
mov
mov
sub
xor
dec
pop
je
syscall
adc
cmp
into
repnz
mov
inc
cmpsb
lock
je
orb
dec
shlb
insb
or
xor
iret
rorb
adc
nop
cltd
flds
sub
sbb
or
or
adc
dec
rcrl
inc
mov
mov
outsl
or
mov
popa
or
pop
out
dec
sub
jge
shrb
repz
push
or
or
pop
jmp
cmp
mov
sub
push
add
push
or
adc
mov
cmpsl
push
rcrb
mov
pop
sub
movb
or
addr16
dec
andl
push
jp
mov
push
inc
cmpb
xchg
push
roll
fldenv
cmpsb
or
inc
jmp
jge
dec
imul
inc
cmp
lahf
push
adc
dec
push
pop
movsb
inc
nop
inc
sub
dec
xor
jp
xchg
sub
dec
dec
pop
shrb
sub
push
push
sub
push
fs
pop
adc
sbb
pop
ret
and
nop
sub
into
aas
adc
mov
in
adc
js
dec
pop
mov
dec
jle
xchg
out
lock
pushf
je
inc
rorb
push
inc
jp
add
sarb
addb
inc
xor
add
cmp
add
xchg
or
sbb
or
pop
jmp
ret
dec
aam
or
pop
add
aas
mov
push
dec
push
add
jle
push
sub
jecxz
jmp
xchg
sbb
adc
inc
std
or
cmp
jne
add
add
push
pop
xor
ja
test
mov
xchg
sub
mov
mov
and
add
xchg
dec
ds
sbb
add
pop
in
push
pop
mov
outsl
adc
or
test
addr16
xchg
pop
mov
mov
mov
add
js
dec
or
sbb
cmp
sbb
mov
ficomps
xor
mov
pop
in
clc
xchg
sbb
mov
sub
adc
adc
pop
testb
test
clc
test
shll
ret
inc
rclb
add
or
mov
mov
mov
add
out
mov
sarb
or
add
cmp
rcrl
add
daa
cmpsb
ss
mov
and
adc
bound
add
adc
arpl
dec
dec
insb
push
xchg
ret
xchg
add
jbe
lcall
lea
xchg
xchg
cld
xlat
add
add
rorl
pop
pop
pop
adc
pop
lahf
imull
call
or
dec
jle
ja
push
add
add
add
out
jl
je
jg
ret
fcom
aad
jbe
andl
dec
mov
push
sbb
cmp
rolb
xor
and
sbb
scas
dec
sbb
pop
jecxz
add
dec
add
shlb
fsubs
sbb
les
xlat
rcl
xchg
sub
in
jmp
xchg
xor
dec
mov
pop
ret
addr16
lret
testb
push
add
aam
add
gs
dec
inc
das
pop
inc
stos
jo
cmp
repz
or
jb
jo
scas
dec
sbb
mov
add
jo
ret
repz
gs
sbb
pusha
rcll
or
out
jno
add
sbb
cmp
lahf
inc
mov
mov
inc
mov
sti
ficompl
inc
push
adcb
arpl
xchg
cwtl
mov
push
bswap
inc
jmp
dec
fs
cmpl
sub
bound
rorl
mov
pop
aam
push
jmp
pop
dec
or
inc
scas
nop
cmpl
and
dec
xchg
fwait
adc
rorl
inc
mov
dec
adc
les
push
sbb
xor
std
aam
xchg
mov
jo
cmp
leave
adc
popf
loopne
dec
es
jmp
lds
push
insb
addr16
mov
add
add
adc
inc
out
xchg
jne
add
add
mov
xor
aam
ret
popf
cmp
inc
mov
add
adc
and
movsb
push
lret
dec
cwtl
mov
iret
fmull
imul
adc
sub
das
xor
mov
outsl
pause
inc
inc
pushf
mov
jle
mov
or
loopne
dec
jge
mov
pop
xor
adc
adc
jle
pop
sahf
xchg
aaa
adc
or
xchg
in
dec
es
je
mov
je
mov
arpl
cmpb
testb
adc
xchg
ss
or
push
and
adcb
fwait
pop
push
cs
sbb
push
lods
test
add
pusha
sbb
add
cs
or
insl
ljmp
or
xor
dec
pop
or
lret
xor
or
sbb
xchg
sahf
dec
adc
pop
push
or
mov
pop
mov
mov
outsb
adcl
outsb
push
push
loop
mov
add
test
inc
mov
mov
add
add
jg
push
xchg
pusha
cmp
pop
jno
sbb
orb
arpl
jecxz
out
pop
inc
fsubs
push
xor
sbb
leave
pop
pop
push
in
mov
dec
push
and
insb
xor
rorb
insb
ret
push
sbb
dec
popl
ljmp
pop
dec
add
pop
adc
pop
ret
and
insb
dec
daa
or
dec
dec
repnz
outsb
nop
dec
ljmp
nop
push
imul
insb
pop
sub
jo
push
cmpsb
mov
loopnew
xor
cld
push
test
jmp
or
ljmp
addb
fstl
jnp
pop
jne
dec
mov
sub
xor
jne
cmpsb
cwtl
jecxz
mov
dec
dec
imul
push
inc
add
push
clc
add
add
sbb
pop
mov
call
sub
adc
add
lock
aam
push
push
cmp
xor
cmp
sbb
jbe
nop
pop
inc
mov
in
mov
add
insl
ret
cmpb
test
das
lods
add
pop
pop
clc
add
inc
loope
push
fwait
mov
sub
or
cmp
leave
or
stos
mov
dec
rolb
loope
xchg
add
sbb
xchg
in
int3
add
pusha
dec
in
add
adc
adc
or
fadd
sub
lret
aad
js
enter
lock
jge
inc
pop
xor
mov
and
mov
xor
mov
inc
jno
xor
ret
mov
adc
xlat
cltd
inc
add
lods
push
test
push
mov
xor
fsubrl
inc
fdivrs
scas
xor
mov
inc
stos
add
movsl
lods
arpl
pop
das
pop
sbbb
and
push
rorb
fldl
jge
fcoms
xor
hlt
aam
cmc
scas
enter
leave
js
test
jg
mov
add
into
dec
lds
mov
jmp
or
test
mov
add
insl
cmp
push
add
and
dec
ljmp
or
pop
xor
or
sbb
imul
xor
and
xor
add
mov
fwait
out
lahf
rorb
imul
or
or
repz
in
aam
xchg
dec
pop
add
cmp
inc
fs
inc
sub
and
test
xchg
pop
dec
ss
dec
jl
push
mov
jae
imul
adc
adc
aad
push
fsub
jecxz
scas
cmpsl
arpl
and
add
mov
loopne
outsl
aam
nop
ret
fildl
pop
xchg
fiaddl
push
mov
movsb
adc
in
repz
lret
sbb
js
test
add
in
adc
cmp
sbb
sub
test
pop
sbb
or
push
push
cmp
js
mov
test
ds
aam
adc
xor
pushf
mov
cmpb
add
pushf
mov
inc
pop
lcall
mov
add
sbb
inc
loope
inc
movl
or
xor
or
sub
jecxz
and
add
xor
xor
mov
xchg
fidivs
add
cltd
xchg
out
mov
mov
inc
popf
adc
push
test
jecxz
fimuls
push
add
stc
or
pop
andl
addr16
push
jo
aam
subl
cmp
test
or
adc
mov
lods
push
dec
aad
push
clc
jecxz
xor
stos
loopne
mov
add
mov
bound
jecxz
pop
repz
lret
fs
data16
stos
rcrl
xor
or
mov
out
syscall
mov
movb
xor
gs
js
and
fwait
std
adc
into
call
mov
jp
xchg
in
mov
dec
sbb
int3
push
push
gs
sbb
cld
push
jne
shll
and
movsb
sub
inc
cmc
xchg
mov
xchg
pushf
bound
xor
xchg
and
pop
mov
push
sbb
pop
stos
sbb
add
pop
imul
pusha
ljmp
xor
or
shll
pop
jge
enter
outsb
insl
or
sbb
xor
ret
and
bound
adc
inc
out
leave
sub
rcrl
shlb
xchg
popf
dec
or
in
shrl
mov
or
jo
mov
js
nop
cmp
xorl
or
and
push
imul
jb
and
mov
sbb
and
daa
push
aam
nop
jmp
xor
inc
cmpsb
adcl
pop
es
jge
or
jl
enter
dec
rcrl
not
adc
adc
jle
lea
sub
cmp
sbb
and
int3
sub
cltd
arpl
adc
inc
xchg
inc
lock
in
adc
sbb
fs
dec
in
and
enter
mov
sub
mov
xor
pop
cmp
push
popa
add
inc
push
popa
mov
nop
subl
orb
jmp
aaa
xchg
sbb
adc
jmp
xorl
sbb
xor
lea
sub
mov
or
jns
push
sbb
xchg
aaa
lock
add
leave
leave
xchg
in
call
pushf
movb
inc
inc
pop
gs
imul
inc
push
adc
jne
pusha
inc
xor
push
push
test
dec
add
jecxz
shl
or
sub
movsl
loop
enter
repz
pop
pop
inc
add
popa
or
adc
add
pop
add
lock
add
dec
shll
push
scas
and
dec
fadds
imul
xchg
dec
jmp
jle
jg
repz
lods
or
fs
add
jmp
or
js
sbb
shll
push
sub
push
mov
popa
enter
push
movsb
xchg
cmpsb
aam
rclb
inc
xchg
sbbl
dec
lods
cs
pop
lods
xadd
movsl
push
ror
and
in
xor
xchg
xor
push
addr16
or
jno
sub
inc
push
push
push
inc
push
and
xor
add
pop
andl
dec
fdiv
cmp
test
enter
sbb
pop
imulb
sbb
dec
jmp
pop
cmp
jne
and
push
rorl
in
jo
sub
inc
mov
dec
dec
add
mov
cmp
enter
sbb
ficompl
inc
xchg
adc
testl
lcall
hlt
and
popa
pop
push
sbb
int3
outsl
shl
sarl
imul
insl
mov
fldt
xor
leave
inc
push
hlt
pop
mov
mov
int
xor
jle
ds
enter
aam
pop
cmpsl
jne
jmp
rolb
cwtl
add
push
movsb
xor
pop
sub
sub
rorl
test
sbb
loopne
divb
push
popa
pop
mov
daa
test
adcb
sub
lcall
dec
pop
sub
add
orb
insl
insl
push
cmp
sub
fstpt
mov
inc
push
stos
dec
lods
add
push
jb
jnp
jne
pop
adc
add
and
loope
fisubrl
mov
mov
cs
pop
xchg
jo
and
xchg
aam
sbb
add
jbe
xchg
xchg
hlt
lods
les
sbb
jae
mov
inc
and
xchg
dec
enter
sbb
or
pusha
push
out
lods
call
push
pop
faddp
cmpps
into
mov
sarb
pushf
fs
jb
xor
mov
jbe
lcall
in
add
gs
inc
pop
xor
jne
mov
lret
xchg
sub
add
push
add
push
std
shll
movsl
cwtl
rclb
je
imul
push
fisttpll
pop
add
xor
cmpsb
sub
imul
nop
jge
test
sbb
inc
sbb
or
and
sbb
and
aad
loopne
dec
leave
rcr
imul
inc
inc
xor
pop
mov
fs
mov
adc
clc
mov
cwtl
sahf
popf
clc
xor
or
and
out
fsubrp
push
inc
addb
lods
dec
or
adc
rolb
rolb
dec
mov
or
jne
nop
push
push
mov
jnp
inc
push
inc
pusha
lea
dec
xchg
repnz
inc
xchg
inc
sbb
push
dec
pop
mov
aaa
mov
pop
pop
jne
test
add
sbb
mov
daa
pusha
jg
or
xor
es
insl
pop
scas
test
test
pop
int3
mov
inc
adc
mov
jmp
adc
test
dec
push
add
xor
dec
xor
push
iret
jns
add
jge
mov
aas
jmp
mov
sbb
xchg
mov
outsl
cmp
jne
sahf
lods
test
push
sub
and
fdivrs
pop
cmp
jle
ds
jmp
psrld
and
mov
cmpb
or
pushf
ret
pop
popa
add
add
push
and
es
cmp
push
cmp
add
fucom
push
push
and
movzwl
enter
or
push
daa
loopne
scas
jbe
jae
mov
orl
add
jl
faddp
inc
jmp
xchg
movsl
push
add
add
cmp
sbb
mov
jno
push
or
and
js
push
dec
push
sub
sub
add
xchg
fiadds
or
insl
sub
adc
lahf
mov
add
jns
cmp
or
sub
hlt
push
adc
insl
jle
sub
or
and
jbe
cmp
add
xchg
sub
inc
sbb
mov
aaa
sub
xor
push
add
cld
xorl
stc
daa
pcmpgtw
inc
call
adc
pop
xor
fisubrl
mov
jae
test
inc
xor
or
test
sbb
add
inc
in
mov
aam
or
or
lea
sbbl
mov
push
or
outsb
and
pushf
mov
jb
dec
and
or
in
dec
cmp
ja
pop
je
and
mov
jne,pt
mov
push
cwtl
sub
xorb
das
andl
and
adc
mov
and
xchg
insl
mov
dec
add
sahf
punpckhdq
popa
pop
xor
add
into
mov
adc
sbb
or
add
mov
push
dec
aad
push
xor
testl
inc
xchg
in
incl
pop
adc
fwait
jg
testb
adc
sahf
mov
adc
pop
or
or
push
ja
data16
arpl
or
test
iret
rolb
and
fisubrs
xchg
gs
sarb
push
lods
imul
cli
sbb
jmp
pop
inc
or
mov
mov
inc
add
pop
and
sbb
stos
out
adc
fdiv
fcmovnu
in
add
and
mov
mov
into
sub
test
cmpb
adc
inc
cmp
push
icebp
inc
popa
jne
or
lea
or
pop
xchg
scas
pop
push
inc
jl
add
inc
ss
fidivs
in
out
inc
dec
pusha
and
and
pop
push
fnop
cwtl
gs
scas
and
adc
jge
mov
std
cmc
sbbb
and
test
push
in
or
or
js
xchg
mov
add
lods
scas
repnz
add
movsl
jmp
pop
xor
fs
push
sub
out
std
mov
cmpsl
adc
outsb
jo
cs
popl
mov
sub
lret
jo
mov
es
xor
imul
adc
pusha
sub
lahf
mov
pusha
loopne
push
aaa
andl
or
pop
aam
js
xor
cmpl
in
xorb
add
dec
and
mov
lea
dec
add
out
ret
subl
push
popa
mov
loope
adc
ljmp
nop
cmpl
sbbb
xor
sti
movl
shll
or
adc
pop
xchg
outsb
test
inc
adc
inc
add
or
popf
push
je
xor
xchg
dec
andb
lds
sbb
pusha
mov
stc
push
shrb
call
pusha
jno
cmpb
mov
push
mov
adc
aas
jmp
sbb
sbb
dec
iret
xchg
inc
fsubrl
inc
jbe
mov
fsubrp
or
cmpsb
std
push
or
adc
lods
add
icebp
std
mov
mov
je
aad
arpl
mov
inc
mov
push
adc
nop
jno
xor
insb
dec
andl
sub
fcoms
lret
sub
lods
and
daa
add
out
jmp
adc
add
sbb
mov
pusha
pushf
mov
lock
sub
xor
mov
sbb
dec
mov
sbb
dec
clc
fmull
jl
add
push
inc
mov
rclb
inc
imul
es
aad
pushl
add
push
bound
or
push
pop
pop
add
cwtl
ret
xor
repz
xlat
rolb
jmp
dec
or
rolb
cs
bound
xor
jg
dec
js
mov
repz
mov
cmpl
inc
inc
ret
push
scas
ljmp
jmp
jo
rol
div
loop
mov
sub
dec
and
cwtl
jmp
test
push
and
push
clc
cmp
mov
xchg
pop
xor
mov
add
test
icebp
adc
and
sbb
stos
push
inc
xor
mov
movsb
mov
jnp
adc
aam
inc
pop
and
inc
xorl
popa
pusha
or
jne
imul
cmp
adc
adc
pop
pop
dec
test
mov
add
inc
aad
or
loope
xchg
or
dec
adc
dec
or
xchg
ss
fstpt
push
in
and
mov
subl
add
cli
dec
shll
add
test
and
xor
je
test
jo
jae
rclb
push
pop
jmp
imul
inc
mov
movsl
add
in
adc
enter
and
imul
jecxz
cmp
jne
ljmp
xlat
div
outsl
arpl
xchg
mov
test
pop
rcll
jecxz
lea
or
pop
jl
add
imul
pushf
mov
dec
mov
mov
jl
adc
pop
test
xor
xor
ja
xor
test
jae
pop
cmp
push
pop
mov
jno
jg
insb
lods
pop
outsl
clc
or
sbb
and
add
inc
sbb
repnz
xor
test
lock
add
imul
add
mov
in
adc
inc
add
pop
dec
push
mov
js
xchg
sbb
inc
lock
push
jmp
pop
rorb
jmp
and
daa
cmp
or
insb
xor
add
mov
dec
je
imul
or
into
or
ret
dec
add
aad
fsubrs
add
xchg
ret
ljmp
lock
add
out
cmp
or
frstor
cwtl
movl
push
int
and
add
flds
cmpb
pop
xchg
push
push
and
pop
shll
xchg
mov
and
loopne
pop
mov
sub
filds
inc
insb
and
lea
ret
sub
add
add
popa
insl
sbb
add
cmpb
pop
hlt
xchg
inc
dec
out
inc
xor
xchg
mov
les
push
add
iret
pop
cmpb
add
cld
sub
loope
hlt
push
and
sahf
xchg
mov
inc
movsb
js
mov
das
cmpsl
in
data16
add
push
or
fstps
rorb
nop
or
sub
in
addb
ret
sbb
push
jp
movsb
and
sbb
addb
push
mov
sbb
test
ret
or
mov
dec
psrlw
xchg
adc
les
in
mov
push
ss
fwait
inc
test
mov
push
cs
dec
mov
rorb
pop
rcrl
in
fs
lods
xchg
push
pushl
mov
add
inc
push
sub
adc
dec
sbb
jo
jp
inc
add
pusha
inc
mov
add
sub
mov
in
inc
jp
and
loopne
mov
jl
inc
es
sbb
xchg
cmp
mov
and
xchg
cmp
pop
mov
aas
xor
cmpsl
sbb
repz
inc
add
jne
mov
dec
sub
pop
test
add
cmpsl
xchg
sub
mov
test
adc
in
inc
xchg
add
test
gs
out
mov
add
leave
jae
sbb
jp
adc
push
popf
and
add
pop
dec
out
orb
les
xor
rcrb
add
dec
ss
add
aaa
bound
outsb
inc
push
pop
aaa
adc
roll
fstps
out
jo
push
cmc
icebp
xchg
xchg
adc
outsl
aaa
push
add
fxch
roll
push
js
data16
inc
aas
push
inc
cmpb
cmp
fwait
stos
xor
ds
subb
and
push
daa
xchg
adc
fiaddl
jbe
and
add
mov
fs
inc
rcr
push
cmp
mov
dec
daa
add
and
ret
movsl
adc
cmpsl
call
leave
mov
repz
and
hlt
push
inc
jne
scas
les
or
imul
cmpb
arpl
je
push
int
sbb
sbb
jg
imul
xor
inc
add
fadds
or
ja
mov
out
stos
sbb
in
sbb
lock
sbb
adc
sbb
in
lock
inc
clc
lock
sbb
adc
push
adc
lea
pop
orl
pusha
loop
ficoms
mov
adc
xor
ret
jo
add
repz
aas
cs
xor
push
lahf
pop
push
fldt
add
repnz
inc
data16
dec
lret
in
outsb
add
test
or
or
enter
js
inc
jnp
add
pushl
mov
pushl
jmp
cmpw
ss
and
sub
push
and
clc
or
fstpt
xor
xchg
mov
mov
fimull
cli
mov
sti
je
or
xor
daa
add
scas
sti
xor
stos
jge
add
pushf
add
mov
icebp
push
push
cld
pop
bound
pop
repz
daa
sub
sbb
test
jmp
dec
shll
dec
insb
in
test
dec
xchg
test
jbe
adc
test
mov
push
pop
push
test
xchg
xchg
adc
sbb
scas
ret
sbb
adc
cmpsl
cld
add
or
push
jle
je
ret
ret
mov
setge
inc
or
or
pop
xor
pusha
and
popa
pop
icebp
mov
shlb
mov
ffreep
or
jns
rclb
int3
enter
and
adc
jl
mov
inc
popa
jl
out
sbb
pop
inc
daa
rcrl
mov
movsb
push
mov
das
fld
add
inc
stc
mov
cltd
mov
or
xor
add
xchg
outsb
test
aaa
ret
push
sbb
sub
addb
mov
add
push
mov
lahf
sbb
je
je
push
sarb
xorb
inc
sub
cwtl
inc
rdtsc
imul
mov
in
cmp
inc
test
nop
push
push
mov
mov
loop
jmp
add
fsubrl
or
jg
sarb
xchg
and
or
sub
add
rcrb
sbb
xchg
add
aam
push
xchg
pop
pop
add
mov
test
jo
sbb
sub
dec
fisubrs
pop
insb
xor
dec
hlt
mov
lret
fs
frstor
adc
push
movb
pop
rorl
adc
mov
bnd
mov
add
orb
or
push
aaa
andl
sahf
mov
decl
std
in
je
mov
orb
push
and
adc
inc
imul
lea
adc
fdivrl
add
dec
push
push
xlat
or
jno
adc
cmpsl
jno
mov
dec
mov
add
push
inc
fs
push
popf
sub
lret
xor
add
je
bound
add
jecxz
jbe
cmp
xor
sub
jbe
xor
push
pop
adc
mov
xchg
cmp
lods
add
jle
or
add
dec
add
add
and
outsl
mov
add
sar
pop
cmc
pop
loopne
rorb
enterw
push
xchg
dec
xchg
mov
mov
loop
add
adc
loopne
xchg
lahf
cwtl
add
sub
dec
pusha
ror
xor
inc
dec
sub
xchg
movsb
add
gs
sub
jo
lret
and
dec
je
aam
add
lds
int3
push
fcomps
sub
add
pop
stc
mov
cmp
imul
idiv
or
dec
inc
push
sub
cmp
or
das
shlb
mov
test
shrb
xchg
push
cmp
lcall
dec
les
sbb
add
xchg
mov
or
nop
iret
mov
or
and
inc
in
nop
loop
loopne
lcall
jns
cmp
cwtl
cmp
aam
mov
pop
loop
and
sbbb
adcl
mov
and
test
addb
and
pop
cmpb
roll
and
and
xlat
push
adc
sub
inc
xor
push
outsb
xchg
xor
dec
mov
inc
inc
inc
sbb
outsb
or
mov
mov
or
mov
lea
adc
adc
add
adcb
or
mov
outsl
pusha
inc
add
and
pop
sbb
fildl
add
jne
or
push
mov
hlt
inc
add
fsub
and
fisttps
and
es
adc
inc
maxps
sub
jnp
ret
pop
fs
js
fldenv
xor
xchg
pushw
xchg
mov
adc
scas
xor
xor
inc
add
mov
aam
sbb
jmp
pop
or
xor
int3
subl
test
jne
jp
xchg
add
add
outsb
inc
pushl
imul
cmp
add
adc
pop
outsl
sarb
outsl
data16
dec
scas
push
and
mul
push
add
fs
cmp
out
push
das
leave
add
roll
cmp
mov
andl
int3
jmp
dec
cmp
push
add
and
ret
push
dec
xchg
mov
leave
xchg
or
fs
test
jecxz
icebp
jle
sbb
les
push
dec
sbb
lods
mov
pop
fisubl
repz
or
mov
jb
and
jecxz
mov
push
jecxz
push
push
or
sbb
fld
scas
inc
mov
pop
push
xor
push
scas
ljmp
sbb
add
or
ljmp
lds
inc
sub
sbb
sbb
push
movsb
or
push
retw
mov
adcb
mov
jo
mov
fcoml
pop
pop
pop
outsl
mull
in
add
mov
cmpb
cwtl
popa
adc
pop
je
dec
and
mov
sub
sbb
inc
imul
or
dec
xchg
out
or
or
mov
jl
adc
ret
jg
mov
lret
in
add
or
push
test
and
cmp
in
in
lcall
sbb
sub
jo
inc
mov
rcrb
or
add
sbb
adc
call
ljmp
jns
xor
xchg
in
imul
or
adc
pusha
pusha
xor
dec
inc
roll
jl
fidivrl
stos
dec
sbb
js
pop
fbld
or
push
popa
ljmp
in
add
imul
or
xchg
push
rol
mov
movsb
cmp
lods
jno
cmp
mov
jae
xchg
pushl
test
popa
out
clc
sbb
scas
lcall
push
syscall
pop
jge
call
fldt
inc
call
or
je
cltd
mov
mov
loopne
add
inc
pop
mov
push
push
xor
xlat
ds
add
clc
xor
gs
sbb
or
push
and
jae
jnp
jle
pop
dec
push
sbb
int
aas
por
add
orl
in
adc
andb
dec
scas
push
out
or
mov
mov
xor
jne
sti
setl
pop
arpl
loopne
je
daa
sbb
mov
xchg
repz
cmp
stos
sbb
je
or
jbe
jne
push
or
or
stc
stc
or
jmp
fists
int3
add
xchg
cmp
inc
scas
test
cmpsl
sbb
mov
nop
mov
mov
clc
xor
xchg
inc
pop
or
add
dec
mull
movb
xor
mov
shrb
pushf
imul
fld
cwtl
mov
stos
xchg
pop
dec
pushf
mov
fadds
xor
pop
add
mov
arpl
inc
bound
subl
pop
xor
mov
test
insb
add
mov
cmpsl
es
imul
dec
inc
rolb
or
or
or
leave
or
pop
pop
sub
sub
inc
pop
insb
xor
xor
bound
xlat
push
xor
cwtl
ret
in
cmp
push
sub
lret
jne
cmp
inc
ret
out
add
repnz
xor
inc
and
or
mov
int
xor
add
xchg
scas
scas
pusha
mov
or
xchg
rcl
arpl
fists
mov
nop
cwtl
cmp
push
xorb
js
or
into
push
inc
sub
dec
js
ja
dec
ret
push
shrb
pushf
and
inc
xchg
pop
fwait
or
fdivl
and
mov
icebp
cmp
adc
sti
ds
xchg
xchg
and
sbb
xchg
daa
add
arpl
jle
test
xlat
sub
mov
jno
mov
add
cmc
sbb
add
lcall
insb
les
or
pop
xchg
ret
mov
jo
adc
pop
pop
pop
inc
sbb
dec
and
loope
mov
xchg
loopne
push
ss
push
xlat
add
push
lea
in
sahf
and
out
xor
rclb
ret
push
or
xor
inc
or
xchg
loop
mov
adc
or
xorl
pop
fsubs
sbb
sbb
inc
xor
adc
dec
pushf
pop
repz
sbb
loopne
fisttps
pop
or
je
add
stc
add
in
xchg
xor
mov
push
dec
xor
push
xchg
or
movsb
jne
pmulhw
xchg
mov
xchg
push
lods
iret
inc
and
cmpsb
out
xchg
ja
out
mov
and
scas
lods
shlb
sti
pavgb
loopne
jno
pop
push
mov
inc
xchg
mov
enter
pop
jno
pop
mov
push
and
cwtl
and
xor
sub
clc
jmp
push
add
sub
fs
dec
sarl
lret
inc
inc
mov
dec
neg
aam
fwait
or
aaa
xlat
push
or
adc
into
lret
shll
or
daa
or
lahf
popa
add
dec
mov
daa
add
add
faddl
jecxz
add
pop
in
outsl
fwait
xor
mov
push
iret
and
pop
imul
insb
lods
adc
packsswb
or
cmp
adc
sbb
push
movb
dec
adc
mov
adc
aam
or
adc
ss
stc
and
das
add
xor
cmp
pop
sbb
mov
cmp
lahf
and
xchg
xlat
push
add
push
cwtl
pop
lret
sbb
pop
movsb
push
mov
les
aaa
mov
mov
xor
and
inc
or
mov
test
sub
hlt
fs
pop
add
cmpsl
das
mov
pusha
sbbb
add
push
into
ret
addl
fnstcw
sti
pop
add
jbe
jmp
lahf
mov
and
cmc
iret
je
test
push
es
push
and
mov
rclb
and
cmp
es
sub
rol
rcll
jbe
insb
mov
lret
push
adc
lock
sub
dec
shrb
icebp
fwait
dec
pushf
mov
push
cmp
mov
push
rorb
adc
movsb
mov
cmp
test
or
fisttpl
je
mov
pusha
dec
jne
sub
pop
jo
ret
cli
lsl
insl
or
and
lret
inc
pop
sar
mov
imul
sarw
or
cwtl
sub
test
or
ret
or
jnp
mov
push
lea
pushf
or
adcb
and
call
cmpb
adc
or
fnstenv
cmpsb
ret
add
movb
pop
js
lods
iret
test
imul
ds
inc
push
push
or
and
ret
push
adc
nop
stos
xchg
and
inc
xchg
fucom
add
mov
inc
stos
xor
xchg
lds
scas
test
mov
mov
addb
pop
pop
repnz
pop
daa
adc
mov
cs
and
or
jecxz
push
pop
xor
adc
and
or
sbb
or
xchg
xchg
xchg
add
test
inc
or
push
aam
dec
mov
dec
aaa
mov
push
add
lcall
fistl
mov
mov
insb
inc
std
xchg
xor
dec
call
push
dec
dec
scas
sub
sub
ret
xor
push
outsl
jle
fidivs
dec
mov
clc
pop
push
jns
clc
lock
in
push
gs
or
call
aam
sbb
sahf
ja
or
int3
fmul
adc
sahf
aam
popf
dec
sbb
push
jmp
inc
and
add
and
fs
jb
jmp
push
jns
dec
push
mov
cmpsl
jo
mov
sbb
arpl
jecxz
or
dec
shlb
mov
ljmp
dec
cmp
ret
popa
and
or
xor
jle
ret
loope
scas
inc
jne
popf
daa
lret
sub
mov
inc
jbe
cmpsl
jmp
pop
add
test
stc
or
rcll
add
push
jns
cmp
push
mov
lret
inc
dec
xchg
mov
mov
jge
push
push
dec
or
pop
aaa
ror
add
sub
cmp
aam
mov
mov
jmp
cmpsl
pop
inc
dec
inc
and
sbb
sub
jge
adc
and
ja
loopne
adc
outsl
das
das
or
ja
cmp
iret
adc
inc
push
jbe
and
jle
push
pop
idiv
or
mov
dec
sub
mov
dec
nop
dec
andl
into
adc
fiadds
mov
into
adc
ss
push
mov
and
into
mov
fmul
inc
dec
add
add
cs
loopne
inc
mov
sbb
dec
popf
shrb
or
pop
test
mov
cmp
and
fdivrl
addr16
int3
or
dec
fadds
fdivrs
enter
sub
nop
xchg
aam
aam
les
or
bound
rcl
jle
lmsw
inc
xor
add
xorl
sub
add
daa
add
mov
das
aaa
add
fsubl
pop
xchg
mov
pop
and
movsl
aad
inc
sbb
ret
aaa
jo
aas
mov
mov
mov
es
cmpsl
dec
ja
rolb
xchg
mov
or
outsl
add
pop
add
js
rclb
cmp
jecxz
fdivrs
sbb
add
inc
sub
adc
sub
daa
bound
jns
mov
inc
inc
insl
nop
or
rolb
dec
ss
and
add
popa
sub
sub
in
pop
xchg
or
fmul
mov
sub
lret
test
dec
sbb
xlat
insl
shlb
outsb
jmp
mov
jmp
icebp
movsl
fs
xchg
push
ret
pop
and
xlat
aaa
mov
jno
out
lods
and
es
dec
or
mov
sub
dec
add
outsl
pop
xchg
xor
clc
xchg
sub
test
fsub
pop
xchg
dec
dec
aam
hlt
loop
xchg
add
mov
add
movsb
xor
or
cmp
gs
push
sub
adc
rclb
and
int
add
sbb
jge
div
nop
and
adc
mov
xchg
pop
or
fdivl
xchg
in
inc
push
cmpsb
les
cld
mov
mov
add
or
inc
hlt
arpl
shlb
xchg
ret
fcomps
aaa
imul
aam
gs
pop
sub
popa
ss
lret
mov
sbb
mov
jne
xorl
inc
rcrl
push
insl
inc
cmp
aam
mov
sbbb
sbb
sbb
inc
or
jns
sbbl
int
data16
iret
mov
add
sbb
loopne
into
add
cmpsb
and
shrl
push
adc
cmp
mov
add
or
adc
add
adc
outsb
clc
dec
stos
adc
rcr
lea
movsl
inc
or
enter
pushf
in
mov
and
outsb
dec
aaa
jmp
and
nop
sbb
sub
jne
and
xor
cmp
fnstcw
push
pop
sbb
sub
pusha
aam
pop
add
pop
gs
loopne
pop
push
xchg
cvtps2pi
aaa
stc
or
adc
divl
hlt
or
shrb
imul
push
inc
jnp
or
mov
xchg
push
test
int
pop
lcall
fnstsw
sbb
mov
sub
jae
nop
int
or
add
and
enter
add
shrb
addl
inc
rol
and
adc
dec
shlb
push
add
jae
testl
sbb
inc
push
mov
and
ret
sbb
pop
imul
jecxz
pop
add
mov
inc
sbb
xorb
pop
push
imul
lret
and
lock
xor
addb
jno
jo,pn
or
inc
or
enter
sub
push
shrb
and
and
lods
rcrl
aaa
mov
movsl
push
lret
aam
add
ret
icebp
inc
adcl
sbb
adc
and
xchg
xor
lock
add
nop
xorl
hlt
add
xchg
mov
adc
fdiv
divl
add
lock
adc
pusha
addr16
sar
stos
or
imul
sbb
add
test
push
addr16
jbe
lret
iret
inc
loopne
in
mov
smsw
imul
add
adc
pop
sub
inc
test
addb
sub
or
or
xchg
and
aad
scas
pushf
pop
int3
push
xor
daa
pop
orb
pusha
push
dec
arpl
jb
mov
pusha
push
ljmp
and
loopne
jo
add
add
cs
jno
or
pop
pop
aaa
adc
and
sti
mov
mov
in
jmp
out
add
add
adc
add
sbb
mov
sub
dec
push
add
scas
cmp
daa
mov
jg
test
call
test
call
or
adc
pop
sub
push
mov
dec
push
or
xor
mov
mov
sub
mov
cmp
xchg
jb
mov
inc
stos
test
mov
jno
push
push
pop
push
jns
pop
or
jnp
inc
push
pop
sbb
cmpsb
das
sbb
loopne
mov
push
or
or
push
in
cmc
adc
lea
cmp
ret
adc
xor
ljmp
sbb
dec
mov
les
stos
mov
mov
iret
lock
or
jne
enter
push
dec
pop
adc
push
sbb
lds
mov
orl
pop
or
inc
lods
adc
push
cs
or
mov
mov
fwait
addb
psubsw
mov
inc
iret
jmp
cmp
lcall
add
daa
int3
dec
ret
adc
outsl
enter
and
dec
pop
push
pusha
movsl
push
adc
sbb
mov
scas
jmp
aaa
xchg
pop
call
out
pop
sub
mov
paddsb
inc
add
movsl
push
enter
pop
mov
add
fiaddl
or
xchg
decl
adc
push
or
push
lock
sbb
jnp
mov
cmp
add
sbb
dec
arpl
aaa
sub
xor
repz
inc
dec
xor
lahf
or
sbb
jnp
call
pop
lods
push
das
dec
arpl
dec
pop
js
mov
mov
and
jno
xor
and
ret
scas
aam
sahf
sub
jle
loope
mov
aad
js
xchg
and
out
sub
or
xchg
sub
clc
leave
push
stos
fmuls
and
pop
punpckhwd
insl
ret
cmc
ret
cmp
pushl
xor
sub
mov
mov
pop
mov
sbb
lret
or
sub
dec
mov
xor
mov
mov
lret
pusha
push
add
add
insb
push
movsb
fisubs
jb
cmpl
stos
mov
decl
das
xlat
lock
xchg
add
loopne
je
and
cwtl
push
sbb
movb
popl
gs
test
test
pop
xorb
popa
imul
xorb
or
cs
std
add
rolb
pop
fldcw
movsb
dec
pop
xchg
pop
repnz
nop
mov
or
xor
outsb
dec
add
xchg
mov
mov
pop
sub
and
add
mov
cmpb
cmp
cmp
jne
mov
adc
inc
pop
sbb
xorb
pop
ret
xchg
inc
or
icebp
clc
aam
dec
push
mov
pop
mov
or
add
imul
inc
repz
mov
and
and
pop
arpl
or
add
js
out
dec
cmp
lods
add
dec
adc
xsaves
fs
pop
insl
pop
mov
fstpl
jmp
sub
jmp
adc
xchg
shl
xor
pop
popl
sub
mov
jne
jb
sbb
ds
dec
mov
pop
mov
sbb
pop
jno
popf
fisttpll
pop
push
rclb
mov
xchg
add
lahf
or
sbb
jl
mov
inc
negb
mov
adc
ss
add
cmp
add
mov
les
dec
loop
aaa
jmp
sub
loopne
add
lcall
stos
pusha
pop
xchg
sub
mov
add
cmpsb
out
cli
jmp
iret
adc
enter
fs
popa
and
and
push
pop
jo
in
movsl
popa
cld
loop
mov
repz
sub
imul
lods
xchg
mov
add
adc
les
mov
mov
cmpsb
mov
lock
aaa
inc
in
add
addr16
add
daa
or
es
inc
jb
inc
push
xor
icebp
or
lods
xorb
mov
push
mov
mov
inc
fsts
and
pop
adcb
fwait
adc
mov
es
xchg
pop
inc
cmp
pop
cmp
xor
push
push
pop
fs
fucomi
mov
or
xor
cmp
or
aam
jno
mov
test
adc
test
sbb
roll
je
push
add
out
arpl
mov
adc
dec
push
add
js
cltd
xchg
dec
dec
sbb
xchg
pop
test
pop
push
adc
ss
mov
movsb
mov
fdivrs
lock
imul
xor
xor
adc
shlb
test
pop
sbb
pop
mulb
xor
push
jne
push
mov
popw
and
add
and
or
arpl
jl
je
enter
clc
loope
fs
and
xor
aaa
addb
and
mov
sbb
mov
pop
or
sub
and
mov
dec
les
movsb
or
sub
loopnew
add
rorb
lods
inc
addr16
int3
ret
int
ret
mov
int3
or
cmpsb
xchg
and
fstpt
xor
or
loop
loopne
ja
es
dec
pop
sti
mov
and
adc
movb
test
pop
adc
jbe
out
decb
scas
aaa
jle
movsb
add
inc
jae
and
inc
fistps
push
rolb
or
push
dec
jg
adc
lcall
add
cmp
or
pusha
add
idivb
mov
xchg
lods
or
filds
and
jo
loop
fdiv
fs
add
and
shl
pop
je
fs
xor
inc
cmp
add
or
inc
es
add
mov
ret
pop
test
jno
popa
fadds
mov
fnsave
sub
lret
sti
xor
mov
mov
or
cmp
icebp
and
cmp
dec
push
fsubs
xchg
cmpsb
loopw
xlat
lcall
pushf
test
sbb
sbb
mov
test
xor
idivl
mov
add
addl
incl
pop
dec
insb
sub
nop
aam
mov
in
test
xchg
xor
jp
in
fprem
add
pop
clc
jnp
inc
insb
sub
dec
push
mulb
sbb
or
test
aaa
adcl
mov
fcmovnu
mov
daa
pop
test
or
mulb
call
aam
or
xor
pop
pushf
pop
mov
inc
pushl
or
mov
adc
xor
sarb
jle
jo
sbb
sbb
add
ret
es
movsl
imul
and
mov
inc
scas
xorb
ret
hlt
gs
jp
push
add
xlat
shlb
jle
in
push
push
xor
or
adc
jmp
fs
sbb
jle
gs
shlb
pop
inc
adc
aas
jge
sub
mov
jp
dec
je
adc
rorb
outsb
iret
nop
push
push
pop
or
out
dec
add
loopne
test
jg
rorb
lods
inc
shlb
pop
sbb
adc
sub
orl
inc
inc
push
pop
push
leave
imul
ret
push
fadds
cmpsb
sub
pop
pushf
pop
sub
xchg
repnz
vmread
cmp
push
xor
xchg
stos
xor
or
cs
or
sub
test
mov
popf
adc
insb
dec
pop
inc
enter
jmp
push
add
add
and
cmpsl
xchg
lahf
pusha
movsl
dec
or
jmp
jg
lret
push
fadds
mov
cmp
add
pop
jno
xadd
fsubs
fnstcw
js
mov
cmp
test
xor
sub
push
popa
inc
popa
inc
ja
into
and
mov
push
mov
fisttpll
mov
inc
daa
fistpll
inc
inc
dec
and
movl
sbbl
add
or
sbb
lods
push
mov
push
inc
dec
xor
inc
es
dec
jmp
xor
sbb
inc
nop
inc
or
and
shlb
dec
mov
mov
pusha
sub
lds
sub
jo
pop
or
sbb
fs
cs
or
or
sbb
inc
test
xchg
or
pop
adc
push
mov
sbb
lock
jno
arpl
js
jmp
mov
sbb
out
adc
ret
sub
mov
or
add
adc
lock
or
jb
sbb
sub
add
loopne
and
and
and
leave
sti
lds
sbb
add
mov
push
pop
xor
lahf
enter
mov
inc
icebp
push
in
pop
lcall
clc
sub
xor
jmp
jg
hlt
push
andl
pop
dec
sbbl
dec
mov
add
add
aaa
add
lea
fimuls
out
push
dec
sti
jmp
jg
fisttps
inc
out
add
cmp
xor
push
cmp
or
add
xor
imul
addb
adc
ja
push
and
arpl
inc
push
jns
jg
pop
xchg
les
pop
sbb
jg
cmp
insb
cmpsl
xor
popl
cmp
fsubp
inc
add
popa
push
sti
jmp
inc
pusha
mov
cmc
jge
sbb
push
enter
push
sbb
sahf
movsb
pop
dec
cmp
adc
sbb
xchg
sbb
or
sub
dec
je
xor
xchg
sbb
mov
mov
push
jp
inc
stos
test
ja
mov
or
or
cwtl
nop
and
mov
cmp
ret
and
rcrb
add
pop
sbb
rcl
inc
in
sbbb
pop
mov
jo
and
xor
sub
push
daa
leave
orb
push
mov
pop
mov
push
or
pop
sbb
insl
dec
sbb
adc
dec
dec
outsb
mov
xchg
aaa
mov
or
nop
adc
ret
or
dec
dec
and
inc
adc
mov
adc
rcrl
jge
xchg
add
inc
imul
xchg
in
jp
sbb
insl
adc
pop
jo
sub
mov
adc
add
sahf
cmp
fildl
loop
lock
jne
sub
mov
fbstp
testb
inc
add
add
lea
push
xchg
cmp
mov
push
and
andb
roll
xchg
cmp
mov
pop
imull
fcompl
jmp
call
and
mov
mov
mov
jmp
sub
add
add
cwtl
arpl
add
mov
cli
in
adc
pop
sbb
mov
negl
cmp
cmp
repz
inc
adc
and
movsb
push
ss
cmp
popf
and
aam
xchg
mov
push
adc
cmpsb
cmc
sahf
mov
ffreep
mov
movsb
cmc
sbb
add
iret
add
popf
lods
and
push
adc
loopne
dec
fisttps
inc
dec
iret
push
and
inc
popf
or
mov
sbb
and
mov
dec
mov
insl
mov
dec
pop
adcb
mov
sub
and
add
dec
clc
mov
test
mov
mov
inc
jo
cmp
sbb
mov
in
ljmp
sbb
adcl
fs
inc
or
jmp
push
testl
sbb
pop
ret
mov
push
add
lea
dec
sbb
jnp
add
test
adc
push
adc
push
mov
in
push
xor
xor
add
adcb
subb
cmp
sbb
movsl
cltd
xchg
test
fmuls
cmp
or
add
and
jne
mov
mov
stc
in
add
sub
adc
call
roll
mov
lret
in
dec
lock
mov
lret
sub
in
sub
jle
lea
jno
popw
scas
mov
cmp
roll
ret
cmp
rcl
pop
lahf
xchg
call
fstps
xor
adc
ret
movsb
les
xor
movsb
mov
cltd
sbb
mov
sbb
pop
loop
and
mov
sbb
iret
and
xor
sub
sbb
xor
cmp
mov
jbe
movsb
or
add
mov
add
jnp
add
adc
ljmp
xorb
dec
xor
clc
sar
jns
adc
dec
jo
testl
cwtl
xor
sti
sub
pop
jne
add
hlt
add
or
iret
popf
mov
mov
pop
push
or
pop
mov
dec
and
movsb
dec
inc
rclb
es
push
mov
and
outsl
inc
cmc
and
je,pt
lcall
push
or
sbb
mov
mov
mov
dec
loope
push
aas
or
mov
imul
rclb
test
dec
test
dec
fnstsw
scas
adc
or
movsb
pop
clc
clc
clc
les
pop
cmpb
xor
repnz
lock
call
lock
ret
dec
push
dec
pop
pop
movsb
push
add
adc
mov
mov
shlb
insb
adcb
lea
jnp
dec
clc
sbbb
aam
push
dec
mov
and
push
sti
xchg
adc
push
mov
add
inc
add
cs
jo
sub
mov
cmp
push
push
in
test
test
xchg
push
dec
xchg
push
jl
xchg
movlps
mov
sbb
daa
push
pop
or
jecxz
fldenv
sbb
or
popf
dec
adc
ror
fwait
jmp
pop
push
shlb
sub
fcompl
or
mov
or
sahf
push
shrb
mov
jbe
push
das
sub
and
dec
adc
dec
mov
fsubrs
pop
or
adc
mov
sbb
mov
adc
dec
test
jg
xchg
sub
adc
nop
rolb
xchg
add
add
xchg
pop
mov
dec
xchg
xor
push
sbb
xchg
std
cmc
sub
push
insl
mov
cmp
fadd
popa
sbb
push
pop
jecxz
pop
mov
dec
xor
jne
push
sbb
iret
push
add
sub
or
inc
dec
fistps
xchg
add
inc
add
sbb
imul
dec
lahf
mov
test
out
clc
push
mov
cli
stos
pusha
popa
sbb
cmc
adc
aaa
cmpsb
cmp
xor
push
in
dec
pop
ret
cwtl
stos
cltd
adc
and
and
sarb
xor
mov
dec
xor
push
pop
inc
sub
imul
fwait
sbb
xchg
outsl
pop
in
in
dec
mov
sbb
adc
insb
bound
adc
adc
lods
sbb
sbb
sbb
or
and
sub
mov
pushl
push
sbb
dec
in
sbb
jns
loope
push
push
inc
fwait
cmp
jno
mov
in
addb
add
jmp
inc
sub
mov
sbb
mov
adc
and
xchg
cwtl
sahf
inc
mov
push
dec
jp
jbe
jne
mov
mov
imulb
mov
dec
jae
cmp
jne
pop
adc
das
loope
adc
xchg
push
cmpsl
shrb
add
push
enter
push
push
and
in
push
lea
pushl
loope
jae
push
js
jo
pop
adc
adc
xor
icebp
and
push
mov
fidivl
fsubrs
clc
roll
push
lods
mov
int
mov
dec
inc
mov
loopne
inc
cmp
sub
pusha
and
push
arpl
jae
jp
test
add
pop
in
sub
add
push
and
jo
hlt
sbb
cmpsl
pop
je
push
fistl
xchg
minps
push
adc
andb
js
test
sub
retw
decl
int
and
xchg
lret
mov
pop
rcl
cmc
push
add
pusha
xchg
test
push
mov
clc
add
std
xchg
popl
push
push
fwait
sbbl
and
xor
fdiv
test
imul
cltd
xor
pop
adc
nop
ret
les
inc
cwtl
cmp
inc
sub
lret
xchg
sub
push
push
dec
int3
push
arpl
lret
mov
cmp
pop
cld
je
popa
and
inc
jae
or
jle
out
mov
aam
lret
and
js
and
leave
jbe
pop
nop
gs
mov
in
add
daa
jne
call
popf
pop
iret
clc
sti
test
pop
or
push
addb
add
fisubrl
lret
call
pop
rcrl
dec
mov
jo
xchg
scas
jg
push
pusha
add
notl
jo
jg
popl
jle
xor
push
xor
lock
fcmovnu
popf
loopne
ss
ss
es
loope
or
pop
lahf
and
adc
sub
leave
push
or
add
and
in
jo
xlat
sbb
cli
imul
pop
ja
test
jle
inc
mov
pop
pop
and
outsb
add
xor
add
shlb
insl
pushf
ret
pop
aas
aad
mov
enter
adc
das
xor
xor
insl
push
nop
arpl
test
and
xor
ds
test
adc
push
pop
xlat
sub
mov
jge
jbe
mov
pop
sub
add
sub
jo
pop
jmp
sub
into
ret
aaa
adc
inc
mov
fadds
popa
adc
pop
xchg
stos
insl
push
dec
addb
mov
adc
dec
and
push
pop
xchg
or
stos
pop
insl
mov
mov
dec
popa
add
mov
mov
cmpsl
or
loopne
das
add
jp
mov
test
or
mov
lock
pop
xchg
or
add
ss
mov
sub
sub
jl
or
dec
cmp
divb
cmp
xor
add
xor
add
lcall
inc
adc
mov
jg
inc
loopne
pop
fwait
push
and
notb
add
sub
pop
test
jbe
pop
sbb
or
pop
test
adc
test
out
inc
cld
xor
mov
mov
mov
rcrb
pop
xor
loope
cmpsl
lret
mov
adc
rclb
pop
push
test
push
push
pop
pop
adc
cmp
pop
and
xor
mov
lock
mov
loopne
add
insb
add
add
popf
hlt
outsl
adc
outsl
mov
jne
and
adc
ret
lods
je
jne
dec
dec
cmp
movsl
push
pusha
mov
adc
or
nop
outsb
bound
xchg
cwtl
xchg
lods
jge
ret
pusha
cld
push
pop
adc
cli
leave
incl
mov
adcb
jno
mov
pop
push
inc
adc
out
cwtl
sbb
fimuls
mov
insl
or
cmp
filds
jnp
es
into
lret
mov
mov
sub
ljmp
xlat
inc
add
add
daa
sub
or
push
aas
sbb
add
je
pushf
divl
daa
nop
ret
adc
mov
or
out
push
das
and
inc
xor
push
xor
add
jecxz
es
repnz
shrb
dec
daa
cwtl
adc
js
mov
clc
cltd
sub
or
and
lea
inc
shlb
in
in
into
mov
arpl
adc
or
mov
cmp
sbb
xchg
ret
cmp
push
cmp
mov
cld
xor
adc
les
sbb
scas
mov
popa
inc
dec
pushf
xchg
sbb
or
add
leave
aam
or
mov
mov
les
or
or
aaa
and
shlb
jmp
mov
sbb
push
push
or
sbb
inc
lret
cmp
inc
mov
add
xlat
inc
adc
lret
push
sbbl
in
adc
push
and
jo
xorb
add
popl
cmc
add
sub
ljmp
xchg
dec
cli
in
fists
and
push
popa
xchg
cmpb
in
cltd
or
sbb
jmp
adc
shrb
pop
sub
mov
xor
pusha
add
pusha
pop
inc
adc
insb
dec
je
icebp
pop
in
pusha
and
mov
add
add
sbb
es
or
dec
rcr
push
adc
out
cltd
cmpsb
out
cmp
lea
cmp
xchg
sbb
sub
fwait
aaa
xor
and
les
inc
enter
in
int3
insb
xchg
addr16
sahf
rolb
sbb
mov
enter
and
in
add
pop
adc
inc
xchg
add
mov
pop
add
in
setno
push
add
add
dec
dec
adc
add
imul
xor
rolb
add
and
daa
je
inc
mov
or
jae
push
sbb
les
push
mov
adc
insl
jo
mov
sub
in
inc
and
lods
out
sti
push
xchg
dec
jae
pop
sbb
mov
jecxz
sub
cmc
sbb
push
xor
jno
mov
xchg
adc
pop
cmp
cmpsb
adc
sti
add
push
aad
jno
push
int
cld
lods
lcall
add
mov
or
stos
les
cmp
fs
push
sub
sub
cmp
aaa
sub
jmp
push
adc
stos
ja
loopne
sbb
xchg
das
loop
ret
sahf
inc
dec
mov
push
add
rorl
or
add
orb
nop
pop
cmp
push
sub
bnd
mov
ret
stos
orb
js
adc
pop
cmp
xchg
nop
sub
inc
rcrl
or
push
or
push
jl
dec
stos
adc
and
push
mov
pop
add
or
aam
inc
jo
add
lcall
clc
push
mov
push
lock
sub
mov
dec
bound
cmp
sbb
xchg
xchg
popa
pop
mov
cmp
dec
mov
add
sbb
mov
cltd
xchg
rolb
pop
sti
jge
mov
or
pop
and
dec
dec
jns
fistpll
rcrl
push
push
or
ret
add
push
arpl
mov
test
loope
ja,pn
xchg
jmp
jae
push
sbb
pop
ja
inc
pusha
mov
aad
sub
bswap
ret
cmp
or
aas
xor
mov
push
push
xorb
addr16
jl
adcl
sub
push
dec
out
pop
xchg
jo
nop
xor
rol
sbb
std
test
pop
sbb
sbb
loop
mov
aas
lods
out
and
xor
pusha
mov
loopne
or
mov
xor
and
mov
dec
xchg
sub
leave
popa
daa
jb
je
mov
inc
add
dec
mov
clc
push
xchg
leave
clc
mov
and
add
mov
and
mov
mov
in
out
in
jne
icebp
lock
push
out
out
hlt
mov
xor
hlt
loop
cmp
pusha
loopne
iret
fisttps
or
jns
xor
into
adc
jb
or
mov
pusha
imul
push
mov
cld
outsl
cs
inc
arpl
loop
outsl
arpl
mov
mov
add
call
mov
xadd
and
test
sub
movsb
push
shl
mov
adc
rcrl
jo
add
dec
cmpsb
imul
dec
xchg
cmc
lahf
test
mov
sbb
mov
xchg
imul
adc
mov
adc
fs
and
inc
jg
rcrl
xlat
add
adc
and
push
mov
add
outsb
fmuls
jo
adc
out
fdivrs
nop
fs
ss
adc
lods
inc
loop
insl
push
ja
pop
inc
shll
mov
lahf
gs
mov
push
rclb
mov
xchg
lea
jl
mov
mov
cmp
lret
and
mov
and
aaa
gs
sub
out
dec
mov
cmp
imul
lea
inc
sahf
pushf
popa
aas
jno
jae
shll
push
xchg
mov
jge
mov
lret
stos
push
sar
xchg
or
dec
pop
jns
inc
xchg
fcomps
gs
and
data16
cld
aas
data16
xchg
cmp
inc
mov
inc
xchg
data16
jo
addr16
sub
orb
out
orb
icebp
xor
int
out
dec
mov
push
hlt
shlb
push
je
push
mov
xor
jbe
insb
xor
push
pop
push
movsb
gs
lods
sub
ja
test
adc
pusha
mov
sahf
js
lahf
xchg
pop
inc
sbb
adc
imul
gs
push
sbbl
shlb
or
sub
inc
js
push
fstl
push
fiaddl
divl
and
xchg
push
mov
pop
jecxz
es
sbbb
adc
subb
imul
and
inc
jne
leave
outsb
add
add
cmp
sbb
cwtl
les
inc
nop
int
mov
test
jns
sbb
sbb
or
xor
xlat
and
add
and
ret
add
jl
sub
imul
and
mov
xchg
mov
xchg
adc
mov
in
lock
arpl
push
or
pushf
popa
mov
arpl
pop
and
fldcw
clc
push
xor
les
xchg
shrb
dec
bound
cmp
sub
fmul
fidivrs
addr16
pop
dec
test
jmp
inc
push
push
sub
dec
loop
push
cltd
mov
and
cltd
adc
jp
and
dec
adc
enter
outsl
mov
xchg
insl
addr16
jecxz
mov
arpl
mov
mov
or
jns
lds
xor
outsb
nop
aas
mov
aaa
and
push
pop
lock
xchg
ja
dec
sub
mov
sbb
hlt
or
and
sbb
cmp
pop
bound
test
fsubrl
mov
add
sub
cmp
dec
faddl
adc
adc
sbb
test
leave
in
ja
in
andl
nop
inc
push
sub
xor
es
push
or
inc
outsb
or
cmp
insb
jmp
push
cwtl
sbb
jl
fldenv
xchg
pop
adc
mov
insl
call
repz
pop
das
test
adc
mov
adc
inc
cmp
add
cmp
add
mov
jmp
ficoml
scas
sbb
fcompl
fwait
cmc
femms
add
add
idivb
pop
xchg
mov
gs
sbb
outsb
mov
sbbb
sbb
jns
sub
inc
or
repnz
xchg
je
mov
sbb
cmp
push
dec
ja
inc
inc
pop
mov
add
mov
dec
sbb
mov
das
enter
and
nop
arpl
and
nop
and
nop
sub
and
cmp
cmp
pop
call
outsl
and
push
outsb
xchg
sbb
jne
aaa
shll
xchg
or
sub
leave
dec
test
rcl
add
inc
sbb
xor
lock
aam
movl
mov
lcall
loopne
shlb
fistpll
fwait
das
add
das
dec
mov
add
push
push
nop
add
pop
xchg
sbb
out
and
daa
es
fs
in
add
or
mov
cpuid
movsb
daa
push
and
lock
mov
and
lcall
js
adc
add
cwtl
add
gs
scas
add
mov
jo
in
cmpb
pushf
sbb
enter
ret
ljmp
xchg
xor
out
les
xchg
mov
add
mov
out
adc
jno
loopne
mov
xorb
mov
aad
nop
add
dec
aad
pop
pusha
pop
mov
cmpsl
leave
and
or
pushf
imul
filds
mov
ljmp
pop
or
add
and
and
jb
add
fisubl
cmpsl
and
adc
pop
testl
jns
aas
movsl
dec
fld
inc
sbb
testl
xor
pop
mov
xor
fs
mov
sub
es
jb
lock
add
insb
add
outsl
dec
fcoml
sub
faddp
and
shlb
nop
inc
push
icebp
call
scas
mov
lock
jo
add
pop
ss
and
mov
and
mov
mov
dec
xchg
jne
test
pop
jo
sub
and
dec
sahf
gs
aam
push
addl
fwait
cmp
popf
cwtl
flds
pop
sub
and
jg
add
sbb
mov
sbb
and
cmc
or
inc
or
and
movb
cmp
pop
add
fwait
shl
divl
sbb
add
or
adc
pusha
mov
data16
rcl
subb
adc
in
inc
in
pop
aam
inc
aaa
jae
out
jne
cmp
mov
js
dec
aam
sub
lea
xchg
loope
push
xchg
and
gs
inc
add
or
adc
sub
andb
pushl
push
adc
add
mov
add
sahf
pop
xor
fisubl
add
xor
mov
outsl
lock
push
cs
lods
or
add
iret
clc
add
and
loop
or
push
fcmovb
stos
add
sub
pop
push
ds
and
sbb
andb
sbb
push
or
ret
dec
xor
cmpsl
imul
loopne
sbb
inc
cmpsl
or
and
rcrb
outsl
push
mov
popa
aaa
inc
pusha
dec
xchg
pop
add
dec
dec
adcl
jbe
das
jmp
dec
orps
pop
stos
dec
pop
iret
ja
adc
xorb
rorl
push
xchg
push
mov
cltd
sbb
mov
and
sbb
pop
sub
lods
or
add
stos
push
sub
ja
push
mov
push
into
outsl
or
pop
inc
inc
repnz
js
js
nop
imul
addr16
outsl
add
and
rclb
in
lods
arpl
xchg
push
push
aad
add
popa
mov
sub
popl
insl
add
adc
dec
sahf
and
sub
inc
or
xchg
addr16
sbb
sub
push
xchg
sub
cmp
mov
push
xchg
mov
lods
mov
jmp
push
and
imul
or
jne
ss
outsl
popa
xor
push
pop
or
fists
push
push
orl
xchg
and
enter
add
inc
adc
add
jbe
aaa
movsb
dec
js
jge
movhps
sbb
mov
fwait
daa
fcomps
jecxz
jp
sub
xlat
inc
push
mov
push
mov
lds
and
add
sbb
sbb
fldt
leave
push
lcall
les
sbb
mov
mov
jmp
js
nop
inc
xchg
add
data16
icebp
sbb
cmpsl
in
idiv
sbb
ret
and
pop
sahf
out
test
adc
leave
adc
dec
pusha
adc
sarl
add
push
aaa
add
xor
inc
add
in
sub
push
ret
cs
adcl
pop
lock
es
dec
pop
ds
cmp
sub
xor
nop
int3
orl
mov
test
pusha
sbb
rorl
dec
adc
xchg
test
movsb
push
mov
jp
push
jb
daa
loopne
mov
sbb
sbb
sbb
leave
cld
mov
jb
test
sbb
subb
shrb
enter
sbb
loopne
cmpsl
mov
and
sbb
inc
fisubs
add
nop
add
sbb
test
enter
fs
pusha
mov
jmp
out
xchg
and
xchg
mov
sbbb
in
cmpsl
mov
inc
push
cwtl
mov
addb
and
xor
pushf
sbb
loopne
cmpsb
or
push
pushf
cmpsb
in
mov
jl
push
sub
cmpsb
imul
cmpsb
imul
imul
shll
inc
push
rcrl
dec
clc
add
rorl
jge
pop
push
insb
jns
rcrl
inc
dec
cs
shll
push
or
xor
xor
repnz
xor
lods
mov
cmpsb
mov
or
dec
insl
lcall
xchg
and
je
adc
adc
cmp
fsts
into
lcall
xchg
pusha
add
aaa
jns
push
cmp
pop
sbb
xchg
push
mov
clc
dec
xchg
inc
pusha
outsl
sbb
add
or
fwait
xchg
ss
popf
push
addl
sbb
gs
out
cmp
add
nop
pushf
add
push
imul
int
test
shll
add
adc
add
pop
cmpsl
inc
cmp
clc
xchg
or
popf
xchg
js
pop
push
cltd
pop
xor
scas
adc
cltd
cmpl
fs
sbb
and
pop
nop
sub
test
test
push
test
add
pop
sbb
cmp
add
mov
mov
add
pop
es
fisubl
mov
ret
mov
movsb
push
scas
movsl
and
pop
cs
or
jmp
mov
and
pop
sub
ja
filds
cmpb
pop
dec
mov
dec
popf
jg
mov
orl
sub
xchg
jl
test
movb
lock
xor
lahf
xlat
and
in
xchg
dec
inc
adc
inc
mov
imul
add
mov
push
or
outsb
push
cmpsb
push
add
push
jmp
insl
dec
mov
adc
mov
mov
test
pusha
jecxz
mov
dec
pop
fcoms
inc
push
lds
mov
sub
sub
jbe
roll
adc
sbb
loopne
and
jns
mov
imul
jg
dec
sbb
jno
or
pusha
daa
xchg
jmp
and
dec
imul
or
pop
sbbb
fistl
js
inc
incl
adc
jle
push
sbb
push
aas
jl
add
loopne
push
xchg
mov
enter
scas
or
imul
inc
pop
arpl
and
add
pop
repnz
jnp
gs
lods
in
lret
sbb
cmp
loop
das
push
pop
loopne
add
or
inc
jae
aam
cmp
jns
push
add
xor
test
inc
lret
negl
ds
or
add
rclb
insb
mov
or
push
jnp
scas
fistl
xchg
pop
adc
cmp
dec
aas
stos
pusha
leave
mov
mov
sti
add
pushf
pop
pusha
pop
js
add
add
adc
mov
push
push
sbb
in
push
adc
sbb
sub
test
mov
shll
pop
lock
inc
mov
push
sub
xchg
xlat
shl
lea
nop
aaa
and
sbb
push
in
inc
aaa
in
inc
inc
xchg
adc
pop
rcrl
bound
ffree
mov
inc
or
out
jne
sbb
shl
mov
sbb
xchg
imul
lret
jmp
mov
cmp
bound
pop
call
cwtl
adc
sub
push
pop
push
inc
jbe
insl
dec
ja
jmp
fdivrp
in
bound
clc
push
pop
adc
pop
rcll
and
mov
cmp
es
int
inc
inc
xor
dec
dec
pop
jno
adc
sub
js
jns
and
push
cmp
test
mov
sub
xchg
push
aaa
lcall
sub
and
or
out
insb
push
out
nop
dec
aas
or
std
push
xchg
jbe
add
add
xor
and
push
int
or
dec
cmp
fld
imul
aas
mov
mov
push
mov
jno
sbb
mov
rcl
bound
jne
inc
push
pop
adc
lret
ss
sub
add
loope
and
aas
inc
mov
xchg
and
cli
add
mov
xchg
sub
push
insl
sub
lea
push
add
jbe
mov
cli
adcl
push
jp
in
shl
jno
pop
add
cmp
push
mov
mov
adc
aas
jl
xchg
cwtl
jo
and
in
jne
add
inc
pop
cmp
adc
add
pop
xor
sbb
test
mov
les
mov
inc
jno
add
xchg
or
inc
xor
add
cmp
mov
xchg
push
push
inc
jbe
mov
adc
jae
jae
cwtl
add
dec
inc
cmp
mov
inc
or
pop
adc
addr16
adc
cmp
mov
cltd
dec
imul
jo
xchg
mov
sbb
or
add
aam
push
mov
push
inc
loope
mov
lds
xor
mov
or
cmp
add
inc
jne
fwait
mov
and
dec
cmp
add
mov
arpl
lock
mov
or
adc
adc
or
daa
in
lods
out
push
xchg
xchg
sbb
call
adc
loopne
jecxz
sub
in
sbb
or
or
cs
ret
pop
push
cltd
push
cmp
jnp
lret
movsb
outsb
or
dec
xor
insb
decb
cwtl
sbbb
mov
jno
pusha
or
nop
push
sub
mov
add
inc
out
xchg
cmpsl
inc
dec
adc
leave
push
ja
push
aaa
sub
adc
xorl
mov
cmp
pop
adc
sbb
jnp
mov
sbb
or
inc
jmp
inc
fimull
ret
inc
adc
jp
inc
mov
pop
jno
and
incl
jnp
cmp
je
inc
cmp
jne
aas
adc
mov
cmpl
push
imul
hlt
push
cmp
jo
sar
and
stos
jne
mov
lret
cli
sub
ret
pop
mov
in
or
mov
cmp
negb
insl
popa
loop
test
and
sub
or
jmp
arpl
dec
xlat
xchg
or
mov
leavew
nop
sbbb
mov
dec
pusha
dec
pop
rorb
xchg
cs
rcrl
mov
mov
xchg
inc
add
mov
rcrb
lea
or
mov
mov
rolb
loopne
push
pop
fcmovu
lcall
lods
outsl
sbb
loop
inc
xorb
pop
mov
movsl
in
inc
ret
jmp
sbb
push
out
add
sbb
pop
fcomps
push
dec
in
jb
mov
push
in
ret
icebp
das
addb
fists
and
sbb
or
and
data16
mov
and
popa
mov
mov
decb
push
lea
mov
cmp
ja
jmp
add
dec
add
cltd
dec
imul
hlt
add
dec
mov
push
testb
adc
pusha
and
fs
jge
fsub
sbb
or
add
std
addr16
outsl
xchg
fwait
add
sub
mov
ret
ss
adc
iret
sbb
mov
nop
insb
or
mov
sub
xor
sarb
and
test
or
std
or
jne
mov
enter
lret
cli
enter
cmp
pop
imulb
or
adc
jle
jmp
sub
sub
jl
ljmp
push
mov
dec
sti
out
std
dec
les
dec
je
jmp
scas
add
jmp
adc
add
int
mov
adc
xchg
gs
je
sbb
inc
push
std
adc
test
jo
inc
push
xor
mov
aad
xchg
push
pusha
scas
lret
pop
gs
jne
mov
or
test
mov
dec
mov
and
mov
and
cmp
and
das
sub
xlat
cmp
aam
xchg
dec
in
imul
lock
adc
movsb
fwait
dec
setbe
add
mov
das
dec
add
pop
mov
cmp
mov
jmp
adc
loopne
ds
dec
arpl
push
add
mov
dec
pop
fsubrl
sbb
dec
jne
mov
test
add
outsl
jmp
in
adc
add
insl
inc
and
pop
popa
jb
and
xchg
lsl
inc
pusha
and
or
je
xchg
shlb
addr16
push
dec
inc
test
sahf
mov
les
lds
adc
sub
push
jmp
jne
adc
pop
pop
dec
mov
arpl
adc
test
mov
nop
sbb
and
pop
dec
test
test
cwtl
dec
lds
fcomip
mov
push
fisubrl
xor
add
test
insb
icebp
pop
inc
mov
and
jnp
adcb
adc
mov
pop
add
inc
cmp
fs
jg
jl
lock
call
popa
jne
or
dec
pop
lret
mov
mov
xor
sbb
sbb
sub
inc
jae
dec
jmp
jb
nop
and
inc
xchg
lahf
add
fstpt
das
ret
inc
xor
mov
loope
sahf
iret
jp
push
xchg
or
cmpsl
and
mov
cltd
pop
inc
movsl
mov
sub
add
push
imul
test
je
pop
pop
mov
in
pop
mov
jne
or
or
dec
nop
jo
arpl
inc
icebp
cwtl
jg
and
popa
test
push
popa
pop
xchg
and
mov
xchg
adc
and
pop
arpl
xor
je
pop
lcall
or
imul
cmp
clc
adcb
xor
lret
lret
add
or
lcall
testl
xchg
fwait
pop
mov
andl
addb
inc
cmp
ret
dec
xor
fisttpll
stos
inc
jp
push
test
lcall
mov
sub
xchg
add
call
and
jo
push
mov
fwait
dec
pop
sbb
push
fwait
or
leave
and
test
nop
inc
pushf
adc
inc
and
test
out
xchg
imul
push
fsubrs
jle
inc
or
rclb
lock
push
push
leave
adc
sbb
and
adc
sarb
jo
jb
cmp
loopne
lock
push
sub
cmp
sub
movsb
pop
adc
inc
pop
xchg
jecxz
dec
cmp
jmp
jbe
das
push
push
jmp
adc
mov
insl
int
jne
pop
test
cmpsb
push
pushf
jg
and
lock
dec
pop
cltd
nop
popa
cmpl
fcompl
scas
lahf
or
ret
imul
mov
mov
pop
xor
fimull
cmpsl
push
push
popf
xchg
test
adc
cmp
sbb
jmp
mov
or
popa
movsb
lret
neg
and
ja
aaa
or
clc
sub
out
in
mov
out
mov
xchg
test
add
movsb
mov
mov
mov
test
in
imul
aad
inc
icebp
ja
mov
add
jae
loopne
xor
lahf
add
dec
pop
addb
sbb
and
add
pop
inc
xchg
mov
adc
add
rcl
lods
sti
int
repz
out
pop
lret
mov
and
ficoms
lock
out
push
inc
jecxz
add
cs
push
sub
ss
rol
or
mov
xchg
or
jmp
cmp
ret
or
pop
cmpl
test
push
sub
mov
inc
adc
or
shrb
mov
repz
loope
adc
sbb
mov
or
xchg
outsb
adc
xor
divb
inc
andb
mov
and
and
adc
push
fwait
push
in
sbb
and
adc
cmp
mov
xor
rcll
mov
pusha
adc
and
mov
push
fcomp
pop
cmp
je
or
jnp
in
mov
xchg
push
mov
leave
and
xlat
insl
mov
inc
pop
test
loope
and
or
subl
or
mov
or
jo
dec
dec
or
lock
xchg
pop
add
xchg
ret
and
ret
and
or
hlt
pusha
lcall
ljmp
xchg
sahf
icebp
les
mov
das
sub
cmp
cmpsb
stc
mov
xchg
mov
sbbb
sub
mov
cwtl
test
inc
aad
cmp
inc
jecxz
push
or
push
pushf
in
push
pop
dec
sbb
addl
inc
roll
outsl
adc
sbbb
es
mov
pop
dec
fs
inc
pop
push
dec
lds
xchg
mov
shrb
leave
mov
inc
insb
das
mov
push
push
outsl
movsb
or
inc
pusha
push
add
lods
rcrl
dec
cltd
mov
push
adc
dec
jp
mov
mov
push
jbe
es
pop
push
push
dec
loopne
add
cmp
inc
jbe
imul
call
movsb
and
pusha
jae
shrb
mov
scas
add
mov
in
and
push
add
insl
data16
shl
mov
cmp
add
or
sub
imul
rolb
movsb
xor
xor
xchg
xchg
add
cltd
or
jbe
mov
xchg
iret
adc
cmpsb
adc
shrl
in
ret
and
je
push
jb
add
cld
insl
dec
jne
test
das
mov
loopne
shrb
cmp
inc
adc
and
lds
push
lahf
test
adc
or
mov
dec
xchg
test
or
adc
mov
add
inc
xchg
and
pusha
mov
dec
jp
cwtl
insb
inc
outsb
sub
xor
dec
into
dec
pusha
nop
stos
sbb
xor
ret
sbb
call
leave
dec
fildl
cmp
mov
or
lds
roll
aam
and
jl
test
cmp
negb
inc
inc
add
mov
fildl
xchg
add
pop
add
mov
cli
fwait
jmp
flds
adc
daa
ss
stc
insl
add
inc
add
jmp
lock
sub
push
rcrb
lahf
or
lds
inc
iret
inc
add
adc
imul
pusha
xchg
push
lods
js
sub
inc
aaa
xor
pop
inc
es
mov
ja
mov
ss
dec
add
mov
insl
sbb
mov
add
data16
ret
sub
inc
pushf
cmp
subb
mov
jmp
push
xor
push
or
cmpsl
xor
push
aas
sbb
or
outsl
out
test
adc
ss
push
outsb
sbb
sub
test
inc
xchg
adc
inc
xchg
cmp
inc
lds
insb
pop
xlat
ret
pop
push
adcb
mov
adc
lock
or
sbb
psraw
fistpll
mov
pop
ja
xor
out
or
movsl
dec
mov
les
sub
es
je
jo
data16
pop
inc
mov
add
push
das
push
pushf
cmp
push
jmp
sbb
rep
adc
dec
push
and
aam
jno
pusha
add
push
add
pusha
pop
push
in
jg
out
push
sub
mov
imul
add
and
xchg
lods
dec
out
sbb
shlb
shrb
hlt
and
ja
mov
imul
ss
or
adc
or
push
in
sub
mov
test
dec
push
adc
loope
inc
sahf
test
cmpsb
test
repz
leave
adc
pop
and
insl
jbe
sbb
pop
pop
jb
adc
push
mov
mov
js
out
ss
push
and
adc
pop
push
jo
dec
xchg
ret
and
dec
pop
cmp
mov
and
pop
adc
nop
lea
pop
or
pop
lods
xchg
add
subl
push
sbb
lods
mov
adc
scas
sbb
push
mov
je
dec
dec
ss
fs
xor
mov
test
imul
inc
orb
andb
aaa
jo,pt
xchg
mov
scas
jo
test
dec
adc
nop
cmpsl
inc
mov
push
daa
rcrb
lds
mov
xchg
mov
inc
test
sbb
scas
outsl
lret
mov
sbbl
xor
push
jnp
push
shrl
arpl
inc
adc
mov
sbb
test
mov
test
adcb
sub
pop
add
mov
pop
cmc
and
adc
jne
mov
iret
push
fldt
lods
sbb
sub
push
jno
mov
ja
out
jl
dec
add
movsl
xchg
mov
and
fcom
or
push
inc
adc
movzwl
cmc
or
or
jp
adc
outsb
stos
dec
xorl
xor
arpl
jne
jb
in
cs
rolb
and
out
daa
push
xor
adc
inc
and
movsl
mov
push
outsl
sub
out
es
mov
fs
imul
mov
mov
dec
adc
imul
dec
push
sbb
or
test
sub
rcl
mov
movsl
aaa
inc
insl
xchg
xor
mov
dec
xor
aas
mov
adc
cmc
sbb
xor
cmp
mov
or
mov
adc
cmpsb
mov
int3
and
das
cmp
imul
inc
dec
scas
mov
push
dec
loopne
loopne
aas
mov
and
mov
push
jmp
add
test
mov
sub
dec
push
mov
adc
dec
mov
cmp
cmp
push
movl
add
sbb
jg
icebp
mov
pop
pop
add
mov
insl
jnp
lods
push
test
pop
lock
imul
test
inc
and
or
pop
push
mov
popf
call
in
jno
inc
inc
movsl
xor
inc
fs
sub
sub
xchg
xor
adc
nop
inc
mov
jnp
shll
mov
stos
popf
push
incl
or
shrb
lahf
aas
mov
and
aas
aaa
and
lea
rclb
and
mov
cmpsb
dec
pop
mov
insb
jecxz
add
push
dec
mov
sbb
lock
fildl
mov
sub
jp
pop
pop
inc
repz
mov
ja
adc
inc
test
inc
xor
syscall
fsubr
das
imul
xor
and
cld
ficoml
pop
int
add
je
aas
adc
xchg
and
pop
jne
mov
add
jmp
add
and
sarl
lret
jmp
xorl
and
jnp
push
popa
scas
flds
dec
aas
faddl
or
adcl
or
adc
fmuls
les
xchg
mov
inc
cmp
mov
dec
mov
cmp
xchg
xchg
pop
pop
outsb
mov
push
les
add
sub
rorb
adcb
and
push
and
out
inc
inc
mov
add
mov
mov
mov
mov
pop
xchg
aam
sub
lods
sub
push
add
mov
jl
in
push
mov
shlb
mov
sub
mov
cmpsb
mov
call
dec
xor
dec
aam
xor
cmp
and
add
pop
cmp
mov
and
inc
adc
jne
sarb
sbb
movsb
aaa
adc
inc
pop
mov
imul
fadds
ja
mov
add
dec
loopne
push
aam
fcomps
popf
cmp
sub
rorl
inc
ret
xchg
mov
scas
sti
shll
loopne
dec
mov
mov
and
mov
and
and
dec
leave
push
bound
cmp
add
mov
mov
shll
adc
or
dec
xor
dec
inc
sbb
push
xor
fiadds
mov
cmp
cmp
sbb
mov
dec
dec
inc
insb
jle
or
xchg
loopne
icebp
push
xor
pop
mov
or
dec
push
inc
faddp
xchg
mov
or
push
pop
lods
sbb
adc
data16
nop
mov
pop
repnz
jle
adc
dec
prefetchwt1
jg
mov
and
outsl
bound
movsb
cmpsl
xor
mov
outsb
outsl
or
outsb
orb
push
add
pop
fsubrs
jno
add
xor
dec
popa
jg
push
out
xor
inc
jge
jmp
add
rclb
mov
add
add
in
cwtl
xorl
jb
push
cmp
and
xchg
cs
mov
add
rorb
mov
adcb
sub
sbbl
out
dec
les
jns
in
push
loopne
out
sahf
pop
in
pop
mov
sbb
sbb
and
subl
enter
je
iret
cmpl
enter
subb
xchg
lods
inc
and
aaa
xchg
push
xchg
popa
xchg
xor
xor
das
or
movsl
inc
jae
scas
dec
xor
mov
inc
imul
orb
aaa
lret
mov
fwait
xchg
push
or
fnstcw
sbb
test
mov
sbb
push
jge
test
insl
insl
mov
fs
aas
pop
aas
inc
mov
or
sbb
push
xchg
jne
pop
xor
push
push
pushf
dec
sub
pusha
nop
rcll
dec
leave
add
inc
mov
and
call
and
add
dec
inc
mov
xor
nop
and
sahf
add
xchg
inc
cmp
push
dec
cmpsb
in
pushf
mov
movsb
push
test
cmp
repnz
xchg
mov
jae
iret
xorl
rclb
rcrb
xchg
sub
enter
cmpl
and
fs
cmp
repnz
xchg
dec
mov
push
pop
pop
mov
stos
add
movl
pop
or
sbb
daa
data16
js
push
inc
es
add
or
add
jb
mov
andl
mov
loop
add
and
notl
cltd
dec
mov
push
xchg
cmpsl
adc
loop
fsubl
push
inc
andl
imul
xchg
push
sub
dec
and
sub
xchg
mov
mov
xchg
mov
pop
adc
popf
xchg
mov
lea
pushf
push
in
sub
shll
test
inc
sarl
add
dec
loopne
pop
fldl
int3
shrl
faddp
fdivrs
mov
clc
pop
jb
inc
or
mov
push
cwtl
cmpsb
cmc
nop
pop
cwtl
shrb
adc
or
sub
lods
push
or
or
cmpsl
icebp
add
es
push
dec
mov
sub
xchg
sahf
adc
add
sub
xchg
add
adc
mov
cmp
fdivl
inc
and
xchg
and
sahf
cwtl
dec
inc
aam
popa
add
repnz
stc
xchg
push
push
jmp
sbb
out
adc
imul
or
ret
pop
add
sub
mov
sbb
mov
mov
inc
adc
inc
ret
cli
lods
mov
dec
fs
mov
mov
divb
hlt
push
mov
sub
loopne
mov
add
dec
sbb
fmull
dec
cld
fmull
jb
aam
rorb
sar
shrb
pusha
cs
ds
and
int3
enter
shll
not
or
jb
rol
jl
arpl
hlt
dec
mov
shll
mov
pop
xorb
dec
push
shrl
in
jne
adc
or
movl
xchg
inc
sub
mov
dec
movsb
or
dec
or
bound
and
push
in
scas
les
push
rcll
not
fbld
or
or
mov
arpl
addr16
insl
outsb
fs
loope
jo
jns
jbe
js
jp
xchg
cmpsb
mov
push
pop
and
pop
sub
jl
sbb
aas
sub
pop
jnp
jge
lds
add
ss
xor
and
adc
int3
enter
dec
les
test
mov
jne
lock
mov
xchg
orl
daa
int
push
jecxz
addr16
insb
inc
push
std
clc
inc
add
pop
fs
clc
xor
fs
decl
test
or
aas
call
sbb
add
inc
imul
adc
loop
nop
dec
les
lock
or
cmp
enter
ss
imul
fsts
push
adc
dec
cwtl
xor
jle
repnz
repz
test
es
hlt
sbbb
fsubrp
cmp
and
imul
lcall
pop
leave
add
cwtl
pop
movsl
sbb
inc
mov
pop
or
mov
sbb
inc
and
pop
jns
in
nop
pop
imulb
add
add
or
and
sbbb
mov
jmp
cmpsl
pop
sahf
sub
loopne
lret
loopne
mov
cmc
test
mov
xchg
lods
add
add
out
lds
pop
pop
adc
pop
push
jb
mov
and
loopne
pop
movsl
adc
or
in
cld
add
jo
add
in
push
adc
mov
popf
jno
sbb
xlat
sub
dec
enter
adc
mov
aaa
leave
mov
pop
mov
clc
orl
lret
shlb
pop
adc
movsl
mov
push
ret
cli
pop
ja
inc
jmp
inc
test
add
push
jmp
nop
sarb
or
jecxz
sub
sub
add
repz
inc
push
insl
mov
sbb
add
xchg
jne
insl
insl
andb
movsb
negl
test
lret
gs
xchg
incl
push
xchg
dec
jmp
pop
fbld
mov
enter
popa
outsb
pop
mov
inc
sahf
imulb
inc
jo
jns
leave
imul
jne
pop
insb
pop
jne
xchg
cmp
xor
arpl
inc
sub
outsl
jbe
imul
lods
pop
cmpsl
lahf
pop
mov
jne
shll
jne
lock
cmpsl
popl
imul
repnz
add
add
xchg
pop
nop
hlt
mov
add
jns
fdivs
mov
movsl
add
or
out
pusha
add
or
insb
loope
xor
cmp
rclb
pop
movb
mov
mov
cld
jns
inc
jge
inc
mov
add
add
sub
int3
in
inc
cmp
fwait
rep
rolb
or
adc
gs
mov
addl
fadd
nop
mov
push
nop
push
inc
mov
mov
rorl
movsb
pop
insb
addb
push
pop
push
push
stos
jbe
xor
out
dec
add
movsl
mov
sbb
ret
popf
out
mov
push
pop
dec
dec
add
and
inc
imul
or
push
jge
insl
mov
mov
in
push
xchg
pusha
daa
in
les
sbb
push
jecxz
mov
inc
pop
adc
rcrb
daa
lods
ret
pop
js
push
sub
mov
into
or
dec
shlb
xchg
mov
lods
xor
pminsw
jne
dec
sub
sub
je
or
fcomp
arpl
jecxz,pn
sbb
into
int3
shll
add
adc
roll
jne
daa
in
xchg
or
add
sbb
mov
out
stos
xchg
xor
je
mov
and
mov
push
mov
pop
fstl
mov
iret
sbb
in
and
cmp
mov
mov
dec
rcl
push
aam
out
sbb
int
dec
or
fistl
je
xchg
xor
add
xchg
fisttpll
cmp
call
sbb
inc
cmpsb
js
mov
or
jno
shrl
ret
inc
xchg
popa
dec
js
int
loop
repnz
or
inc
or
popf
mov
pop
lods
push
push
adc
dec
inc
pop
xor
jbe
sub
subb
test
dec
or
dec
xchg
adc
inc
dec
roll
jmp
cmpsl
clc
mov
dec
mov
inc
jne
sbb
sub
sub
and
xchg
je
inc
push
xor
rorl
jge
and
adc
icebp
sbb
andl
xchg
jae
and
and
mov
sbb
aam
dec
mov
push
add
inc
mov
add
out
add
cmp
ljmp
ja
adc
and
sbb
mov
sbb
pop
mov
push
add
sub
popa
or
adc
xor
xlat
inc
add
dec
jecxz
jge
arpl
add
stos
add
cmp
jne
or
pop
and
inc
add
pop
mov
addr16
fadds
cmp
adc
je
insl
mov
cmp
add
sbb
out
push
mov
adc
nop
shrb
std
and
and
in
inc
sbb
and
mov
test
lahf
shr
and
mov
push
lea
dec
aam
xchg
add
call
cwtl
addl
cmpb
cmpsl
mov
jo
inc
ss
nop
outsb
sub
inc
add
hlt
pop
fimuls
test
push
in
inc
xchg
gs
mov
out
insl
pusha
pop
mov
add
xchg
dec
mov
lock
stc
inc
mov
ret
aam
nop
mov
xchg
arpl
and
shr
nop
fs
lea
mov
inc
enter
or
pcmpgtw
sbb
fwait
sbb
xchg
test
cmpl
pop
jns
xchg
gs
fwait
je
add
xor
pop
pop
je
mov
sbb
mov
mov
push
in
movsl
data16
jmp
lret
sbb
sbb
and
ret
hlt
mov
jno
xchg
test
sub
and
or
jnp
inc
or
pop
push
and
and
mov
fs
aaa
das
test
daa
mov
mov
cmp
cli
ja
jnp
add
jecxz
mov
nop
in
cltd
adc
cmpsl
mov
cmp
ds
or
xchg
sbb
js
hlt
add
enter
adc
test
mov
adc
inc
pop
and
and
cmp
xor
xchg
add
hlt
pop
inc
or
sub
cmp
adc
pop
dec
cs
hlt
dec
xchg
mov
or
test
pushf
pop
mov
fcmovbe
pop
pop
test
ds
xchg
adc
cmp
or
imul
mov
mov
cmpsl
rclb
jl
test
mov
out
sahf
mov
xchg
and
push
in
je
sub
out
sahf
add
sub
in
nop
pop
pushf
pusha
cwtl
inc
sahf
add
nop
jo
cmp
mov
xchg
test
movsb
jl
jns
in
js
nop
out
sahf
jo
insb
int3
jns
in
push
inc
sahf
add
push
in
nop
lock
clc
pop
and
subl
enter
mov
pop
inc
xor
sbb
jae
cmp
cmpl
enter
xor
dec
nop
cmp
repnz
pushf
lods
lods
mov
roll
cmp
lods
imulb
ja
mov
dec
mov
daa
xor
adc
jp
les
stc
mov
add
or
pop
mov
xchg
dec
xor
push
fidivl
add
fcmovb
stos
fisubl
scas
cmp
outsb
inc
scas
ja
xor
ret
lret
push
push
inc
dec
outsl
arpl
or
inc
inc
dec
jae
not
shlb
sbb
add
imul
push
sub
push
sub
and
jp
jo
adc
lcall
jno
push
pop
test
mov
add
mov
call
stos
pop
mov
pushw
sub
popf
sbb
test
pop
popa
fs
outsb
jnp
push
jnp
popa
push
insb
xchg
push
rcr
sbb
pop
push
pop
cmpl
out
jbe
dec
insl
push
cltd
fldl
pop
push
sbb
scas
fstpl
out
jae
jne
inc
or
shrb
cs
outsl
int
jns
pop
push
insb
mov
xchg
and
and
or
bound
in
dec
push
addr16
xor
ret
inc
or
ja
sub
mov
sbb
sbb
push
leave
jo
aas
mov
fisttpll
lret
jge
in
add
push
pop
jne
adc
divb
xor
mov
enter
std
sbb
xor
les
rorl
pop
ja
sub
leave
fisttpll
mov
adc
nop
movb
cmp
adc
outsl
fdivs
stos
inc
or
push
adc
xlat
loopne
sbbb
mov
data16
rcr
insl
add
leave
dec
popa
jbe
imul
push
outsl
sti
pop
jb
and
outsb
cmpb
out
cltd
data16
or
cmovge
dec
imul
jb
leave
xor
daa
dec
add
clc
gs
jmp
cmpsl
mov
and
dec
jnp
rclb
jo
pop
loope
negb
and
in
push
pop
mov
popa
sub
arpl
sub
pop
push
adc
or
or
fdivrp
sub
mov
loopne
jns
and
adc
pop
push
cli
pop
jp
inc
xor
std
and
ret
push
lock
add
sub
mov
or
or
shll
rcrb
pop
ret
xchg
out
add
cmp
dec
inc
mov
or
inc
and
adc
xchg
xchg
add
mov
inc
decl
sbb
fsubs
add
outsl
aaa
push
sub
loop
sbb
mov
les
shr
and
popf
mov
or
leave
test
mov
aad
xchg
cmp
mov
push
add
add
les
pop
inc
adc
test
add
sub
loopne
fnstcw
jl
hlt
rcll
add
jg
xchg
add
test
leave
aaa
mov
loop
adc
mov
add
adc
aam
xor
sarb
pop
inc
in
adcb
sahf
jle
cmp
mov
stos
add
jmp
cmp
add
adc
dec
push
mov
push
or
stos
cltd
ja
stc
push
test
dec
mov
xchg
out
insl
sbb
push
mov
je
xor
adc
dec
push
jns
pusha
or
scas
loopne
mov
insb
inc
sub
cmp
inc
aaa
dec
insb
mov
mov
stos
push
add
sub
pop
dec
arpl
dec
push
loopne
sbb
adc
xor
out
mov
faddl
xchg
or
mov
cmpb
mov
test
push
lock
jg
dec
and
jae
mov
lods
hlt
rcrl
pop
fadds
xchg
add
int3
lock
popa
nop
in
aam
lock
or
shlb
sbb
lcall
jae
in
mov
mov
call
xchg
popa
adc
jbe
cmp
xchg
out
in
rorb
jae
int3
inc
sub
sub
jecxz
enter
push
xor
enter
xchg
stos
les
les
pop
repnz
stos
push
pop
or
pop
or
aaa
pop
rolb
adc
rclb
and
xchg
pop
adc
inc
and
std
repz
mov
call
mov
call
call
push
adc
mov
es
sti
xchg
call
mov
cmpsl
or
mov
mov
and
iret
out
or
xchg
push
adc
jecxz
add
je
mov
cmp
pop
adc
dec
push
push
push
push
dec
mov
xor
shrl
pushf
jbe
jg
xor
mov
pop
das
cmp
pop
lret
mov
or
or
enter
and
sbb
and
mov
push
push
or
aam
inc
add
sub
add
pop
fdivrl
ds
test
adc
sub
imul
jne
dec
dec
pop
lock
push
fldenv
xor
lods
xlat
push
rclb
add
push
rol
insl
daa
xchg
push
imul
mov
jmp
test
movsl
jo
mov
loopne
pop
sbb
stos
call
jmp
fadds
ret
inc
mov
mov
and
popa
stc
lahf
rorl
or
cmpb
repz
or
subl
xchg
sub
adc
daa
clc
popf
inc
mov
jae
mov
and
xchg
xor
movl
test
fiaddl
mov
mov
inc
fimull
dec
pop
lea
or
imul
fld
mov
or
jmp
or
adc
cmp
sub
stos
mov
xor
cltd
pop
jmp
hlt
mov
add
mov
adc
xchg
fwait
jbe
ljmp
add
add
cmp
aad
dec
adc
loop
rcrl
sbb
loopne
adc
add
xchg
jecxz
rol
mov
mov
add
out
shlb
mov
addl
push
test
rcll
lock
push
jmp
sub
inc
cmp
jmp
outsl
adc
dec
ja
mov
call
lods
pop
in
sub
xor
clc
inc
cmp
xlat
movsl
inc
in
popl
push
dec
mov
mov
sbb
add
mov
mov
stc
and
in
hlt
dec
jne
xor
mov
je
mov
sbb
negl
cmp
inc
pop
pop
popf
lock
sub
adc
adc
push
std
arpl
jne
push
sbb
rcll
xor
out
fcoms
mov
in
stos
xlat
push
enter
mov
in
enter
mov
mov
filds
cmpsl
nop
xor
jae
xor
mov
sbb
mov
adc
cs
mov
push
leave
push
daa
ret
mov
jge
jne
jecxz
and
dec
arpl
pop
lods
movb
cmp
test
test
daa
inc
insl
and
ljmp
out
ss
inc
les
sub
add
mov
fiaddl
xor
push
jb
pop
jl
pop
lock
push
movsb
pop
pop
or
and
push
push
and
push
inc
pop
or
or
int
fdivrs
lret
push
rolb
inc
push
and
insb
jge
lea
add
mov
mov
pushl
scas
stc
jle
std
sbbl
into
xchg
out
push
mov
adc
and
xchg
dec
push
dec
mov
cmp
inc
ljmp
das
cmp
jns
jmp
fs
lock
xlat
xchg
dec
sbb
jl,pn
mov
xor
jne
push
add
dec
xchg
mov
push
push
loopne
sub
sub
out
out
xchg
inc
fmuls
mov
clc
xor
test
pusha
movsb
xor
fs
pop
aaa
inc
aaa
hlt
hlt
inc
xchg
lock
xchg
or
cmp
imulb
ret
fildll
inc
mov
inc
ja
icebp
pop
jb
mov
jb
or
sahf
ret
outsl
icebp
js
and
sbb
inc
test
out
daa
add
es
clc
dec
test
mov
inc
shlb
add
xor
xor
loop
popl
and
sti
loopne
push
xchg
or
push
leave
or
sahf
in
adcb
cmp
int3
xor
jecxz
or
pop
pushf
jne
sbb
mov
subl
dec
loopne
lcall
stc
or
jg
push
add
and
sub
push
sub
icebp
fs
dec
xor
fcmovnu
jecxz
sub
dec
adc
inc
pusha
and
xor
fnstenv
pop
add
arpl
enter
shl
ret
and
clc
cmp
in
loop
mov
dec
jne
add
sub
mov
ret
pop
in
inc
mov
cmp
sbb
pop
and
cld
mov
mov
pop
jg
insb
xchg
mov
aaa
cld
cld
repz
scas
sbbb
cltd
lock
add
sub
mov
mov
ret
xchg
inc
cmp
and
xchg
mov
pusha
push
add
cld
or
bound
pop
outsl
xchg
jo
mov
pushf
and
xchg
inc
sub
stos
sbb
dec
xchg
sub
loopne
stc
mov
cmp
cmc
adc
mov
adc
pop
int3
lods
xchg
jne
rorl
xchg
hlt
cmpsb
and
nop
mov
fisubl
test
insb
sub
and
and
shrb
imul
sbb
aas
mov
movzwl
sub
movsb
mov
repz
mov
movl
imul
nop
lret
mov
lods
subb
inc
sub
cmpl
xchg
cwtl
xchg
and
in
jg
xchg
pop
jnp
mulb
cmp
inc
mov
xor
rolb
inc
aas
shll
sbb
movzbl
jo
push
adc
add
ret
pop
or
push
fildll
sub
int3
cmp
jae
decb
sbb
jecxz
mov
pop
mov
dec
incl
mov
jge
outsl
xor
add
sub
movsl
sub
sbb
add
bswap
jb
clc
and
stos
mov
mov
call
sbb
dec
cwtl
outsl
mov
jp
pop
push
push
mov
add
xchg
mov
enter
mulb
or
xor
pusha
pop
sub
push
test
adc
es
mov
and
xor
xchg
or
inc
lods
sbb
cmp
mull
sbb
dec
mull
das
call
mov
mov
add
or
inc
push
jns
push
imul
aaa
mov
and
cld
imul
adc
aam
jmp
pop
or
mov
jns
adc
or
dec
mov
add
dec
adc
cs
add
outsl
outsb
and
outsb
gs
adc
dec
push
out
das
call
insb
jbe
inc
or
cmp
pusha
and
push
es
mov
push
pop
jns
fisubl
in
inc
imul
repz
fmuls
xor
adc
mov
push
dec
int3
adc
mov
rorl
or
dec
cltd
gs
mov
pop
xor
mov
popa
or
lods
dec
sbbl
subb
ja
add
mov
and
add
mulb
add
mov
adc
fiadds
addr16
stos
fisubrl
fnstcw
jg
test
aas
repz
pop
mov
xchg
or
add
fsubs
push
pop
xor
xchg
es
xchg
add
add
test
or
nop
pop
popl
cmp
daa
cli
and
pop
repnz
or
out
movaps
jb
bound
pop
loopne
or
jl
or
mov
pop
jns
pop
out
movsl
movsl
aaa
js
inc
or
push
xor
sub
daa
ss
xlat
mov
test
push
pop
xor
fwait
ss
mov
xor
sahf
dec
sti
push
out
ja
dec
jae
hlt
push
ss
and
or
jbe
adc
mov
dec
push
jbe
or
dec
dec
das
jno
cwtl
mov
pushf
pop
pop
lods
mov
push
sbb
xchg
push
hlt
dec
decb
pop
and
dec
daa
cld
sbb
cld
shrb
out
std
and
loop
std
or
add
stos
bound
pop
push
or
mov
sbb
imul
dec
xor
pop
push
sbb
pop
pop
and
xor
nop
rclb
pop
lcall
pop
push
pop
hlt
and
test
and
jl
aas
and
es
mov
js
sub
andb
mov
inc
sub
pop
shrb
lahf
insb
sub
add
adc
inc
fmull
dec
pop
mov
rcl
push
inc
xor
push
xor
and
jbe
sub
cltd
adc
xorl
xchg
nop
jo
leave
or
or
jae
aam
pop
fwait
xchg
incl
addl
add
je
dec
js
fs
xchg
js
add
rolb
pop
sbb
fs
addb
push
aaa
push
inc
and
js
push
and
or
and
int3
push
dec
add
cmp
mov
push
sbb
push
std
orb
frstor
imul
loopne
add
std
or
cmp
adc
cmpl
dec
stc
adc
rcrl
fs
popa
and
outsl
jne
movsb
test
and
push
jne
imul
dec
test
adc
jo
pop
test
imul
push
leave
bound
mov
inc
add
pop
enter
add
stc
dec
repz
cltd
outsl
pop
inc
ficoms
mov
xor
les
test
movsb
andl
mov
lcall
mov
adc
aam
pusha
mov
repz
fwait
imul
inc
push
out
imul
push
add
mov
daa
jbe
add
add
sub
fs
inc
fisubrl
int3
rcrb
in
in
popa
add
sub
push
adc
add
or
lds
sbb
pop
sbb
dec
or
mov
jg
inc
les
sbbl
mov
lock
int3
adc
inc
push
jae
dec
shrb
push
pop
jp
shlb
add
push
xchg
dec
push
orb
add
pushf
aad
inc
adc
mov
test
or
cmc
sbb
xchg
dec
imul
and
xchg
mov
testb
and
adc
leave
dec
adc
dec
daa
dec
dec
adc
push
cld
fists
shll
and
push
xchg
lcall
cmp
push
dec
daa
dec
lcall
add
outsb
invd
adc
outsl
push
sbb
sbb
push
push
inc
push
int
or
pop
sub
mov
push
inc
and
xlat
incl
xor
shll
push
or
add
or
sbb
sbb
mov
sbb
rcrb
sbb
and
push
out
stc
xor
sbb
popa
push
push
pushf
push
in
pop
dec
into
adc
xchg
mov
push
jl
push
stc
push
addb
push
push
faddl
push
in
cmpsb
insl
out
push
int3
push
les
lcall
cmp
lcall
mov
lcall
sbb
nop
lods
or
outsb
dec
sbb
xor
stos
shlb
push
inc
pusha
adc
inc
mov
ss
cmpsl
pop
subps
cwtl
sbb
or
xor
mov
les
adc
pop
lea
pop
jns
inc
rorb
add
mov
cmp
dec
or
mov
and
push
inc
push
add
sbb
sbb
mov
push
roll
add
sub
leave
and
lods
xchg
and
add
dec
jle
add
mov
jl
xchg
and
addl
movsl
ja
ficoml
popf
mov
xchg
cmp
mov
pop
push
xchg
cmp
adc
adc
push
jb
lds
cmp
inc
push
xchg
adc
mov
pop
lds
inc
push
dec
inc
inc
testl
mov
dec
cmp
dec
orps
sarl
jnp
xchg
mov
xchg
push
xchg
fidivl
adc
ss
push
pop
imul
xor
pop
inc
jle
xchg
adc
nop
pop
or
or
pop
adc
sub
stos
popf
nop
push
push
mov
loopne
daa
or
push
jo
shll
subl
in
rorb
pop
push
cmpsl
rolb
setb
xor
push
add
and
or
push
or
adc
mov
and
xchg
pop
and
clc
test
jg
add
adc
sub
popf
dec
test
lock
mov
test
addb
push
pushf
xchg
sbb
cwtl
inc
je
mov
and
add
add
jo
add
push
iret
add
cmp
rcrb
or
mov
addb
cmp
pop
sub
sub
or
pop
xor
inc
jo
mov
adc
sbb
jns
fsts
xor
mov
inc
jno
inc
je
inc
jmp
lret
mov
testb
push
inc
or
pop
lcall
xchg
cmp
iret
fisubs
ljmp
mov
and
cmp
xor
sub
inc
test
pop
or
mov
mov
dec
and
mov
sbb
sbb
js
das
or
jecxz
or
add
ds
push
pop
les
adc
adc
aaa
adc
xchg
movsl
sbb
push
out
and
dec
shll
rdmsr
mov
mov
add
pop
or
mov
adc
cmpb
inc
push
push
orl
jns
enter
addr16
add
movsl
or
leave
add
mov
xor
sub
stos
in
pop
sti
jle
add
jmp
insb
push
add
in
add
mov
cmpsb
add
movl
or
dec
lea
and
or
pop
dec
add
mov
fldpi
inc
mov
insl
add
sbb
pop
xor
inc
and
xor
scas
cmpl
mov
push
inc
add
fisubrl
jecxz
lret
lret
daa
and
xchg
inc
fstl
mov
sub
xor
sbb
jecxz
fisubs
pop
pop
stos
push
adc
mov
mov
inc
mov
nop
dec
in
rorl
mov
and
cmpl
sub
outsl
jae
cli
out
dec
test
mov
pop
push
mov
daa
mov
push
mov
movb
sbb
xchg
mov
jno
lock
adc
lea
imul
das
adc
push
in
sbbl
inc
add
inc
popf
dec
pop
cs
add
sahf
les
dec
insb
dec
sub
hlt
ds
dec
sbb
jmp
aaa
push
inc
push
jo
push
fadd
adcl
dec
dec
popaw
and
jno
pop
mov
pop
shl
rorb
sbb
xchg
push
dec
int3
subl
cmpsl
add
es
or
or
or
pop
ja
jle
loopne
inc
jne
sbb
lds
lea
adc
and
mov
decl
mov
adc
into
xchg
mov
push
and
or
cs
fcomps
add
pop
or
incl
push
push
shl
or
movsl
or
add
jb
mov
xor
mov
mov
adc
cmc
add
push
das
inc
in
add
pop
sti
push
adc
mov
popa
xor
cmpsl
pop
or
xchg
jo
and
in
mov
push
mov
and
lahf
mov
insb
clc
ja
fwait
xor
neg
or
adc
adc
int3
js
push
mov
push
sbb
loop
add
adc
mov
pop
rcrl
sbb
lret
mov
dec
mov
cmpsl
pop
dec
xchg
inc
xor
nop
scas
pusha
xchg
adc
xor
push
call
gs
test
or
mov
int3
mov
inc
dec
push
sbb
jge
add
adc
adc
lea
imul
sbb
add
pop
dec
sub
add
adc
add
cld
mov
das
add
jns
add
iret
jbe
in
orl
and
mov
inc
addl
jne
sbb
pop
cmp
jbe
cmp
sub
jbe
adc
leave
nop
jp
ds
push
inc
mov
dec
mov
add
mov
and
gs
cmp
inc
dec
jne
inc
or
jp
mov
rorl
sbb
sbb
dec
adc
addb
sbb
add
lea
fstpl
or
mov
or
or
inc
das
mov
daa
mov
and
inc
call
call
sbb
add
dec
std
push
inc
fcomps
sbb
jl
int3
sub
mov
aad
imul
into
push
push
inc
push
scas
add
mov
add
imul
add
ret
leave
rcl
inc
into
adc
test
int3
test
js
mov
cmpl
lods
mov
or
mov
xor
adc
xor
jmp
movl
adc
clc
add
lds
mov
mov
inc
mov
mov
xor
and
lea
sbb
sub
add
hlt
inc
pop
pop
aaa
jne
jb
lea
adc
jno
jae
add
pusha
in
sbb
fisttps
adc
jg
sub
outsb
inc
ror
dec
ljmp
cmp
and
pop
cld
and
xchg
xchg
mov
subb
imul
or
inc
dec
rclb
and
popa
out
mov
pop
clc
xlat
or
rclb
test
sbb
enter
mov
mov
ss
or
inc
dec
cmp
test
test
je
sub
in
xchg
jbe
mov
xchg
pop
cmpl
add
xchg
aad
test
ljmp
xor
dec
push
dec
inc
or
add
add
adc
repnz
adc
fcmovnb
sbbb
test
loop
test
andb
add
in
or
inc
test
mov
jmp
jle
cmpsb
add
sbb
into
data16
or
hlt
data16
sbb
or
xor
mov
nop
outsl
nop
inc
xor
sbb
iret
les
imul
rorb
mov
es
jbe
inc
dec
or
gs
insl
call
jb
dec
jl
push
hlt
sub
call
push
mov
add
inc
sub
push
push
xor
xorb
roll
negl
adc
mov
jno
and
jne
push
add
lea
cmp
test
pop
or
test
sub
andl
sbb
push
icebp
nop
in
xor
adc
je
inc
dec
or
jmp
imul
xor
mov
mov
cmp
push
mov
mov
push
inc
sbb
and
pusha
je
cwtl
in
fs
push
xchg
out
cmp
jl
mov
add
inc
lods
arpl
fadds
dec
loope
xchg
sub
aam
inc
cmpb
mov
or
mov
push
cmpb
data16
pop
mov
mov
addl
xor
add
pop
and
subl
add
sbb
xchg
xchg
pop
and
mov
sbb
sub
sbb
sbb
les
mov
ljmp
aaa
xor
movsb
insb
idivb
or
inc
mov
aaa
or
mov
or
mov
inc
fcoms
push
or
add
fimuls
add
das
adc
inc
inc
cmpsb
in
jp
lock
pop
hlt
imul
xor
pop
mov
lea
cmp
int
jne
mov
mov
aam
mov
bswap
and
push
push
jg
jo
inc
dec
add
or
and
fadd
faddl
scas
add
test
testb
adc
addr16
test
push
mov
and
inc
pop
jbe
sub
in
add
ret
out
pop
inc
fwait
insl
add
nop
xchg
movsb
sbb
or
popa
enter
mov
sahf
push
cltd
shll
or
jle
clc
shlb
int3
inc
popa
jg
sbbb
sub
cmpsl
mov
fs
inc
rcrb
mov
jne
out
test
and
inc
stos
mov
mov
test
jns
adc
adc
add
dec
or
dec
aas
adc
movsb
shll
movsl
dec
cmp
adc
dec
or
or
and
roll
add
push
shrb
mov
mov
cmpl
cmp
add
mov
fwait
or
fsubs
je
outsl
sbb
imul
jl
idivl
jnp
and
add
xchg
hlt
rorb
insb
inc
jne
and
popf
xor
jle
insl
or
and
test
jno
dec
imul
mov
mov
cmp
pop
lret
mov
pop
pop
dec
mov
jle
add
push
pop
and
add
xchg
test
add
mov
sub
loopne
lods
cmp
xorl
andl
xchg
add
push
inc
and
pop
push
ljmp
test
rorb
mov
popf
cli
inc
jne
insl
daa
ja
mov
xchg
test
popf
fwait
inc
xorl
jae
aam
jmp
loopne
mov
es
jae
xlat
mov
or
and
cmp
sbb
mov
outsb
lods
and
mov
pushl
test
jne
sub
leave
or
rorl
xchg
mov
pop
lahf
mov
mov
or
adc
pop
ljmp
push
jns
xchg
je
aam
imul
adc
sub
and
and
loope
push
and
inc
loopne
and
add
push
push
mov
imul
mov
das
mov
pop
dec
inc
or
xchg
and
and
and
xchg
sbb
push
inc
cs
pop
data16
inc
cmp
jg
mulb
pushf
push
arpl
and
push
xorb
imul
test
and
or
in
jmp
cwtl
pop
test
aaa
loopne
movsb
push
not
sub
addb
jo
pop
mov
push
repz
test
int
insb
unpckhps
movsb
sub
mov
mov
or
inc
sub
testl
ret
clc
cmp
gs
xor
pop
test
mov
adc
sbb
push
cmp
loopne
push
add
mov
imul
fcmovbe
test
cmp
rolb
push
xor
fimull
mov
jnp
imul
dec
jb
lret
test
cmp
ret
rolb
lods
daa
cmp
cltd
subb
xor
add
adc
adc
cmpsl
inc
into
xchg
and
pushf
sub
push
mov
xor
xchg
pop
sahf
mov
pusha
push
iret
adc
outsb
adc
jnp
je
sbb
or
insb
or
test
shlb
mov
sub
xchg
test
shlb
xchg
mov
push
add
jno
daa
loopne
sbb
push
push
push
popa
sbb
lock
mov
lea
xchg
pop
or
or
adc
xchg
xor
xchg
xchg
inc
pop
jmp
mov
adc
xchg
fbld
movsl
inc
jae
std
int
add
das
pop
pop
mov
push
or
popa
or
test
and
test
cmpsb
repz
add
scas
movb
pop
and
ja
ss
adc
xchg
outsl
in
push
and
iret
jb
fimull
arpl
int
mov
add
ret
iret
lea
xchg
inc
push
hlt
das
enter
and
push
insl
sub
rorb
adc
or
dec
mov
and
mov
add
push
ja
xchg
mov
ret
mov
sub
push
subl
testb
or
add
and
cs
push
lcall
loope
ss
push
cs
test
sti
sahf
rolb
push
cmp
mov
pop
jmp
push
outsb
cmpsl
pushf
sbb
xor
add
iret
aam
lret
adc
and
into
sbb
and
mov
add
xchg
mov
mov
add
cmpsl
nop
xor
sub
xor
xor
test
cmc
ds
mov
sub
sbb
sbb
sub
push
insb
mov
test
jb
aaa
repnz
mov
enter
xor
sub
fisubs
mov
push
or
popa
jle
add
das
lcall
imul
int3
outsb
mov
test
int
xchg
loopne
icebp
cs
adc
dec
shll
and
rorl
dec
sbb
add
out
xor
mov
xor
lcall
inc
push
addr16
repnz
js
insl
mov
dec
imul
push
stos
mov
int
push
xor
and
out
cmp
test
cmp
or
ds
sub
dec
dec
sub
xchg
push
jo
sbb
divb
ror
cmp
sbb
xchg
sbb
inc
pusha
xchg
sbb
xchg
test
cld
sbb
pusha
orb
dec
mov
in
aaa
sbb
inc
jb
inc
fs
roll
and
in
leave
xchg
sbb
cmp
and
sbb
xchg
sbb
lods
fmuls
leave
xchg
clc
cmp
dec
mov
inc
pusha
js
in
mov
dec
call
inc
jb
push
cmp
mov
sbb
cmp
dec
clc
pushf
pushf
sbb
aas
cmp
inc
and
push
jl
xchg
inc
lea
aaa
push
pop
test
xor
sub
adc
sti
mov
jo
and
and
adc
negl
cmp
pop
js
add
cs
movsb
lcall
xor
or
imul
data16
insb
dec
addr16
adc
test
loop
jb
adcl
mov
ret
outsl
jo
push
add
pop
mov
and
jne
jg
and
sbb
popl
out
mov
cmp
or
add
push
dec
mov
mov
jns
pop
stos
outsb
jae
mov
sbb
pop
test
or
imul
out
add
js
je
insl
sbb
xchg
or
push
sub
xor
push
lods
jb
inc
and
addr16
dec
push
push
xchg
xchg
xor
pushf
subb
xchg
or
jo
xchg
cmpsl
adc
fcoml
fidivrl
jg
or
hlt
jne
mov
je
xlat
enterw
mov
aas
inc
daa
dec
inc
mov
ss
push
sub
xor
and
xchg
dec
daa
call
jne
fs
mov
fnsave
inc
imul
sbb
xchg
mov
ret
jbe
outsb
les
ja
aas
outsb
add
popf
in
mov
xor
or
repz
aas
push
and
lods
ret
cmp
and
push
xchg
lods
popf
or
aaa
mov
xor
pusha
imul
and
sub
mov
jo
adc
sbb
nop
nop
ja
jmp
inc
pop
xorb
int3
aas
and
sbb
loope
pop
push
lock
cmove
fisttpl
jo
cmp
and
sub
xor
pusha
jne
adc
fs
and
adc
pop
addr16
scas
data16
mov
imul
push
daa
incb
mov
xchg
test
sbb
packssdw
mov
mov
clc
and
aad
push
adc
gs
mov
sbb
adc
pop
roll
push
movsb
jb
jnp
insb
adc
popa
fwait
sbbb
mov
loopne
xor
mov
xor
xchg
arpl
mov
adc
push
or
push
movsl
addr16
mov
sbb
push
imul
and
sbb
and
adc
popw
cmp
ret
pusha
fs
or
sbb
sbb
push
pusha
cmpsw
jae
mov
dec
and
lds
mov
sub
mov
adc
rcll
mov
add
add
push
sub
sub
aad
push
insb
lcall
ljmp
mov
data16
loopne
daa
sub
mov
jg
cld
and
pop
push
or
lea
ret
divb
and
xchg
push
jge
xchg
addr16
movb
rorb
push
fsub
xchg
imul
xchg
pop
mov
cmc
and
sub
cmc
sbbb
fmuls
in
or
popl
lahf
ds
ret
dec
xor
xchg
ja
paddusw
int3
xor
int3
ficomps
gs
hlt
or
movsl
mov
inc
add
shlb
lock
xor
or
inc
mul
push
mov
popa
movsb
je
lea
test
call
xor
repz
push
mov
and
and
or
fidivrs
je
cs
mov
adc
das
stos
xorb
and
and
xlat
out
inc
pushw
in
sbb
lods
mov
xor
adc
and
fwait
inc
or
das
xor
sub
lds
jbe
stos
pop
inc
imul
push
test
mov
fcoml
add
idivl
ja
add
mov
repnz
push
fsubs
adc
push
rol
in
das
jmp
cmp
mov
inc
and
and
mov
inc
xchg
pop
mov
or
add
ret
or
pop
xchg
int
dec
push
loopne
lret
es
inc
push
fsubr
pop
nop
gs
fistps
fdivs
inc
xchg
fs
cmp
inc
or
jne
cmp
inc
adc
adc
in
mov
lds
push
xchg
fiaddl
add
sub
jns
lods
arpl
mov
push
orb
sbb
jo
or
jb
or
cmpsl
ljmp
das
push
stos
shll
dec
xor
jb
ja
sub
add
add
add
adc
adc
inc
dec
mov
adc
pop
or
cmp
xor
adc
mov
fwait
or
pop
xchg
in
dec
inc
rcrl
hlt
in
mov
sub
adc
es
adc
mov
push
adc
xor
pop
shrb
loop
ret
jo
push
scas
je
cs
test
cs
xlat
cmpsb
inc
gs
push
daa
xchg
mov
mov
or
dec
fidivs
mov
test
pusha
pop
rcl
inc
xchg
push
push
dec
jno
jecxz
xchg
ret
inc
and
add
jecxz
in
lret
pop
repz
sub
add
test
dec
test
test
push
gs
mov
popa
cmp
test
lcall
rcrb
cmpsb
in
pop
aad
shlb
out
fdivrl
and
sbb
add
push
aam
push
nop
add
pop
shl
mov
xchg
movsb
pop
xchg
inc
shl
in
mov
cmp
dec
mov
fwait
cmp
lret
int3
mov
adc
addb
inc
dec
js
push
outsb
out
inc
pop
push
rclb
mov
or
sarb
jge
loopne
xchg
in
cwtl
enter
push
xchg
and
ror
andl
sub
enter
xchg
mov
xchg
in
xchg
stc
and
add
repnz
mov
push
ret
add
test
pop
mov
and
and
stos
and
lahf
testb
adc
les
or
addl
les
loopne
in
xchg
insl
sarl
loopne
jge
stos
cmp
shl
add
and
sbb
and
push
cmp
pop
sbb
and
inc
sbb
cwtl
cmp
shrb
add
jns
or
or
mov
inc
and
bound
and
cvtps2pi
dec
sub
imul
mov
dec
ret
add
dec
shl
clc
out
mov
decl
push
dec
sub
jl
inc
mov
iret
adc
mov
cmpsl
mov
filds
stos
mov
movb
jl
jns,pt
pop
jno
add
adc
pop
lock
mov
mov
push
adc
inc
mov
xchg
test
mov
push
scas
test
ret
pop
add
loopne
inc
int3
push
pop
mov
mov
cmp
lcall
iret
push
cmc
mov
call
xchg
lea
cmp
adc
jb
xchg
data16
adc
sbb
xchg
and
daa
jne
xor
rcrl
addr16
push
and
xor
dec
xor
push
xor
orl
xchg
lods
mov
add
mov
rcrb
addr16
aaa
add
adc
mov
icebp
and
int3
jo
les
enter
push
sbb
adc
in
in
cmp
es
xor
movzbl
cli
cld
jecxz
sub
sbbb
jno
imul
fcompl
push
pop
test
das
dec
outsl
push
dec
add
pop
mov
or
nop
dec
sub
fdivr
push
or
push
push
mov
dec
aaa
imul
pop
repz
jl
adc
sub
xor
jmp
rorb
adc
fdivl
jo
or
lods
mov
les
mov
ljmp
out
sub
hlt
sub
jb
and
and
leave
enter
loopne
enter
adc
adc
leave
mov
addr16
outsl
push
push
les
addr16
dec
sbb
test
dec
and
and
fs
sti
dec
dec
jmp
sbb
adcb
mov
je
pop
pop
dec
pop
adc
lret
aaa
inc
xor
xchg
std
jnp
lds
add
add
sahf
fcompl
sbb
push
roll
test
adc
sub
rorl
sub
addb
adc
sub
mov
adc
push
retw
dec
lock
ficompl
pop
mov
inc
xchg
xor
lds
js
mov
sahf
adc
mov
das
aad
push
mov
clc
xchg
or
lret
in
or
dec
addb
sti
dec
mov
mov
jns
cmp
add
out
mov
sti
add
pusha
push
and
stos
call
mov
fcoms
sbbl
mov
cmp
xor
stc
or
sub
xor
or
loope
or
nopl
scas
jp
hlt
rcrl
cwtl
movsb
jecxz
test
cmp
or
pop
mov
dec
mov
adc
push
dec
pop
xchg
add
or
inc
lods
inc
add
test
xor
ljmp
inc
cli
add
jp
cmp
cmp
insb
pusha
and
xlat
das
xlat
push
dec
or
mov
and
adc
movl
sub
ret
add
stc
sub
jns
sbbb
sgdtl
mov
iret
jnp
mov
jecxz
pop
aas
mov
xlat
inc
cmpsb
rcll
mov
outsl
lds
jnp
into
ret
pop
rcrl
addr16
mov
adc
xchg
push
or
and
test
insl
arpl
in
pop
xorl
inc
scas
aad
int
add
enter
dec
hlt
clc
clc
xor
fstps
sbb
or
mov
inc
xor
cmp
in
push
daa
or
add
jnp
das
nop
orl
adc
pusha
mov
and
jg
dec
daa
mov
mov
pop
inc
cmpsl
sub
in
jno
lock
jbe
imul
inc
jmp
fs
rorb
fstpt
or
push
mov
sbb
or
notb
adc
adc
pop
ldmxcsr
stos
dec
pop
out
sub
jne
mov
movb
inc
dec
into
xchg
and
push
inc
sarb
add
sbb
cmp
sbb
and
nop
inc
push
cmp
inc
nop
inc
push
sbb
inc
push
sbb
push
leave
push
fs
pop
pop
pop
mov
adc
mov
std
loope
mov
mov
mov
or
adc
inc
sbb
sbb
fs
adc
sbb
and
cmp
sbb
cmp
inc
mov
icebp
lret
and
sbb
sub
xor
lret
and
push
or
xchg
fcomps
icebp
xor
call
add
inc
scas
push
dec
das
fstpl
mov
cmp
or
ljmp
inc
xor
les
mov
test
incb
push
add
push
add
sub
lgs
xchg
scas
pop
adc
shrl
notl
sub
or
pop
enter
int3
adc
cmp
and
data16
imul
add
jmp
push
jae
insb
pop
outsb
mov
dec
mov
cmp
out
sub
mov
adc
adcb
lods
std
jge
subl
xor
pop
mov
or
rcr
pop
push
sbb
or
xor
sahf
sbb
jl
xor
xchg
test
adc
push
mov
mov
sub
es
pop
lods
jns
xchg
sub
xchg
xchg
sub
mov
pop
pop
or
mov
push
movsb
sbb
xchg
jl
in
or
pop
push
pop
cmp
dec
imul
inc
cmpsl
xor
cmp
sbb
pop
jmp
mov
test
ds
sbb
add
fs
sbb
or
dec
jo
outsb
sub
xor
aam
push
popf
push
mov
add
sbb
pop
inc
outsb
out
cmp
imul
xchg
mov
or
mov
sbbb
or
popa
jecxz
pop
xchg
or
cmp
dec
mov
sbb
and
leave
es
or
pop
and
movsl
push
or
cmpsb
jbe
shrb
add
jno
inc
dec
imul
mov
setge
lds
xor
xor
jo
jbe
insb
aad
inc
cs
lods
xchg
outsb
xlat
adc
call
adc
inc
mov
mov
pusha
adc
inc
bound
imul
test
cmpxchg
cmp
add
xchg
add
pop
cmp
dec
lret
add
addb
cmpsl
pop
push
nop
insb
sbb
dec
push
add
add
or
into
push
iret
sbb
push
push
les
adc
mov
lcall
das
pcmpgtd
addl
sub
jb
bound
push
push
sbb
dec
push
ja
subl
and
inc
insl
cs
stos
sbb
test
sub
nop
pop
add
mov
mov
dec
outsl
faddl
clc
push
sbb
test
mov
and
inc
cmp
lods
test
dec
pop
pusha
sub
push
push
or
add
inc
shlb
test
enter
jo
push
add
add
sbb
fcmovb
idivl
fisttps
jp
insb
insb
popa
das
xor
and
jp
sbb
rol
out
cmp
push
push
mov
push
adc
inc
sbb
sgdtl
icebp
cmp
orb
or
in
cmpsl
ret
lock
jnp
pop
or
mov
ret
dec
int3
das
std
insl
insb
xchg
dec
or
hlt
aad
and
pop
ja
pop
mov
xor
mov
xchg
ja
xor
mov
sbb
jae
adc
cmpl
test
mov
pop
push
mov
dec
popf
jbe
sub
test
fnstcw
or
gs
adc
pop
mov
inc
cmp
push
push
call
xor
sbb
sbb
add
mov
jmp
pop
jbe
pop
std
xor
push
add
test
add
test
enter
mov
add
jns
mov
push
push
mov
or
pop
dec
hlt
lret
mov
pop
outsl
inc
test
add
mov
add
sub
fdivrp
xchg
and
push
sub
xchg
mov
stos
xchg
inc
addr16
insl
pop
and
nop
xor
jbe
mov
enter
mov
insl
and
and
inc
pop
push
dec
scas
nop
mov
push
or
fadds
fcomps
lcall
imul
lods
nop
shlb
in
push
push
loopne
les
call
sbb
sbb
add
insl
cmp
jae
xchg
mov
jb
sbb
nop
or
push
cmp
and
call
inc
xor
inc
shlb
dec
imul
shrw
icebp
mov
sub
lock
ficoms
iret
cmp
xor
mov
enter
cmp
dec
cmc
cmpb
inc
fdiv
add
insl
pop
rclb
lret
imul
das
mulb
dec
out
popf
xor
movsb
movsb
adc
dec
adc
jae
xor
xchg
push
mov
fists
enter
xchg
mov
jb
pushf
lods
pushf
fldcw
pop
sbb
jg
imul
mov
pop
jg
pop
je
inc
mov
arpl
pop
xchg
and
sbb
mov
sub
das
add
xor
mov
xchg
or
mov
in
or
imul
fs
sub
xor
test
les
add
mov
test
cmp
mov
test
flds
test
into
arpl
xchg
cmp
hlt
sbb
adc
push
mov
mov
subb
addl
pop
lret
push
repnz
lea
xchg
xchg
je
inc
xchg
fadd
dec
iret
lea
jecxz
out
bound
pop
es
jo
jb
and
mov
or
push
cmp
paddusb
adcb
adc
mov
inc
push
add
push
and
mov
mov
js
pop
inc
jo
int
leave
enter
rcrl
pop
orb
pop
pusha
cwtl
cwtl
andb
js
adc
sarb
mov
mov
sahf
sub
sub
js
aam
loope
hlt
mov
sti
xor
inc
mov
sbb
sti
push
sub
enter
es
or
push
and
add
lock
inc
enter
dec
bnd
rorl
push
outsb
out
pop
outsl
adc
inc
popa
dec
sar
pop
mov
pop
test
mov
mov
and
cmp
dec
dec
cmpl
push
sub
leave
repz
pop
cmp
xor
and
add
imulb
lock
or
sbb
sub
pop
loopne
mov
fwait
jne
rcrb
lea
xchg
xchg
xchg
mov
lods
icebp
xchg
push
pushf
add
push
adc
xchg
push
fs
cli
push
loopne
pop
sbb
cmp
sub
push
cwtl
jo
jmp
mov
cmpsb
adc
cmovnp
or
call
pusha
xor
into
xor
pop
sbb
mov
js
add
push
or
jmp
xchg
nop
mov
testb
les
jge
pop
mov
or
sbb
cmp
jl
add
sub
int
shrb
testl
sbb
imul
subb
or
sub
push
rorl
ret
and
sbb
mov
inc
in
out
jl
xor
xchg
mov
out
sub
nop
pop
inc
ficomps
sbb
sub
sub
push
xchg
inc
mov
hlt
mov
pop
inc
push
jne
and
mov
nop
push
jecxz
test
inc
cld
and
mov
add
and
cmp
sbb
sbb
outsl
cmp
push
sbb
dec
push
sub
adc
and
outsl
dec
dec
xor
bound
pop
jne
movl
pop
je
jp
push
mov
ffreep
imul
fwait
adc
mov
push
push
inc
and
adc
es
addr16
sbb
lds
insb
mov
imul
cmpsl
push
rorl
xchg
repz
lock
fisttpl
mov
sbb
inc
pop
dec
sbb
test
cmp
or
and
adc
cltd
sbb
test
sub
inc
cltd
adc
mov
cmpsb
xor
push
addl
jo
and
adc
adc
add
loop
pop
mov
shlb
punpcklbw
sbb
push
daa
popf
mov
pop
shlb
sub
jmp
dec
cmp
enter
cli
inc
cmpsb
mov
das
mov
lea
es
xor
icebp
or
dec
adc
stos
outsl
int3
xor
push
dec
or
or
jns
sub
add
in
push
jo
and
adc
mov
scas
outsl
clc
mov
jmp
cltd
popa
iret
cltd
inc
pop
jo
or
enter
inc
daa
mov
gs
adc
and
inc
lock
mov
in
and
inc
fildll
lea
mov
imul
jno
rcl
inc
inc
and
insl
jl
cs
inc
jecxz
das
sub
ss
inc
arpl
pop
jne
ja
push
mov
pop
sub
lods
dec
aaa
push
sbb
push
inc
adc
lea
jo
test
stos
jnp
and
ret
bound
jae
pushl
add
and
mov
in
push
cmpsl
or
push
xorb
sub
in
lods
fwait
dec
orb
test
nop
and
and
xchg
pop
dec
inc
mov
sbb
mov
pop
dec
das
sub
stos
test
and
or
push
scas
scas
test
addr16
paddsb
inc
push
inc
add
dec
cmp
add
pop
push
inc
sub
add
inc
inc
push
sub
cmp
cmp
sbb
iret
pop
dec
push
dec
dec
inc
inc
mov
dec
out
loope,pn
pop
sub
add
push
dec
dec
push
inc
addr16
stc
or
pop
inc
inc
inc
sub
inc
out
test
jo
jo
dec
mov
scas
adc
lcall
pop
pop
pop
pop
pop
dec
push
sbb
cmp
cmp
mov
xchg
pop
jo
mov
cmpsb
sarb
mov
jns
push
xor
add
mov
fildl
inc
nop
repz
inc
inc
or
sub
pop
fsubrs
sbb
inc
xor
js
add
je
lods
xor
mov
sbb
lock
repnz
loopne
mov
or
lock
ret
in
adc
push
adcb
mov
popa
rcrb
orl
add
imul
and
jb
and
add
push
shll
enter
sub
ret
xor
call
jecxz
or
inc
ret
icebp
jae
xchg
pop
fwait
std
in
in
add
mov
sbb
dec
mov
fs
fmuls
cmpl
fiadds
mov
out
cwtl
xor
inc
mov
inc
arpl
mov
arpl
sub
loopne
add
sbb
outsb
iret
cmp
push
inc
and
fmull
xlat
popa
scas
or
dec
aaa
sub
sarb
loop
pop
in
je
adc
imul
jbe
inc
adc
mov
mov
fwait
movsl
insl
xor
jmp
fdivs
mov
outsb
fcomp
and
jo
das
pmuludq
les
addr16
ljmp
sub
mov
mov
nop
aam
add
das
or
add
icebp
xchg
insl
lret
cld
push
jne
and
repz
xor
nop
add
sub
pushf
bound
xchg
jne
lret
mov
push
xchg
adc
call
sarb
andl
xchg
mov
xor
pop
jno
adc
mov
mov
adc
dec
cmpsb
insl
mov
fmull
js
fs
mov
pop
arpl
orb
xchg
adc
lock
cs
shll
shll
cmpsb
xor
push
sti
add
mov
outsl
cld
test
mov
mov
cs
test
pcmpeqd
daa
push
or
push
ja
jbe
scas
ja
sub
push
sar
ds
xchg
das
pop
cmpsl
jo
jae
outsb
outsl
push
incl
arpl
and
das
arpl
outsb
xor
adc
outsb
cs
inc
jae
enter
jo
and
jns
fmuls
and
jg
dec
pop
outsl
inc
je
and
insb
pop
arpl
gs
imul
or
xchg
fldcw
pop
cmp
dec
arpl
sarb
inc
fwait
pop
mov
dec
cli
push
fwait
pop
jns
and
inc
dec
pop
lahf
inc
cmp
out
ja
cltd
push
push
dec
and
mov
inc
jbe
aas
jno
jns
push
xchg
and
js
das
fs
arpl
jnp
sbb
dec
movsl
cmp
pop
fs
xchg
je
in
sbb
ja
jo
mov
adc
cs
loope
cmp
repnz
add
jl
adc
idiv
push
jns
insb
add
mov
push
push
sbb
int
mov
or
das
es
add
jbe
sub
pop
nop
mov
inc
inc
xor
incl
ss
sub
sub
sub
sub
xor
xor
cmp
cmp
popa
sbb
push
dec
movsb
je
sbb
jp
add
and
or
jnp
adc
enter
test
jbe
add
mov
inc
hlt
out
jb
inc
repnz
lock
bound
inc
in
and
dec
push
or
sub
push
push
xchg
jo
cmp
jnp
pop
inc
mov
mov
popa
dec
out
inc
or
sbb
inc
insl
push
cmp
xchg
and
xchg
mov
jo
add
mov
jl
xor
ret
push
movsl
pop
mov
jae
mov
push
fimuls
aad
jno
pusha
adc
fwait
xor
cmpl
adc
rorb
pop
xchg
add
mov
adc
es
cmp
adc
adc
dec
xor
cmovge
pop
mov
scas
sarl
dec
pop
jl
jl
in
and
jl
pop
jno
inc
ss
mov
add
nop
sbb
mov
roll
popa
insl
add
lea
add
mov
gs
xchg
in
mov
xor
clc
aam
mov
lock
jle
sub
nop
cmp
sub
jle
mov
add
push
add
rcrb
inc
push
xchg
inc
int3
adc
or
mov
nop
inc
push
mov
mov
xchg
add
mov
xchg
inc
pop
inc
jge
inc
aam
aad
push
and
cmp
loopne
sbb
outsl
test
sarb
xchg
test
lock
fwait
rorb
pop
hlt
and
jl
jle
add
jmp
mov
or
mov
test
aaa
gs
pop
mov
add
mov
sbb
enter
adc
mov
push
add
or
insb
pop
xorb
in
sbb
test
das
xor
loopne
mov
push
push
xchg
sbb
dec
dec
rclb
bound
dec
aam
and
enter
aam
nop
or
int3
pop
int3
mov
fs
xchg
inc
int3
les
nop
gs
pop
les
jmp
mov
flds
mov
xor
clc
add
jb
clc
cltd
fadds
clc
mov
or
mov
pop
xchg
mov
sbb
adc
adc
pop
dec
adc
iret
push
push
add
gs
pusha
pop
push
insb
mov
mov
xchg
sub
cmp
andb
inc
mov
test
ret
mov
movsb
cwtl
pop
jb
lret
dec
mov
jb
cmp
pushf
mov
leave
test
and
cwtl
mov
add
nop
dec
jl
das
pop
mov
adcb
mov
lret
and
xchg
adc
mov
shr
test
fwait
pop
enter
hlt
insb
inc
inc
push
adc
mov
insb
and
xor
sub
xor
pop
jb
pop
sub
pop
pop
add
cmc
movsl
push
ret
pop
adc
packuswb
push
add
stc
pop
push
or
pop
fs
sbb
arpl
push
jae
insl
fimull
popa
and
jae
inc
push
sub
jae
data16
fstp
mov
dec
bound
inc
arpl
gs
aas
inc
outsl
inc
mov
sbb
adc
add
adc
test
insb
and
cmp
dec
push
cmp
cmp
push
xor
xor
cmp
iret
xor
aas
jae
popa
inc
jb
aas
rolb
addr16
add
mov
popa
je
mov
mov
es
imul
and
in
das
xor
out
cmpsb
or
ja
xor
xor
fbstp
out
in
in
xchg
sub
or
adc
sbb
dec
or
enter
mov
imul
adc
test
add
push
fidivrl
add
enter
push
sub
adcb
das
or
or
in
ja
cmp
or
arpl
add
mov
xchg
sti
dec
pop
mov
mov
inc
push
mov
imul
mov
add
push
aas
xor
dec
sbb
and
pushf
test
icebp
cwtl
les
cmp
mov
insb
add
add
dec
ret
es
syscall
ss
popa
push
or
scas
int
mov
jno
fwait
ds
loop
add
push
insl
ss
les
xorb
xor
fistpl
mov
mov
mov
jp
in
xchg
mov
out
mov
shr
les
clc
sub
or
inc
fcompl
xchg
inc
dec
push
scas
xchg
insl
or
xchg
push
and
dec
dec
imul
das
imul
loope
lock
insb
outsl
ret
jb
pop
test
sub
xchg
loopne
xor
mov
mov
push
test
nop
call
add
mov
pusha
in
jns
lods
or
pusha
pop
inc
dec
push
sub
in
inc
outsb
sub
push
pop
in
nop
es
jmp
add
add
push
jecxz
and
imul
jge
jle
imul
push
popa
bound
or
mov
cltd
insb
and
int3
adc
jbe
cmp
pop
ja
add
inc
or
fcoms
cmp
add
add
pop
mov
sbb
sub
sub
xor
ss
inc
outsl
adc
and
test
scas
stos
ret
loopne
cmc
in
sbb
cmc
cwtl
mov
jecxz
xchg
jecxz
das
mov
mov
inc
sbb
pop
lods
inc
ret
inc
sarl
and
in
sub
sub
dec
fsub
pop
je
popa
in
add
and
sbb
ror
jae
pusha
push
dec
sarb
enter
aam
enter
dec
enter
xor
xor
leave
leave
rolb
mov
pop
mov
out
mov
add
sub
stos
int
pop
clc
dec
ret
jle
lock
jno
es
lods
cs
and
pop
inc
xor
imul
test
psllw
sbb
jb
lret
pop
adc
push
jge
push
movsb
adc
andl
xor
ret
mov
xchg
push
dec
cmp
cmpsl
test
or
xor
gs
push
pop
adc
leave
xchg
aas
xor
or
sub
js
dec
pop
inc
aas
or
push
test
xchg
fildl
mov
cs
push
xor
inc
and
mov
xor
push
addb
sub
ret
mov
in
enter
mov
jp
call
mov
loopne
es
mov
sbb
sbb
sbb
fsubs
fs
addr16
xor
lods
inc
sahf
add
cmp
rorb
xchg
lock
jecxz
and
adc
je
nop
push
push
mov
mov
in
adc
push
and
pop
pusha
cld
lea
pop
data16
gs
jo
sub
xor
mov
aaa
sbb
mov
dec
pop
lahf
mov
cmp
push
jb
mov
popa
push
mov
test
int
imul
inc
xchg
add
xchg
sbb
enter
call
and
lds
inc
dec
jle
fsub
inc
rclb
push
xchg
pop
inc
pop
inc
jle
xchg
push
xor
inc
xchg
je
adc
and
jb
nop
aam
xchg
or
inc
addb
push
adc
sti
add
addr16
jne
fstl
sub
pushf
hlt
xchg
test
arpl
adc
pop
lock
fs
xchg
dec
in
mov
mov
in
int3
jno
nop
inc
call
pop
mov
ret
push
enter
adcb
mov
xchg
push
pop
push
mov
fidivs
and
pop
cmpsb
or
ret
sbb
xchg
and
lea
push
cmp
hlt
sbb
jns
lock
fwait
and
insb
jns
loope
test
and
pop
cmp
lods
inc
daa
test
cmpl
loopne
imul
fs
lock
out
aam
rcrb
shrb
adc
fidivrl
xchg
sub
xor
and
imull
daa
das
push
push
cs
shll
sbb
cld
outsb
inc
popa
jbe
pop
jns
mov
fwait
imul
outsl
outsl
jg
pop
jne
insl
lahf
pop
pop
add
inc
mov
xchg
sbb
clc
popf
or
adc
popf
and
mov
xchg
imul
pop
jge
loopne
mov
in
xor
pop
fcoms
mov
pop
popf
pusha
sub
pop
ds
xchg
adc
and
popf
js
add
in
dec
dec
fimuls
jge
xchg
loope
lcall
orl
dec
push
jns
ror
dec
push
sbb
push
jns
mov
push
jns
mov
and
mov
sbb
dec
push
sbb
mov
xor
xchg
and
lods
test
jns
and
jge
movsb
leave
adc
mov
mov
inc
sahf
out
cwtl
xchg
cwtl
xchg
inc
xchg
cwtl
lods
xchg
xchg
inc
sahf
out
nop
rclb
rorb
mov
mov
lock
and
add
sbbb
into
sbbl
or
push
shl
and
mov
fs
je
nop
xchg
or
shrl
add
fwait
daa
adc
enter
push
js
inc
or
adc
sbb
mov
leave
test
mov
pusha
fwait
mov
fs
push
pop
pop
pop
fs
push
sbb
pop
pop
cltd
nop
inc
scas
fcoms
inc
push
cmp
push
lds
sub
leave
test
dec
dec
mov
sbb
mov
leave
test
sub
inc
and
enter
inc
nop
inc
scas
ss
fwait
push
cmp
push
cmp
sub
inc
dec
es
xor
fs
nop
xor
sbb
sbb
movsb
sub
cmpl
and
sub
and
sbbl
push
xor
and
sbb
sbb
adc
sbb
cmp
push
sbb
adc
adc
scas
adc
mov
ljmp
mov
add
xchg
push
popa
and
arpl
adc
and
popa
sbb
insb
insb
ljmp
nop
pop
es
dec
inc
and
inc
test
insl
orl
pusha
inc
outsl
jo
and
xchg
fisttpl
jae
sub
xchg
pusha
dec
sub
lahf
fiaddl
insl
xlat
jb
xlat
jns
mov
and
and
cs
insb
sub
and
inc
or
stos
es
and
jp
add
sahf
sbb
cmp
or
insl
jo
inc
in
mov
jg
leave
arpl
mov
out
nop
pop
fcmovnb
and
faddl
outsb
imul
pcmpgtw
xchg
rorl
je
sbb
push
gs
gs
ja
adc
imul
or
out
gs
and
and
ret
pop
pop
sub
jne
iret
and
lds
ja
and
pop
mov
fs
sbb
imul
mov
push
popa
ja
add
inc
sarl
adc
data16
popl
cmc
sub
pop
fidivl
addr16
addr16
daa
and
mov
pop
out
movsl
outsl
jns
sarl
dec
outsb
push
out
out
inc
dec
pop
jae
arpl
sub
outsl
and
fdivs
fstps
jo
jo
xor
pusha
pop
pop
pusha
lahf
and
lea
cs
mov
sub
je
dec
imul
hlt
out
and
scas
insb
outsl
je
imul
jbe
iret
cmp
mov
sub
in
push
xor
jno
fcoml
mov
mov
mov
xor
arpl
pop
les
stos
xchg
push
and
shrb
dec
xor
mov
sbb
adc
push
pop
adc
lds
or
shr
ja
les
outsl
arpl
push
jbe
aaa
call
adc
in
iret
fimuls
push
mov
jge
xchg
lcall
jb
mov
loope
enter
add
repz
push
mov
in
and
in
in
movsb
add
scas
mov
sub
addr16
lahf
xchg
mov
inc
jge
js
dec
sub
jne
jne
outsb
stos
xor
leave
adc
dec
push
xchg
add
sub
pop
dec
pop
movsl
adc
pop
leave
add
dec
xchg
pop
lods
adc
icebp
cmpsb
jno
fsubs
test
lods
stos
and
sub
ljmp
in
fidivrl
in
clc
adcl
or
sbb
clc
cld
xchg
or
push
sub
movsl
sub
cmpsb
push
adc
dec
js
stos
and
sub
scas
cmc
pop
imul
mov
jg
push
inc
arpl
jne
arpl
je
jns
cmp
fisubrs
jno
xlat
or
jecxz
je
mov
stos
cwtl
pop
mull
sbb
cmpsl
cld
cmpsl
inc
enter
test
in
inc
pop
leave
and
sub
pop
cmpsl
out
pop
add
dec
adc
cmp
jne
push
cmp
and
fs
mov
xchg
or
nop
cmp
js
or
sbb
dec
push
and
lock
ss
imull
test
repz
adc
pop
jo
int
mov
mov
es
je
and
in
sub
scas
adc
pop
inc
scas
out
aaa
fxch
gs
fucom
stos
add
inc
jbe
adc
xor
add
mov
push
fmull
roll
mov
roll
test
and
jo
or
pop
mov
es
arpl
mov
cmpsl
jno
inc
xlat
mov
inc
insb
inc
inc
jne
rcrb
adc
aas
repnz
stos
enter
adc
sbb
xorl
cmp
icebp
adc
fs
stos
push
jne
push
ficoml
mov
lret
sbb
aas
stos
hlt
andl
cmp
xlat
rorb
add
outsb
dec
mov
outsl
lods
inc
inc
lods
repnz
lods
pop
or
nop
pop
lods
jo
sub
push
add
scas
push
lods
dec
scas
add
xor
pop
outsl
xchg
rolb
imul
add
imul
mov
sub
call
in
imul
or
je
sub
sub
inc
scas
inc
dec
push
bound
scas
lods
and
mov
cmp
adc
sbb
cmp
popa
aam
shlb
and
pop
rcr
jecxz
fimull
fs
add
dec
in
scas
mov
sub
jl
adc
pop
jo
push
scas
mov
or
cmp
or
inc
inc
or
inc
pop
and
push
jb
scas
into
test
or
movlps
or
fmull
xor
xorb
ljmp
scas
adc
jbe
lahf
ret
mov
cmp
mov
inc
clc
or
mov
and
inc
sub
and
jge
in
scas
mov
xchg
cmp
je
jl
inc
push
dec
clc
scas
aad
dec
sub
mov
pop
and
add
adc
cs
divl
adc
add
add
cmpsl
nop
xchg
mov
mov
pop
and
inc
leave
sub
cmp
or
mov
lcall
loop
jmp
push
or
cmp
insl
adc
daa
bound
sub
adc
xorl
les
js
pop
data16
hlt
jbe
mov
pop
and
mov
mov
icebp
mov
cmp
daa
int
pop
clc
mov
inc
stos
push
fildl
daa
push
loope
je
ret
mov
mov
in
and
push
and
sbb
pop
sub
dec
and
scas
nop
add
mov
add
xchg
push
fbld
dec
cmpsl
sarb
jb
inc
dec
add
mov
nop
xchg
cmp
cltd
mov
mov
inc
push
ret
sub
xchg
pushf
mov
dec
and
xchg
nop
shll
clc
nop
push
or
push
xchg
mov
inc
or
or
sub
into
push
or
ja
push
shl
mov
stos
mov
push
sub
xor
imul
mov
or
inc
ds
call
inc
ds
pop
sub
mov
arpl
push
xchg
icebp
popa
call
faddl
pop
dec
test
and
sbb
jecxz
jae
dec
add
call
adc
fdivr
dec
aam
movsb
es
xor
int3
mov
hlt
cmp
xor
jmp
aas
rolb
or
aam
scas
adc
aaa
stc
insb
std
mov
pop
in
fwait
cmp
dec
inc
cmpsb
nop
aaa
mov
fcoml
adc
sbb
cmp
xor
lods
cmpsl
cld
mov
mov
cmp
pushw
add
xchg
mov
inc
mov
xchg
sbb
insb
mov
fdivrs
push
push
fs
dec
test
adc
add
lahf
es
js
mov
lcall
add
aaa
cmpl
lea
xchg
push
or
xchg
mov
lea
adc
sbb
and
in
push
jmp
std
push
fs
mov
test
xchg
push
fs
xchg
cwtl
cwtl
or
inc
inc
stos
nop
adc
gs
fistpl
int
mov
lea
fldl
inc
push
cltd
nop
mov
test
adcb
jl
inc
push
cltd
js
js
xchg
addr16
add
je
cld
mov
je
mov
jo
in
test
insb
mov
je
xor
push
xchg
or
nop
fs
or
nop
push
pop
sbb
or
jmp
nop
pop
mov
mov
fistps
dec
fstps
sbb
mov
push
call
mov
adc
nop
mov
fidivl
jnp
dec
mov
mov
jne
pop
subl
add
or
and
notl
add
xchg
add
sbb
push
lock
btrl
and
outsb
arpl
dec
inc
rolb
pop
bound
dec
dec
pushaw
push
aaa
jmp
add
ss
iret
mov
cli
pushw
add
and
cmc
mov
cmp
shlb
inc
das
xor
shlb
xchg
inc
ss
test
and
pandn
mov
cs
xlat
test
inc
insl
jne
ja
push
or
fisubrl
imul
neg
shlb
adc
jbe
add
mov
leave
and
sub
lcall
popa
addl
scas
xor
int
incl
add
jo
daa
pop
roll
dec
or
inc
mov
and
jns
lock
rcrb
push
jns
int3
jmp
push
fdivl
xor
xchg
mov
lods
sub
movsb
xor
mov
pushf
in
xchg
cld
mov
outsl
fnstenv
cs
mov
add
add
and
push
les
data16
adc
xchg
faddl
imul
out
cmp
or
mov
enter
push
push
sbb
push
inc
and
nop
cmp
aam
add
jbe
jg
mov
jmp
mov
jecxz
and
or
insb
cmp
fnstenv
lods
ss
or
bnd
pop
inc
shl
cltd
pusha
enter
pop
faddp
in
lret
mov
add
fistl
push
and
aam
and
inc
fildl
loopne
pop
jb
add
dec
cmp
add
nop
add
in
lret
mov
add
nop
or
xchg
xchg
xchg
inc
cmp
xor
fs
xchg
and
xor
fs
inc
test
shl
inc
push
fs
sbb
sbb
sbb
mov
sub
pop
pop
jb
xor
adc
test
cmp
hlt
xchg
adc
adc
dec
pop
mov
jno
mov
sub
es
inc
ds
or
insl
adc
xchg
xchg
dec
adc
mov
cld
dec
add
and
in
or
add
add
pop
adc
mov
or
clc
cmp
fwait
cmp
push
pop
lock
in
or
iret
sbb
test
inc
addl
mov
adc
in
push
stos
in
adc
loopne
xor
movl
add
push
xchg
mov
fs
add
repnz
rolb
iret
pusha
lods
jno
nop
xor
lods
mov
in
pop
pop
int3
fmul
sbb
int3
adc
mov
and
rcr
xchg
or
les
and
sarl
in
pop
cmp
mov
pop
sbb
mov
sbb
dec
or
ds
cmp
mov
jnp
push
je
add
xorb
inc
add
loopne
pushf
int
pushf
sub
les
or
ds
pop
pop
jns
aas
push
std
pop
lock
outsl
stc
hlt
inc
sbb
add
xchg
rorl
shrb
loope
mov
pop
mov
popa
mov
sbb
jl
add
sub
je
in
xchg
scas
mov
lea
mov
dec
scas
xor
fwait
inc
cmpsb
inc
dec
lea
adc
nop
pop
js
mov
and
bound
jnp
aaa
enter
mov
enter
outsb
xchg
xor
add
mov
int3
mov
and
adc
rolb
pop
mov
xchg
inc
andl
cltd
aas
xor
pop
push
push
sub
in
dec
inc
addr16
add
adc
imul
jno
cmp
pop
es
pusha
iret
ret
cmp
push
es
fcomip
jbe
lods
xchg
loopne
or
js
push
dec
popa
movl
cwtl
mov
pop
sbb
out
int3
pop
scas
lea
mov
inc
mov
sbb
out
mov
add
jns
sahf
in
cmp
nop
popa
pop
cltd
mov
xor
int3
cwtl
pushf
lahf
icebp
jb
add
cltd
mov
int
enter
xor
xor
test
mov
ret
iret
push
jns
sub
iret
pop
pushf
sbb
movsb
adc
adc
push
sbb
pop
add
loopne
cmp
loopne
jl
xchg
inc
sbb
addl
cmc
pop
call
pop
enter
cmp
enter
mov
call
lea
sbb
ret
add
in
icebp
inc
test
pusha
stos
mov
sub
sbb
push
add
je
xchg
or
enter
int
cwtl
xchg
mov
inc
rcll
dec
dec
in
xchg
cmp
adc
push
inc
fsubp
sbb
jne
push
loopne
jbe
push
sbb
sub
dec
jo
inc
inc
adc
xor
in
pop
outsb
repnz
sbb
lret
inc
push
jbe
iret
mov
cwtl
ret
sub
mov
in
xor
outsb
pop
adc
fnstcw
xor
ror
lock
dec
add
mov
sbb
int3
sbb
fmuls
and
scas
les
int3
cmp
pop
cmp
dec
enter
mov
or
test
push
or
or
aam
push
nop
lcall
les
aam
call
hlt
aad
adc
mov
fadd
sbb
in
xchg
iret
and
adc
mov
cmp
je
push
dec
mov
adc
loopne
cmp
inc
and
imul
dec
pop
enter
jo
sub
nop
imul
cs
mov
mov
lret
test
aam
or
mov
repz
enter
sbb
int
pop
push
adc
pop
out
mov
push
inc
dec
or
mov
jo
adc
mov
shrl
aam
add
shlb
add
roll
shll
fnstcw
enter
or
xchg
in
lods
int
insb
popf
lods
mov
pop
sbb
int
and
enter
xor
mov
mov
out
cmpsl
scas
dec
test
ror
imul
es
jno
inc
or
aas
outsl
rolb
shlb
add
xchg
in
inc
jb
mov
andb
test
xor
popf
jns
loope
lret
test
dec
lea
nop
fwait
jo
gs
insb
jns
jns
insb
jo
je
enter
pushf
fadds
loop
subb
das
push
mov
add
adcb
jmp
faddl
aaa
rcrl
add
jne
pop
sbb
or
push
movsb
lods
imul
int3
aas
addl
pop
test
xor
scas
in
dec
xlat
mov
pushf
scas
in
and
std
xlat
lods
and
inc
and
mov
xor
xlat
les
out
cmp
jae
and
push
xlat
xchg
rorl
dec
adc
call
repz
jge
les
jns
in
pop
shr
sbb
mov
fsubr
xchg
adc
push
cwtl
mov
mov
adcb
sub
cmp
and
punpckhbw
jge
inc
stos
mov
ret
in
fldenv
cmp
fsubrs
jno
rcll
popa
push
mov
sbb
pop
jmp
add
push
push
xor
popa
mov
fdiv
mov
inc
fstps
xor
xor
mov
das
pop
leave
orl
and
aaa
lods
mov
mov
dec
jb
jge
add
adc
and
outsb
repnz
add
cld
fimull
mov
xor
loopne
in
arpl
cmp
jnp
scas
pop
rolb
and
aam
or
pop
stc
mov
in
sub
mov
leave
and
outsb
std
in
lock
inc
mov
out
mov
movsl
dec
lcall
cmp
js
xor
ret
fwait
mov
mov
mov
mov
aaa
shrb
test
movsb
in
cmpsl
mov
mov
nop
clc
pushf
pushf
fwait
cwtl
xchg
nop
inc
ss
cwtl
lret
mov
mov
out
fwait
nop
in
lods
or
inc
mov
mov
mov
sbb
test
adcb
cmp
xchg
push
aaa
out
dec
pop
leave
xor
dec
pop
mov
daa
adc
les
insb
and
xor
mov
orl
mov
imul
inc
push
pusha
pusha
pop
mov
les
in
inc
pop
push
aam
fs
push
push
push
push
lea
in
and
sub
test
dec
inc
nop
and
in
or
or
imul
jb
dec
rcrl
sub
and
or
cmp
subl
or
les
sub
daa
adc
sub
push
sbb
add
sbbb
pop
dec
dec
das
pop
adc
enter
sbb
orl
adc
adc
es
adc
adc
fs
inc
mov
in
or
or
in
add
add
fs
inc
loopne
add
inc
dec
pop
pop
in
jbe
push
mov
rol
sbb
add
call
inc
push
mov
nop
ja
pop
lock
mov
pop
ret
in
inc
in
call
add
loop
ret
push
in
dec
push
jb
mov
fneni(8087
xor
orl
fdivl
enter
insb
fdivs
and
aam
scas
loop
or
push
adc
xchg
adc
and
mov
test
enter
and
mov
sarb
int3
mov
mov
sbb
mov
sbb
cld
lods
cmpl
lods
test
adc
movsb
movsb
mov
imul
test
test
sbb
mov
sbbb
xor
mov
mov
lea
ja
mov
lods
jmp
movsb
add
js
stos
jmp
je
call
add
inc
xor
in
rol
movsl
jne
icebp
dec
dec
and
js
push
cltd
mov
fisttpl
leave
inc
and
push
push
insb
and
pop
aam
mov
push
prefetch
call
xchg
inc
fucomp
mov
test
movntq
inc
out
inc
repnz
out
insb
mov
cmp
and
or
sub
out
test
ja
sub
cs
xor
push
out
adc
add
sub
cmpsl
jo
fldcw
lds
inc
push
push
xchg
jns
and
out
inc
inc
sbb
xchg
stos
mov
test
pop
or
and
arpl
test
and
xor
sub
sbb
rcll
rcrl
and
inc
inc
popf
pusha
or
mov
inc
out
daa
aas
ret
ret
sub
inc
jp
outsb
out
adc
lret
add
loop
add
push
imul
sub
lret
jae
pop
pop
lds
out
push
xor
pop
push
mov
sub
jb
xlat
inc
popa
cmp
push
push
xlat
inc
imul
test
movsl
push
ss
push
daa
and
fs
inc
fcmovu
mov
sub
or
inc
pop
rcrb
je
inc
jbe
mov
pop
push
test
dec
push
mov
pushf
add
daa
ljmp
lock
nop
add
fcompl
inc
add
sti
outsl
and
jbe
adc
mov
movsb
pop
push
dec
sub
or
aam
fiadds
daa
in
sub
add
sub
test
inc
fldl2e
loope
sti
lock
and
aam
xchg
lods
popl
and
xchg
movsb
cmp
mov
add
and
sub
hlt
in
ss
pop
xchg
shrb
aam
in
xchg
pop
mov
pusha
lods
lds
dec
jbe
addr16
inc
fcompl
adc
loopne
dec
fiadds
fsubr
adcb
dec
mov
adc
movsb
inc
cmp
and
cmp
and
pushf
popf
push
repnz
f2xm1
lock
in
aam
inc
das
clc
xchg
jb
cmp
arpl
mov
and
in
lds
or
inc
fiaddl
or
gs
xchg
push
pop
or
shr
std
xchg
scas
out
sbb
nop
pop
enter
out
and
mov
cmp
lret
sub
aam
inc
adc
mov
inc
sub
shrl
out
loop
add
enter
inc
test
inc
ja
jns
sarb
add
push
movb
dec
mov
or
lock
lock
lock
and
and
jb
xor
push
sub
inc
or
sbb
stos
cmc
hlt
movsb
xchg
dec
cld
sbb
pop
add
mov
shrb
rorb
pop
rcr
mov
in
mov
hlt
hlt
sub
stos
or
call
mov
sub
sbb
inc
fs
les
jns
and
int3
or
sbb
in
push
test
cmc
cmp
sbb
in
in
lods
dec
loop
push
lock
and
jo
jnp
in
inc
test
call
xchg
movsl
insl
push
fsubrs
xchg
mov
test
leave
and
dec
pushf
pushf
add
mov
cmp
or
lods
stos
pop
cmc
pushf
in
xor
cmc
test
pusha
dec
loopne
mov
dec
sbb
mov
lock
mov
dec
sti
push
dec
mov
sub
lcall
dec
aas
test
orl
enter
in
mov
daa
loopne
inc
ret
in
xchg
or
dec
jg
inc
js
test
testb
inc
je
xor
and
and
sub
dec
xchg
lds
add
jp
push
jo
pop
pop
faddl
dec
arpl
jo
sbb
seto
movsb
orb
sbb
add
push
fisubrl
daa
das
addr16
aaa
test
jns
jo
pop
jae
in
std
jl
and
xor
xor
inc
cmp
es
dec
inc
into
insl
xchg
andl
mov
insb
xchg
test
mov
movb
inc
pop
jmp
cmp
add
lock
inc
xchg
mov
add
or
sbb
inc
out
ja
std
sub
add
ds
adc
out
cmp
dec
data16
es
loope
sbb
jo
imul
movsb
addr16
aaa
add
mov
ror
mov
outsb
or
mov
test
mov
adc
loopne
cld
xor
popf
lret
shrb
fcmovnb
cmp
fwait
lahf
aas
gs
add
int
cmp
nop
push
mov
push
adcl
insl
bound
pop
fistpll
sub
add
xor
rolb
add
add
fs
aaa
clc
dec
leave
pop
sbb
add
lcall
pop
sub
add
shrb
sahf
roll
pop
push
lods
or
xchg
cmp
push
sbb
push
dec
jns
dec
add
insb
lea
int3
pop
fadds
sbb
and
add
add
dec
cmp
pop
xor
add
js
mov
sbbb
ss
push
or
or
jno
pop
mulb
sarl
or
inc
mov
add
sbb
and
mov
xchg
aaa
push
and
or
dec
fidivs
or
js
call
adc
aas
fstl
add
adc
xchg
pop
in
push
sub
loopne
outsb
sub
and
dec
mov
movsb
add
cmpsb
insl
add
stos
xorb
je
push
dec
test
dec
das
bound
out
xchg
movsl
hlt
aam
mov
nop
hlt
aam
fisubs
inc
fbstp
cld
cmp
xchg
mov
adc
daa
fisubs
pushfw
pop
xor
inc
scas
and
nop
jge
repnz
leave
pop
push
push
or
xorb
push
rol
les
dec
les
in
jns
push
lods
aaa
mov
out
pop
jae
js
das
ret
loopne
fnstsw
mov
in
mov
mov
or
cmp
dec
mov
lods
loope
nop
lods
jno
fmull
and
scas
xor
jmp
adc
fwait
and
pop
xchg
pushf
pop
jb
test
movsb
and
mov
mov
or
cwtl
adc
xchg
pusha
push
push
add
pop
in
nop
pop
lret
adc
mov
adc
test
lock
bnd
cs
jb
orl
mov
push
push
adcb
cmpb
or
jl
xchg
push
les
push
outsb
leave
je
sub
inc
cmp
leave
and
jo
jne
mov
and
leave
jne
push
insb
mov
xchg
xor
or
xchg
fstl
push
pusha
inc
jb
inc
pop
rcrl
sbbb
mov
pushf
pop
jb
loope
pop
push
mov
push
push
ficoms
adc
inc
fsubp
adc
jne
lcall
xor
dec
dec
sbb
mov
or
loope
adc
cmp
cs
add
or
jo
adc
push
cmp
in
cmpb
cmp
cltd
popf
sbb
push
dec
mov
sysenter
jb
leave
xor
mov
sub
inc
dec
cmp
sub
and
in
and
cs
add
sbb
xor
xlat
sbbl
xchg
push
sub
loope
aas
adc
xor
xchg
fs
mov
mov
mov
repnz
repnz
add
ficoml
jo
aaa
mov
inc
js
jl
mov
inc
fst
nop
push
andl
pop
push
stos
and
and
lea
mov
mov
pop
test
or
das
lods
and
sub
pop
cltd
icebp
pop
push
pop
xor
xor
je
loopne
insl
cmp
or
dec
xor
xor
in
fisttpll
dec
xor
cmp
das
fisttpl
pop
daa
and
or
inc
mov
arpl
sbb
or
frstor
out
cmp
movsb
and
nop
lods
sarb
and
adc
sub
fcoml
push
fwait
push
add
in
faddl
xchg
lea
mov
xchg
dec
pop
sub
or
mov
hlt
addb
aam
not
mov
cli
stos
pop
pop
mov
or
inc
fmuls
mov
aam
aam
xchg
dec
rcl
rclb
dec
rorb
test
enter
sub
sub
mov
rol
sarb
push
push
popa
shrb
and
adc
mov
push
addb
inc
and
in
jp
inc
inc
mov
psrld
pop
push
mov
jg
inc
push
and
xor
sbb
pushf
iret
jno
aam
test
fisubrs
in
cmp
pushf
mov
and
loopne
or
test
rorb
xor
popa
xchg
mov
push
sbb
jbe
lock
mov
shll
push
pop
mov
jle
push
push
push
inc
js
popa
fidivs
lods
loopne
dec
push
sub
fiaddl
pop
xor
and
icebp
in
js
js
or
mov
je
je
or
push
testl
ret
insb
ss
ljmp
inc
rorb
imul
or
scas
in
jnp
jnp
call
sub
jnp
popf
and
inc
sub
mov
adc
xchg
mov
dec
enter
dec
push
push
std
jo
pop
pop
add
pop
add
inc
or
or
mov
and
adc
lahf
lea
jbe
and
dec
insl
and
add
dec
cmp
and
pop
or
xor
or
adc
loopne
cmp
jo
xchg
pushf
xor
or
pop
shrl
sub
fs
out
xchg
pop
rcr
and
sub
add
in
adc
js
adc
leave
mov
aad
and
xor
push
pusha
adc
fdivs
leave
inc
mov
rclb
or
mov
mov
unpcklps
dec
xchg
sbb
mov
dec
inc
cld
fwait
and
xchg
and
and
enter
loopne
pop
push
dec
or
xor
icebp
test
movsl
xchg
cld
mov
inc
cwtl
mov
cmp
jecxz
insb
sbb
add
out
lea
subl
push
mov
xchg
and
push
fsub
pop
adc
mov
in
in
aad
xor
scas
mov
out
mov
fwait
xchg
sbb
push
sbb
fcoml
aad
adc
and
loopne
leave
xchg
pop
loopne
adc
nop
inc
push
stos
enter
push
rcll
and
xor
sbb
leave
int3
int3
xlat
sbb
add
fdivr
les
xor
enter
and
xchg
rol
hlt
sbb
dec
cs
jns
mov
jmp
add
addr16
add
in
loopne
pop
sub
ss
lods
into
out
mov
pop
pop
or
sub
mov
push
or
dec
push
sbb
gs
xchg
push
and
fwait
add
push
or
repz
sbb
mov
sbb
gs
jne
sbb
and
xor
cmp
xor
inc
and
fs
fcomi
in
and
xor
xor
xor
and
fdivr
std
inc
cmp
xor
and
xor
aaa
adc
or
outsb
xor
ss
cmp
out
in
jnp
aas
inc
push
inc
clc
mov
add
ds
mov
adcb
pop
push
adc
add
add
mov
fcmovne
cmp
push
stos
mov
dec
es
mov
sub
inc
lahf
iret
mov
sbb
fnstsw
es
sahf
xorb
daa
cmp
xor
insb
adc
daa
lahf
xor
xor
es
aaa
sub
stos
adc
stc
add
cmp
imul
hlt
lock
mov
aaa
iret
jo
stc
adc
test
add
pop
adc
popa
fcoms
clc
inc
push
in
or
xor
mov
sub
xor
adc
add
jne
push
xor
arpl
test
ljmp
icebp
push
faddl
imul
test
mov
mov
dec
adc
sub
inc
fisttps
movsl
and
test
inc
cmc
and
or
dec
and
cmp
or
pop
js
out
push
add
addr16
test
add
fs
ds
pop
arpl
nop
push
addl
mov
je
je
adc
mov
jl
inc
mov
mov
mov
mov
adc
mov
sub
cmp
push
arpl
fs
cmp
dec
inc
es
pop
pop
pusha
int3
push
and
mov
dec
sub
push
push
jb
leave
enter
dec
xor
dec
mov
mov
dec
dec
inc
jo
and
or
xchg
sbb
fdivrs
cmp
jo
andb
add
pop
cltd
nop
notl
jecxz
cmp
add
lret
pop
mov
push
and
push
jo
push
js
add
or
and
jne
sbb
movsb
xor
pop
sbb
xchg
push
enter
xor
lds
andb
fwait
mov
clc
shll
inc
sub
js
xchg
ja
inc
test
es
in
lea
and
pop
nop
and
sbb
xchg
and
call
inc
fcoms
adc
or
adc
pop
dec
pop
xchg
and
or
or
push
or
sbb
add
adc
add
xchg
adc
clc
stc
dec
mov
cld
or
popf
mov
push
in
in
or
rcl
in
hlt
data16
pop
nop
in
push
adcl
adc
ret
lock
jns
insb
dec
adc
leave
rorl
sub
stc
adc
inc
dec
inc
push
in
xchg
nop
push
lds
fucom
xor
vaddpd
popa
fmul
and
mov
movsb
fadds
adc
ss
aam
pop
repnz
add
inc
rcl
xchg
mov
stc
fcoml
enter
jo
pop
in
rclb
outsb
leave
orl
jmp
pop
mov
push
jns
int3
mov
inc
jb
push
pop
mov
stc
mov
mov
mov
push
flds
addr16
adc
add
insl
pop
xchg
dec
xchg
lods
lods
rorb
xchg
test
jmp
cmp
mov
jmp
mov
insb
mov
in
dec
mov
jb
in
cwtl
cwtl
out
or
frstor
pushf
pop
jb
pusha
mov
adc
xchg
adc
cmpl
stc
stc
data16
nop
dec
xor
stc
stc
mov
adc
adc
dec
scas
movsl
sbb
mov
pop
lret
stc
mov
lret
lret
insb
fcoml
je
leave
repnz
and
or
enter
jmp
out
adc
push
rorl
sahf
fs
adc
inc
mov
leave
test
push
outsb
adc
push
push
sbb
pop
pop
and
shll
pushf
push
cs
inc
xchg
cmc
outsb
dec
roll
push
adc
je
jb
ret
popf
push
push
push
xchg
fiaddl
adc
sbb
mov
addb
addl
outsl
outsl
xchg
add
dec
mov
push
cmp
mov
pop
ret
dec
ds
xor
clc
bnd
movsb
mov
xchg
loopne
and
cwtl
cmp
sbb
out
adc
push
jns
mov
fwait
nop
inc
xor
inc
xor
subl
push
bnd
addr16
or
ss
sub
jge
and
fs
and
and
sbb
push
and
sbb
pusha
sbb
sbb
sbbb
pop
xor
arpl
push
scas
jge
xchg
pusha
dec
faddl
push
and
and
jb
adc
adc
sub
stc
sbb
gs
call
addr16
popa
or
cld
clc
inc
mov
movl
pop
fs
and
mov
or
sbb
clc
clc
sbb
rorb
xchg
pushf
pop
call
mov
pop
loopne
jnp
jo
add
push
data16
and
fisttpll
mov
pop
push
and
jmp
clc
and
xchg
in
nop
out
and
aaa
imul
les
rolb
push
mov
adc
jbe
mov
pop
xor
jne
and
adc
orl
aaa
mov
mov
adc
jo
push
push
mov
adc
fdivrs
xchg
push
in
and
cmpl
outsb
add
mov
ja
sbb
adc
cmp
adc
add
xor
scas
add
inc
xor
jo
ja
add
mov
jmp
adc
loopne
int3
fists
pop
ret
push
jno
and
inc
mov
adc
mov
or
xor
mov
in
xor
pop
faddl
push
add
pushf
arpl
clc
js
jl
enter
sti
cmp
aaa
adc
xor
dec
xchg
sbb
insb
jo
dec
inc
jo,pn
je
and
adc
or
fs
pusha
pop
push
sub
les
fs
insl
dec
and
adc
testl
lea
loope
inc
lock
push
iret
loopne
and
push
test
push
push
push
xchg
pushf
pop
xor
mov
pop
insl
inc
adc
inc
push
stc
insb
push
inc
inc
xlat
scas
or
cmp
pop
cs
mov
xchg
push
add
xlat
lock
in
fcmovb
or
pop
xor
adc
push
xor
cmp
and
xor
test
loope
icebp
clc
mov
xor
lea
push
jl
xchg
jb
loope
sub
loop
sub
int
add
scas
ja
int3
nop
fistpl
mov
xchg
and
sbb
mov
in
adc
adc
xchg
stos
cmp
inc
or
loope
dec
cmpsb
add
add
fdivrs
fnsave
cs
lahf
insl
in
or
pop
clc
sub
mov
fistpl
mov
jge
in
xchg
paddusw
lock
push
push
lock
call
xor
push
negl
in
shlb
push
in
or
idivl
jno
jle
push
fucom
negl
jns
sbb
mov
divl
leave
andl
loope
jo
pop
int3
xor
in
in
int3
shlb
in
enter
dec
push
std
imul
sub
je
pop
dec
imul
or
mov
test
inc
scas
dec
mov
cmp
mov
and
lods
mull
dec
jne
push
pop
repz
jecxz
enter
xor
je,pn
jb
mov
xor
sbb
cs
pushf
fldl
mov
xor
dec
push
pop
cwtl
pop
push
fadds
mov
mov
nop
jge
or
and
nop
mov
mov
orl
sbb
xorb
jl
and
enter
daa
adc
enter
push
mov
je
inc
adc
cmc
mov
jge
cmc
push
in
or
in
mov
daa
fs
push
and
iret
es
negl
pop
push
inc
ds
dec
divl
pop
xor
mov
pop
pop
dec
imul
add
push
mov
les
add
cs
inc
cmp
push
in
cmp
punpckhbw
xor
mov
cmp
xor
or
inc
ds
adc
je
fldcw
sbb
sbb
loop
sbb
xor
xor
inc
cmpsb
add
lds
push
dec
xor
daa
or
adc
imul
jmp
imul
add
lods
sbb
xchg
add
jmp
pop
pop
adc
xchg
dec
inc
sub
add
sbb
adc
lock
aas
hlt
and
je
ljmp
adc
adc
pushf
sub
jg
mov
or
mov
mulb
mov
in
ficoml
add
paddusb
fadd
loopne
jle
xchg
adc
in
insl
dec
cwtl
mov
ret
xchg
fmuls
mov
inc
popa
mov
inc
int3
int3
ror
and
aam
mov
mov
or
mov
jo
dec
rclb
mov
or
rolb
negb
cs
fsub
mov
pop
ja
dec
mov
loop
test
adc
cmp
mov
lods
testb
fcoms
dec
fsubrp
movsb
adc
xlat
cmpsb
jmp
mov
cs
outsl
jo
pushw
mov
or
mov
subl
push
add
xor
fimull
adc
xchg
add
scas
test
imul
sbb
xchg
test
lods
dec
dec
scas
jmp
add
mov
pop
js
inc
dec
cmp
dec
xchg
imulb
push
pop
call
negb
inc
jo
xorl
fstp
pusha
sub
xchg
pushf
pop
rcrl
pop
pop
jb
and
push
adc
dec
repnz
dec
cs
dec
inc
inc
xchg
dec
dec
dec
jo
mov
cmp
jmp
mov
xchg
and
pop
pop
jno
inc
add
cmp
cmp
imul
cmp
mov
adcl
sbb
fiaddl
sub
sub
test
popf
mov
and
and
mov
int3
xor
xor
push
xchg
dec
cs
and
or
xchg
and
cmp
jle
dec
and
pop
xor
dec
cs
mov
ds
sbb
jae
mov
sub
adc
adc
adc
push
ja
fistl
mov
mov
cs
add
int3
add
or
and
sub
or
jbe
xchg
or
addl
andb
add
cmc
outsb
add
sub
and
pop
add
add
or
jbe
xchg
aaa
xchg
imul
out
aad
dec
sub
push
xor
jnp
cmp
lgs
adc
mov
and
jne
mov
mov
jns
and
in
adc
mov
adc
fdivl
scas
imul
add
shrb
rcl
add
xchg
sahf
lock
xchg
repnz
pop
sub
js
in
xchg
mov
les
in
sarb
mov
fdivs
mov
dec
mov
mov
pop
xor
and
enter
mov
adc
jo
adc
pop
movsb
cmc
adc
nop
mov
push
test
push
fs
cwtl
aad
ret
adc
cs
adc
xchg
nop
adc
les
rorl
leave
mov
inc
fs
xchg
fldenv
xor
shrl
leave
and
jecxz
out
xchg
adc
lods
push
and
je
add
je
lahf
insb
cmc
xchg
in
cs
jo
adc
pop
imul
inc
and
pop
test
push
mov
pop
pop
pop
pop
push
dec
repz
popa
cmc
mov
pop
adc
pop
stos
add
push
call
push
push
call
mov
ja
push
lds
pop
sub
lods
sbb
dec
cmc
and
adc
mov
xchg
test
fcomi
xor
enter
cmc
xor
lods
adc
clc
lahf
cmp
pop
leave
inc
jne
cmp
test
leave
cmp
push
xor
push
jne
sub
add
in
adc
fsubrl
mov
xchg
xor
sub
xchg
push
stos
rcll
and
rcl
test
and
ret
sbb
inc
test
jo
xchg
pop
adc
sbb
sbb
fsubl
jns
add
adc
mov
fsub
fstl
push
and
rolb
aad
xchg
loop
cs
xor
and
add
push
jmp
and
mov
jl
mov
stc
inc
cld
hlt
adc
das
or
hlt
hlt
push
xor
sbb
lret
popa
icebp
nop
push
mov
imul
xor
and
fisubrs
xor
cld
hlt
in
fwait
nop
mov
cmp
sub
xchg
sbb
dec
pusha
mov
ss
xchg
or
jl
cmp
hlt
hlt
insb
inc
hlt
mov
xor
hlt
adc
adc
rolb
sub
mov
inc
push
ja
jnp
shlb
in
push
in
add
mov
or
mov
je
dec
rclb
xchg
adc
and
or
or
out
leave
leave
and
and
fwait
outsb
adc
lahf
pushf
or
sbb
cwtl
mov
ret
dec
pop
mov
aas
mov
nop
nop
xchg
mov
mov
inc
push
mov
xlat
scas
sbb
test
cs
add
add
das
jl
sbb
xorb
nop
hlt
js
adc
or
mov
jb
jo
pop
jb
leave
insb
insb
push
movsb
xchg
add
and
nop
xchg
pop
sbb
adcb
pop
ret
nop
pop
mov
lahf
jns
cmp
or
ds
adc
enter
jecxz
and
pop
hlt
hlt
hlt
and
ret
lds
add
mov
cmpb
adc
xchg
and
cmp
and
xor
in
fisubrs
movb
pop
mov
sbb
add
mov
xchg
add
xor
jo
ja
adc
mov
stos
inc
aad
and
movsl
inc
add
loopne
mov
or
and
add
sbb
in
xchg
adc
rcrb
cs
add
adc
xor
adcl
sub
xchg
call
adc
cmpl
or
mov
dec
and
cld
repz
or
mov
enter
xchg
addr16
int
repz
push
or
or
jo
lock
sub
fnsave
cmpsl
sub
flds
xor
cmpl
fsub
js
push
mov
sbb
adc
faddl
adc
dec
push
xchg
aad
push
adc
jo
xchg
repz
xor
repz
sbb
adc
pop
daa
scas
mov
shlb
les
repnz
leave
enter
jne
and
stos
or
mov
leave
enter
adc
rorb
xor
enter
mov
xchg
mov
mov
inc
lret
repz
pushf
sub
adc
and
push
loopne
fwait
mov
pop
inc
mov
outsb
leave
leave
and
mov
xchg
stos
adc
leave
fwait
mov
nop
adc
dec
mov
adc
outsb
mov
push
xlat
rorb
sbb
sahf
xchg
andb
test
loopne
pop
push
fiaddl
outsb
push
sbb
pop
adc
sub
or
mov
pop
adc
insb
std
xlat
je
es
mov
and
cmpb
mov
fistl
test
lods
jmp
mov
push
fs
sub
int3
xor
push
fs
aad
and
push
xor
shr
add
sbb
pop
loopne
or
mov
or
inc
pop
xchg
xor
pop
xchg
fisubl
dec
jno
outsb
mov
jno
popf
mov
clc
pause
jbe
cmp
sbb
xor
mov
mov
mov
mov
and
sbb
sbb
in
jmp
pop
adc
pop
xor
adc
sbb
stos
or
xor
and
adc
add
test
lds
flds
outsb
adc
jo
push
add
ja
pop
pop
mov
repnz
cmpsb
jecxz
add
sbb
dec
adc
pop
adcb
daa
mov
rcrb
repnz
repnz
daa
repnz
es
in
imul
call
nop
js
in
leave
inc
xchg
dec
loopne
fadds
cltd
outsb
cmp
popa
sbb
and
adc
mov
in
orb
rcl
adc
jnp
in
sbb
repnz
js
adc
adc
pop
les
leave
adc
fwait
ret
xchg
mov
lods
popf
add
mov
mov
pop
mov
sbb
dec
dec
dec
cs
out
xchg
lods
out
xchg
adc
mov
bnd
inc
jb
repnz
xor
pop
pushf
jl
loop
lea
lret
subl
jno
push
mov
xchg
js
fiaddl
xchg
nop
jmp
les
inc
adc
nop
xor
mov
adc
inc
push
mov
xor
add
cmp
or
test
je
and
iret
sbbb
jl
insb
inc
ds
cmp
fs
jb
xchg
fldcw
inc
jns
sbb
mov
pop
inc
push
jno
push
jp
fcoms
pop
adc
test
sti
xor
push
cli
adc
sbbl
adc
xor
lds
dec
jecxz
mov
adc
sub
adc
mov
in
cmp
inc
adc
mov
sbb
sub
sub
and
push
or
mov
pushf
dec
add
adc
leave
subb
and
jns
and
mov
insl
inc
sbb
sbb
mov
mov
sbb
repnz
std
sbb
sbb
test
adc
mov
push
cmp
jnp
add
jns
aam
push
inc
or
nop
xchg
adc
or
je
push
adc
fiaddl
in
or
js
push
add
stos
sbb
jge
dec
sbbb
xchg
dec
xor
sub
hlt
icebp
jl
add
push
icebp
xchg
iret
mov
and
clc
icebp
in
or
pop
icebp
orb
icebp
outsl
add
fwait
xchg
icebp
adc
mov
pop
in
ret
mov
pop
loopne
sbbl
aam
icebp
push
popa
and
jno
ja
adc
aam
test
aad
or
adc
adc
xchg
fs
icebp
adc
dec
dec
scas
or
cwtl
jno
jo
cmc
shl
jns
movb
cmp
sbb
and
aad
test
ret
cwtl
add
mov
in
mov
push
out
mov
outsb
in
nop
jno
jg
mov
mov
mov
or
mov
mov
js
js
shrb
dec
push
test
icebp
icebp
stc
mov
mov
inc
push
icebp
icebp
icebp
mov
adc
sub
mov
ret
mov
test
push
in
mov
adc
imul
pop
lcall
dec
cmp
cmp
push
add
mov
dec
adc
inc
push
jns
cmp
dec
scas
add
add
in
adc
push
inc
arpl
leave
mov
roll
sbbl
and
mov
xor
inc
sub
xor
fs
mov
flds
aaa
and
mov
insb
push
mov
cmpsl
adc
dec
outsl
loopne
mov
jns,pn
mov
sub
lods
or
sbb
dec
test
insb
xor
pop
push
cmp
or
push
pop
inc
jb
add
and
test
xchg
and
inc
mov
xchg
dec
push
push
in
popa
mov
and
mov
xor
xor
lods
pop
xor
mov
xor
xor
jmp
add
fcmovbe
mov
add
pop
lock
mov
sub
push
ss
add
enter
out
repz
jne
repz
jge
mov
test
inc
lods
mov
ret
mov
xor
repz
push
imul
and
xchg
mov
mov
pop
shl
or
jno
pop
and
testb
ret
sbb
mov
leave
mov
sbb
hlt
xorl
pop
inc
mov
mov
dec
push
pop
pop
or
and
test
mov
loopne
int3
hlt
dec
in
aaa
mov
xchg
push
or
adc
bound
adc
xor
pop
cmc
push
cmp
leave
shrb
dec
pop
cmpsl
cmc
pop
push
or
dec
jns,pn
cmpb
cwtl
xchg
xchg
movsb
adc
add
dec
or
or
or
mov
jo
sub
sub
mov
mov
cmp
or
jbe
mov
mov
pop
xchg
pushf
xor
push
out
rclb
and
hlt
pop
repnz
fadds
mov
push
roll
iret
mov
in
push
adc
adc
dec
or
xor
scas
sub
divl
pusha
dec
cs
rcrb
add
mov
aas
lock
clc
leave
push
fisubl
adc
rorl
push
add
clc
push
xchg
jne
xor
sbb
sbb
clc
xchg
fcmovbe
push
js
jl
and
sbb
and
push
xor
dec
fst
stos
cmp
in
out
in
xor
outsb
adc
push
imul
or
dec
repnz
stc
stc
or
pop
pop
mov
add
jl
xchg
aas
fcmovbe
cmpsb
loope
stc
inc
enter
leave
nop
pop
sbb
push
loopne
add
adc
add
fiadds
push
sbb
nop
cli
jl
adc
inc
dec
lds
xor
inc
les
sbb
cwtl
jg
and
xchg
mov
or
test
xor
aam
mov
push
shl
cli
xchg
cwtl
mov
adc
sbb
loope,pn
insl
and
mov
lea
add
jb
inc
jne
bound
icebp
or
pop
push
or
ja
lcall
jge
sbb
push
push
mov
gs
rorb
add
mov
xchg
dec
xor
cmp
jno
dec
or
movq
and
aaa
xchg
cmp
cmp
xor
ja
or
sub
ja
stc
xchg
orb
xor
es
xlat
add
mov
leave
mov
jg
stos
add
iret
xor
add
popa
pop
or
std
fs
pop
jae
inc
mov
dec
dec
xor
and
sbb
adc
test
push
inc
fs
outsb
and
pop
sub
and
fcomp
iret
or
imul
idivl
and
in
fmuls
out
jecxz
imul
inc
xchg
enter
and
jae
adc
and
mov
pop
and
and
xor
xor
inc
jp
ja
outsb
mov
outsl
stos
mov
mov
mov
es
clc
cmp
inc
jl
sub
out
movl
jbe
icebp
aaa
inc
dec
push
mov
xor
mov
dec
inc
into
push
and
popa
xor
ja
punpckhdq
xor
lds
es
subb
dec
in
scas
ret
mov
xor
es
inc
daa
add
xor
cmp
xorb
dec
and
pop
addr16
dec
js
addr16
scas
loop
jo
inc
pop
insb
insb
addr16
lods
mov
mov
test
xorl
mov
sbb
outsb
out
mov
jle
xchg
frstor
fildl
das
cmp
insb
lock
insl
sbb
push
mov
in
or
jns
gs
fldt
out
popl
sub
aaa
inc
or
mov
dec
inc
xor
add
and
xor
mov
xor
addr16
sbb
inc
push
xor
lock
es
xor
cmp
ss
xor
sub
xor
add
orps
sub
movsl
xor
ss
push
mov
daa
movq
shlb
mov
frstor
fbstp
add
and
in
es
out
mov
adc
dec
mov
ss
xchg
dec
out
movsl
ja
cmpsb
loop
add
or
xorb
pop
push
add
aaa
jle
jmp
test
jo
or
outsl
test
ja
ja
std
push
pusha
es
inc
push
inc
dec
inc
call
enter
pop
push
cld
shlb
inc
mov
in
xor
dec
dec
inc
cmp
addl
and
add
orl
inc
insb
jns
cmp
xchg
mov
or
loopne
test
dec
aam
das
insl
jmp
aas
inc
dec
push
dec
xor
pop
imul
cmp
stos
pop
inc
stos
pop
xchg
xchg
xor
dec
push
rorl
pop
shlb
pop
add
rorl
xor
push
das
xor
scas
and
add
xchg
es
push
pop
les
jne
mov
or
and
adcb
and
sbb
adc
dec
or
fistl
dec
jne
mov
and
mov
or
add
or
mov
es
inc
out
testb
lods
inc
or
pop
cmp
xor
dec
ret
xchg
dec
insl
adc
pop
rcr
mov
pop
outsb
sbb
adc
jae
lea
mov
adc
popa
adc
sbb
test
fisubrl
add
mov
adc
mov
add
ja
add
add
push
pop
jno
dec
adcb
xchg
xor
test
adc
je
lea
xor
mov
sub
mov
dec
and
dec
test
push
sti
fsubr
pop
out
push
test
mov
lods
cltd
dec
pusha
jmp
pushf
adc
loopne
push
or
sbb
pop
enter
inc
sbb
scas
add
das
adc
pop
cmp
mov
or
jmp
inc
push
in
dec
push
or
mov
in
les
lds
addl
lds
ret
fdivl
loopne
xor
nop
push
or
cmp
sti
pop
je
or
add
pop
rcr
mov
xorb
jns
in
je
mov
inc
dec
or
js
pcmpeqb
push
bound
sub
push
in
adc
in
push
mov
push
cmp
les
outsb
shr
inc
loopne
adc
je
sbb
sub
pavgb
fcompl
nop
addr16
fadd
fsubs
jo
ret
mov
push
inc
pop
in
scas
xor
xchg
dec
fidivs
xor
cmp
rorb
dec
and
ret
mov
nop
inc
cmp
rcl
push
jns
sbb
enter
enter
mov
and
pop
cltd
shlb
nop
data16
push
mov
or
fistpl
je
mov
nop
jmp
fdivs
es
pop
in
test
pusha
push
scas
dec
xor
std
mov
adc
rcr
lock
xchg
dec
xchg
lods
dec
jo
sbb
dec
sbb
iret
xor
aas
xor
inc
cwtl
es
pushf
imul
cmp
aas
jne
xchg
insb
add
and
xor
sbbl
xchg
or
push
cmpl
mov
pop
incb
decl
pusha
sbb
adc
lock
sbb
adc
adc
or
pop
add
and
inc
push
jbe
jbe
in
inc
push
jbe
sbb
loopne
push
and
jbe
jbe
mov
pop
icebp
in
or
add
adc
ss
sbb
or
jnp
aam
jbe
push
mov
imul
mov
or
and
js
inc
dec
add
and
cmpsb
or
cmp
xor
sub
imul
adc
dec
nop
pusha
dec
adc
es
fs
push
dec
push
nop
fs
dec
inc
addr16
pop
mov
and
mov
sahf
or
popa
and
or
jl
and
xlat
adc
pop
jns
pop
push
sar
add
xor
mov
bound
mov
ss
jbe
or
repz
in
or
cmp
push
dec
add
xchg
dec
or
outsb
pop
xor
jne
add
inc
dec
add
sbb
dec
inc
mov
sbb
imull
ja
add
lahf
jns
push
xchg
outsl
push
cltd
aam
cmp
mov
outsl
add
arpl
pop
jae
push
xor
push
hlt
push
mov
cli
in
fisubl
push
insb
bound
fwait
insl
xchg
lret
popa
loopne
cwtl
aam
dec
push
push
gs
dec
repz
jle
add
fst
add
cmp
lcall
outsl
jl
repnz
pop
xor
jb
hlt
pop
jp
in
ds
xchg
add
adc
sti
cltd
lret
mov
mov
out
jo
push
xchg
add
int3
cltd
dec
jae
push
pushf
mov
add
cld
not
mov
sbb
add
rolb
jns
xlat
mov
push
or
aam
nop
outsl
cli
addr16
pusha
enter
cmpsb
insl
out
add
inc
pop
or
adc
loopne
dec
shll
test
jo
andb
cli
xor
add
lcall
push
mov
shrb
mov
fdivrl
lcall
outsl
cld
cld
out
nop
push
imul
dec
pop
cmc
insb
cmp
insl
shll
sbb
lock
push
pushf
aad
xor
cmpsb
imul
or
shrb
call
lock
in
push
xchg
push
inc
out
jecxz
out
aas
dec
add
packsswb
fadds
jp
mov
cmpsb
imul
pop
movsl
imul
insl
xor
hlt
mov
push
or
jae
les
rcrl
mov
into
lds
jl
pop
pop
lret
out
xchg
mov
xchg
out
mov
dec
push
out
mov
inc
imull
jae
jg
testb
push
dec
push
or
stc
stos
lcall
mov
mov
addr16
pop
cwtl
scas
nop
sub
imul
orb
inc
xor
mov
jle
pushl
adc
fcomps
adc
adc
repz
call
js
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
sbb
pop
push
inc
and
enter
add
and
ds
test
and
pop
repz
call
cmpsl
inc
mov
xor
pop
jne
adc
sbb
ss
push
cmpsb
and
push
pusha
rolb
arpl
add
inc
push
push
call
sbb
pop
sbb
or
into
add
xor
sti
add
and
push
ror
or
xor
fsub
call
repz
pop
or
sbb
shll
inc
dec
dec
shll
jo
xor
shll
mov
dec
shrl
push
push
add
orl
add
fs
dec
ret
and
insb
sbb
jo
in
and
insl
jl
nop
daa
cmpl
test
jns
in
lock
jo
jno
test
or
push
pop
imul
daa
dec
jb
jae
rcrl
and
xchg
add
ss
clts
pop
push
cmp
or
and
adc
pop
lcall
clc
xor
sbb
shll
jo
xor
shll
movsb
mov
aam
lcall
adc
cwtl
fstps
add
inc
lds
test
aas
fidivs
dec
repz
dec
dec
jo
jb
jle
push
roll
inc
push
push
push
inc
xor
loopne
push
pop
jmp
aam
push
pushf
add
icebp
or
xchg
ret
jne
cmpsb
push
pop
out
pop
lcall
mov
cmp
scas
orb
subb
jl
mov
rolb
pushf
jmp
decl
sar
decl
in
repz
fistps
or
sbb
fadd
cmp
stc
stc
sub
sti
push
mov
xchg
dec
add
nop
or
jns
in
add
psubusb
adc
daa
aaa
add
sbb
fisubs
dec
ficomps
pop
sbb
js
pushf
or
mov
les
fmull
dec
sahf
cmp
lock
or
sub
dec
pop
in
xchg
daa
pop
add
push
sbbb
pop
lods
dec
jns
push
mov
rclb
add
cmp
push
and
dec
sahf
insb
fxrstor
mov
dec
cmp
push
and
sub
adc
xor
dec
xchg
js
imul
leave
xchg
mov
dec
push
cmp
pmuludq
cmp
and
adcb
sub
daa
add
lods
insl
pop
mov
pop
imul
inc
push
inc
or
punpckldq
cmpsb
cmp
ret
pop
sahf
add
test
push
orb
adc
js
add
out
out
or
adc
mov
mov
cmpsb
fstl
insb
je
lahf
dec
jae
fcmovu
faddl
call
and
inc
dec
pop
jo
shll
xchg
pushf
lods
mov
dec
shll
int3
aam
sbb
rorb
and
inc
orb
mov
rorl
rclb
test
jle
rcrl
sti
setbe
xchg
enter
push
add
and
adc
or
cmpsl
jbe
or
nop
or
adc
sbb
pop
add
in
and
add
and
push
imul
in
push
hlt
cmovge
lcall
adc
and
lret
movsl
xor
clc
out
js
ficompl
push
test
jg
and
inc
push
js
cwtl
movsb
mov
int3
loopne
icebp
xchg
or
sbb
xor
sub
push
pusha
push
xor
pushf
lods
rcr
int3
xchg
shr
out
pop
and
cmp
adc
mov
iret
sbb
lds
add
or
das
in
and
xchg
ficoml
nop
popa
pop
add
testl
imul
cmpsb
imul
shll
push
add
pop
test
adc
mov
shlb
ret
push
add
or
fcoms
pop
add
pop
xchg
scas
jo
incb
nop
add
add
add
add
inc
shll
or
dec
outsl
inc
add
shrl
add
subb
pop
pop
pop
add
xor
idiv
pusha
sub
add
or
nop
pop
jnp
leave
and
std
in
dec
sahf
cmp
hlt
cli
jl
stc
sbb
sub
in
xchg
daa
inc
notb
hlt
sahf
cmp
bnd
mov
mov
xchg
daa
dec
enter
lock
pushf
cmp
bnd
in
adc
and
cmp
mov
ret
adcb
dec
add
xor
addr16
push
add
sbb
ret
pop
outsl
aaa
sub
ja
inc
or
or
add
dec
dec
loope
mov
hlt
decl
mov
aad
add
xchg
pop
fdivrl
adc
and
xor
mov
lahf
movsb
cs
imul
adc
int3
mov
cmpsb
imul
or
lcall
cmp
lcall
mov
les
movsl
imul
cld
dec
shll
sub
inc
xor
shll
pop
push
lcall
shll
aam
in
cmpsb
imul
adc
inc
dec
sub
or
jg
fs
pop
ror
fbstp
jl
mov
xchg
push
mov
cltd
cmpsb
imul
inc
roll
inc
push
or
dec
shll
dec
jl
int3
lcall
inc
jo
dec
mov
rcll
xchg
scas
jno
push
cmp
lods
xchg
cmp
and
ss
cmpsb
jnp
inc
cli
push
mov
scas
and
or
insb
jo
fsubs
jg
xor
movsb
cs
in
push
push
out
or
mov
mov
xchg
lcall
mov
rcrb
testb
fcmovu
ds
push
mov
add
pop
push
push
dec
out
aas
inc
push
pop
cmpsl
add
push
pop
push
push
pop
dec
push
data16
mov
ds
push
mov
daa
mov
pop
mov
mov
mov
fs
push
es
outsb
and
jl
cmpsb
xchg
fcoms
sbb
popw
pop
and
addr16
cmp
imul
and
movsb
push
adc
loopne
lods
je
pop
push
push
sub
in
cmpsb
add
rolb
mov
cmpsb
mov
data16
aaa
rolb
int3
mov
es
in
jnp
sub
inc
das
add
pop
daa
add
mov
pop
or
cmp
xchg
dec
sti
movsl
daa
scas
pop
mov
shlb
imul
test
xor
mov
mov
sbb
sahf
push
inc
mov
push
xor
inc
or
data16
push
inc
adc
test
out
ss
rcr
popw
jle
ss
in
dec
test
sahf
jl
addr16
or
or
dec
into
xchg
mov
ja
cs
jo
aaa
test
int3
sbb
hlt
out
push
pop
cld
data16
int3
mov
scas
push
out
rcrb
test
rclb
adc
mov
repnz
rclb
mov
mov
mov
aaa
and
jecxz
xor
nop
fdivp
lea
mov
stos
pop
jl
pop
mov
imul
mov
jnp
fadds
out
stos
xor
push
cmp
popf
into
rcrb
mov
sahf
fnstcw
data16
inc
pop
imul
cmpsb
cmpsb
mov
xchg
push
in
pushf
push
insb
push
dec
sub
data16
jbe
xchg
rcr
or
push
push
pusha
fwait
lods
popf
into
movsl
data16
push
sbb
dec
mov
and
cmpsl
outsb
add
add
fcoml
xchg
dec
in
popa
mov
jbe
test
rcrl
mov
loopne
call
jle
jo
scas
mulb
loopne
xchg
outsb
xor
enter
jo,pn
sbb
mov
mov
pop
adcl
sbb
xor
cmp
outsb
out
hlt
ss
es
xor
push
mov
mov
mov
loop
out
sbb
adc
inc
imul
pop
addb
int3
mov
ficoml
mov
push
mov
cmpsb
movsb
xchg
into
xor
mov
or
pop
daa
movsb
imulb
dec
push
inc
and
sbb
add
fs
add
nop
decl
insb
jmp
add
add
dec
add
inc
add
inc
add
dec
add
add
insl
add
pop
inc
sbb
bound
mov
lods
mov
pop
push
and
pop
dec
aaa
push
pop
out
mov
stos
inc
pop
lcall
mov
test
xchg
push
loop
push
mov
iret
pop
inc
mov
mov
push
xchg
dec
pop
jnp
sbb
or
inc
push
pop
push
cs
and
inc
push
cs
and
xor
inc
sbb
inc
dec
testb
sub
sbb
inc
push
dec
xchg
sbb
add
pop
movsb
fwait
or
inc
insb
sub
jmp
push
xchg
movsb
aad
insl
lret
jae
mov
incb
incl
iret
movb
sbb
xor
sbb
add
pop
mov
addb
jb
jnp
sar
fldl
cld
int
cmp
clc
aas
push
pop
jmp
shl
int
cld
add
pop
or
fisttpl
clts
aas
jg
push
xchg
addr16
adcl
pop
rorl
mov
pop
jo
pusha
data16
pop
in
roll
mov
fisubrl
jg
add
lcall
ficompl
in
xor
rolb
loopne
leave
idivl
lock
sbb
pop
pop
aas
out
outsb
push
cs
xchg
pop
stc
into
inc
and
pop
std
xchg
add
push
mov
xor
cmpsb
jns
data16
jg
sbbb
add
jo
cmp
shll
rolb
mov
nop
add
data16
lock
xor
push
cwtl
pop
nopl
iret
or
xor
jg
imul
jmp
cmp
iret
jb
mov
add
add
cmp
and
add
ja
ucomiss
dec
pop
outsb
es
and
pop
cs
out
clc
lock
aas
rcrb
test
add
cs
sbb
outsb
clc
popl
adc
nop
push
popa
addr16
in
rorl
add
pop
sbb
stos
dec
test
fcompp
daa
inc
push
push
cs
add
addr16
pusha
cmpsl
pop
in
les
stos
sbb
test
xchg
inc
aas
push
mov
out
mov
cs
inc
jne
addr16
bound
pop
cld
push
cmp
fsubrl
mov
jb
jb
pop
lock
push
mov
and
mov
inc
cs
lret
idivl
pop
sbb
push
sub
inc
add
mov
addl
loope
pop
and
xor
push
sbb
cmp
xor
in
adc
je
ret
roll
lock
out
cmpsb
xor
jl
sbb
push
sbb
mov
je
loopne
shll
and
jmp
in
push
or
iret
scas
fldl
adc
add
and
add
push
imul
add
xor
add
dec
push
imul
subl
imul
jbe
mov
daa
sbb
cmp
and
cs
and
xor
lahf
and
daa
and
out
pop
mov
or
dec
push
dec
push
mov
in
movb
daa
dec
fucomi
out
lret
adc
push
fidivl
sub
daa
dec
sub
or
dec
inc
daa
sbb
fiadds
push
es
push
or
sbb
mov
inc
push
cmp
mov
sbbl
sbb
cmp
mov
xor
and
dec
mov
inc
push
movsl
daa
stc
mov
push
push
aas
push
xor
mov
pop
xor
sub
cmp
aas
js
dec
and
jbe
in
fsts
lds
movaps
push
cmp
mov
mov
push
cmp
rcll
push
xlat
out
test
push
lret
push
and
mov
or
push
daa
mov
daa
push
daa
push
sbb
mov
stos
addr16
fnsave
ja
testl
xchg
inc
inc
inc
or
in
out
mov
mov
scas
dec
push
pop
daa
or
scas
daa
inc
aad
push
pop
xchg
ret
stos
dec
dec
pop
daa
mov
and
pop
dec
out
in
pop
leave
add
push
incb
das
roll
add
clc
daa
add
outsb
or
daa
add
mov
dec
jnp
repz
or
jo
push
ja
daa
aas
mov
cwtl
sbb
shl
insl
adc
inc
shll
xor
es
add
xchg
jbe
xchg
daa
lahf
in
arpl
lahf
cmp
mov
repnz
out
fs
add
mov
cmp
push
fisubs
mov
mov
mov
fucomi
es
lret
jmp
lcall
es
aaa
push
add
jle
xor
xchg
push
cwtl
in
repz
mov
jo
test
adc
push
rolb
sbb
inc
xchg
mov
mov
rorl
stos
movsb
sub
pop
repz
int
pop
aas
xor
jnp
idivl
cmpsb
arpl
aas
cs
bound
ss
movsb
inc
sub
push
cld
ffree
push
xor
cmp
cmp
es
sub
sbb
data16
inc
push
shll
mov
mov
daa
and
loope
shrl
fsubrs
add
sub
sbb
jmp
dec
push
adc
mov
pop
xor
dec
xchg
pop
sub
subl
adc
sbb
mov
xchg
into
jo
test
adc
xor
or
sub
popf
ja
cmp
sbb
mov
dec
sbb
cmp
daa
cmpsb
xor
outsb
call
and
divl
sbb
daa
fsubrs
fldt
push
daa
dec
xor
dec
xor
mov
daa
dec
daa
dec
daa
fcmovu
sbb
clc
dec
jne
dec
sarb
popa
out
push
in
dec
lret
dec
rorb
pusha
out
aas
sbb
xor
stos
shrl
lahf
mov
pop
roll
pushl
inc
push
push
mov
into
pop
mov
aas
orl
bound
repz
xchg
push
movsl
aaa
mov
and
dec
ret
testb
push
fcompl
sbb
outsl
inc
push
cmp
ljmp
push
push
mov
push
xchg
mov
push
adc
jae
xor
and
cmp
mov
es
loopne
ljmp
es
or
push
sbb
mov
popf
mov
mov
rcr
daa
aaa
sub
or
and
sub
add
cltd
stos
xchg
mov
mov
cmp
int3
sub
insb
mov
into
jbe
les
push
and
lds
sbb
aaa
outsb
clc
fdivl
push
push
mov
push
dec
andb
xchg
add
cmp
mov
xchg
and
push
and
push
iret
and
adc
adc
adcb
pop
addr16
shll
popf
and
cwtl
xor
mov
xor
cld
lret
xor
pop
mov
lock
jmp
xchg
orl
pop
or
repnz
push
and
test
pop
mov
add
iret
and
pop
mov
lcall
sbb
imul
mov
pop
add
ja
int3
mov
pop
and
or
lods
mov
sbb
outsl
jle
sahf
je
outsl
and
in
popf
pop
push
and
jbe
insb
rolb
push
xchg
outsb
ret
rcrl
sbb
fiaddl
jne
push
push
push
ds
mov
pusha
pusha
xor
or
cmp
sbb
and
push
push
lahf
sahf
mov
push
mov
jb
jle
push
jbe
mov
xor
ss
je
push
lods
cmp
dec
add
addr16
outsl
sahf
push
fcmove
xor
fwait
addr16
or
sub
adc
inc
pop
fwait
or
cmp
imul
addr16
xor
and
add
ret
sub
mov
popa
shll
push
jb
lcall
mov
push
xor
dec
xchg
mov
ficompl
cmpsl
pop
push
add
aaa
sub
sub
dec
mov
scas
outsb
adc
imul
adc
xlat
ficoml
bound
push
lret
stos
shlb
or
sub
shll
push
push
arpl
sub
xchg
or
aam
or
inc
in
or
sbbl
and
jmp
adcb
mov
cmp
jb
push
ficoml
shll
rorb
cmpsb
sbb
insl
push
or
inc
sbb
orb
ret
sbb
adc
inc
ficoml
cmpsl
dec
xlat
jo
arpl
or
pop
lret
dec
xchg
jnp
cmpsl
push
fldl
jg
adc
je
pop
mov
frstor
pop
sbb
flds
pop
or
cmpl
out
add
mov
inc
pop
push
push
inc
cmp
insb
push
mov
sub
arpl
imul
sbb
sub
xchg
es
ret
xor
dec
pop
insb
jo
ss
andb
jg
cmp
gs
mov
insb
or
inc
adc
adc
sub
pop
push
push
les
and
sbb
push
add
jbe
popa
pop
sub
divl
xor
mov
xchg
add
inc
push
pop
add
mov
add
test
ds
xor
daa
jno
loop
jne
pop
mov
jne
mov
add
or
popa
adc
loopne
jmp
push
rolb
jle
insl
xlat
scas
pop
or
imul
jg
rclb
add
push
pop
mov
mov
insb
push
add
ret
call
cli
popa
dec
and
and
out
sbb
push
push
dec
mov
out
lahf
daa
cmp
jle
mov
outsb
xchg
andl
fstpl
or
bound
inc
xlat
xor
push
stos
out
push
lcall
lods
jp
je
mull
loope
pop
sub
ret
jbe
lahf
sub
out
adc
fs
outsb
dec
rcr
adc
xor
xchg
and
add
pop
pusha
or
inc
push
mov
pop
and
insl
in
xorb
stos
mov
add
push
imul
mov
dec
shll
push
or
sub
xor
add
pop
insb
rolb
pop
jo
xchg
and
cmp
jns
xchg
push
add
faddl
mov
push
xor
or
or
push
or
or
jae
es
inc
ret
add
push
inc
dec
out
add
add
push
inc
bound
push
xor
mov
push
adc
outsb
adc
cmp
dec
or
add
push
mov
add
outsb
dec
test
adc
andl
bound
in
lock
add
and
push
jb
push
pusha
cmp
xchg
add
insb
or
frstors
mov
ret
push
add
movb
dec
fmuls
mov
dec
iret
xor
jo
into
bound
push
dec
ret
popf
icebp
in
jns
sbb
cmp
stos
adc
daa
adc
xchg
dec
int3
sti
je
cmpsb
mov
mov
push
mov
sahf
divl
mov
xchg
push
inc
stos
aaa
inc
adc
cmp
into
cmpsl
arpl
mov
pop
dec
add
mov
sti
imul
xlat
xor
push
xlat
repnz
xor
or
jb
dec
out
push
lods
jne
dec
xor
aad
mov
fildll
sbb
mov
add
cmc
mov
xchg
data16
andb
and
popa
iret
out
cmp
xor
sbb
loop
outsl
mov
jo
add
push
sbb
imul
lcall
sti
or
mov
sbb
clc
push
jae
shlb
dec
pop
mov
add
xor
and
adc
push
pusha
push
push
and
xchg
sbb
and
imul
ds
jbe
popa
ret
fcoms
jecxz
shrl
cmpsl
ja
test
stos
pop
mov
and
xlat
cmpsb
mov
fs
fcoms
cmpsb
pop
sbb
arpl
sub
je
test
out
and
xchg
jmp
push
shl
aam
imul
scas
scas
push
mov
mov
mov
xchg
pop
out
stos
out
push
cmp
sub
inc
xor
je
add
sub
inc
repz
daa
xchg
jae
outsb
push
or
mov
dec
out
and
repnz
push
sbb
sub
pop
sbb
andb
add
je
jb
pop
mov
inc
cli
iret
fimull
scas
push
inc
sti
sub
fisttps
push
test
je
mov
or
mov
roll
xor
out
lods
flds
pop
xor
xchg
add
outsb
dec
add
insl
iret
pop
xor
sbb
jg
sub
shrl
sarb
rcpps
orl
pop
insb
roll
inc
pop
fistl
pop
loop
xchg
lret
out
adc
mov
lret
sbb
pop
jo
das
data16
push
or
push
rcrb
adc
jnp
je
add
aas
mull
mov
push
test
jae
xor
pop
das
inc
addl
les
lahf
pop
pop
xchg
arpl
ret
push
jne
inc
mov
inc
imul
das
inc
cmpsb
sub
outsl
aas
daa
mov
and
mov
sbb
ja
stos
inc
sbb
addl
or
mov
jmp
lds
ret
push
pop
xor
jne
loop
inc
push
out
sbb
aaa
and
mov
sbb
outsb
adc
inc
adc
push
scas
lds
or
ljmp
fadds
mov
push
mov
insl
add
mov
ret
ret
and
sbbl
bound
pushl
shrb
sub
ja
pushw
or
push
dec
lds
pushf
fisubrl
push
push
pop
cmp
stos
popa
outsl
or
jbe
push
cmp
adc
mov
sbb
fldt
imul
sub
addb
shrl
es
inc
push
push
mov
lods
inc
add
les
mov
mov
stos
xorl
mov
mov
lods
cmp
daa
loop
cmp
add
popa
lahf
sbb
inc
pop
adc
ljmp
out
dec
inc
add
ss
outsl
xor
push
sbb
and
xchg
push
lods
aas
mov
insb
xchg
xor
adc
popa
sbb
add
mov
xchg
jb
lcall
and
pop
mov
sub
jae
out
shrb
cmp
fldt
dec
sub
mov
ret
arpl
sti
jae
das
fsubrl
mov
mov
adc
movsl
pop
dec
pop
aas
sbb
ret
dec
and
lods
pop
inc
daa
inc
fwait
je
jns
jne
ja
or
inc
ret
xchg
orb
add
daa
push
or
jle
jae
adc
sbb
rcrb
popa
ret
jno
scas
frstor
fnstenv
lret
daa
jne
lods
adc
scas
stos
adc
popa
mov
int
or
inc
push
sub
mov
xlat
push
push
jb
xchg
arpl
cmp
stos
fstpt
jmp
js
push
in
pop
and
psllq
push
pop
pop
mov
bound
push
aam
fwait
or
outsb
cwtl
mov
rcpps
fs
sub
dec
xchg
push
adc
add
add
add
xor
sub
cmp
sbb
inc
repnz
add
shrb
add
adc
push
push
js
inc
and
push
mov
push
pop
sarb
mov
rcrl
pop
xchg
or
ds
or
insb
sbb
aas
iret
inc
and
jecxz
and
pop
dec
fmuls
cmp
xlat
bound
dec
arpl
push
mov
or
xor
xor
cmp
add
jbe
inc
jo
push
jb
rcrl
jmp
and
out
cs
popa
xor
add
addb
bound
xor
inc
and
or
and
push
dec
sbb
jb
insb
insl
shll
and
pop
imul
and
test
pop
xor
pop
loopne
sbb
mov
js
mov
iret
sub
mov
jecxz
inc
adc
pop
ret
lahf
fidivrs
push
xchg
mov
loop
ljmp
and
xchg
mov
mov
cmc
or
mov
mov
xor
scas
jae
adc
inc
mov
or
or
jp
outsb
adc
sbb
cmp
popa
add
scas
aam
push
repz
es
arpl
in
sbb
fistps
jbe
mov
mov
push
ljmp
or
dec
dec
push
shll
nop
adc
cmp
add
add
dec
rorb
xorl
push
lahf
bound
scas
scas
jbe
dec
test
jg
add
sbb
mov
push
push
push
nop
or
pop
je
mov
ljmp
cmp
inc
push
rolb
jmp
cwtl
add
sahf
notl
iret
dec
or
stos
pop
lds
sbbb
xor
movsl
cmpsb
push
pop
sbb
sbb
arpl
out
xchg
add
pop
xchg
fistl
outsb
xor
cmp
repnz
cli
push
stos
push
shrb
stos
add
inc
lret
inc
dec
jg
adcb
jnp
inc
mov
daa
and
jg
inc
in
test
sbb
adc
push
stos
sub
adc
adc
jne
frstor
sbb
imul
ret
inc
es
push
mov
imul
push
or
icebp
rcrb
mov
mov
pop
dec
out
out
adc
loopne
repnz
adc
push
aaa
cli
jae
or
jo
cmpb
push
adc
or
ret
mov
fistl
or
outsb
bound
cmp
xchg
scas
inc
stos
das
ja
pop
or
and
jae
add
popa
jecxz
adc
ljmp
pop
and
mov
push
add
mov
loopne
xchg
pop
jnp
adc
mov
mov
or
xor
outsl
stos
inc
and
push
inc
dec
mov
dec
jg
add
outsl
sbb
push
pop
jns
adcl
pushf
xor
popa
and
mov
pop
inc
cmp
jmp
loopne
rorl
mov
or
mov
pop
mov
cmp
mov
out
xchg
jo
adc
js
xor
xchg
push
pusha
sbb
xchg
jne
arpl
dec
sub
adc
mov
ss
jg
ljmp
xchg
cmp
aaa
mov
pop
fwait
pushf
out
cmp
add
add
jmp
mov
punpcklwd
sbb
push
out
jnp
jno
inc
add
sbb
or
adcl
and
js
mov
adc
push
ret
add
dec
and
xor
mov
add
subb
xchg
test
shll
and
jg
push
push
add
in
outsl
sub
dec
sbb
fisubrl
cmp
inc
adc
jmp
add
adc
mov
push
in
or
adc
mov
jb
insb
push
ja
out
outsb
push
jo
dec
adc
inc
loopne
xchg
orb
mov
inc
jns
or
sub
pop
push
push
sbb
pop
jp
jnp
shrl
dec
dec
imul
lcall
xchg
mov
rclb
xchg
int3
adc
daa
movsl
adc
xchg
pop
ret
ficoms
or
js
cmc
xor
imul
push
out
aaa
popa
sbb
inc
insb
and
adc
pop
sub
and
mov
mov
aas
out
fsubrp
jns
stc
sbb
push
addr16
daa
xorl
lret
cwtl
or
cmp
sub
xchg
add
add
adc
mov
add
fs
or
dec
add
push
push
rclb
shlb
add
sub
adc
push
ficomps
insl
inc
inc
adc
jns
inc
dec
cmp
push
inc
dec
adc
adc
nop
xor
cmp
daa
sub
pop
mov
jae
data16
data16
adc
jne
push
or
jns
aam
adc
and
adc
inc
lret
xchg
inc
jo
ds
dec
call
pop
cmp
push
adc
inc
jo
pop
repnz
mov
push
jae
sbb
push
insb
lcall
cmp
clc
js
lret
lods
outsl
mov
xor
sub
mov
xchg
xlat
sarb
scas
xchg
inc
push
or
push
cmp
add
addb
pop
sub
inc
sub
sub
xchg
push
jno
mov
mov
pop
and
push
insb
int3
inc
test
pop
sbb
aam
addl
ret
arpl
sbbb
sub
mov
cmpsl
pop
arpl
inc
adc
cmp
push
es
fistpl
xchg
sbb
mov
and
or
inc
add
outsl
orl
sbb
xor
ret
cs
leave
push
push
sbb
or
fisubl
ds
fcompl
outsb
fs
sbb
mov
lcall
dec
rcll
outsb
jno
insl
subl
pop
fists
cmp
sub
jns
addb
sbb
jbe
outsl
mov
sbb
inc
outsl
imul
sbb
jb
pusha
and
xchg
mov
inc
stc
xor
jnp
bound
sbb
pop
rol
sbb
sarb
dec
imul
pop
mov
cwtl
dec
xorb
push
sbb
lret
and
add
fs
mov
sbb
inc
sub
dec
mov
daa
push
popf
imul
fldenv
aas
fmul
and
nop
add
add
sbb
mov
je
xchg
xorb
dec
shll
adc
jbe
lea
negl
sub
addr16
and
in
push
lods
imul
pop
push
cmp
in
mov
jnp
out
or
mov
test
or
pop
mov
addl
mov
cmpl
sbb
sub
jo
jb
fisttpll
inc
push
popa
inc
pop
psrld
add
mov
aaa
pop
jp
fs
pusha
sub
sbb
arpl
sub
sbb
cld
movsb
adc
notb
cwtl
pop
or
push
cmpsl
xor
cmpsb
iret
dec
xchg
fadd
mov
loope
xor
inc
arpl
sub
mov
sub
xor
push
movsl
cmpsb
inc
ja
xchg
xor
fistpl
inc
popa
sbb
mov
mov
mov
sbb
sbb
xor
popa
cmp
sbb
mov
xchg
and
add
mov
add
xchg
pusha
inc
out
mov
sbb
test
lea
mov
xchg
mov
dec
inc
sbb
mov
lea
mov
jno
fwait
or
xchg
in
push
pop
push
sub
jo
rorb
adc
mov
mov
arpl
adc
dec
push
pusha
pop
sub
adc
gs
ja
clc
pusha
ret
mov
push
xor
scas
test
cmp
pop
ja
adc
push
dec
sbb
inc
push
dec
bound
cmp
inc
sub
add
movsl
mov
and
dec
xor
push
aad
sti
mov
inc
pop
jae
push
inc
subl
mov
cmpl
fcomps
sub
in
adc
mov
jno
mov
push
push
or
pop
sub
test
and
and
and
mov
shrb
ja
outsl
lret
adc
xor
daa
and
in
or
or
push
pop
sub
inc
and
or
mov
insl
ja
and
jo
add
jecxz
and
es
sub
fsubs
iret
mov
popf
mov
jo
add
xchg
int
mov
enter
shll
xchg
lahf
arpl
insb
jecxz
jo
and
dec
jb
or
xorl
daa
faddl
jo
lcall
sub
and
inc
notb
push
xor
in
jne
and
mov
enter
lret
inc
dec
inc
movsl
adc
sbb
dec
mov
fimull
int3
jmp
xchg
xchg
and
add
aad
inc
inc
js
xchg
nop
adc
xor
sbb
jo
adc
cltd
inc
sbb
rclb
mov
subl
push
loope
sbbb
mov
xchg
mov
sub
add
mov
inc
inc
mov
xor
jne
daa
or
jo
adc
inc
in
outsb
pop
in
adc
mov
xchg
push
cmp
inc
lret
insl
push
sub
arpl
push
cmp
pop
cmp
inc
jge
negl
imul
dec
xor
and
xchg
pop
ret
inc
push
xor
popa
sub
mov
inc
adc
mov
mov
call
negb
rcll
fdiv
fsubs
in
dec
pop
ret
fwait
sbb
add
sbb
popa
mov
dec
inc
shrb
add
xor
std
stc
fsub
xor
mov
sbb
inc
fstl
jnp
add
inc
adc
mov
add
sbb
aam
xchg
sub
xchg
sub
popa
jne
lahf
jmp
jb
and
add
jecxz
adc
mov
push
cmp
push
and
test
insl
xchg
and
adc
jp
mov
or
push
subl
or
mov
xchg
and
nop
cmpsb
dec
add
les
jecxz
mov
es
jbe
in
sub
jne
sub
pop
data16
inc
or
loopne
and
scas
sbb
icebp
push
inc
jno
inc
push
dec
imul
xor
lret
mov
sbb
sub
jne
and
push
insl
dec
mov
imul
jno
and
adc
je
lods
inc
mov
fld
bound
or
fsubp
mov
jne
sbb
mov
out
pop
dec
mov
das
sbb
in
jno
fldenv
dec
jne
and
addr16
fdivl
test
int
je
or
gs
lahf
stos
jno
jo
jno
xchg
fs
incl
cmp
dec
adc
add
dec
adc
aad
lcall
push
xor
or
sbb
xor
sbb
push
inc
mov
and
bound
pop
ljmp
sbb
mov
mov
add
xor
adc
fadds
orl
outsl
mov
mov
or
dec
push
sarb
pushf
daa
fisubrl
or
adc
xchg
fs
arpl
or
and
push
jmp
jmp
lods
pusha
sti
sub
int
out
pop
aam
push
stos
cmp
movl
sbb
rclb
pop
bound
sbb
pop
ds
add
outsl
xor
movsb
inc
andb
add
pop
sub
pop
pop
imul
mov
insl
inc
aad
shrl
pop
aam
orl
adc
xor
push
adc
or
jne
fiaddl
pop
and
mov
xlat
xchg
data16
dec
fwait
and
push
adc
shrl
xor
cmp
xchg
cmc
inc
jae
push
and
pop
je
sbb
popa
cmp
ja
insb
inc
cwtl
sbb
jne
jno
jb
ret
sbb
out
repz
psubusb
pop
pop
push
adc
and
jo
sub
and
fildll
sbb
imul
jge
xchg
mov
jbe
and
jb
sbb
jnp
inc
and
xor
jne
cmp
out
stos
les
pop
jo
nop
pop
dec
stc
inc
pop
addb
out
dec
xor
adc
mov
pusha
and
sbb
or
sbb
bound
inc
cltd
stos
or
lcall
rcl
jno
cltd
lret
rcll
and
and
sbb
xor
inc
imul
daa
or
sub
cli
sub
mov
mov
sub
push
mov
dec
add
xchg
in
adc
aaa
xchg
cltd
sbb
mov
adc
and
and
pop
mov
movsl
outsl
cmp
mov
jnp
inc
mov
add
add
repnz
ljmp
in
orb
sbb
add
and
stos
flds
sbb
and
pop
add
adc
push
xchg
dec
sbb
push
fcoms
aad
pop
mov
jp
fs
ffree
and
in
shrb
insl
sbb
pop
push
and
dec
nop
lea
pop
lods
test
adc
and
sbb
push
lods
and
jmp
stos
cmpsl
push
xorb
les
movsb
repz
sub
int
ficompl
ss
adc
jg
nop
xchg
push
jo
call
dec
movl
shlb
jg
and
pusha
push
mov
mov
pop
sahf
dec
dec
lea
popf
inc
push
cmp
add
mov
cmpsl
stc
cmpl
pop
add
cmpsb
jle
lcall
xor
sbb
aas
stc
add
or
or
adc
cmovb
sbb
add
or
setnp
stc
add
or
or
or
pop
lock
add
inc
adc
inc
xor
sbb
sbb
add
push
push
fucomip
fists
or
push
or
or
or
or
or
or
adc
decl
and
pop
sbb
inc
push
dec
and
lock
or
or
or
sysret
and
test
jg
adc
or
push
es
sub
sub
jle
or
or
cmp
adc
push
jns
push
adc
sub
les
sub
adc
in
outsb
imull
gs
push
pop
adc
shll
out
inc
pop
pop
and
sub
sbb
arpl
cmp
pop
outsb
lock
jg
add
lock
add
adc
aas
adc
push
push
pop
adc
pop
lock
pop
paddd
call
push
sbb
adc
sbb
adc
dec
sub
das
push
mov
pop
lock
wbinvd
sub
or
sub
sbb
xor
sub
push
aaa
clc
adc
add
cmp
pusha
lock
faddl
push
or
push
mov
sub
sbb
jg
sbb
sbb
and
push
lock
sbb
jp
lock
jge
or
pop
add
xchg
add
or
add
push
sbb
lock
add
or
sti
incl
inc
pop
adc
or
add
orb
sti
sti
out
mov
pop
add
add
sbb
inc
or
adc
fbstp
jne
or
adc
pop
xchg
adc
adc
push
adc
mov
sub
lds
sbb
push
std
out
imul
adc
sbb
and
xchg
clc
and
push
and
sbb
push
mov
jns
shll
adc
sbb
add
adc
inc
adc
or
cltd
adc
into
jbe
dec
sbb
orl
stc
pusha
fdivs
syscall
sbb
xchg
ljmp
push
outsl
adc
or
insl
or
lahf
int
or
adc
inc
or
cli
pop
pusha
inc
xor
sbb
add
int
add
in
testl
lock
add
cmp
mov
add
add
or
xlat
mov
add
ss
sub
outsl
incl
dec
dec
jae
cmp
daa
adc
xor
adc
cmp
push
xlat
adc
ss
adc
mov
lcall
jae
aaa
lock
add
inc
add
aas
aaa
in
lcall
cld
and
mov
inc
push
pop
adc
adc
sub
adc
adc
xor
idiv
inc
mov
sbb
and
sbb
adc
mov
decl
sbb
cmp
sub
sbb
cmp
inc
add
mov
dec
sbb
cmp
cmc
jle
cmp
pop
adc
pop
in
push
sub
adc
inc
call
mov
adc
pop
sub
nopl
pop
js
jnp
pop
add
or
or
loopne
jbe
push
add
cmp
add
das
and
and
push
pop
pop
push
xor
push
adc
cmp
mov
and
sbb
adc
pop
adc
sbb
adc
push
adc
or
push
pop
sbb
adc
adc
and
sar
or
adc
lock
sub
outsl
icebp
mov
and
add
push
sbb
inc
pop
sbb
add
add
adc
or
add
add
push
fmull
jg
pop
jl
ss
ficomps
fmuls
sbb
ss
push
add
iret
add
xor
push
add
sbb
sbb
and
inc
insl
inc
sbb
and
cmp
lahf
jbe
fsubrs
cvtps2pi
adc
adc
jg
jg
jnp
and
xor
stos
xor
cmp
out
add
lahf
sbb
sub
loopne
and
iret
leave
or
fwait
add
sarl
inc
sbb
jno
inc
adc
sti
fistpl
jne
pusha
xlat
test
pop
push
pop
or
adc
cmp
sub
push
ja
sub
add
add
sbb
ds
addr16
aaa
imul
mov
adc
pop
add
and
inc
inc
add
add
sbb
sbb
add
xor
ret
arpl
pusha
dec
movsl
jnp
cmpb
lea
jno
mov
inc
daa
adc
sbb
and
jge
popa
sbb
das
sbb
pusha
cmp
sbb
cmp
pop
push
xor
addb
push
add
mov
jle
aam
push
cmp
inc
sbb
test
sbb
pop
pop
pop
dec
dec
push
lock
add
clc
cmpsl
mov
sub
jmp
pop
push
outsl
pop
adc
jle
decl
mov
andl
or
loopne
or
add
xor
dec
add
lock
mov
adc
push
popf
into
test
sub
push
cmpl
sbb
push
push
push
push
sbb
or
dec
xor
fnstcw
sbb
call
push
pop
mov
push
xor
jbe
and
inc
pushl
cmp
dec
mov
lock
lahf
add
popf
pop
and
or
pop
loopne
xor
sub
and
pop
mov
jp
jmp
unpckhps
xor
pop
inc
cmp
xchg
push
pop
inc
inc
or
xchg
and
inc
sbb
jmp
adc
add
push
or
push
add
or
pop
shlb
lock
sub
sub
sbb
cmp
add
or
ud2
or
xchg
or
fistl
das
or
pop
or
decl
orl
sub
das
cmp
inc
or
sbb
sbb
pop
aaa
outsb
or
pop
or
fmull
adc
and
push
adc
mov
or
or
or
adc
cmp
push
sbb
add
or
pop
or
adc
or
daa
add
or
in
scas
adc
popa
mov
rcrl
cmp
push
lock
dec
mov
push
sbb
inc
inc
sbb
sbb
into
cs
jo
daa
mov
xchg
adc
cmp
sbb
adc
or
rcrl
jmp
sub
mov
adc
push
adc
pop
mov
arpl
push
sbb
pop
fcmovbe
push
fcoms
adc
adc
mov
pushf
sbb
jb
mov
bound
into
jno
adc
push
filds
mov
dec
insl
ret
shl
adc
shll
sub
lea
mov
push
sbb
js
adc
sbb
idiv
ljmp
xor
dec
pop
and
popa
add
stc
jo
adc
ljmp
mov
pop
adc
add
sti
std
hlt
cmp
movhps
or
or
sbb
adc
aad
push
and
ja
adc
ljmp
add
adc
and
jae
sub
pop
sbb
and
jg
aas
push
sub
inc
cltd
mov
sbb
dec
jg
jno
test
incl
sbb
and
sub
dec
push
sbb
sub
sub
decl
dec
or
push
push
push
ja
cmp
sbb
inc
push
cmp
das
push
inc
sbb
incb
push
aas
and
arpl
and
cmp
push
lock
add
cmp
leave
sti
add
ss
push
sbb
cmp
mov
add
push
pop
inc
call
push
pop
xor
sbbl
arpl
pop
out
out
adc
ficoms
xor
pop
into
int
stos
add
xchg
xor
dec
cmp
icebp
dec
push
adc
sbb
punpcklbw
cmovne
inc
adc
mov
add
dec
int
dec
add
sbb
xor
jl
adc
dec
pop
test
and
lods
daa
push
cmp
and
pop
inc
add
paddd
cmp
lock
inc
adc
and
add
add
jg
ret
cs
sub
and
test
jg
push
sbb
mov
ret
adc
orb
js
pop
mov
fists
and
and
and
and
jo
mov
pop
mov
pop
orl
and
bndstx
add
into
add
or
adc
sbb
shr
pop
es
adc
aas
add
mov
or
sub
paddd
add
xchg
add
jne
sbb
lock
push
push
mov
bound
setne
inc
pop
or
cmp
or
add
icebp
add
push
push
or
or
push
sbb
loopne
jp
or
add
sub
or
push
or
adc
insb
or
mul
in
jge
inc
or
push
or
or
dec
pinsrw
or
rcrb
dec
push
jg
dec
das
push
and
sub
sbb
scas
inc
aad
aaa
cmp
pop
movsl
sbb
das
adc
sub
add
or
cmp
sbb
xchg
out
adc
sbb
aas
sbb
xchg
xchg
pop
fs
xor
sbbl
or
pop
add
cmp
or
push
dec
popa
nop
pop
mov
cmp
xlat
pusha
mov
imul
push
add
adc
addr16
add
mov
pop
or
pop
push
imul
aas
ss
jge
std
xor
ss
lock
mov
jmp
adc
loope
adc
sbb
push
or
jnp
sti
sahf
testb
cmp
sub
cmpsl
add
outsl
pushl
and
push
je
xchg
add
adc
cmp
push
decl
or
or
inc
ss
and
jns
loopne
jmp
lcall
decl
dec
xor
xor
jns
mov
cmp
ljmp
and
dec
mov
push
and
out
cli
mov
dec
fwait
inc
in
xchg
xchg
adc
popa
sbb
out
icebp
pop
add
popa
aaa
push
ret
jnp
push
add
pop
sti
push
cmp
inc
sub
jp
enter
addb
sbb
je
sbb
xchg
jae
push
mov
data16
decl
jne
dec
es
xor
and
jns
insl
out
sbb
sbb
pop
push
lock
lock
add
das
push
and
mov
lcall
sbb
add
lahf
push
adc
sahf
adc
dec
add
incl
ss
push
sub
int
pop
pop
jl
or
pushl
mov
outsb
jne
pop
lock
das
sti
movsb
adc
or
pushl
add
pop
sbb
jg
cmp
pop
dec
adc
femms
sub
mov
pop
enter
jnp
test
jp
ss
jmp
andb
push
xor
or
stos
loope
pop
sbbb
xor
inc
push
inc
rcrl
sbb
add
adc
jns
loop
adc
adc
adc
add
test
out
push
and
pop
adc
test
popf
mov
adc
sbb
sbb
mov
fs
cltd
sbb
xor
sub
lahf
addb
jp
dec
aas
cld
decl
xor
mov
adc
dec
aas
and
push
jnp
xchg
sbb
inc
nop
loope
jmp
pop
cmp
sub
pop
and
pop
and
dec
sub
imul
or
or
or
sbb
adc
sub
aam
xor
sbb
mov
mov
fildll
or
push
adc
aas
sbb
mov
add
push
xchg
jg
pop
push
adc
adc
mov
push
pop
sub
movsb
inc
mov
js
pop
and
dec
loopne
or
mov
add
testl
sbb
sbb
inc
jp
inc
aas
xor
mov
jno
shl
or
cmp
or
lods
dec
adc
adc
sbb
in
adc
and
mov
inc
pop
xchg
xor
xchg
dec
insb
or
mov
pop
pop
pop
dec
fs
test
adc
or
or
adc
call
fiaddl
cmp
inc
inc
and
insl
add
xlat
add
dec
and
adc
insl
inc
sub
xchg
inc
jnp
cwtl
mov
aas
fldt
cmp
add
xor
sbb
mov
pop
cmp
pop
cmp
sub
cmp
lahf
dec
push
sbb
popa
cmp
dec
adc
xchg
pop
inc
sub
dec
arpl
cmp
dec
push
and
loop
movlps
pop
mov
clc
push
cs
insl
sub
push
dec
push
pop
sub
add
cmp
push
mov
das
loopne
dec
xchg
leave
cmp
unpcklps
sahf
cwtl
lock
jg
outsb
lea
jmp
push
xor
fs
pop
pop
pop
lock
pushf
pop
rorl
rorb
inc
or
push
es
shl
movl
dec
adc
pop
sbb
sbb
cmpb
pop
jae
sbb
add
dec
cmc
push
and
aaa
sbb
adc
sti
test
sbb
lds
add
cmp
pop
aas
xor
pop
imul
add
cmp
std
sbb
sbb
aam
xchg
pop
pop
and
push
int
and
add
adc
clc
and
cmc
sub
adc
pop
arpl
ficomps
and
insb
add
popa
add
and
xlat
dec
ja
sbb
or
pop
sbb
jbe
xor
and
and
mov
xor
mov
sbb
sub
mov
cmpsl
xlat
sbb
adc
or
and
mov
in
lods
cmp
add
daa
sub
adc
sub
dec
inc
stos
leave
cmpsl
test
xchg
imul
les
or
mov
adc
push
push
aas
sbb
or
xchg
pop
jne
adc
cmp
das
push
pop
sub
adc
rcll
pop
push
and
das
push
cmp
cmp
sub
test
or
adcb
mov
xor
testl
sti
sarl
add
mov
fnsave
mov
fmul
mov
imul
and
inc
movntps
pshufw
dec
cmp
pop
ss
and
sbb
push
inc
adc
dec
add
sbb
push
lock
cmp
adc
lock
add
push
add
push
addr16
repz
pop
test
das
bound
lods
lcall
push
sub
sbb
lock
push
das
push
push
ss
push
cs
or
call
lock
es
add
sbb
or
push
add
scas
and
sub
push
adc
push
and
adc
decl
sbb
pop
adc
int
push
sbb
mov
lods
or
andb
lcall
call
sbb
pop
cmp
or
pop
adc
ud2
pop
and
pop
or
ret
jg
lock
adc
and
cmp
push
add
pusha
std
adc
lock
or
pop
push
ret
loopne
adc
and
jno
lcall
or
inc
sbb
sbb
inc
sbb
jbe
xor
ljmp
sub
rcrb
push
or
inc
adc
test
lods
jo
sub
push
dec
inc
ucomiss
arpl
sbb
sub
adc
and
sbb
mov
lock
add
movsl
fiaddl
clc
setns
add
or
verw
push
and
mov
sub
add
cmpsl
lock
incl
leave
sbb
and
mov
inc
sub
cld
add
jmp
pop
jmp
inc
dec
das
xchg
or
add
cmovnp
xor
or
adc
mul
maxps
cmc
ret
or
add
push
adc
pop
jmp
inc
sbb
pop
clc
aas
mov
add
adc
pop
pop
pop
pop
jae
and
in
lahf
mov
and
or
lea
lcall
and
add
lock
add
call
adc
daa
js
aaa
dec
lock
add
sub
fimull
pusha
sub
sbb
aas
cli
and
and
add
sub
adc
lahf
lock
sar
add
and
xchg
or
adc
or
adc
and
loop
pop
popa
or
push
add
inc
jns
inc
add
sbb
pop
cmc
cmp
sub
inc
sbb
lock
shrl
push
pop
sub
lds
jg
lahf
xlat
jge
leave
sub
das
adc
pop
sbb
jnp
lock
adc
and
scas
or
rol
test
sbb
add
cs
pop
into
aas
cltd
orb
sbb
dec
clc
pop
add
adc
sub
popa
or
stos
pop
cmp
cmova
and
add
cmpsb
add
sbb
pop
cmp
add
xchg
mov
add
loope
push
and
adc
and
sub
dec
mov
movsl
and
outsl
iret
in
negb
push
and
and
adc
and
sbb
and
ffree
mov
adc
sbb
pop
or
sbb
adc
jg
sbb
add
ret
cld
xor
mov
fadds
adc
jbe
dec
adc
aas
push
scas
paddw
fisttpll
adc
jb
and
pop
jbe
imul
jo
arpl
test
adc
jle
in
scas
test
cmp
jg
lcall
data16
adc
lock
push
xor
inc
jge
in
xchg
push
jmp
loope
push
daa
fs
sbbl
add
in
inc
sub
adc
jle
cld
sbb
inc
imul
pop
xchg
pop
je
cli
mov
and
and
sarl
cmovnp
smsw
sub
jmp
repnz
sub
mov
lds
cld
js
lock
xor
adc
pop
lock
ss
jo
sub
xchg
sub
adc
dec
sub
sbb
test
adc
inc
sbb
ss
lods
out
or
xor
pop
adc
inc
and
insb
xorb
sbb
sub
push
sub
push
or
cmpsl
adc
xor
shr
jae
or
sbb
add
imul
insl
pop
arpl
bound
push
push
or
aas
add
add
out
and
adc
adc
pop
or
mov
idivb
jge
pop
jp,pn
jb
push
adcb
mov
or
je
mov
js
adc
push
push
sbb
adc
sbb
and
push
jne
xchg
adc
mov
mov
data16
sti
add
icebp
mov
movsb
imul
pusha
adc
rcrl
push
inc
or
das
push
cmp
adc
and
dec
pop
aas
ret
inc
dec
or
cmp
mov
push
sub
and
aas
lock
test
loope
cmp
push
inc
loopne
lock
sbb
movsl
adc
aas
aaa
loop
push
adc
cmp
xchg
insl
cmp
or
or
jg
dec
insl
aad
femms
test
loopne
pop
adc
adc
pop
pop
pop
or
adc
adc
pop
inc
jl
fisubs
jnp
adc
or
loope
pop
push
or
or
jnp
jg
or
push
and
sbb
push
cmpsl
sbb
or
or
add
test
push
adc
sub
or
push
or
out
or
or
and
or
pop
jmp
adc
rcrl
add
std
dec
cld
jg
push
sbb
sub
add
lods
lock
xor
lock
add
push
in
jecxz
jp
call
incl
push
and
sub
or
arpl
push
and
dec
mov
cmp
je
lock
add
lock
inc
lock
dec
aas
sbb
jmp
sbb
pop
popl
and
mov
xlat
mov
lock
imul
pop
cld
add
or
xchg
enter
add
sub
mov
and
lods
lahf
les
arpl
mov
clc
sti
pushl
xor
inc
adc
xor
daa
imul
mov
std
jle
pushf
add
adc
pushl
pop
adcl
adc
jo
mov
jmp
cmp
and
sahf
lock
inc
cmp
cmp
sub
imul
loopne
sbb
daa
sbbl
decl
adc
mov
xchg
lock
or
jl
pop
push
xor
fdivrp
or
and
out
and
jg
mov
addr16
daa
lock
call
lock
push
add
cmp
js
xchg
inc
or
lcall
fists
shlb
push
lock
add
lock
jg
and
and
outsl
lock
or
and
sbb
adc
aas
push
pop
clc
inc
addl
sbb
inc
add
and
mov
add
pop
adc
dec
inc
lock
mov
dec
add
cmp
xor
xchg
lock
add
aas
adc
ja
jge
loope
sbb
repz
xchg
scas
imul
mov
and
xchg
aaa
sbb
xor
shlb
ds
add
xchg
inc
sbb
push
add
or
subb
loope
nop
add
icebp
aas
imul
xor
pop
adc
pop
out
push
repz
add
and
or
add
test
rorl
sub
add
in
jo
arpl
test
push
sbb
or
pop
or
dec
mov
dec
dec
mov
cmp
push
mov
scas
push
imul
or
popf
jno
dec
push
aad
xor
jp
xchg
jo
leave
push
push
ljmp
and
daa
aaa
sub
daa
cmp
pushf
and
pop
xor
and
das
adc
std
cmc
incl
sbb
dec
jp
adc
and
and
mov
mov
sub
sub
imul
mov
adc
adc
out
shlb
or
sub
lock
icebp
or
push
and
add
pop
adc
pop
dec
jns
lcall
mov
and
loop
pusha
add
push
jnp
aas
adc
sbb
daa
xor
mov
or
mov
sub
fdivrp
pop
sbb
xor
pop
pop
mov
sbb
adc
es
ud0
cli
call
push
or
or
sub
pop
mov
outsb
inc
and
sbb
mov
jae
das
or
pop
xchg
das
sbb
or
sbb
jmp
lock
sub
mov
pop
sub
push
gs
or
rcrl
pop
sbb
sbb
repnz
cltd
jl
pop
sbb
or
dec
sub
xor
xor
sub
add
arpl
inc
or
sbb
push
test
ja
outsl
loopne
test
add
lods
and
pop
jmp
stos
pop
or
xchg
and
enter
mov
es
adc
sbb
xor
hlt
add
adc
xlat
and
pusha
sbb
jecxz
xor
in
dec
dec
and
sub
inc
push
arpl
cmp
jg
test
jmp
xor
cmp
sub
cmp
push
add
adc
adc
cli
lcall
aas
sub
femms
es
test
adc
push
and
cld
aas
test
sbb
bound
pop
and
ss
push
and
add
sbb
pop
ret
inc
sbb
push
adc
or
add
cmp
push
and
fldenv
fwait
sbb
incl
xlat
add
dec
scas
mov
loopne
add
test
inc
test
loopne
jmp
xor
sbb
stos
or
cmp
sub
adc
sub
or
sbb
fnsave
xor
adc
add
fs
aad
mov
aaa
push
add
jge
inc
sbb
inc
test
push
es
jg
xor
adc
push
das
or
js
push
and
add
xchg
cmp
aas
lds
and
sub
push
xor
icebp
lea
sbb
pop
inc
mov
xchg
pop
cmpsl
or
adc
imul
ja
push
adc
cmp
sub
or
sub
jno
idivl
jnp
and
and
sub
adc
mov
add
pop
inc
or
xchg
daa
add
cwtl
nop
adc
dec
pop
ret
add
sbb
sub
es
and
xor
jns
pop
nop
and
push
cmpb
xchg
jbe
ret
shr
imul
imulb
sub
sub
das
sbb
inc
clc
clc
adc
adc
xchg
je
jns
sub
dec
xchg
cmc
scas
dec
sub
mov
mov
int
les
addr16
sti
xor
xchg
insb
push
sub
xorb
inc
adc
rdmsr
outsl
cmp
push
jmp
cmp
mov
sbb
jmp
mov
xchg
mov
cltd
xchg
jmp
add
sbb
push
mov
push
or
push
push
pop
aam
sbb
jo
pop
jno
sub
inc
pop
push
sbb
sbb
pop
data16
sbb
push
sub
imul
adc
mov
pop
push
pusha
dec
lods
xor
xchg
pusha
icebp
or
popl
js
and
push
mov
xchg
icebp
scas
shll
ret
dec
in
push
les
sbb
mov
push
add
pop
roll
jle
push
sbb
add
cld
add
and
daa
daa
and
adc
lock
sub
push
push
push
inc
mov
mov
testb
sub
cmp
xor
sbb
sub
aas
inc
decl
sub
ss
or
mov
dec
xchg
adc
dec
adc
adc
xor
or
mov
inc
pop
cmp
cmp
adcb
sbb
pusha
mov
mov
mov
cld
ljmp
push
adc
pop
sbb
inc
sbb
outsb
sbb
sbb
stos
les
rcrl
out
fildll
outsl
add
or
ud2
and
add
fisttps
pop
inc
or
sbb
test
adc
xor
pushl
adc
sub
das
inc
aaa
adc
shlb
sbb
in
fst
add
adc
adc
push
js
mov
sub
adc
add
sti
add
adc
sbb
add
adc
inc
sub
out
cmp
xchg
sbb
dec
jmp
xchg
adc
jg
pop
xor
jae
and
adc
orb
xchg
arpl
pop
popa
sub
sbb
pop
adc
xchg
clc
xchg
cmp
pop
push
sar
idivl
lea
adc
adc
inc
and
jbe
rcll
es
dec
adc
push
jmp
pop
es
push
sbb
add
adc
sbb
xchg
lcall
std
or
adc
pop
push
inc
dec
add
or
push
dec
push
xor
sub
adc
inc
fidivrs
jnp
pop
pop
dec
sahf
fcmovne
jnp
push
pop
inc
push
xor
and
add
pusha
inc
fwait
adc
pop
xchg
daa
adc
and
bnd
popf
sbb
add
mov
dec
and
add
sub
inc
bound
push
ss
sbb
psllw
notl
jg
adc
sbb
in
test
and
add
jno
mov
adc
add
mov
or
or
and
es
pop
or
scas
cs
test
sub
xchg
push
ret
cmp
sbb
xor
daa
adc
daa
sub
push
adc
add
or
test
lock
scas
mov
push
push
add
sub
push
inc
push
test
std
pop
mov
int
imul
sarl
scas
xor
sbb
or
sbb
push
dec
dec
jle
cmp
and
add
scas
inc
dec
daa
xor
mov
test
dec
push
adc
lea
push
add
ret
aas
push
pop
fists
adc
jecxz
sbb
and
inc
jg
inc
xor
push
sbb
push
push
std
sub
jae
pop
lret
dec
mov
lods
idiv
outsl
jnp
lock
aam
push
mov
jnp
std
cs
adc
push
and
xchg
add
bt
jl
mov
std
fcmovnu
xlat
les
lock
pop
push
sub
cmp
jnp
xor
aam
clc
testl
sbb
cmpsl
mov
loopne
jmp
and
cmpl
mov
movsb
xchg
das
push
gs
loopne
mov
cmp
mov
outsb
jle
fimuls
add
lock
or
roll
or
std
jmp
sbb
dec
jnp
or
xor
sbb
jmp
mov
je
and
push
es
push
in
add
add
aas
mov
adc
or
xor
adc
xor
iret
pop
ror
mov
lret
js
or
add
roll
xor
mov
aam
cmp
loop,pn
and
pop
mov
mov
add
and
xchg
and
adc
jl
xor
push
xor
daa
shr
inc
add
push
add
ljmp
lea
add
pop
inc
sub
add
inc
add
loopne
mov
das
add
daa
js
push
adc
nop
push
add
orl
paddsw
mov
rcrl
cmp
mov
dec
mov
xchg
shlb
add
cwtl
or
jnp
push
cmp
inc
gs
scas
nop
jl
bound
inc
add
and
out
xchg
hlt
pusha
inc
inc
push
cld
dec
adc
cld
dec
insb
addb
inc
pop
rolb
push
sysret
mov
dec
fisubrl
mov
push
push
adc
add
rorb
daa
iret
xchg
inc
mov
xchg
sbb
mov
jo
cmp
dec
jl
jae
test
xlat
or
in
sti
push
stc
daa
pop
enter
aaa
into
cmp
add
and
add
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
