add
add
pushf
je
add
add
add
or
test
add
add
add
jo
add
mov
add
add
add
nop
add
addb
add
test
add
mov
add
add
add
orb
add
jo
add
pushf
je
add
add
add
add
add
add
mov
add
pushf
je
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
sbb
addb
add
xor
addb
add
pushf
je
add
add
push
add
add
add
or
add
aam
add
out
add
notb
add
add
add
push
adc
sbb
add
lock
subb
add
cmp
add
inc
adc
cmpb
add
push
add
add
mov
add
sahf
adc
sbbb
add
mov
add
lret
and
add
clc
add
add
or
add
adc
add
add
add
pushf
je
add
add
add
add
add
add
pop
push
add
pushf
je
add
add
add
add
sub
add
add
add
pushf
je
add
add
add
sbb
add
sldt
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
dec
pop
add
pusha
pop
add
js
add
nop
pop
add
test
add
rolb
xor
add
fadds
add
lock
add
or
add
and
add
cmp
add
push
or
cmp
add
push
sldt
orb
cmp
add
cwtl
or
cmp
add
mov
add
enter
std
sldt
loopne
add
clc
or
cmp
add
adc
add
sub
add
pushf
je
add
add
sldt
add
add
push
adc
sbbb
subb
xorb
xorb
orb
add
xchg
adc
cmpb
add
mov
or
add
add
ficoml
add
lock
xorb
add
dec
or
adcb
andb
andb
add
xor
add
add
add
pushf
je
add
add
add
pop
add
jg
add
jg
add
or
cmp
add
fmuls
add
lock
cmp
add
or
add
and
add
cmp
add
pushf
je
add
add
add
add
dec
adc
adcb
addb
add
pushf
je
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
add
add
pushf
je
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
add
add
test
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
pushf
je
add
add
add
add
add
add
fmuls
add
add
add
pushf
je
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
add
add
test
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
pushf
je
add
add
add
add
add
add
fmuls
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
add
add
or
add
pushf
je
add
add
add
add
add
add
sbb
add
pushf
je
add
add
add
add
add
add
sub
add
pushf
je
add
add
add
add
add
add
cmp
add
pushf
je
add
add
add
add
push
add
add
add
add
add
pushf
je
add
add
add
add
add
add
pop
or
add
pushf
je
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
pushf
je
add
add
add
add
add
add
cwtl
or
add
pushf
je
add
add
add
add
add
add
test
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
pushf
je
add
add
add
add
add
add
fmuls
add
pushf
je
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
or
add
pushf
je
add
add
add
add
add
add
or
add
add
add
pushf
je
add
add
add
add
add
add
sbb
add
add
add
pushf
je
add
add
add
add
add
add
sub
add
add
add
pushf
je
add
add
add
add
add
add
cmp
add
add
add
pushf
je
add
add
add
add
add
add
dec
push
add
add
add
pushf
je
add
add
add
add
add
add
pop
push
add
add
add
pushf
je
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
add
add
pushf
je
add
add
add
add
add
add
cwtl
push
add
add
add
pushf
je
add
add
add
add
add
add
test
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
pushf
je
add
add
add
add
add
add
fmuls
add
add
add
pushf
je
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
push
add
add
add
pushf
je
add
add
add
add
add
add
or
add
add
add
pushf
je
add
add
add
add
add
add
sbb
add
add
add
pushf
je
add
add
add
add
add
add
sub
add
add
add
pushf
je
add
add
add
add
add
add
cmp
add
add
add
pushf
je
add
add
add
add
add
add
dec
sldt
add
add
pushf
je
add
add
add
add
add
add
pop
sldt
add
add
pushf
je
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
add
add
pushf
je
add
add
add
add
add
add
cwtl
sldt
add
add
pushf
je
add
add
add
add
add
add
test
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
pushf
je
add
add
add
add
add
add
fmuls
add
add
add
pushf
je
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
sldt
add
add
pushf
je
add
add
add
add
add
add
or
add
add
add
pushf
je
add
add
add
add
add
add
sbb
add
add
add
pushf
je
add
add
add
add
add
add
sub
add
add
add
pushf
je
add
add
add
add
add
add
cmp
add
add
add
pushf
je
add
add
add
add
add
add
dec
adc
add
add
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
pushf
je
add
add
add
add
add
add
mov
add
add
add
pushf
je
add
add
add
add
push
add
add
ret
sbb
add
add
cmpsl
adc
xor
add
cwtl
test
add
add
int3
test
add
add
add
xor
adc
xor
add
push
add
add
add
shrb
add
mov
add
add
add
push
mov
add
add
add
adc
rolb
add
hlt
mov
add
les
add
xchg
mov
add
fs
add
xor
adc
rolb
add
add
adc
rolb
add
ret
loopne
add
movsb
ret
adc
loopne
add
test
adc
loopne
add
lds
add
add
add
adc
rolb
add
adc
loopne
add
adc
rolb
add
add
fs
adc
call
add
add
add
add
add
add
add
adc
loopne
add
fs
sbb
call
add
add
add
add
into
adc
push
add
add
iret
adc
push
add
add
adc
xor
add
add
add
add
add
add
add
add
add
in
jecxz
add
add
add
add
add
in
adc
mov
add
xchg
in
adc
insb
add
add
add
add
add
adc
lods
add
add
add
xchg
cld
adc
aam
add
push
add
add
call
add
add
cld
add
add
add
adc
add
in
adc
je
add
pop
pop
adc
cmp
add
xchg
or
add
add
test
adc
lods
add
add
add
add
add
add
fcoms
add
add
add
add
hlt
sbb
add
add
add
sbb
add
add
add
add
test
adc
hlt
add
add
add
test
adc
sub
add
shrb
adc
adc
add
loopne
adc
add
add
in
adc
pop
add
add
adc
jno
add
mov
adc
mov
add
add
add
add
adc
inc
add
add
or
add
add
nop
icebp
adc
push
add
add
repnz
xchg
and
add
adc
ja
add
lock
add
mov
add
add
add
push
add
push
add
inc
xchg
push
add
push
add
pop
xchg
sbb
adc
add
insb
xchg
sbb
adc
add
adcb
add
add
test
sbb
adc
add
mov
add
add
xchg
sbb
adc
add
dec
lret
adc
add
pop
add
add
inc
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
dec
add
or
inc
add
add
inc
add
add
dec
add
add
or
add
push
add
dec
add
add
dec
add
add
or
inc
add
inc
add
push
add
add
dec
add
push
add
dec
add
push
add
pop
add
dec
add
push
add
add
dec
add
push
add
inc
add
dec
add
pop
add
inc
add
add
push
add
or
dec
add
inc
add
inc
add
dec
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
push
add
dec
add
add
dec
add
dec
add
push
add
inc
add
dec
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
add
add
add
inc
add
inc
add
inc
add
add
add
add
inc
add
push
add
add
add
inc
add
inc
add
or
push
add
dec
add
dec
add
dec
add
add
add
dec
add
push
add
add
add
dec
add
inc
add
inc
add
or
push
add
dec
add
add
inc
add
dec
add
add
add
dec
add
or
push
add
dec
add
push
add
push
add
inc
add
dec
add
add
add
push
add
dec
add
add
add
add
push
add
dec
add
add
add
push
add
push
add
inc
add
add
or
dec
add
dec
add
dec
add
dec
add
add
dec
push
inc
push
add
add
add
add
or
add
add
add
add
add
add
add
add
push
add
add
add
add
jmp
add
add
incl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
add
addb
add
decl
add
add
add
add
add
add
decl
add
add
add
add
add
add
decl
add
add
add
add
add
decl
add
add
add
add
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
call
xchg
ds
xchg
push
imul
incl
add
add
incl
add
push
insl
outsl
fs
gs
push
push
add
fs
and
jb
jb
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
adc
adc
adc
or
xor
or
xor
add
xor
xor
adc
add
mov
add
xor
xor
xor
add
inc
add
add
add
add
add
jbe
inc
add
add
add
mov
addr16
add
add
add
es
addr16
add
add
mov
ja
bound
add
add
add
mov
ja
and
inc
add
add
or
ja
and
inc
add
add
add
jb
and
inc
add
add
add
jb
and
inc
add
add
add
ja
ja
and
add
add
or
jb
and
inc
add
add
add
mov
ja
and
add
add
add
mov
and
add
add
add
add
mov
ja
das
mov
add
add
add
mov
ja
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
add
add
or
add
add
add
mov
add
add
or
or
xor
xor
cmp
add
xor
xor
xor
add
mov
xor
mov
add
or
mov
mov
add
mov
mov
add
add
mov
mov
or
add
add
incl
add
inc
add
inc
add
push
add
push
or
jg
or
aas
clc
or
aas
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
incb
add
incb
add
incb
add
incl
add
incl
add
incl
inc
inc
cld
add
sarb
loopne
sldt
aas
pop
add
aas
add
add
addl
add
roll
aas
jecxz
push
add
add
add
and
add
add
add
call
add
add
sbb
arpl
xchg
iret
xlat
pop
xchg
cld
push
bound
xchg
neg
push
dec
bound
or
mov
imul
sub
in
mov
push
into
mov
fcoms
iret
mov
repz
scas
or
into
in
rclb
stc
sub
mov
fisttpll
adc
jp
out
sub
orb
push
mov
lock
insl
mov
mov
pushf
outsb
mov
xor
aaa
rcll
das
ret
pushf
adc
xlat
fwait
jno
dec
mov
adcb
jae
es
cld
mov
mov
pop
mov
inc
fldl
fucomp
jmp
out
inc
sub
hlt
ficoms
jno
test
add
xchg
push
incl
jg
je
sub
xchg
int3
clc
dec
and
dec
sub
or
jbe
or
pop
sbb
pop
xchg
mov
shl
pop
push
or
lods
pop
daa
cmp
cmp
nop
movsb
adc
jo
pop
push
jno
stos
or
push
iret
mov
mov
mov
popa
mov
lahf
sbb
sub
outsb
mov
out
shrb
leave
pop
sub
jmp
mov
inc
sbb
xchg
je
jge
inc
mov
fwait
push
int3
imul
mov
or
lods
mov
mov
sub
outsb
mov
lret
ss
push
adc
iret
pop
sbb
mov
sbb
inc
scas
cmpsl
scas
add
clc
cmp
adc
push
nop
in
daa
jbe
pop
xchg
jae
aam
test
fsubl
call
cld
sub
lods
push
sbb
xor
cmp
push
add
and
jle
inc
insb
sbbl
movsb
je
push
xchg
ds
prefetcht0
push
sbb
inc
mov
fidivl
mov
xchg
jp
jmp
int
xchg
jp
test
jp
repnz
lods
movsl
dec
jg
add
push
add
lret
pop
adc
and
inc
cmc
shr
mov
fcmove
cld
cltd
pop
fcmovnu
add
add
and
or
sub
jle
ret
lahf
cmp
jne
in
in
adc
enter
sbb
mov
mov
mov
je
vcvtsd2si
aam
loop
and
push
xchg
imul
adc
je
push
aaa
sub
jno
jmp
outsl
pop
bound
flds
push
lods
lret
xchg
in
xor
and
in
jmp
xor
imul
inc
inc
xchg
sar
sub
addb
pusha
jo
daa
jno
ss
mov
inc
nop
dec
xchg
shlb
test
cwtl
inc
xor
jecxz
mov
dec
inc
jne
jb
mov
pop
enter
test
adc
test
push
ret
mov
cmp
loop
xchg
pop
sub
xchg
xchg
jle
loop
enter
jg
pop
pop
lods
xor
and
je
xor
hlt
sub
repz
xchg
inc
aad
or
ss
cmp
lods
out
cmpsb
push
jge
add
pop
pop
push
push
mov
std
sub
xchg
add
lahf
cmp
movsl
jmp
dec
inc
push
ror
insl
les
pop
mov
out
sti
sub
sub
cltd
and
dec
push
sbb
fcmovne
daa
and
lahf
addr16
mov
or
add
adc
or
iret
jbe
lock
outsb
dec
xor
aas
ret
add
loop
popl
cmpsb
push
and
pop
pop
cmpsb
sbb
lds
dec
sub
leave
add
cmpsl
test
pop
test
js
xchg
jbe
jae
test
jo
dec
dec
ret
and
sub
sub
dec
jmp
fs
cmp
mov
cmp
loope
ret
jns
leave
xchg
jmp
or
mov
je
notb
dec
lods
pop
icebp
dec
test
add
xor
clc
xchg
cmp
pop
std
mov
daa
adc
into
jge
sub
sbb
jns
into
outsl
cmp
cmp
aad
cmpsb
fmuls
mov
cld
add
jae
push
lret
nop
dec
mov
mov
mov
addb
push
adc
mov
adc
inc
mov
faddl
movsl
iret
push
fbstp
leave
imul
and
mov
and
add
test
cmp
repnz
pop
shlb
or
jp
or
cmp
mov
out
sub
push
scas
mov
aas
jmp
mov
sbb
push
jp
mov
aaa
fwait
xor
or
mov
data16
sub
jnp
mov
sbb
pop
bound
sbb
lahf
and
loop
or
cli
jp
ljmp
arpl
outsl
ret
xchg
mov
repz
int
clc
add
mov
mov
ret
andl
pop
ds
neg
aad
aas
xchg
lods
imul
insb
sti
cmp
popf
pop
andl
xchg
push
sbb
cmpsb
test
psubsw
into
addb
shlb
jb
jle
and
add
inc
cmp
ret
lcall
push
sbb
add
jne
sub
jge
int3
or
cmp
or
cmp
push
lcall
lds
xchg
mov
jl
jno
cmp
ret
aam
xchg
in
lds
lods
and
imul
sbb
push
inc
leave
cmp
movsb
out
call
test
push
dec
cld
movsl
insb
xchg
std
jb
ds
sub
mov
movsb
jl
rclb
in
addr16
je
mov
or
xchg
and
sbbb
iret
inc
or
mov
fs
mov
mov
mov
inc
pusha
data16
fwait
sti
sub
fstpl
xor
jne
insl
mov
inc
lahf
jp
inc
lahf
bound
mov
sbb
cmp
insl
mov
aaa
mov
lcall
out
mov
fisttpll
jo
mov
test
cwtl
push
inc
xor
stc
jp
mov
js
ja
xchg
lods
outsb
add
jnp
push
aam
cmp
mov
mov
shlb
dec
fisttps
cld
adc
inc
ds
insl
rolb
xchg
mov
lds
ret
stc
xor
pushf
aad
xor
in
or
sbb
cltd
inc
ret
fwait
rorb
or
cs
add
insl
loopne
mov
jp
lahf
iret
xor
iret
and
pop
jb
iret
and
in
mov
data16
push
sbbl
fmull
xchg
js
test
or
loop
fisubrs
decl
incl
out
out
xchg
mov
or
or
inc
push
negl
hlt
jmp
jne
add
ret
inc
push
mov
add
jnp
mov
mov
mov
xor
sahf
push
push
std
mov
xchg
repz
mov
push
push
jg
xor
dec
testb
pop
sub
mov
xchg
je
rcrl
sub
push
loope
lcall
or
inc
jle
frstor
popa
xor
fisubl
and
pop
mov
and
gs
pop
loope
inc
test
xchg
jecxz
hlt
xor
jnp
out
adc
or
out
in
jnp
fwait
xchg
add
cld
ss
sub
push
clc
jb
sbb
push
dec
mov
fidivrs
or
cs
pop
fnstsw
inc
rcrl
loop
cli
add
xchg
inc
ficoml
outsb
adc
jecxz
mov
dec
pop
mov
pushf
pop
inc
and
cmp
mov
mov
and
sbb
in
inc
jne
mov
leave
xchg
inc
jns
cmpsb
jbe
cmpl
or
mov
das
xlat
lea
cli
cli
lahf
int
lods
mov
fwait
adc
in
fidivl
loopne
addr16
ds
pop
push
mov
cmp
loopne
adc
mov
out
mov
mov
daa
mov
dec
mov
mov
sarb
dec
xchg
xchg
repz
mov
sub
mov
add
mov
cs
dec
mov
enter
mov
aaa
jmp
into
cld
loope
xchg
fadd
cmp
add
or
adc
aad
push
sarb
push
mov
inc
lea
mov
ds
icebp
test
stos
or
dec
scas
dec
data16
es
mov
test
out
jg
out
call
inc
jnp
in
mov
dec
jbe
mov
mov
sbb
mov
jns
shlb
sub
or
mov
pop
sbb
movsb
fisttpl
sarb
mov
mov
mov
cli
xor
mov
in
pop
xchg
xchg
shlb
push
mov
aas
pop
lahf
js
out
cwtl
cmpsl
jne
inc
cmpsl
into
outsb
dec
jno
sbb
mov
dec
scas
adc
call
arpl
mov
das
sub
jns
in
pop
call
add
jmp
push
pop
or
data16
sub
aam
test
sub
cmp
adc
push
inc
dec
inc
add
ss
mov
dec
or
fsubrl
xchg
push
fcmovbe
sbb
xor
sub
and
int3
mov
and
fildl
push
mov
shrb
add
out
xchg
sub
mov
mov
shlb
lods
stos
sub
mov
fadds
pop
cmpsl
pop
int3
mov
fimuls
hlt
and
xor
mov
fs
add
in
mov
lods
push
mov
outsb
inc
dec
andb
outsl
xchg
mov
jmp
lcall
jmp
push
xchg
mov
adc
cli
pop
inc
icebp
test
shlb
dec
add
add
dec
or
sub
incl
mov
loop
dec
mov
dec
jnp
fisttps
pop
jbe
mov
ret
inc
test
pushf
shrb
je
push
shll
push
ds
xlat
or
jmp
pop
cld
cli
andb
or
or
lods
push
stos
xchg
cmp
jp
dec
mov
sub
push
out
mull
jo
xchg
loop
jmp
leave
cld
sbb
adc
jge
jne
fnstenv
rorb
jl
xor
mov
xlat
outsb
aas
xchg
rcrl
mov
lock
fwait
sahf
mov
movsl
xchg
sub
cmpsl
sub
mov
mov
ja
stc
xchg
jb
sbb
aas
sub
sub
jnp
movsl
shrl
sbb
repz
jmp
xlat
js
jbe
mov
lahf
testl
and
cmc
xchg
clc
dec
out
les
push
insl
add
frstor
stos
xor
lret
scas
jno
sub
pop
mov
inc
mov
mov
push
sti
sub
cmp
pop
fmull
push
xor
clc
add
aaa
cltd
rorl
xor
and
jg
popf
mov
ret
sbb
andb
jnp
das
lods
mov
ja
mov
cmp
xchg
pop
fstpl
je
mov
shll
push
bound
out
enter
addb
ljmp
scas
into
out
addl
out
cmpsb
rclb
mov
scas
jae
jbe
or
sahf
cld
push
and
and
in
and
stos
sbb
out
popa
lods
adc
dec
push
lods
les
adc
mov
lcall
jp
sub
into
fcomp
out
jg
loop
add
ljmp
ds
ret
jnp
pop
and
add
in
adc
cwtl
lds
divb
mov
fwait
jp
clc
dec
push
jbe
pusha
mov
cmc
cmc
sub
ss
jbe
mov
dec
jmp
ja
dec
sbb
pop
xor
jbe
sti
jb
fbld
in
in
push
inc
or
lret
jno
sub
test
push
mov
xor
cli
sahf
sub
dec
xlat
inc
sub
sub
in
sub
fisttpl
mov
scas
cmp
adc
mov
sahf
adc
adc
outsb
mov
ljmp
test
int3
mov
nop
mov
sbb
sbbb
cmp
and
xchg
int
mov
dec
xchg
and
lcall
js
push
repnz
sahf
push
cmp
xor
mov
adc
mov
rolb
shlb
loop
or
mov
sbb
fsts
xorl
out
pop
es
nop
ja
rorb
push
pop
lret
inc
adc
in
addr16
ljmp
xchg
xlat
push
dec
andb
dec
imul
out
sub
mov
ja
pop
test
outsl
cs
aam
mov
cld
insl
lods
xor
inc
jle
and
and
and
mov
into
mov
and
aaa
pop
xchg
cli
jmp
in
mov
inc
jle
or
lret
pop
xchg
insb
daa
mov
xchg
pushf
addr16
xchg
ds
push
and
cs
sbb
xchg
or
mov
data16
fmulp
js
xchg
inc
mov
jno
pop
cld
xchg
mov
mov
paddb
push
jg
dec
pop
jle
or
mov
mov
daa
dec
pop
outsl
add
pop
push
inc
lds
cmc
das
jae
sub
sub
outsl
mov
cmovs
xchg
jl
sti
mov
dec
mov
out
nop
testb
jge
sbb
int3
insl
test
push
icebp
push
pop
or
cmp
pop
mov
out
xor
leave
call
aam
add
ljmp
call
mov
negb
dec
in
insb
shlb
push
mov
dec
mov
mov
jne
inc
bound
sub
cmpsb
cmp
jno
sbb
movsl
push
cmpsb
adc
xchg
cmp
out
fisttpl
mov
cmc
inc
mov
lret
imul
loop
mov
jge
enter
fs
mov
aad
mov
sbb
mov
or
lock
int3
push
insl
push
sub
dec
lods
into
test
pop
jle
mov
inc
dec
adc
jnp
and
je
or
jle
es
cmpsl
cs
daa
xchg
mov
dec
xchg
dec
popa
mov
push
fs
inc
jae
inc
shll
push
jl
jmp
shlb
add
idiv
add
mov
sub
adc
jmp
ljmp
pop
jge
aaa
push
mov
in
cld
ds
pop
mov
aaa
inc
fnstenv
aaa
cmp
fs
test
jl
dec
inc
jmp
loopne
adc
xchg
push
pop
dec
testl
xorb
ss
rclb
mov
je
dec
lret
loopne
mov
push
pusha
pop
int
rcrl
shrb
mov
aaa
imul
out
nop
mov
call
xchg
lock
icebp
add
pop
cmpb
arpl
in
loopne
xchg
xor
cltd
sub
in
xor
jle
loope
lret
sub
out
push
mov
adc
cli
sahf
icebp
xor
jo
mov
les
xchg
popf
sti
hlt
dec
mov
xor
cmp
fistps
jp
xor
dec
ljmp
pop
sbb
jp
test
in
and
arpl
pop
std
lret
or
xchg
je
pop
fiadds
out
adc
jo
xchg
and
test
jo
sti
mov
cli
sub
roll
mov
sti
clc
mov
addl
out
rcll
lds
mov
js
cwtl
inc
cmp
movsb
inc
les
jo
icebp
loop
cli
insl
and
adcb
pop
jmp
jge
push
mov
xor
movl
fdivrl
add
lds
sub
outsb
mov
push
outsb
int
loopne
and
ss
fiadds
daa
hlt
pop
sbbl
jg
std
femms
dec
fadd
push
ljmp
cld
push
jae
push
shll
loop
daa
cmp
cmp
sub
mov
leave
popf
movsb
dec
pusha
mov
add
out
sbb
cmp
dec
fcoml
ret
pusha
ljmp
daa
xor
ds
mov
sub
outsl
and
adc
stos
cmp
xor
cli
jae
pop
enter
cs
push
sar
into
movsb
mov
pushf
out
xor
pusha
movsb
jp
mov
sbb
das
fists
stos
sbb
fistpll
jae
out
fdivrs
and
xlat
pop
hlt
loopne
pop
ret
xchg
icebp
jno
repz
lods
jbe
clc
sub
movsl
mov
scas
pop
xor
mov
mov
in
outsb
dec
add
adc
in
mov
outsb
and
call
neg
popa
mov
aad
icebp
pop
movsl
mov
jnp
scas
popf
and
ss
mov
adc
add
xchg
pop
xchg
cmp
xor
jbe
ds
shrl
cmp
xor
and
or
push
in
adc
cmp
pop
popa
aas
jae
xor
out
jns
enter
dec
xchg
pop
test
icebp
outsb
nop
push
in
insb
pop
stc
inc
xchg
fldl
fsubs
mov
sbb
sbb
push
xlat
or
dec
outsl
lods
sbb
add
sbb
leave
xor
add
mov
and
inc
xlat
push
cmc
sbb
and
push
idivb
hlt
fists
lods
stos
push
inc
in
imul
arpl
sub
lods
aad
scas
adc
adc
nop
shrl
scas
cmp
dec
ret
movsb
mov
pop
pop
fwait
icebp
push
mov
out
andb
psraw
stc
add
sbb
jnp
xor
jmp
sbb
fildl
xor
adc
push
mov
orb
in
mov
inc
sahf
aam
inc
mov
or
xchg
push
xchg
sub
movsb
stc
test
inc
std
cmp
stos
cwtl
xor
sub
mov
mov
es
aam
lret
andb
out
push
push
frstor
shrb
mov
shlb
dec
adc
mov
mov
jns
and
lds
lahf
icebp
sahf
test
pop
adc
xchg
jle
ror
dec
ret
daa
icebp
pop
and
jg
jns
or
cmp
enter
inc
cmpsl
xor
ja
jb
xor
dec
gs
jne
popa
jnp
loopne
dec
push
ljmp
push
push
xchg
cmp
push
in
inc
in
insb
repz
cmp
jae
ficoms
gs
pop
xor
into
repz
xchg
aas
popa
jns
cmp
test
xor
jns
add
and
or
jo
stos
pusha
push
adc
scas
or
add
adc
ds
popl
test
addb
andb
xchg
dec
push
xchg
sbb
in
adc
imul
icebp
ret
inc
xchg
dec
and
xchg
inc
lcall
mov
sbb
xchg
mov
xor
adc
jle
jp
and
gs
mov
ss
and
outsb
cli
xchg
add
adc
pop
push
dec
mov
add
and
dec
fildl
xchg
mov
data16
in
fxch
lcall
cmp
repz
sahf
inc
xchg
jae
sub
cmp
enter
repz
jns
inc
scas
push
loope
xchg
inc
jg
fs
lret
in
icebp
xorl
aam
mov
scas
sub
jae
repnz
test
mov
xchg
pop
aam
jo
cltd
xor
inc
scas
les
ljmp
in
iret
mov
jmp
in
popa
pop
arpl
cmp
icebp
mov
add
cmp
outsb
cmp
cmpl
daa
fisttps
out
cltd
push
hlt
dec
push
stc
ss
and
push
cmp
fsubl
js
fldl
or
neg
cli
xchg
cmp
and
sbb
in
decl
lods
adc
int
add
jnp
ss
aas
mov
xchg
cmp
cli
dec
push
ret
jp
mov
and
int3
jns
sub
scas
mov
dec
push
push
dec
adc
int3
sahf
mov
push
repnz
jge
clc
dec
cs
or
jb
xchg
loopne
ja
pop
stos
mov
movsl
xor
fcoms
cmp
popa
repz
into
mov
repz
dec
xchg
call
pop
mov
sbb
dec
nop
jne
test
lock
shll
jae
add
lea
int
mov
and
pop
daa
mov
xchg
icebp
mov
and
sbb
adc
xor
repz
add
lcall
out
loopne
mov
mov
jl
adc
icebp
roll
es
dec
pop
test
sarb
push
les
fwait
jg
mov
cmp
pop
stos
stos
insl
loop
in
inc
lahf
push
call
mov
dec
into
daa
xchg
add
pusha
in
dec
jns
cmp
std
dec
xchg
cmpsl
sbb
in
push
lea
xchg
adc
cmp
or
bound
inc
or
addr16
fbstp
add
lock
decl
fcmovnu
jae
in
rcl
cld
lods
neg
fs
mov
jno
aam
lcall
outsb
jp
imul
mov
xor
js
jnp
cmpsb
or
inc
lods
sub
pop
pop
iret
fstl
test
loope
dec
cltd
je
scas
mov
notb
add
rolb
cmp
das
std
pop
rcrl
shr
lahf
mov
dec
pop
daa
sub
rorb
pop
xor
int3
cmpsl
insb
lret
xor
mov
out
imul
mov
cltd
outsb
sbb
xor
inc
dec
adc
enter
mov
pop
cld
xchg
pop
fiaddl
mov
mov
cmp
rolb
repz
loopne
and
jno
scas
adc
mov
dec
push
push
dec
mov
pop
int3
cwtl
mov
pop
fwait
cmpsb
das
push
xchg
lock
push
pop
rcll
xor
test
xchg
sbb
insl
leave
test
cmp
mov
ret
cmp
dec
aas
dec
frstor
call
sbb
mov
outsl
in
mov
ja
and
aas
movsl
and
outsl
inc
pop
jbe
in
and
xchg
ret
push
xor
in
pop
sbb
mov
fiadds
inc
mov
pushf
std
insb
test
mov
fwait
push
out
xchg
or
cmp
lret
xchg
arpl
jmp
inc
adc
fmul
pop
cmp
xlat
xor
lock
shll
mov
addr16
xchg
push
ss
sub
push
loopne
adc
fstps
dec
in
pop
sub
lea
mov
push
add
leave
pop
jnp
mov
xchg
fimuls
aam
setbe
popa
stos
sbb
xlat
cmp
adc
mov
ficoms
shrl
mov
loop
cs
out
testl
pop
rclb
sbb
xchg
cmp
mov
iret
cmc
inc
sub
or
mov
adc
inc
int
fdivrp
cmp
xor
ss
xchg
xlat
adc
out
pop
or
cmc
out
mov
mov
inc
and
test
inc
jecxz
inc
bsr
push
adc
xchg
arpl
jle
into
jbe
mov
lret
cld
cmp
movsl
mov
inc
and
cli
js
and
pop
jp,pt
stos
xlat
cltd
aaa
loope
icebp
cltd
cli
ja
push
pop
and
dec
outsb
mov
dec
mov
sahf
sbbb
inc
les
movsl
xchg
movsb
jecxz
jge
int3
pop
lea
dec
lock
fmuls
push
mov
mov
in
cmp
adc
or
loope
xor
in
and
scas
push
xchg
mulps
jecxz
daa
sbb
fldt
lock
lahf
lret
aam
lret
cmpsb
cmp
arpl
andb
cmp
into
sahf
arpl
jo
ror
jne
mov
std
xchg
andb
movsb
clc
mov
aad
call
arpl
inc
notl
dec
aas
xchg
sti
lcall
lahf
pop
mov
push
and
mov
mov
sbb
xlat
bound
dec
adc
adc
in
lods
aad
sbb
or
fisttpll
sahf
pop
cmpsb
divl
add
bound
add
out
sbb
outsl
imul
sub
and
adc
mov
or
inc
out
jno
dec
out
out
pop
jg
mov
fisttpll
mov
add
pop
aad
or
loope
xchg
add
xor
dec
addr16
adc
cwtl
addl
jnp
lds
outsb
xorl
jg
jne
or
loop
pop
icebp
or
xor
dec
push
dec
mov
pop
cmp
xchg
testl
dec
inc
dec
repz
loope
in
rcl
sub
mov
pushl
sbbl
xor
add
mov
xchg
cmp
jns
out
jmp
dec
dec
cli
cmp
fcmovb
xchg
je
sub
cmp
dec
mov
xlat
sbb
pushf
pop
jae
push
jno
mov
test
stc
pop
jge
nop
adc
mov
enter
jae
push
lods
xor
lock
les
jo
jbe
adc
and
movsb
adc
ds
lret
mov
add
and
and
mov
loopne
xchg
push
cld
and
rcrb
jns
cld
sbb
enter
or
xor
mov
mov
and
ror
push
ja
imul
xor
clc
ds
cmp
into
stc
js
shl
andb
sbb
dec
popf
cmp
dec
adc
setbe
fwait
or
inc
call
lods
inc
cmp
dec
loope
insb
or
inc
push
or
call
call
cs
push
inc
cmp
cmc
inc
mov
fcmovnb
sbb
scas
in
mov
int
test
jb
pslld
out
xchg
xchg
repnz
cmpsl
movsb
dec
popf
lods
lret
add
fs
ss
and
adc
mov
ret
adc
stc
mov
gs
lret
les
dec
nop
hlt
adc
adc
pop
unpckhps
pusha
scas
push
mov
lds
lahf
das
pop
nop
and
inc
in
cmp
int3
inc
mov
in
test
push
test
adc
outsl
jle
fidivs
mov
inc
pop
in
sbb
movsl
cmp
stc
push
mov
daa
movsb
xor
test
mov
dec
int3
stc
xlat
sbb
sahf
or
inc
inc
jo
inc
or
test
out
in
sub
inc
sahf
mov
test
sti
mov
hlt
mov
xorb
or
jo
test
mov
pop
out
push
sub
cld
enter
push
negb
test
mov
and
sbb
and
rcll
lock
lret
in
dec
pop
cli
sub
xlat
mov
in
aas
xor
cmpsb
cmpsb
in
jmp
out
iret
dec
mov
mov
in
dec
pusha
fidivl
and
cld
outsl
cli
insl
std
addl
sub
ljmp
das
call
ja
sbb
sbb
and
mov
jb
pushf
jne
stos
mov
mov
push
xchg
lods
push
loope
xchg
hlt
pop
and
xchg
sbb
mov
daa
ret
pop
mov
sub
adc
stos
gs
pusha
mov
mov
test
out
lods
mov
sbb
pop
pop
mov
xor
jmp
js
dec
into
push
cmpl
je
xchg
lods
xchg
aas
jne
mov
fwait
xor
mov
popf
xchg
adc
xchg
push
lock
repnz
dec
test
sub
mov
mov
push
orl
mov
aam
jecxz
add
lahf
daa
jnp
jle
bound
mov
scas
in
jb
dec
loopne
inc
jecxz,pt
pop
outsl
and
aad
mov
adc
adc
mov
in
adc
fisttpll
mov
mov
mov
ljmp
xchg
adc
test
add
mov
xchg
cmp
mov
imul
movb
push
sub
std
xlat
sahf
cmp
jno
mov
xchg
mov
and
lcall
enter
add
add
aad
sbbl
subl
pop
mov
dec
popa
fcoml
mov
ja
iret
jmp
xor
sahf
adc
fstps
hlt
daa
lret
xchg
out
push
shll
test
es
xchg
sub
jecxz
push
pop
push
rclb
leave
mov
pushf
cmp
lods
ljmp
jge
jge
xor
loopne
jg
push
push
push
int
push
push
jg
test
jbe
aad
lret
mov
sarb
sub
mov
cmpsl
out
jle
cmp
cwtl
ss
lret
enter
mov
xor
jne
add
sub
mov
sbb
inc
xor
cli
adc
pop
push
movsb
fnsave
leave
cwtl
je
and
xchg
mov
dec
add
stos
push
mov
mov
test
pop
mov
mov
lcall
loope
dec
jl
test
inc
push
cmp
divl
mov
adc
inc
mov
xchg
and
pop
xchg
cmp
popa
xchg
jmp
dec
xchg
aas
sarl
pop
push
addr16
test
xor
lret
test
jmp
xor
cmc
mov
aad
fists
pop
jmp
cmp
dec
jecxz
mov
imul
enter
lea
jo
fldt
in
insb
add
test
data16
mov
mov
lock
sbb
enter
push
and
pop
rol
and
sbb
mov
insl
push
cltd
lock
in
pop
dec
pop
insl
push
fs
cmp
arpl
es
rcrb
xchg
jb
sbb
add
ficoms
adc
test
outsl
inc
pminsw
jmp
sbb
cmp
leave
enter
mov
jb
mov
mov
pop
test
stos
push
mov
push
pushl
dec
movsl
mov
pushf
testb
jbe
xchg
jo
jb
add
push
ds
roll
arpl
mov
iret
xchg
mov
sub
ficoms
or
xor
cli
call
jo
lds
sub
jp
loop
clc
mov
or
xor
pop
ret
enter
xlat
mov
lock
outsb
filds
push
inc
icebp
adc
in
cmp
jge
sbb
push
pop
or
cmp
add
test
jnp
xchg
dec
sti
data16
shrb
lock
imul
and
ja
xor
sub
lods
pop
jne
fisttpl
xchg
or
pop
test
insb
mov
pushf
fdivs
add
push
mov
push
mov
sbb
mov
dec
xor
xor
cmpsb
mov
stos
jmp
das
push
inc
adc
xchg
out
lahf
add
dec
pop
rorl
inc
dec
jne
mov
test
inc
test
push
lret
adc
enter
adc
and
dec
sti
xor
inc
loop
adc
mov
pushf
inc
push
int
mov
jo
gs
xchg
sub
sub
repnz
ljmp
inc
adc
mov
insl
xchg
pop
dec
movb
repz
test
cmpsl
aam
push
jg
mov
adc
out
xchg
pop
mov
or
mov
adcl
pop
ret
stos
mov
mov
push
jne
xchg
push
movsl
lock
pusha
pop
loop
cwtl
mov
jne
imul
adc
pusha
mov
xor
sti
xchg
jmp
imul
mov
fstpt
jl
cmpl
lea
push
nop
cmp
dec
enter
dec
xor
pop
ror
ret
inc
and
dec
cmc
and
xor
lret
pop
sbb
jno
mov
clc
pop
ds
adc
scas
into
dec
mov
dec
and
mov
inc
mov
sti
xor
lods
arpl
idivb
xchg
or
add
shl
imul
rep
push
dec
ss
xchg
ret
aas
ficoms
leave
sbb
cli
pop
daa
repz
inc
dec
mov
dec
cltd
stos
imul
aad
cwtl
jns
pop
gs
mov
xchg
int
push
mov
xchg
pushf
test
rcll
test
mov
cmp
fcmovnb
jmp
and
fimuls
ds
mov
pop
hlt
sub
add
xchg
cltd
pop
je
inc
mov
loopne
gs
xor
cmc
roll
cmp
jmp
pop
jb
xchg
or
sub
imull
push
cmp
cmp
out
pushf
cmpsb
fistpl
pop
or
inc
lcall
test
pushf
add
dec
adc
loope
or
lret
jmp
jp
ror
les
push
xor
scas
dec
lcall
xor
cmp
or
std
xchg
dec
jo
out
pop
sub
shr
out
push
cmc
repnz
add
push
je
jle
inc
push
into
xor
ret
addb
ss
repnz
xchg
leave
andb
stos
cmp
pop
mov
idivl
enter
mov
xor
enter
jle
jb
or
outsl
fs
dec
dec
insb
cmp
adc
movl
dec
pop
and
rclb
nop
mov
adc
jb
adc
scas
in
aam
adc
push
lds
notb
pop
jmp
adc
sbbb
cmp
js
mov
inc
out
and
mov
jg
ljmp
dec
xchg
shll
aam
cld
fcom
adc
mov
stos
icebp
inc
leave
jns
ljmp
inc
sbb
out
push
fs
cwtl
jge
mov
jmp
xchg
addl
fadd
jns
rcrl
sub
loope
loop
xor
lret
les
mov
cmpsb
sarl
mov
outsl
inc
sbb
cmpsl
jno
jmp
cmp
lcall
repz
jmp
sub
mov
jecxz
std
xlat
cmpsl
sub
clc
sbb
lret
and
xchg
ret
mov
sbb
and
push
sar
in
out
xchg
ret
jnp
sahf
dec
jo
loopne
cli
addb
sbb
sub
out
pop
cs
cmp
jo
lret
fidivrs
test
scas
call
cmp
mov
pop
lahf
aam
stc
imul
inc
or
int3
std
ss
pop
outsl
xor
sub
je
cmp
inc
adc
pop
sub
jo
lods
jnp
jg
dec
shrb
inc
loope
jge
mov
jmp
in
add
int
cmpsl
push
cmp
or
mov
jno
loopne
mov
lahf
add
pop
lods
lea
or
sbb
cmp
idivl
jmp
jl
sub
add
xor
push
pop
mov
xor
mov
xor
sbb
dec
inc
loopne
arpl
shl
lret
inc
xlat
stos
shrl
shl
mov
inc
nop
push
push
popf
pop
jb
xor
lods
sbb
mov
jecxz
mov
dec
rolb
imul
call
push
add
sub
jnp
repnz
lcall
and
xor
out
ljmp
push
orl
mov
js
cmp
mov
and
imul
enter
out
addr16
mov
xlat
das
push
cmp
in
xchg
xchg
ja
out
cmc
inc
inc
aaa
repnz
fwait
sub
rcll
jge
push
add
push
mov
xchg
xor
mov
scas
xchg
push
out
sbb
mov
outsl
add
into
mov
push
sbb
aam
inc
das
and
frstor
xchg
in
jp
xor
in
pop
aas
push
movq
and
aam
sub
test
and
push
mov
inc
sub
and
sbb
movsl
test
and
or
lcall
stos
scas
jae
inc
inc
mov
pop
sbb
sbb
stc
inc
adc
xor
daa
das
xorb
cmp
adc
mov
out
mov
rolb
dec
push
pop
adc
mulb
xor
fdivrp
xor
xor
and
sbb
or
or
jmp
mov
jmp
test
out
daa
xlat
push
or
push
cmpsl
push
xchg
pmuludq
mov
jae
daa
mov
stc
movsb
loope
repz
pop
push
sub
fstps
cmpsl
in
repz
mov
out
inc
jge
fistpll
mov
adc
flds
aaa
push
enter
pop
aad
mov
sti
or
xorl
push
aas
pop
addr16
sub
push
inc
fstpt
outsl
sub
and
aad
xor
mov
or
daa
out
into
lods
popa
rolb
cwtl
or
jp
push
into
fstp
and
or
dec
or
iret
sub
xchg
push
and
cmp
data16
lods
and
or
es
cmp
jbe
jne
sti
hlt
mov
and
pop
mov
imul
xchg
jl
mov
mov
dec
addl
dec
cmp
adc
pop
add
jo
cmp
inc
inc
mov
test
lods
das
ret
jl
dec
mov
scas
and
fucomip
pop
and
mov
imul
ret
shrb
movsl
mov
daa
adc
std
dec
cmc
pop
dec
imul
sbb
int
les
cmp
cwtl
and
inc
xchg
push
xor
cmp
out
and
div
xchg
push
cltd
data16
sub
mov
leave
in
sar
cmpsb
imul
rol
push
sbb
jg
cmp
push
pusha
testb
cmc
xchg
dec
jo
lea
push
loop
ret
fisubrl
fistps
dec
in
inc
and
ja
out
add
ret
cltd
insl
movsb
roll
jns
sub
inc
jns
sub
xchg
jnp
push
idiv
jns
insl
mov
stc
sbb
push
jecxz
hlt
nop
or
mov
cmp
jmp
pop
iret
mov
in
cmp
push
xlat
pop
int
or
and
stc
and
cmpl
jns
and
and
jl
sbb
mov
mov
sub
cltd
xchg
add
pop
sahf
add
stos
pop
push
iret
dec
mov
cmp
mov
or
dec
cmc
jmp
jp
jge
rcrb
jno
fistpll
sbb
mov
mov
pop
arpl
cmpsb
loope
cwtl
ljmp
sub
lret
out
jle
mov
call
pop
xor
in
insb
sbb
xor
in
jecxz
dec
add
outsb
hlt
cmp
aad
push
rcr
mov
jbe
gs
les
faddl
jb
mov
inc
repz
seta
sbb
loopne
sub
notl
mov
add
call
inc
or
xorl
mov
in
sbb
mov
loopne
push
in
or
mov
xchg
dec
cli
cmp
or
xor
xorl
cmp
dec
jne
jno
js
stc
push
jo
mov
popa
xor
xchg
lcall
cmp
sbb
subb
sbb
pop
and
out
push
lods
mov
pop
push
stc
jle
cmpsl
lods
mov
jge
dec
mov
rol
xor
sub
jo
push
push
or
imul
xor
pop
in
fs
push
add
fldt
jg
and
mov
cmc
mov
and
mov
sub
in
popf
divl
fld
insb
out
icebp
dec
imul
add
dec
xor
mov
popa
xchg
xor
mov
loope
mov
cs
aaa
sbb
outsl
jp
inc
mov
jae
mov
sub
sbb
jmp
add
call
adc
imul
jno
dec
mov
mov
adc
bound
adc
shl
ljmp
jno
pop
addr16
jb
dec
dec
mov
pop
pushf
fidivl
cmpsb
dec
xchg
add
imul
movswl
test
sahf
jl
fisubrs
stos
fs
cli
pop
call
sub
or
jno
sub
aad
jmp
jns
je
gs
aam
jl
in
dec
cld
push
mov
jbe
movl
fsubs
mov
xchg
jno
mull
aad
dec
xor
sbb
cld
in
pop
push
je
jmp
outsb
pop
push
xchg
pop
sti
dec
not
in
inc
and
aad
inc
or
into
sub
fnsave
divl
or
adc
pusha
xchg
repz
lods
in
dec
cmpsb
rcll
mov
mov
fdiv
inc
lods
push
xor
popa
stos
aas
dec
out
xchg
outsb
enter
repz
inc
lcall
addr16
inc
pop
dec
push
in
cmp
pop
jnp
aad
out
jle
cs
mov
gs
stos
or
sbb
inc
dec
inc
pusha
out
jb
lcall
sbb
push
movsl
jmp
fcmovu
push
inc
push
cmpsl
xchg
sti
mov
outsb
xor
jl
or
xchg
jne
or
inc
and
fcomps
or
push
jne
jnp
and
inc
sahf
jg
pop
lods
adc
testl
add
sub
mov
push
adc
mov
lock
mov
add
mov
int
mov
pop
mov
pop
fwait
jnp
int3
lock
and
fsubp
outsl
pop
pop
insb
dec
push
movsl
dec
adc
and
push
cmp
xor
push
xchg
xchg
xchg
cli
jae
int3
xchg
fsubrs
and
rorb
xor
xor
cmp
call
jge
inc
pop
cmp
jl
push
lods
xor
xchg
int
mov
jecxz
repnz
outsl
aaa
dec
xor
xchg
addr16
inc
imul
into
std
divb
shl
push
and
xchg
sub
push
dec
mov
test
sub
cmpsb
bound
in
outsl
andl
pop
shrb
dec
mov
notl
pop
movsbl
jne
sti
das
mov
icebp
push
pop
and
stos
jns
mov
fsts
sub
pusha
ds
stc
ret
sbb
jmp
rclb
aad
outsb
lods
mov
mov
lods
push
mov
clc
aas
stc
add
mov
lret
jl
sti
xlat
and
hlt
in
aam
stc
enter
dec
push
fnsave
pop
popl
xchg
pop
fprem1
scas
call
or
jp
and
push
inc
addr16
test
call
xor
aaa
add
mov
sbb
in
sub
pop
movsb
push
cmp
inc
cmc
in
ret
popa
enter
mov
xchg
mov
xchg
scas
sbb
mov
imul
xor
std
xor
pop
push
scas
shll
mov
stos
adc
push
mov
inc
lret
cmp
scas
movsb
dec
mov
lcall
icebp
mov
hlt
repz
rcl
loopne
adcl
cmc
loopne
aas
dec
lock
jo
xlat
testl
les
jbe
adc
mov
push
mov
jecxz
mov
lock
push
es
nop
outsl
and
jmp
adc
mov
ja
cwtl
rorl
xchg
sti
stos
call
movb
pop
hlt
pop
xchg
daa
lret
pop
adc
xchg
lret
hlt
jecxz
fwait
and
mov
mov
daa
inc
xchg
loop
dec
mov
lahf
add
sub
fisubs
mov
cmpsl
xor
mov
mov
dec
shrb
cli
xor
jg
sbb
xchg
pop
push
into
test
jecxz
popa
pop
int3
or
cmpl
les
insb
cmp
mov
icebp
and
outsl
jnp
pop
sbb
mov
adc
push
ja
xor
xorb
dec
sub
arpl
mov
push
cmp
jns
add
mov
push
xchg
mov
mul
adc
int3
cmp
pop
dec
sar
shlb
shr
inc
arpl
mov
jno
fisttpll
cli
push
out
gs
mov
lcall
jg
js
adc
xor
loopne
mov
jg
xchg
pusha
cltd
pusha
in
rcrb
loopne
xchg
xchg
or
int
leave
and
jg
add
sub
sub
into
xchg
outsb
pop
ret
jae
xor
push
lods
mov
add
dec
std
adc
jno
nop
mov
or
stos
ljmp
push
jmp
push
inc
or
push
jg
mull
pop
nop
lds
cld
out
shrb
mov
and
cmpsl
insl
stc
outsl
test
stos
andb
in
add
cmp
sub
lahf
mov
cld
add
pushf
mov
std
push
cmpsl
cmp
hlt
adc
xchg
push
mov
push
negb
popa
sbb
inc
mov
lea
inc
push
jo
push
leave
mov
fcomip
jge
xchg
sub
push
jecxz
mov
sbb
add
jb
mov
pop
cmp
xor
fadds
xor
push
cmp
pop
mov
dec
xor
sub
dec
add
cmp
cmpsb
sti
mov
add
inc
adc
or
jmp
mov
leave
aam
into
mov
dec
mov
pop
mov
inc
push
push
movsb
clc
sbb
cmc
xchg
insl
pop
loop
rclb
xorl
push
jecxz
jecxz
call
mov
dec
sub
xor
pusha
test
scas
pop
sbb
lret
push
cmp
cli
movsb
dec
and
cmc
lahf
push
int3
nop
arpl
inc
pop
lcall
sub
pop
jbe
mov
stc
imul
out
cmc
les
clc
mov
sbb
or
shrl
cli
daa
int3
out
not
mov
int
out
test
pushf
test
xchg
rclb
aam
nop
mov
sbb
les
push
pop
mov
dec
inc
sbb
adc
jge
jne
push
or
xchg
mov
push
clc
sti
mov
xchg
dec
out
in
or
inc
lcall
adc
cmp
sbbl
enter
pop
mov
jle
mov
jbe
lods
jne
mov
ficomps
push
mov
dec
or
xchg
paddusb
inc
cs
pause
push
js
fcoms
push
or
lret
iret
push
push
and
addr16
mov
pop
push
xchg
sbb
mov
adc
xchg
aad
sbb
dec
cld
inc
mov
jl
and
dec
xlat
nop
push
push
outsb
pop
hlt
iret
and
inc
in
add
les
xchg
xchg
dec
ss
ret
and
mov
cmp
iret
adc
scas
call
jmp
fadds
inc
mov
fisubrl
cmp
mov
xor
mov
rcrb
js
pop
mov
loopne
pop
lcall
xor
inc
pop
in
sti
sbb
inc
xor
xor
mov
cmp
adcl
test
aas
cmp
cwtl
push
dec
mov
mov
mov
add
lock
push
iret
adc
pop
or
dec
push
mov
popa
ds
jnp
jmp
jmp
insl
cli
stos
sbb
mov
xchg
cld
inc
les
jecxz
ja
jnp
push
scas
jae
popa
loop
ds
lods
cmp
sarb
das
jno
push
jp
mov
arpl
iret
lods
sbb
mov
jmp
xor
fisubs
mov
push
movzwl
push
call
sbb
cmp
pop
xlat
outsl
sbb
jge
mov
pop
xor
xor
cmp
nop
rol
icebp
iret
mov
sub
arpl
xor
insb
mov
movsl
push
call
dec
xor
push
icebp
xchg
test
enter
and
out
sub
hlt
lcall
xchg
out
push
pushf
int
stos
xchg
in
test
mov
mov
and
ret
cli
xchg
xchg
stos
daa
jle
lock
push
cltd
clc
lcall
mov
gs
insl
cmp
mov
into
xchg
std
pop
cmpsb
imul
jnp
leave
iret
loop
mov
xchg
cs
sbb
xchg
mov
fsubrs
aam
and
iret
inc
enter
mov
or
pop
andb
lahf
and
jle
mov
mov
sti
mov
xchg
and
aaa
cld
shl
add
bnd
hlt
xchg
fdivl
sahf
in
jae
or
out
mov
or
imul
mov
inc
cmpsb
out
aad
and
repz
cli
jno
out
arpl
in
or
mov
inc
add
insl
leave
jge
sbb
inc
and
xchg
pop
daa
mov
test
lods
pop
arpl
mov
scas
ret
and
lcall
pop
je
adcb
sub
test
ret
jge
push
rcr
cwtl
in
sbb
jo
add
jns
sbb
xchg
cwtl
pop
out
add
data16
add
mov
inc
sbb
fadd
xor
cmp
sbb
and
ja
push
dec
inc
jb
mov
repnz
add
iret
xchg
jne
mov
std
ja
ret
scas
pusha
jmp
cmpsl
fnstcw
jg
out
iret
cmp
stc
sub
jbe
lret
mov
test
sti
into
int
jge
and
cmp
xchg
mov
jmp
leave
push
xor
xchg
mov
shlb
mov
mov
xchg
adc
mov
outsb
int
iret
jno
subl
out
mov
jmp
mov
les
pop
rcl
inc
sbbl
add
stos
inc
fucomi
popa
mov
test
xor
jg
dec
xor
movsl
scas
inc
xor
mov
push
pop
xor
bound
dec
icebp
jl
jb
mov
es
pop
lcall
xchg
jl
nop
jl
out
movsl
fsubrs
jg
jno
daa
sub
xor
lods
pop
or
xchg
flds
cmpsl
mov
inc
cmc
mov
in
dec
sub
adc
addb
jne
lret
push
inc
jecxz
pop
outsb
adc
xchg
pop
aam
in
in
add
iret
fcoms
movsb
mov
popf
rclb
les
sti
fimull
or
lret
push
xchg
mov
mov
push
sti
mov
inc
cmp
inc
or
aad
scas
sub
inc
call
cmp
inc
cmp
jg
cmc
sbb
lock
ja
pop
cmpsl
out
out
jp
fwait
xor
faddp
jb
dec
xchg
inc
aam
js
pusha
sub
xor
mov
imulb
sub
cmp
outsb
insb
xorl
pop
leave
orb
pushf
xchg
add
mov
mov
mov
mulb
daa
insl
xlat
push
pop
outsl
repz
adc
in
cmp
in
xor
outsl
mov
add
fiaddl
push
add
sub
sbb
inc
pop
xchg
and
inc
mov
stos
adc
aas
shlw
mov
scas
dec
and
mov
inc
jmp
sbb
cmpb
cmpsb
leave
push
stos
call
iret
sub
push
xlat
jb
mov
cwtl
cmpsb
std
ja
sub
popa
pop
mov
test
rcrl
sbb
xchg
or
mov
les
xchg
dec
dec
jo
inc
or
mov
call
cmp
jmp
fs
dec
mov
pop
pop
xchg
popf
push
add
pop
nop
add
out
loopne
xchg
cmc
repnz
mov
aad
sub
mov
movsb
or
inc
lock
and
int3
mov
into
dec
and
mov
inc
mov
pusha
or
test
gs
ja
push
pushf
mov
popf
shlb
mov
dec
mov
into
mov
aaa
call
push
out
leave
mul
jb
sarl
mov
and
push
sbbl
pop
xchg
aaa
std
fists
pop
xorb
movsl
loope
adc
fiadds
pop
dec
xchg
cmp
adc
nop
adc
fsubl
daa
dec
sahf
mov
xchg
enter
sbb
in
in
dec
data16
ljmp
adcb
out
dec
xor
mov
and
iret
ljmp
std
pop
js
sbb
xor
in
orl
mov
add
std
add
jg
mov
dec
movsl
ljmp
inc
adc
sub
push
aaa
test
mov
inc
cmp
cwtl
lret
into
mov
dec
xor
and
mov
jo
fcmovb
cmp
adc
fcomps
dec
mov
dec
mov
xchg
mov
xchg
xchg
xchg
test
fs
movsl
enter
cmpsb
adc
jne
mov
mov
jp
sbb
fisubs
cld
test
ljmp
xchg
xlat
pop
dec
sub
ficoms
out
pop
stc
data16
push
int
add
bound
arpl
xor
out
lods
sbb
or
jno
or
pop
xor
inc
mov
and
sub
jg
cmpb
test
mov
insl
in
inc
les
daa
dec
lea
aam
addr16
dec
lods
lcall
inc
sbb
xor
fwait
dec
mov
add
fiadds
jo
call
adc
jmp
ret
mov
or
inc
pusha
mov
sbb
mulb
sbb
add
out
jmp
outsl
jb
stos
jge
mov
loop
stos
jmp
lock
popf
lock
lret
sub
mov
imul
fbstp
sub
fucom
xchg
mov
pop
adc
adc
push
sbb
repz
jmp
std
out
xchg
std
repz
xorl
and
jbe
add
push
movsl
lret
shrb
cltd
inc
mull
ret
push
cs
testb
sub
cwtl
cwtl
inc
into
lahf
cmpsb
jo
or
cmpsb
pushf
push
mov
mov
mov
mov
or
mov
lea
cmp
cmpl
mov
add
popa
mov
jle
jno
jp
jle
xor
call
jae
movsb
pop
add
mov
iret
aaa
fs
jne
mov
dec
dec
push
stos
jmp
sub
sub
adc
sbb
stc
xchg
repnz
cmp
fstps
pop
in
mov
mov
rol
std
adc
mov
cmp
mov
mov
ds
test
mov
insb
fwait
roll
cmpb
xor
testl
sbb
cwtl
adc
and
lock
shlb
mov
mov
jp
std
mov
addr16
cmovg
outsb
popa
pop
or
or
outsl
mov
mov
inc
jle
sbb
mov
mov
out
push
mov
test
daa
sti
push
push
mov
cmp
test
repnz
sub
movsl
aam
mov
dec
and
jno
cmpsl
dec
in
mov
sbb
fwait
push
sarb
pop
push
imul
sahf
inc
pusha
mov
inc
pop
jae
xchg
imul
jmp
dec
push
push
mov
pusha
movsb
fldcw
add
mov
fimull
push
pusha
enter
xor
jp
or
popf
pop
and
sbb
push
sbb
inc
push
dec
imul
add
test
sbbb
mov
mov
push
add
pop
movsl
cmpsb
push
clc
cmpsb
xor
cltd
cmp
or
test
cwtl
fldl
fsubr
lret
jecxz
cmp
das
add
xor
inc
sub
inc
and
aam
jne
outsb
ja
loope
xchg
subb
inc
das
outsb
sbb
push
es
mov
outsb
lea
repz
out
js
in
scas
sub
mov
pop
or
add
mov
add
movsb
inc
imul
adc
fwait
sub
outsb
inc
xor
arpl
pop
and
outsb
and
scas
test
leave
xorb
jg
leave
scas
mov
mov
xchg
loop
inc
mov
or
adc
and
int
dec
add
sti
or
movsl
and
outsb
and
pop
fwait
xchg
or
adc
sub
lock
ds
mov
mov
movsb
ljmp
test
stos
dec
in
adc
push
mov
adc
and
cmp
inc
popa
mov
cmc
ss
pop
movsb
jne
mov
mov
outsl
stc
dec
mov
cltd
jno
rolb
incl
mov
daa
test
sarb
jmp
adc
fndisi(8087
jmp
pop
bnd
inc
lret
cs
jp
test
test
sbb
pop
mov
lret
mov
scas
push
mov
popa
bnd
mov
dec
ljmp
and
aaa
imul
test
test
pop
movsl
sti
mov
les
cmc
sub
jb
add
inc
fidivrs
fwait
mov
js
es
dec
in
out
mov
and
adc
inc
pop
add
inc
sub
shrl
sbb
in
iret
xor
mov
scas
in
loop
repz
inc
inc
call
andb
mov
sub
jl
stos
and
lea
fwait
aaa
push
int3
clc
sarl
mov
es
pusha
gs
push
mov
mov
mov
jns
iret
bnd
hlt
push
add
int3
or
jmp
fisttps
je
out
sahf
loope
cmc
gs
mov
fldenv
scas
pop
in
dec
outsl
hlt
daa
inc
sbb
mov
push
jecxz
das
dec
or
and
clc
prefetch
jp
fcomps
clc
push
lds
add
mull
xor
push
ss
mov
push
mov
imulb
add
xor
sub
stos
das
imul
cmpsl
mov
and
mov
daa
sbb
int3
push
pop
mov
int3
fiadds
xchg
fucomip
shlb
or
jbe
cld
mov
outsb
test
mov
in
mov
inc
jecxz
sub
stos
sub
adc
sahf
xchg
dec
mov
shrb
inc
cmp
lretw
popf
idiv
je
pushf
lods
push
adc
stc
adc
pop
push
stos
or
lock
mov
je
iret
sbb
xchg
jp
insl
jno
ret
xor
lcall
jp
push
add
push
cmp
ja
jg
mov
dec
cmp
loope
xchg
mov
test
daa
addr16
cmpsb
and
push
cmp
mov
leave
lea
or
mov
inc
lds
rcl
pop
mov
push
out
scas
sbb
pop
rcr
push
lahf
inc
mov
dec
xchg
pop
or
mov
jo
mov
loopne
lods
mov
adc
ss
fs
icebp
dec
adc
pop
insb
scas
or
cltd
rorl
in
adc
scas
or
pop
xchg
sbb
fildl
lret
insb
aam
inc
adc
dec
ss
dec
jl
das
mov
out
mov
rcl
xor
addb
push
in
dec
insb
mov
rorl
imul
pushf
fcmovu
sbb
sub
into
iret
inc
xchg
nop
aam
sahf
xchg
cmp
mov
jne
dec
cltd
out
add
mulb
out
out
or
les
in
cmp
or
sub
rcl
retw
pop
out
popf
push
mov
bound
jno
jmp
andl
inc
pop
mov
shrb
fdivrl
sub
xchg
push
addr16
sbb
out
icebp
or
sub
mov
adc
rcr
data16
inc
jmp
adc
jp
icebp
sbb
cmc
cmpb
mov
xchg
mov
cmpb
jbe
mov
jns
add
insl
cmp
inc
jge
sbb
xor
call
lds
lea
int3
cwtl
jle
mov
lods
sub
add
or
clc
or
aas
insl
sub
dec
insl
icebp
cmpsl
scas
cmp
mov
es
daa
xor
ja
mov
icebp
clc
mov
outsb
lea
lds
lcall
lods
ret
and
xor
popa
insl
pop
rorl
pop
xor
pop
lcall
or
push
adc
mov
dec
and
sub
jnp
lock
test
or
adc
call
jl
xor
mov
pop
rolb
mov
mov
xchg
icebp
or
push
stos
stos
and
lods
xchg
mov
cmp
paddw
xchg
and
mov
sub
and
mov
inc
jns
mov
in
cmpsl
dec
push
fwait
out
or
pop
adc
mov
add
dec
fstpt
push
sti
loope
test
push
xor
decb
dec
dec
sahf
xchg
jp
inc
cmp
bound
xchg
mov
cwtl
in
out
jnp
push
jg
and
in
imul
mov
in
jle
insl
shl
popa
pop
pop
iret
pop
in
testl
jg
aam
xchg
pop
dec
fcoml
pop
out
icebp
or
test
xchg
dec
mov
call
push
adc
lock
mov
loop
outsb
mov
push
push
in
test
scas
jns
jmp
mov
in
enter
orl
ja
aad
add
mov
leave
outsl
mov
cmp
add
loop
or
ud2
ret
adc
fsubrl
mov
mov
xchg
stos
cs
mov
movsl
inc
push
sub
mov
daa
add
sub
outsb
jbe
dec
lods
xchg
jmp
mov
push
push
mov
out
test
mov
add
add
add
mov
and
mov
mov
rorb
pop
mov
xor
pushf
mov
mov
fs
dec
inc
jl
mov
adc
mov
cld
dec
dec
lods
jl
bsf
adc
push
mov
jl
adc
cmp
aas
pop
push
aam
mulb
mov
or
or
jns
pop
jo,pn
or
repnz
xlat
adcb
sbb
lods
loopne
xor
loopne
in
pop
andb
dec
sub
adc
jge
xchg
out
imul
lret
stos
or
xchg
arpl
testl
in
js
jnp
aad
sahf
mov
popa
push
and
push
mov
dec
je
mov
lcall
pusha
punpcklbw
in
loopne
in
lods
inc
push
jns
negb
ja
call
bound
jne
mov
push
mov
or
repz
sbb
rcr
xlat
outsl
movsl
ret
pop
add
mov
sahf
std
ror
xchg
inc
int3
inc
mov
out
sub
dec
mov
jp
movb
jmp
mov
jns
mov
sahf
inc
iret
xor
addl
dec
push
mov
das
pushf
sbb
ficoms
je
test
outsl
bound
icebp
mov
add
les
call
out
test
sbb
rcr
ss
inc
mov
mov
inc
ficoml
ds
mov
mov
lea
mov
pop
xlat
subl
pop
add
in
inc
shlb
test
xor
icebp
mov
adc
dec
xchg
lahf
xor
cwtl
scas
ss
jmp
pop
jae
xchg
mov
inc
lock
push
aaa
mov
je
push
xlat
jno
rorl
xor
mov
mov
jge
mov
cmc
xor
imul
mov
push
xor
xchg
push
push
pop
xchg
lods
sbb
lea
mov
pop
mov
imul
out
pop
bound
inc
xor
add
jbe
mov
xchg
popa
fs
adc
dec
daa
stos
lcall
negl
lea
imul
sub
or
stos
adc
ret
shl
arpl
incb
std
pop
into
jle
cmp
nop
mov
stos
push
jnp
arpl
sub
jno
adcb
adc
and
mov
ret
lods
sub
repnz
push
xchg
mov
sub
mov
out
push
pusha
sbb
leave
sub
push
adc
pop
xor
js
mov
inc
int3
pop
push
cmpsl
mov
mov
mov
loope
cmp
pop
rol
dec
sahf
cmpsb
sbb
inc
lds
pushf
xor
sahf
cmp
cmp
sub
xor
add
pop
jns
ljmp
rcrl
lods
lret
rcrl
cmpsl
sub
xorl
stos
adc
lods
testl
push
and
arpl
je
cmpsl
jl
sahf
xor
mul
push
fildll
cmp
lret
push
sbb
add
inc
mov
sub
idiv
popa
mov
lahf
push
push
xchg
xor
daa
call
in
fdiv
leave
push
lret
aad
push
push
cmp
repnz
stos
mov
cmp
into
cmp
fcmovbe
inc
es
loop
add
test
pop
push
imul
int3
outsb
aaa
add
loop
jb
inc
push
cmc
cmp
repnz
mov
shl
adc
push
clc
and
sub
pop
mov
or
mov
fldenv
setnp
nop
xchg
lret
pushf
inc
sub
xchg
xor
pop
mov
mov
mov
inc
jnp
aam
lcall
outsb
nop
add
or
cmp
xorb
pop
mov
jmp
mov
pop
loopne
das
pop
jb
xor
or
xchg
cmp
insb
pop
add
fidivs
arpl
xchg
cmp
jae
lds
xchg
in
popa
ja
dec
mov
hlt
fcomps
jnp
hlt
inc
or
xor
std
scas
fwait
es
sbb
icebp
jne
mov
adc
mov
inc
mov
scas
dec
push
je
jecxz
xor
scas
mov
sbb
push
adc
in
xchg
xchg
in
pusha
leave
in
mov
mov
xchg
ret
push
aad
mov
sub
add
jecxz
repz
push
out
cmp
leave
popa
data16
mov
mov
dec
in
push
mov
sbb
adc
loope
in
xor
shll
andl
pop
and
fdivrl
xlat
jge
cmp
pop
sahf
lea
cs
jb
mov
enter
jg
add
inc
fiaddl
xor
mov
repz
jl
mov
mov
or
ftst
scas
xor
add
std
sbb
jg
push
repnz
cs
mov
das
mov
cwtl
aam
mov
dec
pop
or
cmpb
arpl
fistl
dec
lret
sub
fwait
adc
mov
gs
or
mov
xor
imul
jecxz
xor
xchg
inc
scas
into
push
cmp
in
shlb
test
imul
xorl
adc
mov
leave
push
push
stos
aas
lret
cwtl
pop
cld
mov
fstpl
loope
xor
xchg
imul
incb
sahf
pop
lock
xchg
dec
jge
sub
xchg
shll
loop
cwtl
xchg
mov
jno
push
or
and
repz
mov
dec
les
into
xchg
loope
daa
lcall
jbe
insl
enter
xchg
jb
inc
sub
scas
sbbb
pop
call
aam
in
xor
out
dec
jecxz
repz
sbb
enter
dec
in
lcall
mov
mov
pop
repz
sbb
cmp
adc
fdivrs
adc
jo
scas
dec
imul
shr
les
lds
stos
sub
aam
mov
in
ret
mov
xlat
daa
loop
mov
outsl
or
push
inc
fiaddl
addb
sbb
mov
xor
popa
jle
mov
mov
iret
popf
aad
pusha
xor
test
sub
cmpsb
out
lcall
inc
mov
je
adc
or
cltd
movl
add
adc
mov
bound
pop
clc
inc
add
mov
mov
mov
add
cmpsb
int
cli
call
adc
pushf
cli
mov
dec
or
lcall
push
mov
sbb
cmp
rcr
add
dec
cli
enter
cltd
lock
sti
jg
and
js
add
pop
scas
bound
std
sub
leave
push
inc
mov
test
xlat
xor
jg
mov
mov
out
mov
cmp
push
push
mov
add
divl
jecxz
gs
das
xor
ss
aaa
inc
fists
out
mov
mov
fiadds
push
test
pop
cmp
push
mov
fwait
cmp
xchg
jmp
test
jbe
enter
adc
and
orl
push
ret
out
and
mov
insl
and
hlt
aam
ds
sbb
test
scas
sub
mov
cmpsb
lahf
cmp
push
in
test
jg
push
jge
dec
mov
jb
aaa
mov
cltd
or
pop
inc
xor
int3
cmp
fwait
xor
jae
ret
test
out
xchg
mov
out
jns
dec
jno
pop
push
pop
cmp
mov
pop
pop
outsb
cmp
lods
sbb
lret
in
out
js
idivb
jge
xchg
rcl
sbb
sub
cltd
push
dec
xor
mov
addr16
sahf
push
ja
mov
xchg
push
pushf
sub
xchg
mov
push
adc
xor
out
pop
movsl
jno
xor
mov
fwait
add
dec
gs
ljmp
or
cwtl
or
mov
stc
jne
xchg
int
jo
aad
sbb
jbe
subl
mov
ljmp
ret
inc
lret
aas
fdivl
aad
dec
or
ds
loopne
in
insl
test
ljmp
push
xor
jbe
sbb
cmpsb
xchg
push
mov
mov
add
aaa
mov
sub
pusha
adc
aad
or
daa
pusha
fwait
xchg
xor
xchg
leave
lock
cltd
sarb
sbb
icebp
pop
inc
std
mov
lahf
scas
lea
ret
dec
lret
add
aaa
dec
addr16
mov
jmp
outsb
pop
pop
jns
jle
clc
xchg
pop
out
imul
mov
dec
xchg
push
xchg
jae
mov
orb
shrb
sub
outsl
xchg
lds
mov
mov
mov
jl
cmp
shlb
mov
fldt
fimuls
stos
mov
xchg
add
jo
push
adc
xor
sbb
cmc
mov
jb
sbbb
inc
sbb
xchg
mov
stos
out
scas
scas
jle
pushf
aaa
mov
lods
in
push
or
push
jg
bound
adc
push
pop
sbb
jp
xor
xchg
std
add
test
scas
sbb
in
mov
or
jmp
sub
xchg
pop
sbb
ss
add
jle
int
bound
test
daa
fcompl
movsb
jae
cmc
mov
mov
sbb
rorl
inc
enter
pop
cmc
mov
jb
test
rorb
movsb
inc
loop
bound
mov
mov
mov
mulb
test
bound
ret
mov
loope
sti
jns
jae
mov
pusha
jo
inc
push
shlb
inc
xor
xor
mov
sahf
pop
pop
adc
add
repz
cs
pop
mov
adc
push
push
push
loope
rorb
pusha
cwtl
rolb
arpl
enter
dec
bound
int3
add
add
xlat
pushf
mov
je
jns
sahf
mov
mov
mov
push
mov
mov
or
insb
movhps
lahf
stc
or
idivb
imul
repz
push
dec
es
xchg
fnstcw
xchg
mov
sarb
pop
cmpsb
jne
dec
sar
or
aad
test
and
test
imul
xor
ffreep
inc
cmp
repnz
add
addr16
adcl
inc
sti
mov
inc
aam
jmp
sti
dec
dec
insl
adc
jp
push
mov
clc
or
negl
or
cld
dec
ficoml
jno
lods
es
popa
push
sarl
ss
sar
sbb
popf
pop
and
inc
pusha
faddl
icebp
inc
out
sub
out
cmp
adc
mov
xor
jmp
loopne
stos
xor
aam
xchg
pop
inc
icebp
jne
push
repz
adc
mov
adc
ljmp
xchg
sub
ror
rcr
xchg
notb
movsl
push
xchg
fcomps
in
dec
xor
mov
ret
idiv
nop
es
push
scas
inc
je
repnz
jae
test
imul
jl
and
xchg
daa
push
mov
int
mov
sbb
mov
mov
push
sbb
testb
cwtl
cmp
ljmp
xor
into
in
lret
inc
mov
dec
std
mov
stc
cmpsl
aaa
pop
add
cmpsl
int
inc
iret
jnp
in
or
js
jne
jno
dec
scas
clc
mov
cmp
or
lock
xlat
mov
loopne
rorb
loopne
and
sub
xchg
mov
sbb
lds
xchg
mov
adc
dec
shrl
mov
add
add
sahf
push
int3
xchg
inc
fisubrs
fs
cli
lcall
sarl
int
insb
in
adc
stos
cmp
lods
test
jns
sti
incl
orl
xchg
add
xor
fildl
jb
int
mov
jp
adc
mov
inc
decl
mov
adcb
push
jo,pt
mov
pop
push
pop
movsl
cmp
sahf
in
lods
sbb
lds
inc
mov
sub
sub
jmp
ja
loop
push
add
stc
xor
lahf
xor
pop
inc
mov
xchg
sub
sub
aad
jge
xchg
nop
out
inc
js
xchg
shlb
das
stos
stos
les
push
push
jbe
lahf
dec
mov
gs
das
fdivrs
xor
enter
or
enter
inc
jmp
cltd
iret
mov
or
icebp
sbb
pop
jnp
outsl
hlt
mov
push
test
sub
xchg
inc
pop
jo
pushf
push
push
ja
imul
cmp
jle
sub
out
push
out
inc
notb
push
lods
jno
in
ss
xchg
pop
xchg
mov
cwtl
pop
jecxz
shl
outsb
cmp
test
mov
ljmp
and
and
lret
test
jp
mov
fldlg2
xor
or
lea
out
movsl
scas
inc
xchg
mov
sub
repnz
aas
int
sbb
arpl
jle
stc
push
scas
enter
add
aas
push
addr16
sub
or
push
rolb
dec
imul
jp
or
add
mov
call
sub
int
loopne
or
inc
je
lock
popf
lods
div
mov
arpl
test
lahf
mov
rclb
std
aas
and
and
nop
add
jp
arpl
cmp
lods
sub
es
or
or
in
xchg
adcb
test
test
jg
or
dec
clc
dec
jo
or
pop
imul
aad
sbb
hlt
push
bnd
cmp
je
or
pusha
outsl
sbb
repz
dec
iret
mov
stc
lods
rep
mov
out
add
jns
or
mov
stos
sbb
sub
jne
sbb
inc
gs
jg
out
sub
test
stc
add
push
sub
rcr
insl
push
mov
sbb
push
lret
mov
cmp
imul
movsl
mov
push
in
icebp
imul
inc
and
movsb
adc
add
cltd
sbb
aaa
cmpsb
dec
mov
popf
cmp
lock
out
aam
fiaddl
cmpsl
rorl
push
mov
jmp
or
fildll
sbbl
aaa
rol
imul
inc
adc
sbb
in
into
jno
mov
ficomps
clc
aam
dec
push
push
sbb
iret
arpl
xor
sarl
lcall
push
movsb
in
sub
lea
divb
ret
sub
hlt
push
sub
clc
jecxz
mov
xor
push
rcrb
popf
jg
mov
add
aad
dec
inc
mov
jp
jno
shl
data16
adc
repz
les
push
fisubl
hlt
rcl
pusha
cmp
cmp
mov
je
inc
adc
shlb
fbstp
jbe
mov
mov
ret
pop
and
cmp
das
xchg
xchg
jb
jns
fcompl
and
push
xor
sbb
push
nop
xor
or
jmp
adc
fcmovu
imul
xor
mov
pusha
push
dec
dec
xchg
inc
in
les
cwtl
sbb
jle
cmp
mov
cmpsl
out
ja
test
test
leave
enter
or
pop
xlat
push
xchg
add
cmp
pop
sbb
cmp
sti
aam
sub
mov
mov
imul
pop
rcl
insl
gs
and
pop
popa
xchg
out
pop
iret
inc
popl
jge
pop
mov
pop
adc
inc
movsl
ljmp
xchg
add
xor
and
pop
test
push
mov
mov
inc
sahf
inc
inc
xchg
add
mov
sbb
pslld
negb
pop
xor
sbb
out
push
sbb
ss
movsb
push
lret
add
iret
jne
imul
adc
pusha
xchg
dec
mov
fdivs
inc
popf
insb
inc
dec
mov
rcrb
xchg
push
or
push
cmpsl
out
mov
add
pusha
pop
jle
push
inc
fmull
out
mov
test
sub
arpl
push
in
adc
jg
jno
push
js
stos
xchg
stos
push
push
cmpb
test
mov
repz
clc
inc
orb
mov
add
mov
mov
adc
pop
cltd
clc
fdivr
jo
enter
cmpsl
sbbl
ret
pop
addr16
sub
dec
out
and
int3
dec
mov
mov
mov
test
and
sub
gs
dec
enter
jle
push
andb
xor
scas
ljmp
fmuls
xchg
fiadds
inc
ror
jl
aas
mov
xchg
test
arpl
mov
icebp
arpl
pop
insl
addl
faddl
aaa
xchg
cld
shlb
mov
leave
jmp
jb
mov
add
mov
jbe
insl
icebp
mov
cmp
adc
xor
sahf
adc
pop
sbbl
clc
mov
jg
or
pop
cmc
cmp
clc
daa
pop
xchg
iret
stos
xchg
xchg
jge
cld
sbb
push
or
pop
xchg
and
jno
mov
test
xor
stos
mov
rorl
xor
clc
dec
push
and
adc
idivb
repz
pop
dec
push
xorl
lahf
pop
addr16
jp
ret
ficoms
je
cmp
xchg
loope
repz
pop
jne
je
or
mov
cmp
out
add
dec
loope
daa
sbb
fld
pop
stos
push
fadd
adc
icebp
shr
dec
jecxz
push
sbb
cmpsb
sbb
pushf
push
mov
dec
pop
xchg
lret
sahf
jnp
scas
ja
dec
rorb
sbb
pop
xchg
xchg
jp
xchg
int
jg
lock
dec
bnd
inc
add
mov
aaa
sarl
adc
in
xchg
mov
int3
aam
push
sbb
scas
lcall
ret
xor
clc
sahf
lock
in
out
popf
mov
dec
testb
mov
push
or
pop
sub
push
cs
dec
movsl
mov
inc
cmp
push
std
inc
out
push
cmpsl
sbb
mov
sbb
in
xchg
dec
push
xchg
mov
jns
push
loop
and
rorl
es
fidivrs
xchg
fwait
je
fwait
ljmp
ret
dec
jnp
fldt
dec
sbb
incb
cmp
loop
rol
xor
pop
insb
add
adc
das
arpl
sub
lods
push
jbe
jle
pop
sub
jmp
mov
push
les
mov
sub
loop
push
neg
cmp
test
mov
xchg
xchg
pop
jmp
xchg
int3
xor
rcrb
packsswb
jge
xor
repnz
push
jbe
jb
dec
jmp
pop
ja
out
dec
dec
ljmp
push
mov
mov
xchg
int3
mov
insl
cmp
test
mov
xchg
scas
mov
jmp
mov
sub
adc
sahf
sbb
mov
xlat
dec
call
jmp
inc
imul
loopne
loop
or
sub
fs
idivb
scas
cmpsl
adc
lret
mov
xchg
repz
sub
xchg
sub
incb
in
in
jg
out
lods
xor
inc
das
mov
sbb
daa
clc
and
mov
sub
sti
mov
inc
dec
inc
add
lcall
idivl
loopne
shl
mov
sub
adc
push
out
dec
lahf
lret
pushl
aas
mov
orb
sbb
inc
test
adc
or
es
push
mov
jno
icebp
out
fwait
inc
arpl
add
inc
or
mov
mov
pop
outsb
aad
aas
jb
imul
rcll
or
outsb
scas
ret
in
inc
mov
xchg
es
movsb
mov
mov
dec
adc
bound
jecxz
rorb
xchg
icebp
pop
sub
hlt
jmp
or
mov
lea
xchg
mov
mov
pop
xchg
mov
pop
xchg
int
adc
sub
mov
cwtl
outsb
mov
mov
sub
dec
push
mov
lcall
jns
xchg
or
lahf
in
push
sub
inc
push
idivb
insb
daa
fdivs
out
adc
push
add
aaa
outsb
repnz
and
out
sbb
push
sbb
or
pop
jne
fcoml
xchg
repnz
xor
pop
mov
imul
push
push
add
lock
or
insb
mov
mov
lds
fisttpl
inc
mov
loope
mov
and
mov
mov
iret
push
push
pop
dec
mov
scas
xchg
jno
pop
into
aam
push
inc
into
int
popa
popa
imul
cmp
mov
subb
inc
sti
xlat
cwtl
je
xor
sub
adc
adc
xorb
adc
lret
lcall
pop
pop
mov
or
adc
scas
cmp
and
negb
xchg
mov
mov
call
mov
clc
lods
fstps
inc
aad
cmpsb
xchg
sbb
inc
push
sti
ret
psubw
push
mov
aam
cld
cwtl
lcall
insb
shr
std
faddl
mov
mov
pop
loope
pop
and
cmp
mov
in
cltd
dec
add
ds
aas
mul
aam
sub
iret
arpl
out
outsb
add
pop
xor
ret
movsb
insl
jecxz
bound
push
jg
loope
pop
ja
mov
repz
mov
fisttpl
and
lret
or
add
sub
loopne
xchg
pop
cmp
jne
and
push
mov
imull
dec
cmp
jnp
imul
cmp
leave
push
pop
push
shrb
movsl
adc
cs
adc
stc
stos
icebp
dec
mov
insl
xchg
fdivrl
fldenv
mov
test
out
add
mov
cmp
cmp
stos
lret
xchg
iret
test
outsl
xor
xor
mov
dec
cmp
dec
incb
mov
in
cld
sbb
lea
roll
add
insb
dec
mov
adc
out
mov
in
cmp
add
repz
lods
scas
test
push
lods
stc
int
xchg
icebp
xchg
jb
sub
push
pop
jb
jp
fstl
sub
pushf
push
xor
out
call
jp
cltd
fucomp
cltd
loope
enter
sub
xor
mov
dec
bnd
cmp
es
out
xchg
bound
inc
addr16
data16
leave
cltd
and
or
stos
subb
stos
or
mov
int3
sub
aaa
mov
shrb
or
fimuls
mov
push
cmpsl
and
in
add
inc
les
insb
add
mov
xor
jmp
xorb
mov
mov
xchg
push
out
push
nop
inc
pop
xor
fisttpll
or
pusha
xor
push
cmc
in
iret
push
js
rcrl
pop
cmovo
push
inc
sbb
clc
inc
lret
dec
sti
setbe
stos
push
push
xchg
xor
dec
jp
aaa
pop
adc
jg
pusha
mov
call
jne
mov
mov
fsubl
dec
int3
mov
and
and
negl
mov
fs
cmp
xor
imul
mov
pusha
cmp
test
jo
adc
xchg
nop
pushf
sub
or
mov
filds
vmovlpd
adc
div
cs
adc
add
and
sub
inc
xlat
push
mov
pushf
inc
movsb
add
test
inc
and
pushf
shrl
push
adc
lods
jbe
fcoms
repz
pushf
mov
mov
mov
lcall
mov
push
fidivrl
and
sti
std
loopne
in
sub
xchg
dec
or
inc
sub
loope
dec
or
sbb
cmp
out
lock
cmp
cmp
loopne
or
or
push
jecxz
scas
fsubrs
sbb
push
or
mov
xor
mov
outsb
cs
cmp
dec
cld
xchg
mov
popa
cmpsl
popf
inc
mov
mull
shr
jecxz
movb
xchg
loopne
cli
sti
mov
adc
push
gs
push
js
push
jno
stc
lcall
push
jmp
sbb
fcoms
mov
sub
in
mov
jbe
movsb
std
inc
cmp
push
in
inc
cltd
sub
mov
pop
loop
mov
sbb
call
mov
mov
pop
rcrl
sbb
jae
fadds
pop
mov
inc
stc
xlat
cmp
lds
jg
aad
adc
mov
add
and
push
lahf
jno
dec
mov
jmp
enter
movsl
imul
jge
xchg
fnstsw
xor
sub
mov
sbb
in
and
cmpsl
pusha
jo
rcrl
xor
pushf
cmp
imull
test
jb
nop
xchg
dec
and
mov
jno
rorl
mov
mov
int
adc
popf
sub
movsl
ljmp
add
xor
lea
jmp
or
jp
icebp
lahf
jmp
in
pop
and
popw
fidivrl
jl
inc
fdivrl
sub
jg
mov
iret
sbb
nop
jmp
test
out
arpl
into
dec
rcll
xor
mov
pop
push
dec
cli
ret
inc
js
xor
movsb
cmp
add
sahf
sbb
xchg
jne
jb
inc
cmp
out
push
cmp
push
popa
das
adc
mov
testb
fidivrs
push
adc
daa
push
pop
add
into
and
repnz
cld
les
or
ss
jmp
loope
jg
lret
dec
out
imul
mov
in
addr16
test
cmpsl
xchg
push
call
mov
sub
es
jne
out
outsl
xor
sub
pusha
sbb
cmc
repnz
popa
xor
and
shrb
and
sarl
in
xor
fwait
add
dec
pop
loop
sahf
dec
iret
push
cmc
aad
cli
xchg
add
leave
les
pop
dec
sbb
mov
inc
loope
and
in
pop
jl
iret
stos
xchg
mov
pop
and
stos
dec
jmp
stos
adc
scas
mov
jne
mov
test
test
mov
push
fneni(8087
aam
add
xchg
hlt
fcmovb
inc
in
xchg
stos
push
lock
adc
int3
popf
iret
jae
mov
xlat
mov
push
movsl
addr16
inc
and
flds
xor
mov
pusha
scas
xchg
fidivrs
sbb
into
cltd
fwait
xchg
test
pusha
cltd
enter
jle
push
mov
inc
jecxz
in
mov
in
jle
js
out
nop
cmc
shl
push
dec
arpl
fnstenv
lods
out
mov
divl
outsb
lds
adc
cs
int
xchg
xlat
adc
jmp
pushf
out
mov
in
lahf
std
mov
xchg
pop
add
rorl
pminsw
lock
dec
lcall
jecxz
data16
out
repnz
std
in
int3
pop
outsl
addr16
jb
ja
iret
rcrb
je
popf
notl
adc
sub
pop
jns
sub
fs
cld
mov
xor
into
fstpt
fsubs
insl
and
xchg
scas
xchg
push
cltd
xor
push
ljmp
jmp
outsb
xlat
shlb
cmp
mov
cmp
shl
out
sbb
pop
xor
jp
ucomiss
test
hlt
jo
pop
xlat
orb
jbe
cmpb
insb
mov
je
sub
cmp
in
int
xor
rcll
sti
dec
jmp
mov
shll
in
mov
repz
or
mov
dec
jo
adc
fmuls
inc
xchg
addr16
cmp
test
mov
int
push
and
repnz
rcll
xchg
inc
xor
mov
prefetcht0
test
add
mov
adc
cmp
push
jno
cmp
fstp
cmp
jns
xchg
push
mov
xchg
xchg
cmc
pop
mov
xchg
add
xchg
inc
mov
mov
std
inc
sbb
loopne
mov
in
sti
out
aad
mov
pop
test
je
sub
ljmp
mov
sbb
jg
int
cmp
inc
push
mov
daa
test
in
sarl
clc
push
sub
mov
dec
data16
pop
xchg
psubb
fidivrl
ret
mov
fwait
out
rorb
hlt
pop
test
aaa
repnz
stos
cmpsb
dec
inc
rcrb
push
inc
out
mov
fadds
push
xchg
pop
daa
adc
push
cs
sub
mov
xchg
push
pop
and
test
push
ret
push
sub
rcr
in
jecxz
addr16
pop
fmul
cs
out
push
dec
insb
add
mov
dec
inc
sti
mov
mov
or
dec
and
leave
cmp
mov
movsb
stos
pusha
pop
ret
aaa
or
filds
movsl
jno
push
pop
cs
push
das
scas
xorl
std
scas
add
ja
and
fbld
fnsave
sbb
shlb
inc
call
jb
mov
inc
dec
jge,pn
cld
pop
push
cmp
lcall
mov
and
ja
add
or
jb
pushf
and
sub
punpckhbw
aaa
clc
bound
push
in
fucomi
xchg
sbb
and
decb
lret
addb
mov
xchg
inc
adc
rcrb
lea
addr16
cmp
fsubs
adc
sbb
push
inc
daa
mov
daa
mov
sbb
enter
clc
test
sub
lock
inc
xchg
mov
enter
cli
rcl
pop
sarl
jp
imul
pop
mov
es
pop
ja
inc
xchg
and
add
ja
sub
icebp
popf
imul
mov
cli
cmp
pop
add
scas
inc
dec
cs
jae
adc
pop
mov
sbb
icebp
arpl
out
mov
jecxz
aam
jne
inc
adc
test
rclb
in
sub
shr
int3
inc
push
in
and
popa
ror
rcrb
dec
negb
and
frstor
sahf
adc
lds
stos
test
pusha
daa
mov
repz
mov
test
out
mov
push
aam
out
mov
lea
les
xchg
cli
loopne
shr
add
mov
push
repz
mov
f2xm1
push
idiv
fs
fdivrl
icebp
push
iret
lret
in
sub
nop
pop
xchg
bound
mov
inc
cmp
dec
push
gs
ss
jmp
pop
cmpsl
sti
int3
jb
lcall
push
inc
mov
cmpsl
push
cmp
inc
pop
xchg
inc
notl
push
cmc
icebp
inc
rorl
xor
lcall
jg
aad
or
push
mov
cs
or
jne
mov
inc
or
cmp
xchg
repz
shrb
sub
or
in
push
push
fcmovnu
pop
test
std
negb
jl
mov
testl
outsl
popa
lcall
push
fisubrs
ljmpw
bnd
adc
lods
push
xorb
sti
mov
pop
loope
sub
sbb
in
adc
sti
aam
daa
mov
and
xchg
fisubrs
popf
mov
cli
fists
push
cmp
test
shr
imull
mov
dec
pop
data16
jo
cld
sbb
jbe
and
mov
mov
inc
and
cmp
push
stc
out
cmc
add
inc
movsb
jmp
enter
pop
popa
mov
lds
clc
mov
dec
add
lods
int
inc
sbb
ret
ds
fs
or
int
xchg
xchg
dec
and
movsl
lcall
les
test
adc
push
std
arpl
les
stc
mov
jae
mov
jmp
inc
push
fwait
lods
mov
lods
sub
testb
adcb
inc
dec
aam
dec
sbb
imul
outsb
aaa
leave
jl
jmp
fistl
movsb
lods
xchg
cld
xlat
loopne
test
fldl
pop
jo
pusha
and
adc
xor
mov
jnp
rcr
ret
xor
fldcw
rcr
lock
mov
dec
xchg
and
sub
imul
lahf
in
les
out
mov
xor
in
call
xchg
cs
ds
adc
dec
cwtl
scas
adc
lds
cmpsb
xchg
aam
sub
aad
lahf
or
adc
pop
mov
and
ficomps
mov
sub
and
mov
cltd
sbb
mov
movsl
inc
aam
or
ja
test
dec
fnsave
xchg
sbb
leave
adc
les
insb
push
out
push
pop
jb
inc
not
xchg
int3
dec
add
xchg
lret
xor
ficoms
aam
cwtl
pop
insl
push
dec
dec
ds
mov
js
or
imul
adc
dec
cmp
pop
imul
mov
scas
testb
into
xchg
cmp
sub
ss
push
jb
es
test
int
cltd
jne
das
push
movsl
push
stos
insb
push
shll
stc
sbb
cld
push
pop
std
xchg
adc
sbb
xchg
cmp
pop
divb
shr
adc
repz
rcrl
bnd
mov
clc
lahf
test
ja
push
testb
jmp
xchg
mov
lret
sub
std
mov
out
mov
push
add
adc
dec
cmp
xchg
sbb
scas
stos
clc
mov
xchg
and
mov
pushf
xor
push
inc
sub
cmp
hlt
sbb
or
or
iret
dec
push
adc
and
hlt
add
in
mov
push
pushf
notl
fistpl
push
sti
dec
sahf
out
je
adc
lcall
sbb
cmpsl
addl
jno
inc
into
add
inc
cmpsb
inc
mov
aam
dec
push
fistps
and
orb
push
lds
or
loopne
in
and
test
mov
lret
fstpt
ss
icebp
scas
inc
pop
js
ja
rorb
sti
inc
xchg
jo
mov
leave
mov
sbb
push
inc
insb
jo
in
cmp
add
ja
add
cltd
loope
ret
cmp
into
fcmovbe
mov
dec
dec
scas
pop
xor
dec
aas
cmc
mov
and
fstl
cwtl
xor
test
loopne
in
outsb
inc
push
pop
cs
std
lret
ret
daa
mov
xchg
shlb
mov
addr16
push
dec
lock
push
pop
push
loopne
jne
jp
fisttpll
roll
push
cli
cmpl
mov
lods
lret
rcrl
xor
jp
jbe
xor
cli
cmp
in
into
fs
std
jb
sbb
push
fldenv
loope
cmc
dec
jae
aas
mov
adc
sub
mov
pop
dec
adc
push
dec
xchg
jb
jecxz
mov
jge
jns
pop
lods
cmp
movsl
out
dec
pop
call
sub
insl
xchg
mov
mov
into
gs
roll
std
pushf
aad
and
pop
ret
inc
xor
pop
push
ret
popf
mov
jl
das
aam
sbb
sbb
jecxz
lret
push
cmpsl
leave
mov
fiaddl
ljmp
mov
andb
popa
mov
xchg
adc
lea
sbb
scas
mov
hlt
mov
je
dec
sub
clc
sub
adc
push
push
dec
push
aam
test
test
aaa
dec
inc
test
into
scas
sbb
mov
cmp
xchg
and
lret
cltd
jns
lahf
test
cmp
inc
std
and
jo
sub
icebp
out
or
outsb
jecxz
rcrb
push
inc
jae,pn
les
push
sti
dec
push
pop
movhps
xor
sbb
ljmp
inc
mov
testl
loope
ret
dec
fwait
je
arpl
push
sub
gs
xchg
loopnew
out
sti
stc
insl
inc
and
cmp
xor
data16
test
hlt
pop
arpl
test
pusha
inc
lret
jae
mov
call
punpckhdq
shrl
adc
lea
rcr
lock
mov
das
push
push
xor
mov
loopne
cmp
pop
mov
in
xor
dec
xchg
push
sti
mov
imul
and
shl
and
mov
test
test
cwtl
cmc
popf
into
jnp
mov
loopne
in
lcall
add
xchg
jl
push
push
or
xor
dec
imulb
out
test
xchg
imul
mov
fidivs
scas
and
loope
rcrb
cmpsb
dec
jmp
add
add
mov
repnz
jge
ljmp
jg
popa
aam
xor
push
sub
mov
xchg
jae
in
sti
in
xchg
pop
fwait
sub
pusha
cs
frstor
adc
std
lock
out
addr16
sbb
push
movsb
inc
fmuls
adc
aas
or
fsubs
adc
mov
jmp
cmpsb
shll
fmull
call
aas
icebp
push
mov
dec
imul
add
mov
dec
sbb
lcall
movsl
jbe
jecxz
cmp
orl
sbb
enter
mov
add
jae
addl
jb
imul
mov
xor
stos
bound
xchg
lea
or
mov
gs
and
aam
xchg
popa
xchg
ljmp
mov
mov
push
pop
jl,pn
daa
roll
xchg
lahf
dec
movsl
dec
popf
in
adc
icebp
icebp
repz
loope
cmovb
jmp
sti
push
notl
add
imul
adc
xor
add
xor
mov
insb
ucomiss
loopne
mov
mov
sub
in
jg
cmp
fimuls
movsb
dec
jmp
dec
divb
cmp
mov
xchg
in
cwtl
fcmovbe
arpl
adc
mov
xor
add
fwait
xlat
in
cmp
scas
mov
push
out
sahf
inc
lods
sahf
xchg
je
call
xchg
push
inc
dec
xchg
ficompl
xor
xchg
push
ja
scas
ret
push
xchg
add
cmp
add
inc
dec
xor
adc
add
dec
scas
ret
mov
stos
lcall
sub
pop
movb
cmpsl
push
dec
push
push
pop
repnz
mov
ret
mov
sbb
or
jns
push
test
xchg
iret
cmpsl
push
and
jge
fcmove
mov
dec
push
cwtl
add
mov
inc
mov
pop
call
cli
mov
xor
in
push
sbb
orl
stc
mov
int
sbb
negl
inc
xchg
out
xchg
into
xchg
xlat
int
push
sub
xchg
adc
repz
bound
pop
jbe
push
scas
xor
or
mov
jne
aas
push
int
sahf
imul
sub
mov
lret
fcmovbe
jne
dec
mov
xchg
test
jecxz
pop
cmp
mov
aas
imul
out
lahf
cmp
jne
mov
pop
mov
cmc
pop
add
mov
adc
xor
into
pop
fistpll
mov
cmc
dec
imul
orb
inc
clc
ror
xor
test
mov
lret
jmp
push
and
add
fsubrl
mov
popa
insb
stc
lret
xor
enter
xchg
xor
pop
sub
in
sub
call
jbe
cmp
test
mov
ficoml
enter
test
mov
outsb
adc
jb
gs
pop
adc
scas
mov
mov
add
rcrb
lock
fs
xchg
add
andl
jno
lods
mov
jp
or
jmp
mov
incb
shr
inc
dec
and
xchg
stos
sti
out
icebp
jno
xchg
fs
std
in
dec
in
or
jmp
arpl
loope
call
mul
pop
pop
js
sti
or
out
adc
adcb
fcomip
mov
cmp
lods
leave
ficoml
jnp
push
mov
adc
inc
push
adc
push
pusha
and
dec
sbb
add
jp
and
inc
popf
aad
jo
in
xor
push
into
iret
inc
sub
enter
inc
lds
sub
arpl
das
shl
movsb
add
cmp
jb
popf
aad
repnz
loopne
xor
sbbl
stos
ret
int
sub
test
cmp
pop
stos
add
inc
fistpl
int
or
xchg
dec
sbb
pop
out
sub
scas
out
jge
adc
rorl
lahf
ja
or
inc
mov
add
mov
stos
pop
jmp
jns
push
inc
sub
jns
jecxz
jecxz
das
test
jne
add
xchg
mov
mov
repz
xor
pushf
in
and
pop
hlt
mov
inc
aad
int
xchg
or
in
cmc
leave
clc
xchg
lods
mov
dec
movsb
push
jmp
inc
mov
jno
mov
jmp
popa
aam
and
je
dec
sbb
mov
dec
pusha
repz
mov
mov
inc
add
scas
std
outsb
gs
mov
out
mov
stos
cmp
shrl
xlat
ret
sub
stc
mov
pop
es
pop
loope
jge
jb
jge
mov
jb
jecxz
dec
xlat
mov
insb
aad
cmpsl
out
loope
pop
iret
sub
int
jno
xchg
cmp
dec
or
xchg
lahf
lahf
push
inc
dec
repz
addr16
les
jne
adcl
add
sahf
xchg
fadds
xor
cli
push
scas
jo
pop
cs
cmp
push
test
test
pushf
ljmp
xor
out
dec
add
mov
outsl
xchg
adc
lcall
loopne
sbb
mov
adc
fisttps
push
dec
xlat
or
cld
lcall
pop
movq
in
sbb
cli
add
mov
aam
mov
insl
mov
inc
outsb
cmpsb
pusha
jno
cmc
xchg
in
fsubl
test
or
xchg
cli
inc
jae
dec
pop
dec
mov
dec
mov
mov
xlat
push
popf
lea
fcompl
inc
scas
pop
mov
repnz
jns
jns
fcoml
repnz
loope
xchg
jnp
fmul
and
or
adc
popa
mov
add
sub
or
and
popf
lret
in
sbbb
push
andl
out
jmp
les
popl
flds
sub
dec
es
scas
loope
clc
fcmovnb
popf
xor
lret
loope
cld
inc
mov
js
add
mov
adc
pusha
dec
adc
xchg
lahf
icebp
xchg
jg
lahf
test
sbb
pop
push
xchg
and
out
pop
mov
adc
jb
dec
incb
out
adc
repz
movsl
addr16
pop
sbb
inc
hlt
je
dec
xchg
lea
xor
notb
push
push
shr
out
outsb
ret
mov
aaa
sbbb
inc
push
inc
adc
xchg
mov
xchg
cli
decb
xorb
jbe
lods
sbb
mov
cmp
sub
inc
mov
or
mov
call
aaa
jle
mov
add
jg
cmp
push
hlt
jne
loopne
push
ljmp
mov
cld
adc
sub
sbb
inc
popa
sahf
add
cmp
sub
jb
cli
ljmp
addr16
push
inc
repz
out
jecxz
pop
ret
mov
push
lods
push
sbb
mov
jmp
cmpsb
fmuls
sub
cmpsb
xor
repz
jns
loopne
pop
add
roll
pop
popa
dec
xor
fbstp
pop
clc
jnp
outsl
cmp
incl
ss
iret
std
xchg
push
pusha
ja
inc
js
daa
data16
fwait
cmp
out
and
call
call
mov
ret
addr16
dec
push
mov
and
push
inc
pop
pop
sbb
pop
xor
mov
aad
imul
push
jno
insb
sbb
shl
and
subb
outsb
mov
test
mov
rcl
xchg
jbe
out
cmp
lds
adc
pushf
jle
cwtl
pop
notl
pop
sub
mov
lahf
jl
dec
sarb
and
sub
lahf
push
sbb
dec
icebp
inc
cltd
test
inc
test
inc
test
mov
pop
ja
incl
popf
mov
xchg
jns
scas
pop
xor
ds
and
mov
aam
rclb
lret
dec
mov
rclb
jp
cmp
mov
jmp
add
pop
xchg
in
popf
cmp
loopne
lods
outsb
fmulp
lock
mov
xchg
cmpsl
xchg
mov
inc
adc
mov
sbb
lock
lcall
hlt
mov
stos
sub
mov
mov
sub
add
or
stos
mov
cmp
inc
ja
cmc
movsl
lods
pop
adc
cmp
cwtl
aaa
pop
jae
mov
pop
or
dec
sub
xchg
xchg
sbb
sbbb
aad
out
lahf
ds
lods
xchg
sbb
push
pop
stc
inc
addr16
xor
fdivrl
jbe
and
sbb
sar
insl
out
sub
fs
loope
cmp
sbb
jno
xchg
test
adc
mov
rolb
inc
mov
out
int3
cltd
add
imul
jb
mov
loopne
add
xor
ja
jae
mov
xchg
pop
mov
or
xchg
in
test
mov
fisttps
addr16
sbb
mov
adc
inc
loopne
sub
and
das
into
mov
fmull
mov
in
jecxz
xchg
adc
lret
xchg
mov
sti
enter
adc
mov
lea
rcrl
and
sbb
and
repz
and
mov
sbb
mov
rorb
pop
pop
cmp
and
mov
xor
pop
inc
mov
std
stc
lds
xor
js
or
mov
add
aad
imul
push
movsb
jl
jl
push
adc
xor
out
loop
hlt
enter
or
or
fisubs
xor
mov
outsb
in
popf
mov
push
jmp
dec
push
jmp
aaa
cmp
insb
push
push
leave
xchg
pusha
scas
stc
subl
dec
or
jbe
pop
jmp
je
arpl
enter
add
push
roll
outsl
xchg
test
cwtl
dec
lahf
sar
rcrl
loope
mov
pop
jo
push
sti
xor
inc
mov
and
lret
cmp
jg
out
xchg
jle
and
mov
lret
neg
dec
movsb
ds
push
inc
fistps
push
adc
pop
dec
xlat
aaa
sbb
xor
in
sub
xchg
es
lea
sbb
dec
fs
inc
movq
insb
aad
addr16
idivb
jg
stc
xor
mov
jecxz
xor
jp
xor
sub
aad
cmp
push
mov
and
data16
pop
std
xchg
mov
dec
inc
push
pop
sbb
repnz
cmp
flds
popa
and
leave
popf
mov
mov
jle
xchg
arpl
shlb
adc
pop
add
int3
xor
push
pop
ss
aad
fnstsw
jg
xchg
fadds
adc
pop
arpl
push
outsl
ljmp
mov
mov
inc
push
pop
dec
adc
and
push
clc
mov
test
inc
shll
jmp
xor
dec
aaa
loopne
cmpsl
sub
mov
pop
ja
sbb
push
pop
xchg
xchg
add
scas
enter
push
ja
pusha
test
mov
sub
sub
inc
jl
pushf
sbb
push
outsl
dec
jmp
and
into
inc
adc
push
addr16
or
xchg
nop
cli
popf
sub
into
cmp
jb
outsb
scas
dec
pop
mov
fcoml
xor
cmp
arpl
arpl
out
mov
addb
iret
cmp
or
add
ret
cltd
jne
stc
call
inc
test
stos
ljmp
cmc
sbb
inc
test
jns
cmpb
push
mov
push
jo
aas
xor
push
cmp
inc
pop
adc
out
and
popa
jl
repz
and
popf
mov
adc
sbb
mov
adc
inc
jbe
or
xchg
daa
or
xchg
fsubrl
adc
jl
push
dec
mov
push
out
clc
xchg
mov
push
lret
aas
fidivrl
ds
push
imul
ljmp
and
fwait
pop
sbb
add
movsb
ja
in
xchg
hlt
adc
push
xchg
out
xchg
mov
lock
or
xchg
add
pushl
pop
lret
cmp
adc
add
mov
lods
ss
in
dec
lret
lds
mov
push
mov
and
xchg
cmp
call
aaa
repz
jne
cli
xor
mov
scas
or
jb
xor
jbe
xchg
sahf
lods
repz
fiadds
pop
ret
in
scas
sahf
mov
pop
cpuid
mov
mov
lcall
jae
aam
push
push
call
call
jge
sbb
stos
mov
jle
daa
scas
orl
into
popf
sub
sub
lret
pop
cld
jg
push
test
jp
pushf
mov
xor
push
sub
pop
out
fcoms
mov
push
push
mov
outsb
sbb
outsb
mov
jecxz
shl
cwtl
lret
dec
inc
inc
fiaddl
cmpl
mov
shrb
add
and
ljmp
push
mov
mov
inc
dec
mov
pop
fdivl
loopne
sub
and
ret
test
negl
in
lret
push
pop
xchg
jbe
addr16
inc
sbb
xchg
or
cmp
ficoml
dec
mov
add
js
jecxz
xchg
leave
xchg
sbb
les
mov
fs
lret
xor
daa
subl
in
cld
xchg
addr16
push
sbb
jp
fcoml
pop
inc
icebp
inc
sti
and
outsl
es
fbstp
dec
in
mov
in
jne
lods
sbb
or
pop
dec
mov
mov
js
jo
pusha
repz
loope
xchg
in
mov
out
adc
rcrb
ja
mov
mov
mov
subl
jno
cmc
jbe
push
test
lea
test
dec
push
xor
sbb
mov
cmc
mov
lods
cs
cli
imul
pop
add
dec
sti
mov
cmp
divl
es
fldcw
or
sbb
imul
lock
bnd
out
clc
hlt
in
xchg
add
xchg
jmp
loope
push
hlt
test
lahf
ret
je
movsb
mov
lcall
inc
push
cmc
sub
repz
pop
out
xor
imul
adc
je
adc
mov
or
sub
and
popf
rclb
addr16
adc
mov
pop
pop
ret
mov
pop
loop
fisubrs
sahf
mov
stos
in
stos
fsubl
in
pop
and
enter
scas
push
push
outsb
xor
ss
gs
cmp
pop
xchg
lahf
mov
and
mov
lret
xchg
dec
dec
aad
adc
shl
movsl
xor
inc
imul
cmpsl
cld
lds
inc
aas
xchg
sub
mov
repnz
std
pop
lret
xor
jmp
mov
and
dec
pop
adc
mov
scas
xchg
loop
lret
pop
into
clc
lock
lahf
sar
mov
sub
sub
cmp
push
outsl
pop
mov
mov
xchg
adc
cltd
cltd
mov
mov
adc
out
mov
and
dec
jne
xlat
or
mov
and
movsl
in
xchg
ja
dec
jae
add
push
loopne
or
mov
sbb
pop
jnp
fistpll
cmp
xor
xchg
xor
lahf
aas
lret
or
cmp
out
xor
xchg
push
sub
clc
add
mov
jmp
cld
mov
loop
bound
dec
mov
stos
subl
jo
cltd
into
xchg
sbb
mov
ja
mov
orb
add
test
aaa
xor
inc
mov
mov
cmpsl
fsubrs
sbb
or
and
mov
jbe
aad
sub
mov
or
test
pop
std
out
jmp
xchg
aam
out
xor
cmpsl
mov
pop
sub
aam
shll
inc
ret
jns
cwtl
mov
inc
mov
bound
and
andl
dec
int3
cmp
push
imul
addl
add
pop
mov
or
mov
sbb
or
mov
pushf
jecxz
add
addr16
dec
push
das
sbb
or
les
jle
push
sub
sub
xor
call
mov
add
aas
cmp
dec
incb
cmp
cli
div
jb
out
adc
inc
xor
cwtl
leave
fiadds
das
or
xor
jg
jnp
arpl
or
add
or
add
pop
popf
jle
dec
test
shlb
jno
xchg
bound
cmp
mov
push
scas
pushf
mov
sub
inc
mov
inc
xchg
sbb
arpl
divb
push
aaa
pcmpeqb
push
dec
dec
in
outsl
out
pop
fistpl
fstps
inc
das
sub
xchg
mov
push
cmp
outsl
push
adc
jl
xlat
movsl
in
sub
iret
pop
icebp
add
cltd
mov
or
icebp
cmpsl
xlat
loopne
arpl
imul
into
push
pop
cmp
mov
xlat
sahf
out
out
xor
int3
imul
adc
push
mov
jbe
sti
or
frstor
inc
pop
push
and
pop
xorl
js
mov
mov
dec
movzwl
hlt
dec
cmpsb
out
popf
data16
int3
mov
ss
and
jns
jge
imul
scas
mov
sbb
aaa
cmp
sub
lahf
shrb
push
ds
xor
mov
xor
dec
orb
xor
loop
jl
fs
cmpsl
rcrb
cmp
mov
shlb
or
out
out
stos
dec
daa
jns
mov
xchg
lds
lret
add
lods
stos
mov
mov
in
and
sbb
les
lea
in
jle
imul
adc
and
mov
xchg
jo
push
addr16
into
sbb
adc
xor
xchg
sti
inc
dec
iret
adc
test
mov
dec
cmp
and
ret
add
cs
mov
mov
inc
pop
jg
sub
jl
mov
push
mov
icebp
xchg
lea
xchg
shrl
ret
in
sbb
cmp
aad
mov
mov
rcll
cmc
mov
cmpsb
push
sbb
fiaddl
std
dec
cmp
lret
movsb
fdivp
lods
or
dec
push
into
push
iret
jle
dec
out
fs
mov
mov
icebp
pop
movsb
mov
mov
adc
cmpsl
jle
fdivl
jno
pusha
xor
ficoms
or
jb
shr
sbb
push
decl
sbb
lret
stc
adc
aaa
je
fwait
dec
mulb
cmp
stos
sbb
loope
js
adc
out
stos
adc
or
aas
push
jne
pop
add
enter
jge
jmp
adc
xchg
inc
outsb
mov
add
lds
mov
cwtl
cli
loopne
dec
add
rol
adc
imul
jo
inc
sub
mov
pop
adc
sbb
pusha
xor
dec
xor
andb
mov
sahf
sbb
roll
sbb
out
inc
adc
fimuls
mov
int3
jb
push
mov
xlat
xchg
push
divl
loope
pop
shlb
cltd
jb
icebp
loopne
incb
and
aas
ficomps
js
inc
fbstp
call
arpl
gs
es
stc
mov
push
dec
inc
sub
iret
mov
dec
cmpsl
adc
jge
into
lret
cwtl
push
movsb
push
les
jnp
into
insl
in
lea
es
cmpsl
and
dec
stos
dec
pop
jbe
lea
clc
stos
inc
adc
out
imul
sti
and
mov
sar
pop
fcoml
mov
ss
adc
fs
in
sahf
sub
orl
xor
in
scas
or
dec
call
scas
scas
pop
mov
and
int
fucomi
fimuls
mov
es
pop
shrl
mov
mov
push
pop
les
stc
jbe
cmp
push
lea
shrb
xchg
or
mov
lock
lret
mov
sbb
sub
xor
stos
pop
sub
adc
jg
test
xor
xchg
add
adc
push
ret
daa
loopne
push
dec
xchg
out
cmpsb
adc
pop
arpl
outsl
jg
add
pmulhuw
lcall
ljmp
mov
inc
call
repnz
jbe
std
aaa
iret
lea
jns
push
nop
dec
dec
notl
xchg
sti
jbe
arpl
pop
mov
enter
pop
ljmp
inc
xchg
adc
fcoms
fdivs
sub
icebp
fsubrs
lods
testl
cmp
xchg
sbb
cmp
dec
dec
pop
scas
add
adc
pop
out
je
addr16
push
cmp
fsubrs
bound
movsl
sahf
jp
jecxz
ret
inc
call
fmull
dec
and
pusha
sub
arpl
pop
test
jmp
in
int3
jne
mov
cld
jle
dec
ret
jb
pop
xchg
pop
sub
xchg
mov
inc
lret
les
inc
mov
pop
loopnew
jge
sub
lret
sbb
mov
cmp
inc
mov
pop
scas
cmp
lea
es
and
jne
fdivp
out
jle
inc
lahf
pop
jae
mov
xchg
in
sub
sub
fisttpll
rcr
jo
les
cmpsl
xor
and
cld
sub
enter
jl
negl
fmull
sti
ret
cltd
mov
int
das
rcll
mov
mov
mov
add
fistpll
movsl
inc
mov
mov
in
xchg
xchg
iret
push
adc
popf
test
cs
and
outsb
aad
popf
mov
mov
mov
sarb
iret
ret
call
sbb
jnp
push
or
lea
xor
ret
in
push
inc
cmpl
loope
testb
dec
cmc
add
xor
loopne
and
cs
push
mov
pop
in
xlat
test
xchg
repz
cmpsb
mov
lahf
mov
mov
lret
sar
icebp
test
jo
mov
subl
sahf
mov
scas
xchg
data16
ret
mov
gs
mov
add
push
xor
lret
push
stc
add
jge
lock
xchg
cmp
mov
xchg
sar
fs
mov
addr16
dec
push
repz
addr16
imul
pop
dec
cs
fsubs
jnp
cmpsb
mov
repnz
jl
scas
push
mov
in
or
mov
fcoml
negl
mov
roll
cmp
push
push
adc
mov
ret
out
stc
fnstcw
pop
cmp
stc
aad
cmp
je
jne
shll
push
lret
xorl
dec
push
sbb
das
jmp
das
mov
movsb
fistpll
rcrb
insl
xor
outsl
cmp
in
gs
std
inc
aas
cmp
mov
ret
sub
or
fidivrl
or
addr16
int3
push
out
test
lods
mov
adcl
jmp
sbb
cmc
push
mov
mov
push
insl
pop
inc
ljmp
int
pusha
in
sahf
fwait
mov
fldenv
xchg
lea
int
pop
movsl
test
ja
xchg
out
scas
adc
outsb
sbb
andb
in
lods
and
insl
mov
or
jne
cmc
les
lds
lcall
sbb
jno
in
das
adc
pushf
jg
pop
and
mov
pop
das
ficoms
pop
int
cmpb
xchg
frstor
sbb
jp
jmp
push
int3
push
flds
addb
addr16
cmp
xor
mov
addr16
test
cmpsl
push
lahf
push
popa
adc
test
push
push
out
sbb
sub
cltd
lock
call
mov
int3
or
cmp
inc
mov
adc
pusha
fisttpl
js
outsb
jb
out
test
cwtl
fildll
ret
push
fsts
call
ret
inc
fsubrs
and
clc
mov
clc
mov
and
mov
punpckhbw
stos
mov
jmp
inc
mov
cmpsl
push
aas
jp
add
jge
stos
sbb
or
repnz
add
int
or
xrelease
inc
cmpsb
pop
mov
jecxz
dec
jb
cmp
dec
test
fidivrs
ffreep
fsubrs
jle
mov
out
dec
inc
fimuls
insl
dec
xchg
lods
inc
mov
inc
movsb
pop
pop
mov
jbe
ds
jge
mov
jge
jge
js
bound
jae
inc
and
out
popf
mov
lea
sbb
lock
push
comiss
inc
sbb
inc
xchg
ss
and
dec
jae
push
and
out
fadd
jo
std
cli
xor
dec
mov
add
mov
or
mov
or
pop
push
rcrb
xchg
es
test
cli
mov
pop
mov
cli
sub
add
add
push
mov
push
xor
jge
sahf
jbe
jl
rcrl
jle
xor
inc
sarb
cmp
jns
inc
ret
cmp
das
jo
inc
pop
inc
or
fisubrl
cmp
cmp
dec
fdivp
cmc
sub
mov
mov
lahf
fsubs
loope
loop
lret
xchg
out
ud1
mov
push
mov
or
jle
aas
mov
xchg
aad
stc
push
adc
shll
or
mov
and
push
push
xor
and
sti
enter
lret
ds
fs
xor
lea
jae
aam
test
pop
mov
enter
clc
aas
arpl
aas
push
xchg
test
inc
subb
xlat
lea
movsb
push
pop
pop
into
jmp
sbb
mov
or
mov
fs
push
xchg
push
lea
mov
add
mov
dec
ss
mov
sti
cmp
out
sbbl
jmp
jno
popa
pop
popa
add
cmp
out
cmp
jmp
mov
mov
inc
pop
push
insl
mov
sub
and
stc
xor
ljmp
jbe
add
clc
fisubl
mov
push
mov
jno
jb
xor
jo
inc
ret
cmc
sbb
aaa
sbb
popf
and
adc
jl
add
lea
pusha
int3
dec
divb
fwait
sti
jge
jl
cmp
pop
bound
xor
in
and
push
cmp
ja
or
xchg
in
and
or
cmp
daa
or
xchg
out
pop
loopne
fucom
clc
shlb
inc
daa
lds
je
scas
inc
mov
dec
mov
ljmp
dec
jo
repz
gs
dec
push
jmp
xchg
psllw
shl
arpl
sbb
inc
and
dec
inc
test
pusha
add
or
dec
push
adc
lahf
jns
clc
lds
push
push
xlat
dec
into
rorb
pusha
testb
or
mov
dec
jmp
add
mull
jbe
lock
xor
hlt
jg
outsl
xchg
nop
aas
xchg
sub
inc
add
jns
adc
jno
cli
mov
iret
pop
outsl
cs
pop
in
fldcw
adc
rcr
pop
into
mov
fldl
inc
scas
push
stos
pop
into
insb
ret
movnti
dec
loopne
sbb
mov
daa
in
dec
loop
cmp
push
sub
movsb
in
and
repnz
cs
in
cmpb
xor
outsl
jne
sarb
scas
scas
icebp
aad
or
mov
push
cmc
cmc
sub
xchg
arpl
mov
mov
dec
hlt
and
xor
aam
inc
inc
repz
push
xchg
inc
mov
aaa
push
into
lret
xchg
jg
add
fmul
jp
sbb
or
out
jecxz
daa
bound
xor
sbb
cs
xor
fists
or
xchg
xchg
pop
xchg
divl
jb
cmc
adc
pusha
cmp
sahf
bnd
jle
test
xchg
test
sarb
sar
and
sub
ljmp
inc
or
or
loopne
xchg
adc
jg
and
or
add
mov
mov
pop
cltd
test
out
dec
test
push
test
push
fwait
repz
cmp
ret
xchg
xchg
out
pop
jmp
sub
jns
lds
push
inc
xchg
mov
repnz
sbb
test
cmovno
dec
add
xor
out
int3
sub
scas
jbe
stc
push
or
jge
jae
faddl
sub
aam
imul
clc
cmpl
push
int
dec
ficoml
lods
lock
xchg
lret
ja
jp
xor
repz
and
test
add
es
jecxz
lock
add
mov
pop
sub
sbb
add
nop
hlt
mov
cli
sub
cmp
mov
outsl
sti
sub
jns
cmp
cld
pop
xchg
xor
outsl
add
or
mov
cmp
ljmp
iret
xor
push
out
bound
jg
jge
aas
loope
imul
inc
pop
fwait
xor
shll
icebp
enter
scas
xchg
dec
adc
loopne
dec
imul
mov
cmpsb
cltd
mov
jbe
pop
or
jns
xor
push
mov
cmp
jmp
xchg
push
push
adc
adc
and
stos
and
xor
dec
cmpsl
pop
sub
imul
jae
pop
lcall
imul
mov
sbbl
dec
sarb
push
and
es
jmp
repnz
mov
lcall
fadds
out
nop
add
es
rcrb
push
call
dec
ljmp
imulb
sub
inc
outsb
mov
inc
adc
mov
push
loopne
inc
cltd
cmp
ds
stos
push
call
jno
mov
add
xchg
sahf
add
jae
pop
out
xchg
or
push
and
mov
out
add
movsl
enter
data16
cmp
or
inc
int3
test
pop
push
xchg
fsubrl
mov
in
xchg
dec
cmpsb
das
sbb
mov
popf
js
enter
orb
or
cmpsl
pusha
fldcw
push
addr16
xchg
aam
dec
add
mov
xor
movsb
stos
jnp
popf
enter
or
sub
mov
loop
mov
adc
mov
mov
xor
sub
out
adc
out
lea
inc
dec
rclb
js
rorb
cmp
cmp
sub
popf
pop
out
sub
xchg
stc
ret
xchg
fs
fldl
mov
mov
daa
icebp
mov
mov
and
push
popa
cli
sub
lods
add
sarb
pushf
bound
pop
pop
insb
mov
rcl
push
push
xlat
pushf
out
mov
dec
leave
jb
mov
cli
dec
push
scas
push
inc
push
sbb
pop
call
lock
push
inc
xchg
arpl
fistpll
fidivs
loop
xor
push
fistpl
sub
pop
xorb
out
testb
push
mov
cmp
les
lods
in
mov
fidivrl
pop
fadds
cmp
dec
jnp
in
or
cmp
movsb
cwtl
jl
jmp
vpsraw
jp
popf
add
mov
mulb
gs
lret
mov
dec
mov
xor
add
mov
fidivrs
mov
mov
mov
sbb
mov
xchg
leave
xor
inc
push
xchg
jmp
das
repnz
cld
or
js
add
mov
es
in
xor
sbb
fidivrs
cmpsl
fldcw
test
lret
int
sbb
gs
pushf
inc
adc
jg
js
ljmp
mov
mul
movsl
jg
vcvtdq2pd
add
cs
subps
mov
push
ss
data16
shll
notb
shl
stos
add
cs
and
jno
sbb
cmp
add
sub
cmpb
mov
jl
lds
popf
insl
pop
inc
in
xor
mov
lock
movsb
and
pop
or
pop
stos
pop
jbe
dec
fadds
movsl
pusha
popl
cwtl
push
xchg
mov
sub
jge
mov
lret
orl
std
push
imul
movsb
out
imul
push
or
sub
mov
je
or
jecxz
xor
lods
ljmp
fcoml
stos
mov
daa
cwtl
int3
pop
add
push
pop
xor
pop
or
cs
mov
in
sub
or
jnp
sub
sub
rorb
sti
inc
scas
cmpsb
es
arpl
ror
scas
xor
test
dec
scas
sbb
fidivl
test
ret
push
das
imul
inc
jbe
nop
add
push
daa
lret
inc
cmc
xchg
incl
ljmp
pushf
inc
inc
movsb
lret
ret
xor
add
mov
stos
xor
aad
pop
movsl
mov
frstor
out
mov
push
xchg
popf
lcall
addl
les
out
mov
mov
mov
test
scas
shl
fwait
stos
stc
xchg
les
sti
fdivs
pop
push
hlt
movl
dec
fadd
sbb
mov
xor
adc
xchg
or
xor
cld
sti
push
and
mov
sub
jmp
inc
test
lds
lret
mov
in
dec
jecxz
mov
pop
mov
int
inc
push
imul
nop
mov
push
mov
mov
xchg
ljmp
push
and
loopne
adc
push
insb
aad
xlat
insb
shll
inc
fs
pusha
loope
sahf
dec
fistl
inc
mov
jg
call
jl
and
lret
arpl
mov
fdivs
in
repnz
sbbb
xorb
test
xor
enter
cmp
adc
dec
push
pop
pop
or
jnp
enter
sub
int
push
jge
adc
sbb
inc
push
jo
mov
aam
inc
in
imull
push
enter
shr
jo
test
in
and
pop
sub
push
add
sub
lahf
stos
cmp
imul
cwtl
cmp
mov
mov
loop
cmp
and
repz
jo
loop
xchg
mov
gs
lahf
xchg
pop
rcrl
sub
pop
addr16
adc
lods
clc
std
xchg
lods
cmp
leave
jecxz
sub
xchg
int3
inc
pop
mov
arpl
jp
pop
dec
shr
psrlq
and
adc
in
addr16
insl
sbb
aaa
mov
mov
iret
inc
loope
pusha
cld
xchg
xchg
push
sbb
jl
iret
lahf
cld
mov
outsb
jns
mov
push
mov
cld
in
lods
add
adc
mov
and
mov
aad
dec
pop
outsb
cmp
push
stos
loop
jo
mov
in
sub
subl
clc
xchg
push
test
fsts
pop
sub
testl
int
push
das
dec
stos
ret
xlat
adc
pusha
cs
and
sub
arpl
scas
xchg
cmp
jp
add
jo
adc
dec
mov
jnp
xchg
mov
sub
popa
in
or
sub
mov
movsb
jge
jnp
adc
addb
push
add
sbb
pushf
ds
adc
pop
test
outsl
pop
in
mov
negl
mov
scas
cmc
out
test
jle
lods
sarl
push
imull
mov
xor
rorl
inc
xor
ret
dec
dec
loop
push
ljmp
pusha
sub
push
cmovne
pusha
xchg
inc
dec
out
idivb
xlat
mov
and
mov
adc
sub
outsl
nop
popa
add
adc
rcll
push
inc
xchg
sbb
je
push
xchg
adc
jmp
xor
and
insl
mov
jmp
lcall
fisttpl
imul
repnz
adc
and
cmp
dec
frstor
loop
mov
stos
arpl
cmpsb
cwtl
out
js
call
or
lods
daa
es
loop
leave
and
sbb
adc
imul
add
jb
and
in
adc
imul
fidivs
sbb
repnz
sub
lods
push
mov
push
dec
ror
shlb
rolb
cmp
xor
sub
cmpb
push
sub
pop
repnz
mov
jns
jnp
mov
sub
insb
shrl
inc
insb
push
inc
adc
or
dec
mov
mov
outsb
and
bound
in
mov
pop
pop
sbb
sbb
jne
dec
fs
sbb
popa
add
adc
call
sub
add
jnp
leave
daa
aas
insl
or
inc
pop
or
cltd
bound
and
loop
icebp
inc
xchg
in
cmc
xor
adc
cltd
or
aad
dec
inc
roll
jo
aam
ljmp
pusha
add
push
push
dec
sbb
fucomp
inc
js
xchg
dec
out
in
cwtl
lods
bound
cmpsb
in
pop
into
xchg
jp
adc
lods
and
jmp
fs
lods
add
mov
dec
int3
inc
add
lock
pop
lods
dec
mov
mov
adc
mov
test
test
mov
out
int
jg
sbb
dec
popl
xor
push
push
inc
sbb
or
rcl
mov
fmull
cmc
xor
lret
mov
std
test
enter
xor
test
repz
cmpsb
mov
sbb
sub
sbb
add
cmp
mov
push
loopne
les
xchg
jnp
xor
std
pop
xchg
insb
push
push
xchg
pop
arpl
test
jecxz
mov
les
das
mov
mov
sti
mov
notl
arpl
call
adc
add
mov
cmpsl
dec
fcmovnu
inc
aam
mov
insl
sub
repnz
hlt
push
pop
aas
fld
jne
aas
lods
sub
jb
mov
push
mov
sub
cmp
xor
movl
xchg
add
add
sbb
xchg
mov
mov
cmpsl
mov
adc
pop
sarb
ja
xchg
pop
ljmp
pop
rcrl
es
push
imul
popa
loope
mov
lahf
lea
pushl
fisttpl
ja
jne
fnstenv
enter
or
in
pop
mov
sub
pusha
mov
rcrb
fiaddl
imull
nop
jge
xor
mov
sti
dec
imul
fists
sub
inc
subb
cmp
mov
push
and
dec
js
push
xlat
pop
int
std
jbe
mov
add
shlb
out
and
mov
push
mov
int3
push
or
jge
scas
arpl
mov
rolb
pop
insl
push
mov
fnstenv
jg
mov
aam
sbb
jp
dec
jl
fidivrs
std
jge
mov
lea
es
repnz
aam
stos
and
and
mov
xor
fimull
popa
lock
iret
mov
xchg
fimull
movsl
dec
sbb
js
mov
inc
paddsb
aas
ljmp
add
out
mov
cmpsb
adc
in
outsl
add
cmpsl
mov
in
ret
dec
inc
loope
cmpsl
lods
adc
out
lods
imul
out
test
mov
or
out
add
jno
xlat
fstpt
cs
push
stos
cwtl
sub
cld
fmul
sti
inc
cmp
inc
jno
out
push
mov
sub
sbb
jp
add
or
out
ss
mov
sar
jp
xchg
aad
sub
pusha
jno
cli
adc
push
sbb
shlb
negb
les
mov
out
adc
in
mov
mov
adc
mov
lcall
lods
das
repz
dec
call
fs
fs
adc
dec
and
aaa
outsb
cmp
cli
sahf
mov
jmp
xchg
add
call
push
cmp
push
inc
addr16
aam
mov
outsb
cmpsl
fsin
hlt
push
add
mov
adc
out
mov
repnz
scas
stc
sub
cs
insb
rcl
rclb
push
je
pop
std
xchg
notb
popf
mov
movb
daa
je
sbb
sub
mov
daa
js
inc
repnz
popa
add
lods
sub
data16
imul
fwait
jl
adc
les
shl
mov
stc
sbb
push
inc
icebp
inc
loope
out
mov
out
sub
idiv
inc
adc
in
jb
pusha
xor
lret
adc
dec
xlat
sbb
in
test
and
add
mov
mov
arpl
fs
dec
movsb
into
test
negl
fadd
jg
inc
pop
xchg
and
add
pop
inc
inc
pop
mov
inc
mov
push
in
sbb
sub
mov
insl
jp
leave
push
imul
sahf
jnp
mov
sarb
push
insl
sub
cmpsb
test
icebp
addr16
aam
sahf
and
daa
test
mov
fwait
push
insb
jecxz
xlat
inc
and
inc
xor
rclb
cltd
cmp
inc
roll
xor
out
xchg
xchg
lret
mov
push
movsb
pop
mov
cmp
adc
cmp
push
pop
mov
pop
inc
out
fbld
mov
xor
scas
lds
lods
lods
movsl
and
scas
dec
out
adc
pop
gs
and
dec
je,pn
pop
pushf
rcl
xlat
xor
dec
add
mov
and
lcall
cltd
or
test
ret
adc
call
test
outsb
pop
adc
mov
aam
pop
repz
push
fcoml
inc
shlb
pop
xchg
xchg
es
inc
cmp
insb
popf
popf
addr16
dec
ljmp
sbb
cmp
mov
aam
clc
outsl
xchg
je
xor
jae
mov
mov
pop
add
dec
xchg
push
push
pop
pop
les
test
jns
xchg
xor
lcall
xor
mov
popf
loope
add
inc
and
fwait
mov
or
mov
xor
xchg
aaa
ljmp
sbb
sbb
cli
mov
int3
icebp
mov
add
jmp
mov
insl
jo
adc
push
mov
lcall
rcll
mov
cwtl
lock
push
jg
adc
inc
orb
ja
mov
xchg
jmp
sub
test
cmc
arpl
mov
hlt
fidivrl
fs
sub
push
shll
cmp
out
andb
inc
test
mov
insb
jmp
inc
stos
and
cmp
ljmp
insl
mov
push
rolb
cmpsw
bound
pop
mov
pop
mov
aaa
mov
bound
loopne
outsb
call
sbb
ret
sbb
sbb
mov
clc
clc
fisubrl
rclb
clflush
in
inc
xchg
sahf
cmp
sbb
push
mov
xor
add
or
fisubs
pop
add
inc
xor
inc
or
push
jmp
mov
xchg
dec
inc
fcomps
xchg
es
into
lret
cld
xor
int3
aad
ficompl
xchg
mov
addr16
cld
rcrb
push
and
mov
aaa
add
scas
cmc
call
or
scas
fiaddl
or
cmpsl
bound
mov
inc
sbb
add
mov
repnz
test
sbb
adc
cmpsl
mov
adc
incb
push
push
fisttps
dec
sub
xor
xlat
inc
pop
xchg
push
scas
in
lahf
enter
pop
sbb
cmpsb
sbb
mov
cwtl
jmp
or
dec
std
frstor
out
popf
loop
xchg
ficomps
outsl
mov
shrl
imul
cs
and
xchg
sub
rorb
mov
sahf
push
mov
add
daa
xor
or
outsb
mov
gs
jecxz
dec
ret
xor
sbb
movsb
loope
leave
popf
test
fwait
add
jp
cli
cmp
push
cmp
cltd
dec
jle
adc
jg
mov
pushf
stc
cmp
sbb
ret
pop
sub
fwait
push
daa
adc
das
pop
scas
sbb
jmp
scas
sbb
mov
iret
pop
jl
sbb
je
jp
jge
xor
jmp
push
sti
cmpb
mov
sbb
pop
jp
add
movsb
inc
mov
add
cwtl
jb
iret
lahf
test
arpl
mov
ds
jns
cmp
or
jmp
cmp
and
push
shl
xor
dec
xchg
loop
mov
imul
rol
in
push
inc
sbb
cmc
mov
pop
cmpsb
xchg
inc
cmp
xchg
pop
pop
mov
fwait
rol
aaa
fcompl
adc
pextrw
jl
hlt
push
jb
xchg
sbb
push
push
push
inc
shl
pop
test
sub
push
lea
push
pusha
adc
je
stos
das
dec
inc
mov
inc
test
rcrl
movsl
mov
orb
int
dec
jg
test
and
out
mov
mov
adc
sub
pop
xchg
sub
orb
add
imul
or
push
scas
out
sbb
jl
sbb
jg
push
push
sbb
bound
xchg
testl
push
mov
loope
inc
pop
popf
push
mov
xchg
mov
push
imul
enter
add
hlt
mov
andl
push
inc
pusha
xlat
cmpl
mov
addr16
int3
push
xchg
jnp
adc
or
push
dec
aad
mov
add
xlat
iret
out
mov
adc
test
xchg
shl
push
ja
mov
ret
dec
fsubs
out
idiv
and
sbb
push
dec
push
push
and
push
or
pop
aas
xor
test
inc
movsl
dec
cmpsb
mov
lret
in
sub
mov
popf
cmp
pushf
mov
lea
popf
test
mov
sub
cmpsl
int3
insl
insl
mov
mov
or
dec
add
push
nop
mov
mov
xchg
push
add
adc
movsb
nop
mov
lea
add
sti
in
jle
rorl
adc
loop
pusha
enter
xor
enter
mov
mov
cmp
pop
out
push
scas
popa
int3
jbe
mov
mov
int3
pop
pavgb
xchg
ljmp
movsb
xchg
cli
iret
movsl
or
nop
push
add
cltd
pushf
imul
xor
gs
mov
sub
call
jge
stos
fwait
in
mov
inc
mov
imul
jno
in
icebp
enter
adc
sbb
jecxz
test
mov
xchg
push
mov
inc
dec
pop
fldcw
cltd
add
in
int
out
push
out
mov
clc
jge
add
add
mov
clc
popa
int
sub
push
pop
mov
bound
mov
cli
jle
cmpb
cmp
icebp
jb
sub
sub
sti
imul
mov
jno
add
mov
loope
popf
mov
inc
insb
insl
popa
sbb
int3
push
push
push
adc
aad
pop
sbb
adc
popf
pop
mov
stc
inc
ss
shl
pop
cmp
mov
decb
lret
jnp
mov
aad
stos
cmc
bound
bound
out
sub
inc
in
jp
xchg
pop
inc
pop
sub
inc
mov
push
mov
fsubrp
mov
inc
inc
dec
dec
hlt
dec
inc
mov
mov
repz
pushf
fs
jno
sub
xchg
sahf
aam
ficomps
and
lods
xchg
cmp
jne
mov
jne
int3
iret
insb
inc
sahf
pop
add
cmpsb
cli
inc
lret
sub
test
sub
lods
outsb
cwtl
outsl
mov
imul
mov
js
push
call
jge
push
push
cmp
aam
jb
dec
movsl
loopne
pop
or
iret
cmc
jge,pt
lods
jnp
fbld
push
divl
pushf
sub
xchg
push
xorl
add
lds
loope
jmp
jbe
inc
mov
jecxz
fbld
dec
mov
jns
outsb
cmpsl
push
ficoml
fisubrs
add
movsb
cmp
cmpsb
or
ret
and
fbld
add
dec
lds
idivl
mov
lret
movsl
jge
stos
jnp
nop
push
pop
sub
lret
loope
aas
insl
sbb
jns
lds
inc
and
loope
sub
imul
sub
ljmp
cli
sub
fsub
add
gs
ljmp
int3
outsb
jmp
test
repnz
push
inc
ljmp
loopne
dec
lret
pop
or
cs
mov
out
ds
mov
loop
rclb
popa
stos
movsl
icebp
js
js
push
shr
push
pop
mov
inc
push
xor
sahf
les
push
mov
and
out
dec
cmpsl
dec
icebp
jle
pop
jo
out
lods
aaa
or
inc
aas
imul
cltd
fbld
stos
dec
hlt
in
cmpxchg
out
insl
adc
push
stc
cwtl
clc
fcmovne
subb
cltd
sbb
cmp
es
fcompl
cmpsb
push
push
rcl
pcmpgtw
dec
jo
push
lock
sub
sbb
inc
cli
shlb
sti
sub
test
call
ret
xchg
push
inc
sbb
inc
and
into
inc
xor
fisubl
xor
jmp
stos
aam
std
or
xlat
jnp
fs
inc
dec
lock
inc
xlat
push
nop
rorl
dec
int
adc
jns
sbb
xor
inc
xor
sbb
outsl
mov
shlb
push
ds
cwtl
mov
lahf
push
negl
add
pop
stos
idiv
sti
mov
ficoms
jge
lods
shll
stc
jo
push
lea
test
jmp
push
sub
mov
xor
inc
push
sbb
ss
mov
jbe
inc
or
inc
mov
pop
pop
inc
dec
xor
rorb
call
adcb
xchg
or
addr16
insb
mov
mov
int
dec
add
rorl
adc
add
push
subb
into
lahf
xchg
adc
repz
mov
int3
stc
pop
sbb
out
dec
inc
add
xchg
fldcw
aad
push
jg
scas
aam
add
dec
je
lea
dec
xchg
cmp
lret
cmp
icebp
popa
test
mov
outsl
lret
cmp
aaa
and
fdivr
addr16
dec
jne
insb
inc
cmp
hlt
fs
pop
mov
lods
out
mov
arpl
adc
sbb
lea
mov
mov
adc
out
cmp
sub
mov
xchg
stos
imul
int3
into
pop
in
into
out
ret
cmp
outsl
jle
and
push
adc
add
xor
mov
push
in
sbb
lret
push
or
andb
test
push
lret
out
pop
mov
push
and
daa
lret
and
gs
pop
es
inc
addr16
jae
mov
dec
sbb
popf
mov
mov
sbb
push
pusha
cmp
inc
imul
outsb
and
jmp
bound
pop
bound
xchg
enter
inc
leave
xor
in
repz
sbb
mov
xor
xor
mov
aam
push
sti
out
mov
jl
sbb
movsb
in
icebp
or
dec
ret
xor
mov
pushf
add
ret
cmpsb
and
sarl
std
xchg
jl
test
clc
pop
mov
push
or
out
fsubl
out
inc
sbbb
sbb
adc
js
outsl
add
dec
jge
cld
loop
pop
push
hlt
add
fnstsw
movsb
stos
mov
fadds
mov
js
xchg
cmp
adc
cmp
clc
xchg
cmp
inc
movsb
or
dec
mov
add
test
adc
rcll
xchg
mov
sbb
scas
test
pop
insb
les
xchg
js
jmp
or
inc
ljmp
dec
fidivs
or
into
adc
mov
mov
test
adc
fisubrs
inc
lock
mov
push
mov
ljmp
jb
dec
sub
aas
adc
mov
lcall
inc
sub
jp
sbb
insb
sahf
inc
add
pop
into
cmp
in
imul
inc
mov
enter
push
xchg
arpl
pop
ds
ficoml
add
aaa
adc
dec
out
test
mov
popa
mov
adc
mov
jno
out
cltd
aam
ret
jo
jle
add
in
mov
jge
and
push
dec
mov
xor
lea
subb
add
pop
in
ret
jo
aaa
jae
jae
aaa
add
mov
iret
test
lds
cmpsl
nop
and
fs
lock
pop
std
movsb
adc
insl
js
ret
imull
or
inc
arpl
adc
adc
lret
mov
data16
mov
mov
push
and
ljmp
aas
out
icebp
scas
xchg
sub
cmp
push
inc
mov
clc
cld
shll
xchg
cmpsb
pop
sbb
out
and
pop
adc
mov
into
jne
ja
sbb
push
sbb
mov
fwait
repz
jl
mov
xor
sub
pop
inc
cmp
push
ret
pop
xor
loop
orb
movsl
cmpsb
lcall
inc
inc
stos
mov
push
insl
ja
mov
pop
sbb
dec
das
sbbb
es
scas
sub
lahf
dec
jne
sub
test
stc
lea
lret
add
imul
xor
mov
jle
pop
ret
jmp
lods
xchg
fisttps
test
frstor
xchg
stos
sbb
cmp
ds
or
mov
and
test
into
icebp
pop
lea
sub
cmp
aad
stos
adc
hlt
dec
lods
rcl
sbb
sbb
jo
sti
xchg
pop
sub
inc
sub
jno
mov
rcr
sub
xor
setbe
jnp
adc
lods
sbbl
outsb
lahf
pusha
push
outsb
ret
push
out
fistpl
push
lods
cwtl
sub
push
jmp
xchg
loopne
dec
cmp
xor
lret
adc
jo
test
sub
arpl
imul
hlt
shlb
stos
mov
adc
imul
lock
add
pusha
jns
jp
divl
push
pop
cs
cmp
addr16
lea
leave
and
in
push
lock
cmc
mov
add
popa
mov
hlt
bnd
sub
loope
jge
ja,pn
arpl
adc
and
jnp
adc
jmp
scas
ret
aad
shll
int3
adc
clc
fcoml
das
gs
or
lock
pop
add
mov
mov
dec
fmull
loop
addr16
mov
test
mov
push
cmpsb
cmp
mov
and
and
adc
cmp
int3
mov
mov
daa
sbb
aas
rorl
aad
pusha
xor
sub
push
popf
xor
in
xchg
fdivrl
push
sub
push
aaa
and
popf
cltd
jne
aad
dec
ret
sbb
loop
rorb
xlat
xor
idivl
lock
sub
or
dec
int
jl
xor
adc
leave
sub
test
push
fisubrl
std
out
inc
mov
pop
pop
fbstp
or
std
push
fisubl
scas
filds
cltd
and
pop
aaa
sarb
xor
dec
inc
repnz
inc
fcoms
pop
xchg
dec
adc
adc
loop
mov
mov
daa
cli
int
outsb
les
mov
push
mov
mov
imul
insl
cmpsl
in
cmp
jno,pt
mov
dec
or
out
add
jecxz
lds
inc
test
sbb
scas
fxch
or
or
push
lret
sbb
sar
sbb
push
dec
cmp
xor
push
std
js
cs
jb
add
adcl
testb
mov
mov
xchg
int
mov
mov
test
mov
xor
fistl
sub
inc
popa
cmpl
aas
das
jmp
fsubrs
jnp
lods
cmp
mov
xor
roll
loop
test
shll
push
fldt
mov
adc
in
popa
xchg
fcoms
dec
jl
push
sbb
fs
jecxz
movsb
in
or
jns
dec
stos
lods
push
cmp
inc
push
mov
lds
and
jo
dec
sub
jno
xchg
xor
jne
sahf
lds
sub
sbb
mov
pop
push
test
sbb
lcall
mov
mov
stos
inc
outsl
lret
repnz
aam
jne
icebp
hlt
popa
push
lods
jbe
int3
cld
cmpsl
pop
cltd
cmp
mov
dec
movsb
loop
in
add
lods
into
cmp
add
mov
add
je
out
inc
jbe
mov
popf
adc
jecxz
cld
fucom
adc
cmp
jg
cmpsb
stos
dec
call
add
xor
out
jl
inc
aad
inc
adcl
pusha
or
mov
pop
or
mov
sub
mov
test
push
xor
mov
pop
inc
mov
aaa
mov
jo
mov
mov
sbb
jbe
jge
fcomps
movsb
push
popf
jno
ds
ljmp
scas
in
push
js
idivl
imul
movsb
sub
adc
lcall
mov
jmp
mov
sub
aaa
das
insl
rorb
push
jg
xor
push
inc
je
into
fiadds
push
xor
cwtl
hlt
mov
pop
pop
jae
xchg
imul
mov
and
in
stos
pop
xchg
jg
ds
jg
imul
inc
das
mov
jecxz
cmp
pop
pop
mov
call
mov
sub
mov
and
jecxz
push
xchg
jmp
cmp
sbb
nop
ljmp
out
xchg
ljmp
cli
icebp
insb
mov
pop
stos
xchg
orb
pop
mov
shrb
mov
data16
das
movsl
ret
add
or
adc
inc
inc
rcll
jnp
stc
pop
add
mov
lock
push
jne
lea
cld
pop
mov
sbb
lret
pop
mov
enter
daa
jbe
and
out
ds
xor
push
cld
or
aas
pop
sub
jp
mov
adc
inc
insl
xor
test
lahf
shlb
dec
and
int3
loope
ds
sub
pop
subl
mov
mov
pop
out
inc
sub
or
shr
lahf
pop
in
push
jbe
lods
xor
je
xchg
in
push
bound
and
fstpt
ret
aad
std
leave
int
popa
mov
test
and
rclb
fs
inc
out
push
push
adc
jns
and
inc
lock
stc
sub
lock
cmp
add
or
cwtl
cmp
negb
test
enter
cmc
frstor
add
mov
movsl
push
rep
mov
int
lods
mov
adc
sub
jge
shrl
mov
shrb
clc
pop
insb
lods
or
hlt
sub
jmp
gs
fnstsw
hlt
xchg
lea
enter
loope
cld
pop
or
bound
scas
dec
imulb
push
leave
gs
jg
mov
xchg
cmp
aaa
roll
pop
add
jle
scas
cltd
push
imul
inc
out
adc
aas
push
jnp
mov
movsl
or
movsl
push
jns
bnd
cmp
lock
imul
jp
movsl
sti
lock
addr16
xlat
or
loopne
cmp
push
adc
mov
movsb
push
out
lods
popf
and
dec
fcmove
ret
je
pop
rol
mov
mov
pop
cmp
pusha
sti
xor
xchg
adc
dec
pop
or
mov
push
cmp
dec
fdivrl
jbe
sbb
sub
mov
orb
rcr
and
movsl
pop
shr
add
fistl
jle
inc
dec
pop
cmp
and
es
sbb
je
shl
mov
pop
imul
testb
sub
fbstp
scas
sub
pop
imul
mov
lahf
ret
pop
enter
out
into
jo
sbb
rclb
xor
mov
cmp
push
int3
movsl
cmp
xchg
stc
dec
xor
push
fisubrs
insl
inc
pop
sti
xchg
dec
sbb
iret
scas
orl
call
outsb
jge
ja,pt
lret
jae
stos
and
int3
xor
popf
stc
pop
xorl
imul
cmp
and
push
es
jo
and
and
inc
lret
call
lea
or
jnp
jmp
push
cmpsb
aas
jbe
push
aaa
sbb
icebp
rclb
rcrb
mov
ja
adc
add
add
enter
pop
fsts
xchg
xchg
mov
sti
cwtl
cmp
cmp
les
pop
addr16
cwtl
test
or
ret
lods
inc
int
das
xchg
sbb
mov
jge
ret
bound
sbb
jne
mov
sub
mov
mov
cwtl
mov
enter
mov
repnz
idivb
jb
sub
mov
and
bound
cmp
pop
lds
cmp
inc
and
pop
sub
stos
inc
pop
test
pushf
sbb
popf
aas
pop
aas
jp
jecxz
js
fisubrs
in
mov
pop
and
or
fidivrl
pop
lret
sbb
scas
sbb
push
stos
iret
imul
jnp
or
inc
push
lcall
or
jmp
or
call
lret
popa
push
sahf
enter
jp
jb
inc
jb
aas
jns
fisttps
jbe
cli
inc
xor
inc
pop
pop
scas
ljmp
xchg
out
out
mov
mov
jns
mov
in
xor
sbb
mov
int
mov
ljmp
push
jb
jnp
loopne
jo
and
out
adc
fwait
stos
cs
cli
aaa
mov
in
inc
das
stos
fsubrs
add
xchg
in
addb
adc
lahf
adc
xlat
test
shll
mov
jnp
and
xor
and
jns
and
push
lods
lret
into
dec
jg
int
mov
pushf
cmp
push
lock
sub
jns
cs
xchg
stc
push
mov
enter
add
rolb
icebp
dec
pop
jo
fstpt
adc
inc
sub
mov
movsl
out
jbe
and
cmp
pusha
outsb
adc
andl
jmp
inc
mov
xchg
pop
rorb
mov
and
sahf
xchg
push
mov
sub
std
out
test
mov
cli
add
inc
icebp
dec
lret
nop
sbb
dec
inc
pop
enter
or
testb
cs
mov
pop
add
divl
stos
jp
iret
inc
mul
jbe
movsb
jnp
shr
xor
rep
shll
sbb
and
cmpsb
stc
test
popf
pop
add
das
loopne
push
inc
adc
adc
mov
rcr
inc
xor
mov
orl
adc
mov
sub
fnsave
jmp
cld
cld
xchg
rolb
or
mov
imul
je
je
sbb
adc
jnp
lcall
mov
jo
mov
mov
push
xor
mov
pop
add
sbb
dec
sub
cwtl
aaa
xchg
cmc
out
leave
int
cmpsb
pop
xor
xor
rdpmc
clc
xchg
pusha
cmp
bound
push
data16
xor
mov
inc
sbbb
mov
jp
aam
insb
clc
movsb
mov
sbb
mov
rcrb
or
pop
push
lea
add
or
dec
jge
js
push
out
cld
inc
sbb
adc
pop
mov
cmp
ds
xchg
xor
cmp
je
mov
mov
dec
mov
je
notl
sub
push
mov
dec
xchg
adc
mov
pop
push
gs
xchg
arpl
insl
sub
pop
or
sbb
divl
ret
or
fs
cmpl
scas
sbb
sbb
cmpl
xchg
mov
cltd
jns
daa
push
fsubr
xor
jbe
push
stc
mov
lcall
test
pop
sarb
adc
cmp
pop
ret
mov
jne
test
or
cmp
pop
push
filds
cmpsb
gs
add
pop
addr16
clc
xorb
pop
or
jl
mov
cmp
cs
or
inc
push
fsubrp
pusha
xor
lahf
push
pop
add
iret
clc
stos
fdivrs
inc
jmp
add
movsb
inc
or
inc
pusha
pop
sar
idiv
aaa
xchg
sub
cmp
rcl
pop
jmp
movsb
imul
mov
leave
sub
es
mov
out
scas
out
cld
cmp
outsl
fdivrs
mov
adc
mov
inc
pop
clc
test
mov
cmp
inc
pop
enter
iret
mov
mov
lret
xchg
cmp
mov
xchg
mov
mov
in
adc
sbb
scas
xchg
adc
sbb
leave
loopne
jecxz
aam
mov
fwait
xor
push
iret
leave
pushf
xchg
sbb
jae
es
add
push
clc
arpl
lock
lods
pop
or
sbb
sbb
xchg
jo
lock
fcompl
in
mov
outsb
shl
xchg
xchg
add
popf
push
push
xchg
jge
aaa
fbld
ljmp
lahf
sbb
call
fdivrl
xor
xchg
test
xchg
cmpsl
cwtl
sbb
mov
mov
nop
sub
pop
dec
mov
and
shr
xor
aam
pop
xchg
mov
arpl
jg
mov
pop
test
loop
sbb
in
mov
push
out
fwait
in
inc
xor
add
stos
pop
lret
mov
push
jae
add
adc
fidivl
dec
and
in
xorb
ljmp
imul
mov
insb
mov
mov
stos
pushf
mov
iret
pop
sarl
insb
nop
imul
xchg
ja
jb
int3
xchg
dec
bound
cld
push
xchg
movsl
cmp
inc
add
sub
add
jbe
dec
cs
jp
mov
fs
push
ret
fcompl
mov
test
xor
add
lea
loopne
aaa
sub
test
movsl
or
fwait
stos
jae
sbb
adc
aas
add
rolb
pop
jae
push
mov
fistps
decb
cwtl
jae
xorl
jbe
adc
jmp
fdivs
and
shrl
mov
movsl
sbb
aad
push
jp
insb
call
sub
mov
push
jmp
test
inc
lock
mov
mov
sbb
sbb
pushf
jnp
icebp
aaa
jae
movsl
jbe
iret
outsb
xchg
mul
in
outsl
rolb
shlb
jb
hlt
mov
dec
data16
mov
inc
es
pop
in
or
inc
subl
ja
cltd
and
in
dec
add
movsb
jae
push
aaa
bound
lock
insb
out
scas
xor
or
out
push
jg
dec
cld
pandn
and
xchg
jne
jns
mov
es
fsts
fnstenv
or
pop
mov
stos
add
jnp
push
dec
push
push
jmp
loope
inc
sar
xlat
negb
in
loop
scas
mov
stos
jnp
jo
stc
test
rorb
add
and
sub
cltd
sub
mov
test
aad
sti
xchg
adc
in
push
lds
mov
adc
int
cltd
dec
xor
rcl
push
imul
divl
shll
push
outsl
and
pop
sbbl
jb
jmp
mov
jae
push
fmul
fstpt
dec
and
nop
hlt
inc
int3
inc
add
repz
cmpsb
or
dec
lret
sbb
sti
jle
mov
inc
pop
or
cmp
adc
sbb
jnp
mov
pop
fistps
sub
dec
jge
aaa
repz
pop
out
xor
das
pop
sbbl
cltd
xchg
jl
fbld
rcrl
adc
sub
mov
push
pop
leave
mov
shrb
jecxz
cmpb
sahf
lahf
cmp
ss
pinsrw
mov
sbb
fistl
cli
mov
or
pusha
sahf
das
enter
clc
adc
or
testl
jnp
ljmp
pop
mov
cld
hlt
fidivrl
cmp
mov
add
adc
add
sbb
icebp
pop
das
adc
mov
push
mov
fidivs
int
add
je
imulb
stos
inc
jns
mov
xchg
inc
or
xchg
add
cli
stc
imul
push
adc
scas
lcall
fldenv
push
repnz
cmp
xor
cld
hlt
inc
addr16
mul
mov
adc
mov
mov
sbb
mov
lea
mov
and
sti
fadds
ja
or
xchg
idivb
movsb
xor
fsubrs
pop
fldenv
call
rcrb
pop
xor
pop
or
xorb
mov
or
int3
in
cmp
push
movsl
cmpsl
movsl
lahf
sti
mov
ret
or
mov
jb
lock
lea
sub
repz
mov
push
add
shlb
pop
insb
in
lcall
cli
test
mov
enter
sti
in
inc
xchg
and
incl
loop
xor
out
mov
mov
lock
mov
lds
out
loope
mov
lea
daa
mov
xchg
mov
lock
jae
fmuls
cltd
popa
scas
sbb
mov
mov
mov
fs
data16
into
mov
adc
adc
int3
mov
sub
or
outsb
lds
and
sub
add
loope
fistpl
test
or
loope
imul
ds
sub
and
push
lods
add
mov
push
repz
push
cmp
les
leave
mov
movsl
xchg
leave
mov
mov
xorl
movl
inc
test
mov
inc
sarb
jmp
lahf
fcompl
data16
outsb
test
push
sbbb
in
imul
mull
fidivs
stc
cmp
pop
mov
ljmp
xchg
stos
push
ljmp
cli
xor
sti
loope
notl
mov
test
dec
push
jne
sbb
fcomip
mov
pusha
xchg
cmc
dec
sahf
xor
lret
xchg
or
or
or
adc
popa
mov
and
dec
int3
pusha
mov
shlb
and
int
mov
iret
lret
and
sbb
loop
call
xorl
sbb
les
adc
sub
es
sbb
mov
leave
lret
cmp
stc
and
push
loopne
xchg
adc
lea
incb
lahf
mov
mov
sub
enter
sub
inc
jecxz
sbb
xchg
adc
sbb
rorl
lret
cli
lret
cmpsl
hlt
cmp
jae
inc
xchg
push
ds
xchg
push
inc
jecxz
stos
rcll
inc
push
incl
pop
dec
sbb
mov
out
fildl
lsl
loope
xchg
loop
cmp
jnp
mov
jl
int3
lds
scas
stc
call
sub
mov
sarl
mov
sbb
hlt
adc
push
jle
daa
pop
push
daa
paddusw
inc
sbb
jg
pop
push
sub
cmpsl
aad
mov
lret
test
ss
and
lret
xchg
adc
nop
dec
jg
icebp
cwtl
dec
cmc
xchg
inc
ss
and
test
lds
xchg
sub
mov
loope
mov
cmp
and
push
clc
xchg
in
fcom
sbb
in
mov
push
mov
push
xor
pop
lret
out
cltd
mov
shll
movntps
mov
xor
into
out
dec
ror
shrb
ret
sahf
daa
add
bound
lock
jbe
mov
pop
pop
dec
xor
fsubrs
pop
adc
cli
push
push
and
loope
pop
sbb
fnstcw
sub
scas
cmpsb
lock
sub
frstor
dec
decl
into
dec
sub
in
mov
adc
lds
aas
cmp
cmc
push
mov
mov
aam
sub
lcall
lret
jecxz
mov
mov
xchg
pushl
dec
addr16
xchg
in
mov
cli
in
ret
test
adc
sbb
jne
stos
ja
lods
add
jns
jo
adc
pop
sbbb
out
sbb
add
mov
aaa
ljmp
mov
shlb
int
inc
fnstcw
jnp
fsubl
fstps
sub
into
arpl
out
pop
call
movsb
and
js
xorb
pop
pop
js
arpl
popf
jmp
out
add
adc
test
mov
pop
loope
fsubrl
and
js
cltd
shlb
cmp
xor
mov
jle
sti
mov
aam
sub
js
sbb
mov
stos
adc
or
xorl
ja
sbb
jecxz
push
jp
push
into
xlat
dec
dec
mov
rcll
or
icebp
xor
out
addr16
sub
aad
jo
mov
shlb
enter
in
lret
xor
lods
xorb
rcll
adc
dec
push
sbb
iret
fwait
sub
fistpll
cmpb
mov
mov
mov
jb
out
enter
xchg
loopne
jecxz
mov
mov
adcl
mov
push
mov
repnz
popl
mov
js
mov
stc
std
pop
ret
cmp
leave
enter
pop
xchg
mov
clc
stos
pop
sbb
mov
sar
pop
in
cmp
add
popa
mov
cwtl
outsb
les
fstps
mov
test
stc
mov
fdivl
lds
xor
dec
cmpsb
jge
mov
xchg
mov
movsb
jae
aam
addl
fcomps
or
movsb
and
jo
or
xchg
push
jo
inc
inc
xor
fdivs
xchg
add
mov
aaa
bound
sub
loop
addb
cli
int
aam
mov
mul
dec
push
and
shll
sbb
push
push
shl
shl
and
fmuls
mov
aaa
mov
test
insb
jecxz
js
roll
fstpt
lock
movsl
push
dec
cmc
aam
into
sarl
fadds
xchg
sub
mov
mov
push
pop
cmp
ret
insl
mov
sub
sbb
push
cmp
push
and
sahf
or
mov
jecxz
fbld
lret
lcall
enter
pop
mov
pop
cwtl
cmp
xor
mov
rcrl
xchg
mov
push
xchg
cs
mov
rorb
jmp
mov
pop
mov
in
out
dec
dec
push
mov
ljmp
jge
mov
out
mov
stos
leave
sahf
shlb
mov
push
movsl
lcall
add
call
push
adc
cmovs
mov
xchg
loope
jmp
jl
and
out
mov
mov
out
les
mov
test
ficomps
outsl
fdivl
ljmp
dec
nop
rcl
lds
jecxz
jmp
adc
popa
jmp
sub
mov
inc
add
cs
sub
icebp
dec
in
fstpt
inc
icebp
xchg
cmp
fsts
dec
mov
out
add
movsb
push
ds
aas
push
xchg
adc
cmp
cmp
dec
in
loop
hlt
mov
popa
es
outsb
jae
subb
imul
pop
lds
dec
sti
push
or
push
mov
inc
add
test
mov
pop
in
outsb
mov
sbb
insl
or
mov
cmpsb
lds
sub
lahf
pushf
lret
mov
jo
aam
arpl
icebp
ja
in
cmp
pop
shl
push
adc
push
pop
out
fwait
push
enter
dec
test
cs
xor
fistpl
add
xchg
xor
xchg
stos
fidivrs
addr16
js
dec
xchg
sarl
cmp
lret
shl
imul
out
push
in
lret
adc
cmp
xor
sub
lods
leave
inc
xchg
cmpsl
and
and
pusha
nop
sbb
adc
pusha
mov
jae
in
jg
int3
imulb
pop
inc
dec
sti
sub
lods
xchg
pusha
cwtl
sub
mov
sbb
jb
ret
push
imul
call
sbb
cmp
sbb
mov
dec
ljmp
int3
loope
dec
jle
mov
dec
sbb
fcoml
out
out
xchg
push
lea
xchg
lcall
leave
cmpsl
in
cmp
lahf
cli
cmp
iret
and
rol
aaa
mov
fsubrs
jp
pop
pop
fs
call
test
push
pop
pop
pop
dec
test
nop
mov
ret
mov
shlb
sarl
jns
jae
adc
aad
cmp
mov
cli
lods
sahf
outsl
cmc
or
or
dec
xchg
mov
dec
push
sbb
mov
xchg
movl
icebp
mov
movsb
cmp
adc
aam
fcoml
test
and
shll
nop
ds
jle
sahf
adc
leave
or
sahf
pushf
dec
andb
mov
aas
hlt
lret
xchg
sbb
push
cmp
inc
and
ljmp
icebp
fucomi
sub
divb
xor
bound
fidivl
mov
stos
fs
popa
lahf
loopne
jns
hlt
rolb
repnz
dec
xchg
jge
pop
jge
repnz
push
les
icebp
xor
scas
or
add
lods
stos
add
inc
xchg
frstor
xor
jbe
or
push
test
pusha
data16
pop
clc
cmp
sahf
push
xor
lret
sbb
adc
mov
xchg
pop
mov
dec
paddw
rcrb
pop
mov
iret
xor
std
out
push
jae
outsb
pop
fwait
cltd
mov
or
push
mov
fstpl
dec
movsb
push
in
or
iret
jns,pn
mov
jb
shrl
xor
fprem1
outsl
imul
arpl
cmpsl
ret
cmp
fmuls
fidivrs
fstps
rolb
pusha
push
push
dec
aas
out
pop
sbb
pop
sub
cmpsb
mov
mov
shrl
adcb
mov
int3
addr16
or
cmpsl
test
cmp
cmp
jmp
add
inc
imul
sahf
jmp
lahf
ret
adc
xchg
push
push
es
cmc
cmpsl
xchg
das
call
enter
int3
sti
sar
ss
pop
sbb
push
add
dec
sbb
iret
cmp
ret
mov
and
dec
or
cmpsb
xchg
dec
call
xor
push
mov
jne
into
in
jge
jmp
dec
pusha
test
cmp
jb
adc
fldl
addl
pop
mov
inc
add
repz
xor
das
outsl
mov
sti
adc
movsb
shll
shll
in
mov
or
aam
mov
pop
enter
cmpb
or
cs
sub
mov
pop
sub
xor
sbb
add
jb
ds
je
sbb
push
push
jo
pop
xchg
and
outsb
stc
lods
xchg
in
add
or
fcomip
jle
sbb
mov
inc
add
dec
fs
aam
sbb
lods
mov
sbb
sbb
imul
jg
cmc
dec
inc
jg
loope
popa
in
daa
and
mov
adc
xchg
into
lret
or
xor
imul
mov
daa
xor
ljmp
sbb
insl
push
test
push
mov
jle
out
xor
testb
call
scas
xor
int3
shll
pop
adc
ds
mov
shll
mov
lods
into
or
dec
sub
and
mov
xor
cmpsb
cmp
sub
mov
fidivs
push
rcl
sahf
mulb
add
sub
mov
ljmp
mov
test
mov
mov
push
and
push
pop
jl,pt
sub
add
das
fsubr
cs
cmp
mov
addl
dec
lret
push
mov
loop
inc
mov
aad
inc
mov
shlb
xchg
jp
ja
xor
xchg
cmpl
adc
push
push
call
mov
xor
fisttpll
mov
leave
mov
jl
dec
aad
xchg
test
loop
imul
inc
or
call
add
xchg
into
push
push
stc
pushf
loop
pop
xor
lods
daa
push
out
inc
push
mov
icebp
movsl
dec
lss
icebp
xor
jae
mov
xlat
shr
mov
stc
lods
push
aas
push
add
cmpsl
and
dec
jae
sbb
pop
in
fwait
data16
faddl
jnp
push
in
mov
repnz
mov
push
clc
mov
and
popa
push
cmpsl
sbb
sub
mov
sahf
xchg
mov
sub
cltd
jmp
movsl
fldl
insb
fists
inc
mov
xchg
jno
push
or
mov
call
xchg
inc
jg
ja
pop
mov
xor
lcall
popa
jae
bound
inc
mov
inc
ljmp
imulb
mov
add
enter
push
sarb
jno
mov
es
cs
adc
jne
in
add
rol
loopne
push
pop
and
adc
xchg
insl
xchg
mov
shl
icebp
movsb
int3
test
ficomps
pop
xor
enter
rorb
leave
popa
stos
bound
icebp
xchg
sbb
xor
xor
pop
aad
cmp
sub
stos
jp
dec
insl
call
out
sub
pusha
mov
jp
sbb
fsubrl
cmp
cmp
in
movsl
fbld
cs
or
and
adc
pop
sub
mov
call
gs
cwtl
mov
ficoml
sbb
idivl
and
inc
iret
push
push
xor
jbe
push
sub
push
push
add
pop
dec
mov
inc
push
out
test
sti
add
shr
movsl
mov
mov
cmpsl
cs
insl
sub
cs
ljmp
pop
jecxz
hlt
xor
add
sbb
imul
filds
and
test
mov
add
arpl
add
add
mov
inc
outsb
and
or
cmpl
mov
dec
pushf
cmc
imul
lods
mov
or
fnstsw
mov
or
sbb
or
lret
fcoml
cmc
subl
jb
in
je
inc
inc
lds
add
inc
pop
jno
push
ficomps
adc
jne
xchg
dec
adc
mov
dec
nop
push
pop
stos
cmp
popf
jae
push
push
lret
jbe
out
test
lods
cmp
dec
xor
xor
mov
or
popf
dec
call
dec
sbb
push
insl
inc
sbb
sub
outsl
and
out
arpl
or
cmp
mov
jmp
cmpsl
pusha
cmp
iret
orl
aad
mov
cmpb
mov
inc
icebp
fistl
test
pop
lret
xchg
je
pop
loop
pop
ss
iret
mov
push
imul
hlt
adc
and
out
and
scas
push
jb
sbb
mov
aaa
cli
insl
mov
ds
nop
ret
or
movl
dec
lods
sbb
pop
cmp
pop
scas
cmc
and
scas
movsb
mov
stos
inc
and
test
push
fadds
mov
pushf
cli
stos
push
pop
stc
movsl
sbb
popf
and
push
dec
clc
cltd
jecxz
add
push
jns
std
xchg
mov
ret
jge
and
adc
ja
sti
scas
and
xchg
cli
test
decb
mov
mov
jno
fistl
mov
imul
push
aam
inc
xor
cmc
cmpsl
lock
mov
add
mov
jns
btc
loop
push
orb
xchg
dec
stc
lods
mov
stos
iret
lret
ret
inc
mov
fcomi
fbstp
lds
jns
inc
or
cwtl
int3
sub
icebp
orb
cmpsb
push
cmpsl
out
adc
sub
sub
outsl
xor
sub
movsl
lret
out
pop
jl
std
mov
or
icebp
lret
push
push
jnp
jnp
xor
mov
push
or
jne
movsl
mull
rcrl
mov
mov
lret
sub
mov
ljmp
push
jne
xor
bound
jnp
inc
punpckhdq
decb
xor
and
pop
insl
aaa
mov
int
pmullw
sbb
loopne
xor
jg
pop
imul
adc
sbb
pop
mov
addr16
mov
loopne
mov
das
pop
psubsw
jae
bound
xchg
push
or
mov
inc
mov
outsl
adc
lods
or
xlat
fstl
aaa
xorb
and
cmc
mov
sbb
push
sub
sub
addb
mov
ljmp
pop
les
adc
rolb
cltd
test
adc
loop
add
jg
xor
repnz
add
sbb
dec
popa
mov
pusha
rclb
cmpsl
push
add
outsb
cltd
mov
jbe
setp
stc
lods
pushf
mov
lahf
fucomi
dec
jp
jno
jp
test
rcl
jecxz
push
mov
shrb
add
lods
xor
sarl
cmp
mov
mov
xor
sti
pusha
inc
lock
inc
and
inc
stos
stc
dec
push
push
stos
lret
stos
test
jg
clc
mov
sub
cli
pushf
jae
cltd
sbb
xchg
ljmp
nop
data16
and
ja
pop
repnz
std
jp
cmp
clc
xchg
xrelease
pusha
pop
jg
iret
pop
jae
xor
and
rcr
ficoml
jl
adc
jmp
outsl
push
sti
movsl
jo
or
scas
in
mov
enter
mov
or
insl
and
fidivs
mov
dec
mov
pop
mov
add
enter
inc
sub
lcall
add
sbb
cli
sbb
cmp
add
pop
lahf
loop
test
sub
lret
movsl
mov
shl
cltd
stos
cmpb
jp
repnz
xchg
xor
fucom
shlb
out
mov
xchg
imul
mov
loop
cld
sbb
aas
fcmovnu
ret
mov
aad
std
xchg
jnp
test
dec
jecxz
loop
roll
movsb
push
dec
fwait
push
clc
fwait
imul
out
cs
xchg
stc
mov
adc
out
xchg
inc
xchg
fnstenv
add
loop
cmp
aas
mov
ficoms
fcomps
fidivl
fcmovnbe
or
add
mov
cltd
jecxz
aas
or
aad
xorl
mov
shl
sub
jl
popa
rclb
jae
daa
push
pop
inc
inc
ror
or
pop
push
scas
das
xchg
lret
enter
fstl
xchg
adc
leave
xor
inc
jnp
cmpb
dec
push
imul
ja
lea
lods
jae
daa
adcb
daa
inc
in
xchg
loopne
jb
add
xor
fidivrl
loopne
scas
repz
testl
mov
xchg
xor
pop
shlb
loopne
loop
icebp
ja
dec
out
mov
lock
mov
xor
fwait
movsl
pop
pop
xor
lret
lods
jno
jo
mov
mov
rorb
fwait
dec
or
inc
test
dec
inc
xchg
mov
sbb
stos
pop
or
out
jp
icebp
pop
jge
les
cmp
sub
bound
push
insb
adc
das
or
leave
pop
add
clc
sti
and
loop
lret
jne
mov
pop
or
lret
sbb
or
jmp
arpl
push
adc
ja
jp
mov
lret
data16
les
mov
adc
out
mov
test
imul
js
mov
push
mov
fmuls
ret
fsincos
insb
pop
jns
lcall
scas
pop
aas
mov
dec
loopne
arpl
cmp
in
fcompl
mov
aaa
mov
dec
xchg
test
cmp
stos
loop
cltd
in
mov
add
fwait
aad
pushf
jo
sbb
ja
adc
mov
sahf
cmpsb
cli
dec
loop
test
int3
dec
dec
adc
setae
jle
enter
in
push
shr
mov
sbb
push
imul
cmp
jno
pop
mov
mov
enter
dec
test
aas
movsl
test
das
fwait
adc
sub
or
lahf
push
ror
cmp
arpl
int
inc
sbb
dec
pop
xchg
push
adc
pop
xor
and
lock
fsubrl
jge
cs
out
mov
mov
jno
push
jo
outsl
xchg
mov
and
fidivl
cli
xor
out
mov
lahf
pop
pop
arpl
nop
pop
jae
mov
jns
fmuls
pop
pop
cli
adc
fsts
in
js
pop
sbb
pop
jno
add
insl
jg
sbb
cli
rorb
shr
sbb
jecxz
mov
loopne
mov
popf
lret
stos
sahf
in
xchg
mov
cmp
repnz
lahf
add
jns
enter
push
adc
cmpsb
ja
cmpsb
push
fstpl
jo
pop
inc
into
or
pusha
xorb
cmp
push
mov
bound
jg
rorl
dec
jno
jg
jne
fcoml
enter
pop
loope
jmp
sub
aaa
mov
cmp
xchg
adc
shr
ljmp
or
loopne
arpl
stos
negb
negl
adc
fst
inc
rclb
sub
add
xor
mov
mov
out
shl
fs
les
stos
cmpsl
push
orb
jmp
mov
imul
repz
inc
mov
js
sahf
in
cmp
jmp
loopne
stos
push
jno
dec
sbb
decl
mov
mov
mov
je
fnstcw
pop
out
mov
inc
in
nop
sbb
sub
lret
int3
call
loopne
inc
inc
inc
inc
sbb
fwait
sub
fstpt
adc
mov
test
add
lds
dec
adc
lea
inc
mov
and
imul
jle
mov
test
and
cmpsb
sub
cmp
sbb
push
fwait
pop
cli
ljmp
cmp
mov
clc
aas
push
xor
add
and
dec
mov
mov
jns
decl
push
jecxz
jl
cmp
int
mov
pop
addl
ds
inc
sbb
mov
std
fs
or
ja
inc
push
inc
jo
or
adc
add
scas
xchg
cmpb
ljmp
dec
adc
lods
cmp
inc
xor
mov
fldpi
pop
and
icebp
jo
dec
mov
adc
daa
dec
dec
xchg
sub
arpl
lahf
loope
dec
insl
jbe
loop
add
ljmp
aam
mov
lahf
xchg
and
sbb
push
cmp
or
push
scas
hlt
pop
fwait
pop
push
aam
push
fdivrp
rorl
xor
sbb
jns
fwait
inc
cwtl
daa
stos
xchg
sub
out
adc
mov
out
call
fwait
jp
ja
cmp
mov
call
jo
shlb
cwtl
cmp
xchg
in
iret
or
out
sbb
xchg
lock
rcll
ljmp
and
push
xchg
mov
dec
mov
stos
rcrb
mov
pop
jle
mov
sarb
add
sarb
ja
mov
mov
inc
mov
lock
les
xor
lock
dec
xchg
xchg
and
mov
das
js
data16
sub
pop
repnz
pop
int
sub
sbb
shl
clc
inc
adc
cmp
test
xor
aas
push
xchg
inc
pop
arpl
out
mov
pop
mov
mov
rorb
add
cmpsl
pop
xchg
test
xlat
sbb
loope
sub
out
out
je
add
cltd
loop
aad
and
add
std
mov
lahf
inc
push
adc
push
popa
xchg
xor
out
push
jno
int
xor
out
stos
repnz
addl
test
push
into
xchg
lods
jecxz
mov
scas
or
daa
xchg
movsb
inc
xor
and
jae
or
loop
call
incb
outsb
dec
inc
cmpsl
sbbb
pop
cmpsl
xchg
push
ret
bound
bts
cmp
gs
adc
mov
sbb
ds
aas
lods
dec
jge
mov
push
adc
or
aas
popa
cltd
push
pop
mov
push
loope
mov
bound
inc
shrb
pop
jecxz
mov
push
jmp
mov
push
cltd
fnsave
scas
lcall
aaa
cli
fs
fsubl
cmpsb
leave
push
pop
dec
pop
rcrl
fidivs
sbb
ss
xorb
rcrl
std
shrb
std
aam
rorl
ret
fldenv
pop
jno
inc
stos
ja
fucomp
or
lock
out
mov
inc
cmp
inc
sbb
ds
into
push
cmp
jmp
mov
imul
shr
jno
jns
inc
arpl
mov
mov
cwtl
pop
jmp
fs
ret
push
rorb
xlat
and
data16
shll
loopne
xchg
aas
and
mov
cltd
inc
jp
lods
out
popf
inc
dec
stc
inc
imul
jecxz
pop
sar
repz
add
stc
jge
mov
sbbb
sti
enter
daa
je
gs
flds
xchg
xor
pop
xchg
mov
pop
ret
dec
jecxz
xchg
popf
inc
pop
mov
outsl
sub
fmull
sbb
out
nop
adc
cmp
fnstsw
lret
enter
mov
imul
hlt
aaa
xchg
sbb
divb
sub
repnz
mov
push
repz
icebp
out
cmp
fistpll
or
adc
in
test
test
pop
imul
setne
aaa
mov
sbb
dec
dec
push
jge
test
repnz
sbb
or
stos
or
icebp
leave
inc
bound
xor
jp
adc
out
icebp
xlat
sbb
xchg
jge
and
test
hlt
cmp
mov
fcmovnb
xchg
jo
xchg
or
jnp
mov
lock
cmpsb
addb
loopne
sub
xchg
in
movsl
movzwl
enter
pop
jae
mov
sbb
hlt
dec
les
jbe
out
push
push
mov
pop
test
sbb
and
notb
rcll
fistps
xchg
ds
sbb
jmp
test
rclb
add
push
sbb
push
popa
xchg
or
add
sub
jmp
out
out
adc
pop
xchg
pusha
movl
sbb
popa
les
je
lds
icebp
mov
mov
pop
ja
movsl
or
jle
das
add
cli
push
push
ret
sub
jle
mov
sbb
daa
push
jmp
or
cmc
mov
cld
pusha
out
fisubs
sub
daa
dec
adc
outsl
sbbl
sbb
movsl
movsb
pusha
jle
cmp
inc
arpl
or
jecxz
lcallw
lret
lods
mov
les
jae
and
mov
cmp
mov
mov
clc
out
jl
ds
cltd
ljmp
sbb
xchg
dec
addr16
xchg
jecxz
xchg
test
cli
mov
std
fidivrl
push
aaa
and
cwtl
cli
inc
into
faddl
pop
push
es
movsl
fwait
test
and
js
mov
ja
sub
fildl
ror
cwtl
add
mov
orb
lds
sub
and
shl
test
cwtl
xchg
mov
dec
xchg
imul
fs
lea
add
push
xor
fdivs
xchg
hlt
js
jno
addr16
mov
popf
lods
lock
stc
fistl
shll
lods
push
mov
in
dec
sahf
mov
push
adc
inc
add
fwait
movsb
cmpsl
adc
push
adc
inc
xchg
stos
sbbb
imul
add
sbb
out
pop
jno
je
sbb
es
mov
adc
sbb
imul
sahf
sti
push
sbb
sub
rcll
add
pop
xchg
sub
sbb
adc
aaa
mov
add
sub
dec
test
cmp
pop
fstp
xor
jl
cmp
push
push
sbb
addl
imul
mov
adc
loop
dec
stc
call
xchg
mov
cmpsb
lea
es
xchg
rorl
mov
sbb
int3
jg
cs
fsubl
pop
stc
sub
jmp
adc
mov
jo
js
test
xor
xchg
jp
sub
xor
mov
loop
sub
int3
mov
push
pop
adc
bound
addr16
push
pop
push
jle
dec
out
negb
test
add
add
mov
adc
xchg
fs
stos
push
mov
das
add
lahf
push
cwtl
std
test
lea
fwait
je
dec
push
inc
in
shlb
pop
mov
pop
ss
daa
pop
cli
pusha
insb
jp
add
addb
jnp
and
dec
adc
or
mov
sub
out
addr16
aaa
xor
shll
jmp
clc
ret
cli
out
cltd
sbb
mov
push
cwtl
in
push
pop
mov
xor
ret
jp
or
arpl
push
outsb
xor
rcr
inc
fists
in
adc
cltd
mov
add
cmp
adc
push
outsl
popf
inc
pop
mov
scas
lods
out
or
out
js
ficompl
popf
adc
xorl
sub
or
in
mov
dec
hlt
dec
and
fcomip
cmp
test
aad
inc
fdivp
jns
fstps
aam
sub
push
lret
ljmp
fisubrs
sbb
pop
push
roll
shrl
push
cmp
inc
cmpsb
popf
cmp
clc
push
leave
add
sub
mov
jae
fmull
add
inc
inc
sahf
rcrl
and
and
shrl
mov
int
es
mov
cli
test
pop
stos
xchg
aaa
push
out
sarl
pop
pop
sub
jl
rolb
vphaddbd
pop
scas
push
sbb
push
mov
mov
xlat
mov
imul
sbb
add
sbb
sub
sub
sbb
scas
cli
dec
test
ds
aam
das
mov
insb
les
scas
push
std
stos
hlt
jno
jmp
lds
test
xchg
push
test
add
insb
or
stos
xlat
ljmp
or
aaa
xchg
adc
add
adc
mov
lahf
push
xchg
incb
and
or
or
mov
cmp
xchg
nop
sbb
aas
std
push
rorb
mov
arpl
xchg
ljmp
sub
mov
mov
iret
pop
call
add
leave
insb
pop
xor
test
inc
xor
repz
pop
sbb
sub
aaa
sub
cmp
sbb
scas
dec
pusha
imul
or
pusha
push
adc
mov
push
and
outsl
lock
rolb
cmp
aaa
jp
iret
cld
fldl
jae
pop
rolb
decb
popa
out
adc
in
jge
dec
or
dec
mov
ja
rcr
dec
adc
in
clc
jecxz
sahf
out
pop
fwait
test
cli
jne
mov
cmp
dec
pop
out
outsl
mov
bound
iret
gs
loope
daa
je
cmp
icebp
nop
push
pop
sbb
cmp
sbb
mov
push
and
inc
add
ss
cli
dec
std
cmp
popl
sbb
jmp
out
sub
movsl
pop
mov
fistl
push
pop
adc
cmp
jns
jle
push
adc
or
subb
add
movsl
mov
arpl
test
ss
lods
fildll
jbe
out
xor
cmp
jecxz
shlb
sbb
aad
mov
fs
out
pop
and
popa
out
cmp
mov
fistl
pop
sub
mov
cli
inc
mov
jmp
mov
pop
and
inc
sar
popa
stos
mov
pop
xor
andb
add
addr16
fwait
and
sbb
adc
xor
mov
sbb
mov
push
roll
imulb
ds
push
lret
sti
push
sbb
int
jnp
cwtl
sbb
fdivrp
sti
pusha
xor
jno
out
pop
int
andl
int3
mov
and
repz
test
add
pop
std
push
and
sbb
and
repz
mov
mov
jo
arpl
xchg
pop
or
add
mov
out
cmp
fisttpl
mov
call
sahf
xchg
pop
pop
aaa
mov
aaa
mov
out
lock
std
call
mov
sub
inc
xchg
mov
sbb
push
aaa
cmp
inc
pop
fisubrs
mov
js
push
aas
push
ficoms
pop
int
cmp
push
and
dec
mov
mov
movsl
add
pop
pushf
aaa
fcmovb
dec
or
je
aad
mov
iret
pusha
mov
adc
lods
out
mov
cmpsl
loop
jb
nop
sub
pop
nop
jp
in
lods
mov
dec
mov
adc
out
sub
dec
cmpsl
push
jg
jnp
mov
or
xor
lds
jmp
jo
lds
sbb
jbe
sub
stos
lods
clc
xchg
popf
push
arpl
and
mov
pop
mul
leave
fimull
inc
xchg
into
mov
jae
pop
push
and
movhps
jo
adc
jb
cmp
lahf
mov
inc
cmp
push
add
pop
mov
shll
sbb
lahf
mov
test
ja
adc
mov
sbb
loope
mov
call
stos
addr16
or
adc
add
jno
sbb
adc
jno
daa
jle
jmp
js
lods
imul
imul
pop
xlat
sub
sub
sub
les
ljmp
mov
dec
sbb
pushf
scas
fildl
idivl
sti
or
sbb
cwtl
repnz
mov
jbe
inc
leave
sub
adc
fldcw
call
sbb
outsl
xchg
cmp
xchg
add
loop
adc
int
mov
in
fimuls
orb
adc
std
aad
pop
orb
jp
gs
hlt
scas
push
fsin
lods
jp
push
push
insb
pop
adc
pop
cmpsl
add
int3
lcall
xchg
mov
mov
fists
decl
stos
sub
adc
in
inc
or
adc
mov
iret
loop
outsl
xor
leave
cmc
popa
and
add
and
dec
xchg
xor
sbb
stos
xor
stos
fistpl
imul
fimull
adc
or
aam
jnp
pop
popa
jp
lock
adc
sahf
mov
imul
adcb
dec
pop
xchg
ss
iret
fst
lcall
les
packssdw
dec
test
repnz
decl
into
in
jp
mov
xchg
pop
push
lds
xchg
jle
adc
jns
mov
ficomps
mov
inc
adc
cwtl
insb
mov
mov
xchg
cmovo
mov
imull
adc
adc
adc
ljmp
and
fidivrs
int3
and
ja
xor
dec
stos
mov
into
mov
inc
sub
mov
mov
pcmpgtw
mov
cs
ds
aam
mov
xor
lods
mov
sbb
ljmp
push
sbb
cwtl
out
xor
cmc
addr16
mov
jae
clc
mov
aad
adc
jne
test
outsb
repz
or
pop
scas
addr16
addl
pop
loope
push
add
cmp
cltd
mov
pop
stos
xlat
jecxz
inc
sub
lret
clc
lcall
xchg
push
sub
mov
in
cltd
cmp
mov
xchg
or
jbe
push
and
pop
dec
jge
xchg
aad
fstpl
in
pop
fidivl
and
pushf
inc
insb
jecxz
push
testl
cmp
jge
mov
push
mov
jg
xor
test
xlat
cmp
push
arpl
test
aas
inc
pop
sub
lret
lret
push
xchg
xor
cmc
lret
adc
lods
leave
in
add
cli
push
adc
gs
addr16
mov
mov
icebp
push
loop
lret
or
ret
fs
rclb
sub
std
add
gs
mov
push
lea
movsl
mov
call
jle
pop
ret
ds
out
xor
scas
dec
add
js
idivb
sarl
sub
aas
outsl
mov
adc
das
jae
xchg
cltd
repnz
je
out
dec
pop
cmpsb
adc
xchg
loopne
push
lcall
int
lea
dec
inc
and
mov
sub
addr16
cmp
add
mov
add
fidivrs
movb
add
mov
xlat
xchg
testl
cmp
je
jae
mov
shl
inc
pop
xor
mov
int
fimull
pop
loop
pop
arpl
pop
inc
mov
lcall
ss
aam
ljmp
dec
add
pop
out
popf
sub
jns
int
and
xchg
push
movsl
adcb
sbb
shl
mov
lret
jb
cmpsl
out
icebp
cli
enter
insb
xchg
jg
clc
mov
adc
inc
and
dec
push
in
aas
cmp
in
sbb
push
push
fcomps
mov
mov
shrb
pop
jge
and
jb
mov
pop
cli
testl
mov
jnp
xor
push
test
dec
in
or
dec
pop
pushf
mov
cmpsl
rolb
cmp
jae
mov
jge
or
dec
add
mov
std
push
in
inc
sbb
shrl
sub
fildll
jae
insl
rcrl
add
stc
adc
xchg
mov
add
adc
add
sti
xor
ret
add
int3
in
fidivs
xchg
in
sub
sbb
xchg
lock
sub
lock
bound
push
dec
cmc
mov
mov
dec
faddl
cmp
negb
cmpsb
lods
cli
lahf
cs
in
out
outsl
sub
xor
repnz
arpl
mov
lret
lods
mov
and
mov
popl
lods
in
cmp
dec
push
jecxz
mov
xlat
jo
faddl
out
fadd
mov
mov
mov
adc
xor
adc
dec
dec
mov
ljmp
lret
lea
cmpl
sub
and
dec
aad
cmp
jg
mov
lds
ljmp
mov
sbb
test
fistl
xchg
sub
jl
arpl
adc
sti
adc
clc
mov
int
ja
sbb
fstp
xchg
shrb
inc
cmp
movsb
sahf
lea
popa
jo
lods
into
add
icebp
lods
scas
dec
and
mov
mov
aaa
fldenv
lods
jbe
jbe
in
and
pop
sbb
scas
leave
adc
in
mov
mov
lock
jnp
pop
xchg
mov
js
call
lods
in
mov
cs
hlt
xchg
movsb
or
fadds
inc
jl
or
push
test
pop
sbb
push
add
rolb
repnz
into
stos
mov
jp
stos
rcll
out
mov
out
push
jo
mov
or
stos
enter
xchg
push
outsl
xorb
arpl
in
rol
dec
into
cli
cmc
xchg
dec
loopne
js
pop
imulb
gs
jge
adc
sub
mov
or
xchg
les
cmc
push
insb
mov
fwait
jp
call
mov
fbld
jns
inc
mov
outsb
push
insb
pop
cltd
jbe
mov
loop
sub
out
pop
pusha
cltd
shlb
cltd
cmp
dec
xlat
les
cmp
xchg
cltd
fstpt
daa
mov
add
imul
dec
xchg
loop
add
xchg
rclb
addr16
jmp
pop
int
test
pushf
jne
jb
jecxz
cmpsb
es
sub
xchg
out
icebp
jl
jnp
adc
bound
aas
sub
push
scas
sbb
stos
xor
mov
push
gs
imul
cltd
xchg
cmpsl
xchg
cmp
inc
or
mov
cli
fscale
sti
out
in
aaa
iret
pop
fldcw
std
ficomps
cmpsl
arpl
mov
test
dec
push
sbb
adc
fs
push
loop
inc
dec
or
stos
rcll
fstps
loope
fstp
jae
mov
std
jo
inc
push
clc
fimuls
loope
xchg
lods
addb
cmpl
dec
add
jecxz
fstps
xor
aam
cmpsl
fldl
mov
xlat
mov
and
out
stos
inc
inc
push
mov
pop
addb
dec
lret
dec
add
addr16
xor
jnp
cmp
mov
lds
daa
cli
push
rorb
cwtl
mov
and
xor
or
or
xor
nop
sbb
add
add
jno
sub
pop
pop
fmuls
fldenv
movsb
inc
je
std
arpl
imul
mov
xchg
jge
pushf
mov
dec
mov
dec
xor
jp
icebp
push
test
movl
in
nop
loope
add
imul
adc
push
fisttpl
and
lds
xchg
inc
mov
fistpl
jp
xchg
ljmp
repnz
add
cmpsl
adcb
pop
mov
mov
imul
sub
add
xchg
ret
sbb
out
pop
out
out
fistpll
push
loope
add
dec
cmp
in
xor
sahf
out
sub
scas
jne
cmp
inc
push
outsb
push
je
and
test
pop
test
add
inc
cmp
fcmovne
loope
in
insl
mov
jno
jns
and
bound
into
fstl
xor
movsb
mov
loope
data16
fsubrl
jnp
cld
fmull
rorb
cwtl
testl
in
push
js
inc
add
inc
movsb
push
or
shlb
dec
xchg
jno
sbbl
jmp
fisubrs
cmp
push
xchg
cmpsl
adc
jg
adc
cmpsb
add
fucompp
or
jne
xchg
rorb
cli
add
jns
setg
adc
es
addr16
xor
xchg
or
jecxz
or
stos
fdivs
xchg
adc
adc
pushf
fadds
aam
lea
and
aas
xchg
pmaxsw
and
push
loop
test
addb
pushf
in
jbe
push
pop
movups
notb
add
xor
cmp
sbb
sub
xor
fisubrl
aas
insl
mov
cmpb
js
push
fsubr
dec
or
xor
pop
insl
sti
pop
mov
sub
adc
aam
icebp
ret
arpl
push
mov
sbb
fdivl
sahf
jno
xchg
add
xorb
in
or
out
sub
dec
sti
inc
pushf
jl
inc
adc
xchg
aaa
push
inc
jle
xor
outsl
xor
stos
test
push
push
cmp
xchg
pop
sub
pop
mov
sbb
jecxz
push
xchg
fs
push
sbb
loopne
cmpsl
mov
call
jle
and
lret
loope
test
sub
mov
mov
stc
aam
push
jb
cli
lahf
les
inc
jnp
or
icebp
test
lret
mov
pop
imul
adc
stos
sub
test
add
jne
out
dec
cmp
mov
add
jnp
imul
xchg
cmp
in
push
push
mov
ret
add
std
jb
mov
jg
sbb
jle
push
xor
cmp
mov
outsb
imul
invd
sub
fdivs
push
push
mov
dec
adc
sub
dec
jnp
pop
sti
pop
jno
pop
mov
mov
scas
dec
in
fstpl
mov
xor
mov
xor
push
mov
xchg
into
mov
push
pop
add
mov
adc
repnz
sti
push
or
mov
mov
ss
aaa
xor
fwait
adc
push
int
jp
test
sub
movl
cmp
xchg
mov
push
fcomps
xor
push
jns
jbe
jp
fistl
mov
push
or
ljmp
mov
xor
pop
mul
xchg
mov
xor
int
mov
inc
dec
lret
imul
jbe
sbbl
lcall
sub
dec
inc
rclb
ret
addl
sub
pop
xchg
fwait
mov
clc
lret
icebp
stos
int3
add
xchg
xchg
xchg
mov
pop
jmp
cmp
addr16
xchg
and
mov
pop
in
mov
rcr
dec
les
mov
add
mov
loop
adc
mov
movsl
xchg
jae
dec
dec
adc
notb
jp
jb
cli
ds
jmp
icebp
lret
mov
loop
fcomi
clc
sbb
dec
mov
cmpsb
push
xchg
fsin
mov
push
out
out
cmp
adc
addr16
in
mov
mov
popa
imul
mov
inc
in
push
incb
sbb
popa
not
dec
pop
sbb
icebp
lea
in
mov
aam
xor
in
mov
int
ret
btc
cs
cltd
push
testl
je
sub
iret
push
lcall
ss
push
push
pop
fadds
loopne
repz
xchg
js
sub
aas
test
cmp
mov
aam
ds
pop
ficoml
mov
mov
and
ljmp
push
and
cwtl
lret
xor
lret
mulb
or
sbb
sti
hlt
popf
or
pop
mov
scas
mov
loopne
icebp
lret
in
into
rorb
or
bound
xchg
shll
in
xor
add
mov
cmpsl
shl
repz
or
les
sbb
sub
sub
icebp
lds
bswap
notb
cli
aam
sbb
sbb
into
sbb
cwtl
maxps
cli
in
loope
or
add
cmpsb
scas
aas
jl
fcoml
inc
shrb
xchg
out
sub
dec
pushf
rcll
cmp
pusha
xchg
push
or
idivl
xor
movsl
push
orb
call
mov
mov
mov
ret
pushf
and
sub
insb
cs
add
scas
pop
or
pop
cmp
incb
or
jg
inc
pop
in
inc
pop
xchg
sub
out
test
push
mov
jae
mov
ds
lret
out
lods
pop
setge
inc
cmp
pop
aad
xchg
pop
ljmp
pusha
inc
loope
aaa
pop
add
stos
popf
adcl
outsl
cli
mov
imul
dec
sbb
add
icebp
cmp
inc
xchg
cmpb
pushf
mov
sub
fxam
stc
inc
sub
in
and
push
dec
enter
mov
test
jae
test
lods
lahf
outsb
push
nop
lcall
repz
add
into
call
sbb
sub
sbb
xor
push
cmp
fnsave
xor
inc
push
push
mov
popa
mov
addr16
ja
and
inc
cmp
fcompl
es
push
inc
scas
pop
xor
mov
lds
push
fdivl
insb
mov
mov
sub
stc
pop
cs
push
mov
dec
and
ja
imul
xchg
and
das
and
ret
lock
dec
int
idivb
gs
and
in
popl
or
js
sbb
dec
cmp
jmp
cwtl
fcomps
in
test
jp
or
or
lret
jns
xchg
rcr
into
repz
xchg
in
xchg
inc
imul
mov
dec
or
sub
aas
imul
or
pushf
fstpt
dec
ljmp
inc
mov
lahf
scas
shrb
push
popl
daa
insl
pop
out
cwtl
out
shrb
dec
adc
sub
inc
cmpsl
or
pop
cmp
push
in
pop
ljmp
jle
in
xor
mov
sbb
mov
push
lret
inc
xchg
insl
and
sub
mov
mov
das
jns
cmpsb
or
pushf
and
ljmp
sti
enter
dec
fcoml
imul
cmpsb
mov
jecxz
inc
cmpsl
add
xchg
dec
and
cltd
jmp
push
jle
mov
mov
es
shlb
push
shl
push
ret
imul
sti
hlt
aad
or
sub
pushf
sub
sub
jecxz
leave
adc
shl
xchg
pusha
roll
sbb
mov
repz
adc
push
xor
outsb
and
iret
cmp
cmp
adc
rcrb
or
mov
jle
or
ja
lds
mov
xchg
roll
into
mov
adcb
mov
fcomi
mov
xor
xor
lret
filds
xchg
sarb
clts
icebp
lds
cmc
jp
cld
mov
lds
or
movsb
popw
xchg
and
in
xchg
lret
imulb
dec
rolb
loop
test
pop
jmp
or
sahf
cltd
mov
test
mov
cmp
mov
jg
jnp
scas
jno
sahf
xchg
sub
mov
bound
jae
jo
lcall
inc
popa
sar
xor
rorb
sti
pop
jle
and
xchg
aad
inc
jmp
jg
cmpsl
outsl
adc
cwtl
dec
mov
mov
mov
push
sub
out
in
call
cli
fstl
mov
push
add
dec
inc
test
jo
aad
mov
sarb
sti
mov
sub
xchg
in
jnp
fistps
inc
rol
lock
cmp
pushf
inc
std
or
and
out
ljmp
sti
pop
negb
jbe
cli
xchg
rclb
dec
stos
push
aam
mov
fs
xlat
xchg
sbb
jge
sub
pop
lock
cmp
xor
and
jle,pt
pop
aaa
dec
push
add
call
ficompl
mov
pcmpeqw
sarb
repnz
or
or
pushf
dec
sub
xchg
leave
jmp
mov
mov
pop
arpl
or
or
or
xor
xchg
imul
ret
sahf
xor
js
aaa
frstor
out
sub
push
mov
and
sub
lahf
adc
add
dec
lcall
mov
or
jg
xlat
mov
fcomip
cli
inc
sub
mov
cmp
in
lret
faddl
sbb
les
popf
out
jp
jno
shlb
divl
xor
and
into
and
cmpsb
addl
sbb
dec
mov
jae
or
add
aad
push
lock
xlat
cs
scas
dec
movsl
mov
mov
out
lods
pop
dec
jp
xchg
sub
ljmp
xchg
or
cmp
in
jmp
out
mov
int3
movsb
dec
ss
xchg
pop
frstor
loopne
and
lods
inc
xchg
enter
bound
int
sbb
jmp
js
js
js
ljmp
out
loop
je
rol
outsl
lods
push
mov
push
test
insl
clc
xor
pop
add
jnp
mov
in
lock
lods
sub
insb
inc
aaa
push
mov
fisttpll
dec
pusha
not
and
insl
pop
and
jbe
xchg
add
fsubr
aad
jnp
push
js
stos
mov
mov
ficoms
fnstcw
into
test
mov
or
insl
fucom
push
repnz
repz
ret
push
push
outsb
cwtl
movsb
pop
cmpsb
dec
cltd
sbb
cmpl
mov
inc
js
pop
jbe
inc
fmuls
pop
lret
mov
lods
pop
lods
jae
mov
in
in
or
aad
mov
mov
rcrl
mov
and
jmp
ds
mov
mov
cmpsb
sbb
add
sbb
sub
ljmp
js
xlat
jge
or
xchg
inc
addr16
cmp
shll
imul
mov
adc
sbb
std
iret
decl
cwtl
es
inc
orb
adc
movsl
push
cmp
xlat
and
iret
jno
rorb
in
sub
dec
cmc
jmp
xchg
loop
mov
insb
in
fstps
jbe
mov
stos
out
inc
add
incb
jl
outsl
push
rolb
cli
sbb
xor
ds
je
or
jmp
pop
bound
bound
push
xchg
call
xchg
adc
mov
pop
or
bndstx
push
sbb
and
cltd
cmpsb
and
sub
xchg
push
xor
jp
push
pusha
and
mov
cmp
es
adc
jp
test
and
cmp
dec
and
pop
je
dec
pop
fisubrl
outsb
aaa
es
decb
loop
rcl
cwtl
pop
out
hlt
insb
shll
movsb
pop
adc
lock
adc
jmp
inc
xchg
pusha
lock
inc
mov
addr16
and
cs
cli
pop
xor
pop
jg
addr16
adc
xchg
or
mov
into
mov
cmp
aad
fs
arpl
outsb
xor
and
mov
es
in
mov
imul
adc
xchg
test
test
cmpsb
loop
fwait
pop
in
sbb
fsubl
cld
xchg
sarl
pop
mov
xor
imul
jne
jnp
mov
gs
int3
sub
fisubrs
dec
pop
cli
mov
pop
push
iret
xchg
aad
jne
push
xchg
imul
cwtl
and
leave
pusha
and
clc
stos
sar
sti
add
in
loopne
icebp
leave
adc
and
push
lret
pop
cli
pop
test
adc
daa
xor
ss
scas
fistpl
inc
or
mov
add
sbb
or
es
addr16
mov
in
dec
jo
add
xchg
xor
scas
mov
ret
xor
pop
xchg
stos
jae
or
xchg
outsl
jp
pop
push
cmp
mov
and
test
sbb
incb
xor
pop
aaa
add
push
xchg
push
push
ss
xor
lret
sub
and
ret
xlat
mov
mov
mov
leave
imull
out
lret
lcall
jecxz
add
jo
lods
inc
cltd
jl
aaa
push
scas
jle
pushf
in
push
addr16
js
dec
es
repz
adc
stos
pop
mov
fdivs
and
and
arpl
xchg
push
movsb
mov
cmp
and
movsb
pop
in
fwait
jne
fimuls
rol
push
popf
inc
dec
movsb
insb
testl
mov
sbb
adc
lods
aaa
pusha
nop
inc
je
inc
jl
les
ret
fistpll
les
mov
nop
inc
mov
sub
sbb
insl
test
out
jnp
les
mov
out
popf
aas
stc
dec
cld
jp
dec
sub
je
lcall
shll
lea
mov
scas
jae
cmp
push
xchg
clc
pop
fstps
mov
sub
mov
cmp
or
mov
push
arpl
mov
cwtl
xor
cli
xor
xchg
jbe
enter
xor
shrb
fucomp
iret
cmp
mov
cli
rorl
lahf
inc
pusha
mov
jmp
vmovntps
jbe
pop
test
pop
cmpsb
bound
call
xchg
and
lcall
imul
push
pop
cwtl
mov
push
jg
fcomps
arpl
fsubrl
mov
or
lahf
xchg
lahf
mov
shl
push
pop
pop
andl
dec
sub
and
fwait
dec
mov
outsl
pop
xlat
sbb
ja
xchg
or
in
test
fisttpl
and
out
ds
sub
scas
lock
lret
fldenv
shll
mov
add
dec
inc
inc
mov
sbb
test
idivl
nop
adc
es
sbb
adc
mov
mov
add
stos
and
xchg
cmpsw
jne
cs
les
xchg
lods
lea
scas
push
lock
sub
lock
fildl
shrb
dec
and
pop
repnz
in
imul
pop
and
aam
mov
xor
rcrl
xor
dec
or
sbb
adc
sbb
out
out
sub
fisubrl
shrb
and
insl
ds
pop
pusha
push
xchg
pop
jns
dec
stc
xchg
push
jnp
ret
dec
insl
cld
sarl
in
imulb
jbe
sbb
push
in
dec
andb
push
or
std
pop
into
mov
test
lret
dec
xchg
negb
dec
xor
jo
and
xchg
in
loopne
inc
jecxz
lock
adc
jb
pop
pushf
sarl
and
xchg
inc
mov
cltd
fcoml
pop
pop
ret
mov
lret
adc
mov
pop
lea
leave
xchg
aas
xchg
pop
call
std
rcrb
rorb
mov
sbbb
insb
scas
sub
xchg
mov
out
pushaw
mov
xlat
add
lock
leave
int
push
pop
add
mov
dec
cmpsl
sub
fwait
enter
rcr
aad
jge
pop
cmp
xor
sub
dec
adc
int3
xchg
enter
xorps
popa
fucomp
mov
cs
add
pop
fnsave
inc
cld
jecxz
jmp
xlat
and
ret
in
add
shll
xlat
push
or
cs
xchg
iret
xchg
hlt
stos
mov
mov
loopne
leave
int
lret
out
les
xor
inc
sbb
lret
ror
addr16
mov
rcl
sub
mov
xchg
xchg
mov
clc
leave
pop
insl
ds
sub
int
inc
stos
pushf
add
das
sbb
push
mov
xchg
dec
mov
stc
test
lahf
push
pop
aaa
push
in
mov
popa
fdivrs
pop
add
adc
sub
adc
inc
ss
aam
pop
in
movsb
xor
mov
mov
adcl
mov
test
sub
push
lcall
gs
mov
sarw
cld
stos
adcl
mov
mov
and
mov
mov
jno
fadds
ret
mov
fs
push
jae
push
inc
xor
inc
adc
popa
xchg
sbb
and
push
xchg
mul
or
dec
jle
test
mov
adc
pop
fldcw
ret
insl
iret
sbb
mov
mov
out
bound
adc
xlat
loope
cwtl
or
imul
sbbl
ja
pop
es
pop
or
sub
xchg
cld
lods
mov
cltd
adc
mov
push
hlt
dec
sarb
pop
dec
jbe
inc
push
cmp
adc
ljmp
mov
repz
mov
mov
xchg
xchg
xor
test
and
int3
jge
pop
xor
pushf
sti
icebp
cs
mov
aaa
icebp
dec
scas
jo
stos
lahf
loopne
cmp
mov
add
and
add
pop
inc
movsb
into
push
add
add
in
sbb
xchg
mov
cmp
ljmp
mov
dec
scas
das
test
addr16
repnz
cmp
jne
popf
mov
jecxz
push
xchg
jmp
popa
clc
sub
cmc
loopne
and
inc
scas
cwtl
ss
je
aas
mov
scas
stc
sahf
je
sbb
mov
iret
pop
mov
push
push
add
adcb
loop
cmc
dec
cwtl
out
or
xor
subl
lcall
in
xor
mov
mov
ja
jbe
push
adc
sbb
out
in
jne
aas
test
pop
subb
ret
mov
jmp
and
repz
cmp
aad
xchg
stc
jecxz
xlat
and
mov
and
adcl
xchg
mov
nop
repnz
test
inc
push
mov
scas
in
outsl
lods
adc
pop
pop
push
push
cmp
aaa
xlat
addr16
or
push
test
pop
addl
dec
xchg
sub
push
test
je
in
mov
cmp
jno
pop
cli
mov
sbb
mov
int3
push
mov
cmc
cli
and
jl
inc
jg
aaa
push
testb
mov
loopne
xor
xor
adc
shlb
and
mov
pop
aam
sahf
hlt
xor
cmc
cwtl
out
inc
fs
lret
repnz
fidivs
popa
jle
pop
or
gs
sbb
mov
xchg
fcmovnu
adc
mov
xor
movsb
imul
jns
pop
mov
mov
lods
xlat
sub
pop
push
cmp
and
roll
mov
or
mov
and
sbb
adc
pop
cmp
and
mov
lahf
lods
dec
push
mov
orl
mov
or
push
sub
jo
in
mov
pushf
ds
bound
add
sbb
shrl
insl
xchg
jbe
sbb
sub
movsl
jo
and
xchg
fdiv
xor
cmp
mov
in
lods
lods
test
int
mov
je
and
jnp
out
es
cmp
pop
jl
mov
outsl
repnz
test
jp
ja
push
outsb
mov
mov
inc
xor
in
or
leave
jge
in
std
mov
pop
and
out
arpl
cmc
sub
jo
jl
arpl
out
or
cwtl
mov
sub
xor
dec
dec
iret
pop
bound
mov
xor
sbbb
sbb
call
ss
cmpsl
cmp
js
test
mov
mov
mov
jne
xchg
es
jmp
inc
fisttps
or
jmp
jne
ja
repz
int
fs
mov
mov
bound
push
push
sahf
jae
cmp
test
xor
cli
xchg
jmp
ljmp
test
sub
shl
push
leave
subb
mov
iret
xor
div
dec
test
es
and
mov
cmp
test
xchg
mov
popf
jne
jne
orl
sub
cmpsb
adc
nop
mov
xlat
pop
cltd
test
cmpsl
popa
das
movsb
loop
push
aam
int3
cmp
or
or
das
xchg
add
adc
repz
pop
repnz
loopne
add
fdivs
mov
pushf
push
in
fdivp
inc
aas
add
mov
mov
mov
fcoml
sub
fdivs
or
sbb
lea
lock
scas
dec
push
xor
sbb
pop
inc
out
dec
frstpm(287
lret
xchg
into
fbld
add
lcall
rcll
inc
gs
movsl
or
repz
idivl
mov
sbb
or
or
sbb
and
push
adc
mulb
int3
sbb
dec
mov
inc
rcll
icebp
push
cs
popl
insb
cli
test
dec
xchg
sub
jnp
pop
jle
hlt
xchg
add
test
or
dec
and
scas
mov
sbb
sub
fwait
in
sub
mov
mov
addb
jl
ja
ss
repnz
xchg
dec
in
xorl
inc
clc
sbb
push
cmc
adc
sbb
dec
mov
xchg
mov
xchg
pop
fnstcw
pop
inc
add
dec
pop
test
je
mov
aam
jb
jae
push
mov
or
pusha
sub
iret
lahf
mov
movsl
mov
jne
mov
sub
imul
or
aas
xlat
into
ljmp
scas
dec
push
das
cmpsl
sub
pop
pushf
xchg
movd
xor
outsl
sahf
jno
fidivrl
loop
inc
clc
add
or
jl
xor
xor
and
pop
arpl
gs
mov
cmp
js
sbb
jmp
adc
in
mov
pop
nop
sbb
push
rcrl
leave
jg
ja
sti
add
inc
mov
jnp
jge
insl
rcll
push
stos
add
insl
cmp
mov
cmpsb
insb
int3
sub
rcrb
movsb
pusha
fstl
inc
pop
mov
lret
cmpsl
cltd
jno
aam
mov
out
ljmp
mov
jl
bound
into
dec
xor
addr16
jo
repnz
fwait
jb
lds
xor
sub
sub
int3
xor
int
xor
movsl
addr16
sub
ret
mov
jge
mov
jge
rcrb
adc
stc
xchg
loope
cmpsl
aad
push
mov
shrl
jb
pusha
rcrl
in
xchg
inc
push
xor
or
mov
ds
shll
mov
andl
push
stos
mov
mov
fdivr
push
mov
sub
cmpsl
pop
mov
jbe
add
rol
dec
mov
rorb
xchg
and
outsl
push
mov
imul
ja
imul
pop
insb
fsubr
dec
lret
inc
push
sahf
loop
cmp
movsb
jbe
mov
or
and
mov
in
cmc
sub
call
add
push
pusha
imul
imul
jg
ret
push
shlb
fisttpll
and
in
movsb
xchg
pop
js
addl
int3
mov
add
pop
dec
fs
es
push
imul
xchg
pop
jmp
jl
adcl
push
mov
mov
and
hlt
std
ds
fdiv
bound
mov
in
cmc
add
fcmovnbe
insb
out
fbld
xchg
jns
dec
shr
and
mov
jge
shrb
add
pop
xor
sub
lahf
and
pop
cmpsb
decb
inc
nop
aad
in
sub
lahf
nop
out
cmc
pop
cmp
test
sub
pop
jl
cmp
std
lahf
adc
inc
mov
push
add
in
push
xchg
pop
jae
rolb
jl
insl
pop
lret
flds
xchg
int3
add
ss
call
mov
cmp
lds
repz
adc
rol
pop
adc
fistpl
and
sbb
and
addb
bound
arpl
orl
ljmp
addr16
pop
and
aaa
scas
lods
xor
popa
mov
call
jnp
mov
jns
push
repnz
aas
ret
mov
jg
inc
es
inc
xor
arpl
push
lret
sti
adc
xchg
sahf
lds
daa
mov
push
inc
in
cltd
sbb
xor
in
xor
movsl
lret
repz
inc
sub
jae
fdivrp
outsl
inc
pop
pop
ss
push
aad
shlb
push
add
push
jb
jno
ljmp
xor
jno
xor
jg
sti
jge
push
aad
xor
daa
ja
pop
or
adc
cmp
xor
stc
or
dec
ljmp
mov
insb
ret
mov
test
dec
inc
sub
rclb
mov
inc
and
cmp
push
testb
arpl
push
mov
lods
adc
clc
push
cmpsl
cmpl
std
or
stos
sbb
aad
stc
sahf
aaa
rolb
pop
cli
mov
loop
inc
insb
sub
inc
mov
or
idivb
in
xchg
mov
out
mov
ret
inc
popf
fwait
mov
dec
mov
int
setge
jp
inc
mov
std
dec
aaa
loope
in
fwait
mov
dec
rcll
cmp
fisubl
mov
test
in
mov
jp
sub
fwait
fcmovnu
push
push
pushf
int3
sahf
and
cli
mov
cmpsl
sbb
fdivrl
sub
xchg
cmp
mov
test
popf
xorl
jmp
mov
sbb
mov
sbb
dec
sbbb
inc
cmc
xchg
jp
cmp
fsubrs
and
shrb
rorb
jo
test
je
xor
pop
test
arpl
mov
xor
jge
pop
pop
cwtl
imul
or
dec
jnp
add
inc
xchg
mov
inc
stos
or
cmp
imul
add
ret
aas
cld
xor
add
loopne
pop
insl
jle
call
in
adc
pop
jle
inc
dec
int
sub
add
hlt
jb
testl
add
sub
sub
and
xchg
aas
aaa
add
push
or
das
pop
jbe
xchg
ret
inc
jl
xor
pushf
aas
lock
sub
loope
dec
adc
jp
push
pop
xchg
js
clc
push
mov
loop
je
sub
int3
xchg
pop
test
fsubrs
lods
inc
lcall
sbbl
hlt
push
cltd
cmp
movsl
je
push
test
lret
das
outsb
sub
js
repnz
stc
jne
pop
jp
cltd
aaa
lods
cmpsb
xchg
sar
and
stc
pop
jle
xchg
bound
jno
mov
loop
mov
insl
shr
and
lret
jg
stc
out
dec
sbb
fisubl
pop
js
imul
in
add
popf
outsl
push
xor
xor
pop
out
mov
inc
xchg
repz
out
xlat
cmp
jp
xchg
rclw
cltd
jp
lret
mov
in
dec
jns
push
mov
ret
popf
stos
setns
jle
sub
out
incb
negb
cwtl
cmpb
sti
xor
movsl
cmp
and
add
mov
ret
cld
cmp
inc
mov
or
mov
xchg
iret
aad
stos
pop
mov
xor
xor
sbb
inc
cltd
jmp
test
dec
xchg
jo
push
fsubs
add
out
mov
movsl
and
inc
dec
xchg
test
das
scas
ret
add
jne
push
shll
ds
aam
jmp
jnp
pop
push
fwait
jb
pop
rcrl
mov
mov
imul
scas
popa
clc
imul
cmp
mov
movsb
add
call
iret
xor
mov
cmpsl
pop
sub
xchg
or
movsb
ds
in
pop
push
jbe
add
mov
push
loop
add
ffree
test
fldcw
push
sbbl
ds
push
insl
jle
mov
and
xchg
adc
imul
jo
mov
cmpsl
out
rorl
ret
insb
inc
and
loop
sbb
mov
mov
sbb
shlb
movsl
ret
inc
xchg
lea
jecxz
mov
les
jbe
mov
xchg
movsl
or
jae
pop
add
loopne
incb
xchg
mov
jb
add
test
xorl
cmpsb
repz
stos
cmovs
nop
mov
sub
adc
fdivs
bound
out
js
cmpsb
dec
and
jae
xchg
push
ds
jbe
movsl
data16
cmpb
pop
lcall
adc
test
fildl
cmp
push
mov
mov
lahf
hlt
cmp
cmc
bound
and
mov
mov
adc
pushf
cmc
push
xchg
xchg
lods
mov
movsb
nop
dec
dec
fisttpl
jge
stos
idivb
movsl
mov
push
js
call
aam
lahf
fdivrl
and
xchg
movsl
stos
jl
cwtl
push
xor
leave
push
mov
stc
lret
add
rcll
add
cwtl
int
dec
push
sbb
fsubrl
inc
mov
jmp
repz
or
sbb
cmp
adc
xchg
icebp
jmp
jb
stos
add
mov
pop
inc
xchg
jbe
rcr
scas
les
divl
jo
and
add
int3
insl
repz
and
test
inc
cmp
fildll
test
mov
movsb
xlat
mov
and
push
popa
testb
aas
loopne
arpl
sbb
scas
ds
xchg
mov
inc
push
cmp
jns
sub
xchg
cmpsb
adc
cmpsl
pop
xor
xor
cmp
lea
test
sub
mov
call
lcall
push
sbb
push
sbb
add
test
rcrl
mov
shrl
repnz
jg
test
pop
andl
inc
adc
iret
shrl
dec
outsl
imul
je
xchg
cmp
aam
pop
cld
pop
jb
cwtl
int3
or
idivb
sahf
push
or
push
insb
cs
test
fsubs
jo
pop
in
scas
sbb
mov
outsl
sub
pusha
xchg
in
adc
pop
adc
mov
sub
mov
and
dec
jae
maxps
cwtl
iret
addl
mov
es
insl
ret
dec
mov
xchg
repnz
mov
cmp
and
pop
mov
stc
mov
enter
sub
or
lret
fs
xor
or
sbb
test
test
pop
sbb
pop
and
add
mov
in
pop
es
or
mov
sar
in
pop
mov
push
cmp
mov
stos
cwtl
movsl
mov
sbbb
cmpsl
outsb
lods
sub
adc
cs
popa
repnz
mov
daa
iret
jle
jge,pt
cmpsb
test
cs
mov
inc
sbb
xchg
jmp
repnz
fldcw
xchg
adc
aaa
mov
pop
flds
sar
in
adc
cmp
fcoms
iret
addr16
dec
add
lcall
test
inc
mov
pop
lret
mov
imul
jecxz
mov
in
mov
sbb
out
mov
imul
data16
fsubl
cmp
xor
into
out
mov
pop
xor
inc
or
inc
mov
fsubrs
sarb
inc
es
push
insb
ja
mov
pop
les
xchg
add
fdivrl
sbb
jo
test
mov
movsl
insb
adc
mov
incl
test
mov
add
in
or
xor
xchg
jl
xor
int
and
in
aas
mov
xor
cld
cmp
add
pop
je
sub
rcl
repnz
sarb
push
leave
into
out
out
or
dec
ds
mov
mov
aaa
add
insl
push
movsb
leave
outsb
mov
movsb
inc
xchg
dec
fiaddl
frstpm(287
jp
and
xor
cmpsl
loop
movsl
imul
cmp
and
pop
and
shrl
xchg
pop
roll
mov
adc
push
push
push
outsb
insb
or
xchg
ja
mov
pop
lret
aad
jp
sbb
mov
stc
adc
sarl
hlt
mov
dec
mov
outsb
push
push
insb
insl
mov
outsl
jl
mov
mov
jno
mov
icebp
leave
addr16
imull
stc
cmp
add
fistps
stos
inc
loop
ljmp
repnz
jg
mov
repnz
pop
sbbb
push
xor
outsb
push
or
lcall
std
sahf
inc
bound
push
rorb
and
push
call
xor
fistpll
jge
or
aad
mov
scas
add
popa
pop
push
xor
dec
js
insb
ds
xchg
jp
add
rcll
call
and
inc
daa
cmpsb
lods
adc
hlt
call
stc
js
cmc
dec
and
rol
dec
mov
int
fsts
xlat
dec
scas
int
sbb
adc
lcall
sbb
cmp
xor
clc
scas
cmp
or
daa
jne
scas
xchg
push
xor
es
insl
iret
add
xor
and
stos
fs
out
lcall
inc
jo
dec
jb
imul
ret
cltd
sub
xchg
test
inc
xor
fs
jp
jp
arpl
cmp
movups
adc
mov
ja
imul
imul
and
stos
sub
aaa
inc
cmc
sbb
mov
or
add
adc
push
std
andl
sub
or
push
addr16
pop
sti
xor
mov
stos
and
out
xor
mov
mov
pop
lret
scas
mov
lahf
fadd
shrl
incl
insb
inc
xchg
movsl
repz
fisubrs
mov
in
je
mov
push
daa
xchg
lods
mov
out
ja
push
fnstsw
sub
sti
jge
adcl
je
leave
push
imul
mov
in
xor
in
out
ret
stc
insl
or
mov
xlat
out
push
pop
and
fs
pusha
mov
add
xchg
cmp
xor
sarl
lods
jns
stos
pop
loope
daa
jo
imull
xchg
out
out
adc
push
add
sbb
mov
mov
adc
daa
addr16
lahf
sub
dec
movsl
or
scas
nop
jge
lods
shr
mov
inc
push
push
jne
dec
and
frstor
lahf
ja
insb
inc
add
pop
push
push
outsl
das
sti
inc
mov
push
dec
in
sbb
xorb
xchg
sub
loop
outsb
and
std
call
mov
repz
ljmp
loope
bound
je
pop
cltd
cmc
rcll
imul
cmp
ret
xchg
xlat
in
jmp
cmpsb
pop
inc
mov
lret
decb
xlat
jne
pusha
fists
jecxz
loope
mov
inc
fbstp
and
mov
pop
sbb
xchg
iret
cmc
sub
pusha
pop
jle
sbb
mov
or
sub
and
mov
stos
scas
push
cmp
imul
cmc
lret
test
add
loope
push
fisttpl
mov
lret
daa
sbb
inc
dec
and
outsb
pop
mov
std
cltd
arpl
add
sbb
aam
and
jge
inc
cmp
cli
dec
dec
push
xor
lret
call
pop
dec
xor
mov
add
js
pop
enter
xchg
pushf
mov
daa
js
add
ja
rclb
inc
in
push
xchg
xor
pop
inc
add
pop
mov
or
scas
ret
xor
out
cltd
lds
mov
fwait
rclb
pop
out
arpl
out
out
imul
das
das
pop
fldl
mov
js
dec
pop
xchg
dec
xchg
fucomp
mul
cmp
das
out
jp
jns
in
mov
lods
xchg
xlat
cwtl
cwtl
arpl
xchg
fsubrs
jle
push
dec
sub
aas
movsb
stc
bound
pop
jp
cmp
add
and
addr16
xchg
hlt
xchg
mov
sahf
adc
es
mov
mov
mov
xchg
insb
mov
outsb
sub
inc
lcall
std
inc
cld
cmp
or
pop
stos
fucomp
int
aad
out
adc
daa
sti
sbb
mov
in
test
icebp
cli
pop
and
stc
pop
adc
cli
ljmp
adc
inc
les
fwait
gs
xchg
movsl
shll
dec
push
xchg
push
in
jbe
into
mov
scas
cmp
jns
outsl
incb
push
push
cmp
lods
pop
movl
pop
xchg
inc
add
add
stos
mov
jp
sbb
addr16
cvtps2pi
das
mov
cmp
movsl
xor
push
lds
fsubrs
cmpl
aad
les
adc
movsl
fldenv
jno
xchg
pop
scas
mov
push
xchg
insb
out
sub
mov
cmpsl
paddq
sub
cmp
ret
data16
pop
jge,pt
hlt
inc
rolb
inc
scas
push
popa
cmpsl
jge
jno
divb
call
ja
sbb
mov
icebp
mov
int
mov
mov
and
jecxz
repnz
jae
add
sbb
dec
mov
pop
fisttpl
enter
add
lock
in
jl
lret
iret
enter
jbe
xchg
mov
mov
shufps
lret
adc
int
jle
or
stos
xlat
int3
push
scas
xor
decl
mov
test
pop
xchg
sarl
loopne
mov
subl
sbb
cmc
mov
out
jmp
xor
xlat
xchg
fldt
dec
daa
push
aaa
sbb
push
jmp
out
xchg
xlat
or
push
fwait
xchg
jae
xchg
cmp
adc
mov
push
outsb
test
jno
sbb
inc
insb
das
sbb
adc
scas
jno
inc
mov
movsb
mov
pop
cld
sub
cwtl
and
out
cmpsb
pushf
aam
outsl
divl
jae
call
mov
push
into
cmp
insl
jg
js
sub
insl
add
ret
shll
push
pushf
insb
xor
rcrb
xlat
rorl
fisttps
jnp
lods
mov
pop
inc
orb
out
mov
lahf
mov
mov
push
rcr
mov
pop
mov
cmp
nop
lods
andl
xor
mov
es
or
fistpl
cmp
pop
xor
mov
mov
int3
jp
mov
and
icebp
xorl
inc
sbb
mov
inc
negb
call
fdivs
in
and
jno
shll
adc
push
sbb
iret
mov
popf
or
aaa
ljmp
mov
pusha
sub
xchg
jnp
shr
lds
sub
in
hlt
mov
lods
jnp
stos
jbe
mov
loop
movsb
ss
in
or
rorb
inc
fwait
pop
mov
movl
pop
mov
inc
sbbb
bound
xchg
into
testl
jg
movsb
test
mov
ret
jg
int
pop
inc
test
jp
push
mov
and
inc
ftst
fidivrl
sbb
in
or
dec
inc
lahf
push
repz
enter
out
cltd
nop
out
cltd
push
cmc
sub
out
jae
mov
cwtl
cmp
sub
int3
add
loope
and
sbb
inc
push
mov
push
inc
add
push
xchg
lods
jge
shlb
pop
mov
lods
mov
mov
or
push
movsl
lret
icebp
pop
aam
in
sbb
ljmp
push
pop
cs
decb
test
enter
iret
inc
pop
pusha
in
sahf
mov
adcl
jg
mov
imul
jae
aas
fistpl
xchg
xorl
popf
mov
inc
xlat
shrb
dec
sahf
pushf
leave
shrb
jno
and
sbb
adc
aaa
push
jmp
shlb
xor
pop
subl
icebp
repnz
popf
fmuls
movsl
imul
fadds
adc
xor
mov
roll
mov
loopne
test
dec
pop
lret
xchg
pop
loopne
movsb
outsb
lcall
push
mov
push
mov
cmp
add
or
or
fdivrs
push
cmpsb
cmp
fdivl
out
std
lds
roll
push
sarl
mov
mov
stos
add
dec
add
cli
jmp
mov
add
outsl
dec
cltd
add
xchg
rolb
dec
mov
outsl
adc
push
lahf
scas
lods
add
dec
push
mov
sbb
push
pop
pop
push
fs
sub
fldcw
xchg
and
es
fwait
or
out
pop
mov
or
mov
add
cmpl
jo
loopne
stos
sub
or
pop
cmpl
xchg
mov
daa
dec
cmpsb
fmulp
mov
adc
cli
ret
sti
cmc
sti
xchg
sub
outsb
push
push
cltd
jne
push
mov
out
mov
jnp
jno
fnstcw
aam
adc
xor
inc
fcompl
or
or
aas
cmp
lret
mov
push
jl
cmp
xchg
sbb
sbb
xor
adc
push
insb
sbb
negb
roll
cmpsb
shll
push
or
and
fsubs
ret
cmpsl
in
imul
pop
or
pop
jle
adc
mov
jle
mov
lods
rcrb
das
das
addr16
add
mov
inc
pop
lods
test
inc
fsubr
ror
inc
or
sub
push
mov
sub
inc
cmpsb
cmp
out
mov
or
mov
mov
and
lods
out
rclb
jp
pop
cwtl
imul
adc
xchg
out
push
aas
cltd
lods
ljmp
xor
add
xor
ret
mov
push
ja
rclb
inc
mov
cmp
loopne
push
add
scas
mov
inc
push
jne
loopne
dec
and
inc
push
sbb
stos
pop
std
add
adc
push
idivb
mov
in
in
mov
inc
mov
stos
sub
mov
inc
adc
sbb
rcl
cmp
in
xor
ficomps
jg
lret
mov
jg
mov
jnp
jmp
ret
test
fsubr
sti
ret
jb
push
stos
jb
mull
clc
xchg
sbb
ja
ret
adc
sbb
mov
pop
mov
repz
dec
push
dec
fists
mov
sti
rolb
lods
and
jp
sbb
sub
sub
cmpsl
or
pushf
fimull
mov
pop
push
je
shrb
pop
repz
or
pop
addb
mov
loop
insl
sub
sub
xchg
sbb
cmpsl
imul
in
add
ret
dec
inc
jle
lods
xlat
lods
mov
int
ret
add
xor
dec
xchg
js
jge
popf
jne
cld
mov
jae
mov
repz
mov
cmpsb
and
push
test
adc
mov
inc
mov
or
jge
mov
xor
fsub
mov
fisubrs
cmp
arpl
xor
xlat
dec
dec
dec
pushf
jecxz
std
dec
loop
js
ds
sub
mov
mov
push
addr16
scas
das
sahf
jge
cmc
inc
shr
jmp
push
add
aad
movsb
loop
stos
mov
fxch
jmp
arpl
outsb
orl
out
mov
out
xor
adc
popa
ja
dec
repnz
aas
cwtl
hlt
rol
inc
fldenv
sti
out
fs
push
inc
stos
jae
mov
push
aam
jmp
pop
mov
scas
hlt
and
cmp
enter
mov
dec
loopne
add
push
xor
mov
xor
jo
or
jge
std
das
pusha
jmp
mov
jae
lds
inc
fistpl
push
test
cmp
mov
in
cmpb
mov
sub
push
insb
cwtl
mov
daa
in
adc
and
jae
jmp
adc
mov
lret
test
push
hlt
inc
or
mov
xor
stos
stos
cli
xor
push
in
pop
js
adc
xchg
test
inc
pop
jnp
sub
pop
fmull
xchg
nop
loope
add
jae
xor
cmp
push
mov
adc
xor
pusha
pop
inc
sub
pop
and
mov
dec
jge
imul
pusha
aas
jp
xor
lret
adc
adc
push
inc
sub
cmp
iret
js
add
fdivrs
cli
mov
lea
in
dec
mov
cli
mov
jne
cld
mov
imul
add
orb
rorb
cli
xchg
pop
and
nop
bound
mov
dec
leave
call
pop
imul
sbb
into
repz
inc
mov
sub
jne
adc
xchg
jno
push
jg
xor
clc
adc
ljmp
pop
std
mov
out
jns
cmp
xor
ja
lods
rcll
pop
xor
xchg
outsl
push
mov
mov
push
shll
and
mov
cli
lret
xor
xchg
imul
fsubrl
pop
outsb
pop
les
je
or
test
fisubrs
xor
sub
adc
leave
imul
loopne
and
cmp
xchg
jge
lds
xchg
cltd
rolb
popf
cltd
imulb
daa
adc
and
xorl
enter
dec
sub
fwait
cmp
gs
fdivp
out
dec
shl
mov
or
sub
shlb
lock
sub
cmc
mov
jo
or
sbb
lret
les
mov
out
dec
inc
insb
fsubs
mov
or
pop
enter
mov
push
ja
jo
sbb
mov
cmpsl
dec
mov
xchg
mov
jge
sbb
aam
ret
mov
jle
xchg
fsub
lods
xorl
ja
jnp
cmp
in
push
jae
or
test
add
pop
in
jmp
daa
adc
xchg
popf
ja
int3
sarb
fsts
xchg
das
js
sub
xor
push
cmpl
cmpsb
fwait
int3
pop
xchg
int3
mov
push
adc
mov
js
mov
scas
loop,pn
xor
lock
je
ss
jbe
cmpsb
dec
push
out
mov
pop
mov
push
push
cmpsl
mov
sub
mov
xlat
shrl
dec
dec
cmp
ret
push
iret
loope
push
dec
adc
or
mov
aaa
cld
cmp
outsl
and
cld
in
xor
loope
mov
sub
les
jge
dec
pop
sbb
adc
out
popf
inc
xchg
into
jmp
outsl
mov
std
mov
dec
pop
rclb
xchg
adc
mov
inc
and
and
les
push
subb
cltd
and
gs
push
aad
ja
pop
and
stos
jnp
rcr
adc
fstpt
pop
mov
jne
add
jp
into
xchg
add
push
or
and
xchg
cmp
dec
jbe
push
int3
packssdw
or
lds
and
sub
mov
sti
fdivrs
cmp
or
neg
or
lcall
je
int3
inc
lahf
mov
aaa
mov
es
mov
push
shl
xchg
add
xor
add
push
dec
pop
stc
cmp
not
xchg
pop
push
hlt
jnp
sbb
push
ljmp
outsb
cmp
mov
pusha
inc
add
and
mov
sahf
cli
outsb
arpl
sbb
add
aas
push
inc
mov
sub
adc
cmp
sbb
adc
jge
mov
in
je
imul
cmpsl
dec
cltd
mov
xor
mov
mov
adc
dec
cltd
ret
ss
pop
add
cmp
loopne
cli
js
mov
xor
dec
mov
mov
popa
jecxz
inc
jg
lock
push
sub
xorb
jnp
and
sbb
scas
cmp
sbb
clc
adc
sub
cmpsb
movsb
jns
inc
dec
test
push
iret
jl
ja
fwait
enter
adc
ret
mov
or
stc
outsb
xchg
aam
cmpsl
ja
mov
mov
cmp
aas
sbb
xor
cmc
or
popf
jns
inc
mov
rep
xchg
cld
out
mov
inc
mov
popf
jl
jae
lock
jo
xchg
inc
jne
sbb
push
rol
pop
outsl
mov
and
cmp
sub
or
xor
sub
push
fsubr
iret
enter
or
je
cmp
add
push
mov
sub
xchg
jl
bound
popa
adc
out
pop
mov
dec
cmpsb
cli
sbb
xlat
fsubr
sub
xchg
lds
insb
push
mov
shr
jl
sub
ds
scas
adc
mov
in
sarl
inc
sub
jb
inc
xor
sub
mov
xlat
or
cmp
xor
cmp
aam
bound
lds
bound
imul
fnstcw
fildl
jge
fistl
mov
ds
push
mov
push
shl
sbb
cs
jo
xor
shrb
cmp
cld
or
push
out
arpl
outsl
inc
cmp
icebp
mov
add
xchg
rol
lret
inc
dec
imul
jae
push
fists
shlb
into
push
sub
sti
stos
add
popa
mov
pop
jmp
int
jbe
bound
repnz
inc
das
xchg
pop
sbb
xchg
xchg
out
hlt
cmc
mov
sbb
scas
cmovge
xchg
test
mov
mov
insb
jnp
dec
mov
mov
push
scas
inc
xchg
mulps
jo
pop
jge
out
jne
pop
jno
insb
fsubr
in
mov
add
mov
stc
aam
xor
pop
repz
dec
adc
lods
and
sub
sbb
rcrl
scas
jne
fiaddl
imul
iret
rclb
fwait
inc
shlb
stos
sbb
mov
add
or
mov
xchg
push
out
loope
call
arpl
mov
pop
sbb
std
mov
or
or
sbb
mov
inc
shl
hlt
loop
mov
leave
or
ror
pushf
add
xchg
xlat
loopne
insl
popa
inc
loop
jmp
out
mov
push
sub
std
jae
in
gs
jo
push
cmp
xchg
lea
sbb
js
push
data16
aas
or
cwtl
hlt
adc
pop
ja
popa
pop
add
jb
lahf
jmp
cmp
pop
mov
lahf
jne
jmp
dec
popa
push
add
into
xor
movsl
push
jecxz
sahf
mov
lret
mov
notl
push
xchg
push
mov
test
leave
movsl
sbb
dec
add
in
xchg
sub
sti
mov
mov
loopne
daa
dec
scas
mov
js
jb
leave
push
enter
mov
adc
dec
dec
mov
mov
fs
mov
popa
adc
imul
loopne
cmp
out
inc
mov
je
pop
mov
push
ds
sbb
call
pop
sbb
or
pop
sub
rclb
popa
jb
dec
xor
sbb
test
cmpsl
xchg
pop
loopne
mov
test
jno
fiaddl
ret
loope
cmp
nop
insb
mov
push
sbb
nop
inc
mov
mov
in
mov
xchg
cmp
fisubrs
fld
lock
fwait
and
adc
push
aad
lock
sbbb
popf
inc
add
fists
testb
imull
mov
or
jo
jecxz
jnp
dec
movsb
add
and
sub
jmp
sbb
sbb
jg
cmp
jne
cmp
stos
lds
enter
fwait
enter
lahf
arpl
aas
dec
mov
jb
adc
bound
jge
pop
in
jg
jo
push
cmp
sbb
lock
fsubl
mov
mov
push
cmpsb
or
lcall
jl
test
into
leave
addr16
inc
push
bound
in
into
clc
insb
ja
cwtl
cmp
fsubp
or
mov
xchg
pop
push
push
push
sbb
sti
test
fdivl
xchg
movsl
out
jnp
sbb
out
cmpsb
mov
pop
cmpsl
in
xchg
push
mov
mov
inc
in
pop
inc
outsb
push
scas
gs
pusha
aas
in
mov
push
adc
punpckhwd
lcall
pop
mov
mov
cmpsl
popf
mov
out
push
js
popa
push
test
push
dec
rcl
out
jb
sbb
push
mov
sbb
shlb
js
inc
sbb
enter
adc
pop
lret
aad
into
dec
mov
xchg
je
les
pusha
in
cmc
sub
pop
aaa
inc
ljmp
ljmp
dec
xchg
out
outsl
push
ss
push
lods
cmp
jno
push
ds
add
cmpsl
jmp
dec
or
xor
je
fimull
add
jle
push
data16
mov
sub
in
lea
out
icebp
dec
enter
pop
clc
loopne
in
popl
cld
movsl
pop
cli
and
add
mov
cs
adc
and
and
inc
lods
jle
mov
repz
pop
int3
enter
mov
cltd
xchg
cli
fimuls
cmp
scas
inc
xor
mov
repz
push
inc
xlat
sbb
clc
in
fnstenv
loope
les
inc
cmp
decl
mov
xor
stos
sub
xor
clc
insb
cmp
in
mov
fnsave
movl
jne
psadbw
fs
mov
adc
scas
cltd
xchg
adc
jb
mov
ja
add
sbb
lods
fstl
adc
loop
push
or
lods
xor
aas
add
out
mov
mov
in
cmc
and
pop
lds
or
fwait
scas
xor
or
xlat
insb
sbb
lcall
sub
jecxz
repnz
mov
mov
mov
js
fmull
mov
add
jns
aaa
cmpps
ss
dec
or
sub
hlt
mov
add
cs
pop
mov
push
and
aas
lahf
dec
gs
iret
xchg
adc
in
hlt
mov
mov
lret
fwait
aad
ret
xchg
outsb
xchg
sub
jb
jp
lahf
cmp
cmp
xchg
ret
inc
inc
cmpsb
jnp
ja
xor
in
xlat
mov
xor
mov
idivb
dec
mov
push
xchg
xchg
and
flds
push
jp
jb
sub
test
ss
lea
adc
jae
ss
pop
out
adc
bound
mov
sub
mov
inc
cmc
dec
loope
jne
xor
jb
shl
cld
imul
nop
pop
xor
dec
jo
mov
push
sti
cwtl
adc
gs
jge
and
adc
dec
test
xor
adc
mov
stc
scas
insb
mov
repnz
xchg
mov
xor
xchg
jl
imul
add
cmp
ljmp
adc
negb
orl
mov
in
insl
es
outsb
cli
pop
aad
jmp
xor
xchg
pop
sbb
mov
inc
pusha
fldcw
add
cmpsb
jae
outsl
in
adc
pop
popf
icebp
imul
cli
cmp
add
clc
movsb
xchg
and
fidivrs
or
in
jo
int3
stos
adc
stos
dec
jae
movsb
test
imul
hlt
sbb
xchg
sbb
inc
mov
lods
fwait
mov
jp
sbb
pop
call
or
dec
movsl
push
lret
push
jmp
daa
outsl
jo
inc
pop
popa
sub
rorl
mov
sub
mov
cmpsb
rcr
xor
dec
shlb
mov
mov
icebp
aam
push
mov
sbb
lcall
push
add
stc
cmc
mov
rcr
jge
add
fisttpll
in
push
xor
pop
out
mov
fildll
fisubl
or
imull
rol
lock
dec
push
push
imul
cmp
mov
imul
adc
pushf
aam
inc
cli
frstor
jb
arpl
lock
pop
in
ss
cld
xor
mov
inc
ds
int3
sbb
and
pop
mov
cmp
iret
clc
adc
insb
xor
cs
sub
mov
cmp
mov
xchg
adc
adc
das
popa
stos
fistpll
dec
lea
dec
mov
gs
pop
mov
jp
cli
arpl
frstor
cld
lea
dec
daa
dec
hlt
mov
pop
pop
pop
fistpl
aas
or
add
gs
sbbl
cmpsb
push
cltd
xchg
pop
js,pn
push
out
pop
xchg
outsl
faddl
pop
xchg
gs
sub
adcb
inc
xchg
aad
repz
cmp
mov
mov
inc
and
shll
repz
cmp
mov
je
xlat
push
stc
mov
mov
or
shl
movsb
mov
filds
inc
mov
sbb
daa
xlat
stos
cli
test
icebp
int3
push
movsb
fwait
xlat
inc
mov
xchg
adc
push
lods
sbb
push
das
or
rcll
loopne
pop
dec
mov
mov
inc
repnz
pop
xlat
test
mov
mov
jnp
shlb
cmpb
bound
lret
adc
cmp
addr16
dec
xchg
mov
xchg
pop
sub
dec
cs
xchg
rcrb
dec
or
int3
pop
jae
mov
jl
push
jns
xor
or
hlt
subl
es
int3
aaa
adc
movsb
dec
leave
mov
add
test
inc
outsl
jl
pop
jnp
push
pop
out
mov
outsb
mov
mov
inc
mov
mov
mov
cmpsb
sub
cltd
pushf
xchg
push
ss
jge
cmp
xchg
addr16
fmuls
imul
jns
out
ss
sti
and
inc
or
movsb
in
out
lret
shl
sub
cmp
es
dec
adc
push
cmp
les
mov
push
icebp
push
in
add
mov
in
andw
mov
sarb
mov
pop
aas
mov
lods
lods
imul
stos
mov
je
cmp
into
imul
imul
test
push
lea
sbb
dec
pusha
or
popf
loop
lock
xchg
inc
dec
fisubs
inc
lods
add
pop
inc
loopne
or
or
sbb
xlat
enter
roll
fistpl
lret
sti
hlt
popf
and
pop
std
jmp
mov
rol
dec
dec
fs
std
push
js
pop
movb
or
pop
ljmp
and
sbb
mov
and
insl
adc
push
outsl
dec
in
inc
inc
xchg
and
jle
mov
cmp
icebp
sbb
loopne
out
imul
jae
test
movsb
add
mov
stos
repnz
aas
and
or
mov
mov
add
inc
lahf
pop
out
cmp
lret
inc
mov
rorl
push
and
pop
jge
movsl
ja
jne
shlb
cli
sbb
ljmp
into
mov
es
mov
xlat
faddp
daa
mov
repnz
dec
out
idivl
repz
loope
adc
gs
popa
cli
jno
push
add
cmp
aas
pop
sbb
push
stos
inc
and
adc
in
mov
cmp
sbb
ljmp
iret
push
or
pusha
shlb
gs
orb
add
iret
jmp
push
adc
daa
mov
in
cmovs
je
mov
enter
int
ret
test
mov
inc
loop
jo
mov
xor
sbb
iret
sbb
mov
sbb
pop
jmp
mov
mov
arpl
aam
mov
push
push
imul
jae
sbb
jno
pusha
repnz
cmpsb
sahf
sarl
mov
and
mov
cs
lock
add
and
repnz
dec
push
cltd
push
cwtl
fwait
mov
cld
add
shlb
xchg
adc
mov
ret
add
mov
push
mov
push
jg
push
test
test
popa
or
push
adc
inc
pushf
mov
mov
aad
mov
inc
cmpsl
xchg
in
xchg
inc
scas
stos
mov
sbb
jle
push
aad
fwait
push
outsl
mov
mov
mov
dec
icebp
dec
jge
mov
adc
imul
lret
leave
jo
fsubrl
pushf
and
bound
xchg
xor
pop
jge
jge
jno
sarl
sub
pop
add
pop
rorb
mov
jg
out
or
sub
adc
sub
adc
cld
pop
pop
inc
clc
outsb
mov
nop
adc
sub
nop
mov
hlt
lds
lret
out
xchg
daa
daa
nop
cmp
inc
cmc
addr16
xor
mul
mov
push
sbb
mov
sahf
sbb
sub
out
sbb
rolb
fsubs
pop
mov
inc
out
loop
mov
pop
mov
or
inc
fsin
pop
test
mov
dec
test
int
lahf
add
cltd
sbb
mov
jns
jne
pop
fstpl
pop
jmp
std
adc
repnz
mov
sub
sbb
cs
push
add
or
push
sub
imul
and
decl
cs
inc
les
adc
mov
das
inc
dec
mov
fnstcw
mov
mov
jle
loopne
jl
mov
dec
xlat
sub
and
inc
mov
mov
xchg
das
neg
mov
popf
inc
xchg
movsl
dec
cmc
je
add
jno
mov
sti
cltd
inc
sub
rcr
mov
cmpsl
sbb
stos
jmp
adc
data16
sub
cmp
mov
jg
inc
xchg
ja
pop
cmp
ret
repz
cmp
pushl
xchg
jns
mov
cltd
jbe
movsb
add
imul
pushf
sbb
gs
cmp
pop
fldenv
fcoms
icebp
es
je
mov
int3
and
mov
lock
cmpsl
push
mov
ret
sahf
cmp
hlt
shl
mov
add
bound
push
xlat
and
sbb
js
out
test
mov
dec
fistps
scas
push
subl
push
std
cli
mov
mov
ja
stc
in
gs
out
sbb
fnstcw
loopne
xor
sub
test
inc
pusha
scas
jnp
and
pop
mov
cmp
test
lret
mov
fldt
inc
push
lock
inc
shl
sbb
iret
add
insb
xor
test
insb
imul
in
enter
gs
jmp
cmpsb
lcall
insl
ja
cmc
stc
divl
lret
sub
loop
rcrl
test
je
pushf
roll
mov
and
ja
out
addr16
cmp
jecxz
cmpsl
shr
xor
push
fistps
mov
push
xor
loopne
imul
and
dec
rol
dec
dec
stos
and
test
push
lcall
jl
lcall
aad
push
stos
push
leave
inc
sbb
and
test
jns
loopne
enter
and
rolb
fisubs
out
mulps
sub
cmpsl
mov
dec
aas
movsb
jp
cmc
popa
in
lock
pop
std
lahf
out
mov
mov
addl
push
push
je
les
out
jl
xchg
mov
mov
push
and
pop
inc
mov
rclb
pop
mov
sub
fs
mov
add
cmp
shlb
jecxz
aad
mov
fs
aaa
add
mov
xchg
shrl
or
jbe
clc
adcl
dec
and
test
dec
sahf
or
pop
cmpsl
jno
mov
xchg
cmp
dec
movsb
cmp
push
xor
or
scas
dec
in
add
or
mov
imul
test
inc
or
dec
data16
mov
fimuls
push
xor
sub
test
cmp
mov
jno
int
aam
mov
pop
lahf
sbb
pusha
jo
dec
adc
adc
nop
sub
fnstenv
push
sahf
in
ror
rclb
pusha
mov
mov
loope
int3
mov
and
jb
mov
xchg
jecxz
dec
mov
mull
push
imul
sbb
xchg
gs
mov
movsl
adcl
cmc
pop
movsb
xchg
xchg
in
loopne
cmpsl
xchg
adc
jns
sub
pop
pop
inc
push
push
cmpsb
out
push
push
or
push
cmp
inc
xor
jno
daa
push
iret
pop
push
mov
call
adc
sub
fs
mov
mov
jge
popf
xor
hlt
mov
adcl
sub
dec
mov
xor
adc
mov
cmp
fsubrl
jnp
ja
int3
dec
cmp
popa
lahf
loopne
or
loop
jns
outsl
lods
aaa
test
cmp
in
pop
rcr
push
sbb
and
sbb
push
jmp
jns
ret
loopne
lods
lahf
lret
leave
into
out
xchg
fldl
orl
rolb
mov
js
and
clc
adc
or
adc
pop
jg
pop
jno
mov
ret
cmp
pop
pop
push
adc
or
dec
mov
dec
pop
adc
push
bound
adc
outsl
ret
out
mov
jmp
pop
lea
incl
stos
xor
stos
mov
mov
pop
adc
in
mov
int3
mov
ljmp
movsl
pop
mov
pop
insb
pop
fistpll
mov
inc
jns
xor
adc
fisubl
stos
lcall
pushf
dec
jo
fcmovnbe
push
push
jns
jg
insl
mov
loop
outsb
repnz
pop
inc
pop
dec
lret
cmpb
xchg
bound
mov
add
jge
mov
js
mov
mov
mov
int3
dec
or
and
adc
imul
pusha
add
adc
std
imul
or
jae
insb
xor
push
inc
jns
in
xchg
and
adc
mov
push
adc
test
and
clc
cwtl
int3
xor
add
and
stc
or
or
je
int3
jecxz
mov
addb
inc
sub
inc
or
jb
outsl
mov
cs
into
fdivp
push
xchg
xchg
outsl
xchg
inc
push
out
adc
cmp
cmc
xchg
pop
sub
shrl
fidivl
outsl
pop
in
mov
xchg
arpl
mov
pop
ss
aaa
pusha
push
aas
pop
ret
xor
ret
movsl
pop
repnz
push
jecxz
cmp
mov
addr16
push
sbb
cltd
test
sbb
mov
fidivrs
xchg
lret
sbb
pop
adc
mov
jecxz
cli
repz
mov
adc
out
addl
inc
out
cltd
ja
mov
pop
inc
sub
inc
and
arpl
sahf
faddl
push
loop
scas
scas
or
in
xor
aaa
outsb
mov
sub
fisubrs
scas
and
pop
in
push
pop
adc
ds
mov
sbb
mov
ss
jo
push
pop
outsb
dec
and
int
cmc
mov
dec
xchg
stos
scas
dec
fsubl
cltd
sti
std
xchg
xchg
std
xor
loopne
fsubr
in
dec
mov
cltd
out
leave
xchg
adc
cs
xlat
mov
in
mov
inc
es
mov
xor
scas
frstor
bsf
sub
lcall
dec
push
add
addr16
push
es
push
mov
aam
jnp
cwtl
fstpt
addr16
pop
loopne
jno
jne
inc
out
in
ret
fdivrl
rcr
sbb
jmp
in
stc
or
xor
fwait
out
push
sub
nop
lret
test
sub
in
fsubs
nop
popf
call
mov
or
and
mov
ret
test
or
and
jmp
xor
in
std
iret
jns
dec
xor
jb
icebp
push
iret
divl
int
enter
imul
mov
mov
and
lock
fadds
add
mov
xchg
mov
inc
push
push
lahf
sbb
std
leave
inc
add
mov
push
sahf
not
test
xchg
pushf
imul
sub
aaa
rcr
ret
add
dec
fwait
dec
cmp
adc
lods
popf
mov
lcall
fstp
or
sbb
sbb
outsb
test
push
imul
lods
pop
add
sbb
add
jmp
sub
or
cmpb
mov
shl
ret
xor
and
arpl
xor
cmp
sub
push
and
lahf
into
dec
xor
out
xor
stc
xor
mov
repz
mov
dec
xchg
xor
scas
adc
jg
daa
out
stos
sbb
sbb
jle
imul
lret
cmc
cmp
enter
orb
inc
xchg
pop
xor
add
stos
add
adc
loop
adc
hlt
sbb
push
adc
mov
push
adc
xlat
loop
sti
sbb
xchg
gs
andl
outsl
xchg
sub
cwtl
add
enter
shll
and
jo
dec
out
adc
mov
nop
push
enter
xor
movsb
fcompl
addb
movsb
lods
outsl
jmp
inc
mov
outsb
xchg
test
imul
data16
incb
mov
mov
mov
and
mov
xlat
xchg
jle
stos
push
in
pusha
inc
mov
das
push
mov
xor
les
pop
push
pushfw
push
or
clc
repnz
pop
add
push
daa
and
js
daa
and
mov
outsb
test
push
fcoms
lret
jno
sub
aaa
cmp
inc
pushl
pusha
pusha
push
fiaddl
jle
inc
int
loop
sub
dec
in
insl
mov
movsl
stc
iret
mov
xchg
enter
jmp
lea
sub
adc
push
jnp
push
ret
gs
call
decb
outsb
jl
jmp
xor
push
les
sbb
pop
imul
jo
mov
sub
mov
mov
sbb
mov
mov
dec
gs
cmp
mov
lea
fmul
int3
mov
xchg
in
mov
movsl
das
loop
outsb
les
mov
imul
push
push
jne
lods
in
xor
mov
imul
inc
mov
pop
test
and
out
popf
fsubrs
popa
pop
enter
adc
xchg
sbb
jmp
ja
idiv
dec
mov
mov
out
imul
dec
push
fsub
sbb
dec
cmp
in
add
and
ret
lods
adc
orb
fs
loope
push
aam
pop
pop
and
xchg
dec
mov
mov
jnp
mov
jg
xchg
cmp
stc
mov
mov
nop
out
aad
mov
mov
fnstcw
fmuls
call
rclb
lret
sarl
and
call
cmp
cli
push
cmp
enter
xor
xchg
pop
adc
rcrb
ror
add
stos
pop
ret
push
push
pop
and
imul
and
insb
mov
cmp
aad
mov
jge
jno
push
pop
movsl
test
fstl
and
fld
push
pop
ret
in
sbb
ret
mov
pop
scas
fwait
and
repz
cwtl
sbb
mov
insl
xchg
push
or
xor
lret
xchg
pop
hlt
pop
mov
iret
pushf
mov
movsl
test
mov
out
orb
call
dec
loopne
or
int
adc
aas
mov
inc
enter
lcall
sub
loop
movsl
cmp
and
roll
fldpi
lcall
pusha
inc
mov
addr16
mov
fnsave
pop
inc
cmp
dec
scas
xchg
mov
sub
or
mov
imul
cmp
sbb
mov
scas
fidivl
js
and
outsb
iret
scas
lods
mov
sub
aam
loope
cmc
nop
xorb
pop
loope
cld
sbb
adc
mov
inc
mov
cld
pop
roll
mov
push
jno
xor
pop
fstpt
jecxz
mov
iret
adc
enter
daa
push
sub
xor
jns
push
lcall
out
ficomps
xor
cmp
jmp
push
mov
mov
cmc
fisttps
xchg
sbb
fisttpll
mov
lods
xor
cmp
pushf
ja
mov
clc
int
inc
pop
jge
clc
daa
les
rclb
sar
dec
mov
sub
fs
mov
or
and
arpl
xchg
cltd
stos
xor
lock
jbe
je
xchg
outsl
or
fisttps
mov
pop
jns
fs
mov
shrb
dec
add
lahf
mov
jecxz
out
cwtl
es
inc
xor
popf
xchg
cmp
mov
sub
js
sti
ss
jmp
mov
cmc
sti
and
insl
pop
sbb
popl
jl
and
lds
ja
mov
fstps
xor
imul
ficoml
in
pop
lahf
movsl
cmp
pop
mov
popa
jecxz
div
jmp
inc
adc
in
out
cmp
mov
mov
or
pusha
icebp
push
in
repnz
cli
push
pusha
lcall
clc
sub
bound
lret
out
jae
ficompl
push
enter
xchg
xchg
loopne
data16
ret
pop
push
xchg
xchg
std
mov
mov
xchg
sbb
arpl
ror
pop
movsl
pop
iret
push
cmp
loop
fyl2x
jg
jae
in
dec
and
cmp
jns
popf
sub
iret
push
loopne
xlat
outsb
mov
mov
push
push
cwtl
int
sub
imul
fucomp
rcrb
lods
loope
mov
fdecstp
adc
or
in
xchg
jns
enter
arpl
cmp
shll
cwtl
aam
sbb
inc
cmc
dec
pop
jbe
and
sbb
test
or
sbb
fnstcw
sahf
cwtl
inc
mov
pusha
add
andl
imulb
loop
inc
scas
scas
cmp
dec
scas
cmpsb
punpcklwd
mov
push
mov
sbb
sbb
add
mov
int
xchg
pop
lret
js
ficoml
leave
imul
mov
sub
les
add
mov
pop
out
push
jno
sarl
mov
xchg
repnz
repnz
or
fldl
xor
mov
and
sbb
clc
inc
pop
push
cld
mov
or
push
lahf
jns
lock
icebp
inc
dec
cmc
xlat
cmp
jmp
push
xchg
or
mov
mov
mov
and
pop
enter
push
and
test
mov
and
popf
mov
jle
adc
rol
stc
mov
jno,pn
out
sub
inc
test
loope
outsl
data16
sub
stos
dec
sbb
arpl
cmp
dec
xor
aam
data16
fwait
stos
outsl
jns
pop
std
push
push
lcall
cmp
adc
mov
mov
jno
mov
jg
jg
daa
or
das
jge
push
adc
xchg
mov
add
leave
push
mov
ret
flds
arpl
mov
lods
push
ret
lahf
outsb
and
push
insb
int
popf
roll
sbb
cmpsb
jge
push
cwtl
pop
mov
mov
mov
adc
mov
cld
fcoml
dec
fsubrl
or
sti
movsb
dec
jae
in
mov
mov
call
sbb
js
dec
jecxz
nop
xchg
push
pushf
test
aaa
aad
push
js
daa
sar
sti
stos
cmp
out
int
cmpsb
push
pop
inc
and
inc
sbb
rcrl
test
jp
imul
cs
inc
andl
or
sub
push
xor
inc
cmp
sbb
xor
dec
lcall
dec
mov
fwait
rolb
sbb
or
mov
mov
insb
and
leave
sbb
outsl
sub
std
dec
push
xchg
pop
inc
inc
add
ffree
dec
push
pushf
pop
sbb
idiv
mov
lcall
fadds
cmpb
sub
xor
fistps
test
stos
je
jno
and
lds
sbb
imul
or
mov
jno
cmp
xor
pop
ficoms
xchg
fistps
adc
mov
sti
hlt
xlat
cmp
dec
jl
mov
xchg
push
mov
lock
sbb
add
xor
cmpsl
leave
movsb
xchg
rclb
aad
repz
or
dec
fwait
xlat
fstl
jl,pt
sbb
sbb
inc
and
cmc
enter
arpl
scas
bound
push
les
rcll
shrb
lret
enter
jns
faddp
repz
in
test
fstpt
sbb
xor
sub
cmpsb
pop
out
add
lret
lods
mov
mov
insb
imul
les
data16
movd
cmp
or
out
sbb
xchg
lret
icebp
xor
pop
jne
movsl
push
pop
test
adcb
inc
or
andb
cmp
pop
int3
mov
cwtl
mov
add
cmp
jnp
xchg
mov
push
cmpb
int3
mov
xor
sahf
push
repz
cmpsb
loop
lods
sbb
jb
in
sub
jp
mov
sub
push
sti
lock
sub
stc
xor
pop
bound
mov
mov
jb
hlt
cwtl
std
push
cmpsb
lods
push
push
repz
test
sub
dec
lods
lcall
sbb
xchg
das
cld
sarb
inc
ret
dec
inc
cmp
xchg
ds
shr
inc
popf
dec
adc
xor
inc
icebp
mov
scas
mov
cs
inc
mov
mov
pop
cmpsb
sbb
pop
insb
xor
adc
mov
cmp
inc
sub
mov
adc
add
mov
add
pop
mov
rclb
popf
sub
pop
stos
and
hlt
in
fs
xorb
or
fistps
sbb
sub
ja
in
sub
subl
cmp
in
lret
mov
mov
pop
adc
fmuls
mov
ja
sahf
fadd
pop
enter
mov
jbe
popa
xor
push
cmp
inc
jge
xor
inc
push
mov
fdivl
and
inc
push
fsubp
mov
movsl
inc
lock
push
dec
sbb
imul
inc
or
fisubrs
jg
notl
loope
decl
pop
aaa
test
out
test
xchg
sub
push
lods
inc
ds
imul
push
xchg
sub
dec
lcall
mov
mov
leave
mov
inc
out
loope
sbb
push
adc
inc
iret
jp
push
and
push
rclb
lea
lock
and
out
dec
jge
xchg
mov
sub
test
and
lahf
std
ljmp
daa
xor
ret
lcall
adc
imul
pop
and
pop
jmp
mov
mov
sub
fdiv
and
mov
out
pop
sbb
xchg
andl
mov
and
aas
sub
stc
bound
mov
ret
les
rolb
loop
mov
shlb
and
cwtl
push
mov
inc
pop
cmpsb
add
lds
in
add
pop
mov
jmp
inc
jge
pop
cmpsb
pop
mov
out
or
add
lods
js
dec
sub
and
push
inc
or
xchg
in
sbb
mov
outsl
js
inc
push
inc
xchg
sbb
adc
insl
pop
imul
aas
jmp
push
inc
cmpsl
ds
mov
pop
das
in
fisttps
leave
outsb
add
jle
lret
or
aaa
jns
sbb
pop
jae
addr16
outsb
lods
or
lods
imul
pop
dec
xchg
bound
movsb
fiaddl
push
xchg
loop
xchg
mov
fs
mov
sahf
jbe
cli
xchg
cli
fisubl
aam
pop
dec
rol
mov
push
aad
int3
fistl
and
clc
loop
sbb
sahf
mov
mov
or
dec
lock
or
inc
inc
fists
fidivl
sarl
sub
cmpb
and
push
cmp
xor
sub
cltd
inc
seto
xchg
add
ja
pusha
adc
adc
icebp
out
mov
mov
int
test
add
repz
cmp
into
jle
shrl
mov
ja
aam
mov
addr16
lret
jmp
sbb
sub
or
stos
aad
or
cmpps
push
pusha
mov
hlt
cwtl
push
push
jle
mov
mov
scas
lds
inc
cli
mov
sar
adc
push
int3
dec
frstor
sub
stos
test
mov
push
ja
pop
sub
incl
out
in
pop
xor
in
mov
sub
push
ds
mov
jno
sbb
xorl
icebp
jno
or
lods
fsub
lcall
mov
jbe
mov
xor
mov
in
scas
ret
imul
test
mov
push
inc
push
orl
pop
dec
popf
mov
lret
cmpsb
xor
sarb
cmc
jno
xchg
adc
in
loope
lret
cs
add
jmp
je
inc
adc
mov
popf
adc
mov
push
test
sub
enter
xchg
lret
or
movsl
xchg
loop
nop
hlt
out
and
popf
outsl
cmp
or
push
mov
mov
out
pop
scas
or
fwait
or
test
push
out
sub
xor
leave
push
call
jg
add
or
fildl
sub
shrl
xorb
xorb
mov
inc
mov
or
lret
or
lock
push
lea
mov
pop
in
cs
pop
ds
and
jno
fcomps
mov
outsl
fsubl
arpl
pop
mov
jno
push
xchg
push
push
pop
mov
rorb
mov
cmpsb
pop
adc
je
idivb
cmp
in
popa
and
mov
pop
out
lret
js
fldt
mov
or
xchg
xor
lret
inc
nop
movsl
cmp
push
mov
xor
notl
insb
int3
mov
int
shll
and
mov
push
outsb
jle
das
pop
dec
push
add
imul
addr16
add
imul
pop
and
adc
pop
sbb
out
xchg
mov
rol
iret
cmp
jns
sub
loope
mov
lds
xchg
cmp
fsubrl
arpl
mov
cmp
adcl
pop
xchg
scas
jb
pop
push
movsl
sahf
ds
inc
loopne
fiadds
push
push
fsubs
jmp
cld
adc
fnstsw
push
pop
ret
mov
inc
test
adc
test
mov
xchg
pop
jno
shll
push
mov
adc
lock
lods
xor
push
aaa
rclb
push
fmuls
inc
imul
jecxz
lahf
pop
cmp
into
fs
adc
mov
cmpsl
out
aam
fsubrp
lods
cmpsb
popa
cmpsl
sub
ja
in
xchg
mov
in
loop
jp
cmpsb
pop
adc
inc
jle
jo
pusha
lock
scas
mov
and
push
repnz
insl
bound
jae
dec
aam
stos
add
sahf
jmp
jne
mov
or
lds
jno
push
outsb
inc
add
clc
inc
xchg
inc
xchg
inc
push
std
jo
adc
jge
in
xor
in
rcr
sub
jns
pusha
iret
inc
mov
aas
jae,pt
mov
scas
jb
add
mov
push
push
push
adc
pop
lock
adc
in
push
fildll
and
adc
icebp
inc
push
dec
rorb
and
jp
shll
add
push
dec
dec
inc
std
stc
inc
into
mov
pop
xchg
push
push
ss
test
arpl
into
fbstp
xchg
xchg
mov
scas
lcall
push
and
std
andl
xor
test
out
hlt
daa
je
mov
mov
sub
clc
jns
and
bound
sbb
push
fwait
jg
jecxz
aad
push
dec
cmp
in
fildl
or
in
cwtl
fiaddl
cmp
clc
enter
pop
cwtl
jno
int3
xchg
add
mov
out
and
jne
and
pop
js
adc
cwtl
mov
pop
jnp
cld
cltd
lods
dec
push
add
and
ret
sbb
push
xor
scas
lret
enter
xchg
mov
outsb
or
jb
and
jle
pop
jns
dec
test
mov
and
aad
cmc
mov
or
jb
mov
mov
mov
cmpsb
pusha
iret
fxch
dec
push
sbb
nop
div
xor
mov
lcall
stos
bound
outsb
cmp
inc
jl
cltd
mov
mov
movsb
and
jo
je
add
int
lret
pop
cmpsl
repz
rol
out
cltd
push
jb
or
test
enter
cld
push
fcoms
jbe
cmp
in
sub
sub
and
mov
xor
lcall
fbld
in
mov
lret
in
jo
sub
inc
sarl
sbb
mov
add
or
outsl
pop
dec
fisttpl
or
mov
test
repz
xlat
int
icebp
sub
cmp
cmp
jns
sub
sarb
cmp
inc
rorl
repz
xchg
jg
xchg
inc
mov
mov
mov
and
mov
je
pop
push
negb
in
lahf
in
pop
push
cmc
ret
popa
andl
test
int3
js
push
add
sub
mov
push
cmp
mov
jecxz
or
addr16
and
ds
cmc
sub
sti
shl
dec
pop
jns
jmp
mov
push
push
shr
in
sbb
out
inc
movb
pop
leave
sti
and
adc
cmp
mov
in
pop
sbb
xchg
push
push
and
fcmove
insb
jmp
jnp
ficoml
movsb
xor
stos
int
arpl
mov
test
cmp
inc
and
aaa
mov
cmpsl
or
mov
aas
cwtl
test
add
test
mov
mov
stc
bound
jecxz
adc
nop
call
push
lret
dec
ljmp
leave
jno
imull
dec
movsb
loope
ss
sub
jns
xchg
imul
pop
inc
data16
test
addr16
sbb
loop
dec
hlt
sub
dec
mov
ret
mov
xor
jle
push
lods
adc
mov
dec
xchg
popf
sbb
insb
repz
and
iret
fistps
insb
push
jl
xchg
movsl
jg
cltd
push
test
adc
cld
mov
dec
and
pop
mov
cmp
cli
notb
mov
fisttps
dec
jae
mov
test
fsubrl
jnp
xchg
cltd
rorb
add
pop
inc
call
mov
gs
sbb
into
mov
or
jae
jae
pop
sub
push
push
mov
pop
outsb
arpl
mov
fs
mov
cmp
fchs
dec
cld
pop
mov
jb
mov
mov
ret
ljmp
pop
push
push
je
lea
push
loope
add
je
fiadds
mov
aaa
xchg
das
push
test
and
stos
push
pusha
xor
or
imul
into
mov
rorb
insb
stc
push
mov
dec
and
xor
mov
mov
inc
add
and
push
and
jecxz
dec
sub
nop
pop
pop
or
xchg
push
pop
cmp
dec
insl
lret
testb
inc
add
clc
mov
adc
jnp
inc
lock
xchg
fisubs
int3
in
dec
inc
call
sbb
fldenv
xlat
or
mov
fmuls
sub
adc
inc
cvtps2pd
daa
lret
stc
addr16
aas
jge
cli
mov
cmp
mov
xlat
pop
das
or
or
sbb
std
xor
push
test
outsl
fimull
shlb
popa
repz
sbb
gs
pop
inc
cmp
repnz
pushf
scas
dec
or
gs
scas
adc
das
mov
stc
repnz
sub
sarb
xchg
pop
xor
lcall
scas
and
sbb
and
test
xchg
stc
push
jle
lahf
fadds
nop
push
push
add
shr
pop
lods
xor
jecxz
lock
shll
xor
ja
pop
inc
or
pusha
jns
mov
xor
mov
push
das
push
mov
cld
sbb
push
inc
cmpsb
sub
mov
cli
jecxz
popf
movl
mov
push
adc
pop
lods
sbb
scas
pusha
jbe
jno
cmp
jecxz
rorl
insl
add
cmpsl
jmp
mov
jnp
push
xor
test
mov
mov
mov
inc
pop
in
jns
pop
mov
ret
mov
loopne
push
cmp
sahf
xchg
dec
imul
lahf
sbb
shl
out
lods
pop
xlat
fnstsw
jbe
sub
and
je
stos
sahf
bound
pop
test
loopne
jno
fcoml
out
or
ror
pop
or
jb
mov
and
mov
cld
sub
sub
sbb
cmc
xchg
mov
push
clc
mov
mov
push
addl
out
out
movsl
fmuls
push
aas
cmpsb
cmp
cmp
push
shrl
dec
sbb
add
stos
into
pop
ss
mov
jmp
clc
pop
and
add
or
dec
loopne
jne
mov
jge,pn
mov
jo,pn
mov
cmpsl
testl
sbb
mov
daa
xchg
pop
jl
or
pusha
adc
and
jne
hlt
mov
xor
icebp
fcomp
fcomip
fwait
dec
pop
mov
sti
mov
int3
sbb
lahf
xor
xor
push
shrb
outsb
cwtl
imul
call
fisubrs
icebp
insl
test
sbb
int3
xchg
out
adc
movsl
jnp
mov
psllq
test
jne
jmp
mov
sbb
xor
inc
xor
add
lret
push
xor
sti
les
pop
inc
xor
movsl
mov
cmpsl
push
xchg
xor
xchg
sbb
cmc
out
add
ljmp
jmp
mov
stos
mov
sahf
aas
in
clc
cmp
arpl
ret
movb
cmpsb
lea
scas
mov
xchg
out
inc
dec
int
mov
bound
sub
sbb
sub
mov
cmp
loopne
inc
in
jmp
push
cmp
xor
mov
icebp
pop
sub
or
sarl
fsubrl
loope
pop
jbe
dec
iret
imul
xchg
fisttpll
es
and
arpl
pop
add
add
xchg
ljmp
xchg
mov
jo
ja
jns
cmovg
jno
roll
inc
mov
inc
adc
sbb
sbb
jb
xchg
call
jmp
push
loop
stc
nop
sbb
in
pop
into
inc
or
xchg
mov
fcmovbe
dec
and
inc
push
ret
outsb
and
insb
xchg
daa
xchg
js
xchg
pop
push
adc
sahf
addr16
inc
imull
clc
xchg
cmpsl
inc
scas
pop
and
push
pusha
into
or
rcll
sar
int3
push
or
and
jle
lods
push
out
call
pop
xor
or
test
leave
shl
sub
aaa
mov
add
jne
gs
call
sub
push
xchg
lea
sarb
fidivrs
ror
add
add
ret
mov
ljmp
add
push
cmpb
jnp
cltd
cltd
cmpsb
xlat
and
insl
outsb
push
addb
rolb
or
sub
mov
fisttpl
jne
inc
lahf
dec
mov
pop
lret
mov
test
sti
jmp
add
shlb
sub
lea
ficomps
dec
insb
mov
sbb
and
or
sbb
pushf
add
test
fisubrl
or
or
int3
xor
dec
push
fnstsw
cmp
cmpsb
dec
in
jle
sti
aaa
out
repz
cmp
jge
push
outsl
sahf
inc
insl
addr16
lock
out
mov
and
fwait
rcl
pop
xchg
lcall
rcrl
mov
push
fimull
movsl
jge
jle
push
std
push
xchg
adc
jecxz
es
xor
xor
fcompl
fidivl
push
dec
pop
cmp
aad
add
mov
sbb
cwtl
xchg
decl
push
add
and
test
jecxz
pminsw
test
mov
sbb
jnp
mov
xchg
loope
fadd
jmp
dec
ja
xchg
push
popf
mov
cld
push
icebp
call
xchg
jo
sti
lahf
jg
xchg
dec
es
cwtl
inc
jle
pop
shrl
jmp
jbe
add
lcall
lds
lret
cmp
cmp
xchg
xchg
lock
mov
mov
cwtl
and
add
rolb
lahf
xchg
int3
or
push
dec
xor
push
mov
add
leave
push
mov
stc
pop
daa
xor
push
out
jne
icebp
push
in
jb
jnp
call
sbb
loopne
jle
pop
add
push
lock
jp
xchg
sbb
and
aaa
jns
push
xchg
js
sub
xlat
inc
jmp
fwait
push
in
outsl
xchg
or
je
xor
xlat
and
sbb
idivb
loopne
bound
dec
repnz
add
cwtl
or
dec
cmp
mov
out
dec
outsb
jb
test
imulb
rol
cld
cmp
cmpsl
cmp
sbb
in
repnz
nop
cwtl
fcmovne
and
fs
scas
jge
cld
out
jns
jle
xchg
or
xchg
sti
jecxz
lock
sub
push
sbb
jae
cmpsl
mov
xor
outsb
cmp
jl
insb
dec
mov
roll
mov
out
sahf
adc
fwait
aam
pushl
sbbl
fwait
hlt
add
lcall
jnp
cmp
leave
adc
inc
daa
mov
jno
iret
cmpl
sub
dec
and
sbb
leave
popfw
ficoms
push
jnp
jno
pusha
sahf
jbe
daa
sbb
out
add
or
btr
mov
jae
stos
mov
fwait
adc
in
add
jo
or
movsb
mov
inc
or
cmp
sarl
aam
sub
sub
adc
lcall
xchg
cld
lret
clc
jb
call
inc
mov
adc
dec
ret
mov
xchg
divl
idivl
dec
pop
xor
jg
shl
cmpsb
movsl
pop
mov
sbb
inc
sbbl
and
push
pop
fs
push
js
repnz
inc
pop
fbld
mov
adc
pusha
push
pushf
sub
and
out
lods
in
inc
and
push
xor
int3
xchg
scas
ljmp
lock
push
ret
mov
or
inc
mov
xchg
das
mov
aas
scas
stc
jne
andb
decl
notb
mov
mov
stos
push
cld
mov
cmp
xor
adc
scas
hlt
mov
aaa
stc
out
add
xchg
bound
push
ja
jl
jb
inc
std
jns
call
dec
and
int3
loope
inc
aam
ret
xchg
mov
pop
sub
mov
mov
inc
mov
stos
and
aam
or
adc
jp
adc
cmp
sub
rolb
push
mov
lret
mov
adc
fldt
jg
xor
pop
lea
xchg
cmp
jne
imul
sbb
mov
aad
shrl
push
out
leave
adcl
mov
inc
sub
lahf
xchg
lods
mov
and
stos
rcll
lahf
aam
cli
xchg
hlt
mov
stc
in
adc
pop
add
push
and
cmp
pop
ss
jbe
and
cmpsl
lret
jmp
aad
outsb
xor
pop
jnp
xchg
arpl
xchg
mov
jae
inc
mov
aam
stos
loopne
jp
adc
aad
in
xchg
jecxz
jno
jle
aas
iret
mov
xchg
xor
cmpsb
adc
adc
insb
clc
fstpt
mov
fnsave
in
sbb
shll
imul
pop
add
aam
or
imul
xchg
xorl
cli
inc
aaa
xchg
cmc
and
pusha
jnp
in
ja
imull
cmp
sub
lcall
les
gs
aam
ret
xchg
insb
cmp
aam
sbb
or
enter
mov
mov
lcall
mov
sbb
cmp
gs
push
ret
inc
pop
hlt
int
cmc
pusha
scas
xor
iret
cli
mov
jb
xchg
pop
in
cmp
xchg
dec
mov
mov
pop
sub
outsl
sub
and
js
cld
dec
sbb
icebp
fdivl
xor
jmp
xlat
shl
xor
push
push
mov
add
xchg
hlt
js
loopne
mov
pop
fcomip
pop
jb
stos
daa
mov
inc
shrb
push
pop
icebp
pop
add
mov
ljmp
cmpsl
push
push
loopne
sub
mov
jp
jp
dec
lods
dec
jp
inc
aaa
cmp
sar
ljmp
dec
lods
dec
jle
std
sahf
mov
cmp
lret
sahf
mov
cmp
push
inc
outsl
out
or
test
sbb
dec
mov
test
out
lret
ret
mov
arpl
push
push
or
pop
adc
scas
int
pop
outsb
dec
sbb
pop
in
mov
lcall
sub
shl
dec
or
push
add
int3
pop
ss
aad
mov
popa
mov
add
rcrb
cmp
fwait
mov
scas
pop
inc
ret
scas
inc
adc
jno
mov
aad
cmpsl
xor
fistps
mov
hlt
fnstenv
bound
pop
push
std
or
pop
in
inc
aam
daa
mov
sbb
aas
sarl
lock
cmp
iret
aad
sti
cmc
clc
jmp
rcr
lea
sarb
mov
in
cli
shl
inc
xor
fsubrs
cltd
shrl
lea
imul
jmp
xor
push
in
rorl
push
adc
push
push
push
pop
lea
ds
fistps
or
out
call
cmp
scas
or
cmp
out
cwtl
mov
in
inc
icebp
xchg
je
lods
mov
jo
mov
pop
mov
cmp
jae
dec
aam
xchg
cld
adc
icebp
jb
jbe
movsl
push
add
js
xor
lcall
fs
fsubrs
lea
adcl
cmpl
jns
imul
or
scas
mov
jle
jb
sti
add
test
insb
jg
dec
mov
mov
cmpsl
or
adc
xchg
fiaddl
ret
pop
in
mov
int3
jge
adc
cld
dec
jmp
add
aad
or
or
mov
fucomip
stos
xchg
aad
hlt
jp
add
sbb
je
inc
shll
mov
xchg
or
jle
shll
inc
adc
and
scas
mov
inc
stos
mov
cmc
xor
pop
sub
scas
pop
out
sub
aam
or
cs
mov
mov
or
jecxz
pop
mov
jbe
pop
fadds
outsb
arpl
push
fbstp
jmp
jg
jp
addr16
in
pop
dec
inc
cwtl
push
sahf
cli
or
jg
enter
bound
stos
push
and
je
lret
push
outsl
dec
loopne
cmpsb
xor
push
adc
sti
push
pop
bound
xchg
addb
sahf
jecxz
lods
mov
je
push
shll
push
mov
ud2
gs
rol
cmc
jmp
lret
lods
sahf
cmp
adcl
fwait
inc
test
in
in
mov
hlt
enter
mov
jbe
xchg
and
xor
xor
add
mov
mov
add
das
lret
insb
add
dec
icebp
nop
jmp
jle
jp
out
out
or
mov
xchg
push
and
lds
xor
ret
das
rolb
sbb
sub
push
mov
fstl
adc
and
or
leave
aad
enter
xor
or
jne
into
fwait
int3
leave
std
mov
je
and
ficomps
xchg
jl
jae
jge
std
shlb
sbb
js
iret
testl
bound
push
push
pop
sub
mov
cmpsb
ret
pop
mov
inc
cmp
into
mov
shlb
push
das
mov
mov
jle
mov
cld
and
gs
test
sub
ret
loopne
pop
data16
dec
jne
push
lods
jge
loop
outsl
loop
lds
cwtl
push
mov
inc
aaa
or
scas
push
sub
out
shll
clc
ja
test
jns
or
sbb
mov
inc
ucomiss
xchg
movl
sbb
push
pop
adcl
dec
test
orb
push
ss
cmp
cmp
mov
cmp
movl
cltd
jno
mov
sahf
aad
xor
or
jle
test
sub
or
xchg
mov
or
fldcw
add
cmp
mov
jno
lea
lods
out
repnz
aaa
ret
and
pop
lret
fdivrp
je
adc
mov
adc
vcomisd
and
sbb
xchg
mov
hlt
mov
ja
imul
mov
xchg
lea
push
dec
jae
mov
fwait
lret
xor
out
roll
cltd
xor
pop
sub
mov
xchg
fs
fwait
ror
and
jl
jne
add
mov
fwait
test
pop
adc
sahf
mov
fisttpl
imul
dec
fsubrs
xor
jae
fs
int
aam
sbb
fcoml
jns
movsb
sbb
pusha
clc
mov
leave
jbe
dec
ret
int
mov
adc
mov
fisttpll
fisttpll
in
jno
sub
inc
cld
xchg
sub
xor
adc
jecxz
inc
sub
or
aad
inc
cmp
mov
daa
je
jbe
pop
push
or
dec
mov
adc
in
add
mov
jae
rcrb
and
loopne
lret
cmp
push
jns
or
shll
faddl
xor
adc
xor
cmp
popf
xor
es
push
push
inc
lcall
jns
inc
inc
or
clc
pop
fistps
mov
cmp
test
push
mov
and
leave
test
data16
icebp
stos
pop
xor
out
or
or
push
gs
or
jno
jl
adcb
jmp
fwait
dec
stc
daa
arpl
out
lods
lock
mov
and
out
cli
sub
cwtl
xlat
dec
shlb
roll
xor
imul
testl
ljmp
js
mov
lods
push
mov
cmp
add
cmpsb
lods
sbb
sbb
inc
daa
jae
pop
push
testl
push
stos
cmpsb
sbbb
pop
mov
mov
ficompl
mov
mov
fcoml
lret
lea
call
adc
or
fisttpl
jno
add
imul
rcrl
ret
pop
mov
inc
cmpsl
out
mov
popa
sub
lret
hlt
das
mov
mov
jno
pop
mov
mov
lods
iret
mov
sahf
data16
stc
inc
push
adc
xor
pop
das
lds
mov
mov
and
mov
xchg
pusha
nop
dec
or
cmp
scas
mov
adc
xchg
dec
or
add
mov
sub
std
or
push
lods
xchg
mov
or
imul
leave
enter
into
fdivp
push
jne
cmc
enter
xchg
jl
repnz
out
mov
sbb
pop
jmp
in
lock
popf
sub
sub
mov
jb
js
xchg
repnz
xor
mov
movl
sbb
sub
scas
add
inc
mov
mov
xchg
nop
nop
icebp
inc
cs
mov
pop
dec
jnp
jns
shl
mov
mov
sub
adcb
xor
mov
inc
cltd
sbb
std
addr16
dec
test
cli
mov
cmp
dec
push
mov
ret
dec
fsubrp
repnz
fildl
das
ret
mov
adc
nop
adc
mov
jmp
subl
pop
insb
sub
pusha
dec
scas
pop
test
stos
cmp
mov
fidivs
dec
add
ffreep
push
mov
pop
xor
cmpsb
mov
insb
sub
pop
enter
jecxz
mov
sarb
cmp
hlt
nop
xchg
and
or
inc
cmc
xor
and
iret
adc
shlb
mov
pusha
xor
inc
sub
mov
add
mov
stos
les
enter
leave
mov
filds
sbb
dec
hlt
fildl
orb
je
daa
test
pop
inc
sub
lock
lea
inc
mov
outsb
fbld
in
dec
inc
and
xor
aam
mov
les
mov
sbb
push
mov
jl
int3
mov
shrl
sub
filds
stos
and
les
cmp
js
sub
mov
push
jo
or
dec
shrb
mov
adc
mov
xor
std
popa
xlat
adc
movsb
ja
loope
ficompl
adc
cld
jno
outsb
int
jmp
or
push
cmc
dec
pop
adc
andb
jmp
fbstp
push
outsl
xchg
out
pop
fldt
mov
push
orl
in
pop
add
mov
dec
mov
in
lretw
or
mov
push
test
adc
fdivl
cmpsl
add
push
cmp
inc
push
loope
mov
inc
sarb
sbb
cltd
stos
xor
fadds
test
adc
add
add
leave
pusha
add
xchg
sub
inc
xor
gs
and
dec
out
dec
pop
jp
push
sbb
xor
jmp
inc
out
cld
jg
xorl
xchg
stos
ja
push
popf
fnsave
lock
je
sbbb
addb
enter
mov
jne
mov
nop
insl
mov
cmp
dec
sub
mov
mov
aas
sbb
lds
ja
mov
mov
mov
outsl
dec
in
sub
mov
xor
pushf
jns
test
pop
cmc
mov
popf
lret
sub
xchg
rcll
mov
pop
sbb
push
sti
call
jnp
pusha
xchg
mov
les
movsb
dec
mov
ljmp
fcomps
pusha
and
pop
movsb
xchg
out
jno
nop
push
mov
sub
mov
das
cmp
jo
adc
test
xchg
mov
dec
sahf
inc
ret
lods
cmp
lds
or
js
jno
mov
mov
mov
nop
pop
cmpsb
sbb
das
xchg
scas
sbbb
aaa
adc
iret
cs
lock
and
dec
xor
dec
psubsw
push
mov
shl
inc
clc
stos
cmp
lret
jecxz
pop
xchg
push
dec
jne
bound
pop
fbstp
pop
pop
push
xchg
jmp
lea
out
mov
mov
push
fimull
mov
into
xchg
lss
push
jno
negl
jo
pop
mov
xchg
scas
insl
mov
aas
mov
pmaxsw
xor
jbe
sub
jg
mov
clc
aas
es
std
ret
jg
mov
sub
daa
mov
jnp
push
cmp
dec
and
ficoml
push
cmpsb
lods
fwait
or
stos
addr16
cmp
inc
xor
dec
mov
int3
mov
xchg
jge
stos
testl
sbb
jbe
mov
add
in
push
mov
and
and
daa
mov
or
test
or
jns
icebp
outsl
cwtl
push
inc
out
jne
insb
sbb
fwait
lods
jo
das
cmp
xchg
ret
cmpl
test
enter
inc
imul
js
fdiv
ljmp
mov
movb
fldl
mov
fisttpll
nop
inc
pop
mov
arpl
cmp
mov
mov
sub
jb
jno
inc
mov
jne
pop
push
xchg
sub
pop
sarb
xchg
and
mov
insb
and
ja
add
call
pop
aam
repz
ja
pop
push
leave
add
ret
or
fnstenv
jnp
fldl
jl
stos
leave
gs
add
test
jnp
in
mov
inc
add
inc
jae
aam
xor
lods
imulb
cmpsb
nop
out
jae
push
pop
push
xchg
test
push
push
cmp
xchg
fildll
adc
daa
push
inc
lcall
inc
aam
xor
ljmp
adc
mov
mov
dec
push
fisttpll
mov
bswap
loope
add
xchg
repz
andl
pushf
mov
fmuls
in
mov
cwtl
push
adc
lods
mov
inc
and
pop
sub
nop
ret
cmp
in
mov
xorl
jnp
pop
xor
sbbw
cli
movsb
jle
mov
xlat
outsb
mov
and
in
xchg
inc
in
sti
imul
and
mov
pushf
cmpsl
outsl
jge
mov
pop
jl
addl
jo
cwtl
bndstx
lret
cwtl
inc
iret
pop
jge
mov
orl
clc
push
sahf
sti
jmp
inc
aaa
or
iret
lahf
cmp
sbb
cli
sbb
adc
mov
push
test
push
incb
and
ss
jae
adcl
pop
mov
test
fidivs
loopne
pop
or
inc
in
lods
cs
push
out
pop
rcll
mov
pop
pop
mov
xchg
push
fdivrs
dec
sub
xchg
cmp
loope
addr16
out
pop
movsl
rcrb
hlt
adcl
push
inc
cli
mov
or
push
cmc
jmp
mov
or
jle
nop
or
or
and
push
push
xor
sbb
adc
fwait
push
mov
jl
sub
scas
ds
inc
xchg
aaa
lods
lcall
mov
fiadds
aam
or
jns
nop
fimull
stos
ret
mov
imul
ret
jle
cli
sub
or
lea
and
lock
or
push
pop
add
pop
xchg
xchg
das
out
fists
push
outsb
lcall
dec
lret
mov
cmc
stos
mov
sbb
mov
mov
scas
sbb
jno
mov
xchg
lods
les
xchg
jg
sar
and
aas
movq
dec
xchg
sahf
mov
jno
in
ret
hlt
jp
xchg
push
jp
mov
scas
push
and
inc
or
out
mov
xchg
dec
out
adc
fdivrp
push
inc
stos
pop
pop
sarb
jp
jnp
jbe
sbb
enter
mov
outsl
out
mov
mov
xor
addr16
leave
sub
bnd
cmp
cli
in
testb
push
jl
and
ja
and
add
mov
in
movsl
push
leave
xor
mov
xchg
fiaddl
lea
fists
shll
mov
mov
daa
popf
lds
sbb
mov
aam
xor
movsb
cmpsl
insl
xchg
mov
divl
xchg
and
ja
mov
mov
mov
fcmove
mov
sub
mov
pop
ss
jge
insb
ffree
imul
add
mulb
pop
into
icebp
mov
mov
xor
cmp
push
cmpsb
mov
inc
sub
int
insb
addb
jno
stos
pop
sbb
outsb
xor
scas
stos
sub
ret
or
pop
mov
xor
or
adc
loope
mov
fnstsw
lsl
das
dec
mov
dec
cmp
mov
insb
add
popa
xchg
xchg
push
insl
jnp
dec
stos
jmp
bound
push
in
xor
mov
sbb
push
cmc
sbb
jnp
arpl
jne
mov
and
int3
fnsave
mov
sbb
pop
sub
adc
pop
loopne
in
movsb
aaa
movsl
adcl
lcall
push
test
daa
addb
mov
adc
les
dec
imul
jle
push
std
cmpsb
pop
cltd
mov
decb
push
shll
imul
xchg
xchg
iret
test
popa
fwait
cmpsb
xchg
repz
popf
mov
lea
or
sbb
movsb
int3
icebp
rorl
mov
push
in
decl
outsb
xor
xchg
xor
inc
pop
loope
and
loopne
xlat
flds
sub
adc
inc
sub
dec
fndisi(8087
xchg
shlb
xchg
xor
int
pop
sub
fistl
stos
mov
pop
sub
outsb
pop
rolb
nop
js
insl
push
stc
jb
cmp
inc
sahf
xchg
sbb
cs
pop
aaa
sub
jl
pop
clc
dec
mov
mov
mov
cwtl
outsb
pusha
push
xchg
ds
rcl
test
mov
stos
fs
out
push
sbb
aas
cmp
push
push
sub
rcrb
emms
push
push
and
stc
cmp
mov
xchg
mov
pop
mov
pop
mov
divb
es
mov
mov
xorl
pop
dec
arpl
mov
popf
push
data16
aaa
loopne
outsl
fscale
fdivl
sub
outsb
mov
shr
pusha
adc
sub
cs
leave
xor
push
or
data16
lods
cmc
cmc
cmp
cmp
int3
es
sub
aam
sbbl
and
or
arpl
push
in
cwtl
aam
mov
mov
adc
subl
cmpsb
xor
sub
in
inc
out
fmull
out
cmpsb
sbb
orl
sbb
mov
popa
xchg
and
ljmp
subb
sbb
aam
lret
xchg
and
stos
sahf
pop
lcall
scas
sub
cmp
shrb
sub
jb
outsb
jbe
ja
adc
mov
mov
fldcw
mov
sub
movsb
lods
inc
stos
push
aam
sub
and
fildl
push
push
mov
xchg
jnp
mov
mov
pusha
and
sti
sbbb
aad
inc
cmp
inc
mov
aaa
daa
lods
pop
addb
hlt
mov
iret
mov
sub
divb
push
jge
xchg
enter
xor
scas
inc
les
mov
inc
or
inc
and
sbb
leave
inc
sarb
add
dec
ss
pop
clc
mov
xchg
add
fs
call
jne
push
lcall
divb
sub
jbe
inc
or
xor
sbb
cmp
push
sub
shll
call
aaa
out
mov
and
cmp
pop
sbbb
push
add
jg
dec
subl
cmp
lret
jp
jge
or
jno
out
jp
or
insb
pop
push
outsb
ret
gs
add
jb
outsb
jns
or
xchg
or
into
int3
gs
dec
fst
dec
pusha
rorb
mov
dec
addl
or
into
hlt
cmovo
mov
xchg
mov
ret
adc
in
pop
ljmp
mov
xchg
and
pop
mov
and
or
popa
pop
xchg
mov
cli
mov
cmp
mov
mov
mov
insb
fldl
mov
js
inc
mov
inc
icebp
xor
out
jmp
scas
ret
aam
sbb
imul
ds
mov
imul
iret
sahf
bound
shrl
ret
scas
jecxz
mov
gs
ror
xor
stos
pusha
or
out
fcmovu
jo
sbb
push
push
cmp
xorl
add
aas
ret
lret
and
nop
inc
rclb
adc
in
in
sbb
in
test
popf
xchg
and
sarl
mov
xchg
push
and
add
int
mull
test
mov
movsl
mov
xlat
test
inc
mov
enter
xor
out
stos
mov
fcoms
std
inc
ljmp
insb
leave
dec
hlt
dec
or
mov
aam
fwait
push
add
mov
push
add
mov
push
sub
push
into
into
adcl
xchg
outsl
fsubl
sbb
xchg
push
cli
nop
push
adc
push
adc
inc
push
out
mov
std
sbb
push
push
sbb
iret
sbb
mov
out
fs
loope
mov
repnz
mov
insb
les
cmp
xchg
xchg
popf
ds
or
xchg
sbb
or
xchg
mov
xchg
shr
clc
fldl
mov
push
das
pop
icebp
mov
out
xor
xor
fnstcw
fidivrl
iret
dec
rcrb
xchg
in
sahf
fnsave
sbbb
mov
xchg
int3
fldl
icebp
popa
xchg
sub
xchg
lock
inc
loope
test
ds
roll
xor
pop
lods
outsl
xorb
mov
xchg
cmp
dec
sub
inc
mov
xor
in
adc
std
idivb
cmp
shlb
call
xchg
or
xchg
data16
push
stos
push
inc
push
popf
mov
es
lret
pop
xchg
lret
xchg
mov
sahf
clc
mov
xor
bound
mov
clc
adc
jecxz
rcl
rcr
in
test
adc
push
iret
inc
push
stos
test
aas
out
and
mov
cmc
pop
sarl
adc
out
ret
bound
adc
les
dec
cmp
imul
inc
scas
clc
mov
push
jne
pop
mov
add
dec
repz
adc
push
jp
insl
push
add
sbb
out
adc
daa
dec
inc
mov
jl
dec
jp
push
jge
cli
daa
or
out
call
inc
jae
add
fstps
rorb
xor
sbb
clc
std
test
movsl
add
out
jbe
adc
dec
orb
je
inc
dec
adc
mull
loop
in
orb
int3
xchg
repz
push
jg
sub
jnp
cmp
xchg
sbb
test
leave
shl
into
test
xchg
pop
cmc
shrb
push
in
xchg
xchg
subl
pusha
outsl
push
sahf
mov
fnstsw
sahf
add
cld
xchg
push
lahf
into
jecxz
cld
cmp
outsb
aad
scas
stos
into
setp
push
push
test
iret
ret
add
mov
sub
xchg
mov
pop
mov
add
push
aas
mov
mov
ret
xchg
xchg
and
cld
shrb
xchg
dec
insb
mov
jo
leave
aad
sub
add
jge
rolb
std
push
cmp
ds
hlt
inc
and
arpl
popa
adc
and
pushf
test
and
rcr
xor
inc
pop
push
outsb
mov
outsl
rcrb
out
pop
sbb
push
pop
jne
cmp
cwtl
xchg
ds
repnz
sub
das
adc
and
into
out
cwtl
daa
push
mov
cmp
push
or
das
adc
fs
mov
cmp
repz
jmp
push
mul
data16
xchg
scas
sub
fidivl
mov
adc
in
enter
jp
js,pn
jb
jns
mov
rcrl
adcl
add
rclb
lret
cli
mov
inc
mov
scas
or
jb
loop
sbb
in
fildll
vcvttsd2si
cs
pushfw
popf
shll
aaa
in
dec
call
dec
loop
jo
xchg
xor
push
enter
inc
xchg
fcom
push
dec
and
xor
mov
and
adc
push
xchg
aaa
xor
fsub
shrb
xor
cmc
outsb
call
lds
inc
pop
mov
stc
test
mov
aad
inc
xor
dec
sub
pop
mov
cli
sbb
inc
adc
jb
inc
add
scas
mov
sti
les
fdivl
dec
mov
cmp
jnp
pop
sub
insb
jno
sbb
add
mov
int
push
das
insl
or
fstps
or
adc
imul
decb
or
lds
lds
sbb
test
adc
mov
mov
push
cmp
add
dec
addr16
ja
lock
sbb
sar
mov
lods
sub
lcall
rcl
sahf
mov
jne
push
aam
jns
mov
jb
lds
lret
dec
fprem
inc
std
adc
out
cltd
jne
xchg
inc
and
cltd
rolb
test
repnz
jo
pusha
cli
popf
jge
in
mov
mov
and
xlat
pop
push
pop
xchg
sub
pop
rcl
mov
add
mov
mov
dec
inc
inc
add
psrld
mov
mov
add
mov
out
xor
insb
add
or
bound
and
mov
fs
leave
jecxz
test
aad
jbe
mov
call
js
adc
dec
enter
xchg
xchg
stc
sarb
xlat
int
repnz
mov
inc
jae
jno
loope
daa
scas
fdivs
cmpsb
jecxz
andl
adc
mov
iret
cwtl
rep
add
cwtl
cltd
fnstcw
or
jmp
push
cltd
mov
mov
or
cmp
loop
mov
sub
mov
pop
in
cmp
fs
xchg
insl
sub
xor
mov
clc
movsl
popf
add
out
mov
stos
std
cmp
insb
lahf
adc
repz
adc
fdivp
js
shl
pop
cmpb
outsl
or
loope
add
push
outsb
enter
shll
out
je
cwtl
sbb
rorl
enter
mov
cmc
pop
pop
lock
das
fwait
jmp
xlat
fwait
and
lods
pop
dec
ja
ss
and
xor
sub
cmpsb
ss
mov
sbb
scas
test
iret
mov
aad
jmp
xor
mov
stc
mov
dec
pmuludq
lock
lds
scas
jecxz
cld
mov
imul
js
sub
insl
les
xchg
rcl
xor
cld
loopne
aaa
mov
inc
add
mov
imul
xchg
jl
cmp
jge
call
fildl
push
popf
mov
pop
decb
xchg
xlat
cld
mov
fsubrs
call
aas
adc
mov
in
divb
lods
lcall
fs
aam
xor
push
pusha
call
pop
js
pop
mov
push
dec
mov
or
sub
pusha
xchg
popa
jnp
je
or
scas
cmp
jo
push
jns
push
mov
push
and
lea
push
or
ds
fiaddl
hlt
loope
and
xor
int
outsl
sub
dec
shrl
pop
lret
lahf
test
pop
cmp
inc
icebp
frstor
xchg
imul
sub
mov
pop
sahf
dec
arpl
sbb
inc
cmp
ljmp
mov
adc
fs
mov
repz
stc
lods
loope
mov
cmp
fisubs
push
mov
mov
cmp
jne
dec
mov
push
fdivs
pop
jbe
xor
mov
dec
cmp
mov
fisubs
jne
fwait
int
test
mov
mov
or
mov
sbb
pop
pop
xor
repz
insl
xlat
out
pop
data16
jge
lahf
pop
popa
pop
cwtl
mov
mov
fisubrs
fdivp
lock
push
jmp
push
int3
xor
push
enter
jbe
sub
outsl
in
call
cs
and
inc
adc
mov
insb
rcrl
sub
jae
xor
imul
shlb
cmpsl
inc
daa
stos
data16
mov
or
pop
push
mov
movsb
xor
lahf
push
in
mov
push
xor
mov
add
pushf
cld
jne
push
sbb
icebp
dec
mov
jl
push
shrl
push
lret
pop
test
and
icebp
fnstenv
repz
mov
add
popa
xchg
jne
mov
inc
addr16
push
aam
jmp
pushf
add
or
push
in
adc
insb
es
imul
jg
movsl
sub
dec
mov
movsl
sbb
cld
jle
xor
or
mov
shl
out
daa
sar
lahf
mov
xor
xchg
loopne
mov
in
push
adc
leave
dec
insb
adc
pop
daa
xorb
sub
popa
cmpsb
jg
jmp
and
mov
daa
call
or
xchg
dec
das
in
subb
jmp
fadd
xor
outsl
loop
jns
iret
sbb
clc
dec
push
push
push
jnp
test
pop
insb
cmp
es
pop
xor
sbb
jp
in
mov
repnz
dec
das
repz
push
jl
out
jge
xlat
aas
xchg
nop
sarl
cmpsb
in
adc
loope
mov
stos
inc
sub
add
add
xor
pop
sbb
mov
or
or
mov
and
sub
mov
insl
ds
cmp
out
ret
mov
imul
xor
adc
enter
pop
lcall
lahf
inc
lock
xchg
jle
scas
dec
push
push
mov
add
adc
xchg
shrl
jg
maxps
test
enter
in
add
adc
or
jno
mov
cmp
cmpsl
pop
jae
cmp
loopne
xorb
stos
imul
fcmovnb
outsl
rcr
pop
sub
sahf
fidivrs
fs
mov
and
add
clc
aam
push
cwtl
mov
cmp
std
pop
dec
mov
xchg
jge
jae
std
add
les
sbb
aad
jne
pop
pop
subl
pop
repz
cmp
nop
xor
ds
mov
xchg
out
jno
popa
dec
jo
xor
xchg
cmp
stos
push
and
sub
adc
loop
cmp
push
in
mov
mov
movsb
dec
arpl
dec
sub
adc
jmp
loop
cmpsb
movsl
sbb
mov
jno
mov
dec
sub
nop
shrb
sub
aas
push
jg
shr
imul
negb
cmp
je
pop
lods
inc
out
mov
aas
or
jnp
mov
xchg
pop
jae
jo
mov
lock
and
out
hlt
adc
or
dec
add
xchg
leave
adc
xor
and
add
out
pop
repz
dec
inc
adc
push
mov
xor
pushf
sbb
imul
mov
call
nop
leave
adc
jl
rorl
shrb
leave
sub
jnp
into
cmp
adc
push
mov
or
fidivs
bswap
je
cmpsb
push
mov
and
and
call
pop
in
shll
sbb
and
mov
adc
push
sbb
stos
aam
out
lahf
imul
ljmp
adc
cmpsb
mov
lock
adc
mov
jns
sbb
cmp
js
xor
xchg
lods
xchg
add
pop
ljmp
mov
rsqrtps
mov
cwtl
xchg
out
inc
pusha
int
out
jge
movsl
fucomi
sbb
pushf
bound
int
iret
les
jge
push
pop
je
dec
stc
mov
daa
mov
adc
xor
cmpsb
sub
clc
jl
les
fnstenv
aad
xchg
fbld
les
ja
jae
pop
adc
mov
sbb
mov
pop
daa
xor
orl
jo
dec
movsb
adc
lahf
adc
js
xor
test
jecxz
outsb
mov
cmp
lods
nop
jne
addb
and
out
lret
aam
mov
repz
pusha
jno
cmp
pop
add
or
and
add
orl
xchg
push
jge
int3
shll
jb
out
mov
inc
roll
cmp
push
in
les
ljmp
mov
add
push
or
xorl
enter
add
add
dec
xor
lock
les
repnz
cld
inc
pop
dec
add
dec
xchg
mov
cltd
inc
loop
movsb
xchg
shl
push
xlat
and
and
hlt
or
or
add
int3
in
mov
inc
mov
sarl
popf
repz
das
lea
rcl
lds
rcll
cmp
ret
jecxz
xchg
sub
cmp
sub
sbb
and
dec
xchg
adc
and
sub
cmc
jnp
bound
adc
nop
mov
jbe
dec
mov
ss
insb
mull
fistps
dec
repnz
out
addl
adc
icebp
gs
push
mov
sbb
push
mov
pop
test
xchg
clc
sub
ss
push
ss
popf
scas
fwait
adc
mov
fldl
std
jmp
hlt
mov
sbb
dec
dec
out
cltd
xchg
adc
fs
popa
test
add
flds
push
mov
cmpsb
daa
bound
movsb
and
dec
dec
mov
movsb
test
cmp
in
sbb
sub
cld
leave
sbb
sub
repnz
xor
cmp
jg
pop
xor
enter
jmp
jno
sbb
jbe
pop
dec
adc
jmp
outsb
mov
xchg
data16
mov
add
lret
mov
inc
les
pop
add
jo
pop
subb
cmp
fs
pop
fidivl
pop
rcl
mov
out
sbbl
fidivl
and
repnz
mov
or
xchg
xor
aaa
mov
sub
xlat
repnz
stos
les
and
sbb
test
mov
data16
cmpsl
sbb
fwait
icebp
cmp
pop
arpl
xchg
ja
inc
fldl
jb
sub
xchg
add
shrl
mov
add
data16
test
mov
ja
enter
inc
jnp
mov
push
add
jle
out
cmp
jo
push
mov
pop
pop
jbe
test
fistpll
push
xor
bound
cmp
dec
push
xchg
fdivrs
mov
pop
ret
add
xchg
mov
mov
stc
movsl
test
out
pop
lcall
add
push
jg
push
mov
out
pop
adc
sbb
or
push
sub
pop
and
imul
dec
icebp
jno
aaa
int3
add
adc
ljmp
addr16
orb
cmp
gs
sub
fsts
sub
jmp
in
sbb
repz
xchg
xlat
scas
mov
pop
jo
and
xor
cmp
mov
jecxz
or
das
dec
mov
jl
mull
add
xor
or
imul
and
dec
arpl
xchg
xlat
mov
or
cmpsb
xchg
movsb
mov
dec
int
inc
lods
out
test
lods
and
sbb
lcall
inc
pop
add
and
pop
andb
mov
loope
lock
jno
xchg
inc
cmpsl
or
add
inc
fstpl
sarb
test
sbb
scas
inc
rep
sbb
fwait
movl
and
jge
insl
sub
out
sub
and
ds
and
sbb
pop
xor
fs
fists
test
jbe
push
into
mov
imul
imul
lock
xchg
clc
arpl
push
lahf
xchg
jbe
out
inc
push
xor
xchg
xor
insl
int3
ret
xor
mov
dec
jl
int3
pop
pop
jno
mov
nop
xor
aas
shl
lods
cmp
push
imul
xchg
mov
mov
push
cmp
cmp
popa
dec
shll
inc
cmp
out
int3
clc
xchg
out
sbb
lods
in
xor
xchg
cwtl
pushl
mov
add
xchg
add
scas
and
inc
gs
xor
aam
fdivp
out
pusha
dec
sub
and
adc
ljmp
push
sub
mov
iret
dec
mov
dec
push
scas
test
and
or
movsb
cli
jbe
inc
jo
loopne
push
pop
shl
inc
cmp
cmp
sbb
push
add
fwait
sub
pop
pop
xchg
mov
roll
jno
in
in
fcmovne
mov
or
clc
add
aam
or
mov
cmc
mov
out
imul
out
sbb
and
or
mov
adc
inc
ds
subl
dec
adc
shlb
lock
movl
inc
mov
mov
mov
sbb
outsb
cli
inc
addr16
out
ljmp
xchg
inc
cltd
cmp
call
adc
sub
jbe
mov
and
push
mov
and
add
xchg
dec
aas
push
inc
adc
push
leave
xlat
fildl
lds
lods
push
leave
mov
jge
adc
and
xchg
femms
orb
inc
push
inc
cmp
mov
inc
and
inc
xor
push
xchg
mov
push
sbb
mov
fsts
jo
dec
add
cmp
outsb
lock
cmp
cmp
les
negl
cmpsb
cmp
inc
data16
mov
inc
pop
test
jmp
fisttpll
popf
mov
pop
jp
xor
add
mov
push
enter
pop
lcall
fcoms
push
xchg
sub
dec
imul
sub
les
xchg
fs
and
pop
adc
sbb
add
pushf
mov
mov
stos
inc
cmpsl
xchg
inc
inc
mov
cmc
fcoml
push
jnp
mov
faddl
jne
gs
push
jns
push
sub
stos
dec
lods
mov
mov
adc
sbb
cmc
add
cmpsl
cwtl
push
inc
int3
lret
adc
fbld
cs
inc
loop
push
pop
sub
andl
cmpsl
cmp
or
hlt
adc
pop
jno
add
sub
imul
xor
push
inc
dec
xchg
push
lcall
lock
push
adc
ja
and
sub
popa
cmc
dec
pop
inc
into
dec
sub
sub
cmovg
clc
sub
cmp
fs
mov
jl
bound
sbb
shll
movsl
aam
ss
rorb
cwtl
sbb
gs
pop
gs
sti
movsl
loop
in
int3
push
enter
idiv
js
ficoml
fmull
mov
lcall
xor
shll
cmp
mov
hlt
out
xchg
jge
and
mov
arpl
sbb
outsb
xchg
cmp
cltd
lock
jecxz
mov
sbb
clc
in
xor
js
cltd
inc
or
cmpsl
bound
pop
xchg
add
testl
mov
loop
mov
dec
cmpb
aam
out
mov
cs
xchg
ljmp
aas
mov
imul
int3
push
fistpll
cmp
les
in
fdivl
sbb
push
adc
ficoms
adc
out
adc
ret
into
cmp
cmc
pop
mov
cwtl
mov
adc
out
push
ljmp
into
cli
pop
mov
inc
rolb
jmp
mov
inc
and
pop
pop
leave
mov
mov
xor
cs
cmp
cmp
push
aas
mov
jmp
lock
test
inc
dec
cmp
push
mov
mov
inc
xchg
mov
outsl
pop
mov
cvtps2pi
xchg
js
add
jo
adc
movsb
cmc
pop
cmc
dec
dec
into
out
repnz
gs
xor
sub
or
rcr
push
dec
out
divl
sub
push
loop
out
aaa
mov
sub
cmp
sahf
sub
dec
bound
xor
xchg
mov
bound
mov
and
pop
adc
pop
add
loop
and
arpl
imul
iret
push
add
mov
sbb
xacquire
cmpsl
mov
inc
add
movsl
lods
fimull
pop
cmp
adc
mov
cwtl
adc
idiv
scas
adc
cmp
mov
inc
adc
jp
mov
es
inc
cmpsl
nop
cli
inc
sarb
mov
lret
pusha
js
inc
push
cwtl
pop
xchg
loopne
add
cmp
iret
or
popa
fidivrl
and
mov
and
loop
imul
mov
cmovne
mov
mov
mov
sub
sysenter
or
ror
cltd
insb
fs
insl
inc
inc
xor
mov
push
in
test
lret
inc
push
pop
ret
add
sbb
daa
jle
lods
stos
loopne
enter
xlat
int3
xlat
sbb
ja
stos
xchg
enter
sub
dec
cmp
mov
mov
xor
nop
jmp
and
sbb
inc
into
insb
mov
ds
add
cli
and
repz
jae
cwtl
mov
and
lret
movsb
xorb
push
mov
inc
andl
popf
pop
push
outsl
mov
outsb
xchg
repnz
movsb
in
mov
loop
cmp
repnz
push
movsl
and
pop
or
addr16
and
fsts
xchg
jnp
jae
lods
sub
clc
in
rcll
es
jg
mov
sbb
aaa
fwait
or
pop
sbb
push
mov
add
mov
mov
pop
fidivrl
icebp
gs
jle
and
mov
inc
cmp
adc
in
lret
jecxz
popf
push
lods
inc
adc
int
ficoml
lds
in
test
in
out
mov
sti
add
or
jae
push
insb
cwtl
sahf
into
push
adc
sub
fisttps
jg
inc
xor
stos
lds
pop
lods
jmp
dec
test
cmp
mov
ja
jbe
jno
sahf
and
test
popa
push
hlt
dec
push
push
push
aam
lcall
in
stos
ljmp
rep
movsl
inc
mov
gs
mov
lods
xor
add
xor
or
or
xchg
aaa
xor
mov
xchg
test
cwtl
pop
imull
dec
or
cmp
ret
sub
mov
icebp
pusha
cmp
jmp
mov
and
xchg
and
cmp
mov
dec
jecxz
jge
lock
push
aas
dec
inc
sub
and
movsl
insl
push
shl
sbb
dec
add
mov
or
in
ljmp
or
dec
stos
dec
jno
lahf
push
xchg
xor
cmp
jle
daa
sub
inc
or
jge
pushf
movsl
movsb
dec
pop
mov
jge
pop
loope
pop
scas
or
rcl
sbb
cmovne
les
xchg
xlat
jae
mov
dec
enter
sub
pop
bound
mov
lods
fldcw
movsb
or
in
push
clc
sbb
add
movsb
repz
and
pop
and
mov
shlb
iret
ret
jo
or
fs
xlat
test
inc
out
and
test
out
nop
push
aaa
or
xor
inc
xor
mov
clc
mov
pop
mov
xchg
push
out
pop
mov
mov
ret
adc
lock
mov
enter
mov
add
testb
inc
push
stos
lods
mov
pusha
fwait
push
mov
jo
arpl
stos
inc
xchg
add
and
sti
mov
mov
shll
xor
repnz
dec
gs
jne
in
push
lock
jge
inc
repz
fsub
mov
dec
test
mov
mov
mov
sbb
push
sub
les
and
lret
lea
arpl
xchg
xchg
jae
push
cmp
or
filds
insb
lods
sub
pushf
jmp
lock
sahf
in
add
and
cmp
imul
sbb
jnp
jmp
pop
jae
push
ljmp
int3
mov
mov
es
sbb
cmovl
out
in
add
mov
cmpsb
mov
js
xor
cltd
out
cmp
pop
adc
and
loope
and
addb
gs
pop
das
imul
iret
lds
and
das
arpl
push
inc
out
ja
arpl
scas
fstpt
aad
cltd
cltd
mov
sub
gs
push
mov
in
mov
test
xchg
into
sub
inc
daa
adc
scas
xor
lods
fs
pop
lcall
imul
into
push
mov
push
mov
mov
shll
xchg
and
jl
xchg
sbb
xchg
inc
sub
mov
popa
data16
sbb
pop
mov
pop
cltd
mov
adc
js
test
jge
aad
fwait
adc
mov
adc
cmpsl
jecxz
sbb
test
mov
cmp
cwtl
int
adc
jmp
pusha
push
out
adc
jo
mov
push
xor
call
aam
or
in
iret
je
xchg
dec
sub
mov
das
lds
cltd
xchg
test
ljmp
adc
sub
stos
pop
and
std
inc
cmp
stc
cwtl
jg
cmpsl
pop
out
loopne
in
mov
push
jnp
ss
xor
inc
dec
mov
inc
sub
std
adcb
cmp
sbb
shll
lods
adc
mov
sbb
push
mov
pop
or
push
mov
cmpb
pop
ja
mov
stos
fistpl
mov
add
or
sub
test
jp
scas
aam
inc
pop
imul
fistl
and
jo,pn
cli
mov
ja
pop
jle
aas
bnd
add
adc
dec
movsb
fiaddl
ljmp
jl
push
std
lods
inc
mov
sti
in
loop
dec
xor
sub
or
dec
jno
fisttpll
xchg
enter
jl
aad
xchg
jns
fsts
and
aas
jp
fsubs
sahf
pop
test
mov
or
bound
fidivs
xor
adc
xor
ja
inc
test
xor
nop
jne
sbb
ficomps
xor
mov
cli
xor
shrb
xor
and
xchg
scas
xor
aad
fwait
push
mov
insb
imul
add
rorl
loopne
dec
repnz
insl
cmpsl
add
xchg
add
and
imull
leave
mov
out
fldt
shr
sahf
shrl
outsl
insb
insl
faddl
je
call
negb
inc
jb
sub
std
jo
or
repz
negb
nop
xchg
push
push
sahf
xlat
loop
mov
or
mov
xor
jb
xor
pop
mov
mov
cmc
xchg
ljmp
dec
fwait
dec
push
adc
pop
fisttps
repnz
sub
push
cmp
inc
jno
test
dec
lds
cmp
xor
addr16
dec
mov
sub
push
clc
or
inc
pop
imul
inc
pop
pop
sbb
cmpl
clc
jg
xor
sahf
nop
sub
insl
popa
pop
fiadds
lahf
sti
insb
sub
shlb
js
test
ss
in
cltd
stos
mov
dec
xchg
fs
or
clc
rorl
test
mov
jno
cwtl
mov
mov
cmp
addb
and
in
cmpb
clc
jmp
sub
xor
jno
lcall
outsb
push
in
push
xchg
imul
xchg
rcll
imul
mov
sub
clc
cmp
aam
pop
loopne
cmpsl
jae
pushf
loope
mov
mov
out
fistpl
sbb
imul
pop
xor
ja
mov
sbb
adc
mov
das
bnd
push
cld
addr16
xorps
add
stos
adc
cmpsl
sub
or
jge
mov
repnz
add
fwait
pop
xor
ret
ss
push
xor
xchg
cwtl
out
mov
jp
fcmovne
loopne
mov
jbe
jne
addb
mov
ret
sbb
ret
jo
lea
pop
aam
mov
or
adc
xchg
pop
and
leave
push
mov
cmp
repz
mov
pop
rcrb
xchg
adc
jne
mov
imull
mov
repz
out
std
jmp
adcb
ret
mov
ja
xchg
mov
mov
pop
sub
aaa
sahf
or
pop
mov
fnsave
test
not
je
cld
push
je
and
jo
cmpsl
jb
dec
call
mov
loop
cld
pop
cs
in
jg
xchg
es
pop
sbb
and
cmpsl
or
jo
mov
adc
inc
sbb
sbb
lods
fs
cmpsl
lds
sub
outsl
sub
fs
addl
stc
je
inc
fs
scas
inc
add
jne
cmpl
and
xchg
imul
cmp
cmpl
into
mov
test
fiadds
xor
pop
jbe
jns
repnz
push
sahf
lods
popf
leave
add
cmp
push
and
ljmp
cmp
xchg
mov
int3
push
ss
into
and
in
xor
fsubr
lea
call
nop
jle
cmp
andl
dec
or
mov
xchg
inc
and
out
mov
jecxz
jo
lahf
js
jle,pt
pop
hlt
cmp
sbb
data16
xor
mov
fldt
std
dec
xchg
shll
divl
int3
mov
xchg
setnp
xchg
xchg
rol
ret
jp
or
pop
int
mov
lahf
dec
xlat
lock
shrl
iret
insb
push
sar
lret
inc
sub
cmp
xchg
enter
push
jae
movsb
rol
jb
sahf
sub
fs
fstp
jl
xchg
pushf
je
and
pop
lea
sbb
adc
sub
dec
faddl
clc
aad
and
mov
push
out
cmc
das
push
stos
stos
pop
lock
bound
mov
lods
and
hlt
push
dec
or
cmpsl
and
pop
fs
outsl
ret
cs
int
fsts
inc
sub
push
dec
mov
mov
jecxz
lods
out
lods
ret
icebp
es
fdivrs
push
dec
ficoms
mov
ljmp
lods
mov
scas
pop
jne
xchg
cmp
cmp
cmp
lcall
jne
sub
mov
hlt
mov
call
lods
into
mov
and
sti
xchg
iret
outsb
adc
sahf
mov
mov
and
hlt
arpl
or
idivb
xchg
in
je
dec
daa
aaa
cmpsb
fwait
jne
mov
sbb
inc
addr16
push
orb
xchg
cmpsl
dec
xchg
xchg
adc
mov
imul
jp
ret
out
hlt
aam
jmp
addb
aas
int
movzwl
in
sub
cmpsl
xor
sbb
fdiv
sub
sub
and
scas
mov
insl
sbb
xor
int3
xchg
inc
shrb
data16
lahf
and
mov
out
pop
arpl
xchg
fldt
xor
test
pop
insb
mov
mov
subb
xchg
sbb
arpl
mov
pop
jnp
test
jmp
out
mov
dec
pop
mov
push
sbb
andnps
in
jno
pop
sbb
fisubrl
ja
jecxz
xchg
sub
mov
into
mov
dec
cmpb
mov
mov
nop
loope
loop
add
nop
jne
mov
jns
popl
and
insl
pop
inc
vphaddbd
push
xchg
jnp
sub
mov
pop
negb
pop
cld
and
xchg
mov
icebp
in
push
sbb
es
xchg
cmp
lock
or
mov
clc
and
addr16
cltd
in
rolb
cmc
xchg
incb
push
inc
adc
rorl
push
into
dec
xchg
mov
lahf
sub
ret
pop
cmpsb
mov
loope
jmp
popf
stos
roll
push
lret
test
dec
pop
mov
mov
ljmp
popa
jne
push
inc
push
movsl
pop
mov
lock
iret
cmpsl
sti
bound
mov
aad
sbb
popa
test
inc
test
inc
arpl
xchg
jmp
adc
cmpl
lods
inc
mov
dec
rcrb
inc
or
xor
cmp
jno
vmovaps
scas
jae
insl
cmp
or
inc
popa
dec
add
dec
inc
xlat
into
adc
push
outsl
push
loope
dec
pop
clc
or
scas
lret
bound
sbb
and
mov
jo
mov
clc
sub
icebp
into
lock
ret
addr16
dec
or
or
ficoms
fildll
ja
scas
cmp
mov
dec
scas
cmpb
test
xor
jnp
out
jg
lea
into
dec
push
cld
dec
test
lahf
sbb
aas
or
pop
sarl
in
xchg
xor
push
sti
arpl
xor
sub
mov
push
das
adc
xchg
loop
lock
push
js
mov
mov
jmp
xorb
icebp
mov
xor
out
inc
xchg
sub
lods
jnp
xchg
cmp
inc
and
xlat
mov
les
insl
push
mov
jns
out
lret
mov
cmp
sahf
jns
outsb
movsl
or
adc
movsb
or
repnz
push
call
nop
xor
enter
mov
lds
ljmp
mov
addb
ret
fwait
mov
scas
sbb
imul
pop
lods
mov
and
jle
js
in
and
jge
ss
inc
mov
out
aad
gs
stc
pop
iret
aas
leave
loopne
and
loopne
xchg
pop
jp
add
pop
ljmp
je
dec
pop
je
jg
add
decl
das
std
ret
fcoml
and
cmp
or
dec
inc
and
push
cltd
in
lock
fwait
or
xor
mov
dec
mov
test
cltd
xchg
cwtl
in
sub
xlat
push
dec
xchg
inc
add
mov
dec
or
loop
xor
or
out
orb
or
pop
fsubs
xlat
out
nop
cmp
shlb
dec
jecxz
pop
or
hlt
mov
or
inc
jmp
sub
popf
jp
gs
add
pushf
xchg
insl
testb
xchg
add
mov
movsl
mov
adc
scas
cmp
mul
adc
mov
cmp
push
and
test
lock
cwtl
mov
cmp
cmp
jg
cmp
mov
mov
cmpsl
mov
lcall
loope
fstpl
dec
cwtl
aas
mov
movsb
je
jb
mov
movb
test
jp
sub
pop
jns
xor
adc
dec
fldenv
cmp
and
jbe
iret
pop
pushf
in
pop
cmp
pop
rorb
lods
iret
repnz
cmp
jg
popa
pushl
subb
push
fwait
add
decl
out
xchg
add
push
out
into
push
jno
in
in
pop
clc
ljmp
mov
or
test
iret
pop
cmc
adc
lods
add
subb
aam
push
out
iret
clc
popa
mov
jg
sarl
push
mov
mov
mov
into
and
arpl
dec
out
or
push
repnz
cmp
dec
inc
push
jmp
jb
loope
jnp
xchg
call
pushf
out
movb
adc
lcall
lods
inc
pop
xadd
popa
adc
xor
rcll
push
in
int
in
jmp
ja
jl
xchg
xor
dec
out
test
cmp
repz
and
insb
ja
inc
fildll
xchg
push
pop
mov
mov
push
sbb
imul
adc
sbb
mov
dec
loopne
insl
xchg
push
sub
push
dec
pop
adcb
imulb
cmpb
movsb
lock
lods
je
xchg
sub
fwait
jne
mov
mov
aam
int3
xlat
xchg
repz
imul
mov
sub
push
fldl
xchg
inc
push
push
shll
stos
and
lea
test
cli
ss
push
pushf
stos
inc
jb
shl
pop
sbb
sbb
mov
inc
cld
mov
jmp
gs
imul
push
cmp
out
movl
push
sbb
push
sbb
sub
in
movsb
push
sbb
test
mov
mov
ljmp
mov
push
aas
gs
in
jle
add
fmul
adc
out
jg
gs
mov
fiaddl
xchg
in
jne
imul
push
cmpsl
dec
sbb
and
jp
lods
cld
mov
jb
add
lods
loopne
mov
je
outsb
mov
xchg
pop
inc
ljmp
mov
add
or
adc
sbb
popf
shlb
sub
pop
lds
je
add
scas
or
lods
sbb
ja
cmp
es
xor
subb
jecxz
out
bound
dec
sub
lret
les
out
push
mov
push
popf
imul
inc
xchg
inc
jge
subb
jnp
mov
push
jecxz
pop
loop
push
jmp
jle
pop
std
pop
pop
push
mov
inc
jb
aaa
js
shlb
lock
pop
test
fwait
hlt
arpl
push
mov
nopl
insl
bound
push
fmull
mov
nop
jb
loopne
test
leave
xchg
enter
stos
add
xchg
loop
sub
mov
test
subl
mov
jnp
fwait
sahf
sbb
adc
clc
aam
or
arpl
xor
mov
inc
xor
mov
fistpl
add
sahf
out
addr16
inc
push
mov
mov
imul
push
cwtl
or
loopne
push
or
idiv
jns
sqrtps
push
ret
push
xor
stc
cli
dec
ret
lret
xchg
movsb
stos
repnz
push
ss
std
movsl
or
push
cmp
push
push
or
stos
mov
and
bound
fldenv
movsl
in
sub
dec
pop
ret
dec
cwtl
imul
clc
mov
sbb
pushl
fsubrl
fdivrl
ja
stos
in
dec
adc
dec
lods
ret
sti
add
in
pop
mov
dec
out
mov
sbb
aam
and
xchg
xchg
xor
sbb
ljmp
mov
sub
or
add
xchg
int
jo
push
cld
icebp
cld
ficompl
adc
aam
cmpsl
idivb
push
mov
test
addl
lahf
call
inc
popl
ss
mov
lret
js
mov
data16
xor
rclb
and
dec
mov
sub
fxch
cmpsl
or
or
lret
sahf
pop
lock
mov
and
sti
dec
loope
xchg
sub
adc
clc
jne
cmc
cmp
sub
fcomp
movsl
xchg
imull
xor
push
push
popf
jo
scas
push
push
cmpsb
mov
cmp
sahf
cmc
cmp
push
add
xchg
pop
push
fwait
mov
ja
sub
and
sbb
xchg
inc
test
mov
daa
je
mov
popf
jmp
push
popf
mov
aam
sub
scas
in
jns
mov
insl
je
add
adc
mov
pushf
mov
mov
fs
cmp
add
lea
test
jecxz
mov
incl
lock
push
aas
pop
jae
jecxz
out
xor
pop
scas
je
rclb
fldl
js
es
loop
and
push
jo
push
movsl
cmp
xor
mov
rorb
mov
xchg
int3
xor
nop
xchg
xchg
add
sub
sti
push
cwtl
flds
xrelease
pop
push
jg
jle
cmpsb
adc
jg
popf
out
pop
sti
add
mov
out
add
cmc
dec
add
mov
aad
dec
cwtl
adc
xor
faddp
push
inc
pop
sbb
test
xchg
mov
mov
and
mov
fsub
and
lods
xor
adc
movsl
and
outsb
cld
imul
cmc
jae
push
imul
add
jae
sub
movsl
pop
repnz
inc
push
mov
decl
jno
out
push
mov
and
arpl
sbb
jl
arpl
int3
sbb
mov
call
dec
cltd
cld
cmc
pusha
clc
dec
aam
sub
paddq
inc
sub
mov
pushf
jbe
subl
push
loope
hlt
bound
stc
push
xor
jnp
decb
repnz
pop
and
and
jns
mov
ss
je
std
out
repz
push
adc
out
xor
call
bound
sub
xlat
or
dec
stos
xchg
shll
cld
mov
inc
outsl
xchg
mov
jne
pop
xor
and
mov
xchg
decl
repnz
xor
sbb
jb
das
mov
rclb
inc
mov
cmp
and
lea
push
out
je
in
mov
fldl
fs
dec
scas
dec
je
repz
ds
push
push
ss
daa
test
loop
mov
xchg
jae
or
mov
outsl
mov
xchg
lods
sbb
inc
inc
mov
lcall
js
xchg
jne
in
and
les
into
imul
jb
sahf
cld
lret
pop
push
mov
clc
cld
push
iret
sbb
mov
sub
addr16
inc
push
clc
outsl
ss
sarb
aas
ret
cmp
mov
sub
push
insb
mov
rcl
mov
mov
fcmovne
movsb
jl
arpl
movsb
ret
sub
mov
cs
stc
rolb
insb
or
mov
jle
outsl
clc
xor
xor
jmp
int3
mov
mov
fisubs
out
cmp
incb
inc
dec
out
cmp
arpl
outsl
fstp
xchg
pop
jle
scas
fldt
dec
mov
dec
out
std
fsubl
js
fisubrs
push
popa
mov
cmp
cmp
mov
xchg
dec
repnz
das
jmp
dec
inc
dec
add
in
push
jnp
pop
inc
cmp
or
add
imul
and
xor
iret
xor
xor
imul
push
jno
jecxz
movsl
icebp
jmp
mov
repz
adc
inc
test
hlt
fldl
and
insb
rclb
xchg
inc
pop
mov
or
or
xchg
jg
popa
and
jmp
dec
jns,pn
imul
ret
adc
aad
xor
lea
lds
mov
mov
flds
cmp
scas
cld
enter
or
fdivrl
add
xchg
pop
cmp
add
push
xlat
fmull
adc
test
mov
xchg
loopne
or
xor
js
movsb
cs
lods
inc
inc
rolb
repnz
loop
gs
les
inc
adcl
js
push
rcrb
adc
mov
mov
bound
leave
mov
ss
mov
mov
int
mov
mov
movsl
jbe
mov
mov
fimuls
ljmp
lret
xchg
ja
push
xchg
mov
sarb
add
rcll
shll
test
fs
fwait
aas
pop
stc
jle
leave
cltd
xchg
mov
in
ret
daa
mov
lds
inc
pop
inc
mov
daa
in
xor
fnstsw
inc
sub
clc
or
mov
stc
cmc
idivb
mov
jp
imull
adc
pusha
rcl
sbb
push
or
push
push
add
arpl
gs
call
or
lock
lds
mov
and
cmp
mov
cwtl
mov
in
int
xor
sbb
lds
or
inc
pop
cmp
pop
js
push
or
je
adc
mov
in
add
dec
dec
fdivl
pop
and
push
and
stos
lock
insl
pop
or
negb
scas
push
loop
stos
fisubrl
fimull
mov
stc
xchg
push
pop
cwtl
icebp
sub
pop
gs
lds
mov
lret
repz
lret
or
jp
adc
inc
es
sub
sbb
lock
adc
xor
xor
cli
cld
push
mov
aas
stos
aaa
pop
and
fistps
out
lds
mov
pop
adc
addr16
sbb
or
jmp
adcb
xor
add
cmp
enter
cltd
or
cmp
les
mov
dec
les
icebp
add
sbb
js
out
mov
es
xor
leave
subl
xchg
mov
mov
ljmp
dec
or
lcall
pop
sbb
dec
ret
sub
mov
fs
push
adc
jo
test
inc
mov
lds
out
outsl
inc
push
imulb
jo
xlat
std
push
inc
adc
mov
outsl
sub
scas
fs
loopne
mov
add
ret
out
mov
mov
out
jne
dec
dec
shll
sbb
movsl
or
xor
lahf
mov
inc
pop
push
orl
mov
out
ds
sar
and
js
jo
or
inc
mov
loop
mov
insb
push
aad
ljmp
add
lahf
lock
or
push
sbb
jmp
inc
jmp
iret
mov
rolb
cli
sbb
xchg
xor
aam
movsb
imul
rclb
movsl
pop
adc
push
cmp
movsb
sub
mov
push
xor
push
pop
add
hlt
xor
andnps
mov
inc
jb
push
cli
lea
in
xchg
addr16
shl
rolb
fists
cld
loopne
lea
int3
cld
aaa
xor
pushf
mov
xor
outsl
ja
and
into
mov
cmpl
mov
pop
movsb
pop
ret
push
dec
mov
jp
int
and
mov
subl
out
dec
push
jmp
lret
aam
mov
sub
pop
jge
lret
add
pop
outsl
arpl
out
pop
in
dec
push
arpl
add
popf
dec
fmull
ss
call
add
pop
movsl
push
or
dec
fisttps
push
push
jnp
mov
jbe
clc
leave
xchg
dec
shl
aad
sub
cmp
mov
jae
aad
daa
pushf
add
sbb
xorb
in
push
fs
insl
int
add
xchg
ja
pop
pop
sbb
rcrl
sub
adc
or
fadds
cmp
mov
sbb
or
and
imul
cld
inc
or
outsb
movsb
xchg
filds
sub
pusha
sub
cmp
je
leave
decl
or
addr16
jne
test
mov
sahf
push
orb
pushf
repz
fcmovb
dec
nop
inc
cltd
addb
lds
or
out
js
std
pop
fwait
lods
lock
pushf
leave
into
subb
fdivrs
loop
mov
add
cmp
in
xchg
test
out
and
inc
cmpsb
fcmovbe
and
popa
mov
out
loop
mov
and
mov
inc
pushl
cltd
daa
dec
aam
jnp
and
shl
mov
push
cli
sub
xchg
daa
in
dec
push
mov
mov
cmpsb
icebp
ss
int
es
sub
xlat
shlb
cmp
mov
push
add
pop
xchg
push
outsl
push
imul
and
iret
lret
xor
push
test
std
fs
loop
mov
pop
mov
cmp
inc
aaa
xchg
jae
test
scas
scas
test
icebp
cld
or
dec
push
or
pop
push
cltd
cltd
cld
call
addl
mov
xchg
sub
pop
xor
outsb
and
mov
cli
nop
test
fdivrs
mov
notl
mov
mov
nop
cmp
out
divl
sub
cmp
push
pop
mov
imul
inc
mov
lret
inc
stos
icebp
insl
sub
pop
loope
xchg
sbb
ja
jo
arpl
mov
pop
test
psubw
leave
xlat
retw
adc
jge
movl
xchg
rclb
adc
mov
cs
out
cmp
leave
mov
arpl
in
test
mov
repz
movsl
lods
and
sub
xchg
dec
lods
mov
ret
das
dec
mov
jg
mov
in
or
scas
mov
rcr
mov
jle
inc
rcl
or
stos
xchg
cmp
dec
or
rcrl
cmp
ds
mov
ds
jo
pop
xor
std
xchg
lods
and
mov
pop
and
fucom
incl
mov
dec
lret
cmpsl
outsl
mov
nop
mov
jl
or
rcl
push
or
or
inc
cmpsl
sub
ljmp
xchg
push
adc
sbb
aaa
mov
inc
xor
mov
xorl
int3
adc
push
lret
cld
cmpsb
adc
mov
add
loopne
mov
add
out
xchg
pop
aad
imul
das
push
aad
mov
lds
dec
inc
jge
les
push
xorb
adc
cltd
sub
xorl
push
adc
leave
int
xor
ret
inc
push
push
adc
fidivrl
mov
and
inc
fdiv
jns
add
mov
xchg
pop
jecxz
jb
adcl
push
pop
or
pop
loopne
imul
pop
outsl
mov
andb
and
cmpsb
and
subl
insb
xor
out
or
mov
lock
inc
adc
stos
push
idivl
mov
push
enter
subb
popa
jbe
mov
or
lods
push
sbb
repnz
cmp
ror
fmull
jbe
imul
ja
pop
sbb
pusha
xlat
enter
sub
jecxz
xlat
push
arpl
sub
jae
pop
pushf
ret
stc
addb
out
jge
mov
xlat
or
gs
mov
sbb
shrl
sti
inc
push
arpl
add
mov
inc
repnz
in
outsb
push
lea
adc
rclb
jnp
xchg
pop
jp
xorl
add
add
fs
stc
lret
out
sub
clc
pusha
imul
imul
out
movsb
mov
sub
jns
sbb
js
nop
or
mov
mov
sub
jl
lods
jecxz
in
push
out
sbb
nop
mov
xchg
jnp
cmpsb
xor
cs
jle
mov
loop
pushf
icebp
sahf
nopl
ret
lret
scas
xlat
xorl
jge
pop
mov
sti
cs
add
lret
out
add
out
push
adc
jbe
movsb
sub
jo
lock
cli
outsb
out
lcall
cltd
insl
push
fcoms
mov
iret
stos
jle
jge
push
jns
loop
add
aad
scas
pusha
add
testl
aaa
test
dec
mov
in
pop
mov
inc
loope
pushf
or
mov
mov
pop
shlb
aaa
or
jge
jg
sbb
pop
push
inc
adc
addl
mov
pop
jno
enter
sub
mov
push
iret
lret
lock
sbb
mov
add
jae
dec
mov
nop
xor
add
int3
mov
ret
xchg
mov
loope
adc
xchg
outsl
mov
inc
stc
sbb
dec
mov
inc
test
pop
cmp
dec
sbb
dec
pushf
pop
dec
pop
mov
mov
stc
andl
sub
and
nop
sub
inc
and
out
jns
fbstp
xchg
or
aad
icebp
cltd
shlb
jo
mov
jnp
push
adc
push
ret
pusha
pop
mov
mov
lds
js
ljmp
or
and
stos
mov
mov
ds
sbb
out
cmp
push
or
jb
testb
inc
sbb
out
sub
mov
adc
cmpsl
stc
pop
pop
stc
test
mov
lea
les
jno
xor
js
pop
and
add
pop
outsb
out
rorl
fs
push
jbe
pop
les
sahf
adc
sarb
dec
inc
int3
test
in
nop
mov
push
or
push
mov
mov
xor
fwait
test
sub
xor
xchg
cmp
ret
mov
adc
les
out
cmp
pop
adc
rcrl
add
and
cmp
jle
rorb
imull
push
fdivrl
inc
jnp
imul
icebp
push
daa
add
xchg
jbe
insb
ljmp
mov
pop
repnz
outsb
repz
out
popa
cmp
and
push
imul
cmp
adc
testl
ret
xchg
imull
mov
std
subb
add
push
int3
mov
out
adc
lock
pop
mov
dec
iret
mov
bound
xchg
pushf
push
cmp
je
push
pop
xor
test
add
and
and
fcmovbe
mov
mov
ret
push
xorl
mov
in
push
pop
pusha
movsl
ret
xor
sti
shl
push
sahf
arpl
xchg
or
mov
lock
call
jo
cmp
or
mov
aaa
int3
mov
lea
xor
mov
sub
daa
jge
sbb
or
andb
sbb
adc
dec
lcall
stos
and
push
fiadds
pop
test
pop
imul
lahf
xchg
or
dec
scas
pop
sub
adc
fimull
push
mov
sub
call
xchg
popf
repz
jns
test
es
rcll
sbb
cmp
sbbl
iret
inc
imul
addr16
xor
testl
je
push
and
rcll
mov
dec
leave
mov
pushf
je
into
xor
dec
mov
adc
in
es
clc
adc
mov
cltd
arpl
jecxz
sbb
mov
dec
bound
icebp
jp
dec
mov
into
mov
insl
pop
add
inc
mov
mov
xchg
xor
stos
js
jecxz
fwait
in
mov
sarb
outsb
mov
lcall
mov
jns
andb
aam
outsb
adc
push
adc
push
cmp
jge
jae
mov
mov
xchg
sub
adc
inc
aas
push
sbb
or
subl
or
sahf
mov
dec
out
andl
cmp
xchg
xchg
and
add
stc
jae
xchg
mov
enter
xchg
pop
lods
cltd
dec
pop
dec
out
pop
cltd
xor
mov
clc
mov
in
and
or
sbb
xchg
or
or
in
aaa
pop
rcrb
jmp
or
outsb
sbb
mov
fwait
mov
in
movb
pop
cli
loopne
pushf
pop
ds
mov
xchg
enter
insl
rcl
dec
test
cmp
cmp
xor
je
jb
jl
andb
fs
cmp
jmp
notl
imul
sub
xlat
fsubl
pop
cmc
mov
push
mov
and
adc
imul
repz
xor
mov
movsb
pop
sarb
jmp
inc
imul
js
or
and
add
mov
sbb
jbe
or
mov
xor
insl
mov
push
rcll
sbb
jmp
push
nop
fnstcw
popa
jmp
jo
int3
dec
xor
aam
fisttpll
clc
not
inc
aaa
call
mov
or
pop
movsl
repnz
clc
jmp
ficoml
jns
daa
jae
inc
in
adc
xchg
cmp
jmp
lods
xchg
add
imul
xor
popa
inc
test
jo
mov
lea
sbb
mov
adc
fldl
inc
fimull
xchg
inc
adc
roll
dec
xchg
pop
fcmove
shl
pusha
pushf
xor
sti
adc
and
jmp
pop
or
ds
jl
lods
movsl
loopne
xor
das
jle
clc
inc
shl
lahf
mov
out
jl
imul
popl
adc
inc
mov
add
jle
imul
adc
mov
lcall
mov
mov
xor
jmp
xor
ret
and
fcompp
adc
xchg
mov
jo
mov
fimull
test
sbb
mov
cmc
xchg
call
xchg
movsb
jne
or
daa
mov
or
popf
xor
fldenv
cmpsl
lcall
inc
jmp
push
xor
jne
push
or
in
mov
adc
aam
rcl
insl
mov
adc
lret
lea
push
ficoms
add
or
cmp
sub
xor
jae
sbbb
imul
fnstenv
pop
inc
sub
es
mov
add
adc
mov
cmpsl
adc
shlb
jne
pusha
mov
push
mov
arpl
mov
mov
xchg
dec
popa
pop
or
mov
and
inc
pop
mov
add
iret
mov
test
je
and
out
loopne
andl
dec
pavgb
mov
hlt
int
and
stc
xorl
sahf
into
outsl
test
icebp
jg
lods
jnp
pop
mov
shlb
jae
test
stos
nop
jae
cli
sub
mov
iret
xor
andb
xchg
jo
xchg
pop
or
push
mov
xchg
movsl
jmp
add
mov
xor
jg
cwtl
mov
sarl
pop
mov
jmp
push
jns
mov
push
xchg
inc
dec
rcr
mov
fdivr
pop
int3
aaa
or
jp
aam
adc
jecxz
dec
or
stos
sti
mov
call
or
popf
adc
push
push
idivl
mov
dec
loop
dec
inc
push
xor
dec
cmp
mov
xlat
mov
xor
fs
lahf
push
adc
pop
ja
ret
stc
sub
test
movsl
in
push
or
mov
rol
push
fwait
push
jns
ret
inc
mov
cmp
in
addr16
adc
sbb
lcall
pop
add
cltd
sub
add
push
mov
add
sub
sub
dec
cli
mov
push
push
sti
pop
fs
fnstcw
test
lret
and
mov
outsb
rorl
hlt
pop
jb
mov
lock
mov
mov
push
mov
inc
mov
in
and
mulb
out
gs
nop
nop
mov
cmpsl
sbb
lahf
jg
inc
and
adcl
push
fldt
sub
flds
add
or
movsb
add
subb
loopne
aam
jl
nop/reserved
xor
push
mov
aam
jl
ds
jb
push
andb
stos
adcb
cwtl
mov
out
push
add
mov
jle
sbb
ss
mov
mov
jmp
inc
gs
aas
adc
out
je
mov
cmpsb
xor
inc
jge
mov
scas
jb
stc
push
fmulp
sahf
or
pop
xchg
mov
int3
lret
cmp
and
inc
xchg
shlb
and
mov
mov
subl
pop
or
jge
test
and
mov
call
repnz
lods
into
imul
mov
lret
insb
add
mov
out
cmpsl
nop
jo
and
adc
iret
movsb
cld
inc
mov
leave
push
mov
scas
adc
addr16
pop
out
fdivp
cmp
sub
xchg
xchg
cli
es
fistpll
mov
xchg
inc
in
ret
out
dec
das
cmp
sti
sahf
in
loope
push
push
inc
pusha
sar
mov
inc
daa
mov
fdivrs
cltd
je
jl
and
ret
sahf
sbb
int3
and
outsb
cmp
pop
mov
cmp
cmp
sarl
mov
outsl
sbb
shl
sub
in
int3
mov
cmp
out
mov
push
sub
testb
test
lret
cmc
mov
mov
stc
push
dec
mov
cmpsb
imulb
push
pop
es
sbb
int
dec
fldcw
push
push
mov
mov
mov
fwait
call
fstps
shll
mov
mov
mov
negb
jge
lods
in
flds
pop
aam
cmpsb
gs
push
cld
mov
fnsave
xchg
jne
xor
adc
gs
push
mov
cmp
mov
test
mov
jae
shl
jle
scas
int
and
daa
cmp
ret
jns
jo
into
sub
in
cmpsl
cmp
into
lock
xchg
jge
out
mov
scas
cmp
sub
cmpb
es
in
adc
jae
sbb
scas
test
push
arpl
and
jp
pop
and
insb
in
mov
shlb
mov
imul
mov
adc
xchg
sbb
or
mov
cmp
stc
enter
mov
push
push
outsl
cmp
lahf
dec
les
sbb
sbb
mov
adc
jp
adc
repnz
dec
imul
jo
dec
or
mov
jnp
aam
and
jl
out
mov
xchg
cs
js
sbb
decb
adc
fisubrs
jp
adc
or
xor
call
out
nop
pop
and
or
scas
cmpsb
popf
fcmovu
clc
sub
les
adc
push
jg
push
dec
hlt
push
and
orl
inc
sbb
arpl
jae
jns
push
test
mov
ljmp
icebp
cs
out
cmp
pop
push
jns
shr
sbb
mov
push
or
div
jnp
lcall
add
pop
aam
leave
fs
shll
dec
jb
pop
inc
test
ds
add
jmp
cmp
loopne
mov
pop
adc
xlat
cli
xchg
outsb
mov
lar
sar
pop
sbb
fsubrl
ffree
sub
mov
repnz
mov
insb
ljmp
je
inc
xlat
lods
into
xlat
das
jne
test
imul
jo
lock
or
cwtl
cmovle
pop
nop
mov
ljmp
jno
loop
cmp
adc
xchg
xchg
call
inc
xchg
cmpb
fmuls
mov
push
ret
or
inc
mov
adc
je
clc
inc
adc
xchg
cmp
loop
xchg
shlb
push
ljmp
jns
out
xchg
sub
daa
out
popa
push
idivb
inc
rolb
adc
jmp
cltd
sub
out
lods
lret
orl
xchg
sub
sbb
push
ss
adcl
cltd
stos
sbb
imul
add
cmp
arpl
rol
ucomiss
inc
or
push
cmp
mov
xor
push
loopne
lods
cltd
outsb
sub
mov
dec
fwait
iret
into
xlat
push
int
jecxz
mov
ret
in
adc
mov
test
fdivrp
call
outsb
pop
mov
mov
mov
iret
cltd
and
add
insb
push
mov
pop
repnz
pop
rcll
ljmp
inc
lahf
stos
les
cmp
push
or
ds
popa
movsb
xchg
xchg
jg
xchg
fs
jno
mov
xlat
loop
lock
push
push
test
push
sti
push
sub
fdivrl
adc
jb
jbe
mov
aas
rcl
cmpsb
mov
pop
imul
add
push
loope
or
and
mov
cmp
sbb
daa
mov
sub
inc
ficoms
aad
dec
dec
xchg
movsl
ja
xlat
jg
in
or
pop
or
repz
imul
into
jge
jecxz
lahf
clc
pop
pushf
adc
add
lea
and
mov
mov
jl
mov
sbb
push
lds
inc
pop
add
int
xor
xchg
push
push
loope
outsl
arpl
fildl
pop
aad
insl
fldl
mov
out
push
daa
pop
rep
insl
andl
rolb
lea
jo
sbb
stc
shr
sbb
es
cmp
mov
lea
ja
out
xchg
jle
outsl
notl
adc
or
loopne
or
dec
movsb
cmp
add
pop
add
lret
pop
aad
push
pushf
imul
pop
test
in
dec
das
sbb
pop
push
mov
sub
imul
leave
jmp
sbb
mov
cmp
dec
jns
dec
mov
fisttpl
sub
insb
pop
xchg
clc
call
jo
push
fldcw
test
scas
inc
ljmp
pop
mov
add
mov
xor
int
jge
popf
lea
lahf
into
inc
fcomp
dec
jo
push
data16
cmpl
and
popa
sub
daa
cmp
and
andl
lock
mov
jno
lea
and
loop
mov
mov
and
cwtl
scas
loop
insl
jmp
sub
filds
addr16
mov
cmp
sahf
sbb
lea
dec
cs
ret
sub
jbe
test
jge
dec
jl
fdivrs
adc
std
dec
jbe
pop
cltd
cmpsb
cli
push
or
cmp
pop
xorb
mov
adc
push
int
xor
movsl
arpl
mov
jg
add
rorl
pop
xlat
fbstp
lea
shlb
sbb
add
xlat
jge
cmpl
jbe
add
ret
incl
in
daa
pop
jno
clc
cmpsl
jmp
push
mov
cmp
cmp
sarl
add
sub
addr16
pushl
jbe
js
adc
arpl
test
mov
cmp
es
push
lcall
andl
and
xor
test
rcrl
rorb
xor
popa
lahf
pop
mov
jno
jbe
inc
outsl
incl
or
stc
mov
cmp
mov
scas
cmpb
test
out
jae
sub
dec
push
jmp
or
jg
jns
jge
fadds
push
lret
push
add
and
fiaddl
test
add
test
pop
adc
pop
nopl
mov
cmpsb
in
mov
mov
mov
or
pop
iret
lret
xchg
cld
mov
fildl
mov
or
dec
jecxz
outsb
pop
imul
cli
rolb
cmp
lret
push
cmc
sti
jge
int3
jae
in
sub
sub
push
push
aas
mov
mov
xchg
jge,pn
das
mov
mov
in
in
add
pop
jge
xor
pop
or
pop
outsb
daa
decb
or
sti
jbe
scas
es
je
fldt
fmull
lcall
push
ret
xchg
cmp
das
mov
pop
scas
lea
sbb
xchg
test
jg
mov
mov
jge
std
jge
in
aad
mov
xchg
jnp
push
cmpsb
aas
or
mov
pop
cmpsl
fbld
stos
and
cli
fmul
xchg
cmp
hlt
adcl
inc
rcll
jg
pop
and
push
pop
jne
or
jb
mov
outsb
cmpsb
and
xor
in
push
mov
pop
fildl
xchg
or
stos
shl
fnstsw
xchg
stc
mov
outsl
orl
int3
enter
and
in
and
dec
mov
jno
and
fistpl
mov
adc
inc
ret
xchg
jge
dec
pusha
or
arpl
sbb
std
loopne
clts
arpl
ss
cmpsb
dec
je
xor
mov
ja
jo
js
cmpl
push
clc
outsb
es
je
mov
es
fst
imul
cmc
mov
xchg
jg
cwtl
das
movl
add
cli
das
add
and
mov
outsb
inc
sub
or
testl
fsubrs
cs
cmpsl
xchg
push
push
jg
dec
adc
pushf
es
cmpsl
jbe
jmp
mov
dec
xchg
aad
mov
cmpsb
sub
inc
dec
into
stc
and
ja
movsb
push
ja
adc
ds
adcl
mov
aas
xchg
sarb
sbb
dec
adc
push
cmc
cmp
rclb
jns
lea
mov
adc
imul
push
lods
in
cmp
xchg
stc
pushfw
jp
xchg
or
inc
mov
push
dec
clc
mov
mov
dec
sub
dec
icebp
adc
jg
pop
adc
inc
lds
cli
lret
roll
fmull
jle
push
cld
fwait
lret
mov
cmp
out
std
in
jb
sti
xrelease
mov
xchg
pop
hlt
fldenv
dec
orb
add
mov
sub
loopne
sub
sbbb
push
in
mov
jle,pt
mov
or
adc
movsl
sarb
arpl
popf
push
sub
ss
ljmp
out
xlat
xor
lahf
xchg
add
xchg
out
adc
cmovnp
push
pushf
int3
and
stc
xchg
or
clc
inc
pop
aam
shrb
push
mov
rorl
addr16
cli
inc
sub
stc
pop
xor
mov
xlat
inc
jle
mov
popf
pop
in
mov
shl
int
dec
jmp
xorb
inc
lret
fisubs
shll
popf
pop
jle
popf
mov
xchg
jle
lcall
std
pop
sbb
dec
rcrl
popa
imul
sub
test
outsb
sbbb
xor
sbbl
jbe
push
stc
dec
or
push
mov
xor
jne
test
xorl
sbb
pop
enter
adc
loope
pop
inc
jg
inc
in
ja
das
pusha
mov
stos
and
inc
call
shl
insb
xor
dec
mov
inc
lods
lahf
in
cmp
ds
test
ja
iret
jmp
jp
in
out
or
enter
adc
scas
icebp
stc
ss
mov
xor
pop
out
xor
inc
jb
mov
push
mov
insl
ljmp
lret
mov
or
lret
das
add
fisubl
sub
or
aaa
movsl
fcompl
xor
loop
ret
data16
push
arpl
fsubrs
dec
sbb
inc
in
repz
lahf
mov
fcom
inc
lods
xor
enter
nop
jnp
popf
aas
xchg
cmp
enter
sub
mov
jnp,pt
inc
push
and
int
rcrb
pop
pop
dec
cmc
fs
adc
inc
je
pop
xchg
fists
mov
mov
loope
xchg
pusha
dec
add
xor
and
inc
dec
push
pop
icebp
enter
mov
mov
test
pop
xor
or
sbb
in
sti
pop
mov
and
out
pop
test
or
xor
dec
push
movl
add
jl
add
cmp
push
into
xor
jae
xchg
jmp
mov
mov
loope
dec
inc
push
test
push
add
roll
pop
and
xchg
loop
movsb
inc
jo
jl
cmp
loop
jge
xchg
or
call
pop
test
cmc
rorb
xchg
jge
or
dec
popa
fildl
push
sub
hlt
clc
ss
cld
das
loop
and
jbe
decb
push
and
sub
mov
icebp
test
cmc
lcall
push
jne
test
jecxz
push
movsl
jge
sbb
les
enter
push
insb
sbb
push
call
and
ja
cmpsl
das
data16
lea
add
movsl
xchg
cwtl
movsb
jmp
dec
aaa
pop
push
in
ret
inc
jmp
and
dec
sbb
cmp
imul
adc
adc
sub
xor
cmp
mov
inc
out
inc
mov
push
mov
ljmp
mov
aad
jnp
faddp
sub
addl
lds
arpl
push
adc
inc
inc
pop
push
lahf
ficoml
jmp
mov
pop
movsb
pop
jnp
clc
leave
xchg
push
push
adcb
pushf
aam
into
test
imul
lock
mov
mov
sbb
lods
or
fs
pop
je
add
test
pop
pop
cmp
daa
sarb
insb
or
popf
fs
push
loope
pop
add
pop
fistpll
gs
jnp
enter
sbb
dec
adc
cld
stos
fsts
out
mov
test
cltd
mov
push
hlt
adc
aad
ret
sbb
jne
mov
bound
mov
fdivr
lcall
xchg
inc
jp
add
push
js
jb
or
push
push
in
mov
xchg
mov
xchg
jb
mov
rcr
dec
ret
xchg
insl
or
scas
fstps
xor
jne
cs
outsb
cmpsl
lods
jno
cld
mov
test
jb
add
xchg
iret
xchg
push
inc
push
dec
imul
lahf
xchg
push
add
dec
in
sub
push
mov
stc
and
ret
xchg
fwait
js
xchg
clc
int
popf
add
js
mov
loop
in
divl
divl
add
and
xchg
sbb
das
push
inc
in
cmp
jbe
jle
mov
xor
sbb
rol
fs
cmpsl
sbb
xor
inc
pop
sti
mov
scas
fisubrl
sti
cmpsb
sub
sbb
fs
outsl
out
scas
push
inc
dec
jmp
pop
mov
jne
jge
out
cmp
xchg
mov
gs
add
push
cwtl
std
mov
inc
cmp
xor
jp
test
shrb
out
leave
movsl
cmpb
or
sbbl
add
inc
dec
jle
or
in
xacquire
or
mov
cmpsl
adc
pop
pop
fbstp
jno
cmpsb
test
lret
push
scas
lahf
xchg
adcb
das
stos
inc
fnstsw
dec
stc
mov
xchg
test
dec
inc
xchg
scas
mov
mov
sti
cmp
pusha
fucom
mov
aam
xchg
leave
inc
fcmove
int
xchg
mov
dec
mov
push
ds
and
movsl
ljmp
pop
aas
sbb
push
or
outsl
pushf
sbb
jne
xor
ret
mov
inc
pop
push
jle
mov
adc
dec
pop
sub
sub
dec
pusha
adc
sub
imul
jbe
adc
cmp
arpl
ljmp
push
in
shlb
jg
lcall
aad
andl
inc
jl
mov
outsl
and
add
jmp
and
or
push
popa
push
das
mov
cmp
imul
lods
test
pop
push
mov
jns
sarl
jmp
icebp
push
xor
sub
adc
in
mov
sub
bound
dec
mov
mov
aaa
jl
dec
cmp
and
addb
xchg
andb
fidivl
add
fwait
pop
xchg
sub
daa
fbld
inc
dec
jo
mov
mov
int
mov
nop
fisubrl
sbb
sbb
stos
dec
jg
mov
dec
scas
and
or
jo
ja
sub
mov
lahf
popf
lret
push
lcall
xor
cmpsb
cmpsb
or
orl
aaa
dec
fstl
sub
sbb
cmpl
xor
fsubrl
daa
test
sub
rorl
dec
das
push
sbb
xchg
adc
pop
inc
cwtl
sbb
or
bsf
cs
adc
lea
outsb
mov
jbe
and
gs
sub
xchg
inc
in
add
dec
jns
idivl
dec
mov
in
mov
call
in
lahf
lods
adcl
sbb
mov
mov
jge
or
and
mov
mov
int
pop
mov
mov
lds
mov
pop
dec
jmp
mov
xor
mov
dec
and
mov
scas
addb
out
stos
pushf
xchg
arpl
out
jp
dec
jnp
mov
fs
shrl
cmpsl
shlb
mov
stos
and
push
inc
jbe
aam
pusha
cmp
enter
call
pop
frstor
dec
std
fs
icebp
aam
stos
movsb
cmc
adc
std
add
ret
in
in
sub
ljmp
add
leave
lea
inc
popf
xchg
pop
mov
push
mov
loop
fwait
sti
icebp
xor
imul
lcall
mov
gs
fdivs
movsb
scas
mov
in
pop
mov
sub
shrl
loopne
jno
fbld
add
xor
cmp
fnstenv
sbb
xchg
cmp
leave
test
jp
leave
daa
adc
cmp
icebp
loop
fsubl
popa
lcall
mov
adc
out
adc
shl
movl
les
jg
mov
popf
fs
mov
fidivrs
jecxz
inc
in
sbb
or
filds
gs
fiadds
into
mov
out
arpl
add
enter
mov
addr16
popf
jg
push
ret
out
fidivs
fyl2x
pop
jge
push
xchg
or
or
subb
cmpsb
add
into
rcrl
cltd
inc
arpl
xchg
or
cmp
add
es
cmpsb
push
xor
aaa
cli
in
lahf
sarb
sbb
sbb
addr16
jbe
inc
adc
or
and
and
repz
cltd
shlb
pushf
xor
lock
aam
xchg
aad
jp
xchg
sub
mov
jmp
loopne
ret
out
xor
push
movsl
and
test
imul
ds
push
xor
pop
jl
xchg
ds
jae
arpl
push
or
sbb
cld
sti
subl
mov
push
testl
int3
in
cmp
push
daa
bound
cmpsl
outsl
and
xchg
and
mov
mov
cwtl
test
cmp
xor
hlt
sti
adc
dec
pop
call
outsb
adc
aaa
dec
dec
xor
sbb
pushf
mov
popf
shl
lretw
mov
xchg
xlat
cwtl
aam
arpl
pop
xchg
adc
stc
imul
cmp
lret
cmp
or
dec
std
pop
in
xor
out
in
push
push
adc
imul
cmp
jns
popf
das
push
and
pop
jbe
arpl
mov
dec
jo
stos
je
aaa
xchg
fisubrl
aaa
lcall
xor
jnp
jp
imull
aas
fcmovne
and
cltd
bound
and
pushf
fistpl
xchg
xchg
nop
push
inc
sub
popf
xchg
pextrw
and
test
nop
iret
nop
push
sbb
scas
jno
or
loope
lret
in
pusha
jp
jns
loopne
xchg
xor
loopne
push
mov
add
push
push
bound
push
mov
mov
notb
iret
mov
cmp
mov
cmp
mov
pop
jg
cmp
ret
cwtl
sbb
stos
imul
mov
rclb
jle
add
es
inc
sub
jne
sbb
xchg
js
sub
in
lcall
pop
icebp
sub
popa
popa
push
stos
xor
inc
std
fists
dec
inc
sti
sbb
sub
adc
inc
movl
addr16
dec
filds
outsb
sarb
xchg
mov
ljmp
int
and
push
adc
movsb
mov
sbb
stc
jae
stc
mov
sbb
lret
sahf
push
shl
lcall
jns
jl
adc
adc
jae
mov
xchg
jp
pop
xor
and
xchg
and
negb
lds
add
aaa
cmpsl
inc
vmovups
ret
sub
jo
jle
das
sar
cmp
cmp
mov
scas
movsl
fisttps
rclb
sbb
jg
dec
jo
mov
sbb
ja
add
mov
imul
adc
adc
les
movl
enter
pop
cmp
clc
test
mov
xor
push
jge
add
and
lcall
shl
fimull
imul
in
insb
or
mov
inc
mov
jns
mov
cmp
cmc
mov
je
inc
adc
xchg
sbb
pop
imul
xor
or
out
jae
out
fistl
idivl
add
cmp
jecxz
outsb
frstor
pushf
inc
inc
fcomps
outsb
xchg
sub
lds
stc
arpl
push
idivl
leave
aad
pop
jnp
shlb
xchg
sbb
mov
adc
cmp
mov
dec
pop
add
and
mov
cmp
add
push
aaa
in
movsl
mov
shrl
repnz
jg
in
std
and
stc
xchg
scas
bound
lock
sbb
shlb
mov
insl
push
sub
pop
mov
scas
outsl
out
xor
mov
ja
cli
pop
jae
xchg
das
lds
insb
adc
xchg
xchg
mov
arpl
test
cmpsl
inc
mov
jle
or
sti
mov
xchg
aas
mov
out
or
add
negl
pop
imul
fidivrl
testb
orl
dec
faddp
jge
mov
add
mov
aam
test
dec
lods
lcall
dec
in
leave
xor
cmpl
inc
test
mov
jns
rclb
lds
std
insl
or
add
stos
addw
rol
pop
dec
pop
jge
adc
sub
je
out
js
insl
movsb
stos
out
outsb
sbbb
cs
push
push
inc
cwtl
inc
or
jg
xchg
push
dec
data16
jb
fisubl
lret
ret
push
jmp
inc
ficoms
cmp
cmp
ja
gs
sbb
cmp
jbe
mov
sub
loop
and
jne
dec
add
inc
adc
jo
pop
xchg
lret
mov
hlt
and
xchg
test
ficoml
movsl
sbbl
ja
inc
sbb
out
jg
jo
stos
add
push
xor
jae
outsb
pushf
into
and
adcl
pop
dec
mov
icebp
and
mov
test
sub
and
pop
xor
pop
sahf
lods
mov
imul
mov
xchg
outsb
xchg
mov
icebp
test
mov
pop
sbb
lret
adc
inc
push
inc
sbb
mov
aas
sbb
jns
into
int
sub
or
fstps
jp
lahf
inc
fs
and
ret
rorl
cmp
dec
jmp
add
push
jbe
mov
call
cs
and
cmp
daa
cwtl
mov
leave
das
or
push
fcmovnb
aad
lret
jns
aad
imul
mov
dec
cmp
das
xchg
daa
sub
mov
test
push
filds
mov
jo
subb
cli
mov
mov
ret
sbb
mov
mov
cld
inc
push
ficoms
push
addr16
mov
les
adc
icebp
fidivl
xlat
jg
aad
mov
nop
push
repnz
sti
mov
sahf
mov
call
ret
push
nop
loop
es
sbb
out
mov
adc
jecxz
daa
cmpl
xlat
jg
ret
in
mull
stos
push
adc
in
std
xor
mov
mov
pop
popa
mov
bound
push
fstps
icebp
jge
mov
mov
bound
ret
sbb
fsubs
push
sub
int3
sub
xor
aaa
loop
push
sarl
fs
fdivrs
inc
xchg
pop
lds
roll
repnz
loopne
xchg
mov
push
mov
cltd
sub
jl,pt
sbb
testb
stos
add
jno
aas
sbb
xor
push
xchg
xor
cmp
out
mov
mov
mov
out
xor
and
mov
jl
int
mov
xchg
andb
mov
inc
fdivr
mov
cmp
xchg
daa
testl
cmp
repz
je
outsb
movsl
add
sub
lea
rcll
jl
cmc
rcl
sbb
scas
fdivr
pop
test
push
pop
push
jge
mov
arpl
stos
mov
mov
sub
mov
mov
jp
pop
gs
jp
jns
or
add
cmpsl
inc
xor
inc
out
ss
inc
jmp
add
lods
push
fnstcw
jg
xchg
popa
aam
inc
or
cmp
mov
cli
lret
movsb
sbb
jnp
or
es
jmp
sti
push
add
movsb
pop
adc
mov
mov
mov
xchg
or
dec
inc
loope
sub
mov
cld
out
lods
shrb
fimull
or
icebp
jg
test
and
mov
in
push
add
push
sub
inc
dec
out
ss
faddp
rcrb
popa
fdivrp
aam
cld
xor
popa
lcall
in
add
dec
jbe
dec
pop
jmp
sub
or
arpl
ficoms
xor
lret
lcall
mov
push
push
rcll
in
mov
jg
stos
jne
sahf
mov
fsts
clc
mov
out
cmp
mov
mov
cltd
push
add
push
xor
pop
mov
sbb
shr
xchg
jno
jo
mov
or
lret
xorl
lret
imul
sub
pusha
loope
fdivl
imul
movb
jge
fstl
mull
in
push
decb
lret
xchg
cmc
sbb
out
scas
and
cld
mov
in
ss
or
rolb
mov
stos
inc
addr16
outsl
in
in
repz
xor
or
stos
xor
rclb
or
js
loopne
inc
mov
test
rcrb
inc
stos
cmp
pop
in
data16
cld
fst
push
orl
inc
rolb
fisttpll
push
lcall
pop
jg
xchg
fcoms
mov
fstpl
mov
out
arpl
pop
les
mov
cmc
scas
inc
stos
repnz
or
sub
ljmp
aas
add
xchg
stc
sub
out
add
add
insb
jmp
faddl
pop
jno
sbb
jg
dec
jge
fisubrs
inc
mov
out
inc
cmp
sbb
sbb
cmp
mov
adc
mov
push
enter
mov
daa
mov
mov
cmp
mov
insl
xchg
repz
popa
adc
sbb
ljmp
fildll
loope
push
sbb
add
std
cltd
fisttpl
mov
sub
pop
addr16
and
divl
fstpl
bnd
dec
fldcw
iret
and
fidivrl
mov
sbbb
cmpb
nop
fdivp
inc
xor
pop
jge
mov
add
push
push
outsb
shrl
pop
dec
subb
call
adc
jbe
mov
adc
icebp
push
punpckhbw
addb
fldcw
push
cs
stos
popa
fcompl
ret
xchg
shlb
outsb
popa
je
aaa
imull
pop
ret
popf
sbb
mov
fisttpl
mov
jnp
jp
push
jbe
inc
add
sub
or
xchg
rolb
cwtl
dec
iret
push
adc
jne,pn
test
loop
mov
ds
ja
adc
incb
dec
ja
ret
push
xor
call
jg
aaa
stc
outsb
fnsave
and
stos
jmp
push
fldcw
cmp
mov
es
sbb
outsb
outsl
frndint
sub
mov
shl
or
je
dec
xchg
data16
test
xchg
sub
xor
sub
lret
and
and
test
or
out
enter
mov
mov
push
inc
addb
sbb
fcmovbe
xor
sbb
lret
adc
jmp
pop
cmp
ficoms
pop
sub
or
mov
xor
popf
xchg
scas
cmpsl
xchg
or
cmp
jmp
jecxz
cld
and
and
jp
or
cs
inc
and
cmp
xchg
aam
push
arpl
mov
pop
or
lea
test
roll
shr
pusha
or
sbb
enter
fmuls
xchg
shrb
dec
xchg
shrl
fisttpll
shll
push
and
stos
test
shll
rcrl
and
je
fs
mov
or
mov
mov
mov
push
mov
inc
pop
jbe
mov
pop
jno
add
cmp
pop
insb
mov
iret
lea
dec
sahf
test
ja
clc
or
xorb
sbb
jo
insb
pop
das
clc
add
int3
mov
add
out
das
cs
jb
imul
mov
adc
dec
xor
ss
ret
shll
and
cmp
and
fistpll
sub
dec
dec
and
pop
pop
mov
sahf
cmp
mov
scas
push
sahf
jecxz
test
mov
push
sub
cli
fs
xor
in
jne
inc
jge
shlb
fisubrl
and
loop
jle
out
cmpsb
out
jne
xor
out
push
cmp
add
sub
mov
loope
pusha
xchg
or
mov
repz
sar
test
pop
fstps
daa
xor
js
xchg
int
mov
or
ret
dec
clc
fbstp
sbb
lods
cmp
stos
sbb
iret
pop
hlt
add
mov
repz
sub
out
stc
mov
dec
iret
mov
push
and
pop
inc
xchg
cmpsb
sbb
popa
imull
pop
cmp
xchg
fdivl
or
or
pop
mov
fldt
nop
xchg
mov
pop
jae
dec
mov
data16
lea
push
fwait
and
int3
dec
or
mov
sub
inc
call
inc
push
and
popl
jae
inc
inc
in
adcl
cmp
pop
es
fimuls
movsl
sti
shl
out
out
bound
mov
ds
inc
sub
jns
dec
mov
cld
lds
inc
lock
jns
mov
ss
imul
cld
iret
dec
pop
addr16
lds
xor
fdivrp
out
fsubl
out
push
adc
cmp
in
lods
lds
pop
lods
test
pop
add
push
popl
pop
cmpsl
out
jecxz
cltd
xchg
jecxz
sub
dec
aam
mov
repz
mov
lcall
pop
cld
mov
mov
mov
mov
push
arpl
pop
cs
lock
lds
jne
cmp
mov
jp
aaa
or
dec
sub
movsb
jecxz
pop
push
test
popf
cmpsb
out
mov
test
jg
test
ret
gs
jo
test
popa
sub
adc
mov
test
pop
gs
push
jp
jmp
mov
mov
fmulp
xor
inc
shrb
pop
adc
rol
mov
ret
sub
loop
adc
mov
xor
mov
sub
add
sarb
push
jg
out
sbb
cli
or
lret
jge
ret
into
lea
mov
dec
mov
xchg
das
pop
cmp
xor
cmc
push
lock
mov
sub
das
mov
sbb
sbb
push
cwtl
jge
pushf
xchg
dec
out
sbb
sub
icebp
mov
mov
test
pop
scas
ret
mov
push
push
push
jl
sub
adc
push
cmp
jns
pushf
loope
jg
sar
pop
cwtl
adc
dec
inc
imul
and
repnz
fwait
mov
add
aad
jae
cmp
sub
push
and
stos
push
inc
dec
jb
ja
mov
mov
jle
lock
loop
xor
inc
imul
add
dec
dec
lret
push
xlat
sti
leave
jmp
mov
mov
xchg
inc
xchg
jg
sbb
pop
xchg
cmc
int
mov
mov
and
sub
mov
repnz
int
in
push
jne
fcoms
pop
push
ret
pop
dec
xor
sbb
fistpll
add
popl
ror
and
fwait
lcall
pop
xlat
out
ret
mov
mov
scas
testl
mov
push
jecxz
or
fnsave
fcoms
push
sub
inc
jmp
loope
add
es
arpl
shrl
push
mov
pop
in
test
mov
xchg
inc
jno
shrl
mov
mov
enter
mov
aad
add
sub
push
vmread
push
dec
adc
lcall
lods
testl
mov
iret
leave
imul
lahf
mov
inc
or
push
repz
inc
aad
stos
push
adc
iret
inc
aam
lds
jg
mov
xor
lock
fmuls
push
pop
jge
test
push
idivb
xor
adc
jns
adcb
or
repnz
mov
dec
mov
mov
pop
popf
add
adc
and
xchg
or
xchg
cmp
pusha
jo
push
aad
push
mov
mov
repz
cld
lret
out
pusha
xchg
push
aaa
inc
mov
pop
xlat
popf
add
rclb
xchg
aas
scas
cmc
push
sbb
repnz
pop
sbb
and
jge
outsl
inc
sub
xchg
push
mov
mov
sahf
mov
jle
icebp
jo
scas
rolb
inc
lds
push
mov
jmp
push
subb
out
std
sbb
and
les
movsb
pop
dec
mov
push
pop
stos
push
divb
push
dec
test
sbb
popf
in
mov
scas
mov
into
nop
in
pop
popa
lock
or
int3
xchg
imul
hlt
xchg
or
dec
adc
add
out
lock
mov
cltd
aas
scas
and
movsb
rcrl
push
aas
add
xchg
push
push
cltd
xchg
popf
dec
imul
insl
sbb
loopne
mov
xchg
push
mov
in
push
lds
xor
jp
push
xor
cmp
mov
cvtps2pd
push
inc
jmp
pop
js
adc
int
outsl
xor
icebp
repz
out
pop
jmp
push
jg
xchg
imul
aad
mov
dec
lods
lcall
cmpsl
xchg
in
dec
lahf
fadds
negl
xor
pop
lods
and
mov
xchg
jl
and
insl
les
push
or
jmp
xchg
adc
mov
pop
dec
inc
ds
cmp
inc
jno
outsl
xchg
jo
or
or
ja
jbe
es
cmp
shrl
pop
movsl
insl
aas
movsl
hlt
mov
and
dec
rcll
pop
into
mov
popa
pop
push
push
fidivl
mov
jge
jns
stos
jb
jns
cmpsb
mov
dec
pop
popf
push
mov
cltd
dec
sub
or
les
rorl
push
std
sbb
push
scas
dec
mov
mov
mov
inc
and
pop
adc
movl
mov
mov
rcr
or
repnz
arpl
and
pop
roll
out
rolb
cld
xchg
mov
addb
rcr
xchg
jo
dec
push
mov
rcrb
adc
mov
dec
pushf
and
pop
cltd
push
adc
pop
mov
jmp
xchg
popa
fs
or
adcb
into
sahf
mov
mov
xchg
pop
scas
pop
mov
jnp
insb
sahf
jno
mov
mov
pusha
lea
dec
and
test
outsl
push
repz
xchg
pop
outsb
nop
js
or
cmp
mov
inc
lds
mov
sub
in
xchg
leave
jbe
xlat
pop
dec
movsb
sahf
xchg
dec
rcll
sbb
lret
sub
clc
lea
dec
fsub
lds
iret
cltd
sbbb
das
mov
cmc
out
jmp
and
mov
popf
or
dec
cmp
jg
call
leave
jbe
xchg
lret
movsb
and
inc
test
xchg
or
sar
pop
sub
movsl
xchg
mov
gs
jnp
sbb
sbb
in
scas
arpl
dec
imul
jnp
mov
es
xor
mov
mov
mov
inc
lods
sahf
adc
mov
into
je
jbe
jge
stc
ds
mov
or
int3
sbb
mov
add
movsl
cmpsb
loop
adc
inc
dec
xlat
mov
and
and
xchg
clc
and
vunpcklps
pusha
out
mov
jno
jmp
pop
add
out
lods
cmp
or
mov
and
or
xor
test
push
mov
sbb
outsb
lret
out
jp
out
push
pop
dec
ss
cmp
jmp
mov
mov
cmp
lret
daa
shlb
imul
or
das
mov
jo
or
push
sar
or
in
pop
mov
sub
test
lds
stos
push
cld
and
fnstsw
sahf
xor
mov
ja
les
andl
cs
inc
push
fwait
aad
lock
mov
es
pop
xchg
jp
ja
lahf
push
jbe
mov
pop
cmpsl
push
scas
cld
out
pop
or
xchg
add
cmp
ljmp
hlt
and
out
call
sbb
sarb
dec
jns
pop
mov
bound
xchg
lods
call
test
mov
addr16
add
out
pcmpeqb
movsb
dec
push
das
cmp
notl
push
xchg
leave
jecxz
scas
testl
mov
fcmovnu
pop
std
fidivrs
ret
movsl
fdivrl
in
sarb
inc
fcomps
repnz
pusha
sub
insl
sti
inc
jns
mov
sub
or
lahf
adc
jg
add
leave
cwtl
add
outsl
shll
lahf
dec
cmc
adc
mov
push
mov
mov
aaa
xchg
in
ds
out
ljmp
popa
push
xlat
ficompl
jnp
mov
out
sub
pushf
push
cmc
pop
mul
pop
mov
adc
mul
adc
fcoms
mov
rcr
cmp
out
lea
leave
mov
inc
dec
stos
sub
mov
mov
or
movsl
adc
adc
sbb
outsl
lods
fistpl
xchg
jno
inc
popf
insl
lods
fdivrl
lahf
imul
lret
push
sbbl
ss
add
jae
inc
ss
cmp
mov
push
lods
dec
or
cmp
cwtl
push
jle
push
push
xor
push
mov
mov
push
inc
pop
sub
arpl
fldcw
out
lods
imul
mul
mov
cmpsl
mov
daa
sub
push
inc
dec
cltd
add
iret
out
or
pop
xchg
pop
adc
pop
sbb
xchg
fists
jnp
adc
cmp
push
dec
stos
movsl
xchg
push
jno
mov
pop
aas
into
xchg
sti
ret
negl
mov
ret
push
insb
sahf
add
mov
pop
imul
add
pop
outsb
gs
dec
jb
aas
add
jnp
cmc
jo
movsb
call
xchg
es
xor
sti
jg
daa
mov
sbb
jae
adc
sub
mov
mov
aam
flds
aas
dec
fisubs
mov
and
adc
xor
outsl
fisubl
xchg
jl
sbb
mov
insl
iret
inc
jle
mov
mov
push
in
push
imul
jno
xor
mov
jne
imul
aas
loope
cmpsb
pop
push
jns
jns
add
xchg
adc
adc
xchg
lods
arpl
push
and
cmpsl
int3
xchg
es
adc
movl
lods
outsb
adc
mov
incl
pushf
lods
mov
sub
or
out
aas
push
gs
inc
xor
jo
mov
and
adc
fsubrl
lea
and
cmp
aas
sub
sbb
hlt
inc
jge
daa
daa
and
popa
and
clc
pop
push
jmp
inc
dec
jno
or
pop
iret
insl
pop
mov
lahf
andl
ficoml
jae
out
imul
inc
sub
cmc
xchg
call
dec
push
inc
jbe
clc
in
jmp
fnstcw
pushf
and
dec
cmp
push
data16
adc
push
mov
add
xlat
std
push
int3
xchg
out
aaa
aaa
aaa
loopne
adc
out
pop
dec
out
jb
dec
and
cmpb
push
dec
fs
xor
stos
aaa
and
lcall
pop
mov
fstl
addr16
mov
xchg
sub
sub
dec
mov
add
lods
sub
int
fwait
lea
outsl
imul
add
xor
std
rcll
adc
bound
test
fnsave
jo
fwait
gs
pushf
repnz
push
sbb
shll
jbe
inc
ss
cmp
adc
ss
aam
aas
ja
test
scas
popf
sub
or
mov
add
dec
fisubs
pop
cli
mov
add
pop
adc
adc
movsb
jp
cld
jno
test
xchg
mov
sub
add
ret
sahf
and
cmpsb
mov
or
cmp
pop
test
jb
adc
mov
testl
jno
or
pop
in
lods
aam
cli
test
fs
imul
cmc
sarl
lret
push
fcmovnu
xchg
cmpsl
adc
fnstenv
mov
adc
and
test
sarb
push
adc
out
hlt
divl
xorl
dec
cld
movsl
jmp
pusha
mov
mov
pop
inc
addr16
pushf
mov
push
adc
insb
addr16
sbb
jmp
std
sahf
xor
adc
loop
sbb
xor
and
add
mov
pop
dec
mov
sub
out
dec
jnp
add
push
bnd
leave
xlat
push
pop
pop
pop
mov
dec
jmp
inc
lods
dec
cmp
dec
adcl
je
xlat
jl
mov
mov
adc
loop
repnz
cmp
and
or
and
int3
push
das
dec
push
aas
xor
mov
adc
movsl
jl
push
into
out
dec
push
es
push
mov
fstps
mov
lret
push
and
sbb
sbb
jne
fs
inc
xchg
fs
pop
sarl
bound
pop
mov
cmpl
fldl
cmpsb
aaa
add
jmp
aaa
mov
pop
bound
xor
push
es
cmp
xchg
sarb
loopne
jae
sbb
repz
mov
xor
cwtl
iret
repnz
cwtl
push
dec
outsl
xchg
pop
xchg
pop
cmp
cmc
cmpsb
into
adc
sar
lahf
rol
mov
int
mov
mov
add
push
lret
in
mov
push
inc
pop
add
cli
xor
aad
popf
adc
lods
push
adc
insb
dec
lret
aam
push
pop
xchg
movsb
cmpsb
lret
aam
sarb
mov
mov
lahf
pop
push
jb
mov
out
lock
sahf
repnz
push
shrb
and
sbb
jmp
or
mov
mov
pop
push
inc
sub
outsb
movsb
cltd
mov
xor
daa
in
rorl
xchg
mov
add
repz
pop
bound
mov
ss
sbb
in
xchg
mov
and
stos
sub
mov
shl
addl
das
cli
insl
mov
insb
fdivrs
add
and
jl
xchg
xlat
sub
xor
lcall
xor
jle
and
shlb
orb
pusha
inc
and
scas
sub
cwtl
adc
gs
pop
sub
pop
xchg
std
lea
pop
fcomi
rcll
movsl
add
js
icebp
adc
inc
aam
adc
rcrb
cli
in
arpl
pop
xchg
inc
in
mov
aas
ret
or
add
cmp
add
ljmp
mov
adc
cmp
sub
jns
mov
push
in
in
push
inc
jno
shlb
je
out
dec
pop
cmpsb
lea
nop
cld
in
sbb
mov
aaa
push
and
pop
orb
mov
pusha
lcall
inc
es
mov
push
xchg
jecxz
sbb
mov
xor
inc
stos
jle
lret
std
inc
pop
or
mov
pop
xorl
pop
movsb
test
mov
cmpsl
movsl
lret
sbb
aad
ret
sub
mov
xor
in
shl
xor
jge
pop
das
xor
pop
add
data16
mov
and
ret
into
push
add
sbb
dec
or
jmp
mov
hlt
insl
xchg
and
test
dec
lea
in
ret
pop
and
xor
dec
arpl
popf
rclb
adc
cmp
or
sahf
ss
sti
fistl
mov
mov
push
ja
ret
cli
inc
xchg
jo
xchg
jl
sbb
jl
mov
or
sahf
jp
mov
cmp
out
xchg
shll
xor
xor
push
push
fwait
shll
push
jne
cmp
jns
mov
sub
out
jbe
mov
inc
sub
sbb
sub
test
pop
jno
jb
fmuls
in
andb
loop
shrl
inc
mov
dec
stos
ret
movsl
and
pop
clc
mov
scas
add
xor
mov
push
xchg
sub
xchg
or
mov
aam
incl
jns
xchg
fldl
mov
add
push
xor
mov
or
add
aas
jbe
add
out
jge
repz
movsb
jae
xchg
inc
out
dec
ret
lds
jp
xorb
cmp
cltd
outsl
cwtl
jo
lods
mov
stos
test
test
xlat
mov
dec
mov
test
inc
pop
fidivrl
xor
mov
aaa
adc
cs
sub
mov
pop
inc
into
test
sub
js
test
ds
mov
aad
sti
adc
jo
fildll
rorb
fcompl
add
bound
stc
data16
jb
and
xchg
sbb
xchg
xor
sub
mov
mov
xchg
inc
test
mov
adc
leave
ljmp
cltd
pop
movsl
das
mov
popf
fcoms
dec
xor
pop
ret
scas
cmp
scas
aaa
aaa
cmpsl
xchg
stc
fadds
push
xlat
adc
inc
inc
int
gs
jne
or
ljmp
cmp
fistl
push
or
ja
in
pop
mov
cmp
popf
or
add
inc
pushf
push
dec
iret
loopne
fmull
dec
cmp
repnz
xchg
xor
out
aaa
mov
lea
inc
add
in
cwtl
jg
imul
or
mov
repnz
lock
sbb
sbb
je
jmp
xchg
or
fldl
fwait
inc
insb
sbb
iret
aam
xchg
test
sbb
jae
nop
add
sub
sub
fnstenv
pop
out
ljmp
cmp
data16
insl
cli
lret
call
jg
sub
sbb
outsb
insb
cld
push
xchg
aas
mov
jb
or
jmp
sbb
xchg
xchg
jle
push
inc
adc
push
scas
sbb
mov
imul
arpl
aas
and
movsb
ja
pop
mov
push
adc
stos
jmp
stc
orl
xchg
addb
mov
and
mov
mov
outsb
and
dec
dec
push
nop
sub
lret
mov
pop
sti
adcb
push
mov
pop
jb
movsl
fstps
in
add
xchg
inc
rcl
jmp
jg
loopne
jl
ds
lret
inc
cld
cmp
out
or
inc
hlt
pushf
in
scas
int
cmp
aas
mov
xchg
jo
sar
dec
mov
dec
cmp
mov
loope
jb
dec
mov
mov
aam
jp
adc
pusha
and
push
sub
sub
cld
sub
ret
out
push
arpl
movsb
push
lahf
or
loope
cpuid
mov
fidivs
stos
cmp
cmp
movsb
mov
in
call
ljmp
movb
cmc
xchg
cmpl
xchg
icebp
sub
inc
rcrb
cli
mov
sub
hlt
and
or
pop
loop
adc
cmpsb
push
das
pop
sub
lret
ja
pusha
stc
popa
faddp
jle
or
sub
mov
xor
cmc
fdivrp
xchg
xor
punpckhdq
lret
shlb
mov
loop
adc
jbe
sub
push
sarb
xor
sbb
jg
add
push
push
adc
jecxz
pop
in
ds
into
add
sbb
inc
mov
fcompl
test
adc
and
adc
dec
cmp
mov
imul
adc
xchg
and
push
and
icebp
mov
ret
push
imul
fnstsw
jne
sub
xchg
popf
test
dec
and
xchg
enter
xchg
add
sub
fisttpl
sbb
loop
xor
dec
adc
inc
cld
shl
roll
inc
addr16
jp
sub
in
mov
sub
xor
cmpsl
js
nop
das
repnz
popf
ret
adc
int3
xchg
adcl
leave
pop
data16
and
mov
fcmovbe
sub
iret
movsb
sahf
mov
sub
mov
popf
jo
jge
filds
bound
mov
inc
or
pop
or
mov
fs
sbb
jbe
inc
lock
inc
add
sub
lods
and
mov
ja
cmp
jle
fnsave
jle
call
imul
repnz
cmp
imul
sub
push
negb
daa
cwtl
shrl
subb
xor
push
adc
push
loope
push
mov
jp
cmp
pop
addl
sbb
les
xchg
in
test
xlat
rcrl
rcl
mov
lret
xchg
ret
sti
adc
xchg
xor
jecxz
ss
jnp
xor
lods
pop
push
mov
cld
sbb
cmp
cmp
cmpsb
into
inc
mov
and
jge
push
mov
jp
sbb
lods
xchg
sarb
dec
fdivrl
movsl
stos
sbb
mov
test
pop
and
cmc
jbe
fildll
pop
xchg
jne
lock
addb
mov
dec
and
hlt
lcall
enter
mov
pop
hlt
xchg
xchg
or
dec
pop
xchg
hlt
dec
mov
out
ljmp
cmp
std
or
dec
into
sbb
cmp
fistpl
dec
lret
pop
call
cld
xor
call
fstps
enter
jb
mov
jo
pop
add
movsl
mov
fimuls
xchg
js
cmpl
push
inc
int
pop
add
pop
repz
add
jo
add
xor
jl
test
fmul
mov
int3
add
arpl
jle
mov
in
mov
jle
xchg
fldcw
adc
pop
pop
aaa
test
or
jb
fmull
in
and
insl
push
and
roll
fisubl
addr16
adc
xchg
mov
sbb
movsb
push
mov
icebp
std
js
push
push
loopne
dec
jbe
xchg
jge
bound
in
fs
adc
gs
sbb
mov
add
push
dec
mov
les
fwait
adc
mov
int3
pop
push
imul
or
jo
mov
cs
jle
add
or
jl,pt
aam
sub
dec
mov
scas
pop
mov
jecxz
cmp
mov
rcll
in
pop
or
mov
inc
stos
xchg
mov
xchg
cli
push
les
mov
hlt
test
aas
jnp
mov
movb
jmp
mov
inc
inc
sub
lret
add
xorb
mov
outsb
or
cmc
loopne
mov
mov
hlt
jle
mov
nop
ret
sti
fwait
xor
cmp
lret
xchg
pushf
insl
pushf
stos
mov
sub
ja
ret
pop
push
es
lock
mov
adcb
jp
push
sti
add
push
rol
cmp
pop
cwtl
push
hlt
loopne
xor
pop
dec
in
out
popl
or
xor
lock
jnp
add
leave
pop
into
icebp
addr16
scas
mov
das
and
imul
je
test
jle
sbb
loop
test
push
jge
dec
fistpll
mov
dec
mov
xchg
sub
push
pop
insl
xor
lea
and
cs
push
fidivrs
notb
in
inc
lods
mov
repnz
xor
popa
pop
fidivrl
xor
and
imul
cmpsl
test
imul
mov
mov
cmp
shll
push
push
cmp
aas
scas
out
xchg
les
test
xchg
add
jae
dec
jle
xchg
lock
cmpsl
mov
lock
push
pop
pop
inc
inc
mov
lods
lds
aam
and
int3
sbb
push
or
push
cltd
jns
adc
jp
jl
sbb
or
jecxz
in
lcall
mov
xchg
mov
xchg
jle
or
ficomps
jnp
or
pop
rolb
lret
pushf
enter
shrl
out
jge
das
sahf
rolb
sub
push
mov
iret
mov
inc
push
andb
adc
int3
pop
lea
mov
scas
dec
mov
xchg
and
stc
inc
cmpl
jbe
push
adc
data16
cmpsb
movl
adc
outsb
nop
or
dec
mov
xor
push
xlat
ret
addr16
mov
dec
add
mov
mov
xchg
and
inc
cmc
into
xchg
scas
test
add
into
xor
or
xchg
lahf
push
pop
cmp
rcrb
push
popa
fnsave
push
adc
popa
iret
mov
push
sub
je
add
mov
xor
jnp
lods
stos
adc
fstpl
mov
out
enter
xchg
popf
int3
adc
xor
sub
jae
fistps
adc
inc
cwtl
sbb
xor
imul
loope
lret
mov
push
jmp
mov
int3
cwtl
and
jno
or
popa
push
xchg
mov
adc
ficomps
fisubs
mov
inc
mov
xor
notl
push
incl
lahf
in
and
adc
ss
mov
cwtl
push
mov
or
push
add
shl
es
jg
and
xor
lcall
paddd
lock
add
in
sub
outsl
in
mov
daa
ja
insl
pop
pop
sbb
out
jg
xchg
nop
repnz
sarl
icebp
xchg
cli
loop
inc
mov
push
xor
iret
in
mov
pop
roll
out
repnz
xor
dec
jne
addr16
mov
negb
cmp
inc
and
cli
xor
or
or
call
push
jo
loop
or
sbb
lds
stc
nop
scas
pop
jl
sbb
leave
es
add
gs
loopne
jecxz
cmp
xor
stos
pushf
out
stc
popa
fistpl
push
pop
daa
enter
bound
cmpsl
dec
push
mov
lock
xlat
pop
out
mov
neg
or
test
nop
adc
dec
lret
or
xchg
fwait
adc
add
std
imul
sbb
push
cmp
flds
inc
xorb
sbb
jmp
adc
fnstenv
movsb
daa
cld
les
and
xchg
out
pushf
lods
or
loope
fldcw
mov
inc
sahf
movsb
negb
dec
out
sub
and
out
in
mov
dec
in
int
pop
out
push
std
sbb
fcoml
aam
push
repnz
pop
jne
out
cmp
sub
and
scas
push
adc
pusha
roll
loope
mov
lods
xor
ljmp
xlat
cmp
stc
jl
insl
roll
fbld
jl
mov
ret
cwtl
dec
mov
jmp
and
and
cmpsb
jl
pop
je
ret
jl
lods
dec
js
loop
push
or
jbe
sbb
xchg
sub
enter
stc
add
mov
mov
mov
or
cwtl
dec
sub
jp
scas
adcl
jge
dec
cltd
or
push
push
inc
jl
jo
pusha
out
aaa
add
jge
into
sub
push
mov
mov
push
cmp
stos
adc
jg
sbb
push
fwait
movsb
fstps
lret
and
sbb
sub
fsts
jne
loopne
mov
mov
xchg
adcb
jb
adc
faddl
sub
fidivs
enter
inc
icebp
or
out
dec
lret
pop
int
hlt
subl
shll
xor
movsb
mov
and
mov
xor
scas
cmpsb
sub
push
or
xchg
mov
jno
filds
mov
out
xchg
or
clc
pop
clc
xchg
add
imul
push
push
mov
jmp
test
nop
rcl
and
add
mov
test
inc
rol
cmp
inc
cmpsl
pop
ret
pop
stos
ret
scas
mov
loope
dec
int
xchg
mov
adc
xlat
push
fmul
inc
push
push
cmp
js
mov
scas
aaa
pop
mov
sarl
loopne
or
lret
pop
fmul
ret
clc
jl
inc
mov
adc
cmp
xchg
int3
ret
adc
jnp
fldcw
clc
sti
enter
bound
js
mov
add
mov
insb
es
xchg
cmpsl
xchg
inc
mov
clc
jae
movsb
movsb
popa
loopne
xchg
lahf
jle
std
insl
shrl
dec
repnz
std
loop
arpl
mov
out
sbb
popf
adc
and
xor
rcll
js
ret
pop
out
mull
jnp
das
push
pop
xor
mov
out
or
jmp
mov
shl
mov
sbb
ret
jmp
insb
pop
pop
xchg
fucomi
push
sarl
cmp
shlb
xor
sbb
test
insl
add
repnz
cltd
es
sbb
lret
sbb
andl
push
loopne
cltd
movsb
mov
js
imul
test
or
enter
pusha
fadds
sbb
xchg
sub
adc
out
cltd
mov
stos
je
sub
call
mov
into
add
cmp
lahf
jecxz
int
and
lods
lock
cmp
in
mov
inc
leave
stos
or
lahf
pop
push
cmpsb
or
in
orl
addr16
and
iret
ds
es
jg
jle
rcll
cwtl
mov
imul
mov
adc
test
arpl
outsb
xchg
xchg
loope
mov
pushf
push
push
fmul
push
sub
fistpl
push
lds
test
sub
pop
mov
in
adc
sbb
sub
xor
xor
xor
jle
das
mov
stc
ficompl
lcall
jns
jns
stos
mov
pop
xlat
ret
sub
mov
lods
or
mov
movsl
add
inc
xor
fwait
pop
sbb
outsl
push
cltd
das
adc
loope
mov
aad
inc
mov
test
fstp
iret
daa
jbe
pop
gs
adc
jecxz
or
push
adc
mov
sbb
mov
pop
test
inc
fwait
jmp
movsb
shrl
jne
mov
cmp
jo
sub
jecxz
cwtl
add
mov
xacquire
pop
bound
mov
mov
sub
mov
pop
jb
bound
jno
adc
mov
aam
mov
popa
xchg
mov
inc
dec
jno
mov
mov
sub
std
sbb
mov
movb
jb
push
dec
mov
xchg
sbbb
push
insb
jae
pop
addr16
fcmovnbe
xor
pop
popa
fists
cmpsb
test
sub
or
adc
repnz
jnp
and
mov
inc
ret
mov
xor
jnp
xor
push
test
arpl
dec
push
popa
mov
xchg
test
add
test
pop
jae
xlat
push
mov
cmp
push
into
shl
cltd
jge
ja
adc
cmpsb
xor
fldl
stc
sub
mov
fsubl
mov
pop
xchg
mov
ficoms
push
aam
popa
lret
shll
jb
lods
mov
nop
dec
fincstp
ss
insb
icebp
adc
inc
and
movsl
sbb
xor
popa
push
outsb
inc
in
mov
scas
push
popa
pop
ret
aaa
ret
aaa
lds
fisubrl
subl
ret
jbe
adc
fdivrs
jae
push
sub
mov
xor
and
dec
out
shrl
xor
and
in
push
sti
repz
inc
cmp
cmp
orl
xor
push
xor
xchg
push
push
mov
add
xlat
lock
leave
xchg
jmp
jno
mov
sub
or
outsl
adcl
jae
jp
sbbl
shrb
addb
jo
xchg
repz
incl
xor
ss
mov
mov
in
xchg
cmp
inc
mov
sbb
sub
jle
or
cmp
stc
ljmp
xchg
pop
cltd
mov
nop
shll
mov
xor
insb
adc
fsubrs
cmpsl
fisubs
pop
das
inc
testb
jae
loope
xlat
mov
sbb
dec
or
sahf
adc
pop
cmp
shrb
push
xchg
add
pusha
sbb
vmovupd
scas
sub
in
jp
scas
in
adc
mov
pop
mov
jp
icebp
out
sub
jl
or
movsl
sbb
sub
idivb
dec
jb
lahf
daa
cmp
es
xor
xchg
mov
into
shll
aas
das
inc
mov
push
leave
lock
mov
cmc
mov
add
mov
pop
sbb
add
pop
daa
lock
lret
or
inc
popf
add
lea
sbb
or
fwait
push
jbe
xorb
xor
cmc
adc
or
in
pop
movsb
ds
mov
push
push
movsb
and
aad
push
lods
rclb
mov
mov
push
pop
orb
dec
adcl
cmp
aas
sbb
clc
sarb
ret
cmp
test
cli
lea
sub
push
dec
pop
and
data16
fs
sbb
inc
repnz
rcr
sub
mov
cmp
jmp
negl
rclb
idivb
outsl
daa
insb
shlb
mov
jb
pop
shlb
jno
mov
rcr
sbb
adc
jp
out
xor
orl
shll
xchg
shrl
cmpsb
cwtl
sbb
sbbl
out
bound
pop
rcrb
sub
div
sbb
adc
jae
icebp
add
icebp
fisttps
jo
fildll
aad
cltd
push
test
bound
in
repnz
sub
bound
mov
stos
jl
sbb
mov
pop
fmull
fdivr
mov
mov
push
jp
mov
in
dec
bound
rcrl
push
mov
and
xchg
insb
and
pop
pop
xchg
push
stc
pop
lret
cli
jg
mov
push
int
jne
imul
xchg
sti
mov
jecxz
and
inc
jmp
mov
stc
push
sub
punpcklbw
xchg
jp
add
inc
dec
jns
leave
push
and
fistl
imul
lcall
xor
jnp
mov
mov
pop
pop
xchg
jnp
mov
jle
mov
test
test
mov
nop
rcrb
enter
shl
repz
call
adc
and
aam
hlt
negl
jo
pop
xor
jo
jb
mov
js
sti
mov
hlt
imul
push
mul
loope
mov
in
dec
stos
outsb
pop
push
mov
cmc
test
aam
andb
aad
sbb
lcall
xor
or
lcall
insl
cmp
xor
dec
mov
and
xor
lahf
sub
xchg
and
push
push
mov
je
andl
out
inc
std
test
hlt
push
lds
adc
ja
xchg
push
mov
push
mov
sbb
mov
ja
mov
mulb
or
xchg
arpl
in
clc
mov
movsl
mov
ljmp
push
into
mov
xchg
aaa
in
pop
imul
js
sbb
repnz
pop
mov
arpl
stos
jecxz
push
jge
mov
shrb
popf
sbb
sub
push
stos
mov
cmc
pop
js
jecxz
scas
insb
cmp
sub
scas
daa
dec
mov
lods
pop
xchg
sub
push
outsl
inc
xchg
das
add
das
sbb
int
js
xor
xchg
mov
aas
xchg
mov
call
fdivs
mov
in
mov
movsl
test
test
dec
stos
punpckhwd
jmp
push
xchg
lods
je
arpl
and
cmp
sub
fwait
insb
cli
mov
jne
pusha
arpl
lods
stos
negb
jne
cltd
clc
jp
inc
lock
call
cmpsl
int3
and
push
add
aas
cmp
jecxz
sbb
push
in
pop
jbe
sbb
mov
dec
mov
sbb
jae
sub
mov
or
cltd
mov
dec
insl
mov
sub
pop
pop
dec
int
cmp
or
insl
sub
aas
mov
scas
outsb
push
xor
arpl
push
add
push
fidivl
data16
mov
sub
mov
dec
mov
cmpb
xor
insl
push
enter
sub
mov
frstor
push
xchg
mov
popf
push
push
mov
push
push
add
fs
mov
test
cs
scas
push
inc
out
mov
jecxz
lds
jnp
mov
inc
pop
cmp
rcrl
test
dec
or
push
out
insl
sti
sub
stos
es
mov
pop
hlt
or
cmp
negl
push
adc
test
dec
cmpsl
xchg
sahf
repnz
dec
adc
add
out
jl
sbb
push
or
jecxz
mov
or
dec
enter
pusha
inc
or
jb
fmul
outsb
jbe
imul
ja
lods
mov
aas
popa
insb
sub
test
mov
aaa
lds
in
and
dec
ret
repz
sbb
jp
inc
jb
add
mov
dec
insl
leave
sub
cmpl
push
adc
mov
push
insb
lods
and
pushf
test
loop
xchg
xchg
and
cmpl
add
in
dec
nop
loop
xchg
pop
push
out
lcall
arpl
arpl
out
imul
inc
inc
mov
jg
clc
pop
cmpsb
xchg
jge
jb
sarb
lahf
xor
xchg
fdivrp
push
and
ss
cwtl
hlt
cmpb
sub
cmp
popf
sub
imul
cmp
rcll
test
adc
jge
into
movsl
out
xor
pusha
lret
lcall
mov
pop
inc
ljmp
popf
outsl
mov
or
adc
ds
lods
push
xor
aas
push
xlat
jge
popa
cmp
xchg
xchg
std
aad
leave
xchg
dec
insb
xchg
mov
and
iret
cmc
pop
cmp
push
or
loop
out
test
jecxz
pop
aad
cltd
sahf
fsubl
lret
push
imul
fmul
add
out
scas
test
mov
push
jg
xchg
mov
xchg
xchg
enter
dec
inc
fmul
cmp
mov
cs
pop
popf
jnp
out
int
jb
jae
push
adc
in
out
hlt
push
dec
jnp
ja
or
jb
lods
add
stos
and
roll
je
mov
jge
mov
push
std
push
xor
fimuls
insl
ret
dec
mov
out
xor
mov
sub
mov
mov
lods
mov
and
addr16
lret
call
scas
lahf
sti
mov
cmp
inc
imul
inc
sbb
or
insb
xchg
adc
pop
jae
je
lret
andl
out
arpl
pop
push
fiaddl
jbe
xchg
fwait
xchg
mov
addr16
fwait
test
out
repz
or
pop
outsl
iret
xchg
or
push
adc
cmpsl
mov
rclb
push
bound
push
lods
pop
xchg
mov
dec
xor
lods
or
out
bound
rolb
jb
add
outsb
mov
adcb
lock
push
push
orl
jp
mov
sti
sbb
mov
or
mov
dec
stos
mov
push
jb
sbb
mov
int3
hlt
push
pop
xchg
inc
mov
stos
pusha
and
shl
push
mov
dec
loop
lea
hlt
icebp
and
fnstsw
inc
xor
or
lcall
sub
rolb
dec
xchg
das
aam
scas
jb
bound
adc
cmpsl
cmc
mov
arpl
mull
sbb
fwait
pop
pusha
jo
movsb
enter
in
push
mov
push
stos
jbe
dec
outsl
xor
xor
pop
sub
dec
aam
es
push
mov
jnp
frstor
xorb
cmp
aad
xor
mov
lretw
pusha
les
outsl
js
stc
adc
cwtl
mov
or
dec
js
int3
nop
jno
xchg
outsl
outsb
add
out
xor
xor
or
and
push
dec
xor
or
xchg
cli
fs
out
ret
jl
notb
mov
sub
fldenv
outsb
mov
fidivs
out
dec
cmpsl
rorb
adc
decl
adc
pop
mov
push
push
lcall
inc
dec
adc
fstpl
push
aam
xchg
xchg
mov
xor
lods
and
cmp
jne
xchg
jnp
jmp
sahf
push
fisttps
dec
cmp
push
dec
and
mov
mul
xorb
es
xor
push
jl
push
cli
jmp
mov
js
aaa
sub
out
mov
stos
and
mov
add
mov
push
sbb
hlt
and
fstp
sub
xchg
mov
push
loope
mov
fbld
loopne
and
decb
inc
ljmp
int
pop
int3
ds
repnz
dec
lahf
inc
ljmp
test
jne
aam
or
mov
mov
enter
push
push
sub
xor
mov
pop
mov
aad
pop
sub
daa
daa
push
pop
push
cmp
add
sahf
jb
inc
addr16
sbb
cld
loop
add
push
mov
fdiv
fcomps
adc
cmp
icebp
fidivrl
popf
lret
jp
addb
xor
push
dec
add
lods
pop
call
in
push
sti
in
pusha
inc
add
jg
fildll
fdivrl
push
pop
sti
jmp
sub
cld
inc
mov
stc
sar
fnsave
movsl
xor
xchg
mov
gs
add
leave
bound
pop
add
movsb
xchg
jnp
mov
push
fisttps
addl
add
jns
mov
add
iret
lahf
int
out
sbb
cltd
sbb
lahf
mov
in
rcr
aam
add
or
adc
sub
in
xorb
sbb
inc
dec
and
shll
hlt
or
add
fildll
pushf
mov
mov
aaa
adc
lds
dec
jae
jo
sbb
cmp
ljmp
repnz
and
test
imull
fisubl
repnz
jl
fstl
ss
cwtl
in
shll
leave
sub
jno
adc
pop
push
mov
aas
sub
fcoms
pop
sahf
adc
seta
mov
bound
and
dec
test
and
or
js
inc
imul
and
ror
iret
scas
in
dec
push
out
mov
cltd
lcall
fdivs
cmp
lea
test
out
jo
cmp
sbbl
or
jge
adc
lret
sbb
jp
lahf
xchg
sub
cmpsb
aas
xlat
push
add
stc
xchg
orb
in
call
xchg
fdivs
mov
jge
pop
and
andb
pop
pop
ja
fwait
jb
add
dec
and
fdivrl
mov
mov
out
in
dec
and
icebp
sub
pop
or
inc
fwait
cmp
pop
mov
pop
aas
in
mov
scas
dec
addb
dec
iret
fcoml
or
movsb
pop
clc
shr
add
adc
test
sub
and
sahf
sub
xchg
jp
sub
loopne
aam
shl
mov
lds
outsb
fucom
sub
cmp
out
xor
movsb
sbb
adcl
jo
sub
push
inc
int
xor
inc
scas
lods
out
fiaddl
jecxz
jo
push
jecxz
cltd
adc
dec
cld
push
cmpsl
inc
shlb
dec
stos
fisubrs
and
inc
inc
ds
ret
bound
stos
xchg
inc
mov
shrb
inc
popf
adc
js
test
clc
jge
data16
push
pop
xchg
stos
inc
repnz
push
dec
mov
xchg
adc
cmp
enter
arpl
jge
rolb
adc
and
jl
mov
sahf
fstl
ret
in
xor
rclb
pop
test
outsl
or
inc
addr16
jecxz
inc
fcomps
or
mov
and
pop
xchg
ret
cmp
push
xor
jb
xor
add
or
mov
mov
pop
inc
sbb
leave
shlb
bound
jmp
push
sarl
aaa
xor
das
xchg
and
mov
push
arpl
mov
scas
mov
out
mov
iret
in
orl
call
and
in
jbe
lcall
mov
sbb
mov
pop
and
loope
lahf
addr16
push
pop
adc
inc
sahf
out
in
call
mov
jae
fbld
in
nop
sbb
and
cld
mov
mov
insl
fisttps
cli
dec
notb
rclb
insl
pop
sbb
mov
cmpb
mov
rolb
cmpsl
aas
repz
cmp
sub
inc
pop
cmp
lcall
mov
inc
push
pushf
loop
jno
or
leave
cmc
or
icebp
jmp
mov
push
jae
fstpl
fxam
lret
mov
mov
jno
xchg
aad
lahf
testb
aad
loopne
xor
negl
xchg
jb,pn
out
shl
xor
or
in
clc
lcall
add
iret
xor
push
in
cmp
xchg
inc
push
hlt
out
jnp
cmp
pop
out
sub
pop
lahf
add
pop
imul
pop
arpl
movsl
mov
stos
push
jb
ror
xor
inc
add
rolb
ss
mov
xchg
xchg
iret
or
dec
lds
cmp
fadds
jl
jo
lret
mov
stos
xchg
or
movsb
bnd
pushf
out
xor
xchg
pop
mov
sar
lea
xchg
xor
cmp
mov
out
movsl
lock
pop
mov
cs
and
aad
pusha
dec
mov
int3
pop
out
inc
inc
fwait
imull
in
std
bswap
ja
push
outsl
repz
inc
dec
dec
cmp
mov
inc
inc
sub
mov
mov
sub
inc
jmp
popa
or
xchg
test
sbb
pop
xchg
stos
std
sub
clc
addr16
sub
pop
sti
test
and
cwtl
push
aad
jmp
jge
mov
push
pop
pop
subb
dec
fidivs
arpl
jp
rcrb
inc
clc
insl
xor
out
scas
adcl
leave
fs
into
ret
or
xor
nop
jl
dec
cmp
and
insl
cs
sbb
lods
frstor
scas
test
dec
scas
lea
and
sbb
push
mov
jne
test
sbb
repz
enter
push
scas
bound
cwtl
mov
scas
sarb
adc
loope
in
sbb
int3
cmp
test
inc
xor
or
cli
mov
mov
test
lret
dec
mov
inc
inc
add
xchg
into
push
ja
scas
or
fcompl
sbb
icebp
bound
sub
cmc
stc
jnp
add
les
cmp
ss
ret
sub
pop
inc
pop
jmp
orb
cmp
fidivrs
ds
pop
js
lods
stos
sti
mov
mov
add
inc
insl
dec
js
sbb
arpl
stos
out
mov
cmp
leave
aad
shlb
fnstsw
repz
push
dec
add
jecxz
adc
cmp
or
movsl
lock
cmpsl
pop
jae
iret
jno
dec
or
popf
inc
sarb
mov
into
dec
cli
neg
rcrb
test
mov
in
mov
push
adc
jl
or
mov
or
loop
repnz
rclb
arpl
mov
lods
out
or
cmp
jae
sbb
test
aaa
sbb
ficoms
fwait
cltd
xor
arpl
push
sbb
imul
inc
mov
shll
add
mov
or
mov
inc
stc
js
inc
into
xor
pop
pop
pop
imul
mov
inc
fnstcw
test
fstpl
and
hlt
sbb
push
es
out
cmp
ja
nop
xchg
cmp
in
pop
xchg
aad
scas
imul
mov
scas
xchg
lods
lahf
cmp
add
gs
aaa
add
mov
mov
iret
push
sbb
xor
fisubl
call
dec
out
sti
cmpsb
jecxz
out
in
jno
push
test
arpl
and
jbe
inc
pop
push
mov
xchg
imul
fstps
sbb
xchg
into
pop
jmp
mov
es
push
push
js
mov
adc
fisttpll
jecxz
push
addr16
mov
pop
insl
cltd
out
dec
stos
out
stos
dec
test
sub
mov
adc
out
xchg
jno
dec
or
adc
sbb
mov
cmp
xchg
or
std
xlat
repnz
pop
subb
cmpsl
lods
xor
xchg
mov
and
icebp
and
pop
lret
fsubr
sbb
aas
pop
bound
mov
mov
stos
inc
scas
xchg
in
mov
ficoms
rcll
jnp
adc
or
enter
add
testl
cmp
lods
mov
mov
nop
xor
int3
movsl
movsl
dec
dec
ljmp
outsb
stos
js
ds
push
gs
andl
ss
jge
xchg
mov
lock
sbb
int3
or
cmp
mov
xor
add
dec
jp
xchg
test
movsl
pop
daa
fildll
push
push
push
in
inc
fsubrs
dec
movsb
out
cmp
jo
je
inc
jb
cmp
pop
pop
sbb
daa
lea
stc
sbb
clc
cmpsb
gs
hlt
sbb
cwtl
cmp
into
sub
cmc
aad
xchg
data16
mov
sbb
pop
mov
add
in
stc
dec
adc
and
adc
add
inc
mov
loopne
inc
bound
xchg
int3
dec
sub
ss
imul
mov
xchg
push
fwait
push
sub
ret
les
mov
shrl
xchg
pusha
lea
mov
mov
add
mov
push
out
jo
in
jmp
push
jmp
lret
mov
aad
adc
mov
loopne
push
insb
mov
stos
outsl
nop
and
mul
mov
add
inc
divb
add
cmp
xchg
sub
add
inc
sbb
cld
mov
add
and
add
lock
ljmp
data16
roll
jge
in
add
pop
jae,pn
mov
push
cmp
shl
cmpsl
repnz
mov
enter
shrb
inc
mov
movsl
pop
sub
pop
gs
jo
sub
jle
rclb
je
mov
add
mov
xlat
dec
fcmovne
inc
repnz
push
add
gs
fs
or
mov
stos
cli
dec
jmp
fdivp
pop
cwtl
and
test
shlb
ret
testb
imul
cmp
aas
testl
fisttpl
pop
add
push
adc
lret
cltd
push
cwtl
sbb
clc
or
mov
or
dec
xchg
bound
enter
xchg
pop
jle
or
push
pop
jo
mov
cs
pop
mov
mov
sti
aas
shrl
sbb
loopne
cld
inc
shrl
adc
test
mov
jle
inc
insl
daa
out
xchg
insl
les
in
ja
lret
outsb
cmovp
adc
inc
rcr
adc
push
xor
jp
mov
flds
jle
movsl
inc
fsts
loop
clc
mov
push
sub
dec
stos
dec
das
mov
push
xlat
rolb
add
xchg
das
mov
push
or
fstpl
out
fbstp
shlw
xchg
xor
out
mov
pushl
pop
mov
inc
adc
xchg
aas
xchg
jne
pushw
jb
xchg
fldcw
jbe
jmp
les
mov
pop
pop
in
adc
loopne
jae
das
cmp
sahf
mov
jg
jbe
push
mov
sub
or
gs
arpl
and
sub
bound
enter
lds
mov
pop
dec
jae
add
fcoml
jle
shlb
push
sub
mov
test
xchg
xchg
xor
mov
scas
lea
nop
js
mov
and
fucomip
test
inc
jmp
push
lea
push
aas
sbb
jae
arpl
mov
add
pop
mov
pop
scas
jle,pt
stc
scas
insb
ret
adc
jge
orl
fidivrs
arpl
jg
sub
mov
std
sbb
imul
xor
adc
push
test
aaa
or
lret
pop
scas
test
sti
cmpsb
scas
mov
scas
arpl
dec
inc
add
xchg
ficompl
adc
add
dec
mov
jle
cmc
dec
mov
inc
scas
adc
scas
fidivrl
push
movsb
outsb
inc
xor
mov
cmpsl
pop
mov
sarl
ss
add
cmc
jp
fistpll
das
out
xor
fwait
and
stc
sbb
out
add
into
push
dec
and
add
cmpsb
imul
dec
inc
int3
inc
add
push
in
test
sub
add
mov
mov
bound
gs
mov
ret
leave
sti
into
nop
add
iret
or
xor
mov
icebp
clc
push
stos
xor
call
cmpsl
push
sbb
cmpsl
neg
mov
into
add
xor
or
andb
in
mov
test
sbb
rolb
adc
das
and
lds
push
loope
dec
pushf
sbb
or
inc
loop
sbb
es
outsl
das
frstor
lahf
ret
lcall
adc
shlb
xchg
push
push
pop
lret
dec
shlb
dec
cli
mov
pop
mov
loope
daa
ret
aaa
cmp
xlat
shl
pop
sub
inc
xor
fucomip
push
sub
jge
xchg
jae
or
fiaddl
push
push
mov
inc
mov
xor
stc
fistps
pushf
mov
sbb
ja
popf
popa
xchg
retw
jne
fcoms
xchg
jno
xchg
mov
bound
lock
sub
stos
mov
in
adc
wrmsr
cltd
int
fnstsw
xchg
push
daa
xor
inc
jae
mov
sbb
stos
and
sahf
aas
roll
lcall
push
repnz
sub
ss
outsb
notb
jp
add
dec
dec
std
push
fcompl
pop
and
mov
sbb
push
mov
or
mov
inc
xchg
scas
in
ds
arpl
cmp
pop
mov
or
rclb
cmpsl
test
call
mov
les
std
cmp
adc
adc
mov
push
ja
out
fsubrl
mov
call
dec
inc
add
loopne
jecxz
in
je
in
mov
fs
xorl
jne
outsl
adc
jbe
xor
jge
xor
inc
inc
rcr
push
add
push
or
push
jmp
mov
inc
or
or
popa
movsl
loopne
shll
es
call
test
cmp
pusha
pop
gs
sbb
pop
repnz
dec
js
mov
or
push
sub
inc
and
inc
jae
mov
xchg
jb
xchg
stos
sub
xor
push
mov
pusha
sahf
xchg
sub
dec
sbb
arpl
pop
push
or
repz
push
xchg
push
xor
in
pop
adc
mov
mov
jbe
fdivl
test
stos
sbb
stc
sub
loopne
push
ret
adc
or
fcoml
test
pop
push
jecxz
and
call
in
jno
icebp
mov
pusha
xchg
or
mov
mov
out
sub
dec
adc
pop
add
ds
ret
push
xchg
je
mov
loopne
sub
push
adc
sbb
lret
daa
xor
or
push
pop
out
push
sbb
flds
scas
sbb
xchg
mov
gs
push
scas
dec
sub
jno
add
jne
mov
stc
mov
push
push
pushf
mov
cltd
aam
sub
xchg
sub
and
pop
lea
mov
or
iret
andl
add
inc
andb
push
mov
mov
add
and
xchg
int3
xor
xor
mov
shl
mov
add
add
mov
or
jae
cmp
mov
js
subb
sbb
lods
lods
sbb
jne
sub
push
jb
arpl
adc
sbb
add
or
sbb
add
imul
arpl
cmc
call
xchg
pushf
std
roll
add
jae
xchg
push
ljmp
xchg
lahf
xchg
mov
dec
and
outsb
int3
sti
mov
fs
and
std
fwait
pusha
mov
jnp
cs
iret
lahf
outsb
inc
faddl
int
mov
mov
aaa
pop
lock
xor
out
imul
xchg
std
fists
dec
push
push
jge
rorb
pop
ret
mov
push
sbbb
addb
cmpl
push
cmp
out
loop
mov
mov
ror
or
out
loope
pop
or
sub
xlat
mov
jbe
mov
mov
or
lret
adc
adc
add
mov
and
sti
mov
or
ret
iret
nop
push
leave
xor
addr16
mov
mov
mov
jo
ds
pop
cmc
jl
dec
sbb
xchg
daa
mov
or
sahf
add
into
or
push
pop
lods
fldln2
cltd
xchg
adc
mov
mov
in
pop
cli
pop
pop
ja
add
xor
push
hlt
sub
adc
mov
out
xor
cmpsl
mov
lds
fsubr
sbb
data16
in
mov
jecxz
repz
fwait
push
push
push
lahf
push
mov
dec
fisubrl
dec
lea
scas
cmp
jl
push
outsb
sub
adc
mov
inc
inc
pop
sbb
aaa
repnz
xchg
mov
adc
add
int
into
rcrb
stos
aam
popf
cltd
sub
dec
fimuls
loop
pop
mov
push
pop
mov
test
or
add
mov
fs
mov
and
inc
aaa
test
mov
lea
dec
push
jnp
das
and
lahf
xor
add
inc
push
push
add
mov
imul
insl
ljmp
je
loopne
xor
lcall
mov
in
jne
daa
rclb
sbb
mov
dec
sbb
add
test
and
pop
out
pop
add
mov
scas
in
pop
cmp
add
jge
and
notl
xor
clc
mov
or
inc
sti
mov
mov
push
pop
dec
lret
add
inc
sub
adc
mov
jecxz
ljmp
imul
int
cmc
inc
push
cmpsb
dec
push
pop
in
subb
fisubrl
and
jmp
push
scas
and
sarb
fidivrl
cmpsb
scas
loopne
mov
cmp
jne
mov
subb
push
mov
orl
inc
dec
aas
andb
leave
adc
sub
or
pop
adc
int3
xchg
xchg
sub
xchg
scas
mov
outsl
stc
adc
push
in
add
cs
rcll
outsl
and
sub
jge
push
lret
fstpt
je
dec
adc
aam
dec
je
call
pop
out
rep
das
sub
adc
push
push
lock
ja
cmp
xchg
add
test
pushw
add
inc
pop
mov
test
cmp
and
sub
add
bound
push
movsb
test
sti
popf
sub
cmp
sahf
mov
jle
pop
pop
in
xor
xchg
sub
adc
enter
arpl
pop
inc
adc
movsb
ret
aaa
or
dec
hlt
cmc
cmp
inc
cmpsl
xchg
lret
loop
inc
dec
ret
icebp
mov
xor
xchg
maxps
dec
bound
sbb
or
pop
pop
rclb
aaa
push
inc
out
jb
dec
pop
insl
sahf
in
cmp
jae
test
sbb
cmpsl
ret
test
pop
push
adc
dec
dec
dec
cmpsl
ret
divl
xchg
and
ljmp
pop
inc
mov
cmp
push
lahf
rcrb
push
xchg
add
clc
ja
jne
test
loope
pop
test
push
sbb
or
clc
lds
cwtl
push
sar
inc
inc
pushf
stc
and
stc
dec
and
adc
lret
adc
dec
in
test
xlat
fbld
fimull
daa
hlt
rorb
dec
loopne
mov
sub
outsl
lret
xchg
mov
push
xchg
mov
out
inc
ljmp
call
jl
inc
test
pop
push
dec
cli
fidivl
clc
scas
mov
or
add
das
addb
in
bound
sbb
dec
ja
push
cmp
lcall
mov
imul
push
dec
pop
mov
cmp
inc
aas
daa
aad
hlt
push
cmpl
cwtl
xchg
sti
cmp
jae
rorl
mov
xchg
inc
xchg
inc
js
mov
scas
inc
pop
addb
inc
aam
and
call
imul
lods
imul
stos
xor
mov
push
adc
adc
shlb
enter
inc
mov
jg
mov
mov
jecxz
cli
loopne
jne
xor
cmp
sbb
pop
push
and
or
jo
cmp
push
addr16
jb
push
movsb
in
pop
adc
clc
xchg
sahf
mov
jo
cmp
xchg
in
sbb
mov
inc
mov
insb
jns
pop
inc
popa
pop
pop
pop
in
out
test
or
xlat
adc
jo
inc
mov
jl
xor
jnp
into
sub
aas
push
add
maskmovq
jns
lcall
or
mov
xchg
rclb
add
iret
ljmp
shr
fsubr
arpl
adc
inc
adc
leave
xor
sbb
test
jnp
push
fs
jns
out
xchg
and
loope
pusha
pop
push
xchg
mov
pop
sub
xor
stos
negl
repz
lock
mov
int3
add
jmp
mov
sub
std
mov
aas
mov
js
push
pushf
add
int3
and
mov
and
repz
les
cmp
sbb
sbb
loope
jge
mov
hlt
adc
pop
mov
mov
ja
push
mov
sbbl
xor
js
out
sub
cmp
jl
scas
and
push
cmp
mov
cmpsl
push
mov
outsl
fcmovu
pop
sub
mov
cli
frstor
mov
and
jns
inc
mov
jg
js
lea
sub
dec
adc
xor
in
lods
fmuls
das
dec
jmp
sub
aas
adc
outsb
addr16
inc
pop
fisubs
lods
push
fistl
out
xor
in
dec
mov
aam
pop
ss
jns
les
das
rcrb
in
add
les
in
or
test
mov
paddd
or
sbb
jecxz
cmp
inc
les
sub
mov
mov
out
xchg
pop
pop
adc
sbb
xor
ja
mov
int3
xor
test
adc
pop
push
pop
in
fcoml
mov
rorb
pusha
sahf
hlt
into
testl
lds
adc
pop
inc
mov
imul
loopne
sub
lahf
fcmovnbe
in
dec
cwtl
dec
adc
push
inc
es
push
data16
mov
lret
xor
push
enter
mov
mov
push
sbb
das
cwtl
mov
in
aas
lret
or
in
pop
mov
pop
xchg
sbbb
mov
push
gs
imull
xchg
cmpb
mov
outsl
jbe
aam
mov
pusha
mov
je
aam
clc
and
pop
mov
xchg
in
add
scas
mov
inc
inc
mov
mov
out
pop
loope
or
push
enter
mov
mov
cld
aam
or
add
xor
or
adc
flds
imul
mov
call
fucomi
stc
xor
sbb
dec
jp
xchg
test
mov
xchg
xchg
pop
adc
xor
test
fadds
mov
test
mov
sar
ds
or
cmp
sbb
mov
sbbl
and
inc
outsb
adc
cmp
movsl
sub
es
cs
stc
inc
cli
mov
cmc
mov
inc
in
data16
inc
push
adc
test
add
sub
loopne
jecxz
jae
rcl
adc
fbstp
movsb
stos
shrl
scas
leave
cmp
sub
addr16
shll
inc
fisttpl
mov
or
pop
xchg
sub
mov
addr16
adc
xor
mov
in
mov
idivl
sbb
xor
xchg
sbb
cmp
xor
out
push
les
out
fldcw
cltd
bound
sarl
add
stos
into
push
and
adc
pushf
lret
pop
loopne
enter
shll
xchg
aas
inc
mov
ret
das
int3
ja
wbinvd
lahf
fildl
pop
push
mov
push
icebp
ljmp
int
xchg
jno
insl
into
pop
test
mov
xor
pop
adc
dec
mov
cmp
shl
sub
xor
dec
insb
in
push
shl
fidivrl
fisttpl
stc
jno
xor
inc
lcall
push
jl
cmp
mov
mov
mov
jecxz
mov
and
iret
jno,pt
pop
push
sahf
sqrtps
push
jl
dec
clc
inc
jle
or
jbe
sub
les
sub
dec
mov
xor
xor
aad
mov
shll
sbb
pop
cmp
hlt
mov
and
sub
push
data16
xchg
adc
rcrl
leave
sbb
sbb
add
pop
fcom
cmp
mov
inc
mov
sub
in
sbb
add
mov
test
stos
rcrl
xor
pop
ds
and
sbb
stc
sub
fs
daa
adc
mov
cmp
inc
xor
mov
das
lods
ret
enter
rorb
xorl
popf
push
stos
jno
es
pop
mov
jb
sti
iret
es
scas
push
aas
adc
je
mov
scas
repnz
jae
cli
in
or
push
jecxz
cli
cmp
andb
dec
adc
mov
adc
jg
dec
inc
jbe
loope
lds
lret
xor
ds
lds
or
jae
pushf
sar
fs
stc
mov
xor
fucom
or
jle
cmpsl
add
sub
xor
inc
cmc
ss
nop
mov
jne
lahf
cmp
subl
or
arpl
mov
imul
cmpsl
loopne
pusha
jo
add
or
push
negl
xchg
dec
sti
les
mov
dec
das
idivl
cmp
fs
pop
test
call
shll
shl
xor
and
add
mov
dec
dec
xor
leave
push
shlb
jo
fsubl
test
lds
xlat
push
mov
sti
push
mov
mov
lcall
sahf
les
insb
lods
jmp
push
clc
add
or
pop
push
lcall
data16
xor
adc
gs
adc
rol
jno
leave
in
ror
xor
pop
jbe
lock
cmp
sub
outsb
daa
pusha
ds
add
xchg
stc
push
sbb
sbb
fdivrs
push
dec
jmp
cmp
iret
jge
iret
adc
mov
jg
push
push
mov
jns
push
sbb
popa
sub
rol
and
nop
dec
cmpsl
jmp
cmp
and
inc
push
in
out
scas
inc
adc
pop
and
sbb
xor
stc
adc
fsubrp
outsb
lods
mov
cmp
dec
cmpsb
clc
sbb
push
sbb
data16
dec
enter
fistpl
xor
sbb
lret
fcoml
lea
insl
inc
fs
mov
adc
frstor
sub
rorb
pop
xchg
aad
std
fidivl
and
imul
enter
test
mov
testb
sahf
hlt
push
in
mov
mov
imul
jne
push
pop
xor
out
jg
lods
inc
or
push
mov
in
ret
es
jne
test
dec
or
mov
int
or
cmp
fbld
test
add
cltd
stc
mov
push
jae
subl
add
mov
jo
cmc
jo
or
ficomps
push
pop
mov
fcmovbe
pop
mov
ja
xchg
mov
movsb
mov
xchg
dec
jle
jp
xlat
fcom
lcall
cmpsl
add
sub
repnz
icebp
jbe
push
sbb
loop
movsl
fisttpll
cld
lret
insl
jge
and
inc
push
rclb
mov
clc
inc
mov
shll
cmpsb
mov
int3
cmpsb
subb
sbb
data16
icebp
ret
ret
mov
sub
into
pop
mov
test
mov
fldenv
int
pop
or
cwtl
add
shlb
das
sbb
xchg
dec
jp
inc
xchg
push
cmp
ficompl
mov
test
lods
jne
or
test
shlb
mov
jae
int
test
mov
jo
jmp
sbb
int
jb
push
ljmp
jae
dec
mov
cmp
and
pusha
stc
addr16
jbe
adc
dec
shll
je
push
les
jbe
jmp
call
cmp
xor
shr
pop
push
pop
lods
in
sbb
ds
xor
or
movsb
sub
push
orb
shll
jmp
lock
dec
in
cltd
insl
popf
push
pop
inc
loopne
lret
sbb
adc
rorl
or
sub
icebp
jo
and
shrb
std
push
sbb
in
xchg
mulb
out
jae
sub
mov
loopne
sub
mov
lods
xchg
repz
cmc
insb
adc
mov
xchg
add
mov
icebp
test
ror
mov
imul
mov
jg
adc
inc
addr16
push
dec
push
push
adc
jno
dec
cmp
ja
jne,pt
mov
sbb
stos
mov
imul
pop
insl
pop
mov
sbb
push
push
add
mov
repnz
in
aaa
jbe
cltd
lock
ljmp
jmp
cmpsb
sub
pop
sbb
andl
sub
mov
cld
jo
add
lea
sarl
jns
loopne
cwtl
fnstsw
inc
frstor
and
sti
dec
incl
repz
outsl
pop
inc
scas
sti
nop
sub
add
je
dec
cltd
or
mov
fsubrl
ret
inc
subl
lcall
cmp
stos
shlb
xchg
aam
cli
jns
sbb
jle
xchg
add
incl
mov
jns
pop
fcoml
pop
pop
xor
push
sarb
test
push
jbe
xchg
xchg
and
ja
fsubr
lods
lret
test
imul
lock
push
js
shl
insb
pop
ljmp
popa
pusha
loopne
push
mov
ficompl
shl
mov
mov
cmp
ljmp
or
outsb
gs
adc
mov
jp
js
push
adc
jbe
rcrb
mov
in
dec
and
sbb
adc
ret
repz
or
sbbl
test
jl
int3
in
sub
jne
rcl
gs
mov
lret
push
arpl
and
push
dec
mov
mov
xchg
in
push
stc
rcll
out
push
pop
arpl
sbb
push
push
inc
mov
sub
pop
es
std
inc
test
je
dec
icebp
out
mul
fwait
inc
ja
nop
mov
sbb
sti
aad
das
sbb
pop
sti
fstpt
sub
jnp
or
xchg
sbb
gs
pushf
outsb
mov
jg
jo
xor
push
fstl
pop
es
mov
dec
push
or
mov
stos
xchg
push
insl
or
mov
jle
dec
incb
or
test
outsb
cmp
stc
add
and
xchg
xorb
mov
icebp
mov
pop
mov
or
bnd
aam
sub
jp
nop
ljmp
inc
jbe
imull
pop
leave
xchg
out
fs
xor
jl
les
push
sbb
inc
and
lcall
inc
mov
mov
je
ja
int
scas
popf
cmp
dec
cmp
pop
cmp
es
cs
notl
or
fprem1
fmull
in
movsl
stc
or
lea
imul
adc
cltd
inc
dec
lds
pop
aas
dec
into
add
mov
cmc
xchg
dec
fwait
int
mov
rcrl
imul
outsl
addr16
mov
xorl
add
mov
int
aad
std
add
adc
jge
inc
inc
popa
enter
mov
addb
mov
dec
insb
xlat
jmp
cwtl
mov
sub
dec
ret
ds
mov
loop
mov
xor
jecxz
mov
std
push
jne
sbb
and
cmp
decl
std
push
pop
xor
jmp
xchg
mulb
jmp
xchg
push
inc
xor
or
lea
mov
sbb
pop
xchg
and
cld
popf
pop
inc
sub
das
movsb
sbb
mov
xchg
jne
loop
mov
add
inc
pop
push
cli
mov
mov
push
adc
xchg
aad
popa
sub
pop
sbb
inc
aam
ja
inc
sub
in
arpl
or
ljmp
lcall
xchg
bound
xor
cmp
enter
ret
ljmp
dec
dec
insl
popf
adc
pop
imul
dec
or
out
sub
and
mov
daa
mov
cmpsb
cmp
stc
repz
stc
ss
fnsave
fstps
into
mov
cmpsl
jle
adc
lea
jne
dec
imul
call
adc
pop
jp
cmc
lcall
or
push
pop
push
xchg
jbe
movb
aas
sbb
mov
xchg
adc
into
sub
jecxz
mov
sub
out
fdivs
test
mov
icebp
sub
fists
dec
mov
xlat
sub
test
icebp
in
pop
mov
mov
mov
jb
xchg
xchg
icebp
pop
out
ds
fildl
cltd
jno
clc
sbb
outsl
add
add
mov
mov
jg
nop
stc
and
cld
sub
jle
test
sub
out
xor
ret
or
cmp
cli
stos
push
push
mov
cli
fldcw
xchg
fsub
sub
adc
ret
loop
loop
inc
xor
xorb
add
sbb
imul
mov
cs
stos
adc
cltd
lret
divb
mov
roll
mov
mov
mov
mov
ret
je
or
cmp
and
stos
xchg
test
std
dec
xchg
xor
and
adcl
push
stos
jge
mov
cmp
mov
rorl
xor
add
fisubs
sahf
push
ret
in
jbe,pn
cs
mov
movsb
sub
jge
fs
jns
shrb
orl
push
sbb
pop
adc
mov
jp
mov
mov
or
test
movsl
ret
dec
jns
nop
mov
push
loope
lea
jns
cmp
in
sbb
pop
mov
pop
and
sbb
adc
xor
mov
iret
or
jg
jmp
push
mov
adc
xlat
jp
shlb
mov
pop
das
pop
dec
outsl
jne
test
adc
clc
lahf
shl
jnp
xchg
test
jp
pop
jl
adc
pop
pop
hlt
shr
lods
sub
dec
jp
jle
mov
sbb
pop
cwtl
clc
les
and
and
adc
add
xchg
cli
out
fcompl
mov
dec
cmp
in
jle
sub
imul
pop
je
inc
mov
ds
jle
rorb
xlat
bound
dec
notl
faddl
jge
xchg
arpl
cmp
out
testb
and
jl
outsl
sub
xor
es
cmp
jg
jecxz
cmp
fisttpll
orb
test
mov
into
push
xchg
imul
pop
sbb
mov
and
adc
insb
xchg
aam
mov
cmpb
inc
pop
add
mov
addb
bound
xchg
inc
mov
stos
ljmp
mov
lea
sub
fcoms
jecxz
scas
out
fisubl
sbb
shl
and
sarb
cli
mov
pop
xchg
xlat
sub
push
mov
lcall
sub
sti
dec
in
loope
mov
and
sbb
imul
gs
mov
sahf
and
or
fs
test
fldenv
cltd
mov
inc
rclb
sub
out
sub
shlb
push
push
cwtl
fldl
jg
dec
push
add
rcrl
enter
or
out
fadds
cs
xchg
rorb
addr16
int
lret
jl
ss
fwait
sbb
mov
add
pop
sbb
mov
lock
jns
addl
mov
cmpb
add
and
add
loopne
add
rcrb
movsb
imul
enter
lods
mov
or
shll
inc
xchg
mov
xor
cmpsb
out
fst
sti
push
mov
aam
cmp
pop
jns
mov
adc
iret
call
push
jle
aam
call
es
xor
test
jo
mov
icebp
xor
adc
out
sub
mov
and
sub
jg
mov
xchg
cmpsb
ss
cmp
inc
dec
scas
and
das
mov
ret
xor
inc
fnstsw
push
orl
cmp
push
or
sub
fs
inc
ja
rorl
push
push
pushf
stc
sub
pop
mulb
in
sbb
push
stos
mov
inc
mov
es
jg
lcall
vmwrite
sbb
out
nop
push
jp
sbb
inc
test
cmc
and
arpl
in
mov
gs
stos
push
lret
cld
aad
add
add
popa
or
out
mov
popa
adc
sahf
mov
aad
sub
incl
gs
pop
adc
cwtl
test
mov
orl
jge
stc
repz
jl
or
jo
sub
packuswb
cmp
push
dec
aaa
insb
jl
sub
iret
adc
fwait
icebp
xorb
xchg
xor
sub
ljmp
and
mov
fcmovnb
adc
add
jnp
popf
mov
insl
out
sbb
lret
jnp
push
and
jb
loope
or
imul
fsubs
jmp
stos
mov
icebp
push
xor
fmul
xchg
fwait
lea
sub
mov
cmp
and
into
das
sbb
pop
sahf
xchg
pop
xor
mov
and
mov
push
test
and
push
and
outsl
pop
jb
in
lahf
test
mov
jmp
xchg
sahf
stc
sbb
stos
or
push
xchg
mov
sahf
mov
int
popf
fs
push
ja
movb
xchg
cld
push
push
push
stos
mov
movsl
ffree
sarb
repz
bound
cs
insl
iret
fisubl
xor
pop
ja
push
pop
sbb
lds
lock
sti
mov
aam
xlat
add
out
cmp
inc
cmp
rorb
push
ret
inc
outsl
shr
mov
xchg
lods
mov
mov
sbb
jo
push
xchg
bound
push
sbb
pushl
jl
dec
divl
push
sbb
sub
ret
daa
mov
add
loopne
outsl
mov
xor
cli
lcall
jp
insl
fst
and
pop
xlat
jecxz
push
pop
popl
inc
iret
jno
mov
xchg
jo
pop
lea
and
push
ror
jbe
mov
cwtl
leave
lret
pop
cld
push
roll
push
sbb
pushf
push
scas
mov
push
repnz
movsb
shll
daa
dec
push
outsl
mov
mov
xor
cmp
scas
cwtl
shll
imul
or
addr16
cli
sbb
push
fildl
loope
dec
rcrl
icebp
lret
dec
ds
jle
adc
pop
xor
and
lahf
xor
test
lods
or
xchg
mov
sti
sub
nop
das
rcrb
dec
cmp
xchg
cmp
enter
mov
aas
xchg
inc
inc
push
mov
xchg
and
mov
call
and
sub
mov
xchg
data16
xor
popa
push
fisubrl
bound
mov
xor
mov
lret
nop
push
out
enter
test
ss
aaa
incl
int3
dec
cmp
dec
je
xchg
imul
cmp
shlb
push
jge
stc
mov
sbb
repnz
sahf
dec
pop
adc
adc
aas
add
dec
repz
daa
sbb
adc
mov
aaa
loopne
inc
sahf
scas
test
jbe
cs
pusha
mov
mov
sub
mov
stos
std
in
fdivrl
les
mov
jno
xchg
pop
adc
xor
neg
icebp
push
outsl
cmp
aam
xor
iret
push
dec
mov
push
pop
or
fs
cwtl
cmp
prefetcht0
adc
shr
sub
mov
sub
sbbb
xchg
inc
loope
shl
mul
into
arpl
sbb
outsb
test
dec
jecxz
jge
lcall
cld
jmp
push
sub
jnp
out
mov
movsb
adc
add
fnstcw
pop
inc
push
lock
or
mov
mulb
inc
dec
rolb
pusha
mov
sbb
lea
arpl
push
pop
loopne
in
lds
xor
call
jmp
stos
pop
rcrb
lods
mov
les
pop
mov
push
push
adc
mov
cmp
aam
dec
mov
shll
in
cmp
jl
ss
paddusb
cmp
jge
dec
addr16
lods
int
ret
lods
gs
pop
mov
into
adc
int
or
push
in
aas
test
mov
mov
out
aaa
loopne
dec
mov
repz
stc
pop
push
out
and
add
xchg
scas
outsl
aas
xlat
or
mov
mov
and
pop
jbe
into
jns
pop
pop
das
push
das
adc
xchg
inc
daa
mov
adc
push
sbb
fisubrl
mov
out
aam
subb
aaa
divb
popa
leave
xchg
pop
jne
cmp
xor
dec
mov
push
dec
or
dec
daa
test
mov
xlat
paddsw
pop
popf
roll
xchg
cmp
mov
test
pusha
lret
push
push
xor
fsubrl
testb
xor
jne
jne
sbb
rcll
test
add
jnp
and
jo
fnstsw
xchg
push
add
fisubl
push
inc
or
pop
cmovb
push
mov
sbbl
push
dec
sub
daa
mov
aad
mov
or
sbb
cmp
jl
hlt
ret
imull
filds
aam
inc
push
jge
out
ret
mov
lcall
or
mov
ret
adc
xchg
sar
addl
xor
mov
adc
jmp
leave
jecxz
mov
pop
mov
mov
out
push
inc
roll
push
xchg
and
cmp
rep
adc
push
jmp
add
cmp
xchg
sahf
cmp
stos
inc
push
lock
arpl
fdiv
shl
clc
shl
movsb
loopne
repz
cwtl
xor
jg
jns
cld
mov
add
or
lcall
popa
add
out
call
or
jb
push
inc
pop
add
ja
mov
fwait
xor
cmpsb
in
into
or
out
push
daa
aaa
cld
cmp
dec
push
add
mov
loop
aaa
cmp
and
inc
scas
pop
add
and
lret
xor
sub
fcoms
xchg
jl
pop
push
adc
cli
xchg
inc
and
adc
sbb
jnp
xchg
adc
push
sub
fildl
bound
sub
push
xchg
leave
or
test
mov
or
jae
nop
xchg
xor
adc
jp
icebp
movsl
out
stos
and
inc
push
into
or
sahf
adc
ss
push
cmp
and
les
xchg
bound
xlat
ss
sbb
cli
in
enter
jmp
jns
push
mov
decl
and
popw
ds
xchg
sbb
aaa
aad
cld
dec
add
bound
cld
imul
xchg
ds
mov
sub
sub
adc
lea
inc
adc
sbb
cmp
mov
pop
aam
sub
cli
adc
ds
aad
jmp
fistps
iret
btr
fstp
and
jne
shll
add
or
sbb
ficomps
lds
pop
add
loope
dec
mov
imul
xor
je
jg
jp
mov
adc
mov
or
aad
repz
aas
call
ret
nop
data16
mov
decl
xor
mov
cmpsb
imul
inc
dec
xor
outsl
rcrb
scas
loope
sbb
inc
cmovp
sbb
aam
dec
xor
cmp
mov
or
shr
mov
jmp
pop
nop
pusha
add
bound
ds
bound
push
lea
lods
ds
repnz
mov
movl
loop
adc
jns
sub
call
cmp
mov
jg
sub
imul
imul
es
enter
addr16
inc
outsb
adc
leave
cmp
xchg
movsb
mov
adc
ds
repnz
ss
push
cmp
incl
lahf
rorl
rclb
push
xor
hlt
lds
mov
aam
cmp
stos
ret
insl
sub
in
xchg
push
popl
mov
fistpl
jnp
add
test
add
and
test
adc
in
test
inc
inc
faddp
insl
insl
mov
mov
xchg
icebp
inc
js
adc
xchg
lock
xchg
icebp
push
fmuls
jne
imul
inc
mov
add
mov
lret
inc
jg
les
push
repz
icebp
movsb
std
lods
inc
push
imul
mov
faddp
das
frndint
add
jnp
and
fucomi
or
pop
pop
test
in
imul
mov
inc
sti
mov
sub
xchg
inc
in
mov
xor
sub
in
insb
outsl
js
sahf
ss
cwtl
bswap
sub
push
out
iret
jnp
ljmp
adc
mov
or
inc
aas
loop
inc
imul
inc
repz
add
inc
mov
xlat
push
jle
xchg
or
das
loope
cwtl
pop
cld
insb
in
cmp
gs
fcomps
gs
push
jno
arpl
xor
pusha
and
ss
mov
push
cwtl
call
repnz
into
enter
cmpsl
lods
nop
push
push
ss
repnz
adc
movsl
bound
bound
jp
adc
movl
enter
fidivrl
aad
xchg
or
mov
loopne
stos
notb
xchg
push
stc
pop
mov
mov
test
in
mov
add
int
mov
rorl
dec
and
stos
xchg
hlt
mov
add
jecxz
adc
je
cmp
dec
xchg
loope
shrb
movsl
or
in
pop
jne
insb
out
gs
ret
sub
mov
nop
push
adc
les
cmp
test
je
std
dec
mov
push
mov
push
dec
adc
add
cmp
call
popw
mov
and
outsl
mov
aad
lret
sub
fidivrl
cld
jnp
repnz
jle
pop
mov
nop
jle
loopne
push
stos
inc
lret
fdivl
mov
and
add
cs
fs
out
incb
les
inc
add
push
in
test
lods
icebp
insb
lahf
inc
loope
xor
dec
adc
sub
mov
cmp
adc
icebp
divl
xchg
out
xor
mov
les
mov
add
jmp
test
mov
sub
inc
cmp
sbb
repnz
pop
ret
repnz
test
jns
lds
out
inc
sub
or
movnti
xchg
scas
xchg
mov
and
scas
lods
pushf
test
es
inc
and
daa
or
je
loop
pop
pop
and
pushl
popa
aas
push
orl
popf
out
xor
js
nop
fs
ljmp
adcb
je
push
lret
mov
cltd
in
rcll
cmp
xor
inc
jo
pop
fcmovb
sbb
pop
mov
xchg
fnstsw
out
adc
js
push
dec
pop
sub
mov
arpl
addb
mov
mov
loopne
dec
inc
daa
xor
mov
outsl
jmp
loopne
inc
repnz
sub
lret
subl
shl
and
or
or
inc
bound
jns
scas
lahf
mov
pop
or
add
xor
push
icebp
and
cmp
cmp
pop
push
cmpb
xor
sbb
lods
ret
mov
inc
lret
push
adc
lret
jbe
jmp
push
inc
clc
push
lea
cmp
gs
pop
sub
enter
or
sbb
aaa
insl
xchg
push
addb
ja
mov
fdiv
cmp
sbb
insb
mov
mov
lea
or
jb
js
in
cltd
movsb
rcrb
dec
inc
adc
stc
mov
push
push
cmpsb
sub
sbb
inc
daa
push
add
dec
push
mov
rcrl
and
popa
inc
ret
and
nop
sbb
cmp
pop
dec
pushf
mov
cmpsl
or
sub
orb
and
call
stos
lock
cmpsb
xchg
fsubrl
mov
bound
insl
loop
inc
imul
ja
sub
loope
xchg
xor
xor
dec
pusha
ja
pop
xchg
jns
mov
scas
mov
leave
cli
cmpsb
add
lods
pop
inc
dec
mov
jge
fisttps
repnz
cmp
and
vpsrlw
lock
lds
lcall
popf
repz
lcall
das
xchg
and
jle
ds
popf
add
outsb
cmpsl
insb
xor
into
loope
xchg
cmp
sub
or
xor
in
add
xor
out
xor
sub
test
mov
adc
mov
div
incb
jne
adc
push
dec
call
adc
jno
scas
sahf
test
dec
icebp
mov
push
push
adc
push
mov
add
mov
sahf
shlb
pop
pop
xor
ret
pop
inc
and
xor
imul
daa
push
pop
inc
loop
imul
jbe
pop
addr16
pop
fwait
pop
rcll
push
lds
push
add
jno
sbb
and
inc
adc
cwtl
loopne
out
push
test
mov
lahf
adc
push
lahf
es
pop
adc
xor
lret
fimuls
cmp
push
mov
or
orl
lea
mov
decb
jns
dec
cmp
movsl
sub
add
out
fs
pop
or
pop
nop
inc
shl
in
pusha
insl
pop
ja
and
jns
iret
lds
rorl
jle
ja
loopne
insl
int3
sub
mov
pop
push
mov
jecxz
scas
adc
outsl
mov
pop
add
arpl
jae
call
inc
data16
pop
mov
xchg
or
pushf
sub
push
leave
jp
shrb
fistpll
jmp
fimuls
push
pop
pop
or
sbb
or
call
movsb
pushf
ljmp
stos
sub
cltd
insb
shl
xlat
std
adc
gs
mov
daa
jno
mov
int3
pop
xor
push
es
xchg
inc
jno
add
pop
and
decb
mov
and
rorl
dec
bound
inc
sbb
shl
mov
popl
jo
shrb
sbb
pop
js
in
into
push
ret
cwtl
roll
ret
shlb
std
test
shrb
fwait
or
daa
pop
jg
ljmp
push
sbb
outsl
out
dec
test
mov
and
mov
xchg
enter
pop
mov
cmp
cmp
mov
movsb
push
pushf
jne
cmpsb
arpl
add
cmp
xchg
mov
cmpb
js
push
cmp
pop
clc
xor
lock
mov
cmp
mov
lret
rcrb
ljmp
cmpl
xchg
mov
leave
inc
pushf
test
xchg
dec
cmp
popa
fdivrs
lret
xchg
xor
lret
hlt
shrl
stc
add
add
scas
data16
mov
or
and
add
or
push
or
sub
xchg
sbb
cmp
or
push
pusha
das
test
mov
adc
in
sbb
mov
mov
pushf
test
and
jae
not
subl
incl
dec
adc
xchg
ficompl
movsl
testb
lods
jae
dec
pop
orl
lods
sub
ds
popf
addb
xchg
pop
sbb
lea
call
inc
xor
out
cmp
mov
jle
leave
push
and
and
outsb
jbe
adc
or
test
cltd
push
arpl
insl
jo
cmpsb
movsb
cltd
mov
clc
sti
test
and
or
mov
inc
cld
std
icebp
jle
push
xor
adc
cmp
iret
xor
test
xor
xchg
pushf
add
imul
push
shll
jmp
push
out
and
add
inc
out
sub
pop
cld
pusha
outsl
mov
add
xchg
cli
xchg
dec
cmp
repz
mov
les
add
sub
or
inc
mov
pop
decb
push
ljmp
movsl
adc
xchg
add
repz
mov
call
lods
mov
jecxz
es
dec
cltd
xor
mov
sbb
cmc
cmp
ret
stos
dec
mov
lock
bound
int3
push
push
and
pop
dec
sbb
out
jecxz
pop
enter
aas
repz
cmpsl
mov
and
adc
sub
sub
fwait
test
add
popl
sbb
mov
movsl
sub
repnz
mov
add
jo
pop
push
mov
clc
sub
pop
into
push
pop
loopne
mov
jg
movsb
inc
dec
les
xchg
lret
add
ja
stos
or
imull
mov
pop
out
and
mov
jmp
stos
in
dec
inc
insb
mov
push
and
jbe
lret
int3
xor
pop
fistps
clc
cltd
add
add
scas
mov
sarb
cmpsl
aam
push
mov
push
jecxz
adc
std
sbb
adc
movsl
mov
inc
sahf
sub
mov
cld
fsubrl
jb
adc
out
hlt
repz
push
into
sbb
lret
pop
int
mov
xchg
sub
out
imul
mov
inc
insl
psubd
outsw
cmc
pop
icebp
lret
xchg
lret
imul
or
xchg
mov
xchg
jb
push
in
inc
rolb
dec
or
mov
movsl
test
xor
fsubs
jle
mov
or
inc
xlat
xor
shrb
imul
mov
jge
into
cli
loopne
orb
pop
push
pop
scas
test
popf
pop
mov
mov
jo
cmc
mov
cmp
dec
addr16
iret
add
push
xchg
inc
jnp
mov
lret
mov
push
or
xchg
stos
gs
in
cmp
insb
ret
xchg
push
int3
mov
lods
test
repz
outsl
sbb
pusha
fwait
cltd
mov
inc
dec
xor
mov
mov
scas
sub
out
out
push
xchg
adc
jne
jge
xchg
lock
fwait
pop
pop
imul
xchg
pop
and
fcmovbe
shlb
or
mov
mov
decb
sub
iret
scas
rcrb
ficoml
adc
loop
popa
movsb
lods
mov
mov
and
pop
cmp
clc
cmp
mov
xchg
sbb
loope
jns
call
add
insl
add
xor
mov
scas
mov
movsb
je
std
cmp
cwtl
inc
jmp
loopne
inc
hlt
fnsave
icebp
imul
and
test
call
and
not
popf
cmpb
cmp
mov
cmpsb
call
dec
ret
popf
js
mov
fisttps
cmpsl
xchg
jmp
fists
fld
pop
js
jnp
xor
sahf
call
and
lcall
xchg
adc
and
out
sbb
jno
jae
fldt
lahf
adc
cmpsl
dec
xor
les
or
fstpt
notl
fcoms
mov
lahf
cltd
mov
inc
jns
dec
add
movsl
mov
xchg
cmpsb
xchg
movsl
mov
dec
xchg
and
mov
cmp
mov
jge
fcom
mov
aaa
test
jg
inc
shll
es
pop
pop
and
dec
shl
mov
jne
daa
jbe
xchg
pop
incl
jns
das
repnz
add
jecxz
ljmp
rolb
std
stc
fcmovne
setle
jecxz
lods
ret
xchg
and
in
mov
jb
xor
jle
cmc
rorl
and
mov
dec
test
rcr
push
ljmp
cli
out
clc
push
test
push
mov
fwait
add
push
lock
xor
adcl
popa
fnstsw
push
sbb
xchg
addr16
frstor
sub
push
loopne
ljmp
ss
lods
popa
mov
rcrl
pusha
cs
leave
fildl
fwait
xlat
mov
mov
loope
push
push
les
out
inc
xor
stc
pop
or
inc
add
cmp
into
xor
push
fwait
jne
in
loop
mov
jbe
xchg
pop
divb
adc
fcoms
or
and
sti
jno,pt
inc
js
push
push
push
iret
nop
or
pushf
xchg
cli
imul
in
xchg
add
das
push
enter
mov
xor
je
jne
jno
or
mov
loope
jmp
sbb
jecxz
aas
sub
arpl
or
mov
lahf
pop
and
cld
movsl
dec
std
sbb
adc
adc
pop
dec
pop
mov
add
inc
or
cwtl
int3
sub
pop
or
sub
push
icebp
dec
ret
cld
scas
lret
jge
sub
lods
clc
sti
lds
mov
sbb
inc
push
gs
fldz
lods
and
jns
fsubrp
sbb
pushf
das
test
jecxz
push
int
cli
pop
data16
stc
mov
dec
lcall
add
sbb
fisubs
pop
sub
pop
mov
fwait
pop
loop
pop
push
jns
sti
sbb
gs
push
leave
shrb
xchg
inc
gs
xchg
xchg
lahf
fdivs
ds
jmp
out
aad
xorl
jge
pushf
and
sahf
xlat
popf
pop
ja
sbb
xlat
mov
sub
sbb
outsb
movsl
fnsave
push
in
jnp
daa
mov
or
insb
jbe
add
sub
push
iret
cmp
insl
mov
mov
lock
stc
inc
dec
popf
sub
jbe
test
popa
push
mov
mov
notb
or
fistpl
outsl
jno
lds
pop
xor
mov
stos
loope
sti
adc
ljmp
lcall
mov
lahf
hlt
aad
jno
push
cwtl
cmp
sub
jg
repnz
inc
cld
outsl
jns
out
repz
stos
int
loopne
mov
inc
jbe
es
in
xchg
dec
lret
movsb
shrl
push
addl
lea
adc
cmpl
or
cmpsl
scas
sbb
icebp
cmp
and
cmp
pop
imul
addr16
or
add
or
test
lahf
popa
cmp
adc
jg
ror
hlt
push
xchg
sub
sub
xchg
mov
in
mov
je
inc
loopne
or
arpl
andb
pop
jbe
or
pop
imull
xchg
pop
in
lock
test
test
mov
fildl
stos
les
add
stos
cmpsl
andb
xor
mov
aam
mov
es
enter
inc
mov
push
add
ret
fdivs
les
inc
ds
jecxz
fstpl
ret
mov
dec
inc
cmp
mov
addl
xorb
cmp
out
jge
vpminub
mov
push
push
sub
addl
dec
inc
pop
mov
jmp
shrl
lea
inc
sub
repz
adc
push
jmp
insl
pop
int
mov
xchg
cmc
inc
imul
mov
sbb
ljmp
mov
aad
mov
and
das
push
stc
push
pop
mov
mov
pop
notb
ss
cld
repz
cmp
sub
bnd
pusha
pop
imul
nop
pop
xchg
out
pop
mov
sub
adc
pusha
inc
movsl
lahf
push
daa
and
in
fdivrl
or
shlb
das
je
sarb
dec
mov
and
cmp
and
aam
xor
mov
lds
stc
lahf
add
mov
add
dec
pop
dec
stos
inc
das
add
inc
xchg
lret
dec
mul
fisubrs
pop
rep
mov
out
out
xchg
daa
xchg
addb
and
sarb
push
dec
xchg
mov
cmp
sbb
or
mov
adc
mov
push
int
mov
orl
out
dec
cltd
jle
sbb
jbe
jnp
int3
pop
cmpsb
sbb
dec
mov
mov
xor
or
xchg
mov
lret
cmp
and
push
cmp
push
insb
add
add
outsl
shlb
imul
out
sar
xchg
adcl
mov
cmp
insl
xchg
ret
stos
test
or
pusha
adc
popf
push
jo
jne
inc
cmp
and
cltd
iret
scas
js
xor
out
lock
xchg
loop
adc
out
or
movb
push
pop
wrmsr
dec
xchg
shlb
lcall
js
mov
and
dec
jne
sub
pushf
mov
mov
sub
sbb
sbb
out
repz
jmp
jle
insl
ret
int3
scas
cmp
clc
mov
jbe
lods
outsb
jae
repnz
pop
adc
inc
out
jne
cmp
data16
addr16
lcall
adc
mov
repnz
jne
jne
test
in
mov
shr
and
inc
call
push
sbb
jno
xchg
popf
lret
scas
in
popa
adc
fs
mov
in
je
in
in
orb
dec
mov
fdivrs
dec
and
mov
or
jle
push
jmp
mov
mov
inc
inc
xchg
pop
cmp
icebp
loopne
xchg
dec
cmovg
out
bound
lea
jecxz
aas
out
sbb
sub
mov
inc
pop
cmp
fisubs
rorl
mov
dec
cmp
jb
xchg
sbb
push
push
sbb
popf
sub
jo
dec
sbb
jbe
stc
inc
mov
hlt
inc
mov
clc
jmp
mov
scas
fildll
push
push
mov
jecxz
adc
xchg
push
repz
stc
cmpsl
call
push
sbb
sub
je
lods
sub
or
sbb
loopne
adcb
sub
pop
adc
push
nop
sub
dec
bnd
mov
repz
cltd
and
cmp
ds
sub
mov
pop
mov
adc
jge
fsub
mov
scas
stos
add
dec
push
stc
inc
flds
adc
dec
add
in
mov
jno
sub
cmpsb
xchg
mov
pop
ror
ljmp
aam
daa
ficompl
jmp
or
inc
mov
lcall
jae
bound
pop
lods
xchg
push
mov
subb
and
mov
shll
inc
pop
or
pop
jno
sub
outsb
add
test
daa
dec
xchg
sbbl
sbb
push
sbb
adc
test
frstor
cli
sub
sarl
adc
jmp
push
cmp
push
pop
adc
inc
pop
mov
clc
sahf
subb
outsl
cmp
es
jecxz
int
enter
pop
jae
test
lods
push
lret
in
imul
rcr
mov
aad
mov
mov
hlt
lahf
jle
lods
xchg
pop
xchg
mov
rcl
push
jle
dec
jo
push
mov
push
pop
inc
lret
iret
mov
hlt
movsb
lock
inc
and
lods
push
or
push
fstl
mov
imul
add
cltd
iret
ljmp
push
xchg
orb
cmc
inc
ljmp
or
movb
or
loope
jo
hlt
mov
or
mov
movsb
movsl
sub
push
fistps
js
xchg
or
add
dec
sbb
test
jl
pusha
fwait
or
lods
aad
xchg
iret
pop
out
pop
cmpl
pop
stos
dec
cmp
ret
fnstcw
sub
movsl
pop
mov
js
mov
mov
aaa
or
test
imul
sub
je
ret
stos
in
adc
icebp
mov
mov
xchg
and
sub
test
insb
xchg
mov
mov
fs
add
mov
mov
pop
sbb
sti
push
lods
sbb
jmp
fisttpll
push
sub
enter
and
inc
add
loope
inc
sub
cmpsb
mov
pop
subb
push
cmp
cmpsb
adc
jb
stos
sub
and
xchg
push
jl
popf
movsl
adc
enter
and
sti
xor
movsb
fstpt
xchg
mov
pop
je
scas
pop
pop
fwait
ret
fdivrs
jge
jecxz
cli
clc
jns
jmp
fisubrs
jo
xor
in
push
scas
xchg
pop
adc
and
filds
mov
rcrb
orl
jmp
xlat
or
push
lcall
loope
push
cld
dec
xor
mov
hlt
cbtw
and
inc
mov
fdivr
scas
in
out
push
adc
fistl
cmpsb
fstpl
lahf
jmp
test
xchg
jne
jns
fstl
clc
dec
push
fsubs
mov
in
adc
sahf
mov
push
std
shrb
dec
dec
ds
add
mov
pop
sbb
out
or
repz
test
inc
enter
fidivrs
pop
mov
ja
bound
stc
cmp
jle
imul
mov
sbb
add
inc
mov
and
aad
dec
jle
cmp
push
popf
and
gs
clc
cltd
add
ror
jnp
mov
cmpb
mov
mov
xor
jle
iret
pop
adc
adc
pop
mov
icebp
jle
fldenv
or
das
adc
cltd
dec
mov
add
jmp
xchg
aad
loope
hlt
or
andl
int3
stc
in
jl
mov
jmp
inc
mov
rclb
pop
mov
xor
push
mov
inc
jl
jnp
jg
dec
inc
inc
arpl
nop
sub
dec
fmuls
rol
out
add
cmc
inc
cld
les
adc
add
cmp
fldln2
in
lods
ror
mov
clc
xor
xchg
and
mov
jbe
jae
loopne
pop
jns
push
fimuls
inc
jae
roll
or
cmp
push
inc
gs
into
mov
push
pop
sarb
fbld
push
push
lahf
dec
adc
lret
pop
push
in
sahf
pop
xchg
in
mov
inc
test
mov
aaa
or
scas
pavgw
xor
repz
int3
rcll
js
movsl
mov
inc
xchg
in
aad
mov
add
sbb
push
notl
mov
dec
fucom
in
pop
dec
stos
lea
inc
xchg
pop
pop
mov
adc
lret
mov
ljmp
data16
clc
rclb
mov
adc
jb
adc
xchg
addb
bound
scas
cltd
xchg
fimull
gs
loope
xor
push
cmp
jnp
cltd
sub
mov
fcoms
add
jecxz
sub
aad
sub
mov
push
xor
and
adc
xchg
push
jge
lods
in
sub
jmp
dec
or
jp
mov
out
dec
repnz
sub
jle
xlat
inc
fistpll
lock
in
jae
or
inc
mov
xor
xor
mov
xchg
push
cmp
mov
jnp
push
stos
jne
pusha
addr16
inc
pop
and
and
pusha
jns
mov
sahf
pop
xor
add
push
fwait
ljmp
sbb
mov
inc
andl
mov
fucomi
fidivs
mov
adc
pop
push
push
orl
jge
xchg
jecxz
ficomps
mov
xor
xchg
pop
pop
test
push
fmuls
stc
push
dec
rorb
outsl
mov
rorb
cmp
or
jecxz
rcrb
imul
out
mov
adc
cmp
mov
xchg
popf
sbb
jno
mov
mov
data16
test
mov
push
in
fcom
push
int
rclb
push
adc
and
xchg
ss
and
adc
cmp
nop
add
xor
mov
lcall
pop
das
out
out
pop
arpl
push
mov
push
outsb
nop
add
loopne
push
sub
push
outsl
pusha
aam
mov
rcrl
test
leave
fwait
push
mov
jo
sti
shl
mov
lcall
sar
adc
rorl
sub
sub
sub
sahf
jno
popa
sub
pop
jns
stos
jne
pop
xchg
push
add
jne
dec
add
stc
inc
dec
push
orl
ss
xchg
lods
movaps
ficoml
dec
icebp
or
xchg
fs
insb
daa
arpl
imul
pop
xchg
pop
mov
mov
push
adc
dec
leave
test
fucomip
sahf
outsb
dec
pop
jmp
mov
pop
fsubrs
jge
mov
mov
add
ja
push
dec
cli
push
cmp
pop
push
ljmp
mull
mov
adc
pushf
shr
pusha
aam
jb
cmp
and
xchg
cli
in
icebp
inc
mov
std
imul
addr16
sub
pusha
imul
mov
sarb
addr16
mov
insl
insb
jl
pop
out
lods
push
jecxz
push
and
cmp
jl
int
pop
xchg
fsubrl
sti
dec
clc
pop
test
dec
ret
cmp
mov
shrl
push
push
stos
xchg
ds
inc
lock
cmp
push
dec
sbb
jbe
scas
popf
shl
sbb
sarb
pusha
cwtl
mov
out
fwait
jno
fnstenv
or
push
pop
push
cld
ds
loop
cmp
iret
lods
xor
dec
mov
outsb
sbb
jl
sub
out
jae
add
dec
sbb
cmc
aas
pop
and
jno
test
pop
call
cmp
mov
xor
mov
aad
mov
in
test
mov
and
and
cmp
loop
aaa
adc
mov
mov
int
call
gs
sti
mov
mov
pop
mov
jbe
mov
add
pusha
sbb
int3
imul
push
in
rorb
pop
movaps
test
test
jnp
lods
aaa
push
out
aad
popa
lcall
cli
stos
mov
xor
or
xlat
jo
xor
aad
out
inc
ret
aam
test
sarl
js,pn
fnstcw
loop
mov
notrack
imull
inc
into
cmp
lret
and
hlt
adc
dec
dec
push
jns
and
xor
cmp
push
dec
jmp
int
cmp
push
push
repz
int
and
stos
ret
mov
push
push
push
mov
nop
dec
mov
xchg
add
push
xchg
cld
xor
cli
je
inc
jo
pop
fs
mov
jle
dec
mov
or
outsb
xor
ss
lods
mov
mov
lret
sub
pushf
cld
pop
mov
and
push
lds
mov
dec
push
dec
int3
push
jg
icebp
cmp
pushl
scas
mov
imul
jge
adc
mov
insl
mov
orb
xchg
inc
fabs
push
in
test
adc
scas
cs
dec
sbb
lret
xchg
and
decb
dec
aad
cmpsb
add
pop
test
loope
int3
push
outsl
mov
je
lods
jb
mov
icebp
sbb
lahf
rcrb
dec
dec
jb
movsb
lds
mov
std
in
ret
test
jbe
adc
xor
push
push
hlt
pop
test
mov
push
sbbl
push
inc
mov
xor
out
divl
push
outsb
fstpt
fcomps
cmp
jno
mov
lds
inc
pop
or
xor
orl
out
orb
jmp
sbb
sbb
cmc
out
jnp
lds
jg
push
ds
out
add
ficomps
sbbb
push
xchg
and
jmp
xchg
and
jp
ljmp
ds
ja
pusha
fsubl
mov
je
popa
and
inc
das
sbb
jbe
dec
into
daa
xor
xchg
inc
pop
push
inc
adc
es
mov
lds
cmp
fs
inc
jne
xor
test
push
jo
xchg
loop
mov
ja
ret
and
jge
adc
add
sbb
sbbl
aas
std
sub
xchg
call
and
xchg
shl
xchg
mov
mov
xchg
out
and
sbb
sbb
rorb
and
sub
in
cltd
insb
jns
add
pop
inc
mov
inc
inc
rorb
aaa
xor
adc
test
data16
repz
jp
dec
jmp
addr16
in
shrb
add
loop
in
out
leave
fisubrs
mov
aas
mov
or
ret
sbb
jmp
lcall
add
jge
jecxz
push
and
pop
std
mov
das
das
adc
cld
or
sbb
cmp
stc
mov
iret
cmp
mov
scas
xor
stc
out
mov
push
mov
cs
adc
inc
sub
out
nop
xor
cmp
les
fimull
mov
inc
into
aaa
iret
aam
stos
and
fwait
sub
in
and
mov
andb
pop
test
shlb
mov
cmp
je
orl
cmp
popf
pop
jp
bnd
xchg
mov
adc
sub
bound
sarl
cli
pusha
lds
movsl
inc
ficoml
andb
pop
xor
push
jnp
inc
sub
or
xchg
sub
mov
loopne
sub
jg
lods
stos
jg
sti
pop
pop
aam
fidivs
sub
jecxz
or
fsub
negl
add
jg
decl
sub
add
cmp
xchg
test
fwait
and
outsb
stc
adc
sub
sub
cld
int
cli
imul
jne
mov
fiadds
xor
fildl
mov
in
or
pop
xchg
aas
popf
cmp
dec
rol
test
add
cmp
inc
add
mov
jl
cld
sub
bound
aam
or
lret
inc
out
jnp
stc
cmp
je
repz
ja
jns
stc
loopne
xlat
bswap
scas
dec
jbe
dec
mov
xor
xchg
cmpsb
xor
xchg
aad
xchg
sub
pop
jp
mov
ds
lcall
ret
sub
movsb
sahf
inc
xchg
mov
lahf
ja
aad
fildll
addl
push
pushf
jg
insb
or
xchg
push
add
cltd
xchg
test
jne
sbb
sahf
jb
add
push
outsb
add
cmpsl
insb
cmp
ror
loope
in
cld
stos
jns
aam
test
xor
int
pushf
xor
mov
in
mov
call
addr16
push
jo
ret
rclb
std
daa
adc
jmp
out
mov
scas
mov
xor
or
cli
xor
bound
movsb
stc
sub
mov
outsl
cmc
push
in
loope
and
loope
mov
pop
inc
fnstenv
add
xor
or
ss
mov
pop
leave
nop
push
lcall
cmp
or
pushl
hlt
and
dec
roll
loopew
rolb
and
mov
negl
movsl
cmp
sbb
scas
inc
scas
cs
shll
sbb
cmpsb
inc
mov
icebp
lock
popf
rcr
lahf
jns
lret
sub
push
mov
jnp
push
push
and
and
pop
mov
movsb
push
mov
sbbb
jl
adc
or
jo
dec
add
hlt
inc
lods
and
shlb
hlt
mov
filds
dec
fdivr
pop
sbb
sub
int3
pop
lcall
rcll
sub
mov
lods
jecxz
push
clc
out
pop
jbe
jno
xor
shll
adc
test
imul
pop
push
jecxz
jge
aad
rcrl
jb
jns
ret
and
xlat
xchg
xor
mov
push
popa
add
stc
push
and
stc
imul
scas
inc
push
xor
movsl
dec
leave
cmpb
inc
insb
pop
push
inc
fwait
or
call
xor
mov
dec
jno
aam
and
pop
cwtl
ljmp
mov
push
cmp
jbe
or
dec
pushf
sbb
jae
push
jne
into
xorl
test
push
dec
jg
xor
inc
lock
loop
jnp
push
xchg
mov
adc
sub
or
xchg
jecxz
xor
mov
lock
mov
fbld
in
sbb
or
jg
cmp
rorb
fs
xchg
dec
cmp
sub
or
fs
push
jl
daa
sub
push
add
in
loopne
stc
mov
shlb
je
sub
testb
or
xchg
outsl
dec
stos
fs
adcl
add
push
or
or
sub
je
sbb
adc
loopne
pop
inc
inc
push
cmc
mov
notb
sti
movsl
mull
nop
mov
push
inc
mov
test
std
cmpsl
jg
inc
or
sbb
in
jns
mov
xchg
push
mov
jno
and
and
cmc
roll
stos
push
add
fbstp
rcrl
xchg
lds
loope
mov
js
mov
xchg
sbbl
push
xorb
lock
inc
into
idivb
movsb
push
addb
mov
mov
js
xchg
pop
xor
std
fcoms
jb
sub
test
mov
test
es
jg
fisubrl
mov
mov
and
cmp
fdiv
dec
cltd
xorb
lds
pop
or
or
arpl
mov
jo
mov
fldt
js
repz
mov
push
sbb
sbb
push
pop
in
jl
or
xlat
mov
push
adc
out
dec
cltd
xor
bound
push
je
and
int3
add
lcall
and
fdivs
inc
addr16
fidivs
jmp
insl
and
cmp
iret
in
xorb
xchg
in
pop
cmp
xor
in
cmpsl
inc
jnp
outsb
sub
mov
or
stos
mull
and
ret
and
inc
xchg
fwait
cmp
aas
inc
and
ljmp
imul
push
jle
addl
addr16
fisttpll
loopne
das
cmc
das
or
push
xchg
mov
and
push
mov
sti
jae
add
cli
or
mov
aas
pop
or
addr16
adc
gs
bound
flds
dec
sub
xor
cmp
iret
cmp
mov
mov
mov
inc
bound
test
fldenv
rorb
pusha
int
cmc
jbe
ret
rorl
repz
sbb
pusha
pop
inc
push
adc
mov
push
xor
in
jl
inc
pop
leave
push
push
loope
mov
sub
mov
or
cmpsl
pop
pop
inc
repnz
add
or
inc
scas
les
push
in
outsb
xor
es
xchg
shlb
pusha
dec
fldenv
sub
adc
mov
mov
inc
dec
lcall
test
jb
sbb
mov
iret
js
adc
dec
sbb
rorl
stos
mov
mov
lahf
mov
ds
sub
dec
ja
push
ret
sub
xlat
and
sbb
mov
cmp
xor
fnstsw
add
sub
js
call
test
orb
jecxz
jo
add
inc
pop
cli
call
mov
mov
mov
repnz
mov
addb
out
lea
sub
mov
push
dec
in
cmp
repnz
rorb
stos
adc
sbb
xor
mov
das
adc
shll
lret
mov
mov
mov
cmp
jp
pop
ds
les
xchg
gs
addb
add
or
cmp
fildl
mov
jl
push
gs
shll
xlat
insl
mov
rol
dec
iret
push
mov
jecxz
xor
mov
out
popf
fldenv
mov
fs
cmpsb
dec
mov
loopne
call
adc
pop
jns
and
ret
negl
add
repnz
jo
movsl
xchg
push
pop
mov
mov
neg
sahf
xchg
dec
xor
push
sub
mov
mov
adc
cmp
daa
pop
push
icebp
call
lret
fwait
jae
cmp
cmpsb
mov
jnp
insb
or
fldenv
adc
cmpsb
in
inc
jb
jmp
leave
aaa
push
orb
adc
add
mov
sbb
popf
data16
shl
cmp
push
mov
hlt
icebp
push
pop
adc
or
mov
sbb
out
mov
scas
jnp
icebp
pop
andl
rorb
mov
mov
or
xchg
ret
sbb
mov
out
ss
pop
xor
jbe
add
mov
ss
jmpw
xor
inc
insl
aas
push
dec
pop
ret
dec
out
aam
pop
lock
mov
testb
mov
shll
and
or
mov
stc
mov
aaa
adc
dec
cmp
mov
test
jmp
scas
testb
lock
imul
fcmovnbe
dec
out
push
pop
in
popf
loop
outsl
mov
loop
mov
test
dec
sbb
and
xlat
xor
mov
jne
mov
leave
cltd
mov
ficoms
mov
sbb
xor
dec
into
aaa
and
sbb
sti
data16
or
arpl
sub
push
pop
das
icebp
dec
fisttpl
sahf
fldenv
xor
cmp
int3
mov
jp
jne
jp
adc
lahf
fmul
inc
xor
pushf
leave
test
stc
arpl
jge
adc
loop
or
push
add
xor
fwait
dec
pop
or
adc
jb
int
aam
mov
pusha
mov
sti
dec
out
cmpsl
fstl
add
pop
addr16
dec
dec
idivb
stos
aaa
sbbb
movsl
jno
fldl
cwtl
js
into
add
pop
push
addr16
test
lret
mov
adc
loop
dec
nop
jns
btr
xchg
dec
xor
mov
xor
xlat
lea
pop
out
fstpl
jl
pop
mov
mov
adc
jne
addr16
push
cmp
pop
js
sahf
leave
dec
jne
xchg
mov
stos
xchg
imul
and
push
mov
pop
jo
or
outsb
inc
adc
scas
jg
sbbb
add
or
test
rcrl
adc
mov
jno
mov
inc
pcmpeqd
les
mov
rcll
lcall
clc
adc
xlat
sti
ljmp
sub
jns
scas
jmp
adc
pop
andl
and
push
enter
jnp
clc
dec
sbb
inc
and
insl
mov
adc
leave
xlat
cmp
lods
dec
or
test
cmp
stos
stos
sbbl
pmullw
add
imul
lret
or
imul
cli
or
jbe
lret
adc
or
adc
pop
mov
inc
les
rcll
push
xchg
pop
mov
int3
or
imul
sub
push
je
mov
jne
jo
mov
stos
mov
mov
pop
inc
push
sbbl
scas
dec
shrl
gs
sub
sbb
pop
dec
int3
aas
xchg
test
pop
xor
cmc
inc
cmpsl
sbb
shll
and
mov
mov
imul
xchg
lcall
pop
mov
fisttpl
lahf
mov
mov
fiaddl
std
aam
pop
fiaddl
imul
out
cmpb
mov
cmpsb
or
out
scas
add
ja
rcl
imul
cmpsl
aad
push
aaa
cmp
or
xor
aad
inc
mov
sahf
out
pushf
jg
xchg
mov
sbbl
es
shll
mov
int
fs
negb
scas
std
dec
clc
aas
lret
push
loop
xchg
loop
lea
and
je
int
leave
jnp
roll
pop
mov
jecxz
faddl
fbld
shl
repz
jns
add
push
leave
push
arpl
push
xchg
push
decb
mov
clc
and
sub
lds
sti
xlat
iret
mov
push
mov
in
cs
sbb
divb
or
mov
gs
imul
xchg
nop
pop
xchg
xchg
mov
notl
rcrb
pop
icebp
fbstp
rcrb
scas
addr16
xchg
xor
stos
mov
enter
xlat
push
and
pop
xlat
mov
cmp
xor
fs
add
bound
in
pop
data16
jns
push
test
add
pop
out
bound
sarl
jns
dec
xor
sbb
and
xor
adc
xchg
nop
jns
xor
cmpsb
sbb
mov
xchg
test
jbe
inc
add
je
push
mov
in
enter
cltd
gs
jns
iret
or
cmp
inc
push
and
jae
or
push
rcrb
adc
rcrb
dec
mov
or
loopne
add
out
add
pop
pop
or
mov
pop
imul
pop
andl
jns
jb
addr16
sar
xchg
mov
cld
out
push
pushf
mov
js
mov
sub
xchg
or
int3
xchg
pushf
test
push
xchg
mov
pusha
and
loopne
xchg
pop
scas
push
xor
pop
cmp
lock
dec
add
push
jb
pusha
sbb
hlt
insb
jbe
cmp
xchg
daa
and
popf
icebp
dec
test
lods
mov
mov
mov
bound
adc
mov
pop
adc
xchg
or
lea
mov
xchg
push
outsb
out
out
push
dec
mov
enter
sbb
es
stos
mov
jl
push
inc
std
shrl
daa
decb
adc
movsb
and
and
in
mov
mov
pushl
insb
xchg
adc
test
xchg
lcall
cmp
xor
aas
dec
xchg
xor
cmp
mov
mov
test
cmp
lods
inc
fmull
and
fs
sub
dec
sub
cmc
jge
cmc
adc
mov
fxch
aam
push
fistpll
cmpsb
add
sti
sub
loopne
stc
dec
in
xchg
cmp
jl
outsl
add
jmp
fdivr
push
push
mov
dec
cmp
test
dec
imul
xor
sbb
imul
add
lods
ret
cli
call
ret
jg
lods
mov
das
pop
lods
jge
xor
xchg
sbb
imul
outsb
lret
xor
int
loopne
push
mov
mov
inc
and
enter
in
cmp
mov
data16
int3
xor
sub
jmp
ja
jle
lea
jecxz
jbe
xor
mov
sbb
loopne
sub
mov
sti
and
add
repnz
add
add
mov
imul
aad
adc
inc
popf
flds
aad
js
jl
pop
nop
jnp
stos
in
xor
testl
sbb
loopne
fmul
sub
mov
jb
sbb
mov
xchg
addr16
movl
or
dec
cmp
sbb
sahf
insl
mov
flds
in
hlt
mov
mov
js
inc
dec
rol
insb
jno
shrb
out
insl
add
adc
cmp
push
pusha
bound
inc
lahf
fsubrs
pusha
jl
push
xchg
jle
repz
xlat
dec
cmp
add
inc
jbe
das
add
xor
jae
push
lret
bndldx
xor
ret
fcoml
xor
and
or
adc
sahf
imul
mov
fwait
jp
lahf
outsl
lods
cmp
fstl
xchg
dec
mov
imul
push
les
or
test
mov
jmp
add
lds
or
mov
jp
or
ss
jno
jae
sarb
adc
pop
fisubrs
dec
inc
test
sti
mov
sub
jmp
sbbb
out
lcallw
adc
repz
iret
or
xchg
outsl
jbe
aad
hlt
add
cltd
xor
jb
movsl
lea
aaa
and
clc
cli
push
fincstp
mov
mov
loope
inc
sbb
dec
sahf
in
dec
stc
sbb
push
arpl
sbb
mov
sbb
shl
ret
xchg
jge
xchg
subb
movsl
or
shll
popf
xlat
jns
je
mov
clc
pop
sbb
mov
loopne
mov
ds
jecxz
cli
push
shrb
lods
mov
mov
das
jno
call
stc
imul
lods
xor
lcall
push
inc
fidivs
loope
popa
sbb
std
mov
ret
sub
paddsb
imul
ljmp
mov
inc
jp
sub
lods
add
addr16
sub
inc
je
lods
icebp
imul
jmp
repz
aaa
aaa
xchg
adc
cld
add
icebp
push
gs
jle
imul
stos
int
fs
mov
aas
jl
jmp
rcr
std
or
iret
or
gs
bound
das
ficoms
stos
ss
sbb
cmp
or
inc
rcll
and
or
jns
cmp
or
data16
in
test
sub
sbb
addps
inc
roll
out
jnp
xchg
cmpsb
dec
dec
fidivs
mov
sti
add
and
jnp
inc
xchg
js
rorb
xchg
popf
and
call
popf
push
xchg
cmp
not
mov
add
insb
jae
mov
or
das
xchg
push
insb
cwtl
lcall
punpckhwd
mov
jno
aad
sub
pop
mov
ja
cmp
sbb
pop
out
ljmp
sub
sub
dec
push
std
in
cli
fcoml
dec
sub
sti
dec
push
stos
enter
sub
sahf
xor
mov
lret
sub
out
pop
das
int3
pop
and
push
insb
cmp
adc
mov
aaa
mov
out
xor
mov
add
xchg
aam
pop
popa
repnz
repnz
rcrl
stc
pop
xchg
sub
in
shll
dec
aam
push
or
jle
inc
ljmp
cmc
or
and
leave
pop
insl
cld
clc
jmp
push
or
dec
sbb
aam
js
xchg
das
shrl
or
push
cmp
es
sbb
fs
pop
xchg
cltd
sub
fcoml
int3
loop
xor
outsb
iret
insl
push
cmc
inc
addl
lcall
lods
sti
dec
clc
add
pop
pushl
call
dec
dec
dec
aam
jnp
adc
jmp
stos
sub
mov
inc
xor
je
mov
push
push
cmp
adc
adc
enter
xor
ret
push
xor
rorl
xchg
outsl
mov
das
iret
shlb
ucomiss
popa
sub
pusha
stos
loope
xor
xchg
add
stos
mov
sti
lcall
or
xchg
pop
lds
push
pop
neg
fimull
ficoms
in
iret
divps
roll
jg
flds
int
ret
lods
cmp
dec
dec
sbb
shrl
pop
mov
push
or
imul
insb
aad
push
or
pop
xchg
lock
inc
lret
cmpsb
and
popf
mov
pop
stos
jmp
int3
push
shlb
insl
sbb
cmp
es
sbb
mov
or
sti
adc
pop
add
cs
pop
jno
js
jb
dec
icebp
mov
cmp
sahf
xlat
cmp
int3
jl
fmull
push
hlt
stos
mov
sub
push
inc
adc
mov
dec
aas
inc
dec
out
push
push
and
sarb
xchg
mov
and
mov
dec
repnz
scas
jl
cmp
mov
push
ja
pop
pop
or
subl
xchg
fildl
mov
stos
jmpw
repnz
addr16
xchg
popf
mov
xchg
cmp
mov
jb
add
push
add
lock
imul
add
rcll
iret
mov
js
test
sub
adcb
loop
aaa
push
mov
imul
fs
aad
pop
aaa
pop
rol
movsl
jg
sbb
sbb
popa
xor
xchg
cwtl
add
testb
push
jp
fsts
mov
js
insb
fstpl
xchg
dec
mov
adc
jge
test
jp
jp
repz
pop
add
je
lea
jge
gs
push
aam
inc
jne
mov
and
ja
sti
dec
out
push
adcl
arpl
mov
jecxz
sub
mov
adc
cmc
out
lods
push
popf
jecxz
mov
add
lahf
addr16
loopne
mov
adc
les
dec
fists
lock
les
pushf
sub
enter
sub
jge
mov
sub
add
rorb
push
add
cltd
test
cmpsb
inc
inc
xchg
mov
push
jg
push
adc
jns
adcl
jo
arpl
data16
sti
add
inc
addr16
dec
rcrl
mov
loopne
jns
fisubs
push
es
and
dec
dec
lods
mov
filds
xchg
push
mov
outsl
aaa
inc
pop
in
popf
enter
ret
lock
or
add
stos
lret
adc
stc
lcall
mov
pop
xchg
pop
cmp
jle
in
insl
imul
lret
add
stc
popf
or
popf
add
data16
sbb
cmpsb
decb
xor
pop
fldt
out
adc
and
inc
out
sub
in
or
movsb
mov
imul
insl
sub
cmpsl
cmp
pop
inc
int3
push
imul
mov
les
in
jmp
rorb
or
test
outsb
pusha
push
push
cmp
jmp
inc
out
ds
ljmp
arpl
jns
es
fldenv
scas
imul
mov
movsl
add
lea
cmp
sub
jno
jecxz
je
scas
jp
lock
mov
and
sbbb
aas
jmp
cwtl
pop
lods
fildl
pop
in
mov
rclb
push
ret
cli
jmp
popa
inc
pop
test
dec
pop
rcll
sbb
or
mov
fdivs
lock
jecxz
adc
and
mov
and
dec
mov
cmp
add
push
cmpsl
adc
xchg
cmp
popf
dec
in
loopne
icebp
filds
inc
clc
cwtl
repnz
mov
fildl
jo
ret
mov
mov
stos
jb
inc
jns
xchg
xchg
mov
enter
incl
pop
bnd
ret
or
add
or
xor
lahf
arpl
dec
insb
sti
jno
clc
push
icebp
ss
pop
add
sub
sub
cmp
xor
dec
cltd
mov
lret
mov
out
clc
pop
jle
xchg
aaa
in
mov
xor
mov
iret
dec
lds
clc
lcall
test
lret
aas
nop
dec
mov
dec
je
jo
dec
mov
dec
mov
mov
xor
ss
dec
fdivrs
imul
bound
push
mov
dec
jns
sub
cs
sbb
jbe
insb
xor
xchg
inc
loope
ret
pop
cmp
xchg
movsl
sahf
xchg
and
lods
pop
push
push
loope
fwait
loope
into
jns
invd
movsl
mov
sbb
push
sahf
sbb
lods
movb
mov
pop
jecxz
add
cmp
outsl
push
subb
or
sahf
lock
adc
push
lock
ss
dec
push
xchg
mov
mov
xor
dec
in
in
xor
mov
in
jge
rcrb
inc
xchg
mov
lret
xchg
iret
std
aas
insb
dec
mov
nop
ja
sahf
xchg
shll
jge
das
sbb
or
xchg
add
int
cmp
mov
xchg
mov
frstor
aad
loopne
stc
sbb
mov
xchg
in
push
or
insb
inc
jmp
add
jmp
int
ret
inc
rol
test
icebp
mov
aad
mov
dec
and
pop
jnp
stos
jb
dec
sbb
ja
jp
inc
push
out
adc
jp
outsl
aad
dec
pusha
ret
js
push
clc
dec
enter
and
pop
push
into
nop
mov
jle
or
jnp
addb
in
mov
mov
fisubrl
stos
arpl
cmp
in
shrb
pop
popa
sub
test
inc
movsb
repnz
idiv
jg
pop
movsb
imul
sub
push
repz
xchg
mov
rcrl
mov
nop
xor
fsubl
test
jae
out
data16
and
ss
js
pop
stc
pop
dec
ss
xor
cs
xor
cmp
or
adc
scas
add
add
cmc
dec
cltd
leave
xor
insb
ret
addb
cwtl
sbbb
imul
call
cmc
ret
sarb
jle
mov
jo
mov
push
dec
rcrb
jnp
fists
dec
add
or
dec
loop
adc
test
es
or
mov
mov
cmp
imul
jg
pop
xchg
push
adc
cwtl
and
iret
es
mov
out
aas
or
push
pop
aas
fisubs
push
adc
jae
inc
jo
fcoml
jne
pop
jb
push
mov
loopne
je
jb
bound
outsb
jecxz
sub
cmp
adcb
dec
rcll
push
orl
scas
inc
in
jnp
cmc
roll
or
hlt
xchg
mov
aad
pusha
and
dec
xchg
xchg
dec
and
pop
mov
cmp
std
jae
mov
push
leave
test
jle
pop
adc
mov
inc
cltd
int3
xchg
xorl
mov
mov
or
fisttps
mov
jle
cmpl
sub
lcall
pop
sub
fisubrl
sub
shr
les
mov
aad
jbe
mov
lock
jo
movsb
pop
out
gs
add
int
ja
ret
adc
enter
inc
in
daa
or
pop
addr16
in
pop
sub
cmp
push
xor
cld
aam
dec
xchg
loope
mov
dec
ds
push
rol
pop
out
inc
jecxz
or
sub
in
cmpsl
xchg
and
jno
mov
bound
dec
push
lret
jbe
push
jl
or
in
jns
xchg
iret
adc
test
in
sub
andb
idivl
subl
aaa
jnp
data16
out
out
pop
pop
xlat
fdivr
jge
imull
pop
adc
mov
or
cmpsl
nop
call
jp
je
xor
jp
cwtl
dec
test
test
mov
or
jns
idiv
ss
movsl
in
insl
xchg
lret
jb
adc
pop
test
adc
arpl
leave
loop
cmp
jecxz
inc
cmp
imul
adc
cmp
aad
lods
pop
imul
mov
loope
addr16
adc
loopne
xorl
lods
pop
jle
repz
in
stos
test
adc
ss
xchg
aaa
sbb
pop
adc
adc
stc
shl
movsb
sbb
cmc
or
bound
pushf
sub
jle
ficoms
xchg
mov
cmc
push
cmpsb
lods
add
jg
xchg
rcll
add
inc
dec
inc
in
cmp
sub
cmpl
stos
dec
in
cs
sbb
iret
mov
sub
jns
sub
mov
int
ds
test
adc
cmpsb
sbb
nop
rcll
stc
sbb
cs
call
aas
fidivrl
test
push
jns
fsubrs
subl
xor
movsb
cmp
sub
and
cli
cmpsl
les
inc
mov
mov
add
scas
or
daa
jbe
aam
test
rcll
add
pop
int
dec
cmpsl
adc
xor
sbb
stos
je
cld
icebp
add
pop
push
cmp
lods
mov
sbb
xchg
enter
lret
daa
add
pushf
push
faddl
jae
push
mov
and
std
xchg
cwtl
push
shrl
scas
cmp
dec
fcmovbe
shll
imul
scas
sbb
icebp
gs
xchg
outsl
or
or
jmp
jecxz
xchg
mov
sbb
push
and
stc
mov
sti
addr16
or
or
dec
stos
flds
push
xchg
inc
adc
fs
pop
push
sti
std
adc
test
lret
pop
insb
xor
sub
cmc
into
mov
fdivrs
xchg
mov
outsl
in
leave
xchg
mov
push
inc
popa
pop
cltd
cli
xchg
mov
stos
scas
mov
sub
or
stos
jo
enter
clc
test
xor
jno
inc
mov
xchg
stos
call
imul
and
xchg
add
rorb
dec
or
in
push
cld
pushf
clc
fs
push
std
jno
add
dec
jp
imul
test
mov
push
and
lock
outsl
jmp
das
mov
xor
and
inc
mov
and
insl
dec
push
out
mov
sbb
cmp
mov
lods
jbe
sbb
cltd
mov
mov
in
mov
jle
push
pop
ja
ljmp
incl
fdivrs
mov
adc
push
lret
jnp
outsb
loop
cmp
xchg
xchg
or
lock
push
addb
sbb
mov
sbb
loopne
in
rorl
pop
or
xor
or
cmp
movsl
in
mov
mov
imul
es
arpl
sti
dec
dec
testb
cmp
in
inc
inc
cli
stos
test
fdivl
dec
add
into
flds
inc
movsl
adc
jmp
pop
fidivrs
pop
cmp
xor
push
xchg
push
pusha
jns
ds
xor
jecxz
mov
sbb
or
ret
std
push
bound
pop
cs
test
popa
xor
mov
in
stos
decl
mov
jns
add
xor
xchg
mov
push
push
into
xchg
cmp
movsb
fldcw
call
xlat
sbb
mov
sub
fistpll
out
add
dec
out
adc
inc
out
dec
mov
clc
in
popa
push
pop
push
ss
mov
adc
into
rcl
xlat
xchg
cmp
jmp
add
cmp
adc
fmul
ficoml
jb
fldt
cmp
jae
repz
scas
mov
jecxz
mov
aas
andl
bound
dec
aad
add
int
add
pop
adc
adc
push
addl
pusha
lea
jl
outsl
xchg
push
stc
shrl
ret
mov
and
mov
mov
jnp
cli
xor
sbb
int
out
stos
push
cmp
adc
in
bnd
iret
xchg
inc
bound
cmp
dec
in
sbb
inc
int3
push
ss
dec
mov
aad
scas
fsubl
xor
pop
and
adc
ret
rcrl
xchg
loopne
shll
rcrl
test
aam
ret
xchg
scas
pop
jl
dec
movsl
jo
sub
mov
sub
cmc
dec
cmp
nop
ficoms
js
adc
push
sahf
xor
call
pop
mov
movsb
popf
xor
xchg
push
sbb
cli
inc
pop
stc
jae
fucomp
adc
cmpsb
adc
and
in
mov
cmp
cwtl
das
pop
mov
add
scas
stc
jp
aas
push
pop
lret
or
and
pop
jp
push
fstpt
push
mov
data16
sbb
fbld
inc
add
fs
xchg
inc
cmc
push
std
xchg
adc
mov
pop
mov
in
push
or
and
fsubrl
fwait
addr16
bound
bound
add
cmp
mov
pusha
loop
js
data16
movsl
xor
ds
inc
xchg
mov
cmp
adc
fwait
sub
test
pop
pop
cmpsb
add
clc
cltd
aaa
inc
das
lcall
jbe
sbb
push
push
push
sub
shr
inc
insb
dec
outsl
aam
outsb
jae
popf
mov
pop
adcb
ret
daa
inc
xchg
sbb
or
push
ret
sub
lods
push
orps
je
add
xor
jne
test
in
sahf
lea
inc
mov
jmp
jne
in
inc
add
adc
dec
int
rcrb
jno
lret
loopne
cmp
push
std
sarl
pop
leave
sub
push
cli
sahf
lahf
hlt
xor
mov
jecxz
dec
cld
inc
mov
sub
or
pusha
test
inc
xor
jg
cmp
leave
dec
jbe
scas
test
scas
sahf
mov
imul
insb
cmp
fnstenv
sbb
mov
in
xor
push
popa
pop
icebp
pushf
xchg
dec
fcoml
in
inc
rcrb
aam
clc
fnstenv
push
mov
dec
fildl
ss
ja
sarb
jmp
int3
or
jae
xchg
mov
push
aas
mov
fcmove
adc
mov
ret
push
pop
pop
cmpsl
faddl
mov
lret
mov
inc
mov
inc
jmpw
sub
xor
mov
pop
jecxz
pop
cmp
out
dec
mov
sar
jnp
lcall
cmp
int3
push
imul
cmp
cmpsl
fmuls
add
mov
call
into
daa
sbb
xor
test
sbb
call
dec
cmp
push
inc
stc
xchg
sahf
and
hlt
mov
imul
dec
sbb
es
inc
mov
mov
or
incb
jbe
inc
dec
inc
iret
add
sub
scas
dec
sub
adc
jo
mov
dec
jo
xor
fistl
sti
enter
lods
nopl
lods
jns
pusha
pop
movsl
fstpl
loopne
jmp
mov
outsb
sbb
mov
dec
jge
xor
outsb
mov
call
xchg
mov
movsl
or
and
int3
test
std
outsl
mov
or
arpl
and
nop
iret
inc
aaa
or
xor
xorl
cwtl
inc
ficomps
std
repz
and
lcall
ret
stc
inc
sub
mov
xchg
mov
pushf
fadd
mov
std
je
outsl
inc
add
lds
pop
pop
outsl
xor
xlat
mov
repnz
test
or
aas
lahf
push
xchg
daa
mov
in
testb
popf
faddl
daa
mov
dec
sub
cmp
int
rorb
arpl
push
xor
jo
and
clc
sarb
setns
mov
or
pop
movsl
adc
les
js
push
sbb
xor
cmp
inc
es
mov
scas
push
mov
cmpsl
adc
mov
ds
adcb
xchg
es
enter
pop
pop
into
cmp
jp
call
add
adc
pop
dec
test
inc
sub
adc
cmpsb
push
rorl
imull
sub
subl
xchg
pusha
aaa
sbb
fadds
mov
inc
outsb
roll
sbb
adc
sbb
jle
lock
adc
lock
ja
sub
es
cmp
mov
jmp
aaa
pop
pushf
add
push
movb
mov
pop
shll
ljmp
in
jb
repz
and
in
push
out
mov
mov
sbb
lea
mov
mov
lea
jns
sub
fstl
hlt
and
addr16
pop
or
mov
jmp
arpl
bound
les
es
xor
adc
add
cmc
out
mov
shll
or
lea
inc
xchg
mov
mov
and
pop
outsb
xchg
sarb
mov
xchg
pop
les
or
jne
push
xchg
push
ret
loope
stos
mov
dec
fstl
jnp
or
mov
ret
xchg
jne
inc
sbb
cli
sub
adc
lret
pop
test
jl
jne
leave
ret
xor
sub
lods
xchg
icebp
stc
xchg
cmp
sub
decl
mov
mov
fcomp
jb
test
add
daa
lods
ljmp
xor
mov
cmpsb
push
setbe
jmp
aam
stc
movsb
xor
push
rorb
and
cmp
fmul
cmpl
xor
adc
jmp
add
jl
outsb
sahf
jg
mov
xchg
dec
inc
sbb
je
push
and
xchg
cwtl
adc
loopne
jp
clc
fnop
popa
push
jecxz
ret
push
mov
mov
and
pop
adc
stos
mov
jp
adc
sub
jp
in
sub
mov
pop
orl
adc
aaa
lods
movb
sub
push
test
pushf
xchg
cltd
add
adc
inc
xchg
into
push
lret
cmpsb
sbb
cmp
lds
pushf
jle
pusha
sub
mov
add
mov
inc
mov
mov
add
mov
int3
or
stos
cltd
jp
ds
cmpl
xlat
mov
xor
jno
cmpsb
pop
xchg
mov
enter
shll
shlb
aad
notl
test
cmpsb
push
fwait
pop
adc
repnz
xchg
ret
jns
std
cld
mov
inc
adc
mov
shll
clc
mov
sub
xlat
push
push
add
push
test
imul
xchg
jb
mov
inc
mov
orb
xchg
aam
mov
xchg
cmp
fistpll
pushf
out
push
pop
shll
push
test
jl
adc
inc
or
jl
push
push
push
mov
jmp
sti
adc
mov
dec
stc
lret
inc
pop
cmpb
loope
xor
add
add
jl
mov
jnp
psubw
pop
jp
addb
xor
push
cli
loop
cwtl
stos
jnp
ret
cli
jbe
pop
and
sub
sub
lock
and
mov
ret
xchg
lret
sub
push
cltd
mov
add
outsb
sbb
push
les
in
jmp
jbe
adc
add
lods
push
rcll
mov
sbb
lret
int
dec
bound
shll
jnp
out
push
pop
test
or
mov
out
jbe
ljmp
sub
push
fdivp
sahf
mov
pushf
dec
mov
iret
mov
stc
in
mov
out
push
dec
adc
ss
pop
pop
out
lds
out
loope
jl
pop
scas
inc
jmp
xchg
push
cld
test
xor
lret
loope
dec
sbb
imul
negb
jle
fwait
sbb
jle
and
int
or
or
fstl
push
mov
data16
xchg
sub
pop
popf
inc
ja
je
xor
and
dec
mov
data16
xchg
aaa
push
push
jle
xor
cltd
lret
and
and
in
jb
sarl
sahf
ss
jp
lea
push
mov
adc
clc
xchg
and
fldenv
aas
sbb
adc
iret
pushl
dec
sub
or
pop
xchg
icebp
mov
incb
pop
loope
push
and
add
or
popa
push
stos
scas
aas
sbb
sbb
jnp
add
imul
mov
lock
aas
fwait
jb
mov
aaa
or
sub
push
cli
outsl
cmp
out
add
xor
sub
or
cld
outsl
add
pop
jle
rcll
icebp
or
dec
lret
inc
add
pop
dec
dec
xor
cmp
fadds
insl
xchg
mov
xor
jmp
mov
cltd
xchg
insb
test
cmp
inc
sbb
addr16
shrb
je
xchg
and
cmc
push
and
pop
cmp
cltd
pop
sub
push
jb
nop
data16
push
mov
pop
mov
and
mov
lods
push
call
test
adc
xchg
pop
loop
mov
mov
es
repz
int3
gs
in
sarl
mov
xorb
ss
lcall
cmpsb
lret
lods
sbb
shl
orb
mov
ljmp
xchg
lahf
sub
lret
jb
das
push
xchg
shll
rcrl
xchg
in
mov
lret
test
cmc
jmp
mov
sub
out
mov
push
daa
adc
rolb
fisubl
inc
shrb
fwait
pop
lret
sarb
les
mov
add
or
insl
test
popf
aas
nop
inc
inc
cld
inc
test
ret
inc
lea
lret
adc
dec
cmpsb
mov
into
lcall
xor
adc
xlat
xchg
loope
adc
es
jge
dec
push
push
mov
jl
pmullw
sbb
push
xor
fsubl
lret
or
and
jp
sbb
mov
and
sub
iret
inc
add
mov
mov
fwait
add
pop
dec
orb
jp
pop
jo
dec
mov
movsl
cli
dec
lret
rcrl
xor
sub
pop
addr16
pop
mov
inc
mov
out
cs
ja
rorl
mov
mov
loopne
aas
xchg
das
or
inc
mov
add
mov
into
jmp
xchg
mov
fwait
les
bound
scas
aas
inc
inc
add
pop
aas
pop
xor
cmpsl
in
sti
gs
mov
adc
adc
stc
push
xchg
mov
mov
cmp
sahf
fs
jb
fwait
jp
sub
push
mov
and
gs
icebp
and
pop
inc
cmp
fidivrs
or
sbb
scas
data16
shlb
mov
loope
jb
adc
scas
flds
inc
xor
cwtl
dec
push
xchg
cmpsl
push
lret
jae
push
scas
fs
sbb
push
jns
pusha
cs
fists
add
dec
mov
jbe
stc
into
clc
cmp
jne
push
xchg
test
xor
repnz
xor
dec
mov
push
mov
cmp
movsl
addr16
in
fmulp
je
pop
fidivl
mov
mov
dec
jno
stc
cltd
repz
int3
xor
or
lds
repnz
cs
jbe
pushf
in
xor
jg
push
bound
push
dec
scas
leave
lock
ss
sahf
lret
mov
push
fnstsw
add
mov
cmp
and
push
out
pop
xor
test
aam
jp
in
repz
lahf
lcall
insb
jae
pop
dec
cwtl
sbb
mov
mov
push
mov
repz
pop
int3
mov
or
cs
jno
test
mov
push
mov
dec
sbb
test
xlat
neg
and
mov
fiaddl
and
popf
and
daa
and
jne
vpsrlw
inc
pop
xchg
cmp
inc
loope
ds
test
jge
xchg
movsb
xlat
gs
cmp
push
mov
in
add
gs
out
inc
outsb
negl
mov
cmp
cmpsb
mov
push
fsubr
push
cmp
roll
test
daa
insl
lcall
jle
int3
in
ljmp
ret
xor
out
dec
insb
fldt
pop
outsl
negl
mov
daa
xchg
add
imul
out
negl
xor
enter
jbe
test
jo
jle
sbb
lret
mov
or
rcll
adc
or
pushl
movsl
mov
iret
pusha
out
dec
dec
ret
jge
into
add
pushf
fadd
adc
pusha
adc
cmc
xor
push
fstl
xchg
sub
sub
fwait
adc
jo
icebp
cwtl
js
jnp
lcallw
test
jmp
out
sbb
push
add
lcall
xor
xchg
xchg
xchg
jo
out
testl
dec
pop
sub
and
xor
in
xchg
dec
mov
xchg
rorb
int
mov
xlat
add
fldl
jmp
in
and
pop
xor
rolb
adc
popf
mov
sub
push
dec
ja
cmpsl
dec
inc
sub
int
movsb
push
lret
xchg
jp
call
mov
out
lods
push
out
cs
add
iret
or
push
les
mov
mov
adc
lods
jg
adc
or
cli
push
dec
lret
mov
sbb
enter
iret
aas
and
out
jmp
jo
dec
cmp
mov
push
mov
ljmp
ljmp
and
push
mov
adc
dec
mov
inc
dec
jnp
fmulp
sti
xchg
xchg
xchg
addr16
mov
hlt
fwait
cli
push
syscall
pop
mov
sub
xchg
push
mov
and
loopne
repz
xchg
std
pusha
mov
sub
cli
dec
out
in
xchg
daa
jecxz
inc
stc
xor
mov
xchg
pop
inc
jmp
imul
jb
mov
xchg
fistps
sbb
fcoms
cmc
pushf
test
gs
pop
dec
push
sarb
cmp
push
movsl
xchg
gs
xor
les
cmp
mov
out
int3
imul
pushl
dec
sti
add
ficoms
inc
int
jp
dec
jecxz
xchg
pop
mov
cmp
cmp
jp
xor
mov
jo
dec
and
scas
movsb
jnp
jge
mov
lret
or
inc
addb
fmul
loopne
add
sub
xchg
jg
sbb
pop
lock
popa
repz
pushf
out
xchg
inc
cld
jbe
jl
aas
jle
mov
mov
mov
xchg
scas
sub
add
inc
sbb
sbb
jg
ja
mov
dec
push
test
jno
sarl
ret
pop
pop
insl
sbbl
add
mov
inc
xchg
jne
arpl
mov
int
cmp
xor
mov
add
shll
rorl
jp
jae
pop
xchg
jp
outsb
jo
repnz
mov
sbb
push
sub
mov
dec
jge
in
push
push
arpl
mov
push
xchg
scas
sbb
pop
mov
iret
push
call
dec
xor
shl
lret
dec
int3
repz
fcos
pop
push
pop
push
push
xor
es
lds
jo
jmp
stc
add
xor
jnp
push
hlt
mov
shrl
pusha
mov
mov
mov
xor
cmpsl
dec
or
negl
mov
aaa
add
repnz
inc
faddl
insb
mov
push
scas
cs
aad
out
addr16
jl
and
stc
pop
scas
stos
cmp
push
push
jno
es
or
gs
xor
or
clc
cmpl
out
fdivl
aaa
cltd
cltd
or
dec
roll
jecxz
add
cld
jno
aas
arpl
sti
jns
xchg
jmp
and
pop
and
cld
sub
or
mov
and
pop
sarb
outsb
test
cwtl
int
in
insb
stc
xchg
inc
sbb
js
fidivrs
int
cmp
sub
add
test
mov
stc
testb
lret
sbb
xchg
add
mov
lret
or
pusha
adc
xchg
cmc
lods
movsl
mov
or
icebp
or
cltd
enter
jmp
ss
popa
jns
pop
pushf
add
rorl
popf
push
repnz
outsl
add
iret
lcall
sub
lahf
das
xchg
mov
mov
sti
loop
pushf
pushf
cmp
and
test
fmuls
cmp
sti
fnsave
add
hlt
add
pop
jo
cmpsl
ljmp
pop
hlt
enter
js
daa
mov
dec
add
rclb
loopne
dec
dec
push
ret
inc
loope
js
mov
xchg
jns
insb
mov
mov
arpl
cmp
mov
sbbb
cmpsl
call
incl
cmpb
inc
shlb
daa
sbb
and
and
push
jb
rclb
push
or
mov
shll
stc
rcrb
outsb
sub
stos
and
repz
iret
jo
jb
lock
fcoms
dec
loop
mov
int3
dec
aaa
pop
jle
mov
add
mov
int3
cld
inc
mov
cmp
mov
mov
shl
in
sub
inc
jnp
mov
je
fildll
jg
or
rcrl
cld
mov
sbb
jg
fdivr
lods
sbb
ja
cmp
icebp
or
or
testb
adc
add
pop
dec
icebp
xchg
popf
mov
arpl
xor
inc
mov
test
stos
notb
sbb
or
outsb
and
pxor
mov
stos
rorl
fidivrl
ret
enter
or
ret
ss
add
jno
inc
lret
test
sbb
mov
and
xchg
push
adc
test
imulb
into
xor
xor
push
pusha
adc
lds
inc
ficompl
xchg
jmp
jg
sub
mov
sahf
imul
int3
and
testl
aas
pop
clc
stc
out
mov
sbb
lahf
ret
pop
stc
and
jae
push
ret
mov
jne
mov
mov
xchg
cmp
jne
aaa
and
push
pushf
xchg
pop
mov
das
add
out
pop
rdpmc
push
ds
imul
jb
or
in
pop
lahf
dec
add
sub
shrl
push
fnstenv
insb
cmp
push
pop
ljmp
lods
enter
jecxz
dec
lods
xchg
in
sub
xchg
in
or
inc
dec
inc
jle
mov
add
shrl
in
out
push
movsb
lock
mov
mov
mov
ja
cltd
loop
fidivl
inc
iret
mov
aad
jbe
lock
fstl
ret
pop
inc
das
inc
cmp
xchg
mov
sub
or
jae
jmp
cmp
mov
xchg
xchg
out
cli
je
jbe
arpl
push
jb
mov
mov
cmp
inc
ret
or
jp
sahf
test
into
movsl
xlat
loopne
test
or
mov
push
adc
je
fistpl
ret
jge
or
adc
or
aas
jecxz
jg
or
push
push
jmp
push
lret
inc
mov
push
shlb
pop
nop
bound
push
sti
or
xor
jmp
xor
sub
push
mov
repnz
in
movsb
dec
pop
push
and
xchg
mov
xchg
sahf
mov
daa
xor
adc
and
testb
dec
sbb
sub
xorl
and
push
inc
mov
movsb
mov
xchg
imul
pop
ljmp
mov
fsubrl
cmp
test
ret
xchg
add
pop
add
lea
std
dec
or
movsl
sub
and
xchg
push
into
mov
inc
adc
mov
sub
pop
jb
xchg
outsb
pop
les
into
xchg
sbb
mov
and
mov
xchg
arpl
mov
call
jmp
lret
stos
in
sub
rcl
lds
or
cmp
and
dec
shlb
das
xor
dec
adc
outsl
into
sbb
or
xor
repz
nop
sbb
sahf
enter
out
fmul
or
sbb
scas
je
adc
mov
mov
in
adc
in
arpl
adc
subb
jne
in
ret
mov
dec
sbb
rol
ja
mov
in
mulb
adc
cmc
add
xlat
pop
or
mov
cmp
sub
cmpsl
out
xor
imul
out
iret
mov
lods
adc
xchg
mov
dec
xchg
fcomps
mov
jnp
popl
hlt
repnz
stos
mov
mov
jo
stc
cmpsl
jmp
fwait
sti
fld
movsb
repnz
mov
mov
pop
insb
mov
pop
dec
inc
xchg
push
sahf
inc
mov
xor
stc
hlt
add
ret
cmc
or
mov
adc
add
jnp
mov
and
test
sub
aas
stos
aad
ret
dec
popl
mov
inc
dec
adc
add
push
ds
inc
jle
or
inc
push
ljmp
leave
dec
dec
dec
andl
xlat
push
clc
cmp
mov
scas
int
lock
fstpt
insl
fcmovnbe
inc
test
lock
cmp
addl
add
adc
adc
sub
pop
movsl
cmc
sbb
lods
push
loop
shrl
or
adc
and
jle
out
jecxz
shrl
into
xor
mov
xchg
movsl
jae
in
sbb
push
fnsave
fimuls
xlat
pop
mov
mov
notl
mov
or
in
fs
pop
in
xchg
scas
outsl
mov
adc
cmpl
imul
mov
xor
mov
push
lock
jg
inc
mov
mov
into
loop
scas
je
pusha
xchg
leave
clc
imul
iret
mov
jl
or
mov
insl
push
xchg
xchg
mov
popf
outsb
es
mov
mov
mov
dec
sub
sub
clc
cmpsb
iret
stc
or
into
or
shlb
push
repz
add
mov
stos
subb
nop
hlt
aam
and
pop
addb
hlt
imul
hlt
leave
jecxz
jo
out
and
sub
push
pop
sbb
rcr
jle
jge
pop
out
mov
sti
dec
pop
mov
in
je
mov
mov
divl
pop
fmul
mov
pop
aas
dec
inc
cld
sbb
lret
push
rcl
repnz
rcrl
int3
jg
xchg
dec
movsb
push
and
cltd
in
mov
std
adc
xchg
addr16
and
cmp
and
push
test
fidivrl
cmp
cmpsb
push
jno
cli
mov
pushf
mov
xchg
mov
in
pusha
insl
outsb
cmpsl
loopne
mov
sbb
xor
push
sbb
fstps
inc
fdivrl
xchg
dec
mov
cmp
mov
mov
or
sub
sub
dec
xchg
es
mov
pop
mov
adc
pop
xor
das
xor
popa
jne
inc
in
cli
jno
inc
add
or
sub
push
xchg
push
dec
add
ss
mov
cmpl
clc
and
js
xchg
pop
push
fldenv
orb
iret
scas
and
xchg
pushw
sti
pop
jae
lock
jge
mov
or
lret
cwtl
jmp
pop
mov
ljmp
adc
xor
or
push
daa
shl
sbb
mov
stos
je
add
cld
ds
cs
jns
xor
jg
fsubrs
push
rcll
mov
add
ljmp
add
ds
push
xor
nop
dec
push
cmp
add
cmp
push
xchg
dec
je
add
dec
ja
cmp
cltd
jmp
fidivrl
loop
jne
xor
icebp
sbb
add
jp
arpl
xchg
mov
ss
faddl
cs
dec
faddl
pop
dec
nop
shll
or
daa
loopne
out
jb
loope
loope
jno
pop
pop
call
sahf
push
sub
icebp
sbb
int
and
fcompl
stos
dec
push
pop
out
scas
out
xchg
cmp
pop
mov
sbb
insb
dec
sbb
cmpb
add
xlat
std
xor
lds
cs
mov
outsl
and
inc
iret
xchg
fistpll
and
mov
ret
int
pop
jl
add
xchg
lahf
push
aas
shlb
sbb
lods
mov
pop
out
mov
cmpsl
lcall
outsb
ror
sub
xchg
cmp
cmpsl
mov
dec
cmpsl
mul
loopne
inc
fsubs
add
cmp
ss
push
clc
and
icebp
outsl
push
lcall
int
add
es
stos
adc
mov
pop
xchg
sub
dec
iret
or
pop
mov
stos
push
in
movsl
push
mov
mov
push
out
inc
dec
cli
sub
add
dec
push
sbbb
push
std
push
pushf
int
adc
pop
loopne
fmull
rorl
rorb
mov
data16
pop
stos
jo
push
jp
push
mov
inc
divb
inc
jo
aad
xorl
pop
xor
popf
decl
shlb
ds
cmp
mov
sbb
xchg
sub
sub
dec
stos
out
addr16
push
xor
cwtl
std
and
fucomip
jno,pn
pop
inc
ficoml
or
lds
outsl
shl
repz
mov
push
dec
dec
in
div
ret
pop
icebp
mov
and
rolb
icebp
inc
mov
pop
sbbb
push
pop
add
mov
adc
adc
aad
mov
cli
jge
ds
jbe
jge
loop
push
pop
add
and
inc
and
daa
inc
xor
add
mov
fnstcw
clc
imul
sub
mov
loopne
push
ja
jno
int
push
lock
xchg
lock
fstps
adc
mov
in
out
cmp
and
inc
push
sahf
call
and
cwtl
inc
push
mov
xchg
inc
sub
sbb
adc
je
lds
sbb
push
cwtl
and
or
xor
push
mov
in
inc
inc
mov
cmp
mov
push
scas
inc
pop
das
sbb
xchg
iret
cwtl
rcrb
jnp
push
cs
mov
call
mov
mov
jmp
jmp
std
inc
subb
cmp
lret
xchg
je
rcl
push
stos
pop
shll
jg
push
cmpsb
inc
std
push
inc
pop
xchg
into
or
xlat
gs
loopne
and
aam
into
pop
jecxz
sbb
mov
repnz
jecxz
nop
ficompl
mov
mov
int3
push
mov
shlb
xor
enter
scas
xor
jbe
jae
push
cmp
mov
mov
dec
xor
xchg
xchg
inc
daa
pushl
xor
jne
in
repz
in
fidivs
push
jne
or
mov
sbbl
lahf
jno
hlt
inc
sub
bnd
and
divb
out
enter
mov
cmp
jb
ret
icebp
mov
xorb
fsubr
push
das
sahf
dec
fbstp
into
sbb
mov
sub
mov
jle
push
inc
pop
fistps
mov
push
dec
jl
add
repz
jo
int
rorb
sahf
pop
push
jp
lods
fadds
sub
in
les
push
test
lret
clc
xor
xchg
cmp
ja
adc
lods
mov
movb
mov
das
mov
das
xchg
adc
sti
xlat
pop
sub
mov
dec
xor
mov
sti
repnz
aaa
jns
pop
sub
insl
pop
cmp
mov
mov
cmp
and
stc
xchg
arpl
repnz
cwtl
fs
movsl
neg
mov
adc
sub
mov
roll
insl
sub
xchg
sbbb
dec
mov
test
std
push
xchg
ljmp
dec
pop
xchg
pop
mov
sub
out
sub
and
fisubs
cltd
repz
adc
das
dec
add
out
test
and
dec
js
pop
or
jb
jmp
pop
inc
pop
mov
jmp
pop
test
push
jecxz
lea
lret
fsubl
jnp
cwtl
fsub
pushl
es
cmp
cmovo
int3
scas
push
mov
inc
xchg
ds
cwtl
cmc
jno
hlt
cmpsl
add
push
and
or
push
repnz
dec
adc
fidivrs
jge
dec
jg
lea
inc
test
mov
cmp
mov
mov
push
outsl
into
arpl
mov
sub
xor
or
mov
arpl
std
ja
ss
mov
fsts
or
lret
sub
pop
mov
xchg
sub
mov
mov
mov
mov
imul
add
pop
in
sbb
in
xor
ds
inc
jnp
and
add
add
sub
mov
lods
leave
cs
test
cmp
fnstenv
movsl
into
jge
add
fsubrl
push
roll
or
xlat
shrb
lods
pop
mov
and
daa
xor
sti
pop
cld
mov
outsb
mov
pushf
mov
xor
and
cltd
jge
shrb
leave
jae
iret
arpl
mov
and
or
pop
sti
xchg
cltd
pop
les
iret
hlt
aaa
cmpsl
out
sbb
aad
jo
ret
ljmp
pop
inc
jne
cmc
mov
sbb
xchg
dec
jae
in
mov
int3
fcoml
xlat
sbb
into
aaa
mov
outsl
lcall
out
inc
mov
cltd
pop
mov
ja
push
call
sub
dec
ret
sbb
leave
into
rorb
out
pop
dec
and
cmpsb
jl
inc
leave
xor
ja
loope
insb
sub
fildl
test
mov
popf
mov
mov
ds
mov
jne
mov
jns
pop
enter
xchg
sub
cmp
inc
mov
or
negl
movsl
out
dec
xor
push
int
mov
shll
jl
jns
mov
mov
fldt
in
ljmp
pop
cmpsb
jae
sbb
imul
dec
cmpsb
popa
sub
sahf
enter
lahf
cmc
push
jle
movsb
xchg
out
fldl
leave
repnz
push
sub
int3
and
or
shlb
xchg
mov
cmp
mov
adc
mov
scas
add
pop
testl
test
or
cld
sub
mov
xor
add
lods
insl
adc
jne
pop
lcall
cmp
add
add
push
inc
sbb
sbbb
lret
popf
and
ret
cmp
jno
sbb
pop
sub
insb
lds
xchg
icebp
pop
pusha
add
rcl
and
insl
les
xor
ss
push
vpcmpeqw
icebp
and
lcall
inc
jno
mov
popf
sub
dec
adc
inc
fisubl
jno
scas
mov
or
in
mov
subl
jmp
sarl
pop
sbb
push
les
xlat
add
jp
mov
sahf
mov
add
jns
adc
xchg
jge
xchg
adc
sub
pop
mov
push
shll
push
jge
fmulp
xchg
xchg
jecxz
repnz
or
fidivs
lahf
xchg
mov
roll
xlat
iret
cmpsl
arpl
imul
lret
loope
xor
orl
aas
rcrb
mov
cltd
inc
clc
inc
outsl
cmpsl
test
aad
and
mov
out
cmp
or
adc
jmp
xchg
mov
xchg
loope
mov
std
shlb
cmpsb
pop
ficompl
push
jg
out
push
scas
sub
xchg
jecxz
loopne
push
shrl
cmovns
cmp
jl
jo
mov
js
or
lcall
pop
and
aas
add
sub
fmull
or
xchg
lods
cwtl
aas
lret
call
out
jae
fwait
aam
adc
pop
sbb
adc
daa
cmp
xchg
dec
cmc
cmc
cmp
dec
jge
mov
xor
sub
xchg
jg
in
mov
rcr
outsb
inc
test
les
cld
mov
mov
xor
dec
xchg
mov
xlat
sbb
inc
mov
pop
lahf
aam
mov
fmull
clc
repnz
cld
mov
lcall
add
lahf
adcl
cmp
scas
shll
sub
leave
popa
adc
mov
icebp
dec
and
jecxz
mov
or
xchg
fsts
fadds
dec
inc
adc
cmpsb
and
push
lock
inc
jecxz
jmp
or
push
in
cmp
lods
dec
lods
and
cli
and
mov
je
rcrl
scas
mov
cwtl
lahf
xchg
push
push
sbb
dec
jecxz
lock
dec
push
mov
in
mov
and
fisttpl
cmc
arpl
or
mov
test
or
mov
iret
arpl
repz
loope
in
xor
es
iret
lock
stos
nopl
sub
sbb
nop
dec
scas
lcall
mov
fistpll
imul
or
ret
adc
fisubrs
dec
imulb
mov
jo
sub
add
out
sti
xor
xchg
or
dec
cs
rclb
push
fbstp
popf
pop
movsb
jp
xor
cmp
imul
aaa
add
insb
or
xchg
xchg
loop
lock
int3
dec
es
jecxz
test
push
and
push
sub
and
movsb
push
faddp
mov
pop
dec
xchg
adc
xchg
enter
ffreep
fs
leave
pop
mov
push
jnp
add
outsl
dec
jmp
jns
cli
sbb
pusha
or
and
push
sbb
adc
sbb
cmpb
pop
sbb
leave
fnstenv
loop
std
daa
int3
pop
sub
inc
push
outsl
in
scas
or
lret
call
imul
stc
xchg
popa
dec
cmp
lret
xchg
dec
xchg
ljmp
pop
mov
fbld
xchg
xchg
in
mov
test
inc
outsl
mov
mov
insl
int3
aad
xor
popf
and
xor
pop
fadd
gs
fsub
dec
mov
add
sub
mov
mov
xchg
out
add
loopne
mov
sbb
fidivl
shlb
dec
pop
xchg
loope
ljmp
out
fs
sbb
xor
adc
jns
mov
sub
addr16
cmc
sbb
xor
fisubl
mov
mov
inc
jle
ds
rcll
aas
test
fsubrl
xchg
nop
sub
and
dec
enter
lcall
and
roll
outsb
icebp
lods
fbstp
dec
mov
mov
insl
loop
inc
lret
xor
insb
xchg
add
cmc
push
pop
movsb
push
sti
mov
sbb
pop
xchg
sbb
pop
fwait
mov
xor
loope
sbb
adc
cmp
xchg
fsts
jb
aad
dec
sub
cltd
xlat
jae
xchg
xchg
jg
out
adc
jo
test
ret
pop
dec
dec
adc
cmovg
lods
mov
xor
clc
aas
je
jb
mov
add
cmpsl
leave
notb
jb
add
xchg
xor
xor
mov
leave
stc
dec
xor
je
add
cmp
and
leave
popa
lods
push
sbb
call
inc
nop
jo
jo
outsl
pop
pop
or
xor
jb
push
xlat
cmp
pop
mov
into
fisubrl
add
ret
jle
icebp
or
mov
and
fmuls
fisubs
lock
lcall
fnstsw
or
cwtl
pop
in
sbb
mov
es
pop
sbb
sub
loopne
jae
rclb
in
jb
or
adc
adc
add
xchg
data16
lds
sub
outsl
hlt
push
push
sbb
addr16
mov
mov
into
sti
push
inc
sbb
mov
xor
int
inc
cmp
or
push
mov
push
es
std
xor
insl
fwait
add
add
andb
mov
ffree
fadds
out
adc
mov
loope
divl
inc
insl
fmuls
mov
inc
push
sub
insl
mov
or
cmp
aad
test
jge
cltd
jbe
lods
popf
mov
pushf
pop
sti
cwtl
movsb
out
jns
xchg
test
out
push
cmp
fcoml
pop
or
add
sbb
rcrb
and
sub
jg
xchg
mov
inc
test
sbb
or
repz
xor
shlb
es
mov
xor
negl
je
std
sub
pop
jle
inc
mov
loopne
pop
jle
mov
pmulhw
push
mov
push
cmc
or
sarb
hlt
mov
into
inc
outsl
add
shlb
mov
push
mov
inc
xchg
adc
fnstenv
pop
pop
into
jg
xor
lret
jns
cmpsl
jne
sub
cmp
shlb
shlb
push
dec
jnp
into
cmp
les
mov
aas
cmpsb
loop
xchg
out
push
sub
out
divl
xchg
aad
test
mov
add
pop
mov
lret
icebp
xor
aaa
and
sbb
out
test
lods
and
loop
inc
fldenv
or
pop
jnp
mov
fisttpl
movsl
cwtl
insl
cmp
or
aas
fidivrl
or
lahf
push
fisubrl
and
jo
inc
sbb
adc
cmpl
negb
add
sbb
fwait
imull
push
jl
sbb
adc
cmp
or
and
lods
test
lock
mov
xchg
mov
cmpsb
lods
stc
cli
fdivrl
bound
out
cwtl
bound
call
pop
test
mov
pop
add
jp
fs
xchg
sbb
fstpt
push
jns
insl
inc
shrb
add
sub
mov
rcr
in
cmp
mov
rcll
hlt
clc
jno,pn
test
out
jmp
mov
lret
inc
mov
rclb
dec
push
cli
ficomps
jecxz
push
pop
cmpl
ficompl
bound
adc
gs
jnp
sbb
outsb
std
pop
adc
out
mov
test
icebp
mov
int3
xchg
rorb
int
add
outsb
je
fwait
sub
insl
xor
mov
gs
icebp
inc
sub
mov
divl
cmp
dec
xor
add
das
ror
enter
orl
jne
outsl
sbb
imul
add
out
aad
addr16
negl
inc
push
leave
arpl
xchg
out
push
or
add
cmp
test
loope
mov
pop
test
jae
mov
jle
fisttps
jne
mov
pusha
adc
add
push
mov
fidivrs
mov
test
push
testl
test
std
pop
pop
adc
test
push
mull
in
inc
sub
cmc
lods
inc
pushf
in
mov
mov
xor
das
add
xorl
out
mov
inc
mov
push
push
pop
sbbb
ja
and
call
jne
out
lods
cs
pop
or
mov
xor
repnz
movsl
hlt
push
push
inc
mov
outsb
lods
aas
fcmovu
cs
inc
lock
push
lret
or
add
outsb
pop
adc
sbb
adcl
push
hlt
fcoms
fwait
mov
out
repnz
scas
je
or
inc
sub
pop
stos
inc
lods
in
add
jno
push
sub
mov
mov
mov
add
insb
xchg
fwait
mov
fucomip
xchg
jle
and
sbbl
xchg
cmp
mov
jl
mov
ss
aaa
adc
cmp
add
dec
push
lods
sbb
mov
add
scas
cmp
addb
into
mov
js
and
mov
jp
adc
imulb
arpl
push
push
jbe
pop
stos
dec
fs
lods
data16
pop
ds
mov
add
movsl
mov
sbb
out
stos
scas
jb
in
dec
insb
or
push
rcr
call
lahf
cwtl
stos
aas
add
test
sub
mov
cmp
inc
mov
pop
out
mov
pop
cmp
sbb
sbb
aas
jge
mov
lods
xor
les
or
gs
cmp
fiadds
dec
pop
dec
push
enter
cmpsb
push
test
jae
dec
pusha
xchg
bound
mov
testl
aas
jne
mov
inc
mov
sub
cmp
test
out
cwtl
loopne
rcrb
dec
int
mov
aam
sub
cmp
pushf
ss
in
push
dec
iret
imul
sub
ret
and
arpl
nop
sbb
inc
and
cmp
mov
loop
push
arpl
das
inc
bound
mov
cmc
add
lahf
jl
jecxz
ja
xor
adc
jno
and
xchg
mov
loopne
dec
loope
imul
mov
sbb
lea
mov
stos
outsb
out
hlt
pop
mov
xchg
nop
xor
les
cs
jmp
ds
xor
push
test
sub
mov
leave
dec
xchg
inc
test
xchg
sbbl
jbe
mov
sub
xchg
mov
cmp
push
int
xchg
push
stc
and
push
xor
stc
faddp
dec
in
and
push
adc
lods
and
mov
mov
pop
fistpl
out
movsb
jae
dec
and
jp
push
data16
mov
pusha
rcr
test
lods
jns
xchg
jp
and
mov
mov
xchg
pop
je
sbb
lock
mov
stos
fsts
mov
xor
mov
sbb
xchg
in
mov
aas
shll
sub
out
std
js
mov
mov
mov
xchg
lret
sbb
test
fs
mov
pusha
adc
pop
adc
repz
mov
jne
sub
dec
into
shll
sbb
rorb
pinsrw
inc
mov
pop
mov
mov
inc
pop
aaa
sahf
jp
addl
out
aam
in
pop
lods
jne
dec
jmp
push
or
pop
lret
hlt
fs
jg
adc
mov
popf
jp
out
jns
daa
cmpsl
sub
pop
cmp
mov
mov
js
loopne
sub
mov
and
ljmp
add
xor
lock
pop
cmc
insb
fs
mov
les
or
and
pop
jle
fsts
fisttpl
xchg
add
lcall
hlt
and
or
rsqrtps
add
imul
cmp
sub
dec
jp
lds
clts
dec
push
pop
pop
adc
mov
xchg
sbb
dec
jg
or
adc
aad
add
loope
test
sbb
mov
adc
push
jl
push
sub
sub
inc
test
dec
int3
dec
imul
pop
pusha
cltd
cmp
push
stc
cmp
fsubrs
push
aam
call
adc
rcl
mov
jno
scas
add
popa
jg
clc
idivl
call
xor
cs
xchg
stos
sbb
jo
pop
pusha
sub
das
int3
xlat
in
out
test
enter
ljmp
inc
adc
pushf
dec
push
and
iret
lds
loope
leave
push
or
and
ljmp
idivl
pop
adc
sub
movb
xor
repz
ljmp
into
addr16
pop
xchg
xchg
clc
sub
xorb
idivb
jb
push
and
dec
lea
fldl
or
jae
sub
icebp
mov
je
testb
outsl
rcl
add
rolb
sub
lods
fsubs
rolb
lods
das
addr16
sub
daa
jno
cmpsl
or
cmp
or
and
divl
jno
pop
pop
sbb
into
test
adc
lods
cmpsb
jge
mov
js
add
cmpsl
and
jnp
xchg
cmp
sbb
sbb
mov
pop
cs
lcall
jae
xchg
lret
or
xor
loopne
mov
or
jl
in
mov
mov
mov
outsb
fisttps
ss
mov
sahf
mov
scas
jge
and
mov
sub
and
jle
jl
cli
mov
push
mov
pusha
lds
sbb
ret
fdivl
in
and
adc
mov
jl
mov
in
mov
jg
pop
inc
dec
pop
jno
inc
cmp
mov
push
ljmp
xchg
stos
in
and
pop
xor
inc
scas
dec
jle
bound
cwtl
push
or
insl
xchg
mov
push
cmc
addr16
fimull
fcompl
mov
and
xor
test
sbb
ret
pop
jmp
inc
and
fwait
add
dec
shr
mov
cmpl
dec
stos
cld
aas
cmc
into
out
into
mov
out
lea
in
lock
stos
pop
cli
arpl
dec
jne
or
jecxz
mov
or
addr16
mov
cli
cmc
mov
push
sub
popf
bnd
push
gs
ret
inc
arpl
out
xor
sub
fisttps
stos
aad
push
adc
dec
cmp
mov
std
push
add
movsb
push
or
add
lds
inc
push
mov
mov
into
inc
cld
xlat
pop
mov
mov
mov
aad
sub
jb
or
out
arpl
xor
int
fidivrs
arpl
mov
es
or
subb
xchg
add
inc
push
mov
test
bound
scas
xchg
mov
pop
gs
dec
lea
fdivrp
out
jl
stc
jno
push
test
orb
xor
push
scas
lahf
add
aam
lcall
mov
mov
lret
xlat
sbb
cli
mov
sbb
loop
dec
lret
cmp
push
sbb
and
and
push
leave
aad
imulb
mov
idivl
and
adc
inc
dec
pusha
xor
filds
roll
pop
or
xor
add
mov
test
and
push
pop
xor
xchg
mov
inc
imul
pop
xchg
pop
pop
pop
frstor
aas
dec
lods
or
sub
cmp
inc
cmc
out
or
add
push
dec
test
notl
lret
mov
arpl
sbb
cmp
adc
jb
adcb
clc
or
stos
or
pushf
inc
push
loop
pop
inc
xchg
dec
sbb
xadd
xor
dec
push
pop
scas
or
xor
mov
inc
dec
fmul
mov
outsb
mov
ds
icebp
pop
xor
ret
insl
mov
inc
xchg
aad
in
aad
push
arpl
sub
xor
test
sub
pusha
test
out
jo
push
lahf
cmp
pop
sub
or
xor
push
int3
addr16
ss
and
stos
pop
xchg
and
lock
out
in
jne
js
pop
in
lock
push
fs
mov
xchg
cld
insl
jcxz
aaa
jle
add
cmpsb
mov
repnz
inc
jo
lahf
push
popf
jg
add
sahf
lret
ja
outsb
pop
add
mov
push
enter
jb
sub
arpl
mov
fwait
fs
or
sbbb
bound
ljmp
int
xchg
pushf
mov
cmc
dec
sub
sti
xchg
adc
inc
sub
out
inc
mov
sbb
or
scas
das
fdivrs
mov
dec
imul
sarl
cs
aam
aad
test
data16
insb
daa
pop
or
repz
jb
inc
cwtl
je
gs
cld
out
fwait
stos
and
cmp
jle
sub
lods
cmp
ret
xchg
pop
push
cmp
sub
imul
dec
pop
jg
movsb
pop
pop
leave
cwtl
jb
push
fsubrl
mov
inc
int3
fistpl
mov
test
push
pop
popa
les
pop
test
imul
xchg
es
push
xor
inc
iret
stc
cmpsb
movsl
fldt
or
shl
add
insb
mov
pop
ja
mov
push
cltd
scas
xchg
mov
jmp
rcrb
rcrb
jge
inc
mov
jg
imul
push
inc
rcrl
push
inc
and
hlt
add
mov
test
call
cmp
push
les
add
lcall
loope
push
ret
mov
add
sti
cmp
repz
push
adc
mov
ret
hlt
or
xor
arpl
xchg
es
inc
add
aaa
imul
sub
pusha
decb
lods
adc
adc
shll
sbb
cmp
dec
xor
jns
mov
test
mov
cli
adc
nop
push
ja
es
repnz
jmp
scas
dec
ret
ret
fdivrl
mov
cwtl
and
lds
mov
push
sti
daa
dec
fsubrs
stos
pop
out
insl
fcomps
dec
xor
sub
add
jb
cwtl
xchg
das
or
inc
dec
std
jnp
shrl
push
sahf
aad
add
bound
dec
xor
imul
shll
push
cmp
hlt
sbb
xchg
ret
icebp
iret
call
jge
fisubl
sbb
dec
loop
andl
lret
jo
or
mov
mov
dec
cmp
add
sub
ret
push
cld
add
sbb
cmp
imul
mov
popa
jl
scas
xor
int3
rclb
rolb
cmp
hlt
mov
inc
fdiv
jp
mov
inc
fs
pop
fwait
bnd
loopne
lcall
bound
adc
fimull
mov
fistl
jo
add
jbe
fsqrt
xor
dec
and
ja
inc
cmp
ljmp
fadd
inc
xchg
or
dec
mov
cmp
push
ss
sbb
sbb
add
add
std
cs
xor
rol
cmpsl
sbb
loope
mov
ror
add
or
test
mov
cmc
pop
in
xchg
lret
adc
sbb
or
xor
das
add
popa
insl
enter
fisubl
test
mov
or
or
mov
cli
cmp
adc
dec
inc
iret
insb
pop
test
mov
icebp
ret
mov
sub
stos
sbb
aaa
mov
out
or
xor
sub
cwtl
mov
aam
mov
outsb
pop
push
inc
fwait
cmpsb
int3
push
gs
jle
stos
mov
mov
in
mov
and
add
js
xchg
jecxz
lret
adcb
nop
adc
pop
flds
int
push
or
inc
mov
dec
rorb
and
add
icebp
pop
add
adc
jb
cmp
inc
sub
out
inc
repnz
cmp
pop
sub
fistps
lahf
in
xlat
popf
insb
out
shll
lock
cmc
push
push
pop
add
cmp
xor
lret
xchg
jbe
sub
add
in
pusha
lods
pop
jle
mov
jp
or
sub
push
xchg
push
xchg
mov
mov
jbe
dec
push
push
data16
mov
repnz
push
sub
movsb
movsb
cwtl
ds
xchg
call
cld
pop
rolb
test
inc
int3
cwtl
into
xor
pusha
js
mov
add
jno
stos
cld
and
pop
cmp
lahf
push
fnstcw
clc
cmp
pop
lret
sub
pop
data16
je,pt
rorl
push
in
jbe
mov
adc
lahf
dec
fisubs
jo
mov
pavgw
leave
sub
xchg
lret
bound
jmp
ret
mov
cmp
lahf
mov
mov
cmp
movsl
mov
or
push
loop
dec
cmp
movsb
jns
fstpt
sbb
pusha
dec
dec
ret
inc
not
rcrl
test
mov
das
add
imul
test
mov
jae
or
or
push
iret
jne
push
add
dec
inc
popf
mov
or
inc
lea
or
loop
push
stos
sbb
push
shll
movsb
mov
gs
leave
xchg
lahf
cmp
mov
adc
std
sbb
pop
cmp
es
mov
sub
popf
push
push
xor
sub
test
push
mov
pop
popa
cltd
rcrb
cmpsb
mov
and
add
add
jae
mov
mov
loope
fisubrs
or
mov
mov
je
out
fstps
jb
push
pop
pop
mov
scas
xchg
ds
in
lods
pop
repz
daa
push
out
stos
jnp
pop
cmpsl
rol
je
jecxz
arpl
push
xchg
add
and
loop
adc
scas
lock
or
and
cmpsl
lret
aaa
movsb
mov
leave
push
push
addr16
mov
movsl
movsb
xor
pop
scas
cmp
fldenv
fsubp
fwait
call
mov
push
mov
add
push
add
adcb
xchg
jns
aaa
mov
mov
popf
sbb
jle
in
sarl
mov
pop
lods
mov
cmpb
das
push
fld
fcompl
fisttpl
push
or
pop
fildl
es
push
add
push
mov
xor
push
aaa
icebp
jp
les
es
lods
lods
shll
cmpsl
insl
push
adc
jne
fsubr
cmp
leave
jecxz
repz
out
fcom
mov
adc
sbb
clc
aaa
rclb
enter
lret
dec
mov
xchg
jmp
mov
test
mov
andb
xlat
loope
ds
rcll
repz
ror
leave
dec
insl
je
mov
mov
cmpb
mov
cltd
jbe
xor
lret
popa
in
gs
mov
rcll
lock
jl
adc
push
xchg
or
std
pushf
imul
adc
sbb
int3
push
scas
stc
or
mov
call
inc
into
push
repz
sbb
jb
jge
jae
and
xchg
lret
inc
sbb
xchg
negl
inc
jb
xor
lods
inc
mov
jge
cltd
xchg
dec
mov
data16
fidivs
hlt
sub
mov
test
fucomp
je
into
cmp
push
outsl
xchg
sub
in
mov
add
push
arpl
stos
dec
outsb
mov
mov
cmove
lret
call
add
and
jbe
or
sbb
lods
sbb
mov
stc
xchg
and
cmp
mov
lock
cmpsl
dec
adc
inc
or
repz
dec
loope
cmp
push
stos
sahf
hlt
shrl
shll
xchg
scas
jne
stos
inc
outsb
cmp
inc
je
push
in
enter
js
repnz
ljmp
ficoml
roll
adc
stos
mov
mov
pushw
js
and
xor
sarb
scas
xchg
imul
pop
sbb
push
into
rolb
aad
shr
and
lock
sub
cwtl
xchg
test
repnz
sub
mov
jge
jns
cmpsb
sbb
add
aaa
loopne
xor
sahf
rorb
aas
push
shrl
xlat
mov
pop
mov
pop
scas
inc
jle
cmpl
mov
fsub
mov
dec
xor
ja
scas
add
das
sahf
mov
mov
xor
mov
popa
push
ss
std
mov
jae
inc
les
call
aad
mov
xlat
imul
mov
sahf
add
xchg
movsb
jecxz
orl
adc
jne
leave
mov
and
fwait
loopne
in
bound
popa
filds
stc
test
fmull
out
sbb
sbb
jp
cmp
negb
xchg
xlat
mov
test
jp
sub
xchg
jmp
lea
sbbb
out
jno
hlt
stos
cmp
in
cmp
lock
mov
sub
mov
adc
pushaw
cmp
aad
call
mov
lods
xor
in
or
cmp
inc
mov
adc
adc
mov
push
mov
gs
sbb
sbb
xor
stc
dec
inc
mov
cmp
in
mov
sub
fistpll
in
pop
jecxz
xor
sub
push
popa
pop
scas
cwtl
lods
andl
pusha
inc
ljmp
rcll
mov
mov
scas
cmp
jae
sub
mov
fildll
lret
jno
cld
xor
fisttpll
cmp
mov
or
mov
add
inc
ljmp
out
movsl
cmp
push
adc
or
in
fistl
sbb
xor
jns
or
inc
jbe
out
scas
fdivr
jo
movsl
int3
jmp
lods
jne,pn
loop
mov
stos
mov
fs
rolb
movsl
mov
pushf
not
out
inc
inc
xor
lds
push
sbb
xchg
in
cmp
push
push
pop
scas
inc
mov
lea
orl
jge
jne
push
hlt
pop
lea
mov
insl
fs
sahf
popf
js
dec
fimull
outsl
xor
inc
lds
nop
jns
ss
jo
test
scas
vpcomuw
lds
loopne
jle
std
rep
push
scas
mov
pushf
test
decl
push
into
rorl
aam
rcr
jl
andb
addr16
push
subb
mov
mov
or
int3
enter
lds
rol
out
dec
sbb
push
in
mov
or
sub
sub
and
insl
mov
les
fldcw
adc
push
sub
mov
push
push
adc
sbb
js
int3
aam
pop
mov
in
std
mov
fcmove
test
sbb
jnp
mov
dec
pop
xchg
fstpl
dec
mov
inc
add
mov
test
lods
dec
dec
enter
xor
inc
clc
sub
pop
dec
mov
sub
out
ljmp
or
xor
jecxz
push
jmp
xchg
cmpsb
inc
je
aas
sbb
test
mov
js
lret
mov
jl
mov
out
mov
push
jg
mov
int3
jno
js
pop
jns
pop
insl
adc
sub
int
push
jecxz
xor
cmpsb
dec
fwait
pop
into
jl
xchg
cld
js
rdmsr
push
data16
test
adc
ja
ret
shr
cld
xlat
shll
xchg
lds
out
fstp
fs
pop
push
out
dec
sbb
jbe
sbb
out
decb
add
leave
in
js
mov
xchg
mov
addr16
roll
mov
jmp
jne
and
add
out
mov
cwtl
leave
out
mov
cmp
loope
add
es
mov
int3
jmp
ret
mov
inc
jmp
ror
mov
inc
push
adcb
push
inc
inc
or
arpl
fildll
xchg
stc
xchg
mov
inc
push
out
cmp
scas
fisttps
mov
rorb
push
mov
data16
ret
rolb
or
pop
dec
xchg
lret
negl
push
cmp
popf
int
cmp
rolb
inc
cli
cmp
jle
fistpll
daa
outsl
add
iret
push
and
out
pusha
imul
adc
inc
adc
or
xchg
xlat
orl
mov
insl
fildl
ret
enter
xor
test
mov
push
or
flds
adc
add
sti
sahf
sub
jo
hlt
push
pop
out
adc
sbb
jne
out
cltd
dec
cmp
cwtl
rcll
in
es
mov
mov
push
call
int
xchg
pop
lods
shlb
and
pop
push
aad
mov
xchg
fidivl
shlb
dec
or
enter
pop
or
push
test
pop
leave
push
fistpll
add
inc
push
jb
xchg
cmp
adc
sbb
cs
mov
orl
ret
mov
fdivrl
sub
sbb
mov
sahf
lea
inc
adc
inc
cs
xchg
cmp
sti
jl
push
pop
in
adc
sarl
push
push
sub
in
clc
xchg
adc
gs
repz
push
pop
mov
imul
xlat
push
shlb
clc
cld
mov
pop
imul
add
cld
js
mov
pop
cmp
sti
pop
pop
sub
lret
cltd
test
mov
xor
ljmp
sub
stc
adc
out
and
lcall
mov
out
xorb
retw
repz
imul
cmpsl
adc
mov
mov
inc
mov
clc
sub
and
sbb
aaa
sub
sbb
leave
xchg
pop
setb
testb
and
sub
push
imul
js
cmc
icebp
mov
out
movsb
sub
add
movsl
xchg
pusha
outsb
loopne
lret
push
dec
cli
mov
data16
xlat
inc
sti
fistl
pop
lcall
adc
sbb
push
movsb
push
and
jno
pop
andb
int
mov
adc
into
std
test
dec
xor
cltd
lods
pushl
std
cli
lret
mov
push
test
and
out
mov
addb
das
lods
sub
adc
outsb
subb
pop
call
rorb
sbb
or
mov
sbb
mov
add
add
aas
les
push
jns
in
hlt
mov
inc
fdivl
je
dec
popa
mov
ret
inc
pop
in
outsl
cmp
rolb
out
xchg
mov
mov
mov
add
sub
test
icebp
push
adc
jb
ss
push
ds
arpl
push
in
mov
mov
test
sub
lret
pushf
pop
fcomip
sbb
sti
cpuid
es
mul
jns
add
xchg
sar
xchg
xor
scas
jae
aad
adc
mov
push
imul
mov
dec
cmp
mov
or
mov
push
and
pop
inc
mov
xchg
lret
iret
or
rclb
and
push
fcomip
bound
adc
add
pop
clc
mov
outsl
dec
ja
push
mov
stc
ret
lods
stc
push
or
push
outsb
cmp
sbb
loop
xor
je
fsubr
cwtl
lods
movsl
jg
mov
add
out
mov
and
jne
movsl
popa
int
in
jle
and
push
or
cli
push
loope
sub
int
mov
js
sbb
shrl
loopne
mov
stos
xor
rcll
repnz
dec
or
jb
nop
push
inc
roll
mov
jo
and
ds
mov
add
dec
aas
push
pop
and
aam
pop
test
in
pop
and
xlat
insb
mov
push
mov
xlat
pop
sub
jbe
pusha
sbb
dec
xorb
pop
cmp
fwait
andnpd
cmc
add
je
aas
shlb
mov
scas
mov
sbb
test
adc
mov
push
xchg
aam
lcall
fiadds
or
dec
jle
push
xor
fwait
arpl
cmp
sahf
negl
sarb
xlat
push
dec
push
mov
sti
andl
xlat
inc
mov
push
stos
xor
hlt
push
xchg
popa
cmp
jl
cs
mov
int3
pop
lret
or
test
pop
sarl
aad
outsb
mov
mov
in
inc
pop
mov
ds
push
mov
rcll
push
jle,pt
lock
xchg
jne
int3
lods
xchg
xor
adc
pop
add
in
mov
mov
cmp
push
fwait
pop
sarb
sbb
push
stos
lods
incl
and
cld
pop
addb
cmpsb
cmpsl
cmp
adc
aas
push
xchg
shrb
rolb
movsb
ficoml
mov
out
cltd
mov
stos
imul
xor
leave
xor
or
push
xor
scas
and
xor
cmp
out
and
jnp
push
ljmp
mov
daa
fwait
push
xchg
rcrl
hlt
stc
test
enter
pop
lret
shll
mov
cmovb
ljmp
dec
mov
push
out
fimuls
and
dec
stc
pop
mov
popa
dec
divb
hlt
adc
jnp
pop
jno
cmp
jecxz
mov
shrb
pop
in
jno
arpl
jle
xchg
xor
je
push
jmp
cmp
pop
mov
push
adc
inc
stc
in
pop
insb
sbb
sbb
inc
add
add
scas
xchg
inc
mov
mov
xlat
test
mov
adc
das
inc
add
sbb
pop
push
inc
cmp
sarb
imul
pushf
push
test
jl
xchg
arpl
shl
cmp
out
nop
inc
mov
push
bnd
mov
pop
push
mov
rorb
mov
pop
movsl
int3
pop
fcoml
stc
jae
push
dec
xlat
ds
loop
jae
aas
fwait
sahf
mov
mov
adc
mov
subl
pop
cmp
sub
movsb
sahf
data16
or
mov
icebp
repnz
outsl
lret
les
xor
pusha
stc
or
je
jns
lret
cwtl
add
xor
mov
cmp
or
sbb
jg
aas
fsubl
mov
inc
cwtl
pusha
or
pop
mov
out
xchg
clc
push
sub
mov
loope
mov
adcl
xor
mov
pusha
or
push
scas
fcoml
mov
jmp
daa
push
mov
fdivr
and
jb
xor
pop
ss
pop
int
pop
mov
mov
loope
test
pop
mov
jnp
and
mov
push
mov
cli
cmpsl
jne
xor
lods
mov
into
leave
lds
in
inc
mov
clc
shll
stos
stos
jne
lods
les
push
mov
shll
mov
sub
mov
or
or
inc
mov
repnz
sub
insl
push
jmp
out
shrb
hlt
scas
push
jb
mov
insb
in
int3
loop
mov
adc
dec
dec
pop
jno
popf
cmp
mov
pop
mov
or
andps
jae
cmp
pop
leave
add
dec
mov
in
pop
xchg
shl
arpl
xlat
sub
test
loope
sbb
ljmp
cli
ficoms
fstpl
pop
icebp
jb
push
notl
mov
mov
jbe
mov
pop
or
aas
xor
cs
mov
aam
pop
push
in
mov
xchg
stc
or
in
adc
test
jmp
in
mov
cli
adc
push
and
and
cltd
rcr
jbe
stos
ds
sub
mov
leave
mov
lods
xchg
test
in
xlat
dec
aam
or
pop
pop
adc
mov
jp
cld
jecxz
outsb
jnp
loope
and
jmp
push
adc
and
sub
je
or
in
rclb
mov
sbb
cld
mov
outsl
sahf
mov
or
adc
sub
mov
call
shr
pop
cmp
inc
js
sbb
ds
sbb
mov
jns
test
fmul
push
pop
push
jns
pop
push
loopne
cmp
xlat
sbb
mov
leave
xorb
data16
push
std
mov
insb
int
in
ret
adc
jno
mov
sbb
ss
xor
push
dec
ret
ret
mov
subb
inc
int
mov
xchg
subl
dec
in
push
in
mov
pop
jno
rorl
dec
push
testb
pusha
icebp
jno
pushf
push
dec
cmpb
jo
xchg
imul
and
sahf
sub
fsubrs
jo
mov
clc
stos
fnstcw
or
jae
add
jl
cmp
adc
rorl
mov
inc
int3
mov
aas
lods
push
add
pushf
pop
stc
adc
jbe
js
sub
in
mov
insb
int3
add
aaa
movsl
mov
inc
add
addl
pop
jnp
sub
js
sub
mov
pushf
pusha
je
cmp
outsl
sbb
push
inc
cmp
mov
gs
decb
ficoml
sub
jle
ror
jb
push
push
xchg
xchg
jge
fwait
xchg
fistpl
push
cltd
jns
mov
js
dec
xchg
xor
mov
lret
dec
nop
mov
sbb
loop
cs
js
sub
dec
pop
xchg
mov
inc
sub
adc
fs
gs
dec
xchg
xchg
cld
or
cmp
or
ds
mov
pop
not
inc
setno
mov
push
or
xor
les
add
or
lock
lret
pop
fistpll
inc
fnstenv
sti
dec
mov
mov
cli
insb
adc
mov
lcall
ret
jnp
mov
mov
mov
pushf
xor
mov
ret
mov
or
jecxz
jae
xchg
mov
das
fcoml
fildl
add
mov
in
inc
jns
mov
add
sbb
lock
es
push
cmc
push
mov
cltd
add
jno
jno
adc
jo
jp
pop
jb
jo
push
fnstenv
cs
sbb
sbb
mov
jne,pt
jbe
rcll
stos
cmp
jo
xchg
sub
sti
inc
ljmp
xchg
icebp
push
push
ret
xorl
into
fisubl
out
lods
push
test
xchg
out
add
rorb
mov
pop
mov
push
lock
js
jbe
movsb
and
jns
pop
ds
adc
icebp
jae
es
cmc
or
ret
out
adc
mov
push
cli
fnsave
adcb
adc
cltd
repz
fwait
mov
stos
sub
sub
pop
lea
inc
ss
js
add
ljmp
jecxz
cld
jle
test
fiaddl
xchg
fstpt
mov
sbb
rcll
popa
sti
arpl
outsl
dec
stc
mov
sbb
dec
or
mov
pushf
into
adc
out
pop
inc
imul
pop
shlb
mov
pop
inc
mov
mov
lods
jl
pushf
ss
mov
sahf
out
dec
dec
rcr
mov
lea
adcl
movsl
push
add
jnp
icebp
dec
dec
data16
cmp
or
or
mulb
lea
movsl
imul
adc
dec
dec
sbb
bound
inc
mov
mov
in
pushf
push
test
and
mov
mov
out
inc
pop
and
iret
inc
cmp
mov
pop
pop
mov
jbe
hlt
mov
int3
stos
ds
push
adc
call
and
cmpsb
lea
js
shll
xor
popf
xchg
adc
addr16
inc
xchg
mov
jns
sub
xchg
repz
cmp
or
lds
xchg
stos
adc
fcomp
clc
leave
fidivrs
insl
into
dec
outsl
xchg
loopne
in
cmp
imul
divb
nop
mov
push
ds
rcrl
sbb
dec
cwtl
mov
jo
xrelease
aaa
icebp
sbb
or
cs
mov
sbb
pop
mov
loop
cmp
add
adc
xor
xor
and
lret
les
push
sub
lds
cmpsb
scas
outsb
xlat
jmp
pop
in
xor
or
jp
pop
and
fsubrs
ja
gs
call
fsubl
scas
sbb
lret
and
sub
or
jae
call
push
mov
push
aad
xchg
or
push
add
aad
mov
mov
pop
jmp
xchg
lret
mov
push
mov
out
jno
testl
push
lcall
push
xchg
mov
scas
dec
stos
dec
add
out
inc
mov
lods
ja
iret
adc
lods
cmp
push
fsubs
jle
bound
les
mov
lret
shlb
cmp
inc
gs
mov
inc
lcall
mov
fnstsw
mov
and
in
and
jl
pushf
cmp
scas
loope
scas
jle
xchg
pop
out
fnstsw
mov
sti
cmp
xor
lret
xor
mov
mov
pop
hlt
out
xchg
daa
sub
dec
push
hlt
mov
inc
mov
inc
sub
jle
daa
sbb
fisubrs
lea
ljmp
jg
inc
out
push
and
adc
aam
jecxz
jle
and
adc
xchg
mov
sbb
mov
sub
ss
dec
dec
bound
or
inc
sbb
mov
jge
xchg
cmp
outsl
mov
stos
aas
xor
push
fcompl
pmaxub
je
fstps
xchg
sbb
aam
xor
xor
int3
sub
mov
pop
data16
imul
cli
mov
jo
xchg
loope
mov
sti
test
test
lcall
inc
roll
ss
ss
in
nop
cmpsl
and
cmpsb
sarb
sbb
bsr
out
sarb
ret
xchg
lcall
and
adc
outsb
cmp
adc
aaa
xchg
sbb
outsb
shlb
ret
aaa
fstl
cmp
fistl
pop
imul
rcr
in
xor
ret
mov
xor
mov
lods
out
cmp
fildl
test
push
cmc
lds
data16
dec
and
xor
iret
fld
cmpsb
xorb
mov
repz
in
imul
jnp
lahf
int3
aas
jl
cmpsb
adc
ret
mov
push
inc
popa
movsl
pop
and
je
mov
loop
in
inc
out
js
and
mov
and
es
add
repnz
jg
incb
and
out
sbb
mov
sbb
insb
std
test
cmpl
lea
xchg
pop
push
cld
xor
fidivs
hlt
sti
movb
icebp
inc
sbb
cltd
mov
or
scas
sti
cmovbe
ret
push
hlt
pop
sarl
data16
sbb
fs
mov
loope
mov
adc
sbb
ds
scas
fidivrs
pop
dec
pop
lret
jb
dec
cmpsb
inc
rorb
push
xchg
test
or
out
sbb
aam
or
insb
fcmove
fstps
nop
inc
inc
dec
dec
imul
push
pop
xchg
imul
mov
imulb
bound
pop
adcl
adc
shrl
push
cs
sbb
imul
aas
mov
sarl
pop
in
and
mov
sahf
add
pop
jo
out
and
sub
lcall
sbb
in
in
mov
sahf
popa
pushl
xchg
pop
xchg
lods
dec
shll
add
push
out
sbb
cmp
xchg
je
icebp
sub
inc
cmpsb
sar
popf
sub
mov
mov
popf
pop
mov
dec
adc
inc
dec
inc
inc
popa
dec
jo
pop
mov
xchg
mov
push
add
pop
mov
outsb
shlb
dec
mov
sahf
pushf
mov
cmpsb
adc
div
dec
mov
shll
push
add
mov
popf
pop
popf
push
mov
nop
sbb
inc
jg
push
xchg
mov
subb
mov
mov
sbb
call
push
in
daa
xchg
test
js
out
cmp
xchg
lods
fldl
les
mov
pusha
stos
adc
xorl
dec
rorb
mov
cmp
mov
daa
hlt
push
cmp
std
sub
xchg
add
xlat
add
das
jmp
pop
and
cmp
mov
jns
push
cmpsb
stc
test
pop
or
rorb
repnz
jnp
sbb
test
stos
jl
jl
test
in
test
adc
les
pop
add
mov
lds
xchg
stc
ljmp
inc
add
adc
pusha
mov
mov
outsb
lock
test
inc
push
shlb
in
push
mov
xlat
out
adc
test
dec
test
dec
fisttpll
sbb
popf
fld1
mov
xchg
cwtl
mov
subl
mov
adc
add
push
push
or
lret
aad
lcall
aas
cmpsl
mov
sub
test
test
in
cmpsb
jbe
mov
and
mov
dec
cli
mov
and
sbb
fadd
sub
dec
ret
sbb
pop
pop
insb
mov
cmpsb
fnstenv
push
adc
call
pop
scas
xchg
xchg
pop
in
out
out
sbb
inc
mulb
mov
jb
and
mov
shr
or
clc
jo
adc
or
pop
cmp
sub
pop
sbb
jl
loope
xlat
inc
add
cld
icebp
ret
and
jge
ja
mov
aaa
sub
mov
dec
loopne
lock
std
test
and
push
aad
dec
call
inc
ljmp
xchg
dec
lods
test
push
out
mov
test
in
mov
pop
push
ror
mov
dec
loop
lea
mov
aaa
jo
insb
add
gs
mov
insl
inc
out
jne
ret
jo
sub
lea
sbb
adc
mov
sub
mov
test
gs
sbb
out
subb
pop
or
lcall
mov
or
es
mov
sbb
cmp
sub
mov
or
mov
divb
sub
jmp
pusha
lock
push
mov
dec
push
cmp
popaw
fistps
in
push
add
mov
inc
inc
push
aam
mov
ret
xchg
es
pop
ss
insb
mov
or
inc
push
nop
lahf
dec
enter
je
or
aam
and
jne
or
pop
xchg
mov
cwtl
addr16
clc
cmpsb
sub
stos
xor
cs
cmp
mov
in
js
ljmp
aas
pop
es
and
cmpsb
das
mov
fidivs
pop
fbld
push
jb
inc
xor
leave
inc
scas
aad
fiadds
push
dec
scas
xor
xor
add
clc
mov
cmp
lret
leave
sbbl
sbb
push
cli
sbb
lahf
sarl
push
andb
call
aad
pop
sub
mov
push
mov
xchg
xchg
incl
into
xchg
fidivrs
sub
arpl
xchg
jne
xchg
cwtl
int3
lret
pop
jmp
clc
mov
dec
sbb
adc
imul
test
popa
nop
lahf
xor
movsl
jl
xor
xchg
mov
fnsave
int3
add
es
in
or
dec
push
aam
loop
aaa
and
test
arpl
aad
movsb
push
jg
pushl
inc
jl
xor
in
or
add
repnz
aad
aad
add
push
mov
cwtl
mov
jle
xchg
bound
loopne
inc
das
mull
andl
xchg
jb
or
or
rcrl
inc
push
dec
cmc
stos
inc
imul
fdiv
lahf
mov
xchg
icebp
test
or
jmp
push
repnz
ljmp
jge
add
imul
pop
aad
lds
aas
xchg
je
std
dec
inc
fmuls
mov
cmpsl
fnsave
sub
fdivrp
inc
call
sbb
mov
mov
mov
lock
add
dec
adc
or
cmc
inc
jge
push
adc
cmc
adc
and
xor
and
push
cmpsb
cld
xchg
shlb
into
mov
dec
loopne
and
aas
mov
add
gs
addr16
jecxz
xchg
loopne
add
rorl
jo
stc
pop
lahf
or
dec
std
out
push
nop
add
test
fwait
mov
sbb
and
clc
xchg
lock
pcmpgtw
out
ljmp
and
iret
jo
dec
idivl
mov
mov
push
xorb
mov
repnz
leave
pop
jl
loope
sarb
jnp
cmp
pop
cwtl
int3
sub
push
cltd
bound
insb
fnstenv
pushf
xchg
mov
xlat
lods
push
jne
xchg
iret
push
pop
xchg
ds
int
xchg
scas
sub
sbb
cmp
repz
xchg
inc
mov
fstpl
dec
inc
lds
mov
jg
xor
mov
or
sub
pop
mov
add
fcoms
sub
mov
pop
mov
hlt
xchg
jb
cmp
pushf
fdivrp
lock
adc
or
push
mov
rorl
mov
xor
cld
std
xor
cmpsb
sbb
adc
pop
add
jp
dec
push
jnp
lcall
xchg
out
popa
mov
and
mov
xor
std
xor
xor
dec
nop
cmp
int3
add
fucomp
gs
repnz
jne
and
and
das
aas
icebp
or
xor
xor
test
cmp
addb
sbb
inc
lea
aam
fiadds
das
in
lret
pop
push
and
adc
sahf
jbe
or
sbb
mov
pop
bnd
fnstenv
push
pop
jl
xor
dec
mov
push
pop
adc
mov
imul
mov
push
cltd
pop
jmp
loopne
cmp
gs
in
and
and
cmpsl
inc
jecxz
aaa
or
jmp
loop
pop
je
sti
jecxz
insl
xor
scas
adc
inc
mov
pop
ljmp
mov
das
repnz
add
add
aas
jg
bound
rcll
mov
pop
mov
jecxz
divl
addr16
push
dec
mov
push
enter
dec
lahf
sbb
shlb
pop
movl
dec
mov
and
jge
jb
sbbb
inc
out
adc
rcl
or
fwait
inc
lea
mov
pusha
sbb
mov
mov
aad
fdivrp
sub
mull
jecxz
ret
mov
mov
fsubrs
adc
jae
mov
cmp
inc
mov
cmp
and
popf
cmpsb
xor
je
and
in
test
cltd
jae
notb
add
cmp
stc
mov
leave
pop
inc
xor
popf
rolb
sbb
inc
mov
mov
sahf
dec
xchg
cmp
aad
lock
scas
mov
jbe
bound
cmp
inc
hlt
ret
sti
loop
cmp
orb
fadd
divb
in
movsb
and
and
xor
arpl
mov
or
and
ret
inc
outsl
mov
jge
adc
xchg
mov
out
push
popf
cmp
push
jne
int3
movsb
fwait
testl
xchg
andl
push
push
sbb
sbbb
xchg
mulb
add
push
icebp
dec
pop
xchg
ljmp
and
jmp
gs
rclb
cli
and
mov
xor
js
fstpt
flds
imul
and
xor
lret
in
push
es
or
jne
out
outsl
lods
fnstenv
add
mov
adc
mov
dec
imul
sahf
xchg
dec
mov
cmp
xor
pop
into
mov
jns
adc
loopne
test
pop
sti
or
mov
push
leave
sub
repz
notl
int
xlat
outsb
cwtl
popf
dec
outsl
and
pop
push
ret
mov
into
xchg
pusha
inc
mov
js
daa
in
lahf
and
data16
das
add
sbb
dec
icebp
lds
fidivl
adc
fistps
lods
xchg
sbb
jno
jnp
mov
into
cli
xor
iret
xor
jge
call
inc
nop
sahf
idivl
andb
cld
push
pop
cmpsl
dec
inc
jmp
pusha
fisttpll
mov
das
xor
add
stc
out
fsubr
cmpl
push
push
out
pop
mov
lea
repnz
pop
filds
cmp
mov
insb
lea
and
loop
xor
jbe
mov
out
insl
int
dec
mov
pop
dec
cltd
or
xchg
mov
idivb
cwtl
fs
xchg
jo
and
xchg
in
cli
jmp
xor
js
sarb
cmp
js
sbb
shl
jle
ret
sbb
pop
push
jecxz
dec
dec
dec
les
or
xor
cmp
mov
pop
sub
and
fisubrs
lcall
pop
and
mov
mov
push
sbb
int
mov
sarl
push
ret
and
hlt
fwait
dec
mov
or
mov
out
popf
pushf
mov
lods
out
in
pop
imul
jb
test
data16
xchg
mov
movsl
mov
inc
or
lods
int3
dec
and
pop
cmp
sbb
imul
and
pop
repz
push
mov
xor
pop
imul
je
sahf
jl
push
in
in
sbb
dec
imul
int
inc
lea
daa
jecxz
std
mov
dec
pop
dec
jl
and
xchg
es
xchg
mov
faddl
inc
add
add
adc
out
mov
jg
pop
test
sti
int
jo
insl
dec
push
dec
pop
dec
cmp
test
movsb
mov
pop
push
ss
sub
sbb
mov
push
jno
lods
dec
sbb
or
xor
xchg
push
test
or
xchg
jle
lret
push
sub
inc
cltd
rcrb
in
cmp
in
lcall
cmpsl
pop
adc
jo
arpl
pop
cltd
aas
push
in
shr
push
xchg
imul
mov
lahf
or
xchg
movsb
lahf
repnz
clc
outsl
in
and
xlat
xchg
mov
stos
add
adc
aas
mov
lret
xchg
fidivs
pushf
xchg
cmp
lahf
iret
das
or
mov
iret
cmp
add
or
rolb
push
cmpsb
js
cmp
in
sub
or
fnsave
and
call
clc
scas
imul
mov
jp
xchg
into
sahf
xor
enter
mov
ret
lcall
lret
jmp
lahf
pop
ss
aas
call
or
xchg
lahf
bound
popa
xchg
mov
movsl
add
outsb
mov
outsb
push
and
lret
and
sub
insl
mov
and
lahf
rolb
pop
mov
push
std
aaa
lcall
ja
xchg
mov
ja
out
js
test
lcall
movsl
in
xor
mov
cmp
cmpsb
test
jo
push
jbe
repz
fimuls
or
cs
mov
mov
negl
sarb
arpl
imul
lcall
sub
rcrl
test
inc
or
fs
xchg
push
loopne
ds
sti
out
push
inc
cmp
sbb
mov
adc
dec
push
mov
or
pushf
push
and
jg
xlat
lret
sub
mov
adc
mov
bnd
aad
shr
jmp
mov
call
xor
insl
rolb
adc
mov
ret
shlb
add
pop
aas
add
mov
xchg
sub
xor
leave
test
fisubrl
push
out
sbb
add
jne
fs
popa
adc
in
out
mov
ss
sub
inc
lret
mov
clc
outsl
das
imul
xor
cmpb
add
cmp
in
cmpb
sub
std
ss
imul
mov
jmp
iret
or
in
jge
mov
jle
jbe
fcmovnb
sub
xchg
pop
xor
pop
icebp
shlb
sub
cmp
aas
mov
mov
shl
xor
ret
add
mov
stos
sub
jnp
mov
in
cmp
pop
repz
pop
sub
fwait
mov
mov
jecxz
pop
mov
add
pop
xchg
cmpsl
fidivs
in
outsb
mov
xchg
loopne
mov
nop
mov
pop
test
mov
addr16
add
sahf
push
sarl
inc
xchg
add
loop
pop
xor
imul
nop
test
loop
hlt
jecxz
enter
jmp
xlat
xchg
mov
xchg
inc
jle
fwait
mov
pop
mov
pop
sbb
popf
add
adc
push
je
lds
jg
mov
pop
and
add
les
sbb
decl
div
hlt
mov
lcall
pusha
loopne
push
jge
addr16
outsl
movsb
pusha
mov
fnstcw
jns
insb
cld
lret
scas
dec
repnz
dec
push
cltd
int
ss
je
icebp
in
cmp
cmp
mov
cmpsb
mov
and
cmp
xchg
shll
push
mov
pop
pop
ljmp
iret
imul
sbb
ja
nop
xor
popa
outsb
psubusw
movsb
mov
dec
ljmp
movsb
xchg
mov
ds
ret
rcrb
push
cmpb
aas
mov
cmp
sub
pop
add
mov
arpl
or
fistps
jecxz
push
mov
xchg
into
and
stos
sarb
sbb
mov
data16
dec
jp
insl
lods
cmc
jnp
mov
leave
dec
add
and
stos
in
icebp
mov
and
sbb
and
inc
in
sub
out
dec
mov
test
lea
test
data16
sbb
int3
fidivs
sbb
and
add
add
dec
sahf
xchg
fcmovnu
or
ds
sub
sbb
push
add
xlat
mov
js
inc
dec
lock
out
mov
frstor
push
push
shrb
ret
adc
aaa
mov
xor
cltd
test
movsb
ret
shlb
sbbb
sub
cmpsb
cltd
and
jb
xchg
mov
jno
or
dec
movsl
add
in
mov
sbb
and
mov
dec
out
mov
daa
aas
test
stos
xor
mov
add
add
sbbb
mov
imul
fcom
loopne
jecxz
adc
stc
xor
mov
test
mov
fnstcw
movsl
aad
cmp
call
outsl
rorb
pusha
clc
pushf
loope
movsb
push
jecxz
ret
push
push
dec
jns
out
dec
push
dec
test
int
cltd
lret
shrb
sub
adc
jg
rclb
mov
xlat
lds
cmpsl
movsb
cmp
mov
sahf
sbb
dec
push
add
mov
mov
mov
pop
pop
mov
push
xor
pop
mov
xchg
movb
xor
lret
cmp
test
xor
insb
mov
dec
or
cwtl
and
icebp
or
ss
cmp
aas
dec
push
test
dec
jle
shll
xchg
mull
adc
add
stos
dec
arpl
mov
xor
add
repnz
stos
fisttpll
stc
pop
pop
jge
arpl
std
les
mov
sarl
or
and
enter
loope
pop
mov
push
mov
mov
add
repnz
adc
pop
lahf
iret
ucomiss
fnstenv
lahf
push
sbb
enter
add
push
bound
pop
fs
push
xchg
mov
int
mov
jmp
or
jno
or
int
and
xor
cmp
sbb
jae
data16
xchg
xchg
lret
jbe
ficompl
adc
jle
add
and
xchg
rorb
movsb
cmp
sub
movsl
inc
push
mov
push
jle
jp
xchg
add
mov
add
push
xchg
mov
loope
mov
mov
and
mov
into
and
movsb
xor
push
loop
mov
lods
ljmp
dec
jl
jns
xor
ret
and
out
pusha
jbe
lret
pop
sbb
aam
or
sub
pop
pop
cmp
das
push
mov
dec
jl
adc
out
adc
rol
inc
cltd
ficoml
lea
and
ss
sub
scas
sub
adcl
ds
movsb
cld
int3
and
sbb
jle
push
in
pop
test
std
pop
ret
aas
sbb
cmc
shlb
insl
sarb
cltd
push
and
jge
mulb
imul
arpl
lret
adc
into
adc
in
push
add
hlt
mov
sbb
push
sbb
mov
and
xor
mov
mov
out
enter
ret
cmp
xor
xor
push
dec
ds
call
bnd
aas
xchg
mov
dec
cmp
cwtl
xor
dec
bound
pop
xor
arpl
arpl
and
aam
mov
lods
fwait
cmp
dec
jmp
xor
insl
cmp
sub
mov
push
mov
lods
mov
ljmp
jno
fisubrs
ljmp
jmp
mov
dec
out
mov
ljmp
jmp
mov
inc
mov
js
sbb
lahf
sub
frstor
addr16
mov
dec
and
mov
loope
iret
and
mov
mov
jmp
js
fwait
in
xor
dec
nop
cmc
push
stos
push
pop
aam
xchg
push
out
call
mov
roll
mov
sbb
or
dec
std
sub
sbb
push
inc
das
xchg
dec
push
mov
inc
lods
pop
push
sbbl
jp
fcomps
pop
mov
loopne
xor
jg
testl
ret
mov
mov
fisubrs
push
sbb
sub
sub
and
xchg
jge
fldenv
imul
jl
adc
stos
push
lods
shlb
add
add
mov
in
jg
push
repnz
test
stos
cmc
or
mov
addr16
subl
int
mov
enter
and
dec
mov
mov
sbb
lods
jae
pop
mov
sub
jge
and
stos
or
pushl
fwait
idivb
xor
test
mov
daa
in
sbb
stos
inc
aad
js
out
iret
pushf
add
sbb
int3
inc
stos
xchg
pop
jb
xor
idivl
pop
sbb
cli
sub
dec
pushf
mov
test
dec
pop
and
jns
cmpsb
btcl
mov
sbb
sti
xor
es
xor
adc
pusha
push
in
int3
in
cmp
std
cli
jne
mov
sbbb
clc
cmpsb
out
sti
jecxz
sub
push
stc
lret
test
dec
ret
cmp
or
jl
cmp
mov
js
inc
call
sub
std
adc
adc
popa
lret
sbb
pushf
mov
or
jmp
pushl
lods
rclb
inc
sub
popf
jo
dec
mov
sarl
pop
fdivrp
imul
in
xor
jecxz
enter
pop
aad
dec
mov
jp
mov
rcll
sbb
enter
insl
sbb
xor
jb
cmp
add
xchg
out
jle
pop
xchg
mov
xor
jmp
mov
lods
dec
in
decl
add
mov
jecxz
push
xor
pop
leave
adc
idivl
or
mov
stos
push
sbb
scas
aam
dec
dec
and
movsl
or
sbb
lret
call
xchg
add
idiv
mov
inc
push
adc
push
cltd
pop
sahf
xchg
daa
mov
push
mov
mov
xchg
cs
cmp
sbb
dec
mov
out
sbb
rorb
fs
js
mov
stos
out
mov
std
jmp
jne
pop
js
cmp
into
add
mov
cwtl
xor
ljmp
xchg
aam
aam
dec
insb
cmp
xor
inc
es
jno
xor
js
jb
mov
ss
cmp
sti
inc
and
in
push
dec
xchg
jne
xor
xchg
frstor
in
dec
idivl
sbb
push
cwtl
inc
fwait
insb
shl
push
jae
jmp
shlb
xor
cld
and
dec
dec
jnp
lret
adc
adc
and
adc
sbbb
cmp
add
test
adc
mov
gs
adc
and
das
and
rcrb
outsb
mov
mov
mov
test
sbb
cmpb
andl
aad
inc
cmp
mov
push
clc
out
xchg
fbstp
daa
dec
jb
sbb
and
int
pop
or
sbb
push
out
dec
mov
addb
imul
test
leave
sahf
ja
insl
fstpl
fimuls
mov
mov
jle
je
loopne
push
and
mov
clc
stos
mov
idivb
mov
arpl
loop
mov
push
imull
insb
cs
mov
adc
addl
lods
sub
mov
push
cmp
int
sti
fcmovu
test
or
movsb
sahf
inc
dec
sbbl
shlb
test
out
inc
pusha
imulb
sbb
pop
inc
mov
vsubss
cmpb
int3
mov
cmp
fdivrp
xlat
lds
mov
in
push
or
sub
repnz
inc
movsl
push
fistps
pop
lods
loope
add
xchg
mov
mov
data16
out
sub
js
xor
inc
jb
mov
int
aaa
push
and
adc
push
addl
scas
mov
ret
dec
and
popf
push
inc
rolb
pop
pop
sahf
idivl
call
in
sbb
lret
sbb
ja
loope
sbb
add
sbb
shlb
out
sbb
cmpsb
jnp
lret
cmpsl
mov
or
or
adc
call
cs
xchg
ficompl
loopne
or
adc
test
stos
nop
jmp
idivb
mov
rcrb
and
lods
loopne
addr16
push
add
in
mov
xorb
aad
inc
sub
lahf
into
xchg
stc
addb
xor
std
push
mov
ja
aaa
and
cmc
sti
or
pusha
test
movsb
rorb
xchg
xlat
in
push
stos
mov
cmp
mov
sub
inc
mov
pushf
test
dec
sbb
dec
xor
inc
inc
xor
pushf
sbb
and
pop
movsb
sbb
adc
push
jl
ret
imul
sbb
sub
dec
sbb
mov
mov
push
rcl
lahf
in
sbb
adc
and
mov
insl
outsb
push
divl
dec
dec
and
fnstcw
dec
addr16
push
dec
in
and
jecxz
std
mov
loop
aaa
stos
push
and
sbb
mov
and
imul
aad
xchg
dec
inc
or
mov
xchg
push
frstor
pop
rcr
test
add
mov
sahf
int
loop
jb
cmp
call
fnstenv
inc
add
jae
mov
ss
js
sahf
sub
or
sub
fcom
pop
add
xchg
lods
ret
and
cmc
jp
xchg
movsb
orb
lea
pop
add
adcl
ljmp
cmc
xchg
andb
pop
mov
cmp
cmpl
dec
fld
int
jecxz
outsb
pop
push
loopne,pn
jp
daa
mov
mov
rol
mov
jb
idivl
cmp
gs
into
inc
xor
inc
add
int
mov
mov
mov
jle
cmpsl
notb
es
cmp
jns
add
test
fisubrl
cmpsl
cmp
mov
lret
jnp
cmpl
pop
lcall
call
cmp
fdivrl
shlb
mov
pusha
mov
jne
sub
les
sub
pop
cmpsb
xchg
xchg
or
add
mov
adc
and
xor
into
addr16
js
fcoml
sub
and
enter
outsl
int3
xor
int
sbb
jnp
mov
mov
or
gs
cmp
outsl
pop
add
les
in
gs
out
xchg
inc
stc
cmpsl
jo
adc
fstpt
ret
push
add
sub
jb
out
dec
in
xchg
loopne
mov
movl
data16
andb
jmp
jbe
fidivrl
mov
add
mov
pop
mov
sbb
dec
js
add
js
or
jns
pop
popf
and
pop
fwait
cmp
xor
daa
data16
jnp
stc
dec
pop
in
cltd
and
movsl
sub
in
sbb
push
cmp
and
jg
ficompl
data16
in
add
arpl
mov
mov
cmp
jno
pop
sti
mov
inc
dec
pop
lret
sahf
out
and
ud1
push
pop
xchg
popa
cmpsl
filds
scas
dec
movsb
shlb
enter
imul
mov
or
mov
mov
mov
lahf
xor
xor
in
push
popf
movsl
adc
scas
lret
repnz
int
push
out
mov
mov
pop
xchg
pop
lds
adc
ss
xchg
mov
ficomps
mov
in
rcrb
sbb
adc
fbstp
outsl
add
sbb
jnp
adc
loopne
cmp
hlt
or
fldt
shrl
or
test
test
mov
neg
fiaddl
mov
xchg
dec
pop
inc
scas
or
xor
inc
daa
sbb
push
pop
push
data16
vfrczps
inc
pop
jge
lret
push
xchg
sbb
jbe
push
test
mov
scas
adcl
pushf
mov
sub
pop
lock
loope
sbb
push
loope
push
lahf
xchg
andb
addr16
cmp
dec
fdivs
test
ds
cmp
clc
xchg
sbb
sbb
xchg
jne
into
and
aas
fisubs
in
adc
xchg
mov
test
icebp
mov
imul
sbb
push
sub
in
push
xchg
addr16
xchg
ror
data16
sar
mov
fldcw
mov
lret
repnz
scas
inc
jne
or
stc
inc
lods
test
xor
jp
gs
or
xchg
hlt
sbb
ret
xchg
xor
rorb
in
mov
addb
lahf
and
cmp
push
sbb
push
lods
sbb
push
or
sti
int
dec
sub
aam
mov
pop
ja
push
push
enter
dec
adc
rcll
adc
lods
mov
pop
push
mov
xor
icebp
imul
cmc
or
lret
idivl
inc
jge
dec
add
test
jnp
popa
insb
imul
dec
mov
loop
std
mov
addl
out
mov
mov
cmp
fucom
in
sbb
fs
insl
and
lret
lock
mov
mov
jo
pop
jmp
gs
lcall
push
dec
dec
sbb
jg
cmp
mov
les
loop
loopne
mov
pop
xrelease
in
mov
lret
bnd
roll
fnstsw
lock
mov
insl
add
xchg
fwait
push
pop
mov
jge
test
and
inc
outsl
push
nop
aad
aad
mov
daa
sub
cmp
fwait
clc
mov
or
cs
int3
push
xchg
into
jmp
xchg
xchg
mov
in
xor
movsb
cmp
or
out
and
xchg
and
mov
xchg
or
jmp
subb
sti
rcr
arpl
sahf
jmp
push
adc
aas
lahf
push
test
mov
xchg
mov
test
mov
mov
das
xor
pop
idiv
stos
adc
fs
testb
xchg
loope
push
je
xchg
js
lods
mov
pusha
mov
pop
xlat
mov
test
mov
mov
adc
add
mov
into
fnsave
pop
ljmp
jbe
sbb
jl
inc
loopne
rcrl
mov
fisubrs
push
imul
insl
push
or
out
sahf
scas
jge
jmp
cmp
cmp
mov
test
cmpsl
and
mov
mov
orb
dec
test
xor
pop
insb
popl
std
pop
adc
cmp
in
leave
add
cmp
jns
in
mov
add
loop
sarb
rclb
sub
stc
cli
pop
pop
add
xchg
test
into
push
aam
dec
clc
clc
std
jp
mov
inc
out
add
sahf
pop
xchg
inc
xchg
mov
dec
jbe
dec
push
pop
std
pop
outsb
and
pop
jno
dec
inc
fmuls
mov
xchg
add
lods
mov
stos
imul
xchg
icebp
aaa
pop
mov
inc
loopne
std
clc
addl
ret
push
js
add
fcmove
fistl
lret
push
lods
adc
pop
and
xor
mov
cli
jg
xchg
adc
and
lret
xlat
dec
xor
pop
repnz
xchg
cmp
pop
jb
ss
testl
adc
fistl
je
xchg
sub
xchg
je
jo
filds
push
jp
xchg
add
jne
cli
int3
aad
dec
adc
dec
xchg
push
or
cmp
iret
rclb
push
sbb
mov
pop
push
mov
test
or
cli
rcrl
mov
ja
lret
mov
dec
mov
enter
inc
xchg
cwtl
fwait
stc
sahf
repz
xchg
sti
loopne
mov
outsl
sti
fwait
aam
xchg
push
jns
inc
mov
aad
lock
cld
jle
mov
dec
popf
lods
jbe
pop
arpl
rclb
fisubl
xchg
jp
sbb
test
mov
movsb
and
scas
xchg
lcall
or
hlt
mov
icebp
jb
ss
addr16
sub
pop
or
flds
inc
dec
sahf
cmc
xchg
in
cmpsl
ds
push
push
add
jg
or
dec
frstor
daa
imul
xchg
or
sub
dec
mov
pop
mov
or
push
notb
out
push
aam
into
stos
in
xchg
repnz
test
sub
adc
jo
mov
xor
test
or
push
adc
dec
mov
pop
jb
addl
fwait
stos
mov
in
popf
fisttpl
aad
lret
adc
insb
cmp
cmp
testl
xlat
loop
jmp
inc
test
xlat
fisttps
in
test
cmp
out
jp
lods
lea
das
mov
mov
enter
pop
push
out
adc
dec
pusha
push
xor
inc
ret
mov
lods
mov
ss
imul
sbb
and
mov
leave
push
and
shll
repnz
subl
sbb
cmp
daa
mov
mov
pop
mov
jns
sub
and
data16
xchg
jno
and
fs
mov
push
cmp
daa
add
push
flds
lcall
dec
in
pop
mov
add
xor
xchg
sti
std
int
jle
imul
inc
out
loopne
adc
stos
sbb
movsb
aas
sub
mov
mov
rcrb
daa
xchg
shl
js
stc
jnp
call
push
mov
addr16
push
cld
lea
mov
push
stos
cmp
mov
mov
mov
into
xchg
mov
call
mov
push
dec
add
negl
mov
mov
push
xchg
cltd
pop
xchg
jecxz
mov
shr
xor
adc
and
sub
push
and
fdivrs
xchg
daa
enter
minps
push
jp
dec
enter
jge
add
xchg
mov
add
mov
call
mov
leave
stos
rcr
jle
dec
push
or
sbb
inc
xchg
and
jmp
enter
fildll
inc
sahf
dec
inc
loop
sbb
leave
mov
jae
mov
xchg
ja
jb
pop
lahf
out
adc
add
jp
inc
cmpsb
sti
sbb
and
enter
addr16
lret
lods
cmp
hlt
pop
sub
or
mov
xchg
mov
xchg
test
add
enter
jl
cmc
pushf
dec
cmp
cwtl
sub
pop
nop
cltd
data16
fwait
loop
call
or
clc
decl
in
ljmp
dec
bound
mov
pop
inc
xchg
shrl
pop
ret
mov
pop
fcoms
outsb
or
sar
adc
pop
fisubl
das
jns
add
mov
and
push
dec
or
inc
test
and
and
ss
stc
mov
mov
out
je
es
adc
dec
fs
idiv
bound
mov
sti
in
das
pop
mov
push
lds
popf
push
cmp
pop
enter
cmpsl
aas
adc
xchg
leave
test
mov
fcoms
int
ss
subb
mov
xor
adc
push
jg
cmp
dec
push
in
push
xchg
stc
daa
cmp
rcll
pusha
inc
test
icebp
sbb
sub
fwait
jge
mov
scas
inc
lcall
mov
inc
aad
xchg
and
pop
pop
mov
cld
out
xor
out
bound
dec
leave
sbb
add
pop
inc
lcall
sub
loop
or
cmp
ret
push
add
mov
inc
mov
and
fdivrs
iret
rorb
je
ja
or
mov
push
add
loop
lcall
sbb
ja
pusha
lahf
sub
inc
outsb
subb
xchg
pop
pop
mov
push
lods
push
int3
out
pop
push
imul
nop
xchg
sbb
mov
pop
pushf
add
mov
je
ss
lods
xor
jecxz
je
jns
pop
xchg
sti
in
or
pop
cltd
pop
out
dec
xchg
cld
xor
inc
popa
xchg
dec
imul
scas
jns
inc
xchg
mov
popf
jle
inc
mov
test
dec
xchg
inc
adc
push
dec
imul
sbb
arpl
pop
pop
xchg
fs
pop
fcmovbe
or
int
xchg
sti
shlb
std
pop
cli
mov
out
xchg
push
pusha
pop
insb
hlt
mov
inc
sti
stos
push
xchg
int
jmp
imul
mov
lods
lahf
inc
cmc
int
xchg
or
lret
sbb
dec
aam
adc
push
lods
fcoms
lahf
push
cmp
dec
cmp
inc
mov
dec
aaa
pop
push
jg
ja
xor
loop
test
push
fnstcw
xchg
aas
cmpsl
inc
cmp
rorl
xchg
cltd
cmp
enter
ss
cmpsl
pop
ret
adc
mov
xor
out
and
sti
es
sbb
sbb
adc
jg
inc
xchg
and
mov
adc
lea
outsb
pop
imul
dec
jo
sarb
bound
pop
xchg
lods
dec
add
cmpsb
out
inc
sbb
and
push
sbb
add
cmc
ret
xor
inc
lock
jmp
fwait
mov
rorb
sbbb
aad
mov
mov
inc
push
das
ljmp
addr16
icebp
and
jle
cwtl
popa
mov
mov
inc
jno
jae
mov
leave
sbb
in
mov
mulb
add
hlt
test
inc
inc
mov
testb
pop
shlb
add
sbb
aas
push
jno
fisubl
mov
pop
pop
xchg
out
fnstsw
sub
jne
mov
xchg
aam
lods
rclb
cmpsl
and
fwait
arpl
inc
jl
mov
xor
jge
jecxz
sbb
push
int3
aaa
xorl
gs
push
pop
clc
aad
xchg
rcl
inc
outsl
fimull
add
sbb
test
cmpsl
push
dec
jge
push
sbb
sbb
loope
ss
ret
mov
in
or
inc
sar
lahf
ss
pop
cmp
test
xchg
add
fldt
mov
and
fisubl
ljmp
cmpsl
and
pop
jecxz
add
add
test
subb
ret
negb
sti
xor
ret
cli
and
popf
jne
pop
xchg
lods
test
pop
sahf
test
stos
mov
sti
mov
push
jg
ss
push
test
xchg
mov
adc
arpl
inc
pop
inc
dec
test
xor
sub
pop
test
xor
scas
ror
pop
js
adc
andb
stos
xor
jmp
loope
mov
dec
movsb
cmp
lock
iret
jae
mov
loope
jg
and
xor
mov
out
adc
jle
cmpsl
dec
ja
test
pop
into
xchg
push
push
pop
pop
push
xlat
ljmp
inc
aam
rol
cmp
pop
sbb
dec
test
or
push
pop
into
jge
jo
sarb
adc
dec
push
jg
xor
arpl
sbb
lock
rol
adcl
cltd
aas
mov
movsb
push
daa
xchg
lcall
scas
pusha
int3
aaa
loopne
jae
out
pop
lcall
movsl
rorl
push
std
loope
push
mov
fwait
lea
test
cltd
cmp
insb
in
dec
imul
adc
cmpsl
stos
or
or
cmovae
push
out
ffree
sbb
sbb
loop
inc
xlat
xor
lea
lods
xchg
ljmp
mov
ret
int
cmpl
xor
cmp
inc
jo
call
or
jle
xchg
adc
loopne
ja
ds
sbb
and
add
push
xchg
xchg
test
dec
fldenv
mov
add
jbe
adc
lods
in
fsubrs
cmp
mov
test
mov
mov
push
add
dec
dec
jb
orl
sbb
sbb
mov
adc
stos
mov
mov
sub
cmp
add
rcr
fadds
dec
mov
or
fmuls
stos
mov
mov
shll
scas
pop
or
push
jns
pop
xchg
test
pushf
mov
idivl
mov
aad
into
mov
jmp
jle
mov
aam
aaa
js
or
dec
xor
scas
std
push
xchg
inc
xor
int3
mov
mov
mov
das
cmp
hlt
test
aam
jmp
push
call
or
push
jns
cmc
ffree
ret
loop
and
mov
and
nop
iret
testb
mov
movsb
test
loope
pop
popf
xchg
xchg
into
iret
sbb
pop
inc
and
cmovl
into
mov
lods
fildll
add
mov
fbstp
out
fcompl
pop
leave
inc
int
xchg
jo
jbe
pop
aam
fisttps
stc
push
loopne
mov
roll
into
rolb
or
and
scas
add
pusha
int3
xchg
dec
mov
mov
divl
dec
pop
jg
lock
insb
imul
and
js
jl
jp
imul
repnz
data16
jle
cmp
cmp
aam
out
cli
jno
pop
push
mov
cmp
push
pop
and
sti
pop
mov
mov
push
movsl
or
adc
shll
pop
adc
push
js
into
adc
or
daa
mov
into
adc
or
mov
jnp
dec
mov
out
dec
inc
or
pop
in
lret
repnz
push
jns
cmp
fwait
and
loopne
mov
pop
nop
clc
mov
dec
pop
pop
xchg
mov
mov
and
adc
pop
or
je
xchg
adc
movsl
pop
jecxz
dec
pop
inc
pop
pop
xchg
mov
pop
and
xor
cmp
jmp
shl
outsl
cmp
rcrl
sbb
mov
test
xchg
decl
push
es
and
mov
stos
in
xchg
shlb
mov
sub
rolb
dec
mov
jmp
sub
and
cs
jge
outsb
and
and
mov
or
std
movsl
into
push
xchg
decl
insb
jg
std
faddp
out
lods
fbld
inc
subl
push
out
sahf
push
push
xlat
mov
mov
xorb
mov
push
sbb
mov
push
dec
xor
dec
loope
stc
pop
arpl
xor
and
mov
iret
test
mov
lcall
jbe
ss
outsb
lods
fwait
dec
loop
aas
gs
adc
shrb
movsb
rcrb
mov
sub
dec
inc
mov
lret
jns
or
les
dec
push
mov
adc
mov
fiadds
daa
das
xchg
stos
xchg
jp
imul
js
hlt
and
call
jnp
xor
and
ja
dec
loope
in
jmp
cmp
sahf
movsl
mov
add
push
mov
and
push
fdivr
std
fs
ret
fimull
add
jmp
jmp
les
pop
cmp
jo
inc
jge
xchg
push
sahf
jge
sub
xchg
push
xor
push
push
int3
shll
mov
ret
movsl
out
les
mov
movsb
js
or
adc
xchg
adc
mov
mov
mov
jnp
jg
mov
nop
and
cmpsb
inc
jo
add
out
add
xchg
out
rorl
movsb
xor
cmpsl
into
aad
fadds
xchg
jmp
inc
cmc
rclb
xor
in
sub
js
push
lods
push
adc
push
cmp
lds
in
or
aas
insb
cltd
pop
lds
int3
daa
xchg
gs
pop
popf
pop
or
cmpsl
xchg
adc
adc
aad
push
sbb
cmp
cli
adc
int3
call
xchg
insb
or
mov
mov
push
cmc
outsl
fdivrp
sbb
sub
daa
sbb
inc
mov
xor
mov
js
leave
mov
mov
jmp
pop
ds
inc
mov
mov
daa
sahf
jecxz
mov
push
in
or
inc
jae
test
movsl
mov
addb
jmp
fwait
pop
mov
jae
enter
fwait
dec
fs
jbe
or
shll
pop
mov
and
aaa
movsb
mov
sbb
aad
int3
or
hlt
es
ror
ss
movsbl
xor
push
fwait
jo
cmp
pushf
push
mov
mov
jnp
add
sarl
pusha
lea
add
add
rcrb
dec
mov
shrb
sarb
mov
in
cvtps2pd
sub
ja
sarb
aaa
push
loop
in
and
lods
adcb
out
mov
push
push
jnp
outsb
test
sbb
sbb
mov
cli
or
stos
shll
sbb
push
sbb
ds
sti
jl
push
outsl
fbstp
leave
fidivrs
dec
fldenv
rcll
outsl
out
in
push
cmp
mov
jns
inc
outsl
nop
test
or
sub
cmpsl
cmc
das
jo
push
rcll
inc
in
xlat
mov
dec
jb
and
call
addb
pop
icebp
xor
outsl
cltd
jecxz
add
mov
mov
push
sbb
repz
and
movsb
xlat
movlps
ret
sbb
negb
pop
xchg
inc
and
jmp
shr
and
popa
lcall
lret
dec
or
xor
testl
xor
inc
test
aaa
movsb
test
push
and
xor
lcall
aas
jnp
jne
inc
ficompl
add
dec
stc
mov
inc
xor
or
jmp
into
jns
push
addl
addr16
fidivl
push
je
ds
add
adc
sbb
push
xor
imull
adc
pop
add
insb
cmp
repz
outsl
fcompl
add
mov
add
sbb
popa
xchg
cwtl
or
cmp
out
jmp
mov
lret
pop
sbb
mov
mov
xor
push
sbbb
jbe
mov
in
lods
push
add
mov
mov
inc
mov
jmp
stos
xchg
fidivl
cld
das
subb
pusha
lods
clc
fld
jno
mov
and
mov
rorl
inc
cwtl
mov
push
jg
add
push
jge
and
shrb
cmpsb
sbb
std
mov
movsl
aam
ljmp
push
inc
xorb
mov
call
js
lret
jle
jns
mov
add
jnp
push
mov
inc
divl
test
xchg
mov
sbb
loop
xchg
xor
ljmp
jecxz
bound
das
inc
scas
jle
sti
ret
pusha
inc
pushf
cmp
aad
int3
ror
loopne
lret
into
push
or
jg
sbb
mov
mov
fwait
sub
mov
adc
jge
pop
popf
lock
xor
cmp
push
cmp
sub
pop
inc
mov
fiadds
movsl
scas
mov
add
xlat
aam
dec
xor
repnz
pop
addr16
scas
test
cmp
push
imul
mov
pop
cmp
int3
lock
lret
into
pushf
in
pop
sbb
mov
fstps
divb
inc
lods
cmc
pusha
je
leave
dec
cmc
mov
cmp
and
dec
outsl
call
rcrl
dec
sub
shll
dec
js
and
les
adc
sbb
arpl
enter
fmuls
mov
cmp
dec
dec
aam
int
push
inc
sub
mov
sahf
lret
popf
in
nop
push
fldl
arpl
mov
sbb
xchg
pushf
cmp
adc
mov
jb
movsb
xor
rcrl
std
jnp
ss
nop
scas
inc
shll
repz
mov
out
mov
inc
pop
in
pop
out
xor
dec
test
jl
cmp
lret
mov
sub
mov
sub
in
and
aam
out
jmp
stc
sbb
aam
addr16
sub
pop
add
iret
sub
loop
shl
jae
scas
into
xor
push
sti
mov
sub
fmull
fimull
cmp
in
or
jnp
inc
push
jp
add
jns
push
push
or
or
mov
or
negb
lods
jp
pushf
push
dec
bound
and
dec
jmp
icebp
xchg
inc
addr16
gs
je
mov
mov
in
lock
push
jbe
dec
out
fnsave
xor
xor
lret
iret
lahf
fnstenv
imul
enter
call
jle
sub
mov
scas
push
sahf
mov
add
sbb
out
inc
fistpl
fwait
pop
clc
subb
or
adc
add
ret
sbb
data16
ljmp
add
push
push
xchg
jns
scas
das
pop
xchg
scas
in
lea
repnz
xor
addr16
mov
inc
gs
dec
into
xor
lret
mov
fcmovnu
cs
push
dec
pop
ret
mov
adc
insb
mov
jne
rol
imul
test
and
jns
sbb
cmp
ret
into
je
sbbl
jmp
mov
inc
decl
mov
mov
cmp
arpl
stos
mov
mov
pop
lahf
mov
inc
fwait
rcll
aaa
fmuls
xor
add
pushf
push
lcall
add
jl
sub
sub
bound
mov
cld
shlb
ja
xlat
mov
imul
loope
gs
jle
dec
je
fisttps
lock
jl
lods
xchg
cld
sti
stos
aad
fnsave
push
enter
xor
repz
xor
sbb
push
in
xchg
mov
lahf
jns
repnz
leave
jp
jnp
lods
sbb
mov
add
cmp
scas
out
mov
enter
mov
push
loopne
sub
mov
loopne
xor
or
js
add
mov
cmpsl
pop
xlat
xor
sti
or
loope
jp
sbb
add
clc
push
dec
insb
loop
call
xchg
mov
push
xor
out
mov
xchg
lds
add
cmp
ffree
jno
out
jae
add
add
daa
leave
adc
dec
outsb
push
icebp
xor
mov
jp
lea
icebp
scas
mov
or
lcall
out
mov
cmpsb
jnp
mov
add
outsb
gs
xorb
movsb
lahf
jg
sbb
movsl
sub
push
xlat
enter
dec
mov
sti
sti
lea
lods
das
xchg
je
loopne
outsb
mov
sbb
xchg
test
adc
leave
fcmovne
sub
xchg
xor
enter
sub
divb
sar
imul
xor
mov
stos
rclb
cmpsb
jbe
adc
sub
fadd
sbb
aam
sub
add
or
gs
mov
dec
js
mov
mov
pop
cmp
jge
push
xor
and
mov
cmp
pop
mov
adc
out
std
fwait
mov
lahf
gs
lea
inc
fldcw
mov
jge
dec
mov
ja
cmp
ss
cwtl
fwait
xlat
in
lret
shl
mov
stos
imull
fwait
cmc
jnp
sub
lds
ret
mov
adc
lock
nop
push
ret
xor
inc
xor
gs
imul
ret
cmp
pop
insl
pop
cmp
rorl
stos
nop
pushf
cltd
hlt
push
jge
loop
jne
adcl
in
mov
imul
movsl
mov
lock
adc
pop
push
int
testb
push
jnp
icebp
or
test
mov
fwait
pushf
xchg
rorb
xchg
xor
xchg
pusha
mov
shlb
insb
push
mov
out
movsb
dec
fdiv
ja
arpl
test
adc
push
test
nop
xor
icebp
push
rolb
sub
sbb
fbld
out
aam
scas
inc
or
aas
test
fwait
pushf
rcrl
and
and
sub
stos
lahf
in
movsl
out
int
jg
sbb
pop
mov
scas
fucom
mov
movsl
jb
mov
idivb
and
aam
pop
rcrb
je
and
addr16
test
test
enter
add
into
call
or
mov
out
test
xor
push
pop
lock
xchg
and
in
pop
jns
shlb
mov
aas
jl
aam
loopne
pop
and
cmp
jmp
and
inc
cs
adc
imul
das
pop
inc
insb
sti
push
mov
and
lods
add
add
mov
mov
insl
xor
pop
sahf
call
in
mov
push
dec
adcl
fnstsw
mov
loope
lds
popf
scas
movsb
and
daa
push
sbb
popf
fidivrs
lcall
push
push
adc
inc
mov
sbb
flds
clc
inc
push
lock
pop
adc
push
arpl
arpl
negl
leave
popa
fsubrs
loopne
fcoms
xchg
or
imul
inc
mov
cmpsb
inc
and
insb
mov
scas
pop
in
cld
hlt
fmul
xorl
push
or
cmp
mov
pop
jno
addl
roll
imul
inc
arpl
icebp
aam
dec
das
in
mov
mov
mov
add
jl
int3
pop
aaa
xchg
outsl
cmp
repnz
lods
push
sub
mov
mov
mov
push
mov
je
daa
mov
or
lret
dec
xor
xor
cmpb
sti
es
or
sti
cmpsl
scas
fldl
mov
add
clc
inc
jo
mov
jne
xchg
idivl
mov
in
mov
xchg
sti
sub
mov
subb
cs
fldt
ds
aas
mov
sbb
lods
roll
iret
and
cli
push
lret
xor
pop
rcrl
popa
mov
lods
jmp
push
inc
fs
pop
clc
enter
rolb
iret
imul
pop
sub
mov
add
xchg
xorb
bound
cld
idivl
sub
sub
push
fdivrl
call
and
imul
cld
mov
cwtl
cmp
testb
lock
fildl
data16
inc
dec
mov
dec
mov
cmp
mov
or
pusha
dec
add
in
mov
sarl
push
cmc
sti
inc
xchg
add
sub
pop
shlb
lret
jge
lods
out
mov
xchg
dec
movsl
add
andb
xchg
pop
add
insl
aam
fsubrs
jp
mov
xchg
xchg
test
xchg
pop
es
sti
das
jns
lret
aad
inc
jns,pt
aaa
lods
push
das
test
xor
mov
leave
mov
js
pusha
int
fs
adc
push
jo
pop
sub
idivb
mov
fidivrl
push
gs
pop
ja
in
pop
nop
xor
jl
lahf
push
and
xchg
jmp
adc
and
jne
test
daa
mov
mov
movsl
aam
lahf
call
int
es
jg
jg
sbb
test
dec
lods
cmp
mov
movsl
pop
out
xor
adc
mov
sbb
inc
cmp
mov
push
jge
sub
xor
or
inc
sub
mov
repz
outsb
sbb
pop
push
jge
ret
sti
lods
jg
outsl
loop
and
popa
mov
xor
mov
mov
xchg
lret
jecxz
test
mov
sbb
mov
push
sbb
xor
lcall
cmp
nop
clc
or
popa
xor
cmp
sub
ljmp
fwait
mov
fisubrs
cmp
popa
cmp
lret
xor
mov
push
xchg
into
push
pop
jae
cmpsb
ja
fmuls
jmp
dec
jae
les
scas
or
in
in
int
mov
incl
lret
xchg
adc
sarl
mov
push
mov
repz
xchg
cmpsb
push
das
faddl
jg
push
popf
push
ret
jle
mov
loopne
mov
or
mov
lret
out
nop
pop
loopne
punpckldq
push
sub
enter
cmp
inc
add
mov
adc
test
in
fsts
adc
aam
loop
add
push
adc
sub
mov
or
xchg
outsl
iret
jp
sub
push
sbb
push
popf
xchg
adc
fsubl
dec
jns
mov
push
jmp
cltd
push
inc
notb
gs
popf
cmp
mov
xor
mov
cltd
ja
cmp
ficomps
inc
mov
int3
incb
aaa
out
cmpsb
fsubl
gs
testb
out
imulb
pop
mov
or
imul
jmp
in
sarl
arpl
ds
lahf
jp
lea
fwait
dec
push
adc
jns
cmp
and
lret
mov
push
in
fidivrs
jg
seta
jp
ljmp
std
cltd
xor
lcall
test
es
pop
push
xchg
adc
pop
notb
movsb
pushf
pop
imul
mov
jns
cmp
data16
add
or
sbb
jb
pusha
sbb
insl
lahf
cwtl
mov
test
pusha
xchg
sti
cltd
ret
mov
rolb
lret
movsb
faddl
sub
loope
xor
sbb
push
or
inc
mov
data16
pusha
mov
fs
inc
push
rol
add
dec
push
push
scas
cmp
lock
dec
pop
and
xchg
cmpsb
imul
cmp
js
clc
push
push
push
or
cmpsl
or
insl
aaa
mov
scas
aas
test
push
repnz
add
je
mov
push
fwait
arpl
push
adc
test
bnd
sahf
adc
aas
pop
cmpsb
adc
cltd
sbb
mov
in
sub
xchg
or
addl
aad
xchg
sbbl
adc
sub
testl
arpl
insb
lahf
loopne
inc
ds
lret
std
dec
jle
out
jl
gs
add
ljmp
jno
inc
into
in
cs
loop
test
pop
jg
jne
pop
dec
out
rclb
inc
arpl
xor
je
nop
shrl
ret
pop
jp
testl
jb
stc
pop
outsl
jle
mov
xchg
cmpsl
pop
es
jbe
pop
dec
push
adc
xor
ja
xor
pop
pop
sbbb
sub
adc
sub
in
test
pop
and
cmpsl
dec
out
inc
lock
adcb
cld
adc
rorb
rolb
pushf
push
xchg
jge
jecxz
jo
sub
int
pop
jmp
movsl
fsubl
cmpsb
xchg
fldl
jmp
mov
into
inc
adc
cli
inc
movsb
mov
lret
shlb
sarl
push
shlb
stos
push
push
push
jmp
vpcmpgtw
lret
cmp
xor
test
aam
sub
movsl
rcr
and
ss
sbb
scas
and
into
sbb
test
jle
inc
cmpsl
sub
ja
jbe
mov
jp
mov
mov
push
lret
bound
mov
jmp
inc
ss
jmp
xor
adc
pop
sbb
cld
xchg
push
call
cmp
dec
and
data16
cltd
xor
stc
and
dec
sbb
shll
xor
out
daa
aam
adc
jp
jle
loopne
stos
pop
in
js
push
mov
push
loopne
sbb
cmp
mov
rcrb
je
and
xor
jmp
cmp
and
push
jne
push
adc
cld
pop
jg
call
mov
cmp
jmp
mov
pop
cmp
subb
push
or
xor
pop
jae
repnz
pop
aas
pop
pop
ja
pusha
and
fsubs
mov
and
and
add
ja
or
or
pop
out
aas
ja
xchg
movsl
xchg
nop
shl
test
aam
cmpl
fldl
mov
fcoml
mov
stc
xchg
push
mov
cmp
adc
outsb
shr
push
pop
int
xchg
sub
xchg
cmp
mov
lcall
orl
loope
mov
push
push
pusha
mov
jb
rcll
sbb
clc
cmp
in
loope
ss
mov
push
and
jge
out
popa
lock
xlat
std
hlt
xor
or
dec
scas
or
incl
rolb
rclb
jle
and
jo
hlt
ret
and
lods
dec
movsl
pop
pop
mov
add
xor
movsb
loopne
mov
pop
xor
lahf
lahf
xor
ljmp
fstpt
mov
dec
jge
in
xchg
in
shlb
loopne
adc
mov
xor
test
add
xlat
outsb
or
cmp
outsl
mov
or
inc
mov
add
mov
or
xchg
in
jb
inc
in
mov
fs
sahf
jmp
push
jnp
adc
mov
pop
push
mov
mov
inc
or
data16
or
cmp
and
mov
sbbl
jmp
sarb
mov
xor
insb
inc
push
loopne
cmp
aaa
jge
cmp
addps
and
rcrb
sti
aaa
push
sub
inc
into
xchg
or
jnp
sub
cmp
xchg
pop
mov
arpl
jae
jecxz
outsl
lret
hlt
mov
pop
fnstenv
imul
push
in
out
in
pcmpeqw
shlb
xchg
dec
mov
push
jp
je
xchg
in
push
rorl
rol
stc
adc
jmp
gs
sbb
div
jns
xor
xchg
fistl
scas
mov
xor
mov
sub
push
inc
rorl
or
out
gs
pop
scas
sbb
mov
ja
pop
rol
and
test
push
cmp
and
sub
ljmp
lock
roll
subb
rcrl
fs
cmpsb
mov
mov
ret
push
add
sbb
adc
daa
call
outsl
sub
cmc
or
lea
or
xchg
add
xchg
daa
fcmovbe
testl
xor
or
mov
daa
dec
add
add
call
js
push
repz
push
lds
push
call
dec
or
lret
xor
sub
xchg
nop
inc
stos
test
xchg
mov
mov
fists
xchg
ret
loop
arpl
clc
loope
into
std
adc
adc
mov
mov
sub
xchg
inc
sub
mov
and
rep
sbb
jg
cmpl
out
lcall
outsb
loopne
mov
ja
fists
jne
dec
xchg
mov
cmpsb
sbb
fdivrl
jge
jne
xchg
addl
dec
rorb
lcall
add
pop
arpl
inc
or
cmpsl
lret
sub
pop
push
test
jmp
push
icebp
in
jnp
sbb
inc
pop
or
pop
sbb
aaa
sbb
fisubl
in
pop
fistpll
faddl
xchg
lds
psubsw
xlat
push
mov
in
inc
cmp
mov
into
push
and
pop
cmpsl
dec
jnp
in
mov
push
cld
and
sub
sub
lcall
xor
imul
loop
out
dec
pop
test
xorl
add
adc
sbb
push
lods
movsl
fcomps
sub
add
pop
jmp
mov
fnstcw
pushf
les
mov
pusha
mov
outsl
cmpsl
mov
and
jecxz
mov
inc
sub
mov
movsl
push
bound
and
xor
xor
pop
jo
xchg
repz
lea
lods
out
jmp
push
sbb
lock
adc
jge
adc
inc
inc
daa
into
and
shrb
out
fsubrs
mov
xchg
outsb
sbb
push
icebp
rcrl
orb
inc
mov
cltd
icebp
adc
sub
insl
push
movsl
mov
movsb
lods
add
mov
fistpll
mov
adc
cmp
add
pop
dec
xor
xlat
in
icebp
jp
jle
xchg
retw
cli
and
push
or
imul
shlb
ret
fs
frstor
jns
popf
pusha
aas
push
jbe
xor
dec
jmp
in
ret
faddl
jmp
out
pusha
push
adc
or
mov
call
repnz
mov
sub
imul
add
xchg
mov
dec
push
jmp
and
mov
les
or
push
push
xor
js
orl
popf
and
inc
jnp
add
aad
inc
dec
mov
cltd
xchg
adc
imul
adc
sub
fisubl
add
push
mov
xchg
gs
movsl
dec
pop
sbb
lcall
ffree
and
shll
cwtl
iret
loop
insl
jo
inc
push
loopne
pop
scas
pop
push
jns
add
mov
out
mov
sarl
adc
popf
aas
rcr
inc
add
rcrl
mov
add
inc
pop
movsl
xchg
sbb
and
cmpsb
lock
cmc
xor
out
or
mov
jns
sti
jg
ds
xor
in
jno
jne
xchg
sbb
aas
movl
push
push
ret
pop
cmpsb
or
dec
add
jns
cwtl
adc
mov
adc
inc
and
outsb
std
xor
pop
push
jno
adc
pop
cmpsl
add
jbe
pop
fdivrs
cmc
fildl
adc
dec
mov
xchg
ja
rcl
cmc
adc
scas
xlat
mov
dec
shll
inc
ret
bound
add
ljmp
dec
push
fsubrl
stc
stc
dec
push
cmc
xchg
push
lock
mov
inc
mulb
fdivl
shll
jmp
cli
insl
dec
aam
push
push
xchg
or
sbb
add
notl
push
xor
int
lahf
mov
push
add
test
insl
xchg
sbb
add
sti
shl
int3
cs
mov
fistpl
jne
jo
mov
das
and
dec
in
pop
aam
jecxz
clc
mov
gs
je
jae
dec
shrb
adc
js
adc
test
lods
xor
xor
aaa
sub
jp
push
insl
cli
sarl
call
sub
clc
or
push
mov
mov
mov
jmp
push
jb
mov
es
daa
xchg
push
jg
mov
in
shll
jmp
cmp
or
sub
in
imul
pushf
or
cmpsb
cwtl
sub
cmc
test
mov
jmp
push
sub
pop
scas
sbb
repz
popa
cltd
sbb
dec
jg
daa
mov
aad
cmpsb
loopne
xchg
lods
mov
push
aam
insb
mov
jmp
data16
mov
icebp
lcall
std
stos
out
lock
notb
sub
test
mov
imul
jb
cmc
imul
mov
jmp
dec
loopne
cli
mov
xor
dec
test
repz
or
cmp
aam
fmull
int
lods
lea
or
mov
cltd
dec
mov
xchg
dec
test
mov
jne
fnstenv
xor
xor
shl
or
jle
cmc
jmp
push
into
mov
pop
jl
lahf
mov
jle
push
push
mov
sahf
std
movsl
idivb
and
push
lods
jmp
repnz
in
mov
iret
cmpsb
icebp
mov
pop
jnp
insl
das
sub
push
xor
nop
mov
and
popa
outsb
jbe
add
sub
lcall
fiaddl
stos
jae
xchg
in
and
loope
jo
je
ja
call
xrstors
mov
ret
outsl
repnz
js
mov
mov
or
and
xchg
sarb
or
gs
dec
cmp
cmpsb
mov
shl
jle
bound
add
add
jmp
push
jo
dec
inc
xor
iret
inc
xor
xor
cmp
and
and
mov
mov
sbb
fdivrs
insb
sbb
sbb
xor
scas
pop
add
repnz
push
or
addb
stc
jne
xchg
fistpl
xchg
push
jnp
stc
fimuls
dec
scas
push
add
push
sbb
stos
fildl
popf
insl
jo
sub
imul
hlt
mov
add
xor
loopne
cltd
jae
dec
repnz
and
sbb
mov
outsl
push
dec
cmc
cmp
mov
rol
lahf
adc
enter
dec
icebp
cmp
mov
subl
into
push
shrl
xchg
push
jge
dec
repz
aaa
int
icebp
aas
int
into
or
jns
insb
mov
inc
xchg
mov
jl
test
xchg
sbb
mov
scas
pop
mov
fstl
pop
xor
add
jne
and
add
push
xor
cmp
inc
fs
mov
dec
sub
sub
fidivl
sbb
mov
rol
dec
mov
pop
int
mov
sub
into
ds
add
sbb
mov
jp
pop
call
popa
sar
pop
pop
pop
jo
cmp
shll
shrl
adc
in
xor
jle
mov
pop
insl
adc
stos
dec
mov
movsl
je
mov
jnp
je
cltd
lods
in
mov
pushf
push
aas
test
mov
test
cs
inc
add
mov
xor
dec
enter
lods
and
lea
out
pop
push
bnd
and
sbb
sahf
add
xchg
insb
pop
push
dec
scas
cmp
daa
test
shlb
js
jbe
xchg
push
test
and
out
and
cld
insb
jns
rcll
ret
pushf
fld1
jp
dec
pop
cmpsl
add
jl
call
add
shll
jo
mov
mov
out
test
mov
jbe
aad
stos
mov
or
dec
or
stos
push
sbb
cmp
xchg
dec
push
xchg
pop
inc
ljmp
sbb
dec
xchg
inc
outsb
test
in
nop
ljmp
xor
loopne
lods
push
adc
mov
leave
adc
mov
xor
fwait
xchg
cmp
test
inc
pop
enter
jno
fistps
push
test
xchg
xchg
xchg
add
loope
xor
ficoml
mov
lods
loop
add
xor
roll
jmp
hlt
dec
mov
xchg
inc
xor
das
fimull
mov
ja
popa
sbbl
mov
sub
repz
mov
pop
insl
int
cltd
mov
mov
mov
test
push
js
add
mov
mov
loop
shrl
fimull
mov
mov
sbb
sub
push
out
push
popa
ret
dec
lea
mov
add
call
and
rorl
lret
stos
loop
aad
lahf
imul
lods
jmp
sbb
mov
shl
mov
xor
icebp
jle
repnz
stc
xlat
arpl
dec
xchg
idivb
out
int3
roll
pusha
cwtl
inc
ljmp
into
xchg
push
mov
dec
movsb
xchg
lock
push
outsl
mov
dec
js
xlat
mov
lret
and
push
mov
insl
pushf
and
outsl
repnz
xlat
es
sub
call
insb
push
aas
sub
or
xchg
cmp
xor
and
outsb
xor
subl
incb
fildl
movsl
lds
lock
push
shrl
shlb
mov
xchg
pusha
inc
dec
mov
imul
pusha
rcll
popa
cmp
pop
bnd
lret
in
mov
stos
pop
or
xor
cmpsb
adc
enter
mov
ljmp
ret
jae
sahf
push
inc
lds
mov
inc
int3
call
scas
test
adc
cwtl
cli
sar
mov
and
mov
lahf
mov
cwtl
mov
out
fwait
orb
inc
sahf
jge
ficoml
xchg
movsb
out
into
push
mov
mov
xor
mov
inc
mov
mov
add
hlt
fbld
fsts
outsb
add
gs
out
fdivrl
pop
stos
jmp
mov
jnp
mov
aas
pop
mov
int3
popl
mov
xchg
js
add
in
roll
arpl
add
pop
hlt
jo
mov
cmc
int3
into
std
in
cli
dec
arpl
enter
sbb
push
xchg
push
hlt
add
and
xor
addr16
push
scas
jno
mov
pop
loope
mov
cmc
xchg
adc
jl
fcmovnbe
or
cmp
insl
push
xchg
mov
scas
mov
in
ss
lret
rol
into
push
ss
aas
je
out
popa
repnz
mov
push
lods
add
xor
adc
rolb
leave
js
dec
inc
int3
jo
gs
mov
rcrb
stos
sarl
jecxz
sub
push
int
and
movsb
dec
push
jmp
out
fistl
bound
jae
inc
shr
adc
inc
ja
cmp
push
pop
shlb
dec
enter
pop
inc
inc
leave
andl
scas
cmpb
dec
mov
and
sub
sub
popf
testl
icebp
lcall
test
mov
daa
lea
cmc
rclb
bound
jns
lahf
aam
inc
jno
sarl
adc
iret
rclb
dec
hlt
aas
cmp
pop
aas
insl
mov
xchg
mov
mov
enter
push
leave
jl
mov
xchg
hlt
xor
andnps
or
or
es
push
or
iret
adc
xchg
into
enter
or
push
movsl
fmul
divb
fwait
pushf
push
test
mov
mov
pop
hlt
dec
jmp
pushf
mov
lahf
movsl
add
inc
mov
jge
notb
mov
push
push
sbb
aam
insl
mov
repnz
lock
leave
jp
push
add
mov
push
jnp
or
aam
xchg
stos
push
add
sahf
sub
and
fistps
int3
mov
ljmp
inc
xchg
imul
dec
cli
mov
push
push
jbe
sub
imul
mov
inc
iret
mov
fdivp
nop
pop
dec
cmp
jmp
mov
shl
daa
js
setbe
mov
cmpsl
dec
ljmp
mov
in
xor
jae
repnz
mov
push
popa
outsb
sub
lret
sub
xchg
rcll
nop
outsb
xchg
adc
add
cs
aad
lret
add
scas
or
bound
cli
sbb
or
ret
jl
es
sub
pop
idivl
sbb
push
dec
pop
into
jae
div
or
sub
pop
scas
fsubrs
out
jbe
pushf
inc
in
mov
xor
push
dec
stos
stc
mov
int3
jmp
add
or
fcomps
aaa
cltd
in
xchg
push
outsb
push
mov
dec
add
mov
popa
mov
aas
jp
adc
or
scas
xor
add
pop
pusha
repz
xor
xchg
imul
or
shll
out
cmp
and
adc
pop
adc
fs
ffree
out
mov
adc
pop
in
and
out
mov
outsl
mov
sub
mov
sub
insb
cmc
sbb
pop
cmpsb
pop
sub
push
mov
std
lahf
jb
sti
inc
sub
data16
cmpsb
mov
enter
lods
mov
pop
testl
cmpsl
rorb
mov
cs
mov
fs
dec
mov
pop
inc
movsb
pop
stos
aaa
add
cmp
mov
pop
xchg
xor
dec
shrl
and
or
out
leave
js
test
mov
add
jl
pop
cmpsl
mov
stos
js
add
scas
fistpll
mov
pop
aaa
outsb
test
stos
lds
loope
push
mov
pop
adc
dec
cmpsb
inc
mov
mov
and
xor
inc
mov
pop
cmp
push
aam
das
pop
sbb
and
loop
and
pop
adc
jae
popf
or
aad
cmpb
ficomps
mov
int
fdiv
scas
movsb
adc
jne
scas
das
mov
fldl
fwait
hlt
add
mov
lcall
enter
aaa
mov
fidivrl
dec
fldt
cs
push
xor
fnstenv
int
xchg
fstps
sub
not
jb
pop
test
sub
jnp
mov
cmp
jne
xor
aaa
leave
inc
xchg
in
sbb
jl
push
ficoms
ds
mov
jl
mov
fidivl
mov
jmp
jb
jl
in
push
mov
inc
mov
pop
xlat
mov
loopne
je
popf
pop
cs
loope
lret
pop
mov
dec
inc
lods
cld
and
adc
in
je
xchg
push
or
inc
orl
movsb
ja
nop
movsb
push
pop
and
xchg
cmc
and
xchg
sbb
xchg
xchg
cmpsb
jecxz
jecxz
mov
call
sbb
cmp
fs
inc
das
sti
test
xchg
pop
fnstcw
inc
inc
out
sti
flds
mov
add
aas
clc
sub
mov
xchg
mov
insl
stc
mov
mov
mov
std
jle
lahf
lahf
sub
or
mov
loop
pushf
sbb
rcr
mov
inc
adc
loope
mov
ss
imul
mov
icebp
adc
int
pop
sbb
stos
popf
sti
nop
pop
shrl
loope
xorb
add
jb
jp
jae
push
jae
stos
in
adc
sub
std
lcall
cmp
test
lahf
out
imul
call
push
push
dec
cmp
push
ss
cld
mov
mov
movsb
movsl
jnp
mov
nop
sbb
outsb
xlat
ja
pushf
sbb
int
inc
push
gs
adc
jmp
aam
add
and
out
dec
incb
ljmp
mov
xor
jecxz
cld
lret
fmulp
adc
push
andb
flds
xor
outsb
jbe
sbb
mov
mov
scas
out
rorb
shlb
icebp
cmp
int3
jle
cmp
dec
lret
loop
sahf
xchg
int
andl
mov
add
clc
push
or
pop
scas
into
push
scas
lret
jae
fists
xchg
sub
cmp
and
loope
sub
sub
sub
sub
cmpsb
stos
mov
ret
pusha
jg
inc
xor
push
or
andl
push
cltd
add
jnp
sub
lods
test
push
add
call
adc
dec
pop
and
jmp
pushl
push
scas
in
fidivl
je
inc
push
xchg
cld
inc
mov
xchg
add
in
lcall
es
jmp
pop
cmp
push
pop
mov
cld
jmp
and
xor
in
cmpsl
mov
fisubl
cmp
jmp
lret
adc
inc
ret
xchg
shll
mov
xor
lods
ret
sbb
xchg
cmp
cmp
mov
push
xchg
cmp
outsb
cmp
jg
pop
rol
mov
pop
jg
test
nop
and
cmp
sbb
lea
jle
mov
fadd
mov
dec
test
inc
mov
loope
movsb
loopne
cmp
xlat
jge
and
adc
inc
aaa
jae
cmp
je
fs
ret
jle
mov
ja
rorb
or
fisttpl
push
mov
int
scas
jns
xor
add
pusha
xchg
scas
mov
xlat
outsl
lock
pusha
dec
sar
mov
sbb
cld
inc
cld
mov
jns
cltd
shlb
test
xchg
jbe
push
les
sub
pop
jge
mov
clc
je
jmp
cmc
fldt
and
in
xor
jns
shr
add
scas
fs
stos
jecxz
xor
mov
add
dec
stc
sti
sbb
push
vpaddusw
add
sub
mov
out
iret
fwait
jae
dec
dec
adc
xchg
in
add
sub
mov
inc
roll
xor
sbb
adc
test
into
ds
jecxz
test
jp
adc
xor
mov
ljmp
push
insb
vmwrite
push
pop
stc
push
inc
cmp
int
xchg
popf
jecxz
js
adc
add
adcb
nop
or
jecxz
pushf
addl
in
sub
sbb
inc
movsb
pop
loopne
pop
fstpt
adc
pop
into
or
arpl
negl
xchg
adc
mov
iret
insl
inc
ds
cs
push
sbb
adc
call
dec
imul
inc
ds
divb
lcall
stc
mov
mov
pop
adc
mov
ret
pusha
push
loop
pop
cmp
cli
push
mov
cwtl
sahf
imul
jp
fdivl
ds
in
cmc
dec
test
add
jno
aam
adc
mov
add
test
mov
lea
mov
nop
dec
fildl
fldl
mov
cs
dec
sbb
ret
lods
repnz
mov
cmp
stos
sbbb
ret
sahf
out
mov
add
fucomp
out
ret
fcmovne
jbe
fcoml
scas
pop
fsubr
les
cmp
das
adc
ret
mov
or
or
mov
test
pop
add
gs
mov
sahf
push
popf
int3
add
int
lret
pop
iret
test
add
mov
and
mov
dec
data16
xor
movsb
dec
add
xchg
imul
dec
pop
in
xchg
jbe
scas
and
hlt
push
sbb
les
dec
mov
dec
ret
mov
sbb
or
xchg
cmp
push
aaa
jo
xchg
dec
jbe
add
mov
push
cmc
push
mov
push
test
mov
jecxz
bound
sahf
jae
shr
out
xchg
in
mov
cmpsl
adc
push
cmp
xor
or
or
sub
or
addr16
add
pop
mov
test
push
in
sbb
dec
and
ret
push
and
ss
add
mov
mov
add
mov
ds
adc
adc
mov
loope
test
pop
xchg
pop
ss
ret
enter
pop
xor
cwtl
jp
out
sbb
xor
push
lock
mov
adc
xor
jle
bound
dec
pushf
or
xchg
ds
xchg
xchg
push
push
stos
arpl
js
lcall
xchg
pop
mov
mov
ja
lcall
push
push
xor
mov
cmc
push
cld
arpl
mov
adc
out
movsb
jge
test
add
lea
fs
daa
jge
outsl
out
ret
std
int3
ss
mov
add
mov
fisubrs
jno
add
shlb
push
jmp
or
cs
mov
jbe
repz
jmp
add
push
mov
aas
les
ret
add
stos
push
icebp
fdivs
push
and
xor
inc
xchg
hlt
mov
sub
xchg
adc
mov
ret
mov
loopne
vphsubdq
sub
jg
in
in
mov
mov
aam
scas
jle
sbb
pop
pop
out
outsb
pop
fs
jno
popf
sbb
push
add
ret
and
std
cli
nop
xchg
add
push
roll
scas
repnz
dec
fidivrl
xchg
push
sub
dec
sub
mov
leave
xor
adc
cmp
test
push
xchg
mov
dec
mov
lock
imul
add
push
jge
into
test
bound
mov
pop
sub
xchg
or
les
data16
jge
enter
sub
or
jne
mov
xchg
jne,pt
pop
jg
test
cld
or
icebp
addr16
repnz
cli
jns
pop
xchg
jno
imul
jg
iret
or
test
pop
and
xchg
jns
or
or
ds
mov
sub
cmp
jne
sub
mov
outsb
add
lret
jb
test
std
pop
inc
stc
int
dec
pop
js
std
ret
addb
sbb
cld
sbb
push
or
ficompl
mov
pop
sbb
push
test
push
xor
mov
xor
ret
std
adc
and
jg
test
adc
pop
lods
lret
aam
or
addr16
and
lahf
cld
cld
or
mov
mov
jno
stos
rcrl
xchg
xor
or
loop
movb
mov
jl
imul
mov
xchg
hlt
call
imul
int3
les
fwait
js
lea
push
sbb
mov
nop
nop
or
jb
or
fcomip
cmc
movsl
sub
in
xor
in
enter
jns
insl
in
popf
jp
push
dec
sbb
xor
and
imul
popl
lods
pusha
xor
stos
aaa
mov
es
es
pop
jle
ficomps
lcall
testb
pop
xor
lret
sbb
cmp
int3
inc
jl
ljmp
dec
gs
lods
and
cmpsl
jl
xchg
inc
and
xchg
int
or
cmp
loop
insb
shll
test
xchg
repz
sub
xchg
inc
adc
loopne
adc
lds
sbb
cmpsb
push
repz
dec
adc
mov
loopne
sbb
lock
imul
enter
xchg
inc
sub
fwait
mov
and
cmc
or
add
test
cs
ficoms
pop
pop
stc
imul
dec
incb
mov
std
out
cmpsl
jne
sarl
lcall
adc
lods
pop
stos
cmp
je
sbb
lcall
xchg
fsubp
das
pusha
push
dec
test
lret
cmp
and
sti
fwait
mov
cmpsb
fs
cwtl
popf
bound
das
mov
lds
je
daa
mov
lcall
loopne
movsb
add
andb
cmpsb
xor
arpl
xchg
lret
inc
pop
icebp
sub
daa
clc
js
cmp
push
xlat
sub
or
pop
jno
test
inc
pop
sti
cltd
fldenv
sti
jnp
rcr
xchg
dec
cmpsl
testl
scas
or
and
les
mov
popa
dec
add
pop
pop
mov
adc
mov
or
fbld
mov
cmp
loope
xchg
xor
xchg
or
or
dec
jge
jl
and
nop
loop
ret
mov
outsb
push
scas
pop
mov
fsubs
push
jg
inc
and
pop
jnp
fnsave
push
cmp
add
inc
cmp
fnstsw
push
sbb
inc
mov
sub
stc
and
loope
fwait
in
push
sub
cmp
inc
lods
repz
jbe
fsubr
rcrb
aaa
sub
sub
pusha
notb
test
push
jmp
cmp
jmp
adc
jno
daa
fisubl
push
out
inc
out
pop
rorb
xchg
mov
add
push
jne
test
xchg
sub
test
into
jnp
or
mov
xlat
inc
xchg
outsl
mov
adc
mov
push
out
nop
ret
push
cmp
dec
aam
xchg
rorb
xor
mov
mov
cmp
cmpsl
jp
test
rorb
shrl
sub
out
ret
mov
cmc
imul
lcall
cs
xor
xchg
popa
xchg
push
inc
cmpsl
xchg
cld
adc
aaa
loopne
cmp
mov
xchg
es
push
jp
out
inc
push
and
int
cli
lods
out
mov
cmp
cmp
sbb
jo
pop
ds
scas
sub
jo
or
ret
cld
stos
fildll
inc
outsl
popa
jb
into
pop
inc
and
mov
sub
jp
sbb
scas
lock
lahf
xor
mov
lret
push
mov
and
jge
xchg
mov
and
mov
fcomps
ret
stc
adcl
les
fstl
jne
fists
addb
or
mov
sub
cmpsl
pop
xor
out
add
and
dec
sbb
xlat
stos
lods
or
arpl
and
jbe
and
jae
popa
push
enter
sahf
inc
push
lock
xlat
mov
inc
pop
inc
in
dec
ret
xor
pop
andl
push
inc
add
sub
nop
rcrb
mov
jg
test
jl
lret
mov
jg
xchg
inc
mov
cvtps2pi
jb
pushl
popf
test
mov
adc
xchg
adc
inc
add
adc
iret
mov
mov
mov
mov
cli
out
push
pop
sub
push
fsubrl
mov
or
dec
xchg
sarl
push
pop
mov
fcoms
mov
jbe
icebp
sbbl
add
sarb
cs
mov
popf
pop
inc
xchg
mov
popf
icebp
and
jo
jmp
and
cli
xchg
xchg
adc
mov
jbe
ds
cmp
inc
inc
lcall
sub
xlat
cltd
jns
rcr
adc
or
das
pop
push
test
idivl
xor
imul
fiadds
test
dec
mov
ret
ds
ljmp
rcrl
jmp
jmp
popf
int3
inc
fmull
icebp
rcrl
aad
push
lods
sub
cmpsl
jp
xchg
ss
stos
fnsave
das
jo
je
cwtl
lds
movsb
mov
and
pop
int3
clc
ja
in
pop
adc
packsswb
cmp
icebp
jmp
jg
push
adcb
jae
and
arpl
xchg
jmp
inc
stc
vorps
or
bound
xchg
adc
or
mov
andb
cmp
cli
cmpsb
dec
sub
xor
popa
jbe
or
sub
dec
xor
or
jae
stc
fcomip
rcr
stc
mov
push
pop
orl
xchg
jne
pop
xchg
xor
mov
cmpsb
or
ds
shlb
pop
cmp
shlb
addr16
adc
push
xchg
mov
xchg
pop
xchg
cmp
aam
sbb
or
fiadds
pop
cmp
mov
loope
sbb
rcr
jne
mov
dec
push
inc
sbb
ds
faddl
adc
ja
or
jno
sahf
imul
test
das
in
xlat
or
scas
rcll
push
adc
pushf
xor
pushl
adc
cmp
dec
stos
xchg
cmp
xchg
mov
jne
lods
cmp
sub
and
and
sub
fs
mov
in
test
adc
add
insb
sub
push
rcrl
out
adc
jp
jns
xchg
cmpsl
stos
mov
lret
cwtl
sub
or
dec
mov
hlt
or
xchg
lods
xchg
mov
xchg
mov
loop
mov
and
mov
jae
js
aam
mov
lret
and
jne
out
cmp
cmp
or
adc
mov
in
in
sarl
scas
lock
jno
scas
sbb
or
or
lahf
mov
sub
xchg
fldt
aaa
jbe
push
pop
je
lock
adc
je
sti
mov
mov
ja
inc
sub
add
pop
fistl
mov
xor
mov
jb
leave
mov
mov
inc
pop
or
mov
sub
xchg
push
out
and
dec
add
pop
lock
add
ljmp
xchg
addr16
test
test
jns
imul
nop
test
loopne
inc
es
ds
lret
mov
mov
inc
je
fsts
push
lret
in
aaa
test
and
push
mov
insl
mov
movsl
into
inc
lds
cwtl
add
test
mov
andl
cwtl
iret
xchg
jp
loop
push
sbb
jo
or
mov
loopne
repz
push
xchg
subl
inc
arpl
daa
adc
int
push
daa
jmp
or
adc
add
in
or
adc
push
xchg
add
shll
out
in
fcom
stos
ret
mov
in
inc
adc
xor
rorb
sub
stos
cmp
mov
aad
lock
in
adc
daa
jo
push
stc
cmp
push
dec
push
aas
out
ret
cmp
in
aad
pusha
push
sbb
sbb
mov
add
cmp
cmc
sub
fsubrp
adc
cmp
loop
mov
inc
dec
xor
xor
jmp
xchg
negb
movsl
pop
pushf
push
in
push
and
sbb
scas
cwtl
cmp
mov
fwait
mov
jnp
sbb
mov
inc
pop
mov
jb
pop
mov
or
xchg
inc
mov
data16
lret
ds
mov
lods
jp
inc
in
icebp
and
mov
sti
pop
pop
jb
inc
aam
pop
loopne
pop
mov
jg
ss
xor
mov
cmp
imul
ss
pusha
xchg
gs
aam
subl
cmpsl
xchg
dec
jae
sub
push
pop
mov
enter
pshufw
dec
cmc
ljmp
mov
sub
stc
mov
cmp
jae
fistpl
sbb
lds
lahf
sbb
subl
cmc
or
pop
mov
loopne
mov
mov
xor
add
mov
lret
out
shl
push
mov
movsb
mov
js
adc
jnp
xor
cltd
lahf
shr
mov
lret
test
cld
sahf
xor
push
rcr
xchg
shrl
pop
popf
outsb
mov
xchg
out
cmpb
popa
sahf
lcall
insb
rorb
xchg
repnz
push
subb
lds
test
xchg
dec
mov
cmp
inc
rolb
pop
ret
in
fmul
dec
and
sbb
insl
stos
fidivs
push
movsl
pop
jle
js
cmc
ds
pusha
cld
addl
jge
hlt
stos
mov
cmp
mov
in
mov
pop
lahf
mov
ficomps
jne
jg
hlt
sti
adc
jecxz
into
cmp
xor
sub
aas
fiaddl
int
shll
lcall
xor
push
jne
mov
and
xchg
fwait
sti
cs
inc
in
sti
jo
inc
sbb
jo
fdivrl
dec
imul
int
sub
push
sub
sbb
fsubrs
in
ret
or
xchg
sub
sub
cmp
cmpl
xor
jnp
sub
jae
out
inc
push
fisubrl
ja
push
inc
pop
sub
mov
lret
or
dec
mov
cmp
jbe
sub
ja
push
in
jge
add
push
notl
daa
incb
xchg
xor
aam
and
fcmovu
dec
in
adc
ljmp
loopne
push
inc
aad
adc
cmpsb
jmp
fildll
mov
sub
inc
cmc
test
xchg
mov
imul
pop
rolb
mov
inc
add
and
dec
jo
cmp
cmp
xlat
pop
push
adc
jb
mov
inc
push
pop
movsl
lds
repz
pop
add
addr16
mov
pop
dec
add
cwtl
jne
movsl
repz
jmp
in
inc
pop
xorl
cmp
pop
xor
cmpsb
mov
out
inc
cltd
and
fdivr
in
fcmove
and
dec
mov
fnstsw
incl
sti
xor
nop
cmpsb
jle
adc
jb
push
pop
pop
shl
inc
mov
jg
bound
repnz
adcl
inc
dec
lahf
jo
ret
shll
push
movsl
gs
dec
loope
xchg
inc
std
in
inc
or
mov
and
pop
fcomip
ret
movsl
aas
shll
or
ret
pop
call
cltd
ds
sbb
xor
je
mov
xchg
pop
loopne
lods
fwait
test
bound
dec
xchg
in
addr16
test
into
pusha
adc
sub
adc
repz
daa
xor
jge
sbb
les
mov
nop
addb
int3
bound
out
dec
imul
stos
sub
loop
push
pop
xor
out
fisubs
mov
test
into
dec
pusha
xor
leave
aaa
in
mov
xchg
mov
jg
dec
dec
das
lods
push
loop
loope
mov
cmpsl
or
or
aaa
fldenv
jo
sub
push
imul
pop
ja
or
fwait
ret
aas
repnz
adc
adc
cmp
sti
cli
inc
loopne
test
sub
fimull
mov
or
inc
mov
clc
enter
in
out
push
pop
pop
test
stos
push
sbb
aas
cmp
adc
mov
or
std
sub
push
icebp
xchg
or
push
leave
ljmp
sbb
inc
pop
jecxz
sbb
sub
jne
addb
scas
push
mov
mul
sbb
icebp
cmc
iret
arpl
mov
daa
adc
cld
mov
sbb
das
sub
cs
imul
jb
lcall
and
push
dec
or
fdivl
adc
jns
out
das
pop
fwait
test
fs
jae
xchg
pop
icebp
cli
pop
lods
or
outsb
sahf
cmp
push
sbb
push
push
inc
xchg
outsb
fcomp
xor
out
pop
jg
addr16
mov
gs
cld
fiaddl
and
jno
pop
into
dec
pop
add
mov
dec
pop
loop
mov
shl
es
pop
dec
dec
pop
cmpsb
xchg
sti
inc
xor
mov
add
rcr
ret
call
addr16
test
outsl
int
xchg
mov
dec
aas
arpl
aad
outsl
inc
push
es
sub
scas
movl
or
mov
nop
in
and
jecxz
jmp
xchg
out
push
into
and
inc
loopne
push
andb
adc
cmp
fcoms
movsl
pop
add
out
push
outsl
push
jb
movsb
adc
or
mov
popf
and
cmp
adc
std
andl
cmc
adc
ljmp
mov
enter
jae
enter
jecxz
shl
lret
xor
and
cmc
loope
and
push
pushf
dec
dec
sbb
pop
lahf
mov
cmp
scas
jg
fmul
mov
loopne
mov
stos
fwait
or
ret
dec
rclb
and
shrb
dec
mov
xchg
mov
out
popl
call
cmp
data16
xchg
test
subb
push
shlb
push
arpl
dec
lret
pop
mov
aam
pop
mov
fs
mov
popa
dec
xor
scas
push
pop
mov
adc
dec
xchg
adc
fisttpl
mov
or
dec
sahf
xchg
int3
imul
call
adc
int
test
lret
push
sarb
lret
inc
or
adc
dec
cld
je
dec
out
or
adc
jbe
roll
sbb
mov
out
pop
out
jge
aas
pop
jo
jge
sub
insl
xor
outsl
xchg
cmpsb
ja
dec
das
pop
test
and
mov
sti
int3
std
call
adc
or
push
iret
or
inc
inc
arpl
mov
jnp
fcmovnu
push
push
enter
push
or
push
add
push
add
iret
push
movb
scas
shrl
mov
imul
and
push
add
inc
push
adc
mov
iret
lret
movsb
in
lods
xor
xchg
popl
dec
loope
cmp
sbb
scas
ds
xor
rolb
test
cwtl
push
and
mov
add
rolb
mov
sub
lea
repnz
dec
push
fistpll
jl
jno
and
test
test
jne
in
loopne
or
add
sub
xor
aam
pextrw
movsb
repz
dec
stos
cmp
mov
cmp
shr
jae
aad
and
add
ljmp
sbb
dec
loope
xor
sbb
and
cmpsl
dec
xchg
or
aas
sub
and
rcll
fistps
repnz
fstpt
xchg
sub
inc
xor
sarb
jge
fwait
jno
sbb
shr
stc
push
cmpsl
mov
jne
cmpb
jae
mov
mov
adc
jb
jmp
xor
adc
das
js
mov
aas
fisttps
pop
fdivs
ljmp
jecxz
out
ret
pushf
das
aam
sahf
in
jg
pop
mov
sub
sbb
fld
outsb
mov
mull
sbb
cltd
lret
jae
das
mov
inc
in
add
outsl
mov
std
jp
mov
xor
xchg
pop
out
mov
call
push
cmc
xchg
mov
mov
mul
push
mov
sub
aaa
add
or
pop
sti
rolb
sbb
mul
mov
sub
pushf
lret
rcrb
mov
jmp
or
hlt
push
mov
inc
out
xor
cmp
imul
jle
stos
movsl
inc
ss
loope
mov
ljmp
ds
repz
push
xor
xor
cld
call
cltd
iret
test
out
cmc
mov
push
xor
adc
mov
out
lods
ss
and
lret
out
sbb
cmpsb
ljmp
mov
pop
pop
pushf
add
dec
mov
jb
fcoms
mov
inc
inc
out
or
movsb
daa
ss
pop
sti
sbb
es
nop
push
shrl
and
ret
lods
jns
mov
clc
adcb
gs
loope
fldcw
hlt
sbb
mov
imul
lods
mov
aad
popf
xchg
fcoml
lret
inc
xchg
test
pop
cmp
scas
or
xor
cmc
ljmp
dec
dec
adc
mov
xchg
add
stc
lds
push
add
or
xchg
icebp
jno
mov
dec
lea
rorl
pushf
push
stos
loop
add
hlt
in
lret
aad
aas
lock
sub
jb
in
and
mov
adc
push
cwtl
inc
xchg
out
sbb
xor
inc
push
mov
mov
imul
out
stc
or
jbe
xchg
dec
adc
mov
pusha
cmp
add
es
ja
xor
sub
push
push
cmp
enter
ret
mov
int3
adc
lods
xor
cmp
cmp
std
sbb
dec
cmpsb
ja
and
mov
mov
hlt
sbb
test
es
stos
dec
add
push
loope
sarl
mov
test
icebp
fbld
fdivrl
cmc
shl
in
mov
and
fsub
dec
push
pushf
movsb
jl
xor
add
cs
test
fstpl
pusha
aam
lods
daa
push
add
mov
push
sbb
insb
xor
push
sbb
sbb
cmp
cmc
std
icebp
dec
fldt
mov
mov
rcrl
aad
cmp
std
sbb
aad
xchg
popa
pop
test
lea
nop
adc
add
mov
loop
shrb
out
int3
repz
icebp
test
and
subl
pushf
sti
cwtl
fcompl
xchg
mov
scas
jo
xlat
add
pop
sbb
sbbl
call
sbb
sub
aas
push
cmpsl
pusha
mov
or
pop
mov
xchg
frstor
daa
call
cs
mov
cwtl
aam
iret
je
jmp
pop
outsb
std
adc
enter
push
das
adcl
clc
xchg
movsb
shlb
divb
vmovsldup
nop
jmp
push
enter
pop
and
dec
and
adc
or
mul
jge
shr
jmp
fsubrs
sbb
dec
and
or
les
jl
inc
lds
in
or
sub
mov
add
jnp
push
shll
roll
jmp
push
xchg
ljmp
shlb
xor
push
inc
add
rolb
fiaddl
or
cwtl
iret
add
mov
mov
inc
fidivrl
pop
or
popf
sbb
subb
pop
fs
cmpsl
mov
lcallw
scas
sbb
push
cmc
push
push
cmp
icebp
sub
push
xor
sub
dec
pop
inc
js
jecxz
pop
mov
outsb
cmp
ljmp
jae
stos
xor
rolb
jbe
inc
cmp
out
sbb
fs
xchg
mov
sti
jg
cmp
jle
outsb
icebp
push
imul
cmp
sbb
movsb
sub
repz
sbb
pop
mov
inc
mov
cmp
mov
jge
test
lahf
add
mov
pop
xor
aas
inc
add
cmp
lret
and
nop
xchg
stos
mov
and
mov
andl
es
sti
data16
jno
fbstp
sub
xchg
bnd
jl
sub
movsb
out
mov
clc
pop
pop
mov
pop
cmp
leave
sub
add
and
sub
xlat
sahf
iret
push
addr16
loopne
adc
andb
and
cld
andl
mov
scas
divl
inc
xor
jecxz
mov
dec
xchg
repnz
or
jmp
and
ret
fbld
adcb
or
mov
jno
aas
dec
cmc
cmc
dec
stc
nop
push
sub
je
inc
popf
inc
pop
mov
push
bound
lahf
das
mov
fdivs
xchg
fidivl
sub
cmp
cli
sbb
xchg
ja
movsb
lret
test
pop
jge
dec
sub
sub
inc
loopne
addl
adc
jmp
cmc
lret
xor
add
cs
dec
push
sbb
ret
out
jecxz
lcall
pop
sbb
mov
or
mov
pop
cmp
bound
push
xor
lods
out
cli
xchg
mov
xor
insb
pusha
mov
lahf
dec
adc
inc
adc
cmp
and
dec
loope
pop
push
mov
push
mov
aam
ret
enter
sbb
push
jae
xchg
lahf
pusha
inc
mov
sbb
lcall
cmpsl
adc
dec
push
mulb
ret
and
xor
in
rcr
sbb
jecxz
and
incl
and
or
imulb
and
or
fs
stos
and
pop
insb
adc
xchg
cmp
lock
mov
dec
in
repz
sub
and
ret
fdivrs
lods
clc
jmp
sub
cmpsb
loopne
inc
cwtl
or
shl
xchg
fcmovnb
lret
mov
xchg
lods
aas
xchg
pop
rorb
jno
xchg
xor
pop
mov
dec
insl
pop
xchg
iret
repz
xchg
inc
push
scas
mov
mov
es
inc
mov
fdivrl
xor
dec
les
pop
pushf
adc
cmp
mov
in
out
clc
pop
lcall
sbb
dec
decl
adc
dec
and
lock
cmp
loopne
xor
pop
and
xchg
fdivl
les
out
movsl
and
cli
pop
jge
lret
mov
icebp
xchg
xchg
arpl
gs
dec
out
sahf
xor
shlb
jmp
lods
push
aad
int
filds
inc
ficomps
sbb
or
pop
push
add
fstps
inc
cmp
pop
push
shlb
icebp
push
leave
fdivrl
mov
das
sub
cltd
dec
cld
jb
jg
cmp
mov
int
sub
lea
cwtl
shll
cmp
cmpsb
les
mov
mov
in
inc
jno
shlb
sub
cmpsl
repz
ja
incl
dec
rolb
and
jl
std
cmp
inc
sub
jmp
loopne
cmp
in
popa
xor
arpl
mov
js
pop
dec
adcb
xor
sub
sarb
ds
cmp
fisttpl
sbbb
push
jns
dec
push
test
fwait
mov
lret
or
ror
je
lahf
lds
mov
cwtl
loop
aad
mov
les
mov
sahf
fwait
push
mov
loope
rcrl
lahf
mov
add
sub
fdivs
sub
inc
add
out
repz
pop
mov
xchg
cmp
aad
add
add
jmp
xchg
pop
in
mov
std
mov
stos
adc
adc
sbb
mov
adc
xchg
sbbl
es
cmpl
adc
sub
in
in
out
adcl
and
jge
cmp
lea
xor
pop
sbb
fildl
leave
lods
inc
fbld
stos
pop
dec
gs
test
mov
inc
outsl
xchg
jecxz
mov
movsl
mov
cmp
add
and
mov
popa
enter
aam
and
int3
xor
clc
repz
mov
lds
outsb
imul
das
jp
out
rcrb
pop
movsl
push
sbb
dec
xchg
es
adc
jle
xchg
jp
stos
cwtl
adc
ja
mov
aam
fisttps
and
xchg
in
mul
hlt
jmp
cltd
cmp
sbb
xor
test
sbb
shrd
jge
mov
pop
in
cmpb
xchg
pop
ss
data16
insb
sahf
add
je
pusha
inc
insb
call
sub
sbbb
js
mov
mov
dec
insb
test
push
adc
ret
pop
pushf
or
test
enter
xchg
push
inc
fs
inc
push
mov
mov
ret
inc
insl
outsb
out
incb
fldenv
in
je
loopne
ds
dec
sub
or
xor
data16
out
mov
jg
rol
pop
cld
cltd
push
mov
out
popa
mov
cltd
and
js
mov
and
test
mov
fsub
xor
dec
stc
fidivs
or
movsl
mov
dec
fbld
iret
cmp
cltd
cmp
fcomi
adc
and
adc
pop
dec
fidivrl
xchg
add
aaa
test
into
sub
inc
jg
adc
jns
daa
pop
pop
mov
popf
scas
and
adcl
das
jmp
pop
in
xchg
dec
inc
icebp
pop
rcrl
sarl
xor
sbb
fadd
push
loope
xor
rclb
mov
test
pop
mov
rcl
push
or
mov
and
jmp
xlat
mov
jbe
test
ret
jmp
cmp
in
fstpt
pop
mov
pop
adc
pop
push
xor
mov
jnp
cmpl
xor
mov
mov
xor
push
lahf
fsubl
dec
testb
jecxz
mov
xor
jb
sub
mov
idivb
push
arpl
es
cmp
xor
mov
add
cmp
or
enter
sbb
jno
jg
mov
mov
sbbl
sbb
cmp
js
and
clc
inc
cmp
jle
mov
push
mov
adc
shll
push
pop
xor
add
nop
dec
psllq
rcrb
push
ds
faddp
js
jne
pop
inc
inc
ljmp
mov
lcall
jo
testb
mov
jge
cmp
jmp
add
push
fsubl
nop
neg
iret
inc
je
jg
adc
insb
mov
aaa
sub
mov
ret
jl
pop
push
insb
xor
xchg
push
lock
shr
shrl
sar
jmp
add
push
push
movd
push
addr16
push
xor
mov
out
das
add
fs
add
sti
adc
loope
push
xchg
cmp
in
adc
push
cmp
ret
insb
mov
movsl
and
fidivs
pop
and
outsl
fldenv
cld
or
push
insl
jne
mov
nop
push
and
jne
cmpsb
out
adc
jae
and
or
xchg
push
add
cmp
loop
std
xor
sahf
gs
adc
clc
aas
jb
ja
mov
mov
push
aam
mov
mov
rcrb
daa
push
pop
incb
cmp
jae
roll
shlb
ss
cmp
pop
pusha
inc
in
xchg
add
imul
aam
mov
repnz
aas
inc
addb
jp
fdivrs
jmp
cmc
sbb
pop
pop
lds
test
adc
popa
enter
dec
push
stos
sbb
push
inc
out
int
sub
cmpsb
xchg
mov
jecxz
mov
mov
jne
xor
adc
pop
xchg
test
mov
fsub
adc
lea
enter
push
enter
enter
adc
jmp
sarl
pop
and
les
rorl
jne
pushf
jl
lods
add
mov
rorb
pop
cmp
jmp
sub
push
pusha
jge
xor
mov
addb
out
mul
fdivrs
xor
or
or
jg
mov
xlat
pop
cmp
clc
mov
and
icebp
jge
cltd
repnz
inc
int
icebp
fldcw
jp
jns
xor
jl
in
mov
je
test
aaa
dec
lret
out
mov
pushf
ljmp
test
jge
jg
mov
enter
loop
mov
mov
push
in
mov
lds
or
inc
imul
or
ds
lret
mov
std
and
fwait
loopne
lock
std
jp
mov
push
fwait
sub
sbb
incl
in
jno
cmpsl
ret
jmp
pop
pop
fwait
jno
fsubs
repz
ror
je
push
lcall
stos
aas
xchg
ret
add
mov
or
pop
loop
int
xor
in
adc
shlb
jle
pop
xor
or
or
mov
dec
lcall
cmpsb
push
and
dec
mov
int
inc
sbb
repnz
lods
mov
call
sbb
adc
jno
mov
imul
ss
mov
out
pop
cmpsb
test
cmp
shrl
and
sbb
inc
rcr
data16
inc
and
mov
int3
ds
pop
nop
fistl
clc
cmp
jb
ja
jns
inc
out
push
adc
inc
test
repz
mul
inc
mov
hlt
mov
ret
shll
int
insl
movsb
mov
stc
jp
jl
sbb
xor
in
int
dec
lods
jp
push
or
int3
cmc
adc
cmp
or
fcoml
jb
lods
xchg
push
mov
je
aam
mov
add
add
pop
fwait
sbb
jmp
lret
jmp
push
cmpsb
lea
daa
xor
mov
cmp
xor
sti
adc
aad
add
xchg
fwait
lea
decb
adc
jb
push
fadds
ljmp
adc
insl
dec
les
and
movsl
push
jg
es
arpl
addr16
cld
push
sbb
vandnpd
sub
mov
in
ret
push
jecxz
dec
leave
fistl
xlat
movsl
inc
ret
aam
ds
enter
sbb
insb
outsb
mov
mov
icebp
cmp
popa
test
inc
mov
in
test
xchg
push
cltd
mov
push
cmpsb
aaa
inc
testl
cmp
movsb
cmp
mov
test
inc
jne
inc
dec
mov
inc
in
arpl
mov
push
ss
xor
and
inc
or
dec
dec
sti
repz
andl
arpl
sbb
mov
decb
outsl
cmpsl
inc
push
enter
imul
lcall
push
ret
inc
scas
pop
sub
push
mov
sub
cmp
lds
push
bound
sahf
mov
lea
and
adc
cmp
ljmp
lods
inc
subb
enter
aam
subl
imul
test
lahf
subl
insb
adc
mov
lea
fildll
arpl
and
mov
pop
pop
repz
daa
cwtl
dec
lahf
test
ret
outsb
sarl
and
int3
sbb
dec
loope
xchg
repz
sarl
pop
cmc
adc
and
xor
lods
or
sbb
rcl
fs
popf
popf
push
ss
stos
out
or
outsl
in
or
mov
ret
inc
test
cli
pusha
push
jl
adc
lahf
ret
cmp
jle
mov
pop
loopne
or
mov
lret
inc
into
ficoms
loop
or
aad
cltd
mov
stc
pop
gs
fwait
jmp
pop
rcr
movsl
jecxz
xor
lret
cmp
stos
in
xchg
cli
mov
sbb
sub
dec
push
xlat
loope
nop
lret
mov
aad
xchg
test
shl
mov
insb
cmp
adc
les
and
xchg
aam
out
adc
data16
jo
push
lods
push
mov
cmp
lods
cmp
movsl
mov
movsl
pop
cmp
inc
push
xor
or
orl
pop
jmp
mov
add
hlt
mov
fidivl
sbb
xor
cmpsl
jmp
xor
cmp
repz
out
aad
ret
sarl
lret
aam
adc
sbb
jae
and
int
push
mov
push
in
xor
js
xchg
cmp
nop
imul
adc
in
stos
clc
dec
jle
inc
adcl
cmp
cli
fwait
mov
pop
mov
imull
fstps
in
aad
out
outsl
xor
cwtl
jb
fadd
mov
xchg
and
jo
jmp
cmp
or
and
add
sahf
nop
fistps
jne
cmpsl
push
xor
pop
add
out
dec
in
push
jp
dec
imul
lods
and
subb
cli
xchg
mov
sub
fwait
push
xor
push
into
mov
bound
push
inc
mov
cmp
push
sahf
dec
sub
xchg
push
inc
loop
mov
mov
mov
jbe
fcomi
int3
push
and
in
cmc
adc
and
push
into
cwtl
out
sbb
test
mov
notb
aad
mov
inc
sbb
dec
push
mov
and
and
pushf
test
xor
pop
xor
sbb
jno
xchg
or
mov
dec
fidivrl
outsb
add
sbb
dec
ljmp
lods
add
enter
shll
je
lret
push
pop
mov
mov
frstor
mov
in
xchg
push
lds
lret
jge
and
fstl
test
or
adc
adc
mov
ss
in
stos
aas
sbb
sbb
stc
sub
repz
out
sub
in
add
dec
jmp
std
sbb
and
and
mov
sti
cli
xor
ret
ljmp
lahf
shrl
or
popf
sbb
jnp
mov
pop
imul
xchg
scas
je
mov
je
jb
mov
mov
inc
sahf
xor
imul
mov
xchg
sbb
jmp
je
mov
mov
cmp
mov
nop
jnp
mov
jb
cmpsb
mov
push
jg
mov
adc
jmp
leave
in
add
mov
adc
ds
xchg
psubusb
add
out
bound
popa
movsb
add
insl
inc
sahf
push
pop
lods
js
cmpl
fiadds
sub
push
in
dec
dec
cmp
mov
or
pop
je
dec
repnz
cmp
stc
or
rcrb
cmp
inc
push
mov
mov
les
xor
mov
mov
jge
repnz
scas
or
jg
mov
xchg
and
es
icebp
cmp
or
shll
pop
lods
xlat
adcb
popa
cmp
rcrb
cmp
cmp
mov
repz
dec
mov
xchg
jo
mov
cmp
xchg
notl
jnp
dec
lds
pop
add
test
sahf
ret
cmp
mov
xor
cmp
cltd
jmp
mov
and
mov
add
xchg
dec
dec
imul
and
mov
and
iret
inc
ja
fucom
mov
enter
fcmovu
scas
jbe
jg
mov
insb
pop
clc
add
jle
aas
xlat
test
sbb
cmc
mov
pop
mov
sti
das
frstor
cmp
out
adc
lret
dec
mov
sub
push
in
sbb
shll
push
mov
ss
and
loopne
lds
push
in
push
imull
jae
push
scas
fcompl
and
test
movsb
and
xor
test
aas
cmp
stos
hlt
and
call
lret
mov
add
in
addr16
push
or
iret
frstor
lcall
pop
cmp
and
inc
adcb
cs
cmpsl
das
mov
outsl
mov
push
inc
loop
cmc
mov
repnz
outsl
add
mov
add
je
ss
pop
push
jmp
jmp
pop
gs
pop
gs
aas
stos
mov
xchg
jecxz
lock
mov
fistpll
mov
mov
cs
xor
jae
sub
jmp
popf
sub
fldl
pop
mov
and
push
sub
sbb
push
mov
mov
pop
xchg
mov
mov
ja
sti
adc
das
int
cltd
in
cmp
push
dec
fistps
syscall
add
mov
dec
mov
cmp
jnp
dec
or
jne
inc
jo
sub
xor
xchg
or
loop
clc
push
mov
fsts
cmp
daa
xlat
fs
pop
out
mov
add
xchg
mov
adc
cmp
mov
jo
xchg
xchg
sbb
lods
cmp
in
cmpb
sbb
repnz
mov
adc
cmpsb
push
mov
xor
push
pusha
test
dec
test
dec
stos
xchg
pushf
jp
cli
xor
push
sbb
add
and
mov
sbb
push
in
negb
cli
dec
cmp
cmp
mov
faddl
aam
popw
xchg
xchg
mov
cld
in
lock
mov
mov
int3
test
pop
les
adc
jge
and
aas
mov
mov
pop
adc
xlat
xchg
inc
pop
imul
or
outsb
cltd
pop
pop
sub
xlat
jle
cmpsb
push
int3
popf
int3
mov
pop
nop
sbb
fisubl
jl
mov
xlat
pop
xchg
jg
negb
cs
jns
repz
pop
push
rcrl
enter
lcall
std
add
shlb
mov
pop
sbb
mov
xor
jle
jg
mov
xor
mov
push
and
enter
loopne
sbb
mov
inc
cltd
xor
pop
sub
inc
sub
out
xor
mov
into
cmp
and
rorb
scas
lock
out
cmpb
mov
push
lretw
push
jle
arpl
mov
enter
repz
jb
movsb
dec
inc
fwait
push
sub
enter
out
xor
fnstcw
cld
push
out
cmp
sarb
pop
jecxz
jns
mov
fucomip
or
jne
push
jbe
mov
lahf
rolb
mov
and
scas
inc
mov
jl
push
movsl
mov
jae
pop
adc
test
testb
int3
fiadds
test
pop
or
pop
mov
push
les
in
xor
dec
dec
pop
cmp
mov
addl
sbb
in
mov
push
inc
scas
cmpsl
test
sti
xchg
lds
pop
ds
lods
pop
push
icebp
push
lods
jnp
mov
fcoml
push
sub
cmc
pop
pop
test
sub
fisttpll
sbbb
pusha
cs
push
lret
and
push
sbb
cmpsl
out
fnstsw
jb
aam
scas
les
xchg
outsb
jge
aad
stc
pop
jo
hlt
das
mov
divl
dec
ljmp
mov
je
js
movl
movsb
mov
call
loope
inc
loopne
mov
sahf
pop
dec
sbb
jge
fisttps
cli
pushf
add
push
ficompl
xchg
pop
cld
addl
mov
dec
mov
push
jmp
cmp
pop
push
sarb
aas
pushf
in
sub
push
mov
mov
mov
xor
mov
sub
xor
fwait
outsl
test
dec
inc
dec
adc
out
insb
stos
or
hlt
movsl
ret
mov
add
fisubs
sbb
pop
cli
sub
dec
add
lret
stos
pop
popa
sbb
cmp
xor
dec
inc
fs
gs
outsb
ret
sbb
pop
lock
sbb
cmpsb
adc
std
fbld
or
ds
pop
push
mov
insl
out
xchg
cmc
imul
das
rcll
xchg
aam
bsf
dec
mov
push
jmp
lods
or
and
push
mov
decl
cs
cmp
leave
pop
clc
cmp
xor
hlt
movsb
adcl
idivb
ss
pop
test
mov
pop
fidivrl
adc
jns
cltd
cwtl
out
sbbb
data16
cmp
or
jg
and
int
sub
pop
and
mov
sarb
nop
and
mov
int3
jmp
jle
adc
or
subl
add
loop
test
hlt
lods
loopne
jg
mov
loope
cs
cmp
push
jns
cmpl
enter
pop
fimull
imul
cmc
outsl
cmp
cwtl
das
sbb
mov
int3
and
ret
aas
cmpsb
mov
pop
andl
xchg
mov
aaa
push
addb
jl
cmpsb
dec
push
add
outsb
xchg
in
out
imulb
incl
mov
faddl
data16
push
bound
cmp
cmpsb
mov
hlt
sub
aaa
xchg
pop
repz
or
xchg
and
stos
ljmp
jne
aam
addb
insl
dec
mov
popf
dec
cld
fildl
rcrl
inc
jecxz
sub
fwait
inc
testb
aad
jmp
ffree
push
fcomps
pop
lcall
dec
fwait
and
xchg
xor
push
pop
and
lret
add
out
xor
push
xchg
xlat
ss
mov
lods
aam
mov
cli
mov
sti
and
cs
dec
repz
adc
ficomps
pusha
enter
sbb
and
jg
rolb
and
pop
cmp
mov
jmp
pop
lret
jb
sub
sub
xorb
xor
adc
ret
push
mov
cmc
data16
ljmp
nop
sub
out
pop
fistps
fwait
in
xor
push
sbb
scas
js
inc
hlt
adc
rcll
dec
lahf
mov
bound
es
out
int3
or
lock
dec
and
test
jmp
sub
and
add
mov
xchg
xchg
ret
mov
push
mov
xchg
fildl
adc
adc
jmp
nop
sub
in
sub
or
outsb
or
movsb
imul
or
jae
call
mov
pop
andb
fmull
push
cmp
sbb
ss
xor
icebp
jbe
outsl
sub
gs
cmp
mov
inc
sub
lock
std
xorl
jl
pop
add
js
scas
mov
xor
xchg
mov
daa
or
jbe
lods
push
mov
mov
xor
mov
jl
dec
rol
aam
mov
stos
lds
adc
add
or
cmp
jge
scas
push
cmp
dec
iret
pusha
jmp
stos
jg
sti
sub
pop
addr16
arpl
or
jbe
adc
aaa
sbb
in
jo
mov
xchg
push
mov
dec
dec
clc
hlt
push
addr16
mov
cmp
lods
loop
setbe
sbb
cmp
sbb
dec
push
out
fucomi
mov
push
iret
or
dec
mov
cmpsl
idivb
mov
enter
leave
pusha
push
mov
cltd
sahf
mov
cmc
js
inc
das
aam
mov
mov
negl
push
shlb
test
imul
rcrl
subb
out
movb
add
notl
add
push
addr16
cmp
ret
mov
or
enter
cmp
add
push
js,pn
jecxz
push
mov
icebp
pop
in
lods
sbb
das
outsb
clc
mov
mov
xchg
out
out
add
xor
sub
rcl
mov
sbb
mov
xor
movsl
aas
rcrl
push
and
data16
ret
adc
or
int3
push
lds
push
outsb
rcl
leave
push
mov
mov
sub
aam
mov
add
pop
aaa
sti
sbb
inc
or
adc
lcall
sbb
out
pop
icebp
add
dec
dec
shrl
jnp
dec
mov
daa
mov
sub
aad
outsb
inc
jmp
mov
and
dec
fidivl
ss
fwait
in
outsb
clc
fadd
or
xchg
mov
xor
es
test
imul
daa
in
cs
xchg
push
jge
fimull
mov
mov
movq
shr
xchg
mov
sub
mov
inc
cmpsl
shr
jbe
outsb
adc
in
je
test
lcall
hlt
lcall
push
pushf
cmp
add
data16
leave
dec
aas
sub
je
jmp
pop
jl
pop
pop
xor
rcrb
and
fcompl
movsl
iret
push
mov
loope
inc
push
mov
sbb
xor
cmc
cmp
and
push
cmp
out
push
mov
mov
sub
sbb
sti
mov
inc
adc
inc
hlt
jecxz
lods
and
sub
sbb
ret
sub
cmp
stc
insb
jl
jmp
data16
xlat
mov
fldl
movsb
aad
imul
or
inc
dec
call
jmp
xchg
orb
jmp
dec
ffree
lea
enter
mov
jo
es
xor
mov
xchg
insb
loop
lock
push
pop
dec
add
es
adc
aas
dec
and
mov
dec
xchg
ficomps
hlt
fwait
mov
sbb
jno
fcoml
mov
xchg
or
inc
stc
lahf
add
rorb
dec
ds
filds
outsl
sbb
int
or
or
sahf
fldcw
test
inc
insb
cmp
xor
pushf
jecxz
push
and
push
adcl
out
inc
call
or
lods
data16
arpl
push
daa
adc
scas
xchg
dec
mov
in
mov
sub
leave
addr16
inc
add
mov
cmpsb
movsb
xchg
cmpsb
xchg
loopne
inc
push
push
cmp
in
xor
imul
repz
mov
shl
lock
pop
imul
mov
sbb
lcall
jae
sbb
pop
pop
lea
xchg
or
inc
lahf
fmull
jmp
and
shl
jns
mov
ss
xchg
lahf
stos
sub
stos
dec
jl
cmp
out
shll
test
mov
les
movsl
in
lods
call
jg
sbb
push
es
pop
ds
repnz
adcb
add
add
or
or
and
mov
jg
test
sbb
jle
pop
rorl
xchg
movsb
bound
es
pushf
xchg
jns
int3
add
mov
jle
mov
push
xor
inc
xchg
mov
stc
call
hlt
dec
cmc
ret
xchg
loopne
lock
bnd
pop
repz
out
inc
pop
or
xlat
lcall
xor
mov
and
mov
adc
outsl
mov
inc
push
out
mov
pop
jp
sbb
mov
xor
mov
out
mov
call
cmp
lods
imul
jmp
and
adc
mov
pusha
aas
mov
cli
xchg
mov
roll
cwtl
aad
incb
sub
outsl
cmp
iret
pop
add
fdiv
arpl
sbb
mov
ljmp
mov
push
add
inc
xchg
out
mov
fbld
rorb
ja
mov
adc
sub
test
mov
pop
repnz
loop
add
loop
xlat
inc
push
sbb
pop
adc
orl
mov
mov
or
mov
xor
in
push
lods
out
stos
popa
xchg
xchg
jge
mov
adc
and
repnz
lea
cmp
lea
adc
mov
fs
hlt
mov
lret
mov
in
insb
xor
and
mov
int
loop
rorb
push
shlb
mov
stos
fcom
pop
sub
cmpl
cmpsl
or
inc
xchg
fdivl
int
xchg
mov
icebp
mov
xor
repnz
out
jmp
mov
push
jo
lods
cld
stc
and
ljmp
and
icebp
dec
mov
test
fs
outsl
and
push
sahf
add
mov
out
xor
sti
adc
repz
repnz
fldenv
inc
push
push
adc
outsb
push
xchg
inc
mov
inc
std
push
mov
lds
sbb
fistl
shll
je
fdivrl
in
dec
add
push
jnp
cld
jne
bound
mov
mov
sahf
mov
mov
jnp
mov
and
dec
in
mov
pop
stos
lods
stos
insb
inc
pop
in
fsubl
pop
jg
das
xor
movsl
in
add
adc
inc
sbb
push
mov
loop
jne
lock
cli
popa
out
push
das
mov
outsb
mov
jmp
or
adc
fwait
adc
pop
dec
imul
loope
fiadds
push
loopne
cmp
mov
sbb
pop
dec
sti
inc
lret
fsubp
jae
sub
pop
push
popa
mov
push
sub
outsl
xor
jmp
mov
gs
jno
outsb
fldenv
movsl
ret
test
mov
fwait
data16
push
jmp
insb
adc
rcll
pop
jns
js
xchg
scas
test
maskmovq
jmp
in
inc
lods
add
pop
repnz
jae
jns
bswap
mov
into
dec
and
mov
rolb
add
fimull
xchg
repz
mov
jge
jnp
add
insl
popa
inc
inc
movsb
pop
pop
lret
adc
inc
lcall
in
dec
ret
sub
les
test
imul
addb
popa
sti
cmpb
lcall
sbb
adc
ds
xchg
loopne
xchg
adc
test
test
loope
and
xchg
aaa
cltd
stos
push
sbb
insl
and
cmp
inc
mov
adc
jmp
pushf
mov
jecxz
mov
test
pop
sbb
ffree
lret
add
pop
inc
fsubl
lcall
lcall
fistps
int3
mov
inc
pop
add
mov
imul
out
cli
push
or
mov
jle
das
adc
and
and
fidivrs
test
dec
dec
int
lock
push
in
and
adc
xchg
sbb
xchg
dec
xlat
mov
xchg
popa
mov
mov
ds
movsl
sbb
outsl
push
push
pop
adc
lahf
mov
loop
inc
jl
push
add
subl
mov
cmp
cmp
mov
adc
jns
imul
hlt
test
stc
rcr
add
cmovno
insb
in
jecxz
cmpsb
dec
push
rcrb
add
pcmpgtb
ror
jb
test
xchg
stc
mov
scas
fwait
adc
jle
shlb
sub
push
sub
push
pop
mov
pusha
xchg
add
sbb
and
addl
push
sbb
aaa
push
lock
stos
jo
rcrl
cmp
jne
loopne
xor
cltd
dec
orb
repnz
int
jb
lods
sbbl
sbb
cmp
pop
in
mov
xlat
je
dec
mov
push
popf
es
lods
cmpsl
test
pop
das
pop
jp
inc
sbb
lahf
lahf
lods
sub
inc
sub
pop
imul
in
scas
jle
jo
daa
sti
adc
dec
add
hlt
lcall
push
lret
pusha
sub
lds
orl
xchg
dec
stos
and
push
pop
add
int
mov
cltd
xchg
test
jl
and
jbe
les
lcall
sbb
sarl
fcomps
scas
xchg
js
mov
mov
dec
inc
js
std
cwtl
leave
jmp
cmp
cmp
hlt
out
lds
mov
push
das
xchg
nop
cmpsl
xor
shrb
ret
aad
fldenv
int3
xchg
adc
xchg
scas
nop
pop
enter
xchg
bound
xchg
fisubrs
lds
cmp
es
loop
popf
jns
cmpsb
add
add
jo
btc
and
mov
aam
cmp
js
pop
loope
out
dec
sbb
mov
add
cmp
movsb
push
push
xor
adc
int
mov
sbb
cmc
cli
mov
call
shlb
mov
fidivrl
jle
cmp
data16
ljmp
stos
pop
out
jle
cmp
mov
mov
add
sub
sahf
lret
test
imul
cmpsb
adc
xor
test
pop
inc
sub
out
xor
cmp
mov
jb
push
pop
mov
loop
movsb
jle
xor
cmpsl
or
imul
fdivrp
pop
mov
inc
adc
andb
sub
sbb
inc
and
sti
and
cmp
push
add
dec
scas
bswap
inc
je
aaa
imul
inc
pop
rol
sbb
cmp
subb
sahf
cmp
ret
push
and
clc
cmp
xor
mov
es
addr16
sbb
or
dec
pop
in
and
stc
sbb
les
inc
loope
sub
sub
mov
sub
jne
cmc
mov
xlat
xchg
sbb
xchg
sub
jno
or
cmp
lea
fdiv
hlt
push
pop
adc
or
push
cmpsl
ds
popa
inc
add
bound
loope
jb
jl
into
and
je
pop
fldcw
sbb
hlt
push
lret
or
pusha
stos
aam
das
cmpsb
out
mov
mov
js
shll
mull
into
xlat
inc
xchg
lcall
push
jmp
popf
test
sbb
lods
mov
dec
pusha
lret
jge
pop
mov
jle
mov
cmpsb
aaa
cmc
jmp
inc
pop
xchg
or
sbb
in
push
jl
subb
out
jge
fsubrl
cmova
fsubrp
add
frstor
mov
xor
jle
jno
push
lods
dec
out
mov
sub
add
loopne
loop
sti
jmp
push
stos
das
in
pop
nop
fdivs
adc
cmp
repz
scas
fistps
fs
sub
mov
daa
rcl
mov
and
mov
mov
into
mov
jecxz
adc
sub
scas
xchg
sbb
cmc
adc
addr16
mov
shll
imul
pop
cli
inc
daa
cmp
stos
sbb
mov
cmpsb
pop
cwtl
addl
push
sub
adc
loopne
jb
push
sub
mov
ret
ds
jo
insl
and
in
or
or
dec
dec
and
push
mov
pusha
mov
cwtl
movsb
cmp
gs
test
pop
scas
jmp
lods
jge
inc
mov
popa
sub
push
dec
adc
in
ds
mov
leave
pop
sub
pop
out
rorb
adc
in
cmpsb
mov
cmpsb
xchg
or
shr
js
cmp
daa
rcll
inc
movsb
test
xchg
cwtl
leave
adc
mov
adc
sub
add
jb
inc
rep
push
iret
in
data16
leave
cmpsb
scas
divb
stc
mov
push
addr16
dec
push
push
outsl
jmp
andl
in
dec
jns
push
int
daa
jo
inc
les
adc
fcompl
mov
mov
insl
pop
sub
repz
stos
mov
pop
cwtl
into
add
daa
repz
inc
inc
pop
mov
or
dec
arpl
add
cmp
call
fcompl
fisttpll
cld
and
gs
inc
out
and
repnz
pop
inc
add
mov
push
jmp
add
xor
ljmp
push
mov
mov
jle
mov
sbb
add
or
jo
int
mov
popf
add
mov
scas
call
das
dec
or
xorb
mov
sub
mov
xchg
imul
rcl
pop
gs
inc
leave
cmpsl
or
dec
sub
shlb
roll
dec
pop
ljmp
nop
das
lcall
push
xlat
pop
xchg
outsb
dec
ds
insl
fcmove
sbb
push
out
in
dec
cmp
lods
mov
mov
int3
les
movsl
sbb
in
xchg
and
jp
cltd
xchg
fisubl
fs
mov
jmp
mov
sbb
movsb
and
outsb
dec
pop
ds
dec
std
rorb
xor
sbb
pop
mov
adc
pop
sub
xchg
lret
outsb
int3
mov
in
jnp
aam
and
stos
or
cli
std
les
push
out
add
lcall
sbb
or
sti
fdivrl
or
test
and
leave
inc
imull
xchg
fdivrl
shr
decl
imul
pop
loop
sahf
jbe
mov
cwtl
push
cs
push
sbb
dec
xor
add
test
xchg
inc
sar
pushf
push
in
gs
in
xchg
add
cs
push
jns
shrl
adc
and
push
ret
mov
ds
outsl
pop
movsb
adc
out
bound
jnp
bound
sub
xchg
int
mov
clc
adc
inc
sbb
mov
stos
push
test
cld
cs
push
subb
data16
xchg
pop
in
mov
xor
sbb
cmp
jns
sti
push
pop
test
arpl
lock
fidivrs
hlt
std
inc
dec
sub
mov
push
pusha
stc
push
mov
rclb
mov
jp
xchg
xlat
out
inc
push
push
outsb
xchg
or
arpl
and
bsf
out
add
iret
mulb
icebp
hlt
test
pop
mov
and
cmp
test
mov
pop
insb
fimuls
shlb
xor
xor
push
out
lahf
stos
pop
dec
scas
dec
out
idivb
adc
loop
sub
mov
xchg
xchg
xchg
data16
outsb
lds
cmp
jno
iret
or
ret
mov
iret
push
pop
push
xchg
inc
rcr
shlb
sbb
cltd
cld
push
and
leave
idivl
mov
loope
ror
dec
iret
push
mov
lea
leave
push
test
xor
xor
das
call
mov
mov
lea
mov
or
loopne
sub
out
mov
sub
rorb
enter
or
sbb
fnstsw
cmp
and
push
and
mov
cmpsl
scas
outsb
and
and
sub
popa
mov
mov
add
jns
jns
dec
sub
cmpsl
xchg
std
cmpsb
hlt
jmp
leave
in
test
or
aam
mov
insl
push
fwait
and
xor
cltd
dec
test
repnz
fisubs
inc
push
cmp
jne
imulb
cmp
sub
pop
xor
in
enter
pushf
movsb
bound
jae
mull
pop
neg
sub
mov
loopne
mov
divb
fcoms
outsb
ret
test
sahf
sbb
cmc
dec
sub
lret
push
dec
sbb
arpl
fdivs
push
pop
pushf
xor
add
scas
pop
add
sbb
aas
pop
imul
cmp
andb
or
aaa
xchg
cmp
rcrl
cld
cmp
jb
sbb
mov
sarl
mov
mov
test
dec
inc
mov
rcll
enter
adc
int3
test
push
popf
inc
dec
jle
and
push
adc
ds
movsl
or
sub
fdivr
insl
dec
mov
inc
sub
sub
add
add
lods
lods
jge
xchg
mov
mov
cwtl
push
push
mull
in
pop
cmp
dec
clc
xor
jbe
mov
xchg
out
aaa
sbb
loop
push
jecxz
daa
or
lcall
outsb
inc
cmpsb
mov
ficoml
lahf
loop
xor
or
lds
dec
jns
xor
adc
daa
push
push
ja
pusha
xchg
data16
adc
push
mov
sahf
jg
hlt
in
jb
sti
pop
mov
loope
xchg
pop
mov
aas
cmp
incl
cmp
pop
or
test
scas
les
in
in
popf
test
addl
into
fwait
mov
xchg
call
sub
rcrl
loop
mov
sbb
dec
fiaddl
stc
mov
or
xor
mov
adc
xchg
mov
sahf
jnp
rclb
ret
xor
dec
iret
jmp
mov
jno
scas
push
adc
fsts
add
les
pop
inc
popa
sub
loop
mov
dec
xchg
ja
mov
push
mov
nop
and
jle
aad
mov
mov
jne
mov
mov
fcom
repnz
fistl
dec
cltd
fwait
dec
aam
xchg
popf
daa
in
cmp
and
dec
in
dec
dec
cmp
outsl
jo
shlw
add
js
mov
xchg
ds
shrl
stos
fnstenv
lods
push
pop
sub
xor
sub
adc
xchg
stos
lods
daa
xor
and
inc
out
subb
sti
incl
sbb
sbb
sbb
idivl
xchg
push
mov
sbb
cmp
loop
cmp
bound
and
les
loop
jnp
ret
and
dec
cltd
mov
jb
lock
sti
and
test
and
fs
mov
jmp
fcmovu
fwait
pushf
mov
mov
xorb
fwait
mov
jecxz
mov
cld
call
in
in
mov
adc
movsb
and
imul
stc
sti
push
sar
test
push
scas
or
pop
pop
out
adc
dec
pop
pusha
mov
xor
in
fidivs
mov
mov
adc
xchg
and
add
lods
into
pop
les
jg
jnp
test
or
sub
or
or
adc
push
jns
lahf
cltd
stos
xor
dec
cmp
mov
adc
arpl
rcr
test
xor
dec
xor
or
cmpsb
and
xchg
mov
push
xor
jl
sbb
mov
xor
in
ret
cwtl
or
arpl
dec
add
jne
pop
sbb
pop
dec
int
xor
cmp
ds
rorl
insl
xorb
sub
dec
sub
jle
lcall
addr16
add
lea
xchg
inc
js
push
xchg
fcmove
orl
cltd
jno
mov
nop
and
inc
xchg
loope
xor
cmpl
and
jnp
xchg
ja
cmc
mov
pop
adc
mov
cmpsl
dec
in
jg
imul
icebp
mov
fidivrl
jmp
mov
xchg
into
out
mov
add
inc
mov
lcall
enter
mov
cli
cmp
inc
xor
fldl
mov
aas
inc
inc
stc
cld
jo
test
lret
sbb
xor
xorl
mov
iret
in
sub
lahf
mov
push
adc
and
sbb
adc
icebp
xor
fidivs
inc
push
dec
mov
cwtl
hlt
pop
and
scas
push
jle
in
loop
push
pop
xor
ss
lods
push
pop
aam
scas
ret
jg
add
or
jb
mov
int
xor
jne
xchg
inc
shrb
pop
push
les
decb
add
cmc
add
jl
in
dec
and
xchg
std
adc
jecxz
std
es
dec
mov
fldt
inc
out
dec
or
jbe
bound
jbe
icebp
xchg
xchg
jnp
cmpsl
lods
xor
push
roll
sub
lret
push
in
pop
cmc
adc
dec
jl
stos
adc
jnp
pop
test
push
fldenv
xor
loope
cmp
xchg
mov
push
imul
movsb
fsubp
or
insl
into
xchg
or
imul
and
enter
icebp
ficoml
movsb
jecxz
adcl
std
add
loop
loope
cmp
aad
push
pop
lcall
outsl
sbb
mov
push
lods
xchg
mov
popf
and
jmp
int3
mov
sbb
fisubs
arpl
mov
aad
clc
andb
outsb
jbe
pushf
or
fucomip
mov
mov
rclb
and
jecxz
or
notl
add
sbb
lret
cltd
jg
outsl
pop
outsl
mov
inc
adc
shr
cmpsb
lods
jecxz
movsb
xor
add
jb
fnstsw
data16
stos
mov
loopne
rcl
js
adc
int3
adc
cmp
cmp
ret
xchg
jg
roll
ss
repz
pop
push
aam
xor
add
notb
and
loop
push
stos
jl
lods
inc
lods
pop
push
mov
inc
bound
mov
and
fcoms
xchg
adc
push
sbb
inc
imul
dec
adc
icebp
jae
sub
xor
jbe
test
test
ficomps
push
push
arpl
sub
rcrb
push
adc
std
pusha
loope
outsb
push
jp
loop
call
jnp
aad
and
insb
pop
adc
enter
out
mov
adc
mov
sbb
xor
jo
nop
mov
dec
fsubr
stc
mov
dec
mov
lahf
roll
aas
jnp
jne
bound
call
sub
lcall
jo
xchg
repz
insb
mov
aad
or
push
dec
xchg
pop
push
add
or
ds
popf
adc
push
lock
mov
repz
inc
leave
push
lret
imul
aam
repz
rcrl
adc
xor
lret
mov
adc
add
add
adc
out
cmc
pop
shl
push
aas
ss
cmp
mov
lcall
add
dec
ficompl
fwait
dec
add
clc
inc
lods
in
dec
sub
stos
bound
lods
mov
sub
xchg
invd
inc
sub
mov
js
loop
loopne
cmp
fdivr
or
shlb
and
stos
jp
sub
inc
jmp
repnz
insb
mov
xor
cmp
jp
inc
push
fistpl
nop
mulb
rolb
or
popf
loopne
add
push
gs
testb
push
mov
shlb
push
push
or
mov
out
adc
add
fdivrp
jno
dec
dec
dec
fnstenv
mov
imul
jo
push
add
jns
add
daa
jecxz
pop
addr16
mov
adc
testl
fdivrl
shrb
jns
addr16
adc
or
test
leave
mov
xor
dec
cmp
inc
pop
mov
test
xchg
bound
jp
push
mov
outsl
popf
shrb
js
cmp
mov
std
fcmovnbe
xor
cmpsb
test
testl
int
push
xor
icebp
xlat
sub
dec
pop
xchg
fnstsw
pop
movl
iret
and
jge
sbb
xor
mov
or
sub
fnstsw
sub
xchg
pop
es
pusha
mov
jbe
jp
in
bound
insl
shlb
cmp
push
in
xor
add
popf
out
mov
pop
cwtl
push
ds
xchg
xor
lock
daa
dec
in
xchg
fwait
add
sbb
dec
jg
xchg
pushf
imul
mov
dec
adc
mov
sub
xor
int
mov
test
jbe
adc
cwtl
inc
pushf
sahf
mov
ss
sbb
jecxz
rcrl
mov
jecxz
sub
or
add
int
push
inc
push
mov
lds
xchg
xor
repnz
mov
lods
and
popa
mov
mov
or
or
jno
arpl
out
dec
sub
inc
bound
frstor
jmp
xchg
dec
imull
sbb
push
mov
fcmovne
arpl
int3
mov
in
adc
clc
jns
fs
in
ret
push
cmp
adc
stos
and
pop
ret
or
inc
pop
cmp
insb
mov
ret
dec
les
xchg
push
sub
add
es
xorl
and
pop
mov
xchg
cltd
cld
add
movsl
lcall
xchg
in
stc
fs
pop
mov
jg
addr16
test
sub
push
dec
cmp
vpunpckhqdq
jno
stos
pop
int
mov
int3
pop
lods
xchg
popf
loop
stos
sbb
jge
inc
cmovb
clc
pop
pop
out
sarl
lret
jmp
pop
add
cmpsl
sbb
test
and
lcall
mov
sub
mov
das
daa
lds
ret
mov
fsubl
imul
push
aas
lock
loope
imul
es
adc
push
sub
pop
jae
inc
and
testb
push
faddl
or
sub
jl
xchg
push
movsl
mov
xor
out
lcall
aaa
and
stc
add
loopne
iret
xchg
dec
sti
gs
sub
lods
fimuls
aas
pop
lret
and
sbb
dec
dec
dec
into
outsl
lods
push
mov
xchg
xchg
push
ds
int3
scas
mov
mov
int3
int
js
pusha
inc
fstpl
out
fwait
andnps
clc
clc
add
shlb
xor
add
push
inc
push
inc
push
aad
lods
xchg
std
std
ljmp
xor
cmpsb
sub
mov
mov
xchg
add
insb
push
ljmp
cs
xorb
fcomp
lock
inc
cmovo
inc
xchg
jne
jmp
pop
aas
sahf
xchg
inc
inc
lods
shll
mov
mov
shll
adc
loop
imul
fwait
xchg
ja
xor
inc
test
stos
pop
push
sti
jne
rorl
inc
lods
or
add
stos
sbb
cmpl
incb
loop
popa
sbb
mov
push
out
pop
and
cld
xor
sbb
sbb
es
dec
and
inc
imul
sbb
push
sub
inc
aas
lds
lods
movsb
imul
pushl
rolb
aad
enter
dec
sbb
sub
jl
mov
add
and
cmc
out
pusha
ret
pop
or
xor
push
xor
stos
les
repnz
enter
iret
dec
enter
xor
sahf
inc
sbb
shlb
cs
into
and
fmuls
push
pop
pop
sbb
dec
out
mov
addr16
push
pusha
cmpsb
mov
test
cmp
jmp
rcrb
dec
xchg
push
loope
jo
mov
into
xor
jg
clc
mov
mov
mov
and
call
fisttpll
push
jl
inc
bound
mov
sbb
push
mov
mov
push
xchg
sbb
adc
cwtl
es
dec
test
sub
add
dec
dec
bound
idiv
adc
add
mov
sbb
dec
out
adc
arpl
rorb
fldcw
push
and
cmp
loop
pop
or
mov
ret
call
fidivs
jne
push
jecxz
sbb
addl
mov
or
imul
mov
mov
mov
pop
mov
sub
pop
pop
enter
xchg
push
fucomp
lret
jo
mov
dec
mov
jb
pop
jle
orb
ficoms
fimuls
idivl
aaa
push
inc
sbb
sarl
xor
movsl
enter
inc
cmpb
push
cmp
xchg
into
inc
inc
or
shrb
mov
cmp
repz
aam
xchg
sbb
and
and
and
push
cs
fimull
xor
lret
inc
pop
inc
out
push
jecxz
test
push
orl
insl
inc
fcmovnu
dec
push
adcl
pop
jae
leave
sbb
jp
icebp
adc
push
push
in
push
rorb
cmp
daa
xor
pop
xchg
dec
dec
mov
mov
sbb
bound
ja
cmpsb
subl
jg
iret
mov
cmp
popf
popa
sbbl
sbb
mov
xor
dec
xchg
jge
mov
ret
jns
push
adc
frstor
jno
test
ret
les
shrl
repnz
or
orl
in
stos
push
test
nop
dec
imul
sbb
cmp
enter
mov
test
mov
pop
clc
xor
faddl
inc
mov
xor
rcrl
xlat
mov
fwait
push
inc
loopne
sti
test
dec
jnp
subb
mov
fisubl
test
stc
into
jle
push
sub
push
mov
cmpsb
ss
into
imul
repnz
rol
jo
inc
int
dec
xorl
nop
mov
sub
dec
dec
pop
test
push
cmp
cmpsl
xchg
fcomps
jl
jbe
lret
mov
or
into
lds
flds
xor
adc
jge
inc
jmp
dec
mov
push
jp
cmpsb
lds
inc
pop
ljmp
push
xchg
or
out
lahf
das
jns
xor
lds
jb
mov
or
jne
jmp
loop
jno
stos
aam
push
xchg
int
stos
dec
ret
pop
ljmp
and
dec
pop
push
dec
or
jecxz
inc
pop
test
xlat
adc
test
pushf
xchg
mull
cmp
mov
data16
push
sub
push
clc
inc
pusha
aam
cmp
jg
mov
shrl
dec
sub
orl
movsb
xor
test
or
ds
punpckhwd
mov
push
jnp
push
and
rcrb
orb
int3
clc
pop
mov
ret
xlat
dec
paddsw
push
push
and
dec
pop
or
nopl
mov
addr16
mov
adc
enter
fdiv
sbb
jge
ljmp
inc
pop
icebp
xchg
ds
push
cld
dec
cmp
daa
jae
cmpsb
mov
jb
cmpsb
pop
inc
ja
shrb
hlt
cmpsb
fisubl
jne
push
and
mov
into
dec
sub
cmp
repz
and
inc
push
data16
outsb
imul
add
lock
lcall
dec
push
lea
xchg
dec
and
pop
cmpsl
in
clc
dec
adc
inc
dec
movsb
mov
xor
int
sub
jecxz
push
mov
xchg
sbb
xor
and
lock
pop
push
std
dec
loope
das
cmpsb
jge
divl
imul
in
fldcw
lea
jecxz
mov
ja
push
fldcw
test
fcomp
adc
inc
dec
mov
sbb
jmp
push
fimuls
dec
call
dec
bswap
insb
cwtl
add
cmp
mov
loopne
inc
push
mov
mov
mov
aam
jb
pop
scas
sub
jb
and
cs
mov
jbe
cltd
sar
negb
adc
xor
adc
and
repz
push
or
xchg
inc
enter
push
xchg
cwtl
xlat
mov
push
bound
add
mov
lods
mov
loop
mov
push
andb
mov
aam
add
or
mov
orl
cmpsb
fisttpll
and
mov
in
dec
jnp
mov
pop
std
xchg
notb
pop
lahf
shl
filds
jg
into
mov
mov
icebp
xor
leave
mov
adc
mov
je
and
incb
mov
imul
xor
pushf
and
ret
cmp
imul
and
fstp
xchg
sbb
inc
shr
or
mov
mov
out
xchg
lret
push
mov
or
rcr
cmp
sbb
in
popf
or
xchg
in
inc
xchg
test
pop
mov
sub
xchg
mov
xor
repz
dec
lods
imul
cmp
mov
int3
stc
jge
test
pushf
jge
push
xor
pop
outsl
inc
mov
dec
ret
ss
xor
lahf
test
mov
xchg
fsts
bound
in
or
jb
shll
imul
mov
mov
xchg
adc
adc
ljmp
cmp
fsubrl
shll
outsb
push
push
dec
imul
xchg
imul
mov
out
cmp
sub
fwait
pop
add
and
imul
int3
inc
xor
std
push
pop
std
pop
mov
sahf
pop
insb
pushf
jo
or
jg
xor
clc
popa
call
repnz
js
out
sbbb
pop
jb
cmc
mov
leave
sbb
mov
imul
xor
mov
fwait
lea
jnp
push
or
dec
xor
arpl
inc
sub
dec
cmpsb
pusha
mov
loop
push
mov
fwait
mov
test
gs
cmovle
sti
xchg
faddl
push
xor
or
stos
mov
daa
inc
loopne
jecxz
mov
sub
and
mul
out
adc
xchg
mov
sahf
aad
cwtl
scas
push
in
cmp
dec
add
jb
sarb
ss
add
inc
call
adc
mov
add
outsb
les
jg
jle
pop
decl
push
jbe
mov
je
enter
movsl
pop
cs
mov
jo
idivl
inc
push
mov
sbb
das
addb
cs
call
sti
leave
mov
and
cmp
xchg
xchg
xchg
mov
cmp
push
or
inc
push
les
xchg
sub
rcrb
and
pop
cs
rclb
movl
in
cmc
addr16
mov
cmp
cmp
xchg
aam
mov
js
vpslld
push
repz
dec
cmpl
adc
fstpt
dec
mov
push
frstor
ja
adc
add
inc
sub
xchg
pop
mov
xor
adc
add
cmp
lods
imul
mov
pop
fisttpll
push
sub
outsl
xor
rcrb
inc
pop
push
aad
or
aad
cld
mov
push
loop
inc
outsl
dec
inc
and
ret
inc
outsb
cmp
mov
add
push
es
and
sahf
sar
xchg
fadds
pop
cmp
pushl
mov
jle
les
sub
lret
jo
mov
cltd
jnp
pop
mov
mov
push
sbb
lret
test
jne
add
out
ljmp
bound
mov
adc
adc
xlat
xor
call
jecxz
adc
lret
mov
loop
sbb
jp
aad
add
fiadds
ss
mov
popa
gs
mov
push
and
pop
in
xchg
cld
jg
ret
jp
add
popa
mov
in
inc
add
divl
les
sahf
jmp
std
xchg
xchg
or
stos
lea
jle
or
outsb
mov
daa
shll
sti
push
test
jae
test
out
mov
imulb
jmp
xor
pop
inc
adc
jge
jl
test
gs
roll
loope
xor
sbb
sbb
outsb
ret
shrl
adc
stos
adc
mov
xchg
add
sbb
or
lret
enter
adc
sbb
lahf
cli
int
das
or
mov
pop
ss
sarb
je
mov
lahf
ja
inc
mov
hlt
sub
fbstp
cwtl
outsb
sbb
mov
or
cmp
test
pop
xor
ss
mov
lcall
ja
xchg
add
push
hlt
in
adcb
lods
mov
cwtl
out
and
in
sti
test
xchg
mov
dec
lahf
dec
xor
ret
dec
lds
sbbl
and
sub
mov
push
sub
dec
xchg
outsb
js
xchg
add
pop
push
or
es
mov
stos
das
clc
sti
push
add
clc
fnsave
mov
pop
test
xchg
or
push
push
into
fnstsw
xchg
insb
mov
ret
shrl
lea
and
jl
add
mov
pop
and
xor
jge
loop
roll
add
mov
inc
loope
jo
or
pushf
std
mov
and
adc
ficomps
rolb
movsl
scas
inc
js
repz
divb
iret
mov
dec
jl
out
test
lock
sub
mov
aas
jns
jbe
movsl
or
pop
and
add
sub
outsl
mov
pop
xchg
lret
addr16
mov
xchg
jnp
xchg
cld
sbb
shlb
fldt
mov
scas
xor
dec
dec
mov
mov
js
inc
pusha
and
sbbl
ja
pop
les
xchg
xchg
fnstenv
lock
mov
ja
mov
outsb
dec
dec
mov
mov
mov
lods
lea
push
lea
fs
enter
sbb
mov
adc
mov
adc
and
or
mov
push
mov
test
or
ljmp
mov
push
fcompl
sbb
cli
mov
adc
mov
xor
scas
mov
ds
jle
mov
push
ja
pop
pop
loopne
testb
test
and
imul
jns
jno
sahf
imul
popf
lcall
decl
push
fsubp
mov
ds
fcoml
ja
ja
add
shrb
bound
and
repnz
inc
test
mov
push
fsubr
jmp
push
xor
mov
jnp
int3
ljmp
inc
pop
nop
cmp
mov
cli
jbe
xchg
scas
out
sub
repnz
xchg
cmp
aaa
lret
adc
cmp
popa
int
fstps
lcall
shrl
daa
shrl
mov
outsb
mov
adc
out
jge
aas
subl
jnp
mov
push
iret
add
lds
out
in
adc
rolb
pusha
push
and
inc
mov
adc
pop
sub
mov
addr16
call
scas
lahf
outsl
int
shrl
mov
xchg
scas
add
mov
sbb
call
das
icebp
pop
add
jmp
lock
pmaddwd
je
adc
add
xor
xor
out
sub
cs
shrb
pop
fists
lock
sarb
cwtl
lret
ja
movsl
int
insb
mov
ret
pop
popf
out
dec
filds
cltd
xchg
add
addl
sub
dec
xor
paddsb
sbb
outsb
loop
mov
mov
movsl
pop
out
dec
jnp
mov
pusha
mov
clc
xorb
xchg
sub
jnp
test
jl
adc
adc
inc
pop
mov
mov
mov
jns
lds
pop
jmp
push
jge
ja
mov
dec
xor
xchg
sbb
vxorpd
test
rorb
mov
je
push
mov
pop
mov
insb
jp
or
decb
aad
int
jb
pushf
sub
movsb
push
sub
mov
sub
pusha
push
adc
or
adc
cmp
fisttpl
inc
add
or
jg
cmp
dec
sub
sbb
hlt
pop
sbb
and
push
or
dec
and
mov
into
push
sbb
psubsw
push
jbe
adc
nop
sbb
cmpb
sahf
cmp
inc
lret
data16
mov
inc
push
sbb
scas
das
inc
xchg
xor
inc
jle
int
and
dec
outsb
pop
inc
addl
add
repz
out
xchg
lds
enter
and
push
fsubp
xchg
sbb
out
jecxz
lea
add
mov
sub
sbb
jnp
push
xor
dec
push
lcall
loope
cmc
mov
aas
rorb
or
and
or
test
shll
mov
dec
pop
in
out
xor
jle
jo
or
ds
lret
dec
cwtl
dec
mov
pop
out
aam
adc
cli
sti
mov
scas
adc
cmp
ret
insl
vpminsw
cmpsb
testb
adc
inc
sbbb
insb
pop
stc
in
sar
jl
mov
push
jns
mov
inc
in
test
outsb
test
push
xchg
mov
and
lods
pop
cltd
dec
stos
add
pop
call
fnstcw
and
rcrb
pop
out
sbbb
pop
pop
sub
mov
mov
mov
mov
push
jmp
pop
cmp
lcall
lahf
cmp
enter
sub
add
pop
mov
les
shll
add
lahf
xchg
aas
gs
push
mov
arpl
push
adcl
ret
fdivrl
sub
dec
xor
sub
call
xchg
cli
adc
or
mov
fwait
xchg
in
imul
xchg
sbb
cmp
cmp
aad
mov
jl
outsl
subl
xchg
lahf
fsts
mov
jge
jne
sub
scas
fisubrl
es
fwait
arpl
dec
push
sahf
rcr
mov
mov
dec
or
test
subl
jnp
das
std
inc
sbb
mov
rcrl
rorb
push
loope
pop
push
je
rcrl
sbb
repnz
xchg
lods
cmpsb
sub
fnsave
idivl
outsb
out
scas
xor
jnp
popf
add
jnp
fsts
or
pushf
cwtl
jo
pusha
mov
or
sar
mov
rorb
hlt
pop
dec
and
lds
pop
popa
mov
adcb
outsb
pop
stos
xchg
push
add
xchg
and
loop
sti
sahf
inc
xor
mov
fbld
addl
notl
mov
fs
scas
mov
pop
xor
xor
xlat
rol
sub
cmp
nop
lds
pop
pop
in
insl
push
pop
mov
cs
sub
or
aaa
scas
xchg
and
fdivrp
cmp
ss
loop
inc
int
adc
xor
in
mov
adcl
icebp
sub
xchg
std
xor
dec
pop
jb
xlat
or
mov
or
es
push
ds
icebp
movsb
daa
mov
sbb
das
dec
or
push
shlb
xchg
lret
cs
and
daa
cmp
insb
aad
repnz
jmp
jge
rol
push
push
adc
lcall
jns
addr16
jns
add
lds
lods
mov
sbb
cli
pop
and
adc
push
and
lods
es
ss
cmc
or
cld
add
enter
rcrb
sbb
pop
repz
lods
jge
outsl
jg
lds
or
aas
dec
insb
inc
lcall
out
pop
ss
es
push
enter
adc
repnz
lock
movb
mov
das
icebp
ret
lea
movsl
jg
aaa
mov
xor
mov
jns
mov
adc
in
xchg
mulb
jae
cmp
or
aad
arpl
mov
mov
mov
push
mov
lcall
lea
jb
dec
das
mov
lods
es
cmpsl
mov
cmp
dec
push
cltd
int3
xor
xchg
fwait
dec
mov
cmp
push
bound
ja
cmp
fidivl
xchg
push
pop
mull
xor
psubw
jno
imul
sahf
or
xchg
lods
xor
jg
sbb
aas
adc
lods
jle
aaa
mov
dec
add
cmp
push
scas
lret
repz
mov
inc
faddl
jge
inc
inc
outsl
pop
or
out
inc
inc
push
pop
sub
jge
inc
mov
mov
ret
dec
stc
mull
mov
or
fldenv
fists
xor
pop
xchg
or
mov
insl
sbb
jnp
jge
call
cmp
pop
cmp
mov
adc
or
push
push
pop
xor
mov
adcl
mov
arpl
adc
mov
stos
enter
fldenv
pop
movsb
imul
push
fidivrs
mov
repz
or
and
adc
fs
mov
jne
sbb
add
jp
pop
sub
push
xor
cmp
push
clc
sub
mov
mov
inc
xlat
mov
mov
inc
in
jp
xchg
xor
add
imul
fistps
xor
mov
add
dec
push
out
scas
inc
cli
cmp
mov
into
imul
mov
mov
jne
sbb
fstpt
xlat
rolb
divb
and
xchg
sub
ds
in
mov
not
dec
int3
mov
xchg
std
xchg
mov
test
stc
adc
cld
push
jge
mov
jl
adc
xor
leave
dec
sub
push
pop
dec
mov
jle
sub
aaa
subb
mov
test
jecxz
fwait
xorb
stc
xor
fistpll
dec
sbb
mov
popf
hlt
sub
mov
pop
inc
fcoml
push
jne,pt
arpl
pushf
es
fsubrl
xchg
cmp
loop
insl
sbb
push
lock
jg
sbb
push
cmpl
test
repnz
adc
rcll
enter
cmc
xor
sbb
dec
mov
es
fwait
adc
mov
addr16
ja
cmp
cmp
outsl
add
mov
xor
or
inc
or
ds
insb
xlat
rcrb
inc
inc
iret
inc
jb
lahf
cs
sbb
xchg
mov
push
mov
sar
outsl
mov
daa
fsub
lods
mov
shl
cmp
add
ret
fisttpll
enter
adcl
rcl
mov
sub
hlt
enter
pop
push
lea
xor
enter
pop
leave
pop
adc
loop
sub
cs
pop
push
cs
jp
fidivrl
daa
fcmove
std
jp
loopne
dec
adc
xor
faddl
imul
mov
mov
adc
mov
mov
sbb
xor
mov
stos
sub
cltd
pop
or
add
out
inc
test
push
jl
pop
imul
jmp
mov
movb
jns
push
add
jp
sub
rcrb
imulb
pushf
pop
push
sbb
xchg
xchg
push
jns
aas
or
mov
call
sbb
fcoml
ficoms
in
jne
sbb
iret
push
mov
scas
jp
cmp
jo
mov
rcll
push
push
mov
js
cmovge
loope
rcrl
fisttps
mov
dec
lret
sbb
jmp
clc
fnstcw
xchg
je
push
cltd
pop
bnd
sub
mov
mov
idiv
daa
xchg
arpl
add
cld
ror
pop
inc
int3
js
test
ljmp
push
jbe
pop
sahf
ret
xchg
or
inc
repz
lahf
mov
jne
xor
jp
icebp
mov
je
or
jl
ss
mov
xor
dec
inc
sbb
pop
nop
jnp
lcall
dec
mov
jo
lret
popa
sbb
xchg
repnz
and
mov
ds
inc
rcrl
movsb
rorb
test
add
ja
cmpsb
pop
fsub
icebp
xchg
ja,pt
icebp
je
jle
ds
les
mov
out
adc
daa
addr16
lret
rolb
mov
pop
enter
outsl
lcall
mov
aas
and
out
push
jnp
adc
xchg
clc
in
sti
add
xchg
cwtl
and
inc
or
inc
mov
sub
push
pop
repz
inc
maskmovq
mull
sahf
pop
or
popa
lret
push
in
sahf
mov
ss
sub
js
loopne
jecxz
push
sub
adcl
mov
in
or
mov
imul
ret
dec
inc
stos
icebp
xchg
ret
je
stc
pop
mov
jge
mov
jne
daa
xchg
inc
arpl
dec
les
pop
sbb
sbb
lock
pop
push
ljmp
fldt
pop
xchg
mov
imul
test
bound
xchg
mov
int3
fisubrs
or
out
addr16
dec
add
sbb
fs
inc
stos
aaa
sahf
hlt
push
fcmovu
push
out
andl
test
inc
push
daa
sti
xorl
mov
dec
push
inc
call
pop
fsubrs
sub
cmp
adc
movsb
add
int3
jno
add
outsb
loopne
jno
stos
cmc
fs
fdivl
push
movsl
pop
setns
mov
add
ss
ja
lahf
mov
pop
xor
dec
xor
out
into
sbb
dec
loop
in
mov
fwait
or
pop
mov
mov
enter
in
int3
sbb
lcall
es
sbb
and
loope
lock
jp,pn
mov
xlat
jnp
mov
sbb
xor
ja
add
gs
movsl
sub
cltd
sub
loope
cld
push
add
and
mov
jle
mov
mov
jg
push
int3
imulb
cmp
mov
into
push
and
adc
dec
lods
inc
mov
lods
hlt
xchg
int3
cmc
jmp
mov
data16
sbbl
pop
push
in
scas
add
and
cld
inc
inc
lods
ret
rcll
ret
or
das
roll
mov
cmc
and
xor
mov
lods
adc
loop
icebp
test
scas
lods
sbb
cmp
mov
lea
popf
mov
outsb
je
lea
adc
jo
loopne
add
pop
mov
mov
addr16
xchg
xor
mov
fld
imulb
ja
mov
push
sbb
jl
sbb
jmp
lock
out
andb
dec
aam
adc
xchg
jb
lcall
dec
pop
adc
int
cmp
bound
es
inc
xchg
xchg
mov
or
jb
call
mov
fisttpl
jb
dec
jne
pusha
inc
pushf
push
lcall
mov
and
add
pop
cmc
add
lods
dec
sahf
lods
pop
mov
push
cmp
dec
push
jge
punpckldq
lahf
dec
outsl
mov
adc
movsb
jb
scas
test
mov
imul
es
mov
jp
xchg
rorb
jno
add
clc
imulb
inc
mov
inc
mov
sub
add
jl
mov
std
mov
mov
in
xlat
in
add
xchg
dec
scas
pop
cmp
jle
mov
mov
addr16
mov
js
rorl
popa
int
shll
push
ret
inc
push
jo
mov
cs
int
jne
pop
loop
mov
and
iret
lods
icebp
mov
cmp
or
pop
bound
pop
sbb
repz
pusha
cmp
das
jp
ljmp
pop
cmp
popf
jl
add
and
cmp
repnz
testl
enter
sub
loop
popa
outsb
and
es
fsubp
mov
mov
pusha
test
rcrb
inc
daa
sub
xchg
jmp
rorl
push
mov
mov
lods
iret
lds
mov
mov
jbe
push
fnsave
fmulp
add
push
push
addb
jmp
adc
push
pop
push
mov
sbb
sub
cld
imul
scas
cmpsb
pop
leave
in
repnz
mov
jno
in
repnz
push
daa
push
cmp
out
lock
sahf
or
mov
pushf
data16
jp
push
xorl
xchg
scas
xchg
fs
es
pop
jge
dec
pusha
jbe
lcall
inc
jle
and
loop
mov
dec
inc
inc
add
das
pop
leave
mov
orl
xlat
sbb
dec
lods
js
mov
hlt
and
add
jnp
mov
pcmpgtw
repz
xchg
ljmp
popf
add
test
rolb
imul
ja
dec
sbb
xlat
dec
fimuls
cmp
cmp
daa
mov
das
enter
test
popa
fdiv
dec
cmpsl
addr16
in
dec
repz
test
and
sub
loop
pushf
fidivrl
inc
push
daa
orb
jge
les
pop
xlat
clc
sbb
or
repnz
add
fadd
jp
xchg
in
adc
push
dec
pop
push
xor
cmc
loope
addr16
push
cmp
pop
inc
jp
cmpsb
shlb
or
add
insl
mov
sub
lret
and
cs
pop
ja
cmp
lret
movb
inc
add
pop
push
rcrb
push
sbb
adc
scas
movsb
repnz
push
pusha
cmp
cmpsl
jnp
insb
arpl
js
stos
incl
sbb
in
outsb
pop
lods
pop
outsl
pop
ret
push
inc
or
subl
shrl
orb
push
out
xor
daa
cmp
push
scas
decb
xchg
pop
mov
jge
lahf
iret
sub
test
and
jbe
mov
jecxz
lods
inc
mov
cld
push
sub
mov
imul
push
xchg
sub
fimuls
jne
fistpl
cmp
mov
repz
push
mov
jmp
dec
lods
xor
mov
cld
add
movsl
mov
insl
xchg
std
cltd
pop
jno
mov
jns
cmp
bound
sub
push
loopne
mov
icebp
xchg
rclb
scas
dec
in
dec
push
push
mov
mov
inc
ss
ja
shll
cmp
mov
popa
test
mov
pop
adc
loop
int
fcompl
aad
and
sbb
sub
sub
aad
subl
sbb
cmp
sbbb
push
sbbb
mov
inc
shll
cmp
jbe
xchg
lds
jl
and
dec
lods
cmpsb
xlat
mov
cmp
std
mov
bound
pop
sbb
pushf
pop
iret
cmp
push
cmc
scas
jb
jp
je
pop
mov
dec
aam
jb
je
dec
dec
fldt
xchg
add
test
fldenv
jge
mov
dec
ret
push
lret
idivb
or
stos
adc
dec
push
sub
mov
sarb
add
mov
cmp
out
int
jl
xchg
fcmovu
adc
mov
or
shll
xchg
test
inc
jae
fcoms
cmpl
sar
jno
leave
aas
not
movsb
cwtl
cmpsb
jbe
or
inc
add
jl
push
pop
adc
dec
fstp
js
rorb
adc
jnp
xor
lahf
popf
mov
and
sub
dec
mov
int3
fidivrs
imul
fsubrp
or
add
repz
mov
lsl
pop
pop
jle
call
dec
in
mov
fldl
mov
rorb
or
shr
ja
fbld
sub
loope
orb
mov
pop
adcl
fdivs
mov
jmp
dec
fimuls
xchg
jecxz
xor
pop
int3
movsb
lret
in
lea
mulb
jl
adc
lret
inc
stos
mov
push
insl
jbe
jmp
cmpsb
test
out
mov
push
adc
mov
in
or
cwtl
jno
movsb
mov
data16
mov
jmp
xor
push
or
sub
push
movsb
stos
enter
fs
rcl
cltd
cmp
sbbl
or
mov
mov
adc
subl
mov
xor
enter
aam
sub
adc
orb
and
mov
ss
jge
adc
arpl
rol
xchg
nop
mov
mov
push
mov
sahf
enter
test
push
xchg
repz
add
inc
cmp
enter
les
mov
pusha
mov
inc
sub
scas
loopne
xchg
pop
xchg
inc
test
stc
mov
sub
lods
cmpsl
pop
jg
mov
testb
icebp
dec
aaa
out
pop
inc
stc
cmp
ljmp
lds
imul
mov
es
mov
lahf
mov
push
mov
xchg
mov
add
cmp
sbb
mov
fisttpll
scas
push
out
or
or
or
sub
mov
dec
rcl
xor
repnz
cwtl
inc
cmp
rcl
pop
loope
xor
sub
and
int
cmp
loope
inc
inc
shlb
jne
data16
cmp
fcmovnbe
xchg
inc
hlt
stos
js
jl
repz
add
add
pop
or
out
lahf
jne
ja
ret
sub
jne
pop
sbb
inc
mov
jge
cltd
arpl
push
iret
xor
loope
xchg
popl
cmpsl
mov
imul
inc
sbb
imull
cwtl
sbb
pop
or
incb
out
inc
xchg
mov
out
mov
outsb
and
sbb
int
js
cmp
or
test
sub
sub
sbb
inc
cmp
push
push
inc
gs
xchg
push
std
imul
xchg
pop
jbe
sub
out
or
cld
pop
int
mov
xchg
and
cmp
bound
dec
xchg
test
lcall
shlb
sbb
sarb
jmp
sbb
ret
jno
gs
jmp
inc
push
scas
std
jb
dec
mov
dec
out
cmc
and
mov
jmp
xchg
cmp
adc
inc
in
bound
push
sbb
aad
pop
fwait
pop
sub
push
xchg
add
pushf
nop
out
pusha
call
aam
sbb
push
cmp
mov
or
fisttps
xor
push
test
adc
mov
lret
rcll
jns
inc
jge
ss
outsb
push
int3
lea
rcrb
subl
inc
jb
popa
mov
mov
movsl
pop
imul
loop
jl
and
mov
dec
mov
jnp
mov
scas
jb
fs
addr16
andb
enter
adc
mov
loopne
or
dec
jle
jae
mov
dec
dec
rorl
cs
es
outsl
loopne
je
cltd
mov
fwait
arpl
aad
fidivrs
das
add
cmpsl
cli
sahf
push
add
jne
inc
jb
cltd
not
xchg
xor
ja
fsts
jle
xchg
add
mov
das
cmc
repnz
push
pushf
insb
into
inc
scas
repz
iret
sbb
ret
xchg
and
dec
cld
ljmp
cbtw
imul
mov
into
sub
push
ds
or
in
notl
xchg
clc
mov
aad
dec
jp
cmp
and
jns
out
cmpsl
and
cmp
lcall
mov
pop
fwait
popf
fisubrs
clc
sub
arpl
add
jmp
rcll
or
xor
adc
mov
push
and
imul
scas
bound
cld
push
inc
pop
popa
dec
les
aas
enter
add
stos
dec
push
mov
mov
cmp
sub
movsb
xchg
mov
mov
popa
cmp
cwtl
or
lds
mov
lcall
mov
sub
adc
scas
cmpsb
pop
mov
cwtl
outsb
ret
xor
sbb
stc
cli
dec
cwtl
xchg
push
sub
jmp
ss
dec
mov
in
fs
test
push
addr16
stos
ret
xor
arpl
sbb
push
jl
mov
mov
mov
adc
outsl
inc
daa
push
imul
push
popa
test
push
js
loope
pop
jo
call
call
lods
push
xor
std
stos
pop
cmpsl
cmpsb
add
imul
push
sbbl
add
test
orb
gs
cmp
frstor
lret
jno
mov
or
lods
aam
insb
insb
jae
jmp
mov
insl
fcmove
out
repnz
out
lods
rol
shll
repnz
jge
add
sbb
jae
push
adc
jno
sbb
add
dec
pushf
aas
dec
sahf
and
loopne
fdivr
push
jp
mov
rclb
shrb
mov
js
mov
dec
mov
add
jb
aaa
insb
jle
addb
xor
push
lcall
mov
mov
lods
adc
jecxz
pop
pop
adc
jnp
jns
imul
jecxz
lret
xor
sub
in
mov
lock
jg
int3
sahf
push
adc
mov
out
mov
aas
shl
sbb
das
fnstcw
sbb
pop
data16
add
cmc
dec
mov
sti
sarl
cld
loop
dec
xchg
and
sub
cmpsb
adc
gs
push
and
fiaddl
bound
cli
out
add
fnstenv
aam
nop
or
add
mov
notb
pop
mov
in
addr16
mov
cmp
outsb
scas
ds
rcll
je
iret
mov
pop
inc
mov
push
push
xchg
lods
shrl
push
mov
sub
iret
loope
test
xlat
addl
and
stos
push
xchg
jns
js
mov
jg
adc
add
xor
mov
mov
sub
jbe
dec
jge
int
iret
loopne
cmpsl
inc
jo
mov
jne
or
lods
jg
popa
imul
mov
xchg
jae
lods
dec
lods
push
call
mov
sub
sbb
cmp
sbbl
pushf
imull
inc
xor
jl
pop
xchg
sti
mov
and
gs
js
cmp
add
test
pop
pop
mov
mov
clc
ljmp
push
out
xor
into
ja
cmp
loop
in
xor
js
sub
sti
pop
jmp
sti
out
js
lods
pop
xor
repz
inc
rcr
sahf
imulb
lea
psubusw
push
or
stos
imul
aad
add
outsl
das
jb
enter
push
mov
xchg
pop
fisttpll
adc
stc
out
add
daa
and
stos
cmp
add
add
add
cmc
inc
cltd
xor
inc
mov
es
out
out
pop
daa
xor
cmc
subl
popa
in
repz
leave
orl
sbb
mov
adc
or
leave
xchg
aas
mov
cli
mov
enter
mov
push
pop
push
icebp
and
js
mov
aam
addr16
int3
sbb
dec
sbb
dec
pusha
lahf
dec
or
arpl
mov
pop
shll
notl
enter
fnsave
clc
aaa
jo
std
mov
pushf
jb
fwait
cmp
fs
or
repz
mov
sub
jbe
xchg
rcr
sub
movsb
pop
rcl
mov
adc
cld
es
gs
mov
push
nop
pop
cld
lock
cs
das
mov
sbb
dec
add
hlt
stos
mov
push
sahf
insl
pusha
mov
xchg
mov
inc
or
dec
mov
pop
leave
movsl
mov
movlps
mov
imul
cmp
std
outsl
jmp
insl
mov
xor
jbe
jp
icebp
loopne
sets
mov
cmp
jae
mov
sbb
in
xor
cmp
loopne
adc
dec
pop
fnsave
scas
bswap
jg
mov
data16
bound
dec
rorl
mov
mov
inc
mov
sbb
add
dec
icebp
shll
mov
movl
mov
inc
in
sbb
popf
xor
jae
imul
adc
iret
js
roll
sarb
stc
xor
jns
xchg
push
idivl
test
xchg
or
pushl
mov
cmpsb
js
mov
sarb
test
or
out
movsb
dec
mov
in
or
test
sbb
ljmp
arpl
add
and
in
xchg
dec
xchg
movsb
mov
cld
inc
test
jns
mov
jne
sub
sbbl
aad
push
lods
aad
dec
cmp
les
repz
rcll
rcrb
jno
sub
cwtl
pop
jge
jb
sub
sub
sub
adc
cmp
cmp
mov
inc
and
fsubr
ljmp
xor
dec
data16
xchg
dec
cmp
ret
jo
lcall
cwtl
cmp
and
xchg
adc
and
hlt
xchg
push
in
movsb
mov
ss
repnz
sti
sbb
adc
lea
fisttpl
in
cmp
dec
iret
jnp
mov
cmp
sbb
std
and
lods
bound
cmpsb
mov
ja
mov
into
push
pmulhuw
xor
popf
sbb
filds
dec
sti
loope
push
pop
sub
pop
push
sar
and
cli
test
std
das
xchg
aam
ljmp
sbb
stc
in
push
jno
movsl
sub
push
fldl
adc
mov
and
pushf
pop
or
mov
adc
jg
mov
leave
push
pop
jno
js
inc
jge
es
in
inc
cltd
movsb
mov
fld
mov
repnz
xlat
ss
cmpsb
lcall
aas
mov
mov
cmp
add
daa
dec
pusha
and
sahf
ljmp
cmpsl
mov
fistps
push
mov
in
daa
in
dec
lahf
cmc
lret
mov
jnp
int3
icebp
mov
push
ret
mov
pop
jle
loope
mov
gs
notl
push
mov
mov
mov
mov
push
and
cmp
into
or
xchg
loopne
das
mov
xchg
mov
outsb
ljmp
dec
sar
jecxz
jo
insl
gs
xor
pop
fcomps
shll
push
addb
inc
cmpsl
icebp
stos
rcll
pop
cmp
inc
outsb
stos
jg
push
xchg
aad
js
jne
ja
cmp
mov
notb
scas
push
cwtl
mov
dec
lods
mov
xchg
idiv
jge
mull
in
push
push
scas
loope
mov
pop
scas
pop
cmpsl
aaa
outsb
pop
adc
pop
jns
fimull
idivb
xor
icebp
inc
test
into
jmp
xchg
or
fmul
or
int
dec
mov
inc
jae
mov
jae
dec
push
cmp
es
ret
xchg
push
or
setae
mov
cmpsb
mov
push
pop
mov
mov
sbb
xor
jecxz
hlt
subl
aaa
dec
sub
call
jo
neg
adc
xchg
aas
mov
xchg
das
test
imul
dec
outsl
jp
mov
adc
js
dec
jge
adc
and
pop
les
jnp
int3
cmpsl
xor
xor
std
out
insb
mov
into
xor
add
push
das
aad
stos
call
icebp
testb
sbb
neg
leave
hlt
pop
gs
fwait
test
outsb
xchg
adc
je
jmp
pop
lcall
fldenv
cmp
iret
dec
ret
mov
pop
sarl
jmp
cmp
inc
cltd
add
mov
lock
loop
inc
xor
jge
jg
dec
dec
dec
add
cmp
push
mov
je
push
test
jl
xchg
stos
aas
xchg
fidivrl
fcoml
lods
lock
mov
xchg
cld
or
scas
lock
clc
shl
sub
pop
cltd
or
cmp
jp
mov
popa
or
fstpt
xor
mov
push
mov
sbb
fcmovb
and
dec
call
adc
loopne
fldt
lcall
mov
jg
sbb
lahf
es
jmp
inc
mov
sbb
adc
and
sbb
movsl
or
mov
dec
aas
push
push
mov
xchg
mov
ljmp
mov
out
jo
mov
add
std
mov
cs
add
lea
loope
hlt
out
cltd
mov
inc
add
notl
push
cmp
cmp
data16
jle
adc
xor
push
mov
mov
pop
or
adc
push
jb
ds
addr16
xor
jb
dec
sbb
inc
negb
sub
add
push
test
dec
addr16
outsl
inc
mov
mov
pop
andl
xor
push
sub
in
icebp
test
sbb
inc
push
loope
out
cld
mov
push
pop
xor
mov
cmpsl
inc
push
push
dec
mov
push
jnp
in
adc
sub
or
push
mov
das
lods
in
ret
addr16
daa
clc
xchg
cmp
jg
adc
push
cltd
les
xchg
ljmp
dec
test
cs
push
out
sub
or
aad
add
sub
jmp
rcl
shl
add
jbe
loopne
test
adc
mov
cmp
leave
fnsave
adc
or
fnstcw
add
outsl
xorb
cmp
xchg
imul
xchg
or
dec
pushf
mov
sub
lahf
fdivrp
insl
inc
sahf
in
fcompl
and
jg
popf
out
mov
sub
adc
push
mov
pusha
add
ret
cltd
push
adc
aaa
mov
out
js
xlat
lret
push
scas
rolb
pop
push
adc
movsb
cmc
sbb
push
dec
mov
or
mov
xor
pop
clc
mov
or
push
dec
inc
test
cs
aam
scas
push
sbb
and
in
idivb
dec
lret
lods
sub
jne
dec
movsl
andb
subb
leave
cwtl
je
pop
testb
xchg
dec
sbb
push
or
mov
mov
xchg
inc
push
sub
movsb
scas
pop
dec
dec
mov
sti
or
or
adc
fwait
mov
vhaddpd
scas
jl
xor
cmp
stos
or
jo
adc
dec
jg
adc
std
and
push
sbbl
das
lcall
cwtl
iret
outsl
mov
andb
sbb
cltd
jno
add
and
inc
je
fmuls
lds
negl
fidivl
xor
mov
add
jg
adc
add
test
rcll
aas
idivl
aad
dec
mov
jecxz
xorb
cmp
or
xchg
mov
out
cmp
xor
daa
or
outsl
or
dec
jge
mov
testb
fcomps
xor
cmp
mov
faddp
jne
das
test
push
gs
jmp
les
lods
jl
jg
xchg
lods
mov
scas
pop
pop
int3
mov
js
push
push
dec
fcmove
jecxz
pop
enter
push
sub
cmpsb
or
call
and
mov
shl
out
or
imul
shrl
fcomps
mov
scas
hlt
in
and
sti
rclb
and
xor
mov
or
or
adc
mov
loopne
js
adc
jge
imul
into
mov
xor
subl
and
lods
test
xchg
lds
dec
aaa
xor
popf
popa
or
ficoml
mov
repnz
imul
lds
repnz
pop
push
jp
subl
test
in
loopne
cmp
inc
lds
ror
js
lcall
push
dec
inc
push
jae
int
jb
cmpsb
cmpsb
ror
mov
adc
push
sti
dec
mov
addr16
int3
loop
push
xchg
cwtl
mov
sub
or
xchg
rclb
adc
jle
jno
test
xchg
mov
arpl
add
les
dec
inc
out
lds
jno
test
sbb
mov
ret
out
shlb
inc
in
add
push
cmp
les
inc
pop
dec
or
xorb
out
mov
sub
cltd
dec
jb
fcomps
sub
pop
xor
jno
out
ja
pop
mov
fisttpl
pop
je
unpcklps
in
sub
inc
sbbl
add
daa
insb
pop
sub
or
lods
test
arpl
lahf
imul
test
mov
sub
dec
je
push
fwait
mov
pop
je
cs
cs
jmp
cmpsb
hlt
and
mov
sub
xor
test
aam
inc
call
xor
arpl
xchg
adc
push
in
js
out
fimuls
cwtl
sbb
fbld
mov
fadd
mov
add
cmp
sti
adc
mov
bound
lods
daa
iret
inc
divl
repz
xchg
xchg
sub
pop
xchg
rcrb
out
cmp
xchg
mov
add
aam
repnz
cmp
daa
jnp
pop
mov
dec
mov
inc
cli
in
pusha
mov
inc
cmpsl
mov
push
ds
test
mull
pop
out
ds
jnp
daa
lods
shlb
scas
mov
pop
adc
sub
inc
orl
mov
xor
pusha
jo
xor
or
rol
lods
scas
loop
loopne
xchg
fimuls
pop
dec
mov
loopne
enter
fcmovnbe
nop
sub
data16
into
push
xor
xor
and
lods
shlb
dec
fisttpll
lods
scas
int3
cli
push
mov
imul
jle
cwtl
pushf
imul
mov
jno
xor
sbb
dec
inc
jno
jno
rcll
outsb
and
fldenv
sub
jle
push
subb
popa
and
stc
stc
or
enter
mov
inc
cli
cli
sar
pop
mov
pushl
inc
lret
adc
shrb
loop
or
ljmp
mov
nop
popf
push
lds
xor
in
add
mov
dec
loopne
popf
test
in
mov
cmpb
fistps
jne
lods
ffreep
popa
mov
xchg
or
cli
cmp
notb
je
xor
ljmp
ror
in
xchg
dec
jp
sbb
adc
mov
cmp
das
test
dec
mov
loope
inc
push
orl
lret
lods
jo
push
xor
sub
pop
mov
cli
push
es
fcompl
jg
ja
lcall
lahf
cmc
test
pop
jne
aaa
pushf
jp
stos
aam
push
std
dec
aad
fmul
pop
add
ljmp
push
mov
iret
movsb
lock
inc
mov
or
xchg
add
dec
adc
pop
movsl
test
fwait
iret
mov
cli
sbb
sbb
out
sub
out
mov
inc
mov
cmp
inc
testb
adc
cmp
mov
rcpps
adc
mov
aaa
push
or
jb
cwtl
inc
pop
int
and
push
and
mov
shll
inc
adc
jmp
sub
mov
mov
pusha
aam
xor
scas
test
push
lahf
push
jne
loop
or
outsl
shr
dec
push
gs
xchg
cmp
mov
enter
sbbl
dec
repnz
out
sub
adc
movl
jns
stos
sbb
sbb
lret
sub
pushf
adc
jmp
inc
cwtl
jne
or
shrl
adc
mov
test
xchg
add
clc
fisttps
push
pushf
or
sti
loopne
xor
shlb
out
jbe
mov
sbb
dec
xor
loop
clc
ss
push
mov
lahf
cmpsl
and
dec
sbb
inc
inc
dec
add
je
mov
add
test
xchg
out
mov
jmp
pop
jnp
ja
popf
fs
adc
cmp
push
sbb
add
adc
xchg
popf
shrl
jae
sbb
aas
dec
inc
lods
dec
or
or
cmp
mov
xor
ja
ljmp
xor
movsl
ret
add
pop
jns
negl
scas
add
push
andb
fists
cmc
dec
or
adc
adc
add
fwait
dec
movb
stc
lds
push
mov
pop
cwtl
pop
and
push
insl
jl
jb
mov
inc
sub
jnp
nop
inc
sbb
repz
jg
std
push
or
mov
lret
adc
sub
adc
jp
cmp
sub
and
adc
addr16
mov
pop
xor
or
jo
cwtl
jp
test
inc
jb
lds
mov
mov
fwait
repz
mov
std
mov
inc
arpl
adc
int
imul
sbb
ffree
mov
xor
sbb
push
sbb
cmp
adcl
xorl
mov
and
lods
stos
mov
mov
out
adc
xor
mov
in
pop
insb
jecxz
xor
pop
test
ljmp
ljmp
sub
loope
mov
inc
mov
push
clc
insb
je
and
add
mov
sub
cmp
arpl
ret
and
push
rcrl
inc
movsb
mov
mov
add
fidivrl
dec
xchg
adc
mov
scas
js
jae
sub
test
clc
sub
sub
adc
icebp
sahf
jns
scas
cmpsl
call
inc
xor
mov
imul
xchg
insl
or
jmp
hlt
inc
pop
imul
add
ror
mov
mov
cmp
mov
xor
outsb
clc
sub
sub
xchg
insb
push
mov
lret
data16
push
xlat
xor
mov
testl
inc
or
jae
in
icebp
neg
shrl
inc
jge
xchg
pop
rcrb
enter
sub
int
add
insb
aam
jg
bound
outsb
cmpsl
fbld
xchg
cwtl
sub
repz
idivb
stos
mov
sbb
pop
popl
das
push
push
or
cmpsb
cmp
and
cmp
jmp
cmp
inc
xor
push
mov
mulb
push
insb
sbb
into
lea
shlb
cltd
add
pop
xchg
adcb
cmp
xchg
jp
arpl
stc
jae
push
and
insb
push
shr
adc
inc
test
les
add
mov
push
xchg
push
push
test
into
xor
shrl
aaa
mov
ljmp
pop
jmp
test
pop
xchg
ljmp
adcb
jle
push
test
adcb
mov
lea
shrl
popf
inc
rorl
sbb
mov
cwtl
out
test
ss
or
shlb
and
in
std
das
add
mov
outsl
add
rclb
lods
xchg
testb
in
cmp
sbb
pop
sbb
sub
add
cltd
xor
xchg
jge
jb
repnz
xor
sub
mov
fldl
push
sub
lock
mov
pop
sarb
out
sbb
adc
xor
hlt
push
in
pushf
mov
sahf
sar
call
xchg
jmp
adc
fistps
mov
outsl
sbb
xchg
js
push
inc
jle
cli
cmp
mov
repnz
xor
pop
ljmp
test
popa
and
mov
imul
pop
push
lea
push
inc
xchg
test
jecxz
sub
lock
lahf
ret
imul
js
divl
sbb
fidivrs
inc
mov
fwait
cmp
mov
jmp
out
jmp
add
mov
iret
xchg
jmp
filds
icebp
adc
fstl
js
mov
stc
sbb
dec
xchg
mov
push
sbb
xchg
or
movb
pushf
pop
ds
jmp
mov
enter
and
hlt
loop
std
xor
lods
out
mov
dec
popf
xor
jp
push
aas
sbb
inc
jb
jno
in
mov
dec
ds
fs
stc
ret
jnp
mov
ret
pop
lods
shlb
mov
test
pop
in
sbb
clc
or
xor
icebp
fnstenv
into
imul
sbb
test
pop
cmp
mov
sarb
pop
adc
dec
inc
or
sub
outsl
shl
jp
fsubl
aaa
xor
int3
jb
loopne
arpl
sbb
pop
xchg
xchg
lcall
push
cmp
shrl
insb
cmp
rcl
mov
dec
sub
push
cli
je
aas
ret
ret
xor
std
sbb
stos
xor
and
faddl
push
fcompl
cmpsl
dec
ja
sbb
dec
lods
inc
sti
push
xchg
test
clc
insl
xchg
out
push
jl
push
xchg
inc
out
jl
adc
aam
outsl
pop
lds
xchg
lock
inc
xchg
push
and
popa
or
sub
inc
mov
xchg
in
insb
mov
xchg
mov
xchg
out
push
xor
lods
and
lea
mov
rcrl
sub
push
test
pushf
dec
mov
dec
lret
inc
ficompl
cwtl
mov
pop
test
and
faddl
add
mov
adc
lea
nop
aad
in
iret
xlat
int
aaa
push
xor
xorl
add
jecxz
sub
movsb
push
repnz
pop
dec
mov
aaa
inc
jl
add
adc
cli
xor
lea
cli
push
arpl
adc
sub
add
das
scas
dec
push
daa
das
jmp
pop
inc
xor
or
inc
ljmp
sahf
loop
cli
outsb
xor
notb
dec
fidivs
xor
cwtl
xchg
popf
test
sbb
or
lock
and
mov
adc
add
inc
int
xchg
cmp
jo
mov
lods
jmp
adc
stos
inc
pusha
cmp
pop
sbb
mov
or
cmp
movsb
ror
and
dec
clc
dec
sbb
fimull
mov
jne
daa
inc
dec
andb
lods
fimuls
sbb
add
decl
ret
inc
lret
aad
in
ljmp
lahf
add
lods
into
pop
push
fwait
in
sub
xor
xor
mov
movb
add
cmp
arpl
jae
sub
fdivs
push
ds
mov
stos
in
push
out
xchg
pop
jg
push
ret
and
inc
mov
cwtl
cwtl
fnstenv
sbb
lods
sub
xor
sub
popa
fwait
mov
les
mov
andb
push
mov
dec
aam
or
cli
sahf
mov
adc
jmp
xor
push
loope
push
sete
dec
jns
lcall
aas
outsl
int3
jl
pop
or
popf
fsubrl
fs
jl
aaa
xchg
jl
roll
inc
sub
stc
jecxz
sbbb
call
jns
add
cmp
sbb
popf
les
jb,pn
sbb
ret
into
push
pop
pop
and
add
pop
mov
scas
inc
in
stos
mov
cli
out
jmp
mov
xchg
jg
jecxz
loop
add
mov
jmp
daa
inc
pop
jge
into
pop
or
xor
xchg
hlt
in
cltd
pop
mov
out
jae
jne
and
fwait
das
or
mov
out
arpl
repz
mov
dec
js
xlat
out
jge
rcll
xchg
mov
add
cwtl
mov
not
mov
in
sbb
xor
test
pop
pop
xchg
cmp
and
insl
out
loopne
pop
xor
sbb
or
dec
pop
ds
js
lods
out
mov
cmp
faddl
lret
pop
rcll
enter
fstpl
jle
pop
add
mov
mov
pop
push
mov
cmc
xchg
add
jbe
lock
ja
jp
ds
mov
add
jo
xor
aad
xor
sub
push
push
and
loope
sub
xchg
iret
mov
adc
push
mov
dec
sub
or
dec
inc
inc
push
clc
adc
push
aaa
pusha
dec
push
cmp
fldenv
and
in
in
addl
loopne
fldl
cmp
mov
in
xchg
ljmp
push
pop
mov
or
fsubrl
pop
leave
repnz
sub
test
sbb
out
mov
inc
imul
fimuls
movsl
sub
push
mov
pop
mov
imul
xchg
dec
pop
out
adc
mov
fstpl
or
push
adc
es
gs
pusha
jp
mov
mov
loop
sbbl
loopne
out
scas
gs
push
arpl
ret
mov
dec
and
pop
js
pusha
movsl
mov
int
push
xchg
pop
ss
jb
inc
es
out
jae
stc
in
js
fisubl
outsl
sbb
inc
std
cmp
mov
lcall
add
les
push
hlt
add
push
mov
xchg
rcrl
lcall
sub
sti
fnstsw
and
mov
fidivl
shl
mov
sub
xchg
mov
bnd
adc
dec
fildll
mov
es
mov
push
in
xor
and
pop
mov
fnstsw
pop
shlb
insb
sub
pop
test
mov
cmp
push
dec
lret
xchg
dec
and
clc
push
inc
sti
jmp
das
xchg
sbb
dec
cmc
insl
and
dec
lret
push
daa
mov
jmp
dec
add
xor
xchg
lret
les
es
fstps
ds
and
test
mov
mov
cld
mov
adc
push
xchg
push
pop
dec
out
stc
cmp
sub
mov
inc
outsl
sub
cs
sahf
inc
jl
jb
ja
ret
lods
shlb
and
fistps
inc
outsl
pop
mov
pushf
sub
cmp
nop
fnstsw
dec
jp
cmpsl
outsb
xor
push
clc
cld
cwtl
cmp
sbb
stos
stos
push
or
jo
ljmp
les
inc
insb
mov
sti
mov
int3
sbb
pop
pop
mov
push
xor
pop
mov
mov
cmp
jle
scas
mov
push
jmp
sbb
and
pop
dec
popf
sbb
stos
inc
test
or
ss
aas
sar
inc
sysexit
mov
pop
jb
jno
dec
adc
fs
fidivrs
or
adc
sub
mov
jl
xchg
push
stc
xchg
js
and
xchg
aad
outsl
inc
aaa
int
inc
push
mov
inc
xchg
xchg
xor
and
shlb
jge
stc
data16
xchg
pop
pop
xor
and
aam
adc
imul
jp
add
fistps
cmp
loop
mov
test
push
lods
mov
xchg
ds
cmp
push
push
adc
fcmovnbe
xor
or
aam
adc
cmp
jp
int
sub
dec
jne
jle
mov
jns
lea
mov
sar
popf
stos
lret
ljmp
insb
mov
push
mov
clc
mov
lea
fists
mov
jne
repz
data16
mov
xlat
loope
loop
or
cmc
inc
sbb
fildl
leave
cmp
pop
jecxz
fidivl
fsubrs
inc
or
insl
sub
pop
cmp
bound
iret
and
sub
sti
scas
popa
sub
xor
mov
js
ret
mov
xchg
push
pop
jo
sub
leave
adc
sub
add
adc
in
rorb
xchg
sub
inc
lods
nop
insb
imul
push
inc
int3
in
mov
loop
addb
cmp
mov
xlat
sahf
lret
aam
daa
mov
ret
sbb
or
xor
int3
cwtl
xchg
inc
mov
xchg
out
inc
fmuls
je
sbb
movsb
lret
sbb
jne
jle
ret
arpl
arpl
cmpsl
les
fsubl
ja
push
int
xchg
aam
adc
stos
jg
mov
in
pop
pop
int3
add
aas
cwtl
cmp
lcall
jecxz
int3
adc
push
das
out
pusha
jle
xchg
jecxz
inc
shrl
sbb
pop
hlt
push
mov
mov
pop
clc
mov
pushf
pop
mov
dec
mov
inc
repnz
xor
loop
insl
andl
stc
or
mov
push
aaa
mov
in
out
mov
lea
aad
dec
cltd
mov
cli
sub
inc
je
ret
mov
rorl
gs
jp
rcll
repz
or
jo
and
dec
mov
hlt
jp
cmp
mov
ret
icebp
push
shlb
xchg
mov
lods
shll
push
loope
push
adc
xchg
or
loopne
dec
mov
popa
cmp
aaa
xor
jmp
repnz
or
push
nop
sbb
stos
aas
jmp
dec
test
ss
fdivrs
adc
dec
and
outsb
mov
pushf
cs
ja
arpl
fwait
cmp
jmp
stc
mov
sub
add
addr16
fcmovnb
outsb
dec
outsl
add
clc
push
xor
push
aad
xchg
mov
mov
push
mov
inc
push
xchg
xchg
nop
inc
lods
fwait
les
push
stos
testb
jae
pop
and
subb
dec
js
pop
in
fcoms
cld
adc
leave
iret
sub
and
leave
loope
jp
jg
flds
out
mov
aas
es
xchg
inc
jmp
aaa
ds
cmp
lock
push
or
push
shll
jns
iret
dec
mov
inc
ret
xor
mov
adc
xor
dec
outsl
jge
and
cmp
sarl
jae
lahf
in
and
outsb
xchg
jae
cmp
into
addb
adc
push
jnp
call
xchg
sbbl
xor
jmp
or
mov
sub
gs
loop
adc
test
mov
or
inc
cmp
inc
mov
adc
repnz
xabort
arpl
cmp
clc
mov
xchg
inc
lret
sbb
jl
xchg
mov
sbb
inc
jbe
dec
pop
popf
and
push
mov
popl
sbb
js
mov
rcrb
cmp
testb
inc
adcb
aad
movsl
aas
loope
addl
fsub
sti
cmpsl
dec
mov
dec
push
stos
jbe
sbb
adc
fsubrl
scas
aaa
into
cmpsb
xor
mov
fwait
pop
sub
mov
lods
adc
les
xchg
mov
aaa
sub
push
leave
je
test
flds
movsb
cmc
gs
cmpsl
and
add
jo
dec
fisubs
push
test
test
pop
rorb
push
or
pop
cmp
cmp
and
xorl
or
mov
pop
pushf
pop
cmc
and
insb
test
enter
call
fwait
xchg
add
lret
shrl
pop
fdivrs
loope
pop
sub
out
in
cmpsl
xchg
adc
xchg
lods
adc
push
fdivr
or
enter
sub
jmp
imul
fldcw
push
popa
insb
icebp
push
xchg
sub
sbb
mov
add
inc
out
mov
mov
stc
bound
mov
jb
cmp
jle
mov
fdivrs
fdivs
fildll
pop
dec
call
adc
inc
mov
mov
sbb
adc
stos
sbb
sub
mov
out
xchg
inc
mov
mov
sub
xor
push
ss
pusha
jp
xchg
fwait
sbb
repnz
out
ret
inc
ja
jle
sbb
ret
dec
add
xor
cmpsl
mov
mov
ja
sti
sahf
fdivrl
stos
sbb
sbb
push
xchg
or
dec
dec
jmp
scas
inc
imul
lods
es
mov
mov
mov
lcall
lock
jge
cs
xchg
je
jl
stos
les
xchg
iret
mov
jnp
push
arpl
pop
repnz
lds
flds
cmp
mov
mov
cmp
xchg
mov
jl
sub
out
gs
or
push
testb
outsb
sarl
mov
inc
xchg
les
cmp
xlat
test
xchg
dec
aaa
mov
das
jecxz
stos
jo
pop
popa
test
or
dec
xor
shll
push
cld
jl
and
in
popa
adc
mov
lcall
sahf
mov
xchg
mov
enter
mov
jp
and
hlt
mov
sbb
sbb
pop
aas
insl
in
jecxz
inc
adc
scas
test
push
xor
in
sbb
push
sbb
adc
in
in
jae
repz
mov
test
mov
push
popl
js
pop
push
icebp
xchg
push
testb
cli
lret
push
and
and
lock
inc
sub
lret
mov
inc
shll
sbb
and
pop
push
into
sti
notb
pushf
push
aad
cwtl
in
rclb
push
jb
sbb
push
xchg
notb
shl
cmpsl
cmpsb
mov
neg
dec
or
sub
cmp
test
lods
xchg
mov
sti
fs
movsb
jno
minps
jnp
mov
xchg
jns
adc
leave
and
inc
jecxz
fnsave
fcoms
lock
data16
cmp
fadds
pop
nopl
rol
pop
sahf
push
enter
in
lea
movsl
xor
cmc
fs
sbb
out
adc
icebp
and
and
sub
inc
mov
push
dec
mov
cs
stos
fidivrl
sub
cld
insb
roll
xchg
jb
lahf
add
mov
aaa
movsbl
mov
daa
mov
jbe
cmp
inc
lock
dec
xor
addb
ficoms
rorl
push
and
outsl
or
cmp
lcall
repz
js
and
or
shlb
jb
in
lcall
and
mov
cltd
or
es
pop
mov
sub
adc
add
imul
decb
pop
sub
ljmp
gs
inc
or
fcmovu
or
add
mov
in
mov
add
and
jae
or
jg
subl
scas
andl
pop
lods
addb
es
and
popf
sub
add
sub
mov
jmp
jge
pop
cmp
mov
dec
lock
mov
and
xor
pop
xor
pop
and
mov
push
mov
jae
sub
sub
sbb
pop
cmpsl
ja
jecxz
or
xchg
cmc
sub
lahf
insl
pop
jge
pop
sti
fs
mov
jb
jb
imul
bound
adc
add
hlt
dec
jnp
add
das
sub
nop
jae
dec
cwtl
mov
in
and
ljmp
out
pushf
lods
pop
cmp
xor
mov
mov
sub
cmp
jmp
stos
sub
sbb
cmpsb
ds
mov
dec
pop
xchg
mov
mov
dec
loope
or
sub
stc
int
sbb
mov
mov
out
mov
mov
stc
push
adc
out
dec
stos
adc
shll
lea
popf
rclb
fadds
mov
push
sub
scas
push
cwtl
mov
lahf
ljmp
int
sti
jle
clc
imul
jmp
inc
into
je
pushf
cmpsb
rclb
adc
leave
gs
and
mov
xor
xor
cmp
aam
cmp
hlt
inc
xchg
imull
sti
fdivrl
push
dec
rorl
jbe
mov
test
and
stos
jle
fsubs
int3
add
sbb
pop
fdivrs
add
inc
in
mov
out
cli
or
push
mov
scas
rol
out
out
loopne
rorb
into
mov
jge
sahf
pushf
dec
dec
ror
jb
cmovle
cmc
dec
adc
mov
jo
pop
lods
mov
mul
in
xor
dec
mov
jl
inc
mov
or
stos
movsl
leave
jnp
ficoms
fs
xor
call
fcompl
lods
imul
jl
shll
inc
xchg
mov
dec
mov
dec
test
dec
lcall
xchg
sbb
bound
add
mov
enter
in
gs
push
lds
pop
loope
pop
jmp
mov
js
sub
rorb
add
and
fcoms
push
mov
test
loopne
and
pop
psrlw
add
js
mov
cmp
inc
push
icebp
fdivrs
adc
dec
adc
ds
rol
arpl
sub
inc
jnp
mov
push
xor
repnz
or
cltd
push
clc
ja
xor
mov
stos
adc
xchg
idiv
cmpsb
ret
sbb
into
aad
test
inc
fldcw
clc
cmpsb
dec
push
sbb
bound
sahf
test
fsts
lret
mov
insb
dec
xchg
mov
mov
mov
cs
popaw
jle
jae
popa
pushf
jae
cli
test
outsb
repnz
push
cs
push
mov
test
shrl
movsb
insb
lods
pop
push
jge
push
aas
cli
mov
sub
mov
stos
inc
jl
out
adc
push
xor
push
pop
jne
dec
cmp
cld
fcomp
xchg
pop
mov
in
push
lret
mov
inc
xchg
popf
pushf
pushf
mov
leave
ss
mov
jp
adc
xchg
add
ljmp
adc
mov
or
sbb
dec
ret
in
cmp
dec
add
je
daa
ret
fsubs
xlat
and
jmp
mov
ljmp
ljmp
jmp
ret
jb
cmp
loop
sbb
push
in
cwtl
mov
sub
das
pop
fmulp
lods
aad
dec
jmp
ret
jl
sub
jmp
ja
push
ret
pusha
xchg
adc
pop
fsts
inc
ja
pop
fsubl
ja
aas
cmp
stos
mov
fs
in
hlt
inc
ucomiss
xor
insb
push
movsl
xchg
cs
pop
mov
inc
mov
js
test
jnp
push
jns
cmpl
cld
repz
ficoml
stos
arpl
pop
xlat
xor
jne
pop
mov
test
jnp
orl
ljmp
xlat
js
adc
push
sbb
cmpsb
pop
cmp
iret
call
rcll
xorl
repnz
pusha
pop
sub
cmp
cmp
rcll
stos
or
fnstenv
fimuls
and
stos
scas
add
adc
daa
add
or
dec
jbe
inc
inc
xor
pop
xchg
loop
jle
subb
shrb
mov
sar
mov
dec
jg
in
rep
fildll
mov
or
movsl
test
mov
or
sub
mov
push
and
pusha
pop
push
xchg
and
mov
insb
pop
repnz
sub
mov
add
call
fstl
hlt
out
mov
jbe
cmp
or
ja
cmpsb
cwtl
pop
lahf
in
pusha
in
push
enter
aas
or
loope
mov
dec
xchg
imul
push
mov
scas
mov
push
jae
cli
xchg
xchg
push
lods
mov
subl
test
cli
out
ja
adc
add
cmc
xchg
int
addr16
sbb
pop
jnp
lahf
addl
xchg
adc
fmulp
inc
enter
out
outsl
mov
add
inc
xor
jmp
ljmp
mov
pushf
xchg
mov
incl
out
rcrb
out
and
lret
mov
and
divl
cmpsl
pop
mov
xchg
inc
push
testl
gs
mov
lea
in
push
add
xchg
fdivrs
ret
test
push
loop
aas
cmp
js
hlt
in
aam
insl
push
lds
or
mov
mov
xlat
sub
xchg
fstp
push
scas
stos
add
mov
or
mov
es
add
pop
lcall
lds
mov
je
notb
jb
inc
test
ljmp
inc
dec
sbb
or
jbe
rol
dec
jae
mov
test
adc
lock
and
cmc
inc
sar
push
clc
dec
xor
hlt
xchg
xchg
mov
gs
ja
loop
test
mov
xchg
pop
cmp
mov
rorb
mov
add
pop
dec
outsb
xchg
mov
push
fld
and
jmp
jnp
pop
dec
pop
loopne
mov
fwait
push
adc
pop
or
sbb
mov
icebp
mov
test
jne
js
xchg
dec
adc
into
inc
dec
ficoms
loop
imul
mov
jae
inc
adc
jle
jmp
aam
icebp
xor
fisubrs
pop
mov
aad
das
rcrl
and
outsb
cmp
nop
test
cmpb
adc
cld
aas
cmpl
es
lea
inc
xchg
mov
enter
loopne
sub
jmp
push
lea
mov
mov
cmc
jmp
std
push
in
dec
add
add
jno
push
cmp
pop
iret
push
cmc
xchg
jmp
and
adc
sbb
test
mov
cs
and
jmp
imul
fs
enter
push
inc
and
pushf
inc
sbb
scas
insl
jno
insl
bound
es
jae
mov
lret
js
rcl
jns
shlb
mov
adc
xchg
out
push
pop
gs
add
sti
pop
nop
es
aam
aas
xchg
add
hlt
outsb
lods
or
cmp
mov
dec
mov
mov
fcomip
sub
clc
inc
ss
cs
mov
sarb
jmp
mov
sub
popf
and
jp
mov
mov
inc
inc
sbb
gs
stc
inc
sub
lds
jb
adc
add
test
inc
or
push
test
add
dec
dec
test
sahf
mov
cwtl
ja
cld
sarb
es
pop
test
fsubs
mov
sbb
mov
loope
insb
push
lods
pop
aad
mov
negl
dec
frstor
xchg
leave
add
lret
pop
incb
push
jg
lret
inc
repnz
and
and
repz
movsl
pop
clc
fidivrl
outsl
inc
ffreep
cmp
pop
js
or
mov
js
loopne
push
imul
add
mov
sbb
ret
mov
and
sbb
jmp
lret
push
ficompl
mov
sub
mov
pusha
xor
push
jge
test
sbb
insl
sub
inc
xor
pop
mov
mov
not
cld
mov
outsl
sahf
mov
and
cs
dec
xor
les
mov
pop
sub
add
push
dec
sub
test
xchg
cmpsl
dec
jnp
cmp
lods
rorb
dec
mov
sub
dec
cmpsl
mov
sbb
jnp
bound
mov
loope
inc
das
lock
ret
inc
or
jp
ljmp
cmpl
inc
das
shlb
test
es
push
xchg
out
inc
test
fbld
in
or
insb
hlt
or
std
sarl
mov
ljmp
inc
inc
jae
sar
fdivl
pop
je
dec
rdtsc
imul
andb
addb
popa
cs
or
mov
scas
daa
sbb
sbb
inc
repz
ja
pop
fcoms
inc
fldt
sub
cmpsl
cld
jbe
cltd
pop
adc
out
inc
adc
mov
clc
mov
mov
leave
jmp
dec
sub
cmp
gs
adc
add
mov
cmc
push
ja
push
stos
arpl
test
stc
or
adc
cli
xchg
sbb
out
ds
mov
dec
out
clc
inc
enter
adc
fs
jle
in
lret
push
mov
push
lea
sbb
icebp
and
lahf
out
mov
mov
pop
dec
scas
xor
decl
cltd
jg
imul
shrb
js
sbb
out
or
iret
and
pop
sti
xchg
fucom
icebp
xor
xor
out
lea
or
aad
cmp
sahf
push
push
pop
test
std
cmp
jae
inc
jo
lea
out
jmp
jae
movsl
std
dec
mov
div
lods
jle
out
add
mull
ret
cmp
stos
sahf
sbb
or
pop
enter
sbb
add
std
fdivl
push
mov
movb
cltd
test
or
ret
movsl
gs
pop
ret
int3
lods
mov
cmc
mov
jno
pop
fdivrl
clc
sar
adc
xchg
loopne
in
push
cmpsl
iret
add
rorl
into
jp
xchg
and
sub
or
scas
xchg
push
pushf
and
jnp
arpl
call
adc
je
adc
mov
test
pop
add
jbe
mov
sbb
divl
mov
mov
dec
mov
loope
cltd
lahf
xor
jo
in
sbb
movsl
sarb
pusha
movsb
dec
pushw
push
xchg
imul
sbb
mov
pop
push
inc
xor
jmp
ja
lret
pusha
pushl
out
arpl
imul
arpl
push
outsb
mov
aas
adc
in
shll
leave
lods
leave
dec
stos
sub
ljmp
inc
mov
adc
iret
add
in
xor
insl
cmp
sar
inc
lds
mov
stos
stos
mov
push
sub
ja
int3
add
pop
addr16
push
rcrb
sbb
ret
dec
divb
cmp
in
movsb
inc
adc
mov
imul
negl
push
and
dec
dec
stos
in
sub
addl
not
sahf
cmpb
or
push
jbe
xlat
jno
mov
mov
shll
inc
in
inc
lret
mov
pusha
mov
jno
xchg
or
imul
xor
xor
push
mov
pop
lds
mov
mov
jecxz
xchg
xor
aas
inc
aam
cwtl
sti
call
mov
outsl
lods
add
popl
jl
shl
mov
in
add
fs
les
sub
bound
ss
sbb
arpl
das
push
stos
cmp
jl
and
fldl
mov
mov
sub
lret
jmp
setnp
xchg
xchg
fs
mov
mov
shrb
in
mov
movsb
ud2
lods
mov
cmp
mov
popf
out
shld
imul
into
inc
sub
loop
xchg
jp
xchg
mov
pop
ret
dec
enter
mov
sub
push
in
lahf
int3
jle
aad
lock
and
iret
or
insl
dec
js
dec
popa
sub
bound
inc
push
aam
outsl
enter
hlt
pop
in
es
loopne
dec
mov
in
int
xchg
arpl
pushf
mov
lock
cld
jecxz
hlt
shll
sti
in
loop
rcrb
dec
int
pop
iret
rcr
in
cltd
out
xchg
push
mov
fsubs
mov
adc
mov
sbb
mov
lret
sahf
mov
jg
sub
xchg
push
mov
mov
pusha
xchg
js
into
rcrl
xchg
aas
push
outsb
stos
orl
adc
out
fildll
imul
fcomp
imul
or
adc
jo
decb
movsb
clc
or
and
aas
cs
jns
ljmp
fiaddl
repz
pop
jge
dec
mov
outsb
pop
icebp
enter
xchg
inc
jns
push
ljmp
dec
adc
push
push
sti
add
add
sbb
inc
jge
repz
inc
sahf
jle
add
iret
es
fistl
xchg
and
push
scas
test
nop
jle
push
pop
xchg
and
or
movsl
mov
lea
mov
fmull
pop
add
mov
jle
xchg
pusha
adc
rol
and
fisubs
xchg
mov
andnps
jmp
mov
fstps
and
aas
nop
push
out
stos
cwtl
out
inc
dec
push
mov
inc
mov
sbb
xchg
jno
add
mov
sub
loopne
and
scas
sarb
inc
push
scas
dec
insl
mov
push
mov
push
pop
ljmp
dec
lahf
push
mov
xor
movsl
mov
pop
pop
mov
inc
enter
or
xchg
xchg
popf
dec
das
paddw
mov
lds
xor
and
push
jp
pop
loope
icebp
jne
or
jno
ror
mov
lahf
lcall
xor
into
xchg
inc
ret
fsubrp
scas
outsb
mov
jb
cli
cmp
mov
cld
cmp
das
mov
shlb
popf
jmp
shlb
xchg
sbb
notb
cld
ret
dec
mov
sbb
ret
pop
xchg
mov
push
cltd
dec
stos
lock
mov
data16
les
jg
das
dec
mov
popl
lods
stos
lds
rcrl
push
push
ret
xor
inc
mov
stos
sub
mov
ds
push
leave
filds
adc
push
clc
pop
jae
cmp
add
xor
cmp
loope
out
clc
fdivrp
out
popa
or
xchg
lods
mov
sub
mov
arpl
dec
jg
cmp
mov
aas
loopne
andb
or
movsb
ja
sbb
ficoml
clc
xchg
movsl
iret
jge
jo
cmp
fdivrl
xlat
push
push
cmpsl
xlat
in
les
fidivrs
popa
pop
and
adc
cmpsb
jle,pn
jnp
shrl
push
dec
stc
scas
jnp
mov
icebp
pushl
inc
test
push
jp
rcll
nop
enter
les
pop
inc
cmp
push
push
stos
sbbb
loopne
xchg
addl
push
stos
cmpsl
mov
pop
mov
test
cmp
jle
push
rclb
insb
dec
and
jo
movsb
inc
xchg
inc
jno
pop
jmp
xor
sbbb
aas
aaa
sbb
mov
frstor
sub
sbb
loope
ret
mov
sub
mull
jae
ja
movl
xor
aaa
and
ja
out
daa
sbb
dec
add
pusha
cmpsb
adc
dec
inc
bound
lock
push
daa
mov
pop
add
xor
mov
addr16
sbb
imul
ss
out
inc
push
mov
out
ljmp
das
fisttpl
test
das
push
mov
in
mov
xlat
cli
mov
dec
gs
in
xor
cmpsl
mov
jp
dec
adc
and
xchg
loop,pt
jae
xchg
stos
jmp
sti
in
mov
fdivrp
data16
fsubl
adc
jbe
add
jae
loop
orb
std
xchg
test
mov
or
pop
mov
dec
mov
stos
insb
int3
nop
imull
pop
mov
arpl
push
repnz
fstl
jge
inc
sbb
ret
push
outsl
aam
xor
arpl
xor
lret
cltd
pop
lcall
push
mov
ret
les
cmp
fwait
and
xor
xchg
mov
dec
in
ljmp
inc
push
imul
int3
xor
insb
imul
cmp
pop
cmpsl
cld
jmp
int3
rcrl
push
stc
adc
jne
push
shr
out
sarl
cmpsb
lcall
adc
das
mov
mov
dec
fs
popa
lods
xorl
sub
pop
lahf
pop
xchg
sbb
sub
ds
out
pop
orb
mov
adc
inc
nop
sub
loop
push
neg
and
aas
cmpsl
addl
pop
pop
leave
stos
add
jmp
xchg
stc
mov
mov
ja,pt
fcoms
test
fildl
and
sbb
out
icebp
jbe
xor
lcall
pop
mov
divl
xchg
subb
jmp
jmp
rclb
in
fs
pop
cmc
xchg
pushf
ret
outsl
pop
sbb
xor
add
repz
insb
push
testb
mov
mov
mov
push
jmp
lods
out
ret
xchg
testl
aad
stos
mov
sub
movb
and
push
shlb
daa
add
idivl
inc
xor
jo
fistpl
jnp
gs
add
cltd
out
mov
lahf
es
push
imul
mov
sbb
out
cmp
dec
xchg
xor
out
in
xor
sub
xor
dec
inc
dec
mov
outsl
imul
jmp
call
icebp
insb
out
push
push
insl
sub
mov
in
add
fisubrs
pop
stc
addr16
iret
inc
mov
cmc
or
bound
pop
or
loope
adc
jbe
mov
push
cmp
add
pop
mov
popf
sbb
push
or
xchg
das
lcall
xchg
dec
inc
pop
stos
test
imul
jle
sub
sbb
mov
push
lods
fidivl
arpl
scas
test
arpl
data16
xchg
sbb
std
icebp
cld
cltd
and
loope
pusha
shl
aas
fxch
jbe
outsl
push
pop
cli
lret
sbb
jp
lret
mov
dec
sbbl
fsubrl
sbb
stos
or
fisubs
test
push
movsl
push
xchg
addr16
test
push
aam
xchg
push
xor
xchg
pusha
orl
mov
jns
sub
mov
into
mov
xchg
shld
inc
das
fcmovbe
inc
xor
lahf
push
in
push
adc
in
fs
or
in
cli
movsw
fcomp
or
or
lods
jae
push
pop
cmp
sub
mov
mov
jle
lret
mov
cld
cld
sub
and
push
sbb
fimuls
jge
mov
int
ret
or
push
subl
lahf
mov
xchg
add
push
cld
jecxz
aam
xlat
jle
sbb
scas
imul
ficomps
xchg
xchg
add
mov
sub
xchg
mov
jge
add
or
shll
cltd
xchg
popf
out
inc
mov
shrl
mov
ss
cld
push
movsb
lods
ss
lods
xor
jl
ret
xchg
adc
in
fdivrs
out
aad
sub
mov
sbb
rcr
je
xchg
adc
rcr
mov
inc
push
ljmp
mov
ss
aad
sbb
out
add
sbb
jle
dec
add
fldl
es
outsb
fldl
dec
inc
mov
data16
data16
jl
dec
dec
cltd
stc
scas
pop
std
inc
rorl
inc
xchg
cmp
sbb
or
jno
inc
mov
fnsave
pop
popa
movsl
adc
mov
xor
add
leave
pop
mov
fs
ja
je
lcall
scas
aaa
fcoml
and
fcomps
xchg
sub
adc
mov
stc
mov
les
int3
mov
xor
sbb
push
popa
xlat
jl
imul
jne
popf
pop
movsl
mov
push
xchg
loope
shrb
sbb
jo
jns
adcl
hlt
push
cmpsl
es
inc
push
aad
cmp
push
sub
shl
dec
xchg
mov
add
jae
ja
mov
jmp
push
es
cmp
pop
mov
lahf
js
add
dec
jmp
pop
in
orl
cs
jmp
xor
rcr
inc
je
add
cwtl
je
pop
not
lods
xor
mov
inc
stos
xchg
rcrl
and
pusha
adc
stc
inc
cmp
stc
pop
mov
fwait
push
insb
push
push
jae
sbb
push
sub
cmp
dec
repnz
cmpsl
jg
inc
inc
call
push
mov
repz
enter
ss
pop
cmp
ds
pop
adc
lret
pop
sahf
xchg
cld
repnz
les
inc
jp
inc
sbb
xor
pop
or
cmc
xor
add
addl
loope
inc
fidivrl
push
adc
pop
xor
xchg
adc
jmp
lcall
mov
sahf
shlb
inc
or
aam
pop
or
dec
repz
jbe
mov
inc
mov
push
xchg
pop
jecxz
in
iret
cmp
jne
mov
cltd
js
cmpsl
cli
scas
leave
pop
mov
in
add
out
lods
jo
mov
insl
insl
ffree
jmp
in
into
xchg
cs
inc
filds
imul
jae
stos
pop
call
cltd
inc
outsl
and
lods
xor
sbb
sbb
ja
in
inc
out
shl
jo
out
adc
add
adc
mov
sub
fsubrl
pop
mov
fistl
sbb
lock
sahf
cli
adc
mov
arpl
stc
push
mov
and
xchg
mov
inc
cmpsl
cs
adc
pop
test
fidivl
sub
je
je
xor
pop
fsubs
or
test
bound
pop
push
repz
dec
dec
aas
daa
icebp
mov
lret
sub
ror
push
mov
add
test
xor
in
sbb
lcall
jbe
lret
add
int
xor
inc
test
mov
mov
mov
imul
lods
mov
insb
mov
fisttpll
imul
aad
push
aad
or
imul
jns
les
cmc
inc
inc
lods
aaa
popf
jge
scas
stc
out
cld
xchg
lcall
jge
sbb
xchg
je
sub
dec
mov
xchg
fiadds
mov
add
movsb
sti
call
out
jb
inc
push
jle
inc
stos
lret
mov
xlat
imull
dec
pushf
adc
cmpsl
mov
push
add
xchg
es
scas
mov
in
pop
repnz
dec
sahf
and
pop
popa
lret
xor
das
dec
cmp
fcoml
pop
push
into
and
add
repnz
fnstsw
mov
push
jmp
push
jnp
pop
cmpsb
fadds
dec
add
or
leave
imul
ss
adc
ds
jne
mov
repz
jmp
adc
stos
mov
iret
test
lea
pop
sub
shll
add
dec
roll
sbb
jae
lahf
and
clc
fwait
mov
mov
push
pop
pop
mov
pop
push
push
push
test
icebp
add
push
mov
adc
js
xchg
sbb
fnstcw
push
leave
push
lret
fsubs
inc
sbb
cltd
sbb
mov
call
lods
scas
mov
je
jl
or
mov
ficomps
jg
cmp
loop
xchg
clc
js
xchg
jnp
push
icebp
push
adc
sbb
faddp
mov
ret
mov
fmul
sbb
sbb
or
je
adc
cmp
pop
dec
test
fwait
pushl
mov
push
mov
idiv
add
ret
cwtl
jecxz
lret
popa
mov
aaa
mov
push
pop
fisubrs
dec
insb
pop
add
or
jne
dec
mov
or
mov
aaa
iret
pop
sub
pop
mov
imul
ljmp
rcll
mov
repnz
cmp
lahf
pop
sarl
or
das
mov
loope
out
out
and
insb
push
jae
into
pop
inc
lock
cmc
imul
sub
hlt
lea
arpl
fwait
mov
bound
into
lock
xor
adc
clc
scas
mov
pop
and
out
shrl
fcoms
pop
and
lea
mov
imull
shll
sbb
push
adc
pop
cltd
fwait
cmc
lahf
into
and
push
mov
pop
pop
xor
fwait
imul
es
add
inc
nop
sbb
sahf
mov
add
insb
outsb
aas
xchg
push
aas
arpl
sbb
les
scas
movsb
dec
cmc
pop
arpl
mulb
jb
roll
add
sub
push
cmp
rclb
sub
sub
mov
mov
sub
adc
aaa
ss
stos
insl
fisubrl
aas
jo
test
lods
repz
or
out
xor
or
sbb
jmp
lods
xor
imul
rcll
sbb
mov
pushf
sbb
fwait
push
xorl
and
imul
mov
leave
dec
mov
mov
mov
loope
jns
lods
and
scas
aaa
mov
or
mov
jb
push
adc
xor
jae
adc
jo
scas
stos
out
sub
pop
imul
sub
mov
daa
stos
jle
dec
mov
fisttps
stos
hlt
andb
in
push
stos
mov
push
and
jge
jne
out
xchg
sbb
inc
dec
outsl
stos
sub
ret
jp
add
and
cmpsb
add
scas
push
dec
mov
push
arpl
sete
loopne
cwtl
xor
mov
and
inc
dec
and
scas
shlb
push
jg
sub
rcrb
lret
push
stos
xor
les
jns
iret
mov
inc
and
xchg
xchg
movsl
or
int3
in
je
insb
stc
loop
jl
clc
scas
addr16
cmpsl
jns
sub
ss
or
ja
lods
jg
stos
xor
push
lret
mov
lahf
sbb
push
movsb
idivb
adc
idivb
leave
push
cmp
rcrl
adc
jg
int
sub
paddq
andl
mov
jg
inc
daa
into
sub
inc
xor
lea
push
in
push
pop
fxch
scas
pop
mov
out
pop
push
mov
stos
mov
pop
loopne
mov
push
sbb
inc
push
add
icebp
sahf
pushw
adc
push
mov
mov
aam
jne
add
jne
jne
add
xrelease
inc
out
ret
mov
lahf
jecxz
data16
xchg
mov
cltd
testb
xchg
inc
pop
mov
pop
cmp
mov
cltd
sarb
adcb
push
mov
push
sub
in
cmp
mov
repnz
inc
push
push
dec
add
loop
call
or
bound
fsts
out
adc
cmp
push
push
sbbb
inc
incl
test
adc
jp
mov
sub
xor
dec
mov
pop
mov
shll
xchg
hlt
ret
xchg
lret
push
aam
or
jb
pusha
sub
arpl
lods
outsl
aam
imul
cmp
dec
jb
in
test
mov
mov
jg
pop
nop
sbb
ljmp
cmp
fwait
in
mov
adc
push
cmp
jmp
or
add
jns
xor
cs
lret
or
add
inc
fsubs
adc
les
dec
loop
repz
dec
xor
mov
add
mov
sbb
sub
popf
dec
mov
fidivrl
or
xchg
pop
stc
test
dec
and
xor
and
sarl
cmpl
xchg
lds
sub
movsl
mov
dec
addr16
fadds
shl
push
jns
int
xor
jnp
pop
scas
mov
and
popa
sbb
pop
pushf
sets
mov
inc
lea
pop
cmc
enter
int3
notl
xor
pop
pop
or
or
data16
imul
or
fildll
fdiv
jmp
lret
in
inc
and
mov
and
mov
scas
inc
insl
mov
test
xchg
jo
loop
add
shll
aas
cs
sbb
shll
cmp
jno
notb
mov
scas
cmpsl
xchg
cltd
nop
fisttpll
test
mov
cmp
cmpsl
add
adc
xchg
jmp
inc
xchg
inc
sahf
mov
rolb
fxch
sub
and
ja
mov
or
mov
pushf
sub
pusha
into
rclb
mov
xor
dec
xor
xor
mov
jno
mov
lock
push
loope
idiv
push
sbb
out
fwait
xchg
in
movsl
mov
fpatan
add
aad
push
jnp
push
push
xor
aas
sub
daa
mov
testl
mov
insb
mov
lret
inc
sub
mov
add
fxch
push
or
inc
lahf
ss
mov
mov
inc
iret
and
or
aaa
out
outsb
in
push
mov
loopne
icebp
xor
scas
pop
and
lret
mov
icebp
adc
mov
push
inc
jecxz
fldt
mov
jnp
push
inc
in
popfw
mov
in
testl
in
inc
lea
mov
and
xor
ret
daa
mov
jecxz
adc
enter
mov
aas
div
in
sbb
jge
or
mov
daa
nop
xor
add
int
and
ret
mov
jno
bound
xor
out
add
ret
sbb
mov
aas
outsb
mov
pop
or
and
inc
jo
jmp
std
data16
sar
shl
mov
ss
out
scas
or
push
divb
mov
ret
in
mov
add
movsl
inc
sar
js
fisubrl
pop
pop
xchg
sub
cli
test
push
test
inc
push
fcoml
add
add
add
inc
sub
cmp
sub
pop
mov
leave
push
sub
xor
pop
sub
loop
mov
or
dec
push
or
mov
push
sarl
mov
fldt
mov
or
fs
jmp
je
push
imul
cmp
mov
scas
inc
mov
inc
out
out
pushf
pop
jne
popl
cmpsl
insl
jo
mov
cwtl
cmp
sbb
lcall
test
ror
shll
inc
lcall
leave
test
je
pushf
pop
pushf
decb
jge
dec
imul
jecxz
pop
imul
iret
mov
xor
orl
pushf
mov
cmpsl
sub
insb
xorl
mov
cld
jmp
xor
in
sub
jbe
sbbl
pop
mulb
pop
jns
push
or
cmp
pinsrw
lahf
loope
xchg
je
daa
dec
xor
movsl
nop
aaa
ljmp
cmp
push
fidivrs
movb
data16
adc
lcall
int3
mov
sti
xchg
testl
xchg
rcll
inc
call
dec
push
cmp
into
push
adc
adc
mov
jp
add
outsb
cmp
push
dec
sub
mov
xor
jo
addr16
movsb
cmp
or
bound
sub
mov
sub
or
shll
jl
dec
cs
push
xchg
bound
loopne
mov
fcompl
sub
push
js
cltd
outsb
xchg
xor
xchg
les
js
cltd
shl
mov
daa
cmp
sub
xor
sbb
dec
mul
outsl
push
jecxz
xor
roll
mov
test
pop
stos
and
pop
mov
mov
mov
jge
xorb
loop
in
xchg
xchg
sub
or
cmp
xchg
aas
add
out
sub
outsl
xchg
pop
xor
xchg
insb
xchg
in
je
sbb
mov
xchg
sbb
je
xchg
jecxz
divl
out
dec
cs
xchg
fucom
xor
or
pop
mov
inc
fdiv
ret
or
bound
inc
fldenv
or
je
mov
dec
mov
movsl
lret
sbb
xor
pop
adc
mov
dec
test
jae
pop
lea
dec
mov
push
js
fwait
scas
lret
push
cmpb
mov
and
out
addr16
push
pop
mov
push
repz
cmp
rcrb
cmp
jmp
and
cmp
stc
mov
clc
nop
cmc
aam
mov
popa
pushf
or
pop
fimuls
pop
mov
xor
aad
xor
sbb
ret
add
mov
sbb
adc
push
cld
xor
hlt
cmp
xlat
xchg
ljmp
shrb
clc
sub
cmpl
addr16
fs
cmp
out
dec
xor
sbb
adc
pop
enter
adc
xchg
loope
lea
inc
sbb
cmpsl
shll
in
push
cmp
adc
sarl
add
xor
adc
sbb
push
pop
cwtl
mov
gs
adc
push
outsl
mov
les
test
sub
divb
inc
out
mov
je
lock
pop
sub
xlat
in
and
hlt
pop
std
shll
dec
xor
jecxz
mov
push
xchg
jl
mov
mov
mov
adc
mov
ss
imul
dec
lock
adc
cmc
aam
lds
outsb
mov
std
adc
xchg
test
out
test
pop
sahf
mov
dec
add
sub
movsb
cmp
sub
lock
jle
mov
inc
iret
and
mov
test
or
test
xlat
test
adc
js
mov
stos
pop
data16
push
out
shl
push
pop
adc
fs
jne
das
subb
mov
adc
loope
mov
fdivrp
lock
jne
leave
push
mov
push
and
clc
push
sbb
xchg
clc
xor
cmp
jns
fs
lcall
push
and
out
mull
inc
sarb
loopne
inc
push
mov
outsl
dec
es
cmpl
dec
and
aam
xor
aaa
lret
add
mov
ds
xchg
lds
pop
movb
fadd
cmp
pop
or
outsb
jmp
xchg
push
and
leave
in
test
jmp
or
and
jl
mov
les
cmc
xor
inc
movl
mov
cmpsb
aad
in
lods
mov
out
cmp
je
inc
orb
adc
sub
jle
mov
sub
fcomp
movsb
lock
out
mov
repz
sub
lods
cmp
ret
loopne
out
xlat
mov
mov
je
call
movsl
fs
add
sbb
in
push
jg
js
int
aam
xchg
int3
pop
xchg
out
fadd
test
ret
ds
cmp
sahf
push
scas
push
xchg
push
dec
jge
mov
adc
add
sti
inc
adc
in
ret
sub
sbb
mov
pop
mov
dec
mov
sbb
sahf
mov
add
inc
std
pop
imul
jb
test
out
pop
jo
insl
push
insl
and
shr
mov
adc
test
ss
pop
out
ds
lret
ret
hlt
test
or
lcall
cwtl
push
mov
into
push
mov
call
xchg
add
sub
cmp
adc
hlt
loopne
fiadds
in
cli
push
sub
xchg
jae
std
incl
dec
clc
xor
aaa
sub
pop
push
stos
push
fs
mov
sub
dec
adc
fdivrl
cmp
mov
popa
pop
pop
clc
adc
jmp
notl
std
loop
data16
mov
dec
pop
cmp
daa
add
adc
dec
pop
sub
and
out
arpl
xchg
movsl
mov
dec
rep
rcr
scas
mov
push
imul
xchg
out
mov
or
aaa
movsl
test
inc
cmp
outsb
add
xor
fstl
jo
sbb
adc
add
sub
add
cld
jle
sbb
cmc
outsb
sahf
in
test
mov
decb
fwait
mov
cwtl
lock
aaa
ds
loope
fld
xchg
sbb
pop
fadds
sbb
cwtd
divb
mov
fucomip
jns
or
push
push
xchg
jg
push
les
repnz
sarl
icebp
or
jle
xchg
inc
cmp
sbb
mov
in
outsl
push
nop
aaa
test
sahf
dec
addr16
push
in
cmpl
loopne
test
push
cld
out
std
inc
xchg
mov
jmp
aad
lods
loopne
pop
pop
pop
imul
cltd
ficomps
xchg
rcrl
rcll
and
loope
and
inc
out
or
imul
xlat
xchg
lds
dec
aaa
jmp
lds
sbb
fisubl
jle
in
lds
imul
and
js
fnsave
cmpb
in
inc
shl
cmp
dec
lods
out
xor
call
fildll
cmp
or
sbb
mov
push
in
notl
or
addl
push
les
and
add
je
or
fcmovbe
das
insl
xchg
and
icebp
xchg
mov
xchg
adc
jns
stc
or
iret
adc
iret
fs
xor
lods
insb
mov
sbb
rorl
arpl
faddl
test
mov
lret
outsw
sbb
lods
sbb
add
push
out
push
lret
mov
dec
icebp
sub
xor
movsl
or
fs
mov
cs
ds
stos
mov
negl
in
hlt
add
ficoml
jl
movsb
pop
lea
movsb
stos
jp
push
mov
push
jnp
mov
push
flds
notl
subb
push
inc
lcall
pop
push
lea
ja
cmp
andl
adc
jg
andb
mov
xchg
aaa
fiadds
dec
mov
popa
xchg
cwtl
mov
pop
sub
scas
in
fxch
rcl
nop
mov
pop
ljmp
cmp
ret
add
add
sbb
xchg
push
mov
ljmp
mov
push
adc
adc
fsub
or
jmp
icebp
sahf
mov
out
mov
in
dec
dec
shll
clc
dec
loope
mull
lock
in
ds
les
jg
sbb
push
mov
jl
lret
psubsb
sti
mov
sahf
sahf
inc
call
cld
xchg
testb
jb
xor
neg
cwtl
subb
inc
adc
fs
lea
mov
sub
mov
imul
mov
inc
adc
shll
or
fsubl
fstl
sub
mov
scas
xor
pop
jne
inc
sti
rcll
pop
lret
pop
add
adc
jno
cmp
xor
cmp
je
mov
data16
test
inc
cwtl
push
fmull
pop
mov
jb
bnd
in
out
sarb
bound
push
push
lods
insb
insb
mov
jns
loop
and
push
inc
cmc
or
push
inc
mov
push
add
int
jns
xor
jmp
rcl
in
add
xorl
mov
lea
mov
add
sub
inc
jo
call
mov
into
push
inc
xor
pop
xchg
dec
movups
pop
xor
out
and
pop
data16
icebp
scas
sub
clc
clc
cmp
push
pop
xchg
mov
dec
push
adc
and
jno
xchg
xchg
inc
fnstsw
add
fisubrl
dec
ficoms
subl
pusha
xor
scas
loop
out
fbld
mov
lret
shrl
popa
icebp
mov
out
cmpb
imul
pop
icebp
cmpb
out
das
mov
jb
dec
lret
xchg
cmp
mov
push
insl
or
fisubrl
and
rcll
sbb
cmp
ret
in
push
push
jp
mov
pop
mov
adc
adc
arpl
movsb
push
into
mov
arpl
mov
sbb
or
mov
out
push
fimull
jo
jmp
popa
push
outsl
inc
leave
dec
push
fidivrl
jmp
jb
aas
mov
int
xchg
push
scas
pop
aaa
and
data16
cmp
jno
cmpsb
and
cmp
jl
loop
jae
fstps
es
movsb
jg
daa
pop
fisttpll
inc
std
test
sbb
pop
mov
sub
adc
out
mov
mov
js
cltd
les
std
xor
push
dec
pop
ffreep
inc
andl
outsl
inc
stos
sbb
pop
cmp
add
loopne
out
sarl
inc
lock
or
pop
roll
sub
sbb
add
jge
adc
pop
fisubrs
stos
int
mov
mov
dec
push
roll
push
mov
ja
idivb
imul
sbb
or
sbb
lret
sbb
adc
nop
in
adcb
cmp
jmp
cmpl
fstl
dec
test
bound
aam
lods
jg
pop
mov
inc
fdivrl
repz
repnz
cld
adc
test
andb
mov
fadds
js
mov
test
sbb
or
dec
repnz
repnz
fwait
and
lea
pop
sbb
mov
js
xchg
pop
cmpsb
ljmp
out
or
xchg
adc
sub
psubq
inc
outsb
stc
mov
xor
sahf
mov
les
inc
lds
adc
nop
ja
stc
mov
jle
push
jge
mov
mov
adc
ss
cmc
call
add
lcall
imul
dec
jno
xchg
jg
jge
cmp
adc
adc
or
bound
stos
pusha
das
aam
or
ftst
cmpsl
pushf
mov
sbb
enter
inc
inc
xor
inc
gs
repnz
mov
pop
xchg
mov
mov
aam
and
xor
sub
in
xor
aad
cld
push
sub
fisubrs
push
pop
es
xor
rorl
adc
fdivl
imulb
pop
flds
xchg
cmp
hlt
push
aam
mov
sub
pop
movsl
aas
add
xor
dec
cmp
icebp
fisubrl
fcoml
addr16
insb
in
fldt
sahf
mov
lret
icebp
flds
popf
jle
pop
cmpsb
adc
mov
push
dec
cmp
xchg
push
bound
inc
pop
pandn
mov
sub
lods
rorb
outsb
cmp
mov
mov
xchg
pop
test
test
jbe
mov
jge
xlat
or
test
stos
sbb
rclb
mov
xchg
cmp
adc
int
mov
xchg
mov
jecxz
fwait
cmp
js
and
out
call
cmp
sbb
lods
cmc
and
fwait
lods
icebp
imul
push
push
andnps
xor
fimull
adc
icebp
fldt
fucomip
dec
cld
les
jb
jbe
stos
sbb
fisttpl
xchg
lcall
fdivl
stc
ja
inc
outsl
aaa
pushf
cli
dec
xor
sbb
out
ret
jmp
repnz
arpl
mov
call
scas
jnp
lcall
mov
inc
cltd
push
pop
fisubrs
lods
push
push
sbb
mov
shrb
pop
fisttpl
repnz
incl
scas
mov
loopne
dec
xor
xor
in
jo
lret
imul
in
movsl
and
roll
xchg
pop
mov
lcall
aad
push
mov
sbb
mov
dec
lcall
js
push
repnz
lods
mov
outsl
out
xbegin
cmp
mov
xorl
pop
mov
cmp
adc
cmp
or
aad
scas
mov
out
les
dec
popa
inc
cld
in
pop
subb
push
push
mov
mov
sbb
nop
cmc
cmp
or
add
rol
rcl
mov
faddl
hlt
sbb
daa
sub
push
pop
xchg
loop
lock
clc
sahf
fwait
lea
add
mov
scas
jno
jge
sbbl
sbb
mulb
out
cli
push
mov
out
push
test
jae
cwtl
lods
cld
test
push
sub
in
stc
adc
mov
sarl
movsl
movsl
lret
fidivrs
out
xor
push
pop
out
scas
pop
in
rcl
sub
mov
mov
dec
add
mov
pop
cmp
repnz
dec
vmovapd
arpl
push
xchg
pusha
lret
sub
outsb
jno
stc
in
cltd
in
push
push
or
rcr
sbb
fisttpll
test
outsb
inc
add
cwtl
int
pusha
cld
sarb
aam
mov
addl
enter
dec
stos
sbb
jmp
sub
cmpl
in
xor
int3
stc
lcall
and
lods
lods
movsl
into
repnz
sub
xor
lret
or
pop
fstps
xchg
and
dec
jecxz
pop
push
jecxz
mov
sub
cmpl
out
fistps
and
mov
popa
cmp
mov
stos
and
popf
push
mov
ret
dec
sbb
or
es
in
inc
std
addr16
lcall
push
or
loopne
je
push
loope
sbb
loope
dec
adc
xor
lret
shrb
rcrb
into
test
mov
lea
lea
test
jb
cmp
out
cmp
sti
test
sbb
loopne
cmp
pop
inc
push
loop
or
or
lea
push
sub
pop
dec
incl
nop
and
fdivl
push
in
sbb
jne
dec
andb
pop
nop
fbld
ds
sahf
call
or
je
mov
imul
mov
adc
push
imulb
and
frstor
mov
pop
loopne
and
pop
adc
or
lret
aaa
mov
and
stc
lret
mov
pushf
lret
fisttpl
mov
idivl
movsl
dec
rcrb
xchg
pop
loope
push
mov
loopne
cltd
lret
das
pop
add
out
dec
dec
dec
mov
mov
push
int3
insl
sahf
lea
pop
mov
cs
add
pop
mov
push
cli
out
cli
pop
lret
in
jge
inc
or
call
out
or
imul
stc
push
inc
inc
mov
sbb
out
xchg
and
pop
rorb
and
fmull
cs
stos
sti
mov
int
mov
jmp
xchg
cs
cli
sbb
add
imul
imul
in
cmp
shlb
mov
imul
xor
enter
test
sbb
loop
jb
lock
loopne
fcmovnb
in
lcall
inc
fadds
pop
adc
jg
std
fmul
rcrl
mov
scas
mov
inc
mov
scas
imul
cmpsb
fwait
pop
rorl
dec
adc
fistpll
clc
mulb
mov
fcmovu
and
jne
shlb
add
std
xor
test
ljmp
jnp
or
add
je
sbb
jno
or
cmp
push
cltd
xchg
addb
inc
cmpsl
rcrl
jp
popa
xorl
imul
jmp
fists
push
hlt
cmpsl
cmpl
pop
push
sti
cmp
in
pushl
fnsetpm(287
add
add
in
cmc
jp
jnp,pn
call
mov
pop
push
test
xor
sbbb
jnp
fmull
mul
int
fsubs
leave
mov
cmp
or
fists
bnd
ljmp
js
or
fidivl
adc
push
mov
xchg
nop
dec
cmc
push
push
int3
icebp
out
or
cld
mov
enter
sbb
or
out
push
push
ljmp
cmp
cmp
fsubl
fwait
pop
mov
leave
out
sub
icebp
std
lahf
aad
ret
jnp
or
add
dec
mov
xlat
inc
stc
stc
mov
mov
nop
pop
xchg
insl
jns
inc
lcall
push
das
xchg
jp
sbb
inc
xor
insb
push
and
rcrl
roll
xor
or
mov
and
pop
fsubp
pop
ljmp
aaa
aaa
imul
pop
push
or
test
pop
icebp
data16
jp
adc
inc
mov
addr16
adc
mov
or
sbb
fildl
sub
xor
xchg
add
mov
push
insb
or
rcr
mov
xchg
dec
fwait
push
daa
sub
cltd
fbstp
call
mov
out
andb
bound
push
xor
jo
push
cmp
lds
inc
jne
cmp
stc
or
xchg
test
loop
test
fildll
or
inc
scas
loopne
add
inc
inc
into
jne
aaa
rcr
repnz
push
jb
adc
sbb
cmp
jl
pop
pop
and
dec
jbe
or
mov
pushl
imul
inc
push
divb
jnp
sar
cli
push
out
bound
jno
adc
sbb
and
xor
dec
pop
scas
arpl
push
push
std
push
mov
mov
or
std
out
cli
adc
rcll
dec
sbb
mov
int3
add
or
fstps
leave
aaa
cmp
cld
sub
std
xchg
inc
dec
pushf
sub
movl
jnp
lahf
mov
pop
pop
mov
pop
sub
inc
sbb
sbb
shll
dec
mov
scas
and
lahf
outsl
fwait
outsl
add
jle
jno
pop
out
jns
test
dec
inc
lock
xor
shrb
pop
mov
enter
add
mov
adc
aaa
or
cltd
enter
inc
sbb
or
pushf
inc
cmp
inc
cmpsb
cmp
es
sarl
test
fstenv
mov
sub
xor
xchg
jmp
arpl
fnstsw
incb
repnz
into
add
sub
shll
std
pushl
pusha
push
int
aas
stc
loop
and
jecxz
jae
or
insb
int3
cmp
jmp
adc
aaa
stos
repz
xchg
mov
xchg
addr16
imul
call
mov
ret
mov
sbb
jge
mov
scas
mov
test
cmp
or
sbb
mov
addr16
or
rorb
sbb
mov
dec
outsb
out
pusha
iret
gs
arpl
les
mov
inc
jmp
sbb
lahf
cmp
ja
loopne
arpl
fwait
xor
lods
jnp
push
pop
inc
leave
mov
adc
push
nop
inc
cld
push
xchg
dec
mov
adc
movsb
mov
xchg
cltd
sbb
das
scas
cltd
cltd
iret
add
call
insb
movsl
push
sbb
outsl
test
aam
repz
ror
stos
xor
push
lea
cmc
rorl
int3
push
cmp
mov
dec
loopne
into
js
push
adc
sub
fidivrs
push
xlat
rclb
mov
imul
push
fsubrp
sbb
fwait
ja
enter
add
jo
sbb
roll
int3
movsl
mov
repz
lock
cmp
add
negl
outsl
adc
xor
pop
mov
aam
sub
push
stos
jo
xchg
jbe
aas
cmp
test
and
and
clc
in
inc
dec
push
mov
mov
pusha
iret
cs
jg
rcr
inc
mov
inc
test
fsts
arpl
pop
cmp
int
insb
inc
mull
xor
icebp
xchg
test
gs
push
jb
std
inc
pushf
cmp
stos
iret
lea
cld
push
xor
cmc
jbe
push
pop
mov
aad
in
cld
add
aas
imul
mov
pop
dec
push
dec
and
xchg
cmpl
sbb
arpl
and
out
adc
aaa
sbb
daa
dec
pop
lret
cmp
adc
mov
cmc
sub
shlb
and
daa
fsubl
in
outsl
cmp
pusha
xchg
jg
xlat
rcll
xor
loope
shrl
rorl
das
jmp
decb
in
cmp
cmpsb
daa
cwtl
js
arpl
cmp
sbbl
js
adc
das
mov
mov
jns
or
xchg
ficoms
mov
sbb
sub
mov
mov
mov
lcall
sarl
repz
sbb
jle
scas
add
and
mov
cmp
jl
sub
cmpsb
or
mov
fisubl
or
faddl
dec
inc
jmp
aad
hlt
push
shl
imul
or
pop
js
arpl
sti
mov
sbb
cmpsb
pop
mov
mov
insb
pop
add
mov
lods
jbe
int3
add
dec
adc
sub
movsb
addb
pop
fdivr
nop
jnp
mov
sar
sbb
mov
sbb
mov
sti
add
subl
mov
rol
jb
pop
lods
int
call
in
mov
mov
clc
xor
pop
popa
dec
mov
xor
andb
sbb
in
loope
dec
inc
inc
push
and
push
xchg
sti
pop
es
mov
pop
pop
dec
int
xchg
mov
xor
cmpsl
pop
out
dec
imul
out
push
jbe
cmp
push
and
mov
xchg
xchg
hlt
sbb
sbb
fldt
mov
push
or
insl
fcomi
and
or
lcallw
mov
test
das
sub
loop
imul
jns
mov
shrb
sbb
mov
cltd
mov
std
fldcw
or
enter
outsb
cld
or
js
repz
jecxz
mov
insl
mov
aaa
bound
xchg
fsubr
les
pop
push
stos
sbb
out
pop
ret
pop
xchg
push
mov
sbb
xchg
and
bound
jecxz
sub
add
das
jmp
scas
outsl
xlat
jecxz
push
dec
les
add
mov
lret
mov
and
shrb
sbb
addl
mov
fwait
mov
xchg
fistpll
adc
inc
outsl
jae
jno
adc
testb
cld
imul
ds
test
test
cwtl
jmp
fildl
outsl
psllq
mov
mov
add
jb
jecxz
jb
or
lds
cwtl
into
aam
dec
negl
out
push
movsb
sbb
xchg
sub
cwtl
push
mov
stos
mov
xor
cld
nop
aam
xchg
nop
inc
mov
pushf
mov
stos
inc
xchg
cwtl
imul
arpl
std
bound
in
xchg
in
jmp
psrlq
call
mov
mov
mov
int
jo
cltd
pop
jl
inc
xchg
and
dec
es
cmp
sbb
jle
ret
inc
loopne
movsb
sbb
jb
push
rol
inc
pushf
push
dec
dec
dec
push
dec
xorl
hlt
pcmpeqw
lret
cmc
dec
shlb
xor
pop
lock
jecxz
sbb
pop
push
add
or
jae
cld
add
jno
test
xchg
popf
jo
add
movsb
cmp
mov
cmc
cmc
push
inc
cld
outsb
ret
inc
jbe
cld
bound
cmp
pop
dec
outsb
aad
sti
stos
insb
xor
pop
je
add
loopne
aas
jl
in
inc
sbb
dec
fwait
mov
icebp
adc
jg
outsb
inc
fs
in
gs
jp
push
sar
cmpsb
mov
or
add
fsubrl
sti
inc
ljmp
add
aam
push
ljmp
and
orl
cmp
pop
ja
pop
clc
shr
test
mov
sub
hlt
fisubl
xchg
or
and
sub
in
into
and
xchg
push
pop
repz
sbb
jle
decl
and
out
enter
jmp
test
cmpsb
dec
cwtl
inc
cmp
sub
jp
mov
outsl
pop
sub
sub
fdivr
loopne
int
outsb
adc
jle
loop
pop
outsl
mov
addb
sbb
hlt
inc
loopne
cmc
jne
sbb
ds
sub
mov
jbe
push
fistpll
cli
adc
lock
hlt
fs
cmp
mov
adc
add
push
stos
sub
push
jae
sti
dec
loope
pop
mov
jmp
or
add
cmpsb
sub
in
out
dec
adc
push
mov
inc
int
imul
jns
lods
xor
in
or
clc
popa
mov
repnz
lcall
sub
xchg
notb
lods
sahf
xor
xor
mov
dec
movsb
inc
xlat
mov
sti
fldenv
fbld
mov
xor
test
or
sub
lods
scas
dec
inc
sub
jg
mov
cltd
sahf
mov
mov
sub
ds
out
or
or
mov
xchg
clc
mov
and
push
fdivrl
ja
in
hlt
ret
shrb
dec
adc
mov
push
hlt
push
cmp
iret
mov
jmp
inc
sti
add
xor
fidivrs
pusha
cmp
adc
ret
inc
jge
mov
pusha
xchg
or
mov
in
inc
inc
jle
std
add
sub
mov
or
inc
and
fcomi
sarb
loop
ret
repz
ja
mov
xor
mov
jle
sub
pop
leave
data16
dec
mov
sbb
push
loopne
push
push
xor
lea
mov
in
gs
mov
cld
dec
mov
arpl
cmp
fcoms
int3
pop
sbb
movsb
pop
push
xor
pushf
jo
lahf
je
cmp
dec
nop
cmp
shll
insl
pop
in
cmc
stos
add
sub
popa
mov
jge
in
or
lock
pop
les
rorl
sub
dec
jle
addr16
and
push
add
repz
xor
and
jl
movsl
push
std
dec
xchg
nop
mov
outsb
xlat
fs
stc
sarl
movsb
pop
xchg
xchg
or
stc
and
imul
jae
test
fiaddl
in
lock
out
jbe
movsb
fs
fsubl
push
pop
adc
sbb
fs
popa
xchg
arpl
lahf
inc
into
cmp
fisubrs
and
sub
movsb
xchg
inc
jne
mov
adc
popa
sti
shll
inc
adc
cmp
pushf
or
fidivrl
jl
push
pushf
fwait
xor
mov
movsb
xor
mov
xchg
push
imul
aaa
mov
rcr
mov
add
dec
aaa
aam
daa
arpl
and
sub
xor
fildl
decb
cmpsb
hlt
aam
sub
in
jle
jb
into
xchg
aad
test
cwtl
imul
mov
push
mov
pop
xor
mov
lret
sbb
hlt
fwait
scas
and
pusha
in
and
inc
xor
mov
jns
cmp
movsl
ret
sub
inc
adc
cmpsb
dec
push
into
out
mov
fs
daa
inc
pop
push
popf
pcmpgtw
stos
jl
icebp
out
es
movhps
and
out
adc
or
movsl
fsubs
mov
sbb
paddsb
inc
and
gs
mov
jmp
in
mov
scas
andb
lea
daa
mov
test
xchg
testl
push
fistl
pusha
xor
icebp
add
mov
xchg
enter
cli
mov
mov
lods
out
sti
xor
push
push
daa
fcoms
rcl
sub
xchg
push
test
cmpl
aas
pop
xchg
rcr
sbb
sub
dec
fwait
sub
mov
mov
pop
push
out
sub
loopne
mov
and
ja
inc
movsl
jb
push
sub
dec
jle
xor
stc
xor
ret
push
testb
das
scas
adc
push
jae
repz
jmp
lods
or
jmp
xor
mov
enter
mov
out
mov
xchg
mov
sti
mov
fcmovnb
inc
sbb
lods
fwait
and
imul
jb
xchg
jnp
scas
and
fs
repz
jmp
iret
or
mov
add
sbb
dec
mov
popf
push
cli
leave
sub
outsb
out
out
mov
or
cmc
mov
jnp
pushf
sbb
imul
cmp
inc
ret
add
loopne
fldcw
dec
mov
xchg
scas
pop
and
push
aaa
pop
jbe
es
imul
mov
jne
xchg
sub
mov
push
sbb
jae
mov
lods
mov
popl
ds
jmp
push
bound
pusha
out
std
addb
xchg
mov
or
pop
cmp
mov
xor
fldl
int3
addb
xor
mov
ret
add
adc
sbb
jno
or
scas
xor
aas
xchg
or
std
mov
jns
testb
cmpsb
cmp
push
movsb
fcmove
push
scas
nop
push
mov
loope
enter
pusha
lahf
testl
jl
dec
and
pop
mov
cltd
adc
mov
bound
lods
aad
or
in
mov
inc
adc
sbb
xchg
stos
sub
jae
aaa
sbb
adc
hlt
add
or
mov
adc
insl
js
jg
sub
inc
fstl
mov
and
int3
pushw
sbb
inc
int
sub
and
mov
and
adc
mov
mov
xchg
push
jge
mov
adc
jb
add
add
sti
xor
aaa
lods
mov
jns
jle,pn
es
jns
sub
movsl
push
dec
xor
add
push
push
push
or
pop
mov
inc
aad
jb
in
xchg
or
outsb
mov
xor
pop
je
mov
fabs
or
sub
jp
push
jmp
loop
xor
pop
xchg
aad
mov
aaa
lock
xchg
test
jecxz
xor
sub
push
shrb
sbb
into
mov
sbb
jno
rol
cmp
cmpsb
popa
dec
aam
adc
fistps
ljmp
mov
mov
adc
sub
daa
inc
xor
push
out
andl
clc
add
jg
cmp
add
mov
cli
sub
jp
lret
in
cmpsb
adc
adc
lds
pop
insl
add
repz
rcrl
sti
sbb
clc
sbb
cmc
xor
mov
add
ret
in
mov
sub
mov
mov
mov
lods
popf
sub
clc
ds
push
mov
aas
outsl
gs
lock
sbbb
xchg
cld
push
outsl
mov
fdivr
pop
sbb
aaa
push
mov
inc
mov
sti
movsl
popa
sahf
mov
pop
out
push
lods
aad
mov
das
adc
fs
lods
das
dec
ret
pop
and
imul
xor
mov
fistl
insb
inc
inc
leave
xchg
mov
xor
push
jg
sti
leave
int3
lods
sub
cmp
subb
adc
push
call
es
jns
add
aam
dec
lret
mov
xlat
loope
jbe
enter
fsubrs
push
xorl
add
mov
or
push
pusha
mov
sub
fmuls
xchg
push
sarb
cmp
push
xchg
adc
pop
dec
and
jb
testb
gs
jmp
lret
pop
jl
push
xor
inc
lret
and
push
cltd
dec
fistpl
mov
and
xchg
js
push
and
pop
fnop
xor
aam
cmpsb
decl
fnsave
movsb
lods
stos
sbb
in
mov
insl
imul
int3
dec
cmpsl
pop
ret
in
ret
mov
nop
sbb
push
call
adc
in
dec
clc
xlat
push
push
lret
inc
cs
inc
push
add
stos
mov
add
jae
sti
mov
scas
fld
pop
sbb
aad
sbbl
mov
orl
int
daa
add
sahf
test
pop
icebp
test
test
fcompl
lds
pop
xor
popf
xchg
sbbl
jmp
cmp
imul
pop
insl
test
out
sub
adc
sbb
mov
xchg
add
daa
popa
mov
inc
rol
jnp
ds
push
mov
data16
xchg
rclb
sbb
jne
arpl
je
aas
mov
dec
pop
iret
push
dec
out
xchg
dec
cli
xchg
dec
mov
mov
arpl
dec
add
and
mov
sbb
jmp
mov
xchg
cmp
lcall
sbb
cld
xchg
dec
mov
cmpsb
cmp
pusha
jb
and
mov
dec
add
mov
pop
adc
aaa
out
hlt
or
ss
daa
or
or
add
cli
add
fstpl
cld
dec
mov
hlt
daa
mov
aad
mov
dec
xchg
push
cmp
ljmp
sbb
mov
aaa
setno
xor
enter
aaa
jp
movsl
mov
adc
subb
pop
xor
lods
inc
loop
gs
pushf
push
adc
mov
ret
pushf
sbb
mov
gs
outsl
and
cmc
push
push
sub
mov
lret
xor
cmc
or
xor
inc
mov
mov
cvtps2pd
adc
xor
mov
les
ja
sbb
test
or
or
pop
sub
add
lods
xor
adc
cli
cmp
dec
cld
hlt
das
jle
add
jge
rcrl
iret
imul
jne
xchg
jne
popf
ljmp
frstor
into
lcall
sahf
in
in
inc
jmp
aaa
and
lea
push
in
mov
faddl
outsb
fnstsw
in
mov
push
mov
cmpl
fcomps
sbb
cltd
cmpl
dec
jp
std
cwtl
scas
mov
outsl
cltd
sbb
mov
xchg
and
inc
add
clc
rcrl
jns,pt
sub
sub
mov
lret
xchg
or
pop
add
lret
mov
in
mulb
incl
jge,pn
sub
popf
jbe
fisubl
jnp
push
out
popa
in
arpl
bound
inc
pushl
pop
push
mov
orl
xor
inc
das
mov
xchg
ljmp
xor
dec
js
gs
jecxz
mov
rcll
inc
jns
inc
jle
jno
outsb
fisubrs
outsb
imulb
movl
mov
fcompl
pop
lds
push
mov
jb
shlb
mov
rolb
fists
cs
stc
sbb
jp
shlb
and
icebp
cmp
shlb
jae
dec
orl
jb
ret
pop
push
mov
jb
sbb
ret
mov
jo
add
sti
das
pusha
mov
lds
fwait
gs
inc
inc
inc
ret
aad
cwtl
clc
and
popa
ficomps
scas
cmc
rclb
loop
cmpsl
inc
mov
sbb
adc
aad
in
push
xchg
hlt
sbb
pop
das
ja
pushf
das
mov
sbb
aad
mov
mov
mov
pop
add
mov
in
ret
loop
sbb
or
sbb
outsl
mov
lret
test
mov
hlt
pop
fisubl
sahf
rolb
xchg
xchg
imul
imul
out
shrb
cs
scas
sbb
jge
push
mov
ficoms
jg
jl
mov
outsb
dec
test
in
and
mov
pop
push
push
cld
sbb
xchg
sbb
and
pop
jecxz
in
subb
data16
js
lahf
mov
jno
es
es
inc
aam
sbbl
sub
and
jg
inc
jg
mov
shll
in
or
mov
jle
jbe
ficompl
or
mov
into
lret
dec
lock
mov
adc
rcrb
out
dec
push
and
mov
shlb
sub
int3
in
mov
out
mov
cs
jae
clc
push
push
leave
mov
addr16
iret
insb
mov
std
insb
xlat
push
leave
pop
stc
xchg
scas
mov
or
cmp
xor
addl
subl
data16
enter
push
idivb
pushf
push
cmp
shl
mov
arpl
popa
cltd
fdivs
push
mov
test
fmul
inc
xor
dec
aad
int
fbld
mov
and
cmp
rorl
outsl
sbb
or
testl
sbbb
jecxz
mov
andl
lods
leave
jnp
dec
xchg
mov
popa
popf
enter
mov
add
lret
hlt
push
or
popa
in
in
mov
fwait
jle
pusha
or
ss
mov
jp
mov
xor
mov
xchg
cmp
ja
push
push
xor
xchg
inc
out
push
aas
jnp
aaa
negb
jae
jp
jmp
inc
jg
push
inc
into
nop
lods
jge
push
push
cmp
pusha
mov
dec
ja
es
arpl
and
inc
mov
mov
push
inc
inc
and
stos
push
mov
xchg
mov
outsb
lahf
cmp
sti
popf
faddl
adc
ljmp
cmp
out
in
fnsave
jmp
jns
mov
jnp
sbb
adc
inc
loop
pop
and
mov
xchg
inc
xchg
fsts
jno
xlat
insl
inc
add
push
mov
imul
push
mov
fdivl
cld
xor
rclb
pop
cmpsw
mov
int
mov
decb
sub
cs
mov
fcomi
jne
aam
test
jecxz
jns
pop
sti
mov
jg
jo
sub
mov
shrb
pop
inc
test
mov
push
xchg
in
gs
add
xchg
mov
fwait
cmp
ljmp
or
add
jg
ljmp
xor
aam
ljmp
sbb
jns
jge
xchg
andb
or
sub
into
lods
pop
movsl
or
icebp
addr16
mov
cmp
mov
dec
mov
mov
add
mov
out
in
js
loopne
idiv
or
push
sahf
mov
lds
and
dec
mov
sbb
mov
in
test
xor
mov
pop
mov
mov
mov
cmp
pop
bound
and
sahf
mov
insl
ficoms
hlt
xchg
push
fwait
incl
test
sub
imul
movsb
cmpsb
aaa
push
lods
adc
add
scas
mov
divl
push
int3
out
lret
sbb
inc
pop
cmpsl
push
lahf
clc
push
jno
add
cmp
jns
addr16
mov
sbb
bound
cmp
inc
repz
leave
and
sti
jmp
notl
shlb
mov
xchg
jg
mov
add
and
push
xchg
mov
jo
sbb
dec
cmp
fcomi
push
pushw
pop
or
cmp
jmp
and
out
out
rclb
insb
pop
mov
fs
fs
dec
xchg
push
lds
xchg
jnp
cltd
pop
imul
jbe
xor
out
add
sbb
mov
imulb
call
jp
enter
nop
cld
and
into
add
xor
arpl
jge
fchs
inc
dec
fwait
movsb
dec
dec
sbb
inc
push
outsl
rorb
mov
add
push
xchg
inc
mov
jbe
pop
test
dec
rcl
pop
addr16
test
xchg
sub
dec
jp
add
cwtl
sub
pop
pop
jle
or
inc
sub
adc
into
dec
rcll
cmp
aas
sub
int
scas
or
cmpb
and
mov
ja
push
lcall
lret
xor
pop
push
xchg
je
sti
sub
scas
or
push
push
sbb
cmp
insb
pop
mov
repz
sub
mov
mov
sbb
sub
push
push
mov
popf
loopne
andb
js
push
test
xchg
fwait
pop
lcall
and
jne
int3
xor
jns
std
in
cltd
add
mov
push
pop
xlat
mov
cltd
sub
adc
xor
insb
sub
loopne
or
push
cmpsl
mov
dec
dec
mov
rcrb
out
xchg
jns
fsts
sbb
ror
icebp
jge
add
push
movsb
add
xchg
or
iret
mov
cmpsl
jecxz
or
cwtl
nop
aad
repnz
mov
sub
sub
mov
xchg
cld
jge
pop
or
aas
push
je
test
arpl
sbb
mov
test
fnstcw
fimull
clc
jns
inc
mov
inc
inc
jne
shrb
test
add
sbbl
pop
mov
jne
inc
hlt
movsl
or
jb
xlat
imul
xchg
push
xchg
jnp
mov
lods
or
pusha
sbb
jp
into
jne
test
nop
aad
ficoml
aaa
jp
les
push
mov
sub
inc
jbe
jecxz
mov
fidivl
rcll
scas
cwtl
out
push
ret
les
or
sub
and
cs
pop
sbb
jb
jge
jge
enter
sub
fwait
jmp
sbb
xor
aaa
scas
imul
lods
ljmp
jo
lea
xchg
add
clc
mov
mov
dec
lock
lea
pop
cmpsl
rol
inc
pushf
mov
jl
push
push
jmp
or
cmpsb
daa
xor
outsb
call
push
cltd
or
cwtl
inc
pop
xchg
adc
push
retw
das
dec
inc
inc
insb
test
ret
aam
fwait
sahf
xorb
fwait
pushf
xor
iret
xchg
mov
movsb
sub
shrd
hlt
add
cwtl
addr16
movsb
rcll
aaa
add
dec
cmp
js
push
inc
sub
dec
hlt
inc
xor
icebp
adc
stc
lds
pop
adc
out
lahf
mov
fwait
popa
inc
mov
dec
aaa
xchg
addb
xor
mov
iret
mov
mov
sbb
sub
call
leave
fadds
adc
fsubrs
jnp
mov
jbe
adc
scas
add
mov
ret
ljmp
cs
sbb
pop
adcl
ret
fs
bound
js
xor
fscale
pop
inc
sarl
aad
insl
fldenv
in
cwtl
mov
xor
movsb
fcompl
in
lahf
stc
data16
call
call
adc
sub
add
in
movsb
sub
loop
call
std
lret
rcrb
movsl
cmp
or
gs
test
lret
leave
outsb
adc
pusha
or
call
dec
iret
mov
cmpsl
leave
aaa
fcomps
popf
call
loop
lcall
into
loop
enter
in
pushf
loop
lret
dec
aam
repz
jnp
lock
mov
xor
stos
fdivrl
xchg
mov
push
mov
outsb
dec
mov
popa
rcrb
push
mov
cld
sub
faddl
or
shrb
sbb
push
sub
mov
pushf
cmpl
push
movsb
mov
dec
nop
xlat
sahf
add
repz
sbb
inc
mov
pop
push
aam
xchg
repz
cmp
mov
mov
inc
dec
loop
fnstsw
aaa
or
dec
hlt
mov
shrb
loope
outsb
inc
in
cwtl
xchg
in
inc
xchg
cli
cmc
pusha
push
icebp
ss
popa
mov
out
mov
outsl
adc
jmp
jmp
roll
cmp
jge
mov
call
cmp
rcl
mov
popf
add
jno
nop
lcall
cmpsl
lret
sbb
mov
ljmp
test
scas
or
imul
pop
lods
add
out
mov
stos
test
or
xlat
jbe
js
shr
mov
xchg
jecxz
inc
lds
adc
add
fistps
and
mov
or
jnp
xlat
push
sahf
pop
or
mov
in
cmp
data16
pop
dec
pop
and
inc
sub
daa
loop
ja
ljmp
in
rclb
xlat
cwtl
and
test
ds
clc
push
outsl
aad
mov
out
int
loop
and
arpl
push
pop
and
pushf
fucomip
cmp
test
imul
das
sub
shr
xor
mov
imul
dec
or
sarl
inc
mov
jp
ds
cwtl
jnp
stc
out
sbbb
inc
mov
sti
push
lods
mov
mov
mov
mov
inc
xchg
mov
xlat
add
cmp
xchg
in
dec
xchg
jmp
cmp
sub
xor
cltd
mov
roll
mov
mov
in
rorl
mov
pop
xchg
addr16
mov
outsb
out
js
fnstenv
ret
dec
int3
mov
cli
cmp
and
stos
jno
push
xchg
inc
xchg
add
inc
orps
rcrb
lock
pusha
and
fnstcw
ljmp
and
xchg
js
rcrl
cmp
dec
imul
xlat
out
call
sbbb
dec
mov
scas
adc
in
shl
push
nop
cs
dec
orl
ret
sbb
or
xchg
adcb
xchg
shlb
call
js
mov
hlt
popf
jg
icebp
enter
push
sti
pop
sub
add
mov
sbb
das
aam
xchg
in
mov
xor
dec
xchg
xchg
clc
stc
pusha
or
pop
lock
mov
int3
or
mov
and
sti
inc
dec
add
push
add
add
jne
jg
inc
aas
mov
divb
pop
jle
dec
mov
inc
fwait
cs
add
insl
jmp
jnp
fsubrs
xor
push
add
cmp
sbb
push
call
aad
push
ja
cmp
push
nop
insb
clc
scas
out
dec
dec
push
mov
mov
sub
icebp
cwtl
loope
xchg
ret
dec
mov
pop
sub
test
daa
mov
adc
lret
outsl
xor
or
pusha
jp
push
js
icebp
iret
fsubrl
or
add
and
and
insb
mov
loop
iret
aas
aam
fcomi
xor
inc
stc
xlat
push
in
adc
int3
dec
push
cmp
mov
ds
add
arpl
aam
sub
sbb
mov
cmpsl
mov
add
pop
pop
cwtl
inc
rorb
mov
inc
and
cwtl
and
rcr
arpl
std
repnz
outsb
es
cli
sub
clc
jbe
mov
into
pop
push
fdivp
icebp
out
fildl
mov
xor
dec
add
sub
scas
popa
scas
out
movsl
scas
push
or
sbb
int3
jl
inc
aas
rcll
cmp
jnp
lcall
mov
mov
add
adc
insl
adc
lret
fsts
int
add
pop
add
xor
mov
jp
sub
or
insl
lahf
and
jp
xchg
mov
sahf
push
call
nop
sub
pop
sbb
push
jp
jg
pop
shll
mov
mov
xchg
jecxz
lds
xor
ss
mov
dec
movl
mov
rcrl
mov
dec
stos
adc
xor
sbb
lods
adc
cmp
and
ret
cmpsl
adc
cmpsb
jnp
arpl
jle
jmp
jecxz
stos
movsl
inc
outsl
and
arpl
dec
fsubrs
or
adc
out
les
pop
inc
popa
push
lock
outsl
xor
jns
stos
shlb
aas
pop
jns
push
enter
adc
sub
mov
mov
addb
aas
sbb
outsl
or
das
add
sbb
mov
insb
andl
pand
outsb
adc
and
iret
roll
repz
jmp
aad
add
dec
test
xlat
and
loopne
or
jae
outsb
mov
pop
sbb
lods
mov
inc
jbe
xor
sub
mov
jge
push
popf
lock
bound
mov
xor
sbb
sub
cltd
popa
add
in
jmp
cmp
xchg
in
or
popa
or
loop
fisubs
addb
mov
adc
adc
cmp
jnp
mov
adc
in
popa
push
es
mov
mov
pop
cwtl
fiaddl
mov
mov
cmp
adc
xor
aad
sbb
loopne
and
nop
mov
mov
add
test
dec
xor
xor
stos
sbb
rorb
xchg
add
mov
rolb
or
test
enter
bound
cmp
insb
mov
rcr
dec
mov
test
and
xchg
iret
and
aad
gs
add
mov
mov
mov
clc
adc
dec
outsb
jecxz
mov
add
xor
ss
clc
dec
adcl
pushf
insb
cli
fisubrs
cmp
jp
adc
jle
mov
repz
and
aad
dec
cmp
stos
test
cmp
shlb
mov
outsl
test
aas
and
push
xchg
or
mov
roll
push
cmp
pop
inc
hlt
test
pop
ret
add
pop
and
ret
gs
push
jg
fwait
test
dec
addl
add
dec
dec
pushf
sti
aaa
and
popf
js
ficompl
adc
xor
loopne
pop
push
ja
int3
rcrl
pop
xor
cmpsl
push
ret
scas
es
into
cmp
out
sub
and
sbb
mov
fldl
sbb
add
scas
lret
pop
adc
inc
xor
mov
movsb
xor
ret
dec
out
sub
dec
insl
rcrb
cli
test
data16
dec
lret
push
jbe
int3
stos
loop
int
inc
sub
jbe
push
dec
mov
jl
or
aad
enter
ret
fisubs
pushf
dec
out
rorl
cmc
stos
les
shr
inc
cmpsl
mov
pop
push
or
mov
cmp
or
jbe
cmp
outsb
ss
lods
clc
sbb
push
xor
fs
in
add
cmpsb
fs
mov
and
mov
and
or
mov
roll
movsb
loopne
or
dec
int3
test
and
xor
adc
push
fiaddl
fistps
adc
sub
jmp
mov
mov
aam
rep
idivb
lds
mov
push
jae
and
and
movsb
and
xorl
xchg
test
mov
push
sti
cmp
pusha
subl
cmpl
loopne
or
test
rclb
mov
bound
add
jle
gs
sbb
fsubrs
push
xor
out
xlat
sub
loope
mov
xchg
sbb
xchg
imul
xchg
shr
dec
dec
sbbb
dec
dec
cmp
sub
dec
cwtl
rorl
lds
pop
leave
mov
addr16
mov
imul
jo
out
add
repnz
fidivl
mov
ljmp
mov
mov
jp
cmp
sbb
pop
imul
ret
loope
cmovne
and
cs
mov
stos
out
cmc
add
mov
dec
out
out
add
arpl
es
ja
xlat
mov
cmpsl
jl
fistpl
sahf
enter
sub
dec
jo
daa
popf
fisubrl
xchg
push
add
lods
jl
outsl
call
mov
fcmovnu
jl
jg
mov
lods
jbe
pop
pop
pop
negb
and
inc
cmpsl
outsl
jmp
add
clc
arpl
out
aaa
cmp
lods
sub
mov
in
lods
push
xor
flds
ds
ficompl
push
imul
lods
cld
push
movsb
dec
testb
add
pop
call
fwait
lds
add
adc
fcompl
aaa
push
mov
cmp
adc
mov
imul
stos
insl
jb
hlt
imul
lahf
cmpsl
add
cwtl
mov
rol
cmpl
sahf
pop
sub
mov
cmc
jnp
pop
add
and
mov
popf
push
cmc
or
out
cmpsl
aam
lret
mov
jge
pop
adc
test
and
adc
push
sahf
sbb
add
pop
add
inc
add
push
out
mov
jnp
push
jne
mov
in
je
jo
lret
xchg
pushf
ret
mov
sbb
test
shrl
mov
mov
cmp
pop
das
jo
addb
fidivrs
mov
leave
adcb
jbe
lahf
adc
frstor
out
mov
pop
push
mov
fs
or
mov
mov
movsb
inc
cmp
push
mov
out
sarb
adc
jno
add
cld
sbb
popa
pop
hlt
cmp
dec
xor
mov
sub
push
or
in
std
mov
int3
insl
or
pop
sub
out
stos
push
add
sbb
mov
in
out
out
testl
mov
inc
in
lahf
fidivs
cmp
push
bound
mov
cmp
inc
dec
or
cmpsb
xchg
and
mov
mov
les
mov
int3
nop
xor
lahf
lcall
mull
popf
mov
lret
sahf
ja
scas
pop
mov
lcall
jae
lods
sbb
pop
push
add
fisttpll
pop
pusha
cmpsl
cmp
mov
mov
shll
mov
in
cmp
bound
in
test
cmp
stos
lret
ja
outsl
mov
mov
fimuls
pop
out
or
icebp
and
fs
inc
sbb
lcall
jge
push
add
jle
xor
adcl
and
pop
movsl
sbb
lock
jecxz
jmp
xbegin
paddq
js
shrb
mov
arpl
pop
dec
mov
add
lea
and
adc
pop
or
inc
xchg
pop
cltd
xor
in
stc
jmp
pusha
or
out
sub
mov
xchg
jb
dec
adc
pop
lods
repz
sti
les
jl
test
ffree
and
push
xor
imul
push
jnp
movsl
xor
inc
push
mov
gs
sub
mov
pop
mov
movsb
test
call
push
mov
dec
sarb
xor
ss
into
pop
mov
push
push
mov
xchg
pop
aad
dec
add
in
dec
mov
jb
pop
inc
loop
shll
dec
jge
movsb
cwtl
jle
hlt
inc
mov
xchg
xor
sub
mov
idivb
lods
dec
clc
dec
frstor
pop
int
adc
cmp
xor
frstor
push
test
sti
in
and
fcomps
ljmp
jg
or
cmp
lret
xchg
cmp
arpl
mov
mov
aas
leave
add
adc
cmp
pop
mov
hlt
cld
xlat
enter
pop
push
jmp
push
sub
or
stos
leave
orl
inc
mov
orb
sbb
mov
into
adc
call
aam
dec
dec
pop
push
add
sbb
and
add
adc
fstpl
cmp
clc
adcb
sti
lock
and
pandn
loopne
mov
and
adc
sub
fldenv
es
fwait
or
xor
jecxz
xor
add
adc
les
add
xor
cmp
inc
in
lds
mov
jae
mov
sub
fldl
pop
lret
scas
stos
cmp
xor
pop
ss
pop
push
fadd
mov
adc
cmc
int3
or
mov
in
andb
jo
mov
adc
inc
into
mov
push
mov
dec
aaa
or
aaa
loope
inc
movsb
sbb
shll
pop
outsb
stos
xchg
sbb
fwait
adc
mov
scas
ficompl
sub
jne
data16
into
adc
pop
mov
in
lock
mov
push
xchg
pop
scas
cmp
inc
or
out
testb
adc
cmpsl
data16
cmpsl
adc
enter
mov
cmp
pop
scas
inc
jecxz
or
fcmovnu
xchg
or
sarb
add
mov
idivb
mov
and
test
mov
lret
sti
stos
popa
cmc
mov
cmp
scas
lcall
cmp
xor
stos
mov
add
add
cmp
loope
aas
cmp
mov
cmpsb
pusha
insb
sub
shlb
mov
inc
stc
cli
inc
mov
jg
imul
or
push
cwtl
ljmp
push
test
pop
cld
pop
or
pop
loopne
jl
and
jl
fisttps
or
xor
jae
lcall
jno
test
push
addr16
mov
mov
or
les
xchg
call
push
loopne
popa
dec
cmp
xchg
cmpsb
or
xorb
ret
jnp
adc
cmc
cmp
gs
add
and
mov
fcompl
lret
rol
sarb
gs
hlt
inc
lret
mov
insl
xor
and
call
push
jbe
jno
pop
jnp
mov
adc
adc
cs
outsl
mov
xor
inc
test
fstpt
fmulp
insb
inc
sbb
repz
hlt
scas
xor
and
jo
mov
mov
cld
loop
aam
inc
dec
repz
mov
ret
outsl
push
adc
sub
xor
and
jne
mov
or
inc
and
sub
out
int3
push
movsl
outsl
aas
outsb
dec
jmp
mov
je
aaa
adc
popa
push
call
xchg
adc
lds
inc
shl
pop
and
mov
mov
push
ss
enter
cmpsl
pop
fmuls
or
mull
add
pop
and
jno
jle
addl
fcomp
push
fisttps
dec
dec
shlb
data16
in
lret
mov
iret
sti
in
inc
out
jmp
lods
test
mov
out
data16
sub
lea
int
mov
cwtl
daa
jb
lock
out
out
cmp
sub
cmc
jp
mov
int3
pop
push
leave
push
imul
xchg
cmpsl
pop
ja
out
fnstenv
mov
sahf
js
add
insl
mov
sub
in
lahf
push
cli
inc
sub
pop
and
gs
adc
aam
ljmp
test
dec
cmpsb
pop
ds
sub
and
call
aaa
adc
inc
xorl
dec
jl
stos
adc
data16
sbb
cwtl
mov
adc
stos
push
xchg
arpl
and
push
add
call
xchg
imul
ss
stos
lret
jecxz
sub
push
imul
dec
dec
mov
stos
and
sub
push
int3
add
int3
cld
mov
mov
gs
adcb
imul
xor
rclb
scas
imul
or
xchg
loop
cmp
dec
and
pop
sub
rorb
push
pop
popf
ret
scas
dec
mov
sub
call
add
sub
cmp
bound
scas
notb
adc
js
ja
fcmovnbe
lods
in
popa
adc
mov
aas
cmp
push
and
mov
inc
push
or
lods
cmp
ss
pop
daa
mov
mov
sub
cwtl
xor
in
popf
mov
lcall
divl
xacquire
mov
xchg
mov
and
cli
ret
mov
mov
cmpsb
test
bound
in
roll
jo
cmp
cmpsb
mov
sbbl
std
or
enter
jmp
inc
enter
cli
jecxz
sarb
fstpl
rcr
sub
sub
mov
xchg
test
loop
lret
mov
xor
or
inc
outsl
xchg
jns
jle
mov
adc
mov
xor
lea
imul
popf
andb
stos
jo
mov
cli
lock
adc
sbb
mov
or
inc
dec
mov
cltd
sbbl
jne
adc
and
in
fld
jl
shrl
incl
lret
cld
cli
iret
out
je
xor
fidivs
dec
arpl
lods
stos
fmull
rorl
cmp
or
push
mov
xchg
cld
inc
sbb
xchg
cld
mov
xchg
decb
hlt
leave
out
pop
mov
sbb
dec
dec
popf
leave
int3
jmp
dec
aam
mov
and
imul
mov
sub
lcall
stos
sti
pop
xchg
cli
shl
sbb
xchg
mov
jns
dec
imul
icebp
cmp
cltd
fwait
decb
lds
leave
sbb
jl
fs
jnp
mov
testb
test
jg
lods
lret
mov
adc
xor
je
xor
inc
or
insb
sbb
ret
xor
pusha
cmpsl
enter
stos
xor
adc
scas
sbb
adc
mov
lock
out
sub
xor
jl
and
dec
rorb
int3
test
inc
mov
pop
mov
dec
arpl
and
xor
rcll
mov
clc
imul
cmp
adc
mov
inc
push
mov
xor
jl
cmp
xor
daa
dec
xor
in
and
ljmp
push
dec
inc
ljmp
icebp
sbb
rcrl
in
iret
jo
cmpb
aam
cmpsl
push
mov
out
rclb
jnp
sbb
iret
cmpsl
mul
daa
fwait
pop
sahf
decl
pop
cwtl
iret
adc
icebp
cmp
inc
cld
push
out
loop
xor
loopne
or
mov
jl
xor
push
lds
cmp
iret
jae
sbb
cmc
push
loopne
lret
mov
dec
rorb
adc
pop
inc
lods
or
lea
mov
mov
and
adc
lea
pushf
lret
iret
cmp
mov
divl
sub
aad
daa
cmp
jmp
push
push
xchg
mov
ss
in
int
mov
lods
push
std
pop
xchg
out
xchg
sub
sub
push
xlat
adc
and
xor
aas
cmp
sbb
loop
daa
push
sub
shlb
mov
or
mov
add
jae
int3
pushf
cltd
push
xor
and
out
pop
aad
jno
sub
cli
inc
ljmp
sbb
add
pop
pop
scas
test
test
subl
or
fisubrs
pop
pop
out
pop
fs
paddusw
mov
lods
mov
mov
cmp
ds
lret
or
add
ret
mov
pop
mov
mov
mov
pop
mov
in
ret
data16
mov
jp
pop
jns
stos
and
mov
add
inc
push
push
xor
ret
xchg
and
mov
mov
xor
addl
and
mov
fisubl
popa
je
mov
dec
stos
pop
jecxz
ss
nop
jbe
enter
sub
inc
mov
or
addb
inc
add
xor
lahf
scas
icebp
daa
push
and
leave
adc
insb
cmp
cmp
pushf
xchg
fimuls
dec
fwait
or
push
mov
adc
fwait
jge
sbb
sbb
cmpsl
xchg
push
mov
cmpsl
xchg
jle
jecxz
cmp
adc
adc
sub
jge
mov
fwait
js
adc
xor
push
imul
push
stos
int3
mov
jne
popf
xchg
add
sub
test
and
or
adc
jbe
je
dec
dec
add
arpl
cmp
xchg
inc
inc
shll
out
aas
pop
xchg
addr16
sbbl
gs
jbe
mov
dec
out
push
rol
mov
push
cmp
adc
shl
daa
cmp
xchg
repnz
add
in
cmc
lahf
ds
popa
popf
in
clc
fdivs
aad
loope
rcll
mov
dec
or
testl
dec
dec
nop
icebp
leave
and
imul
xchg
lods
shll
push
int3
adc
or
mov
or
sbb
mov
mov
jne
mov
xor
shlb
mov
mov
outsl
jne
scas
cmp
and
mov
js
mov
inc
je
mov
outsb
aas
aaa
mov
fists
inc
or
xchg
push
pop
aad
fiadds
dec
push
bound
lret
dec
push
ror
inc
xchg
mov
adc
cs
stos
cmp
sti
adc
shr
sub
sub
loope
inc
mov
mov
add
leave
dec
xchg
outsl
and
inc
das
int3
inc
fnstsw
sarl
popl
fbstp
jecxz
out
lods
int
cmp
and
add
test
add
sbb
and
adc
xor
repnz
cli
out
scas
test
popa
dec
mov
dec
xchg
movb
cmp
ja
sbb
rdpmc
pop
sbbl
ret
jae
push
xchg
sub
adc
xor
in
es
cmp
or
mov
mov
mov
or
or
ds
inc
pop
imul
int3
scas
jns
stos
in
shl
adc
pop
loop
mov
sbb
inc
dec
insb
xchg
test
cmc
loope
into
rcrl
cld
sub
aam
xchg
or
mov
stos
xor
pusha
mov
jb
rolb
adc
mov
inc
cmp
scas
mov
imul
in
in
dec
fildll
ja
xchg
dec
out
outsl
mov
int3
add
ja
mov
loop
cmp
dec
in
mov
test
add
insl
lods
adc
cmp
mov
xchg
sbb
sub
jo
mov
popa
sbb
lods
cwtl
aam
sub
cmc
or
int3
in
add
add
inc
jge
dec
and
es
adc
fwait
clc
test
xlat
jnp
hlt
push
mov
push
js
and
cmp
mov
pop
jno
mov
sbb
lcall
roll
cmc
jbe
dec
add
jns
arpl
jg
mov
fildl
push
testl
cs
hlt
jb
pop
rolb
jge
cld
cmp
cltd
dec
sbb
or
mov
adc
and
insb
lock
leave
mov
test
jl
jmp
jle
inc
in
icebp
cmp
push
scas
test
mov
xchg
fistpll
inc
push
hlt
jno
mov
imul
sbb
cmp
mov
ret
inc
ret
inc
clc
mov
clc
rclb
and
mov
push
mov
pop
ja
xchg
mov
aas
lea
testl
dec
cld
push
aaa
mov
jge
data16
mov
and
sub
jae
sub
cmp
icebp
out
sub
inc
jmp
cmpsb
cli
cmp
je
lret
mov
mov
jmp
cmp
into
addr16
sbb
pop
add
sub
sub
shrb
shr
test
xchg
cld
mov
orb
repnz
jmp
je
cltd
mov
pop
dec
std
ret
insb
addr16
hlt
jno
pop
sub
mov
je
jmp
rcll
jnp
mov
dec
cmc
mov
mov
cmc
push
inc
stos
lret
fcom
sbb
push
sbbl
jae
cmp
sub
popl
push
mov
sarb
inc
xor
sub
xor
jae
sti
adc
xor
int3
ljmp
ljmp
fmul
and
jnp
jb
and
push
sub
sbb
into
mov
add
aad
nop
pop
xor
xchg
xchg
mov
mov
push
aad
xor
cmp
repnz
inc
jae
xor
adc
push
mov
pop
mov
dec
xchg
out
xchg
fninit
mov
out
mov
popf
xchg
dec
test
insb
sub
iret
jae
sub
adc
push
jp
sbb
mov
mov
mov
pop
push
jp
ljmp
das
leave
and
int
ret
or
insb
stc
adc
xrstor
and
rcrb
push
call
mov
push
xchg
xchg
dec
jae
movlps
pop
test
inc
stos
jno
push
sbb
sahf
lock
mov
push
xchg
jne
cmc
ret
mov
idivb
movsl
mov
add
mov
inc
push
xchg
addr16
jbe
dec
dec
fistpll
push
adc
inc
jae
nop
push
xor
mov
cli
mov
dec
push
mov
sub
faddl
pusha
in
pop
ds
mov
int
jmp
adc
cmp
mov
or
xchg
mov
sbb
jg
ljmp
mov
xchg
mov
std
je
popf
ss
out
push
les
cwtl
pop
or
call
decb
sbb
mov
cmp
leave
popa
xor
sub
ljmp
fstpt
fadd
xor
in
jg
or
jecxz
ljmp
cmp
aas
mov
dec
cmp
pop
je
outsb
push
daa
sbb
test
sbb
loope
xor
call
xor
clc
xchg
ss
scas
cmp
fstl
int
dec
cmpsb
adc
adc
xlat
push
les
xchg
pop
shr
sbb
xchg
sbb
shlb
mov
pop
stc
cmp
dec
cld
sbb
mov
mov
cmpsb
insl
test
aaa
pop
xor
stc
mov
test
out
xor
cmpsl
orb
shlb
sub
pmulhw
out
inc
enter
loope
rolb
ljmp
mov
in
push
imul
sbb
pusha
in
data16
push
push
cmp
mov
subl
repnz
popf
mov
ficomps
mov
pop
cmp
arpl
ds
mov
mov
sbb
loop
xchg
mov
sbb
shr
shl
sbb
lds
xchg
push
mov
push
mov
cmc
ss
lret
jb
call
add
frstor
xor
bnd
dec
data16
fildl
adc
data16
cmp
out
pop
aaa
xchg
mov
cmpsb
adc
addr16
xor
jb
mov
pop
cltd
in
pop
in
aad
cld
sub
mov
adc
pop
outsl
pop
mov
sub
adcl
or
movsb
rol
cwtl
push
imul
insl
cmp
dec
mov
ljmp
imul
add
outsl
adc
sbb
and
pushl
rol
daa
jo
lea
jmp
aam
pop
pop
inc
dec
hlt
mov
push
ret
xchg
xor
sbbl
pop
and
aas
push
call
ror
cmpsl
out
xchg
adc
adc
das
arpl
xchg
inc
insb
popa
xchg
repnz
fxam
push
hlt
addr16
in
mov
jae
lods
xchg
mov
jp
mov
test
adc
popf
sbb
sahf
sbb
or
out
add
push
cld
cmp
addr16
or
add
add
pop
adc
mov
lock
and
mov
xchg
inc
sub
popa
sbb
fmuls
data16
pop
adc
and
out
mov
push
inc
xor
mov
sbb
cmp
fisubl
fcmovnu
jo
jnp
andb
mov
jmp
cmp
inc
test
cmp
xchg
xor
sarb
cmp
stc
xchg
je
cmc
xchg
int
mov
push
cwtl
lods
je
ds
xor
jge
xor
and
inc
pop
int
jnp
rcrl
lock
faddl
aas
push
pop
jbe
fistpl
sub
jbe
sub
jge
push
pop
int
jo
inc
lahf
jnp
cmpsl
xchg
inc
push
mov
and
mov
xchg
inc
cmp
std
je
and
mov
repnz
cmp
cmp
adc
xor
inc
push
movsl
lahf
lods
or
push
loop
rorb
pop
jge
into
adc
mov
sarb
pop
mov
mov
mov
xchg
push
push
lret
and
gs
add
cltd
xor
movsl
popf
pop
ficoml
sub
rcr
lcall
cmp
add
dec
or
inc
testl
push
loope,pn
sbb
mov
cmp
cmp
popf
push
in
mov
mov
mov
in
pop
gs
mov
push
lods
cmp
jns
mov
mov
mov
add
shlb
dec
inc
push
mov
out
jmp
jns
sub
repnz
data16
test
mov
fcmovu
pop
dec
clc
ficoms
jmp
std
push
jo
mov
les
ret
jns
loope
xor
jo
insb
sub
imul
jmp
and
sbb
ret
or
in
mov
add
jl
in
add
in
in
dec
arpl
dec
ja
andl
je
adc
adc
xor
int
xor
jge
data16
or
xor
pop
leave
out
mov
pushf
jae
rcrl
loopne
mov
cmpsb
fs
std
cltd
push
inc
xorl
jno
add
xor
jmp
dec
mov
sub
mov
cmp
shrl
dec
cmp
add
hlt
xor
cltd
mov
dec
lahf
sarl
push
arpl
es
push
aaa
arpl
lea
xchg
imul
stos
es
jb
orl
push
xor
add
rorb
jbe
dec
insl
mov
test
mov
xchg
cwtl
inc
rorb
aad
lods
les
test
mov
xchg
shrb
sarl
pop
jb
push
loope
cmp
fsubl
pop
outsb
popf
jp
push
mov
notb
xchg
fistps
fwait
pusha
repnz
adc
push
imul
mov
adc
add
lds
cmp
gs
idivl
mov
shll
loope
push
pop
imul
xchg
fsubs
out
out
out
lret
push
scas
pop
dec
and
mov
lock
cmp
faddl
add
inc
insl
mov
push
cltd
xchg
xor
bound
pxor
xchg
pop
mov
mov
add
jae
jge
lret
ret
insl
iret
sbb
mov
fs
leave
xor
cmp
scas
shlb
mov
cs
add
scas
push
cmp
sbb
add
mov
mov
inc
pop
xlat
ss
cmp
inc
gs
test
jnp
xchg
loopne
inc
add
popl
mov
and
into
add
jp
lods
inc
xchg
push
pop
pop
test
lds
mov
and
mov
push
xor
push
xorl
adc
dec
insl
sub
cld
xor
shl
xor
mov
mov
lcall
insl
jmp
adc
fisubrl
pop
cmp
in
insl
stc
push
sub
fsts
cmp
mov
adc
and
cmc
xor
jle
repz
and
andl
orb
xchg
jecxz
addb
cmpsl
push
sarl
inc
lahf
mov
sub
hlt
xchg
int
fcompl
pop
popa
and
and
loopne
inc
jmp
mov
or
sahf
mov
mov
into
test
sahf
arpl
lahf
mov
push
or
sbb
sub
data16
js
test
sub
xchg
andl
cmpsb
pop
mov
and
sbb
xchg
dec
sti
movsb
in
movsb
adc
xor
sbb
adc
nop
add
sub
cvtps2pd
mov
adc
jbe
xor
or
leave
fisubl
int
pop
push
xchg
xchg
cwtl
in
orl
sub
lods
incb
and
stc
test
icebp
aad
ss
cwtl
mov
inc
fs
mov
imul
aaa
pop
cmp
push
pop
enter
cmp
jecxz
fstpl
jl
and
xchg
das
dec
sbb
movsl
and
dec
lods
cmpsl
inc
arpl
inc
inc
xor
insl
mov
loope
out
jle
jmp
sbb
adc
dec
outsb
add
fdivr
out
push
mov
mov
sub
lret
fs
jbe
addr16
xor
rcll
incl
es
xchg
sbb
ljmp
and
ret
out
lods
jge
cli
lret
loopne
shl
mov
fdivl
inc
test
pop
imul
xchg
add
mov
arpl
addr16
fstps
mov
mov
fidivrs
cmpl
dec
push
pop
and
jo
lahf
xlat
in
add
push
ficoms
stc
lcall
push
xor
sub
add
lcall
lret
inc
push
push
inc
das
cs
and
pop
xlat
in
sub
dec
mov
mov
stc
mov
jo
xor
cmc
cli
loope
push
jecxz
adc
xchg
out
fimuls
xor
dec
iret
clc
lds
ja
or
push
mov
int3
decl
fidivs
addb
mov
lock
arpl
jae
aad
push
dec
repnz
ret
negb
jecxz
aaa
xor
jp
add
stc
pusha
hlt
jnp
sub
insl
icebp
scas
xchg
jmp
mov
xor
aad
movsl
cld
je
gs
xchg
cmpsl
lock
mov
ret
dec
dec
dec
je
call
push
popa
inc
sbb
xchg
dec
pop
push
test
cmp
mov
sbb
xchg
xchg
scas
or
xchg
pop
cwtl
sub
pop
js
scas
std
es
jge
cmp
dec
and
rcll
iret
loope
mov
in
cmp
adc
imul
sti
out
pushf
ret
fildll
leave
rcll
imul
shlb
and
pop
icebp
jp
cmpsb
mov
fsubrl
loop
mov
pmaddwd
lea
dec
movsb
jg
cmp
lods
rep
popf
cld
cmpsl
mov
orl
hlt
and
sbb
jecxz
std
enter
push
cmp
fbstp
xor
sbb
push
jno
lea
pop
lods
test
mov
lret
mov
mov
mov
lahf
or
cmp
jecxz
cmp
and
das
lods
xchg
add
inc
rcrb
inc
movsl
outsl
mov
dec
inc
add
nop
pop
sbb
pop
mov
mov
xlat
fdivl
add
sub
std
sahf
mov
jae
mov
cmpsb
ret
lds
cmpsl
mull
or
repz
adc
add
enter
dec
lock
insl
popa
leave
mov
testb
add
sbb
lods
mov
pop
adc
or
cwtl
sbb
ljmp
je
add
sahf
out
inc
cli
cli
pop
and
in
push
mov
out
jo
shr
sti
hlt
mov
and
push
mov
aam
sbb
addl
inc
pop
arpl
nop
cltd
xchg
cmp
movsb
sbb
jmp
adc
stos
shll
jecxz
jl
outsb
pop
pop
xchg
popa
and
fisubl
aas
mov
pop
mov
inc
pop
xor
jge
pop
ret
testl
mov
icebp
inc
sarb
push
mov
call
in
mov
or
and
xchg
xchg
test
fs
cs
sahf
rcl
pop
cmp
lcall
fildl
adc
cmp
fiadds
xor
push
pop
sub
mov
fstpl
clc
inc
xor
jmp
and
xor
sub
inc
adcb
cmp
jg
inc
in
popa
nop
rol
outsb
aas
push
sbb
inc
scas
and
loop
cltd
sbb
fcomps
mov
mov
push
sub
mov
aam
pop
xor
outsl
pop
inc
loopne
jae
inc
lret
jp
mov
insl
mov
rcll
xorl
xchg
xchg
int
popf
mov
xchg
imul
sahf
daa
pop
ds
push
mov
adc
loope
xchg
std
jae
rcrl
xor
pop
lds
cmp
movsb
push
push
push
rorl
jmp
cmp
jp
stos
out
inc
mov
mov
in
aad
sti
xor
pop
jnp
icebp
in
xchg
or
push
js
mov
sbb
pop
lret
iret
dec
lahf
push
or
cmpsl
jno
xchg
or
or
jbe
in
push
add
lods
jl
push
mov
inc
adc
or
xor
add
and
int
out
mov
sub
lods
and
xor
lcall
or
das
xor
arpl
cmp
test
inc
lock
out
pop
incl
out
add
outsb
mov
jmp
fucomip
out
nop
push
imul
fbstp
int
outsl
aaa
sbb
xchg
adc
sub
mov
cmp
lcall
call
push
test
lods
sar
ja
jl
inc
mov
mov
mov
jl
std
xor
or
ret
add
in
mov
cs
clc
sub
repnz
mov
xchg
fsubp
cli
adc
js
mov
jae
movsb
stos
inc
cltd
add
idivl
xchg
mov
inc
mov
scas
jnp
pop
shl
and
push
jg
ja
fwait
inc
rcrb
dec
jmp
dec
aas
mov
ret
xchg
mov
mov
jnp
out
test
push
push
push
sarl
enter
mov
mov
push
xor
testl
pop
jno
pop
add
mov
pushf
std
lds
mov
add
mov
xor
adc
inc
and
aad
pop
pop
popf
xchg
ss
xchg
les
xchg
lret
xor
std
out
xor
dec
test
frstor
cmp
pop
xor
or
lock
cmpl
or
jg
sub
mov
fs
subb
mov
lock
stos
sbb
and
xor
add
mov
jmp
mov
imul
int
xor
out
and
lock
fisubrs
jns
xchg
adc
sbb
in
push
or
repz
fcmove
add
bound
dec
xor
clc
mov
shrl
aad
push
push
or
arpl
jp
loope
pop
test
in
es
insl
xor
clc
les
adc
adc
mov
inc
scas
cltd
gs
xor
rcll
xchg
hlt
ret
not
push
pop
cs
pop
jnp
add
out
lcall
ds
jge
pusha
xor
jne
push
mov
fcomps
cmpsl
xor
je
mov
iret
in
dec
push
jp
insb
fisubrl
push
test
js
sub
gs
jb
mov
push
mov
inc
inc
cmp
add
dec
ja
sub
mov
cmp
das
imul
movsb
test
sub
in
enter
mov
leave
xor
push
lds
inc
mov
pop
nop
nop
and
sub
movsl
scas
imul
cmc
jge
loopne
imulb
daa
nop
or
repnz
sub
ljmp
in
or
add
loope,pn
sub
adcb
push
bound
rcrb
sbb
shll
push
movsl
push
dec
pop
push
jnp
ret
aas
fimuls
mov
enter
repnz
inc
pusha
je
add
inc
pop
mov
sbb
out
adc
ret
div
sbb
mov
sbbl
or
lock
les
mov
mov
add
jne
stos
xchg
sub
lahf
leave
pop
scas
fnstenv
scas
mov
sub
cmp
imul
jle
imul
add
xchg
icebp
jl
shll
push
push
jmp
add
or
ficomps
std
sub
xchg
push
jnp
mov
inc
mov
nop
inc
and
out
push
imulb
fs
or
stos
andb
call
cwtl
jne
jnp
sbb
xchg
cld
push
inc
mov
inc
cs
shll
jp
xchg
xchg
and
call
mov
sbb
push
das
mov
xchg
aas
dec
adc
jno
adc
je
dec
rol
in
dec
sub
cmp
sub
add
out
jno
jmp
sbb
or
lret
pop
insb
fldl
ret
andb
xchg
rcrl
dec
xor
mov
das
scas
sub
enter
adc
cwtl
mov
jmp
mov
cmpb
xchg
xlat
push
pop
fwait
and
bound
jp
ror
cwtl
popf
cmp
iret
mov
in
push
jne
push
cmp
out
inc
pop
cmpsb
push
mov
insb
cwtl
inc
jno
sbb
arpl
dec
adc
clc
loopne
sbb
xchg
mov
push
arpl
imul
inc
hlt
addl
or
adc
pop
paddusw
pushl
divl
xchg
push
xchg
jge
cmp
jmp
add
std
xor
cmp
shll
das
lcall
fsts
fstpt
and
inc
mov
mov
mulb
add
lea
rclb
jg
cmp
stc
pop
sbb
push
fistpll
js
inc
mov
jno
mov
mov
pop
xchg
imul
push
xchg
xchg
mov
jns
jecxz
sbb
xchg
xlat
add
ja
inc
es
pop
mov
scas
bound
int3
in
sbb
sahf
and
leave
push
sahf
gs
inc
aas
leave
or
mov
fwait
jne
push
xlat
mov
mov
pop
push
add
mul
les
cmpb
xchg
test
sub
fldt
xchg
cltd
inc
xor
sbb
xchg
cld
into
pop
jo
sub
pop
je
test
pushf
ror
mov
pavgw
jp
inc
bound
iret
pop
les
fimull
inc
sub
pop
out
out
lcall
mov
add
es
push
dec
jb
fwait
gs
sbb
push
mov
jne
jne
or
jg
inc
jg
jl
inc
push
xchg
fdivs
ljmp
lock
das
push
or
out
pop
push
xchg
hlt
int3
inc
jl,pt
int
cmp
sub
out
arpl
cmp
mov
sbb
dec
mov
in
addr16
mov
int
xchg
repnz
leave
dec
mov
fists
dec
lds
icebp
push
cli
mov
arpl
lret
pop
hlt
inc
ja
push
adc
mov
sbb
out
pusha
test
sti
push
push
pusha
dec
add
inc
xchg
ss
add
xlat
adc
fsub
nop
sbb
and
dec
mov
cmpsb
xchg
mov
lock
cld
int
dec
in
dec
gs
or
addb
in
test
pusha
pop
ds
inc
mov
sbb
leave
mov
out
xor
movsl
ljmp
daa
push
push
jp
iret
out
and
fs
movsb
add
mov
ljmp
mov
sbb
mov
test
inc
xchg
jae
pop
ja
aaa
xor
rcl
adc
dec
pop
xor
jo
in
scas
out
cmovbe
xlat
out
mov
cli
adc
mov
dec
xchg
xchg
dec
in
jb
cmpb
in
mov
into
push
int3
fnstcw
hlt
xor
and
cmpsb
ds
sub
add
ret
addr16
dec
sub
sub
incb
in
dec
jnp
aam
pop
cli
jbe
mov
aam
or
adc
hlt
mov
int
sub
sbb
popa
sarl
jno
mov
pop
inc
ljmp
loopne
sbb
sbb
loope
sbb
fdivp
inc
xor
sub
lcall
addr16
and
cmpsb
jo
ret
dec
or
pusha
or
aaa
xchg
cmpsb
inc
std
mov
mov
das
cmp
mov
xchg
adc
stc
fsubrs
fs
pop
sbb
lret
xorl
aad
ljmp
imulb
incb
push
mov
stos
pushf
roll
xchg
sbb
cltd
shll
scas
and
scas
cmp
jge
sub
pop
fidivl
jl
cltd
pop
mov
lods
push
add
jp
insb
shlb
aas
cmpsb
xchg
nop
sub
inc
call
movsb
movsb
data16
inc
je
inc
in
out
mov
jmp
ret
jmp
sti
jg
outsb
test
call
mov
jp
ljmp
shrl
jl
mov
or
pop
mov
cmp
inc
icebp
jns
mov
je
dec
push
cmp
mov
cmp
test
xchg
gs
fidivrl
lret
movsl
inc
insl
clc
sub
lea
or
or
jo
sub
push
pop
out
push
jmp
adcb
test
dec
scas
out
test
scas
and
sub
or
in
adc
cwtl
lret
lret
scas
xor
outsl
jg
lret
rolb
in
push
fisttpll
xor
jbe
fists
imul
call
inc
iret
jno
test
lcall
fidivrs
test
mov
mov
arpl
sbb
xor
lods
lds
in
daa
mov
or
test
push
outsl
pop
adc
dec
cli
xor
popf
fwait
and
cld
js
cmp
or
mov
sbb
loop,pt
xchg
pushf
movsl
xchg
pop
loope
sub
mov
and
push
sub
cltd
cmp
jp
lds
imul
mov
fdivs
out
inc
mov
push
mov
cmp
fstl
cmpsl
outsl
adc
cld
push
xor
and
movsb
mov
add
or
sahf
pushf
scas
jge
sti
ljmp
imul
dec
std
jo
add
sbb
mov
cmc
push
cltd
sbb
out
outsb
cltd
jp
leave
in
xor
or
mov
les
data16
imul
push
scas
xchg
and
stos
mov
and
jecxz
dec
fstps
push
ss
imul
jne
dec
xor
aad
fldcw
rcrl
jo
loope
cmp
lcall
jmp
adc
sbb
mov
sahf
lods
dec
mov
mov
aam
mov
mov
int3
shlb
aad
aas
fnstcw
shr
stos
frstor
loopne
das
fnsave
scas
pop
fstl
push
adc
push
psubusb
add
movsbl
push
pop
enter
inc
cmp
cmpsb
pop
pop
add
mov
inc
adc
ret
mov
jnp
jb
mov
jp
and
icebp
stos
xchg
cmp
push
ss
jge
jae
sahf
scas
mov
pop
mov
inc
pop
adc
icebp
scas
loop
mov
inc
imul
dec
rcrl
lods
mov
xchg
fwait
mov
emms
pop
subb
enter
cltd
fadd
dec
popa
jne
sbb
cmp
and
in
in
mov
mov
sub
mov
std
push
je
loope
test
ret
repnz
shlb
and
daa
mov
mov
jge
jmp
pop
mov
fldl
call
inc
push
mov
cs
ror
ja
dec
adc
mov
dec
mov
pop
cmp
cmp
sbb
sub
outsl
sarb
dec
jmp
push
and
xor
mov
add
sahf
mov
lock
repnz
xor
sbb
mov
mov
dec
pop
out
pop
or
test
inc
subl
pop
adc
in
cmp
adc
imul
mov
adcb
cmpl
int
shl
rcrb
lcall
jg
sbb
fdivs
push
xchg
aam
dec
in
insb
stos
ret
int3
out
jb
cwtd
cmp
adc
mov
mov
stos
jg
cld
xchg
clc
fidivrs
pop
sbbl
arpl
fwait
mov
adc
adc
dec
loop
and
movsl
xor
stos
push
mov
or
addl
popf
or
jbe
fs
sti
sbb
rclb
xor
cmp
fldt
sbb
in
sbb
dec
mov
cld
lods
xlat
jo
repz
push
jge
sbbl
xlat
adc
jae
sub
jb
sar
les
mov
xchg
sub
dec
leave
or
shll
pop
icebp
add
into
or
loopne
cs
sbb
in
inc
xchg
clc
std
test
pop
and
mov
or
je
into
mov
int3
pop
clc
sub
insb
arpl
cmc
cmpb
out
mov
stc
add
daa
and
push
and
sar
mov
inc
call
sbb
jg
add
cmp
inc
lea
mov
jns
mov
adc
jns
mov
push
pop
xlat
mov
pop
dec
xchg
cmp
pop
add
mov
pop
arpl
dec
sbb
rcll
inc
push
xor
sbb
push
sbbb
sahf
dec
adcl
out
adc
jg
push
iret
sahf
loop
xor
daa
cwtl
or
lock
hlt
and
pop
cmpsl
and
jno
sbb
js
add
pop
pop
adc
mov
and
sbbl
xchg
gs
mov
add
pop
fucomp
insb
ds
xchg
fstl
std
cmp
or
push
loope
and
insl
pushf
sub
mov
cmc
cmc
sbb
jmp
lahf
adc
xchg
add
mov
push
adc
mov
das
and
mov
xor
pusha
inc
push
and
cltd
jecxz
clc
dec
mov
adc
mov
pop
mov
div
pop
mov
sbb
inc
mov
lds
out
in
incl
sbb
inc
inc
ror
mov
ss
loopne
in
mov
cltd
shl
mov
jb
xchg
das
ds
sub
sub
dec
hlt
sbb
sti
xchg
mov
sbb
ret
popf
pop
dec
rcll
icebp
stos
push
addr16
adc
xchg
in
cmpsb
xlat
fistps
inc
mov
push
xchg
pop
or
or
out
outsb
cmp
or
popw
stos
push
in
nop
add
lds
pop
pop
jb
loope
jne
fistl
outsl
std
xor
popf
and
and
xchg
cld
iret
push
jns
mov
lods
pop
fwait
and
and
mov
dec
popa
outsb
inc
sbb
lcall
shr
movsb
dec
fstpt
add
add
lret
jmp
push
stc
pop
test
test
jle
xchg
push
sbb
dec
je
and
aad
fwait
xchg
repnz
fwait
ja
cmp
lods
int
xchg
lock
cld
sbbb
clc
iret
mov
inc
fisttpl
sbb
and
dec
jecxz
hlt
pop
rcrb
adc
leave
pop
or
push
cmp
cmpl
jo
dec
or
mov
gs
fsubr
clc
gs
push
and
mov
in
fdivrl
mov
jge
add
cmpsl
dec
adc
xor
jb
sbb
dec
outsb
popf
mov
jg
dec
in
hlt
mov
mov
jnp
nop
and
pop
stos
mov
scas
in
testl
rorl
push
add
ja
movsl
popf
testl
adc
xor
cmpsb
inc
mov
rcrl
fimull
mov
jecxz
outsl
lods
movsb
repz
xor
mov
pusha
jnp
std
arpl
sti
xchg
cmpb
test
push
fneni(8087
push
xchg
mov
ljmp
scas
std
in
popa
outsl
mov
into
movsb
sahf
add
lret
xchg
leave
sub
jp
mov
scas
adc
bound
lret
and
and
pop
mov
xor
mov
dec
or
imul
call
inc
jns
push
jbe
lods
xchg
xchg
fwait
xchg
leave
push
stos
sbb
and
ss
xlat
adc
adc
out
test
xor
mov
mov
mov
ds
pop
cmp
or
cwtl
jb
mov
insl
insl
cs
les
mov
test
fsubrl
pop
in
daa
cli
dec
cmpsl
movsb
pop
fldl
xor
in
cmp
popf
adc
movsb
call
psrad
lahf
pusha
push
push
mov
mov
push
and
jp
dec
jl
rcl
xor
addr16
mov
dec
out
mov
arpl
jle
daa
jl
fprem1
or
sahf
xor
cmp
lds
test
daa
lea
mov
inc
dec
and
rclb
lahf
cmp
jnp
sbb
sti
test
xor
sub
lea
shll
jmp
cmp
jmp
aam
mov
in
cmp
and
mov
xchg
loope
dec
in
int
push
lea
add
or
inc
jge
and
add
into
and
lahf
outsb
xor
lods
mov
pop
and
stos
iret
andb
add
fisttps
fsubr
add
xchg
xor
add
add
gs
jae
clc
cmp
add
and
sahf
sbb
mov
fisubl
inc
pop
xor
jbe
and
push
pushf
lahf
xchg
fidivs
pop
out
inc
cmp
sbbl
addb
sbb
lock
les
imul
loopne
or
outsb
es
int
jae
ljmp
mov
xor
inc
push
repnz
jle
cmpl
dec
add
push
sub
inc
sub
popa
pop
test
xor
ss
mov
lock
int3
mov
cmp
sbb
loope
or
cmpb
imul
inc
insb
in
insb
jp
test
mov
inc
das
cltd
adc
js
and
or
sbb
loope
adc
nop
pop
lahf
inc
outsl
jno
pop
jp
outsl
outsl
jo
pushf
xchg
mov
je
test
xor
stos
gs
inc
xchg
jge
movsb
jmp
jg
sahf
cmp
add
dec
mov
mov
outsl
leave
jmp
lock
ja
enter
sub
stos
enter
jg
stc
push
jge
jge
or
sbb
call
or
sub
add
repz
push
loopne
push
ljmp
push
pushf
jl
mov
cwtl
out
mov
mov
add
dec
pop
mov
push
sub
mov
rorl
pop
mov
mov
jmp
xchg
std
sbb
jle
cli
lret
lods
or
and
les
repnz
movsl
ret
cmp
lcall
push
push
and
dec
iret
ds
mov
mov
out
push
ror
das
movsl
mov
or
lahf
mov
xchg
xor
neg
mov
push
and
add
shll
enter
cwtl
shll
pushf
cmpsl
fnstcw
into
jle
pop
xor
loope
fs
sbb
mov
lods
jns
dec
sbb
rclb
sti
adc
mov
jmp
sub
sub
lcall
xchg
sub
in
int
xor
cmp
push
mov
jae
addr16
nop
dec
nop
out
mov
dec
push
mov
jbe
xchg
aam
add
movsl
sarb
in
insb
jno
data16
pop
fcomps
dec
jbe
mov
jne
in
jp
add
push
lcall
adc
test
inc
mov
stos
xor
pop
mov
aaa
insb
pop
rcrl
xor
lds
in
outsb
pop
add
dec
inc
and
dec
inc
mov
mov
mov
cltd
inc
pop
shrb
pop
mov
cld
mov
in
adc
jmp
cmp
mov
mov
in
lcall
in
adc
or
mov
ljmp
jl
mov
mov
inc
lret
movsb
lea
clc
arpl
sub
xchg
add
dec
and
pop
push
leave
shl
xlat
inc
test
push
xor
jo
dec
inc
push
in
dec
mov
test
pop
out
dec
movsb
clc
movsl
mov
mov
inc
xchg
movsb
dec
mov
cmc
push
push
mov
out
stos
lcall
lock
pop
loop
rolb
sbb
insl
xchg
into
rclb
push
scas
mov
or
fs
mov
outsl
ljmp
push
dec
ljmp
add
popa
movl
sub
mov
cmp
scas
mov
jae
cmc
ljmp
inc
adc
and
out
inc
aaa
loop
dec
pop
shlb
hlt
pop
mov
imul
inc
stos
or
mov
pop
mov
cmp
jmp
or
mov
popf
add
mov
dec
cmp
jne
stos
sbb
out
pop
cld
pop
es
dec
dec
or
imul
push
sbb
add
push
inc
lret
lsl
cltd
push
push
dec
and
fcmovne
imul
pushf
dec
or
ja
cmp
mov
pop
cs
mov
subl
dec
outsb
ret
imul
xchg
in
mov
scas
push
fwait
movsb
sub
es
imul
ss
pop
cmc
in
in
fwait
addr16
push
fdivrs
dec
and
repz
ficomps
int
pusha
xchg
leave
adc
sub
lock
pop
sbbl
jg
aaa
pop
lret
xchg
shlb
pop
test
push
aad
les
pop
subb
mov
pop
cs
das
mov
out
aas
push
aas
cmp
clc
rcrl
sbb
sti
mov
pop
bnd
popa
sahf
mov
int
mov
pop
aaa
movsb
mov
inc
pop
jno
cmp
cwtl
faddl
or
mov
mov
sbb
pop
dec
mov
xchg
scas
cvtpi2ps
aaa
mov
jo
test
xchg
push
scas
cli
add
mov
mov
andl
mov
push
cli
push
adc
cmpsl
mov
jb
dec
push
mov
in
and
add
scas
adc
sub
adc
lods
imul
mov
loop
lea
cld
dec
iret
leave
dec
mov
jo
out
loope
test
adc
jl
mov
dec
and
pop
sti
pop
out
or
mov
or
icebp
push
lahf
aam
bound
pop
or
cmc
std
fisubrl
ret
hlt
pop
sahf
cmpsb
pop
inc
lods
into
inc
mov
jns
or
adc
dec
arpl
test
repz
shlb
int
hlt
xor
jge
cmp
mov
xchg
adc
adc
fnstcw
jne
push
mov
daa
inc
sbb
pop
pop
dec
lods
and
insl
xor
cltd
cld
push
or
js
fwait
mov
iret
insl
mov
lods
jne
cmp
subl
dec
outsl
push
aaa
fdivs
cmp
fcmovb
mov
xchg
pushf
or
inc
pushf
pushf
push
pop
mov
inc
dec
jp
push
jge
and
xchg
and
xchg
lahf
hlt
mov
outsb
jne
sub
test
cltd
adc
insb
faddl
jb
mov
inc
jb
dec
in
mov
and
enter
gs
mov
outsl
xor
add
adc
pop
xor
inc
stos
scas
adc
mov
or
insb
ds
pushf
ds
pop
pop
ljmp
iret
inc
xchg
hlt
push
jns
lods
push
outsl
mov
outsl
cli
inc
cs
and
and
aas
lea
mov
add
xchg
dec
mov
imul
pushf
lcall
cmp
dec
stc
out
cmp
lahf
lea
inc
push
in
lods
out
mov
mov
mov
outsl
lods
addr16
and
mov
adcb
fisubs
jo
mov
test
int
in
lods
xchg
adcb
jl
shrl
xor
pop
inc
jnp
mov
jo
inc
addr16
idiv
daa
fsubrl
ss
mov
mov
fdivrs
lock
or
and
pop
sahf
loopne
flds
and
jae
stos
mov
fmuls
jmp
jmp
pop
insl
les
mov
lods
fildll
out
ret
jl
pop
xchg
push
jl
lahf
insb
or
fimull
outsb
add
cmpsb
loope
adc
movsl
pop
sub
cmp
xor
test
aad
cmc
cwtl
aas
inc
mov
loopne
cmp
adcl
cwtl
adc
dec
inc
test
mov
mov
sbb
sub
and
mov
mov
adcl
ret
pop
mov
mov
dec
sbb
in
sarl
add
sbb
xchg
into
adc
addb
les
out
test
or
loopne
fldt
push
inc
jecxz
stos
fs
fildl
jecxz
lea
sbb
and
jb
dec
sub
aaa
lods
mov
cwtl
jg
and
arpl
gs
push
push
fprem1
mov
and
cmp
int
xchg
pop
push
jle
xchg
or
and
clc
les
lods
aas
or
inc
mov
jns
sub
dec
ret
lods
stc
mov
xor
xor
push
call
aam
cmpsb
pusha
shr
fiaddl
mov
pop
ja
add
arpl
mov
enter
mov
and
in
fucom
push
adc
jmp
cli
es
insl
cmp
pop
sub
movsb
xchg
and
xchg
out
xor
shl
pushl
jl
inc
inc
incl
aad
cs
mov
insb
xchg
xor
cmp
leave
cmp
stos
add
bound
pop
or
sahf
and
jae
and
add
test
dec
adc
lahf
lahf
addr16
aas
mov
xor
push
int
jno
dec
jg
sub
and
cmp
lock
int3
testl
lods
xor
add
jg
mov
stos
jne
mov
mov
sub
jp
sbb
nop
fcompl
or
lahf
sbb
arpl
jmp
xor
cmc
mov
cmp
adc
decb
aaa
into
inc
into
mov
dec
out
sub
cltd
ret
mov
popf
rorb
in
sub
push
cld
cmpb
sub
lods
movsb
xchg
pop
std
movaps
test
push
ds
mov
push
sbb
xchg
sti
les
shrl
movsl
adc
cmp
xchg
or
nop
sbbb
xor
mov
movsb
jg
bound
add
sub
fmul
cmpsl
jno
mov
call
call
addr16
sbb
out
lds
icebp
lock
scas
xor
addr16
movsl
mov
pushl
sub
jle,pn
out
inc
pop
inc
das
xor
jne
aaa
add
rclb
hlt
mov
mov
jo
imul
in
and
push
pop
mov
xor
cmpsb
nop
pop
add
leave
out
dec
adc
dec
xchg
mov
mov
dec
ret
xor
dec
dec
fsub
shrl
dec
int
iret
push
call
xlat
dec
lret
lock
sbb
sbb
in
test
mov
popa
adc
dec
pop
scas
inc
repz
and
mov
cli
xlat
ja
les
imul
or
inc
repz
and
cmpsb
sub
jo
mov
std
in
bound
fdivrl
std
lock
shll
insl
inc
and
hlt
imul
hlt
dec
xor
iret
push
mov
movsb
jne
sbbl
cmp
or
loope
mov
loop
sahf
outsl
test
test
and
cmpsl
or
cmp
mov
stc
cmpsl
mov
imul
mov
shll
pushf
cld
mov
pop
jg
and
pop
and
adc
mov
jmp
popf
lahf
pop
or
addb
int3
pop
mov
lods
shll
mov
inc
or
mov
pusha
jne
sbb
jnp
notb
sub
in
and
cmp
or
gs
lcall
and
push
pusha
stos
add
cld
aam
cmp
jg
loopne
mov
push
subb
mov
cmpsb
jmp
call
sub
out
aas
pop
fstpl
xchg
dec
xchg
pop
mov
mov
xchg
xor
mov
inc
fs
inc
lds
push
add
pop
movb
mov
dec
leave
mov
cmpsb
aas
adc
mov
movsl
mov
out
inc
xchg
imul
or
je
test
ss
xchg
in
jle
pop
jb
cltd
mov
jbe
call
jbe
dec
mov
pop
ja
js
out
aaa
ret
cmovbe
shlb
cmpsl
push
xor
inc
push
clc
in
shll
push
and
push
jmp
clc
pop
pop
xor
int3
dec
mov
inc
push
or
fwait
sub
inc
jp
jnp
cmpsb
lods
push
dec
cmp
int3
xchg
xchg
cmpsb
add
mov
push
sub
and
pop
push
cwtl
daa
xchg
dec
xorl
mov
mov
jecxz
popa
clc
xchg
xor
in
nop
and
ja
add
push
fs
out
xor
sarb
sbb
mov
lock
jae
mov
push
sub
mov
pop
xor
cli
mov
sti
cmp
sahf
pop
loop
js
sbb
mov
add
or
cmpsl
and
call
enter
mov
cli
xchg
and
sub
js
inc
popf
jg
xchg
enter
test
add
out
inc
or
push
mov
aas
jns
sub
data16
cld
jo
mov
sbb
cltd
ds
idivb
enter
std
cltd
out
in
aas
bound
sub
cli
addb
mov
push
adc
sub
cmp
pop
sbb
cmc
lock
popa
outsb
push
mov
sbb
nop
icebp
push
pusha
adc
adc
pop
jbe
shl
les
fmul
data16
push
pop
xor
outsl
pop
cltd
sahf
mov
sbb
mov
cld
jmp
std
sbb
repnz
mov
xor
sub
fwait
aas
ja
sub
xchg
pop
mov
adc
aad
cld
aaa
sbb
testl
outsl
lods
negl
sub
sbb
dec
xor
mov
lds
jl
into
pusha
pop
ja
pop
lret
mov
pop
jne
fdivrl
rcr
mov
ret
push
outsb
in
xlat
mov
hlt
stos
sbb
sahf
inc
mov
loop
loop
cmp
scas
mov
leave
jno
inc
fiadds
not
les
push
inc
push
aas
daa
push
movsl
mov
dec
xchg
aam
sub
bound
push
mov
xchg
leave
xchg
pop
mov
pusha
xchg
inc
mov
dec
aam
jo
shrl
dec
pop
cs
mov
pop
ret
add
data16
lds
das
xchg
inc
mov
stos
cmc
push
sbb
psrld
sbb
inc
xchg
jge
mov
stc
mov
push
push
movsb
xchg
and
addps
cmc
xor
sub
fnsave
pushf
mov
jae
sbbl
and
pusha
aas
mov
or
pop
sub
aam
jbe
sbb
cmp
je
sub
addr16
xchg
jae
cmp
ss
jp
in
cmpsl
add
loop
movsb
sbb
movsb
push
mov
xor
icebp
add
stos
fwait
mov
jb
cld
in
clc
pop
and
push
aad
adc
daa
push
aad
test
jle
xchg
push
add
pushf
and
dec
adc
or
dec
scas
add
inc
xchg
dec
cltd
sti
xchg
pop
movsl
push
sub
lds
scas
dec
fistpll
daa
fidivrl
jbe
pusha
loop
test
shll
jge
lea
insb
aas
mov
push
pop
sahf
les
fwait
and
adc
xchg
fstpl
push
loop
jno
sub
push
xor
mov
cld
lods
xlat
cmp
mov
enter
or
pop
shll
push
mov
adc
sub
add
jo
sbb
lds
or
iret
or
je
outsb
lods
dec
add
les
aam
lret
adc
loopne
fs
mov
sarl
mov
add
jl
test
mov
incb
out
inc
cltd
jns
sub
cltd
shrl
push
push
push
inc
jg
es
dec
iret
orb
adc
mov
push
sbb
hlt
inc
int
jnp
mov
sbb
iret
es
mov
add
mov
sti
pslld
scas
adc
or
mov
push
insl
ja
ret
inc
fidivs
cs
mull
jl
add
fcompl
push
leave
jmp
int
jbe
dec
lret
jmp
mov
call
and
cmpsb
dec
scas
sub
icebp
mov
mov
sbb
out
lahf
jno
insl
and
sub
cwtl
loopne
es
sub
stc
dec
into
jmp
aam
repz
gs
es
or
rorb
ret
push
mov
mov
mov
out
lret
out
push
std
sbb
in
xchg
divl
lcall
movsb
test
leave
imul
je
les
push
cmp
out
inc
ja
sub
mov
repz
mov
inc
lock
sub
xor
loope
int
les
add
sub
mov
daa
dec
or
popa
or
std
mov
cmpsb
mov
nop
mov
sbb
mov
push
cmpsl
popa
and
jmp
dec
dec
cmp
jo
sbb
push
mov
cmp
cmpsl
out
jbe
std
push
jae
cltd
into
stc
pushf
jae
pusha
cmp
xor
mov
mov
jmp
pushf
js
int
and
push
hlt
and
ret
adcl
sbb
adc
mov
fdivrs
call
cmp
push
fnsetpm(287
fwait
loop
mov
popa
stc
inc
cmpsb
mov
fbstp
nop
jb
mov
mov
push
in
xor
lahf
pop
das
out
cs
or
push
push
mov
mov
xchg
mov
sbb
fwait
add
in
sbb
sbb
push
les
in
sbb
fisttpl
sbb
std
rcll
adc
xchg
jbe
sarl
lret
cmc
es
fnsave
xchg
decl
int
stos
mov
jecxz
lea
jbe
push
mov
mov
loop
jmp
pop
mov
pop
push
xchg
push
pop
sbb
fsts
push
cvtdq2ps
int3
in
dec
jb
dec
je
lods
jl
mov
cld
movsl
xchg
jae
mov
xchg
xor
xor
ds
push
icebp
data16
lds
in
dec
mov
lods
inc
mov
inc
add
push
rcl
dec
popa
dec
pop
xchg
int
xchg
mov
icebp
add
or
cmp
cmc
js
pop
add
std
and
cwtl
mov
inc
fdivrl
ficoml
mov
inc
adc
mov
push
aad
mov
shll
inc
cs
mov
fstpl
insl
cmpsb
inc
out
inc
iret
dec
sub
push
push
pop
mov
jle
rclb
les
adc
aad
cmp
movsl
push
roll
in
push
mov
inc
repnz
int
pusha
mov
fidivrl
mov
cltd
pop
inc
jmp
scas
adc
les
pop
mov
mov
dec
cld
mov
stos
rcrb
xchg
and
inc
pop
push
scas
loop
jle
es
push
sbb
scas
aam
or
cmp
sbb
filds
nop
pop
stos
data16
cmp
aaa
jne
nop
ds
adc
sarl
pop
fisubrl
leave
out
cmp
fisubl
outsl
out
pop
in
and
push
and
les
data16
inc
jo
jg
xchg
xchg
mov
sbb
imul
adc
cmpsl
cmc
dec
or
fstpt
aad
test
or
push
loopne
xor
inc
dec
push
xchg
or
cmp
xchg
out
inc
pop
psrlq
shlb
push
imul
sub
pop
and
jne
arpl
cwtl
fwait
aaa
xchg
mov
sub
scas
pop
mov
movsb
dec
cmpsl
or
xor
aaa
sub
pop
add
add
inc
mov
add
aas
test
cmp
push
xchg
inc
out
add
mov
dec
cli
inc
mov
in
cmp
mov
push
test
sbb
pusha
imul
xor
repnz
fbld
lea
xor
jp
lret
filds
andb
mov
jl
out
stos
add
or
pop
mov
add
cmc
jbe
nop
jmp
shl
inc
cmc
popf
fadds
sub
and
clc
jbe
and
stos
xchg
mov
pusha
icebp
inc
lods
sbb
test
je
push
cmpb
xchg
in
int3
cmpsl
bound
fwait
int
inc
leave
lock
add
iret
inc
push
xchg
cltd
pop
xor
cmpsl
xor
jge
out
sbb
mov
rorl
cmp
sub
ja
add
push
dec
jg
fldcw
jae
lods
mov
inc
or
jg
add
icebp
pop
cmpb
insb
mov
std
sub
and
dec
adc
push
inc
ja
loope
xchg
push
lret
dec
mov
sti
cmp
movsb
sub
cmp
mov
sbb
pop
js
inc
push
int
sarb
pop
adc
sbb
sbb
push
push
rorl
add
push
repz
jno
cmp
lret
testl
lcall
aaa
mov
cli
inc
pop
ficomps
clc
inc
cmp
enter
inc
push
std
data16
xor
adc
icebp
sbb
and
adc
fildl
dec
rcrl
adc
scas
push
gs
pop
jl
jmp
inc
ss
int3
int3
sub
movq
push
fs
shll
pushf
ds
and
cwtl
test
cmp
jg
pop
sbb
sub
and
lret
mov
push
aad
idivb
in
std
or
fldcw
repz
fnstenv
jg
and
dec
push
xchg
leave
sbb
xor
xchg
popf
or
xor
push
pop
aam
xorb
repz
call
fnstsw
fwait
jge
frndint
mov
adc
repnz
ss
enter
in
mov
mov
fwait
sub
les
sub
or
aad
gs
or
sarb
inc
clc
add
push
sub
ret
or
mov
add
jl
insl
shl
cmp
lret
in
add
inc
stc
sub
fimuls
jg
fs
aas
sti
aam
or
dec
mov
scas
cmpsl
sbb
dec
fstpt
push
sub
mov
mov
call
mov
mov
fstpl
push
jp
repz
dec
xor
mov
cltd
jnp
cmpsb
bound
mov
js
xchg
jle
arpl
add
pusha
cmpb
add
fidivrl
scas
push
fyl2x
push
dec
or
movl
cmpl
xchg
fldl
and
jo
jnp
or
pushf
stos
mov
push
cltd
repnz
and
mov
cwtl
lret
xor
mov
push
push
popf
pop
xor
popa
mov
popf
iret
pop
sub
pushf
mov
inc
dec
cld
aas
lret
stos
aas
idivl
adc
in
mov
stos
scas
inc
das
aas
pop
je
xor
cmpsl
das
cltd
popa
jnp
jecxz
mov
inc
adc
ja
lcall
out
inc
add
fidivrl
add
dec
sub
pop
or
clc
arpl
mov
nop
adcl
aas
sbb
cmpsl
jno
clc
jle
aas
xchg
xor
rep
sbb
pushf
movsl
lods
fwait
rorb
or
cs
stos
push
mov
adcl
mov
push
pop
out
add
sarb
pusha
xchg
js
fwait
xchg
jne
jae
filds
mov
in
cmp
loopne
xor
jb
sbb
inc
ja
ljmp
js
pop
sub
sbb
fld
add
mov
dec
mov
mov
fwait
adc
leave
fdivrl
xchg
jns
and
mov
aaa
pop
sub
les
jns
add
fildll
xchg
bound
push
nop
or
in
jb
outsl
pop
jge
bound
popf
ja
xchg
movsl
pop
mov
jmp
jmp
sub
ljmp
cmpsb
fidivs
and
sbbl
push
cwtl
xor
cld
sbb
jge
pusha
das
ret
pusha
and
mov
mov
das
jmp
stc
mov
out
lock
and
hlt
pushf
int3
jns
push
popa
popa
and
xor
mov
adc
les
dec
xlat
fisttpl
xchg
adc
cmp
out
insl
jne
pushf
fisttpll
cld
sbb
repnz
mov
push
ss
fwait
leave
sbb
adc
es
sbb
in
adc
out
rcll
mov
sub
mov
std
adc
adc
popf
in
shr
icebp
in
adc
les
mov
das
adc
xor
lods
cmp
pop
mov
leave
sub
jl
aaa
cmp
pop
mov
cmp
stos
scas
inc
jo
pushl
push
pop
xchg
add
aaa
sbb
je
es
push
aas
in
out
or
push
jbe
rorb
inc
and
cwtl
rcl
jle
sbb
push
or
in
push
cmpsl
xchg
mov
mov
leave
add
and
es
jns
cmp
sub
xchg
sahf
and
jp
jp
fidivrs
dec
cmp
jae
push
mov
mov
imulb
mov
mov
out
fidivrl
iret
sub
enter
xor
lret
inc
test
ret
adc
jge
dec
jae
dec
arpl
dec
add
roll
inc
xchg
add
lret
sahf
inc
std
and
xor
add
cmp
pop
in
inc
or
cli
jbe,pt
inc
cli
cmp
mov
sbbl
fs
fwait
sbb
push
mov
test
fcomps
add
or
test
fcomip
popf
loop
mov
mov
mov
test
pop
test
sbb
repz
stos
insb
dec
or
orl
push
popa
sub
inc
js
add
insb
mov
add
fmuls
xchg
int3
sbb
pushf
inc
adc
xor
dec
adc
loop
loopne
adc
and
ljmp
sub
pop
leave
xchg
enter
rclb
add
ret
pop
inc
das
loopne
xor
ds
jbe
xlat
dec
lret
mov
inc
mov
movsb
ret
inc
cld
xchg
loope
orl
mov
mov
or
push
xchg
scas
xor
cld
and
xchg
sbb
fdivl
jb
in
rolb
dec
ds
xchg
or
push
clc
sahf
xor
mov
dec
mov
adc
xchg
ja
shll
popf
nop
push
sbb
xor
cmpsb
ficoml
je
jae
xchg
fnsave
leave
cld
adc
jae
into
lds
je
jecxz
or
dec
cmp
push
int
cltd
cmp
loope
out
push
int3
lods
sbb
cmp
scas
adc
mov
bound
inc
je
aas
jb
or
test
scas
stc
js
std
jl
sbb
mov
aam
xor
cmp
add
ret
ret
rolb
insl
add
clc
sub
pusha
pop
cmp
in
jp
ljmp
insl
mov
int
sbb
ds
in
xchg
jno
in
int3
fisubs
daa
add
jp
repz
in
jno
mov
jle
ret
repz
and
movsb
insl
lods
mov
mov
mov
mov
adc
insb
xor
inc
fnstsw
mov
filds
and
sbb
and
jno
repnz
fcoml
popa
jne
stc
sub
mov
xchg
in
jnp
add
dec
or
lcall
fwait
and
iret
cmp
push
js
cmc
push
sbb
xorl
loop
push
mul
jns
mov
add
mov
pop
int
aam
cmc
movsb
out
stos
or
pop
addps
push
push
xor
mov
mov
and
imul
pop
sbbb
xchg
inc
loop
int
cld
ljmp
and
mov
stos
cwtl
push
push
cmp
mov
add
xchg
push
inc
dec
dec
mov
ljmp
pop
mov
fisttpll
push
popa
and
and
inc
inc
loop
roll
insl
les
cmp
jns
cwtl
mov
cmp
adc
pop
inc
xchg
int3
dec
mov
in
pop
mov
cwtl
sti
aad
pop
cltd
jns
sub
rclb
mov
out
jmp
inc
mov
clc
push
cld
adc
leave
stos
pop
mov
pop
movsb
mov
rolb
xor
testb
call
adc
pusha
dec
xchg
idivb
inc
sbb
lahf
add
lcall
adc
movsl
loopne
add
mov
adc
push
or
aad
pop
sbb
into
notl
xchg
fists
mov
inc
jl
and
out
shlb
dec
add
stc
cwtl
lods
mov
aad
cmpl
mov
xor
xor
hlt
ret
lea
popfw
pop
int3
cs
mov
in
sbb
mov
in
ret
adc
pop
inc
mov
fisttpll
jbe
test
xor
jns
outsl
dec
es
repnz
arpl
int
scas
sub
push
fldt
xor
test
loope
or
pause
fldl
stc
dec
jae
xlat
iret
inc
lret
jo
test
xchg
negb
sub
dec
xchg
fstpt
dec
aad
out
fisubs
imul
mov
in
and
cs
lods
pop
imul
cmpsl
push
add
xchg
mov
sub
and
ret
cmp
adc
jge
dec
es
mov
ljmp
stos
inc
mov
mov
jge
out
mov
xor
shll
clc
jbe
cmpsl
xor
or
xchg
ds
data16
orb
jp
jo
dec
and
pop
fistps
xchg
pop
xchg
xchg
mov
adc
xor
push
call
stos
cmp
cmp
xor
insl
cmp
std
push
push
sbb
gs
rclb
lds
mov
movsl
jno
dec
pop
test
jnp
shlb
dec
imul
pop
lahf
or
pop
add
aad
movsl
xlat
fcomip
out
pop
jge
jbe
pusha
int3
repnz
sbb
mov
lods
cmp
cmpsb
std
ret
dec
push
daa
lock
fwait
lcall
sbb
addb
scas
xchg
inc
dec
sbb
cmp
xchg
mov
test
ret
data16
pshufw
and
xchg
push
or
mov
mov
aad
and
sbb
dec
mov
xor
mov
mov
mov
test
xchg
bound
inc
popf
mov
fdivrl
loop
xchg
es
adcb
pop
std
adc
xchg
pop
xchg
inc
dec
mov
fisttps
xchg
xchg
hlt
jl
add
nopl
cwtl
cmp
xchg
mov
fcmovnbe
or
mov
dec
adcl
push
dec
aam
mov
sub
pop
push
andb
sub
fcoms
fnsave
inc
add
add
into
mov
xchg
or
adc
and
dec
ficoms
sub
cld
fadd
pop
mov
jbe
dec
xor
xor
xchg
shr
repz
xchg
jp
xchg
call
ljmp
mov
and
xor
dec
and
shrl
hlt
movsl
into
pop
mulb
stc
fdivr
cmp
outsb
stc
cmp
out
in
jp
aas
push
add
aaa
cmp
fwait
ds
push
dec
sbbl
xchg
shr
cwtl
test
loope
jae
fdivrl
aas
cltd
jp
push
out
dec
mov
and
or
js
out
mov
hlt
mov
mov
cmp
jbe
push
das
ljmp
and
mov
cld
sub
rorl
pop
add
jl
fdivp
pop
out
pop
mov
add
jne
mov
int3
cmc
loope
shr
in
cwtl
inc
es
push
push
lods
pop
cmp
fcoml
leave
push
fiadds
sbb
pop
test
outsb
pushf
icebp
jno
xchg
xor
jo
mov
cld
add
xor
adc
cltd
cmc
sub
dec
repnz
mov
jle
mov
dec
xor
pop
mov
pop
push
aam
xchg
aam
mov
mov
and
push
sub
dec
sti
mov
sub
mov
pop
pop
add
lods
ficomps
enter
mov
add
ret
adc
out
test
gs
sub
inc
push
push
lret
sub
inc
sti
mov
fstpt
mov
into
insb
mov
test
cmpb
subl
fsubrs
xor
push
mov
lret
repnz
push
mov
lcall
stc
mov
pushf
sub
push
inc
cmpsb
jmp
xchg
shll
stc
lods
jno
mov
ja
daa
inc
jp
filds
inc
jno
lahf
movsb
sbb
imul
add
mov
jbe
insl
icebp
pop
xor
pop
mov
std
scas
inc
mov
jnp
lods
in
xorb
xor
cmp
mov
xchg
push
test
mov
xor
or
mov
sub
mov
pop
sbb
jecxz
and
adc
or
repnz
sub
cltd
jae
shl
ds
adc
jae
add
je
loope
iret
xchg
inc
add
fistps
cli
std
jmp
stc
mov
sar
ljmp
dec
xchg
je
or
and
cmp
add
dec
enter
inc
jnp
push
jns
mov
dec
test
sbb
push
mov
push
loope
pop
scas
mov
jo
ficomps
mov
js
mov
mov
loope
je
inc
nop
sub
or
enter
js
push
xchg
and
aam
jne
cmp
or
jnp
xor
call
jp
repnz
rclb
add
imul
xchg
mov
sbb
sub
test
add
stos
test
sbb
stc
movsb
shlb
sbb
arpl
jl
pop
cmc
cmp
fsubs
mov
pusha
cs
jp
push
ja
lahf
ss
xchg
dec
or
mov
pop
sbb
jmp
aaa
icebp
sub
sbb
test
xor
shll
push
lods
mov
scas
mov
cwtl
mov
inc
xlat
ss
xchg
hlt
jb
icebp
dec
and
dec
mov
cmp
push
jnp
or
mov
movsl
cmpl
lcall
mov
pop
fwait
mov
popa
mov
sub
xchg
mov
inc
mov
loope
pusha
out
inc
loope
xor
push
popf
sbb
stos
popa
sbb
push
mov
and
fisttps
adc
fnstcw
gs
in
in
push
scas
mov
ja
jbe
mov
jmp
pop
jp
in
cltd
and
and
mov
cmc
cmpsb
mov
call
js
arpl
cmp
adc
or
push
or
lock
lock
fimull
xchg
push
and
jbe
imul
ss
pop
repnz
lea
inc
and
sub
mov
jnp
sbb
ljmp
mov
pop
dec
movsb
aaa
push
push
push
mov
in
adc
dec
fsts
push
fcomps
xchg
inc
xor
leave
popf
repz
std
adc
ds
lret
scas
movsl
leave
clc
lret
pop
call
jge
jp
in
sbb
hlt
push
ljmp
and
aaa
jne
cmpsl
loopne
push
cmp
fmuls
pushl
lret
jmp
clc
xchg
imul
sub
sub
aad
shll
adc
insl
scas
pop
jb
js
jp
lcall
mov
rcrl
arpl
sbb
sbb
faddp
iret
push
jnp
mov
in
in
inc
in
orb
xchg
push
xchg
sbb
mov
adc
add
cmp
scas
insb
cld
jbe
aad
idiv
jno
xlat
lds
lahf
in
jmp
jmp
ja
mov
rcrl
dec
jnp
leave
sbb
cmp
push
pushf
or
lahf
add
or
dec
inc
mov
xchg
lock
mov
jno
or
ss
xor
hlt
pop
lock
mov
movsb
mov
sub
sbb
in
cwtl
add
addr16
rcrb
dec
in
icebp
dec
dec
pop
clc
cs
adc
lea
pop
outsl
ja
rcrl
or
cwtl
pop
imul
inc
or
pop
push
in
fadd
test
aam
cmp
xchg
jmp
jle
or
cmpsb
inc
mov
fucomp
fwait
xorl
test
sbb
fs
xchg
xchg
scas
clc
lea
xor
out
nop
lcall
mov
pop
out
mov
mov
xchg
xchg
out
xor
imul
lcall
iret
mov
mov
add
js
jo
pop
and
push
adc
push
and
pop
les
repnz
cmpsb
jp
in
rcrb
popf
shrb
out
pusha
pop
dec
push
scas
sarl
fwait
xor
add
sub
pop
jb
je
test
arpl
push
je
xor
insl
dec
inc
inc
jge
xor
sub
incl
inc
scas
call
xchg
or
and
std
lret
out
push
mov
or
insb
mov
jae
jbe
mov
xor
add
pop
ss
xchg
dec
fisttpl
dec
adc
push
ja
adc
orb
out
lret
mov
nop
aad
lds
adc
or
test
fdiv
cmc
stos
push
push
or
out
fbstp
xchg
push
xor
pop
ss
mov
pop
inc
cmp
push
ja
mov
insl
add
bound
mov
xor
jno
or
push
sub
aad
and
mov
rolb
fxam
pop
out
cmpsl
mov
pop
mov
int3
imul
repz
sub
xchg
adc
push
sub
xchg
lahf
pop
loope
sbbb
rcll
add
imul
jne
shlb
lods
mov
push
cmp
fistpll
sti
stos
dec
dec
jl
cwtl
push
jnp
jae
cmc
out
xchg
cmp
add
cmc
shrl
sbb
jae
fs
sbb
push
cmp
sub
and
loope
mov
and
mov
popf
jp
xor
and
fstpl
insb
shlb
sbb
addl
mov
mov
mov
jmp
aam
scas
and
xor
xchg
dec
in
test
ljmp
in
mov
dec
push
cmpsb
push
and
jns
aaa
pop
sbb
jle
xor
xlat
mov
push
adc
adc
data16
sahf
lret
shl
lea
repz
jecxz
pop
into
fsts
sarl
inc
push
pop
mov
inc
fstl
out
and
xchg
jne
jp
xor
sbb
repz
add
addb
xor
mov
push
aas
jb
test
jns
jnp
push
loopne
dec
jl
push
in
mov
xor
ret
xchg
les
sbb
sbb
add
sahf
in
rol
cli
daa
in
inc
icebp
cmpsb
push
fwait
or
out
dec
jecxz
ror
mov
call
sbb
cli
ljmp
sub
sub
push
test
lahf
push
jle
lds
dec
or
adc
sub
repnz
pusha
xchg
sbb
enter
pop
or
loop
out
in
jns
push
add
and
mov
mov
lret
xchg
sbb
inc
inc
cmc
xchg
jbe
test
ljmp
sub
mov
out
mov
shlb
jno
aas
add
out
sub
add
movb
push
inc
push
mov
or
jecxz
aaa
rcrl
fcmovbe
jle
arpl
shlb
lea
sbb
movsl
jp
ja
cld
arpl
icebp
push
jns
pop
ret
ss
test
mov
sbb
cmp
sub
cltd
dec
lea
push
cmovno
push
je
clc
sbb
addr16
push
cwtl
jle
aam
ret
inc
adc
jb
mov
jecxz
mov
sub
jmp
out
in
jo
aas
sbb
in
inc
into
popf
xor
jno
pop
cmp
ljmp
lock
outsl
xor
xor
add
push
dec
sub
sub
cwtl
movsl
and
insb
stc
push
fdiv
subb
mov
insl
and
dec
adc
sbb
lock
add
lods
in
cmp
adc
mov
stc
repnz
fsubs
pop
cmp
inc
pop
or
pop
enter
mov
cmpsb
fucomi
push
pop
mov
fsubr
mov
out
popf
shl
test
fcmovnb
jo
mov
mov
lahf
and
or
add
jge
dec
sub
xor
aad
dec
addr16
add
popa
xorb
and
in
das
out
dec
ret
cmpsl
imul
mov
push
pop
xor
or
aas
jp
pop
add
push
adc
adc
adc
mov
or
pop
andl
adc
dec
cs
sub
adc
mov
add
mov
movsl
xor
fimuls
push
fistl
cmpsb
add
xor
call
test
loopne
pusha
xchg
jb
les
and
mov
call
mov
lds
popa
cmp
push
or
cmpsb
cmp
call
cmp
popf
mov
adc
push
xlat
mov
or
subl
std
mov
leave
dec
or
les
shll
cmp
outsb
push
sbb
xchg
loop
hlt
xchg
jle
push
sub
push
add
into
js
xchg
sub
test
shll
repz
mov
shrl
movsb
inc
push
inc
inc
xorb
test
in
inc
lret
lcall
jg
or
mov
pop
jmp
ljmp
test
loop
filds
xchg
jnp
fistpll
add
gs
rclb
dec
mov
inc
cmp
xchg
mov
xchg
cmp
or
outsb
pop
dec
sub
and
mov
jno
scas
pop
fdiv
shll
lret
andl
rol
xor
ret
aas
mov
mov
mov
cs
fwait
and
mov
cmp
xor
stos
ja
loope
push
pushf
push
lods
xor
call
mov
insl
cmpsl
lods
test
xchg
sub
insb
in
mov
dec
push
and
stos
jb
dec
push
jne
pop
mov
cmpsl
scas
addb
xlat
dec
loop
inc
and
push
mov
pop
outsl
aam
sub
call
xchg
lds
jp
inc
xchg
andl
mov
cmp
push
adc
xor
cli
jbe
dec
mov
je
xchg
cmpsb
fwait
xchg
pop
iret
pushf
repz
mov
scas
sbb
push
nop
not
in
mov
fsubs
sarb
pop
lret
jae
fidivl
jne
out
ror
xlat
popa
mov
jnp
pop
pop
xchg
sbb
mov
pop
iret
popf
sti
mov
into
cli
call
mov
fs
in
jecxz
jecxz
imul
dec
pop
enter
sbb
pop
xchg
enter
sbb
ds
and
push
pop
mov
in
xchg
push
sbb
imull
adc
jmp
mov
dec
notb
popa
push
icebp
push
mov
imul
or
in
jmp
inc
shr
lods
fsubrs
cs
inc
mulb
rcrl
stos
mov
inc
rol
pop
je
ja
jb
lods
insl
cmpsb
rcrl
push
pop
lcall
sbbb
in
xor
inc
pop
or
push
add
push
dec
xchg
sbb
stc
push
int3
cmpsb
sub
xor
and
mov
push
sbb
mov
cmc
xor
mov
xchg
add
popl
lock
in
xor
lcall
fildll
gs
mov
pusha
aaa
and
jecxz
add
xchg
pop
sbb
push
sbb
xor
lds
outsb
inc
jp
dec
cmp
jmp
xchg
sbb
das
jecxz
imul
into
inc
lds
or
inc
popf
mov
pop
repnz
cmp
in
inc
or
ds
fs
mov
mov
jne
dec
dec
add
out
dec
test
and
dec
and
out
and
inc
mov
aaa
sbb
fs
xchg
fwait
sub
or
leave
xor
ret
repz
aad
ret
add
sarl
xor
add
pusha
mov
leave
inc
fistpll
mov
or
dec
mov
cwtl
pushf
jbe
mov
loop
fstpt
add
or
leave
loop
ja
daa
push
mov
pop
rol
test
sti
cmp
aam
or
cmp
xor
into
imul
lock
dec
shrl
pop
mov
insl
jns
gs
test
jb
cmc
adc
sub
iret
xchg
cmpsl
sbb
push
lock
out
xlat
xor
mov
les
dec
jge
sahf
add
xor
sub
jmp
pop
jne
jg
addr16
add
fbld
mov
pop
push
xor
inc
cmp
popa
sarl
std
mov
fs
addr16
les
test
dec
cs
and
adc
mov
inc
push
aad
pop
xchg
mov
and
xchg
addr16
add
insl
test
cmp
mov
jb
cmp
cwtl
ss
pop
cmp
lods
nop
insb
adc
in
outsb
outsl
sbb
adc
je
incb
cld
movsb
xchg
sbb
mov
sub
aas
aam
sbb
ret
mov
divl
mov
clc
fnstenv
out
mov
shll
out
push
jmp
iret
mov
insl
out
in
fbld
push
dec
mov
xor
mov
mov
aas
int
rol
dec
and
and
std
outsb
jmp
in
or
and
adc
xor
and
pop
pusha
in
mov
ja
jne
or
fucomp
aas
jb
jp
sub
jno
adc
mov
inc
nop
imul
in
dec
test
xchg
adc
out
jne
call
in
mov
lcall
es
cwtl
or
or
cli
cmp
jne
add
cmp
sub
lret
sbbl
ret
outsb
xor
cmp
test
mov
cmpsb
or
mov
fcmovb
cltd
or
cltd
seto
xor
arpl
jno
inc
ds
jmp
and
dec
insb
and
jno
sbb
lcall
jne
xor
pop
sbb
pop
xchg
rclb
adc
arpl
add
fiaddl
into
push
cmp
int
scas
aad
fwait
psllq
js
stos
jle
test
out
pop
sub
mov
sbb
dec
aam
push
jg
sub
imul
aas
sbb
mov
push
out
in
cmp
and
add
int3
arpl
loopne
je
add
mov
pushf
jns
sub
bnd
scas
pop
mov
mov
add
push
xchg
push
adc
loop
shrb
xor
mov
jmp
dec
loop
xchg
pop
sbb
inc
imul
cltd
orb
lret
mov
mov
inc
mov
cmp
jmp
xor
arpl
xor
scas
sahf
mov
js
add
pop
dec
jg
test
sbb
pop
xchg
push
push
pop
call
cld
mov
sti
cltd
jg
daa
into
xchg
mov
test
lods
cmp
shlb
aas
fsubrl
cwtl
fistl
jns
pop
inc
ficomps
jecxz
ja
mov
nop
dec
lcall
enter
fldenv
decl
cmp
ret
sub
dec
sub
cmp
push
sub
sarl
scas
pop
or
ss
in
push
push
jo
mov
adc
xor
jmp
push
dec
sub
xchg
int
sbb
aaa
push
pop
loopne
jae
mov
icebp
ljmp
lret
jge
mov
sbb
inc
stc
mov
mov
cmp
shlb
xor
insl
ret
jnp
jl
xor
mov
xor
push
cli
inc
sbb
fcomps
xor
and
add
jp
or
lds
into
mov
jl
pop
lock
sahf
movl
data16
jp
fdivl
outsb
and
pop
cli
adc
cld
xchg
lret
or
cs
punpckldq
shlb
dec
push
test
mov
into
fnstsw
push
out
push
mov
sbb
jnp
xchg
sahf
test
mov
lock
cmc
cmp
mov
loop
pop
repz
nop
sarb
push
add
stc
pop
lahf
dec
sbb
stos
lds
sbb
sbb
in
xor
or
adc
push
mov
call
repnz
mov
int3
fdivl
iret
mov
inc
insb
push
jo
mov
inc
push
pop
add
adc
add
ret
andl
xor
sti
xchg
cmpsb
push
or
scas
fidivl
cmp
mov
cld
cwtl
jecxz
insl
cmp
mov
xor
and
sbb
aam
dec
adc
mov
movsb
inc
xchg
jnp
test
jns
sti
mov
arpl
gs
sub
inc
xlat
mov
or
or
or
and
xor
and
xor
cvtdq2ps
xor
jmp
xchg
cmp
rcrl
pop
inc
push
outsb
loope
xchg
mov
and
into
inc
outsb
outsb
jle
adc
push
mov
pushf
jo
mov
clc
pop
repz
jnp
xchg
test
mov
out
lods
je
jecxz
daa
push
xor
out
and
jo
lds
imul
daa
popf
mov
cmc
mov
push
stos
mov
mov
mov
and
jmp
sub
iret
sub
rcll
daa
outsl
cmp
mov
xchg
int3
jno
mov
sbb
adc
dec
adc
fs
arpl
jae
sbb
add
jbe
xchg
ret
dec
sub
mov
xchg
push
or
mov
repnz
adc
dec
dec
inc
xlat
push
mov
and
jae
insb
repz
mov
adc
into
pop
and
mov
mov
mov
dec
cmp
outsl
outsl
jb
sahf
cli
movsl
inc
mov
test
inc
xchg
and
ja
pop
jg
test
pushf
in
stc
pusha
cmc
bound
outsl
mov
sub
adc
psubw
dec
inc
fucom
push
mov
jns
fwait
push
pop
lea
inc
push
add
iret
insl
lea
sub
cmc
call
aas
push
lret
stc
out
mov
sbb
jbe
out
dec
inc
repz
add
aaa
lret
jle
inc
enter
adc
rolb
cltd
mov
xor
adc
iret
rclb
dec
xchg
ficompl
nop
fstl
xchg
mov
or
xor
movsl
loopne
sub
enter
out
sbb
sbb
loop
dec
icebp
loop
les
push
jmp
shl
iret
cmp
mov
xor
add
pop
inc
stos
xor
mov
or
inc
cmpb
aad
sub
les
sub
pop
addr16
imulb
add
test
arpl
movsl
mov
xor
out
mov
ds
scas
push
fsubrl
ja
call
and
dec
xchg
es
cmpsl
fwait
xchg
jmp
and
cmpsb
dec
mov
imul
adc
adc
sbb
in
dec
pop
call
ljmp
out
cmp
jp
mov
push
mov
test
fs
jle
xor
lcall
call
cmp
iret
repz
jle
lahf
and
cmpsb
mov
test
outsl
leave
fsts
xchg
fwait
cmpl
cmpsl
repnz
xchg
cmp
cmp
inc
mov
pop
fisttpl
js
mov
out
cmp
imul
sub
inc
hlt
ret
mov
dec
mov
xchg
mov
sbb
iret
cmp
cmp
or
fidivrl
mov
sbb
mov
in
sar
mov
repnz
sar
stos
lahf
addr16
outsl
xor
lahf
mov
int3
mov
dec
jecxz
loopne
mov
xchg
push
out
pop
lea
sbbl
fimull
imul
std
xor
jge
mov
cltd
ficoms
pushf
jge
jo
icebp
loop
insl
fcomip
mov
mov
cmpsl
aam
and
add
jb
or
jns
jp
mov
push
mov
cmpb
cli
in
xchg
and
pusha
sbb
lea
mov
mov
or
and
sbb
xchg
push
fldt
or
jno
dec
mov
and
pop
pushl
adc
add
ja
call
jns
xor
fs
insl
mov
pop
arpl
mov
bound
sbb
or
dec
cmp
pop
lods
imul
push
out
mov
mov
xor
and
sti
ret
xor
xchg
cmp
js
scas
and
movsl
outsl
sub
in
daa
dec
cmc
mov
cli
push
fcomip
inc
daa
js
enter
and
xor
repz
jb
sbbb
mov
push
jns
and
insb
jo
sub
or
cld
mov
mov
cwtl
insl
cmp
jbe
test
xlat
std
loop
testl
das
mov
ret
cmp
inc
sub
cmpsl
mov
lret
mov
aaa
or
lods
and
lret
sahf
cld
ret
push
add
or
push
pop
daa
adc
dec
push
xlat
shrl
adc
mov
imul
fs
addr16
daa
cs
fstpt
sbb
push
push
js
imulb
int
xor
in
xor
ljmp
fcmovnbe
or
add
fsubrs
insb
sub
enter
adc
inc
lret
stos
fidivl
pop
add
mov
sub
jecxz
xchg
out
mov
inc
adc
jmp
test
jne
cltd
sahf
lret
stos
jne
sub
xor
ds
inc
outsl
pusha
or
pop
cli
dec
test
or
cld
sbb
les
push
dec
xchg
pop
xchg
sti
mov
testl
push
push
popa
je
loope
or
xorl
jp
mov
inc
push
pusha
xor
movsb
aam
lods
adc
jg
es
lcall
and
repz
lret
sub
arpl
test
ds
repz
int3
mov
sbb
push
popf
sbb
insl
cmp
arpl
testl
cmpsb
xor
jecxz
xchg
add
push
mov
add
hlt
call
lods
js
int
mov
xorl
in
push
dec
dec
test
ja
das
jnp
sar
adc
inc
mov
pop
insb
add
fisttps
add
out
bound
xor
sbb
stos
xchg
jle
push
pop
loop
mov
mov
add
mov
sbb
les
sub
pop
xlat
adc
or
mov
push
dec
iret
imul
andb
aad
pop
ja
add
shlb
xchg
add
jp
repnz
xchg
xchg
xor
fisubl
stos
imul
aas
lcall
push
out
aam
decl
jne
push
out
add
das
fdivrl
add
push
aaa
adc
or
in
mov
mov
jl
ljmp
test
sbb
adc
jmp
inc
pop
stos
shlb
mov
push
mov
and
call
shrl
lock
mov
pop
pop
xor
adc
dec
aas
cwtl
fmul
aas
fmuls
mov
mov
clc
repnz
push
add
mov
dec
cmp
xchg
lock
pop
pusha
xchg
aam
pop
cmp
dec
jne
fsubr
push
mov
xchg
fldl
or
mov
push
data16
xor
push
outsb
shlb
scas
dec
out
xchg
and
out
faddl
stc
push
rcr
jb
shrb
sub
lret
int
cmp
push
test
xchg
lods
xor
push
out
jno
aaa
sbb
inc
lods
xchg
pusha
mov
gs
lods
enter
inc
jge
xchg
cli
outsl
mov
enter
fucom
imul
fbstp
fildl
jmp
or
jp
fidivrs
add
mov
aaa
mov
ret
xor
outsb
mov
adc
rorb
or
inc
jle
mov
jg
scas
mov
sbb
movsb
pop
lea
out
shll
jecxz
xor
push
out
test
fs
testl
jge
roll
js
mov
fucom
pop
cltd
lcall
lock
fabs
push
jo
in
bound
popf
clc
in
lahf
jo
add
mov
push
mov
sub
sbb
aam
inc
out
leave
icebp
mov
in
out
cwtl
push
add
adc
cmc
xor
test
test
fcomps
push
dec
mov
mov
mov
hlt
push
icebp
or
lods
cmpsl
sbb
bound
shrl
lret
mov
cmp
pushf
addr16
xorb
test
fmuls
xchg
ja
pop
jg
fidivrs
decl
sub
sbb
into
in
and
push
push
jecxz
clc
movsb
jo
jnp
dec
cmp
stc
mov
rolb
dec
or
dec
pop
es
repnz
cs
ret
xchg
adc
fnstsw
out
ds
and
ret
push
inc
je
adc
aas
mov
mov
icebp
sti
push
fmuls
imull
pop
pusha
call
add
mov
mov
sub
test
sbb
or
jge
mov
cmp
mov
sub
pop
call
lret
pop
clc
dec
lods
outsb
mov
dec
adc
or
test
lret
pop
mov
mov
mov
into
dec
and
fs
push
pop
inc
jle
rcr
imul
sbb
inc
adc
xchg
push
pop
out
movsl
imul
xor
adc
adc
fdivr
js
sbb
and
mov
add
push
mov
inc
mov
or
ret
hlt
out
cmp
sub
ret
dec
jb
sti
push
test
repz
test
adc
or
xor
push
xor
aad
lcall
icebp
pop
out
insl
cmpsb
xchg
jnp
mov
arpl
daa
dec
lea
popf
ljmp
rolb
mov
daa
iret
inc
push
ljmp
push
inc
das
movb
sub
aad
pop
nop
sub
jns
lret
fstps
cmpsl
cmc
xor
or
cmp
xchg
fcos
push
jecxz
mov
adc
mov
jmp
mov
jns
dec
cwtl
xchg
pop
adc
ret
pop
out
and
push
mov
xor
inc
das
scas
lahf
iret
sbb
test
cmp
insb
jmp
sbb
addr16
jle
stos
jp
lock
jnp
in
xchg
inc
dec
jle
or
inc
daa
push
sub
popa
and
push
adc
stc
mov
test
or
push
cmpsl
insb
push
and
xlat
cmp
mov
xchg
es
dec
sbb
aad
inc
mov
hlt
push
pusha
xor
sahf
push
aas
int3
sbb
xchg
test
out
outsl
dec
pop
shl
jno
fwait
jecxz
jns
rcll
cmp
adc
mov
push
adc
mov
jg
ljmp
emms
pop
jno
pop
jecxz
pop
jp
cmp
xor
out
sub
jecxz
jno
push
pop
or
jb
xchg
mov
decb
dec
insl
sub
cmc
mov
repz
jbe
and
stos
xor
repnz
adc
mov
pop
sbb
daa
jb
push
dec
mov
cmp
iret
call
cmp
xlat
adc
fwait
jbe
pop
xchg
shl
pop
mov
dec
mov
fildll
push
lods
cmp
cmp
std
and
dec
frstor
das
imul
out
xchg
mov
test
mov
mov
xor
hlt
loope
loope
in
mov
loopne
mov
cmp
fs
pop
push
mov
popf
clc
fucomp
or
cmpsl
aad
ds
jno
dec
fidivrs
lds
mov
xorb
pop
xor
dec
lock
fnsave
scas
insb
adc
pop
inc
sbb
imul
add
mov
stos
orb
add
notb
jl
notl
mov
mov
sub
ljmp
xchg
fcoms
mov
xor
xchg
outsl
or
sub
fildl
jl
cmp
cmp
stos
mov
xchg
or
out
add
inc
bound
mov
mov
pop
jmp
sbbb
movsb
ljmp
data16
std
adc
mov
mov
into
fnstenv
xchg
jg
pop
ds
push
xor
shll
inc
les
repz
jg
pusha
stos
fwait
xor
mov
lock
cli
loopne
and
inc
iret
je
flds
adc
lahf
and
and
mov
icebp
xor
jno
shrl
sti
mov
inc
fs
ss
jne
jno
pop
add
fdivp
loope
xor
loopne
and
cli
leave
aas
mov
ds
and
ja
dec
mov
and
push
cmpl
add
leave
icebp
mov
nop
sbb
leave
dec
idivl
out
stos
and
sbb
sahf
std
sahf
xchg
call
xchg
cmpsl
xor
addr16
test
mov
divl
fists
lock
or
lahf
mov
jmp
push
pop
fisttps
rep
mov
pop
cmp
jne
lods
lea
sub
hlt
arpl
dec
aam
das
jl
jne
jg
test
fs
inc
sub
pop
pop
push
test
push
cmp
dec
and
xchg
jno
sbb
pusha
out
mov
inc
out
movsb
mov
xchg
cs
nop
xchg
mov
pop
add
xor
mov
adc
cmpsl
mov
mov
fildl
lods
arpl
movsl
mov
andl
lock
aas
push
clc
or
stos
sub
mov
iret
pop
mov
adc
fmull
fs
jecxz
scas
dec
dec
adc
cmp
out
std
es
in
sub
dec
clc
sub
xor
xchg
dec
ficoms
inc
pop
inc
into
sahf
cmpsb
lahf
jl
mov
cmp
dec
out
sbb
push
fstl
in
sub
jp
lcall
mov
mov
jp
lds
mov
or
xorl
xchg
stos
push
cmpsb
sahf
push
and
sub
push
andl
fimull
ret
lea
sub
stc
movsb
bnd
sub
sub
mov
arpl
lods
xchg
ljmp
std
or
mov
fcomps
js
iret
ret
shll
xchg
mov
xchg
mov
inc
push
mov
mov
jl
adc
cmp
test
or
cld
inc
and
push
pusha
imul
bound
pop
orb
cmc
gs
lds
add
jns
outsb
cs
testb
inc
sbb
or
pop
pop
mov
insb
pop
add
push
inc
dec
jb
fstp
sbb
stc
rol
fwait
or
lcall
push
negb
and
mov
lock
and
in
cmp
mov
popa
mov
xor
arpl
pushf
enter
lcall
sbb
mov
inc
push
mov
kmovb
adc
dec
loope
loopne
or
call
neg
pop
test
test
cmp
mov
sub
je
or
cmp
lahf
insb
and
stos
sahf
or
mov
das
mov
inc
popl
rclb
lcall
scas
push
out
jmp
shrb
pop
hlt
xor
and
jo
pusha
aad
adc
pop
pop
mov
jb
jne
mov
mov
jno
mov
lret
sub
mov
jns
cmpsl
fwait
insb
push
inc
popf
mov
sub
or
pop
lock
pop
or
cmc
lods
sub
push
out
scas
mov
xchg
cmpsb
je
ljmp
stos
leave
sbb
mov
xchg
jne
inc
mov
xchg
orl
inc
jge
arpl
xchg
rclb
inc
scas
sbb
cwtl
mov
add
xor
xchg
cmp
sub
ficoml
flds
or
bound
mov
push
mov
jae
mov
dec
push
inc
scas
ret
cmpsl
inc
jbe
insl
dec
xchg
jge
dec
clc
inc
jo
fsubrl
adc
jmp
into
and
enter
aam
sbb
or
pushf
fidivs
in
mov
std
xlat
xchg
push
or
loope
push
dec
pop
sub
pop
aaa
cmp
ds
mov
and
or
lea
arpl
dec
das
shl
lds
push
jb
mov
pop
testl
jge
repnz
mov
or
dec
lock
in
inc
jae
mov
pushf
xor
adc
repnz
pop
and
cs
pop
outsl
sahf
mov
inc
inc
push
or
arpl
push
pop
lds
pop
jbe
lret
clc
out
adc
mov
jb
sbb
pop
sbb
iret
mov
jnp
andb
xor
incb
ret
sub
rcl
dec
out
push
addr16
fwait
jno
or
mov
mov
inc
or
adc
pusha
jl
jg
arpl
adc
jmp
frstor
scas
or
jb
inc
in
movsb
aas
out
bound
pop
mov
pop
jno
pop
les
loop
xorl
sub
movsb
or
jg
pop
xchg
mov
inc
mov
enter
jg
sub
xchg
sbb
ret
in
js
inc
dec
cmpsb
data16
add
iret
or
hlt
xchg
stc
leave
rcrb
push
mov
push
xchg
mov
sub
fcoms
inc
lea
lods
sbb
dec
add
test
jle
imul
and
iret
test
xor
loop
fists
das
cmpsl
lcall
arpl
std
dec
sbb
mov
or
dec
out
pop
mov
pop
ljmp
sub
xchg
in
and
gs
jb
xchg
lea
or
add
int3
sbb
pushf
mov
mov
push
xor
push
xor
movsb
mov
xchg
jp
xchg
bound
daa
mov
push
jge
mov
pop
jecxz
add
xor
add
inc
fwait
rolb
xchg
mov
xchg
movsl
jmp
lret
lcall
xchg
xchg
push
jne
pop
jbe
hlt
test
movsl
push
push
mov
cmp
jne
dec
fnop
aaa
jmp
bound
jo
in
cmp
push
in
inc
sub
push
cltd
ret
mov
push
mov
in
or
fs
dec
adc
iret
pop
es
pop
into
inc
mov
xor
sbb
inc
pop
cmp
arpl
pop
or
xor
add
xchg
push
rol
addr16
nop
and
inc
shll
xchg
loope
hlt
inc
cmp
mov
mov
in
adc
into
int
daa
sti
xor
shrl
mov
sbb
sub
jl
xlat
and
xrelease
nop
cld
pop
push
dec
inc
dec
add
xor
ficoms
dec
into
subl
mov
pop
mov
pop
dec
ja
sub
insl
or
pop
xchg
leave
inc
daa
in
leave
aas
sbb
das
sbb
sahf
pop
shr
sub
push
cmpsb
jp
popf
xlat
lds
sbb
cmpsb
mov
std
rolb
in
movsb
fldl
fnstsw
dec
ss
cmp
pushf
mov
push
cli
jno
jl
inc
cld
lock
test
xor
es
test
mov
out
out
cmp
add
outsb
xchg
xchg
jb
jo
test
and
push
daa
mov
jp
jmp
pusha
mov
fistpll
jmp
xor
jno
jmp
int3
imul
js
pop
mov
adc
mov
mov
jge
push
sbb
adc
add
add
icebp
lret
imul
dec
and
sub
mov
lock
jmp
adc
mov
je
arpl
call
insb
lods
ficoml
dec
inc
cmp
repz
imul
cmp
jno
lods
in
add
imul
ljmp
testl
mov
push
adc
sub
ljmp
out
int3
fists
icebp
cmp
xchg
in
ret
dec
pop
push
mov
stc
nop
mov
jmp
inc
out
add
cmpsl
cld
mov
jbe
mov
rcrb
notb
ficomps
into
andl
lods
jo
or
fnsave
hlt
sar
aas
sti
jp
dec
mul
shll
inc
pop
movsl
out
mov
insb
lahf
pop
or
mov
add
sub
or
xchg
add
cmp
jbe
aad
cmp
ss
fsubr
pop
mov
pusha
gs
ja
push
outsl
push
faddl
ror
mov
shll
je
shrl
jb
clc
xchg
dec
or
shrb
cmp
xlat
push
mov
jbe
imulb
int3
cmp
cli
dec
jae
pushf
fdivp
inc
adc
loopne
cmpsl
movsb
sub
sub
xor
hlt
sbb
jmp
mov
dec
or
adc
inc
adc
bound
push
decb
test
jecxz
push
mov
lret
ds
mov
adc
sub
imul
mov
push
cltd
inc
inc
inc
mov
ss
pushf
sub
cld
sbb
enter
enter
movsb
sub
adc
xchg
cwtl
mov
mov
xorb
orl
xchg
pop
jno
lods
pop
and
enter
and
adc
pop
xchg
jb
adc
cmp
sub
iret
push
sti
outsl
cmp
jmp
sti
dec
pop
scas
mov
push
jle
add
les
repz
mov
pop
ss
ret
xchg
push
incb
pushf
jg
dec
and
test
inc
pop
scas
push
xor
idivl
cmpsl
push
jb
retw
int
cli
stos
pushl
xor
adc
adc
sti
dec
repz
js
movsl
xchg
jl
and
mov
jle
daa
fwait
xlat
test
clc
push
shll
jne
push
and
loop
xor
xchg
ds
mov
xor
mov
dec
xor
ret
add
lcall
dec
jbe
or
cmc
inc
repnz
mov
mov
adc
cwtl
sub
and
cmp
inc
xor
push
cli
push
xchg
mov
icebp
shll
and
stc
inc
je
lock
loope
outsb
sub
xor
jle
gs
or
and
push
add
jno
mov
pushf
xchg
sbb
addr16
cmp
fistpll
xchg
inc
cmpsb
push
movsb
push
cld
mov
orl
in
jo
inc
and
adc
aam
in
add
pop
cmpb
and
inc
mov
and
leave
shlb
bound
cwtl
lret
push
fnstenv
das
ret
sub
dec
mov
std
jp
out
incb
jge
dec
jno
js
loope
mov
lcall
nop
or
xor
out
inc
into
dec
pop
arpl
jb
or
dec
sbb
stc
pop
int
leave
mov
xchg
sbb
add
ds
loop
push
or
jg
out
adc
sbb
ret
leave
xchg
aam
xchg
xor
sub
test
test
cltd
and
pusha
repz
cltd
fs
jne
ror
mov
adc
rclb
movsl
xlat
push
dec
jmp
ret
or
xchg
jae
adc
dec
addb
shll
mov
cmp
pop
and
stos
add
mov
lea
lods
sbb
cltd
js
mov
rcrl
sbb
push
cwtl
out
iret
cmp
mov
add
loop
aam
pop
pushf
or
sbb
stos
or
mov
jb
imul
daa
sar
outsl
adc
jp
pop
inc
push
adc
rcrb
dec
mov
cld
sub
cmp
shll
mov
insb
jle
mov
in
loope
fmull
repz
into
adc
stos
xor
ucomiss
inc
xchg
leave
xor
ljmp
arpl
enter
mov
xlat
loope
pop
lahf
int3
daa
in
popf
pop
rorb
jbe
or
aas
push
pop
pop
data16
fwait
dec
jp
cmpsb
cmpsl
mov
inc
popa
mov
icebp
push
adc
jnp
pop
lds
out
ds
and
hlt
inc
mov
dec
pop
dec
jle
cmp
pop
xchg
dec
xorl
test
add
dec
mov
jb
lods
repnz
xchg
xchg
mov
sub
jo
push
xor
and
mov
push
xchg
in
mov
fs
mov
mov
je
outsb
inc
jbe
fisubl
inc
xor
xchg
and
lock
ja
sub
lret
mov
mov
aam
sbbb
adc
mov
push
mov
and
out
push
mov
imul
push
into
ljmp
sub
inc
push
push
mov
pmuludq
jnp
pop
jp
mov
mov
sub
sbb
lods
imul
jl
or
popa
jnp
xor
jp
ret
add
aad
sti
pop
ret
hlt
fistl
cmp
sbb
dec
stos
mov
testb
ret
add
sub
sub
fwait
cwtl
mov
adc
ret
mov
pop
mov
mov
shr
addr16
push
cmp
outsb
mov
pop
xchg
push
inc
xor
mov
ret
or
cmp
sti
addr16
call
lcall
mov
pop
push
pop
add
cmp
sbb
lcall
adc
stc
fwait
stc
aad
sti
push
add
jge
jno
cmc
jno
arpl
fisttpll
pop
sub
arpl
ljmp
jae
and
in
outsb
cmpsb
lahf
stos
aam
and
sbb
ficompl
cmp
pop
jbe
imul
xor
lods
pop
and
pushf
push
xor
movsl
dec
in
daa
ss
jle
in
or
out
cmp
xchg
cmc
jmp
pop
or
clc
sub
jns
xor
mov
cs
cmp
sbb
pop
repz
sbb
leave
fidivl
in
mov
jb
jecxz
dec
stos
sti
insl
xor
cld
leave
stos
xchg
daa
popa
sbb
out
and
pop
push
jle
std
fs
mov
out
xchg
push
push
push
inc
loop
xchg
lcall
leave
mov
fildll
ret
jmp
and
fwait
xlat
negl
rolb
mov
sub
sahf
cltd
not
pop
push
adc
mov
pop
jle
inc
nop
and
sar
addr16
add
jl
mov
addr16
inc
inc
and
add
jp
lock
push
dec
pop
mov
imul
xchg
mov
push
ret
inc
mov
push
fadd
inc
lds
xor
push
mov
and
mov
xchg
sbb
nop
mov
insl
xor
movsb
fsubs
hlt
popf
cmp
rcr
ds
ljmp
movsl
out
jle
nop
push
in
adcl
push
push
push
pop
and
das
pop
je
mov
arpl
lret
mov
and
fsts
lock
es
loope
and
stos
inc
in
cmp
subb
sub
add
cmp
mov
push
les
inc
add
fwait
mov
add
decl
or
subb
aam
mov
iret
stos
call
adc
sbb
mov
adc
lret
xor
cmp
push
leave
xchg
xchg
push
or
dec
fnstcw
repnz
pop
mov
push
sub
pop
jnp
xchg
outsl
adc
mov
jg
movsl
jecxz
leave
cmp
and
mov
xor
mov
sbb
mov
inc
push
lahf
pop
adc
loope
cmpsb
dec
out
sysret
js
leave
push
and
shlb
lods
xor
sbb
mov
or
mov
push
mov
cmpw
in
xor
dec
dec
repz
xor
jbe
test
adcl
shll
mov
insb
adc
add
xchg
subb
or
gs
jmp
jge
dec
rorl
mov
mov
pushf
scas
mov
pop
andb
inc
push
inc
cmp
nop
pop
mov
fistpl
mov
fsubr
mov
lret
loope
pop
pop
mov
xor
mov
push
jbe
xchg
or
sub
call
inc
mov
xor
pop
iret
insl
hlt
aam
sbb
pop
sbb
jbe
dec
test
mov
mov
sbb
sbb
aad
loop
imul
adc
xchg
iret
pop
loopne
repz
cmp
ret
idiv
push
pop
pop
sbb
stc
sub
xchg
andl
faddl
push
mov
jmp
inc
mov
adc
mov
jp
bound
lcall
xchg
rcrb
lahf
dec
jns
sbb
jl
repz
cwtl
and
into
fimuls
shrb
sbb
dec
pop
cmpl
mov
ja
cli
enter
test
mov
xchg
testl
jbe
das
inc
jne
ret
xchg
dec
mov
xchg
pop
out
cmp
aam
outsb
mov
in
out
add
popa
jo,pt
push
out
fmuls
shlb
push
mov
jl
mov
add
mov
jne
jo
in
xchg
push
das
cmpsb
fs
idivl
call
xchg
dec
stc
mov
dec
mov
jbe
push
push
jp
iret
and
mov
cltd
sbb
cmpsl
push
push
lds
stc
fildll
in
mov
addb
call
fstl
je
in
xchg
mov
sbbb
push
sub
adc
cmp
and
adc
xor
es
andb
or
add
xor
push
jl
push
xchg
jmp
cwtl
test
aad
or
xor
sbb
nop
adc
out
cltd
clc
scas
loopne
in
lock
outsb
and
lret
ja
push
ss
ret
fadds
sbb
dec
mov
mov
repz
mov
js
jp
xor
push
jae
xor
out
cs
or
mov
mov
pop
mov
lods
mov
or
jg
pop
out
and
jb
iret
inc
sub
xor
mov
stc
pop
aam
sbb
outsl
adc
bnd
xchg
and
scas
cmpb
in
punpckhdq
dec
aaa
lods
xor
addr16
out
ret
les
pop
nop
subb
push
lea
pop
jb
push
movsl
cmp
jb
call
in
movsl
dec
shrb
or
or
fwait
dec
xchg
mov
dec
xchg
push
imull
push
fdivrs
mov
call
xor
test
int
push
out
popa
test
mov
rcrb
insb
rorl
cmc
mov
divb
adc
pop
std
mov
xor
pop
decl
js
int
inc
adc
push
fistpl
xor
jae
das
movsl
mov
mov
cmp
mov
add
and
int3
std
sbb
rolb
aaa
or
out
insb
fmuls
push
lods
stc
fdivs
es
and
jl
popa
inc
dec
js
test
mov
add
loop
push
mov
inc
mov
into
mov
mov
cmp
leave
outsb
rcll
in
arpl
ret
sub
dec
mov
clc
xor
dec
repnz
pop
push
outsb
sbb
mov
jmp
jne
int3
cmpsl
js
adc
imul
adc
xor
mov
mov
push
push
lret
sub
mov
push
fwait
clc
push
addr16
pop
dec
orb
js
or
push
js
mov
leave
les
cmp
shl
or
xor
out
cmp
jbe
lea
mov
in
mov
jmp
dec
lcall
and
xor
cltd
dec
stos
inc
cmpsl
inc
inc
sbb
cmc
dec
divb
popa
mov
lcall
rorl
sub
mov
adc
outsb
or
mov
push
lods
out
repnz
sbb
inc
or
add
cmp
cmp
xor
mov
adc
push
push
mov
pextrw
sub
mov
dec
fldcw
scas
pushf
insl
arpl
mov
adc
mov
jbe
lahf
int3
frstor
inc
jmp
jmp
data16
inc
mov
nop
jmp
xor
rolb
out
fsqrt
fsub
outsb
sub
mov
lret
in
imul
mov
inc
push
dec
xchg
out
in
sti
xor
and
bound
cmp
dec
mov
std
lret
push
mov
and
fs
xchg
xor
cld
mov
andb
lds
lret
sahf
pop
xchg
jecxz
outsb
lock
pop
fimull
andb
out
add
sbb
mov
aas
adc
mov
dec
mov
dec
mov
xor
sti
sbbb
cmpsb
xor
or
pop
add
cmp
imul
push
push
push
cmc
mov
mov
sub
icebp
or
out
iret
add
cwtl
jns
ret
cmp
add
fcompl
test
cli
fucomi
aad
cmova
adc
mov
movsl
testl
pusha
imul
outsb
add
pop
pop
jb
mov
pusha
xchg
jecxz
mov
mov
ljmp
outsb
and
inc
in
mov
pop
add
in
or
xchg
jg
jge
fldenv
jbe
cmp
cmc
xor
dec
int
mov
sub
or
dec
mov
subb
add
punpckhbw
jecxz
dec
mov
test
outsb
jne
sub
or
mov
out
mov
jge
stc
out
cmp
jle
ljmp
pop
pop
mov
testl
pop
push
aaa
divl
leave
or
enter
cltd
cmp
rcl
lahf
dec
dec
lahf
icebp
xchg
lahf
xor
lret
jb
aad
cmp
mov
sti
pop
xchg
sub
push
and
pop
and
xchg
mov
cmp
sbb
dec
xchg
jnp
and
mov
sti
repz
rclb
mov
dec
loop
jnp
aas
es
outsl
dec
fistpll
notb
shlb
pop
mov
aam
sbb
arpl
jbe
xor
fwait
dec
sbb
fidivrl
add
shrl
adc
lods
pop
stc
jmp
pop
enter
mov
dec
cld
pop
push
inc
xchg
push
lret
pushf
pop
dec
xchg
mov
icebp
orb
xor
xchg
or
das
mov
adc
sub
xor
ljmp
int3
shrl
and
stos
test
test
inc
cmc
mov
add
cmpsb
add
sti
pop
pusha
pop
cmp
clc
mov
in
lcall
and
push
aaa
jne
adc
fisubrl
repnz
lret
pusha
pmaddwd
ja
push
mov
icebp
cmp
pop
fistpll
sub
lcall
jne
inc
lahf
jl
xchg
pop
sbb
mov
pop
pop
hlt
dec
test
icebp
cmp
mov
sbb
daa
or
mov
cmc
xor
lcall
cmp
push
out
mov
push
rcrl
jno
dec
test
aam
bound
lahf
loope
jg
xor
pop
outsl
jo
xchg
ficoms
and
imul
mov
loope
int3
outsl
test
insl
sub
cli
out
loop
scas
mov
pop
mov
and
ss
std
sub
dec
jl
push
int3
nop
sbb
xadd
rcrb
sahf
xlat
rcrl
push
stos
lods
fsub
and
cld
fs
cltd
inc
inc
in
loopne
xor
adc
int
sbb
adc
push
pop
push
sub
lret
ss
jmp
xchg
push
pop
bound
sbb
imul
imul
xor
arpl
push
sti
in
adc
push
pop
out
movsl
jecxz
pop
popa
push
sbb
lock
test
test
cmpb
test
mov
push
repz
fs
ret
addr16
xchg
jmp
idiv
sti
jbe
mov
dec
pop
test
les
cmpsl
and
xchg
das
outsl
dec
jl
mov
push
sub
xor
and
ds
lock
add
shrb
fst
fs
movsb
stc
loop
dec
popa
or
aaa
cmpsb
sub
mov
test
xchg
outsl
mov
jns
fwait
mov
inc
in
enter
fnsave
inc
add
mov
subl
push
inc
inc
addb
lock
ja
test
loope
xchg
and
cmpsl
pushl
and
cwtl
ja
adc
or
and
dec
lret
scas
add
into
inc
outsb
dec
rcl
jle
adc
and
pop
add
pop
mov
add
shrb
xchg
outsl
add
pop
jo
icebp
shrb
add
xchg
mov
fiaddl
mov
stc
ret
fiaddl
les
lret
pop
mov
sbb
aas
pop
outsl
icebp
cs
dec
and
std
xor
mov
aad
in
pop
mov
shrl
cmp
std
push
adc
jns
gs
mov
pop
push
add
scas
out
mov
jae
jns
inc
call
pop
imul
addb
fwait
mov
sub
bound
jbe
xlat
insb
imul
inc
cltd
int3
mov
clc
push
dec
sub
test
lock
cli
jo
and
mov
repnz
jp
mov
jmp
lock
lcall
jge
fstl
dec
jle
lea
mov
push
or
jb
pop
xchg
lea
fcoms
push
cmp
cmpsl
mov
lods
loopne
rcr
inc
inc
jmp
sbb
sub
mov
and
sbb
xchg
imul
outsl
into
out
les
jno
adc
jge
out
pop
jle
icebp
push
imul
stc
rcrb
mov
cwtl
sub
sbbb
or
or
incl
dec
jbe
adc
mov
dec
inc
daa
xor
inc
ficoml
cmovge
xchg
mov
lret
jle
stos
loopne
sbb
push
lret
cmpsb
mov
test
xchg
and
test
dec
mov
mov
or
cwtl
cmp
icebp
pop
stc
add
xor
orl
push
or
mov
sbb
cmp
std
roll
sbb
std
aam
loop
lds
and
dec
or
add
cmp
mov
xchg
push
pop
ret
mov
cwtl
jns
cmp
jge
mov
loop
jmp
xchg
mov
cltd
sbb
jo
loope
adc
xchg
xchg
xor
loopne
jmp
inc
push
add
jp
dec
jp
push
or
fldcw
pop
inc
aad
hlt
push
out
and
xor
nop
scas
pop
jne
mov
fwait
or
fidivl
fisubl
mov
pop
xor
fisttps
push
or
outsb
idivb
jae
dec
or
mov
aaa
xchg
jo
dec
stc
xchg
sti
outsb
and
int
cmpsl
aaa
pop
ret
popf
sub
js
sub
fstps
xor
vpunpckhbw
out
xchg
adc
sub
cmpsb
call
cltd
std
mov
sub
mov
and
mov
jnp
cmpl
call
sbbl
push
mov
clc
and
add
shrl
into
shlb
mov
fwait
aam
dec
lods
iret
xchg
mov
jne
imul
xor
mov
fbstp
mov
jo
test
imulb
daa
cmp
imul
inc
push
mov
int
and
aas
mov
fcoms
movsl
cmpsb
add
lods
add
cmp
out
pushf
shrl
out
lods
mov
arpl
or
mov
lods
push
movb
adc
push
or
xchg
pop
add
decb
fsubrp
sub
loope
shl
jmp
inc
cmp
push
xchg
and
jg
jecxz
mov
or
test
and
mov
adc
in
dec
or
fstpt
pop
inc
and
xchg
aad
and
jo
or
enter
xchg
call
cmpb
adc
nop
insl
daa
inc
ljmp
mov
fstpt
das
inc
mov
scas
scas
insb
pop
outsb
adc
ljmp
inc
gs
mov
and
pop
adc
fs
jo
mov
inc
jg
notl
pop
nop
mov
sbb
mov
xor
pop
popl
xacquire
sub
test
adc
lea
mov
scas
jnp
data16
sub
mov
xchg
in
xor
sub
fidivs
xchg
adc
into
movsl
inc
sub
sub
repz
pop
mov
scas
mov
filds
shlb
jle
movsb
jne
push
frstor
std
adc
sbb
add
mov
xchg
jbe
cmp
add
pushf
jg
jnp
loope
adc
fistpl
ja
fwait
loope
and
pop
call
inc
dec
scas
xchg
push
sbb
ret
loopne
out
dec
xchg
pushf
cmp
fimuls
mov
je
xlat
inc
add
inc
pop
cmp
push
mov
rcll
test
add
and
and
in
ret
inc
or
adc
pop
fsubrs
popl
lret
mov
xor
adcl
ficoml
lock
inc
cmp
addl
or
or
and
adc
ja
inc
fidivl
shrl
jecxz
mov
xchg
mov
pop
adc
mov
movsl
test
cmp
je
fnstcw
pop
mov
cmc
adc
jg
rcl
and
fs
cmc
pusha
sahf
fdivs
mov
adc
icebp
fdiv
aaa
dec
fs
roll
cmp
mov
scas
aad
decl
lds
das
dec
stos
adc
push
mov
enter
jecxz
xchg
imul
aaa
cmp
les
inc
sahf
xor
rclb
push
fnstcw
dec
cmp
xchg
cltd
sbb
sbb
xchg
pop
jo
cltd
push
inc
ja
pop
and
or
ret
imul
adc
jp
gs
fcmovne
push
sahf
mov
xchg
test
pop
mov
mov
pop
fs
xchg
push
ljmp
fdivs
or
dec
pop
lahf
les
lret
sub
sti
add
cmpsl
inc
insl
lods
pop
mov
fildl
mov
iret
mov
out
clc
push
addr16
shl
xchg
cltd
inc
lea
push
add
lcall
shrb
insb
arpl
lods
mov
ficomps
divb
testl
pop
dec
je
addb
in
or
mov
jns
xchg
jns
cs
xchg
fisubrs
stos
dec
xchg
ja
jbe
pop
sarl
inc
mov
dec
testl
ja
push
cwtl
cli
addl
cmp
sub
loope
sbb
aam
sub
sub
push
xchg
sbb
daa
pusha
xchg
stos
mov
lret
push
out
enter
xchg
test
fsub
mov
xchg
mov
hlt
push
imul
jge
inc
js
insb
xchg
mov
popf
js
aam
push
pop
adc
xor
inc
iret
int
push
and
insl
sub
std
clc
cmpsb
xchg
rcl
jns
mov
add
dec
pop
lret
aaa
cmpsb
out
out
cli
cs
add
in
movsb
into
clc
int3
lret
mov
das
test
out
jnp
xor
insl
loop
sub
dec
test
mov
dec
lds
icebp
xchg
aam
mov
fmul
cmp
scas
xchg
inc
cld
je
sub
push
jbe
popa
inc
icebp
outsl
insb
bound
inc
mov
insb
loop
xor
inc
pop
movl
dec
sub
mov
dec
and
enter
loope
mov
jecxz
dec
inc
inc
roll
xor
shlb
jne
and
mov
test
mov
jge
in
lods
pop
dec
bound
adc
cmp
push
leave
cmpsb
bswap
mov
jns
push
addb
and
sbb
leave
cmp
loopne
xchg
mov
xor
lods
loop
mov
pop
xchg
xor
and
test
dec
dec
jge
sub
clc
mov
mov
data16
popa
int
ss
adc
mov
out
cmp
xchg
push
sub
add
mov
sbb
insl
mov
rcrl
inc
sbb
aam
xchg
mov
mov
cld
mov
jb
ucomiss
popa
push
jp
movsb
sub
xor
enter
jns
sbbb
fimull
in
rorl
jl
inc
push
fdiv
pusha
pop
pop
in
jb
push
out
mov
stc
fimuls
movsl
lods
popa
xor
insl
cmpb
xchg
notl
push
mov
sahf
rcrb
imul
xor
outsl
lods
cmc
sbb
mov
int
ficomps
pop
rcr
fistl
mov
mov
in
in
jb
sahf
mov
dec
mov
ret
mov
and
cmp
push
into
xchg
jge
dec
sbb
add
pushf
sub
in
cmp
mov
fnsave
aaa
cli
loope
popf
mov
add
adc
add
mov
dec
jge
mov
testl
adc
aas
fiaddl
dec
cld
and
in
lret
jmp
mov
sbbb
cmp
in
ss
push
call
ret
fsubl
cwtl
mov
arpl
and
mov
hlt
inc
int3
jecxz
in
pop
ret
xchg
and
repnz
hlt
push
cltd
adc
stos
inc
jge
jbe
dec
xor
xor
xor
sub
dec
push
dec
push
add
mov
adc
mov
ljmp
cmp
mov
jae
jno
cmpb
jmp
std
mov
fdivp
push
push
rol
fsts
mov
es
fs
ss
mov
cs
mov
test
and
aaa
jl
stc
lahf
pop
fldcw
add
imul
mov
cltd
jo
insb
xchg
inc
icebp
cmpsb
sub
outsl
pop
xor
sbb
adc
jl
out
inc
fs
test
test
add
mov
es
pop
sub
pop
xor
mov
aas
js
mov
jmp
movsb
fdivl
das
mov
mov
cmp
rcrl
shrb
fcmove
mov
pushf
aam
push
stos
add
cwtl
lahf
jp
lret
imul
or
mov
loope
aaa
testb
xchg
jns
orb
or
lea
jle
and
pop
xchg
sarb
and
out
push
and
adc
ficoms
push
or
mov
jbe
push
push
add
cmpsl
dec
xorl
cltd
lret
xlat
mov
jae
cmpb
xor
and
push
mov
xlat
xchg
push
fucomp
lds
dec
mov
mov
mov
out
stos
cmpsb
outsl
daa
mov
and
jl
sahf
call
in
stc
pop
xor
daa
das
and
movsb
cmp
adc
dec
in
aam
push
xchg
outsl
mov
jl
in
jno
imul
cmp
pop
xor
call
xor
subb
sbb
push
in
sbb
fs
call
mov
imul
bound
jb
bnd
add
add
rcl
pop
pop
roll
stos
fsts
sbb
popa
aaa
bound
jge
mov
or
ficoml
and
inc
imul
arpl
push
daa
xor
lcall
dec
pop
xchg
fiaddl
lret
mov
cmpb
insb
cmp
jp
jno
push
mov
fcomi
loope
sub
sarb
movsl
jnp
and
orb
into
cltd
sub
pusha
xchg
ret
rcr
jb
mov
call
call
xchg
lahf
jmp
cwtl
ficomps
mov
pop
loope
push
adc
lock
xchg
enter
or
sbb
enter
adc
pop
ljmp
push
test
dec
aad
jmp
pop
mov
js
pusha
rorb
test
jge
xor
fcmovu
mov
sti
sub
orb
mov
lods
adc
out
je
sarb
popa
hlt
dec
dec
out
or
gs
xchg
sub
aaa
mov
sar
pop
fbstp
repz
nop
in
mov
adcl
rorl
mov
lods
in
into
dec
xchg
jns
cwtl
jge
insl
cmpsl
ss
jge
inc
pop
in
icebp
sbb
cmc
imul
cmpsb
pusha
notl
sub
or
adc
in
fidivrl
jl
mov
outsb
lods
shl
jp
dec
out
cltd
mov
push
sub
add
push
adc
outsb
xchg
pop
fwait
lcall
inc
fbld
shrb
mov
cld
dec
dec
iret
jecxz
dec
nop
lea
mov
test
pop
pop
mov
or
pop
es
call
add
in
lretw
addr16
push
repnz
stc
lcall
sub
scas
lock
push
push
pop
fmuls
or
or
cmpsb
cmc
lahf
and
jns
sub
addr16
in
mov
mov
xchg
add
lea
into
das
pushf
xor
push
loop
jmp
inc
mov
test
jns
mov
jmp
xor
mov
les
xchg
enter
test
pop
stos
mov
lods
std
sub
loop
or
stos
sar
jmp
cmpl
repz
jecxz
in
mov
and
push
mov
loop
adc
fdivrp
cmpsb
mov
out
add
cmpsl
jecxz
mov
jle
rcll
out
jecxz
xchg
pop
jecxz
mov
cmp
lods
pop
xlat
lahf
cmp
rcll
pop
out
jge
add
test
fbld
xchg
xchg
fidivrs
scas
lcall
repz
rorb
pusha
fsubrs
ljmp
pop
and
nop
cli
cli
mov
das
test
or
popf
and
iret
jge,pt
xor
lods
mov
xor
aas
xchg
fistps
push
adc
or
cmp
imul
ret
or
push
pusha
ficompl
sbb
je
data16
imull
nop
sbb
fcmovnb
push
addl
loope
xor
imul
es
je
scas
pop
repz
std
sbb
xchg
mov
stos
push
aad
lods
icebp
arpl
push
mov
mov
mov
int3
loope
mov
sarb
mov
or
subl
int
mov
push
mov
addr16
dec
push
mov
in
mov
mov
addl
pop
rorl
dec
mov
add
loope
imul
pusha
push
xchg
xchg
subb
lret
adc
add
mov
push
sub
fldenv
inc
scas
fwait
push
adc
inc
mov
repz
push
mov
jp
dec
fcom
inc
shr
fwait
sub
and
popa
cltd
das
sub
sbb
adc
das
jno
fadd
shrl
stc
jmp
mov
lods
adc
add
sub
dec
xor
arpl
stos
mov
pop
scas
pop
or
mov
stos
movsb
fisubs
push
mov
fdivs
push
rolb
bswap
lods
scas
je
lock
or
fsubl
gs
adc
sarb
sub
sub
adc
xchg
addr16
stc
cwtl
out
or
sar
adc
lcall
sub
mov
add
adc
mov
mov
popf
xchg
mov
jl
add
fstpt
or
cmc
xchg
xor
inc
adc
cmp
jae
adc
cmp
stc
sub
and
mov
aad
or
mov
push
loopne
xor
pushf
sub
stos
test
mov
and
repz
ss
xor
cld
inc
mov
fwait
scas
aam
jae
ljmp
in
aam
ljmp
das
and
xchg
sub
popf
push
imul
lea
adc
loop
mov
cmp
inc
loope
mull
outsl
xor
inc
outsl
scas
les
xor
sub
test
dec
dec
sub
shrb
sub
jns
call
loopne
lahf
mov
test
xchg
xchg
nop
icebp
les
enter
clc
cli
lock
xchg
loopne
inc
imul
test
cld
clc
inc
cmp
addl
xor
push
movsl
sub
cltd
inc
aad
das
cmp
int3
out
inc
repz
repnz
test
into
mov
out
add
cmpsl
lret
daa
leave
repnz
or
cli
gs
adc
movsb
arpl
cmp
xlat
iret
fldt
shlb
fwait
cs
stos
out
popa
xor
push
testl
jno
jp
xchg
or
lea
cmp
lods
pop
addr16
push
mov
test
xchg
out
push
lcall
aaa
rcr
repnz
mov
adc
push
sub
repz
outsl
in
fidivrs
xchg
mov
mov
movl
jle
es
stc
add
stos
xor
add
mov
and
icebp
out
adc
mov
in
add
and
sub
xchg
jg
fwait
dec
lods
pusha
push
cwtl
gs
xlat
push
xchg
fstps
jae
sub
dec
aaa
dec
xorl
inc
sub
in
sub
cmp
or
inc
adc
adc
inc
imul
jne
push
push
xchg
xchg
add
psrld
mov
lret
int
fs
leave
rcll
sbb
dec
dec
sub
andb
in
pop
dec
inc
cmp
xchg
clc
push
push
lea
insl
pop
into
sub
xor
jae
bound
push
inc
mov
in
cmp
mov
leave
movsl
adc
aam
int
xor
mov
std
jae
stc
arpl
into
out
aas
mov
pusha
daa
ffree
xor
jp
sbb
sbb
push
insb
or
mov
pop
mov
sub
mov
repnz
arpl
movsb
fildl
clc
aad
roll
jle
outsb
mov
adc
iret
sbb
push
js
sub
movsl
pusha
xchg
xor
inc
js
nop
add
sahf
vsubss
mov
fldl
scas
sbb
addb
sub
pop
dec
push
decb
repz
scas
js
roll
lret
pop
fwait
jbe
xchg
hlt
xlat
xor
push
cmp
out
scas
popa
adc
aaa
bound
mov
in
sti
xchg
fildl
pop
jecxz
fidivrs
pop
push
lods
sbb
dec
lcall
int3
xchg
arpl
fisttpll
jns
mov
jecxz
adc
mov
push
call
mov
mov
xchg
jnp
xor
out
stc
cli
nop
mov
stos
adc
outsl
pop
jge
pop
scas
push
cmp
sub
cwtl
sub
rorl
inc
test
int
test
scas
pop
mov
repz
mov
das
aad
or
inc
xchg
es
in
xchg
sub
pop
imull
mov
cmc
nop
cmp
lods
insl
test
or
add
out
sub
adc
test
les
pop
push
jmp
mov
test
fisubrs
aas
loopne
bound
push
xor
stos
ret
jnp
pusha
xchg
das
les
int3
xchg
jl
iret
mov
inc
mov
pop
cmp
mov
std
cmp
sub
fcom
mov
scas
pop
mov
adc
rep
inc
dec
xchg
enter
push
inc
or
and
and
cmp
adc
fcompl
ret
dec
push
xchg
xor
sbb
dec
pushf
jle
aad
gs
mov
pop
mov
sbb
addr16
sub
push
cmp
mov
fnstenv
cli
rcll
adc
mov
jbe
jb
adc
fs
mov
pop
sbb
jl
je
js
xchg
rorb
inc
xor
out
xor
shlb
push
jno
pop
sbb
pusha
cmp
out
test
sub
mov
mov
stos
outsb
adc
arpl
cmpsl
ljmp
adc
dec
popa
xor
mov
addr16
lret
cltd
push
push
inc
or
mov
mov
dec
mov
and
adc
cltd
daa
mov
or
shll
add
fst
call
inc
cld
inc
cmp
aam
jae
mov
push
push
sti
rorl
int3
cmp
ljmp
outsb
outsb
mov
rcl
pop
out
ja
fcmovu
clc
xchg
sub
imul
cmpsl
xchg
scas
mov
and
ss
out
cmp
fstpt
int
fdivs
in
ret
xchg
aas
xchg
rorl
lea
push
xchg
jl
and
stos
cs
outsb
and
out
dec
cmp
adc
push
negl
ret
mov
or
sbb
js
xchg
cmp
aam
test
ficompl
sti
pusha
into
pushf
push
sbb
push
test
xor
mov
call
pop
outsb
xor
and
or
adc
mov
lea
xchg
push
jne
data16
add
not
xor
aam
pop
gs
data16
or
dec
hlt
or
daa
ficoms
popa
mov
mov
je
das
or
clc
movsl
jnp
jge
xor
sbb
je
pop
jle
ffree
dec
test
mov
xor
add
xchg
push
aad
loope
or
enter
aam
int3
cmpsb
sahf
lret
cli
push
pop
popf
push
sbb
jp
push
push
inc
adc
lock
add
inc
or
jmp
mov
imul
loopne
lea
xor
mov
ljmp
dec
insl
das
mov
mov
out
scas
inc
fstps
out
psllw
scas
mov
les
cld
push
jecxz
jbe
pusha
ror
inc
cmp
jns
das
or
push
pop
inc
jno
add
repnz
mov
pusha
add
push
das
push
cmp
xchg
je
pop
sub
adc
imull
cmpsl
mov
rcrb
cmp
or
inc
xchg
insl
leave
int
daa
shll
push
stos
xor
and
sahf
jnp
xchg
sub
pop
in
sub
adc
icebp
fdivs
call
xchg
pop
stos
dec
jb
test
js
inc
push
sti
test
stc
lret
dec
les
cmp
add
mov
out
fdivrs
divl
inc
sub
mov
fmul
adc
xchg
movsb
inc
mov
aad
cmp
sti
enter
cmc
outsb
pop
lods
test
out
iret
je
sarl
xor
sbb
and
adc
sbb
fisttpll
xor
xchg
push
vmwrite
adc
loopne
adc
xor
inc
mov
push
rcrl
add
test
xchg
xlat
lods
test
xchg
push
icebp
repz
xchg
jl
xor
pop
push
pop
add
inc
pop
fsubs
xchg
xor
push
mov
repnz
icebp
lahf
cmp
push
rolb
cs
xor
mov
repz
pop
es
xor
clc
int3
push
sbb
sub
mov
mov
sub
sbb
mov
in
sub
fisubs
popf
lea
jbe
adc
shll
pop
pop
mov
sub
in
sub
lret
into
dec
dec
imul
dec
dec
repnz
out
in
lret
xor
cmp
jmp
push
dec
bnd
das
push
lret
ret
sbb
movsl
sbb
std
jbe
push
jp
xchg
jecxz
mov
inc
test
mov
out
push
test
pop
fstl
dec
movl
mov
mov
xchg
jl
cmpsl
popf
and
enter
dec
pop
pop
mov
dec
add
cmp
xor
pop
es
inc
jnp
pop
fcompl
pop
or
xor
fcoms
pusha
xchg
cwtl
push
loope
mov
or
lds
lods
sub
xchg
fcoml
lahf
rcrb
inc
push
rcrb
loope
or
pop
popa
repnz
gs
scas
and
hlt
sti
pop
push
ja
push
sbb
jge
sti
inc
decl
aam
mov
sbb
adc
push
ljmp
data16
stos
test
iret
rorl
andl
adc
push
int
pop
orb
xor
scas
push
or
test
ljmp
scas
inc
push
movsl
xor
push
stos
jne
mov
push
inc
dec
xor
dec
mov
xchg
push
cmc
lret
rcrb
incl
cmp
shll
imul
in
pop
stos
rcll
fcompl
rcrl
sub
jg
sbb
ljmp
add
cs
xor
ljmp
inc
shr
andb
mov
push
mov
xchg
negl
mov
mov
jl
pop
dec
pop
lods
or
out
mov
imul
xchg
inc
dec
jae
adc
or
sahf
add
or
scas
scas
xor
push
jg
mov
jnp
movsb
nop
jbe
or
shl
push
outsb
and
inc
mov
mov
or
aad
xchg
fidivrl
or
cmp
nop
cmc
frstor
cmp
shll
lods
add
mov
in
fldt
or
cmpsl
jg
inc
lods
jne
add
mov
push
lcall
out
std
lds
jne
xchg
mov
push
inc
gs
mov
xor
xchg
cmp
jae
int3
out
push
jmp
sbb
xor
mov
or
fdivl
inc
add
fcomp
dec
cmc
mov
popa
add
adc
or
sbb
dec
pop
mov
cs
push
ljmp
pop
sub
idivl
mov
test
add
sbb
or
divl
popa
sub
jo
fs
pop
pop
sbb
pop
out
cmpsl
add
jge
sarb
mov
js
ds
or
cwtl
xor
cltd
ret
repnz
clc
or
xchg
and
and
scas
and
sbb
sbb
add
cmc
sbb
mov
jb
out
bound
adc
loop
ds
fiaddl
sub
xor
sarl
mov
adc
sbb
xchg
xor
shlb
sub
sbbb
lcall
leave
jnp
cmc
nop
sub
sbb
rcrb
lcall
sub
aas
mov
fdivrl
ficoms
cs
jg
stos
call
and
inc
mov
outsl
mov
test
inc
and
adc
jns
ja
lret
call
add
xor
xor
lahf
aas
pop
or
inc
mov
popf
pop
lds
inc
sbb
jne
mov
aam
xchg
cmp
xchg
jmp
pop
popf
dec
outsb
jg
cwtl
gs
cmpsb
cmp
pop
cmp
xlat
ja
aaa
add
sub
and
xor
dec
mov
adc
push
cli
mov
and
xchg
incl
mov
push
out
fs
loope
add
lret
dec
enter
scas
mov
stos
add
lret
mov
in
insb
jl
out
pop
xor
movsb
jp
cmpsb
push
fxrstor
or
hlt
out
nop
add
mov
pop
sub
arpl
in
sar
jge
sbb
aam
out
jns
mov
repz
xchg
mov
insl
out
sbb
ljmp
push
xchg
cmp
fmull
or
movsl
dec
lods
xor
push
inc
icebp
out
dec
ljmp
int
sbb
add
push
jno
mov
test
jnp,pt
cs
mov
mov
gs
mov
ja
dec
pop
sbb
lods
pop
mov
mov
mov
inc
adc
in
fisubrs
lock
cmc
pop
inc
les
aam
sbb
leave
stc
and
in
xor
dec
and
ja
xchg
leave
shrl
inc
rolb
cmpsl
cmc
inc
jle
jecxz
out
inc
pop
iret
loop
fists
iret
add
pusha
push
rcl
add
push
or
sbb
adc
dec
mull
imul
into
cmc
es
mov
pop
and
push
add
inc
mov
pop
xchg
faddl
add
sub
sbb
dec
movsl
mov
aam
ds
outsb
sub
fs
jne
es
cmp
pop
xchg
ret
pop
repnz
dec
mov
pand
je
lea
mov
cmp
mov
pop
and
and
mov
divps
test
or
in
dec
sub
xchg
fiaddl
sub
jl
mov
xlat
or
fidivrs
dec
push
mov
inc
jae
clc
int
adc
add
fmull
and
js
inc
fcomp
cltd
xorl
in
add
in
push
mov
add
mov
sub
add
or
leave
out
or
mov
mov
push
mov
xor
jns
cmp
push
pop
mov
xchg
adcb
adc
push
pop
test
mov
hlt
enter
iret
jmp
sahf
jmp
mov
cmc
loop
cmpsb
outsl
fwait
out
dec
rol
movsl
scas
jno
xchg
and
sub
xchg
mov
push
pop
sub
jg
xchg
pop
aaa
pop
loop
push
sbb
pop
xlat
xor
in
loopne
pop
push
xchg
mov
in
scas
movsb
es
adc
inc
stc
sbb
stos
test
and
and
in
xlat
imul
mov
or
fadds
bound
sbb
cltd
sti
or
xchg
xor
pop
into
push
push
xor
sub
dec
ret
xchg
sub
std
fistl
and
push
in
stos
test
lea
test
sbb
sub
mov
lods
loop
inc
push
cwtl
xor
insb
lods
lea
push
icebp
sbb
inc
xor
movsl
sahf
sub
mov
das
xorb
arpl
jecxz
stos
pop
movsl
insb
xchg
mov
in
push
call
enter
lods
mov
cmp
jae
ljmp
aaa
loop
add
dec
aam
dec
push
leave
mov
icebp
cld
inc
les
cmc
jp
inc
xor
push
jbe
pop
or
and
push
jae
xorl
test
std
loope
popf
and
sbb
faddl
shl
cmpsl
xchg
sub
dec
sbb
add
setno
test
push
pop
adc
fsubrs
or
cmp
cmp
sub
mov
fld
xchg
outsl
cs
adc
dec
pop
inc
sbb
sar
and
bound
mov
das
fisubrs
aad
icebp
inc
add
xor
mov
push
scas
shlb
pop
xchg
xchg
inc
sbb
data16
iret
addr16
imul
movsl
lods
or
std
data16
xchg
mov
mov
mov
sbb
xor
dec
cmc
adc
les
inc
addr16
mov
lahf
xchg
mov
pop
pop
mov
lds
pop
sub
jno
not
imul
push
sub
stos
les
add
mov
sub
pop
jp
flds
loope
inc
lret
cmp
or
push
call
cld
jb
dec
out
movsl
popa
dec
out
jecxz
jo
inc
inc
or
xchg
cmp
testb
popf
xchg
mov
and
jne
or
aam
movsl
ficoml
sub
cmpsb
add
xor
repz
sub
movsl
sub
mov
xchg
std
loopne
or
dec
incb
adc
out
jp
loopne
les
mov
fisubrl
int
xorl
ret
sub
add
sub
or
sti
cmp
push
lret
and
mov
cmpsb
scas
imul
mov
rsm
mov
sbb
sbb
dec
dec
sbb
mov
gs
push
sbb
jl
sti
hlt
adc
lahf
call
test
lods
mov
and
loopne
out
pop
xchg
sub
mov
push
ja
mov
repz
and
ja
xchg
sbb
lahf
neg
fisubl
jnp
mov
dec
loopne
test
loopne
mov
in
xchg
ret
xor
xchg
xor
cli
sahf
aad
nop
pop
cmp
es
lret
xorl
xchg
repz
jl
xor
into
mov
ljmp
mov
jp
jg
mov
ja
cmpsl
inc
fsubrl
insb
mov
idiv
inc
int
cmp
inc
dec
fldcw
scas
das
mov
fcom
cmpsb
inc
jmp
repz
in
pop
xor
xor
insl
fstpl
or
fs
push
in
call
daa
pop
jns
pop
aaa
jae
or
mov
das
inc
pop
hlt
mov
ficompl
andl
or
lret
jb
push
insl
mov
pop
jbe
inc
aas
add
es
dec
sbb
lret
fimuls
jecxz
das
imul
icebp
adc
mov
sub
mov
sub
addl
int
in
inc
rolb
or
mov
popf
lret
and
pusha
orl
xor
scas
popf
fimuls
ljmp
xor
shrb
adc
jecxz
xchg
xor
adc
pop
dec
sbb
addr16
popa
mov
test
fs
pop
sbb
or
movsl
xchg
xor
and
dec
adc
shlb
cltd
sbb
cmp
jg
rcr
out
mov
push
dec
mov
ret
and
dec
fcoml
fisttpl
xchg
in
pop
jge
push
pop
fs
dec
mov
ss
int3
push
mov
in
stos
mov
test
jp
xchg
add
outsl
mov
mov
movsb
aam
data16
and
cmp
jno
xchg
je
mov
mov
outsl
jmp
mov
push
arpl
add
fsubl
loope
sbb
jge
adc
push
shll
push
sbb
inc
insl
or
xor
pop
mov
adc
and
inc
xchg
xchg
cmp
mov
lock
cmp
cmp
mov
pop
push
test
repnz
outsb
loope
or
inc
repz
mov
pop
clc
rcrb
fldcw
fs
cli
int
mov
or
ds
ret
sub
sub
jo
call
xor
movsb
xor
mov
sti
pop
inc
aam
add
add
jae
ljmp
imul
ja
or
test
stc
mov
ret
int3
push
xor
insb
inc
test
lret
mov
xchg
jmp
cs
adc
sub
mov
xchg
xor
sahf
cwtl
shlb
hlt
nop
loop
add
stos
push
sub
aam
or
pop
inc
mov
rclb
out
sub
pop
mov
or
push
data16
out
push
mov
mov
or
dec
loope
pop
cld
cmp
inc
cmp
push
cwtl
cmpsl
mov
mov
jb
into
pop
pop
sbb
and
pop
mov
in
aam
mov
inc
fs
cmp
xchg
add
mov
fs
add
mov
dec
dec
stc
cmp
movsl
out
adc
push
les
or
adc
rclb
std
dec
xchg
pushf
out
xor
outsl
jno
dec
incb
mov
shlb
imul
sub
stc
dec
ret
test
fisubs
fistpl
cmp
push
pop
les
mov
pop
or
fbld
imul
xor
adc
adc
xchg
iret
mov
xchg
and
mulb
pop
cmp
dec
fadds
cld
xchg
test
cmpsb
gs
jae
scas
lret
cmp
fisubl
adc
mov
lahf
inc
les
cld
push
jecxz
add
inc
cld
pop
fcoms
ror
sbb
sub
xchg
jbe
ficompl
jge
dec
je
mov
mov
fcmovb
cmp
mov
pop
jno
sbb
jg
push
cld
adc
in
and
mov
pop
std
test
xchg
add
fcoms
or
repnz
inc
cs
int
add
xchg
jl
pop
aad
pop
fldl
hlt
push
xchg
cld
dec
repz
mov
fdivrs
push
cs
daa
dec
outsl
icebp
inc
inc
mov
xor
mov
xlat
mov
mov
mov
xchg
xor
adc
push
xchg
outsl
nop
add
test
xchg
andl
aaa
lea
loop
movsl
mov
sub
add
add
xchg
fsubs
stos
jmp
adc
int
mov
inc
inc
fwait
sbb
or
or
or
lea
lock
mov
pop
int3
jl
arpl
out
aas
add
popa
aas
mov
test
pop
mov
fnstcw
pushf
xchg
inc
sbb
out
cs
pop
xlat
iret
scas
push
sbb
testb
aad
out
repnz
inc
cmp
in
push
xor
in
xor
sub
inc
addr16
add
pop
daa
arpl
mov
sub
dec
sub
in
xor
xchg
and
fnstcw
sbb
mov
test
out
fwait
dec
pop
push
xchg
mov
mov
jo
aas
mov
and
jb
out
les
and
cli
sbb
scas
aas
dec
pushf
hlt
dec
shlb
fbld
xor
scas
pushf
lret
je
dec
mov
pop
arpl
arpl
lods
je
cmp
xor
mov
sub
cmc
hlt
js
js
pop
adc
je
dec
xor
jae
mov
cwtl
jo
repz
icebp
xor
pop
sbb
loop
pop
lock
ss
ja
shlb
sbb
dec
cwtl
std
adc
mov
push
mov
out
inc
popf
adc
roll
lds
jo
cs
stc
lret
jp
mov
lret
lods
sahf
push
stos
mov
pop
and
xor
andb
lods
jge
adc
fistpll
test
adc
out
and
sub
out
fstl
push
pusha
mov
lods
hlt
lcall
lods
int
ficompl
in
stos
stos
leave
jmp
jns
mov
ljmp
cs
fadds
test
adc
or
jne
and
sahf
cmpsl
mov
iret
adcb
pop
scas
pop
dec
scas
xor
test
and
push
movsl
jo
out
and
xorb
sbb
mov
inc
push
or
mov
rcl
adc
cmp
adc
inc
add
add
jmp
jmp
mov
pushf
inc
pop
push
mov
in
pop
daa
mov
or
leave
inc
xchg
out
mov
nop
mov
rcll
dec
dec
fcoml
add
mov
push
sbbl
icebp
loope
sbb
lods
mov
repnz
ss
mov
jl
mov
adc
sub
imul
mov
std
lea
nop
mov
push
xor
mov
pop
or
dec
cmpsb
es
mov
push
and
cltd
push
adc
and
cld
dec
sub
xchg
stos
xor
out
push
xchg
jbe
stos
xchg
test
int3
dec
jmp
push
add
xor
jmp
adc
in
sbb
pop
fistps
repnz
adc
rclb
ds
dec
jmp
icebp
in
notl
xchg
dec
js
xor
cwtl
jle
sub
das
mov
jp
sbb
pop
mov
jmp
pushf
out
sbb
xor
insb
lret
ror
divl
sti
loope
enter
jg
mov
pop
shlb
out
inc
and
enter
cwtl
repnz
mov
xor
icebp
jbe
aam
stc
cli
repnz
std
inc
ret
sub
inc
jmp
int
faddl
push
inc
pop
xor
iret
push
mov
lock
inc
lcall
ss
add
pop
popa
lods
pop
mov
les
pop
inc
out
cmp
sub
es
sub
bnd
stos
jno
rcrb
call
mov
xchg
push
popf
pop
mov
idivl
lds
push
rcll
cmp
loopne
inc
in
adc
shl
cmpsb
js
pop
les
gs
lcall
leave
pop
rorb
dec
inc
sbb
iret
call
lret
xor
jb
xchg
and
outsl
push
add
push
jae
add
imul
jecxz
pop
into
pop
cmp
and
and
adc
adc
add
cwtl
jbe
rolb
cs
mov
ja
or
inc
sar
and
add
rorl
cmp
ljmp
enter
push
pop
mov
push
adc
in
popa
leave
mov
bound
jb
call
push
clc
adc
inc
add
mov
shlb
int3
dec
ja
inc
push
test
int
andb
adc
mov
mov
sub
add
rclb
arpl
mov
sbbl
les
sub
js
and
fwait
sub
or
inc
lcall
out
movsb
scas
dec
inc
rolb
inc
lcall
jg
cli
mov
outsb
fbld
jb
inc
sub
xchg
dec
jb
ficompl
test
mov
push
mov
and
or
call
imul
movsl
jp
cmp
xor
or
das
fbstp
add
xlat
mov
adc
cmp
shll
shl
sub
sub
jmp
pop
xor
lods
shlb
mov
or
je
xor
test
into
cmp
and
cmpsl
cmp
daa
fdivrl
cmpsl
mov
sbb
xchg
aaa
hlt
mov
mov
mov
aad
sbb
shll
mov
adc
pop
mov
fcmovnb
pushf
inc
push
or
lea
nop
push
lds
xlat
iret
pop
pop
cs
and
mov
jb
xor
aad
out
push
push
xor
rcrl
pop
push
pushl
xchg
cmp
stos
sub
inc
imul
sub
jp
fldenv
jge
pop
fldcw
inc
mov
sbb
xchg
or
jp
sahf
mov
jl
inc
sub
jge
cli
ds
or
rcrl
mov
mov
xchg
shufps
adc
jge
mov
ja
mov
jae
inc
aaa
xlat
or
rcr
lods
nop
call
sbb
sub
movsb
push
dec
aam
cmp
aas
pop
add
mov
mov
pop
test
cmp
adc
lret
bound
cs
mov
cmp
int
lods
dec
mov
push
out
dec
ds
mov
adc
dec
jnp
mov
jb
pop
pop
lods
cmpsb
dec
and
xor
aam
dec
les
addr16
push
mov
xor
xor
inc
push
sahf
icebp
cltd
add
ss
notb
cmp
cmp
in
sub
add
nop
ficoml
inc
fwait
je
ljmp
pop
out
stc
jbe
in
push
xchg
movhlps
sub
mov
movsl
dec
enter
sub
outsl
ret
mov
mov
add
push
dec
addl
ret
push
test
pop
mov
inc
je
test
mov
and
push
out
and
shlb
outsb
inc
outsb
push
pop
cli
out
inc
push
jb
invd
addr16
aam
inc
ljmp
ret
pop
test
xchg
in
cwtl
xor
sbb
inc
pop
dec
leave
ljmp
imul
mov
lea
scas
out
shll
add
andb
pop
mov
mov
or
rorb
scas
mov
dec
xchg
cwtl
sub
std
test
dec
mov
jb
mov
jge
rdtsc
xor
xchg
icebp
dec
adc
imul
je
add
addr16
inc
mov
pusha
out
pop
mov
sbb
shlb
nop
loopne
dec
dec
out
gs
in
add
mov
mov
scas
xchg
xchg
jb
cmc
divl
pop
inc
ja
decl
jg
jb
push
sahf
test
mov
dec
imul
sbb
ds
jg
pop
and
sub
ret
hlt
repnz
xor
inc
outsb
mov
sbb
in
and
cs
lock
sbb
mov
adc
mov
jno
adc
popf
gs
fwait
push
xorl
lret
or
sub
divb
pop
movsl
mov
jge
sub
inc
loopne
mov
dec
mov
jae
mov
ss
adc
dec
mov
cmp
mov
cwtl
xlat
stos
cmp
hlt
lcall
sti
ja
cld
pop
mov
mov
lahf
add
imul
jge
dec
inc
inc
xor
jge
in
jns
sti
jno
push
inc
inc
lea
mov
mov
jle
pop
test
test
cmp
insl
jmp
pushf
ds
sbb
ficomps
movsb
sub
pop
dec
push
xor
ret
xor
mov
je
stos
inc
xchg
push
mov
sahf
hlt
aam
cmp
jns
aaa
leave
call
es
cmp
repnz
mov
cltd
push
xchg
mov
xchg
dec
push
jae
xor
or
popa
rcrb
mov
dec
aam
jle
sub
mov
jl
xchg
pop
fisttps
pop
fsubr
adc
scas
adc
sbb
dec
lcall
push
sbb
adc
pop
jae
xchg
popa
sbb
push
mov
lds
mov
stos
jb
fisttpl
sbbb
out
in
mov
daa
insl
test
pop
in
dec
pushf
sub
xor
addb
or
xchg
xor
out
dec
jp
loope
enter
fwait
out
xlat
pop
dec
into
sbb
xchg
or
mov
xlat
enter
mov
lahf
iret
movsb
cs
inc
shll
push
lret
hlt
les
sysenter
lcall
mov
dec
fs
test
and
and
ds
js
add
xchg
xlat
pop
pushf
pop
out
aam
xchg
and
loop
mov
dec
lea
je
mov
lret
pop
insb
pop
push
pop
decb
fstps
pop
and
mov
mov
pop
inc
dec
scas
pop
cmp
lahf
mov
lds
pop
mov
adc
bound
adc
push
or
fucompp
fadds
repz
mov
dec
scas
arpl
dec
pusha
push
outsb
inc
mov
lahf
hlt
mov
sbbb
lods
hlt
pop
mov
out
incl
iret
jg
push
push
fnstcw
and
ret
push
insl
std
dec
bnd
pushf
fistps
push
add
outsl
adc
adc
out
nop
sahf
mov
inc
jmp
test
adc
movsl
mov
jne
dec
jmp
xor
fadd
fisubrs
outsl
mov
mov
outsl
adc
sub
mov
xchg
dec
je,pn
in
imul
cmpsb
scas
and
iret
adc
scas
jne
jnp
and
loop
shll
mov
jecxz
idivb
scas
cld
jle
jns
mov
mov
pop
or
mov
in
or
cs
ret
cwtl
push
mov
xchg
loopne
rcrl
sahf
and
xchg
sti
cli
inc
mov
xor
push
or
enter
movsb
and
in
cmpsl
push
stos
jns
push
cmp
mov
mov
fcompl
jecxz
push
cmpl
push
ljmp
add
jbe
add
cmp
mov
scas
je
jecxz
xor
sub
xchg
xchg
popf
mov
cld
dec
mov
out
mov
stc
and
cmpsb
jb
sbb
cmp
mov
add
outsb
pop
xchg
pop
add
ds
cmpb
mov
sbb
dec
hlt
insl
mov
mov
pop
dec
dec
aaa
or
sub
cmp
call
fstps
jnp
pop
repz
cmp
push
add
in
mov
dec
aad
lock
dec
stc
sub
pop
icebp
adc
xor
int
loope
mov
add
idivb
stos
fisttpll
repnz
xchg
lods
dec
pop
nop
stos
xor
loope
xcrypt-cfb
cmpsl
mov
jno
xorb
sub
rcrl
push
cs
or
inc
cmpsb
xchg
push
cli
inc
inc
mov
cmp
jb
repz
push
fcoml
int3
lea
pop
push
sub
imul
sub
xchg
sahf
outsb
in
lcall
cltd
cmp
cli
in
movsb
sbb
xchg
imul
imul
je
dec
dec
mov
push
sub
orb
out
adc
or
vaddps
push
movsb
inc
jl
dec
rcrl
loope
sub
cmp
jl
lcall
sti
popa
mov
push
outsl
dec
mov
push
inc
ja
ljmp
sub
test
cmpsb
and
push
or
mov
push
leave
push
scas
pop
cmpsb
arpl
loop
cmp
jbe
adc
cltd
sub
in
fcompl
jb
aam
es
je
cmpsl
mov
das
pop
shr
adc
insb
mov
shrl
lock
xchg
fbld
je
xor
outsb
stc
ss
hlt
loopne
inc
xchg
adc
adc
ret
ss
aad
mov
aaa
cmp
or
xor
fwait
pop
dec
push
data16
dec
jl
test
push
or
iret
es
xor
loope
xchg
lcall
mov
lahf
nop
not
pop
xchg
adc
incl
fwait
add
pop
mov
in
int3
flds
adc
jl
mov
int3
pop
jecxz
jle
push
inc
dec
jbe
sti
pushl
popa
dec
or
testb
inc
cmpsb
sub
push
test
add
lahf
aas
test
add
xlat
lcall
aam
stc
xchg
jnp
push
mov
adc
in
push
add
dec
stos
hlt
divl
sub
sbb
and
ret
in
popf
and
jmp
pop
mov
mov
addr16
xor
inc
xchg
jb
or
scas
pop
dec
xor
sub
std
jne
mov
fs
cmp
adc
adc
lcall
push
neg
addr16
adc
sti
gs
imul
es
mov
xor
addr16
sbb
sahf
adc
cmpsl
xlat
pusha
lock
shlb
sbb
rcll
and
mov
pop
push
sbb
cmp
add
test
aam
adc
pop
and
dec
movsl
jecxz
sub
mov
inc
sti
inc
fs
add
pop
lods
fdivrs
dec
jge
add
ret
inc
jne
es
int
mov
rcll
dec
mov
shrl
adc
pop
cltd
mov
enter
or
pop
push
in
mov
dec
dec
lcall
aas
js
loopne
cmp
incl
pop
ljmp
mov
dec
xor
in
je
imul
jecxz
add
inc
repnz
fadd
test
push
pop
in
rorl
mov
add
mov
adcb
fidivrl
sub
fwait
rcr
lods
mov
pop
into
push
es
jp
fidivrs
jns
mov
mov
mul
pop
inc
mov
enter
push
mov
pop
sbb
cld
pop
cmp
push
dec
incl
jg
pop
dec
enter
sub
jl
mov
mov
in
dec
push
je
scas
or
push
int
vpshlw
addr16
mov
ss
dec
or
pop
test
fcoms
int
mov
repnz
sbb
push
pop
rcrb
mov
cwtl
dec
pop
push
push
jnp
icebp
pop
pop
cmpsb
and
xchg
lret
mov
xchg
int
rclb
int3
orl
aas
mov
cmp
add
mov
hlt
popl
dec
dec
enter
xor
mov
sti
sbb
loope
fisubrs
stc
push
mov
xchg
add
js
mov
in
imul
xchg
jle
leave
pop
int
stc
test
roll
pop
test
nop
xchg
push
mov
mov
in
mov
test
icebp
sarb
push
test
imul
aas
cmpb
mov
mov
pop
pushf
cs
sbb
rolb
sahf
ss
rorl
xor
inc
dec
sub
xlat
jbe
sub
loopne
popa
sbbb
test
popf
xchg
cvtpi2ps
push
xchg
push
mov
ss
fstl
shlb
shlb
dec
xor
fstpt
mov
int
dec
xor
jl
test
mov
sbb
and
gs
xchg
push
cmpsl
cmp
enter
std
insb
ljmp
mov
cmpsl
jle
sbb
pop
pop
orl
or
inc
stos
insl
mov
xchg
jns
orl
ret
hlt
shlb
cltd
push
mov
xchg
xor
lds
shll
mov
inc
lcall
or
stos
fmuls
push
mov
jne
inc
mov
cld
cmp
das
in
jl
jmp
repnz
or
lock
mov
push
jnp
in
dec
std
adc
movsb
dec
iret
pushw
fidivrl
and
xchg
cmc
lea
aaa
cmp
xchg
ret
pop
pop
xor
or
sbb
in
cwtl
shll
cs
subl
jmp
mov
push
dec
cmp
call
mov
xchg
lret
in
jl
mov
push
mov
lcall
pop
push
sub
cld
lock
xchg
jle
out
add
movsl
add
in
pop
cmp
lds
jge
stc
stos
fcomps
iret
bound
cmpb
mov
stc
roll
pusha
rorl
aad
sub
subb
sbb
pusha
push
xchg
and
orl
or
aas
nop
fxch
dec
or
or
stc
jb
or
aad
clc
shrl
push
repz
test
mov
aas
dec
insl
movsl
sub
pop
jno
out
fs
xchg
sub
cli
insb
loope
rcl
and
cmpsl
xchg
mov
mov
pop
and
cmpb
lea
dec
mov
adc
notl
std
call
mov
jmp
jb
and
inc
mov
cmp
dec
inc
push
push
out
iret
nop
mov
insb
cmpsb
nop
loope
and
ljmp
mov
inc
pushw
xchg
xchg
lea
inc
es
shlb
and
stc
inc
add
cmp
test
jle
test
insb
fidivrs
xchg
outsl
outsl
and
adc
mov
notl
leave
or
es
dec
daa
dec
push
aam
lods
stc
mov
pop
sub
push
fs
out
xchg
cmpsl
ljmp
or
push
roll
ljmp
jno
in
imull
adc
inc
push
out
in
mov
jne
jl
jne
push
push
bound
shll
sub
mul
xchg
push
add
das
mov
push
loop
mov
and
fwait
cmp
mov
cmpsb
loopne
adc
cwtl
fucom
cmc
xchg
mov
mov
sahf
scas
push
inc
jne
xchg
and
jnp
faddp
mov
fwait
in
pushf
jbe
xchg
push
pop
mov
add
stc
or
xchg
mov
xchg
mov
lods
outsl
jge
pop
dec
xchg
mov
sbb
push
nop
lods
or
push
mov
push
pop
iret
insl
add
pop
test
int
lret
lods
push
ds
roll
cmp
loope
ljmp
in
xchg
jbe
or
adc
mov
lods
fistl
mov
dec
aam
mov
lret
std
cs
notl
sti
or
mov
je
fistpll
arpl
out
xchg
shl
pop
sub
rcl
pop
cmp
jb
shll
aam
int3
lret
sub
shrl
cmc
test
stc
mov
push
jle
outsb
xchg
test
outsb
push
jmp
pop
ss
add
xchg
and
dec
shlb
pop
andb
and
mov
dec
add
and
jns
jbe
xchg
js
dec
imul
cmp
sub
jns
dec
inc
dec
add
sbb
push
sbb
lods
lret
insl
adc
ds
add
sbb
std
cmp
mov
fmull
dec
adc
inc
push
stc
fisubl
sub
add
sub
xchg
jecxz
xchg
xchg
or
push
inc
add
and
push
out
jnp
int3
ss
inc
pop
idivl
fsts
popa
loopne
fnsave
loope
pop
xchg
sahf
jns
add
scas
mov
cmp
push
mov
xor
int
test
inc
nop
xor
mov
movsb
jp
scas
idivb
mov
lret
dec
jbe
in
inc
and
dec
cwtl
in
lds
dec
mov
adc
dec
adc
push
outsl
int
cmp
add
fdiv
inc
adc
jmp
loopne
aam
lds
lahf
cli
push
ss
frstor
jecxz
add
test
mov
mov
dec
fildl
js
pop
in
loopne
into
xlat
cltd
mov
inc
xorl
subb
pop
mov
push
out
mov
lds
lock
fs
push
mov
shrb
sbb
sarl
cld
lods
push
xchg
xor
mov
mov
mov
adc
mov
push
bound
cli
pusha
fst
jl
dec
cmpsb
xchg
fisubrl
sub
pop
add
cs
lahf
sub
add
push
adc
inc
and
and
out
aam
add
push
mov
push
shll
movsl
in
mov
ret
xchg
in
pop
gs
inc
inc
or
aam
and
pushf
mov
inc
jo
xchg
adc
loopne
inc
push
mov
fwait
ret
data16
adc
mov
sbb
xor
dec
mov
mov
push
mov
jge
sub
sbb
repz
xlat
enter
mov
xor
sbb
fwait
ds
or
mov
and
cltd
fimull
xchg
sub
jns
in
fisubs
mov
inc
adc
mov
mov
xchg
dec
adc
data16
xor
pop
sub
and
pop
cmp
movsb
mov
mov
aad
dec
push
lods
xchg
jle
test
iret
xlat
movsl
push
sbb
enter
push
sub
or
sbb
js
mov
aad
sar
dec
mov
das
jecxz
ljmp
cmpsl
leave
das
js
add
loope
pusha
popf
mov
cs
fistps
jns
mov
pop
sbb
in
addr16
ret
or
jb
jbe
shll
inc
xor
sbb
jmp
test
sub
jne
jp
xchg
adc
aad
shrb
sti
andnps
addr16
mov
jae
repz
cmpsb
out
jae
mov
lods
lods
loopne
lods
lret
inc
ja
add
fnstenv
mov
xchg
and
sbb
jae
mov
fcoms
movsl
mov
inc
mov
jns
xchg
insb
inc
mov
hlt
mov
mov
clc
aas
xor
call
mov
fcoms
push
sbb
xchg
std
xchg
sub
xor
or
lahf
or
pop
add
xchg
scas
xchg
enter
dec
scas
pop
jmp
dec
adc
std
aas
xchg
inc
inc
or
cli
ss
or
jmp
or
aad
pop
adc
mov
adc
jl
pop
test
add
bound
cmc
cld
inc
or
mov
aas
mov
adc
lahf
sahf
ss
shl
test
out
imulb
repnz
enter
pop
imul
cwtl
xchg
cltd
pushf
pop
in
js
adc
ficoml
fs
insb
loop
push
bound
xchg
ret
mov
rclb
dec
inc
xchg
mov
mov
pop
cwtl
mov
cmp
add
ss
pop
outsl
scas
mov
je
outsl
cwtl
scas
add
push
stos
push
stos
sub
jmp
dec
mov
adc
shlb
mov
inc
hlt
cmpsl
mov
jg
jbe
xchg
mov
push
push
mov
cli
pop
mov
fwait
bound
pop
mov
std
or
push
cmpl
jecxz
daa
or
adc
std
mov
movsl
stc
jne
out
push
xor
sbb
aas
ja
movsb
cmp
rcl
mov
xor
pop
xchg
cwtl
mov
mov
jmp
orl
pop
fwait
pushf
jmp
outsb
jecxz
xor
stos
add
ja
cld
test
dec
sbb
push
fldt
popf
int
popf
loope
push
pushf
mov
and
xchg
shrl
add
inc
cs
push
push
repnz
cmpsb
sub
cmc
and
movsb
mov
push
sbb
ficoms
cwtl
cmp
add
inc
imul
jns
push
and
not
and
pusha
pop
push
out
jl
and
or
add
jl
fldt
loop
lret
pop
scas
mov
dec
div
mov
and
icebp
and
movsl
repnz
adc
push
pop
pop
jmp
lock
mov
dec
mov
fucom
pop
jge
add
cmp
push
lret
fdivrl
rcrl
xor
adc
xchg
rolb
test
testl
adc
int
loope
in
adc
sahf
fsubs
cli
rclb
adc
adc
mov
lods
je
ret
lret
mov
rolb
sub
add
sarl
mov
cs
addr16
and
in
mulps
cmp
dec
in
lcall
dec
jg
ds
shrl
adc
push
cmp
out
leave
push
push
lret
fdivr
inc
incb
je
pop
iret
arpl
mov
iret
push
divb
xchg
jne
cmp
negl
jle
fisubrl
sbb
inc
push
test
mov
pop
dec
jecxz
and
add
jle
push
aam
aad
pop
push
loope
imul
mov
sbb
push
add
xor
pop
ja
sub
rorl
out
pushf
mov
cs
xor
popf
push
sbb
out
jl
and
mov
mov
loop
inc
daa
mov
popf
test
lahf
aam
outsl
and
repz
add
mov
mov
cwtl
ret
jmp
hlt
xchg
mov
shll
cmpsl
inc
xchg
subl
xchg
fcmovnu
data16
mov
sub
or
jne
jecxz
addr16
and
sub
ljmp
xor
int
clc
jp
xchg
cmp
popa
mov
jbe
sbb
lret
inc
in
mov
mov
xchg
mov
lret
and
dec
push
mov
cli
xchg
daa
movsl
jb
add
adc
divb
mov
stos
xchg
adc
sbb
mov
xor
sub
cmp
cmpsl
fimuls
rolb
rolb
sahf
lcall
lret
loopne
sbb
dec
pop
adc
xchg
int
scas
sbb
add
sub
sbb
jne
jbe
mov
int
jae
push
sbb
jmp
das
mov
filds
adc
cmp
dec
aaa
jmp
cmp
and
sub
int
adc
dec
int
xor
movsb
lds
add
cltd
jecxz
dec
pop
fisubl
pop
dec
mov
movsl
xchg
or
in
cwtl
dec
insl
or
dec
int3
cmp
push
jno
jle
sub
push
push
pcmpgtb
sub
mov
xor
mov
or
loop
repnz
mov
gs
lods
xor
dec
cmp
clc
shll
aad
cmp
jb
cmpb
cmp
leave
jae
jge
xchg
push
push
frstor
pop
cmp
fwait
scas
xchg
shrb
fwait
std
mov
lock
pop
pop
push
aam
sarl
mov
les
pop
loop
push
rclb
jecxz
sbb
fwait
or
add
mov
cmp
xor
cmp
xchg
jne
push
and
sbb
scas
lahf
dec
and
movsl
mov
ret
bound
pop
sbb
call
test
pop
mov
cli
mov
pop
mov
insl
mov
mov
xor
xlat
repz
imul
scas
push
jp
insl
lret
rolb
push
add
fldl
das
in
jb
xchg
ds
push
jne
fs
stos
cmp
xchg
and
repnz
sbb
mov
inc
and
daa
sti
cs
arpl
xor
or
add
xor
setb
push
test
jl
inc
mov
dec
aas
xchg
es
lret
test
adc
push
enter
je
lret
xor
test
je
mov
adc
or
ljmp
nop
lahf
test
xor
lahf
leave
fs
das
iret
jbe
xor
loope
and
mov
fs
add
in
pop
subb
dec
dec
inc
adc
adc
scas
fmuls
cmp
xchg
or
adc
xchg
dec
pop
add
aas
jmp
ss
out
aad
pushf
sbb
add
pop
xchg
or
or
jbe
repnz
sbb
sub
mov
jb
inc
or
pop
lock
insl
outsl
mov
lcall
icebp
fmull
in
xchg
lock
cmp
dec
je
sub
adc
cmp
mov
inc
push
jp
cwtl
push
pop
sub
sbb
lods
fstps
xchg
mov
fcoms
pushf
sub
shr
in
std
sbb
sub
pop
int3
mov
pop
mov
mov
jbe
inc
mov
xor
adc
xlat
mov
js
mov
popf
int
out
push
fs
mov
jp
hlt
fbld
inc
movups
adc
andb
fisubrl
imul
inc
je
cmpsl
jmp
sub
push
inc
push
fstpl
scas
and
sub
call
enter
popf
cmp
fists
test
inc
fwait
jns
or
jne
cmp
test
sub
in
add
xchg
pop
mov
adc
loopne
sbb
mov
mov
popf
jmp
inc
pslld
daa
sub
and
add
insb
daa
stos
inc
cmp
cmpl
push
lds
pop
lret
push
popf
cmpsl
xchg
test
or
xor
repnz
xor
lds
mov
inc
sub
dec
mov
mov
aas
lahf
cltd
pop
sbb
mov
mov
mov
push
adc
popl
rorl
adc
aaa
arpl
push
addl
icebp
insb
mov
mov
dec
hlt
inc
in
and
lods
or
xlat
imul
xchg
jns
loopne
cs
fs
sub
loope
in
and
sti
stos
lret
adc
push
jne
add
std
shll
in
adc
lods
lret
cmp
repz
xor
jno
ljmp
mov
ljmp
je
xchg
pop
adc
cwtl
push
dec
cmpsb
xchg
and
out
jg
loope
sub
or
nop
jge
cmp
stos
repnz
ret
stos
push
sarl
iret
mov
int3
mov
sub
dec
fidivrs
movsl
and
mov
jnp
adc
shrl
dec
cld
or
sbb
add
in
lds
test
popf
shr
mov
or
sbb
outsl
cmp
mov
adc
insl
cmp
sbb
orb
cmpsb
pop
cmc
jmp
push
in
aaa
jno
xor
push
aas
pushf
in
sub
cmpsl
jo
fwait
dec
sahf
in
test
pop
out
and
lcall
cmpsb
ficoms
aas
jecxz
xchg
add
sub
addb
scas
push
xlat
sbb
pop
dec
out
xor
out
jle
dec
jno
pop
dec
repz
aam
movsl
stos
loopne
decl
xchg
mov
mov
enter
pop
fwait
jbe
shl
leave
adc
dec
jge
jp
sbb
sub
cmpsb
add
ret
sbb
mov
cmp
xchg
shl
mov
pushf
loop
mov
and
cltd
das
xchg
lods
xchg
shlb
es
cmp
mov
ja
sbb
lods
xchg
icebp
xchg
xlat
push
adc
dec
dec
pop
jmp
jp
imul
stos
jb
cmp
insb
lahf
lea
sub
mov
dec
daa
int
divl
daa
sub
stos
pop
inc
jmp
inc
movsb
sti
xor
in
out
add
je
shll
fmull
rolb
fildl
lret
mov
mov
cltd
xchg
push
es
cld
and
push
ret
xor
movl
in
jne
inc
push
loopne
fwait
adc
and
test
cmp
out
jnp
jmp
fs
test
pop
jl
ret
or
lea
inc
mov
xchg
incl
adcl
rep
sub
lock
lret
outsl
fucomp
fists
dec
mov
not
push
mov
int
cmp
jo
cmp
loope
icebp
decl
jp
push
js
lahf
scas
icebp
in
push
popf
pop
lods
inc
mov
insl
fldenv
lods
je
jle
mov
push
ficomps
jmp
outsb
repnz
lea
stc
xchg
adc
icebp
shrl
fbstp
ret
pop
cmc
aad
les
sub
pushf
inc
mov
orl
and
xor
xchg
sub
mov
aad
cmp
inc
sbb
and
cmpsl
xchg
sbb
mov
les
ljmp
loop,pt
popa
cmpsb
or
ss
cltd
push
ret
mov
mov
adc
xor
out
ja
repz
in
jmp
popa
xor
je
fsubrl
or
js
jae
or
jae
inc
dec
ret
push
lds
scas
insl
push
and
push
lods
data16
cmp
mov
stc
lret
jecxz
nop
movsl
or
std
in
out
jmp
mov
es
in
add
in
fstps
lret
arpl
mov
mov
fwait
mov
imul
xor
add
adc
push
push
sbb
dec
popa
lret
push
jnp
mov
mov
insl
xchg
dec
push
movsb
scas
test
cli
sub
mov
bound
cmp
xchg
cwtl
rcrb
mov
outsl
andb
adc
add
repnz
cmp
lds
jbe
add
xor
pop
sbb
push
lcall
adc
or
inc
pop
dec
cmpsb
mov
push
fcoml
mov
repz
mov
mov
sahf
nop
xchg
cli
imul
mov
push
fs
pop
adc
sub
lcall
jp
jge
lock
mov
loope
xchg
cmpsb
ret
cmp
sbb
inc
push
xchg
dec
andl
mov
andb
and
fwait
pusha
dec
in
cs
fwait
push
rol
aam
int3
rorb
or
popf
sub
push
xor
loopne
adc
pop
xchg
inc
in
jae
cwtl
addb
push
mov
popa
enter
xor
das
sub
jno
inc
js
jae
outsl
pop
xchg
les
cwtl
test
addl
sub
and
cld
push
push
pop
dec
mov
into
push
stc
inc
sub
jp
xchg
dec
mov
cltd
addr16
and
mov
and
and
bound
mov
daa
je
int3
insl
mov
cmp
outsl
push
mov
out
addb
loop
dec
mov
scas
cld
std
rolb
ss
dec
lahf
cmp
insb
les
pop
lcall
jnp
btr
push
nop
mov
outsl
cmp
jge
stc
in
xor
push
and
cmp
inc
mov
inc
or
bound
add
xchg
ja
fwait
dec
xchg
or
mov
pop
lods
xor
xor
sahf
and
ret
sarb
incb
fsubrl
push
jnp
hlt
xchg
dec
mov
pop
pop
inc
aaa
fisttps
pop
dec
aad
jl
mov
dec
inc
push
push
push
and
sub
sub
je
push
gs
sub
int
mov
pop
sbb
cmp
aas
sbb
call
or
mov
pushl
dec
or
jle
test
repnz
daa
inc
xlat
fwait
jg
cltd
shrl
pop
xchg
scas
je
jnp
cwtl
xchg
in
cwtl
cmp
dec
jae
and
sbbl
das
sub
stos
mov
fimuls
cmp
mov
aad
je
fisttps
scas
fstp
in
mov
loope
mov
push
cmp
fisttpll
jne
mov
les
fcomp
je
cmp
mov
cld
push
subb
push
es
das
jne
pop
xor
pop
adc
xor
icebp
sbb
push
pusha
or
dec
out
push
dec
ss
inc
mov
imul
adc
inc
repz
sub
in
lock
rorl
scas
adc
add
pop
mov
add
cmc
fwait
out
add
push
jge
mov
adc
insl
mov
xchg
sbb
push
bound
daa
jae
jno
sbb
andb
mov
lahf
sbb
lds
pusha
dec
xchg
mov
cwtl
pusha
pop
xchg
imul
push
fcoml
mov
cmp
ret
daa
ljmp
sub
xchg
jle
jl
add
xlat
sti
mov
imul
stc
xchg
lret
bnd
fisubl
pushf
aam
ds
fs
inc
subl
imul
test
jmp
dec
mov
dec
adc
push
sub
adc
in
xor
and
hlt
xchg
test
fwait
shrl
ret
scas
adc
std
xchg
adc
sbb
mov
vcvtpd2dqx
ja
jbe
adc
repz
add
out
sbb
mov
sbbb
adc
aad
mov
in
jl
jmp
cs
dec
mov
pop
pop
sub
add
add
lcall
enter
in
popa
inc
stc
js
cmp
sbb
lcall
pop
pop
lods
adc
bound
cmp
gs
mov
out
pop
dec
out
ss
int3
pushl
xor
dec
orb
jle
clc
icebp
shlb
les
add
scas
xchg
inc
aam
mov
mov
leave
mov
inc
andb
push
push
int
push
dec
mov
fs
lock
mov
mov
mov
push
sbb
jge
adc
xchg
in
stc
xor
loopne
mov
das
daa
sbb
jle
sbb
dec
xchg
or
adc
cltd
push
xlat
in
shll
adc
inc
lock
adc
sub
clc
pop
mov
jl
mov
or
or
call
cmc
inc
push
aaa
pusha
xchg
pushf
pop
in
add
shrl
cmp
mov
jns
shll
rclb
mov
cmp
lcall
test
ffreep
out
outsb
nop
cmpsl
mov
xor
cmp
int3
aad
ljmp
mov
jp
adc
mov
push
xchg
into
sar
dec
pop
mov
outsb
add
lcall
sbb
out
cmp
sub
sub
cmp
addl
mov
bound
div
inc
popf
fcoms
pop
mov
jle
pop
mov
or
push
sbb
push
adc
pushf
push
mov
gs
or
loop
or
or
dec
add
cwtl
dec
ja
scas
push
in
push
inc
lahf
dec
jecxz
fldz
jb
push
pop
sbb
sahf
jno
jl
fdivs
jmp
or
fidivrl
inc
enter
lret
push
adcl
xor
mov
ljmp
lea
pop
cmp
and
cmp
sbb
int
sub
shl
rclb
sub
pop
xor
dec
leave
add
and
inc
andb
jns
xchg
xchg
sbb
mov
adc
cmp
or
xchg
hlt
leave
xor
dec
inc
xchg
jmp
sub
call
push
in
cmp
bound
inc
xchg
xchg
cmpsb
pop
mov
ds
mov
mov
call
test
pop
fsts
mov
ret
in
xor
leave
mov
orl
xchg
sub
pop
mov
fiadds
movsb
stos
jne
sbb
mov
sbb
iret
outsl
jecxz
shlb
xor
pop
mov
mov
dec
lock
call
inc
mov
and
dec
push
jns
shlb
adc
mov
push
les
pop
stos
leave
sbb
stos
test
inc
fildl
xor
adc
es
jl
mov
and
dec
andb
out
cs
jl
test
add
mov
mov
adc
scas
push
mov
movsl
mov
mov
std
fdivl
jmp
cmp
pop
pop
xchg
xchg
lods
push
sub
orl
adc
je
jl
mov
outsb
mov
pop
das
add
stos
daa
popf
fwait
adc
jp
mov
insb
mov
mov
dec
sub
jp
test
out
push
sbb
jmp
shlb
jno
shll
push
aaa
out
fwait
ljmp
sbb
mov
lret
xor
mov
iret
sbb
push
sti
mov
xchg
push
in
mov
mov
jne
leave
push
xchg
xchg
mov
mov
cmpl
iret
cmc
adc
inc
pop
mov
xor
lcall
push
out
mov
in
int
testb
add
cmp
adc
mov
sub
out
neg
repnz
rorl
jno
bound
cmp
les
in
repnz
sbb
jo
lea
mov
mov
push
xchg
ss
or
testb
jmp
jno
adc
dec
mov
mov
je
icebp
cmpsl
dec
inc
and
add
sbbb
adc
mov
xchg
sbb
push
pop
out
pop
sbb
fldcw
adcl
ss
lods
add
xchg
pop
mov
mov
shlb
jg
lock
imul
push
sbb
lea
fidivrs
pop
sub
and
jno
scas
divb
lahf
lcall
sbb
push
jo
add
push
xchg
mov
scas
loope
movsb
dec
cwtl
and
cli
pop
or
ret
lock
push
mov
fldt
xchg
mov
mov
add
ljmp
inc
mov
rcrl
and
into
add
mov
dec
mov
lds
mov
xchg
mov
mov
jno
sti
jnp
sti
dec
fsubl
xor
and
loope
test
scas
mov
cmpsl
sub
inc
mov
mov
and
pop
pop
imul
cmpsl
or
adc
add
sbb
stos
int3
or
and
xchg
dec
cmp
lods
sbb
xchg
sti
add
shlb
loop
fstpl
out
mov
repz
mov
fnstsw
mov
push
test
loop
lcall
push
xchg
bound
inc
outsl
lock
mov
adc
jnp
mov
cmp
xlat
sbb
out
cmc
mov
pop
jne
movsl
rclb
nop
loope
cld
mov
sub
mov
bound
xlat
cli
sub
add
mov
test
pop
repnz
lret
xchg
negl
test
popa
sbb
sbb
fisttpl
data16
jo
aam
sbb
out
push
mov
lret
dec
in
lret
push
rcrl
and
cs
lahf
cmpsb
mov
fs
and
push
ljmp
enter
jg
cltd
out
adc
rcr
fwait
add
mov
push
adc
lahf
pop
jbe
int
nop
push
in
leave
fidivl
xchg
je
pop
and
pop
cmp
stc
push
fildl
test
movsb
pusha
lock
insb
dec
or
test
repz
popa
dec
leave
iret
popfw
mov
dec
hlt
pop
xorl
int3
jge
icebp
sbb
in
pop
in
xchg
push
sbb
xlat
leave
ret
ficompl
ljmp
mov
push
movaps
xchg
lret
cmp
lods
xorl
fsincos
fs
dec
jp
mov
xchg
adc
insl
shlb
inc
sub
call
mov
and
jl
enter
leave
bnd
std
movsb
pop
ret
repnz
in
lds
pop
mov
repz
hlt
imul
movb
loope
orl
test
sub
pop
in
push
xchg
push
mov
popl
mov
loop
sub
mov
int
pushf
dec
stc
jp
push
mulb
mov
mov
dec
incb
push
movsl
lret
xchg
out
mov
call
cli
scas
clc
cltd
mov
lock
fs
arpl
sti
call
push
and
movsb
sbb
mov
dec
dec
aam
outsb
jb
movl
scas
loopne
fucomi
shlb
iret
scas
mov
and
xchg
das
movsl
shlb
pop
jp
dec
adc
cmc
test
and
dec
mov
add
enter
pop
into
xchg
dec
rorb
xor
fnstenv
pop
shlb
adc
xor
fistps
xor
jne
mov
lea
cmpsb
fsub
cmp
sahf
or
and
jle
jb
scas
mov
add
mov
imul
int
xor
sub
inc
sub
mov
icebp
pop
fadd
mov
movsl
mov
les
imul
or
pop
cwtl
push
shl
orb
test
xchg
cmp
sub
std
pop
push
loop
nop
in
sub
mov
not
and
pushf
imul
cmp
push
jb
pop
xchg
push
lods
pop
mov
dec
insb
add
loope
dec
out
scas
aas
or
xchg
jbe
ss
or
or
adc
cmc
lahf
mov
sub
aam
adc
repz
mov
repz
add
mov
sti
add
shlb
and
add
xchg
add
cld
push
and
cli
call
js
subl
gs
outsb
sbb
mov
clc
scas
sar
insb
jge
rep
nop
ds
dec
sahf
lods
push
subl
cli
mov
xchg
and
popa
jecxz
jne
mov
ds
or
pop
inc
dec
jmp
mov
or
cmp
pop
addl
push
scas
push
pusha
es
inc
scas
pop
sbb
inc
ficoms
mov
out
ja
mov
or
ret
jmp
popa
mov
fnstsw
xchg
repnz
stos
adc
stos
cltd
xchg
je
or
xor
sbb
les
je
sbb
lods
or
mov
shlb
push
pop
jge
sbb
pop
addr16
out
call
pop
fimull
ja
pusha
dec
scas
push
stos
dec
std
cmc
xchg
sub
or
jl
push
jne
sub
push
popa
push
mov
lcall
xor
shlb
aam
sub
iret
xor
sub
push
mov
insb
addr16
mov
or
stc
jno
inc
andl
push
mov
jbe
leave
repz
inc
adc
movsl
mov
push
cmp
in
das
cli
fldt
in
push
mov
iret
mov
sbb
cmp
inc
or
jb
icebp
add
mov
cmpsl
push
cwtl
mov
pop
out
sbb
into
push
dec
dec
xchg
pop
insb
popf
out
xorl
test
sub
cltd
pushf
cmp
jbe
mov
leave
fs
and
cltd
cmc
add
inc
or
icebp
sbb
adcl
push
sbb
out
cmp
xchg
sbb
inc
mov
imul
and
jle
xor
jle
notl
xlat
adc
movsb
xchg
adc
repz
xchg
xchg
mov
jmp
fs
push
lods
mov
repnz
add
inc
sti
pop
punpckldq
das
scas
jl
inc
mov
xchg
mov
outsb
es
lcall
push
ljmp
int3
cli
icebp
movsb
ja
mov
ljmp
xchg
sub
rcrl
out
mov
ret
roll
and
mov
xchg
test
mov
repz
and
pusha
hlt
inc
loope
mov
cli
pop
shrl
sbb
hlt
cmp
std
adc
cli
hlt
cmpsl
shl
inc
filds
sub
mov
insl
fistpll
push
sub
ljmp
fdivs
mov
adc
or
push
fsubrl
ja
pop
inc
add
or
adc
out
pop
test
jg
out
fsubrp
and
mov
fistl
pusha
loope
test
push
push
fsubl
mov
cmp
rcrl
pop
cmc
mov
xor
clc
es
mov
mov
pop
push
mov
mov
add
aad
mov
mov
and
idiv
loopne
mov
int3
and
pop
das
bound
cmp
aaa
test
mov
push
add
enter
lret
mov
add
lea
adc
xor
sahf
mov
xchg
jno
add
int3
insl
pop
inc
cmp
xor
fidivl
cmp
imul
jns
inc
stos
mov
sahf
shrl
lcall
or
mov
sahf
mov
cmpl
mov
iret
jns
adc
push
sti
adc
mov
mov
cmp
testb
jmp
mov
fnstenv
and
cmp
jmp
push
mov
addr16
jmp
test
ss
sti
test
hlt
rcl
dec
mov
iret
into
insb
imull
imul
sub
mov
rep
mov
lods
pushl
push
sti
jmp
out
mov
addb
dec
mov
cmp
lea
jle
mov
mov
xchg
mov
loop
xchg
push
inc
mov
loop
push
jp
insb
xchg
in
into
mov
fistps
nop
test
xor
push
push
shll
mov
mov
lahf
inc
cli
or
arpl
or
sahf
movsl
inc
adcb
dec
mov
lods
dec
sbb
xchg
fldcw
frstor
ret
xor
jbe
cltd
sahf
mov
add
repz
mov
jae
sub
fidivl
add
xchg
push
cmp
cmp
and
call
dec
inc
gs
add
cmp
lcall
mov
xchg
pop
jae
repz
xchg
test
jnp
push
mov
jnp
imul
mov
lea
cmp
lret
test
cmc
movsb
pop
scas
xor
mov
clc
jge
dec
sbb
and
dec
in
test
cwtl
xchg
cmp
pop
lcall
cmp
sub
push
dec
xchg
mov
cltd
sbb
in
mov
ss
jnp
js
stos
sub
xor
mov
sbb
mov
cmpsb
repnz
mov
scas
sbb
cwtl
cli
loope
stc
lahf
lcall
push
xchg
in
sub
or
fwait
sub
cmp
loop
leave
mov
push
lds
mov
dec
adc
sub
mov
jecxz
xchg
xchg
loop
jl
ljmp
stos
mov
stc
jecxz
bound
xchg
xchg
and
sbb
and
pop
sbb
mov
int3
push
or
xor
dec
inc
mov
cli
add
push
and
lcall
ljmp
push
jbe
fwait
add
pop
insl
ret
insb
enter
jmp
add
clc
and
sbb
popf
xchg
mov
idiv
cmp
mov
fcmovb
and
out
adc
stos
adc
xchg
nop
mov
loopne
pushf
xchg
sahf
loope
fidivs
sub
inc
mov
icebp
push
pusha
and
lret
fcomp
aaa
dec
inc
or
jae
xor
pop
or
cmp
popa
cs
cli
sahf
mov
sarl
mov
sti
push
mov
lds
dec
pop
lds
or
ficoms
dec
ficomps
fists
inc
cmp
addl
dec
lods
xchg
dec
movl
dec
xchg
sub
mov
shll
sub
lret
jnp
out
inc
cmpsl
aas
cmp
addb
push
sub
jne
sub
xchg
xor
mov
mov
bound
adc
jb
jns
je
push
xchg
dec
aad
push
mov
das
lock
jbe
adc
mov
add
and
sub
inc
cmp
mov
add
mov
push
xchg
out
pop
vcvtps2pd
pop
iret
xor
push
scas
mov
jne,pn
xchg
push
dec
cld
push
insb
neg
or
clc
pop
jle
mov
mov
aad
sbb
ja
or
data16
and
pop
sub
push
jmp
scas
cmc
out
cwtl
fwait
mov
int3
mov
cmc
scas
dec
in
lret
mov
mov
insb
in
ret
or
mov
inc
mov
popa
lods
jne
subb
or
aad
cmp
out
pop
push
cwtl
cltd
add
lret
cmp
jg
test
stos
out
test
fsubrp
lods
mov
jbe
and
in
sub
rcrb
push
mov
push
xchg
jmp
mov
xor
sbb
jae
and
andl
arpl
cmp
mov
jge
dec
or
outsb
push
or
xchg
lahf
dec
push
inc
or
lds
fwait
cmpsb
jmp
add
idivb
mov
inc
mov
das
cwtl
mov
incb
mov
xor
mov
pop
pop
mov
xchg
sub
cltd
repz
dec
add
dec
push
adc
mov
mov
push
jne
enterw
addr16
mov
mov
stc
jb
ret
xlat
sbb
imul
mov
test
push
cld
in
or
jp
fiaddl
mov
cmp
dec
roll
push
stc
popf
or
outsl
fnstenv
dec
xor
jle
inc
popa
push
mov
into
or
fsts
inc
and
jge
lock
and
or
adc
or
mov
xchg
inc
xchg
jle
aad
cmp
test
jno
add
xor
sub
xor
imul
ret
dec
lods
mov
ja
sbb
sub
ret
dec
sub
int
mov
push
popa
nop
push
dec
insb
fisttpll
and
xchg
push
inc
insl
sub
mov
fsub
sti
mov
xchg
aam
xchg
dec
ljmp
add
jge
dec
mov
sbbl
in
ja
or
add
cs
cmp
shl
nop
mov
jo
dec
imul
fld
sub
xchg
mov
pop
sahf
roll
sub
js
push
pop
dec
mov
and
ljmp
popf
aam
jp
nop
and
cli
jb
and
addb
cmpsl
xchg
and
cmp
xor
cmp
pop
push
cmp
jg
sub
int3
fsubrl
jb
ljmp
jmp
dec
es
cmp
inc
mov
adc
ds
mov
arpl
ljmp
in
arpl
loop
mov
xor
jp
xchg
out
test
and
fstpt
cmp
and
test
push
pop
jmp
movsb
pusha
mov
lcall
mov
nop
sbb
cmp
lds
in
lret
or
pop
iret
cltd
dec
paddsb
leavew
insb
inc
mov
imul
in
push
das
dec
pop
out
shll
inc
cli
lods
dec
lods
and
fldcw
sbb
aad
fisubl
lret
adc
adc
cmp
mulb
lahf
fisttpll
fcmovb
or
icebp
mov
mov
roll
xor
add
mov
imul
adc
andb
fwait
loop
cmp
jl
sarb
out
pusha
sbb
int3
not
popa
enter
test
mov
cmp
inc
push
push
lods
or
roll
xchg
cmp
outsl
fcmove
xlat
xchg
xor
lcall
cmp
mov
and
cmc
lods
sub
push
or
dec
adc
rorb
lea
cmc
xor
mov
inc
and
cs
push
filds
ljmp
dec
add
or
in
cmp
xor
rcrb
je
or
push
inc
or
cltd
daa
setno
sti
pop
xor
ds
lret
add
pop
sbb
cmp
sub
rolb
xor
xlat
xor
adc
mov
mov
shrb
imul
sub
mov
rcr
or
jg
scas
mov
adc
sub
mov
mov
jne
pop
mov
aaa
inc
jle
xchg
mov
cs
jg
xlat
add
cmp
and
jno
xchg
xor
xchg
sbb
adc
mov
mov
rclb
icebp
fs
enter
add
jae
dec
mov
inc
sub
stos
pop
stos
and
xchg
mov
sbb
cmpsl
jmp
stos
xchg
inc
mov
outsl
or
loope
call
loope
mov
fdivr
pop
xchg
xchg
jecxz
sbb
inc
add
mov
push
mov
cmp
push
cmp
cld
mov
pop
and
lret
hlt
ja
sti
popf
mov
cmp
adc
ficoml
cmp
insb
mov
imulb
push
ret
sbb
pop
mov
adc
addr16
addr16
movq
cmp
je
repnz
cmp
movsb
vmread
jmp
sbb
out
test
nop
and
out
std
sbb
push
xchg
repnz
outsl
push
or
daa
add
ret
mov
insl
xchg
in
or
sbb
out
loope
jns
js
sarb
arpl
mov
scas
add
lahf
pop
hlt
leave
nop
dec
daa
jg
sbb
pop
movsl
push
xchg
jg
test
gs
arpl
out
movsb
cmp
movups
dec
mov
mov
sub
idivl
leave
push
xchg
jmp
dec
imul
inc
pop
adc
fisubl
jne
mov
mov
dec
mov
pop
scas
fsts
mov
shrl
stos
dec
fnsave
insl
aas
jnp
jae
cmp
pop
ja
das
mov
ds
into
mov
pop
psrad
jo
adcb
mov
mov
inc
and
lods
mov
pop
nop
inc
pop
jae
outsb
dec
push
mov
and
mov
orl
add
loop
add
popf
hlt
mov
push
inc
inc
pop
sahf
push
adc
xlat
and
repnz
rorl
cld
add
cmp
aaa
fldenv
scas
cmp
arpl
cmp
imul
cltd
and
pop
in
mov
lret
mov
jns
ficoml
outsb
adc
mov
ficoml
cmp
sbb
mov
mov
or
push
pop
xor
iret
stos
inc
loope
xlat
pop
jb
in
pop
sarb
xchg
fidivrl
ret
mov
insl
imul
lea
shl
test
aad
jmp
mov
movsb
int3
fstpl
dec
fmulp
jns
sub
jmp
mov
ds
mov
jo
inc
cmp
ja
aad
inc
shll
mov
inc
mov
sub
inc
popf
pop
mov
jge
call
test
ss
nop
pushf
out
push
cmp
jae
rol
xchg
ret
jnp
push
adc
sbb
jle
sub
in
dec
adc
pop
insb
repnz
mov
jb
cwtl
cli
dec
xorl
int3
cmp
movsb
cli
cmpsl
jge
cmc
mov
lret
cmpsb
sub
js
bound
and
lock
outsl
mov
lea
sub
ss
xor
xor
or
and
push
adc
lcall
in
rcll
or
xor
imul
bound
cmp
stc
jecxz
test
jmp
lods
icebp
mov
push
ret
xchg
or
cmp
sti
data16
push
incl
lds
movsb
lcall
sbb
dec
add
mov
gs
lret
std
or
mov
fistpll
push
mov
scas
mov
loope
or
add
shlb
sbb
in
cmp
aad
je
repz
mov
sbb
rcrl
outsl
and
imul
popf
adc
sbb
fdivl
xchg
cmpb
mov
dec
sbb
jle
jge
ds
lcall
xchg
dec
std
sub
and
gs
jmp
mov
adc
je
jmp
sbb
outsl
mov
sub
ret
xchg
andb
mov
jnp
in
jecxz
lods
or
mov
pop
dec
sub
rcrl
cld
dec
fcom
and
mov
pop
xchg
cmc
xchg
fistpl
dec
mov
mov
sub
movb
cmp
jns
imul
test
and
add
xor
rcrl
testl
jmp
lcall
xor
jmp
and
inc
cld
sub
dec
mov
inc
aaa
cli
sbb
lea
ja
add
test
jmp
sbb
xchg
jecxz
or
mov
add
dec
sbb
sbb
inc
leave
pop
mov
sub
cmc
adc
cmpsl
cmp
jnp
ret
lds
in
xor
arpl
mov
push
shl
inc
test
fists
adc
daa
xchg
push
fsubrs
cmp
in
sbb
popf
fildll
mov
push
pop
pop
mov
loope
lods
inc
jbe
int3
int3
das
stos
idiv
bound
pop
xchg
insb
dec
dec
pop
xlat
fsubr
jmp
popf
pop
fst
sub
imul
push
repnz
push
lods
push
xchg
mov
iret
cmp
push
jl
out
pop
xor
dec
push
sub
int3
jne
mov
jns
cmpsb
xor
pop
ret
jecxz
loop
xchg
jae
in
ret
sarb
fs
mov
and
mov
cld
ret
lods
stos
cmp
in
add
loop
imul
add
sbb
or
out
mov
adc
cmp
testl
loopne
jo
jmp
dec
or
call
leave
inc
scas
mov
je
inc
push
push
mov
mov
daa
stos
cmp
lods
sub
cmp
or
jnp
xchg
imul
dec
mov
pop
push
in
in
and
repz
mov
sarb
data16
or
andb
and
mov
xorl
or
ja
xor
push
arpl
inc
clc
in
inc
arpl
scas
daa
or
xor
cmp
push
mov
mov
out
movsl
and
xor
mov
sbb
mov
xchg
ficomps
sbb
rorl
or
pop
sub
dec
call
sbb
add
pop
or
fisubs
xchg
pushf
inc
push
xchg
in
sub
mov
sub
popf
test
pop
jo
mov
pop
add
inc
adc
push
mov
call
jb
aad
rorl
in
stos
lcall
js
xchg
icebp
push
flds
fidivrs
or
cmp
mov
lcall
test
or
mov
mov
mov
mov
loope
push
push
xor
repz
jmp
js
insb
mov
lea
jo
dec
inc
inc
inc
dec
or
outsb
mov
push
add
test
or
sub
pop
fdivl
jp
outsl
ss
sti
fcomps
rclb
push
out
scas
add
adc
cmp
pop
roll
insl
scas
aaa
leave
jbe
xor
outsb
dec
or
inc
in
pushf
push
push
in
cmpsb
adc
movsl
shlb
insl
and
popf
inc
lds
sbb
and
es
fsub
add
ret
aas
add
xchg
enter
jno
jmp
adcb
jne
pusha
xchg
jnp
push
sub
pop
repz
fmul
mov
sbb
mov
sti
mov
popf
mov
pop
add
jle
inc
fnstcw
test
pop
sub
inc
xchg
lret
fdivs
ret
pop
fsubl
or
mov
mov
adc
les
push
int3
enter
rcrb
loope
and
enter
scas
pop
sbb
arpl
negl
jecxz
mov
adc
frstor
std
adc
xchg
stos
push
mov
int3
push
int
cmpsl
xor
pushf
inc
and
inc
push
inc
pop
jns
inc
out
cmc
gs
les
jge
dec
jp
jmp
lret
shr
dec
dec
or
dec
fsub
mov
in
jge
popl
out
insl
in
push
push
sbb
and
stos
iret
cltd
or
int3
cltd
inc
xchg
test
dec
iret
sahf
inc
std
and
pusha
sub
xchg
out
sbb
mov
dec
sub
test
push
mov
xchg
subb
mov
sub
push
sahf
jg
mov
repnz
or
dec
fwait
cwtl
cmc
pop
push
jmp
xchg
mov
lahf
xchg
jbe
mov
sbb
adc
jno
jge
cmp
outsl
mov
shrl
ja
jns
addr16
push
cmp
arpl
push
imul
daa
and
mov
loope
push
out
arpl
int
add
jg
xchg
cli
add
jb
xchg
xorl
and
fimuls
pop
pushf
imul
in
push
or
add
pop
icebp
andl
or
jo
lahf
out
add
inc
das
repz
addr16
xor
vsubss
jo
push
xchg
rorl
dec
in
pop
dec
fmull
loop
mov
aad
xor
pop
pop
or
cmpsl
and
inc
sbb
clc
ret
in
mov
mov
cmp
aaa
push
inc
cltd
push
cmp
jnp
repz
sub
pop
fdivl
xor
lahf
test
in
orl
sub
and
mov
push
inc
push
push
ja
shlb
iret
outsl
outsl
push
nop
xor
xchg
inc
push
sti
mov
jl
loope
sub
imul
inc
push
sbbb
cmc
loope
cli
sbb
mov
xchg
fwait
inc
fidivrs
adc
cmp
pusha
sbb
das
xor
mov
out
mov
mov
xchg
mov
xchg
xlat
or
std
adc
or
gs
add
adc
popf
push
ret
fcoml
pop
push
stos
out
or
fnsave
sub
mov
aas
fisubs
mov
xorl
cltd
or
icebp
xchg
inc
and
test
repz
icebp
or
leave
xchg
pop
lret
imul
cltd
dec
cmpsl
test
mov
test
fdivrl
aaa
addl
test
popa
loop
lahf
and
sub
mov
cmp
mov
xlat
aaa
adc
mov
js
add
dec
mov
insl
sbb
ds
bnd
lock
mov
xor
cmp
jns
and
stc
cmpl
xor
outsl
and
inc
shl
test
push
lahf
xchg
cmp
cmp
inc
jecxz
xor
int3
ret
icebp
out
dec
fwait
jnp
mov
push
pop
or
xor
cmp
pusha
push
shll
insl
xchg
xchg
jmp
pop
bound
dec
and
sbb
cmpsl
dec
and
cmp
push
inc
pusha
out
jecxz
imull
jae
mov
mov
js
gs
gs
xchg
jne
out
in
call
jne
rcrl
mov
sbb
scas
mov
arpl
mov
sahf
test
lahf
lea
xchg
and
sbb
mov
movsl
neg
hlt
inc
lds
xchg
cmc
mov
notl
cli
in
clc
or
test
int
lret
dec
pop
lods
andb
leave
sbb
int3
push
in
sbb
arpl
test
cli
idivl
cmc
cmp
ss
jecxz
and
xor
xor
sti
ret
gs
sbb
pop
fwait
dec
jecxz
fimull
push
push
mov
aad
scas
fidivrs
rolb
aaa
pop
push
push
mov
emms
scas
cld
sub
int3
and
or
jne
fildl
fwait
imul
out
testl
adc
and
iret
into
adc
mov
daa
jo
mov
cmpsl
movsb
or
mov
lods
retw
push
pop
or
jnp
roll
sbb
mov
testb
dec
mov
test
sub
test
andl
push
mov
cli
jno
mov
xor
clc
mov
pop
ret
popf
push
shll
cmp
xor
inc
cmpsb
bound
mov
mov
add
cmpsl
push
ret
lret
fucom
in
jmp
lret
xchg
xchg
push
je
xor
mov
sbb
add
sbb
std
test
in
sub
movsb
pop
mov
popa
push
and
push
lcall
lods
jnp
loop
pop
lock
mov
jb
dec
add
loope
mul
and
pop
sbb
stc
jns
inc
les
fabs
out
mov
cld
inc
pop
outsl
fs
sub
sbb
out
mov
lods
mov
push
test
push
push
jecxz
inc
daa
cmp
mov
pop
out
and
jne
movsl
insb
pop
fwait
jbe
cmp
insl
pop
push
repz
out
and
pop
pop
pusha
into
mov
and
xchg
push
in
cltd
std
stos
sbb
fists
and
es
or
lods
push
fsub
jmp
add
clc
jns
jb
mov
cmpsb
movsbl
sub
push
mov
clc
mov
ror
and
add
dec
mov
adc
movsl
outsl
xor
loop
std
call
repz
popf
jo
data16
add
data16
xchg
pop
out
out
fidivrs
sub
daa
pop
lds
dec
int
ljmp
out
xchg
sub
cmpsb
xor
aas
lret
jo
xchg
shll
jb
ss
ficoms
push
fstpl
pushf
push
mov
or
or
mov
xor
ss
stc
inc
arpl
out
lock
mov
in
ret
pushf
test
dec
in
mov
pop
and
xorb
mov
dec
push
or
xchg
dec
loopne
das
lcall
pop
fisttpll
inc
jmp
jbe
enter
daa
inc
nop
in
ja
mov
mov
sarl
pop
cmpxchg8b
int
pop
xchg
jl
push
into
pop
out
daa
jno
divb
sti
mov
in
dec
mov
xor
mov
dec
and
sub
push
dec
out
pop
mov
aas
cmp
cmc
lret
mov
data16
mov
cmpsl
mov
jle
ljmp
and
shll
fucomip
fsubl
fcoml
pop
cmp
ds
adc
cmp
sbb
lahf
mov
and
addr16
cmpsl
clc
adc
sahf
jo
and
cmc
insb
inc
pop
sbb
les
ljmp
push
xchg
jne
decb
push
sbbb
loope
rolb
test
in
pop
jne
or
mov
scas
mov
clc
dec
scas
mov
in
imul
xchg
push
stos
pop
je
gs
jb
nop
mov
test
in
cmp
jbe
pop
repnz
or
sub
dec
mov
std
stos
insl
scas
inc
fs
mov
sbb
cltd
inc
scas
mov
mov
pop
push
push
clc
in
push
mov
mov
cmp
call
repz
sub
out
mov
shlb
add
adc
ds
fsubr
mov
sbb
xchg
pop
mov
repnz
mov
dec
daa
pop
jns
ljmp
jne
je
mov
pop
sub
add
sarb
sub
insl
push
push
sbb
mov
xor
lret
jp
dec
add
sbb
xchg
stos
mov
jb
jmp
mov
inc
call
ds
inc
dec
xacquire
loopne
inc
mov
or
or
cmp
adc
dec
test
leave
cwtl
dec
inc
sub
add
stos
aaa
inc
inc
add
in
sti
sub
mov
pop
sub
and
add
clc
outsb
dec
pop
or
outsl
xchg
das
icebp
aam
inc
push
add
adc
cld
cmp
cmp
aam
fldcw
mov
ja
add
mov
push
movsl
es
sub
jnp,pn
dec
fcmovne
jbe
pop
dec
push
loope
and
incb
ret
inc
xchg
in
push
dec
push
pop
repnz
lods
ret
shlb
push
das
mov
sbb
jecxz
loop
jne
insl
pop
fcomp
aas
xor
cmpsl
push
dec
and
in
call
add
mov
imul
add
dec
cmpsl
dec
test
mov
pop
sbb
shll
lock
xchg
mov
push
aad
movsl
add
xor
xchg
pop
xor
cmp
js
movsl
ja
fistpl
in
mov
jmp
pop
lods
sbb
aam
aas
xchg
and
mov
stos
loopne
jl
xchg
push
add
inc
or
xor
lret
dec
dec
fidivrl
aam
addr16
jbe
rclb
incl
xor
add
jle
das
pushf
sub
xchg
mov
or
pop
cmp
pusha
sub
jae
loopne
and
ret
fildll
jmp
xor
xor
pop
int
mov
outsb
outsb
lret
inc
sbb
ds
jnp
int3
lahf
push
les
mov
out
mov
mov
loop
mov
fdivrs
push
add
clc
les
mov
imul
mov
daa
cltd
stc
mov
or
sahf
sbb
push
ret
shr
negb
inc
pop
leave
lock
gs
push
test
bound
lds
mov
fisubl
addr16
packssdw
das
ja
mov
mov
and
les
jne
call
mov
test
jne
xor
dec
pop
lock
fsubl
push
cmpsb
xchg
test
cltd
jo
fs
scas
out
mov
arpl
sbb
es
sbb
sub
test
mov
lcall
mov
call
daa
push
add
push
imul
and
push
inc
sahf
insb
push
mov
in
shl
scas
out
ja
movsb
jmp
xchg
arpl
aam
out
mov
pop
sbb
jno
inc
jp
mov
addb
out
dec
mov
insl
test
jno
jns
add
push
xor
mov
push
or
mov
movl
jbe
idivb
jne
jmp
mov
ds
push
movsl
test
add
ficoms
dec
sbb
pop
ja
inc
dec
into
push
out
mov
out
call
adc
push
and
ret
adc
aas
and
fcmove
jmp
jb
add
cmp
int
sbb
push
xchg
add
stc
cmp
dec
je
dec
ffree
cmp
jbe
mov
aad
xchg
mov
push
sbb
mov
pop
pop
sub
lret
jmp
inc
cld
adc
push
jnp
sbbb
sub
jae
insb
fcmovnbe
cmpsb
popl
fildll
jns
jns
mov
imul
mov
mov
lds
daa
pop
daa
xchg
test
adcb
cvtpi2ps
sar
and
or
cmpsl
aaa
and
mov
push
sbb
xor
pop
sbb
dec
pop
jb
or
push
adc
sbb
jge
repnz
jle
xchg
les
sub
dec
scas
sub
arpl
pop
aad
hlt
mov
out
adc
inc
in
or
xor
in
scas
addl
xlat
cld
adc
les
xor
test
pushf
push
ja
sbb
mov
sbb
mov
xchg
push
mov
subl
and
sar
mov
xchg
es
inc
and
sub
lret
push
pop
std
shlb
insb
insb
in
ret
fldenv
imul
add
cmpsb
inc
xchg
ljmp
mov
mov
out
das
push
add
int
pop
push
cmp
cmpsl
shrb
and
fidivrl
cmp
ret
repnz
pop
maskmovq
testl
mov
add
add
stos
jns
sbb
mov
push
data16
push
in
push
xor
mov
jnp
inc
or
sub
ljmp
jp
pop
mov
add
pop
lret
push
push
testl
stos
stos
push
in
add
mov
adc
cltd
mov
mov
cmpl
push
ja
insl
pushf
jmp
mov
push
fwait
sbb
dec
out
cmp
insl
shlb
jb
xchg
pop
jne
push
sbb
les
mov
repz
out
cld
ds
loopne
mov
dec
push
movsl
sarb
mov
jnp
test
mov
in
pop
lea
testb
sub
mov
stc
stos
xor
imul
stc
and
cmc
hlt
cmp
mov
xor
pop
pop
xor
mov
out
pop
pop
push
pop
scas
ret
dec
in
lds
popf
add
sbb
mov
cltd
imul
push
jns
xchg
sub
int
lock
jmp
and
les
orl
pop
enter
push
lock
xor
pop
or
dec
idivl
mov
loope
jg
notl
fs
cmpb
sbb
pop
mov
scas
sahf
jne
out
nop
aad
rorb
jbe
xlat
shrl
movb
sbb
loopne
xor
repz
jnp
test
lock
les
jl
aas
sub
enter
pop
or
push
cmp
clc
add
test
mov
mov
jno
cmp
pop
gs
inc
inc
push
scas
or
push
scas
pop
stc
mov
imul
dec
imulb
pop
and
push
or
andl
imul
repz
and
jb
xor
lds
jl
jecxz
aas
cmp
pushf
pop
mov
insb
dec
mov
repz
inc
jmp
out
aad
mov
std
rorl
mov
clc
bound
adc
xchg
mov
out
scas
push
shll
cld
mov
ljmp
iret
pop
mov
jecxz
je
sahf
ljmp
cli
je
jp
xchg
jle
adc
xorb
insl
pop
push
and
and
rcrb
dec
fildl
cwtl
mov
sub
xchg
ljmp
ficompl
icebp
push
cmpsb
cmp
roll
push
sub
mov
push
rcrl
dec
lods
pop
sbb
aam
inc
dec
sbb
jns
insl
mov
mov
iret
push
fadd
sub
fidivs
shr
mov
mov
push
popa
pop
xchg
add
repz
je
nop
pop
es
das
push
sbb
inc
mov
into
lret
mov
aaa
and
lahf
sub
and
xchg
dec
popf
stos
jb
jbe
cmp
adc
out
pop
mov
push
mov
inc
popf
sub
or
inc
adc
mov
leave
add
mov
sbb
jns
mov
xchg
sbb
dec
adc
xor
aaa
int3
gs
jnp
out
hlt
sbb
insb
cmpsb
mov
pop
push
cmpsb
in
mov
sbb
sti
add
mov
mov
inc
jmp
add
stc
stos
push
pop
xor
pop
sub
sbb
fistpl
repz
movzbl
test
insb
imul
lods
push
lahf
filds
mov
xor
jle
stos
subl
test
cmp
add
pop
adcb
rcl
loop
pop
push
mov
push
push
mov
lock
test
mov
dec
out
bound
jecxz
shlb
mov
and
dec
in
sbb
aam
std
jle
jb
jnp
sbb
jb
inc
mov
fistpl
sub
cmp
inc
lahf
xor
jmp
dec
data16
notl
inc
clc
mov
sub
push
mov
sub
pop
pop
mov
add
sti
xor
cmp
in
jno
push
or
lds
hlt
sub
movsl
pop
sahf
xor
or
daa
xlat
popf
sbb
loopne
sahf
out
scas
cmc
lret
push
adc
aad
test
imul
pop
outsb
dec
loopne
nop
dec
int3
cmp
insl
ljmp
insl
stc
adc
adc
pop
dec
xchg
je
aaa
push
cli
lret
mov
push
mov
mov
jecxz
sub
hlt
in
push
mov
clc
enter
mov
mov
inc
sub
adc
add
bound
aad
popf
mov
sub
insl
pop
addr16
fcompl
cmpsl
sbb
ja
cs
adc
mov
mov
add
sub
in
ffree
or
shlb
inc
or
jne
sub
aad
cmp
shr
sub
dec
mov
jp
jl
popf
mov
clc
fs
lds
push
and
mov
jne
scas
push
jo
cmp
adc
cld
mov
push
sbb
std
cmp
push
sbb
loope
push
or
jl
xor
sub
or
ret
push
pusha
mov
dec
pop
in
call
sti
cmpsb
inc
jecxz
mov
mov
xchg
lods
add
inc
ficoms
xchg
inc
jp
dec
dec
ljmp
and
ss
add
pop
shrl
mov
imul
popa
imul
rclb
aaa
mov
imul
cmp
push
xor
or
in
add
pop
jno
les
or
adc
jmp
jg
cmp
pop
ja
lfs
mov
jbe
mov
push
fists
mov
loopne
mov
pusha
pop
subb
mov
sbb
xor
std
test
cmp
mov
sub
pushf
dec
insl
insb
cwtl
xlat
ds
mov
or
mov
repz
sbb
daa
adc
xchg
sbb
stc
add
fwait
iret
mov
sbb
icebp
das
pushf
mov
cmp
fiaddl
push
sbb
mov
and
add
int
jl
sbb
add
dec
daa
dec
popa
rol
mov
inc
pcmpgtb
cmc
lock
dec
ljmp
dec
and
icebp
addl
lcall
mov
mov
sub
xchg
ss
out
jmp
inc
jb
inc
gs
mov
lret
scas
inc
cmp
or
add
inc
data16
fnsave
out
add
dec
pop
dec
notl
jno
sbb
es
xor
std
jno
dec
mov
or
pop
icebp
loop
mov
and
cmp
or
mov
sbb
popf
call
adc
mov
mov
mov
stc
cmp
inc
jl
sbb
lds
gs
xchg
push
mov
pop
or
imul
push
inc
stos
jae
lret
ret
ret
pushf
cmp
rclb
in
es
sahf
mov
lcall
dec
pop
ds
dec
add
xchg
add
mov
int
stos
add
sbb
aaa
pop
loopne
testl
bound
repz
shl
jo
mov
pop
aaa
adc
or
cli
aam
jl
sbb
pop
pop
add
repnz
aaa
jge
mov
ror
lret
jo
jo
mov
testl
in
fdivrp
push
shll
cmp
inc
xlat
xlat
add
and
push
mov
inc
and
outsb
inc
jle
sti
andb
push
jae
cld
xor
xor
xor
movsb
pop
jno
add
orb
push
and
popa
push
sti
xchg
stos
pop
lea
sub
ret
negb
bound
sti
cmp
sub
lret
push
std
aam
std
fmuls
int3
daa
outsb
popa
xor
adc
xchg
test
xchg
mov
arpl
xorb
sbb
and
ror
mov
movsb
shll
out
outsl
adc
lds
sbb
xchg
mov
xchg
inc
lods
cmp
mov
pop
ja
jo
ret
outsl
add
inc
add
pop
dec
fidivrl
sbb
rep
push
inc
xor
jo
push
jecxz
fdivp
aas
dec
push
mov
sub
outsl
into
adcl
mov
lods
push
xor
jl
in
lret
jae
mov
call
shr
dec
fsubrs
std
xchg
aaa
hlt
mov
std
sbb
jp
hlt
lods
sub
mov
mov
mov
push
out
xchg
pop
xchg
mov
inc
fcmovne
mov
push
add
popa
mov
xchg
add
mov
in
enter
sub
decl
pop
addl
xchg
test
mov
outsl
dec
lods
inc
cs
push
or
int
mov
add
and
push
aaa
gs
cmp
and
mov
pop
mov
fmull
in
cli
lret
lock
fucom
or
and
push
or
stos
jnp
lock
sub
and
icebp
aaa
push
fistpl
lea
rcrb
test
jg
xchg
repnz
iret
push
sbb
imul
inc
jle
inc
popa
dec
jo
nop
dec
ljmp
loop
jb
incl
out
sarl
inc
cs
jnp
test
out
xchg
or
and
leave
dec
adc
icebp
pop
out
mov
int3
loop
cmp
push
data16
out
add
call
mov
daa
sub
jbe
xchg
dec
add
lods
inc
imul
fwait
pop
adc
clc
xchg
jmp
subb
test
pop
cmpb
mov
cwtl
sarl
mov
aaa
mov
fwait
loopne
pusha
jns
mov
movsb
lcall
push
test
loope
xchg
push
imul
insb
imul
pop
arpl
pop
push
scas
and
xchg
inc
cltd
addr16
in
test
pop
int3
xor
push
cli
mov
out
cwtl
das
xchg
jns
mov
pushl
into
mov
cmpsl
mov
test
cmc
sub
or
int3
sbb
or
cwtl
std
call
cmp
scas
xchg
dec
lods
add
and
pop
pop
cmp
sbb
mov
inc
cmp
mov
aas
cmp
cmp
adc
pop
cld
xchg
rcl
jno
dec
adc
xorb
lock
or
andb
inc
inc
push
cwtl
jg
xchg
out
mov
stos
dec
xor
cmp
mov
push
cmpsl
and
push
das
sbb
outsl
aad
sub
int3
es
push
jmp
push
cmp
out
repz
filds
inc
mov
sbb
inc
adc
out
cld
mov
call
inc
mov
test
xchg
inc
dec
and
adc
mov
dec
pop
imul
dec
xchg
cs
xchg
ljmp
popa
cmc
push
adc
inc
mov
loopne
lret
mov
inc
into
push
enter
popf
or
aaa
pop
fdivl
rcll
dec
dec
sub
push
sub
push
push
jp
cltd
filds
pop
andb
and
fsubr
outsl
jbe
ja
dec
cmpsb
fs
inc
sbb
cltd
iret
lock
ffreep
in
sbb
idivb
repz
shr
dec
pop
or
cmpsb
mov
push
adc
clc
fdivr
xlat
pop
and
mov
enter
inc
sub
push
cs
into
cmpb
jl
in
mov
leave
mov
stos
dec
or
sub
xor
and
xchg
cmc
pmaxsw
int
cltd
test
push
insb
ds
adc
mov
pop
push
adc
push
or
sbb
fwait
aas
jns
mov
in
sti
jo
sub
insl
cmp
out
mov
push
cmpsl
outsb
mov
pop
add
cmp
mov
inc
dec
aaa
notb
stos
cmpsb
and
js
jne
mov
test
inc
popf
rcll
cmp
lret
movsl
mov
sub
bound
mov
inc
push
and
add
aad
imul
sbb
fldt
jg
xor
cmp
push
add
outsb
or
pop
adc
dec
in
jp
xorb
jne
shrl
ret
bound
es
xchg
out
mov
mov
repnz
add
cmp
insl
ljmp
mov
movsb
xchg
lods
xchg
arpl
cmpsb
loop
mov
std
inc
inc
inc
rcr
lds
bound
jl
jle
sub
arpl
aad
lods
cmpsb
sahf
in
or
fs
pop
inc
mov
adc
daa
pushw
xlat
stos
jne
lret
nop
stos
inc
adc
imul
ret
dec
jp
and
movsb
imul
cmpsl
add
enter
mov
pop
mov
cmp
mov
cld
iret
xor
xchg
xor
xor
loopne
cmp
inc
add
pop
clc
jl
cmp
shll
fistpll
push
aam
mov
test
repz
ja
cltd
in
gs
push
jns
test
std
sub
add
cmp
jmp
adc
mov
cli
cwtl
pusha
fdivrs
push
add
cmp
movsb
xor
aam
pop
mov
adc
jmp
movsl
repnz
orb
jle
shrb
xchg
bound
shrl
and
push
push
mov
xchg
cmp
repz
hlt
ret
stos
xchg
cli
addr16
xor
scas
jns
cltd
jmp
scas
imul
insl
test
push
push
arpl
cwtl
push
jo
icebp
insl
cld
mov
sub
or
mov
ja
les
inc
lods
dec
mov
add
xchg
sub
mov
test
add
inc
ss
jns
mov
sti
mov
push
xchg
adc
or
push
leave
sbb
sbb
and
fstpl
fwait
stos
jmp
adc
pusha
fs
add
add
or
inc
mov
je
mov
and
insl
mov
and
jl
adc
xchg
xor
arpl
push
je
imul
aam
mov
insb
pop
sti
in
sbb
idiv
or
stc
lods
icebp
leave
add
fidivrs
sbb
aam
int3
mov
xchg
xchg
sub
iret
ffree
test
loop
lea
cmpsl
jno
cmp
scas
clc
mov
adc
addb
ja
push
in
or
rol
insb
repnz
inc
lahf
mov
jle
push
mov
pop
fsubr
adc
pop
pop
out
out
push
jnp
jecxz
aaa
daa
sbb
lea
scas
call
xor
sub
insl
bound
sub
xor
mov
lcall
jl
sbb
stos
imul
push
in
fbstp
adc
insb
movsb
pop
movsb
loop
test
dec
mov
xchg
jg
rorb
fstpt
out
push
pop
push
sahf
cmp
cld
cmp
in
or
enter
rcl
inc
or
push
loope
adc
nop
and
int
xchg
push
dec
and
mov
xchg
scas
jae
cmpl
je
xlat
xchg
xchg
lods
daa
jmp
mov
inc
push
bnd
lods
push
popf
std
and
loopne
jae
pop
jne
aas
ljmp
cmpsl
sar
mov
and
popf
imul
ret
shlb
dec
loope
push
or
sbb
xchg
cmp
lea
fnstsw
jno
xchg
jg
insb
xchg
add
or
mov
lret
inc
cmp
imul
xorb
sbb
bound
inc
popf
xchg
clc
pop
into
mov
aam
mov
mov
shrb
xchg
xchg
scas
push
int
and
mov
scas
bound
daa
mov
push
mov
sub
mov
addr16
test
pop
lret
push
cmp
inc
cs
fistps
and
mov
jp
pop
jge
mov
stos
and
test
xchg
lahf
sbbb
mov
jmp
or
sbbb
movsb
xlat
dec
mov
nop
pusha
cmc
fimuls
jo
clc
mov
xor
rclb
pushf
jns
aam
mov
ja
jle
aam
dec
popf
pop
add
lock
fldt
jo
and
sub
inc
cmp
pop
jle
mov
mov
xchg
daa
lret
imul
dec
mov
out
xor
mov
cmp
in
adc
icebp
das
xor
add
test
out
movsl
fwait
jo
outsb
das
repnz
adc
lods
adc
mov
xorl
setb
adc
dec
jg
mov
daa
enter
and
xor
pop
push
xor
ja
mov
imul
mov
daa
divb
and
iret
mov
iret
inc
adc
icebp
out
add
adc
pop
dec
test
out
and
sbb
lahf
adc
cmp
out
in
mov
or
pop
jae
shr
orb
xor
arpl
or
sbb
sbb
push
sbb
xor
movsb
xchg
dec
out
int3
jmp
scas
stc
add
push
push
pop
xor
lret
push
sub
aad
mov
cmp
and
mov
fwait
mov
fsubrl
mov
fs
out
js
sahf
mov
lods
notb
fcoml
inc
sbb
lret
int
je
insl
adc
out
outsl
sub
sub
lahf
or
arpl
fisttpll
jb
mov
mov
out
inc
sti
push
int
push
dec
mov
xor
xor
or
rorl
test
dec
ljmp
lods
lret
cmc
push
push
fdivrs
or
into
fisttpl
shlb
test
repnz
inc
pop
scas
xor
insl
push
cmp
sub
pop
cld
xchg
mov
mov
xchg
clc
sbb
add
fldenv
sar
adcb
mov
sub
sub
scas
inc
cmp
mov
add
test
fidivl
mov
push
dec
dec
out
in
out
adc
rcl
repz
std
jp
xchg
push
loopne
sbb
mov
leave
cmp
aam
lret
or
mov
cs
jnp
xchg
add
daa
mov
iret
pusha
jne
inc
sbb
inc
sbb
mov
cmpsl
pop
xchg
pop
stc
cmpsl
dec
sahf
and
dec
pushf
ficoml
loopne
into
std
repz
leave
repz
sti
mov
lock
mov
stos
mov
imul
idivb
fbld
in
dec
enter
clc
enter
fsts
call
cmp
jnp
adc
sbb
cmp
and
movsb
pop
lods
mov
stc
out
inc
addr16
jns
push
movsb
iret
jl
cwtl
adcl
add
mov
and
cmc
loop
cmpsl
frstor
clc
fbld
imul
inc
xchg
push
fsubrs
cmc
adc
imul
shll
fcmovb
sbb
xor
mov
jg
hlt
mov
movsb
ficomps
mov
pop
jle
in
lock
mov
outsb
add
push
cmpsb
push
sarb
jg
adc
std
lret
arpl
pop
cmc
fwait
outsl
outsl
andl
das
xchg
inc
cltd
push
ds
mov
dec
cwtl
pop
pop
out
clc
and
outsb
xor
pop
cmc
sbb
lock
and
sahf
mov
ret
or
push
shrl
push
outsb
lea
adcl
rorb
cmp
das
xor
push
sub
adc
adc
imul
push
sbb
sbb
movsl
icebp
shr
inc
mov
clc
pop
cmp
cmpb
bound
aam
std
mov
pop
fistpl
test
dec
je
scas
xchg
imulb
cmp
and
addr16
push
or
nop
add
jb
enter
aas
les
ret
sahf
push
and
dec
hlt
push
sub
pop
pop
mov
push
or
mov
adc
pop
mov
mov
xor
mov
push
xor
push
dec
sahf
js
stos
jl
ss
mov
pop
aad
mov
and
aaa
bnd
inc
push
push
jmp
cwtl
pop
mov
xor
push
mov
cmc
fcmovnbe
xchg
test
xchg
orb
push
js
andb
sbb
mov
jb
rolb
iret
jbe
mov
jecxz
adc
inc
pop
jp
sub
lock
std
icebp
in
imul
add
jg
inc
mov
push
adc
sti
cmpsl
jmp
scas
shr
cltd
rorl
aam
sub
lea
insl
mul
and
das
aad
inc
movl
in
pop
fstps
xchg
add
out
pop
jae
cli
bound
xorl
and
fildl
inc
sbb
fdivs
data16
pop
loope
int3
mov
int
shl
sahf
fldcw
dec
mov
sti
sub
mov
jmp
movsl
iret
sub
and
clc
sub
sbb
xchg
pop
daa
ret
les
and
pop
mov
jg
xchg
dec
pop
inc
outsl
rorb
or
push
ljmp
inc
cmc
or
and
pop
call
repnz
aad
ds
mov
pushf
and
popa
push
fimuls
or
adcb
jg
mov
xlat
hlt
loope
xor
lds
mov
xchg
add
bound
sub
repnz
or
xlat
into
xor
jg
mul
scas
sbb
pop
pop
pop
in
adc
pop
sub
call
icebp
fwait
ja
enter
scas
pushf
mov
xchg
pop
aad
or
xor
pop
mov
jecxz
pmullw
ror
cmp
push
or
insb
push
cld
dec
hlt
imul
push
cmpsb
cmpsb
je
lods
xchg
idivb
sub
push
lds
icebp
xlat
xchg
lds
sub
imul
push
cmc
es
cwtl
ljmp
scas
fnstenv
sub
xchg
jp
xchg
pop
mov
sahf
ljmp
adc
loop
outsb
roll
pop
xchg
adc
xchg
push
mov
xchg
fs
sub
or
cmp
xor
scas
jp
sti
cmp
cmp
cmpsl
xor
shrl
es
lds
stc
test
stos
cmp
divl
imul
xor
xor
into
mov
adc
sti
jmp
dec
cmp
mov
mov
or
cmp
ljmp
ror
add
dec
cli
ret
cli
hlt
xchg
repz
repnz
pop
int3
inc
mov
mov
add
loopne
cwtl
pop
jae
cli
stos
mov
test
aad
push
mov
imul
jle
xchg
cmp
test
lods
mov
lock
mov
pop
shl
dec
insl
mov
hlt
in
cmc
stos
mov
insl
enter
xor
pusha
aam
and
or
push
push
mov
or
pop
inc
push
in
dec
xlat
jnp
cltd
mov
arpl
mov
fsubrl
mov
inc
out
imull
inc
xor
enter
rcl
mov
rol
mov
sbb
lods
jle
push
adc
cli
stc
push
lock
mov
sub
ret
std
jne
cmpsl
pop
xchg
roll
pusha
mov
mov
pop
mov
and
cli
xor
add
je,pt
xchg
push
les
fs
jno
je
pop
imul
xchg
enter
mov
mov
cmp
pop
dec
mov
daa
jo
inc
sahf
inc
repnz
sub
xchg
mov
sti
movsb
in
cmp
jg,pn
jb
enter
fistps
add
fcoml
xor
cmc
mov
hlt
sub
cmp
sbb
sub
int3
cmp
push
ret
mov
rcrl
adc
es
arpl
loopne
sub
cmpsb
pop
ror
inc
or
rolb
push
pushf
mov
and
pop
shrb
js
cli
dec
mov
std
out
iret
stos
push
mov
adc
fucomp
cmp
add
sub
xor
int
cmpsb
jo
sbb
jmp
popa
xlat
xor
pop
or
stc
test
fildll
repz
lods
xchg
sbb
movsb
and
mov
mov
mov
inc
xor
inc
dec
mov
call
and
xor
mov
fbld
in
dec
add
addr16
outsb
push
bound
dec
or
xchg
ret
test
jb
lea
or
dec
rcrl
mov
inc
clc
popf
fnstsw
sub
xor
adc
hlt
mov
outsl
adc
push
andl
inc
enter
push
sbb
adc
add
sbbb
lods
lock
test
je
loope
pop
xchg
jo
shll
int3
mov
jae
xchg
shlb
ficompl
and
dec
insb
mov
out
std
test
addr16
loope
add
sarl
sub
repz
loopne
and
arpl
das
sahf
aas
pop
adc
aaa
xchg
mov
adc
cmp
xchg
aas
jge
add
mov
outsl
hlt
mov
sbb
rclb
add
sub
pushf
jnp
lret
jl
dec
xchg
and
idiv
lods
push
mov
cmp
mov
das
mov
xor
pop
xchg
cmp
hlt
js
pop
sub
movsl
enter
fucomip
cmp
mov
push
add
repnz
fldenv
add
test
lret
stc
and
int3
cmpsl
xor
and
movsl
dec
sbb
fldt
pushf
lcall
ret
aas
add
mov
cwtl
pop
mov
sahf
les
dec
mov
lods
imul
pop
add
xchg
add
aad
mov
test
or
sub
jecxz,pt
aad
in
movsl
int
cmp
push
fbld
std
nop
push
aaa
ds
jmp
dec
add
cmpsb
out
gs
sub
add
testl
dec
dec
xor
sbbl
add
lea
cmp
mov
cld
pop
adc
lret
lods
push
mov
sub
dec
js
or
add
out
jne
insl
cltd
mov
mov
mov
xor
out
jns
scas
jns
out
sbb
imul
js
add
inc
negl
cld
xchg
sbb
rcr
or
xor
out
add
test
dec
jg
adc
arpl
xchg
les
jecxz
ds
jmp
lcall
lds
xchg
popf
cltd
sbb
sbb
int3
sbb
mov
sbb
sahf
icebp
insl
push
popa
jns
adc
adcl
xor
xor
jmp
enter
or
push
ret
test
jmp
jno
int
jb
outsb
nop
insl
test
pop
inc
fbstp
fnstcw
aaa
int
fidivs
clc
bound
and
sbb
inc
xchg
push
andb
add
cmp
fnstsw
jo
pop
nop
cmp
imul
mov
sub
pop
popf
stos
mov
adc
testl
loope
adc
lcall
enter
sarl
jns
xor
sbb
movsl
pop
fwait
lods
nop
xchg
jge
hlt
push
mov
rol
aas
movsl
mov
in
in
push
movsl
lret
lahf
dec
out
or
cmp
inc
mov
in
xor
mov
xchg
jge
pop
stos
jno
fsubrs
add
dec
inc
jb
push
xchg
mov
push
int3
fbld
dec
mov
adc
jge
xchg
sahf
stos
pop
jno
mov
xor
xchg
stc
pop
or
cmp
sbb
jno
clc
inc
repnz
mov
push
adc
mov
push
push
loope
jle
xchg
jns
sub
js
popf
divl
xchg
movsl
adc
jns
lret
pushf
sub
imul
lret
mov
cmp
push
sub
jnp
pushf
out
mov
cmp
or
adc
push
push
or
mov
pop
lock
ror
pop
add
mov
mov
dec
pop
sub
mov
xchg
xchg
and
pushf
call
rol
mov
das
inc
addb
push
xchg
xchg
rclb
das
arpl
test
sub
add
nop
dec
test
jle
in
into
mov
repnz
inc
scas
sbb
sbb
xchg
vprotw
dec
scas
add
ja
aas
jp
or
mov
mov
mov
call
cmp
sub
jns
jno
push
and
adc
cwtl
popa
popf
push
push
or
dec
xchg
ret
jmp
inc
xchg
push
inc
xchg
les
fwait
xor
jge
mov
or
dec
mov
add
pop
dec
popf
jle
lods
loopne
sub
and
inc
sbb
aaa
out
jbe
aaa
mov
gs
scas
sbb
and
mov
les
pushl
jg
push
push
mov
dec
vmovsd
adc
push
add
xor
mov
push
push
pushf
xchg
xor
pusha
cmp
cmp
ror
cltd
xlat
mov
nop
sub
xchg
push
lods
sbb
pop
cmp
mov
push
icebp
mov
mov
cld
mov
xchg
in
jbe
not
and
push
ret
movsb
jle
sbb
in
mov
push
mov
lahf
rcrb
lcall
dec
sbb
mov
or
lcall
sbb
lock
xchg
push
test
int
mov
insl
outsl
push
rcll
sarl
decb
ja
or
push
add
pop
xor
sub
jbe
stos
push
rcll
pop
or
lods
pop
fwait
jmp
faddl
inc
jl
stos
jg
sbb
fs
sub
shlb
inc
mov
cmpsl
xchg
sub
ss
inc
and
fsubp
push
inc
adc
bound
fisubs
mov
xchg
push
cltd
dec
rcrl
xor
xor
mov
in
lock
paddd
jle
stc
repz
out
sub
ljmp
adc
dec
xor
cld
push
sbb
into
insl
enter
xchg
imul
fimull
test
in
lcall
add
or
dec
jg
and
ret
bsr
xchg
aas
mov
jle
push
xchg
ljmp
push
in
add
mov
xchg
ja
cltd
jnp
adc
and
add
sub
xor
out
data16
xlat
sub
inc
lret
sbb
out
add
adc
ret
scas
int
cmp
xchg
lds
mov
lret
mov
aaa
cltd
jae
pop
lods
out
in
repnz
mov
push
push
push
mov
inc
mov
pop
cld
std
into
dec
or
paddb
das
cmp
mov
scas
sub
data16
bound
jns
andb
insb
cmp
lock
or
leave
test
and
mov
inc
add
ja
lods
inc
jb
push
mov
jae
sbb
mov
out
in
jo
jp
push
fstl
push
cltd
dec
hlt
lcall
fcoml
lods
mov
negb
push
jmp
scas
sbb
push
sub
adc
orl
jno
fisubrs
rcr
or
dec
and
push
mov
mov
mov
adc
dec
sbb
pop
testl
lea
aam
pusha
mov
sbb
add
rcrb
shl
in
add
les
loopne
adc
pop
dec
cwtl
push
xor
add
push
aam
loopne
jl
inc
pop
mov
adc
loope
out
movsb
fisttps
push
out
icebp
and
push
ror
flds
sti
ja
stos
enter
sub
out
dec
mov
daa
and
add
orl
stos
xchg
int
std
jbe
xor
mov
sub
jae
cmpb
mov
repz
stos
pushf
andb
dec
push
out
dec
mov
inc
aad
mov
fstpl
push
push
cmpsb
in
fstl
cmp
orl
xchg
js
sub
fdiv
sti
ret
push
jmp
into
add
push
fmull
cmp
movl
pushf
imul
xchg
add
out
data16
xchg
ljmp
sub
or
push
adc
xchg
inc
insl
es
push
outsb
dec
sbb
pop
mov
lret
cmp
lret
gs
adc
mov
mov
mov
stos
popf
inc
mov
jbe
aad
imull
cmp
mov
cmp
pop
aaa
add
stos
in
pop
mov
inc
int3
aaa
xchg
pushf
sub
xchg
in
aaa
dec
xchg
xchg
adc
icebp
jmp
jge
mov
dec
adc
pop
jno
push
stc
mov
xchg
insb
mov
pop
mov
push
add
out
pop
stos
outsb
mov
and
cmp
mov
idivl
sub
cltd
pop
adc
adc
push
out
or
and
push
lret
or
aas
rol
or
stc
add
add
jle
xchg
jns
add
rclb
mov
push
mov
divb
int3
inc
popa
inc
jbe
iret
js
int
outsl
jbe
dec
movsl
pop
mov
push
cs
movsb
adc
cmp
stc
lock
pop
sbb
add
dec
xchg
inc
jae
xchg
and
mov
push
pop
das
std
mov
jne
dec
popf
adc
mov
int3
mov
jmp
and
mov
mov
fdivs
mov
mov
and
jne
mov
push
adc
fwait
and
pop
hlt
fmuls
and
xor
cld
dec
subl
jae
test
sbb
push
nop
leave
stos
int3
andl
dec
add
add
mov
lods
mov
lret
test
mov
scas
sbb
gs
cmpsl
es
std
sub
add
pop
mov
sub
pop
clc
pushf
sbbl
push
test
das
pop
imul
mov
loop
mov
jmp
int3
xchg
and
cmp
clc
and
icebp
arpl
sbb
cmp
jl
lret
mov
pop
add
jmp
fcomps
mov
icebp
repz
inc
and
je
inc
pop
scas
push
notl
mov
xchg
xchg
inc
popa
dec
and
movsl
mov
mov
adc
cmp
mov
gs
stos
jbe
adc
inc
pop
fistpll
and
xor
mov
jno
mov
cmpb
ret
dec
mov
loopne
or
pop
xor
jmp
and
inc
or
cli
leave
adc
sub
jge
cmc
ret
xchg
mov
jg
les
sbb
and
aad
xchg
test
add
pop
cmp
out
cmp
and
sbb
xchg
cmc
fwait
mov
inc
inc
xchg
es
jecxz
pop
lods
sub
ljmp
test
push
adc
cmp
imul
fsubl
enter
mov
xchg
rclb
push
jg
cmp
mov
or
add
mov
push
test
add
std
fwait
rcrb
sub
add
xchg
rolb
movsl
addl
stos
arpl
pop
jl
movsb
fdivl
xchg
and
sahf
xchg
jmp
push
pop
lock
inc
daa
psllw
loop
mov
sub
push
cmp
cld
sub
xchg
cli
and
and
jnp
outsb
and
inc
cmp
leave
hlt
cmp
mulb
xor
outsl
fs
ja
or
mov
mov
add
cli
mov
shlb
push
and
scas
das
imul
pop
jmp
out
add
pop
inc
sub
adc
loope
shrl
inc
pop
jne
pop
cwtl
sbb
out
ja
add
sbb
mov
testb
xor
aas
imull
mov
inc
outsl
idivb
pop
jmp
xlat
sbb
popf
xlat
enter
xchg
dec
ja
or
xchg
sbb
pop
mov
out
pop
xchg
adc
add
jae
testb
pusha
pop
xor
xorb
push
outsl
in
xchg
out
daa
pop
movsl
push
ret
xchg
loopne
repnz
inc
jb
int3
fwait
ljmp
movsl
ss
dec
ja
and
shrl
cmp
sbbb
pop
sti
mov
repz
xchg
and
inc
imul
leave
sub
cmp
push
movsl
xchg
insb
sbb
call
lods
call
ret
imul
jbe
iret
inc
aaa
lea
lahf
mov
mov
mov
lret
or
sbb
adc
sub
pop
test
inc
rcrl
xchg
xchg
ds
js
jmp
sahf
scas
xchg
loop
mov
add
xchg
xchg
pop
cmpsl
jmp
sub
lods
or
roll
jecxz
inc
sbb
rorb
sbb
aam
shrb
xor
inc
jg
jmp
push
jle
push
mov
fnstenv
xchg
pop
test
pop
enter
mov
call
mov
fucom
cmc
fcmovbe
jle
test
cmpsl
imul
cmpsb
rorb
dec
pop
sub
dec
outsb
jmp
sbb
fisubrs
imul
fdivrl
jp
mov
sarl
inc
nop
add
push
mov
test
sub
or
das
mov
add
test
popf
out
push
cmp
divl
stc
xor
fimull
jo
movsl
ljmp
jb
and
cmpsb
inc
xchg
ljmp
or
bound
sub
test
mov
lea
jge
inc
xor
push
lock
mov
add
dec
pop
hlt
push
loope
cwtl
mov
div
xchg
add
adc
jmp
pop
jae
jge
pop
cltd
add
mov
pushf
mov
jne
or
cmp
sub
xor
mov
xchg
mov
pushf
sbb
or
imul
nop
test
pop
scas
orb
xlat
mov
dec
lods
jecxz
xor
sbb
scas
cli
out
outsl
xor
and
arpl
and
fldcw
mov
daa
push
xchg
dec
in
fcomps
sub
jecxz
xlat
mov
push
jl
jne
test
pop
imul
rclb
inc
popf
mov
pop
xchg
mov
jecxz
stc
push
pop
sbb
adc
lret
mov
rcr
sbb
insl
fwait
clc
fiadds
aam
sub
lds
jns,pn
mov
mov
int
lahf
or
shlb
roll
cmp
jle
or
test
mov
lods
inc
movl
popl
jns
fdivl
imul
movsb
pop
sub
sub
add
incb
or
pop
sbbl
xchg
popa
inc
in
pusha
outsl
rclb
nop
loop
in
pushf
sbb
push
daa
in
fwait
adc
jnp
jmp
add
add
add
shl
clc
xchg
dec
pop
dec
lods
push
inc
adc
xlat
pop
adc
push
inc
cmp
shl
insl
adc
in
xchg
add
pop
adc
pop
adc
pop
mov
jg
test
mov
push
pop
sbb
imul
cmp
jno
movl
xlat
out
stos
inc
mov
add
add
dec
insb
adc
sub
call
inc
push
aam
jle
hlt
xchg
inc
je
in
lea
stos
mov
xor
arpl
movsb
insl
jne
mov
outsb
push
mov
int
int
xor
push
or
cmp
aam
fnstenv
lds
cmp
cmp
or
xor
pusha
lea
mov
cwtl
mov
mov
stc
or
jmp
xor
adc
cmpsl
push
cs
into
pop
sarl
test
gs
push
cld
icebp
mov
mov
outsb
mov
push
sub
pop
movsb
test
testb
fs
std
pop
push
jae
mov
out
popl
jne
lret
fcoml
sub
inc
fldt
ja
fcmove
cwtl
or
inc
dec
jge
adc
xchg
dec
and
jne
and
daa
jbe
lahf
add
mov
pop
test
bound
jl
mov
imul
call
scas
repz
pop
mov
popf
adc
cs
inc
adc
imul
scas
xor
mov
daa
push
inc
mov
shl
scas
inc
sbb
out
inc
cmc
ds
push
adc
mov
stos
rcll
pop
sub
das
insl
cmp
pop
cmp
cmp
and
sbb
adc
sbb
xchg
sahf
leave
aad
xchg
je
xor
in
pop
push
jle
dec
jno
add
repz
push
add
repz
sub
pop
inc
mov
arpl
scas
lods
je
pop
pop
dec
xchg
push
add
sub
data16
push
jns
mov
ret
mov
in
jne,pt
int
mov
push
push
outsb
sahf
inc
or
mov
mov
dec
or
add
cmp
out
outsb
sub
dec
ds
arpl
invd
add
enter
sbb
in
gs
lds
testb
push
lods
ds
mov
inc
fsubrs
inc
ja
in
push
rclb
push
ror
pop
inc
or
jmp
fsubrs
out
and
pop
sahf
jmp
or
jg
or
xorl
adc
pusha
aad
add
sub
inc
xchg
push
xchg
popa
in
cmp
inc
dec
jp
mov
or
push
add
or
or
roll
notb
and
adc
nop
adc
jne
or
leave
mov
out
add
cmp
popa
fdivs
cltd
jno
fstpl
mov
mov
dec
mov
xchg
test
xchg
orb
mov
inc
std
xchg
and
lret
imul
xlat
out
test
and
arpl
mov
test
test
hlt
lret
mov
out
jl
mov
lahf
sahf
pop
inc
or
lock
sahf
hlt
cs
push
push
pop
fmuls
cmp
int
and
push
movsl
clc
or
or
in
in
or
sbb
sbb
addr16
fcoms
fstps
lcall
gs
ficoml
out
jmp
dec
fistl
xchg
mov
adc
outsl
lods
cmp
lret
ja
movsb
push
sub
std
pop
lcall
sti
mov
in
and
jno
mov
lret
jmp
push
pop
pop
pop
mov
jmp
dec
or
xor
and
rolb
sbb
out
dec
repz
mov
sub
jmp
ljmp
dec
dec
leave
test
mov
lret
test
mov
mov
inc
adc
mov
pop
insb
daa
mov
xor
push
inc
mov
add
fstps
bnd
inc
sub
loope
adc
dec
test
or
inc
das
push
sarb
in
and
test
xchg
pusha
repz
xchg
fsubs
jge
leave
add
push
mov
inc
sub
sbb
xchg
pop
mov
xchg
cmp
dec
pop
pop
pop
mov
data16
xor
mov
clc
xchg
mov
clc
xchg
lds
roll
or
cltd
cs
adcl
or
int3
mov
fistps
sub
ret
jmp
push
jae
cmp
cmp
stc
shll
xchg
cmp
in
ss
out
jnp
lea
cmp
loope
ljmp
mov
mov
call
scas
ljmp
cwtl
addb
sbb
xor
push
testb
jmp
addr16
mov
pop
sbbb
mov
arpl
fldenv
sbb
xor
sti
lea
mov
mov
jl
mov
xchg
xchg
jg
fadds
loopne
sbb
add
push
mov
mov
call
movsl
rolb
stos
xor
jne
rcl
movsb
stos
in
adcl
shll
xor
in
mov
lea
sbb
sub
test
mov
stos
pop
sub
es
cmc
je
scas
out
iret
testb
add
sub
pop
scas
int3
fisubrs
inc
push
xchg
rcrb
cmp
mov
xchg
aam
and
dec
call
dec
cmp
fsts
test
adc
dec
sarl
mov
aaa
mov
int
lock
mov
and
sbb
ss
mov
stos
or
add
in
xor
out
repnz
xchg
imul
sub
mov
aas
mov
or
lock
outsb
lret
loope
push
cmpl
pop
mov
or
cmc
shlb
pop
sti
clc
mov
fwait
popf
adc
pop
dec
cmc
mov
mov
daa
pushf
xor
and
popa
in
out
test
jle
notb
loop
xor
jecxz
fcoms
push
xchg
sub
mov
mov
test
push
fxam
xchg
and
lcall
scas
ret
movsl
mov
fnsave
pop
jmp
cltd
lea
mov
adc
add
sbb
jo
inc
test
lcall
loop
jl
dec
dec
repnz
iret
jmp
mov
mov
adc
ds
cwtl
lock
dec
dec
jo
jl
mov
mov
push
inc
push
mov
fadd
testl
int
xor
cwtl
cmpsl
mov
aad
jecxz
insb
pop
test
out
or
daa
mov
es
movsb
sub
dec
aam
push
or
gs
xchg
dec
xchg
adc
adcb
bound
cmp
outsl
cltd
xchg
mov
sbb
mov
cmpsb
mov
xchg
sbb
jb
pop
in
es
add
dec
inc
push
in
lea
xor
add
dec
push
push
repz
xor
inc
mov
imul
add
xor
enter
sbb
sub
cld
xchg
sbb
mov
or
add
pop
cli
cmp
pop
inc
sbb
or
es
cmc
pop
fnstcw
push
rolb
insl
mov
mov
movsl
xor
mov
insb
or
inc
out
in
rorl
les
mov
push
aaa
pusha
mov
stos
les
and
popa
sub
cs
mov
clc
lret
loop
adc
sub
nop
pusha
mov
or
fistpl
inc
or
icebp
xor
outsb
add
dec
leave
sbb
push
mov
out
scas
jno
out
les
std
shlb
iret
hlt
sbb
sbb
arpl
stc
out
mov
add
popa
dec
push
cwtl
jl
xor
ret
cmp
pop
mov
stc
addr16
cmp
stc
jo
mov
test
lret
fidivs
jg
popf
or
xor
jnp
lock
inc
or
jb
push
sahf
sbb
cltd
and
xor
xchg
aas
push
les
shr
and
sub
lds
ret
sub
push
jns
jnp
ds
pop
les
mov
add
scas
mov
insl
mov
cmp
push
push
dec
pop
pop
add
lds
xchg
fiadds
jbe
je
cmp
mov
clc
sub
mov
in
inc
je
sub
int3
mov
inc
xor
inc
push
pop
add
stc
mov
sbb
jmp
std
clc
adc
jmp
mov
push
mov
xchg
not
cmp
loopne
int
lcall
mov
cli
popf
daa
arpl
adc
rorl
test
jmp
sbb
xlat
pop
jge
ljmp
xchg
loop
subl
insl
sub
adc
or
jge
int
in
lock
in
cmpsb
adc
fiaddl
and
lret
loopne
xchg
sbb
push
mov
mov
mov
repz
addl
mov
push
dec
fcoms
popf
int
clc
dec
fadd
js
lock
push
xchg
and
into
cmp
pop
rolb
adc
dec
or
push
xlat
test
jecxz
and
xchg
and
sbb
dec
arpl
sub
add
ret
mov
jecxz
ja
shlb
push
out
scas
xor
mov
notl
pop
mov
shr
cmpsb
test
das
rcll
ja
jnp
push
lahf
out
sub
pusha
test
in
lods
add
pop
adc
shr
xor
jl
inc
add
jp
bound
push
add
pushf
mov
test
and
loope
test
pushw
pop
push
das
lods
addr16
ss
adc
cmpsb
jo
shll
lock
pop
mov
fmull
pop
cmp
jp
xchg
pop
lock
int3
repz
cli
xchg
test
fists
jns
adc
and
mov
jo
jo
jo
call
pop
inc
dec
mov
pop
adc
pop
fsubs
or
out
in
mov
movsl
jp
adc
addr16
scas
mov
les
in
or
inc
test
sbb
scas
fisubrs
sahf
inc
popf
cmp
cld
mov
push
mov
jge
fcoms
fldl
add
inc
lock
sbb
scas
adc
ljmp
fistpll
sbb
push
inc
mov
nop
fdivl
adc
and
jecxz
movsb
mov
mov
cmp
pop
xchg
pop
mov
jmp
lods
inc
scas
sub
add
mov
inc
xchg
popf
mov
inc
push
into
fs
stos
cmpb
fistps
cmpsl
sbbl
sbb
jns
jo
push
in
ficoml
jns
xor
insb
add
xor
adc
insl
jne
cmp
stc
dec
mov
ss
jae
cmp
movsl
je
mov
mov
shl
add
or
add
mov
pushf
outsl
dec
ljmp
xchg
repz
push
and
cmp
in
daa
jmp
dec
mov
lds
loopne
es
fxch
test
adc
cld
pop
mov
rorb
aas
fcomps
cmp
shl
push
fstpt
lea
sub
lret
mov
outsb
popf
sti
lret
cmpsb
xor
adc
xor
shl
cmp
leave
fdivrl
insb
jg
cmp
jno
nopl
jmp
mov
loopne
mov
xorb
testl
out
mov
adc
pop
cli
out
push
popl
rorb
enter
addb
cli
enter
outsl
sub
push
fldl
adc
lods
popf
ficoms
mov
in
addw
test
lods
inc
mul
ret
in
addb
clc
test
jmp
adc
mov
mov
jo
mov
in
lods
in
push
outsb
int3
sbb
sbb
mov
cmp
mov
xor
lahf
xor
out
into
mov
inc
adc
andb
xchg
pop
cld
sbb
lods
cmpsl
sbb
cwtl
sbbb
mov
xchg
in
aad
leave
xchg
xchg
pushaw
lods
lahf
inc
sub
cmp
or
lock
fs
cmpsl
push
sub
cld
cmpsb
pop
into
xorl
lods
icebp
or
push
jge
lret
mov
lret
leave
in
pushf
int
inc
shr
fldenv
dec
push
jp
insb
inc
mov
movsl
pop
loope
mov
jl
je
movsb
cmpsl
pop
inc
sbb
int3
lret
gs
or
mov
xchg
mov
ss
push
sub
sbb
pop
in
test
xor
mov
fistpll
lock
decl
icebp
sbbb
rcr
pop
iret
repnz
icebp
pop
adc
loopne
xchg
push
lock
inc
pop
dec
xorl
push
in
and
stc
and
test
pop
sbb
inc
aas
cli
js
lret
push
mov
clc
adc
rcll
clc
test
mov
cltd
lret
inc
cmc
loopne
shr
loope
mov
lds
cltd
push
je
roll
fwait
cwtl
loop
cwtl
jmp
es
lock
sbb
sub
loop
dec
jge
shl
lahf
jecxz
outsb
pusha
xchg
mov
popl
jmp
outsl
adc
xchg
das
dec
mov
lock
adc
push
xchg
mov
outsb
out
imul
add
cmp
popa
movsl
add
cmp
mov
mov
mov
lret
dec
aam
insb
add
sbbl
pop
push
add
fistpll
xor
cmp
out
jg
xchg
inc
sub
xor
bound
pusha
xor
pop
ja
dec
ja
adc
clc
fldcw
dec
rcrb
popa
push
or
js
sbb
sub
mov
dec
ja
or
mov
stos
adc
rcrb
fcomi
xor
xor
test
ds
js
std
int3
outsb
jb
je
fidivrs
mov
in
jmp
jge
cmpsb
push
ds
orb
adc
shlb
gs
mov
popf
mov
xchg
stos
jbe
mov
mov
cmpsl
mov
rcll
stos
into
pop
sti
into
int3
sub
jnp
push
dec
and
out
repz
push
sub
bound
aas
pop
imul
jg
push
inc
out
fidivl
inc
out
inc
sbb
fcoml
sti
arpl
pop
inc
out
call
mov
mov
stos
and
jge
insl
xchg
sbb
sub
lds
or
push
lcall
cli
mov
dec
push
cmp
xchg
data16
sub
lods
adc
mov
aad
jb
data16
mov
incb
dec
pop
cmpsb
fstl
pop
dec
dec
adc
loopne
stos
insl
lock
lahf
sub
mov
xchg
mov
lea
dec
loope
xchg
xor
or
jbe
lods
cmpsl
stos
push
icebp
mov
add
pop
inc
sub
cmp
icebp
pop
lret
cmp
pop
std
or
in
push
shlb
loopne
and
or
mov
std
add
sub
clc
and
mov
scas
ret
push
push
adc
jge
fildl
pushl
mov
insb
jg
incb
fwait
pop
ds
into
imul
pop
gs
push
add
ss
sbb
sbb
loope
adc
das
out
out
sahf
insl
mov
jbe
nop
adc
cltd
jmp
jl
int3
push
dec
cmp
pop
lret
jge
push
std
adc
xchg
mov
push
test
xor
mov
lock
outsb
pop
jmp
add
mov
lahf
gs
aas
push
xor
push
push
jne
out
imul
pop
jl
jnp
push
adc
jo
verw
add
clc
fcoms
fwait
push
cmp
cmp
sti
and
test
ljmp
and
fnstsw
mov
xchg
sbb
scas
subb
fsubrs
aas
dec
inc
lds
push
sub
push
fmuls
mov
pusha
rclb
mov
xchg
inc
out
mov
shll
mov
xor
mov
jge
test
xor
jno
pop
ss
into
mov
test
dec
pop
ja
stc
mov
imul
add
pop
or
sub
mov
adc
or
jne
in
mulb
imul
pop
outsl
ss
push
rol
xchg
push
mov
jbe
shrb
fsub
int3
push
pop
call
fstps
fstpl
idivl
mov
test
and
outsb
xor
std
orl
in
mov
xchg
dec
out
xor
ja
sti
je
notl
pop
mov
lds
push
sti
rol
mov
sub
shl
xor
arpl
pop
shll
push
or
xchg
jp
data16
inc
leave
sub
daa
pop
cmpsl
addr16
cmp
adc
stos
lds
into
mov
adc
cli
or
dec
std
fstpt
sub
xor
jg
shrl
fidivs
test
aas
mov
mov
jne
add
cmpsb
mov
cmpsl
jle
mov
aam
mov
mov
add
add
insb
pop
shlb
jno
movsb
std
mov
pusha
mov
cld
cli
jne
imul
test
mov
and
xchg
adc
loope
clc
cmp
aam
fisubl
sbb
mov
out
les
sti
rol
incb
imul
arpl
sub
sarl
jecxz
out
push
decl
adc
mov
lock
dec
xor
hlt
pop
iret
nop
inc
mov
subb
sti
out
push
out
lcall
loopne
daa
ret
call
add
add
insb
dec
push
fsubs
add
xor
pop
out
jns
or
sbb
inc
add
jle
les
sub
jns
dec
movsl
jbe
jne
mov
fwait
jne
inc
xchg
fsubrs
jb
das
pop
inc
pop
mov
daa
daa
imul
cmpsw
dec
pop
inc
in
pop
push
push
pop
fisubl
jmp
rolb
and
mov
les
and
add
add
add
add
and
xor
mov
pop
inc
out
pusha
mov
in
sub
movsl
or
inc
cmc
idivl
fsubl
imul
jns
adc
nop
and
cmp
push
fnstcw
or
fiadds
rcll
fcoms
add
dec
std
je
push
loopne
vmwrite
xchg
je
cld
inc
inc
lret
xchg
lahf
inc
xchg
ss
into
jnp
mov
loop
sbb
or
jmp
ret
es
dec
xor
es
insb
movsb
daa
mov
jg
sub
pusha
mov
add
add
or
add
sarb
mov
sbb
aad
and
mov
push
adc
mov
jae
adc
sahf
sbb
lock
stos
imul
pop
fstps
movb
dec
mov
leave
pop
movswl
mov
pop
xor
es
and
pop
jae
movsb
or
fcomip
cmp
xor
es
inc
aam
adc
dec
push
aam
cmpsb
and
and
je
sti
dec
lea
xor
leave
mov
mov
sarb
ds
loop
das
mov
daa
aas
pop
push
fcompl
pop
adc
std
xor
int
push
insl
xor
add
fdivrs
aam
xchg
push
lds
cmp
xor
imul
push
jo
sub
test
pushf
out
popa
repz
pop
mov
add
ja
les
test
mov
and
lds
ret
xor
fistpl
pop
js
and
jo
sbb
jge
cmp
add
dec
shl
fsts
out
or
fidivrl
mov
fsubrl
pop
mov
sub
testl
cmc
pop
cltd
out
mov
shll
cmove
dec
and
mov
and
adc
mov
nopl
sbb
shll
movsb
pop
adc
xchg
aas
pop
or
xchg
xchg
orl
mov
rcrl
jmp
aas
adc
or
adc
popf
jg
out
jo
out
imul
mov
icebp
mov
dec
or
repz
lds
xor
xor
loop
jp
pop
in
adc
ret
repz
in
ret
lods
push
out
cli
dec
out
add
inc
push
outsb
and
add
mov
testb
test
mov
enter
scas
test
mov
jp
jle
add
movsb
mov
sahf
movsb
or
out
xchg
xor
jns
dec
fimuls
inc
leave
shrb
std
mov
insl
adc
push
add
mov
lods
repz
sub
mov
pop
icebp
jle
shlb
das
repnz
push
or
stos
dec
dec
dec
test
rcr
ret
push
mov
test
shrl
pop
jecxz
test
xchg
icebp
loopne
and
xor
insb
and
lea
js
into
lret
cli
sbb
sub
not
jl
inc
xchg
jmp
pop
xchg
mov
cmpsl
sbb
or
push
call
idivb
inc
adc
push
jbe
repz
cmpsl
push
lock
push
mov
push
mov
sub
xor
adc
xor
inc
aaa
jle
ret
test
mov
mov
in
xor
and
shrb
mov
mov
das
cmp
dec
mov
jge
or
test
stos
test
out
loope
pop
push
cmp
mov
insl
mov
sbb
inc
or
and
ds
add
cwtl
out
popa
popa
push
push
mov
xor
out
xchg
inc
imul
dec
jae
inc
add
adc
stc
inc
enter
xchg
xchg
sub
fs
xchg
cmp
mov
ror
sbb
xor
icebp
jns
dec
cmp
jb
dec
fdivp
dec
inc
cmp
out
mov
and
and
loopne
and
jbe
adc
out
adc
fcoms
fs
pop
push
adc
cmpb
addb
sbb
test
inc
rclb
mov
jg
xchg
pop
inc
dec
mov
or
jno
push
add
pop
cmp
push
sub
enter
leave
xchg
cmp
ds
add
test
mov
pop
push
leave
inc
push
jb
rcll
ja
loop
xchg
add
cld
nop
jecxz
pop
add
arpl
out
pusha
or
add
inc
fucompp
xor
mov
rolb
xchg
add
jecxz
push
jo
movsl
xchg
ret
ficompl
fs
pop
pusha
xchg
in
pop
inc
mov
or
sub
stos
nop
and
sahf
clc
sub
movsl
stos
fisubrs
xchg
loop
sti
pop
inc
cmp
test
ljmp
push
sbb
mov
dec
fdivs
cltd
dec
ja
mov
push
push
dec
dec
sub
scas
lcall
jge
sbb
mov
fmuls
repz
dec
in
mov
adc
stos
jnp
mov
fwait
mov
je
cmpsl
sub
out
sbb
sar
push
int3
inc
cmp
cmp
fwait
jnp
imul
or
inc
outsl
cwtl
movsl
movsb
lock
push
jo
add
lea
test
dec
xor
iret
rcl
jmp
rorb
inc
jo
sub
adc
je
cmp
cmpsl
jmp
xchg
adc
lret
rorl
xor
xchg
jmp
xor
stos
sbb
xchg
jge
jae
pushf
outsb
hlt
insl
and
and
jg
jno
or
adc
test
jns
sbb
insl
js
jae
mov
fstpl
adc
adc
mov
out
or
stc
fistpll
add
add
mov
mov
push
sbb
sti
and
jno
decl
sub
adc
pop
pushf
idiv
fadds
in
int
cmp
roll
pushf
fdivl
dec
mov
push
jns
or
inc
imul
dec
dec
push
mov
add
xor
nop
popa
adc
xchg
mov
sbb
pop
into
loope
cmc
lret
add
dec
ss
outsl
mov
jmp
add
cld
xchg
test
xor
repz
mov
sti
test
fldenv
mov
xor
jno
and
jns
adcl
inc
dec
into
testl
mov
popf
cwtl
sti
cmp
mov
dec
or
daa
mull
cld
inc
sub
in
rcl
mov
mov
ret
leave
lcall
dec
sbb
inc
je
loop
inc
stos
mov
sti
push
pusha
mov
xchg
loope
stos
addr16
push
mov
test
mov
in
sar
gs
mov
mov
xchg
adc
rcrb
cmp
outsl
mov
dec
repnz
decb
pop
push
lahf
mov
xor
add
mov
jo,pt
stos
add
sahf
fcmovne
and
in
insl
jg
inc
sub
rcl
bound
fstpl
popf
adc
xor
cmc
icebp
adc
ss
ljmp
xchg
shl
sbb
xorb
mov
inc
add
hlt
loop
sub
stos
push
lock
push
mov
filds
mov
mov
cli
les
xchg
into
negl
pop
mov
out
lock
xor
mov
scas
sbb
jbe
ljmp
mov
sub
popf
dec
mov
int
mov
nop
mov
int3
outsb
repz
sbb
stc
sub
mov
shrl
or
mov
mov
popf
adcb
mov
and
es
mov
sbb
daa
add
inc
jbe
pop
pop
fmull
insl
out
outsb
jb
loope
xchg
fdivrs
jb
and
jle
jmp
xor
loop
nop
fs
xchg
mov
mov
adc
popf
push
rorl
or
rclb
call
fmuls
je
popf
test
jecxz
stos
ret
mov
fmuls
ficoms
loopne
cmp
xchg
and
int3
ljmp
pop
gs
sub
jo
pop
ret
add
mov
in
mov
fstpl
add
int
stos
outsb
out
and
hlt
sahf
into
sbb
mov
imul
jecxz
xchg
lods
gs
add
mov
push
insb
lds
fsubrl
mov
out
stos
cwtl
loopne
out
dec
ss
mov
xor
mov
sahf
rclb
lods
fwait
loop
bound
mov
add
aam
shlb
mov
in
xchg
fidivrs
mov
ljmp
clc
lahf
mov
repnz
call
pop
ljmp
je
mov
test
mov
xchg
cli
faddl
xchg
lret
arpl
mov
sti
mov
adc
and
aaa
loop
cld
cld
jo
sub
push
mov
sub
clc
out
sub
inc
cmc
or
popa
and
ds
mov
xor
mov
and
ds
xchg
imul
lock
out
and
call
jbe
xor
push
enter
fstpt
rclb
cmp
popl
movsl
cmp
and
jno
sbb
je
sub
sbb
addr16
or
out
mov
bswap
stc
and
add
mov
and
testb
xorb
push
scas
in
orb
notb
btr
icebp
mov
dec
stc
cmp
stos
mov
push
jmp
pop
jne
addr16
xchg
mov
jbe
and
add
aad
sbb
cli
notl
and
push
fcomps
loope
aaa
in
iret
fbstp
or
ljmp
pop
jne
pushf
pop
call
mov
and
add
sub
push
lcall
lret
push
pop
outsb
lock
adc
or
sbb
mov
jno
pusha
push
mov
nop
jle
mov
out
cli
faddl
pusha
cmp
or
scas
push
or
dec
adc
cwtl
int
jl
rorb
lods
imul
xlat
cs
xor
pop
icebp
push
ret
insl
fsubrs
cmpsb
cwtl
fwait
stc
lcall
mov
orb
push
ja
nop
push
call
rorl
adc
outsb
xchg
push
negb
pop
out
xor
std
pop
insl
ret
xor
repnz
das
pop
or
out
mov
pop
xor
push
clc
cmp
int
je
xlat
xrelease
std
lods
shll
call
int
sbb
pop
imul
or
cwtl
aaa
stos
push
jo
push
dec
ds
ds
jo
and
data16
mov
and
cmpsb
or
push
push
scas
div
mov
ljmp
push
jb
and
inc
fisttpll
or
lahf
mov
ja
fimull
lret
jns
xchg
lret
in
or
pushf
mov
or
repz
jnp
push
pusha
aas
sbb
inc
and
push
inc
and
daa
or
pop
cmpsl
adc
jo
mov
pop
jno
add
jp
cmpsb
jecxz
popa
in
dec
push
icebp
xor
subb
sbb
xor
inc
add
fldt
and
inc
jg
popw
pushf
lods
jb
sub
mov
jp
jl
dec
mov
push
ds
adc
fcomps
std
dec
adc
sbb
pusha
mov
lret
dec
push
fimuls
jp
add
outsb
je
data16
les
mov
push
stc
mov
stos
cmp
ds
aas
mov
push
mov
sbb
sub
repnz
icebp
sbb
cmp
xor
ds
pop
adc
inc
test
mov
sub
ljmp
sahf
rclb
fimull
mov
insb
aam
or
push
push
push
inc
pop
xchg
pop
scas
mov
add
xchg
scas
arpl
adc
dec
nop
jb
pushl
cmp
sar
xchg
adc
pop
stos
cmp
fldenv
fwait
mov
or
or
xor
adc
cmp
dec
test
imul
push
popf
cmp
outsl
pusha
outsb
dec
in
arpl
xchg
adc
add
daa
mov
lcall
add
lcall
cld
in
mov
dec
aad
shlb
scas
jle
xchg
xor
sbb
dec
je
dec
aaa
xor
setb
in
sbb
ja
fwait
pop
lahf
cli
or
stc
test
nop
jle
mov
sbb
sub
out
addr16
bound
cmpsl
dec
movsb
cltd
add
loope
xchg
insb
cld
cmp
dec
inc
lods
cs
nop
arpl
clc
fwait
or
fidivrs
mov
mov
push
adc
inc
dec
cld
mov
sub
push
cmp
mov
shlb
jl
xor
pop
sub
imull
ret
adc
sub
xor
nop
mov
cwtl
sub
mov
sbb
xchg
mov
out
jno
out
pop
aam
jae
cmpsb
and
sub
cmc
xchg
pop
imul
lock
sti
ljmp
cmp
ret
movsl
adc
adc
aas
push
bnd
sub
inc
sbb
daa
dec
int
scas
rcr
xor
nop
movsb
out
mov
push
jle
ret
fs
cli
leave
xor
or
stc
sbb
cs
mov
aas
into
dec
xchg
testl
rolb
es
dec
adc
test
pushl
scas
sbb
dec
mov
icebp
enter
arpl
xor
je
mulb
xchg
lret
adc
cmp
mov
push
sarb
sbb
sub
cltd
add
xchg
xor
fcmovnu
es
stos
int
loope
retw
gs
test
jecxz
pop
lock
loop
xor
cmc
clc
shrl
fcompl
xchg
xor
jl
inc
aaa
test
pop
dec
out
andb
mov
push
inc
jmp
iret
rcrb
scas
xchg
mov
push
push
scas
and
jb
push
ja
xor
movd
stc
jl
daa
fwait
adc
and
outsl
fdivrl
movsb
mov
inc
push
aaa
pop
movsb
pop
enter
push
xchg
pop
mov
pop
pop
push
pop
adc
cmpsl
cmpsl
mov
mov
enter
mov
xor
popf
mov
daa
push
add
jle
cmc
cmpsl
sub
imul
out
inc
cli
inc
lea
cmc
sbb
mov
loop
xor
hlt
cmp
push
enter
enter
sbb
pop
popa
aam
mov
shll
sbb
pop
mov
or
in
adc
mov
out
add
pop
sub
mov
xchg
out
mov
inc
pop
sub
movsb
daa
repnz
gs
hlt
push
das
std
jmp
jmp
lahf
inc
out
loopne
sbb
jnp,pn
pushf
or
addl
scas
jg
push
lods
mov
test
dec
sub
es
or
add
mov
rcl
sbb
es
xchg
cld
nop
jne
xor
jecxz
mov
js
xor
sbb
fnstsw
test
pop
mov
pop
loope
sbb
sbb
mov
fcoml
incl
xchg
lret
mov
cmp
jo
sub
sub
push
lods
jno
push
jbe
xchg
rol
out
dec
fists
jns
and
decb
test
inc
cmp
mov
sbb
negl
add
leave
mov
test
cli
xchg
insl
mov
push
jp
ret
pop
int
dec
outsb
cmp
mov
xchg
mov
mov
jnp
dec
cmp
lock
rorb
mov
pop
pop
adc
cmp
insl
jg
mov
gs
push
cmpsb
js
shlb
cmpsb
out
pop
lahf
sbb
or
data16
movsb
mov
pop
lret
clc
popf
mov
fidivs
dec
rclb
xor
pop
xor
aaa
aaa
insb
mov
je
loopne
in
mov
sub
jl
cwtl
mov
lret
sarl
and
lods
popl
push
pop
or
aaa
jne
xchg
push
stos
pop
cs
cmp
cmp
sub
loope
imul
out
dec
pop
mov
sar
fdiv
pop
and
insl
and
repnz
add
insl
xor
adc
push
pop
mov
xchg
cld
cmp
cli
xchg
push
aas
mov
mov
or
fcoms
pop
aaa
scas
xchg
sbb
xchg
sti
jo
cmp
jge
iret
repz
sub
insb
mov
mov
sub
mov
sub
jle
push
ds
and
jmp
pop
adc
insb
jecxz
stc
js
sarb
add
subb
outsb
add
inc
jb
and
testl
mov
cmp
rorl
or
fucomp
mov
xor
mov
lcall
fidivrs
mov
jecxz
inc
daa
pop
cmpb
dec
adc
add
mov
rorl
gs
inc
xor
bound
add
sub
add
insl
ret
cmpsl
mov
push
lret
lahf
shll
inc
cmpsb
mov
xor
sahf
jbe
iret
outsl
xlat
out
int
mov
enter
andb
popf
jns
ror
jg
ja
add
icebp
int3
cmp
les
call
mov
cmp
lahf
dec
sub
pop
inc
lds
adc
and
adc
jae
cwtl
loope
mov
dec
dec
bnd
adc
push
mov
adc
cmp
aas
faddl
imul
mov
pop
les
out
shll
fstl
cvttps2pi
inc
mov
cmp
aas
daa
sub
pop
into
cmc
dec
shr
mov
dec
jne
xor
or
xchg
mov
imul
mov
call
mov
into
xor
and
mov
push
push
jge
inc
mov
es
jecxz
mov
push
inc
xchg
cs
or
add
pop
dec
loop
loopne
sbb
sbb
fnstenv
test
lds
jl
mov
cmpsl
movsb
cmp
jecxz
repnz
pop
add
push
xor
rcrb
or
add
mov
xchg
stos
push
les
xor
and
rolb
out
pusha
jg
mov
lods
dec
mov
sub
mov
push
xchg
scas
dec
add
pop
mov
xchg
fildll
roll
ja
bnd
aad
arpl
imull
popa
stc
pop
lds
fdivs
mov
pop
insb
sub
aad
sbb
xchg
or
pusha
jnp
adc
ret
pop
lahf
sahf
sbb
pop
pop
sub
pop
inc
inc
push
sahf
push
das
lock
nop
aad
inc
lods
inc
fwait
ror
mov
test
dec
sub
sub
and
arpl
mov
sbb
cmc
inc
or
ret
lock
addr16
push
daa
adc
jp
push
out
repz
ficoms
stos
mov
lsl
out
mov
xlat
dec
repnz
loop
pop
shr
aas
push
std
push
mov
mov
int3
sahf
inc
mov
aad
jmp
push
pop
dec
adc
push
pop
cmp
movsl
sbb
mov
xchg
xchg
adc
mov
xor
fbld
pop
imul
cmpsl
dec
shl
in
cmp
mov
sbb
push
fstpt
xor
loope
adc
int3
adc
loopne
mov
mov
mov
aad
lret
xchg
scas
cwtl
sub
leave
dec
mov
xchg
into
lods
fnsave
cld
lahf
add
adc
lret
add
pop
cmp
test
mov
loop
mov
cld
mov
stos
loope
jle
into
cmp
cmp
repz
lock
or
jmp
movsl
decl
les
and
subl
jmp
or
test
ljmp
pop
xchg
jo
fdivrs
out
push
xchg
inc
adc
fcoml
cmc
ror
mov
jnp
psubd
dec
adcl
jecxz
aaa
enter
addr16
je
jge
fsubrp
cs
rcll
xor
xor
lock
and
jge
mov
xchg
fs
mov
cmp
jb
imul
adc
xor
mov
out
lock
cwtl
testb
mov
cmp
pop
xor
inc
and
cmp
cmp
mov
dec
outsb
xor
xor
scas
cmp
mov
ja
loop
lahf
xor
and
es
sbb
lsl
fstl
or
dec
cmc
cmp
cmp
pop
repz
out
test
add
jl
test
mov
sbb
scas
sbb
cltd
jno
mull
sar
in
mov
adc
add
xor
outsb
or
inc
shrl
cmp
and
sbb
stc
xlat
arpl
bound
xchg
sti
ss
nop
pop
ss
test
ret
lds
xor
aas
addr16
push
stos
xor
mov
aad
int
repnz
mov
xchg
sub
xchg
cld
pop
xorb
lea
in
je
fistpl
sub
cmp
pop
shll
cltd
sbb
inc
sbb
xchg
imul
loope
daa
insb
mov
mov
push
cwtl
mov
mov
ds
sbb
stos
dec
pusha
lret
xchg
repz
mov
in
dec
scas
clc
fmuls
inc
outsl
inc
leave
cltd
lods
sbb
cli
out
cmpsb
sbb
cs
cmc
xchg
dec
mov
sti
jg
xor
adc
xlat
jo
push
jmp
pop
xchg
inc
insl
out
push
mov
xchg
jmp
sub
sbb
cmp
cmc
mov
pusha
jne
sub
sbb
sub
fs
aad
sub
test
mov
sub
cmc
test
jp
xchg
pusha
daa
lret
and
rcll
cmp
icebp
mov
mov
xor
push
repz
addb
inc
and
push
pop
popf
pop
mov
divb
in
mov
push
dec
inc
inc
fs
xchg
pop
sub
xor
mov
xchg
inc
inc
fucom
and
daa
adc
mov
cmp
popf
and
jmp
out
decl
mov
cli
xchg
jbe
sbb
fwait
push
lcall
xchg
call
xor
cmp
mov
aaa
jbe
popf
loope
fadds
sub
xor
or
or
fistps
inc
mov
add
mov
mov
insl
cld
outsl
jg
jecxz
inc
pop
mov
enter
cmp
push
adc
fldt
cmp
mov
pop
mov
stos
mov
neg
adc
cs
push
push
pop
insb
cltd
mov
test
cli
in
test
xorl
pop
leave
xchg
jb
bound
inc
push
pusha
or
sub
mov
fsubrp
and
aad
idivl
sub
orl
and
int
or
cmc
sub
dec
outsl
fldenv
and
leave
push
push
xchg
repz
test
and
inc
je
ljmp
xchg
sbb
jmp
pop
ds
dec
stos
arpl
jl
add
iret
into
andb
sub
add
dec
cmc
mov
stos
sub
ret
testb
push
mov
cmp
sub
xor
mov
pop
mul
mov
dec
sub
cmp
test
jae
dec
inc
jbe
lods
jns
xor
aaa
pop
scas
inc
cmp
cmp
jne
cltd
movsl
cmpsl
jmp
hlt
jnp
imul
fisubrl
adc
ljmp
dec
push
fwait
pop
jp
lock
jl
pop
sbb
pop
fwait
daa
insb
jns
sub
icebp
mov
jbe
and
mov
inc
inc
fs
pop
pop
data16
sti
or
mov
rorb
sub
push
mov
mov
lds
push
cmpsb
popf
jmp
dec
jns
test
dec
mov
pop
fnstsw
adc
dec
jmp
mov
jno
cs
push
adc
mov
xchg
xchg
dec
inc
adc
js
insb
loopne
adc
dec
iret
cmpsb
inc
mov
mov
into
jae
aam
sbb
icebp
out
std
mov
or
push
jne
adc
sbb
mov
cs
scas
mov
pushf
jbe
insl
cmpsb
fwait
ljmp
sub
mov
adc
hlt
push
imul
das
lods
jge
lock
sbb
sub
cmpsb
push
dec
out
repz
xor
sahf
push
jb
shlb
adc
cs
int3
push
fwait
cmp
and
push
imul
pop
inc
call
xlat
popf
jae
ret
xchg
cs
and
je
out
mov
bound
jp
loope
push
test
lcall
imul
in
mov
out
rcl
int3
pop
lods
cmpsl
push
jnp
mov
pshufw
jl
mov
pop
pop
in
pop
xchg
sbb
push
bound
pop
add
scas
loope
pop
clc
sub
imul
mov
xlat
int3
xor
ljmp
testb
cmpsl
pop
aaa
ds
js
icebp
test
aad
mov
sub
adc
in
jg
test
and
xorl
lahf
in
or
xor
rcrl
pushf
dec
inc
jae
ss
jecxz
out
xchg
rcrl
or
dec
mov
das
xchg
addb
pop
out
cli
lock
mov
cli
mul
add
ss
stos
or
jae
insl
lret
or
xor
je
fcoml
iret
fldcw
nop
lods
aaa
out
xor
movsb
mov
ficoml
lret
scas
sub
outsb
sbb
imul
pushf
loop
jne
mov
imul
sub
mov
daa
pusha
enter
lret
dec
push
test
cmp
mov
push
sbb
xor
cmp
sti
addr16
sub
mov
mov
jnp
xor
cwtl
out
popf
xchg
pop
jo,pt
jecxz
mov
jg
adc
push
sbb
lret
std
js
je
iret
je
jmp
xchg
mov
inc
ja
jecxz
mov
mov
jo
jbe
out
pushf
sbb
imul
movsb
jl
dec
out
and
mov
adc
jecxz
sbb
pusha
or
xor
add
mov
jg
cltd
xlat
cltd
push
mov
hlt
out
xchg
fsubl
mov
call
mov
out
andb
cld
dec
test
sbb
add
adc
add
ja
enter
sbb
cmp
scas
repnz
out
hlt
adc
fcmovbe
xlat
mov
loopne
orb
xor
xchg
std
sbb
mov
dec
nop
mov
outsl
pop
jecxz
add
add
dec
mov
mov
mov
fs
sub
add
into
xchg
push
orb
xor
movsl
jbe
addr16
mov
ss
hlt
or
mov
dec
in
add
xchg
arpl
cmp
shrb
jnp
xor
pop
xor
push
dec
add
cmp
int3
xchg
pop
dec
incl
jae
pop
fisubl
jns
add
jmp
int3
pop
xor
lods
add
leave
jb
subl
shrb
test
pop
dec
cltd
push
add
xor
lahf
pop
lods
jne
cmp
out
data16
lret
shlb
sub
insb
jae
dec
lods
sbb
data16
xchg
push
lcall
or
mov
sbb
jns
pop
add
and
push
jns
adc
mov
pop
mov
dec
or
idivb
jb
das
sbb
push
mov
jmp
pop
mov
push
mov
add
inc
daa
mov
mov
rorb
mov
sub
enter
mov
cld
jno
pop
test
sbbb
jbe
xor
push
sbb
hlt
addr16
or
mov
rcrl
and
js
test
es
loop
jecxz
jge
inc
gs
popf
in
and
sub
icebp
es
sarl
ljmp
enter
std
jnp
pop
repz
mov
mov
dec
lea
inc
cmp
cmp
test
dec
cmp
mov
testb
test
and
repz
add
push
cmpsl
sahf
lock
lret
jecxz
dec
fnstcw
mov
daa
repz
push
shll
je
dec
pop
lods
jecxz
pop
mov
cmpsl
jmp
xor
mov
xorb
jne
push
cmc
xlat
imul
insb
adc
stc
adc
push
xor
mov
mov
mov
sbb
nop
outsl
movsb
dec
xchg
jo
shll
xor
dec
cwtl
test
xchg
imul
push
pop
lahf
jne
and
add
leave
sbb
add
lods
daa
mov
push
or
cmp
out
mov
xor
je
xchg
fmul
sub
cmp
out
push
test
inc
lds
dec
add
adc
jge
test
fsubl
rcl
int3
and
cmp
leave
dec
add
jle
adc
das
test
xor
loope
push
mov
lcall
movsb
push
stc
cld
leave
adcl
mov
and
pop
int
adc
icebp
lds
ficoms
int3
pushf
imul
push
xlat
cmp
out
imul
or
lahf
scas
adc
std
rorb
in
bswap
dec
lock
mov
xor
in
and
cmp
adc
movsb
push
dec
cmpsb
std
lods
insb
push
fidivl
ljmp
fisubrs
pop
incl
jb
and
xchg
xchg
aaa
add
sbb
mov
adc
xchg
add
push
outsl
dec
cwtl
faddl
iret
stos
movsl
fistpll
scas
jns
xor
popf
es
rorb
mov
jne
xor
es
mov
scas
mov
mov
mov
sahf
test
sbb
test
jb
jne
mov
icebp
mov
push
dec
into
add
fcmovnu
dec
inc
xchg
mov
pand
adcb
iret
sub
push
cli
ret
lock
pop
jl
inc
or
cmp
mov
mov
or
mov
insb
xorl
ds
fisubs
into
fcoml
imul
xchg
imul
jp
push
daa
mov
int3
or
mov
cltd
cmp
adc
mov
xchg
mov
daa
pop
lods
fildll
int
je
mov
int
jo
imul
push
ja
xchg
loopne
call
mov
jbe
cld
repnz
xchg
sub
cmp
pop
mov
add
add
out
iret
rolb
mov
in
sbb
bound
xor
push
movsb
inc
or
xorl
jae
adc
pop
clc
jo
sarb
inc
push
and
xchg
cs
idiv
mov
jl
aaa
sbb
push
loope
movups
xor
insb
dec
mov
aaa
cwtl
push
ja
loopne
pop
cs
mov
loop
sbb
lret
mov
xchg
pop
xor
dec
pop
test
popa
dec
xor
fldt
or
imull
add
addr16
std
test
or
ds
and
push
add
mov
jno
lahf
push
test
out
add
out
jnp
test
and
dec
out
sbb
mov
mov
addb
sbb
out
xchg
jecxz
outsl
bound
mov
xlat
inc
push
lcall
cltd
cmp
cmp
pop
dec
out
stos
adc
mov
mov
inc
bnd
mov
xor
add
test
dec
mov
mov
ret
scas
jmp
testb
add
out
aam
sub
or
fs
scas
sub
xchg
sbb
lods
adc
rorl
out
data16
les
mov
pushf
testl
in
inc
mov
rcrl
jp
adc
xor
or
addr16
xchg
mov
or
aad
mov
xchg
xchg
shrl
std
adc
sbb
dec
jnp
push
es
mov
jbe
je
rol
push
jbe
push
stos
push
cmp
fwait
sbb
cmp
ljmp
pop
fbstp
add
xchg
leave
filds
mov
dec
pop
jl
icebp
adc
imul
enter
pop
jbe
or
icebp
inc
outsl
je
pop
mov
adc
ret
std
cli
sbb
mov
and
sub
aaa
ss
cmpl
cmp
sbb
in
ljmp
into
pop
pop
jne
clc
dec
lret
cltd
xor
mov
dec
stos
lods
sub
outsb
dec
gs
pop
int3
daa
jp
adc
push
adc
mov
sti
push
test
pushf
addr16
xor
push
xorl
mov
scas
fcom
mov
es
movsl
les
fcoms
xchg
leave
rcr
lds
or
xor
sbb
jp
lds
movsb
xchg
xor
cld
lcall
ss
icebp
fstpt
sub
lods
push
adc
xchg
push
xlat
pushf
push
test
addb
es
push
adc
inc
lods
adc
xchg
mov
add
push
push
mov
jns
gs
pushf
jp
add
jp
lea
les
sbb
cltd
mov
popf
push
jo
pop
pop
or
lcall
arpl
adc
aas
or
gs
sbb
lds
jno
push
sbb
in
sub
pusha
mov
mov
jns
xchg
loopne
insl
pop
and
fisttpl
xor
and
mov
outsb
jmp
jnp
push
aaa
fimuls
fidivrs
sbb
xor
add
js
outsl
lcall
cmp
repnz
shrb
and
xor
mov
ds
or
xchg
movsl
xlat
xor
push
adc
cmc
fisttpll
addr16
enter
adc
inc
lods
in
pop
sbb
inc
rclb
mov
test
xchg
out
pushf
mov
inc
push
leave
adc
mov
test
dec
mov
scas
nop
or
mov
and
rcl
cmpsl
push
push
xchg
fld
mov
mov
movsl
js
xor
push
daa
xor
shlb
cwtl
mov
mov
push
fsts
and
in
fldcw
daa
push
add
test
xor
add
jae
pop
clc
pusha
loopne
sub
jmp
sbb
pop
add
mov
mov
xchg
loop
mov
jbe
leave
cwtl
dec
pop
ret
outsb
xchg
jbe
lret
adc
test
add
ljmp
jbe
add
jb
negb
pop
pop
icebp
cmpsl
mov
fmul
mov
das
incb
push
mov
mov
fcompl
sbb
mov
idivl
mov
das
mov
imul
pop
and
ja
ljmp
xchg
js
into
movsl
xchg
jb
xor
dec
out
addr16
stos
incl
pop
add
stos
pop
cmp
sbb
jns
cmp
or
and
cmp
mov
repz
sub
call
sub
icebp
mov
cmp
lcall
pop
movsl
cld
or
xlat
push
lods
xchg
addl
add
jl
mul
pop
adc
repz
cmp
faddp
ret
movsb
bound
adc
inc
int
cmp
cwtl
mov
testl
js
ljmp
insl
push
or
mul
cwtl
adc
stos
add
add
pop
mov
xchg
lret
subl
mov
push
cmp
mov
add
cmp
xor
inc
adc
std
push
lods
ror
daa
push
in
mov
xchg
ljmp
inc
lock
adc
fimuls
mov
mov
push
fbld
negl
and
iret
fidivrl
insl
mov
add
mov
mov
pop
add
jmp
scas
and
jle
popf
sbb
sub
ss
bnd
scas
fsub
add
fdivr
lret
rorb
fsubrl
pushf
popa
adc
adc
fidivs
movsl
pop
pop
call
int
pop
cli
repz
aas
mov
or
les
mov
and
or
push
popl
adc
faddl
scas
sub
std
lahf
cmp
in
popa
push
in
mulb
std
xchg
jo
daa
jbe
add
daa
pusha
test
sub
jno
mov
in
jno
orb
sub
jno
pushf
add
push
inc
mov
cli
stc
enter
int3
shll
xchg
mov
xlat
jge
or
js
movsb
mov
dec
xchg
movsl
lods
push
loopne
xor
dec
dec
int
fidivs
testb
jno
dec
icebp
stos
testl
clc
fs
aas
or
lcall
adc
and
push
repnz
push
sbb
shlb
jns
outsb
arpl
sub
mov
pop
inc
cmp
xchg
inc
or
push
sbb
jne
pop
or
push
sub
adc
in
aas
test
mov
dec
clc
or
mov
fidivs
stos
sub
pop
lods
lods
xor
sahf
pop
push
std
jns
fwait
pop
fsts
and
sbb
add
xor
mov
insl
jecxz
cvtdq2ps
test
xor
push
mov
xchg
sbb
xor
pop
mov
inc
out
xor
inc
adc
aas
enter
cmc
push
sub
popa
data16
jle,pt
xor
mov
adc
shr
inc
ja
out
push
ljmp
lahf
xchg
and
pop
arpl
cs
lret
cmp
div
aas
cmp
dec
inc
iret
mov
pop
add
push
into
fisubrs
cmp
repz
pxor
movsl
fldcw
hlt
xor
mov
les
jecxz
aas
xchg
mov
cmp
xchg
aam
les
xor
xor
push
js
or
and
in
test
aad
mov
scas
xchg
push
jle
jle
lds
cmpsl
les
lock
sbb
push
ret
pop
loop
pop
test
dec
repnz
add
and
test
lea
popa
and
or
dec
ss
stc
lods
adc
jle
test
jge
and
mov
sub
sbb
pop
into
cmp
pop
mov
add
cld
in
fwait
test
movsl
in
xchg
aas
jne
gs
daa
ljmp
in
jns
sarb
cmp
clc
fcomps
test
push
inc
out
loop
lcall
rorb
mov
push
std
repz
pop
mov
xor
add
mov
das
mov
jmp
negl
adc
dec
cmp
sub
mov
pop
ficompl
lea
or
and
stos
and
js
mov
in
push
xor
mov
iret
ja
pop
sub
xchg
pop
push
xlat
jnp
stc
and
pusha
and
push
pusha
aas
jb
outsb
cltd
je
cmp
test
sbb
jns
sbb
int
add
xor
cmp
mov
sbb
xchg
sub
mov
pop
pop
cli
roll
inc
push
testl
pop
and
dec
iret
mov
in
stc
sbb
inc
xchg
fistps
pop
mov
shlb
inc
sub
cmp
adc
sub
popa
push
push
ret
gs
cmovne
mov
add
pop
ret
cmp
rolb
push
incb
mov
scas
test
or
mov
loope
or
jo
or
mov
push
fstpt
test
mov
sbb
imul
cmp
iret
outsb
push
mov
nop
dec
push
inc
mov
fistl
cmc
add
mov
mov
dec
mov
or
frstor
pop
mov
stc
inc
lret
jl
outsl
pushf
inc
add
and
xor
cmp
arpl
insl
or
jnp
fiaddl
push
cmp
int3
iret
sbb
pop
inc
push
lock
and
clc
lret
cmc
pop
jnp
pop
mov
clc
push
cmp
cmp
movsl
mov
cmp
mov
adc
inc
cmp
call
dec
les
and
sbb
push
inc
and
ds
push
push
ds
out
xor
aaa
ljmp
rorl
mov
adc
adc
stc
loope
lcall
mov
andl
mov
add
push
lea
mov
jecxz
pusha
cmc
test
mov
xchg
repz
and
push
dec
dec
movsl
ds
out
sahf
test
push
bound
push
frstor
fwait
xlat
ds
xchg
lret
fcoms
or
pusha
out
mov
mov
fs
dec
mov
add
iret
pop
icebp
jge
cli
sub
jp
shlb
in
jbe
mov
repnz
and
dec
cmpsl
roll
arpl
add
jbe
out
adc
dec
add
sbb
xchg
lea
daa
inc
je
add
or
mov
xchg
xor
or
sub
push
fs
lea
jge
lea
xchg
fs
enter
or
pop
and
fs
push
pop
sbb
dec
jne
inc
rcll
in
inc
cwtl
les
jl
enter
les
jno
imul
jle
test
pop
lret
lret
mov
sub
sub
sbb
xor
sbb
mov
test
mov
push
shll
xor
jbe
js
fistl
mov
lret
in
xor
ret
and
aam
or
xor
adc
iret
pop
icebp
add
fists
inc
mov
or
out
and
push
add
das
cmp
test
and
pop
jecxz
lahf
sbb
jne
repnz
lds
mov
cmp
mov
cld
movsb
jnp
mov
ljmp
dec
das
and
lods
cmp
fldcw
lock
add
or
rorb
cmp
or
mul
mov
sbb
aaa
imull
je
cmp
lods
repz
jns
push
add
jbe
add
mov
pcmpgtd
stos
movsb
jecxz
out
mov
fsts
mov
jl
inc
test
or
mov
mov
movl
push
ret
stc
push
lahf
cld
xchg
push
roll
cmpsb
sahf
add
sub
test
push
popf
jp
ljmp
pop
cltd
movsb
out
cs
adc
add
pop
int
repnz
imul
push
gs
push
cmp
or
add
icebp
std
jns
jg
ds
in
imul
test
jmp
into
imul
mov
sbb
add
aaa
add
xchg
es
pop
les
xchg
push
lods
outsl
test
and
mov
leave
mov
cmp
sbb
cmp
lods
gs
cmp
sub
rcll
enter
pop
cltd
lret
icebp
sub
and
pusha
mov
in
push
fwait
test
in
add
fbstp
adc
mov
adc
lock
scas
lea
out
aaa
jmp
stos
xor
sub
ljmp
sti
cmpsb
mov
inc
pop
inc
mov
jne
push
daa
outsl
sbb
jo
fldt
jae
mov
sbb
pop
icebp
pop
jne
mov
mov
mov
into
or
xchg
sbb
jo
icebp
xchg
gs
cmc
std
and
and
repnz
es
cmpsb
movsb
mov
sub
sti
or
pop
adc
movsb
scas
nop
lretw
dec
scas
push
sub
xor
std
sub
add
xor
mov
push
push
mov
enter
xorb
pop
pop
flds
loopne
xchg
in
ficoms
icebp
cmp
clc
stos
test
mov
pop
xchg
fs
mov
mov
imul
popa
mov
gs
and
ljmp
adc
fsubs
cwtl
daa
icebp
cmpsl
out
rol
mov
pop
in
mov
jae
sahf
push
jl
clc
scas
pop
or
stc
out
lcall
xchg
mov
push
in
mov
popa
testb
decl
fisubs
and
add
xor
pop
icebp
inc
or
xchg
cmp
xchg
push
or
testb
mov
stc
mov
sub
jbe
mov
cmp
mov
xchg
out
adc
enter
clc
and
sarb
jae
les
insb
or
jbe
or
pop
push
movsl
int
repz
loope
in
rcrb
xor
stos
mov
jne
jo
mov
sbb
ljmp
subb
adc
les
pop
movb
icebp
cmp
es
aam
test
pusha
ja
dec
fsts
aas
in
inc
sub
mov
mov
add
aad
bound
mov
inc
ret
stc
mov
sbb
sbb
pop
outsb
scas
lods
arpl
jle,pn
aad
xchg
ds
jno
fidivl
add
push
push
cld
xchg
outsb
pop
xor
pop
push
ret
pop
sbb
mov
or
ja
adc
add
fnstsw
lods
pop
cmpsb
dec
and
xor
shll
cld
in
xor
iret
subb
mov
loop
sbbb
das
add
dec
ds
pushf
incl
xchg
std
mov
shll
dec
mov
loope
int3
mov
xchg
gs
cmp
cmp
push
das
fsubs
test
dec
es
cmp
mov
mov
mov
jmp
roll
idivl
sub
jmp
ds
add
repz
out
mov
mov
and
jmp
insl
inc
sub
mov
or
xchg
les
and
loop
icebp
aad
push
aad
ud0
leave
inc
mov
mov
xcrypt-ofb
cmpsl
imul
xor
mov
pusha
jp
pop
daa
sbb
dec
stos
cmpsl
push
push
adc
inc
js
add
pop
fdivs
dec
mov
jnp
pop
rcrl
ja
pop
mov
sbb
push
mov
mov
push
dec
sub
int
xchg
adc
cs
fstps
adc
leave
mov
popf
ss
mov
mov
das
pop
insb
shlb
test
fsubs
sub
cwtl
ficompl
push
push
xor
outsb
or
sub
repnz
inc
ret
push
sub
mov
jb
and
mov
std
xchg
cltd
popf
dec
xchg
rcrb
and
pop
xchg
dec
jecxz
imul
mov
or
push
aad
push
pusha
imul
arpl
jns
stos
insl
fbstp
mov
cmpsl
dec
xchg
jg
ds
inc
scas
pop
sbbb
inc
add
inc
lods
inc
add
jno
addr16
dec
mov
mov
sbb
cmpsl
mov
push
loopne
inc
jmp
jo
mov
xor
pop
sub
fiaddl
dec
test
cmpsb
inc
jnp
inc
insl
in
inc
faddl
fs
inc
pop
cli
cmp
repz
cmp
xchg
fisubrl
push
in
iret
push
xchg
sbb
jae,pn
sbb
movsl
cmc
fldl
cmc
cltd
mov
push
mov
gs
jl
out
call
pop
xchg
jb
mov
or
in
testb
cli
push
leave
add
stos
sarw
dec
imul
push
testl
movb
xchg
imul
pushf
loope
sub
in
in
cld
roll
cltd
or
and
ljmp
fiaddl
aaa
jb
addr16
or
adc
inc
sarl
add
add
pop
pop
dec
cmp
sbbb
sub
jecxz
fwait
mov
mov
movsl
jl
xor
lds
cwtl
jl
inc
loop
xlat
jge
xor
mov
mov
pop
push
lcall
mov
pop
stos
and
iret
fmuls
sbb
repnz
aad
in
cmpsl
fimull
pop
adc
cwtl
mov
data16
cltd
jb
add
cli
xor
push
or
repnz
je
pop
mov
cmpsl
dec
dec
xlat
cmp
mov
or
sahf
cmc
mov
scas
lock
pop
fildl
sbb
das
sub
sbb
jmp
xor
adc
incb
sbb
lret
std
fdivrp
push
push
mulb
mov
pop
pushf
cld
insl
lret
xor
adc
adc
mov
add
mov
add
mov
test
rolb
and
ret
fimuls
out
in
fcoml
dec
mov
aaa
mov
aam
dec
jl
adc
lret
mov
xchg
fcomps
stos
lods
mov
test
test
mov
enter
mov
push
fisubl
pop
jo
push
adc
adc
add
rolb
and
sub
into
js
or
cmpsb
push
imul
push
sti
into
out
push
push
mov
inc
es
shl
in
fisubl
aam
mov
orl
jl
sti
hlt
cmpsl
sahf
push
lods
int3
ds
fidivrs
adc
adc
movsl
repnz
dec
push
pop
test
adc
stos
andnps
jae
xchg
ret
pop
mov
inc
pop
dec
jge
insb
adc
inc
cmp
ret
jmp
or
arpl
cmc
dec
in
scas
push
jl
mov
faddl
mov
test
pop
call
add
into
imul
jne
loope
int3
and
jne
loop
sub
dec
jb
push
xor
out
jl
and
lcall
repnz
mov
pop
aas
xchg
cltd
dec
lcall
add
mov
out
cmp
jmp
xchg
push
add
sbb
fldenv
arpl
fwait
mov
shrl
loopne
xchg
cmp
insb
sub
shrb
or
and
add
idivb
mov
mov
fldcw
sbb
inc
bound
ss
adc
dec
lret
pusha
stc
in
pop
and
lahf
in
lods
push
xchg
scas
jge
pop
jb
jge
or
xchg
pop
push
das
arpl
jmp
in
xchg
mov
int3
jmp
iret
popa
xlat
ficomps
inc
add
mov
cs
jbe
jbe
jecxz
cwtl
in
inc
pushf
aaa
add
mov
xor
out
mov
movsb
repnz
sbb
mov
push
xchg
cmpsl
push
jno
mov
insb
adc
pushl
rcrb
les
sbb
mov
icebp
xchg
sub
lcall
xchg
sbb
test
adc
jecxz
outsl
xlat
or
fs
divl
jmp
or
and
push
jge
repnz
ds
sbb
mov
mov
aad
imul
jae
cli
jbe
cmp
mov
test
jns
imul
movsb
xor
lock
cli
sbb
mov
cmp
inc
lcall
xor
or
stc
loope
roll
push
push
and
negb
mov
add
jle
xlat
scas
stos
out
or
lods
lock
cli
in
shl
and
adc
cltd
mov
les
push
clc
nop
inc
jb
adc
cmp
xor
jbe
insb
ja
movb
xor
scas
push
push
arpl
mov
aad
call
rcrl
jle
popa
or
mov
or
fnsave
cltd
mov
and
jg
mov
or
dec
push
loope
mov
pop
push
iret
dec
adc
mov
mov
pop
add
lea
xchg
mov
in
sub
jmp
daa
cmp
lret
cmp
aaa
pusha
push
xlat
xor
in
mov
mov
xchg
gs
xor
sbb
inc
fnsave
mov
push
pop
xchg
cmp
cmpsl
mov
xlat
adc
pusha
jle
fmull
std
xor
cmp
cmp
cmp
inc
int3
and
test
xor
pop
fisttpl
xchg
idivb
push
loopne
jno,pn
inc
das
or
jp
ja
xor
jbe
xlat
incl
gs
mov
inc
inc
push
movsb
aas
ljmp
push
add
xchg
sbb
es
in
adc
into
nop
sbb
xor
je
test
mov
jge
sbb
mov
ljmp
xchg
int
push
fnstcw
inc
inc
adc
int
xchg
negl
fadd
loop
arpl
adc
mov
cmc
adc
in
popa
dec
push
sbb
imulb
test
aas
sbb
push
push
cmp
add
aam
ret
gs
pop
pop
pop
movsl
aas
push
in
dec
sub
stos
mov
iret
repnz
out
test
jno
aaa
in
jg
mov
popa
dec
cmp
or
push
push
sti
aas
ljmp
mov
add
push
mov
cmp
retw
mov
icebp
xchg
enter
jge
daa
lret
xchg
mov
sub
dec
push
adcb
fisubl
repnz
fdivrs
imul
xor
roll
test
aaa
xor
ret
mov
fldcw
push
push
fisubs
lret
out
imull
ds
mov
adc
cmp
clc
shll
adc
pop
enter
jmp
or
sbb
scas
or
mov
fiadds
jno
sahf
or
cld
stc
add
fwait
jno
inc
pop
sub
sub
adc
mov
mov
lahf
dec
data16
mov
xchg
cmp
test
mov
sub
jno
ljmp
jo
push
call
cmp
je
push
test
pop
bound
int
cmpsl
lods
push
add
cltd
aaa
xchg
ljmp
arpl
mov
aaa
test
cmpsb
fisttpl
repnz
xchg
ds
ja
int
mov
in
push
das
das
rcll
es
fistpl
daa
dec
stos
lods
into
inc
cmc
rcrl
cmpsl
mov
je
arpl
push
shl
lcall
sbb
jno
cmp
sub
xor
pop
adc
jae
mov
push
and
cmp
xor
ds
ljmp
mov
jg
push
insl
inc
in
add
ja
inc
jns
xor
aas
and
push
leave
xchg
push
dec
mov
rcrl
add
fdivp
cld
sbb
shll
xor
mov
popa
cltd
cmpl
ja
push
push
arpl
xor
sub
cmpl
and
loop
fsts
dec
adc
lahf
push
jns
push
adc
sbb
je
ds
pop
push
xor
scas
es
pop
push
addr16
rcr
mov
sub
cli
es
mov
mov
popa
addl
stc
mov
in
es
cmpsb
jnp
popa
out
cmpsb
inc
xchg
or
pop
or
and
or
dec
xchg
push
xchg
pop
stos
sub
mov
pop
outsb
les
lods
push
xchg
repnz
aas
mov
cmpsb
jae,pt
push
popf
outsl
mov
aam
sub
fadds
add
jmp
jnp
sbb
popfw
lods
xor
test
fdivs
xchg
incl
xlat
data16
add
add
add
imul
fstl
dec
ds
lcall
mov
push
pushf
dec
mov
test
dec
inc
pop
push
call
mov
sbb
and
loop
fcoms
sti
les
sbb
sbb
addr16
sub
or
xlat
imul
pop
int
in
fwait
add
cmpsl
and
push
cmpsb
mov
data16
retw
mov
movsl
shlb
cmp
into
and
xor
jno
pop
pop
or
xchg
stc
pop
dec
imul
loop
fildll
lods
adc
ds
and
sbb
lahf
pop
xor
mov
sbbl
pop
lahf
fisttpll
sub
outsb
sub
mov
out
jne
sbb
sub
mov
adc
addb
repnz
jns
dec
or
pop
mov
xchg
dec
iret
icebp
add
or
sbb
xchg
push
mov
add
mov
sub
in
addl
xor
push
adc
aaa
lods
adcb
shrl
shrb
jb
movsl
mov
loopne
imul
stos
mov
in
or
dec
subl
jnp
stc
popa
xchg
mov
shrl
mov
mov
xchg
mov
leave
mov
add
lahf
lahf
dec
shrb
inc
and
jnp
xchg
pop
testl
addl
call
adc
pop
inc
mov
xchg
pop
int3
sbb
in
iret
daa
add
in
mov
cmp
and
adc
cmpsl
and
dec
add
sub
cli
push
and
int
mov
pop
mov
push
mov
lea
in
dec
pushf
out
cld
sbb
mov
xchg
addr16
subl
xor
lahf
aaa
dec
or
inc
loopne
mov
mov
inc
dec
clc
pop
xchg
popa
out
sub
push
cmpl
in
pop
push
enter
adc
inc
mov
call
mov
jns
stos
lret
dec
cltd
xor
dec
test
ss
xchg
fildll
inc
clc
sub
dec
dec
fimuls
test
mov
je
hlt
call
bound
xor
lods
mov
js
add
enter
xchg
mov
lahf
ror
and
out
addr16
roll
rcl
mov
mov
into
fistpll
popa
daa
ret
push
adc
xor
mov
fimull
cmp
nop
cs
or
aaa
and
sub
gs
adc
pop
inc
ror
jnp
mov
bound
jle
lret
mov
jne
and
mov
mov
mov
popa
sub
nop
in
mov
arpl
jne
mov
fwait
rcrb
mov
jbe
icebp
pop
mov
or
cld
jle
fbstp
mov
bnd
mov
std
das
push
sub
jae
js
popa
loope
pop
xor
cmpsb
loop
xchg
pop
jne
jnp
js
test
add
popf
dec
aaa
ret
push
mulb
ja
jmp
test
xchg
into
shlb
jb
xor
loop
cmp
xchg
movsb
dec
sub
cmc
push
ret
adc
dec
inc
shll
push
xchg
cmp
insl
jmp
or
hlt
add
push
test
push
mov
stos
mov
xor
cmp
cwtl
mov
and
cli
stos
fnstsw
inc
cwtl
shrb
enter
sbb
movsb
je
addb
jbe
mov
stos
mov
and
jmp
imull
scas
jne
dec
xchg
mov
or
sub
testb
sbb
lods
xor
movsb
jae
jecxz
aad
mov
out
cmc
jg
int
xchg
bound
fwait
jp
out
jnp
jae
mov
push
out
jnp
ds
cld
hlt
mov
test
jmp
sbb
dec
aaa
icebp
dec
in
add
jp
out
frstor
mov
out
jbe
xchg
frstor
dec
fwait
in
ret
xchg
adc
rcl
mov
pop
stc
les
and
mov
das
rol
add
xchg
pusha
into
push
xchg
dec
outsl
mov
mov
adc
pop
cwtl
test
mov
pop
pop
lock
addr16
xor
sahf
aas
imul
jg
repz
cmp
iret
jnp
or
mov
frstor
faddl
push
loope
mov
lock
push
cmc
push
repnz
pop
adc
mov
in
mov
pop
test
xor
push
subl
push
stos
push
loope
and
sbb
push
shll
and
loope
scas
cmp
mov
mov
pop
cmp
cmp
mov
inc
mov
or
mov
adc
stc
jmp
inc
jno
fdivr
pcmpeqb
sahf
jmp
roll
jno
xor
jnp
and
cwtl
in
jmp
mov
pop
les
cli
rcll
push
jle
xchg
orl
clc
test
add
cmp
js
icebp
sub
cmpsb
sub
pusha
mov
ja
lods
xchg
dec
sub
rcr
fucomp
imul
test
xchg
cmpsb
add
or
mov
jmp
xchg
pop
xchg
out
push
mov
dec
pop
push
icebp
hlt
and
mov
xchg
jns
scas
pop
int
adc
aam
dec
adc
xor
xchg
mov
icebp
pop
mov
loopne
or
je
mov
daa
hlt
lds
popf
pop
test
cmp
cmpsb
in
adc
popa
add
outsl
bound
testb
adc
jns
flds
inc
adc
lds
sbb
stos
leave
movsb
sub
repz
cwtl
jae
xor
lea
sub
rolb
mov
lret
ficompl
jno
mov
fidivs
inc
ficoml
in
mov
xchg
or
inc
jmp
lods
sub
push
xor
fnstsw
sbb
jo
xor
adc
imul
and
int3
stos
mov
daa
lret
xchg
fstl
and
push
jne
hlt
lahf
push
mov
sbb
in
mov
in
in
mov
icebp
repz
jb
or
cmp
mov
nopl
mov
scas
loopne
inc
gs
stos
mull
push
mov
mov
outsl
lock
ret
adc
sbb
fnstsw
jne
int
xchg
fstps
lret
cltd
sub
fs
je
sbb
mov
enter
out
inc
mov
notb
adc
push
les
and
push
xchg
cltd
pop
and
xor
sub
inc
int
inc
sbb
cltd
push
outsb
pop
ficompl
insl
cmc
jmp
rclb
inc
inc
pop
sub
inc
stos
hlt
add
dec
jae
lret
mov
ja
pop
bound
daa
inc
orb
xadd
cwtl
inc
cli
add
out
or
das
cmp
sahf
ljmp
or
mov
aad
push
sbb
cs
shrl
arpl
cmpsl
xchg
js
aad
sti
xchg
cmp
mov
mov
push
or
scas
loop
mov
and
mov
jns
stc
mov
andl
xor
jmp
popf
fadd
cmpsl
lcall
pop
test
mov
popa
mov
sbb
loopne
sar
mov
paddsw
dec
shlb
inc
movb
push
popa
call
sbb
push
out
jmp
xor
fwait
and
fdivl
pop
adc
ret
out
inc
xchg
dec
cmp
lods
or
leave
fstps
jge
xor
scas
int3
xchg
hlt
ret
fistpll
pop
mov
les
aaa
das
xchg
shrb
aas
xlat
notb
arpl
dec
repnz
pop
fnstenv
jo
xchg
mov
jmp
add
daa
fildl
sub
xchg
mov
push
rorb
sti
mov
or
push
inc
push
lds
sub
xor
icebp
fs
scas
mov
stos
popf
sub
movsb
dec
ret
mov
les
imul
imul
scas
mov
pop
inc
movsl
cmp
fmull
xchg
pusha
adc
lcall
lret
push
jg
gs
mov
xchg
xchg
pusha
clc
pop
mov
mov
shlb
outsl
leave
jns
cs
xchg
cwtl
mov
sbbl
push
inc
cmp
sbb
jge,pt
dec
push
inc
lret
fildl
cmp
pop
xchg
mov
mov
cwtl
push
cli
push
sub
scas
dec
jge
subl
subb
or
add
sbb
and
and
movsl
sub
outsl
test
ret
jmp
add
stos
push
icebp
fisttpll
aad
add
in
mov
mov
sub
std
push
pop
enter
outsl
inc
or
dec
ss
mov
inc
jbe
pop
push
cltd
or
mov
sbb
push
out
sbb
aas
in
scas
inc
jbe
pop
jmp
jle
dec
pop
cs
jecxz
xor
sbb
and
mov
insl
dec
push
jmp
int3
adc
sub
mov
rcl
sbb
pusha
sbb
jne
pop
rcrb
popf
cmp
xor
push
xchg
mov
in
movsl
inc
xor
or
outsl
mov
mov
sahf
mov
or
jle
cmp
ret
and
mov
and
jp
push
pushf
daa
xchg
fdivl
mov
call
jb
push
jp
dec
loopne
or
xchg
in
push
repnz
xchg
inc
dec
cmp
xor
mov
fstpl
scas
in
das
mov
movsl
movb
mov
jp
or
fs
enter
fisubl
rol
jg
data16
subb
dec
rcrl
les
fidivrl
or
ja
jo
fidivrs
repz
out
sahf
aad
dec
into
popa
icebp
mov
sbb
dec
mov
pop
mov
pop
jl
dec
fcoml
lcall
sarl
push
xchg
aam
addr16
jo
push
fsubrs
mov
repz
jnp
fmulp
mov
cli
adc
push
add
in
dec
ss
rorl
sbb
sbb
cmp
ds
and
scas
subl
xchg
adcb
xor
or
mov
xchg
int3
push
mov
jmp
push
lods
add
test
sub
test
bound
dec
cltd
cwtl
outsl
dec
fldl
jle
lahf
movsl
sbb
cmpsl
popa
mov
dec
ret
inc
inc
mov
jp
loop
ret
jnp
dec
push
pop
je
aad
je
xchg
orb
movsl
mov
clc
lds
xchg
jg
data16
sub
xchg
mov
push
in
addr16
mov
enter
xor
cmp
inc
jl
mov
xchg
mov
stos
sbb
aas
jbe
mov
push
imul
out
lods
mov
cmp
dec
or
cld
lods
repnz
and
ja
pop
dec
sbb
mov
jmp
in
cli
push
loopne
sub
mov
out
fsub
in
sub
rcrl
push
dec
pop
outsb
stos
repz
std
cld
xor
xchg
sti
movl
jecxz
leave
push
mov
icebp
pop
push
mov
cmp
in
dec
loope
pop
jo
ss
ret
int
mov
push
fs
adc
xchg
jg
aas
inc
xor
pop
fsubrs
cmp
xchg
sub
xchg
outsb
nop
xchg
or
cmc
mov
arpl
ret
mov
imul
cwtl
insl
jb
cmp
xor
mov
movsb
fdivrp
add
push
jno
ficompl
add
xchg
adc
in
xchg
jmp
cmp
scas
mov
addb
jne
dec
fisttpll
jmp
ret
xchg
adc
sub
adc
pop
jl
out
pop
pushf
repnz
inc
dec
add
js
mov
adc
fs
xor
jecxz
in
fstpt
gs
cmc
inc
out
call
and
iret
pushf
add
sbb
xorb
ficomps
mov
lretw
dec
lret
adc
xorl
data16
sbb
inc
cltd
adc
add
sbb
idivl
sti
jge
pop
inc
sub
cwtl
pop
cli
xlat
and
scas
test
shl
mov
shlb
dec
int
mov
popa
inc
clc
mov
popf
aad
xchg
xor
pop
stos
das
leave
adc
cmp
fdivl
lahf
inc
inc
pop
mov
adc
lock
xor
fiaddl
subl
jl
push
sbb
cld
xor
jbe
push
dec
pop
mov
inc
add
mov
cmp
mov
test
pop
popa
insl
mov
lret
cmp
mov
dec
and
arpl
outsb
insl
push
mov
ja
mov
push
cli
lcall
jg
dec
ja
test
jno
cmp
cmpsl
test
jle
mov
bound
inc
push
mov
lret
pushf
fildl
sbb
je
int3
xchg
clc
jge
out
lea
mov
push
mov
cmp
filds
mov
std
push
mov
adc
scas
xor
mov
pop
sub
test
dec
nop
add
clc
pop
iret
stos
jbe
popf
pop
mov
or
movsb
loop
sti
inc
dec
jne
add
xor
mov
and
jp
shll
rclb
lret
cmp
dec
jle
paddusb
divb
xor
and
or
xchg
ss
mov
jp
leave
out
pop
jo
mov
rorb
mov
jo
and
mov
cmpsl
jle
adc
leave
bound
sbb
jp
dec
xor
sub
div
outsl
addb
stc
mov
ds
sub
lcall
push
mov
xchg
jge
cmpsl
lcall
jecxz
test
loopne
dec
in
lods
in
add
add
test
or
xlat
cs
fistl
ss
les
fstl
add
icebp
cwtl
cmp
push
mov
aad
or
lret
sbb
out
mov
inc
mov
loop
iret
jmp
inc
cld
push
jb
cmp
xchg
test
mov
fcmovbe
stos
push
ficompl
es
es
mov
lock
ret
int
ds
scas
clc
dec
in
ret
insl
xor
dec
pop
fidivrl
lcall
xor
sbbl
pop
jg
mov
roll
xchg
loopne
xor
imul
sub
pop
jnp
es
and
mov
mov
dec
adc
frstor
sub
push
jp
ret
and
xchg
add
jl
jae
pop
imul
mov
movsl
mov
ret
loop
imul
les
pop
jg
fsubs
dec
dec
xchg
in
test
pop
adc
aas
mov
jg
stos
es
das
push
rorb
loop
imul
insb
shll
adc
lds
in
scas
lret
pushf
lock
loop
in
mov
push
popf
xchg
cmp
or
data16
xchg
dec
ret
xor
cmp
ficompl
cmpsb
test
sbbl
jbe
jl
in
sbb
cli
push
fldt
shlb
cmpsb
je
repz
dec
push
inc
push
mov
je
jmp
mov
lcall
jmp
sarl
insl
nop
xchg
mov
mov
xor
xchg
and
and
pop
imul
sub
sti
sub
mov
stos
bound
jmp
jns
mov
cli
cmp
jb
inc
jle
notb
roll
and
aam
mov
inc
inc
adc
inc
std
sbb
push
out
rol
cmpl
mov
ret
ret
or
jbe
out
repz
out
jno
inc
push
icebp
jbe
out
mov
push
pop
popa
enter
ret
sbb
test
lret
add
jecxz
add
cli
loope
popf
out
and
pushf
rcrb
into
leave
clc
insl
jne
cmp
inc
jle
xor
movsl
cmp
dec
inc
fstpl
jmp
mov
insb
movb
pop
mov
in
int3
xor
pop
and
movsb
aad
jmp
sbb
into
sbb
lock
stc
mov
int3
xor
xchg
xor
xor
pop
adc
popf
xchg
mov
ret
mov
jmp
int
addr16
jmp
lods
fs
icebp
mov
in
xor
adc
sbb
ret
cld
pop
jne
push
sbb
lds
lock
pop
stc
or
add
inc
jns
pop
cmp
pop
enter
icebp
rcrb
push
xchg
mov
lahf
test
mov
adc
sbb
out
gs
in
fmull
sub
inc
xchg
adc
and
inc
bound
and
mov
insl
adc
mov
or
mov
xchg
fcmovu
repz
jae
rorl
out
or
jl
loopne
std
sub
stos
or
pop
addb
sub
jl
pop
and
div
fs
sbb
fsts
sub
pop
xchg
fisttpl
fdiv
cmp
mov
add
mov
push
iret
ds
or
push
dec
dec
sbb
shlb
adc
jae
mov
dec
pop
jge
imul
mov
inc
cli
in
pusha
jnp
jge
and
out
mov
jp
arpl
out
and
mov
mov
aaa
mov
mov
jae
or
movsl
jmp
jmp
mov
cmpsb
iret
cld
mov
sub
cmp
dec
in
xchg
lods
xor
lcall
jmp
cmp
inc
outsb
into
test
jnp
mul
mov
test
ja
aad
inc
adc
hlt
cmpb
sub
pop
xchg
ja
enter
negl
adc
repz
addl
enter
rcrb
loope
mov
dec
mov
mov
push
cmpsb
jge
xchg
mov
or
jle
je
jmp
add
pop
or
mov
add
stos
pop
mov
popa
movb
gs
jb
pop
in
lret
pop
adc
call
pop
loope
aad
insb
jecxz
mov
pop
stos
add
or
push
or
dec
fmull
mov
int
shrb
lds
adc
loope
pop
repz
mov
les
jns
dec
test
pop
movsl
sbb
cld
cmp
aas
jns
je
aas
adc
mov
add
movsl
aad
das
lock
jb
pop
add
jg
rol
ja
pop
xchg
mov
lcall
mov
cld
int
es
int
je
insl
jbe
lods
subl
push
pop
and
jae
ret
cmpsb
add
and
addr16
mov
mov
jne
mov
or
fwait
inc
flds
shlb
add
into
lock
nop
pop
cmp
pusha
mov
cmpsb
aaa
add
shl
aas
jo
ud2
call
pop
or
mov
jl
in
pusha
jae
subb
cmp
int
and
dec
adc
xchg
sahf
mov
jmp
xor
scas
inc
rcll
xor
dec
stc
outsl
stos
leave
aad
add
js
pop
jp
cmpsb
inc
jo
dec
lock
sbb
js
adc
mov
jno
push
xorl
mov
inc
and
daa
testb
lods
insb
test
inc
cli
fldenv
push
xchg
out
popa
jbe
cmp
dec
jne
dec
orb
movsb
repnz
aad
cmpsb
xor
xor
mov
out
or
clc
hlt
mov
mov
xchg
jno
mov
jl
lea
and
xchg
arpl
jns
jp
xor
mov
dec
cli
mov
int3
jb
xchg
add
insb
movsl
mov
in
jnp
cmp
add
pop
xor
or
pop
divl
outsl
mov
mov
add
pop
imul
dec
lret
xor
inc
jns
sarb
js
shr
and
repz
cmp
mov
xor
xor
xchg
movsb
or
dec
xchg
or
xor
mov
outsl
sahf
insb
jl
or
and
popf
adc
movb
daa
xor
cltd
mov
ss
pop
outsb
push
xchg
mov
dec
inc
mov
imul
jnp
add
cmp
subl
and
scas
dec
xchg
repnz
sbb
pushf
add
push
filds
or
ret
cwtl
cltd
push
iret
ficompl
into
movsb
pop
pop
dec
adc
in
shlb
es
dec
sbb
rcrl
xchg
mov
dec
sbb
inc
lcall
jo
loopne
fnstsw
out
sar
sbb
cmp
or
mov
fld
push
scas
mov
mov
sbb
cwtl
jmp
add
lret
scas
outsb
and
jl
addr16
adc
sbb
sahf
aas
ja
rcr
addr16
stos
or
arpl
xor
mov
incb
cmp
mov
sbb
or
outsb
mov
and
inc
pop
fimuls
cmpb
push
or
addb
sbb
xor
pusha
xor
cmpsb
popa
jno
adc
stos
jmp
insb
jmp
sub
movsb
and
ss
and
lret
lds
ja
iret
hlt
mov
and
adc
mov
xor
imul
les
les
add
scas
cmpsb
frstor
outsl
lock
sub
sub
adc
hlt
push
int
add
inc
pop
inc
pop
andb
push
ret
in
pusha
adc
sbb
scas
mov
push
push
repnz
pop
push
xor
or
mov
inc
inc
test
inc
int3
and
sub
jl
cmpsl
lret
xor
cwtl
mov
pop
pop
shrb
xchg
and
fistpll
fsubl
outsl
jl
cmp
rorl
mov
push
and
dec
loopne
insb
push
ficoml
dec
jne
mov
insl
imul
fimull
inc
cwtl
das
scas
movsl
xchg
gs
xlat
mov
sbb
setae
fbstp
xchg
push
inc
mov
enter
inc
dec
stc
xor
ljmp
push
jae
hlt
scas
dec
dec
rorb
jo
mov
jb
loope
addr16
aas
or
xchg
cmp
adc
jno
xor
lret
and
push
xchg
jecxz
or
xor
sub
std
sbb
push
adc
pusha
jne
or
xor
dec
mov
out
push
cmp
mov
xlat
push
or
aaa
push
cmp
jle
adc
arpl
xor
dec
jp
sbb
fiaddl
mov
add
and
push
js
pop
pop
mov
mov
mov
faddp
mov
mov
mov
movsb
daa
mov
mov
pop
aas
insb
dec
sbb
repnz
or
or
int3
inc
dec
aaa
xchg
push
jo
mov
cmp
movsl
xchg
pop
jmp
xor
js
xchg
jbe
xor
hlt
divb
lock
test
and
cmp
fwait
xchg
lods
or
lods
clc
push
shlb
dec
dec
or
roll
out
jge
mov
out
fistpll
inc
ljmp
pop
ret
scas
xor
test
add
pop
push
out
mov
jns
ja
xchg
ficoml
jbe
xchg
incl
mov
mov
pop
in
std
fisubs
dec
out
out
fistps
sti
mov
movq
mov
in
push
sbb
mov
mov
or
pop
arpl
inc
or
cmp
aam
ss
cmp
cmp
push
out
dec
int3
sbb
xchg
mov
mov
push
js
daa
fs
or
aad
jo
jg
mov
fnstenv
pusha
ficomps
imull
fmul
xor
xchg
icebp
int3
sub
and
adcl
dec
add
or
mov
ficompl
mov
in
rorb
xor
lds
inc
ret
roll
or
ds
xchg
lods
add
mov
inc
xor
pop
push
fistps
mov
dec
inc
ja
outsb
ds
mov
mov
cmp
mov
test
mov
out
xor
adc
lret
repnz
lret
aaa
aas
psadbw
fidivl
xor
add
xchg
inc
sub
mov
jae
int3
push
negb
pusha
push
stos
in
push
cltd
ret
cmp
mov
dec
add
inc
sub
ja
cmp
mov
icebp
sub
clc
aaa
xor
mov
xchg
or
stos
outsb
stos
inc
mov
inc
sti
roll
add
inc
stc
push
enter
call
das
lret
mov
xlat
xchg
jns
cmp
mov
or
lahf
and
adc
ret
in
xchg
int
mov
mov
or
popf
iret
mov
loope
xor
mov
mov
lret
adc
inc
les
dec
sub
jmp
inc
das
sbb
inc
cmp
mov
dec
add
pop
mov
jb
repz
inc
lds
fdivrs
xchg
test
xchg
sbb
add
mov
jecxz
das
push
push
stc
call
jp
jno
add
pop
xchg
aas
add
cld
or
test
mull
test
bound
shll
subb
jg
mov
jp
or
jmp
stc
repnz
jo
es
int3
sub
add
adc
and
lods
jno
xor
push
mov
cmp
outsb
adc
imul
je
cmc
bound
push
push
jae
add
out
adc
lea
pusha
mov
pop
test
adc
jo
jo
insl
xchg
loopne
pusha
and
sarl
xor
scas
jg
push
fstpl
mov
push
xchg
xor
push
add
xchg
sub
add
movsl
pop
nop
mov
insb
daa
and
xchg
push
mov
or
test
inc
inc
out
pop
aam
in
and
mov
ret
or
into
das
cmp
pop
mulb
pop
outsl
hlt
jne
sub
cmpsl
jnp
rcrl
addl
daa
dec
insb
lock
shll
or
and
and
imul
std
xor
push
jp
mov
jmp
inc
dec
scas
mov
pop
loopne
movsb
cltd
aam
adc
fidivrl
mov
sbb
adc
aas
dec
push
adc
pusha
outsb
xor
sub
lahf
inc
hlt
movsl
aas
int
xor
mov
les
sahf
repnz
ja
outsl
lods
repz
les
xchg
and
mov
cwtl
xchg
lods
sarl
enter
add
jl
test
addr16
jle
popl
test
popf
neg
hlt
addr16
dec
add
jg
popa
push
mov
inc
out
movsb
mov
push
sbbl
xor
push
inc
mov
inc
and
fildll
orl
mov
pop
stos
push
repz
hlt
add
push
fcompl
popa
out
mov
xor
push
stc
inc
test
lcall
push
add
cmp
scas
jp
aas
xor
mov
rcll
sbb
mov
subb
pop
and
pop
popf
out
shrb
rcll
outsb
lea
push
mov
lea
test
sti
mov
das
test
xor
sbb
imul
test
xlat
fs
jnp
in
stos
mov
adcl
push
cltd
add
xlat
inc
pop
adc
add
jge
xchg
aad
testl
insb
cmp
or
add
add
mov
and
call
notl
pop
fildl
sbb
mov
xchg
mov
fs
daa
add
inc
sbb
arpl
repz
pop
mov
addb
data16
inc
repz
pop
pop
mov
out
daa
lods
inc
jg
out
out
pop
jae
jo
femms
rolb
add
jne
mov
and
or
push
pusha
pop
sbb
push
xchg
jge
rorb
add
packuswb
adc
in
nop
loop
mov
pushf
mov
push
dec
pop
mov
insb
lea
xchg
xchg
cmp
dec
ja
data16
cli
in
fsubrl
xchg
je
sub
cmp
gs
ret
add
and
jnp
aam
sub
ss
insl
lret
cli
inc
and
out
repnz
add
dec
jno
add
data16
cmp
jbe
xchg
sahf
cmp
sub
pop
je
popa
in
add
xchg
jmp
jmp
mov
lock
data16
aas
cmp
push
aaa
xchg
jnp
lcall
les
and
add
or
fistpl
cmp
jno
loope
add
pmaxsw
cmp
call
push
fs
jb
aad
push
repz
repnz
xchg
es
rolb
aad
xchg
arpl
mov
mov
pop
pop
repz
das
xor
rorb
dec
lds
inc
push
xor
jmp
pop
push
pushf
jecxz
xor
inc
push
mov
add
mov
roll
push
into
sub
ljmp
aaa
lods
inc
loope
mov
push
in
jle
in
bound
aaa
cmp
adc
xchg
in
xchg
nop
jbe
jae
sbb
dec
roll
mov
jns
lods
stos
aad
push
subb
jb
loop
cmpsb
inc
pushf
dec
mov
scas
scas
jns
mov
cld
jbe
cmp
mov
sbb
data16
mov
jecxz
das
jmp
fcomps
aad
xchg
repz
jmp
mov
test
jle
and
mov
das
dec
sbb
mov
xchg
jne
into
jmp
in
fisttpll
adc
je
movsl
dec
gs
push
sarb
in
and
xchg
xor
xchg
sbb
and
rorb
mov
jle
movsb
imul
data16
inc
stc
inc
push
std
in
imul
inc
jne
mov
mov
pop
xchg
xchg
pushf
sahf
sub
idivb
dec
cmp
xchg
pop
pop
test
ljmp
and
push
and
cmp
addr16
lds
movsl
ret
les
mov
int3
pop
stos
leave
in
ja
xchg
mov
sti
and
std
movsb
jecxz
stos
mov
shrb
ja
mov
es
pop
stos
nop
or
add
push
jne
addl
scas
enter
imul
mov
sub
pop
or
jns
jmp
mov
std
rcrl
mov
in
adc
fimull
jp
insb
enter
lea
pop
adc
cmp
icebp
and
addr16
shll
mov
cmpsl
inc
dec
aas
or
icebp
or
mov
lret
or
inc
lods
test
imul
lods
jmp
fcomps
push
mov
je
sbb
sub
mov
sub
jecxz
movsb
bound
shlb
ja
jbe
adc
xor
clc
lods
scas
mov
xchg
out
cmp
pop
loopne
xchg
pushf
jno
cmp
out
outsb
stc
sbb
cli
xchg
rorb
mov
movzbl
jp
push
pushf
movsb
popa
mov
call
data16
xchg
adc
inc
adc
jg
adc
xchg
test
mov
sbb
xchg
fmull
pop
jmp
sbb
mov
les
or
add
dec
dec
add
cmpsb
in
lret
inc
shlb
dec
bound
cmp
and
hlt
jbe
push
mul
add
push
aaa
cmp
mov
pop
mov
pushl
pushf
push
pop
dec
push
pop
cli
push
dec
loopne
ljmp
adc
jmp
mov
icebp
lods
dec
aam
dec
das
adc
out
inc
cmp
jge
cltd
dec
mov
std
stos
xchg
mov
pop
ja
inc
call
jnp
fiaddl
mov
push
mov
sub
cwtl
mov
xor
sbb
cmp
or
jp
push
hlt
pop
and
ret
sub
fucomip
inc
call
aaa
add
outsl
int
add
jge
pop
lret
outsl
insl
call
int3
push
push
sub
add
sbb
int
xchg
jmp
jl
lods
lcall
sbb
and
xchg
mov
sub
xor
adc
inc
inc
jle
in
sub
dec
dec
stos
xchg
or
xchg
mov
or
pop
jbe
pop
mov
fstl
imul
stos
inc
imul
test
aaa
add
cmp
xchg
sub
pop
ljmp
xchg
popa
mov
shrb
dec
xchg
shlb
sbb
mov
dec
ret
mov
push
sti
sbb
cmp
cmp
loopne
xlat
into
lods
inc
sti
loop
sbb
and
xor
sbb
pop
jne
sbb
dec
adc
push
lock
movsb
fcmove
mov
xor
push
pushf
sub
dec
add
adc
xchg
cmp
inc
fwait
sub
stos
loopne
push
adc
loope
pop
xchg
xchg
add
sbb
data16
push
jmp
mov
jle
push
pop
cmp
stc
pop
jecxz
cmp
push
jmp
adc
mov
push
sub
cmpsb
in
push
fsubr
js
lret
bound
int
push
int
fidivrs
push
in
cld
mov
xor
arpl
jne
jg
or
in
clc
push
xor
or
lret
mov
test
fucomi
adc
nop
xchg
cmp
xchg
and
mov
lea
xchg
hlt
in
mov
inc
bswap
call
imul
mov
mov
mov
std
push
dec
ja
aaa
testl
sub
addr16
or
arpl
push
cmp
leave
sbb
ljmp
lahf
in
add
add
cmpsl
xor
aad
into
mov
scas
xchg
leave
xchg
scas
shlb
cmp
sbbb
jns
sub
xchg
pop
jbe
clc
mov
out
les
ficoml
aad
stc
push
icebp
mov
fstpt
push
sbb
mov
sub
popa
xchg
imul
sub
test
xlat
fdivrs
cmp
push
or
les
callw
lods
out
push
test
insl
insb
mov
jb
out
test
aas
mov
or
into
dec
data16
movnti
push
adc
popf
or
notb
fcompl
sahf
outsb
in
dec
mov
sub
pop
and
mov
adc
adc
pop
sahf
ljmp
mov
jl
cld
and
or
iret
ficoms
xchg
scas
sub
adc
jb
cltd
push
jmp
das
int3
fucomip
ret
rcl
xchg
and
push
adc
push
xchg
ret
sub
lcall
stos
push
ja
sbb
sbb
or
mov
cmp
inc
cmpsl
inc
cwtl
dec
daa
sahf
imul
cmpsb
repnz
out
hlt
test
mov
stos
inc
cmp
lea
mov
insl
lahf
fstps
mov
out
jo
cs
das
xor
xor
push
scas
sti
pop
pusha
dec
inc
mov
enter
loope
jl
push
cmp
pop
ja
pop
addb
dec
mov
rcrb
in
ja
nop
xor
cmpb
in
and
or
xchg
xor
mov
out
push
lahf
sbb
and
hlt
pushf
push
and
je
test
leave
push
fucomi
push
es
fs
out
add
pop
imul
dec
scas
mov
sbb
shll
cli
push
add
dec
mov
push
fsubp
out
jnp
sub
popa
add
mov
test
mov
mov
add
jg
jecxz
orb
out
cmp
mov
mov
jl
add
clc
add
or
jo
mov
out
dec
in
jecxz
out
jle
push
push
std
jl
push
insb
in
test
jb
dec
mov
sbb
push
fs
rcrb
iret
cltd
pop
push
movsl
fsubrs
in
xchg
mov
hlt
cmp
sub
cli
ds
stc
dec
adc
push
loop
jp
imul
testb
movsb
and
into
ror
ret
iret
add
repnz
adc
iret
xor
int
rcl
sub
push
cmp
add
clc
sub
add
jecxz
mov
lock
and
inc
outsl
loop
or
clc
sbb
ljmp
xlat
jg
lods
fildl
mov
sbb
mov
jb
cmpsb
insb
push
andb
int3
ja
xchg
mov
emms
xchg
dec
leave
jae
shll
pop
or
jns
adc
repz
mov
ja
aas
inc
xchg
test
pushf
stc
rcrb
xor
lds
testl
pop
mov
das
push
push
int
jg
bound
shl
jnp
and
clc
mov
jg
outsb
or
mov
inc
and
stc
rcl
xor
aad
pusha
jbe
faddl
cmp
movsb
lcall
aaa
sub
mov
push
adc
loope
xchg
jne
lcall
xchg
into
pop
cmpsl
and
sub
int
mov
xchg
and
jns
dec
popa
jmp
out
stc
jmp
out
add
mov
in
mov
cmp
push
aam
jecxz
and
adc
sub
and
stos
or
or
pop
inc
lret
xor
jae
and
aaa
sbb
test
rolb
sbb
sahf
pop
cmp
jns
fwait
pushf
imul
push
mov
lods
adc
into
mov
push
scas
cmp
push
pop
outsl
lods
jge
repz
nop
sahf
ljmp
inc
xchg
arpl
inc
jno
test
pop
in
xchg
push
xchg
mov
sbb
ss
and
xor
push
aam
and
inc
aad
xchg
aad
xchg
inc
jnp
mov
push
incb
enter
xor
push
loop
fwait
and
sbb
push
mov
xchg
scas
sub
aad
push
aam
cli
loope
or
xor
in
dec
or
xchg
stos
bound
orps
fmull
mov
mov
jbe
dec
sahf
xchg
xor
mov
ror
push
push
insb
loope
mov
out
lret
mov
clc
sbb
jp
ljmp
inc
mov
mov
and
mov
xchg
lret
iret
and
std
and
test
mov
inc
mov
mov
popf
mov
mov
cwtl
icebp
add
inc
rol
and
dec
shr
jbe
push
sti
test
push
in
sbbb
int3
mov
into
and
pop
mov
ljmp
xchg
shl
lock
pop
and
ja
add
bound
jl
dec
test
cmp
or
inc
add
or
push
jg
adc
sbb
lcall
pusha
mov
xor
out
gs
nop
add
daa
stos
out
aam
pop
lods
sbb
popa
xor
shrb
xor
idivl
shlb
sub
mov
inc
adcl
sub
sub
jg
or
cmp
dec
jne
inc
sbb
cmpsb
jne
fistpll
fwait
subb
lods
push
inc
mov
ja
inc
movups
add
jp
mov
mov
and
adc
test
rcll
add
ljmp
aaa
adc
xchg
iret
and
test
pop
aaa
popf
jnp
push
ret
sti
pushf
movsb
ljmp
add
cmp
add
xchg
inc
add
or
adc
xchg
subl
inc
lret
pop
orb
cwtl
inc
jae
cmpsl
and
sub
push
arpl
sbb
and
push
dec
lods
mov
ds
mov
cmpsb
test
popf
dec
xor
cli
test
push
icebp
jmp
inc
pop
clc
cmpsl
mov
jnp
jle
inc
and
sub
mov
xlat
fmuls
and
jae
adc
cmp
aaa
adc
and
movsb
push
pop
movl
arpl
push
mov
pop
add
sub
sbb
xchg
jl
gs
ja
jg
jl
cmp
sub
inc
mov
sbb
sbb
push
cmpsl
enter
and
fstpt
icebp
pop
push
mov
rorb
or
or
sbb
xor
or
mov
mov
or
push
jp
push
jecxz
jns
sub
and
xchg
adc
ds
loope
bound
sub
cld
sub
xor
push
xchg
stos
xchg
arpl
dec
in
idivl
fdivs
dec
push
repz
int3
in
jnp
add
daa
push
and
jno
bound
je
jne
call
lcall
jne
repz
dec
xchg
call
jb
sbb
movsb
jge
jbe
fwait
mov
xchg
jo
out
movsl
ja
sub
pop
jae
nop
push
test
or
cmp
hlt
push
loopne
mul
xchg
shl
adc
inc
xchg
sar
iret
mov
addr16
push
nop
inc
jl
ja
pop
xlat
in
fidivs
sbb
repz
aad
add
fmull
mov
insl
sub
mov
sub
ret
mov
xor
pusha
sbb
cmpl
popa
lahf
adc
mov
cmpsl
mov
inc
mov
int
or
popf
inc
insb
sbb
sbb
xor
idivb
sbb
out
ret
mov
and
add
mov
or
add
out
dec
cmp
stc
xchg
mov
lock
pop
out
xor
xchg
xchg
mov
mov
sbb
jns
notl
aaa
sub
push
xor
pop
ds
lods
push
scas
add
rol
leave
shrb
push
sti
mov
xchg
xlat
shll
and
mov
fidivrs
repnz
jb
cwtl
jmp
sub
mov
cmp
jo
adc
or
aas
jg
lahf
test
movsl
xor
dec
xchg
fsubp
jg
push
fdivs
and
aas
ret
add
xchg
dec
sbb
loope
push
cli
dec
arpl
mov
or
outsl
push
int3
mov
divl
cmc
mov
sbbb
or
cmpsb
mov
js,pn
out
sub
fsubp
faddp
adc
data16
fnstsw
add
lock
sbb
sbb
xchg
add
mov
push
dec
mov
dec
clc
roll
aam
mov
roll
dec
mov
and
mov
test
mov
push
ja
mov
xor
jecxz
dec
mov
sahf
inc
pop
cmp
stos
sub
sub
out
mov
fnstcw
sahf
sub
mov
mov
mov
sub
aam
cli
mov
lret
int
jno
call
jb
push
xor
push
mov
rcll
out
stc
test
add
push
es
mov
mov
ljmp
sbb
int3
sub
or
mov
dec
and
testl
adc
inc
mov
mov
or
cli
push
or
lock
inc
or
mov
inc
decb
dec
lahf
jecxz
and
mov
mov
sub
nop
bound
lods
xchg
shl
cmp
imul
daa
lock
lahf
clc
sbb
pop
pop
jae
scas
xchg
jmp
scas
sub
or
cltd
or
js
fdivrl
adc
js
out
or
mov
mov
xor
aas
inc
dec
push
lahf
ficoml
insb
insb
dec
inc
sub
stos
and
pop
mov
out
ja
push
aas
mov
shl
addr16
and
add
mov
and
and
dec
idiv
sub
dec
inc
int3
inc
pop
ss
lds
push
cmp
add
xchg
sub
mov
mov
icebp
xlat
leave
xlat
jno
adc
push
mov
pop
cltd
faddl
sbb
mov
push
pop
stc
jnp
pushf
rcrl
dec
mov
cmc
sub
test
int
cs
inc
lcall
cwtl
jmp
jnp
fldt
push
mov
in
add
mov
xchg
lods
and
mov
mov
mov
push
divb
stc
mov
and
testb
js
mov
out
data16
lret
or
lods
sub
sbb
pop
add
mov
loopne
clc
lahf
loopne
aas
sub
and
xorl
mov
adc
sub
mov
fiaddl
stc
mov
out
mov
and
popf
in
sub
iret
data16
push
add
and
hlt
fcmovbe
ds
xchg
out
xor
sub
in
ljmp
or
cmp
int3
dec
pop
mov
or
push
lret
mov
dec
jnp
mov
iret
mov
js
xchg
mov
push
jmp
jecxz
mov
jns
ljmp
movsl
adc
shll
and
in
jp
pop
mov
xchg
stos
into
das
sub
mov
or
ss
push
inc
nop
hlt
jg
inc
pusha
inc
and
mov
repz
xlat
int
sub
mov
call
bound
pop
mov
out
or
mov
lret
jmp
mov
roll
mov
dec
pop
andb
jecxz
xor
mov
push
sub
fldcw
orb
mov
stos
mov
or
test
mov
out
hlt
jbe
pop
movsb
xor
fs
pop
add
inc
or
ret
cmp
cltd
or
hlt
mov
outsb
mov
mov
in
in
out
ds
test
and
dec
inc
fcmovnb
sub
or
inc
push
cmp
push
adc
lea
sarl
ret
mov
insb
loope
into
stc
loopne
add
pusha
lea
push
mov
repnz
data16
movsl
mov
adc
js
mov
fcomps
notb
mov
push
jge
mov
aas
loopne
add
cmp
dec
or
addr16
mov
insl
popa
loope
adc
cmp
in
aas
arpl
mov
pop
or
pop
and
jl
and
xor
in
mov
dec
adc
sbb
adc
dec
pop
push
fstpt
mov
jp
pop
gs
or
in
ja
imul
dec
cli
xor
dec
shl
inc
dec
or
movsl
test
and
mov
push
sbb
xchg
and
sub
and
push
imul
shlb
imul
push
mov
ja
mov
xlat
stos
dec
cld
dec
call
sahf
arpl
adc
rolb
jnp
jb
and
cmp
sbb
aam
mov
jecxz
or
add
popf
repnz
int3
pop
in
push
mov
jle
mov
mov
push
cmp
pop
scas
fists
js
push
mov
push
push
stos
push
pop
imul
je
sbb
jns
xchg
ds
xchg
inc
mov
push
lret
fidivrs
sub
repz
mov
subl
add
and
inc
insb
std
pop
push
jmp
cmpsb
cwtl
cmpsb
sbb
jp
movsl
fmull
xchg
sbb
je
push
mov
mov
cmp
sbb
lds
pop
stos
nop
jecxz
roll
and
neg
rcrl
push
pop
repnz
push
mov
mov
jo
sbb
jo
les
popf
mov
popf
pushf
loop
sbb
lods
sti
repnz
push
xchg
mov
inc
movzbl
loopnew
mov
push
xchg
cltd
jecxz
enter
xor
movsl
out
inc
in
rolb
imul
push
enter
push
aad
push
stos
rorl
mov
movsw
call
cmp
movsl
sbb
mov
xor
ret
jge
shll
xor
bndstx
fmull
cld
sub
test
jp
mov
dec
enter
jne
sbb
xchg
ds
dec
xor
or
aas
es
enter
fbstp
fists
imul
int3
xchg
and
or
inc
xchg
cmpsl
pushf
xor
add
jns
into
pop
fldenv
cmpsl
call
cli
xchg
jle
add
mov
es
push
lahf
sbb
ja
mov
fnstenv
cmc
sti
lods
adc
iret
in
lahf
ss
nop
rorl
insl
data16
push
xchg
jb
push
mov
sbb
mov
cmpsb
pop
aam
dec
inc
add
mov
mov
mov
inc
adc
pop
cld
and
decl
lods
fldt
or
mov
pushf
aas
mov
and
jge
shlb
and
aad
mov
xchg
or
test
pushf
mov
in
test
dec
adc
sub
jl
loope
jnp
add
stc
sub
bound
jbe
pop
and
test
inc
push
test
insl
lret
scas
aas
cmp
test
sub
cwtl
xor
pop
loope
jne
lds
mov
push
popf
aad
mov
jo
pop
mov
push
dec
rcr
mov
in
mov
pop
xor
cmp
adc
nop
repnz
sti
mov
pop
mov
cld
out
adc
jge
pushf
pop
mov
xor
mov
jne
push
sbb
icebp
jae
push
pop
inc
ret
mul
adc
add
xchg
daa
sbb
pop
mov
pop
shll
cmpsl
pop
inc
mov
add
pop
pop
jb
push
xchg
mov
jmp
push
roll
repnz
dec
mov
pmulhw
clc
int
and
lea
mov
lcall
aaa
xor
sbb
dec
or
ljmp
jae
mov
push
pop
adc
add
mov
jg
adc
imul
pop
mov
add
jg
push
lret
rclb
xchg
mov
mov
jno
and
out
arpl
xchg
shrb
popf
jbe
adc
dec
adc
push
addr16
dec
and
push
add
xchg
dec
cwtl
xchg
sar
sub
insb
sbb
jge
int3
pop
lcall
out
pop
jg
push
fwait
je
pop
jo
nop
mov
dec
scas
mov
inc
nop
jl
xchg
or
mov
clc
stc
outsb
cmp
mov
pop
sub
pop
add
sbb
mov
pop
ret
scas
lods
cli
add
pop
xchg
and
mov
and
jns
push
pusha
mov
pop
pop
xor
mov
rcrl
lods
xchg
mov
cmpsb
shrb
adc
repnz
dec
mov
push
cmc
inc
stos
scas
mov
inc
mov
rcrl
sub
sbb
pop
pusha
addr16
rolb
adc
jg,pn
lcall
pop
mov
adc
lret
or
leave
cmp
repnz
inc
jle
mov
jno
adc
int3
push
std
sub
or
jb
push
cmp
pop
test
adc
mov
lock
out
and
inc
pop
mov
decb
mov
data16
imul
imul
push
movsl
lret
movsl
mov
mov
or
rcrl
fs
inc
jae
sbb
xlat
pop
rcll
aas
ret
inc
inc
rcr
aad
clc
jne
push
adc
daa
adc
pushf
jp
int
addr16
mov
fisubs
ja
adc
xor
sbb
mov
mov
das
into
inc
das
jge
std
jmp
xor
pop
hlt
jle
ret
xor
and
cmc
inc
loope
test
cs
or
mov
movsl
sbb
push
push
jb
fisubrl
cmp
test
data16
addl
repz
mov
cmp
shl
xchg
xchg
flds
fdivrs
adc
shll
sahf
push
xchg
pop
push
push
in
pmaxsw
cs
push
in
and
roll
push
int
pop
sbb
or
test
imul
jmp
adc
dec
mov
xorb
pop
sbb
inc
mov
dec
int
and
pop
outsb
xlat
filds
jmp
je
mulb
or
out
mov
xor
flds
hlt
cmp
dec
mov
ss
mov
xor
and
fcompl
push
imull
pop
mov
or
mov
xchg
inc
cmpb
sbb
mov
outsl
xchg
imul
addl
jo
call
cmpsl
jg
inc
adc
mov
incb
ret
mov
push
inc
cmpsl
sbb
sahf
sub
stos
jecxz
clc
mov
lea
jo
mov
or
push
sub
orl
les
cmp
xorb
das
ficomps
insl
or
pushf
shll
hlt
loopne
insb
mov
stos
jno
mov
mov
imul
jns
adc
jmp
pcmpgtd
call
lea
pop
wbinvd
xchg
into
fsubr
das
sub
cmovs
repz
imul
and
and
aaa
shll
pop
in
jne
mov
adc
push
mov
jecxz
cmp
loopne
loopne
inc
fidivl
sarb
sub
or
xchg
sbb
push
lods
adc
sub
sub
push
outsl
pop
je
rorl
test
addr16
mov
jnp
jae
mov
push
test
dec
inc
rcll
xor
adc
xor
enter
fidivl
clc
xchg
sbb
insb
clc
sbb
jecxz
stos
cmp
add
pop
push
stos
js
test
out
sbb
jne
xor
sarb
mov
ror
mov
dec
test
mov
nop
and
lret
mov
mov
cmpsl
outsb
adc
push
jae
inc
jecxz
mov
lea
inc
ret
data16
out
mov
enter
pop
push
push
dec
adc
lret
fld
push
cld
shl
lret
and
jnp
sbbl
dec
loopne
sub
cmp
fstps
adc
or
adc
adc
pop
push
jae
aad
jbe
pop
cmp
clc
push
pop
in
loope
jl
in
jnp
out
mov
std
sub
stos
sub
xor
inc
push
in
and
js
or
adc
xlat
test
inc
mov
push
rolb
mov
es
leave
mov
cmp
push
in
sti
in
or
push
outsb
jmp
gs
push
push
and
arpl
xchg
cmp
popf
and
cmpsb
roll
push
dec
or
loop
sbb
sub
and
push
loop
mov
sahf
lods
bnd
dec
mov
and
push
and
test
xchg
cmp
xchg
dec
mov
shrb
loopne
aam
mov
daa
outsb
cmp
test
loop
inc
add
ret
sbb
dec
adc
mov
push
out
aad
out
xchg
dec
xlat
je
jle
cmp
sub
or
or
in
jne
cmp
push
sbb
xchg
jnp
adc
lods
lods
mov
push
outsb
xchg
inc
loopne
mov
mov
add
xchg
jne
mov
cltd
in
fwait
adc
out
sbb
mov
mov
lock
popf
movsb
jb
push
in
inc
add
mov
lods
inc
or
shrl
pop
rolb
jne
pop
adc
or
jl
mov
nop
jo
call
daa
cld
jo
mov
inc
mov
outsl
test
ss
mov
cmp
sub
lret
test
popf
daa
dec
pop
pushf
pusha
aam
mov
dec
inc
xor
cmc
aaa
dec
bound
bound
xor
xor
push
jns
cltd
or
test
lret
jle
adcb
in
popf
mov
xchg
and
leave
dec
cld
xor
inc
movsl
cmp
fmuls
sub
daa
xchg
roll
pop
rcll
jl
or
cld
xor
add
popa
imull
pop
sub
push
push
jg
scas
idivl
push
es
jge
sub
imul
xor
sarb
nop
cmpsb
xchg
xor
pop
cmpsb
in
fdivr
aas
mov
sub
pop
xchg
mov
getsec
mov
xor
mov
jo
loope
test
fstpt
inc
push
pop
pop
cmpsb
push
lds
jmp
sub
or
incb
sbb
test
outsb
adc
push
sbb
adc
xor
fsubl
gs
jmp
cwtl
xor
jbe
sub
xchg
pushf
nop
cmpsl
cmp
and
xor
dec
dec
bound
ljmp
push
lock
adc
aam
dec
xor
popa
ret
dec
outsl
test
leave
sub
mov
sbb
pop
cld
push
aas
stos
lods
adc
test
leave
movsb
sahf
fdivr
stos
inc
dec
popf
adc
icebp
movsl
outsb
popa
inc
pop
mov
insb
cmp
xor
hlt
mov
imul
repz
dec
lds
ret
in
repz
out
outsl
sbb
push
jmp
push
push
pop
stos
sbb
pop
pusha
push
leave
test
or
data16
sbb
test
or
pop
jb
insl
out
sbb
in
imul
and
push
push
lods
fcmovbe
and
add
sub
dec
into
dec
shr
add
jae
jmp
rolb
ljmp
push
clc
pop
cltd
lock
rclb
rcl
mov
sahf
sub
aam
add
fildll
cwtl
in
les
or
or
pusha
in
ja
inc
xchg
mov
arpl
pushl
aaa
sahf
pop
int3
jecxz
jbe
fwait
and
outsb
iret
movsb
std
lods
xchg
in
push
push
test
xor
mov
adc
jl
sub
lods
pop
mov
cld
popf
lahf
gs
mov
adc
xor
inc
enter
cmp
idivb
add
jmp
pop
fisttpll
add
cmp
in
jnp
inc
lods
fldl
inc
les
mov
dec
test
jmp
iret
cmc
test
xor
and
out
test
xor
iret
xchg
cmc
fmulp
xchg
in
or
sti
loopne
ja
or
jl
dec
xlat
lcall
stos
out
mov
push
dec
and
cmp
pusha
cmp
sub
cltd
sti
cli
pushf
lea
rcr
scas
fbstp
call
pop
pop
fldcw
cmp
loopne
enter
adc
jne
dec
or
mov
movl
stc
cmp
fists
jb
lock
xchg
rcrl
jns
pop
jle
mov
push
subl
les
out
out
sti
add
xor
mov
ljmp
ret
jge
ljmp
stos
incb
dec
iret
push
jg
hlt
cmove
rcrl
cld
dec
loop
push
mov
loop
sti
pop
loope
xor
loopne
jmp
push
xchg
aam
pop
mov
aam
add
loopne
mov
mov
rcrl
jbe
sub
xlat
idivl
mov
outsb
fisttpll
ret
cvtpi2ps
orb
mov
cmp
sbb
popf
shlb
inc
aam
jmp
int
shl
and
add
leave
xchg
mov
movsl
jl
pop
xchg
or
dec
std
jne
notl
adc
or
or
pop
js
xchg
addr16
aas
lcall
out
outsb
js
push
je
mov
out
add
and
add
aas
adc
in
call
lds
xchg
movsb
orb
iret
mov
sbb
cltd
lcall
leave
add
dec
mov
lods
push
jge
adc
aad
xchg
cmpsl
sbb
push
jb
push
int
pop
xchg
pop
mov
mov
mov
xlat
and
lret
je
movsl
push
or
std
test
fcom
and
adc
clc
imul
sbb
mov
sub
stos
gs
add
push
mov
sub
loopne
inc
dec
addr16
inc
sbb
lods
aad
dec
mov
dec
push
jo
jecxz
and
lcall
jae
clc
mov
push
sub
xchg
aas
mov
sub
xchg
imul
xchg
int
shll
out
pop
pop
sub
xor
push
psubsb
jae,pt
sub
push
cmp
jecxz
aam
jle
out
je
push
xchg
pop
lock
or
or
mov
int3
dec
add
add
mov
add
movsb
sub
sbb
xor
inc
mov
mov
push
ja
test
das
enter
adc
jo
pusha
pop
shlb
lret
pop
dec
nop
push
jnp
stos
outsb
dec
sub
cwtl
mov
mov
sub
arpl
rclb
mulb
movsb
pop
sub
sub
xor
mov
pop
dec
ret
dec
ljmp
sub
inc
insb
push
rclb
mov
loop
sub
pop
cmpsb
rolb
data16
mov
fsubs
xor
mov
ffreep
pop
cltd
sbb
into
std
loop
cmp
fcomps
xor
ja
packuswb
pop
inc
pop
add
in
shlb
cmpsl
add
arpl
pop
mov
adc
mov
mov
std
mov
mov
push
and
xchg
outsl
and
sub
pop
add
sub
jl
pop
fistps
mov
and
fwait
imul
or
stos
xchg
repz
les
adc
push
jmp
adc
in
loopne
aad
stc
es
mov
and
cld
add
cld
mov
pop
outsb
adc
shr
pop
ds
xor
push
cmpsl
testb
js
ja
out
roll
inc
cli
jmp
and
scas
stc
movsbl
fnstsw
inc
mov
fst
add
pop
fstpt
lods
jg
in
xchg
mov
sbb
test
mov
fs
push
hlt
xchg
sub
jg
popa
cmp
lahf
sbb
lock
push
push
bndldx
mov
test
hlt
lods
cmpsl
pop
xor
fimuls
sar
rolb
pop
fst
xchg
mov
dec
xchg
jns
add
aad
dec
xor
push
lcall
sub
mov
loope
xorb
xlat
loope
dec
fmuls
or
xchg
or
ljmp
fstpt
dec
rclb
pop
into
sbb
jns
loop
cmpsb
sub
sbb
std
and
test
cld
lcall
fisubs
cs
pop
mov
xor
xchg
out
adc
int3
jae
push
inc
xchg
mov
test
mov
push
cmp
cmc
lods
sbb
call
jno
lret
in
mov
stos
push
mov
cmp
sbb
mov
das
mov
xchg
mov
jg
push
and
pop
cwtl
les
push
in
das
divl
and
ds
or
call
jnp
arpl
andl
and
lods
sbb
fcoms
insl
cli
movsl
pop
lcall
xchg
push
aam
mov
inc
mov
cmp
adc
call
in
lahf
fwait
adc
inc
sbbb
mov
out
or
jb
jp
mov
out
xor
sub
dec
ljmp
in
hlt
pop
xor
addr16
loop
inc
out
sbb
mov
lods
fsubrs
test
jae,pt
pop
push
dec
sti
mov
pop
mov
incl
mov
insb
and
sub
lcall
pop
fistps
addb
lock
mov
inc
ret
adc
dec
cmp
lret
adc
fs
or
mov
mov
je
push
add
jae
std
jecxz
stos
cmp
ret
movl
pop
cmpsb
xor
adc
xchg
mov
push
nop
add
out
nop
loop
dec
mov
lds
xlat
leave
inc
ret
add
addr16
incw
mov
int
inc
cmp
xor
dec
je
iret
mov
test
ss
inc
insl
insl
orl
jns
xor
jmp
push
inc
ss
fsubrl
in
fsubrs
mov
cmp
stos
dec
mov
mov
and
or
dec
mov
jmp
adc
stc
add
sub
mov
dec
cmp
inc
ret
xor
pop
cwtl
sar
fninit
cltd
xor
movsl
fsubrl
cli
pop
orb
fdivrs
jge
xchg
xor
cwtl
pushf
stos
lds
fcomps
shrl
test
add
test
jl
jl
push
jo
inc
pop
loope
cld
dec
rorb
or
fistpl
push
fsubrp
dec
in
fbld
loop
sub
movsl
cmpl
lods
jl
fcoml
not
sti
lods
inc
ds
cmp
pop
jns
jae
jmp
sbb
rcr
testb
xchg
ljmp
aam
dec
dec
test
lods
lods
mov
mov
dec
adc
mov
repz
out
out
cmp
imul
mull
mov
loop
es
jb
mov
mov
jge
jne
les
gs
sub
data16
or
stc
fcompl
out
outsb
adc
shrl
rol
xor
sbb
bound
mov
adc
clc
jp
daa
cwtl
gs
fcompp
lahf
xor
cld
pop
mov
shl
outsl
and
call
rorl
dec
and
shrb
xor
or
mov
loop
or
out
cld
lcall
aaa
int3
int
and
pop
jecxz
and
dec
outsb
adc
dec
ret
out
into
sti
imul
imul
fidivrs
shlb
sub
loop
push
jno
add
sub
in
pop
cmp
or
and
mov
cmp
imul
jnp
lcall
out
fs
xchg
icebp
mov
xchg
xor
xchg
negl
call
fcoml
rcrb
cmp
out
adc
arpl
push
fwait
mov
dec
clc
xchg
mov
jbe
adc
iret
scas
dec
orl
lret
sarb
sti
mov
and
push
inc
xchg
pop
in
xlat
es
mov
outsl
repnz
jecxz
scas
or
or
lret
fwait
adc
imul
int
xor
sarl
das
ds
mov
cli
std
adc
gs
xchg
out
lods
jmp
sub
push
call
xchg
or
and
pop
add
pop
xchg
nop
dec
sarl
outsb
inc
cmc
imul
test
in
and
subl
inc
push
fdivr
jl
mov
in
or
xor
push
imul
les
into
xor
scas
lods
cmp
mov
mov
mov
adc
xchg
loopne
mov
rcr
rorb
sbb
aad
cli
add
dec
scas
scas
insl
stos
stos
add
jbe
cmp
std
jle
or
imul
jmp
and
and
jl
push
xor
setne
mov
xchg
push
imul
push
sub
clc
push
testb
fcoml
movsl
jge
inc
outsl
pop
mov
call
adc
push
lret
addl
xchg
sub
inc
sbbb
test
inc
insb
or
mov
lods
mov
cmpsb
mov
and
scas
loopne
lcall
popa
daa
mov
fsubrl
cld
xor
fwait
pop
clc
dec
je
cmpsb
ss
adc
cmp
shll
repnz
mov
lea
pop
lds
pop
lds
and
popf
sbb
sub
jge
xchg
sahf
and
lahf
in
mov
mov
fiadds
ret
mov
dec
sub
jo
xchg
dec
sbb
mov
enter
mov
nop
and
hlt
cmp
pushf
push
and
inc
push
mov
mov
loop
mov
xchg
push
jno
xchg
push
loop
sub
fwait
mov
xor
cmp
add
xlat
jge
jb
dec
and
loop
out
fnstcw
rcl
or
jo
and
push
xor
mov
mov
sub
push
loopne
in
or
dec
arpl
dec
out
inc
dec
cwtl
insl
sarl
pop
fldenv
rorb
leave
leave
fcomip
jno
adc
cmp
or
add
dec
mov
and
dec
iret
fwait
inc
inc
or
shll
xchg
loop
popa
cs
mov
loope
inc
cltd
ljmp
cmp
xchg
and
iret
call
test
mov
insb
inc
inc
mov
sbb
lods
mul
push
bound
mov
mov
add
icebp
adc
mov
push
testl
testl
jo
xor
out
push
mov
inc
jae
mov
test
or
cwtl
sbb
lret
jge
mov
mov
cwtl
jle
frstor
jle
jge
pop
dec
mov
popa
sub
fnstenv
or
add
mov
fsubl
xchg
insb
out
lods
push
xchg
xchg
ret
in
repz
xchg
sub
push
notl
sti
xchg
popa
ja
and
or
inc
adc
pop
pop
adc
sub
mov
or
push
not
inc
popa
pop
mov
mov
lret
and
dec
pop
shr
mov
and
cltd
pop
mov
dec
sub
jb
mov
bound
mov
pop
dec
dec
lods
or
sbb
stc
xor
ljmp
sbb
subb
addl
add
nop
push
xchg
fsub
nop
pop
cmp
fs
enter
ret
loopne
dec
and
cwtl
ret
cmc
out
and
lea
push
repz
mov
enter
dec
or
cmp
mov
jg
push
test
cmp
mov
lock
adcl
add
in
jmp
pop
notl
stc
lods
pop
sbb
and
mov
dec
cmc
in
and
fildll
cwtl
lret
jle
lret
ss
loopne
add
pop
pop
inc
mov
cmp
rcll
inc
or
dec
sbb
test
sbb
mov
mov
xchg
jp
in
mov
clc
loope
adcb
cmp
in
mov
or
bound
cmp
repz
inc
cmpb
test
xor
and
ret
cmovnp
pop
mov
cmpsl
popf
in
push
sub
xor
or
pop
out
xchg
sub
or
ss
dec
sub
sbb
sbb
int3
hlt
enter
and
cltd
stos
loopw
pop
dec
das
jo
mov
in
mov
sub
push
or
mov
popa
dec
mov
inc
cltd
sbbb
and
inc
test
aas
xor
iret
cltd
mov
jg
xor
stc
mov
call
mov
addr16
aaa
fcomps
push
jecxz
mov
cmc
rdmsr
lock
fldl
iret
outsb
or
out
testl
sbb
cmc
out
ja
cmp
and
pop
or
repz
fsubr
lcall
lods
arpl
mov
movsl
lods
loopne
pop
inc
cmp
jmp
add
ljmp
xor
cmpl
add
leave
jno
dec
jp
cmovs
adc
repnz
ds
cmp
xchg
cmp
lahf
mov
and
loop
or
jb
push
inc
arpl
shrb
sbb
loop
mov
mov
es
xor
add
pop
daa
xor
mov
mov
push
daa
mov
bound
movsb
jae
ljmp
xchg
in
dec
pop
lret
push
ror
push
cmp
jbe
stos
xor
in
xor
add
sbb
jle
loop
cs
shr
out
mov
push
insl
sbb
ss
shrb
add
inc
pop
push
movsb
jecxz
push
cmp
pop
sbb
pushf
addl
pop
push
out
jbe
sbb
mov
sbb
into
popa
jb
xor
mov
adc
lea
fsubl
cld
jbe
mov
sti
stc
ja
cs
repz
jno
add
mov
rcr
and
jo
inc
mov
gs
mov
push
mov
cmpsb
out
out
test
repz
and
jge
mov
aaa
jnp
mov
pop
sti
push
icebp
sbb
xchg
or
jns
mov
and
inc
sbb
call
dec
stos
xchg
test
fsub
dec
int
lea
aad
mov
movsl
sub
adc
fdiv
push
mov
fstpl
jge
adc
pusha
xor
mov
jmp
mov
jmp
cmpsl
push
and
pop
xchg
sub
jmp
cmp
das
xor
ror
mov
xchg
xchg
aam
mov
aas
push
arpl
inc
int3
push
int
lods
sbb
stc
push
mov
xor
repnz
int
subl
mov
jg
flds
loop
and
jbe
jp
push
and
or
cld
loop
dec
fcmovnb
out
adc
or
fisubs
xor
jl
rcl
fdivrp
cltd
lcall
insl
mov
in
cmpsl
xor
in
add
test
sub
add
push
ja
divl
rcl
or
outsl
rorl
push
mov
sbb
inc
jl
pop
fwait
xor
popf
test
push
mov
fsubrs
cli
mov
in
aas
push
mov
mov
stc
mov
test
mov
add
fwait
push
mov
aas
xchg
lock
fdecstp
jg
js
and
pop
outsl
popf
jbe
push
ret
mov
push
or
shlb
adc
adc
mov
mov
xor
push
cmp
mov
jne
jl
xchg
dec
jb
push
insb
xor
les
inc
js
sbb
xor
hlt
movsb
mov
pop
daa
push
daa
jle
add
xor
inc
and
test
inc
sbb
aad
xchg
inc
pushf
mov
fstpl
and
push
sti
imul
push
adc
mov
mov
inc
jno
xchg
repz
mov
lea
lods
into
fadds
push
cmpsb
push
ret
call
push
pop
std
sarl
ljmp
scas
shlb
setp
mov
adc
inc
je
cs
mov
sbb
mov
jo
fs
rorl
cmp
sub
lcall
out
mov
jne
rep
ss
out
lcall
movsl
jp
xor
ss
xchg
xchg
push
dec
stos
insb
cwtl
and
push
andb
dec
call
cli
add
pop
mov
xor
bound
or
pop
sub
fldl
mov
mov
and
and
add
lock
jo
cli
dec
jg
and
xor
sub
push
sub
data16
or
cmc
fcmovu
inc
xor
in
sbb
pop
shll
cli
mov
cli
int
outsl
sub
and
adc
or
or
adc
mov
xchg
clc
mov
dec
stos
lock
jg
pushw
xchg
sub
mov
sbb
pop
dec
loop
fucomip
xrelease
inc
inc
lods
push
insl
clc
cwtl
or
out
cld
mov
cmp
aad
jmp
nop
mov
jne
push
sbb
das
aad
jne
xchg
cmp
js
lods
outsl
mov
stc
sar
sub
mov
bound
jl
ficompl
cltd
mov
jnp
lret
lods
xchg
sahf
repnz
or
into
rolb
cmp
mov
cmp
push
mov
xchg
fcoml
mov
sub
xchg
mov
lock
iret
int3
out
and
or
sub
adc
jecxz
adc
incl
inc
mov
sbb
fld1
jnp
pushf
hlt
add
popf
lret
mov
jmp
mov
mov
idivb
jne
mov
fcmovnb
ds
push
mov
jecxz
cmp
subl
adc
xchg
cli
in
mov
dec
pop
loope
sub
mov
jnp
xchg
sbb
rorl
or
movsb
mov
iret
cwtl
pop
cmp
add
adc
lds
sbb
stc
lea
lea
or
add
fwait
xor
pop
push
pop
insb
xchg
dec
jbe
pop
xchg
xorl
clc
dec
xor
dec
jno
incl
mov
add
xor
in
mov
and
dec
dec
mov
fstl
and
lret
lock
push
inc
into
jl,pt
inc
dec
aad
lahf
fwait
es
scas
insl
je
add
js
mov
or
jg
loop
test
push
mov
mov
orb
lock
jg
pop
out
pop
mov
mov
adc
mov
aad
rolb
add
into
movsb
mov
in
mov
add
xchg
shlb
sbb
dec
mov
jecxz
out
fistl
in
xchg
mov
pop
add
shlb
out
dec
push
inc
and
xchg
xchg
jmp
jns
out
pop
mov
dec
jle
mov
mov
xchg
jne
or
xchg
fwait
jno
pushf
sub
add
dec
mov
das
mov
mov
jnp
adc
movsl
mov
mov
adc
mov
mov
push
cmc
or
jo
inc
dec
jg
adc
mov
in
dec
jae
lea
lcall
notb
rclb
icebp
movsb
inc
adc
fs
nop
and
push
jbe
mov
push
arpl
and
scas
inc
imul
pop
stos
js
pusha
jns
leave
adc
cld
insb
pop
push
es
pop
rcll
fsubrs
push
pop
mov
lahf
jne
jp
fbstp
jns
mov
push
dec
pop
lods
lret
xlat
jbe
outsl
cmpsb
mov
pop
mov
jo
xchg
mov
and
push
popf
aas
outsl
push
stos
push
add
iret
pop
mov
mov
ficomps
int
mov
cmp
pop
je
or
out
push
enter
add
jns
push
insl
sbb
adc
add
into
jle
popa
movsb
pushf
cmpsb
cmc
pop
xchg
cmp
test
cmp
sbb
sbb
push
bound
testb
jl
std
cmpl
in
test
clc
data16
mov
pop
loope
andl
inc
or
in
gs
dec
cmp
xor
dec
loopne
fxch
clc
cs
popa
mov
daa
scas
or
addr16
lods
dec
pop
js
sbb
lds
xchg
jbe
dec
mov
cmp
jno
repz
insb
rcrb
mov
ficoms
repz
mov
jno
fists
xchg
jecxz
stos
xchg
popa
jo
sbb
inc
pop
xchg
fs
fdivl
mov
push
mov
out
pop
cli
cmpsb
into
pop
stos
fs
and
mov
dec
jno
push
divb
mov
orl
mov
test
les
pop
jae
loop
mov
sub
sub
inc
lods
sbb
divl
sarb
dec
mov
push
mov
movl
jg
lock
sub
scas
clc
sbb
jbe
in
push
xor
jb
loop
sbb
mov
shl
inc
cmp
pop
movsl
pop
adc
mov
movb
push
xchg
jg
movsl
scas
popa
xlat
fidivs
add
lods
and
fwait
xchg
cmp
clc
mov
sbb
ret
push
loopne
loope
stc
out
mov
pop
fisttps
sbb
movsb
movsb
ret
insl
lret
add
or
jnp
mov
shrb
or
sub
mov
sbb
negl
xchg
mov
xlat
in
jno
lock
mov
jg
sbb
inc
push
or
addl
hlt
pusha
lods
popa
or
or
lods
pop
mov
pop
xorl
jp
lahf
lret
dec
inc
jge
cld
xchg
daa
cli
and
outsb
sbb
cwtl
stos
std
mov
mov
xlat
cmp
mull
add
fistpl
xor
popl
outsb
les
arpl
xchg
imul
or
cmp
jp
add
lahf
jnp
inc
pop
shrb
mov
adc
mov
add
sbb
rclb
push
daa
sbb
push
cmp
loope
andl
ja
sbb
movsl
dec
pop
fwait
popa
mov
xchg
sbb
xchg
dec
xlat
and
loop
mov
jbe
imul
icebp
push
fwait
icebp
outsl
movaps
out
xchg
push
dec
insl
sub
xor
adc
fisttpll
jo
jo
mov
nop
push
jmp
popf
outsb
js
movl
cmp
jecxz
add
imul
sub
addr16
fimuls
push
xor
ljmp
movsl
aad
call
int3
cli
out
rcrl
test
xor
push
jne,pn
fidivrs
arpl
sub
fldenv
and
fsubrl
rclb
fildll
sbb
xchg
add
fs
shrb
sbb
mov
movsb
sbb
ret
inc
push
imul
sub
xor
mov
popf
mov
outsb
xor
stos
popa
sub
rcrl
cmc
mov
sub
jmp
xchg
lea
cmpl
out
dec
rcrl
stos
cmp
js
sbb
add
sti
sub
pushf
pop
push
rcrb
seta
enter
xorl
xchg
mov
sbb
cltd
in
loop
sar
mov
mov
sbb
ret
movsl
addr16
inc
testl
inc
repz
dec
es
jle
movb
pop
mov
aaa
push
cmpsb
jecxz
push
push
pop
sti
add
xor
aas
pop
out
pushf
rcrl
stc
sbb
ds
jb
imul
outsb
daa
pop
mov
clc
shrl
push
mov
fwait
add
cli
xor
xchg
sahf
hlt
push
dec
jo
xchg
sbb
adcb
movsb
addl
sbb
nop
push
or
aas
inc
xchg
aaa
loope
mov
jbe
faddl
jle
adc
jns
sbb
pushw
pop
mov
pop
test
add
fwait
pop
mov
cmpsb
outsb
xchg
cmp
repz
mov
inc
inc
push
dec
jle
fwait
aad
insl
xor
pop
mov
or
ljmp
jno
call
dec
bound
movb
push
and
or
jb
in
pop
pop
sub
jp
lret
jge
fildll
and
and
loopne
out
aad
pop
cmp
scas
push
scas
movsb
cld
ds
mov
mov
lahf
in
xchg
je
push
jp
in
xor
imul
jae,pt
fstl
or
mov
push
cs
ljmp
pop
xchg
jns
inc
push
out
popa
xor
pop
fists
jns
in
les
adc
or
xchg
push
mov
dec
and
mov
roll
std
cmp
push
mov
push
inc
aam
adc
mov
js
mov
add
dec
or
cmpsb
ljmp
sub
movsl
inc
loop
enter
or
and
loopne
rorl
cs
insb
mov
stos
js
lds
lcall
or
stos
aaa
jp
mov
nop
sbb
cltd
mov
fwait
cmpsl
hlt
je
xchg
and
jns
imul
lahf
pop
and
dec
xchg
pop
sbb
lret
andb
gs
repnz
cltd
cmp
and
int
push
xlat
test
inc
xor
fwait
cmp
into
lods
jmp
jb
mov
fmull
mov
xsaves
imul
push
mov
adc
mov
ljmp
and
adc
cld
loope
sbb
loope
xchg
lds
mov
xor
jbe
shrl
push
lods
inc
call
hlt
pop
fsubrs
scas
mov
dec
dec
movsb
lods
mov
lcall
or
mov
jl
xchg
sbb
fsubs
into
das
jg
dec
jnp
adc
and
test
mov
adc
mov
add
cmp
sbb
and
outsb
push
or
outsb
jo
xchg
sub
nop
and
jbe
jae
jne
and
cmp
stc
lret
and
nop
addr16
das
push
ljmp
xor
dec
insl
add
imul
test
adc
adcb
fwait
int
rorl
int3
ds
fisttps
xchg
adc
je
mov
mov
stos
or
stos
lods
lea
inc
inc
jge
lcall
dec
movsb
lret
push
mov
cwtl
inc
cltd
mov
lcall
sti
adc
and
mov
out
loope
xchg
push
stc
loope,pt
daa
xor
fisubl
sti
imul
outsb
filds
inc
xlat
or
les
fldcw
loopne
lock
push
loopne
adc
xchg
lret
rcrl
outsl
insl
inc
cwtl
outsl
mov
lods
mov
jecxz
cmp
sub
xchg
ljmp
test
daa
xor
push
mov
arpl
pusha
pushf
icebp
mov
and
pop
fs
dec
lods
inc
xchg
fistpll
mov
arpl
mov
es
jmp
sub
sub
mov
aad
jno
test
lret
insb
push
insb
test
insb
cmp
gs
mov
repnz
sub
std
sbb
xchg
mov
jns
out
ljmp
pop
aaa
fdivs
xchg
pop
adc
jge
xchg
push
das
cmp
dec
inc
lcall
filds
jle
mov
cmpsb
movsl
lods
aas
pop
cld
sbb
mov
std
repnz
or
mov
negb
adc
out
pop
stos
add
nop
outsb
sbb
pop
lret
push
sub
mov
jl
fmuls
mov
call
les
jb
sbb
or
int
adc
add
ficoms
and
out
sbb
outsb
jbe
pushf
cli
lret
lods
cli
cmpsl
loope
cmpsb
mov
fdivl
fwait
jnp
insb
cmpsb
pop
ja
mov
sti
test
dec
inc
popa
pop
jp
sahf
loop
mov
movsb
pop
stos
xor
push
in
and
dec
jns
lret
fwait
and
imulb
pop
jle
std
inc
fistl
push
xchg
adc
sbb
cld
xchg
mov
in
pop
fwait
mov
and
push
xchg
scas
cmp
nop
push
cmp
out
loop
cmp
in
and
cmp
ret
push
adc
cmpsb
push
into
scas
fimull
fisubrl
jmp
inc
sub
clc
cld
xor
add
cli
movsb
jle
xor
inc
addr16
popa
adc
sub
das
cmc
sub
arpl
xorl
xchg
xor
loope
in
dec
fstps
aad
mov
add
subb
pop
fsubs
fdivs
cmp
adc
loop
mov
jle
jns
mov
push
cmp
test
or
mov
push
cwtl
addr16
jb
adc
fildll
mov
pop
lret
aam
mov
js
es
mov
adc
mov
subl
insb
lods
in
and
and
roll
adc
jo
cmpsl
das
adc
dec
leave
add
push
cmc
jp
and
loop
shll
and
xor
lea
mov
dec
mov
jp
inc
bound
pop
xchg
pop
mov
push
add
push
lods
fcoml
push
in
jmp
inc
cld
jbe
data16
repz
rorl
into
and
fsts
mov
xchg
xchg
sarl
inc
sti
sbb
pop
or
sub
loopne
mov
lret
test
lcall
pop
outsl
stos
push
imul
cmpps
sub
inc
xor
jo
cs
sbbb
leave
xchg
xlat
cmovo
adc
mov
mov
lea
addr16
dec
pop
xor
sti
inc
ja
ljmp
add
int
das
xchg
inc
adc
pop
adc
lock
add
jo
cli
jge
adc
xor
sub
fisttps
xchg
in
iret
add
cmpsb
dec
cmp
mov
bound
jae
bound
pop
jmp
sbb
loopew
mov
sub
popa
mov
smsw
fnstenv
sub
adc
dec
subb
xchg
sbb
call
push
inc
cmp
lods
es
mov
cli
nop
cmp
pop
popa
push
jns
inc
mov
stc
xchg
movsb
and
in
test
mov
sbb
rcll
addr16
lea
icebp
int
ret
push
data16
stos
in
paddusw
cs
mov
xor
push
sub
sbb
mov
lret
cmp
jmp
push
aas
lock
ret
lods
rcrb
aam
dec
subl
movsl
pop
fs
mov
loope
lods
and
jp
fidivrs
push
call
shlb
movsb
fs
mov
sbb
mov
test
repz
dec
cmp
jecxz
dec
inc
pop
pop
cmp
pop
xchg
add
push
adc
pop
or
mov
add
dec
popf
nop
xor
and
mov
pop
loop
mov
int
adc
add
or
sub
mov
or
jp
loope
mov
nop
dec
inc
mov
inc
adc
jl
jecxz
add
xor
stos
hlt
sbb
sar
push
jmp
or
je
lahf
into
mov
pop
xor
or
rcrb
insl
insl
pop
cmpsb
cli
inc
pop
push
enter
and
add
cmp
sub
ret
icebp
adc
test
or
push
sub
pop
pushf
mov
fidivs
fistl
push
insb
jno
data16
cmp
fstpl
sarb
roll
lea
shll
jmp
insb
or
jno
jg
enter
mov
sub
bound
dec
or
mov
scas
xor
in
mov
adc
xchg
stos
pop
push
jno
inc
les
shrb
mov
sbb
mov
push
pop
popa
pushfw
mov
jp
xor
mov
repz
rol
inc
icebp
out
mov
int
je
pop
fisubrl
sub
push
adc
or
int
push
mov
test
sahf
push
jo
pop
pop
cwtl
bound
sbb
pop
stos
or
xchg
xchg
lock
jb
mov
lea
add
out
ret
push
mov
ds
or
nop
or
mov
in
movsb
aaa
hlt
pop
call
loope
inc
test
out
ss
stos
xchg
test
add
loop
mov
iret
repnz
lods
test
and
cltd
adcl
sahf
pop
mov
fnstcw
inc
dec
jns
ljmp
in
cs
lcall
sub
andl
pop
sahf
in
cmp
mov
in
add
in
ljmp
mov
and
jo
test
out
test
fsubs
sbb
mov
adc
dec
lea
inc
repnz
mov
in
push
int
sahf
adc
nop
xchg
adc
jmp
shlb
push
dec
sub
in
jae
cmp
jecxz
and
xchg
pop
pop
lea
adc
and
inc
pop
lods
out
sbbb
in
lret
repnz
cmp
dec
xorb
add
add
pop
lret
jb
push
dec
mov
mov
mov
stos
push
out
cmp
mov
lahf
dec
or
lahf
push
inc
mov
movsl
imul
int
cmpb
test
add
fisttpll
pop
sub
int3
pop
sub
push
loope
inc
push
inc
lret
shrl
mov
dec
in
sbbb
xlat
push
mov
lret
pop
inc
xor
adc
mov
mov
fsubrs
and
mov
xor
sbb
and
cmp
and
fisttpl
pop
std
ret
mov
repnz
aad
and
gs
cli
adc
and
xlat
test
test
fs
loop
cmpsb
lret
mov
nop
pop
lods
jne
cmp
aad
push
sar
xchg
and
mov
loop
flds
jp
inc
aad
sub
idivl
imul
sbb
jo
fstps
dec
insb
jp
sbb
xchg
xor
or
in
or
push
push
cmpsb
mov
movb
dec
push
mov
xchg
mov
inc
cmp
js
add
jnp
stc
clc
dec
adc
inc
dec
addb
shrb
fs
test
sub
mov
or
dec
mov
adc
loope
push
test
mov
add
sbb
xchg
bound
mov
pop
lret
cli
int3
fsubrs
repz
jl
in
jmp
push
clc
enter
adc
xchg
test
mov
push
fcoml
cs
jnp
jp
andl
xchg
test
sahf
xchg
dec
cmp
rcrl
iret
sahf
mov
sbb
mov
mov
pop
or
sti
mov
dec
adc
add
mov
movsl
cld
xlat
arpl
lea
fmull
stos
mov
and
cmp
pop
lods
xor
fstpl
cmp
mov
dec
mov
sarb
inc
xor
ret
mov
xchg
or
mov
icebp
scas
hlt
scas
push
push
or
into
ja
and
push
cmp
or
loope
bound
mov
roll
xchg
lods
mov
push
ret
clc
cwtl
add
repz
and
das
cmpl
xor
xchg
lods
mov
sbb
jne
ret
rcl
testl
jnp
fstl
sbb
stos
in
dec
xor
and
repz
sti
mov
js
cli
xor
cli
and
ja
and
and
and
jp
inc
jb
stos
and
scas
negb
iret
fsubl
pop
xchg
push
xlat
ds
push
xchg
mov
pushf
push
cltd
cmp
ja
shrb
xchg
jae
in
adc
inc
add
aaa
ret
fisttps
sbb
dec
cmpsb
dec
sbb
or
out
std
inc
sti
pop
cltd
push
or
ljmp
cmc
cltd
jmp
shll
fcoms
adc
mov
pop
push
jno
jne
addl
mul
ficoms
popa
imulb
out
cld
mov
mov
les
cmp
dec
jmp
in
int3
inc
fsubrs
shrb
mov
pusha
sub
adc
mull
add
cltd
push
inc
imul
push
pop
in
xor
test
jle
je
pop
adc
xlat
out
lcall
sbb
pop
out
fisubrs
jno
repnz
jle
mov
push
es
int
xor
jno
outsl
faddl
pushf
jbe
testb
test
pop
cmp
clc
sbb
loope
push
push
mov
lods
xlat
or
mov
inc
xorl
imul
enter
stc
out
into
mov
popf
jno
lcall
aam
pusha
mov
repnz
adc
add
pop
cld
fs
mov
movsl
movsb
jns
pop
repz
loop
fdivs
push
jnp
inc
in
pop
outsb
lea
adc
push
pop
cs
insb
iret
gs
pop
nop
xchg
scas
fwait
inc
insb
sub
xchg
xchg
mov
in
jl
lds
sti
push
jg
cmp
ret
shrb
sahf
lea
dec
cmp
add
inc
lret
mov
add
fisubrs
pop
mov
xor
call
mov
mov
pop
push
rorb
jl
xor
ret
mov
add
inc
fcmovnb
mov
cmp
int3
adc
stc
dec
ljmp
fdivl
add
and
aaa
dec
aam
pop
stos
mov
lock
andb
pop
ret
mov
add
add
fs
adc
pusha
out
nop
add
xor
inc
mov
adc
fisubl
lods
xlat
cmp
call
lds
cld
inc
jne
lock
adc
call
leave
adc
rorb
xor
and
dec
out
inc
fstps
jno
test
sarb
jl
mov
sub
and
or
xor
insl
mov
cmp
fistps
movsb
inc
mov
push
or
jecxz
popf
cmc
test
fadds
push
call
jb
cmpsl
ja
mov
pop
shll
sahf
mov
lcall
pop
lods
mov
enter
push
push
mov
pop
adc
push
mov
jl
adc
pushl
stos
pop
jl
mov
inc
imul
lods
add
es
negb
cli
loope
test
pop
mov
rcr
dec
sbb
ds
and
mov
xor
jp
incb
jae
sbb
dec
cmp
inc
dec
cs
scas
lea
stos
and
dec
jmp
sarl
bound
pop
push
sbb
mov
xlat
push
popf
pop
mov
lret
pushl
repnz
cmc
jbe
jge
cwtl
lret
fwait
aas
gs
clc
jg
out
lret
mov
push
ljmp
adc
not
cltd
xor
xchg
cmp
xor
push
cmp
dec
pop
or
ljmp
jae
hlt
push
adc
xchg
dec
xchg
xchg
xor
mov
pop
or
roll
nopl
fbstp
stos
and
les
shll
or
popa
hlt
pop
xorl
fsubrp
sbb
aas
adc
inc
mov
fadds
lret
ja
cs
repnz
sbb
lcall
cmp
popa
aad
mov
sub
mov
push
jne
cmc
icebp
xchg
mov
idiv
or
xlat
mov
mov
popf
pusha
rclb
cwtl
mov
data16
or
pop
mov
fstps
or
push
adc
js
daa
call
add
mov
jno
aaa
xchg
imul
test
pop
mov
sahf
in
or
jno
mov
nop
flds
iret
adc
pop
outsb
xchg
dec
int3
cmpsb
lods
movl
sub
cmp
pushf
mov
xor
test
add
mov
aad
cmp
cmp
jmp
repz
outsb
push
and
and
cmc
aaa
pop
xor
mov
into
or
mov
cmpsl
fildll
dec
gs
lods
pop
mov
mov
push
dec
adc
add
push
idiv
call
dec
inc
movsl
xchg
ret
addr16
pop
or
lea
add
sub
aaa
pop
jl
hlt
nop
jle
aad
dec
mov
mov
test
ja
mov
std
xchg
repnz
loope
push
and
cli
xchg
mov
repnz
das
ret
ja
cmp
movsl
loope
push
shrl
cli
fnstcw
cltd
test
xchg
push
daa
ret
adc
adc
and
fimull
mov
aaa
jnp
adc
cwtl
ret
mov
and
adc
ficomps
or
fcmovu
push
pop
push
int
loopne
popa
ret
gs
mov
cli
jbe
or
dec
loopne
add
hlt
sub
shlb
sub
sub
clc
mov
and
mov
push
mov
dec
scas
sub
mov
xor
add
xchg
icebp
or
inc
out
hlt
cmc
pusha
out
pop
test
mov
mov
inc
out
dec
lahf
dec
adc
aad
mov
aam
sbb
pop
mov
inc
in
aad
sub
mov
pushf
mov
cmp
jge
aam
sti
mov
lcall
lret
test
add
cmc
mov
testl
rcr
pop
jmp
sbb
popf
call
and
ret
add
dec
inc
push
pusha
xor
pop
jo
nop
lods
or
pop
jmp
mov
jno
xchg
mov
xchg
imul
test
xor
xor
push
nop
sarb
fldl
dec
xlat
lcall
iret
or
pushf
ds
mov
dec
in
add
sarl
sbb
out
xchg
xchg
cltd
push
aam
jp
je
sub
xlat
sar
into
pushf
jp
mov
mov
cwtl
adc
fwait
gs
clc
incl
loop
mov
sbb
insb
push
leave
aaa
pop
fwait
dec
cli
shll
xor
inc
out
dec
dec
nop
mov
or
cltd
sub
imul
cmp
cld
add
xor
lret
js
mov
jl
stos
cli
xchg
fisttpl
pop
sbb
pusha
mov
loopne
in
push
mov
pop
call
stos
adc
pop
subl
out
mov
xchg
mov
mov
add
and
cmp
xor
loopne
fistpll
ljmp
adc
jb
mov
mov
in
movsl
xchg
mov
dec
icebp
or
or
push
jmp
adc
and
std
sahf
addb
out
push
int
push
and
jge
in
repz
gs
adc
jg
mov
mov
fcomps
mov
fcompp
fwait
push
or
ss
hlt
movsb
inc
xchg
lcall
mov
aas
loope
mov
push
dec
sub
lods
test
andl
sub
lret
sbb
aas
pop
mov
ret
xchg
sbb
mov
scas
cmpsb
xchg
enter
fldt
push
scas
add
cvtpi2ps
push
mov
xchg
std
pop
movsb
popf
jnp
inc
mov
sarb
lcall
subl
mov
lds
iret
aaa
cmpsb
and
enter
mov
repnz
and
cmpl
sbb
pusha
jl
hlt
pop
sbb
mov
or
xor
int
push
sbb
cmc
cmp
pop
scas
mov
cmp
mov
gs
and
lea
inc
push
xchg
out
les
jns
push
mov
sub
sub
xchg
rorl
sub
insl
push
adc
adc
cltd
ss
sbb
aad
mov
addr16
jle
and
cmp
aam
bound
push
sub
mov
shlb
insl
pop
scas
out
test
int3
push
mov
mov
addl
mov
cmp
dec
sub
pop
mov
arpl
push
inc
enter
sti
fdivs
inc
jnp
clc
dec
xor
ss
pop
std
sub
mov
xchg
inc
ljmp
lods
jl
out
xchg
mov
int3
dec
mov
rcrb
xchg
mov
insb
dec
xchg
jae
imulb
cli
mov
fsubr
fstpl
imul
daa
dec
or
or
out
aam
arpl
pop
fldt
or
stc
xor
fisttpll
pop
pop
mov
rcrb
pusha
jmp
sbb
push
mov
out
add
in
icebp
ret
shrb
adcb
loope
mov
cli
test
xor
sbb
adc
mov
jne
es
subb
or
mov
fdivrp
lret
mov
xor
jno
push
cmp
clc
push
shrb
or
ss
push
mov
test
inc
xchg
rcrl
movl
jl
cli
adc
push
jnp
aam
les
cmp
fnstcw
rol
fmull
int
lock
push
addb
scas
mov
subb
pop
cltd
ficomps
adc
shll
dec
jecxz
dec
adc
xchg
jge
jnp
inc
cmp
and
sub
scas
jle
cld
dec
shrb
adc
clc
lea
test
fcoms
cld
and
ss
inc
push
aam
add
mov
cmpl
cmc
fwait
sub
push
addr16
leave
repz
arpl
and
sub
into
pop
cwtl
fidivl
addr16
data16
icebp
jp
and
je
push
scas
pop
cmp
jl
leave
test
adc
adc
and
test
push
cmp
mov
jecxz
je
inc
sti
arpl
cmpsl
repz
mov
mov
rclb
cli
test
jbe
pop
sti
fdivr
adc
jno
scas
stos
lods
cli
dec
pop
test
movsb
rcrl
stc
push
and
pushf
pop
or
je
jmp
xor
lcall
movsl
and
inc
mov
scas
imul
popa
mov
inc
mov
sbb
lds
mov
dec
out
sub
mov
sbb
outsl
pusha
sub
jnp
dec
mov
adc
mov
jbe
fadds
testb
sub
sub
cmp
or
aaa
cmp
pushl
xchg
shlb
test
imul
scas
lock
sahf
push
mov
mov
inc
lods
enter
icebp
add
imul
mov
imul
out
ds
cmpl
and
mov
push
ja
mov
lcall
cmp
mov
mov
xorb
repnz
jp
add
pop
or
xchg
jge
imull
add
cmpsl
add
testb
inc
pop
call
scas
call
sbb
mov
dec
out
jecxz
cmc
add
sbbl
sbb
or
mov
fiaddl
add
pop
mov
xor
pop
test
fstpl
push
sub
imul
loope
rcrl
cmp
andb
mov
push
push
jge
jmp
cmpb
scas
dec
out
repz
sbb
cwtl
fwait
jne
mul
mov
dec
inc
pop
in
cltd
sbb
in
into
xchg
sub
mov
test
std
orb
loope
xchg
add
push
add
xor
aam
mov
leave
jge
dec
mov
jnp
mov
sbb
out
sbb
mov
call
jo
mov
stos
out
shlb
xchg
mov
testl
inc
aaa
xchg
pusha
push
cmp
into
add
call
sbb
out
filds
int
in
out
imul
ja
mov
mov
pop
leave
mov
rcll
xchg
outsl
inc
add
dec
jno
adc
or
sbb
scas
sbb
push
and
inc
lods
mov
lock
stc
xor
clc
adc
push
or
icebp
in
rcrb
es
aas
jb
xor
lock
imulb
cwtl
std
mov
push
jg
mov
mov
mov
xlat
lods
xor
jle
stos
cmc
pop
sbb
pop
ljmp
out
jb
aad
push
mov
dec
int
insl
xchg
negb
loopne
vmwrite
lret
sbb
pop
inc
add
adc
jns
xchg
mov
mov
bound
inc
mov
push
loop
fbstp
mov
adc
imul
stos
jecxz
push
adc
imul
or
sub
jp
sbb
lret
adc
ljmp
mov
ret
sbb
jg
ffree
xchg
shlb
fdivrs
sub
idivb
xchg
dec
xor
mov
in
out
or
xor
shlb
pop
xor
jb
das
dec
adc
push
jns
inc
adc
jmp
or
sub
lahf
out
in
cs
adc
ret
mov
add
adc
xor
and
jne
outsl
test
inc
mov
movsl
enter
xchg
jb
repz
fcoms
out
lock
cmp
xor
push
fstps
repnz
js
mov
int
test
dec
mov
fildll
xchg
cmp
outsb
jp
lock
int3
test
fstl
fcmove
rclb
and
js
stos
popf
xlat
insl
jmp
jo
fwait
pop
fistpll
jl
arpl
rcpps
and
cli
adc
call
push
pop
jb
jp
insl
movsl
mov
sub
fisubrs
fcmovu
test
sbb
or
or
and
bound
mov
lcall
out
test
sbb
pop
mull
out
add
mov
and
addr16
lahf
mov
insb
push
addb
mov
movsl
sahf
mulb
xchg
dec
add
adc
leave
and
mov
sti
ja
mov
movsl
push
fs
mul
lods
enter
pop
sarl
push
mov
lcall
leave
push
fs
jae
push
inc
andb
and
loop
mov
rorb
lret
inc
ja
inc
es
subb
in
jecxz
mov
dec
enter
or
jle
and
stos
cmp
sarl
jg
insl
pop
mov
mov
sub
mov
mov
mov
push
cltd
ja
cmp
xor
popf
jp
sbb
daa
sub
jle
dec
subb
insb
sbb
or
enter
aas
jns
jle
mov
mov
add
movsl
sub
pop
or
pop
and
mov
mov
mov
repz
jp
fimuls
lds
xchg
add
daa
jb
enter
mov
aam
dec
pop
lods
pop
jle
adc
adc
in
stos
jbe
cmp
into
aad
test
dec
shll
inc
js
leave
lds
pop
fwait
cld
push
or
add
adc
jbe
xchg
test
outsb
mov
jae
mov
je
ss
repz
sub
call
lcall
out
sub
sbb
mov
xchg
inc
leave
outsl
outsl
or
push
mov
mov
sub
sbb
or
and
xor
test
sbb
sbb
sub
sub
xchg
ffree
mov
jno
or
jo
sbb
adc
cmp
xchg
push
inc
stos
mov
in
out
jp
pop
pop
adc
jecxz
push
mov
xchg
and
xlat
imul
mov
inc
shlb
outsl
nop
jo
xor
push
orb
add
movsb
dec
cs
int
lods
in
mov
xchg
aaa
psubd
stos
xor
push
mov
push
cmp
xchg
mov
jo
movsb
jae
dec
dec
shlb
movsl
mov
ficoml
into
dec
sub
lods
daa
aaa
adc
sub
sub
adc
es
fnsave
pop
pop
in
ficomps
popf
push
and
jge
in
add
dec
out
aas
dec
adc
xor
test
pop
or
push
popf
and
pop
and
cmp
mov
or
movsb
loop
xor
jnp
xlat
sbb
and
xchg
ss
xchg
stos
into
pop
xor
sbb
pmullw
rol
ja
ror
sub
pop
jno
int3
xchg
loopne
cmp
push
sbb
nop
aam
pop
cli
or
sub
adc
lret
dec
mov
aaa
or
imul
jne
add
mov
in
and
cmpsl
adc
stos
stc
jg
lret
rcr
ja
jge
fdivrl
into
mov
mov
xchg
popa
push
cmpsl
nop
mov
or
movsb
cmp
push
pop
push
inc
in
jecxz
mov
xor
aas
jnp
sub
dec
xchg
loopne
ss
aaa
push
ret
loopne
xor
test
or
int
sti
leave
dec
das
orl
sti
push
sbb
mov
in
adc
xor
les
mov
push
out
adc
or
in
es
outsl
push
stos
ret
mov
leave
fwait
dec
cmc
popa
xlat
loop
lea
xor
aad
dec
cwtl
jae
ds
cmp
sbbl
or
or
pop
pop
jl
jmp
add
aaa
movsl
xlat
dec
and
int3
icebp
xor
xor
sub
add
aad
je
sbb
and
out
dec
ret
jnp
jl
mov
pop
movsb
gs
push
stc
sbb
loope
lret
push
in
or
sub
in
xor
mov
shll
scas
imul
sbb
cli
mov
mov
mov
inc
and
mov
add
mov
sahf
mov
fldenv
jge
out
dec
xchg
hlt
aad
adc
ret
add
mov
rolb
dec
cli
cmp
lahf
sbb
test
shll
lods
mov
fwait
add
push
add
sbb
dec
push
ja
push
and
testl
clc
clc
adc
aad
dec
sbb
adc
cmp
stos
in
popa
cmp
test
push
xor
or
inc
outsb
adc
in
lahf
int3
pop
adc
movsb
jno
mov
xchg
push
cmpsl
pop
mov
int
jle
test
popa
push
sbb
pop
mov
aam
or
fstp
or
jmp
mov
xor
lea
xchg
inc
out
or
pop
fldl
iret
ss
sbbb
adc
push
fnsave
out
inc
and
and
adc
aas
sub
and
mov
inc
icebp
jp
rep
in
pop
sbb
mov
mov
push
xchg
popf
jge
pop
push
mov
faddl
push
rorb
mov
test
cwtl
inc
dec
xor
call
push
mov
mov
pop
mov
mov
mov
data16
cmpsb
lret
dec
mov
popf
add
js
dec
push
gs
xchg
les
cmp
ss
divb
xor
lods
rcrl
jo
test
clc
subb
negb
cs
xchg
or
lock
imull
cli
xchg
jo
xor
or
mov
inc
mov
data16
aaa
repz
jbe
sbb
out
fcmovnb
push
cld
jnp
cmc
inc
add
outsb
xor
cmp
sub
pop
adc
xor
movsb
cmpsl
out
fidivrs
shr
and
push
lods
cmc
mov
shlb
or
or
test
push
aaa
sbb
jbe
adc
lret
add
add
xchg
inc
leave
push
mov
das
add
loopne
xchg
fwait
jno
lcall
insb
pusha
or
adc
repnz
push
in
std
push
adc
mov
mov
dec
imul
xchg
adc
lahf
inc
lret
push
insb
repnz
dec
add
sbb
xlat
sub
cli
outsb
loopne
mov
cltd
and
jns
into
lods
and
sub
icebp
shrl
or
push
jns
adc
fcomps
add
dec
lahf
stc
xor
mov
and
arpl
adc
cmpsb
int3
dec
xlat
fwait
push
cmp
pop
in
jmp
lds
iret
repnz
icebp
push
imul
inc
xor
xchg
das
fnstenv
inc
shlb
adc
pop
mov
aaa
push
mov
sub
push
sbb
add
xor
inc
sbb
and
inc
sbb
loope
loop
roll
and
sub
cmp
mov
and
jmp
jnp
test
mov
pusha
aad
stos
cmpb
cmpsl
push
cmpb
sbb
lods
addb
call
jns
add
int3
mov
mov
out
out
repnz
mov
push
lock
and
mov
nop
stos
jns
mov
mov
add
mov
jo
cmpsb
pop
cltd
aad
imul
push
addl
xor
jnp
leave
loope
int
xor
notl
adc
sahf
dec
fcoms
in
mov
mov
lods
mov
jle
or
pushf
rcr
mov
popf
inc
add
sub
je
dec
lods
pushf
arpl
scas
subb
imul
sbb
rclb
sti
mov
mov
outsb
or
and
and
outsb
dec
mov
add
and
jg,pt
inc
pop
ja
inc
xchg
jp
mov
sbb
push
lods
test
jno
ss
push
ffreep
xor
xor
mov
aaa
scas
add
mov
stos
xchg
rclb
mov
mov
sub
jl
adc
in
cs
test
mov
jle
pop
push
xchg
or
fxch
add
fmulp
aad
aad
stos
mov
mov
pop
test
out
xchg
jge
mov
cmp
leave
mov
insb
xor
cmp
sbb
rcr
inc
arpl
pop
mov
jno
or
lret
dec
outsl
mov
sahf
ss
pushf
pop
repnz
add
mov
push
outsb
mov
mov
addr16
fsubr
mov
cs
jp
movsl
ret
ret
leave
insl
mov
sub
sarb
pop
xor
add
pop
mov
adc
mov
cmp
add
jge
xor
scas
inc
adc
add
cli
clc
cmp
data16
cltd
cltd
cmp
cwtl
pop
pop
and
dec
mov
loope
sbb
inc
xchg
sbb
test
mov
clc
dec
mov
es
repnz
cs
pop
arpl
insb
xor
inc
clc
mov
lret
lods
xor
mov
cmc
sbb
insl
insl
rorb
pushf
cwtl
mov
xchg
pop
or
jmp
and
add
pop
jg
std
fcmovu
push
call
cmp
cli
lods
js
cmp
outsb
mov
lods
aaa
xor
idiv
fucom
subb
push
je
xorb
insb
adc
std
movsb
adc
adc
sbb
leave
mov
inc
xchg
mov
out
add
and
sub
lock
mov
mov
cltd
sbb
add
mov
jmp
inc
sub
adc
outsb
jne
clc
shl
adc
adcb
xchg
inc
fisubs
jns
lea
mov
sbb
jb
sarl
pop
sbb
mov
les
push
xrelease
cmp
inc
rclb
adc
push
aaa
pop
cmpsl
mov
add
inc
stos
pusha
pop
cmp
insl
lahf
adc
fidivrl
xorl
stos
jge
sarb
dec
and
add
fldcw
push
mov
into
pop
imul
ret
repnz
lea
sbb
push
stos
das
lret
xchg
push
sub
and
scas
jle
ds
movsl
fs
sub
addr16
xor
xor
or
cwtl
in
stc
sbb
jg
loop
fldl
mov
in
aad
in
call
push
in
popl
nop
inc
mov
lret
call
sub
push
fs
cmc
rclb
xor
xchg
dec
testb
std
and
movsb
and
pop
adc
cli
push
sbb
sub
cli
loop
lods
mov
dec
es
add
sub
icebp
enter
mov
not
add
jp
mov
pop
push
jb
js
insb
mov
das
daa
aam
sbb
out
jg
jge
mov
cltd
dec
aad
push
cmp
push
pushf
in
lods
insb
sub
dec
cltd
popl
movsb
fxch
lret
loop
orb
sbb
pusha
je
clc
pop
mov
ret
std
xchg
jmp
xor
add
es
jg
movsb
lahf
cwtl
jp
and
dec
fucomi
scas
mov
aam
enter
dec
nop
inc
aas
cmp
fwait
xchg
ljmp
test
xchg
sbbl
addr16
shlb
outsb
shr
xchg
jns
pop
out
cmp
fistps
fstl
mov
lods
repz
call
pop
pop
sub
mov
call
or
xchg
jle
cli
test
dec
and
es
lods
andb
inc
add
push
mov
jle
cmpsl
ja
inc
pop
mov
pop
stc
sub
pop
mul
int3
cltd
cwtl
frstor
and
inc
sbb
push
ds
xlat
xchg
push
push
jg
mov
lds
push
repz
popf
cmp
push
xchg
js
stos
in
jno
inc
int3
inc
inc
call
xor
or
mov
push
fisubrl
iret
scas
lods
inc
mov
or
cmc
push
sti
and
mov
cmp
push
pop
mov
out
push
sbb
mov
mov
xor
test
stos
pop
jl
sub
mov
xchg
mov
xchg
xlat
outsl
sbb
adc
sbb
ret
cld
xchg
pop
mov
mov
call
adc
and
ficoms
cmp
stos
xchg
dec
adc
jno
ret
mov
stos
jns,pt
fadds
pop
loope
daa
dec
fwait
jecxz
std
push
xchg
jle
or
or
inc
imulb
arpl
nop
add
pop
cmp
xor
clc
fstp
loop
into
sbb
xchg
or
push
insb
xchg
fimuls
pop
test
jno
cmpsb
adc
dec
cmc
aaa
pop
mov
sti
movsb
or
sub
mov
pop
into
jg
js
sarl
xor
xor
jmp
adc
js
jle
aaa
lcall
js
mov
or
enter
push
in
je
push
push
shlb
or
ljmp
inc
or
lds
shrl
or
lods
je
lds
movsb
fdivrs
mov
mov
sub
jle
push
mov
repz
pop
dec
sub
or
in
bswap
in
scas
adc
mov
mov
mov
jae
setae
les
out
pop
jle
cld
ss
scas
std
xchg
lret
mov
es
stos
fisubrs
int3
push
test
daa
cli
add
mov
adc
dec
adc
xchg
cmp
jae
and
insb
hlt
sarl
add
stc
cmp
cld
sbb
repz
mov
cmp
shll
sbb
dec
mov
dec
loop
fsts
push
sub
fsubrs
pop
and
xor
dec
leave
sub
je
mov
pop
mov
enter
je
subb
pop
cmp
and
subl
jge
arpl
mov
std
mov
mov
fs
lret
fildll
das
mov
mov
cwtl
outsl
call
push
in
pop
aad
in
rclb
or
or
xor
xchg
les
rcrb
dec
and
testb
popa
lea
push
stos
jbe
xor
inc
out
dec
repnz
pop
and
mov
popf
cmp
insl
andl
sub
dec
add
adc
inc
xchg
sbb
int3
xchg
sbb
andb
rcll
push
mov
mov
cmc
add
insb
cwtl
data16
xlat
sarb
fidivrl
mov
xor
pop
outsb
push
pop
mov
stc
mov
fildl
xchg
loopne
pop
inc
cmp
pop
stos
popa
xchg
mov
lock
jg
inc
xchg
imul
and
ljmp
hlt
and
cmc
std
sahf
sub
or
mov
mov
arpl
push
pop
test
xchg
test
inc
icebp
call
out
pusha
mov
loopne
dec
fistpl
loopne
lods
enter
xchg
jmp
sti
mov
aam
sti
movsl
adc
xor
jl
dec
push
xchg
add
rcrl
es
jb
xchg
stos
pop
in
push
xor
jg
dec
mov
cmp
push
mov
sarl
xchg
movsb
add
xor
mov
imul
ss
imul
aas
in
mov
sub
testb
cmp
xor
pop
cli
pop
bsr
in
adc
gs
jecxz
pop
cwtl
jecxz
adcl
push
mov
or
mov
or
xchg
push
pop
pop
or
xchg
test
ficomps
mov
fnstenv
mov
cmpsl
cmp
test
fisubrl
jns
mov
std
jl
jns
int3
push
enter
enter
jmp
jge
push
xor
pusha
push
add
and
sbb
fistpl
out
movsl
mov
cmc
rcrb
in
loop
and
jmp
cli
sbb
lea
mov
mov
cld
icebp
in
mov
lret
mov
mov
or
icebp
pop
adc
andl
rcll
mov
mov
ret
ja
pop
sbb
dec
xchg
fwait
jmp
stos
notb
dec
pop
insb
adc
imul
and
dec
dec
adc
xchg
jb
xor
pusha
mov
cs
sub
imul
outsl
lret
sti
decl
call
faddl
or
je
int3
cwtl
xorl
pop
imulb
das
push
dec
mov
dec
mov
jle
dec
incb
add
sub
dec
cmpsb
shl
stc
fldl
xor
jecxz
lods
das
adcl
call
fisubs
push
cmp
leave
shll
push
add
in
pusha
sarb
dec
lret
adc
or
inc
dec
add
push
add
jg
cmc
cli
enter
mov
jle
insl
mov
pop
out
adc
xchg
adc
movsl
int3
jge
and
sub
or
cmp
fdiv
outsl
jp
outsl
jg
sahf
test
sbb
hlt
add
daa
cld
xor
jge
mov
xchg
pop
aam
xor
push
js
and
hlt
loop
inc
dec
jg
imul
jmp
inc
movsl
push
xlat
jg
in
push
ljmp
nop
mov
mov
mov
in
sub
mov
inc
call
mov
inc
mov
adc
stos
idiv
or
pushf
jbe
ss
negb
mov
push
mov
std
mov
add
test
data16
mov
out
push
aas
clc
mov
add
pushl
xchg
inc
lods
sub
push
inc
std
xchg
enter
shll
jmp
and
daa
xor
cmp
rclb
add
pop
sub
aas
pop
int3
in
inc
dec
cmpsl
mov
and
fnstcw
pop
push
push
shll
xchg
shrl
sbb
fcoms
out
jns
cmpsl
subb
jno
dec
cmp
cmpsb
mov
in
sbb
popf
sbbl
push
or
or
cmp
pop
faddl
jg
push
imul
mov
xchg
cld
mov
push
cmpsb
jae
outsb
cmp
aam
rorl
adc
int
fnstenv
outsb
rcl
pop
sbb
mov
xor
fsubrs
lods
sub
into
popf
mov
int
xchg
rclb
mov
and
std
xor
ljmp
lret
push
mov
adc
sub
pop
inc
add
dec
es
push
int
imul
das
dec
ljmp
les
dec
xor
clc
das
daa
divl
fisttpll
lods
xor
cmp
inc
push
scas
jl
mov
jo
dec
xchg
dec
rclb
xor
xor
gs
imul
cltd
fcompl
idiv
in
bound
mov
clc
add
daa
pushf
mov
mov
sarl
pop
or
jl
jbe
imul
inc
pop
mov
pop
inc
mov
inc
pop
xchg
cmpsb
div
mov
sub
xchg
icebp
xor
pushf
sbb
push
cmp
sbb
xchg
je
aad
jns,pn
stos
clc
fnstcw
pop
adc
cmp
dec
sub
mov
jnp
jmp
or
pop
add
sub
mov
lahf
xchg
sbb
imul
cwtl
popa
leave
xchg
pop
int3
push
and
fs
push
cmp
inc
push
jp
xor
push
dec
pop
xchg
push
das
std
mov
fstpt
iret
lods
js
cltd
stc
xchg
dec
push
es
dec
mov
mov
cs
pushf
fwait
mov
mov
pop
das
movb
jb
mov
and
dec
rcll
xor
ret
xlat
or
stc
shl
inc
dec
push
push
jge
xor
xor
mov
jno
lock
aaa
mov
push
jl
add
in
cmp
or
idiv
pop
sti
rolb
push
clc
cmpsb
and
data16
push
rolb
inc
movsb
push
adc
fiadds
adc
mov
mov
cmc
cmp
pusha
jo
cmp
mov
fwait
ds
adc
xchg
daa
mov
pop
test
add
mov
in
mov
repnz
test
mov
xor
cmpsl
int
imul
mov
mov
mov
jns
movsb
and
repnz
push
push
push
lods
into
xchg
push
adc
pop
pop
xor
push
and
add
adc
inc
das
mov
ds
sbb
cmp
dec
cltd
mov
je
dec
sub
sbb
in
xchg
push
and
xor
or
jae
loop
fdivrs
or
push
imul
imul
cmp
in
addr16
shr
adc
shll
sub
das
xor
mov
sbb
aaa
jae
stc
test
cmpb
roll
fistl
test
ja
or
adc
lea
pop
push
imul
xchg
call
nop
xchg
sbb
cmp
jl
outsb
aam
push
mov
sub
cmpsb
pop
iret
ja
sahf
insb
test
leave
enter
mov
or
movsl
fisttpl
arpl
xchg
sub
add
cmp
push
loopne
mov
cmp
fucom
out
jnp
jmp
sub
int
dec
movsb
cli
mov
loop
scas
aas
sbb
nop
out
mov
jno
xchg
je
xchg
mov
andb
ret
xor
in
cmc
lea
fldl
sahf
lods
test
movsb
mov
jnp
xchg
pop
stos
jge
mov
and
and
les
lea
add
enter
mov
outsl
data16
sub
and
xor
xchg
pushf
clc
cld
jg
popa
inc
cmpsb
sahf
dec
sub
repnz
das
data16
sbb
push
iret
loop
mov
imul
loop
mov
xor
xchg
adc
cmc
popa
xor
mov
mov
test
push
mov
inc
ds
xchg
aam
inc
and
in
ret
enter
push
pop
cmp
dec
inc
sbb
adc
sub
xchg
popf
enter
sbb
insl
inc
adc
push
push
jae
adc
ret
sub
jge
test
clc
mov
fisubrs
imul
clc
lds
push
mov
aaa
in
or
iret
fsqrt
nop
jl
or
mov
orl
jl
in
adc
jnp
lds
mov
out
jecxz
cmp
test
mov
faddl
xchg
test
fimuls
cmpsl
mov
aaa
fadd
cmp
mov
andb
jb
push
cs
repnz
xchg
push
js
sub
jno
or
sub
mov
ret
jle
cs
stos
or
dec
scas
inc
out
loope
ss
push
xchg
and
adc
daa
and
mov
mov
fs
mov
adc
insl
and
lret
mov
ret
std
ss
xchg
jle
fs
cmp
iret
popf
std
insl
int
movsl
in
mov
lock
iret
stos
and
ficomps
mov
insb
aad
inc
aas
mov
mov
frstor
je
mov
test
or
shll
mov
test
push
negb
adc
mov
push
fstl
dec
jle
stos
popa
lahf
dec
add
jmp
roll
test
mov
add
lea
outsl
sti
inc
cmpsb
adc
loopne
adc
lahf
loop
rcpps
ret
sbb
and
aas
movsb
and
xchg
rcrl
sahf
sbb
test
nop
lock
jg
mov
dec
mov
push
add
xchg
jg
cmp
push
mov
push
repz
push
cmpb
sub
push
cs
pop
sub
or
jmp
inc
loope
xor
and
adc
jnp
out
sbb
js
and
push
and
cmpsl
les
inc
fsts
testb
enter
addr16
je
mov
insb
cld
cmpsb
addr16
add
mov
mov
jno
jnp
lods
inc
xchg
mov
dec
jo
lret
in
mov
push
rcrl
add
pop
shlb
stc
jb
mov
push
fwait
stos
and
xchg
fnsave
sbbb
in
iret
imul
in
fldenv
lds
or
inc
loope
or
mov
lahf
inc
sub
mov
decb
push
xchg
addr16
add
in
inc
jae
mov
loopne
adc
xor
je
ret
sub
neg
outsb
dec
imul
in
xchg
jmp
inc
jecxz
add
loopne
or
test
cltd
jns
jmp
pop
jae
or
push
xor
arpl
sbb
aad
movsb
lods
negb
cli
addl
and
mov
and
jge
fists
cmp
add
imul
jne
jb
cmc
mov
or
xchg
mov
mov
inc
pop
mov
js
sub
push
mov
gs
scas
cli
inc
lret
mov
or
sub
mov
pop
mov
adc
clc
loope
movsl
add
out
insb
mov
jno
pop
cmp
in
or
rclb
and
out
dec
cltd
pop
and
cli
and
stos
test
ds
ret
sub
out
add
adc
push
push
jp
or
mov
add
insl
jo
sbb
arpl
mov
adc
pusha
arpl
test
sbb
lods
jmp
adc
jbe
inc
push
add
pop
outsb
nop
xor
lahf
aam
inc
mov
mov
or
pop
outsb
ret
mov
in
bound
sbb
jno
outsl
rcrl
psubusb
xor
cltd
sti
jmp
cmp
mov
frstor
sub
mov
cmpsb
lds
pushf
mov
shrl
mov
adc
cmp
mov
mov
fistpll
nop
in
es
pop
push
mov
pop
inc
pop
movl
popf
jg
pop
stos
and
push
dec
sarl
icebp
jp
lds
aas
addb
inc
pop
or
loope
mov
movsl
add
lock
shl
sub
mov
sub
or
das
mov
add
sbb
outsb
fs
jmp
push
aas
mov
sbb
ss
or
inc
or
jg
js
pop
xor
aas
ja
ss
mov
aas
or
cmp
xchg
cmp
ss
shlb
loopne
cli
and
lods
sbb
and
cmp
dec
cmpsl
sbb
stos
in
out
lret
fsts
inc
aaa
in
sbb
pop
dec
popa
push
shrl
mov
and
out
into
ss
dec
lea
mov
jle
ljmp
hlt
lret
jmp
mov
imul
mov
mov
cltd
pusha
fsubs
cmp
sbb
sub
pop
sub
jb
sti
pop
mov
xchg
filds
mov
lahf
hlt
inc
pop
ljmp
xchg
fbstp
adc
adc
push
sbbl
cmovns
mov
jecxz
mov
testb
jo
xlat
xchg
dec
mov
js
fadd
add
aaa
or
enter
push
pop
in
jmp
aad
jne
cmp
add
in
mov
inc
incb
int
sbb
out
stc
cmp
lock
shll
hlt
lock
stos
mov
add
out
mov
add
push
and
push
icebp
jl
xchg
mov
mov
ret
test
sbb
xor
scas
loop
xor
in
aam
mov
adc
and
cmpsl
dec
je
push
xor
mov
and
clc
jns
mov
mov
lret
mov
cld
mov
repz
jns
aam
call
fcmovne
push
mov
call
adc
int
in
mov
movsb
push
dec
mov
dec
aam
outsl
jp
cmp
inc
shrl
je
int3
data16
xor
push
sub
push
data16
adc
dec
cld
arpl
movsl
lea
mov
or
ret
stos
pop
lea
xor
dec
inc
je
into
xchg
adc
bt
scas
lcall
mov
in
mov
jge
aam
test
xchg
mov
push
leave
int
repnz
mov
mov
sub
mov
nop
push
shrb
xor
xor
loop
jne
mov
cmp
lret
xchg
rolb
jge
enter
mov
test
adc
pop
stos
jmp
xchg
idivl
vmwrite
add
sub
mov
cmp
jo
addb
pushf
ret
jno
adc
jb
shlb
xchg
leave
ret
mov
xor
ret
adc
iret
mov
or
mov
cmp
mov
jle
pop
mov
fwait
mov
test
cwtl
xchg
mov
dec
or
nop
adc
mov
adc
lds
sub
leave
push
sti
lret
enter
xor
mov
leave
bound
fstpt
std
lcall
pop
jle
adc
or
push
and
adc
dec
pusha
cmp
inc
jl
xorb
cmc
pop
imul
xlat
fcmovne
xor
lret
int3
out
test
mov
das
mov
rolb
mov
cmp
sahf
out
int
push
pushf
lods
inc
cmp
cmpsl
fisubrs
sub
or
inc
shl
fldcw
lock
es
jle
mov
jg
inc
xchg
jecxz
or
cmc
rcrb
push
test
rolb
ss
or
inc
add
int
mov
pop
cltd
std
addr16
adc
cmpsl
or
cmp
out
xchg
dec
xor
rcr
out
in
enter
ret
push
mov
mov
sbb
lret
lock
stc
andl
dec
addb
sbb
nop
cmp
mov
addr16
ret
jno
push
or
out
jg
imul
and
and
sbbb
jno
lods
loope
leave
adc
inc
jb
mov
repz
aad
lods
xchg
jne
inc
push
inc
cmpsl
pop
gs
popa
jne
sub
xchg
jae
cli
subl
jecxz
in
sbb
aas
shll
pop
fs
gs
cli
inc
push
sub
push
loope
inc
cld
pop
ds
test
mov
addr16
out
push
jae
pop
add
fs
fs
cmp
adc
mov
xor
jge
cmp
orl
cmc
shll
xchg
xor
icebp
sti
lods
pop
scas
cmp
stc
and
xchg
mov
add
out
cld
jnp
dec
bound
or
mov
popf
gs
pushf
sbb
xchg
dec
or
fs
sbb
ret
ficoms
cld
mov
push
int
mov
jns
dec
push
stos
aaa
mov
dec
sbb
dec
call
flds
pop
in
lods
push
or
push
xchg
jge
add
jge
push
mov
mov
data16
adc
aam
cmpsl
add
adc
push
cld
fbld
xchg
xlat
push
repnz
lds
xchg
aam
out
hlt
shrl
dec
mov
insb
inc
inc
ror
sub
jno
sbb
jb
ljmp
push
mov
jnp
filds
sbbl
lds
mov
adc
xor
dec
add
or
scas
sbb
repz
loope
lea
pushf
stos
out
cmp
aas
mov
cmp
mov
sbb
mov
test
lea
dec
dec
add
gs
push
dec
int
mov
xor
shl
testb
addl
shlb
test
js
mov
outsl
xchg
mov
stos
pop
xlat
add
sub
out
mov
int3
pop
and
fs
and
mov
sbbb
fwait
loop
movsl
repnz
lcall
pushf
or
xchg
nop
fistpl
fstps
xchg
rcrl
push
imul
aam
in
popf
rclb
cltd
sti
clc
fstl
xchg
xlat
push
imul
dec
popf
adc
add
stos
sarb
mov
imul
sub
jl
ds
rclb
shll
out
sbbl
xlat
xchg
or
jl
movq
cmp
and
dec
dec
out
cmp
pop
in
add
cs
pop
push
idivb
jbe
cmpsb
fwait
adc
mov
dec
sub
lock
xchg
cld
outsl
clc
into
xlat
xor
dec
ret
adc
into
jg
xor
imul
sbb
push
jg
sub
roll
inc
xchg
hlt
sbb
int3
pushf
stos
xchg
je
and
push
jo
jl
jmp
int3
notl
les
pusha
gs
push
jae
inc
xchg
arpl
popf
ret
mov
jnp
cmp
cmp
cmp
push
push
les
in
loope
out
xchg
xchg
hlt
hlt
data16
push
fwait
and
mov
iret
push
rol
pop
pop
inc
call
aas
cmpsb
inc
inc
outsb
push
add
scas
sahf
mov
inc
lods
pop
jge
test
mov
mov
hlt
push
ljmp
pandn
xor
ret
or
push
cmc
shlb
or
negl
push
xor
repz
mov
dec
out
rolb
aam
aam
cmp
arpl
out
aaa
icebp
sub
insl
js
xchg
inc
out
fsubrl
sbb
fdivrp
sbb
dec
in
jo
cmp
fildll
in
xchg
lahf
getsec
fbld
fwait
dec
ds
shlb
int
data16
dec
rorb
mov
imul
movsb
jge
and
inc
dec
daa
push
xchg
int3
cmp
movsb
sub
push
popf
pop
das
in
or
xor
in
xchg
out
stos
mov
sbb
insb
sub
pop
jnp
jl
mov
lret
mov
rclb
fmull
pop
int3
or
addl
inc
inc
adc
lahf
mov
push
adc
xchg
les
daa
in
cmp
iret
mov
jo
nop
cmp
inc
mov
popa
pop
xor
push
cli
in
test
push
vpinsrw
loope
ljmp
pusha
or
leave
pop
dec
and
aam
adc
lret
stos
shlb
push
fldenv
push
cmp
outsl
xchg
dec
sub
xorl
add
mov
addb
leave
ja
mov
push
mull
or
test
pop
adc
in
fimull
imul
fcompl
pop
repz
xor
sahf
dec
scas
add
and
jl
inc
add
dec
ret
std
arpl
popf
movsb
xor
cwtl
jecxz
mov
stos
sub
lock
pop
out
cmp
push
mov
pop
gs
aam
into
lcall
pop
fadds
int
adc
mov
and
xchg
fildl
std
movsl
jnp
loopne
mov
repz
hlt
pop
icebp
push
mov
ret
jnp
and
add
pop
cmpsb
sahf
sahf
cld
cld
jns
dec
and
loopne
cmc
jns
dec
enter
loopne
mov
jo
addr16
or
repnz
mov
pop
jae
sarb
idiv
sti
aad
xor
lods
cmp
out
xor
mov
cmp
sub
adc
add
in
inc
mov
sub
imul
out
icebp
aad
sub
call
or
adc
call
loope
movsb
rcrb
imul
cli
mov
int
roll
shl
push
lods
shll
stos
pop
jp
xchg
test
es
fmuls
bound
shll
jl
scas
inc
mov
lcall
jo
inc
jns
and
dec
mov
sub
jb
scas
idivb
call
ret
jge
push
je
in
into
loopne
pop
icebp
jmp
mov
out
cwtl
jge
pop
jae
adc
repz
mov
lret
mov
mov
ret
pop
repnz
popa
dec
test
out
pcmpgtb
std
movsb
xchg
mov
imul
mov
out
jns
call
adc
or
movsl
fstps
insb
xchg
aad
cli
int3
cmpsb
insb
ficoms
xchg
push
xchg
adc
xor
and
aas
push
xor
loopne
mov
psrad
lcall
fadds
lret
out
scas
gs
push
je
in
es
xchg
or
xor
push
push
sub
inc
inc
test
xor
fstl
add
test
xor
inc
push
dec
and
add
dec
scas
adc
popa
fisubrl
jg
mov
es
add
mov
in
mov
mov
lock
sbb
mov
insb
clc
in
pop
dec
add
add
pop
cmpsb
mov
inc
ljmp
jge
sbb
into
movsl
int
or
mov
outsb
insl
fcoms
xchg
push
and
add
inc
clc
outsb
dec
xor
fdivrs
inc
mov
mov
insw
cmpsl
jns
pop
add
jge
mov
cli
mov
sbb
xchg
add
inc
jge
inc
ljmp
xor
mov
mov
pusha
add
stc
push
js
ljmp
sbb
xchg
jbe
lahf
aad
jno
cmp
push
xchg
sub
sbb
inc
mov
mov
dec
out
dec
in
sbb
push
pop
dec
fwait
loope
fcompl
jne
fcoms
push
mov
mov
cmp
fistpl
call
test
cli
xchg
das
jl
scas
push
dec
push
out
push
std
add
sbb
out
stos
loop
mov
dec
fsubs
add
xor
data16
rcll
arpl
xchg
inc
xchg
dec
outsl
mov
pop
arpl
repz
jno
enter
jp
pop
adc
test
stos
mov
jg,pn
iret
sub
out
cmp
insb
inc
push
das
or
test
jmp
lret
fndisi(8087
inc
pop
cmp
es
repnz
jmp
sbb
movq
stc
pop
xor
push
mov
sbb
sahf
clc
push
lea
repnz
fcoms
insl
add
push
outsb
hlt
jns
subl
sbb
in
sbb
stc
or
movsl
fstps
xchg
adc
shl
lds
jg
and
add
fs
xor
push
lods
mov
rclb
fnstsw
daa
pop
test
out
xchg
test
insb
mov
lret
mov
xchg
cmpsb
out
xor
or
sub
fdivr
scas
fnstsw
push
out
mov
daa
sbb
pushf
lods
pop
shrl
or
repnz
sub
or
jno
xchg
movsl
push
outsb
fisubrs
inc
hlt
daa
js
test
cmp
icebp
lock
cmc
xlat
jecxz
jmp
testl
adcb
js
fildl
jo
cmpsl
xchg
shll
push
xlat
les
sbb
repnz
sub
cmp
outsb
mov
mov
insb
cltd
stc
out
mov
jp
cmp
mov
add
or
aad
xor
mov
movsl
jnp
cmp
cmpsb
sub
into
mov
push
test
push
iret
ljmp
loopne
cld
test
scas
jge
cmp
lds
push
cmp
sub
into
jns
ror
cld
in
mov
std
jmp
mov
call
lret
enter
mov
dec
xor
int
dec
outsl
mov
xchg
stos
cmp
popf
jae
push
nop
iret
fimull
out
out
jnp
mov
sti
mov
sahf
and
stos
or
into
stc
jge
mov
mov
pop
sub
push
popl
insb
push
xchg
mov
out
test
and
dec
mov
sbb
loope
cmc
movsb
in
lea
jl
jne
aad
mov
rcrb
int
sarb
or
in
lret
pop
pushl
cmp
dec
leave
out
ss
mov
mov
xor
dec
xchg
fisubs
dec
out
repnz
bound
xchg
mov
int3
mov
push
int
xchg
mov
leave
dec
inc
and
int3
das
cmp
testw
xor
adc
out
jnp
dec
and
or
inc
jnp
orb
jge
sub
mov
sbb
lods
loop
pop
inc
aas
stos
lock
inc
push
pop
lret
in
push
inc
inc
mov
insl
push
pop
test
stos
addps
push
repnz
jne
and
push
pop
test
sbb
outsl
je
sub
add
mov
cltd
ret
inc
cmpb
push
cwtl
mov
mov
imul
or
mov
inc
and
leave
outsl
mov
jmp
sbb
mov
aam
clc
pop
sbb
xor
dec
inc
jae
lret
and
int3
movsl
and
lcall
add
notb
mov
frstor
stos
add
mov
bound
xchg
xor
add
mov
scas
pop
pop
clc
sbb
push
cmp
sbb
addb
cmpsb
cmpl
ret
mov
gs
movsb
sub
je
jmp
out
mov
push
xchg
or
lret
dec
jns
shll
jle
mov
stos
push
push
repnz
jecxz
jo
mov
pop
bound
movntps
push
in
stc
mov
cmpsl
pop
int
and
outsb
xchg
data16
out
inc
cmp
xchg
cwtl
mov
mov
cmp
cmc
jl
cmp
movsb
jmp
add
ficoms
push
insb
loope
inc
outsl
jecxz
cmp
or
scas
ljmp
xor
pop
xchg
and
in
adc
lcall
push
pop
jecxz
loope
addr16
aaa
fwait
test
xchg
adc
pop
cmc
or
jne
ljmp
sbb
push
push
repnz
sub
push
data16
pushf
aas
inc
mov
fimull
jnp
push
and
movsb
ret
pop
xchg
push
cmp
xor
cmp
adc
rorb
mov
inc
leave
ja
outsl
je
adc
sub
stc
pop
loop
and
push
mov
dec
leave
sub
cmovne
call
test
mov
mov
loop
es
fdivr
bound
mov
jg
les
mov
sti
icebp
aaa
in
sub
addb
loope
xchg
scas
push
and
pop
dec
adc
mov
mov
fimuls
mov
xchg
dec
cld
inc
aam
leave
mov
cmovo
out
fstpl
fdivrp
jae
ds
hlt
bound
daa
mov
insl
lret
sti
ljmp
int3
fidivrl
repnz
ss
ds
popa
inc
cwtl
push
jno
in
mov
push
pop
in
dec
xor
mov
enter
int
cmpsb
aam
xor
jne
fadds
test
mov
mov
and
add
fildl
out
cltd
sbb
adc
ficomps
data16
ror
es
lret
or
daa
adc
mov
jae
test
lret
in
dec
inc
sbb
mov
movsl
cmpsb
xor
fcmove
movsb
dec
inc
mov
hlt
mov
and
daa
pop
and
adc
inc
and
leave
loope
mov
sbb
adc
mov
sub
iret
fmul
add
push
clc
xlat
out
jmp
int3
dec
push
mov
sub
loopne
movsb
jecxz
insb
es
dec
daa
push
sbb
mulb
lds
mov
std
mov
bound
das
sbb
jle
push
ror
fdivl
scas
mov
fdivr
aaa
push
cmpsl
mov
loop
in
je
cwtl
inc
mov
movsl
xorb
sbb
xor
mov
xor
call
aad
out
cmpb
mov
fcomip
lcall
inc
data16
mov
sub
xor
aaa
or
daa
pop
mov
cmpsl
in
push
test
test
mov
dec
fs
mov
out
xchg
ficoms
jl
jno
mov
xchg
fsubrs
es
jp
push
pop
movsl
mov
in
movsl
fwait
lea
mov
xchg
pop
mov
in
loope
xor
lock
mov
push
dec
clc
pop
pop
jecxz
push
dec
loope
inc
movsb
lea
jl
in
out
and
scas
mov
insb
rolb
push
in
sub
xor
dec
cmc
mov
mov
jo
adc
mov
inc
xchg
xchg
xor
aaa
jns
addl
popf
and
mov
sbb
vaddss
adc
xor
sbb
inc
cmp
lods
ds
xor
or
frstpm(287
popf
test
pop
cli
leave
into
lcall
xor
int3
cmp
test
rclb
inc
or
xchg
cli
jg
insb
lods
inc
popf
test
fistpl
pop
hlt
insl
je
lret
or
xchg
movsl
xchg
jmp
add
jmp
cwtl
sub
bound
pop
mov
das
fucomi
adc
rorl
test
aad
and
fsubl
nop
and
and
nop
mov
notl
maxps
or
aad
call
cli
dec
push
sbb
mov
sbb
cli
sbb
mov
mov
push
xor
shl
mov
test
sahf
xchg
dec
adc
jnp
dec
fldl
adc
sti
jge
lods
stos
xor
loope
mov
dec
sub
jg
movsl
lods
jle
jl
arpl
pusha
inc
icebp
xchg
cmp
aaa
leave
add
scas
adc
and
inc
fcoms
push
imul
sub
mov
jo
shll
mov
mov
dec
cli
mov
or
fimuls
sarb
inc
jb
nop
jle
shll
xchg
mov
jge
adc
push
inc
sar
pop
popa
mov
cltd
mov
rcll
push
dec
jmp
xchg
pop
mov
sahf
dec
call
or
jge
cmpsb
outsl
xor
mov
add
xchg
sahf
fsubrl
cmpsl
enter
xorps
pop
and
pop
aaa
sahf
cmpsb
ds
adc
sbb
test
sbb
enter
mov
xchg
add
sub
mov
popa
lea
add
out
in
fistpll
mov
and
test
xorl
subl
es
jecxz
addr16
fnstsw
inc
movsb
testl
jecxz
mov
loopne
enter
pop
mov
mov
rolb
inc
fs
arpl
movsb
shrb
sbb
call
dec
push
jmp
cltd
sbbb
add
mov
sub
mov
hlt
jbe
xchg
das
xor
sbb
mul
in
jp
leave
fcmovnb
xchg
xchg
out
pop
inc
negb
in
mov
pop
pop
aam
dec
cwtl
fmull
out
mov
jnp
lcall
dec
in
jbe
mov
sbb
fcom
gs
orl
pop
xchg
inc
xchg
sahf
and
adc
out
rcrl
addl
push
repz
popa
stos
xor
xchg
sbb
ja
inc
push
fld1
xchg
adc
xchg
cmpsl
cmc
mov
sbb
lea
or
or
and
cmp
push
psubusw
mov
mov
jecxz
fbstp
dec
sbbb
ficoml
int
jne
fs
xchg
dec
rorb
xor
xchg
fsubl
dec
adc
jae
in
insl
push
mov
ret
in
loope
push
dec
lods
cmp
xrelease
insl
add
inc
lods
out
lret
pop
fnclex
adc
dec
mov
loope
dec
loop
sub
pop
roll
andb
or
and
lea
and
lcall
outsb
inc
mov
pop
aam
push
hlt
pop
movaps
lock
sbb
mov
xchg
and
mov
rcrl
fdivl
pop
js
pop
lahf
mov
lock
adc
pop
cmp
clc
dec
leave
repnz
mov
jge
inc
sbb
ficomps
faddl
cmpsl
or
pusha
cld
mov
popa
cmp
push
ljmp
sub
idiv
inc
cs
cli
call
jb
imul
and
sarl
or
sbbl
ljmp
in
fs
ret
mov
xchg
xchg
nop
lods
cmp
fbld
inc
mov
cltd
imul
mov
mov
jle
xchg
dec
dec
mov
xor
sub
cli
or
mov
mov
cmp
adcl
inc
dec
push
xor
daa
push
ffree
cmp
int
xor
mov
jge
cli
stc
mov
push
sbb
push
les
pop
pop
int
push
jno
int3
rorl
pop
into
or
mov
inc
bound
mov
xor
cwtl
aam
movsb
jl
or
mov
mov
inc
push
mov
push
or
dec
jmp
sub
push
int
dec
jp
cmc
out
popf
or
stc
pop
sbb
nop
adc
mov
fs
mov
sar
and
pusha
out
fstpl
mov
mov
sbb
lods
loopne
roll
add
add
mov
std
ja
daa
fstl
lret
stos
xchg
clc
leave
mov
jecxz
sub
int
add
cmp
das
lea
fsubrl
popf
mov
lahf
pop
dec
inc
xlat
jp
and
mov
pop
add
dec
push
push
mov
fldt
push
mov
aas
int3
shll
and
std
xchg
sti
mov
jno
push
cmp
ret
pop
js
inc
jne
mov
sbb
sti
and
fldenv
lods
stos
sub
xchg
sub
xchg
or
mov
and
inc
mov
push
push
aad
imul
dec
in
pop
sbb
adc
jle
inc
xchg
cmp
cmp
jecxz
pop
adc
push
pop
popf
add
pushf
sub
mov
jnp
adc
mov
push
inc
hlt
push
and
cli
sarl
jl
add
pop
dec
sub
xchg
mov
sbb
pop
inc
xchg
pop
incl
adc
mov
inc
repnz
xor
or
cmp
fcoml
and
loop
sub
loope
imul
pop
xchg
sub
push
sbb
mov
cmp
movsl
stos
int3
add
lcall
mov
dec
shr
int
lods
stos
inc
jmp
push
jb
inc
mov
cmpsb
mov
lds
and
loopne
cmp
jg
mov
mov
inc
or
inc
nop
mov
inc
dec
mov
inc
pop
sarl
aad
xchg
cmc
mov
pop
dec
xor
int
iret
jne
test
cmp
jp
fstps
js
out
mov
xchg
dec
sub
adc
lea
jge
cmp
fsubrl
or
sbb
push
imul
dec
or
lods
fists
xcrypt-ofb
cmpsl
out
cli
stc
dec
loope
dec
pop
pop
fld
mov
xor
xor
aaa
fsubl
pushf
cmp
add
and
cmove
cmpsl
sub
cli
scas
mov
jle
fbstp
add
daa
mov
into
out
jne
in
and
or
adc
or
jbe
sub
int3
out
cld
cld
sub
and
hlt
adc
out
mov
pop
sub
popl
rclb
loopne
xchg
mov
scas
mov
fadd
popa
pop
test
add
popf
sarl
push
es
mov
test
sbb
orl
fidivrs
popa
adc
lds
imul
cli
add
adc
pop
lods
and
arpl
sub
push
insl
fsub
idivb
rcll
jg
cmpsl
push
es
repnz
sub
pop
push
and
sub
jnp
or
call
arpl
jle
push
loopne
add
lds
fsubrp
jg
jmp
pop
out
add
fsubrp
push
jl
xchg
jmp
fsubp
cmp
pusha
cmc
cmpsb
inc
mov
pop
and
add
and
pusha
cmp
in
mov
out
lcall
lds
lds
jmp
lock
add
push
push
or
out
mov
ljmp
stc
dec
lods
mov
mov
mov
push
adc
dec
sbb
push
ljmp
out
sub
adc
js
inc
or
shlb
pop
test
sbb
pop
mov
mov
dec
movsl
mov
dec
test
lock
data16
pop
ljmp
mov
or
xchg
ret
and
lret
mov
xchg
dec
mov
xor
es
xor
fldt
std
in
mov
push
loopne
addr16
or
cli
jno
lock
iret
cli
xlat
fwait
test
in
push
sub
faddp
iret
mov
push
xchg
in
pop
dec
or
mov
in
out
and
xchg
push
inc
mov
mov
mov
int
in
cmpsb
add
stos
mov
and
bound
push
push
jle
sub
cmp
and
inc
mov
mov
cmc
mov
xor
ss
clc
arpl
ret
insb
inc
sarl
pop
and
popf
mov
jne
rcrb
popa
mov
mov
scas
sub
fldl
cs
and
mov
test
push
or
pop
in
pusha
pushf
add
mov
mov
cltd
adc
repz
xchg
xchg
shll
and
pop
loope
inc
xor
cmc
lods
out
mov
out
jnp
mov
sbb
stos
or
pop
aam
sar
pusha
scas
dec
xchg
stc
cwtl
mov
mov
daa
inc
movsb
sub
fcoml
ds
pop
xchg
jb
vpperm
in
lds
out
xor
sti
push
jns
sti
int
jle
sub
icebp
push
mov
into
xor
std
jae
jle
repnz
push
inc
bnd
push
mov
mov
iret
js
jge
mov
enter
xchg
inc
jo
mov
or
xchg
lcall
pusha
push
mov
dec
cmp
sbb
out
jmp
pop
das
push
sbb
dec
jno
sub
movsb
jmp
cmp
add
cmp
pop
xor
inc
pop
test
sub
jae
pop
xchg
nop
ja
mov
sbb
ret
mov
xchg
lods
nop
test
pop
test
into
push
hlt
push
xor
ljmp
push
mov
xchg
jl
jg
mov
pop
sub
ss
mov
inc
pop
and
lea
sub
popf
leave
mov
int3
add
inc
mov
mov
mov
pop
lods
int3
dec
repnz
push
mov
js
add
popf
int
mov
xor
jle
data16
pop
mov
push
jge
lds
out
dec
cs
out
ret
mov
clc
jecxz
push
mov
jl
std
dec
test
scas
inc
call
addr16
mov
and
loopne
dec
cmp
std
sub
loop
adcl
xchg
fstl
insb
xchg
cmp
and
outsb
out
xchg
mov
inc
imul
das
gs
in
insb
leave
scas
dec
clc
inc
jns
push
loope
pushl
xchg
cmp
jo
cli
stos
push
add
push
inc
jno
mov
popa
xchg
cltd
xchg
and
aas
ret
mov
test
jl
pop
dec
fldl
lock
dec
ljmp
jl
push
fdivs
dec
cld
adc
mov
mov
xchg
lock
movsl
fs
enter
rorl
fisubrl
sub
icebp
xchg
sub
dec
sub
and
fimull
fisubs
push
adc
dec
xchg
pop
gs
sub
xchg
cltd
or
add
sub
push
out
sahf
sbb
xor
push
xor
iret
push
mov
pushf
add
popa
dec
dec
mov
jmp
test
rcr
cwtd
jecxz
gs
mov
stc
xchg
lret
int
outsb
movsb
shll
cmp
jnp
stc
adc
add
xor
xor
in
push
test
hlt
xchg
lods
cmp
sub
repz
test
cs
mov
mov
cmc
jo
ret
jae
dec
xchg
pop
pop
jne
cld
pop
add
arpl
lock
cmp
push
stos
sub
dec
int3
inc
popf
xchg
movsl
or
xchg
dec
gs
ja
add
push
mov
cld
lret
stos
push
cmp
pop
adcb
shrb
cwtl
add
cmp
jo
enter
adc
and
mov
adc
sub
inc
mov
and
ror
xlat
mov
call
in
lahf
cld
inc
fisubrs
repnz
jns
pop
jecxz
cli
outsb
push
aam
mov
adc
ljmp
scas
ja
pop
pop
cmp
repz
test
cwtl
in
jmp
das
les
jno
dec
jg
int
lods
adc
xchg
jnp
pop
fadds
mov
fs
ja
inc
mov
fstpt
mov
and
pop
mov
add
adc
push
incb
sub
addr16
jno
xchg
stos
push
or
mov
mov
jns
push
dec
inc
inc
inc
and
xchg
add
adc
cmp
mov
pop
push
call
jp
dec
fs
shrl
push
push
ds
dec
ja
adc
jae
adc
mov
push
test
xor
daa
add
les
cmpsb
add
loopne
jo,pn
jns
popf
lret
xchg
xorl
sbb
pop
pop
dec
pop
fldt
jl
or
adc
insl
add
sub
xlat
and
mov
jno
fs
ret
imul
mov
xchg
push
ret
fbstp
pop
jne
jge
adc
std
rclb
dec
pushf
dec
adc
jge
push
push
mov
lods
inc
mov
mov
ja
in
add
mov
mov
dec
jns
push
pop
add
inc
int
inc
call
xlat
pusha
jl
pop
faddp
xchg
or
cmp
leave
repz
and
rcrl
pop
inc
mov
test
les
xor
cmpsl
push
sub
push
and
aaa
inc
jo
dec
shr
pop
loope
sub
push
scas
inc
js
aas
xchg
add
lret
mov
inc
or
fs
cld
in
sub
inc
int3
jl
xor
lcall
push
or
adc
mov
andl
fs
leave
es
in
adc
inc
pop
add
aad
jmp
testb
and
mov
push
je
mov
fmuls
mov
lods
xor
mov
addr16
lahf
cmpsb
fwait
sub
pop
pop
pop
adc
pusha
lea
sbb
popa
add
push
in
xchg
test
lds
or
push
out
aad
xchg
pop
mov
pop
adc
movsb
add
sbb
lahf
add
stc
dec
orb
faddl
dec
xchg
int3
push
push
cmp
mov
xchg
ljmp
xchg
push
pop
xor
cwtl
scas
loope
lea
xchg
dec
fs
push
testl
jge
jb
dec
cld
mov
pop
inc
fucomp
pop
daa
jbe
mov
xor
stos
aaa
cmp
addr16
iret
xor
fisubl
sub
sbbb
lock
mov
cmpb
fmull
xchg
inc
jno
mov
sbbl
push
mov
in
nop
pop
sahf
lahf
jecxz
test
add
pop
out
inc
or
cmp
fistps
jmp
xlat
faddl
add
sbb
cmpsl
sub
call
lods
push
pop
and
lahf
jo
shrd
adc
into
sub
push
xor
dec
cld
xchg
jae
or
iret
xchg
loopne
pusha
enter
mov
dec
mov
dec
cmp
adc
into
push
cmpsl
sbb
cmp
push
sub
cmc
mov
push
inc
ret
mov
iret
pop
enter
sub
ds
cmp
andb
out
add
cmp
push
cmc
mov
mov
lods
fcoms
clc
lret
sub
push
mov
sbb
pop
jp
dec
sub
inc
mov
sbb
jg
push
insl
orl
pushl
out
adc
sub
xchg
ja
pop
cmp
pop
jno
sub
xor
xchg
adc
push
stc
mov
xor
rclb
sbb
gs
and
aaa
dec
mov
popl
icebp
xchg
pop
mov
and
mov
sub
scas
pop
pop
mov
shl
inc
pop
fiaddl
dec
scas
or
insl
mov
cmpsl
sbb
pop
push
mov
je
push
movsb
jbe
cli
add
test
popf
stos
mov
sbb
and
push
xchg
jle
dec
add
out
into
js
add
add
aas
or
adc
insl
jmp
aaa
mov
push
stos
jge
in
sub
cmp
mov
sub
cmc
push
jecxz
cmp
jle
out
lods
jle
les
xor
pop
fdivs
jb
popf
gs
mov
add
push
cmp
call
inc
cmp
ja
push
mov
mov
inc
shll
ss
mov
mov
fidivs
dec
gs
push
setns
fsubrl
xchg
testl
inc
pop
pop
and
fiadds
mov
leave
push
add
inc
filds
and
ss
ret
addr16
mov
cmpb
and
cmp
imul
jge
mov
or
and
scas
jmp
in
inc
push
sbb
ja
xor
xor
mov
or
rcll
add
sahf
arpl
push
in
out
inc
out
rcl
imul
xor
pop
push
pop
pushf
orb
ficompl
push
xor
imul
lds
jecxz
jg
outsb
pusha
sub
pop
ret
ret
pop
call
lods
add
arpl
int3
jg
jno
xor
xchg
sub
or
lret
mov
jmp
dec
sub
inc
mov
in
scas
xchg
stos
and
notb
cmc
in
lret
mov
sbb
jmp
lret
mov
dec
ja
push
fbld
xor
mov
mov
bound
or
push
imul
stos
sbb
push
lahf
xchg
int3
sbb
repz
addl
sbb
jp
dec
xchg
inc
or
adc
xchg
sti
loope
dec
fidivl
aaa
or
mov
mov
sbb
icebp
ss
xchg
cmp
scas
adc
addl
in
push
fists
jbe
push
pop
xchg
imul
repz
jp
xchg
daa
cld
cli
mov
mov
mov
popa
call
mov
fs
xchg
mov
into
dec
or
pop
in
cwtl
addb
div
mov
or
adc
shlb
cmpsb
mov
mov
orb
sbb
fists
cmp
cld
lcall
int3
scas
push
sub
mov
arpl
push
lret
mov
cmp
sub
clc
imul
test
and
jl
cmp
and
je
into
fidivrs
enter
std
and
outsl
aas
dec
push
sahf
negl
or
fxch
and
out
jl
test
mov
popf
stc
rolb
aaa
cmp
xchg
inc
clc
and
in
pop
dec
fisubl
rcrb
aad
out
js
das
jnp
in
fmull
pushl
mov
push
push
popf
cmpsb
xchg
add
adc
jno
jb
imul
mov
mov
hlt
jp
leave
sbb
pop
cmp
sbb
add
das
xlat
pushf
pop
pop
xor
pop
jmp
popa
dec
xchg
adc
in
inc
cmpsl
div
frstor
jae
and
adc
jns
xlat
push
ffreep
ret
lret
popa
aas
inc
or
mov
rclb
cwtl
cmpsl
mov
inc
mov
cltd
leave
lods
push
test
loopne
jmp
push
add
mov
push
cli
pop
or
mov
outsb
adc
mov
test
pop
cmp
mov
jmp
ret
inc
cmp
jg
insb
jbe
test
cmpsl
int3
sahf
lret
add
in
icebp
mov
push
fildl
sub
pop
cmp
fldl
jne
push
cmc
dec
jg
add
invd
and
clc
mov
push
push
outsl
ret
test
push
jbe
enter
in
xor
xchg
add
clc
dec
add
or
pop
int
mov
and
sahf
cs
sub
movl
xor
mov
jecxz
aad
mov
popa
stos
dec
jb
aas
loope
cmp
jp
notb
add
cmp
loopne
xorb
fwait
lock
or
and
add
xchg
lret
das
and
pop
dec
pushf
popf
mov
pusha
lods
addr16
xor
lcall
aaa
and
sbb
insl
sahf
ss
int
stos
fisubl
sahf
xchg
inc
std
dec
nop
xor
cmpsb
inc
ret
lret
mov
shll
pop
xchg
add
iret
or
adc
rorb
push
push
or
dec
cmpsb
sub
xchg
subl
add
cs
ja
pop
fnstcw
mov
sub
or
mov
iret
add
fadds
add
mov
mov
cli
inc
mov
je
lea
pop
jmp
cld
inc
sbb
dec
xchg
std
testb
mov
adc
pop
cmp
cmp
and
ljmp
sub
jno
out
int3
ret
scas
lods
sti
dec
in
fs
xchg
jl
push
ljmp
xor
aad
cmp
fdivrl
add
enter
mov
xchg
insb
xchg
add
jg
push
int
aas
adc
adc
les
xor
dec
pushf
outsb
rcll
fucom
sti
enter
sub
aam
mov
repz
jb
cmpsl
xorl
sub
mov
pop
dec
push
mov
mov
pop
daa
inc
inc
jp
adc
imul
jecxz
cmc
lea
enter
add
pop
ds
mov
cwtl
es
push
add
sub
cmp
pusha
and
leave
jg
sub
in
inc
les
mov
mov
mov
jge
arpl
dec
jbe
cld
mov
clc
adc
sbb
daa
mov
xchg
mov
mov
mov
subl
insb
sub
mov
shlb
xchg
jbe
aas
leave
push
pop
jmp
lock
xor
subb
sub
xor
and
adc
dec
push
iret
adc
das
outsl
sarl
inc
lcall
testl
es
pop
push
or
aaa
add
pop
jle
pop
cmp
cli
xor
sbb
fcomp
and
xor
fidivl
adc
inc
xor
incb
mov
loopne
or
aad
sbb
dec
dec
fmuls
mov
ret
not
mov
fdivrl
into
loop
popa
popf
or
movsb
fidivrl
out
out
mov
pop
pop
movsb
sbb
cmp
adc
pop
js
ret
push
inc
jge
sub
sub
inc
pop
push
mov
push
cmp
or
cmc
orl
add
test
subl
outsl
inc
mov
test
or
dec
mov
jmp
insl
cwtl
ffree
dec
push
enter
sbbb
dec
test
fwait
dec
xchg
sub
jle
inc
les
test
pop
sbb
fisttps
jge
dec
jecxz
jge
ret
js
stc
adc
xchg
add
pop
mov
ljmp
cmc
dec
mov
test
mov
cmp
or
push
mov
bound
aam
test
arpl
sahf
mov
mov
mov
or
adc
std
add
inc
repnz
mov
pop
xchg
je
mov
loop
and
sub
loope
xor
lcall
scas
dec
test
sahf
jne
dec
shl
xlat
inc
sbb
jno
out
pusha
jae
lret
sbb
cltd
xor
cli
imul
mov
sub
dec
pop
xor
imul
push
fucomip
pop
addb
or
dec
lahf
dec
jge
or
in
sub
movsb
cmc
pop
xchg
jnp
or
aad
dec
mov
hlt
xor
rcrl
ficompl
les
out
mov
lock
or
lds
xchg
arpl
aam
shr
clc
out
int3
mov
mull
jp
inc
stos
sti
sub
mov
ret
int3
mov
je
lea
rolb
std
outsl
mov
cmp
fsubrs
popf
pusha
scas
fs
pop
or
int3
gs
lds
shl
push
pop
lock
pop
dec
mov
das
pop
shlb
mov
movsl
push
sbb
imul
scas
push
pop
in
int
popf
mov
aas
ljmp
daa
shll
in
and
cmp
cmpsb
jmp
sub
stos
xorps
popa
bound
dec
or
xchg
hlt
sub
repz
out
xchg
jle
push
dec
xchg
adcl
dec
ljmp
or
jne
js
push
cltd
out
mov
shll
andb
xchg
dec
mov
adc
lock
mov
xor
mull
jo
dec
sbb
pop
push
push
inc
movsb
insl
fmuls
insb
and
push
jmp
lsl
jg
mov
mov
xchg
sbb
xchg
pop
mov
out
dec
in
inc
xor
jmp
js
cmpsb
ss
ja
xchg
orl
sbb
jno
pop
subl
jo
ret
aas
pushf
test
repz
xchg
mov
out
jbe
xlat
mov
jecxz
loopne
arpl
cmp
pop
sub
push
push
xchg
stc
and
adc
aam
call
pop
mov
fcoms
add
insb
push
outsb
stos
mov
es
movsb
inc
fs
rol
add
push
leave
jnp
push
fs
inc
xchg
imul
jne
mov
mov
insl
cs
pushl
sub
mov
mov
sti
jp
movsb
mov
fisubl
pop
in
rorl
rcrb
mov
in
das
xlat
cld
ret
pop
mov
push
les
mov
repz
shrl
cmp
loopne
mov
and
divl
jae
ljmp
popa
add
sbb
loope
dec
or
mov
inc
jo
rorb
fwait
outsb
fbld
pop
fisubs
xor
clc
in
pop
lea
mov
mov
add
shrb
pusha
jo
push
lods
imul
add
xchg
pop
mov
inc
jne
and
mov
push
incb
aaa
lret
test
jmp
jg
xchg
or
je
cmp
or
or
pop
pop
les
mov
pop
xchg
pop
push
or
jg
mov
xchg
jp
cli
push
xchg
xchg
aad
add
in
push
and
cmp
ljmp
add
jl
mov
mov
js
imul
fisubrs
ficoms
std
aas
cmpsl
les
sbb
movsb
sbb
add
pop
lcall
inc
or
sub
pop
fmuls
sub
fistpll
movsb
subb
shlb
int3
shl
xor
cmp
jl
mov
lods
sub
repnz
push
test
fdivrl
imul
cmc
call
inc
es
xchg
out
sarb
daa
cli
icebp
fs
xchg
sbb
lock
jb
mov
push
pushf
ss
add
fsubr
es
xor
and
lods
jecxz
and
pop
lahf
mov
jmp
fisubl
cmp
xor
mov
xor
xchg
add
fidivs
jmp
out
int3
sub
xor
or
push
mov
cltd
mov
xchg
jbe
jg
bound
xchg
adc
ja
data16
mov
jbe
inc
push
mov
jb
jmp
stos
mov
adcb
insl
xor
or
in
sbb
push
sbb
cmp
sbb
out
mov
mov
jge
push
xor
test
push
ljmp
pop
out
test
push
xor
mov
push
ds
xchg
subb
mov
into
out
xor
jo
add
and
jle
test
xorl
cmc
es
movsl
popf
stos
rcrl
repz
xor
mov
rol
mov
pop
xchg
ret
pop
dec
sbb
lret
lfs
sbb
and
mov
and
stos
cmp
mov
idivl
inc
add
sti
fildll
jmp
in
cs
insl
mov
xchg
mov
xchg
mov
inc
cld
std
ret
xchg
lahf
lods
mov
adc
add
js
loope
xlat
xor
sub
or
jg
pushf
test
push
shrl
rclb
stos
aam
shr
mov
cs
mov
adc
insl
xchg
rorl
xchg
nop
in
out
lret
dec
cmp
inc
hlt
mov
mov
scas
cltd
pop
adc
cli
push
imul
dec
aam
out
mov
test
out
mov
fistps
add
mov
jge
nop
push
adc
pop
imul
stc
add
sarl
fs
test
jnp
inc
lret
dec
mov
cltd
xchg
push
dec
fwait
ljmp
cmp
cli
lret
push
jge
into
add
add
js
mov
adc
push
push
clc
movzwl
sub
xor
jbe
mov
pop
push
ror
lea
call
stos
popa
test
decl
add
sbbb
push
jmp
mov
dec
xchg
arpl
enter
xchg
in
mov
nop
lods
xor
hlt
shr
popa
push
cmpl
lahf
push
outsl
insb
inc
scas
fistpll
and
mov
insl
aaa
cmp
sub
xor
and
rclb
int3
mov
dec
clc
mov
jno
insb
lock
jg
mov
and
jmp
leave
push
and
adc
sbb
push
sbb
fs
sbb
mov
pop
js
ja
rcll
stos
lret
mov
stos
sub
lahf
inc
je
dec
mov
sbb
cltd
add
arpl
repz
test
dec
insb
or
jbe
mov
test
leave
xor
or
xor
xor
cmp
mov
cmp
lret
loope
jbe
stc
cmp
push
pop
cmp
rcl
add
sahf
mov
out
fisttpll
insb
jae
sbb
push
sub
xchg
xor
movsb
jge
les
adc
sbb
lret
push
lods
add
nop
jb
jne
or
xchg
push
adc
and
push
lods
cmp
repnz
adc
sub
or
clc
pop
cmpsl
imul
xchg
jnp
shrl
scas
divl
push
fcmovnu
mov
mov
inc
js
cld
cmp
ljmp
sar
mov
sbb
xor
pop
je
sub
mov
incb
popl
add
shlb
cmpb
ss
push
xchg
mov
into
loopne
mov
scas
pop
pop
lahf
lret
or
push
fdivrl
test
cmp
mov
test
and
arpl
int3
cmp
xlat
cmp
mov
jbe
xchg
xchg
fisttpll
int3
stos
sti
lahf
mov
je
scas
in
es
stos
mov
imul
pop
dec
sbb
icebp
repnz
adc
push
outsl
mov
test
sub
icebp
bound
cwtl
mov
stos
cmp
mov
push
adc
push
dec
cs
inc
inc
aad
es
movsl
movsb
dec
xchg
lock
and
jo
add
jb
or
imul
pop
mov
cmpsb
jo
in
pop
pop
stc
xchg
mov
inc
xchg
repz
push
stc
jno
mov
xor
push
xchg
popa
into
iret
sahf
divb
addr16
popl
rcrb
faddp
mov
jl
xor
icebp
jmp
jle
add
push
rorl
xchg
fisttpl
jl
or
fucomp
les
cmp
cmp
lock
fcomip
stos
push
xor
loopne
int3
jg
cmp
cmp
and
dec
std
sahf
jo
mov
adc
mov
sbb
jo
mov
mov
mov
and
mov
lods
mov
and
sbb
sbb
std
push
mov
scas
fcomps
pop
lret
fwait
call
mov
repnz
pop
in
jae
in
inc
cmp
pop
dec
dec
sbb
pop
push
add
push
jns
enter
in
enter
push
cmp
ds
xchg
xchg
lret
dec
adc
fidivl
das
ret
add
push
mov
subb
sbb
jno
xchg
out
pushf
cmpl
push
xor
std
rorl
cmp
data16
repnz
pop
mov
out
jle
xor
rorl
xchg
add
out
pop
xchg
dec
inc
or
ja
or
xor
sti
or
inc
xor
sub
ss
mov
push
lock
mov
lahf
aam
stos
mov
mov
ret
pushf
outsb
and
stos
pop
xor
dec
lret
aam
xorb
into
jg
fmul
xor
and
xchg
cltd
sahf
enter
cmp
jge
pop
mov
sbb
imulb
sahf
push
xchg
mov
ljmp
in
or
xchg
ficompl
jae
loopne
ljmp
jo
fistl
andb
push
jg
xlat
inc
pop
sub
mov
sarl
xchg
mov
jo
push
lock
xor
push
xor
mov
popa
lret
sahf
imul
sub
pop
lret
inc
lods
imul
cmp
jae
and
jns
aad
inc
push
ja
jmp
jle
xlat
int
pop
push
sub
cli
cmpsl
int
jb
clc
inc
inc
imul
and
add
add
jno
dec
inc
mov
ficoml
movsl
xor
push
sub
xchg
repz
fistpl
mov
sbb
loopne
out
inc
inc
out
add
bound
push
sbb
cmp
or
and
sbb
icebp
mov
mov
xor
fstp
push
pop
mov
clc
sbb
stos
into
mov
xlat
adc
icebp
xorl
or
shrl
cmp
sub
mov
leave
jge
pop
outsb
sbb
pop
inc
and
out
mulb
aaa
filds
pop
aaa
jg
xor
loop
push
inc
push
push
push
jl
imul
and
enter
sub
mov
mov
rcrb
sarb
jmp
call
dec
add
dec
dec
shrl
lahf
push
outsl
jge
adc
mov
rcrl
imul
xor
pop
xchg
add
jecxz
pusha
xchg
jno
mov
int3
pop
aas
sarb
out
or
movsl
iret
ret
or
push
rol
imul
mov
adc
and
and
sbb
les
sbb
call
inc
fiadds
into
dec
cmp
and
xor
fdivl
sbbl
inc
aaa
movups
mov
test
clc
push
inc
mov
or
mov
cld
jge
xor
ljmp
sahf
fmull
bound
ljmp
mov
or
mov
cmpsb
xchg
jne
outsb
jg
xchg
push
cwtl
lea
add
xchg
lds
add
cmp
mov
or
cmc
popf
add
les
mov
das
adc
xchg
movl
fldt
xchg
mov
and
xchg
xor
lds
ds
mov
enter
mov
pop
mov
mov
jbe
mov
cs
pop
push
pusha
xor
pop
push
aas
jne
inc
cmp
loopne
insb
cmp
stos
sbb
dec
out
ljmp
push
and
dec
iret
enter
push
js
fldenv
xorb
add
xchg
insb
push
mov
sub
fdivrs
add
popa
jge
mov
dec
imul
stos
add
xchg
call
sub
inc
imulb
mov
ss
ss
sub
outsb
out
roll
adc
or
in
cmpsl
pop
in
sbb
mov
push
and
shl
mov
test
pop
mov
mov
mov
mov
jecxz
popa
jl
push
jge
inc
pop
and
scas
leave
inc
test
mov
in
add
ja
loop
insl
sbb
cmp
out
cmp
inc
imul
les
sbb
push
gs
fdivr
cmp
mov
iret
mov
sbb
or
mov
arpl
xchg
xor
jbe
jno
inc
pop
adc
lret
fiadds
mov
shll
mov
pop
xchg
sahf
sub
scas
jle
notl
xchg
sub
cmp
iret
sub
pushf
sti
dec
nop
neg
lock
out
in
fsubrp
jecxz
push
cmp
push
mov
imul
pop
or
lds
ss
cmp
lock
jl
jne
jbe
fnstcw
test
sub
arpl
out
popa
push
lods
push
inc
and
cmp
mov
dec
mov
add
push
jbe
test
push
sbb
push
mov
cmp
jmp
ja
xor
dec
ljmp
ljmp
outsw
ret
in
stos
mov
sbb
jge
das
or
push
xor
int3
fdivr
fldt
dec
dec
test
cwtl
jo
shll
push
jns
call
adc
mov
xlat
es
mov
or
mov
xor
add
pop
push
cltd
xchg
lret
jae
mov
dec
mov
and
rclb
repz
mov
xchg
xchg
jg
clc
push
mov
notl
push
mov
mov
mov
adc
bound
jno
inc
cmp
push
inc
in
dec
dec
mov
push
add
xchg
xor
rclb
nop
hlt
pop
cmc
std
pop
mov
aaa
arpl
adc
mov
push
xchg
icebp
rcr
mov
xchg
mov
pop
xchg
out
xchg
ret
jbe
jns
sub
js
mov
push
outsb
movsl
sti
push
pop
dec
inc
lds
movmskps
movsb
mov
mov
jl
or
jle
cmp
lret
ljmp
mov
ss
ja
mov
testb
lods
adc
std
mov
pop
pop
sarb
out
xor
sahf
rcll
mov
ficoml
jp
out
pop
out
and
xor
adc
cmpsb
adc
sbb
xor
movsl
sbb
mov
push
hlt
popa
popf
jge
adc
jl
fstpt
pop
dec
stos
fdivl
testl
outsl
out
inc
pushf
test
fldt
in
mov
add
pop
dec
ljmp
in
cltd
fwait
or
rolb
popl
inc
lods
add
popf
popf
lods
cwtl
cmpsl
cmp
and
jae
dec
or
push
imul
mov
jbe
in
inc
loope
out
or
add
sti
sub
adc
not
scas
es
mov
mov
mov
or
push
mov
xor
inc
and
jno
xor
adc
loopne
sub
pop
insl
push
nop
jb
cli
cmp
sbb
faddl
repz
lock
insb
mov
mov
in
sub
loope
pop
sbb
sbb
movsl
xor
sub
dec
daa
repnz
ljmp
loope
jg
xchg
icebp
fwait
push
inc
mov
insl
and
imul
in
lret
xlat
cmpsl
jno,pn
out
mov
aad
loope
outsb
das
gs
loop
xchg
pop
call
xchg
mov
test
hlt
sbb
add
in
sbb
mov
sti
push
or
add
bound
scas
shrl
loop
clc
xor
adc
das
push
and
mov
or
or
jl
insl
sti
pop
pushf
jo
std
leave
pusha
mov
fistl
stos
repnz
fidivl
lret
mov
pop
jle
cmp
jl
shrl
jnp
fcmovbe
es
push
dec
adc
icebp
sahf
inc
pop
xlat
ds
dec
xchg
insb
or
inc
notl
jbe
hlt
pop
hlt
icebp
mov
pop
mov
fdivr
sbb
inc
and
xor
aam
in
shlb
mov
xlat
and
insb
sti
mov
inc
adc
dec
mov
add
push
int
jae
mov
imul
shlb
inc
out
outsb
or
int3
inc
cwtl
out
cmp
push
das
xchg
enter
sbb
mov
ret
xor
insl
pop
sub
test
sbb
inc
into
xor
jecxz
add
fcomp
pop
and
pop
lods
xchg
push
stos
jmp
pop
xor
shrl
rolb
mov
lds
lock
push
add
mov
mov
and
lds
cmp
sbb
mov
outsl
mov
and
insl
jb
pop
mul
cs
and
testl
outsl
sbb
arpl
xchg
xchg
dec
icebp
and
testl
inc
jmp
xchg
jecxz
aam
sbb
and
dec
xchg
pop
jbe
mov
cmp
out
push
add
stos
int
icebp
jb
test
dec
int3
dec
jle
dec
or
aaa
ffree
sbb
push
push
insl
ja
jmp
or
dec
cmpsb
insl
out
lods
sbb
popa
ja
pop
cmpsl
ljmp
mov
sub
out
mov
aad
pop
out
in
push
cli
sbb
jmp
testb
and
out
xchg
fdivrs
add
lods
mov
jcxz
jae
rol
xchg
adc
sub
adc
add
mov
jae
outsl
push
lods
xor
adc
in
std
xor
mov
adc
cmpsb
mov
lahf
into
bound
rol
cmpsb
test
inc
adcl
jmp
sbbb
imul
mov
int
jae
adc
dec
push
inc
xor
das
sbb
xchg
push
jmp
lret
into
xor
fucomi
repz
lret
in
loop
mul
xor
sub
add
inc
add
sbb
and
inc
jo
sbb
jl
push
lret
cs
xchg
cmc
lea
arpl
stos
call
inc
mov
out
sbb
clc
imul
dec
adc
xchg
inc
sbb
or
cltd
ds
jne
fmuls
xchg
mov
mov
rclb
jnp
jae
por
mov
repnz
jl
or
mov
out
divb
rcl
pop
adc
jmp
inc
jecxz
flds
jmp
xor
pop
imul
dec
sahf
clc
lret
lods
lods
pop
or
addr16
repnz
cmpsb
mov
je
xchg
icebp
dec
sbb
xchg
add
xchg
xor
xor
pop
lcall
mov
pushf
sub
cmp
fmulp
sub
call
pop
arpl
sar
mov
stos
adc
mov
sbb
jl
cltd
push
icebp
loopne
test
mov
jne
jmp
pop
cmpsb
mov
mov
adc
rcl
pop
das
sbb
int
or
imul
and
and
cltd
fnstsw
in
sub
mov
daa
mov
dec
imul
pop
mov
cmp
call
dec
cld
jle
inc
xor
sub
shlb
sub
aas
lea
jp
lods
push
sbb
pushf
test
xchg
test
jnp
inc
enter
xchg
dec
pop
cmp
loope
inc
inc
in
cmp
pop
nop
cltd
fcomp
das
out
lods
sti
xorl
mov
xchg
cwtl
fprem
notl
adc
jg
cmpsb
sub
sahf
repnz
jnp
call
mov
int3
bt
pop
jns
addr16
negb
jge
adc
cmpsl
popf
fwait
mov
mov
inc
inc
and
lods
cmpl
adc
dec
sbb
fisttps
stos
mov
roll
shll
pop
xor
pop
cmpsl
lea
es
fidivs
xchg
ret
pop
xor
pop
out
ds
and
insl
les
add
addr16
data16
clc
add
jne
pop
data16
in
cmc
sub
cmp
push
pushf
and
enter
xchg
jb
cli
out
incb
lods
fidivrl
sub
scas
push
dec
faddl
pop
ret
in
xchg
cmp
rol
add
sbb
jns
mov
fmuls
pushf
inc
aaa
sbb
mov
pop
jecxz
jmp
enter
shlb
cli
test
loope
fstpl
lret
jp
xlat
into
addr16
aad
mov
pop
out
push
jne
in
add
push
mov
insb
xchg
out
mov
inc
in
test
pushf
sbbl
sbb
insb
les
push
sbb
pop
xchg
in
pusha
adc
jl
sub
pop
adc
mov
loopne
test
mov
test
pop
xchg
loop
sahf
popf
rcrl
repnz
scas
mov
popf
sub
arpl
xor
push
add
ljmp
imul
push
pop
mov
and
xor
jnp
cwtl
jg
out
xor
and
aam
pop
jno
dec
bound
xlat
mov
cmp
mov
fistpl
out
xor
hlt
in
pushf
in
rolb
addr16
pop
leave
sahf
pop
lret
sahf
filds
cmc
mov
mov
int
int3
sti
lea
pop
pop
insl
lea
fs
mov
jo
loope
ljmp
inc
dec
popa
add
cmp
or
sub
cmc
cltd
inc
ja
or
shr
mov
xchg
mov
pop
data16
push
xchg
fs
inc
mov
dec
mov
xorb
testb
cmp
jb
push
jne
outsb
jl
or
xchg
push
cmpsb
out
pusha
jmp
mov
popf
jns
push
lahf
movsl
nop
dec
add
push
loop
pushf
mov
mov
and
imul
xchg
sahf
mov
outsl
sub
and
jecxz
xchg
mov
pop
jecxz
xor
test
push
cmp
stc
push
push
fwait
adc
insl
mov
push
dec
out
stos
ja
stos
mov
fwait
test
or
jg
inc
enter
xor
add
sti
or
sbb
dec
test
loop
jge
lods
iret
in
testl
inc
xor
xor
outsb
adc
in
xor
outsl
in
and
lods
mov
add
dec
pop
inc
cmpsb
rcr
cmp
addr16
add
outsl
mov
out
sub
aaa
or
addr16
xchg
pop
push
jp
sub
jg
push
orl
lcall
out
sbb
xchg
pusha
xor
mov
xor
mov
xor
add
push
cmc
sub
das
movsb
dec
mov
add
pop
fs
push
sti
cmp
mov
jno
mov
and
mov
jp
ret
lea
fcomps
int
mov
jno
test
rorl
pop
ficoms
mov
lea
std
mov
fstl
dec
test
inc
into
test
rorl
xchg
in
xchg
dec
nop
filds
jl
sbb
cmc
xor
xor
mov
push
add
dec
ret
test
test
sub
pop
mov
movsb
sarl
xchg
add
sub
scas
bound
jge
xor
pmulhw
lods
jge
xchg
out
shlb
aam
stc
push
or
shll
in
cltd
xor
xorl
sbb
loop
adc
aaa
loope
push
into
sbb
jb
cli
mov
mov
jp
pop
inc
push
sub
add
jnp
pop
adc
sbb
pop
cmpsb
pop
shll
push
sub
cld
dec
sahf
dec
test
mov
mov
jns
jl
popf
xchg
push
pop
and
dec
dec
sub
out
out
cmpsb
xlat
in
std
data16
xchg
adc
cs
dec
faddl
sub
mov
add
stc
jge
sbb
pop
and
inc
fisttpl
sub
dec
cmp
in
dec
mov
mov
enter
pushf
pop
repnz
aam
scas
imulb
test
jp
cmc
pusha
push
pushf
push
or
sub
je
mov
add
stos
mov
lds
sahf
xchg
data16
and
ljmp
cmpsl
cli
adcb
fsubrl
aad
and
push
fcomps
jmp
mov
dec
loopne
je
aad
fs
adcl
mov
fxch
sbb
scas
pop
pop
pop
xchg
icebp
xlat
pushf
pop
sbb
mov
cmp
xor
mov
mov
jns,pn
sti
jns
and
int
bound
add
adcb
ja
idiv
fs
movsl
test
jno
lret
push
mov
xor
xchg
pop
pop
xchg
ficoms
lret
push
nop
fisubs
dec
sub
adc
pusha
aas
and
leave
rcrb
add
aaa
mov
scas
into
out
add
lods
pop
push
jne
sbb
sbb
dec
scas
and
roll
cli
sbb
xor
popf
pop
fs
xor
push
add
aas
xchg
mov
jecxz
aas
adc
push
adc
data16
pop
xchg
sbb
dec
inc
mov
pop
lea
rcl
std
cltd
mov
push
mov
dec
xor
in
mov
add
adc
jg
out
icebp
nop
adcb
testl
xchg
js
and
cmpsb
nop
inc
pop
jne
cmp
push
mov
movsb
cwtl
xor
cwtl
scas
ret
lcall
fwait
adc
iret
xchg
call
stos
lea
mov
mov
add
fnsave
cmp
push
loop
pushf
or
push
inc
mov
scas
mov
or
sahf
fisttpll
cmc
jg
sub
js
sbb
arpl
std
hlt
in
pop
cmpsb
das
mov
dec
shrb
ficoms
pop
mov
lods
cmp
sub
dec
movsl
mov
inc
testb
or
or
cmp
movsb
xchg
cwtl
jne
rorl
fdiv
jp
sub
loop
pop
rcll
xor
test
out
and
jecxz
sbb
xlat
fbld
pop
orl
push
rcll
in
lods
ficoml
das
loopne
inc
and
add
cmp
in
stos
or
popa
sti
ja
mov
in
push
push
jns
push
cmp
sahf
inc
fadd
mov
and
lcall
xor
sub
mov
inc
and
xor
push
fidivrs
xchg
decl
cmp
add
add
add
add
add
add
orb
add
mov
push
add
mov
pop
add
pop
add
pop
add
pop
add
add
add
add
add
fs
outsl
cs
insb
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
push
add
dec
xchg
mov
push
das
scas
or
xchg
cmpsl
sub
sbb
and
pop
mov
and
mov
jno
fistl
mov
or
add
mov
negb
pusha
lsl
cltd
xor
add
je
xchg
sbb
sub
mov
sahf
push
imul
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpb
jne
pusha
call
add
mov
call
call
call
cmpl
jne
mov
mov
jmp
mov
mov
call
jmp
sub
add
add
add
lea
lea
xor
jmp
inc
add
push
push
push
push
call
mov
jmp
xor
add
and
test
mov
dec
add
pushl
add
pushl
add
call
popa
add
cmpl
jne
cmpl
je
cmpl
je
call
lea
call
mov
or
je
add
call
cmpl
jne
mov
jmp
add
cmpl
jne
jmp
add
mov
mov
add
jmp
inc
add
add
push
push
push
push
push
call
mov
pop
pusha
pushl
push
pushl
call
popa
jmp
inc
add
call
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
add
mov
call
call
call
call
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
call
push
pushl
call
test
je
jmp
cmp
cmp
add
xchg
pop
add
mov
addl
mov
cmpl
jne
jmp
inc
cmpb
jne
inc
add
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
movl
add
mov
cmpb
jne
call
push
push
pushl
call
push
push
pushl
call
jmp
sub
add
xlat
cmp
add
fistl
add
call
cmpl
je
jmp
jmp
popa
jmp
pusha
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
lea
lea
pusha
push
push
push
call
mov
popa
add
jmp
dec
cmpb
je
sub
inc
mov
mov
lea
rep
pop
push
push
push
call
pop
push
push
push
call
popa
ret
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
test
fwait
pop
add
jb
gs
xor
cs
insb
add
fwait
pop
add
fwait
pop
add
pushf
pop
add
pushf
pop
add
fwait
pop
add
add
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
add
add
or
add
add
xor
push
scas
nop
sbb
dec
ja
push
mov
jne
outsl
and
mov
xchg
cwtl
test
dec
adc
xchg
add
sub
repz
loop
lock
xchg
jb
sub
loope
sbb
fsubs
stos
lret
fstps
cmp
std
mov
and
fiaddl
jno
insb
in
xchg
dec
mov
xchg
cli
pand
jle
pushw
jle
cmp
jle
js
out
push
enter
aam
xor
xchg
imul
dec
push
pop
aam
push
int
ljmp
adcb
cmp
hlt
adc
pop
adc
jmp
fsubrp
jl
insl
enter
pop
shl
dec
jg
lret
dec
es
sub
leave
xchg
lret
add
insl
push
mov
cwtl
faddl
leave
and
push
dec
add
sbb
adc
dec
loop
inc
xor
popf
stos
pusha
push
shrb
pop
sub
push
add
test
test
int
pop
xchg
pop
mov
pop
std
mov
mov
data16
je
enter
iret
outsl
mov
inc
cmp
push
jmp
in
adc
stos
subb
ret
adc
adc
mov
out
cmpsb
jmp
dec
jo
icebp
pop
int
add
mov
je
aas
std
cmc
and
mov
movsb
mov
mov
and
adc
imul
arpl
sbb
push
lods
jo
movsb
add
adc
rclb
stos
cmp
or
push
roll
push
lcall
es
xor
mov
bound
nop
shll
bound
gs
scas
lds
pop
test
les
xchg
adc
clc
loopne
pop
push
push
xor
lahf
fdivrp
xchg
out
pop
imul
sub
das
push
pop
push
cmp
adc
popa
inc
xchg
add
jmp
push
or
lahf
rcrb
dec
mov
mov
outsl
and
lods
push
or
shrb
cmp
stos
sub
into
jne
aad
jle
scas
jns
cmp
aam
bts
mov
das
cmc
inc
and
dec
push
rcl
adc
je
sub
inc
fdivrs
jl
addl
jno
inc
mov
cmpsb
cmp
outsb
xor
or
adc
movd
ret
aaa
inc
xor
jp
inc
js
fisubrl
aaa
mov
cld
mov
shlb
mov
add
and
insb
fisubrs
jmp
sub
repnz
js
mov
into
lods
adcb
or
ljmp
mov
daa
les
mov
test
jbe
push
add
push
nop
ret
mov
push
mov
ss
cmp
addr16
adc
or
xchg
xchg
loopne
mov
stos
fs
std
mov
sub
mov
lret
add
jnp
xchg
ficomps
js
aad
pushf
and
insl
jnp
jle
sub
mov
pop
frstor
cmc
mov
outsl
and
lock
dec
dec
cmp
outsl
push
addr16
sub
shll
imul
jle,pt
pop
les
pop
jle
or
cmp
push
in
imul
cmpsb
sub
or
cmp
iret
xchg
stc
push
mov
adc
rorb
popf
es
xchg
sbb
sbb
pusha
fdivrl
jbe
mov
jmp
jo
mov
shll
xchg
lods
int
dec
push
xor
rolb
ds
adc
xchg
es
out
sbb
les
cs
outsl
bound
lahf
lcall
mov
nop
dec
and
push
xchg
cltd
out
jp
push
outsb
aaa
pushf
ffree
pop
sbb
adc
es
test
push
dec
xlat
inc
out
mov
jp
hlt
hlt
push
mov
xor
cmp
sbb
pop
lcall
jb
jnp
mov
leave
xchg
pusha
mov
mov
push
pop
notl
push
movsl
sub
popf
pop
shl
imul
loopne
push
outsb
xchg
mov
mov
andb
adc
add
xorl
mov
leave
lcall
mov
cmp
negb
addb
cmovl
sbb
enter
inc
cmpsl
fsub
or
mov
jb
pusha
aad
scas
add
notl
call
xchg
adc
ficoml
add
mov
cmpsb
bound
loop
mov
jecxz
punpcklbw
lret
add
loopne
out
or
xor
lods
jno
dec
out
pushf
rorl
pop
out
aam
mov
mov
pop
sahf
insb
mov
mov
or
cwtl
fwait
outsl
lcall
sub
sbb
sub
insb
mov
mulss
jg
inc
mov
leave
mov
ficoms
jecxz
push
ljmp
adc
mov
je
loopne,pt
adc
xchg
ja
cmc
das
sbb
xor
fistps
inc
popf
imul
icebp
mov
or
xor
mov
stc
shrl
out
and
lahf
pop
or
imul
sub
ds
and
sbb
inc
jp
pop
cmp
imul
or
inc
jns
xchg
repnz
dec
or
inc
in
aas
ljmp
cmpsb
inc
pop
rol
add
repnz
in
xchg
jle
cmpl
mov
lret
in
insb
bound
push
outsb
xor
inc
repnz
data16
add
mov
cwtl
ret
orl
out
leave
push
jg
je
inc
mov
mov
adc
aam
sahf
testb
xor
mov
and
sbb
scas
cmp
cmp
dec
scas
fisubs
inc
sbb
lock
or
mov
cmpsb
inc
mov
pusha
xor
in
adc
incl
dec
mov
stos
push
pop
movsb
push
movsl
fistpll
mov
ret
fimuls
add
loop
lods
mov
push
cmp
out
ret
addl
mov
pop
sbb
dec
xchg
loop
inc
stos
push
jecxz
or
fiadds
test
sbb
sarl
repnz
cmpsb
lock
sub
addl
inc
sub
adc
sbb
jns
jecxz
sti
dec
ds
fimull
loopne
add
pusha
orl
andl
sub
xchg
xor
ret
cmp
das
mov
jmp
mov
add
jmp
mov
insb
mov
dec
popa
xchg
mov
jne
leave
test
and
lcall
aam
pop
xchg
das
jnp
shl
mov
jo
in
jg
sub
daa
sbb
sbb
push
mov
and
aad
dec
js
inc
and
inc
or
dec
stc
je
cld
jecxz
mov
daa
daa
jg
insb
orb
adc
mov
mov
test
jg
test
inc
insb
lods
sarb
enter
popf
outsl
xchg
orl
clc
repnz
adc
pop
sbb
pop
lret
pusha
adc
out
pop
mov
push
and
lahf
jnp
addl
leave
pop
clc
mov
lcall
jp
ljmp
inc
rcll
mov
das
cmp
out
or
push
ss
cs
push
in
push
into
outsl
fmull
aam
and
xlat
out
pop
push
mov
imul
jp
adc
nop
call
dec
int3
std
mov
add
inc
insb
int
add
pop
sbb
rcrl
sbb
dec
into
js
push
sub
fisubl
or
daa
insb
hlt
add
xchg
sarb
xlat
xorl
push
pop
icebp
cmc
dec
stc
cli
mov
cs
cmpsb
dec
test
xchg
outsb
xchg
jge
and
and
sub
fstpl
movsl
xchg
sub
cwtl
xchg
push
in
in
and
adc
ja
insl
cwtl
mov
mov
call
pop
testb
jbe
outsb
xchg
idivb
and
cld
dec
dec
fisttpl
jns
rclb
jmp
push
rcll
ret
sbb
xor
test
pop
xchg
ss
fisubrl
rcrl
add
inc
fnsave
in
and
out
or
clc
push
out
shl
gs
cmpsl
lods
js
lods
jle
push
and
sti
dec
adc
jnp
sbb
jmp
mov
movsl
add
pop
ljmp
or
mov
pop
leave
mov
mov
dec
mov
pop
and
fsubr
cld
xor
out
mov
cltd
xchg
push
mov
or
sub
loop
fnsave
sub
dec
pop
pop
or
or
xor
mov
stc
mov
jmp
lods
popa
jl
push
pop
test
jl
lret
and
repnz
mov
push
cmpsl
enter
jmp
mov
mov
push
imul
xor
lahf
js
and
push
in
jmp
lods
daa
inc
cmp
lock
pop
adcl
test
inc
mov
adc
call
add
mov
gs
or
sbb
jge
notl
inc
mov
popa
mov
out
or
jmp
int3
push
mov
mov
cs
sub
call
lret
rclb
stos
push
dec
sti
push
dec
lret
imul
fisubs
lret
xlat
xchg
lret
push
jmp
fldcw
push
xchg
adc
xchg
inc
xchg
stc
pop
cmp
push
repnz
mov
pop
inc
pop
int
push
dec
rolb
lahf
shlb
cld
inc
lahf
dec
les
test
cmpsb
and
out
jg
jbe
jnp
test
dec
jne
push
mov
ret
pop
es
push
popf
lods
lds
ds
movsb
icebp
insl
mov
cmp
jmp
or
rorb
clc
add
jge
movsb
inc
xchg
nop
dec
push
add
or
in
pop
sub
insl
sub
push
adc
cmp
roll
or
jecxz
call
cmp
out
sysexit
or
ljmp
les
movsb
mov
mov
frstor
mov
push
fdivl
xor
cmc
or
stos
pop
shll
nop
xor
int
stc
jge
or
and
lret
adc
call
inc
fbstp
mov
mov
std
mull
enter
ds
inc
daa
or
pop
cmpsb
inc
mov
loope
ja
dec
dec
or
fs
cli
rcrb
fsubl
push
pusha
das
fsts
and
and
pushf
adc
cld
ficoml
push
out
pop
push
sbb
lock
push
cmp
inc
popf
cmp
adc
aad
fiadds
dec
lcall
dec
arpl
loop
dec
xchg
mov
inc
inc
ss
imul
std
mov
sub
in
mov
cmc
scas
mov
stc
cmp
mov
jo
into
and
cltd
lods
cmpl
es
sti
jge
dec
mov
int
pop
xchg
sbb
mov
ret
adc
dec
cmp
int3
xchg
pop
inc
pushf
out
cwtl
xchg
dec
or
lcall
cmp
inc
mov
push
dec
mov
pop
adc
ret
push
test
fucomp
in
mov
pop
push
frstor
int3
jb
int3
es
std
sub
mov
cltd
mov
sbb
dec
jg
je
movsb
aam
xor
mov
shl
cmc
sbb
outsb
leave
add
xchg
hlt
imul
inc
leave
shrl
fcmovu
not
mov
int3
jno
cmp
mov
dec
sub
jl
cwtl
mov
pop
sub
pop
test
xor
pop
fldl
cmpsb
loopne
icebp
mov
dec
xor
pop
sti
int
mov
mov
jmp
xchg
das
mov
cmp
xchg
sub
jmp
aas
cmp
cli
andb
mov
aas
lock
sbb
inc
das
shrl
fbstp
mov
in
sub
sbb
and
add
fwait
lea
cld
outsb
or
pop
addr16
dec
adc
rorl
push
ret
fabs
push
outsb
pop
daa
mov
out
test
dec
fistpl
add
mov
xor
adc
dec
dec
repz
push
push
dec
nop
jmp
shlb
loopne
cmp
mov
outsl
xor
push
lahf
push
jnp
iret
xor
push
cmpsb
mov
add
push
or
andl
mov
stos
ja
mov
sahf
inc
add
popa
das
cli
in
push
iret
lock
das
into
mov
push
aam
sub
adc
add
lock
hlt
loope
cli
push
jno
xchg
mov
mov
int3
mov
rorb
push
jo
xchg
cli
hlt
add
imul
or
test
inc
sub
stc
mov
mov
add
jg
pop
hlt
je
andl
lahf
pop
loope
loope
and
xchg
xor
and
jmp
mov
mov
mov
shl
inc
mov
pop
in
mov
dec
stos
aas
mov
pop
test
nop
and
mov
xchg
not
or
ficoms
mov
dec
xor
cli
mov
dec
mov
mov
cld
mov
fbld
push
pop
int
mov
cmp
movsb
stc
jo
push
call
arpl
push
std
add
addr16
push
add
mov
mov
loopne
insb
cli
adc
xor
xchg
icebp
dec
dec
aad
sub
adc
mov
inc
lods
dec
iret
pop
arpl
repz
ja
rol
into
xchg
icebp
jae
or
int
outsl
or
scas
rcrb
mov
gs
inc
ficoms
stos
mov
cmp
add
xchg
and
dec
dec
or
lret
popa
cwtl
push
push
stc
mov
xchg
mov
mov
adc
xchg
shr
inc
out
ret
cli
xlat
xchg
push
and
mov
add
cmp
insl
test
push
adc
mov
pop
rcrb
xor
cmp
cli
mov
std
addb
ret
insl
xchg
add
jg
xor
cmp
xbegin
mov
scas
fmulp
or
xchg
pop
pop
std
jmp
dec
pop
pop
scas
jbe
in
sbb
test
xchg
stc
popf
cltd
dec
out
cmp
xor
fimuls
inc
sub
jle
push
inc
xchg
mov
pop
lret
test
fdivs
roll
cmpsl
outsb
cmp
cmp
ret
mov
je,pn
out
jbe
pusha
lods
cs
outsb
cwtl
push
es
lods
dec
jp
jno
in
mov
inc
jge
jmp
loopne
popf
cmc
loope
aam
xor
imul
rorl
mov
inc
in
and
and
or
dec
stc
movsl
and
pop
hlt
inc
push
dec
and
enter
fistpl
insl
stc
pushf
dec
sub
sbb
inc
push
jns
aam
movsb
jns
daa
add
cmp
xchg
in
frstor
stos
jns
dec
test
into
mov
js
ss
out
jmp
cli
imul
fisttps
cmp
sbb
loop
push
mov
or
pop
jecxz
repz
in
cmove
sub
or
pmullw
sbb
add
xchg
xchg
push
mov
cmp
push
pop
scas
xchg
xchg
je
mov
pop
adc
dec
ss
jns
mov
std
xchg
fwait
mov
inc
dec
sbb
je
outsl
add
adc
cmpsl
loop
lock
mov
std
ret
or
mov
and
sbb
in
mov
mov
testl
inc
lret
out
out
imul
add
mov
mov
fists
cmp
or
into
iret
call
out
ja
idivb
xor
mov
mov
enter
cld
push
test
mov
pop
mov
pop
iret
sub
hlt
pop
cmp
pop
aam
xor
ja
fs
sti
repz
mov
popf
hlt
dec
xchg
jmp
sub
and
mov
jo
fmul
shl
mov
pop
cmpsb
mov
dec
stos
mov
out
dec
xor
out
test
jo
jb
jbe
push
std
xchg
sub
push
push
adc
push
cs
adc
fsub
cmp
jmp
jmp
mov
lock
sub
out
push
or
sbb
div
fcmovnu
int
fsubs
adc
inc
test
xlat
rolb
out
push
cmp
test
push
js
mov
cmpsb
pop
inc
leave
inc
aam
je
out
dec
div
mov
aaa
in
pop
and
xchg
aas
lea
push
std
cmp
inc
sbbb
sbb
in
dec
or
push
cmp
xor
xchg
push
into
test
adc
in
or
out
iret
leave
es
outsl
pop
sti
enter
cwtl
and
xor
rcll
adc
scas
hlt
jb
push
cmp
jg
cwtl
arpl
cltd
rcl
into
push
lds
sbb
push
cmpsb
sub
pop
push
inc
sub
mov
sbb
int
dec
pusha
jb
push
xchg
pusha
inc
negb
inc
movl
and
pop
sbb
scas
aad
popf
add
divl
scas
test
fs
push
popa
and
inc
je
dec
sbb
push
movsl
sub
out
int
add
and
adc
dec
push
push
jnp
xchg
sti
sti
mov
fadds
addr16
mov
push
mov
mov
mov
push
daa
sub
xor
jg
push
xchg
daa
jno
ja
lahf
imul
pop
push
push
outsb
push
js
push
out
lcall
or
inc
mov
ret
mov
test
xchg
mov
add
mov
ja
mov
adc
mov
mov
hlt
xlat
xchg
call
filds
mov
inc
pushf
out
push
test
push
mov
push
aad
cmp
sub
or
xchg
mov
in
push
ljmp
mov
sbb
add
dec
push
dec
lahf
pop
lods
mov
cli
mov
cmpsb
pop
jge
sub
fldcw
loope
daa
into
adc
out
cwtl
gs
loopne
cmp
nop
.byte
xchg
add
