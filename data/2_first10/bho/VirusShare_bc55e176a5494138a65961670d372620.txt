sbb
add
pop
inc
sub
sbb
call
movsl
pop
shrl
sub
push
clc
bound
arpl
cmp
ret
fistpl
push
or
addr16
lret
les
dec
out
ja
mov
lahf
and
xor
pusha
xor
jge
xchg
jne
xchg
adcb
icebp
fidivrl
xchg
or
and
cmpsb
inc
dec
orl
out
mov
or
mov
outsl
leave
inc
mov
es
and
and
out
xlat
out
in
push
into
shl
jnp
ret
inc
adc
inc
pop
xor
loope
xchg
fs
add
repnz
xor
sti
cs
jecxz
stos
lods
jbe
sbb
mov
incb
jl
add
loopne
addr16
bsr
lock
int
cld
aad
cmpsb
sarb
jl
inc
fstl
dec
mov
dec
add
loop
sbb
cmp
shll
loopne
scas
mov
mull
sub
push
dec
mov
sub
std
imul
bound
push
movb
jle
dec
movsl
in
pop
insl
push
xor
push
add
clc
lcall
push
push
movsb
ljmp
jbe
jp
jl
cmp
mov
dec
sub
pusha
mov
mov
pop
mov
mov
sbb
out
mov
mov
push
xchg
out
es
push
cltd
outsl
repz
dec
cmpsb
inc
dec
repz
push
add
sbb
mov
push
lods
ret
les
cmp
and
cmp
cwtl
fsubrs
adc
test
gs
and
mov
aaa
mov
adc
sbb
push
addl
shrl
pop
cltd
xchg
or
repnz
sub
xor
gs
mov
push
push
enter
int3
subl
sbb
dec
dec
adc
mov
fnstsw
nop
mov
xor
cmp
std
cmp
out
ror
xchg
mov
dec
mov
cmp
push
or
or
testl
rcll
movsl
jno
pop
mov
push
or
pop
xchg
stos
xchg
inc
dec
scas
cmc
iret
out
rorb
aam
out
mov
hlt
outsb
sub
or
test
inc
sub
in
mov
adc
cmpsb
dec
imul
cmp
lahf
mov
and
mul
mov
dec
push
and
sub
out
lret
pop
push
movsl
popl
jle
ret
outsl
jns
test
adc
pop
or
scas
aad
push
push
cpuid
push
cmp
or
ljmp
sbb
clc
testl
lret
aad
adc
hlt
imul
push
sti
push
mov
stos
mov
mov
sub
daa
inc
cmp
push
push
push
jbe
add
xor
sub
rcl
push
notl
or
add
jns
cs
xor
pop
cs
ret
dec
or
jno
xchg
lahf
orl
mov
enter
fldl
and
push
stos
stos
jb
lahf
mov
mov
xchg
and
cmp
hlt
or
repz
sub
xor
insb
movsl
pop
cmp
sbb
add
adcb
stos
fwait
scas
int
xchg
xchg
fwait
adc
dec
adc
sar
arpl
inc
scas
cld
pop
out
mov
xchg
fwait
add
cmp
popa
insl
mov
jo
and
movsl
leave
outsb
dec
lods
sahf
and
pop
cmp
int3
mov
cmp
inc
mov
inc
jl
scas
jbe
mov
stos
rcrl
enter
sbb
inc
pop
jmp
xor
push
jge
loope
mov
loopne
mov
vmread
or
adc
add
hlt
pop
shrl
in
sbb
in
fs
adc
into
shlb
call
jb
and
push
sbb
cld
dec
mov
loope
pop
push
mov
mov
jae
inc
dec
dec
pop
adc
pushf
or
jecxz
repz
adc
xchg
sub
test
cmpsl
sti
je
aas
jo
or
sbb
out
and
jnp
cli
insl
push
pop
shll
or
mov
out
jns
adc
jge
mov
add
sbbl
inc
inc
xor
sub
sbb
or
int
aad
or
jae
or
sub
aas
je
xor
sti
enter
in
xchg
aad
xchg
mov
cmc
cmc
divb
aas
repz
popf
addr16
fsubs
std
push
mov
sbb
fwait
add
pop
imul
push
cmp
repnz
outsb
xrelease
sarb
in
push
pop
jmp
cld
popf
and
fldenv
jmp
jae
inc
jns
sbb
int3
shrb
out
adc
xchg
or
pop
jg
stos
mov
sbb
xchg
imul
cmp
jnp
ds
loopne
rorb
outsl
and
mov
inc
scas
adc
cwtl
jmp
insb
jge
outsb
sti
fcoms
add
cli
mov
jl
push
pop
xchg
dec
fcompl
icebp
lock
sub
nop
pcmpeqw
imul
and
fnstcw
std
aad
cmp
loopne
fs
jbe
and
or
dec
ja
pop
inc
add
or
add
jne
lahf
ret
cmc
lods
push
jmp
pop
pop
ss
or
pop
sub
daa
xchg
xor
fwait
dec
fidivrl
xor
mov
cmc
lahf
and
enter
aas
fs
push
dec
aaa
test
add
jle
lock
cmc
icebp
in
ljmp
push
inc
inc
and
ret
aad
lret
push
test
and
cmp
movsl
lds
cmp
mov
fadds
or
fcmovbe
loope
leave
adc
mov
inc
push
loope
addl
inc
lds
js
popa
cmp
mov
ss
mov
pop
adc
inc
sbb
cmp
pop
cmp
int
ret
and
lret
push
fldl
cmp
pop
jmp
mov
cmp
jg
or
pop
or
mov
in
push
pop
cli
cltd
mov
aad
xchg
add
fstpl
imul
or
and
ds
mov
jns
nop
sub
sbb
jg
pop
add
out
rcll
jmp
jae
ss
ljmp
fwait
dec
mov
jl
xlat
mov
cwtl
mov
xchg
sahf
dec
xchg
pop
out
cmpsl
jecxz
dec
dec
push
or
mov
sub
icebp
pop
lea
lock
in
jg
dec
scas
repz
loope
and
xor
movsb
cmpsl
pop
fisttpl
jns
inc
icebp
push
add
popf
mov
mov
dec
loop
push
push
xchg
sti
aaa
icebp
cmp
xor
jno
out
mov
dec
dec
sub
mov
xlat
sub
test
bnd
into
outsb
shrl
scas
and
shlb
cmp
adcb
push
adc
xchg
push
push
push
mov
ja
sbb
xchg
inc
or
into
push
js
jp
test
loope
cmp
lock
popf
ss
int
int
pushf
dec
adc
lret
int3
ljmp
lds
xchg
mov
test
cmp
jbe
pop
and
imul
aad
lock
scas
and
ret
popa
inc
imull
roll
dec
aaa
inc
pop
and
adc
dec
lahf
cmp
addr16
cmp
push
cli
mov
sbb
jb
imulb
js
mov
jp
adc
push
not
movsl
out
std
ror
sbb
movsb
lods
loopne
or
fdivs
add
pusha
sbb
les
dec
mov
fsts
out
jno
sbb
pushl
repz
ljmp
lahf
jae
pop
pusha
jg
push
and
jne
xchg
popa
ficoms
jne
sbb
lods
pop
jae
jmp
imull
aaa
xchg
in
repz
pop
fildl
jg
mov
in
add
mov
jl
sbb
push
sub
pop
dec
pop
adc
mov
sub
xchg
shll
push
inc
push
adc
roll
je
dec
xchg
fimuls
jmp
std
adc
jle
insl
push
mov
xchg
sbb
mov
add
add
call
vmread
shr
jae
dec
sbb
pop
pushf
sbb
inc
outsb
push
mov
inc
movsb
jo
push
or
lds
jmp
pop
nop
enter
push
cmp
fstl
ret
adc
rcll
gs
cli
push
je
imul
xchg
icebp
dec
push
shrl
dec
mov
push
xor
xchg
test
jnp
adc
mov
sub
cli
mov
mov
sarl
pop
out
adc
xor
jno
mov
std
mov
jmp
loopne
dec
add
idivb
inc
dec
sub
ss
cwtl
divl
out
out
call
int3
mov
icebp
fistpl
jle
push
add
addr16
xor
inc
cmp
mov
jae
ret
or
int
out
xchg
xor
loop
inc
lock
shll
mov
mov
push
not
jmp
rcr
outsl
aam
ret
inc
inc
pop
pushf
xor
inc
pop
bound
dec
jne
loop
dec
mov
push
mov
cli
cmpsl
xchg
fs
push
mov
daa
sbb
imul
mov
mov
nop
sbb
or
sahf
xchg
clc
ficoml
shr
je
inc
pop
xchg
mov
cmp
popa
adc
lods
adc
or
pop
sti
mov
repz
jo
subl
inc
test
pushf
pop
daa
cli
clc
jnp
jno
and
inc
mov
inc
xchg
test
scas
add
push
xor
and
adc
adc
jle
loop,pn
pop
in
jnp
loope
sahf
and
adc
cmpsl
fisubs
xor
sbb
inc
jbe
add
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
nop
add
scas
nop
add
test
add
mov
nop
add
ret
add
nop
add
loopne
add
lock
add
nop
add
add
add
or
add
add
add
sbb
add
add
add
and
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
push
inc
push
push
cs
insb
add
inc
push
dec
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
addr16
outsb
jne
dec
gs
js
add
add
gs
inc
gs
popa
jo
gs
imul
add
add
add
into
les
add
add
xchg
xchg
add
add
add
add
add
add
add
je
add
mov
add
sub
add
and
adc
add
mov
add
les
add
loope
add
add
add
add
add
add
jo
jne
imul
cs
insb
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
dec
outsb
jae
popa
insb
insb
add
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
add
add
jo
add
add
insl
cmp
add
in
sub
push
push
push
xor
xor
lea
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
stos
stos
stos
xor
lea
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
stos
stos
xor
lea
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
stos
stos
stos
xor
lea
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
stos
stos
stos
push
mov
mov
mov
lods
mov
mov
pop
lea
lea
push
pop
push
pushl
call
mov
pop
add
add
dec
pop
jne
mov
pushl
mov
mov
pushl
mov
mov
mov
mov
mov
lea
push
call
add
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
andl
push
mov
mov
add
mov
mov
mov
mov
add
add
add
mov
test
jbe
mov
mov
mov
mov
mov
add
mov
test
je
mov
mov
test
je
cmp
jne
inc
incl
jmp
mov
mov
sub
neg
sbb
inc
mov
jne
incl
addl
mov
cmp
jb
xor
pop
pop
pop
leave
ret
mov
movzwl
mov
add
jmp
push
mov
push
push
mov
push
push
push
movzwl
cmpw
lea
jne
mov
mov
push
push
pushl
pushl
call
test
mov
jne
push
push
pushl
push
call
test
mov
je
push
xor
pushl
call
test
jne
cmp
jae
mov
inc
add
push
push
jmp
push
push
pushl
pushl
call
mov
cmp
jb
mov
mov
cmp
jbe
test
jle
lea
sub
mov
mov
dec
dec
jne
jmp
test
jle
mov
sub
mov
mov
inc
dec
jne
andl
cmpw
jbe
lea
mov
push
add
push
pushl
push
call
test
je
mov
mov
mov
add
cmp
jb
mov
mov
add
cmp
jbe
test
jle
push
mov
pop
sub
lea
sub
mov
mov
dec
lea
test
jg
jmp
test
jle
mov
sub
mov
mov
inc
dec
jne
movzwl
incl
mov
add
cmp
jl
mov
mov
sub
je
mov
test
je
add
mov
mov
add
je
add
lea
shr
test
jle
mov
mov
mov
mov
mov
and
cmp
jne
and
add
add
add
addl
decl
jne
add
jmp
mov
add
cmpl
je
jmp
mov
mov
add
push
call
mov
mov
mov
add
cmpl
jne
mov
jmp
mov
add
cmpl
je
mov
mov
sub
testb
mov
je
and
jmp
mov
lea
push
mov
pushl
call
mov
mov
add
mov
cmpl
jne
add
cmpl
jne
mov
test
je
pushl
mov
add
push
push
call
test
jne
xor
jmp
mov
pop
pop
pop
leave
ret
adc
add
out
lods
sahf
negb
adc
dec
push
inc
push
add
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
decl
add
add
add
add
add
decl
add
add
add
decl
add
add
add
add
add
decl
add
add
add
addb
add
decl
add
add
add
decl
add
add
add
add
add
add
decl
add
add
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
add
or
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
add
sbb
add
add
add
js
add
rclb
add
sbb
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
jmp
push
add
add
add
xor
add
add
add
sub
add
add
add
incl
add
add
add
add
incl
add
add
add
jmp
add
xor
add
lcall
add
add
decl
add
js
add
call
add
add
incl
add
add
incl
jnp
push
imul
add
call
fdivrl
inc
jg
dec
mov
dec
hlt
cwtl
fnsave
mov
lock
fstl
lea
add
pushl
add
add
add
add
add
add
add
inc
add
add
incl
add
add
add
add
add
add
add
inc
add
add
out
lods
sahf
negb
adc
add
add
pushl
popf
iret
dec
in
or
repz
popa
push
add
add
jmp
sub
adc
cmp
add
incl
add
add
add
add
call
add
add
add
add
incl
add
add
add
add
add
add
add
sbb
add
test
add
dec
add
add
add
add
add
add
outsl
insb
xor
je
bound
push
nop
add
add
add
add
add
add
dec
dec
bound
arpl
je
push
imul
insb
incl
add
add
lcall
add
add
ljmp
add
decl
add
jae
push
insb
popa
jns
jb
add
add
incl
cmp
movsb
pop
inc
insb
popa
jae
push
push
add
add
incl
insb
popa
jae
push
push
push
add
add
ss
add
add
add
adc
add
test
mov
xchg
xor
xor
xor
enter
shlb
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
nop
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jl
xorb
xor
mov
xor
mov
mov
xor
fdivl
in
xor
add
or
adc
sbb
and
sub
xor
cmp
inc
ss
ss
ss
ss
ss
jl
test
mov
nop
ss
ss
movsb
lods
ss
mov
ss
fdivl
in
in
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
inc
aaa
dec
aaa
push
aaa
pop
aaa
pop
aaa
fs
insb
aaa
jo
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
and
and
xor
xor
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
sbb
and
and
sub
sub
inc
cmp
cmp
cmp
cmp
cmp
cmp
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
push
cmp
sub
xor
cmp
inc
cmp
dec
cmp
cmp
data16
cmp
jle
test
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
cmp
xor
cmp
cmp
cmp
push
cmp
cmp
outsb
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
sub
cmp
inc
cmp
push
cmp
cmp
push
mov
xchg
movsb
ds
dec
aas
dec
aas
push
aas
xchg
aas
pushf
aas
movsb
aas
lods
aas
mov
mov
aas
aam
fdivrl
in
in
aas
hlt
aas
cld
aas
add
add
add
sub
add
add
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
adc
sbb
sbb
and
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
dec
xor
pop
xor
fs
les
shlb
fdivl
call
xor
add
add
or
or
adc
adc
sbb
in
in
ss
ss
ss
sbb
and
sub
xor
cmp
dec
aaa
dec
aaa
pop
aaa
pop
aaa
push
aaa
nop
aaa
mov
aaa
enter
loopne
lock
clc
aaa
or
sbb
and
xor
inc
cmp
push
cmp
cmp
cmp
cmp
cmp
jl
cmpb
cmp
cmp
cmp
cmp
inc
cmp
cmp
push
cmp
pop
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
test
pop
cmp
cmp
cmp
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
nop
cmp
pushf
cmp
fdivrl
call
cmp
cld
cmp
or
or
adc
xchg
ds
ds
mov
lods
ds
mov
mov
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
test
cwtl
aas
sahf
aas
mov
mov
aas
out
in
aas
add
add
jl
add
add
push
xor
xor
xor
cmp
dec
xor
xor
xor
sub
cmp
dec
xor
xor
xor
lods
xor
fdivl
in
in
xor
xor
adc
sbb
and
and
sub
sub
xor
xor
cmp
pop
xor
xor
xor
xor
xor
xor
js
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
nop
ss
ss
lods
fdivs
fdivl
in
icebp
ss
add
dec
aaa
push
aaa
pop
aaa
gs
jo
jne
xchg
aaa
cwtl
aaa
mov
aaa
mov
aaa
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
sub
cmp
insb
cmp
cmp
enter
fnstsw
call
cmp
cmp
cmp
cmp
cmp
insl
cmp
jge
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
nop
cmp
cmp
cmp
cmp
cmp
cmp
ds
ds
mov
aas
and
sub
add
add
add
add
xor
loopne
in
push
aas
fs
push
aas
nop
aas
cwtl
aas
movsl
aas
mov
mov
sarb
aam
fdivrl
jmp
aas
add
add
add
add
sbb
and
sub
xor
pop
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
aam
clc
cmp
fs
lods
sarb
in
clc
and
dec
aas
jo
test
cwtl
aas
sarb
aas
call
pusha
add
in
add
add
add
adc
adc
sbb
sbb
and
and
sub
sub
xor
dec
xor
push
xor
je
mov
nop
xor
enter
aam
fdivs
repnz
xor
xor
xor
xor
xor
xor
pop
xor
xor
insb
xor
je
js
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
js
jl
xorb
xor
xor
mov
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
lods
xor
lds
pop
ss
push
ss
ss
test
mov
sahf
ss
fidivl
ljmp
aaa
daa
aaa
ss
cmp
inc
aaa
dec
aaa
popa
aaa
jns
divb
add
and
xor
cmp
dec
cmp
cmp
je
mov
mov
cmp
pop
cmp
ja
scas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jns
xchg
cmp
cmp
cmp
and
cmp
inc
cmp
push
cmp
pop
cmp
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cltd
cmp
pop
ds
ds
ds
ds
ds
ds
cltd
cmpsl
lds
pop
aas
cmp
ja
mov
aas
lock
add
add
add
or
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jns
xchg
cmpsl
xor
xor
xor
xor
data16
xor
xor
xor
xor
xor
xor
cmp
push
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
addr16
mov
xor
shll
das
ss
ss
mov
ss
aaa
inc
aaa
pop
aaa
arpl
push
aaa
test
aaa
in
aaa
clc
aaa
adc
sbb
and
sub
dec
cmp
js
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
cmp
pop
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
popa
cmp
outsb
cmp
mov
cmp
cmp
cmp
cmp
cmp
sub
xor
push
cmp
cwtl
cmp
mov
sarb
or
ds
ds
ds
aad
fnstsw
std
or
adc
aas
inc
aas
push
aas
imul
aas
stos
aas
mov
aas
add
add
add
and
sub
inc
xor
push
xor
jg
mov
mov
xor
xor
push
xor
xor
xor
xor
xor
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lahf
xor
xlat
xor
imul
ss
ss
ss
aaa
adc
sub
inc
aaa
lods
aaa
out
or
cmp
push
cmp
ja
cmpsb
cmp
cmp
cmp
cmp
ja
mov
popf
cmp
cmp
cmp
cmp
cmp
xor
cmp
push
cmp
loop
in
cmp
dec
cmp
cmpb
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
dec
cmp
scas
cmp
or
and
pop
jae,pt
fwait
ds
ds
push
aas
sub
cmp
inc
aas
push
aas
cmpb
aas
xchg
aas
mov
aas
enter
out
idivb
add
add
add
or
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
in
xor
jne
mov
xor
xor
push
mov
adc
cmp
imul
mov
fdivs
fbstp
divb
sub
aaa
push
aaa
shll
out
aaa
or
push
cmp
xchg
xchg
cmp
and
cmp
xchg
cmp
cmp
cmp
cmp
in
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jb
js
jle
sarb
or
sub
cmp
push
ds
sarl
xlat
ds
aas
sub
push
aas
pop
aas
ja
xchg
xchg
aas
aas
fidivrl
call
add
mov
add
sbb
dec
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
ja
xorl
xor
xor
xor
xor
xor
xor
push
xor
jo
jnp
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
xor
gs
lahf
xor
or
ss
push
ss
cmpsb
ss
ss
divb
push
aaa
pop
aaa
popa
aaa
data16
insb
aaa
mov
lcall
aaa
in
aaa
hlt
aaa
adc
cmp
cmp
pop
cmp
outsb
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
inc
cmp
xchg
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
repnz
pop
ds
mov
scas
ds
ds
dec
aas
push
aas
jo
xchg
aas
mov
aas
add
add
add
or
xor
inc
xor
xchg
lods
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
mov
nop
xor
xor
xor
dec
xor
jle
xchg
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
mov
xor
adc
ss
ss
push
aaa
push
aaa
jne
mov
shlb
aaa
shlb
fdivl
in
add
and
sub
cmp
test
xchg
cmp
cmp
cmp
xchg
movsl
cmp
cmp
cmp
cmp
cmp
sbb
sub
cmp
cmp
jno
cmpl
lods
cmp
cmp
test
xlat
cmp
cmp
gs
cmp
cmp
cmp
cmp
push
cmp
data16
jns,pt
cmpb
ds
cmc
ds
aaa
aas
addr16
test
out
add
add
les
add
add
xor
xor
xor
xor
xor
xor
xor
mov
cwtl
xor
xor
xor
dec
xor
jnp
mov
sahf
xor
xor
xor
push
xor
insl
xor
jge
mov
mov
xchg
xor
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
dec
xor
addr16
fwait
xor
out
or
pop
ss
cmp
dec
ss
xchg
movsl
ss
shlb
fidivl
jecxz
ljmp
aaa
adc
push
aaa
sub
cmp
arpl
jp
xorb
aaa
xchg
aaa
mov
aaa
cld
aaa
cmp
inc
cmp
bound
cmpl
cmp
cmp
cmp
cmp
cmp
sbb
and
aaa
cmp
pusha
cmp
jg
lcall
cmp
cmp
cmp
cmp
cmp
arpl
imul
sarb
fdivrl
out
repnz
cmp
cmp
cmp
cmp
dec
cmp
outsb
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
lcall
cmp
fidivrs
adc
sub
xor
jp
test
ds
ds
cmc
ds
ds
aas
sbb
fs
outsb
aas
jns
test
mov
cltd
aas
mov
aas
fistpll
in
add
add
mov
add
add
add
xor
outsb
xor
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
movsb
xor
out
xor
and
cmp
dec
ss
ss
ss
outsb
fnsave
in
lock
sbb
xor
inc
aaa
dec
aaa
imul
aaa
jge
mov
xchg
aaa
cmpsl
aaa
mov
aaa
loopne
in
jmp
pushl
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
cmp
jp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpl
iret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
enter
push
adc
sbb
push
xor
dec
cmpb
movsb
ds
int3
fdivrs
repz
ds
sub
inc
aas
dec
aas
js
jl
cmpb
aas
mov
xchg
aas
mov
loopne
add
xor
xor
xor
push
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
test
cltd
xor
xor
pop
xor
xor
ja
jle
mov
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
std
xor
dec
ss
ss
outsl
xorb
ss
int
shll
add
or
or
adc
push
aaa
daa
aaa
inc
aaa
dec
aaa
mov
cltd
aaa
mov
aaa
jmp
sti
aaa
cmp
push
cmp
imul
cmp
cmp
cmp
and
cmp
pop
cmp
jae
xchg
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
ja
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
jns
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
je
mov
leave
cmp
and
ds
jno,pt
jge
cmpl
ds
ds
ds
idivb
add
adc
sbb
sub
aas
inc
aas
push
aas
push
aas
pusha
aas
insb
aas
jns
jg
mov
fdivrl
add
add
add
add
add
add
adc
sbb
movsl
xor
xor
xor
xor
xor
xor
xor
inc
xor
pop
xor
test
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pop
xor
test
mov
xor
xor
ja
mov
xor
xor
xor
xor
lods
xor
cs
ss
jns
xchg
mov
aaa
inc
aaa
jo
pushf
aaa
enter
adc
cmp
mov
xchg
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
ja,pt
mov
ds
aas
sbb
push
aas
nop
aas
mov
add
add
add
add
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
scas
xor
xor
xor
xor
mov
mov
fbstp
pop
xor
xor
push
xor
xor
push
xor
xor
xor
xor
xor
xor
dec
xor
or
push
ss
xor
push
ss
lods
ss
mov
ss
aaa
es
xor
inc
aaa
dec
aaa
pop
aaa
gs
xchg
cltd
aaa
mov
mov
aaa
sbb
imul
mov
cmp
pop
cmp
ja
mov
nop
cmp
cmp
cmp
cmp
cmp
fnstcw
ljmp
cmp
cmp
cmp
ja
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
xor
sub
add
add
orb
add
add
or
or
add
sbb
or
push
add
xorb
add
pop
xor
xor
or
push
add
xorb
add
xor
and
cmp
cmp
cmp
dec
add
jae
outsl
add
add
add
add
add
xor
xor
push
add
sbb
mov
xchg
lret
cltd
pushf
test
cmp
inc
cmp
addb
xor
add
add
adc
cmp
cmp
stos
jmp
aam
sti
cmp
or
dec
xchg
or
add
xor
xor
add
add
and
push
imul
jae
and
and
fs
outsb
imul
cmp
inc
inc
xor
pop
or
xor
xor
xor
xor
pop
pop
or
xor
xor
xor
xor
pop
xor
xor
xor
add
add
adc
outsl
jae
data16
inc
outsl
jb
outsl
jb
je
outsl
outsb
xor
or
xchg
testl
add
orl
add
daa
pusha
jne
icebp
cmpsb
rclb
ret
cmpsl
icebp
sub
mov
ja
mov
cmp
jg
sub
adc
mov
sub
popa
pop
arpl
lods
bound
outsl
mov
xor
lret
push
sub
pop
sub
add
cmpsb
pop
push
pushf
mov
push
inc
adc
xlat
jge
cmp
mov
test
or
jbe
mov
das
xor
add
popa
push
add
add
xor
adc
mov
aad
mov
push
inc
mov
es
mov
xor
add
add
and
push
imul
jae
and
and
fs
outsb
imul
cmp
inc
inc
adcb
lret
lds
jb
popf
push
inc
pusha
xor
dec
xchg
or
add
addl
aad
sbb
pop
subl
fwait
aad
push
icebp
fcompp
pushl
addr16
push
loope
adc
dec
movsb
out
push
mov
push
dec
pop
add
mov
loope
pop
cmpsb
xchg
fisubs
xchg
mov
fld
enter
iret
sub
push
dec
dec
cmp
outsl
in
jg
jo
ret
pop
pop
loop
dec
loop
shlb
xchg
add
xor
add
add
adc
lret
lds
jb
popf
push
inc
pusha
xor
dec
xchg
or
add
xor
xor
add
add
and
push
imul
jae
and
and
fs
outsb
imul
cmp
inc
inc
xor
pop
or
xor
xor
xor
xor
pop
pop
or
xor
xor
xor
xor
pop
xor
xor
xor
add
add
and
push
imul
jae
and
and
fs
outsb
imul
cmp
inc
inc
xor
or
xchg
testl
add
orl
push
imul
stos
and
jge
xor
mov
jne
mov
out
mov
repnz
adc
out
cwtl
sub
sub
test
in
es
jp
inc
imul
or
iret
daa
pop
or
jo
int3
in
mov
pop
cmp
aas
xchg
or
mov
jae
cli
push
add
lea
jo
jns
ret
cmc
push
fisubrl
sub
add
add
add
popa
push
add
add
xor
adc
mov
aad
mov
push
inc
mov
es
mov
xor
add
add
and
push
imul
jae
and
and
fs
outsb
imul
cmp
inc
inc
adcb
lret
lds
jb
popf
push
inc
pusha
xor
dec
xchg
or
add
addl
imul
rol
pop
mov
stc
jns
repz
orb
in
insl
jb
cltd
xor
adc
pop
inc
dec
push
pop
jl
inc
outsb
pop
stos
mov
pop
mov
test
push
add
mov
mov
xchg
cld
adc
sbb
std
add
xchg
sub
popa
push
or
jecxz
push
loope
pop
lret
iret
mov
stc
ds
mov
clc
punpckhdq
and
addb
xor
add
add
adc
and
scas
sahf
hlt
nop
out
mov
pop
aad
or
dec
xchg
or
add
push
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
push
add
add
and
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
xor
pop
or
xor
xor
pop
pop
or
xor
xor
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
add
add
sub
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
outsb
gs
sub
sbbl
testl
add
orl
adc
sub
dec
pop
das
dec
xchg
imul
xor
bound
push
xor
ret
sbb
les
divb
fstps
scas
mov
jbe
icebp
test
imul
dec
dec
sub
pop
in
sub
subb
sub
stos
mov
xchg
push
out
loopew
ret
sahf
pusha
cmp
loop
push
mov
jnp
sub
add
shll
push
or
push
add
add
xor
xor
or
push
add
xchg
push
das
das
outsl
arpl
jbe,pn
jb
jae
outsb
arpl
xor
add
adc
add
add
xor
xor
push
add
pop
add
xor
xor
mov
and
je
cmp
das
arpl
jbe,pn
jb
jae
outsb
arpl
das
je
jae
arpl
arpl
xor
push
add
and
or
or
or
push
add
xor
push
add
sgdtl
incl
add
push
shlb
push
add
adc
xor
xor
xor
add
push
push
push
inc
xor
or
xchg
testl
add
push
lds
and
or
mov
add
adcl
sub
pop
pop
popa
mov
add
xchg
xchg
mov
sbb
jmp
mov
ss
cwtl
dec
in
mov
inc
sbb
lea
cli
aad
add
xor
mov
daa
repnz
dec
add
dec
cmpl
push
loopne
loopne
xchg
movsb
xchg
sahf
pop
or
loop
mov
pusha
loope
lods
sub
movsl
dec
fs
sbb
lods
cmp
aad
and
lcall
inc
or
mov
sbb
mov
jmp
iret
leave
add
mov
ds
jb
mov
sahf
sub
mov
cmp
dec
xchg
add
stc
pop
push
hlt
sbb
sti
cmc
lods
xchg
mov
push
andb
sub
add
jmp
js
roll
pop
mov
xor
add
add
adc
sbb
inc
neg
insl
dec
or
push
or
xchg
testl
xor
xor
push
add
push
adc
pop
inc
xor
push
add
adc
gs
gs
and
jo
xor
adc
add
pop
adc
inc
jne
bound
jbe
insb
insb
xor
xor
or
push
push
push
xor
push
add
adc
push
and
jb
imul
outsl
outsb
xor
xor
add
push
push
push
and
gs
popa
insl
jo
outsb
and
xor
pop
or
xor
xor
xor
xor
or
xor
xor
xor
xor
or
or
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
push
add
add
and
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
xor
push
or
xchg
testl
xor
add
add
int
scas
or
lods
xchg
mov
icebp
ffreep
movswl
mov
mov
test
mov
mov
imul
sahf
movswl
in
js
ja
jle
cmp
xchg
scas
or
xchg
lret
sub
mov
pop
pop
sbb
lahf
cli
das
imul
mull
add
jg
push
jecxz
pusha
in
inc
sbb
mov
mov
xchg
add
and
xor
push
sub
xchg
adc
das
stos
out
ret
sub
mov
xchg
sbbl
jne
cmp
xchg
adc
push
rorl
inc
dec
fnstsw
jl
ds
rcrl
js
lahf
xor
icebp
out
sbb
les
pop
mov
cmc
out
jl
jge
bound
cmc
dec
or
shlb
push
test
int
mov
out
mov
fldenv
adc
mov
sarl
mov
fdivs
xor
or
push
add
add
xor
xor
or
push
add
xchg
push
das
das
outsl
arpl
jbe,pn
jb
jae
outsb
arpl
xor
push
add
adc
add
add
xor
add
incl
add
xor
add
pop
add
xor
xor
mov
xor
je
cmp
das
arpl
jbe,pn
jb
jae
outsb
arpl
das
push
push
push
imul
jo
outsb
addr16
inc
arpl
xor
push
add
and
push
or
push
add
xor
push
add
sgdtl
incl
add
add
xor
add
adc
xor
xor
push
add
adc
push
inc
xor
xor
sub
xor
dec
xchg
or
add
addl
sbb
mov
sub
sbb
int
mov
fisttps
sub
adc
add
or
add
mov
leave
xchg
dec
lcall
aaa
and
xor
mov
call
push
xchg
dec
and
test
mov
inc
repz
out
fstps
mov
popf
mov
loope
mov
iret
or
lock
sub
cmp
sbb
daa
idivl
dec
xor
add
inc
xor
xor
xor
add
add
and
push
imul
jae
and
and
fs
outsb
imul
cmp
inc
inc
add
idivl
cmp
stos
jmp
aam
sti
cmp
or
add
sbb
adc
or
push
add
xorb
add
add
add
sbb
or
xchg
testl
push
add
xorb
add
and
or
xchg
testl
das
lods
cmp
xor
push
les
imul
xor
dec
xchg
or
add
sbbb
lahf
outsl
ret
xlat
je
shr
mov
scas
fwait
pop
sar
xchg
jno
mov
mov
pop
cli
add
mov
sahf
aaa
sarb
movsl
rcl
fistpll
push
sbb
mov
jo
sub
inc
inc
xchg
adc
push
movsb
sbb
xchg
jb
mov
insl
or
sbb
xor
sbb
add
pop
inc
sub
sbb
call
movsl
pop
shrl
sub
push
clc
bound
arpl
cmp
ret
fistpl
push
or
addr16
lret
les
dec
out
ja
mov
lahf
and
xor
pusha
xor
jge
xchg
jne
xchg
adcb
icebp
fidivrl
xchg
or
and
cmpsb
inc
dec
orl
out
mov
or
mov
outsl
leave
inc
mov
es
and
and
out
xlat
out
in
push
into
shl
jnp
ret
inc
adc
inc
pop
xor
loope
xchg
fs
add
repnz
xor
sti
cs
jecxz
stos
lods
jbe
sbb
mov
incb
jl
add
loopne
addr16
bsr
lock
int
cld
aad
cmpsb
sarb
jl
inc
fstl
dec
mov
dec
add
loop
sbb
cmp
shll
loopne
scas
mov
mull
sub
push
dec
mov
sub
std
imul
bound
push
movb
jle
dec
movsl
in
pop
insl
push
xor
push
add
clc
lcall
push
push
movsb
ljmp
jbe
jp
jl
cmp
mov
dec
sub
pusha
mov
mov
pop
mov
mov
sbb
out
mov
mov
push
xchg
out
es
push
cltd
outsl
repz
dec
cmpsb
inc
dec
repz
push
add
sbb
mov
push
lods
ret
les
cmp
and
cmp
cwtl
fsubrs
adc
test
gs
and
mov
aaa
mov
adc
sbb
push
addl
shrl
pop
cltd
xchg
or
repnz
sub
xor
gs
mov
push
push
enter
int3
subl
sbb
dec
dec
adc
mov
fnstsw
nop
mov
xor
cmp
std
cmp
out
ror
xchg
mov
dec
mov
cmp
push
or
or
testl
rcll
movsl
jno
pop
mov
push
or
pop
xchg
stos
xchg
inc
dec
scas
cmc
iret
out
rorb
aam
out
mov
hlt
outsb
sub
or
test
inc
sub
in
mov
adc
cmpsb
dec
imul
cmp
lahf
mov
and
mul
mov
dec
push
and
sub
out
lret
pop
push
movsl
popl
jle
ret
outsl
jns
test
adc
pop
or
scas
aad
push
push
cpuid
push
cmp
or
ljmp
sbb
clc
testl
lret
aad
adc
hlt
imul
push
sti
push
mov
stos
mov
mov
sub
daa
inc
cmp
push
push
push
jbe
add
xor
sub
rcl
push
notl
or
add
jns
cs
xor
pop
cs
ret
dec
or
jno
xchg
lahf
orl
mov
enter
fldl
and
push
stos
stos
jb
lahf
mov
mov
xchg
and
cmp
hlt
or
repz
sub
xor
insb
movsl
pop
cmp
sbb
add
adcb
stos
fwait
scas
int
xchg
xchg
fwait
adc
dec
adc
sar
arpl
inc
scas
cld
pop
out
mov
xchg
fwait
add
cmp
popa
insl
mov
jo
and
movsl
leave
outsb
dec
lods
sahf
and
pop
cmp
int3
mov
cmp
inc
mov
inc
jl
scas
jbe
mov
stos
rcrl
enter
sbb
inc
pop
jmp
xor
push
jge
loope
mov
loopne
mov
vmread
or
adc
add
hlt
pop
shrl
in
sbb
in
fs
adc
into
shlb
call
jb
and
push
sbb
cld
dec
mov
loope
pop
push
mov
mov
jae
inc
dec
dec
pop
adc
pushf
or
jecxz
repz
adc
xchg
sub
test
cmpsl
sti
je
aas
jo
or
sbb
out
and
jnp
cli
insl
push
pop
shll
or
mov
out
jns
adc
jge
mov
add
sbbl
inc
inc
xor
sub
sbb
or
int
aad
or
jae
or
sub
aas
je
xor
sti
enter
in
xchg
aad
xchg
mov
cmc
cmc
divb
aas
repz
popf
addr16
fsubs
std
push
mov
sbb
fwait
add
pop
imul
push
cmp
repnz
outsb
xrelease
sarb
in
push
pop
jmp
cld
popf
and
fldenv
jmp
jae
inc
jns
sbb
int3
shrb
out
adc
xchg
or
pop
jg
stos
mov
sbb
xchg
imul
cmp
jnp
ds
loopne
rorb
outsl
and
mov
inc
scas
adc
cwtl
jmp
insb
jge
outsb
sti
fcoms
add
cli
mov
jl
push
pop
xchg
dec
fcompl
icebp
lock
sub
nop
pcmpeqw
imul
and
fnstcw
std
aad
cmp
loopne
fs
jbe
and
or
dec
ja
pop
inc
add
or
add
jne
lahf
ret
cmc
lods
push
jmp
pop
pop
ss
or
pop
sub
daa
xchg
xor
fwait
dec
fidivrl
xor
mov
cmc
lahf
and
enter
aas
fs
push
dec
aaa
test
add
jle
lock
cmc
icebp
in
ljmp
push
inc
inc
and
ret
aad
lret
push
test
and
cmp
movsl
lds
cmp
mov
fadds
or
fcmovbe
loope
leave
adc
mov
inc
push
loope
addl
inc
lds
js
popa
cmp
mov
ss
mov
pop
adc
inc
sbb
cmp
pop
cmp
int
ret
and
lret
push
fldl
cmp
pop
jmp
mov
cmp
jg
or
pop
or
mov
in
push
pop
cli
cltd
mov
aad
xchg
add
fstpl
imul
or
and
ds
mov
jns
nop
sub
sbb
jg
pop
add
out
rcll
jmp
jae
ss
ljmp
fwait
dec
mov
jl
xlat
mov
cwtl
mov
xchg
sahf
dec
xchg
pop
out
cmpsl
jecxz
dec
dec
push
or
mov
sub
icebp
pop
lea
lock
in
jg
dec
scas
repz
loope
and
xor
movsb
cmpsl
pop
fisttpl
jns
inc
icebp
push
add
popf
mov
mov
dec
loop
push
push
xchg
sti
aaa
icebp
cmp
xor
jno
out
mov
dec
dec
sub
mov
xlat
sub
test
bnd
into
outsb
shrl
scas
and
shlb
cmp
adcb
push
adc
xchg
push
push
push
mov
ja
sbb
xchg
inc
or
into
push
js
jp
test
loope
cmp
lock
popf
ss
int
int
pushf
dec
adc
lret
int3
ljmp
lds
xchg
mov
test
cmp
jbe
pop
and
imul
aad
lock
scas
and
ret
popa
inc
imull
roll
dec
aaa
inc
pop
and
adc
dec
lahf
cmp
addr16
cmp
push
cli
mov
sbb
jb
imulb
js
mov
jp
adc
push
not
movsl
out
std
ror
sbb
movsb
lods
loopne
or
fdivs
add
pusha
sbb
les
dec
mov
fsts
out
jno
sbb
pushl
repz
ljmp
lahf
jae
pop
pusha
jg
push
and
jne
xchg
popa
ficoms
jne
sbb
lods
pop
jae
jmp
imull
aaa
xchg
in
repz
pop
fildl
jg
mov
in
add
mov
jl
sbb
push
sub
pop
dec
pop
adc
mov
sub
xchg
shll
push
inc
push
adc
roll
je
dec
xchg
fimuls
jmp
std
adc
jle
insl
push
mov
xchg
sbb
mov
add
add
call
vmread
shr
jae
dec
sbb
pop
pushf
sbb
inc
outsb
push
mov
inc
movsb
jo
push
or
lds
jmp
pop
nop
enter
push
cmp
fstl
ret
adc
rcll
gs
cli
push
je
imul
xchg
icebp
dec
push
shrl
dec
mov
push
xor
xchg
test
jnp
adc
mov
sub
cli
mov
mov
sarl
pop
out
adc
xor
jno
mov
std
mov
jmp
loopne
dec
add
idivb
inc
dec
sub
ss
cwtl
divl
out
out
call
int3
mov
icebp
fistpl
jle
push
add
addr16
xor
inc
cmp
mov
jae
ret
or
int
out
xchg
xor
loop
inc
lock
shll
mov
mov
push
not
jmp
rcr
outsl
aam
ret
inc
inc
pop
pushf
xor
inc
pop
bound
dec
jne
loop
dec
mov
push
mov
cli
cmpsl
xchg
fs
push
mov
daa
sbb
imul
mov
mov
nop
sbb
or
sahf
xchg
clc
ficoml
shr
je
inc
pop
xchg
mov
cmp
popa
adc
lods
adc
or
pop
sti
mov
repz
jo
subl
inc
test
pushf
pop
daa
cli
clc
jnp
jno
and
inc
mov
inc
xchg
test
scas
add
push
xor
and
adc
adc
jle
loop,pn
pop
in
jnp
loope
sahf
and
adc
cmpsl
fisubs
xor
sbb
inc
jbe
add
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
