fbstp
add
inc
outsl
outsl
insb
gs
outsb
add
add
add
jmp
jae
add
jb
lea
sub
add
push
push
jle
decl
inc
add
dec
outsb
je
addr16
sbb
sarb
fildll
pop
add
jns
insb
daa
push
outsl
jb
out
notl
add
inc
movsl
imul
insl
das
add
cwtl
or
push
je
sub
or
jge
notb
fs
mov
pop
push
imul
jle
or
dec
jnp
jle
add
and
roll
aas
add
mov
xchg
shlb
shll
pushf
mulb
fadds
hlt
arpl
jmp
pop
push
dec
bound
arpl
loope
addl
jns
lds
dec
dec
jbe
sbb
adc
popa
arpl
add
pop
lcall
cmc
add
or
imul
add
mov
sbb
pop
add
push
fs
or
and
clc
jmp
adc
sahf
jo
int3
andb
int
sbb
lds
add
outsl
lds
aas
or
jns
fcmovne
rorb
sbb
sub
xor
fs
sbb
jmp
pmulhuw
fs
inc
push
cld
nop
inc
push
sbb
clc
rolb
sbb
les
sbb
mov
nop
inc
mov
test
nop
inc
push
movsb
hlt
mov
pushf
cwtl
repnz
sbb
enter
xchg
seto
mov
orl
sbb
adc
mov
test
jl
stc
add
mov
ret
add
divb
add
mov
int
ret
aaa
inc
pop
ret
push
or
insb
fdivs
insb
push
andl
in
fisttpl
push
mov
add
push
bswap
push
add
test
jne
xor
pop
leave
mov
sti
in
add
mov
add
lea
push
mov
mov
inc
cmp
cli
fs
mov
mov
mov
push
nop
mov
mov
ret
scas
mov
mov
xchg
mov
test
xchg
mov
mov
push
add
idivl
jge
adc
add
push
mov
or
adc
ret
push
imul
call
mov
mov
mov
and
pop
mov
mov
out
push
or
push
or
ret
ret
fiaddl
repnz
push
or
inc
add
adc
or
aaa
sub
fistpll
jmp
loope
mov
sub
shrl
pop
pop
push
fidivs
call
sti
mov
xchg
cmp
jb
idiv
std
mov
call
ja
and
mov
rcl
out
outsl
add
or
mov
dec
ret
sbb
aas
pop
mov
add
pop
repz
mov
cmp
orb
sub
cmp
jl
sub
mov
aam
or
push
dec
jmp
sbb
scas
sbb
sti
jne
sbb
icebp
or
and
mov
cmp
pop
mov
or
add
xchg
rorl
add
pop
push
jg
ja
loope
clc
mov
test
je
mov
mov
dec
arpl
mov
push
dec
lock
int
lahf
loop
mov
sub
leave
shrb
push
fcoms
jne
icebp
push
push
and
sti
insl
dec
popf
cmpl
in
sub
aaa
movsb
mov
in
mov
loope
add
lret
mov
lock
add
mov
adc
fcmovnb
mov
out
ja
mov
add
cmp
ja
mov
je
jae
or
or
sbb
add
push
or
or
add
inc
enter
cmp
fsubr
orb
outsl
jg
repz
jbe
sbb
push
mov
or
pop
and
dec
hlt
cmpl
adc
cmp
and
mov
add
sbb
xchg
ret
outsb
or
sub
mov
pop
cmp
mov
add
and
mov
cmp
or
or
jbe
scas
adc
sti
push
push
cmpb
adc
sbb
jmp
and
push
and
mov
out
sub
pop
cmp
add
inc
out
sub
or
adc
cld
jle
and
add
sbb
add
inc
push
addl
rorb
mov
ja
clc
mov
aas
inc
pop
flds
bnd
xor
idivl
insl
cmpsb
cmpsb
sub
xlat
mov
pop
and
je
mov
cltd
cmpsb
inc
cltd
inc
ds
adc
jne
push
pop
add
mov
mov
and
push
insb
fdivs
insl
pop
inc
jo
jp
out
cli
jge
xor
aaa
add
je
cmp
inc
jne
xor
jle
sub
loopne
push
stos
hlt
cmp
add
mov
xor
lea
sti
fs
sub
mov
fcoms
or
fwait
pop
and
sbb
lea
test
jne
inc
cld
xchg
jmp
imul
cld
aaa
cmc
jne
nop
cmp
loope
nop
inc
xchg
cmp
cltd
xchg
sarb
inc
popf
adc
push
pop
xchg
cltd
popa
roll
lea
cmc
adc
loope
adc
fidivs
mov
pop
or
ds
rorl
cld
cmpsb
loopne
add
mov
ret
shrl
or
adc
insl
jo
or
adc
ja
jmp
or
or
add
imull
loop
xor
mov
push
fistps
test
cmp
or
add
sub
jbe
js
clc
seta
out
call
mov
xor
jg
mov
inc
cmp
js
jnp
addl
add
aam
add
pop
pop
pop
lds
sub
or
out
loopne
sub
pop
xchg
pop
shl
notb
or
popl
xorl
xchg
or
sub
mov
add
or
inc
gs
pop
outsb
imul
adc
jmp
sbb
sbb
roll
mov
jne
shrb
jb
or
cmp
jg
adc
test
jns
add
sar
rcr
nop
test
and
mov
jne
mov
mov
mov
mov
adc
jmp
dec
add
jb
add
or
mov
cmp
pop
and
bound
jmp
decl
adc
add
mov
jb
test
fucomi
ja
daa
add
or
or
mov
and
jle
mov
sub
test
cld
dec
adc
cli
iret
mov
inc
mov
insl
or
push
or
das
cltd
mov
or
xchg
or
ret
jnp
andl
jg
loopne
adc
je
add
dec
cmc
fistpll
cmpsl
sub
ret
aas
pop
fcoml
push
je
mov
or
cmpsl
lahf
cmp
cmp
cmp
negb
fisubrs
mov
xor
add
jmp
mov
add
and
repz
bound
mov
decb
in
stos
adc
add
jno
das
xchg
cmp
mov
push
adc
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
fnsave
out
xor
daa
xlat
pop
clc
into
cs
lea
and
in
mov
dec
pop
fldln2
aad
lds
aad
jnp
jae
lea
push
jp
xor
sub
mov
xchg
out
cli
pop
push
iret
mov
mov
add
sub
and
push
xor
adc
rol
ret
nop
hlt
pop
pop
into
mov
mov
sbb
cmp
js
hlt
inc
adc
push
pop
add
sub
cmp
jge
jl,pn
mov
pop
test
jnp
sbb
xchg
jae
sbb
jle
adc
or
dec
hlt
ja
movb
sub
or
arpl
mov
mov
pop
and
and
push
loopne
or
add
cmc
and
movsl
mov
test
push
imul
mov
cmp
popa
push
sub
pop
add
xchg
repz
sub
xor
fsubr
js
leave
ret
subl
add
cmp
adc
leave
aam
loope
or
leave
arpl
xor
pop
mov
add
add
pop
inc
stos
pop
push
enter
rol
pusha
enter
fidivrl
mov
cmpsb
ret
clc
add
jg
dec
push
test
ror
adc
or
ljmp
lock
sbb
popa
adc
pop
pminub
icebp
push
jle
adc
jg,pn
pop
mov
mov
mov
pop
pop
jmp
sub
test
sbb
in
testl
pop
cmp
movsb
sub
cmpl
inc
jge
adc
inc
add
ret
sub
xor
iret
xlat
mov
xor
sbb
push
jae
lret
and
leave
jmp
repnz
inc
pop
pop
jne
js
pop
and
xor
inc
sub
test
pop
jne
push
xchg
add
int
clc
stos
jle
lock
out
leave
mov
in
cli
xchg
cld
pushl
mov
add
or
sti
jle
xchg
push
mov
mov
xchg
inc
mov
xor
pop
or
mov
movb
pop
inc
scas
shlb
clc
mov
js
mov
jmp
mov
clc
jmp
adc
popf
or
mov
add
adc
jbe
es
xchg
jmp
mov
jnp
fldcw
les
dec
sub
mov
add
arpl
sbb
push
jmp
inc
adc
out
or
arpl
jmp
push
inc
vmovaps
push
pop
pop
push
push
sbb
push
test
clc
mov
lods
cmp
out
insb
jno
sub
leave
mov
adc
adc
jbe
sub
lock
test
jne
test
ja
rclb
pop
decl
clc
adc
cmp
sahf
push
add
loopne
add
sub
push
or
test
jge
xor
cmpsb
jbe
das
add
xchg
inc
in
ret
cmp
out
jne
stos
in
xorl
add
pop
sub
mov
test
je
inc
jmp
or
cli
add
or
orl
jmp
mov
in
jmp
jmp
js
push
clc
push
adc
xor
dec
adc
mov
and
cmp
xchg
sbb
pop
and
sbb
mov
mov
loope
sub
jge
push
add
jecxz,pt
cmp
icebp
sbb
mov
imul
xor
push
arpl
notb
adc
sub
jge
push
inc
sub
dec
xchg
adc
push
mov
add
cmpsb
mov
rcrl
fnstsw
pop
and
sub
data16
pop
sbb
xor
pop
cmpb
insl
push
and
iret
adc
rcrl
dec
xor
dec
daa
add
add
and
dec
or
mov
push
test
add
sbb
mov
cmp
hlt
mov
pop
mov
sbbb
fsub
jmp
push
or
mov
push
xchg
mov
js
cmp
xchg
ret
cs
xchg
add
ret
add
mov
adc
add
or
pusha
dec
mov
nop
arpl
cmc
adc
addr16
arpl
pop
sub
pop
sub
orps
mov
adc
add
popf
jecxz
jmp
out
adc
call
inc
add
arpl
aaa
fstpt
call
lret
xchg
dec
sbb
decl
shlb
add
ljmp
and
inc
push
or
add
dec
sbb
xor
mov
je,pt
je
incb
leave
je
das
out
cmp
enter
or
mov
ret
push
jmp
pop
xor
add
mov
bound
shl
out
or
dec
push
mov
jo
push
mov
rol
xor
inc
sbb
sbb
aaa
push
popa
roll
out
es
adc
and
xor
jle
jecxz
aaa
pop
cwtl
mov
cmp
scas
mov
test
push
jo
mov
ret
mov
cmp
lock
mov
jg
fmull
push
push
push
clc
mov
inc
xor
pop
jne
and
cmp
xor
pop
mov
mov
ds
decl
jg
mov
sub
sbb
ret
sub
inc
pop
decl
fnstsw
sarl
mov
inc
rep
jmp
mov
pushl
leave
jmp
mov
jmp
mov
cmp
xchg
js
js
add
ja
sub
roll
push
arpl
cmp
add
lea
add
mov
add
lea
jle
lea
or
mov
inc
xor
aad
mov
dec
adc
fwait
nop
sbb
mov
xlat
shrl
ja
je
cmp
rep
ja
fisubs
and
lahf
jns
je
lea
popa
fistpll
cld
xor
std
xor
ja
mov
std
mulb
ds
aaa
jge
mov
je
cmp
jbe
cmpb
xchg
decl
add
out
in
mov
jmp
cmp
xor
push
out
movsl
std
and
sub
add
ja
call
fstpl
dec
mov
push
pop
aad
cmp
xor
jmp
outsb
cmp
imul
jbe
mov
mov
inc
inc
adc
sub
pop
into
test
mov
xchg
fildll
and
into
test
push
cld
repnz
jnp
cmp
adc
adcl
dec
js
cli
add
jmp
sbb
faddl
lea
rol
push
xchg
jae
mov
pop
xchg
divb
repz
std
fadd
mov
out
add
jmp
std
cmp
testl
addr16
mov
dec
jmp
mov
or
negl
js
or
push
or
fdivs
sti
nop
add
jb
cmp
ja
imul
loopne
sub
daa
data16
loop
sub
jle
fnstcw
pop
jae
fwait
pop
pop
scas
in
or
push
sti
cmpsl
flds
fwait
orw
insb
fisttps
push
fistpl
fldcw
pop
inc
test
cs
leave
jge
mov
sarb
inc
mov
jae
mov
mov
sub
in
push
lds
rorl
jb
sub
pop
or
call
aad
pop
test
add
ss
psrlw
xchg
mov
sbb
xor
out
pop
fisubs
cmp
mov
outsb
out
xlat
ja
and
adc
jne
call
lret
xor
mov
adc
jmp
inc
loopne
loope
rol
call
xchg
xchg
jp
rorb
push
inc
add
jb
cmp
ja
mov
mov
fildl
xlat
imul
scas
decl
testl
xchg
cmp
add
sbb
lret
push
lret
mov
inc
inc
and
mov
icebp
cli
fisubrl
xchg
inc
inc
mov
add
ret
ljmp
pop
cmp
jne
dec
je
mov
mov
sbb
std
pop
stos
aaa
or
or
loop
push
adc
incl
and
je
mov
cmp
jne
push
adc
jne
sti
loopne
repnz
sbb
mov
pop
cmp
jbe
call
cmp
jne
shr
inc
adc
add
testl
shr
or
int
dec
dec
pop
cmp
inc
sbb
loope
or
mov
and
xchg
out
loope
mov
cmp
jne
dec
dec
dec
and
rorb
sbb
xchg
pop
add
mov
fstpl
sti
shl
or
adc
rcrl
jle
stos
pop
es
imul
arpl
rclb
push
mov
fstpt
push
inc
cmp
je
mov
repnz
jle
sub
je
and
je
loopne
div
pop
je
xor
dec
and
mov
jmp
and
ja
cmp
ja
incb
mul
lea
push
add
push
iret
out
int
or
ljmp
jmp
xchg
push
neg
jle
js
pop
sub
jmp
inc
inc
rcrl
mov
filds
fiadds
xchg
and
ja
mov
not
add
scas
leave
aad
stos
aad
xchg
sbb
testb
filds
notb
stc
sbb
add
jge
inc
mov
dec
jne
pop
aaa
mov
fistpll
xchg
repz
mov
sub
inc
or
inc
dec
jne
mov
std
roll
dec
je
out
mov
mov
arpl
lea
fldt
sti
roll
call
pcmpeqb
and
lret
xor
add
popa
and
adc
push
iret
ror
push
jae
jge
mov
xor
enter
sbb
jmp
sbb
fstp
fldt
fldz
mov
dec
in
jg
aas
enter
inc
enter
and
repnz
or
ret
bswap
dec
jle
and
adc
mov
xor
sub
sbb
xchg
and
inc
mov
mov
and
movsl
aam
pusha
in
daa
sub
test
incb
sub
pop
jecxz
add
leave
sbb
inc
cs
jbe
imul
cmp
mov
mov
das
jmp
outsl
bound
cmpb
xlat
fadds
outsb
dec
jg
xor
xchg
push
or
push
push
int3
into
sbb
rorl
jg
jmp
push
pop
test
enter
mov
inc
mov
lret
dec
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
idiv
incl
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
incl
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
call
cmp
inc
xor
cmp
call
mov
sti
jmp
stos
call
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
call
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
cmp
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
cmc
decl
stc
repz
mov
subb
and
and
mov
bound
xor
push
lock
call
and
pop
jne
push
pop
cmp
in
xchg
add
repnz
clc
mov
mov
movzwl
mov
push
imul
adc
in
clc
push
sbb
dec
out
and
lret
sti
mov
inc
hlt
mov
push
addr16
add
mov
adc
adc
out
mov
loopne
and
push
clc
pop
aas
or
fcos
call
popa
mov
adc
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
or
jmp
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
mov
jg
fninit
fwait
cmp
sub
les
sbb
incl
mov
xor
mov
inc
ss
cld
mov
pop
mov
or
dec
cld
jne
dec
mov
xor
cmc
add
fbstp
ret
repnz
mov
ss
cmp
add
rorb
mov
sbb
pop
aaa
mov
add
outsl
mov
xorb
rorl
imul
or
cmp
ret
xor
andb
outsl
loopne
aam
bound
mov
or
push
jns
aas
lock
jge
mov
xor
push
shr
dec
rep
pop
cmp
fimuls
add
pop
fcoml
add
sbb
in
cmp
je
pop
mov
add
jae
lahf
push
mov
mov
sti
jnp
mov
pop
sbb
cmp
iret
cmp
mov
mov
mov
sub
test
mov
sbb
inc
xchg
cmp
jbe
adc
jb
add
and
loope
jns
shrl
cmp
mov
rorb
sahf
pop
loop
cld
xor
mov
flds
xchg
ja
add
pop
and
jne
mov
and
inc
adc
add
pop
ficoml
add
mov
xor
push
mov
js
iret
cli
push
add
pop
lea
push
sbb
or
dec
setne
scas
cmp
sbb
and
xchg
out
push
jmp
and
decb
xchg
cltd
pop
mov
cmp
jne
jb
cmp
lret
repnz
fisttpll
or
jne
or
scas
mov
inc
fcoml
adc
mov
pop
es
or
test
mov
mov
cmp
je
pop
hlt
out
push
mov
leave
jne
mov
add
add
aas
cmp
or
movl
or
call
ret
pop
add
sub
mov
pop
cs
filds
xchg
add
or
jmp
out
mov
pand
xor
das
mov
add
sarb
repnz
out
les
dec
movl
xor
sub
pop
data16
inc
push
stos
jbe
mov
pop
mov
dec
mull
decl
fistpll
sbb
movb
dec
push
cmp
sbb
add
jg
test
jne
icebp
fucomi
sbb
add
sbb
in
cmp
lret
jecxz
dec
cmp
fistps
push
pushf
enter
fisttpll
or
repnz
sbb
jg
mov
jmp
lahf
in
push
pop
add
mov
rcrb
arpl
hlt
xor
call
jl
pop
out
mov
mov
movl
or
jl
jl
or
pop
sub
stos
pop
push
ficomps
mov
inc
or
cltd
lcall
outsb
mov
call
sbb
lcall
add
call
pop
test
shrb
adc
push
in
push
pushf
adc
cmpsl
and
testl
cmp
into
das
add
loopne
mov
add
or
jae
lock
in
data16
pop
push
push
and
leave
clc
jg
mov
cmp
je
or
jne
movsbl
inc
inc
jmp
shr
stos
add
mov
rcrb
jecxz
fcompl
add
xor
add
fdivrl
adc
jecxz
pop
mov
pop
je
mov
test
mov
cmp
inc
mov
scas
rcrb
outsb
mov
jo
pop
adc
adc
mov
test
mov
add
ret
addr16
incl
push
je
or
fbstp
add
test
adc
ja
inc
pop
mov
push
ja
pop
hlt
leave
fadd
xchg
testb
adc
push
ds
adc
push
jns
sub
jo
dec
add
out
pop
add
push
cmp
sub
pop
subb
push
mov
test
mov
ret
fcmovnu
fld
inc
add
in
ret
add
in
fstps
scas
mov
mov
in
inc
or
cmp
or
pusha
cmp
outsl
je
dec
or
inc
out
leave
push
add
mov
pop
sbb
push
or
stos
mov
mov
add
aas
test
jo
repnz
addl
jne
testb
lcall
inc
mov
sbb
fsubl
jne
push
dec
jne
mov
shll
outsl
adc
popa
inc
or
out
daa
and
sbb
adc
adc
adc
add
add
lds
adc
clc
inc
mov
or
jmp
mov
pushf
pop
addr16
push
jmp
ret
push
mov
test
call
inc
jg
xor
mov
and
push
xchg
jno
push
push
push
push
mov
adcb
stc
es
inc
sahf
sub
js
mov
sub
or
jo
icebp
andl
testl
lods
jne
pop
sti
mov
pop
mov
mov
cmc
xchg
outsb
subb
pop
mov
std
subl
mov
sarb
pop
xor
clc
popf
push
pop
xchg
ret
mov
add
cwtl
jge
sub
pop
cmp
push
sub
lock
sub
je
jmp
add
sub
jb
je
jmp
cmp
xchg
push
adc
sub
adc
std
sti
push
sbb
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
pop
jmp
sbb
into
jmp
mov
mov
jmp
mov
jmp
mov
js
xor
mov
or
jp
add
pop
aaa
inc
pop
ljmp
loopne
ss
loope
jno
outsl
jp
push
xlat
and
jbe
test
mov
push
pop
inc
sbb
cli
into
rorb
fmuls
out
push
inc
sbb
sbb
cli
sub
addl
push
sub
jo
movsl
xchg
xor
jbe
mov
inc
or
leave
sub
stos
out
js
aas
mov
cmp
clc
jmp
cmpsl
add
or
cmp
jne
lock
adc
push
jnp
inc
cmp
mov
mov
in
pushf
or
cs
test
jle
dec
mov
inc
test
lcall
jg
jecxz
adc
jmp
mov
jb
add
inc
push
add
inc
dec
mov
aas
jl
in
movsl
js
mov
add
inc
fdivs
mov
jmp
jns
lea
mov
xor
movsl
xchg
pop
or
arpl
popa
dec
scas
push
xor
mov
ds
lea
mov
or
rorl
in
mov
pop
inc
and
pop
mov
mov
sub
inc
mov
cld
addr16
and
pop
cmp
jge
jmp
fs
or
adc
jns
imul
jl
xor
in
jecxz
ret
loopne
add
mov
dec
add
dec
pop
stos
xchg
cmpsb
data16
pop
cmp
mov
sbb
daa
loop
add
mov
add
add
popf
inc
dec
jne
pop
pop
pop
inc
loop
in
popa
imul
sets
dec
add
add
xchg
or
loop
xchg
jo
add
push
ds
mov
andb
dec
rol
or
mov
daa
mov
loopne
fmuls
xor
mov
lock
negl
xchg
out
imull
and
neg
sbb
inc
out
mov
adc
sbb
and
xlat
or
pop
push
push
mov
cmc
rorl
subw
adc
adc
add
mov
push
xorl
fistpl
push
in
cmp
aad
pop
jo
add
rorb
xor
in
fimuls
push
andb
ficompl
xor
mov
loopne
cmpb
adc
jle
push
cmpl
adc
or
mov
call
and
dec
rcr
and
xchg
xor
cwtl
subb
add
xor
lea
or
sub
jbe
stos
inc
adc
sbb
push
or
adc
inc
add
or
push
insl
mov
pop
pop
loopne
add
or
cmp
sarb
sub
ret
adc
fisttpl
push
inc
sti
ret
jo
push
or
dec
dec
stos
ret
pusha
es
daa
ss
mov
or
jmp
rorb
push
addb
cmp
std
das
cmc
and
mov
dec
jl
lock
mov
lea
cmpsb
outsl
es
mov
push
sbb
add
cmc
test
inc
or
dec
jne
cmp
lods
mov
inc
jg
mov
loopne
or
clc
mov
pop
pop
dec
push
push
in
mov
jmp
ja
xchg
adc
inc
mov
jle
jmp
push
add
loopne
push
dec
pop
movw
sbb
jae
mov
movl
mov
or
mov
mov
das
stc
mov
xor
push
rorb
aas
mov
cmp
fistpll
push
push
cmpsl
or
push
adc
movsb
xor
insb
add
mov
aaa
or
add
les
add
dec
jg
scas
cmc
lcall
ret
pop
lea
cmp
push
fwait
call
mov
push
push
push
jl
xor
lock
aam
mov
in
sub
add
test
fistpl
add
mov
sbb
add
cmp
clc
cltd
aas
push
mov
xchg
daa
nop
xor
ret
add
and
or
mov
add
jmp
inc
sti
in
jne
add
jmp
push
cmp
mov
or
jns
insl
out
or
in
add
add
fidivrs
mov
inc
xchg
nop
push
push
insl
incl
fcomp
repnz
or
pop
add
pop
pop
xor
cwtl
mov
push
and
out
dec
cli
ja
cld
adc
cmp
jl
adc
or
xchg
test
mov
mov
push
aas
push
lods
subl
fcmovne
sbb
jmp
mov
push
cld
add
cmp
pop
and
fnstcw
and
jnp
xchg
sub
or
ds
int
cmp
je
cmp
mov
or
cld
scas
rorl
inc
ja
roll
inc
mov
je
mov
sub
in
in
mov
lds
push
sbb
std
mov
mov
mov
jmp
jecxz
xor
jg
xor
xchg
pop
cli
adcl
mov
cmp
lock
dec
jmp
dec
sub
add
cmp
ffree
mov
gs
dec
jne
mov
lcall
and
aaa
add
dec
jmp
and
aam
pop
inc
pushf
sbb
add
sbb
jmp
dec
mov
and
mov
xchg
jmp
xchg
pop
cmp
fcomps
push
sub
imul
mov
das
pop
lret
fwait
inc
push
dec
and
inc
mov
sub
pop
cmp
or
or
sbb
mov
cmp
shr
or
add
adcl
xlat
clc
inc
lods
outsb
add
add
stc
mov
cmp
pop
sub
mov
cmc
mov
iret
pop
ja
adc
dec
inc
or
mov
out
aaa
rcll
cwtl
psadbw
psraw
es
jl
cmp
jge
sub
lcall
jae
fimull
sub
jmp
push
and
sbb
out
aaa
inc
lret
xchg
dec
jl
sub
mov
mov
jle
inc
sub
add
lea
inc
dec
sbb
cli
mov
sub
sahf
cltd
mov
push
mov
insl
dec
jge
cmp
adc
imul
add
gs
cmp
jmp
mov
lea
lock
or
pusha
sbb
nop
sub
jmp
mov
xchg
xor
mov
push
insb
dec
inc
mov
mov
inc
jae
adc
adc
push
mov
aaa
jmp
bound
push
pop
mov
arpl
push
ret
cmp
push
dec
xor
fisttps
out
and
sbb
loopne
rorl
das
loopne
js
sub
pop
and
std
jmp
out
aad
xchg
test
cmp
fisubl
pop
jne
push
or
push
sub
lods
rol
in
push
cmpsb
push
sbb
ret
cs
push
mov
inc
sbb
cmpsl
in
jne
insb
and
adc
mov
mov
repz
dec
jno
ds
add
pop
movsb
sbb
add
or
ffree
cmp
je
ret
pop
or
ss
decl
decl
repz
pushl
mov
and
rorb
adc
sub
aad
fmuls
pop
xchg
add
mov
xchg
add
shlb
jb
push
push
popa
sbbb
xor
cli
ficomps
dec
syscall
pop
data16
scas
mul
movsb
sbb
or
mov
dec
mov
test
adc
into
mov
xchg
mov
mov
sbb
fsubl
stos
sub
cmp
push
les
rolb
inc
dec
or
sub
xchg
cmpsb
pop
dec
cmp
rcl
ljmp
cmp
push
in
adc
cmpsl
push
inc
sahf
popa
jno
or
cmp
adc
cmp
cmp
xchg
push
xchg
pusha
icebp
dec
mov
daa
in
enter
sub
scas
pop
pusha
faddl
cmp
ss
mov
insl
lods
push
add
jl
push
int
xchg
dec
inc
lea
out
cmp
add
pop
mov
jg
out
mov
cmp
push
add
cmp
lock
pushl
or
and
or
je
cmp
xchg
je
mov
or
add
push
ficompl
mov
add
loopne
and
dec
aad
push
or
cmp
add
dec
cs
adc
cmp
pusha
in
pop
jmp
cmp
mov
sub
cld
lock
pop
lahf
sbb
cmp
cmp
loopne
out
adc
sarb
xlat
aas
mov
call
inc
shr
loopne
fcmovnbe
and
ds
pop
jbe
xorb
sbb
mov
das
add
add
jg
adc
inc
fimuls
pop
fbstp
mov
cmp
outsb
daa
push
push
sub
sub
pop
sub
jmp
mov
repz
sub
int3
jmp
test
fnstsw
rolb
mov
icebp
jmp
jp
loope
cwtl
outsb
adc
xchg
xchg
sbb
push
or
lahf
inc
add
or
pop
outsl
cld
aad
clc
push
pop
add
sarl
xchg
lock
cmp
pop
push
icebp
cmp
xor
cmp
cmp
pop
or
cmp
jo
pusha
shrb
cmp
adc
or
dec
mov
add
shl
jmp
and
push
mov
lea
adc
in
mov
xchg
mov
pop
test
cwtl
or
inc
pop
jmp
aas
add
jnp
dec
scas
jns
xor
mov
mov
adc
and
scas
xchg
fistps
pop
aam
push
add
jg
fadds
adc
iret
xor
jge
and
push
and
enter
dec
cmpsl
or
sub
das
imulb
or
cmpsb
std
daa
adc
pop
fmull
xor
add
daa
or
ja
jmp
add
add
inc
ljmp
mov
mov
jno
add
je
in
jo
mov
or
jo
jo
adc
pusha
adc
in
and
nop
push
imul
push
clc
sar
ds
shll
faddl
xor
xchg
push
push
inc
mov
adc
inc
jl
sub
inc
push
inc
pop
pop
pop
jno
daa
or
xor
rolb
les
push
push
inc
mov
mov
cmpsl
cli
psubsb
and
shr
not
cmp
and
add
pop
adc
pop
pop
ret
shll
in
xorb
lock
call
push
adc
and
ret
mov
sub
jl
cmp
outsb
mov
mov
sub
inc
jmp
cmp
jne
mov
js
loopne
inc
and
sub
inc
sbb
cmp
je
xor
mov
clc
push
fimull
add
sub
cltd
lret
inc
pusha
cmc
add
in
std
add
psubw
jb
out
mov
das
mov
clc
and
jmp
sbb
sbb
or
pop
fmuls
or
jb
jmp
jl
andl
mov
pushl
jmp
jg
mov
cltd
aas
pop
pop
jl
or
adc
loopne
add
adc
xchg
push
hlt
inc
xor
sbb
inc
jno
fisubrl
sub
xor
xchg
rolb
push
add
fdiv
ficoml
inc
jmp
es
sub
dec
inc
shlb
adc
int3
xor
jg
cmp
sub
add
dec
push
xor
adc
pop
and
jb
add
or
push
mov
setb
jmp
setl
cmp
je
dec
add
or
arpl
xor
arpl
mov
add
fisubl
dec
push
lret
pop
lcall
add
push
sbb
inc
repnz
jmp
pop
add
test
lods
jle
jg
inc
pop
mov
mov
sbb
imul
lods
cmp
inc
lock
dec
cmp
or
fstp
pop
push
iret
inc
add
loope
imul
jne
xchg
push
call
cmp
icebp
testb
call
dec
in
in
cmp
je
clc
incl
nop
add
mov
cmp
jge
fistl
sbb
or
imul
imul
lock
add
testl
jmp
decl
stos
fsubp
test
adc
in
clc
xchg
jge
or
inc
mov
dec
push
dec
in
push
push
icebp
outsb
dec
dec
adc
into
stos
and
dec
jo
rcl
push
dec
sarl
dec
pop
push
movl
or
in
xchg
cmp
lahf
test
fadds
ret
cmpsl
cmpl
jle
cltd
or
xchg
stos
movsl
lock
dec
jno
and
inc
imul
lea
stc
test
dec
jne
enter
mov
in
push
subl
outsl
xor
cmp
push
jne
xlat
adc
fidivrs
push
insl
inc
pop
stos
and
sbb
jge
ret
push
mov
adc
dec
cmp
icebp
pop
push
push
push
mov
incl
out
pop
pop
jae
xor
in
sbb
shlb
dec
leave
cmp
mov
xor
imul
dec
cmp
inc
inc
push
insl
xchg
dec
loop
lea
jne
pop
loope
les
std
push
arpl
mov
ret
adc
mov
xor
mov
inc
dec
add
inc
inc
mov
mov
outsl
adc
or
or
addr16
adc
mov
xor
ret
jmp
js
adc
cmp
jne
mov
mov
pusha
xchg
pop
loopne
dec
inc
mov
inc
ret
out
jnp
inc
push
pushf
push
and
mov
or
pop
cmpsb
int
jnp
mov
push
dec
call
push
add
movsl
sub
mov
aam
cmp
sbb
fdivrl
std
js
pop
jne
mov
test
loopne,pt
xor
or
sbb
and
dec
aas
jecxz
cld
sub
lea
mov
iret
popa
jno
sub
rolb
roll
cli
dec
jg
ljmp
sbb
cli
cwtl
out
and
hlt
pusha
jno
nop
loop
sub
div
std
sti
addr16
cmp
test
sub
dec
push
push
pop
sbb
push
mov
sbb
jo
push
negl
adc
ret
imul
call
gs
xor
cs
insb
pop
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
push
pushf
push
fsubl
outsl
loopne
mov
mov
movb
inc
mov
sbb
add
dec
loopne
add
aam
dec
movsl
cmp
xor
cld
jb
and
jecxz
dec
mov
mov
dec
or
movsl
dec
sub
or
inc
clc
int3
and
lcall
xlat
sub
pop
repnz
mov
and
sti
and
popf
push
lods
repz
or
mov
inc
test
push
loope
mov
jge
aas
or
shll
sub
sbb
jmp
dec
cmpb
stos
pop
cmp
jne
adc
xlat
mov
add
sub
pop
xor
sbb
or
ja
mov
jo
lock
outsl
repz
mov
xchg
adc
add
mov
dec
outsl
data16
popa
jb
das
push
mov
popa
insb
gs
aaa
pop
subl
out
pop
subb
dec
out
pop
enter
dec
add
pop
push
mov
adc
mov
sub
xor
push
enter
or
negb
mov
inc
mov
pop
mov
daa
mov
notb
aam
add
mov
fsubrs
add
pop
jo
or
into
ja
mov
push
js
pop
arpl
mov
cmp
loope
inc
dec
add
or
cmp
ret
pop
jno
lods
and
jne
add
lahf
adc
inc
int3
sub
addr16
adc
sub
nopl
add
insb
test
mov
pop
mov
aaa
call
cld
jne
pop
cmpsb
mov
cli
and
ret
popl
cmpsl
out
add
adc
rcll
sub
cmp
push
insb
pushf
test
pop
mov
mov
ss
loope
dec
push
inc
mov
je
sbb
aas
push
push
xchg
push
push
mov
inc
mov
or
mov
stc
mov
pop
pop
ret
sbb
cmp
pop
mov
mov
and
inc
test
das
and
adc
or
pop
movsl
xor
fwait
lock
adc
adc
sub
add
insl
mov
jbe
popa
fistl
js
inc
jp
pop
les
ret
nop
and
inc
aaa
jp
aaa
push
loop
jb
and
sbb
paddusw
push
inc
xchg
xrelease
xor
addb
sbb
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
mov
lea
cmp
ja
fcmovb
jmp
or
div
loopne
sbb
adc
and
sbb
and
lret
mov
push
xor
test
and
and
cltd
xchg
dec
popa
rolb
lock
cmp
jb
or
ds
xor
or
outsl
ja
pop
add
cmp
lea
ret
or
push
out
mov
hlt
es
hlt
add
js
out
gs
mov
test
out
cld
incl
loopne
dec
orl
test
je
std
ss
or
call
je
sti
clts
mov
mov
add
jne
xor
dec
mov
and
inc
loope
or
mov
mov
dec
data16
sbb
mov
xchg
push
adc
inc
fwait
push
adc
or
xorb
adc
dec
cmp
add
and
inc
inc
mov
fstps
dec
ret
xor
cs
cli
xorb
sbb
xor
cs
jb
inc
sbb
sub
out
ficoms
imul
mov
fucomp
cwtl
je
adc
push
fdivs
add
and
ds
inc
push
and
pop
pop
cmp
dec
mov
mov
dec
outsl
jmp
dec
xorb
sbb
jns
jnp
jb
pushf
or
push
push
sets
mov
mov
in
insl
rolb
add
xchg
inc
and
shll
lods
mov
repnz
push
push
push
cmp
inc
pop
pop
pusha
xchg
cmp
enter
or
data16
add
pop
adc
dec
cmp
xor
es
jge
addr16
mov
dec
add
aaa
pusha
inc
mov
mov
add
add
sub
push
daa
pop
cld
and
push
sub
lea
push
push
adc
enter
div
mov
cld
add
pop
inc
sti
push
fs
and
bound
ret
mov
daa
ret
in
orb
and
pop
xchg
shll
or
cmp
stos
mov
fmuls
sub
imul
or
mov
loopne
cld
adc
test
xchg
iret
cld
xor
dec
mov
add
jl
lods
call
cmp
adc
and
in
adc
test
mov
mov
add
std
aad
or
cmp
jbe
push
add
mov
xchg
in
mov
and
out
lods
push
pop
cmp
cmp
xor
xor
and
loopne
aaa
cmpsl
push
push
pop
jae
pop
mov
and
push
add
mov
test
add
or
cmp
or
mov
mov
fstps
push
insb
mov
jmp
scas
dec
jl
je
push
daa
add
pop
push
fnstenv
pusha
push
inc
dec
jnp
cmpsl
sbb
adc
or
or
mov
fs
lret
adc
test
nop
add
mov
pop
and
movl
jg
fdivrl
sub
or
dec
inc
cld
mov
mov
push
in
lahf
inc
pushf
or
and
sub
mov
push
ja
sbb
test
push
and
push
notl
sub
and
pop
pop
push
sub
gs
ja
inc
pop
push
in
push
int3
push
inc
add
add
push
or
push
in
out
xchg
js
push
cmpsb
in
js
test
add
xor
mov
rorb
mov
movsb
or
push
gs
gs
cmpsl
fbld
or
adc
jnp
divl
adc
imul
std
and
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
adc
outsb
popa
lea
gs
outsl
inc
arpl
or
mov
push
ret
or
xor
pushl
pop
xor
outsl
insl
bound
outsl
js
imul
sti
das
hlt
outsl
ja
nop
dec
pop
push
andps
outsb
dec
inc
xor
cmp
ja
je
dec
add
pusha
sbb
subps
fs
inc
push
push
dec
dec
es
sbb
repz
dec
dec
repz
push
sbb
pushf
cwtl
xchg
sbb
nop
mov
test
sbb
jo
push
sbb
fs
sbb
pop
pop
push
sbb
push
dec
dec
fs
inc
push
inc
inc
cmp
inc
push
sbb
xor
inc
push
sbb
and
sbb
sbb
adc
fs
inc
adc
enter
add
repnz
and
lock
in
call
enter
aam
enter
int3
enter
or
sarb
incl
sbb
repnz
sbb
repnz
repnz
inc
push
repnz
inc
push
sbb
repnz
push
sbb
rorb
sbb
leave
and
nop
inc
push
int3
enter
sbb
jg
hlt
or
enter
mov
test
enter
mov
or
xchg
nop
and
test
jl
je
xor
and
push
fs
pop
enter
pop
push
push
and
inc
orl
inc
cmp
xor
xor
and
sub
xor
and
and
and
add
sbb
leave
add
cld
clc
hlt
sbb
lock
call
in
fcoml
aam
cmpl
int3
enter
or
enter
cmp
enter
dec
inc
enter
push
push
xor
orl
sub
orl
and
sbb
or
enter
or
enter
add
nop
inc
push
jns
cld
clc
hlt
inc
push
sbb
call
in
xor
aam
mov
or
shlb
or
mov
xor
mov
test
or
enter
cwtl
xor
and
and
and
je
or
enter
fs
enter
pop
xor
and
and
and
xor
or
enter
and
or
prefetcht2
fs
inc
adc
or
fs
push
or
enter
cmc
cld
clc
hlt
and
call
in
or
enter
int3
xor
and
and
and
test
or
enter
cwtl
or
enter
mov
enter
test
jl
je
orl
insb
push
fs
pop
pop
or
enter
dec
xor
and
and
and
sub
and
or
enter
or
sub
nop
inc
push
hlt
hlt
hlt
nop
inc
push
sbb
hlt
hlt
cld
mov
fs
hlt
movzwl
shl
or
inc
sbb
in
daa
jo
nop
les
or
fimuls
fs
or
jne
sbb
mov
xchg
rol
pop
ret
or
push
movswl
push
mull
das
add
mov
outsl
pop
daa
mov
shll
fdivrs
inc
add
sub
out
test
pop
pop
faddl
mov
in
xor
fsubs
push
lcall
sbb
and
loopne
push
jmp
cmp
sbb
mov
scas
cmpsb
push
stos
mov
add
stc
sar
movb
popa
xchg
or
mov
dec
fcoms
loopne
inc
mov
rorb
push
fadds
bound
xchg
and
ss
jo
pop
ficoms
jl
and
testb
hlt
aas
inc
pop
test
lcall
add
lods
mov
gs
mov
and
push
dec
inc
inc
dec
add
outsl
insl
out
outsl
jbe
pop
push
and
dec
pop
inc
push
dec
pop
mov
pop
pushf
and
rorl
push
pop
sub
push
inc
inc
mov
dec
dec
dec
inc
push
das
mull
mov
bound
and
into
jl
dec
xorb
cs
or
mov
dec
pop
push
dec
or
mov
inc
push
inc
mov
or
and
sti
jb
imul
addl
je
inc
inc
pop
add
dec
add
pop
mov
xchg
in
gs
insl
test
or
iret
loope
das
clc
lock
or
inc
pop
inc
inc
push
sub
and
dec
push
popa
add
fcomps
push
nop
or
xchg
arpl
jns
das
ss
jns
gs
imul
lock
pop
in
adc
push
and
fs
bound
das
adc
push
dec
andl
out
xchg
mov
push
in
loope
notb
gs
xorl
jg
shlb
jae
lea
dec
lock
xor
or
outsb
rep
insb
pop
mov
pushl
mov
add
arpl
fs
mov
pop
jmp
fsubs
add
dec
sbb
xchg
and
ret
scas
sub
adc
add
fistpll
jbe
unpcklps
jo
je
inc
jb
notb
jo
adc
stos
shrl
inc
cmp
test
lock
jbe
scas
xchg
aas
sarl
orb
jnp
mov
arpl
xor
pop
push
testb
movsb
popf
testl
fs
inc
nop
mov
test
sbb
jo
push
sbb
cmp
mov
testl
idivl
push
or
xchg
sbb
add
mov
ret
test
mov
enter
hlt
xor
and
and
and
std
orl
jmp
loope
xor
and
jecxz
xor
and
mov
or
aam
or
insb
nop
ljmp
and
and
and
orl
xlat
fcomp
fimull
enter
fnsave
enter
ffreep
enter
rol
and
movb
leave
lret
enter
int
enter
iret
mov
and
and
mov
or
enter
mov
mov
and
and
and
cmpsb
orl
cmpsl
test
stos
or
enter
lods
mov
imul
imul
push
mov
xchg
xchg
or
push
or
call
jo
adc
push
and
mov
ret
pusha
or
push
and
fsubrs
pop
push
aas
adc
jns
pushf
pop
imul
dec
gs
jo
xchg
mov
fists
jg
or
or
dec
jne
dec
dec
gs
outsl
jb
inc
leave
addl
jae
pop
and
fucomp
inc
dec
outsb
mov
scas
imul
popa
add
aas
scas
cmc
pop
fiaddl
xlat
ret
popa
dec
scas
jo
cmp
dec
jo
int3
imul
shl
or
or
pusha
sbbl
outsb
insb
sub
and
imul
std
imul
nop
scas
addb
push
popa
outsb
or
jns
fcomp
ds
push
dec
jbe
insb
outsl
ja
push
leave
cmp
insl
xor
add
pop
dec
and
gs
scas
mov
insb
call
mov
dec
jo
in
mov
popa
add
insb
jle
mov
jnp
gs
outsb
cmp
scas
xor
xor
xchg
sete
mov
scas
in
xchg
or
in
movsbl
outsl
imul
pop
and
or
push
jbe,pt
or
inc
popa
jae
push
repnz
cs
movsb
gs
adc
push
add
sbb
and
jae
sbb
add
insb
popa
sbb
adc
pusha
push
mulb
jecxz
jb
insb
inc
nop
scas
popl
xchg
mov
mov
add
jno
roll
ret
add
scas
insb
pop
inc
xor
sbb
mov
lds
fs
mov
inc
addb
fs
rclb
aas
cmp
pusha
mov
movsb
sub
mov
add
nop
mov
jmp
loopne
or
test
leave
sbb
cmp
cmp
jmp
gs
test
and
jae
adc
mov
xor
xchg
dec
setb
sub
out
je
push
push
inc
or
add
and
or
sahf
hlt
pavgb
int3
mov
push
push
push
mov
mov
orl
mov
int
cmp
loopne
cmpsl
andl
xor
bound
je
shll
add
adc
xchg
adc
sbb
push
loopne
sbb
adc
je
je
and
or
add
adcb
into
pop
and
dec
scas
imul
and
stos
push
f2xm1
lock
ret
lods
outsb
arpl
cmp
push
rolb
fldcw
ret
sub
shr
div
push
mov
add
das
ficomps
stos
mov
push
sub
pop
out
pop
ret
dec
mov
push
aas
mov
sub
add
hlt
arpl
leave
inc
push
add
mov
and
aaa
popl
mov
jne
jae
push
mov
jle
push
movb
lea
pop
aam
cmp
movsb
in
adc
inc
inc
and
enter
in
rcll
add
loop
cmp
xor
fsubr
insl
aaa
dec
add
add
mov
movsl
or
test
mov
inc
inc
dec
leave
jmp
imul
add
dec
or
in
or
dec
and
mov
jns
nop
mov
leave
repz
je
movzbl
pop
push
call
popa
add
xor
mov
std
add
lahf
jmp
push
js
repz
jne
aam
frstor
lcall
mov
sub
or
pop
add
jg
fnstsw
aas
out
and
sti
je
loope
add
fwait
mov
or
lcall
fmuls
jbe
lock
movb
push
imul
dec
movl
lahf
mov
xchg
sbbb
int
ja
and
lret
in
push
push
aam
xor
jle
sbb
enter
pop
jo
add
mov
shl
cmpsl
fdivrl
loop
push
adc
adcb
add
shrl
lock
lods
add
repz
cmpb
jbe
adc
lcall
aaa
clc
imul
lret
inc
and
or
pop
pop
aas
imul
pop
aad
mov
push
push
push
dec
bound
aam
add
cli
mov
lret
test
push
push
cmp
jne
incl
mov
ret
in
jge
mov
jmp
sub
adc
inc
das
cmpsl
xchg
scas
mov
or
and
nop
shlb
clc
add
std
add
inc
mov
jnp
aas
popf
out
dec
shlb
cld
lcall
xor
into
mov
adc
xor
lods
and
inc
sti
mov
call
jbe
imul
xor
sbb
mov
add
sub
jb
sub
test
add
adc
jae
cmp
sub
rorb
push
decl
adc
or
jae
xor
clc
push
inc
dec
jne
repnz
or
jle
lock
jne
sarb
cld
jp
mov
inc
dec
test
ret
mov
shl
icebp
dec
inc
out
aas
inc
cmp
jb
sysret
mov
sbb
lcall
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
add
out
xor
push
outsl
cwtl
sub
and
arpl
xor
fldenv
and
jo
pop
call
mov
negl
aad
mov
jb
gs
fidivrs
stos
add
adcl
mov
fcoml
push
push
or
fildll
fistps
ret
add
add
sub
shr
add
rorl
fdivr
mov
cmpl
lods
push
sub
add
fstsw
sahf
jae
push
pop
lock
ffree
ffree
ffree
ffree
pop
aad
lcall
adc
frstor
push
or
loop
pop
loop
and
adc
je
cli
mov
mov
les
xlat
adc
mov
es
jb
cmp
mov
adc
sbb
or
inc
outsl
xor
jnp
sub
popa
or
xchg
fnsave
mov
add
add
xchg
cmp
cmp
das
adc
inc
in
sbb
sub
xchg
pop
xor
dec
mov
xchg
call
rcrb
sar
dec
mov
insb
cwtl
add
dec
dec
inc
sahf
cwtl
shlb
fs
lock
pop
insb
and
inc
ds
push
mov
repnz
jl
inc
xor
add
sbb
mov
pop
pop
dec
mov
js
push
cmp
jmp
je
mov
loopne
add
push
xor
pop
popf
push
xchg
sbb
jge
fldt
fadds
add
add
xchg
add
dec
ss
push
push
in
arpl
pop
addr16
xor
mov
inc
cwtl
cwtl
add
ret
inc
sbb
lahf
or
cmp
sub
xchg
lods
bound
test
xchg
loop
adc
jmp
and
cmp
rorb
add
pop
sub
loopne
iret
clc
or
imul
rorb
xlat
ja
cmc
and
ja
es
cmc
mov
push
adc
pop
pop
aaa
imul
test
push
lgs
mov
and
outsl
push
aam
add
ss
jae
mov
adc
jle
test
mov
imul
pushf
add
mov
pop
cmp
cmp
ficoml
fldenv
inc
dec
sub
add
jae
push
add
cld
mulb
push
mov
iret
adc
add
popf
jge
sbb
push
clc
pushl
sbb
repz
sahf
cmp
push
enter
mov
imul
mov
jmp
adc
xor
loope
push
xlat
iret
pushf
ss
push
hlt
pop
adc
pop
add
rolb
cltd
rorb
outsl
pop
push
mov
ret
mov
add
push
call
xor
add
inc
lcall
inc
cmp
cld
sub
sbb
rorl
add
xlat
popf
jne
dec
lock
sbb
out
ret
cmc
in
leave
or
mov
xchg
add
cs
mov
dec
xor
or
pop
repnz
inc
iret
jmp
inc
cmpb
adc
popa
pop
insl
aas
mov
pop
cmp
jbe
or
shr
addl
lock
mov
fists
add
lret
jle
or
es
pop
pop
jne
inc
cmp
cmp
and
cmpsl
es
adc
jl
mov
rcrb
negl
jmp
dec
loopne
mov
push
or
mov
pop
or
in
testl
add
mov
add
dec
popf
lods
adc
pop
mov
in
aaa
andb
loope
xchg
mov
push
icebp
mov
subb
sbb
in
jne
push
jg
out
and
aaa
mov
sub
push
push
movsb
push
push
sahf
fists
and
sub
cld
jecxz
mov
in
xchg
mov
push
jno
nop
dec
scas
jae
call
repz
lahf
push
pop
hlt
clc
cld
dec
loope
mov
jne
inc
cld
imull
pop
fstl
hlt
inc
call
adc
rcrl
cmp
outsl
les
lock
dec
arpl
ret
out
jg
inc
inc
mov
sub
movzwl
rol
adc
add
shr
add
xchg
fucomip
push
clc
add
pop
call
push
add
out
jo
jp
jge
xlat
push
aas
cltd
push
or
call
pusha
fsubr
push
lock
outsl
popa
jo
dec
shlb
cltd
sbb
in
lock
mov
mov
pop
das
es
jne
lea
es
data16
push
sub
add
push
lahf
not
mov
cltd
lret
lahf
add
rep
movsb
pop
pop
ret
mov
sub
dec
imul
test
sub
pop
lret
jbe
and
jmp
lea
sub
fdivrs
sub
pop
adc
es
cltd
iret
push
ds
shr
add
xor
std
lahf
xlat
xor
repz
mov
mov
sub
and
jl
push
insl
pop
cmp
cli
ljmp
or
mov
or
mov
flds
pop
pop
jmp
int
divb
orb
inc
mov
jne
scas
or
adc
inc
inc
aas
dec
jo
jae,pt
inc
dec
je
mov
fistps
sub
jbe
sbb
lods
aas
pop
pop
aaa
mov
mov
xchg
jns
shll
pop
mov
jo
cmpsl
hlt
sub
mov
xchg
enter
pop
fisttpll
dec
or
sbb
mov
paddq
hlt
ret
lea
jbe
xchg
and
cmp
cmp
jbe
cmp
jmp
mov
pop
pop
cmp
fldpi
adcb
sub
jl
out
movb
les
and
or
xchg
cmp
mov
aam
cmp
je
mov
push
and
pop
mov
add
xchg
push
push
xchg
push
ljmp
loop
clc
adc
mov
dec
stos
popa
dec
mov
push
or
dec
fisubrl
jmp
sub
mov
sub
cmp
js
test
inc
out
ljmp
fsubrl
jne
adc
sub
and
lods
jmp
imul
fwait
mov
pop
sub
sub
mov
pop
cli
sarl
ret
das
clc
cli
sti
lds
fildl
sub
jae
shrl
out
into
movsb
xchg
pop
mov
rep
sbb
orl
leave
sarb
push
xchg
cmpsb
mov
pop
pop
mov
cmp
cld
add
jb
cmp
ja
imul
mov
add
sub
mov
pop
dec
rcrb
cmp
lea
or
jl
adc
mov
loope
ret
je
xchg
ret
and
outsb
or
adc
push
pop
js
std
iret
pop
jne
lea
mov
fwait
push
add
and
repz
jle
mov
mov
push
pop
push
aas
das
pop
clc
es
ss
imul
es
incl
dec
xor
cmp
hlt
mov
mov
fsubrs
shrl
cmpsb
adc
sbbl
lock
addl
repnz
mov
iret
pop
adc
sub
push
out
int3
fldt
jmp
imul
cmp
imul
sbbl
cmp
jne
nop
push
ret
sbb
add
lock
mov
aad
or
jmp
xor
inc
out
xorps
inc
mov
cmp
into
in
out
pusha
jmp
or
add
aas
and
testl
pop
jns
mov
ja
insl
sbb
outsl
mov
jle
cmp
ja
or
and
jecxz
dec
mov
stc
cltd
pop
ds
leave
test
rorl
out
aam
lods
push
stos
mov
popf
or
jle
negl
mov
or
add
adc
pop
dec
je
dec
jge
mov
mov
test
cmp
jbe
mov
xchg
and
shrb
mov
pop
mov
push
mov
repnz
iret
dec
popf
loopne
xlat
mov
xor
and
pop
adc
lret
lods
nop
inc
push
jl,pt
dec
mov
daa
dec
xlat
ljmp
cmpsb
push
sub
mov
inc
fstl
in
inc
aad
dec
cli
jg
xchg
xchg
pop
sbb
jbe
jg
jbe
jle
fwait
jl
shll
movsb
stos
nop
ss
pop
in
xchg
rclb
arpl
mov
jge
sbb
clc
dec
cld
lea
lea
inc
out
or
fiadds
std
add
inc
jmp
add
xchg
and
add
push
lea
out
mov
pop
push
lea
push
mov
adc
push
xor
stos
or
stos
incl
mov
push
mov
neg
jmp
or
leave
jp
mov
xchg
push
mov
jg
gs
aas
ljmp
jns
or
jg
dec
mov
stos
cmp
inc
test
icebp
jne
pop
pop
xchg
aam
in
mov
xchg
fwait
sti
push
xchg
mov
jo
and
nop
mov
push
xchg
repnz
sbbb
add
jge
pop
hlt
mov
mov
cs
daa
jmp
adc
jb
rorb
xor
mov
movzwl
sub
ss
sbb
mov
jnp
pushf
sahf
or
repnz
sub
mov
push
add
ja
fdivrl
cli
fimuls
mov
add
lea
test
insb
or
or
rorl
dec
repz
popf
jmp
pop
lea
dec
add
and
inc
dec
lods
or
dec
xchg
jge
inc
aad
lret
jno,pt
ret
std
mov
aam
adc
or
sbb
sbb
dec
stos
pop
jg
cld
xlat
je
mov
stos
neg
sbb
stos
jmp
inc
jnp
out
fildl
je
stos
loop
push
adc
push
pop
inc
push
lods
paddusb
dec
test
push
in
adc
inc
out
dec
sbb
loopne
mov
mov
sub
add
leave
mov
push
cli
rorl
dec
mov
insl
add
fistpll
add
std
addl
add
je
mov
dec
sbb
div
mov
inc
test
jne
sbb
dec
add
inc
sbb
call
jns
sti
add
je
inc
jne
pop
dec
jne
nop
loope
test
and
inc
add
unpckhps
push
mov
decb
pushf
fwait
sbb
sbb
iret
push
testl
and
add
pop
pop
sbb
add
fcomi
or
dec
pop
pop
inc
loop
push
mov
test
adc
add
sub
xor
and
and
adc
and
sub
inc
sub
out
and
or
sub
sbb
mov
es
sub
mov
cmp
xor
sub
xor
fldl2t
fs
mov
pop
cmp
fs
lret
xchg
xor
mov
ds
mov
and
jne
testw
loopne
mov
dec
cmpl
add
movb
lods
fldt
xchg
adc
mov
cmp
adc
out
fnstenv
push
adc
mov
cld
rcr
scas
scas
out
pop
or
jge
fwait
mov
testb
je
fidivl
in
lcall
jne
lea
mov
inc
sub
xchg
shr
and
jle
clc
pcmpgtd
jmp
shrb
jns
popl
pop
fwait
mov
jge
pushf
fnstcw
call
jae
cmpb
jb
movb
js
decb
sbb
jmp
ja
jmp
data16
popa
xor
enter
cmp
sbb
je
notl
call
shr
mov
add
xchg
out
pusha
xchg
xor
adc
std
data16
rcr
rorl
je
xchg
bswap
lock
pop
fcmovbe
or
or
pop
jle
add
adc
push
inc
sub
jl
sbb
jae
dec
add
jp
inc
loopne
push
in
insl
or
add
sub
js
or
mov
mov
setnp
pop
sub
andb
push
popf
and
jne
dec
sub
cmp
hlt
cmp
and
cmp
jg
inc
ljmp
enter
cmpb
cmp
sbb
divl
pop
jmp
mov
mov
iret
inc
push
push
fcomip
add
popa
inc
cmp
mov
fld
daa
xor
fwait
icebp
rcrl
inc
jg
pop
mov
cmp
lods
or
icebp
es
in
push
insl
test
popa
jne
inc
sbb
idivl
icebp
je
and
jne
inc
push
sub
sbb
ja
jne
mov
sahf
add
lds
add
loopne
ljmp
aas
jmp
fstpt
and
rol
imul
add
push
insl
and
push
int3
roll
adc
add
add
jae
fimull
into
shr
inc
jmp
aaa
mov
negl
loopne
lahf
or
imul
pop
cmp
push
nop
jb
add
sahf
in
inc
inc
rorl
sbb
aad
push
or
xchg
push
shr
cmpsb
lods
jmp
or
push
enter
je
test
addr16
mov
test
xor
lahf
sbb
aam
mov
sub
fstpl
fwait
adc
jnp
push
imul
mov
fcmovnb
fldl
inc
sbbb
adc
jl
divb
jmp
adc
adc
push
and
inc
leave
add
or
mov
sbb
or
cmp
inc
stc
inc
pop
sbb
cmp
addr16
add
imul
repnz
cmp
jle
xchg
fildl
xadd
cld
fstpl
fwait
cmpsb
xchg
insb
pop
loopne
pop
pushf
push
lret
movsb
dec
fists
dec
cmp
mov
loope
inc
iret
xlat
xchg
lock
sbb
inc
ljmp
sbb
cmp
adc
jnp
jp
sub
mov
pop
fildl
je
mov
popa
push
cmp
adc
and
xlat
and
ja
ja
gs
enter
sarl
add
and
fldenv
mov
cli
xor
div
jmp
add
xchg
icebp
or
dec
scas
cmp
push
pop
mov
jecxz
std
mov
inc
icebp
mov
jg
add
lea
mov
jb
ja
and
push
jb
or
jb
sti
insb
sti
cmp
pop
push
sti
pop
inc
ja
adc
push
orb
pushl
add
inc
dec
jne
sub
dec
mov
aas
inc
mov
imul
or
repnz
aas
pusha
ds
add
popa
mov
adc
ret
or
inc
and
cmpsl
loop
clc
mov
pop
cmpsl
in
mov
pop
cmpsl
loop
movsb
mov
lea
dec
mov
call
jg
mov
and
clc
hlt
or
lock
movsb
aas
xchg
outsl
sahf
pop
and
dec
inc
cmovns
loope
pushl
stc
mov
add
jl
addl
add
fisubs
je
lods
mov
xchg
mov
add
decw
adcl
fs
fisubrl
adc
pop
jnp
push
in
xor
loopne
cmp
out
sub
push
notl
fmul
mov
lahf
fstpt
ss
mov
insl
pusha
jecxz
in
notl
adc
sub
fildll
sub
das
sbb
ss
into
cmc
and
stc
popa
lods
adc
add
xchg
jbe
pop
aam
cmpsb
scas
add
xchg
sub
clc
mov
out
stc
xchg
inc
rorl
mov
push
or
sub
pop
and
int3
jp
negl
push
cmp
push
adc
or
pop
mov
dec
jmp
cmpsb
lock
xchg
and
ret
mov
pusha
add
cmp
lds
hlt
rcr
sbb
push
push
loopne
and
lea
mov
xor
ljmp
jnp
sub
aas
sbb
add
add
loopne
mov
jns
xchg
cmp
mov
mov
fwait
dec
and
into
aam
pop
aaa
clc
addr16
and
mov
push
cmp
je
icebp
inc
ffree
push
inc
or
out
push
cmpb
call
dec
mov
fwait
jge
or
lea
or
xchg
repnz
nop
sub
out
inc
in
add
jecxz
mov
jge
call
fsts
jnp
lret
lea
test
ficompl
lret
sub
inc
jmp
adc
mov
mov
jg
dec
mov
cmp
add
pop
jge
mov
insb
lea
push
mov
push
xor
inc
je
fimull
js
or
int3
inc
mov
test
loop
orl
push
add
sub
loope
mov
add
add
test
xor
pop
cmpl
dec
adc
lcall
pop
sub
ret
pop
and
cltd
aad
dec
fsubrs
lds
add
fldt
fmul
ret
or
mov
outsl
clc
dec
jg
int
fsubr
or
ret
call
loope
sbb
push
inc
cmpb
jne
push
or
or
int
nop
or
out
lock
add
add
pop
fs
bsf
xor
in
or
mov
or
cmp
push
or
pop
incl
ja
adc
jecxz
movsb
push
sbb
cmp
imul
bt
pop
jmp
mov
mov
and
sub
xchg
jns
mov
mov
scas
lahf
clc
xlat
lcall
or
cmp
jne
mov
xor
aas
sahf
mov
xchg
fisubs
push
loopne
add
jmp
xchg
push
in
into
or
or
jnp
or
or
or
push
push
add
or
or
or
orb
insb
fwait
ja
cmc
popf
pop
dec
sahf
lahf
add
xor
imul
leave
mov
shll
pop
or
add
push
sbb
inc
imul
filds
ret
mov
mov
adc
inc
mov
ret
dec
push
lea
and
inc
repnz
and
sbb
hlt
dec
adc
mov
mov
in
lock
mov
xor
xchg
xorb
sub
testl
jg
aad
or
mov
pushf
mov
fstps
btc
adc
test
cwtl
es
pop
enter
and
sarb
cmp
lods
loope
jnp
sahf
mov
sub
or
push
call
jl
push
add
adc
das
mov
arpl
add
push
jmp
or
idivl
pusha
jmp
cmpb
dec
cmp
xorb
adc
and
movsb
sub
mov
stc
mov
add
adc
cmp
cmp
xor
mov
xor
mov
popa
mov
ljmp
outsl
dec
push
mov
jmp
movsl
jo
mov
or
jle
add
or
adc
repz
sbb
scas
pop
inc
call
sub
and
orb
and
add
in
loopne
insb
push
call
cmp
mov
ljmp
fs
and
test
in
test
enter
jns
mov
movsb
cmp
inc
test
add
outsl
inc
lods
dec
rcr
xchg
cltd
pushf
lea
xor
push
adc
xchg
stos
add
popa
sti
out
ret
mov
adc
adc
sub
push
call
sub
lods
into
jge
mov
or
cmpb
sub
js
mov
mov
jmp
cmp
push
in
sbb
push
test
clc
jmp
out
mov
loopew
in
sub
mov
sub
mov
or
adc
jnp
popa
push
inc
mov
push
rorl
popa
fcomp
add
push
test
in
cli
and
inc
dec
das
push
dec
adc
in
adc
add
push
loope
ret
lods
xchg
rcrb
sahf
push
sub
sbb
jne
or
jo
jecxz
mov
adc
mov
adc
adc
into
lea
imul
shlb
xchg
and
pop
pop
fisttpll
cmp
jg
xor
cmp
je
mov
pusha
jg
jno
and
int
mov
scas
aam
mov
add
sub
cmp
loop
filds
fdivrp
xor
popa
push
pop
lahf
ljmp
movl
shrb
jae
push
jb
jo
or
sbb
pop
pushf
adc
ret
add
andb
push
repnz
fsubp
mull
ja
arpl
jp
jo
jecxz
sbb
or
loopne
inc
or
daa
push
sub
mov
add
mov
repnz
test
jnp
js
popa
inc
adc
das
ret
jno
mov
pop
loope
loop
fwait
pop
jl
pop
adc
incl
in
cmp
jne
incl
sbb
mov
add
mov
jmp
sub
je
dec
je
sub
sub
sub
je
jmp
mov
jmp
push
push
push
mov
mov
jg
jmp
inc
mov
jle
fadd
xchg
mov
add
arpl
in
mov
cmp
lea
jg
jl
pop
lock
call
test
test
js
sub
test
shl
subl
jmp
pop
js
and
inc
jne
in
sbb
rcrb
jmp
jne
cmp
jg
cli
adc
sbb
lahf
nop
cmpsl
cltd
xor
sub
add
idiv
push
std
mov
stc
imul
add
js
add
jp
jne
adc
pop
jge
ds
cld
gs
jns
xor
add
gs
push
inc
test
sbb
sbb
sbb
loope
test
mov
decb
xor
inc
divb
andl
ds
jnp
jne
cmp
sub
mov
in
lea
jne
scas
insb
adc
inc
push
movsl
dec
ss
ljmp
dec
sub
or
nop
cmp
jmp
or
pusha
add
mov
loopne
sub
or
ljmp
inc
pop
jmp
adc
xchg
sub
jb
and
mov
push
mov
and
in
xchg
dec
movsb
hlt
adc
ss
aaa
rorb
sbb
jo
pop
enter
pop
pop
mov
mov
ret
jo
jge
add
push
push
pushf
repz
sub
push
fstps
add
stos
xchg
fmull
add
std
mov
cmpb
jle
and
fs
jne
sub
and
add
or
sbb
imul
adc
push
out
jl
push
xchg
mov
inc
xchg
cmp
mov
fwait
mov
add
adc
out
out
imul
or
sarl
movb
fstpt
fsubrl
fisubrs
sbb
test
test
dec
xorb
sub
dec
cmpb
push
out
dec
sub
lds
add
push
xor
and
test
xor
out
push
les
add
lock
mov
hlt
fildl
dec
and
mov
jge
adc
and
sbb
adcl
sub
popa
adc
xchg
xor
mov
cmp
lods
push
or
lods
pop
mov
xchg
and
add
outsl
mov
or
mov
je
orl
add
add
pop
inc
leave
and
in
add
sbb
test
cmp
xor
sahf
cmp
dec
fldl
or
jne,pt
movsl
rcll
movsb
add
out
push
or
add
pop
mov
lcall
jno
in
cmpsl
adc
xchg
daa
mov
pop
jmp
arpl
xchg
into
xor
roll
or
cmp
mov
addr16
fisubrl
add
jo
call
negb
adc
lock
adc
or
add
mov
addr16
daa
fnstsw
in
pop
push
mov
stos
fstpl
fwait
jmp
sbb
adc
and
out
les
add
pop
add
adc
add
push
add
sub
jb
or
sub
lret
xchg
xor
xchg
or
xorl
movsl
push
les
adc
xchg
cmp
inc
jge
sbb
popa
sub
sbbb
pop
push
sub
add
jne
mov
dec
in
popa
xchg
call
cmp
adc
je
xor
adc
adc
movsl
cld
push
push
outsl
pop
dec
push
add
fimuls
and
in
ljmp
or
push
test
shl
dec
push
lea
dec
lret
jno
xchg
cltd
pusha
adc
flds
cmp
movl
jnp
sti
or
test
js
adc
xor
pavgb
or
xchg
push
in
jb
add
pop
xchg
faddl
jbe
dec
dec
dec
call
loopne
cmp
or
aas
dec
or
in
scas
inc
je
mov
aas
pop
add
push
xor
sti
loopne
out
aaa
push
jge
je
xchg
cmp
insb
xor
inc
jge
adc
sub
dec
ror
mov
inc
push
scas
in
popa
push
xor
mov
pop
inc
jnp
mov
je
jg
add
enter
xor
cmp
xchg
rorb
or
or
popa
or
aam
fcmovu
rolb
hlt
ja
adcl
pop
push
loopne
add
lahf
fmull
mov
xor
cmp
hlt
push
push
mov
sahf
lret
fs
pop
in
mov
repz
sbb
cs
and
clc
mov
mov
add
inc
add
pushf
cmc
scas
iret
or
repz
dec
js
mov
jmp
mov
sub
je
sub
je
scas
ret
sbb
pop
arpl
sub
mov
mov
pop
das
push
sbb
sbb
mov
and
icebp
shlb
mov
sub
lods
add
jle
mov
mov
dec
sub
dec
xor
out
jmp
dec
movsb
add
or
jb
add
jmp
lcall
xor
pop
je
jne
inc
sbb
xor
pusha
shlb
or
adc
test
fs
mov
pop
add
addr16
adc
add
sub
or
imul
movb
imul
test
sbb
or
cmc
pop
test
addr16
fstps
adc
sbb
xchg
shlb
out
pop
mov
push
dec
test
dec
cmp
and
push
fcomps
xor
and
xor
jmp
sub
jnp
dec
mov
xchg
nop
mov
inc
push
sbb
loopne
repz
add
out
ret
btr
je
inc
push
inc
sub
enter
and
fdivs
and
jae
jmp
loope
movb
bound
paddb
cmp
jno
mov
cld
pop
aam
xchg
out
and
sbb
lods
or
and
cltd
lcall
mov
mov
cmp
mov
iret
into
int3
sahf
clc
push
lea
sub
xor
sbb
cs
ret
pop
or
cmp
loopne
hlt
and
rorl
js
testb
sbb
dec
lods
sub
jecxz
dec
mov
adc
hlt
aad
in
ds
mov
cmp
xor
add
je
sub
push
movsl
sbb
jno
insb
inc
xchg
out
cmp
or
sub
xor
ds
add
inc
add
ret
icebp
sub
jo
mov
inc
leave
sub
fiaddl
lret
mov
fcoms
aad
lea
sbb
fst
sti
jno
mov
test
push
stos
pusha
test
in
sarl
add
test
addl
gs
inc
mov
push
popa
lds
adc
xchg
pop
adcb
ret
cmpsl
and
hlt
mov
push
popl
into
rorb
push
test
or
adc
cmc
sub
into
push
xor
rorb
or
cmp
sbb
mov
jb
je
mov
sbb
pop
sbb
mov
xchg
shrl
xor
jo
hlt
xchg
jecxz
pop
pop
inc
movsb
push
or
popa
andb
push
loopne
dec
adc
idivb
ljmp
shlb
movsb
jmp
ljmp
or
pusha
ds
jmp
jae
pop
adc
outsb
push
dec
loopne
in
push
sbb
xor
pop
xchg
mov
or
push
mov
enter
adc
imul
in
or
sahf
ljmp
aam
fadd
or
jl
js
inc
cmp
je
mov
pop
rcr
add
shll
out
outsl
mov
movsb
insl
add
loop
and
mov
lea
adc
dec
mov
scas
iret
das
pushf
fcmovnu
shrl
sbb
fistpl
pop
repnz
inc
push
cmp
je
jmp
xor
xor
enter
sub
jmp
mov
jg
and
add
mov
add
sub
pop
or
or
push
push
xchg
mov
add
adc
add
adc
add
enter
mov
lods
enter
push
mov
adc
mov
aad
inc
mov
xchg
nop
jae
or
or
and
test
jge
mov
ret
sbb
adc
ja
pop
xchg
xchg
fmul
pop
lods
fs
decb
add
daa
adc
mov
xorl
imul
inc
jnp
jae
or
es
xchg
enter
shrb
loopne
cltd
xchg
cmp
popf
jl
or
push
outsl
outsl
mov
flds
jmp
sub
cltd
mov
mov
sbb
xchg
add
xchg
or
daa
mov
ja
inc
sub
xchg
and
push
sbb
sub
and
std
cli
jge
aas
rolb
or
sbb
and
jnp
mov
cbtw
pop
adc
ret
add
lods
fs
es
lock
lock
imul
xor
loop,pn
int3
push
push
and
mov
pop
add
fsubr
scas
xchg
and
scas
js
sbb
jl
rorl
movsb
sub
insb
cmp
adc
or
xor
xchg
adc
push
or
lods
jmp
out
test
jecxz
rolb
out
test
in
shlb
pop
in
ficoms
mov
cmp
inc
or
adc
adc
fcmovne
ret
inc
inc
add
addb
add
adc
adc
xor
adc
adc
push
popa
or
inc
mov
das
rorl
push
imul
push
pushf
call
icebp
or
das
add
sahf
bound
repz
sub
ret
mov
ss
adc
outsl
rorl
mov
jl
inc
out
mov
pcmpeqw
cmp
add
in
fucomip
clc
jne
adc
add
leave
jnp
daa
mov
jecxz
je
cmpsl
or
ss
pop
push
xorb
jnp
int
xchg
xchg
outsl
nop
inc
jnp
lock
xchg
xchg
dec
push
and
sbb
shlb
pusha
fimuls
pop
mov
jno
and
cmp
cli
fstpt
dec
mov
inc
cmpsb
xchg
ds
loope
mov
adc
mov
cmpb
or
adc
add
sarb
adc
testl
sti
sbb
mov
and
mov
sub
rcrb
and
or
inc
testb
movl
xchg
mov
add
and
jge
mov
pcmpgtw
fnstenv
xor
cmp
daa
movsb
mov
add
ja
adc
or
fidivrs
mov
das
enter
adc
inc
pop
jg
mov
scas
cld
fbld
sub
push
add
and
arpl
mov
inc
faddl
push
xchg
daa
rorb
lds
adcb
add
icebp
and
cs
push
mov
xchg
mov
push
lds
jge
xchg
test
jne
sbb
addr16
add
int3
or
xchg
pop
aam
and
inc
shlb
aas
push
aaa
test
jp
fildll
push
in
imul
sbb
dec
cmp
jg
or
fldcw
jmp
decl
add
lcall
popa
or
iret
es
scas
lea
in
jge
pop
mov
jnp
scas
pop
mov
inc
dec
gs
ss
daa
scas
nop
pop
sbb
das
pop
and
jbe
mov
shlb
jno
xchg
adc
jae
push
jmp
jae
sete
mov
jp
shlb
lock
es
inc
cmp
and
adc
stos
xchg
push
out
ret
fldcw
movsl
fwait
addr16
inc
inc
mov
pop
insl
insl
fadds
stc
insb
sub
in
jmp
pop
sbb
cli
mov
outsl
adc
adc
sbb
loopne
fldt
fdivrs
andb
inc
lahf
jge
add
das
cmp
std
adc
ljmp
adc
xchg
pop
add
jge
jb
adc
in
mov
aad
sub
lock
add
clc
cs
mov
inc
dec
jge
mov
push
push
pop
fisubrl
fdivrp
sub
arpl
add
add
inc
dec
ret
sub
mov
cmp
jbe
adc
adc
inc
movsl
add
adc
push
popa
adc
inc
daa
adc
cmc
adc
push
or
push
or
popa
pop
ljmp
je
mov
testb
inc
jne
leave
xchg
dec
add
ret
pusha
mov
dec
xor
push
les
and
movsl
xor
lods
scas
fs
aad
jnp
addr16
jns
sub
jge
in
push
lock
mov
clc
fwait
insb
xor
pop
cld
jg
mov
push
mov
sub
jb
inc
mov
inc
ret
push
sti
stos
sbb
jnp
es
adc
pop
push
sub
cmc
pop
jne
jnp
clc
sbb
pushf
jecxz
ja
pop
ret
sub
xchg
push
or
adc
add
scas
push
outsl
fs
dec
data16
not
push
add
mov
or
shr
ds
mov
adc
or
add
test
adc
mov
mov
or
push
cmp
jbe
fiaddl
mov
push
outsb
pop
lds
outsl
popa
mov
popa
lea
inc
iret
pop
jne
lea
and
push
inc
ss
xchg
cmpsl
scas
movsl
hlt
imul
loopne
cmp
cmpl
xchg
rorl
push
dec
ss
jne
jmp
push
dec
sti
ds
into
pop
hlt
shlb
adc
sub
pop
arpl
jecxz
dec
mov
add
sub
mov
jne
push
jns
daa
mov
mov
daa
loopne
popa
xchg
in
cld
lcall
push
xor
mov
ret
push
lock
cwtl
cmp
sbb
je
jo
pop
mov
add
das
inc
sbb
fimull
enter
sub
shlb
jns
repnz
mov
sbb
bswap
rcll
sbb
mov
pop
iret
mov
movsb
faddl
mov
push
in
and
pop
pop
mov
push
pop
fcomp
pushf
mov
mov
fldenv
sub
push
jns
rol
movsb
int3
inc
jl
sub
test
pop
mov
enter
enter
push
enter
enter
push
fs
ja
les
les
ret
rolb
shl
xor
mov
sar
aaa
cld
stos
rorb
nop
lods
sbbl
xor
pushf
nop
mov
lods
add
xor
push
add
fwait
or
lock
insl
add
fs
ja
mov
pop
jle
insl
pop
jo
jne
das
xchg
push
outsl
in
inc
dec
and
pop
sbb
cltd
fnsave
pop
push
sbb
cmp
fxsave
jns
sbb
fmuls
mull
inc
or
je
ss
jl
loopne
lea
adc
in
add
daa
and
leave
into
bound
mov
inc
in
or
adc
jge
ss
dec
lods
push
movl
push
arpl
add
les
jle
pop
and
push
xor
daa
inc
in
mov
out
clc
adc
lock
adc
outsl
lods
nop
jbe
loopne
adc
mov
and
jecxz
addr16
mov
inc
repnz
mov
push
clc
sbb
inc
or
jge
and
cmp
sub
pop
pusha
in
push
insb
rolb
movsl
lock
push
sub
dec
xor
in
js
outsb
lcall
ja
or
lret
xchg
add
sbb
jnp
ja
add
mov
ret
add
cmpl
xchg
push
mov
mov
aas
adc
popf
cs
sbb
mov
push
ret
jb
xchg
xchg
jl
cmc
adc
aam
mov
mov
rcrl
ret
lret
pop
or
cwtl
mov
insb
aam
aam
lret
into
aad
fisubs
mov
out
test
xchg
inc
ret
sub
sub
cmp
mov
sbb
lcall
xor
mov
xor
or
mov
lea
jmp
sbb
outsl
in
int3
push
js
and
daa
cmc
out
mov
or
pop
push
jo
pop
loopne
jp
add
imul
gs
cli
mov
push
jo
inc
js
addr16
rcrb
roll
mov
or
add
xchg
xor
xlat
push
cmp
mov
or
test
std
fistps
jne
inc
cmp
jne
imul
iret
and
test
pop
push
pusha
push
addb
add
seta
xor
sub
cmp
mov
testb
jmp
fsubr
add
fidivl
call
shrl
push
jne
mov
inc
or
bnd
inc
repnz
mov
cwtl
sbb
mov
movsb
icebp
pop
inc
jo
aas
int
subl
xor
and
inc
or
fs
fiaddl
push
jno
mov
outsl
sbb
lahf
add
or
inc
scas
popa
xchg
dec
inc
incl
push
insl
xlat
inc
adc
push
sarl
mov
pop
shrb
mov
fmul
aad
loopne
pop
es
in
sub
vmovupd
xchg
mov
cmp
fs
addr16
mov
push
in
cld
mov
mov
push
aaa
pop
xor
imul
adc
clc
lds
lds
cmp
je
push
into
pushf
mov
hlt
sbb
clc
int
aam
orb
testl
lea
and
mov
sbb
mov
add
mov
jns
cs
nop
push
test
cmp
orb
pop
jns
xchg
mov
xchg
sub
lds
xchg
ret
incl
mov
inc
dec
and
inc
decl
cmpl
mov
shr
scas
xor
sbb
or
sub
push
nop
pop
dec
lock
daa
incl
scas
add
jno
loop
cmp
cmp
lock
xor
jmp
inc
aad
push
jbe
pop
add
dec
adc
inc
dec
loopne
sbb
push
inc
ja
dec
or
or
inc
xor
je
data16
int
enter
or
les
pop
adc
inc
arpl
arpl
rclb
push
test
or
xchg
inc
push
test
pop
xchg
repnz
add
pop
pop
dec
and
jne
dec
roll
push
dec
adc
add
pusha
adcl
mov
shlb
sbb
leave
fst
push
dec
ret
lods
movsl
sub
scas
adcb
jg
fstl
sti
or
loop
jge
and
add
xchg
lods
dec
cmp
test
jmp
repz
inc
ret
add
or
cmp
lea
daa
mov
sbb
test
imul
push
add
pop
imul
push
hlt
dec
insb
push
in
dec
jo
xor
mov
aam
int
lcall
addb
cmpsb
mov
aad
lods
push
push
movsb
cmp
cs
sbb
xchg
sahf
mov
pop
push
test
lods
cmp
insb
outsb
fs
push
pop
iret
mov
xor
cmpsb
sarb
push
inc
cmp
fsubrl
push
push
es
pop
ret
mov
jbe
dec
enter
lods
das
xor
xorl
push
pop
sub
movsb
sbb
dec
inc
and
and
inc
sbb
pop
sbb
sbb
or
sub
adc
mov
in
adc
cmpsl
dec
lcall
loopne
cld
int3
xchg
das
int
ss
es
lock
enter
pop
inc
lcall
xor
loopne
mov
imul
aam
or
push
sarb
int3
and
popa
in
cwtl
sbb
ja
mov
lcall
xorl
mov
mov
xorb
and
test
xorl
shlb
les
lcall
inc
cld
dec
out
jne
add
jp
cwtl
mov
jp
leave
mov
push
mov
cmp
xchg
xchg
ret
rcrl
repnz
push
sbb
adc
js
cwtl
push
fcompl
xchg
mov
inc
dec
pop
cmpsl
jge
enter
xor
cmp
in
mov
cltd
movsb
sub
movsb
cltd
fs
dec
pushf
cwtl
mov
in
adc
sbb
pop
aaa
leave
xor
ljmp
sub
shrl
rclb
das
call
lahf
add
lea
xor
mov
pop
xlat
mov
xor
dec
adc
testl
hlt
lock
mov
jge
add
mov
or
jmp
data16
pop
dec
adc
adc
fcomps
sub
push
pusha
pop
dec
xor
sbb
sbbb
daa
outsl
repnz
xchg
leave
or
out
adc
and
dec
mov
in
xchg
sarb
sbb
mov
xor
cltd
sbb
rclb
mov
and
fadds
fsubrs
jno
and
stos
xchg
nop
pushf
fstp
inc
daa
nop
push
and
pop
dec
and
clc
clc
pop
es
ja
fld
sub
das
clc
lea
push
jecxz
in
mov
cmpb
cmc
sbb
je
mov
std
enter
add
or
ret
add
in
or
xor
rolb
movsl
sbb
add
jb
cmpsl
add
cmp
popa
jns
sbb
nop
fbld
or
mov
dec
insb
push
lock
xchg
int3
into
push
jge
out
fistpl
cltd
add
mov
or
in
loopne
xchg
inc
sbb
sbb
sbb
or
shlb
rolb
fstp
addb
leave
push
or
mov
add
mov
cs
adc
mov
dec
sahf
xchg
dec
mov
mov
mov
in
dec
sarb
ror
xchg
dec
cs
cs
xchg
dec
sahf
xchg
fsubrs
fcompl
lock
fiadds
dec
sahf
iret
and
xchg
mov
cmp
jl
and
jl
jns
call
push
repnz
hlt
aam
mov
fiaddl
outsl
pushf
in
mov
call
push
inc
jne
pop
xor
outsb
add
inc
push
add
inc
js
dec
gs
and
inc
fs
jne
push
mov
adc
push
mov
outsl
fs
outsb
in
mov
dec
jb
pop
outsl
jb
inc
insl
jo
leave
mov
outsl
insl
push
je
push
push
cmp
nop
ret
jnp
xchg
aas
js
mov
jae
push
dec
add
and
pusha
xchg
mov
outsb
dec
dec
jb
pmaxub
or
fisubrs
jo
wrmsr
or
mov
sar
and
add
hlt
adc
andl
push
into
fdivrs
stc
outsb
repnz
loop
mov
sub
out
mov
addb
pop
dec
shll
cmp
lcall
add
push
sbb
cltd
push
add
in
mov
push
inc
jne
insl
pop
loope
dec
inc
cmp
popa
inc
xorb
add
and
cmp
or
xchg
or
loopne
jno
push
ret
push
inc
mov
popa
pusha
les
movl
adc
inc
test
lds
lock
adc
rol
loope
aas
push
flds
add
inc
jb
lret
sub
mov
jnp
popa
fidivrl
loop
xchg
mov
push
aas
push
leave
sbb
pop
xchg
fs
movl
ret
dec
test
xor
add
loop
iret
ds
iret
add
gs
mov
push
lahf
aas
andl
inc
leave
sarb
insl
jo
mov
and
push
pop
pop
iret
in
in
sub
push
outsb
mull
leave
ret
int
sub
pop
cwtl
add
xchg
cltd
mov
jg
in
adc
jnp
movsl
cld
and
and
loopne
push
arpl
push
mov
jmp
aam
push
in
in
add
pop
in
in
lret
xchg
sar
mov
xor
addl
call
xor
in
js
and
xchg
add
addb
cli
lea
cmp
add
rcl
mov
in
pop
repnz
out
roll
and
jb
ret
xor
insb
loop
push
pop
and
out
add
sbb
jmp
xchg
cmp
mov
sbb
mov
daa
ss
mov
adc
xchg
sub
outsl
inc
je
dec
je
sbb
xor
outsl
in
push
xchg
daa
loopne
ja
add
add
xchg
adc
mov
xchg
fnstenv
dec
pop
in
leave
and
push
clc
lret
clc
inc
outsl
insl
pop
stos
hlt
sar
enter
hlt
rorb
xchg
aad
popf
sub
xor
loop
in
xor
in
jecxz
call
sarl
push
inc
shll
iret
jnp
jae
loopne
loopne
js
fcom
inc
push
pusha
mov
test
fcmovne
or
ret
int
jne
les
fcomp
enter
sbb
inc
xchg
shlb
sbb
mov
adc
mov
sub
mov
fmuls
mov
out
jp
adc
movl
je
sti
aaa
mov
jmp
adc
sub
jbe
add
xor
push
mov
adc
mov
xchg
lock
jnp
jmp
inc
outsl
pop
mov
push
jl
mov
push
dec
mov
lea
adc
inc
shlb
xor
or
daa
ljmp
in
int3
data16
pop
mov
add
nop
jle
roll
ror
xchg
sbbl
js
lahf
ret
mov
jge
repz
ja
test
jp
repz
adc
add
xchg
sub
jg
out
shr
fsubrl
push
pop
jns
subb
pop
push
adc
ljmp
je
and
call
andl
xor
testb
aaa
push
stc
adc
sub
hlt
das
add
jne
mov
inc
je
dec
shlb
out
push
imul
jmp
and
and
lock
or
sarl
jl
inc
xor
lea
adc
call
add
orl
jno
sub
push
or
pop
das
hlt
aaa
xor
jno
std
fldl
add
pop
dec
inc
loope
jnp
pop
sahf
jmp
inc
lea
mov
shrl
mov
in
repz
dec
repnz
pop
subb
in
pop
in
aaa
test
cmp
or
push
insl
js
mov
fsubrs
inc
mov
loope
addb
xor
adc
or
xchg
adc
mov
pop
out
mov
inc
sub
or
movsl
outsl
pop
cld
dec
xor
div
and
aam
and
movsl
or
shr
adc
push
leave
push
and
or
test
mov
xchg
mov
or
aas
push
push
je
test
lods
mov
push
loopne
addl
push
outsl
arpl
add
movsl
xor
cmc
into
in
jecxz
lods
xor
pop
mov
push
fistps
or
lods
in
loopne
cmc
cmp
adc
je
or
mov
sub
sub
and
test
fucomip
sbb
inc
in
push
sub
adc
sbb
jmp
sub
outsb
xor
mov
sub
mov
dec
add
push
jno
out
adc
cmp
or
clc
jmp
arpl
inc
inc
enter
out
sbb
nop
stos
into
xor
fimull
jb
aas
add
push
jo
ds
sbb
jb
adc
in
loopne
and
xor
in
in
orl
xor
lcall
push
or
insb
jne
xchg
adc
data16
adc
inc
cltd
in
in
dec
call
in
cmp
push
lret
outsb
cmp
aad
call
or
jmp
push
jecxz
sub
lahf
adc
xchg
or
lsl
pop
jne
pop
sbb
dec
jb
xlat
push
push
sbb
jns
pop
ficoml
cmp
loop
and
push
sarb
ljmp
adc
cmp
xor
push
outsl
lock
shlb
xchg
cmp
js
dec
dec
sbb
sbb
cs
cmpsb
cmpsl
xor
jmp
cmc
pop
dec
lock
lock
je
pop
jne
dec
inc
inc
push
imul
sub
ljmp
or
int3
test
dec
xchg
sbb
jne
lock
push
pop
nop
xor
sub
xor
popa
iret
xor
ja
les
dec
ret
push
ja
mov
fdivs
pop
or
daa
call
fwait
sbb
pop
and
xchg
shl
repnz
pop
es
rorb
jae
add
cmp
mov
sbb
das
push
in
jns
mov
sub
lock
aad
pop
dec
mov
and
xchg
js
jb
sbb
pop
push
push
push
out
push
notl
push
into
jbe
bound
xor
jae
push
adc
cmp
add
sbb
adc
add
popf
std
jl
and
pop
icebp
cmp
inc
lds
push
test
popa
cmp
outsb
and
inc
jmp
sbb
or
sbb
addr16
jmp
shrb
or
clc
mov
cmp
sub
or
and
dec
cmc
ljmp
jle
xor
ds
or
xor
mov
xor
imul
adc
push
stos
sarb
mov
dec
bound
xchg
rcll
ret
pop
leave
xor
pop
nop
shll
dec
or
xlat
data16
int3
pop
ljmp
xorb
add
sub
mov
xor
adc
mov
xlat
outsb
or
jg
xorb
jns
and
push
clc
frstor
mov
cmp
rclb
scas
mov
icebp
test
or
sub
add
xor
imul
jb
cld
mov
jp
inc
mov
sub
jmp
incl
test
in
hlt
jmp
mov
xchg
push
jmp
incl
sahf
add
cmp
sub
roll
dec
loope
or
sbb
adc
mov
pop
je
nop
iret
arpl
pop
das
aam
lea
stc
mov
clc
or
and
fucom
sbb
loopne
and
sti
std
jg
sub
cmp
or
add
into
sbb
sub
mov
cmpsb
add
andl
or
je
pop
call
sbb
mov
shrb
or
or
mov
int3
cmpsl
fistpll
and
idivl
mov
jmp
cmp
and
push
inc
aam
idivl
das
xor
push
pusha
aaa
inc
icebp
dec
insl
xor
mov
xchg
outsl
test
jge
and
outsl
ds
cltd
pop
addr16
xor
push
sbb
adc
xchg
fimull
pop
daa
push
jecxz
jmp
push
out
add
idivl
out
adc
movsl
imul
insb
lods
imul
add
xor
xor
xor
jne
mov
imul
push
outsl
aas
sub
mov
add
jae
decl
xor
push
sar
cmp
pop
cmpsl
jl
mov
fildll
mov
cmpsl
insb
jl
lock
sbb
pop
mov
sahf
or
xor
pop
mov
xor
mov
and
or
scas
inc
sbbl
je
jmp
outsb
mov
das
and
or
test
push
push
sub
mov
test
jecxz
sti
jl
aaa
dec
pop
rcrb
ljmp
push
insb
pop
pop
or
sbb
dec
sub
mov
js
add
mov
flds
stos
movsb
sub
add
fildll
pop
xchg
insl
adc
and
mov
jns
mov
cmp
imul
sub
or
inc
push
sbb
shl
cmp
aaa
or
daa
add
jmp
cmp
lcall
stos
push
mov
sbb
pop
and
rorl
add
inc
jecxz
push
in
addr16
jb
mov
or
shlb
jmp
das
jge
ficoml
arpl
testb
pop
rcpps
xchg
pushf
jno
push
cwtl
rol
orb
add
andl
adc
fldt
stos
loopne
pop
nop
pop
push
cltd
nop
add
je
pop
leave
xchg
inc
push
push
dec
std
movups
and
dec
xchg
scas
push
in
mov
loope
cld
lds
pop
std
insb
add
inc
imul
mov
push
add
dec
shll
mov
sbb
pop
mov
add
sub
arpl
push
mov
push
decb
add
jmp
aas
dec
adc
sbb
out
adc
out
xchg
pop
out
dec
popa
add
dec
rcr
or
add
sub
push
jns
xchg
inc
push
shlb
test
xchg
gs
mov
dec
lds
and
sub
call
push
test
es
xchg
pop
mov
sub
ds
shll
pop
popa
jnp
and
mov
cmp
mov
repz
push
adc
mov
test
add
adc
stos
jl
frstor
adc
adc
bound
sbb
add
push
jo
fs
cltd
sti
mov
das
sbb
or
lret
mov
adc
stc
xor
aaa
sbb
js
xchg
adc
xchg
incl
shlb
jmp
in
vmovhps
mov
hlt
push
add
xchg
or
jno
daa
clc
in
sbb
dec
ds
jl
test
inc
xchg
or
pop
sub
inc
cli
jmp
dec
faddl
leave
call
aaa
and
fcoml
mov
loopne
shrl
mov
shrb
push
xchg
loop
sub
mov
callw
dec
xor
call
fcompl
outsb
sbb
sbb
rorl
and
push
pop
add
inc
add
and
ss
xchg
push
pop
dec
cmp
push
xlat
ljmp
cmp
imul
add
inc
push
test
push
pop
daa
mov
pop
sbb
stc
cli
sub
push
dec
add
push
int3
shll
repnz
mov
mov
fisttpll
pop
nop
arpl
add
sub
mov
daa
mov
push
mov
mov
lea
push
mov
mov
mov
call
jnp
jge
xchg
nop
xchg
xchg
and
xor
test
in
ja
cmpsl
pop
push
and
and
dec
shll
push
jb
inc
fisubrl
pop
popf
adc
daa
mov
mov
in
incl
mov
mov
or
push
pop
xchg
das
fstl
mov
push
imul
aad
inc
sub
stc
movsl
jmp
orb
mov
mov
cltd
push
adc
add
inc
lock
sub
or
sub
push
push
cmp
addb
push
arpl
push
arpl
lret
outsb
jp
test
pop
dec
in
dec
test
shr
stc
es
push
adc
fmulp
xchg
lahf
jmp
loopne
add
xchg
pop
test
lock
add
leave
or
push
mov
imul
andb
sbb
add
push
add
xchg
pop
movsb
push
out
pop
lock
adc
into
rolb
push
add
loopne
dec
nop
mull
loope
and
inc
or
add
dec
shll
ret
loop
lcall
daa
cmp
xorb
mov
push
jo
mov
and
dec
jb
cmp
jge
adc
adc
inc
push
adc
xchg
sub
fildll
push
sub
xchg
mov
jno
push
incl
sbb
loopne
shlb
insb
lds
sbb
fisubl
pop
sbb
js
jmp
das
pop
cwtl
mov
arpl
jns
sbb
pop
or
jl
imul
add
push
pop
pop
mov
adc
pop
ret
push
addb
and
add
sub
adc
mov
jo
jne
adcb
int3
and
dec
sbb
in
xchg
mov
popa
jne
and
sub
rorb
test
adc
cld
cwtl
xor
das
mov
mov
mov
xor
push
add
dec
mov
add
jae
sbb
insl
xor
sub
add
or
test
loopne
ljmp
or
rcrl
or
mov
and
popw
or
add
dec
pop
xor
mov
or
inc
pop
pop
addb
dec
cmp
rcll
or
lcall
push
sbb
xor
rcrl
ds
in
cld
pusha
xor
or
push
jne
mov
mov
pushf
bound
adc
rol
inc
filds
cltd
pop
fcmovnu
mov
inc
or
imul
int3
inc
sahf
xor
mov
cmp
mov
sub
daa
push
outsl
pop
add
mov
std
imul
adc
sub
dec
incb
sub
scas
and
push
or
mov
ja
mov
dec
je
imul
mov
cmpsb
mov
pop
inc
lcall
mov
cs
jo
cmpsb
imul
cltd
fadds
fistpl
fstps
inc
repz
nop
push
dec
aad
les
inc
in
icebp
and
test
mov
pop
enter
push
sub
stos
bound
ds
adc
xor
and
add
xor
push
cwtl
imul
ja
and
sbb
cmpsb
imul
jnp
pop
lcall
daa
lods
imul
fucomi
es
and
mov
aas
xchg
filds
or
sbb
notl
xorl
aaa
push
xor
fimull
enter
lock
inc
pop
jmp
sbb
inc
mov
xor
adc
movzwl
and
popf
inc
dec
and
cwtl
push
movsl
xchg
cmp
in
stos
and
mov
inc
popf
rol
dec
cmp
mov
cld
fucomi
xchg
dec
leave
pop
pop
adc
mov
jmp
pop
in
sub
jecxz
data16
adc
hlt
mov
mov
mov
sub
pop
cmovbe
enter
adc
push
lock
hlt
mov
push
adc
or
xchg
sbb
push
pop
imul
es
lcall
cmpsb
xor
ds
xchg
sbb
mov
test
es
and
ljmp
cmpsl
pop
fcmovnbe
dec
addb
ret
push
adc
adc
push
sub
lcall
es
xor
pop
sub
mov
inc
sbb
adcl
hlt
sbbb
and
push
popl
pop
leave
lcall
call
mov
dec
repz
xor
int
popa
jne
mov
andl
adc
cmp
aaa
sub
xchg
cmp
pop
gs
inc
test
lods
pop
cmp
pop
adc
add
test
or
aam
jb
aam
das
and
clc
xchg
nop
fs
push
flds
sbb
mov
sbb
pusha
shlb
in
push
fildll
daa
xchg
pop
sbb
jge
and
sbb
iret
push
mov
sbb
orb
out
sbb
add
rcl
loopne
push
mov
push
xor
test
iret
sbb
shlb
sbb
add
push
lods
popf
in
adc
out
and
addb
hlt
test
mov
push
insl
mov
inc
add
in
inc
addl
rorl
push
inc
into
pop
pop
fs
cs
inc
pushf
jle
ja
sbb
test
push
cltd
push
lods
push
movsb
xor
loope
lcall
pop
push
sub
pop
mov
daa
pop
pusha
push
icebp
fildl
lods
pop
push
and
sbb
adcl
cmp
push
mov
adc
pop
cmp
ljmp
test
push
mov
xchg
and
dec
and
dec
fmuls
xchg
outsl
sar
pop
inc
and
and
dec
pop
add
rcrl
add
dec
mov
popf
push
xchg
aam
daa
or
add
adc
in
je
and
cmp
jbe
shl
pushf
cmp
inc
lock
xor
ds
jne
inc
add
sbb
or
cmpsb
push
adc
jecxz
inc
inc
inc
popa
dec
push
nop
iret
lds
pop
sahf
mov
dec
inc
and
les
inc
dec
mov
cld
xchg
fwait
idivl
cmp
shl
pusha
in
cmp
xchg
cmp
loopne
push
push
cmp
pop
and
adc
repnz
cmp
pushf
cmp
sbb
add
xor
xor
adcl
and
les
xor
push
loope
adc
inc
xchg
test
xor
add
push
xor
cwtl
mov
add
loope
mov
imul
rcrb
mov
pusha
outsl
xor
sub
adcb
pop
and
in
psubq
ret
add
std
pop
and
pop
test
jae
cld
and
and
cmp
push
pop
daa
addl
sarl
push
test
imull
mov
popf
cmp
add
mov
push
xor
or
mov
xchg
fucomi
push
xchg
mov
jb
cwtl
js
enter
or
or
and
movsb
sbb
cmp
inc
xchg
int
push
adc
xchg
andb
movsb
into
push
or
adc
or
lock
fsubl
xchg
dec
xor
test
mov
cmp
aam
aaa
aam
enter
mov
add
jnp
sbb
sub
enter
insl
mov
inc
push
cli
int
push
cmp
push
fadd
or
or
sbb
inc
ds
and
sbb
pop
and
xor
jae
add
inc
sbbl
pop
mov
pop
daa
andl
push
or
daa
inc
sbb
in
xchg
mov
mov
dec
pop
rorb
push
xchg
inc
dec
out
rcl
push
xor
lods
lods
cmp
sbb
test
mov
adc
pop
popa
movsb
testl
movsb
mov
nop
inc
mov
cmp
jb
cwtl
mov
sbb
sbb
xor
stos
xchg
jno
or
xor
js
sbb
nop
dec
mov
es
popf
mov
adc
cmp
push
mov
sbb
add
loope
mov
and
xchg
mov
or
dec
sahf
jbe
xor
mov
test
add
mov
jmp
test
mov
jo
jecxz
dec
scas
nop
push
test
es
es
mov
nop
cmp
pop
adc
daa
push
daa
call
daa
sbb
xchg
popa
mov
mov
fs
mov
jne
add
loope
out
mov
adc
cmp
mov
or
push
push
sbbl
push
sub
dec
shll
leave
jecxz
lcall
pop
sub
int
lcall
daa
popf
add
lcall
or
rcll
les
push
xchg
dec
ret
inc
push
xor
push
xor
cwtl
adc
test
cmp
inc
imul
or
jno
mov
loopne
add
test
insl
aaa
lds
es
fdivs
fdivs
popa
mov
ret
aam
add
leave
xor
rcl
iret
add
test
xchg
mov
jbe
imul
fs
xor
insb
es
ss
les
xor
imul
add
lods
imul
insb
lods
or
daa
in
or
cmpsb
imul
ret
xor
rclb
aaa
mov
popf
dec
mov
pusha
sub
mov
les
sbb
mov
and
lods
cmp
aaa
pusha
and
pop
pop
mov
aam
es
enter
aaa
pusha
ret
mov
dec
sbb
pushf
cmp
cwtl
test
ret
jno
aaa
rcl
adc
dec
mov
ss
popf
nop
fiadds
daa
and
push
mov
sub
add
xchg
cmpb
add
add
ret
addr16
lds
test
mov
nop
pop
sub
jno
in
or
repnz
imul
push
aas
sub
rcr
cmp
adc
sub
or
mov
jmp
sub
or
or
daa
movsb
je
cs
inc
mov
sub
cmc
or
aad
ja
data16
enter
aas
test
xchg
ljmp
ds
ja
add
ss
or
ja
dec
mov
push
jbe
ret
pop
lea
shrl
rorl
sub
outsb
inc
push
xor
xchg
dec
or
xor
inc
pop
adc
and
add
adc
in
xchg
xchg
testw
outsl
fists
inc
rol
mov
pop
adc
clc
jmp
movw
ja
pop
fwait
xchg
lcall
and
xor
mov
repnz
inc
rorb
push
adc
mov
sbb
mov
adc
add
and
aas
adc
jmp
sbb
fldt
dec
push
insb
or
inc
xchg
push
cltd
xchg
push
popa
lahf
push
push
xor
or
daa
add
or
aaa
xchg
out
sbb
dec
repz
dec
loope
aam
fbstp
fwait
add
imul
daa
pop
xor
fcomps
sbb
sub
bound
jg
movsb
or
pop
push
push
fildll
pop
sbb
outsl
push
insl
xor
popf
addb
push
pop
mov
and
add
jae
mov
imul
cmpsl
lcall
xor
stos
addb
mov
lds
rcll
add
mov
xor
sub
sarl
xor
jmp
cmp
inc
pushf
sub
cmp
add
xchg
call
push
loope
push
add
aam
dec
pop
sub
out
mov
int3
testb
je
xor
or
cmpl
ja
jmp
and
jnp
out
push
push
xorb
jl
jno
jne
lock
xor
dec
fildll
mov
adc
push
add
movsl
pop
lahf
and
lmsw
jb
cmp
das
add
add
and
in
lock
mov
push
das
movsb
mov
add
mov
pop
and
aas
aam
cmpsl
inc
insl
jo
jns
add
add
jo
mov
ss
in
fcmovu
cltd
in
jmp
push
aas
insb
add
ret
jl
outsl
jne
xchg
jb
outsb
arpl
add
insl
ljmp
addr16
add
add
rorb
add
jle
lahf
mov
aas
push
outsb
imul
inc
arpl
or
pushf
jg
xor
adc
mov
xor
pop
mov
aaa
fidivs
xchg
add
push
gs
stos
into
and
cmp
sub
sti
out
int3
shl
add
scas
xlat
ja
cmc
or
pusha
sti
ss
sbb
sub
mov
jne
dec
add
sub
jno
ret
cmp
push
push
lea
xchg
mov
sbb
pop
adcl
xchg
push
fwait
sub
lea
mov
into
loope
mov
adc
inc
test
dec
xchg
and
mov
or
adc
add
xchg
in
add
push
gs
nop
cmpsl
ret
rcr
inc
outsb
jns
adc
inc
push
cltd
mov
notb
pushw
push
cltd
dec
adc
or
mov
cli
xor
xor
imul
daa
push
dec
call
pushf
mov
xchg
aaa
cmc
push
jnp
popf
popa
data16
xor
push
cwtl
adc
dec
adc
xor
cs
call
jbe
xchg
push
mov
out
and
xor
pop
cwtl
cmp
inc
push
push
call
adc
pop
add
jne
into
cmp
movsb
mov
icebp
mov
jg
cmp
jnp
je
daa
mov
popw
adc
ds
clc
xchg
add
push
movhps
cmp
lea
or
dec
scas
test
cmp
inc
loopne
mov
push
add
add
subb
rcrl
mov
mov
movsl
mov
sub
push
or
adc
loopne
xchg
outsb
mov
or
mov
or
add
inc
sub
or
and
ja
pop
xchg
cmp
mov
sbb
and
orb
dec
jle
sbb
mov
sub
movsl
xchg
xlat
pop
ror
les
mov
add
pop
ret
rcrb
mov
sub
aaa
adc
jbe
cwtl
dec
pop
enter
pop
lods
mov
push
test
jg
in
pop
lahf
xchg
xchg
push
dec
jb
or
xchg
rolb
jbe
mov
mov
jle
jmp
xor
push
jns
xchg
sti
cmp
mov
lahf
jno
inc
loop
jecxz
mov
je
adc
fnstenv
sbb
cmp
loope
out
pop
xor
mov
dec
inc
loop
lock
dec
ds
cmp
cmp
sbb
xor
inc
sbb
or
cmp
or
ficompl
inc
add
or
mov
jmp
jo
or
sbb
and
daa
or
dec
jne
xchg
ret
jb
mov
int
or
lds
rclb
dec
sub
xor
nop
leave
in
mov
and
push
jo
ret
pusha
mov
inc
sbb
pop
adc
fdivrs
iret
xchg
imul
add
mov
jne
pusha
adc
mov
std
sbb
popf
in
adc
stos
in
mov
cmp
in
in
adc
xor
cmp
sti
stc
sbb
les
lock
xor
jbe
aam
daa
in
xor
and
arpl
jo
cmpsl
jb
jb
mov
scas
nop
xchg
jb
jb
xchg
xchg
xchg
xchg
ret
pop
jb
xchg
xchg
int
out
loopne
add
sbb
aad
cmpsl
dec
cmpsl
cs
jecxz
adc
aas
cld
add
in
shlb
nop
rclb
push
jge
pop
movsb
add
xchg
jb
pop
shrb
aas
lahf
popf
orb
pop
mov
add
xchg
clc
jae
popa
outsb
popa
pop
mov
lea
jne
add
mov
inc
sub
push
add
incl
mov
rorb
mov
dec
rorb
xchg
dec
cmpsb
in
decb
adc
shlb
pusha
or
and
and
add
xor
inc
cmp
mov
incl
dec
cmc
cmp
cmp
sbb
xchg
adc
mov
sub
xor
push
aam
dec
xchg
subb
sbb
sbb
in
fisubrl
cmpsl
aas
into
and
add
fildl
cmovns
in
sub
subl
jo
or
xchg
jns
xor
mov
pushf
xchg
imul
adc
cmp
push
lcall
sbb
and
sti
add
roll
out
push
sbb
xor
add
add
outsl
in
pop
hlt
push
push
pop
inc
or
inc
cs
filds
and
dec
fadds
dec
sbb
movsb
add
lods
imul
in
movsl
xor
mov
xor
sbb
cmp
adc
cmp
mov
fdivs
pusha
mov
inc
add
pop
and
scas
in
cmp
adc
inc
scas
or
push
ffree
mov
ror
inc
mov
sbb
xchg
adc
xchg
stos
cmp
push
or
mov
add
ds
jg
and
imul
mov
pop
add
xchg
repnz
lret
mov
gs
or
cmp
mov
daa
dec
dec
add
or
ret
insl
call
pop
data16
or
adc
sahf
mov
mov
xchg
inc
lds
mov
push
add
sbb
fiaddl
aam
mov
push
call
add
dec
push
outsl
clc
movsb
inc
add
adc
daa
adc
push
cltd
js
cmp
lds
test
inc
sub
cmp
iret
stc
adc
add
and
lahf
add
pop
dec
je
ret
jl
loopne
addl
cmp
or
dec
add
adcb
popf
push
dec
movsb
dec
dec
into
loopne
inc
rol
dec
rorb
or
pop
andb
fildl
mov
jl
or
push
push
das
mov
and
movsb
add
dec
mov
iret
dec
outsl
imul
out
call
add
dec
dec
roll
or
pop
mov
inc
sahf
mov
inc
shlb
pop
adc
adc
dec
cmp
mov
das
sub
jne
add
daa
sarb
pop
fcom
and
nop
mov
mov
cwtl
loope
jg
iret
nop
jecxz
test
inc
add
or
lea
aaa
adc
sub
pop
xchg
adc
xlat
fildl
subl
jo
pop
out
dec
and
mov
xchg
cmpb
adcb
js
jo
adc
adc
dec
adc
sbb
xchg
sub
mov
stos
jp
movsb
cmp
sbb
cmpl
add
mov
call
nop
dec
xchg
lock
mov
cld
arpl
push
or
sub
mov
ljmp
mov
rorl
push
add
xor
lock
out
in
xchg
fnstenv
jle
rclb
cwtl
dec
subl
movsl
inc
call
or
adc
loopne
and
stos
sub
push
clc
mov
loope
sub
mov
mov
cmp
std
in
lea
inc
and
adc
cmp
cmp
push
or
lock
gs
jnp
pop
mov
sbb
rorb
sti
adc
mov
inc
dec
push
or
test
xchg
mov
enter
mov
jmp
sub
movsb
mov
pop
push
jns
aas
sub
shr
and
lds
fmull
dec
or
push
mov
dec
jg
sbb
out
mov
and
sub
dec
adc
enter
inc
push
dec
mov
addr16
daa
hlt
andl
and
pop
rolb
dec
lret
dec
or
mov
push
clts
cmp
out
or
adc
add
test
push
test
sbb
cmp
push
and
stc
mov
push
imul
lret
jne
mov
dec
dec
cmpsl
mov
orl
adc
aas
sub
ret
loopne
sbb
push
test
add
js
fnstenv
test
bound
push
stos
mov
mov
sbb
sbb
outsl
or
pop
sbb
movsl
add
addr16
xchg
not
push
adc
adc
scas
test
or
inc
cmp
dec
enter
xlat
cmovb
ljmp
xor
icebp
sbb
sbb
pop
incl
pop
scas
pusha
scas
push
pop
xor
int3
pop
insb
test
lds
inc
loopne
add
jbe
sub
jnp
adc
cld
push
adc
adc
into
int3
cmp
stos
imul
bound
push
andl
sub
ljmp
in
mov
orb
pop
je
dec
inc
push
push
mov
jne
lea
rcrl
xor
ret
in
cwtl
or
repnz
cwtl
imul
gs
adc
or
jb
lods
add
je
outsb
je
lock
clc
xlat
outsl
je
jl
add
dec
gs
insb
add
add
dec
mov
mov
cmp
aam
or
fisubrs
and
scas
push
dec
mov
dec
pop
rolb
push
insl
adc
pusha
adc
add
outsb
xor
or
je
sub
dec
pop
mov
and
mov
mov
or
adc
sub
push
sbb
movsb
ret
imulb
xchg
dec
pop
js
in
mov
insl
daa
out
mov
cmp
mov
divb
and
xchg
out
adc
clc
test
loopne
pusha
mov
in
add
pop
loopne
dec
inc
lods
inc
addb
push
nop
in
fdivr
aad
adc
cmp
fmuls
cmpsb
bound
cmc
aam
dec
pop
nop
lods
cmp
push
sbb
pop
sbb
xchg
ret
shrb
jbe
gs
cmp
or
cli
imul
inc
dec
push
dec
inc
cmpsb
pop
and
nop
inc
inc
mov
mov
in
gs
jg
inc
insb
jae
lcall
pop
adc
addr16
jnp
mov
xchg
cmp
adc
dec
loop
cmp
pop
xchg
in
and
dec
sub
jecxz
inc
adc
stos
push
add
nop
pop
fildl
jbe
enter
or
mov
push
int
pop
data16
add
mov
push
jnp
daa
inc
inc
mov
or
cltd
sbb
rcrb
shlb
ljmp
out
jp
sbb
test
cmp
sbb
inc
xchg
popa
sub
push
fwait
jae
dec
loop
xor
cmpsl
or
daa
ret
pop
movl
sbb
pusha
and
xchg
jle
push
psubusb
inc
inc
or
mov
test
nop
adc
inc
stc
sbb
push
xchg
dec
mov
inc
adc
loopne
ret
pop
mov
or
sbb
mov
dec
dec
cs
add
out
cmp
jge
xchg
sbb
ud2
xchg
xlat
loop
push
and
dec
out
or
push
pop
pop
pop
cmp
sbb
scas
pop
popa
push
add
add
xor
sub
pop
inc
ss
and
fwait
sbb
nop
cmp
inc
dec
and
lea
sbb
or
push
aaa
dec
call
outsl
sbb
adc
sbb
repz
xchg
mov
daa
fwait
lock
pop
int3
pop
push
jg
mov
aad
movsl
adc
sbb
cmp
push
mov
lea
lods
or
xchg
cli
mov
mov
add
rcl
imul
test
cmpsw
loop
xor
push
add
sbb
into
and
daa
ret
jne
and
xor
outsl
loopne
sbbb
pop
inc
and
adc
ret
bound
xchg
out
or
lock
adc
or
push
clc
sub
inc
inc
xchg
jbe
cmpb
sub
or
or
loop
out
xlat
hlt
shll
xor
fsubs
jbe
cmp
enter
cmp
push
lods
sub
mov
hlt
nop
xor
inc
fcompl
or
les
dec
mov
mov
mov
mov
scas
hlt
xor
mov
adc
mov
cmpsl
pop
sub
lock
jo
and
add
adc
popf
inc
pop
notl
add
adc
je
call
add
xor
adc
in
dec
or
xor
xorb
mov
mov
adc
adc
fs
push
push
inc
mov
inc
cmpsb
push
mov
xor
lcall
pop
push
pop
jb
sub
pop
dec
hlt
inc
add
mov
pop
add
mov
add
push
aam
les
dec
cmp
fucom
mov
xor
pop
adc
push
cld
add
pop
sbb
inc
xor
lock
lea
cmc
add
dec
mov
cltd
js
out
loop
lsl
nop
dec
xor
pushf
push
aam
mov
mov
mov
add
cmp
add
imul
popa
pop
or
shrb
push
or
cltd
das
push
sub
adc
aam
jnp
mov
sarb
add
dec
das
arpl
imul
pop
sub
mov
push
js
dec
inc
shlb
adc
mov
xor
xor
js
cmp
lods
ret
dec
mov
sub
or
cmp
add
mov
arpl
push
call
cmp
stc
adc
leave
push
lea
arpl
xor
cmp
add
outsb
or
adcl
test
mov
jno
int3
add
xor
fcoml
jecxz
outsb
inc
es
aaa
push
push
sub
push
inc
sbb
hlt
insl
sarl
cmpsl
call
lods
test
sub
pop
push
popf
mov
pop
jle
adc
scas
inc
cld
dec
pop
mov
iret
dec
cld
sbb
inc
lock
ja
add
add
out
arpl
sbb
pop
adc
bound
pop
xlat
add
jbe
js
pusha
push
sbb
in
in
mov
in
in
rcrb
jo
mov
fmull
fwait
inc
inc
outsl
push
sbb
dec
dec
outsb
jae
popa
outsb
push
add
add
es
inc
or
rclb
std
mov
popa
cwtl
ja
negb
sub
jae
xor
loopne
cld
jae,pn
insl
gs
sub
jne
jo
outsb
xor
xor
cmpsl
scas
test
pop
nop
in
insl
pop
dec
jae
adc
adcb
jae
hlt
mov
lock
sub
imul
stos
lds
inc
addr16
ljmp
adc
xor
dec
loopne
sbb
int3
and
inc
jbe
lcall
push
orl
and
push
test
mov
orb
adcb
rorl
dec
cmp
pop
mov
mov
add
shlb
cli
and
inc
cmpsl
test
je
pop
xchg
or
inc
dec
fdivrl
std
test
in
andl
add
pop
addl
and
and
lock
adc
rolb
bound
outsl
pop
sarl
jne
sbb
bound
jo
imul
push
in
sub
mov
pop
in
add
adc
xchg
pop
sahf
rorl
and
or
sub
sub
in
cmp
in
sbb
dec
xchg
add
in
repnz
fstp
mov
jne
jns
addl
dec
into
rorb
repz
and
addl
int
cmpsl
adcb
xor
in
loopne
loopne
jp
ja
pop
pusha
adc
adc
push
push
add
or
into
push
or
dec
or
xchg
in
jbe
and
push
add
jg
dec
add
loopne
imul
jne
rorl
mov
clc
js
mov
inc
add
fdiv
adc
sbb
mov
adc
jne
mov
insl
in
mov
fdiv
aam
jmp
adc
idivl
rcrl
dec
mov
les
mov
push
fs
cli
push
call
hlt
adc
lea
cmpb
pusha
jl
pop
mov
jo
jns
cld
test
push
sub
push
lahf
push
roll
pop
mov
inc
dec
mov
js
dec
out
imul
xor
fistps
pop
and
or
das
adc
dec
pop
pop
cmpsl
pushf
test
jae
cmpsb
nop
ror
shl
inc
mov
adc
push
dec
pop
ss
aad
gs
push
sub
jno
cmp
fmul
xorl
inc
xchg
add
sar
mov
call
je
call
movl
or
cwtl
mov
xor
lret
test
aas
incb
cmp
jne
mov
es
jmp
std
stos
in
push
enter
inc
or
pop
loopne
jmp
add
adc
dec
push
hlt
aam
pop
mov
loope
jmp
mov
sbb
es
mov
xchg
and
cmp
dec
test
or
pop
sbb
sbb
lahf
and
pop
hlt
xor
scas
cmpb
jb
lea
push
jp
add
adc
sbb
int3
mov
cmp
mov
add
adc
fistl
pusha
jno
or
adc
mov
push
add
adc
hlt
or
adc
shll
test
cmp
add
shl
xor
ds
adc
dec
pop
stos
jge
pusha
pusha
adcl
rorb
js
lods
dec
lods
sarl
test
mov
das
mov
or
or
rcrb
push
clc
das
inc
test
add
sub
filds
sbb
and
test
sub
scas
or
add
ja
jmp
fidivrs
loopne
push
push
add
add
lret
and
or
fistpl
inc
imul
mov
lock
nop
jmp
inc
inc
cmpsb
or
stos
pop
push
idiv
dec
jne
sub
stc
push
push
push
loopne
jno
add
or
cmp
hlt
push
loop
push
cltd
divl
mov
sbb
lock
loope
dec
mov
sbb
xchg
xor
sbb
pop
mov
push
jp
bound
mov
in
add
adc
add
ss
ud0
mov
jne
mov
lahf
mov
cmpsl
push
popa
mov
daa
cmpl
push
popa
cmc
sti
or
add
pop
inc
sbb
sti
cmpb
jmp
fisttpll
jmp
push
repz
fildll
push
fadds
sarl
daa
rol
pop
inc
loop
daa
mov
dec
inc
mov
push
add
mov
xor
inc
mov
push
add
cmp
repnz
add
adc
lcall
mov
pop
ud1
sti
dec
ja
sti
adc
das
inc
mov
adc
in
adc
and
loopne
idiv
jne
and
ret
rolb
adc
adc
arpl
jne
push
push
add
in
mov
xorl
mov
fwait
mov
rcrb
pop
hlt
mov
add
mov
add
jne
pop
cwtl
pushf
insl
notb
adc
mov
iret
movl
nop
subb
mov
inc
push
push
pop
loop
add
ret
mov
bound
jb
xchg
scas
sbb
mov
xchg
iret
pop
sub
push
mov
xor
mov
orb
push
aad
cmp
and
or
xchg
mov
mov
mov
rorl
adcl
sbb
xor
inc
mov
or
and
pop
pop
imul
or
jne
pushl
ffree
loope
lock
subl
movsl
int3
and
dec
fisubrs
sub
pop
mov
js
fistl
mov
mov
jno
sbbb
mov
lcall
mov
incl
jl
jno
out
cli
aaa
ret
enter
lea
mov
ret
stos
cmc
push
xchg
jae
push
hlt
pop
xchg
es
adc
jg
sbb
cwtl
cmp
pop
xchg
mov
add
push
lret
add
mov
gs
pushaw
mov
push
popa
daa
mov
sub
int
add
popa
lock
sub
popa
dec
pop
cltd
addr16
xor
ret
jo
orb
mov
clc
push
fs
bound
push
push
jmp
movsl
fisttpl
dec
jle
or
add
ficoms
adc
shll
cmp
cli
ret
pop
jne
aas
push
dec
movsl
push
loopne
lods
call
xchg
sub
mov
push
pop
adc
mov
mov
push
push
mov
jb
lock
push
sbb
insb
pop
jle
mov
das
add
inc
inc
push
push
cmp
adc
mov
cmp
test
sbb
and
mov
push
popf
dec
jo
and
loope
rolb
cmp
mov
cmp
mov
ljmp
dec
cltd
sbb
and
jmp
push
sub
int3
mov
test
ss
es
add
or
sbb
push
adc
or
mov
repnz
fs
adc
push
clc
outsb
nop
dec
add
and
mov
or
test
fisttpl
and
push
mov
xchg
outsb
or
arpl
push
sub
movsl
push
lods
std
rol
jb
in
cmp
lcall
ds
lds
les
cmp
mov
mov
jae
cmc
push
cmp
adc
mov
cmc
or
ret
fstpt
es
adc
mov
add
mov
dec
adc
test
sbb
jmp
inc
sahf
pmulhuw
fs
adc
mov
lcall
aaa
test
sbb
inc
stc
fistpll
or
inc
inc
inc
inc
dec
dec
inc
add
mov
das
push
inc
inc
push
inc
push
push
add
test
fimull
push
push
and
inc
inc
inc
fsubrl
sti
mov
push
push
pop
jnp
xor
pop
cmp
pop
or
push
pop
pop
adc
jmp
int
and
push
inc
es
push
adc
sahf
lock
adc
fsqrt
les
insl
mov
pusha
cmp
sbb
nop
out
or
mov
dec
mov
ret
adc
roll
push
or
xlat
fcmovb
push
into
jp
or
mov
inc
test
mov
xchg
ret
sarl
mov
mov
mov
jbe
xchg
and
mov
sahf
mov
push
enter
mov
fsubrl
or
test
mov
sti
and
sub
inc
shrb
or
sbbb
add
mov
mov
jg
insl
insb
fstps
andl
orl
and
sub
jmp
fwait
ret
fs
add
sub
shlb
and
inc
sbb
ret
sub
sub
and
sub
adc
xchg
adc
jne
xchg
add
in
scas
add
and
popw
ja
nop
inc
and
mov
outsb
and
xor
test
jo
inc
mov
sbb
in
test
mov
and
js
push
test
ror
inc
sahf
jmp
sub
data16
mov
push
fldcw
jle
and
jno
mov
cmpsb
pop
mov
adc
pop
sbb
or
sub
andb
les
adc
das
fwait
shll
push
or
xorb
push
sbb
cld
mov
insl
xor
lds
or
dec
rcrb
out
adc
and
sub
ss
fs
mov
fcoml
and
cmp
loopne
xchg
in
lret
add
mov
fsubrl
pop
jb
insb
jl
push
arpl
int3
pop
xchg
and
xchg
and
sbb
mov
in
outsl
or
imul
cs
pop
mov
jo
insb
jo
jnp
jmp
insb
add
clc
push
pop
xor
and
lret
and
push
fdivs
test
cmovno
sbb
sub
sbb
and
sbb
fs
inc
sbb
fs
inc
push
or
add
pusha
mov
iret
out
pop
dec
push
enter
pusha
in
inc
push
jle
xchg
cmpsb
in
push
je
je
push
in
leave
js
inc
cmpsb
in
js
add
cmp
add
nop
add
nop
jl
cmpb
sub
inc
xorb
nop
add
negl
or
lcall
popf
sahf
lahf
orb
and
and
and
and
mov
mov
inc
jg
jb
daa
daa
daa
daa
je
jbe
cmp
daa
daa
js
jae
and
mov
add
dec
sub
push
adc
arpl
xlat
add
xchg
clc
push
add
push
dec
mov
xlat
or
pop
adc
jmp
mov
add
fisttps
adc
sbb
test
jne
mov
jmp
das
inc
dec
xor
cmp
jle
jge
sub
add
addr16
add
mov
push
test
cmpl
or
sti
jge
fs
leave
in
sbb
add
sub
adc
fdivs
mov
hlt
dec
jo
test
pop
inc
gs
add
jl
push
or
or
mov
mov
sbb
mov
movzwl
jg
jecxz
fstps
lds
push
clc
inc
pop
push
cmp
je
mov
arpl
and
sbb
add
jmp
jg
in
jne
jmp
std
loopne
jle
mov
insb
sbb
test
out
jne
mov
jg
push
push
mov
mov
mov
cmpb
je
fistps
push
pop
lar
decb
ja
lods
jg
pop
jecxz
jmp
call
jmp
adc
mov
cmp
fbstp
mov
add
adc
add
scas
dec
or
mov
into
or
jg
and
mov
insl
adc
mov
in
sub
in
push
push
adc
lcall
ja
cmpb
ja
jb
add
add
call
and
imul
or
insb
insl
loopne
inc
mov
push
fbstp
jle
push
incl
xor
ds
cmp
pop
dec
fwait
xlat
or
iret
icebp
xchg
add
or
lods
cmp
fwait
mov
enter
inc
test
cmp
les
or
rclb
sbbb
pop
jb
daa
aaa
add
jg
jbe
js
add
je
aaa
xor
je
and
scas
ja
clc
pop
and
push
mov
mov
mov
cmp
pop
pop
out
or
adc
dec
fsubp
repnz
outsl
or
int3
pop
outsl
popa
pop
mov
daa
daa
push
outsb
ja
js
add
cmpb
or
mov
les
andl
sub
ljmp
xorb
arpl
mov
and
cs
xchg
shrb
sbb
outsb
or
sbb
lods
mov
or
cmp
pop
sub
xor
mov
adc
lods
pop
add
mov
repz
add
scas
sbb
and
xor
jnp
cmp
cli
sbb
adc
cmpsb
imul
shrb
mov
fldt
fstps
popf
inc
nop
mov
jp
adc
pop
add
or
inc
add
ret
data16
insl
and
inc
fistpll
pop
imul
sbb
pop
addb
rcl
rorb
cmp
jecxz
push
mov
xchg
aaa
or
jns
push
and
dec
pusha
jne
mov
in
ss
out
sub
add
aad
mov
fistpll
outsl
xor
sub
mov
shlb
jmp
add
jmp
sbb
sub
cmp
adc
push
or
daa
or
dec
xchg
pushf
test
lock
rcl
jl
scas
push
mov
jp
rcrb
loopne
jns
jno
pushl
jl
add
call
push
out
mov
mov
and
das
sub
mov
add
mov
cltd
cmc
pop
adc
pop
add
or
dec
add
mov
add
jbe
fnstcw
nop
inc
fxch
cld
ds
dec
cmp
insl
mov
cmp
inc
fwait
or
push
call
adc
test
add
jnp
and
xchg
mov
fsts
mov
mov
jg
xor
mov
mov
imul
addb
and
mov
fs
gs
outsl
push
mov
sbb
sbb
adc
cwtl
fdivs
aad
sbb
sub
test
insb
jns
adc
dec
movsb
push
inc
push
jl
idivl
int3
roll
jl
pop
aaa
push
push
popf
std
or
inc
je
insb
or
addr16
or
xor
insb
adc
test
mov
push
ds
xor
xchg
mov
mov
or
je
add
data16
inc
es
sbb
lods
or
dec
gs
adc
test
lea
add
nop
sbbb
mov
push
jle
jge
or
fildll
or
jbe
add
push
push
gs
or
push
in
dec
icebp
daa
and
push
push
add
popa
leave
ds
lods
xchg
addb
cltd
mov
shlb
lcall
inc
inc
outsb
xchg
cmp
sti
mov
popf
xchg
ret
or
mov
push
repnz
mov
dec
add
xor
leave
popa
and
jg
inc
add
jle
or
cmpsw
inc
pop
lods
nop
scas
xchg
dec
adcl
xchg
pop
mov
pop
in
scas
sub
and
leave
adc
fiadds
leave
data16
dec
pop
cmp
mov
pop
mov
mov
adc
sub
jno
cli
xor
dec
imul
scas
cld
cld
in
xchg
int
scas
adcl
sub
dec
movsl
jnp
enter
push
mov
loope
cmovne
pusha
pusha
inc
adcb
add
push
inc
adc
dec
sets
imul
insb
cmp
dec
stos
xor
lret
mov
int3
out
add
xor
test
fdivrl
stos
mov
add
pop
sub
cmp
and
mov
rclb
stos
adc
xchg
scas
mov
add
pusha
das
faddl
push
neg
pop
jo
pop
add
adc
push
xor
pop
push
mov
lcall
lock
inc
mov
test
movl
pusha
or
test
lahf
clc
sbb
subl
mov
adc
test
lcall
lock
push
pop
sbb
cld
inc
lock
xlat
in
add
daa
das
test
adcl
adc
pop
mov
popf
mov
adcb
sbb
cmp
sbb
nop
pop
cmp
cmovns
jae
jg
cmc
fs
jo
ja
das
pushf
jae
push
rclb
sahf
cmpsb
add
scas
loopne
popa
in
cmp
into
test
scas
xchg
push
pop
xlat
xchg
cmp
push
add
nop
js
pushf
mov
mov
fbstp
psubb
mov
mov
pop
mov
adc
imul
ror
fs
es
pop
imul
push
cld
mov
mov
imul
nop
sahf
cmp
iret
mov
mov
test
dec
cmp
xchg
scas
pop
sbb
ljmp
or
jg
mov
cmovge
xchg
xchg
pop
xchg
test
pop
and
or
ret
mov
inc
shll
in
lock
lds
in
vmaxps
xchg
mov
jbe
mov
out
rolb
je
das
ret
ret
jnp
ficomps
dec
pop
mov
cwtl
pop
jbe
mov
xchg
hlt
out
adc
mov
jle
or
sahf
mov
pop
and
push
push
pmullw
pop
pop
and
pusha
add
dec
pop
xchg
push
loopne
shll
pop
enter
pop
push
mov
mov
sahf
sub
sbb
daa
xchg
mov
xchg
push
rcll
dec
sti
lret
fadds
in
mov
ljmp
leave
mov
mov
mov
and
add
lods
sub
scas
out
pushf
pusha
inc
and
icebp
mov
into
and
imul
notl
xchg
mov
xor
push
mov
xor
or
into
inc
push
into
call
add
mov
fcoms
andl
mov
sub
mov
insl
sbb
mov
inc
shlb
inc
push
and
inc
push
nop
or
aam
and
andps
and
inc
in
sbb
xor
adc
adc
and
xor
sbb
insb
and
xor
push
cmp
adc
jo
mov
mov
push
stos
jnp
mov
or
xor
roll
sbb
xor
lods
dec
pop
insl
add
mov
mov
mov
pop
add
mov
cmp
add
pop
cmp
pop
lcall
adc
loope
xor
pushf
push
mov
fwait
nop
into
aas
or
adcb
pushf
inc
or
xlat
cs
dec
stos
xorl
push
sub
mov
mov
add
dec
jle
movsb
lahf
int3
mov
jl
hlt
fdivrs
and
push
aaa
fsts
faddl
sti
sub
and
push
adc
sub
xchg
mov
mov
mov
mov
xor
adc
inc
pop
inc
or
sbb
es
aaa
inc
shrl
sub
scas
adc
xchg
cld
pop
call
aaa
dec
xchg
sahf
mov
dec
enter
inc
fsubrs
mov
xchg
dec
enter
aam
dec
shll
int
lods
mov
outsl
push
shll
ror
pop
sbb
incl
int
dec
addb
cs
sub
mov
roll
out
aas
jl
repnz
addr16
mov
dec
pop
repz
mov
xor
push
repnz
add
mov
or
add
adc
pop
fmull
shrl
jbe
push
xor
sub
ds
sbb
cli
gs
cld
sti
jmp
cli
stc
clc
push
push
push
push
push
push
imul
lock
mov
call
pop
sbb
in
hlt
clc
add
mov
rcrl
lock
aam
out
or
add
jo
mov
push
sbb
cmp
mov
xchg
popa
push
sbb
sub
pop
add
adc
call
pusha
in
push
add
addr16
nop
add
cld
adc
xor
roll
into
or
test
ficomps
push
inc
imul
sti
sub
inc
arpl
cmp
xchg
pop
ffreep
ss
xchg
rclb
push
lods
push
mov
xor
imul
enter
rolb
sti
shlb
cmp
decl
in
add
pop
push
rolb
int3
fdivs
dec
jp
sub
xlat
test
call
dec
int
mov
jns
test
sbb
xor
inc
dec
push
dec
push
out
add
pop
push
icebp
xor
mov
push
push
popf
shlb
out
and
insl
dec
dec
sbbb
lahf
mov
je
push
adc
cmp
ds
sti
lock
lock
jb
jne
push
xchg
cmp
aas
add
scas
jae
cltd
add
out
cmpsl
dec
mov
lods
daa
sbb
xor
add
push
jo
dec
popa
sbb
pop
cmp
xlat
bound
test
inc
movb
push
push
je
xchg
or
dec
and
jmp
or
lret
mov
aaa
adc
cmpsb
pop
pop
or
and
in
cmc
sub
add
mov
cld
sub
fucomi
xchg
subb
or
mov
sbb
adc
add
inc
mov
and
mov
test
mov
stc
mov
ret
add
divb
sbb
and
cmp
nop
xlat
pop
cltd
lds
add
xchg
pop
lea
push
cmp
lret
sbb
cmpsb
cmp
test
mov
xor
pop
add
and
sbb
and
clc
inc
hlt
lock
js
and
loop
xor
push
sub
neg
mov
sbb
decl
pop
mov
lock
mov
mov
or
push
inc
or
xchg
ret
mov
jbe
jne
pop
add
jno
dec
add
jmp
or
push
andl
xor
fwait
xchg
dec
pop
add
mov
fnop
sub
iret
in
push
push
int
jle
and
xchg
out
add
cwtl
and
test
pcmpgtw
ja
popf
out
daa
or
aam
and
fmuls
sbb
dec
out
inc
cmp
sbb
aaa
add
icebp
adc
cmpsl
cwtl
and
repnz
add
sub
test
or
ja
add
push
mov
imul
rcrb
iret
inc
and
je
mov
sbb
in
sbb
imul
xchg
cmp
push
mov
cmovp
push
adc
inc
fistps
add
xchg
xchg
pushf
mov
js
mov
cmp
mov
push
je
adc
iret
push
lea
inc
jg
xor
subb
mov
mov
mov
sbb
push
inc
dec
jne
and
push
mov
adc
test
lds
nop
jbe
mov
jmp
add
jg
mov
ja
imul
xchg
sub
xor
mov
xchg
pop
adc
or
add
inc
xchg
fwait
push
cmp
dec
shrb
cltd
sub
lds
shll
into
inc
fs
lods
jmp
push
sub
push
mov
lcall
call
cmc
cltd
pop
sbb
sbb
adc
sub
movsb
test
and
sbb
cmp
jp
pop
jp
dec
call
ret
xor
add
stos
inc
or
jne
mov
imul
in
xor
cmp
push
xor
sbb
jecxz
fisttpl
call
popf
push
sub
popf
in
mov
adc
jl
adc
add
sbbl
aaa
xchg
and
mov
inc
test
test
cltd
cwtl
outsb
mov
in
int
shlb
orl
mov
xor
jo
pop
fildl
rorb
aaa
pop
xchg
mov
hlt
add
andnps
add
sub
xor
dec
imul
inc
stos
inc
movsb
mov
sub
push
orb
shll
xchg
add
xor
movb
into
sub
enter
pop
fidivl
rorb
xchg
and
add
sub
push
loope
lock
mov
aam
andb
in
shlb
testl
add
inc
outsb
popa
and
cwtl
ss
leave
daa
xchg
pushf
out
sub
enter
dec
jno
xorb
and
inc
shrb
cmpsl
out
test
adc
pop
outsl
add
psubq
mov
cld
pop
repnz
aam
ja
mov
popf
imul
sahf
leave
push
fdivs
cmp
adc
popf
mov
or
inc
ljmp
sbb
mov
movsb
orl
add
lcall
or
repnz
pop
stc
test
shll
push
jb
and
rcll
xchg
lds
sbb
lcall
and
roll
inc
pop
sbb
lahf
xor
mov
push
jb
cmp
lahf
lahf
mov
adc
repnz
mov
add
push
cmp
and
xorb
rcl
mov
push
push
or
jae
addr16
mov
out
pop
and
or
or
pop
aad
jmp
push
negl
stc
rolb
mov
push
mov
push
leave
mov
sbb
and
stos
xor
mov
or
imul
imul
jge
loopne
add
sbb
or
cmp
pop
jne
dec
cld
mov
jmp
ret
rolb
mov
loope
in
jp
push
push
inc
dec
jl
pop
cmp
jne
sbb
sbb
mov
outsb
fwait
jns
sub
mov
lahf
loopne
pop
inc
dec
add
fstl
es
pop
pop
insl
mov
loop
or
cmpsl
scas
ja
rorl
mov
mov
cwtl
cmp
les
pop
rolb
mov
xlat
mov
and
data16
ficoms
mov
sbb
dec
insl
mov
push
inc
push
and
ss
pop
xchg
dec
push
xor
adc
mov
in
mov
mov
fwait
jo
pop
push
mov
ret
inc
sub
pop
sets
add
add
xlat
aam
xor
fdivrs
mov
dec
mov
pop
js
jge
or
xlat
arpl
popa
sarb
mov
pop
clc
insb
mov
out
addb
lcall
push
xor
insl
icebp
mov
test
movsl
push
cmpb
cwtl
pusha
jne
lea
mov
imul
pushf
add
dec
sbb
cmp
call
jo
je
mov
je
mov
fsubs
cvtdq2ps
shlb
xchg
rcll
sbb
cmp
adc
add
adc
repz
movsl
inc
imul
push
cltd
shlb
pop
rcr
imul
es
adc
rorb
dec
inc
and
repz
fdivrs
dec
jmp
push
and
cwtl
test
push
in
cmp
pop
or
subl
jl
ret
or
imul
popa
mov
and
mov
push
imul
sbb
out
dec
imul
int
jno
sarl
popa
push
add
or
movsl
shr
cld
or
fsubrs
mov
xchg
es
jns
lea
fists
or
mov
cmp
push
addr16
jb
mov
outsl
or
lds
xchg
aam
lock
gs
jnp
push
shll
lea
sbb
cmpsl
adc
jae
sub
mov
rolb
in
jne
mov
push
jne
xchg
adc
push
pop
jne
mov
or
dec
shll
and
push
hlt
jmp
idivl
div
mov
jno
dec
jg
and
into
sub
test
mov
inc
mov
lds
sbb
mov
xchg
xorl
mov
mov
loope
xor
dec
or
pop
add
test
pushf
in
mov
popa
jae
jae
inc
adc
fiadds
mov
incl
or
leave
in
mov
insl
push
push
cwtd
add
setl
pop
pop
and
jl
sbb
into
ret
andl
mov
or
std
adc
shl
loop
adc
or
aaa
mov
inc
mov
or
mov
or
xchg
cs
ret
das
cmpsl
add
fisubl
push
nop
fwait
aam
test
sbbb
sub
enter
lea
inc
jb
test
in
mov
into
stos
test
add
cld
add
push
outsb
inc
inc
fadds
xchg
push
sbb
adc
movsb
push
cmpl
lret
lret
mov
mov
inc
ss
mov
aad
mov
jmp
inc
cmp
ja
mov
outsb
or
repnz
leave
decl
push
pop
stc
std
jle
stos
dec
add
sbb
sbb
inc
sbb
rolb
or
and
adc
in
cs
jp
mov
cmp
je
mov
add
mov
aaa
in
mov
sbb
jle
jge
mov
pop
xlat
rorb
orl
rcl
sub
clc
mov
scas
shl
lods
add
js
repnz
push
jns
andb
pop
jle
lock
jle
jmp
pop
addb
outsl
dec
test
arpl
add
call
sub
sub
jg
dec
test
inc
mov
pusha
sub
inc
inc
pusha
outsb
push
pop
mov
cmp
mov
pop
dec
shll
mov
add
dec
jns
adcl
movsl
lahf
shrl
xchg
push
xlat
in
jmp
sub
bound
or
daa
push
dec
cmpb
orl
popf
xchg
inc
jne
mov
jmp
dec
add
add
jb
dec
mov
adc
mov
sub
mov
pushl
outsl
cmp
add
lds
test
add
xchg
mov
jmp
pop
popa
pop
jle
and
inc
cmp
push
enter
mov
add
add
rclb
imul
movsl
and
loopne
mov
dec
jbe
inc
stc
pop
sar
mov
shl
sbb
lea
in
cmp
je
add
fsubs
lcall
and
jmp
pop
shll
lds
inc
addl
inc
stos
fstpt
pop
pop
sub
out
adc
jl
pop
cmp
jae
fisttpl
leave
je
stos
adc
nop
icebp
add
btr
push
add
mov
sub
push
push
inc
adc
jmp
fmuls
sbb
testl
scas
and
jg
or
cli
pop
ja
xor
scas
loop
bt
jb
jbe
iret
mov
roll
inc
ret
push
in
fists
adc
push
inc
cmp
jne
inc
decl
jne
les
inc
mov
getsec
xor
mov
je
push
push
push
add
scas
pusha
mov
adc
mov
sbb
mov
lods
pop
xor
fmul
jae
shr
lock
sbb
adc
pop
or
rcrb
push
scas
and
jo
imul
cs
push
mov
fs
sbb
loopne
js
inc
ret
mov
test
mov
jns
es
mov
dec
push
movsb
cwtl
mov
aaa
jns
stos
mov
jne
push
xor
pop
sbb
pop
mov
add
mov
xor
sbb
push
or
popl
cmpsl
adcb
aas
or
xor
cmp
adc
adc
push
aam
or
add
and
jle
push
dec
inc
daa
cmpsl
and
mov
or
hlt
sub
pop
or
ret
push
mov
gs
jns
add
cmpsb
and
mov
mov
pop
aas
popa
or
pop
jmp
pop
fsubs
pusha
inc
mov
sub
push
push
call
and
add
adc
rcrl
dec
aaa
xchg
push
loope
enter
lock
popf
sub
sahf
xchg
xchg
adc
sbb
in
sbb
mov
cmp
faddl
mov
mov
or
sbb
in
ret
imul
movsb
pusha
in
bound
mov
enter
mov
adc
pop
push
fmull
or
pop
inc
jb
adc
inc
pop
cmc
in
aam
adc
add
inc
push
call
xor
and
push
jo
pop
add
dec
pop
sbb
ja
incl
fsubr
es
dec
clc
rcrb
repz
adc
mov
inc
lahf
cmp
mov
in
mov
shr
jge
pop
inc
scas
mov
push
mov
pop
adcb
xor
mov
movsb
push
pop
daa
mov
decl
jne
add
add
jb
test
push
inc
mov
in
mov
jo
push
mov
mov
ds
and
jl
fnstcw
pop
pop
in
jo
lock
pop
in
push
in
or
jecxz
sbb
inc
jne
inc
shll
test
mov
lock
push
sub
out
out
and
jo
or
mov
jo
inc
cmpsb
cmc
iret
lds
inc
mov
pop
aaa
adc
mov
add
xor
ss
xchg
mov
pop
hlt
adc
enter
imul
loope
out
insb
aad
aad
xor
and
dec
push
push
xchg
and
mov
xchg
std
lock
or
stos
shrb
and
and
mov
xor
sbb
add
push
loopne
aad
sub
sub
in
adc
ror
je
dec
xor
add
inc
xchg
adc
mov
cmovns
mov
call
sbb
jo
push
inc
aam
loopne
sub
lds
mov
pop
call
stos
lcall
es
insl
add
xor
mov
cmp
out
sbb
sub
mov
cwtl
and
sbb
xchg
cld
or
xchg
mov
xchg
xor
jl
aam
int3
pop
mov
sbb
xchg
subl
or
rolb
pop
add
adc
inc
push
xor
and
and
addr16
insb
and
stos
shlb
push
rolb
xor
jo
or
adc
into
lods
xor
mov
mov
push
lock
xchg
or
xchg
insb
js
loopne
into
fdivrl
xor
inc
pop
daa
rcrl
adc
add
jae
fwait
rolb
lock
or
pop
pop
test
stos
aas
or
pop
or
gs
add
mov
push
lret
cli
popa
pusha
mov
jb
adc
rcrb
enter
out
mov
mov
in
push
clc
clc
add
add
mov
imul
inc
pop
sub
lea
xlat
int3
push
push
push
inc
loopne
out
and
mov
mov
mov
xlat
sbb
in
addb
imul
inc
xor
loopne
push
add
pop
pop
leave
in
mov
outsb
mov
pushf
loope
adc
push
lahf
imul
inc
movsb
push
inc
out
xor
sbb
mov
test
jmp
mov
out
push
cmc
test
cmp
inc
lock
push
aad
xchg
push
dec
iret
scas
add
and
inc
je
xor
sbb
js
es
push
add
jns
mov
pop
dec
adc
mov
icebp
xchg
xchg
cs
sub
adc
sub
fwait
mov
out
and
add
in
xchg
and
or
ljmp
les
and
dec
stos
mov
xchg
gs
das
mov
pop
and
jmp
mov
add
lret
sub
jno
jns
and
mov
cmp
add
int
push
and
mov
xor
ror
pop
push
jns
sub
mov
sbbb
pop
test
outsb
or
das
or
jae
hlt
jg
xchg
loop
loope
jae
cmp
pop
xor
ja
lea
jno
cmpsl
movb
sub
cwtl
les
sub
lock
popa
pop
sbb
inc
adc
imul
mov
dec
sub
jne
mov
add
mov
addr16
aaa
int
out
out
mov
sub
jb
add
js
fdivs
pop
mov
pop
fs
jmp
mov
jnp
fwait
popa
aas
aad
jbe
jno
loope
push
sub
inc
sbb
sti
adc
push
cmp
jne
mov
outsb
add
add
pusha
outsl
hlt
iret
test
inc
adc
test
fs
inc
add
dec
movsb
fbstp
inc
add
daa
int
and
idivl
pop
add
outsb
pop
orb
sbb
pop
aaa
push
add
icebp
es
addr16
std
ja
sub
int
scas
mov
cmp
enter
add
sbb
es
sub
add
mov
mov
mov
pop
push
hlt
into
pop
aam
adc
xchg
adc
cs
pop
lea
cmp
inc
imul
sbb
add
cmpsb
jp
jno
and
sbb
lock
inc
add
xchg
shrl
xorl
xchg
mov
lods
or
sti
or
shlb
mov
aaa
sub
jnp
pop
sub
adc
xor
loopne
movsb
xchg
test
loope
pop
andl
push
orb
mov
or
lock
inc
stos
imul
adc
or
mov
push
movsb
rol
or
xchg
dec
or
test
or
iret
mov
sbb
adc
adc
es
push
pop
cld
rorl
mov
dec
sbb
and
fwait
rolb
xchg
lock
push
adc
or
fidivrs
je
jg
mov
ficomps
cmp
shr
sub
sbb
and
jge
lea
mov
rorl
adc
mov
add
add
repz
ror
loopne
enter
and
add
fistpl
bound
inc
sub
xchg
sbb
adc
aas
jnp,pt
test
fildl
dec
push
sbb
pushw
mov
pop
mov
mov
movb
mov
lret
or
test
dec
push
scas
test
xchg
sbb
add
or
arpl
sbb
cmc
pop
leave
mov
int
je
sarb
xchg
test
mov
popf
shrl
scas
cmpsl
add
ljmp
mov
lea
push
push
xchg
imul
inc
and
rorb
loope
push
stos
jo
jecxz
test
incl
repnz
dec
inc
xchg
push
rcll
rorl
pop
push
pop
cmp
in
jl
andl
fs
add
roll
jae
or
dec
cmp
cmp
jg
jl
cltd
in
inc
js
xchg
cmp
jne
mov
ds
add
mov
fldt
adc
fistpl
loope
mov
jns
hlt
jl
mov
dec
add
outsb
loopne
ffree
sbb
js
mov
jg
je
and
cwtl
loopne
add
sub
cmpsl
adc
loope
data16
pop
xchg
sahf
stc
lret
or
insb
shrl
out
call
push
es
add
sub
add
push
dec
xor
add
add
xchg
cmpb
daa
add
fdivrp
cwtl
ret
setns
ret
and
lea
shll
sahf
iret
sbb
and
inc
aam
insl
pop
outsl
insl
ret
jno
cltd
sub
fwait
popa
fwait
popf
jmp
push
push
subb
popa
sbb
mov
aas
movsl
gs
ret
cmpb
cltd
mov
sbb
jle
push
mov
add
push
nop
dec
jnp
add
dec
xchg
jno
xor
mov
pop
push
sbb
jge
test
pushf
ret
mov
add
mov
inc
mov
and
ja
mov
adc
jge
lret
sbb
sbb
add
into
jne
sbb
enter
enter
xor
dec
mov
xor
inc
mov
pop
ret
mov
push
jo
pusha
push
cmc
lret
imul
or
les
mov
push
xor
popa
aam
inc
pop
stos
movsl
bound
mov
js
lock
jbe
or
outsl
adc
and
push
sar
jg
sub
inc
xchg
repz
andl
sbb
jl
adc
add
sbb
xor
mov
shlb
out
jbe
push
pop
xchg
or
xchg
lcall
outsb
insl
call
jge
lds
cltd
cmp
or
add
in
in
jmp
shrb
loop
mov
mov
adc
jnp
mov
imul
scas
sbb
mov
lret
pusha
mov
jg
in
inc
mov
sub
nop
addb
adc
pushf
add
jo
xchg
pop
sub
push
lret
inc
adc
ret
pop
icebp
movsb
lret
lds
mov
mov
mov
clc
mov
xchg
sub
pop
ret
jl
dec
dec
imul
test
xor
sbb
or
popa
or
aam
jbe
out
sbb
xchg
jo
inc
in
pop
sarb
or
push
lret
shrb
popa
sub
push
loope
push
inc
loope
push
pop
jns
faddl
xchg
faddl
popa
in
icebp
jb
adc
mov
divb
add
outsl
shl
je
icebp
lret
dec
mov
les
lea
aaa
roll
movsb
add
and
in
movsl
mov
xchg
iret
repnz
aad
daa
add
xchg
in
arpl
rorb
leave
jge
jge
leave
loopne
push
xor
test
add
loope
je
inc
ret
or
repnz
rorl
mov
stc
dec
loope
adc
rol
and
mov
mov
jnp
sub
adc
mov
jae
sub
cmpsl
pop
cmp
js
ljmp
cmp
mov
mov
or
lea
push
orb
or
dec
or
adc
mov
fistps
add
sbb
imul
outsl
aas
into
push
inc
movsb
nop
insb
xlat
into
inc
mov
or
dec
pop
ret
outsl
lock
daa
xchg
je
inc
movsb
out
mov
add
negl
loope
ds
adc
jbe
dec
or
pop
jne
xchg
or
add
mov
lea
idivl
addw
ret
inc
cmp
icebp
or
mov
or
andl
test
pop
push
jno
or
xchg
pushf
rcll
sti
je
push
jne
pop
fadd
xor
adc
push
push
popf
dec
sbb
sub
xor
mov
ret
lods
mov
shrl
push
sbb
xchg
dec
in
out
dec
shrb
subl
loopne
js
adc
xchg
ret
add
lds
and
movl
cmp
sub
mov
add
insl
scas
hlt
pusha
repnz
leave
sbb
aad
in
lea
dec
enter
shlb
imul
push
and
fwait
js
sbb
out
aas
mov
jns
icebp
xor
adc
les
inc
pop
inc
movsb
jp
push
test
sbb
shr
les
adc
test
pop
push
pop
movsb
mov
inc
rcr
mov
push
push
mov
aaa
adc
xchg
addr16
sbb
adc
sbb
popl
or
push
rorl
cld
out
sbb
sar
repnz
loope
cmp
sub
add
shll
add
or
or
bound
imul
push
aam
mov
mov
push
adc
inc
out
sub
jo
mov
adc
push
mov
arpl
pop
inc
adc
or
and
pop
inc
adc
test
inc
xchg
pop
adc
xchg
push
sub
mov
ja
ficomps
xchg
jne,pn
cmpb
jmp
or
and
out
mov
dec
pushf
mov
dec
xor
adc
add
adc
inc
or
jne
or
out
sbb
add
or
sbb
push
push
movb
xor
sub
and
test
xor
mov
arpl
inc
and
and
aam
or
xor
jo
stc
pop
ret
daa
add
inc
adc
add
xchg
inc
sti
dec
loope
jge
adc
add
xchg
jo
xchg
notl
cltd
fsts
lock
and
inc
sarb
shl
mov
mov
fmuls
inc
mov
inc
inc
lahf
int
in
and
popa
xchg
push
and
jl
inc
movsb
testb
jno
cmp
inc
or
push
cld
xchg
jb
mov
into
mov
sbb
mov
aad
sbb
sub
clc
xor
cmpl
sbb
cmp
dec
xchg
es
push
fwait
cmp
xchg
pop
imul
icebp
cmpl
dec
push
jne
pop
and
jne
xor
daa
xchg
or
inc
imul
sbb
dec
aam
pop
fwait
cli
mov
mov
dec
jmp
aaa
lock
inc
cmp
jl
and
dec
popa
sub
xorl
push
aaa
sub
xchg
sub
pop
xor
andw
push
inc
daa
jo
fldenv
rol
cmp
sbb
cmp
push
ret
fwait
cmp
mov
inc
jo
jg
xchg
add
pop
cmpsl
mov
pop
or
or
fnstcw
lea
cli
sbb
inc
hlt
int
adc
adc
push
mov
sahf
adc
xlat
xchg
sub
add
inc
add
sub
add
xlat
xor
enter
add
cmpsb
bswap
aad
or
insb
mov
shll
inc
mov
xchg
inc
pop
sbb
cmc
mov
std
push
pavgb
lret
add
push
inc
pop
adc
sub
js
out
dec
test
mov
mov
das
fnstsw
mov
fmuls
mov
clc
pushf
ret
mov
lock
jo
cld
shl
mov
inc
call
enter
jo
icebp
cmpsb
fld
stos
cmpsl
adcl
or
jae
popa
mov
and
ds
dec
mov
push
dec
enter
push
add
movb
adc
mov
pusha
loopne
xchg
mov
or
inc
fmull
push
xorl
jo
sbb
push
push
pop
add
or
push
mov
test
pushf
add
jmp
adc
and
sub
pop
mov
inc
lret
call
inc
xor
lret
push
cmovbe
sbb
es
push
add
inc
pop
and
add
pop
lds
aam
mov
cmp
addb
pop
adc
aaa
jns
popf
sar
push
lods
popa
ret
nop
or
das
outsl
or
or
jne
add
adc
rcl
inc
add
jmp
xor
rolb
fcoml
push
ss
fists
jl
fcomi
nop
xor
inc
div
pop
or
sub
mov
int3
jmp
fcoms
test
sbb
clc
arpl
fiaddl
shlb
or
movsl
cmp
cmp
lods
xor
leave
xor
pop
inc
sub
movsb
inc
ljmp
or
test
in
std
faddl
add
push
lock
mov
adc
and
jl
mov
adc
add
pop
mov
int
xlat
es
dec
jne
adc
jbe
inc
push
dec
lods
add
scas
lods
mov
jmp
xchg
pushf
hlt
test
xor
mov
cmpsl
mov
pushw
inc
xchg
pop
inc
inc
popf
orl
mov
xor
loopne
xchg
enter
js
push
cmpsb
jne
hlt
je
sub
popf
push
pusha
mov
mov
insb
loopne
popf
mov
out
pop
jle
push
sub
push
cmp
iret
xchg
rol
jl
jecxz
fadds
lods
xchg
xorl
mov
mov
sbb
ret
pshufw
or
cmp
lock
psubusw
lret
jl
mov
dec
mov
add
and
jno
cwtl
inc
std
xor
or
jne
pop
test
iret
dec
xchg
inc
xor
outsl
sbb
mov
xor
push
cmp
mov
xchg
cwtl
or
in
cmp
bound
dec
orl
and
inc
xor
adc
in
jo
adc
call
int
jne
xchg
out
js
inc
lods
sub
add
sub
cmp
and
dec
std
ljmp
je
cmp
nop
mov
out
sub
insl
test
xorl
inc
sbb
pop
dec
test
popf
pop
mov
adc
and
dec
ljmp
cmpsl
push
iret
sbb
or
lock
shll
testb
inc
mov
adcb
mov
adc
hlt
cmc
imul
jo
jl
cmp
cmpsl
mov
rol
dec
aaa
mov
fmull
nop
pop
add
jge
call
lods
sub
test
mov
data16
fdivrs
gs
push
div
shlb
sub
int3
ret
mov
dec
dec
xchg
pop
or
movsl
mov
out
test
or
xor
call
add
ret
jp
dec
push
pusha
loopne
pop
test
xchg
sbb
pop
push
popf
mov
mov
push
xorb
and
mov
loope
sbb
cld
and
in
sub
int3
lock
int
xchg
jo
test
or
mov
mov
dec
lahf
xchg
in
add
das
push
hlt
flds
mov
iret
push
pop
mov
dec
sbb
adc
jge
dec
xlat
loope
lahf
dec
sub
lret
mov
jmp
push
push
lods
mov
das
xor
aad
mov
out
sbb
in
push
stos
popa
loopne
pop
pop
pop
jecxz
adc
loop
adc
clc
jo
push
dec
lods
add
sub
std
dec
ret
sbb
aas
aad
adc
xchg
or
or
dec
cmp
in
test
push
pop
loop
adc
sub
adc
or
cltd
and
aad
into
mov
adc
sbb
xor
inc
pop
fs
fsubrs
or
insl
icebp
gs
in
movsl
mull
add
xchg
aam
aaa
adc
ret
push
or
inc
ljmp
cmp
mov
insl
push
testb
cmp
jnp
push
loop
jae
ds
pop
jmp
loopne
pop
ss
and
mov
adc
adc
pop
push
mov
mov
mov
sub
pop
pushf
jne
loope
cmp
sbb
out
movsl
sbb
xchg
scas
shlb
add
adc
daa
xchg
in
insb
hlt
addb
std
push
jne
sbb
cmp
fimuls
xor
adc
mov
sub
xor
mov
xor
dec
and
sbb
cmp
jmp
adc
add
fcompl
sbb
fsubs
or
fsub
dec
xor
dec
add
adc
cmp
ret
xchg
shlb
int
das
sbb
xor
xor
int3
and
outsb
xchg
mov
sub
jbe
sbb
or
jnp
jbe
ds
push
adc
sbb
test
add
sti
xor
je
ss
out
mov
push
mov
jge
popa
sub
or
repnz
add
cmp
out
stc
clc
adc
stc
add
inc
cmp
pop
push
add
and
in
push
sbb
aad
cwtl
xchg
addr16
mov
movsb
popf
sbb
jecxz
nop
xchg
data16
mov
xor
fwait
or
sbb
add
lock
and
mov
adc
xchg
out
call
cmpsb
in
inc
lahf
adc
lods
mov
inc
push
xorl
cmp
in
add
ret
inc
dec
out
add
cltd
add
push
add
pop
sub
push
and
pusha
dec
imul
jecxz
cmp
mov
dec
in
dec
mov
mov
inc
cmp
ljmp
leave
leave
leave
leave
and
mov
mov
mov
sbb
xor
clc
sub
or
sbb
ss
xchg
sbb
add
movsbl
iret
xor
mov
push
mov
push
or
test
dec
cmpsl
daa
cmp
sbb
mov
ret
in
insl
invd
xchg
ret
cltd
fwait
arpl
lods
int3
out
movsb
mov
or
mov
push
aas
ret
mov
push
jmp
and
cmp
jne
mov
mov
push
mov
pop
sbb
fwait
stc
aaa
fsubl
dec
movsl
xor
ljmp
outsl
daa
in
pusha
leave
adc
dec
sub
or
jl
and
jns
push
xor
mov
out
pop
sub
in
stos
jo
call
push
or
mov
fdivrl
dec
jbe
aam
stos
lods
fmuls
leave
ljmp
aad
lret
dec
dec
adc
xchg
dec
push
add
sub
in
inc
xchg
inc
xor
sub
dec
bnd
or
push
add
or
js
hlt
fdivr
xchg
sbb
cmpb
jmp
mov
or
sbb
test
es
push
jo
fpatan
fcoms
xchg
testl
scas
pop
pop
add
jmp
cmp
xor
and
adcl
ljmp
sub
jmp
sarl
ljmp
cmp
xor
stc
aam
mov
scas
lock
mov
sub
pop
sbb
jge
sub
dec
pop
adc
xor
push
mov
out
js
push
fisubl
jno
sub
xlat
icebp
in
xchg
addl
out
sub
call
mov
cmp
cmp
add
push
movsl
or
add
adc
xchg
cmp
fmull
test
sbb
dec
imul
nop
bound
hlt
leave
sub
in
jp
sbb
in
and
out
xor
dec
sti
add
push
add
sbb
and
jnp
movsl
mov
adc
xor
stos
and
nop
pusha
push
xchg
xchg
repnz
cmp
jg
push
mov
leave
loop
cli
call
add
sub
clc
jnp
xchg
add
xor
cmpsb
add
aam
add
mov
adc
or
rcr
or
dec
shll
fwait
mov
lock
in
or
dec
pop
add
outsl
xchg
push
ret
ljmp
cwtl
push
icebp
pop
xor
scas
loopne
enterw
xchg
xchg
pop
fnsave
aaa
cmpsl
in
jbe
pop
adc
cmp
pushf
mov
out
orl
in
popa
repnz
loopne
leave
repnz
and
sub
or
xor
cmp
xchg
push
mov
push
xor
fisubrs
fiadds
sbb
and
sbb
cmp
inc
push
jp
mov
gs
adc
rcrb
cld
dec
or
cli
add
adc
daa
jo
and
jge
subl
test
bound
pop
lret
icebp
mov
adc
in
stc
mov
xchg
mov
aaa
jno
pop
jmp
inc
pop
jge
or
push
push
adc
xor
int3
mov
or
mov
mov
cmp
and
rcl
add
rcr
fadd
popf
adc
shl
push
sbb
mov
adc
bound
dec
test
scas
out
and
loope
jecxz
jbe
jb
xor
shl
popf
push
or
push
sub
cmp
data16
add
pop
mov
repnz
hlt
mov
daa
fmul
ss
xor
mov
mov
out
icebp
inc
aam
ret
lea
sbbl
les
dec
orl
adc
je
hlt
lods
lret
imul
and
cmp
hlt
xor
xor
adc
xor
xchg
mov
xchg
sub
inc
dec
pop
lds
add
sbb
rcl
dec
mov
das
xchg
rcl
test
adc
mov
xor
imul
cmpsl
inc
mov
xor
sbb
dec
je
xor
sbb
sbb
fcom
aad
shrl
popf
testb
pop
sbb
pop
jmp
or
loopne
and
test
jno
push
xchg
cmp
sub
andl
mov
jle
cmc
push
push
popa
xor
inc
or
pop
cmp
test
inc
and
clc
cmc
fidivs
loopne
mov
outsl
xor
loopne
stos
ret
jmp
sbb
mov
rorb
pop
lahf
inc
aam
adc
js
rolb
inc
sbb
clc
rclb
sub
nop
sbb
mov
negb
cmc
lret
jne
gs
js
cmp
push
mov
cmp
adc
mov
mov
fld
adc
adc
cmp
fdivs
fcomip
movsb
or
scas
out
pop
inc
jae
addl
inc
inc
popf
push
int
inc
jo
jecxz
jae
cld
mov
sub
pop
push
addb
ds
dec
adc
dec
inc
or
xchg
cmp
adc
js
adc
dec
je
call
testl
add
xlat
addr16
daa
mul
mov
lock
or
inc
bound
test
add
ja
out
adc
pop
and
inc
inc
shrb
mov
mov
imul
mov
dec
and
mov
les
pusha
repz
cmp
cmp
mov
mov
aam
jno
out
pop
stc
push
dec
clc
xlat
dec
sbb
stc
xor
dec
pusha
jb
xchg
xchg
push
mov
imul
loope
xchg
mov
rorl
call
ss
adc
add
or
roll
mov
adc
fimuls
insl
das
pop
push
adc
in
adc
mov
dec
fiadds
cmp
add
or
popa
cli
ss
shrl
push
das
cli
rcll
jns
cld
xchg
ret
roll
mov
sbb
and
pop
mov
aaa
push
jae
inc
and
mov
orl
sub
in
and
jmp
test
addl
sti
and
inc
fildl
test
add
dec
mov
sti
rcl
aam
lcall
or
push
jbe
pop
inc
inc
push
sub
mov
callw
inc
push
call
cmp
jl
int
loopne
push
push
sbb
jno
push
jg
fsubrs
add
arpl
dec
xchg
lret
fcoml
popa
and
mov
fxch
cmp
inc
call
push
fcoms
add
in
fisttps
and
into
enter
sbb
test
scas
or
pop
cmpsl
sbb
sub
push
cmove
bound
or
push
call
adc
pusha
mov
adc
and
loopne
lret
push
test
fnstenv
pop
insb
lods
jle
mov
ja
mov
adc
lret
mov
sub
and
aaa
pop
jg
js
xchg
mov
call
jne
sar
mov
mov
pop
inc
sub
aam
fs
pop
fs
adc
lock
cli
inc
dec
inc
popa
arpl
movl
mov
lret
pop
xor
loop
repz
sarl
xor
push
in
enter
pop
fistpl
ret
clc
jecxz
sbb
dec
lock
sarb
sbb
mov
mov
fmuls
inc
inc
mov
xor
sbb
jmp
inc
rorl
loop
dec
imul
fisttpl
mov
popf
movlps
mov
call
inc
pop
sub
aas
sbb
mov
orl
sbb
add
rcrb
filds
ljmp
pop
push
jne
cmp
clc
push
shrl
cs
imul
push
push
push
jne
mov
test
aam
cmp
xchg
icebp
jno
add
rorb
mov
in
mov
xor
cmp
add
cld
out
leave
rcrl
push
daa
out
in
inc
dec
js
fs
inc
jmp
leave
subb
jmp
mov
cmpsl
mov
mov
sub
pop
pop
cld
ss
jmp
push
mov
cli
cmpsb
xor
pop
lea
dec
leave
ret
jne
jmp
jno
and
test
xchg
cmp
add
xchg
outsl
lret
shrb
xchg
mov
dec
pop
mov
out
sub
cmp
sahf
mov
lret
push
stos
add
add
inc
data16
mov
aam
int
mov
shll
pop
loopew
shlb
sub
xchg
ret
mov
movzwl
mov
iret
jle
jl
or
sbb
push
inc
push
cmp
loope
addb
add
fs
adc
xchg
imul
jg
mov
push
add
mov
mov
jnp
notl
inc
sub
fadds
imul
cmp
call
fisttps
inc
andb
add
ss
dec
cs
or
jp
enter
arpl
and
loope
push
adc
add
test
add
pop
push
mov
pop
push
inc
ret
mov
push
xchg
mov
add
mov
mov
xor
mov
fcoms
jg
inc
in
mov
fsts
sub
ss
pop
xor
hlt
pop
fiadds
bound
notl
sub
lcall
xchg
inc
loopne
add
rorl
and
add
jmp
xor
jns
and
add
push
dec
xchg
les
push
cmp
popa
mov
xchg
jg
inc
bound
jnp
fcompl
lock
pop
dec
sbb
or
sbb
popa
mov
je
xor
cmp
mov
adc
push
lock
jge
cmpsl
js
imul
in
mov
loop
imul
es
lds
hlt
dec
xchg
xor
and
filds
fbld
inc
and
pop
lret
cmp
cmc
add
je
add
icebp
das
dec
or
iret
jmp
shlb
pop
sbb
mov
push
or
mov
sbb
xchg
mov
sub
or
push
adc
lods
sbbb
test
insl
fnsave
mov
cmp
cmpb
ret
or
xor
movsl
fdivrl
jnp
cmp
mov
add
addr16
jl
fwait
pop
or
sbb
roll
jecxz
fildl
sti
rolb
mov
jnp
mov
sbb
push
mov
inc
and
xor
sbb
push
sbb
repnz
mov
mov
mov
mov
dec
loop
mov
push
call
mov
daa
leave
xchg
mov
cmc
adc
and
inc
or
faddp
adc
jp
test
or
and
inc
push
fildl
mov
ljmp
fst
sbb
arpl
cltd
adc
and
cmpsb
cmpsl
lock
mov
cltd
push
les
pop
xor
sub
inc
sbb
cmp
fs
mov
shl
int3
jmp
dec
adc
les
mov
and
adc
test
adc
adc
dec
or
repnz
push
adc
jp
rorb
dec
xchg
adc
test
pusha
adc
jnp
dec
fadds
jb
pop
add
pop
stc
test
and
mov
jge
cs
je
ss
aam
jp
and
add
and
cmp
jl
add
jg
cmp
push
add
push
mov
add
jno
fildll
setne
mov
xchg
fsts
sbb
mov
mov
mov
pop
push
jne
pop
add
stos
notl
add
push
test
adc
iret
or
daa
xor
ss
inc
add
dec
jno
inc
notl
arpl
sbb
cmpsb
cmp
fldenv
add
rclb
imul
inc
sti
dec
jne
cmp
push
xor
call
or
out
xchg
dec
dec
cmp
stc
subl
pop
rorl
addr16
fbld
ret
adc
ljmp
cmpl
sub
call
in
sbb
inc
add
dec
lret
call
dec
jne
in
and
sub
pop
pop
add
fsubrs
jbe
add
dec
push
les
or
xchg
mov
xchg
xor
sbb
cmp
jmp
sbb
sbb
and
mov
add
lahf
pop
pusha
adc
inc
xorb
xor
cwtl
into
add
daa
sbb
pop
jne
test
xlat
mov
aas
lds
xor
push
or
xorl
cmp
jg
push
in
orb
xlat
xor
data16
insl
fs
jmp
imul
clc
loop
lds
jmp
or
add
outsb
sbb
add
inc
lock
sarb
adc
mov
mov
xor
xlat
add
fisubrs
mov
jmp
inc
dec
or
movl
jge
cmp
push
or
sub
push
adc
and
sub
mov
ret
clc
rorb
jge
fstps
test
sbb
sbb
push
add
or
into
xor
inc
and
mov
lret
cmp
xchg
push
or
into
adc
and
aas
or
dec
fwait
pop
rcll
adc
cmpsl
adc
iret
push
xor
add
dec
jmp
nop
or
test
mov
inc
jl
push
jg
mov
adc
lock
int
lds
inc
xor
cmpsl
iret
popa
lea
pusha
fisttps
shrb
cli
lar
rcrb
mov
or
clc
cmp
mov
xchg
adcl
pop
xlat
test
hlt
insb
jmp
dec
sarb
je
mov
sbb
push
push
out
inc
push
push
pusha
enter
das
fldcw
mov
mov
lcall
mov
push
sub
arpl
repz
lahf
push
fwait
dec
popa
pop
aaa
dec
pop
ficomps
sarb
inc
inc
je
inc
xchg
fwait
lock
push
out
jo
sbb
xlat
sub
sahf
repz
inc
pop
sbb
lret
and
repnz
test
pushf
add
add
or
cmpsb
xor
call
mov
lret
cmp
jne
pop
adc
cwtl
popa
scas
frstor
and
mov
wrmsr
mov
insb
pop
push
push
pop
inc
push
shlb
inc
movsb
addr16
nop
jge
inc
or
test
sbb
inc
jle
fwait
sub
fs
mov
cvtpi2ps
add
pop
faddl
adc
rorl
mov
xor
dec
lods
cmpb
loop
lea
add
bound
cmpsb
nop
rolb
iret
xchg
add
push
xchg
add
test
pop
adc
scas
inc
xchg
pusha
add
jb
fld
or
jle
add
xor
test
loopne
call
and
mov
dec
xchg
arpl
adcb
add
lods
in
loopne
cmp
xorb
cmp
add
lret
inc
mov
repnz
mov
stc
dec
sbb
movl
test
xor
idivb
stos
pop
lea
push
xchg
or
adc
hlt
sbb
es
dec
xchg
popa
ja
clc
jne
lret
daa
xchg
testb
jg
or
pop
loopne
mov
testb
stos
pushf
jge
add
hlt
jle
mov
icebp
aad
js
into
jno
or
fs
enter
and
lea
sti
scas
ret
icebp
out
loopne
add
fcomp
ret
mov
ret
and
jns
sub
pop
loopne
pop
rclb
xor
out
js
movsb
push
sub
and
sbb
adc
push
outsb
popf
les
ja
sbb
push
mov
adc
lret
leave
sbb
loopne
pop
leave
mov
in
in
movb
ds
jl
pop
mov
mov
je
pop
dec
mov
lret
fists
mov
cltd
adc
push
mov
adc
idivb
add
movl
sahf
inc
sub
mov
or
xchg
adc
sbb
arpl
mov
pop
mov
daa
or
push
enter
and
daa
sub
xchg
push
and
add
add
cmpsl
outsb
add
stos
out
pop
adc
and
mov
sbb
cmp
ret
unpcklps
xor
sbbb
inc
add
adc
dec
sub
ret
test
outsl
call
or
insb
push
rorb
cmp
pop
pop
adc
dec
clc
enter
mov
push
push
mov
sub
lea
adc
pop
or
add
or
and
add
std
std
insb
jmp
add
cmp
fisttpl
les
cmp
push
popa
jns
jo
or
jge
pop
cmpl
adc
push
add
push
loopne
scas
loope
out
aaa
mov
divb
rolb
sbb
js
cmp
jmp
inc
push
sti
lcall
adc
ja
pop
pop
inc
mov
test
pop
inc
insb
mov
pop
xor
push
mov
push
ud1
push
mov
sub
mov
add
xchg
lock
loope
dec
push
cld
push
test
xchg
adc
lods
mov
outsb
cld
mov
ja
outsl
fmuls
pop
xor
sti
xor
jo
subl
push
out
pop
mov
adc
lret
dec
insb
adc
push
out
dec
inc
popa
bound
fisubrs
aam
mov
xor
nop
jmp
dec
and
add
pop
test
subl
adcb
shll
sub
iret
jle
sbb
fcmovb
mov
cmpsl
popa
cwtl
test
sbb
outsb
pop
andl
das
and
aam
jbe
fstps
dec
in
movsb
and
xchg
addr16
in
mov
jno
sub
sub
inc
in
jge
sarb
les
insb
inc
dec
sbb
jg
xlat
or
rolb
ret
outsl
cltd
and
mov
aam
fsubr
xor
mov
jg
pop
jne
inc
cmpb
add
test
adc
push
movsb
jecxz
iret
cmpl
jae
in
mov
cmpl
enter
clc
sar
sahf
add
jmp
sbb
out
or
add
cmp
repnz
and
jae
iret
adc
sbb
push
repnz
push
dec
cmp
lahf
cmp
ret
test
mov
cmp
fiadds
mov
jo
push
outsb
popa
jo
pop
mov
aam
outsl
outsb
dec
xor
pop
mov
imul
push
pop
aas
aaa
das
xor
fwait
lcall
add
fidivl
jne
orl
or
jge
mov
lahf
inc
shll
aas
pop
lret
push
xor
aas
push
sbb
sbb
loopne
cmp
adc
push
push
in
sub
rcll
aas
cld
cmp
cmp
xchg
sbb
add
sbb
repz
fsubr
sub
addr16
xchg
and
add
and
sub
xor
outsl
xor
xor
or
cmp
cmpl
xor
nop
out
sahf
dec
dec
dec
fs
in
push
je
test
inc
sahf
add
pop
push
in
nop
mov
shlb
fs
push
outsl
jo
in
je
add
sbb
cmp
out
xor
call
push
push
inc
push
dec
add
jne
pop
mov
test
add
mov
inc
popa
dec
push
shlb
mov
or
sti
test
js
push
push
aad
xor
aaa
or
sbb
insl
ret
es
push
inc
rcrb
in
cmc
add
imul
mov
jae
es
ja
hlt
cmpsb
adc
scas
loopne
mov
jbe
push
inc
adc
ret
add
xchg
mov
dec
sub
add
push
mov
in
nop
aaa
scas
cmp
xor
nop
or
or
lea
sbb
add
and
mov
add
inc
pop
cmp
scas
xchg
pop
pop
jmp
jb
pop
lock
out
jp
jnp
or
enter
jg
xor
and
bound
enter
fs
addr16
or
imul
insb
insl
outsb
outsl
or
enter
push
xor
and
and
and
pop
orl
pop
pop
pop
pop
or
enter
inc
xor
and
and
and
dec
orl
dec
dec
dec
dec
push
sbb
fs
inc
xor
ss
cmp
cmp
inc
push
sbb
ds
sbb
and
and
fs
inc
and
es
sub
incl
jg
test
mov
mov
fcmovne
inc
fildll
rolb
cmp
mov
insb
outsl
std
push
leave
pop
push
out
and
dec
shrl
xlat
inc
scas
pop
mov
jb
imul
sub
jl
sub
leave
in
scas
sti
or
sub
push
inc
sbb
imul
or
test
inc
ss
adc
and
outsb
mov
popa
daa
sbb
call
xchg
xchg
or
outsb
push
lock
or
sub
je
fildll
adc
in
or
je
insb
test
xor
push
data16
leave
mov
dec
je
pusha
loopne
pop
arpl
adc
inc
add
adc
imul
ficoml
cmc
inc
sahf
pop
push
or
out
and
je
leave
mov
xchg
outsb
int
jo
jo
mov
mov
cmove
push
or
shll
push
inc
jge
lods
imul
mov
rorl
fisttpl
out
add
and
add
imul
into
mov
iret
insl
dec
outsl
jo
je
pop
inc
xor
sbb
mov
divb
gs
and
add
int3
xor
pop
lret
xchg
aas
mov
sub
adc
xor
pop
loopne
and
ja
cwtl
add
jne
pop
ret
fisttpl
and
out
int
push
add
dec
jge
jp
in
jnp
aaa
or
push
or
inc
xor
pop
inc
rcll
jae
es
outsl
sbb
mov
es
lahf
test
push
bound
inc
mull
push
mov
test
pushl
and
idivb
fs
mov
mov
sbb
sub
mov
mov
add
fs
aaa
out
and
mov
cmpsl
inc
xchg
insl
cmp
lret
inc
pop
xchg
xor
xorb
push
jns
loopne
and
adc
add
pop
mov
in
ds
add
jnp
pop
adc
mov
push
xchg
in
pop
inc
sbb
add
inc
jne
push
pop
aas
mov
cmpsb
aas
hlt
inc
pop
add
jmp
adc
push
fdivrl
cmpsb
es
xlat
push
push
dec
gs
adc
imul
inc
add
cmp
lret
jne
cmp
push
and
jge
push
pop
push
movsb
imul
nop
call
sub
nop
mov
sbb
xchg
pushf
xor
nop
inc
mov
mov
mov
les
stc
push
mov
addb
fsub
ret
imul
inc
add
push
jns
mov
push
fiaddl
sub
push
mov
inc
or
ds
inc
scas
ficomps
push
add
push
inc
je
sub
nop
or
ljmp
sub
add
inc
lds
nop
sahf
pop
sbb
add
add
push
inc
xlat
sbb
dec
add
dec
dec
iret
jns
jns
xchg
jo
xchg
jl
xlat
and
aam
int
subl
enter
popa
pop
add
sbb
pop
sbb
shrl
push
sub
dec
mov
mov
and
push
or
mov
pop
int3
mov
notb
test
je
stos
add
sub
adc
or
add
push
fcoml
arpl
or
xchg
ret
sbb
inc
lcall
fildll
pusha
int3
stos
sub
pop
addr16
lcall
adc
mov
sbb
inc
insb
aas
aas
pusha
mov
jb,pn
out
mov
rcrb
hlt
push
xchg
sub
pop
repnz
ss
push
pusha
sub
cmp
jl
add
arpl
mov
daa
mov
dec
sbb
insb
data16
test
call
mov
cld
outsb
les
or
nop
add
adc
adc
or
js
mov
popw
and
add
jnp
clc
movd
mov
or
fadds
inc
shll
mov
add
add
dec
and
fwait
pop
ficompl
push
pop
push
mov
push
push
sub
ljmp
insb
insb
lds
repz
jo
sub
or
testl
lods
push
rorb
sub
sub
sub
out
push
sbb
or
pop
and
and
pand
xlat
push
je
data16
movb
adc
nop
add
add
aaa
incl
xchg
and
cwtl
pop
loope
and
dec
aas
add
popa
addr16
mov
sbb
xchg
dec
xchg
mov
push
leave
dec
enter
enter
daa
lcall
jne
cmpsl
mov
xor
mov
repz
pop
ja
je
js
push
xchg
scas
mov
jge
mov
pop
jg
ficompl
jl
dec
clc
push
mov
mov
push
rorb
notb
inc
xorl
cmpl
xor
je
das
dec
addb
adc
mov
mov
pop
add
jg
das
cmp
xchg
fcoms
daa
xchg
call
push
sarb
adc
pop
aad
cwtl
dec
pushf
jbe
push
aas
movsl
pop
push
mov
aas
cmpsb
push
xchg
jo
mov
xchg
add
mov
cs
sbbb
xchg
mov
ret
push
mov
add
mov
xor
cwtl
stos
jle
inc
or
outsl
outsb
pop
xor
mov
dec
pop
cmp
pop
and
lods
stos
faddl
mul
stos
cmp
jl
test
ficoml
movb
inc
scas
pop
push
pop
mov
cmp
lods
push
scas
je
nop
pusha
roll
pushf
mov
ja
dec
or
sbb
idivb
movsb
mov
pop
in
ret
xchg
xor
push
adc
pop
add
or
adc
iret
mov
mov
xor
rol
xor
inc
dec
jne
inc
loope
or
mov
pop
pop
adc
dec
daa
push
push
push
xor
or
inc
and
cmp
inc
pop
and
fcoms
xor
add
adc
adc
adcl
ret
add
nop
and
push
inc
andb
repz
jbe
mov
and
sub
repnz
add
adc
fs
and
lock
popa
lea
pop
add
incl
sub
pop
push
test
test
dec
sbb
mov
lds
iret
test
or
lock
jle
mov
sub
cmp
ror
or
mov
fiadds
mov
sub
and
or
sti
adc
xchg
sbb
mov
repz
loopne
dec
cmp
push
dec
mov
pop
sbb
in
fidivs
pusha
sbb
je
dec
mov
xor
test
push
pop
out
addl
adc
pop
mov
incl
jle
and
enter
sarl
int3
or
cmp
sub
repz
xchg
sbb
add
pop
das
add
aam
add
cmp
sub
dec
cmpsl
fstl
add
cmp
daa
jmp
dec
in
jle
or
dec
aam
adc
jecxz
push
fcmovnu
jg
mov
sub
add
xorb
sub
push
cmpsl
xchg
cmpsb
mov
or
or
rclb
arpl
push
or
or
jg
outsl
addr16
inc
loopne
sahf
or
pop
dec
insb
enter
fistps
push
xchg
jbe
add
mov
jo
inc
cmp
andps
insb
pop
aaa
addr16
pop
rclb
imul
and
add
sub
pop
fadd
bound
inc
outsl
ja
lahf
jne
lahf
nop
jg
or
arpl
imul
into
sbb
push
pop
subb
xchg
or
jns
subl
imul
addl
dec
addr16
es
mov
push
jp
ret
lds
xchg
popa
das
pop
js
pop
movsb
cmp
jo
jl
adcb
sub
rcrl
das
inc
push
addr16
std
and
das
inc
je
inc
push
xchg
dec
std
insb
add
dec
or
das
or
fdivrl
cltd
fadds
sub
xlat
xor
jmp
pop
adcb
inc
xchg
imul
ja
in
lret
inc
pop
or
or
popa
sub
jg
pop
or
cltd
jg
and
repz
adc
adcb
aaa
rcll
mov
stos
inc
sbb
jg
push
iret
xchg
in
arpl
outsb
jne
or
fisubs
adc
bswap
mov
das
lahf
dec
cmp
arpl
add
inc
xor
roll
ret
sub
repnz
inc
out
es
xchg
das
or
pop
mov
mov
pop
fadd
push
bound
scas
pop
inc
out
es
or
ss
and
adc
pop
aas
testb
testw
aas
xchg
inc
push
push
inc
ja,pt
inc
inc
inc
sub
or
mov
notl
dec
inc
dec
dec
arpl
mov
cltd
fadds
push
adc
inc
push
dec
dec
push
mov
and
inc
push
xchg
inc
stc
rcl
fimuls
and
out
inc
inc
xor
xor
add
cltd
or
and
inc
inc
dec
inc
xor
inc
dec
push
jo
pop
notb
dec
sub
mov
lea
cs
in
mov
inc
das
adc
sbb
mov
mov
xchg
pop
dec
pop
adc
push
push
xchg
scas
xchg
push
dec
push
inc
scas
dec
inc
dec
movsb
sub
push
dec
pop
fidivrl
jbe
cmpsb
mov
int3
mov
mov
add
or
add
push
push
pop
jl
or
jl
idiv
scas
aad
mov
dec
or
sbbb
add
cmp
lcall
fidivrs
push
pop
mov
lea
ud2
sbb
and
insl
sti
mov
and
mov
sbb
xorl
dec
push
js
inc
mov
or
jmp
push
sbb
aaa
add
ja
ljmp
or
cmp
loop
add
imul
es
sbb
jo
push
adc
add
aas
or
sbb
pusha
loopne
inc
arpl
ja
xacquire
cmp
loopne
or
es
add
in
ret
xor
je
fsubs
xor
aas
jae
das
push
inc
mov
sbb
insb
cmpl
sbb
out
or
enter
enter
ficomps
and
push
mov
lods
insl
scas
bound
test
ret
push
je
js
das
cmp
jo
psubd
cltd
add
mov
xchg
push
out
and
in
jne
lret
jae
dec
push
jbe
hlt
jmp
out
sub
cmp
test
daa
mov
dec
mov
sbb
mov
xchg
or
addb
mov
sub
push
pusha
dec
fwait
or
dec
out
popf
movsb
daa
inc
jne
mov
or
enter
sbb
je
push
jge
arpl
shr
adc
outsb
xor
mov
sbb
or
or
xlat
pop
add
cmp
loope
sbb
inc
add
out
sbb
pusha
cmp
mov
insl
leave
sti
push
cltd
test
sbb
xor
mov
sti
and
inc
fiaddl
pop
fcomp
add
adc
leave
sahf
faddp
scas
sub
dec
or
bound
inc
popa
or
sbbl
xchg
inc
sti
pop
xor
sbb
jo
pop
out
nop
pusha
bound
dec
cwtl
or
les
sub
or
outsb
aam
insl
movsb
cmpsb
sti
mov
xchg
fiadds
inc
aas
mov
lods
inc
orb
data16
mov
pop
pusha
or
or
sbb
rcrb
inc
ret
je
lea
adc
mov
in
sub
inc
adc
movsl
test
jecxz
hlt
negb
stos
mov
push
xor
inc
rcrb
neg
pand
push
das
fcomip
ficoml
test
mov
push
sbb
cs
rcrb
add
fidivs
adc
and
testl
sbb
xchg
xchg
pop
mov
lods
or
sbb
int
movsb
push
push
dec
push
or
and
inc
sbb
dec
inc
or
fcoml
sub
repnz
and
loopne
and
mov
jb
cmp
movl
adc
xorb
cmp
and
inc
aam
nop
subl
inc
insb
sbb
subb
jo
push
jne
and
fcomp
mov
lods
stos
inc
cmp
add
lret
pop
or
or
push
push
dec
pop
dec
int3
cmp
xchg
lret
dec
inc
or
adc
cmp
sub
cltd
push
shrl
mov
or
xchg
sbb
sbb
rorl
push
pop
or
cld
loopne
fs
and
sub
jns
cmp
adc
repz
sub
nop
sbb
cli
inc
and
xchg
or
rcll
and
jb
mov
inc
nop
mull
mov
mov
push
inc
dec
inc
xor
mov
test
in
cmp
mov
inc
xlat
lock
and
adc
repnz
movsl
mov
dec
mov
fistpll
adcb
sbb
das
data16
insb
das
cmp
test
inc
dec
loopne
or
sub
xor
lahf
mov
jmp
sub
jmp
je
mov
adc
adc
add
hlt
lock
loopne
adc
and
aas
aaa
pop
prefetchw
adc
enter
call
sub
nop
jg
and
inc
mov
sar
fiaddl
ds
rorl
xchg
push
loopne
adc
inc
sbb
push
fs
out
dec
adc
pop
inc
adc
movl
push
inc
jne
xor
mov
inc
xchg
sub
enter
inc
shlb
adc
inc
cmp
cltd
nop
int3
rorb
dec
into
icebp
add
rorl
in
lcall
int
mov
sbb
push
or
push
add
or
cwtl
fldcw
pop
or
or
xor
sub
sub
push
pop
test
popa
mov
or
mov
and
in
push
cmpsb
push
in
not
mov
data16
push
add
inc
ja
dec
pusha
in
cmp
loope
iret
cwtl
enter
mov
jp
push
xchg
and
dec
sahf
sub
cmpsb
sbbb
add
add
loop
pop
jno
dec
imul
push
pop
pushf
and
mov
rcll
pop
lods
test
into
push
jge
jnp
nop
aam
insl
pop
mov
outsl
mov
arpl
sarb
mov
sbb
nop
das
xor
mov
sub
mov
cmpsl
andb
popf
pop
or
iret
adc
xor
dec
punpcklwd
out
into
add
cmp
lea
sti
test
pop
das
push
lods
rolb
repnz
enter
cmp
daa
mov
dec
dec
inc
pusha
nop
xor
push
xlat
and
in
sub
and
or
mov
les
sarl
dec
popf
pusha
in
das
push
aaa
or
addb
pop
adc
push
and
and
dec
mov
mov
pop
mov
push
cmp
mov
adc
xor
cld
scas
test
aam
dec
add
out
mov
dec
popa
das
lods
imul
jbe
pop
lds
mov
outsb
mov
push
pushl
xchg
dec
mov
and
mov
sbb
clc
or
shlb
cwtl
ficompl
mov
cmp
pushf
add
mov
mov
ret
add
test
and
aas
dec
dec
dec
mov
nop
test
xor
add
arpl
and
orb
xchg
movsl
xor
sub
adc
mov
not
and
cli
dec
nop
cmp
je
scas
adc
insb
and
cmpl
cmovb
shlb
xor
xchg
jl
and
lret
and
movsl
mov
in
adc
or
mov
pop
pop
xor
push
xor
add
push
xchg
inc
add
nop
pop
orb
cwtl
adc
or
testb
inc
cmp
sbb
lock
rcl
and
in
add
adc
push
inc
orl
pop
inc
inc
imul
std
sti
cmp
insl
xchg
add
cwtl
leave
xor
or
pushf
xchg
lds
add
enter
pop
out
add
aam
push
sub
cmp
and
sarl
sbb
inc
push
roll
add
cwtd
lahf
push
rorb
mov
add
push
cmp
inc
inc
add
and
mov
xchg
int3
lds
adc
stos
das
rolb
xor
sub
and
mov
aas
add
dec
aam
outsl
pop
jmp
outsl
int
mov
aas
jge
add
adc
stc
xchg
adc
xchg
test
push
cmp
cmp
call
push
pop
test
adc
cmp
push
into
cmp
sbb
test
mov
dec
mov
fwait
adc
outsb
shlb
xchg
xorb
sub
jl
pop
push
test
inc
fcoml
call
sbb
fstpl
xchg
inc
daa
aam
jle
push
adc
push
push
mov
fisubrl
or
adc
popa
pop
test
adc
mul
push
cmc
or
mov
jl
pusha
jmp
ljmp
enter
add
fmuls
inc
push
adc
xor
not
and
inc
add
jl
arpl
fists
add
pop
or
push
out
in
xchg
scas
sub
xor
lret
ficompl
adc
pop
popa
mov
leave
rcll
outsl
mov
stc
push
mov
xchg
loope
add
or
mov
or
sub
cmp
comiss
and
sub
in
add
ds
cmpsl
cmpsl
fdivrl
add
pop
xor
sbb
push
push
jge
mov
dec
mov
mov
add
bound
sbb
and
xchg
hlt
mov
fsubl
push
sub
insb
dec
jmp
jns
or
sbb
mov
sub
pop
je
xor
sbb
sub
inc
inc
das
inc
push
dec
or
and
push
fcomp
fildl
data16
sub
rcll
loopne
xchg
xchg
dec
or
dec
lds
dec
cmp
bsf
scas
mov
or
loopne
into
adc
and
mov
cmp
push
mov
mov
nop
repnz
add
cmc
pminsw
add
faddp
inc
add
les
or
movsl
cwtl
cmp
aas
dec
pop
jg
mov
fwait
mov
bnd
push
mov
pop
pop
pop
inc
aaa
test
add
jne
repnz
jge
adc
adc
adc
sbb
push
inc
add
mov
movl
aam
in
mov
sti
leave
cld
adc
ja
inc
and
enter
mov
dec
jns
jmp
out
insl
inc
add
mov
mov
sub
and
or
jmp
loopne
movw
rcll
cli
adc
push
mov
dec
inc
rep
cmpsb
jo
sbbl
xchg
jno
rclb
add
add
jp
outsl
jmp
jl
mov
ja
rolb
jne
aas
push
aas
add
xchg
mov
lea
test
jg
pop
push
cmpsl
fucom
movsl
cmp
das
daa
jmp
pop
repnz
addr16
or
loopne
pop
mov
ffreep
xor
icebp
pop
les
rol
test
pushf
push
dec
cmpl
enter
pop
and
rorb
xchg
clc
sub
stos
add
fs
add
cmpsb
sub
and
or
jo
pop
sub
popa
fisubrl
sbb
rclb
and
dec
pop
leave
cmp
dec
cmovb
pop
push
push
dec
clc
data16
sbbb
fcoms
adc
popf
xor
adc
dec
mov
pop
pop
sub
push
lret
pushf
mov
out
movups
xchg
sub
jnp
xchg
test
dec
add
loope
and
pusha
adc
add
sbbl
out
scas
add
je
push
push
in
loopne
cli
mov
and
add
inc
imul
fs
test
pop
cmpsl
pop
les
repnz
shrl
adcb
sub
mov
ficoml
sub
lret
js
adc
push
cs
and
push
and
inc
jecxz
fcomp
rorb
jge
rol
lret
les
in
or
xor
push
add
mov
movsb
hlt
xchg
or
xchg
mov
pop
mov
mov
pop
or
les
push
out
icebp
add
mov
pop
jp
loopne
pushf
stos
shrl
or
adcb
push
cmpsl
dec
inc
pop
and
mov
insl
push
and
mov
movsl
in
test
add
push
sub
imul
mov
xchg
dec
push
fidivs
fdivrl
add
add
or
jnp
mov
ret
sbb
xor
and
je
and
jns
lock
sahf
mov
iret
xchg
es
jle
cmp
jl
add
aaa
enter
jg
push
push
rcrb
cmp
jle
loope
mov
adc
add
sub
or
push
sbb
jne
inc
lds
in
jnp
fs
add
loope
sbb
fcmovbe
adc
mov
add
pop
push
adc
inc
addl
push
ret
mov
fs
mov
insl
add
pop
mov
test
scas
iret
cmpsb
push
test
ja
sbb
cmp
add
pop
je
sub
push
dec
and
inc
inc
faddl
mov
es
test
shl
insl
lahf
mov
ljmp
jg
or
es
cmp
dec
lea
fisubrs
push
mov
rol
jne
inc
dec
jne
cmp
push
add
adc
mov
inc
test
sbb
adc
ss
clc
int
push
in
add
sub
jno
adc
cmp
adc
std
nop
arpl
jecxz
movsb
rorb
pushf
dec
and
cli
xor
sbbb
das
jb
nop
mov
cmp
lock
xchg
pop
cwtl
leave
inc
mov
mov
mov
push
mov
cs
cld
sbb
call
push
imul
pop
pop
sub
mov
push
mov
sbb
in
aas
in
mov
mov
push
pop
mov
je
test
loope
jne
cltd
sahf
cmp
aas
cmp
push
sarb
aas
bound
inc
aam
mov
cmp
addb
enter
jg
inc
fisubs
jnp
jmp
xor
adcl
daa
push
int
ret
add
mov
fildll
dec
sbb
test
pop
jge
push
dec
and
aas
sbb
sbb
sub
pop
sbb
jb
mov
dec
loope
or
popa
lea
movl
dec
jnp
rcr
mov
or
jg
lock
jmp
jmp
sbb
and
push
sbb
jae
sbb
pop
adc
pop
pusha
adc
insb
and
sub
add
xor
inc
and
xorb
outsb
pop
add
lds
mov
or
and
sbb
dec
aas
adc
push
mov
xor
pop
cs
popf
ljmp
inc
out
push
loope
adcb
negb
add
or
lahf
push
or
pop
sub
add
jae
pop
cmpb
adc
push
xor
sbb
add
nop
or
pusha
test
hlt
sbbl
imul
mov
xor
jo
cs
scas
sarb
xchg
push
push
mov
imul
cmp
sbb
push
int3
jno
push
or
push
sub
inc
cmp
cwtl
imul
arpl
push
hlt
or
lods
or
mov
adcl
popa
mov
add
jo
inc
sub
push
iret
mov
adc
mov
arpl
or
mov
pop
push
enter
pop
in
hlt
int3
inc
popa
or
mov
fwait
adc
push
xchg
imul
fildl
subl
in
loopne
push
and
mov
popa
loope
and
jo
int3
out
cs
add
add
and
inc
add
pop
das
imul
inc
fmuls
fidivrl
mov
mov
add
lods
or
lods
data16
ja
ds
push
scas
lods
cmpsl
mov
push
xor
fnstcw
mov
out
jns
add
pusha
xchg
in
test
push
jae
pop
adc
pop
push
arpl
sbb
fcoml
mov
stc
daa
in
cmpl
adc
jl
adc
add
xchg
mov
add
or
mov
pop
mov
xchg
lock
pop
cmp
test
xor
jne
subb
insb
adcl
sub
ja
xor
nop
incl
pop
adc
enter
add
into
xor
jae
addr16
xchg
mov
popa
test
xor
and
adc
add
lea
cmp
idivb
and
and
adc
cltd
je
imul
add
out
divb
mov
xchg
dec
in
nop
inc
cs
shl
sarb
icebp
adc
ficompl
insl
sahf
sti
sbb
fstps
push
cmp
lea
xchg
cmp
pop
sub
adc
inc
or
fldenv
xorb
mov
mov
ret
xchg
pop
jbe
pop
add
push
shll
and
adc
insb
sbb
pop
adc
add
mov
or
mov
data16
cmpsl
pop
ret
ja
nop
sbb
adc
dec
sbb
ja
je
pop
fidivrs
push
and
mov
sarb
out
pop
jae
or
inc
push
inc
leave
inc
jbe
pop
add
nop
cltd
fwait
jo
push
or
pop
mov
jl
inc
enter
push
nop
adc
xor
xor
or
bound
das
sbb
add
add
push
mov
add
fs
imul
repnz
in
xor
or
enter
add
push
jns
lock
sarb
push
inc
push
add
push
dec
dec
sti
stos
add
ja
popw
sbb
subb
bound
insl
cmp
inc
daa
jnp
xorb
push
sbb
in
add
addr16
inc
dec
inc
dec
jne
mov
inc
inc
mov
mov
imul
add
sbb
sub
dec
jne
lock
loope
leave
pop
jne
sbb
add
lods
sbb
subb
and
dec
loop
scas
cmpsl
rorb
jecxz
push
out
clc
mov
and
push
mov
xor
sub
push
xor
jo
xchg
clc
inc
and
cld
push
shll
jne
pop
sbb
push
leave
movb
test
adc
xchg
aam
sub
insb
imul
xchg
xor
mov
orb
adc
bound
dec
xor
imul
or
and
add
inc
add
je
xchg
mov
jno
lds
mov
push
in
cwtl
or
aaa
jmp
je
movsb
rcrb
push
cmp
fisttpll
xor
mov
addr16
mov
mov
push
sub
or
outsl
and
sub
adc
or
xor
jae
mov
adc
pop
inc
add
or
addb
scas
xor
xlat
pop
cwtl
or
jne
mov
xor
sbb
hlt
call
dec
adc
adc
xor
and
or
xchg
sbb
or
es
jns
pop
push
or
pushf
xor
add
das
fwait
mov
daa
sbb
inc
cmp
sbb
inc
and
or
or
xchg
mov
pop
orb
adc
sbb
adc
adc
sbb
insl
faddl
mov
cmpsl
xchg
or
push
rol
jnp
mov
scas
or
add
std
xlat
and
out
inc
imul
dec
cmp
cmp
dec
sub
xchg
or
ret
js
and
jbe
or
sbb
clc
jo
enter
push
ljmp
and
jl
cmp
movb
lret
js
push
sbb
sbb
and
iret
or
cmpb
push
jb
mov
jmp
mov
mov
adc
xor
mov
mov
or
aas
sti
xor
rcll
gs
sbb
and
addb
xlat
pop
popa
adc
mov
jmp
pop
je
xor
pop
push
das
pop
arpl
mov
scas
test
xor
push
or
mov
pop
ss
add
shll
subb
xchg
inc
add
xchg
mov
popa
loope
sbb
dec
es
mov
mov
outsl
adc
or
adc
fs
adc
pop
arpl
std
js
aad
testl
popa
leave
xchg
jo
jno
sub
fnsave
idiv
dec
or
or
sub
mov
sbb
das
pop
rclb
das
and
daa
bound
pop
in
add
pusha
insl
and
and
push
lahf
or
lods
pop
jb
lcall
jo
cld
clc
or
orl
iret
jae
pop
push
jp
pop
jb
push
lea
data16
fiadds
aaa
jno
or
jb
cwtl
cli
dec
je
clc
cmpsb
lock
dec
or
pop
dec
add
dec
push
orb
hlt
sbb
je
pop
push
lcall
push
jge
sbb
ss
push
jle
fldl
fwait
imul
aaa
push
xor
push
dec
mov
lea
sbb
sub
add
pop
and
or
enter
and
adc
or
push
fistpll
adc
js
jg
loope
and
jle
push
dec
jl
or
push
outsb
jmp
je
loopne
pop
xor
lods
in
nop
add
mov
test
aaa
or
out
inc
mov
push
dec
loopne
mov
or
andl
add
pop
push
pop
pushl
dec
dec
ret
fldenv
jecxz
adc
jge
arpl
or
and
inc
lods
jo
sub
pop
and
and
inc
sub
enter
mov
das
or
das
or
inc
sub
imul
js
xchg
dec
cs
aas
mov
mov
mov
mov
jmp
mov
cs
addr16
inc
pop
daa
add
shlb
mov
adc
jmp
mov
or
pusha
xor
out
outsb
pop
clc
adc
andl
pop
test
or
pushf
fadds
call
sbb
sub
mov
roll
decl
adc
ds
es
add
arpl
orl
test
push
push
cmp
add
mov
daa
dec
shlb
loope
into
xchg
xchg
xor
dec
adc
xchg
jbe
xor
sbb
movsb
push
jns
and
adc
inc
addr16
sub
popa
dec
dec
iret
add
xor
xchg
enter
mov
push
xchg
in
add
test
adc
sub
adc
call
pushf
comiss
adc
iret
jns
sub
punpcklbw
sbb
or
or
xchg
jmp
push
push
sti
dec
imul
orb
test
jns
adc
in
or
push
mov
fs
data16
rcll
inc
jae
fmuls
jo
sbb
push
arpl
imul
ret
push
popa
push
and
or
and
addl
lahf
push
xchg
ret
data16
or
lcall
adc
xchg
push
xchg
lock
or
aas
sbb
xchg
or
pusha
xor
outsl
jg
bound
lea
jns
jmp
and
and
pop
sub
and
icebp
or
ss
addl
xor
mov
xchg
and
lds
add
or
jmp
test
andb
psubq
xor
or
push
cwtl
add
sbb
xor
shll
int
popl
dec
inc
je
test
lock
or
mov
mov
lea
push
dec
enter
push
adc
cltd
and
lret
test
pusha
jnp
mov
cmp
test
sbb
sub
adc
xchg
aaa
cmpsl
adc
pop
pop
test
mov
dec
arpl
popa
and
xchg
movsb
and
cld
pop
stos
gs
lcall
fidivrs
lock
or
clc
push
sar
sub
pop
push
mov
xor
inc
cwtl
and
mov
pop
or
add
in
or
scas
lret
fists
push
in
ret
cltd
cwtl
pusha
mov
mov
cmc
into
cwtl
adc
rorb
fimull
in
test
lea
push
in
dec
mov
insl
pop
repz
data16
aad
mov
add
movsb
cld
add
ret
mov
lods
pop
pop
dec
lock
adc
cmp
popa
fsubs
xchg
inc
sti
sub
rcrl
dec
andb
inc
imul
fs
mov
dec
fwait
popf
pop
je
add
data16
sbb
push
sti
mov
mov
jl
jne
aam
xor
cs
cmpb
xorb
inc
mov
fcoms
push
jecxz
lock
adc
add
mov
xchg
stc
adc
ret
mov
nop
lock
or
fstp
pop
or
sub
or
and
mov
lahf
pop
nop
push
add
pop
pop
inc
dec
adc
adc
shlb
or
test
pop
push
callw
adc
pop
fs
mov
sbb
xor
das
aaa
in
or
cmp
xchg
mov
mov
arpl
pop
mov
sbb
or
sub
cs
sbb
mov
mov
xchg
sbb
fisubrl
lock
add
push
dec
sbb
push
mov
sbb
popa
inc
push
push
jo
mov
loopne
sub
mov
clc
cwtl
cmp
jmp
jmp
jle
orb
dec
sbb
cmpsl
and
and
pop
je
mov
adc
lds
adc
push
daa
sbb
sbb
pop
push
inc
test
add
jo
daa
insl
pop
cpuid
call
imulb
and
shl
mov
jmp
sbb
sub
or
mov
and
cmpsl
fcmovb
adc
pop
cltd
shrb
adc
inc
stos
xchg
test
pop
or
jo
sub
sub
sbb
daa
and
cmp
cmp
mov
addr16
mov
add
outsb
pop
push
lret
js
and
je
in
inc
push
and
inc
lds
ret
xorb
cmpsb
inc
or
jmp
mov
mov
inc
pop
sub
adc
lods
dec
outsl
inc
add
repnz
jae
ret
or
inc
xchg
sbb
pop
movaps
jno
scas
ret
xchg
and
in
adcb
mov
jne
ss
in
adc
iret
pushf
mov
jecxz
inc
hlt
or
sub
jae
mov
sbb
in
shrd
sarb
iret
inc
push
repnz
push
insb
or
pop
lahf
dec
fdivrs
push
test
mov
lret
out
pop
push
or
push
adc
jp
push
clc
add
push
nop
mov
dec
add
pop
mov
add
iret
test
rorb
test
or
add
inc
add
pusha
and
xor
test
or
dec
and
push
sbb
rcll
sbb
ljmp
pop
in
jmp
sub
xchg
sub
mov
dec
loopne
pop
inc
je
stos
dec
push
imul
jo
and
divl
lods
xchg
jecxz
test
leave
xchg
and
lods
les
mov
mov
push
xchg
cmp
fcmove
and
pop
lods
nop
in
add
dec
mov
pusha
xchg
out
inc
mov
fstl
or
mov
xchg
movl
mov
sub
rcr
int
punpckhdq
xor
and
cwtl
add
push
mov
imul
pop
pop
mov
or
lea
sarb
xchg
cwtl
hlt
imul
aaa
jp
add
cltd
hlt
dec
jo
cltd
pop
pusha
insb
in
orps
pusha
ja
mov
icebp
pop
dec
outsl
jo
data16
int
rclb
pop
shll
fcompl
pop
leave
add
adc
stos
mov
sbb
push
daa
inc
or
inc
ret
mov
lahf
lds
adc
or
mov
inc
test
das
daa
fs
sub
dec
push
mov
fsubrs
cmp
je
mov
mov
pop
cs
fistl
fistl
mov
add
push
and
add
lock
hlt
jns
or
mov
and
jae
bound
shlb
mov
adc
mov
dec
dec
or
inc
test
ret
xchg
bound
jno
and
jno
dec
mov
dec
push
dec
dec
movb
clc
cmc
clc
not
add
add
decl
or
pop
movl
pop
or
outsb
pop
rorb
add
cmp
jne
add
push
cmp
push
xlat
cmpsl
insb
xor
leave
add
int3
push
inc
rcrl
and
daa
outsl
rcrb
inc
jne
sub
pop
insb
fmuls
or
cmc
add
push
rclb
and
rclb
ret
adc
cmp
and
jno
mov
and
jecxz
ljmp
jae
pop
test
aam
add
inc
adc
es
and
xchg
xchg
aam
jl
cmp
fisttps
mov
loopne
in
add
movl
adc
ljmp
mov
sahf
call
outsb
add
mov
out
in
and
sub
jo
mov
xchg
mulb
add
adc
insb
push
fisttpl
lods
ss
fistpl
jp
xchg
or
mov
xor
mov
push
inc
je
mov
cmpsl
hlt
cmp
out
stos
or
pop
in
arpl
cld
mov
je
scas
and
cmp
and
jo
xor
insb
pop
repnz
sbb
cmp
outsl
cmp
je
mov
inc
dec
mov
pop
daa
sub
push
sbb
dec
imul
inc
mov
push
dec
push
in
ret
sbb
jne
clc
xchg
cmpsb
out
inc
push
mov
test
adc
hlt
dec
dec
cmp
jne
sub
xor
test
push
or
je
adc
loop
mov
cmc
test
dec
adc
inc
fldenv
stos
and
mov
mov
jl
fldt
outsl
jle
mov
add
rcrl
or
test
lods
dec
mov
out
into
sbb
insb
test
dec
add
sub
ss
pop
in
fidivl
xor
xor
adc
pusha
pop
adc
mov
ficoml
xchg
rclb
push
add
push
andl
and
jo
push
int3
dec
call
xor
pusha
sbb
loopne
dec
aaa
mov
sub
sbb
cmp
loopne
dec
fcoml
adc
loopne
js
mov
or
dec
and
mov
add
pop
decl
call
pop
mov
push
inc
xchg
mov
dec
cmp
mov
mov
sub
sub
fcoms
xchg
loope
inc
sub
arpl
pop
mov
lods
rcrl
jg
and
adc
call
add
enter
iret
or
test
dec
cli
jg
xor
sahf
addl
cli
lcall
push
mov
or
or
sbb
inc
mov
push
dec
push
mov
cltd
ljmp
rorb
sub
arpl
mov
pop
femms
mov
push
iret
mov
sbb
or
mov
aas
ds
mul
cmpl
xor
addr16
sbb
nop
xchg
sbb
hlt
or
nop
push
mov
pop
movsb
cmp
movb
pop
test
or
scas
test
inc
mov
test
les
call
cmpsb
push
or
xchg
push
addl
mov
or
imul
rclb
sahf
cmpb
push
xchg
mov
jns
in
popa
popa
lea
lcall
test
aaa
fmuls
mov
xor
inc
mov
and
ja
lods
adc
pusha
les
xchg
xlat
insb
fisubrs
xor
adc
shll
pop
test
adc
push
aas
mov
test
test
int3
cmp
xchg
les
add
sub
sahf
dec
das
mov
jo
or
jns
xor
cmp
xor
xchg
push
push
sbb
test
daa
sbb
add
xchg
shrl
in
lods
sbbb
mov
or
cmp
push
sub
emms
movsb
ds
xor
lea
stos
push
sbb
and
ret
xchg
xor
mov
clc
mov
pop
ljmp
sub
cmp
inc
mov
mov
jo
ss
add
aad
adcl
clc
xor
orb
aaa
movb
cmpl
shrb
jecxz
pop
movb
enter
or
jo
jb
sub
push
sti
loopne
push
sbb
add
pop
sbb
xor
lret
int
scas
push
push
push
lods
lea
and
pop
cmovge
dec
dec
xchg
ret
shr
mov
adc
test
and
jg
or
je
jl
and
inc
and
push
sbb
adc
ljmp
sub
and
scas
shl
addl
lea
xor
pcmpgtd
repz
dec
pop
sbb
add
shr
popa
xchg
push
adc
fsubrs
shrb
insl
dec
imul
inc
jno
pop
push
insb
mov
xor
sti
and
movb
push
lcall
sbb
mov
call
les
test
push
jle
inc
or
inc
leave
xlat
lret
fmul
sti
inc
sbb
pop
and
movsb
adcb
xlat
pop
mov
and
jle
add
add
mov
mov
cmpsb
inc
andl
ret
js
push
mov
das
adc
add
je
stos
adc
cs
xor
loopne
movsl
xor
imul
divb
in
jne
jnp
add
push
sbb
sub
inc
sbb
insb
test
mov
cmp
mov
sub
dec
dec
mov
enter
add
fldcw
add
sbb
cmp
test
pop
add
pop
sub
add
std
adc
jbe
xor
ret
test
and
pusha
ror
and
int3
es
cmpsl
and
jne
sbb
inc
cmpsb
push
lahf
into
add
mov
sub
add
sub
adc
mov
aaa
sbb
filds
decb
add
inc
add
test
arpl
sbb
in
fwait
mov
shr
pop
ja
dec
jecxz
pop
xor
aam
sbb
add
xor
or
pop
jb
shll
gs
pop
fists
add
push
inc
jbe
popf
pop
sbb
sbb
add
hlt
dec
mov
pop
dec
or
or
test
adc
dec
gs
adc
push
ja
jae
push
sbb
das
repnz
mov
pop
sub
ret
and
cmpsb
pop
fs
xor
iret
jne
and
pusha
imul
outsl
inc
push
inc
adc
mov
les
negl
lods
ja
aaa
xchg
dec
pop
mov
mov
inc
cltd
fldcw
test
test
add
adc
lds
jb
rorl
xor
or
xor
je
lds
mov
mov
ret
adc
xor
movsl
movsb
out
in
pusha
dec
movb
pop
xor
daa
movsl
cmc
inc
arpl
sub
or
movsb
loop
sbb
in
xchg
adc
mov
in
mov
inc
cmp
and
inc
fldcw
ss
cwtl
inc
lret
pop
sbb
les
xor
movsl
mov
daa
push
push
leave
jo
pop
ficoml
roll
ret
push
sub
ljmp
mov
push
push
or
and
push
cltd
adc
sub
inc
xor
pop
lods
fldcw
loopne
aam
jge
xor
adc
adc
dec
pop
mov
movsb
shl
sub
loope
test
roll
mov
cli
inc
movb
jmp
pop
call
je
adc
dec
imul
mov
lea
jne
mov
jno
push
test
mov
sbb
loope
lahf
inc
loop
mov
clc
lock
mov
adc
add
sub
cwtl
mov
adc
insb
mov
mov
cld
aam
ja
pushf
aas
or
bound
jns
dec
in
inc
dec
push
mov
add
xor
sbb
jne
dec
sub
pop
sub
push
mov
or
loopne
ljmp
or
fists
test
rcr
dec
loopne
lods
mov
or
add
in
or
popf
mov
jo
dec
mov
pusha
das
stos
mov
les
sbb
outsl
notl
mov
mov
pmuludq
lcall
dec
sahf
sbb
test
imul
add
cmp
stc
cmovb
clc
add
mov
test
lahf
movsl
enter
movsb
dec
rclb
and
inc
dec
enter
loope
fsubl
dec
imul
js
addr16
adc
daa
cmpb
or
xor
push
inc
neg
data16
and
dec
or
adc
add
inc
in
mov
data16
add
clc
out
jne
aaa
push
inc
push
js
mov
adc
adc
faddl
imul
xorl
sbb
adc
mov
movzbl
xchg
xchg
inc
mov
je
ffreep
lea
push
mov
hlt
push
jno
loop
adc
jle
add
dec
sub
mov
nop
ja
mov
mov
inc
cmp
inc
stos
popa
insb
shlb
roll
fdivs
add
test
shlb
into
pop
xchg
push
xchg
lods
adc
orl
cmpl
jbe
mov
mov
daa
and
shlb
fs
fwait
int3
std
pusha
aaa
xor
movsl
cmp
and
pop
inc
cmpsl
adc
movsb
inc
das
xchg
shrb
cmc
push
mov
aaa
mov
arpl
aam
loope
jmp
sar
or
pop
push
mov
add
add
pushf
insb
rorb
mov
cwtl
leave
cmp
fsubs
popa
pop
in
out
or
pop
push
jbe
pop
jbe
adc
push
mov
pop
fs
add
sbb
inc
insb
loop
adc
and
mov
sbb
sti
cmp
lock
inc
lods
dec
in
mov
or
ret
dec
pusha
test
mov
inc
enter
add
adc
lock
data16
push
js
jo
dec
mov
dec
push
pushf
jl
mov
jnp
cmp
imul
mov
popa
push
int
or
mov
and
push
jle
push
add
in
adc
insl
mov
cs
or
push
jo
faddl
mov
imul
mov
movsb
mov
lds
test
mov
mov
data16
xorb
bound
loop
arpl
mov
pusha
add
movsb
dec
nop
xchg
cmp
imul
jp
and
fcomps
or
sahf
mov
fwait
sbb
loop
push
cltd
cli
mov
adc
adc
push
jo
pusha
je
adc
mov
xchg
mov
lea
dec
adc
adc
ja
or
imul
orb
test
call
addr16
add
mov
mov
push
jecxz
cmp
add
mov
jmp
xor
movsb
adcb
dec
dec
lods
fildl
mov
lds
and
or
js
popw
mov
push
mov
push
xchg
or
push
pop
xchg
adc
jg
sbb
leave
ret
xor
push
popa
and
adcb
ss
shl
add
add
lock
cmp
jle
or
adc
inc
mov
mov
xlat
adc
lahf
fsubl
or
lock
dec
je
in
pop
jb
arpl
stc
mov
add
dec
cmpsl
sub
test
xchg
movsl
mov
mov
iret
push
ljmp
jecxz
inc
inc
lea
stc
cmp
push
jno
std
xchg
rcll
sbb
sbb
or
cmp
mov
aam
enter
mov
mov
mov
outsb
es
lds
rorb
loopne
stos
xchg
sbb
rorb
fbld
in
jge
sti
cltd
and
mov
test
cld
pop
dec
sbb
push
or
mov
jo
jge
rorl
or
push
push
inc
mov
ja
test
xchg
xor
sarl
imul
mov
or
xor
inc
sbb
add
sub
inc
cwtl
in
mov
imul
xchg
mov
or
ss
inc
jp
or
bound
mov
ss
lock
lods
sub
adcl
cmp
clc
sbb
adc
add
dec
and
shlb
sbb
or
and
test
inc
sbb
daa
cmp
stos
in
daa
and
out
dec
ja
and
mov
scas
mov
mov
rcr
mov
push
dec
inc
and
or
jb
pop
inc
push
loopne
daa
fidivl
jle
test
mov
in
sub
push
xor
incl
inc
add
pop
jns
push
mov
das
mov
jno
icebp
cmp
scas
pop
sub
adcb
inc
dec
sub
dec
jle
rcl
stos
aam
push
adc
lea
mov
bound
dec
iret
sub
add
adc
jno
adc
xchg
outsb
test
pop
pop
inc
movsl
xor
insl
push
inc
mov
dec
imul
adc
or
or
and
push
out
mov
imul
popa
test
lcall
aam
sbb
xchg
push
pop
sbb
push
or
arpl
sahf
dec
adc
and
popl
addb
inc
and
or
xor
nop
pop
or
adc
dec
and
adc
movsl
and
pop
mov
inc
mov
mov
inc
sbb
scas
cmp
stos
js
adc
int
add
add
nop
icebp
inc
sub
mov
in
mov
or
pushfw
mov
inc
adc
and
push
pop
stos
daa
adc
mov
test
es
insl
add
and
aam
subb
add
jne
rol
or
popa
add
mov
cmp
push
inc
loope
shlb
adc
add
fwait
lcall
dec
ds
testl
xchg
or
pop
cwtl
dec
mov
lods
aad
popa
dec
pop
add
test
idivb
jmp
cmp
imulb
cmp
pop
xchg
adc
or
test
cmpsl
push
mov
cmp
jo
cmp
jecxz
pop
sub
adc
mov
enter
rol
stos
and
lret
pusha
addb
cmc
mov
test
imul
xor
pop
notl
outsl
hlt
aaa
add
sbb
or
cmp
sbb
pop
sub
rolb
jecxz
add
rcll
xor
dec
fnstcw
loop
and
cmpsl
xor
push
lock
sbb
mov
or
add
cmpsl
push
movsb
aas
pop
movsl
add
daa
push
mov
pop
xor
call
push
icebp
mov
sbb
lret
xorb
rcr
inc
and
mov
jnp
inc
add
daa
push
mov
cs
adc
and
inc
add
add
lret
js
push
in
cmp
or
push
xchg
les
es
xorb
das
mov
xorb
cmp
mov
xor
xchg
ja
mov
cltd
add
jb
subb
sbbl
push
mulb
dec
jp
pop
xor
mov
inc
adc
and
push
xor
sbb
aaa
sub
or
inc
out
add
inc
pop
stc
pusha
jecxz
test
mov
bound
and
jle
pop
or
push
cmp
sub
ss
outsb
and
sarb
mov
inc
and
test
fsubr
pop
fcmovnbe
adc
inc
sub
dec
ret
imul
adc
xchg
insb
ret
mov
bound
int3
sbbb
pop
sub
mov
clc
notb
dec
fcoms
and
mov
mov
and
rcll
pusha
aam
lock
fcmovnbe
and
std
dec
or
inc
push
sbb
add
cmp
dec
or
xchg
mov
or
inc
or
lea
adcb
xchg
lock
sbb
push
outsl
enter
push
pop
movq
or
xor
xchg
xchg
pop
ret
or
mov
cmp
sub
scas
add
les
call
out
popf
add
inc
xor
test
popa
add
push
pop
mov
mov
nop
jne
mov
dec
pop
pushf
adc
fiaddl
subl
fmuls
loopne
cltd
lea
enter
shlb
inc
sbb
outsl
in
mov
lods
mov
popa
pop
mov
xchg
dec
cmpl
es
jge
rcl
test
push
dec
sti
add
mov
push
pop
pushf
push
ss
dec
and
dec
hlt
sbb
scas
cmp
mov
js
repnz
xchg
mov
xor
sub
pushf
sbb
mov
or
fistpl
and
mov
mov
cmp
xor
add
mov
cmp
sub
subb
push
jbe
ljmp
das
xor
mov
fidivl
cld
mov
mov
mov
and
inc
mov
sub
jmp
and
mov
jmp
hlt
movb
inc
or
cmpb
sub
lds
xchg
inc
or
and
mov
outsl
jb
mov
lcall
inc
ss
adc
mov
sahf
xchg
cmp
pop
inc
jmp
cmpl
hlt
mov
ljmp
testb
dec
adc
adc
mov
lret
pop
or
dec
inc
mov
sbb
push
push
xchg
xorl
jecxz
add
add
jb
add
dec
jge
cmp
adc
push
and
loopne
hlt
push
sbb
cmp
sub
bound
ljmp
add
or
xlat
popa
cmp
jle
push
cmpsl
mov
popa
pop
inc
add
add
adc
pop
das
sub
sub
je
or
sbb
jne
fs
adc
dec
rcr
and
dec
lds
pop
pop
pop
cmp
repz
les
shr
sub
pop
jl
xor
jmp
pop
lock
jbe
and
adc
mov
out
or
adc
imul
dec
adc
sahf
sub
clc
mov
clc
push
pop
adc
ret
das
inc
sbb
fistl
sahf
xchg
inc
in
and
lock
jns
add
inc
or
or
addr16
inc
das
adc
insb
or
jne
sahf
pushf
sub
sbb
add
dec
xor
outsb
cmp
aam
fs
pusha
cmpl
jb
lcall
jl
inc
dec
inc
lock
add
or
insl
mov
lock
pop
and
adc
jne
cmp
and
ds
jb
add
lret
lea
push
inc
cmpsl
or
es
adc
dec
push
push
dec
inc
pop
aas
dec
or
add
add
stos
adc
iret
daa
pop
add
push
cltd
in
push
add
push
add
inc
enter
pusha
shll
push
aam
jne
in
int
sbb
mov
sbb
sbb
push
or
insb
or
dec
test
arpl
inc
in
inc
sbb
lahf
pop
faddl
clc
out
xchg
sbb
movsb
or
out
scas
dec
cmp
cld
pop
sbb
sub
xorb
pop
add
sub
pushf
xor
rcrb
jmp
ds
add
adc
sub
jbe
xchg
xor
add
imul
xlat
insb
popa
jns
jae
xchg
push
adc
add
stos
jge
adc
mov
and
clc
mov
cld
and
call
mov
inc
cs
ret
push
or
or
jns
das
mov
das
and
out
xor
jge
mov
cmp
add
mov
popa
or
int3
mov
leave
sbb
psubsb
clc
or
sbbb
fdivl
xchg
fiaddl
add
mov
mov
or
push
push
push
or
pusha
or
dec
add
push
insb
movq
ss
mov
insb
push
ret
jg
or
adc
shl
jne
inc
cmp
xor
lret
fcmove
stos
sbb
add
es
sub
or
xlat
aaa
and
pop
loope
push
or
mull
inc
mov
or
inc
xor
insb
test
push
dec
rcrb
or
add
add
push
daa
dec
push
add
add
and
mov
lock
ret
outsl
mov
sbb
sub
sub
lods
cmp
or
mov
add
clc
aas
pop
xchg
cld
mov
pop
rcll
mov
cmp
inc
push
mov
jo
or
imul
movsb
add
fildll
in
das
xor
gs
fbld
cld
nop
or
movlps
fcmovnu
xor
xor
mov
out
add
sbb
adc
bound
bound
or
adc
add
push
mov
mov
shrb
test
lods
loope
or
adc
aad
sbb
inc
lahf
adc
add
daa
push
pusha
pop
inc
add
popa
and
jnp
cmpsb
push
fnstenv
mov
or
into
add
fdivs
cmp
pop
jo
repnz
adc
enter
int3
lret
loopne
dec
sahf
or
int3
in
inc
push
jo
popa
push
int3
lods
jge
lcall
insl
jne
imul
mov
ret
mov
mov
push
ja
jmp
jne
push
jns
aaa
ret
nop
sbb
mov
ret
sbb
iret
gs
and
add
shl
inc
or
fsts
sub
sub
cmpsb
clc
adc
add
add
inc
lcall
sub
lret
ret
or
test
adc
orb
imul
dec
adc
or
push
iret
js
mov
clc
mov
mov
insl
mov
or
sbb
inc
xchg
and
push
ljmp
mov
and
pop
cltd
sbb
xchg
adc
or
or
inc
imul
lcall
rcrb
js
cmp
sbb
adc
or
js
imul
fsts
lds
leave
add
jnp
jb
dec
and
sbb
and
jmp
jno
push
sbb
push
sbb
roll
addr16
sbb
mov
int
stc
push
add
jle
sbbl
push
sub
aaa
xchg
ljmp
pop
cmp
xchg
sub
dec
add
xlat
push
mov
cmpsb
out
and
jne
mov
cmp
out
cmp
add
mov
test
popa
jo
sub
shll
inc
xchg
inc
or
inc
hlt
sub
shlb
stc
loope
add
test
pop
adc
sbb
xchg
out
je
insb
jle
ret
cs
inc
aam
add
jb
adc
fucomi
daa
jns
add
nop
add
or
sub
stos
loope
adc
jmp
cmp
fcomps
xor
mov
lods
add
test
movsb
pop
push
test
bound
jb
or
or
sbb
add
dec
pusha
jle
dec
jne
mov
add
adc
mov
inc
dec
lcall
lods
es
and
inc
push
cmp
fs
lock
enter
sbb
daa
test
insl
das
mov
rcl
add
mov
lret
or
xor
dec
or
push
push
pusha
stos
fdivs
enter
xchg
daa
jb
lcall
xchg
sbb
fcoml
sub
movsl
jb
jo
pop
push
jl
mov
cmpsl
aaa
leave
pop
adc
mov
and
stos
mov
jmp
pop
insl
inc
adc
in
and
or
push
and
pop
lret
outsl
xor
lret
das
fcoml
cltd
sub
pop
mov
cmp
xor
jnp
dec
pushf
in
sbb
fdivl
or
insb
lds
outsl
test
sbb
sbb
lea
cmpsb
ss
in
jnp
frstor
outsl
lock
loopne
xchg
addb
cmpsb
inc
aam
mov
jmp
mov
or
or
lret
icebp
sub
push
ja
repnz
cmpsl
es
or
pop
dec
inc
add
sbb
and
jecxz
or
inc
adc
jne
mov
call
inc
xlat
je
xor
mov
sahf
and
in
lock
aam
mov
insb
push
shlb
and
call
inc
jmp
cld
dec
ja
js
mov
push
mov
fdiv
mov
xor
adc
es
and
outsl
fldcw
cmova
sbb
and
jb
add
lock
jne
ss
sbb
push
xchg
pushf
scas
shrb
xlat
xor
out
xor
sbb
push
sbb
xor
push
enter
stos
int3
into
pop
push
and
arpl
adc
push
icebp
int
sbb
jno
rolb
push
rorb
outsl
push
shll
and
adc
leave
xor
jno
fabs
cld
mov
out
xor
or
push
dec
mov
mov
pushf
iret
pop
jecxz
loope
and
sbb
test
push
mov
adc
scas
in
add
mov
inc
mov
data16
xlat
or
mov
jecxz
jp
sbb
xchg
cmp
jne
sbb
stos
loope
adc
or
push
add
mov
xor
lds
ret
fsubl
inc
inc
movsl
addb
iret
iret
sbb
jne
jmp
je
cmp
push
repz
and
push
jbe
dec
iret
push
xor
in
inc
xchg
pop
xor
cmp
push
xor
sahf
cmp
cmpsb
in
xchg
pop
pusha
call
cmp
pusha
pusha
xchg
addb
shlb
dec
fs
xor
in
rcrl
mov
movsl
pop
adc
dec
fisubrs
mov
add
pusha
shrb
leave
mov
mov
pop
addb
inc
es
cmp
cmp
fs
rolb
inc
pop
rolb
sbb
adc
cmp
xor
test
enter
cltd
nop
out
pop
lock
pop
push
es
push
call
adc
les
insl
arpl
and
test
inc
es
sub
pop
xor
mov
popa
daa
xchg
cli
push
das
push
adc
adc
sahf
xchg
es
pop
push
or
mov
subb
pop
aad
roll
jae
daa
add
jbe
jg
fistpll
lods
pop
shlb
rolb
rcll
pop
adc
daa
xchg
pop
push
xchg
pop
cwtl
push
push
jns
pop
and
js
adc
enter
daa
rcr
pop
aam
sbb
jb
or
push
mov
pop
movsl
push
mov
adc
notl
mov
cmp
dec
add
cld
pop
add
push
pushf
mov
addr16
aam
dec
push
enter
pusha
jne
add
jmp
aam
add
leave
sbb
and
xor
shr
jle
decl
xor
es
aaa
sbb
adc
xor
mov
pushf
or
jl
pushf
pushf
pushf
addb
nop
xchg
cwtl
pushf
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
mov
pushf
rol
int3
pushf
pushf
pushf
pushf
rcl
fcomp
pushf
pushf
pushf
pushf
loopne
call
pushf
lock
clc
cld
dec
dec
dec
mov
add
or
dec
dec
dec
adc
sbb
dec
dec
dec
and
movsb
loop
mov
push
inc
ret
add
das
mov
out
adc
inc
jp
arpl
f2xm1
or
outsl
sub
sub
fimull
and
cmpl
enter
or
and
test
je
pop
repnz
mov
adcl
mov
lock
fildl
push
in
test
lods
cmp
inc
sahf
add
cmp
inc
sahf
add
rorb
enter
jns
int3
rcl
cmp
fadds
or
jae
iret
loopne
in
cmp
repnz
dec
in
pop
jae
iret
xor
sbb
js
mov
repnz
stos
cmp
mov
lods
iret
cmpl
sbb
jae
or
adc
add
fldl
adc
in
nop
out
xor
sahf
add
and
cli
inc
movb
inc
call
push
jb
ja
out
jmp
jne
mov
sbb
xchg
push
sbb
inc
insb
outsl
jae
and
sbb
cmc
daa
and
ret
clc
add
xlat
aas
push
std
orl
test
je
in
push
mov
mov
shrl
mov
jae
addr16
test
inc
fs
pop
dec
arpl
adc
cmp
sbb
sbb
es
loopne
pop
loop
or
outsb
jae
sbb
fwait
pop
roll
imul
pop
pop
pop
dec
ret
inc
pop
ss
add
rcrb
pop
orb
nop
testb
or
int3
adc
cs
pop
inc
sbb
mov
xor
push
movl
outsb
jnp
xor
lret
adc
pop
cmp
cli
outsb
popa
and
dec
insl
add
and
or
das
faddl
in
pop
xchg
dec
insb
inc
bound
pop
xchg
and
inc
das
mov
pop
inc
mov
and
fs
jg
es
sub
jns
outsl
addr16
fstl
dec
lcall
andl
sub
sahf
outsb
push
das
pop
add
xchg
mov
fmuls
cltd
xor
pop
adc
jnp
jo
outsl
rorb
mov
pop
repz
shrb
or
add
hlt
xor
insl
add
sub
cmc
fiadds
sub
and
mov
add
jg
loop
scas
repnz
aad
pop
cmpsl
loopne
out
test
rol
add
shrl
fstpl
cltd
inc
xor
mov
outsl
test
xchg
sbb
inc
mov
enter
inc
les
cmc
ret
enter
das
sub
push
cmpsb
test
push
mov
out
test
loope
scas
imul
loopne
jle
push
lock
incb
mov
out
jmp
movsb
push
fnstcw
aam
loop
or
add
lds
cmp
sub
push
mov
out
add
pop
lcall
cmp
mov
add
jl
cmp
out
adc
lods
pop
add
clc
pop
dec
dec
cmpb
or
inc
push
push
lods
push
inc
inc
insb
arpl
movb
sbb
push
and
inc
inc
call
test
mov
push
ss
std
cmpsl
mov
push
jne
cmpl
mov
sub
sbb
mov
mov
xchg
push
bound
sbb
jle
inc
add
cmp
lock
loope
mov
or
push
ljmp
add
add
mov
or
fmuls
cmp
aam
mov
push
sbb
pusha
insb
les
push
out
or
and
ss
or
pop
pop
out
pushf
xchg
fiaddl
xor
and
jmp
jo
push
int3
mov
in
push
push
inc
aad
push
inc
dec
inc
imul
add
adc
aaa
in
sub
shrl
dec
jp
xchg
movsb
dec
jge
test
rcll
dec
rcl
ss
test
es
inc
lea
pop
mov
adc
out
xchg
scas
pop
mov
js
xor
out
mov
or
leave
or
es
add
sbb
or
pop
cmpl
jo
dec
sbb
dec
dec
or
or
shrb
loope
call
pop
push
xlat
add
adc
pop
dec
outsb
inc
gs
lods
fwait
dec
scas
movb
fisttpl
or
and
mov
or
add
inc
mov
mov
add
push
jbe
pop
pop
cmp
lods
test
nop
push
cmpsb
sbb
iret
and
popa
loopne
popa
in
xor
ja
dec
add
xor
sub
mov
xor
insl
fs
addr16
push
xor
inc
imul
xchg
mov
pop
lret
and
ffreep
lods
cmp
mov
mov
imul
call
inc
aam
in
das
loopne
gs
mov
in
cs
int
dec
fdivs
adc
or
xchg
int3
clc
das
cwtl
or
push
mov
pop
nop
adcl
shlb
cs
jne
cmp
lods
cmp
testl
loopne
nop
pop
pop
mov
lock
or
xchg
add
mov
ljmp
popa
test
add
ljmp
fisttps
call
xchg
adc
or
hlt
push
cmp
fcmovnbe
cld
inc
iret
out
mov
and
mov
call
imul
or
sbb
jo
or
rcrb
cmpsb
adcl
xorb
fs
shl
jae
popl
adc
sbb
loopne
dec
lea
sub
inc
add
shrb
mov
movsb
inc
jne
sbb
add
xor
insl
popf
pop
mov
in
out
inc
mov
out
jmp
dec
add
xchg
xor
and
out
test
or
sbb
test
push
cmp
adc
enter
pop
fucomi
pop
mov
pop
lods
mov
xchg
push
lods
adc
cmpb
cmp
xor
inc
pop
cld
out
mov
or
test
pop
mull
loope
cmp
mov
fnsave
lods
or
inc
xor
dec
pusha
insb
or
cmp
or
cmp
and
daa
ret
dec
sbb
adc
enter
adc
enter
push
pop
enter
sbb
sbb
orl
sbb
orl
push
pop
add
or
enter
add
enter
push
pop
enter
or
or
orl
or
dec
push
xor
push
icebp
sbb
repnz
fs
inc
push
cmc
div
nop
inc
push
sbb
stc
cli
push
cld
std
das
fisubrl
sbb
push
leave
jmp
lcall
mov
dec
mov
test
lcall
sub
and
lcall
js
imul
shll
push
in
dec
shll
faddl
cmp
xor
ror
xor
sub
mov
lods
adc
pushf
add
imul
je
insb
rcrb
enter
mov
dec
mov
test
cmpsb
imul
imul
cmpsb
imul
pop
repnz
pusha
out
jmp
pop
jne
nop
pop
inc
mov
clc
mov
add
push
jl
cmpxchg8b
enter
popf
xchg
pushf
in
cs
cmp
orb
clc
xchg
xchg
sbb
addr16
in
xor
fs
in
cmp
faddp
aam
fs
daa
xor
dec
fsubp
pop
cmp
pusha
push
test
inc
mov
leave
push
cmp
and
pop
inc
mov
push
push
insb
pop
jecxz
pop
in
insb
add
or
adc
mov
xchg
ret
pop
repnz
fdivs
or
scas
rol
lret
lods
pop
mov
das
nop
rcr
push
xchg
lods
mov
mov
or
movsb
es
lcall
and
jl
cltd
inc
shll
ja
push
in
shlb
jo
jo
xchg
xor
int3
pop
in
fwait
out
xchg
sub
iret
in
in
repnz
add
ss
push
mov
cltd
sbb
hlt
pop
mov
xchg
add
cmp
xchg
push
adc
rclb
push
rorl
jg
iret
xor
push
pusha
add
aas
cmp
rolb
adc
jno
or
jns
xchg
in
sbb
out
push
cmpb
out
es
add
push
lock
add
sbbl
out
add
mov
out
push
out
mov
ret
dec
sarl
dec
xchg
push
adc
adc
jae
shr
lahf
mov
xchg
and
arpl
add
lar
fdivrl
or
add
loopne
adc
mov
shrb
movb
mov
xor
adc
push
jg
xor
pushf
test
xor
jmp
jl
mov
mov
mov
je
gs
pusha
fcoml
out
add
mov
mov
or
js
iret
mov
adc
push
addl
inc
rcl
cmpb
push
ja
shll
adc
mov
icebp
es
pusha
adc
adc
lret
jne
cs
or
loop
push
push
push
add
repnz
xchg
cmp
loope
mov
nop
dec
rol
mov
add
xor
jmp
in
mov
dec
gs
pop
add
cmc
es
je
mov
xchg
stos
into
cmpsb
jge,pt
je
pushl
icebp
lock
int
int3
cmpsb
test
adc
push
bound
jns
pop
icebp
fmull
andl
lods
out
dec
test
outsl
sbb
xchg
dec
repz
xor
leave
and
lock
push
lock
imul
or
in
or
inc
rorb
ficompl
add
mov
adc
mov
inc
jg
push
push
xor
insl
imul
add
dec
cltd
adc
pop
into
add
push
test
shlb
lock
xchg
lret
in
shlb
adc
popa
cmp
lds
push
testl
mov
ja
mull
inc
add
lea
mov
add
xchg
arpl
pop
repz
or
sbb
and
pop
mov
test
pop
pop
ljmp
jno
mov
or
add
pop
aaa
xor
inc
hlt
mov
dec
add
xchg
xor
xor
pusha
fdiv
fcoms
je
lock
faddl
test
mov
sub
cli
aam
mov
rorl
sbb
xchg
inc
xchg
xor
dec
add
jmp
dec
inc
xchg
or
add
pusha
movsl
sbb
push
in
in
push
adc
dec
hlt
cwtl
clc
xchg
and
or
adcl
ljmp
mov
icebp
cmc
scas
ficoml
mov
add
cmpsb
leave
sbb
insb
cmp
fwait
dec
ret
push
dec
pop
test
jp
push
mulb
std
xchg
cmp
mov
pusha
icebp
mov
pop
ret
mov
push
push
mov
sbb
sub
fisubrl
mov
jne
xor
mov
sbb
sbb
adc
test
lahf
mov
inc
lods
es
sbbl
leave
and
decl
or
ret
dec
cmp
popa
aad
push
jl
dec
dec
cld
int
fcoms
jecxz
out
pusha
movsb
js
int3
ret
inc
add
mov
ret
sub
outsb
clc
clc
sub
cmp
jb
adc
shrl
jne
push
and
inc
xchg
or
mov
movsb
xchg
adc
neg
test
xchg
push
adc
imulb
lods
jne
cwtl
js
out
leave
mov
mov
push
fucomi
dec
pop
aaa
jb
lahf
clc
dec
mov
cwtl
mov
popf
out
sti
es
shr
das
adc
rorb
outsl
lahf
nop
sbbl
mov
shll
pop
fdivrs
stc
xor
cmp
inc
xor
pop
push
mov
loop
or
mov
fsubr
stc
push
dec
push
adc
mov
or
xchg
sbb
or
je
xchg
add
pusha
iret
mov
aam
and
xchg
das
or
and
pop
sarb
subl
daa
and
cli
push
leave
and
shlb
les
enter
mov
cmp
cmp
int3
mov
jb
or
cli
pop
jl
jl
inc
cli
mov
mov
push
cld
leave
in
jle
std
xlat
cld
lods
push
push
push
xor
loope
jae
pop
je
add
and
or
out
aas
and
xor
xor
dec
imul
sub
verr
movl
flds
outsb
repz
insb
push
or
adc
cld
push
adc
pop
in
add
fwait
mov
pop
jb
jb
popa
xchg
mov
ret
adc
mov
lods
mov
bound
jbe
daa
ja
idivl
add
addr16
jb
in
push
xchg
pop
addr16
push
mov
mov
das
and
cmpsb
insb
daa
push
xor
into
sub
stos
outsb
insb
insl
outsl
mov
das
je
cmpsl
sbb
bound
shrb
daa
jbe
cmp
mov
ljmp
jb
arpl
jns
insb
cmpsb
outsl
dec
pushw
das
add
ja
imulb
psubsb
add
aam
lock
add
ja
jmp
and
add
loope
sub
pop
stc
mov
add
pop
xchg
add
std
xchg
or
add
popf
push
lahf
cmpb
daa
mov
jl
or
adc
jnp
ret
shrl
scas
mov
cmpb
stos
movsb
add
or
dec
add
or
ja
insb
insl
push
pop
mov
mov
cmp
outsb
mov
fsubrl
inc
push
push
fldl
add
pop
mov
psllw
mulb
jmp
push
mov
jnp
and
mov
test
adc
nop
xchg
lds
les
add
add
cmpsb
and
jge
sub
lcall
mov
xchg
nop
out
mov
or
in
clc
loope
jo
push
pop
cmc
and
add
adc
adc
add
jmp
int
lock
xchg
ret
sbb
or
insb
ljmp
rolb
push
icebp
push
es
ja
fs
jp
mov
add
add
sub
xchg
gs
xchg
add
add
push
pop
pop
imul
or
or
or
imul
imul
mov
pop
and
and
and
add
add
imul
imul
jae
cli
add
sbb
shll
adcb
mov
xlat
call
imul
push
sbb
xor
rcl
dec
push
pop
insb
jp
push
jbe
out
jmp
add
add
add
in
nop
addr16
add
pop
adc
push
sbb
or
jns
in
or
addr16
sahf
or
or
sbb
and
sub
sahf
add
sub
push
in
nop
xor
xor
inc
sahf
add
adc
in
nop
addr16
add
pop
dec
sbb
addr16
sbb
add
in
sbb
imul
pusha
cmp
repz
sbb
popa
imul
repz
and
and
repz
fs
and
and
push
cmc
cmp
and
and
xor
push
or
sbb
cmp
test
popf
and
movsb
mov
mov
fcomp
inc
push
jo
dec
adcl
dec
rcrb
inc
js
xorl
push
lods
popa
or
pop
push
in
mov
mov
fsubrs
add
call
inc
adc
aas
stos
shrb
daa
lock
ljmp
sub
mov
xchg
inc
sub
push
add
loopne
bound
jns
scas
or
dec
pop
clc
subb
dec
sarb
jb
shll
cs
rorl
xchg
cli
xchg
pop
push
mov
and
out
jnp
cmp
cmp
fisttpll
inc
pusha
jg
pop
jg
sbb
jl
jne
xor
and
mov
pop
enter
notl
or
sub
cmp
xchg
sbb
add
push
dec
jge
insl
add
add
aam
aad
lock
pop
and
add
stos
or
lock
mov
pushf
das
std
jb
add
call
mov
in
or
or
add
bound
lock
cld
imulb
or
fs
jae
xchg
jl
or
mov
mov
xor
jle
jl
inc
pusha
cmpsl
pop
fs
fmulp
add
loopne
sub
outsb
jle
fneni(8087
dec
push
jns
sub
test
or
insb
or
and
or
cmp
cmp
in
push
sbb
or
mov
mov
mov
lcall
mov
xchg
popf
inc
imul
imul
insl
lcall
popf
add
jge
fs
pop
nop
push
in
pop
and
sbb
add
add
rolb
adc
pop
mov
lods
push
push
push
or
mov
pop
das
pop
push
mov
mov
pop
push
cmp
lea
xchg
movups
inc
sbb
and
push
stos
in
sbb
loopne
lods
xchg
sub
push
add
in
jnp
clc
into
mov
cld
pop
lea
mov
dec
aam
add
js
inc
add
fisubl
xor
ja
push
mov
and
andps
mov
loope
or
jecxz
test
fsubrs
je
cld
mov
mov
pop
mov
lods
mov
xor
or
cmp
add
sub
pop
test
enter
or
sbb
dec
jp
cmp
pop
lea
xchg
mov
lods
jg
and
xchg
lods
or
mov
xor
subb
aaa
xchg
and
arpl
xchg
adc
add
inc
clc
sub
pop
cltd
fs
sbb
mov
jbe
addb
or
ljmp
xor
adc
or
pop
movb
push
add
icebp
push
sbb
fsubrs
jne
mov
adc
lahf
in
adc
push
cmp
add
xchg
mov
clc
push
rcrl
pop
cmp
add
add
inc
cmp
add
push
adc
or
xor
jecxz
adc
and
sub
jle
decl
and
sub
push
pop
sbb
cmp
sub
sub
fcompl
stc
and
xor
das
lock
lods
test
fsubr
adc
add
aam
adc
mov
xchg
or
daa
or
add
inc
mov
and
dec
adcl
mov
popa
inc
and
je
or
mov
push
lea
adc
repnz
mov
add
pop
nop/reserved
push
mov
mov
pop
push
mov
mov
cmp
outsb
sub
inc
mov
sub
pop
adc
stos
push
mov
push
insl
das
dec
jne
jo
inc
jmp
mov
inc
mov
nop
mov
or
or
or
adc
in
xor
aam
cwtl
jl
push
js
mov
aaa
mov
daa
mov
rorl
mov
cmp
jg
inc
mov
imul
inc
nop
mov
psllq
xchg
adc
and
pop
fisubl
pop
xor
mov
cmpsb
mov
add
cmp
je
or
je
jae
ret
pop
fwait
sbb
pop
cli
jmp
jp
movsb
popf
push
leave
push
pop
ja
inc
add
mov
addr16
in
sub
inc
and
mov
push
fildl
rol
orl
push
inc
sbb
or
lods
pop
pop
pushf
test
fs
add
mov
test
jge
adc
lock
xor
jmp
jb
idiv
dec
push
pop
push
dec
dec
dec
inc
dec
push
add
out
pop
movsb
mov
add
cmp
xchg
mov
and
xor
aaa
ret
lock
push
or
xchg
rorb
mov
and
and
cwtl
lods
pop
xchg
adc
sub
shrb
cmp
cmp
jne
sub
ret
outsl
xchg
push
jecxz
mov
mov
jmp
pop
add
inc
sbb
stos
adc
cmpl
movsl
pop
xchg
or
insl
fsubl
cmp
adc
shl
ss
les
ja
and
sbb
testl
leave
push
pop
popa
fmull
sbb
inc
sbb
cltd
or
cltd
adcb
loop
sub
lock
aaa
mov
xchg
fldcw
out
push
sub
sbb
xor
ret
cmp
jb
roll
dec
loop
adc
mov
scas
adc
push
adc
add
and
mov
nop
push
adc
mov
adc
call
push
mov
or
clc
mov
adc
daa
scas
popa
sbb
cmp
adc
xor
es
mov
jae
sahf
movsl
inc
test
adc
jns
shl
or
aaa
jb
add
hlt
mov
sub
pop
adc
xchg
call
les
adc
and
lock
push
add
push
dec
or
popf
sarb
nop
rcl
add
xor
sub
clc
out
jle
pop
pop
icebp
mov
scas
popa
call
test
sub
inc
enter
aam
rorb
inc
pop
sbb
ficompl
jmp
lcall
inc
cmp
cmp
jmp
sahf
andl
inc
shrb
adc
push
repnz
lsl
lods
add
rcl
cmpb
inc
pop
sbb
inc
add
sub
jno
and
int
sahf
addl
pop
sbb
cmpsb
adcb
lret
push
stos
sbb
sub
add
and
fildll
daa
mov
mov
pushf
adc
adc
add
sbb
or
or
pop
sub
stc
loope
or
xchg
push
cwtl
paddsb
pop
xor
add
movsl
lcall
add
daa
push
or
mov
mov
cltd
sahf
xor
out
out
outsb
lahf
loopne
cmp
and
in
lahf
pop
sub
dec
add
popa
add
xlat
mov
xorl
nop
nop
xchg
inc
adc
lods
mov
les
push
add
shll
pop
pop
dec
shll
jo
adc
or
xor
subps
xor
push
jecxz
ret
pop
andl
xchg
mov
adc
ret
push
outsb
sub
inc
aam
js
sbb
sub
arpl
cmp
sbb
jle
xchg
push
mov
inc
sbb
jmp
sub
push
and
pop
mov
ljmp
xchg
nop
xor
adc
add
inc
pop
mov
jmp
enter
outsl
pop
sbb
movsl
imul
rcl
dec
or
jne
mov
push
aaa
xchg
mov
jmp
dec
xchg
icebp
mov
fnsave
and
int3
out
and
add
and
fidivrl
test
inc
fcomps
sbb
cs
mov
jo
insb
mov
sarb
sub
push
les
mov
add
and
pop
out
push
or
add
iret
add
mov
adc
adc
dec
or
insb
out
rclb
cmp
repnz
or
sub
imul
xor
and
mov
push
lods
aam
cmp
loope
xor
inc
adc
loopne
imul
gs
adc
aam
xor
test
xlat
xor
adc
mov
add
mov
popf
int3
mov
push
jns
mov
adc
jle
xchg
in
push
roll
cmp
jne
dec
pop
mov
pop
push
dec
mov
movsl
sti
sub
jle
or
mov
sbb
pop
add
cmp
mov
mov
in
sbb
rcr
pop
mov
push
inc
jp
mov
adc
mov
out
js
cmp
jle
outsl
imul
das
adc
mov
xor
xorb
adc
repnz
mov
mov
cld
in
adc
sub
push
mov
pop
pop
mov
ljmp
and
sbb
ficoml
add
sub
cmp
unpckhps
adc
fcmovnbe
or
and
push
adc
add
pop
mov
dec
or
mov
int3
test
fs
sub
dec
aas
push
mov
aas
and
mov
daa
mov
pop
cmc
mov
and
add
xchg
pop
movb
mov
xchg
and
adc
jmp
movsl
test
xchg
push
dec
and
sbb
sbb
sti
pop
mov
stos
add
int3
mov
adc
sub
xorb
and
je
fneni(8087
mov
dec
adc
insb
mov
inc
fmulp
sbb
sbb
mov
xchg
inc
dec
mov
lret
mov
dec
or
cmp
mov
scas
xor
mov
mull
movsl
mov
adc
aaa
xchg
dec
mov
mov
dec
adc
in
pusha
das
sub
scas
fmull
push
sbb
shlb
xor
xlat
out
into
and
xchg
add
add
fcoml
lahf
cmp
jecxz
and
or
sub
loopne
test
xchg
adcb
jne
test
mov
pop
out
push
xor
data16
dec
sbb
movb
movsb
inc
pop
cmp
jo
test
pop
push
adc
call
cmp
jo
or
ret
js
js
sbb
cmc
and
lods
add
mov
icebp
into
or
adc
cmpb
push
pop
fimull
rcrb
pop
cmp
sub
stos
xchg
pop
jmp
sbb
add
mov
shll
cwtl
dec
scas
lds
jae
lods
xor
mov
xor
stos
test
sub
call
mov
mov
cmp
je
test
ficompl
push
dec
push
mov
nop
inc
dec
jl
cltd
mov
roll
insb
enter
jns
mov
jnp
or
push
inc
ret
pop
and
mov
jo
adc
mov
jmp
mov
cwtl
adc
outsb
lcall
mov
push
mov
mov
push
cmp
push
ret
lcall
mov
xchg
push
cmp
adc
push
inc
adc
dec
out
clc
and
lcall
adcl
enter
and
lea
stos
sbb
rolb
inc
cmpb
mov
in
sub
sbb
pop
or
arpl
stos
pop
mov
pop
or
adc
pop
test
push
pop
jne
in
adcl
lcall
leave
clc
loopne
add
outsl
add
xor
les
je
xlat
xchg
add
iret
test
adc
imul
cmpsl
pop
imul
sbb
push
shlb
cmp
pop
das
mov
hlt
and
and
add
iret
dec
push
inc
outsl
data16
pop
mov
test
movb
aas
scas
dec
outsb
arpl
cmp
aam
ss
pop
jb
add
lahf
and
int
test
loopne
jae
mov
jne
aaa
push
adc
or
lahf
cmc
arpl
push
scas
rclb
xchg
and
dec
jge
cs
add
adc
mov
cmp
fs
xor
or
pop
and
push
adc
or
pop
fcompl
and
xchg
jg
popf
mov
inc
or
or
sub
or
and
or
in
jp
sbb
cmpsb
jmp
pop
jmp
xchg
add
or
movsb
pusha
dec
loope
pop
or
push
sub
xchg
xchg
inc
adc
push
in
inc
push
xorb
dec
dec
push
pop
adc
pop
push
insl
outsl
gs
leave
xor
and
sub
fidivl
mov
in
xchg
orl
bound
pop
sbb
in
les
mov
sbb
orl
ret
clc
pop
sti
pop
push
imul
pop
out
jl
or
je
mov
xlat
inc
sub
xlat
ja
dec
mov
or
dec
inc
imul
pop
rorl
or
sub
mov
sub
push
push
sbb
add
add
jl
pop
add
adc
daa
pusha
cs
cli
daa
out
fcom
add
sbb
stos
mov
clc
in
outsb
pop
mov
xlat
pop
and
fisubl
je
nop
pop
faddl
das
add
mov
sbb
jo
je
xlat
call
jnp
movsb
inc
in
pop
mov
add
test
mov
mov
divb
pop
sbb
push
rorb
test
pop
push
push
xlat
insl
xor
add
cmp
pmaxsw
xchg
icebp
rolb
aam
out
imul
mov
sbb
psubd
pop
imul
sbb
push
push
outsb
dec
pop
push
clc
pop
sub
mov
cmp
adc
adc
inc
jmp
xor
mov
push
les
or
adc
jp
xor
stc
nop
xchg
pop
xor
jmp
jle
sbb
pop
push
nop
or
imul
dec
or
jp
cmp
popf
or
jo
sub
mov
lahf
jecxz
inc
sub
or
stc
or
xor
push
es
or
xchg
rclb
jp
or
fsubs
mov
add
or
pop
dec
aaa
imul
in
decl
inc
push
ljmp
inc
std
das
mov
pop
rol
outsl
xor
lea
xorl
dec
loopne
jno
sbb
sbb
sub
dec
jo
add
xchg
mov
dec
xchg
outsb
xor
mov
mov
adc
pop
mov
mov
inc
outsl
jo
lahf
mov
ds
scas
mov
mov
imul
jne
sbb
jnp
leave
sub
xchg
dec
in
sbb
jae
nop
nop
cs
mov
sub
lret
pop
mov
sbb
jo
addr16
adc
movsl
sbb
cmp
lock
mov
add
fisttpl
lea
mov
insb
orb
and
fsubl
popa
and
outsl
sub
scas
mov
insl
cvttps2pi
or
adc
icebp
test
jns
adc
or
pop
sbb
outsb
or
cwtl
push
adc
sub
xchg
and
pop
orl
ja
inc
or
pop
aas
inc
add
shrb
nop
pop
pop
mov
sahf
sub
sbb
inc
sub
adc
lock
imul
stc
lods
iret
mov
test
cmp
add
fcmovnb
fldt
xchg
or
xchg
rorb
imul
sahf
sub
push
lock
insb
push
incl
addr16
push
push
dec
and
pop
enter
sub
jbe
data16
rol
neg
outsl
add
pop
popa
sbb
mov
pop
xor
jmp
mov
mov
test
mov
std
pop
aaa
ret
xchg
mov
rolb
scas
das
cld
pop
adc
mov
testb
clc
or
pop
pop
xchg
testb
mov
pop
cld
add
mov
jo
testb
mov
iret
inc
addl
cmpsl
stc
addb
mov
push
add
imul
adc
notb
mov
divl
jg
subb
repnz
loopne
addl
mov
add
loopne
jb
ss
popa
pop
mov
test
mov
imul
xchg
lcall
sysenter
fs
imul
sub
lret
jg
push
jg
and
pop
jmp
adc
adc
or
jge
and
in
adc
push
add
decl
loopne
push
inc
mov
mov
mov
mov
mov
pushl
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xlat
sar
pushl
ljmp
ljmp
in
testb
dec
dec
ljmp
or
in
mov
and
xor
clc
pop
cltd
dec
shll
movsb
fcoml
out
push
in
xchg
xchg
hlt
aas
xchg
xchg
push
xchg
adc
int3
in
push
fmuls
xchg
cmp
mov
mov
push
xchg
nop
push
jb,pt
push
mov
ss
ss
sarl
or
je
pushf
in
ss
rcrl
adc
jae
insb
fwait
stc
mov
pop
mov
mov
pop
data16
mov
mov
push
cmpsl
lret
mov
mov
imul
stc
lcall
or
add
lahf
pop
and
loopne
sbb
adc
in
aaa
xor
dec
fidivs
pop
add
cs
add
fcmovnb
outsb
pop
sbb
popa
nop
pop
push
cwtl
mov
stos
decb
sbb
stos
loopne
insb
movl
jb
outsl
add
add
incl
dec
add
pusha
outsl
add
test
aas
pop
loopne
roll
aas
jo
popa
inc
insb
imul
loope
sbb
pop
dec
cmpsb
ljmp
aam
fcoml
add
inc
outsb
arpl
in
add
sbb
nop
addr16
jne
mov
dec
pop
mov
mov
in
or
sbb
pop
or
pop
inc
jo
test
inc
adcb
daa
add
inc
jae
pop
mov
add
xrelease
je
add
addl
enter
mov
out
dec
imul
inc
push
lock
and
sbb
cmc
dec
xor
sbb
enter
inc
addr16
xchg
or
and
flds
mov
call
ja
fisttpll
fnstenv
ficompl
sbb
ret
outsl
mov
shl
imul
in
push
mov
push
add
push
mov
stos
pop
inc
dec
xor
xor
fldenv
imul
push
xor
pusha
inc
fisubs
cmpsl
pop
and
add
push
push
jae
imul
mov
xor
mov
add
and
inc
pop
mov
into
pop
jo
sub
insb
test
roll
fistl
cld
pop
pusha
and
push
mov
call
cwtl
loop
or
inc
add
inc
pop
mov
rorl
pop
sub
push
test
rolb
fmuls
add
pop
das
out
adc
fld
test
add
add
mov
or
lods
les
sti
add
test
incl
fwait
add
push
push
subb
rolb
into
xor
aas
bound
dec
jbe
in
cltd
lret
je
sub
cwtl
fwait
sub
push
lea
mov
push
jmp
cmp
sbb
xlat
js
sub
sahf
sbbb
xor
adc
cli
aad
insb
fs
in
ljmp
adc
push
ret
inc
sub
pop
pusha
lcall
push
adc
aas
movsl
popa
ljmp
mov
push
shrl
adc
jae
gs
or
jl
mov
mov
xor
push
outsl
jo
jo
and
add
js
fnstenv
xor
fadds
inc
cs
or
imul
and
xchg
push
mov
jecxz
mov
push
xchg
inc
in
int
out
jae
adc
and
xor
imul
mov
in
lcallw
inc
jne
gs
xor
dec
cltd
sbb
and
cwtl
cmp
and
jmp
dec
mov
push
dec
mov
cmp
test
jb
mov
pop
xor
mov
fadds
imul
pop
mov
dec
cmp
outsb
fmuls
sahf
popf
pop
xchg
jae
rcrb
dec
xchg
push
mov
push
jae
pop
push
loope
xchg
and
dec
ds
imul
pushf
nop
fcoms
add
loopne
cwtl
addl
insb
sub
andb
enter
or
in
inc
add
dec
decl
jbe
inc
xor
inc
mov
outsb
xchg
aaa
arpl
inc
adc
rolb
es
adc
leave
sub
pusha
icebp
sbb
pop
inc
inc
ja
cmpsb
mov
iret
dec
fadds
pop
push
push
dec
daa
stc
jns
mov
shlb
movsb
loopne
cmc
jno
mov
mov
insb
and
fisubrs
std
dec
test
mov
pusha
addr16
and
pusha
call
dec
dec
fidivl
add
lock
lock
sbb
rorb
or
cmp
inc
mov
inc
jb
fsubrl
lcall
pop
mov
pop
lret
sbbl
push
loope
and
and
cs
test
xchg
dec
inc
ror
mov
lret
mul
add
sbb
pushf
and
pushf
loopne
lods
push
rcrl
jae
call
cmp
push
dec
push
aam
shlb
into
nop
xor
rclb
mov
sbb
fmuls
fcomp
fsubp
xchg
or
or
add
push
insl
push
dec
and
mov
cmp
push
inc
inc
push
push
inc
sbb
inc
rolb
add
sbb
dec
adc
push
pushf
cltd
jmp
mov
xor
pop
push
mov
hlt
clc
push
pop
xor
ss
pop
icebp
jbe
rolb
ljmp
add
mov
sub
adc
inc
xchg
and
adc
xor
pop
sahf
rorb
loope
lock
lock
mov
cltd
push
sbb
or
popf
sub
inc
in
pop
mov
orb
stos
pusha
inc
cmp
hlt
or
test
test
das
repz
inc
mov
mov
mov
dec
rep
clc
sub
stos
add
lods
les
push
or
insl
or
out
pop
sub
loopne
bound
push
mov
loop
or
and
data16
dec
xchg
push
pop
mov
cmp
cmpsb
inc
faddl
push
sub
or
push
mov
lsl
mov
dec
out
cmp
xor
imul
xor
inc
dec
push
or
and
xchg
ds
lock
xchg
in
xor
fwait
pop
and
inc
scas
add
mov
lods
adc
fmul
mov
push
pavgb
and
insl
cmp
popa
xor
loopne
popw
and
lds
xchg
lret
lods
inc
mov
fbld
je
push
dec
cmp
inc
adc
dec
jp
ljmp
call
push
inc
pop
add
aaa
pop
sbb
xchg
and
and
adc
clc
adc
xor
or
daa
fldenv
dec
cwtl
out
mov
add
pop
mov
es
je
push
or
mov
sub
xchg
and
fwait
pushf
mov
rorl
pop
imul
test
sbb
cld
ja
xchg
cwtl
popa
inc
xchg
hlt
outsb
push
jge
ret
es
mov
mov
inc
in
push
test
addl
pop
les
sub
stos
arpl
mov
stc
sahf
and
aaa
out
call
adc
pop
cmpsb
or
sbb
arpl
push
or
aam
ja
xchg
dec
ret
iret
mov
pop
xor
ss
sbb
push
jg
adc
or
pop
movsb
jbe
cmp
je
jmp
mov
mov
push
dec
lahf
or
andl
xor
inc
and
ret
icebp
push
inc
or
lcall
cmp
mov
xchg
or
sub
mov
enter
xchg
ljmp
addb
lea
push
jno
pop
add
push
in
mov
add
nop
mov
call
cmp
push
mov
inc
pusha
dec
je
repz
es
push
repnz
fidivl
clc
mov
in
mov
xor
mov
mov
icebp
or
dec
iret
aas
add
xchg
testb
or
movsb
sbb
or
adc
mov
adc
inc
scas
jge
nop
pop
xchg
sbb
xlat
fadds
sti
mov
inc
cmp
inc
add
sbb
add
push
je
gs
clc
test
inc
adc
pop
inc
xchg
xchg
adc
add
add
and
adc
out
jge
rorb
sbb
lret
push
xor
pop
test
fcoms
or
and
jne
jne
add
dec
fucomip
add
inc
mov
cs
mov
out
aam
and
inc
hlt
and
jp
das
inc
or
inc
push
int
ror
orb
cwtl
and
mov
or
pop
cli
and
mov
sbb
or
in
fstps
inc
or
inc
sbb
in
ja
fwait
and
inc
add
or
jge
popa
sub
aas
sub
pop
inc
add
lahf
push
pop
xor
jo
inc
ds
es
sar
popa
sub
xchg
in
jns
push
push
adc
aam
xor
adc
push
test
das
test
jno
pop
aaa
flds
sub
movsl
xchg
sbb
mov
sub
out
push
stc
push
lods
push
das
jne
mov
rorl
test
add
jg
lods
sub
mov
sbb
inc
popa
mov
shlb
jne
sub
pop
fsincos
or
push
inc
add
xor
add
test
cmp
add
add
hlt
mov
mov
and
rcl
in
xchg
fwait
push
lret
add
inc
dec
dec
xor
mov
roll
pop
pop
dec
mov
inc
xor
out
inc
outsl
pxor
inc
pusha
ljmp
cmp
cmp
sub
push
cmp
jle
jmp
pop
jmp
sub
std
and
mov
leave
das
add
mov
mov
mov
pop
push
fnstcw
dec
push
sub
jp
adc
push
dec
dec
and
jecxz
push
add
lock
sub
xchg
mov
sbb
outsl
mov
add
outsl
fsubrs
and
dec
and
fcoms
xor
push
mov
add
mov
adc
gs
fadds
js
pop
bound
mov
icebp
shlb
test
sub
neg
jmp
arpl
and
lds
cli
add
push
push
adc
push
or
and
mov
or
inc
sti
push
aaa
and
push
mov
int3
mov
shlb
jmp
push
rol
cmovae
in
das
cmc
test
adc
pushf
jp
mov
sbbl
add
aas
mov
push
mov
jo
mov
or
popa
dec
sbb
mov
or
xchg
movsl
mov
push
cmp
test
sahf
or
rol
inc
push
jae
sahf
adc
inc
push
xchg
les
pop
or
dec
xlat
mov
cmp
push
out
in
and
push
icebp
jmp
inc
inc
or
out
ret
rorb
cmp
pop
mov
or
lret
add
es
lods
les
fsubrl
mov
sbb
or
push
xor
xchg
test
mov
cmp
dec
xor
aad
in
aaa
and
lods
dec
leave
adc
rorl
xchg
fmuls
gs
and
ret
lock
mov
in
sti
cmp
inc
jmp
in
dec
push
sub
push
je
add
jmp
pop
ja
mov
add
pop
dec
or
inc
bound
icebp
daa
xchg
std
add
cmp
into
and
and
movsl
inc
xor
or
jo
adc
cmpl
dec
rcr
or
test
insl
push
push
and
iret
je
cltd
mov
mov
mov
push
movsl
adc
jl
add
mov
pop
push
out
jne
and
sbb
lret
clc
push
pop
inc
rorb
xor
add
push
add
andl
insl
xchg
pop
dec
inc
add
sub
pop
sub
adc
insb
cmp
cltd
push
cmpsb
mov
popa
jge
add
push
inc
xor
xchg
es
sarb
fucomip
or
lcall
jmp
cltd
pop
fcompp
push
cmp
das
sub
mov
loopne,pt
cld
sbb
sub
sbb
adc
mov
mov
test
fs
outsb
mov
and
adc
vxorps
inc
inc
or
pop
or
cmp
cld
lds
enter
pop
xor
and
xor
xor
js
or
das
pop
mov
mov
das
mov
lds
ret
leave
jge
push
xor
or
das
add
cmpl
in
or
cmp
cmp
pop
mov
test
pop
mov
outsb
inc
xor
mov
xchg
mov
fs
cmp
add
movsb
pop
cmpl
jge
stos
sub
xor
push
cmp
leave
and
enter
imul
push
cmp
and
add
movsb
inc
fisttpl
and
in
jnp
icebp
rclb
icebp
lods
push
ljmp
push
mov
cmc
jle
mov
clc
sbb
sub
jae
and
push
or
xchg
idivl
cmpsb
xchg
push
or
pop
ljmp
fwait
inc
and
ds
out
mov
fcomip
add
cmc
xor
pop
adc
or
lea
and
xchg
int3
shll
pop
jbe
int3
xchg
add
add
cmp
loopne
int
fsubs
or
mov
adc
xor
jo
pop
arpl
xchg
icebp
add
sub
or
jecxz
mov
enter
iret
sub
dec
pushf
mov
sub
inc
fwait
or
xchg
sbb
out
in
push
inc
pop
xchg
popl
mov
xor
fs
jmp
andl
add
add
dec
xor
jo
jno
xchg
jl
mov
mov
icebp
ret
sub
xor
daa
jl
iret
jle
out
cmp
in
mov
sbb
jge
jo
or
cmpsl
int3
mov
push
scas
das
and
mov
push
jo
mov
rcrl
out
aaa
sub
xor
outsb
cwtl
int
imul
pusha
pop
xchg
sbb
mov
inc
aaa
mov
jne
daa
jmp
aam
pop
lock
pop
sub
add
cs
sarb
ss
fcmovb
lods
ret
rcrl
xorb
je
and
dec
push
in
test
out
push
pop
or
xchg
add
push
mov
xor
repnz
and
jbe
data16
mov
pushf
enter
or
cmp
pop
je
mov
sbb
bswap
mov
loopne
or
sub
and
ja
insb
and
adc
push
addr16
outsl
fadds
mov
lret
inc
push
jmp
adc
in
dec
or
or
pop
sub
fcmovne
and
pop
dec
outsl
or
pusha
adc
or
dec
sub
xor
rclb
inc
test
pushl
jge
pop
adc
inc
and
pusha
insb
addr16
daa
push
jb
or
nop
call
xor
sti
xor
xlat
imul
popa
sarl
faddl
and
sbb
push
and
sbb
cmpsb
push
or
adc
dec
mov
mov
inc
pop
mov
push
push
lea
push
xchg
hlt
xchg
pop
mov
adc
xor
addl
dec
mov
lds
mov
sub
sbb
pop
mov
jo
push
jg
aas
jb
mov
dec
ja
mov
inc
mov
cmp
mov
push
add
mov
and
in
jb
mov
xchg
andl
sub
outsb
push
popa
rcll
std
adc
jp
stos
fwait
adc
stos
inc
fstpl
push
push
push
das
leave
dec
je
cmpsb
or
and
push
in
add
push
and
adc
pop
pusha
add
add
dec
incl
jb
pop
lcall
add
dec
pop
pop
stc
pop
pop
dec
je
mov
pop
push
dec
lods
add
dec
cmp
pop
cmp
mov
into
mov
push
xchg
push
test
pop
pop
flds
imul
movsb
cmp
add
pushf
push
jle
ret
pop
fs
jp
jo
orl
inc
mov
push
add
ret
inc
or
stos
sub
sub
xchg
dec
push
adc
pop
xchg
add
sbb
adc
enter
or
mov
push
sti
xchg
decb
xor
insb
xchg
inc
sub
xchg
in
pusha
pop
pop
and
mov
or
add
or
add
xchg
and
lret
push
add
xchg
sub
popl
fists
out
enter
adc
xchg
adc
fnstenv
lock
sbb
push
lds
test
dec
add
dec
sub
jl
add
clc
jbe
mov
daa
mov
test
dec
or
or
add
pop
sub
adc
mov
xchg
add
sbb
inc
xorb
push
out
mov
frstor
andb
mov
adc
loope
imul
cmp
in
inc
mov
push
inc
fucomip
sub
repz
popa
call
cmpl
adc
sarb
rolb
andb
mov
push
pop
add
mov
in
lock
or
je
mov
in
pop
pushf
mov
mov
add
pop
mov
pop
mov
xor
orl
insl
mov
std
and
addr16
add
inc
dec
or
lock
call
nop
mov
add
subl
add
mov
jp
hlt
negb
mov
data16
xchg
daa
mov
inc
add
sub
and
faddp
push
adc
push
fstl
sti
xor
sbb
and
or
jb
int
add
subl
lods
cmpsl
inc
sahf
dec
pusha
mov
jo
mov
bound
das
cmp
add
and
scas
outsb
push
adcb
shl
stos
cmp
or
pusha
xchg
xchg
mov
int3
xor
lods
leave
cld
aam
jmp
sub
js
and
inc
add
mov
mov
pusha
int
or
rcrb
movsl
shlb
push
nop
aas
inc
sahf
add
or
icebp
inc
push
adc
xchg
rorb
sahf
sbbb
pop
dec
lods
adc
add
push
subb
loope
test
pop
popf
scas
neg
inc
and
pop
xor
popa
jb
jae
sbb
push
lds
stc
ret
and
sbb
mov
fstpt
inc
push
loope
add
mov
sub
ja
push
jne
sub
inc
mov
sub
sete
enter
jmp
test
dec
iret
jp
jle
jne
stos
add
test
stc
ljmp
inc
scas
xchg
sbb
or
in
sarb
push
test
fistl
xor
or
iret
or
dec
xor
xlat
xchg
inc
adc
shrb
mov
in
lea
pop
subb
leave
in
outsb
adc
push
movb
add
xchg
fcompl
pop
or
mov
scas
pop
jo
dec
cmpb
je
adc
add
or
daa
push
pop
push
aam
cmp
jo
dec
sbb
lods
jae
sbb
dec
inc
cwtl
xor
inc
jbe
movsl
pop
xchg
repnz
adc
sbb
push
enter
mov
mov
mov
ficoml
add
and
push
adc
mov
aam
pop
or
enter
insb
and
or
cli
add
sbb
leave
mov
jae
xor
inc
add
push
ret
fbld
xchg
mov
sub
sub
imul
cmp
add
gs
andl
add
pop
pop
out
out
aam
push
data16
dec
pop
xor
mov
in
movsl
aas
das
cmp
push
hlt
orl
jle
adc
push
mov
adcl
aad
pop
pop
ret
add
add
adc
add
jno
mov
xor
scas
aad
add
push
xor
and
xor
and
add
bnd
xor
cmpsb
inc
or
mov
xor
inc
and
sbb
sbb
add
add
loope
ficoms
das
push
and
sahf
fisubl
mov
int3
aaa
or
rclb
nop
lahf
icebp
ss
or
rol
sbb
cmp
fnstsw
cmpb
lds
hlt
pop
add
dec
add
shl
jl
sbb
ljmp
js
addr16
cltd
xchg
cmpb
sbb
push
pop
js
loopne
inc
pop
ja
jg
inc
cmp
out
or
test
sbb
adcl
dec
daa
xchg
lock
add
xor
or
ds
fsubp
mov
cmp
addr16
int3
enter
mov
loopne
bnd
pop
fsubrl
adc
cmpl
lahf
aam
fadds
push
loopne
or
jecxz
dec
sbb
add
push
mov
or
sbb
mov
es
and
cmp
jne
shlb
and
or
inc
ss
add
or
es
scas
stos
xor
clc
xchg
and
push
nop
icebp
or
decb
dec
clc
jne
pop
pop
xchg
push
test
inc
leave
inc
adcl
pop
xchg
insl
loopne
lock
add
mov
cli
mov
mov
sbb
jg
add
lds
jne
mov
pop
and
adc
jecxz
jo
and
mov
pop
sub
cmp
xlat
sbbb
mov
icebp
lods
push
cmpsl
xlat
push
pusha
je
shlb
adc
dec
subb
ret
loope
popa
sbb
ja
or
mov
pusha
rclb
sbb
mov
int3
test
les
mov
add
xchg
mov
or
xchg
insb
xor
mov
jmp
andb
std
pop
xchg
cmp
dec
fs
inc
add
lock
adc
jg
leave
pop
loop
imul
js
inc
sbb
fimull
enter
and
inc
inc
or
xor
mov
jp
mov
in
fnstenv
fisubrs
xrelease
jp
add
sub
fiaddl
addl
and
push
add
icebp
aas
fistl
inc
jg
je
lock
push
aas
jb
or
and
adc
push
jge
or
out
cs
insl
sbb
jg
add
sub
add
scas
dec
mov
test
cltd
lock
jne
inc
and
pop
aad
in
sub
push
bound
and
or
sbb
cmpsb
mov
pop
pop
xchg
push
lods
repnz
xchg
mov
inc
out
mov
nop
add
aam
mov
pop
or
xor
fsubrp
adc
test
insl
adc
xor
dec
imul
adc
and
add
rclb
imul
sub
dec
push
sarl
cmp
pop
jge
jnp
cmp
inc
dec
push
clc
dec
orb
xor
dec
aas
pop
test
outsb
or
sti
mov
xor
cmp
dec
or
sbb
dec
sbb
hlt
out
enter
fstps
inc
ljmp
lea
add
dec
pop
dec
ret
outsb
pop
aaa
xorl
sahf
add
loope
pop
ss
ficomps
loop
ja
sbb
hlt
nop
adc
mov
push
out
mov
cmp
lock
adc
daa
outsl
sub
outsl
cmp
daa
outsl
push
lock
int
adc
lea
adc
and
outsl
es
xor
sbb
or
inc
dec
roll
sbbb
mov
jne
jl
and
xchg
fldenv
and
sbb
cmp
add
push
adc
sub
or
test
add
jbe
and
addr16
add
or
lea
mov
dec
add
popa
jp
mov
sub
jecxz
mov
pusha
push
shl
in
cmp
or
jbe
add
clc
xchg
repz
sub
sub
add
movsb
pop
cmp
add
pop
push
or
xchg
gs
xchg
or
or
pop
push
cs
ret
lea
pop
xor
xlat
rcll
popf
ds
sbb
in
dec
movsb
outsb
mov
push
add
or
add
add
add
dec
mov
fcoms
inc
adc
loop
cmp
mov
insl
push
mov
inc
pop
lea
push
fadd
mov
cmp
push
mov
jb
adc
pop
and
dec
mov
movsb
ja
adc
iret
inc
out
inc
jg
inc
jns
nop
inc
test
fld
arpl
jle
movsb
neg
popf
lahf
sbb
xchg
cmp
xor
dec
jb
sbb
push
cmpsb
adc
add
inc
xor
sti
in
mov
add
pop
icebp
jl
push
out
andl
pop
notl
test
iret
push
adc
cmp
sub
push
push
push
push
mov
xchg
push
insb
sub
and
insb
adc
daa
pop
fs
pop
fwait
or
pop
shrb
lds
fistpll
pop
sbb
shlb
loope
and
cmp
lods
clc
mov
mov
push
push
mov
das
push
xchg
mov
push
les
cmpsl
outsl
add
data16
shlb
push
popa
bound
jge
and
xor
psrlw
mov
xchg
or
jbe
jns
pop
imul
adc
xor
add
add
and
mov
xchg
dec
cmp
cli
mov
mov
xor
loop
mov
add
fxtract
dec
add
mov
sbb
int3
adc
push
scas
fs
mov
int
je
xchg
int3
add
sub
xchg
jecxz
pop
ror
inc
and
sub
mov
jmp
fisttps
add
add
lock
shlb
push
movsl
and
push
rcrl
cmp
ja
mov
push
jecxz
scas
aas
aaa
cmp
shll
jmp
add
sbb
add
pop
push
aaa
mov
dec
out
and
sbb
mov
xchg
cmp
add
jb
add
fdivl
das
adc
ret
adc
inc
cmp
lods
xchg
ficoml
or
pushf
bound
pop
dec
sbb
lahf
daa
sbb
xor
mov
sbb
push
int
test
daa
pop
push
faddl
sbb
push
add
ret
daa
inc
adc
test
fldt
lods
add
push
inc
add
pop
imul
jo
lcall
or
jbe
mov
adc
add
and
por
mov
jo
xchg
add
popa
cld
or
mov
jbe
dec
and
jo
lahf
add
jmp
psrlq
sahf
hlt
je
mov
cmpb
xlat
pop
jb
je
mov
dec
xchg
arpl
add
leave
sbb
add
or
lock
inc
jne
mov
dec
pop
iret
cmpb
cmpl
add
mov
jns
and
scas
jne
push
xchg
jnp
insb
rcll
addr16
and
pop
and
jge
jne
fs
mov
cmp
in
mov
stos
ficompl
leave
aaa
pop
inc
xor
cmpsl
jg
jne
and
cmp
ja
add
pop
inc
pop
cmp
jp
imul
sbb
jo
cmp
cld
popf
daa
jbe
pushf
cmp
je
adc
fldl
fsubl
std
movsb
add
xchg
lock
sub
jmp
shll
or
or
lock
add
mov
mov
push
iret
sub
jo
or
push
ja
or
pop
push
dec
je
pop
xchg
in
add
in
add
sbb
push
cmp
push
dec
popa
mov
mov
pusha
jmp
int
in
les
pop
sub
imul
inc
jb
jge
sahf
pop
mov
push
popf
gs
es
test
add
pushf
xchg
inc
add
and
sub
add
xchg
pop
push
jbe
cmp
jl
jno
fnstcw
movsb
or
mov
dec
bound
iret
nop
and
rolb
gs
cmp
testb
pop
add
je
ljmp
add
shll
add
xchg
mov
loope
enter
arpl
mov
adc
nop
call
mov
add
push
sbb
adc
loopne
test
jne
mov
push
cmpsl
mov
jo
mov
or
xor
shlb
mov
mov
divl
mov
pop
and
dec
lock
cmpsb
daa
sbb
cwtl
mov
cmp
lock
lods
lret
shl
xor
pop
lahf
clc
subl
xor
jecxz
out
orb
adc
add
ja
pop
out
cmp
and
push
loopne
sub
push
cmp
cltd
xchg
pusha
fwait
stos
xor
adc
pop
adc
mov
cs
mov
cmp
test
int
les
outsb
sbb
add
pop
or
jbe
or
jo
sub
pop
add
jp
lcall
push
fisttps
lods
sub
and
sar
imul
pop
add
push
jnp
sarl
sub
arpl
cmp
repz
in
jae
sbb
adc
cmp
sti
push
andb
fisubl
das
sub
push
push
ret
aam
xor
cmp
rolb
ret
sub
cmpsl
xchg
push
pop
sub
in
inc
mov
pop
roll
sub
test
add
push
dec
adc
imulb
push
dec
mov
and
roll
mov
push
cmp
sbb
imul
test
and
push
cld
pop
pop
jbe
aam
test
cmpl
cmpl
rclb
inc
and
sti
dec
pop
andl
inc
dec
loopne
and
adc
orl
iret
cmp
fmulp
adc
push
push
lock
jl
lahf
sub
and
mov
push
lods
popa
pusha
sub
clc
fcmovne
ret
and
mov
int
mov
push
jmp
or
and
mov
std
adc
addl
rolb
jo
mulb
add
dec
xchg
pop
cmp
adc
jmp
ja
sahf
add
addr16
in
mov
add
inc
xchg
inc
loopne
int
sbb
mov
adc
mov
fidivrs
and
fdivs
sub
or
add
xchg
push
fdivrs
cmp
jecxz
inc
or
sbb
pop
sub
add
add
xchg
stos
ret
mov
or
and
adc
adc
add
pop
aas
js
or
push
or
add
fmuls
jl
jmp
or
or
push
sub
add
addr16
lock
daa
lahf
push
in
or
sub
xor
and
push
repz
out
pop
or
add
iret
mov
enter
mov
sbb
mov
sub
js
pop
es
or
es
and
int3
lods
jmp
sbb
adc
pop
push
and
cmpsl
js
leave
inc
push
adc
std
add
rcrb
jo
adc
js
cld
in
lods
mov
je
xor
sbb
jmp
push
test
bound
es
adc
lret
push
mov
dec
inc
dec
push
mov
dec
call
xor
pushf
push
sbbl
sub
adc
dec
ret
daa
lea
jle
aam
mov
inc
lea
incb
or
outsl
and
or
sub
in
adc
sbb
dec
add
fldl
incb
push
mov
jo
lock
jo
add
lock
push
cli
mov
mov
incl
imull
mov
xor
and
xorl
mov
cmp
iret
je
push
and
cmc
fcomi
mov
mov
ret
pop
inc
cmpl
jne
fcmovnu
and
mov
push
sub
in
cli
cmp
push
xor
add
push
add
add
inc
getsec
sbb
or
mov
xor
rcr
sub
mov
jne
test
aam
inc
mov
mov
pop
pop
or
inc
or
or
daa
test
mov
pusha
test
fisttpl
call
lcall
fcompl
xor
sub
test
jmp
dec
and
js
shll
orb
pop
jmp
add
subb
cmp
xchg
mov
ret
adc
adc
fs
sub
pop
sbb
icebp
and
mov
xchg
or
dec
dec
jmp
and
movsb
insb
sub
or
notl
inc
call
scas
dec
loopne
jne
je
xchg
inc
ret
es
js
push
shll
dec
pop
adc
push
inc
mov
sbbl
dec
add
dec
push
push
add
int3
mov
adc
jmp
xchg
test
dec
adc
int3
subb
sbb
icebp
adc
mov
ss
or
add
xchg
or
mov
push
enter
sub
mov
jne
jle
mov
or
push
sbb
or
jo
int3
sub
mov
mov
mov
xchg
push
mov
sub
xchg
cmp
and
push
mov
test
or
enter
pop
test
outsl
nop
and
or
mov
lods
sbb
cs
popa
mov
and
lock
mov
pop
mov
ds
dec
adc
mov
or
aaa
cmpl
test
hlt
sbb
sub
and
in
add
movsl
pop
scas
cmc
sbb
xor
push
and
pop
fisttpl
test
push
adc
jo
int3
push
mov
or
lea
jns
pop
mov
inc
cmpl
inc
inc
je
ja
push
cmp
dec
cmpb
in
jo
mul
and
insl
sbb
mov
mov
sub
hlt
xchg
dec
cmc
insb
adc
insb
pop
mov
adc
pop
addr16
call
imul
mov
xchg
ds
mov
push
ss
in
pop
sahf
mov
mov
push
sub
les
mov
orl
pop
add
movsb
scas
mov
mov
dec
or
sbb
xor
xor
addb
dec
dec
mov
fistl
nop
ret
add
shlb
stc
stos
cmp
add
mov
mov
sti
sub
mov
dec
mov
movsl
shld
push
subl
addb
pop
in
aaa
scas
or
mov
dec
mov
cmp
enter
roll
dec
or
xchg
jno
icebp
mov
push
cmp
cmp
adc
mov
test
fdivrs
das
fwait
arpl
cmp
subps
test
rclb
jne
lretw
mov
or
jns
mov
and
sub
push
bound
imul
sti
pop
jnp
xor
pop
push
inc
pop
lods
popf
xchg
mov
in
ss
sbb
xchg
popl
pusha
dec
iret
cmp
push
push
pushf
sbb
inc
add
mov
and
xor
les
dec
inc
mov
int3
ret
lahf
cmp
pop
mov
jno
mov
and
and
rcll
pop
shlb
xchg
notb
sub
int3
mov
dec
test
mov
mov
ret
dec
pop
or
pop
lds
icebp
es
xor
mov
test
sbb
pop
xor
add
fwait
push
add
jmp
dec
add
pop
outsl
je
add
and
add
pop
pop
lahf
mov
lods
xchg
dec
push
nop
mov
nop
sub
cmp
jl
add
sbb
mov
fwait
add
loopne
fistl
ja
cmp
nop
add
push
sbb
loope
xchg
shrb
stos
sub
cltd
icebp
outsl
or
mov
test
int3
push
push
push
mov
sbb
or
xchg
dec
inc
or
mov
xor
add
cwtl
rol
mov
mov
push
add
dec
add
loope
xor
test
sub
add
dec
roll
mov
sbb
push
subb
in
or
leave
adcb
push
push
cmpsl
clc
add
ja
pop
fs
decb
jnp
jp
decl
push
mov
inc
add
inc
push
adc
es
lock
mov
xlat
inc
or
aam
adc
xchg
std
xchg
test
xchg
cmp
pop
xchg
pop
xchg
mov
xchg
adc
pop
cmp
sbb
nop
jle
adc
add
and
dec
push
cmp
jp
xor
jbe
add
cmp
rolb
mov
bound
sbbb
cltd
loopne
inc
aam
sub
test
push
cwtl
push
push
xchg
push
or
cmpb
mov
add
test
mov
or
dec
ret
shll
daa
cmpsl
data16
jns
lret
fadd
fst
jne
fwait
inc
not
arpl
pop
arpl
dec
imul
adc
add
add
mov
xor
jmp
or
push
dec
fisttpll
pop
clc
test
ja
iret
movb
fsubs
xor
xchg
adc
jmp
cmp
cmp
push
lea
add
mov
push
call
sub
add
arpl
mov
inc
add
enter
pop
add
leave
shll
add
shll
sbb
mov
movsb
mov
daa
dec
add
xor
add
sbb
neg
lds
mov
dec
push
mov
add
scas
inc
out
cmc
or
xchg
or
or
push
bound
dec
in
adc
push
imul
int3
es
outsl
sub
push
add
dec
mov
sub
addb
mov
mov
add
fdivrl
addr16
outsl
adc
xchg
sbb
sbb
or
es
adc
add
arpl
mov
add
pop
fisttpll
xchg
outsb
and
fildl
xorb
fists
cmp
sbb
adc
push
idivl
or
sbb
and
cwtl
push
out
sub
sbb
xor
dec
ja
push
dec
pop
sub
adc
ret
mov
and
pusha
imul
cmp
je
icebp
mov
or
add
daa
in
mov
xor
ss
adc
sub
push
xchg
lock
xor
mov
shl
int3
lock
push
adc
pop
jnp
out
dec
pop
mov
dec
mov
in
adc
xchg
push
adc
cmp
add
or
sarb
push
pop
and
sbb
sbb
adc
mov
mov
aad
pcmpeqw
add
sub
sarl
push
loop
inc
int3
jge
sub
mov
scas
clc
and
mov
mov
xor
xchg
or
scas
xchg
icebp
jns
stos
addb
sbb
and
mov
imul
dec
cmp
loopne
pusha
mov
pop
lock
gs
and
dec
dec
clc
push
push
sub
sub
pop
jle
mov
mov
xor
or
inc
cmp
jmp
jl
and
xor
sub
xchg
aam
in
jb
jmp
lret
cmpsl
lret
jp
jl
sub
dec
mov
movl
sarl
movsl
push
cli
daa
mov
jmp
mov
jmp
sbb
xchg
imul
adc
pushw
sbb
pushf
fidivrs
mov
sbb
mov
repz
xchg
lret
clc
aad
clc
test
inc
jg
std
test
scas
mov
pop
push
adc
cmpsb
add
jmp
rcrl
or
sbb
jb
mov
pop
dec
enter
pop
mov
cmp
or
add
lock
cld
sub
sar
xchg
sarl
and
jnp
xor
adc
repnz
xor
testb
cld
arpl
and
push
pop
arpl
rolb
or
test
xor
adc
clc
push
and
sub
outsb
loop
lods
inc
cld
inc
add
or
add
sti
jo
jmp
jne
push
es
cmpsb
sub
push
cmpsl
mov
movsl
loopne
pop
dec
add
dec
add
add
das
dec
pop
jns
add
leave
mov
adc
lds
cmp
inc
popf
mov
adc
mov
and
adc
mov
ss
push
and
adc
push
push
jnp
js
subb
mov
inc
ret
mov
mov
ja
imul
lods
add
jo
inc
push
mov
loop
add
xor
push
fldcw
in
aaa
test
in
enter
fldl
rep
in
or
pop
aad
dec
or
or
pop
loope
pop
les
shrb
push
add
pop
imul
adc
outsl
movsl
and
pop
int3
fadds
cwtl
mov
adc
das
popa
dec
mov
mov
call
imul
aam
add
and
inc
lods
dec
jmp
jmp
mov
stos
data16
addl
xchg
lret
ss
pop
mov
cmpb
pop
loopne
test
ret
push
sub
test
inc
sub
outsb
push
repnz
xlat
popf
addl
mov
rorl
stos
daa
mov
dec
daa
loop
or
or
xchg
mov
orl
popf
fstl
pusha
insl
jb
adc
das
jbe
or
in
cmpsl
adc
sub
repnz
and
loop
and
inc
jmp
sbb
jne
xchg
shl
and
es
loop
cmp
mov
ja
add
fiadds
out
subb
sbb
sub
sbb
arpl
stos
stos
jne
or
lcall
and
lret
jns
popa
xor
push
lahf
js
add
or
adc
and
sti
sub
mov
jg
por
cmp
mov
subl
ss
aas
sbb
lock
movsl
or
lret
xor
mov
ja
aaa
adc
jo
push
insb
push
push
xor
jo
mov
fs
jmp
mov
xor
ja
add
cmpsl
mov
dec
fldl
mov
mov
arpl
pop
loopne
mov
or
cmp
pop
stos
mov
int3
pop
aam
pop
sbb
js
dec
rol
fldenv
jmp
outsb
and
es
je
aaa
sub
divl
mov
or
out
and
dec
xor
mov
inc
sbb
xor
ret
leave
cmp
jbe
out
mov
xor
cwtl
or
popf
add
xchg
bound
nop
cmp
adc
pushf
test
xchg
adc
inc
movl
sbb
movsl
ss
lahf
daa
es
add
mov
ret
mov
pusha
add
add
in
pop
dec
cmpsl
sarl
add
or
out
std
push
and
adc
xor
mov
sbb
insl
and
lcall
hlt
dec
inc
and
push
inc
mov
inc
je
xorl
pop
xchg
cmp
xchg
lock
add
negl
adcb
pop
and
cmpsb
pop
sbb
dec
dec
inc
dec
mov
scas
mov
add
pop
push
mov
push
xorb
add
xchg
js
imul
sub
xor
mov
adc
rcrb
pop
push
scas
loope
lea
xor
pop
and
push
mov
fidivrl
sub
and
dec
sub
and
test
mov
jno,pt
insb
inc
shl
sub
loop
inc
rcrb
cmp
pop
enter
mov
in
das
jne
or
pusha
sub
xchg
les
push
imul
repz
rolb
scas
adc
or
xor
adcl
movsb
dec
pop
mov
xchg
adc
js
or
mov
loop
lcall
adc
push
call
xor
mov
mov
push
rcll
inc
push
je
fsubp
dec
and
mov
lock
sub
push
in
movsl
movsl
pop
ja
sbbl
data16
and
cmp
sub
cmp
sbb
mov
mov
xorb
push
mov
add
sbb
iret
add
sub
cmpl
sbb
shlb
sbb
push
stos
cmp
add
out
cmpsb
rorl
or
and
xchg
push
push
popa
mov
movsb
sbb
add
xchg
adc
add
push
dec
inc
inc
sub
pop
ret
jno
or
add
dec
add
inc
mov
rolb
or
iret
fstpl
fmull
inc
lret
xchg
add
cwtl
ljmp
mov
movsl
in
in
push
or
mov
inc
pusha
dec
loopne
mov
adc
lret
mov
enter
jmp
and
or
icebp
roll
movsl
push
sub
cmp
aam
or
aaa
repnz
ret
cmp
fs
imul
push
bound
aas
je
fwait
mov
push
in
fs
lock
inc
push
push
imul
xchg
lret
mov
dec
mov
rorl
mov
test
adc
ja
in
add
subl
add
outsb
lds
sbb
rcrb
add
push
push
aaa
cmpsl
adc
jmp
mov
push
gs
out
dec
pushf
sbb
mov
mov
fiadds
mov
das
sbb
cmc
cli
add
add
stos
hlt
fwait
mov
inc
stos
cmp
cmpsb
nop
inc
xchg
and
loope
or
sub
xchg
jne
out
inc
or
mov
inc
xor
push
insb
push
jb
or
cmp
into
push
dec
popa
paddusw
and
inc
aas
sbb
push
push
lea
mov
out
mov
xchg
add
shrb
lea
jno
jle
mov
andl
xchg
sub
jbe
das
jge
ss
je
outsb
pop
fnstcw
inc
pop
push
and
or
cltd
ljmp
mov
add
daa
lock
pop
adc
xchg
ss
pop
imul
mov
ficompl
cmpsb
mov
adc
and
out
pop
adc
mov
cld
mov
repnz
cmp
cwtl
push
or
ljmp
mov
jno
push
push
and
inc
aaa
fs
cld
cld
adc
dec
mov
dec
push
cld
cld
add
nop
add
cld
add
mov
lods
mov
outsl
add
lea
xor
sbb
lds
andl
push
mov
push
jo
rol
clc
dec
jmp
imul
sub
and
in
adc
das
or
lahf
mov
and
aaa
fcmovb
and
addr16
and
call
sti
jmp
pop
mov
adc
mov
jl
jge
sub
pop
add
addr16
xor
cwtl
test
jl
aas
dec
mov
cltd
jb
pop
fwait
dec
sbb
and
pop
jl
fcmovnbe
arpl
push
sub
movsb
inc
mov
shlb
xchg
pop
in
dec
jbe
mov
sbb
mov
add
mov
cwtl
mov
and
mov
mov
pop
ljmp
adc
mov
xor
and
xchg
shlb
jl
mov
das
je
and
bound
hlt
or
or
xchg
jl
mov
out
or
mov
cmp
inc
ret
nop
add
dec
rclb
add
insb
fucomip
pop
pop
insb
ljmp
push
adc
dec
cmp
pop
dec
dec
or
push
xchg
mov
push
fnstcw
movsb
add
imul
mov
jns
fcmovnb
cmpsl
dec
cmc
xor
sbb
and
mov
lds
in
dec
adc
xor
jae
fcompl
call
xor
xor
xchg
push
daa
mov
fistl
out
sbbl
sbb
das
pusha
mov
xchg
int3
cmp
jl
or
jle
daa
cmp
mov
fs
sbb
imul
arpl
mov
pushl
out
daa
outsb
dec
js
pop
pop
cmp
mov
clc
xchg
clc
or
jmp
rolb
inc
adc
xor
mov
gs
sub
lock
mov
cmp
je
mov
leave
pop
jg
call
push
pop
sbb
mov
jno
daa
daa
pop
iret
ljmp
adc
or
jno
mov
rorl
inc
shl
pop
das
xchg
test
cmp
shrb
leave
mov
call
rclb
data16
xchg
mov
jecxz
imul
cs
cmp
mov
or
lea
mov
adc
or
xchg
mov
push
lock
inc
fiadds
jecxz
mov
push
testb
insb
inc
add
inc
and
into
leave
jne
cmp
xchg
inc
inc
xor
test
adc
fcoml
cmp
cmp
push
out
arpl
mov
shll
xchg
andl
pop
negb
mov
or
movb
lods
and
add
mov
cmp
mov
sub
es
jae
lds
xchg
ret
je
adc
pop
jge
gs
andb
popa
jns
jne
jae
xchg
js
adc
mov
sbb
xchg
ret
xor
add
mov
cmpsl
mov
jo
insb
int3
jne
lret
xor
pop
lods
std
mov
mov
inc
pusha
adc
push
in
cmpsb
push
push
xor
iret
les
cmp
jmp
inc
pop
push
add
cmc
cmp
daa
pusha
adc
or
pop
xor
jae
cmpsl
mov
data16
icebp
ret
push
call
adc
hlt
mov
aad
xchg
sbb
adc
sbb
jecxz
call
mov
mov
xchg
cltd
inc
xorl
clc
in
aad
xchg
jnp
and
das
push
clc
pop
shlb
mov
iret
insb
add
or
mov
push
mov
jo
repnz
dec
or
rolb
mov
pop
xchg
push
xchg
sbb
lods
adc
xchg
std
pop
jbe
cmpsl
movsb
cmp
sub
push
add
movl
pop
loopne
xchg
ss
ficoms
xorb
ret
inc
mov
and
mov
mov
mov
out
dec
add
sbb
movsb
fisttpll
push
xor
pop
rorl
icebp
or
mov
loop
cmp
jl
incl
std
and
pop
rorl
testb
inc
add
sarb
and
enter
pop
xor
testl
cld
mov
cmp
setg
fdivrp
xchg
ja
inc
add
mov
add
cmp
setl
repnz
adc
inc
cmp
lret
inc
dec
jecxz
dec
pop
add
push
inc
xor
aad
cwtl
push
jbe
sub
test
mov
dec
jae
bound
mov
xchg
add
rorb
pop
lret
dec
rolb
jo
xchg
and
sarl
mov
sub
add
mov
jbe
pop
movsl
add
adc
and
xor
lock
cmp
sub
mov
or
je
pop
sbb
xor
cmpsb
or
sbb
jo
push
into
mov
mov
jmp
js
xchg
rclb
sub
inc
push
and
sub
scas
ret
rcrb
xchg
cmp
je
scas
adc
jle
mov
add
cs
add
push
hlt
add
push
push
and
mov
pop
outsb
inc
sub
inc
and
inc
or
xor
lock
xchg
or
daa
pop
add
sbb
sub
add
test
lock
add
cmp
hlt
rolb
in
enter
cmp
sub
pop
lea
cmp
loop
andl
movsb
aaa
les
lock
xchg
dec
test
sbb
inc
nop
movsb
repnz
mov
pop
mov
push
cmpsb
dec
mov
add
cmp
je
lret
add
and
fildl
adc
or
inc
insb
int
mov
cmp
fucomi
sbb
subl
push
xor
and
xlat
sub
outsb
nop
pushf
pop
cmp
mov
mov
shl
cmp
xor
xor
and
lea
sbbl
cmp
xlat
pop
add
add
movsl
sub
push
xor
mov
gs
mov
mov
push
lcall
in
inc
add
cmc
mov
sub
jmp
sbb
jbe
flds
inc
sbb
and
add
cmp
xchg
xor
pop
lods
cli
in
fdivs
mov
out
ss
xchg
out
xchg
adc
out
and
in
rorb
push
das
sub
cmpl
pop
pop
or
xchg
push
inc
and
ss
or
ret
push
push
test
or
ljmp
lock
xchg
push
jns
imul
mov
sbb
push
sub
and
xor
mov
mov
sub
inc
and
and
add
fldl
pop
mov
add
test
insb
in
pop
gs
xchg
xor
shlb
push
sarl
xlat
adc
push
push
adc
sbb
scas
into
lcall
andl
xlat
push
aas
movsl
bound
js
pop
adcl
push
jbe
pop
mov
lsl
lret
mov
addl
or
les
js
push
pop
inc
in
pop
cmp
pop
pop
fs
pop
xorl
cld
jns
jno
sub
sbb
loope
popf
ss
gs
xchg
fmuls
xchg
aad
push
leave
or
addr16
or
adcb
and
cmp
xchg
inc
scas
cmp
dec
dec
lock
xor
loope
lahf
out
pop
sbbl
mov
in
je
mulb
dec
and
add
nop
pop
xchg
pop
adc
movsb
inc
dec
cmpsb
call
leave
testb
int
sbb
shll
xor
adc
inc
xor
and
xchg
and
xchg
pusha
or
movl
sbb
test
ss
popf
jbe
je
or
push
rcrb
add
mov
shlb
mov
les
ja
lea
cmp
dec
sbb
sbb
mov
ret
mov
hlt
arpl
daa
pop
test
mov
pop
testb
xor
push
add
ss
and
cmp
add
mov
inc
mov
sti
xchg
lea
fnstsw
dec
les
or
sti
or
repz
add
pop
pop
enter
int
adc
sub
or
add
lahf
dec
dec
dec
inc
lret
mov
inc
inc
sbb
add
pop
or
pop
cmp
cltd
shlb
insl
push
notb
inc
or
sub
jb
leave
inc
sbb
xchg
dec
sbb
cmp
jle
inc
cltd
push
cmp
xchg
add
push
xor
jae
dec
movb
or
shll
les
sahf
movsb
and
jl
mov
mov
rcll
cmpl
xchg
arpl
dec
pop
dec
mov
jge
add
addb
out
rorl
xchg
xchg
aam
daa
or
es
insb
xchg
jmp
xor
adc
xchg
or
adc
leave
imul
and
inc
inc
sti
mov
jnp
sbb
and
xor
stc
aam
xor
xor
sbb
ret
aad
rolb
das
and
dec
pusha
pop
nop
inc
cmpsl
lods
xor
shll
test
sbb
rcrb
pop
iret
lret
inc
loopne
and
aam
sub
into
dec
arpl
push
aaa
inc
sbb
repnz
pushf
push
ss
pop
add
xor
push
test
test
ret
mov
cmpsl
addl
dec
cmpsb
pop
adc
push
push
fs
push
js
test
sbb
ja
mov
insb
inc
js
jne
push
fs
pusha
xchg
and
es
inc
pushf
add
add
jmp
jle
mov
inc
pop
sbb
les
je
das
js
addr16
and
and
cmp
bound
sbb
sti
adc
loope
test
or
mov
adc
dec
adc
mov
fcoms
push
gs
xchg
sbb
out
repz
adc
mov
and
dec
jl
pop
das
inc
rcll
cs
lock
dec
jne
push
pop
lret
pop
icebp
dec
sbb
adc
mov
dec
pop
mov
cmp
inc
mov
lahf
or
incl
mov
or
mov
xchg
aaa
sub
outsl
pop
in
loopne
mov
ljmp
les
std
pop
xchg
das
sub
loopne
xor
jle
lea
jne
adc
jmp
fsubrs
jo
inc
or
xor
cmpsb
adc
sub
mov
adc
pop
shlb
jno
jne
dec
paddq
or
pop
cmp
insb
ja
test
cmpsb
sbb
rclb
arpl
mov
mov
out
cmp
sbb
es
sbb
xor
imul
cmp
cmp
mov
pop
add
and
lahf
inc
in
sub
xor
into
fdivs
rcrb
rorb
xor
js
push
fwait
push
xor
mov
push
pop
inc
sub
test
pop
lods
into
push
mov
or
or
sub
mov
xor
orb
and
add
pop
and
mov
pop
and
sarl
xchg
xchg
pop
sbb
fucomp
test
cwtl
inc
jg
push
jg
adc
stc
add
or
inc
lcall
int
cmc
sbb
mov
inc
aas
outsb
push
lahf
negl
pop
push
daa
xchg
sbb
call
jns
inc
add
sub
sbb
aaa
stos
sub
adc
jns
orl
cmp
jnp
test
sub
arpl
jb
cmp
iret
daa
and
out
add
add
and
lods
sbb
add
loopne
enter
lret
repnz
andb
pop
or
or
lods
sbb
into
push
mov
rcrb
repz
aam
mov
or
ror
fbld
pop
jg
movl
adc
call
ret
xor
js
pop
add
fiaddl
fs
sbb
pusha
xchg
add
test
inc
push
add
or
les
outsb
and
inc
insl
adc
dec
push
lods
imul
mov
mov
mov
add
xor
test
insl
clc
fimull
pop
ss
mov
lods
and
add
add
sub
cmpsl
adc
aaa
filds
fidivs
xchg
add
add
push
pusha
ficomps
fmuls
out
icebp
jne
test
add
shrl
cwtl
xor
mov
loop
xor
mov
pop
inc
mov
add
cmp
rorl
pop
jge
rcll
push
mov
pop
xchg
out
movsl
mov
mov
jno
or
fucom
pop
gs
xlat
or
cmp
mov
sbb
dec
cmp
es
xchg
and
jns
and
ljmp
sahf
and
rorb
ljmp
int
mov
rcll
mov
pop
jbe
cmp
xlat
jo
lods
pop
cld
pop
les
data16
adc
adc
dec
mov
leave
or
or
loopne
stos
jmp
pop
and
sti
jbe
sbb
sbb
jge
loopne
ret
add
in
inc
nop
pop
lock
int
fcom
outsl
inc
shrl
das
test
dec
and
xchg
inc
mov
ficompl
jae
je
filds
imulb
arpl
in
fcmove
xor
shlb
xor
jmp
out
and
andb
or
jae
lcall
adc
sbb
cs
adc
xor
jecxz
ret
jbe
insb
je
xor
xchg
cmp
sti
or
mov
roll
or
rclb
and
pop
mov
movsb
inc
jecxz
jecxz
pop
xlat
cli
or
inc
inc
xchg
dec
sar
adc
je
push
fimuls
sbb
add
pop
inc
adc
movsb
insl
inc
push
dec
icebp
test
mov
and
jmp
scas
push
cmp
xchg
mov
sbb
rolb
sbbl
pop
pop
adcl
cmp
push
jb
sub
push
icebp
addl
add
and
mov
inc
add
adc
fmuls
jnp
cmp
mov
and
jl
push
and
sbb
lock
dec
movups
cmp
je
push
xor
and
mov
push
push
clc
mov
aam
pop
dec
pushf
pop
and
xor
mov
or
or
cmp
cmp
test
dec
in
xor
mov
push
imul
cmp
or
cmp
jne
subl
dec
mov
lods
insb
cmpb
adc
imul
fwait
lahf
mov
adc
addb
push
add
sahf
mov
mov
sti
loop
dec
mov
sbb
test
mov
shll
sbb
stc
cmp
bound
jmp
or
dec
cmpsl
add
cli
add
push
sti
addb
sbb
adc
mov
mov
insb
mov
popf
xchg
fdivl
aam
dec
jne
lahf
arpl
arpl
sub
aad
sbb
and
cwtl
cmpsb
mov
cmp
and
into
iret
adc
arpl
insl
aad
pop
pop
mov
cmpsl
sqrtps
xchg
push
outsb
loope
add
cmpsb
dec
jae
add
pop
adc
js
je
or
ljmp
xchg
fdivrs
dec
rorb
rcl
inc
daa
cmp
mov
das
aas
adc
xor
xlat
sbb
adc
pop
cmp
js
sbb
outsb
pop
dec
ud1
push
sarb
xor
ficoml
sbb
jno
push
sbb
pop
push
mov
push
enter
ret
xor
sub
pop
outsl
dec
push
mov
mov
rolb
xchg
xor
nop
ja
mov
pop
add
sbbb
stos
cmp
xor
mov
shll
cmp
sbb
mov
mov
dec
xchg
jno
add
adc
lcall
mov
mov
daa
mov
inc
mov
lea
cmp
or
pop
shlb
sbb
sti
in
push
dec
add
call
inc
cmp
scas
dec
add
pop
mov
hlt
xchg
or
mov
in
shrb
add
cwtl
mov
pop
pop
pusha
movl
insl
cmp
sub
arpl
insl
mov
lcall
loopne
sar
std
shrl
push
xor
sub
sar
and
mov
outsl
pop
adc
mov
jns
push
push
fmuls
add
aas
fiaddl
aad
push
push
mov
fcomps
adc
daa
add
cmp
sub
mov
mov
add
push
add
in
mov
xor
in
ds
clc
mov
ret
mov
flds
and
mov
dec
rorb
adc
push
add
mov
sbb
cld
push
jno
pop
pusha
sbb
test
and
enter
ret
pop
sarb
inc
movsb
daa
shlb
xor
outsl
les
or
xlat
xchg
and
fiaddl
fisubrl
js
mov
pusha
sub
stos
ret
mov
mov
push
xchg
pop
sub
es
mov
sbb
and
sub
int
in
mov
pop
mov
push
cmp
enter
loopne
cmpb
fisttpll
inc
call
pusha
test
adc
pop
add
outsl
mov
add
js
cmp
stc
loop
jl
stos
nop
adc
mov
add
jo
pop
inc
dec
mov
mov
cmpl
lcall
xor
cwtl
fadds
cltd
cmp
pop
jmp
or
mov
sbb
push
inc
or
popa
pusha
inc
subl
fisttpll
imul
cmpb
test
or
je
sbb
mov
adc
nop
dec
adcl
sbb
call
cmp
and
test
pop
lret
loopne
xor
loopne
or
outsb
xchg
add
mov
rcrl
or
out
mov
inc
xchg
movsb
dec
add
inc
pop
pop
xchg
xor
sub
inc
test
xor
test
xchg
cmp
mov
cmp
sahf
xor
mov
cmp
xchg
inc
add
ljmp
outsl
push
push
cmp
jne
jp
inc
dec
mov
and
adc
add
or
data16
adc
cmp
scas
js
fs
mov
adc
xchg
or
int
inc
inc
mov
mov
push
hlt
insl
and
cmpsb
or
stc
cmp
add
and
nop
pusha
adc
or
rcrb
orl
mov
test
xchg
add
lret
imul
inc
or
inc
test
nop
insl
repz
mov
mov
mov
adc
jo
imull
imul
pop
data16
and
sbb
pop
movsl
mov
sbb
jbe
push
arpl
cli
aaa
fwait
lcall
push
sbb
xor
cwtl
add
add
call
das
lds
jge
mov
popf
or
sbb
fldl
cwtl
popa
cmp
sbb
cmp
pop
or
movsl
lret
outsl
add
in
or
sub
push
or
mov
pop
mov
push
push
shll
push
sub
jno
mov
insb
ljmp
movsb
pop
jmp
dec
mov
push
xchg
sbb
sub
aas
and
test
js
pop
or
xor
sbb
add
jno
jge
mov
repnz
mov
loope
sub
cmpsl
pop
ret
push
xor
push
sbb
adcl
rorb
data16
sub
dec
pop
add
rorb
adc
add
aaa
and
cmp
call
inc
frstor
int3
pop
cmc
mov
jmp
or
cmp
jne
xchg
test
cmp
adc
add
jg
inc
pop
xor
or
xor
pusha
aas
add
mov
push
fwait
add
sub
inc
mov
push
or
jp
mov
dec
lock
icebp
add
sbb
push
dec
aam
xchg
pop
adc
fnsave
inc
lock
xchg
out
ljmp
fstps
sbb
js
push
call
mov
xor
subl
inc
cmp
sbb
ja
add
add
ret
mov
xlat
data16
sbb
and
sarl
addb
mov
inc
jecxz
mov
fcoms
ljmp
pop
xor
nop
and
jo
add
ljmp
pushf
mov
call
sbbb
cmpl
lock
inc
jne
movsb
and
xor
mov
movsl
clc
dec
jne
das
xlat
mov
cmp
or
add
hlt
test
loopne
pop
sar
cli
jge
add
clc
das
jge
mov
sub
addl
pop
orl
add
rolb
adc
inc
xlat
inc
js
mull
loopne
mov
addr16
mov
xchg
xor
addl
bound
push
in
sub
xlat
pop
loope
or
incl
mov
push
push
mov
je
out
dec
js
inc
sbb
dec
std
and
jo
mov
cmp
pop
dec
inc
jbe
loop
sbb
jp
cld
mov
popf
popa
roll
lcall
sub
inc
or
inc
arpl
sub
ret
push
mov
xorb
test
sbb
aaa
jle
push
xor
adc
xor
leave
xchg
jle
je
and
mov
add
mov
mov
jp
or
movb
or
or
sti
mov
test
jno
lret
mov
add
dec
pop
xlat
adc
inc
pusha
jne
push
out
in
pusha
mov
inc
or
lods
loopne,pt
movq
mov
pop
mov
andb
testl
jge
jle
inc
and
sub
rolb
daa
into
inc
pop
je
inc
xor
jmp
dec
inc
rcl
jo,pn
or
inc
inc
mov
rcrb
xchg
mov
add
mov
lret
jmp
and
ret
js
iret
int
fimuls
inc
test
enter
bound
cmp
lea
sbb
sub
ds
adc
push
fcompl
out
je
aam
cmpxchg
lods
mov
mov
arpl
push
stc
push
xrelease
icebp
jecxz
jge
adcb
sbb
jecxz
xor
and
xchg
xor
xchg
xor
pop
test
push
jecxz
mov
jns
test
pop
add
adc
mov
pop
pause
add
lcall
sub
aam
dec
push
xor
insl
mov
pop
dec
mov
mov
fcoms
and
mov
and
scas
mov
lea
jl
dec
rol
cmp
jo
shll
in
push
add
pusha
les
cmp
sub
std
add
or
test
xchg
jmp
inc
push
aam
sbb
or
and
add
rorl
mov
movsl
in
insl
push
or
inc
xor
stos
push
cmpb
sysret
xchg
adc
insl
add
pop
movsb
mov
scas
fldcw
aaa
jmp
rorb
inc
addr16
aas
rolb
std
outsb
inc
cmp
je
test
aaa
test
mov
lea
jne
adc
adc
pusha
sub
js
pop
insb
xchg
mov
ret
outsb
jmp
out
add
rorb
enter
addb
jp
push
and
rolb
ret
loope
shll
test
inc
push
cmp
movsl
jo
push
arpl
pop
inc
sub
inc
clc
into
aam
and
ret
mov
sbb
mov
or
jl
or
adc
gs
out
in
movsl
xchg
push
adc
xchg
inc
test
or
add
adc
pop
scas
pop
rclb
out
fimull
das
and
out
sub
add
lock
call
ret
mov
add
push
loop
sbb
shlb
bound
push
lcall
pop
call
popf
aas
clc
mov
lock
cmc
add
xorb
mov
push
xchg
lea
loopne
jle
add
add
movsb
pop
gs
pusha
pusha
pop
loopne
mov
xchg
jmp
push
sti
pop
sub
add
rep
cmpsl
stos
pop
add
pop
hlt
push
pop
neg
lea
add
pause
xlat
pop
cs
out
scas
mov
out
test
insb
cld
mov
sbb
cmp
cmc
nop
outsb
push
adc
fadds
imul
dec
pop
xor
call
inc
mov
inc
outsl
dec
insl
sbb
adcl
or
push
or
adc
xor
je
inc
sub
out
adc
or
lods
lret
movl
or
xchg
xchg
inc
or
popa
xchg
dec
add
or
mov
dec
movsl
adc
sbb
sbb
jns
aam
dec
jmp
xchg
push
aaa
adc
sub
and
mov
fdivrl
in
add
sub
jge
sarl
movl
mov
js
sbb
out
lock
in
je
dec
cwtl
jp
ret
push
push
inc
pop
repnz
jmp
jmp
cmpl
pop
daa
xor
push
adc
clc
aas
ret
pusha
mov
add
pop
mov
or
mov
mov
xor
mov
and
ret
in
inc
and
add
rcll
jns
cs
insb
insl
icebp
ds
and
pop
call
xor
dec
inc
xor
mov
insl
push
jno
fidivrs
inc
inc
push
fisubrs
push
xor
rolb
cli
in
adc
cmp
outsb
mov
sarl
lock
pusha
xor
orl
mov
add
fs
test
or
xor
mov
pop
cmp
leave
and
adc
pop
lock
jne
cmp
add
jl
test
in
cmpsl
sbb
cmpl
push
js
add
sub
lret
push
fcmovne
or
mov
and
xor
rcrl
xor
out
push
jno
xchg
fidivrl
imul
dec
aaa
lods
jne
shl
ficoml
cmp
test
add
imul
dec
lock
rcl
push
cmp
mov
out
xor
jnp
push
or
cmp
push
add
inc
psraw
mov
xchg
sub
cmpsl
out
xchg
imul
test
aad
int3
lret
jo
push
cmp
push
int
jecxz
sub
testl
aaa
cmp
jae
jo
popa
pushf
nop
cmp
mov
out
movsb
jle
dec
iret
add
daa
inc
fadds
mov
imul
jno
sub
jae
dec
icebp
xchg
mov
push
bound
adc
mov
loope
jae
xlat
xor
push
ret
push
andl
jp
movsb
mov
mov
pop
add
mov
sbb
jl
fs
call
or
push
pop
aaa
ret
les
aaa
lcall
stos
call
xor
mov
and
push
xor
and
push
popa
xor
adc
cmp
jg
inc
ds
push
or
inc
pop
loop
push
pop
dec
aad
adc
fmuls
lcall
push
popa
in
cmp
pop
inc
push
inc
add
loop
and
iret
dec
or
scas
push
cs
ss
call
call
xchg
ret
or
lret
pusha
push
mov
sbb
jnp
inc
jno
adc
cmp
add
popf
dec
jmp
stos
push
pop
sbb
mov
cmp
and
xor
aad
enter
xor
repz
xchg
and
pushf
add
gs
fnstcw
jmp
add
xchg
je
cmp
jne
int3
out
inc
dec
imull
imul
cmpl
xchg
pushf
pushf
adc
mov
loop
mov
rolb
bound
hlt
cmp
test
push
pusha
adc
ja
mov
mov
cli
mov
dec
adc
in
mov
les
mov
out
call
out
mov
inc
mov
or
mov
or
pop
cmc
pop
inc
inc
ret
push
popa
mov
jmp
push
xchg
cmpsb
adc
jo
inc
pop
add
insl
push
popa
addb
mov
loope
push
pop
xor
push
push
ret
arpl
add
lods
and
or
cmpsl
outsl
pop
push
and
arpl
cmpb
cmc
insb
cmp
mul
dec
adc
cmp
or
pusha
push
mov
sub
sbb
shl
sub
pop
je
mov
inc
and
pop
sub
fcoms
add
push
rcr
jnp
push
cmpsb
adc
sbb
addl
testl
icebp
pop
ja
mov
jg
mov
mov
loope
mov
dec
popa
in
add
pop
pusha
movsb
adc
dec
mov
xchg
push
push
test
or
inc
je
mov
inc
cmpsl
pop
ret
mov
aad
movsb
xor
test
pop
jb
push
cmp
out
scas
adc
dec
setae
rcrb
mov
cmp
mov
enter
mov
pop
mov
in
or
sub
test
mov
mov
inc
icebp
push
push
roll
push
je
imull
add
icebp
push
sub
jl
jo
lcall
int
adc
xor
addr16
adc
loopne
or
cmp
pop
clc
add
sub
sub
xchg
iret
push
lea
adc
cld
cli
sbb
in
pop
cs
lods
sbb
and
inc
and
xor
jo
cltd
or
xor
cmp
adc
and
pop
sub
and
in
inc
pop
xchg
and
in
push
pop
sbb
rolb
jp
mov
in
xor
add
xor
je
xor
push
ljmp
or
mov
cltd
pusha
fdivrp
push
mov
push
add
add
js
rol
rclb
inc
imul
scas
adc
lods
xor
xor
sub
pop
adc
and
mov
mov
in
mov
in
arpl
dec
in
fucomip
js
dec
push
dec
inc
pop
loopne
push
mov
cmp
cmp
lds
cmpsb
push
dec
mov
pop
xchg
xor
pop
jmp
sbb
mov
mov
and
dec
jmp
and
adc
cltd
jae
fcoml
mov
in
xor
lea
mov
lcall
mov
xchg
pop
in
xchg
scas
jge
icebp
fidivs
sub
push
in
add
loope
test
add
push
cld
dec
jne
inc
jb
sti
aaa
add
dec
cmp
and
pop
mov
or
xchg
dec
add
stos
gs
xor
jo
in
cmp
and
pop
cld
popa
imul
repnz
dec
jecxz
fadds
out
jne
xchg
inc
int3
movl
addr16
sbb
jmp
mov
and
stos
mov
inc
add
mov
mov
cmpl
ja
je
cmp
jne
rorb
adc
lea
sbb
sbbl
cmpsl
mov
jns
push
insb
insl
mov
sub
add
popa
mov
and
adc
dec
mov
push
mov
leave
test
sub
xor
dec
mov
and
call
jb
or
mov
test
sub
out
imul
xchg
sbb
sbb
sub
mov
in
call
js
inc
lret
push
jbe
pop
inc
mov
pop
push
je
and
movsl
push
int3
xchg
adcl
shrb
hlt
arpl
xchg
pop
add
movsl
inc
jo
icebp
sbb
or
inc
mov
cmp
mov
add
cmp
cmpsl
and
add
inc
jne
js
lahf
imul
pop
push
insl
bound
or
jb
jle
sbb
add
or
imul
mov
fmull
add
cli
or
push
imul
jne
mov
cmp
sub
or
xor
and
xchg
fdivl
std
jbe
pop
and
adc
push
or
push
xchg
rolb
or
int
xor
jge
ljmp
inc
fs
arpl
mov
rcrb
icebp
push
push
movsl
shll
movl
mov
int
adc
dec
inc
jmp
insb
insb
and
mov
xchg
filds
dec
add
add
and
jmp
aas
dec
or
out
cmp
push
arpl
or
push
popa
insb
adc
adc
in
in
mov
inc
xchg
xchg
cs
hlt
fiadds
add
aas
and
inc
push
dec
iret
adc
rorl
adc
add
or
iret
push
adc
pop
pop
adc
push
je
push
jae
push
movsb
adc
int
pop
add
cs
push
jnp
push
pop
js
paddsw
pop
aam
clc
inc
or
imul
aad
push
xor
outsb
faddl
inc
data16
ds
mov
adcb
sbb
mov
dec
or
push
adc
push
inc
sbb
ja
test
out
push
aas
xor
fs
xor
lock
nop
jle
add
in
xor
pop
xor
popa
push
idivb
pop
cmp
jp
pop
cmp
lcallw
pop
sbb
add
sub
mov
mov
add
test
add
push
inc
or
inc
rol
repnz
cmp
dec
mov
add
jb
std
lds
jns
dec
cmp
xor
mov
adc
subl
xor
add
inc
cmp
cmp
mov
cltd
mov
loope
nop
add
mov
sub
insb
and
adc
pushf
sbb
or
pop
popf
rolb
or
inc
pushf
dec
jecxz
pop
or
or
cmp
cmp
cwtl
or
pop
inc
jae
push
inc
cmp
inc
xchg
addr16
aas
inc
imul
or
add
pusha
insb
or
ficoml
insl
movsb
cmp
dec
pop
and
jmp
ficompl
call
insb
inc
sbb
sbbl
jecxz
ret
adc
cwtl
sbb
pop
rep
in
inc
xchg
fs
adc
push
rcrl
std
sbb
inc
dec
movsl
out
dec
out
mov
cld
mov
leave
xor
push
mov
hlt
nop
push
or
pop
dec
jecxz
imul
pusha
cwtl
dec
cwtl
rcll
pop
cmp
and
mov
push
jge
fiaddl
pop
or
imul
push
cmp
insb
dec
add
rcr
bound
add
aad
nop
dec
add
pusha
push
cld
inc
push
pushf
ds
cmovnp
pop
cmp
push
test
inc
jo
enter
rcll
pop
adc
inc
sub
xor
rol
jne
filds
popf
sub
mov
pushf
rcr
pusha
clts
mov
add
gs
sub
or
pop
pop
jl
adc
outsb
push
pop
pop
and
inc
mov
inc
push
push
add
lods
pusha
nop
push
and
or
add
sbb
push
icebp
add
sarb
lret
push
pop
push
pushf
mov
or
pop
push
addb
stc
mov
push
shl
mov
iret
push
test
mov
push
inc
sbb
insl
fmul
mov
dec
and
and
enter
popa
mov
or
sub
add
jo
sbb
push
mov
mov
insb
adc
outsl
adc
push
hlt
or
out
and
jns
mov
or
or
xchg
sbb
sub
or
sbb
out
fnstenv
xor
or
or
and
pop
insl
sbb
jo
inc
outsl
jno
imul
push
sbb
jb
mov
int
into
je
push
add
inc
dec
je
or
or
aad
inc
xchg
pusha
scas
js
cmp
les
pusha
loopne
lds
sbb
or
push
pop
and
adc
or
or
and
xchg
popa
ss
push
and
and
inc
lods
inc
test
fistpll
pop
mov
mulb
leave
xchg
or
jo
rclb
or
push
lea
jecxz
cmp
mov
sbb
push
mov
dec
or
or
in
adc
pop
jo
jo
in
adc
fs
out
or
mov
fildll
dec
divl
cmp
movsl
mov
imul
xlat
hlt
adc
dec
bsr
punpckhbw
cwtl
push
cmc
push
insb
imul
xor
or
inc
inc
inc
roll
dec
dec
dec
dec
clc
pop
cwtl
les
stos
push
push
push
push
push
pop
pop
pop
inc
adc
xchg
cmp
sahf
test
rcl
cmc
les
repz
push
adc
xchg
pop
cmp
pusha
push
dec
add
ljmp
adc
push
jns
rorb
fsubs
jne
xor
je
loope
inc
std
or
and
push
inc
lcall
faddl
js
ret
loope
mov
mov
fsubrl
and
test
add
cmp
ficoml
cmp
xor
adc
xlat
mov
mov
pop
add
and
out
sub
clc
in
roll
adc
je
add
sti
or
adc
push
jge
inc
jge
rcr
sbb
push
aam
aas
or
pop
lahf
sarb
repnz
cmp
mov
inc
or
jecxz
mov
lret
fs
enter
adc
mov
dec
add
addl
imul
adc
xor
jmp
inc
dec
cmpsb
popf
sub
inc
dec
pusha
movsb
add
call
sub
nop
sbb
xor
je
clc
enter
xor
add
mov
lods
push
movsb
cmp
pop
and
xchg
dec
push
cltd
les
sbb
les
and
in
mov
xlat
cmpsb
cltd
sub
addr16
aaa
push
loopne
addb
cvtps2pd
cmp
bswap
or
and
mov
pop
mov
xor
pop
sbb
xchg
icebp
add
push
xor
aam
or
insb
dec
data16
popf
mov
out
push
insb
das
mov
iret
popa
les
mov
enter
test
sub
mov
and
rorb
adc
and
fisttps
jmp
inc
arpl
push
add
adc
pop
and
nop
cwtl
xor
orb
shlb
sbb
lea
stc
mov
and
into
mov
inc
hlt
xchg
aam
outsb
push
inc
call
cmpsl
pusha
xchg
sar
xchg
inc
aas
imul
pushl
clc
mov
pushl
jmp
add
pop
incl
cmpl
jg
dec
add
cmpsl
addr16
jo
das
cli
rcrl
and
and
dec
add
adc
stos
prefetcht2
add
fcoml
rclb
mov
xchg
mov
int
lcall
es
sub
jle
in
outsb
sub
xor
or
jo
std
outsb
or
adc
int
lret
in
aaa
jmp
xor
xchg
nop
ja
xor
pop
xchg
jge
jns
pushl
ss
adc
in
push
mov
add
jb
lret
xor
pop
lret
inc
pop
dec
arpl
lea
mov
in
jle
inc
lret
in
mov
xchg
add
mov
mov
jbe
adc
xchg
pop
push
ja
lahf
mov
fsub
es
mov
inc
jecxz
dec
aad
imul
inc
cmp
pop
lods
xchg
add
cmp
and
cmp
enter
cld
mov
jl
insl
aaa
movsb
sbb
int
add
das
cmpb
fld
sbb
jle
and
movzbl
cmp
fnstsw
ret
push
adc
in
cmpsl
xchg
fisubl
and
and
imul
movsl
xchg
pop
fadd
je
iret
add
push
add
and
inc
das
lock
mov
es
cltd
je
xchg
sbbl
pop
mov
movsb
dec
mov
aaa
add
inc
es
push
mov
mov
cmp
fidivl
inc
scas
cmpb
popa
push
xor
pusha
aas
push
xor
enter
int
xchg
addr16
adc
mov
adc
pop
jb
xor
jns
stos
and
movb
pop
cmp
add
ds
andw
sbb
test
ret
test
adc
mov
adc
sbb
cmpsl
add
loopne
mov
push
jnp
ss
jle
adc
inc
jmp
pop
pop
mov
insb
mov
push
shlb
sbb
in
mov
pop
add
sbb
add
xchg
xor
imul
cmpsb
pop
rol
clc
pop
add
mov
cli
jecxz
sbb
push
and
or
pop
clc
lahf
cwtl
or
add
mov
jle
aas
inc
aas
adc
fucomi
dec
data16
inc
mov
cld
xor
push
jle
jnp
rcll
push
push
pop
pop
cmp
cmp
sub
or
fiadds
inc
pusha
dec
daa
rolb
and
psubw
and
addb
pop
cwtl
addb
addr16
aas
out
cmp
jle
cwtl
lea
pop
inc
andl
push
adc
or
pusha
loopne
in
xor
das
push
dec
xorb
cld
xor
pop
cs
es
int3
sbb
cmp
data16
adc
dec
or
and
lock
je
mov
push
imull
iret
ja
into
or
cmp
or
negl
mov
dec
add
inc
iret
or
xlat
xor
sub
xchg
icebp
jmp
or
push
movsb
or
loope
cli
push
imul
lock
xor
call
loop
sbb
cmp
int3
lret
aam
lock
xlat
xchg
push
adc
in
outsl
sbb
in
push
or
push
in
jmp
fcmovb
test
push
adcb
ret
jno
push
popa
ljmp
fcom
dec
outsl
or
sub
outsl
pushf
mov
ss
or
les
dec
and
xchg
or
out
adcl
adc
adc
jge
sbb
in
adc
pop
and
push
and
or
dec
popa
sti
call
mov
adc
dec
mov
mov
xchg
adc
mov
mov
loopne
or
lods
xorb
inc
jne
add
jp
shlb
mov
mov
mov
stos
inc
fsubrl
out
mov
repz
mov
daa
add
or
movb
adc
loop
or
mov
pop
dec
jp
call
dec
add
jne
mov
push
lock
nop
sbb
push
fdivl
sahf
rorb
or
out
daa
push
inc
mov
call
pop
pop
mov
cmp
fwait
xor
imul
mov
mov
sahf
inc
addb
fs
adc
pop
xor
and
fldenv
sbb
mov
sbb
aad
cmp
jae
rolb
mov
and
xor
sbb
in
test
imul
loopne
or
mov
or
dec
pop
inc
aaa
or
xchg
fwait
cltd
in
push
or
sbb
inc
add
sbb
xor
aam
or
dec
les
in
roll
inc
ljmp
add
ret
adc
in
in
nop
add
pop
add
cmp
mov
xor
adc
jmp
jge
divb
lret
add
inc
cmp
in
cltd
clc
push
and
add
pop
sbb
add
mov
sbb
add
outsl
jle
es
push
js
or
movsl
add
dec
mov
sub
fs
rclb
adc
sbb
jle
insb
inc
call
out
push
inc
in
cmp
pop
inc
shlb
push
or
add
orb
imul
fs
inc
and
xor
dec
loop
mov
les
mov
inc
push
cmp
int3
jne
push
inc
jae
pop
adc
setno
xchg
or
aas
lock
xor
shrl
pop
lcall
mov
std
add
outsb
xchg
sahf
das
adc
cwtl
out
cmp
inc
push
and
orb
sbb
or
mov
out
and
sbb
lock
inc
dec
cs
aad
mov
jbe
ret
xor
and
xlat
addb
push
add
filds
mov
or
adc
pop
cmp
std
fcomp
test
inc
bound
and
push
push
sbb
imul
push
xlat
xchg
insb
or
adc
insb
push
stos
inc
cmpl
ljmp
cmp
pop
mov
aam
adc
mov
dec
inc
iret
dec
inc
mov
dec
pop
das
loopne
cmp
in
enter
push
jns
sub
xor
je
data16
push
cld
call
mov
shlb
pop
inc
std
jle
sbb
sub
shlb
mov
jo
aaa
push
add
inc
push
sub
ret
mov
mov
or
jo
xor
lods
sub
retw
sub
and
add
sub
int3
es
adc
add
loope
sub
ss
addb
sbb
mov
outsb
add
testl
jge
int3
dec
ret
sub
or
mov
mov
jns
imul
addr16
sub
cmpsb
lods
dec
nop
adc
leave
mov
subl
dec
adc
mov
cwtl
or
cmp
hlt
inc
cwtl
pop
push
imul
pop
ds
push
push
inc
adc
cmp
dec
icebp
push
fsubrs
or
clc
not
mov
add
aaa
test
addb
dec
jl
clc
jns
mov
xor
lcall
arpl
adc
or
or
dec
or
sub
in
mov
popa
push
add
inc
push
sub
adc
addr16
pop
lock
roll
loopne
cmp
sbb
popa
jmp
adc
and
add
rorb
das
jbe
test
push
lock
sub
shrl
sbb
pop
xchg
ljmp
out
pop
into
hlt
cmp
mov
hlt
pop
iret
hlt
inc
sub
sub
or
dec
sub
movsb
mov
add
or
imul
or
loopne
sahf
icebp
pop
jns
inc
jne
enter
sbb
insb
adcb
mov
hlt
rorb
or
or
and
ds
fwait
and
pop
fildll
push
jo
lods
insl
movsl
or
mov
lock
cmp
fsubrs
add
clc
loopne
mov
adcl
jge
mov
outsb
aaa
fistps
dec
push
scas
addb
loopne
and
push
sbb
add
ret
jne
dec
leave
and
in
ja
or
xor
loopne
ret
call
dec
iret
adc
pop
push
scas
sub
enter
pop
jo
xor
dec
insb
mov
dec
pushf
inc
nop
add
mov
bound
sbb
adc
mov
add
les
test
addl
int3
js
xlat
xchg
pushf
or
inc
addr16
xor
mov
adc
push
push
xor
xor
add
fcomip
mov
sbb
sub
or
addr16
adc
pop
cli
loope
pop
pop
pusha
adc
lock
jb
call
bound
ret
fwait
adcb
sbb
popl
push
roll
inc
add
mov
sub
mov
in
mov
sbb
dec
daa
xchg
inc
enter
clc
xor
xchg
xor
bound
push
xchg
pushf
inc
xor
jg
enter
lods
clc
push
add
leave
sub
lods
nop
sbb
jmp
lock
test
in
clc
das
or
add
cmp
add
push
dec
xor
add
clc
arpl
inc
cmp
rclb
bound
aad
pop
or
cmp
pop
clc
lock
adc
sbb
and
add
sub
pop
leave
test
sub
mov
sbb
pop
push
mov
and
jmp
bound
cmp
loop
das
aam
loopne
mov
mov
adcl
push
add
fsubp
es
and
in
jne
loop
shlb
and
inc
rol
aaa
add
cld
cmpl
inc
pusha
in
add
sbb
mov
es
mov
cmp
enter
dec
fwait
jae
jl
add
jns
jge
cs
gs
push
into
adc
sbb
push
xor
enter
arpl
aas
mov
xor
fsubrs
xor
sbb
mov
mov
xor
in
shrb
enter
fisttpl
loope
int3
adc
gs
add
mov
dec
adc
xorb
pusha
add
out
jp
xchg
dec
shl
mov
jl
or
sub
mov
pop
dec
adc
or
scas
inc
ret
movl
test
dec
push
xchg
sbb
dec
add
push
imul
push
faddl
js
mov
pop
ss
push
inc
cmp
xor
add
xorl
mov
pop
hlt
mov
adcb
outsl
dec
push
add
gs
pop
rolb
add
sbb
add
sbbl
aaa
dec
cwtl
jne
scas
dec
cmovno
cltd
ljmp
sbb
int
sub
ds
and
cmp
or
scas
xor
pushf
mov
sub
mov
xchg
add
subl
cmp
outsb
faddl
or
dec
mov
xor
popf
push
push
mov
incl
shlb
xor
add
dec
inc
out
pop
xchg
mov
add
lock
in
adc
add
sub
cltd
test
jecxz
xchg
ret
ss
push
lock
push
lods
ret
shlb
mov
out
mov
dec
cmc
ret
cmp
jo
pushl
adc
test
inc
or
xlat
outsl
cmp
mov
adc
sub
movsb
and
xchg
stc
pop
icebp
mov
pop
jp
aas
jne
xor
push
adc
mov
mov
jge
mov
or
daa
lock
popa
pop
mov
or
ret
loope
push
gs
push
in
xchg
mov
pop
pop
aam
loopne
xor
mov
stc
ss
out
cmpsl
cmp
and
mov
lods
rcll
popf
insb
xchg
inc
inc
lods
mov
mov
mov
mov
pop
je
jno
or
cmpsl
out
aas
je
adc
mov
and
jne
mov
add
ret
gs
xchg
ss
push
mov
jne
imul
xor
out
test
or
stc
or
inc
cmp
lds
mov
mov
mov
ds
inc
pop
lds
pusha
dec
inc
push
jo
jne
outsl
or
push
dec
xor
push
mov
mov
jg
stos
ret
add
xchg
cmp
sub
xchg
add
or
or
sarb
mov
mov
mov
daa
call
fucomi
aam
mov
mov
loop
outsl
pop
pop
lods
push
jle
cmpb
je
cwtl
mov
push
lret
fs
pop
cld
and
lret
mov
push
pop
movb
jge
fcmovnu
mov
mov
xchg
cmpsb
insb
xchg
out
repnz
bound
sub
aad
mov
push
pop
mov
mov
cs
sub
dec
aad
imul
aas
jbe
and
aas
xchg
aaa
rorb
rclb
xchg
test
sahf
faddl
cmpl
lods
outsb
adc
or
push
mov
daa
pop
test
adc
push
nop
loopne
push
mov
aad
jo
popa
pop
cmpsl
cmp
in
out
xchg
fs
or
out
adc
xor
stos
pop
cmp
inc
add
mov
test
sbb
and
mov
cmp
sub
dec
lahf
and
cwtl
add
cmp
cmpsl
or
jmp
ret
mov
or
mov
xchg
inc
sbb
and
dec
and
mov
and
addb
push
daa
fimull
or
jne
jmp
sbb
and
aam
mov
insb
pop
test
imul
imul
xor
pop
xchg
cwtl
push
cmove
ret
fdivs
adc
pop
adc
sbb
imul
rolb
or
or
jno
dec
push
imul
xchg
loop
popf
push
pop
insb
sbb
xchg
xchg
push
mov
adc
jmp
mov
or
sbb
add
and
xchg
and
je
sub
or
or
iret
add
aas
dec
dec
xchg
sarl
test
pop
push
sub
ret
push
pop
addr16
inc
dec
push
or
inc
mov
dec
test
pop
icebp
mov
lods
out
scas
fadds
cmpl
loop
ret
jo
addb
pop
lret
inc
popa
sbb
enter
push
les
cmp
sarb
inc
lret
ss
xlat
jmp
inc
lret
fidivrs
push
cmp
or
stc
sarb
adc
lret
lahf
scas
loop
adc
lahf
cmp
in
mov
cmpb
pop
mov
xor
int
sbb
xchg
es
jmp
lock
mov
int
daa
cmp
jo
in
in
pop
ja
mov
inc
je
imul
xlat
push
pop
pop
mov
inc
pop
popf
jl
cmp
or
jbe
movsl
aas
sahf
lock
insb
jge
inc
inc
xchg
dec
popa
mov
es
test
push
xor
add
sub
xor
adc
push
outsl
sbb
dec
adc
sbb
insb
inc
mov
shlb
mov
mov
fdivl
adc
adc
xchg
or
push
and
inc
leave
push
xor
xor
xchg
or
inc
inc
mov
leave
push
or
and
xor
je
or
inc
lahf
push
pop
or
int3
insb
sub
inc
pop
ds
out
ret
mov
aam
xchg
mov
push
push
addr16
in
mov
cmp
jmp
cmp
pop
and
ds
push
jmp
push
inc
push
mov
mov
js
js
push
inc
les
jg
add
add
mov
xor
xchg
inc
andb
ret
mov
push
aad
xchg
inc
mov
xchg
mov
ljmp
add
cwtl
lcall
mov
iret
push
add
add
lret
lcall
ret
sub
mov
dec
pop
popf
xor
rcll
cmp
test
inc
sahf
jge
inc
mov
cmp
or
sar
out
test
push
cmp
push
cmpsl
add
push
and
dec
es
or
mov
rclb
loope
cwtl
sub
push
add
inc
sbb
cmp
inc
enter
imul
push
sub
pop
shrl
lock
or
sbb
in
enter
sbb
push
aaa
pushl
mov
push
inc
add
es
movsl
mov
mov
sub
inc
fwait
cmp
fstpl
mov
push
jbe
mov
dec
add
out
add
sub
pop
les
popa
and
mov
xchg
bound
nop
cmp
add
mov
addl
and
sbb
ret
imul
jo
cmp
add
hlt
or
loopne
inc
add
fwait
scas
push
bound
cwtl
in
test
sbb
insb
clc
adc
ss
enter
push
jae
imul
les
inc
and
sbb
pop
cmp
ret
scas
mov
insl
add
dec
push
pop
dec
xor
jl
dec
cwtl
loopne
fs
sbb
push
je
push
sbb
mov
dec
repz
out
subl
bound
aam
lret
add
cs
and
xor
adc
in
cltd
cmp
pop
mov
mov
vunpcklps
cmpsb
mov
jo
add
imul
or
aam
cmp
iret
lcall
out
in
adc
clc
enter
js
sbb
fwait
cwtl
sbb
dec
mov
add
or
jns
je
adc
cmpsb
or
insl
xor
and
mov
sbb
fldt
or
adc
data16
pop
repz
xchg
push
sub
cli
cmp
pop
scas
cmp
jle
inc
sbb
sbb
or
orb
into
adc
xor
fsub
adc
outsl
add
cmpsl
je
add
or
shrb
cs
iret
add
fwait
pushl
adc
xchg
sbbl
fs
ret
clc
mov
or
xor
push
mov
sub
adc
and
sbb
xor
mov
and
and
sbb
push
mov
mov
imul
rorl
stos
and
fsubrs
ds
or
iret
int3
cmp
dec
add
call
ret
into
mov
jmp
sub
cmp
push
dec
or
lcall
movsl
and
scas
fimull
stos
jne
dec
sbb
and
dec
insb
xor
test
pop
scas
xchg
fnsave
jbe
sti
or
aas
inc
test
fisubrl
sbb
arpl
inc
movb
adc
mov
jbe
pop
dec
ret
inc
sbbl
mov
adcb
inc
test
pop
test
sahf
arpl
sbb
add
loopne
movsb
push
add
jl
pop
repnz
jg
dec
and
notl
adc
mov
enter
pop
idivl
ljmp
leave
pop
cmpl
addr16
cmp
mov
pop
or
sub
adc
dec
negl
rolb
adcb
jp
sbb
cmp
cmp
orl
inc
push
mov
mov
iret
cmp
push
std
fnstcw
add
cmp
sub
les
xor
jns
mov
jae
lds
inc
xor
inc
sub
cmpsl
push
in
ficomps
and
jns
mov
lods
pop
pop
mull
push
mov
mov
rol
pop
push
lahf
shlb
decl
sub
xor
dec
cltd
ret
lea
insb
outsl
sub
fs
daa
sbb
rcrb
pop
hlt
sbb
flds
cli
adc
pop
and
push
jno
sbb
mov
call
add
call
xor
call
or
sub
ret
and
add
adc
add
sub
inc
adc
daa
gs
js
lock
call
nopl
shll
aad
sbb
test
int3
inc
jmp
and
adc
lret
addr16
rorb
stc
rclb
pop
movsb
dec
mov
sub
mov
leave
xchg
jne
sbb
xor
lods
add
adc
push
aaa
loop
jno
mov
adc
enter
cmp
aam
insb
xor
xor
arpl
negl
addb
or
shlb
add
and
mov
rcr
cld
addr16
nop
pusha
pop
push
xor
jle
insb
adc
xor
scas
shll
test
fisubl
mov
mov
test
or
add
ja
push
dec
xor
add
xor
lcall
xor
push
cmpb
packuswb
jge
adc
push
cli
adc
sbb
in
mov
lods
mov
pop
add
adc
sbb
pushf
pcmpgtb
test
mov
pop
int
jmp
sbb
dec
lcall
xor
mov
cmpsl
push
adcl
push
pop
mov
add
xchg
or
repz
cmp
je
pop
pop
clc
adc
cli
xchg
xchg
sub
cli
xchg
cmc
fbld
inc
lods
das
insl
inc
sub
xor
add
add
push
inc
subps
mov
fisubs
cmpsl
cltd
push
jle
mov
xor
mov
xacquire
imul
aad
sbb
mov
repz
push
pop
addr16
and
enter
push
push
add
test
sub
test
popa
es
dec
mov
rorl
mov
ret
inc
jne
lods
sbb
or
movsb
cmpsl
mov
mov
dec
adc
lea
adc
sub
push
add
xor
test
xor
mov
pusha
mov
cli
jle
ret
xor
pop
shl
sub
add
pop
ret
mov
rol
ret
mov
aaa
mov
sbbl
aaa
roll
sbb
hlt
and
push
jo
hlt
adc
popa
xchg
sbbb
imul
pusha
cs
sbb
and
icebp
or
into
sti
push
sub
sbb
inc
push
lahf
mov
sti
movb
inc
pop
add
and
cmp
jne
add
das
pop
pop
clc
jb
mov
int3
push
mov
add
lcall
in
adc
lret
pop
pop
cmp
fucomi
cmp
cmp
bound
xchg
jl
je
imul
add
test
lsl
or
add
sarb
adc
jecxz
arpl
xor
push
adc
mov
lea
adc
pop
fs
cmp
sub
or
inc
sbb
andl
pop
cwtl
dec
rclb
mov
mov
mov
inc
or
inc
xor
push
dec
mov
add
adc
sbb
cmpb
and
in
inc
jmp
push
cmpsb
xorb
insb
xchg
add
cmc
sahf
and
orb
data16
fsubs
lods
lock
cmp
fnsave
enter
cmp
outsb
and
add
test
dec
inc
jb
enter
dec
or
test
aas
inc
out
push
inc
pop
cmp
push
dec
mov
push
mov
or
dec
xor
sbb
xchg
icebp
adc
push
push
or
lea
test
int
test
xor
cmp
cmp
inc
dec
lods
xor
inc
test
or
add
scas
js
push
das
jmp
sahf
inc
fiaddl
out
push
fsubr
sub
cmp
xor
lcall
jecxz
push
int
je
clc
sub
in
inc
sbb
jo
xor
xchg
xor
call
inc
das
sub
xor
movsb
rcll
mov
and
mov
iret
cmpsb
call
xor
aad
ja
sahf
jb
lock
fisttps
adcl
inc
ja
lcall
sbb
and
ret
push
mov
sahf
and
push
fs
rolb
xchg
into
inc
test
cs
iret
add
sarb
hlt
jmp
sbb
or
aaa
out
jb
mov
insl
pusha
adc
sbb
mov
mov
xchg
adc
xchg
call
dec
shr
add
adc
mov
repnz
or
cwtl
add
jbe
fwait
jmp
and
mov
or
and
sub
xor
jge
mov
insb
push
in
aaa
in
add
pop
fists
mov
xor
test
lcall
enter
lods
shrb
ret
xor
jae
orl
scas
or
jo
test
sbb
cmp
jb
loopne
test
aas
movsl
add
imull
cmp
xor
inc
sarb
jnp
mov
mov
push
inc
or
push
aaa
cmp
mov
sbb
roll
int3
push
push
sbb
xor
fsubrl
je
jp
push
sbb
and
xor
pop
cli
xor
sbb
push
xchg
mov
add
mov
adc
cmc
ret
aas
cmp
ret
and
push
sbb
pop
out
sbb
inc
mov
punpckhbw
rcll
xchg
icebp
test
nop
addl
in
inc
inc
dec
jnp
adc
inc
cmp
dec
sahf
adc
inc
push
pop
pusha
cwtl
adc
adc
mov
add
sbb
pop
sbb
mov
push
ficoml
xor
aad
aam
or
jno
aaa
push
pop
inc
add
lret
mov
in
subb
jle
pop
clc
jle
sbb
mov
sbb
or
add
fldl
and
dec
repz
push
add
and
aad
sahf
es
test
and
inc
fcomps
mov
cmp
xchg
cmc
sbb
enter
inc
pop
cs
testb
cmp
dec
pop
or
pop
xchg
mov
and
and
aas
test
mov
cmovb
inc
sbb
pop
outsl
push
cmp
hlt
jg
je
nop
cmp
or
sub
pop
cmp
and
shlb
pop
add
and
mov
xchg
es
stos
data16
clc
lea
mov
lret
cmp
loope
pop
imul
fidivl
lea
add
add
mov
jl
mov
ja
movzwl
ja
adc
mov
dec
jmp
push
rcl
in
sub
dec
repz
add
mov
cwtl
imul
rorb
adc
push
push
cmp
inc
jo
fsubp
mov
add
push
loopne
outsl
lods
jne
adc
and
mov
xchg
xor
je
jmp
jne
or
xor
mov
adc
rclb
hlt
push
sub
xor
sub
testb
sbb
enter
xor
mov
xchg
dec
or
enter
xor
or
lret
fmull
mov
add
addr16
pop
mov
fsubr
cmp
push
sbb
enter
sbb
inc
xlat
in
fdivl
and
cmp
push
sbb
frstor
popf
xchg
orps
push
dec
xchg
inc
cmp
adc
add
add
xor
mov
shlb
pop
cmc
rcll
aaa
fistps
dec
sbb
push
cmp
in
pop
mov
mov
pop
jnp
fcoms
lcall
outsl
xchg
stos
inc
in
loope
test
push
cmp
lret
pop
push
stos
stos
iret
xor
dec
mov
imul
cmpsl
in
inc
mov
lds
xor
rep
jle
mov
sbb
jmp
push
lds
int
sbb
addb
adc
imul
inc
fcomps
mov
inc
inc
xorb
test
dec
sub
push
mov
addr16
cwtl
movl
or
mov
cmc
jno
pop
cmp
syscall
test
aad
cmp
shlb
inc
popa
add
adc
popa
movsb
inc
repnz
testl
addl
pop
outsb
pop
mov
insl
movl
xor
pop
in
and
push
dec
xor
adc
or
mov
cli
dec
jmp
nop
pop
adcb
push
add
adc
sub
xchg
or
imul
push
pop
ret
add
or
pop
mov
pop
pop
pop
ret
push
int3
inc
movups
add
xor
insb
push
or
std
pusha
mov
imul
xor
aam
mov
adc
push
lret
insl
xchg
aam
mov
dec
add
fwait
test
fwait
sub
sub
or
pop
sub
fbstp
loopne
or
mov
dec
push
add
dec
insb
stos
adc
dec
lods
dec
daa
jo
jno
test
fcmovnu
mov
cmp
cmp
fistps
rclb
dec
sahf
mov
call
test
inc
xor
push
cwtl
push
mov
dec
xor
or
je
pusha
or
and
pushf
mov
jne
mov
push
cmp
inc
push
push
je
inc
push
in
add
sbb
add
sahf
mov
bound
arpl
inc
add
add
daa
add
add
xchg
add
scas
aaa
adc
push
loope
or
and
add
aad
xor
inc
faddl
inc
leave
sbb
fld
pop
dec
mov
jne
sub
add
push
push
sbb
ljmp
inc
push
test
movsb
add
add
mov
jl
cld
and
pusha
and
out
xor
flds
mulb
es
sbb
mov
jns
ret
sahf
mov
add
dec
cmpsl
gs
jb
clc
sbb
aaa
test
sbb
js
or
fs
jo
jbe
int
xor
mov
pusha
push
les
rcl
cmpsb
mov
push
mov
cmpsb
mov
rcrb
jnp
cltd
mov
movsb
ss
jbe
push
pushf
push
lcall
sub
aad
nop
mov
imul
fcompl
test
add
rolb
and
sub
xchg
mull
jle
cmc
push
lret
jo
add
mov
push
mov
pop
pop
pop
adc
adc
xchg
xor
pop
adc
repz
ret
cmpl
mov
and
addl
or
incb
outsl
jb
ret
sarb
test
push
push
push
lret
inc
sbb
loopne
sub
popa
insb
insb
or
xchg
or
inc
andb
xchg
lods
add
mov
or
fisubl
movsl
pushl
data16
aam
lock
push
jnp
or
push
sarb
mov
data16
dec
push
dec
push
push
mov
dec
ljmp
pop
xor
mov
pop
and
mov
push
lock
inc
addr16
push
pop
mov
mov
xorb
loopne
inc
or
adc
dec
sbb
pop
cmp
inc
and
push
fadds
inc
mov
inc
add
xchg
pop
mov
lods
addb
jg
xor
in
nop
xchg
mov
or
in
adc
js
add
mov
imul
scas
clc
add
pop
mov
lcall
dec
clc
xor
lods
rorb
adc
aas
xor
add
xchg
imul
inc
push
nop
inc
xchg
leave
dec
sahf
mov
mov
and
sub
or
ss
pop
mov
pop
movsb
pop
cmc
or
mov
add
xchg
sbb
outsl
nop
movb
push
loopne
je
pusha
aaa
imul
rorl
imul
sub
push
movsl
dec
test
ja
test
pop
add
xor
push
mov
test
add
and
fdivrl
addr16
xchg
lcall
movsb
push
cmpsb
cmpsb
stos
es
pop
inc
add
mov
fstl
or
nop
push
imul
push
or
cwtl
mov
lock
add
shrb
sbb
sbb
insb
lds
push
xchg
outsb
bound
aas
cld
or
or
bound
pop
xchg
lahf
out
ja
add
jnp
js
sub
xor
aas
or
cmp
adc
or
fdivs
cmp
dec
js
fcoml
stc
test
imul
nop
add
or
insl
pop
adc
dec
int3
ja
aas
cltd
xchg
lods
mov
enter
adc
pop
loope
jo
cltd
pop
or
sti
inc
nop
or
or
jae
js
insl
sub
push
adc
dec
adc
push
and
xchg
and
mov
es
aas
add
inc
imull
pop
arpl
push
mov
loopne
testb
std
dec
movb
pusha
xor
sbb
dec
or
outsb
add
or
xchg
mov
hlt
xchg
xor
add
inc
or
sbb
inc
sbb
add
divl
adc
psrlw
enter
lea
js
or
sbb
adc
dec
sbb
shll
pop
popa
loopne
jo
inc
pop
adc
pop
aas
stos
xor
cltd
add
jl
inc
sbb
dec
jle
lock
push
sub
pop
adc
int
popa
xchg
daa
or
test
mov
pop
add
add
xchg
gs
iret
in
loopne
pop
out
jo
xchg
mov
out
pop
or
in
mov
inc
pusha
jnp
paddusb
fsts
mov
sbb
xor
test
setl
adc
or
js
pushl
cmovb
lods
fimull
add
jle
ror
iret
jo
or
faddl
les
or
xchg
je
mov
and
ja
in
lods
adc
and
mov
add
inc
push
iret
stos
bound
andb
nop
fcom
jmp
test
push
and
movsl
icebp
das
inc
sbb
or
dec
gs
mov
push
add
xor
push
stos
jbe
jo
jle
test
cmp
test
test
xchg
sub
cltd
xchg
rorb
adc
out
adc
mov
push
inc
mov
adc
mov
in
vmovupd
pop
sbb
inc
test
add
fistpll
add
xor
ret
and
or
adc
xchg
cmp
inc
sub
ret
fmulp
or
push
adc
mov
add
out
push
or
push
and
idivb
xchg
mov
cs
fldcw
sbb
je
push
xor
adc
jmp
add
or
add
xor
mov
ljmp
dec
add
in
push
sub
xorb
sub
sub
sub
filds
mov
iret
sbb
lods
iret
jne
iret
add
ret
pop
mov
pop
popl
mov
leave
mov
cmpsl
pop
daa
add
lret
stos
and
jl
and
in
lds
sbb
lahf
mov
out
mov
scas
add
outsl
xlat
mov
outsl
fwait
enter
pop
mov
push
adc
test
call
add
pop
cld
jp
lock
add
sbb
add
std
and
inc
add
mov
lcall
mov
or
mov
mov
mov
clc
and
mov
mov
mov
mov
or
ja
pop
sbb
jmp
ljmp
call
jmp
shl
jmp
jmp
pushl
fdivr
fcos
fdivr
xlat
loopne
call
call
call
call
call
sub
mov
cs
dec
cmp
leave
dec
int3
and
insb
int
int3
push
mov
cs
dec
iret
xor
int3
in
dec
jae
rolb
xor
fs
pop
xor
push
pushf
push
je
imul
push
enter
mov
cltd
out
adc
shrl
fcoms
scas
push
sbb
mov
fadd
dec
shlb
outsl
mov
rcrb
fnstcw
out
hlt
faddl
cld
mov
rorb
or
mov
fwait
in
stc
addr16
xlat
cmp
pop
mov
jns
into
into
les
cs
test
insb
int
push
mov
enter
push
xorb
mov
mov
clc
inc
imul
sbb
push
adc
pop
mov
pop
jmp
insb
cmp
cmp
js
mov
mov
pop
cmp
cmp
cmp
sbbl
dec
push
add
or
sbb
pop
sbb
jno
push
jg
or
jno
xor
pusha
sbb
push
dec
dec
or
dec
jb
nop
nop
pop
dec
dec
mov
test
add
or
and
daa
jp
and
loopne
repnz
enter
add
and
cmp
or
lds
or
jo
movsb
iret
dec
aad
insb
sub
ficoml
inc
mov
adc
push
out
aaa
popa
lods
push
lock
sbb
call
rorb
call
out
xor
push
jl
pop
jle
cld
mov
sbb
cmpsb
add
jne
or
xchg
xchg
add
push
loop
cmc
xor
jg
imul
add
cmp
add
cmp
jle
jmp
add
push
xor
popa
adc
add
mov
mov
dec
add
cmpsb
cmp
pop
push
cltd
lret
and
sub
ss
add
add
in
mov
das
mov
mov
out
lret
inc
test
adc
sbb
mov
add
sbb
add
add
aaa
mov
mov
push
mov
mov
or
outsl
pop
fbstp
pop
clc
and
and
and
mov
cli
mov
pop
mov
int
mov
xor
cmp
add
in
inc
inc
inc
inc
inc
add
ret
jecxz
mov
std
imul
das
lock
pushl
pushl
sarl
mov
cmp
lcall
in
lcallw
add
mov
push
push
dec
or
or
add
shrb
cltd
out
js
inc
push
jbe
ss
fcmovbe
lcall
paddusb
call
scas
imul
or
xor
fldt
adc
push
adc
and
dec
shrl
pop
adc
jo
xor
es
cmpsb
adc
dec
shll
sarb
dec
rorl
xor
push
test
sbb
adc
push
sbb
or
lcall
adc
sub
stc
mov
pop
movsb
pop
or
add
lcall
in
int
imul
mov
in
pop
insb
les
mov
or
punpcklbw
scas
and
cmpsb
sub
sbb
add
mov
outsb
pop
and
push
push
mov
add
sbb
orb
jg
pop
add
pop
jg
jg
or
xadd
aaa
add
add
inc
add
add
aaa
add
cmp
setp
pop
push
xchg
pop
aaa
aas
test
and
pop
ret
mov
mov
cmp
ss
pop
fs
jle
mov
fsub
push
dec
and
addb
push
das
sbb
xor
xor
xor
rolb
pop
add
rcr
out
cs
sub
pushf
sub
mov
dec
stos
in
xor
ret
pop
xchg
and
sub
and
add
jno
jg
xchg
push
add
mov
mov
sbb
add
out
xchg
inc
sbbb
jb
or
or
sbbl
fwait
sbb
and
push
lock
inc
or
mov
cmpsb
mov
xchg
pushf
cmpsb
imul
imul
inc
hlt
add
test
cmp
or
addr16
inc
or
js
outsl
jno
pop
mov
testl
dec
arpl
jl
xchg
lret
dec
lock
hlt
push
push
lods
aaa
mov
out
push
fwait
mov
das
sahf
adc
lahf
inc
and
add
rorb
mov
pop
push
ret
fwait
lock
orb
xor
filds
dec
sub
addb
and
movsl
lea
je
push
sub
pop
aam
sbb
or
call
cmp
add
sbb
or
push
push
cltd
push
push
mov
push
add
sbb
fisubrs
mov
dec
jb
mov
nop
nop
add
out
in
adc
dec
jne
xor
lock
rorb
dec
cmp
fisttps
dec
jno
adc
popf
rcrb
push
mov
mov
pop
iret
sbb
cmp
lahf
push
push
dec
sbb
push
adc
nop
jecxz
inc
jb
daa
push
cmp
pop
pusha
daa
sbbl
jo
inc
push
push
inc
lods
sbb
insl
push
xchg
daa
push
fmuls
push
leave
pop
push
push
inc
push
inc
xchg
fildl
add
or
subb
dec
repz
insb
popa
clts
fldl
dec
outsl
and
daa
dec
push
sub
je
push
mov
push
mov
pop
mov
movb
mov
cmpsl
mov
sbb
das
dec
sub
or
add
pusha
mov
dec
shrb
adcl
int3
jo
and
inc
or
mov
xchg
or
adc
dec
cwtl
mov
jl
xchg
push
fwait
pop
mov
aad
adc
lret
jns
jecxz
test
movsb
adc
sub
xchg
pop
mov
mov
sub
jge
lcall
dec
rolb
js
cld
out
inc
mov
add
add
faddl
rolb
pop
decb
mov
sub
adc
clc
pop
add
sub
add
cmp
jl
push
push
cwtl
das
xchg
pop
inc
push
jecxz
fsub
lods
adc
xor
pop
arpl
shll
je
xor
add
nop
pop
mov
lea
test
insl
sub
inc
cmp
addr16
aam
les
and
ja
sbb
mov
jmp
add
das
push
dec
bound
jne
mov
sbb
jmp
jl
mov
or
or
add
or
dec
movsb
add
add
pop
or
pop
xchg
pop
sbb
gs
xchg
adc
sbb
xchg
gs
xchg
and
and
sub
xchg
cwtl
pusha
pop
sub
scas
push
inc
mov
push
push
pop
mov
push
mov
and
fildl
lret
xor
mov
jbe
cmp
es
adc
sub
sarl
cli
jg
je
sub
jns
mov
je
movsl
mov
sub
or
ja
outsb
adc
inc
aaa
cltd
dec
pushf
add
not
pusha
sbb
xchg
jge
mov
dec
test
ror
mov
inc
in
adc
pop
iret
jo
xor
dec
sub
adc
inc
dec
into
or
inc
pop
cmp
jae
push
fcoms
adc
mov
les
sbb
xchg
std
rclb
jmp
xchg
aas
movsl
popa
inc
sbb
in
mov
add
es
add
enter
mov
adcl
movsl
push
mov
lods
sub
dec
mov
inc
cmp
adc
call
inc
pop
sbb
jmp
inc
mov
pop
test
orl
filds
fists
inc
add
iret
sbbl
ret
mov
push
pop
jp
adc
or
and
lea
mov
pop
ss
push
aas
push
insb
add
outsl
test
loope
and
inc
js
inc
mov
dec
add
and
adc
push
insb
add
in
add
add
push
push
adc
movsb
jo
xchg
sub
pop
add
mov
pop
insb
insb
jnp
cli
and
inc
xor
cmpsb
icebp
and
pop
inc
inc
aaa
test
jb
sub
popa
in
pop
mov
gs
movsl
sub
cmp
and
sub
mov
cmp
outsl
or
fisubs
pop
push
sahf
jle
sub
popa
and
sub
sbb
aas
pop
and
jae
cmp
jle
or
sub
push
dec
dec
fisubrs
or
addr16
xchg
inc
inc
jg
cmp
daa
push
mov
jae
jg
mov
xchg
pop
fcmovb
inc
cmpsl
mov
dec
mov
pusha
loopne
ret
mov
cmp
mov
add
and
ficoms
pushl
add
mov
mov
sarl
jb
outsl
popa
movb
and
xchg
cmp
addr16
jecxz
stc
dec
fwait
mov
xlat
les
sub
pop
and
cmpsl
mov
in
push
roll
test
inc
pop
mov
pushw
mov
push
dec
pop
int
push
xor
imul
sub
inc
fnstsw
cmp
insl
mov
rolb
add
add
lods
xor
lock
adc
sub
adc
or
insl
sub
pop
fs
push
in
inc
loopne
daa
dec
and
lea
jno
mov
lods
mov
imul
adc
or
mov
sbb
test
cmp
les
jge,pn
inc
in
inc
jecxz
pop
sub
add
pop
adc
mov
shll
movsb
push
xchg
inc
imul
adc
popa
dec
in
cs
and
insb
jns
and
mov
xchg
or
push
es
cmp
xchg
or
js
cmp
popa
sub
jg
shl
ret
xor
sbb
or
js
fwait
sbb
xchg
mov
jecxz
sub
xor
add
mov
daa
dec
adc
jp
xchg
push
push
loope
in
pop
cmp
gs
xchg
xor
les
inc
dec
sarl
inc
jno
ljmp
push
test
cmp
mov
or
sbb
xchg
cwtl
lea
mov
cmp
and
or
push
es
movsb
jb
sub
sbb
jmp
mov
push
cmpsl
jmp
or
jge
xlat
rclb
xchg
lea
jne
and
les
mov
rorb
jo
sbb
mov
or
push
or
pop
in
es
and
rol
xchg
lock
pusha
cli
sbb
dec
xlat
dec
call
das
push
push
mov
or
gs
xor
dec
push
push
pop
inc
sbb
inc
insl
adc
pop
loopne
xchg
xchg
mov
cmpsb
or
in
mov
icebp
movsb
pop
lea
push
cwtl
pop
mov
xchg
lea
or
pushf
or
icebp
fsubr
xchg
movsl
test
sbb
xor
movsb
mov
hlt
push
mov
inc
aam
or
xchg
jmp
aaa
data16
jmp
sub
xchg
xor
add
fmuls
dec
mov
or
stos
popa
les
or
mov
popa
pop
pop
mov
jo
jl
mov
xor
mov
test
ss
pop
pop
sbb
sbb
xchg
push
aaa
mulb
out
aas
add
dec
adc
cmp
xor
adc
rclb
mov
repz
lods
sub
pop
xchg
ret
mov
shrl
sbb
and
out
insb
jge
es
mov
mov
insl
push
push
or
mov
mov
es
push
xchg
in
mov
out
sub
or
xor
les
int3
jo
testb
gs
adc
or
add
cmp
je
ljmp
lret
push
mov
mov
pcmpeqb
insb
fcoml
or
mov
sub
pushf
bound
adc
lds
sbb
addb
in
push
adc
mov
enter
mov
mov
cmovae
mov
pop
push
mov
push
sub
fcmovnb
push
and
jmp
aad
cmpb
mov
or
jmp
add
and
and
push
shlb
mov
xchg
xor
add
inc
push
shlb
dec
sbb
push
push
push
sbb
sarb
xlat
out
pop
mov
cltd
pop
pop
mov
fists
pop
fdivs
mov
jmp
push
orl
sub
ret
ret
dec
out
xor
inc
insb
dec
test
push
pop
lret
and
shll
mov
or
dec
inc
cmpsb
or
adc
fsubl
das
inc
adc
xchg
jg
add
dec
push
sub
sbb
push
push
ds
icebp
push
aam
fisubrl
and
inc
pop
in
sbb
mov
insb
pop
outsl
arpl
sbb
test
pop
sbb
loope
sub
jne
jp
jno
inc
cmp
fldt
dec
daa
or
fdivrp
fstpl
fwait
jmp
inc
and
mov
and
and
cli
imul
adc
pusha
adc
rcll
and
sbb
imul
push
mov
add
adc
lret
clc
jl
push
and
mov
movl
in
aam
push
push
xor
add
sbb
mov
test
ja
repnz
mov
dec
sarl
inc
and
iret
and
lock
in
dec
mov
rcrb
cmp
mov
les
xorb
inc
jge
pushf
inc
mov
mov
les
mov
mov
xlat
cwtl
sub
mov
lret
rorb
jmp
andl
insb
add
mov
dec
sub
add
cmp
inc
dec
pop
jno
dec
test
inc
pop
leave
sahf
push
or
adc
add
or
xlat
pop
movsb
add
int3
or
xor
je
push
jne
ss
testb
jmp
xchg
and
mov
daa
mov
leave
lds
push
or
and
push
inc
into
inc
lret
add
je
mov
mov
push
out
dec
fisubs
sbb
cmp
cmpsb
das
popf
imul
sti
movb
adc
push
push
push
dec
lods
adc
popa
xor
or
cltd
pop
std
jno
push
subl
dec
lea
xlat
and
sub
jne
sub
fmull
xor
or
loop
hlt
pop
inc
shlb
stc
push
subb
movsl
adc
adcb
mov
cmpsb
lret
arpl
mov
mull
pop
outsb
je
test
popa
cmp
mov
or
lea
mov
push
rcrl
jmp
icebp
add
je
or
jmp
push
push
sub
mov
push
mov
fsub
addl
jne
mov
sub
or
adc
or
sub
sti
lods
cld
push
adc
or
loop
cmp
sbb
xor
pop
xchg
and
test
mov
in
dec
and
notb
pop
imul
mov
sahf
aas
mov
mov
imul
imul
adc
imul
xor
add
jecxz
fwait
movsl
mov
iret
push
push
repz
and
jecxz
imul
lds
mov
push
push
add
or
pusha
arpl
dec
xchg
daa
jl
cmc
push
leave
add
dec
sub
sbb
cmc
cmp
add
scas
cmp
pop
add
sub
pop
scas
add
out
ret
pusha
or
jne
push
jbe
aaa
inc
out
rclb
pop
aas
sbb
or
ret
dec
aaa
lock
pop
addl
pop
add
in
inc
fs
hlt
popa
aam
mov
or
jo
bnd
aas
jnp
fnstenv
add
mov
aad
iret
push
fcomp
sbb
dec
loopne
or
mov
insl
mov
push
lahf
dec
mov
test
imul
inc
loope
stos
fs
insl
subb
sub
pop
mov
push
mov
mov
mov
dec
pop
fisubrs
loope
test
sub
gs
sub
sub
mov
or
mov
data16
dec
pop
lea
push
sbb
pop
lods
or
movsl
fs
or
pop
leave
cmpl
loopne
pop
add
cmovg
sahf
or
in
in
insl
roll
jg
mov
les
jecxz
dec
cmp
add
mov
xlat
pop
subl
mov
ret
push
jg
add
scas
push
pop
pop
pop
and
add
addr16
sub
insl
inc
lret
jnp
cmp
and
mov
lea
or
xor
xchg
or
inc
sete
push
dec
dec
out
div
incl
dec
or
or
repnz
popf
jge
cmp
push
mov
adc
pop
je
leave
jnp
jne
jbe
cmp
cmp
mov
je
cmp
xor
pop
sbb
ret
dec
pushf
nop
push
inc
outsl
sbb
xchg
cwtl
sub
bound
ud1
push
fimuls
nop
js
adc
dec
jbe
and
imul
and
loope
andb
jl
cmp
cmp
inc
out
pop
ja
adc
add
inc
ret
rorb
jg
add
or
mov
add
aad
sbb
popa
cmp
pop
jp
sbb
add
idivl
sub
sub
mov
lds
adc
mov
rclb
cltd
mov
insl
push
mov
in
loopne
pop
sbb
ds
pop
cmp
scas
pop
sbb
inc
and
sbb
jb
xchg
outsl
push
cwtl
sub
in
add
sub
or
and
pop
shlb
dec
or
syscall
mov
push
adc
aaa
mov
sub
nop
dec
bound
or
or
enter
sub
je
pop
dec
std
mov
cmp
push
or
add
pusha
inc
push
scas
cmp
push
pusha
or
adc
daa
lds
pmulhuw
pop
aas
rol
aam
dec
addr16
pop
rorb
adc
cmp
pop
push
cmpsl
mov
push
popl
push
fildl
popa
pop
inc
ljmp
dec
sbbl
inc
add
adc
inc
sbb
movb
xor
push
lcall
xorl
push
pop
add
lods
lahf
cmc
dec
jp
cmp
aas
pusha
fistl
pop
pop
or
imul
mov
imul
jge
sahf
push
or
xor
movsb
cmp
inc
mov
jmp
xor
mov
aaa
movsb
es
popa
xlat
into
push
sbb
sub
out
ret
xor
sbb
or
punpckhbw
push
or
xchg
push
cmpb
sub
pop
ret
push
arpl
fdivl
and
and
mov
ja
or
nop
call
lods
or
insl
xlat
dec
jl
cwtl
cwtl
inc
xor
lock
sub
or
cmc
mov
clc
push
pop
fcoml
push
aaa
push
cmpsb
inc
or
and
insb
aas
add
adc
loope
push
and
lods
xor
xor
push
add
push
outsl
sbb
test
push
jmp
orl
sahf
insb
dec
jae
adc
insb
insb
shrb
enter
xchg
push
pop
xor
int3
or
or
push
push
mov
nop
icebp
lret
push
xor
push
add
cli
pop
test
mov
daa
dec
dec
push
or
aaa
xlat
mov
push
arpl
popa
jge
cld
push
outsl
rclb
imul
pop
leave
nop
or
and
bound
pop
sete
and
mov
jmp
adc
or
dec
xlat
sahf
test
and
cmpsb
push
icebp
pop
cmp
arpl
jo
push
and
jo
ss
xor
xchg
push
sbb
push
test
push
je
sbb
xchg
or
inc
daa
inc
cmp
es
in
std
sub
ret
jne
dec
daa
cmp
fidivl
and
out
and
dec
push
pop
dec
leave
add
das
dec
inc
mov
cmp
ret
inc
cmpsl
outsl
pop
or
xlat
xchg
dec
sbb
mov
mov
or
int3
jb
cmpl
adc
or
or
dec
xchg
dec
and
or
mov
inc
mov
jp
or
cmp
outsb
out
lret
inc
add
mov
or
iret
dec
push
fisttps
outsl
cmpb
mov
aam
hlt
testb
js
loopne
mov
inc
lods
push
cmp
mov
pop
push
xchg
lcall
or
mov
dec
ss
jmp
adc
ss
adc
jns
or
dec
mov
mov
outsl
fs
sub
sub
imul
and
mov
pop
xchg
jle
test
lea
xor
pop
ret
insl
adc
das
nop
lcall
inc
addb
xor
inc
icebp
sub
dec
roll
stos
mov
inc
push
inc
cmpsb
mov
lds
ja
cmp
rcl
xchg
dec
add
push
inc
jb
aam
or
jae
in
cmp
xchg
cmp
adc
ja
add
and
inc
mov
nop
cmpsb
and
mov
mov
mov
rcrb
mov
adc
ss
or
push
inc
scas
cli
clc
dec
and
out
bound
xorl
test
sbb
mov
loopne
ljmp
adc
xor
mov
imul
sub
pusha
mov
mov
scas
jmp
add
xchg
cmp
push
mov
divl
mov
hlt
sub
pop
mov
or
jnp
mov
outsl
dec
add
add
mov
cmp
sub
inc
sub
ljmp
add
lds
int
mov
je
ja
mov
mov
xchg
mov
mov
pusha
outsl
pop
jbe
pop
inc
add
int3
mov
ret
xchg
or
in
add
movsl
pop
push
cmpsb
fwait
jb
divl
arpl
inc
enter
outsl
mov
lret
fiadds
push
or
dec
push
out
inc
orb
push
jo
outsl
repnz
mov
add
test
stos
mov
add
push
and
inc
adc
test
push
sub
sub
jg
lods
pop
adc
in
int3
inc
mov
aaa
lcall
mov
and
dec
es
push
push
aaa
daa
inc
push
adc
inc
xor
fnstenv
ret
push
cmpl
sub
xchg
xchg
icebp
inc
ret
push
mov
mov
inc
adc
push
jo
lods
add
or
outsb
inc
adc
insb
and
pop
sbb
call
cmp
sbb
shlb
dec
pop
jnp
sti
mov
dec
mov
cmp
jecxz
outsb
or
nop
add
pop
ret
ja
imul
cmpsl
sahf
or
or
adc
cmpsb
ficoml
mov
adc
or
push
loope
in
and
add
adc
lea
xchg
push
push
mov
xchg
push
jo
mov
adc
inc
pop
push
mov
adc
sbb
adc
mov
andl
nop
adc
adc
push
pop
add
xor
clc
daa
outsl
cmp
inc
push
and
jp
xchg
xor
cmp
into
push
adc
loop
test
lret
mov
aaa
or
cmpl
movsb
sbbl
aam
jbe
xor
sub
push
adc
adc
fdivs
dec
xor
inc
scas
rorl
cmp
cmp
xlat
rcl
movl
xor
xchg
andb
and
pop
push
je
jl
mov
pop
or
pop
add
jo
negl
popa
rcrb
or
imul
add
or
mov
add
sbbb
enter
test
and
jo
adc
inc
loopne
in
in
in
dec
and
into
push
into
idivl
cmp
sub
push
push
sub
adc
lds
pop
cmp
push
mov
mov
mov
xor
adc
adc
sub
cmpsb
inc
aaa
lods
or
mov
inc
int3
lock
pusha
add
mov
inc
add
push
mov
push
mov
orb
sub
ret
xchg
push
xlat
pop
or
js
or
stos
adc
push
pop
mov
cli
xor
ds
add
pop
je
mov
xchg
test
cs
adc
stos
cmpsb
mov
cmp
pop
dec
mov
mov
dec
and
andl
push
jo
mov
movb
or
jg
pop
pop
pop
repnz
pusha
pusha
fisubs
js
data16
fs
js
pcmpeqw
lock
xchg
in
nop
jg
mov
push
sbb
cmp
xchg
gs
xchg
orl
mov
inc
pop
adc
mov
and
fs
pop
and
adc
mov
dec
mov
icebp
cmp
dec
jge
adc
jo
push
pop
cli
fisttpll
dec
icebp
leave
je
loop
mov
dec
push
adc
adc
test
test
lahf
fwait
mov
dec
outsw
and
lea
xor
int
add
dec
dec
mov
pop
movsb
leave
mov
nop
sahf
push
adc
mov
mov
xor
jecxz
dec
dec
xlat
daa
add
in
lret
or
test
rolb
fsubrl
sub
jb
out
pop
pop
and
cmp
lea
dec
jmp
mov
inc
add
cmp
je
adc
or
andl
inc
stos
adc
subb
add
movd
aas
imul
pusha
mov
insb
mov
inc
fsubl
cmp
sbb
bound
jb
outsl
mov
test
or
xor
test
popf
setno
repnz
jmp
inc
xchg
dec
xchg
add
sub
adc
xchg
rorb
je
or
add
faddl
cmp
sbb
mov
pusha
and
out
int
push
fs
xor
and
or
mov
adc
or
mov
inc
ret
lea
pop
cld
add
push
popa
inc
mov
sbb
fwait
arpl
and
popa
clc
outsl
cli
cmpsb
mov
add
xchg
outsb
ljmp
or
jmp
loop
pop
pop
and
add
sbb
aam
mov
rcrl
mov
push
dec
imul
and
mov
outsb
jecxz
pop
bound
stc
mov
fs
into
addb
adc
jne
mov
and
jge
inc
push
jns
test
fbld
adc
mov
test
sub
fsubrs
test
mov
js
test
test
mov
add
jbe
dec
cmp
lret
movl
push
mov
fstpl
sbb
mov
or
push
jecxz
add
arpl
lock
add
pop
bound
dec
sub
cmpsl
add
pop
adc
adc
aaa
xor
dec
pop
arpl
push
xchg
mull
dec
loop
xchg
and
xchg
pusha
or
push
add
mov
inc
adc
lahf
adc
add
decl
fmull
fildl
fsubp
inc
mov
fucomi
mov
adc
sbb
cld
fwait
lea
fst
hlt
mov
in
adc
xlat
push
roll
outsb
add
outsb
or
push
inc
loope
fildll
leave
jmp
lea
adcl
adcl
sbb
push
mov
pop
dec
jecxz
add
add
aad
out
outsb
popa
pop
xor
stos
xor
xchg
or
mov
add
dec
mov
pop
push
insb
sbb
inc
into
nop
dec
dec
rcrb
mov
pusha
cmp
dec
sbb
notb
nop
add
loopne
cli
dec
rcrb
sbb
jno
mov
cli
sub
or
shl
lea
sub
mov
test
icebp
neg
pop
imul
outsl
pop
sti
jbe
push
mov
stc
shr
sub
mov
mov
inc
fdivrl
jge
mov
aaa
pop
sub
push
div
test
or
andl
xchg
add
dec
and
call
pop
jl
pushf
xor
inc
mov
nop
sub
push
ja
dec
inc
dec
inc
scas
dec
dec
adc
loope
mov
push
adc
pop
xor
nop
negb
or
inc
mov
mov
insl
and
aam
xchg
lahf
or
rcrl
mov
pop
movsb
punpckhbw
pop
or
mov
loopne
sub
cmp
push
push
mov
mov
pusha
sub
cmp
inc
cmp
aaa
call
mov
add
in
or
adc
fiadds
adcb
scas
add
sub
pop
pusha
xchg
push
adc
and
imul
or
test
cli
in
xor
or
outsl
or
jge
jo
stc
pop
push
jne
dec
or
sub
add
rolb
jns
in
jne
lock
jp
inc
inc
es
add
pop
and
mov
or
loop
fimuls
dec
xchg
ss
and
adc
sti
and
push
jmp
fimuls
mov
or
xor
mov
fsubs
sbb
pusha
xor
cltd
inc
popf
xor
das
int3
insb
test
and
add
mov
jle
enter
cmp
fsub
xor
mov
push
adc
add
lock
in
cmp
inc
sub
xor
xor
or
iret
fcompl
and
test
ficomps
inc
xor
inc
ret
aas
test
mov
cltd
pop
je
lea
xorl
mov
jne
stos
jle
cmpb
push
push
push
dec
insb
adc
mov
pop
and
insb
sbb
inc
rclb
in
jmp
lcall
les
or
xor
lret
stc
lcall
les
testb
dec
xchg
mov
or
add
icebp
popf
push
adc
cmp
scas
pop
adc
js
jne
es
sbbl
push
fwait
js
push
xchg
or
push
or
les
imul
sbb
push
xchg
jl
xchg
loopne
lahf
xchg
adc
cmovp
xchg
lds
fiadds
dec
xor
add
jnp
sub
push
sbb
xor
imul
andl
push
push
mov
sbb
xchg
mov
popf
pop
sub
push
push
and
jg
cmp
push
adc
mov
into
adc
cmc
pop
mov
push
pop
movsl
inc
or
popf
mov
daa
aas
jge
cmc
or
mov
aas
jae
loopne
popf
add
bound
inc
roll
xchg
pop
xlat
cltd
xor
and
js
js
mov
or
rolb
push
or
cvtps2pd
int3
mov
jp
jp
adc
mov
sub
insl
cmpsb
out
jle
cmp
add
adc
or
mov
sub
cld
and
hlt
push
ja
shlb
int3
in
add
insb
iret
rorb
adc
xor
push
jb
sub
fs
inc
sub
or
xor
or
and
push
frstor
ficoms
in
xor
es
outsl
popa
or
push
jmp
dec
sub
jge
rolb
or
or
shrb
adc
dec
int3
lock
push
or
mov
ja
arpl
test
nop
cmpsl
mov
sub
daa
inc
xor
push
or
push
or
mov
adc
addl
cmpsl
pusha
flds
aas
scas
lret
mov
mov
jb
mov
fwait
push
pop
jp
cmpsb
or
inc
sub
fimuls
inc
push
mulb
or
addl
nop
inc
jmp
dec
insl
sub
dec
xchg
sub
dec
add
int
dec
pop
sbb
stos
outsl
sub
je
jmp
adc
adc
add
cltd
sbb
enter
sub
inc
adc
adc
adc
orb
in
ja
mov
mov
jle
xchg
pushf
je
inc
jp
xor
lcall
or
cmp
je
fsubs
push
pop
sub
add
xchg
insl
sub
arpl
or
repnz
sbb
cmp
scas
mov
xor
ficomps
leave
xchg
or
sub
push
dec
push
add
jle
push
jmp
xchg
dec
insb
adc
js
lds
cmp
jne
jne
mov
push
pop
xor
int3
pop
sbb
imulb
adc
and
in
push
lcall
iret
addb
sub
outsl
inc
aam
bound
mov
add
cmpsl
mov
mov
sysenter
xchg
add
rol
or
int3
jmp
aas
sbb
mov
xor
or
mov
xchg
mov
push
pop
adc
in
adc
sahf
mov
inc
pop
adc
xchg
and
in
xlat
add
or
sbb
and
popa
cmp
cmp
pop
mov
mov
sub
add
inc
aaa
push
pop
cmp
dec
mov
icebp
movb
test
and
nop
dec
and
daa
cmpsb
or
je
mov
mov
and
adc
test
in
adc
arpl
lcall
or
xchg
inc
addr16
into
sbb
sbb
dec
jp
adc
cld
jge
pop
adc
add
dec
mov
inc
push
pop
cmpl
xor
adc
pusha
frstor
dec
push
jmp
out
inc
test
or
addl
aad
movswl
mov
or
mov
lea
add
andb
and
sub
pop
dec
add
int3
push
movsl
jecxz
cwtl
imul
enter
jmp
push
lcall
mov
jmp
lret
inc
in
and
aam
rolb
call
dec
inc
das
lock
test
cmp
inc
mov
mov
sbb
and
mov
jne
jnp
add
xor
pop
jl
push
dec
mov
adc
sub
jno
add
mov
lahf
rorl
iret
lock
sbb
adc
mov
sti
fiaddl
push
aad
push
movb
and
push
jb
cmp
cmovnp
jnp
and
mov
ret
sub
in
es
pop
aam
push
jp
mov
rcrb
dec
or
xchg
sub
loop
rol
adc
loopne
and
shl
cmpsb
add
roll
push
dec
les
and
dec
push
sbb
or
xchg
sub
pushf
mov
jb
adc
popf
cmp
mov
sbb
mov
add
add
xor
out
xchg
jne
aaa
inc
pushf
sbb
mov
xor
aam
jo
sgdtl
lsl
fmull
and
test
data16
iret
fadd
pop
daa
or
test
pop
shl
xor
js
mov
pop
ret
mov
outsl
cmp
xchg
adc
shrl
xor
xor
jle
mov
sbb
or
or
dec
insb
lcall
or
xchg
out
lea
or
popa
fdivrs
jns
dec
es
or
into
aaa
je
mov
arpl
mov
inc
sbb
test
dec
sub
sub
daa
pusha
les
fwait
pop
dec
dec
cmp
in
sub
addb
std
sbb
add
adc
insb
add
fwait
jp
push
pop
insl
and
or
and
ret
or
inc
and
dec
movsb
addr16
adc
pop
push
jne
dec
loop
xchg
pop
sub
or
ret
adcl
aam
push
loop
mov
mov
test
inc
mov
mov
inc
or
jp
scas
adc
pop
jg
movhps
or
sbb
pop
dec
jecxz
out
pop
or
in
mov
push
cmp
pop
pop
push
in
mov
xor
pop
dec
inc
orb
sbb
push
insb
ret
ret
xchg
mov
push
inc
popf
add
or
xor
imul
popa
adc
test
or
pop
push
inc
rorb
outsb
lods
je
adc
shlb
dec
sub
scas
cld
pop
sub
outsb
fsubl
mov
or
lret
xchg
sub
push
in
addl
inc
dec
dec
cmp
push
xor
add
stos
sbb
lea
test
sbb
cmpsl
push
inc
rorb
jl
testl
sub
sub
add
out
pop
push
sub
pop
les
add
pusha
or
scas
cld
sub
dec
daa
mov
sbbb
mov
mov
sbb
xor
movsb
xchg
mov
or
dec
nop
pop
inc
addb
mov
cmc
add
insl
cmp
xor
daa
popa
and
or
mull
cmpsb
pop
pop
clc
fcoml
inc
sub
fwait
leave
add
inc
out
mov
or
cmp
jo
ret
decb
mov
adc
or
xchg
add
xor
and
inc
add
or
les
add
add
fldenv
push
sbb
out
lock
inc
pop
inc
pop
inc
mov
push
mov
cs
insb
aas
cmp
dec
xor
and
dec
cmpsb
jnp
jg
dec
mov
test
cltd
in
fistl
and
inc
xchg
push
mov
xor
adc
insb
adc
sbb
mov
andl
repz
les
dec
mov
das
and
les
sub
push
inc
and
cli
les
js
push
jno
jo
js
add
nop
ret
jg
mov
xlat
add
mov
jmp
or
add
je
inc
in
insl
cmp
push
add
ljmp
lock
jmp
add
xor
jbe
sub
sub
adc
sbb
xor
dec
xor
and
xor
fwait
mov
addb
lahf
push
call
push
or
je
add
jmp
in
aam
int
orb
cmp
je
rolb
sub
inc
ret
sub
mov
jmp
dec
pop
push
xor
jecxz
mov
pushf
mov
mov
sub
pop
push
push
or
jno
xlat
arpl
and
aam
fistps
inc
mov
aam
or
jbe
or
add
mov
repz
or
rcr
lret
jb
add
mov
xor
imul
xchg
pop
pop
sbb
jno
stos
les
sbb
lods
inc
sub
imul
ret
sbb
jns
inc
xor
xor
xor
rcrb
or
popa
out
orb
jbe
mov
inc
sbb
and
mov
push
nop
add
pop
mov
pop
lods
push
loope
inc
movl
or
xor
sub
or
or
mov
inc
mov
push
and
mov
lea
mov
insl
inc
mov
inc
cmpsb
mov
out
aam
push
fninit
xorb
jb
sub
incb
xchg
add
push
call
mov
lods
pop
push
jo
mov
adcl
cmp
movsb
and
adc
orl
and
jecxz
xlat
push
cmp
cmp
rcll
mov
bound
and
mov
fs
movsb
stc
stos
fldt
test
mov
xor
inc
add
push
jg
hlt
pop
cmpb
xor
lea
cmpsl
stc
xchg
and
into
aaa
jnp
inc
call
cmpb
lock
or
lahf
xor
movsl
flds
cmp
jmp
jns
call
and
shll
mov
adc
loop
push
cmpsl
mov
nop
xchg
inc
aam
aam
cmc
mov
sbb
mov
div
fsubr
mov
pop
in
adc
sub
insb
lret
lcallw
and
nop
ljmp
cmp
jecxz
addr16
shrl
and
xchg
add
adc
out
fsubr
cs
sbb
into
fbld
xchg
and
add
das
stos
sbb
and
rcrb
icebp
push
pop
fsubl
cmp
outsl
dec
cs
adc
xrelease
cmp
xchg
push
movsb
dec
mov
decb
and
mov
aam
lods
imul
xchg
inc
sahf
and
push
xchg
movsl
addr16
sub
mov
cmc
mov
push
inc
enter
adc
insl
pop
inc
pop
lea
arpl
inc
popa
sbb
inc
rorb
pop
mov
xchg
stos
jne
xchg
xchg
movsl
cmp
inc
lock
in
add
xor
mov
test
and
cmp
and
lods
mov
in
or
loope
out
xor
push
sbb
lea
jecxz
mov
inc
adc
adcl
subl
sub
xchg
push
aaa
hlt
jmp
xorl
jle
mov
pop
push
lea
ret
or
xchg
mov
call
jb
enter
mov
and
add
pushf
movb
pop
or
add
ss
andl
sbb
mov
xchg
sbb
mov
jo
or
jl
push
test
jb
sub
xchg
adc
inc
outsb
pop
or
add
lds
popa
or
pop
add
push
add
lock
pop
add
lds
jge
or
loope
mulb
rcr
out
add
pop
sub
and
jle
fwait
mov
push
lods
or
rorl
xor
add
jmp
sbb
rcll
cmp
arpl
push
push
adc
xor
cmc
fsubl
add
psraw
loope
lods
cmp
pop
xadd
push
cmpl
jg
in
mov
add
mov
shlb
iret
push
jecxz
notl
mov
push
mov
sub
pop
inc
push
and
in
inc
mov
or
add
pop
dec
rcrb
xorl
call
hlt
lock
ja
popf
imulb
subb
dec
jmp
pop
loop
pop
cmp
jne
and
cltd
rcrl
and
mov
lds
add
push
mov
out
enter
icebp
pop
mov
xchg
adc
and
out
dec
sub
inc
xlat
push
popa
pop
lcall
js
and
fnsave
xor
lods
sarl
iret
mov
outsl
or
fldt
stos
movsl
insl
pop
xor
imul
mov
int
push
aaa
pop
jle
rcrl
cld
pop
cmpsl
jne
ffreep
movsl
add
dec
gs
inc
adc
mov
or
sbb
pusha
in
popa
and
aaa
xchg
pop
xlat
mov
pop
out
test
aas
xchg
xor
and
sub
sbb
lds
push
cmp
ljmp
xchg
xchg
cmpsl
cltd
push
pop
mov
xchg
mov
push
lods
xchg
aam
jecxz
jne
pop
and
add
or
add
dec
clc
andb
leave
in
es
and
ret
jne
pop
popa
mov
and
insl
scas
pusha
cs
sbb
jae
jnp
cltd
mov
inc
rorb
xchg
in
ret
jb
nop
in
pusha
push
out
push
push
loop
call
enter
js
andb
mov
jb
sarb
xchg
add
pop
shlb
out
or
or
mov
xlat
jne
mov
je
mov
sub
push
mov
push
and
push
and
shll
cmpsb
xor
xchg
mov
pop
imul
pop
out
inc
or
sbbl
inc
pop
pop
sbb
mov
xchg
cmp
or
xor
jmp
cs
sbb
adc
mov
adc
xchg
shl
imul
mov
mov
loopne
mov
stos
hlt
and
pop
imul
pop
mov
adc
outsb
dec
pop
xorl
call
jg
fucomi
ficoms
jb
cmp
inc
pop
xor
std
adc
xorb
insl
bound
add
jne
vmread
or
add
push
lcall
xchg
inc
sahf
aam
xchg
jmp
mov
cwtl
mov
aaa
pop
mov
cld
test
bound
cmpsl
pusha
pop
sbb
aam
cmc
repz
lcall
adc
test
pop
out
int3
mov
adc
mov
jmp
adc
add
xor
dec
push
add
dec
ss
pusha
movsb
iret
pop
sti
mov
xchg
lods
add
aas
jmp
je
mov
sbb
xor
push
fildll
or
lods
test
dec
or
je
push
sub
and
test
pop
cmp
jle
les
setp
xchg
and
mov
je
add
fildl
ret
scas
pop
popa
das
add
int3
adc
es
call
xor
call
nop
add
mov
mov
push
push
sbb
mov
in
or
outsb
push
daa
loopne
push
jae
sbb
mov
je
cmp
add
mov
loopne
inc
sub
imul
sub
xlat
adc
sub
push
fimuls
sbb
add
mov
push
pushf
add
pop
mov
add
inc
push
into
and
lea
ljmp
add
or
inc
xchg
dec
ljmp
push
adc
addr16
push
dec
xorb
inc
adc
xchg
adc
adc
insl
jle
popa
movsb
test
je
xchg
mov
outsl
and
or
adc
xchg
mov
add
xchg
sub
mov
inc
sub
xor
enter
push
lea
addb
sbbb
push
in
dec
rol
cmpsb
inc
call
adc
pop
bound
sub
mov
sbb
cwtl
mov
test
inc
pop
dec
mov
outsl
and
movsb
cmc
sbb
adc
inc
in
nop
insl
cmp
test
or
push
data16
fildl
out
mov
add
mov
leave
ret
jno
or
data16
cmpb
mov
or
fcmovnu
mov
and
mov
mov
fcoms
popa
pushf
dec
fstpl
pusha
xor
and
pusha
ljmp
cmp
inc
incl
push
add
cwtl
pop
pop
sbb
add
add
mov
sbb
ljmp
notl
inc
pusha
sub
ret
out
sbb
inc
lods
or
add
or
or
or
xor
adc
movsl
ret
xor
and
sti
or
inc
cmp
dec
push
cmpsb
xor
ja
in
mov
dec
sub
or
push
add
and
fiadds
lods
subl
lret
cmpsb
xor
cli
sbb
and
xlat
xor
adc
dec
mov
fcomps
inc
repnz
dec
push
xor
mov
lea
out
adc
out
call
add
mov
into
aaa
sub
xor
cmpb
cld
pop
rorb
out
aam
inc
popa
jne
or
leave
mov
lea
or
dec
push
pushl
lret
out
pusha
adc
xchg
or
cld
lock
sbb
movsb
xchg
fstps
scas
mov
lock
mov
dec
push
jg
fs
and
or
lock
push
sbb
push
xlat
imul
or
lods
xor
sub
scas
sub
in
mov
jmp
pop
xor
cmpl
jne
movsl
and
or
xchg
popl
in
inc
pop
repnz
jnp
sub
mov
mov
fisubrs
in
push
sbb
jl
lahf
cmp
add
mov
push
aaa
andl
and
aam
inc
xchg
add
and
in
push
dec
jge
in
dec
pop
adc
sub
sbb
popa
jb
adc
ret
or
adcl
out
inc
xor
mov
je
vpcmpgtw
out
and
testb
mov
mov
ljmp
rorb
inc
add
adc
mov
dec
rolb
xchg
rorb
push
js
or
call
lods
cmpsl
inc
push
sub
aaa
adc
adc
xchg
icebp
mov
sbb
xor
push
dec
fstpl
pop
sbb
stc
jp
add
repnz
clc
lcall
je
inc
xor
and
nop
and
stc
mov
leave
repz
adc
fwait
mov
add
iret
inc
jbe
push
inc
adc
adc
or
cmpsb
std
sbbb
in
out
decl
xor
andb
mov
xlat
mov
mov
cmp
aad
arpl
inc
mov
sbb
int3
mov
adc
dec
sub
xor
pop
adc
add
add
adc
sub
jmp
adc
test
sub
hlt
lods
sbb
lock
adcl
jne
add
and
mov
dec
clc
add
sub
mov
lret
lea
sbb
mov
push
pushl
add
fiaddl
mov
mov
inc
pop
dec
push
add
jmp
bound
sbb
repz
inc
or
or
adc
add
movsb
sbb
in
xor
dec
xor
es
dec
repz
test
sub
cmpl
xchg
inc
xchg
push
shll
sbb
stos
dec
hlt
enter
pop
insl
shl
xor
add
enter
loop
cs
scas
pop
sub
dec
lea
xchg
pop
or
and
xor
mov
mov
jmp
test
adc
inc
cs
xchg
inc
xor
xor
rcr
push
cwtl
aam
inc
adc
gs
rolb
leave
push
testb
popa
inc
push
adcb
mov
push
filds
xchg
add
je
movhps
jno
pop
pop
idiv
add
jo
aad
fdivs
imul
jb
and
leave
pop
imulb
mov
ss
insb
mov
test
add
sbb
sbb
popa
adc
cmp
add
cli
adc
sub
test
mov
notb
dec
xor
mov
push
pop
jmp
imul
enter
add
cmp
adc
outsb
sub
ret
or
popa
xor
jecxz
cmp
jne
ret
adc
add
cld
fistpl
xchg
mov
test
fdivrp
nop
cmp
add
add
jb,pn
add
add
imul
mov
jbe
xor
negl
imul
pop
or
mov
dec
test
andl
dec
mov
out
jae
pop
cmp
pop
sbb
pop
jecxz
shlb
adc
or
sbb
test
leave
add
dec
icebp
lea
sbb
push
ficompl
cmp
add
mov
cwtl
shrw
xchg
pop
add
popf
cmpsl
test
xchg
cld
cmpsb
and
addl
js
push
fcmovbe
push
icebp
sbb
cli
xor
sbb
mov
pop
jge
inc
or
les
xchg
fisttpll
or
xor
add
or
and
enter
incl
ret
or
add
data16
scas
adc
and
pop
in
mov
and
cli
jae
sbb
sarb
cs
xchg
push
and
add
subb
push
add
fnstenv
addb
mov
rorl
or
xor
and
mov
sbb
loopne
mov
mov
pandn
incl
ret
insb
and
push
sub
add
cmp
add
popa
insl
sbb
cmpb
dec
rorb
pop
out
inc
popf
mov
sub
iret
inc
daa
test
mov
addb
adc
cld
and
add
hlt
loope
pop
cmpsl
hlt
push
sahf
lahf
sbb
inc
lods
or
or
invlpg
in
data16
push
jle,pn
push
inc
push
fstps
inc
sub
adc
stos
sbb
addb
add
ret
jp
movsb
push
movsb
and
addb
aam
sbb
ret
or
xchg
arpl
dec
or
unpcklps
sarl
pop
les
in
mov
mov
test
and
inc
push
dec
fidivl
in
xchg
rcrl
ret
xor
add
loopne
jb
xor
xchg
or
mov
addb
sbb
jp
inc
add
inc
dec
shrl
rolb
add
js
mov
pop
inc
test
sarl
and
mov
or
ljmp
sbb
mov
pop
push
cmp
cmp
jmp
fwait
sbbl
xor
aas
lock
sub
test
lds
mov
jno
xchg
sub
xor
add
ja
and
test
adc
add
stc
dec
sbb
sahf
sub
movsb
mov
sbb
push
push
arpl
mov
sar
push
popf
inc
adc
and
in
cld
mov
addl
add
jo
lods
jns
adc
rclb
jmp
or
outsb
push
jo
aaa
inc
aas
or
fld
adc
ja
incl
xchg
fdivl
outsl
test
xor
roll
push
js
insb
mov
es
aas
mov
dec
pop
and
inc
pop
stos
ss
inc
push
test
pop
inc
push
rcll
mov
test
adc
daa
fadds
push
addr16
add
nop
inc
pushf
pop
adc
insb
sub
dec
je
xor
add
jb
and
push
loope
lods
adc
pop
and
push
cli
sub
inc
jne
scas
and
fstl
movsl
and
sahf
cmpb
jl
adc
int
sarl
or
notl
jg
cltd
push
sbb
dec
and
inc
and
inc
sub
adc
neg
roll
stos
sbb
push
ret
insl
rolb
nop
sbb
shlb
les
xchg
das
dec
add
outsl
push
push
xchg
dec
mov
dec
adc
inc
add
lea
pop
pop
orl
mov
sub
adc
ret
adc
into
jae
rolb
push
or
pop
repz
aas
cmp
lret
mov
inc
adc
and
or
add
repnz
jbe
imul
pop
cmc
das
dec
lret
adcl
mov
stos
out
push
adc
mov
lahf
add
inc
jnp
pop
movswl
pop
mov
sbb
les
loop
or
or
sub
sub
xchg
icebp
outsb
ss
adc
fisttpl
xor
prefetch
adc
and
pop
push
sub
movb
xor
push
sbb
je
cltd
dec
sbbl
mov
jnp
mov
cld
fldl
mov
or
cmp
sbb
inc
sahf
push
jo
roll
xchg
test
jbe
pop
cwtl
fdivrs
xlat
push
aad
cmc
push
push
test
xchg
mov
push
in
xchg
adc
lea
add
rcl
xchg
xor
dec
pusha
jle
je
ret
test
roll
and
adc
das
cmp
xor
push
or
jo
mov
xor
and
mov
mov
push
lret
addr16
int3
enter
imul
adc
popa
or
sbb
inc
jns
or
mov
inc
xchg
sbb
mov
mov
cwtl
mov
and
sub
inc
inc
mov
inc
dec
es
ret
aaa
ret
das
rolb
lcall
push
pop
pop
jae
mov
loopne
add
adc
cmp
mov
je
add
lea
stos
push
in
cmp
push
movsl
jne
inc
push
mov
xor
cmp
popf
lds
add
into
mov
icebp
push
pop
mov
push
add
movsb
loopne
inc
test
sbb
and
call
push
lods
rclb
lds
cmc
inc
add
push
sbb
sub
dec
lods
sbb
mov
mov
arpl
daa
adc
push
shll
cmpsl
int3
xor
iret
cs
mov
mov
enter
ds
aaa
aad
mov
imul
fisttps
sbb
lahf
in
je
mov
mov
jno
addb
test
imul
fdivl
mov
or
sub
jae
push
pop
xchg
inc
icebp
jno
xchg
pushf
sarl
adc
inc
dec
jb
mov
sub
enter
xor
sub
lret
mov
orl
pop
aam
stc
jbe
cmpb
lea
cmp
and
divl
out
nop
jne
and
push
pop
xchg
adc
or
cmp
movb
sub
add
testl
movsb
adc
arpl
push
sar
pop
cmc
push
sarb
sub
imul
jne
aas
or
or
jecxz
es
dec
pop
xchg
shlw
int3
dec
and
dec
inc
xchg
and
out
aam
nop
xchg
dec
or
cs
sbb
and
inc
sub
shlb
xchg
stc
pop
cli
sti
fwait
mov
cmp
imul
idiv
lret
pop
push
sub
add
inc
or
push
rorl
cmp
jl
mov
inc
arpl
sub
scas
inc
stos
mov
xchg
push
not
cltd
shrb
sub
into
push
xchg
or
and
ljmp
or
jo
nop
mov
xor
test
aas
loop
sub
iret
in
pop
push
add
mov
aam
mov
pop
loop
adcb
sbbb
push
inc
rorl
push
loop
nop
add
and
add
nop
mov
pop
add
jecxz
je
roll
and
or
sbb
in
and
mov
inc
test
push
imul
bndstx
pop
inc
mov
mov
or
mov
sbb
sub
jnp
lret
jl
adcb
adcb
push
rclb
push
mov
or
sbb
add
fisttpl
xorl
push
push
aas
cmp
pop
jae
data16
js
ret
fisttps
dec
mov
or
xor
and
pop
cmp
ret
pop
fs
inc
sbb
ret
xchg
xor
xchg
andw
jle
xlat
imul
xor
adc
enter
test
or
xor
int3
subl
test
jne
std
push
xor
js
orl
jmp
inc
pushl
xchg
inc
cs
add
push
add
xor
jne
outsl
sarb
outsl
or
and
or
pop
push
dec
das
outsb
pop
shlb
idivl
dec
ss
fisubrs
ret
sub
push
das
mov
adc
shll
popa
xor
lds
xor
and
pop
int3
jmp
dec
cmp
orb
cmp
cmpb
pusha
repnz
add
xchg
fadd
push
jecxz
icebp
jle
cmpb
movsb
mov
push
mov
sub
and
xorl
xor
mov
rorb
jecxz
and
sbb
mov
scas
inc
mov
pop
push
xor
push
mov
mov
push
xchg
xor
or
pusha
mov
push
scas
mov
outsl
add
sbb
pop
rsqrtps
loope
jne
mov
pop
rorb
jno
imul
fiadds
or
sub
xor
cmpb
adc
je
dec
and
pop
pop
cld
imul
adc
cmp
or
or
dec
dec
lods
sti
mov
jmp
xchg
dec
test
mov
sarl
or
loopne
mov
lods
or
jp
mov
cmp
push
adcl
pop
shrl
adc
cmp
stos
jne
pop
dec
pusha
or
or
jg
cs
xchg
loopne
adc
mov
push
mov
push
xor
xor
xchg
in
imul
push
adc
loopne
rorb
mov
jl
aaa
push
fisttps
stos
dec
outsl
sbb
dec
sbb
cmpsl
push
lcall
test
cltd
sbb
icebp
sub
push
pop
inc
add
mov
pusha
add
aam
lods
fsubrs
hlt
jno
jae
mov
jmp
cmp
mov
cs
sub
push
adc
cmc
or
call
mov
inc
fistl
jb
or
ljmp
or
out
xor
andl
push
ret
mov
pop
sti
add
add
clc
int3
xor
sub
and
popa
testb
inc
adc
pop
iret
add
jle
pop
dec
push
sbb
cmp
adc
jmp
add
or
push
iret
adc
cmpsb
movsl
cmp
sub
xor
or
xor
mov
sti
jo
bound
sub
sbb
sbb
fisttpll
movsb
sub
stos
sbb
imul
fsubs
cmpsb
fimull
pusha
or
adc
add
or
dec
xor
cmp
pop
or
cmp
inc
aam
push
cmpsl
aam
inc
mov
loop
xor
xchg
inc
adc
mov
pop
test
or
mov
scas
rcrl
fldenv
push
dec
in
xchg
sbb
cmpsb
pop
pop
jecxz
jno
xchg
sbb
pop
push
pushl
cmp
shlb
out
adc
lret
out
inc
flds
data16
xor
push
mov
pop
mov
mov
mov
mov
or
add
lods
inc
cmpsl
movsl
push
adc
xor
xor
mov
or
xorl
mov
insb
rorb
popf
mov
add
dec
and
shl
sub
lret
jne
adc
inc
test
add
cmovo
xor
push
push
jae
scas
pop
lods
cmp
or
xchg
rclb
and
sbb
push
inc
mov
inc
pushf
hlt
add
jb
shrl
cmp
loope
sub
jnp
cmp
inc
add
jns
adc
cltd
pushf
xchg
adcl
cmp
xchg
cmp
test
push
dec
xor
jge
mov
pop
rcll
xchg
adc
jle
and
push
rclb
adc
pop
imul
xchg
les
push
mov
aam
cli
sub
cwtl
lret
add
lea
loopne
xchg
mov
inc
popa
insl
add
mov
jne
push
push
ret
mov
fistl
fistpl
rcll
mov
pusha
add
xchg
jmp
push
xlat
bound
cmp
inc
and
out
xor
adc
mov
or
xor
sub
mov
mov
add
push
pop
cmp
mov
rolb
jmp
sbb
out
orl
pop
sub
div
push
sbb
jo
fbld
or
pop
fadds
je
pop
or
or
or
xor
mov
push
pop
shll
dec
les
pop
push
adc
mov
sbb
sbb
push
mov
or
cli
das
jne
xchg
pop
mov
mov
loop
shrl
or
jmp
sub
outsb
add
nop
fildl
mov
inc
dec
int
mov
mov
and
sbb
iret
push
sub
mov
or
and
add
xchg
cmpsb
shll
ret
inc
mov
lds
dec
sarl
mov
dec
mov
jle
je
fwait
or
jle
mov
daa
or
daa
or
aam
out
adc
or
lahf
mov
adc
push
js
js
push
in
pop
faddl
popf
cmp
clc
cmp
xor
push
xchg
add
adcl
inc
dec
addl
cmp
jno
cmp
lock
ds
push
movb
fsubl
sub
xor
add
loop
out
pushf
cmp
add
adc
lcall
cld
xor
xor
cmp
mov
jl
clc
adc
cmp
lahf
aad
pop
mov
pop
lret
int
nop
loope
mov
and
movsb
push
mov
mov
dec
mov
sub
xor
xchg
or
cmpsb
push
cmp
xchg
sbb
in
test
pushf
inc
stos
test
inc
mov
xchg
cmpsl
das
mov
push
jmp
test
repz
ret
sbb
nop
add
inc
dec
cmp
les
fcomps
adc
iret
je
or
mov
pop
push
popa
jae
mov
sbb
or
sbbl
clc
sub
adc
pop
jbe
insb
push
adc
xchg
mov
fisubrs
and
inc
mov
cwtl
adc
jp
push
mov
push
push
cmp
sub
xor
cmp
imul
sbb
jmp
jne
and
add
daa
adc
inc
unpckhps
jae
adc
fldenv
sub
lods
mov
inc
loop
or
xchg
adc
jecxz
jmp
shlb
pushl
hlt
or
adc
mov
sub
popa
addr16
xchg
test
xor
pop
push
fimuls
dec
or
test
push
xchg
or
mov
and
xor
scas
adc
lret
je
jge
data16
dec
test
pop
and
sub
scas
push
sub
push
push
or
mov
push
add
or
pop
inc
xchg
mov
scas
sbb
and
xor
push
fucom
add
arpl
or
xchg
dec
sbb
lahf
adc
test
lds
sarl
and
je
or
addr16
adc
rclb
mov
enter
or
jecxz
aam
lea
jne
or
sbb
or
mov
push
push
add
mov
inc
mov
dec
mov
dec
bound
and
test
mov
fistps
rcr
adc
push
movsb
cltd
scas
xchg
mov
insb
xchg
out
cmpsl
test
stos
sub
cli
out
push
mov
cmpsl
sub
xchg
loope
out
ret
push
repnz
push
jp
jle
hlt
sub
pop
clc
xor
mov
clc
lock
sub
and
in
or
call
aam
es
mov
fmul
fmul
add
cmp
les
push
jmp
in
adc
daa
pop
pop
cmp
insb
test
dec
sbb
fbld
js
mov
out
push
jecxz
push
xchg
cmpsl
movb
fdivs
call
add
add
push
aam
adc
push
push
fsubr
loope
scas
inc
jne
popf
or
shrb
sbb
shrl
mov
lahf
and
stc
or
rcll
add
push
push
and
iret
dec
mov
inc
fcomp
lret
ret
shll
cs
mov
lahf
sub
mov
add
push
mov
sbb
sub
es
cmp
jmp
inc
and
rcll
movsb
sbb
jge
adc
mov
inc
pop
or
loopne
sahf
aaa
sarl
jge
outsl
das
das
or
iret
into
mov
mov
int
jo
push
fsubr
or
rolb
dec
pusha
notb
into
adc
adc
fmul
adc
ja
das
or
adc
mov
aam
adc
into
inc
dec
add
loop
pop
repz
jns
mov
loopne
sbb
sub
loope
dec
lods
add
sbb
pop
fisubrs
pop
cmp
and
jbe
push
or
fmull
or
addr16
xchg
dec
fadds
push
sbb
sbb
mov
repnz
les
sbb
sbb
leave
rdmsr
and
jb
add
add
loopne
pop
das
mov
sub
mov
insl
jne
pusha
mov
and
inc
mov
aaa
add
insb
clc
imul
add
and
scas
dec
test
outsl
dec
dec
in
jns
aas
xlat
cmp
test
jl
dec
or
jno
ja
add
sbb
sub
xor
xor
sbb
imul
cmp
sbb
or
bound
adc
dec
mov
cmp
add
adc
dec
nop
inc
pop
add
push
dec
ss
and
or
adc
sub
sub
sub
lds
xchg
jne
add
or
pop
sub
inc
sub
insl
incl
mov
jo
mov
or
dec
pop
pop
icebp
push
cs
pushf
aaa
cld
adc
mov
jno
es
movsl
imul
push
mov
cmp
ret
pop
xchg
xor
mov
sub
test
fdivrl
mov
dec
aam
hlt
add
mov
or
pop
and
and
push
xor
cmp
test
push
sub
data16
roll
and
cmp
jmp
div
nop
or
add
adc
mov
mov
rcll
or
or
xchg
xchg
addr16
jb
les
loopne
jl
insb
xacquire
pushf
push
cwtl
stos
inc
hlt
arpl
xorl
ret
pop
imul
aam
and
dec
in
aam
or
hlt
sbb
aam
mov
inc
push
or
repnz
insl
inc
cmp
aam
nop
popf
adc
mov
lret
mov
fimull
sub
push
or
fs
int3
push
test
add
cmpsb
insl
pop
aam
add
aam
add
into
add
cmpsb
and
adc
add
jns
cmp
adc
or
nop
adc
int
dec
stos
adc
xchg
int
and
push
lods
loope
daa
iret
sbb
sub
cmp
mov
dec
mov
pop
and
nop
imul
cmp
mov
sub
aam
pop
sbb
fldenv
cmpl
aam
pop
xchg
add
loopne
pop
sbb
xchg
rdpmc
mov
sub
dec
shlb
or
push
push
jb
imul
and
lea
int
nop
and
test
push
mov
sub
test
add
cmp
add
and
pop
enter
cmp
imul
adc
cmpl
sbbl
cmp
inc
jecxz
sbb
jmp
pop
loopne
push
imul
lds
testl
sbb
or
mov
outsl
sbb
shlb
sbb
add
icebp
test
test
add
lea
rorb
add
mov
mov
insb
push
sub
das
mov
sbb
mov
and
std
addb
inc
add
mov
or
fucompp
outsb
xor
xor
push
and
xchg
jnp
orb
stos
dec
popa
fdivrl
mov
call
test
inc
adc
cltd
adc
nop
or
mov
popa
cmp
xor
adc
adc
pushf
adc
sbb
pop
dec
imul
and
or
adc
movsl
insl
xchg
sub
xchg
fldenv
and
add
clc
sahf
inc
add
pop
jbe
iret
xchg
mov
lret
or
add
add
cmpl
repz
pop
sub
cmpb
orl
jbe
movaps
insb
iret
or
push
mov
inc
jmp
mov
arpl
dec
dec
push
dec
jb
mov
inc
mov
mov
mov
xor
xor
adc
add
int3
add
or
xor
pop
pop
pop
jg
js
jno
sti
mov
cmp
sub
xor
jno
mov
popf
mov
pop
lods
push
pop
addb
imul
cmp
mov
dec
cmp
daa
insl
mov
inc
enter
cmp
cmp
mov
and
adc
pop
push
xchg
sub
lods
sbb
dec
push
js
or
and
adc
or
lods
xchg
dec
mov
cmp
or
sub
jge
repnz
movsb
mov
xchg
fnsave
hlt
push
rcrb
inc
test
push
pop
das
sbb
xor
push
shlb
mov
and
xlat
inc
or
or
fs
cmpl
call
push
arpl
jmp
push
adc
add
dec
mov
movsb
stos
mov
mov
jb
mov
rcl
sbb
sbb
xor
push
inc
iret
mov
inc
xor
sbb
xor
lds
xchg
jge
sbb
add
cs
or
inc
ljmp
mov
popl
jmp
iret
jmp
cmp
pop
mov
inc
add
dec
jbe
ret
xchg
dec
dec
inc
popa
add
mov
daa
pusha
movsl
pop
les
sbb
jge
loop
mov
jp
lcall
sub
mov
shlb
out
paddsb
push
hlt
nop
mov
sbb
fnsave
dec
inc
imul
or
in
mov
mov
inc
push
mov
add
ficompl
dec
adc
or
add
shlb
sub
and
int
mov
jnp
pop
sarb
es
push
pop
das
rol
or
jg
lock
push
and
or
inc
or
scas
test
cmp
jl
call
js
das
inc
xchg
xor
or
xchg
push
xor
mov
push
lods
bound
mov
movsb
cmp
cmp
ja
clc
xlat
jge
jns
jle
fimuls
push
ja
test
imul
and
mov
lods
daa
fcoml
popa
call
inc
xlat
inc
xchg
lcall
shll
fprem1
or
or
and
pop
mov
and
bswap
aad
lods
add
inc
xchg
stos
das
add
lahf
das
je
pop
in
cwtl
mov
xchg
fadd
inc
das
push
and
xchg
pop
push
pop
dec
pop
xlat
add
or
enter
sub
mov
lahf
lds
sbb
std
add
insl
test
add
cwtl
inc
mov
and
or
dec
enter
negl
inc
mov
enter
inc
fnsave
decb
mov
and
or
add
aas
sub
or
mov
lret
jle
push
out
aas
jge
jp
push
push
sbb
inc
fs
or
inc
pop
adc
add
sbb
pop
adc
and
cwtl
and
clc
push
mov
insl
ds
or
mov
imul
inc
sub
add
and
sbb
xchg
dec
inc
or
xchg
lock
jbe
imul
and
inc
pop
outsb
mov
cmp
sub
rol
frstor
ret
pop
lods
push
movsb
mov
fstpl
jmp
xor
sub
cmp
inc
xchg
test
in
in
push
sub
addb
and
jne
cld
mov
xor
sub
jo
mov
fsubrl
xor
push
sbb
push
push
fisttpll
add
cwtl
jmp
push
pop
sbb
cmp
mov
sbbb
pop
or
das
xchg
mov
inc
outsb
inc
outsl
mov
nop
add
inc
inc
mov
push
les
and
or
jmp
sub
outsb
cmp
cmp
fisttps
jl
stos
lock
xchg
sub
mov
ljmp
iret
adc
push
out
cmp
fs
popa
sub
adcl
adc
add
inc
das
cs
fmuls
pop
push
inc
adc
lds
pop
add
dec
lods
adc
adc
pop
mov
lock
aaa
pop
imul
inc
in
fcoml
negb
jno
std
rolb
daa
or
cmp
push
jb
lcall
mov
ds
fwait
lods
xchg
shlb
add
dec
mov
flds
mov
hlt
inc
in
or
sarl
xchg
push
inc
cmp
repnz
pop
cmp
add
cmpsb
push
fucomi
ret
mov
push
sarl
push
push
cmp
test
loop
xchg
dec
mov
arpl
lret
lods
loop
mov
roll
jmp
out
lcall
cs
push
add
dec
dec
sbb
or
test
in
push
adc
nop
push
imul
xlat
lods
jns
in
or
mov
sub
sbb
pop
in
shl
adcb
outsb
push
jge
cwtl
mov
popw
and
pop
mov
add
fsub
add
mov
push
fs
fwait
clc
loope
fs
xchg
add
sbbl
sahf
mov
add
sbbb
mov
pop
inc
rorl
sahf
sub
fwait
add
addl
and
push
push
fbstp
pop
mov
mov
mov
int3
sub
lock
ret
mov
dec
ret
das
cmpsb
pop
or
and
jle
xor
inc
test
or
mov
popa
jnp
and
dec
dec
and
outsl
cmpsb
mov
adc
fistpll
daa
jle
and
pushf
fsubrl
pop
inc
scas
inc
push
lock
pop
add
xchg
sub
jmp
sbb
sbb
or
inc
and
push
nop
les
addr16
and
or
add
mov
mov
mov
inc
mov
ffreep
test
imulb
prefetchnta
mov
les
pop
je
mov
xor
dec
jle
popa
mov
xor
pop
or
lcall
adcb
or
add
loope
sub
movsl
aas
bound
xchg
dec
addr16
pop
imul
fisttpll
idivl
mov
or
cmp
dec
adc
sarl
sbbl
jno
add
mov
push
cmp
jnp
xor
mov
pop
out
sbb
push
sbb
stos
xor
rcr
out
jg
mov
add
addl
incl
pop
dec
insb
and
or
jg
push
pop
adc
adc
test
push
movsb
cmc
jo
in
fprem
pusha
or
gs
pop
adcb
xchg
or
sbbl
aaa
or
popa
sbb
sub
cli
push
mov
or
stc
sub
mov
clc
or
lea
add
in
xor
call
aam
pop
int3
push
test
mov
nop
pushl
insb
outsl
add
adc
xor
push
adc
dec
jle
add
outsl
cmp
rcrb
inc
ja
add
cmp
in
lods
mov
popf
and
or
hlt
gs
mov
dec
hlt
and
dec
add
cmpb
pop
rorb
pop
jns
jmp
imul
test
pop
inc
adc
inc
jge
sub
mov
jp
inc
das
sbb
pop
cld
in
sbb
sbbb
or
pusha
dec
add
jl
test
jg
fsubrs
inc
and
sbb
mov
mov
xor
loop
push
das
inc
inc
push
pop
push
cmp
inc
movsb
sbb
popa
pop
sub
test
mov
push
cmp
mov
mov
xchg
add
jo
fs
jnp
cli
cmp
push
xor
filds
in
jmp
sub
int
enter
mov
mov
inc
push
jmp
push
add
cmpsl
pusha
movsl
add
dec
or
lret
jp
push
into
push
cmp
mov
cmp
sbb
sbb
xchg
js
fnstcw
lea
notl
inc
dec
sub
sbb
dec
mov
imul
fadds
xchg
add
push
lods
push
push
xchg
inc
daa
or
inc
mov
inc
movl
xor
pusha
inc
mov
or
or
jae
pop
mov
dec
sub
daa
lods
push
mov
addl
xor
sbb
and
dec
inc
pop
or
adc
cwtl
es
fmuls
ja
push
lret
cmp
adc
inc
jecxz
or
sbb
lods
sbb
adc
sbb
xor
or
pop
adc
push
mov
addr16
sbb
sub
or
jmp
shlb
add
sbb
shll
lock
inc
sub
adc
push
pop
or
ret
sti
or
jb
sbb
and
add
adc
jmp
outsl
push
or
sub
xchg
add
cmp
mov
pop
mov
inc
shrl
test
inc
jle
or
xor
out
shll
sub
xor
es
movl
adc
adc
sbb
add
add
xchg
jg
mov
sub
aaa
xchg
ret
outsl
mov
xchg
out
push
std
je
add
clc
out
outsl
pop
movsb
sbb
sbb
xor
add
cmp
notb
movsb
loopne
add
clc
aaa
mov
mov
sub
aas
adc
adc
push
mov
xchg
jg
inc
mov
jo
adc
jg
pop
jg
cmp
add
xor
jbe
mov
ret
push
sti
add
por
jge
sbb
repnz
and
test
dec
mov
xchg
push
test
lods
out
stc
inc
fiaddl
outsl
push
in
jno
or
adcb
jae
pop
xlat
push
mov
mov
stos
or
lods
ja
add
or
in
cwtl
cwtl
nop
dec
aaa
and
xor
sbb
pop
sbb
cmpsl
add
sbb
rcrl
sub
inc
in
dec
pop
cmp
mov
and
push
and
sub
push
daa
mov
test
inc
sub
jmp
out
sbb
sub
sbb
outsb
insl
imul
pop
dec
dec
pusha
aaa
lods
pusha
int
out
cmpsl
ret
or
dec
clc
arpl
adc
repz
push
sbb
pop
or
insl
sub
inc
push
adc
jge
xchg
inc
or
imul
add
cmp
lock
mov
popa
inc
sbb
ljmp
clc
lock
pop
inc
inc
jne
sub
xor
dec
add
push
xchg
imul
cmp
lea
push
jae
pop
xchg
pop
lea
push
insl
cmpsl
mov
pop
aam
pop
add
cmp
sbb
js
pop
les
push
call
lock
adc
inc
dec
fisubrs
outsl
sub
add
les
in
xchg
pop
sbb
negl
push
popf
sbbb
cld
dec
mov
movsl
dec
stos
out
movsl
cmp
push
pop
prefetch
jp
fwait
inc
adc
test
fldcw
sar
sub
add
jne
out
dec
adc
sub
mov
dec
iret
scas
jno
shlb
xchg
or
mov
fsubl
fcomp
and
mov
es
xlat
pushf
dec
pop
daa
sub
inc
lret
lods
add
cmp
pop
cmp
add
push
rolb
inc
cmp
daa
mov
sbb
add
inc
add
pop
push
mov
xor
roll
inc
dec
and
movsl
add
push
jmp
push
pop
xorl
lods
add
push
add
pushf
cmp
cwtl
and
mov
ss
or
inc
mov
inc
shll
lret
or
or
stos
mov
cld
xchg
dec
loop
add
pop
xor
test
lds
rorb
pop
dec
test
dec
inc
adc
xchg
dec
adc
test
ss
add
fistps
inc
cmp
jne
popa
cmpsb
nop
dec
mov
popf
stc
in
lret
mov
sub
adc
dec
pusha
push
cltd
insl
sbb
in
dec
lock
lock
inc
negl
cmp
insb
pop
jnp
scas
add
inc
lcall
cmp
push
cmp
jno
mov
xor
or
add
fimull
and
jae
or
stos
dec
loop
and
rorl
sbb
sub
pop
xchg
mov
outsb
or
mov
mov
imull
roll
push
or
push
and
sti
sub
xchg
lods
xchg
orl
push
push
dec
add
jb
mov
aad
dec
mov
add
scas
lods
or
pop
pop
clc
lahf
cmc
clc
sar
jns
adc
test
sahf
add
pop
or
cmp
sub
pop
pop
jne
add
mov
and
hlt
add
inc
loope
popf
lock
js
push
out
pop
jbe
push
imul
movsl
xor
outsl
dec
push
faddl
push
pusha
and
inc
add
push
or
dec
push
pop
push
outsl
pop
adc
je
or
sbb
sbb
insb
call
fs
xchg
sub
push
or
sbb
imul
shlb
xor
push
mov
cmp
inc
jnp
clc
sar
add
clc
jl
daa
call
xor
cmpsb
cmp
lock
lock
adcb
rorb
fs
clc
and
push
fstpt
adc
add
arpl
jnp
movsl
mov
pop
push
jnp
sub
js
ss
add
push
mov
cmp
adc
push
mov
xchg
jge
data16
cs
and
cmp
lret
divl
outsb
sbb
adc
mov
in
inc
in
testl
dec
fisttps
jl
xchg
enter
fnstenv
sbb
dec
aam
sbb
cmp
xchg
sbb
xchg
or
pop
push
int3
sbb
insl
cmp
jmp
pop
sub
fcompl
or
enter
loop
int3
push
fcoms
push
shrb
add
aam
cmpsb
push
push
cmpsb
popf
or
inc
dec
cmp
adc
xor
jg
jge
and
mov
xchg
jp
mov
addr16
mov
sub
cmp
popa
cld
adc
icebp
ja
or
or
add
xchg
inc
mov
jg
mov
dec
dec
push
sbb
xchg
std
or
sbb
jge
fadds
xor
xchg
add
xor
push
push
subl
mov
xorps
push
iret
push
fldt
push
rolb
inc
dec
ffreep
out
push
ficompl
dec
inc
inc
mov
int
push
and
mov
push
dec
inc
jne
push
mov
push
xor
xorl
cld
lods
scas
lret
push
adc
push
ss
inc
sub
xor
push
lea
shrl
sbb
and
into
mov
adc
add
popa
push
pop
inc
sub
rcll
imul
sbbb
mov
sbb
add
mov
bound
cmp
adc
dec
sbb
subl
xor
call
mov
push
mov
nop
sbb
hlt
in
xor
fs
test
xor
mov
jo
push
jmp
lds
or
adc
jae
mov
leave
imul
cmp
je
pop
jne
add
test
movsl
mov
outsl
xor
dec
jae
cmp
jne
ret
ret
loope
loop
add
pop
sti
pusha
mov
mov
push
and
nop
cltd
subb
push
inc
mov
and
outsb
jmp
cwtl
xor
loope
adc
stos
jae,pt
push
pop
adc
add
xor
mov
push
xor
mov
push
pusha
fs
mov
daa
inc
pop
push
sub
std
pop
aam
in
mov
movsb
sbb
push
push
inc
adc
add
xchg
cmp
cmp
or
dec
push
pusha
jae
jp
push
xor
cmp
push
mov
andl
push
mov
and
test
add
test
pop
mov
sbbb
minps
inc
test
pusha
and
js
retw
lcall
xchg
adc
movsl
sub
sahf
inc
inc
or
xchg
sbb
test
add
std
push
sub
movsl
popl
pop
cmp
push
mov
movsl
ss
repnz
data16
test
into
xor
pop
adc
mov
mov
or
lret
xchg
enter
int3
push
arpl
jbe
pusha
cmpsb
xlat
pop
cld
je
popa
xorl
mov
adc
test
in
sbb
sbb
sub
int3
dec
sbb
and
mov
xchg
ror
gs
sbb
push
dec
in
lea
cmp
and
test
add
or
xchg
mov
add
leave
call
stos
add
lret
add
xchg
and
xchg
mov
loopne
mov
pusha
adc
popa
testl
and
leave
ds
jge
jle
jl
ja
xlat
push
xor
lock
ss
adc
dec
insb
ss
mov
test
and
and
cs
mov
icebp
and
shll
lds
arpl
sbb
fdivrs
xchg
pop
push
cwtl
bound
or
stos
adc
test
adc
rcrb
aam
and
jo
aas
aad
fcmovnbe
or
cltd
pop
adc
bound
xor
and
call
jecxz
pop
insl
pop
and
ja
stos
orb
dec
adc
cmp
adc
movlhps
sub
cmp
outsb
fdivs
mov
pop
fsubl
popa
aas
cltd
mov
pusha
jnp
jmp
sbb
mov
lods
inc
pop
cs
rclb
fistl
xor
push
popa
push
outsb
imul
or
js
cmp
pop
push
push
dec
push
sbb
inc
lods
mov
add
mov
push
inc
imul
lods
add
and
mov
xor
cmp
and
or
dec
clc
or
pop
xchg
or
add
mov
pop
ss
pop
push
mov
cltd
pop
xchg
push
fiadds
jl
or
imul
sub
jmp
push
xchg
xchg
xchg
or
xor
inc
xchg
jg
insl
arpl
enter
bound
jg
or
pop
fwait
push
sub
add
sub
xchg
jno
lahf
add
mov
sub
iret
ja
pop
test
adc
test
cmp
mov
cmpl
xchg
lock
in
pop
dec
jns
aaa
add
sbb
cmp
xor
sbb
mov
pop
pop
push
or
push
push
jb
pop
push
test
push
push
pop
pop
adc
cmp
pop
and
xor
mov
lock
mov
loopne
add
insb
add
add
popf
hlt
outsl
adc
outsl
mov
jne
in
jno
adc
hlt
lahf
pop
cmp
dec
mov
ret
sub
mov
dec
cmp
pusha
and
outsb
bound
cmp
add
or
cwtl
xchg
nop
dec
adc
pusha
mov
js
jge
push
pop
adc
cli
leave
mov
add
jno
push
push
adc
mov
and
mov
cwtl
sbb
sahf
test
and
lret
mov
ficoml
inc
push
test
test
inc
cmp
test
pop
rcl
jnp
mov
inc
add
dec
daa
fmuls
enter
and
cwtl
sbb
imul
movsl
push
ja
adc
mov
orb
xchg
aad
dec
push
lea
and
loope
jne
inc
xor
push
xor
sbb
out
inc
test
daa
adc
sub
and
mov
clc
cltd
movl
jmp
mov
loopne
inc
loopne
in
aas
movsb
addr16
call
imul
push
jo
mov
daa
loope
inc
js
lea
jmp
jae
fdivrl
xor
mov
pop
sbb
bound
cmp
adc
ret
clc
roll
xchg
mov
adc
or
or
pop
xchg
jge
daa
cmp
test
or
xchg
fwait
inc
or
popa
pop
pop
push
cwtl
pop
addb
inc
in
jmp
jle
add
push
push
push
adc
arpl
fisttpll
xor
dec
cmp
mov
mov
push
ljmp
xor
xchg
mov
in
adc
push
and
sbb
hlt
or
inc
mov
cmp
and
mov
and
or
adc
movsb
movsb
lock
xchg
dec
sti
ja
test
or
and
push
popa
cmpb
imul
je
jnp
loopne
jo
cmp
inc
popa
das
dec
rcr
pop
sub
mov
fs
pop
add
inc
adc
icebp
shlb
orb
add
jle
hlt
popf
add
shlb
mov
movsb
imul
dec
int
push
out
mov
sahf
cmp
fwait
jns
fisubs
shlb
shlb
sahf
and
sbb
pushf
and
nop
cmp
mov
xor
cmp
lods
xorb
gs
fsubl
lods
inc
push
incl
jno
dec
inc
movlps
rclb
dec
dec
push
daa
dec
adc
jl
dec
adc
insl
icebp
test
gs
cmpsb
movsb
sub
insb
mov
inc
cmp
test
das
push
out
mov
mov
pop
push
pop
inc
push
dec
pop
imul
out
cmp
inc
xchg
dec
jae
pop
ret
rolb
lods
push
cmp
dec
cmc
sbb
rclb
and
mov
cmpsb
adc
cmovno
sti
add
stos
ret
fs
push
int
cmp
jnp
add
mov
mov
mov
sbbl
push
add
mov
sti
fwait
adcb
sub
aam
xchg
sbb
ja
cltd
add
add
or
mov
or
dec
mov
and
xlat
into
add
or
lods
fs
insl
sbbb
and
pop
sub
xchg
je
mov
lds
adc
test
in
cltd
sub
dec
outsb
sub
adc
or
pop
popa
addl
xchg
cmp
inc
shrl
cwtl
aam
arpl
xor
add
push
mov
mov
mov
or
repnz
mov
adc
and
lea
into
push
mov
fcoms
fwait
les
popa
jno
cmp
push
adcl
dec
jno
lret
inc
add
lods
fmul
popa
daa
mov
mov
sub
mov
cltd
sub
mov
sub
or
bound
hlt
movsb
gs
cmp
fcom
push
add
xchg
xor
ret
imul
inc
adc
ja
test
popa
ja,pn
ja
push
jmp
jae
push
ja
sbb
in
pop
bnd
rcr
push
xchg
mov
pop
cmp
cmp
xchg
addr16
xor
ret
push
jg
popa
dec
add
test
sahf
mov
subl
mov
out
test
movsl
and
popa
cmpb
call
push
add
in
jo
add
out
imul
pop
fldl
mov
ret
cs
fldl
mov
or
ret
pop
daa
mov
fiadds
mov
jno
add
pop
xlat
inc
push
in
add
or
adcb
or
popa
and
es
adc
insl
jb
lea
lock
dec
shll
stos
add
mov
sub
icebp
out
sbb
movsb
outsl
xor
push
fimull
pop
and
add
ds
clc
add
xlat
add
adc
pop
inc
sbb
shl
mov
vmread
xchg
test
mov
xor
movb
push
add
pop
loop
jge
lcall
jne
lcall
lcall
pop
movsl
lret
push
push
rclb
mov
or
pop
subl
ss
mov
insb
sbb
and
xchg
clc
mov
insl
jl
pop
sahf
pavgw
xchg
adc
test
adc
imul
jnp
lcall
push
cmpsl
mov
xchg
or
rcr
mov
cmp
inc
xchg
insl
outsb
inc
cmp
cld
and
outsb
xchg
push
or
adc
pushf
lret
rorl
clc
lgs
xchg
and
mov
in
outsl
pop
push
add
sub
add
enter
mov
push
testb
int
ds
psubusb
xlat
jge
push
test
jmp
or
test
lret
xor
mov
aam
xor
add
and
jo
adc
or
addb
xor
fs
fwait
insb
cmp
ficomps
or
cmp
and
and
inc
js
inc
xchg
aam
adc
mov
dec
ret
mov
inc
fidivrl
faddp
mov
sub
sub
dec
sub
movzbl
jne
jge
pop
and
pop
mov
adc
ret
inc
ss
cmp
lahf
sbb
js
in
fs
sbb
pusha
daa
mov
mov
xlat
loopne
icebp
inc
pop
mov
rolb
adc
adcl
addl
add
lea
mov
movsb
xchg
sbb
scas
xchg
pop
and
xlat
dec
and
mov
aaa
pop
rcrl
arpl
jo
and
nop
sbb
jb
orl
cmpl
jb
clc
inc
and
movsb
nop
inc
dec
shlb
or
adc
cmp
popw
jns
not
inc
adc
ja
pop
lods
inc
popl
adc
mov
gs
xor
outsl
xor
imul
popa
adc
push
adc
sahf
sahf
call
inc
push
addr16
push
sub
adc
and
stc
jae
sbb
xor
xchg
cmp
mov
add
inc
dec
shrl
fsubs
sub
jbe
pop
pop
or
cld
pop
je
ja
pop
jmp
shlb
hlt
push
or
add
test
push
pop
inc
bound
test
fsubrl
or
fdivs
cmp
ret
cmp
leave
fadd
int3
inc
dec
dec
adc
adc
dec
repnz
in
ja
in
sbb
and
nop
add
add
dec
xchg
inc
push
xor
loop
and
test
pushf
inc
jp
loopne
add
sti
mov
pushl
dec
push
push
fcoms
adc
fildll
fdivs
sub
mov
sti
mov
inc
mov
push
inc
pcmpeqw
add
sbb
loop
jmp
aad
add
fcompl
pop
add
das
lret
cli
loopne
mov
inc
imul
test
jbe
dec
fwait
inc
or
pop
pop
mov
sbb
mov
ret
clc
jbe
je
rorb
mov
add
inc
xchg
arpl
cmp
notl
inc
sbb
fildl
test
mov
mov
add
cmp
cmp
add
cmp
mov
sbb
xor
inc
sbb
or
sbb
pusha
inc
aaa
rcrl
movsb
or
loopne
mov
xchg
outsb
sbbb
shlb
fnstcw
and
lock
inc
loop
aam
shlb
and
inc
stos
sbb
jmp
dec
loopne
sarb
push
scas
ret
neg
jge
fwait
das
ret
sti
fisubrs
push
push
nop
add
pop
loope
nop
xchg
and
jns
frstor
in
add
cwtl
fs
lock
jp
mov
fcomip
xor
inc
es
cltd
in
jb
dec
loop
or
lcall
pop
and
add
pusha
mov
xor
mov
scas
add
dec
dec
push
jp
lahf
pop
xchg
push
add
ret
addr16
sbb
pushf
jbe
mov
bound
lods
or
sub
jns
cmpsl
ljmp
je
xor
xchg
insl
pop
sbb
test
or
rcrb
lea
sbb
leave
pop
or
roll
sbb
or
nop
xor
add
xchg
rorl
ficoml
or
adc
and
add
jnp
fld
adc
and
or
movsb
stos
enter
nop
jl
xor
push
dec
daa
paddusb
push
cmpl
lock
pop
add
lahf
rorb
xchg
sbb
sub
repnz
cmpsl
add
call
or
mov
adc
sbb
pop
leave
mov
mov
ret
add
pop
mov
xor
pusha
test
sub
push
cmpb
jnp
aam
push
dec
repnz
mov
mov
jnp
adc
aam
flds
pop
add
jg
sub
mov
xchg
inc
jmp
jne
sub
mov
pop
das
xchg
xor
jmp
int3
adc
in
jge
in
and
adc
jno
sbb
push
pop
adc
xor
add
data16
push
cmpsb
cmp
sub
fldlg2
pop
aam
inc
dec
in
les
int3
push
and
add
sub
les
lea
xor
mov
xchg
and
add
or
push
arpl
jns
or
lods
nop
addr16
cltd
inc
or
push
sarb
adc
data16
test
add
or
popa
add
xchg
or
xor
jo
orb
add
testl
mov
inc
iret
clc
mov
add
sub
aaa
in
mov
xlat
add
cmp
pop
push
ds
dec
dec
dec
daa
dec
or
sub
add
aas
aaa
sbb
insl
adc
leave
or
mov
imul
rcrl
inc
inc
sbb
shlb
mov
aaa
punpckhwd
and
jle
leave
or
shlb
adc
jle
repnz
test
mov
sbb
or
sbb
xor
push
xchg
pusha
dec
or
mov
test
pusha
add
daa
dec
sarb
xlat
aas
jg
movsl
adc
enter
sub
out
jg
test
xchg
pusha
ret
fisubrs
or
add
inc
cmpb
inc
dec
lea
jg
and
xchg
rcll
dec
jne
push
xchg
adc
mov
pop
jg
cmp
or
jbe
and
sahf
and
cmp
push
or
xchg
addr16
insb
shl
cmpsb
xchg
iret
xchg
pop
add
xchg
test
scas
cmp
sbb
push
xorl
xchg
cmp
arpl
mov
dec
jne
ss
ljmp
xor
enter
mov
lea
aas
int3
enter
gs
int3
jmp
dec
daa
addl
sbbb
dec
pusha
cltd
rcrb
cmp
ficoml
cmp
sbb
mov
push
mov
add
jecxz
addb
jne
lret
mov
loope
and
sbb
jmp
fcomi
sbb
and
popf
add
add
sub
data16
orl
outsb
dec
andb
or
sub
jmp
psraw
int3
and
pusha
add
add
testl
cs
out
lea
adc
dec
push
xor
and
mov
cmp
mov
cmpsb
imul
xchg
mov
and
aaa
lcall
or
pop
ds
xchg
mov
jg
xor
xchg
xchg
aad
int3
cmpl
popa
test
or
mov
sbb
lods
pushf
sbb
mov
jp
and
mov
outsl
pop
jb
lods
sbb
jb
mov
or
inc
xchg
mov
inc
push
test
sbb
jb
pop
nop
mov
and
mov
cmp
lock
sbb
add
scas
sarb
sbb
movsb
clc
sbb
jb
xorb
and
cmp
addb
sahf
imul
sbb
scas
int3
fsub
nop
add
cld
scas
pushf
add
mov
or
jb
outsl
lods
or
sbb
fsub
inc
push
enter
sbb
inc
fwait
or
xor
xlat
mov
mov
test
push
cmp
shll
pushf
dec
shll
sti
test
mov
rolb
cmpsb
imul
cmpsb
imul
cmpsb
cltd
das
out
xchg
jl
lcall
iret
push
fsubr
mulb
add
adc
pop
lcall
xchg
push
mov
mov
lret
ds
shll
sub
jg
dec
roll
pop
or
out
test
stc
adc
adc
push
pop
xor
and
push
mov
cmpsb
and
dec
leave
and
mov
pop
das
adc
rorb
pop
leave
mov
outsl
sbb
add
pop
inc
mov
mov
mov
pop
sahf
ja
mov
inc
insb
pop
fiaddl
pop
divb
pop
repnz
add
and
add
les
mov
lea
pop
repnz
cmp
pop
leave
cmp
ds
addl
movsl
inc
popf
mov
fwait
xchg
setle
xchg
cmp
mov
int3
daa
mov
arpl
add
fs
insl
or
pop
or
sub
arpl
sub
xor
cs
or
cmp
mov
sbb
mov
lcall
pushl
mov
in
pushf
stos
sub
push
or
insb
fs
push
pop
and
popa
sub
push
fiaddl
enter
cmpsb
test
add
mov
mov
add
jnp
or
xor
push
stc
loope
and
fdivrs
mov
pop
mov
sub
inc
xchg
in
test
mov
jecxz
push
push
test
inc
scas
cmpsb
or
cs
adc
pop
ljmp
xlat
mov
pop
add
xchg
lods
aad
stos
fisubl
into
sbb
imul
in
and
rcl
ficompl
pop
adc
adc
les
jo
lock
cmp
sbb
and
rsm
push
jg
dec
sbb
jbe
sbb
sbb
mov
divps
lods
shlb
orb
inc
and
insb
iret
and
inc
dec
adc
or
jle,pn
pop
cwtl
dec
popa
stos
aas
adc
jl
insl
shrl
push
and
adc
mov
lcall
out
mov
push
in
cmp
jns
xor
cmp
clc
mov
sub
rcrb
in
lret
inc
adc
mov
xchg
inc
push
or
xchg
sbb
xchg
lret
daa
add
test
cmp
pushf
daa
pop
xorl
pop
aaa
divb
lret
testl
add
xor
push
hlt
mov
scas
mov
mov
test
inc
adc
and
aas
mov
push
sti
mov
leave
mov
mov
pop
ror
mov
pusha
xchg
mov
push
mov
sarb
fstps
dec
daa
push
sbb
push
and
orl
xchg
push
cmp
pop
mov
push
es
mov
loopne,pt
adc
nop
cmpl
dec
sbb
dec
ret
mov
or
pop
add
fiadds
mov
icebp
sub
adc
inc
inc
xchg
adc
outsb
lahf
mov
pop
shrl
mov
fwait
sbb
and
mov
add
xor
out
jne
sbb
adc
add
mov
xchg
push
push
cmp
and
jmp
ret
scas
or
mov
shlb
ja
jge
cwtl
adc
sbb
data16
inc
jbe
out
adcb
ss
lds
mov
clc
push
pop
mov
mov
xor
bound
xchg
pop
cmp
enter
push
dec
js
xor
dec
mov
push
push
sub
repz
inc
xchg
mov
push
cmp
js
mov
add
ret
jno
lea
pop
scas
sbb
push
xchg
pop
out
out
aas
in
or
sbb
std
add
add
or
add
push
xchg
fs
int
cmp
shrl
mov
test
adc
test
adc
imul
inc
jno
add
xor
cmpsb
clc
cmp
cmpsb
mov
mov
movsb
push
add
pop
imul
out
lods
loope
or
xchg
cmc
push
hlt
add
jns
pop
sbb
lcall
mov
sub
xchg
cmp
sub
xchg
push
or
add
add
dec
sbb
test
loopne
sbb
pop
jmp
jl
pop
dec
push
xor
jne
jbe
pushf
add
inc
loop
imul
pop
stos
add
imul
fs
mov
sbb
cmp
int
xorb
xchg
push
push
mov
dec
cltd
mov
add
jae
mov
add
cmpsl
or
movsl
dec
mov
mov
jg
loopne
shlb
sbb
cmp
sti
mov
mov
sub
jne
leave
dec
mov
mov
fwait
adc
sub
inc
andl
stos
inc
ljmp
lds
mov
xchg
or
push
loopne
loop
mov
jae
cs
stos
jo
std
inc
jne
and
stos
dec
fwait
jge
add
jmp
and
sub
dec
subl
sub
fadds
adc
dec
inc
pusha
or
jbe
aam
xchg
lahf
sub
test
leave
orb
loopne
call
popa
and
dec
inc
imull
mov
das
inc
into
mov
pop
fcomps
sbb
stc
xor
movsb
outsb
or
mov
cmp
mov
mov
cmpsb
and
mov
push
outsl
sbb
fcomps
adc
and
inc
inc
outsl
jne
rorb
ret
add
jb
mov
iret
adc
popf
xor
call
push
cmp
pop
add
mov
test
inc
push
sub
jmp
jae
dec
mov
mov
les
mov
jns
jno
sub
cli
incl
cmp
je
inc
cmp
jne
jmp
push
cmpl
push
inc
sbb
pusha
sbb
mov
pop
and
add
pop
mov
add
movsb
mov
int3
or
fsubl
sub
pop
rol
inc
dec
or
push
adc
pop
aaa
lods
push
in
jmp
arpl
nop
scas
sub
arpl
leavew
nop
add
push
inc
jecxz
sub
xchg
outsb
mov
jp
dec
fstl
cmpl
add
mov
pop
int
popa
nop
movsl
add
sub
pop
lret
aaa
das
testb
loopne
lcall
test
xor
adc
jo
into
test
adc
nop
insl
inc
ret
stc
mov
test
std
mov
loope
test
add
add
setge
push
jo
jb
sbb
and
dec
or
call
mov
inc
es
push
mov
push
jo
lret
and
sbbl
aaa
push
mov
sbb
add
das
push
lea
mov
cmp
ja
xchg
test
movsl
cmpsl
lods
pop
jg
add
int
shlb
xchg
add
dec
mov
fwait
or
push
push
adc
enter
fs
out
xor
lea
cmpl
imul
fwait
add
repz
insl
mov
pop
inc
stos
xchg
in
sbb
mov
mov
and
lret
push
mov
sub
lret
pop
add
mov
and
int3
cli
or
mov
xor
mov
test
mov
adc
mov
insb
inc
push
jmp
rclb
test
jo
jecxz
jae
imul
lret
or
lcall
and
add
xor
sub
add
mov
mov
xor
push
sub
idivb
and
push
inc
push
sahf
inc
sub
test
ret
dec
xor
push
push
movsb
notl
test
dec
lea
sub
test
out
aam
stos
nop
les
inc
xchg
fisttpl
add
je
mov
xchg
inc
inc
and
cmpl
mov
in
sahf
pop
call
jns
lock
add
pop
in
negl
and
mov
mov
inc
sbb
sub
sbb
cmp
sbb
or
adc
divl
cmp
loope
arpl
push
pop
pop
fiadds
dec
pop
fcoml
js
xchg
dec
jne
mov
sbb
outsl
jmp
cmpsl
xor
fwait
insb
arpl
jb
and
and
lsl
add
cmpsb
mov
add
mov
jbe
jo
addr16
scas
sahf
ret
xor
jo
les
lds
popa
dec
setl
sbb
inc
jne
faddl
pop
bound
or
in
arpl
inc
jge
mov
pop
into
mov
add
pop
and
fs
lds
pop
fcomip
mov
push
mov
imulb
enter
mov
icebp
inc
rclb
jnp
inc
dec
cs
adc
arpl
insl
daa
inc
ret
push
popf
je
adc
into
jg
es
cli
jl
je
pop
popa
jne
adc
mov
xor
lret
mov
xor
sbb
jne
push
push
int
inc
cmp
cwtl
inc
jae
mov
nop
xchg
lock
out
add
insb
sub
or
inc
sbb
js
jp
js
das
fnsave
xor
cmpsl
xchg
cmp
in
mov
test
fnsave
push
lock
push
movsb
cmc
push
sbb
test
je
testb
in
pop
mov
or
dec
push
dec
push
dec
mov
pop
ljmp
movsb
dec
mov
imul
test
pop
pusha
pop
rolb
cmp
lret
adc
cs
call
dec
enter
jl
movsb
sbb
sub
inc
imul
cmp
mov
or
es
push
dec
or
xchg
add
xchg
mov
mov
adc
lahf
popa
outsl
xchg
sbbl
xor
push
fnstsw
ret
dec
inc
stos
inc
push
cwtl
or
bound
jne
mov
xchg
dec
and
jmp
xchg
push
jno
mov
jmp
nop
push
addl
add
add
sub
jne
push
jno
pop
test
dec
shlb
mov
int
hlt
out
xchg
imul
push
fsubrs
jle
inc
or
rclb
lock
push
push
leave
adc
sub
and
adc
sarb
jo
jb
or
loopne
lock
push
sub
cmp
sub
mov
out
cmp
adc
inc
je
subl
and
add
jbe
inc
jmp
adc
pcmpeqw
pop
test
push
cmc
hlt
movsl
xor
fcmovnbe
cmp
or
jg
xchg
pushf
add
adc
sbb
addb
outsl
jb
mov
push
mov
push
movsl
cmpsb
and
fstpl
cltd
and
cmpl
mov
push
mull
test
lock
sub
out
or
and
mov
xchg
mov
add
mov
out
xorb
cmc
mov
jns
xor
mov
and
out
fwait
aad
inc
icebp
ja
mov
add
jae
mov
cmp
popa
lahf
add
dec
cld
sbb
add
enter
pop
add
sbb
or
sub
repz
xor
sbb
mov
and
sar
inc
mov
out
push
imull
xor
cs
iret
sub
sti
aam
pop
pushf
es
add
mov
fcmovne
xchg
rclb
jmp
cmp
ja
push
push
cmp
cmpl
mov
xor
push
pop
pop
inc
inc
adc
nop
popa
mov
pushf
pushf
notb
push
icebp
loope
adc
sbb
jno
lret
mov
inc
insl
push
rclb
xor
loope
movsb
dec
cmpsl
inc
push
pop
push
gs
sbb
inc
repnz
push
dec
test
pop
xbegin
test
sub
jecxz
adc
or
adc
xor
cs
fcomps
cmp
xor
or
imul
test
inc
ljmp
xlat
sub
sub
add
pop
xchg
and
or
or
pop
inc
and
ds
sbb
dec
mov
inc
adc
lret
push
xchg
dec
add
cmp
push
push
and
and
loopw
add
lret
push
mov
dec
movsl
push
ljmp
pop
add
xor
sub
jno
xchg
stc
xchg
not
or
sbb
mov
mov
daa
aad
enter
adc
loope
push
dec
js
xchg
pop
sbb
xchg
dec
jo
sub
mov
mov
sbb
loopne,pn
or
xorb
xchg
or
push
das
sbb
push
dec
stos
sbb
js
mov
mov
scas
int3
je
and
aam
or
xchg
lock
loop
push
out
shrb
lods
dec
cltd
in
test
pop
mov
add
add
xchg
das
dec
sbb
lahf
push
pop
insb
fisttpl
cwtl
push
push
dec
cmp
add
add
movsb
loopne
adc
add
outsl
jecxz
pop
in
xchg
xor
sub
rol
mov
mov
arpl
insl
data16
cmp
adc
inc
adc
inc
pop
mov
aaa
sub
add
scas
add
movsb
xor
bound
push
or
mov
movsl
cmpsl
cmp
or
js
outsb
sbb
cmp
inc
xor
mov
add
or
cwtl
sub
xor
cld
negb
movsb
movb
test
sub
sbb
xlat
cmp
inc
adc
and
test
and
pop
ljmp
mov
out
dec
aam
fisubrs
mov
and
movsl
idivl
inc
and
pop
adc
and
push
imul
pop
mov
dec
inc
test
mov
jbe
enter
xor
inc
clc
gs
sub
adc
adcb
cmp
mov
idivb
push
xor
test
roll
jl
pop
jno
xchg
scas
out
lock
into
or
pop
incl
push
dec
add
fldt
dec
inc
cs
inc
pop
add
jmp
flds
adc
shlb
scas
pushf
dec
fcmovnu
stc
add
bound
add
xchg
adc
xchg
jb
adc
inc
lahf
or
sub
pop
or
ljmp
inc
push
fcoms
pop
xchg
and
lcall
mov
mov
adc
xor
mov
je
add
mov
pop
push
lods
insl
sub
add
inc
popa
push
push
imull
dec
popa
stos
adc
iret
test
mov
cmp
add
inc
dec
dec
ficomps
lock
or
cmpsl
xor
mov
or
sbb
dec
out
addr16
ss
push
cmp
pop
or
test
andl
xchg
add
mov
xchg
ret
or
shrl
outsl
xor
adc
sbb
int
mov
mov
in
push
pop
sbb
ja
or
inc
out
or
xchg
imul
lcall
and
add
sub
cs
adc
je
add
sarb
jnp
add
or
outsl
jnp
loop
pop
repz
inc
dec
loopne
push
or
aam
shrl
add
gs
or
pusha
mov
in
add
lods
push
push
in
jg
or
imul
pop
add
push
mov
add
fistpll
dec
cmp
aam
mov
xor
dec
cmpl
out
inc
cwtl
jb
sbb
test
add
xchg
mov
xor
imul
pop
jb
inc
lods
jns
lcall
cmc
mov
lods
pushf
mov
or
push
mov
sahf
mov
xchg
sub
push
jmp
test
sbb
dec
jb
adc
pop
mov
mov
out
aam
js
push
ret
and
pop
frstor
inc
int3
mulb
mov
ret
and
dec
pop
cmp
adc
and
pop
adc
leave
jmp
mov
or
or
mov
adcb
mov
pop
pushl
pop
mov
es
jno
jne
dec
ss
mov
xchg
adc
imul
push
jno
add
ja
cmp
jnp
xorb
mov
test
nop
inc
dec
mov
dec
or
daa
push
shrb
sub
jp
lahf
mov
mov
cli
jbe
xchg
or
lret
ds
loopne
push
push
mov
pop
enter
jne
shll
xor
inc
xchg
push
xor
sbb
push
sub
mov
and
mov
fildl
cmp
pop
neg
dec
mov
pop
sbb
or
pop
mov
mov
call
or
in
fmuls
pop
sbb
je
imul
add
mov
lock
adc
cmpl
and
ret
outsb
ret
or
or
pop
fbstp
mov
add
cmp
stos
cld
cmpsb
rorb
arpl
jne
stos
popa
test
jbe
or
imul
fcomip
and
push
je
adc
inc
je
arpl
xor
out
imul
xchg
fs
lods
rorb
pop
and
pop
jl
mov
push
push
pop
sub
cmp
inc
sub
dec
lods
aaa
lds
mov
mov
addb
cs
xchg
push
jl
xor
sbb
pusha
cmpb
mov
enter
sbb
push
mov
insb
int
push
aas
dec
add
adc
push
dec
scas
add
add
pop
aas
mov
inc
insb
add
and
rorl
add
adcl
add
pop
mov
xor
push
push
cmp
bound
cmpsl
inc
decb
push
or
pusha
and
pop
and
jg
pop
adc
mov
push
aam
mov
movsl
lods
inc
pusha
inc
movsb
push
mov
adc
mov
mov
xchg
lods
adc
dec
insb
dec
aas
pop
das
push
arpl
movl
or
inc
movntps
push
xchg
je
xor
mov
mov
inc
test
daa
popf
push
incl
or
dec
insl
xchg
lahf
aas
cmp
xchg
aas
aaa
ret
inc
xchg
push
mov
sub
leave
or
dec
adc
subb
or
mov
imul
mov
sub
jp
pop
pop
inc
repz
mov
pop
fwait
adc
inc
cmp
add
inc
xor
add
and
daa
ret
popa
fdivl
dec
inc
pop
and
cld
ficoml
fsubrl
je
aas
adc
xchg
and
pop
jne
mov
add
jmp
add
in
adc
mov
lret
jmp
xorl
and
jnp
push
popa
scas
flds
dec
aas
faddl
or
sbb
add
and
xchg
outsl
rcr
xchg
mov
inc
cmp
mov
xor
test
mov
inc
jl
stos
ret
push
les
pop
or
mov
rorb
inc
sub
addb
sbb
rclb
cmp
and
add
or
mov
cmp
lods
add
push
clc
les
adc
mov
nop
fmull
cmpsl
push
mov
dec
sub
push
loop
fisttpl
lret
lret
call
rclb
sub
les
sbbl
and
add
pop
cmp
inc
sub
mov
addb
adc
popf
lea
cmp
imul
and
sbb
fcoms
popf
xchg
push
sbb
movsl
sbb
bound
dec
inc
addb
sbbl
ret
cs
loop
dec
or
test
add
aas
idivb
mov
sub
inc
inc
repnz
dec
in
rorb
xor
add
and
add
push
bound
cmp
add
sub
xchg
mov
shll
adc
or
and
pop
pop
xor
dec
inc
sbb
pop
leave
notb
add
outsl
push
enter
add
rorl
dec
gs
hlt
mov
add
xchg
pushf
in
dec
clc
inc
cmpsb
jbe
push
clc
in
push
in
cld
mov
das
loopne
add
lret
cmpb
adc
inc
daa
pop
ret
les
lock
or
subl
dec
push
dec
lods
push
lret
cwtl
jne
mov
adc
jmp
add
sahf
xor
stos
out
and
js
loop
movb
cs
cmpb
mov
repnz
add
sub
sub
je
inc
xor
bound
jmp
add
insb
push
lcall
aam
fmull
in
push
fsubs
and
add
mov
or
popa
scas
mov
jmp
cmpsl
mov
and
cmc
ret
jo
cmp
inc
fmuls
xor
pop
inc
xchg
lods
jmp
addl
add
adc
les
push
sbb
shrl
outsb
sahf
push
sub
faddl
pop
movsl
data16
mov
pusha
add
rcl
enter
gs
ror
rolb
xor
inc
jno
popf
xlat
sub
or
inc
dec
les
mov
sub
fsubrs
inc
jp
in
mov
cmpl
or
lea
lods
and
cli
cmp
lock
push
ret
cli
pop
ja
cld
mov
push
inc
adc
mov
jmp
cmp
inc
jmp
sub
sub
pop
rorb
or
inc
sub
jmp
stos
xchg
fldt
or
rcl
es
movsb
neg
push
xchg
addr16
incl
push
xchg
pop
adc
fbstp
and
in
xor
test
pop
inc
adcl
sub
inc
jo
pop
sbb
outsb
pop
pop
dec
repnz
addr16
adc
dec
dec
adc
pop
push
xchg
push
pop
xchg
jl
shlb
gs
scas
shll
jne
inc
jb
xor
add
je
fimull
rcrl
xor
or
in
shlb
hlt
andl
push
jno,pn
ret
mull
xchg
fs
push
dec
or
sahf
call
push
push
xor
subb
push
inc
and
push
outsb
pushf
movhps
mov
ficoml
dec
and
xor
mov
int
fmull
or
sub
bound
movsb
cmpsl
xor
mov
and
aaa
push
add
std
add
loopne
dec
enter
or
dec
in
popa
push
xor
femms
out
xor
aas
adc
sub
lret
rclb
mov
lds
mov
or
add
jno
daa
les
dec
lods
addl
add
add
fldl
push
dec
movsb
iret
fildll
faddp
pop
movl
cmp
push
enter
push
ficoml
fildl
fisubrl
adc
add
xchg
pop
sarl
dec
sbb
fldcw
leave
sbb
or
push
xchg
xchg
outsb
xchg
int
cmpsb
push
fiadds
jnp
divl
fisubrs
xchg
sbb
fistps
fldl
fdivl
and
leave
adc
or
cltd
jp
inc
dec
inc
je
mov
fs
loop
loopne
rcl
pop
sbb
push
sbb
jmp
push
ret
dec
pop
push
inc
xor
aam
jno
mov
js
inc
mov
addl
dec
cli
add
sub
inc
inc
mov
icebp
sahf
das
div
xchg
mov
fs
jbe
sub
fmulp
pop
dec
loopne
bound
mov
fmull
inc
fcmovbe
dec
dec
cld
fcom
in
add
aam
xlat
dec
cli
xor
sub
push
leave
cmp
int3
enter
imul
lcall
xchg
iret
jb
hlt
dec
mov
imul
adcl
xchg
aam
dec
aam
shlb
or
add
mov
xchg
shlb
shl
out
lret
add
or
or
popa
aas
dec
add
or
popl
lcall
test
jmp
gs
imul
jo
lds
add
add
ja
jns
jnp
fcoml
lock
inc
test
and
pop
sub
jl
sub
pop
jnp
jge
or
inc
jg
outsl
test
pop
dec
sbb
and
adc
xor
and
adc
adc
int3
add
push
or
adc
filds
jb
ficoml
int3
cmp
cmpsb
in
jg
adc
inc
and
lea
sub
inc
cvttps2pi
cld
pop
mov
cmp
jge
mov
jle
pop
loope
xchg
repnz
inc
lods
cltd
shlb
loop
sub
jmp
insb
mov
and
ficompl
lcall
xlat
into
enter
xchg
aaa
nop
sbbl
push
cmp
cmp
pop
push
push
mov
dec
mov
jmp
or
int
mov
mov
es
test
adc
sub
dec
cmc
mov
or
inc
sub
int
outsb
push
sbb
push
dec
inc
fisttpl
into
pop
aas
das
pusha
enter
mul
pop
andb
push
jecxz
mov
or
mov
lds
jbe
jge
divl
std
jb
and
sahf
aad
or
js
fcmovnu
mov
in
cmp
sahf
movsb
sub
inc
pop
sbb
mov
cmp
xchg
fcomp
mov
sbb
les
test
bound
pop
mov
in
pop
ss
and
ret
pop
or
pusha
mov
in
mov
xchg
loopne
rclb
push
sbb
mov
xor
dec
mov
lods
xchg
test
pop
jg
pop
in
in
rclb
sbb
shrl
movb
jb
iret
mov
mov
sbb
sbb
lret
cmpsb
mov
lods
xor
shlb
lret
add
adc
cmp
movsb
xchg
aaa
xor
fidivrs
nop
pop
add
loope
cmp
pop
adc
mov
ret
movnti
jns
inc
push
cmp
cmp
outsl
in
test
add
adc
popf
cmp
mov
push
push
int3
dec
pop
mov
outsl
sub
ret
jnp
orb
jmp
scas
or
and
push
sub
cmp
add
ss
cmpxchg
cmp
fcompl
sbb
jne
sbb
or
sub
je
mov
mov
sbb
jge
je
mov
sbb
or
mov
rcrb
jne
cs
jo
adc
mov
cmp
add
pop
sbb
or
aam
adc
aam
adc
add
mov
es
rorl
dec
adc
sti
lea
ja
das
or
in
movsb
mov
ret
add
imul
shlb
mov
adc
xor
subb
inc
pop
and
es
or
shl
sbb
cmp
jne
add
jo
addr16
inc
xchg
clc
jmp
mov
cmc
push
js,pt
sub
push
dec
cltd
pop
dec
push
xchg
mov
xor
xor
adc
or
test
xchg
pop
icebp
pop
mov
jge
push
and
fbld
lock
insl
and
in
and
repnz
aad
sub
sub
adc
add
cmp
push
inc
mov
inc
insl
jb
push
sahf
or
adc
add
les
movsb
jmp
add
in
mov
enter
mov
mov
rclb
mov
sbb
call
xchg
inc
mov
ret
aad
mov
cld
and
pop
mov
mov
arpl
test
mov
inc
enter
or
pcmpgtw
sbb
fwait
dec
push
xchg
test
cmpl
pop
jns
xchg
and
add
es
pop
pop
je
mov
push
cmp
mov
and
movsl
out
mov
cmp
cwtl
mov
std
sbb
sbb
and
ret
hlt
mov
inc
inc
xchg
test
sub
and
fmuls
xlat
shrb
push
je
pop
sbb
pop
test
aaa
sub
add
dec
arpl
pop
xlat
xchg
push
stos
mov
jecxz
cmp
or
nop
loope
add
shll
outsl
cli
push
jecxz
loopne
or
pop
leave
xlat
jo
hlt
xlat
imul
sbb
sub
or
mov
popa
pusha
es
ss
dec
mov
test
adc
inc
add
hlt
mov
sub
cmp
loop
inc
or
mov
dec
lea
mov
inc
xchg
stos
inc
and
repnz
xchg
dec
adc
cmp
mov
popa
inc
dec
ret
int3
add
sub
push
jge
cmpsl
daa
into
mov
leave
pop
shrl
cmp
dec
jno
bound
sbbl
faddl
repnz
jae
adc
je
sub
sbb
jae
and
sub
pushf
pop
enter
cwtl
pusha
nop
push
mov
jae
iret
adcl
xchg
sbbb
js
repnz
jae
mov
cmp
push
enter
loopne
cmpl
fs
iret
pop
clc
push
fldl
add
dec
adc
inc
inc
sub
jns
in
cmp
out
sahf
cmp
xor
in
xor
dec
mov
inc
sahf
add
cmp
notl
cmc
push
mov
cmp
mov
dec
hlt
fimuls
daa
jge
mov
jp
fcmove
inc
mov
stc
mov
test
sub
and
cmp
mov
inc
pop
add
add
mov
cmp
add
jae
lock
sbbb
push
inc
dec
outsl
arpl
cmp
sbb
dec
jae
loop
sub
testb
jae
imul
pop
enterw
sbb
add
push
push
mov
jnp
jne
lahf
adc
fiadds
push
popa
cs
mov
lock
sahf
das
leave
clc
mov
gs
mov
stos
pop
outsl
pushw
in
fistps
test
pop
popa
fs
adc
xor
insb
ss
pop
mov
push
pop
mov
jbe
dec
insl
push
sub
push
fcmovu
push
pop
push
out
jae
jne
push
sub
sahf
cmp
push
sti
int
jns
pop
push
mov
mov
jo
xchg
and
inc
cmpb
gs
mov
into
and
sbb
lcall
adc
mov
dec
inc
sbb
push
loopne
repz
mov
fiadds
lret
jge
insl
sbb
sbb
push
enter
popf
sbb
xor
les
rorl
pop
ja
dec
imul
or
xor
outsl
adc
push
add
sub
jno
outsl
xor
add
jns
mov
xlat
push
add
bound
lcall
xor
adc
pop
add
insl
adcl
in
pop
push
popa
outsl
cs
outsl
outsb
inc
mov
xchg
data16
bound
jne
addr16
xlat
mov
imul
mov
jg
or
inc
clc
gs
jne
push
pop
dec
jbe
enter
mov
jo
pop
loope
sub
in
push
pop
mov
dec
int
xchg
test
adc
adcl
sbb
sbb
and
cmp
add
bound
xchg
movb
add
cmp
jbe
add
sub
fs
and
arpl
dec
mov
xorl
inc
rcl
dec
aaa
dec
adc
in
push
add
or
nop
inc
add
pop
rcrl
mov
bound
adc
mov
mov
in
pusha
add
pusha
pop
aaa
push
pushf
add
xchg
shl
jmp
clc
mov
or
dec
ffreep
out
adc
add
dec
xchg
xchg
fs
sahf
out
mov
aad
inc
mov
testl
rolb
wbinvd
js
cs
sub
shlb
addr16
insb
cmp
pusha
mov
scas
jg
dec
add
add
test
add
test
add
and
inc
pop
inc
subl
addl
or
jns
push
and
cmp
xorb
jmp
in
jne
or
pop
roll
mov
test
or
xchg
pop
inc
jbe
push
call
jge
xchg
roll
mov
or
je
xor
nop
aaa
enter
pop
or
sahf
sbb
xchg
fs
es
add
sub
dec
inc
jnp
xchg
cmc
cmpl
sub
push
push
fisubrs
push
jo
mov
orb
addr16
mov
sub
movsb
sbb
mov
add
sub
dec
cmp
sbb
arpl
movsb
jne
das
mov
pop
fdivrs
cmp
pushf
iret
push
fmulp
lock
sahf
in
mov
pusha
pop
sbb
aam
loopne
xor
nop
rcrb
pop
xlat
push
add
stos
and
in
packssdw
jbe
sbb
and
jbe
jns
sub
in
enter
adc
jns
xor
mov
cmpsb
cwtl
loop
roll
ja
enter
xchg
pop
enter
mov
repz
les
or
push
pop
inc
aaa
pop
shl
adc
or
xchg
mov
mov
inc
and
jns,pn
rolb
loopne
lret
mov
lods
cmp
aad
leave
repnz
mov
inc
mov
mov
push
imul
iret
pusha
aam
ljmp
mov
add
bound
jp
je
lahf
cmp
int
xor
dec
add
repnz
push
push
push
dec
xor
xor
jg
xor
inc
add
das
cmp
enter
pop
lret
int3
adc
inc
test
mov
lea
add
push
popl
cli
add
mov
sti
lods
mov
call
or
in
dec
lea
mov
ds
inc
inc
mov
rolb
dec
dec
flds
or
and
mov
dec
pop
sbb
insl
add
push
rclb
imul
mov
shr
jg
addr16
adc
adc
pop
push
or
push
pop
outsb
shlb
iret
mov
sahf
mov
cmp
test
adc
inc
adc
add
mov
insb
pop
adc
insl
adc
add
xor
adc
andl
call
andl
daa
and
ret
ljmp
aas
and
les
push
mov
or
pop
inc
stos
inc
and
cmp
and
sub
mov
pop
pop
sarb
cs
cmpb
jne
sub
pop
decb
mov
sbb
or
add
loope
adc
xchg
add
lcall
dec
popa
imul
lea
inc
inc
mov
xchg
inc
cmpsl
inc
dec
enter
jmp
loope
xor
and
add
idivl
mov
add
mov
sbb
loopne
int
aam
imul
shl
xchg
xchg
jne
shll
and
es
sbb
adc
mov
pop
adc
adc
xor
into
pusha
leave
rcll
test
outsl
push
in
or
addl
inc
imul
addr16
call
movsb
and
and
push
test
dec
xchg
xchg
cmpsb
cmp
adc
jecxz
lcall
clc
push
xchg
jb
and
mov
mov
and
addb
and
or
cwtl
mov
mov
mov
icebp
add
xor
and
xor
dec
sbb
pop
cmp
popf
lock
add
out
dec
cli
popa
js
and
xlat
jecxz
mov
hlt
adc
imul
sub
push
xchg
push
lods
addl
sbb
aas
loop
push
pushf
mov
mov
inc
repnz
jnp
in
push
into
enter
lcall
and
dec
xchg
in
add
jae
mulb
mov
xchg
popa
pop
rcrb
mov
fildl
adc
ljmp
push
mov
jecxz
sbb
pop
mov
mov
mov
xor
sbb
push
mov
rolb
rorb
xor
scas
and
out
cs
inc
mov
shr
mov
jmp
jno
add
xor
in
pop
mov
add
fs
lcall
and
push
and
push
punpckhwd
push
shrb
mov
test
dec
add
push
and
jle
or
mov
mov
mov
pushl
xor
jle
std
sbb
add
es
add
out
xchg
loop
int3
sbb
inc
inc
test
nop
scas
repnz
mov
out
loope
scas
push
add
call
jl
cmpsl
cld
and
pop
lds
addr16
bound
xor
add
push
dec
dec
and
daa
adc
lock
lea
and
xor
push
adc
adc
out
xchg
inc
xchg
inc
xchg
aaa
hlt
hlt
sub
enter
lock
pop
cld
mov
icebp
lock
inc
cwtl
loopne
lret
ret
or
cmp
mov
push
and
es
jp
ret
outsl
repnz
outsl
adcb
popf
clc
dec
jl
adc
pop
or
add
add
add
push
sbb
stc
push
push
lock
sti
or
or
popa
bound
mov
call
ds
loop
jecxz
sub
jne
movsl
push
dec
test
subl
hlt
loopne
lcall
jg
add
mov
and
mov
cltd
mov
xor
fisubrs
mov
xchg
dec
and
adc
sub
cwtl
xor
sbb
and
shl
adc
jmp
iret
pop
lea
pop
mov
sub
jne
dec
jne
add
and
inc
mov
in
inc
cmp
adc
cld
mov
aas
insb
jmp
jp
cmp
insb
xchg
mov
aaa
cld
cld
hlt
sub
cmc
outsb
xor
push
aas
jl
cmp
sbb
rolb
ror
in
mov
clc
inc
xor
enter
lock
inc
push
mov
sbb
hlt
or
sbb
or
adc
cmpl
xor
mov
mov
add
cmc
cmp
xchg
dec
xor
jne
mov
pop
pop
pop
and
xchg
add
mov
adc
pop
int3
lods
xchg
les
cmp
pop
faddp
sbb
xchg
cmc
cwtl
sbb
inc
add
ficompl
insb
sub
mov
aaa
xor
mov
inc
mov
movsb
aas
daa
movzwl
mov
xrelease
mov
movl
mov
mov
lret
adc
subb
aaa
inc
sub
cmp
xchg
xchg
cwtl
aam
shrb
in
dec
pop
jnp
xchg
push
lods
cmp
mov
lods
add
add
jmp
push
push
lret
add
rorb
mov
adc
add
pop
pop
or
jmp
lods
jae
mov
decb
adc
lods
jecxz
mov
imul
mov
outsl
push
inc
add
add
sub
push
std
add
pop
lret
int
push
lea
je
and
gs
loopne
je
push
pop
sbb
cwtl
outsl
jmp
mov
push
push
mov
add
xchg
mov
enter
testb
or
xor
insb
faddl
pusha
jne
pop
xchg
jns
adc
dec
or
test
xor
pop
push
adc
mull
xchg
dec
dec
clc
adc
andb
or
push
pop
cwtl
or
xchg
aam
sbb
or
inc
push
rcll
and
mov
bound
dec
adc
cltd
push
or
leave
mov
inc
adc
inc
dec
ret
je
testb
inc
jg
xchg
mov
aaa
xchg
xchg
mov
or
dec
mull
sub
inc
or
sub
mov
insl
cs
push
jge
push
pop
mov
imul
cmp
cltd
or
adc
xchg
or
sub
push
inc
dec
int3
adc
mov
dec
sahf
pop
popw
jb
sbb
pop
popa
dec
inc
add
push
lods
dec
mov
subl
int
jo
jecxz
js
sub
pop
add
and
loope
add
mov
cli
or
packuswb
jnp
mov
sub
or
repz
jo
inc
in
or
add
fiaddl
mov
inc
aaa
add
push
push
add
pop
icebp
mov
dec
popa
sbbl
sbb
cld
mov
daa
sti
dec
or
sbb
jb
bound
pop
mov
pop
inc
ret
lret
inc
popa
imul
lds
jo
inc
or
push
xor
cmp
xlat
mov
or
and
mov
push
push
pop
int
xor
out
mov
push
dec
jae
in
push
and
pop
inc
insb
or
jbe
adc
push
data16
psubw
xor
pop
xor
mov
dec
pop
paddb
or
ljmp
push
hlt
or
lea
and
sti
idiv
adc
ret
mov
xlat
std
push
sbb
fimull
incb
push
rol
das
mov
push
sbb
cs
pop
sbb
dec
jae
and
adc
test
pop
pop
imul
mov
push
sbb
aaa
sbb
les
pop
push
in
out
mov
jl
sbb
or
mov
lods
push
je
aas
and
insb
mov
movsb
fsubrp
sub
sub
fldt
push
mov
cmp
xor
subb
das
mov
xor
adc
xchg
jb
outsl
daa
test
sbb
leave
push
push
test
rolb
cmp
xor
jbe
sub
call
mov
push
jo
xchg
sbb
push
pop
clc
add
or
jae
mov
or
push
daa
add
rcrl
ss
push
addr16
fs
xchg
out
js
add
adc
inc
popa
pop
ja
fs
addb
push
aaa
push
push
or
inc
push
pop
sbb
and
int3
es
dec
add
cmp
and
push
add
push
sbb
or
scas
orb
lds
loopne
or
lods
push
add
or
cmpl
leave
adc
popa
and
or
pusha
outsl
jne
movsb
sbb
aaa
test
orl
jge
mov
jne
imul
dec
test
nop
xor
and
out
test
xchg
lods
inc
lods
mov
dec
leave
bound
test
mov
loopne
push
cwtl
or
or
clc
add
or
repz
rorb
push
dec
sbbb
push
lcall
cmp
push
mov
and
sarb
sub
addr16
add
dec
add
aaa
add
and
ret
adc
rcrl
jmp
add
pop
push
add
pop
daa
inc
xlat
add
outsb
clc
add
mov
imul
push
sbb
fsub
in
comiss
cmp
mov
push
lock
adc
sbb
imul
pop
sub
add
sbb
pop
sbb
dec
sub
imul
jns
les
popw
and
inc
push
xchg
bound
xchg
int3
adc
inc
push
jae
dec
shrb
enter
push
stos
xchg
adc
jae
add
aad
and
pop
dec
push
and
pop
add
pushf
aad
push
test
mov
es
push
test
sbb
out
adc
add
mov
add
daa
out
add
or
xchg
sbb
dec
or
xchg
push
dec
je
daa
push
hlt
or
in
shlb
sbb
dec
mov
push
xor
push
dec
push
dec
or
mov
lahf
add
clts
sbb
adc
and
push
push
inc
push
int
pop
ret
or
pop
sub
mov
push
xlat
ret
mov
or
hlt
mov
insb
add
pushf
inc
push
lahf
sbb
imul
xor
xor
sbb
mov
enter
push
in
xor
int
and
push
out
push
addr16
push
push
bound
jmp
xchg
jae
xlat
push
jo
enter
in
je
bound
mov
push
aam
push
in
les
mov
or
lcall
cmp
push
imul
xchg
cmpsl
adc
nopl
jns
andb
pop
adc
xchg
push
push
inc
jno
inc
nop
inc
ja
and
cmpsl
or
xchg
jbe
aam
inc
pusha
and
jno
and
adc
loope
jecxz
jns
imul
xor
pop
sbb
cmp
jo
or
push
inc
sbb
or
push
add
imul
sbb
jae
xor
jnp
inc
cmp
lods
jo
and
and
or
and
xor
push
xchg
adc
or
ja
inc
repnz
repnz
mov
out
push
inc
pop
mov
pop
or
adc
adc
bound
push
jb
lds
push
xchg
push
xchg
arpl
inc
mov
dec
push
dec
inc
inc
imul
mov
jns
cmp
inc
loopne
dec
push
xchg
and
dec
orps
xchg
inc
and
jns
cmp
inc
adc
cmp
xchg
dec
sbb
pop
push
pop
and
orl
mov
adc
scas
inc
xor
sbb
mov
pusha
mov
jg
popf
nop
xchg
push
test
fcomps
daa
or
push
jo
shll
subl
push
outsb
inc
pop
push
sbb
in
enter
xor
mov
push
or
add
add
nop
and
mov
test
dec
mov
add
sub
or
insb
stos
mov
dec
aad
adc
out
jno
sub
imul
sbb
and
xor
mov
and
add
push
andb
iret
add
and
bound
or
dec
push
pushf
mov
ja
repnz
adcb
insb
stc
ss
sbb
inc
jo
mov
shlb
inc
frstor
js
add
in
or
cmovns
mov
jl
in
mov
xor
test
or
xchg
out
in
mov
mov
bound
mov
inc
mov
jne
cwtl
cmp
inc
sbb
pop
mov
mov
lods
pop
test
mov
pop
xchg
movsb
xchg
int3
pop
sbb
in
inc
or
mov
das
fcmovnb
jo
subl
lahf
mov
mov
or
out
in
mov
or
xchg
pop
ficoml
push
push
mov
fimuls
sbb
shlb
adc
add
imul
data16
fmuls
mov
dec
add
xchg
arpl
daa
sub
dec
orl
jns
lea
dec
add
add
dec
pop
and
mov
hlt
mulb
pop
in
push
stos
jle
add
jmp
enter
je
arpl
adc
add
add
cmpb
je
push
pop
sub
add
adc
and
and
pop
xor
xor
mov
push
add
or
xor
decl
cmpl
pushf
cmpsb
or
rolb
nop
xchg
inc
pop
mov
jecxz
xlat
xchg
xchg
imul
cmpl
dec
or
imul
mov
adc
or
inc
mov
sbb
test
outsl
in
mov
or
add
sub
pop
xchg
lock
test
fistl
jno
pop
icebp
add
or
sub
push
mov
sar
push
je
mov
insb
adc
and
lcall
adc
enter
inc
lock
pop
adc
loopne
push
rcl
xchg
cwtl
movl
add
das
adc
cmp
add
add
or
jg
mov
pusha
fstps
hlt
test
dec
push
and
aaa
push
inc
leave
add
clc
fadd
adcl
lods
sbb
cmpl
xchg
sbb
mov
xchg
mov
xor
aaa
push
subl
cmpsl
inc
add
sub
or
into
inc
adc
out
jl
mov
mov
vminss
flds
lea
sar
jo
sbb
pop
call
mov
pop
xchg
mov
push
push
sbb
mov
aaa
sub
push
jbe
add
pop
adc
cmpl
sbbb
ret
adc
add
aam
pusha
and
popa
pusha
pop
subl
and
mov
lds
add
add
fsubrs
sub
mov
addb
pop
lds
jmp
adc
dec
arpl
out
and
mov
fisubs
dec
les
adc
push
mov
aam
lea
mov
clc
ja
adc
or
adc
adc
subl
sub
mov
add
push
push
xchg
adc
xchg
test
lods
add
movsb
or
xor
adc
nop
loop
cmpsl
je
mov
jmp
push
leave
adc
push
test
and
loopne
pop
xor
sub
pop
add
add
dec
or
jge
add
aad
inc
sbb
pop
lea
sub
mov
adc
int
movl
nop
rcll
mov
jg
sbb
in
hlt
fsubrs
add
bound
adc
push
push
mov
loope
add
pop
ja
insb
mov
aas
sub
jbe
inc
fs
popa
mov
pusha
orb
xor
mov
add
pop
or
sbb
sahf
ffree
shll
mov
ljmp
jne
mov
adc
jno
sbb
add
or
pop
daa
mov
or
cmp
arpl
fnsave
push
cwtl
mov
fcompl
sub
bound
inc
outsb
enter
call
call
dec
xor
movsb
mov
xor
addl
jo
fimuls
loopne
sub
ds
add
mov
pop
hlt
jl
divl
add
mov
and
sbb
ret
cmp
arpl
arpl
les
das
jp
cmpb
jp
test
cltd
testl
jl
cmp
sti
adc
add
add
inc
cs
pusha
push
mov
inc
das
sbb
call
sub
ss
adc
icebp
and
popf
push
movsl
inc
lods
lds
adc
lea
and
rolb
dec
repnz
pop
enter
out
sbb
push
or
sub
xchg
in
adc
or
pop
fisttps
add
mov
mov
leave
jne
mov
jecxz
outsb
sbb
cld
and
and
push
mov
cltd
in
mov
or
aas
xor
xor
sbb
addr16
cmp
adc
push
and
pusha
add
or
mov
stos
enter
pop
sub
arpl
pop
ss
sub
lahf
cmpl
sti
je
add
fdivrs
in
xchg
push
fisubrl
sbb
pop
cmpl
add
xchg
aad
mov
add
shl
incl
dec
test
mov
add
addl
scas
add
enter
pop
call
inc
mov
popa
fwait
outsl
add
sbb
imul
or
inc
rcrl
add
ds
jle
cmpsb
add
in
push
rcll
into
or
adc
lea
out
jo
pop
cmp
fdivl
xor
inc
sar
ljmp
adc
pop
rorb
pop
pop
es
jbe
xor
pop
sbb
fsts
mov
hlt
sub
iret
cmpsb
subl
test
jno
insl
fistl
add
ss
xor
in
or
pop
in
sub
add
adc
pop
sbb
cmp
lea
push
mov
xchg
or
add
adc
sbb
shrb
stos
xor
adc
dec
jecxz
dec
or
inc
test
xor
pop
test
and
push
or
insb
push
mov
pop
pop
pop
inc
push
adc
rclb
add
push
add
cmp
leave
dec
repnz
aad
inc
mov
xorl
das
adc
inc
mov
mov
mov
mov
dec
aam
or
inc
jns,pn
dec
inc
mov
addl
or
fstpt
gs
mov
dec
lret
fwait
xchg
dec
mov
pusha
lahf
loope
aas
sbb
sbb
dec
sbb
push
adc
shlb
jmp
stos
aaa
xor
call
rcll
popa
mov
or
add
mov
or
mov
mov
andl
add
std
popa
add
das
adc
and
and
dec
movb
xor
inc
pop
xor
mov
pop
pop
mov
int
pop
pop
cwtl
shll
lock
dec
lea
les
push
dec
out
or
and
add
or
rorb
faddl
cld
pop
mov
lret
notb
je
adc
sub
orb
inc
lcallw
sub
add
sbb
jl
pushf
or
arpl
sub
jbe
pop
pop
jo
and
dec
lock
and
xchg
je
icebp
xor
loopne
jmp
loop
lcall
popa
sbb
filds
xchg
loopne
aaa
adc
add
pop
cmpsl
dec
cmpb
or
and
mov
inc
fmull
pop
sbb
or
adc
mov
shlb
or
sub
mov
repnz
inc
andl
pop
and
dec
push
or
mov
and
and
sbb
das
and
push
inc
fidivrl
cmp
cmpl
pop
push
inc
jg
pop
insl
ret
icebp
aam
sub
or
adc
jmp
daa
je
outsl
and
daa
lret
cmp
and
test
mov
jne
xchg
xchg
and
imul
inc
lcall
enter
jle
insl
or
and
insl
and
or
nop
and
jl
or
fcoms
inc
je
mov
cmp
and
xchg
pusha
xchg
daa
dec
dec
push
ja
test
dec
enter
mov
push
pop
pusha
les
mov
outsb
push
cmp
adc
add
pop
jp
adc
sub
in
xchg
andl
adc
jl
test
inc
push
pop
or
mov
sub
mov
xchg
test
and
fwait
inc
and
mov
es
xor
loopnew
in
rol
hlt
lret
daa
xor
and
jno
mov
and
jo
cmp
xor
inc
xchg
and
add
xlat
lods
push
hlt
mov
pushl
and
jne
cmpb
adc
andb
push
sbb
fldt
icebp
dec
xor
frstor
pop
pop
push
fwait
mov
sub
jns
int3
insl
dec
aas
xchg
imul
cmp
mov
insb
and
aas
test
dec
push
and
inc
loop
scas
and
and
jo
shlb
push
push
mov
push
mov
xchg
cmp
je
dec
xchg
das
dec
dec
loope
rorl
nop
xchg
daa
cmp
xor
and
add
js
sbb
inc
lods
sbb
pop
jge
mov
xchg
imul
lcall
int
push
lods
cmp
mov
outsl
je
imul
stos
push
test
and
outsb
ret
aam
inc
lcall
mov
adc
shrl
adc
xor
push
repz
ljmp
jnp
and
add
mov
xchg
inc
xchg
imul
inc
mov
xor
add
jo
xlat
clc
inc
or
and
nop
and
cmpsl
and
xor
push
fldl
dec
lods
popa
repnz
or
inc
pop
sub
jo
sub
cmpb
decl
fimull
mov
jnp
imul
dec
jb
lret
test
out
inc
sarl
cmp
mov
adc
aaa
sub
cltd
subb
enter
into
add
adc
or
pop
pop
into
cmpsl
inc
into
aad
das
sub
sub
dec
mov
fistl
jb
push
lret
mov
pusha
bound
adc
pop
adc
cmp
ret
adc
pop
or
cmp
sub
xchg
aam
or
jbe
shlb
xchg
mov
push
add
jno
daa
loopne
sbb
push
push
inc
sbb
cs
mov
lea
xchg
pop
or
or
adc
xchg
xor
xchg
xchg
movsl
sub
mov
fbld
movsl
inc
push
ror
int
add
daa
pop
pop
mov
push
or
popa
or
sbb
dec
push
cld
test
cmpsb
repz
add
scas
movb
pop
and
ja
cs
adc
outsl
in
and
iret
jb
fimull
arpl
into
cmp
xorb
and
iret
lea
xchg
inc
push
in
das
dec
dec
jecxz
and
dec
cmp
sbb
adc
js
inc
dec
orb
nop
or
mov
or
divl
xchg
mov
sbb
lcall
loope
mov
cltd
inc
inc
lcall
repnz
cmc
out
mov
push
mov
das
push
push
mov
sti
dec
xchg
push
sahf
cmp
mov
pop
cmp
outsb
cmpsl
mov
ficompl
addb
test
adc
lahf
dec
inc
imul
sub
dec
scas
scas
adc
adc
inc
and
movl
rorb
sub
sbb
xor
mov
test
xchg
fnstcw
add
jg
insl
sub
repz
sbb
or
lea
dec
sub
add
sbb
divl
loopne
enter
or
ret
sbb
aad
imul
jb
sub
fwait
cmpsb
xchg
movsl
mov
pop
or
test
push
jmp
dec
shll
sub
rorl
adcb
mov
cmpb
cmpsb
imul
xlat
call
pop
xor
sbb
rcrl
cmp
lods
lods
cmp
xor
push
mov
mov
xor
mov
cmp
inc
cs
and
jne
adc
or
ds
sub
dec
dec
mov
push
push
push
divb
dec
mov
in
add
jb
sbb
jb
inc
jb
jl
inc
jb
inc
int3
hlt
aaa
xchg
and
xchg
adc
pop
cmp
les
cmp
xchg
sbb
xor
je
leave
xchg
sbb
shr
jb
inc
cmp
and
and
jb
js
cmp
jb
lock
cmp
and
xchg
jo
lods
cmp
cld
xchg
sbb
and
sbb
in
testb
imul
pop
fmuls
jb
in
aas
cmp
xor
jb
and
je
adc
outsl
mov
nop
fistps
adc
inc
ret
adc
cmp
out
jb
jo
and
and
loopne
add
push
pusha
fsubl
inc
popa
das
cmp
jae
in
add
cs
pop
xchg
stos
mov
insl
imul
imul
jnp
inc
jb
mov
popf
fxam
iret
adc
movsl
dec
push
mov
jb
dec
fdivrs
xor
mull
jns
outsl
jo
fldt
mov
and
xchg
outsl
jne
jg
ja
cmp
std
and
in
adc
or
sbb
add
ljmp
into
rcrb
outsb
jae
mov
and
inc
sbb
mov
iret
and
jno
imul
out
and
movsb
cmpl
sub
jb
movsl
rol
inc
and
push
in
pusha
addr16
dec
push
outsb
fidivrl
sbb
psubusw
push
cmp
jae
jo
push
cmpsl
adc
rolb
jg
inc
mov
insb
xor
aas
xlat
xchg
pop
shlb
test
cmp
dec
dec
add
lds
ret
loopne
daa
call
pusha
mov
shr
gs
dec
add
les
imul
mov
mov
les
lds
aas
popf
in
mov
xchg
inc
shr
aas
push
and
cmp
sbb
xchg
test
push
mov
aaa
mov
popl
outsl
dec
and
push
xor
add
ret
and
inc
inc
fimuls
add
jo
xchg
test
jecxz
fiaddl
fimull
add
push
psrlw
adc
xor
inc
jae
arpl
mov
adc
insl
sbb
xor
pusha
jne
adc
push
jb
fs
and
jbe
es
data16
push
jge
jge
outsl
and
sbb
orb
sub
jp
cmp
idivl
push
shll
push
sbb
insl
gs
pop
xor
adc
roll
movsb
jb
adc
jae
inc
cltd
popa
fwait
sub
add
dec
mov
push
xchg
or
fs
pop
add
or
jb
mov
xchg
dec
cmp
adc
mov
xor
sbb
push
imul
add
mov
pop
and
adc
subb
inc
and
or
or
add
or
data16
pop
cmp
dec
and
jne
pop
cmp
mov
and
and
and
mov
mov
movl
jb
fsts
fsubrs
aad
pop
sbb
ljmp
sbbb
and
add
push
and
test
clc
inc
push
or
lea
loope
adc
xchg
add
int3
mov
adc
or
outsl
xor
loopne
leave
and
in
scas
orb
lock
cmc
lea
fnstcw
xor
cmp
add
in
lahf
and
ret
xchg
nop
pusha
imul
mov
inc
fstpl
push
hlt
movsl
mov
addr16
add
loopne
test
sbb
mov
jmp
push
mov
pop
call
and
pusha
ret
mulb
dec
mov
imul
inc
push
pop
jb
sub
pop
cwtl
and
orb
or
cmp
xor
into
mulb
push
jg
pushw
jns
in
sbb
shrl
xor
mov
rcr
or
inc
stos
je
les
or
pop
test
lock
mov
cmp
movsb
xchg
lock
mov
mov
pop
loop
push
or
pop
les
xchg
and
push
inc
inc
jecxz
jb
das
add
push
and
jbe
inc
push
mov
in
or
imul
mov
lock
nop
mov
mov
enter
jmp
pop
push
xlat
fdivs
sub
orl
pop
mov
aaa
inc
or
and
mov
pop
addl
mov
lahf
adc
inc
and
stos
push
arpl
lods
or
rolb
filds
fmuls
inc
cs
adcl
sbb
inc
scas
imul
ret
lods
add
inc
dec
cs
imul
cmp
or
cmp
xor
addb
xchg
dec
mov
sub
enter
pop
hlt
in
rcll
addr16
call
nop
mov
mov
andb
add
and
ret
shrb
arpl
je
xchg
and
test
clc
pop
push
call
gs
pusha
mov
call
inc
aad
in
add
jmp
fwait
push
ret
cmp
sub
int3
rcl
push
inc
or
pusha
xor
inc
sbb
aam
pop
sarl
dec
ret
push
sub
enter
es
jl
test
loopne
sub
in
cld
inc
popa
cmpsl
sub
aaa
add
fmuls
sbb
add
adc
cld
pushl
pushl
sub
xchg
jno
inc
out
mov
xor
fcomps
push
xchg
push
sbb
fs
pop
repz
movsb
push
xchg
inc
xchg
ja
lret
test
xchg
push
fcomi
dec
dec
out
call
lret
or
stc
and
addl
out
inc
pop
pusha
inc
les
inc
test
daa
mov
xchg
sarb
les
enter
repnz
cwtl
enter
stos
dec
and
in
adc
sarl
fldl
mov
ret
dec
scas
mov
add
inc
mov
divl
push
pop
jl
xchg
add
repnz
mov
and
mov
pop
add
das
dec
and
and
mov
lahf
testb
push
adc
or
mov
std
outsb
mov
js
adc
mov
rorl
ljmp
jge
add
les
sbb
lahf
sbb
inc
add
xchg
sbb
xor
nop
fisttps
jo
and
loopne
fsubrl
js
push
mov
inc
shrb
or
mov
and
scas
divb
pand
or
mov
in
xchg
and
lcall
mov
or
push
and
lods
decl
out
push
jl
inc
mov
inc
hlt
sbb
mov
add
mov
movb
jmp
stos
push
jl
jno
or
mov
mov
inc
adc
pop
inc
mov
inc
cs
sub
xchg
push
arpl
dec
push
loopne
cmp
add
loopne
outsl
les
sbb
xor
cmp
push
add
fdivrp
push
mov
xchg
lea
cmp
adc
and
adc
enter
dec
and
jne
mov
test
call
dec
sub
push
nop
push
pop
inc
lcall
stos
dec
int
cwtl
sbb
fwait
imul
sarb
andl
test
andl
inc
xchg
pop
mov
or
and
mov
push
ret
test
rclb
into
repz
push
in
cli
cld
outsb
faddl
sbb
push
addb
jno
and
sbb
cmp
lds
push
dec
addr16
nop
cwtl
js
sar
pusha
ror
dec
sub
loopne
popf
sub
dec
das
orb
add
out
dec
je
xor
test
scas
movsl
xchg
mov
dec
adc
ret
sarb
mov
cltd
aas
mov
or
inc
adc
or
out
and
lahf
lea
sbbl
and
flds
adc
mov
lret
dec
addr16
sbbb
stc
mov
push
sarb
pop
sbb
add
cmp
jmp
das
das
dec
shlb
or
sbb
inc
pop
dec
mov
dec
sbb
bound
test
hlt
dec
fisubrl
std
add
jnp
add
fsubrl
ret
shll
xor
sbb
inc
daa
call
es
add
data16
push
and
or
push
sub
outsb
or
retw
insb
sbb
ret
inc
mov
xchg
out
pop
sbb
dec
add
xchg
into
mov
jne
stos
les
aad
fisubs
lea
xor
mov
mov
mov
lret
in
pop
std
xchg
pop
dec
dec
lods
pushl
sbb
cmp
mov
xchg
add
out
clc
in
pusha
push
sbb
frstor
mov
sub
push
shl
fiaddl
adc
push
xor
xchg
add
sbb
ljmp
pop
mov
in
xadd
jno
add
lahf
mov
and
or
call
sbb
push
inc
pop
and
pusha
and
adc
sub
addw
dec
inc
fwait
add
and
scas
lds
xor
pop
add
and
sbb
js
sub
es
inc
cmp
sbb
xchg
cli
and
xlat
das
xlat
arpl
and
mov
add
inc
or
ret
gs
rcll
adc
ret
sub
in
loope
inc
inc
repnz
out
fadd
loop
or
fildl
imul
fsubp
jnp
aas
test
mov
mov
jp
jnp
pop
rorl
dec
bound
pusha
sub
gs
xor
inc
pop
lcall
jbe
lea
xor
jle
int
add
pop
mov
decl
in
and
jb
clc
jmp
fldcw
int3
imul
in
inc
mov
add
aad
push
pop
or
mov
or
inc
jle
jae
mov
rolb
lock
icebp
cs
out
mov
inc
inc
push
dec
jb
jno
into
movsb
pop
ret
mov
push
andb
sbb
out
mov
and
out
and
bound
add
movsb
addr16
int3
or
cmp
mov
pop
add
adc
nop/reserved
mov
xchg
adc
test
daa
xchg
daa
filds
inc
or
inc
dec
inc
push
pop
jns
dec
adc
adc
pop
pusha
fimuls
dec
adc
nopl
orl
and
orl
cmp
sub
enter
xor
enter
pop
pop
test
fs
rcl
mov
xchg
sub
ret
iret
movsl
adc
dec
dec
in
out
mov
or
sub
xchg
xchg
adc
xchg
inc
xchg
inc
and
cmp
xchg
inc
xchg
inc
cmp
inc
inc
inc
inc
xchg
inc
inc
inc
push
pop
fimuls
adc
sub
mov
push
pop
xor
inc
fiaddl
mov
outsl
inc
xor
call
pop
ret
push
dec
das
test
rclb
cmp
insl
jo
xor
cmpb
sbb
add
xchg
push
test
xlat
dec
add
jb
popl
jo
lea
prefetch
sub
pop
dec
movsb
adcb
inc
ss
loope
outsl
loopne
and
cmp
ret
cmp
add
pop
pop
test
pop
outsb
bnd
adc
xor
mov
int3
addb
fidivl
sbbl
add
mov
dec
push
xlat
lcall
push
mov
fsubl
loop
aad
xor
shl
orb
sub
sbb
ja
stos
inc
sub
sub
sarl
pop
xor
jns
idivl
sub
test
pop
cmpsl
insl
insl
fwait
pop
push
pushf
sbb
mov
push
pop
outsl
cmp
mov
push
push
pop
or
ja
daa
add
push
pop
iret
or
jae
data16
dec
in
ror
pop
sbb
add
shrb
sub
sub
pop
popf
mov
push
mov
fidivs
imulb
sbb
or
imul
mov
ror
xor
cmp
xor
add
add
sub
or
outsb
mov
or
cmp
or
out
cmp
clc
push
out
adc
or
add
and
or
jbe
and
push
add
inc
sub
mov
cmp
lea
xor
mov
and
pop
int3
leave
jo
adc
cmp
inc
outsb
and
in
adc
inc
call
dec
adc
sarb
adc
xchg
sub
inc
pop
sub
adc
add
xor
pusha
repnz
add
or
inc
pop
cmp
dec
pop
add
or
outsl
xor
insb
sbb
imul
jo
push
mov
sbb
mov
add
sbb
adc
cmp
push
mov
push
outsl
call
filds
push
cmp
bound
data16
sbb
jb
loopne
push
add
mov
or
mov
mov
cs
inc
adc
mov
and
push
loope
pop
dec
outsl
dec
sub
jb
pop
push
push
sbb
or
cmp
pop
xlat
add
icebp
inc
cmp
lods
pusha
sub
xor
fsts
push
sar
xor
mov
aam
lods
pop
ss
pop
add
sbb
cmp
daa
std
cmpxchg
dec
outsl
jp
insb
insb
popa
das
xor
and
pop
or
cltd
rol
out
cmp
fistl
test
mov
mov
sub
push
or
outsl
push
jo
je
cltd
inc
ja
insb
mov
mov
jne
inc
mov
pop
lods
mov
pushf
das
std
insl
insb
movl
test
repz
pop
mov
mov
js
xor
mov
inc
cwtl
jae
add
nop
aaa
mov
dec
mov
sub
mov
inc
pop
and
jbe
sub
jle
add
or
jmp
dec
push
out
sbb
pusha
add
push
sbb
loope
xor
xchg
inc
cmp
jbe
cmp
clc
add
inc
and
test
xlat
pop
cmc
push
jmp
cmp
unpcklps
test
nop
xorl
sbbl
fwait
cmp
mov
insl
or
inc
fcomps
sub
divb
pop
push
in
xchg
cmp
xor
inc
or
jo
push
int
add
cmp
fdivrp
xchg
or
pusha
in
sub
xchg
mov
dec
mov
or
adc
movsb
push
dec
xorl
flds
push
outsb
sbb
mov
adc
inc
pop
push
dec
in
push
mov
fwait
push
xor
fcom
xor
enter
movsb
mov
pop
xchg
movsl
xchg
push
loopne
push
dec
push
das
les
orb
sbb
mov
lods
cli
outsb
xor
adc
fs
dec
inc
call
sub
jno
es
sub
sbbl
and
jb
sbb
in
sub
and
xor
dec
es
sbb
add
add
cmp
insb
sbb
xor
cmp
dec
sar
xor
mov
divb
inc
and
mov
jns
mov
inc
mov
jge
add
outsb
push
shrb
jns
push
pusha
das
mulb
jmp
movsb
movsb
adc
ret
inc
pop
test
jae
xchg
xchg
and
mov
mov
mov
into
push
pushf
mov
jg
add
sbbl
icebp
ja
cmp
jg
mov
fisubrs
fidivs
sub
jns
jae
cwtl
jmp
lea
mov
add
xchg
cmp
xchg
dec
mov
jbe
rorb
les
xchg
shlb
out
dec
adc
test
mulb
into
arpl
or
inc
push
sub
mov
sbb
push
mov
mov
popa
adc
and
push
and
mov
pop
pop
mov
xchg
je
dec
test
and
mov
stos
xor
leave
and
bound
ret
jo
imul
jo
je
xchg
loopne
mov
fdivl
lods
mov
cmp
add
ret
push
jo
insb
and
pop
xchg
std
mov
pop
inc
inc
repnz
int
push
rcrl
enter
pop
pop
pusha
xchg
fadds
popa
add
sbb
mov
pop
ret
push
test
mov
sbb
adc
fiadds
int3
sti
jns
cmp
xor
aam
push
add
shrl
cmp
jp
push
mov
push
call
add
mov
sbb
and
mov
xorl
jo
cmp
clc
jae
fstpt
pushl
lods
jnp
jns
jb
add
inc
mov
nop
or
and
add
cmp
cmp
push
loopne
adc
add
arpl
inc
jmp
inc
aam
ss
inc
aam
lcall
sarb
lea
xor
xchg
xchg
mov
int
icebp
xchg
cmp
add
stos
hlt
loopne
pop
sbb
sub
jo
mov
sub
jecxz
mov
cmp
adc
dec
in
movlps
shll
shlb
pop
sbb
mov
adc
or
je
mov
mov
push
mov
pop
sti
sahf
adc
xlat
out
pop
mov
in
movsl
xor
fistpll
std
add
movsl
sbb
and
add
and
adc
loope
push
cmp
insb
mov
sbb
rcrl
mov
in
test
jecxz
add
or
loope
movsb
orl
fdivrs
test
adc
sub
and
out
sub
popa
mov
sbb
sbb
pop
push
hlt
mov
or
inc
jne,pn
and
mov
je
adc
or
int3
and
and
push
fdivs
inc
mov
loopne
xor
jo
sbb
and
push
cmp
jmp
cmp
jo
dec
xor
pop
jne
sbb
loop
je
pop
pop
cwtl
sbb
fildll
test
dec
adc
jae
jmp
dec
cmpsb
mov
lret
adc
addr16
mov
cmp
rol
in
stos
insb
loop
cmpsl
pop
mov
in
adc
fildl
jns
xor
adc
add
inc
inc
out
push
dec
test
sbb
adc
test
or
dec
ret
cmp
xor
mov
addl
push
leave
adc
adc
add
lret
mov
xchg
sub
or
cmp
fisttpl
cmpl
xchg
ja
pusha
pushf
lods
sbb
andb
add
popf
lods
test
push
cmp
enter
xor
jmp
dec
fcoms
add
andl
int3
xchg
pop
lods
fildl
shlb
sbb
jb
add
xor
stos
jo
shlb
xor
or
sbbl
push
sub
add
sbb
inc
cmp
and
jp
mov
sub
add
mov
jmp
push
jno
xor
sahf
jl
sbb
lods
cmp
dec
xlat
mov
adcl
inc
and
jb
inc
pushf
loop
and
mov
popa
sub
loop
shll
mov
xor
mov
incl
mov
push
cmp
insl
sub
sbbb
incl
out
mov
cmp
lods
dec
aaa
push
loope
into
lods
adc
xchg
pop
sbb
pop
fdivp
xchg
inc
xchg
mov
bound
jae
cmp
pusha
leave
in
cmp
in
cmp
sbb
or
push
dec
imul
outsl
std
push
sub
es
ficompl
adc
dec
cmp
movl
inc
cmp
mov
mov
mov
mov
movsl
dec
das
sub
pushf
push
or
xchg
pusha
adc
mov
inc
nop
loop
mov
cmp
or
push
pop
push
inc
sub
sub
inc
inc
push
sub
push
lret
popw
dec
push
ret
hlt
dec
dec
inc
inc
mov
dec
pop
pop
sub
mov
popl
inc
shlb
and
mov
xor
inc
inc
inc
loope
bound
or
scas
imul
pop
mov
pop
push
cmp
cmpsb
xor
cmc
sub
mov
pop
movsl
sbb
dec
std
dec
push
mov
xor
push
push
dec
out
xor
insb
imul
jl
sub
or
mov
ret
fdivs
pop
sar
push
jge
add
imul
cltd
popfw
imul
hlt
out
rcll
cmp
fs
in
fsubr
lock
adc
outsb
adc
adc
test
add
push
and
mov
push
jb
mov
sbb
sbb
and
int3
cmp
rcrl
pop
sub
push
cmpsb
cmp
lock
movsb
cli
or
repnz
sub
je
pop
fwait
inc
ret
in
in
lea
lea
je
clc
sbb
sbb
inc
mov
push
icebp
fmuls
pop
fcomps
cmpl
xor
fs
mov
dec
es
inc
sbb
inc
arpl
sub
xlat
scas
fimuls
sbb
pop
loopne
outsb
iret
aaa
xor
jo
add
sbb
je
sbb
jl
cmp
out
sbb
xchg
dec
xor
rcr
and
pop
xchg
adc
pop
lcall
mov
mov
xchg
mov
rcrb
jne
push
pop
mov
mov
ds
add
std
add
popa
sub
push
cmpsl
pop
sbb
inc
push
xchg
jp
rorb
adc
test
stos
addr16
shrb
popa
mov
or
mov
fcom
sub
adc
pop
iret
and
sbb
push
cltd
sub
dec
xchg
sbb
pop
xchg
pop
pop
mov
adc
add
lcall
movsb
adc
pop
stos
adc
popf
ficoml
add
lcall
jge
pop
mov
lcall
fwait
inc
jmp
mov
sub
adc
push
aam
addr16
add
jbe
ja
cli
mov
add
ja
sub
in
fdivrs
xlat
incb
mov
add
xchg
mov
mov
test
and
lds
aaa
movsb
clc
add
bound
out
arpl
jg
ljmp
insl
das
outsl
inc
je
and
outsb
xor
or
outsb
cs
inc
and
jo
jno
mov
sub
outsl
push
or
imul
pop
outsl
sbb
pop
cmp
inc
arpl
pop
add
and
outsl
and
sti
leave
fs
insb
insb
cmp
mov
mov
insb
inc
imul
or
inc
xor
das
jne
test
mov
gs
stos
pusha
push
gs
das
out
dec
test
fs
dec
shrl
sub
pop
es
mov
pop
arpl
and
test
jle
lea
and
outsb
and
pop
pop
sbb
inc
pop
pop
je
or
or
pop
jecxz
repnz
imul
test
pop
or
loopne
ja
jb
jno
add
mov
inc
iret
mov
jp
lea
es
jp
or
pop
aaa
cmpsb
and
lcall
jnp
inc
xor
inc
inc
ss
sub
sub
gs
jg
inc
inc
cmp
xor
cmp
inc
inc
jge
mov
jnp
gs
sbb
ljmp
push
mov
xchg
sub
inc
sub
fxch
jnp
mov
insl
rcll
add
enter
mov
xor
jb
stc
inc
hlt
sbb
xor
hlt
lock
cmp
lock
js
or
pop
mov
stos
xor
adc
ret
and
data16
and
stc
and
scas
push
jge
push
dec
inc
inc
xor
xor
dec
js
les
and
pop
orb
xchg
inc
lea
push
adc
adc
fdivs
test
xor
cmc
add
adc
add
xchg
fmuls
dec
push
and
xor
call
jge
in
call
aaa
dec
bound
pop
inc
addr16
or
imul
sub
xchg
adc
dec
push
mov
xor
pop
out
sbb
aaa
test
jns
pushf
xchg
jle
jle
in
jb
jle
jle
xor
in
jb
f2xm1
mov
jle
mov
loopne
jle
call
push
dec
xchg
aaa
jb
push
mov
add
gs
mov
enter
add
cmp
add
cmpsb
mov
jae
jg
add
jns
sar
add
mov
adc
pop
sub
push
jns
int3
mov
add
fs
mov
mov
mov
aad
les
mov
aam
add
or
and
out
test
adcl
rcrb
stos
lret
mov
mov
adc
jg
fstpt
xor
add
or
cmp
gs
inc
enter
jns
fsubl
push
adc
xchg
lea
xor
mov
sbb
repz
cmpl
scas
xor
cld
in
movsb
pop
adc
imul
sbb
mov
jae
xlat
loopne
fmuls
xor
add
sbb
dec
enter
add
enter
repnz
add
and
or
mov
rorb
test
or
and
dec
jns
and
adc
inc
loopne
mov
sbb
add
dec
iret
sub
add
lcall
mov
jb
mov
sbb
arpl
cmp
test
mov
xor
pop
mov
inc
lods
lods
sti
xchg
push
jb
adc
and
test
sbb
or
movsb
arpl
inc
mov
mov
mov
dec
push
jle
push
and
dec
add
nop
or
add
xchg
adcl
mov
pop
mov
mov
hlt
xchg
orb
nop
addb
and
call
add
or
jns
daa
pop
lret
pop
jg
js,pn
or
lret
dec
lock
pop
sub
add
leave
jb
push
je
pop
scas
nop
test
or
sub
xchg
in
insb
insb
and
nop
jl
push
push
sbb
movsl
xchg
cmp
sbb
pusha
mov
adc
sub
mov
incl
popa
inc
outsl
inc
bound
and
fs
popa
and
and
data16
addr16
inc
adc
or
out
cmp
jb
inc
dec
add
add
xor
pop
add
jb
cmp
xor
sbb
xor
xor
xor
mov
jae
popa
mov
pop
addr16
jae
adc
repnz
popa
cmp
es
imul
pop
bound
in
arpl
xor
jg
pop
aaa
dec
cwtl
ss
xor
mov
fists
popa
or
orb
arpl
lods
push
add
mov
imul
andb
mov
pop
call
cmp
cmp
and
push
shlb
mov
inc
adc
lret
jns
in
mov
loopne
loopne
push
cmp
adc
xor
lea
ficoms
sub
or
aaa
les
movsl
inc
jle
dec
dec
fidivrs
push
mov
and
xchg
dec
cwtl
mov
shlb
jne
sbb
loopne
mov
les
pop
idivb
mov
cmp
cmp
sarl
jle
pop
cmp
and
arpl
insb
or
imul
jle
arpl
dec
jb
cmovl
shrl
push
and
jmp
and
dec
inc
dec
or
push
lret
dec
jge
std
popa
push
or
scas
int
mov
leave
loop
add
jmp
roll
ss
adc
cli
hlt
push
insl
add
mov
pop
mov
out
push
ss
jmp
mov
mov
xchg
in
fcmovbe
mov
mov
add
aaa
sub
jb
inc
imul
mov
and
adc
rolb
xlat
inc
adc
inc
xchg
xor
daa
orb
movsl
cmc
loope
mov
and
mov
add
xor
push
fwait
inc
add
in
rolb
pop
adc
xchg
rcl
les
lods
loope
cmpsb
adc
pop
or
add
enter
add
push
repz
sbb
lcall
in
jns
mov
pop
in
das
add
sbb
jae
dec
ds
fimull
addr16
fsubl
in
xchg
push
sbb
add
cli
jmp
test
dec
jmp
push
add
sahf
sub
push
pop
bound
arpl
negl
bound
or
and
inc
inc
or
push
push
dec
aam
push
imul
ja
test
movsb
mov
jo
test
and
rcrb
adc
fcoms
iret
dec
dec
xchg
push
add
xchg
pop
mov
and
push
addr16
mov
cs
inc
jg
in
inc
sub
cwtl
xchg
adcl
inc
mov
inc
dec
in
mov
mov
adc
cmp
decl
fcmovbe
adc
test
imulb
add
cmp
shll
inc
pop
aam
nop
or
popa
ret
add
adc
cmp
and
pop
adc
int3
push
inc
int3
mov
inc
xchg
shrb
std
pop
jb
mov
pop
les
enter
cwtl
mov
mov
sarb
mov
add
mov
insb
loop
js
mov
loope
or
fwait
mov
xchg
mov
inc
nop
lcall
add
mov
cmp
and
ja
pop
stos
clc
ljmp
dec
push
pop
inc
push
in
mov
xchg
jns
imul
push
popl
jge
test
adc
pop
dec
aad
decl
or
test
es
mov
add
std
pop
gs
mov
out
pop
outsl
xor
mov
dec
das
push
dec
enter
or
inc
movsb
adc
cmp
xor
out
adc
orb
bound
call
inc
cmp
cs
cmp
add
cmp
push
ffreep
and
sub
xor
sub
inc
fs
adc
test
xchg
inc
jg
mov
data16
iret
or
mov
and
pop
jbe
push
push
mov
pop
leave
mov
xor
popf
movl
and
les
jns
fwait
xor
sbb
mov
lret
cmp
jo
xor
mov
loopne
loopne
rcrl
fdivs
enter
fdiv
fdivrs
rolb
imul
cmpsl
mov
xchg
adc
mov
push
inc
mov
xchg
push
decb
or
and
leave
push
imul
test
pop
arpl
outsb
inc
popa
and
inc
aaa
in
test
popa
cmp
xchg
fisubrl
jne
insl
cmpsl
data16
gs
gs
inc
jo
popa
imul
inc
cmp
repnz
fldt
fwait
lock
add
jg
sbb
fldl
pushf
and
dec
scas
in
mov
xor
xor
enter
fmuls
fcoml
dec
pop
pushf
pop
sub
into
cmp
fs
xchg
pop
dec
cwtl
inc
enter
int
pushf
cwtl
fisubl
rcll
lods
sti
xchg
inc
sahf
out
rol
xchg
inc
xchg
rcl
xchg
inc
sahf
out
mov
or
mov
fs
dec
jae
mov
adc
mov
popf
sub
sbb
inc
jns
xor
shrb
test
push
movsb
or
rcrl
push
push
pushf
sbb
imul
sbb
cwtl
movsb
xchg
sbb
imul
sbb
nop
enter
imul
sbb
mov
test
in
test
inc
sbbb
sahf
subl
pop
sbb
test
sbb
fs
mov
pop
nop
inc
dec
jo
push
and
adc
sbb
enter
dec
rcrl
cmp
hlt
enter
push
pushf
dec
fs
xchg
nop
stos
dec
enter
test
dec
es
pop
pop
dec
es
mov
sbb
rclb
sbb
in
xor
push
jno
cmpsl
clc
dec
nop
daa
daa
adc
or
aam
fs
dec
fwait
lahf
and
xchg
or
inc
inc
inc
insl
inc
xchg
or
fwait
xor
sbbl
and
cmp
and
cmp
sbbl
dec
enter
sub
xor
fs
push
jns
mov
sub
and
sub
cmp
fsubs
and
daa
adc
mov
sbb
mov
or
adc
leave
test
xor
adc
rolb
pop
dec
test
adc
mov
test
jge
push
adcl
inc
arpl
xchg
pop
pop
pop
sbb
clc
imull
popa
add
arpl
and
and
repnz
insl
jae
inc
outsl
jo
and
into
and
adc
sub
rolb
pop
loop
dec
pop
test
sar
or
jb
sub
and
and
add
push
int
push
shl
and
aam
mov
push
and
jp
sarb
inc
int
aas
inc
add
cs
jo
adc
popl
jg
pop
fs
mov
popa
je
sti
nop
addr16
inc
outsb
imul
pcmpgtw
xchg
mov
adc
je
or
imul
out
add
imul
popa
lcall
ja
fbld
ret
pop
pop
sub
jne
iret
and
lds
ja
and
pop
mov
fs
sbb
sti
mov
jb
jns
ja
cmp
and
inc
vprotw
push
outsb
mov
insb
insb
hlt
push
aaa
sub
sub
scas
jecxz
jg
addr16
daa
lock
gs
out
movsl
outsl
jns
fldl
dec
gs
and
push
and
jo
out
jae
int
call
and
mov
add
jo
jo
xor
shll
and
xchg
test
dec
pop
insl
add
mov
adc
sub
sub
jmp
mov
frstor
scas
insb
outsl
je
imul
mov
sahf
sub
in
dec
push
or
mov
or
sbb
and
fcomps
sbb
dec
pop
add
test
dec
xchg
mov
dec
nop
pop
push
pop
and
shr
pop
jae
xchg
pop
nop
and
or
or
fs
insb
or
aaa
adc
dec
add
outsl
push
fiadds
cmp
shl
dec
addl
ret
add
sub
iret
pop
outsl
cmpl
xchg
insl
mov
dec
cmp
pop
addl
xchg
insb
mov
cmp
jb
adc
in
mov
lcall
and
popl
push
aam
shrl
pusha
dec
in
rclb
in
fs
stos
mov
cmp
jns
mov
inc
pop
nop
movsb
add
xor
push
and
add
movsl
lret
xchg
shlb
adc
inc
lods
lock
sbb
shlb
mov
or
sbb
in
mov
loope
xor
xchg
add
xor
push
lret
mov
cmpsb
cmp
xchg
or
mov
fdiv
xlat
push
insb
inc
jl,pt
add
push
cld
pop
and
jns
cld
stc
or
sub
cmpsb
push
orl
out
xchg
cmp
adc
outsb
sbb
movsl
shrl
dec
push
sahf
or
orb
mov
outsb
and
loope
ja
pop
inc
and
lahf
inc
and
mov
loop
or
das
nop
rclb
cmpsl
fxch
and
cmpsl
lock
mov
pop
test
test
or
sub
add
dec
inc
jno
jno
rcr
sbb
nop
mov
pusha
inc
jb
in
mov
mov
jo
add
test
push
jecxz
push
inc
negl
push
test
xchg
dec
subb
dec
sbb
push
jae
cmp
jno
clc
mov
fadds
mov
in
loope
loopne
adc
pop
sub
data16
clc
mov
inc
inc
ret
imul
or
leave
adc
cmp
sbb
cs
repnz
adc
xor
or
sub
mov
xor
add
and
push
jbe
adc
sub
inc
cmp
test
test
push
lods
dec
aas
aad
sub
loop
jbe
arpl
fs
ljmp
inc
call
ja
adc
adc
ffreep
push
nop
pop
xchg
stos
das
cld
cmp
push
fwait
cld
lock
pop
push
stos
inc
lock
pop
push
ret
scas
pop
jb
or
insl
pop
imul
mov
mov
mov
cmp
stos
adc
adc
stos
push
pusha
push
inc
or
add
and
cmp
hlt
test
lods
addr16
lods
cmp
aas
lods
jl
nop
fwait
mov
inc
cld
lods
test
add
lea
addl
xchg
add
outsl
xlat
add
add
arpl
push
popa
scas
pop
xor
sub
int3
lds
mov
dec
pop
leave
scas
xor
or
in
scas
jo
mov
scas
test
scas
xchg
mov
mov
movsb
or
mov
sahf
fdivl
orb
fcom
iret
add
enter
aam
enter
add
xchg
jmp
scas
loopne
push
and
scas
cmp
arpl
xor
push
mov
cld
inc
push
outsb
gs
jo
cmp
test
ds
or
pop
and
arpl
lods
pop
ss
outsb
outsb
push
or
call
mov
lods
in
lds
in
push
inc
fwait
mov
rcr
mov
xor
mov
pop
lret
fisubs
call
in
pusha
cmpl
inc
xchg
fidivrl
out
shlb
sub
inc
mov
sbb
dec
jb
sbb
and
fistl
enter
mov
and
inc
and
sub
push
xor
sbb
xorl
mov
jmp
or
add
and
imul
or
in
inc
or
in
repnz
enter
mov
lock
or
lds
ret
add
add
cltd
data16
aam
mov
cwtl
leave
aam
pop
and
or
sti
adc
loop
mov
and
xor
mov
inc
inc
push
adc
pop
ret
jo
mov
xor
mov
dec
addl
ja
mov
bound
sub
movsb
cltd
mov
sbb
les
scas
xor
adc
mov
mov
loope
xor
jno
xchg
in
pop
sarb
inc
or
in
das
pop
xlat
decb
nop
imull
loopne
enter
xchg
sub
es
xor
clc
clc
cmp
faddl
ja
popa
and
dec
leave
clc
push
sbb
jb
fdivrs
mov
jmp
mov
leave
fsubl
sbb
pop
adc
cmovne
push
jbe
shrb
rcrb
dec
das
jno
pop
es
les
add
and
dec
and
inc
repnz
dec
jmp
pop
leave
sub
adc
pop
enter
push
ds
cmp
addb
adc
mov
jb
test
js
pop
loopne
jb
mov
rolb
add
add
xchg
pop
notl
and
xchg
aas
xchg
and
push
insb
mov
sbb
out
repnz
mov
and
mov
nop
imul
nop
and
push
sahf
xchg
popf
rorl
rolb
mov
scas
or
scas
mov
test
mov
push
cmpsl
cs
cmp
inc
inc
imul
imul
call
push
or
in
mov
mov
push
adc
mov
enter
push
bound
jno
jno
mov
lock
pusha
sbb
inc
or
push
adc
dec
and
xchg
sbb
xor
sub
es
mov
rcrb
out
into
add
inc
mov
sahf
andb
pop
mov
xor
inc
sbb
bsf
dec
mov
cmp
inc
cmp
xchg
inc
inc
hlt
push
hlt
in
and
mov
arpl
xor
aas
sbb
inc
sub
push
pop
add
jmp
xchg
and
cmp
pop
and
adc
and
mov
mov
dec
xor
outsl
mov
repnz
jb
jns
outsl
mov
sbb
xchg
and
inc
dec
ret
xchg
mov
dec
xor
and
or
push
test
shll
ja
push
sbb
jae
add
ds
or
dec
ret
sahf
cld
push
xchg
lods
push
aam
and
insl
push
sbbb
test
shl
mov
mov
dec
ret
mov
mov
les
repz
jno
rolb
add
dec
or
sbb
xor
jp
mov
mov
ljmp
ss
push
in
fdivr
dec
aam
leave
mov
out
movsb
cmp
sbb
int3
outsb
iret
xor
xchg
sbb
cmp
xor
shlb
adc
push
mov
fcom
and
repnz
jle
add
enter
add
xacquire
jmp
mov
rol
adc
arpl
scas
cmpsl
jno
jbe
cld
call
and
iret
test
clc
dec
jne
mov
dec
xchg
inc
int
rcrl
les
push
pop
lcall
or
sbb
push
cmp
sbb
movsb
pushf
sbb
out
mov
dec
testb
loope
adc
pushf
push
xor
lea
call
mov
mov
sbb
pop
jmp
mov
sbb
add
pop
fs
push
fs
xchg
xchg
inc
inc
push
fs
cwtl
stos
mov
adc
test
jge
testb
fiaddl
sbb
and
mov
test
and
test
push
xor
inc
cmpb
nop
or
js
dec
or
sbb
inc
lcall
fdivl
sub
lahf
nop
inc
movsb
mov
popa
daa
fs
jg
push
xor
inc
es
xchg
fs
inc
inc
push
or
push
xchg
ja
or
fstps
sbb
les
cmp
ja
mov
ret
test
int
nop
movsl
inc
jecxz
mov
shlb
mov
jge
rorl
pop
subl
jmp
mov
inc
jno
push
add
in
add
xchg
inc
hlt
sbb
adc
ljmp
dec
inc
adc
jo
je
ja
dec
adc
imul
add
add
sbb
jmp
in
pop
mov
pushw
add
add
or
cmp
test
mov
dec
repnz
and
xor
xchg
cmp
push
outsl
ljmp
test
das
adc
or
cltd
cli
dec
pushf
gs
cmp
adc
mov
outsb
inc
jp
cs
fcompl
jne
jb
popa
subb
orb
jns
es
xor
movl
sub
dec
lock
add
jo
push
pop
jo
mov
push
out
bound
inc
mov
in
test
jb
pop
in
int3
jmp
stc
fadd
shl
pop
pop
sbb
add
sbb
in
movsb
mov
sub
and
lea
add
inc
lods
and
sbb
push
int
xchg
sub
xchg
xor
xor
add
fcompl
movsl
push
add
subps
fs
xor
or
iret
jo
push
sbb
and
andl
popl
nop
inc
dec
mov
fsubrs
mov
adc
jmp
in
js
sahf
leave
cmp
jo
movb
cmp
ss
test
cmpl
in
sbb
xchg
cmp
inc
stc
fdivs
enter
adc
inc
lea
es
enter
loopne
inc
mov
dec
cmp
loopne
add
mov
and
xor
inc
xor
xor
jb
cmp
xor
dec
xor
and
xor
mov
nop
inc
enter
enter
xor
sbb
and
sbb
in
mov
and
adc
roll
mov
dec
das
imul
jmp
or
push
cmp
subb
and
or
sub
adc
cmp
adc
movsb
dec
add
inc
push
xchg
or
or
enter
in
add
add
cmp
pop
add
decb
or
clc
cmp
mov
call
cmp
das
or
pop
or
mov
les
pop
jo
scas
xor
fcoml
sbb
ljmp
mov
add
adc
mov
shrb
rcl
inc
aam
adc
mov
jno
inc
sbb
int3
enter
push
test
adc
mov
xchg
mov
rol
sub
out
adc
gs
frstor
cmp
mov
xor
leave
push
in
add
dec
mov
xor
mov
push
jne
and
lcall
stc
and
pop
popa
test
push
jne
add
jne
cmpl
pushf
sahf
adc
cltd
int
sbb
or
ds
in
inc
xor
pop
lock
cmp
mov
sbb
aam
pusha
add
iret
cmp
sub
ret
mov
adc
aad
xchg
mov
rcl
and
imul
fdivr
dec
or
add
pop
add
pop
mov
orl
es
and
or
inc
and
add
jnp
cmpl
mov
xor
add
xchg
mov
mov
enter
andl
pop
pop
call
int3
or
cmp
ss
pop
push
inc
mov
mov
inc
addr16
add
push
pusha
lods
pop
outsl
aas
jno
cmp
jg
jae
in
sbb
insl
outsl
jbe
cltd
mov
fnstenv
pop
js
push
dec
xchg
mov
pop
pusha
mov
mov
add
fst
inc
int3
cmp
test
and
add
enter
add
or
push
in
loopne
xor
nop
popa
cltd
mov
cmp
inc
cltd
pushf
rorl
mov
jb
add
int
xor
pop
pop
test
mov
int
inc
pop
cltd
mov
adc
clc
stos
mov
add
cld
movsb
and
sub
mov
out
fstps
fwait
mov
mov
or
dec
or
dec
pop
stos
outsb
sbb
push
inc
or
dec
scas
iret
and
jo
je
or
fcomps
sub
and
call
dec
inc
mov
in
ja
add
pop
nop
inc
call
stos
xchg
shll
jecxz
js
pop
fistps
or
dec
enter
pop
or
adc
enter
int
or
sub
add
xor
jmp
sbb
inc
shll
inc
adc
jo
cmp
cmp
aam
loopne
sbb
dec
or
or
sbb
lret
fs
jb
sub
cmp
sub
xchg
or
sub
xor
pop
enter
adc
fdivs
mov
mov
int3
stc
mov
mov
int3
xor
ficomps
fimull
and
mov
cs
pusha
or
into
cmp
jno
enter
leave
pop
xlat
enter
and
and
or
ret
add
sbb
fcompl
data16
add
pop
sbb
movsb
push
fsubrl
cwtl
xor
xchg
ret
cmp
popa
les
lods
cld
fs
sub
roll
mov
cmp
add
mov
cltd
movsb
cltd
inc
daa
xor
cmp
in
es
dec
and
push
nop
push
pop
sbb
pop
aad
add
scas
jecxz
cmc
mov
mov
icebp
adc
repnz
test
aam
cmp
gs
adc
add
ffreep
push
push
inc
rolb
jns
mov
outsl
loop
cmp
jecxz
fnstenv
jecxz
loopne
mov
add
outsl
pop
xchg
and
adc
jg
loopne
sub
push
push
enter
outsl
xchg
and
leave
add
outsl
dec
leave
add
jecxz
jecxz
mov
sub
outsl
mov
push
add
pop
jecxz
push
jmp
outsl
fidivrs
pop
outsl
mov
inc
enter
loope
adc
jmp
outsl
pop
push
mov
fistps
outsl
xchg
or
dec
jbe
and
mov
jecxz
jecxz
push
mov
adc
jecxz
inc
cs
add
movsb
jecxz
in
leave
mov
adc
andl
in
ss
push
mov
in
dec
scas
in
repnz
std
cmp
push
lods
pop
and
insl
or
push
in
je
call
pshufw
bound
add
leave
sub
pop
jb
cmp
mov
sbb
pop
int3
pop
xor
imul
imul
mov
pop
jmp
imul
push
push
pop
adc
xor
sarl
data16
out
test
xchg
dec
push
shlb
in
push
lds
pop
pop
adc
addr16
inc
leave
enter
dec
dec
dec
leave
inc
outsb
adc
pushf
cmc
add
jns
xchg
rcll
cltd
add
fwait
cmp
xor
lods
dec
dec
push
jle
xor
fwait
push
jne
and
cmp
cmp
jo
jg
sbb
adc
mov
in
sbb
andb
mov
inc
fiadds
mov
es
nop
or
leave
test
adc
shlb
pop
add
add
add
lods
sbb
rol
mov
pop
pusha
ret
sbb
in
mov
ret
add
jp
adc
aam
add
mov
loopne
pop
in
js
cmp
xchg
ljmp
cmp
add
loopne
mov
loopne
fmull
fdivrs
adc
pop
pop
out
add
push
and
xor
ror
or
add
or
push
aam
add
mov
popa
and
jae
or
pop
push
ret
sbb
mov
cltd
in
cld
in
in
xor
mov
cmpsb
adc
adc
loopne
or
mov
adc
jb
rorl
pop
enter
dec
enter
push
ret
push
pop
add
and
jl
les
mov
jmp
xchg
add
add
push
test
inc
dec
adc
push
int
mov
pop
and
xor
jns
shl
cmpl
out
sub
out
int3
in
xor
adc
add
loope
in
mov
add
xchg
int
and
call
add
mov
outsb
adc
scas
in
jb
pop
test
hlt
imul
cmp
jo
pop
test
in
nop
pushf
aas
outsl
rcr
jns
iret
out
and
fdiv
insl
leave
and
sub
mov
fimuls
mov
popa
pop
std
jns
andb
scas
js
fs
popf
out
jae
pop
test
insb
insb
cs
xor
jo
je
adc
sbb
rcrb
pop
push
int3
rcr
rsqrtps
jp
jmp
fmul
cmp
imul
ret
add
jo
cmp
push
shrl
test
jnp
jne
xor
bound
mov
mov
dec
out
pop
leave
mov
les
and
and
mov
loopne
cmp
ljmp
aad
jno
hlt
subb
push
and
cmc
clc
rclb
cmp
daa
cmc
mov
das
sub
test
mov
negl
daa
or
fdivs
adc
mov
inc
push
xchg
clc
pop
inc
adc
aad
xchg
pop
stc
lock
mov
stos
nop
add
add
push
repnz
adc
nop
cld
shlb
out
std
fcoml
jne
jno
cld
push
loope
xchg
push
jae
repnz
std
call
jns
std
stos
adcb
jp
stc
pop
add
dec
leave
and
or
and
adc
add
xor
inc
mov
out
arpl
out
inc
push
xchg
ljmp
xor
stos
out
loopne
add
inc
out
jecxz
jg
lods
sub
daa
test
out
scas
pop
adc
add
nop
xor
adc
stos
leave
in
in
outsl
or
imul
insl
dec
mov
mov
fsubrs
mov
or
in
insl
pop
xchg
dec
jae
pop
mov
sub
or
lea
testl
cmp
fadds
clc
out
push
pushf
cmp
mov
rcr
sub
inc
add
mov
movsb
push
fwait
adc
cmpl
push
xor
xchg
sub
jecxz
push
repnz
and
add
add
jns
cs
in
inc
pop
push
cli
in
stc
lret
movups
and
and
sbb
xor
loopne
ficoml
jle
add
mov
shrb
xor
enter
aam
rclb
inc
xor
int3
enter
push
daa
push
add
js
pop
mov
aas
test
push
add
sub
ss
sub
dec
sbb
movsb
and
mov
xor
cmp
mov
ret
sbb
fwait
mov
pusha
xor
enter
nop
adc
jmp
loopne
add
movsb
hlt
push
xor
andl
xor
adc
pushf
fcomps
nop
pushf
cwtl
inc
sbb
cwtl
xchg
lcall
gs
xor
push
mov
mov
pop
repnz
pusha
xchg
or
test
mov
sbbb
andl
push
jb
addr16
and
mov
cltd
nop
mov
jo
insb
cltd
nop
inc
push
cwtl
insb
insb
sbb
push
add
pop
fs
push
jns
les
fs
inc
cs
aam
in
inc
mov
push
fs
push
sbb
push
push
fs
inc
cs
hlt
push
movsl
mov
xlat
enter
lds
add
dec
and
xchg
pop
sbb
inc
and
adc
inc
cmp
mov
enter
sbb
fs
add
inc
cmp
and
and
imul
xchg
or
dec
sub
sub
pushf
dec
enter
jl
imul
push
and
xor
inc
or
in
mov
nop
sbb
daa
adc
xchg
adc
lds
or
xor
and
or
orl
or
or
adc
add
add
xor
and
add
fwait
sbb
and
adc
jbe
jns
sbb
jne
fdivs
push
mov
sbb
and
or
pop
or
pop
add
cltd
nop
ja
ret
call
inc
push
fcmovne
mov
loopne
mov
ret
pop
dec
in
mov
and
xor
test
jl
enter
aam
mov
nop
push
enter
adc
xchg
or
movsb
int3
enter
daa
adc
les
shlb
or
sarb
fdivl
adc
mov
orl
mov
and
es
adc
test
lods
test
and
insb
and
test
orl
movsb
mov
xor
mov
enter
dec
dec
mov
call
inc
sub
mov
stc
test
xor
and
or
stc
mov
adc
into
push
lock
mov
lods
adc
mov
cwtl
inc
ret
or
mov
clc
sahf
mov
loopne
arpl
cmc
adc
xor
push
iret
pop
push
stos
sub
test
dec
mov
push
mov
fcmovne
push
push
push
fistpll
rclb
inc
push
ss
insb
and
sub
and
or
insb
loopne
and
jnp
cmp
sbb
add
sbb
sbb
insb
and
xchg
cwtl
or
and
pop
and
insb
loopne
sbb
or
or
jnp
pop
sbb
jbe
std
sub
cs
int3
push
push
stc
pop
mov
push
or
xor
adc
pop
insb
and
movd
push
inc
ljmp
pop
xchg
pusha
ss
inc
pop
push
add
add
pop
and
insb
pusha
pop
enter
add
dec
nopl
or
addr16
dec
roll
sub
or
daa
adc
cwtl
or
sub
daa
aas
jmp
or
mov
outsb
jnp
dec
sbb
mov
pop
shll
stc
insl
mov
loopne
sbb
rorb
jae
pop
out
stos
clc
sub
push
xor
pop
inc
fld
daa
adcb
arpl
xchg
mov
inc
xchg
pop
andl
and
jo
aad
mov
outsl
push
fsubs
insl
imul
mov
pop
inc
pop
push
mov
mov
inc
sbb
push
das
sub
adc
and
push
dec
adc
ljmp
leave
inc
inc
mov
loopne
das
lock
in
adc
xchg
cmp
adc
ss
js
jbe
sbb
repz
adcb
repnz
xchg
jle
dec
aam
in
sbb
adc
fcmovb
cmc
test
stc
movsl
or
push
ljmp
push
cmp
mov
xchg
bound
lods
push
cmp
add
mov
dec
mov
nop
lock
enter
dec
sarb
sub
das
in
in
xchg
inc
lea
loope
dec
ja
mov
clc
inc
fdivr
cs
mov
xorl
sbb
mov
sahf
icebp
lock
mov
shlb
call
push
shll
xor
addb
push
adc
pop
pop
into
sti
inc
inc
mov
shrb
lock
movsb
shrb
clc
add
lahf
or
pop
sbb
lds
jae
lea
add
das
cmp
cmp
popl
and
adc
pop
rol
mov
call
pop
mov
sbb
sbb
ret
js
enter
cmp
nop
rclb
sub
fimull
push
lahf
add
ret
pop
jge
sbb
pop
xchg
repnz
mov
dec
push
inc
or
pop
or
sbb
dec
push
xor
sbb
in
shrl
sbb
or
inc
sbb
js
and
stos
and
mov
and
sbb
xor
sbb
pushf
mov
cmp
mov
xlat
mov
xor
nop
fmull
and
pushf
pop
cmpl
add
pusha
and
mov
adc
push
rcrb
sub
pop
inc
shlb
lods
mov
ficomps
sbb
mov
clc
dec
mov
in
pop
or
sbb
pop
lret
sbb
add
add
dec
les
mov
pop
sub
or
push
adc
sahf
mov
mov
ret
test
neg
xchg
sub
or
in
je
js
je
test
or
or
movsb
sub
orb
sbb
push
cmp
stc
movsb
pushf
dec
cwtl
and
pushf
ret
ret
xchg
nop
nop
push
lock
mov
push
outsl
lahf
push
push
sbb
dec
jae
add
add
pop
xchg
dec
sahf
push
push
in
ret
test
cmp
xchg
add
in
test
adc
jg
xor
das
adc
cmp
push
pop
scas
gs
inc
js
fs
je
test
repnz
push
arpl
lods
imul
and
shrb
jne
push
out
add
sub
and
jge
dec
lea
sub
xor
mov
push
mov
and
pop
outsl
test
dec
hlt
mull
add
and
imul
lahf
addr16
adc
fwait
out
and
add
jae
cmp
andl
orb
mov
xchg
push
sub
pop
jne
sub
pop
sbb
imul
cmpsl
cmpsl
test
or
and
cmpsl
test
test
xlat
mov
push
and
add
jo
xchg
jns
mov
mov
enter
imul
xchg
or
mov
adc
mov
sbb
shl
ror
mov
clc
inc
xchg
insl
fisubrs
test
pusha
insb
and
cs
divb
cmp
mov
push
lret
sub
mov
xchg
aas
gs
add
cmp
addl
sub
adc
push
mov
jl
subl
adc
cs
jp
sub
sarb
pop
add
pop
pop
and
adc
pop
pusha
and
adc
das
cmp
fiaddl
push
les
and
pop
inc
add
xchg
pop
aas
lcall
dec
shlb
add
push
clc
addb
xchg
jne
push
out
jmp
bound
hlt
addr16
mov
add
dec
add
xchg
pop
nop
pop
rorb
inc
negb
xor
and
pop
ret
add
outsl
ljmp
pop
and
jbe
pop
sub
inc
aad
mov
lods
or
and
jmp
scas
fbstp
or
xor
sub
fcomps
inc
pushf
xchg
sub
insl
xchg
xchg
add
paddw
adc
lcall
push
dec
fisubs
sub
shl
data16
xchg
in
jecxz
aas
adc
in
or
cmp
pop
enter
hlt
sub
dec
add
aaa
scas
fistpl
push
testl
orl
mov
push
bound
xor
fadds
jo
xchg
cmpl
or
ret
nop
xchg
mov
push
addr16
pop
cltd
mov
jbe
inc
add
inc
xchg
add
popa
sbbl
dec
jbe,pn
cld
mov
xchg
xchg
rclb
arpl
xchg
mov
mov
mov
push
dec
xchg
xor
mov
adc
daa
popa
ds
jo
sbb
repnz
jl
sub
lods
adc
add
in
mov
mov
andl
test
or
out
adc
mov
imul
push
lods
pushf
pop
jb
jg
mov
xchg
pushf
mov
cmp
xor
cwtl
pop
daa
or
xor
shrl
enter
xchg
push
push
je
sbb
adc
int3
in
orb
aad
adc
xchg
adc
adc
sbbb
pop
jp
or
ficompl
mov
leave
and
jl
add
js
jo
nop
inc
push
outsb
adc
loopne
in
cmp
enter
adc
lock
popa
dec
scas
or
pop
adc
mov
jb
inc
negb
adc
pusha
in
push
jns
add
fstl
adc
inc
xchg
xchg
imul
pop
pop
imul
adc
sub
push
test
push
push
cwtl
xchg
fimull
dec
dec
aad
inc
cmp
arpl
sub
jg
pop
movsb
dec
jns,pn
push
push
pop
nop
pop
mov
push
je
add
pop
mov
test
lods
add
pusha
push
sbb
xor
xchg
mov
aad
inc
insb
sbb
scas
adc
xor
cmp
je
jo
ret
daa
or
lock
les
out
outsl
and
xorl
inc
lahf
xor
xor
xchg
sub
jns
outsl
mull
xchg
rdtsc
cmp
notl
cmp
and
or
jns
insb
inc
xor
enter
es
aas
cmp
ss
cmp
outsb
lods
jnp
xor
inc
add
push
adcb
jns
mov
and
out
inc
aaa
push
add
add
and
std
imul
dec
jle
or
add
mov
pop
aas
mov
sub
xor
and
movsl
add
das
repnz
aam
shlb
pop
repnz
push
fmuls
aam
jg
or
mov
ror
cmp
xchg
dec
int3
push
dec
int3
and
xor
enter
cmpl
shr
mov
mov
les
inc
es
jae
sub
loopne
and
sub
pop
movsb
das
mov
jg
pop
pop
or
nop
lods
push
jg
lahf
test
xacquire
movsb
fcoml
pushf
adc
push
loop
out
psadbw
in
data16
jb
mov
jbe
psubb
xor
push
cwtl
enter
push
imul
or
leave
xor
orl
sbbl
sub
xorl
add
jbe
push
push
lods
bound
push
rclb
add
xor
lods
pop
pop
sbb
adc
jl
add
subl
sbb
adcl
inc
dec
rcll
orl
call
sbb
push
loope
mov
js
xor
xchg
repnz
addl
sahf
pushf
sub
pop
pop
movsl
add
fdivp
dec
nop
xor
cmp
fmuls
gs
test
lret
mov
and
gs
jae
xchg
mull
mov
xchg
test
mov
mov
sub
outsl
adc
lea
push
leave
mov
popa
pop
mov
and
xor
xchg
mov
cmp
inc
inc
xor
push
xor
cmp
cmp
and
or
sub
ss
pop
xor
jg
sbb
sub
xchg
leave
lds
in
daa
aaa
sub
and
pop
or
subb
add
sbb
adc
or
jmp
ss
and
in
adc
call
sbb
imul
cld
inc
call
mov
dec
mov
cmpsb
mov
xchg
sub
outsb
leave
roll
inc
add
cmp
mov
movsb
inc
pop
add
cmp
inc
or
psllw
adc
fsubs
pushf
or
ret
addb
inc
pop
or
cmp
dec
xor
daa
lock
hlt
jb
and
or
adc
add
pop
jmp
ss
ret
sbb
in
fcoms
sbb
nop
dec
push
in
push
fsubl
adc
fidivl
addr16
shlb
xchg
xchg
dec
sbb
mov
les
mov
mov
jb
leave
inc
add
stos
pop
adc
inc
sbb
lods
enter
add
inc
sub
mov
adc
pop
mov
imul
pushf
call
xchg
cwtl
xchg
mov
lods
cmp
cmpsl
nop
add
nop
cs
test
sub
in
jnp
xchg
cmpb
add
ja
adc
xchg
push
xchg
pop
mov
or
notb
adc
push
inc
pop
sbbl
pop
je
xorb
imul
aaa
mov
mov
rolb
fcompl
pop
jb
mov
adc
mov
pop
push
and
bound
adc
idiv
inc
push
jbe
sbbb
cwtl
mov
inc
pop
sub
sub
and
insb
daa
loop
adc
xchg
gs
outsl
sbb
gs
jne
mov
adc
enter
add
and
add
inc
mov
imul
adc
in
dec
and
cmp
xor
and
xor
aaa
adc
outsb
xor
ss
cmp
das
aas
inc
push
inc
clc
mov
add
ds
inc
xchg
mov
adc
pop
dec
int
addr16
xor
rolb
es
roll
add
outsl
xor
fisttpl
outsl
stos
inc
lea
adc
fldt
xor
xor
xlat
add
insl
add
repnz
scas
xor
xor
xor
lea
pop
pushf
cmpsb
inc
aaa
cmpsl
push
repnz
fwait
es
dec
aaa
xor
or
es
xchg
push
xchg
stc
mov
cld
movsl
cld
fnop
add
jo
or
pop
les
sub
and
pop
cmp
or
arpl
movsl
dec
mov
rcll
jns
mov
sahf
ja
xlat
cmp
in
je
js
jno
call
lea
sub
push
inc
ror
repz
mov
ret
in
and
nop
pop
cmpsl
pop
bound
push
xor
push
cmp
and
and
pop
adc
and
lret
dec
repnz
and
mov
or
sarl
mov
jns
das
and
js
jns
test
cmp
sbb
pushf
rcrb
dec
je
ficoms
aaa
or
adc
sub
jo
dec
adc
inc
int
idiv
in
outsb
pop
movsl
adc
test
xchg
cli
fstp
adc
adcl
fnsetpm(287
cmpb
pusha
rcll
mov
pop
pusha
xor
pop
pop
and
sbb
add
add
ss
mov
cli
pop
pop
xlat
jno
pop
icebp
push
xor
in
sbb
xchg
push
adc
xchg
mov
adc
and
or
int3
xchg
push
cmp
inc
push
jns
adc
mov
scas
or
xor
xor
xorl
cmp
sub
dec
inc
es
xor
sbb
enter
call
and
adc
outsb
leave
ret
push
and
inc
jo
sub
cmp
or
sbb
fdivr
mov
call
push
js
sbb
pop
and
or
nop
xchg
or
or
add
add
pop
lret
mov
pop
inc
js
movsb
jge
mov
cld
stc
and
outsb
and
add
mov
clc
stc
adc
loope
insb
dec
hlt
stc
adc
dec
add
xorb
inc
ja
test
jbe
pop
mov
adc
test
sbb
adc
mov
xchg
xor
test
jo
xchg
sbb
fcoml
jo
and
vphaddbq
mov
fsubrs
adc
mov
fadd
dec
cmp
push
call
clc
mov
inc
and
rclb
cltd
adc
int3
int3
and
and
in
mov
shlb
sub
scas
xorb
mov
imul
sbbl
dec
ficoms
dec
xor
mov
shrl
insl
movsb
sti
sbb
and
mov
test
adc
sub
jmp
pop
pop
bound
out
jo
push
push
cmp
pushf
orl
pushf
push
subb
adc
xchg
imul
xchg
cwtl
adc
pop
and
or
xchg
mov
aaa
mov
out
fists
xchg
test
jb
imul
xchg
test
fiaddl
jl
sub
test
sbb
movsb
push
adc
sbb
gs
jo
mov
jo
je
jb
inc
push
xchg
sbb
insb
insb
push
add
xor
stc
sbb
pop
jae
xchg
lods
xor
xor
add
push
fs
daa
daa
insl
inc
hlt
pop
loopne
inc
push
pop
mov
inc
subl
dec
or
inc
pop
ja
xchg
scas
int
push
and
outsb
xor
mov
pop
pop
and
push
pop
push
faddl
insl
je
aaa
test
cmp
mov
xor
clc
outsb
xchg
outsb
xor
mov
inc
nop
iret
pop
inc
stc
stos
adc
cmp
xor
int
or
call
repnz
inc
inc
push
inc
cmp
mov
or
jns
mov
js
push
cmp
push
cltd
nop
xor
test
push
cmp
push
cltd
nop
sub
aam
push
cmp
adc
nop
and
or
adc
and
xchg
dec
and
xor
inc
dec
jmp
xchg
stos
mov
push
pop
jle
or
mov
fstl
or
xchg
mov
add
flds
xor
cmp
pop
mov
pop
push
pop
jne
dec
imul
push
xor
test
clc
adc
lock
xchg
jo
and
inc
add
and
xchg
repz
jns
dec
inc
std
and
cmp
lock
iret
sbb
in
adc
mov
jns
sarb
clc
int3
pop
fs
inc
fmull
fadds
adc
int3
lds
cmpsl
sbb
lret
dec
push
loopne
aaa
cmp
mov
fldcw
sub
xchg
imul
add
add
xchg
add
adc
rol
clc
adc
fdivs
cs
mov
push
add
inc
fimuls
adc
enter
mov
in
gs
pusha
dec
add
dec
xchg
fs
or
jg
jg
mov
lods
test
dec
lock
adc
mov
ret
sub
ret
movsb
adc
dec
pushf
xchg
nop
lcall
aad
ret
cwtl
push
dec
mov
or
add
ret
and
mov
nop
and
fs
adc
xchg
clc
mov
mov
movsb
leave
enter
addb
mov
test
pop
adc
mov
mov
jl
addl
nop
pop
jo
cltd
je
pop
enter
fildl
adc
jecxz
test
test
arpl
mov
mov
out
or
leave
lds
cwtl
xchg
pop
pusha
scas
pop
xchg
dec
dec
cs
pop
pop
jb
int
ret
mov
enter
dec
push
push
push
xor
push
push
mov
fs
xchg
inc
inc
inc
push
inc
sbb
mov
ret
cmp
dec
dec
cs
cmp
adc
test
dec
repnz
cmc
clc
jmp
jg
adc
icebp
xor
xor
incl
addl
outsl
fdivrp
sbbl
rolb
inc
sbb
add
xchg
xor
dec
lea
arpl
shrl
adc
xchg
dec
cs
mov
sbb
in
adc
or
or
jne
mov
or
inc
jb
adc
or
stc
mov
fadds
insl
add
add
lods
sbb
xchg
in
out
sbb
xor
nop
xchg
clc
mull
mov
add
jb
or
mov
adc
popf
lock
scas
mov
adc
xchg
popw
push
int
neg
rorb
dec
cs
in
loopne
jns
je
jae
adc
bound
stos
cmp
xchg
jb
sub
in
imul
int3
adc
xchg
adc
test
notl
inc
jb
mull
in
xor
divl
divl
leave
jecxz
jecxz
jb
mov
push
repnz
sbb
repz
inc
mov
push
pop
push
fisttpll
lods
jmp
mov
pop
nop
inc
push
push
xchg
sub
inc
dec
enter
push
push
jge
enter
test
nop
enter
movsb
mov
xor
push
cmp
or
nop
inc
cwtl
xchg
jge
or
and
xchg
nop
lock
and
repnz
add
inc
jo
adc
lret
jb
inc
aaa
popa
test
je
xchg
xchg
adc
jl
or
mov
divl
fdivrl
popa
lea
cmp
inc
insb
mov
popa
das
xchg
xchg
dec
cs
xchg
in
lahf
out
pushf
inc
dec
and
pusha
negl
negl
or
aaa
sub
push
cmp
inc
notl
cltd
int
dec
aaa
dec
or
jno
sbb
and
pop
scas
xor
add
repz
add
mov
cmp
jbe
mov
cmpl
and
stos
les
dec
dec
scas
inc
sub
adc
mov
negl
xor
and
lea
repnz
and
adc
pop
sbbl
leave
inc
xor
mov
sbbb
sbb
lds
cltd
adc
and
or
dec
scas
pop
enter
add
xchg
andl
or
rclb
movsb
ret
push
div
testb
add
movsl
fs
adc
cs
push
enter
cmp
daa
out
pop
mov
mov
in
lock
cltd
nop
jbe
mov
shlb
or
imul
fsubrl
faddl
loope
mov
fcoms
or
out
fisttpl
mull
or
aam
sub
xor
pop
mov
inc
lods
pop
div
imul
testb
fdivs
or
xchg
test
ficoml
nop
inc
push
lahf
shl
add
lahf
adc
jnp
xor
daa
sti
xchg
mov
ljmp
ds
adc
dec
lods
negb
dec
mov
movsb
xchg
dec
dec
scas
fbld
inc
sub
cmp
imul
adc
fistl
adc
scas
mov
sbb
xchg
mov
adc
sbb
negb
pop
or
mov
sbb
daa
xchg
cmpb
popa
push
and
lods
xchg
cmc
div
sbb
js
fadd
mov
sbb
xchg
sbb
insb
adc
mov
insb
jo
jb
dec
mov
jbe
in
orb
aad
jb
mov
sbb
nop
pop
pop
pop
pusha
pop
jb
xchg
pusha
pop
pop
xchg
or
nop
pop
push
push
push
push
xor
into
enter
pop
push
push
ja
dec
adc
jnp
mov
test
leave
inc
adc
or
loope
adc
cmp
or
in
add
cmp
inc
bnd
mov
adc
call
cmp
xchg
enter
imulb
es
inc
and
negb
mulb
inc
aaa
test
pushl
jecxz
jecxz
jmp
mulb
cld
js
jecxz
push
mov
push
lret
aaa
pop
scas
inc
ret
pop
push
sbbl
stos
insl
push
loope
add
enter
adcb
xor
and
enter
or
xor
and
or
test
daa
scas
std
push
bound
repnz
add
add
or
cld
cmc
sub
jge
sbb
clc
inc
dec
push
ret
scas
adc
pop
mov
push
jnp
xchg
pop
dec
sub
cmc
scas
je
sbb
mov
rclb
and
leave
orl
mov
cmc
in
test
fmul
add
aam
int
cmc
outsb
adc
inc
xor
mov
int
aaa
pop
enter
nop
cmc
adc
cmc
rolb
jp
pop
jnp
sbb
mov
arpl
or
lods
rclb
mov
fcoml
adc
imul
mov
adc
adc
jbe
jne
cmpps
push
cmp
push
dec
shrl
pushf
cmc
test
movsb
or
pop
pop
mov
xor
or
adc
shrl
mov
popa
mov
test
sbb
inc
cmp
outsb
leave
jl
lock
sub
adc
pop
dec
or
xchg
les
mov
mov
in
xor
hlt
push
insb
jl
lods
jno
adc
jo
cmp
call
add
and
imul
sbb
ja
adc
add
in
fsubs
ja
cs
pop
adc
dec
xorl
mov
dec
scas
jecxz
das
push
inc
push
push
mov
adc
push
in
dec
sub
fcoml
enter
adc
cmc
in
mov
mov
in
xor
in
xchg
xchg
cmp
xor
pop
dec
es
leave
and
sub
push
outsb
leave
sub
xchg
xchg
imul
arpl
jb
xchg
in
lods
sbb
loopne
call
lock
lds
sbb
stos
and
or
in
or
mov
or
jb
adcl
mov
push
dec
scas
movsl
or
aad
addb
aaa
gs
dec
mov
add
orl
or
hlt
imul
lock
adc
in
push
and
in
shrb
in
mov
icebp
in
push
and
jmp
mov
sbb
hlt
push
jmp
enter
hlt
sbb
fdiv
xchg
xchg
imul
int3
dec
sbb
adc
enter
imul
les
les
fnstsw
hlt
shl
sbb
dec
sahf
lock
mov
xchg
and
hlt
in
adc
xorl
mov
jo
cmp
jp
arpl
movsb
sub
inc
add
inc
scas
loopne
movsb
lds
mov
hlt
xor
dec
add
xchg
flds
sbb
adc
test
jns
dec
nop
xchg
leave
mov
mov
pop
jb
or
sub
push
xchg
sub
jl
adc
mov
mov
pop
jb
xorb
xchg
je
outsl
js
mov
js,pn
jnp
jp
pop
xor
jl
jo
jbe
mov
adc
xor
nop
outsl
hlt
roll
nop
pop
fs
mov
imul
xor
jb
pop
adc
sbb
inc
movsl
jae
push
rorl
pop
push
push
jmp
cmpsb
add
add
daa
rclb
in
leave
dec
dec
and
inc
hlt
mov
iret
pop
jb
push
inc
iret
inc
hlt
cmp
or
adc
iret
jb
mov
iret
cmp
inc
mov
xor
push
iret
xor
dec
xchg
nop
hlt
push
adc
xor
in
hlt
mov
add
ret
xchg
jge
orl
and
and
or
and
repnz
rolb
hlt
adc
sbb
sbb
push
dec
push
mov
push
dec
mov
or
or
dec
aad
jge
push
or
and
pop
push
and
aas
or
pop
add
and
repz
movsb
adc
repz
nop
repz
push
or
in
or
mov
in
rorb
mov
test
repz
fcoml
and
fcomp
add
outsb
leave
aam
adc
add
jno
adc
add
in
repz
repz
and
add
push
fs
enter
jo
ret
repz
mov
mov
mov
or
data16
lods
aaa
test
movsb
and
rolb
int3
mov
jne
iret
pushf
adc
push
sub
pop
repnz
addr16
adc
pushf
mov
jge
aas
pop
mov
adc
xchg
inc
or
jge
add
loope
stos
lods
loop
pusha
inc
jne
jnp
nop
inc
adc
mov
repz
xchg
dec
push
repz
xchg
sti
repz
xchg
imul
push
xor
js
dec
jb
leave
js
je
dec
enter
fs
sub
push
mov
stos
movl
and
dec
pop
pusha
pop
mov
push
std
push
leave
enter
push
pop
rorb
dec
sbb
lea
jb
sbb
je
sbb
leave
inc
cmp
fiaddl
cmp
divb
mov
xchg
xor
xor
sub
test
xchg
loopne
pushf
pop
sub
mov
xchg
imul
xlat
xchg
sbb
or
sbb
mov
sbb
fisttpll
push
push
fcoml
sbb
loope
flds
cmp
add
cmpsb
jmp
sub
and
or
fsubs
shll
jecxz
push
adc
outsb
mov
movsb
mov
sub
stos
dec
repnz
repnz
lock
popa
out
xchg
xor
lock
xchg
dec
pop
aad
in
xor
popf
call
mulb
pop
inc
xchg
sbb
and
in
ficoml
sbb
in
xchg
fcoml
not
sub
inc
xchg
enter
scas
fldt
jne
mov
loope
mov
fwait
and
sbb
int
out
mov
cmp
or
mov
jnp
and
repnz
mov
adc
outsl
ljmp
cmpsb
mov
or
shl
jmp
add
das
or
sahf
outsb
sbb
sub
pop
adc
outsb
leave
leave
mov
adc
and
pop
sub
cmp
outsb
mov
repnz
sbb
pop
mov
cmpl
inc
inc
push
mov
enter
mov
negl
adc
jecxz
or
js
adc
jne
int
jb
enter
xchg
and
mov
xchg
jne
aaa
leave
enter
test
lea
xchg
je
insl
leave
enter
jmp
repnz
mov
and
cmp
jo
add
sub
adc
and
lods
mov
adc
jae
enter
aam
orb
pusha
pop
pop
fsts
or
je
jb
rclb
jecxz
inc
pop
repnz
dec
dec
push
repnz
adc
rorb
adc
sub
jmp
sbbl
pusha
jne
inc
jo
nop
and
repnz
fs
jecxz
repnz
mov
sub
repnz
mov
xor
sub
pop
pushl
xor
test
sub
sub
divb
xchg
sub
push
mov
call
test
outsb
xchg
sbb
pop
inc
test
sahf
adc
sti
or
dec
jb
sti
add
adc
jne
call
icebp
mov
in
push
nop
dec
xor
add
xchg
rcr
xchg
or
xor
cwtl
jno
push
jno
icebp
add
sub
stos
add
cs
xchg
call
movsb
adc
sbb
cmp
or
in
xor
icebp
adc
and
aam
jo
jno
pop
mov
loope
out
sarb
icebp
adc
mov
fs
scas
xorl
adc
mov
jb
or
inc
add
ret
xor
enter
test
jnp
xor
popf
sbb
xor
ret
jnp
pop
mov
mov
pop
icebp
mov
mov
nop
xchg
pushf
cwtl
cwtl
pop
repnz
nop
pushf
dec
xchg
adc
clc
jg
test
lds
icebp
aaa
out
outsb
leave
mov
stos
xchg
mov
cmc
subb
xchg
jl
jl
dec
cmp
cmp
je
je
insl
in
jl
xchg
aas
adc
ljmp
cmp
icebp
and
loopne
add
dec
mov
inc
pusha
adc
orl
xchg
imul
fs
sbbl
and
pop
lds
push
shufps
pop
mov
lcall
add
xchg
add
enter
dec
dec
mov
xchg
imul
dec
dec
aad
sbb
int
cmp
inc
inc
adc
push
fcomip
mov
pusha
test
xchg
add
mov
in
xchg
cmp
jb
leave
lds
xor
enter
xlat
jl
dec
ds
in
xchg
xchg
sbb
and
or
in
sub
sbb
gs
pop
cltd
int
adc
adc
or
lods
dec
and
dec
add
in
rol
lahf
sub
xchg
inc
jbe
xor
dec
add
stc
lods
insl
adc
push
out
xor
clc
adcb
enter
lock
gs
sub
lock
or
cmp
and
in
jb
leave
enter
loopne
and
or
loopne
add
dec
and
aam
leave
and
faddl
rorb
enter
xchg
enter
or
enter
add
lock
adc
xor
out
mov
jb
sbb
xchg
lock
mov
adc
pop
cld
pop
mov
dec
jne
nop
mov
fmull
or
mov
adc
popf
mov
sti
lods
lods
dec
mov
jb
insl
cmp
imul
fstl
test
adc
mov
sti
enter
fcomps
adcl
push
loope
into
mov
dec
xor
adc
dec
loopne
daa
pop
mov
jns
aam
out
rcrb
cwtl
cwtl
mov
lock
mov
add
mov
sbb
movsl
subb
loop
pop
mov
sub
add
pop
adc
and
inc
ss
js
push
lret
aaa
sbb
jecxz
mov
push
push
out
es
push
test
mov
mov
push
lea
jno
in
xor
mov
or
testl
or
ja
sbb
inc
imul
mov
sub
xchg
adc
outsl
mov
jae
pushf
pop
jb
cmp
popa
inc
ds
adc
stos
xor
xchg
sbb
cltd
jae
xor
sub
sbb
sub
and
sub
daa
xchg
pop
and
sbb
push
inc
enter
sbb
adc
mov
lock
ffreep
adc
shl
lock
and
adc
outsb
in
sbb
adcl
xlat
xchg
or
roll
adc
and
scas
andl
add
sbb
out
adc
clc
out
outsb
dec
mov
adc
lods
or
adc
shr
out
dec
sbb
lods
sti
dec
sbb
adc
jb
lret
add
mov
in
int
pop
loopne
adc
pop
xchg
daa
mov
cmp
dec
and
xchg
pushf
pop
fadds
out
scas
adc
adc
push
adc
and
loop
or
andb
or
mov
shrb
sbbl
pop
rcrb
mov
inc
jb
mov
mov
mov
cmp
add
adcl
mov
add
out
lods
out
and
subl
loope
xor
xchg
add
movsb
test
xor
cs
sbbl
adc
mov
cwtl
cwtl
test
cmp
test
test
add
add
mov
dec
sub
nop
rorb
sahf
pop
test
or
xchg
in
and
movsl
cmp
mov
test
call
test
fisttps
notb
fcoml
out
xor
pop
into
adc
outsb
enter
out
adc
mov
out
push
sub
addl
pop
dec
dec
adc
pop
inc
pop
sub
xor
lds
xor
xor
daa
xchg
mov
cmp
adc
enter
mov
and
sub
xchg
mov
adc
pop
inc
pop
sub
pop
jb
add
and
pushf
sbb
les
add
add
adc
aam
jb
add
sub
jbe
insb
adc
xor
adc
adc
fs
scas
adc
dec
adc
xor
pop
dec
scas
pop
add
add
sbbl
and
xchg
out
out
adc
and
hlt
out
inc
sbb
inc
icebp
loopne
dec
lock
aad
test
icebp
in
out
mov
pop
inc
sub
pop
xor
push
icebp
mov
pop
inc
loopne,pn
push
icebp
in
outsb
enter
icebp
fsubr
xchg
mov
call
jecxz
icebp
aam
adc
adc
sub
data16
out
sbb
pop
pop
out
push
pop
and
adc
shr
push
mov
xor
mov
mov
add
inc
fcoml
out
mov
xor
mov
enter
sbb
pushf
popa
fnstsw
das
mov
sub
insl
inc
mov
adc
enter
mov
nop
test
adc
sbb
sbb
pop
js
jl
pop
loope
adc
inc
xchg
xor
xchg
mov
je
leave
adc
jb
insb
insb
shll
nop
fdivl
and
jb
leave
push
inc
leave
pusha
pop
adc
fisttpll
adc
pop
adc
fdivrs
adc
add
movsb
dec
out
out
jb
inc
je
push
pop
dec
dec
test
dec
inc
jecxz
sub
adc
insb
imul
popa
cmp
adc
fdivrs
sub
mov
loope
xor
cs
sub
and
sub
test
inc
andl
pop
xchg
sub
out
sub
and
jo
xchg
dec
scas
pop
js
jl
or
add
add
mov
popa
mov
shlb
mov
sarl
leave
sbb
push
call
scas
pop
or
and
aaa
push
sub
nop
inc
dec
push
pushf
or
and
js
mov
pop
mov
arpl
jo
lcall
fcmovb
mov
dec
scas
pop
test
lods
mov
pop
jb
fidivl
inc
shll
jns
push
push
push
pop
bnd
dec
faddp
imul
add
popa
movsl
lock
jb
nop
lock
xor
aam
xchg
xorb
push
lods
aad
xor
imul
mov
out
loopne
jl
adc
jecxz
mov
loopne
xchg
aam
fdivs
and
or
call
pop
clc
add
jne
icebp
add
sbb
icebp
std
dec
sbb
pop
cmp
inc
icebp
jg
andl
mull
pop
pusha
pop
mov
ret
insb
fnstenv
nop
pop
repnz
test
dec
cs
shr
add
icebp
test
fld1
mov
hlt
pop
pslld
lods
repnz
cmp
pop
mov
dec
dec
add
and
pop
sbb
in
and
pop
jb
or
fcoml
andb
cld
movb
xor
sbb
and
sub
neg
sub
repz
dec
push
shrb
je
jl
loope
cmp
scas
mov
stc
shrb
or
jmp
xlat
scas
enter
repz
mov
fwait
in
call
mov
adc
insb
and
nop
adc
scas
pop
repnz
dec
adc
pop
add
push
hlt
jno
or
leave
hlt
xor
xchg
imul
xchg
imul
mov
xchg
pop
mov
and
adc
pop
sbb
in
lock
imul
cs
xchg
cmc
fistpl
xchg
scas
lds
cmc
imul
shl
insb
cmc
shrl
pop
dec
pop
sbb
adc
push
xor
shl
fcmove
push
shl
gs
xchg
pop
mov
adc
inc
js
or
lea
sub
adc
xor
cmp
add
add
divb
jo
or
xchg
adc
scas
pop
or
fdecstp
cmc
rclb
adc
aam
call
shr
clc
xor
cmp
or
mov
jl
sbb
mov
xor
cmp
pop
sbb
aaa
idivl
xor
fidivl
popa
mov
mov
push
stos
out
enter
adc
pusha
adc
clc
rcrl
sbb
clc
xor
dec
xor
xchg
push
or
clc
and
js
pop
mov
mov
or
adc
mov
xchg
movsb
pop
mov
mov
test
ror
int3
push
push
mov
test
clc
jno
dec
add
jnp
xchg
push
test
stc
sbb
sbb
pusha
imul
lods
stc
adc
sub
stc
xchg
in
and
push
in
sahf
xor
stc
fidivl
jne
adc
pushf
mov
add
addr16
dec
dec
xor
jge
loop
leave
mov
cmp
cli
mov
shrb
mulb
xlat
insb
pop
js
movsb
bound
fldl
stos
or
test
lahf
sets
pop
xor
insb
nop
pushf
mov
dec
scas
shrl
push
in
push
fdivr
and
push
or
sbb
xor
xor
push
aam
es
fistps
cmp
pop
or
pop
iret
cmp
repnz
jo
aaa
xor
jb
xor
jle
inc
jne
insb
daa
inc
inc
ja
ds
cmp
add
mov
push
dec
pop
idivb
add
or
sub
jo
stc
mov
cmp
pusha
je
pop
cmpsl
jg
cmp
gs
aaa
ss
insb
xchg
fimull
mov
mov
cmp
shrb
xlat
loopne
pop
aam
pop
outsb
jg
shlb
fisubs
jae
mov
adc
in
sbb
mov
cmpsl
sbb
aaa
xchg
pop
ja
inc
cmp
cmp
cmp
data16
inc
gs
lahf
in
popa
cmp
adc
adc
inc
insb
leave
jecxz
outsb
pop
or
or
inc
pop
adc
cmpsl
sbb
and
jp
sbb
sbb
jp
ja
push
ret
inc
or
outsl
arpl
mov
sbb
sti
pop
pop
ja
bound
je
or
outsl
inc
imul
es
jns
dec
cmp
icebp
sub
mov
cmp
push
sti
sub
or
pop
xchg
xchg
popl
outsb
xor
es
insl
jecxz
jno
jmp
lea
ljmp
fadds
inc
and
xchg
fsubrl
ss
xor
fiaddl
jo
fisttps
adc
push
or
jg
xchg
cmpsl
inc
jnp
insb
jg
mov
sbb
mov
test
pop
popf
scas
jo
jae
leave
in
push
sbbl
insb
imul
pop
xor
push
repnz
lahf
push
mov
in
or
pop
dec
out
sub
in
jae
je
pop
andl
adc
notb
dec
out
jl
adc
scas
xor
inc
mov
adcl
mull
aam
shrl
popf
and
mov
insb
aas
xchg
xor
bound
xor
addr16
inc
shr
stos
dec
pop
and
insb
mov
icebp
pop
sbb
je
or
sub
xchg
mov
mov
jge
and
hlt
xchg
insb
inc
ljmp
test
pop
aaa
in
jg
gs
pop
sbbl
adc
outsl
sbb
cmpsl
mov
or
mov
dec
daa
daa
jbe
pop
fsubrl
and
inc
cli
inc
cld
jno
mov
fisubrs
and
push
pop
movaps
inc
and
pop
div
push
push
and
inc
or
faddl
xchg
or
push
adc
sbb
add
inc
mov
imul
outsl
cmp
mov
ss
cmpsl
push
xlat
cmp
cmp
xchg
fisubl
dec
lods
movsl
sbb
ja
sbb
lods
es
add
dec
adc
jns
aaa
arpl
or
xor
xor
xor
and
test
imul
das
in
fs
and
jb
outsl
adc
jbe
xor
push
mov
and
je
pop
ss
xor
and
jbe
adc
arpl
jo
lcall
push
inc
push
imul
lods
data16
hlt
scas
push
addr16
insb
or
orb
daa
push
ds
add
pop
jp
xchg
cmp
push
inc
xor
test
xor
es
fsubrp
shlb
iret
es
lods
and
ss
aas
mov
stos
sub
popf
xchg
ds
push
loopne
and
jb
push
fs
add
push
lahf
leave
andl
ss
jl
xor
es
add
pop
inc
push
inc
dec
inc
push
fimuls
inc
pop
add
bswap
xchg
push
inc
inc
dec
inc
out
dec
inc
lret
dec
inc
mov
xchg
into
pop
pushl
das
sbb
cmpsl
cs
fstps
add
jmp
pop
rcrl
xchg
pusha
or
or
dec
or
incb
sti
das
insl
imul
pop
inc
pop
xor
xor
das
es
xor
lahf
push
lods
or
pop
mov
ja
ja
adc
lea
es
mov
sub
jmp
xchg
sbb
xor
pusha
pop
jne
mov
xor
or
sbbb
inc
mov
and
dec
or
or
jmp
xchg
jne
enter
and
cmp
or
mov
push
mov
dec
add
inc
inc
cmp
dec
add
dec
or
and
sub
inc
je
loope
ja
pop
adc
fidivl
mov
insl
pop
cs
jae
add
mov
and
jnp
pop
add
adc
and
icebp
sbb
push
in
setg
rol
mov
cmp
sub
adc
mov
mov
gs
shlb
add
cld
adc
loopne
or
addb
ds
inc
enter
leave
adc
fmuls
sub
movsb
mov
imul
or
sbb
int3
pop
push
out
push
or
in
sbb
adc
int3
in
sbb
or
sarb
jmp
dec
dec
das
push
ds
shlb
and
sub
in
nop
fmuls
or
add
mov
push
adc
insl
sbb
or
sub
nop
cmp
add
and
es
jae
jecxz
mov
inc
ret
mov
into
mov
or
arpl
pop
in
lock
dec
rorl
push
dec
xchg
add
arpl
scas
pop
adc
xor
cmp
andb
inc
xor
mov
rorb
addl
testl
dec
es
sub
lods
dec
jmp
dec
daa
xorb
adc
and
mov
and
insl
div
mov
dec
les
xchg
mov
pop
imul
loope
add
sub
lods
dec
add
or
rolb
scas
dec
push
test
ljmp
and
and
inc
rorb
add
repnz
aad
add
mov
add
icebp
lock
xchg
icebp
repnz
mov
stos
pop
gs
dec
and
mov
mov
add
adc
cmp
xor
es
dec
mov
int
and
jecxz
push
nop
cmpsl
xchg
inc
cmp
xor
xor
and
sub
in
mov
xchg
and
and
shrb
leave
and
mov
fs
pop
and
dec
xor
push
xchg
dec
xor
dec
dec
inc
xor
rolb
jmp
lds
loope
sahf
sub
inc
xchg
js
scas
mov
std
nop
pop
add
push
ja
push
adc
dec
aam
movsb
xchg
mov
dec
ss
fwait
lcall
in
sarl
nop
loopne
fs
insb
and
add
aam
scas
movsb
xchg
push
enter
dec
in
xchg
int3
and
in
xor
and
and
cmpsl
mov
mov
xchg
dec
cmp
mov
pop
inc
arpl
sub
adc
pop
mov
jae
pop
push
hlt
push
mov
imul
imul
pushf
push
insb
bound
popa
lock
int
in
inc
aam
push
pop
push
inc
data16
shr
andl
pop
fidivs
cmp
stos
xor
loopne
test
hlt
pop
fisubl
outsl
int3
jo,pt
push
inc
jb
imul
pop
imul
jl,pt
dec
pop
out
pop
jae
xchg
jnp
roll
cmpsb
imul
push
call
dec
jae
lcall
pop
fwait
xlat
pop
lcall
mov
in
fbld
iret
and
into
in
xor
sbb
imul
sub
data16
cmp
pop
fs
fs
fimuls
fnstsw
clc
clc
add
push
jo
pop
pop
mov
cmpsb
push
sub
push
fmulp
cwtl
filds
fisubl
xor
in
in
pushf
push
push
jae
lcall
sub
pusha
lcall
outsb
in
mov
sarl
inc
add
push
or
pop
repz
add
cld
push
movsb
push
scas
jmp
fcomps
push
jmp
pop
cli
stc
in
push
dec
and
aam
sarb
fdivl
xchg
out
push
cmp
int3
and
pop
dec
pop
pop
imul
lcall
xor
orl
mov
cmpsb
insl
xchg
sub
rclb
aam
shll
rorl
pop
and
mov
pop
mov
lcall
add
pop
out
pop
fistl
cs
push
adc
lods
cs
xlat
mov
filds
pop
inc
push
add
push
jae
push
jbe
sbb
fadds
mov
cs
rcr
push
ljmp
sub
and
inc
dec
cmp
push
xchg
inc
add
adc
outsl
jne
das
pop
add
push
dec
nop
and
je
push
mov
leave
xlat
iret
enter
fcomp
fxch
loopne
add
dec
cmp
nop
adc
add
adc
jmp
pusha
inc
incb
popa
je
xor
sbb
test
inc
jl
or
mov
pop
push
call
movsb
push
adc
xor
pop
es
add
in
insb
shrb
jae
lret
xchg
daa
addb
subl
add
movsl
push
test
push
clc
sbb
xor
pusha
dec
aas
out
jg
imul
sub
addr16
loopne
sarl
pop
or
dec
shll
cmp
dec
shll
push
pop
pusha
push
jo
orb
cwtl
mov
shll
push
jno
lock
push
add
or
add
cmp
fs
fs
popa
jo
inc
sahf
or
outsb
cmp
fisubrs
leave
outsl
dec
je
pusha
pop
jno
push
insb
nop
inc
mov
jns
mov
cmp
or
aas
rcrl
and
xchg
clts
push
stos
cwtl
dec
testl
and
adc
xor
push
xchg
movsb
xchg
cmpsb
imul
dec
shll
xor
pusha
shll
mov
xor
xor
adc
xchg
adc
xor
or
dec
dec
dec
jnp
dec
sbb
jae
push
in
popl
push
inc
xor
jmp
cmp
adc
dec
rorb
mov
mov
pop
out
cmp
orb
or
push
and
push
orb
adcb
fidivrl
je
add
test
jg
xor
cmp
decl
test
outsb
decl
mov
or
jle
decb
adc
sti
cmp
daa
fwait
push
iret
mov
pusha
add
in
xchg
or
add
cmp
aam
in
adc
add
mov
and
sub
inc
sbb
pusha
adc
or
cmp
in
les
fadds
hlt
adc
adc
xchg
daa
dec
sahf
xor
inc
add
push
dec
jmp
leave
push
mov
paddd
mov
leave
and
in
clc
push
cmp
daa
dec
mov
and
push
mov
jns
leave
xchg
dec
call
sbb
xor
jl
in
xchg
mov
les
fmul
hlt
fidivrs
mov
notl
push
mov
push
inc
stos
lods
ss
cmp
sub
mov
xor
push
punpckldq
mov
pop
sahf
add
jg
out
ret
push
orb
adc
sbb
jnp
out
out
or
outsb
mov
fstpt
and
dec
roll
push
pop
fs
loop
push
clc
lcall
and
inc
lcall
data16
push
lcall
xchg
pushf
movsb
lcall
jmp
mov
andb
xor
clflush
pop
or
xor
or
jle
xchg
cs
dec
setbe
xchg
push
add
fs
inc
or
pcmpgtb
adc
add
sbb
xor
cmpl
or
add
sbb
add
sbb
pushf
inc
rcll
inc
push
add
push
xor
aam
fdiv
cmpsb
mov
cld
and
mov
pop
lcall
mov
xchg
sub
stc
xor
je
rcll
add
mov
mov
shlb
sti
or
xor
cmpsb
imul
cmpsb
imul
jle
or
sbb
cmp
sub
imul
bound
pop
adc
mov
call
mov
test
mov
dec
inc
aaa
push
push
xchg
pop
pop
add
outsl
xchg
stc
mov
mov
sti
cld
std
pushl
add
subb
roll
push
add
test
and
je
mov
push
add
ret
adc
add
fistps
call
jnp
xchg
and
cmp
dec
lcall
add
dec
outsl
pop
rcll
cmp
mov
xorl
pop
pop
add
imul
inc
insb
incl
pop
or
nop
pop
test
dec
sahf
cmp
push
fs
je
test
xchg
stc
in
xchg
daa
test
mov
push
jns
in
clc
hlt
xchg
sbb
in
xchg
daa
xor
inc
lock
out
sahf
cmp
repnz
out
sub
in
movsb
jmp
and
dec
mov
enter
pusha
adc
scas
xchg
mov
dec
add
dec
sbb
xor
shlb
sub
mov
xchg
outsb
push
aas
incl
push
pop
outsl
outsl
or
add
or
test
add
inc
mulb
and
xor
xchg
fistps
push
lcall
dec
push
pusha
imul
imul
pop
lcall
lretw
andb
dec
repz
xchg
xor
pop
pop
shll
and
cmp
shll
js
insl
andb
mov
dec
shll
int3
fsub
lock
adc
sub
dec
pop
and
loopne
loopne
pop
leave
stos
pusha
push
jg
pop
loopne
add
xchg
jbe
je
adc
dec
jnp
mov
cwtl
movsb
mov
dec
shll
clc
loope
addl
js
jae
lcall
jns
dec
shll
cld
jp
push
outsl
insb
jb
push
dec
mov
inc
dec
wrmsr
fadds
andl
add
or
cmpsb
ds
mov
lahf
cmp
adc
aaa
push
and
ficoms
jecxz
mov
inc
daa
movsb
push
adc
aam
or
jge
notb
add
dec
lods
dec
rcrb
and
aas
test
je
inc
mov
mov
data16
inc
js
pop
not
xchg
int3
or
and
and
outsb
pusha
lcall
push
mov
fidivs
rcrb
cltd
addb
dec
outsb
xor
pop
cvtdq2pd
push
or
js
imul
xchg
ret
int3
out
in
lahf
addr16
and
mov
jo
cld
loopne,pt
cmp
lods
je
adc
scas
pop
ret
sarb
xor
insl
int
test
pop
jmp
fsubs
ss
xor
shr
push
and
jnp
cmp
add
in
adc
add
pop
and
les
in
xchg
sahf
cmp
xor
data16
imul
pop
cs
pop
je,pt
das
pushf
into
mov
xchg
sbb
inc
mov
addr16
mov
fs
scas
addr16
mov
xorb
add
sbb
mov
pusha
data16
and
push
push
push
xchg
ss
es
fs
addr16
sbb
push
adc
sub
cmpsb
jle
pop
out
rcr
pushf
je,pn
jo
aaa
in
cltd
xor
out
mulb
pop
cld
sahf
jl
ret
pop
imul
sub
pushf
push
es
push
sub
mov
int3
pusha
out
in
ret
mov
cwtl
jle
addr16
outsb
dec
cmpsb
ffreep
cs
sub
mov
mov
cmp
cmp
push
cwtl
push
push
ds
psadbw
out
adc
inc
mov
ss
xor
mov
and
push
xchg
fiaddl
push
int3
dec
ss
lock
movsl
iret
nop
inc
outsb
jl
adc
cwtl
cmp
mulb
push
push
xchg
xorl
mov
fsubs
lea
out
cmp
xlat
push
push
or
les
inc
sbb
in
enter
push
hlt
adc
addr16
lock
jle
fidivl
scas
je
xor
inc
push
fdiv
jne
cmpsb
push
sub
cs
push
push
mov
rcll
insb
push
pop
packssdw
push
add
or
out
out
sbb
jbe,pt
xor
outsb
inc
out
lods
mov
into
xchg
push
insb
data16
xchg
xchg
scas
scas
rcrl
cmpsl
ds
cs
inc
vpmadcsswd
ds
push
jmp
in
sti
cmp
nop
push
sahf
movsb
cmpsb
in
stos
or
push
shr
xchg
outsb
xor
or
ds
idivb
mov
add
test
or
add
mov
add
push
pop
add
add
inc
mov
pop
incb
dec
add
inc
add
inc
push
dec
add
add
pop
dec
add
pop
inc
sbb
fldcw
pop
push
and
pop
dec
aaa
mov
mov
pop
stos
inc
pop
lcall
out
sbb
dec
xchg
push
loop
addr16
pop
fwait
push
inc
mov
mov
jnp
sbb
or
inc
push
pop
push
cs
in
dec
and
inc
push
cs
and
or
inc
sbb
inc
dec
mov
inc
ljmp
push
dec
call
pop
mov
sub
cmp
fildl
xor
pop
lret
jae
mov
incb
incl
iret
push
nop
and
sbb
xor
sbb
add
pop
mov
addb
jb
jnp
sar
fldl
cld
int
cmp
clc
aas
push
pop
jmp
shl
int
cld
add
pop
or
fisttpl
clts
aas
jg
push
xchg
addr16
adcl
pop
rorl
mov
pop
jo
pusha
data16
pop
in
test
add
fisubrl
jg
add
lcall
ficompl
in
xor
rolb
loopne
leave
idivl
lock
sbb
pop
pop
aas
out
outsb
push
cs
xchg
and
add
lock
xor
pop
std
mov
push
fstl
sbb
cmpsl
sub
jl
imul
jbe
bound
xor
jg
sbbb
add
je
cmpsb
cmpsb
jo
iret
rolb
and
outsb
mov
mov
xor
push
cwtl
leave
xor
xor
jg
xor
push
push
sub
aas
mov
in
mov
iret
add
add
mov
and
bound
cmp
dec
mov
fstpl
shll
lret
cmpsb
cmp
pop
std
clc
lock
push
daa
xchg
aas
rcrb
dec
add
fcmovnu
movsl
pop
cs
pop
outsb
clc
popl
movsb
sbb
adc
in
je
add
mov
lods
sub
mov
inc
push
push
cs
mov
jle
addr16
sub
pop
in
push
ss
les
test
xchg
mov
in
sub
push
pop
cs
push
popf
insl
add
xchg
fadds
push
test
xchg
lret
cmp
fsubrl
aaa
sbbb
pop
lock
jno
mov
cs
inc
in
std
or
pop
sbb
push
pop
cs
lret
sub
inc
add
inc
addl
popa
push
pusha
xor
sbb
push
push
mov
outsl
aas
push
add
ret
sar
imul
notb
clc
fstpl
jl
cs
lret
in
cmp
sbb
or
test
sti
aaa
xchg
pop
shl
xchg
sub
data16
add
out
inc
jbe
push
imul
or
add
rolb
and
frstor
add
xor
add
mov
mov
adc
daa
sbb
mov
fnstcw
repz
and
cs
clc
xor
and
or
push
adc
cmp
clc
dec
push
outsb
mov
movb
mov
lret
adc
jbe
shlb
push
sbb
mov
dec
addl
mov
add
es
mov
push
hlt
sbb
mov
add
mov
lahf
adc
daa
or
cmp
inc
and
mov
xor
and
xchg
daa
inc
push
out
push
movsl
daa
dec
sub
aas
push
cmp
inc
xor
mov
sub
fnstsw
aas
js
dec
and
jnp
xchg
lds
push
and
and
cmp
jae
testl
dec
pop
push
dec
mov
xchg
cmp
push
popa
fldl
daa
mov
mov
push
and
push
mov
mov
mov
daa
mov
fildl
mov
inc
es
xbegin
stos
inc
push
addr16
adc
add
or
div
xchg
adc
call
inc
or
mov
out
out
sahf
scas
dec
push
pop
daa
or
cmp
jns
aad
push
pop
dec
dec
mov
cmp
mov
out
in
push
adc
xchg
adc
xchg
sub
add
mov
insl
sti
add
clc
daa
add
daa
xchg
mov
daa
or
mov
daa
test
pop
push
aas
adcw
fisttps
ss
arpl
jns
pop
fbld
ds
rorl
out
insb
dec
fisubs
clc
add
lahf
cmp
outsl
sarb
lahf
cmp
out
cmp
and
daa
and
pusha
insl
push
fisubs
int
jb
mov
lret
out
mov
lcall
mov
push
daa
dec
add
test
xor
in
repz
insb
clc
push
mov
test
adc
fbld
xchg
in
inc
push
fcoml
xchg
testl
mov
imul
pop
repz
xor
xor
cmpsb
arpl
aas
cmpl
mov
fistps
outsl
daa
push
inc
sub
push
xor
and
andb
sub
and
fs
push
je
jle
shl
stos
inc
push
shll
push
inc
mov
daa
and
and
inc
ds
aas
clc
fsubrs
jno
pop
pop
lock
add
sbb
xor
dec
mov
pusha
xchg
pop
mov
xchg
dec
stos
xor
ja
pop
inc
lds
movsb
xchg
ret
jecxz
xchg
adc
daa
out
or
sub
adc
cltd
mov
add
xchg
sbb
dec
sbb
push
mov
jge
daa
data16
push
jl
and
clc
or
lods
inc
jne
sbb
daa
fcoms
daa
in
mov
mov
xor
dec
xor
dec
daa
popa
mov
mov
daa
dec
daa
clc
dec
shrb
dec
sarb
dec
lret
push
imulb
dec
rorb
sbb
sub
xorl
cltd
cltd
call
lds
sbb
out
mov
cmp
xor
repz
and
movsl
sbb
xor
mov
popf
lret
dec
or
push
fmull
sbb
push
and
dec
andl
ljmp
push
xchg
pop
push
lds
mov
pop
adc
cmp
and
cmp
into
push
add
call
scas
addl
es
jne
mov
imul
nop
daa
fcmovnbe
sbb
fs
aaa
into
aaa
movsb
mov
inc
cltd
and
ret
cltd
stos
sub
xlat
sub
out
int3
jb
insb
mov
or
js
sbb
daa
jecxz
addr16
sbb
sbb
or
xor
push
and
push
dec
jmp
shlb
lcall
clc
adc
and
aas
lahf
pop
push
push
subb
inc
repnz
iret
adc
fcom
stos
push
insl
add
mov
addr16
mov
outsl
cmp
paddb
jbe
add
js
xor
pop
mov
lock
sbb
or
out
xchg
outsb
cltd
into
add
out
adc
or
repnz
sub
shrl
or
push
ja
adc
xor
sub
js
push
pop
jae
push
ds
movsl
xorl
ret
pop
add
sbbb
jg
or
ret
outsl
add
insb
add
cmpsb
adc
xor
or
dec
imul
dec
inc
push
arpl
outsb
add
add
push
cmp
addb
sbb
pop
insb
mulb
pop
gs
lods
cmp
insl
dec
je
xchg
and
addr16
into
fimull
and
jbe
xchg
inc
adc
xchg
xchg
add
jne
sbb
arpl
dec
push
push
pop
xlat
adc
lods
dec
jae
sbb
and
push
push
imulb
mov
jb
jle
push
sub
das
popa
ss
je
mov
loopne
push
xor
outsb
cmp
pop
push
arpl
addr16
adc
add
imul
cmp
insl
jo
das
mov
in
ja
jbe
mov
subl
insl
pop
pop
repz
sbb
movsb
mov
scas
adc
stos
cmp
mov
push
xor
dec
xchg
sbb
pop
dec
addb
pusha
sub
mov
ud2
mov
rcr
scas
pop
inc
push
cli
or
aas
movsl
fidivl
adc
in
arpl
fisttpl
lret
dec
push
ret
imul
or
push
insb
xchg
dec
and
or
sbb
push
inc
subb
adc
push
adc
push
inc
sbb
push
pop
or
mov
push
lahf
xchg
inc
mov
or
inc
and
or
adc
sbb
gs
insb
mov
adc
inc
lcall
add
push
dec
sbb
out
mov
inc
add
jbe
push
add
or
pop
daa
push
shll
fiadds
mov
xor
inc
jecxz
cmp
or
ss
rcrb
jnp
jo
insb
outsb
arpl
sbb
adc
imul
add
shll
inc
or
daa
out
pop
adc
xchg
das
dec
fwait
insb
stos
or
inc
pop
stos
or
jg
dec
cmp
data16
or
sub
or
and
stos
sbb
popa
lahf
cmp
add
dec
daa
push
dec
dec
jbe
pop
push
mov
jb
shlb
jbe
mov
adc
and
jmp
adc
lret
sbb
jle
jg
push
test
pop
and
xchg
imul
jno
popa
adc
jp
lock
cmpsb
mov
push
add
roll
sbb
bound
cmpsb
addr16
mov
data16
sub
insb
push
out
lods
loopne
mov
out
ret
dec
xlat
out
sbbb
jp
rcll
jne
push
push
jmp
pusha
rorl
jp
ret
test
andl
add
xchg
bound
fnstcw
fisubl
inc
ret
test
or
stos
mov
daa
pop
rorl
or
bound
outsb
jecxz
scas
insl
inc
adc
setg
cmp
adc
scas
cmp
pop
push
push
sub
mov
jp
mov
add
sbb
mov
pop
and
fadds
aas
shrb
cmp
inc
or
sbb
insb
adc
push
or
sub
pop
sbb
imul
mov
insb
and
pop
jo
in
push
insl
xchg
and
add
fdivrl
push
xchg
add
scas
adc
fwait
es
add
add
pop
movsl
dec
xor
sbb
inc
rcrl
cs
arpl
push
inc
dec
arpl
inc
divl
add
push
push
xor
mov
push
adc
outsb
sti
dec
fidivrl
dec
or
add
push
push
jae
add
sbb
cmp
aaa
jecxz
mov
fiaddl
or
dec
add
mov
subb
cmp
addl
or
data16
fisttpll
mov
jnp
cs
add
ljmp
cmp
xor
dec
out
test
shll
bound
push
out
mov
out
jns
sbb
cmp
adc
and
mov
shl
mov
frstor
sbb
cmp
inc
cs
push
push
sbb
test
jb
jbe
xor
pop
jo
fs
inc
aaa
dec
xor
bound
mov
movl
mov
mov
daa
xlat
add
dec
xor
pop
add
lcall
fwait
repz
mov
pop
fcomp
data16
into
aas
insb
lds
add
sbb
ds
aam
sbb
jmp
nop
push
ret
jbe
insb
mov
mov
test
out
iret
pop
sbb
mov
ret
outsl
mov
movsb
jae
cmpsl
popa
push
imul
pop
push
aaa
scas
sbb
and
iret
dec
out
push
push
add
ret
jae
fsubrs
sbb
push
jae
daa
rclb
shrl
or
pushf
xchg
push
xchg
test
adc
dec
dec
push
pusha
push
push
and
sahf
sbb
sub
and
imul
mov
jbe
popa
pop
fdivs
jecxz
aaa
sub
enter
pop
mov
and
sysenter
je
ret
jnp
cmp
scas
sbb
arpl
shrb
in
jo
cmp
bound
dec
imul
jmp
sbb
push
or
frstor
shrb
das
inc
imul
movaps
mov
test
les
adc
shrl
mov
lock
mov
dec
out
inc
xor
or
sbb
cmp
pop
mov
lcall
sub
adc
jp
inc
jle
pop
inc
push
sbb
sbb
mov
repnz
fsubrs
pop
outsl
jae
mov
xchg
mov
adc
cs
add
pop
sub
inc
daa
sarb
mov
sub
lahf
orl
pop
arpl
adc
jne
outsl
insb
jmp
and
popa
inc
adc
out
sub
sbb
das
add
push
dec
lcall
loop
adc
pop
js
cs
fwait
gs
add
aas
mov
daa
daa
daa
aaa
mov
lahf
mov
fs
sbb
sbb
pop
dec
lahf
pop
repz
insb
push
bound
adc
push
push
and
fstpl
inc
or
sbb
cmpsb
sub
jne
fwait
dec
add
jo
mov
mov
mov
xor
cmp
test
test
push
xchg
cmp
sbb
mov
lods
pop
in
jae
push
repz
push
test
jne
sub
jno
adc
add
mov
push
and
inc
mov
outsl
lret
outsb
lods
or
dec
inc
xor
xchg
and
stos
scas
ss
cmpb
repnz
aam
xchg
ficompl
pop
or
scas
ret
mov
dec
and
push
cmp
jo
imull
mull
pop
jo
das
jae
fs
xchg
fcomps
xchg
and
pop
daa
pop
insl
xlat
xchg
mov
mov
push
shrl
jbe
ljmp
sbb
in
mov
pop
cmp
adc
pop
or
addr16
cmp
pop
xor
js
sub
and
push
cs
loop
xchg
cmpl
nop
sub
push
jecxz
adc
xor
xlat
cpuid
imul
push
xchg
mov
fmuls
mov
shl
aas
test
imul
mov
lahf
aaa
test
decl
les
add
xlat
and
movsl
mov
add
or
movsb
pop
test
dec
inc
add
call
outsl
shlb
or
pop
pusha
mov
pop
add
add
xor
xor
rol
rolb
shrl
dec
sub
push
lods
pop
sub
bound
dec
pop
jns
fisubs
negb
gs
cwtl
or
sub
mov
ljmp
mov
jae
push
add
adc
mov
lods
vmovaps
arpl
popf
sbb
fadds
es
jns
jne
dec
rcl
and
xchg
gs
pop
pusha
rorb
cmpl
inc
cwtl
cmp
stos
sbb
adc
in
movb
inc
lea
aas
jae
sub
enter
jg
stos
dec
stos
imul
arpl
stos
mov
xchg
jns
push
jb
movsb
shlb
stos
mov
sub
addr16
mov
js
push
mov
rolb
daa
scas
push
pop
pop
in
mov
pop
mov
mov
pop
xchg
ret
pop
iret
push
mov
dec
mov
dec
shll
xlat
sub
rcll
push
imul
xor
and
pop
push
gs
fxch
fwait
push
push
push
push
mov
add
xchg
and
sbb
xchg
lcall
daa
or
pop
xchg
aas
aam
in
mov
inc
and
sub
jnp
sbb
pop
push
stos
lds
mov
stos
or
lcall
push
add
jbe
arpl
dec
mov
cmpsb
add
xchg
inc
cs
loopne
push
and
inc
lods
and
or
add
mov
or
pop
ds
mov
adcb
sbb
pop
fbld
jb
fldt
xor
outsl
pop
out
das
mov
loopne
inc
or
loope
ss
fistl
ljmp
iret
pop
subl
repnz
xchg
js
mov
loopne
dec
xlat
mov
mov
lods
pop
ret
repz
push
pop
pusha
ret
aaa
push
mov
jo
loope
cmp
mov
dec
sub
mov
cmc
or
mov
gs
inc
lea
cmp
mov
repz
inc
sub
pop
inc
xor
in
rolb
push
lods
popa
xlat
stos
mov
scas
aam
push
and
xor
inc
adc
add
add
in
pop
adc
mov
out
mov
out
dec
mov
adcb
xor
out
or
les
repz
mov
mov
pop
or
mov
mov
push
add
cmp
pop
mov
insb
shrl
adc
push
dec
addl
push
in
les
inc
sbb
fwait
stos
xchg
ja
cmp
mov
arpl
sub
xor
inc
push
push
inc
xchg
mov
ljmp
cmp
sub
jmp
pusha
dec
movsb
scas
divl
adc
mov
iret
pop
adc
pop
xlat
pop
push
push
or
xlat
pop
push
shlb
push
cmp
mull
push
sub
xchg
mov
push
xor
and
data16
and
dec
pop
daa
test
push
dec
mov
aad
or
je
add
pop
fcmovb
adc
sub
pop
jg
jbe
test
pop
aad
fcoms
sub
push
adc
mov
test
lahf
cmp
outsb
mov
mov
addb
ja
ret
xchg
lock
cmpsl
or
or
lds
sub
xor
pop
icebp
push
dec
sbb
cmp
les
popa
push
popa
sub
jae
xchg
xor
stos
jo
push
adc
inc
xor
xchg
adc
test
outsb
mov
bound
test
ret
scas
inc
stos
cmp
xchg
mov
mov
imul
sbb
fistps
add
mov
mov
add
test
or
pop
inc
jnp
dec
lcall
insb
xchg
dec
in
lods
xchg
jg
add
mov
sub
das
ds
test
mov
or
pop
add
aam
push
outsl
adc
dec
or
mov
rorl
mov
push
mov
sub
rorl
mov
cs
mov
or
lret
dec
adc
outsb
jo
lea
pop
or
pushl
test
int
adc
es
pop
lock
arpl
movl
pop
ret
inc
sahf
idiv
mov
ret
mov
pop
fwait
cmp
pop
sub
xchg
iret
push
add
insl
adc
adc
push
xor
popa
sti
data16
dec
sbb
xchg
gs
adc
xchg
push
lock
adc
cmp
mov
inc
mov
push
addr16
adc
popf
dec
je
nop
subb
xchg
dec
popa
cwtl
jns
add
adc
roll
ljmp
pop
loopne
sub
push
adc
lods
adc
xor
cmp
mov
adc
es
or
mov
iret
and
dec
or
les
cs
push
ficoms
outsl
dec
adc
inc
popl
adc
or
add
jge
add
sub
testl
insb
inc
push
dec
sub
dec
dec
imul
jnp
add
or
jns
xlat
mov
jbe
add
adc
daa
xchg
mov
je
xor
add
imul
sbb
inc
insb
and
in
sbb
xor
insb
mov
xchg
mov
aas
jns
stc
sbb
push
addr16
movsb
into
int3
sbb
xorl
lret
push
mov
mov
pushf
sub
js
adc
hlt
mov
xchg
push
or
ds
add
and
sbb
push
shlb
mov
movsl
cmp
fadds
test
xchg
cmp
mov
test
sbb
mov
mov
push
inc
dec
adc
fwait
adc
ret
mov
das
bndstx
jae
data16
adc
repz
jae
xor
test
adc
cmpl
movsb
pop
andb
add
or
insb
mov
jo
ds
jo
das
ja
inc
jb
jb
cmp
xor
loop,pn
xor
push
jae
mov
cld
in
sbb
push
insb
mov
xor
or
jbe
push
hlt
adc
add
cmp
std
xor
outsl
out
imul
lds
jne
out
paddusb
push
aad
pop
add
rolb
or
cmp
daa
push
nop
add
add
add
add
inc
add
add
mov
add
and
cs
dec
clc
lret
aam
push
insb
shlb
push
and
xor
mov
push
insb
and
nop
flds
jb
mov
mov
insb
inc
loop
adc
sub
arpl
inc
movsl
inc
movsb
jno
data16
cmp
es
dec
add
mov
imul
outsb
cltd
mov
insb
inc
and
sub
scas
push
nop
insl
and
fldcw
mov
test
sbb
clc
outsb
fs
sbb
push
lcall
push
pop
ficoms
jno
adc
mov
aad
inc
pop
fildll
sbb
adc
mov
push
mov
xlat
jle
xchg
dec
sub
push
outsl
ffreep
or
into
inc
outsl
imul
sbb
jb
addb
sbb
sbb
imul
sub
inc
xchg
sti
cmp
outsb
insb
les
mov
ret
pop
rol
sbb
mov
dec
imul
pop
add
dec
add
push
and
lret
and
add
stos
inc
fs
gs
push
and
push
xchg
push
or
sbb
inc
daa
push
popf
imul
fldenv
insb
data16
dec
cltd
flds
enter
sbb
test
rcrl
in
lds
mov
mov
movsl
sbb
and
lret
es
push
and
inc
and
outsb
rcr
imul
pop
insl
faddl
ficompl
vcvttps2dq
jae
inc
jnp
out
lods
dec
mov
mov
es
mov
adcl
mov
push
pop
xor
sbb
imul
movb
pshufw
mov
pop
psrld
btc
aaa
pop
jp
fs
push
dec
sub
cmp
adc
and
add
or
jno
arpl
xchg
xlat
sbb
loope
or
jne
ret
outsb
scas
dec
xchg
ret
dec
insb
fndisi(8087
sbb
xor
add
mov
icebp
xor
test
loope
imul
sbb
arpl
sbbb
sbb
xor
shrb
lock
cmp
mov
sbb
inc
lock
icebp
pop
add
mov
xor
push
orl
rcll
rolb
popa
jno
fwait
lds
outsl
sbb
xor
inc
sbbb
cmp
inc
adc
jo
test
fcmovb
jbe
sub
or
test
mov
mov
and
gs
ja
icebp
roll
sbb
in
cs
jo,pt
dec
push
je
ja
adc
movsl
xchg
xor
inc
jl
bound
out
push
push
add
jl
std
push
dec
jno
push
push
xor
mov
push
negb
inc
inc
pop
jae
push
mov
pop
sbb
in
mov
imul
push
sub
push
xchg
pusha
xchg
in
lds
push
inc
inc
andb
dec
add
inc
jae
mov
mov
inc
outsl
popf
pop
movsb
inc
fisubl
mov
sub
ja
outsl
lret
or
and
outsl
ds
mov
sub
ss
sub
testb
xchg
ja
pop
inc
shrl
inc
sbb
mov
jbe
inc
or
daa
or
mov
jbe
cmc
mov
sub
and
mov
shlb
lock
mov
pushf
inc
dec
mov
dec
jb
pusha
insb
or
daa
xor
aaa
nop
cltd
out
je
mov
mov
dec
mov
or
fwait
sbb
jne
dec
push
xor
cmp
flds
cmpsl
jbe
mov
lret
inc
dec
inc
movsl
sub
dec
and
dec
mov
mov
jl
imul
xor
inc
inc
add
or
inc
imul
adc
add
push
sbb
add
and
dec
rclb
imul
add
mov
pusha
push
loopne
push
push
jae
ss
and
lret
inc
sub
mov
test
shrl
icebp
sbb
jne
mov
pop
movsb
popa
sbbb
cld
lods
inc
fistl
xor
adc
mov
or
shll
fcmovnb
popa
sub
push
mov
cmp
mov
or
xor
sbb
mov
fildl
xor
insl
sbb
mov
dec
jmp
enter
adc
push
sbb
xchg
sub
and
lret
ret
dec
push
insl
sbb
jno
inc
pop
or
dec
data16
adc
movsb
lods
movsl
std
stc
daa
ss
add
xchg
mov
es
push
daa
adc
jnp
sbb
or
jmp
jo
adc
sbb
push
rclb
popa
xor
test
add
sbb
add
jl
add
ljmp
mov
adc
call
addr16
cmp
push
test
insl
dec
sub
xchg
mov
push
mov
sti
and
dec
loope
fdivl
test
mov
fidivl
shll
es
popa
inc
pop
std
jbe
cmp
imul
mov
xor
mov
and
push
pop
loop
cmp
inc
push
pop
cmp
or
enter
add
test
test
fdivrl
push
xor
or
rorb
jbe
lret
jne
daa
dec
fistl
scas
rcr
lcall
sbb
dec
mov
xchg
push
test
or
sbb
mov
mov
aad
and
jle
jb
pop
dec
mov
sbb
jno
movsb
fldenv
dec
jne
leave
out
mov
addr16
fdiv
mov
xor
test
ret
add
add
gs
testl
fbstp
jo
inc
icebp
clc
cmp
insl
add
add
lcall
and
dec
adc
dec
or
xor
xor
dec
inc
sub
adc
sbb
pop
ljmp
xor
nop
sub
bound
adc
orl
mov
mov
sbb
imul
add
pushf
fisubrl
xchg
sbb
push
dec
or
lods
jb
xchg
mov
fisttpl
ret
and
push
push
jmp
lods
pusha
sti
push
jmp
arpl
mov
or
movl
sub
sbb
pop
bound
popa
inc
sub
jnp
sbb
shlb
push
outsl
movsb
inc
addb
arpl
xchg
sbb
pop
fsubs
bound
or
cmpsl
rcll
jecxz
adc
mov
dec
lds
notl
test
loop
stos
es
jne
pusha
pop
mov
cmp
fisubrl
xchg
data16
dec
int3
push
adc
into
shrl
insl
cmpl
jno
xchg
cmc
push
xor
and
ret
je
sbb
mov
sub
adc
test
dec
imul
sub
les
push
adc
insl
xchg
imul
xchg
dec
les
cmp
loopne
arpl
imul
push
mov
in
and
fnstenv
aad
xor
cmp
xchg
daa
sbb
sub
and
xchg
aam
inc
mov
lods
adc
inc
xor
pop
jb
popf
or
inc
dec
cmp
inc
pop
mov
push
std
out
orl
or
fcomps
shll
jne
push
mov
fs
push
inc
inc
inc
push
mov
stos
mov
imul
rcrl
dec
dec
pop
and
push
bound
dec
and
mov
sbb
pusha
add
or
push
cli
sub
and
inc
mov
mov
pop
xchg
stos
add
adc
aaa
test
push
xchg
cltd
mov
sbb
adc
das
mov
inc
int3
outsl
cmp
jmp
xchg
arpl
inc
adc
sbb
sbb
cs
inc
inc
adc
mov
sbb
and
add
inc
insl
inc
sbb
xor
and
pop
add
sbb
mov
sbb
xchg
pusha
sbb
push
call
inc
fs
mov
jo
mov
mov
pop
sbb
mov
lods
sbb
add
data16
dec
inc
ss
pop
mov
and
jbe
lods
and
pusha
mov
sbb
stos
cmpsl
mov
push
xor
add
xor
and
int
test
adc
jle
les
ss
adc
push
xor
pop
aaa
rolb
push
jo
add
add
push
inc
shlb
jno
jg
push
and
std
mov
je
sbb
out
scas
and
dec
out
and
push
jmp
out
cmpsb
jle
mov
jmp
idiv
add
adc
adc
or
add
or
or
adc
cmovb
in
jg
sbb
add
or
add
or
aas
insb
sub
or
or
lock
add
inc
adc
inc
xor
sbb
incb
cmp
or
or
add
push
push
adc
pop
push
or
or
or
or
or
jg
pop
sub
or
and
sbb
sbb
inc
push
dec
and
lock
or
std
decl
or
or
sysret
and
test
add
or
push
es
sub
sub
adc
sti
sti
fisttpll
push
cmp
adc
push
jns
push
adc
sub
sti
negl
xor
adc
gs
push
pop
adc
mov
cmpsl
sub
inc
pop
pop
and
sub
sbb
arpl
std
push
add
lea
outsb
lock
or
pop
add
adc
aas
adc
push
push
pop
adc
pop
lock
pop
adc
push
sbb
adc
sbb
adc
dec
sarl
or
or
adc
or
fsub
pop
jl
pop
sbb
xor
sub
dec
adc
add
jg
cmp
cmp
add
or
push
mov
sub
sbb
or
adc
and
sti
out
decl
sbb
jp
lock
pop
add
xchg
add
or
push
rolb
push
sbb
lock
add
or
pop
push
adc
adc
or
out
push
cmp
subl
sub
orb
stos
pop
adc
or
out
out
sbb
inc
or
adc
sub
jne
or
lock
add
xchg
adc
mov
loop
adc
push
adc
call
add
loop
lods
or
and
or
adc
add
and
and
push
and
outsb
mov
leave
cmpps
push
lea
push
adc
adc
sbb
adc
adc
xor
cmp
adc
push
adc
sbb
sbb
cmp
and
sbb
arpl
xlat
andb
push
push
and
sbb
adc
or
mov
or
push
or
adc
inc
or
sbb
or
lret
cmp
sub
adc
aad
add
int3
pop
ret
add
mov
das
sbb
lock
or
adc
or
push
mov
add
ss
sub
outsl
dec
dec
jae
cmp
jg
sbb
adc
xor
adc
cmp
out
adc
ss
adc
stos
or
jae
aaa
lock
add
inc
add
subb
das
mov
inc
push
pop
call
dec
sbb
sbb
adc
adc
xor
dec
aad
add
mov
and
sbb
adc
mov
sbb
cmp
sub
sbb
paddd
sbb
roll
or
adc
mov
dec
sbb
cmp
cmp
mov
adc
pop
in
inc
push
sub
adc
pop
mov
adc
das
xor
aas
pop
sub
nopl
addr16
add
jnp
pop
or
or
jns
add
add
sub
and
and
lcall
push
pop
pop
push
xor
push
adc
cmp
sub
and
sbb
push
sti
adc
pop
adc
sbb
push
adc
fistl
adc
or
push
pop
sbb
adc
xor
sar
pop
adc
adc
lock
sub
push
inc
or
subb
and
push
jecxz
add
aas
inc
popa
sbb
add
jnp
sub
and
jo
jnp
adc
or
imul
push
fmull
or
jg
pop
ficomps
fdivrs
jl
ss
sbb
jge
sbb
ss
push
add
add
in
adc
lcall
aad
scas
sbb
insl
inc
xchg
sbb
and
push
movhps
cmp
sub
sub
add
jg
adc
adc
or
xor
stos
xor
cmp
loopne
push
out
add
lahf
sbb
sub
iret
leave
jle
std
jg
lock
add
inc
sbb
jno
inc
adc
pop
cmp
pusha
xlat
test
pop
push
pop
cmp
pop
pop
adc
aaa
imul
add
sub
leave
jle
sbb
clc
add
dec
aaa
imul
testl
xor
mov
addr16
inc
sbb
testb
or
add
ret
arpl
pusha
dec
movsl
lock
xchg
and
lock
jno
add
adc
sbb
and
fbld
add
cmpl
cmp
sbb
cmp
pop
push
xor
pop
dec
sti
lock
add
adc
in
aam
push
cmp
inc
sbb
push
enter
sub
pop
dec
dec
push
lock
add
xor
lock
jmp
pop
push
outsl
pop
adc
jle
std
incl
andl
or
loopne
or
add
aad
movlps
or
lock
stos
push
add
add
adc
jmp
jnp
enter
sbb
adc
divb
sbb
or
test
sahf
cmp
sbb
jg
sarb
cmp
and
xor
dec
cmp
lcall
cld
dec
mov
lock
lahf
add
popf
pop
and
or
and
push
out
cmp
pop
mov
jp
pop
cmp
decl
adc
pop
inc
mov
or
xchg
and
inc
sbb
sbb
adc
add
add
adc
dec
or
pop
shlb
pop
xor
hlt
add
insl
lea
push
push
pop
fisttps
or
or
add
movsl
mov
cmp
loopne
sbb
adc
sbb
or
subb
movsl
add
ljmp
orl
sub
das
cmp
inc
or
sbb
sbb
pop
aaa
outsb
or
pop
or
call
popa
push
adc
and
push
adc
mov
or
or
sub
cmp
add
scas
xor
or
or
or
adc
add
adc
sub
dec
and
mov
or
inc
push
gs
mov
jg
scas
adc
popa
mov
pop
and
movb
bound
jge
push
sbb
inc
jae
pop
pop
jno
dec
sbb
mov
mov
lret
adc
daa
mov
sbb
or
jp
test
xchg
adc
incl
inc
enter
push
sbb
adc
test
sub
push
adc
lahf
sbb
pop
rcrl
arpl
dec
push
pop
pop
adc
sub
and
jno
sbb
sbb
jb
mov
mov
add
xchg
inc
and
outsl
lods
xchg
dec
inc
adc
jo
add
sub
sbb
pop
and
sbb
adc
add
testl
xor
dec
pop
and
popa
add
sub
adc
sbb
ljmp
adc
aas
std
decl
inc
add
and
or
sbb
jne
jle
adc
or
scas
add
or
add
incl
or
and
push
gs
adc
sbb
and
lcall
loopne
inc
cltd
iret
incl
jbe
sbb
dec
jg
jno
test
dec
cmp
jg
pop
pop
sub
dec
push
sbb
sub
sub
or
push
ljmp
sub
push
ja
cmp
sbb
inc
push
cmp
das
push
inc
sbb
imul
mov
xor
and
cmp
push
lock
add
sti
add
pushl
loopne
ss
push
sbb
cmp
mov
pop
push
js
push
pop
xor
mov
pop
cmp
pop
pop
out
out
adc
pop
into
mov
xchg
cmp
shlb
pop
xor
mov
jo
push
adc
lock
cmp
add
and
push
mov
add
dec
dec
cmovns
sbb
xor
jl
adc
mov
dec
and
call
cmp
and
pop
inc
add
push
lock
inc
push
inc
adc
and
add
add
test
xor
sub
and
decl
test
jg
push
sbb
adc
incl
cmpsl
pop
mov
scas
inc
and
and
loopne
sbb
and
and
jo
leave
mov
pop
ret
or
incl
pop
cs
sub
jmp
add
or
adc
sbb
es
adc
sti
aas
clc
jmp
add
mov
or
sub
push
xchg
add
icebp
inc
pop
jne
sbb
lock
push
cmp
bound
pavgb
aas
xchg
adc
or
cmp
or
add
push
or
or
push
sbb
xor
cmp
jl
cld
aas
or
add
mov
or
adc
inc
add
and
sbbl
enter
ret
mov
jge
daa
cwtl
andl
sbb
cmp
pop
movsl
sbb
loopne
push
jnp
adc
or
sub
arpl
sbb
in
sbb
mov
inc
xchg
dec
sbb
aas
sbb
or
pop
jns
imul
add
mov
push
dec
popa
xchg
push
daa
cwtl
push
test
ret
pop
push
sbb
push
xor
addr16
fwait
cmp
aad
sar
pop
sti
jmp
sahf
inc
push
push
aas
ss
arpl
aad
and
insb
lock
rcrl
mov
paddsw
cmp
push
or
test
sub
sbb
pop
or
add
dec
push
std
and
je
xchg
add
adc
cmp
nop
mov
sub
or
jg
or
and
cmpsl
movd
mov
sub
rcrb
pop
push
aad
lcall
xor
xor
jns
mov
arpl
inc
lock
jnp
inc
and
dec
mov
push
and
dec
fwait
inc
jnp
loopne
adc
xchg
adc
sbb
push
dec
sbb
cmp
or
aaa
push
or
add
push
pop
pusha
dec
cld
xlat
inc
sub
jp
es
add
ljmp
aas
sbb
je
sbb
xchg
jae
push
mov
data16
movsb
incl
dec
es
xor
and
jns
insl
mov
cmp
and
xor
add
lods
das
aas
ret
push
and
mov
sbb
add
sub
inc
add
sahf
adc
dec
add
xor
mov
sub
int
pop
pop
jl
jne
jne
paddw
or
jle
and
pop
lock
das
push
movsb
adc
or
cmp
push
lock
sbb
push
jg
cmp
pop
jge
lock
pop
sbb
test
mov
pop
enter
jnp
test
jp
ss
push
lock
xchg
push
xor
or
push
sbb
lods
add
adc
inc
sbb
add
cmp
adc
adc
ss
into
mov
sbb
pop
fadds
and
sbb
cmpsl
or
push
or
aas
adc
insb
std
mov
aad
or
add
inc
std
add
loope
cmp
dec
movups
add
inc
scas
mov
sbb
push
mov
sar
icebp
adc
sbb
sbb
sub
sbb
inc
and
repnz
inc
mov
sub
pop
sub
or
icebp
lcall
pop
dec
rdpmc
adc
mov
adc
dec
aas
and
push
jnp
xchg
std
jg
sbb
inc
es
cmp
sub
pop
and
pop
and
dec
sub
imul
sub
inc
adc
notb
add
or
sbb
add
xor
add
aad
jbe
ss
mov
add
add
cmp
ljmp
push
adc
mov
add
xchg
adc
jg
lds
sub
mov
and
push
pop
lods
adc
shrb
adc
adc
or
arpl
andl
or
cli
fistps
or
or
or
es
aas
mov
adc
lcall
pop
mov
or
adc
add
insb
pop
xor
imul
or
jmp
and
xor
jmp
and
fnstcw
pushl
dec
insb
or
mov
fs
or
or
adc
inc
adc
testb
pop
adc
cmp
jmp
or
inc
inc
and
insl
inc
enter
lock
add
dec
seta
mov
imul
push
mov
cmp
add
xor
lcall
and
pop
cmp
sub
cmp
lahf
dec
push
sbb
popa
cmp
sbb
inc
sub
dec
arpl
cmp
or
stos
push
clc
add
roll
push
cs
stos
sbb
fistl
pop
les
push
dec
add
jmp
movsl
call
adc
cmp
unpcklps
sahf
clc
aas
negb
jmp
push
xor
fs
pop
pop
pop
lock
pushf
mov
add
or
push
es
lock
sbb
mov
and
xchg
movhps
sbb
sarb
leave
jmp
and
pop
dec
xor
and
aaa
sbb
adc
sbb
cmp
cmp
pop
aas
sbb
push
arpl
test
adcb
sub
std
loope
bswap
std
sbb
pop
sbb
and
push
int
and
int3
or
jecxz
push
mov
fnstsw
sub
lea
icebp
push
sbb
push
push
insb
add
and
and
pop
sbb
pop
adc
adc
ja
out
fstl
test
mov
sbb
sub
fidivl
adc
or
and
lds
cmp
add
daa
sub
adc
sub
movsb
and
addr16
leave
mov
sti
adc
adc
add
or
push
adc
push
push
lahf
push
lock
loope
or
roll
jne
adc
sbb
push
pop
sub
adc
pushl
push
and
das
push
cmp
cmp
sub
test
or
mov
xor
testl
std
jmp
repnz
mov
fnsave
mov
pop
jecxz
test
fmul
mov
imul
and
add
sub
pshufw
cmpsl
jg
adc
ss
and
sbb
push
inc
adc
dec
add
jle
clc
lcall
cmp
adc
lock
add
push
add
loope
mov
mov
insl
sbb
jmp
bndstx
dec
sbb
sub
sbb
lock
jnp
mov
push
ss
cs
or
call
push
decl
lock
es
add
sbb
or
push
and
sub
push
adc
push
cmpb
and
adc
pop
adc
decl
jmp
push
sbb
mov
lods
or
andb
adc
aaa
pop
cmp
or
pop
adc
ud2
pop
and
pop
or
lock
adc
and
inc
mov
fstl
outsl
lock
add
pusha
fcomi
adc
or
pop
push
pop
fisttps
fchs
adc
and
or
lcall
mov
inc
sbb
sbb
inc
sbb
jbe
xor
sub
rcrb
push
or
inc
mov
call
push
test
lods
jo
sub
push
dec
inc
ucomiss
test
sbb
sub
pop
or
add
nopl
add
outsl
lock
add
lock
stos
in
xor
or
movsbl
adc
and
mov
sub
add
cmpsl
sar
popl
leave
sbb
and
mov
inc
add
add
jmp
pop
mov
pop
and
adc
das
xchg
or
add
lock
xor
sub
adc
pop
fisubrs
cmc
ret
or
add
mov
adc
pop
jmp
inc
sbb
cmp
ja
add
adc
pop
pop
pop
pop
jae
or
std
jmp
sub
in
imul
pop
inc
mov
cmp
lock
in
cmp
fsts
dec
lock
add
lcall
mov
cltd
add
daa
js
aaa
dec
lock
add
sub
fimull
jmp
sbb
lahf
sbb
cmp
and
add
sub
adc
sbb
ljmp
lahf
lock
dec
xchg
or
adc
and
shrl
sbb
stc
sbb
call
or
push
add
inc
jns
inc
add
sar
push
das
cmp
sub
inc
sbb
lock
sarl
stos
scas
push
pop
sub
lds
mov
std
or
jge
mov
sbb
das
loope
idiv
adc
pop
lock
adc
and
scas
or
rol
mov
or
or
cs
pop
sbb
adc
daa
dec
clc
pop
test
xor
cmp
sbb
stos
lock
or
cmp
sbb
flds
push
inc
sbb
sub
cmpsb
add
sbb
in
cmp
cmp
mov
push
pop
dec
push
loopne
decl
and
nop
in
and
mov
mov
push
dec
adc
sahf
fldln2
jae
jne
jb
jns
jp
and
inc
add
xor
mov
sbb
push
jg
and
sbb
adc
jg
sbb
cmp
add
fadds
adc
adc
xor
dec
adc
aas
push
decl
jmp
mov
inc
and
sbb
sub
inc
jo
arpl
pop
scas
fiaddl
add
jle
push
aas
jns
das
cmp
add
clc
lcall
fisttpl
adc
lock
push
xor
inc
jge
in
xchg
adc
aas
decl
es
fs
sbbl
mov
sub
adc
push
scas
aas
or
add
in
pop
mov
jae
call
and
sarl
cmovnp
smsw
sub
adcb
bound
pushf
mov
aas
pop
cld
lods
lock
lock
xor
pop
jl
xor
pop
adc
das
jo
pop
pushl
je
xor
sbb
test
adc
inc
sbb
ss
mov
xor
or
or
add
pop
adc
xchg
mov
xor
add
xchg
inc
pop
popf
sub
je
adc
jae
pusha
adc
or
sbb
imul
mov
jbe
out
mov
fistpl
push
push
bound
push
push
or
aas
add
fidivrs
inc
add
push
adc
pop
lcall
jbe
push
pop
jp,pn
jb
and
mov
push
sbb
xlat
xor
push
push
inc
inc
pop
pop
sbb
in
and
popf
clc
and
mov
mov
mov
dec
adc
cs
or
add
insb
adc
inc
nop
lods
aaa
jg
pop
add
adc
das
push
cmp
adc
rorl
add
or
incl
adc
imul
sub
and
aas
lock
add
incl
test
loope
cmp
push
adc
sbb
movsl
adc
aas
sar
std
adc
xchg
insl
cmp
or
xchg
xchg
clc
or
testl
femms
test
scas
jmp
adc
or
adc
and
and
xor
or
std
xorb
xchg
addl
imul
pushl
adc
and
sbb
push
cmpsl
sbb
or
or
out
jmp
push
or
sbb
push
call
sbb
or
or
jo
loope
pop
and
mov
incl
or
jno
ds
rcrl
add
incl
inc
sub
add
stos
rorl
fisttps
adc
adc
dec
lret
lock
add
push
in
jecxz
std
pop
lock
push
and
sub
or
arpl
jmp
incl
and
dec
push
cmp
je
lock
add
lock
inc
lock
dec
aas
sbb
lcall
decb
pop
popl
and
mov
xlat
mov
inc
call
or
xchg
enter
add
sub
mov
pushl
jl
mov
cmc
jle
dec
add
mov
inc
icebp
idiv
lock
inc
adc
xor
daa
imul
adc
psubq
pushf
add
adc
jmp
adcl
adc
jo
mov
lcall
xor
cmp
and
sahf
lock
inc
cmp
cmp
sub
imul
rcrb
sbbl
decl
adc
mov
xchg
lock
or
jl
pop
push
xor
addb
or
and
scas
in
push
scas
test
pushl
addr16
daa
lock
call
lock
js
xchg
inc
or
jg
int
shlb
push
lock
add
fcomip
cmpb
and
outsl
lock
or
and
sbb
adc
aas
push
loopne
pop
add
bndldx
inc
add
and
std
dec
lock
add
pop
adc
dec
inc
lock
cmp
xor
xchg
lock
sti
loop
lock
adc
loope
sbb
lcall
xchg
scas
imul
mov
and
xchg
aaa
out
loopne
cld
sbb
xor
shlb
or
jae
aam
psrlq
add
cmp
sti
or
enter
and
mov
xor
pop
adc
popf
adc
push
pop
repz
sbb
or
and
add
loope
les
jo
pop
movaps
popa
dec
insl
sbb
add
and
jo
cmp
test
jae
ss
lods
jne
jo
add
leave
adc
jmp
push
insl
pop
xor
xor
cs
aaa
sub
daa
cmp
pushf
and
pop
hlt
xlat
pushl
aas
and
das
adc
scas
sbb
dec
jp
adc
and
and
cmpsl
incl
arpl
cmp
sub
sub
sub
jmp
ljmp
and
adc
adc
in
jo
inc
xchg
jl
ret
out
mov
sub
push
and
or
andb
cmp
mov
lcall
and
mov
fstps
adc
and
hlt
pop
std
jmp
mov
or
data16
into
es
lcall
xor
xor
pop
pop
mov
pop
clc
inc
out
repz
call
push
or
xor
call
std
sub
pop
mov
outsb
inc
and
sbb
sub
das
or
adc
xchg
das
sbb
or
xor
lahf
mov
pushl
add
mov
pop
sub
push
gs
aas
sbb
and
repnz
cltd
out
or
ds
das
daa
dec
sub
xor
xor
mov
cmp
cmp
lock
sbb
sbb
push
daa
or
pop
adc
add
lods
and
pop
mov
mov
add
test
sub
mov
mov
push
jg
cmp
sub
adc
pushf
test
in
jmp
es
adc
pusha
adc
and
in
dec
dec
and
sub
inc
dec
outsb
pop
sti
ret
cmp
xchg
push
pop
cmp
mov
sub
adc
sub
femms
es
pop
and
adc
sbb
and
add
bound
pop
and
ss
clc
pop
das
push
or
outsb
cmp
sbb
cmc
mov
pop
inc
sbb
push
adc
adc
adc
push
lret
mov
mov
adc
ret
lcall
lock
xor
push
or
jle
add
jnp
add
pop
lock
xor
sbb
movsl
or
pushl
adc
sub
adc
sub
or
push
and
adc
inc
mov
cmp
dec
xor
mov
mov
inc
xor
bound
fbld
test
push
es
jg
xor
adc
adc
loop
loop
pop
jne
js
push
and
inc
popa
cld
add
sub
mov
dec
lds
add
or
add
inc
sbb
pop
inc
scas
inc
sub
or
sbb
sarl
sarl
sub
sub
pop
sub
mov
and
and
sub
adc
lock
add
add
jnp
sub
add
fidivl
sub
inc
mov
bound
push
or
sub
push
add
das
sub
and
dec
adc
popa
mov
sub
daa
jge
and
ret
rclb
sub
sub
das
push
iret
cli
sbb
adc
adc
xchg
je
jns
sub
xor
xchg
and
dec
sub
idiv
das
mov
mov
int
les
addr16
xchg
insb
push
sub
xorb
clc
decl
cmp
rdmsr
outsl
cmp
fistps
xor
dec
adc
mov
decb
sub
xor
out
test
outsb
bound
jb
cltd
xchg
and
daa
xchg
add
push
incl
or
lock
pop
aam
sbb
jo
pop
jno
sub
inc
pop
call
push
sbb
pop
data16
sbb
push
sub
imul
pop
or
jbe
sub
lods
sub
jmp
jmp
test
xor
jp
push
test
in
mov
daa
das
pop
adc
and
decl
push
pop
adc
or
add
dec
adc
das
and
ja
xchg
and
daa
daa
and
adc
add
add
adc
sub
push
push
push
inc
xor
out
add
sub
cmp
xor
sbb
sub
cld
pop
call
or
daa
inc
or
test
adc
dec
adc
adc
xor
loope
push
pop
cmp
sub
cmp
cmp
ret
aad
xchg
sbb
mov
out
in
jno
incb
sbb
sbb
jmp
idiv
xchg
stc
pop
daa
pop
adc
pop
sbb
inc
sbb
outsb
sbb
add
jbe
ss
pop
add
dec
pop
jmp
movhlps
loope
arpl
test
cmp
lahf
lcall
sbb
inc
es
fcoms
adc
sbb
mov
ljmp
xor
das
inc
aaa
adc
mov
fcomi
insl
cmp
adcb
sbb
add
adc
mov
sub
cltd
add
ret
shrl
adc
sbb
pusha
adc
outsb
iret
sub
dec
mov
adc
add
cmp
or
sbb
or
pop
shl
clc
sub
add
sbb
xor
andl
mov
and
out
sub
and
sub
sbb
xchg
idivl
leave
adc
push
adc
imul
or
inc
outsl
div
mov
lea
adc
lock
call
and
lds
adc
or
adc
pusha
pop
es
sbb
incl
sub
sbb
call
or
adc
pop
mov
incl
inc
dec
add
or
push
dec
push
xor
sub
adc
mov
ja
and
pop
cmp
dec
pop
fadd
testl
push
and
dec
iret
stos
inc
ficoms
cmpsl
lret
mov
mov
sub
fistps
inc
daa
adc
xor
sbb
aas
cmp
add
ss
jp
and
sub
test
jnp
mov
pop
movsl
sub
sbb
fcoml
adc
adc
sbb
jecxz
fwait
iret
cmp
fldcw
or
es
sbb
sarb
jno
adc
adc
and
mov
adc
dec
inc
cmp
inc
daa
pop
add
dec
add
sub
xor
sub
inc
daa
imul
daa
divl
cmp
inc
push
cmp
inc
ja
xor
popa
inc
cmp
lock
and
lahf
sbb
pop
sbb
mov
das
inc
pop
outsb
adc
fiaddl
mov
inc
sbb
lahf
mov
jg
inc
sub
adc
lea
or
imul
mov
test
dec
pop
inc
cmp
sti
jnp
dec
jne
popf
sub
push
and
out
pop
pop
aas
mov
inc
movsb
inc
aaa
pop
fmull
lahf
pusha
lock
xor
sbb
push
filds
pop
xor
pop
lret
and
aaa
pop
inc
mov
imull
adc
scas
sbb
push
push
fnstcw
and
nop
xor
loope
fidivrl
xchg
pop
rcrl
xchg
icebp
fsts
mov
cmp
sbb
out
inc
inc
rolb
js
or
js
out
jle
jp
pop
jae
in
add
addl
pop
inc
dec
int3
or
fists
add
es
jnp
fucomp
sbb
rolb
call
dec
sbb
js
in
gs
jno
imul
pop
pop
insl
add
xchg
aad
std
loope
lock
das
add
arpl
test
sarl
inc
mov
or
xchg
adc
inc
ss
fdivrp
cmc
add
add
sub
adc
or
xor
mov
inc
aaa
icebp
or
or
mov
add
or
add
roll
xor
inc
and
stos
pop
cmp
inc
call
mov
andl
xor
test
adc
insb
xorb
imul
pop
incb
jo
push
fisttpl
add
pop
inc
sub
jno
adc
add
sbb
shrb
dec
daa
enter
adc
or
mov
pop
add
mov
sbb
or
outsb
add
adc
add
shlb
pop
insl
dec
add
cmp
dec
sbb
jns
mov
scas
loopne
add
rclb
inc
inc
push
cmp
sub
adcb
push
imul
pop
push
lock
mov
push
popa
add
outsl
xor
testb
dec
pusha
ret
leave
movsb
push
xchg
mov
push
int
push
lock
scas
inc
inc
pusha
seto
jb
adc
loope
xlat
test
test
mov
das
jns
or
jp
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
