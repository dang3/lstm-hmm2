out
int3
call
inc
outsl
outsl
insb
gs
outsb
add
or
add
inc
popa
insb
jae
add
jb
lea
sub
add
push
mov
nop
inc
add
dec
outsb
je
addr16
sbb
sarb
add
jns
insb
daa
push
outsl
jb
cld
leave
enter
addb
inc
popa
imul
add
or
push
je
sub
loopne
dec
sti
or
fs
mov
pop
push
imul
das
les
dec
jnp
jle
add
xchg
push
mov
int
imul
idiv
das
and
pop
push
dec
bound
arpl
cmp
inc
jns
lds
dec
dec
xchg
popaw
arpl
add
decl
push
imul
wbinvd
dec
inc
imul
popa
je
push
add
sar
fists
add
jmp
adc
mov
jo
int3
andb
insl
xchg
fldt
lds
add
add
in
xchg
inc
add
rolb
sbb
sbb
sub
pop
insb
cwtl
adcb
jmp
in
or
cld
psubb
hlt
lock
xchg
inc
in
xor
call
or
pavgb
sbb
aam
sbb
int3
enter
nop
inc
sarb
or
mov
orl
lods
and
sbb
ss
test
movsb
mov
sbb
cvttps2pi
aas
or
enter
cwtl
xchg
nop
clc
lret
and
les
insb
ljmp
sub
je
movzwl
insb
fdivs
pop
ret
push
test
add
orl
js
fisttpl
enter
push
mov
call
jne
push
add
enter
incb
rcrb
inc
in
add
mov
add
fistpl
incl
mov
mov
mov
inc
cmp
jne
push
mov
mov
push
nop
mov
idiv
sti
add
mov
mov
xchg
in
test
xchg
mov
mov
mov
add
test
adc
sti
idivl
add
or
adc
mov
push
push
push
mov
mov
mov
pop
in
imul
mov
rcrb
mov
out
push
or
push
or
ret
mov
fiaddl
or
inc
jg
fcomip
add
adc
or
cmp
scas
sbb
mov
lds
inc
test
je
rcrl
fidivs
sti
lods
sti
mov
xchg
cmp
jb
into
add
call
out
loopne
int
bound
jne
mov
aaa
or
mov
cmpl
dec
ret
jmp
pop
mov
add
mov
sbb
cmp
orb
ja
pop
pop
sub
mov
lock
dec
sarl
or
jmp
js,pn
scas
sbb
sti
jne
sbb
nop
es
xlat
ja
icebp
mov
cmp
pop
mov
jb
cmc
xor
and
add
pop
loope
rorl
mov
test
je
mov
mov
mov
adc
mov
push
dec
les
add
push
mov
sub
push
in
int
leave
shrb
push
pop
std
mov
shl
add
popf
cmpl
sbb
sub
fsubrp
mov
inc
adc
mov
xchg
lret
mov
call
pop
adc
sbb
jae
out
fnstsw
clc
ja
mov
add
cmp
ja
cmp
jnp
negw
sbb
popa
inc
mov
add
sbb
and
cmp
jge
adc
sbb
jg
sbb
push
mov
repz
popa
sbb
pop
push
adc
adc
dec
hlt
outsl
mov
xor
and
sbb
loop
lret
sbb
jae
std
xchg
shll
xor
cmp
add
pop
jbe
pop
and
mov
cmp
or
or
jbe
rcll
sti
push
push
cmpb
adc
sbb
mov
and
push
jb
int
inc
repz
xor
jmp
sub
add
xchg
and
inc
or
sbb
jae
mov
sbb
or
out
jae
std
add
add
addr16
cwtl
push
pop
je
dec
ja
lock
mov
mov
aas
or
add
push
hlt
xchg
bnd
xor
idivl
inc
xlat
data16
data16
pop
and
je
mov
inc
mov
xor
push
pop
add
jne
subl
pop
movsl
and
push
and
insb
nop
cmpsl
movl
cmpsl
cli
jge
add
je
cmp
js,pn
test
inc
jle
pop
or
insb
dec
jae
hlt
cmp
xor
lea
fs
sub
fstl
fcoms
shl
or
or
fwait
aas
lea
xor
test
xchg
ret
pop
pop
inc
jmp
imul
jne
nop
into
jo
xchg
scas
xlat
js
inc
or
pop
push
xchg
cmp
ds
popf
in
nop
imul
sub
pop
xchg
sbb
mov
add
ret
jg
loope
adc
fidivs
mov
out
rorl
pop
mov
mov
or
pop
test
je
imul
pop
xor
lret
add
adc
jmp
rolb
cld
jmp
pop
cmp
rolb
add
aaa
push
std
sarl
loop
xor
mov
push
cmpb
adc
or
cmp
movsl
popf
adc
sub
seta
mov
cmp
mov
ja
adc
xor
cmp
adc
jne
js
jnp
add
aam
jo
rol
aas
pop
pop
pop
pop
adc
lock
ret
mov
mov
jno
xchg
pop
xchg
test
shlb
or
iret
add
add
mov
arpl
ja
mov
sub
xchg
add
push
imul
push
add
sub
sbb
in
pop
mov
push
cmp
adc
push
jb
or
adc
test
jns
add
sar
test
pusha
in
hlt
jmp
sub
hlt
mov
mov
mov
cmpsb
mov
mov
mov
je
sub
imul
dec
or
push
mov
bound
jne,pn
or
xchg
lea
cmp
jl
movl
mov
push
test
inc
fstpt
in
or
mov
and
rolb
cld
ficompl
fiaddl
adc
inc
mov
xor
or
push
or
push
rolb
loopne
lock
int3
xchg
or
ret
decb
lock
cmpsl
test
je
popf
lcall
sub
cli
xor
test
testb
je
int3
mov
loopne
dec
jb
sub
cmp
cmp
jge
cmp
negb
fisubrs
std
jge
aas
add
mov
clc
add
and
repz
fstpl
bound
and
mov
pop
outsb
pop
or
add
mov
jno
xorb
into
jge
push
push
mov
sub
sub
cmp
jge
mov
pop
or
out
ja
shr
adc
xlat
cld
lea
and
outsb
aas
rolb
lds
loop
add
adc
shlb
or
imul
pop
aas
mov
adc
mov
mov
xor
je
sbb
adc
jb
hlt
imul
hlt
cmpsb
adc
mov
cli
call
jmp
hlt
inc
adc
cmp
aas
push
pop
add
sub
cmp
or
out
or
cmp
lahf
sub
insl
sbb
jle
adc
ss
cmp
or
pop
jmp
jbe
or
xor
mov
mov
and
sbb
stos
lea
or
add
lea
movsl
movsl
mov
cltd
les
iret
or
sub
daa
icebp
pop
xchg
push
push
mov
cmp
popa
push
sub
pop
add
ret
fldt
adc
and
sub
xor
in
ja
ja
ret
subl
add
daa
mov
add
adc
leave
aam
loope
or
xor
cmp
pop
pop
loope
out
add
pop
inc
stos
pop
sub
cmp
ret
pusha
enter
insl
mov
lds
loope
add
jg
dec
push
push
aaa
loopne
push
adc
or
ljmp
lock
lea
jle
insl
icebp
js
jle
adc
jg,pn
pop
or
inc
daa
pop
je
pop
jmp
sub
test
sbb
in
jnp
dec
pop
jle
pop
cmp
movsb
sub
cmpl
mov
sbb
mov
add
out
pop
inc
sub
xor
or
pop
inc
stos
mov
roll
xchg
leave
jmp
inc
sbb
jne
js
pop
adc
fwait
pop
xlat
ja
xchg
popa
test
pop
jne
inc
lret
orb
or
int
clc
stos
sbb
or
jbe
out
leave
mov
jle
dec
in
pushl
mov
add
or
sti
aas
pushf
dec
btr
jg
sbb
pop
or
sbb
icebp
je
test
add
pop
inc
scas
shlb
cld
pop
pusha
bound
js
mov
jmp
mov
cld
cmc
mov
popf
or
pop
pop
add
or
mov
in
jbe
adc
sub
cmpsb
in
pop
les
dec
sub
mov
add
arpl
sbb
shrl
jo
ja
mov
mov
hlt
adc
push
pop
pop
push
push
in
push
xchg
sbb
mov
push
sbb
jno
dec
and
xor
pop
mov
lock
test
jne
test
ja
add
or
rcrb
push
add
loopne
push
or
pusha
adc
test
ret
jge
xor
cmp
push
pop
aaa
cld
and
in
ret
cmp
and
jo
stos
in
adcl
jo
aas
pop
dec
mov
adc
ret
loop
cmp
mov
testl
jmp
sti
cmp
cli
mov
cmpl
clc
push
adc
or
sbb
mov
lcall
movb
leave
adc
pop
jle
sub
out
mov
mov
mov
sub
jge
push
out
mov
jecxz
cmp
icebp
mov
arpl
jl
push
imul
iret
out
xor
push
notb
adc
jp
ficoml
add
inc
fistpll
repnz
sub
mov
pushf
push
mov
add
scas
shlb
mov
sbb
mov
push
loope
std
rcrb
add
insl
imul
rclb
cmpb
jl
arpl
outsb
push
fmul
adc
xor
cwtl
fidivs
xor
loope
sub
dec
add
nop
and
mov
test
sub
pusha
dec
add
push
movsb
xlat
js
sbb
cmp
js
pop
mov
loop
sub
or
fsubl
and
shrb
test
add
jmp
add
mov
and
fdivs
adc
pop
test
pop
das
sbb
roll
arpl
dec
cmc
push
add
sub
or
xor
jns
mov
adc
add
ss
roll
jmp
call
mov
add
inc
adc
testb
xchg
dec
sbb
rorl
lock
jle
call
push
or
add
xchg
jmp
xor
mov
je,pt
and
jae
je
mov
test
je
iret
jle
xor
sbb
enter
or
mov
ret
mov
jmp
jne
mov
sub
adc
repz
js
cwtl
out
mov
rcrl
mov
shrl
ret
aas
add
inc
jnp
pushf
dec
sbb
mov
xor
jg
push
fsubs
xor
jle
jecxz
popa
push
push
fstpt
cmp
sbb
push
jo
sti
sbb
mov
mov
pop
mov
and
adc
dec
ret
push
lock
rcll
add
pop
jne
push
fs
xor
pop
psubsw
mov
mov
mov
sub
sbb
ret
sub
inc
pushf
cli
aas
fnstsw
sarl
mov
inc
rep
jmp
mov
das
test
mov
jmp
mov
mov
xchg
loopne
mov
add
ja
hlt
aad
je
roll
push
movb
cmp
add
lea
add
adc
add
lea
xor
pop
jle
push
aas
or
sub
adc
xchg
and
sbbl
ret
mov
xlat
sub
divl
je
cmp
rep
jg
roll
and
lahf
jns
je
cld
lea
out
jl
cld
xor
std
xor
fnstsw
cmpsb
jmp
rorb
call
add
and
cmpb
xchg
in
std
incl
out
in
mov
jmp
cmp
xor
push
push
sahf
testb
ja
jne
das
jl
jbe
sbb
ja
pop
cltd
mov
sub
pusha
mov
mov
xor
jmp
outsb
cmp
dec
sti
aas
cmp
jbe
mov
mov
inc
inc
adc
jne
test
test
xlat
push
jne
sbb
xor
icebp
jb
lea
xchg
sbb
fildll
pop
adc
adcl
add
ret
jmp
sbb
xor
scas
shll
xchg
add
or
xchg
dec
clc
incb
xchg
push
mov
push
repz
std
fcoms
mov
out
xor
jmp
std
lock
or
shll
ljmp
jnp
mov
dec
jmp
mov
imul
or
sbb
or
nop
add
arpl
cmp
jb
cmp
ja
sub
daa
data16
mov
fldcw
cmp
pop
jae
push
sti
jle
fwait
pop
pop
scas
in
or
flds
fwait
orw
or
psubusw
fldcw
pop
inc
sahf
push
stos
test
jge
mov
pop
call
add
jmp
loopne
mov
sub
scas
rol
div
stos
sub
xor
pop
jb
sbb
pop
or
call
dec
and
sqrtps
pop
mov
rclb
xor
and
mov
cmp
out
jb
or
and
jne
call
loop
xor
mov
jge
aam
adc
push
loope
push
push
xchg
rol
movb
decl
rorb
jb
cmp
ja
mov
mov
fildl
xlat
scas
decl
enter
testl
xchg
add
push
mov
cmp
push
imul
dec
mov
inc
inc
and
lods
xor
xchg
inc
inc
jg
mov
shr
je
mov
mov
cmp
jne
dec
je
mov
xchg
stos
testb
add
aaa
or
or
loop
push
adc
add
pop
and
je
mov
cmp
jne
push
adc
lret
sti
dec
add
adc
sbb
mov
add
out
adc
cmp
jne
shr
inc
adc
add
lgdtl
push
mov
shr
or
sbb
dec
pop
cmp
bnd
rol
pop
and
mov
cmp
rcrb
jne
dec
dec
dec
and
push
lret
dec
sbb
repnz
pop
jbe
mov
shl
or
repz
xchg
mov
stos
pop
nopl
fldt
sub
test
arpl
test
rorl
insb
out
idiv
mov
add
push
inc
cmp
je
mov
or
sub
das
aas
lret
je
and
je
pop
je
xor
lock
inc
xchg
and
add
mov
xor
or
cmp
ja
lea
push
add
ljmp
dec
je
sarl
jmp
movsl
outsb
call
dec
js
pop
sub
jmp
inc
inc
jmp
mov
push
je
xorl
and
cltd
movups
or
cmp
add
aad
cltd
pop
xor
mov
jmp
mov
fildl
pop
notb
stc
sbb
add
push
inc
jbe
jle
mov
dec
jne
pop
aaa
mov
jle
repnz
fnstsw
xchg
repz
mov
sub
leave
jne
pop
sbb
cmpsb
mov
jl
bswap
or
lea
lea
pop
arpl
lea
fldt
cmp
iret
arpl
or
and
je
es
jo
cmp
inc
and
jmp
jae
push
repnz
jge
mov
xor
push
stc
jmp
fstp
fldt
shll
dec
cmp
mov
in
jg
aas
mov
nop
or
cli
or
or
pslld
push
ret
mov
adc
xchg
cwtl
push
and
sbb
and
repnz
add
mov
or
rep
pusha
in
daa
sub
test
out
sub
pop
jecxz
repz
xor
leave
sbb
mov
cmp
outsl
out
fidivrs
call
mov
bound
jg
das
incl
xlat
fadds
outsb
xor
xchg
push
or
push
push
test
into
sbb
rorl
mov
push
pop
test
enter
mov
cmc
outsl
movsl
push
inc
mov
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pushl
xlat
pop
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
lods
lds
iret
decl
js
inc
mov
stos
mov
cmp
or
incl
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
icebp
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
ljmp
das
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
decl
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
jmp
addl
cmp
xor
in
cmp
sahf
xchg
pop
call
jmp
push
movsl
mov
popa
cmc
mov
and
addr16
repz
mov
fldl
mov
push
pusha
les
outsb
bound
xor
jmp
pop
push
push
xor
fisttpl
je
clc
pop
jne
push
jb
mov
pop
cmp
repnz
mov
mov
xchg
and
push
mov
movzwl
loopne
fcompl
push
imul
adc
sbb
dec
inc
cmp
sub
and
movl
jge
hlt
push
addr16
add
xchg
sub
adc
mov
mov
jmp
push
clc
jmpw
pop
aas
or
call
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
lods
ret
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
cmp
pushl
dec
cmp
aam
leave
mov
inc
rep
jg
jbe
or
pop
mov
or
dec
cld
jne
dec
mov
xor
jg
add
fbstp
ret
repnz
mov
ss
vmread
roll
xchg
daa
jo
psubusb
sbb
pop
jnp
pop
aaa
mov
add
insl
add
int
test
or
daa
pusha
add
ret
movups
sahf
lret
mov
jle
mov
loopne
pop
cmp
mov
cld
mov
ret
jge
out
pop
clc
decl
push
shr
dec
rep
pop
cmp
mov
fldl
push
mov
adc
lcall
jmp
cmp
je
pop
mov
add
jae
lahf
push
mov
inc
fadds
out
mov
pop
sbb
cmp
iret
out
sub
mov
mov
sub
push
fidivrs
fcomps
jmp
stc
pop
push
lahf
in
jbe
adc
jb
add
sar
fnstcw
rorl
adc
dec
mov
loope
testl
clc
pop
and
lods
scas
mov
and
inc
adc
daa
adc
mov
xor
push
mov
push
add
dec
jl
pop
lea
push
sbb
fsubrl
sub
dec
setne
scas
mov
cmp
xchg
ret
xor
mov
and
clc
notl
cltd
pop
mov
cmp
jne
jb
cmp
pop
xchg
xchg
mov
invd
or
or
jo
or
fcoml
lods
jo
and
repnz
push
loopne
pop
es
push
call
rorl
mov
mov
repz
add
add
jle
clc
jmp
sqrtps
scas
je
pop
sub
scas
js
negb
pop
add
sub
mov
pop
cs
insb
jg
cs
add
or
jmp
out
mov
sarb
inc
out
xor
das
shll
sarb
mov
dec
orb
jle
ss
pop
push
aad
or
pop
add
rolb
pop
mov
loop
shl
pop
mov
js
aas
sub
mov
sarb
decb
dec
movb
dec
push
cmp
sbb
add
dec
jne
sbb
add
sbb
jecxz
out
pop
out
dec
cmp
fistps
push
pushf
enter
in
jle
push
leave
pop
repnz
sbb
jmp
sti
xor
pop
add
mov
add
clc
arpl
hlt
xor
call
jecxz
lock
sbb
movl
or
loop
jecxz
or
pop
sub
stos
hlt
mov
in
mov
inc
or
lret
aam
pop
sub
outsb
adc
push
ljmp
in
lods
icebp
popf
mov
jg
pop
and
pop
out
loopne
inc
leave
sub
jbe
fmuls
in
push
pushf
adc
xchg
movsb
std
push
mov
push
popa
push
push
cmp
nop
out
loope
add
cmp
push
sbb
or
jae
ds
sbb
push
push
and
leave
out
jg
mov
add
or
jne
movsbl
inc
inc
jmp
pop
jge
stos
add
notb
shrl
push
jecxz
fildl
adc
loopne
pusha
xchg
loop
fdivrl
adc
xchg
pop
mov
mov
subl
jne
fiadds
adc
mov
adc
outsb
mov
jo
pop
adc
add
icebp
mov
shl
out
clc
in
loop
jno
cmp
cli
out
push
je
or
fbstp
add
popf
dec
ret
ja
inc
pop
mov
sti
or
pop
ja
pop
hlt
and
sarb
or
xor
mov
dec
or
push
jns
pop
loopne
fidivs
dec
add
out
push
or
push
sbb
push
sub
mov
mov
push
lahf
dec
decl
jmp
mov
fld
inc
add
in
ret
add
fnstenv
mov
mov
fildl
xor
cmp
or
shlb
je
dec
or
sbb
mov
pop
sbb
push
or
jno
jne
jmp
mov
out
sub
or
loope
repnz
addl
jne
in
add
lcall
hlt
subl
je
jg
pushw
push
dec
jne
inc
jno
test
outsl
mov
ret
inc
or
out
daa
push
push
cltd
xchg
inc
adc
mov
or
push
movntps
inc
adc
pop
adc
lds
sbb
xor
arpl
or
popa
adc
jmp
ret
push
add
loope
subb
sbb
in
add
daa
dec
clc
dec
addl
jo
arpl
or
out
out
sub
or
and
cli
push
mov
js
jne
inc
adc
dec
add
call
mov
push
push
call
daa
fsubl
or
lea
pop
jmp
xchg
test
fcomp
call
push
lock
push
push
push
inc
pop
fistpll
icebp
and
inc
es
fsubl
inc
or
pusha
add
icebp
enter
or
jmp
sub
mov
mov
add
pusha
or
jo
mov
pop
pop
sub
bound
sub
mov
cmp
push
xor
sbb
or
jg
cld
into
out
mov
add
je
cmp
mov
adc
pop
sub
je
push
jmp
add
call
xor
push
cmp
cmp
out
cmp
and
cmp
cmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
test
iret
mov
or
lret
cmp
inc
popa
call
add
pop
mov
jecxz
and
jno
adc
jnp
or
cmp
inc
pop
xor
sub
roll
je
cli
mov
mov
xchg
out
push
inc
cli
sub
adc
push
and
mov
dec
cmp
scas
cmp
cs
dec
inc
or
leave
hlt
mov
add
mov
adc
sbb
cmp
das
add
mov
psllq
cmp
je
cmp
jne
popf
add
mov
cmp
mov
pop
dec
mov
mov
test
fistpl
test
jle
dec
mov
inc
fidivs
rcl
jo
icebp
and
imul
sub
into
sub
fcomps
mov
in
mov
adc
mov
sub
adc
cmp
jle
add
inc
loopne
mov
cmp
jg
push
jns
lods
shll
mov
xchg
in
pop
pop
or
dec
scas
push
xor
imull
lea
mov
jge
pop
add
pop
inc
stos
add
fcomip
dec
js
fs
nop
mov
inc
mov
shll
and
cmp
jge
call
push
loop
sub
pop
or
adc
lods
repz
imul
jl
xor
jne
jl
xchg
add
and
dec
stos
lods
pusha
add
mov
cmp
mov
ffree
scas
mov
push
add
add
popa
mov
subl
pop
pop
inc
cwtl
loop
in
imul
xchg
add
xchg
or
inc
sub
inc
aas
int
cmp
icebp
xorl
or
daa
mov
jo
les
add
mov
add
add
bnd
rorl
mov
dec
inc
cmp
mov
cli
fwait
rorb
jp
fimull
mov
push
push
inc
dec
jb
or
add
cmpsb
neg
sbb
inc
in
pop
dec
outsl
adc
ja
ja
push
cld
add
pop
leave
dec
push
outsl
aas
jge
into
dec
rcll
adcl
xchg
add
out
adc
sub
jbe
mov
pop
lock
push
push
push
arpl
inc
push
dec
jo
add
xor
push
popf
nop
add
ret
scas
xor
mov
jb
jge
cmp
fadds
or
call
add
dec
cmpb
adc
jle
push
cmpl
adc
shlb
fdivr
adc
pop
mov
call
and
dec
popa
adc
int3
and
xchg
xor
js
call
push
jne
cmc
shrb
inc
or
sub
jbe
addl
imul
sbb
aaa
es
inc
adc
inc
add
or
push
insl
mov
pusha
mov
add
or
add
add
pop
add
out
sub
mov
mov
push
subb
pop
cwtl
dec
dec
pop
sbb
sub
or
outsb
push
jmp
mov
xchg
xchg
push
jne
stos
and
jg
dec
add
dec
clc
pushf
hlt
cmp
jl
lock
clc
data16
dec
arpl
cs
mov
push
sbb
add
lea
mov
dec
jne
jle
and
inc
jg
js
add
mov
pop
pop
dec
jnp
adc
lods
pop
pop
jmp
ja
xchg
adc
test
mov
xchg
jle
jmp
jle
push
add
loopne
push
add
jg
pop
movw
loope
xor
push
cld
movl
pop
sbb
cwtl
mov
mov
das
stc
mov
jo
pop
pop
icebp
or
mov
cmp
and
push
or
aad
push
fisttps
push
push
adc
shlb
addl
rorl
les
cmp
cld
fdivr
mov
or
outsb
add
clc
and
push
push
add
mov
lahf
mov
jl
xchg
mov
sarb
test
lods
sub
fistpl
sub
sbb
sbb
or
cmp
out
push
mov
mov
loopne
cld
daa
nop
xor
mov
je
cmp
cld
inc
mov
add
xchg
out
daa
sub
rcrl
shr
pop
outsb
in
fisubs
sub
and
pop
pop
or
push
lret
mov
imul
or
in
add
lahf
mov
inc
xchg
nop
push
push
incl
in
add
pop
add
pop
sbbl
add
sub
push
and
pop
cld
rcll
cmp
jl
or
lock
push
ds
add
aas
lds
inc
into
je
lock
push
mov
push
cld
add
cmp
pop
nop
fnstsw
and
mov
adc
mov
sub
loopne
out
xchg
cmp
adc
or
mov
push
scas
rorl
mov
inc
mov
mov
fmuls
dec
mov
lds
push
sbb
mov
clc
mov
mov
jmp
in
or
xchg
jg
xor
sbb
adc
xchg
adc
or
std
out
mov
aas
cmp
add
or
pop
cmp
xlat
jle
iret
gs
dec
jne
mov
or
adc
jge
and
aaa
add
dec
jmp
and
jg
push
xchg
mov
ss
outsl
or
pusha
add
pop
dec
jne
mov
rorl
mov
dec
pop
and
or
jle
lea
jmp
xchg
xlat
cmp
mov
cmp
add
imul
mov
out
pop
xchg
aaa
orl
shr
adc
xlat
cmp
inc
mov
or
sti
and
mov
shr
or
daa
or
push
clc
inc
cs
lock
lods
cs
add
aaa
repz
dec
cmp
out
mov
adc
pop
adc
sahf
mov
pop
mov
mov
aaa
push
paddd
pop
sub
es
jl
cmp
jge
sub
cmp
adc
pop
cmp
xor
xor
jmp
inc
jmp
jno
push
mov
mov
push
push
mov
cmp
xor
sub
jge
mov
mov
add
stc
add
lea
inc
dec
movsb
push
pop
jnp
pushf
inc
dec
cmp
push
sahf
cltd
mov
pop
jl
adc
inc
dec
jge
cmp
addb
icebp
xlat
mov
stc
add
gs
cmp
and
adc
push
mov
lea
lock
add
add
pop
jmp
adc
xor
cmc
std
cmpsb
jnp
dec
js
mov
inc
jae
adc
dec
mov
lret
cmp
lcall
in
pop
aaa
frstor
pop
mov
arpl
cmp
adc
loopne
lods
and
sbb
das
mov
js
sub
or
loope
xor
arpl
cli
pop
cmp
out
dec
and
xor
out
in
add
in
aas
xor
push
push
push
push
cs
push
shlb
test
js
lock
in
cmpsl
ja
or
push
cmp
and
sub
stos
push
pop
in
jno
cmpl
pop
orb
xor
loopne
in
js
ffree
cmp
push
pusha
pop
repnz
cmp
imul
decl
das
or
lock
int3
pop
pushl
mov
and
cmpb
cmp
cmp
ret
add
pop
xchg
add
cmp
add
jp
scas
je
cmpsb
push
push
add
nop
sub
mov
iret
add
imul
mov
or
aaa
pop
push
test
xchg
insb
cmp
loope
ret
insb
pop
dec
cmp
test
pop
lcall
sub
cmp
push
les
rolb
sub
aas
inc
dec
or
dec
shll
dec
cmp
ret
jmp
ljmp
inc
push
add
jne
outsl
and
xor
or
xor
xchg
lcall
adc
int3
adc
dec
mov
push
movsl
mov
add
daa
sub
call
in
iret
sbb
adc
xchg
push
std
pop
call
pop
cmp
stc
pop
push
mov
inc
lea
mov
mov
or
inc
xchg
das
cmp
push
add
fsubs
xchg
mov
jg
jecxz
adc
push
add
or
cmp
decl
and
or
je
cmp
cmpl
or
mov
outsl
jns
lahf
ficompl
mov
add
scas
incb
das
out
jmp
mov
mov
mov
pop
jg
roll
adc
cmp
pop
jmp
add
mulb
xor
lock
mov
push
jmp
pushf
sbb
scas
cwtl
adc
mov
adc
mov
call
loopne
pusha
adc
add
and
ds
pop
jbe
test
jnp
add
jle
lock
or
std
mov
push
cmp
xlat
sub
xor
or
outsb
in
add
daa
push
dec
add
repz
pop
enter
sbb
int3
jnp
loopne
jmp
test
test
cmp
inc
fdiv
jmp
mov
lds
xchg
cltd
mov
sbb
sub
ud0
or
clc
push
rorl
cld
pop
add
sarl
add
push
or
pop
push
xor
push
push
xor
or
je
or
mov
pusha
adcb
jl
pop
data16
pop
dec
mov
cmp
adc
jmp
jl
daa
and
xor
adc
icebp
pop
repz
jmp
jg
mov
inc
inc
pop
jmp
aas
mov
in
mov
add
jns
xor
mov
out
in
mov
sbb
out
jp
dec
jne
loopne
pop
shrb
or
insb
repz
lock
mov
in
inc
push
popa
push
jb
enter
add
adc
push
mov
mov
jne
sub
das
cmp
pop
pop
add
jp
std
daa
adc
pop
mov
loopne
les
cmp
cmp
or
lahf
loopne
ja
sti
add
add
inc
ljmp
mov
icebp
mov
jno
add
je
fisttpl
out
pop
cmp
loope
dec
mov
adc
pusha
adc
in
and
nop
push
test
push
clc
sarb
aas
shll
xchg
xchg
push
push
inc
mov
adc
inc
jl
sub
inc
push
inc
pop
pop
push
jno
daa
sub
xor
pop
jne
mov
lods
push
mov
dec
rolb
out
out
iret
in
scas
cmc
and
mov
mov
and
add
pop
adc
pop
pop
push
fmuls
ffree
or
or
adc
xor
clc
rclb
loopne
push
or
push
inc
jbe
mov
stos
gs
cmpb
divl
cmp
mov
mov
sub
inc
jmp
cmp
jne
add
add
sub
inc
sbb
cmp
je
es
ret
push
fimull
add
sub
pop
lret
inc
pusha
cmc
sub
out
out
add
ljmp
jb
out
add
sbb
mov
and
jmp
pop
repnz
sbb
jmp
push
pusha
incl
mov
jmp
jl
andl
mov
pushl
jmp
jg
mov
cltd
aas
or
movsb
jno
das
sbb
cmpsl
add
adc
iret
push
hlt
inc
and
pusha
shll
ljmp
xor
xor
notl
or
inc
jmp
dec
enter
dec
inc
mov
jne
adc
int3
arpl
mov
jnp
sub
add
dec
push
xor
and
shr
sub
and
sbb
sub
call
pushf
sarb
je
dec
add
movsl
sbb
rorb
arpl
jecxz
mov
mov
add
jg
inc
adc
lods
xchg
imul
mov
push
pop
push
out
cmpsb
push
je
in
cmpsb
loopne
bnd
jnp
jge
pop
add
test
add
std
ret
xchg
mov
mov
xor
cmp
inc
lock
mov
add
mov
or
aad
xchg
push
call
clc
es
and
insl
call
dec
in
in
cmp
je
xor
pop
jnp
or
xor
jge
jge
add
jmp
imul
lock
add
out
sbb
in
mov
pop
decl
stos
mov
int
lret
in
mov
in
jge
or
test
dec
push
dec
in
push
cmp
adc
into
stos
and
dec
loopne
mov
faddl
ret
jbe
ds
movl
or
push
flds
push
lock
test
mov
cmpsl
cmpl
jle
cltd
or
xchg
xchg
arpl
xchg
jl
inc
ja
mov
js
fisttpl
adc
in
testl
mov
outsb
mov
loop
mov
cmp
add
outsl
jg
jl
xor
lock
jne
loope
js
xlat
adc
jnp
lods
push
lods
inc
pop
stos
xchg
mov
sbb
scas
adc
dec
lock
jg
push
push
mov
incl
out
pop
pop
jae
aam
cmpsl
jbe
in
sbb
or
xor
cmp
cmp
add
sbb
jecxz
push
push
inc
push
insl
inc
lcall
sub
shlb
mov
cltd
push
pop
fmull
mov
xor
outsb
hlt
add
inc
dec
add
inc
inc
mov
inc
popf
lret
sbb
add
add
jo
inc
jge
std
repz
jmp
js
adc
cmp
jne
ss
mov
rol
jp
clc
pusha
xchg
lea
pop
enter
testb
rorb
test
test
call
push
lds
sub
out
insl
sub
dec
jle
cmpb
cmp
js
pop
jne
sti
xor
pop
add
inc
loopne
loopne,pt
lea
divl
and
in
in
jne
insl
mov
xlat
mov
cmpsl
sub
iret
popa
cld
cmpsl
pop
imul
add
inc
cmp
dec
jg
add
fcomip
lds
mov
cwtl
jno
idivl
andl
loop
sti
hlt
pusha
xchg
sub
addr16
cmp
test
fs
mov
push
push
mov
pop
sbb
push
testl
call
jae
imul
gs
xor
cs
insb
push
fdivr
lcall
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
outsl
loopne
mov
sbb
fcompl
in
mov
out
and
push
pop
add
dec
loopne
add
cmp
and
xor
or
and
xor
mov
inc
fmull
iret
out
inc
outsl
adc
int3
and
clc
push
pop
fistpl
mov
repnz
scas
mov
dec
mov
enter
and
push
lods
jno
jnp
repz
loopne
mov
inc
fiadds
stos
shrb
aas
or
aad
insl
adc
jnp
and
sbb
add
cmp
stos
pop
je
sbb
cmp
jne
adc
inc
adcb
icebp
mov
sbb
dec
roll
cs
pop
jo
lock
das
outsl
xrelease
dec
xor
cmc
add
test
mov
mov
ja
jb
sti
push
adc
mov
jae
fsubrs
bound
add
sub
dec
dec
sbb
bound
mov
jne
add
mov
popa
mov
push
loopne
filds
sbb
mov
sarb
outsb
jp
mov
or
sbb
xlat
pusha
jg
icebp
mov
mov
dec
or
pushf
jno
fxch
ja
and
pushf
mov
cmp
sahf
outsb
inc
mov
dec
add
or
mov
xchg
pop
jno
movl
mov
adc
fmuls
enter
fiadds
subb
sbb
mov
xchg
cmp
out
in
jmp
mov
out
call
cld
jne
pop
cmpsb
insl
inc
hlt
dec
pop
jne
xchg
ret
out
bound
mov
call
sub
ret
cmp
push
fstps
or
mov
dec
push
inc
sub
cmp
lahf
je
sbb
ss
sub
push
push
mov
inc
mov
scas
pop
imul
mov
pop
ret
sbb
dec
in
or
sbb
int3
pop
sbb
scas
pop
popa
jmp
aam
jo
mov
cwtl
xchg
cmp
xchg
dec
adc
jl
fcoms
mov
testl
insl
mov
jbe
adc
test
lea
int
fucomp
dec
cmp
ret
nop
jp
lret
xchg
jo
aaa
push
bound
add
sbb
push
sub
bound
fisttpll
xor
xchg
repz
and
sub
xor
ret
data16
aas
sbb
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
pushl
lea
cmp
ja
fcmovb
jmp
or
mov
adc
add
sti
aas
sbb
and
lret
add
mov
popa
add
dec
popa
sar
cltd
inc
add
dec
or
cmp
jb
jecxz
jl
or
dec
movb
and
sbb
call
pop
add
rol
fildl
cmp
lea
ret
nop
or
add
lock
xor
mov
dec
mov
mov
out
cld
imul
inc
cld
loopne
orl
test
je
or
call
loope
and
je
cmp
adc
mov
and
cmp
jne
int3
dec
mov
and
nop
shl
or
mov
pop
lea
out
testb
adc
xchg
push
adc
inc
fwait
orl
or
xorb
adc
stos
clc
cmp
add
and
inc
inc
mov
in
sub
and
pop
in
adc
in
xorb
sbb
arpl
jle
or
jb
inc
sbb
push
test
jmp
lret
sbb
shl
mov
movb
dec
test
je
adc
inc
loopne
pop
and
mov
inc
push
and
mov
icebp
dec
mov
mov
dec
outsl
jmp
dec
shlb
enter
scas
add
jb
push
inc
push
ja
push
setae
icebp
aam
aad
add
rolb
adc
cmp
pop
inc
dec
nop
xchg
hlt
xorb
push
cmp
mov
dec
in
xchg
dec
enter
jbe
or
lods
pop
mov
push
jge
addr16
fistpll
add
push
push
mov
jle
add
pop
int3
push
or
push
je
push
lock
push
sub
pop
lea
push
push
enter
and
mov
sti
push
fs
adcb
mov
adc
ret
dec
xchg
aaa
fdivs
test
pop
dec
mov
sbb
or
or
cmp
fiadds
clc
subl
scas
sbb
cwtl
or
xor
or
mov
sbb
fidivl
xor
inc
cmp
add
jl
lods
pusha
cmp
pop
cmp
mov
adc
and
in
insb
add
inc
adc
mov
loop
cmp
and
sbb
cmp
jbe
and
and
je
jmp
and
push
or
dec
rorb
inc
pusha
or
enter
mov
js
cmpsl
push
push
pop
mov
sbb
test
and
mov
mov
cmp
mov
fs
ljmp
sub
and
pop
push
insb
mov
sarb
out
push
push
or
pusha
adc
adc
cmpsl
sbb
pop
or
sub
mov
fs
test
jne
lret
adc
ret
std
cmpsb
and
ret
mov
mov
in
movl
push
adc
jne
push
push
or
sbb
inc
sahf
dec
cli
sarl
sub
pop
mov
insb
mov
pop
ja
inc
das
jns
sbb
jo
push
and
or
sub
shrb
inc
pop
add
inc
int
shrl
push
pop
jge
or
pusha
inc
jmp
push
push
inc
add
ds
and
add
push
or
xchg
xor
js
xchg
mov
test
add
xor
mov
lahf
lods
mov
fs
gs
fbld
or
mov
es
or
stc
fnstcw
adc
arpl
inc
gs
idiv
std
in
jne
je
dec
outsl
je
imul
lea
gs
dec
outsl
inc
arpl
or
or
mov
sti
fimuls
xor
xor
outsl
insl
bound
add
ljmp
outsl
js
imul
ja
fistl
push
rol
sti
andps
outsb
dec
inc
xor
popa
dec
or
mov
je
jo
enter
push
or
pop
pop
inc
push
jns
push
xor
lods
test
mov
pushf
cwtl
xchg
fs
inc
push
nop
mov
test
fs
jo
sbb
push
nop
inc
pop
pop
push
fs
inc
push
push
dec
dec
nop
inc
push
sbb
inc
push
sbb
xor
sbb
sub
sbb
sbb
adc
nop
inc
push
adc
and
sbb
xor
orl
clc
hlt
lock
or
enter
loopne
enter
fcom
enter
ror
enter
xor
sarb
mov
or
enter
mov
pushf
cwtl
xchg
enter
nop
mov
test
fs
sarb
fcom
ror
and
and
mov
mov
lods
test
xor
and
sbbl
or
mov
jl
orl
je
insb
push
fs
pop
xor
and
and
and
cmp
xor
or
enter
sbb
enter
adc
enter
or
add
push
jns
add
cld
clc
push
sbb
lock
call
in
fsubl
push
fcom
shlb
cmpl
aaa
fs
orl
push
dec
inc
inc
or
enter
pop
xor
and
and
and
and
sbb
or
enter
add
nop
daa
addl
cld
clc
nop
inc
push
sbb
lock
inc
push
sbb
loopne
sbb
fcom
shlb
enter
int3
enter
orl
mov
mov
lods
orl
test
mov
and
and
and
and
insb
orl
push
xor
and
push
xor
and
and
and
sub
xchg
and
sbb
sbb
push
sbb
or
enter
xor
orl
in
and
loopne
or
enter
rorb
enter
les
enter
mov
or
mov
and
mov
pushf
cwtl
xchg
nop
or
enter
test
enter
jl
enter
je
insb
and
pusha
orl
pop
pop
push
push
or
enter
inc
xor
and
and
and
and
sbb
sbb
xor
nop
inc
xor
inc
push
xor
xor
pushl
add
shl
or
ret
shr
cmp
sbb
adc
or
push
push
or
call
imull
mov
push
movsl
movswl
add
jne
test
daa
mov
jns
or
inc
add
sub
xlat
aam
cmp
jl
inc
in
and
insb
jge
dec
cld
pushf
movsb
imul
or
adc
sbb
and
add
subl
sbb
fldl
sbb
sbb
fdivrp
jle
and
scas
cmpsb
mov
and
mov
sbb
loope
adc
fwait
push
mov
ret
push
mov
repnz
mov
push
mov
inc
xchg
jno
pop
sbb
ficoms
push
fs
or
inc
or
es
aas
inc
pop
or
pop
xor
je
call
lock
gs
fldenv
dec
push
push
dec
inc
inc
mov
add
outsl
cmp
and
jle
mov
dec
pop
inc
push
dec
pop
and
mov
push
push
pop
fucomi
sub
push
inc
dec
pop
dec
dec
dec
inc
push
das
xchg
dec
push
test
cmp
clc
jl
arpl
xchg
sbb
add
fmulp
subb
push
or
push
dec
push
dec
pop
push
dec
or
and
sub
pushl
or
gs
imul
aam
add
pop
inc
cli
pop
add
pop
xchg
femms
mov
movl
es
add
imul
or
iret
int3
push
or
inc
pop
inc
inc
push
xchg
aam
movntps
and
and
scas
sbb
or
pop
mov
mov
jns
gs
imul
add
or
sub
sub
fsts
rcr
adc
lcall
xchg
or
mov
adc
cwtl
mov
iret
movhps
push
push
arpl
jmp
sbb
addl
jg
adc
iret
pop
mov
ud2
inc
outsl
outsb
repz
lahf
loopne
insb
pop
mov
sbb
mov
add
arpl
cld
or
adc
imul
arpl
jg
dec
sbb
scas
sub
adc
fsubl
inc
iret
add
unpcklps
inc
loopne
mov
inc
jb
sub
lock
shrl
inc
cmp
in
cmpb
lock
jbe
scas
imul
outsb
jg,pn
or
jnp
mov
stos
pop
push
popa
daa
xchg
cmp
test
push
sbb
mov
nop
inc
xchg
nop
mov
push
mov
jl
je
add
fs
jg
in
in
aaa
aaa
aaa
jle
in
aaa
aaa
cli
sete
pop
data16
sbb
jl
dec
lock
and
hlt
orl
cmc
div
clc
or
enter
sti
xor
and
and
and
in
or
enter
movsb
xor
mov
jmp
orl
paddsb
orl
out
out
rcl
or
enter
aam
enter
xlat
enter
fcomp
fisubl
orl
orl
rol
xor
and
ret
les
enter
mov
and
and
int
or
enter
mov
xor
and
and
and
and
mov
mov
xor
and
and
and
adc
or
stos
lods
lahf
and
mov
push
rorl
jae
push
ja
dec
inc
sahf
xchg
pop
push
or
xlat
dec
loopne
jmp
mov
mov
inc
js
gs
imul
and
insb
aam
and
jmp
in
in
insb
jae
in
add
fstpt
mov
inc
inc
bound
je
imul
dec
mov
adc
adc
jo
mov
push
xor
push
xchg
in
jae
loopne
or
dec
jne
dec
dec
gs
imul
or
adc
dec
mov
dec
outsb
mov
scas
insb
dec
mov
cmpl
jg
scas
and
mov
xchg
sbb
xlat
insl
mov
ds
rcrl
outsb
scas
pop
aas
dec
sahf
or
insb
mov
inc
inc
imul
inc
jns
gs
nop
mov
inc
bound
push
popa
outsb
addr16
and
fisubrl
scas
outsb
or
outsb
jbe
jb
insb
outsl
ja
fs
xor
js
dec
test
scas
and
mov
cld
pop
dec
outsb
jbe
insb
imul
add
outsl
adc
insb
inc
dec
jnp
jle
gs
insb
insb
xor
and
shll
mov
scas
shlb
mov
jns
sub
jo
jo
popa
loopne
cmp
mov
or
dec
enter
daa
or
insb
or
inc
popa
jae
mov
aam
lret
and
pop
inc
scas
scas
jno
xchg
jno
loop
shlb
inc
inc
jae
push
imul
nop
sub
jb
and
movsl
jno,pn
insl
mov
shlb
shrb
pop
or
dec
ds
inc
add
sbbl
scas
pushf
pushf
push
sbb
jns
mov
clc
sbb
lds
mov
sub
jae
or
push
ret
push
mov
mov
and
mov
dec
pop
pop
adcl
mov
adc
sbb
or
stos
nop
inc
leave
cmp
scas
push
or
push
popa
data16
mov
ljmp
aaa
xor
xchg
dec
sub
mov
out
movsb
ret
xchg
cmp
inc
add
xor
std
add
int
adc
sbb
mov
lahf
fs
lds
sahf
icebp
push
push
int3
add
jne
psrlw
fcoms
jl
xchg
push
aam
aam
imul
std
decl
lcall
jnp
sbb
push
loopne
sbb
mov
jo
ja
push
mov
dec
push
outsl
jne
xor
hlt
add
test
dec
punpckhwd
loopne
movsl
sub
insb
jne
push
push
fchs
ret
lods
outsb
arpl
cmp
scas
movsb
test
fxch
mov
rol
push
clc
ljmp
mov
add
xchg
dec
mov
mov
aaa
mov
ret
xchg
sbb
idivl
push
aas
enter
inc
pop
scas
aam
das
mov
push
sbb
cmp
or
xor
pusha
das
cli
xor
movsl
xor
adc
jmp
lds
repz
lahf
std
mov
inc
inc
dec
popa
jmp
jae
fcmovnb
ja
pop
add
bound
test
jle
imul
cmp
jbe
std
mov
repz
je
movzbl
pop
push
decl
adc
mov
aaa
adc
movsb
mov
repz
push
jmp
jne
inc
inc
aas
push
mov
sub
or
inc
add
pop
stc
jnp
jns
out
and
sti
je
loope
out
sub
pop
sub
jno
mov
mov
test
mov
repnz
cs
lock
arpl
lock
sbbb
fsubs
enter
gs
sub
insb
push
arpl
fs
nop
sbb
inc
xor
push
out
outsl
add
or
pop
inc
lock
aaa
ja
jp
pusha
or
insl
push
lock
mov
call
add
inc
cmp
jl
cmpb
jbe
adc
fimuls
test
adc
clc
imul
or
into
sub
inc
imul
pop
aas
insl
ja
cmpsl
sbb
xchg
push
mov
mov
push
sub
sub
and
add
rcll
and
filds
jne
ja
add
fnstsw
and
mov
fucomp
push
sub
adc
inc
das
sahf
dec
mov
mov
inc
add
dec
sub
cmp
cmpsl
cmp
jne
mov
int
enter
xchg
jo
mov
cld
and
in
loopne
add
call
jnp
push
daa
mov
imul
sbb
add
xor
add
mov
dec
imul
xor
pushl
inc
push
push
add
sub
jb
sub
je
adc
adc
jae
cmp
sub
ja
das
add
mov
gs
pop
or
jae
inc
dec
cmp
fisttpl
or
jne
mov
push
testl
jl
ret
mov
shl
icebp
dec
pushl
cli
cmp
sysret
mov
in
ljmp
push
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
adc
lock
cwtl
aam
repnz
test
add
mov
decl
and
jo
pushl
inc
out
add
mov
negl
subl
pop
push
jnp
gs
sub
out
cmpsl
mov
sub
adcw
adc
mov
faddl
or
fildll
clc
sti
fildll
fistps
ret
add
add
sub
add
rorl
shr
fprem
fdivr
mov
xor
lock
add
fstsw
sahf
jae
pushl
ffree
ffree
ffree
fstpl
jns
rcrb
add
xor
cwtl
out
and
xchg
add
jnp
and
cmp
adc
cmp
add
push
jno
roll
dec
aad
xlat
adc
push
aam
jle
call
mov
add
or
mov
cld
jbe
mov
callw
pop
fidivl
sbb
int
add
repz
or
lds
xchg
inc
in
pop
pusha
das
jns
fcoml
xchg
jp
nop/reserved
push
mov
xlat
adc
jno
int
pop
dec
mov
mov
cwtl
mov
jb
cwtl
jl
inc
cltd
cltd
iret
add
sbbb
jg
or
movb
repnz
jl
pop
faddp
and
dec
mov
xchg
outsb
lret
arpl
add
push
es
sarb
mov
push
rorl
xor
xchg
mov
negb
fldt
fcomps
setne
jmp
ss
cmpsb
loopne
lock
lcall
push
negb
int
inc
cwtl
cwtl
sbb
gs
add
or
or
mov
fcoml
xor
bound
test
clc
push
mov
loop
adc
jmp
add
cwtl
cmp
sti
pop
clc
or
mov
loope
sub
inc
daa
clc
or
xor
xlat
inc
out
cmp
ja
cmc
and
ds
inc
ja
mov
adc
adc
mov
xor
lods
test
pusha
adc
or
lahf
outsl
shlb
inc
jae
test
add
orl
jle
lahf
push
mov
ret
jmp
push
or
pop
out
testb
jae
mov
pop
sbb
or
test
xchg
testb
lret
aad
fsubrs
cs
cld
dec
or
push
aas
mov
daa
mov
sahf
add
jl
push
xor
in
pop
push
or
clc
pushl
add
cmp
popf
adc
mov
aam
adc
and
dec
inc
cld
shlb
dec
jno
fstpt
scas
insl
fisttps
aaa
test
or
pop
loope
dec
loopne
pop
mov
repnz
lock
jmp
xor
pop
add
xorl
pop
or
ljmp
or
add
loopne
xlat
popf
xchg
js
sahf
jne
dec
inc
jg
inc
xor
into
gs
adc
sub
dec
mov
jl
add
pop
cs
mov
push
decb
test
into
xchg
iret
xor
cmpb
dec
pop
cmpsb
or
jae
cs
cmp
jae
popf
mov
and
cmpsb
and
test
adc
pop
das
xor
pop
pop
jne
inc
cmp
popa
or
rorl
adc
ljmp
pop
push
sbb
fdivl
cmp
jmp
dec
mov
addb
jecxz
push
or
loopne
clc
inc
xor
mov
pop
push
fsubr
add
mov
and
and
dec
insl
lods
and
xor
mov
outsl
arpl
mov
xorb
sbb
cmpsb
aas
and
xchg
jle
jne
mov
fistl
push
jg
out
push
dec
mov
xchg
aaa
pop
add
or
push
scas
pushf
mov
dec
push
std
pop
jne
jbe
push
jne
stos
xchg
push
jl
jno
push
popf
add
ja
andl
push
pop
inc
nop
insl
lcall
add
push
mov
iret
inc
call
inc
testl
xchg
bound
movsl
xor
clc
pop
xor
ret
out
mov
mov
and
movzwl
rol
ljmp
call
ljmp
fstpl
fwait
jne
mov
push
add
push
jge
mov
hlt
ja
in
mov
or
fsubr
push
lock
jl
insb
not
out
xor
pop
push
flds
adc
push
outsl
lods
xor
enter
mov
test
es
jge
and
push
fs
imul
lret
cmp
lock
push
clc
pop
pop
ret
mov
lret
dec
mov
push
out
inc
sub
pop
lret
xchg
pop
fstps
adc
addr16
pop
pusha
out
cli
mov
inc
mov
ret
pop
jbe
sbb
js,pn
out
iret
push
jbe,pt
xlat
mov
xchg
dec
inc
xor
xor
repz
mov
mov
push
mov
rolb
dec
test
cli
aam
ljmp
je
dec
mov
pusha
add
rorb
mov
xchg
pop
jmp
cmc
add
inc
jne
repnz
inc
inc
inc
addb
decl
cs
mov
pop
sub
jbe
sbb
cli
mov
adc
lret
loope
shll
sbb
mov
fwait
mov
mov
or
mov
out
xchg
pop
pop
inc
mov
xchg
shll
mov
jp
lahf
jbe
out
pop
dec
js
xchg
fsubs
cmp
push
cld
cli
pop
jbe
mov
pop
lock
idivb
add
push
lret
and
movb
les
repnz
and
scas
mov
or
std
aaa
inc
rorb
cmpl
je
mov
rcrl
add
push
js
fs
xchg
push
xor
cmp
mov
decl
fcmovnbe
cmpsb
add
jge
adc
mov
aas
pop
or
lods
cmp
je
stos
dec
jne
rcll
insl
sub
mov
ffreep
jmp
mov
mov
jnp
add
fdivl
push
cmp
jne
das
hlt
and
ret
lret
lods
jmp
xchg
xor
aaa
imul
sub
mov
mov
xor
das
icebp
cmc
testl
sub
jae
rcr
fimull
fsts
mov
rep
sbb
cmpl
xchg
xor
jge
std
xchg
pop
pop
mov
cmp
clc
or
jg
xor
cmp
ja
imul
mov
add
push
xorb
add
pop
dec
pushw
cmp
sbb
cmpl
std
or
jl
and
popa
repz
ret
je
xchg
ret
and
in
sbb
mov
mov
push
pop
idiv
sti
lahf
pop
jne
lea
mov
fwait
push
add
and
aaa
mov
fimull
pop
mov
mov
roll
mov
sbb
pop
daa
xchg
push
fdivl
fmull
std
pop
cltd
dec
fsubrs
shl
lahf
push
call
jne
and
jmp
inc
je
xchg
xchg
out
fwait
sbb
push
xor
ja
insl
jmp
imul
sbbl
rcrl
flds
mov
es
sbb
add
mov
js
mov
aad
cld
or
jmp
xor
inc
inc
jg
mov
enter
imul
data16
mov
and
mov
pop
jns
mov
ja
addr16
inc
inc
mov
jns
xor
dec
fdivl
or
sub
ds
jecxz
dec
xchg
pop
fcmovbe
mov
cltd
pop
ds
leave
inc
add
out
movsb
fisubs
jp
add
lret
mov
aas
mov
or
add
adc
in
dec
je
dec
jge
mov
mov
insb
sub
jbe
mov
xchg
pop
and
xchg
dec
inc
fcoml
into
cmp
pop
mov
push
mov
inc
iret
dec
mov
add
mov
xor
and
lds
pusha
xorl
jl
dec
shlb
mov
push
hlt
test
data16
push
loope
xchg
mov
pop
outsb
jmp
pop
leave
ret
push
cmp
jbe
xchg
xchg
fldl
test
rcrl
pop
dec
mov
push
stos
nop
push
lds
mov
sub
sbb
fdivrl
dec
cld
lea
add
jmp
dec
fidivs
ret
jmp
add
add
mov
jge
or
push
lea
mov
out
test
lea
mov
push
xor
stos
or
inc
or
stos
incl
pop
jge
mov
neg
jmp
or
leave
mov
stos
xchg
push
mov
jp
mov
push
mov
aas
ljmp
leave
jg
dec
mov
stos
cmp
jne
pop
pop
loop
test
xchg
aam
sub
in
xchg
fwait
sti
push
xchg
cli
mov
add
push
nop
repz
xchg
repnz
aad
mov
pop
add
fnsave
jno
jle
adc
dec
pop
mov
adc
jb
xchg
push
addl
dec
push
adc
arpl
js
sub
cmpsl
sub
lea
lea
lea
imul
mov
imul
aad
xlat
fstpl
push
add
ja
movswl
fistpll
cmp
sbb
add
add
mov
call
pop
cmp
dec
cld
popf
jmp
mov
in
lcall
dec
inc
loopne
push
loopne
lods
or
xor
jge
pop
mulb
outsl
jno
ret
std
mov
aam
cld
scas
push
imul
pop
sbb
loope
ljmp
xor
cli
rep
jmp
inc
inc
mov
loop
push
adc
fildl
stos
push
pop
inc
clc
dec
test
fcomip
push
xor
gs
out
dec
sbb
sub
xlat
add
movsbl
push
leave
mov
mov
mov
push
call
clc
insl
cmp
add
adc
ds
ljmp
dec
mov
repz
inc
test
jle
loopne
jne
sbb
in
in
stos
xor
jae
cli
pop
sti
add
or
jle
je
inc
jne
pop
dec
jne
ret
xchg
repz
in
xchg
or
repnz
or
lret
add
lea
fiaddl
je
push
push
cmp
loopne
andl
or
lock
addb
xchg
mull
out
pop
jge
mov
fcomi
std
adc
ret
and
inc
add
and
and
adc
and
sub
inc
sub
sub
mov
addr16
sbb
and
sub
jbe
xlat
adc
xor
sub
cmp
in
push
sub
cmpsl
loopne
jp
enter
dec
je
mov
pop
xchg
xor
cmp
repz
and
cmp
testw
aas
into
lods
bndldx
xor
inc
es
push
inc
push
inc
fldt
sub
cmc
imul
adc
iret
cmpb
push
adc
mov
mov
rcr
scas
or
jge
fwait
mov
neg
lcall
add
or
mov
lcall
jne
lea
mov
loop
jmp
inc
sub
xchg
shr
and
add
push
push
std
cmp
xor
stos
mov
add
jns
fwait
mov
cmp
aas
sarl
pushf
or
cmpb
jb
movb
loopne
testb
decb
and
ja
jmp
data16
popa
xor
enter
loopne
adc
cmp
inc
xor
mov
xchg
shr
mov
add
xchg
out
xor
and
jbe
adc
mov
push
rorl
je
add
fidivl
add
or
push
std
fistpll
cld
adc
push
inc
sub
mov
loopne
jae
dec
add
sbb
inc
loopne
push
in
insl
or
fidivl
mov
fidivl
nop
dec
setnp
dec
push
push
sbb
sub
fsubr
mov
jne
dec
sub
cmp
jp
mov
inc
or
ljmp
cmp
sub
movb
cmpb
divl
jo
js
pop
jmp
mov
sbb
test
inc
pop
or
xorb
hlt
add
loope
ret
jns
fwait
decb
fldz
cmpsb
xchg
repz
cmp
lods
scas
fnstcw
or
icebp
es
lods
cmp
cld
out
psubusw
inc
sbb
dec
and
jne
inc
mov
xchg
sbb
ret
jne
mov
jno
add
sahf
add
push
mov
adc
aas
jmp
fstpt
pop
push
pop
add
test
mov
sbb
xchg
push
test
insl
lods
and
out
clts
sbb
cmp
jae
fimull
cmpsb
arpl
add
mov
insb
jo
inc
negl
daa
push
mov
pop
cld
push
inc
imul
pop
cmp
xor
or
add
inc
rclb
std
push
clc
movsb
iret
js
shr
cmp
push
shrb
inc
pop
pop
fistps
inc
push
xor
mov
or
or
push
addr16
mov
mov
xchg
cmp
sbb
jle
adc
aam
fldt
fstpl
fwait
in
in
add
mov
mov
fcmovnb
fldl
inc
sbbb
adc
mov
mov
add
dec
mov
clc
and
or
shlb
dec
or
cmp
inc
stc
inc
jcxz
roll
jcxz
addr16
add
shlb
popf
pop
ficoms
call
pop
xlat
or
cmp
fstpl
fwait
jbe
add
insb
push
lret
movsb
dec
filds
mov
xor
pushf
iret
cmpsl
xchg
test
mov
add
cmp
jbe
lods
mov
ja
xchg
jl
jne
add
out
cmpl
mov
js
sbb
lret
popa
push
cmp
and
and
call
ret
mov
roll
cmp
and
imulb
testl
add
and
add
xor
adc
fldt
xor
mov
les
jg
add
lea
add
addb
adc
jle
push
jb
or
jb
sti
insb
sti
cmp
ja
adc
scas
lock
add
inc
dec
jne
cmc
daa
clc
loopne
leave
dec
mov
aas
cltd
idiv
imul
cmp
pop
add
sub
icebp
mov
ds
add
popa
ret
or
dec
sti
jne
inc
std
std
outsb
cmp
mov
sub
xchg
int3
push
rolb
lcall
cmpsl
addr16
push
inc
push
and
xor
decl
test
jg
mov
les
push
das
xor
clc
hlt
or
movsb
loope
loopne
aas
xchg
add
ret
dec
inc
cmp
jl
sub
add
jecxz
jecxz
and
and
pop
sbb
mov
mov
or
dec
lock
cs
push
sub
repnz
xor
ficompl
shl
cmp
push
in
lea
fsubrs
lds
int3
mov
lahf
pop
mov
enter
fincstp
push
ss
pusha
jecxz
cmp
jb
adc
sub
fistps
out
dec
sub
mov
and
cmp
mov
stc
jg
xchg
popa
lods
pop
jbe
cmpsb
scas
popa
add
add
sub
push
pop
cmp
inc
mov
rcl
jp
test
sub
or
sub
pop
and
sbb
push
cmp
push
pop
mov
adc
fstpl
inc
jmp
sub
popf
into
les
xchg
and
testl
mov
push
hlt
or
cmp
sub
sbb
jbe
add
xchg
and
lea
jle
shl
pop
jp
add
es
sbb
mov
mov
push
jae
popa
in
jns
mov
mov
lea
mov
mov
adc
sbb
mov
aam
aaa
and
arpl
ja
or
mov
je
lods
inc
sbb
hlt
out
push
cmpb
jne
out
negb
popf
push
mov
push
lea
or
jnp
mov
xchg
repnz
inc
in
add
mov
and
jecxz
push
in
jge
inc
and
call
or
lret
push
call
arpl
pushf
lcall
mov
stc
aad
jmp
lcall
push
stos
sbb
negl
jg
in
xor
stos
test
out
mov
pop
je
mov
insb
lea
inc
inc
jmp
dec
or
push
loopne
negl
je
or
add
daa
int3
inc
sarb
inc
jno
pop
cmc
pop
cmpl
sub
lock
jb
add
pop
push
lahf
xor
adc
lcall
jnp
xchg
imul
in
in
test
sbb
enter
iret
in
addl
jbe
or
int
jo
or
sbb
xor
xor
xchg
jne
inc
cmpb
jne
push
add
dec
ret
push
xchg
mov
lock
add
mov
pop
add
emms
dec
sbb
mov
sbb
sbb
jo
lcall
iret
fildl
pop
add
sub
incl
stos
and
dec
pop
jecxz
aam
arpl
mov
pop
jne
xchg
xchg
cmp
jae
pop
pushl
fmull
cmp
pop
pusha
cld
repnz
jns
mov
or
lahf
enter
pop
iret
push
mov
pop
cmp
jne
mov
push
xchg
mov
cmpsl
cmp
xchg
testb
sbb
and
or
enter
bswap
or
or
call
add
add
or
or
or
popf
das
pop
lcall
fwait
lahf
xchg
xor
mov
shrb
jbe
mov
cwtl
insb
pop
or
cwtl
pop
xchg
push
and
lds
add
mov
cltd
in
sub
pop
std
inc
mov
push
pop
popf
dec
push
lea
pop
mov
xchg
cltd
adc
pop
add
cmp
fcomps
gs
dec
sub
cmp
and
lock
popa
addl
xchg
in
notl
dec
add
add
sub
out
push
into
xabort
mov
btc
adc
sub
inc
mov
xor
es
sbbb
pop
lods
loope
popa
and
pop
mov
or
ret
cmp
push
lret
out
cmpl
dec
jg
je
mov
add
sti
xchg
pushl
pop
sub
je
pop
je
jmp
cmpb
dec
push
popf
or
and
nop
lahf
or
sub
add
dec
aaa
cmp
jmp
cmp
xor
mov
ljmp
popa
jnp
sti
xorb
dec
adc
sbb
mov
jmp
movsl
cmp
inc
fisttps
call
or
push
pop
cmpb
dec
fisttps
pop
inc
adc
push
in
call
pushf
rcll
lahf
and
lret
push
jb
add
push
mov
or
adc
jne
out
imul
jo
pop
cmp
addl
inc
jbe
daa
jns
pop
enter
add
into
mov
adc
dec
mov
mov
imul
xor
cmc
xchg
cltd
xchg
mov
cltd
xor
add
out
xor
cmp
test
adc
out
adc
sysenter
dec
call
jge
add
sbb
sub
imul
cmp
push
in
push
mov
mov
jb
jmp
sbb
push
test
fucomi
add
push
sub
xor
add
mov
push
cld
sub
stos
popa
jnp
test
pop
push
jmp
adc
sbb
clc
inc
mov
stos
pusha
dec
mov
adc
jmp
jmp
or
dec
das
push
dec
adc
push
adc
add
loop
or
into
mov
insl
mov
or
ret
jne
or
mov
nop
sbb
lea
add
mov
adc
adc
popf
jbe
das
xor
daa
xchg
and
jg
lods
les
or
sbb
mov
pusha
jg
cmp
mull
cmpsb
scas
sbb
lcall
push
pop
mov
lock
add
xor
out
inc
fdivrp
ljmp
adc
addb
pop
push
jb
push
sub
out
jo
jle
pop
pushf
adc
ret
add
push
lea
repnz
ficomps
xchg
andb
imull
dec
mov
jo
arpl
movsl
xor
cmp
xor
xor
or
or
push
sub
bound
xor
inc
add
mov
jnp
adc
movsl
or
push
jno
popa
das
push
mov
faddp
in
out
fdivr
pop
pop
fwait
pop
jl
pop
in
cmp
jne
incl
mov
in
ud0
stos
sub
jmp
sub
daa
add
inc
je
dec
je
sub
sub
je
jmp
mov
mov
call
push
push
jg
jmp
inc
mov
mov
ret
jg
xor
xchg
mov
jge
adc
inc
mov
lea
jg
xor
testb
or
pop
fists
filds
pop
mov
lods
mov
mov
or
insl
jbe
jno
mov
jmp
cvtps2pd
ret
and
jmp
rolb
dec
les
rol
mov
addr16
pushl
mov
adc
cmp
jg
cli
test
aas
and
ret
add
jle
cmp
add
add
js
add
mov
negl
push
ds
cld
gs
mov
fmuls
fadds
mov
in
inc
test
scas
and
add
mov
mov
inc
xor
dec
mov
xchg
sub
es
ds
jnp
jne
cmp
or
or
and
sub
js
push
movsl
loopne
mov
push
ss
mov
aam
ret
dec
and
mov
imul
cmp
lods
mov
out
imulb
and
xchg
fistl
sbb
and
xor
repnz
out
into
add
lock
clc
xchg
pusha
shll
imulb
jb
and
pop
out
out
ret
push
mov
and
enter
dec
push
jb
xor
enter
hlt
sbb
jmp
jne
jmp
clc
pop
push
std
out
cmpsb
xor
sub
cmpb
ja
fistps
inc
lds
sbb
sub
push
fstps
mov
jp
fmull
sub
fidivrs
cmp
jle
and
fs
jne
push
adcb
testb
or
or
ja
repnz
or
pop
pop
ds
aam
cmp
xor
mov
and
lds
jp
mov
xchg
lret
or
sarl
jecxz
lds
push
fistpl
xlat
stos
add
fsubrl
ficoms
push
fsubrs
fsubrs
xor
cmp
push
out
dec
adc
add
push
sbb
xchg
out
mov
jno
sbb
ret
mull
sub
scas
out
add
lock
gs
fildl
sub
les
idivl
pop
stos
mov
inc
jg
jmp
push
test
add
enter
test
mov
sub
mov
push
mov
outsl
cmc
inc
add
xor
jbe
inc
mov
mov
orl
or
or
add
xchg
pushf
nop
inc
or
add
sbb
test
test
xor
repnz
inc
adc
sbb
add
sbb
sahf
outsl
lods
push
in
or
add
add
mov
push
adc
jb
in
cmpsl
popa
mov
push
add
xchg
out
mov
xchg
into
add
icebp
inc
dec
inc
cmp
adc
test
dec
aaa
call
xor
add
inc
fisubl
in
adc
lock
cs
fwait
in
mov
push
cmp
ret
dec
and
mov
jo
daa
fnstsw
lods
mov
jb
sbb
stos
fstpl
fwait
jmp
sbb
and
adc
and
sub
and
dec
push
cmpb
pop
shlb
push
sbb
add
cld
scas
jo
push
add
sub
jb
or
xchg
dec
shrb
cmp
pop
or
mov
mov
sti
push
pop
pop
mov
pop
sbb
inc
les
arpl
push
fdivrs
addl
andb
imul
movsl
lods
sub
xor
mov
cld
push
push
addr16
add
xor
fcomps
mov
or
call
add
push
lea
dec
or
or
jl
jno
xchg
sbb
cltd
inc
lock
lock
inc
jecxz
fwait
fisubrs
sti
or
adc
xor
outsl
or
cs
in
loop
faddl
and
loope
dec
call
xchg
in
or
or
add
scas
je
mov
pop
sbb
les
pop
fists
idiv
jle
inc
lret
push
jge
je
xchg
cmp
fs
add
insb
movsl
add
rcrb
dec
mov
jg
adc
sub
ret
je
inc
pop
or
in
imul
shll
mov
xchg
ret
push
and
fsubl
mov
inc
xchg
jecxz
leave
cmp
mov
ja
andl
or
push
mov
lds
in
mov
in
pop
outsl
jnp
jne
push
or
sbb
xor
inc
repnz
shlb
cmp
xor
xchg
or
jne
push
pop
xchg
orl
and
mov
push
add
jb
sub
mov
adc
xchg
call
inc
je
sub
je
scas
ret
scas
xor
lcall
add
mov
das
pop
push
stos
push
sbb
ucomiss
fcoms
add
mov
cld
jle
mov
push
cmp
sbbb
js
xor
jmp
dec
cmp
xchg
xchg
add
dec
add
jmp
lcall
xor
xor
cmp
je
jne
xor
add
add
in
jle
pop
xchg
adc
pop
pop
dec
mov
add
pop
pop
pop
mov
pop
inc
ja
add
push
test
and
inc
adc
or
sub
cmp
ljmp
jo
mov
shl
fcompl
or
cmpl
daa
sub
lea
lods
jns
push
and
mov
insb
xor
je
sbb
or
popf
cmpsl
dec
adc
ret
pop
rolb
repz
mov
mov
or
dec
sbb
scas
sub
enter
sbb
push
sbb
fdivs
cmp
jo
jp
rcl
paddb
je
pusha
rcl
and
loopne
cltd
pop
mov
and
fidivrs
or
movb
aaa
and
mov
xor
mulb
pop
mov
sarb
js
into
in
mov
clc
push
lea
xor
mov
push
sbb
cs
ret
pop
or
cmp
mov
push
shrb
es
mov
mov
lods
sub
mov
dec
mov
adc
hlt
cmp
add
xor
add
jo
cmp
add
or
roll
ret
push
aam
mov
pop
pop
dec
pop
or
test
push
mov
adc
inc
pop
clc
adc
add
sub
outsb
adc
sub
sbbl
or
dec
or
mov
addl
or
test
push
inc
add
mov
inc
mov
fildl
ret
xchg
xchg
lcall
adc
push
nop
fwait
inc
push
inc
mov
or
popa
lds
je
mov
insb
lock
mov
push
or
sbb
aas
or
mov
dec
sarl
stos
dec
cmp
fcmovnbe
mov
or
cmp
sbb
sub
mov
jmp
inc
xor
xor
mov
pop
pop
into
add
cmp
or
fsubs
mov
push
or
and
idivb
cmp
ljmp
aas
adc
movsb
jmp
xchg
and
ljmp
add
in
dec
jo
or
pop
adc
jmp
loopne
adc
jne
cld
xor
lods
mov
adc
aaa
add
mov
xchg
push
call
ds
in
or
jge
aad
xchg
hlt
clc
mov
ds
loopne
adc
pop
orb
jb
or
push
cmpsl
jecxz
adc
add
pcmpeqd
pop
outsl
mov
int3
insl
add
mov
or
push
mov
lds
and
push
roll
scas
repnz
lcall
xchg
jnp
cld
xchg
xchg
inc
push
push
cmp
je
jmp
mov
xchg
je
jmp
xor
cld
push
jmp
and
add
mov
add
sub
pop
or
or
lret
mov
or
cltd
loop
iret
mov
pushf
or
out
nop
xor
repnz
adc
mov
mov
jb
subb
and
cld
cmpl
jne
sub
mov
inc
pushf
jae
or
inc
or
or
mov
test
cwtl
dec
mov
pop
cmp
mov
xchg
xchg
fs
and
mov
xchg
pop
faddl
popa
rcl
mov
and
fsts
jnp
jae
or
in
addr16
enter
shrb
mov
pushf
jecxz
ds
jo
into
insb
addb
cwtl
mov
movsb
test
mov
pushf
xchg
add
dec
push
nop
daa
mov
bnd
sub
inc
cmpsb
dec
cmp
mov
sub
cmp
std
std
ds
rolb
or
sbb
and
cmp
push
jae
cmp
leave
inc
mov
adc
or
hlt
add
add
mov
or
lock
insb
push
fdivrl
or
or
imul
push
enter
jnp
mov
push
jbe
test
pop
imul
dec
scas
aam
dec
mov
sub
dec
outsl
shlb
add
mov
adc
pushf
repz
mov
ljmp
js
xlat
cmp
movsb
mov
inc
xchg
iret
sti
test
addb
ret
mov
inc
fs
add
jl
cltd
and
movsb
movsb
mov
test
out
add
add
aaa
fdivs
cmp
mov
adc
test
push
insb
incl
push
inc
xor
stos
mov
js
cmpsl
sbb
in
or
lds
es
add
repz
lods
hlt
lret
hlt
ret
push
adc
mov
mov
or
fidivrs
add
jne
cmp
cmpsb
jle
mov
fucomip
and
mov
nop
aad
push
pop
or
icebp
cmp
xor
dec
shlb
xchg
and
dec
sbb
xchg
call
lret
push
dec
xor
and
mov
stos
and
inc
sub
fdivrs
dec
cli
fstpt
dec
jbe
mov
inc
cmpsb
xchg
push
adc
inc
loope
mov
data16
mov
push
std
rcll
aad
or
shl
jmp
dec
jmp
adc
aas
or
sub
and
jns
dec
or
inc
adc
and
out
add
add
add
xchg
add
ret
push
pusha
test
je
adc
in
nop
sbb
leave
cmp
daa
inc
cmp
add
inc
popa
xchg
jle
adc
adc
mov
arpl
pop
jg
mov
scas
ret
stos
das
adc
jl
mov
and
arpl
rol
cmc
inc
inc
fmull
push
shlb
cs
xor
add
jo
inc
sbb
mov
mov
mov
adc
jl
es
fidivrl
addr16
adcb
imul
adc
adc
jb
cmpsb
sbb
dec
fwait
aas
mov
and
push
aaa
fildll
push
in
mov
mov
jg
rcrb
pop
xchg
or
or
push
fs
add
imul
jb
iret
es
fisubrl
pop
jge
pop
mov
call
sub
sub
ss
daa
jg
lds
jae
pop
loop
or
inc
sbb
rclb
jae
push
adc
mov
ret
emms
test
pop
adc
icebp
rcrb
or
pop
or
push
add
sbb
and
dec
es
scas
jo
push
and
jns
and
mov
cmp
jno
cmp
xor
jl
fs
inc
sub
fwait
push
gs
xchg
pop
push
or
icebp
or
orl
sub
add
inc
aas
outsb
xor
push
insl
movl
jg
xchg
cli
cmp
jl
aad
cwtl
mov
sbb
mov
inc
jmp
in
dec
and
sets
jl
dec
sarb
and
inc
lahf
jge
lea
jecxz
cmp
scas
adc
ljmp
jl
mov
js
jge
mov
inc
lods
xchg
inc
xchg
sbb
jno
or
shl
fadds
loop
add
add
popf
and
add
push
push
xlat
in
xorl
inc
inc
add
test
sub
cmp
jbe
cli
sub
cmovbe
mov
mov
lock
daa
stc
repnz
pop
cmp
sub
cltd
pop
into
sub
xchg
xor
iret
scas
mov
adc
scas
dec
fiaddl
inc
jne
and
cmp
rolb
stc
push
mov
and
hlt
xor
push
bound
outsl
pop
test
or
sub
in
push
adc
int
testb
push
mov
sub
jb
inc
mov
inc
sti
pop
clc
sbb
stos
sbb
xchg
scas
lret
std
or
inc
jne
ds
push
xor
pop
ja
push
ret
jecxz
adc
lea
push
movl
push
or
push
add
mov
faddl
ljmp
adc
sub
ds
mov
inc
mov
shr
xchg
add
test
out
push
int
mov
inc
aaa
push
cmp
lock
jbe
mov
insl
adc
dec
repnz
popa
mov
repnz
inc
iret
inc
mov
cmc
lea
or
into
mov
testl
das
xchg
rorl
dec
xor
in
sti
in
cli
jmp
dec
pop
fadd
mov
push
or
andl
scas
fildl
add
sub
pop
sub
dec
jne
push
popa
leave
das
jno
rolb
lods
mov
movsl
int3
scas
nop
lcall
push
xor
mov
mov
push
push
lock
fsubr
add
inc
mov
add
sub
mov
hlt
inc
add
std
sbbb
mov
mov
ja
jmp
mov
mov
std
sbbb
xchg
in
mov
mov
mov
fcoml
pop
sub
dec
cmp
jmp
inc
sahf
or
pusha
mov
in
fcomp
pushf
cmp
divb
mov
sub
xor
ret
inc
cwtl
cmp
repnz
xor
enter
or
enter
adc
sti
leave
nop
inc
push
jns
leave
pushf
jge
and
enter
aas
ret
rolb
shl
arpl
mov
dec
pop
cld
stos
enter
lods
enter
lods
ss
cmp
or
or
sub
pop
pop
in
leave
lea
mov
push
icebp
out
push
test
cmp
stos
das
pop
push
es
scas
insl
add
fs
pop
add
scas
pop
popa
insl
pop
jo
push
add
push
and
imul
pop
sbb
hlt
leave
in
scas
out
int
push
cmp
fadd
jbe
out
in
leave
dec
stos
jle
mov
add
push
inc
or
je
add
ja
das
adc
jp
jmp
and
xlat
mov
xor
lret
hlt
inc
add
pop
into
ret
push
lea
xor
mov
scas
jae
add
sbbl
sbb
dec
sub
xor
mov
arpl
mov
add
daa
cli
out
clc
add
and
and
adc
lret
push
and
sbb
pop
mov
sub
sub
fsubrs
repnz
cwtl
mov
xor
cmp
int3
add
or
cmc
or
mov
cmpb
rcr
jo
adc
jae
cmp
aas
cmpl
or
in
inc
add
inc
dec
cmp
shll
fndisi(8087
testl
outsl
ret
jnp
add
fdivl
sub
sbb
jb
ror
mov
push
clc
aaa
mov
push
xchg
in
ficoms
adc
mov
flds
cld
adc
stc
push
xor
fstl
or
pop
xchg
add
cwtl
add
adc
int3
mov
or
lods
mov
push
repnz
jecxz
jecxz
mov
sub
cmp
sbb
mov
flds
repz
xor
mov
adc
push
or
jbe
int
mov
outsl
in
les
push
js
and
mov
scas
test
push
add
je
jbe
sub
stos
mov
imul
gs
jo
aam
add
inc
js
cmp
roll
xchg
call
dec
ret
xchg
pop
fcoms
and
xor
xlat
push
sbb
insb
mov
decb
push
mov
mov
and
jne
inc
cmp
jne
pop
and
popf
or
test
adc
xlat
pusha
addr16
subb
xor
inc
jmp
xchg
jo
into
push
sub
cmp
mov
testb
jmp
fsubr
fildl
fidivl
call
shrl
push
jbe
mov
inc
or
bnd
inc
loop
mov
cwtl
sbb
mov
movsb
icebp
into
jp
mov
rolb
add
add
hlt
outsb
sbb
and
inc
or
xor
jl
test
stos
clc
and
scas
sbb
mov
addr16
xor
and
movl
xor
add
mov
push
pop
adc
sbb
adc
shlb
and
movb
outsb
in
mov
iret
loopne
mov
cmp
movsl
mov
adc
jbe
sbb
mov
dec
inc
push
jbe
les
fcoml
dec
cmp
push
sbb
pop
adc
adc
mov
inc
jnp
lock
cld
cmp
je
push
iret
pushf
mov
adc
jo
filds
into
sbb
seta
mov
lea
mov
jmp
adc
dec
sbb
xor
fisttps
cs
das
cmp
pop
imul
fists
sub
lds
xchg
ret
incl
xor
xchg
add
mov
dec
sbb
jnp
mov
inc
jo
pop
cwtl
shr
scas
mov
test
popf
pop
push
lret
pop
lock
inc
div
mov
sbb
rcrl
cmp
cmp
movsl
cmp
shr
inc
jno
add
or
ret
int3
sbb
inc
xchg
and
or
emms
pop
jb
dec
or
dec
out
xor
jb
xor
int
enter
mov
stos
jmp
xor
cltd
push
dec
pop
cmpsb
pusha
push
xor
add
lret
xor
leave
popa
lret
ret
push
xor
nop
or
add
dec
cmp
add
lods
pusha
dec
adc
xor
lods
fstps
lcall
in
mov
jne
test
cmp
int
push
ss
test
sbb
jg
leave
adc
loop
xor
and
popf
je
pop
pop
pop
test
pop
mov
xor
pop
sbb
xor
cmp
sub
push
cmp
imul
push
sbb
xor
rclb
ss
or
out
mov
sub
cld
add
lods
imul
push
in
push
mov
xor
push
int3
loopne
pop
rcrl
jle
push
mov
jl
mov
lods
mov
cs
nop
cltd
cmpsb
cmp
mov
test
jl
lock
je
insb
push
js
imul
lcall
mov
lods
imul
adc
cmp
pop
and
mov
xor
les
xor
movsb
pop
sub
xor
and
cwtl
sbb
dec
inc
sbb
and
sub
or
das
or
cmpsl
add
pop
in
movsb
sbb
push
loope
add
clc
jbe
pop
les
inc
lcall
in
jl
rcrb
call
loopne
lods
sbb
fmul
mov
pop
and
aam
pop
rolb
int3
or
enter
ret
lcall
lcall
mov
inc
mov
mov
xchg
inc
inc
or
jns
cmp
mov
mov
aad
xlat
cmp
pushf
jne
or
mov
mov
adc
mov
sub
sbb
inc
push
repnz
mov
pop
mov
push
add
fwait
inc
add
fcompl
xchg
ss
jl
cmpsl
jge
xor
inc
adc
in
or
pop
enter
and
adc
xor
add
adc
es
mov
jg
inc
cmp
xchg
iret
mov
std
add
jns
shl
xor
push
push
add
push
lea
push
out
mov
pop
jb
fldt
pusha
mov
aam
sbb
test
cmpsl
cld
psubb
jge
add
or
pusha
lcall
loope
pop
data16
or
fcomps
popa
pop
inc
scas
sbb
inc
push
pop
cltd
mov
xchg
xchg
aaa
leave
or
and
ja
and
test
lods
xchg
mov
test
lcall
fwait
xor
adc
incb
clc
flds
fldcw
add
add
cmpl
xchg
and
push
and
fimull
clc
lret
add
in
clc
jecxz
sub
and
jge
cmpb
sbbl
cmc
sbb
adc
mov
std
enter
inc
mov
push
xlat
ret
inc
cmp
sbb
jmp
xchg
dec
jp
adc
stos
xor
shll
divb
popa
nop
fbld
scas
xchg
and
dec
stos
adc
das
mov
pop
iret
or
in
add
jns
jle
out
sub
adc
pop
stos
mov
cmp
jg
in
punpcklbw
xor
call
pop
inc
pop
sbb
dec
lcall
xor
shlb
cmp
insb
mov
add
in
and
faddl
in
lcall
mov
xchg
dec
cs
mov
mov
mov
dec
cs
mov
ror
cs
cs
aam
dec
sahf
xchg
dec
fsubrs
xchg
dec
sahf
xchg
fdivrl
lock
iret
and
in
adc
pop
repnz
xlat
push
call
fnstcw
repz
xor
ficoml
jb
inc
hlt
aam
in
out
clc
fildl
mov
jo
add
movsb
push
cmp
jne
pop
rol
stos
or
sbb
es
add
and
inc
fs
jne
dec
ds
enter
imul
fs
pop
outsb
dec
jb
pop
outsl
jb
fnstsw
inc
insl
jo
inc
jb
insl
push
je
push
push
dec
loope
mov
inc
shlb
insl
jnp
mov
fistpll
inc
jae
push
inc
jns
pusha
xchg
nop
add
sub
push
fbld
leave
dec
fildll
jbe
cli
mov
ret
aaa
mov
add
and
add
pushf
inc
dec
imul
test
roll
fsubrs
or
cmp
add
int
loopne
and
jg
add
add
mov
cmp
inc
js
xchg
inc
out
and
cmp
in
inc
jnp
sbb
sbb
mov
push
test
mov
cmp
push
inc
jne
fstpl
loope
dec
inc
cmp
popa
inc
xorb
add
and
subb
xchg
adc
add
sub
sub
push
push
inc
mov
sbb
cmpsl
in
adc
push
repnz
mov
inc
test
xor
lock
dec
test
mov
jg
inc
jb
jb
push
pop
inc
sub
jb
lret
mov
sub
adc
in
ret
dec
lahf
push
jecxz
or
pop
sub
xchg
fs
orl
sbb
or
das
test
mov
jecxz
jecxz
iret
add
pop
ds
iret
inc
jb
jns
lock
push
or
add
sbb
testb
insb
mov
sbb
movsb
bound
pop
test
fcmove
in
aas
test
outsb
divl
shlb
subb
lods
aad
ret
jg
fwait
cwtl
int3
xor
daa
icebp
aad
cld
loope
cmp
dec
notb
jmp
xchg
pop
das
in
in
dec
fldlg2
add
mov
cmp
jnp
js
ss
or
mov
pop
adcl
call
xchg
inc
add
test
cmpb
jb
dec
xor
rolb
cmp
adc
adc
out
out
daa
nop
and
cltd
nop
pop
and
ret
adc
or
pushf
out
add
sub
aad
ret
add
adc
jecxz
push
jg
mov
jae
or
sbb
or
int
sub
pop
add
fdivrl
or
aas
dec
je
sbb
or
xchg
ja
push
xchg
daa
loopne
ja
add
mov
xchg
adc
mov
lret
xchg
pushf
nop
in
loop
dec
pop
subl
test
lret
clc
repnz
hlt
sub
test
dec
lock
jecxz
in
xchg
and
in
pushf
or
cltd
call
pusha
leave
xchg
inc
add
nop
out
in
or
jae
loopne
sbb
fs
inc
push
mov
jecxz
or
int3
or
jb
enter
les
fsubs
int
enter
sbb
sbbl
sbb
push
test
dec
loopne
or
push
cmpsl
xor
lods
data16
enter
cmp
pop
test
movups
je
fld
insb
jno
jge
adc
add
push
enter
sbb
push
mov
mov
and
outsl
and
in
dec
jnp
xor
mov
push
push
or
mov
mov
jmp
daa
nop
adc
add
inc
or
daa
in
int3
aad
add
pop
hlt
cmp
add
add
adc
ret
test
setg
dec
movsb
fbstp
push
vmptrst
mov
cmp
addl
insl
jp
dec
or
xchg
jne
pushf
xchg
fstps
push
xor
jmp
xchg
jo
notl
subb
mov
js
in
pop
mov
call
and
inc
add
fisttpl
or
push
add
pop
sbb
add
adc
pop
mov
jne
out
push
test
je
dec
inc
dec
xchg
clc
int
shlb
jmp
and
fld
cmp
popf
or
outsl
cmp
jl
inc
xor
lea
fcmovu
and
or
lea
push
jno
test
pop
hlt
mov
xor
adcl
inc
pop
dec
inc
movsb
ret
mov
sbb
mov
das
inc
stos
dec
roll
jbe
jnp
dec
repz
dec
jnp
in
cmp
dec
pop
subb
in
test
cs
cmp
jl
ss
insl
js
mov
push
xlat
enter
mov
add
jae
push
add
sbb
or
add
fsubrs
sbb
jg
inc
sub
clc
int
push
xor
idivl
dec
fistpll
jmp
or
pop
cltd
fsubrl
roll
push
and
or
daa
jae
mov
out
aas
push
add
push
push
ss
ret
mov
adc
inc
pop
jecxz
cwtl
add
cmp
jne
add
sub
fucomp
push
call
int
out
jecxz
xchg
mov
jmp
mov
jbe
mov
adc
pop
adc
cmp
mov
push
je
or
dec
jl
pushw
jmp
sub
mov
fcomps
jne
fcomps
sbb
inc
in
fildl
push
out
call
or
pop
inc
push
lret
dec
sbb
or
sbb
push
js
add
and
adc
subl
icebp
clc
jmp
arpl
pop
xor
stos
inc
out
sbb
and
push
clc
fimull
in
aas
add
out
jno
or
sbb
add
and
or
loopne
rorb
push
xchg
fdiv
subl
mov
sbb
stos
cld
adc
adc
cltd
cltd
nop
in
out
in
dec
call
or
xor
or
xchg
push
inc
cmc
out
fucomp
sbb
jmp
push
jecxz
jno
enter
sub
jbe
inc
loop
mov
sub
lret
repnz
decl
push
sbb
push
js
in
call
add
mov
loop
and
push
sub
incl
gs
add
mov
les
and
sub
cmp
adc
hlt
sub
icebp
dec
cmp
js
mov
xor
dec
cltd
xor
jmp
cmc
loopne
ret
cmp
lock
je
mov
imul
cwtl
sbb
inc
add
sub
repnz
or
int3
inc
rcrb
or
lock
test
enter
pushf
xor
xchg
cmp
cmp
xor
ja
les
movsb
popa
stos
ja
and
mov
xchg
mov
lods
add
adc
mov
push
icebp
adc
ja
repz
enter
repz
inc
push
das
mov
sbb
inc
cs
pop
das
dec
mov
and
mov
aad
xorl
mov
adc
sub
or
push
push
push
push
xor
jne
insb
push
cmpsl
sub
xor
jae
push
es
arpl
pop
adc
add
inc
inc
add
popf
std
push
push
hlt
fsts
cmp
inc
lds
push
js
roll
es
jmp
adc
or
hlt
pop
xor
scas
sarb
lret
dec
clc
rclb
cmp
push
loopne
xorb
mov
addl
xchg
push
dec
shll
mov
shlb
div
adc
push
stos
or
dec
rol
cmp
int
bound
stos
xchg
push
push
pop
orl
leave
xor
dec
dec
scas
int
and
xlat
int3
pop
jmp
fmuls
ss
ret
xor
xor
js
sbbl
xor
int3
cmp
fsts
pop
pop
mov
push
clc
frstor
or
cmp
rolb
movsb
cld
mov
repnz
or
xor
jb
and
std
repz
mov
jp
ljmp
aam
push
or
hlt
jmp
add
je
ret
mov
push
inc
jmp
adc
adc
roll
dec
cs
adcl
add
add
iret
arpl
pop
das
dec
shrl
xchg
movsl
enter
fwait
clc
dec
mov
sbb
dec
push
je
mov
or
or
decl
sti
std
jg
sub
inc
fstps
mov
test
xor
jbe
sbb
aam
or
data16
pop
adcl
sahf
iret
sbb
jb
test
hlt
call
lock
push
or
adc
mov
movsb
push
add
cmpsl
fbstp
pop
movsb
add
in
clc
cmp
jno
sub
cmp
and
call
das
xchg
or
inc
xor
aam
inc
test
stos
adc
shlb
xor
push
sbb
je
ret
fs
and
pop
jmp
jns
jmp
inc
or
shll
push
sbb
shlb
cli
jns
mov
mov
push
hlt
popw
pop
add
mov
xor
mov
cld
lahf
imul
test
mov
add
mov
push
sar
cmp
pop
jg
push
xor
push
and
or
sbb
cs
jnp
add
xor
mov
xor
popa
sub
add
mov
sub
movsb
inc
push
addl
ljmp
dec
je
jmp
outsl
cli
sbb
jns
loopne
je
divl
and
movsb
jecxz
clc
inc
mov
cld
shll
dec
pop
jnp
xorl
lcall
sbb
cmp
cmp
push
ret
push
adc
flds
sub
inc
fstp
sub
xchg
or
stos
fwait
test
cmp
jmp
sbb
imul
push
ret
sub
sbb
pushf
or
jmp
or
daa
jmp
jmp
cmp
add
out
sbbl
and
xchg
push
sbb
pop
stos
cmc
imul
or
call
loopne
in
mov
or
add
insl
leave
inc
jne
jge
adc
arpl
mov
jmp
rcpps
into
sub
push
mov
ret
orb
mov
andl
sbb
fistl
xor
enter
push
je
leave
and
pusha
adc
or
adc
in
rorl
and
adc
dec
add
dec
fisttpl
loop
add
sti
or
push
sub
push
mov
mov
pop
sbbl
mov
mov
mov
js
cmp
or
xchg
fs
cmp
aas
or
adc
out
fs
loopne
ja
out
dec
jmp
lcall
sub
push
jns
addb
cmpsb
jg
cmp
adc
jb
mov
mov
and
leave
add
adc
adc
daa
sub
shll
pop
popa
jnp
inc
lock
dec
lea
movsb
imul
int
push
adc
adc
add
leave
sub
ret
iret
mov
xchg
gs
fwait
mov
cs
orl
movb
add
int3
sub
sbb
fucomp
mov
mov
adc
stc
xor
aaa
sbb
xchg
mov
adc
and
mov
negb
scas
in
es
bound
hlt
push
add
xchg
adc
add
cmp
jl
test
xchg
es
hlt
loopne
shlb
dec
jmp
popa
dec
call
push
sub
fnsave
mov
loopne
mov
loopne
or
mov
lea
push
jb
out
cmp
sbb
es
xchg
call
call
int3
pop
pop
mov
es
negb
imul
ja
inc
sbb
adc
bound
ljmp
sbb
xchg
pop
pop
cmpsb
sbb
addl
dec
shll
ljmp
mov
shlb
xchg
add
xor
mov
push
pop
daa
mov
xchg
xchg
mull
or
lock
mov
inc
push
adc
dec
adc
shll
lock
and
sub
das
add
nop
arpl
leave
add
xchg
sub
add
mov
xor
in
nop
jmp
mov
jge
sbb
imul
sub
cmpsl
rcrl
pop
pop
and
and
xor
cmp
jb
inc
pop
cmpsb
int
lcall
bound
add
or
xchg
mov
xor
fsubs
loop
pop
nop
aaa
and
sub
stc
movsl
jmp
and
mov
mov
nop
push
adc
add
inc
out
das
mov
sub
xor
inc
roll
push
cmp
and
xor
outsl
sub
xchg
add
lret
test
das
dec
test
push
add
dec
dec
testb
test
xchg
stc
es
testb
cmp
xor
add
add
or
sub
sbb
mov
mov
xor
addl
inc
jo
fs
add
push
out
or
out
or
in
out
sub
sub
jbe
pop
notl
push
orl
loope
and
popf
mov
inc
or
sbbl
les
xor
shll
lock
rcrl
daa
cmp
push
lret
xor
fldenv
push
jo
xor
cwtl
movsl
jb
or
or
cmp
cmp
fnstcw
xchg
sbb
or
jg
aas
add
sub
popa
add
sbb
push
xchg
mov
sbb
fs
incl
push
dec
cmpsb
add
adc
xchg
lahf
aad
dec
jnp
icebp
or
sbb
adc
push
das
pop
cwtl
adc
pop
sbb
arpl
dec
mov
sub
or
or
shll
fwait
mov
loopne
lcall
pop
pop
xor
sarl
inc
sub
adc
test
sbb
inc
fisubrl
sbbb
jbe
push
inc
dec
jmp
adc
nop
imul
cmp
pop
inc
popa
jne
lds
mov
aas
jmp
cmp
aam
cld
imul
sbb
mov
repnz
jl
add
jmp
dec
fwait
inc
nop
xchg
jae
mov
insl
or
test
xchg
sub
mov
push
test
inc
scas
outsb
cmp
xlat
add
rcrl
or
mov
and
popw
or
dec
pop
xor
mov
push
add
int3
dec
inc
pop
pop
push
faddl
add
fiaddl
xchg
push
jo
rcl
xor
movsl
testb
push
sbb
lcall
cld
pusha
jne
mov
mov
je
fcoms
mov
pusha
lcall
add
and
xor
sub
add
imul
int3
lcall
inc
mov
mov
sub
daa
push
pusha
mov
hlt
nop
jbe
push
jmp
ficoml
sbb
and
push
or
sub
ja
mov
dec
je
lcall
adc
mov
imul
inc
adc
cmpsb
jns
imul
add
push
scas
add
fistpl
flds
adc
push
sbb
sub
cmc
pop
or
icebp
sub
notl
es
cs
imul
push
insl
jmp
inc
adc
xor
and
fiadds
cmp
adc
int3
mov
adc
sub
movsl
mov
fwait
dec
shll
inc
adc
pop
adc
jo
inc
cs
jg
adc
adc
mov
enter
pusha
jp
addl
add
xchg
nop
arpl
xchg
fildll
mov
rcl
out
hlt
fildl
fcompl
enter
mov
push
adc
test
jg
lock
inc
pop
mov
adc
jo
lods
pop
rorb
sahf
and
sbb
add
push
test
stos
enter
xchg
inc
inc
popf
shl
or
and
int3
xchg
sbb
int3
cld
fildl
adc
dec
cmpsb
pop
adc
cmpsb
enter
pop
in
mov
data16
adc
cmpsb
lock
push
ret
test
shlb
push
push
lock
mov
push
cmpsl
pop
dec
dec
nop
pop
pop
adc
pushf
mov
adc
in
adcl
es
push
bound
test
cs
xchg
dec
fwait
lods
xor
push
mov
xor
sbb
xchg
pushf
inc
cs
sbb
cmp
add
pop
fistl
test
push
pop
dec
pop
addr16
adc
or
sub
addr16
mov
cwtl
adc
sbb
pop
mov
sub
push
dec
adc
pop
dec
pop
adcl
hlt
sbbb
inc
xchg
popl
sbb
pop
xor
icebp
lcall
mov
nop
out
inc
pop
xor
lcall
adc
ljmp
cmp
aaa
sub
or
or
and
cmp
movsb
adc
andb
test
add
sbb
add
daa
imul
push
mov
flds
rorb
mov
inc
or
fildll
push
or
and
seto
in
push
fildll
dec
pop
and
mov
jle
nop
cmp
jge
mov
in
push
mov
sbb
orb
movsb
out
sbb
rclb
nop
xor
sbb
mov
lcall
mov
leave
push
sub
fmuls
in
inc
sub
adc
add
out
mov
and
push
sbb
pop
mov
xor
fcomps
insl
mov
test
sub
aas
inc
inc
les
sbb
lods
or
inc
andl
out
and
inc
pushf
jle
xor
push
xorl
lods
mov
roll
icebp
push
lcall
push
sub
icebp
push
mov
add
pusha
push
lods
pop
pop
mov
rorl
cmp
cmp
lods
lods
cmp
push
mov
push
sub
xor
mov
xor
pop
rolb
and
xor
mov
xchg
psubusb
xchg
outsl
inc
jb
mov
dec
push
nopl
mov
popf
push
push
daa
xchg
insb
xchg
pop
cmp
mov
sub
lahf
dec
je
and
mov
mov
jbe
pop
push
sbb
es
lock
lret
and
hlt
pushf
hlt
pop
mov
or
add
add
jo
addr16
in
and
iret
loopne
dec
adc
sub
sbb
jno
inc
inc
add
pusha
add
jno
xchg
adc
add
into
and
jg
fs
in
and
push
jecxz
dec
xchg
pop
mov
clc
addl
test
cmp
daa
dec
inc
inc
xor
and
rorl
and
adc
or
cmp
adc
or
in
loope
add
or
cmp
adc
or
ss
nop
in
adc
or
call
lcall
or
jnp
add
orb
out
movups
pop
mov
es
mov
inc
add
std
pop
and
dec
shll
cld
and
ss
cmp
pushw
lcall
push
pushf
mov
push
push
xchg
xchg
testl
scas
pusha
iret
and
fidivs
sbb
mov
pushl
clc
mov
xchg
fucomi
in
ficomps
push
xchg
push
inc
hlt
fnstsw
nop
inc
push
lock
inc
xorb
add
fwait
mov
adc
mov
mov
inc
sub
inc
xchg
loopne
xchg
mov
data16
xor
jbe
test
aam
aaa
imul
ss
rcl
sbb
pop
ss
jmp
popa
test
in
enter
jp
fldt
cli
int
and
les
sub
sbb
shrb
ja
or
mov
xchg
pop
xor
in
outsb
and
and
imul
pop
mov
fisubrl
pop
daa
rolb
in
push
or
and
push
lcall
loopne
xchg
sbb
rorb
mov
fstl
and
in
mov
and
dec
xchg
shrl
cmp
or
sti
nop
mov
adc
cmp
movsb
nop
loope
lret
movsb
inc
push
cmp
pop
enter
cmp
sbb
mov
xor
cmp
jo
stos
xchg
jno
jmp
jno
mov
adcl
jmp
popf
mov
sub
stos
and
adc
mov
and
mov
loopne
rorb
xor
and
icebp
pop
test
shlb
cmp
daa
mov
xchg
or
push
mov
jecxz
dec
iret
xchg
adc
mov
aad
inc
pop
repnz
push
sub
sub
loopne
xor
shll
dec
xchg
lock
scas
sub
adc
mov
or
adc
pop
sbbl
dec
lcall
mov
rolb
imul
jp
scas
dec
rcrl
jecxz
add
inc
pop
imul
sub
push
push
subb
push
popf
push
mov
in
xchg
dec
push
cmp
sub
fs
lods
xchg
dec
push
lea
lods
lods
xor
test
push
inc
inc
pop
mov
push
inc
lcall
cmp
push
xchg
mov
cli
in
ret
fs
loopne
xorl
fmull
mov
aaa
jbe
mov
aaa
aam
cmp
es
rcl
pop
push
jne
xor
mov
cmp
insb
daa
add
adcb
push
aaa
cmp
les
les
pop
dec
aaa
sub
add
pop
sbbb
inc
iret
push
jl
daa
inc
shll
inc
pusha
bound
cwtl
mov
or
xor
mov
dec
es
mov
bound
mov
ja
mov
pusha
inc
jne
lods
cmp
aaa
pusha
add
jecxz
ret
test
cs
andl
pop
adc
mov
jbe
aaa
pushf
cmp
inc
nop
loope
cwtl
jno
pusha
mov
imul
ss
inc
repz
cmp
adc
and
inc
cmpsb
lea
scas
add
inc
jns
add
pop
repnz
mov
ja
loopne
test
pop
cs
add
loop
les
repnz
repnz
mov
or
movsl
ficoms
icebp
dec
popa
or
outsb
push
pop
dec
mov
aas
jmp
sub
sub
or
add
je
ss
inc
or
xor
cmc
or
jne
ja
data16
jb
insl
sbb
test
xor
lods
xor
add
xor
mov
mov
das
xorb
or
lret
xchg
mov
pop
sbb
or
push
movsb
loopne
dec
sti
pop
data16
sub
outsb
inc
mov
or
nop
nop
add
xchg
nop
sub
xor
fst
loop
cmp
lret
mov
testl
lret
inc
rol
mov
jg
mov
jmp
movw
ja
mov
dec
aas
add
push
aas
lods
dec
cmp
push
adc
mov
mov
leave
push
xor
mov
and
xchg
nop
push
pop
adc
out
push
fists
loope
fisttpl
fldcw
fistl
add
push
popa
or
push
or
or
pop
daa
or
dec
in
xchg
out
sbb
inc
dec
fbld
mov
pop
or
add
js
mov
shrl
sbb
mov
or
push
or
mov
xchg
xchg
or
mov
pop
lods
xor
inc
add
call
dec
dec
xchg
xor
sub
lahf
mov
repnz
pusha
rol
and
stc
ja
pop
pop
mov
xor
outsl
jo
xchg
pop
mov
adc
adc
jmp
cmp
test
popf
cmp
clc
gs
pop
loope
push
bound
add
or
dec
xor
out
mov
or
inc
xor
dec
add
cmpl
adc
call
mov
adc
jl
jno
jne
xchg
das
pusha
shr
push
mov
xor
xorl
fists
fildl
push
sahf
aaa
lahf
cs
and
jae
lahf
add
cmp
xchg
add
and
in
mov
and
dec
or
pop
push
das
movsb
xchg
add
mov
add
mov
xchg
or
aam
inc
insl
jo
jns
jns
add
mov
lea
add
mov
mov
pop
jmp
push
nop
dec
sti
cmp
insb
add
inc
outsl
jne
push
dec
clc
filds
outsb
arpl
jp
jl
popa
je
dec
insb
adc
pop
xor
addr16
rcl
roll
add
shlb
pop
jae
repnz
sub
outsb
imul
add
sbbb
arpl
outsl
add
or
and
inc
iret
push
xchg
cmp
inc
inc
jns
inc
add
xorb
loope
push
inc
daa
add
movsb
lret
xabort
push
popf
inc
nop
adc
cmp
xor
xor
out
int3
mov
push
leave
scas
xlat
jmp
jecxz
sti
aaa
mov
sub
add
mov
movsb
es
push
sub
sub
ret
notl
xchg
cld
clc
pop
stos
or
add
rorb
std
or
lret
xor
ret
lcall
lea
in
adc
and
and
or
and
fisubs
outsl
and
std
mov
add
xchg
in
gs
sbb
rorl
sbb
je
inc
outsb
jns
push
mov
push
push
gs
jmp
adc
ret
cmpl
inc
outsl
fisttps
add
pushf
popa
stc
inc
adcb
cmp
dec
into
jns
push
cmp
arpl
lods
xlat
cli
jecxz
cwtl
pop
or
pusha
pop
into
push
xlat
dec
mull
lret
push
dec
jmp
je
into
add
repz
cmp
xor
mov
std
lods
pop
pop
daa
mov
jbe
add
mov
sbb
or
in
xor
out
popf
push
pop
ret
clc
cmpl
cwtl
in
and
and
cs
inc
test
movsb
xchg
cmp
out
pop
mov
cmpsb
fs
push
je
dec
sub
xchg
push
adc
addl
mov
mov
lea
cmp
je
push
in
movsl
pop
ja
adc
ds
inc
inc
bound
or
or
push
jmp
fisubrl
xor
cmp
inc
call
ret
cmpl
subb
pop
dec
sbb
sub
push
or
adc
or
add
ret
xchg
inc
ret
push
clc
mov
std
cmp
rcrb
test
shlb
mov
or
pop
push
xchg
repz
mov
mov
into
out
sub
jle
sbb
mov
mov
nop
push
dec
cmp
cwtl
movsl
mov
push
clc
js
lods
add
pop
ret
and
or
data16
ljmp
mov
adc
das
ret
rcr
cmp
pop
popa
and
pop
cmp
in
dec
loopne
add
pop
jbe
rcr
mov
fcompp
cmp
aas
cmp
lds
cmp
cmp
negb
test
cmp
setg
inc
js
cmp
test
pop
xchg
cmp
fnstenv
dec
push
or
cmp
enter
mov
lock
adc
daa
add
aam
and
push
dec
call
push
inc
xor
inc
sbb
or
cmpsl
cmp
enter
xor
inc
imul
dec
pop
addl
rcrl
xchg
cmp
mov
jne
aam
pop
or
xor
push
loop
jg
mov
jmp
movaps
adc
cmp
ret
add
and
or
sbb
jecxz
pop
or
sbb
and
mov
out
mov
jns
cmp
or
addr16
ds
lahf
dec
dec
adc
mov
pop
cwtl
mov
mov
in
in
add
sbb
add
icebp
cld
jbe
cmp
push
cwtl
and
sbb
pusha
sub
xor
xor
add
ds
dec
dec
sbb
scas
scas
nop
dec
dec
dec
dec
xchg
xchg
xchg
xchg
cmovns
xchg
xchg
out
addb
nop
and
aas
sub
push
inc
xchg
testl
or
aas
movsb
add
outsl
add
dec
pop
sbb
mov
push
int
nop
sbb
out
xchg
mov
push
sbb
pop
inc
add
jbe
sub
dec
inc
add
inc
insb
popa
jae
dec
popa
outsb
popa
stos
mov
push
pop
jmp
push
stc
mov
aas
fs
or
fsubrl
inc
lea
jmp
adc
mov
mov
add
add
push
push
sub
and
inc
jle
sub
adc
or
add
lods
shlb
sub
insl
ja
xor
rcrl
popf
mov
sbb
jmp
or
push
sbb
mov
sub
sbb
adc
rolb
ficoml
inc
mov
and
and
in
sbb
fs
inc
jbe
cs
adc
dec
push
push
movsb
dec
mov
xchg
rclb
movsb
loop
cli
ret
sbb
loop
xchg
xor
push
mov
push
inc
push
fwait
ss
jl
xor
push
daa
push
loopne
ret
mov
or
sbb
inc
mov
dec
shll
test
cltd
cmpsb
mov
popa
fcoms
fmuls
add
and
inc
pushf
push
in
push
das
inc
dec
xor
jbe
dec
addb
push
dec
jo
leave
xchg
je
mov
dec
int3
addb
and
cmp
mov
inc
popa
pop
outsl
jb
inc
xor
sbb
aas
or
and
mov
dec
pop
dec
scas
mov
in
call
or
lods
xchg
jbe
test
incl
push
lods
mov
add
dec
inc
mov
aaa
inc
pop
pop
xor
add
unpcklps
push
ret
cmpsb
pop
lahf
inc
pop
or
aas
inc
and
adc
cmp
icebp
mov
add
or
enter
xchg
push
sub
pushfw
sbb
add
or
movsb
and
and
push
sub
adc
cmp
or
enter
mov
mov
scas
mov
mov
std
sbb
in
add
adc
jns
pop
test
xchg
jns
cmp
mov
ret
push
es
outsl
clc
movsb
lods
popa
adc
inc
adc
mov
pop
cmpsl
xor
dec
imul
jae
or
or
pop
adc
lock
cmp
mov
sbb
mov
scas
adc
mov
into
loopne
inc
adc
push
dec
add
mov
adc
faddl
ljmp
xchg
outsb
jb
jnp
pop
add
jo
pusha
adc
fldt
xor
inc
subb
in
mov
das
mov
daa
movsb
xchg
shl
cmc
sub
sahf
nop
cwtl
lods
mov
push
int3
pop
shr
call
inc
push
out
cwtl
shr
inc
imul
enter
push
mov
int3
inc
push
mov
push
mov
rclb
in
je
and
sub
jne
add
inc
outsl
sarl
pop
cmpsb
push
or
inc
nop
popl
enter
inc
jmp
xchg
sbb
fcom
arpl
aaa
loope
pop
pusha
adc
sub
push
jne
ret
inc
enter
lock
push
loopne
jne
inc
adc
mov
pop
add
cmpb
int3
icebp
loope
es
clc
xchg
xor
adc
adc
dec
adc
mov
subb
sub
clc
push
cmpb
cmpl
stos
mov
add
add
mov
out
mov
and
sub
mov
sbbb
or
mov
or
pushf
pop
rclb
imul
jne
hlt
out
in
lret
das
cmc
and
xor
shlb
adc
lret
pusha
cmp
and
xor
push
adc
frstor
push
sbb
fcoms
fdivrs
std
in
daa
or
lea
fbld
js
adc
mov
call
lods
lock
lods
pop
negb
out
sbb
rorb
pop
cmp
adc
dec
xchg
dec
ficompl
or
push
enter
pop
ret
jge
inc
jo
fidivrs
pop
push
shlb
sub
rclb
faddl
es
ret
testb
dec
xor
in
jo
and
dec
daa
add
hlt
loop
mov
dec
mov
push
cmp
movsb
fildl
sub
xchg
insb
mov
jnp
rcll
test
pop
dec
sub
movsb
inc
iret
dec
mov
push
fisttpl
inc
ljmp
out
or
scas
test
and
nop
test
enter
dec
cmp
mov
adc
push
fs
sbb
inc
ret
cmpsl
mov
icebp
mov
jno
jae
aam
jecxz
or
loopne
sbb
in
and
rclb
or
aad
fs
sbb
inc
sub
jle
outsb
sub
sbb
sbb
sbb
inc
ret
movsl
add
inc
adc
and
sbb
inc
or
inc
cmp
pop
bound
mov
inc
outsl
sbb
inc
pop
inc
jns
push
push
stos
jmp
adc
sbb
popf
cwtl
icebp
sbb
mov
push
push
pop
and
or
inc
je
bsf
ficoms
inc
lds
lock
rorb
xchg
jnp
daa
push
imul
pop
cld
push
jl
mov
adc
cmp
sbb
and
cmp
xorl
dec
xor
add
cmp
mov
sbb
shlb
lea
or
repnz
rcl
out
mov
add
sub
add
es
or
popa
jb
insl
cld
inc
mov
inc
jb
inc
outsl
je
xchg
outsl
add
je
in
rorb
push
dec
fmull
js
jle
sub
sbb
or
insl
js
pop
adc
inc
jle
mov
in
mov
in
push
imul
sub
subb
sub
cmp
jnp
test
cld
mov
scas
xchg
ret
pop
adc
mov
les
pop
ret
cmpsl
mov
xchg
in
mov
cli
daa
push
mov
mov
mov
dec
arpl
xor
inc
adc
xchg
dec
and
dec
fsubs
mov
mov
cmp
loopne
cld
inc
and
shll
repnz
push
push
fdivr
sbb
pop
ds
mov
in
ja
sbb
aam
enter
cmp
push
or
hlt
insl
rol
shlb
adc
push
mov
sub
clc
inc
dec
push
dec
lret
or
insl
pop
and
rorb
or
or
mov
insb
jg
inc
insb
jae
fs
ljmp
mov
add
or
loop
sub
adc
add
or
jno
and
add
add
mov
push
pop
test
xchg
mov
ret
adc
add
lahf
mov
es
mov
push
repnz
inc
inc
mov
inc
or
mov
sbb
jmp
ljmp
stos
out
out
clc
cmp
sbb
push
sbb
test
mov
jae
push
in
into
add
pop
pcmpgtd
cmp
cld
xlat
sbb
add
cmp
xchg
or
cmp
cmp
push
cvtdq2ps
test
out
movsb
mov
or
mov
test
xor
sub
imul
pop
mov
jnp
jmp
cmp
mov
adc
add
sti
mov
or
repnz
inc
lock
push
pop
pop
pop
push
rcll
mov
in
mov
push
inc
loope
mov
push
sub
xchg
popf
inc
and
mov
sti
ret
sbb
cmp
gs
or
aas
adc
push
jo
pop
nop
inc
mov
aaa
dec
push
in
outsl
sbb
pop
cli
xchg
rcl
jno
jb
xchg
adcb
sub
jae
mov
fistl
pop
sbb
cmp
adc
jge
xor
or
in
inc
outsb
pusha
test
inc
movsb
xchg
les
mov
adc
cmp
jmp
or
push
adc
cmp
sahf
std
jne
and
push
sub
inc
mov
or
adc
stos
popl
and
sbb
add
cs
lock
adc
sub
mov
pusha
cmp
ljmp
jecxz
and
shll
jb
sub
adc
shlb
cwtl
sbb
cs
add
sbb
jmp
clc
sbb
inc
mov
xor
push
fwait
shlb
mov
mov
pop
shlb
jbe
or
lcall
mov
mov
push
sbb
inc
xchg
push
hlt
adc
xchg
xor
pop
je
test
mov
shlb
xor
adc
push
movsb
lea
or
pop
sub
adc
pop
xchg
incl
push
icebp
cs
push
push
leave
subb
lods
sub
jne
or
cmpsl
or
inc
push
push
xchg
push
push
into
and
push
enter
push
cwtl
push
sub
jge
push
push
outsb
sub
test
push
pop
inc
xor
xchg
sbb
add
adc
pop
imul
pop
popf
mov
mov
movsl
adc
mov
push
push
je
xor
inc
adc
push
cld
lods
and
adc
fwait
inc
aam
jl
inc
adc
xchg
add
out
push
js
mov
mov
or
jmp
xchg
inc
outsw
mov
pusha
adc
arpl
xor
sahf
xchg
imul
imul
scas
aaa
add
push
jmp
daa
push
sub
cltd
das
cmp
leave
mov
movsl
and
outsb
ss
sbb
sub
pop
add
push
push
push
xchg
sarb
pop
cmpsb
xor
add
xor
inc
pop
cmpsb
fcmovnb
mov
out
bound
jmp
mov
push
mov
sbb
xor
call
and
mov
int3
mov
popa
push
jbe
sub
lea
pop
sbb
cmpl
sub
outsb
sbb
cmp
or
test
je
dec
dec
jnp
jl
push
mov
push
xchg
add
dec
adc
dec
lea
push
cmpb
pop
push
rolb
dec
cmc
pop
orb
mov
dec
pop
arpl
jb
nop
xor
mov
and
flds
sbb
arpl
add
pop
mov
popa
adc
xor
pop
js
cld
pusha
filds
pop
adc
push
and
sub
push
xor
mov
rcrb
in
aam
fmuls
mov
dec
inc
outsl
push
jmp
outsb
jae
popa
outsb
dec
cmp
jp
pop
sbb
inc
call
pop
sbb
ja
or
test
cmp
xor
jae
insl
gs
dec
pop
cs
jne
jo
outsb
xor
sub
imul
jecxz
xchg
jae
test
xchg
adcb
inc
inc
aaa
in
pop
lcall
mov
stos
aad
sub
push
push
and
pop
aam
cld
repnz
test
push
pop
in
loopne
les
jne
push
je
mov
lds
pop
fwait
push
cmp
mov
dec
pop
pop
test
aam
push
stc
mov
xorl
xchg
pop
mov
sub
pop
movzbl
cmp
jle
mov
nop
cmpsl
test
je
iret
lcall
paddusw
loopne
loop
call
inc
cld
mov
rdmsr
jle
and
add
jo
lahf
pop
test
mov
or
lds
dec
jne
push
lea
sar
and
jns
cmp
pusha
mov
out
inc
mov
add
adc
xchg
or
ret
in
call
pop
in
leave
lahf
leave
sub
sbb
pop
addl
mov
jnp
in
repnz
cli
or
and
adc
iret
sub
sti
aaa
add
adcb
xchg
mov
ds
mov
popa
pop
cs
loopne
das
jns
and
loopne
pop
sbb
loopne
pop
pusha
adc
mov
popa
push
push
add
or
int3
imul
dec
or
orb
xchg
adc
pop
outsb
pop
push
add
jg
dec
add
sub
cmpb
cmp
jne
jecxz
pop
add
mov
pusha
fisubrs
inc
add
faddl
dec
add
sub
and
or
mov
movl
add
or
js
aaa
idivl
xor
ja
mov
hlt
jne
and
push
call
mov
push
push
mov
test
sbb
les
jns
cld
test
mov
cmpsl
push
roll
lods
inc
cmp
in
pop
mov
js
dec
cmpsb
orl
ficomps
add
mov
test
dec
or
or
pop
and
inc
call
pop
jg
loope
popa
dec
test
rcrl
and
bound
and
les
sbb
mov
or
xchg
nop
movsb
inc
xchg
add
mov
cld
pop
call
iret
mov
loope
xchg
sub
inc
rcrb
or
cwtl
mov
and
dec
clc
gs
aad
fiadds
add
push
fadds
lock
sbb
stos
in
push
stc
sub
dec
or
pop
in
jmp
push
sub
jae
and
nop
or
mov
mull
loope
and
xchg
add
jne
stc
inc
jbe
dec
stos
in
jnp
mov
int3
and
cmp
dec
mov
push
cmp
sbb
and
cld
pusha
clc
pop
icebp
inc
rol
inc
dec
add
add
xor
into
pusha
cmp
mov
int3
inc
lea
mov
outsl
fcmovne
ror
jo
das
imul
jne
or
fldcw
js
add
sbb
adc
sub
inc
pop
js
mov
outsb
lock
dec
and
jae
aaa
jle
mov
add
adc
icebp
gs
add
add
xchg
jmp
jl
jbe
push
lods
xor
lcall
das
mov
push
rcrb
rolb
jg
mov
movzbl
pop
loop
loop
iret
dec
add
and
test
sub
decl
call
add
ja
repz
push
push
add
neg
dec
jmp
and
fisubl
rolb
jg
push
inc
pop
out
enter
jne
mov
lock
mov
or
cld
dec
jne
sub
stc
push
push
push
xor
testb
je
or
push
sbb
ficoml
enter
cmpsb
int3
jnp
sbb
lock
lcall
push
cmp
mov
bound
mov
negb
xor
xor
push
add
clc
cmp
pushl
adc
jne
mov
cmp
mov
arpl
imul
push
arpl
call
add
push
movsb
inc
pop
xor
daa
fldcw
jmp
fisttpll
push
fildll
es
dec
call
adc
daa
call
daa
daa
mov
and
and
pop
cmpsl
jno
shlb
inc
data16
mov
mov
jecxz
call
mov
inc
mov
aas
pop
xchg
sti
xor
jge
dec
adc
das
inc
mov
sbb
push
pop
pop
adc
and
push
divb
or
mov
gs
ja
and
outsb
dec
jne
push
push
add
enter
cs
pop
xor
loope
ss
adc
int3
mov
pop
and
add
xlat
add
negl
gs
add
jne
pop
pushf
vpcmpgtd
and
scas
mov
iret
movl
pop
test
pop
movsb
pop
xor
movsb
loop
jnp
adc
arpl
mov
cmp
das
pop
sbbb
loop
subb
enter
bound
xor
lods
mov
push
mov
xor
test
in
xor
call
jo
cmp
or
arpl
or
inc
aad
or
orl
rorl
sub
addr16
adcl
sbb
mov
mull
pop
pop
test
jne
imul
mov
ffree
or
lock
lret
adcl
add
or
pop
daa
arpl
mov
mov
movl
add
pop
adc
xchg
xlat
jno
xchg
adc
push
push
dec
push
into
mov
pop
enter
das
es
shlb
sbb
mov
sub
pusha
adc
xor
bound
mov
xor
lret
pop
mov
nop
int3
imul
test
les
or
sbb
sub
or
lods
cld
cltd
imul
pop
andl
ss
clc
dec
push
shrb
pop
xchg
cmc
imul
add
pop
push
jmp
fs
xor
data16
jl
jmp
pop
jne
aas
rolb
lods
push
dec
sbb
xchg
or
sub
std
jns
jnp
adc
or
sbb
jmp
inc
outsw
jne
lock
push
out
add
decb
add
inc
inc
push
push
les
loop
cmp
outsb
push
dec
stos
adc
mov
xor
leave
mov
stos
inc
pop
or
adc
and
test
ret
loope
call
fwait
jne
push
add
mov
sbb
jne
jne
js
mov
cltd
sbb
pop
lahf
adc
or
mov
push
ffreep
incl
xor
or
pusha
add
adc
adc
push
ret
mov
es
jno
shrb
inc
pusha
xor
jo
mov
add
loop
push
sub
leave
rolb
mov
insb
jo
add
outsb
jle
cmpb
movb
sub
xor
sbb
into
lds
insb
lods
jbe
push
dec
add
push
jns
push
xor
jl,pt
add
sahf
filds
lods
inc
mov
xor
jno
cmc
pop
add
nop
lcall
mov
mov
jno
inc
mov
ret
mov
inc
xchg
addr16
adc
insb
jl
push
repnz
adc
es
add
adc
and
inc
jl
sbb
outsl
xchg
mov
sbb
inc
push
dec
dec
dec
jg
jmp
or
inc
inc
inc
inc
dec
dec
inc
add
inc
push
inc
lods
cmp
inc
push
or
sub
push
insb
outsb
dec
call
inc
test
mov
fs
jg
mov
pop
jnp
xor
pop
jne
dec
add
add
cmp
cmp
ret
mov
inc
push
sub
insb
inc
push
and
fs
adc
mov
inc
in
mov
cmpsb
mov
inc
or
dec
fisubs
fcomps
in
nop
out
or
orl
pop
add
jp
or
mov
dec
sbb
sbb
aas
push
inc
sbb
enter
ljmp
arpl
aaa
sbb
xor
rorb
fsubrl
sub
jp
xlat
push
jo
mov
sub
or
sub
outsl
in
in
jnp
adc
and
lret
xchg
push
lea
daa
jg
push
pop
adc
pusha
test
xchg
outsl
jo
xorl
and
or
loopne,pn
or
add
test
fs
and
inc
sbb
lods
pushf
sub
or
sub
in
add
dec
bound
jne
xchg
in
lahf
and
inc
jmp
jo
addl
and
lea
inc
and
inc
xor
xor
and
loope
mov
or
stos
pop
add
enter
iret
aaa
jo
inc
pop
scas
mov
jl
push
test
or
add
jbe
fwait
pushf
rolb
xor
xor
fwait
imul
and
pop
and
mov
int3
jmp
adc
mov
aam
or
or
push
adcb
or
or
ds
pushl
or
insb
iret
add
or
pop
pop
add
pop
mov
mov
outsl
push
in
cmpb
sbb
scas
mov
mov
testl
pop
xor
fs
mov
pop
push
and
and
xchg
mov
scas
mov
lret
jmp
dec
mov
jb
shrb
pop
js
push
lods
lahf
aaa
push
mov
fs
and
or
or
jle
int3
shr
ret
out
pop
cs
jb
insb
mov
leave
dec
jb
insb
add
mov
pop
addps
and
int3
mov
sbb
inc
xchg
inc
push
sbb
sub
sbb
and
sbb
fs
inc
sbb
xlat
mov
jg
jb
push
sbbb
jae
cmp
and
fs
sub
nop
add
imul
inc
outsl
aad
xchg
add
js
js
or
add
in
cmpsb
in
adc
inc
cmpsb
in
push
orb
in
jge
sub
enter
cwtl
setns
fwait
pushf
popf
and
addb
addl
xchg
enter
mov
mov
daa
mov
leave
jno
jae
cmp
enter
jne
scas
dec
leave
add
mov
mov
adc
pop
out
xchg
clc
imul
add
add
adc
cmp
inc
or
pop
adc
mov
fbld
jmp
mov
xor
test
jne
fisubs
pop
mov
push
das
inc
dec
xor
cmp
jle
adc
push
cmpb
or
or
pop
ljmp
cmpl
or
orl
sub
adc
xor
mov
mov
test
shrl
pop
inc
gs
loopne
inc
inc
daa
or
loopne
sub
cmpsb
fisttpl
mov
sysenter
outsb
icebp
mov
push
or
jg
cmc
mov
dec
cmp
je
mov
xchg
outsl
jae
sbb
jne
idiv
jge
test
add
enter
fbstp
jmp
cmp
adc
insb
sbb
test
out
call
mov
mov
mov
cmpb
je
out
addps
dec
and
cmpsl
lods
incl
decb
ja
fistl
jmp
call
rolb
jecxz
add
adc
std
push
add
add
push
shrb
adc
add
mov
xchg
add
inc
mov
aaa
mov
in
adc
lahf
fisttpl
cmp
in
jne
mov
mov
cmpb
ja
jb
add
add
call
sahf
cmp
xor
out
mov
mov
fadds
inc
or
cmpl
adc
insb
sti
mov
call
dec
fwait
xlat
or
inc
rol
imul
into
inc
mov
lods
or
loopne
cmp
fwait
mov
stos
mov
aas
inc
stos
imul
je
pop
les
xchg
popa
mov
addb
rcrl
sub
sub
and
clc
inc
mov
je
in
mov
out
jns
adc
push
lods
xlat
dec
cld
and
lahf
jns
lock
movsl
add
mov
mov
mov
cmp
cmp
cltd
adc
adc
popa
pushf
mov
mov
mov
les
xchg
sub
add
add
clc
push
lret
mov
mov
add
orb
inc
jge
and
bound
adc
xchg
ljmp
roll
jnp
cmpsl
jmp
cmp
adc
xchg
add
mov
movsb
add
adc
sarl
aaa
or
push
xor
test
lods
pop
pop
pop
sub
scas
adcb
pop
or
test
push
les
adc
jnp
cmp
mov
push
cmp
cmpsb
imul
push
orb
scas
mov
sbb
movsb
adc
add
or
adc
imul
jnp
push
inc
fistpll
pop
gs
jbe
jl
and
pop
jno
dec
add
mov
mov
jge
stos
and
xlat
movsb
xchg
nop
or
xor
push
mov
pop
jno
stos
push
repnz
sbb
sub
fnsave
addr16
push
inc
jnp
cmp
outsl
xor
sub
scas
and
cmpsb
rcl
clc
cmpsl
addb
dec
pop
jmp
sbb
sub
push
add
stos
enter
ret
jmp
and
aas
mov
pop
pop
jp
jns
jno
inc
mov
jl
add
call
mov
lock
mov
jno
insb
std
xor
sbb
add
shll
cmc
pop
mov
ret
enter
jbe
mov
rorb
pop
hlt
or
pop
icebp
jbe
fnstcw
andb
inc
cmp
cmp
or
cmp
ret
je
inc
fwait
or
or
xor
and
jge
mov
jne
mov
or
add
jno
pop
jge
mov
push
imul
imul
sti
das
mov
bound
movsb
decb
je
outsl
push
mov
push
mov
sub
dec
outsl
inc
insb
outsb
sbb
lock
sbb
push
insb
jns
aam
call
mov
cltd
mov
roll
jle
pop
aaa
push
mov
imul
inc
je
xchg
mov
or
cmpsl
or
imul
sub
nop
test
or
testl
add
dec
fisttps
insl
or
add
add
or
cmp
rcrb
fildll
jns
or
jae
xchg
insl
sub
outsb
in
sbb
jne
stc
pop
arpl
gs
or
jns
hlt
movb
add
push
push
gs
adc
daa
and
xchg
add
adc
pop
add
fisubrs
daa
inc
mov
pop
pop
sbb
cmpsb
add
or
xchg
nop
pop
leave
mov
sub
xchg
mov
cmp
mov
les
xor
lret
push
cmc
mov
loopne
fmul
adc
or
hlt
in
jb
cmp
xchg
stos
mov
pop
lods
add
dec
ficoml
dec
imul
pop
mov
andl
push
inc
and
call
sbb
nop
cmpsl
addb
inc
addb
mov
out
mov
mov
je
xchg
and
scas
inc
imul
fnstsw
scas
inc
or
push
jae
push
add
xchg
mov
loopne
js
inc
fwait
jo
pop
and
jbe
mov
sub
pop
test
imul
inc
sets
or
ljmp
dec
push
push
sbb
shlb
adc
xchg
out
add
lods
mov
xchg
outsl
jno
add
sub
sub
jmp
adc
cmp
test
scas
test
sbb
mov
fadds
push
ja
push
insb
repnz
mov
pop
mov
mov
cmp
dec
lods
incl
adc
in
push
cmp
pop
xor
cmp
test
movl
pop
or
and
add
pop
lcall
adc
mov
call
inc
sub
add
lods
sbb
push
pop
xlat
fdivr
xchg
jo
and
or
mov
add
and
mov
subb
outsl
add
out
xor
xor
pop
cmc
jbe
pop
xor
cmovns
jae
fs
jo
fdivr
jmp
pop
xor
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
roll
scas
mov
repnz
rolb
push
xlat
mov
xchg
pop
sbb
mov
xor
mov
mov
push
jbe
adc
in
mov
dec
pop
mov
test
movsl
int3
ret
pusha
push
test
outsb
addr16
clc
mov
xor
imul
mov
xchg
sub
mov
imul
and
xor
push
ljmp
xor
push
or
insl
jns
inc
pusha
xorl
fimull
mov
outsl
and
xchg
push
mov
in
in
pop
cs
jae
popa
mov
leave
inc
jbe
xor
ja
push
jo
pop
les
mov
pop
dec
pop
test
xchg
sahf
fldcw
xchg
lock
lock
mov
aad
sub
mov
push
cmove
aad
dec
cld
neg
rorl
mov
pop
nop
push
fsub
lret
jmp
hlt
pop
lret
sbb
push
scas
pop
sahf
and
sbb
aaa
jno
mov
lods
or
daa
int
push
call
mov
push
push
sbb
dec
sahf
mov
add
test
arpl
dec
sub
mov
jl
adc
jns
xor
add
in
sbb
pop
dec
loop
int
mov
adc
jl
cmp
enter
sub
and
mov
xor
rolb
jns
daa
shl
add
pushf
das
push
shll
mov
pusha
mov
sub
lods
lahf
pop
dec
push
adc
call
or
and
adc
and
push
lods
sbb
nop
outsb
ljmp
or
cltd
nop
or
sbb
or
inc
inc
cs
add
dec
cmpsb
mov
movsl
imul
pushf
push
cmpsb
ja
lcall
push
adc
cmpsb
imul
mov
jl
lea
ljmp
mov
add
cld
pop
adc
adc
sahf
movsl
imul
rcll
sbb
push
mov
fwait
es
jecxz
xor
aas
or
sahf
cmp
push
addr16
imul
mov
sub
mov
push
loopne
push
dec
orb
lahf
enter
pop
jo
jl
lock
fidivrl
jae
mov
fcomp
or
and
std
push
fwait
xor
clc
push
ds
mov
pop
pop
loop
lea
andb
nop
xor
nop
xor
inc
pop
sbb
or
jp
push
roll
push
aaa
inc
gs
jne
mov
mov
xchg
jmp
pop
call
rcrb
push
bound
xchg
or
mov
add
enter
jns
data16
mov
test
aam
push
fs
aam
ds
lea
fwait
xor
test
jmp
pop
sbb
inc
int
dec
addb
cs
imul
dec
aas
nop
loop
mov
imul
js
out
sbb
test
cmp
mov
push
repz
mov
pop
add
or
div
add
xor
or
or
push
sbb
adc
xor
lods
jbe
push
sub
and
ds
out
aas
xchg
seto
or
cld
sti
xlat
clc
jg
cli
stc
clc
push
push
push
push
push
push
fcomi
mov
imul
rolb
int3
in
sbb
cmpsb
push
call
lods
mov
lods
fsubr
push
sarb
pop
push
mov
pop
mov
xor
xchg
ss
inc
xor
sbb
sub
jecxz
cmp
sbb
stos
pop
lods
cmp
addr16
xchg
fdivrs
repnz
xchg
clc
adc
prefetcht0
xor
push
adc
dec
lods
xorb
shlb
adc
imul
sub
cmp
xchg
pop
fists
mov
push
mov
in
adc
push
pinsrw
int3
push
pusha
push
nop
adc
fs
add
call
pusha
push
mov
pop
int3
fdivs
jp
sub
xlat
xchg
in
and
fs
popa
sbb
jns
sub
sbb
add
inc
dec
push
data16
push
out
imul
rorb
sub
pop
dec
scas
jne
dec
sbbb
sub
je
in
jb
pop
xchg
fcoml
add
inc
jb
jne
cmpb
xchg
xor
xchg
xor
sbb
and
cltd
rorb
push
mov
cmp
fisubrs
or
enter
in
push
jo
dec
and
bound
or
cmp
push
adc
ss
pop
add
lret
mov
jo
ss
pop
pop
or
mov
lods
inc
jmp
sbb
insl
sub
pop
add
pusha
call
jmp
sbb
and
and
adc
push
inc
pop
pop
repnz
test
imul
mov
sbb
cmp
add
sbb
push
cwtl
push
test
and
cmp
or
cmp
dec
arpl
xor
push
test
movsb
sbb
fistpl
sar
clc
xor
and
and
hlt
xlat
loop
sub
mov
push
and
push
sbb
test
sbb
adc
adc
in
addl
or
push
inc
or
lds
test
sarb
sub
mov
mov
jne
pop
add
jb
hlt
pop
add
imul
sub
test
push
lock
inc
push
addl
sbb
xchg
or
mov
xchg
push
adc
fiadds
and
cwtl
push
adc
gs
add
popf
rolb
dec
inc
inc
cmp
loopne
and
push
inc
cmp
into
lock
and
mov
pop
adc
test
and
add
and
mov
push
mov
imul
movb
inc
and
das
inc
xchg
je
scas
mov
sbb
in
sbb
aam
mov
imul
xor
inc
adc
dec
aam
sbb
cmp
push
movl
mov
fdivrs
pop
cmp
pushf
cmpsb
fcmovbe
pop
pop
pop
push
cmp
sub
push
mov
push
cmc
ret
rorb
push
adc
mov
sbb
push
subl
in
and
dec
mov
inc
movl
mov
or
lret
xchg
test
rcr
xchg
sub
add
not
and
js
or
add
add
xchg
fwait
push
cmp
dec
mov
jae
fwait
daa
clc
mov
push
cmpsb
dec
push
pop
lret
add
enter
jmp
add
sub
dec
mov
lcall
call
cmc
cwtl
pop
sbb
lcall
popw
push
sbb
mov
and
sbb
sub
jp
cmp
adc
add
push
in
xor
xorl
or
imul
imul
in
mov
xchg
cmp
push
xor
decl
jecxz
jecxz
dec
call
push
add
jnp
add
in
aam
add
mov
and
push
lods
sbbl
aaa
cwtl
and
out
in
push
mov
test
std
mov
mov
sbb
bound
and
pop
into
sub
mov
xchg
nop
xchg
dec
ret
jne
pop
cmp
jl
insl
or
inc
aad
fmul
mov
hlt
xchg
in
xor
sub
lcall
push
push
sbbl
js
cmp
and
hlt
adc
xchg
bound
enter
lods
enter
pop
dec
mov
sarb
cmp
sub
pusha
lea
push
push
inc
add
pop
dec
pop
or
js
das
mov
inc
and
aaa
mov
add
loope
sbb
sahf
jecxz
enter
sub
or
dec
das
orb
fisubl
ljmp
enter
inc
popl
xchg
idivl
lahf
pusha
mov
or
mov
or
xlat
ja
pushf
lahf
addr16
or
loope
jno
push
lahf
mov
mov
inc
dec
xor
push
pushf
lahf
mov
dec
mov
cwtl
rcrb
xor
sahf
aaa
daa
pop
pop
sbb
in
inc
jmp
push
shlb
gs
pop
lcall
cmp
shll
mov
cmpsb
fists
or
pusha
cltd
cltd
xchg
cmp
in
ss
or
fisubl
into
mov
add
repnz
push
adc
mov
scas
mov
xchg
cmp
iret
mov
nop
adc
mov
das
jae
addr16
mov
or
or
push
test
or
stos
dec
lods
mov
cmpsl
adc
int
in
hlt
outsb
sbb
mov
pop
scas
sbb
push
es
mov
rclb
and
mov
or
mov
imul
or
xchg
add
adc
loopne
sub
pop
sbb
les
add
mov
jmp
ret
inc
sub
add
loope
in
inc
rcr
inc
lret
inc
out
cmp
loop
add
sbb
sbb
test
or
sub
mov
sbb
add
ds
add
loopne
mov
mull
mov
test
dec
mov
mov
rclb
aaa
mov
xchg
mov
pop
mov
pop
sbbl
mov
andl
ja
sbb
adcb
and
test
scas
inc
mov
adc
addb
push
inc
and
ss
xchg
dec
push
xor
mov
shr
dec
movsb
test
dec
push
sub
push
faddl
cmp
bound
push
inc
sub
iret
pop
or
pusha
inc
inc
add
xlat
fdivrs
pop
push
mov
mov
push
xor
xlat
stc
ror
arpl
ret
mov
or
insl
xor
xchg
out
lcall
shrb
or
loope
shll
movsl
push
or
add
pop
jne
sbb
xor
mov
ds
insb
rolb
cmpsb
push
jg
popf
cmp
xor
cmp
je
xor
mov
movsl
je
cmp
cvtdq2ps
rolb
cld
jno
ret
movsb
or
add
movsb
jmp
cs
mov
mov
nop
rol
cmpsb
into
mov
sbb
and
nop
je
mov
rclb
testb
jmp
in
dec
push
push
test
push
call
mov
das
movsl
sbb
aas
mov
sub
aaa
sub
xor
jo
pop
popa
xchg
ljmp
mov
popa
movsl
mov
sbb
jae
stos
and
fwait
test
dec
imul
imul
gs
imul
in
dec
mov
and
or
test
mov
nop
fstpl
nop
mov
mov
mov
fldl
mov
outsl
test
and
sub
test
adcl
clc
fldl
rcl
lea
fistpl
test
dec
sub
mov
jne
imul
add
pusha
mov
mov
mov
or
leave
adc
movsb
and
cmpsl
movsl
pop
test
cmp
mov
push
popa
and
into
sub
dec
cmp
push
push
mov
das
push
xchg
mov
xor
push
dec
js
mov
outsb
xor
jp
mov
add
push
dec
add
jle
add
icebp
add
xchg
lds
jae
or
shlb
ret
inc
adc
mov
inc
pop
or
leave
int3
fidivl
lods
add
cltd
popa
mov
inc
adc
ja
add
cmp
sti
mov
mov
pop
jl
or
sarb
inc
add
cmpl
sub
decl
pop
jge
mov
enter
loop
adc
or
xchg
jl
dec
fdiv
mov
ret
pusha
cmp
lock
ret
das
fisubrl
dec
std
add
push
mov
inc
add
ret
jp
push
sub
pop
cmpsl
shrb
stos
jl
mov
into
imul
sub
pop
enter
outsb
inc
inc
fmuls
add
adc
inc
loop
lahf
add
jns
sub
lret
test
jg
adc
pushf
mov
gs
add
mov
aad
sub
cli
add
dec
or
adc
lds
cltd
repnz
leave
decl
mov
cmp
cmpsb
mov
push
inc
rcll
mov
and
sub
sub
iret
fidivs
adc
clc
je
mov
xchg
outsl
enter
rorb
add
dec
push
pop
fcom
in
lods
cs
xorb
mov
pop
pop
sub
push
sbb
shl
mov
mov
in
push
push
jns
xor
xlat
inc
in
addr16
push
pop
dec
mov
js
dec
ljmp
aas
shrb
call
jg
dec
sbb
mov
inc
mov
sub
sbb
push
outsb
cmp
test
int3
mov
xchg
pop
mov
add
mov
jb
add
cmp
add
adc
lods
jns
je
mov
cmp
cltd
xchg
pop
pop
pop
daa
jmp
mov
js
lea
xchg
inc
jne
mov
adc
dec
add
add
sahf
nop
add
or
mov
aad
decl
xor
sbb
aaa
rorl
dec
lea
push
enter
hlt
xchg
pop
and
enter
movsl
mov
jo
mov
pop
lea
enter
mov
push
jo
bound
add
movsl
mov
xchg
inc
loopne
shrb
decl
icebp
pop
sar
mov
shl
sbb
cmp
dec
call
out
je
cli
add
add
cmp
xchg
inc
mov
imul
cmpsb
arpl
push
lds
add
mov
je
loopne
pop
mov
addl
cmp
jae
fisttpl
aas
sar
leave
je
stos
adc
btr
push
add
mov
nop
loope
sbb
push
inc
adc
jmp
lahf
fsubrs
xchg
dec
inc
pusha
and
mov
loopne
pop
xorl
gs
pop
ja
and
bt
jb
jbe
xor
outsl
iret
inc
ret
jge
ret
adc
jmp
inc
cmp
jne
inc
decl
jne
adc
xor
les
aaa
pop
and
xchg
orb
ret
rcrb
into
inc
push
and
xchg
mov
scas
sbb
and
into
jae
shr
lock
add
adc
sub
cmc
add
mov
lea
mov
aam
loopne
jo
imul
dec
or
cli
mov
sub
nop
roll
mov
inc
fst
inc
ret
mov
es
dec
pop
cmp
xchg
daa
imul
jns
inc
mov
stos
or
jne
add
push
out
push
mov
movsl
jo
inc
add
mov
sub
sbb
nop
and
push
add
push
add
adc
aad
or
scas
xchg
aam
ret
out
ss
dec
pusha
xchg
outsl
fwait
mov
jle
push
dec
and
in
pop
mov
or
shlb
jnp
leave
sbb
and
sub
jns
pusha
xor
push
mov
and
bound
adc
ret
or
das
int
pusha
push
in
ret
mov
into
inc
push
push
jo
inc
cmpsl
dec
and
shl
adc
mov
inc
pop
mov
test
icebp
lock
inc
sub
iret
inc
mulb
cmpps
xor
pop
pop
push
jecxz
mov
mov
mov
test
lahf
or
shlb
push
imul
xor
iret
cld
inc
mov
mov
mov
lret
enter
pop
pop
push
push
add
or
pop
js
pop
cwtl
test
push
cmp
dec
dec
push
call
xor
and
pop
or
adc
loopne
ss
sbb
jnp
rol
daa
es
dec
clc
rolb
fistpl
addr16
jmp
and
jne
mov
lods
xchg
push
add
rcr
or
add
adc
cwtl
jmp
mov
fbstp
and
inc
sbb
test
inc
daa
shll
jb
test
in
xchg
sbb
and
pop
sbb
loope
push
xor
mov
fnstcw
jl
in
lock
lock
pop
in
jne
jmp
push
in
sbb
and
inc
ror
rorl
mov
add
sub
dec
pop
out
xchg
insb
addl
imul
iret
lds
sbb
jo
mov
pop
push
mov
cmp
xor
adc
ss
leave
add
sub
adc
sbb
xchg
stos
and
loope
aad
xor
and
push
xchg
sub
and
mov
xchg
cmp
dec
mov
std
lock
xchg
fcmovbe
stos
mov
cmp
addl
or
push
je
inc
dec
rol
and
loope
or
aad
es
fistpl
push
mov
xor
xchg
jne
outsb
mov
loopne
inc
jbe
dec
imul
in
call
inc
or
movsl
mov
mov
mov
test
call
xor
mov
cmp
add
in
in
pushf
push
and
scas
mov
xor
push
inc
xor
cld
or
mov
push
sub
jo
jl
cwtl
jl
int3
int3
adc
dec
cld
mov
xor
lcall
rolb
xor
xchg
adc
cmp
pushf
scas
insb
call
mov
or
addr16
insb
retw
and
stos
ret
mov
das
push
sbb
add
add
mov
xchg
and
add
into
add
vprotw
push
out
psubusw
xchg
loope
adcl
adc
push
mov
lods
jecxz
sub
scas
lcall
rolb
out
cmp
xadd
int
or
pop
mov
or
adc
and
js
push
mov
inc
push
lret
addl
add
mov
insb
or
mov
pop
or
push
clc
clc
mov
enter
sub
push
adc
leave
pop
sub
lea
fs
into
push
push
inc
loopne
and
scas
mov
adc
lea
add
pop
shll
imul
pusha
shlb
push
add
xchg
sbbl
sub
xchg
fstl
test
call
adc
dec
mov
mov
mov
adc
mov
dec
xor
push
mov
inc
xor
aam
fildl
subb
sub
lds
and
push
dec
lret
test
stos
scas
imulb
and
in
or
mov
scas
or
add
jne
push
addb
mov
mov
loopne
call
icebp
je
xchg
ja
imul
jne
xchg
jns
fsubrl
addb
xor
mov
xor
add
mov
test
sar
mov
jns
mov
push
and
mov
dec
push
addr16
out
je
or
lret
mov
sub
lahf
out
inc
xchg
stos
xchg
and
cmpb
jne
cmp
cmp
jne
int
stos
lea
and
movsb
adc
fdivl
enter
insb
xlat
and
test
add
inc
das
or
stc
push
and
add
cmp
cmp
sahf
lods
and
or
lcall
push
repnz
xor
cwtl
mov
or
xchg
lea
test
cmp
and
mov
stc
pop
sub
pop
lea
nop
sbb
mov
ret
adc
mov
mov
fists
lods
pop
xchg
popf
clc
sti
mov
jg
add
and
add
push
pop
mov
fisubs
jmp
mov
testb
push
jno
adc
push
cmpsb
hlt
sub
shlb
sarb
jne
mov
cwtl
loop
or
jae
les
dec
testl
inc
ja
jg
iret
testb
sub
mov
adc
mov
out
add
aas
inc
or
test
out
cmp
jne
neg
in
push
testb
orb
sbb
pop
inc
inc
add
push
int3
fidivrs
mov
or
jb
cmp
mov
mov
pop
fisubs
and
repnz
sub
add
scas
pop
push
inc
adc
mov
mov
push
push
mov
pop
mov
jecxz
sahf
push
cmp
add
adc
adc
test
or
sbb
movsb
mov
adc
and
add
inc
add
xchg
add
nop
xchg
inc
int
sbb
add
mov
jmp
push
jmp
rcl
jmp
aaa
sub
mov
adc
xor
js
inc
int
adc
inc
xor
mov
ret
push
cmpb
adc
leave
adc
test
add
jge
or
adc
and
lock
shl
mov
fldl
push
or
iret
xchg
adc
ss
cld
rorl
sahf
rol
sbb
cmp
ret
push
gs
pop
push
lock
inc
mov
adcb
push
xchg
cmp
aas
mov
jmp
pop
push
out
sub
adc
sti
mov
xchg
lea
sub
dec
addb
addb
add
out
repz
roll
pop
mov
test
fadd
inc
adc
inc
addr16
mov
xchg
sbb
cmp
or
pop
fisttpl
decb
repnz
movb
jae
xor
mov
pop
xor
adc
cmpsl
push
dec
mov
fisubrl
push
pushl
fdivs
je
dec
lea
and
jp
je
add
sub
jle
and
lcall
and
mov
adc
sbb
or
push
xchg
and
loope
sarl
push
fadd
ror
push
test
jge
or
jno
repnz
pop
fistl
push
sarl
in
jl
cmpsb
push
pop
mov
pop
bound
rcll
xchg
add
xchg
inc
or
xchg
jbe
lret
push
jns
inc
sti
and
jg
adc
cmpb
and
mov
pop
lock
mov
or
or
fs
mov
inc
jge
sbb
jle
out
out
jbe
int
pop
jmp
popa
hlt
mov
push
ret
mov
cmp
les
lea
sbb
mov
sahf
add
je
and
andl
adcb
or
or
rcr
xchg
ljmp
cli
movsl
jmp
stos
enter
enter
xchg
push
jge
js
and
or
jle
push
add
push
out
xchg
add
pusha
sarb
sti
inc
ret
sub
inc
and
cltd
adc
and
scas
mov
mov
inc
lret
sub
inc
aam
insl
adc
jno
jae
cmp
push
push
nop
sub
das
mov
and
pop
cmpb
aas
movsl
cmpl
mov
jge
adc
sbb
ss
loop
sbb
in
aam
add
mov
dec
dec
jo
add
push
push
inc
es
sbb
xor
sub
jne
or
jg
in
sbb
movsl
xchg
adcb
loopne
outsb
inc
and
mov
cmp
adc
cwtl
mov
cmp
divb
sbb
fldcw
pop
pop
xor
mov
xchg
call
and
inc
add
in
cmp
xchg
add
xor
sarb
orl
or
movsl
and
inc
pop
stos
mov
les
mov
add
adc
fadds
or
and
pop
and
int3
xchg
addl
leave
js
adc
or
or
sar
add
add
jbe
or
nop
sahf
in
mov
inc
xchg
cmp
in
in
aam
xor
cmp
loopne
out
jae
ja
add
or
into
mov
stc
lret
test
jnp
ror
mov
imul
mov
int3
mov
pop
jg
mov
inc
arpl
scas
inc
xor
addb
xor
push
ret
nop
sub
sub
shr
repz
cmp
inc
cs
sbb
sbbl
fildl
mov
xchg
jle
and
clc
jmp
pushf
mov
pop
push
adc
pop
lods
out
loopne
mov
cmp
dec
cmp
test
adc
add
imul
pop
pop
inc
fstpt
int3
shrb
sbb
aaa
js
lock
sub
into
push
sbbl
fisubs
push
add
push
inc
arpl
cmp
dec
iret
xorw
mov
rcrb
sbb
enter
jl
and
fidivrl
add
ljmp
lods
mov
repz
in
add
das
cmp
lods
loopne
arpl
nop
jl
fcmovbe
jle
jge
leave
loopne
pop
enter
fcoml
scas
cmp
mov
iret
test
adc
scas
adc
xlat
adc
fistpll
xchg
arpl
mov
aad
mov
aam
or
test
pop
jae
push
clc
rcl
sub
ja
cmp
loopne
test
pop
icebp
or
lcall
or
cld
std
dec
or
jmp
or
dec
or
adc
mov
push
or
insl
mov
aas
shrb
and
test
sarb
xchg
or
into
push
ljmp
movsb
andl
inc
mov
pop
out
mov
aam
and
or
iret
fcomp
adc
cmp
mov
ffreep
lea
idivl
data16
rol
add
loopne
aas
cmp
fwait
or
pop
call
sar
add
loopne
or
or
xchg
cmp
je
and
imul
clc
xchg
adc
js
pusha
lods
xchg
adc
lods
outsb
in
mov
test
loope
push
ficoml
or
xor
xchg
mov
outsl
loop
mov
icebp
bound
jle
mov
mov
sti
push
jmp
jle
or
movsl
xlat
mov
and
loop
rol
popf
and
add
sub
sub
or
lods
pop
testl
insl
lret
sbb
cwtl
mov
adc
arpl
add
and
scas
lds
xchg
push
adc
and
fiaddl
shl
sahf
or
inc
pop
icebp
xor
mov
pop
mov
xchg
fs
cltd
xchg
add
pop
jg
cwtl
cwtl
inc
shr
adc
xchg
push
sbb
and
pop
push
inc
inc
add
push
mov
ficompl
mov
adc
mov
or
nop
mov
nop
add
setg
rorl
cmp
std
xor
dec
sbb
leave
addr16
xor
dec
sbb
test
pop
xchg
jmp
push
xchg
inc
imul
sub
enter
add
in
push
mov
test
push
test
add
mov
adc
lret
or
adc
adcl
mov
mov
fidivrs
xchg
jne,pn
cmpb
lock
sub
sub
mov
out
xchg
add
xchg
ds
jecxz
mov
mov
ret
lret
or
and
mov
ja
dec
test
add
dec
cs
std
and
cmp
rolb
push
push
movb
aam
inc
push
cltd
shrb
push
fiadds
adc
xor
aad
dec
mov
add
and
in
mov
lahf
fcmovbe
xchg
sbb
add
jl
pop
fwait
or
rcrl
leave
fldl2e
add
lock
pop
mov
mov
mov
cmp
xchg
imul
or
mov
or
mov
pusha
xchg
out
jne
mov
pop
pop
cmpsl
jg
add
and
test
lahf
int
xchg
fnstenv
sbb
inc
pop
jbe
or
outsl
or
sbb
xchg
mov
into
mov
sub
pop
rcrb
sub
fmuls
in
lods
clc
jle
dec
xchg
mov
jg
mov
cmp
arpl
cmp
inc
inc
imul
inc
mov
adc
daa
mov
mov
fisttpll
sub
mov
ja
xor
je
adc
imul
adc
aad
adc
mov
fmuls
jmp
aaa
leave
imul
in
pop
inc
cmp
jl
or
dec
inc
mov
inc
cmp
fcom
push
aaa
inc
add
nop
imul
xchg
sub
andl
sbbl
mov
push
push
cmp
pusha
add
inc
movsb
je
adc
dec
or
mov
inc
mov
ret
add
or
cwtl
pop
or
cmp
hlt
loope
int
adc
adc
mov
sbb
sarl
xor
dec
mov
imul
sub
cmp
add
add
push
enter
fimull
inc
xchg
xchg
push
push
fs
test
or
mov
mov
or
inc
cwtl
push
data16
or
add
inc
push
test
addl
sub
js
mov
adc
andl
and
mov
stc
mov
fmuls
insl
sbb
cwtl
ret
mov
xchg
push
jo
aas
mov
cltd
cltd
jge
add
call
jb
add
jo
icebp
test
sub
cmpb
or
adc
insl
adcl
push
dec
adc
add
push
xorb
adc
dec
and
fcmovne
xchg
sbb
in
mov
mov
push
inc
hlt
aaa
aad
lods
sub
add
aam
shlb
jmp
sar
mov
leave
dec
notb
mulb
jge
pop
inc
push
inc
lret
mov
pop
pop
inc
and
lret
mov
push
inc
stos
mov
add
sbb
pop
inc
es
mov
xor
rcl
in
cmp
adcb
and
rclb
lods
nop
or
fdiv
sub
cmp
push
xor
or
mov
das
or
push
add
out
add
and
loope
fdivr
jbe
aam
call
inc
aam
daa
xor
add
sub
repnz
xor
adc
pop
fs
test
lods
lea
mov
mov
cmpsb
rcrb
clc
arpl
faddl
inc
xor
xchg
jae
movsl
lods
xor
leave
xor
add
icebp
add
add
movq
stc
adc
push
jb
inc
ficoms
lea
je
sbb
adc
leave
js
adc
push
or
add
mov
inc
fistl
xlat
and
in
and
jbe
add
pop
pop
pop
hlt
jne
xor
ret
call
lock
sub
push
pop
jge
push
add
or
inc
xchg
push
aam
js
or
je
ja
cmp
xor
loopne
xchg
enter
inc
push
cmpsb
jne
hlt
je
mov
mov
mov
into
cmp
lahf
mov
sbb
sub
mov
add
ret
push
or
jecxz
or
clc
sub
xor
dec
add
pop
lret
mov
cmp
dec
ja
ja
mov
jle
add
fsts
lret
ja
dec
imul
add
mov
inc
cld
push
aam
xor
pop
or
add
and
xchg
xchg
sbb
les
xor
fwait
rcrb
mov
ret
inc
imul
les
orl
mov
mov
repz
mov
adc
pop
cmp
sbb
loopne
mov
int3
jne
or
add
or
add
test
cmp
orl
inc
nop
imul
or
jns
and
and
fidivrl
xor
imul
je
xchg
mov
or
les
outsl
adc
and
test
mov
xor
das
or
xchg
outsl
dec
daa
lock
shll
sbb
fdivs
inc
push
and
ret
sub
lock
sub
shlb
cld
pop
cmpsl
dec
pop
aaa
xor
std
xor
pusha
push
pop
add
lock
cmpb
test
out
into
cwtl
mov
or
gs
fstp
sub
shlb
sub
int3
ret
shrb
dec
xchg
and
sbb
movsl
mov
push
xor
sbb
inc
push
dec
mov
sub
push
pusha
loop
pop
test
mov
or
inc
fdivrs
push
jl
std
xor
pop
enter
cld
shlb
pop
int3
jecxz
cmp
jecxz
scas
sbb
sbb
add
imul
in
sub
xor
dec
push
int
xchg
js
mov
or
mov
lods
dec
shlb
xchg
in
add
das
push
hlt
jbe
xorb
iret
push
pop
mov
xor
gs
dec
sbb
adc
fists
lahf
dec
sub
lret
shrl
addl
fnstcw
cmp
push
mov
cmp
inc
lock
adc
clc
faddl
in
outsb
xor
enter
adc
xchg
add
loopne
or
jne
in
and
mov
in
lds
in
add
xor
lods
xrelease
adc
sbb
xor
inc
xorl
push
scas
xor
inc
dec
dec
insl
out
jo
mov
imull
and
test
lods
adc
xchg
shll
pop
pop
mov
sahf
mov
je
pop
jmp
inc
in
pop
jmp
loop
pop
ss
mov
jle
sub
xchg
adc
mov
mov
cmp
sub
pop
pushf
jne
jecxz
insl
pusha
or
cmp
sub
xchg
in
rcrb
jge
data16
adc
ja
inc
cmp
push
push
repnz
pusha
sbb
push
xor
adc
add
loope
push
arpl
dec
sub
adc
fs
inc
xor
mov
cltd
adc
js
lea
xor
fnsave
pusha
nop
lods
addr16
add
cmp
dec
sbb
fsubs
or
mov
dec
out
push
dec
add
adc
ret
xchg
gs
mov
add
das
popf
aam
xor
cwtl
int3
and
mov
out
paddusb
mov
mov
push
pop
mov
fadds
mov
mov
cmp
nopl
daa
fsubr
push
inc
bndstx
ret
sub
mov
scas
clc
add
cld
push
int
and
jge
popa
sub
xor
int
add
add
xchg
xchg
pop
jae
stc
clc
cld
hlt
lea
or
sub
ficoms
cs
add
ja
mov
and
sbb
mov
les
dec
arpl
fcmovnu
nop
xchg
fs
hlt
rcrb
add
add
sbb
add
orb
rorl
or
dec
jecxz
xchg
push
notl
push
jb
and
pop
and
fisubl
xchg
cmpsl
mov
or
ret
cmp
es
into
jmp
call
filds
ljmp
sub
sub
dec
cmp
add
and
dec
mov
dec
pop
cmp
inc
mov
inc
cmp
aam
push
xchg
xchg
xchg
xchg
and
xchg
adc
inc
add
and
sbb
and
sub
or
and
ss
jle
aaa
push
or
dec
sahf
gs
outsb
xor
mov
aam
adc
sub
dec
cmpsl
daa
cmp
xor
ret
in
insl
movups
test
rcrb
out
movsb
mov
add
push
push
aas
xchg
popa
pushl
cwtl
mov
mov
jne
mov
or
push
push
mov
pop
xor
adc
stc
daa
fmull
in
lea
outsl
leave
jp
popa
pop
adc
dec
add
inc
add
add
cmp
sahf
mov
jle
xor
outsb
xchg
outsb
add
push
daa
in
sbbl
pop
inc
inc
fdivl
xor
rorb
aaa
inc
stos
in
xchg
shrb
aaa
aad
test
jne
add
cwtl
out
dec
inc
mov
jecxz
stc
out
mov
out
cmp
xor
push
pop
cwtl
pop
loope
jp
shlb
fdivr
add
sbb
or
cmpb
in
xchg
scas
icebp
xor
dec
or
test
mov
dec
mov
xchg
jbe
push
pop
cmp
xchg
std
fistpll
sbb
mov
pop
cmpb
add
shlb
pushf
or
mov
mov
add
in
sbb
pop
ljmp
aam
jg
lock
xor
das
pop
xor
je
and
dec
dec
dec
sbb
jge
daa
push
jmp
movsb
lods
or
sbb
mov
out
js
push
push
les
icebp
jmp
push
enter
fcmovnb
dec
pop
or
out
push
and
imul
shll
aad
enter
push
andl
mov
lret
and
cmp
faddl
lcall
popa
shl
xlat
mov
aam
hlt
jl
test
jbe
add
xor
out
or
sbb
cs
or
arpl
dec
pusha
mov
call
mov
pop
mov
popa
clc
jge
cwtl
add
rcrl
aam
and
xor
mov
pop
xchg
xchg
nop
add
bound
shrl
jecxz
add
sub
sub
mov
scas
ss
jne
clc
add
sub
sub
and
pop
pop
icebp
adc
xchg
mov
imul
jl
es
loopne
jo
ss
add
jmp
xor
jns
call
daa
out
xchg
push
repz
add
in
enterw
fucomip
xchg
in
jbe
aaa
cmpsl
in
icebp
mov
call
mov
int3
mov
cmp
sbb
jns
clc
movsb
fcoml
mov
jae
int3
lock
sbb
cmp
or
iret
xchg
push
inc
jno
mov
sub
inc
inc
mov
sbb
arpl
fcmovne
sbb
or
inc
push
jl
jmp
mov
add
sbb
das
sbb
daa
pusha
add
loop
aaa
pop
jnp
and
xlat
loop,pt
sub
push
push
aas
movsb
lret
adc
js
lret
repz
test
adc
dec
push
dec
xchg
scas
push
pop
jmp
pop
jmp
inc
pop
jge
push
clc
dec
mov
cmp
pushf
repz
mov
or
pop
fmulp
adc
and
add
pop
fcomp
insb
cmpsb
jno
shl
mov
ret
mov
sub
test
negb
inc
mov
adc
cmp
popa
add
inc
lods
cld
dec
lahf
mov
cli
call
lods
cmp
data16
jo
aam
jmp
mov
fsubl
out
dec
xlat
jne
mov
daa
fcomp
insb
mov
mov
mov
mov
out
repz
aam
cmp
sbb
pop
inc
cmp
orl
or
je
add
gs
sbb
cltd
sub
je
cmp
and
jmp
gs
jmp
dec
inc
cmc
jmp
inc
cmp
loop
adc
test
rorb
adc
add
sbb
jbe
jmp
and
xchg
or
sub
cmc
or
incl
rcll
shlb
imul
ljmp
push
aam
pop
or
shr
or
imul
mov
xor
xlat
xor
pop
daa
lea
push
adc
jmp
dec
and
xchg
add
nop
sub
cmp
fsubrl
or
and
push
or
push
inc
adc
in
pop
push
push
inc
or
dec
pop
or
pop
xchg
mov
push
cmp
pushf
sub
loopne
cmp
xorl
ss
cmc
stos
ret
jmp
lds
cmpb
and
mov
arpl
mov
adc
int
in
clc
add
rcrb
daa
fwait
adc
movsb
rcrb
inc
nop
push
leave
mov
clc
cltd
dec
mov
incl
jne
fadds
cmp
mov
or
dec
cmp
mov
and
adc
mov
cld
pop
jmp
and
cmpsb
push
and
mov
cmp
inc
sub
repnz
mov
adcb
jae
jg
xchg
int
push
int
data16
loopne
mov
add
pop
push
adc
add
cmp
ds
dec
andl
push
dec
xchg
xor
dec
cmp
adc
or
add
xchg
scas
lahf
stc
xchg
call
ja
add
pop
addr16
inc
or
stc
fsubrl
dec
pop
jecxz
dec
loope
test
iret
add
cs
sbb
or
pop
ljmp
dec
fadd
and
imul
mov
pop
pop
or
leave
popa
mov
das
pusha
repz
xor
adc
mov
sbbb
sub
lea
pop
cmp
dec
cli
rorl
pop
sti
sub
fwait
xor
rorl
outsb
cmpb
lods
imul
ss
rcrl
in
cli
or
mov
adc
in
pop
mov
and
add
lea
ret
lea
fsubrl
or
addr16
in
jno
jmp
das
pop
push
adc
pusha
lahf
fcoms
jmp
mov
pop
repnz
adc
or
popa
cld
xor
push
and
das
cld
jne
cmpsb
mov
jl
inc
or
xor
cmp
adc
mov
jmp
mov
mov
and
lods
adc
dec
dec
cmp
lods
test
ret
jmp
inc
movsl
outsb
loopne
subl
les
aaa
fstl
cmpsb
and
test
aam
jae
fldcw
mov
inc
es
or
inc
inc
push
push
std
mov
inc
push
call
movsb
daa
mov
dec
sub
sub
inc
sbb
aam
loopne
pop
add
testl
lret
rorl
loopne
or
stc
in
pop
stc
inc
push
mov
mov
in
mov
jle
inc
call
call
sbb
rorb
jl
mov
movsb
pop
cmpsl
sbb
imul
sbb
test
lret
push
add
fs
movsl
fs
dec
adc
or
sarl
test
sub
and
sbb
mov
test
pop
bound
push
cmp
loopne
push
sub
mov
push
nop
and
add
xchg
in
cwtl
je
movl
lret
ss
pop
cld
pop
pusha
push
cmp
mov
cli
inc
mov
pop
test
inc
cld
dec
cmp
add
add
les
pop
repz
shll
mov
mov
push
call
gs
popf
lea
mov
lea
adc
lret
sbb
mov
test
addb
movsl
adc
jb
push
adc
jbe
lock
stc
dec
test
sbb
call
es
or
mov
sub
aas
sbb
xor
sbbl
arpl
add
sbb
and
mov
cmp
push
push
push
jno
mov
lcall
cmp
addr16
pushf
mov
push
jne
je
mov
cmp
fldt
jecxz
aaa
rorb
mov
xor
push
enter
mov
cld
call
mov
jmp
leave
adcl
mov
mov
insl
data16
add
dec
popa
jnp
jmp
daa
pop
sub
jmp
push
mov
pop
lea
xor
leave
loop
dec
jmp
out
xor
add
cmp
inc
or
mov
dec
or
dec
push
lcall
sbb
sub
push
mov
add
enter
add
mov
pop
pushf
pop
mov
lret
mov
je
mov
fstpt
movsl
or
call
jle
jl
or
sbb
cmp
sub
pop
jo
test
cmpl
fs
adc
jg
pop
jb
sbb
mov
pop
inc
inc
scas
mov
and
cmpsb
push
cli
fstl
lahf
fnsave
and
add
ret
mov
xchg
popa
push
jmp
cmp
lods
dec
inc
add
and
push
ss
xchg
or
dec
mov
sub
cmpsl
arpl
and
loope
test
add
popa
pop
pusha
cmp
fcompl
shll
xchg
cmp
je
add
mov
xor
insl
and
fsubl
rcll
push
stos
ja
imul
pop
shl
cmpsl
inc
xor
out
outsb
mov
addl
ds
mov
dec
push
nop
in
shll
xchg
cld
jmp
adc
mov
es
pop
jp
cmovl
push
stos
push
push
xor
xor
cmp
mov
xchg
jg
pop
dec
xchg
jae
cmpsb
xor
js
aam
fs
fcoml
es
cmpsb
loope
test
mov
es
push
xchg
dec
mov
mov
mov
adc
fisubs
mov
pop
cmpsl
dec
insl
lods
mov
in
fcoml
cmp
imul
movsl
cmp
outsb
xchg
lahf
test
movb
fwait
pusha
test
mov
inc
and
push
inc
stc
fldl
or
rorb
mov
iret
jmp
shlb
pop
sbb
ja
pop
inc
jg
or
mov
inc
bound
mov
inc
push
add
sub
fistps
ret
movsb
mov
test
mov
loope
cmpb
ret
pop
leave
push
iret
sub
call
add
popa
imul
into
xor
leave
adc
fimuls
daa
clc
aam
adc
cld
rcr
pop
mov
or
orw
fldl
push
mov
jnp
leave
sbb
xchg
daa
sbb
sbb
sbb
adc
outsl
mov
xchg
ja
repnz
sub
add
stos
call
push
call
and
xlat
clc
or
loope
leave
cmp
orl
sbb
mov
push
add
or
dec
push
ljmp
dec
fst
jp
inc
fsubs
mov
mov
mov
pop
cmpsl
lock
dec
aad
pop
adcb
aad
and
or
cmp
je
mov
movsl
enter
add
inc
mov
cmp
mov
mov
shrb
orl
leave
test
inc
push
adc
xor
repz
pop
xchg
adc
nop
or
sbb
xor
jnp
stos
xchg
or
adc
mov
jmp
pop
insl
inc
popf
or
jne
mov
jp
int
adc
lds
fdivrs
inc
clc
dec
add
ja
jns
lods
aam
and
sbb
sub
push
outsb
pop
loopne
or
sbb
imul
xchg
ror
mov
add
test
add
hlt
push
stc
pop
les
inc
inc
sbb
pop
push
pop
in
and
je
outsl
test
pop
xor
mov
bound
mov
pop
xchg
inc
push
inc
notl
arpl
outsb
mov
push
add
cmp
rolb
xchg
lret
lea
lret
popa
test
test
pop
ja
ss
sub
clc
cmp
jne
es
xchg
ja
dec
hlt
dec
inc
sbb
xchg
jl
fs
mov
pusha
xor
push
cli
addl
rcll
pop
aam
mov
sbb
ror
pop
dec
cmc
mov
cmpl
sub
call
fs
adcb
aam
pop
rcrl
inc
dec
jne
in
or
xor
outsb
add
fsubrs
dec
push
cmp
lea
std
add
adc
push
ja
stos
push
sbb
jmp
sbb
ljmp
or
bound
add
fildll
lahf
out
add
mov
xor
cmpsl
xor
mov
add
pop
jbe
add
ljmp
inc
ret
push
xor
jmp
or
idivl
jg
push
dec
cmp
xlat
int3
fs
lret
jmp
add
dec
mov
mov
jmp
es
pop
jg
data16
andb
outsb
lods
push
sbb
sbb
and
inc
lock
push
mov
jmp
ljmp
or
mov
cs
aam
jbe
fldenv
mov
jmp
add
ljmp
jmp
pop
cmp
jge
or
rcl
dec
cmp
sub
pusha
add
dec
sbb
xchg
outsb
daa
or
notl
xchg
inc
addl
lret
icebp
adc
das
mov
push
lea
loopne
gs
test
xchg
mov
or
mov
aas
or
push
or
sub
adc
iret
mov
popf
adc
scas
test
nop
or
and
outsl
add
test
mov
out
xchg
sub
lock
xchg
cltd
int
ljmp
adc
add
mov
add
xor
lar
mov
std
jno
pop
add
jecxz
les
pop
xchg
outsl
call
sbb
jmp
scas
or
into
dec
sarb
sbb
push
or
cld
adc
out
inc
push
pop
inc
test
lea
ja
aam
mov
add
cmp
fwait
pop
fcmove
inc
push
sub
rorl
lea
xchg
cmpsb
xchg
sub
mov
add
cmp
into
cmp
outsb
ret
rorb
inc
je
dec
push
out
add
push
sbb
ret
adc
out
mov
adc
pop
sub
shlb
arpl
add
nop
cmp
cmp
sub
adc
xlat
or
ror
cmp
jne
xor
lods
pop
adc
dec
js
frstor
or
push
push
push
inc
dec
insb
pop
mov
sbb
ljmp
sbb
in
test
or
movl
xor
push
sbb
lods
enter
add
orl
std
add
add
icebp
lahf
pop
add
mov
adc
lahf
add
mov
and
add
add
jmp
mov
dec
and
add
andb
mov
pop
adc
xlat
or
jg
loope
nop
idiv
add
add
push
aam
inc
lret
ss
rorb
adc
and
jns
add
cwtl
sbb
adc
sti
shrl
xchg
shrl
insb
loopne
cmp
jne
cmp
int3
adc
and
nop
pop
incl
xchg
inc
fs
iret
inc
jp
cmpsb
dec
lea
scas
cmc
movl
cmp
outsl
or
popa
repnz
adc
cmp
in
add
hlt
add
adc
ret
out
mov
clc
jne
sub
xchg
es
adc
xchg
inc
test
pop
mov
shlb
mov
ss
jle
mov
std
into
adcb
xchg
fwait
sbb
enter
mov
scas
roll
aam
icebp
add
and
leave
fcomp
lea
or
adc
push
popa
aaa
fcomps
in
dec
fsts
decb
and
cmp
inc
repnz
push
pop
fsub
sub
and
sbb
or
cmp
push
push
outsb
sbb
fwait
orl
and
or
sbb
adc
iret
jb
push
sbb
loopne
inc
xor
loopne
call
mov
rcll
ret
test
adc
pop
or
mov
add
push
add
cmp
daa
aad
xchg
cld
sub
add
jg
or
inc
add
inc
sub
sub
or
sbb
and
sub
aad
pop
rcll
pop
xchg
xor
xlat
mov
sbb
or
add
add
xchg
add
add
lea
pop
or
jb
mov
pop
das
cmp
sbb
aaa
nopl
ret
sbb
xor
adcb
pop
mov
arpl
dec
dec
xchg
ret
jmp
sub
aaa
dec
insb
push
rorb
clc
sbb
lock
dec
adc
dec
mov
dec
jo
popf
push
push
mov
inc
adc
pop
inc
mov
pop
or
push
push
ret
add
add
decl
add
cmp
jne
icebp
and
fisttpl
mov
pop
or
cmp
or
sbb
mov
stos
adc
cwtl
inc
loopne
push
mov
push
js
or
aaa
pop
mov
ficoml
pop
mov
fcoml
inc
lahf
pop
pop
dec
lcall
pop
test
push
adc
pop
sbb
sbb
mov
mov
dec
push
pop
add
add
fimuls
mov
mov
mov
and
jge
adc
filds
dec
lock
push
cld
push
xchg
popa
sbb
pop
fnstcw
outsb
cld
push
jo
cld
push
pop
sbb
or
xor
mov
mov
jge
lret
aaa
rcl
inc
dec
insb
push
inc
addr16
mov
adc
xchg
imul
adc
pop
sbb
and
dec
outsl
and
push
pop
pop
test
xchg
cmp
roll
sbb
pop
sahf
add
sbb
outsl
popa
cwtl
movsb
lret
sbb
xor
mov
les
mov
lret
ljmp
nop
xchg
cltd
dec
in
movsb
and
iret
out
loopne
mov
jmp
and
shlb
pop
sarl
les
roll
sbb
jg
ficoml
call
add
outsl
xchg
cmpsb
in
push
aam
aam
push
in
int
jb
cmpsb
in
fcomps
add
fcompl
or
add
nop
fdivrl
cmp
and
js
orl
jp
jl
or
enter
pusha
xor
and
and
and
imul
xor
and
push
xor
and
and
and
pop
orl
pop
pop
pop
pop
or
enter
inc
xor
and
and
and
dec
cmp
dec
dec
cmp
cmp
dec
dec
dec
xor
cmp
cmp
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
and
cmp
cmp
push
and
or
in
adc
ret
cmp
outsl
insb
outsl
dec
adcb
cs
and
ds
or
or
lfs
pop
arpl
xchg
loopne
pusha
pushf
and
and
add
or
je
imul
add
jo
adc
inc
dec
adc
outsb
xchg
nop
xchg
in
mov
add
push
add
aaa
mov
jae
je
repnz
and
fbstp
je
cld
pop
movsl
mov
insb
push
data16
jo
mov
dec
je
arpl
adc
sti
push
es
adc
or
gs
cmc
notl
rolb
jae
nop
fimull
push
push
outsb
int
ret
sti
in
aam
jo
outsl
sbb
cmove
imul
or
je
sbb
or
out
loopne
add
inc
jge
or
adc
mov
sub
jle
inc
add
into
adc
addr16
cmp
inc
cmp
in
repz
push
dec
outsl
jo
je
pop
shl
lret
inc
jns
sbb
or
pop
in
addr16
dec
add
dec
imul
jbe
xor
adc
xor
fldt
or
lret
cs
loopne
or
adc
and
add
jne
dec
jb,pt
dec
pop
and
pop
bound
mov
or
dec
jge
jp
mov
or
push
or
inc
inc
imul
addr16
inc
outsb
jb
jae
hlt
pusha
enter
pop
outsl
and
xchg
mov
mov
int3
mov
fadds
aam
mull
xor
ja
push
xor
ss
lods
mov
ret
inc
xor
pop
rolb
mov
imul
cmpsl
inc
xchg
insl
pop
inc
sbb
outsb
outsb
xchg
lahf
and
push
les
in
xorb
fadds
cmp
outsl
test
out
adcl
pop
rcrl
bswap
cmp
add
xchg
adc
mov
sbbb
daa
pop
fcmovne
xchg
fistpl
and
or
push
pop
add
icebp
xlat
pusha
in
cmp
push
push
dec
shlb
inc
push
pop
add
cwtl
sub
ss
or
xchg
jmp
fdivrl
xor
xchg
add
mov
nop
call
popl
adc
and
lahf
pop
sub
jb
xchg
ds
aas
sbb
xchg
ficoms
mov
out
fcoml
inc
cmp
and
xchg
add
cmpsb
cmp
or
xchg
add
imul
outsb
sub
push
and
push
and
add
ds
push
dec
jae
push
add
push
inc
je
xchg
jmp
and
inc
mov
push
cmp
fadds
jns
add
inc
sbb
and
push
inc
dec
add
inc
lcall
sbb
aam
pop
stc
add
add
cld
out
add
dec
or
dec
dec
sub
push
inc
popa
scas
cmpl
jmp
and
in
fcmovb
xchg
stc
xchg
in
and
and
int3
or
push
mov
test
insl
hlt
inc
push
pop
add
and
cmp
pop
or
lds
into
arpl
loopne
push
fcoml
and
sbb
inc
pushf
pop
adc
ficoml
cmp
stos
es
sar
cmpsb
imul
adc
mov
sbb
fiaddl
punpcklbw
mulb
sbb
mov
pop
and
out
mov
mov
push
les
in
nop
xchg
xchg
sarb
adc
push
push
add
outsl
ret
ficompl
push
dec
push
or
pusha
outsb
sub
insb
push
hlt
xor
je
das
adc
push
mov
mov
mov
mov
fiadds
nop
fildll
punpckhdq
jb
xchg
and
cwtl
sbb
cmpsb
sub
mov
push
std
cmpsl
sub
sub
fiaddl
sub
push
xor
mov
into
fsubrl
insb
sahf
fiaddl
add
push
ljmp
and
mov
inc
aaa
sbb
add
or
ds
clc
xchg
xor
cmp
imul
and
das
leave
dec
enter
pop
pop
test
pop
pop
mov
pop
adc
jo
mov
or
je
dec
std
stos
mov
mov
sub
hlt
add
sbb
sub
or
push
add
fdivp
dec
insl
popa
addr16
sub
sub
in
xchg
lods
insl
mov
enter
sub
lods
ret
mov
rcrb
sub
sbb
xlat
or
dec
sahf
push
add
dec
int
sahf
add
pop
jae
pushf
mov
popf
xor
mov
mov
jp
push
mov
mov
insl
cmpsb
inc
and
fs
call
sbb
and
rolb
or
adcl
or
mov
mov
subl
push
sbb
add
cmp
jg
inc
push
clc
insb
fidivs
jg
cmp
mov
jl
ds
movsb
js
aas
lea
sets
in
les
pop
xor
in
xchg
pop
or
pop
sbb
sbb
sub
sub
sbb
mov
and
push
dec
arpl
xchg
xchg
nop
inc
pop
sub
adc
sbb
sub
sbb
test
test
inc
andl
lods
mov
lods
aam
fadd
test
xchg
jl
stos
js
lock
lods
sbb
cmp
dec
pop
sbb
cmp
movsb
test
add
and
pop
sub
sub
mov
jg
jg
or
mov
mov
xor
rol
xor
inc
dec
loope
inc
ret
pop
mov
lea
inc
sub
pop
push
push
xchg
pop
or
add
xchg
push
add
js
inc
icebp
push
jne,pn
pop
test
push
test
lods
pushf
add
rorb
das
pushf
push
insl
pcmpgtd
je
sbb
push
jne
inc
inc
clc
bound
test
cmp
xor
arpl
ret
inc
sbb
push
adc
adc
dec
push
ja
adcl
ret
mov
es
das
rolb
or
push
sbb
mov
cltd
or
adc
mov
lds
pop
inc
in
xor
dec
lods
sub
std
add
lret
add
sub
cmp
bound
xchg
jno
jle
sub
rcll
mov
ss
cmp
cmp
push
jmp
push
dec
pusha
xor
cmovs
out
leave
xor
jnp
fidivs
les
je
cmp
xchg
and
xlat
cmp
test
int3
add
aam
fs
jmp
or
pop
sbbb
inc
push
jle
pop
sbb
test
add
xor
xchg
adc
lods
addr16
xor
pop
jp
repz
nop
push
or
adc
jge
rclb
ss
pushf
xchg
sbbl
inc
mov
cmp
lock
xor
push
jmp
cmp
push
mov
or
cmp
adc
enter
mov
jg
mov
sub
cmp
cmp
or
adcb
push
repz
lahf
mov
or
in
pop
rolb
arpl
cmp
mov
popa
jb
outsl
outsb
inc
inc
cld
rorb
ret
outsb
pop
dec
insb
imul
push
xchg
jbe
add
fadds
adc
inc
push
gs
pusha
pop
sbbl
mov
repnz
push
imul
bound
cmpsl
xchg
addl
insb
insb
outsl
ja
and
enter
or
arpl
imul
jno
popa
mov
xor
or
jns
fadds
imul
imul
add
inc
es
orl
fisttps
adc
ret
xchg
sbb
xchg
mov
cmp
loopne
jo
push
pop
imul
sub
pop
mov
push
addr16
pop
add
mov
inc
je
inc
push
mov
es
std
insb
add
mov
mov
or
lods
jg
gs
or
sub
xlat
adc
ss
daa
pop
xchg
sub
mov
imul
dec
jb
fiaddl
or
mov
andl
test
push
mov
adc
pop
jb
ret
repz
adc
insl
sub
adc
cmp
outsl
inc
imul
push
iret
push
outsb
jne
pop
and
pop
or
inc
xchg
bswap
or
pop
sub
lahf
dec
cs
push
scas
jecxz
arpl
add
mov
inc
imul
das
je
mov
cmp
mov
es
xchg
or
add
enter
pop
ljmp
push
xor
or
pop
mov
and
or
and
pop
sbb
and
pop
ret
lcall
jnp
testl
dec
inc
push
push
inc
push
add
insl
loopne
inc
inc
inc
inc
mov
adc
dec
inc
dec
dec
arpl
adc
sbb
inc
inc
push
adc
inc
in
jle
notb
push
mov
shll
fisttpl
dec
and
out
xchg
jbe
jg
inc
xor
xor
adc
inc
dec
inc
dec
jle
jg
inc
dec
inc
xor
inc
dec
aaa
and
push
push
dec
dec
push
dec
dec
lea
push
jnp
push
cs
decl
dec
push
mov
dec
inc
xor
fwait
nop
dec
or
pop
dec
pop
xor
inc
inc
push
push
push
dec
push
inc
scas
leave
mov
push
push
out
xorl
mov
inc
jl
adc
dec
daa
rorb
add
into
pop
das
add
xlat
sub
test
mov
sti
std
add
dec
or
sbbb
add
add
xor
or
pop
mov
jg
out
inc
or
mov
or
or
fiaddl
outsb
dec
sbb
lock
nop
ret
lods
inc
cmp
or
jmp
add
and
rorb
mov
or
xor
sbb
sbbb
adc
sbb
les
push
push
adc
stos
aaa
sbb
inc
out
aas
les
call
ret
daa
inc
loopne
rcl
in
dec
add
dec
sub
ss
je
ret
stc
ret
das
pusha
and
cmp
mov
cmpsb
cmpl
arpl
aam
xor
mov
cmp
mov
call
pop
cmp
inc
popa
daa
adc
out
das
cmp
lods
jo
cli
das
aad
or
add
pusha
movsl
cmp
xchg
sbb
inc
jae
jmp
push
dec
adc
pop
push
cmp
inc
cmp
mov
mov
ret
cs
cltd
pop
mov
add
cmp
pop
jo
cmc
inc
adc
fcoms
push
test
mov
lods
push
push
push
fs
out
inc
pushf
out
sbb
enter
inc
testb
xor
test
jmp
adc
enter
inc
aam
add
out
rol
or
adc
adc
mov
push
sub
ret
cmp
pop
cmp
test
sbb
jns
xchg
sbb
sbb
jns
movsb
sub
fiaddl
pop
fmul
je
test
mov
repz
or
pop
inc
fildl
or
jmp
sarb
pop
xchg
xchg
adc
push
jecxz
aam
in
mov
pop
out
call
dec
cld
or
jo
mov
xlat
repz
adc
pusha
pop
mov
add
inc
jo
shrb
mov
jl
xor
cmp
adc
stos
mov
ret
adc
xchg
test
cmp
loope
lea
or
mov
sub
inc
inc
cltd
push
scas
cmpl
fwait
clc
dec
aaa
mov
fdivrs
lcall
fcomip
ficoml
cmpl
push
sbb
push
ja
cs
cmp
and
sti
or
push
scas
xor
sbb
cli
xchg
dec
or
bound
adc
inc
pop
sbb
cmovs
push
lock
lcall
int3
adcb
aaa
aaa
cmp
adcb
dec
cmpl
inc
inc
mov
aas
sahf
cmp
inc
add
aas
movsl
add
and
aas
int
add
mov
add
out
jns
inc
repnz
xor
inc
cmp
pop
roll
pop
lock
lret
add
aas
sarb
call
push
push
and
fistpll
cwtl
cmp
mov
movzwl
test
in
jmp
xchg
jbe
out
stc
lret
aas
mov
or
movsb
add
das
sbb
cmp
daa
lock
rorb
pop
add
pop
sbb
sbb
pop
or
inc
sub
mov
nop
sub
js
sbb
or
inc
je
push
cmp
jb
mov
pop
lods
mov
nop
outsl
adc
xchg
js
aas
dec
cs
inc
in
cmp
ret
add
hlt
push
out
mov
out
mov
fimull
movsb
cmp
mov
test
popa
push
jne
in
cmp
xor
and
sbb
dec
movsl
mov
inc
mov
fistpll
push
dec
or
ret
jg
push
mov
das
cmp
adc
inc
and
add
jmp
lea
std
sub
jmp
je
pop
adc
scas
imul
gs
iret
sub
pop
lock
sub
les
ret
ret
popa
aaa
adc
sbbb
mov
data16
repnz
nop
dec
leave
sub
sub
cmp
add
cmpb
mov
mov
add
xchg
dec
clc
inc
fldl
nop
xchg
les
lods
adc
leave
repz
js
cmp
and
movl
mov
inc
xor
inc
and
cmp
mov
test
js
icebp
dec
sub
add
sbb
movups
sub
sbbb
mov
cmp
loope
lea
sar
pop
mov
sbb
push
and
push
or
push
add
sbbb
or
or
cmp
xor
push
sub
push
pop
mov
pop
pop
mov
sbb
add
push
or
test
fsubrp
notb
jp
sarl
sbb
nop
and
ja
les
les
iret
rcrl
cmc
mulb
jle
sub
xchg
and
xchg
and
sbbb
enter
adcb
mov
sub
push
pop
in
in
insb
sarb
in
mov
push
push
push
in
xchg
test
into
push
jge
jnp
nop
cmp
pop
pushf
rep
mov
arpl
sbb
incl
bound
lea
in
sub
dec
push
mov
rcrb
mov
cmpsl
add
cmp
popf
mov
push
cmp
iret
adc
enter
pusha
dec
or
push
rolb
add
arpl
adc
lods
fcom
shrb
sub
mov
push
aaa
jbe
push
movsl
cmp
daa
dec
add
sub
addl
mov
sub
imul
sbbl
rclb
sbb
jmp
inc
fidivs
rorb
sbb
jl
xchg
in
pop
push
dec
sbb
sub
rol
rclb
or
jl
adc
push
test
xor
jmp
cmpsb
mov
mov
ljmp
nop
lods
inc
or
jge
and
jae
sub
jno
je
leave
add
pop
inc
mov
fs
scas
dec
sub
shlb
inc
pop
mov
push
or
shlb
hlt
ficompl
xchg
int3
shl
push
clc
add
xlat
jne
add
push
or
es
add
addl
dec
dec
ss
cmp
test
xor
mov
andb
and
orb
sbb
iret
add
test
scas
loop
clc
negl
xchg
or
shll
sbb
cli
hlt
cmp
je
jp
mov
xor
jae
jle
mov
or
mov
add
pop
push
jns
add
or
imul
sub
pop
xor
push
xor
loopne
stos
mov
xchg
cmp
mov
imul
jge
out
pop
sub
imul
jnp
loopne
pop
and
and
and
pop
push
adc
and
add
and
xor
shlb
push
sti
ja
add
pop
enter
or
cmpsl
adcl
xchg
das
cmp
mul
xor
add
pop
add
nop
add
fcomps
cmpsl
andl
repnz
addb
rolb
std
imul
rorl
andl
jae
add
xchg
daa
adc
inc
jbe
push
sbb
lea
push
andl
add
lock
and
add
movsb
mov
push
movl
lock
fnstcw
inc
dec
ror
je
call
pop
dec
push
dec
cmp
push
push
inc
test
mov
aaa
add
insb
pop
test
fildl
loopne
hlt
pop
cmc
fwait
xchg
aaa
ss
jne
jno
and
mov
add
dec
jl
movsl
pop
in
imul
sub
lcall
in
lcall
aam
jle
sbb
outsb
in
push
out
push
push
mov
jbe
lods
inc
or
fimull
push
insl
xchg
inc
pop
mov
adcb
negb
sub
dec
cmp
js
and
add
and
mov
pop
mov
inc
shl
test
and
xor
not
and
pop
pop
sar
cmpsb
mov
add
imul
add
repnz
cmp
stos
pop
sub
test
adc
lahf
add
stc
popa
out
add
test
pusha
xchg
adc
stc
push
pop
mov
xor
pusha
fsubrs
or
sub
prefetch
imul
sub
push
rcl
lahf
int3
inc
rorb
ja
fdivrl
lock
push
int3
inc
xchg
dec
push
jge
sarb
es
cmpsl
cmpb
pop
sbb
and
fcompl
push
sub
dec
jmp
jns
jecxz
fisubrl
pop
les
lcall
out
daa
ja
lock
das
or
fiaddl
mov
addl
push
sarb
add
imul
add
stos
dec
ss
movsl
in
out
leave
xor
sub
xchg
add
adc
push
adc
fisubrl
inc
xchg
and
mov
fistl
push
mov
mov
or
jge
add
mov
mov
add
dec
jmp
faddp
inc
add
or
sbb
cwtl
cmp
aas
dec
out
decl
test
fwait
mov
push
mov
lret
pop
pop
pop
push
add
pop
add
dec
jne
ret
jge
adc
xor
mov
push
sbb
adc
and
push
or
inc
pop
inc
aam
sbb
mov
adc
adc
js
and
and
adc
bswap
shr
mov
dec
jns
jmp
sti
mov
mov
mov
sub
shl
mov
mov
lret
addl
jmp
and
imul
add
cli
adc
mov
inc
adc
inc
sub
popa
add
test
or
push
or
mov
push
jp
aas
push
push
pop
or
test
sti
pop
aas
rolb
jne
aas
sbb
add
in
and
mov
inc
add
lea
dec
pop
fiaddl
push
cmp
das
daa
and
push
addr16
or
mov
mov
dec
cwtl
and
rcr
icebp
pop
movsb
add
lahf
mov
mov
jns
xchg
xchg
jno
xchg
repnz
clc
xor
jl
stos
lock
lcall
cs
movzwl
lea
or
push
add
mov
xchg
sbb
sbb
pop
mov
mov
mov
adcl
cltd
cmp
pop
push
push
dec
lods
lock
push
fnstenv
daa
or
aas
jo
sbb
jmp
daa
dec
mov
mov
lret
or
mov
movups
test
mov
popa
ret
insl
and
xor
pop
loope
in
add
adc
movsl
outsl
daa
outsl
loopne
add
ss
push
in
addl
and
inc
add
inc
xchg
xchg
outsb
push
dec
dec
aaa
cmove
mov
data16
clc
inc
cmp
shrl
adcb
aaa
nop
xorb
dec
xor
mov
lret
js
nop
mov
or
cs
lock
jecxz
cmp
pusha
jmp
cmp
dec
sahf
insb
in
pop
jbe
mov
or
sbb
push
bound
sub
pop
lods
lods
int
imul
xor
pop
pushf
bound
test
xchg
add
adc
jb
push
out
and
daa
cmp
add
stos
mov
or
jae
mov
sbb
and
inc
mov
test
inc
imul
sbb
adc
push
xor
andb
add
dec
jne
add
mov
sub
or
pop
dec
movzbl
sbb
lock
cmp
fisubs
nop
mov
incl
test
jle
cmp
dec
mov
lods
jl
aaa
enter
pop
fistpll
enter
cmp
jle
adc
mov
roll
add
popa
jbe
ret
pop
jbe
lods
and
inc
pop
fbstp
stos
jae
pop
fs
add
loope
pop
nop
lock
push
int
fsubrl
dec
js
imul
cmp
add
scas
pop
mov
fcomp
pop
shll
loopne
push
and
imul
xor
ret
ja
cs
adc
dec
add
fcompl
insb
sub
inc
cs
dec
and
jno
pop
test
nop
pusha
jge
test
adc
andb
inc
ret
imul
sub
loopne
es
sub
push
xchg
lea
lea
jno
push
in
mov
in
lds
es
dec
jne
cmp
cltd
adcb
sub
enter
xchg
xor
jns
xor
cli
pop
mov
ss
in
add
sub
sub
pushf
and
or
sarl
movsb
push
pushf
sbb
adc
rcrb
dec
add
push
in
sldt
dec
inc
pop
sbb
mov
pop
cwtl
leave
inc
mov
insl
mov
push
mov
test
dec
sbb
enter
call
rorl
rolb
repz
mov
in
in
push
int3
aas
mov
jno
mov
pop
mov
push
stos
or
outsb
xor
cltd
loope
cmp
push
jo
pop
mov
cmp
mov
or
pop
repnz
aam
out
add
mov
lock
scas
add
jnp
sub
xor
xor
testb
mov
cld
add
push
sbb
test
dec
test
aas
sbb
pop
jl
sub
sub
mov
and
add
push
jb
sub
add
push
rol
movb
sbb
jg
lock
jmp
vmovdqu
mov
in
and
test
adc
std
xchg
or
imulw
ficompl
or
inc
and
jae
mov
and
mov
or
sbb
ret
adc
push
mov
lret
push
add
dec
in
pop
int3
aam
ret
adc
lock
pop
add
or
adc
test
adc
rol
add
inc
cmc
rcr
ret
pop
aad
mov
nop
or
pop
mov
hlt
cmp
sbbb
jo
sub
leave
ss
adc
imul
clc
pop
xorl
mov
sbb
ficoml
push
sbb
and
int3
cmp
push
clc
hlt
stos
sub
popf
loopne
rorb
orb
loop
or
or
xor
movsl
dec
sub
mov
and
push
sbb
jge
mov
sbb
pop
loopne
pusha
nop
sbb
loopne
in
mov
adc
in
hlt
int3
shlb
inc
inc
or
loopne
lcall
imul
jns
push
call
mov
cmpsl
fsubr
mov
dec
mov
faddl
and
mov
loopne
add
sbb
add
and
das
push
in
leave
scas
mov
add
or
xor
sti
fildll
in
mov
mov
or
lods
pop
pop
inc
andb
push
insl
mov
cld
in
cmp
cmpsl
mov
mov
mov
cwtl
cmp
bnd
add
test
xor
in
in
xchg
in
movsl
enter
hlt
loopne
popa
push
inc
sti
fcoml
scas
inc
lock
in
add
mov
and
dec
inc
mov
shll
cli
movb
scas
adc
add
sub
aaa
sbb
push
test
pop
mov
mov
sbb
daa
or
pop
shll
loope
rcll
sbb
sbb
mov
out
sub
rclb
push
nop
fadds
je
insb
xor
jle
and
inc
push
roll
pop
je
pusha
adc
and
dec
or
mov
cmp
xor
push
push
lock
adc
xchg
dec
jo
or
or
icebp
adc
sbbb
jne
std
popa
push
add
pop
and
repnz
popa
push
sbbl
add
dec
hlt
ss
fldenv
hlt
rorb
jp
rcll
add
std
mov
pop
jne
ret
xchg
mov
push
and
movsl
xor
inc
adc
popa
cmp
popa
pop
or
push
mov
ret
jbe
pop
je
add
push
roll
push
mov
add
mov
push
inc
add
pop
adc
cli
dec
pop
les
enter
ret
xchg
shrl
lods
add
bound
out
call
and
mov
rclb
popf
add
pop
jb
lahf
or
jo
cltd
inc
outsl
jb
lret
adc
push
or
adc
int3
mov
aaa
ds
jle
add
add
andl
mov
and
iret
xchg
das
add
adcb
push
in
ljmp
scas
xchg
mov
cs
inc
add
add
sahf
out
cmp
sub
hlt
insb
repz
sahf
inc
hlt
sub
lods
es
and
push
aad
lds
arpl
xchg
dec
adc
fs
adc
popw
sarb
pop
imul
jecxz
jo
jnp
add
icebp
xchg
and
clc
int
insb
inc
dec
inc
dec
jne
or
add
mov
cmc
mov
or
sub
add
andl
cmpsl
add
arpl
das
pop
les
leave
mov
es
push
xorb
andb
dec
aam
or
data16
fdivrl
pop
inc
add
pop
stos
or
sbb
adc
or
out
jo
sub
outsb
ret
push
push
jae
dec
mov
int3
fucomip
sub
inc
aas
or
xadd
add
adc
popa
pop
adc
bound
test
cmpsl
mov
sbb
add
push
stos
popf
sub
in
add
push
sub
xchg
movsb
adc
xchg
and
loope
inc
mov
rcll
or
enter
or
jbe
inc
sub
or
add
mov
enter
scas
loop
jbe
sub
outsl
sbb
ja
or
xor
cwtl
sbb
mov
jns
setns
sub
clc
push
sub
or
sub
mov
fcmovnb
or
rclb
push
or
xor
fwait
testl
mov
or
jecxz
adc
lret
sub
mov
xlat
pop
jne
inc
xor
aas
insl
fsubl
call
mov
pop
test
aaa
jge
out
mov
and
pop
rcrb
aad
dec
sbb
jno
aas
mov
jo
pop
sub
xor
test
add
insb
push
adc
popa
addb
inc
inc
and
test
xor
or
in
jno
and
push
adc
popa
or
enter
mov
imul
or
pop
inc
test
sbb
adcb
xchg
xorb
cmp
fsubrl
xlat
push
inc
and
pushf
sbb
add
sub
fmulp
push
xchg
or
jmp
mov
or
mov
mov
adc
jb
rorb
pop
or
mov
faddl
movsb
push
mov
in
dec
pop
mov
test
sub
rcrl
mov
mov
xor
cmp
jo
sbb
pop
jb
mov
outsb
and
xchg
pop
and
jno
daa
mov
inc
add
insb
daa
mov
push
popf
adc
jnp
aad
mov
ret
jp
sub
pusha
and
arpl
mov
test
sub
lds
pusha
pop
xor
jo
loopne
cs
popa
inc
jle
adc
jno
dec
shrb
sbb
enter
adc
mov
xorb
add
xchg
inc
andb
stos
sbb
lock
push
xchg
inc
add
pop
push
mov
dec
fiadds
jns
sbb
cmp
insb
hlt
popa
mov
jns
add
mov
testb
mov
jg
shlb
sub
adc
insb
nop
nop
adc
insl
push
andb
push
or
inc
cmp
or
sahf
das
and
inc
cmp
and
sub
popf
fcomip
mov
mov
shrl
sbb
jbe
scas
jb
sbb
clc
jae
push
aad
addr16
shrl
jo
cmp
mov
outsb
inc
lods
and
xor
pop
inc
nop
mov
aaa
popa
jp
mov
jne
cli
inc
enter
jo
or
mov
inc
jo
pop
add
add
cmpsl
shlb
test
movsl
jo
pop
and
je
popa
sbb
negl
push
pop
sbb
mov
jg
shlb
je
aaa
push
xor
fidivrl
fs
dec
cli
lea
shll
fbstp
out
sbb
or
nop
or
mov
lds
add
pusha
test
aam
imul
jle
push
sub
cmovle
mov
push
cmp
dec
stos
mov
push
mov
loop
outsl
xchg
xor
jo
fwait
test
fwait
and
pusha
add
dec
les
ja
xchg
sbb
push
cmpsl
rorl
xchg
lea
push
add
xor
or
cmp
mov
mov
lcall
ja
and
inc
sub
push
or
pop
and
and
fwait
stos
add
andb
daa
stos
adc
sub
sub
and
inc
sub
clc
pushl
sub
sub
adc
cmc
in
mov
daa
add
in
mov
and
clc
adc
add
cmp
push
fsubrs
adc
add
xor
bnd
or
xor
in
or
pushf
shrl
jecxz
call
ret
fimuls
xor
mov
ficoml
push
adc
mov
mov
test
cltd
and
mov
xchg
dec
lods
out
je
aaa
shlb
dec
dec
je
into
xchg
daa
push
push
js
sub
jle
dec
les
mov
movsl
fstl
inc
sub
arpl
mov
cmp
into
inc
addr16
xchg
mov
mov
add
xor
xchg
enter
mov
push
xchg
in
add
test
adc
push
adc
jne
xchg
loopne
sub
pop
sub
sbb
or
jg
and
sbb
xor
sti
sub
imul
orb
add
jae
mov
in
lret
rcrl
sub
sbb
data16
sub
dec
mov
or
popa
xchg
cmp
dec
imul
popa
adc
jne
cmp
and
je
cmp
and
mov
lahf
lods
inc
add
mov
mov
inc
ss
pushf
cmp
or
dec
js
aas
mov
sbb
dec
or
add
or
xor
xor
rcll
lea
notb
pusha
and
pop
sub
aaa
xor
cmp
icebp
nop
jb
push
pusha
out
les
lea
aad
xchg
adc
mov
sub
stos
add
arpl
jmp
pop
sbb
and
rcpps
inc
orb
scas
dec
adc
fnstenv
lods
inc
fwait
cwtl
adc
sbb
pushf
clc
sar
out
jge
and
inc
je
pushf
push
inc
aam
nop
in
xchg
jbe
lea
daa
mov
dec
enter
test
push
fs
out
adc
add
pop
push
or
jecxz
lret
inc
mov
adc
adc
test
xor
enter
loope
mov
adc
sbb
repz
cmp
int
lcall
lock
xor
lret
subl
adcb
js
scas
lds
fnstcw
and
test
lock
push
or
lahf
aaa
fbld
and
lret
imul
pop
push
in
cwtl
pusha
sub
int
cmp
in
mov
out
into
or
ds
inc
lods
rorb
fimull
push
dec
test
dec
cmpsb
xchg
cwtl
clc
lea
jnp
mov
repz
data16
in
mov
inc
enter
inc
sbb
add
and
or
lcall
inc
inc
mov
js
adc
sub
sub
lea
sbb
nop
mov
insb
into
loope
adc
lret
push
popf
jo
jne
add
sbb
lock
in
push
sti
mov
xchg
stos
adc
jns
dec
aaa
xor
int
add
xor
mov
add
je,pn
inc
js
adc
lock
popa
jge
das
clc
pop
xchg
scas
test
loop
rclb
mov
xchg
stc
adc
adc
dec
inc
adc
test
or
fstp
dec
cmp
push
sub
sbb
rcll
sbb
jnp
pop
adc
dec
lcall
xchg
in
rcrb
jo
mov
add
add
adc
or
pop
jo
inc
pop
adc
sbb
das
aaa
or
xchg
push
rcll
cmp
xchg
or
xchg
mov
ja
or
test
inc
or
fistpll
xor
add
xchg
je
inc
xchg
mov
push
call
adc
lock
fs
dec
fs
and
sub
mov
mov
push
stos
adc
fldt
nop
mov
out
add
wrmsr
mov
mov
clc
lcall
pop
ss
sbb
add
imul
jb
ret
xor
adc
or
sbb
lea
shlb
sbb
sbb
inc
test
and
jo
daa
pushf
shrb
call
jle
insl
adc
cld
dec
jbe
mov
jmp
sub
cmpb
jl
popf
add
dec
adc
sub
pusha
es
adc
pop
mov
jl,pn
jo
and
push
andl
jge
test
jb
xlat
cltd
and
rcrb
daa
adc
ret
inc
inc
ja
cmpsl
push
test
dec
int
lock
jecxz
inc
subb
xor
fidivl
jmp
jmp
push
nop
xchg
cs
mov
call
adc
add
pop
inc
sub
repnz
lcall
sbb
jl
pop
aaa
sub
cmp
arpl
scas
sbb
xchg
ds
ljmp
loopne
push
inc
daa
pushf
mov
push
or
test
jae
mov
sbb
jbe
lods
adc
mov
bswap
inc
push
repnz
inc
sub
cmp
ja
enter
or
jns
push
in
fidivs
mov
lret
out
pop
stos
inc
data16
fnsave
sub
adc
cltd
sbb
push
aaa
jg
dec
pop
inc
pop
mov
and
loopne
push
cmpl
addb
sub
movb
xor
add
push
popa
jne
xor
mov
cmpb
dec
or
pop
pusha
dec
dec
pusha
sbb
xchg
lahf
fwait
dec
dec
xor
xchg
in
cmpb
adcb
jo
xor
mov
dec
or
jbe
int3
mov
mov
inc
push
addr16
pop
inc
bound
push
push
xchg
fsubrl
cmp
filds
push
push
sub
subb
add
push
in
push
dec
push
dec
adc
adc
mov
or
push
mov
push
cmp
frstor
adc
and
inc
stc
sbb
xchg
pop
repnz
addb
or
mov
jmp
aaa
das
sub
punpckhdq
xor
push
jne
cs
cmpsb
pusha
gs
and
add
sbb
int
lods
pop
scas
inc
pop
rolb
and
outsb
jnp
jecxz
or
shll
and
dec
ret
fimull
or
orps
mov
adc
int
lods
imul
sbb
push
pop
aad
mov
push
xchg
xchg
fadds
mov
jne
and
mov
out
test
bound
cmpb
xchg
inc
cmc
daa
fs
lock
inc
insb
dec
das
and
jnp
repnz
push
mov
or
cmp
dec
pop
inc
or
dec
cmp
dec
push
adc
jo
jg
sti
inc
adc
dec
sbb
or
adc
push
xor
mov
lcall
lret
jp
frstor
push
les
test
xor
test
xchg
mov
stos
inc
sbb
and
jb
xor
imul
pop
cmpsb
sub
xlat
daa
cld
jp
xor
aad
je
fildl
jne
jg
cmc
inc
push
es
jne
repz
mov
inc
loopne
ds
jmp
cmp
jne
add
mov
jo
or
stos
xchg
mov
or
sbb
sbb
xor
mov
sbb
and
inc
fcmove
fwait
inc
jne
sub
lock
sbb
jae
movsb
nop
hlt
mov
sbb
push
dec
inc
sbb
xchg
arpl
ret
jge
test
stc
mov
scas
sbb
jecxz
adc
sub
test
xchg
xor
data16
and
or
data16
call
or
out
or
inc
nop
or
pop
jg
daa
jbe
mov
aas
fildll
sub
out
ret
inc
faddl
cs
cmp
mov
inc
inc
imul
and
leave
add
sub
mov
arpl
stos
es
inc
push
mov
dec
mov
xor
inc
out
adc
cmpsl
sbb
sbb
inc
fisttpl
hlt
push
and
lods
ss
aaa
ret
shrl
int
cmpsl
push
or
negb
loope
vmovaps
inc
fdivrl
add
cmp
sbb
lea
xorb
jb
popf
push
inc
stos
add
sbb
je
scas
dec
jo
pushf
arpl
inc
xchg
add
xchg
mov
push
insb
xchg
mov
adc
in
jmp
outsl
enter
cmp
je
mov
pop
daa
sub
add
test
shrl
fcmovb
inc
mov
push
insb
arpl
in
jne
cltd
nop
arpl
xor
clc
xchg
cmp
lock
dec
cmp
jne
mov
xor
into
push
sub
cmp
push
pop
je
adc
push
add
push
lock
xchg
or
xchg
and
mov
sbb
add
fldt
sbb
jg
xor
rcrl
imul
test
xor
out
push
fmuls
addl
outsb
sub
mov
inc
in
xor
fsubs
sub
pusha
pop
adc
mov
xor
mov
add
or
and
cmp
mov
shll
xlat
xor
add
and
sub
sbb
loopne
shlb
xor
loopne
hlt
and
and
imul
stc
push
inc
cmpl
insl
xor
js
ljmp
xchg
jl
sahf
sub
les
loope
arpl
inc
xor
xor
test
pop
in
sbb
cmp
ret
sbb
call
add
into
mov
lock
iret
push
or
or
pop
jge
sub
xor
test
cs
and
push
mov
in
jmp
inc
rcl
xor
xchg
or
pop
add
aad
adc
cltd
ljmp
shl
mov
shlb
test
lea
push
iret
mov
xchg
jne
inc
into
mov
add
in
in
xchg
and
mov
lea
cmp
push
inc
hlt
mov
aas
movsb
sbb
ret
out
add
test
sub
inc
inc
into
inc
test
sub
or
add
push
psubsb
cwtl
push
mov
sbb
sub
scas
jbe
xchg
lock
lock
imul
or
stos
mov
out
sub
gs
inc
xchg
out
jns
cmp
sbb
popa
popa
mov
out
or
gs
push
or
fdivs
bound
loopne
xor
inc
inc
and
sbb
pop
je
dec
ja
mov
test
pop
inc
mov
xchg
clc
jb
sub
jge
sub
xchg
addb
xor
mov
inc
xchg
arpl
pop
rcrb
mov
subl
add
loop
or
inc
iret
xchg
and
test
xchg
cmp
add
fistl
or
adc
daa
sbb
xorl
pop
mov
or
cmpps
or
stos
push
mov
movsb
inc
pop
sub
mov
cs
jl
and
es
cmp
push
mov
or
movsb
sub
repz
mov
or
subb
jo
add
mov
test
dec
es
xor
or
add
not
xchg
faddl
adc
ja
or
insl
pop
imul
daa
xor
fmull
or
cmp
push
add
cmpsb
push
or
ret
jo
testl
imul
and
adc
int
scas
push
push
roll
pop
in
movsl
add
cmpsb
pop
lock
mov
xchg
fadd
rclb
inc
adc
xor
pop
enter
les
dec
or
add
and
bound
adc
sti
imul
pop
jg
movzwl
pop
dec
sub
scas
rcll
fildl
out
lds
mov
push
sbb
cmp
push
dec
or
jo
jecxz
and
mov
adc
xor
adc
add
add
cmp
add
outsb
and
movb
push
lcall
sub
mov
dec
xchg
lock
ret
inc
sub
test
push
jle
inc
or
inc
leave
xlat
jbe
loope
aaa
pop
and
fnstenv
test
dec
imul
out
mov
mov
sbb
and
mov
adc
mov
jmp
mov
aad
sbb
rcrb
mov
add
jo
jnp
pop
ss
dec
into
push
inc
push
pop
lods
sbb
adc
sbb
sbb
pop
xchg
insb
and
gs
sub
int
loope
shrl
dec
jp
gs
pop
or
mov
int
add
sub
test
sbb
inc
adc
cmp
adc
jns
ljmp
movl
movsl
imul
rorl
pusha
call
push
mov
in
dec
lock
or
adc
pop
sbb
dec
or
adc
shr
add
pop
in
sub
das
pop
inc
pop
cmp
sahf
or
sbb
push
ret
aaa
pop
mov
add
loope
mov
mov
xchg
enter
subl
loopne
cli
andb
xor
stc
adc
sub
je
sbb
add
or
push
decb
je
jmp
mov
xor
ds
xor
in
sub
outsl
test
or
pop
insb
push
jmp
mov
hlt
rorb
sbb
add
push
and
or
cmp
cmpsl
or
add
or
mov
das
sbb
lds
cmpsl
test
dec
out
add
clc
or
xchg
icebp
mov
sahf
sub
xor
out
add
jp
movsl
push
dec
xor
push
jne
lds
and
mov
and
ljmp
cmp
jne
add
jp
jae
sbb
xchg
shlb
test
push
mov
js
xchg
sbb
or
scas
je
xchg
movl
xchg
lret
dec
or
scas
hlt
ds
sbb
cmp
push
add
xchg
ja
jae
lret
and
sub
or
xchg
jle
in
mov
enter
imul
insb
push
inc
push
pop
mov
iret
xchg
fcmovnu
push
dec
cmp
mov
dec
jle
dec
adc
mov
lock
dec
add
jo
cmp
xor
mov
adc
xor
dec
scas
pop
add
mov
or
test
and
sub
inc
ss
adc
add
dec
movb
pop
xor
push
mov
xor
and
mov
xchg
xchg
adc
mov
adc
rolb
hlt
adc
push
insl
loope
xchg
insl
jne
adc
or
or
fcmovb
test
repz
push
push
mov
mov
mov
ljmp
lock
pushf
sbb
jno
int3
shrb
add
inc
xor
pop
lods
add
addr16
ret
push
add
les
mov
jno
dec
aas
arpl
mov
mov
rcrl
add
lods
stos
jle
inc
jo
in
ret
ret
inc
and
iret
inc
stos
fistps
ret
pop
mov
lea
mov
out
adcl
in
mov
or
inc
add
lock
mov
mov
mov
gs
dec
push
jnp
ss
dec
push
xor
les
insb
bound
push
leave
daa
mov
cltd
les
cwtl
gs
xlat
mov
xor
xor
ret
mov
decb
or
repz
add
push
popf
rorb
fsubs
fdivrs
ljmp
or
fistps
adc
rcr
jp
dec
mov
lcall
repz
sahf
mov
insb
xor
orl
and
mov
stos
mov
les
mov
mov
iret
or
inc
cmc
shlb
mov
push
sub
daa
fwait
insb
add
ss
push
call
cltd
sub
push
sbb
sar
mov
test
add
test
lods
or
clc
push
aad
or
and
xchg
mov
sbb
or
mov
pop
rcll
pop
add
pop
and
sub
lock
add
mov
adc
xor
push
dec
or
sbb
dec
ljmp
xor
pop
test
sub
mov
cmc
and
push
sbb
adc
sbb
fistps
push
lock
outsb
add
or
mull
inc
dec
or
lds
push
pop
jo
mov
movzbl
xchg
xor
mov
je
dec
movsb
pop
test
push
sub
add
test
scas
movsl
dec
mov
jbe
mov
jno
push
faddl
add
cmp
sbb
jne
test
xor
inc
lcall
loop
movsl
mov
jmp
in
insb
mov
aam
jmp
jbe
mov
pop
aaa
in
daa
stc
push
inc
push
push
data16
int3
jbe
xchg
popa
std
cmp
mov
add
movsl
xchg
xor
xchg
or
pop
dec
dec
decb
jge
sbb
or
inc
movsl
sbbl
push
pusha
lods
jae
loope
cmpsb
add
in
sarl
es
cmp
inc
dec
mov
inc
lret
lcall
xchg
lock
fcomps
sbb
mov
orl
adc
adc
push
dec
and
pop
fs
mov
cmp
fsubrs
xchg
adc
and
mov
cmp
mov
cmpl
in
add
shlb
icebp
mov
stos
test
and
jnp
subl
push
pusha
roll
popa
bound
xchg
fadd
popf
data16
loopne
mov
inc
adc
mov
push
into
push
cltd
nop
mov
pop
mov
cmp
or
movsl
sub
mov
mov
ret
push
jle
inc
adc
por
pop
and
or
repnz
movsl
mov
xor
sub
leave
rclb
pop
mov
xchg
sbb
mov
sub
mov
lock
fmuls
test
or
adc
adcl
or
pop
or
inc
inc
mov
or
dec
ret
cmp
fdivr
lods
loopne
arpl
sbb
pop
lea
cltd
sub
push
adc
dec
mov
lea
push
mov
in
int
loop
pop
xchg
xchg
mov
lea
daa
test
dec
adc
iret
or
in
movsl
add
test
inc
cmp
pop
les
dec
pop
sbb
xchg
sub
add
mov
or
push
jecxz
and
mov
aam
inc
lea
mov
mov
push
insb
xchg
icebp
and
shr
and
or
test
dec
aad
or
adc
push
cmpsl
enter
dec
dec
inc
xor
push
add
pop
dec
shl
mov
mov
sbb
xchg
arpl
repz
adc
inc
jb
test
xlat
mov
lahf
inc
test
and
js
adc
jb
mov
test
arpl
stc
xor
test
dec
inc
in
cmp
rcl
lods
addr16
das
and
orb
jle
icebp
mov
stc
cmp
cmpl
sbb
mov
nop
push
mov
xchg
dec
inc
loop
loopne
inc
and
sub
fdivs
pop
mov
insb
mulb
push
cmp
nop
mov
roll
mov
dec
mov
inc
mov
mov
or
aam
out
add
xchg
fnstcw
test
add
test
cwtl
clc
ja
ljmp
adc
lea
out
clc
jmp
aad
mov
jecxz
push
imul
push
fucomip
sbb
lret
jl
jecxz
jl
or
inc
out
jmp
addb
push
xchg
fs
rclb
lret
lea
and
xor
and
mov
sbb
inc
jmp
jmp
or
imul
or
not
call
clc
lea
loop
mov
mov
add
push
lds
pop
add
xchg
inc
fbld
mov
rcr
cmp
jmp
dec
cmpsl
ja
outsb
sub
xchg
push
and
push
adc
inc
les
add
push
sub
mov
dec
fbld
jl
inc
push
dec
in
ja
mov
fnstenv
adc
lods
push
jb
jg
imul
jecxz
daa
cmpsl
mov
push
or
cmpsl
sub
xor
pop
or
sub
inc
ss
mov
or
fstpt
loop
mov
or
ss
inc
push
inc
ret
jne
test
adc
imul
out
fsubl
adc
xchg
sbb
jbe
adc
shr
or
nop
cmpsl
xor
inc
or
rol
test
sbb
or
dec
push
in
daa
and
cltd
test
mov
loopne
and
mov
lock
and
push
cmpsl
mov
inc
and
or
cs
push
in
stos
rorb
mov
jle
jns
push
push
in
push
jnp
mov
push
xor
mov
inc
inc
add
pop
jns
adc
sbb
pop
jne
mov
scas
pop
sub
push
sbb
or
sub
cmp
sbb
stc
lret
pop
ss
hlt
mov
or
pop
adc
fsubs
das
call
test
add
jo
sbb
or
xor
mov
faddl
popf
inc
dec
adc
cltd
dec
js
jbe
test
or
adc
arpl
and
add
decl
lods
xchg
push
mov
mov
mov
test
and
xor
and
jo
xchg
dec
or
pop
nop
mov
push
pop
fwait
mov
sub
lea
pop
cmc
jmp
xchg
xchg
ret
lods
sub
add
imul
and
pushf
pop
hlt
mov
mov
add
es
jo
cmc
inc
jl
add
mov
insl
sbb
rorb
fistpl
xor
daa
adc
add
push
sahf
adc
mov
popf
pop
sbb
fmuls
jae
aam
sub
sbb
push
test
lret
add
rorl
lock
sub
and
dec
add
loope
movzwl
loopne
repz
in
fsubs
nop
movsl
ds
ret
add
ja
or
mov
in
xchg
or
lods
pop
aam
stos
push
cmc
xor
sbb
lods
dec
inc
inc
imulb
jmp
insl
insl
cmp
pop
jmp
daa
pop
sub
test
push
mov
aas
mov
leave
or
adc
rclb
cld
cmp
pusha
or
int3
xchg
nop
fwait
inc
xchg
mov
jno
mov
add
sub
movsb
adc
popl
loop
out
ret
cmp
sbb
xchg
and
pop
sub
add
pusha
adc
jno
jle
fnstcw
xlat
inc
pushf
push
shlb
cmpsl
add
xor
sub
cltd
push
pop
fs
mov
mov
cmpsl
push
sarb
inc
sbb
daa
push
jmp
xor
pop
xchg
pop
push
mov
sbb
mov
test
mov
in
call
test
mov
inc
push
daa
ds
stos
mov
push
adc
and
mov
push
add
insb
mov
push
push
adcl
mov
stos
pop
mov
andb
mov
mov
in
lods
je
sti
loop
loopne
xorb
cmp
jnp
rcl
cmp
mov
inc
xchg
and
mov
bound
sbb
jns
js
scas
sarb
inc
fisubl
or
cmp
sub
xchg
add
push
ja
push
mov
adc
cmpsl
scas
movsl
loope
sbb
pop
adc
pop
or
push
and
ss
ret
outsb
xchg
test
and
es
push
mov
mov
pop
or
fcomps
popf
scas
lods
pmuludq
lock
add
imul
fcompl
dec
into
push
mov
mov
pop
mov
sbb
fs
xor
add
push
push
in
cmp
cli
inc
cmp
and
xchg
xchg
sub
rcrl
cmpsl
nop
stc
inc
les
cmp
and
incb
outsl
push
pop
push
sbb
inc
cmp
jb
sbb
sbb
aam
sub
lea
aas
or
insb
push
add
inc
and
ficomps
adc
mov
hlt
dec
sbb
xchg
cmp
push
ret
mov
and
jmp
push
cld
sub
add
out
sbb
arpl
ret
loop
insl
cmovo
pop
and
insb
add
dec
dec
test
mov
in
jne
pusha
imul
mov
sub
jg
xor
xchg
imul
xor
xor
mov
sbb
sbb
and
in
in
notb
in
mov
sub
scas
jb
adc
rolb
mov
rcrl
adc
in
pop
loopne
pop
hlt
hlt
push
pop
clc
push
int
rcrb
and
sbb
pushf
call
mov
fsubrl
dec
xor
fs
fidivs
adc
inc
cmp
mov
and
pop
int3
nop
or
sahf
and
mov
imul
mov
mov
int
cmp
adc
test
mov
cmpsb
push
leave
xchg
adc
outsb
push
cmpl
or
push
rolb
pop
xor
clc
or
mov
adc
aaa
cmpsl
mov
push
js
imul
inc
fs
push
iret
push
in
testb
or
mov
js
mov
push
push
out
sub
or
dec
push
pusha
or
dec
and
xchg
rclb
mov
ret
or
xorl
jne
mov
mov
ljmp
add
and
or
or
sbbb
pop
imul
pusha
dec
or
push
adc
shrl
push
inc
movb
dec
dec
cmp
jno
xlat
lahf
mov
and
stos
xchg
sbb
mov
bound
cmp
push
dec
mov
add
cmpsl
mulb
mov
aas
pushl
fxch
dec
arpl
mov
sbb
push
pop
xor
fwait
lret
mov
sbb
jo
mov
andb
jg
or
add
movb
mov
and
push
adc
xchg
adc
and
or
test
lods
aad
inc
cwtd
and
dec
repnz
xor
dec
push
jmp
das
adc
pop
mov
ljmp
dec
push
adcb
jmp
cltd
or
fstpl
and
sbb
rolb
es
push
ljmp
adc
lods
mov
adc
lock
jge
sbb
adcb
add
mov
xor
sub
xor
lret
pop
and
push
popa
decb
jle
push
pop
push
jle
mov
imul
cli
add
mov
rcrb
insb
xchg
xchg
jne
and
sbb
push
push
jmp
das
mov
mov
sbb
shr
sub
pop
push
adc
xor
dec
sbb
lea
and
insb
testl
pop
daa
popf
adc
xor
inc
dec
out
xchg
shll
and
add
pop
mov
pop
push
jl
fstps
xor
add
push
es
fwait
rcl
xor
lock
loop
scas
mov
or
fs
inc
das
das
adc
jg
in
adc
loopne
rcll
dec
sbb
movsl
cltd
xor
call
jne
dec
xchg
sub
sub
sub
pusha
sub
scas
xchg
inc
lock
insl
adc
add
pusha
add
adc
jne
jae
test
movl
push
leave
ret
cs
ret
dec
sbb
out
shll
push
adc
add
das
dec
push
push
dec
inc
pop
cmpsl
xchg
inc
sahf
dec
jns
mov
mov
daa
and
fs
pusha
mov
and
inc
in
daa
adc
test
or
cltd
fs
enter
xchg
push
aam
jb
jo
jne
jnp
mov
mov
or
push
push
mov
mov
pusha
jo
pop
mov
mov
or
imul
push
lret
and
neg
xchg
fwait
xor
adc
push
rorb
sbb
sbb
mov
es
sub
scas
mov
fdivl
lds
ds
add
adc
lds
es
gs
ret
inc
adc
inc
outsb
jne
ds
popa
jns
addr16
sbb
jae
aam
sub
testb
add
and
enter
lock
pusha
pop
mov
mov
pusha
inc
in
shl
fs
mov
pushf
ret
push
push
cmp
and
mov
sbb
jb
dec
rolb
out
enter
popf
push
jb
add
mov
cs
or
dec
push
std
outsl
pop
call
cmp
cld
mov
pop
rcll
mov
mov
cmp
inc
push
test
insl
add
in
ud2
xor
insb
inc
imul
dec
sbb
and
push
imul
lock
movlps
inc
and
xor
outsb
xor
out
add
unpckhps
cmp
jo
imul
jnp
add
push
mov
or
mov
shrb
add
xchg
lods
incb
mov
xor
in
outsb
arpl
adc
mov
jl
mov
dec
push
xchg
test
fs
and
punpckhbw
imul
dec
fidivs
xor
leave
dec
lret
sbb
leave
fs
pusha
mov
jmp
lods
stc
pop
rolb
imul
push
loope
jmp
push
imul
test
cmpsb
aaa
aas
pop
ja
mov
sub
mov
sub
mov
sbb
cmpsl
add
mov
xor
or
add
mov
out
or
lcall
sub
and
dec
sub
sub
nop
out
add
clc
clc
loopne
xchg
lar
ljmp
xchg
shl
mov
push
test
bound
add
jns
jecxz
shl
xchg
adc
pop
or
inc
iret
int3
inc
ret
push
mov
pmaddwd
inc
sahf
leave
pop
mov
pop
or
push
cmpl
test
mov
int
pop
mov
fstps
adc
mov
pop
movl
shlb
cmp
les
iret
daa
mov
push
test
sbb
adc
inc
loope
cs
in
dec
add
lock
aas
les
adc
mov
pop
insb
jno
pop
adc
xor
mov
jmp
es
push
les
lcall
or
roll
sbb
add
mov
lods
adc
pop
jg
and
xchg
xchg
prefetcht2
mov
data16
sbb
xchg
sub
sub
cmpsl
in
mov
inc
pop
and
addl
xor
mov
test
cmp
push
xor
or
test
inc
and
andl
hlt
xchg
inc
or
inc
hlt
push
imul
mov
push
je
mov
adc
jne
push
add
fidivrs
insb
jle
adc
inc
dec
sub
pushf
shll
rcrl
xlat
sub
xor
sti
and
adc
sub
sbb
je
and
push
push
popa
add
mov
ror
roll
shrb
imul
or
adc
add
adc
es
out
outsl
xor
inc
testl
aas
adc
sbb
or
ret
mov
ror
xchg
je
sub
xchg
jne
es
and
push
fs
mov
jge
lock
addl
sbb
sub
and
mov
push
fstl
icebp
cmp
add
rcl
add
loopne
mov
add
cmp
adc
inc
add
dec
loope
add
test
mov
lods
imul
test
pop
fdivl
add
add
pushf
mov
push
and
or
push
cmp
sbb
push
mov
dec
add
and
aam
xor
das
add
les
cmpb
and
xchg
sahf
mov
shr
pop
mov
dec
in
ret
sarl
fadd
cmp
test
dec
push
xor
inc
dec
lea
in
out
lock
lcall
mov
cltd
outsl
lock
loopne
jbe
ret
inc
jmp
push
cwtl
inc
dec
sbb
cmp
push
cmpsl
gs
inc
mov
jnp
nop
mov
add
jns
imul
xor
lret
sbb
add
and
inc
inc
adc
jne
js
sub
inc
inc
scas
jmp
addr16
fs
inc
add
lock
cmpsl
fcomps
in
cmp
leave
nop
mov
call
movsl
inc
jmp
cld
loope
mov
lret
push
pop
nop
jmp
sub
or
dec
inc
les
xlat
roll
outsl
fldcw
xchg
xchg
lret
inc
and
and
xchg
add
cmp
cmp
xlat
push
dec
dec
push
call
leave
imul
cmp
or
xor
pop
in
roll
lret
dec
pop
test
clc
xorb
add
mov
pop
dec
pusha
jmp
push
ret
xor
xchg
sub
or
adc
aaa
add
movsl
sahf
cmp
cld
mov
out
fwait
and
dec
je
or
mov
movsl
xchg
negb
daa
mov
les
adc
jl
loope
push
movb
lock
sub
dec
int3
xchg
add
xchg
pop
out
leave
ret
jbe
ret
mov
dec
movsb
pop
ds
pop
adc
or
sbb
or
pop
loope
adc
adc
and
adc
sbb
leave
adc
pusha
pop
les
jle
inc
test
mov
dec
adc
mov
test
rcrb
mull
je
cmp
stos
repz
outsb
aam
lcall
adc
jl
test
fidivl
pop
addr16
int
mov
call
sub
and
es
xchg
cmp
cmp
mov
cmp
mov
dec
mov
and
test
or
inc
sub
push
int
nop
nop
pusha
and
pop
cltd
xchg
pop
mov
and
cwtl
test
xor
jae
test
xor
mov
inc
es
movsb
shlb
test
or
mov
test
arpl
arpl
push
sub
testl
push
inc
es
test
pop
inc
or
and
ret
into
add
push
inc
outsb
xchg
and
cmp
ja
mov
mov
addb
xorb
jg
int3
sbb
push
fistps
dec
lods
shlb
into
add
rcll
nop
setp
add
sbb
mov
jnp
xchg
push
cs
and
sbb
leave
js
iret
repz
dec
faddl
rorb
test
add
movb
mov
nop
xor
push
mov
add
daa
mov
push
fcoml
push
into
aam
aas
or
les
sub
and
rcrb
cmp
add
shlb
in
rolb
sbb
daa
rcl
and
popa
jle
decl
mov
test
adc
push
add
addb
sbb
in
in
rcl
fsub
in
in
loopne
call
in
lock
clc
xchg
xchg
fucomi
cld
filds
or
xchg
xchg
or
adc
xchg
xchg
xchg
xchg
sbb
and
xchg
xchg
xchg
xchg
sub
xor
xchg
xchg
xchg
xchg
cmp
inc
dec
xchg
xchg
xchg
xchg
dec
push
push
pop
xchg
xchg
xchg
xchg
pop
pusha
fs
insb
jo
js
adc
aam
push
sub
or
lahf
aaa
mov
out
xlat
fists
mov
cmp
int
sub
add
xchg
or
add
adc
subl
sbb
enter
xor
xor
fadds
repnz
pusha
fdivl
iret
cmpl
enter
in
ror
cmpl
push
fs
clc
flds
and
add
sbb
cmp
sbb
jae
dec
or
cmp
or
adc
enter
mov
cmpl
enter
and
and
cmp
repnz
loopne
clc
cmp
or
jns
in
cmp
nop
out
sahf
cmp
inc
pop
jns
in
inc
push
sahf
add
push
in
nop
pushf
push
lods
pop
inc
sahf
add
pop
enter
out
in
fildl
iret
cmpl
sbb
jae
jo
je
cmp
bnd
in
cmc
sarl
inc
pushl
out
popf
and
pusha
mov
jne
lods
gs
gs
dec
loopne
loopne
sbb
insb
outsl
xchg
adc
fdivs
and
jne
enter
jnp
movsl
mov
inc
fcoml
add
add
fidivrl
push
rolb
lods
pushf
daa
pop
in
adc
add
jbe
into
popa
mov
jae
pop
cmp
mov
fs
xchg
xorb
dec
jae
jnp
mov
fnsave
cs
cmp
mov
jo
inc
inc
mov
insl
pop
sub
movsl
push
mov
pop
and
adc
imul
push
cwtl
xor
rcrl
adc
test
mov
popw
mov
pop
dec
xor
add
cmpsl
fchs
outsb
add
xor
in
push
idivl
in
ss
pop
xor
and
insl
add
pusha
mov
daa
push
jnp
dec
sbb
rcll
or
insb
inc
bound
and
jno
inc
das
mov
jmp
fldcw
fs
jg
sub
and
addr16
push
lret
xchg
shrb
or
movsl
fstpl
out
inc
imul
nop
sbbb
push
pop
pop
rol
inc
outsl
arpl
xor
adc
and
add
outsl
pop
repz
jp
sbb
push
push
push
insl
add
dec
out
mov
cmp
cmc
faddl
xorb
popa
pop
ret
xchg
push
add
jg
daa
lret
imul
jo
dec
test
jae
sbb
and
rcrl
pop
sbb
and
into
mov
test
and
xchg
pop
xor
pop
mov
xor
insl
add
push
daa
frstor
dec
push
push
inc
add
imul
in
push
sub
movsb
push
push
push
imul
mov
sbb
int3
or
in
faddl
pop
jmp
mov
sbb
and
inc
cmpsb
test
inc
jl
and
aam
and
mov
jle
mov
jle
cmp
push
sbb
testl
idivl
mov
inc
inc
add
movsb
xor
fisubrs
in
sub
jle
aam
jne
jge
js
lods
in
or
pop
add
loopne
or
xor
aas
ret
adcb
inc
popf
mov
mov
push
mov
dec
xor
inc
push
fstps
sub
mov
pop
xor
push
pop
xchg
repnz
pusha
xchg
fistps
insb
sbb
pop
mov
pop
add
je
cmpsl
cmp
mov
pop
in
dec
or
and
or
fbld
lret
dec
cmp
or
stc
pop
cltd
xor
mov
shlb
or
or
cmp
cmp
enter
das
movups
and
adc
or
enter
sbb
enter
sbb
enter
sbb
or
add
and
add
or
enter
or
enter
or
enter
or
or
lock
icebp
inc
push
sbb
hlt
push
sbb
div
clc
sbb
stc
cli
sti
fs
push
cld
das
adc
call
mov
and
sbb
cmpsb
imul
shll
cmpsb
add
loopne
lock
shll
lods
fdivs
pushf
enter
dec
rol
mov
xor
jl
je
insb
cwtl
xor
shll
nop
pop
mov
dec
roll
dec
shll
sub
xor
shll
push
sbb
adc
xor
roll
cmp
cmpsb
imul
cmpsb
imul
movsl
imul
lock
loopne
dec
shll
enter
shll
mov
leave
loop
pushf
jne
insl
out
mov
inc
loop
iret
and
imul
xor
add
mov
cwtl
pusha
aam
cltd
adcb
push
xchg
pop
repnz
and
mov
stos
lock
or
lods
xchg
inc
daa
xor
pop
repnz
lock
data16
push
fsubl
jns
mov
or
inc
jge
pop
lods
push
fimull
addb
daa
mov
jg
and
push
push
mov
xchg
xchg
fimull
mov
mov
repnz
jmp
jmp
and
add
add
enter
sbb
sub
pop
xor
in
inc
das
adc
pop
adc
enter
inc
or
js
andb
mov
dec
push
and
mov
in
mov
sub
or
inc
lods
mov
repnz
in
cmpsb
in
or
in
in
fisubs
or
add
lea
roll
mov
adc
inc
pop
call
xchg
test
ds
adc
inc
pop
fisubrs
or
insb
xor
in
xchg
push
mov
pavgb
out
outsl
sub
push
jecxz
aaa
cmpsl
add
add
shlb
add
or
insb
popf
and
and
cld
pop
dec
je
adc
adc
sbb
mov
inc
inc
mov
push
jno
cmp
clc
add
daa
jmp
inc
minps
and
fwait
add
jmp
add
and
xchg
or
test
scas
mov
or
aas
int
inc
or
flds
or
mov
inc
rcrb
xor
and
pop
jge
push
divps
dec
push
mov
pop
imul
cwtl
cmp
gs
movb
sub
add
les
cmp
add
or
popa
bound
add
or
fwait
cmp
push
bound
pop
ss
mov
push
das
cmp
dec
add
cwtl
pop
jmp
sub
push
inc
sub
mov
inc
sub
jne
cs
lods
add
ds
push
pop
sub
inc
push
pop
xchg
sarl
rcrb
xchg
cmp
jmp
insl
adc
jp
and
addr16
xchg
inc
les
jp
lahf
mov
sbb
jbe
jmp
inc
lods
cmp
xchg
xchg
xlat
sub
xor
sub
mov
or
fwait
jp
or
xchg
sbb
xchg
mov
lock
dec
sbb
mov
leave
lock
and
mov
inc
packssdw
sub
insb
dec
outsb
mov
jnp
call
pop
adc
int3
inc
jo
or
enter
andl
int3
inc
loope
insb
or
add
mov
adc
push
test
sub
fisttpll
ret
jmp
mov
adc
inc
insb
repz
lock
dec
arpl
ret
mov
outsb
push
scas
jecxz
cmpsl
jne
jg
mull
in
imul
test
or
sbb
sbb
add
addr16
movsb
cmp
pushf
popf
adc
pusha
jp
pop
test
jns
and
add
shrb
mov
aam
lods
sbbb
jno
sub
sub
sarb
hlt
vcvttsd2si
dec
faddl
fsub
daa
push
hlt
push
mov
and
cli
aam
xor
mov
xchg
bound
jmp
inc
dec
hlt
test
and
pop
jmp
out
lds
inc
add
add
add
xor
sub
movsl
push
rol
pop
xor
push
ljmp
adcb
outsl
aas
rcrb
inc
pusha
jge
jbe
jp
fildl
sbb
test
ljmp
in
test
jle
das
cmp
sbb
rcll
mov
mov
pop
test
mov
cmp
or
les
xchg
and
push
icebp
mov
xchg
out
inc
add
push
js
add
add
sbb
pop
aaa
fisubrl
ljmp
int3
mov
add
mov
data16
adcb
dec
pop
xchg
nop
shr
pop
push
leave
rclb
in
shrb
add
rolb
pop
dec
jnp
mov
ret
in
mov
or
sub
inc
movsb
xor
int
dec
dec
or
out
es
cmp
int3
ret
shlb
xchg
mull
pop
into
loope
out
xabort
adc
in
clc
jp
rolb
cmp
adc
mov
cmpsl
shl
add
int
lea
xchg
aas
out
test
xchg
sub
test
dec
mov
cmp
xor
iret
or
pusha
notb
aaa
dec
cmp
das
cltd
lock
inc
mov
inc
add
dec
imul
fsts
lahf
lock
xor
out
lock
jne
lods
imul
sbb
adc
clc
rorb
adc
push
cmp
hlt
scas
lock
add
sbb
pop
lock
and
repnz
cs
mov
nop
icebp
adc
sub
push
jnp
sub
cmp
add
mov
inc
test
test
shlb
push
jb
je
test
xchg
sbb
jo
out
in
icebp
add
push
push
movsl
jo
ja
aaa
cmp
js
rorl
bound
inc
sub
daa
inc
fidivs
in
outsl
icebp
stos
dec
pop
xor
jne
icebp
or
fcompl
roll
mov
adc
int3
inc
or
push
adc
icebp
mov
lea
xchg
iret
add
or
adc
negb
inc
aaa
sbb
faddl
loopne
test
imul
mov
sub
lahf
sarb
and
and
xor
jl
cmp
and
imul
arpl
add
in
ss
movl
arpl
insb
push
inc
pop
imul
add
insl
inc
outsl
pop
in
insl
out
lods
arpl
pop
daa
jo
jne
fidivl
jb
popa
or
lods
mov
add
data16
daa
mov
sahf
popf
ja
imull
jo
addr16
fcmove
pop
jb
addr16
jnp
mov
push
mov
arpl
insb
jbe
mov
jg
sub
fwait
or
insb
das
je
cmpsl
add
jnp
bound
and
pop
fucom
push
push
jle
mov
mov
pop
je
jo
jb
arpl
ss
daa
jns
outsl
dec
pushw
das
iret
push
push
cmp
pop
ja
imulb
inc
aaa
insl
pop
prefetchnta
lock
mov
xor
rorb
loope
sub
push
lock
jp
pop
add
addb
sti
pop
xlat
hlt
in
dec
adc
push
loope
jl
cltd
push
cmpb
daa
out
xor
xor
jl
or
and
push
js
adc
fs
xchg
add
mov
dec
imul
cmpb
push
pop
fisubrs
or
push
pop
rolb
sub
popf
outsb
push
ret
insb
insl
push
push
aas
mov
sbb
into
jbe
mov
test
mov
push
or
aaa
jne
iret
add
push
ret
jmp
add
adc
movsl
idivb
adc
xor
sbb
inc
in
or
add
xchg
mov
add
xor
sub
or
jno
and
lahf
fistpll
in
clc
inc
push
pop
adcl
leave
push
pop
add
lods
imul
mov
sub
xchg
popf
addr16
test
adc
nop
pop
adc
and
or
rolb
les
pop
fs
and
jl
cmp
add
test
add
cmp
out
lahf
add
add
pop
xchg
gs
push
pop
pop
or
or
or
or
or
lcall
adc
adc
cmpsb
imul
cmpsb
imul
mov
and
and
and
fyl2xp1
loopne
testl
fucomi
std
xor
rcrl
pop
xor
shll
xchg
cmpsl
pop
shll
cld
mov
roll
push
das
inc
push
bound
xor
jo
mov
shlb
rclb
popa
stc
jecxz
add
add
add
in
nop
addr16
add
pop
adc
push
sbb
or
jns
in
or
addr16
sahf
or
or
sbb
and
sub
sahf
add
sub
push
in
nop
xor
xor
inc
sahf
add
adc
in
nop
addr16
add
pop
dec
sbb
addr16
sbb
add
in
sbb
imul
pusha
cmp
repz
sbb
popa
imul
repz
and
and
repz
fs
and
and
push
cmc
cmp
and
and
xor
push
or
or
gs
add
insb
fadd
inc
rolb
add
fistpll
fcomp
xor
bnd
add
fdivrs
je
dec
imul
push
jecxz
mov
bound
and
outsl
js
lock
inc
call
or
pop
fistps
mov
fsubrs
in
movsb
xchg
ja
xlat
call
std
test
dec
mov
daa
lock
inc
ficompl
int3
mov
push
jbe
jae
leave
sbb
in
push
loopne
fwait
cmp
or
dec
pop
aam
dec
int3
xor
shlb
and
xchg
ret
test
push
push
xchg
pop
cmp
push
lods
push
enter
or
ret
mov
mov
jg
jne
xor
cmp
cs
sbb
mov
mov
pop
sti
in
sbb
hlt
nop
popf
cmp
dec
and
xchg
aaa
pop
mov
mov
pop
add
movsb
or
push
dec
add
add
in
add
dec
aad
cmp
mov
push
jo
and
dec
roll
adc
ss
lcall
pop
pop
and
test
or
outsb
jae
lods
icebp
sbb
xchg
jl
or
mov
adc
aad
scas
mov
movb
jns
test
iret
std
push
int3
xchg
sbb
and
pop
and
push
stc
push
jg
pop
loopne
inc
fidivrs
add
les
in
fadds
aas
dec
str
sbb
and
xchg
add
cmp
sbb
jle,pn
or
adc
push
test
cmpsb
imul
cmpsb
imul
cmpsb
imul
push
dec
fwait
cmpsb
mov
push
xor
incb
and
fs
mov
add
call
lods
cmpb
ja
add
bound
add
mov
xchg
cs
addr16
push
push
sub
shl
ret
daa
ds
adc
add
leave
dec
push
rolb
adc
lret
rolb
lea
sbb
cmp
cmp
mulb
mov
mov
xchg
lods
mull
sbb
clc
into
loopne
lcall
movsl
test
add
cmp
arpl
push
sbb
ja
or
lea
mov
dec
cmpsb
aam
adc
sbb
mov
pop
out
add
xchg
adc
lea
call
aam
dec
mov
add
adcb
mov
loop
xlat
cmp
cmc
add
jne
adc
cmp
add
push
push
push
lods
sbb
lods
xchg
push
add
add
daa
add
cmp
sbb
and
cmp
gs
inc
ds
adc
inc
clc
add
fs
jno,pn
cmpsb
ficompl
addb
dec
js
and
dec
nop
insb
sbb
and
adc
nop
xlat
rcl
add
dec
clc
push
nop
aad
add
jne
mov
sbb
std
push
mov
lahf
in
in
rorb
and
inc
xchg
jae
add
ret
pop
shlb
pop
gs
push
push
jae
mov
fdivs
pop
add
pusha
insb
cmp
add
pop
xor
stc
add
and
jecxz
mov
inc
sub
sub
and
sub
iret
div
imul
sbb
cmp
sub
sub
and
xor
cmc
and
das
sub
cmpb
ret
movb
add
add
rorl
adc
je
push
mov
cmpsl
mov
mov
cmp
xlat
adc
inc
insl
add
in
sbbb
xchg
shll
cmp
add
adc
mov
add
das
pop
js
push
dec
fldcw
push
lock
repnz
cld
sub
inc
mov
insb
mov
popf
add
scas
add
ljmp
jne
jo
inc
jmp
mov
call
ds
mov
nop
add
mov
clc
adc
sub
mov
insb
inc
fnop
inc
cwtl
xchg
or
cwtl
xchg
imul
imul
push
adc
jg
push
cmp
xlat
mov
jno
inc
pop
nop
scas
movsb
ja
jge
push
push
lret
add
inc
hlt
and
scas
adc
ficompl
or
and
add
xor
or
or
pop
imul
dec
sbb
inc
jnp
jne
add
pop
pushf
mov
cmp
lret
adc
pop
adc
mov
clc
push
and
cli
fbld
fildl
add
or
mov
or
cmpsl
push
mov
insb
fcomi
ret
fs
mov
push
test
or
xor
add
mov
xor
in
mov
push
pop
push
dec
dec
dec
inc
dec
and
adc
xchg
mov
xor
aaa
mov
in
or
or
pop
xchg
loopne
test
orb
pop
and
aam
fildl
or
xchg
mov
dec
mov
cmp
adc
mov
jne
sub
xchg
mov
sub
mov
jmp
cmp
push
out
dec
push
sbb
or
push
add
jno
sbb
lock
xor
jnp
js
ss
xor
or
pop
je
jnp
inc
les
adc
pop
mov
mov
lcall
and
push
sbb
adcb
je
adc
or
inc
adc
movsb
xor
addr16
and
addb
add
jmp
nop
imul
sbb
xchg
cmp
inc
adc
mov
cmpsb
mov
bound
mov
mov
sbb
decl
testl
sub
inc
mov
add
je
adc
or
pop
rcrb
mov
pop
pop
repnz
add
sub
jle
pop
jle
subl
pushf
adc
dec
mov
or
adc
aaa
fsubr
or
sub
add
jo
sbb
cmp
push
sub
mov
jb
int
inc
out
and
das
movsb
call
push
push
add
sub
or
adc
add
sub
mov
popf
pop
or
cs
jae
outsb
adc
cmp
lahf
xchg
aam
lea
dec
pop
nop
pop
adc
add
insb
xor
xor
lcall
add
test
das
in
call
push
push
cs
mov
add
or
adc
mov
test
or
push
push
sbb
and
aaa
jl
adc
in
or
cmp
cld
mov
xor
xor
rolb
cs
cmp
adc
popw
fidivs
cmp
add
push
push
js
iret
or
enter
xchg
inc
or
xor
xor
xor
and
je
push
jg
jns
lock
or
xchg
mov
adc
xchg
xor
push
or
xlat
cld
mov
in
xor
xchg
cwtl
push
xchg
pusha
rcrl
push
dec
push
pusha
orb
push
lds
sbb
sub
xor
inc
push
nop
xchg
daa
inc
add
nop
sbb
repnz
xchg
cvttps2pi
push
pop
sbb
push
enter
pop
das
test
push
aaa
xchg
test
sbb
nop
lret
mov
sub
inc
adc
ud0
and
sbb
add
lods
and
aas
pop
add
add
add
mov
stc
das
aas
dec
aam
add
hlt
dec
bndldx
xor
push
jl
dec
mov
test
lcallw
xor
inc
push
and
imul
es
int3
push
rclb
je
in
sbb
add
mov
push
adc
push
cmpsb
rolb
mov
add
pop
push
insl
bound
xchg
xchg
xchg
bound
inc
dec
jecxz
xchg
loop
add
test
mov
jns
or
jne
add
inc
jne
stc
sub
push
jmp
faddl
or
repz
jae
inc
adcb
jo
decb
jbe
or
adc
pushf
adc
cmovnp
cmpsb
cmp
cld
das
and
imul
nop
mov
pop
or
push
rcrl
xchg
filds
adc
outsl
jnp
leave
mov
mov
push
add
test
mov
addb
push
or
jae
js
enter
test
je
shlb
loope
mov
adc
cmpsl
lret
shlb
jns
pop
inc
and
push
sbb
inc
loopne
out
aaa
pop
mov
adc
dec
fwait
shlb
mov
xor
add
add
lds
test
sub
das
or
nop
mov
sarb
inc
or
enter
push
or
xor
out
push
mov
add
fs
fldcw
adc
lahf
and
ja
sbb
or
mov
inc
outsl
xor
dec
push
mov
mov
inc
add
popa
mov
adc
sub
add
repnz
pop
mov
out
nop
or
xchg
xchg
fldt
testl
or
adc
pop
mov
dec
add
ss
loope
insb
push
iret
mov
imul
push
push
jb
sbb
outsl
jo
push
ja
mov
xchg
mov
in
push
rcll
fsub
pop
iret
add
sub
push
or
xorb
push
adc
jl
pop
outsl
unpckhps
jb
jo
or
or
adc
inc
fwait
les
push
cmp
xlat
sub
lock
xorb
daa
in
push
sbb
sub
push
mov
addr16
stos
sbb
lea
jge
push
outsb
enter
inc
pop
icebp
das
jmp
cmpsb
add
or
sub
rcl
add
sbb
repnz
es
jb
fsubrl
or
xchg
jg
dec
or
or
push
jp
xor
sbb
and
xchg
sbb
bound
jp
das
movsb
arpl
add
pop
xchg
addb
cmpb
pop
fistpll
sahf
cltd
pop
addl
lea
and
or
mov
add
jno
mov
and
and
xchg
cmp
sbb
jbe
jo
pop
inc
gs
add
push
out
mov
out
testb
pop
enter
add
repnz
sbb
or
push
push
sbb
cltd
flds
jbe
mov
mov
push
sub
or
nop
lds
andnps
ja
pop
les
cmc
repz
mov
clc
or
roll
jo
mov
add
sbb
sbb
pop
sbb
add
shll
add
fbstp
repnz
dec
pop
pop
jp
outsl
sub
jp
mov
dec
push
dec
rcrb
lcall
pop
imul
out
jb
dec
enter
jo
pop
dec
adc
adc
mov
shlb
lret
in
push
dec
jg
xor
insb
jl
sbb
stc
pop
pop
sbb
push
inc
push
jo
in
mov
andps
dec
std
add
repz
add
add
movsb
pop
pop
les
add
pushl
mov
or
push
mov
mov
mov
mov
mov
mov
mov
mov
jmp
std
pushl
cmp
inc
mov
imul
in
in
or
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
lcall
fdivr
fcos
fdivr
xlat
call
call
call
call
call
call
call
dec
sti
into
dec
dec
dec
dec
repnz
leave
dec
jo
pop
jno
lcall
push
sub
in
lcall
dec
insb
mov
lcall
cld
jbe
or
xor
pop
ja
push
adc
jge
int
imul
les
imul
adc
in
mov
outsl
js
call
xchg
arpl
push
push
push
xchg
lcall
ss
push
lods
popa
test
mov
inc
and
cmp
xor
mov
fmuls
jno
add
jb
lods
insl
jae
dec
insb
cs
dec
fimuls
push
sub
imul
pop
insb
mov
sahf
hlt
addr16
dec
arpl
push
push
cwtl
leave
dec
mov
pop
sbb
push
push
pop
or
cmp
mov
mov
mov
push
hlt
xorb
cmp
push
sbb
mov
test
inc
pop
or
in
fwait
ds
fs
jle
rcr
add
mov
pop
push
lret
inc
add
jns
push
push
push
pop
divl
xchg
pop
adc
add
jo
out
add
and
mov
mov
cmpb
inc
nop
mov
push
in
ret
and
or
xor
lods
mov
push
xchg
cmpsb
jo
add
and
jle
jle
and
lds
pop
inc
iret
dec
sub
pop
adc
dec
inc
and
adc
push
lock
in
arpl
std
sbb
das
dec
cmp
jo
aad
insb
and
imul
push
and
inc
xor
inc
push
xchg
pushf
sbb
imul
int3
dec
xchg
js
sbbl
adc
arpl
orb
enter
cmp
rcrl
shlb
lcall
mov
xchg
fadds
pop
lods
mov
nop
lock
jo
cs
jb
jl
xchg
aam
test
lods
add
mov
insb
jl
jg
xor
imul
adc
add
adc
add
add
push
and
add
add
add
add
add
mov
push
fistpll
add
add
mov
outsl
cli
ret
cmp
add
sbb
add
add
aaa
mov
mov
mov
ljmp
lock
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
incl
and
mov
fistpll
add
push
mov
xor
cmp
or
call
inc
inc
inc
inc
inc
inc
inc
clc
das
jo
lret
mov
mov
loop
stc
rcrl
jl
das
fwait
mov
pushl
enter
shlb
fdivr
jae
lcall
cmpsb
adc
imul
mov
and
cld
mov
mov
insl
xor
mov
cmp
cld
push
shrb
xor
into
mov
mov
into
mov
cmpsb
imul
insb
adcb
xor
mov
lcall
push
xchg
int
rcrl
rclb
nop
ds
mov
lods
insl
cmpsb
mov
push
pusha
push
dec
mov
mov
cmpsb
imul
adc
out
cmpsb
mov
mov
imul
scas
mov
rolb
out
lcall
lods
movsb
test
stos
inc
stc
lcall
push
je
mov
mov
push
pop
data16
push
mov
fidivrl
sahf
int3
scas
dec
mov
movsl
ds
fistpl
mov
lahf
mov
scas
rorb
push
aad
push
inc
pop
and
push
add
outsl
and
pop
pusha
pop
pop
xchg
pop
ret
in
jb
or
pop
mov
repnz
jo
add
enter
cld
sub
orl
notb
js
add
and
push
mulb
xor
add
push
sbb
inc
and
and
pop
test
outsb
dec
push
repz
xlat
aad
xlat
xlat
pop
aam
add
int
add
adc
rcll
and
ljmp
ret
push
add
call
add
sub
inc
inc
ja
pop
repnz
pushf
jo
mov
mov
xor
xor
and
or
or
nop
add
sub
aaa
cmp
cmp
mov
add
sub
xor
lcall
lcall
push
adc
add
push
test
dec
pop
pop
data16
addb
sbb
xchg
out
cmp
and
cwtl
test
push
icebp
push
das
pause
cmc
xchg
cli
clc
rorb
fs
push
mov
lds
inc
sahf
sub
roll
sub
mov
and
out
pop
cld
xor
test
nop
or
push
aaa
sbb
pop
jmp
jno
sbb
pop
sarb
test
push
push
and
sbb
pop
lea
sub
push
sub
rcl
mov
or
xor
fisttpl
add
loope
call
fadds
rcpps
sbb
mov
pop
and
sbb
mov
adc
les
sub
sub
aaa
or
sbb
push
or
insl
les
ds
dec
dec
lock
lret
cmp
cmp
adc
fisttps
subl
sub
sub
sub
xchg
mov
dec
dec
cmp
or
push
or
inc
or
nop
nop
dec
enter
pop
daa
lods
test
pop
stc
orl
and
mov
cmpsl
in
xchg
daa
push
cmp
das
fmuls
push
inc
push
inc
mov
scas
loopne
push
jo
daa
or
clc
pop
and
inc
insb
popa
cwtl
pop
xchg
push
mov
dec
outsl
repnz
jbe
and
insb
imul
pop
inc
ss
mov
lret
mov
push
movb
pop
mov
lcall
cmp
test
pop
mov
mov
or
xlat
add
ss
and
cmpsl
jmp
xchg
pop
cmpsl
loop
and
xlat
add
in
bound
add
testl
or
and
mov
mov
ret
and
xchg
and
aad
mov
xor
ljmp
test
push
mov
add
pushf
push
out
sbb
mov
sbb
btr
sbb
repz
mov
mov
adc
scas
dec
incl
leave
mov
sub
in
mov
add
push
pusha
mov
cmp
xorl
and
sub
ret
clc
mov
sub
push
or
test
andb
mov
fsubrs
push
pop
jno
push
xchg
xchg
sub
add
push
jne
or
lock
mov
inc
ret
inc
sub
and
test
dec
aas
jno
nop
mov
sbb
test
gs
sbb
jl
push
and
dec
dec
jne
stc
jp
imul
push
cmp
cmp
in
adc
es
and
andl
ret
push
push
dec
mov
add
cmpb
pop
ja
or
sub
mov
adc
adc
sbb
and
and
dec
mov
lret
sub
sub
scas
test
adc
inc
inc
mov
mov
fistps
rcl
aaa
and
add
dec
nop
pusha
sbb
xchg
test
pop
ss
sub
sub
add
xor
cmp
aas
sbb
sub
pop
jle
ljmp
das
test
mov
push
dec
je
ja
mov
popa
xchg
nop
pusha
pop
push
add
sbb
xor
fisubl
nop
push
adc
jmp
mov
fiadds
and
pop
adc
pop
pop
xor
push
and
sub
les
xor
fcmovb
lds
push
xchg
pop
sub
cwtl
cmp
mov
xor
cmp
pop
out
pop
pop
les
jmp
lds
mov
xchg
add
inc
inc
dec
cltd
cltd
dec
inc
mulps
movsl
jne
xor
or
dec
bound
push
sbb
mov
pop
nop
and
cwtl
mov
cmp
rcrl
inc
lods
inc
sbb
gs
je
outsb
xchg
or
cli
outsl
imul
cmp
jecxz
add
pop
inc
mov
add
inc
negl
push
adc
imul
pop
adc
push
xor
iret
add
lock
mov
int3
inc
push
pop
jp
cs
and
imul
das
sbb
loopne
js
adc
push
in
scas
aas
pop
pop
int
xor
cmp
inc
pusha
call
push
sahf
ret
hlt
jae
mov
sub
add
hlt
mov
adc
mov
sbb
pop
adc
and
xor
dec
mov
push
push
xor
mov
push
lea
lea
sub
pop
imul
icebp
inc
adc
jp
sahf
pop
mov
mov
int
scas
test
enter
test
or
pop
in
test
cwtl
sub
push
test
outsb
xchg
cmp
fwait
xchg
or
jg
add
mov
pop
das
adcl
fs
dec
or
adc
cmpb
popa
rcl
xchg
xchg
inc
inc
pop
mov
push
rcl
add
mov
xlat
xchg
sub
test
add
adc
mov
mov
cmp
call
pop
mov
mov
pushl
add
stc
out
inc
lret
ja
sarl
jb
jne
movb
jmp
mov
xor
stc
sbb
add
das
xchg
mov
repnz
das
adc
inc
arpl
add
je
xchg
mov
add
sbb
test
mov
adc
es
cli
shlb
jl
push
inc
sub
adc
notl
aad
mov
repz
jo
jge
fnstsw
cmp
pop
cmpsl
lods
out
mov
je
ret
cmp
in
sub
test
mov
sub
ljmp
mov
lods
inc
cmp
sbb
add
xor
fists
xor
or
aam
sbb
xorl
cmp
les
pop
jge
inc
in
hlt
imul
in
je
mov
mov
sbb
popf
shll
fiaddl
sbb
add
insl
push
cs
mov
test
lea
movsl
mov
jns
sbb
mov
mov
pusha
cmp
push
out
push
or
pusha
jl
sub
mov
test
xor
subl
inc
or
adcb
sbb
jl
inc
das
sub
mov
movb
jae
cmpb
pop
xchg
mov
jno
push
or
mov
pop
xchg
sbb
jle
xor
fs
jle
inc
jno
cmp
dec
sar
sub
add
xorl
push
dec
in
mov
pop
nop
xchg
data16
lods
imul
call
sub
push
mov
push
cld
ljmp
sub
rcll
and
lock
dec
movsb
push
fcomps
xor
cmp
or
inc
jne
and
rclb
shlb
push
mov
subl
mov
fwait
sub
or
sbb
or
adc
lock
pop
shlb
call
push
push
push
or
add
pop
sbb
adc
xor
push
lcall
dec
xor
inc
jne
pop
push
fs
push
adc
gs
dec
ret
xchg
sub
je
push
addl
xchg
adc
jmp
push
test
sub
jmp
push
add
push
mov
mov
cmp
fsubrl
jmp
inc
cmpsl
add
fdivs
test
jb
mov
mulb
repnz
pop
or
es
call
ja
jb
mov
cmpl
xor
stos
rcrb
adc
ret
adc
sbbb
cmp
je
out
aas
test
and
loop
jbe
push
sbb
or
xchg
in
pop
xor
or
jne
xlat
pop
sub
shrl
sub
fstpl
jge
es
imul
aaa
mov
insl
push
push
or
enter
sbb
jo
pop
je
cmpsl
es
js
add
add
or
into
mov
pusha
fxch
lea
addr16
int3
je
inc
jmp
xchg
dec
jo
inc
add
cmp
jmp
dec
ljmp
mov
push
fidivrs
mov
sub
jecxz
mov
adc
pop
push
add
subl
inc
pop
data16
mov
mov
inc
lds
push
les
mov
notb
push
push
adc
or
rclb
mov
inc
jo
pop
inc
and
push
nop
hlt
adc
push
and
jle
mov
std
mov
orb
loope
dec
cmovno
xor
jbe
inc
and
mov
pop
pop
testl
test
cmpsb
mov
and
mov
add
adc
dec
out
jle
pop
dec
push
lock
cmp
nop
cld
cwtl
mov
sub
lea
xor
adc
xchg
xchg
jmp
push
jl
popa
mov
pop
xchg
adc
test
xor
push
addb
int3
xor
call
mov
pop
mov
xor
js
inc
inc
adc
xchg
ficoml
pop
add
push
in
push
pop
mov
in
lds
push
aam
push
lock
imul
sbb
mov
mov
jno
jo
jecxz
subl
js
or
stc
adc
and
add
and
inc
dec
daa
or
pop
jne
fcmovu
push
stc
fstpl
fwait
jmp
jp
jbe
inc
and
lret
cmp
mov
dec
adc
fsubrs
cli
imul
xor
insl
pop
sub
cmpsb
or
inc
rcll
fcmovbe
testb
jmp
pop
dec
adc
or
adc
outsl
jmp
sub
addl
fmul
add
andb
mov
adc
or
xchg
aaa
pop
dec
nop
push
sub
aas
jns
or
and
mov
add
movsl
sbb
mov
dec
cmc
jge
test
int3
push
lods
daa
jbe
outsl
fiaddl
and
add
xchg
popa
xchg
jecxz
sbb
push
inc
xor
jo
adc
adc
outsl
outsl
add
push
pop
cmpl
mov
imul
lret
inc
pop
js
clc
dec
jmp
add
test
mov
mov
into
mov
cwtl
push
call
pop
inc
out
push
dec
sub
add
inc
inc
add
xchg
flds
pop
jno
dec
push
mov
mov
or
andb
cmp
jne
or
dec
cmp
push
adc
push
mov
inc
or
int3
push
xlat
and
mov
dec
adc
jp
mov
sbb
adc
and
xchg
sub
inc
insb
aas
sahf
push
aaa
shl
push
add
push
or
mov
push
ljmp
sar
or
popa
mov
fwait
inc
fadds
lods
xchg
cmp
lahf
jge
inc
xor
adc
sbb
pusha
cwtl
jno
push
cltd
aam
and
in
xor
shlb
insb
aas
inc
subb
push
bound
adc
mov
jmp
and
cmp
aas
xchg
pop
je
hlt
lock
bound
mov
movsl
adc
fwait
cs
dec
mov
mov
pop
outsb
je
test
push
test
ret
adc
lds
push
cmp
sub
inc
and
arpl
mov
mov
mov
icebp
pop
je
or
jmp
insb
ffree
xchg
add
cmp
popa
cltd
pop
test
test
add
sbbb
push
sub
mov
jmp
iret
ficoms
adc
mov
xchg
ss
icebp
stos
mov
jno
add
and
mov
idiv
or
push
and
notb
movsl
jae
sbbl
mov
fbld
and
insb
or
imul
dec
adc
bound
je
dec
lret
add
jecxz
fwait
movsl
mov
iret
push
pop
repz
and
jecxz
imul
lds
mov
pop
daa
rorb
out
mov
add
mov
loope
inc
cmc
push
leave
add
inc
pop
and
lret
lcall
mov
mov
stos
or
movl
bound
bound
add
ja
or
push
dec
dec
pusha
mulb
add
or
dec
jp
push
dec
loopne
icebp
xor
pop
mov
xchg
aaa
dec
clc
add
inc
clc
mov
cld
inc
fsubs
aas
lock
aas
jnp
outsb
sbb
xor
inc
sub
jmp
jmp
xorb
sub
push
push
lahf
dec
cmpsl
cmp
pop
ja
add
scas
enter
and
pop
and
inc
sub
mov
shrb
sbb
pop
pop
dec
xlat
adc
jmp
gs
test
movsb
mov
or
call
jl
inc
add
push
pusha
popf
lret
sub
inc
push
rorl
adc
inc
jge
jl
cmp
jb
pop
sub
push
dec
je
dec
jmp
addr16
inc
sbb
sbb
roll
cmp
sahf
cs
aaa
cmp
mov
mov
pop
sbb
bound
pop
adc
daa
movsl
pop
pop
pop
or
andl
pusha
push
scas
cltd
pop
rorl
scas
jbe
scas
adc
pusha
adc
and
pop
xchg
test
or
adc
leave
mov
or
adc
out
xor
scas
sub
pushl
push
bound
add
dec
or
sub
leave
jbe
pop
adc
popf
jge
pushf
sub
ret
cmp
push
or
adc
adc
pop
pop
je
loopne
fists
sarl
je
cmp
or
cmpsb
inc
push
adc
or
les
sbb
mov
cmpsl
mov
cmp
dec
mov
sbb
push
inc
adc
adc
xchg
pop
out
lock
inc
mov
xlat
cmpb
cli
ljmp
cmp
rolb
inc
jle
out
pop
xor
inc
mov
int3
popf
dec
inc
xchg
dec
int3
pusha
push
outsl
adc
aaa
mov
ljmp
pop
pop
mov
mull
sub
out
aam
and
and
add
fsubrl
pushf
lods
add
pop
jo
or
imul
pop
stos
or
push
inc
xlat
or
js
inc
pop
arpl
data16
sbb
jle
mov
cmp
je
mov
addr16
and
push
mov
mov
mov
pop
and
lea
imul
mov
add
push
jnp
std
inc
mov
es
and
and
or
mov
push
sub
aas
jg
sub
add
cltd
xchg
xchg
nop
int
frstor
mov
or
inc
and
or
and
sub
jg
fstpt
pop
dec
jne
cmp
mov
sub
scas
cmp
inc
jo
xchg
cmp
andl
xor
cld
push
ret
adc
aas
call
lock
mov
pop
push
xlat
dec
mov
lea
leave
dec
xchg
fiadds
push
dec
push
cmp
fistpl
pop
add
mov
popa
sbb
rorb
call
repnz
je
add
movl
add
add
pop
pop
pop
cli
outsb
dec
jno
lcall
dec
jp
mov
add
orb
aas
push
add
ss
mov
push
mov
lods
or
or
mov
jecxz
add
push
aas
cmp
mov
mov
cmc
push
jnp
mov
mov
mov
into
sub
xor
and
adc
je
push
fiaddl
lcall
call
push
sbb
adc
ret
xor
and
idivl
es
dec
push
pop
mov
dec
add
pop
insl
xlat
imul
xor
cmp
fs
bswap
inc
jae
push
pop
jle
les
lds
push
aaa
push
cltd
mov
pop
mov
xor
adc
insb
ja
in
inc
jnp
movsb
fdivrs
push
mov
push
sub
push
aam
xor
jge
push
cld
adc
shrb
andl
orl
sahf
subl
push
pusha
or
inc
pop
in
mov
mov
mov
inc
jp
xor
lret
mov
push
adc
mov
arpl
das
xor
inc
pop
push
int
pop
or
sarb
enter
or
and
lret
push
xor
pop
push
mov
cli
adc
sbbl
clc
or
and
clc
add
push
stos
adc
int
xlat
or
push
arpl
cwtl
jp
icebp
call
jecxz
in
pop
or
sub
xchg
and
push
pop
cmpsl
mov
add
loopne,pt
std
and
jle
jne
ds
sub
fisubl
pop
and
clc
jne
sub
xchg
push
adc
clc
test
mov
loope
fs
jo
dec
aam
lahf
push
cmp
cmpl
arpl
mov
push
sti
or
cwtl
and
imul
pushf
xchg
jge
ret
ljmp
cs
loop
adc
and
out
and
and
pop
dec
hlt
cwtl
les
dec
inc
mov
into
xchg
test
outsl
repnz
les
out
out
adc
or
pop
pop
xor
dec
int
popf
jno
pop
inc
ja
mov
xchg
cmc
jnp
jne
adc
jne
and
push
xor
and
test
jns
inc
inc
mov
dec
sub
mov
and
push
stc
lret
scas
dec
pop
rcll
and
out
mov
cmpb
popa
test
popa
add
inc
cld
add
mov
lock
sahf
pop
sub
cmp
xchg
xchg
mov
xor
out
jae
ljmp
das
mov
push
jns
push
push
adc
clc
fcomps
sub
or
dec
mov
xchg
mov
dec
sub
pop
out
imul
cmp
and
inc
ficoms
xchg
jle
cmc
les
and
fucomi
inc
test
xor
pop
pop
testb
cmp
das
push
or
dec
xor
sub
or
rolb
dec
movsl
rolb
roll
mov
insb
inc
inc
lret
inc
dec
add
jnp
dec
dec
push
xchg
dec
add
pop
in
pusha
xchg
push
inc
or
cmp
push
in
in
outsb
mov
cmp
add
inc
sub
pop
sub
and
mov
sbb
mov
add
add
xchg
push
sub
dec
push
andl
loopne
cld
in
pop
cmp
clc
dec
and
mov
jecxz
inc
rcrb
bound
or
push
lock
inc
es
lret
jnp
push
cmp
mov
test
mov
adc
adc
xchg
xor
adc
push
test
insl
push
or
insb
jg
adc
jge
push
test
roll
adc
xchg
cmp
xor
les
dec
or
or
add
add
push
dec
cmp
dec
movsl
push
mov
ret
cmp
inc
cmpsb
inc
lock
adc
and
pop
je
ja
mov
mov
inc
xchg
dec
xchg
mov
or
out
enter
mov
sub
pop
cld
sbbb
xchg
mov
jbe
adc
pushf
dec
aaa
jb
hlt
pop
lret
push
lea
add
addl
pop
repnz
clc
test
push
or
or
jecxz
fiadds
push
or
jns
or
or
imul
push
adc
inc
loop
lea
es
add
push
je
sbb
dec
adcl
push
andb
add
fcoml
cmp
fists
cltd
and
jg
cmc
data16
aaa
pop
add
inc
int
and
push
mov
mov
dec
adc
popf
es
lret
mov
dec
bound
test
cmp
je
ja
lods
shlb
push
mov
dec
test
adc
aaa
push
call
cmpsl
outsb
inc
adc
inc
cmp
bound
pop
sbb
enter
sarb
push
out
mov
bound
jnp
sbb
adc
xchg
sbb
jnp
adc
insl
cwtl
cltd
add
ret
mov
out
inc
fwait
dec
in
or
out
sbb
daa
or
adc
sub
mov
push
test
loopne
in
and
or
sub
ret
and
inc
xchg
sbb
cld
add
cmpb
push
outsl
add
adc
mov
push
jmp
popf
sbb
xchg
inc
xchg
pop
mov
mov
push
cmp
je
mov
push
test
clc
jns
adc
add
testb
je
xorb
and
mov
cmp
cwtl
test
iret
or
test
popa
mov
or
sub
jns
inc
pusha
pusha
xor
pop
stc
es
les
pop
call
ret
inc
dec
mov
imul
dec
sbb
inc
and
outsl
dec
xor
inc
scas
cmpsl
sbb
dec
pop
aas
cmp
movsl
fimuls
cld
call
xchg
add
inc
lods
rcll
mov
arpl
cmp
je
inc
fmull
jl
mov
adc
jns
cmpsl
mov
out
pop
addr16
adc
or
cmpb
lahf
or
pop
aad
sahf
in
add
or
sahf
sbb
loopne
jle
fchs
inc
ficoms
dec
rcl
xlat
mov
jo
add
mov
add
call
push
pop
push
pop
testl
adc
dec
or
icebp
pop
in
push
popa
loopne
mov
orb
cmp
cmpsl
loopne
or
pop
pop
stc
sub
rcrb
pop
push
adc
xchg
or
dec
std
and
je
mov
movb
ja
cmpsb
or
out
dec
inc
add
push
jns
loop
test
xchg
cmp
add
arpl
adc
popa
leave
push
cs
jae
in
push
dec
cmpsl
mov
movsl
cmpsl
mov
cli
xor
mov
xor
das
pop
je
mov
add
pop
xor
xlat
adc
aas
or
nop
cltd
int3
data16
sbb
mov
mov
dec
and
repnz
push
jo
iret
and
or
iret
pop
xor
jecxz
xor
sbb
out
inc
data16
xor
sub
and
dec
inc
jns
xchg
add
les
data16
push
jp
jne
enter
xchg
mov
lret
push
fstps
xor
adc
mov
pop
not
pop
inc
xor
mov
scas
xor
lea
mov
fimuls
ds
push
add
or
shll
push
fdivl
dec
icebp
leave
je
pop
lock
xchg
lret
xchg
dec
push
mov
loop
lods
rclb
ret
lahf
or
and
data16
pop
outsl
pop
xchg
push
inc
xor
inc
sbb
pop
cmp
pop
mov
and
leave
pop
stc
dec
xchg
mov
pop
fdivl
add
adc
inc
bound
lcall
ljmp
adc
inc
adc
shlb
rcll
cmp
jmp
cwtl
xor
pop
pop
xor
mov
bound
std
sbb
imul
sbb
imul
call
add
sbb
xor
mov
cld
add
cmp
int3
pop
aas
imul
add
and
mov
inc
fcompl
and
push
and
icebp
pop
les
adc
adc
fidivs
outsb
jl
int3
cmp
xlat
aas
inc
push
dec
add
inc
add
mov
dec
mov
mov
dec
mov
push
push
out
mov
jne
mov
divb
das
pop
cmpsb
outsb
sbb
cmp
mov
stc
dec
rcr
lods
add
sti
pop
ljmp
add
push
popa
rolb
lcall
xchg
pop
fadds
shlb
inc
mov
pusha
ja
fstps
add
dec
aaa
jecxz
nop
psubsw
jmp
test
lcall
jo
xchg
das
add
fsubs
jb
ficomps
notl
mov
popa
in
and
pusha
loopne
icebp
and
inc
pop
jecxz
pop
bound
stc
mov
fs
insb
and
ss
or
pushl
les
mov
jns
push
mov
aam
cmp
push
loope
add
mov
add
cmp
add
or
shlb
cmp
add
jbe
push
and
cmp
cmovns
push
add
pop
sbb
adc
dec
or
push
dec
mov
mov
shlb
leave
adc
lods
fcomps
sahf
ljmp
in
call
add
mov
add
adc
xchg
sbb
or
stc
mov
or
push
mov
dec
ror
cmpb
jne
addb
adc
adc
or
outsl
pop
call
adc
mov
fildl
fsubp
mov
daa
sub
push
mov
jg
fwait
lea
fst
pminub
lahf
push
fucomp
adc
add
roll
add
outsb
or
push
inc
sub
frstor
adc
inc
jb
or
clc
loope
je
mov
jl
mov
push
insb
push
mov
jecxz
add
cmp
xchg
inc
inc
aas
data16
adc
add
out
mov
or
pushf
flds
add
xchg
mov
push
adc
imul
ret
shlb
cmp
push
mov
notb
aaa
roll
mov
fs
adc
call
push
jae
xor
ljmp
sub
rcr
mov
push
mov
pop
lea
pop
mov
daa
or
sub
lea
leave
loopne
mov
movsl
adc
jge
mov
out
rol
xor
hlt
test
dec
mov
add
jns
inc
add
sub
rorl
fmuls
or
addl
int
inc
inc
mov
sub
ja
dec
mov
dec
bound
or
xchg
loopne
fs
pop
adc
push
push
pop
pop
loope
dec
jmp
adcb
dec
add
mov
add
mov
sub
adc
or
fwait
jno
jnp
andb
push
and
sub
imul
push
pop
dec
jnp
leave
mov
cmp
aaa
fwait
std
inc
cmp
sub
sub
das
in
or
mov
in
push
xor
inc
sub
dec
sub
mov
or
ror
mov
mov
es
add
cli
or
inc
hlt
in
outsl
or
or
dec
stc
pop
outsl
jo
loopne
lods
adc
or
sub
xchg
push
jns
in
jne
mov
pop
add
inc
add
add
je
and
push
lods
test
loop
imul
xchg
ss
adc
push
lcall
lods
or
inc
adc
fimuls
push
inc
or
mov
repnz
or
in
pusha
xor
adc
jecxz
pop
xchg
js
movsl
test
jle
cmp
shlb
lds
roll
add
addr16
int3
jmp
xchg
js
cmp
in
mov
lea
adc
fdiv
loopne
jbe
or
sbb
mov
xor
addr16
dec
fldt
int3
push
pop
mov
cs
das
shlb
call
jle
imul
sbb
push
push
or
ss
mov
mov
add
dec
jno
push
pop
rcr
inc
push
loopne
and
rorl
cmpsb
and
pop
sub
lret
xchg
fdivs
inc
stc
ljmp
loope
or
and
js
or
jne
add
fcoms
pop
adc
cmpsl
jnp
stos
js
jne
pop
push
push
gs
js
call
jmp
mov
push
mov
roll
and
in
loopne
mov
iret
nop
inc
ret
sbb
sbb
jbe
or
dec
icebp
mov
and
push
or
sub
mov
ja
and
xchg
or
and
push
mov
mov
xchg
pop
ret
xor
and
popf
les
push
scas
pushf
shlb
imul
jg
cmp
sub
xchg
pop
cmpsb
into
adc
mov
sub
clc
paddusb
movsl
inc
or
dec
or
fbld
aas
arpl
clc
test
mov
shrl
xchg
sahf
bound
fs
adc
xchg
pop
xlat
cltd
xor
les
sbb
jbe
add
inc
mov
test
cltd
int3
enter
pusha
movl
mov
adc
mov
pop
jp
jmp
push
add
mov
mov
pop
je
syscall
adc
pushf
in
add
mov
add
sbb
cli
push
je
push
jns
add
add
rorb
adc
xor
sub
sub
xor
and
or
and
or
pop
shrb
ret
adc
cmp
sbb
jb
sar
adc
popa
or
mov
or
add
rolb
or
or
imul
add
add
push
and
or
aas
mov
addb
es
sarb
cmpsl
adc
sbb
fstl
cmpl
cmp
rorl
push
sub
test
pusha
adc
jmp
dec
lods
push
inc
cmpb
add
stc
fs
mov
mov
jmp
add
xor
add
inc
or
fs
dec
inc
nop
inc
cmc
movsb
mov
sbb
sub
dec
ret
shlb
pop
or
mov
mov
adc
adc
loop
push
cmp
mov
sar
add
sbb
shlb
aas
add
cmp
fimuls
aaa
cmp
sbb
jbe
mov
dec
jle
xchg
jbe
pusha
sahf
pushf
je
arpl
jle
jno
mov
xor
daa
push
movsb
iret
add
sub
sarb
add
xacquire
or
sbb
or
pop
jmp
ret
dec
pop
xchg
or
pop
add
aas
mov
push
dec
push
add
jle
push
cmp
xchg
or
adc
fs
adc
inc
sbb
push
adc
inc
shrb
pop
mov
int3
rcrl
hlt
jmp
sub
and
jo
adc
or
das
cmpb
mov
jg
and
sbb
aas
in
outsl
roll
mov
dec
test
add
dec
outsl
clc
lods
pop
pop
dec
ja
lret
aam
dec
rorb
iret
loopne
adc
or
fisttpll
aas
mov
decl
sbb
xchg
and
pop
adc
frstor
push
sbb
add
std
inc
inc
out
mov
testb
lods
or
and
adc
cmpsb
adc
cmp
xchg
movsl
adc
mov
add
popa
loopne
shrl
adc
mov
add
add
or
sbb
jecxz
cmpsb
test
sub
mov
add
sub
cmp
cld
inc
andl
dec
dec
popa
mov
jne
ficoml
add
add
mov
sbb
arpl
cltd
pop
sub
sub
pushf
iret
cmp
xchg
rolb
lcall
mov
aam
add
test
pusha
mov
inc
push
repz
aas
xor
jg
outsb
jg
adc
sub
jle
mov
mov
mov
enter
cmp
aad
imul
and
or
cmpsl
movsb
inc
mov
iret
icebp
ret
add
lock
popf
add
pop
jl
or
leave
jno
je
add
insb
insl
jne
jo
imul
adc
jb
jmp
adc
push
jl
ja
les
addr16
outsl
sbb
adc
adc
gs
pop
add
push
test
das
xchg
cmp
and
or
or
adcl
or
ja
and
ret
repz
xchg
jno
inc
or
jo
inc
mov
dec
sbbl
scas
xchg
ja
sahf
add
mov
sti
fiaddl
push
aad
push
movb
and
add
mov
fs
cmpl
sub
bound
es
xor
rol
pop
aam
push
hlt
inc
pusha
pop
dec
or
and
sarb
sub
mov
xor
xchg
pop
dec
xor
push
sbb
xchg
subb
inc
xchg
xchg
rolb
adc
dec
and
push
popf
dec
shll
jmp
jae
inc
lds
add
outsl
in
pop
cmp
inc
aas
add
popa
or
out
xchg
addb
out
sbb
adc
sbb
or
inc
cwtl
fdivl
mov
add
sub
and
add
dec
shlb
ret
push
cmp
and
xor
pop
ret
mov
pop
and
or
jne
adc
xor
jne
jle
je
push
shrb
push
dec
or
adc
adc
jle
in
jns
adc
or
jbe
sahf
or
dec
es
ret
mov
je
mov
arpl
and
sbb
inc
sbb
pop
or
rorl
push
and
push
loopne
sbb
fs
sbb
or
sbb
add
jl
lods
fbstp
test
insl
and
jnp
push
or
pop
in
or
in
xchg
or
lahf
dec
loopnew
pusha
sbb
pop
test
mov
mov
xchg
inc
push
mov
add
loop
mov
rep
lock
lds
push
aad
cmp
add
adc
lahf
mov
rorl
subl
add
orb
xchg
jecxz
inc
scas
in
out
pop
fs
xorl
push
dec
js
in
lahf
mov
pop
dec
push
sahf
movl
scas
insb
ret
leave
rorb
das
adc
into
andb
adc
testb
mov
xor
adc
enter
or
sub
xchg
cli
and
outsb
push
adc
adc
nop
push
sti
sub
sub
push
pushf
pop
sub
jo
push
push
loopne
loopnew
xor
es
cld
test
test
mov
sub
pop
sbbb
cmp
daa
or
inc
jne
dec
icebp
jb
or
movntps
xor
cwtl
cmc
or
dec
dec
imul
push
sub
icebp
push
inc
add
add
sbb
jmp
jne
pop
inc
push
and
inc
add
cld
sub
adc
or
bound
clc
jns
cld
add
push
xor
jbe
sbb
in
xchg
fildl
movsl
mov
scas
mov
aas
stos
jns
mov
xor
inc
je
sahf
test
adc
mov
pop
pop
clc
fcoml
mov
sub
sub
outsb
add
push
push
inc
mov
push
fcompl
mov
adc
sub
push
cmpb
or
mov
pushf
scas
push
call
cmova
push
bound
out
adc
je
xor
jp
sbb
mov
sub
sbb
stos
mov
mov
push
out
insb
add
sbb
cltd
fisubrl
stc
aas
cmp
mov
lcall
inc
or
shl
outsl
push
add
lea
or
mov
mov
pop
loope
or
lock
clc
bound
sbb
sbb
les
ds
xchg
stc
adc
sbb
sub
pop
in
mov
mov
sbb
lods
mov
repnz
stos
xor
sub
jnp
mov
and
das
and
hlt
add
stos
fcompl
ret
ds
fs
lcall
mov
jno
jo
pop
add
pop
cli
fwait
sub
mov
test
shr
sarb
test
sti
or
add
insl
cmp
push
add
push
idivl
mov
mov
inc
cmpsb
pop
push
cmp
fwait
dec
sub
sub
shrl
adcl
jl
add
int
xor
and
out
inc
pop
lods
subb
cwtl
sub
jge
aaa
push
add
jmp
in
aam
ret
cmp
add
and
adc
inc
arpl
out
mov
popa
data16
pop
dec
jno
pop
sub
mov
push
lcall
fiaddl
data16
mov
jecxz
or
aam
mov
in
outsb
cmp
addb
sbb
mov
adc
test
mov
mov
repz
pop
cmp
inc
mov
mov
in
adc
cmp
inc
test
pusha
mov
or
sbb
ret
sbb
or
and
or
mov
ret
mov
or
pusha
bnd
jne
xor
or
call
out
movsb
jbe
pop
pushf
mov
inc
sbb
lcall
or
push
pop
or
lock
movl
sbbb
cmp
or
pop
xor
loop
mov
xor
push
sti
push
shr
je
add
out
int
fistl
push
inc
dec
adc
sbb
int
in
jecxz
enter
es
cwtl
add
dec
fcoml
pop
pusha
das
push
dec
loop
mov
es
frstor
xchg
add
movb
add
jl
and
or
adc
lea
mov
lods
pop
out
xor
push
clc
jecxz
xchg
cmp
sub
xlat
cmp
lock
add
fs
movsb
fnstcw
adc
xor
bswap
movsl
pop
pusha
jg
pop
cmpb
lock
adc
aaa
sub
xchg
cmp
adc
ror
into
call
mov
or
or
xchg
cmp
mov
sahf
rorb
xchg
cmp
fld
push
gs
mov
shll
xor
add
push
repnz
dec
pop
test
test
cmp
cwtl
cmp
testl
add
aad
adc
pop
adc
sub
xor
pop
pop
pop
nop
ljmp
mov
divb
stos
cwtl
fstp
fs
outsl
sbb
hlt
cmp
inc
and
inc
out
orl
add
add
sarl
mov
dec
mov
loop
insb
inc
lahf
pop
add
mov
pop
les
and
xor
sets
outsl
pop
js
ljmp
sti
addr16
mov
inc
pop
shll
push
imul
test
setg
jmp
decb
insl
inc
add
inc
add
cmp
setle
jns
inc
inc
es
dec
inc
or
cmp
adc
cld
mov
and
stc
xor
rcl
mov
pop
aas
and
fisttpl
inc
popa
and
push
pop
jmp
push
or
xchg
arpl
xchg
stos
enter
jne
xchg
inc
test
in
dec
aad
sub
xchg
dec
push
fcmovnb
and
inc
ret
add
cli
sahf
sub
jne
sub
or
add
inc
test
add
xchg
icebp
in
sub
shlb
mov
aaa
hlt
jmp
xorl
outsb
sbb
mov
gs
sar
rcl
mov
pop
in
ret
or
xor
and
into
call
inc
dec
dec
push
xchg
in
add
add
call
push
or
mov
adc
mov
dec
push
addl
jne
icebp
or
sub
add
sub
ja
mov
jl
push
xchg
sub
or
dec
or
mov
inc
add
popa
or
sub
mov
pop
add
pop
add
inc
sbb
jne
lock
xchg
out
add
pusha
jp
fadds
imul
divb
sbb
push
or
mov
mov
or
fs
add
jmp
sbb
adcb
or
adc
cmp
push
push
xchg
lea
pop
jbe
adc
adc
push
fdivp
mov
mov
nop
adc
gs
or
xchg
lods
push
stos
pop
push
pcmpgtb
cs
xchg
push
mov
cli
add
xchg
outsl
xorl
shll
cmpsb
mov
push
sub
inc
push
push
daa
lods
jl
rol
in
inc
inc
or
sbb
insl
mov
pop
or
dec
cmp
add
js
test
shrl
adc
adc
fistpll
pop
loop
pop
cmp
ss
jne
and
in
test
in
push
pushf
jne
or
adc
mov
cmpb
mov
mov
or
cmp
je
cmp
jbe
xchg
dec
or
mov
push
je
cld
in
xchg
or
add
cmp
jge
je
ret
sbb
ret
adcb
sarl
mov
cwtl
sbb
mov
xchg
sar
stos
pop
sub
inc
push
mov
push
loopne
testl
jle
ds
pushf
pop
shrl
add
jne
daa
add
pop
pop
add
push
xchg
inc
xchg
xor
sub
pop
cmp
insl
loope
jo
or
pop
mov
jo
mov
cmp
jne
push
sub
and
push
mov
inc
lret
pop
test
pop
sbb
dec
sbb
sub
cmpsl
sbb
xor
or
push
cmp
subl
pop
xchg
stos
or
dec
das
ljmp
push
jb
and
xchg
pop
adc
add
and
shlb
mov
and
mov
fmull
iret
test
test
in
and
cmp
push
jle
fs
lock
lods
les
sbb
jae
cltd
mov
inc
mov
js
inc
mov
pusha
push
out
dec
dec
pop
pop
lods
call
mov
into
jnp
ret
js
ljmp
pusha
adc
xor
jo
das
popf
in
pop
dec
lods
xchg
xchg
mov
test
mov
xor
mov
xchg
add
mov
xor
inc
push
and
shrb
push
mov
push
dec
sub
mov
shll
push
or
push
mov
xor
add
mov
mov
mov
and
pop
cmpsb
push
inc
and
pop
push
nop
mov
jno
mov
sbb
in
sub
fcmovu
cs
cli
rcrl
aas
adc
xchg
int3
icebp
mov
aad
rcl
loopne,pt
cs
mov
mov
je
xlat
mov
dec
add
mov
fnsave
fdivs
int3
popf
xchg
xor
xchg
ljmp
xor
std
adc
imul
pop
push
add
dec
notl
cmc
jne
paddusb
dec
lods
lret
daa
movsl
or
gs
add
cmp
call
inc
push
pusha
lea
xchg
je
repnz
repnz
jae
pop
sub
jne
mov
pop
pushf
test
or
adc
or
jne
scas
fidivrl
cmpsb
std
sub
shrl
mov
inc
xchg
push
flds
jb
jne
inc
enter
jmp
adc
ss
ja
pop
mov
xchg
sbb
push
xor
dec
ss
or
iret
mov
sti
mov
aas
jmp
jge
jmp
lds
or
int3
dec
push
sub
xchg
jmp
cmp
sub
bound
dec
jecxz
stos
mov
fadd
addr16
jle
les
cmpsb
mov
jmp
lret
add
and
mov
nop
ja
leave
je
jmp
sbb
aaa
xor
scas
push
xchg
mov
fcoml
cmp
push
gs
mov
mov
es
sbb
mov
in
and
cltd
or
scas
jbe
sub
popl
pop
mov
push
orl
outsb
and
inc
or
sub
scas
sub
jmp
adc
cmp
pushf
inc
xor
sub
inc
punpckhbw
nop
loop
ja
sbbl
movl
lea
pop
sarb
sub
add
dec
sub
or
in
adc
clc
int
adc
shl
insl
xchg
out
push
dec
cmp
or
pop
xchg
adc
lods
or
xor
and
xchg
pusha
adc
and
adc
push
adc
sub
pop
mov
sbb
or
sub
xor
or
aas
inc
dec
cmp
daa
inc
and
or
out
inc
call
jo
xchg
adc
mov
divl
pop
mov
cwtl
add
das
mov
jnp
inc
jp
movsb
pop
sbb
sbb
adc
stos
inc
loop
sbb
inc
iret
addl
incl
jno
insl
fs
rorl
mov
inc
pop
je
pusha
sub
or
test
insl
ljmp
pop
or
xchg
push
inc
je
fsts
push
mov
ds
aam
or
fistl
xor
sub
pushf
and
mov
mov
cmpl
mov
hlt
sub
cmpsl
or
adc
fiaddl
push
lcall
xor
and
js
popa
ljmp
inc
jmp
sub
jg
fs
sbb
lcall
pop
dec
or
lret
push
orb
cmpsl
or
cltd
mov
outsb
and
inc
fistl
and
jne
adc
daa
cmp
fisttpl
fisubl
mov
sbb
decb
sbb
xchg
ret
adc
push
and
push
xor
imul
xorl
add
sub
das
adc
xor
or
lcall
loopne
psubb
in
and
xchg
je
inc
popa
jne
or
lea
or
cmpsl
cmpsl
xchg
mov
bound
jl
outsl
and
xchg
add
cmp
inc
adc
inc
dec
pusha
das
gs
pop
jmp
or
ret
mov
mov
sub
xor
insl
fcompl
xchg
mov
shl
push
pop
cmp
xchg
sbb
inc
jns
xchg
ss
push
mov
cwtl
ficomps
and
sbb
jmp
or
enter
pop
xor
popa
outsb
dec
push
mov
inc
mov
repnz
mov
imul
fiadds
shl
fstl
mov
and
sbbb
repz
aaa
andl
and
mov
dec
and
pusha
mov
loope
jge
mov
rolb
ror
shr
mov
and
addl
sbb
xchg
lahf
lods
lock
sbb
mov
outsl
je
mov
mov
fimull
test
ljmp
nop
cmpl
cmp
mov
sbb
mov
sbb
dec
mov
add
xchg
xchg
or
sbb
or
es
or
push
or
cmp
mov
xchg
mov
lds
andb
mov
pop
mov
xchg
sub
aam
cld
shlb
mov
repnz
and
push
aam
or
sbb
pop
mov
jnp
xor
dec
frstor
xchg
mov
mov
or
sub
shl
mov
push
mov
nop
aas
pop
xor
mov
mov
je
aad
arpl
cmp
faddl
cmp
mov
jmp
mov
mov
adc
adc
xchg
jne
in
fimull
add
inc
daa
add
lds
adc
loop
mov
test
push
jecxz
dec
add
push
sbbl
aam
and
xor
lcall
mov
jg
add
push
inc
mov
mov
push
sarl
test
push
pushl
add
shrb
jge
rclb
jbe
scas
test
adc
pop
jmp
xchg
xor
icebp
or
js
icebp
and
fnsave
lea
dec
sub
xor
icebp
push
push
fwait
aaa
mov
or
mov
cmp
cmpl
push
inc
fistpl
gs
push
fst
and
push
dec
sbb
xor
je
loopne
insl
cwtl
cmp
push
or
cmp
and
cmp
pop
loope
mov
adc
les
icebp
cmp
and
sbb
call
xor
inc
les
xchg
lcall
mov
mov
aaa
inc
adc
inc
subl
xor
or
add
and
daa
push
cmp
push
pop
adc
pop
js
ljmp
imul
jb
fst
fdivs
or
cmp
test
mov
push
movsb
std
mov
xchg
and
test
jno
or
imul
loopne
add
cli
adc
cmpsb
incl
js
fsubs
jo,pn
adc
unpcklps
push
dec
inc
jecxz
adc
cmp
sbb
sub
dec
es
adc
orb
and
xchg
es
mov
jecxz
cmp
mov
xor
sub
jnp
cli
ss
xchg
mov
in
pop
rcll
icebp
and
jb
add
pop
inc
adc
imul
ret
mov
movl
xor
imul
push
stos
fisttpll
hlt
pop
pop
xchg
and
push
jl
cmp
ret
ljmp
fwait
icebp
push
cmp
pop
or
fisubs
jne
pop
push
inc
xchg
iret
add
cs
clc
adc
dec
pslld
pop
test
lock
sbb
xor
ret
lret
sbb
int
push
add
pop
movsl
test
pop
les
mov
sub
pop
test
inc
lahf
or
add
sub
shll
xorb
mov
inc
xor
mov
daa
mov
cld
mov
or
xchg
pop
test
cwtl
jb
dec
js
or
xor
push
out
push
dec
je
imul
or
inc
xor
mov
aam
xor
mov
repz
adc
sbb
pop
aam
and
inc
mov
add
add
out
aam
push
pop
je
xchg
int3
push
jne
cwtl
movl
adc
rcll
adc
inc
imul
bound
mov
xchg
add
adc
aad
and
das
inc
cmpsb
imul
pop
mov
fistps
inc
adc
dec
ret
insb
and
lea
add
sbb
nop
pop
cmc
add
addb
popa
insl
cmp
inc
dec
out
rorb
dec
inc
popf
xchg
shlb
les
loopne
xor
addb
in
or
gs
sub
and
loopnew
pop
sahf
inc
mov
and
mov
fisubrs
aam
jle
js
mov
mov
outsb
xchg
cmpl
in
loopne
adc
inc
fadds
movsl
sbb
sbb
cmpsb
cmp
ret
xchg
lcall
rsqrtps
or
sbb
and
rorb
unpcklps
sbb
mov
adc
inc
fwait
inc
xor
ss
jo
add
sbb
les
mov
lcall
dec
aaa
in
push
xchg
sub
jmp
cmpsl
jge
mov
push
hlt
aam
inc
pop
or
jnp
xchg
inc
test
xor
dec
or
inc
dec
shrl
and
sbb
xor
inc
call
and
es
sbb
xchg
jl
push
into
mov
sbb
xchg
xchg
cmp
mov
push
xorl
dec
sti
add
or
lock
shlb
push
push
sub
jno
or
pop
cmpsl
xchg
sub
popa
int3
hlt
jl
jecxz
in
je
adc
cmp
ja
nop
pop
mov
dec
fnstcw
jo
sbb
rolb
adc
and
mov
pushf
push
push
nop
pop
add
push
sbb
lods
adc
mov
nop
in
xor
and
cmp
iret
pop
leave
push
ret
pop
lods
jns
xchg
xor
inc
jnp
mov
je
xchg
pop
fiaddl
sub
inc
aas
inc
fnstcw
movsb
and
test
xchg
xchg
popa
cld
in
and
outsl
sbb
test
outsb
aam
sarl
xor
repnz
rcrl
aas
mov
inc
push
test
xor
push
inc
rcll
sbb
push
daa
pusha
in
inc
mov
mov
push
shll
fsubr
inc
nop
inc
add
dec
repz
je
xchg
enter
add
jb
and
push
loope
lods
adc
inc
and
cmc
shr
repz
dec
fistpll
scas
sbb
dec
jb
mov
add
push
loop
sub
pop
cmp
ret
arpl
je
push
int
sbb
sbb
dec
popf
es
pop
test
push
sub
testb
add
in
inc
sub
adc
or
jecxz
push
cmpl
xchg
insb
and
movsb
mov
sbb
jno
mov
gs
cmpsl
jns
dec
and
sbb
and
push
xchg
mov
dec
adc
inc
add
lea
pop
pop
orl
mov
sub
adc
ret
adc
into
pop
mov
mov
lea
push
out
inc
pop
or
pop
mov
lret
movsl
xor
or
xlat
inc
push
adc
popa
pop
add
mov
push
rolb
dec
lret
aad
add
jno
jb
xchg
stos
into
xor
jns
sarb
repnz
je
movswl
aas
sbb
rcrb
jmp
cmpw
lds
add
cmpsl
test
sub
adc
dec
pop
or
cmc
or
jl
push
xor
push
cmp
daa
test
pop
and
leave
test
xchg
pop
jb
xor
mov
xchg
scas
test
inc
std
insl
loopne
xchg
mov
jb
and
fsts
pop
cld
mov
bound
sbb
call
dec
insb
in
push
shll
test
dec
fcom
dec
xchg
test
jbe
adc
ljmp
jno
xchg
jne
das
je
lret
or
inc
add
in
mov
daa
stos
xor
jle
sbb
adc
loopne
cmp
popf
inc
cmp
and
adcb
test
adc
and
dec
stos
cmp
imul
and
mov
or
daa
ffreep
rolb
sbb
push
lret
inc
sub
enter
add
or
adcl
popa
jl
mov
mov
cwtl
xchg
aaa
pop
pop
rcrl
xchg
push
fimull
das
inc
xchg
xor
mov
inc
scas
push
rorb
xor
adc
lods
ds
ret
push
mov
xchg
aas
mov
int3
sbb
iret
push
hlt
jmp
lock
adc
mov
push
sarb
xchg
xchg
cmp
nop
sbb
mul
sub
icebp
mov
orb
or
add
sbb
inc
jecxz
int3
mov
or
jge
mov
vandnps
and
sub
rcrb
roll
adc
aam
mov
jne
rsm
lds
mov
mov
out
movsl
fisubs
dec
fimuls
xchg
shl
das
sbb
cmp
jl
xor
xor
or
daa
cmpb
cmp
jmp
popa
mov
mov
outsl
lods
adc
jo
insb
inc
dec
dec
adc
es
stos
xorb
fbstp
out
mul
lods
mov
jo
push
xchg
rcll
in
fs
bound
inc
mov
and
sbb
int
js
or
pushf
xor
add
cmp
xlat
imul
pop
leave
dec
mov
movsb
aam
enter
mov
sub
lret
inc
movsl
dec
add
enter
scas
mov
seto
add
sbb
pop
add
mov
push
lea
mov
sbb
and
imul
negb
xorb
mov
rolb
outsl
adc
sti
pop
cmc
push
and
cmp
sbb
or
aad
mov
add
or
rcll
add
mov
dec
inc
adc
in
int3
scas
pop
mov
pop
ja
movsb
ljmp
lods
push
mov
dec
add
mov
cmpsl
fcoml
add
fcomps
mov
jmp
sbb
cmc
imul
xlat
clc
add
sub
sbb
inc
rcll
or
sbb
add
push
mov
add
in
jg
test
sbb
and
pop
cmpsb
jae
movsl
lods
rcrl
mov
ljmp
mov
and
jo
push
pop
and
aas
xchg
addr16
cs
loop
loopne
out
add
mov
sub
sbb
and
cs
xor
pop
adc
lea
add
cmp
sub
adc
mov
push
sbb
jno
xor
aaa
push
repnz
rcll
and
rolb
dec
add
adc
push
or
cld
cmp
rolb
inc
aam
adc
sbb
insl
loopne
mov
cmp
and
sub
icebp
sub
mov
and
mov
fs
ja
cmp
cmp
pusha
add
stos
sub
movsl
pop
sub
fisttpl
loopne
dec
or
adc
loope
pop
push
cmp
jae
data16
push
fisttps
orl
inc
lcall
jb
cmp
jnp
mov
pop
fbstp
push
movsb
cmp
xchg
inc
xor
cmp
jle
or
mov
mov
lds
dec
mov
dec
dec
jge
sbb
int3
subl
test
jne
popf
negb
and
or
cs
xchg
xchg
inc
add
push
push
add
push
sbb
add
out
cmp
outsl
push
popf
cmpb
dec
xor
pushf
addl
dec
xchg
ja
out
aam
cmp
jno
fcomps
das
mov
add
sarl
or
call
xchg
imul
jmp
dec
cmp
sbb
fs
cmp
ret
sub
xorl
ss
inc
xchg
pop
test
jecxz
icebp
jle
or
rcpps
mov
fisubl
repz
push
xor
fidivrl
push
adc
mov
or
mov
push
jecxz
push
jnp
test
pop
cld
ret
scas
or
sbb
xor
push
notb
add
mov
out
jo
sub
or
ret
dec
add
loop
jae
jns
jp
xor
mov
into
movsb
jecxz
sub
les
xchg
test
push
inc
jo
mov
pop
pop
or
mulb
push
xor
mov
xor
add
sub
sbbb
and
test
adc
jg
add
das
cwtl
les
jmp
popf
ret
adc
push
inc
xchg
adc
test
jg
pusha
add
sbb
mov
sub
jb
fidivrl
inc
pusha
cmp
jbe
cmpsb
lcall
aaa
or
outsl
push
into
rclb
jne
push
adc
add
mov
ja
stos
adc
adc
xchg
ljmp
cmc
je
xor
aad
cwtl
stos
shll
inc
and
mov
les
mov
pop
sarl
inc
ret
stos
adc
divl
mov
push
add
push
subl
add
pop
xor
mov
addl
mov
imul
xchg
add
jae,pn
push
lea
xchg
pushl
inc
add
clc
sbb
lcall
out
stos
xchg
adc
pop
jmp
add
jb
or
sub
dec
push
pushf
mov
mov
out
dec
add
mov
sbb
inc
pop
mov
push
push
xor
add
rorl
jne
int3
xor
gs
jo
es
movb
lds
pop
dec
inc
jle
out
sbb
jmp
sbb
fwait
add
adc
push
movsl
cmp
mov
sbb
inc
mov
mov
pop
sbb
mov
xor
jne
pop
xor
sti
lahf
sub
andw
sbb
xchg
or
push
imul
push
cmp
test
and
sub
sbb
pusha
or
mov
push
int3
add
jmp
or
cmp
inc
aam
push
or
push
scas
cmpsl
add
and
cmp
xchg
inc
pop
hlt
int
push
dec
mull
rolb
outsl
incl
pop
andl
nop
push
fldln2
xchg
test
pop
jecxz
mov
pop
dec
xor
mov
mov
dec
js
clc
das
dec
sbb
add
mov
cld
cmpb
push
stos
cli
add
fldl
fisttpll
sbb
scas
inc
scas
mov
mov
dec
sub
and
movsl
addb
push
and
push
add
or
movsb
sbb
pushf
xchg
scas
cmpl
or
mov
rclb
mov
xlat
arpl
dec
popf
push
and
add
inc
inc
jmp
lret
jne
cmp
imul
sub
jns
xor
inc
and
mov
mov
inc
and
adc
scas
or
xchg
rol
pusha
rcl
push
jp
jge
inc
mov
sub
jmp
dec
pop
rorl
cwtl
popf
sbb
sub
pop
lock
jg
les
cmpsb
push
shl
ret
pushf
xor
inc
xchg
pop
dec
xchg
pop
mov
outsl
movsb
jo
cmp
test
push
hlt
cmp
jge
daa
movsb
xor
pushf
push
arpl
jmp
sub
and
cltd
aad
andl
inc
dec
push
jo
test
call
xor
jno
mov
xchg
jo
lret
add
aam
add
daa
or
jo
insl
sbb
nop
push
push
ret
aaa
xor
aas
and
push
fcmovnb
rcll
hlt
data16
xchg
jnp
add
xchg
jmp
xchg
loopne
push
xlat
push
inc
and
add
aaa
nop
or
ret
loop
push
or
jp
or
test
lock
or
lret
lock
pop
repz
dec
shlb
xor
push
pop
xchg
mov
sbb
loopne
fbld
in
mov
pop
or
pusha
pop
aaa
pop
add
or
sbb
filds
sub
loopne
add
mov
decl
subb
pop
add
and
xchg
push
ja
shlb
das
jne
xlat
pop
mov
push
push
mov
xlat
insl
dec
shrl
jo
movups
cmp
push
cmp
add
andl
pop
lcall
pop
jno
lds
and
cmpl
loop
imul
clc
jmp
rolb
mov
cmc
cmpsb
shll
pop
orl
dec
sarl
mov
mov
xchg
or
jle
adc
mov
daa
or
cmpsb
scas
repnz
mov
mov
subb
push
mov
scas
sbb
pop
les
popa
pusha
cmp
lock
fwait
xor
test
enter
xor
lods
adc
shufps
daa
and
lock
push
movb
dec
adc
adc
sub
xchg
jno
pop
loopne
or
pushf
faddl
test
stos
lock
add
cmp
add
mull
mov
cmp
add
and
lahf
aad
xlat
sbb
lods
add
xchg
sbb
sbb
sbbl
cmp
punpcklwd
cmpsb
mov
mov
cmp
fs
stos
or
cmpsb
push
cmp
movsb
push
push
icebp
sub
push
enter
enter
cmpsl
das
mov
push
sbb
test
repz
ret
loope
jb
add
dec
or
or
mov
lcall
test
je
push
dec
test
xor
mov
sbb
or
sbbl
clc
sub
adc
pop
jbe
push
push
adc
fadds
xor
cs
sub
dec
lea
fwait
push
cmp
adc
mov
push
push
insb
aam
icebp
cmp
xor
cmp
cmp
ss
rolb
jne
and
sbb
pop
test
jns
fs
pusha
loop
in
fld
test
mov
mov
dec
fs
fwait
push
in
add
jne
hlt
or
inc
inc
or
sub
mov
in
in
pop
lock
movsl
sub
or
push
leave
mov
fwait
or
jmp
mov
scas
adc
inc
xor
sub
cwtl
ret
scas
add
mov
sub
iret
sub
sub
and
imul
xchg
imul
dec
enter
and
jno
inc
sti
dec
test
and
and
xchg
adc
out
adc
sbb
pop
inc
pop
mov
mov
imul
addr16
ret
add
mov
inc
ds
fcoms
daa
adc
mov
adc
pop
fs
or
jecxz
rcll
inc
stos
or
xchg
out
mov
xchg
xor
add
mov
xchg
jnp
fiaddl
push
mov
mov
push
add
lcall
pop
stc
adc
sub
xchg
pop
xchg
shrb
insb
pop
mov
stos
sub
jmp
dec
dec
scas
sub
sub
ret
mov
cmp
movsl
les
in
push
jns
clc
clc
lock
nop
sbb
in
or
inc
into
inc
xchg
call
test
or
fcompl
int3
or
mov
add
mov
push
inc
insl
inc
mov
inc
dec
test
xchg
jmp
xchg
lea
adc
subl
movsl
inc
ljmp
xorl
call
out
ret
push
or
div
inc
push
je
adc
xor
sub
inc
and
mov
sub
daa
lret
mov
insl
dec
lret
cmpsl
jmp
pop
fisttpl
add
adc
push
and
iret
dec
mov
inc
js
lret
ret
shll
cs
mov
lahf
sub
mov
add
push
mov
sbb
sub
es
cmp
jmp
inc
mov
adc
sarb
dec
in
xchg
push
adc
outsl
das
das
or
iret
cltd
cmp
mov
adc
imul
push
rolb
das
xor
fnstenv
adc
fmul
jnp
add
adc
mov
jns
mov
and
into
adc
into
inc
dec
add
add
sub
sbb
dec
jp
dec
mov
mov
sbb
fsubl
in
inc
cmp
fmull
fsubrp
movsl
popf
or
dec
fadds
pop
ficompl
sbb
mov
or
cmp
test
jle
dec
xchg
bound
add
outsb
rolb
cmp
or
sub
andl
jne
inc
insl
pushf
and
mov
jns
mov
inc
adcl
mov
or
dec
push
mov
adc
cmp
push
pusha
aas
out
popa
mov
jp
test
jl
mov
enter
inc
shr
repz
jns
repnz
xor
sbb
dec
adc
mov
lods
xor
sbb
ror
daa
adc
jns
mov
push
es
inc
cmp
mov
or
inc
push
dec
mov
or
mov
sub
mov
sub
lds
xchg
jne
add
or
pop
sub
inc
sub
pop
lcall
mov
repnz
pop
icebp
push
ret
xor
xor
mov
jno
es
inc
dec
or
mov
sbbl
pop
adc
push
rclb
xchg
lret
and
jnp
add
leave
repz
hlt
add
shlb
push
dec
xchg
add
fldt
xchg
js
adc
cltd
push
enter
push
sub
test
push
in
arpl
sbb
roll
sbb
pop
mov
notb
xchg
add
adc
leave
lret
insl
jmp
add
inc
or
fs
popa
mov
jg
sahf
int
mov
gs
insb
push
or
daa
repnz
inc
and
add
shl
fs
rcrb
shlb
cs
addl
add
in
rclb
lret
scas
imul
arpl
mov
pop
jne
arpl
mov
repnz
insl
sub
in
xchg
nop
popf
adc
mov
xchg
cltd
mov
add
push
shrl
add
sbb
add
into
add
test
mov
adc
jnp
das
movsl
add
add
or
and
repz
adc
adc
dec
stos
adc
xor
jbe
movsl
les
xor
dec
sti
add
dec
xchg
movsb
ret
fdivs
push
idivb
mov
xchg
mov
pop
xchg
in
mov
pop
mov
test
inc
and
ficoml
insb
lds
add
sub
dec
xor
xor
push
sbb
xchg
cvtps2pi
push
adc
addl
fcoml
add
jb
imul
and
lea
int
xor
mov
xor
or
out
or
or
add
imul
add
in
enter
cmp
imul
adc
cmpl
sbbl
cmp
inc
jecxz
sbb
jmp
pop
loopne
push
imul
stos
xorb
and
cwtl
sbbl
mov
jmp
data16
not
and
adc
add
les
inc
add
insb
or
loopne
in
rcr
sub
mov
int3
adc
mov
roll
mov
adc
dec
clc
addb
or
cs
fadd
or
enter
ss
lcall
bound
add
cmp
xchg
int3
roll
sbbb
leave
or
stos
inc
ljmp
cs
daa
shll
or
adc
push
add
xor
outsl
gs
pop
hlt
add
adc
xorl
and
fmuls
sbb
and
sub
pop
popa
adc
mov
push
xor
or
in
aam
sahf
inc
add
iret
dec
add
pop
jbe
rclb
mov
invlpg
cmpl
cwtl
int
pop
sub
add
add
out
xchg
add
jbe
or
mov
push
pop
fcmovb
pop
dec
push
aaa
xor
push
jno
sub
cmp
mov
jb
mov
or
add
lret
push
cmp
dec
sahf
imul
add
shl
pop
jg
adc
outsl
and
mov
cmp
mov
push
cmp
lea
shl
xchg
lret
add
in
add
mov
adc
xchg
fildl
mov
xchg
dec
xchg
dec
call
test
inc
cmp
jle
pop
sub
xchg
ss
hlt
push
mov
adc
xor
or
sbb
orb
fisttpl
mov
cmp
call
jge
and
je
or
jg
ffreep
out
add
sub
xor
fistl
sbb
add
add
sbb
sub
add
push
adc
and
int3
or
pop
cmp
out
neg
mov
cwtl
push
mov
push
mov
and
xlat
inc
stos
mov
lds
mov
sbb
lock
xor
mov
out
push
add
mov
jge
stos
ss
sbb
jl
sbb
pop
or
sbbb
cvtps2pi
inc
cmpsl
cs
add
rolb
movsb
mov
jne
push
fldcw
mov
daa
cmp
lcall
xchg
mov
clc
cmc
mov
loope
aaa
sbb
mov
adcb
and
push
pusha
movsl
add
daa
lds
cmpsl
jp
jmp
les
call
mov
clc
sub
mov
paddb
sub
hlt
pop
imul
and
adc
movsb
add
pop
shlb
xor
repnz
fldenv
mov
inc
and
mov
fdivs
xor
jp
cld
addr16
xchg
ss
pop
loopne
cmp
fldenv
or
or
or
mov
fadds
mov
in
inc
js
jnp
call
jbe
cmp
es
test
jbe
xor
out
or
adc
incb
inc
and
fcomps
scas
mov
cmp
ja
mov
inc
inc
js
fldcw
loopne
xchg
popa
jbe
push
fisubrl
and
je
inc
pop
rep
bound
movsb
cmp
cmp
push
jge
jns
jle
mov
mov
pop
mov
sbb
lret
sbb
sub
dec
mov
cmp
push
mov
mov
adc
mov
pop
xchg
das
popa
in
fisubl
mov
fwait
sbb
push
jb
pop
fsubs
adc
jbe
nop
aad
lods
add
add
dec
stos
lahf
das
dec
push
outsb
clc
je
pop
mov
and
mov
xchg
and
lods
sbbb
dec
adc
mov
loopne
jo
loope
jne
fadds
roll
testl
add
je
mov
add
scas
add
repnz
stc
inc
mov
mov
aaa
sarl
dec
sub
aam
inc
dec
mov
les
sahf
xchg
mov
in
movsl
dec
rcll
ljmp
popf
pop
or
cs
xor
add
pop
scas
and
inc
jle
cmpb
add
fs
inc
mov
inc
mov
pop
sbb
lods
add
mov
icebp
clc
xlat
pop
dec
add
or
int
loopne
sub
xor
in
inc
repz
xchg
adc
decb
mov
push
xchg
or
in
jbe
adc
jo
imul
adcb
adc
pop
sub
ret
pop
add
adc
in
mov
leave
addl
dec
and
nop
and
pop
inc
add
hlt
jmp
enter
adc
inc
jmp
add
push
jmp
rol
dec
mov
pop
mov
sbb
pop
jno
popf
fisttpll
pop
push
shlb
fsubr
fldt
aad
loopne,pn
flds
cltd
pop
fs
push
mov
mov
jne
outsb
inc
cmp
dec
jne
into
inc
inc
add
add
mov
popf
sarb
dec
aaa
jmp
add
cmp
push
adc
nop
pop
xchg
sub
cmpsb
out
mov
cmc
sahf
add
dec
adc
fs
lret
ret
test
and
inc
dec
dec
sub
dec
gs
fmuls
or
push
or
add
bound
add
adc
and
popa
mov
push
insb
mov
jne
sub
in
jl
inc
add
daa
and
or
mov
pop
jb
imul
or
xor
mov
mov
lods
mov
xchg
mov
fldl
xchg
dec
out
xchg
hlt
push
jo
cmp
hlt
sbb
fucomp
mov
fistl
nop
aas
iret
inc
cmp
test
fs
lcall
daa
adc
push
cmp
and
xchg
orb
mov
cmp
cld
sub
sub
pusha
test
cltd
adc
stos
or
xchg
adc
mov
out
sub
cmp
out
iret
dec
sbb
jp
pop
test
pop
adc
mov
push
mov
fdivrs
int
inc
lock
in
lods
and
jb
enter
pop
push
insb
outsl
es
adc
jne
mov
imul
and
inc
adc
add
dec
and
jnp
push
push
push
divb
fs
cmp
pop
nop
imul
sub
push
sahf
push
nop
ja
mov
sbb
mov
pop
lods
xor
push
and
xchg
inc
push
xchg
inc
mov
je
into
cs
shlb
fstps
lret
or
or
int
mov
add
mov
cli
and
jle
hlt
add
outsb
xor
jne
fimuls
push
test
or
in
ret
jbe
dec
and
adc
lods
mov
jae
fdivrs
adc
push
mov
scas
out
push
xchg
push
add
data16
adcl
pop
loopne
dec
or
cmp
cmpsl
adc
or
add
gs
and
inc
into
cmp
or
sub
and
push
or
movsl
sub
sbb
push
or
jl
es
push
test
lds
pop
repnz
adc
les
into
ret
fxam
xor
in
or
shrb
test
add
sbb
imul
xor
pushf
and
push
movsl
in
mov
cmpsb
mov
sub
movsl
imul
dec
xor
cmp
cmp
sbb
sub
jmp
shrb
sbb
push
dec
mov
mov
push
xor
sbb
sub
mov
cmc
xor
xchg
dec
stos
rorb
incb
inc
add
incl
pop
dec
insb
popf
pop
enter
sub
std
aam
mov
mov
push
into
aam
sub
fprem
adc
fldenv
aam
sbb
testb
and
aaa
or
xchg
dec
or
daa
mov
stc
xchg
sbb
clc
xlat
cld
mov
or
cmp
xchg
call
aam
imulb
pop
mov
incl
dec
bound
push
fs
xor
ja
adc
mov
cmpsb
sub
je
pop
pop
jmp
ja
add
cmp
in
lods
mov
popf
and
or
hlt
gs
out
in
xchg
dec
add
dec
repnz
cmpb
rorb
outsl
push
cltd
cmp
mov
mov
daa
fs
fsubl
xor
ljmp
call
lea
mov
arpl
inc
pop
and
add
cld
push
mov
or
lret
cmp
fdiv
je
xor
notb
loope
mov
inc
inc
xchg
add
je
pop
dec
push
cmpsl
enter
xor
or
inc
inc
push
pop
ret
jo
roll
xchg
repz
dec
push
mov
pop
int3
pop
sub
xchg
repnz
and
cmp
push
fadds
adc
jnp
xor
testl
in
jmp
add
mov
aas
popf
adc
mov
jmp
push
add
add
or
cmpsl
xchg
dec
xchg
pusha
xchg
stos
xor
daa
cwtl
pop
jp
push
into
push
filds
sbb
mov
add
dec
add
loopne
out
inc
xor
fnstcw
das
testl
call
lea
ret
mov
sub
mov
adc
pusha
popf
fcos
push
push
xchg
inc
daa
or
xchg
inc
and
jbe
jl
stos
inc
movl
xor
mulps
pop
jo
or
sub
mov
js
shlb
stc
sub
adc
xor
sbb
and
or
and
lods
mov
shlb
in
xor
stos
mov
stc
cmp
pop
jno
aas
push
lds
add
xchg
sbb
or
lret
sti
cs
or
or
sbb
add
aas
pop
popf
loope
adcb
mov
sbb
mov
arpl
js
jmp
mov
inc
fstpt
out
nop
or
xchg
xchg
das
jo
lret
adc
adc
sbb
andl
sbb
pop
add
adc
push
inc
mov
inc
and
and
or
sbb
and
mov
mov
sbb
mov
in
cmp
lods
ret
sbb
pusha
mov
and
sub
popf
pop
shrb
pop
out
add
sbb
cmp
jge
fbstp
in
mov
add
add
push
insb
mov
add
jg
aaa
pop
addl
push
add
int
clc
out
push
test
lods
aad
clc
sbb
inc
out
add
cmp
xor
push
cmp
imul
add
aaa
daa
xor
mov
xchg
ljmp
adc
and
and
jmp
jns
jg
cmpl
das
inc
jg
pop
jg
mov
push
sbb
add
xor
add
or
wrmsr
fadds
jmp
cmc
imul
jne
movsl
repnz
popa
pop
push
push
sbb
add
pop
xor
arpl
adc
pop
popa
jmp
ss
sbb
jno
ret
lods
daa
jmp
sbb
pop
mov
popa
push
clc
adc
push
pop
xchg
es
in
cwtl
add
and
adc
mov
loope
sbb
add
mov
pop
pop
jbe
mov
xchg
mov
xor
sahf
add
sub
daa
jne
mov
mov
mov
das
rol
add
xor
jge
sbb
sbb
adc
add
xchg
or
out
dec
leave
loopne
lock
adc
pusha
push
or
repnz
and
xchg
mov
lock
cmp
or
rcrl
xchg
les
mov
xchg
dec
jo
push
pop
out
sbb
add
insl
pop
dec
insb
clc
cmp
pop
mov
pop
inc
sbb
lock
movsb
add
outsb
or
lea
fisttps
data16
or
adc
out
xchg
imul
cmp
lea
push
jae
dec
repnz
lea
push
insl
push
or
loopne
push
js
inc
mov
inc
pop
fisubs
push
fsubr
push
call
xorl
jns
jns
or
or
pop
xor
les
cmp
cli
in
xchg
pop
sbb
negl
push
popf
sbbb
cld
out
inc
sbb
mov
movsl
lock
out
movsl
cmp
popa
or
and
or
movsb
aaa
dec
out
push
mov
ffreep
filds
adc
add
sub
add
mov
add
mov
xchg
shlb
iret
mov
popf
or
push
pop
inc
adc
xor
aaa
ss
sbb
insb
test
add
sub
or
inc
lret
dec
and
pop
cmp
cs
dec
pop
cmp
push
push
rolb
inc
jo
insb
pop
fcomps
ljmp
sbb
roll
inc
les
push
lock
dec
jmp
push
mov
jmp
mov
push
add
mov
and
mov
fmull
push
popa
sub
dec
shll
orl
xchg
mov
add
rorb
test
lea
mov
mov
adc
inc
pop
repz
insb
adc
lret
nop
nop/reserved
push
push
inc
adc
sub
inc
cmp
jne
sbbb
adc
in
in
sub
mov
unpckhps
inc
call
adc
or
in
dec
lock
lock
fcoml
jmp
add
cmpsb
jnp
add
dec
jne
test
jo
out
cmp
pop
or
mov
xchg
fsts
xor
sbb
fcoml
jae
add
mov
cli
lods
push
cmp
insb
and
loope
mov
or
jg
in
xor
and
imull
sbb
mov
sub
arpl
jb
das
add
inc
scas
pop
or
das
add
push
dec
pop
icebp
test
pop
or
xlat
adc
mov
or
dec
inc
add
cmc
clc
sar
jns
adc
adc
loopne
adc
daa
jle
fistps
jne
add
hlt
add
test
into
xchg
or
iret
popf
jecxz
cmp
lock
out
pop
push
rol
dec
ds
lods
inc
dec
lods
mov
enterw
outsb
dec
cmc
add
pop
and
push
outsl
inc
dec
and
mov
sbb
or
and
imul
adc
mov
pop
fs
popa
mov
outsl
fisubs
rorb
and
inc
pushf
jmp
and
xchg
sbb
sub
mov
stos
inc
add
dec
jne
leave
pop
test
mov
aaa
aas
add
mov
dec
lcall
jno
dec
xchg
adc
push
dec
push
sbb
lock
imul
or
mov
dec
pushf
or
sub
sub
scas
test
add
fnstsw
xchg
pop
push
push
sub
js
push
movsb
mov
and
xchg
push
outsl
sbb
dec
adc
push
mov
mov
shrl
mov
mov
pop
negl
mov
or
adc
in
mov
test
mov
inc
ja
sbb
fidivrs
cltd
mov
adc
pop
movsb
mov
nopl
push
pop
or
push
flds
imul
popf
jecxz
dec
adc
xchg
sbb
xchg
sub
fldenv
or
or
sahf
push
rolb
jbe
outsb
roll
das
je
inc
mov
scas
inc
addb
add
inc
jne
pop
popa
cmpsl
dec
add
jns
orb
jg
add
test
pop
mov
movsl
sub
xchg
jo
cmc
das
iret
aam
arpl
sub
adc
ret
clc
lea
mov
icebp
ja
sbb
rcr
jnp
sbb
xchg
pop
mov
dec
dec
push
sbb
xchg
dec
xchg
pop
std
cmc
inc
push
jge
xor
xor
test
jle
xlat
cld
fs
or
scas
mov
mov
push
fstpt
push
test
dec
sbb
lahf
xchg
push
jp
clc
add
sbb
out
pop
and
pop
mov
sub
enter
shrd
clc
push
mov
push
stos
jle
icebp
adc
and
das
cmp
xor
test
cli
mov
adc
and
mov
in
push
pushf
adc
stc
pusha
popa
push
nop
cmpsb
jns
pop
inc
sub
or
shll
or
ret
add
aaa
adc
cli
xchg
pop
in
imul
sti
rcrl
fwait
sbb
rcrb
lock
cmpb
add
jmp
ror
test
lods
or
sbb
and
lods
mov
lret
sub
popa
pushl
push
bound
loopne
mov
sbb
sahf
push
push
popa
lea
add
mov
in
and
sti
xchg
mov
aaa
mov
adc
and
sbb
data16
arpl
cmovl
sub
xchg
pop
jne
mov
mov
sbb
cmp
jne
pop
das
test
gs
shll
and
mov
mov
shlb
pop
sub
addb
push
lret
popa
xchg
or
and
adc
mov
jo
lahf
xor
jae
push
pop
adc
and
cmpsl
add
xor
cwtl
es
icebp
mov
push
fsubs
fsts
fs
roll
xchg
cmp
sbbl
adc
and
pop
mov
push
push
std
add
cmp
cmp
mov
loopne
imul
jae
jp
ret
cmpl
sub
daa
push
arpl
and
and
out
sbb
adc
test
pop
daa
push
and
scas
dec
cmpsb
js
addr16
pop
insl
imul
pushf
test
icebp
lock
xchg
mov
lods
inc
inc
or
pusha
pop
test
cmp
or
sbb
inc
std
popl
add
inc
mov
out
addr16
adc
repnz
push
mov
fcmove
cltd
xor
pop
adc
adc
movsb
movsl
mov
mov
or
enter
mov
push
arpl
jo,pt
ret
cld
je
pushf
nop
pop
cmp
in
add
shll
mov
lock
popa
arpl
aam
xor
rorb
cmp
sbb
les
and
clc
jne
xchg
sub
iret
pop
rorb
clc
sti
add
sub
or
rclb
add
leave
call
stos
add
sub
pushf
inc
loop
scas
jg
bound
adc
popa
mull
dec
sub
or
jg
lock
js
jl
pop
pop
xchg
push
xor
lock
push
fdivl
add
es
pop
lahf
adc
mov
jg
test
dec
orl
dec
adc
and
stos
enter
and
mov
rorl
jp
adc
xor
push
lds
push
push
orb
jle
pop
adc
or
pop
mov
xor
adc
shlb
mov
or
jo
aas
aad
push
pop
adc
test
rcl
and
jmp
mov
mov
inc
mov
push
pop
sub
ret
pop
adc
lds
sub
cmp
negb
jl
adc
cltd
pop
addr16
int
jmp
lret
sub
adc
mov
jns
inc
pop
fadds
and
fmuls
insl
push
add
fmull
and
sub
jo
and
jb
add
push
mov
inc
imul
xchg
adc
mov
xchg
subb
pop
loope
inc
adc
push
xlat
mov
xchg
push
or
push
push
add
dec
clc
dec
mov
xchg
or
xchg
add
mov
ss
lret
test
pop
cmp
jl
or
rorb
pop
mov
sub
jg
jmp
leave
test
adc
push
add
xchg
loopne
aam
subb
and
sub
and
add
sub
sbb
aam
dec
add
popa
mov
jns
sub
xor
out
add
jne
sahf
add
cmpl
mov
ret
or
jp
in
jns
imul
ds
xor
push
cmpsl
lret
mov
push
xchg
ljmp
sub
dec
add
test
cmp
arpl
and
jge
pop
xor
mov
lock
cmc
test
loopne
add
inc
add
popf
hlt
jl
fcomps
sbb
adc
sub
je
fsubs
cwtl
pop
mov
sbb
adc
and
pop
in
aaa
xor
ja
mov
jbe
dec
adc
pop
out
adc
mov
push
cli
inc
push
loop,pt
decl
loopne
in
adcl
addl
mov
mov
insb
add
sbb
xchg
and
sbb
fs
cmp
mov
lret
mov
int
mov
xor
inc
add
and
add
sub
fwait
inc
add
sbb
or
div
fbld
ja
adc
mov
add
cmp
ja
loope
and
inc
xor
push
xor
nop
push
or
jno
add
pop
popa
cmpsb
daa
cwtl
adc
cmp
adc
adc
mov
fisttpll
repnz
rcrb
out
sub
or
mov
mov
arpl
adc
or
mov
cmp
sbb
xchg
ret
cmp
ret
sarb
cmc
pop
cld
cmpsl
sbb
jg
add
fistpl
nop
out
xchg
xchg
cmpsl
jo
mov
in
cmp
or
add
sub
mov
xchg
jne
jg
adc
out
jo
xchg
or
jge
inc
or
push
pop
xchg
add
mov
pop
cmp
xchg
inc
mov
arpl
sbb
mov
push
push
or
mov
mov
mov
clc
mov
cmp
inc
mov
or
mov
adc
xchg
sbb
movsl
jg
xor
lea
rorb
cmp
lds
daa
ds
addb
arpl
aam
test
call
lock
movsl
popl
jl
lret
dec
jbe
orb
and
push
popa
les
jge
add
adc
cmp
loopne
das
movsb
loopne
adc
cmp
test
jmp
stos
or
sbb
scas
icebp
pop
addb
pop
aam
or
iret
sub
jmp
fsubl
cmp
fsubl
repz
addl
inc
dec
shl
push
out
cmp
mov
aaa
test
pusha
mov
iret
nop
mov
test
or
xor
nop
cmp
mov
leave
xor
clc
lods
dec
sahf
and
or
and
test
add
bound
mov
xchg
pop
cwtl
cli
pop
rorb
and
push
inc
jge
adc
dec
adc
insl
cmpsb
mov
sbb
xchg
dec
insb
mov
push
insb
daa
inc
int3
push
sbb
scas
jne
das
push
dec
insb
push
jp
ss
ss
test
inc
in
mov
out
or
sbb
inc
xchg
dec
jae
pop
sbb
mov
pop
jno
inc
sub
cmc
sbb
push
xor
popa
outsb
mov
xchg
adc
adc
xlat
xor
add
mov
std
add
sub
or
mov
data16
test
mov
flds
pushf
or
cwtl
push
mov
cmpsl
add
sbb
dec
jb
cmp
adc
ret
loopne
cmp
mov
ret
mov
jmp
add
cmp
nop
or
pop
jns
add
cmp
sub
test
cmp
and
cmp
enter
inc
mov
enter
outsb
sub
sub
orb
pop
and
or
xchg
pop
inc
xor
shrb
sub
into
cmp
sub
push
push
or
or
dec
jo
repnz
outsl
add
lcall
clc
push
cltd
in
in
fs
dec
sarb
inc
sub
sub
popa
adc
pop
cmp
les
ret
negb
lret
push
push
in
jno
push
js
inc
add
mov
daa
cld
out
popl
mov
iret
cmp
push
xchg
aas
xor
ja
inc
mov
xchg
movsb
or
mov
mov
add
andb
pusha
or
push
adc
out
les
movsl
add
jle
cmp
jne
or
push
add
xlat
ja
outsb
pop
mov
jg
adc
inc
jne
mov
jl
outsl
cmp
repnz
fdivrs
cmp
test
out
add
inc
pop
or
xchg
inc
add
jnp
jns
repz
adc
xchg
cmp
dec
movsl
fwait
aam
dec
xor
mov
in
jns
cmpsl
pop
js
sub
jnp
and
mov
pop
pusha
pop
cs
pusha
nop
setb
notb
dec
adcl
dec
push
imul
pop
fiadds
out
ret
pop
sti
adc
scas
int3
push
fcoml
mov
cmp
push
nop
add
pop
xor
mov
and
pop
push
outsb
or
shrl
cmpsl
or
outsl
mov
cmp
mov
sahf
or
rcrl
push
fcmovnb
pop
xor
dec
push
add
add
sbb
or
and
cwtl
lods
outsb
xchg
and
adc
lock
push
push
add
dec
pushf
sbb
shll
lods
ds
sub
mov
pusha
xorb
mov
ficoml
sbbb
fbld
pop
adc
cwtl
add
push
push
pop
les
or
test
jo
or
mov
loope
lock
pop
enterw
je
js
add
fmuls
inc
fwait
pop
fs
out
cwtl
outsl
jl
add
xchg
push
push
push
mov
or
dec
sbb
dec
pop
dec
push
and
or
clc
xchg
fdivr
mov
sbb
xchg
mov
sub
mov
or
inc
pop
lcall
test
mov
lcall
std
movb
enter
or
sbb
jnp
mov
cmp
dec
enter
rorl
pop
cmpsl
pop
imul
push
inc
mov
mov
aaa
sub
call
xor
iret
xor
pop
jo
or
adc
or
repnz
lods
push
adc
push
sub
lahf
dec
ds
dec
pop
mov
pop
mov
sub
std
outsb
sbb
inc
jbe
jno
mov
cltd
loope
mov
cmpsl
sbb
adc
add
insb
pusha
push
sub
and
push
xchg
and
hlt
movsl
jnp
cmp
add
loope
mov
pusha
xor
push
adc
xor
push
ss
pusha
imul
fs
lods
aas
push
xor
dec
inc
xchg
adc
xor
adc
sbb
and
xor
cmpsb
icebp
xor
mov
sbb
xor
sbbl
xor
sub
and
xor
jbe
mov
jmp
and
incb
adc
and
inc
dec
pusha
fs
loopne
pusha
int
sbb
push
xlat
xor
mov
mov
cmp
enter
xlat
icebp
push
dec
call
or
or
xchg
mov
fcom
leave
adc
lahf
inc
mov
cmp
jne
daa
or
jle
sub
xor
lods
enter
sbb
dec
fisubs
icebp
or
push
loope
jp
int3
call
es
mov
and
dec
sbbb
cmp
imul
push
inc
ljmp
imul
cmpl
xchg
sub
out
aas
inc
ljmp
andl
data16
ret
pop
mov
sbb
and
sbb
xor
orl
ficompl
repnz
pop
roll
adc
add
test
or
aad
js
push
jne
mov
mov
lcall
or
imul
gs
push
andb
cmp
daa
or
push
push
movb
push
adc
out
rolb
mov
movsb
jno
lods
jbe
add
inc
fsubp
xchg
mov
add
xchg
pop
movsl
nop
add
or
add
js
les
push
daa
push
and
subl
in
pop
stos
imul
or
pop
mov
sub
jl
mov
mov
and
sbb
mov
loop
jae
add
ss
out
inc
dec
or
push
les
pop
pop
and
shll
lret
dec
cwtl
xchg
sahf
and
push
adc
in
pop
push
pusha
mov
scas
fmull
sbb
sbb
fbstp
xor
aaa
cmpl
out
insl
call
or
cmp
subl
test
mov
loopne
xchg
adc
jne
test
or
pop
out
data16
movsb
adc
pop
dec
pop
sbb
mov
dec
dec
adc
sbbb
and
loope
cmc
sbb
movsb
repz
rol
js
dec
and
sarb
inc
sbb
push
lret
push
pop
and
sbb
or
test
mov
dec
mov
push
add
jbe
sti
daa
pop
lret
xor
ljmp
outsb
cmp
jbe
jbe
out
adc
aad
ja
lock
iret
js
int
adc
sbb
and
inc
je
aas
test
inc
imul
and
jl
jl
adc
outsl
or
ss
sub
mov
out
insb
mov
data16
or
jo
jg
pop
or
call
adc
adc
mov
rcll
sbb
mov
shll
test
ja
pop
test
jne
add
inc
push
jnp
adc
scas
push
adc
test
addb
dec
out
leave
movsl
lea
icebp
mov
orl
mov
push
mov
lea
cmpb
fldcw
cmp
cmpb
or
andb
push
push
sbb
or
int3
pop
in
push
push
enter
cmp
add
mov
nop
or
out
imul
sbb
add
aaa
lcall
xlat
and
or
mov
ret
adc
pop
mov
sbb
daa
jb
or
cmp
push
add
dec
jb
inc
pop
add
in
add
in
inc
mov
and
add
xor
ret
inc
mov
push
mov
pushl
pop
cmp
adc
jo
out
cmp
mov
xor
mov
push
fistl
and
add
mov
addb
xchg
rcrb
in
and
sub
xor
cmp
movsl
xlat
and
pop
cs
push
add
sub
repnz
andb
mov
jge
pop
xchg
adc
mov
and
sub
inc
push
fwait
ja
pop
xor
int3
pop
daa
cmpl
or
dec
sub
int3
pop
push
sbb
test
je
cwtl
fnsave
push
aas
and
mov
and
inc
out
sbb
sub
lahf
out
arpl
inc
mov
stc
xorl
mov
ja,pn
sbb
mov
sbb
xor
push
je
mov
adc
mov
xor
jl
cmp
fiadds
xor
jge
add
loope
dec
repnz
inc
cmp
inc
inc
add
adc
jo
inc
add
inc
sarb
je
dec
xchg
cmp
inc
xchg
xchg
ret
and
and
fdiv
mov
mov
push
add
xor
add
jmp
insl
mov
xor
shlb
lds
cwtl
sub
rorb
testl
loope
add
outsb
xor
sub
push
push
addb
jns
pop
fs
rcrl
add
add
and
clc
orl
out
fnstenv
xor
loop
ret
and
xor
xor
pop
out
test
iret
loop
icebp
loope
or
push
cmp
int3
aam
and
xchg
push
or
sub
leave
lock
fs
or
or
or
xor
mov
adc
cmp
jg
or
or
in
push
mov
push
push
cmp
add
sbb
adc
push
xor
pushf
inc
push
shll
lods
sbb
fsts
mov
cmpsl
pop
add
xchg
lock
inc
hlt
mov
sub
lock
dec
loop
sub
push
cmp
mov
sbb
mov
push
cmp
or
pop
lds
or
inc
shrd
cmp
inc
xchg
jg
pop
pop
stc
xchg
aam
pusha
cmp
jl
cmp
and
push
sbb
int3
std
testl
push
xorl
pop
ret
mov
and
mov
or
sbb
test
mov
ret
dec
cmp
cmpsl
fadds
loop
adc
jae
pop
dec
xor
pop
fistpl
push
sbb
jecxz
and
loope
inc
pop
push
jmp
mov
push
dec
push
and
test
add
orb
loopne
inc
bound
push
xor
xor
push
pop
mov
jbe
or
aaa
push
adc
sbb
add
sub
mov
addb
mov
and
cmp
lods
outsl
pusha
push
in
sbb
cmp
inc
adc
cmpsb
inc
pop
loop
mov
pop
imul
dec
pop
inc
lcall
xchg
test
sahf
mov
xchg
adc
push
rcrb
sub
insl
pushf
cmp
cs
add
adc
or
jmp
mov
fsubrl
adc
jno
adc
mov
dec
adc
out
jp
sub
cmp
pop
push
xchg
ret
and
imul
repz
jns
and
test
xchg
or
lock
inc
cltd
sbb
dec
les
xchg
pop
fbstp
int3
pop
add
divl
jbe
mov
sbb
mov
call
xchg
pushf
call
popa
and
xchg
mov
icebp
cld
lods
nop
add
inc
hlt
sbb
xor
or
push
pop
dec
nop
push
leave
stos
sub
sti
sub
js
sarb
in
mov
cmp
cwtl
in
ja
add
mov
or
jns
icebp
inc
mov
cmc
pop
inc
inc
ret
dec
adc
cmp
stos
push
hlt
sub
jmp
lea
or
jo
adc
mov
loope
outsb
sbb
push
push
mov
cwtl
mov
or
inc
mov
outsl
arpl
mov
les
jge
adc
cmp
pop
adc
xor
les
jns
shrl
push
ret
xorps
mov
sbb
loopne
jl
push
pop
rclb
pop
stos
xchg
nop
ds
jg
lock
pop
and
inc
fimuls
xor
daa
ds
inc
xor
rcll
dec
inc
aam
push
stos
lock
cs
adc
scas
mov
dec
adc
and
dec
inc
dec
xor
dec
mov
or
orb
sbb
xlat
pop
daa
mov
ret
push
aad
arpl
mov
fwait
cmpsl
test
jae
lods
xor
out
scas
movl
les
cltd
xor
mov
test
push
adc
cmp
lea
repnz
fs
insb
dec
hlt
inc
or
inc
ds
mov
adc
ds
and
dec
dec
and
add
imul
dec
jle
jns
and
test
add
lahf
sarb
xchg
mov
or
fmuls
cmpsl
or
stc
addb
out
add
je
dec
or
add
and
adcl
rorb
testb
aam
mov
sbb
and
mov
daa
or
or
jnp
aaa
xor
adc
inc
push
jo
js
xor
ret
in
lock
and
cmp
mov
inc
mov
in
movl
xor
pop
pop
pop
pop
push
dec
xor
jp
push
mov
loopne
decl
push
sub
adc
sbb
cld
push
mov
nop
and
xor
add
inc
inc
imul
scas
adc
inc
clc
add
fstpt
hlt
lea
pop
inc
nop
mov
nop
sbb
lock
dec
in
arpl
cli
xor
inc
sbb
mov
pop
loopne
push
cmp
xor
nop
push
xor
test
fisttps
shrl
xor
xchg
xchg
or
inc
xlat
in
bnd
add
mov
adc
xor
dec
sub
sarb
mov
xor
sub
test
pop
pop
or
mov
ss
push
xchg
ja
jb
sub
rolb
push
ja
pop
out
pop
lock
inc
add
mov
dec
filds
jne
scas
and
mov
imul
or
xchg
cs
nop
add
jnp
inc
add
lock
rolb
pusha
and
xchg
cmp
add
test
lock
movl
popa
mov
lock
mov
and
call
pop
mov
or
cmpl
lock
pop
cmp
jne
push
or
dec
lea
mov
adc
cmp
rolb
cmp
inc
insl
popl
jb
xor
cmp
les
sbb
adc
inc
push
xchg
les
push
addl
cmc
mov
cmp
and
cld
push
mov
faddp
cs
imul
jmp
outsl
inc
mov
imul
pop
add
adc
aas
and
push
pop
pop
in
and
mov
cli
push
or
incl
ret
push
add
decl
cmpb
adc
adc
nop
nop
adcl
add
das
call
add
cmp
mov
int
mov
mov
cmpsl
es
add
add
dec
dec
outsb
jne
mull
cmc
outsl
pop
jmp
inc
adc
mov
pop
xchg
test
jbe
or
aaa
or
popa
jb
add
popf
jle
pushf
or
popa
test
sub
jmp
aaa
lcall
pop
push
jl
mov
bound
insb
inc
add
jo
or
scas
hlt
or
and
daa
sub
subl
aam
inc
jne
movups
inc
icebp
add
dec
test
xchg
mov
jae
cmp
sbb
mov
outsb
arpl
call
mov
mov
push
out
fmuls
adc
faddl
xchg
mov
popf
mov
xchg
dec
sub
add
add
inc
insb
and
je
or
add
ljmp
adc
or
xchg
dec
sub
test
jl
or
addr16
hlt
or
stc
mov
add
or
push
push
mov
rcr
dec
cmp
jo
mov
imul
push
jo
fdivrs
mov
push
je
bswap
fidivl
leave
push
mov
outsb
push
hlt
mov
pusha
pop
les
imul
and
je
cmp
mov
out
cld
jecxz
mov
pop
or
add
adc
lock
out
xor
fsubp
aas
insb
pop
pusha
pop
outsb
jne
pop
jae
movb
loopne
xor
pop
outsb
std
xor
addr16
mulb
js
mov
jb
jp
pop
ja
lcall
cmp
daa
xor
dec
ud1
adc
test
mov
pop
pushf
mov
cmp
and
adc
mov
cmp
sar
cmp
adc
ret
inc
pop
jb
std
xchg
imul
dec
cmp
xor
add
and
fs
lret
subl
sub
sub
add
inc
cmp
cmp
mov
cltd
jo
inc
dec
add
mov
ds
push
sbb
fs
lcall
orl
sahf
addl
jnp
or
loope
adc
loopne
sbb
cmp
jae
or
orl
cmp
cmp
outsb
pop
fs
or
aas
inc
rorb
test
xchg
hlt
pusha
mov
push
dec
push
mov
pop
imul
mov
enter
sub
sti
add
jl
xor
xor
adc
mov
and
js
cmp
pop
lock
cmp
cwtl
sbb
pusha
xchg
pop
loopne
jae
sub
pop
xor
mov
sbb
inc
je
fwait
loopne
adc
adc
jae
lock
mov
inc
push
or
and
mov
nop
xor
add
dec
cmp
sub
dec
cwtl
push
add
and
imul
mov
pop
add
pop
xlat
inc
cld
daa
inc
cmp
push
gs
pop
pop
pop
test
lea
inc
mov
in
test
push
je
jnp
xor
call
daa
inc
pop
test
xchg
mov
inc
pop
add
jl
add
addb
loopne
sbb
pop
inc
lock
cmp
inc
cmp
sub
repnz
ss
xchg
xor
rclb
loopne
js
outsb
pusha
in
inc
test
pop
pop
and
push
or
inc
adc
sbb
sub
sarb
add
pop
stos
add
adc
xchg
pop
icebp
add
add
push
loope
lret
xchg
pop
mov
pop
or
add
mov
mov
xlat
push
jnp
iret
mov
or
push
inc
iret
mov
arpl
rorl
cmc
movsb
call
cmp
test
xchg
popf
pushf
mov
dec
ljmp
push
adc
jbe
shrb
push
jnp
iret
lahf
add
test
jo
jo
cmovae
or
enter
lahf
iret
push
jb
arpl
jns
or
ja
imul
xchg
push
sbb
xor
iret
mov
jnp
inc
add
sub
push
sbb
insl
popa
sbb
int
fwait
mov
adc
pop
mov
ror
nop
adc
test
into
jo
push
add
nop
aam
sub
sbb
push
inc
xor
shl
fadds
push
fwait
and
add
jo
sbb
and
push
cmp
push
fcoms
or
test
pusha
mov
and
imul
cwtl
adc
push
and
orl
in
mov
test
mov
les
jo
aad
imul
mov
or
and
mov
popf
leave
adc
sbb
adc
jo
cmp
push
adc
xchg
out
js
inc
mov
out
inc
mov
or
daa
xor
xchg
cmp
xchg
nop
mov
mov
adc
and
test
add
dec
xchg
and
xor
xor
ss
cmp
xor
inc
sbb
xchg
dec
dec
dec
dec
dec
dec
imul
push
push
push
push
pop
pop
pop
mov
repz
ds
rcl
sbb
movsl
test
adc
es
dec
push
pop
cs
dec
js
lret
push
add
add
push
je
push
push
jp
inc
jns
shlb
cmp
and
inc
std
inc
fcmovbe
pop
ja
sti
and
add
push
sbb
cmpb
jo
mov
js
outsl
test
mov
xor
xchg
movsl
sub
xchg
pop
push
xor
push
push
popa
inc
incb
mov
movsl
adc
mov
aas
add
jge
add
mov
sbb
or
je
push
popa
loop
and
sub
repnz
dec
jns
inc
jge
pop
pop
repz
shrl
xchg
dec
aas
or
sarb
stos
imul
popw
cli
push
sbb
pop
cmp
int
dec
adc
enter
and
cmp
ret
add
sbb
imul
inc
jmp
loope
xchg
mov
xor
xor
jmp
inc
inc
xchg
popf
inc
dec
pusha
sub
je
outsl
jecxz
push
mov
dec
jo
pop
or
xchg
sbb
enter
pop
dec
pusha
dec
aas
lods
xorl
cltd
movsb
mov
andb
js
cmpsl
adc
push
test
add
push
les
jb
adc
push
mov
and
mov
cvtps2pd
and
arpl
xchg
push
mov
iret
or
int3
ljmp
sub
xchg
xchg
jno
lahf
ret
psrlq
sbb
sub
popa
or
loopne
jg
jge
rolb
into
sbb
out
jnp
lods
xor
jmp
popa
je
in
mov
jmp
cmc
pop
sbbl
dec
movsl
add
pop
lcall
or
jmp
inc
jmp
sti
push
add
sub
add
push
cmovb
aam
or
mov
sti
xchg
mov
and
and
lods
push
pop
mov
fcoml
dec
xchg
jge
cltd
test
mov
aaa
push
jle
push
cmp
ja
adc
pushl
jmp
add
pop
incl
sub
fistpll
cmp
jg
mov
ret
push
xlat
and
addr16
mov
imul
adc
insl
stc
lock
ficoml
dec
pop
fnstsw
pop
sbb
into
adc
xchg
or
jle
lock
stos
lods
out
add
sti
sub
push
in
fbstp
jmp
cmp
ja
outsl
das
pop
dec
jo
mov
dec
mov
dec
cmpsl
fptan
inc
ljmp
push
dec
enter
add
pop
enter
inc
fidivrs
adc
in
mov
inc
jb
popl
int3
xor
and
adc
push
dec
jmp
mov
sbb
cwtl
je
sub
push
or
in
ja
fsubl
fs
mov
xor
popf
in
jae
push
lock
inc
imul
inc
cmp
add
sbb
and
push
sub
sub
xchg
mov
popa
inc
xchg
sub
push
xchg
mov
cmp
imul
cmpb
fstps
in
aaa
inc
rcrb
movzbl
cmp
fistps
ret
push
mov
inc
inc
ja
pop
leave
roll
imul
inc
jb
mov
cmp
dec
or
push
add
add
nop
and
xchg
mov
add
push
push
aad
in
push
mov
or
add
aas
dec
in
sbbl
dec
xchg
mov
pop
jg
mov
or
jo
add
add
iret
mov
inc
add
cmp
add
ds
sbb
icebp
js
sub
mov
mov
inc
call
sub
sbb
sbb
sarb
add
inc
imul
mov
out
jle
adc
mov
adc
rclb
inc
cli
or
push
vmread
xchg
fmulp
xor
loop
pop
pop
add
xchg
sub
ja
popa
cmpsb
rol
clc
cmp
inc
aaa
push
cli
adcl
int
ds
das
push
xor
push
fs
push
ss
aaa
fucomi
dec
pop
pusha
loopne
insb
sub
popf
fs
enter
lds
and
add
sub
adc
stc
pusha
dec
daa
shl
push
mov
jae
test
jecxz
pusha
mov
xchg
xchg
push
or
aas
insl
add
jno
cmpsl
aam
or
mov
cmpb
and
mov
sub
add
aaa
sbb
inc
add
xor
cmp
mov
jmp
xor
cmp
cmp
outsb
out
mov
or
je
cmpsl
mov
sbb
push
test
iret
ret
lods
cmp
mov
roll
out
test
sbb
movsl
nop
lock
or
movl
and
imul
out
in
dec
mov
cmp
aam
je
fstpt
or
push
or
push
imul
pop
lahf
pop
and
push
adcb
push
adc
cmpsb
xor
aad
dec
aam
xor
aam
xchg
test
pusha
pop
mov
insl
nop
ret
push
lods
mov
dec
or
xchg
mov
inc
mov
jge
adc
in
adc
rol
push
or
out
adc
sbb
dec
xchg
or
and
les
mov
adc
hlt
rolb
lods
inc
or
inc
jp
mov
xor
ds
xchg
lods
insb
mov
mov
sbb
mov
sub
mov
mov
aaa
add
imul
cld
push
adc
aaa
push
je
xchg
add
jp
xor
movsb
out
call
test
adc
jbe
pop
inc
lock
xor
insb
out
pop
stos
rorb
sahf
pop
pop
mov
or
push
popa
decb
inc
je
call
xor
add
inc
add
dec
sub
mov
adc
cmpsl
adc
shll
inc
mov
add
or
push
push
jbe
daa
mov
xlat
mov
xchg
inc
cmp
mov
pop
popf
aad
cmp
jae
ss
and
add
or
mov
pusha
mov
aad
mov
mov
sbb
and
inc
or
out
loopne
jle
inc
aaa
or
aam
or
xchg
aaa
or
pop
in
data16
adc
sahf
sahf
or
push
dec
rorb
pop
xchg
icebp
jp
inc
aaa
dec
adc
fsubr
ja
sub
inc
or
mov
mov
add
xor
clc
mov
call
std
xor
stos
mov
jecxz
or
push
lock
and
dec
add
js
xchg
inc
push
and
add
nop
and
mov
test
je
push
adc
imul
push
js
pop
mov
push
push
rcr
dec
sub
and
outsl
sbb
leave
lock
push
lock
xchg
push
movsl
mov
dec
ja
pop
add
sbb
cmpb
js
sub
mov
add
pop
or
pop
pop
sbb
xchg
sub
dec
cmp
jge
or
mov
push
push
xor
add
orb
clc
sub
test
sub
or
mov
add
enter
adc
cwtl
out
imul
pop
cmp
or
shlb
xchg
adc
push
mov
xchg
add
pop
movl
mov
filds
insl
int3
fdivl
imul
sbb
insb
and
sub
adc
lret
movsl
xlat
or
adc
loopne
stos
inc
cmpl
daa
shlb
movb
cmp
pop
pop
dec
fisubrl
adc
cltd
xlat
push
add
ss
int
loopne
lock
push
enter
popf
sub
arpl
jmp
cld
addb
call
imul
stos
mov
rolb
data16
daa
lahf
jle
sbb
shlb
sub
lds
push
sbb
dec
aaa
push
lcall
and
dec
jge
dec
daa
xor
xchg
add
nop
ret
cmc
mov
add
enter
sub
push
add
inc
fiadds
add
hlt
in
or
xor
or
dec
and
or
rolb
test
sub
xor
sub
cld
mov
push
jns
imul
addr16
shll
dec
cmp
lock
jmp
and
and
seta
pop
fimull
push
mov
ja
lcall
or
leave
inc
push
imul
mov
pop
push
push
inc
adc
and
push
fsubrs
push
sub
hlt
not
mov
mov
out
pop
mov
loope
insb
cmp
push
imul
cltd
nop
popa
pop
ret
add
xchg
or
adc
fstl
or
sub
sub
push
add
inc
push
sub
ret
in
test
pop
lock
roll
pop
movsb
and
pop
enter
pop
adc
negb
test
outsb
and
lea
lds
test
cmp
lock
add
xor
shrl
sub
insl
sbb
mov
in
mov
into
hlt
cmp
leave
lds
hlt
hlt
pop
gs
xchg
iret
hlt
sub
inc
add
rep
jp
pop
mov
repz
cmp
or
pop
test
shlb
inc
jne
pop
push
xor
insb
push
add
rolb
or
cmp
inc
jp
ds
pop
movb
int
push
push
in
in
je
sub
or
fsubrs
shlb
lea
clc
sbb
sub
dec
enter
loopne
cmp
subl
xchg
ret
fistps
imul
sub
jmp
push
cmp
sbb
add
jne
in
inc
cwtl
or
and
test
xor
add
call
dec
rorl
jmp
sub
push
enter
pushf
addb
or
or
or
and
bound
es
fisttpl
pusha
mov
icebp
adc
pushf
or
add
insl
mov
enter
mov
sub
jmp
in
pop
popa
adc
repz
mov
repnz
pop
add
xchg
enter
pop
call
push
xor
call
ret
pop
lods
inc
sbb
call
add
test
nop
cmpsl
adc
add
adc
inc
and
enter
mov
les
daa
cmp
sahf
adc
dec
clc
insb
enter
push
std
push
bound
pushf
inc
xor
clc
xor
adc
push
mov
enter
clc
and
enter
pop
repnz
dec
lock
clc
sbb
push
inc
imul
xchg
imul
dec
xor
mov
mov
clc
arpl
mov
mov
shrb
mov
and
xor
inc
pop
sbb
nop
add
dec
call
test
pop
insb
int3
pop
adc
xor
adc
adc
inc
or
out
pop
push
xchg
les
adc
xchg
pusha
imul
adc
mov
jae
test
mov
stos
add
repnz
shlb
adc
mov
xor
fcoms
inc
dec
fwait
jae
dec
push
jb
jl
jge
mov
je
rorb
mov
rcrb
sbb
pop
xor
aas
mov
mov
fs
push
or
adc
adc
pop
pusha
inc
push
sbbl
jmp
fistl
xchg
scas
pop
pushf
jo
les
arpl
and
push
fs
xchg
pop
movsl
adc
jl
xchg
xor
or
pop
jl
or
and
lock
sbb
dec
cmpsl
adc
repnz
out
movl
pop
mov
sub
xchg
sub
test
dec
pusha
jno
lcall
fsubl
ja
and
out
jo
or
movsb
dec
or
or
in
mov
mov
xor
fldenv
mov
in
les
push
cmp
lret
add
cld
pushl
lock
inc
xchg
mov
inc
call
inc
pop
les
adc
sbb
movsb
xchg
jmp
ljmp
setns
xchg
bndldx
ljmp
stos
test
ds
xchg
fsts
dec
out
adc
add
mov
xor
leave
adcb
lret
mov
outsl
add
lea
dec
sbb
mov
mov
push
xor
add
insb
int
inc
push
fcomip
inc
push
and
add
add
push
add
xchg
jo
int3
xor
or
stos
and
lret
popl
add
out
mov
mov
out
xchg
addl
dec
dec
lcall
lock
xchg
ret
inc
call
dec
dec
arpl
fisttpll
loope
add
lea
add
inc
ret
dec
adc
cmp
cmp
mov
inc
mov
cmp
xor
mov
pop
decb
dec
jae
pop
jp
aas
inc
jmp
cmpsb
das
jno
arpl
inc
fcomp
pop
mov
lock
sarb
je
es
test
scas
adc
jae
lahf
out
add
les
pop
pop
mov
out
jle
pop
add
jo
out
cmpsl
cmp
sbbb
cmp
adc
xor
sub
pop
add
mov
mov
pop
pop
cltd
jno
inc
adc
xor
int
jne
lret
jne
mov
add
sbb
xchg
inc
addl
and
mov
pop
xor
sub
test
daa
cmp
sub
roll
pusha
mov
sbb
pop
fsubrl
ds
add
in
inc
pop
inc
inc
adc
dec
orb
roll
adc
ret
out
add
ss
lea
mov
rorb
jb
cmp
jnp
mov
call
add
mov
out
mov
push
loopne
xor
push
and
popa
and
dec
scas
outsl
mov
pop
test
pop
cmp
sarb
push
lret
outsb
aas
add
inc
lret
fs
cmp
pop
movb
addr16
sbb
lods
sbb
adc
cmp
bound
pushf
push
stos
or
push
pop
mov
and
mov
fisubl
inc
pop
jnp
xor
aas
jbe
and
cld
mov
dec
fs
mov
mov
mov
and
adc
mov
fadd
xchg
xchg
mov
bound
lea
cmpsb
mov
adc
sub
xchg
lcall
arpl
test
xchg
fisubrl
mov
jmp
out
cmp
outsl
imul
sahf
gs
fstps
loop
or
xchg
jne
xor
je
cmp
cwtl
xor
sub
lahf
and
add
add
dec
jmp
leave
leave
push
push
push
inc
inc
push
mov
sub
pusha
pop
mov
and
addr16
dec
imul
adc
sbb
adc
push
insl
mov
aaa
sbb
icebp
or
pop
mov
or
mov
ret
or
sahf
inc
mov
push
sbb
repnz
aaa
mov
xor
pop
outsb
xchg
pop
dec
or
xchg
pop
jl
push
adc
in
mov
sub
sbb
jno
cmpsb
test
xchg
add
push
dec
xchg
mov
sub
in
dec
or
and
mov
inc
jmp
nop
inc
push
sub
movsb
mov
jns
mov
aad
cmpsl
addr16
lret
in
push
xor
dec
test
add
lods
fdivs
test
or
out
cmpl
loop
pusha
add
int
pop
dec
sub
jne
aaa
enter
and
or
cmp
shrb
jno
push
ss
sar
xchg
lret
fidivrs
push
cmp
cmp
adc
lret
imul
enter
sti
mov
mov
mov
adc
push
sbb
cmp
lock
mov
daa
mov
jno
cmp
push
in
popf
push
ja
mov
xor
mov
xlat
pop
pop
mov
popa
xchg
hlt
lea
pop
xchg
fcmovne
in
jbe
movsl
aas
insb
jge
cltd
xor
inc
inc
xchg
je
jge
mov
push
xor
in
test
dec
sahf
jl
add
jo
add
sbb
leave
mov
insb
inc
dec
mov
cmp
mov
daa
outsb
cmpsl
leave
xchg
movsb
xor
push
xor
aas
and
or
inc
sub
inc
leave
push
xor
cmp
xor
dec
add
je
add
mov
mov
out
inc
push
cmp
inc
and
mov
loope
fwait
xchg
mov
push
mov
and
sbb
scas
xor
or
jbe
jmp
adcl
das
jg
jnp
jmp
push
push
mov
addr16
jl
inc
push
sbb
js
jno
mov
shl
mov
sbb
inc
add
jnp
xchg
or
loop
push
or
and
fldenv
inc
add
inc
gs
jno
jb
imul
test
es
xchg
mov
pusha
jo
les
mov
adc
xor
xor
mov
lods
sub
mov
pushf
mov
cwtl
subb
sar
call
add
cwtl
dec
and
jns
imul
stos
nop
xchg
mov
or
push
mov
lcall
adc
ds
loope
arpl
or
inc
insl
jne
add
or
xor
mov
les
nop
out
mov
jns
push
mov
xlat
lods
lock
or
sbb
repnz
call
fisubrl
aaa
pushl
dec
inc
add
adc
add
fnstsw
mov
mov
mov
cmpsl
nop
arpl
push
sbbb
movsb
mov
add
mov
add
out
or
sbb
out
jno
jne
out
shlb
test
cmp
mov
xchg
mov
arpl
fldcw
dec
pop
hlt
test
sbb
insl
clc
adc
inc
and
enter
push
adc
cmp
add
andb
movsl
mov
in
pop
inc
rcll
jno
mov
cmpsb
in
xorb
push
pop
dec
xor
xchg
fs
sbb
sbb
shrl
je
push
sbb
outsb
fimuls
shlb
out
insl
test
pushf
out
pop
lret
push
and
jmp
add
imul
inc
cmp
pop
aas
cld
int3
push
fstl
out
lds
fadd
fs
scas
adcb
popf
adc
les
sbb
int
adc
and
inc
jmp
es
cwtl
xor
sbb
dec
mov
or
sbb
aaa
inc
cmpb
fldenv
xor
add
mov
sbb
and
insl
add
shl
dec
sub
adc
leave
pop
sbb
pop
scas
loopne
sbb
jl
pop
or
dec
pop
cmp
xor
fsub
adc
rcrl
cmpsl
fsubs
test
sub
jo
iret
add
pop
leave
jbe
aaa
dec
adc
xor
movsb
add
or
addr16
cwtl
xor
jl
push
mov
in
cmp
sub
adc
aam
test
pop
cmp
push
fldt
inc
daa
and
inc
and
aam
sbb
jecxz
bound
dec
adc
adcb
mov
mov
stos
addb
xchg
ds
dec
or
shlb
jo
popf
into
mov
cmc
nop
sbb
cmpsb
sub
push
inc
cmp
pop
push
pusha
nop
pop
roll
imul
movsb
iret
sarl
push
add
push
pop
lcall
inc
dec
jnp
test
sub
cmp
inc
in
adcb
aam
xchg
add
ret
or
in
pop
inc
sbbl
push
imul
or
inc
test
addb
daa
add
pop
jne
mov
cmp
fsubl
add
jl
jg
aaa
dec
std
xchg
dec
leave
and
mov
push
movq
cmp
les
repnz
inc
cmp
pop
xchg
adc
cmpl
call
das
ret
cmp
jnp
jmp
adc
pop
push
cmp
push
ret
sbb
testl
jo
push
jl
sbb
aam
pop
inc
cmp
sbb
push
mov
sbb
or
std
fnstcw
add
cmp
sbb
mov
xor
dec
outsl
xor
mov
jae
push
mov
pop
sti
inc
mov
xlat
ficomps
fimuls
and
in
scas
inc
stc
es
pop
mull
jns
test
mov
pop
mov
xchg
pop
push
lahf
mov
lcall
xchg
jne
xor
jg
ret
add
frstor
push
add
pusha
sub
adc
xchg
or
push
xor
lock
popa
mov
sub
mov
in
incl
and
bound
dec
ficoml
jb
in
hlt
sub
jo
adc
and
ljmp
mov
jb
add
jecxz
data16
add
call
out
lcall
in
aad
sbb
fs
outsl
adc
out
push
int3
js
dec
xchg
bound
mov
fldl
sub
mov
adcb
in
jno
xchg
mov
cltd
sbbb
pop
jle
adc
lahf
xor
sbb
adcl
fcoms
jne
rcrb
jno
pop
in
cmp
pop
loop
sbb
lcall
cmp
das
iret
adc
or
andl
adc
dec
insb
adc
sub
movl
and
cwtl
es
lsl
shlb
dec
jmp
inc
xor
mov
inc
ja
arpl
add
jb
adc
xchg
in
xchg
add
sub
pop
adc
cs
lar
xchg
jbe
insb
or
outsb
inc
push
icebp
loope
adc
push
cli
in
pop
es
ret
mov
lods
popa
push
xchg
sub
lret
imul
rcrb
loop
shll
mov
and
movsb
push
push
sub
int
jmp
movsl
iret
mov
pushf
push
or
pop
add
push
cmp
add
push
inc
loop
sbbb
adc
mov
xor
and
pusha
lods
fcmovbe
xchg
cmp
xchg
pop
jp
sbb
movsl
cli
adc
fisttpl
add
idivb
cmp
and
and
add
je
inc
inc
loopne
outsl
aam
sub
pop
in
mov
cmp
sbb
mov
mov
xor
push
sar
fs
fimuls
cld
dec
push
or
pop
dec
inc
mov
scas
mov
call
or
add
aas
jae
add
subl
popa
pop
cs
push
rorl
pop
cmpb
andl
cmpsl
push
stos
or
jmp
push
sub
mov
mov
mov
push
sub
lea
sub
sbbb
mov
pusha
mov
ss
je
xor
pop
shl
sub
and
ret
ret
scas
inc
pushf
mov
cmp
add
repz
das
push
push
mov
jne
insb
cwtl
jno
sahf
in
adc
xor
jmp
add
mov
test
out
xor
ret
dec
pop
push
fwait
xchg
test
lahf
je
ret
pop
jns
fsubrp
add
pop
add
and
cmp
jne
xchg
imul
std
int3
push
mov
add
adc
sti
jmp
sbb
insb
mov
cmp
add
cmp
cmp
sub
jl
je
xor
divl
push
sarb
add
sub
cwtl
jmp
add
int3
push
add
ja
dec
rclb
or
mov
mov
sub
sbb
shll
js
and
mov
shl
pop
sub
outsb
mov
in
mov
adc
xorb
clc
add
ja
cmpb
inc
push
into
inc
shr
mov
int3
std
or
insl
add
add
cmpsb
push
sub
sub
cmp
inc
test
lea
jae
fmuls
enter
push
cmc
push
stc
test
dec
ds
xchg
inc
inc
out
iret
dec
inc
dec
loop
in
inc
dec
test
js
sub
cmp
push
push
mov
inc
lea
push
inc
xor
jne
ret
sbb
loopne
or
mov
xchg
add
jmp
xor
jns
in
adc
xor
test
push
repz
inc
dec
ja
xor
lcall
lds
push
fildl
push
das
jmp
insl
testb
push
xor
jmp
and
lcall
xchg
movsl
push
sbbb
pop
out
aam
aam
lret
js
pop
xor
xor
rol
out
adc
mov
xor
xor
xchg
lock
add
je
or
or
sbb
call
ss
aad
or
jae
fisttps
adcl
into
ja
scas
mov
das
clc
and
inc
xor
push
mov
or
stc
or
mov
inc
or
movsl
sarb
divl
imul
or
aaa
out
int
imul
pop
adc
pop
addb
xchg
testb
xor
jne
data16
in
adc
adc
or
jns
jno
adc
jbe
or
or
xchg
test
inc
subl
or
sbbl
push
test
push
adc
pusha
sbb
xchg
push
iret
inc
add
add
push
orl
push
clc
cmp
push
popf
lods
sbb
ss
and
test
pop
mov
and
mov
jnp
subb
cld
cmp
je
adc
int
mov
push
out
cmp
idivb
stc
mov
pushf
inc
movsb
xchg
mov
sbb
aaa
sbb
mov
push
mov
push
pushf
jne
add
das
push
pop
insb
bound
push
pop
sysenter
push
cmp
dec
mov
push
and
cmc
ret
aas
cmp
daa
lods
inc
cmp
and
adc
xor
jecxz
ret
adc
inc
sbb
add
cmpsb
subl
adc
nop
sbb
inc
cmp
rorb
cmp
lret
mov
xor
push
jo
sub
or
or
daa
lods
pop
rclb
push
inc
adc
in
mov
push
or
lahf
ret
xor
insl
inc
scas
and
pusha
xchg
nop
js
sahf
test
jecxz
cld
jle
pop
add
pop
dec
dec
inc
aas
cmp
sbb
sub
jle
or
add
loop
repz
jmp
insb
add
xor
movsb
aad
js
and
out
repnz
fcoms
jecxz
xor
icebp
mov
inc
pop
shlb
idiv
and
xchg
inc
movsl
inc
xchg
push
pop
xchg
loopne
pushf
dec
push
int3
inc
mov
xchg
push
mov
adc
cmpsl
jge
daa
rorb
lahf
nop
ss
call
sub
test
lcall
mov
cltd
lods
push
js
aaa
sub
mov
addb
das
fisubs
add
or
dec
dec
stos
leave
sub
lods
xchg
sub
mov
and
imul
in
imul
cmp
and
inc
push
aad
popa
cmpsl
mov
adc
test
mov
sbb
adc
mov
push
in
or
adc
aam
push
dec
into
and
cwtl
imul
mov
dec
sbb
test
lock
add
loopne
je
fisttpl
xor
push
insb
fisubrl
lods
and
cli
in
jo
add
mov
push
loopne
outsl
lods
adc
hlt
jmp
and
mov
xchg
xor
xor
or
adc
lods
lcall
lods
sti
mov
push
xchg
mov
sub
cwtl
insl
pop
or
mov
push
testb
addb
popa
enter
sbb
xor
aam
xlat
nop
add
add
pop
and
and
xor
cwtl
sub
das
lcall
sahf
xor
xchg
popa
aaa
inc
stc
call
mov
ret
or
js
sub
inc
push
ret
outsb
push
lea
sbb
xlat
jmp
xchg
mov
pop
test
movsl
rol
orl
cmpsl
adc
fadds
cltd
xchg
add
lea
cli
jmp
add
xchg
xor
mov
add
or
inc
cmpsl
insl
dec
xchg
xchg
or
cmp
or
inc
cwtl
cmpsb
ret
shll
in
loope
ret
cmp
jne
stos
ds
jo
test
push
dec
sbb
imul
and
mov
lds
push
add
repz
in
imul
push
xchg
cmc
scas
rolb
cltd
jb
rcll
xchg
orb
inc
mov
add
stos
insl
sbb
in
inc
or
xchg
stos
call
test
push
mov
addr16
push
out
scas
stos
pop
addb
movl
pop
cmp
movsl
mov
mov
movb
or
inc
inc
or
popa
leave
inc
add
add
xor
add
pop
cmp
add
insb
daa
cmpl
ror
aaa
sbb
jge
xor
das
add
inc
dec
jmp
jge
xor
push
and
xchg
xchg
jns
cmpb
ror
xor
or
pop
or
push
pop
and
inc
sbb
add
arpl
fldenv
in
mov
ret
push
xor
pop
pop
aam
iret
push
mov
mov
xor
lret
insl
xchg
rcrb
cld
add
sub
sub
loope
mov
or
in
pop
in
push
imul
xor
insb
fnsave
lods
add
adc
pushf
dec
xor
add
add
pop
jnp
sub
sbb
loopne
push
ds
dec
inc
jle
jmp
shll
cmpb
dec
sub
inc
jbe
jecxz
scas
sub
or
cmp
inc
pusha
and
sbb
xchg
popf
add
invlpg
cmp
jne
inc
push
jb
outsl
xorb
sbb
in
aaa
pop
cmc
fcoml
jmp
cmpsb
dec
dec
lds
sbb
adc
xchg
lods
xchg
scas
data16
lcall
sbb
push
cmp
jne
inc
ss
mov
sub
leave
sbb
jnp
xor
mov
jne
movsl
cmc
inc
nop
and
into
push
jmp
sbb
ljmp
and
test
adc
js
lds
adc
hlt
jle
das
cmp
jl
cld
xchg
stc
sbb
xor
jmp
jmp
xchg
std
or
inc
sbb
mov
jns
ret
adc
jne
mov
cmpsl
push
ret
idivb
sbb
clc
hlt
cmp
fadd
mov
add
push
jb
jbe
adc
fisubl
mov
je
push
jo
shlb
push
rcrb
add
mov
mov
push
or
push
imul
dec
scas
dec
push
jo
inc
lods
imul
addl
dec
xor
add
and
shlb
sub
and
andl
jle
adc
add
mov
shll
add
mov
mov
cmp
test
adc
in
pushf
inc
mov
lahf
fcoml
test
ds
and
sub
out
fs
add
push
loopne
inc
add
cld
test
out
dec
outsb
arpl
mov
jg
adc
aaa
mov
imul
iret
mov
xchg
out
mov
inc
or
add
lods
lret
dec
les
jns
lcall
mov
dec
loopne
adc
add
push
adc
test
or
mov
mov
xor
loopne
and
jo
jb
mov
inc
in
sub
push
and
dec
je
sub
out
jae
scas
loopne
in
push
push
and
or
stos
insl
arpl
or
in
shrb
sbb
mov
mov
sub
sub
nop
xchg
pop
bound
cltd
add
or
pushf
adc
aad
or
sbb
xchg
xchg
xchg
inc
adc
clc
add
or
lock
jo
mov
pop
pop
das
inc
push
adc
pop
push
insl
outsl
gs
xorb
rol
in
loop
add
fidivl
dec
adc
cmp
push
add
push
push
cmp
sbb
jecxz
arpl
adc
test
sbb
mov
add
das
mov
xor
mov
lds
into
std
adc
inc
imul
or
pop
mov
pop
ds
rclb
es
pop
mov
add
mov
mov
je
add
dec
add
imul
lahf
clc
add
or
pop
xchg
add
in
sbb
dec
jbe
pop
add
cmp
in
sbb
push
pop
pop
jnp
mov
push
push
in
sub
adc
adc
andb
stos
cmp
ret
nop
xchg
pop
xor
or
sbb
shlb
das
imul
dec
or
xchg
add
adc
aas
xor
add
push
mov
xlat
jno
mov
movsb
mov
or
cmp
adc
mov
fdivl
or
push
outsl
mov
aas
add
or
cmpsl
dec
aaa
imul
add
sbb
out
mov
das
mov
pop
xchg
movsl
fbld
mull
invd
jmp
sbb
mov
cmp
loope
int
daa
xor
movsl
mov
stc
inc
adc
jb
les
jle
test
rorw
inc
pop
adc
xor
xchg
adc
dec
outsb
jno
mov
fldenv
add
mov
sbb
dec
pusha
out
mov
setno
dec
outsb
jne
sbb
stc
jge
popa
js
mov
xchg
dec
xacquire
add
cmp
nop
nop
cs
add
cmp
lret
pop
cmpsb
cmp
jo
addr16
cld
mov
in
jo
adc
xchg
sub
cmp
gs
add
lea
subb
mov
mov
in
and
push
outsl
cmpsb
fdivl
inc
fsubrs
pop
sbb
cmpsb
fmuls
fs
mov
push
jb
push
out
pop
stc
insl
popa
jb
or
xchg
fwait
icebp
sbb
es
push
outsb
adc
cmpsl
sub
or
addl
faddl
mov
or
pop
aas
inc
inc
xorb
lea
lds
cmpsl
sbb
mov
or
imul
loop
push
iret
pop
or
mov
add
stc
pusha
and
ficoms
xchg
jne
jns
add
outsb
dec
jbe
pop
inc
pause
xchg
inc
add
dec
or
popl
add
push
dec
mov
sub
pop
insl
add
xor
outsl
in
inc
vroundsd
insl
pop
add
inc
popa
mov
movsb
leave
int
std
pop
aaa
ret
xchg
mov
in
add
test
pop
stos
shl
insb
push
ds
clc
testb
daa
stc
add
add
push
fnstenv
sbb
outsb
add
add
mov
inc
or
testl
add
je
loop
mov
jecxz
out
xchg
push
enter
in
in
cmpb
pop
mov
push
cld
movsb
sti
pusha
testl
add
lods
loopne
or
mov
push
jl
sbb
push
ljmp
outsl
iret
xor
scas
cmp
movsl
and
push
fs
cmp
xor
add
mov
xorl
cmp
pop
jmp
adc
adc
or
clc
std
int
add
adc
push
add
adc
ds
inc
mov
mov
adc
jo
pop
lea
fwait
adc
adc
sbb
mov
lock
call
mov
pushl
scas
ljmp
lods
ljmp
shl
into
stos
mov
dec
push
sub
pop
or
xor
rorl
lods
inc
pop
or
sbb
lcall
movsb
int
lcall
adc
or
push
or
pop
push
dec
or
pop
xchg
push
inc
pop
xor
in
out
or
aam
repz
lock
cmc
sub
lcall
adc
or
xor
shlb
es
add
fimull
rolb
xchg
loop
push
cmp
inc
loopne
pop
or
ljmp
out
insb
lods
mov
pushf
out
mov
in
pop
adc
xorb
inc
js
leave
fcoms
lahf
pop
and
loopne
cmp
cs
dec
adc
add
rcrl
and
test
jnp
lock
or
ret
popa
movsb
lret
stos
mov
lods
or
call
sbb
jno
inc
pop
and
in
adc
add
inc
outsl
mov
bswap
mov
dec
cwtl
sldt
push
loopne
add
or
add
inc
insb
imul
fwait
inc
call
add
cmp
jnp
out
adc
je
push
pop
or
jno
pop
or
lds
add
xor
xor
push
inc
or
sub
jecxz
sub
pop
test
int3
mov
dec
pop
das
jb
pop
in
cmpsb
and
inc
out
or
ret
lcall
lods
adc
aas
cmp
pop
xorb
cmp
ds
sbb
sbb
arpl
pop
je
push
push
mov
in
or
int3
sbb
add
sbb
dec
cmp
dec
mov
xorl
lea
call
mov
adc
outsl
aam
sbb
add
push
leave
pop
jb
xchg
in
push
rcrb
adc
rcll
pop
je
inc
rclb
inc
pop
mov
fisubrl
cmp
movsl
imul
push
fldenv
inc
les
inc
cmpsl
ret
jmp
add
push
jae
push
lods
rolb
lods
xchg
fdivs
xchg
jbe
addr16
mov
push
and
and
lods
adc
negl
pop
and
and
cmp
cltd
fwait
push
inc
and
add
mov
fadds
pusha
and
idivl
jp
loop
or
fbld
add
inc
pop
mov
rorl
cmp
dec
out
xorb
push
cmp
jno
xor
mov
clc
or
roll
loope
inc
jno
and
incl
push
adc
shrb
pop
pusha
nop
or
into
jae
and
cltd
add
clc
icebp
dec
ja
or
sbb
add
sub
adc
cmpsl
jbe
ja
inc
cmp
sbb
jl
sbb
xchg
and
pop
xor
xor
lcall
fs
dec
push
in
ja
cmp
xor
ret
and
add
insb
sti
imul
hlt
push
push
mov
or
push
imul
jae
data16
inc
and
sub
movsb
lret
sub
sub
clc
sub
hlt
cwtl
mov
sbb
inc
inc
sbb
cs
and
mov
rcrl
rorb
aas
fs
pushf
cmp
ss
dec
mov
and
int
mov
fwait
jge
dec
fimull
jge
int
cmp
gs
inc
dec
sbb
cltd
add
in
cmp
cs
cmp
cmp
and
cmp
inc
insl
jb
dec
lea
sub
mov
movsl
pop
pop
cmp
test
pop
push
cmp
inc
pop
insb
dec
adc
mov
mov
pop
popa
sub
clc
shlb
fadds
dec
cmp
outsl
add
xchg
and
sbb
xchg
cmpsl
mov
or
fmull
enter
add
or
loopne
and
push
xor
dec
inc
add
cld
test
adc
pop
sbb
xor
add
or
push
rorb
push
or
rolb
cltd
int3
inc
inc
add
mov
nop
xor
inc
imul
iret
mov
fadds
jnp
and
dec
daa
and
out
or
jns
mov
mov
cmc
adc
inc
push
jbe
inc
fbld
push
and
mov
dec
nop
fcoml
call
nop
mov
or
adc
lock
lock
cmp
xchg
pusha
or
or
mov
pop
insb
rolb
dec
add
daa
or
mov
movsl
repnz
dec
add
and
or
test
inc
and
aas
add
fsubs
fcoms
cmp
dec
sbb
rolb
loopne
ret
adcl
inc
push
xchg
notb
add
push
pushf
and
aam
rorb
rclb
mov
dec
mov
or
xchg
fcoms
movsb
cmp
dec
loopne
add
ficomps
clc
cmp
sbb
mov
inc
dec
inc
jmp
add
ss
dec
mov
xchg
rclb
pop
stc
and
rolb
pop
clc
add
jb
add
xchg
imul
in
xchg
out
push
adc
mov
pop
rolb
pop
and
add
sahf
imul
mov
lock
cmpsb
andl
sbb
or
or
scas
mov
pop
jl
test
aas
add
jl
add
mov
repz
inc
lock
iret
or
imul
pop
and
in
insl
fwait
mov
pusha
push
int3
lods
popa
mov
pop
sub
pop
cmp
push
and
pop
pop
mov
or
nop
sahf
filds
ds
sbb
iret
or
pop
cmpsb
mov
mov
mov
add
outsb
sar
add
push
inc
or
mov
pop
inc
adc
sbb
scas
push
bsf
adc
je
inc
xchg
testb
pop
ds
mov
das
adcb
ds
add
and
cmp
cmp
push
xchg
mov
add
xchg
jl
sbb
mov
mov
popw
and
stos
adc
add
mov
xchg
cmpsl
imul
in
fisttpl
adc
cmp
fstl
jmp
push
je
and
orl
add
fs
movsb
sbb
or
fs
add
aad
xchg
xchg
or
adc
push
xchg
cmp
es
adc
xor
add
mulb
out
insb
jb
lahf
in
sub
rorl
adc
fwait
inc
rcrl
popa
mov
cmpsb
jae
hlt
outsb
dec
sub
addl
insl
jb
negl
shlb
add
mov
les
push
sub
insl
jne
ret
jnp
incb
jnp
out
xchg
jb
sub
call
or
fidivs
pop
je
push
sbb
rorb
rcr
inc
test
pop
ret
fidivs
mov
cmpsb
loope
cltd
je
mov
pop
xchg
mov
mov
leave
cmp
je
jmp
pusha
sbb
and
and
sbb
inc
pop
and
or
mov
mov
icebp
push
les
lcall
push
mov
daa
es
nop
dec
loop
outsl
mov
enter
xchg
jmp
mov
inc
pop
ret
push
jp
idivl
paddw
push
repnz
add
adc
jbe
popf
test
add
jo
mov
push
out
sub
sbb
or
lds
cmp
sti
test
and
mov
inc
das
add
push
inc
xchg
flds
fs
and
scas
xlat
lock
xchg
data16
std
jge
or
adc
add
adc
lcall
adc
xlat
adc
lods
into
cwtl
int3
cmpsl
pop
pop
adc
adc
xchg
xchg
repnz
movsb
testb
sbb
and
enter
or
xchg
ss
adc
xchg
add
jns
or
push
xor
rcrb
xor
lds
ja
mov
ret
push
ja
xchg
add
mov
divl
ret
pop
imul
je
xchg
add
ret
and
mov
addb
aad
pop
mov
jge
push
outsl
cmp
add
mov
adc
or
mov
mov
or
enter
and
inc
add
or
jge
popa
sub
aas
sub
pop
inc
add
adc
pop
repnz
inc
orl
cvtpi2ps
pop
inc
xchg
mov
int3
push
adc
lret
hlt
or
imul
xchg
mov
lods
or
xchg
or
mov
xchg
dec
push
lds
dec
outsl
inc
push
sub
add
lods
push
das
js
dec
xor
sub
sub
daa
sbb
push
jg
pop
add
les
inc
popa
pusha
sub
inc
and
enter
jno
add
add
mov
sbb
xor
push
hlt
ss
mov
dec
inc
dec
outsb
dec
outsb
lret
add
inc
dec
roll
xchg
dec
push
push
or
shrl
cmc
rcrl
mov
xchg
sub
sarb
or
sub
mov
stos
add
pusha
push
push
cmp
or
jmp
sub
jbe
push
rolb
sbb
inc
add
adc
pop
in
in
fcoml
sub
jo
push
and
dec
adc
add
shrb
or
pop
repnz
inc
add
lock
jnp
xchg
mov
mov
inc
inc
outsl
fmuls
inc
sbb
cmp
sti
pusha
adc
mov
icebp
sahf
sub
mov
js
sbb
dec
push
aam
lahf
push
pop
hlt
neg
jmp
arpl
inc
push
jne
je
sub
lods
inc
jg
adc
cmp
fwait
push
sub
adc
test
ret
inc
pop
or
mov
mov
push
icebp
int3
rcrb
push
enter
imul
push
dec
inc
test
imul
cmp
fstps
push
aam
sbb
mov
ds
mov
add
add
insl
push
inc
push
in
add
add
jp
xor
and
cmpsl
jne
push
js
lret
dec
xor
adc
notb
lea
xor
cmpl
inc
clc
pop
fcmovnb
notl
sub
push
adc
inc
mov
inc
or
dec
cmp
adc
xchg
sbb
lcall
mov
cmp
sub
mov
pop
jge
rclb
orb
sub
ljmp
add
xor
jbe
call
and
dec
leave
aad
adc
inc
test
jmp
mov
dec
mov
or
je
ss
jmp
pop
and
lock
adc
fmuls
ficoml
dec
cld
jmp
xchg
add
or
sub
xorb
lret
cltd
mov
shll
add
and
movsb
sbb
fdivrs
cmpl
pop
jle
push
dec
inc
test
cmpb
fs
push
inc
adc
lcall
sbb
sub
dec
push
movsl
adc
fs
adc
cmp
push
andb
mov
jne
xor
sbb
sub
add
dec
add
inc
addr16
mov
dec
rcrl
sbb
sub
or
pop
dec
inc
rolb
cmpsb
xor
sub
cwtl
sub
add
mov
pushf
mov
fsub
shlb
popa
and
sub
insb
xchg
rclb
mov
add
insb
cmp
test
je
pop
das
rorb
gs
jl
mov
lret
pop
mov
je
cmp
inc
mov
mov
cmp
sbb
or
cmp
or
or
inc
push
nop
imul
setno
in
xor
xor
xor
out
je
mov
outsl
add
mov
mov
add
and
test
jge
ret
ficompl
xor
cmp
ja
arpl
add
cmp
mov
pop
mov
addb
sub
jmp
std
xor
sbb
jne
fcompl
and
inc
paddq
add
pop
shll
push
xor
inc
cmp
inc
leave
xchg
dec
xor
xor
ss
push
sub
inc
dec
mov
or
add
lea
mov
sub
icebp
mov
mov
mov
mov
mov
inc
add
lret
push
ret
jae
or
ret
loop
push
out
adc
or
adc
mov
and
or
notb
cmc
and
fisttpl
xabort
jo
sti
lea
and
add
add
insb
stos
add
cmp
sbb
mov
pop
mov
xchg
mov
rcrl
movsl
and
mov
popf
mov
or
cmpsb
xor
orl
fcom
mov
sub
inc
sbb
xchg
test
and
xor
xchg
add
std
sbb
arpl
das
nop
push
add
add
sbb
lfs
loope
jmp
xchg
ds
repnz
js
mov
or
mov
mov
in
add
lock
nop
rorb
out
aaa
adcb
xorb
sub
movsb
jno
insb
cvttps2pi
mov
adc
add
fistpl
and
lock
out
ss
arpl
ss
test
xchg
sbb
or
jmp
icebp
push
addl
or
rclb
cmp
mov
mov
adc
dec
ja
xchg
pop
je
mov
sbb
shlb
inc
sub
stos
outsl
sbb
nop
loopnew
or
or
mov
ja
sbb
xchg
fstps
or
outsl
pop
movsb
out
sbb
test
test
push
inc
and
or
sbbb
or
mov
mov
mov
sahf
int
inc
xor
jmp
dec
outsl
or
and
and
movsb
add
dec
icebp
rclb
test
sbb
pushl
add
outsb
leave
push
cwtl
or
shrb
loopne
cld
rcl
push
aaa
es
or
mov
jmp
pop
cmpsb
orb
or
dec
push
out
inc
add
or
sbb
cwtl
lea
adc
or
adc
push
sub
push
or
push
mulb
adc
dec
rolb
ret
push
xlat
outsl
or
lds
sbb
out
sbb
fdivrs
mov
pop
push
jg
mov
dec
ja
mov
imul
sbb
shrb
or
sub
xchg
or
fidivl
cs
jge
adc
push
je
or
std
adc
jle
or
rcl
cmp
fstpl
add
adc
in
or
jb
xchg
in
add
mov
inc
inc
dec
repnz
roll
mov
incl
subb
mov
cmpsl
and
add
ljmp
movsb
push
add
push
outsb
add
mov
mov
xchg
jne
aam
stos
mov
xlat
pop
aam
dec
push
inc
mov
mov
dec
sarl
or
adc
push
and
push
adc
pop
inc
iret
mov
ds
test
inc
xor
movsb
mov
popf
nop
add
ret
into
shll
dec
push
adc
movsb
mov
cmp
enter
cmpsl
sbb
fadds
loopne
pushf
aas
mov
lea
sub
add
lock
inc
lods
pop
mov
mov
and
pop
inc
int
push
imul
jno
add
or
add
push
adc
dec
add
and
sbb
das
push
xlat
dec
arpl
adc
cmp
rcrl
pop
jg
mov
dec
ds
add
fdivrs
ret
mov
dec
add
adcl
sub
ficomps
lahf
in
cmp
test
xlat
addb
pop
cmpsb
jbe
push
adc
lods
dec
test
rcll
pop
xchg
repz
jo
add
push
lods
xchg
xor
mov
mov
movb
xor
pop
xor
cltd
dec
sbb
mov
add
rcrb
rcr
lds
dec
insl
fs
adc
dec
jnp
pop
cmp
icebp
testb
ret
push
mov
es
stos
dec
sbb
add
inc
loope
adc
mov
sbb
jnp
and
repnz
mov
cmp
lock
xor
or
add
test
inc
cmp
mov
ficomps
orl
add
sbb
mov
and
loope
xchg
cmp
pop
or
cmp
mov
lcall
sbb
add
mul
or
push
xor
mov
mov
outsl
xchg
push
sub
mov
add
jo
or
pop
mov
pop
pop
add
sub
data16
sbb
addl
or
and
mov
mov
pop
push
jl
test
xchg
ds
mov
ret
lret
test
dec
inc
add
mov
dec
jecxz
pop
cmc
stos
cli
mov
or
dec
aaa
mov
xchg
xchg
lcall
add
inc
lods
scas
imul
jns
mov
sbb
dec
jecxz
add
mul
shl
pop
les
add
int
adc
push
push
add
xchg
aas
gs
inc
into
xchg
test
sarb
add
or
pop
xorl
int
dec
mov
cmp
add
add
mov
iret
cmp
neg
inc
inc
inc
cs
ret
in
jae
dec
fiadds
jp
rcll
add
andl
jne
mov
pop
adc
incb
dec
rorl
pop
ja
fldl
test
sub
in
inc
xchg
mov
orb
adc
ficoms
clc
and
pop
insl
dec
jp
jle
jne
leave
cli
ss
fs
add
js
adc
pop
inc
scas
xchg
sbb
xchg
test
sbb
fbstp
jmp
adc
outsb
jo
pop
push
pusha
dec
test
iret
and
xlat
xchg
xchg
nop
sbb
ss
or
movb
jp
fwait
mov
mov
adc
and
sbb
cmp
xor
xlat
enter
adcl
xor
inc
adc
or
shll
push
cld
pop
add
daa
push
pop
xchg
data16
mov
jmp
sbb
jnp
cmp
sahf
insb
gs
mov
inc
out
hlt
repnz
xor
les
fdivrl
jo
rcrb
aaa
add
and
in
mov
not
sbb
pop
leave
mov
or
pop
enter
inc
push
aad
dec
inc
nop
adc
pop
xor
dec
cmp
sub
insb
loopne
fists
cmpsb
xor
mov
mov
movsb
shrb
and
mov
mov
lods
bound
or
insl
and
push
call
icebp
add
and
xchg
das
pop
cmp
js
adc
cmp
loopne
mov
adc
dec
inc
and
mov
fwait
pop
and
pop
adc
and
outsl
jb
inc
add
mov
mov
xlat
scas
aad
sbb
in
cwtl
sub
jo
pop
bound
xor
and
hlt
dec
cmp
insb
and
lock
cmpsb
int3
and
push
push
das
xchg
sbb
lahf
test
mov
pop
push
loope
pop
pop
arpl
adc
pop
mov
les
aam
and
add
pop
xchg
outsb
adc
sbb
repz
dec
mov
rolb
lods
add
sub
jp
fs
mov
sbbl
pop
pop
loope
cmp
xchg
cmpb
sbb
add
orl
outsl
icebp
push
inc
in
mov
jno
ret
sub
push
xor
xchg
push
ret
xor
xchg
add
nop
add
into
add
mov
mov
sub
enter
enter
inc
rcr
mov
and
mov
pop
lahf
add
cmp
xchg
mov
add
adc
inc
imul
push
push
mov
or
ret
sbb
mov
add
mov
fisubrs
add
fidivrl
pop
or
ss
xchg
xor
icebp
incl
jb
push
sarl
mov
and
jne
or
sbb
add
inc
push
cmp
cwtl
or
movsb
sbb
sbb
pop
movsl
mov
push
cmpl
js
nop
test
bound
add
inc
loope
sbb
inc
xlat
dec
in
sbb
add
outsb
imul
mov
adc
mov
sub
mov
add
mov
sbb
mov
int3
rol
sbb
int
xor
insb
mov
or
testb
roll
sar
and
xchg
cmp
jno
adcl
push
mov
cmp
test
cmp
push
popf
mov
daa
or
jns
flds
sub
pop
xor
dec
mov
cs
and
xor
mov
imul
xchg
sub
test
or
adc
movl
arpl
sub
and
test
psrld
or
jmp
or
insl
in
ret
push
je
add
push
loop
popa
outsl
dec
or
xchg
outsb
sahf
lcall
push
pop
lret
dec
add
adc
test
pop
punpckhwd
xor
mov
sbb
aaa
sbb
test
jne
inc
out
add
es
pop
in
inc
and
sbb
and
mov
inc
xor
cmpsb
pop
xchg
push
xchg
repnz
es
fcomi
inc
mov
mov
and
repnz
hlt
and
inc
add
or
cmc
push
test
cmpsl
and
xor
out
test
bound
add
mov
add
add
imul
sub
popa
add
inc
adc
adc
adc
mov
dec
jnp
cmp
or
adc
inc
dec
lea
add
call
inc
in
clc
cmp
les
jb
movsl
out
hlt
in
lods
add
gs
or
aas
sub
push
adc
ja
push
insl
ljmp
jae
ds
inc
push
hlt
nop
add
and
mov
add
xchg
lock
jmp
xchg
lock
lea
adc
push
test
jmp
sarb
lock
jmp
ss
inc
lock
mov
les
in
data16
cmp
xor
and
cmp
or
adc
adc
add
adc
xor
push
sbb
pusha
jmp
add
adc
pop
aam
add
fwait
orb
mov
jecxz
mov
and
lcall
jbe
add
add
dec
repnz
jl,pn
sbb
dec
cwtl
out
add
movsb
pop
inc
add
mov
stc
clc
fdivl
rorb
ljmp
nop
movsb
rclb
daa
mov
fildl
sahf
xchg
popf
andl
and
dec
movsb
xchg
test
push
aam
inc
xchg
add
nop
mov
add
dec
mov
leave
dec
daa
mov
fptan
inc
pop
pop
shr
adc
jmp
pop
xchg
ret
jmp
pop
enter
mov
test
add
add
clc
test
xchg
lea
mov
nop
jns
movsb
jns
repnz
out
inc
or
neg
xchg
movsb
neg
pop
lock
mov
push
xor
rorl
call
jo
mov
ret
fbstp
in
aaa
orl
cmp
rol
jge
and
jle
sub
push
adc
cs
ret
push
push
outsl
xor
and
insb
sarl
sub
dec
lea
arpl
scas
or
adc
cmp
fidivs
mov
xlat
enter
add
pop
pop
sbb
pusha
ljmp
cmp
pop
mov
nop
ss
das
insb
push
fdivr
es
aaa
mov
in
jne
dec
rcrb
add
add
and
add
push
xchg
xor
jne
out
mov
clc
push
xchg
or
pop
sub
fmuls
adc
out
or
jmp
addr16
je
adc
sbb
mov
and
mov
cli
mov
ret
popf
pop
inc
outsw
testb
popa
pusha
stos
sub
icebp
pop
and
aas
jnp
lahf
pusha
push
loopne
int3
adc
adc
mov
icebp
xchg
sub
arpl
cmp
inc
sub
and
fiadds
jne
sub
into
jmp
sbb
jno
in
movb
jno
mov
push
nop
cmpsl
movsl
sahf
or
cmpl
inc
rolb
scas
jo
ja
aaa
ret
jecxz
add
out
clc
sbb
mov
add
pop
sub
xchg
leave
xchg
mov
in
push
cmp
xor
mov
cli
jno
jae
cmpsb
shrb
adc
add
pop
es
mov
mov
imul
lea
xor
shl
jo
fnsave
out
add
jns
addr16
mov
leave
js
daa
subb
test
lock
fldt
sub
clc
lcall
ljmp
adc
or
roll
faddl
lcall
add
add
out
push
or
jno
xlat
pop
or
cwtl
je
setns
mov
lahf
ror
stos
xor
add
das
add
adc
adc
or
hlt
xchg
mov
xchg
arpl
jb
lret
cmp
sbb
add
cmc
imul
adc
stos
in
popa
xor
fmul
cmpb
cmpl
mov
dec
sub
andb
aas
and
orb
pop
or
rcll
jb
dec
sahf
test
push
fimull
adc
js
js
mov
push
mov
in
jno
inc
xor
test
jne
es
cmp
icebp
mov
mov
inc
dec
mov
hlt
inc
jo
sbb
lcall
loop
popf
cmp
fadds
fdivs
inc
sahf
pusha
clc
or
xor
xchg
xor
jne
jmp
cs
mov
or
ret
in
adc
inc
je
leave
mov
sbb
push
iret
pop
or
cld
or
ret
xor
dec
je
add
push
mov
ret
or
sti
inc
clc
je
cmp
mov
jnp
cltd
jp
insb
jmp
int
mov
test
inc
scas
sub
aad
pop
cltd
cs
stos
push
push
sub
arpl
or
out
dec
lea
adc
orb
aad
sub
cmpsl
cmp
or
push
inc
and
adc
cs
loope
dec
fsubl
mov
iret
nop
add
xchg
sbb
imul
ss
pop
add
hlt
adc
mov
mov
sbb
cmp
push
add
fwait
ja
mov
sarl
add
push
jo
test
jg
test
add
add
jnp
mov
pop
lods
add
inc
jo
ret
in
test
cmpl
push
nop
xchg
or
loop
scas
das
lds
js
sub
xchg
jge
mov
pop
and
negl
arpl
gs
jo
lods
pop
and
cld
sbb
sub
shl
xor
add
inc
add
and
ret
xchg
stos
mov
lock
push
push
movsb
inc
ja
add
outsl
enter
fsubrl
push
fsubrl
mov
cmp
mov
das
mov
subb
sub
add
or
jb
xchg
popa
imul
les
outsb
sbb
dec
cltd
mov
sbbl
jnp
jns
pusha
std
sbb
xor
pop
in
fmuls
or
push
lds
pop
add
push
cmp
push
subb
arpl
add
es
stos
mov
stc
and
sti
xor
or
dec
xchg
loop
sub
mov
or
es
add
add
and
pusha
sub
pusha
and
imul
lods
and
inc
cmp
xor
inc
lock
and
or
push
dec
leave
aam
push
adc
pushf
int3
mov
jo
in
adc
pop
and
cmp
inc
adc
bound
jnp
jo
pop
push
into
hlt
adc
fwait
insl
jge
and
fs
cmpl
push
add
andl
inc
dec
add
imul
dec
sbb
loop
iret
ds
dec
mov
out
test
or
rcrl
cmpsl
sub
rcl
sbb
punpcklwd
add
add
mov
cld
lods
cmp
mov
xor
stc
repz
cli
or
xor
push
pop
adc
testb
push
rolb
sbb
rolb
test
loopne
and
jne
adc
mov
dec
das
or
mov
xor
add
pushf
xchg
popa
or
inc
loopne
mov
in
mov
ficomps
cmc
loope
mov
fiaddl
cmp
lods
add
xchg
pop
inc
sbb
subl
inc
or
test
inc
fisubs
pop
add
and
stos
add
xchg
stos
ret
or
add
rclb
sbb
aas
add
mov
or
push
sbb
mov
jecxz
test
ss
pop
lock
movsb
fldenv
test
pushf
shrb
lahf
lahf
iret
add
nop
or
jo
pop
push
push
dec
sub
jl
rolb
das
cmp
les
repz
lea
outsb
cld
lea
xchg
mov
add
push
es
adc
data16
jmp
mov
fwait
adc
dec
push
or
dec
or
cwtl
xor
sbbb
addb
or
pop
cld
dec
out
out
movsb
mov
je
js
mov
imul
cmp
add
push
xchg
adc
pop
aam
dec
inc
dec
push
dec
sbb
fcoml
int
test
xor
and
aas
mov
and
jne
in
out
daa
lea
mov
mov
mov
fcoml
xchg
std
in
mov
lret
repnz
adc
adc
mov
lret
sbb
add
and
add
pop
es
and
sti
add
lea
add
imul
mov
mov
sbb
push
mov
out
addr16
pop
incl
idiv
dec
sub
xchg
mov
cmc
out
push
add
add
std
aam
or
push
jbe
or
and
fldcw
inc
xor
inc
xchg
test
mov
dec
pop
inc
cmpl
jne
fwait
xchg
inc
xchg
out
sub
lods
cmp
cmp
data16
lods
aam
adc
sbb
ljmp
mov
push
lock
lea
fbstp
ret
test
cmp
push
test
pop
movsb
sbb
ja
mov
adc
jmp
xor
push
adc
test
adc
xchg
and
out
cltd
dec
jl
mov
mov
repnz
out
testb
cs
or
and
or
sarb
scas
mov
xchg
jle
add
adc
sbb
jge
cwtl
and
xor
into
les
adc
sub
lods
dec
aas
out
or
in
pop
sbb
or
ret
jno
and
cmp
and
adc
sub
imul
loope
leave
cmpsb
push
stc
pop
lahf
jne
stos
add
add
sbb
push
pop
cltd
lcall
mov
sbb
mov
mov
and
daa
cmp
sti
in
xor
dec
add
xchg
push
mov
mov
jmp
out
jmp
and
sbb
adc
sbb
xor
lods
inc
aas
rclb
mov
add
fmuls
mov
imul
sbb
dec
roll
jne
fs
and
cmp
ret
dec
mov
insl
add
loopne
or
xlat
iret
xchg
sahf
pop
sub
adc
sub
cmpsb
js
sbb
xor
rolb
push
push
push
mov
inc
push
int3
mov
movsl
inc
push
mov
mov
add
mov
and
sbb
xchg
cmp
cmpsb
sbbl
xchg
mov
aaa
cmpl
rcrb
hlt
sbb
sub
mov
rorb
push
inc
stos
ret
or
push
mov
daa
ret
add
roll
sbb
out
adc
lahf
in
add
lods
mov
or
sbb
lea
or
mov
cmpl
jmp
and
inc
inc
je
ja
inc
cli
in
mov
cmpb
loop
xchg
push
add
mov
jns
mov
mov
sbb
shl
xchg
int3
lahf
adc
or
movb
mov
ss
ficoms
add
jo
mov
out
push
xor
add
lock
lods
pop
mov
xor
push
mov
and
mov
add
mov
leave
cmpsl
jo
mov
add
mov
adc
mov
shll
or
dec
insb
dec
repnz
xchg
mov
pop
rclb
push
mov
xchg
sti
sub
xor
lods
dec
jne
movsl
in
or
dec
test
nop
aam
add
or
push
in
jg
fiaddl
mov
sub
dec
mov
mov
xchg
inc
mov
xor
cmp
fcomip
test
push
pop
xchg
xchg
inc
test
insb
popa
das
mov
add
jne
arpl
mov
bound
mov
test
rorb
mov
xchg
add
cli
test
or
jns
xchg
jae
inc
xchg
sub
add
push
stc
lock
lea
sti
jmp
cmp
pop
not
in
movsb
lret
jne
cwtl
cmc
dec
popl
xor
lock
adc
jmp
and
mov
or
movsl
stos
jg
and
lods
and
jo
push
out
push
nop
pop
push
push
mov
leave
sarb
and
int3
ret
sub
push
cwtl
dec
mov
aam
fwait
add
test
icebp
es
xchg
xorl
add
dec
lock
add
jmp
dec
jnp
mov
outsl
pop
pop
aaa
movsl
and
pop
add
dec
mov
xor
pop
das
push
nop
mov
nop
dec
adc
or
add
pop
push
test
fnsave
fwait
add
inc
data16
ja
mov
loopne
inc
adc
hlt
scas
popf
rclb
dec
stos
outsl
dec
imul
outsl
and
xor
mov
and
push
and
pop
loopne
les
shlb
sbb
in
and
loopne
dec
inc
xor
add
int3
mov
fistpll
mov
fdivrl
xchg
movsb
inc
cmp
aam
or
adc
dec
roll
jns
jo
jae
in
jl
or
fisubl
pop
xor
or
clc
mov
add
pop
cld
add
jp
call
int
mov
sub
inc
or
add
add
inc
push
sub
cmp
lods
xlat
inc
mov
mov
sbb
mov
and
test
inc
mov
sub
push
xor
sbb
jns
aad
or
adc
inc
adcb
mov
dec
push
add
scas
push
lock
jp
mov
inc
and
push
dec
mov
add
data16
cwtl
pop
mov
push
in
xchg
sbbb
int3
jbe
es
aaa
inc
push
ret
mov
adc
push
or
nop
jp
or
inc
jae
push
mov
loop
mov
mov
shr
divl
and
dec
int3
daa
inc
inc
jo
cmc
imul
hlt
sbb
es
cmp
testl
fstl
or
fisubs
insb
cmpsl
jmp
xor
popw
adc
movsl
cmp
pop
or
adc
ja
iret
movb
fsubs
xor
xchg
adc
jmp
ja
in
mov
outsb
pop
push
dec
dec
js
pusha
and
add
jg
inc
add
pop
sub
cmp
push
into
inc
aaa
test
outsb
dec
cli
and
mov
sbb
mov
cltd
popf
mov
bound
and
daa
dec
add
cmp
cmp
leave
jmp
lods
jmp
and
out
add
or
movb
loopne
adc
cmp
xor
outsb
icebp
repz
adc
or
xor
sub
jne
push
add
mov
fdivrl
call
mov
sbb
sbb
rorb
sub
inc
enter
hlt
leave
add
xor
popa
push
mov
jne
loope
clc
fcmovnb
cltd
pop
sub
xor
ret
add
leave
xor
idivw
rcrb
xor
fcompl
or
bound
loop
add
roll
xchg
xchg
or
sub
and
adc
testb
out
jne
in
xor
sbb
adc
cmp
clc
mov
xadd
fcomps
sub
jmp
movsb
test
add
lock
inc
or
imul
adc
pop
lock
mov
out
dec
pop
xchg
test
or
push
and
xor
nop
in
jns
adc
mov
sub
or
repnz
inc
and
and
sbb
shr
mov
xchg
adc
pcmpeqw
sbb
sub
cmp
jge
sub
mov
adc
add
inc
jl
cmpb
and
jns
loopne
mov
and
adc
and
mov
push
sub
dec
cmp
pusha
leave
mov
loopne
lock
fwait
mov
and
dec
clc
dec
cmpsb
pop
cmp
lods
and
xor
leave
les
mov
sub
inc
push
push
pop
jmp
jl
les
stos
lods
push
push
jbe
xor
addr16
sahf
cs
jl
sub
mov
xor
inc
mov
mov
adc
ret
fmuls
sub
sbb
dec
adc
test
es
adc
xor
movb
sub
jb
repz
or
lea
and
inc
in
cmp
push
loope
loopne
aam
mov
sbbb
mov
and
adc
test
cmpb
and
push
int
add
les
jne
dec
lea
push
add
sub
sar
cltd
roll
aaa
xor
int
inc
test
xor
imul
insl
xchg
or
or
add
insb
push
arpl
dec
push
cmpsb
inc
jo
cmp
xchg
add
lea
int3
inc
lret
inc
adc
shl
ss
or
jo
jmp
ss
dec
pop
jne
sub
push
push
pop
push
loopne
daa
adcb
dec
add
xor
repnz
pushf
or
add
nop
mov
add
mov
pop
jge
and
adc
mov
ss
enter
sbb
sarb
jno
jmp
mov
adc
push
inc
cwtl
pop
nop
dec
cmp
pusha
lods
dec
add
xor
dec
inc
inc
lods
mov
andl
insl
ret
cmp
push
and
call
add
insb
sub
jne
or
bound
xchg
mov
loope
arpl
std
je
push
pop
daa
cs
outsl
movb
mov
dec
inc
popa
in
inc
cwtl
mov
adc
jns
mov
or
pop
or
sub
cmpsl
roll
lock
xor
or
inc
std
jmp
and
pop
xchg
stos
add
cmp
cmp
push
or
mov
xchg
dec
ss
ja
push
add
mov
jle
pop
ret
pop
pop
push
inc
rolb
popl
sub
inc
adc
push
push
cld
xlat
icebp
lret
or
push
inc
adc
movsb
aaa
xchg
xchg
stos
in
or
pop
push
xchg
in
mov
mov
orl
addl
sbb
je
and
inc
sub
or
pop
pop
pop
mov
mov
cmp
int
cmp
jmp
fisttpl
jmp
sbb
jne
or
adc
and
push
in
sbb
roll
lcall
add
fiadds
or
sbb
sbb
arpl
test
add
mov
pusha
add
pop
out
adc
push
add
sbb
sbb
adc
aaa
add
mov
jg
por
cmp
or
and
adc
mov
cmp
aas
sbb
mov
add
add
push
ror
push
mov
fwait
andl
add
sub
popf
jmp
mov
cmpsl
popa
fs
sbb
es
push
xchg
and
je
cmp
sbbb
arpl
fs
outsb
loopne
je
push
add
or
adc
lods
lret
pop
sbb
aas
sbb
add
add
mov
cvttps2pi
mov
js
dec
xor
mov
pushf
lods
mov
inc
adc
dec
gs
add
inc
dec
outsb
bound
sbb
outsl
sub
popf
jo
or
in
das
fs
cmp
dec
and
aas
push
jb
outsl
aam
xor
add
dec
or
sbb
daa
adc
sbb
mov
add
into
adc
fsubs
xor
xor
pop
imul
push
ret
paddw
adc
xor
in
test
fmulp
lahf
mov
xorl
pushf
sub
ljmp
push
inc
pop
push
and
call
xor
cmpsb
xchg
xorb
and
addl
pusha
sbb
inc
cs
inc
shlb
mov
test
arpl
mov
mov
lea
add
stos
adc
xchg
mov
lock
insb
rolb
pop
push
mov
lea
dec
xor
and
dec
xchg
lock
in
data16
push
xlat
sub
sbb
shl
sub
sarb
adc
jp
xor
addr16
add
test
sub
mov
sbb
or
and
repz
aam
pop
ret
add
adc
mov
dec
push
jle
xchg
pushf
lea
adc
cwtl
ret
shrb
mov
adcl
xlat
cs
sub
xor
test
sbb
push
test
pop
lahf
insb
dec
sub
or
lock
dec
mov
push
in
pop
pop
or
xor
lock
xchg
outsl
mov
xorb
popf
pop
push
cmp
adc
add
or
in
icebp
addb
shlb
xchg
ret
mov
xchg
push
in
mov
pop
xchg
inc
jp
push
stos
and
daa
add
push
push
out
lea
loopne
push
mov
mov
lahf
push
inc
mov
fbld
adc
movsb
aam
push
push
sbb
cmp
inc
jmp
push
dec
mov
push
ret
mov
pop
jge
mov
push
dec
pop
sub
sti
or
push
inc
cltd
sbb
sbb
gs
adc
and
lret
inc
xchg
iret
mov
gs
and
or
xchg
push
addl
push
inc
sub
fld
mov
call
pushf
push
cmp
sbb
imul
call
lret
adc
shlb
lea
into
nop
aam
or
paddsb
daa
loope
inc
sahf
fs
nop
in
mov
dec
mov
call
ret
and
je
fwait
testl
and
popa
mov
cmpsb
mov
into
dec
frstor
xchg
lret
popf
cmp
adc
xor
sub
add
lea
cmp
and
xor
outsb
push
mov
les
or
xor
aaa
adc
cmp
rorb
fistl
push
inc
aam
das
or
mov
cmp
fiadds
bound
or
daa
sbb
adc
cmpl
and
cwtl
inc
stos
jne
add
rolb
aad
es
aam
xor
push
adc
jp
mov
dec
cmp
adc
fcmovnu
push
and
inc
jg
subb
jmp
and
xorb
adc
adc
mov
sbb
je
pop
fldcw
push
inc
pop
enter
mov
in
mov
cmp
fildll
adc
cmpsl
mov
lock
pop
cmpsl
or
xchg
scas
jnp
add
or
cmp
sbb
decl
mov
imul
arpl
dec
add
pusha
sub
ret
fisubrl
scas
test
loop
in
jo
inc
and
inc
push
cltd
in
cld
cld
and
enter
cld
and
test
cld
inc
enter
add
push
add
scas
mov
push
adc
test
fidivrl
enter
inc
xor
sbb
loope
or
add
cmp
jmp
jg
enter
daa
pushf
mov
sub
sub
addr16
or
lahf
adc
fadd
and
xor
or
je
and
push
inc
scas
ficompl
lds
add
cld
fcomps
dec
add
pop
add
push
jns
in
inc
or
inc
xor
sub
popf
sbb
cs
pop
jl
sbb
xor
inc
lret
push
pop
shlb
add
mov
dec
leave
lds
mov
cmp
and
imul
mov
mov
adc
fstpl
js
adc
test
nop
inc
push
sbb
ficompl
fs
fldcw
pop
nop
push
inc
pop
mov
and
pop
lds
testl
vmovd
add
arpl
add
nop
dec
dec
dec
movb
sbb
add
pop
es
and
jne
push
push
and
nop
mov
xchg
dec
dec
ss
cld
cmpsb
xor
push
mov
push
sbb
shlb
and
fs
xor
jo
xchg
dec
test
inc
in
dec
test
imul
lea
fwait
dec
sbb
dec
adcb
or
int3
mov
sbb
add
rclb
xor
enter
xchg
iret
pop
xor
sbb
outsl
inc
pop
mov
insb
mov
cmp
or
jle
daa
cmp
mov
ljmp
inc
adc
jne
out
adc
dec
push
xchg
clc
addr16
movsl
mov
or
ds
rol
xchg
xor
shll
mov
gs
sub
push
gs
dec
jbe
pop
jg
ud1
dec
or
pop
sbb
test
inc
inc
mov
aaa
stc
mov
inc
add
dec
sbb
and
mov
pop
sub
mov
pop
cmp
or
mov
pop
adc
sbb
cmp
dec
ss
pop
lock
incl
push
sbb
jbe
popa
add
test
push
xchg
cmp
test
pusha
or
pop
mov
mov
mov
subb
lods
leave
adc
mov
testb
std
xor
outsb
jmp
stc
dec
shr
std
adc
sbb
imul
push
cld
cmp
push
out
jno
sbb
rclb
or
sbb
cmp
jecxz
pop
negb
mov
inc
sbb
test
enter
xor
dec
lea
sbb
inc
pop
adc
sub
fcmovnb
pop
push
adc
je
adc
inc
jge
and
outsl
jne
mull
das
js
insb
sbb
xor
scas
inc
lret
sub
je
push
lret
rorb
nop
cmp
int3
jne
lret
and
xor
pop
lods
std
mov
mov
inc
pusha
adc
push
in
cmpsb
push
push
xor
iret
les
cmp
jmp
add
dec
push
les
iret
dec
pop
lahf
fwait
cmc
pusha
daa
pusha
add
cmp
adc
rorl
cmp
cmpsl
mov
xor
mov
roll
or
mov
inc
jmp
mov
add
call
or
into
xor
pushf
loopne
or
pusha
jl
les
jnp
and
cs
loope
and
incl
sub
add
or
insb
repnz
sarb
cmp
xor
inc
pop
ret
mov
or
push
ret
lret
pop
and
push
sbb
pop
mov
and
or
adc
lods
cmp
mov
movl
daa
dec
lcall
xorb
mov
lods
movsl
mov
and
mov
out
dec
inc
pop
repnz
xchg
xor
xor
pop
inc
jo
sbb
push
repz
adc
sbb
inc
out
add
insl
mov
inc
add
fs
inc
out
inc
daa
adc
xchg
xchg
jo
mov
dec
testl
cmp
xor
addr16
pushf
jo
cltd
in
jmp
adc
imul
dec
les
insb
add
cmp
sub
cwtl
shl
out
jae
das
fbstp
dec
jl
mov
rolb
push
movsb
pusha
add
repnz
xor
lahf
arpl
pushf
or
sarl
xor
ds
and
sbb
cs
add
or
cmp
aaa
inc
jl
mov
sbb
xor
xor
sub
push
into
push
sbb
call
rcll
xchg
push
or
jne
lods
push
pop
sub
mov
in
push
dec
cmp
aad
shlb
xchg
add
add
cld
pop
xor
mov
ss
dec
mov
ret
or
ja
and
inc
or
xor
lock
sub
pop
pusha
jle
sbb
imul
and
es
lock
add
push
shl
es
rcr
scas
cwtl
les
cmp
lods
sbb
enter
insb
pop
xchg
push
cmp
insl
sbb
mov
adc
fwait
test
sub
jns
dec
add
lock
cmp
not
cmp
inc
mov
rclb
js
outsl
cmpsb
dec
mov
repnz
pop
hlt
je
clc
sbb
imul
pop
lods
mov
xor
cmp
pop
adc
jne
sub
in
movsb
push
and
lcall
insl
fisttps
lahf
mov
shll
mov
xor
gs
inc
test
sbb
cvtdq2ps
adc
pushf
out
aaa
lock
inc
or
add
xor
addr16
mull
iret
clc
add
pop
adc
cmp
nop
add
add
jns
and
xchg
dec
and
add
mov
out
inc
cmp
mov
jmp
cmp
ss
sub
jbe
push
lret
sub
divl
sbb
or
xchg
mov
mov
xor
fisubrl
rolb
sub
aad
lock
repz
fisttps
push
inc
xor
cli
or
add
xchg
sbb
add
dec
or
xor
pusha
mov
xchg
pop
cmp
mov
sbb
xor
mov
jnp
sbb
adc
jmp
add
add
and
or
push
nop
sbb
jge
arpl
cmp
inc
inc
clc
add
enter
lock
in
adc
mov
and
xor
adc
xor
mov
mov
out
aad
cwtl
xchg
jns
xor
mov
push
fisubrs
aas
movsl
bound
adc
pop
adc
push
jbe
aaa
in
pop
mov
add
cmp
add
mov
inc
pop
ror
sbb
hlt
rclb
enter
fsubrl
inc
add
lahf
aam
pop
iret
leave
je
pop
movsb
mov
cwtl
pusha
test
dec
mov
dec
jmp
cmp
lret
movsl
lcall
outsw
dec
fwait
adc
inc
xchg
das
sbb
in
or
or
leave
or
rol
push
sub
add
popa
in
jo
pop
pop
cmp
mov
xor
dec
add
test
jne
dec
xor
and
and
popa
dec
add
push
test
sbb
sub
cmp
jne
pop
enter
int
cmp
push
push
and
bound
add
and
and
test
icebp
and
and
inc
pop
in
in
sbb
inc
js
test
xorb
and
or
add
xorb
xchg
mov
cmp
push
orb
lods
popa
clc
inc
add
lods
mov
add
bound
arpl
or
cmp
daa
or
fiaddl
subl
push
add
cmp
cwtl
adc
mov
sti
jl
cmp
lea
add
push
add
cmp
sbb
out
pop
enter
mov
test
or
arpl
aad
dec
inc
dec
dec
dec
inc
jbe
or
add
lods
add
cmc
cmpb
or
xor
stc
cmp
sbb
gs
or
cmp
jb
inc
push
sbb
push
mov
and
xchg
popf
out
loope
or
data16
loopne
or
inc
and
push
pop
addl
repz
mov
stc
cmp
je
rcll
dec
subb
sbb
dec
sahf
dec
dec
inc
in
push
cmpsl
daa
xchg
or
mov
add
rcrl
stc
data16
sbb
andb
bound
sbb
popf
scas
and
add
arpl
pop
adc
cld
in
sbb
jbe
push
jnp
sbb
dec
clc
addl
loope
xor
add
rol
cmp
mov
loop
aad
xchg
pop
nop
mov
xchg
repz
mov
pop
xor
mov
xor
adc
movsb
xor
imul
sub
dec
insb
inc
fs
repnz
push
ss
repnz
dec
fimull
stc
shll
cmp
xchg
xorl
inc
dec
cmpsl
add
cltd
inc
adc
test
push
fs
sbb
dec
jle
sbb
jne
push
cmp
inc
js
jne
or
sbb
sahf
cmp
push
popa
ja
into
decl
dec
xchg
pop
in
mov
cwtl
inc
lea
jmp
pop
je
das
js
push
imul
lret
sub
sti
adc
addb
or
add
xchg
xchg
test
rorb
push
xor
dec
pop
loope
xchg
mov
xchg
repz
add
fs
icebp
cmp
stos
test
xchg
les
dec
into
pop
das
dec
jecxz
pop
inc
pop
lock
add
mov
pop
mov
sbb
push
mulb
inc
jle
and
aad
sbb
dec
ljmp
inc
push
or
ficoms
inc
arpl
push
mov
nop
xchg
dec
add
in
mov
ss
cmp
sub
or
ret
and
lea
jne
rorl
or
rcrl
adc
sub
adc
xor
ret
xor
inc
add
and
push
push
sbb
dec
nopl
aam
aam
pop
in
sub
pop
pop
mov
inc
ja
addr16
ss
adc
dec
test
pop
add
mov
push
dec
ret
push
xor
mov
lds
push
inc
mov
inc
fsub
add
xor
hlt
pusha
test
sbb
mov
dec
adc
mov
adcb
dec
in
push
pop
je
adc
mov
stc
fxch
add
test
xor
push
lea
mov
call
sub
sub
cmpsl
cltd
aaa
shrb
xor
sbb
or
xchg
outsl
add
adc
mov
or
lcall
pop
dec
or
sbb
mov
data16
mov
lahf
negl
pop
jbe
mov
sbb
call
jns
inc
add
push
in
mov
add
test
out
adc
imul
sub
lcall
orb
add
jl
and
add
in
adc
pop
push
repnz
int3
lcall
daa
add
fcomps
shl
andb
pop
xchg
and
or
ficomps
mov
dec
sbb
inc
ficomps
dec
cmp
loopne
xor
cwtl
mov
mov
lret
or
jp
std
inc
sbb
jg
movl
adc
lea
adc
mov
dec
pop
sbb
addr16
sub
les
int3
into
int3
bound
orl
insl
cltd
xor
mov
shrl
add
push
lods
imul
mov
shlb
fildl
jbe
dec
inc
movsl
sub
clc
push
mov
repz
mov
rcrl
xor
lsl
cmp
loopne
lea
bound
ficoms
arpl
push
pusha
or
push
sub
jns
pop
outsl
mov
outsl
dec
cmp
insb
push
dec
cmpsl
and
mov
loop
xor
repz
mov
rorl
push
pop
xor
add
mov
gs
xor
out
movsl
jno
or
fiadds
loope
in
insb
dec
dec
add
sbb
cmp
popf
aaa
es
and
ljmp
sub
dec
inc
sbbl
ljmp
int3
xchg
jnp
fildl
mov
push
cmp
jae
xor
mov
dec
and
dec
push
mov
and
aaa
dec
addr16
or
fildl
cmp
push
xor
sti
jbe
mov
xchg
inc
shlb
xchg
loope
cmp
cmpsl
push
add
jne
in
sub
dec
mov
fisubrl
movsb
jno
popa
mov
inc
mov
jmp
mulb
jmp
xor
add
data16
cmp
je
jmp
out
inc
adc
and
sbb
and
add
jbe
adc
add
mov
add
sub
pop
clc
jbe
insb
je
xor
push
mov
andl
add
and
add
scas
fsubrs
lea
mov
je
std
xor
pop
jo
inc
inc
jle
mov
xchg
dec
adc
je
push
push
adc
jae
test
rcrb
inc
push
dec
xchg
pop
jecxz
out
xor
sub
jmp
inc
xchg
insb
dec
xchg
mov
add
mov
add
test
push
cmp
pop
push
icebp
nop
or
add
and
sub
dec
iret
jecxz
fs
xchg
xorps
cmp
jecxz
jnp
add
inc
aad
or
loop
inc
sub
xchg
scas
sbb
out
pop
push
xor
adc
dec
pop
inc
daa
pushf
mov
test
pushf
push
inc
int
pop
and
fs
sti
adc
outsb
push
mov
cmp
push
jmp
imul
pavgb
lea
or
jae
inc
add
add
subl
pop
mov
popf
cmpb
adc
push
mov
pop
cmp
fwait
lahf
inc
rorb
adc
jb
xchg
pop
test
mov
sbb
test
sbb
sbb
shll
sbb
aaa
or
lods
mov
jmp
adc
and
adcb
inc
lods
fmuls
push
jnp
mov
sbb
dec
xchg
mov
mov
mov
pop
pop
push
dec
insb
mov
add
aam
lahf
bound
ljmp
xchg
int3
mov
add
add
jge
mov
mov
mov
iret
adc
aad
push
adc
outsb
pop
pop
es
push
loope
or
in
verw
add
inc
mov
or
xchg
call
mov
daa
cmp
dec
in
sbb
das
aas
xor
xor
xor
shlb
or
add
outsb
pop
fbstp
dec
mov
cmp
xor
cmc
cmpsb
sbb
xor
test
or
sub
xchg
test
mov
sub
mov
cltd
je
ja
mov
pop
add
rorb
fisubl
loope
cmp
jne
sub
cmp
pop
adc
out
sub
rol
jno
jmp
push
cld
lar
xor
mov
std
inc
daa
cwtl
js
mov
jne
pushf
rolb
pop
cmp
outsb
pop
push
inc
aad
and
sbb
push
push
call
int
pop
ljmp
jmp
adc
pop
pop
push
and
int3
inc
or
and
hlt
sub
adc
xchg
add
je
movl
jb
and
roll
or
cmp
sbb
insl
cmp
sub
sar
std
rcll
xor
inc
inc
call
sar
popa
aam
imul
fcmovnb
xor
jns
jl
shr
lret
repnz
sub
aam
push
sbb
mov
aam
outsl
push
movsb
inc
dec
and
test
xor
and
lret
mov
popa
ss
push
add
inc
sbb
and
pop
lahf
popa
int3
es
divl
inc
mov
test
inc
mov
add
dec
arpl
fldl
cld
cld
jecxz
ftst
add
push
jb
fsubrl
pop
pop
fwait
or
push
enter
aaa
ret
pop
js
inc
and
les
repnz
dec
mov
pop
addl
pop
lcall
andb
js
test
mov
sub
les
push
lea
push
stos
push
out
pop
bound
mov
test
out
sub
es
mov
sub
xchg
xchg
jno
add
add
xchg
out
fsubl
sbb
push
fstp
add
test
push
lcall
adc
cmpsb
stos
cmp
imul
rolb
stos
mov
rclb
loopne
pop
dec
pop
inc
dec
mov
add
pop
cmpl
test
push
or
pop
xor
sbb
dec
push
jns
pop
mov
cmp
mov
push
insb
loope
push
mov
inc
ds
lock
pop
hlt
movb
jg
pop
js
pop
mov
andl
nop
inc
xor
dec
imul
inc
mov
add
xchg
aas
test
and
adc
sub
xchg
hlt
or
data16
shr
adc
inc
mov
sbb
sbb
or
orb
jmp
dec
test
adc
and
pop
or
sbb
mov
nop
test
cmp
fmuls
loope
sbb
inc
xchg
clc
inc
inc
cli
lods
inc
jmp
mov
add
aaa
push
push
cmp
jne
adc
and
push
inc
dec
test
mov
sub
aas
lock
cmp
sub
jns
addl
adc
or
sbb
push
add
test
or
inc
or
ss
xorl
add
mov
cmp
test
test
add
add
jmp
nop
sub
insl
xor
inc
test
repz
jmp
and
scas
outsb
imull
lods
jae
jecxz
dec
and
and
sbb
xlat
push
nop
negl
or
push
jbe
inc
push
scas
les
rol
orl
in
cld
add
in
adc
and
enter
push
mov
inc
xchg
popf
or
jno
add
out
push
xor
movsl
test
mov
cmp
cmpsb
cmpsb
or
in
mov
dec
ja
add
pop
filds
or
inc
insb
or
push
leave
push
xchg
add
adc
scas
and
sti
push
stos
push
sub
inc
sbb
push
outsb
jne
add
push
cmpsl
or
inc
mov
xchg
sbb
inc
jbe
jmp
and
aam
or
and
movl
fidivl
mov
push
adc
lahf
mov
dec
testl
test
sub
push
xor
adc
xchg
add
inc
xchg
data16
and
into
sub
dec
jle
or
xchg
loopne
adc
inc
or
imul
adc
sub
test
cltd
stc
or
jmp
jnp
add
pusha
jne
xchg
test
arpl
addb
and
jg
inc
pop
lcall
push
jge
addb
js
scas
mov
sahf
fwait
add
mov
add
pop
daa
fsubrl
add
mov
adc
add
pop
or
pop
pusha
jmp
inc
dec
ret
or
xchg
rcrb
sub
lock
lock
jp
or
and
iret
pand
mov
pop
addr16
loopne
dec
mov
xor
sub
rorb
add
ja
push
ret
pusha
and
lods
xchg
adc
cmpsb
xlat
in
inc
or
mov
sbb
in
daa
inc
xor
sub
or
xlat
dec
rorb
pop
ret
addl
xor
sbb
in
add
add
aam
test
dec
and
loopne
cmp
lock
fldl
inc
jne
cmp
mov
jns
or
sub
std
in
es
push
add
and
add
add
pop
sar
mov
scas
mov
clc
das
jge
mov
sub
rolb
cmp
mov
xchg
mov
inc
or
add
rclb
mov
adc
mov
xor
adc
sub
cmp
mov
jns
sbb
push
je
sarb
shrl
push
iret
in
pop
ficomps
dec
add
out
xlat
or
sbb
push
or
lds
push
inc
or
xor
add
sbb
sbb
dec
std
and
jo
mov
cmp
jbe
rcrl
cld
dec
loope
dec
mov
lods
mov
cmp
cmpsl
xchg
pop
or
inc
lea
stos
arpl
sub
push
mov
sub
clc
inc
aaa
jle
push
inc
or
pop
movsb
pop
or
dec
add
xchg
pop
jle
je
and
and
jns
mov
mov
pop
outsb
push
sbbl
js
add
jo
pop
sti
out
jns
ret
fnclex
cmp
into
add
xchg
std
pusha
imul
gs
cmp
inc
or
sub
xchg
not
dec
movsl
sub
adc
mov
and
cld
orb
push
and
and
daa
adc
jbe
subb
jmp
jo,pn
sub
mov
pop
xchg
in
push
xchg
add
add
fmuls
push
sarl
fnstsw
in
hlt
push
push
test
enter
insb
out
int3
lea
and
mov
ds
push
push
push
gs
adc
jnp
paddq
mov
and
and
push
lea
add
and
jge
adc
sbb
adc
shr
xor
or
test
push
add
mov
xchg
fisubl
add
sahf
fcoms
adc
push
stc
push
push
mov
pop
pause
add
lcall
cmc
imul
sbb
dec
sub
inc
test
pop
shlb
mov
adc
fdivs
push
add
mov
xchg
mov
adc
cmp
dec
shrb
xchg
jmp
mov
popa
lea
les
add
cmp
adc
push
or
jmp
add
fmuls
inc
push
aam
sbb
push
and
add
lea
scas
movsl
shlb
and
and
stos
out
xchg
je
push
mov
pop
add
xchg
adc
enter
sbb
push
pop
or
stos
andb
popl
dec
rcrb
add
idivb
std
outsb
inc
cmp
je
test
aaa
lds
jne
sub
mov
sbb
sar
and
adc
inc
pop
out
movsb
ret
stos
and
lret
xchg
lods
nop
pop
add
fisubrl
addb
lret
shrl
popa
cmp
add
xchg
aam
or
jb
arpl
lods
mov
pusha
adc
mov
xchg
bound
sub
inc
popa
or
iret
and
ja
add
ret
mov
jbe
mov
or
push
push
and
scas
add
popa
repz
mov
add
adc
pushf
in
sub
inc
rclb
nop
cmpsl
xorl
cli
loopne
jae
mov
nop
push
add
lock
pop
dec
bound
xor
adc
xlat
push
aaa
mov
gs
bound
cmc
add
aas
bound
mov
jp
xchg
add
push
xchg
pop
clc
add
cs
mov
arpl
push
xor
add
add
inc
dec
cmp
pop
sbb
push
or
sbb
adc
lods
mov
test
push
cmp
push
lds
fisubrs
dec
or
and
push
inc
bound
adc
add
and
es
pop
test
ss
addl
and
xchg
dec
clc
dec
dec
sub
fs
add
cwtl
les
adc
test
jno
adc
xlat
fs
inc
inc
mov
fcoml
or
jp
push
sbb
cmp
mov
mov
inc
cmp
repnz
pop
jnp
cmpsb
sbb
push
lcall
test
mov
add
mov
ja
inc
and
ja
rol
xchg
push
subb
cmp
test
jo
xor
das
lock
call
nop
fcmovbe
dec
in
ljmp
repnz
inc
dec
gs
sub
sub
call
andb
cwtl
cmp
sbb
cmc
fstpl
push
loopne
mov
adc
loopne
add
call
ret
and
stos
es
inc
inc
inc
dec
or
push
cmp
pop
sbb
add
xchg
dec
jb
outsl
add
fdivrl
dec
lods
das
sub
xlat
scas
and
push
pop
push
ret
les
rcrl
out
mov
pop
add
movb
outsl
pop
or
ror
or
and
mov
lea
or
in
push
in
js
repnz
push
sahf
adc
mov
sbb
and
mov
add
jb
add
xor
push
ljmp
addr16
push
or
scas
jo
fisttpll
add
inc
aaa
inc
push
lret
jg
test
dec
in
pushf
add
cltd
mov
cwtl
dec
das
xchg
sbb
sbb
mov
sbb
push
mov
add
jl
or
lock
js
cmpsl
je
mov
jb
insb
inc
add
push
xor
push
push
inc
push
ss
sub
in
mov
adc
pop
push
repnz
in
dec
mov
cmp
and
xchg
add
outsl
addr16
xor
add
leave
sub
aaa
imul
jns
dec
imul
fs
scas
outsl
push
or
inc
push
fs
or
gs
push
adc
pusha
cs
imul
push
sbb
and
je
int3
mov
add
adc
test
imul
jno
adc
lock
xor
cmp
decl
dec
sbb
fwait
icebp
out
sbb
fisttpl
sub
bndstx
bound
fcom
push
add
add
adc
xchg
adcb
jg
shl
jne
cmovs
les
das
gs
fabs
add
push
pop
repz
adc
stc
pop
imul
push
jmp
push
icebp
push
and
sub
inc
jecxz
mov
push
rclb
mov
adcl
subl
push
and
sbb
push
fdiv
adc
clc
sub
pop
jne
jae
pop
jb
sbb
inc
add
aas
mov
in
ja
jp
shll
push
and
xor
inc
dec
push
aaa
add
xor
jns
loope
int
inc
xchg
insb
fs
sbb
sub
insb
js
ljmp
push
mov
cltd
push
and
mov
or
push
or
xchg
dec
ss
lods
push
cld
ljmp
aaa
xchg
lahf
mov
push
lar
jnp
sbb
jl
jl
push
incl
add
jge
add
mov
add
pushf
push
in
jle
repnz
imul
jecxz
push
and
push
dec
cmp
jg
and
shrl
push
sub
cmp
and
or
add
arpl
push
adc
pushf
jno
mov
insb
and
jno
test
iret
mov
arpl
mov
fs
sbb
xor
sbb
fcompl
popl
nop
das
add
sbb
ss
or
xor
dec
in
push
mov
and
adc
je
popf
daa
orb
leave
shrl
mov
add
sbb
xchg
into
insl
push
xor
adc
mov
jg
jns
adc
lods
add
repnz
mov
call
fs
xchg
adc
inc
lods
mov
inc
hlt
xor
add
imul
out
adc
sub
and
movsb
jno
cmp
sahf
in
outsl
mov
or
adc
outsl
or
xchg
add
movsb
adc
pop
pushf
addl
or
sbb
xchg
adc
ss
push
pop
inc
mov
push
pop
add
pusha
test
hlt
or
mov
movsb
bound
test
adc
fdivs
sar
and
fdivrl
test
xchg
shlb
sahf
notb
repz
sbb
sbb
adc
in
ja
dec
inc
push
cmp
and
nop
add
in
add
or
xchg
in
loop
ds
les
ficompl
add
imul
ja
sbb
fiaddl
jl
and
adc
cmp
fdivs
insl
mov
jge
sub
mov
adc
repnz
jle
adc
add
jb
push
addl
inc
sbb
jne
sbb
or
loopne
mov
in
leave
mov
or
inc
or
sub
inc
xor
and
xchg
xlat
mov
sub
dec
inc
in
jne
into
dec
dec
pop
or
movsl
les
movsb
cmp
mov
inc
fsubs
incb
dec
sbb
adc
add
cmp
add
add
jmp
cmp
insl
add
sbb
cmp
xor
push
or
ljmp
push
lds
testl
ds
lds
cltd
dec
inc
mov
fxch
test
inc
fucom
xor
inc
adc
dec
xor
xor
mov
dec
dec
loopne
shl
cmp
test
jge
fwait
das
ret
out
fldl
cmp
add
into
add
and
sbb
daa
in
add
dec
es
lock
daa
push
ss
lods
addl
adc
push
rorb
adc
cmp
xchg
xchg
dec
int3
jbe
dec
sub
add
xchg
ffree
scas
add
xchg
sbb
pop
add
xchg
sbb
ja
xor
sbb
enter
addr16
and
out
sbb
insl
sub
repz
and
dec
sub
inc
inc
mov
mov
test
aad
scas
andl
ja
inc
or
pop
and
dec
jecxz
repnz
aam
cmp
fistps
pop
ljmp
pop
xchg
ret
je
and
jns
bound
pop
movsb
adc
push
or
shrb
in
push
cmpsl
mov
adc
mov
or
clc
mov
shll
movsb
pop
and
mov
sub
addb
jo
aad
bnd
ss
sub
dec
mov
dec
scas
sub
cmpsl
xor
jnp
add
or
enter
fadd
adc
cwtl
rcl
and
or
sub
mov
inc
xchg
sbb
lock
dec
ret
add
sub
loopne
nop
cmc
sbb
and
adc
dec
mov
aam
adc
iret
jp
fcmovbe
mov
flds
pop
pusha
xor
sbb
or
or
lea
out
aaa
lods
xor
pop
sbb
adc
inc
xor
adc
jmp
add
nop
jle
clc
divl
push
or
jae
sbb
push
cmp
ret
adc
mov
xor
hlt
pop
pminub
push
mov
es
shll
or
pop
mov
dec
adc
jl
lock
mov
adc
inc
or
add
or
xor
push
xor
addb
in
xor
add
je
push
push
sub
ss
data16
push
adc
add
add
pop
mov
add
int
ficompl
pop
inc
dec
js
sbb
negl
xlat
sbb
addl
push
push
inc
cwtl
xchg
adc
movsb
sbb
mov
sub
mov
add
and
push
cmp
mov
push
xor
sub
dec
or
and
in
sub
ret
xor
xchg
int3
mov
cmpsl
imul
mov
inc
dec
push
add
cltd
inc
rcrb
pop
cmpsb
xor
pushf
push
mov
scas
pop
xchg
je
syscall
jge
loopne
adc
test
mov
adc
push
cmp
adc
orps
push
xchg
sub
inc
xchg
dec
inc
fmull
sbbl
add
cmp
stos
add
adc
mov
sub
adc
sub
jle
stos
fisubs
movsl
adc
pop
push
lods
add
outsl
xor
insl
pop
std
scas
les
rolb
inc
es
andl
mov
arpl
sbb
add
je
notl
testl
in
xchg
mov
int3
sub
lods
and
sub
sub
in
outsl
insb
gs
outsl
cmp
mov
and
in
insl
movsb
lea
mov
cmp
arpl
lods
les
xor
ss
outsl
popa
xor
fbld
sub
inc
inc
push
test
xchg
test
sbb
enter
jmp
popf
push
mov
dec
xchg
jge
and
sbbb
sahf
inc
divl
fstp
lahf
dec
xchg
mov
mov
and
adc
cs
ss
lret
sbb
or
pop
add
jae
mov
and
orl
adc
jae
sbb
sub
out
and
sub
jl
add
xchg
mov
xor
and
pavgb
loop
add
testl
add
out
xchg
imul
mov
mov
lods
mov
push
adc
mov
xchg
fwait
xchg
mov
shll
je
inc
dec
fcomps
aaa
add
sub
xchg
xlat
aas
sub
push
in
getsec
sub
jle
subl
push
sbb
rclb
cmp
xor
xor
mov
nop
fisttpl
mov
cmp
mov
push
jl
mov
lods
lods
test
in
ficomps
mov
aam
or
pop
jb
xor
enter
dec
orl
sbb
insb
js
shl
scas
cmp
test
pop
jb
test
outsl
and
jb
je
sub
nop
add
scas
nop
pushf
add
nop
add
in
add
mov
mov
or
nop
and
nop
mov
cmp
nop
add
push
pusha
js
sbb
add
or
or
nop
mov
sbbl
leave
sbbl
pop
xor
fiaddl
lea
pop
orl
push
rolb
out
pop
push
push
dec
shll
and
lcall
push
adc
lcall
in
stc
test
sahf
stos
out
test
push
xor
imul
push
fimull
shll
mov
cmpsb
data16
insl
push
jle
mov
pop
sub
inc
int
imul
lcall
int3
mov
add
sub
sbb
xchg
dec
pop
adc
add
jo
ss
mov
enter
add
push
pop
xor
sub
sbb
adc
pusha
push
loopne
sbb
mulb
je
sub
xchg
mov
cmp
ja
xor
push
add
mov
pop
jle
in
add
fs
stc
dec
add
hlt
add
sub
in
add
test
movl
push
xor
fbld
pop
push
in
xor
xchg
int
mov
mov
scas
pop
mov
mov
add
gs
sbb
and
add
in
leave
je
jl
pcmpgtb
sub
xor
cltd
fcoms
sub
cmp
sti
or
dec
sti
inc
jl
sub
push
enter
pop
lcall
stos
mov
or
mov
push
xchg
and
sbb
addl
cmpsl
xor
and
dec
cmp
aas
lea
add
loop
mov
cld
ror
sarb
cmp
mov
and
xchg
in
lods
push
lods
jo
mov
addr16
pop
add
mov
push
cwtl
rorb
and
addr16
lea
test
gs
push
mov
dec
pop
push
lods
mov
cmp
dec
sub
push
insb
add
add
daa
xchg
mov
pop
xor
xchg
rclb
push
add
adc
loopne
sub
daa
jne
mov
imul
jg
dec
mov
mov
or
jbe
lahf
jmp
and
pop
and
jne
adc
dec
mov
fcomps
inc
dec
adc
jle
insl
mov
cltd
adc
sub
mov
and
mov
punpckhwd
and
mov
mov
leave
and
cmp
cmp
insb
push
sub
lock
sbb
insb
popf
add
and
xor
into
and
loopne
push
xor
sarl
cmp
into
xchg
out
dec
cmpsl
popf
xor
pop
sub
or
testb
les
or
add
add
fs
dec
push
jnp
scas
sbb
dec
test
adc
sbb
dec
lods
jnp
cmp
mov
inc
pop
nop
leave
mov
mov
add
or
sub
pusha
sbb
pop
push
push
dec
sub
out
xchg
mov
add
sbb
cmp
push
fsubp
add
push
cmp
mov
shl
sub
stos
es
fwait
lods
lds
mov
push
sti
mov
sbb
xchg
orb
enter
or
sbb
lret
push
aaa
sub
rorl
inc
inc
xchg
dec
adc
sbb
adc
jmp
jo
les
xchg
popa
xchg
push
or
popl
xchg
outsl
sbb
leave
mov
inc
leave
pop
or
mov
lret
jmp
in
pop
test
jl
and
sbb
jge
sbb
imul
adc
push
inc
sbb
pusha
imul
clc
nop
clc
mov
in
or
add
cmp
nop
or
and
sub
sub
xor
adc
sub
sub
dec
mov
loopne
jecxz
icebp
into
cmp
repnz
add
or
lea
mov
push
add
out
nop
dec
push
enter
or
std
add
data16
add
mov
dec
and
push
add
sub
or
lret
test
test
pop
arpl
lods
push
aaa
mov
push
sub
fwait
fs
jne
pop
inc
inc
inc
stos
lret
loop
mov
popa
adcl
cmpsl
punpcklbw
cmp
mov
mov
movsl
sbb
fldt
push
gs
sub
xchg
cmp
sub
lea
and
pop
sbb
cmp
sbb
push
add
push
adc
jl
adc
sbb
in
adc
aas
nop
or
imul
cmp
and
dec
loop
adc
lea
jg
rclb
shlb
leave
sbb
jg
xchg
jbe
push
nop
sub
add
pop
sub
xor
les
xor
adc
jb
mov
cmp
jge
add
push
pop
test
and
jne
add
mov
aaa
push
movswl
lods
rolb
lock
repnz
push
into
mov
loope
test
push
adc
mov
xchg
jp
in
xchg
mov
dec
add
aam
ljmp
or
ja
add
inc
jne
jns
lcall
popa
test
cltd
sbb
aas
lods
and
jnp
stos
and
or
sub
mov
or
inc
or
out
scas
enter
rolb
dec
xchg
je
xchg
popf
movsb
adc
and
sub
and
imull
inc
dec
lret
ret
pop
fcomps
mov
jl
shlb
sar
mov
push
pop
mov
mov
pop
adc
xor
fdivrl
rol
orl
cs
outsl
mov
inc
dec
leave
push
or
dec
popa
loopne
or
adc
fucompp
mov
push
popa
xchg
xor
outsb
inc
cmp
sbbl
jnp
mov
inc
inc
push
in
addb
jmp
orl
adc
push
pop
adc
mov
pop
jno
xor
adc
je
inc
cmp
jne
mov
cld
adc
cmpl
and
mov
sbb
jo
andl
pop
call
mov
mov
lea
insl
xchg
test
cwtl
mov
push
sbb
and
xor
fs
and
adc
or
sbb
out
in
arpl
ss
sbb
mulb
leavew
nop
test
adc
pop
lea
dec
sub
jno
das
shll
addl
test
add
jnp
add
or
mov
or
mov
call
loopne
xchg
out
lea
lret
push
mov
hlt
inc
mov
stos
jno
mov
or
jae
and
jbe
cmpl
and
and
loopne
xor
or
or
outsb
mov
jnp
ret
xor
inc
mov
or
jb
or
xor
mov
inc
or
mov
data16
sbb
addb
cmp
and
xor
fs
mov
pop
cmp
push
lea
sub
sbb
mov
cmp
ja
xchg
test
sub
int
or
scas
and
mov
pop
add
test
fs
filds
lea
pop
xchg
cmpl
imul
lahf
add
ja
insl
mov
rorl
xor
mov
lea
and
mov
je
pop
jmp
and
inc
jl
push
fdivrs
cli
or
push
dec
fildl
cli
pop
xchg
push
addb
movl
sbb
jle
jmp
sub
sub
test
add
loopne
cmp
aad
add
mov
push
jmp
scas
add
jmp
adc
push
jle
mov
test
mov
adc
je
or
negb
push
inc
push
call
sahf
loopne
cmp
pop
xchg
mov
xor
pop
hlt
push
push
dec
lea
inc
cwtl
sub
out
movsb
add
loop
adc
push
inc
fs
je
mov
add
and
js
add
das
sub
pop
aaa
jp
pusha
pop
pushf
in
js
inc
fs
lock
lret
pushf
pusha
add
mov
xor
movsl
addb
aad
aad
xchg
cmp
sbb
xchg
pushl
iret
adc
add
out
cmpb
dec
arpl
push
rclb
or
pop
cmp
sub
faddl
xor
sub
sbb
adc
outsl
jmp
rorl
adc
iret
cmpsb
fwait
movsl
aam
mov
cmpsl
and
jo
repnz
and
addr16
mov
and
adc
scas
sahf
cmpsb
jno
inc
mov
dec
push
dec
test
pushf
sarb
inc
jne
fmull
mov
leave
pop
pop
mov
xchg
push
imul
mov
xor
inc
movsb
inc
bound
adcb
sahf
inc
cmpsl
sbb
push
fcomip
mov
lods
adc
xchg
xor
cli
fmuls
jb
rorb
cmp
adc
mov
in
adc
mov
sbb
inc
sbb
cmp
jbe
jg
xor
je
ret
add
popa
jne
mov
adc
inc
mov
aaa
push
sbb
xor
sub
inc
test
addl
or
sub
cmpsl
xchg
add
test
ret
cmp
imul
adc
jp
hlt
jo
push
push
sbb
add
inc
mov
cltd
add
test
sub
push
inc
xchg
sbbl
hlt
push
shll
sub
xor
or
in
pop
mov
add
or
ljmp
cmp
dec
dec
or
lods
or
add
jecxz
push
and
dec
or
or
mov
pop
adc
mov
or
push
daa
ret
test
jmp
aas
add
pop
test
addl
push
mov
pop
mov
frstor
sub
mov
and
les
inc
push
fnstsw
push
ret
dec
inc
stos
inc
mov
or
jne
dec
or
add
cli
cs
add
rol
cltd
mov
and
push
insl
xchg
add
pusha
sbb
cmp
es
lock
shlb
inc
jb
mov
mov
dec
mov
sub
and
or
call
nop
mov
std
push
push
bound
push
sbb
mov
inc
or
and
loopne
sbb
cmp
xor
inc
and
xor
lcall
jg
arpl
xor
mov
adc
pop
in
testl
loop
adc
dec
daa
dec
and
dec
mov
mov
cmpl
jne
adc
movsl
xchg
add
fwait
sbb
mov
in
xchg
xor
stos
and
data16
enter
fwait
mov
jmp
cmpl
mov
and
mov
es
out
jg
fisubs
je
sub
and
mov
push
repnz
mov
mov
ficoml
movsl
adc
rcr
or
popf
out
fdivrs
in
in
mov
xchg
icebp
ja
mov
xor
or
iret
inc
lock
lahf
add
dec
cld
sbb
mov
loopne
pop
xchg
scas
sbb
cmpsl
cli
adc
pusha
popa
mov
sti
int
repz
sarb
ss
je
and
add
das
call
cli
lret
aad
fisubs
sub
mov
pop
pop
sar
adc
sub
ss
jmp
rolb
mov
or
pop
cmpl
pusha
in
leave
clc
push
sub
push
mov
xchg
or
mov
icebp
loope
adc
sbb
mov
or
insb
cmp
push
fsubrl
inc
test
push
pop
dec
cmpsl
inc
out
rcrb
push
jmp
gs
or
xchg
adc
cmp
fwait
dec
lret
and
xbegin
shll
das
fbld
xor
sbb
adc
xchg
mov
fcomps
repz
ss
fisubs
jns
adc
sub
out
adc
xchg
cmp
adc
sbb
iret
inc
cwtl
adc
inc
or
adc
or
cs
mov
mov
str
jne
inc
test
in
add
and
xorb
adc
push
movsl
mov
or
mov
jp
push
pop
and
clc
xchg
sahf
icebp
les
mov
das
sub
mov
push
stc
mov
xchg
mov
push
les
push
int
adc
bound
or
dec
aam
xchg
pop
loope
cltd
dec
sbb
mov
js
or
in
inc
imul
mov
pop
orb
pop
inc
push
fs
pop
push
dec
xchg
sub
int
leave
mov
push
add
pop
xchg
sub
inc
push
ds
push
xchg
inc
inc
sbb
fs
xchg
cmpl
dec
and
pusha
repnz
jl
and
clc
or
std
pusha
dec
mov
and
push
xor
int3
sbb
cmp
lea
mov
subb
xorb
aam
mov
stos
es
adc
and
push
pop
lea
jb
xchg
sub
fimull
insl
cmp
aaa
fbld
subb
inc
xorb
inc
and
adc
and
mov
mov
sbb
cmpsb
xor
and
xor
lahf
or
cwtl
jl
xor
inc
scas
mov
dec
test
cmpsl
mov
loopne
push
dec
mov
sbb
and
rclb
loopne
inc
cmp
sti
movsb
jno
lcall
push
out
mov
push
or
jo,pn
fs
or
or
inc
xchg
rclb
push
pop
pop
test
dec
inc
cmp
shrb
dec
push
cmp
into
dec
popa
xor
and
gs
sub
or
inc
cmpsl
fadds
sbbb
dec
imul
nop
pusha
insl
or
add
jl
pop
adc
pop
adc
inc
pop
mov
sub
inc
mov
push
decb
add
pop
add
jmp
flds
pop
xchg
adcb
sbb
fdivrp
les
xor
add
mov
decb
cmp
jle
fcomps
inc
lahf
or
mov
xchg
iret
inc
mov
pushl
xor
add
mov
js
mov
xor
scas
int3
aaa
xor
inc
and
pop
push
or
mov
add
divl
sbb
dec
xor
xchg
sub
push
sub
push
pushf
cmp
dec
daa
or
push
cltd
fsubrp
cltd
adc
or
jb
mov
and
xchg
neg
aas
sbb
or
inc
bound
dec
out
ss
loope
test
cld
dec
cmpsl
addb
add
inc
xchg
mov
push
mov
addr16
mov
push
sbb
add
test
xchg
outsb
pushf
mov
inc
int
mov
sub
inc
mov
pop
mov
out
or
and
dec
mov
xchg
fisubs
inc
mulb
push
xchg
xorb
add
inc
rorb
add
or
mov
push
xchg
mov
outsl
jnp
mov
fisttpl
and
push
cmp
dec
xor
adc
insl
adc
in
inc
or
in
jg
out
mov
mov
push
push
mov
pop
add
enter
push
add
xor
sbb
mov
xor
dec
add
xchg
imul
out
or
mov
int
es
push
dec
shll
sub
mov
adc
outsl
test
and
into
inc
sahf
mov
test
ret
xor
or
sbb
fcmovnb
add
lock
push
push
mov
add
jbe
sbb
xor
or
jmp
adc
inc
int3
pop
adc
adc
dec
push
or
sub
scas
pop
repnz
and
adc
mov
or
leave
jmp
pop
mov
add
repz
add
ds
add
pushl
mov
adc
jne
popl
ss
lret
or
in
mov
xchg
mov
lea
jae
mov
cmpl
jno
mov
hlt
cli
faddl
cld
jbe
push
cmp
dec
shll
enter
inc
dec
dec
cmp
and
dec
scas
dec
dec
mov
mov
cwtl
or
mov
push
add
xor
push
shl
adc
adc
lods
and
xchg
mov
es
mov
ja
or
push
dec
pop
mov
insb
subb
pop
sbb
xchg
in
adc
mov
inc
inc
pop
inc
aam
or
xor
adc
fiaddl
xlat
ja
cmp
nop
sbb
add
es
mov
movsl
add
mov
adc
mov
adc
mov
ljmp
rolb
outsb
pop
xor
outsb
outsb
mov
add
test
push
arpl
jne
adc
ja
sbb
or
cmp
push
cli
sti
cmp
adc
and
add
dec
xor
repnz
mov
cltd
in
xchg
dec
mov
cmpsb
es
adc
cmpsb
imul
sbb
mov
or
mov
enter
mov
adc
add
ss
jecxz
lfs
inc
mov
js
mov
lods
push
mov
lds
imul
dec
and
sbb
mov
mov
jle
inc
xchg
add
push
add
mov
mov
dec
push
mov
leave
mov
enter
push
fs
or
sbb
jg
jno
mov
in
insl
jnp
cmp
push
sub
iret
addb
xchg
add
pusha
dec
and
add
call
inc
adc
arpl
testl
add
loop
inc
inc
sub
sub
mov
mov
jnp
add
inc
mov
mov
push
incl
or
adc
pusha
aas
mov
dec
jne
mov
jg
shlb
repnz
ficompl
dec
rcr
mov
inc
adc
and
add
lods
sbbb
pop
lock
pop
pusha
jg
xor
cmc
push
lock
pop
inc
repz
adc
lea
inc
pop
jb
out
add
and
add
or
dec
cmc
fsubr
das
imul
or
sub
cli
or
lods
cmp
and
mov
inc
cltd
je
add
std
xchg
xchg
and
pop
jne
mov
aas
js
push
and
add
mov
sarl
lret
jmp
xorl
adc
inc
jnp
sarl
push
popa
xlat
in
inc
test
mov
and
test
fstpt
dec
adc
push
mov
pop
adc
movsl
inc
mov
fwait
cli
mov
inc
cmp
mov
mov
das
cmp
inc
cmp
call
cmpl
push
sub
add
mov
sub
add
inc
sub
adc
mov
add
fisubs
sarl
inc
pavgb
sub
les
sub
mov
ret
out
push
movsb
sbb
fistpll
inc
push
xchg
sbb
mov
jg
call
push
jns
and
in
les
mov
sbb
popf
stos
pushf
loopne
pop
adcb
cmp
es
inc
adc
jne
imul
stos
cmp
inc
aaa
adc
cmp
fcoml
sbb
sub
fildl
nop
xor
rcll
push
cmp
popf
cmp
js
mov
inc
pop
aaa
inc
sub
mov
or
pop
dec
in
aaa
dec
xchg
xchg
mov
jae
and
mov
ss
sbb
add
push
gs
hlt
call
shrl
ljmp
cli
xorl
push
dec
mov
cmc
pop
notl
pop
push
dec
inc
sbb
pop
mov
dec
leave
mov
pop
inc
aam
dec
push
push
dec
dec
inc
insb
nop
mov
push
push
xor
xchg
ja
and
dec
push
inc
ficoms
xchg
movhps
dec
dec
mov
adc
lods
add
pop
bnd
int3
push
jle
prefetch
jg
add
bound
movsb
cmpsl
xor
das
cwtl
add
mov
add
rcl
mov
adc
inc
nop
sti
jno
add
add
jg
femms
out
xor
rolb
and
rclb
mov
ret
dec
flds
sbb
in
cwtl
insb
mov
push
jb
shrb
push
in
push
in
xchg
push
cmpsb
push
outsb
jecxz
enter
in
shll
pop
sarl
lock
pop
sar
dec
pop
cld
dec
dec
xor
popa
incl
mov
rclb
mov
or
ds
add
mov
inc
xchg
rorl
insb
arpl
and
mov
cmp
push
xor
xchg
push
in
movlps
cltd
cmp
xlat
orl
add
ret
sarl
cltd
test
andl
pop
movups
xor
enter
adc
mov
ljmp
unpcklps
lea
sbb
inc
jbe
or
imul
mov
xchg
iret
jb
push
in
sbb
sub
push
pop
ret
decl
add
imul
rcpps
add
rcrb
pop
dec
mov
lock
mov
sbb
out
test
push
mov
lea
inc
inc
loopne
hlt
sub
das
dec
imul
dec
push
loopne
or
js
lahf
les
scas
xor
jg
rorl
shl
adc
pop
outsb
nop
int3
stos
shl
int
sti
call
repz
loopne
dec
repnz
adc
nop
dec
call
dec
push
pop
xchg
cmp
and
notl
arpl
daa
hlt
cmpsb
popf
xchg
jbe
sbb
repnz
mov
arpl
mov
je
dec
repnz
adc
mov
dec
icebp
cmp
fisubl
daa
fdivr
cwtl
inc
leave
sub
inc
sti
pushf
mov
add
dec
aam
movsl
imul
xor
xor
rcrl
flds
jecxz
dec
shll
or
shll
cmp
xor
shll
jns
lea
stos
mov
cmpsl
push
mov
dec
sarl
enter
add
add
sub
sub
add
jmp
imul
or
test
call
scas
movsl
mov
mov
repnz
pop
sub
xchg
and
jl
fnsave
push
das
mov
sahf
dec
test
or
push
cmp
xchg
cmpsb
daa
dec
je
lods
sbb
addl
and
incl
xor
jnp
mov
mov
inc
shrb
push
loop
sarb
enter
sbb
dec
nop
mov
scas
push
add
push
dec
repnz
mov
cmp
inc
es
in
add
int3
jbe
xchg
das
enter
cmpsb
imul
cmpsb
imul
dec
enter
push
push
and
fcompl
push
pop
leave
xchg
adc
add
neg
out
fadds
inc
adc
call
cltd
mov
dec
dec
add
inc
es
ss
faddl
inc
fcomp
push
cmp
nop
fcomp
fcomp
cmp
nop
inc
fcomp
fsub
nop
inc
push
fcomp
fcoms
fcomp
inc
push
cmp
fcomp
fdivrs
cmp
nop
fcomp
fcomp
dec
adc
iret
lcall
push
jmp
cmc
leave
std
pop
shll
and
xor
inc
dec
push
popa
imul
shll
mov
pop
shll
fnstenv
mov
lret
aad
dec
leave
inc
shr
repz
lret
add
loop
cmp
lret
clc
push
mov
push
jb
xchg
aas
sub
sbb
ret
in
popf
pop
call
inc
push
jne
xchg
dec
or
pop
lcall
sub
xor
rorl
pop
addr16
shll
mov
xor
ror
fisttps
dec
shr
repz
cmpsb
pop
push
adc
shll
pop
and
xor
in
inc
into
sub
repnz
sub
push
arpl
mov
xor
or
adc
and
jns
paddb
adc
cmp
mov
or
dec
fwait
in
lods
dec
mov
adcl
nop
cmpsl
mov
call
iret
mov
fnstenv
mull
add
or
pop
sub
cmp
dec
push
pop
outsl
jns
xor
xchg
mov
xor
sahf
cmp
inc
dec
push
popa
imul
xchg
popf
aam
dec
shll
dec
rcll
mov
iret
fsubrl
inc
shl
add
aam
test
xor
int3
adc
ss
aam
inc
adc
aam
aam
mov
enter
fmul
or
aam
xchg
aam
aam
sbb
enter
aam
jb
and
aam
jb
and
and
and
aam
or
aam
imul
sarb
push
dec
push
shll
outsl
jns
dec
shll
mov
xor
shll
rcr
out
dec
shll
nopl
sub
aaa
or
adc
xor
xor
in
imul
pop
ds
xor
pop
xor
lods
add
inc
adc
push
adc
push
mov
cltd
push
mov
lods
shll
lcall
inc
add
lcall
imul
lcall
push
outsl
jns
lcall
stos
cmpsl
jecxz
stc
stos
call
aad
cmpl
add
ja
outsl
insl
and
xor
rcl
ret
rclb
rcl
rorb
and
rcl
xor
and
rcl
ror
and
dec
rcl
shlb
dec
xor
rcl
xchg
dec
xor
rcl
rcl
dec
xor
and
rcl
xor
and
rcl
ror
and
and
rcrb
sti
pop
xlat
add
and
imul
imul
imul
cmpsb
imul
xor
rcl
frstpm(287
out
stc
ss
sbb
mov
push
or
jno
add
xlat
sbb
fcoms
cmpsb
iret
mov
xor
or
inc
xchg
icebp
inc
inc
inc
push
inc
sub
inc
dec
nop
xlat
pop
pop
push
cmp
dec
fwait
jbe
cmp
js
in
dec
in
dec
add
push
cmpsb
imul
cmpsb
imul
cmpsb
imul
lcall
push
nopl
sub
aaa
inc
sub
xor
inc
push
pop
sub
cmpsl
jecxz
push
push
sti
ficoml
inc
sahf
sbb
fisubrl
mov
ret
or
mov
mov
fadds
sbb
pop
add
fstpt
xchg
ficompl
cmpsb
imul
pop
imul
pop
push
adc
and
das
cmp
push
popa
sbb
jne
test
sahf
jmp
add
fistpl
or
adc
pop
fdivrl
jecxz
sub
jmp
sbb
adc
nop
rcr
push
cltd
shll
mov
leave
pop
shll
sti
dec
add
push
nopl
sub
dec
inc
dec
push
pop
imul
xchg
push
xchg
mov
ds
fnsave
sub
push
and
ficoms
or
imul
ret
filds
lcall
mov
leave
rcr
out
dec
shll
nopl
sub
aaa
inc
dec
push
pop
and
jae
into
in
mov
movsb
loopne
push
or
sbbl
xchg
jp
test
gs
xchg
jo
ficompl
adc
dec
sbb
dec
add
xchg
push
popf
cmpsl
loopne
cmpsb
imul
cmpsb
imul
push
adc
daa
xor
inc
dec
imul
mov
xchg
push
fwait
movsl
cs
push
mov
xchg
push
es
mov
sbb
mov
frstor
jne
int3
or
or
jecxz
push
lahf
test
loop
mov
lods
xor
inc
add
or
pop
sub
cmp
dec
push
pop
outsl
jns
in
pop
xor
out
out
jecxz
mov
mov
push
out
in
and
sbb
push
cmp
cmc
push
or
addr16
nop
xor
push
push
loopne
add
popa
bound
and
jns
out
ret
fdivs
add
sub
sbbb
cld
and
enter
pop
in
and
cmp
add
hlt
push
or
lcall
inc
push
jecxz
leave
inc
push
cmp
adc
insb
ss
mov
push
xor
xor
test
ret
cs
mov
adc
das
adc
es
inc
xor
shrb
leave
arpl
cmp
adc
or
sbb
push
scas
addr16
adc
leave
inc
push
sub
xchg
dec
push
fwait
dec
adc
push
push
and
lods
adc
hlt
inc
sub
sub
jl
cmpsb
dec
repnz
clc
and
adc
pop
jns
and
mov
and
dec
es
dec
pop
cmp
inc
push
fwait
mov
daa
mov
int3
int3
int3
inc
push
cmp
int3
int3
int3
push
cmp
nop
int3
int3
int3
int3
cmp
nop
inc
int3
int3
int3
in
inc
push
int3
int3
int3
nop
inc
push
cmp
int3
int3
push
cmp
in
int3
int3
int3
sbb
int3
in
dec
rcrl
out
test
rcrl
frstpm(287
jno
jnp
shll
sub
aas
dec
push
pop
shll
dec
rcr
jmp
shll
lret
aad
movsl
imul
out
mov
jecxz
dec
shll
or
shll
cmp
xor
shll
jns
imul
and
cmpsb
cmp
push
popa
lcall
mov
insb
cmpsl
add
bnd
add
xchg
mov
icebp
push
sti
sbb
sbb
fistps
lock
xchg
pminsw
shll
repnz
aas
aaa
test
adc
xor
add
aam
int3
sti
loopne
inc
cmp
push
add
arpl
mov
pop
inc
and
cmp
xor
shlb
adc
es
jmp
test
arpl
add
mov
mov
lea
push
inc
inc
in
sbb
xchg
mov
enter
adc
pop
jmp
dec
and
push
neg
enter
or
mov
fimull
popa
out
dec
leave
cmp
add
jecxz
test
mov
and
fcompl
mov
jle
jo
push
add
in
mov
push
xor
or
pusha
repnz
mov
in
push
adc
xchg
lahf
mov
ret
mov
jge
xchg
xchg
adc
xchg
shlb
in
xor
and
in
pop
cwtl
dec
in
hlt
mov
adc
les
mov
and
pop
mov
add
xchg
rcr
add
test
in
adc
xchg
jne
or
mov
xor
ljmp
xor
mov
and
and
adc
mov
scas
sarb
jmp
jecxz
adc
lds
in
je
out
xchg
nop
int
or
adc
cmp
mov
lea
dec
lods
add
lea
xor
out
inc
xor
nop
aas
pop
cmp
dec
sub
add
bound
and
das
fsubl
adc
aad
scas
fidivl
pop
mov
mov
jecxz
adc
cwtl
or
int3
js
pop
add
es
sub
enter
and
adc
imul
mov
cmp
add
imul
push
lahf
pushf
xchg
je
push
or
xor
arpl
xor
movsb
imul
lock
inc
adc
push
ret
enter
lretw
icebp
movsl
jmp
cs
cmpb
aaa
hlt
adc
repnz
mov
pop
xchg
adc
fcomi
mov
inc
ret
arpl
icebp
xor
push
push
sub
sarb
and
movsl
push
mov
mov
in
mov
rcrb
loope
inc
ja
sbb
mov
pop
mov
push
sbb
in
sub
jmp
repnz
je
jno
jno
roll
push
adc
add
cmpsb
loopne
movsb
and
lcall
pop
dec
outsb
andl
out
sbb
je
daa
inc
mov
and
mov
add
pushf
push
in
adc
inc
or
stos
movsl
adc
push
inc
mov
lcall
in
push
jb
addl
mov
xor
and
jmp
cld
adc
push
enter
leave
xchg
pop
jle
or
hlt
xchg
sbb
dec
jne
or
xchg
inc
and
xor
lds
ret
fimull
test
movsb
jbe
add
mov
and
xor
sbb
aaa
cmc
jl
inc
orl
pop
sub
sbbl
outsl
imulb
sub
xor
mov
push
pop
pop
mov
nop
mov
stos
jae
mov
sub
popf
in
or
js
sbb
jmp
sbb
add
stc
xchg
push
push
mov
cmpsb
mov
nop
sbb
inc
pop
push
or
dec
popa
jg
stos
mov
and
cmp
pop
imull
clc
push
out
mov
jo
mov
aaa
mov
lret
cwtl
lods
add
push
add
stc
push
rclb
push
push
je
dec
leave
in
out
lret
mov
xor
hlt
add
sub
inc
in
mov
xchg
dec
dec
adc
inc
fs
in
bound
adc
adc
fyl2xp1
iret
stc
call
push
and
fistpll
pop
push
or
test
popa
push
lds
imul
add
pop
push
pop
sbb
pop
ja
cmp
adc
sti
add
in
xor
hlt
add
and
sub
xor
adc
add
dec
push
add
sti
sub
je
aas
arpl
mov
adc
cmp
call
add
add
sti
int3
ret
cmpsl
mov
jae
jo
jae
adc
cmp
popa
nop
pop
cld
push
scas
popf
sbb
adc
cwtl
xchg
xor
sarb
cmp
adc
xchg
and
in
jb
or
mov
enter
sbb
andl
mov
inc
insb
lods
lahf
std
ficomps
inc
and
mov
repnz
push
aad
decb
hlt
and
mov
xor
push
add
pop
addb
pop
in
push
in
pop
shl
shl
in
lea
xchg
or
cmp
call
and
sub
call
xchg
and
inc
dec
jmp
push
daa
faddl
and
sbb
dec
leave
inc
adc
push
add
es
in
sbb
add
push
add
inc
push
sub
jo
dec
test
or
mov
and
mov
mov
mov
add
add
adc
xchg
mov
mov
jns
mov
xor
mov
inc
jo
adc
push
mov
add
push
shl
mov
aam
sbb
mov
mov
mov
out
les
push
mov
lcall
lods
in
dec
test
clc
gs
scas
loopne
mov
or
enter
lret
clc
mov
mov
das
movsb
dec
pop
or
push
mov
cmp
shrb
mov
xchg
sti
iret
das
nop
sub
push
and
sbb
mov
unpcklps
mov
xlat
pop
faddl
dec
or
and
pop
shrb
push
xchg
or
or
mov
testb
adc
pop
rcll
pop
fwait
imul
adc
das
pop
shlb
pop
enter
lods
lds
nop
mov
xchg
mov
scas
cmc
in
in
lret
into
pop
sbb
adc
add
adc
pop
prefetcht1
mov
or
inc
adc
xlat
sub
mov
pop
or
jb
jns
or
or
and
adc
push
cli
inc
mov
pop
leave
or
adc
insb
adc
xor
or
mov
or
pop
dec
xchg
or
push
call
gs
add
mov
cmp
push
movsb
add
adc
bound
xchg
and
ret
bt
mov
inc
mov
mov
xor
popa
pusha
mov
xchg
popa
adc
xchg
pop
dec
sarb
nop
or
mov
lock
and
add
stc
nop
int
add
adc
adc
mov
pop
popa
xchg
mov
jg
clc
clc
rclb
shr
enter
inc
xlat
vmwrite
adc
jle
xchg
xor
mov
or
sub
mov
jae
jns
push
outsb
shll
shlb
in
lahf
push
cmovs
sub
pushf
lcall
push
cmpb
add
sub
adc
and
push
in
je
notl
add
loope
pushf
leave
add
adc
push
repnz
adc
orl
sub
lock
sbb
aam
adc
stos
inc
sub
and
les
dec
adc
ret
xlat
xchg
push
mov
inc
das
cmpsl
or
sbb
adc
push
add
mov
sub
jns,pn
test
ret
dec
std
movsb
and
ljmp
movhlps
adc
jns
or
rclb
push
adc
sub
addl
dec
push
add
xor
mov
adc
pop
dec
push
push
xchg
mov
shll
loope
or
jle
sub
cmpsl
loopne
sub
mov
aam
add
and
loope
push
bound
jae
rorb
xchg
popa
int3
int3
lea
andl
cs
sub
pop
call
imul
adc
inc
pop
addl
adc
mov
scas
adc
cmp
push
add
adc
inc
jb
add
xor
xchg
sub
mov
mov
push
push
mov
inc
cmp
push
adc
and
or
inc
sub
vmwrite
dec
or
es
cmp
mov
dec
pop
bound
rclb
sbb
inc
pop
jns
mov
pop
mov
inc
repnz
adc
sbb
jb
adc
sub
int
push
adc
mov
nop
add
jmp
rclb
sbb
mov
sbb
arpl
and
xor
lahf
sbb
call
repnz
push
jns
sbb
dec
pop
add
mov
xchg
add
sbbl
das
nop
sbb
cwtl
cmpsl
mov
test
dec
cmp
leave
and
cwtl
sbb
push
inc
xchg
sub
dec
sbb
and
nop
pop
mov
stos
or
adc
pop
and
xor
addl
notl
xchg
xchg
mov
test
adc
adc
sbb
lea
push
or
or
aaa
and
add
xchg
sbb
mov
loop
pop
fadds
cmp
testl
leave
sbbl
push
popf
or
cmpl
inc
push
pop
sub
stos
icebp
mov
ss
or
stos
in
dec
test
ret
and
adc
sbb
push
mov
and
adc
nop
aaa
adc
xlat
enter
es
das
and
and
fs
and
aad
es
push
and
jo
xchg
and
leave
push
adc
in
push
enter
and
push
dec
scas
and
xor
jb
dec
and
inc
and
out
inc
jb
and
fiadds
sbbb
mov
add
inc
inc
out
cmp
enter
xchg
sub
sub
loopne
push
mov
inc
and
inc
xor
or
xchg
inc
loop
adc
stos
call
jne
inc
xor
les
mov
in
xor
sub
shrb
push
out
es
and
xchg
insb
es
jns
daa
jo
xchg
inc
ss
add
mov
and
in
into
daa
in
hlt
cmp
push
inc
jns
inc
pop
and
sub
cmp
pop
push
repnz
sub
sub
lods
add
adc
sub
insb
sub
add
pop
or
adcl
jg
movl
daa
cmp
in
push
notb
sub
int3
cmp
scas
mov
pop
enter
in
lcall
call
popa
in
loopne
xor
in
and
add
fadd
fcoms
nop
and
jmp
stos
pop
push
sub
mov
mov
xor
push
push
data16
or
or
or
test
pop
sub
or
nop
inc
lcall
pop
cld
dec
push
adc
sub
scas
sbb
and
test
andl
add
or
sub
cmp
mov
sbb
and
inc
push
adc
adc
leave
cs
in
seto
inc
xchg
cs
push
leave
xor
adc
add
xor
mov
jae
mov
cmp
cwtl
jne
mov
or
loop
push
inc
fsts
inc
mov
jge
in
xchg
inc
ss
mov
jo
jnp
sbb
movaps
stos
inc
imul
jnp
mov
inc
mov
pop
or
mov
pop
repnz
xor
jo
in
push
dec
cmpsb
pusha
mov
push
ret
mov
xchg
adc
rcr
hlt
push
cmp
enter
xor
push
sub
push
bound
mov
insl
pushf
lret
pop
in
xor
nop
mov
insl
outsl
and
sbbb
xchg
dec
cmp
leave
sbb
aam
sbb
mov
jmp
fwait
les
leave
sbb
js
jge
cmp
cmp
bound
leave
or
xor
lock
cmp
pushf
and
adc
mov
inc
add
movsb
cmpsb
inc
mov
push
cs
push
adc
xor
add
inc
jb
nop
sub
sub
xor
push
dec
dec
ss
nop
xor
popf
nop
pop
and
and
leave
inc
leave
add
and
add
and
xchg
and
dec
push
sbb
push
push
movsb
test
incl
cmp
xchg
jl
adc
cmp
sbb
push
xor
and
mov
add
sub
inc
lcall
ret
lahf
add
adc
adc
insl
cwtl
lods
rcr
push
jo
outsl
outsb
mov
ja
cmp
adc
sub
sub
mov
jbe
inc
iret
nop
xchg
test
adc
adc
repnz
adc
lods
jae
add
pop
lcall
adc
and
aaa
pop
inc
mov
mov
xor
jnp
adc
push
std
leave
jb
sahf
pop
and
lret
fiadds
filds
and
add
push
not
jmp
js
pop
adc
adc
pop
daa
out
or
pop
inc
repz
push
cmp
pop
xor
sbb
cmp
insb
dec
nop
out
mov
mov
or
cmp
iret
or
or
cmp
bound
mov
mov
push
sbb
cmpsl
in
jbe
mov
dec
dec
in
ja
mov
push
mov
rcl
xchg
push
or
mov
aam
fdivl
out
xor
and
push
cmp
xlat
sub
xor
rcrb
sahf
or
hlt
add
lret
leave
sub
cli
xlat
mov
daa
xchg
inc
out
cli
cmpsb
mov
pop
cmp
rcl
xlat
repz
adc
xor
cmp
dec
orl
rcll
aaa
cwtl
xorb
pop
and
add
addr16
cmp
and
dec
adc
cmp
dec
bound
xchg
xor
ret
imul
cmova
mov
sti
cmp
jne
lock
inc
dec
jne
and
pop
flds
push
pop
loopne
scas
imul
dec
addl
out
dec
jno
adc
pop
lea
arpl
cmp
mov
sub
js
mov
repnz
sbb
in
jne
xchg
jo
pop
and
adc
mov
add
adc
cmpl
cmp
lods
pop
mov
or
aaa
jbe
daa
cmpb
jne
mov
add
loopne
invd
sbb
push
out
xchg
cmp
movsb
add
bound
aaa
push
aaa
mov
mov
dec
push
aas
push
add
je
inc
mov
or
insl
cld
insl
add
or
jb
ss
mov
xchg
cwtl
pop
rol
push
mull
imul
dec
popa
cs
sbb
insl
es
dec
mov
inc
outsl
je
addr16
xor
sbb
jb
adc
fstpl
ss
inc
imul
lcall
je
loopne
fdivl
pop
and
in
fisubrl
cmpsb
dec
sahf
ss
das
pop
adc
jns,pn
shrb
dec
mov
xchg
ret
test
jbe
repnz
xor
lock
jae
add
repz
cmp
push
add
mov
adc
push
mov
lods
mov
mov
sbb
inc
push
dec
adc
fiadds
repz
and
mov
push
aas
jbe
pop
jnp
je
imul
lahf
insb
ljmp
lret
mov
sbb
inc
add
out
inc
fsubrp
push
inc
pop
data16
daa
dec
sbb
pop
push
inc
push
daa
push
or
mov
movsb
into
insl
push
inc
daa
add
fcoms
jb
push
or
xorl
lods
dec
sbb
jle
push
and
push
or
pop
repz
xor
push
push
adcl
push
and
outsb
and
sbb
popl
out
pop
xchg
push
out
bound
jns
mov
lret
ret
mov
sub
push
insl
stos
or
push
aas
mov
sbb
mov
push
orb
dec
push
jo
sub
push
sbb
shlb
push
mov
aas
push
add
mov
sbb
inc
lahf
adc
pop
mov
jb
cli
data16
pusha
dec
mov
inc
ficomps
push
fidivl
pop
arpl
call
sbb
inc
aad
push
testl
scas
mov
sbb
dec
jo
xor
mov
adc
aaa
xchg
ss
inc
or
or
sub
jbe
mov
cmpb
cmpsb
jge
lea
test
push
lcall
dec
push
inc
imul
xor
movsl
cmp
xor
xor
xor
mov
xchg
sub
xor
and
sbb
lcall
loopne
cmpsb
imul
imul
dec
shll
xor
or
imul
cmpsb
imul
imul
cmpsb
imul
lcall
mov
loopne
shlb
xor
lods
test
shll
shll
or
lcall
in
int3
imul
imul
cmpb
js
jae
sub
rol
movsb
stc
testb
add
add
ja
sti
xor
or
push
sub
pop
mov
xor
pop
cmp
sbb
sbb
push
push
pop
mov
das
cmp
push
mov
jno
movsb
imul
sbb
outsl
and
mov
add
sbb
shll
jae
push
cmpsl
pop
shll
xlat
arpl
pop
es
insl
inc
movsb
push
andb
dec
push
xorb
dec
cld
jle
stc
jns
jne
pushf
mov
add
mov
rorb
jge
mov
sbb
call
cmpl
dec
inc
push
pushf
sub
xchg
xchg
inc
cld
nop
lock
mov
fs
cmpsb
imul
push
pushf
je
js
xor
xor
fs
pusha
in
xor
pop
out
pop
addr16
clc
push
jno
orb
jae
decb
jo
dec
push
dec
sub
sub
xor
push
inc
dec
and
out
push
push
inc
inc
ss
add
into
mov
aas
pop
jp
jb
push
mov
pop
dec
lods
jb
lds
test
push
mov
dec
mov
test
add
dec
mov
xchg
packuswb
add
lods
mov
dec
mov
sbb
add
nop
xlat
push
push
mov
xor
mov
add
nop
add
loop
cwtl
xchg
je
addr16
dec
nop
inc
scas
cmp
fs
push
fs
mov
push
cmc
pushf
jne
loop
cmpsb
in
and
cld
pushf
jecxz
andnps
add
dec
dec
xlat
out
dec
add
mov
push
jmp
pop
lret
nop
movsb
dec
pusha
movsb
pop
push
mov
push
or
add
dec
mov
test
jle
pop
dec
push
inc
inc
jb
or
adc
mov
dec
aas
mov
lock
mov
push
push
xor
movsl
stc
jle
push
pushf
pop
pop
and
fcomps
dec
xchg
lcall
fs
aas
pop
pusha
popa
push
sub
push
bound
xchg
jl
mov
xchg
scas
dec
push
pusha
clc
push
aam
mov
ja
xchg
and
xchg
rcrb
mov
jo
xchg
mov
push
movsb
and
adc
pop
pop
std
xor
adc
int3
push
adc
push
sub
inc
insl
dec
fisttps
sbb
push
imul
mov
int
aaa
adc
lods
adc
movl
sbb
outsl
xchg
mov
cwtl
aas
or
sub
cmp
clc
sbb
rcrb
fistpl
ret
inc
adc
add
cmc
add
fadd
hlt
dec
dec
dec
and
sub
mov
dec
insb
jmp
adc
mov
jo
add
cmpsb
enter
test
gs
fdivrp
pop
xor
mov
or
pop
xchg
add
add
add
pop
push
inc
pop
cmp
shll
mov
dec
lahf
sub
mov
add
nop
movl
shlb
das
jns
adc
rcrb
dec
pop
jp
push
inc
sub
sub
gs
popf
xor
in
fsubr
mov
push
push
aaa
mov
dec
cld
adcb
jge
and
or
insl
shlb
xor
inc
mov
test
into
xchg
and
push
dec
fcoms
add
gs
sub
cmp
outsb
adc
out
mov
pusha
mov
subb
jp
push
dec
jo
or
inc
adc
add
aas
out
and
sbb
mov
adc
jmp
cmpsl
popa
cld
push
out
inc
fildl
add
pop
inc
xchg
lods
rcrl
push
fcompl
add
cltd
lret
testl
mov
shl
xchg
into
mov
push
xor
mov
push
dec
mov
shl
mov
sbb
push
push
xchg
dec
mov
rcrb
adc
push
ljmp
xchg
rcrl
nop
outsb
sbb
push
or
or
pop
repnz
sub
mov
and
cld
ss
or
add
mov
enter
sbb
xchg
ljmp
stc
sbb
ljmp
fldcw
xchg
rclb
push
enter
outsl
pop
dec
inc
out
shrl
sbb
push
gs
inc
pop
add
mov
es
inc
or
sahf
mov
or
dec
cmp
in
and
je
cmpl
ficoms
pop
in
popf
inc
aas
and
mov
adc
das
adc
dec
fldenv
mov
mov
dec
lds
enter
adc
loopne
push
in
data16
inc
inc
push
or
sbb
add
sbb
sub
pop
ret
inc
push
js
ja
add
pop
icebp
xorb
jb
loopne
mov
in
add
xor
add
lret
ja
mov
lods
jmp
or
cmp
sub
xor
adc
push
and
clts
sbb
daa
pop
jmp
push
inc
ja
mov
hlt
adc
mov
fdivrl
xor
pop
adc
push
fsts
lods
dec
es
and
out
mov
sub
dec
sub
and
data16
cltd
and
mov
mov
mov
mov
sbb
ret
fistl
int
fmuls
push
sub
and
adc
ror
sub
cmp
mov
repz
adc
enter
roll
push
sbb
dec
add
ret
jo
xchg
lock
pop
pusha
xchg
hlt
mov
shlb
adc
or
push
or
out
in
sub
xchg
loope
adc
add
imul
or
hlt
popf
mov
insb
inc
pop
jl
or
rcr
ret
xchg
int3
adc
pop
ret
js
leave
sub
or
rol
inc
lds
or
inc
pop
aaa
pusha
shl
and
inc
pop
and
xchg
outsl
rcrl
jge
and
ret
andl
mov
imul
sub
cld
cmp
pop
mov
ja
cld
push
mov
jns
pop
gs
enter
add
ds
insb
cwtl
inc
jb
add
mov
add
sub
imul
lea
pusha
and
stos
add
push
in
scas
andl
popa
mov
adc
inc
pushl
je
pusha
or
and
pop
inc
push
mov
jp
add
dec
sbb
pusha
jne
shrb
sub
fildll
push
cmp
sub
mov
movsl
pop
add
popa
loopw
popa
inc
and
mov
movsl
lods
fwait
inc
icebp
leave
into
or
add
jl
hlt
sti
jmp
or
mov
add
ret
add
inc
xchg
inc
or
jbe
pop
sbb
xchg
and
movsb
orl
dec
adc
pop
push
fmuls
push
add
arpl
pop
imul
push
mov
into
mov
dec
sbb
loop
and
xchg
sbb
mov
dec
push
sub
mov
jle
idiv
dec
adc
dec
add
push
lea
mov
push
inc
add
or
adc
sbb
imul
into
mov
roll
cli
lea
sbb
dec
pop
fcoml
cmp
pop
xchg
insl
daa
mov
jp
add
mov
dec
aaa
mov
push
xchg
popa
out
jmp
sbb
mov
inc
jns
jp
dec
out
jp
mov
jge
shl
dec
inc
aas
mov
adc
shl
jecxz
mov
nop
sar
cmp
adc
jecxz
push
cmp
push
mov
gs
or
sbb
add
ret
sub
sub
mov
ficoml
popf
ret
bound
xor
int
add
pop
lock
xchg
pop
pop
divl
and
sbb
js
ds
sbb
add
add
and
mov
insl
pop
cwtl
lds
pop
push
cld
and
cmp
sbb
add
cmp
sbb
les
loop
and
dec
and
adc
mov
push
sbb
loope
adc
cmpb
jl
add
test
xor
sub
dec
jo
repz
aad
pop
add
inc
out
or
data16
push
sbb
pusha
jns
loope
test
mov
cltd
adc
push
and
sub
adcl
pop
test
lods
in
imul
aam
divl
inc
clc
sub
imul
icebp
sbb
xor
movsb
inc
adc
inc
add
inc
loope
scas
loope
inc
pop
les
cmp
ss
rol
aaa
push
push
sub
jl
in
push
push
call
or
pop
pushf
xor
inc
and
cmp
add
cmp
les
or
stos
inc
inc
loope
mov
ret
enter
sbb
orb
outsl
lock
fsubl
cmpsb
test
mov
push
inc
inc
push
lcall
inc
test
push
test
scas
pop
and
adc
xor
jmp
cmp
dec
insb
mov
inc
inc
mov
mov
mov
xor
jo
sub
push
inc
incl
xchg
jmp
or
or
inc
and
push
mov
call
sahf
jns
cld
lea
mov
pusha
stos
mov
inc
or
arpl
sbb
mov
int
fiadds
adc
or
mov
jbe
xchg
adc
das
cmp
inc
cs
xor
aad
dec
arpl
jmp
cmpsl
test
imul
xlat
add
enter
fildl
sbb
in
push
mov
faddl
in
sahf
push
dec
pushf
push
popa
gs
pop
cli
adc
ja
gs
inc
gs
push
aaa
cmp
loopne
mov
ja
jbe
test
mov
mov
push
leave
nop
loopne
movb
and
shll
nop
pop
bound
rclb
or
es
dec
jne
call
fldcw
or
leave
or
arpl
jno
fcoms
push
xorl
pop
add
mov
adc
pop
lock
push
jg
in
cli
ds
mov
call
adc
or
ss
sbb
cmp
or
cmp
add
xorb
jnp
push
les
mov
xor
pop
cmpsl
xchg
jb
test
or
movsb
mov
notl
add
fnstsw
sub
cltd
jns
mov
outsl
sbb
nop
xor
popl
sbb
mov
or
push
out
test
ret
mov
ja
dec
je
mov
addl
and
popf
and
sub
or
imul
add
je
dec
mov
pusha
std
push
jmp
inc
loopne
fcoms
loope
ret
ret
inc
jb
test
enter
push
xchg
add
ret
push
mov
lret
and
adc
xchg
xor
sbb
adcl
das
push
inc
inc
add
add
xor
add
cmp
fisubs
sub
xlat
jb
and
sub
xchg
dec
in
push
pop
cmpsb
or
adc
push
add
adc
mov
dec
pop
jno
jg
shl
jno
addr16
mov
push
movsb
js
add
sub
jnp
cmp
lock
inc
inc
inc
xor
and
push
push
pop
or
pop
pusha
aam
sti
dec
xchg
andb
scas
sbb
pop
cmp
sbb
leave
or
sub
stos
push
adc
push
sub
pushf
das
inc
add
xor
jmp
movsb
jmp
sti
add
add
mov
insb
mov
mov
int
testb
jo
ja
aaa
mov
fwait
push
or
add
popa
lcall
push
dec
inc
and
push
sbb
inc
mov
xchg
push
xchg
ss
xor
jo
cmp
fimull
push
arpl
lret
mov
fsubs
dec
jmp
arpl
and
push
sub
dec
repz
cmp
mov
xor
lret
rorb
into
and
lahf
sbb
addr16
jne
lea
push
je
xchg
cmpxchg
inc
adc
adc
aas
add
inc
cmpl
cmp
and
add
sub
pop
ret
sub
lock
push
jne
push
cmpl
loop
imul
sbb
inc
push
adc
or
loope
add
mov
clc
xchg
mov
cmc
icebp
fxtract
and
inc
jmp
popa
pop
ss
add
or
pop
mov
pop
mov
insb
sub
dec
mov
dec
jl
or
jl
stc
adc
push
pop
dec
push
adc
movl
mov
xor
adc
mov
or
dec
repz
movsl
dec
add
flds
sbb
xchg
js
fcomi
push
add
test
add
sub
add
add
jae
nop
lret
aad
add
pop
sti
xor
mov
add
iret
jnp
es
jg
add
add
add
or
fwait
xor
pop
or
test
dec
push
mov
jne
cli
std
dec
or
cmp
jo
ss
inc
dec
int3
das
call
push
dec
popa
mov
add
fsubrl
mov
mov
divb
lea
jnp
mov
cmpsb
lahf
add
dec
add
add
mov
mov
and
push
xchg
adc
add
pop
popf
pop
pop
and
add
pop
mov
testl
mov
inc
dec
add
dec
sarl
jge
pop
jmp
push
icebp
xor
sarb
dec
push
push
shl
clc
sarb
sbb
inc
or
in
ja
mov
adc
js
pop
cmp
addr16
cwtl
test
jnp
pop
shl
jne
int3
stc
es
out
push
mov
lea
pop
mov
std
ja
add
xchg
xor
adc
fst
xchg
jg
stos
inc
sub
lods
out
inc
cmpsl
mov
mov
xor
dec
xchg
cmp
jnp
mov
or
addr16
adc
mov
mov
mov
mov
repz
cmc
and
je
std
push
mov
mov
subb
adc
movsl
mov
or
sub
sbb
lret
or
loopne
sub
inc
jg
and
iret
dec
dec
xchg
test
pop
pop
loop
add
jne
test
push
pusha
test
movsb
fnsave
addr16
or
ja
add
and
push
mov
pop
sub
fistl
sub
fcomps
outsb
add
loop
call
fnstsw
mov
push
mov
add
insl
mov
dec
jl
mov
das
imul
jg
lods
mov
add
cmp
and
jae
inc
arpl
adc
adc
inc
sbb
imull
xor
sbb
push
xor
out
aam
insl
mov
xchg
xor
jno
dec
xor
mov
das
push
mov
jae
add
lahf
leave
sbb
dec
mov
inc
push
nop
ja
loop
and
jmp
mov
js
cmp
les
adc
sbb
outsb
mov
arpl
in
sub
xor
ffreep
scas
jns
jmp
sbb
sub
jnp
lret
jl
adc
sbb
xchg
inc
mov
test
cmpsl
mov
or
mov
fnstsw
lods
imul
push
push
xor
sub
imull
add
aam
addb
js
push
add
sub
add
hlt
or
add
sub
add
cltd
add
inc
or
add
popa
jecxz
xchg
sbb
ficoms
shrb
clc
jbe
cwtl
dec
push
je
push
pop
or
dec
xor
inc
js
lahf
adc
fisubrs
mov
jge
sbb
loopne
adc
dec
or
idivl
sub
out
inc
pop
sbb
jae
dec
pop
adc
jae
cwtl
sarl
shlb
and
cltd
sbb
add
clc
pop
lock
sub
sub
jbe
jbe
insl
insb
pusha
add
xchg
lret
enter
and
jmp
test
dec
add
inc
cmp
sbb
push
or
mov
and
mov
outsb
xor
cmp
cmp
pop
cmpsl
inc
xor
or
clc
jge
popa
jl
adc
jl
mov
movsb
sbb
or
nop
les
pop
ret
add
add
shll
sub
inc
data16
out
in
push
inc
dec
dec
lock
dec
sbb
add
dec
xchg
cmp
loopne
push
pop
sbb
add
cld
lret
or
inc
sub
fisubrs
push
or
mov
insl
xchg
xor
push
enter
xor
icebp
or
lock
fstpl
jo
sub
mov
jae
mov
pop
mov
call
xchg
dec
push
push
mov
cmp
add
push
cmp
loop
pop
mov
in
mov
and
push
push
lret
ss
sub
push
addr16
jmp
shrb
in
or
push
adc
mov
adc
sbb
pop
cs
gs
call
pusha
movsb
lret
jb
je
jb
or
cmp
test
test
and
xchg
mov
mov
inc
cmp
dec
pop
add
jbe
pop
push
andb
push
inc
sub
shll
or
add
xchg
rorb
lret
sub
into
lods
xlat
fdivr
inc
push
cmc
dec
loope
adc
subb
and
mov
mov
lcall
push
or
cmp
bound
ds
test
add
xorl
in
sbb
cmp
and
fmuls
in
xchg
jg
inc
movsb
insl
xor
or
fistl
dec
sbb
and
pop
repz
sbb
and
aas
sti
fs
or
cmp
mov
cmp
sarb
cmp
outsl
sti
out
or
hlt
jle
shl
push
aaa
inc
aaa
stos
lret
lods
or
scas
das
and
jnp
insb
mov
imul
inc
daa
or
pop
mov
mov
or
inc
pop
scas
idivl
push
xchg
dec
dec
inc
and
inc
xchg
in
jb
test
xor
inc
dec
in
xchg
mov
outsb
mov
push
pop
jo
out
dec
out
and
dec
ljmp
int3
xchg
xor
fsubs
or
inc
inc
jmp
push
or
testb
sub
rolb
pop
adc
das
enter
pop
ja
push
jno
imul
scas
out
xchg
cs
add
cmp
inc
fcomps
or
aad
pusha
mov
in
pusha
lock
pusha
xor
shrb
or
lahf
js
fimuls
xor
mov
and
imul
sbb
test
sub
dec
inc
or
mov
inc
jo
or
jle
iret
or
lahf
dec
pop
incl
mov
push
xorl
loopne
in
lods
cmp
pop
sub
add
clc
outsl
lret
jns
xchg
jl
mov
cmc
subb
aam
inc
js
jle
leave
jae
cmpl
xor
arpl
pop
or
testl
push
or
pushf
imul
cltd
inc
xchg
push
push
pop
mov
or
sub
sbb
jne,pt
or
ja
sub
adc
icebp
mov
cwtl
and
stos
test
push
mov
fucomp
mov
jle
mov
ljmp
cltd
shlb
cmp
xor
jo
sbb
into
sbb
pop
xor
popf
cmpsl
daa
or
fsubr
ds
adc
mov
cwtl
jno
and
or
sub
cmp
mov
fs
cmpsl
cmp
jge
mov
add
and
ret
push
inc
mov
test
xor
mov
mov
insb
jns
adc
mov
pop
push
mov
sbb
cmp
mov
addl
fmull
sub
dec
mov
add
pop
sbb
push
test
imul
add
ljmp
aaa
in
push
mov
sub
add
sbb
and
shlb
mov
add
lret
lock
fscale
mov
adc
mov
dec
jle
jmp
scas
cld
fwait
clc
test
mov
jle
jmp
sub
into
jns
fisttpll
cld
dec
in
jg
add
sub
roll
and
rolb
mov
les
mov
cmp
mov
outsb
adc
push
fbld
out
inc
adc
int
iret
jns
jns
pop
pop
xor
jns
xorl
cmp
stos
pushl
out
and
and
dec
push
insl
mov
rclb
lret
push
fsubl
pop
dec
lret
push
lods
sbbl
andb
into
sub
sbb
inc
adc
jne
dec
xor
dec
jle
or
out
and
in
xor
mov
sub
int3
inc
jnp
fnsetpm(287
push
fcompl
pop
and
sbb
pushf
movsb
bound
mov
jmp
lods
dec
push
mov
scas
pusha
jns
je
jnp
push
fwait
add
arpl
ss
add
loopne
dec
push
jb
jo
aad
aaa
loope
push
mov
int3
dec
inc
mov
and
mov
ja
stc
test
mov
insb
cltd
sbb
dec
pop
aas
insb
adc
les
pop
addl
push
inc
rorb
xchg
dec
dec
or
adc
in
mov
cmp
ret
rolb
in
sahf
xor
pop
push
mov
leave
adc
ror
cli
pop
out
sbb
fldl
scas
mov
adc
idivb
cmc
jbe
mov
pop
xlat
adc
icebp
jns
mov
mov
add
cmpsl
sub
int3
jp
scas
adc
mov
arpl
arpl
xlat
mov
jle
sbb
mov
ret
mov
adc
xor
adc
ror
cmp
adc
xchg
scas
dec
lock
mov
jns
or
xor
loopne
push
pop
imul
adc
out
outsl
mov
adc
and
sub
sub
sub
js
scas
out
lods
test
xchg
dec
cld
add
dec
cmpl
cmpsb
adc
punpcklbw
mov
push
pop
in
mov
jmp
add
scas
fnstenv
cmp
jne
mov
out
loop
movsl
sub
jp
sub
xchg
aas
dec
xor
loope
xor
das
mov
popf
or
out
inc
jo
and
enter
pop
and
cltd
mov
add
add
or
nop
add
dec
insb
add
xchg
fildl
leave
imul
pushf
jge
out
push
cmc
mov
cmp
shlb
bound
dec
mov
jmp
add
dec
mov
add
xor
fldl
rolb
jp
orl
xor
dec
or
ljmp
dec
sbb
outsb
and
imul
xor
jnp
or
or
and
sub
xchg
xchg
or
out
jb
or
sbb
xor
cmp
sbb
add
add
popf
add
xorl
dec
add
add
or
jle
push
push
ret
sbb
addb
mov
add
jo
fmuls
adc
lock
adc
ret
lea
mov
popa
add
and
sti
jge
sahf
cmc
popa
stos
mov
movb
cmp
testb
jl
push
push
sbbl
jne
pop
les
add
lods
sub
inc
add
loope
adcb
jo
js
rcl
pop
dec
xchg
mov
and
dec
or
rolb
adc
and
inc
push
ss
xchg
mov
xor
push
test
or
push
das
out
adc
adc
aaa
xchg
pusha
loope
jmp
fdiv
aas
push
adc
push
and
sbb
jno
movsl
mov
push
dec
imull
adc
cmp
aaa
push
sbb
nop
push
jne
xchg
clc
sub
je
lret
in
rol
cmpsl
rorb
popa
ljmp
xchg
sbb
xor
int3
pop
sbb
sbb
repnz
or
xchg
xchg
or
pop
popf
enter
push
jmp
mov
iret
fistpll
adc
sbb
into
fsubrl
xchg
or
adc
adc
jg
xlat
adc
imul
adc
adc
mov
add
inc
inc
add
lret
mov
lds
roll
lret
pushl
sbb
sub
fidivs
fstpl
int3
adc
add
pop
inc
or
loop
insl
jne
pop
fwait
loope
adc
insb
jmp
mov
imul
es
jmp
cs
inc
stos
xor
rclb
ja
xchg
add
inc
enter
insb
les
add
pusha
adc
sbb
into
adcl
lret
and
xor
dec
jnp
mov
add
add
mov
and
push
mov
ret
imul
add
mov
push
pop
or
mov
daa
pop
xchg
incl
pop
cmp
and
in
and
inc
adc
out
push
sbb
dec
lahf
mov
stos
arpl
aaa
es
cs
daa
daa
fisttps
pop
sub
pop
lahf
inc
test
sbbb
sub
mov
aam
add
jmp
stos
mov
loopne
fldt
sti
push
push
or
es
fnstcw
and
inc
or
outsb
mov
dec
fsub
mov
push
pushf
add
push
insb
fistps
or
mov
gs
xor
ret
fidivrl
pushf
and
mov
sub
sti
lea
add
cmp
roll
or
cmp
cld
je
shl
add
popa
jo
mov
add
push
add
xchg
imul
push
or
aas
mov
adc
inc
cmp
add
mov
lret
in
lea
jge
js
mov
test
dec
push
and
mov
ljmp
or
push
sbb
xchg
push
dec
xchg
adc
enter
popa
addl
pop
cmp
imul
das
mov
jmp
loopne
xor
ret
sub
dec
add
lea
decb
add
into
lea
hlt
push
movsl
movsb
mov
jmp
das
sbb
aaa
dec
int3
sub
das
pop
mov
adc
sub
add
sbb
ficoms
or
gs
xchg
pushf
inc
pop
scas
xorl
ds
and
mov
xchg
scas
push
xor
rcll
movsl
out
push
outsl
sbb
push
sub
std
popa
lods
shrl
fisttpl
lret
out
lock
fmulp
rorl
shll
or
sbbl
jnp
push
or
sahf
jl
mov
adc
jns
sahf
test
movsl
insl
xchg
dec
jl
insl
bound
insb
and
inc
popa
pusha
popf
mov
rol
xchg
dec
test
pushf
stc
mov
cmpsl
mov
adc
shl
mov
aad
loope
test
lret
mov
xlat
outsb
push
and
mov
iret
or
pop
add
push
shll
test
dec
xchg
sub
call
out
jge
sbb
add
mov
mov
pop
rcrl
xlat
sub
xor
ljmp
dec
mov
clc
and
pushl
mov
sbb
adc
arpl
idivb
jge
add
xor
or
inc
lods
fnsave
push
fucomp
sub
xchg
cwtl
sbb
cmp
jmp
sub
push
cmp
repz
xchg
add
das
test
shl
dec
and
cmp
xlat
cmp
lcall
shlb
pop
cmc
scas
test
pop
test
pop
mov
add
jecxz
mov
sbb
and
sbb
xchg
fs
aaa
mov
cmpsb
pop
cwtl
lock
xor
cmpsl
inc
rcrl
jb
and
or
lea
imul
sub
dec
pop
das
int3
xchg
push
popa
xchg
imull
addl
dec
adc
js
push
push
sarb
jno
push
sub
jno
repnz
or
mov
adc
jl
fsts
pop
add
jmp
ret
xor
mov
mov
and
sub
push
or
pop
daa
jp
js
imul
nop
or
aas
dec
or
cmp
inc
jle
mov
and
lret
mov
mov
insb
test
pop
mov
mov
lea
sbb
mov
outsl
test
sub
fisubs
movzbl
jge
mov
mov
ret
clc
jge
clc
lock
out
sub
sub
pop
jno
je
sti
xchg
outsl
test
cmc
sar
mov
imul
lock
mov
inc
cmp
push
jle
out
call
sbb
bnd
inc
jmp
mov
jo
push
movzwl
pop
jmp
mov
shrb
bound
push
adc
sub
lds
dec
fcoml
add
mov
js
push
stos
cmp
xor
pop
mov
sbb
sbb
and
mov
sub
adc
inc
adc
leave
rcll
stos
decl
pop
xor
mov
fdivl
or
cmp
loopne
xchg
mov
fwait
mov
mov
lea
aam
dec
out
xchg
adc
mov
mov
lahf
xchg
insl
imul
mov
sbb
or
icebp
aad
cld
cli
sar
test
and
fiaddl
or
inc
aas
add
mov
cmp
xor
dec
jne
pop
jno
into
mov
sbb
stos
xor
jb
or
sbb
es
aaa
mov
pop
cli
or
loopne
andl
mov
aaa
nop
inc
adc
sbb
push
xor
mov
addr16
leave
push
sub
add
test
xor
das
leave
enter
push
mov
sub
xchg
and
cmp
int3
rorl
sub
mov
pop
insl
hlt
and
adc
or
dec
fs
cmp
enter
insb
add
sub
es
cmpsl
test
movsb
stos
cmpsb
cmp
inc
mov
das
and
lods
in
frstor
nop
mulb
cmpsl
sub
push
mov
push
data16
pusha
jecxz
popa
push
dec
inc
popa
mov
push
jbe
sbb
leave
pop
or
push
add
push
and
xor
outsl
ja
lds
pop
or
pop
or
jmp
cmp
rcll
jne
sbb
popa
push
and
jmp
push
sub
push
rolb
lods
xor
out
mov
jne
nop
in
or
add
pop
pop
sbb
adc
cmp
pusha
dec
lret
push
nop
inc
jl
xor
xchg
xchg
add
clc
movswl
and
adc
inc
push
jl
inc
call
mov
inc
fistpl
or
add
js
jmp
or
lds
inc
mov
sbbb
xor
mov
xor
cld
std
es
outsl
xchg
lock
ljmp
in
xor
add
pop
or
scas
pusha
xor
jno
subb
inc
in
xor
nop
sbb
cmp
pop
push
rorb
jmp
sbb
shrb
xchg
dec
jle
hlt
push
mov
cwtl
sbb
popf
frstor
xchg
push
dec
cmp
gs
cli
cmp
pop
inc
add
scas
mov
daa
jecxz
test
dec
out
xchg
aaa
cwtl
cmp
dec
and
loope
mov
pop
mov
inc
mov
jge
mov
push
test
inc
mov
push
fimull
test
jmp
xchg
sub
jecxz
sbb
aas
fucomi
or
test
inc
mov
push
push
or
adc
inc
cli
sub
jp
std
or
jmp
jp
mov
lods
and
xchg
sub
lea
push
mov
pop
arpl
or
or
lods
or
add
sbb
push
cmp
inc
dec
lea
popa
divl
jmp
mov
dec
xchg
jmp
sarl
mov
fcoml
pop
js
inc
add
das
int3
popa
add
out
popa
mov
and
setg
and
jecxz
jmp
js
push
mov
rolb
jg
cmc
push
and
add
cwtl
xchg
dec
push
push
and
enter
inc
sbb
xchg
and
imulb
daa
pop
lea
xor
push
lcall
dec
jl
test
cmp
xor
in
and
lret
mov
mov
mov
inc
sub
popf
inc
or
sti
aaa
pop
hlt
mov
or
add
popa
mov
push
dec
add
sub
hlt
jnp
jg
andb
test
test
jg
ja
and
in
jne
inc
inc
mov
les
mov
jge
mov
dec
add
mov
fcomps
lock
inc
lea
cmp
xchg
push
fisttpl
sbb
call
cmp
je
mov
add
ret
jg
icebp
rcll
sbb
fildl
cmpb
into
jnp
popf
insl
ret
gs
adc
lea
gs
mov
sub
sbb
push
mov
add
mov
out
dec
loopne
inc
mov
clc
inc
loopne
inc
inc
stos
mov
mov
and
loop
insl
mov
sbb
push
add
inc
cmp
lds
push
add
daa
rorb
lea
push
inc
stos
inc
lret
out
xor
push
inc
mov
or
xor
fsub
mov
leave
aaa
mov
lods
cltd
clc
xorl
jle
mov
addr16
mov
mov
inc
inc
jg
insb
fwait
lret
or
incb
mov
pop
loopne
sbb
cltd
mov
inc
addb
stos
pop
ss
inc
scas
mov
je
jge
loopne
mov
mov
movd
dec
mov
cwtl
pop
jl
push
xor
lock
dec
adc
jecxz
nop
sarl
std
fwait
mov
les
pop
mov
or
adc
outsl
xchg
bnd
sbb
dec
push
pop
dec
popa
jno
je
inc
mov
mov
orb
sbb
loope
jmp
pop
or
mov
mov
and
mov
mov
out
test
lods
dec
mov
jnp
mov
sbb
sbb
test
jg
add
add
je
dec
jae
inc
lahf
dec
imul
ds
or
jno
push
or
sbb
pop
lret
jae
rcll
or
in
cwtl
jmp
dec
and
pop
xchg
hlt
lea
arpl
mov
mov
push
inc
add
je
push
mov
add
lahf
cmc
rolb
inc
push
mov
cmp
jg
andl
adc
stos
les
lock
or
xchg
adc
adc
push
iret
js
in
mov
and
fildl
aam
mov
or
push
adc
rclb
mov
xor
outsb
pop
mov
inc
push
jb
lods
and
hlt
dec
push
cmp
popf
rolb
cmp
lods
mov
mov
push
adc
mov
lea
in
fisttpll
outsb
sub
mov
jmp
popa
pop
mov
addr16
or
xor
movl
movzbl
adc
test
in
and
jge
push
cmc
mov
sbb
lret
sbb
inc
push
or
stc
in
fsubrl
xor
pop
mov
rolb
test
pop
sbb
mov
es
js
add
or
xchg
shll
push
or
or
pop
xchg
dec
adc
pop
xor
leave
add
xor
inc
mov
roll
outsb
push
fs
push
add
sub
mov
loope
lock
jmp
scas
xlat
sti
lds
inc
cmp
xor
repnz
mov
and
and
xor
and
sub
push
popa
or
loop
or
test
jl
mov
xlat
lcall
adc
pop
arpl
xor
out
xor
loop
decl
add
xor
call
push
mov
iret
imul
lock
mov
xor
push
add
mov
js
and
cmp
dec
addl
insl
or
jmp
add
xor
adc
stc
mov
xchg
mov
nop
adc
dec
xor
pop
out
cmpsb
adc
in
sbb
inc
and
lds
movb
mov
ret
inc
in
dec
cmp
mov
mov
xor
push
hlt
add
or
lret
xchg
movsb
sar
xorb
int3
push
ret
lahf
sub
add
xor
ss
cmp
jae
or
mov
gs
daa
sbbb
push
add
mov
add
fmuls
sbb
iret
jl
pop
iret
rcr
add
sub
add
inc
sbb
popa
add
adc
cmpsl
add
dec
mov
cmp
mov
xchg
push
insb
push
or
loope
icebp
imul
dec
add
addl
pop
jne
mov
jle
imul
mov
sbb
add
xchg
push
dec
and
fwait
in
fdivrl
mov
shr
pop
dec
insb
rolb
test
insl
and
sti
adc
or
mov
adc
imul
pop
in
jne
xchg
cmp
mov
loopne
add
or
sar
gs
call
jns
in
loope
clc
lea
mov
mov
in
popa
jae
lea
xor
bound
cli
add
mov
or
incl
pop
enter
mov
add
inc
or
sub
inc
loop
jmp
add
out
pop
xor
push
leave
out
les
cmp
daa
in
cli
andb
js
test
mov
adc
sbb
mov
les
jg
or
inc
mov
or
mov
mov
adc
cli
inc
ret
outsl
inc
aas
push
call
jp
shr
adc
iret
sbb
fsubl
fcompl
or
fucomi
pop
fsub
shrb
xor
xchg
sahf
call
adc
dec
ja
fwait
pop
jle
mov
lea
rcrl
mov
in
jmp
iret
adc
pop
lock
mov
push
add
leave
enter
orb
add
mov
adc
or
xor
push
sbb
imul
push
inc
aaa
faddl
pop
push
daa
adc
or
push
test
leave
rdpmc
push
mov
das
inc
xchg
addl
pop
add
ja
ja
pop
inc
or
or
add
xlat
xor
xchg
xchg
sbb
loopne
pushf
lret
cmp
out
ljmp
and
push
jo
scas
push
jnp
cmpl
add
or
cmp
js
aas
loopne
inc
sti
mov
jns
jbe
xchg
inc
jmp
inc
lahf
nop
aaa
lahf
enter
mov
or
cs
dec
scas
in
or
push
nop
add
adc
or
mov
xchg
cmp
push
int3
mov
xor
mov
les
cltd
sahf
push
push
xchg
adc
cmc
or
lahf
ss
mov
das
adc
mov
cwtl
mov
xor
ljmp
ret
cltd
cltd
push
push
cmp
repnz
dec
sub
aam
stos
arpl
rorb
xor
push
and
sbb
jg
inc
jge
xor
sar
xchg
sbb
push
loopne
cmp
cmp
movsb
stos
jo
lods
fbstp
jmp
or
mov
jns
mov
and
jb
inc
inc
push
jo
dec
xchg
push
mov
hlt
mov
xor
cwtl
cli
sub
dec
adc
pop
sarb
mov
mov
mov
inc
sbb
aaa
icebp
ja
push
dec
add
mov
insl
lock
inc
repnz
rcrb
aam
adc
add
sarl
subb
add
paddb
sub
orl
jo
dec
stos
mov
sbb
dec
mov
inc
inc
es
ror
pop
dec
inc
mov
xor
xor
loopne
fadds
stos
fs
cmpsl
mov
ret
scas
scas
dec
fisttpll
mov
call
int3
add
and
xchg
loop
push
pushf
cmp
sub
pop
popf
sbb
enter
add
sub
pop
orl
aam
sub
xor
aas
incb
clc
fidivrs
add
mov
ds
push
mov
adc
daa
add
les
enter
and
das
or
add
les
sbb
je
and
add
mov
and
or
jmp
sbbl
add
or
sub
je
movsl
sub
outsb
add
es
inc
mov
add
cld
jne
test
sbb
in
adcl
das
movl
sbb
les
sub
inc
ds
add
xor
mov
test
inc
or
and
enter
push
hlt
aas
enter
xor
jne
rorl
add
loop
popa
clc
movsl
mov
arpl
jo
jne
nop
mov
jmp
js
aaa
es
les
clc
cmp
jne
sub
orb
andps
sarl
mov
pop
imul
jl
inc
ret
push
call
or
dec
add
pusha
fidivrs
ret
inc
imul
orb
testb
fs
dec
mov
jge
dec
adc
dec
mov
sbb
lret
xchg
fstps
aam
mov
jge
inc
repnz
xor
fisubrs
inc
add
repnz
push
js
cmpl
sbb
fldenv
xor
xor
pop
mov
cltd
idiv
xor
shrl
cltd
ret
lcall
incl
xchg
adc
mov
orl
mov
xchg
outsb
les
or
cli
xchg
jns
mov
pop
psubsw
dec
dec
push
dec
inc
add
add
add
mov
shr
mov
orb
mov
and
test
or
shlb
cli
add
or
pushf
push
add
and
inc
pushf
sub
sub
push
rclb
aam
xlat
jb
fs
sub
mov
mov
or
cltd
mov
mov
jecxz
nop
ljmp
sbb
jmp
or
xchg
dec
js
inc
pop
inc
lods
popa
xchg
adcl
jl
lock
daa
mov
cmpsl
es
add
and
jge
out
push
pushf
mov
adc
stos
out
jae
dec
scas
push
pop
shrb
mov
outsb
cmpsl
mul
pop
jge
lock
sbb
flds
fadds
fistps
sub
add
add
div
mov
jl
je
cmp
inc
push
xchg
sub
dec
js
fwait
xor
adc
sbb
xchg
dec
inc
leave
test
je
push
insl
pavgw
push
pop
loopne
ds
push
addr16
setg
sub
xchg
sub
clc
or
xchg
sbb
mov
dec
loop
enter
push
mov
dec
adc
adc
jmp
ffree
insl
cmp
mov
mov
push
in
push
xchg
in
jnp
cmc
test
mul
push
sub
mov
arpl
push
mov
arpl
mov
divb
add
mov
inc
das
jl
xor
mov
inc
nop
in
adc
nop
cmpsl
add
repz
add
out
pop
cmp
fiaddl
lret
outsl
adc
mov
popa
mov
inc
jns
inc
adc
call
cmp
jl
jo
xlat
inc
je
pop
and
cmpsb
xchg
fnstenv
shl
add
nop
stc
loopne
jmp
inc
shrl
lret
lods
lock
mov
xor
push
add
mov
and
inc
jecxz
movq
lcall
or
xchg
or
adc
add
daa
nop
jle
or
sub
mov
ret
pusha
add
pop
pop
mov
loop
pop
aas
mov
cmp
das
mov
mov
dec
dec
imul
out
pop
mov
push
scas
mov
mov
js
xor
sarb
mov
cmp
sbb
mov
insb
inc
js
hlt
cli
mov
or
in
or
push
ja
adc
mov
push
or
shlb
add
ljmp
add
xor
push
push
cmp
mov
pop
add
jl
pusha
mov
das
icebp
and
lret
adc
add
push
jp
in
es
aaa
push
lds
aas
in
lods
dec
jae
add
outsl
push
sbb
test
es
in
dec
lock
call
add
or
cmp
mov
xor
adc
fimuls
mov
inc
cmp
adc
hlt
mov
ds
inc
pop
ja
lock
inc
or
dec
cmpsl
jb
inc
push
xor
jo
dec
jno
and
out
addl
call
sub
loopne
xchg
je
xor
jnp
inc
je
lea
pop
rolb
add
aam
inc
dec
rorb
jge
xor
push
add
sbb
pop
xbegin
jecxz
jecxz
push
xor
addr16
loopne
adc
pop
push
aas
fisttpll
gs
pop
mov
mov
loopne
ret
add
insb
xor
mov
add
in
mov
cwtl
jno
jns
push
push
xor
repz
xchg
sbb
and
add
xor
push
icebp
or
lock
xor
cmpsb
xor
ficoml
cmp
loope
push
adc
aad
sbbl
xor
loop
jns
ret
mov
in
cs
cmp
cmp
ja
inc
xchg
or
xor
cmpsb
jbe
lods
pop
fnstsw
mov
hlt
lea
and
xchg
mov
or
adc
pop
es
lret
lock
adc
mov
inc
ljmp
xchg
inc
jno
mov
in
shrb
fdivrl
cs
mov
and
dec
lods
cltd
ret
enter
sbb
xchg
in
mov
shlb
subl
cmp
mov
mov
jnp
pop
push
mov
fcompl
sbb
mov
adc
and
loopne
add
dec
lods
imul
shl
loop
add
add
and
inc
sbb
mov
sarb
jmp
dec
ss
and
xor
cmc
aam
leave
in
push
xor
sbb
mov
sub
les
sbb
bswap
insl
xlat
inc
pop
cwtl
dec
jno
ret
pavgb
jecxz
aad
and
adc
add
mov
sbb
xchg
dec
sub
add
or
mov
lock
pop
rcr
jne
subb
push
lret
xchg
hlt
ror
xchg
addl
jae
mov
fsubr
sbb
sbb
lfs
add
inc
lcall
mov
mov
pop
ja
push
add
pop
adc
aad
xor
pop
loope
jo
test
cmpsb
inc
gs
jnp
stos
mov
sbb
mov
jge
adc
inc
leave
pusha
out
xchg
dec
pop
or
je
dec
je
pop
or
daa
ret
lods
xchg
pop
in
and
pop
or
or
jmp
adc
dec
dec
mov
cmp
xor
insl
ss
scas
mov
dec
push
push
push
mov
in
inc
mov
mov
inc
jo
cmp
lds
add
rorl
out
jmp
xor
mov
ret
xlat
cs
jb
nop
addps
ds
xchg
lock
inc
sysenter
lods
add
sub
pop
aaa
fwait
xor
gs
cmpl
xchg
cmp
and
mov
mov
add
sti
xor
sbb
dec
push
lret
hlt
loope
data16
add
sub
out
jle
negb
add
sub
incb
add
adc
push
pop
add
imul
adc
incl
into
push
ret
mov
ficompl
jmp
test
xor
dec
xchg
jo
cmp
jge
test
jbe
inc
add
pop
jbe
jg
push
adc
dec
in
mov
mov
loop
mov
dec
cmp
jecxz
rdmsr
bound
mov
or
adc
fisubrl
rcrl
jno
or
pusha
mov
je
loopne
popa
outsl
fildl
fs
cmpb
pop
js
icebp
xchg
push
jg
js
imul
adcb
cvttps2pi
cmp
add
mov
enter
movsb
add
xchg
jge
inc
jl
roll
out
or
mov
dec
jne
cmp
sbb
nop
xor
enter
or
sub
sub
jbe
int
or
std
in
clc
stos
icebp
rorb
mov
int3
outsb
xor
mov
fimull
xor
and
or
sub
adcb
xor
fucomi
adc
jl
mov
dec
xor
or
aaa
enter
sarb
sahf
pop
fsubrs
gs
jns
dec
xchg
orl
or
pop
fldl
mov
fldl2e
lea
loope
add
orb
int3
icebp
jmp
inc
add
loope
insb
jo
cmp
xchg
mov
inc
cmp
sbb
and
xchg
cld
fcoms
sbb
xchg
fisttpll
fisttpll
push
and
mov
add
fadds
lahf
mov
cmpsl
dec
add
mov
inc
push
push
ret
mov
add
roll
add
cld
add
jge
sbb
pop
xchg
loop
inc
push
std
push
xor
xor
sub
xor
adc
imul
sub
adc
inc
addr16
add
mov
adc
or
mov
push
cmp
imul
pop
sub
mov
and
push
mov
mov
xor
xchg
xchg
mov
fiadds
or
push
mov
dec
or
adc
mov
or
dec
insl
or
xchg
inc
sub
mov
pop
filds
cli
dec
sub
mov
jnp
dec
pop
adc
inc
push
push
xor
stos
push
jns
test
add
out
mov
pop
je
dec
je
jmp
xchg
add
inc
scas
or
out
cmpsl
popf
mov
pop
fldcw
or
xchg
in
out
jmp
sub
adc
adcl
sarb
insb
xchg
adc
mov
inc
movsl
add
adcl
sub
jmp
sbb
and
and
push
sub
lds
or
jmp
adc
adc
fs
shlb
daa
and
or
adc
cmp
ds
push
mov
cli
jae
jl
data16
jl
inc
movl
subb
and
shl
mov
lods
sbbb
pop
xchg
mov
cmp
xlat
jecxz
and
test
add
js
adc
sar
test
add
xor
outsb
adc
popf
add
cmp
rclb
fisubrl
and
movsl
mov
dec
shrb
adc
aaa
mov
add
jl
lret
das
ds
loope
xor
call
push
cmp
pop
dec
pop
xchg
adc
mov
push
xor
int
ret
push
mov
mov
add
add
mov
jmp
scas
push
add
adc
sub
dec
adc
je
xor
sti
repz
push
arpl
pop
rcrl
mov
pop
clc
lock
in
fidivs
clc
in
loopne
or
in
inc
adc
sub
fmull
xchg
test
mov
fisubs
and
push
pop
mov
mov
dec
enter
shll
int3
mov
push
xchg
sbb
fadd
xor
cwtl
rcrb
xchg
lock
arpl
xchg
ret
sub
rclb
mov
out
jmp
xor
dec
inc
lock
sbb
jp
in
pop
or
mov
inc
clc
jge
clc
sub
imul
in
in
lock
jge
sbb
mov
ja
lret
jmp
adc
xor
inc
in
jle
clc
and
data16
loopne
jno
sbb
fcmovne
or
rcrb
lcall
inc
xchg
dec
in
fs
pop
insb
push
outsl
push
dec
pop
pop
add
dec
adc
dec
aam
iret
add
daa
sbbl
jno
sbb
rorl
idivb
lea
testl
pop
mov
xchg
les
adc
lods
adc
push
aas
and
xor
std
icebp
clc
decb
rcrb
xor
add
adc
inc
mov
jge
or
inc
push
enter
pop
ficoms
fldenv
and
mov
sbb
mull
xchg
sub
push
xchg
loop
sbb
sub
jne
mov
test
jo
pop
add
mov
movsb
pop
cmp
testl
pop
lahf
jno
inc
pop
add
mov
lods
out
adc
movsl
xlat
or
enter
add
mov
arpl
call
jb
xchg
jg
nop
test
inc
lret
ret
or
sbb
dec
idivb
lods
dec
cmp
jge
neg
loope
mov
imul
loopne
pop
add
mov
push
ds
into
cli
inc
loopne
jecxz
jge
inc
mov
or
rorb
mov
mov
sub
push
movsl
xchg
shrb
jge
or
adc
test
xorl
aam
fildll
dec
xchg
jge
add
clc
add
or
or
sub
out
out
shl
jns
push
and
in
jbe
xor
rcll
mov
ja
mov
push
xchg
cmpsb
jge
arpl
gs
test
mov
inc
fcmovbe
xlat
push
add
lcall
cmp
addr16
or
pop
adc
xor
and
out
inc
lret
jl
leave
push
push
test
mov
adc
or
pusha
push
enter
xchg
outsb
add
push
adc
je
in
add
sbb
sarb
sbb
adc
fstpl
loopne
aas
fisttps
add
les
xor
outsb
pop
icebp
mov
push
inc
repz
or
jmp
prefetcht1
sbb
lock
push
or
hlt
lahf
cmp
or
jecxz
loopne
xor
call
pop
movsb
nop
aam
mov
popa
clc
xchg
loope
cmp
xchg
xchg
lods
sub
repnz
repnz
cmp
les
push
sub
mov
lcall
xchg
or
cmp
enter
mov
mov
and
push
mov
test
ret
rorb
std
sub
or
add
and
in
shl
aas
and
and
nop
jmp
jbe
movsl
jae
sub
sub
or
or
jl
lret
icebp
ljmp
or
xchg
stc
xor
sbb
cli
std
mov
stc
movswl
repnz
push
add
fcmovb
or
incl
ret
imul
pop
adc
sti
stos
pop
add
cmp
sbb
mov
fdivrl
rcll
mov
imul
inc
adc
xor
push
jmp
ss
loopne
pop
and
pop
push
push
push
sarl
cmpsb
mov
les
xchg
push
mov
jne
sub
gs
clc
test
xor
mov
dec
imul
ret
mov
pushf
sub
mov
xchg
jge
frstor
rcrl
mov
xlat
mulps
ja
adc
dec
sub
in
mov
push
dec
test
push
push
mov
sbb
aaa
xchg
loope
movsb
cwtl
push
in
pop
aam
sarl
fcom
fdivs
loopne
punpckhdq
rcrb
push
and
sarb
sar
sarb
xor
mov
jae
fdiv
sub
cmp
or
mov
dec
mov
cmp
xchg
mov
lcall
ljmp
inc
sbb
std
jmp
rol
inc
mov
push
pop
cld
lcall
adc
cli
neg
mov
mov
std
pop
imul
wrmsr
jge
cmp
test
xlat
cmp
ss
jmp
and
out
loope
movsl
pusha
dec
jl
pop
jbe
sbb
lcall
pushf
mov
fsqrt
fcmovb
sbb
inc
pusha
fldl
jae
sahf
inc
push
pusha
test
pushl
push
push
pop
mov
movb
movl
ret
and
add
jno
mov
test
mov
or
sti
push
sarl
cmp
decl
cmpsb
movsl
lods
adc
iret
es
sub
subl
jne
cmp
xchg
clc
xchg
mov
pop
outsl
lock
mov
or
or
xor
add
aam
std
out
pop
push
pop
mov
fcompl
pusha
push
call
and
or
add
les
mov
sub
jnp
push
fiadds
mov
pop
ljmp
and
cs
inc
xor
aad
mull
pop
jnp
sub
jge
cmp
dec
inc
or
popl
pusha
cmp
imul
xchg
jle
adc
mov
push
xchg
ret
add
pop
pop
or
pusha
daa
adc
or
das
mov
pop
ljmp
sub
popf
loope
pop
push
jns
and
xchg
mov
mov
adc
mov
and
hlt
repnz
mov
mov
inc
dec
fnsave
jle
imull
mov
popa
jnp
dec
test
sahf
mov
ffree
sub
push
cmp
mov
xchg
or
rorl
aaa
add
dec
push
add
inc
sub
cmp
or
jl
decl
or
and
cwtl
cmpb
xchg
adcb
shlb
and
and
fsubl
rorb
aam
ja
jbe
push
cmp
jno
test
int3
ret
inc
cmp
inc
jno
inc
cmpl
je,pn
jl
bnd
jl
xor
into
pop
sbb
mov
out
shlb
mov
adc
or
sti
adc
lea
cli
cmp
jl
jnp
xlat
push
test
dec
adc
stc
add
sti
jle
inc
mov
cmp
out
xor
lret
sub
push
adc
dec
push
fucompp
insb
inc
ss
roll
std
push
jmp
ret
repnz
stc
mov
sbb
lods
pop
jmp
xor
js
and
and
pusha
aad
call
ret
call
js
fdivs
movsb
shl
pop
cmp
xor
cmp
mov
loopne
repz
sub
leave
ret
in
or
mov
dec
jo
fimull
adc
inc
in
inc
ret
pop
mov
cmpsl
idiv
or
enter
leave
lea
adc
xor
and
push
jg
cmpsl
outsl
ljmp
jo
or
orb
aaa
ret
div
add
add
int
neg
xchg
incl
ret
dec
ret
rorl
sbb
cmpsl
push
mov
ret
mov
push
dec
fwait
dec
cmpsb
js
neg
lea
sub
jo
or
adc
dec
mov
dec
add
ds
push
mov
sbb
sbb
push
cli
leave
lods
mov
scas
shrb
adc
and
outsl
dec
jecxz
das
xor
and
and
xchg
add
inc
xor
out
jg
or
fldl
sahf
out
inc
and
clc
add
mov
mov
mov
push
push
shll
adc
sbb
mov
mov
xor
or
xchg
inc
lods
adc
movsb
sbb
sbb
dec
xchg
cmpl
or
add
js
sbb
or
xchg
dec
je
dec
jne
add
subl
adcl
inc
bound
inc
fstl
adc
and
aam
loopne
mov
xor
xchg
lret
ss
cmpsb
mov
cld
es
push
fiadds
jb
cmpsl
dec
fidivrs
dec
add
lahf
lret
fldl
push
mov
dec
or
mov
jbe
das
popa
lret
cltd
jo
mov
or
fiaddl
or
inc
or
scas
mov
test
pop
sti
int3
mov
add
out
pop
cmpsl
jns
cmpl
jge
das
outsb
aaa
jne
xchg
xchg
xchg
cmp
dec
or
sahf
cli
xor
ljmp
jmp
mov
pop
xchg
inc
imul
cmp
add
sbb
gs
stc
pop
dec
and
dec
iret
xor
mov
cltd
sarb
cmp
jl
outsl
push
dec
mov
arpl
je
or
sub
or
lds
cs
cmp
test
mov
xchg
cmp
cmc
mov
inc
dec
clc
dec
insl
sbb
out
or
cmc
stos
roll
iret
mov
cs
fsubl
push
push
adc
ss
ds
pop
push
push
jmp
std
xchg
xlat
insb
cmpsb
adc
mov
cmp
xchg
pushf
outsl
in
mov
pop
nop
pusha
sub
pushf
dec
stos
and
pop
push
sub
clc
shlb
scas
or
add
mov
push
ja
sbb
sbb
pop
push
rol
in
inc
scas
xor
mov
add
faddl
fistpl
lods
ljmp
insb
push
add
enter
nop
dec
cmp
add
adc
out
or
xor
add
ret
cld
jno
adc
popf
rolb
add
push
adcl
add
pop
insb
outsb
sub
dec
lock
jp
cmc
mov
push
or
test
std
sub
addl
add
xchg
mov
xchg
adc
or
or
push
jge
jl
notb
sub
sub
aaa
dec
inc
sahf
in
push
or
sbb
jmp
cmp
jnp
inc
dec
jl
adc
les
in
add
or
mov
dec
cmp
and
nop
ds
mov
jg
movsb
repz
insb
adc
iret
pop
shll
cmp
adc
push
cmp
incl
xchg
sbb
jns
or
cmp
lret
lods
xchg
adc
lret
js
mov
dec
rorb
pop
and
and
xchg
dec
lea
mov
cwtl
mov
sub
jnp
jp
push
push
sbb
inc
rorl
iret
je
orb
pop
jecxz
scas
push
and
adc
mov
or
scas
push
sub
mov
add
push
jae
adc
push
adc
neg
dec
nop
mov
xorl
jmp
les
or
push
or
cs
xor
pushf
daa
pusha
xor
adc
fnstcw
mov
xchg
jl
or
mov
cmc
push
pop
das
mov
stos
sbb
xor
ret
or
inc
jl
inc
les
dec
xor
ljmp
jo
mov
in
leave
jge
mov
jae
xchg
fwait
adc
sub
sub
mov
push
sbb
xchg
cltd
or
pop
adc
mov
sti
lret
adc
adc
gs
jmp
and
cmp
push
dec
mov
pop
xlat
push
add
mov
push
jns
lock
push
inc
or
dec
divb
mov
cmp
mov
cwtl
jl
daa
jne
push
in
adc
push
jbe
das
or
inc
ficompl
push
dec
mov
adc
cltd
frstor
mov
sbb
fnstsw
inc
cmp
mov
sarb
je
dec
lock
and
inc
cmp
jae
data16
add
mov
adc
xchg
test
or
inc
scas
adcb
bound
cmpsb
add
add
push
lea
rcll
pop
icebp
xor
sbb
and
jb
add
or
or
das
xlat
movsl
or
push
or
add
jne
mov
sbb
adc
stos
push
and
mov
push
xchg
and
negl
mov
ljmp
into
push
pushf
nop
fstps
and
push
ljmp
mov
jo
sbb
or
sbb
or
jo
jae
add
push
or
and
cmpsb
lods
fs
sub
into
and
imul
fldt
adc
add
pop
add
mov
int3
push
pop
testb
ret
inc
mov
pop
add
cmp
ret
sub
push
loopne
test
add
jno
ret
inc
fmull
pop
and
imul
mov
int3
out
lods
mov
inc
and
mov
jne
lods
adc
xor
daa
fimull
inc
popa
mov
xchg
adc
shl
shll
imul
adc
adc
daa
insb
mov
push
call
popa
push
or
testl
stos
push
out
xlat
mov
sbb
adc
push
sbb
xchg
dec
jmp
lcall
or
and
es
mov
jb
sti
mov
pusha
shlb
fsubs
jbe
roll
mov
mov
or
add
outsb
cmc
push
dec
aas
mov
ljmp
jge
add
or
xchg
cmp
jmp
jbe
insb
dec
adcb
lcall
adc
dec
dec
mov
xor
in
sub
add
scas
lods
mov
push
inc
push
nop
lahf
sbbb
dec
add
pop
inc
push
ljmp
inc
mov
inc
adc
xor
ret
mov
out
dec
cmp
mov
or
push
scas
lret
mov
jb
and
sysexit
add
mov
sub
sub
dec
lock
fmuls
pop
or
or
fisttpl
jb
push
dec
dec
cld
roll
xor
sbb
mov
mov
push
push
lret
push
mov
inc
push
xor
movswl
push
je
test
mov
addb
repnz
mov
lods
leave
cmp
lock
xor
test
cmc
push
adc
out
test
inc
push
push
pop
cwtl
add
loop
adc
add
jp
pop
nop
popf
nop
sbb
andl
loopne
pop
lea
pop
adc
inc
sbb
into
sub
sub
or
rcr
xor
xor
fs
pop
push
roll
mov
xor
and
inc
es
jmp
sub
dec
or
inc
lcall
test
or
push
mov
insb
into
enter
rorb
arpl
test
add
mov
mov
jl
push
add
sub
pop
dec
rclb
int
insb
insb
dec
es
arpl
xchg
xchg
inc
sahf
adc
ret
jo
mov
nop
xchg
or
push
mov
stos
xchg
sbb
and
pushf
add
mov
cmp
enter
mulb
mov
mov
arpl
cmp
push
in
lea
mov
sbb
and
add
or
imul
mov
add
sub
je
wrmsr
xor
movb
add
cmp
outsl
mov
fistl
dec
sbb
jl
add
sbb
das
stc
subb
and
sbb
mov
add
jno
mov
je
int
xor
mov
test
rcrb
xchg
out
or
or
insl
jo
fcompl
out
lahf
xor
mov
or
mov
cmp
dec
xor
inc
sahf
mov
dec
pop
and
inc
mov
loop
cmp
insl
adc
add
pop
adc
ja
popf
adc
dec
lahf
mov
lea
rolb
icebp
repz
adc
shlb
arpl
inc
adc
push
or
mov
addr16
sbbl
ficoms
mov
mov
dec
je
add
iret
pop
inc
xchg
je
into
loopne
bound
xchg
mov
pop
pop
push
jo
call
inc
pop
or
xchg
mov
jmp
push
or
es
inc
cmp
loope
jmp
push
loop
jmp
adc
jmp
sbb
push
dec
insl
add
adc
test
pusha
dec
jmp
mov
dec
mov
outsb
sub
jnp
jp
push
mov
les
movsl
push
popl
ret
or
sbb
xor
mov
popa
nop
movsl
pop
mov
bnd
cltd
mov
imulb
int3
pop
sub
cmp
push
fcompl
jnp
or
xor
adc
mov
xchg
sub
add
pop
ret
cli
push
and
cs
int3
in
cmp
rcll
fidivrl
gs
add
or
sbb
sub
push
pop
dec
cmp
xchg
outsb
test
mov
jg
jg
repnz
jae
jbe
outsb
ret
rcrl
push
adc
or
es
es
dec
sub
add
add
rorl
popa
mov
shlb
adc
ret
ja
aad
into
push
in
pusha
push
and
xchg
lock
sbb
js
jnp
stos
xchg
xor
imull
je
hlt
sub
fcmovnb
sub
pop
stos
adc
sbb
lret
add
and
xchg
mov
or
mov
in
push
hlt
sbbb
test
call
js
xchg
push
dec
mov
arpl
imul
lock
add
xchg
and
hlt
mov
jmp
dec
sti
sub
imul
cs
arpl
je
cmc
mov
idiv
or
sub
dec
je
add
insl
inc
pop
div
push
push
inc
inc
and
mov
out
adc
xor
mov
jne
sbb
push
add
pop
xor
cs
push
sbb
addl
xor
add
mov
and
mov
push
or
add
or
sbb
jo
sub
pop
imul
add
orb
mov
xchg
jg
sbb
xchg
in
pop
outsb
out
dec
insl
xchg
push
movswl
lock
test
inc
fiadds
aas
frstor
sti
and
sar
inc
scas
not
jmp
addl
mov
sbb
lea
scas
lock
out
mull
shrl
std
inc
add
inc
fmull
fmull
cmp
or
sbb
jl
clc
cltd
icebp
xchg
sub
mov
mov
adc
nop
xchg
es
in
or
das
cli
mov
lret
mov
and
cmp
rcrl
lea
adc
jmp
sbb
jae
pop
sbb
pop
aaa
adc
add
stos
shrl
pop
and
push
and
rcll
mov
pop
add
or
cmpsb
pusha
in
outsl
jmp
mov
push
test
push
adc
loop
fs
je
pusha
fs
jl
push
sti
push
jmp
test
pop
mov
sub
inc
jecxz
je
mov
xor
add
sbb
sub
pop
mov
fidivl
rolb
xor
push
dec
inc
mov
stos
mov
stos
mov
imul
adc
pop
adc
push
or
jbe
enter
pop
push
in
adc
push
mov
fs
sub
mov
sub
aam
xor
cmpsl
or
insl
movsl
nop
push
pop
cmp
arpl
xchg
mov
or
sbb
out
sbb
jne
xchg
clc
sub
inc
shl
inc
ret
lea
pop
and
xor
nop
test
jo
clc
dec
adc
push
inc
lea
or
jg
ja
popa
push
jle
add
cltd
inc
jle
dec
push
jae
popf
mov
push
cmp
mov
loop
push
mov
pusha
mov
and
les
pop
adc
insl
popl
repz
push
andb
pop
cli
cmp
jbe
sub
or
sbb
add
pushf
mov
jg
ss
push
mov
add
or
add
push
xchg
insb
dec
mov
push
sbb
inc
jo
jb
or
fstpt
lock
inc
lea
or
dec
sbb
inc
jo
hlt
lock
push
aad
or
hlt
jg
addb
ja
or
mov
outsb
lock
and
cmc
daa
xor
pop
push
add
jg
outsl
inc
ljmp
out
add
mulb
test
jbe
dec
cmp
mov
push
add
inc
sub
neg
jecxz
sbb
gs
pop
test
pushl
mov
jnp
mov
popa
adc
push
sbb
push
inc
sarb
fadds
lods
fld1
mov
in
cmp
rorl
add
data16
mov
or
call
out
imul
cwtl
das
lea
adc
or
adc
in
dec
push
jge
inc
outsb
sub
pop
push
mov
or
sub
push
xchg
mov
in
jbe
movl
inc
sub
test
or
jbe
lea
mov
ja
pop
in
jp
cwtl
jns
jge
add
pop
fdivl
roll
ja
mov
sbb
jecxz
rclb
daa
or
or
aam
dec
xorl
lcall
gs
mov
add
pushf
add
add
out
or
push
mov
adc
mov
daa
pop
out
jnp
inc
sub
mov
sarb
and
add
add
mov
sahf
rcrb
mov
jno
out
mov
dec
and
jmp
lahf
mov
and
enter
adc
add
jmp
es
jp
mov
clc
rclb
dec
jb
test
movl
out
adc
test
cmp
sbb
pop
andb
pop
cmp
pop
popa
push
inc
sub
imul
or
lock
jbe
push
pop
add
lds
sarb
xor
in
jl
sub
adc
fwait
nop
inc
xchg
int3
and
pusha
jmp
mov
movsl
cmc
das
adc
stc
and
push
or
mov
cmp
fmull
or
daa
or
test
jo
or
xchg
lahf
xor
cli
push
xor
into
enter
icebp
sbb
mov
xchg
les
adc
mov
es
dec
sti
add
pushf
jne
or
jae
dec
mov
xor
push
mov
pusha
push
jo
or
dec
xchg
insb
fstps
in
sti
sbb
mov
or
or
fs
pusha
mov
adc
push
loopne
ret
add
cmp
jg
cld
filds
fmuls
adc
inc
fdivr
jmp
mov
pop
hlt
pusha
shl
scas
jns
jmp
fsubl
and
inc
out
lock
gs
pop
xchg
mov
icebp
inc
xor
cld
sti
insb
imul
adc
mov
adc
and
in
xor
call
push
mov
repz
in
adc
enter
adc
shlb
mov
and
mov
mov
enter
int3
flds
adc
and
xchg
sbb
enter
pusha
cmpsb
mov
aam
in
and
in
call
out
pop
cld
sbb
inc
fwait
inc
lea
pop
and
shl
fs
bound
adc
call
cmpl
push
pop
push
loop
jnp
xchg
jge
ret
sar
imul
inc
sbb
cltd
cmp
xor
jne
pop
sbb
mov
test
or
sbb
shlb
mov
jge
or
mov
arpl
and
adc
arpl
stos
xchg
xchg
or
popa
and
sub
and
inc
enter
mov
cmp
jns
fadds
and
cmp
add
mov
out
cmp
mov
test
and
inc
add
lock
cmp
ljmp
jg
inc
repz
aas
pop
sub
aam
mov
jne
daa
rolb
aad
push
sbb
test
xchg
push
add
repz
pop
arpl
mov
gs
pop
lcall
push
movsl
pop
lcall
popa
dec
popf
cmpb
xor
push
pop
jg
imul
stos
and
out
pusha
mov
loopne
mov
mov
jne
push
enter
dec
lock
stos
sbb
dec
orb
in
inc
pop
and
pusha
sarb
rcr
sbb
add
call
shl
mov
sbb
push
sbb
cs
or
sti
sbb
dec
pushl
mov
into
xor
adc
and
loopne
jns
int3
fwait
std
and
mov
and
in
sahf
cmc
lahf
js
fdivl
sub
mov
arpl
add
loopne
jge
repnz
lea
sub
mov
fmulp
sti
push
pop
pop
arpl
sti
shl
sub
or
xchg
ficomps
adc
inc
test
xchg
mov
lcall
fbstp
adc
and
mov
fmull
or
lea
fistpl
push
sub
and
cmp
out
shll
and
cwtl
mov
loopne
push
sub
jle
mov
jge
add
push
lds
std
push
les
dec
inc
xchg
add
adc
test
ds
scas
dec
add
inc
add
out
inc
or
sbb
sbb
pop
jo
jns
add
pop
xchg
notl
mov
add
cs
gs
cmc
scas
mov
fld1
ficoms
xchg
fs
incb
xchg
mov
sbb
pop
dec
xchg
fdivrs
xchg
push
lods
and
fldenv
adc
mov
dec
sbb
pop
or
add
pusha
push
and
dec
jmp
shl
sbb
and
pop
pop
in
fisubrs
add
enter
push
cmpsb
pop
push
outsb
sub
lds
popf
jns
or
add
xor
daa
lret
dec
das
or
pop
pop
cltd
and
xor
ret
ljmp
ja
ret
pop
enter
loopne
cmp
in
inc
inc
inc
in
fmull
fdivr
mov
xor
imul
and
xor
cs
dec
push
sub
dec
daa
cmp
cmp
insl
add
and
insb
cmp
negl
cmp
push
mov
inc
and
push
cld
pop
cmc
sub
loope
or
aad
int
loop
lea
add
neg
lea
rorl
mov
add
mov
inc
jmp
into
jecxz
shrl
xor
cmpsl
mov
add
test
hlt
push
mov
shlb
push
pusha
sbb
adc
cmpsl
add
out
hlt
xor
fidivl
ficomps
xor
popf
rolb
add
jns
int
rcrl
push
jo
daa
sub
es
neg
and
fstpl
imul
push
in
int
or
roll
add
testl
add
push
movsb
std
hlt
icebp
or
or
xor
sub
cltd
std
and
add
xchg
stos
pop
dec
sub
ret
add
in
sbb
xchg
ds
fsubrl
add
push
in
aas
cmp
xor
daa
mov
inc
in
sub
fistps
mov
mov
mov
add
sbb
out
or
rorl
sti
neg
sbb
lds
inc
add
loop
bound
mov
jmp
pop
or
push
xchg
gs
add
mov
add
out
pop
flds
lret
imul
jne
push
sti
ljmp
jmp
push
clc
adc
shrl
sbb
pop
mov
push
dec
loopne
push
outsb
icebp
jb
dec
add
cmp
lds
popa
adc
pop
loope
push
adc
xchg
push
inc
xchg
cwtl
test
push
add
stos
cmpsb
rolb
lods
popa
fidivrs
xor
lods
cmp
jp
push
cli
push
xor
aad
rclb
add
add
add
or
and
sbb
pop
push
sbb
jecxz
pop
icebp
rcrb
pushf
cli
sub
mov
sbb
scas
or
imul
push
and
mov
repz
sub
pop
and
inc
xlat
call
and
cwtl
jecxz
sub
add
or
mov
sarl
pushf
adc
or
mov
sub
sbb
clc
pop
cmpsl
adc
dec
jo
sub
clc
dec
shll
or
dec
xchg
jle
outsl
leave
dec
or
mov
addb
out
pop
loope
repz
add
subl
pop
sbb
imul
loopne
mov
or
pop
add
sbb
jnp
addl
adc
xchg
push
aaa
add
inc
movsb
push
push
sbb
dec
js
cmpsb
xor
push
mov
aam
ja
jne
nop
cmpl
pop
loope
clc
cmpsl
jae
mov
or
ficoms
push
rolb
mov
or
push
push
rclb
sbb
movb
and
cld
adc
dec
mov
inc
sub
sti
add
pop
in
hlt
or
sbb
push
fisubrl
sbb
cltd
sub
andl
sub
mov
or
dec
test
mov
and
inc
sbb
add
lods
mov
cld
and
call
add
ds
inc
loopne
call
loope
outsl
or
mov
shl
inc
test
add
jns
xor
mov
add
or
popa
push
cmp
in
rorb
nop
inc
and
ficompl
mov
sbb
mov
mov
in
and
cmp
sub
xchg
mov
add
or
cmp
add
add
les
xchg
cmp
xchg
add
xlat
and
inc
orb
cmp
je
pop
dec
cmpsb
sub
mov
mov
mov
jmp
add
add
call
add
mov
inc
xor
mov
push
ss
imul
add
int3
push
adc
jne
ja
jp
sbb
jno
adc
lahf
iret
dec
or
dec
adc
ljmp
jno
leave
cmc
pop
mov
ficoms
adcb
jg
stc
xor
ss
push
push
imul
enter
in
sbb
pop
add
inc
pop
jge
jbe
jle
dec
add
iret
pop
and
mov
pop
jl
sub
shrb
add
pop
xor
dec
inc
cmp
mov
push
pop
out
ds
mov
dec
ret
push
lods
nop
test
or
or
add
and
mov
jmp
mov
and
movb
push
je
inc
sbb
xor
adc
xchg
adc
add
push
in
divl
xchg
push
dec
inc
and
jno
loopne
xchg
push
nop
dec
adc
sbb
jecxz
int3
bound
xchg
cmpsl
jo
or
sbb
mov
test
xchg
jnp
pusha
cmp
fisubs
or
pusha
mov
ficompl
nop
mov
nop
push
or
pop
imul
ss
cmp
push
test
mov
inc
test
push
inc
cmp
in
add
faddp
call
movsl
ja
jp
stc
dec
daa
dec
pusha
mov
or
jl
clc
popa
cld
mov
push
inc
subl
mov
cmp
mov
fxch
xorb
pop
push
push
cmpsb
adc
xchg
mov
jnp
push
fimull
vcvtsd2si
pusha
xor
inc
mov
mov
add
add
or
push
pop
sarl
adc
cmp
and
lds
sbb
and
cmp
sbb
mov
sub
sbb
lret
enter
pop
leave
jae
rcrl
addb
sbb
enter
and
jb
and
and
push
mov
add
test
scas
int
mov
sbb
fs
pop
and
or
jno
jg
xor
mov
mov
inc
inc
pushl
cmp
sarl
sub
adc
subl
ss
xchg
add
add
push
pusha
push
mov
add
push
xor
jl
iret
push
mov
sbb
add
mov
push
lea
add
faddl
sbb
add
xor
ret
in
fcmovnbe
pusha
or
inc
fwait
add
bnd
sbb
push
dec
mov
add
call
inc
adc
xchg
mov
or
fbld
or
mov
mov
add
add
fistpl
inc
loop
add
enter
inc
test
jg
xor
add
outsb
imul
sti
jmp
dec
pop
cmpsb
mov
xchg
in
popf
and
loope
in
mov
test
cmp
and
popf
add
or
pop
jb
adc
dec
dec
and
or
push
cmp
push
pop
sar
add
inc
jmp
mov
and
adc
sbb
js
xor
les
xchg
sbb
pop
jbe
sub
icebp
dec
int
add
lods
mov
sub
imul
adc
push
imul
int
push
or
push
cli
mov
insl
ret
xor
vpmuludq
jbe
repz
test
push
add
xchg
mov
adc
cmp
nop
nop
js
add
pop
mov
adc
or
dec
rcrb
add
add
xchg
adc
daa
arpl
xchg
pop
inc
add
inc
mov
and
lds
pop
mov
mov
ja
test
lock
test
ja
cmp
pop
adc
inc
adc
dec
daa
dec
add
les
inc
adc
aaa
faddl
scas
std
mov
inc
cli
push
push
mov
dec
pop
mov
out
leave
inc
or
or
in
mov
jbe
xchg
push
std
das
or
loope
enter
mov
mov
xchg
mov
ja
xchg
out
movsl
add
sub
sbb
add
push
inc
jecxz
mov
testb
into
xor
inc
xchg
in
mov
enter
jno
push
fwait
je
std
sbbl
or
je
std
pop
in
and
dec
gs
and
ljmp
cmp
je
mov
pop
arpl
movsl
popa
dec
or
loop
mov
pop
into
push
cmp
pop
xchg
add
mov
add
xchg
xor
inc
and
arpl
mov
dec
out
aad
jb
xlat
dec
jmp
xor
adc
test
enter
push
pop
xlat
pop
xchg
fdivl
and
dec
and
lahf
jae
xchg
int
mov
jp
adc
sbb
mov
bound
adc
jg
test
inc
add
lret
push
fidivl
dec
ljmp
and
or
mov
or
or
mov
inc
rolb
dec
push
add
ljmp
rolb
data16
repz
mov
pop
xchg
lret
add
mov
push
cmp
or
faddl
mov
push
jl
mov
inc
push
dec
bound
push
lcall
shll
pop
jae
pop
adc
jns
jle
mov
lods
pop
or
jb
sub
bound
sub
pop
pop
sub
mov
loope
adc
inc
push
lea
aam
mov
or
adc
movsl
pop
shlb
scas
or
test
inc
add
cmpsb
fnstsw
cmp
rcrb
and
in
cmp
adc
imul
mov
adc
jo
pop
imul
add
cmpb
scas
xchg
sbb
adc
dec
pop
or
test
dec
fistl
test
jbe
adc
das
or
adc
cmc
xchg
and
sbb
push
scas
mov
mov
sbb
or
insb
cmp
fldl
mov
xchg
or
dec
add
aad
inc
aaa
test
and
test
pop
add
lock
pop
push
inc
or
imul
lock
nop
hlt
rclb
lea
lods
cmc
adc
lcall
sti
cli
xor
jmp
arpl
jl
decb
imul
pop
jne
pusha
cmp
push
inc
fists
mov
xchg
jae
or
and
clc
ds
fwait
addr16
adc
lcall
xor
psraw
lods
xchg
cmp
jo
adc
mov
clc
or
push
pop
or
mov
subl
dec
push
pop
xchg
mov
sub
inc
insl
and
aad
inc
mov
sub
xor
push
fiadds
inc
inc
loopne
add
movsb
sub
adc
dec
mov
adc
add
gs
imul
mov
sub
call
and
cs
adc
xor
or
in
xchg
dec
repnz
dec
pop
test
cmp
imul
xor
and
pop
xchg
aas
sbb
adc
movzbl
inc
dec
cmp
mov
incl
or
or
or
enter
mov
lds
or
enter
enter
inc
aaa
inc
je
xor
add
sub
popf
mov
mov
les
pop
dec
xor
push
lds
mov
push
lret
and
pop
and
xor
arpl
jo
or
imul
repz
sub
sub
mov
or
into
je
pushf
pop
adc
add
pusha
sub
jg
lds
pushf
ret
and
test
lds
add
push
sub
inc
inc
mov
xor
push
jno
ljmp
dec
dec
fsubrs
push
loopne
add
bnd
and
pop
adc
pop
adc
inc
es
inc
shr
xchg
xchg
ficoms
test
mov
inc
pop
in
imul
faddl
add
cmpsl
cmp
inc
das
cmp
cvtps2pd
jge
pop
sti
xor
aaa
or
in
push
add
cs
sbb
lds
and
imul
sbb
jno
sbb
stc
cmp
cmp
add
mov
insl
sub
lret
mov
xor
jo
andnps
mov
push
cmovo
mov
stc
es
test
xchg
out
or
clc
fwait
mov
mov
pop
rcl
popa
aas
daa
inc
scas
pusha
cmp
sub
adc
inc
jne
mov
xor
scas
pop
push
jne
nop
jg
pop
shll
adc
push
mov
cmp
cmp
sub
mov
cmpb
fmuls
sbb
adc
mov
adc
adcl
pop
pop
inc
and
roll
pop
ljmp
mov
xchg
jns
add
cmp
cmp
sbb
inc
jl
sub
adc
xorb
aas
popa
pusha
addb
xor
in
fcompl
fidivl
sub
decb
xor
popa
cmp
mov
or
lea
mov
pop
addb
or
addb
mov
adc
fs
cltd
mov
mov
push
nop
pop
movsb
jno
adc
popa
mov
andb
mov
enter
rclb
push
movsl
add
clc
movl
push
or
hlt
or
pop
xchg
mov
pusha
mov
ret
inc
je
in
ficoms
jl
aas
and
or
mov
lea
pop
dec
cwtl
mov
and
mov
cmp
adc
pop
xlat
into
inc
jns
xchg
sub
out
sbb
push
or
push
jae
mov
in
ds
and
pop
mov
inc
add
or
mov
jno
dec
jl
popf
sbb
sbb
out
adc
xchg
es
mov
subl
fimuls
jne
mov
jbe
or
xchg
icebp
jbe
call
loopne
stc
lock
add
or
cs
and
sub
lahf
add
inc
cld
mov
lea
aam
cmp
mov
jmp
jge
jle
inc
adc
pusha
fsubrl
or
jecxz
push
mov
add
push
inc
adc
dec
pop
pop
xor
insl
ljmp
jg
xchg
sbb
or
mov
mov
and
lret
ss
mov
mov
add
jg
mov
sub
mov
ljmp
imul
jle
jmp
bound
call
enter
sub
sbb
xlat
inc
or
dec
pop
and
mov
fwait
or
pop
pop
sbb
loopne
fidivs
test
mov
icebp
mov
cmp
pop
add
pop
lock
xor
xor
adc
jne
inc
popa
fisttpll
gs
in
ss
in
or
adc
pop
mov
adc
dec
xchg
mov
cmp
or
adc
nop
cmp
lea
dec
sub
js
ffree
sub
add
imul
imull
shlb
pushf
pop
inc
and
jbe
mov
adc
or
in
xchg
dec
or
add
push
ret
scas
mov
dec
mov
mov
ret
mov
add
btr
jo
mov
pop
cmc
mov
fisttpl
fidivs
cltd
lret
movsl
fs
or
mov
or
std
enter
leave
mov
das
sbb
ss
les
ret
fmul
popa
sub
adc
or
aaa
scas
not
mov
enter
push
sub
mov
inc
add
inc
stc
add
jno
repz
or
add
mov
push
jo
lahf
xor
xchg
test
dec
mov
fcomip
cmpl
daa
inc
sbb
fs
in
sahf
lea
outsb
add
negl
adc
js
mov
jno
mov
dec
add
out
or
data16
cmovnp
pop
js
mov
test
test
leave
mov
lods
cs
out
adc
repz
jnp
aas
push
add
ds
mov
xor
add
iret
addr16
icebp
xor
rcrl
add
sbb
mov
pop
pop
pop
or
negb
filds
push
lcall
dec
push
pop
mov
ret
mov
in
stos
adc
subl
inc
ret
fsubl
ja
jmp
jno
mov
or
mull
sbb
add
push
mov
mov
mov
movsb
and
inc
jae
imull
pop
pusha
xchg
jmp
push
mov
dec
or
scas
inc
dec
dec
out
adc
fsub
cltd
xor
xor
scas
dec
loopne
adc
mov
and
popf
pusha
nop
mov
inc
sbb
int3
popl
repnz
mov
add
repnz
or
jns
ret
popa
add
mov
loope
sub
inc
std
dec
xchg
dec
movsb
xchg
inc
scas
xchg
pop
cld
dec
push
adc
xor
lods
or
inc
fisubs
add
mov
inc
adc
sub
add
adc
pop
jae
sub
add
ja
cmpb
mov
inc
mov
negl
inc
cmp
fiadds
lret
add
and
fcompl
loope
sbb
and
xor
xor
cmp
and
pop
jns
rorb
or
insb
jge
js
push
filds
fnstsw
mov
lahf
les
jg
mov
add
or
or
adc
in
mull
jmp
pusha
arpl
test
xlat
sbbb
push
cmpl
add
roll
es
iret
incl
jne
inc
cmp
push
and
jmp
daa
add
pop
inc
std
pop
iret
add
or
and
pop
inc
outsb
push
loop
or
xchg
sbb
mov
bound
jge
sbb
or
add
sub
imull
out
adc
aas
mov
or
cmp
popa
arpl
enter
add
orb
sbb
or
and
addb
fisubrs
xor
add
xor
add
push
add
in
addb
add
test
push
add
mov
ja
sub
insl
add
dec
sbb
push
dec
ljmp
xchg
xor
sub
inc
sub
lock
loop
dec
fcoml
inc
push
mov
mov
int3
jae
jge
mov
ljmp
xchg
and
sbb
mov
and
jns
jbe
mov
data16
add
mov
cli
adc
lods
xlat
push
push
mov
or
dec
dec
cmp
fdivrl
and
leave
add
add
pop
les
insl
mov
mov
pop
shl
pop
push
addr16
out
add
add
xchg
xor
je
andb
xchg
xchg
inc
inc
jnp
sarb
xor
icebp
pop
bound
movsb
xchg
dec
and
lock
fst
xchg
mov
xor
push
mov
stc
mov
mov
mov
xlat
cmpsl
sub
xchg
adc
adc
dec
sub
mov
mov
and
data16
cmp
nop
dec
sbb
es
push
sub
addr16
js
lcall
cmp
adc
mov
jecxz
jno
inc
jmp
in
ret
sbb
mov
jb
cmc
mov
adc
mov
adc
push
jne
bound
adc
pop
or
sbb
jmp
adc
mov
or
adc
sub
or
lods
add
inc
or
in
pop
shll
and
pop
mov
fists
mov
adc
push
orb
in
push
xor
adc
push
add
daa
mov
jge
push
push
push
int3
or
xchg
inc
in
popa
fdivl
and
mov
fwait
adc
xor
inc
jg
lds
enter
dec
lods
loopne
int3
pop
xorl
aas
sbb
add
add
bound
out
imul
mov
dec
sub
push
icebp
or
sar
lea
and
pop
imul
hlt
lret
adc
imul
or
add
jbe
add
or
fcmovne
cmpl
test
inc
mov
sti
inc
sbb
adc
cmp
mov
inc
dec
addl
and
mov
add
mov
pop
fisttps
mov
ljmp
cmp
add
push
pop
ljmp
or
aaa
mov
cwtl
or
rcll
cmp
orl
xchg
sbb
xor
push
xchg
incl
das
xor
mov
adc
ljmp
lea
ficoms
pushf
andb
push
call
adc
xor
add
divl
jo
mov
adc
mov
pop
dec
or
or
jmp
mov
mov
push
fmull
push
push
xchg
les
test
fistps
jg
jnp
jno
xor
aas
xchg
or
or
jnp
outsl
enter
out
push
and
adc
cmp
jae
fwait
push
ss
xchg
pop
push
or
mov
adc
or
mov
aam
movsb
fiaddl
int3
lock
sub
lret
and
in
lea
inc
dec
mov
inc
push
mov
xor
jne
adc
sub
jmp
add
es
xor
repnz
out
and
inc
jne
stos
jl
lea
sbb
jno
or
dec
inc
cmp
sub
loopne,pn
xchg
cmpsl
or
dec
pushf
mov
add
mov
pusha
inc
inc
cwtl
mov
inc
cs
mov
aam
sbb
mov
pop
addr16
push
add
nop
add
pop
outsl
pusha
add
and
pop
nop
jp
xchg
repnz
or
out
or
es
push
sub
imul
scas
or
cmp
loopne
or
mov
mov
jg
dec
xchg
mov
iret
pop
pop
and
sub
xchg
sbb
xor
mov
xor
sbb
fdivs
sub
test
xor
js
movsl
sub
stos
xchg
mov
ljmp
pop
in
in
jmp
mov
jnp
jle
aaa
jle
add
adc
sbb
xor
int
or
lds
ret
mov
loope
mov
jmp
aad
ret
mov
push
mov
rorb
adc
or
inc
cmp
popa
sbb
xor
inc
std
sub
pop
int
hlt
sub
je
ret
pop
mov
adc
xchg
pop
adc
aaa
rcrb
cwtl
inc
sbb
sbb
ficompl
popf
xchg
xchg
pop
push
pushf
sbb
adc
mov
adc
lods
pop
push
ja
loop
fsts
add
ja
cmpl
or
push
jns
xor
das
add
mov
inc
pusha
cwtl
loopne
inc
dec
cld
test
fcomp
orb
daa
jne
out
adc
and
int3
and
pop
pop
xor
or
lret
or
xor
adc
mov
mov
les
fcomps
push
std
daa
cld
pop
inc
or
sbb
add
dec
mov
or
std
xor
ss
imul
out
pusha
inc
dec
sysenter
leave
dec
push
ljmp
daa
in
mov
pop
and
insb
push
repnz
add
add
add
add
fstl
insl
mov
sbb
adc
jecxz
or
and
add
arpl
test
or
cmp
les
pop
cmc
xor
ret
cmpsl
jg
jo
push
xor
inc
sub
sbb
mov
test
pusha
xor
jg
icebp
or
or
sbb
je
imul
ljmp
push
fdivl
adc
ret
lret
mov
repnz
cmp
inc
inc
aam
mov
mov
lds
adc
pop
xor
dec
mov
push
or
out
jmp
in
cmp
out
cwtl
lds
inc
gs
or
adc
divl
add
andl
fildll
inc
adc
pop
cmp
sbb
cmp
loopne
adc
dec
lret
xchg
insl
ret
cmp
jg
test
add
push
pop
xor
test
aaa
adc
lds
adc
push
out
and
sbb
adc
ret
and
not
jl
or
jge
pop
jl
cmpsb
mov
push
and
mov
hlt
cmp
jg
sbb
sbb
popa
pop
leave
add
pop
testb
jmp
test
and
or
je
inc
lock
sbb
jge
int3
sbb
pop
ror
scas
cli
dec
add
cmp
jge
and
bound
mov
push
jg
push
sbb
cmp
fdiv
movl
dec
jmp
sbb
mov
sub
mov
cs
adc
js
mov
jge
adc
ret
sbb
aas
jne
mov
xchg
andl
or
pushl
pushf
arpl
pushf
and
enter
lcall
test
add
negl
xchg
cmp
push
pop
push
and
cmp
mov
int
inc
loopne
jmp
push
cwtl
popa
xorb
loop
iret
or
mov
ja
xchg
test
insl
add
mov
js
and
xchg
adc
ret
jecxz
aam
aas
dec
sbb
out
jnp
jl
push
cld
fistpll
add
jnp
mov
enter
or
jl
and
and
gs
shl
outsl
inc
or
jmp
xchg
adc
cmp
stos
outsl
dec
and
xchg
scas
mov
jns
loope
stos
mov
dec
xchg
cmp
mov
in
orl
lock
fists
cmp
out
add
mov
add
xor
xchg
inc
or
pop
add
jecxz
les
in
outsb
jb
jns
pop
lock
add
inc
ds
add
add
test
or
add
cmp
repnz
and
inc
and
mov
xchg
out
or
lock
enter
mov
add
cmp
and
mov
cmp
sbb
cmp
aad
pushf
adc
dec
or
arpl
jo
cmp
lret
sbb
add
in
pop
ret
push
adc
movsb
or
adc
or
sbb
jle
dec
dec
roll
test
je
adc
orl
sub
lahf
or
fisubrl
sbb
mov
push
mov
inc
sbb
push
rorl
add
xlat
mov
add
or
mov
sbb
pop
mov
inc
jae
and
cmpb
cmp
xchg
xor
sahf
sahf
ret
xchg
xor
pop
cli
les
sbb
and
subb
roll
popa
jnp
jns
sbb
sub
aam
cmp
add
mov
lea
and
pop
cmp
lcall
lods
or
pop
mov
and
les
aaa
pop
push
xor
jo
int3
out
xor
xor
and
and
and
sub
jmp
rcrl
sbb
out
arpl
sbb
mov
es
movsb
add
popf
out
and
mov
or
or
fimuls
stos
adc
ljmp
cmp
dec
shlb
push
add
jae
lea
xchg
fiadds
addr16
or
pushf
push
rclb
push
out
add
dec
jne
sub
call
sub
xchg
xchg
xor
or
add
es
sbb
mov
or
ljmp
add
push
ret
loopne
xchg
idivb
dec
inc
ja
push
fcmove
dec
sarl
pop
cmp
mov
and
sbb
xor
fnstenv
inc
and
and
jbe
inc
sbb
pushf
adc
mov
mov
lock
and
push
int3
push
cmpsl
dec
and
test
cwtl
xor
cmp
pop
sbb
inc
call
push
add
in
xor
push
into
lea
push
xchg
fadds
jl
mov
cwtl
and
and
mov
xor
add
nop
sbb
push
xchg
xchg
mov
daa
js
dec
add
jmp
nop
adc
mov
dec
and
push
lea
dec
add
adcb
mov
pusha
cmc
add
push
outsb
or
int3
test
test
addr16
outsb
cmp
add
xor
lods
sbb
push
insl
pop
add
inc
mov
mov
push
rolb
fisttps
inc
adc
jne
jns
adc
out
stc
or
lds
es
push
or
pusha
fdivl
or
scas
or
push
pop
ret
adc
sahf
shl
in
jmp
push
or
mov
sub
add
nop
mov
add
add
shll
ret
xchg
adc
push
or
inc
or
outsb
or
mov
in
cwtl
not
pusha
push
xchg
pop
jg
or
adc
subl
mov
dec
lock
js
jns
lock
pop
bound
lcall
mov
shlb
mov
push
pop
insb
jecxz
mov
aam
jmp
adc
push
cmp
pop
pusha
neg
push
xor
push
sbb
inc
enter
sbb
inc
and
sub
fistl
lahf
cmp
shl
jno
mov
fidivrs
outsl
push
or
inc
xor
inc
push
addb
popa
in
adc
ja
xor
lret
xchg
mov
mov
test
cmpsl
mov
rcr
mov
mov
mov
push
in
rorb
dec
cmp
ficomps
mov
jno
cmp
xor
ss
dec
sbb
je
stos
in
dec
add
pop
push
adc
nop
leave
inc
sub
sbb
dec
mov
and
inc
imul
mov
add
mov
cwtl
lea
lret
mov
mov
inc
cmp
cwtl
adcb
inc
fsubl
imull
ljmp
or
fstps
ret
rcll
lcall
sarb
mov
and
cmp
mov
sets
sahf
clc
and
or
mov
clc
mov
js
pop
mov
scas
jno
sbb
mov
push
push
or
jns
add
or
movsl
or
xchg
adc
pop
lods
enter
mov
fildll
dec
sbb
push
jo
clc
dec
inc
lahf
xchg
pusha
stos
lahf
enter
sub
inc
int3
jmp
ljmp
pop
or
push
fdivl
stos
inc
add
adc
jae
add
xchg
leave
add
loope
mov
cmp
jb
cmp
hlt
add
add
adc
sub
movsl
mov
inc
push
xchg
scas
push
inc
out
add
dec
je
dec
adc
lods
push
loopne
add
push
rolb
inc
cmp
jmp
adc
jmp
rolb
leave
and
lret
push
add
repnz
or
in
add
dec
mov
pop
nop
shlb
inc
xor
mov
lods
cmp
push
push
stos
hlt
xor
inc
cmp
mov
arpl
or
push
push
inc
inc
lods
xor
inc
imull
adc
mov
icebp
add
inc
out
or
jbe
imull
jb
cmp
daa
test
dec
dec
jge
arpl
iret
add
push
sbb
rcll
push
or
cmp
push
or
mov
or
mov
lock
inc
adc
stos
sub
shll
xchg
insl
inc
jmp
rolb
les
mov
mov
cmp
out
aaa
out
inc
test
xlat
adc
imul
addr16
cmp
enter
pop
mov
jno
call
cli
add
push
das
rol
mov
daa
mov
sbb
sbb
and
adc
sahf
lret
ret
bound
inc
adc
jo
cmp
xorl
enter
xchg
cmpsb
add
sbb
sub
cwtl
lret
xchg
and
inc
or
mov
mov
in
or
sub
fdivs
adc
test
add
mov
cmp
dec
and
test
ss
lret
popa
mov
cmp
add
sub
cmp
imul
jmp
sub
sbb
and
loope
mov
jae
test
sti
popa
mov
sbb
repz
or
sub
mov
inc
cmp
and
and
shrb
mov
dec
leave
pop
imul
cmp
or
sbb
imul
xchg
sbb
push
lock
push
jle
mov
jl
add
sub
adc
jo
jmp
add
push
adc
test
enter
xchg
jp
dec
xchg
push
push
dec
and
inc
pusha
cmc
mov
inc
jmp
xor
cmp
adc
out
sbb
adc
popa
pop
adc
adcl
lock
inc
cmp
popaw
push
inc
fcom
call
add
inc
and
loopne
and
jns
xor
inc
add
sub
jp
inc
pusha
imul
sub
sbb
inc
repnz
jecxz
insb
or
daa
and
xchg
inc
jb
iret
push
hlt
add
pop
cmpsl
loope
add
or
jo
xor
leave
inc
fs
adc
inc
push
sbb
dec
lcall
cmpl
nop
pop
lock
mov
add
or
leave
and
enter
jo
scas
insl
incl
cmp
mov
push
ds
xchg
fists
push
xor
pop
inc
pusha
loopne
outsl
faddl
pusha
loopne
shll
fcmovne
mov
lock
inc
int3
add
add
add
ss
cltd
shll
pusha
out
lahf
push
je
andb
lahf
aas
push
mov
push
add
push
inc
push
test
mov
push
lret
or
inc
xchg
mov
mov
sbb
cmp
and
int
jo
into
cmpsl
push
or
stos
adc
repz
int
push
jg
adc
rcll
jmp
sbb
inc
adc
rcr
cmp
sub
imul
sub
xor
jb
jge
add
sub
pop
jo
adc
nop
inc
sub
negl
mov
or
mulb
pop
adc
jecxz
mov
js
mov
loopne
push
lock
loop
inc
inc
daa
test
fstpt
sbb
mov
xchg
lock
pop
pop
leave
add
daa
adc
and
mov
ss
dec
pop
pushf
xchg
into
aas
adc
mul
cmp
xchg
xchg
sbb
xchg
mov
adc
sar
adc
loopne
in
imul
test
outsb
pop
psubsb
js
cmp
jmp
or
fcom
fs
movsl
inc
xchg
ja
xorl
lmsw
xor
and
mov
and
js
in
and
pop
and
xchg
inc
jle
rcrb
sbb
fadds
and
call
add
and
sbb
or
loope
or
or
xlat
rcrl
insb
adc
inc
push
scas
jle
sbb
mov
pop
sub
sti
loopne
sbb
lret
into
add
sti
xor
push
sti
sbb
and
xor
fsubr
xor
fsubl
mov
xor
clc
cmpsb
sbb
loope
in
add
xor
mov
jno
dec
loop
xchg
xchg
push
mov
inc
mov
stos
sub
icebp
test
mov
mov
rorb
lods
xchg
lock
dec
mov
or
mov
mov
cld
cmp
jge
lods
rol
sbb
xor
jae
and
inc
sarb
or
mov
cld
sahf
inc
lock
imul
and
mov
testl
pop
push
int3
or
or
sub
out
push
jl
pop
test
call
dec
imul
push
lock
mov
call
in
sbb
or
or
or
in
rcll
dec
xchg
sub
add
mov
sbb
sbb
mov
pop
mov
mov
cwtl
insl
pop
stos
add
xor
inc
mov
fs
insl
xchg
pushf
cmp
pop
dec
enter
test
sbb
test
ja
inc
and
cmovp
sub
inc
jmp
sub
xchg
popa
adc
cmpsl
add
dec
std
cld
mov
pop
mov
test
mov
and
inc
adc
fmuls
mov
jl
jb
xorl
inc
add
mov
les
in
xor
mov
insb
pop
pop
or
in
xlat
mov
mov
mov
test
ret
idivb
xchg
mov
or
mov
push
int3
rcrl
imul
or
push
sub
or
sub
call
mov
jb
incb
adc
or
in
mov
and
aam
push
adc
dec
pusha
pusha
dec
sbb
push
sbb
fwait
daa
add
jmp
test
add
and
aaa
fmuls
mov
jge
aam
push
loop
and
out
jge
data16
lock
insb
jmp
fmuls
jge
fnstsw
orl
push
jl
inc
js
adc
dec
jl
cmp
popf
rolb
jge
mov
aad
ss
mov
aam
scas
cmp
add
pusha
pop
mov
lcall
xor
fst
xlat
outsl
adc
xchg
xchg
pop
mov
inc
xor
xchg
jno
and
or
mov
addb
xor
leave
and
nop
out
or
mov
dec
lds
xchg
fcoms
fsts
mov
push
jmp
add
fnstcw
and
cmp
icebp
jo
adc
mov
sbb
mov
inc
mov
inc
cld
fwait
icebp
add
sti
pop
cmp
push
jo
xor
loop
ret
clc
orb
call
add
lock
in
xchg
inc
divb
pop
adc
sub
sbb
inc
pop
rclb
mov
and
jg
testl
add
add
fiadds
or
out
popa
jb
adc
jne
xchg
popf
sub
cmpsl
aam
inc
lahf
sbb
icebp
lea
push
lock
mov
add
push
adc
into
add
or
inc
stc
and
add
shl
dec
rolb
cltd
sub
dec
jb
inc
adc
aam
adc
mull
aas
mov
fmuls
add
adc
add
sbb
mov
mov
pop
fimuls
inc
pop
xor
sbb
ret
jnp
or
or
or
push
cmp
add
add
popa
in
add
sbb
cld
push
mov
movb
call
idivb
pop
loopne
and
add
pop
mov
lods
jmp
xor
test
inc
jo
inc
push
or
loopne
call
lcall
mov
decl
xchg
dec
rorb
out
inc
add
pushf
sbb
loopne
fsubs
dec
inc
inc
xchg
divb
cs
decl
int
lock
add
push
inc
inc
cmp
push
xor
ret
cmp
dec
ret
mov
xlat
leave
aam
dec
clc
out
inc
loop
jns
sub
sbb
sbb
add
or
in
and
mov
fs
rcrb
shrb
das
xor
cld
cmp
push
andb
into
outsb
pop
mov
add
sub
add
push
fwait
mov
xor
xor
repz
or
mov
adc
or
and
mov
stc
scas
rcll
lret
clc
add
push
ljmp
dec
jbe
int3
in
insb
insl
enter
mov
sbbb
stos
ja
cmpsl
sub
pop
fiadds
imull
mov
inc
loopne
int3
push
jns
jae
dec
and
add
stos
and
fldl
mov
add
out
cs
add
in
push
sbb
push
jo
add
jmp
das
repz
insb
adc
pop
or
cmp
mov
jnp
clc
cmp
adc
mov
add
push
add
jmp
add
sbbl
pop
add
push
jmp
dec
xor
ror
out
popa
shll
adc
testl
out
fwait
cmp
in
sbb
call
or
push
hlt
int
push
xchg
xchg
movl
xlat
sbb
adc
movsl
adc
inc
adc
lods
ret
push
pop
out
inc
cmpsb
rcrl
pop
cmp
flds
sbb
sti
adc
addr16
cwtl
inc
push
lret
cmpb
xchg
std
pop
sbb
mov
cltd
inc
push
mov
repnz
or
stos
and
sarb
sbb
inc
jge
ljmp
icebp
adc
idivb
adc
push
fistps
or
aad
inc
add
rolb
mov
ret
and
inc
jl
ret
xor
shlb
and
mov
sbb
sbb
in
insb
mov
xchg
lea
mov
sbb
stc
inc
sub
add
add
cmp
and
pop
nop
sbb
js
fmull
inc
in
hlt
fdivrs
lock
fstps
inc
sbb
inc
or
inc
iret
lds
aaa
lret
sbb
sbb
jl
mov
sti
adc
cmpsl
or
jmp
mov
aas
jp
in
xchg
out
cs
andb
mov
sbb
adc
push
nop
push
and
pop
jne
call
sub
test
push
jo
and
xchg
inc
or
dec
xor
orb
cmpsl
inc
adc
test
ficomps
shlb
cwtl
fwait
orb
outsl
cwtl
xchg
xchg
aaa
jbe
aaa
inc
scas
xchg
inc
call
inc
movl
pop
adc
cmpsl
sub
push
sub
jmp
xor
popa
push
loope
and
add
or
jge
xor
push
adc
hlt
push
lcall
cltd
fs
inc
daa
inc
add
call
addb
sbb
and
xchg
xlat
cmp
loopne
das
loopne
xchg
xchg
and
fcoms
aam
add
cmp
cltd
loopne
dec
cs
dec
enter
pop
addr16
je
cwtl
outsb
outsl
lea
adc
or
push
add
call
add
mov
rcrb
test
or
inc
ret
adc
sbb
nop
sub
mov
jmp
push
or
leave
pop
mov
aad
sbb
stos
push
lahf
xlat
ret
jo
cld
insl
xor
pop
pusha
push
or
shl
cwtl
fnstenv
mov
sbb
jb
or
fwait
out
sub
adc
pop
mov
icebp
inc
arpl
sarb
in
xchg
fs
mov
sbb
sbb
jb
arpl
das
ficomps
in
data16
cmp
and
fadds
xor
jmp
imul
add
jg
add
xchg
mov
repnz
aam
or
pop
adc
mov
push
and
lea
lcall
push
fwait
adc
sub
loope
inc
pop
ja
xor
xor
jle
xor
dec
lcall
jae
push
std
mov
sub
popa
add
and
xchg
ret
mov
xor
push
mov
or
dec
inc
rclb
pusha
je
adc
mov
mov
push
xchg
cli
add
fnstsw
mov
dec
cli
bound
xchg
les
and
cs
jo
xchg
je
loop
inc
outsl
adc
adc
push
and
aad
push
inc
shl
pop
adc
movsl
add
shlb
add
add
mov
pop
xchg
sub
shl
or
adc
mov
push
leave
lcall
adc
push
sbb
mov
xchg
mov
fimull
mov
shl
xchg
or
add
mov
or
shll
fbstp
jl
call
push
adc
inc
test
outsb
or
sarl
incl
or
cmp
ljmp
xchg
or
arpl
cwtl
rolb
add
repnz
adc
cmpsb
xor
dec
inc
ja
lock
rcrb
xchg
xchg
sti
testl
aam
test
or
pop
ror
mov
test
or
inc
sub
aaa
loope
ret
pop
sub
and
xor
inc
mov
mov
sub
test
daa
test
mov
xor
cmpl
sbb
mov
inc
out
xchg
je
in
adc
mov
mov
int3
and
xchg
inc
push
and
sub
mov
rolb
movsl
dec
mov
adc
mov
cmpsb
rcl
testb
into
mov
repz
adc
mov
scas
mov
rol
sub
pushf
mov
sbb
outsb
adc
neg
jmp
xor
test
jmp
jle
cmp
jle
les
push
adc
mov
fcmovne
xchg
add
inc
iret
lock
jo
mov
and
jmp
adc
movsb
add
mov
aas
incl
dec
pop
decl
and
and
out
sub
push
mov
xchg
or
mov
add
stos
inc
adc
jo
mov
sbb
test
cmp
adc
or
add
or
cmp
mov
inc
jnp
inc
pop
pop
cld
lods
add
adc
neg
add
loope
not
aam
push
fstpt
lret
enter
jmp
call
jbe
or
mov
lods
cmpsl
subl
outsb
jle
cmpsb
imul
std
or
lahf
mov
and
add
jns
int
sbb
mov
sbb
js
daa
lds
mov
add
mov
sbb
sbb
dec
lret
lcall
arpl
mov
mov
jmp
cli
lahf
inc
push
sbb
add
cmp
fdivr
fldl
pop
test
push
stos
mov
dec
nop
imul
addr16
mov
cmp
ficompl
inc
mov
cmp
aad
loopnew
das
faddl
mov
out
or
nop
orb
dec
movsl
dec
ret
sub
mov
int3
arpl
sahf
push
mov
push
dec
fmuls
jns
jl
or
outsb
in
repnz
negl
sbb
inc
add
or
dec
jno
xchg
mov
cmp
jle
loop
inc
add
xor
repz
mov
sbb
dec
xchg
and
and
or
aam
lods
int3
sub
fcoml
push
std
repz
inc
or
addr16
push
fildl
aad
call
roll
jle
incl
inc
dec
pop
jle
and
mov
inc
je
dec
add
iret
jne
add
and
fstpl
and
in
bound
add
mov
fsts
jb
popf
test
adc
gs
into
sub
inc
pop
mov
add
in
incl
mov
jbe
inc
nop
or
and
cmp
mov
push
fisttpll
insb
and
in
out
add
loop
inc
xor
cltd
fs
les
jno
adc
in
scas
mov
mov
mov
adc
das
pop
sbb
loop
imul
aaa
stc
push
stos
or
push
jmp
or
enter
bound
fildl
outsb
lcall
and
or
mov
loope
mov
xchg
sti
aaa
mov
enter
fbld
bound
dec
xor
outsb
jmp
sbb
adc
cmpsb
inc
cmpsl
push
add
inc
outsl
adc
outsl
pusha
test
out
arpl
cmpsb
repz
push
pop
jge
dec
cmp
dec
add
adc
in
pop
adc
ljmp
add
sub
add
sub
shl
insl
push
sub
ss
sub
or
pop
mov
xchg
out
or
insl
lea
sub
xchg
pop
xor
jo
int3
hlt
xchg
xorb
add
pop
sub
add
push
jge
stos
das
xchg
out
mov
add
sar
fisttps
or
xchg
add
aad
nop
add
lea
aaa
sbb
add
sar
sti
mov
lds
sbbb
and
sar
or
testl
cmp
idivb
ret
push
push
sahf
add
xchg
or
mov
xor
into
jo
xor
ret
inc
bound
nop
or
fcoml
enter
sbb
repnz
enter
add
or
push
ret
cmp
mov
sbb
movsb
jae
and
loopne
add
rorb
push
dec
sbb
sti
pop
mov
flds
fadds
fstps
push
mov
or
inc
add
sbb
add
pop
fdivp
bound
daa
or
or
mov
cmp
adc
roll
mov
adc
pop
jnp
enter
sbb
push
and
roll
sub
and
sbb
fs
adc
sub
data16
imul
sub
pop
or
jns
adc
adc
rcrb
rcr
and
push
sbb
fs
xchg
shlb
fwait
mov
rcr
icebp
inc
and
ss
xor
sub
and
movsb
xor
push
inc
fs
in
xor
cs
jg
adc
fs
and
adc
jecxz
and
xor
orb
xchg
and
rcrb
mov
xor
add
xor
cwtl
cmp
adc
sbbb
inc
jno
or
sbb
jno
and
popa
or
and
pop
lds
das
pusha
and
call
aas
dec
sbb
out
aas
adc
out
ret
ds
or
adc
cmp
je
fstps
jle
jmp
pop
jns
das
jns
cld
sbb
add
push
adc
je
outsl
sbb
cmp
je
movsl
adc
mov
pushl
xor
jae
incl
js
in
pop
imul
insb
adcl
and
dec
mov
and
xchg
pop
sbb
push
push
cltd
js
outsl
xchg
pop
dec
fadds
sbbl
clc
jge
sub
iret
jge
rolb
mov
movb
inc
sub
sbb
pop
shlb
sbb
and
mov
xchg
loope
and
mov
adcl
sar
inc
sub
int
or
inc
push
or
mov
xor
add
or
xchg
mov
sti
sub
or
pmaddubsw
lea
or
xlat
inc
popf
push
push
pop
andb
sbb
movb
mov
pop
push
movsbl
fucomp
jmp
lea
arpl
add
dec
call
ret
loope
ja
in
mov
movl
test
lods
and
dec
sub
dec
ud0
subl
dec
adc
popa
mov
js
daa
xorb
jg
sub
jge
stc
aaa
adc
jne
jnp
loopne
jg
or
xchg
add
je
out
xchg
jp
inc
inc
pop
add
sbb
mov
mov
pusha
faddl
lods
call
xlat
adc
inc
adc
call
dec
aaa
and
cmpsl
pushf
lcall
mov
cmp
add
fwait
lods
iret
jne
jbe
sbb
ffree
sbb
ret
jecxz
push
shrl
add
sbb
jmp
outsl
jne
jae
cmp
aad
pop
cmpsb
dec
mov
dec
clc
sub
xchg
push
faddp
mov
sbb
push
lahf
incb
test
add
decl
sbb
or
popa
mov
push
or
cmpsl
add
aam
iret
push
pop
dec
int3
aaa
incl
movl
mov
loop
inc
adc
jg
fwait
cmp
jle
mov
aad
lock
xchg
shl
insb
pop
inc
sbb
adc
sub
lock
incl
jne
test
xor
jb
in
into
rol
add
subb
add
push
xchg
sub
movsl
xor
push
outsl
mov
lea
sbb
push
arpl
adc
and
xlat
sub
scas
ja
daa
and
call
aaa
or
add
lcall
lea
dec
add
addr16
or
dec
or
add
movsl
push
jne
add
adc
pusha
sub
push
movsb
pop
or
loop
sub
loopne
pop
aam
pop
jmp
mov
lea
stos
mov
cmp
or
lods
push
rcll
cmp
rcrb
dec
mov
xchg
mov
movsb
bnd
sbb
loope
sbb
add
sbb
stc
int
xchg
pop
es
jge
or
inc
cmp
jno
je
mov
icebp
jge
inc
and
or
pop
aaa
xor
fisubs
orl
mov
iret
or
add
add
pop
shll
les
adc
test
inc
imul
or
repnz
push
and
or
aas
inc
push
daa
movsl
jbe
jb
out
jmp
inc
paddd
cmpsb
lds
inc
mov
stos
cmpsl
pop
or
adc
cwtl
dec
aas
mov
popa
repnz
add
xchg
nop
pusha
lret
or
repz
mov
iret
mov
jl
loop
out
sub
pop
lahf
hlt
mov
orb
mov
sub
and
mov
inc
mov
mov
add
cmpsl
push
incl
shl
lcall
mov
xchg
and
dec
sbbl
adc
or
popf
pop
out
sahf
pop
dec
sub
add
pop
lea
pop
fiaddl
das
ret
test
pop
xor
push
cli
adc
pop
bound
arpl
lods
daa
jmp
test
add
lea
sub
andl
orb
enter
sar
mov
mov
stc
jl
xchg
add
ds
ret
in
or
jge
or
dec
xor
cmp
jl
ret
je
mov
roll
jmp
mov
dec
mov
test
imul
xchg
in
test
cmp
push
mov
inc
jecxz
out
mov
pop
push
inc
cmp
test
js
pop
sub
xor
in
ret
push
adc
daa
jb
xlat
add
incb
adc
push
sarb
popl
decb
push
push
ds
sbb
mov
incb
adcb
dec
jmp
and
cmp
dec
int3
fcmovnb
das
ja
rol
sbb
dec
dec
cmpb
pop
adc
cmp
xchg
adc
or
push
and
mov
mov
cmp
sbb
dec
call
inc
inc
and
push
ja
push
in
inc
movsl
pop
sub
adc
add
test
push
inc
imul
pop
cmp
fwait
adc
jp
adc
add
data16
adc
add
aam
repnz
and
loop
ret
push
mov
dec
jge
mov
popa
lods
sbb
fs
pop
mov
popa
jne
and
sbb
jns
pop
popf
pop
add
adc
in
dec
push
imul
mov
orl
lahf
test
loope
ljmp
iret
mov
sbb
jg
out
xchg
xor
mov
push
dec
dec
dec
push
mov
nop
sbb
imul
dec
clc
inc
pop
repnz
push
aaa
inc
sahf
cs
pop
xorb
cmpsb
inc
pop
pop
adcb
add
xor
cmpb
inc
xchg
ljmp
sbb
nop
add
cltd
xchg
add
mov
orb
and
jmp
cmpsb
mov
sarl
pop
or
sbb
mov
js
jnp
insb
ljmp
add
scas
cltd
mov
xchg
add
jl
dec
repnz
les
dec
int3
mov
repnz
repnz
aam
fsub
fdiv
loopne
add
es
in
call
es
xor
inc
jns
jns
hlt
push
clc
pop
cmp
jns
cld
push
xchg
cmp
add
or
or
adc
cmp
cmp
adc
sbb
ss
cmp
sbb
and
and
sub
sahf
dec
sahf
dec
sub
xor
sahf
dec
xor
cmp
dec
sahf
dec
cmp
inc
xchg
sahf
dec
sahf
dec
inc
lods
dec
mov
dec
int3
push
fcompl
lock
lea
iret
and
and
adc
iret
and
and
xor
inc
iret
and
and
push
jo
iret
and
and
js
xchg
iret
and
and
mov
ror
iret
and
rorb
and
mov
nop
addr16
addr16
adc
sub
cmp
dec
mov
movsb
je
addr16
addr16
test
xchg
movsb
mov
mov
sarb
xchg
clc
les
xor
sbb
xor
xor
xor
inc
aam
fdivs
leave
xor
fdivl
leave
xor
test
cwtl
call
lods
in
mov
leave
int3
hlt
fdivr
cmp
xor
lock
nop
add
add
repnz
sub
dec
repnz
repnz
or
adc
repnz
sbb
repnz
and
repnz
and
sub
repnz
sub
xor
xor
adc
es
jns
cmp
inc
es
jns
inc
fs
es
jns
dec
nop
push
es
jns
push
mov
es
jns
pop
shlb
jns
jns
fs
push
xchg
or
and
cmp
cmp
je
js
cmp
cmp
jl
adcb
mov
cwtl
mov
mov
ss
cmp
pushf
xchg
add
dec
sahf
mov
sahf
dec
sahf
test
lods
dec
dec
sahf
dec
sahf
mov
mov
dec
sahf
dec
sahf
mov
sahf
dec
sahf
shrb
sahf
enter
and
dec
sahf
shr
aam
add
and
fcoms
and
iret
and
loopne
in
and
and
call
iret
and
lock
and
clc
int3
cld
fmul
xchg
out
add
add
add
les
out
cmpsb
jne
mov
add
inc
insb
jne
jae
insl
loop
mov
pop
rol
mov
fiaddl
aam
jns
inc
dec
add
and
js
arpl
jbe
dec
mov
jb
gs
pusha
aas
in
mov
dec
outsl
jo
dec
popa
jp
add
test
pusha
pop
or
lahf
ja
inc
addb
add
das
imul
dec
test
das
in
mov
push
mov
push
es
iret
mov
ja
xchg
fbld
pop
shll
out
push
gs
xchg
cmc
arpl
outsl
mov
fs
popa
jo
out
xor
push
jo
mov
shll
aas
sub
aaa
push
jb
xor
imul
fs
popa
arpl
mov
das
inc
jne
outsl
sub
arpl
inc
insl
bound
jb
xor
pop
ret
outsl
push
outsl
arpl
mov
sub
lcall
xchg
iret
jb
mov
insl
cwtl
addr16
popa
imul
fiaddl
sub
inc
arpl
call
push
testb
mov
inc
rol
xlat
and
addl
jo
insb
xchg
and
dec
outsl
imul
mov
scas
inc
inc
scas
add
movl
dec
cmpsb
push
jo
arpl
add
insl
adc
push
sub
adc
adc
inc
ret
outsb
pop
jmp
and
or
lahf
push
jb
ja
rcrb
pusha
jo
aaa
inc
insb
cmp
testl
insb
in
mov
inc
fs
mov
add
das
or
xor
xlat
lock
pop
add
inc
aad
push
je
outsb
pop
in
mov
xorl
inc
jmp
xor
scas
leave
push
aaa
js
push
sbb
dec
das
testl
movsl
mov
xchg
out
popf
add
outsb
push
imul
popa
bound
mov
out
outsl
or
subl
adc
cmpsb
je
or
movsl
mov
cmpsb
shll
imul
xchg
stc
insb
xchg
bound
mov
sub
es
cmp
out
dec
jne
cmpl
or
sbb
insb
scas
dec
jmp
aas
pusha
outsl
push
cwtl
add
push
sub
popa
or
push
xchg
xlat
ja
shrb
je
jmp
out
bound
addr16
xchg
outsb
add
push
outsl
mov
cmp
aas
gs
or
ljmp
imul
jne
pop
mov
mov
out
addr16
das
adc
decl
cmpsb
mov
insl
jo
and
xlat
insb
mov
pop
inc
imul
and
jns
fildll
jge
lahf
inc
popa
fldenv
dec
fdivs
cmp
test
ja
adc
mov
adc
dec
cmc
mov
push
out
sub
xchg
xor
fnstenv
mov
fidivrl
bound
adc
test
jns
inc
outsl
sbbl
mov
daa
outsl
mov
sub
xchg
mov
mov
xor
jl
jne
add
add
insb
popa
scas
push
sub
pop
xor
pop
lea
icebp
xor
pop
push
push
icebp
adc
push
scas
dec
sarl
adc
inc
testl
or
sbb
sbb
or
cmc
bnd
je
mov
sub
jbe
leave
mov
addr16
outsl
xchg
jmp
ljmp
int3
xorl
jb
add
dec
scas
inc
jmp
mov
jmp
xchg
cld
dec
gs
or
shll
popa
adc
call
stc
lods
pmaxsw
popa
jbe
pusha
dec
add
es
stos
jo
out
nop
test
push
gs
mov
jb
testl
ret
push
mov
pop
jne
pop
cmp
pop
xchg
jo
push
popw
inc
pop
lds
lods
or
das
pop
push
imul
push
dec
push
xor
push
inc
xor
in
inc
dec
inc
push
inc
dec
and
repnz
push
add
ficompl
push
pop
sbb
rolb
pop
xchg
enter
mov
clc
sarb
mov
add
push
sbb
xchg
and
cs
lods
arpl
xor
xchg
leave
mov
sub
pusha
push
or
insl
or
daa
add
mov
je
mov
xchg
push
lods
dec
and
das
das
adcl
lock
fsubrs
xlat
adc
insb
dec
pop
dec
mov
ds
gs
adc
das
xor
das
inc
xor
xor
scas
mov
push
pop
jb
inc
push
and
dec
inc
dec
inc
psadbw
out
and
outsl
add
sub
fistps
adcb
sub
sub
mov
push
clc
cld
les
dec
sub
xchg
adc
adc
pop
repnz
inc
jno
jbe
adc
cmp
fs
sbb
fs
push
fs
and
fs
push
mov
fs
and
xor
pop
fs
and
add
sbb
pop
aam
sub
fldl
sti
mov
cwtl
fildll
add
subl
inc
push
add
les
jb
xor
add
and
lcall
and
add
pop
cmp
nop
sub
xchg
nop
sub
nop
cmp
cmp
nop
add
int
aam
sbb
sub
add
inc
fwait
or
push
fs
push
cmp
gs
dec
cs
cmpl
push
mov
pop
fs
push
repnz
clc
or
push
mov
add
adc
xor
inc
repnz
pop
mov
add
pushf
pusha
adc
push
into
push
shrb
stos
je
movsl
adc
add
cmp
xorl
sbb
push
outsw
pushf
in
scas
lcall
dec
pop
pushf
pop
dec
nop
popa
daa
and
jmp
in
inc
push
sbb
out
push
sbb
rcl
rcrl
fs
inc
aam
fs
inc
push
xlat
fcomp
nop
inc
push
sbb
fcmovnu
inc
push
sbb
filds
sbb
rol
sbb
nop
inc
push
enter
push
sbb
lret
int3
inc
push
sbb
iret
push
sbb
mov
mov
fs
inc
mov
mov
nop
inc
push
mov
mov
mov
sbb
mov
scas
inc
sahf
lds
push
inc
jle
in
int3
push
lahf
and
or
push
je
lahf
sbb
or
ja
sbb
lock
mov
je
bound
inc
test
or
or
dec
lods
push
add
sbb
or
xor
jmp
xor
adcl
add
push
jl
and
jae
add
jno
in
cmpsb
inc
pop
lahf
notl
or
and
mov
das
stc
movsl
stos
lea
push
adc
scas
test
fisubrl
mov
sar
loopne
mov
and
add
add
sbb
and
xchg
pop
or
sbb
or
sbb
and
xchg
movups
sbb
adc
sbb
and
xchg
pop
sbb
sbb
sbb
sbb
and
xchg
pop
and
sbb
and
sbb
and
xchg
daa
sub
sbb
sub
sbb
and
xchg
das
xor
sbb
xor
sbb
and
xchg
aaa
cmp
sbb
cmp
sbb
and
xchg
aas
inc
inc
sbb
inc
and
xchg
and
xchg
and
xchg
inc
dec
dec
sbb
dec
and
xchg
and
xchg
and
xchg
dec
push
push
sbb
push
and
xchg
and
xchg
and
xchg
push
pop
pop
sbb
pop
and
xchg
and
xchg
and
xchg
pop
pusha
popa
sbb
and
xchg
and
xchg
and
xchg
addr16
sbb
insb
and
xchg
and
and
mov
inc
inc
shlb
imul
add
xchg
bound
arpl
popf
push
sub
xchg
sbb
imul
pop
ret
jb
push
jbe
in
sub
outsl
xchg
push
jns
inc
push
jae
cmp
fs
lock
pop
outsb
xor
insb
fistpll
push
jbe
aaa
xor
add
lock
dec
test
jbe
push
je
out
jae
jne
fs
ds
cs
mov
pop
pop
push
mov
aaa
mov
je
push
jo
jmp
pop
adc
and
add
dec
jecxz
push
push
mov
jae
inc
bnd
push
inc
dec
jae
insb
in
shll
outsb
add
daa
lea
pushf
mov
mov
es
xchg
mov
or
jmp
ss
jns
push
pop
int3
xor
push
scas
das
and
mov
push
jbe
das
sbbb
mov
addr16
pop
dec
roll
cmp
and
push
gs
notl
xchg
push
lahf
pop
pop
and
daa
fisubl
iret
and
cmpsl
push
pop
and
push
jbe
and
inc
xor
les
gs
inc
daa
push
inc
jp
fsubs
jnp
pop
ja
imul
rclb
inc
daa
xor
jg
push
pop
mov
jo
mov
nop
pop
jne
das
push
jnp
cwtl
fiadds
pop
push
fsubr
fsubr
dec
mov
call
push
dec
sub
sbb
cmp
xor
ret
dec
mov
aaa
inc
or
pop
cmp
sti
inc
or
je
outsl
es
outsl
pop
ficompl
outsb
sbb
xchg
pop
jbe
push
in
ljmp
daa
ret
sbb
pop
popl
test
inc
daa
insb
fsubrs
push
adc
mov
int
dec
dec
clc
lea
in
out
stos
jmp
gs
push
das
push
fsub
bound
insb
sbb
push
inc
inc
inc
cwtl
dec
and
mov
push
call
insl
cmp
testb
sub
xor
lods
sub
das
aaa
pop
fnstcw
inc
fs
hlt
jecxz
in
mov
push
iret
dec
enter
icebp
mov
jp
push
insl
mov
pop
iret
inc
inc
push
in
push
imul
pop
adc
stos
jnp
mov
push
loopne
callw
or
popa
frstor
vprotq
or
cld
cmp
enter
xor
jo
push
cmpl
icebp
inc
push
inc
push
dec
add
mov
xor
loope,pt
inc
fisttpll
add
roll
repz
cwtl
sbb
or
int3
stc
scas
jle
rolb
jno
pop
mov
enter
cmp
adc
inc
arpl
or
jne
es
rcrb
sub
pop
scas
jns
leave
iret
add
scas
mov
andl
sub
inc
cmp
pop
add
push
mov
mov
fmuls
pop
fstpt
or
or
sbb
lretw
sbb
lds
add
pop
xor
leave
aam
push
cmpsl
xchg
pop
mov
ds
xchg
add
push
jle
mov
das
scas
in
adc
mov
out
pop
aaa
stos
sub
dec
add
outsb
je
mov
mov
sbb
sub
push
sbb
repnz
repnz
mov
pop
mov
adc
addr16
jnp
in
dec
xchg
lock
mov
xlat
mov
repnz
xchg
pop
mov
aaa
and
stc
pop
mov
pop
mov
and
nop
nop
iret
add
sub
or
loop
add
popa
xchg
mov
or
mov
aaa
mov
cmp
cmp
push
lods
xchg
popa
leave
dec
dec
mov
xlat
movsb
and
inc
movsb
pop
sbb
cmpb
ret
pop
leave
add
inc
jp
pop
mov
inc
mov
inc
jne
dec
add
aad
inc
xor
aam
call
or
adc
mov
out
mov
adc
inc
popa
push
jns
mov
lods
sbb
cmp
jae
xchg
xchg
das
pushf
adc
mov
test
inc
dec
push
mov
es
shlb
adc
repnz
mov
movb
pop
sarb
ja
rolb
xchg
in
mov
push
xor
mov
pop
out
in
push
rorb
lgs
sahf
or
sbb
pop
mov
imul
imul
xor
mov
and
inc
push
xor
shll
jne
xchg
test
xor
shll
ss
or
sbb
das
lock
rorl
leave
xchg
cs
add
sbb
nop
and
mov
xor
xchg
in
and
mov
rolb
push
cmp
fcmovbe
mov
add
cmp
xchg
sbb
or
lret
je
push
in
push
in
pop
loopne
push
in
dec
cld
inc
add
in
push
push
in
dec
push
push
pop
hlt
gs
jbe
jb
push
or
jl
pop
sbb
fucomi
outsb
pop
cmp
pusha
xchg
mov
daa
inc
add
inc
mov
pop
sub
rcrb
enter
stc
jnp
mov
sbb
ja
lea
add
add
adc
lock
dec
mov
and
add
inc
mov
mov
inc
out
and
mov
and
andb
sub
pop
mov
pusha
dec
pop
mov
inc
and
dec
add
mov
je
mov
cmp
mov
dec
bswap
sbb
aas
jmp
and
and
jl
xchg
mov
mov
imul
pop
mov
pop
jae
inc
push
push
mov
lcall
mov
inc
jle
mov
imul
mov
mov
dec
rep
int3
inc
mov
fcoml
enter
pop
mov
jns
mov
cwtl
push
add
sub
and
lds
sbbb
imulb
leave
pop
inc
push
pop
mov
sbb
insb
jbe
cwtl
add
insb
call
loope
jmp
jns
fldenv
sbb
decb
push
insb
sub
dec
push
pop
mov
movb
fcompl
jae
shlb
push
scas
adc
or
inc
sub
mov
dec
push
inc
loopne
mov
jne
xor
mov
clc
sub
hlt
hlt
jl
add
and
aaa
pop
adcl
and
popa
xor
cmpsl
outsb
in
sbb
mov
xchg
popa
push
pop
in
and
add
push
push
loopne
repnz
test
mov
in
push
jae
pop
in
mov
and
fwait
ljmp
aam
adc
aas
into
in
bound
test
mov
xor
cld
and
dec
jecxz
daa
mov
bound
mov
les
sub
lock
test
sbb
addl
std
adc
cwtl
or
add
pop
in
cmp
imul
in
hlt
and
sub
mov
mov
les
rorb
fnstenv
sbb
dec
add
nop
or
mov
lock
lods
push
mov
inc
mov
add
mov
inc
mov
aaa
leave
or
leave
mov
mov
es
imul
inc
xor
add
sub
push
fstpt
cmc
in
push
lcall
arpl
or
mov
mov
pop
aas
xor
lods
mov
dec
loopne
mov
and
loope
push
mov
sbb
sub
cmp
xlat
iret
mov
dec
sbb
cmp
cwtl
xchg
mov
test
and
mov
arpl
adc
dec
imul
and
js
xchg
sub
and
inc
push
and
mov
adc
in
in
cmp
pop
mov
les
mov
jo
mov
cmpsb
mov
shl
addr16
mov
fcmovbe
enter
ret
mov
cmpb
and
pushf
adc
cwtl
cmp
subb
sub
add
lock
and
jno
repnz
cld
xchg
push
mov
out
sbb
sbb
aaa
adc
sti
fiadds
outsb
mov
imul
or
push
add
jecxz
jnp
cs
sbb
adc
adc
adc
and
dec
dec
jb
sbb
cmp
in
aas
or
mov
xlat
les
cmpsb
fisubs
or
sbb
or
xchg
pop
add
ljmp
cmovge
popa
stos
jae
mov
fsubl
lahf
push
add
mov
filds
flds
pop
aaa
or
dec
xlat
and
ljmp
int3
or
hlt
mov
inc
or
outsl
pop
mov
jne
pop
jb
add
cs
jo
int
movsl
and
push
outsl
lods
cmp
outsb
add
xorl
add
shlb
xor
add
xor
mov
inc
jne
push
dec
mov
xchg
nop
pop
cmpb
pop
ret
dec
pop
push
ret
addr16
ret
xor
push
push
pop
push
es
pop
and
lods
push
xchg
lods
add
mov
fldl
add
hlt
xor
mov
scas
or
nop
fists
push
lock
lock
mov
xor
loopne
stos
adcb
mov
fidivrs
ret
push
add
shll
add
dec
sub
dec
or
mov
inc
sahf
call
mov
imul
dec
adc
das
xchg
pop
addr16
dec
sub
adc
inc
ds
inc
pop
jl
inc
or
addl
cmp
sti
sub
adc
inc
invd
or
adc
sbb
cmpsb
sbb
hlt
out
sbb
add
inc
mov
fiaddl
xchg
pop
cwtl
sub
add
jmp
lcall
daa
or
sub
push
lea
insb
mov
mov
mov
hlt
push
cmp
mov
sarb
or
xor
popf
fs
add
cmpsl
mov
nop
mov
mov
cmp
hlt
inc
scas
in
inc
add
lock
dec
sahf
add
in
add
shlb
vandps
add
cmpsb
adc
aaa
es
dec
sbbl
push
sbb
adc
xor
push
inc
pop
rcl
scas
or
scas
xchg
dec
mov
jne
out
loope
adc
call
mov
aas
add
test
dec
push
sbb
cmp
in
fmuls
mov
cmc
inc
jl
cld
cld
push
pop
lods
xchg
pop
push
mov
imul
add
test
jp
add
mov
imulb
aam
nop
or
jecxz
adc
iret
enter
insl
mov
data16
andb
and
add
inc
push
or
pop
push
pop
adc
loopne
mov
dec
jne
xchg
mov
movsb
lock
sub
inc
popf
sub
mov
xor
mov
cmp
sbb
pop
enter
xchg
mov
sub
test
pop
outsl
pop
je
cld
cwtl
fnstsw
icebp
and
cmp
add
mov
add
jle
mov
popf
aam
and
std
fbstp
add
test
xor
xlat
fidivrl
push
jne
push
add
jecxz
dec
sti
push
jne
das
push
gs
bound
imul
imul
popa
inc
bound
mov
jns
jo
jns
pop
jnp
mov
push
insb
pop
jne
xlat
gs
sahf
in
dec
dec
arpl
jbe
arpl
lret
push
enter
lret
xor
in
repnz
into
push
popa
fs
lret
add
cmp
push
inc
insb
outsl
push
cmp
add
test
outsb
xor
xchg
mov
shl
ja
cmpsl
dec
or
pop
add
movsb
enter
add
stos
or
popf
aaa
and
hlt
sbb
sub
xchg
cmp
rorl
push
pusha
add
mov
mov
orl
sbb
aam
add
cmp
add
push
jg
dec
pop
ss
pop
call
adc
xor
push
pop
outsl
xchg
bsf
js
cmp
jmp
add
dec
mov
inc
sbb
add
mov
les
dec
xor
int
xchg
push
arpl
add
lods
mov
fcompl
and
sub
clc
jmp
sbb
incb
and
popa
adc
jb
jmp
into
adc
cltd
mov
mov
lods
sub
xchg
es
pop
scas
add
adc
push
iret
fsubrs
push
sub
out
xor
test
add
iret
pop
cmp
aam
xchg
mov
inc
repnz
mov
in
pop
adcb
adc
jns
xor
xor
sbb
cmpsl
pushf
mov
jp
lods
iret
pushl
push
pop
push
iret
sti
and
add
and
popf
sub
and
adc
mov
or
mov
xor
leave
pop
mov
mov
jmp
push
out
cs
ret
push
mov
inc
jle
and
pop
lret
add
leave
sub
push
xor
cmp
jb
xor
ficoml
add
add
push
or
add
inc
adc
adcl
add
pop
fadd
xor
cltd
aaa
xchg
sub
sub
dec
sub
and
rcrl
pop
pop
inc
adc
dec
rclb
mov
xchg
cltd
in
push
shll
and
xchg
or
sarl
and
push
jb
add
dec
inc
xchg
shrb
dec
pop
or
add
push
push
dec
int
imul
cmpsb
imul
push
aaa
push
insb
adc
add
in
dec
and
mov
rorb
das
and
mov
jl
inc
das
push
enter
roll
fisubrl
pop
push
mov
and
push
outsl
xchg
xchg
sbb
sbbb
sbbb
int
push
enter
pop
roll
pusha
rorl
and
xor
fs
xor
and
jl
and
xor
insb
pop
xor
and
in
sbb
sbb
add
and
leave
orl
enter
lea
leave
adcl
test
test
iret
movd
pop
aad
cmp
cwtl
adc
sub
dec
sbb
ret
pop
xchg
and
in
dec
or
add
xchg
xchg
mov
mov
xchg
rolb
dec
add
and
btr
pop
or
fdivp
clc
mov
shlb
add
inc
pop
out
cmp
adc
clc
pop
fsts
add
dec
mov
enter
popa
loope
aas
push
inc
insw
mov
mov
jne
cmpb
pusha
sub
out
mov
xchg
pop
adc
insl
mov
in
jmp
adc
sub
insl
neg
inc
jmp
and
or
push
cld
das
sub
jne
cmp
jne
push
jmp
xor
ja
and
mov
lret
sbbl
mulb
xchg
and
jge
adc
cmp
mov
cmc
add
rcll
inc
sub
pop
and
pop
nop
push
lods
and
loopne
test
cmpsl
cwtl
scas
popa
in
dec
inc
cwtl
mov
call
in
inc
insl
cwtl
jb
pop
adc
lods
or
inc
icebp
int3
cmp
movsl
seto
orb
adc
cmpsb
xlat
fstpl
leave
or
xchg
sub
xor
mov
aas
mov
inc
xor
pop
xor
xchg
inc
cmp
aam
pop
rolb
or
xchg
dec
fwait
and
sbb
add
adc
fidivs
les
das
clc
add
inc
clc
cmpb
je
daa
hlt
test
je
pop
roll
pop
flds
add
ja
test
imul
pushf
mov
add
aaa
das
pop
pusha
xor
mov
mov
and
jb
sbb
and
jle
aas
in
add
dec
push
in
pusha
jg
jg
cmp
sbb
inc
inc
loopne
push
movsl
cmp
and
add
lock
add
ja
mov
dec
clc
cmp
push
push
aas
xor
pop
dec
int3
jmp
hlt
cmp
fnstcw
and
add
test
sbb
ficoml
sub
inc
add
jle
bound
or
push
mov
sbb
mov
sub
fcmovne
pop
test
sbbb
adc
lds
lds
xor
add
xchg
lahf
push
gs
adc
imul
xchg
adc
insb
imul
call
add
pop
adc
mov
popa
pop
push
stos
outsb
fsts
pop
mov
insb
sarb
lea
mov
cmp
push
frstor
nop
mov
sub
or
pop
imul
mov
imul
in
xor
jg
add
pop
jne
cmp
aaa
or
js
in
sub
es
shr
and
adc
jmp
mov
mov
pop
push
or
xor
push
shlb
inc
push
jno
mov
inc
arpl
jns
push
adcb
fisttpl
ret
pop
jae
and
cmp
mov
faddl
frstor
cmp
filds
ficoms
mov
or
jnp
sub
add
sbb
jae
lods
push
into
aas
mov
sti
jmp
inc
pop
sub
sbb
andb
lods
or
and
adc
mov
push
fsubl
fidivs
test
movl
adc
add
inc
cmp
icebp
mov
sbbb
add
push
mov
out
roll
fadds
or
inc
and
sbbb
and
les
les
and
mov
add
lcall
xchg
adc
dec
or
loop
cmp
sub
addr16
add
adc
or
jbe
test
outsb
push
sbb
sbb
nop
shll
mov
dec
sbb
fdivrs
clc
loope
aaa
loope
push
mov
and
loope
cmp
test
cwtl
stos
icebp
pop
in
mov
shl
je
xor
es
sub
outsb
xchg
fists
add
or
add
or
inc
add
xchg
ret
sub
ret
adc
or
xor
loop
pop
into
jo
pop
pop
xchg
xorb
stos
inc
jecxz
push
jne
or
jnp
mov
sub
inc
inc
ss
rolb
ret
mov
dec
lcall
xor
fidivrl
adc
stc
iret
nop
inc
dec
int
sbb
dec
pop
mov
gs
push
in
dec
pop
mov
test
dec
iret
orl
rorb
dec
inc
jp
lahf
mov
insb
pop
and
inc
dec
lcall
in
adc
nop
add
arpl
mov
movsl
sub
sti
jl
push
or
or
or
cld
xchg
and
stos
icebp
pop
lods
push
sub
mov
cmpsl
imul
pop
cmc
dec
testl
pop
aas
sub
sti
mov
out
xor
fs
push
inc
add
enter
sbb
fadds
fsubs
leave
mov
cmp
or
popf
ja
popl
xor
mov
or
stos
movsb
adc
jbe
cmpsb
mov
add
fcmovnb
xor
sbb
push
mov
adc
shl
out
lret
push
sub
std
sbb
or
rcrl
cs
leave
and
incl
add
mov
loopne
or
add
mov
out
in
mov
in
in
pop
hlt
and
movsl
inc
inc
add
cmp
cmp
dec
cwtl
xlat
add
add
inc
or
and
mov
dec
in
sti
mov
sub
mov
jbe
out
pusha
xor
jge
adc
add
rorl
cmp
repz
cmpsl
inc
add
ja
push
dec
jg
in
mov
dec
dec
sbb
mov
ss
test
cwtl
sbb
cs
adc
pusha
cmp
cmpsl
cs
fwait
mov
adc
adc
and
sti
cs
add
adc
mov
push
add
decb
mov
mov
adc
fs
mov
aaa
aam
pop
rcrl
rcr
jmp
and
dec
call
pop
cld
mov
test
lret
sti
mov
or
adc
mov
mov
inc
sarb
ss
adc
and
mov
jl
mov
pop
add
dec
imul
mov
decl
out
fwait
and
mov
pusha
mov
mov
mov
out
adc
xchg
push
movntq
out
loopne
shlb
pop
call
popf
sbb
add
push
inc
out
mov
or
inc
push
adc
cmp
arpl
addr16
insl
xchg
or
ljmp
jo
jb
je
jbe
js
jp
mov
sub
xlat
add
mov
push
lcall
push
pop
sbb
jmp
mov
adc
push
cld
in
push
add
mov
push
mov
inc
loop
or
mov
sbb
jb
jmp
nop
ss
stc
lret
cmpsl
or
in
hlt
outsl
fs
sti
add
cmp
icebp
out
add
adc
mov
outsb
je
fisubrl
pusha
push
test
xor
push
roll
adcl
jnp
push
inc
ds
inc
or
ljmp
adc
jg
out
insb
lock
aad
imul
test
fmull
rcr
or
push
or
cmpsb
inc
xor
inc
mov
pop
mov
jle
movsb
test
cmpb
push
inc
mov
insb
stos
jns
insl
mov
gs
mov
fs
jl
and
jl
andps
pop
add
add
or
push
rorb
in
fwait
mov
inc
adc
les
pusha
test
popf
das
cmc
xor
mov
pop
mov
hlt
enter
pop
mov
outsb
mov
mov
xor
addb
add
push
int3
enter
test
nop
cmp
xchg
jge
in
mov
inc
xchg
mov
rcrb
mov
pop
sub
movsl
add
add
mov
lds
cmp
rol
mov
xor
in
into
pop
add
cs
jae
jo
movsb
xchg
or
lret
adc
cmp
xchg
leave
inc
or
sbb
cwtl
aam
push
push
aas
mov
xlat
dec
test
clc
aas
jmp
inc
psubusw
cmp
in
les
pop
xchg
xchg
xor
mov
push
add
cmpsl
ja
pushf
shll
dec
jg
popa
jae
ja
mov
jae
mov
sub
lahf
inc
or
dec
and
je
push
sbbl
push
jl
cmp
xchg
adc
out
inc
ret
cmpsl
ss
push
out
or
out
pop
mov
sarb
loope
cmp
shrb
insb
jbe
out
loopne
jno
ffree
inc
fsubrp
fs
xchg
in
dec
fistpll
adc
add
outsl
inc
adc
lret
inc
sahf
inc
and
pop
lock
fadds
loop
cwtl
stc
in
sub
les
jno
lock
push
inc
sti
pop
jle
mov
push
jb
scas
lock
mov
leave
fsubrs
cmp
cmp
adc
in
out
cmp
movsb
sbb
mov
or
daa
das
mov
and
into
in
push
test
pop
inc
in
cmc
insl
sbb
rolb
stos
pop
lock
and
and
pop
add
mov
adc
and
cmp
orl
xchg
ja
shlb
outsl
push
mov
ret
push
adc
mov
sub
pop
push
add
fadds
popa
push
or
fiadds
inc
pop
sbb
icebp
or
insb
adc
mov
es
fdivrs
add
jmp
xlat
adc
and
leave
addl
jecxz
or
sarl
sbb
inc
push
inc
push
insb
insb
scas
ds
stc
sub
icebp
rcrb
jmp
jg
dec
dec
pusha
add
add
jg
sbb
jb
test
outsl
mov
jb
add
mov
and
and
and
hlt
and
and
sub
sub
sbbb
pop
sub
enter
sub
xchg
sbb
xorb
enter
xor
xor
enter
xor
add
cmp
or
adc
xor
mov
inc
pusha
cmp
xchg
dec
or
push
lds
ljmp
push
and
push
adc
dec
jne
and
mov
jo
mov
nop
dec
cmc
jmp
sub
lock
mulb
dec
push
enter
sub
fs
pop
pop
scas
bound
pusha
pop
fbstp
add
pop
xor
lahf
shlb
or
add
adcl
add
loope
or
mov
loopne
cmpsb
pop
outsl
pop
in
das
cmp
scas
pop
and
pop
sub
jl
sub
pop
jnp
jge
repz
cltd
fs
mov
adc
int3
enter
es
in
testl
pusha
mull
push
jb
outsl
hlt
fs
add
clc
and
sbb
xchg
push
enter
adc
or
add
pop
aaa
stc
scas
inc
sbb
xorb
xchg
je
mov
shll
push
sub
inc
mov
jo
add
and
in
imul
or
cmp
sbb
sbb
push
fs
jl
fs
push
sbbb
inc
push
lea
test
fs
push
fs
mov
fs
push
std
mov
add
xlat
xor
xor
pushl
aaa
xor
xor
xor
inc
xor
inc
xor
inc
xor
dec
xor
dec
xor
xor
aas
fimuls
dec
sub
xor
push
xor
xor
push
xor
std
pushl
pop
xor
pop
xor
xor
pop
xor
popa
xor
arpl
pushl
xor
ret
cmp
cmp
cmp
cmp
xor
xor
xor
inc
fstpt
push
pop
lahf
sti
icebp
nop
jne
jns
adc
lcall
add
and
pop
out
pop
jb
push
outsb
push
inc
push
adc
leave
iret
inc
cmpsb
and
and
repnz
cld
push
xchg
cld
pop
pusha
sbb
sub
push
loopne
mov
adc
lods
test
dec
xchg
dec
xor
loopne
sbb
mov
loop
add
xor
scas
jg
adc
sbb
xor
push
rcl
mov
xor
ret
nop
jg
and
nop
adc
movsb
xor
push
std
pusha
jecxz
das
sub
inc
sidtl
or
add
arpl
mov
add
inc
or
or
in
rep
pop
daa
test
dec
les
or
ret
push
mov
sbb
sbb
push
movsl
adc
cmpsl
inc
pop
pop
sbb
cmp
xor
sub
mov
push
cmp
shll
repz
push
fimull
xchg
mov
les
scas
cwtl
mov
mov
ljmp
cmp
aam
dec
loopne
sub
shlb
dec
push
sbb
pusha
cmpsl
pop
call
xchg
inc
dec
and
pop
mov
das
push
test
or
mov
jecxz
leave
ss
in
in
adc
mov
add
fs
mov
int
mov
cld
into
or
adc
jbe
jp
aaa
hlt
adc
imul
in
mov
testl
mov
fldl
adc
or
adc
add
jne
dec
out
sub
std
fadds
ret
add
cmp
or
mov
aam
fs
stos
in
je
sbb
and
jbe
xor
jnp
test
pop
jg
jbe
dec
es
sbb
and
cmpb
push
cltd
push
outsb
sbb
fwait
cltd
mov
lods
loopne
dec
or
call
shlb
or
inc
sbb
or
aaa
cmp
sbb
jb
add
js
mov
adc
leave
shll
pop
clc
orl
imul
sbb
addl
pop
pushl
dec
mov
shlb
adc
or
mov
popf
dec
int3
je
testl
cmp
in
aam
mov
sub
scas
and
mov
jmp
pop
and
sub
mov
adc
clc
mov
cmp
mov
cmpsl
clc
lret
mov
lods
fcompl
add
jne
sbb
into
pop
cmpsb
add
pop
xchg
jge
mov
push
test
rcr
and
pusha
jl
fists
inc
notb
imul
pop
xchg
fsubr
push
ss
pop
sbb
aam
jmp
in
or
mov
push
and
mov
xchg
sahf
shr
prefetchw
sti
lea
or
or
rclb
sub
nop
ret
pop
mov
and
fidivrs
arpl
and
outsl
push
add
gs
xor
adc
in
xor
inc
push
mov
mov
movsb
add
repnz
test
push
cmp
fdivrl
imul
jo
sar
jmp
mov
jl
xchg
dec
sub
rcrb
sbb
cmp
cmp
clc
pusha
and
adcb
or
stc
add
mov
pop
mov
sub
je
jmp
sbb
fbstp
lock
xchg
inc
xchg
jge
test
cmpsl
or
and
sbb
xchg
inc
sahf
dec
dec
fcoms
mov
shlb
sbb
mov
cmp
inc
adc
push
adc
call
insb
in
movsb
movb
in
mov
enter
mov
out
xchg
jo
sub
mov
cmp
mov
add
ret
xchg
sbb
pop
push
fsubl
int3
and
xchg
inc
movsl
in
repnz
xchg
add
pop
test
lock
xor
mov
xchg
fists
aad
xor
orl
sar
pop
cmp
jl
jge
je
add
je
mov
push
daa
les
xlat
ret
dec
aad
movsl
fnsave
add
aam
adc
pop
sbb
sbb
push
movsb
pop
mov
mov
test
or
sub
push
in
mov
mov
rol
jnp
daa
out
push
mov
mov
add
call
and
adc
push
dec
dec
or
cmc
call
sbb
jecxz
adc
mov
fcmovnbe
pop
enter
adc
add
push
or
sbb
mov
cmp
leave
push
or
and
pop
mov
add
dec
push
inc
sbb
push
inc
and
sbb
add
dec
cmp
stc
sub
adc
pop
dec
cs
hlt
dec
sbb
aam
inc
mov
push
mov
xor
push
xchg
or
add
ret
mov
cmp
push
sub
mov
dec
imul
lret
or
or
enter
je
jge
in
cmpsl
lods
sub
jl
ja
xor
add
and
push
in
shlb
out
sahf
add
cmp
inc
sahf
add
test
iret
and
mov
cwtl
les
pusha
fmul
jae
iret
nop
in
in
ss
repnz
clc
test
add
nop
out
jl
js
jns
in
je
nop
out
sahf
insb
and
xor
in
mov
push
add
push
in
nop
push
pop
pusha
lods
inc
sahf
add
push
js
cmp
cwtl
sahf
add
dec
lods
cmp
cmp
push
add
in
mov
lcall
mov
mov
adc
popa
adc
inc
fstpt
orb
fistpll
mov
shlb
mov
addr16
jb
aam
in
repz
sahf
pusha
loop
cld
push
fisubl
scas
add
aaa
add
pop
or
mov
push
icebp
ja
xor
xor
incl
adc
popl
and
sahf
add
sbb
sbb
push
adc
aaa
inc
pop
adcl
add
or
imul
push
sbb
popf
push
faddl
mov
jo
mov
mov
dec
fnstcw
pop
xor
imul
ss
mov
and
inc
pop
xor
shlb
rorl
inc
cmpsl
pop
push
fiadds
mov
lock
and
dec
push
dec
mov
jae
subl
enter
push
xor
xlat
pop
push
in
add
push
enter
ljmp
push
popa
jbe
imul
push
outsl
sti
fs
push
fs
outsb
add
testb
out
loope
data16
push
xorb
pop
sbb
push
dec
imul
in
in
push
sub
ja
mov
cmp
clc
gs
pop
dec
jbe
inc
and
dec
enter
jns
cmpsl
mov
loope
fsubr
push
in
das
imul
pop
mov
pop
push
rcr
aaa
je
push
adc
ret
fdivrp
mov
push
nop
cmp
lock
jmp
fimuls
jp
add
je
enter
cmp
jbe
add
cltd
pusha
xchg
imul
jnp
mov
ret
test
inc
xor
cmp
loop
and
dec
xor
cmpsl
push
cmp
stc
decl
fcmove
es
and
ret
in
add
xchg
jo
jb
push
addw
pop
xor
dec
out
shr
data16
shlb
out
or
pop
pop
add
mov
sti
cmp
leave
aad
testl
add
pop
sbb
push
add
popa
mov
xlat
sub
scas
ret
jl
sub
daa
and
and
les
ret
push
or
ljmp
mov
mov
pop
sub
dec
xchg
push
test
jne
and
lock
subb
sub
xchg
xchg
jne
rolb
add
dec
push
mov
pop
push
add
in
es
or
or
sbb
popa
add
xchg
sbb
and
pop
mov
sbb
repnz
jns
dec
nopl
test
push
push
cld
mov
adc
mov
pop
jbe
cmc
das
nop
push
imul
inc
enter
stos
lcall
push
out
inc
xchg
dec
sarb
repnz
fmull
and
repnz
sub
mov
add
test
mov
bnd
jg
dec
arpl
hlt
hlt
xor
in
pop
fmul
and
clc
xor
dec
xchg
lock
and
ja
cmp
mov
in
pusha
ret
aam
loopne
xor
inc
rcrb
mov
stos
and
ficoml
call
or
adc
sahf
pop
sub
in
sbb
push
pop
sahf
xorl
and
int3
or
cmp
insb
cmp
enter
or
mov
leave
xor
and
les
ja
fcoml
aaa
pop
ror
push
xor
rclb
mov
or
jns,pn
add
xor
push
les
mov
mov
pop
sbb
gs
mov
pop
je
mov
add
scas
lcall
jp
push
cmc
and
sbb
dec
aaa
ret
icebp
sbb
fcomip
lcall
das
and
jmp
push
push
mov
xor
xor
pop
xor
inc
add
das
add
and
cmp
cs
and
decl
cmp
test
jecxz
add
pop
or
mov
sbb
sti
push
lea
sub
mov
jmp
dec
dec
sub
ja
ret
push
mov
jno
ds
add
pop
cpuid
ja
mov
adc
dec
dec
fldenv
xor
sbb
pop
add
push
rclb
imul
or
insl
in
jg
addr16
sbb
mov
inc
imul
pusha
fldl
inc
arpl
stos
cmp
add
jo
adc
lahf
jmp
imul
popa
stc
out
test
inc
pop
rclb
xor
pop
pop
repz
xlat
jne
je
out
cmp
pop
repnz
mov
arpl
mov
popa
movsb
add
aaa
push
mov
test
xor
ja
mov
ficomps
rorl
es
pop
jge
les
mov
stos
mov
stc
aaa
sbb
or
cmp
sbb
and
or
insb
adc
inc
dec
xor
xchg
popa
or
push
or
add
sub
mov
popa
pop
adc
cwtl
push
decl
movsl
cmc
pop
adc
and
popa
dec
js
lret
lret
or
add
xor
lret
fistps
rorb
pop
sbb
push
cmp
mov
lcall
add
xchg
jecxz
and
pusha
shll
repnz
clc
and
sbb
mov
or
cmp
mov
or
sub
sbb
dec
and
js
add
dec
pop
fs
inc
sub
iret
jne
pop
dec
scas
call
sbb
dec
push
jno
sub
sub
adc
dec
clc
adc
fsubrs
push
xor
sahf
sub
and
push
cmpb
adc
addb
mov
xchg
std
cmp
sbb
dec
jne
xor
and
xchg
inc
and
cmp
xor
sbb
dec
jmp
cmp
imul
dec
inc
jecxz
push
lock
sar
insb
jg
or
sbb
push
js
and
sub
loop
pushf
dec
xlat
push
repnz
push
pop
lock
repnz
or
hlt
dec
add
cmc
mov
lahf
dec
xchg
cmc
out
in
fs
sti
add
imulb
xchg
sbb
movsl
xor
mov
and
scas
cs
ret
mov
jecxz
pop
push
les
or
outsl
sahf
mov
mov
loopne
and
mov
js
ficoml
lret
add
mov
mov
inc
add
ljmp
dec
inc
rorb
arpl
pop
lock
add
or
aaa
xchg
and
push
push
and
push
lret
push
inc
xchg
rcr
div
or
inc
pop
mov
xchg
fsts
lea
inc
dec
cmp
cmp
and
mov
add
mov
pop
mov
xlat
mov
lret
stc
jle
or
jae
movsb
fdivs
add
mov
stos
in
mov
sub
inc
adc
jmp
xor
and
and
and
sub
push
jl
imul
movl
inc
and
dec
sub
mov
add
mov
add
es
pushf
cld
sub
dec
mov
push
cmp
push
and
dec
cmp
inc
in
and
hlt
hlt
sub
push
sbb
cld
inc
push
and
outsb
add
nop
cmpsl
mov
inc
sbbl
dec
jmp
test
adc
daa
push
ret
sbb
in
outsl
and
hlt
push
test
jns
loopne
xor
sbb
outsl
popf
clc
dec
int3
mov
add
xor
iret
xchg
in
pop
addb
dec
and
dec
sub
mov
xchg
mov
ljmp
mov
in
sbb
xchg
pop
outsb
pop
pop
call
ror
in
mov
in
pop
mov
mov
jb
inc
dec
loopne
nop
add
loopne
lea
sbb
shlb
je
mov
sbb
xor
inc
adc
xor
xor
mov
fiadds
sbbl
and
divl
imul
cmpsl
adc
and
push
mov
and
outsb
aad
dec
jne
fstps
sbb
jo
push
mov
fadds
in
arpl
cld
mov
cs
sbb
inc
pop
jg
jb
test
jne
aaa
cld
lea
int
and
mov
repz
or
sbb
sub
popa
add
inc
lock
mov
inc
test
mov
sbb
pop
daa
or
insb
cmp
xchg
sub
loopne
rcpps
or
push
lods
add
xchg
sarl
push
int
jne
mov
sbbb
cmc
and
mov
pop
jp
add
loopne
ja,pn
or
je
es
sbb
gs
add
sbbb
nop
inc
fidivs
and
fnsave
aaa
xor
mov
xor
aas
and
mov
and
repz
add
jle
js
addr16
mov
xchg
imul
lods
xorb
xchg
aam
sub
xchg
cwtl
in
repnz
adc
mov
pop
jnp
mov
repz
lods
movsb
aas
sbb
lret
ret
add
arpl
adc
loope
adc
addb
push
and
jae
ss
cli
adc
push
gs
push
adc
lahf
and
idivb
add
in
mov
outsl
cmp
loopne
xor
leave
inc
sub
push
std
inc
or
int
push
jle
stos
hlt
push
and
and
xor
inc
or
xor
je
xor
sub
xor
jl
push
cltd
sbb
add
xchg
mov
add
or
push
push
push
divb
sbb
aaa
cmpb
rcrb
imul
jbe
adc
nop
pshufw
mov
lea
movl
mov
or
and
sub
gs
and
addr16
aaa
mov
daa
mov
cmp
adc
or
xor
push
push
or
gs
aas
push
pop
cld
push
push
bound
sub
inc
dec
sub
push
or
xchg
xchg
insl
ret
inc
adc
add
test
leave
nop
cmpsb
or
pop
daa
nop
rolb
or
jmp
jg
or
push
pop
sub
wbinvd
inc
loopnew
and
out
and
push
jge
imul
cmp
pop
sarl
dec
or
pop
sub
or
or
or
cs
dec
test
or
dec
fmull
lret
push
sbb
popa
or
enter
lods
dec
scas
sub
jmp
push
sbb
inc
inc
jecxz
adc
push
add
adc
add
outsb
pop
sbb
prefetch
xchg
and
sub
sbb
xchg
aas
subl
push
add
pop
sub
or
or
push
int3
adc
xor
fldenv
or
add
mov
or
add
push
lcall
dec
out
push
sub
or
pop
push
std
inc
sahf
sub
cwtl
or
dec
bound
pop
mov
rol
pop
sbb
lret
inc
popa
insl
pop
jns
mov
shrb
loop
neg
outsb
jns
dec
push
xor
fwait
popa
adc
add
jg
int
mov
push
push
pop
xor
adc
inc
add
push
dec
jae
mov
push
dec
jg
insl
jbe
or
jbe
adc
push
dec
push
jbe
jae
enter
xor
mov
sub
sub
pop
xchg
sbb
jo
or
push
hlt
dec
pop
xor
in
mov
mov
cs
das
adc
push
pop
sub
push
rolb
mov
aas
push
dec
call
pop
jae
jo
aaa
inc
xor
pushf
dec
clc
jae
mov
or
push
dec
or
mov
dec
lock
dec
dec
adc
push
mov
xchg
cmp
fmul
es
pop
push
pop
cwtl
mov
cld
les
push
aas
pop
scas
imul
test
rcr
out
pop
sub
shll
pop
mov
or
dec
pop
mov
mov
fstps
popa
or
dec
fincstp
fs
mov
inc
inc
mov
mov
leave
push
xor
shll
sub
cmp
adc
xchg
in
adc
and
add
or
fisubrs
shlb
je
and
and
mov
mov
stos
push
adc
mov
ret
cmp
dec
jae
dec
shrb
orb
dec
addb
adc
push
cmp
push
xor
ds
mov
xchg
nop
push
add
mov
pusha
mov
push
std
orb
pop
sahf
and
push
dec
repz
sub
or
or
xchg
add
inc
out
xchg
sbb
inc
rclb
sub
and
scas
pushf
popa
outsl
jne
movsb
add
sbbb
xchg
sub
ja
jecxz
dec
test
dec
inc
mov
in
sub
jb
lods
inc
lods
jno
loop
xchg
adc
movsb
loopne
out
push
mov
or
adc
mov
orb
inc
nop
repz
dec
ficoms
rcrb
add
and
str
and
andl
in
add
pop
inc
xchg
sub
push
mov
or
rorb
ss
xor
jmp
xor
mov
xchg
mov
sbb
mov
clc
cmpsb
or
sbb
inc
fiaddl
inc
push
les
sbb
rcr
loopne
inc
nop
inc
in
xor
in
cmp
in
and
jno
cmpsl
pop
sub
hlt
or
sbb
and
outsb
shlb
jns
xchg
add
sub
or
xchg
int3
inc
gs
adc
push
fisttpl
rclb
push
jmp
enter
xor
pop
dec
nop
and
push
add
pushf
aad
test
in
cmc
mov
or
sbb
adc
xor
push
push
and
pop
inc
aaa
ss
xor
dec
pop
jnp
jnp
jge
and
jb
inc
cmpl
subb
cld
int
pop
adc
test
jbe
test
cmovno
sbb
or
adc
clc
xchg
sbb
push
push
inc
push
int
mul
inc
outsb
outsl
pop
sub
mov
push
xlat
test
fdivr
push
iret
sbb
adc
test
jne
add
or
add
fs
ficoml
prefetcht1
sbb
int
or
mov
adc
sbb
mov
push
add
sbb
or
clc
push
in
cmp
xor
pop
jmp
mov
sarb
push
les
cmp
imul
push
or
sbb
lcall
lcall
mov
cmpsb
imul
cltd
leave
sbb
adc
add
or
testl
call
sbb
push
inc
inc
dec
fs
inc
push
push
push
pop
xchg
and
mov
ret
sbb
jl
les
mov
or
inc
mov
pop
jns
nop
adc
add
movsb
in
rolb
dec
add
add
push
jmp
pusha
sbb
and
leave
add
jo
jae
sbb
loope
test
data16
adc
and
mov
add
xchg
xchg
and
ja
in
dec
push
lahf
sub
popf
cld
dec
push
xchg
mov
xor
push
inc
pop
sub
sbb
xor
or
sbb
test
js
push
jb
imul
add
leave
and
lds
sbb
testl
sub
dec
test
aad
push
inc
repnz
push
push
mov
les
jno
and
mov
push
pop
adc
cmp
inc
jb
xor
mov
out
pop
out
xchg
xchg
push
push
and
mov
sbb
movsb
add
lret
dec
mov
pop
and
bound
ljmp
or
cmp
inc
out
or
aad
or
sbb
cmpsl
adc
push
push
xchg
and
mov
pop
and
mov
add
cmp
imul
fwait
stos
mov
jle
scas
add
sub
out
dec
pop
or
stos
mov
stos
cmp
subb
mov
and
inc
int
cmp
data16
add
cmpsl
add
add
dec
pop
add
add
or
xchg
xchg
pusha
mov
or
dec
rolb
pop
mov
or
fwait
testl
out
or
add
je
js
xchg
push
test
mov
in
popl
xchg
jb
add
leave
pushf
add
call
and
cmp
xor
adc
inc
test
pop
adc
mov
lcall
lods
shll
sbb
mov
add
add
sub
adc
dec
push
add
pop
add
ret
add
out
sub
ja
xchg
imul
add
imul
loope
push
sub
mov
inc
add
dec
cwtl
rcr
mov
add
jae
push
mov
adc
add
orl
inc
lea
add
add
sbb
dec
sub
jbe
popa
jle
add
add
xchg
xlat
jmp
rolb
inc
and
add
in
insb
pop
add
mov
jnp
je
push
mov
es
xchg
and
xchg
fldt
jns
jmp
xor
enter
inc
rorl
add
xor
pop
ja
sbb
cmpl
mov
daa
and
mov
cwtl
fiaddl
and
push
jg
xchg
test
push
adc
or
dec
movsb
and
in
cmp
mov
mov
push
or
cmp
bound
dec
popa
or
pop
cmp
mov
xchg
cmpsl
inc
mov
rcrl
push
repz
pop
and
aam
jo
aaa
push
mov
les
sub
lret
sbb
std
mov
add
pop
jg
add
xchg
xchg
loopne
jb
js
lock
and
or
xor
xchg
add
pop
in
xchg
mov
shll
and
dec
or
mul
or
and
push
add
add
pop
rcrb
jg
test
cwtl
fstps
nop
aas
dec
dec
ss
rcrb
add
aaa
push
inc
cmp
subb
andl
pushf
andl
mov
xlat
inc
xor
orl
andl
sbb
popa
cmpsl
ret
xor
dec
push
or
lods
pop
aas
mov
fisubs
fadds
xchg
ffreep
adcl
lea
es
rclb
mov
jp
mov
mul
mov
push
enter
mov
cwtl
push
les
dec
push
jbe
pop
or
andb
jl
push
inc
cmpsb
xor
cmp
push
shll
test
adc
push
xchg
or
das
mov
pop
sti
dec
adc
adc
xor
or
daa
inc
adc
addr16
sbb
inc
pop
inc
push
in
cmpb
or
inc
mov
mov
sub
ja
fwait
or
pusha
sub
ss
push
or
jbe
test
or
lds
xor
add
in
scas
xchg
inc
xor
clc
lea
fdivs
add
ret
inc
add
imul
fdivrl
push
arpl
inc
pop
shll
xchg
dec
xor
aaa
sbb
jb
gs
xor
mov
enter
xor
pop
ret
sub
and
addb
mov
xchg
dec
je
or
inc
inc
sub
xchg
adc
lods
pop
dec
dec
push
and
dec
push
outsb
inc
dec
or
ficoml
pop
ficoms
sub
jbe
pushf
push
addl
clc
call
out
dec
mov
inc
int
pop
insb
andl
shll
fnstcw
inc
dec
jne
hlt
inc
dec
xchg
sbb
add
jno
mov
pop
je
ljmp
adc
mov
mov
sarl
daa
jp
ret
push
inc
pop
add
xchg
add
sarb
movsb
std
push
xorl
test
fidivrl
andl
aad
sub
pusha
pop
lock
jp
inc
mov
adc
imul
xchg
mov
mov
call
ss
rorl
xor
jecxz
and
adc
jns
sbb
jl
cmpsb
mov
add
add
xor
cli
push
adcb
mov
mov
mov
and
sub
icebp
or
jns
lahf
or
mov
shlb
sub
sbb
rcl
pop
inc
jo
mov
stos
xor
cwtl
xor
sub
dec
pusha
inc
inc
pop
mov
fisttps
rclb
fcom
popa
push
adc
lock
adc
dec
xabort
fsubs
inc
pusha
mov
and
inc
mov
inc
out
fdivs
and
mov
addr16
jo
or
mov
cmp
sbb
out
or
xor
enter
and
sbb
cmp
inc
sub
dec
test
pop
sti
je
sub
mov
jbe
mov
xchg
pop
cmpl
add
xchg
or
or
adc
test
stc
fcoms
mov
and
sub
add
nop
dec
cld
mov
test
mov
sub
dec
lcall
add
or
test
and
add
cmpsb
add
or
and
dec
push
clc
mov
and
add
cmp
dec
adc
xchg
push
ja
mov
dec
add
dec
pushf
mov
rorb
or
mov
or
adc
adc
adc
add
dec
sub
ja
or
loope
xchg
into
jno
test
rolb
fimuls
xchg
add
xor
cmpb
add
mov
push
pop
sbb
inc
ja
arpl
jne
lcall
shrb
loope
sub
xchg
cmp
push
aas
fistl
xor
icebp
ficoms
mov
sbb
or
mov
and
push
and
lahf
push
rolb
lds
mov
push
sbbl
sub
adc
inc
inc
inc
imul
je
and
dec
rcll
ret
cmp
jl
enter
mov
arpl
fadds
dec
loope
xchg
sub
subl
pushf
sbb
insl
push
cmpb
mov
and
add
xchg
mov
sbbl
mov
add
arpl
jno,pn
jne
inc
mov
push
dec
inc
add
mov
sub
pop
cs
xchg
mov
mov
nop
push
sbb
sub
fdivrs
lret
add
sbb
fdivl
mov
or
in
or
cmp
pop
mov
push
xchg
aaa
xchg
and
adc
ret
lcall
and
xor
mov
and
xor
int
cmp
mov
cmovbe
inc
scas
or
push
inc
dec
dec
add
out
add
lds
xlat
or
add
push
es
sarl
sub
testb
and
addr16
lock
fdivrs
enter
sbb
sub
in
out
sbb
or
insl
add
sbb
sbb
add
adc
pop
or
lea
scas
icebp
int3
or
repz
add
subb
xor
sbb
cmpsl
jmp
es
aaa
adc
adcl
adc
xchg
mov
outsb
and
ja
stos
jne
mov
push
pop
push
lods
mov
xchg
adc
mov
leave
sbb
push
add
scas
xor
pop
push
inc
sub
shll
dec
mov
add
push
jno
rorb
xor
das
sub
xchg
ret
addl
mov
push
xchg
fsubrs
pop
push
inc
cmpsl
xchg
cltd
sub
xchg
mov
add
or
add
cmp
je
outsl
push
add
adc
inc
pop
imul
pusha
shld
aam
ret
sbb
push
neg
xchg
and
inc
adc
fcoms
xchg
sbb
and
addb
insl
adc
mov
adc
mov
pushf
inc
mov
fsub
test
cmp
push
add
outsl
pop
push
mov
icebp
cs
ja
fs
and
in
push
mov
push
push
int3
lcall
rolb
sbb
sbb
sub
mov
cmc
xchg
push
shll
push
ljmp
test
rorb
mov
popf
cli
inc
jne
insl
daa
ja
mov
xchg
test
popf
jmp
inc
jns
add
stos
or
or
rolb
fs
xor
loopne
push
inc
lods
pop
test
mov
jmp
cmp
and
mov
mov
add
pushl
in
jne
cmpb
xor
fcmovnu
gs
rcll
mov
dec
xor
sub
mov
lock
js
add
push
jns
pusha
add
adc
inc
pop
sbb
es
scas
sub
and
push
mov
das
dec
push
and
push
add
and
cmp
jae
push
adc
jo
push
xchg
pop
mov
addb
and
mov
add
and
push
mov
lahf
or
and
or
jnp
pavgb
sub
lods
sbb
pop
jge
and
mov
jbe
inc
lcall
xchg
or
xorb
adc
nop
push
imul
addr16
xchg
mov
dec
or
pusha
leave
pop
call
test
roll
or
pop
pop
jp
add
push
or
xchg
test
divb
int
or
imul
xchg
nop
and
inc
pop
subl
dec
pop
es
popa
push
cmp
xchg
mov
shll
mov
out
in
mov
push
sarb
adc
push
add
mov
pop
lcall
pop
inc
fsub
sub
pop
mov
inc
incb
dec
comiss
dec
enter
xor
imulb
andl
inc
test
dec
xchg
mov
or
insb
inc
inc
mov
xor
adc
dec
rcr
cmp
repz
loopne
or
dec
imul
lea
icebp
inc
sub
push
push
lret
push
sbbb
or
mov
or
imul
cmc
ret
adc
mov
je,pt
sub
xchg
jmp
xchg
shlb
xchg
mov
push
add
jno
push
xor
ret
mov
mov
push
enter
add
push
xor
adc
adcl
inc
in
scas
rolb
mov
pop
add
jne
int
or
outsb
jge
or
popa
push
pop
sub
push
std
popa
sub
and
repz
sub
clc
mov
rclb
add
push
leave
pop
jle
xchg
push
outsl
pop
xor
addr16
iret
nop
sub
arpl
mov
fs
push
pushf
or
rcrl
ret
iret
lea
adcb
das
inc
or
jns
or
dec
add
shlb
cmpsb
in
jle
add
repz
scas
mov
pushaw
movsl
divl
xchg
jecxz
mov
pushw
nop
data16
dec
subl
daa
push
mov
int
lds
addb
mov
sub
movsl
ret
push
jp,pn
sti
adc
jge
mov
sti
mov
test
push
lods
pop
jmp
add
cmpsb
xor
pop
inc
aaa
adc
and
add
mov
xchg
cwtl
nop
ficomps
dec
inc
sub
push
shrb
mov
sub
lds
in
sub
popa
and
xchg
dec
data16
push
cmpl
in
movsb
ds
insl
lcall
sbb
and
pop
sahf
sbb
js
adc
mov
and
adc
mov
mov
sub
or
mulps
add
adc
push
xchg
add
popa
lret
pop
arpl
ret
cmc
fs
add
int3
pop
or
cmp
insb
jge
fdivl
shl
cmp
sbb
dec
sbb
xchg
bound
lcall
pop
imul
imul
lret
enter
sbb
loop
repz
cltd
jmp
inc
and
aaa
cmp
into
fs
bound
adc
mov
test
add
lods
nop
xlat
dec
sub
cmp
push
mov
or
in
and
dec
mov
push
insb
mov
int3
hlt
and
jb
push
inc
jb
mov
enter
and
xchg
adc
cmp
les
push
leave
xchg
sbb
cmp
test
xchg
sbb
enter
in
imul
in
mov
pop
mov
rcr
and
jb
insb
sbb
jb
inc
jb
insb
cwtl
xchg
fisttpl
inc
por
hlt
leave
leave
leave
xchg
imul
leave
leave
dec
inc
aas
insb
mov
leave
leave
xor
rcrb
in
push
cwtl
orb
push
enter
fsts
insb
loope
xchg
mov
jo
and
imul
aaa
add
push
comiss
and
add
or
insl
imul
and
xchg
imul
dec
or
cltd
cmpsb
das
jb
loopne
rolb
adc
add
jns
outsl
jo
fldt
add
outsl
adc
pop
je
inc
imul
ja
aas
in
adc
cmp
cmp
nop
xor
mov
sbb
and
fwait
lret
pop
stos
outsb
jae
push
in
cmpsl
sbb
xchg
and
jno
imul
out
and
xor
mov
fs
push
fldcw
jb
inc
and
and
dec
push
ret
ja
psubusw
mov
adc
outsb
or
jg
xchg
pop
inc
hlt
jne
fimull
mov
test
aas
test
dec
dec
push
mov
shlb
dec
cmp
daa
call
popa
outsb
shr
mov
dec
inc
mov
jg
jbe
jo
mov
mov
jne
les
ja
aas
sbb
jo
sbb
inc
mov
repz
gs
cwtl
and
daa
cmp
jecxz
adc
test
add
adc
mov
jmp
xor
int3
mov
ret
and
inc
jmp
inc
fisubs
inc
pop
int3
add
jo
aas
and
sbb
test
push
daa
inc
dec
push
out
or
cmp
mov
or
adc
insl
loope
cmpsb
loope
jne
adc
xor
cmc
into
adc
jne
hlt
mov
hlt
in
mov
sub
xor
push
incl
addb
ds
push
sub
icebp
divl
jb
clc
and
das
inc
push
add
mov
pusha
jne
add
adc
xor
cmpsb
nop
xor
add
pop
pop
or
fiadds
popa
fwait
or
xchg
dec
inc
push
mov
add
adc
or
adc
mov
js
shrl
mov
adc
arpl
insb
push
sub
outsl
and
outsb
pop
frstor
mov
outsl
popw
pop
xor
xor
jecxz
or
aaa
test
decl
pop
mov
test
and
mov
aad
fs
push
lds
sub
or
and
adc
xchg
div
inc
add
push
jb
sub
jo
xchg
push
aad
pop
jb
divb
jmp
xor
and
push
mov
and
daa
adc
sub
jns
add
or
adc
test
push
xchg
cmp
and
dec
int3
jns
and
leave
jnp
icebp
aad
xchg
fadds
push
fmull
mov
call
in
scas
lock
cmc
inc
mov
xchg
lea
enter
inc
in
in
add
jo
movb
enter
fwait
divb
sub
inc
hlt
jo
ss
and
add
leave
jo
int3
in
repnz
xor
jo
sbb
add
movsb
rolb
push
outsl
out
mov
mov
nop
adc
add
jbe
and
in
push
jnp
add
adc
jb,pt
imul
jmp
or
sbb
adc
loope
loopne
inc
movsl
movb
inc
mov
push
fistpl
lea
pushw
jns
in
mov
in
sub
dec
mov
mov
je
pop
xor
sub
pop
lds
mov
jne
dec
adc
cmp
mov
fstl
mov
add
pop
loop
dec
sbb
xorl
popf
faddl
in
addb
inc
loopne
xchg
mov
mov
or
idivb
sbbb
jb
call
add
dec
mov
test
fs
test
and
dec
lds
loopne
or
inc
nop
gs
pop
mov
fcomp
addl
pop
inc
or
or
jne
cmp
jb
jb
adc
in
mov
cmc
push
mov
push
mov
add
mov
adc
sbb
dec
je
add
sbb
loopne
sbb
pop
roll
push
push
mov
stos
mov
and
je
mov
sub
dec
out
push
mov
lods
test
add
add
adc
imul
arpl
enter
adc
testl
push
in
rol
sub
in
or
pop
repnz
in
roll
inc
hlt
adc
mov
xchg
adc
stc
adc
mov
and
in
xchg
test
scas
xor
cmp
mov
adc
pop
push
cs
inc
xlat
arpl
add
and
sub
inc
lret
mov
xchg
mov
rcl
push
mov
cmp
pop
sbb
ja
sarl
repz
cmp
xchg
pop
xor
or
int3
cmp
pop
pop
cmpsl
andb
sbb
xor
pop
int
sbb
push
loopne
ret
pushl
pushl
pusha
rolb
xchg
popa
lods
fdivrl
add
mov
xor
xchg
push
add
orl
xchg
sub
dec
rclb
repnz
fnstcw
test
push
push
and
inc
sub
addb
int3
mov
int3
addl
out
inc
pop
mov
les
mov
popa
daa
mov
orb
rorb
adcl
or
sbb
cmpb
in
mov
stc
enter
ret
cltd
lret
pop
or
nop
mov
add
ds
push
add
mov
sub
cmpsl
add
dec
jle
jp
push
and
and
mov
mov
stos
mov
dec
pop
xchg
mov
lds
xor
sub
lret
jg
popf
xchg
lods
loopne
test
aad
inc
shl
sub
in
les
sbb
or
sub
aam
sahf
or
rolb
inc
jp
loopne
fdivl
das
sarb
add
cmp
and
cvtps2pi
push
imul
imul
rclb
fistpl
ret
clc
rorb
test
adc
pushl
and
push
dec
sub
jl
inc
mov
mov
mov
test
or
insl
fimull
inc
jmp
stos
push
jl
add
jno
add
adc
sub
nop
xorl
mov
stos
mov
and
add
movsb
fnstenv
jo
push
mov
sbb
sbb
or
pushl
xchg
mov
insb
ja
stos
mov
fcmove
cmc
dec
test
xchg
push
lea
ds
or
xchg
adc
adc
rorb
daa
jne
sub
out
or
mov
jl
inc
or
clc
adc
adc
sbb
fwait
imul
lea
test
rol
scas
int3
sbb
lea
xchg
pop
pop
pop
push
data16
in
pop
or
jl
mov
inc
inc
or
test
adc
dec
inc
add
xor
insb
mov
add
or
jmp
outsb
push
adcb
call
adc
and
ret
pop
js
ret
or
rclb
cwtl
sti
shl
pusha
shll
dec
adc
push
xchg
jge
dec
cmp
repz
inc
and
mov
push
cmc
movsb
adc
data16
jl
dec
inc
enter
outsl
outsb
int3
jno
push
rcrb
add
push
adc
jo
arpl
cmpsb
in
dec
or
sub
andl
adc
and
shlb
loopne
and
flds
adc
mov
sub
sarb
or
or
inc
jno
and
in
xor
jmp
das
add
and
fimull
sbb
mov
jl
popa
jle
movsb
adc
or
mov
jg
mov
bound
or
and
pop
pop
push
fs
in
sbb
clc
add
dec
sarl
hlt
data16
nop
hlt
jg
sub
xor
leave
mov
popa
orl
adc
mov
dec
ds
mov
jne
or
stos
adc
mov
enter
mov
mov
rorb
clc
fmull
fsubr
test
mov
movb
dec
cld
lcall
das
mov
sbb
push
add
sarb
in
or
clc
in
sbb
insl
stos
call
mov
rclb
aaa
or
push
mov
xchg
xchg
add
subb
or
sub
xor
or
loope
or
adcb
mov
mov
rclb
sbb
adcl
fwait
rolb
inc
add
test
add
or
dec
das
cmpsb
push
ret
dec
ficompl
push
shlb
iret
js
sub
push
ss
and
lods
ret
pop
pop
xor
cmp
xlat
das
xlat
or
iret
push
add
add
and
in
mull
or
xchg
add
insl
movsb
jle
adc
xor
out
inc
adc
jmp
xchg
mov
test
mov
aam
rcr
push
ja
mov
push
push
jp
jnp
pop
inc
loopne
push
jecxz
dec
addr16
test
jmp
adc
add
mov
pop
lcall
xorl
aad
cs
sub
int
jbe
scas
es
pop
repnz
outsl
jnp
test
jmp
fstps
dec
cmp
mov
adc
cmpsl
or
in
in
test
pop
xor
in
sbb
push
push
sarb
jae
insl
pop
push
cmp
add
shlb
loop
mov
out
test
nop
in
jbe
imul
ja
jbe
adc
sbb
push
movlps
test
and
mov
sbb
add
inc
adc
daa
adc
prefetchnta
mov
push
out
sbb
xchg
insb
lods
pop
push
in
test
dec
inc
push
mov
sbb
inc
dec
add
ss
repz
adc
sbb
and
push
and
cmp
inc
sub
sbb
xor
sbb
pop
pop
push
test
xor
mov
dec
repnz
dec
mov
or
push
pop
ficoms
sbb
sbb
sbb
or
or
and
mov
mov
cmp
cmp
mov
mov
inc
inc
inc
inc
mov
mov
sub
sub
mov
mov
xor
xor
inc
pop
sub
push
imul
xor
clc
inc
pop
enter
dec
das
mov
js
fnstsw
adc
pop
adcl
mov
xor
roll
mov
enter
mov
xchg
aad
fwait
xchg
add
or
jns
pop
aas
notl
adc
pusha
pop
out
or
push
mov
ret
adc
and
mov
jo
pop
add
pusha
jge
and
jae
insb
pop
outsb
in
inc
inc
mov
mov
xor
push
nop
lret
cmpb
inc
div
push
subl
xor
or
mov
jo
mov
shrl
push
loop
shrl
outsl
or
cmpl
nop
rclb
cli
fs
fidivl
adc
ja
xchg
movsb
scas
sub
popa
adc
xchg
add
mov
mull
sub
lock
or
pop
in
fnstcw
pop
mov
jl
cmp
imul
and
jne
xchg
ja
call
pop
loop
sub
pop
or
push
ds
sbb
fs
xchg
dec
jo
outsb
sub
mov
add
leave
xchg
add
int
jae
fs
inc
outsl
faddl
jb
outsl
imul
pop
xor
roll
pop
subl
add
mov
rcr
xor
pop
mov
sbb
rorl
or
add
pop
clc
and
test
xor
push
gs
push
and
and
inc
mov
mov
setge
lahf
add
repz
leave
sbb
and
pop
popa
pop
int3
aad
inc
in
sbb
outsb
xlat
adc
pop
and
call
or
pusha
loop
inc
shlb
test
sub
sub
push
inc
cmp
dec
push
add
rcrb
pop
cmp
dec
pop
push
or
dec
or
in
sbb
jo
or
push
sbb
pushf
cmp
pop
sub
sbb
adc
xchg
adc
mov
or
add
cwtl
lea
xor
xchg
fs
xor
add
jnp
mov
sbb
and
mov
sbb
icebp
ret
movl
xchg
mov
sbb
dec
sub
push
sbb
mov
push
movb
xlat
aam
jp
pusha
sub
cltd
adc
or
add
inc
sub
pop
cs
pop
xor
pop
sub
jmp
icebp
and
and
orl
popa
das
xor
and
rol
push
inc
das
test
cmp
cltd
stos
add
cwtl
insl
loop
daa
cmove
sbb
js
sbb
pop
push
jo
je
jno
fwait
pop
shrb
or
sub
mov
push
mov
movsb
das
std
insl
insb
or
xchg
sbb
cld
mov
inc
nop
mov
adc
add
popa
push
dec
xchg
in
cmp
pop
or
xor
jne
popa
daa
pop
dec
call
enter
mov
dec
mov
xor
mov
or
pop
push
add
jle
add
outsb
mull
xor
test
xchg
ds
mov
sbb
or
pop
rorb
inc
sub
or
mov
cmp
xlat
jge
adc
mov
add
mov
and
push
in
stc
test
or
push
mov
push
add
or
mov
fcomps
sub
das
xor
pop
cmpb
or
sbb
or
xchg
outsl
int
mov
inc
cmp
arpl
or
cld
xchg
sub
adc
arpl
ficoml
jno
insl
pop
or
pop
push
pushl
or
xchg
push
mov
push
mov
sub
xor
add
xor
bound
push
out
fadds
fcom
shlb
cmpsl
xchg
cmpsb
int3
enter
inc
adc
adc
cmp
adc
cltd
fld
jo
sbb
dec
dec
and
add
lahf
test
mov
mov
adc
jb
sbb
sub
dec
sbb
sbb
mov
cwtl
push
and
and
sbb
je
jmp
lcall
add
sub
add
push
test
cmp
xor
mov
enter
cmp
xchg
cmc
cmpb
jae
cmc
add
mov
fwait
lds
mulb
dec
out
popf
xor
movsb
movsb
adc
dec
adc
jae
xor
pop
add
enter
fsubl
jb
pushf
hlt
pushf
fldenv
pop
sbb
jg
imul
mov
cmp
jg
mov
xchg
pop
xchg
and
add
xchg
mov
cwtl
jae
dec
enter
jmp
lea
mov
mov
enter
sub
or
fs
mov
inc
push
in
sbbb
fcoms
test
rcr
test
or
or
cmp
andb
mov
mov
js
aad
pop
mov
xchg
xor
lea
mov
xor
mov
fidivl
je
inc
inc
jnp
ret
pop
bound
jecxz
xorb
enter
es
jo
ret
stos
xchg
pop
jo
je
xchg
sbb
jnp
loopne
paddusb
pop
fstps
adc
enter
add
stos
add
sbb
lret
push
adc
push
adc
jo
int
sbb
xchg
aaa
push
rcrl
pop
nop
inc
inc
cs
pusha
loopne
loopne
fs
sbb
sbb
mov
mov
sub
imul
adc
aam
xchg
cli
mov
sbb
outsl
aam
push
sub
sbb
jp
es
popa
pop
push
and
cmp
loopne
sbb
loope
xchg
lea
push
pop
cmp
inc
popa
dec
fdivrs
test
mov
ret
xchg
pop
repnz
dec
add
inc
fimuls
inc
inc
and
je
cmp
add
inc
ret
and
add
rorb
and
inc
mov
in
fsubr
sbb
fadds
sbb
sub
or
mov
movsl
cltd
outsb
xchg
mov
out
and
test
mov
lea
mov
or
xchg
sbb
sub
loope
lahf
xor
cwtl
dec
sub
sub
mov
das
shll
pop
sbb
sub
andl
inc
inc
or
pop
pop
and
mov
cmp
pop
je
dec
popa
ss
scas
add
sbb
jge
dec
leave
adc
push
insb
pop
lret
test
mov
and
nop
push
mov
adc
arpl
or
mov
insb
iret
xor
mov
ret
sbb
and
in
test
movswl
daa
or
add
xor
push
xor
xor
rol
push
jmp
cmp
out
sub
mov
adc
sbb
cmpsl
sbb
sub
mov
pop
pusha
imul
aam
mov
mov
lret
stos
push
jne
pushf
inc
and
je
push
call
sub
sbb
mov
fcomps
add
mov
sbb
or
ror
test
push
sub
out
cmp
jmp
cmp
gs
xor
rorb
sbb
or
jmp
mov
orb
mov
mov
jmp
add
sub
mov
lds
pushf
mov
pop
ss
insb
sahf
xor
pop
xchg
pop
add
orl
xchg
inc
mov
loopne
sbb
mov
cmp
test
sbb
test
and
push
dec
insb
lods
insb
test
and
addl
sub
sbb
xchg
xchg
adc
movsb
stc
mov
cmp
and
push
in
sub
in
cmp
sbb
push
xchg
sbb
mov
ret
jmp
sub
xchg
or
add
and
subl
mov
bound
pop
aad
xchg
sahf
mov
mov
cmp
mov
aaa
xchg
rclb
xorl
mov
xchg
mov
int3
rclb
repnz
sub
add
adc
sbb
and
lock
lret
adc
jmp
scas
mov
sbb
int3
or
mov
sarb
sbb
adc
and
xchg
mov
orl
fistps
sub
imul
lea
inc
and
roll
es
cli
or
inc
lock
or
sbb
insl
sub
loop
jne
sbb
add
push
lods
dec
aaa
push
xor
cmp
cltd
imul
stos
pop
or
mov
bound
jae
pop
dec
mov
sub
add
add
outsl
mov
sub
lock
cmp
in
adc
and
stos
dec
adc
jnp
xchg
pop
dec
inc
mov
sbb
pushl
sti
push
and
dec
das
sub
stos
test
and
or
push
scas
scas
test
addr16
paddsb
inc
push
inc
add
dec
cmp
add
pop
push
inc
sub
inc
dec
push
inc
inc
push
sub
dec
cmp
push
dec
dec
inc
inc
ja
lock
mov
dec
pop
pop
sub
pop
movsl
lea
iret
inc
dec
dec
ret
pusha
mov
loopne
jg
inc
jo
xor
sbbb
mov
mov
adc
jno
insl
sub
arpl
cmp
mov
pop
adc
jo
xchg
rcrb
mov
clc
inc
sbb
xchg
orl
outsb
jbe
out
mov
pop
jae
arpl
add
shlb
sbb
pop
add
or
xor
xchg
je
jne
or
movsb
sbb
adc
hlt
lock
sahf
pop
push
cmp
sub
inc
xchg
in
lock
add
or
jg
mov
push
xor
sahf
push
inc
mov
leave
movsb
or
stos
mov
mov
and
shrl
sub
shll
sub
jecxz
lock
lods
cli
or
repnz
jbe
icebp
movsl
jo
jns
push
inc
cmp
in
add
or
pop
ret
nop
mov
stos
js
fmuls
pop
fsubrs
inc
fidivs
hlt
ja
mov
jae
fs
mov
add
cs
cld
ss
stc
test
sub
rol
sbb
dec
dec
imul
iret
cmp
jecxz
cmp
movsl
lds
bswap
pushf
sbb
inc
and
in
fiaddl
cmpsl
add
adc
mov
out
mov
mov
int3
mov
adc
xor
inc
shr
testl
and
add
add
ds
add
pop
and
push
std
addr16
lea
inc
ret
mov
xor
adc
sbb
stos
xchg
mov
sub
inc
jb
ret
outsb
xor
pop
pusha
and
jne
roll
or
fnsave
cmpsl
xchg
gs
cmp
int3
imul
push
stc
mov
or
inc
push
sbb
ds
je
js
fadds
arpl
insb
adc
hlt
aaa
leave
dec
push
add
and
xchg
imul
movsl
inc
push
adc
rcrb
and
sub
lcall
push
inc
loopne
mov
dec
cld
test
rorl
jae
mov
add
inc
sti
or
test
mov
adc
loopne
pop
xchg
shrb
and
jne
outsb
and
das
outsl
and
ucomiss
in
incb
and
aas
jno
ret
inc
es
or
incl
pop
outsl
je
jne
and
pop
arpl
dec
movsl
mov
stc
gs
pop
ljmp
fs
insb
insb
cmp
aas
pop
mov
mov
imul
fisubrl
and
insb
dec
and
lahf
push
or
and
dec
insl
arpl
sbb
js
das
lea
push
or
push
out
pusha
add
js
and
cltd
cmpb
push
je
or
or
pop
imul
jno
ja
jb
jns
pop
and
cmpb
add
push
xor
aad
test
lods
fsubrs
pop
fnstcw
xchg
cli
cmp
push
leave
or
adc
out
xor
dec
sti
filds
test
and
inc
cmpb
jne
and
xchg
add
and
push
lods
xchg
or
inc
insb
mov
out
test
les
dec
in
lea
adc
cwtl
sbb
pop
shlb
xchg
in
add
pop
out
or
jmp
cmc
jmp
insb
or
and
adc
jo
add
lods
cmpsb
xlat
test
pop
jne
pop
and
lods
inc
rcrl
shlb
sbb
mov
cld
or
adc
jmp
jbe
loopne
cli
pop
ja
jo
or
std
lods
mov
cli
xchg
test
cmp
rcr
imul
sub
xor
lret
inc
or
mov
jmp
xchg
inc
mov
lea
jne
rcl
adc
imul
incl
push
xchg
jo
and
lahf
leave
and
lods
jmp
ret
and
lock
jmp
inc
inc
xor
aaa
ss
sub
incl
inc
sub
sub
sub
xor
inc
cmp
inc
jge
push
cmpsl
lcall
arpl
xchg
sbb
repnz
push
add
pop
adc
fsubrs
sub
add
pop
lcall
dec
push
hlt
lock
xchg
ja
cmp
in
mov
popa
scas
adc
test
xchg
addr16
push
enter
es
xor
push
push
and
repnz
or
adc
add
sbb
inc
inc
insl
es
mov
out
dec
mov
and
test
push
mov
adc
js
mov
add
sbb
dec
fistpl
imul
in
arpl
cmpb
lret
rorl
loopne
dec
inc
jns
sgdtl
or
mov
daa
mov
in
popa
or
mov
test
test
pop
pop
adc
setns
sbb
push
cmpsl
in
jb
shll
enter
mov
rolb
pop
jno
jb
fnstenv
push
andl
inc
mov
and
or
xchg
xchg
aaa
repnz
mov
add
gs
mov
enter
movb
in
cld
jno
gs
add
mov
shrb
shlb
add
mov
cmp
int3
adc
push
adc
pushf
mov
nop
inc
push
mov
mov
xchg
add
mov
xchg
addr16
inc
jle
fcmovb
sub
dec
insl
testb
cmp
mov
fdiv
lods
and
pop
rcll
test
mov
xor
sarb
xorl
or
pop
push
add
inc
gs
das
jns
scas
imul
push
push
push
pop
add
add
mov
mov
shlb
mov
es
dec
shlb
arpl
inc
cmpsl
leave
ret
cld
push
clc
push
dec
inc
push
mov
lods
lcall
fdivs
adc
pop
sbb
add
and
fpatan
and
xor
dec
add
faddl
inc
fmuls
cmpl
aam
orb
aam
push
mov
enter
or
inc
sbb
adc
push
jo
lods
push
test
mov
jae
hlt
add
nop
or
cwtl
popa
sbb
mov
adc
mov
outsl
incl
outsb
gs
jo
mov
arpl
add
insl
insl
sub
leave
dec
fs
dec
test
int3
jp
scas
mov
push
adc
test
sbb
mov
inc
cld
in
mov
mov
inc
inc
mov
mov
mov
xor
mov
call
and
lds
insb
in
push
jle
shlb
in
mov
mov
nop
push
or
mov
cli
or
fisttpll
xchg
mov
pusha
in
mov
mov
and
inc
popa
mov
mov
lea
sbb
in
mov
sbb
rolb
jle
rorl
xchg
fstpl
cmp
test
xor
ret
lods
loopne
mov
jnp
pop
lea
fsubl
test
push
fdiv
fmull
enter
add
dec
enter
pop
adc
add
les
sub
cmp
les
bswap
test
mov
and
mov
enter
pop
mov
or
cmc
or
adc
in
sbb
pop
inc
adc
or
or
and
int
ret
lret
add
add
inc
lods
lods
in
or
mov
pop
leave
test
sbb
lea
or
nop
movsb
movsb
sub
fs
pop
scas
in
pop
pushf
xchg
sub
cwtl
dec
cs
cwtl
push
xor
gs
pop
push
lea
bound
or
pop
repnz
mov
jb
mov
xorb
and
daa
pop
loopne
in
inc
fsubrl
adc
enter
xchg
pop
sbb
fs
or
fwait
jl
call
int3
leave
xchg
sub
js
jns,pn
enter
jo
jo
sub
pusha
insb
test
insb
jg
xchg
or
jb
push
enter
jb
dec
leave
fs
leave
pusha
pusha
je
nop
sub
jo
pop
xor
jne
popf
mov
and
xchg
in
pop
or
jne
sbb
inc
sbb
and
add
and
and
mov
and
jp
add
iret
or
push
jp
jp
or
lcall
inc
je
jo
cmp
inc
dec
jnp
adc
jne
das
xor
and
add
add
bound
xor
add
cmpsl
or
jg
xor
pushl
aas
jae
and
jb
arpl
fs
cld
es
jae
fs
je
ja
popa
aas
enter
arpl
imul
and
inc
mov
mov
inc
adc
sbb
inc
arpl
push
or
fisttpll
cmpsb
das
xor
ja
xor
repnz
scas
aaa
xor
adc
xor
bound
and
fists
clc
sarb
pusha
dec
sbb
or
rcll
cmp
mov
stos
insb
inc
jle
push
rclb
push
and
push
nop
inc
xor
es
adc
sub
jnp
inc
fmull
and
sbb
xchg
cmp
mov
popa
add
mov
inc
pop
inc
loopne
inc
dec
add
jg
sub
or
cwtl
push
and
sarb
nop
sets
xchg
or
mov
add
jns
inc
in
lock
jg
pop
sbb
lods
dec
jb
mov
push
dec
pop
dec
and
sbb
call
dec
and
dec
inc
and
mov
push
sub
scas
int
mov
jg
add
roll
ss
lock
into
adc
cli
cmp
shl
pop
ret
out
xchg
test
mov
adc
sti
and
adc
into
jmp
dec
pop
xor
imul
rorl
test
mov
icebp
push
iret
movsb
jnp
jno
sub
lcall
xor
xor
rorb
dec
iret
jb
pop
jmp
or
movl
js
xor
ret
push
repnz
stos
xor
ret
shrb
cmp
pop
ret
push
pop
jo
daa
sbb
ret
loop
add
sub
and
adc
mov
push
popa
pop
push
jb
imul
arpl
mull
dec
or
cmpb
addr16
movsb
jmp
sarb
mov
xor
lock
stos
in
pop
jg
push
ret
pop
sub
in
sbb
in
in
daa
add
cmp
sbb
jns
loopne
add
fcompl
test
outsl
aad
lret
lret
cs
lret
or
mov
cld
rcrl
push
sbb
xor
rolb
or
movsb
xchg
push
out
pop
inc
or
jne
outsl
ja
inc
or
adc
rcrb
stos
insb
insb
and
dec
inc
sbb
or
inc
fisttpll
test
sbb
in
or
jae
out
or
jb
bound
loop
pop
dec
icebp
into
hlt
jo
dec
gs
push
pop
in
jmp
mov
xor
je
sbb
aam
fwait
mull
dec
sbb
add
out
bound
pop
shrb
xchg
pushf
loope
fdivs
pop
ss
pop
or
enter
ja
mov
in
xchg
in
inc
and
aam
daa
movsl
arpl
jo,pt
mov
mov
icebp
pop
add
enter
jns
enter
mov
insl
lahf
les
subl
enter
enter
xor
mov
inc
fs
inc
sahf
mov
jp
jmp
push
add
or
and
adc
sub
mov
push
mov
jb
mov
jg
aas
scas
inc
and
inc
and
and
push
and
cmpsl
and
js
pop
arpl
lods
imul
add
loop
dec
push
jae
mov
gs
outsb
xchg
or
cmp
sub
in
push
dec
dec
push
or
cmp
imulb
jne
outsb
xor
lcall
lods
and
scas
jl
das
push
outsl
and
xor
and
push
ficoml
dec
je
jne
mov
xchg
fimuls
cs
bound
pop
scas
sar
or
leave
push
xor
loopne
imul
leave
je
pop
nop
xchg
dec
lcall
mov
in
rclb
in
and
and
loope
dec
push
sub
inc
mov
aad
xor
mov
leave
test
add
mov
pop
jae
pop
das
rorl
xor
leave
int3
xor
cmp
inc
fiadds
lock
cmpsb
sub
dec
fwait
ret
push
test
int3
jl
xchg
sbb
xor
pop
cmp
bound
test
nop
dec
push
loopne
fcoml
in
cs
pushf
and
xlat
fcom
and
shrb
shrb
int3
enter
in
enter
dec
jae
ror
enter
hlt
sarb
fdivrl
mov
fs
cmpsl
mov
mov
fwait
out
or
pop
xor
test
imul
xchg
movsb
movsb
mov
xchg
mov
popf
cmp
cmp
sbb
sub
sub
test
imul
imul
outsb
mov
lahf
mul
jb
jns
inc
push
pop
sti
mov
lahf
pop
lods
add
jg
outsl
jb
popa
frstor
pop
test
outsl
outsl
or
mov
and
or
pop
mov
imul
lret
mov
in
and
and
or
cmpb
and
xor
add
xchg
inc
mov
cmp
xchg
dec
lcall
mov
in
fdivs
dec
fcomps
cmpb
and
dec
ror
and
test
addr16
sub
inc
and
push
xchg
mov
dec
pop
jge
jae
sub
cmp
in
jge
add
jns
xor
aad
pop
jge
xchg
nop
or
in
push
lock
enter
js
aam
test
rcll
lods
mov
aam
clc
jge
out
inc
xchg
pushf
pushf
in
inc
sahf
cwtl
cld
cwtl
cwtl
jae
and
aad
xchg
xchg
leave
and
cmp
nop
nop
int
orl
mov
jl
mov
xchg
sahf
subb
lcall
popa
addl
js
add
scas
dec
call
push
adc
fwait
add
es
jo
sbb
enter
clc
jo
enter
insb
insb
enter
push
xchg
dec
push
daa
adc
jb
adc
pusha
pusha
test
leave
test
pop
pop
orl
and
and
jns
xor
add
add
and
push
or
imulb
sub
inc
andb
call
stos
xchg
loope
iret
inc
and
imul
enter
and
and
and
jmp
sbb
aaa
push
insl
and
inc
in
ds
mov
aaa
arpl
xor
pop
into
insb
and
and
fisttpl
ss
pop
sub
sub
pop
adc
in
xor
rolb
hlt
xchg
fs
jns
jle
jae
push
data16
testw
push
mov
sbb
jne
pop
dec
mov
inc
inc
xor
inc
pop
addr16
or
cmpsl
inc
and
inc
je
push
ja
pop
and
lods
xor
ret
xchg
outsl
add
xor
call
inc
dec
cmpsl
inc
insb
cmp
addr16
inc
jns
xchg
sub
outsb
inc
imul
xor
cmp
test
outsb
inc
or
aaa
push
or
xor
lock
xor
stos
outsb
xor
jns
sbb
imul
xor
sarb
or
inc
sub
xlat
jae
ds
mov
addr16
or
outsb
mov
mov
pop
xlat
cmp
pop
sub
fnstenv
pop
adc
inc
xchg
data16
arpl
bound
inc
pop
addl
and
out
cmp
je
inc
bound
pop
loop
mov
ja
into
insb
loop
or
ss
aaa
inc
int
xchg
sbb
jns
add
and
loopne
in
xor
inc
jns
outsl
push
or
sbbb
out
fisubrs
into
adc
imul
and
inc
and
out
jecxz
sub
xor
fdivrs
mov
outsl
and
xor
dec
inc
jecxz
mov
imul
dec
adc
fadds
push
sbb
xchg
test
jnp
movsl
mov
mov
or
mov
xor
cmpb
shlb
fisubs
xor
insl
leave
test
dec
adc
mov
xor
push
jns
xchg
inc
pop
pop
push
adc
mov
in
outsl
xor
push
add
call
xor
add
shlb
xchg
dec
lods
add
bound
mov
sub
hlt
fbld
cmp
adc
dec
mov
add
and
mov
pop
in
or
fnstenvs
mov
hlt
lock
in
sbb
adc
or
lock
and
lea
push
scas
lock
sarb
mov
insb
gs
pusha
jmp
fs
dec
push
in
inc
inc
jle
fistl
push
nop
mov
sub
and
dec
fistl
and
ret
outsl
pop
insb
faddl
insl
cmp
aam
cmp
fsubl
iret
jnp
and
int3
push
loop
nop
loope
fucomi
leave
aam
inc
movsl
sar
push
jns
pushf
cld
fmull
cltd
in
dec
clc
clc
clc
sbb
cmp
hlt
loopne
sar
xor
sbb
into
roll
push
pop
leave
loopne
push
ffree
dec
push
adc
stos
dec
xor
scas
pop
push
or
insl
mov
sbb
sub
pop
push
sbb
lock
jg
inc
ret
in
insl
add
add
ja
push
leave
fidivrs
dec
ficomps
in
sub
test
sti
cmp
test
add
mov
cs
sub
fs
lds
js
insb
mov
or
addb
outsl
aas
data16
stc
jnp
adc
add
xlat
mov
xorl
adc
loopne
arpl
mov
les
iret
and
ret
stc
mov
xor
inc
out
cmp
dec
mov
pop
dec
dec
and
lods
adc
ret
call
or
loopne
pop
in
adc
xor
nop
imul
push
fmull
dec
mov
mov
loopne
adc
cmp
adc
std
mov
mov
or
cmp
push
popf
insb
dec
outsl
bound
stos
pop
iret
push
test
adc
out
loop
and
xchg
add
sbb
add
ficoml
jne
or
data16
call
rorl
enter
jns
in
pop
imul
fwait
sti
fdivl
aam
cmp
insb
cwtl
sbb
adc
fcomp
cmp
out
or
or
push
inc
dec
out
adc
lahf
imul
jns
jcxz
add
je
in
lock
mov
push
xchg
in
imul
pop
lods
cmp
adc
filds
xor
scas
jecxz
jecxz
es
push
jb
or
mov
pop
and
ljmp
and
hlt
fldcw
sub
push
mov
pop
lret
cmp
hlt
in
cltd
in
repnz
mov
lods
xchg
in
sbb
and
in
hlt
or
in
in
loope
test
mov
test
cmpsb
push
cmp
sub
stc
out
push
insb
popa
faddl
xor
call
bound
or
pop
and
adc
fcomps
or
out
pop
aam
inc
rclb
aam
data16
cmc
out
rcl
cmpb
jmp
dec
addr16
cmp
inc
popf
inc
dec
popa
inc
pop
popa
mov
imul
adc
in
and
cmp
loop
pop
movsb
pop
xchg
out
inc
xorb
pop
aam
and
inc
mulb
leave
or
jg
mov
mov
imul
int
push
pop
iret
jl
sbbl
push
or
sub
lock
imul
enter
call
lods
movsb
add
pusha
lret
xor
adc
subb
fisubrs
clc
cltd
movsb
loope
gs
clc
mov
sbb
inc
lods
inc
and
pop
and
cmp
sbb
mov
je
in
cmpsb
sub
call
aas
jne
push
out
push
stos
stos
jbe
inc
imul
scas
jno
sub
es
dec
push
test
and
push
cmp
mov
or
in
daa
cmp
in
in
push
scas
fldl2e
xchg
in
xor
ljmp
leave
add
mov
jb
ljmp
mov
clc
and
popa
aad
popa
lahf
jge
xorb
insl
and
fdivr
and
inc
insb
jno
les
and
leave
add
pop
push
pop
leave
dec
push
in
push
and
call
in
pop
in
push
fstps
pushf
loopne
pop
jne
in
mov
cmp
enter
cmp
fsubr
popa
push
sub
enter
es
je
in
fidivl
pop
outsl
inc
arpl
xchg
xchg
or
or
mov
and
jns
out
inc
out
push
push
cmp
push
out
pusha
out
mov
out
mov
xchg
iret
in
and
icebp
dec
popa
sbbb
jno
bound
mov
jge
outsl
cs
outsl
sub
in
jo
js
push
inc
xchg
out
or
or
movsl
sti
dec
xchg
gs
das
decb
sub
cs
xlat
sub
inc
mov
shr
adc
pusha
lea
psubb
sbb
add
lock
mov
xchg
inc
hlt
dec
loope
inc
sbb
sbb
and
lock
push
and
mov
sub
dec
outsl
sub
cmp
push
insl
je
or
add
xlat
adc
or
loopne
jb
sbb
in
pushf
push
push
das
jns
mov
icebp
push
icebp
je
and
icebp
mov
mov
icebp
mov
xor
xchg
xchg
movsl
adc
xchg
dec
lahf
ja
daa
xor
into
cmpsl
movsb
pop
dec
data16
orl
or
out
pop
adc
pop
pop
dec
push
in
push
sbb
test
cmpsb
in
lcall
testl
ret
test
xchg
xor
mov
dec
dec
insl
mov
sub
pop
lea
aaa
jmp
call
xor
lahf
fmuls
mov
cmp
sbb
int3
inc
and
int
hlt
hlt
aaa
sub
xor
shrb
repnz
outsl
in
sti
idivl
enter
xor
dec
and
jmp
mov
xchg
rol
cmp
push
jns
enter
cld
addr16
insb
xchg
int3
cmpsl
insl
add
sub
xchg
and
fsub
mov
inc
mov
xchg
sbb
mul
int
fwait
call
pop
call
push
in
adc
sbb
movb
mov
aaa
fsubl
addr16
sbb
add
insl
cmp
jnp
aam
inc
aaa
push
sub
in
sbb
add
inc
pop
or
ftst
and
sbb
cmpsl
in
xchg
aad
fsubrl
nop
cwtl
cwtl
cwtl
pop
add
nop
pushf
pushf
adcl
sti
test
leave
mov
lea
cmpsb
xchg
dec
enter
mov
and
enter
and
test
fiadds
dec
icebp
movsb
mov
mov
lock
je
mov
xor
pushf
jo
je
xor
inc
icebp
adc
push
push
adc
insb
cs
fs
or
pusha
mov
pop
sub
pop
fld
xor
orl
dec
push
dec
fbld
imul
pop
adc
popa
rcrl
movsl
pop
ud1
add
dec
shlb
mov
push
insl
mov
xchg
pop
orl
or
pop
dec
aas
dec
inc
sbb
sbb
sbb
stos
xor
popa
mov
push
add
cld
adc
inc
or
push
jge
pushw
add
add
or
cmp
cmpsb
test
sub
push
cmpl
lods
test
pop
arpl
mov
loope
aad
aas
movsl
xlat
sti
arpl
xor
jge
insl
dec
popa
inc
dec
iret
mull
outsb
and
mov
cmp
and
gs
pop
gs
add
orb
movsb
sahf
ss
aad
jns
fs
loopne
enter
loopne
decb
adc
call
test
nop
or
aam
repnz
inc
enter
dec
repnz
int3
rcl
incl
inc
mov
and
mov
jb
enter
or
das
in
aad
call
or
cmp
dec
jmp
mov
dec
enter
sub
or
es
movsb
movsb
stc
dec
pop
bnd
pop
ljmp
test
pushf
mov
mov
enter
aad
orb
repnz
cwtl
cwtl
add
cmp
decl
mov
jbe
mov
test
push
adc
popf
mov
and
aad
nop
add
js
je
cmp
insb
dec
cs
aad
and
jb
adc
pop
xor
fs
xor
aad
jp
in
pop
es
hlt
popf
jne
cmp
cmp
push
and
test
cld
xchg
daa
jo
push
or
or
shrb
add
popa
pop
jnp
mov
pop
enter
enter
and
dec
aam
movsb
es
dec
loopne
dec
push
roll
add
xchg
cmpsl
frstor
xchg
es
adc
push
inc
out
push
orl
movsb
ret
cmpb
cs
lods
inc
mov
xor
add
sub
loope
lock
mov
shlb
or
jp
or
gs
and
and
add
fdivrs
leave
mov
sub
aas
divb
dec
pushl
add
or
lret
mov
add
adc
add
lcall
mov
adc
mov
jmp
or
xor
adc
or
add
aas
cmpb
add
test
push
lods
and
mov
inc
push
and
fidivs
add
aam
test
jno
mov
mov
fs
popa
test
pop
in
sarl
pop
or
add
loopne
fisttps
test
inc
mov
aam
dec
into
pushf
jl
dec
and
sahf
inc
push
ljmp
fs
aam
add
and
sbb
fdivr
repnz
xchg
add
add
sub
test
cmp
enter
cmp
xor
enter
call
xor
sbb
inc
push
and
cmp
fidivs
and
ror
and
adc
or
sbb
sbb
or
jno
adc
adcb
xor
mov
xchg
mov
andl
dec
mov
xchg
and
cmp
aad
pop
add
xchg
mov
or
xor
and
nop
and
add
add
cmp
add
add
or
leave
add
iretw
add
clc
hlt
or
les
inc
cmp
pop
gs
movb
mov
inc
loopne
inc
pop
and
nop
inc
cld
decb
popa
inc
enter
popa
sar
iret
test
fdivs
fdivr
dec
ficoms
cli
test
inc
adc
inc
and
nop
pusha
push
lods
rol
mov
dec
in
daa
xchg
xor
les
dec
and
inc
outsl
adc
or
and
repz
shlb
mov
sbb
cmpxchg
xchg
xchg
or
fildl
jle
call
mov
inc
test
xchg
xchg
or
cltd
js
sub
jo
mov
repnz
fxch
movsb
mov
les
or
or
mov
and
add
loopne
xor
add
adc
fwait
mov
rol
test
mov
and
mov
ret
jb
and
int3
js
xor
and
xor
clc
mov
mov
inc
push
je
insb
push
int3
add
cmp
pop
in
mov
clc
fldl
mov
divl
hlt
mov
lock
cmpsl
sbb
mov
mov
add
adc
push
pop
xchg
aam
jecxz
push
mov
add
lods
add
jb
adc
repnz
incl
inc
xchg
dec
push
jo
mov
cmp
ficoml
incl
sbb
mov
fnstenv
jb
filds
mov
push
xor
push
xor
insl
test
int
aaa
inc
aaa
jno
add
je
dec
inc
push
xchg
inc
sub
sbb
inc
pop
cmp
aas
and
fstpt
add
inc
es
pop
rorb
or
gs
jp
inc
idivl
pop
inc
out
adc
and
inc
add
addb
adc
pop
js
dec
rorb
aam
adc
rorl
aaa
add
pop
inc
mov
outsb
sbb
mov
lcall
jb
aas
lahf
mov
add
or
or
lret
cmp
mov
sbb
rcrb
filds
test
mov
stc
fcomip
add
push
cmp
pop
or
in
jecxz
lret
test
in
in
pop
movsb
mov
setg
push
lds
xchg
faddl
xchg
andb
add
or
sahf
fdivrl
aam
pop
js
mov
mov
or
add
popa
and
mov
push
mov
mov
push
data16
je
inc
dec
push
cs
mov
jecxz
imul
mov
ja
cmp
mov
lock
loopne
jb
js
push
iret
repz
pop
pop
dec
lock
repz
push
push
dec
dec
call
int
cmp
mov
mov
loopne
inc
mov
inc
adc
push
repnz
insb
add
scas
and
mov
mov
insb
in
xchg
incb
ljmp
xor
xor
fsubrl
and
inc
fcoms
jmp
repnz
enter
stos
and
xor
loopne
push
aas
sbb
xorb
sbb
int3
fdivs
sbb
sub
sbb
or
or
adc
jmp
xor
enter
pop
fs
mov
add
ds
push
es
sub
push
aam
je
jb
dec
adc
loop
push
aam
les
mov
mov
adc
out
jns
and
out
ljmp
adc
push
and
lcall
ljmp
cmp
pop
xor
jbe
sbb
jo
je
xorb
xchg
test
mov
and
pop
repnz
test
aam
dec
es
xchg
mov
pop
adc
add
inc
test
or
lods
das
dec
push
push
inc
div
jl
push
jg
and
inc
and
inc
sub
inc
inc
jg
add
sub
inc
pop
shr
loop
roll
cmp
or
popa
mov
inc
or
adc
mov
pusha
and
or
xchg
push
pop
bound
clc
lret
mov
inc
or
imul
loop
push
sub
push
add
lods
sbb
das
sbb
stc
leave
jo
lea
mov
adcb
stos
in
xor
addl
fdivrl
sub
mov
add
scas
pop
jle
nop
sub
sahf
out
je
insb
push
or
and
pop
inc
add
pop
xchg
pop
enter
sbb
nop
dec
dec
es
inc
es
push
push
push
and
les
loopne
dec
cmp
add
dec
imul
mov
add
pop
sbb
aam
jb
rolb
and
repz
cmp
xchg
cmp
jae
sub
and
in
ret
inc
jmp
repnz
mov
sbb
sbb
sbb
inc
mov
and
sub
stos
cmc
sbb
jecxz
fmul
das
bound
daa
int3
mov
in
xor
in
decl
bound
in
xchg
sub
adc
mov
jb
pop
leave
jl
or
and
xchg
pop
add
add
mov
add
adc
leave
jno
mov
and
test
lock
push
and
pop
add
lds
and
mov
fcom
fcoml
pop
loopne
push
xchg
mov
ljmp
sbb
dec
push
xorb
jbe
jge
rcrb
inc
inc
insl
cmp
movsb
add
enter
xchg
imul
int3
push
enter
add
and
or
enter
insb
push
pop
je
or
mov
sbb
adc
mov
push
cs
mov
add
rorl
dec
add
add
add
push
mov
lods
outsb
xor
or
test
nop
pop
pusha
add
aad
ret
stos
inc
mov
movsl
jmp
xchg
adc
repz
call
pop
pop
fst
cmp
mov
cs
fdivs
dec
or
sbb
push
add
adc
sbbl
and
pop
or
inc
es
sub
nop
push
test
mov
enter
mov
and
lea
and
inc
mov
push
pop
inc
lahf
mov
imul
pushf
ljmp
xchg
sbb
push
pop
and
in
and
loop
leave
or
lods
sub
inc
call
test
xchg
add
sub
or
and
sbb
sbb
or
pop
cmp
adc
popf
pop
nop
pop
enter
and
daa
das
and
push
push
xchg
addr16
dec
ss
push
pop
sub
fs
sub
leave
and
sub
add
and
or
push
lahf
jle
bound
pop
cmp
movl
repnz
jg
add
or
add
xor
lock
sub
leave
xchg
loopne
mov
es
mov
test
add
push
xchg
test
orb
add
leave
xchg
add
sub
add
enter
xor
push
dec
pushf
sbb
pop
lock
lock
repnz
repnz
hlt
clc
clc
repnz
loop
sub
add
call
psubusb
pop
sarb
push
fsubrs
sub
cmp
enter
enter
sbb
dec
and
test
xchg
mov
fs
sarb
mov
enter
mov
mov
add
pusha
leave
test
mov
repnz
aas
mov
test
popf
add
nop
pop
xor
lock
or
dec
mov
xchg
popa
and
push
pop
add
add
add
and
sub
inc
add
dec
push
add
push
inc
dec
or
call
inc
je
inc
mov
test
and
inc
push
dec
push
xchg
add
sub
sub
xor
pop
or
ret
push
cmp
sub
addr16
cmp
cmp
push
push
lret
aaa
es
shrb
xchg
shlb
or
pop
or
xor
fstpt
push
adc
inc
das
mov
mov
cmp
mov
js
nop
arpl
fisubrl
mov
fisttpl
icebp
inc
push
and
mov
popf
mov
bound
dec
pushf
cld
nop
lea
xchg
inc
xor
mov
in
pop
mov
push
jno
cmp
inc
add
nop
mov
inc
cs
icebp
jb
push
je
xor
bound
dec
js
push
pop
enter
enter
test
adc
mov
outsl
mov
in
sti
pop
pop
dec
repnz
jb
pop
pop
pusha
pusha
or
in
inc
pushf
insb
adc
mov
ret
dec
sti
or
push
ds
in
js
es
lahf
fnstenv
or
sbb
std
sbb
test
xchg
jo
and
sub
icebp
push
and
call
and
enter
orl
inc
in
aam
out
adc
or
xchg
int3
aad
lahf
lea
pop
xor
xor
and
push
push
pop
pop
andb
fs
push
in
ljmp
fs
mov
sub
mov
mov
cmp
das
jb
scas
loopne
add
loopne
dec
dec
add
mov
aas
insl
arpl
inc
loope
push
es
or
outsb
adc
je
leave
xor
in
xor
hlt
int
cs
rclb
pop
add
cmp
xchg
cmp
std
xor
jmp
sbb
enter
andb
mov
popa
add
int3
xor
inc
dec
mov
movsb
enter
lea
test
les
pop
jp
jo
add
inc
test
add
repnz
sahf
iret
shlb
add
xor
jb
mov
xchg
inc
mov
xor
test
sbb
test
orb
leave
xchg
mov
xor
leave
xor
je
or
add
loopne
and
clc
fcompl
mov
xchg
jl
insb
jo
sbbl
mov
and
ja
xor
addr16
push
push
out
cmp
push
adc
inc
dec
adc
mov
mov
inc
push
xchg
cmp
test
xor
add
cmp
sub
add
or
cmp
aaa
leave
cmp
in
and
in
and
in
leave
and
test
mov
inc
enter
cmp
cmp
cmp
dec
sbbb
xor
adcb
inc
cmp
adc
dec
pop
inc
jo
test
dec
push
cmp
sbb
dec
aas
mov
inc
push
inc
lods
inc
test
and
in
inc
mov
dec
add
add
and
sbb
pop
roll
jmp
inc
jae
lock
and
cwtl
in
in
bound
inc
aas
imul
add
mov
mov
mov
cmpsb
loopne
imul
add
mov
test
sbb
mov
fcomp
xor
and
test
adc
ljmp
cmpsb
bound
imul
out
nop
inc
sahf
or
dec
pop
add
pusha
adc
daa
inc
inc
adc
pop
adc
mov
hlt
jns
jle
push
or
sbb
push
adc
in
sub
out
mov
in
push
int
test
pop
xor
push
dec
cmp
int
and
xor
leave
rorb
or
xchg
xor
enter
in
ror
or
dec
ds
sahf
or
or
dec
sahf
or
aad
dec
mov
dec
sbb
dec
test
out
mov
movsl
dec
lcall
mov
mov
push
fs
fwait
mov
in
dec
inc
push
mov
push
jns
or
fcomps
nop
dec
test
inc
sbb
lcall
pushf
in
xchg
and
aaa
pushf
pushf
fwait
test
or
push
cwtl
repnz
add
mov
nop
in
nop
xor
add
mov
xor
or
mov
test
mov
or
wbinvd
dec
in
fldenv
and
xor
insl
add
test
jbe
imul
insb
push
leave
push
pop
imul
sbbl
or
sbb
pop
pop
pop
mov
enter
lock
and
enter
lock
enter
dec
dec
fdivs
adc
dec
dec
inc
jbe
orl
inc
lds
dec
dec
es
cmp
or
test
cmp
pop
and
insb
sub
cmp
or
xor
inc
xor
pop
xor
xor
inc
xor
pusha
sub
orl
sub
and
enter
and
cli
orb
mov
es
leave
ret
sbb
sbb
mov
sbbb
adc
fildl
add
sbb
and
es
sbb
add
mov
ret
pop
movsl
xor
aas
sub
gs
add
adc
dec
xor
cltd
add
mov
call
clc
sahf
dec
sbb
inc
pop
or
call
shlb
cmp
orl
dec
mov
xor
add
adc
and
and
imul
outsb
add
arpl
test
adc
imul
and
out
add
insb
add
ja,pn
ret
cmp
push
cmp
andb
movb
jbe
jo
popa
mov
mov
imul
xor
insl
lods
inc
cmp
adc
loope
add
and
addr16
xor
add
das
and
add
jb
inc
jo
sbb
pop
lret
lahf
xor
xor
dec
scas
jne
ja
xchg
insl
cmp
scas
jp
jae
dec
push
xor
and
adc
inc
cwtl
and
inc
xor
jg
and
sbb
nop
and
je
or
fdivrl
outsb
xchg
pop
ret
or
adc
add
mov
and
dec
imul
out
xchg
mov
adc
jg
inc
adc
sbb
and
adcb
loopne
fs
aas
jecxz
ja
sbb
imul
and
ret
inc
pop
add
push
add
cltd
adcb
xlat
pf2id
aaa
pop
push
movsw
cmpsl
jne
and
or
push
inc
mov
cmpsl
ja
dec
add
idivb
mov
repnz
bound
and
repnz
push
insl
push
clc
out
mov
inc
mov
or
cmp
mov
andb
je
into
sub
pop
and
mov
inc
insl
adc
enter
dec
xchg
sbb
mov
push
data16
aaa
xchg
sarb
xor
in
popl
pop
jo
cmpsb
lret
addr16
xchg
and
mov
or
dec
movsb
adc
sbb
mov
insl
pusha
push
nop
jp
cmp
inc
mov
loopne
xchg
mov
xlat
mov
mov
sub
sub
or
sbb
jmp
dec
pop
cmpsl
add
adc
cs
sub
aam
jmp
or
loopne
in
cmp
adc
pushf
cmpsl
or
adc
xchg
dec
stos
mov
inc
mov
add
push
adc
lock
incl
hlt
inc
mov
add
andb
add
or
or
sub
in
je
inc
push
ret
hlt
nop
mov
lods
sbb
clc
sbb
sbb
inc
fdivr
fdivrl
sbb
test
fsubr
dec
dec
mov
push
daa
inc
ja
xor
sub
or
sub
inc
aad
mov
nop
bound
lock
cmp
jo
or
popf
push
je
sub
das
clc
mov
rolb
xchg
orl
adc
push
inc
or
mov
dec
movsb
sub
pop
and
test
bound
xor
repnz
shl
or
adc
adc
dec
in
xor
and
pop
loopne
inc
xor
leave
fdivr
loopne
repnz
in
rcl
aam
adc
and
jnp
push
out
sub
adc
push
inc
cmp
add
neg
les
and
dec
adc
lock
adcb
punpcklbw
repnz
leave
in
push
mov
js
mov
das
sarb
xchg
sbb
add
mov
fiadds
mov
jg
mov
clc
inc
mov
hlt
or
rolb
lods
cmp
int
outsb
ss
lods
test
lock
test
jns
inc
lods
aas
movsb
lock
xchg
add
movsb
mov
leave
and
sbb
push
cwtl
sub
xor
sub
or
cmp
sbb
addl
psubusw
cmpsl
test
gs
dec
lcall
outsl
js
out
mov
insb
scas
push
jl
push
nop
sbb
loop
adc
sub
add
push
stos
scas
inc
inc
lea
addr16
push
hlt
adcb
test
aaa
leave
jnp
js
jae
mov
push
addl
cmp
jl
cmp
xchg
insb
adc
stos
adc
fisubrs
jae
cmp
stc
jne
outsl
fs
jae
fdivl
daa
arpl
xor
outsl
jb
adc
arpl
pusha
jecxz
mov
movsb
mov
pop
outsl
push
rcrb
adc
je
add
pop
loop
jo
fs
aad
loop
insl
jo
outsl
imul
mov
daa
add
and
inc
jo
inc
imul
inc
pop
pop
sbb
or
fcoms
lock
mov
pop
cld
cmc
fisubrs
xchg
lock
adc
and
adc
mov
imul
inc
loopne,pn
jb
das
pop
add
shlb
pushf
fcomp
adc
cs
mov
dec
jae
xchg
aam
xchg
rcrb
jb
xor
cmp
int3
enter
cs
mov
sub
push
adc
pop
in
sbb
dec
pop
arpl
pop
xor
xchg
pop
add
mov
enter
mov
push
fwait
jp
adc
add
mov
aam
adc
cld
js
icebp
jb
mov
xchg
pushf
pop
lods
test
pushf
pop
jb
imul
jb
shll
pushf
pushf
pop
mov
mov
mov
sbb
add
mov
enter
inc
jge
cwtl
xchg
mov
fistl
sub
adc
nop
pop
add
inc
or
xchg
sbb
mov
pop
ret
cmp
pop
fcomps
jb
inc
mov
test
cmpb
sahf
loopne
or
and
cmpsb
enter
xchg
in
xchg
jl
js
xchg
je
leave
ret
cmp
lods
xor
jb
insb
cmp
adc
inc
ret
cmp
adc
cmpsl
mov
outsl
dec
inc
inc
jno
push
dec
sbb
das
sbb
outsl
iret
es
or
pusha
leave
sub
sarb
push
bound
mov
and
xchg
mov
dec
add
xor
fstpl
mov
call
cmp
mov
inc
mov
mov
gs
xchg
dec
lcall
nop
shlb
ror
nop
out
fs
jg
dec
enter
xchg
enterw
xchg
xchg
rolb
addr16
fs
fs
mov
jle
jle
bound
ljmp
inc
dec
mov
mov
std
in
repnz
int3
xchg
push
dec
xlat
movsb
xlat
fwait
inc
sbb
adc
in
adc
gs
xor
popf
jo
dec
stos
icebp
movsl
imul
xchg
mov
and
and
nop
add
mov
push
hlt
mov
cmp
cmp
test
imul
push
clc
leave
mov
add
js
jne
sub
inc
dec
add
or
or
and
xor
pushf
and
adc
cmp
pop
sbb
xchg
data16
bound
pusha
sbb
xchg
pop
sub
add
xchg
insb
and
je
mov
ret
push
sbb
pop
adc
adc
andb
bound
add
jb
ret
insb
jae
dec
test
and
cmp
data16
enter
dec
dec
and
das
nop
jo
jo
icebp
pop
fisttpl
adc
mov
mov
cmp
lret
cwtl
adc
xchg
cmp
mov
xor
add
mov
mov
and
ljmp
sub
add
leave
mov
pusha
mov
in
in
stc
ss
sbb
pusha
adc
or
lds
cmp
jb
jg
sbb
jb
inc
fsub
out
sbb
xchg
adc
adc
adc
enter
cld
adc
loope
or
pop
in
nop
dec
or
add
and
xchg
add
adc
jbe
sarb
cld
xor
enter
clc
inc
dec
aad
and
xchg
add
mov
add
dec
fsubs
xchg
fsub
sub
mov
xchg
xchg
dec
es
int3
mov
mov
int3
mov
add
inc
push
stos
xchg
jl
and
ss
inc
arpl
inc
mov
jbe
sub
mov
or
aas
push
popa
gs
jne
and
cmp
and
mov
xor
xor
xor
mov
and
xor
xor
xor
faddl
dec
and
cmp
xor
and
xor
aaa
cmp
pop
and
add
aas
add
jb
inc
je
inc
in
xor
xor
and
inc
cmp
lock
adc
aaa
ss
cmp
inc
addr16
and
popa
negl
ds
cli
xor
adc
rcrb
daa
xlat
inc
and
ret
inc
adc
pop
push
scas
dec
pop
and
xchg
and
add
push
test
add
pmulhuw
add
cmpsb
icebp
pop
lods
ss
add
test
int3
clc
adc
hlt
hlt
aaa
data16
enter
xchg
adc
fxrstor
test
dec
dec
add
je
das
je
jnp
inc
or
inc
int3
sbb
jo
sub
into
adc
inc
sbb
cmp
es
into
pushf
adc
aaa
pop
pop
mov
or
pusha
adc
rcrb
push
mov
pop
pop
push
xchg
xchg
cli
pusha
inc
es
jmp
dec
inc
xchg
daa
xlat
mov
cmp
dec
inc
cwtl
nop
inc
push
les
dec
xor
inc
mov
cli
sub
xor
stc
xor
sbb
fsubs
popa
nop
or
sub
in
and
or
pop
dec
fimull
in
sub
lret
mov
inc
sbb
les
imul
adc
cmp
and
stos
andb
in
mov
scas
sbb
subl
fsubrs
ds
mov
nop
ja
sbb
push
dec
jl
dec
sarb
pop
sti
adc
or
and
or
or
adc
add
imul
and
inc
sbb
shrb
cld
or
mov
mov
gs
stc
cmc
adc
fistl
mov
outsb
in
jecxz
push
in
addr16
pushf
pusha
int3
cmp
or
popf
pushf
adc
pop
sbb
sub
mov
les
shl
das
popa
fcoms
xor
sub
leave
and
fcomp
mov
int3
stc
jmp
rol
or
roll
adc
inc
test
inc
aaa
hlt
lods
outsl
mov
rcl
cmp
pop
repnz
xchg
pushf
pop
rol
iret
inc
xor
push
mov
out
test
loopne
and
stc
cmpsl
or
mov
ljmp
stc
sub
lods
stc
mov
mov
pop
sbb
pusha
push
sahf
jb
xor
lret
insb
test
dec
fsubrl
subb
js
movsb
mov
movb
add
mov
mov
xchg
xchg
and
dec
xchg
xchg
pop
adc
and
mov
test
or
rorl
push
inc
sub
cmpsl
mov
pop
jmp
mov
daa
imul
fsubl
adc
arpl
ret
icebp
mov
fists
push
mov
cmp
cmp
in
add
pop
jl
and
push
jl
inc
js
or
mov
cmpl
je
add
sbb
inc
and
xchg
or
enter
test
enter
xchg
or
enter
orb
pusha
js
sarb
mov
or
sahf
fnstsw
mov
scas
dec
fstpl
adc
daa
xchg
pop
sbb
pop
pop
push
mov
leave
and
in
push
push
dec
dec
xchg
xchg
sbb
or
imul
inc
sahf
pop
fwait
inc
push
or
orb
mov
and
cs
xor
cs
xor
or
sub
jno
cmp
sub
push
out
sub
movl
jno
aad
and
mov
stc
xchg
stc
sbb
sbb
adc
ds
push
cmp
add
int3
pop
cltd
int
or
or
add
and
add
sub
and
xchg
push
je
cltd
je
xchg
xchg
mov
cld
clc
in
cmp
clc
clc
clc
clc
sub
xchg
adc
and
xor
psubusw
in
clc
in
clc
lock
lock
lret
cmp
cltd
in
nop
shlb
es
clc
sub
adc
xchg
popa
leave
pushf
jns
jne
leave
ret
orb
fsubs
dec
sbb
loope
jne
pushf
cs
pushf
jmp
ret
int3
clc
sbb
in
in
clc
clc
clc
adc
adc
pop
fisubrl
in
xor
daa
rol
and
enter
cmp
cmp
jg
je
and
cmp
mov
sub
daa
xchg
sub
mov
nop
or
lods
lods
dec
inc
sbb
xchg
xchg
mov
mov
and
xchg
addl
test
push
addr16
jecxz
xor
pushf
aam
test
imul
pop
mov
xchg
dec
cs
xchg
nop
imul
fcoml
mov
xor
les
roll
pop
xlat
mov
dec
cmp
or
lahf
xorb
cmpb
xor
cmp
cld
xchg
clc
and
xchg
loope
fisttpll
push
addr16
js
adc
dec
dec
cs
imul
insb
push
dec
fisubrs
fs
adcl
clc
adc
cmp
pop
clc
call
enter
xchg
push
clc
aas
push
clc
in
mov
push
push
dec
and
in
dec
jge
fwait
xchg
cld
mov
clc
inc
clc
dec
clc
jo
es
clc
in
int
xchg
inc
inc
sahf
sbb
mov
enter
enter
icebp
cmp
adc
xor
cmpsl
adc
or
sub
pop
sub
sbbl
daa
and
and
jb
push
leave
and
sbb
sbb
and
sbb
enter
adc
stos
mov
sbb
or
ret
enter
adc
mov
test
pusha
or
inc
or
jno
inc
je
xchg
or
in
add
test
or
enter
imul
in
divl
cmpb
cmp
mov
hlt
neg
or
in
ficompl
mov
or
enter
in
sbb
leave
test
rorb
mov
in
and
in
mov
and
jge
bound
pop
and
fdiv
sbb
psubw
neg
neg
mull
cmp
test
rcrb
or
enter
repnz
shl
testl
sub
adc
sbb
les
push
fistpl
and
xchg
mov
adc
nop
sub
lods
and
daa
jno
adc
jo
cwtl
mull
repnz
cmp
mov
xchg
mov
or
jno
idivl
xchg
inc
in
jle
lahf
test
xor
test
pop
mov
enter
jl
jl
xor
gs
push
xor
sub
pushf
jno
shlb
leave
inc
xor
je
adc
jb
xchg
jo
repnz
les
scas
jge
fldenv
leave
add
fs
push
add
pusha
inc
mov
icebp
stc
adc
sub
inc
dec
inc
popa
mov
fs
pop
pop
pop
fs
dec
cs
push
push
rcll
mov
xchg
pushf
pop
dec
dec
dec
push
loop
mov
and
in
cltd
test
sbb
xchg
jl
jnp
cmp
xchg
dec
orb
cmp
in
xor
jmp
imul
mov
mov
dec
dec
cs
push
loop
sub
sbb
jae
ss
sbb
and
and
roll
sbb
pusha
enter
adc
in
mov
adc
sbb
mov
leave
push
pop
and
add
add
add
cld
mulb
sbb
inc
out
imul
mov
cmp
hlt
imulb
div
imul
in
adc
adc
testb
loope
or
arpl
imul
loopne
loopne
cmp
xchg
mov
daa
xchg
push
idivb
lds
pusha
cltd
leave
leave
xor
int3
sub
dec
enter
sub
cmpsl
pop
or
inc
les
xchg
pop
jb
sarb
mov
sbb
daa
inc
nop
dec
divb
test
leave
dec
dec
and
inc
push
test
lods
idivb
test
mov
sub
push
repnz
push
inc
push
sbb
pop
cwtl
lods
cwtl
mov
inc
xchg
fcomps
push
sbb
cmp
repnz
mov
adc
xor
mov
sub
xor
and
pop
test
enter
insb
sbb
mov
divb
push
cltd
js
js
dec
or
je
mov
je
popf
sbb
jo
enter
mov
scas
insb
push
push
scas
xlat
fbstp
notb
pop
push
or
push
inc
fisttps
xchg
divb
cs
dec
adc
subb
and
and
nop
mov
inc
adcl
cmp
cmp
push
jno
xor
xor
adc
and
daa
jns
negb
sub
arpl
ss
and
xor
sbb
adc
adc
pop
sub
cltd
in
daa
mov
pop
inc
add
add
inc
mov
add
fs
mov
push
adc
cmc
cmc
icebp
lock
and
hlt
cmc
clc
cmc
enter
clc
cmc
push
xchg
inc
add
in
xor
and
push
in
loopne
loopne
enter
in
mov
cmc
nop
add
jns
cmc
fdiv
fdiv
leave
enter
mov
xor
fcomp
int3
push
les
dec
mov
cmc
sbb
shrb
mov
cmc
mov
fidivrs
enter
out
daa
push
xor
cmp
mov
cmp
mov
pop
add
sub
nop
sub
dec
enter
cmc
pushf
cmc
add
cmc
mov
mov
jb
nop
fstl
adc
out
mov
dec
jb
mov
leave
and
inc
push
xor
cmc
jl
nop
dec
push
push
in
enter
js
dec
fisubrs
je
xchg
jo
xchg
js
pushf
stc
jo
aad
leave
leave
adc
push
push
leave
leave
fs
adc
xchg
cld
and
shl
test
pop
cmc
pop
cmc
js
in
pop
cmc
out
pop
rcll
jb
leave
and
subb
dec
push
mov
cmp
in
cs
add
mov
xor
inc
dec
add
mov
xchg
xor
xor
cmp
test
cmc
sub
nop
push
jb
sub
xor
test
sbb
cmc
sar
cmc
loop
and
std
inc
push
jns
and
adc
mov
inc
sbb
push
and
xchg
sbbl
push
and
je
orl
test
xor
leave
adc
bound
test
xchg
or
aas
xor
xchg
add
or
roll
cld
hlt
mov
rol
cld
hlt
nop
iret
and
clc
hlt
stos
clc
hlt
hlt
hlt
dec
pushf
dec
repnz
hlt
xchg
lock
sbb
enter
ret
jl
hlt
and
test
jle
fdiv
fdiv
push
sarb
fsubrs
adc
add
dec
scas
adc
leave
mov
xor
int3
dec
sbb
leave
enter
mov
hlt
mov
rorb
int3
popaw
mov
mov
stc
sub
test
call
hlt
xchg
mov
add
jecxz
mov
mov
or
xchg
jecxz
jb
leave
xor
jae
adc
mov
cmp
cmp
mov
mov
nop
hlt
nop
hlt
inc
push
xor
adc
lods
xorl
mov
hlt
je
repnz
jl
and
xor
xchg
xchg
mov
dec
insb
dec
fs
inc
jo
or
std
pusha
fs
push
cmp
sbb
mov
pop
push
xchg
in
mov
push
enter
dec
hlt
dec
hlt
and
sarb
dec
inc
inc
jmp
les
inc
sub
hlt
hlt
sub
outsb
adc
shl
in
mov
xor
sbb
and
xor
out
and
sub
sbb
loopne
sub
sub
push
and
sbb
sbb
sbb
sbb
push
sub
adc
stos
sbb
rcll
or
push
outsl
js
add
outsb
call
sub
jo
push
pop
ret
push
gs
inc
ss
sub
mov
or
xchg
les
enter
test
dec
fsubl
inc
push
and
cld
repz
mov
clc
sub
push
xor
lock
repz
je
ljmp
bound
dec
xor
loopne
sub
dec
repnz
repz
repz
in
repz
adc
inc
popa
ret
ret
ficoml
loopne
adc
fmull
in
fsubrs
aam
add
repz
aaa
pushf
repz
int
cmpl
leave
and
les
enter
les
fld
cmp
cld
in
nop
xchg
mov
mov
mov
push
js
outsl
add
popa
int
pop
xor
and
pushf
movsb
movsb
test
and
jb
mov
in
mov
xchg
mov
lods
nop
fistpll
outsl
enter
and
int3
dec
in
or
mov
push
test
adc
nop
outsb
and
repnz
jl
pop
jb
or
call
repz
fidivl
jo
sbb
lods
mov
xchg
xchg
sub
insb
push
push
fs
sbb
cmp
xlat
nop
data16
inc
mulps
jb
rcrb
pop
repz
pause
pop
repnz
push
repz
repz
push
dec
pop
and
push
dec
enter
adc
lcall
jne
adc
inc
jb
leave
and
sbb
repz
sbb
xor
pusha
cs
xor
aam
dec
dec
xor
and
call
sub
pop
jb
sub
adc
push
repz
daa
push
jo
and
leave
and
and
xchg
jmp
insl
push
sbb
and
cmp
enter
in
call
xchg
xor
sbb
inc
or
lods
push
jb
push
mov
repnz
repnz
sub
push
repnz
lods
addr16
aaa
pop
and
shl
sahf
pop
enter
cmp
repnz
mov
in
sbb
loopne
in
loopne
sbb
in
aas
mov
faddl
xor
daa
fcomp
fdivl
das
and
test
or
aam
int3
aaa
popa
loop
jb
xchg
enter
scas
jns
jg
les
pop
test
aaa
shl
iret
lcall
sub
jge
mov
adc
mov
mov
jmp
pushf
mov
pop
fs
jns
cmp
sbb
cmp
daa
push
jo
movsb
fbld
mov
pop
mov
mov
adc
test
xchg
xchg
dec
test
jne
daa
repnz
add
xor
insl
leave
leave
adc
mov
mov
addl
sbb
jl
insb
inc
jle
cmp
fs
ror
enter
pusha
jecxz
pop
mov
sbb
push
push
shll
pop
xor
test
pop
aad
xchg
ret
in
xor
repnz
mov
daa
dec
repnz
ret
cmp
add
shlb
data16
cmp
inc
dec
sbb
popf
fs
inc
dec
cmp
xchg
sub
adc
sub
fs
xor
xor
nop
inc
push
cmp
pop
sub
sbb
mov
and
nop
inc
push
cmp
insb
sbb
push
popf
mov
fs
xchg
repnz
jb
dec
sbb
or
addl
add
dec
or
iret
jne
xor
std
add
repnz
gs
xlat
add
cmp
int3
int
cmpsl
and
add
in
add
mov
fsts
enter
roll
clc
addr16
pop
mov
stos
loopne
pop
test
stos
sub
mov
loopne
hlt
sbb
inc
adc
sbb
hlt
icebp
shl
fisubs
or
cmp
mov
add
nop
icebp
adc
in
mov
movsl
push
mov
cmp
xor
and
lock
fwait
inc
inc
push
push
insl
add
vmwrite
icebp
fdiv
pop
mov
adc
sbb
pop
and
or
push
push
add
inc
dec
imul
pop
inc
jle
int3
icebp
xor
test
insb
lret
jge
pusha
and
ret
or
adc
in
jl
clc
xor
add
icebp
flds
or
in
rcr
push
and
add
adc
scas
or
cwtl
xchg
loopne,pt
dec
xchg
and
lds
nop
mov
pop
xchg
cmc
test
or
or
jl
addb
js
and
je
je
pop
mov
insb
sub
mov
movsl
add
icebp
sub
jns
mov
pop
xchg
adc
repnz
cmpsl
out
xchg
cltd
pop
enter
mov
hlt
mov
push
push
daa
xchg
pop
insb
repz
dec
dec
xchg
ja
and
or
gs
pop
inc
fadds
inc
cld
sub
mov
sbb
cmp
nop
imul
loop
sbb
xor
adc
enter
adc
jge
xor
xor
cmp
sub
sub
leave
or
sub
sub
in
addl
and
adc
xor
pop
pop
jb
leave
and
sbb
inc
pop
mov
xor
pushf
pop
aad
cltd
adc
adc
xchg
xchg
adc
stos
add
or
fwait
int
dec
clc
lock
add
cld
lock
lock
aaa
adc
mov
or
dec
call
jb
sti
in
or
dec
pop
and
lods
subb
loopne
push
loopne
fdiv
mov
das
cmp
lock
sti
fnstcw
jae
lock
aam
fdiv
jb
ds
int3
lock
lock
sub
dec
loop
leave
sarb
enter
dec
cmp
lock
mov
ss
mov
cmp
mov
push
pop
lods
mov
mov
fs
test
pushf
lock
daa
dec
sti
pushf
lock
xor
cmp
adc
inc
cmp
lock
and
mov
mov
test
mov
test
pop
pop
cmp
add
mov
subb
xchg
jl
daa
jl
mov
pusha
dec
sti
pop
js
in
mov
and
sbb
and
insb
insb
add
jo
mov
push
leave
push
lock
add
lock
pop
lock
lock
lock
lock
fs
push
lock
push
inc
fmull
dec
dec
mov
scas
add
dec
inc
mov
cs
inc
lock
enter
or
lock
and
cmp
xor
pop
inc
dec
push
xor
aas
xor
leave
and
and
sub
pop
cs
and
cmp
adc
enter
add
sbb
mov
sbb
dec
dec
repnz
cld
out
cld
out
add
sub
mov
leave
mov
mov
and
out
hlt
out
cs
xchg
sbb
out
lock
in
leave
and
call
mov
loopne
sbb
xchg
pop
xchg
in
in
fsubr
lds
fcoml
pop
leave
and
aam
rcl
jo
add
scas
sbb
enter
nop
dec
dec
les
rol
mov
mov
cmp
imul
sub
pop
pop
mov
aas
mov
lods
lods
xchg
xchg
dec
push
test
movsb
leave
lds
xchg
pop
jb
mov
sub
pop
xchg
dec
push
xor
out
adc
nop
fsubr
sub
pop
repnz
or
xchg
mov
mov
xor
ficompl
xor
out
mov
pop
leave
repz
test
movsb
add
nop
pop
jb
mov
jns,pn
jb
rcl
or
sbb
inc
in
mov
rol
xlat
es
sbb
xor
sub
xor
or
ret
sbb
xchg
js
pop
mov
addb
xchg
xchg
push
andl
ja
dec
fimuls
xor
pop
test
jns
ret
xor
and
xor
xchg
cmp
dec
jb
pop
lds
jns
repnz
inc
mov
in
out
nop
xor
lock
mov
xchg
clc
pop
xor
nop
fcomps
loopne
xor
adc
mov
cmp
inc
inc
xor
xchg
dec
push
pop
dec
repnz
out
sub
hlt
and
loope
cwtl
pop
shll
xlat
cs
hlt
je
js
mov
hlt
push
inc
lods
mov
pop
jno
les
xor
loopne
sub
popa
cwtl
mov
movsb
imul
sbb
cmc
xorb
cmp
sbb
cmc
xor
loopne
and
hlt
cmc
sub
mov
or
inc
negb
test
notb
leave
jae
or
pusha
popa
fs
adc
pop
popf
dec
rorl
pop
shll
mov
mov
enter
fs
jnp
imul
cmp
cmp
lods
or
nop
test
shl
jp
aam
fdiv
fwait
mov
imul
pop
mov
push
sarb
adc
pop
xchg
jmp
clc
xor
leave
and
push
rcrb
xor
xchg
dec
call
test
rcrl
divl
cmp
xchg
dec
popa
dec
test
test
cmp
scas
sub
adc
jno
in
pop
xchg
sbb
js
cli
lods
sbb
push
pusha
add
shlb
cltd
dec
sets
adc
mov
push
jb
mov
fwait
ret
dec
and
xchg
ret
out
xor
ljmp
jbe
pop
sub
outsl
arpl
sbb
xchg
jb
sub
addr16
xchg
pop
cmp
xorb
addr16
inc
add
push
fstl
movsb
subl
add
enter
pop
sbb
dec
jp
dec
outsb
cld
push
mov
out
inc
fs
and
outsb
or
and
jo
cmp
and
movsl
xor
outsb
pop
add
ja
imul
and
dec
iret
cmp
test
addr16
addr16
inc
pop
inc
bound
jae
ja
nop
fnstenv
adc
dec
jp
inc
and
push
insb
sub
pop
xor
addr16
lret
shll
inc
bound
gs
imul
into
daa
add
pop
or
inc
je
push
or
aad
add
addb
fstl
dec
or
aaa
popa
jae
js
add
ljmp
or
and
pop
sub
push
pop
xchg
or
sbb
or
inc
inc
pop
jmp
or
or
lods
mov
das
push
inc
mov
sbb
outsl
insl
insb
sahf
int3
mov
cmpsl
sub
insb
imul
xor
imul
enter
push
mov
in
pusha
jnp
sbb
gs
and
in
cld
jle
je
gs
inc
aam
and
mov
and
jns
pop
inc
and
cmp
bound
sbb
mov
xchg
sbb
popf
inc
jno
adc
sub
mov
nop
outsb
mov
and
jae
inc
popa
xor
cltd
gs
ja
pop
aad
mov
fs
out
cmp
sbb
inc
imul
ds
xlat
push
jns
daa
daa
jbe
and
inc
cli
add
or
push
scas
add
add
sub
add
and
pop
sub
popa
movsb
xor
jne
adc
pusha
jbe
data16
fadds
cmpsl
rorb
outsl
repnz
pop
or
xchg
imul
pop
xor
sbb
nop
add
lret
push
add
sahf
daa
inc
ss
stos
cmp
outsl
and
cltd
test
inc
inc
push
xorb
xor
mov
inc
and
inc
push
je
incl
addr16
scas
ret
bound
sti
insb
or
orb
daa
push
lock
push
pop
jp
iret
adc
rorb
jl
sub
inc
pusha
xchg
dec
push
inc
sub
mov
pop
nop
push
ja
jb
push
lods
xor
fs
or
movsb
lock
push
inc
jmp
sti
in
sub
inc
dec
inc
inc
pop
out
add
add
inc
dec
inc
inc
pop
fldl
inc
mov
dec
mov
roll
or
lahf
pshufw
filds
addl
rol
or
sbb
cmp
or
mov
adc
dec
push
dec
xor
loopne
inc
pop
and
lret
mov
jne
mov
jne
mov
call
xor
or
lcall
enter
inc
mov
imul
inc
jne
cmp
frstor
adc
add
cmp
xchg
xor
add
xor
pop
adc
pop
pop
dec
shrl
das
sbb
inc
imul
sbb
xchg
lahf
pop
sbb
dec
push
add
lock
les
lahf
pop
adc
sub
sub
push
leave
dec
or
adc
or
ret
les
lret
scas
mov
cld
cli
add
add
insb
sbb
and
and
jb
cmpsl
imul
mov
or
add
push
xchg
data16
nop
fldenv
mov
push
or
or
nop
or
jge
sub
inc
dec
clc
in
movsl
cltd
dec
inc
rorb
cwtl
jmp
or
xor
and
sbb
xchg
aam
cld
test
arpl
pop
sbb
add
sub
or
add
add
or
or
cmpl
add
int3
mov
push
xor
adc
pop
dec
dec
out
add
popa
xor
outsb
out
sub
mov
add
fdivl
aas
dec
sbb
xchg
pop
add
shl
movsl
adc
add
es
mov
dec
xchg
loopne
mov
nop
jo
lock
sub
lock
idivb
hlt
hlt
aam
and
andl
and
xorb
sub
xor
aas
xchg
addl
adc
cmpsl
xor
gs
xchg
dec
lods
scas
lods
dec
notl
movsb
sbb
rcll
aaa
xchg
popa
enter
cmp
mov
mov
or
adc
sub
xchg
fidivrs
xor
push
or
sahf
mov
or
scas
xchg
adcl
pusha
jne
add
and
stos
or
and
push
outsl
jae
or
pop
arpl
ja
push
xchg
das
jo
lds
fdivrp
jnp
sub
xchg
pop
inc
jb
xchg
insb
stc
cmp
and
insb
jo
push
pop
arpl
ja
jns
repnz
dec
aad
xchg
jb
adc
jmp
add
fmul
push
xor
sbb
pop
pusha
fdiv
data16
ja
popa
pop
cs
mov
inc
fs
or
pop
pop
push
repnz
pop
jp
gs
add
mov
mov
ss
lret
add
xor
push
adc
inc
mov
push
add
fidivrs
mull
or
daa
sub
cmc
add
or
jb
cs
fs
adc
call
dec
loopne
lahf
aam
movsb
insl
setns
add
adc
es
jo
push
fs
pop
es
fs
pop
push
push
dec
adcl
adc
or
sbb
push
aas
int3
mov
int3
test
subl
jae
mov
ret
ret
stos
or
sub
push
dec
jp
push
inc
inc
in
cmpsl
movsb
lea
pop
sbb
loopne
int3
add
push
scas
cmpsl
movsb
jp
test
xchg
das
cmp
xchg
xchg
jae
push
pop
in
and
or
in
and
or
loope
int
scas
stos
fldenv
ret
push
jbe
xor
hlt
push
mov
push
imul
mov
push
insb
cld
int3
xlat
inc
aad
mov
xor
data16
repnz
mov
add
add
cld
xchg
out
stc
pop
gs
clc
jno
test
xchg
cmpsb
mov
and
jae
xor
shll
mov
js
movsl
mov
mov
pop
jne
nop
int
repnz
test
add
sbb
cs
shll
jo
test
call
mov
mov
push
mov
xor
mov
mov
cmp
js
add
pop
sahf
in
add
shlb
fmull
pop
fisubl
lock
add
hlt
lods
imul
pop
inc
sub
in
lcall
lock
in
rolb
lods
mov
loopne
push
and
push
xor
pop
xchg
std
std
xor
fcmovbe
dec
roll
push
cld
into
jecxz
jecxz
jle
cs
filds
sbb
add
add
mov
sti
shlb
add
clc
nop
add
or
sarb
push
mov
add
add
clc
enter
int
addr16
push
enter
mov
punpckhwd
rcrl
hlt
pop
push
sub
xchg
fs
subb
dec
jae
cs
and
imul
dec
inc
adc
sar
movsl
or
add
sub
clc
add
cmp
pusha
in
lods
xor
cs
loopne
inc
mov
dec
xchg
dec
pop
les
cmp
mov
std
insb
dec
add
daa
pop
cwtl
rolb
mov
out
pop
xorl
push
orb
lods
push
cmp
sbb
cltd
xor
orb
fistps
clc
enter
xor
pop
jg
push
cs
enter
cmp
cltd
int
imul
push
imul
mov
pop
lcall
call
out
pushf
insb
scas
lock
mov
mov
in
insl
leave
inc
aas
enter
into
mov
imul
push
je
cmpsb
imul
push
test
xor
rorl
xorb
shll
adc
mov
shll
lock
mov
push
jl
jns
movsl
dec
loopne
lods
das
out
jl
repz
cmpsb
call
push
imulb
cmc
cld
mov
pusha
hlt
repnz
pop
lcall
add
fisubl
fsubrs
push
mov
pop
lcall
push
push
sbb
je
cmp
out
fmulp
push
test
shlb
enter
jae
lcall
push
lock
sar
clc
pusha
push
xor
out
xor
cwtl
push
shll
fstpt
push
mov
sub
in
imul
push
push
and
or
fdivrl
and
es
push
add
push
cld
lcall
inc
mov
pop
movsl
shlb
ds
jg
lret
lock
and
push
outsb
addb
mov
cld
test
push
or
mov
xor
mov
add
mov
adc
push
dec
adc
jmp
adc
push
js
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
add
out
in
mov
xchg
or
bound
xor
dec
push
sub
and
ds
or
daa
mov
daa
xchg
add
push
call
les
fsub
mov
adc
add
sbb
imul
addb
movsb
imul
nop
inc
sbb
addr16
mov
shll
or
aas
jnp
cld
adc
add
push
xor
lods
mov
int3
aam
dec
shll
in
hlt
cld
imul
cmpsb
imul
imul
cmpsb
imul
mov
int3
enter
mov
add
add
mov
xchg
gs
xchg
outsb
or
in
and
dec
push
les
jno
push
sbb
insl
nop
pop
jb
call
lds
clc
insb
mov
lahf
daa
je
rcrl
and
mov
lds
xchg
clts
mov
or
adc
add
mov
enter
ss
imul
imul
pop
imul
lds
test
aas
xor
dec
nop
push
movsb
mov
or
rolb
loopne
test
push
inc
xor
pop
push
or
cmp
mov
pop
jbe
aas
add
sbb
inc
jmp
ret
pop
stos
pop
out
xor
pshufw
jl
xchg
and
sbb
and
sbb
add
out
popa
bnd
push
decl
xor
pop
dec
mov
xor
test
jle
cld
in
jmp
shlb
mov
sti
push
or
inc
mov
je
push
jns
les
fmull
add
bswap
xchg
daa
dec
and
cmp
push
adc
fcmovnbe
in
or
movsb
in
xchg
mov
pinsrw
or
cmp
xor
cmp
pop
adc
leave
xchg
daa
je
xchg
pop
test
pushf
cmp
repnz
pop
clc
repnz
test
ficomps
cs
nopl
xor
dec
add
repnz
add
nopl
dec
sahf
cmp
xor
dec
andb
and
xchg
daa
xchg
xchg
jns
loopne
clc
mov
adc
xchg
daa
inc
int3
pop
fidivs
fwait
sbb
repnz
movsb
fists
jne
cmp
add
addl
mov
imul
xor
lods
mov
inc
push
inc
or
punpckldq
out
rcll
add
jg
out
and
jae
sbb
nop
push
orb
adc
sbb
neg
out
push
not
or
lret
push
adc
or
mov
aad
or
pop
push
repnz
fisttpl
cs
movzbl
or
inc
push
sbb
adc
lods
pusha
nop
adc
xor
inc
xchg
push
or
enter
sbb
enter
add
fadds
or
adc
fs
add
nop
or
add
inc
pop
imul
xor
cmpsb
push
out
loopne
mov
adcb
dec
jg
mov
int3
push
nop
addl
pop
sub
dec
shll
insb
orb
enter
cmpsb
imul
cmpsb
imul
subb
mov
add
or
nop
pop
sub
sbb
jle
sub
sahf
cmp
cli
xor
dec
clc
pop
repnz
xchg
divl
test
cwtl
hlt
dec
sahf
cmp
lods
repz
lock
daa
clc
out
sub
and
dec
sahf
cmp
xor
inc
jmp
ljmp
push
xchg
add
fsub
push
push
mov
add
and
mov
add
ds
push
enter
outsl
imul
fists
or
or
add
add
add
pop
add
cltd
mov
pusha
push
mov
and
cmp
inc
and
or
outsl
pop
rcll
cmp
mov
xorl
pop
pop
add
dec
pusha
fldt
xor
add
adc
pop
adc
push
or
jbe
adc
pop
mov
pop
fcoms
xchg
xchg
mov
and
pop
add
out
xchg
stc
mov
shll
cld
std
shll
addb
xchg
add
cs
and
cmp
out
jge
inc
add
mov
jnp
cmpsb
push
mov
push
dec
shll
pushf
lods
mov
rcr
call
fsub
lcall
add
adc
lods
imul
in
lods
mov
add
add
push
pop
or
inc
clc
sti
sub
cmp
mov
xlat
in
rolb
shl
pop
cs
lret
into
sub
pop
fcoms
js
nop
movsb
int
mov
ljmp
fdivrl
pop
cmc
push
vmovsd
clc
pop
das
decb
in
loop
xor
shrb
xchg
icebp
aam
cmpsb
pop
mov
xor
in
push
ds
cmp
pusha
imul
mov
sarl
mov
mov
cs
in
dec
add
and
jl
shll
pop
push
dec
mov
jnp
add
inc
push
pop
xlat
inc
cmc
in
mov
incl
ficoml
and
in
add
icebp
repz
shl
roll
dec
cld
clc
lock
cmp
aad
pop
inc
xor
or
cmp
add
lcall
nop
cmc
xor
bswap
imul
mov
addl
pushl
jg
loopne
shrb
sbb
and
adc
das
out
pop
fbld
insb
pushf
pop
mov
std
xchg
push
scas
outsl
lahf
pop
out
add
xor
or
cmp
pop
inc
aam
inc
aaa
testl
dec
mov
lcall
stos
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
jmp
push
add
xor
push
into
incb
shll
or
inc
mov
mov
jle
inc
mov
pushl
and
mov
shrb
out
push
fisubs
loope
shrl
in
sbb
push
scas
outsb
sahf
pop
mov
insl
popf
pop
or
cmp
push
testb
cmp
add
lds
jp
inc
mov
mov
jns
inc
mov
sub
sbb
es
sub
sbb
and
in
aad
push
pop
cmpsb
xchg
push
test
gs
push
mov
sti
ja
lds
push
inc
dec
cmovns
mov
pop
and
jae
push
mov
sbb
sbb
push
bound
mov
inc
sub
jge
push
aaa
sbb
mov
mov
neg
fstp
or
aaa
jb
or
ja
outsl
push
bndstx
cmpsl
push
js
ja
outsl
getsec
sbb
aad
push
aas
out
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
aas
enter
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
scas
or
movl
cmp
imul
lods
adc
push
imul
sbb
xor
and
xor
rcrl
adc
push
pop
dec
shll
sub
xor
shll
cmp
sub
xor
rcrl
dec
shll
cmp
dec
shll
shll
ss
add
aas
adc
enter
or
sub
shlb
nop
xor
push
dec
rolb
aaa
das
or
fidivrl
ds
cmp
pop
or
scas
push
xchg
cmpsb
imul
inc
cmpsb
insl
addr16
inc
cs
push
jno
xor
nop
cmpsb
imul
gs
push
imul
insb
or
adc
das
es
add
ss
outsb
and
push
cmpsb
outsl
enter
pop
add
add
movsb
jmp
add
or
add
mov
cmp
add
add
add
add
call
xor
add
add
push
adc
pop
and
xor
inc
mov
dec
inc
adc
xor
adcb
sbb
sbb
sub
ret
cmp
loope
test
adc
add
incl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
pushl
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
sbb
jmp
out
jmp
hlt
cmc
div
clc
stc
cli
fs
rol
cmp
add
fs
in
incl
push
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
push
add
subb
and
notb
cmpl
lcall
fs
xor
movsl
imul
sub
xor
sarl
dec
pusha
jo
dec
shll
loopne
lcall
sub
inc
cmp
imul
lret
mov
push
push
pop
lcall
pop
je
imul
imul
imul
cmpsb
imul
jae
lcall
add
shll
int3
and
dec
shll
aam
nop
xor
roll
push
cwtl
dec
shll
je
lcall
movsb
or
adc
cmpsb
mov
sub
mov
cmpsb
imul
cmpsb
imul
shll
enter
xor
and
nop
xor
mov
inc
aam
push
fcom
xor
rol
fs
je
shll
cld
xchg
lcall
movsb
in
sub
lcall
hlt
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
xor
sbb
je
dec
shll
sub
sub
xor
rcll
shll
les
dec
shll
aam
test
shlb
dec
les
add
rclb
lcall
call
cmpsb
imul
push
shll
fs
shll
insb
cmp
inc
movsb
je
xor
rcll
pusha
les
xor
jl
aam
js
xor
shll
test
mov
movsl
add
mov
cwtl
cmpsb
imul
imul
dec
shll
and
shll
test
dec
shll
movsb
int3
xor
shll
mov
lods
shll
dec
shll
call
xchg
adc
add
cmp
xor
shll
and
insb
xor
mov
inc
dec
and
loope
cmpsb
push
push
xor
outsb
test
shl
cmpsb
je
xchg
cmpsb
test
mov
cmpsb
xchg
push
lods
cmpsb
movsb
idivb
cmpsb
mov
enter
rcll
in
in
jnp
xor
hlt
dec
cld
cmpsl
add
cmpsb
imul
cmpsb
imul
mov
lods
push
mov
xor
fsubr
hlt
lret
lcall
cmp
imul
dec
addl
shll
movsb
mov
enter
rcl
loopne
clc
int3
add
imul
pop
call
imul
movsl
imul
xor
cmc
or
sub
inc
lcall
je
fsubrl
dec
jae
in
divl
dec
clc
js
imul
imul
cmpsb
imul
sub
cmpsb
stc
stc
push
push
shll
push
and
inc
dec
shll
orb
movsb
mov
enter
cmpsb
aam
in
clc
imul
xor
imul
enter
mov
pop
adc
cmp
adc
jae
lcall
add
xor
or
and
cmp
imul
push
mov
xor
cmpsb
mov
pop
out
xor
subb
or
xchg
addr16
dec
sti
out
je
push
and
aaa
or
icebp
add
add
inc
popf
imul
mov
add
dec
ds
clc
lods
pop
addr16
dec
sbb
add
aaa
xorb
sub
aas
pop
imul
or
les
push
insl
mov
or
outsb
sbb
pop
or
add
push
mov
mov
mov
xchg
call
pushf
clc
pop
cmp
jle
inc
test
push
inc
imul
push
nop
lcall
pop
clc
test
or
push
mov
cmp
sar
add
decl
sbb
pop
pop
inc
mov
sbb
ds
out
sbb
lods
out
pop
jnp
mov
push
pop
das
dec
xchg
or
and
pop
push
decl
in
dec
mov
inc
and
sub
sbb
add
jecxz
insl
sbb
rclb
cmp
jle
je
lods
mov
les
pusha
dec
loopne
mov
mulb
inc
js
cmp
daa
mov
rclb
pusha
ss
sahf
xor
cmpsb
push
inc
ss
mov
adc
aaa
push
mov
jbe
or
scas
xor
pop
into
movb
in
nop
mov
outsb
push
mov
push
dec
jbe
push
jl
pop
jnp
dec
aas
sub
push
rclb
insl
data16
xchg
push
xchg
movsb
push
jle
repnz
mov
pop
repz
shlb
pop
addr16
and
fdiv
out
or
mov
pop
sahf
popf
outsb
xchg
push
enter
shrl
sbb
push
arpl
jo
and
insb
outsb
pop
inc
imul
pushf
data16
inc
push
xor
cmp
add
adcb
ficompl
cwtl
dec
pusha
dec
push
xor
cmpsb
mov
movb
imul
int3
data16
scas
popa
lock
inc
xor
pusha
xchg
push
lods
mov
inc
sbb
test
enter
sbb
imull
or
hlt
out
push
cld
rclb
add
iret
mov
out
mov
packssdw
call
adc
or
inc
dec
nop
outsl
rorb
mov
mov
gs
jl
addr16
outsb
je
jp
loopne
inc
cs
aaa
test
or
imul
addr16
mov
sbb
bound
dec
data16
add
fsubrs
pop
movsb
dec
or
dec
inc
xor
push
sub
mov
mov
testb
in
jbe,pt
mov
pop
imul
sar
dec
rorl
mov
pop
push
cld
and
push
pusha
jle
loopne
dec
xchg
je
stos
xor
jbe
sub
mulb
aaa
adc
lock
insb
add
nop
daa
loopne
mov
ds
sahf
cld
push
and
and
jg
push
fmul
jg
inc
imul
sub
push
fadds
xchg
int3
scas
inc
lds
int
xchg
cmpsl
or
lods
push
inc
cmp
lock
into
data16
je
outsl
data16
notb
add
jbe
fiadds
ds
push
rcrb
mov
push
inc
ss
mov
cmp
roll
push
cs
mov
sbb
ficompl
add
inc
ss
imul
idivl
daa
daa
or
push
lock
test
push
jo
pushf
imul
es
mov
cmp
push
in
rcrb
inc
mov
fmuls
push
push
cmpsb
pushf
lock
xor
adc
mov
aam
pusha
lods
mov
push
out
mov
push
mov
sbb
fsubl
loope
fldenv
es
and
mov
push
xor
fisubrs
lcall
stos
add
mov
orb
push
add
nop
push
add
add
addl
ret
push
dec
jge
dec
add
pop
push
inc
add
lods
fisttpll
push
ss
pop
inc
lods
mov
or
and
and
mov
int
pop
dec
aaa
push
pop
stos
inc
pop
lcall
add
adc
dec
xchg
loop
push
inc
mov
jnp
xor
or
dec
pop
ret
inc
inc
sahf
mov
push
pop
push
cs
and
inc
push
pop
cmp
cs
and
xor
dec
jnp
pop
sarl
inc
dec
testb
push
push
push
jbe
stos
push
xor
push
push
fbld
test
imul
dec
cmpsb
incb
incl
mov
push
jns
add
rolb
sbb
cmp
add
sub
mov
incl
pop
incb
mov
clc
aas
jmp
out
lock
jmp
rol
lods
jns
cld
add
pop
or
push
aas
pop
or
in
jg
push
sbbb
add
or
prefetch
push
mov
mull
pop
or
add
lret
add
jg
addr16
jl
out
pop
out
ficompl
ss
cmp
add
jnp
pop
repnz
lock
sbb
pop
pop
imul
aas
push
cs
push
or
addr16
pop
lock
xor
pop
std
xor
add
add
repnz
add
jle
popa
cmpsb
fnstcw
sbbb
add
mov
adc
jo
iret
rolb
and
addr16
incb
lock
addr16
jo
or
push
cwtl
pop
punpckhwd
lods
imul
push
add
push
pop
aas
into
push
add
add
stos
outsb
imul
ds
cmp
emms
ja
and
outsb
es
subb
daa
xchg
lret
cmpsb
clc
lock
aas
rcrb
movsl
pop
push
dec
add
cs
cmp
fstpl
es
lods
adc
and
loopne
stc
pop
cmp
pop
sbb
in
out
outsb
stc
mov
push
cs
xchg
or
dec
jle
mov
pop
in
les
out
outsb
jns
test
cmpb
push
push
cs
adc
add
adc
pop
cld
pop
test
xchg
lret
cmp
fsubrl
aaa
sbbb
pop
lock
lret
aaa
je
mov
cs
std
pop
cs
push
or
jg
or
push
sub
xlat
jl
mov
addl
mov
xor
sbb
push
push
sbb
jne
mov
loope
ja
lock
clc
dec
sbb
cmp
sbb
or
shlb
je
loopne
cs
pop
and
jne
imul
insb
xor
add
rorb
add
rolb
and
add
incl
and
xor
mov
add
mov
jbe
lahf
idivl
adc
daa
sbb
int3
pop
data16
cmp
xor
daa
and
xchg
std
add
xor
and
jbe
push
adc
cmp
clc
dec
push
mov
push
movb
ss
mov
cmp
ja
jbe
shlb
push
sbb
mov
dec
addl
push
mov
ja
ja
lret
ficoms
clc
push
hlt
sbb
inc
push
or
cmp
cmpsl
lahf
adc
xor
cmp
jbe
popl
daa
cmpl
lods
lock
and
daa
inc
push
mov
daa
dec
sub
aas
pop
cmp
fists
xor
mov
sub
mov
cmp
xor
jbe
and
imul
push
pop
push
lds
cmp
cmp
push
cmp
out
out
xchg
mov
pop
push
fwait
pusha
sub
cmp
push
ret
or
daa
popa
push
and
push
mov
fildl
or
int
add
daa
push
daa
push
xchg
xbegin
and
inc
inc
lahf
add
ja
testl
out
or
push
or
dec
push
pop
repz
adc
daa
xor
outsb
daa
inc
aad
fsubrs
mov
dec
dec
pop
daa
fs
jb
js
out
in
sbb
incb
repnz
dec
clc
add
in
mov
daa
add
mov
aaa
fidivl
push
repz
pushf
push
pop
push
jne
aas
sbb
fdivl
pusha
fisttps
ss
arpl
arpl
cli
mov
ds
rorl
pop
repnz
xor
es
pop
fisubl
mov
lahf
xor
outsl
nop
insb
fistpl
fs
or
push
lcall
lcall
push
aas
es
lret
jmp
ja
stos
aas
dec
inc
inc
es
dec
add
jle
fistpll
in
repz
sub
jecxz
loope
or
and
sarl
xchg
sbb
or
pop
imul
stos
movsb
out
sub
or
xor
xor
cmpsb
arpl
out
out
aas
cs
bound
mov
daa
push
inc
sub
push
mov
or
and
repz
xor
loopne
sub
mov
sbb
inc
push
shll
push
in
mov
aas
and
inc
ds
cs
aas
clc
fsubrs
cs
or
lock
pop
pop
fldenv
movsb
pop
push
xor
push
xor
dec
xchg
pop
mov
daa
subl
adc
jbe
jmp
jne
or
fcompl
or
sub
pop
dec
mov
cltd
xchg
adc
xchg
jecxz
lcall
es
int
retw
jl
and
clc
test
mov
dec
xchg
xchg
daa
fcoms
sub
dec
xor
dec
xor
popw
data16
daa
dec
daa
clc
pop
mov
dec
sarb
dec
sub
frstor
rorb
or
aas
sbb
es
aaa
mov
inc
repz
lock
cltd
cltd
push
mov
and
cltd
and
sbb
daa
adc
es
repz
in
inc
push
cmp
mov
cmp
cmp
jae
sahf
adc
outsl
inc
leave
mov
push
push
daa
cmp
daa
shlb
push
dec
and
cmp
lahf
adc
pop
pushl
inc
sub
inc
jb
and
filds
into
es
mov
scas
orl
inc
sub
imul
nop
dec
mov
repz
daa
rol
pusha
fdivs
jl
and
xchg
loop
inc
cltd
and
xchg
js
stos
sub
movsb
fs
insb
sbb
loopne
ss
push
jbe
push
andl
sbb
fwait
repz
xchg
jecxz
mov
repnz
daa
and
scas
adc
jmp
xchg
add
adc
mov
xchg
and
push
or
aas
subl
jne
push
adc
movb
xor
and
lahf
push
imulb
cwtl
xor
mov
lock
add
pop
mov
lock
jbe
call
add
mov
cmpsb
orl
cmp
add
push
xchg
xor
xor
cmp
dec
dec
inc
xchg
jge
pop
and
push
inc
adc
xor
inc
push
ret
fsubp
int3
add
scas
sbbb
sbb
pop
insl
add
gs
cltd
cmp
and
outsl
or
or
stos
in
flds
dec
jne,pn
data16
mov
sub
pop
jo
arpl
and
jbe
inc
rcrb
bound
sbb
fldcw
imul
insb
push
fs
arpl
adc
dec
jnp
fs
mov
arpl
inc
inc
cmp
push
inc
xchg
outsb
xor
mov
jb
xchg
jbe
mov
je
arpl
push
mov
and
add
and
lretw
jns
inc
insl
sub
pshufw
mov
add
push
adc
inc
enter
aaa
cmp
add
and
xchg
xor
xchg
adc
ficompl
cwtl
addr16
dec
imul
xor
inc
sbb
popa
sbb
fs
subl
pop
mov
ret
insl
dec
or
jmp
outsb
dec
adc
or
jb
andl
addr16
int3
or
inc
sbb
adc
push
mov
gs
jo
daa
bswap
mov
dec
pop
cmp
stos
mov
add
jp
pusha
adc
sub
mov
push
inc
ret
imul
sub
jp
fisubl
outsb
pop
add
pop
pop
jo
js
lods
bound
or
push
sub
out
sbb
ljmp
add
jno
fs
nop
mov
cmp
lcall
xor
insb
ja
sbb
scas
shrl
daa
jg
add
es
addb
pop
rcr
xor
jne
jo
sbb
jae
push
out
fcoms
push
arpl
push
data16
lock
inc
adc
xor
inc
adcb
push
aaa
ja
outsl
rcl
mov
sub
ja
jbe
bswap
pop
pop
and
jmp
dec
push
ljmp
btc
adc
ja
imul
or
mov
jne
add
push
jbe
pop
xchg
adc
arpl
dec
adc
inc
cmp
data16
xor
mov
cmp
ljmp
out
or
rclb
jae
fildl
adc
add
jmp
imul
inc
and
cmp
xchg
mov
addr16
lret
stos
push
sti
mov
arpl
stos
rorb
ret
push
popa
push
jbe
lock
iretw
imul
aaa
inc
cmp
fs
push
jbe
sbb
sbb
shrb
jo
out
insl
fisubs
dec
shlb
repz
loope
mov
inc
pop
divl
jp
scas
roll
jle
mov
push
ret
jge
xorb
xchg
cmp
imul
cmc
push
jo
and
in
sub
jne
mov
loopne
ficomps
aaa
ja
mov
push
arpl
lret
lds
inc
inc
js
lds
iret
add
jecxz
ret
les
push
lods
sub
adc
fcoms
cmp
add
out
jo
scas
add
insl
arpl
les
lods
mov
jecxz
pop
jle
pop
aaa
xchg
mov
jae
xor
and
cmp
ljmp
ss
dec
inc
pop
das
or
mov
push
and
dec
pop
sub
and
aaa
aas
jo
push
sbb
fstps
dec
out
dec
loope
xchg
mov
sub
adc
mov
adc
movsl
ljmp
loopne
xor
push
inc
jae
xchg
cmc
push
fwait
es
pop
xor
out
pop
inc
cmp
push
push
es
je
push
lret
sbb
mov
pusha
outsl
xchg
pop
xchg
inc
stos
bound
sub
stos
cmpsb
bswap
push
xchg
andl
jo
pop
push
inc
jmp
shl
jno
dec
dec
jp
rolb
adc
dec
roll
js
add
sub
sbbb
xlat
mov
pop
push
arpl
xor
je
lahf
data16
push
pop
in
bound
stos
jb
mov
cmp
sub
xor
mov
and
push
jbe
roll
outsb
mov
pop
je
stos
ss
add
rorl
mov
lods
xchg
push
add
lret
fisttps
push
inc
and
push
or
xchg
loop
popf
mov
or
addr16
adc
scas
addr16
addr16
xor
add
outsb
or
or
lds
into
adc
imul
jmp
cmp
shrl
adc
aas
shrb
and
xor
xor
dec
push
outsb
jo
sarl
push
sub
mov
shrb
add
push
loop
dec
jp
adcb
daa
mov
sub
ret
cmp
ja
pop
sbb
push
add
js
mov
cli
ss
inc
dec
sbb
sbb
inc
addl
mov
call
pop
inc
xchg
insb
cmpsb
push
fwait
jno
arpl
inc
shll
jae
sub
mov
daa
repz
adc
dec
jo
dec
pop
insb
das
or
inc
mov
jmp
cmp
sbb
outsl
insb
or
inc
stos
loopne
inc
adc
pop
push
aad
inc
push
push
adc
sub
out
inc
dec
ja
je
push
dec
mov
jbe
xorl
inc
inc
add
push
xor
repnz
add
fiadds
or
xchg
loop
jbe
mov
mov
ds
repz
cmpsl
pop
xor
sahf
add
pop
inc
test
lcall
roll
popa
adc
jp
xor
rolb
fidivl
or
imul
sub
inc
out
lea
mov
mov
cmp
sub
push
sub
or
sbbl
jo
popa
adc
clc
and
sahf
or
les
fbld
and
pop
loopne
dec
daa
inc
stos
rorb
xchg
bound
or
aaa
add
mov
lcall
iret
insl
xchg
push
sub
dec
lods
outsl
ret
adc
sbb
sub
out
adc
fs
sbb
xor
push
sub
adc
les
pop
jno
mov
mov
or
cmp
pop
mov
outsl
xor
mov
jno
add
mov
add
jecxz
pop
lea
xchg
jmp
push
and
mov
jo
xchg
or
jecxz
push
mov
inc
push
stos
shl
enter
cmp
push
jo
pop
or
inc
cmpsl
mov
fwait
push
xor
es
mov
add
add
mov
bound
data16
mov
add
jb
cmc
in
inc
dec
data16
adc
xorb
dec
dec
or
add
push
add
gs
cmpsl
add
outsb
dec
repz
sbb
addl
sbb
imul
adcb
daa
ds
sub
push
push
xchg
push
cmpsb
and
daa
or
cmp
mov
or
add
rolb
jbe
jbe
push
push
dec
xor
xchg
push
into
addr16
call
ret
jns
sbb
outsb
mov
daa
sbb
sbb
sbb
jne
inc
addb
loopne
jae
inc
mov
pop
jo
fs
mov
inc
das
cmpsl
arpl
push
insl
repz
adc
fnstsw
ds
sti
imul
inc
add
outsb
jecxz
adc
imul
lret
inc
jp
sub
lods
xor
js
push
fbld
sbb
sahf
mov
xor
jbe
mov
je
insb
sub
out
add
xor
call
mov
out
sub
pop
and
imul
ret
and
push
or
dec
or
add
ret
sbb
imul
repz
inc
cmpsl
xchg
ss
dec
stos
pop
movsl
dec
dec
dec
pop
inc
mov
je
es
adcl
jg
jnp
add
dec
fs
push
ret
and
adc
xor
sub
push
scas
stos
sarl
and
xlat
mov
inc
adc
mov
mov
pop
add
xchg
iret
dec
shlb
sub
outsb
dec
bnd
out
jae
bound
imul
scas
scas
lods
or
repz
pop
sub
ja
repnz
ja
inc
pop
repnz
mull
mov
add
push
jo
test
xlat
push
jae
adc
mov
rolb
dec
out
and
insl
fwait
imul
sub
sbb
shll
imul
push
jb
adc
inc
ret
je
add
jecxz
and
sub
and
and
and
aaa
cli
push
push
push
mov
mov
inc
add
mov
imul
push
loopne
push
lods
lahf
jle
add
xchg
pop
pop
insb
imul
mov
aaa
dec
out
adc
addr16
outsl
mov
xor
and
or
mov
les
fwait
sbb
adc
fmuls
xor
mov
orl
mov
pop
adc
jo
js
lods
adc
ret
insl
cmp
xchg
out
gs
add
and
adc
fcomip
dec
xor
and
mov
xchg
mov
mov
arpl
and
sbb
test
or
mov
xor
inc
imul
adcl
inc
and
pusha
xchg
mov
pushl
cs
inc
push
lret
and
mov
adc
adc
inc
int
je
daa
imul
fimull
jo
loope
stos
cmp
mov
push
mov
insl
stos
cmp
and
imull
adc
mov
bound
sbb
das
jae
mov
lret
fs
subb
pop
call
fmull
dec
repz
xchg
fisubl
pop
shr
inc
repz
insb
fisubl
ja
pop
cmp
xor
addr16
adc
or
jecxz
lods
pop
sub
adc
add
cmc
ret
mov
imul
add
jnp
int3
sarb
dec
addr16
and
aaa
pop
andl
or
xor
mov
es
sub
shlb
xchg
cmp
xor
out
inc
adc
inc
jp
faddl
cmp
pop
dec
inc
fiaddl
adc
mov
and
xchg
dec
mov
call
and
daa
mov
shll
outsb
mov
push
xor
sub
bound
pop
adc
push
jo
cs
cmp
lcall
inc
imul
jae
inc
sti
lods
and
jae
das
or
ret
mov
mov
cli
sub
xchg
outsw
sbb
shlb
or
adc
inc
daa
jns
jne
adc
insl
and
xchg
test
and
or
addb
pop
dec
fistpl
mov
and
imul
inc
add
daa
cmp
scas
stos
or
cmp
inc
dec
sub
jns
push
sub
sbb
shlb
shrb
or
fcmovnb
mov
out
push
arpl
push
cmp
cmp
dec
daa
sub
outsb
fs
adc
add
ret
xchg
add
push
adc
xor
inc
adc
push
repz
rolb
andb
add
add
jle
push
inc
fsubrp
xorps
add
push
push
push
out
or
pop
add
fwait
insl
rcrl
pop
xchg
pop
or
ds
or
fdivs
ret
aas
iret
inc
and
adc
shrb
jbe
or
mov
sbb
aaa
orl
pop
adc
adc
push
repz
iret
lcall
pop
jbe
or
cmpsb
dec
dec
mov
mov
shll
loopne
mov
push
push
ret
stos
mov
mov
add
bound
inc
sbb
push
jp
dec
jne
jne
inc
sbb
adc
sbb
add
xchg
pop
pop
outsl
pop
or
lods
sub
and
test
arpl
add
ret
sub
lret
pusha
test
inc
sbb
xchg
pop
mov
jmp
pop
mov
xchg
inc
pop
sub
inc
add
dec
or
cmp
push
adc
inc
jp
jecxz
imul
pop
aas
lahf
jno
bound
iret
insb
lret
push
mov
push
xor
and
mov
jne
daa
and
orl
xchg
inc
scas
mov
fdivrl
mov
push
lahf
cmpsl
stos
fwait
aam
lods
popa
sub
repz
jecxz
jo
dec
roll
out
add
mov
mov
fwait
mov
fsubs
sarl
fimull
push
and
jb
cmp
loop
fisttpl
bound
les
lods
scas
push
push
push
jo
mov
mov
pop
adcl
adc
scas
arpl
das
aas
sbb
dec
push
dec
jmp
addr16
adc
das
sub
ret
xor
and
mov
pop
dec
pop
jmp
mov
cmp
push
push
cmp
mov
aas
notl
adc
stos
iret
pop
adc
sbb
pop
adc
pop
push
pop
adc
das
sbb
xor
push
push
jg
push
pop
xchg
jp
outsb
xor
fldt
cmp
repnz
movb
push
das
stos
or
test
pop
and
mov
jbe
push
cmp
andb
pop
jg
aam
mov
sbb
xor
dec
mov
xor
push
mov
arpl
sbb
imul
loopne
das
adc
enter
push
mov
inc
loopne
imul
rcrb
and
push
mov
sub
addr16
adc
imul
inc
pop
push
aaa
cli
jae
ret
xor
jo
and
sub
inc
pusha
cmp
cmp
repz
mov
dec
jg
or
punpcklwd
pop
xchg
das
ja
pop
inc
movsb
scas
or
jg
int
stos
mov
fwait
mov
add
add
testb
subb
cmpsb
mov
test
pop
cmpsl
xchg
lea
adc
les
inc
out
aam
loop
or
mov
outsl
mov
enter
nop
sub
sub
add
fadds
popa
movsb
loop
lret
ret
pop
addr16
and
bound
scas
or
imul
sbb
mov
arpl
adc
sahf
push
or
inc
movsl
jmp
arpl
xchg
pop
jmp
xor
pop
push
pusha
xor
push
or
mov
jmp
cmp
aaa
mov
pop
fwait
cmp
pop
jo
xchg
jp
jb
mov
inc
pop
xor
popa
insb
mov
mov
inc
leave
add
dec
fsts
jno
cwtl
ret
pop
lret
dec
loop
sbb
inc
fiaddl
out
mov
push
fs
popf
dec
je
and
int3
mov
adc
xor
lods
mov
sub
mov
or
push
dec
cmpsb
push
adc
in
outsl
sub
or
push
adc
cmp
xor
adc
mov
adc
push
adc
dec
mov
mov
jb
add
push
push
jo
dec
adc
and
ja
inc
push
insl
daa
inc
loope
fisttps
jbe
jns
sub
sub
decb
inc
fwait
sbb
push
push
push
dec
inc
dec
sub
add
dec
imul
negb
xchg
adc
inc
pusha
fisubrs
mov
sbb
outsb
repnz
outsl
retw
daa
movsl
adc
adc
add
xorl
jo
mov
divl
xchg
popa
sbb
inc
insb
and
xor
inc
das
je
mov
pusha
push
aas
jns
lahf
xor
push
out
out
push
addr16
daa
xorl
lret
test
mov
cmp
test
movsb
lock
add
je
ficoml
fs
xor
or
xor
arpl
lds
push
and
arpl
jns
pop
insl
inc
add
xor
cmp
movsb
cmp
in
push
inc
dec
dec
xchg
or
adc
test
xor
fcoms
es
outsb
out
popa
data16
adc
jne
sub
sbb
loop
adc
push
jl
fisttpll
lcall
mov
inc
jne
les
mov
dec
decl
hlt
and
shlb
jp
jns
mov
cmp
push
shrb
gs
out
sbb
call
cmp
pop
push
movsb
hlt
es
cmp
vmovsd
adc
sub
orb
fcoms
shl
dec
dec
xor
adc
adc
lret
enter
sub
dec
adc
call
pop
mov
add
sbb
push
inc
lods
add
mov
icebp
sbb
or
and
inc
jae
cltd
insl
add
mov
dec
mov
fnsetpm(287
and
test
and
push
scas
leave
adc
out
dec
out
jg
mov
sbb
mov
xor
mov
insb
test
or
push
sbb
fsts
inc
xor
shll
xchg
sbbl
bound
adc
sbb
sahf
xorl
shrl
clc
dec
daa
pusha
inc
sub
xchg
or
loop
ret
sbb
ret
or
fs
push
int
jns
stc
fwait
sbb
es
mov
in
adc
and
xchg
mov
xchg
jge
movsl
adc
popf
es
sbb
mov
xchg
jg
xor
sub
adc
and
ss
mov
iret
xor
xchg
and
inc
and
add
pop
mov
xchg
pop
stos
in
push
mov
fstl
inc
in
adc
out
xchg
dec
imul
gs
repnz
jae
sbb
push
insb
push
add
jp
xor
or
shll
inc
popa
call
int3
xor
push
cmpl
cmp
out
mov
push
push
inc
ja
retw
das
jp
outsl
jmp
adc
jp
rcrl
fnstenv
insl
jae
jmp
or
lret
xchg
sub
shl
pop
push
arpl
popa
pop
jl
xor
xor
out
ret
or
insl
out
sbb
adc
cmpsb
fsts
lret
shlb
cmp
rcl
mov
adc
adc
clc
xor
push
int3
dec
inc
xor
push
clc
ret
jns
dec
lea
dec
dec
jge
cmp
adc
jno
leave
lds
shlb
inc
shrl
and
cmc
add
scas
sahf
loope
inc
add
outsb
mov
aaa
rolb
clc
jmp
std
js
add
push
push
inc
xor
or
add
mov
adc
roll
dec
arpl
cmpsb
xchg
dec
loopne
loope
xor
cmp
test
push
or
xlat
adc
dec
adc
pop
or
lds
cmc
or
cs
data16
bswap
mov
mov
insb
mov
xor
or
and
push
loope
shll
jg
or
orl
lcall
outsb
lahf
or
data16
in
pop
adc
add
repz
or
and
cmp
xor
pusha
or
and
push
movsl
jo
sbb
or
in
ficoms
dec
push
sbb
jmp
inc
mov
movsb
ret
fadd
xchg
or
xchg
es
bound
add
or
mov
iret
scas
inc
dec
mov
push
test
and
leave
int3
mov
and
inc
xorl
push
movsb
pop
add
fnstenv
pop
pop
dec
dec
or
add
cs
xchg
add
and
daa
add
inc
add
push
nop
add
sbb
mov
sub
add
sub
add
insb
cltd
jo
mov
inc
adc
inc
xor
mov
ret
adc
movsl
sub
dec
popa
rol
addb
popa
fcomip
insb
insb
outsl
arpl
gs
mov
outsl
xchg
lcall
xchg
faddl
je
and
jg
xchg
xor
push
mov
inc
nop
sbb
imul
dec
sbb
fldcw
add
fwait
sub
cltd
pusha
bound
adc
inc
inc
ss
jns
inc
pop
filds
and
rorb
outsl
mull
sub
add
enter
ja
popa
sub
add
jb
push
dec
cmpsb
lock
push
xorb
and
xor
popa
int3
les
pop
pop
shl
add
cmp
add
xchg
add
ret
jb
dec
dec
insb
in
push
mov
and
loopne
pop
dec
jge
popa
xchg
fadds
sbb
int
inc
fisttpll
inc
daa
push
lret
pop
test
or
sbb
imul
pop
cltd
divl
mov
ret
push
lock
lds
and
sbb
jp
add
faddl
ds
ss
jge
sub
mov
pusha
mov
inc
and
imul
andb
pop
pop
add
sbb
jnp
out
pop
sbb
imul
sub
and
xor
cs
pop
dec
fs
or
js
in
jns
jb
inc
push
jnp
sub
rcrb
mov
loopne
test
gs
sub
les
test
inc
xchg
pushf
fwait
sbb
ret
push
or
js
fcomps
mov
adc
orl
xor
shlb
inc
push
sub
mov
inc
inc
xor
addl
xchg
sbb
test
sub
sbb
xorl
mov
stos
pop
push
pop
jnp
rcl
hlt
cmp
sbb
sbb
mov
add
adc
ret
sub
mov
add
push
pop
jo
jae
pusha
add
jno
sti
sub
mov
sbb
mov
mov
xchg
mov
lahf
loop
subb
add
daa
or
leave
sbb
push
pop
push
loopne
imul
push
je
gs
mov
aaa
fmuls
or
loopne
outsl
adc
mov
push
shrl
inc
test
ja
and
movsb
movsl
sub
test
push
je
inc
popw
fwait
ja
adc
xor
rorb
lahf
out
and
addr16
push
stos
movsl
mov
or
inc
sbb
data16
push
mov
inc
inc
pop
jae
push
sbb
aaa
in
or
aas
fmuls
xorb
sub
or
fwait
or
insl
or
or
and
and
or
push
cmp
imul
pop
adc
pusha
mov
dec
inc
sub
jmp
lret
pop
or
cmp
xchg
pusha
test
daa
mov
sub
pusha
ja
pusha
sub
add
mov
mov
aad
mov
ja
and
shlb
add
enter
sbbl
in
mov
sbb
cmc
iret
out
pop
and
add
call
and
adc
test
or
inc
insb
dec
cmp
nop
aaa
mov
jb
push
rcr
jne
rcrb
daa
lcall
jbe
aam
in
sbb
leave
push
dec
push
xor
mov
mov
pop
adc
pop
push
movsl
adc
and
and
cmp
push
jmp
rclb
int3
movl
add
int3
add
insb
jae
adc
push
xor
jnp
ret
loope
jo
jns
and
and
push
outsl
or
mov
adc
push
xor
jbe
push
jae
push
lret
xchg
xchg
cmpsb
jo
inc
push
ret
lea
xor
stc
loope
sub
movsb
popa
cmpb
inc
mov
jbe
in
pop
dec
mov
or
push
cld
inc
push
pop
arpl
lahf
mov
dec
mov
negl
mov
lahf
jbe
push
pop
sub
inc
outsl
push
cmp
in
and
push
imul
add
ja
nop
add
jp
mov
and
insb
xchg
outsb
xlat
push
shl
and
pop
ss
adc
ret
xchg
mov
mov
daa
push
and
push
pusha
inc
xchg
jno
sti
adc
ficoml
jnp
adc
outsl
jo
daa
cmpsb
push
bound
jae
and
inc
daa
insb
test
outsl
and
mov
pop
pop
ret
arpl
and
rorb
icebp
sub
cwtl
adc
mov
push
cmpsl
and
mov
sub
ds
frstpm(287
les
cmovae
ss
movsb
jmp
cmpsb
jno
iret
sub
xchg
inc
mov
repz
addl
jbe
imul
inc
dec
add
hlt
mov
mov
movsb
adc
push
cmpsl
push
inc
jno
and
aas
inc
push
dec
imul
sub
mov
sbb
push
hlt
and
and
push
shlb
jg
loopne
pop
and
bound
out
loope
outsl
out
testl
xor
inc
add
dec
data16
sub
inc
and
mov
aad
mov
sub
imul
or
and
pop
insl
xchg
outsb
adc
jno
loop
mov
dec
jne
and
ret
fs
fwait
xchg
sbb
push
andl
fcoms
push
adc
aaa
or
sub
push
jo
and
push
mov
pop
pusha
pop
adc
daa
aas
dec
adc
mov
or
xor
lods
movsl
lea
test
add
test
lcall
adc
pusha
les
add
sbb
dec
mov
adc
mov
xor
jbe
pusha
and
sbb
cli
cmpsb
daa
push
insl
outsb
addb
mov
shll
mov
imul
sbb
stos
mov
jo
inc
ret
rcrb
inc
adc
and
outsl
lret
jmp
push
sub
push
cmpsl
int
pop
cmp
cmp
ss
jbe
push
sub
popa
arpl
pop
inc
or
mov
fadds
adc
xchg
sbb
sub
jmp
cmpsb
adc
fidivl
cmpsl
shrl
mov
cmpsb
loop
push
mov
push
or
ss
pop
test
stos
es
jne
and
and
or
inc
icebp
inc
dec
fwait
into
popf
adc
add
cltd
mov
sbb
mov
pop
enter
push
or
sub
adc
ret
mov
xchg
imul
xorb
push
adc
push
bound
mov
lods
insl
repz
xchg
mov
sbb
imul
push
in
and
fnstenv
mov
imul
inc
inc
and
adc
xchg
mov
test
or
jo
cmp
inc
jb
pop
mov
and
out
lea
ret
daa
and
fadds
sbb
xchg
and
jne
push
fs
push
stos
mov
inc
mov
stos
cs
mov
push
push
adc
sbb
sbb
inc
adc
inc
push
fiaddl
sbb
push
jecxz
roll
daa
inc
mov
mov
pop
int
ds
mov
add
push
xor
adc
pop
add
add
fcoms
cltd
sbb
sbb
sbb
mov
das
xchg
push
inc
fmuls
int3
outsl
sbb
mov
cmp
xchg
arpl
or
ficoml
test
ss
pop
pop
adc
insl
inc
insb
dec
push
adc
add
xor
fs
inc
sbb
push
inc
xor
gs
mov
cmpsl
sub
aaa
cmpsb
inc
adc
dec
sbb
ss
loopne
pop
adc
lods
and
insb
sub
lods
fbstp
pop
sbb
les
lods
sbb
pop
push
or
dec
data16
subl
fcompl
and
ret
and
fcoms
jmp
shlb
test
xor
repz
or
push
loope
push
jmp
jle
inc
adc
cmp
ds
addl
add
inc
dec
orb
fs
inc
dec
nop
jecxz
les
push
loop
mov
cmp
daa
pop
inc
call
jae
add
mov
pop
inc
mov
push
inc
cmpsb
ret
dec
adc
sbb
sbb
and
std
xchg
add
or
prefetcht0
add
or
add
dec
or
and
push
stc
incl
ja
inc
adc
inc
xor
sbb
sbb
push
push
push
adc
call
mov
or
or
or
ljmp
or
adc
sbb
sbb
inc
push
dec
and
lock
or
mov
pop
sysret
and
test
add
idivl
or
es
sub
sub
adc
push
cmp
adc
push
jns
mov
adc
sub
sbb
xor
adc
gs
jle
mov
push
pop
adc
shll
pop
lods
jmp
sub
sbb
arpl
cmp
pop
outsb
lock
mov
add
adc
aas
adc
push
push
pop
adc
cmp
xchg
add
adc
pop
adc
push
sbb
adc
sbb
adc
dec
sub
pusha
lock
or
adc
or
subl
xor
jns
hlt
sub
sbb
xor
sub
dec
adc
sbb
cld
sbb
adc
cmpsl
sti
pop
cmpl
or
push
sbb
neg
jmp
adc
or
or
add
jp
lock
pop
add
out
call
push
adc
rolb
push
sbb
lock
add
or
pop
push
adc
adc
or
idiv
psrlw
lock
subl
sub
orb
stos
pop
adc
fiadds
add
jno
or
daa
adc
sbb
pusha
lock
adc
and
adc
pop
mov
adc
adc
push
adc
mov
add
mov
or
scas
and
or
adc
sbb
in
mull
adc
sbb
and
and
sbb
je
inc
inc
xadd
mov
cmpsl
mov
adc
adc
sbb
or
adc
sbb
jbe
inc
adc
adcl
sub
adc
or
xchg
add
or
mov
and
or
add
cmpsl
mov
pop
or
adc
inc
or
cli
call
sbb
add
jmp
in
testl
lock
add
lock
mov
add
add
or
xlat
mov
add
ss
sub
outsl
incl
dec
dec
jae
cmp
daa
adc
xor
adc
cmp
adc
adc
mov
lcall
jae
aaa
lock
add
inc
add
aas
inc
in
lcall
cld
and
mov
inc
push
pop
adc
adc
sub
adc
adc
xor
idiv
inc
mov
sbb
and
cmp
es
adc
mov
decl
sbb
cmp
sub
sbb
cmp
inc
add
mov
dec
sbb
cmp
cmc
jle
cmp
pop
adc
pop
cmc
inc
push
sub
adc
inc
call
mov
adc
pop
sub
nopl
outsl
js
jnp
cmp
or
or
loopne
jbe
push
add
dec
or
das
and
and
push
pop
pop
push
xor
push
adc
pop
cmp
inc
sub
and
sbb
or
adc
pop
adc
sbb
push
lret
ljmp
pop
sbb
adc
or
push
pop
sbb
adc
adc
and
push
and
jg
sbb
or
aas
sub
mov
pop
fstps
cmp
mov
arpl
add
ljmp
inc
jno
and
add
adc
add
or
rclb
push
or
out
js
das
pop
or
pop
jg
pop
jle
ss
pusha
add
xor
inc
ss
push
add
iret
add
xor
push
add
sbb
sbb
and
sub
cmp
sub
ds
ds
add
adc
or
mov
dec
xor
stos
xor
cmp
out
add
lahf
sbb
sub
incl
sub
leave
or
fwait
add
inc
sbb
jno
inc
jg
std
add
test
cmp
xor
pusha
add
shll
jg
sub
pop
push
or
or
imul
aas
push
ja
sub
lret
jle
subl
pop
sbb
dec
aaa
jl
mov
imul
adc
jg
subb
ret
inc
inc
sbb
or
or
jnp
decb
adc
arpl
pusha
dec
movsl
lock
dec
incb
pop
pop
daa
adc
mov
sbb
xchg
cmp
sbb
nop
pusha
ljmp
sbb
pusha
cmp
sbb
cmp
pop
push
xor
orb
lock
add
aam
push
test
xor
sub
aaa
jg
xlat
idiv
cmpsl
xchg
sbb
pop
pop
pop
dec
dec
push
lock
add
xor
loop
hlt
jmp
pop
push
outsl
pop
adc
lea
push
insb
sbb
xchg
sbb
push
adc
loopne
or
add
or
push
sbb
or
not
adc
mov
adc
jmp
push
daa
daa
sbb
jns
mov
aas
sbb
and
sbb
cmp
or
cmp
sbb
iret
or
xor
jbe
and
cmp
dec
cld
aas
clc
mov
lock
lahf
add
popf
pop
and
or
and
sbb
xor
or
cmp
mov
jp
pop
cmp
ud0
call
pop
inc
cmp
xchg
push
pop
inc
inc
or
xchg
and
inc
sbb
sbb
adc
pushl
push
or
push
add
or
pop
shlb
pop
sbb
adc
add
insl
xchg
add
mov
orl
lock
xchg
test
adc
aaa
push
popa
das
sub
or
or
add
pop
cmp
xor
cmp
inc
or
sbb
mov
cmp
or
outsb
or
pop
or
gs
adc
and
decl
adc
adc
aas
or
or
sub
jg
not
cmp
pop
sbb
add
or
or
test
out
adc
or
sub
out
inc
scas
xchg
adc
or
into
mov
jg
scas
adc
popa
mov
pop
and
movb
bound
in
push
sbb
inc
add
sbb
sbb
push
bound
push
icebp
mov
mov
or
mov
hlt
xor
adc
out
adc
decb
adc
pusha
testl
lods
inc
pop
adc
push
pop
movsb
push
sub
push
jb
mov
mov
lods
shll
add
jno
popa
push
popa
test
ret
subb
inc
and
mov
adc
subb
adc
loop
clc
add
addb
loop
adc
xchg
negl
jg
pop
xor
dec
pop
and
popa
add
daa
jo
cmp
pop
jge
in
inc
adc
out
cmpsl
incl
cmp
movhps
or
or
sbb
adc
sbb
push
or
xlat
fistps
add
pop
add
adc
lods
inc
daa
and
push
gs
adc
or
add
inc
cltd
shl
jmp
dec
jg
jno
test
dec
cmp
pop
mov
pop
pop
dec
push
sbb
sub
sub
or
push
push
push
ja
lcall
rolb
lea
inc
sbb
imul
sub
mov
and
cmp
push
lock
add
sti
add
ss
push
sbb
cmp
sbb
add
push
pop
push
js
push
pop
xor
sbbl
and
pop
pop
out
out
adc
pop
into
add
fsubs
jg
arpl
pop
xor
mov
jg
adc
sbb
add
jmp
adc
mov
add
dec
int
dec
add
sbb
xor
jl
adc
into
pop
test
and
lods
daa
push
cmp
and
pop
inc
incl
push
add
push
lock
inc
adc
and
add
add
xor
cs
sub
and
add
push
pmaxub
lcall
or
adc
mov
pop
mov
jo
das
scas
inc
and
and
and
and
jo
incl
mov
pop
orl
and
xchg
into
add
or
adc
jmp
mul
sbb
es
adc
aas
add
mov
or
incl
out
sub
push
xchg
add
jne
sbb
lock
push
js
das
cmp
bound
setne
inc
pop
or
cmp
or
add
cmp
push
push
or
or
push
sbb
lock
adc
add
adc
sub
sbb
cmp
pop
movsl
sbb
cs
adc
sbb
push
jge
cmpsl
inc
or
jns
inc
sbb
add
dec
sbb
aas
sbb
pop
pop
push
or
outsb
or
faddl
pop
or
pop
mov
fcmovu
test
popa
fistps
movsb
out
push
daa
cmp
xlat
ret
insb
and
adc
popf
and
add
xchg
add
rol
insl
jg
ret
or
pop
push
imul
aas
ss
ss
push
fistps
scas
and
insb
lock
sbb
adc
aad
lock
adc
sbb
jnp
adc
cmpsl
std
loopne
add
pop
or
add
adc
push
push
je
xchg
add
adc
cmp
nop
mov
sub
cmpsl
push
call
or
inc
ss
and
movq
aaa
call
and
sbb
mov
pop
cmpsl
decl
mov
push
cmp
add
jns
mov
arpl
xchg
jmp
jnp
inc
and
dec
mov
push
and
dec
fwait
inc
cld
mov
xchg
xchg
adc
pop
add
arpl
push
or
add
adc
fnstcw
push
dec
rclb
adc
jp
jb
aas
jecxz
lea
sbb
dec
sub
push
xchg
jae
push
mov
data16
lcall
xor
push
dec
es
xor
and
jns
insl
jge
add
cmp
and
jo
cld
pushl
lock
add
das
push
and
mov
aas
loope
sbb
add
lahf
push
adc
sahf
adc
dec
add
pop
call
ss
enter
in
xchg
int
pop
pop
jl
lock
jne
jne
mov
outsb
jne
pop
popf
ljmp
hlt
adc
mov
or
mov
add
pop
sbb
jg
cmp
pop
fsts
pop
pop
dec
cmp
pop
mov
call
pop
adc
jnp
test
jp
ss
negl
pop
mov
add
push
sbb
lods
in
adc
push
inc
sbb
pop
mov
and
or
adc
shlb
int3
roll
push
rcrl
test
popf
filds
push
mov
insl
or
push
or
push
add
adc
insb
or
cmovno
jnp
or
mov
verw
call
and
add
sbb
call
adc
sbb
sbb
sub
cmpsb
add
push
add
outsb
lods
mov
jg
or
pop
sub
rdpmc
adc
jmp
adc
xor
aas
and
push
idiv
lds
dec
sbb
inc
es
cmp
sub
pop
and
pop
and
dec
sub
imul
pop
sbb
jns
adc
sbb
or
jge
ja
add
pusha
pop
or
add
cmp
cmp
xor
mov
add
jbe
das
or
push
adc
aas
sbb
mov
repz
adc
jmp
mov
or
or
es
aas
adc
scas
loope
cmc
jnp
inc
pop
lds
or
jmp
jmp
movsb
or
loop
or
sbb
adc
sbb
lcall
enter
lock
add
dec
insb
or
mov
popa
idivb
dec
fs
shlb
adc
or
add
xor
sar
call
adc
add
inc
loope
and
inc
and
insl
shl
xlat
add
dec
push
pop
mov
mov
loop
lods
imul
test
fwait
pop
cmp
add
call
out
or
xor
pop
cmp
pop
cmp
sub
decl
cmp
lahf
dec
push
sbb
popa
cmp
dec
pop
inc
sub
dec
arpl
cmp
push
jae
jl
push
or
movlps
sbb
push
int
jp
push
test
sbb
cmp
sbb
sbb
mov
out
aas
inc
addb
xor
adc
cs
and
fcomi
cltd
sbb
push
bound
push
push
or
aas
inc
add
neg
xchg
outsl
add
push
adc
pop
call
inc
add
pop
jp,pn
jb
pusha
sbb
push
push
fs
or
jmp
adc
mov
mov
pop
iret
sbb
sbb
adc
loope
jae
sbb
and
mov
xchg
pop
or
jno
ja
xchg
stos
inc
nop
mov
mov
or
loop
cli
dec
adc
das
push
cmp
adc
and
hlt
ljmp
dec
or
call
mov
inc
sub
sbb
and
aas
lock
test
loope
popl
inc
push
push
adc
sbb
or
movsl
adc
aas
jnp
cmp
xchg
insl
cmp
or
or
aas
test
push
test
das
inc
adcb
cmpsl
adc
jp
sti
dec
aaa
or
daa
adc
pop
and
loopne
jmp
iret
push
or
cmp
pop
cmp
outsb
or
and
adc
and
cmpsl
sbb
push
cltd
adc
or
or
or
jg
adc
mov
or
mov
or
or
and
add
adc
jno
ds
and
or
pop
decb
aas
add
mov
inc
sub
add
pshufw
stos
or
pop
add
push
in
inc
dec
cld
incl
sub
addb
cvttps2pi
sub
push
and
dec
push
ret
je
lock
add
lock
inc
lock
lcall
jmp
aas
sbb
pop
popl
and
mov
paddd
inc
lock
mov
lock
add
or
xchg
enter
add
sub
and
add
mov
mov
xchg
mov
push
mov
lock
inc
adc
xor
daa
imul
mov
jle
pushf
add
adc
mov
cld
add
popa
adc
jo
mov
push
bound
cmp
and
sahf
lock
inc
cmp
cmp
sub
out
push
incl
imul
mov
stc
xchg
or
iret
mov
push
jns
xchg
lock
or
jl
pop
push
xor
pop
and
jg
daa
jmp
imul
lock
clc
decl
insb
call
lock
push
js
lock
add
cli
xor
jl
dec
cltd
adc
mov
addr16
incl
pusha
push
lock
add
lock
and
outsl
lock
loopne
incl
or
and
sbb
adc
aas
push
pop
add
std
jmp
bndldx
inc
add
and
add
pop
adc
dec
sti
loop
incl
enter
cmp
xor
xchg
lock
add
aas
adc
dec
jmp
pop
adc
pop
repz
xchg
scas
imul
mov
and
xchg
aaa
sbb
xor
rolb
aaa
or
jae
mov
aas
ret
sub
or
jecxz
jne
enter
or
jge
adc
push
pop
adc
paddd
ja
mov
or
and
add
or
fwait
or
repz
pushf
mov
sbb
xorl
adc
ret
jbe
jne
insl
add
push
push
dec
imul
push
pop
popf
adc
sub
add
mov
xor
psubw
xchg
leave
cmp
unpcklps
sahf
cwtl
outsb
lea
rclb
pop
ss
fs
insl
ret
pop
pop
pop
pop
lock
pushf
fisttpll
push
or
std
xchg
sbb
or
jne
lock
jae
getsec
dec
jns
pop
sub
sub
clc
jecxz
xlat
inc
mov
dec
mov
or
pop
sub
lds
loopne
clc
insl
mov
sub
jge
adc
sbb
jne,pt
adc
adc
pop
lock
sub
pop
pop
cld
sbb
jmp
push
or
fisubl
dec
pop
pop
into
inc
adc
daa
dec
clc
pop
incb
adc
add
push
and
sbb
pop
shlb
jg
insb
xor
and
push
or
sub
xchg
stos
add
sbb
mov
or
or
or
or
sbb
or
and
mull
or
and
fcomip
push
adc
push
add
and
mov
lcall
and
and
outsl
jb
and
out
cltd
fnsave
jb
jns
jp
and
idivl
mov
adc
sbb
pop
cs
jg
jmp
sbb
adc
jg
sbb
cmp
add
fadds
adc
jbe
dec
jle
sub
adc
or
push
push
or
adc
jb
and
cld
call
sub
inc
jo
arpl
test
adc
lock
add
xlat
cmp
lahf
cmp
pop
add
adc
lock
inc
loope
jg
xor
inc
jge
in
xchg
adc
dec
mov
pop
jmp
jo
fs
sbbl
out
loop
popl
adc
push
cld
pop
xchg
add
in
pop
out
decl
clc
fnsave
inc
or
or
sarl
ud0
lcall
dec
smsw
sub
cmp
repnz
sub
mov
incl
mov
dec
sub
add
jg
cmpsl
pop
adc
adc
push
xor
mov
adc
dec
sub
adc
inc
sbb
ss
cmpl
jb
mov
xor
cmp
pop
sbb
mov
mov
out
jne
mov
rcrl
jne
pop
and
sbb
xor
and
pop
dec
adc
push
and
aaa
sbb
adc
push
push
sbb
lds
add
cmp
cmp
adc
test
loopne
dec
jne
push
rcll
inc
ret
push
dec
aad
or
sbb
or
jo
mov
stc
in
fldl
mov
or
sub
stos
push
adc
or
sbb
push
stos
sbb
push
aam
and
sub
sbb
add
xor
and
mov
adc
sbb
sub
pop
mov
cs
sbb
adc
lahf
jns
das
mov
or
and
push
adc
adc
sub
and
nop
add
leave
movsl
adc
icebp
push
adc
jmp
icebp
sti
or
adc
push
push
adc
or
or
pop
or
test
cmpsl
push
jno
sbb
push
pop
sub
adc
cmpps
pop
push
and
das
push
cmp
sti
push
cmp
sub
test
or
mov
xor
testl
scas
ds
push
aas
add
mov
adc
add
fnsave
mov
imul
and
aas
std
aaa
cld
movntps
pshufw
pop
ss
pop
pop
sbb
stos
cli
call
adc
dec
add
sbb
subl
sti
xor
dec
xor
or
mov
sbb
cli
in
pop
test
sub
lock
add
cmpb
push
das
or
ss
cs
or
std
dec
push
push
mov
lock
sbbl
pop
std
das
sbb
or
push
and
sub
push
adc
push
and
adc
adc
adc
adc
jmp
sti
sbb
sbb
mov
lods
or
andb
adc
aaa
pop
cmp
or
pop
call
adc
ud2
pop
and
pop
or
lock
adc
and
add
sub
cmp
add
pusha
fcomi
adc
or
push
jg
pop
push
test
adc
and
or
aas
sbb
sbb
jno
inc
sbb
jbe
xor
sub
cmp
push
or
inc
adc
test
lods
jo
sub
push
dec
inc
ucomiss
cltd
lds
or
push
sub
adc
ljmp
cli
jmp
add
leave
add
idiv
ret
mov
in
xor
add
sub
shlb
mov
sub
add
cmpsl
add
and
inc
dec
sbb
and
mov
inc
or
pop
clc
lds
adc
clc
sarl
and
adc
das
xchg
or
add
ret
lcall
push
or
mov
maxps
cmc
ret
or
add
mov
adc
pop
jmp
inc
sbb
pop
icebp
adc
adc
inc
std
jg
pop
pop
pop
jae
and
in
imul
pop
inc
mov
pop
ljmp
in
cmp
and
stos
lcall
adc
cli
add
lock
add
daa
js
aaa
dec
lock
lcall
cmp
fimull
pusha
sub
sbb
lahf
sbb
cmp
and
push
sub
adc
lahf
cmc
out
test
inc
dec
xchg
or
adc
movsl
stc
adc
and
test
sub
sbbb
adc
and
push
pop
and
sbb
and
sub
and
xorl
adc
bound
inc
test
les
jae
mov
xor
or
xchg
xor
adc
ljmp
adc
xor
xor
cs
aaa
sub
daa
cmp
pushf
and
cmc
ljmp
aas
and
das
adc
scas
sbb
dec
jp
adc
and
and
adc
xchg
jg
in
adc
sub
sub
lret
lock
jo
jmp
add
pop
xor
and
jnp
js
inc
pop
sub
cmpsl
xor
sub
andl
loopne
or
lea
jbe
add
lock
inc
ret
pop
cwtl
cmc
add
push
adc
and
sub
xor
xor
add
push
cld
ljmp
hlt
into
es
mov
pop
sbb
xor
pop
pop
mov
pop
mov
bound
pop
xorps
xor
fs
es
mov
outsb
inc
and
arpl
std
lcall
movsb
subb
cmp
jae
das
or
pop
xchg
das
sbb
jecxz
sbb
add
sub
rorb
push
gs
lock
enter
and
add
repnz
jecxz
loop
outsl
out
or
dec
sub
xor
xor
call
cmp
stos
pop
push
sbb
pop
aas
lea
sbb
les
add
lods
and
pop
or
xchg
and
push
adc
stos
sbb
add
adc
sbb
adc
fstpt
sub
push
push
and
inc
lea
jne
movsl
push
daa
mov
add
lock
add
pop
dec
insb
and
ja
dec
xor
in
bound
je
mov
loopne
ss
pop
mov
cmp
aad
sub
fs
pop
sbb
sub
cmp
push
jne
and
and
add
add
add
shrl
cltd
add
fwait
and
mov
cmpsl
jg
inc
and
add
sub
daa
sub
adc
adc
inc
push
mov
ljmp
or
daa
push
popa
or
jmp
push
gs
xchg
insb
push
pop
push
pusha
test
addr16
cmp
cmp
loopne
lcall
popa
test
arpl
dec
fs
pop
jo
jo
push
ss
pop
in
outsl
imul
imul
pop
outsb
jbe
ja
jne
mov
cmp
jg
pushw
pushf
push
mov
cmp
push
xchg
gs
imul
and
movsl
pop
sti
aaa
imul
pop
cmp
je
jo
mov
inc
jae
je
push
data16
push
push
inc
outsb
xor
inc
pop
ljmp
test
int3
pop
mov
outsb
push
je
fs
jae
adc
call
lcall
mov
xchg
nop
nop
jnp
and
add
sub
mulb
adc
push
push
inc
pusha
add
mov
sbb
xlat
idiv
jo
and
ds
xor
sbb
or
dec
loopne
add
sbb
pop
pop
adc
add
push
add
mov
jne
clc
add
imul
gs
and
aad
adc
xchg
jno
mov
aas
icebp
jg
and
jne
scas
inc
aas
mov
inc
lcall
pushl
push
adc
lret
push
filds
dec
lock
cs
jnp
ja
jge
adc
jo
cli
add
jns
ss
push
sbb
mov
lock
add
cmova
add
insb
lock
out
sub
ret
inc
push
add
das
lret
lcall
mov
lock
sbb
cmpsl
or
lock
or
and
or
lds
add
add
push
sbb
daa
push
mul
imull
mov
push
or
sub
sbb
pop
ljmp
sbb
add
cmp
xor
fisttps
fldl
adc
push
adc
dec
push
sahf
lock
sub
sti
pop
imul
lock
lock
out
mov
or
or
add
aas
add
mov
fmull
lsl
pop
xchg
sbb
jmp
fistps
js
shl
sub
push
shld
lock
add
sbb
ss
sti
inc
call
push
adc
mov
sub
push
pop
testl
mov
or
shrl
jl
xor
dec
sbb
mov
rorl
hlt
aaa
push
add
add
dec
add
insl
shr
xor
sbb
add
cmc
sub
lods
inc
or
push
outsb
push
push
pop
cmpsl
pop
and
push
lock
add
push
std
fildl
mov
cmp
mov
js
jne
or
dec
mov
mov
adc
daa
or
and
popl
mov
je
daa
andb
xchg
popf
mov
mov
pop
push
and
add
and
leave
pop
adc
adc
push
popa
adc
scas
incb
adc
jae
adc
sbb
adc
aas
jno
adc
sbb
lods
dec
dec
dec
sbb
cmp
sbb
jg
daa
sarl
out
decl
sub
sbb
push
push
sbb
push
ds
and
sbb
sbb
lds
aam
push
xor
adc
and
sub
aaa
push
push
adc
or
pop
or
aaa
clc
outsl
cld
push
inc
adc
or
lea
jae
or
divl
sbb
add
or
inc
daa
rorl
pop
mov
insl
and
ds
xchg
ret
sub
and
loope
and
adc
push
mov
inc
sbb
inc
daa
adc
jg
inc
adc
xchg
dec
inc
dec
xor
or
mov
dec
adc
and
cmp
rcll
inc
es
imul
adc
es
std
add
stos
sbb
addb
fadds
mov
adc
pop
push
and
lds
jbe
adc
icebp
decl
pop
dec
mov
and
and
pop
mov
jecxz
sbb
push
aas
pop
and
xchg
jp
out
add
pop
jmp
inc
mov
fwait
dec
inc
bound
jno
icebp
add
cmp
ror
xchg
mov
sbb
popa
in
mov
or
ss
jnp
xchg
lahf
ficomps
imul
push
sub
std
jmp
sbb
sub
push
es
pop
and
adc
lcall
pop
and
ss
inc
or
inc
outsb
cmp
fnstenv
icebp
clc
mov
inc
and
adc
adc
and
mov
in
and
sub
or
out
shrb
lock
xlat
mov
lcall
sbb
incl
cmp
test
lock
xor
ljmp
mov
sbb
jno
adc
sbb
sub
or
jmp
fnsave
xor
adc
cmp
fcomps
push
fwait
add
cld
out
add
sbb
inc
adc
es
jg
xor
sarl
pop
mov
or
adc
push
and
sarl
and
and
push
or
add
or
add
sbb
sbb
pop
inc
dec
int3
add
jne
add
sarl
adc
cmp
sub
or
sub
xor
and
daa
and
and
dec
and
movsl
cmp
push
add
lea
mov
sub
add
or
sub
mov
jmp
adc
and
sub
es
push
and
sub
and
mov
fs
push
jge
and
jbe
ret
shlb
mov
sub
das
sbb
adc
adc
cmp
xchg
sub
dec
sub
cmp
std
pushl
lock
addr16
xchg
insb
push
sub
xorb
inc
adc
insl
pop
jno
outsl
cmp
fistps
xor
sbb
hlt
cmp
mov
sbb
test
cmpb
mov
cltd
xchg
pop
adc
lds
add
decl
cmpsl
lock
pop
aam
sbb
jo
pop
incl
jge
push
xor
push
sbb
sbb
pop
data16
sbb
push
sub
imul
das
shlb
pop
push
pusha
dec
lods
lock
pop
or
sbb
xor
add
adc
in
mov
adc
aam
pop
lret
or
pop
adc
or
jne
filds
jae
and
and
imul
daa
and
adc
or
pop
mov
inc
cmp
push
push
inc
sub
and
pop
cld
mov
xor
sbb
sub
sub
ss
movsl
sbb
or
and
jae
dec
stos
das
adc
adc
adc
xor
movsl
add
cmp
sub
cmp
cmp
add
sbb
fildl
aas
mov
inc
xchg
pusha
sub
sbb
or
mov
daa
pop
adc
pop
sbb
inc
sbb
outsb
sbb
sbb
cmpb
add
shl
popf
fdivrs
and
mov
bound
xchg
adc
add
lock
and
inc
add
test
pop
jl
push
cmp
or
call
orl
sbb
xor
sub
sbb
aaa
push
das
or
mov
sbb
adc
pop
sbb
add
adc
mov
cmp
sbb
add
jecxz
lock
xor
cli
xor
mov
xchg
sbb
nop
sbb
jge
enter
adc
sbb
or
adc
xor
sbb
pop
adc
push
unpckhps
pop
movsbl
xchg
push
pop
or
scas
sub
sbb
lretw
jnp
push
adc
adc
jnp
in
mov
inc
adc
loope
lea
aas
fists
adc
adc
inc
and
jbe
adc
or
adc
pusha
pop
out
add
icebp
es
push
sbb
xor
cmp
xor
cld
add
bound
sbb
xchg
or
adc
pop
sbb
add
or
or
push
dec
push
xor
cs
testl
pop
adc
dec
pop
jnp
mov
push
xor
push
push
and
dec
xor
adc
mov
mov
xchg
pop
lods
sub
stos
inc
mov
mov
cmpsl
mov
outsl
lahf
mov
add
pop
fmull
add
aaa
in
in
stos
adc
movl
in
jmp
xor
lcall
popf
and
add
sub
pop
mov
das
test
jae
hlt
xlat
sbb
sti
sbbb
jg
adc
sbb
jge
testb
inc
cmp
or
or
stos
xlat
out
and
and
incl
cmp
adc
and
push
add
inc
sbb
sub
pop
push
sub
xor
cli
lock
add
dec
inc
push
lcall
push
add
sub
and
or
push
add
xchg
pop
loopne
lock
pop
adc
dec
mov
push
scas
mov
es
inc
and
pop
pop
lock
ret
rcrb
pand
lock
imul
je
pop
sahf
bound
inc
pop
jge
jle
mov
mov
pushf
mov
add
or
inc
add
pop
into
shrb
adc
jmp
add
shlb
or
pop
xchg
or
nop
mulb
add
inc
dec
call
sarb
in
call
fnstenv
dec
imul
pop
leave
pop
or
rorb
popl
sbb
and
fisttpl
or
pop
or
aas
loop
xchg
sbb
sub
inc
mov
adc
sub
adc
adc
pop
adc
add
cmc
jle
test
js
push
sub
add
loopne
cmp
inc
leave
add
xor
dec
insl
and
aad
pop
shrb
mov
lea
in
and
and
jnp
cmp
adc
push
cmp
add
dec
mov
mov
pop
adc
sub
mov
add
call
add
add
dec
add
add
pop
inc
sub
push
out
incl
add
sbb
aam
sbb
mov
lock
mov
add
xchg
add
sbb
test
adc
repnz
push
jo
push
inc
cmpsb
outsb
and
addb
add
add
or
pusha
imul
ljmp
add
and
pusha
inc
inc
push
inc
enter
inc
or
dec
fmuls
dec
inc
jns
into
mov
jno
adc
add
imul
inc
dec
sub
push
shrb
push
inc
dec
sub
loopne
sbb
mov
dec
sahf
sub
ret
rcrl
jb
xlat
lret
fildll
insb
dec
das
push
or
dec
xchg
and
add
add
incl
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
