sbb
add
outsl
std
call
mov
fwait
adc
lods
leave
jecxz
push
hlt
orb
fadd
pushf
mov
daa
add
fdivp
cs
frstor
cld
iret
xor
xchg
imul
fisttpl
in
or
test
outsb
pop
test
in
pinsrw
cmpsl
js
stc
mov
enter
in
mov
lods
push
test
dec
pop
cld
push
mov
loope
bound
pop
xor
adc
sub
addb
lret
mov
jmp
stos
cmp
shll
fsubp
testb
pop
and
scas
pop
xor
pushl
xor
test
movsb
sub
xlat
data16
push
jbe
cli
in
shl
sbb
push
insl
jp
mov
jbe
fists
lock
add
div
nop
lds
daa
ja
jle
sbb
or
je
mov
jl
pop
fcoml
jg
jne
dec
mov
andl
mov
xor
fisubrs
sbb
pop
std
pop
mov
xchg
test
imul
outsl
scas
aad
fmul
testl
or
mov
leave
fs
mov
dec
insl
inc
fdivrp
mov
jge
cmpl
fadd
not
and
test
cmpsb
sbb
cs
pop
stc
loope
sbb
mov
test
rorb
int3
stos
pop
cltd
scas
or
lcall
jo
rol
mov
pusha
scas
fidivl
into
lods
outsl
mov
dec
cmp
lahf
pop
or
loope
jg
mov
pop
mov
outsb
sub
pop
dec
mov
mov
sti
lock
lods
ds
out
fwait
mov
mov
push
xchg
sub
cwtl
sbb
movsb
mov
mov
jne
mov
mov
xor
xchg
dec
pushf
push
jne
scas
dec
mov
add
jbe
add
pop
decb
dec
xor
js
push
xor
insl
sbb
cmpl
adc
out
jno
jmp
fidivs
inc
xchg
and
dec
gs
mov
dec
loop
jge
cmpsb
fwait
cwtl
outsl
sub
sarb
push
bound
arpl
jo
and
sbb
test
scas
fisubl
adc
iret
jl
repz
addr16
sub
cmp
jnp
andl
mov
sub
jo
mov
insb
inc
jp
cs
ret
imul
in
insb
in
cmpsb
scas
shrb
sub
aaa
pop
leave
pop
dec
pop
and
ja
pop
je
ffree
adcb
mov
repnz
loopne
xacquire
ljmp
shrb
jmp
xchg
mov
adc
ds
mov
jg
stos
jmp
call
pop
les
fisubrs
test
mov
dec
stc
cmpsb
aam
cmc
lock
stos
in
repnz
xor
sub
sbb
ljmp
jmp
mov
add
repz
and
mov
mov
inc
js
inc
mov
dec
imull
mov
aam
fs
es
cmp
repnz
mov
test
xchg
and
in
pop
and
push
das
or
cmp
test
outsb
add
in
ja
xor
xchg
fldcw
inc
mov
movsb
dec
jg
add
xor
mov
aaa
nop
cwtl
fistps
outsb
or
sahf
das
loope
outsb
mov
jg
roll
test
loope
js
stc
mov
jecxz
mov
dec
mov
xchg
inc
jp
loop
lea
inc
xchg
push
stc
xor
push
repnz
rol
jns
inc
addb
pop
je
jmp
icebp
lahf
aaa
xchg
jnp
xchg
pop
jp
dec
mov
jecxz
jns
arpl
lret
shlb
ja
loop
loope
cmp
loopne
fs
mov
push
pop
repnz
pusha
mov
xchg
adc
xor
xor
mov
jle
or
mov
loop
mov
nop
and
inc
test
mov
sbb
sbb
lods
mov
mov
sub
pop
adc
arpl
push
or
add
adc
inc
pusha
ret
in
sub
in
mov
cltd
ljmp
pop
mov
pop
out
imul
xchg
fnstsw
cmp
push
push
lods
cltd
pop
xchg
loope
cmp
sbb
loope
mov
mov
push
aaa
mov
ficomps
mov
cld
test
pop
ds
fwait
test
push
push
sahf
sbb
das
lods
jmp
or
adc
decb
in
outsb
mov
pop
push
sbbb
pop
cli
movsb
pop
sti
push
cmp
das
fildl
push
dec
push
fildl
stos
mov
xchg
es
aas
ret
ror
cwtl
dec
pop
or
mov
jg
sti
aad
mov
cwtl
xchg
sub
mov
mov
loop
add
sbb
mov
jo
mov
je
cmp
mov
icebp
lcall
lock
pop
gs
lods
and
mov
arpl
mov
or
pop
nop
cmp
jno
out
inc
jmp
dec
mov
lahf
hlt
loope
rorl
xlat
cmp
outsb
cmp
andb
jmp
daa
mov
loop
sub
cmpsb
addr16
inc
or
sysret
pop
push
jp
push
imulb
leave
faddl
ret
aam
sbb
loop
adc
add
popa
fscale
es
sub
add
dec
testl
inc
xor
movsb
out
aaa
lret
mov
cmpsl
jecxz
arpl
mov
frstor
out
cli
icebp
jae
xchg
adc
ficoms
dec
pop
add
xchg
lods
inc
fbstp
fs
shrl
jle
in
js
pop
icebp
push
hlt
ja
test
cmovnp
xchg
push
mov
cmc
pop
pop
or
inc
mov
insl
shll
cld
jg
adc
in
pop
pushf
popa
or
call
cmp
inc
xchg
add
loopne
enter
aad
testl
sbb
cli
sub
cmpsl
cmp
xor
aam
mov
sbb
lcall
in
and
jecxz
subl
iret
jle
xchg
loop
gs
lock
add
ss
out
lds
xor
mov
inc
or
pop
ret
out
outsl
loop,pt
mov
sub
es
inc
pop
cmp
add
ret
arpl
inc
inc
dec
jg
loopne
mov
mov
lcall
insb
popf
and
int3
sti
mov
inc
aad
cli
test
add
xchg
aas
xor
mov
aaa
adc
jbe
iret
xchg
push
lret
movsl
sbb
sarb
enter
xchg
movsb
out
fwait
or
push
sub
and
mov
adc
pop
pushf
lea
pop
sti
pop
addr16
addb
xor
in
into
cltd
lcall
call
sub
add
andl
out
xor
push
fildll
xchg
jle
rcrb
or
cmpsb
cmp
cmp
dec
cltd
fistpll
mov
fldenv
cmpsb
frstor
inc
add
mov
ror
or
jg
xchg
push
lods
dec
nop
jg
xchg
ficoms
mov
idivl
ret
mov
adcb
mov
testb
sbbb
roll
and
das
xchg
inc
loopne
mov
pop
xor
sub
sub
jns
cmp
stos
adc
pop
loope
mov
push
movsl
pushf
mov
out
mov
in
inc
rolb
mov
shll
nop
dec
jns
testl
enter
orb
imul
insb
jmp
lds
test
mov
in
push
push
mov
push
add
insb
cli
roll
push
push
ret
sub
lret
dec
jp
jns
pusha
int
popf
jnp
pop
xchg
pop
dec
dec
cmpsb
push
add
add
xchg
cmp
adc
aaa
mov
outsl
or
mov
gs
out
in
push
sti
mov
into
cmpsb
lret
adc
lcall
aaa
inc
out
dec
sbb
frstor
and
fwait
out
cld
mov
pop
hlt
fldenv
mov
or
xchg
lods
xlat
je
jns
inc
mov
pop
roll
xor
jno
push
push
out
and
loop
mov
push
push
in
dec
inc
pop
cmpsb
fucomi
cmpsl
scas
test
xchg
mov
mov
mov
cmp
jmp
sbb
shr
enter
out
mov
sbb
and
sbb
pop
jae
mov
pop
dec
inc
nop
cmp
jmp
shll
inc
cmp
xor
mov
adc
inc
push
jp
pop
lea
sbb
cmpsb
lret
dec
pusha
jo
incl
adc
ss
stos
jo
stos
mov
ss
ss
je
lcall
xchg
xchg
mov
push
jae
dec
dec
sahf
shll
xchg
push
in
push
lcall
negb
mov
add
pop
cmp
xchg
adc
das
sbb
rclb
leave
jae
push
imul
arpl
mov
mov
dec
cmp
outsl
nop
inc
stc
mov
adc
out
loopne
xor
adc
mov
test
stos
adc
and
jo
popa
iret
cmp
sub
mov
cli
add
pop
sbb
pop
pop
jle
cwtl
add
rclb
dec
frstor
mov
out
aas
sub
mov
fnclex
push
repnz
aas
daa
loop
popf
cmpsb
jecxz
mov
sub
mov
dec
cli
and
mov
adc
lock
dec
jl
xchg
pop
cmpsl
mov
bound
stos
stos
stc
or
int3
out
jmp
imulb
jnp
jae
test
mov
pop
pop
adc
inc
subl
ja
fnsave
fldcw
bound
popa
mov
xlat
push
iret
add
cmp
mov
mov
jb
mov
mov
push
outsl
inc
test
jno
jle
repz
pusha
bnd
in
ljmp
or
xor
push
mov
add
jo
xchg
pusha
pop
xchg
outsb
or
pop
test
lret
push
mov
and
mov
inc
add
into
and
sbb
sbb
addr16
mov
movsl
mov
xlat
movsb
mov
jmp
pop
je
pop
scas
mov
pop
and
jl
sub
xchg
lret
mov
imul
pop
mull
or
out
leave
push
sbb
fsubrs
push
fisttpll
push
fiadds
std
add
ss
fwait
sbb
xchg
daa
dec
mov
lods
mov
sbb
cmc
iret
imul
das
pop
out
xor
jp
jne
adc
xchg
cwtl
jmp
xor
cmp
ljmp
mov
movsb
mov
xchg
stc
jecxz
jae
jne
jae
push
push
push
and
lret
push
push
int3
pop
mov
fsubs
inc
add
inc
mov
data16
out
mov
sbb
jge
pop
adc
mov
mov
sbb
scas
ss
cli
imul
push
sbb
mov
test
test
lahf
dec
jmp
fwait
nop
and
mov
gs
repz
xchg
scas
nop
adc
iret
push
xor
inc
in
jo
sahf
popa
enter
pop
xchg
loopne
cwtl
scas
cmp
sub
es
iret
repnz
insl
movsl
fxch
js
scas
xor
xor
mov
pushf
jae
movsl
mov
ret
xor
fstl
cmp
cld
sbb
jo
mov
out
ficoms
cmpb
xor
js
or
cmp
scas
test
addr16
in
sbb
addr16
pop
jb
orps
lcall
inc
aam
or
push
mov
fwait
and
jo
sub
mov
push
addr16
and
add
mov
lret
aaa
les
es
in
mov
mov
sbb
ljmp
pop
les
imul
shlb
adc
sbb
icebp
xchg
xchg
mov
repz
int
or
nop
inc
clc
pop
cmpsb
and
and
push
sbb
sub
sub
loopne
lret
mov
call
sbb
fwait
hlt
add
add
or
stos
adc
fimull
cwtl
loop
pusha
scas
int
int
add
push
push
xchg
rcl
or
data16
inc
cmp
ss
lret
out
in
lahf
ds
enter
mov
stos
adc
lds
ljmp
ffreep
call
aas
mov
rcll
inc
bnd
pusha
das
mov
popa
push
pop
addl
fdivl
and
scas
mov
fdivrs
cmp
lea
mov
adc
xor
int3
test
ret
or
push
dec
add
mov
mov
pop
and
cmpb
inc
ret
xor
xchg
dec
out
jno
adc
push
popa
pop
cwtl
fnstsw
mov
cld
movsl
int
xchg
sub
dec
xor
sub
xor
fists
gs
data16
mov
jo
push
shrl
jae
mov
sub
arpl
inc
push
roll
imull
xor
mov
loope
hlt
sbb
jge
call
xchg
jle
cmp
loope
aaa
or
adc
clc
push
mov
outsl
into
pusha
lea
frstor
jb
ret
popa
mov
and
dec
push
ljmp
je
pop
hlt
or
fildl
pop
dec
mov
inc
std
jmp
lods
sub
and
ss
les
push
or
adc
add
pop
pop
push
pushf
mov
xlat
xor
je
dec
movsb
lock
pusha
mov
xor
sub
cltd
aad
jnp
shlb
lea
jecxz
rorb
fwait
or
out
call
stc
cmp
pusha
jle
push
add
sub
rdmsr
cli
fmul
pushf
les
out
mov
jmp
cs
std
sub
push
jle
js
sub
mov
push
test
or
test
mov
rorb
mov
pop
cmp
out
push
insl
xchg
scas
mov
or
push
sarl
mov
stc
cs
lods
dec
inc
test
imull
fwait
mov
dec
lods
push
push
adc
cmp
push
xchg
fists
sbb
in
orl
mov
and
ret
mov
dec
inc
pusha
sbb
push
fidivrs
jo
test
repz
cwtl
xor
mov
xchg
scas
and
xchg
or
mov
enter
hlt
int3
shlb
std
ret
hlt
lret
xchg
pop
fucom
imul
mov
pop
lret
cmp
ret
xchg
mov
sbb
int3
fwait
mov
mov
jne
pop
jl
sti
inc
mov
xchg
mov
cmp
ret
xorl
loope
mov
push
push
push
ror
jmp
pop
rorl
cltd
jb
icebp
dec
cmp
adc
lret
add
sub
xor
dec
addr16
jmp
je
push
xchg
inc
into
adc
insl
loopne
mov
jne
xchg
fs
cvtps2pi
mov
cwtl
into
js
mov
jle
lahf
sbb
xadd
rcrb
test
dec
ds
movsl
pop
fst
xchg
pop
mov
out
xchg
jmp
mov
cld
xchg
je
dec
mov
mov
dec
xor
test
jge
cwtl
into
sbb
lret
out
in
pop
mov
dec
divl
jle
add
cmp
std
xorl
cmp
flds
aas
push
insl
imul
mov
loope
dec
add
loope
or
mov
imul
les
mov
or
mov
jb
mov
pop
add
jmp
push
adc
pop
fs
sub
lods
out
ljmp
add
lahf
xchg
push
sbb
lock
loopne
mov
push
xchg
add
mov
int
sbb
shlb
pop
or
xorb
cmp
in
jb
aad
mov
add
jne
inc
stos
inc
lock
dec
or
push
lea
test
cmp
xchg
xor
cs
push
aam
push
das
insl
fidivs
stc
pop
in
ret
insb
in
cli
repz
xor
bound
cwtl
rcl
stc
and
dec
sbb
pop
fstpt
xchg
gs
fisubl
or
in
std
or
dec
push
and
xor
xor
arpl
sbb
arpl
push
bswap
cmp
ret
cmpsl
mov
int
in
lahf
mov
sbb
mov
addr16
xor
jmp
test
or
mov
sbb
add
cmp
mov
in
pop
mov
loopne
stos
loope
dec
outsb
xor
aas
inc
out
or
mov
cwtl
and
popf
rcll
inc
and
mov
cltd
adc
je
mov
add
and
dec
jg
inc
cmp
pop
cld
push
cmp
fsubr
sub
int3
fstpt
mov
push
fwait
rcll
pop
cltd
stc
data16
outsb
xchg
ja
mov
enter
int
mov
sarb
or
iret
imul
add
inc
mov
xchg
mov
in
adc
rclb
jbe
fs
js
ljmp
insb
jl
dec
repz
mov
scas
and
jp
or
pop
jp
cmc
mov
inc
sbb
aaa
jge
cmp
sub
mov
push
sub
adc
add
inc
mov
sti
cmp
adc
mov
cmp
pop
inc
call
sbb
out
inc
fwait
test
inc
xlat
int3
mov
arpl
pop
bound
nop
mov
mov
sahf
insl
inc
cmp
jne
xchg
in
jle
unpcklps
test
push
jecxz
pop
daa
sar
pop
mov
xor
mov
addl
jne
in
dec
mov
in
popf
mov
std
jl
xchg
pop
and
flds
mov
xchg
cmp
call
mov
jp
loope
aam
aam
test
sti
push
cmpb
pop
out
mov
sub
arpl
pop
inc
sub
add
aas
fsubr
add
shl
jae
loopne
mov
fs
adc
jle
push
cltd
dec
inc
push
incl
pushf
add
movsl
insl
sti
outsl
xchg
xor
es
out
out
inc
jne
pushf
inc
cmp
jge
cmpsb
cs
pop
cmpsl
push
dec
or
sar
adc
fs
or
inc
fwait
pop
clc
insb
sbb
enter
xchg
testl
sub
faddl
stc
repz
shr
inc
test
jp
sub
dec
add
xchg
aaa
enter
cmp
jns
clc
sub
pop
sub
cs
fdivrl
stos
mov
lods
popa
inc
xchg
sbb
ret
xchg
fdiv
sub
lock
dec
lcall
dec
add
sarb
add
cmp
adcb
cmc
dec
dec
pop
leave
inc
xor
push
roll
adc
jae
push
inc
rcrb
out
cmpsb
or
lret
xchg
test
mov
popf
stos
mov
subl
add
cld
movsb
cmp
test
and
cmp
cli
fistpl
jae
push
cmpb
fcomp
fs
std
inc
push
push
sbb
aam
cld
rorb
cmp
inc
sbb
mov
aaa
mov
inc
lds
call
movsb
ds
push
xchg
pop
cmp
repnz
jbe
lret
ret
scas
es
rcrl
jl
push
add
arpl
mov
pop
sub
xchg
sub
repz
ljmp
mov
adc
jb
add
loopne
loope
imul
mov
pop
popa
inc
loope
mov
sub
scas
mov
mov
out
fs
daa
jg
loopne
dec
and
pop
inc
gs
stc
lret
adc
icebp
bound
pop
out
xchg
jp
xchg
adc
je
cmp
clc
jmp
inc
inc
mov
imul
pusha
in
test
jg
xchg
test
int3
dec
cmpl
mov
and
fistps
cli
pushf
mov
arpl
sub
mov
clc
inc
or
mov
push
and
push
stos
lea
sub
std
rorl
jge
and
mov
insb
sbb
into
and
in
mov
lret
mov
lahf
pop
pop
cmp
push
lcall
push
add
mov
ret
mov
or
adc
fldt
xor
sbb
pop
mov
sbb
pop
jg
mov
movsl
leave
sahf
adc
in
pop
addb
and
jecxz
out
mov
xlat
fcompl
stc
in
shll
jmp
sti
inc
add
add
lret
popa
jl
dec
popa
mov
add
pop
in
mov
mov
lods
lods
add
inc
xchg
outsl
data16
data16
sbb
ds
loope
fisubl
add
pop
cli
fs
mov
xor
dec
jnp
loop
fstps
jae
scas
pushf
mov
ret
inc
fwait
or
outsb
test
cld
rcrb
jno
pop
shr
lods
stos
call
push
and
dec
loopne
add
mov
sub
xlat
cmc
mulb
mov
mov
insb
popw
cwtl
cs
mov
cmp
ja
add
xchg
and
jl
lods
cmpl
lock
addb
nop
and
jecxz
push
fdivrl
pop
hlt
jecxz
cli
mov
pusha
xchg
pop
dec
test
pop
mov
xor
lcall
jmp
gs
insb
int
inc
push
adc
add
or
outsl
bnd
cltd
xor
adc
sub
ret
pop
pusha
xor
lock
sbb
inc
fstl
cmpsb
jb
mov
aas
push
insl
ret
sbb
mov
adc
pop
mov
jle
sahf
mov
out
push
cmpsb
inc
xor
sbb
cmpsl
lods
pop
mov
push
add
pop
sub
cwtl
les
pop
cwtl
push
mov
test
fstpl
inc
xor
jl
xor
cltd
push
mov
push
mov
mov
inc
push
push
dec
call
pop
cltd
int
lods
sarb
jae
or
movsl
ljmp
mov
repnz
movd
pop
ds
out
xchg
pushf
cmp
push
add
mov
pusha
je
sub
int
cli
lcall
inc
and
xchg
js
out
sarl
ret
or
pop
scas
loope
xor
and
dec
jp
cmp
dec
jecxz
inc
push
push
mov
jmp
fucompp
clc
mov
and
push
aaa
sub
lds
dec
iret
mov
ret
push
add
lock
xor
add
mov
fldz
inc
push
mov
push
push
xor
imul
pop
inc
mov
outsb
popa
and
push
mov
dec
insl
enter
and
push
push
test
daa
xlat
cmp
aas
jecxz
sti
outsb
mov
xchg
cmc
push
and
ss
ja
push
xor
repz
xor
add
stc
sbb
mov
lret
pop
dec
lods
mov
sub
xor
out
shll
pop
pop
mov
cmp
ss
into
fbstp
cmp
adc
dec
jbe
mov
filds
sbb
cltd
je
mov
stc
push
pushf
lds
dec
mov
add
sarb
cmp
mov
cli
add
push
je
insl
push
enter
dec
or
test
push
inc
mov
cmpsl
add
int
jbe
xchg
cltd
push
mov
mov
inc
iret
rcll
int
jmp
push
cmc
or
push
ljmp
jo
out
xchg
push
pop
inc
loope
xchg
test
jnp
adc
sbb
jnp
pushf
jnp
dec
mov
dec
popa
pop
movsb
inc
adc
scas
test
dec
aaa
adc
leave
in
add
jge
sub
imul
jmp
addr16
or
aaa
mov
mov
pusha
nop
jecxz
cmpsl
push
ljmp
aad
jns
fxch
jnp
pushf
js
insb
imul
in
ret
sbb
sahf
mov
inc
cli
dec
mov
gs
test
jo
sub
or
xor
dec
xor
clc
mov
mov
xor
mov
shll
je
icebp
and
scas
stos
cli
jmp
cs
in
test
insl
lret
es
xlat
scas
jnp
jmp
mov
sub
loop
sbb
xchg
add
sbb
pop
cld
push
cmp
out
je
cmpsl
jmp
add
lahf
inc
sub
cmp
push
outsl
ds
leave
jae
inc
ret
push
loope
pushf
cmpsl
out
out
cmp
cmp
ds
les
cmp
or
pop
cmc
icebp
bound
repz
movsb
arpl
cmpsl
scas
push
enter
mov
mov
and
nop
adc
push
xor
add
js
cmp
or
mov
lea
cmp
rcr
rorl
mov
lahf
cmpsl
les
sbb
mov
jecxz
ja
inc
cmpsl
mov
jl
fisubs
mov
out
sbb
cltd
shr
inc
xchg
dec
lahf
pushf
scas
daa
fnsave
mov
cmp
shl
xchg
cmp
addr16
out
ds
out
ficoml
push
adc
movsl
loope
push
or
dec
shlb
cmp
mov
push
lret
ret
mov
pop
jmp
dec
cmp
inc
sti
and
xchg
mov
mov
mov
imul
stos
outsb
shll
xchg
lods
out
test
test
dec
pop
movsb
add
popa
out
jb
mov
sbbl
and
lock
push
daa
or
insb
inc
aaa
mov
jb
fldl
adc
gs
sbb
into
movsl
dec
cmpsb
hlt
inc
jl
mov
sti
rcrl
iret
mov
pushf
inc
pop
mov
push
cmpsb
call
ret
lret
mov
lds
loop
pusha
out
dec
mov
cwtl
lods
lahf
fdivp
scas
xchg
rcrl
dec
pop
lahf
jp
sub
adc
movsb
cmp
adc
cmp
push
shr
jp
push
les
sub
out
jmp
icebp
xchg
fildll
mov
mov
pop
inc
or
adc
push
test
rcr
adc
inc
or
test
ljmp
ljmp
add
sbb
ja
int3
test
fsubrs
mov
inc
subl
mov
inc
shl
movsb
aaa
repz
lahf
or
ja
dec
arpl
int
pop
cmp
and
xchg
sbb
outsl
add
shl
pop
and
mov
in
inc
sti
sbb
mov
cmpsb
lods
in
push
dec
mov
push
xchg
jge
popa
in
ffreep
xor
pushf
movsl
sub
adc
xlat
rcrl
cmpb
pop
jnp
push
leave
stos
lock
inc
popa
xlat
mov
sti
sarl
push
jae
mull
pop
rclb
push
scas
add
movsl
int3
push
loope
pop
sub
mov
inc
daa
mov
xor
push
pusha
inc
out
sbb
mov
mov
add
cmc
ljmp
mov
mov
ret
cld
lcall
test
and
ret
adc
in
sbb
int
shlb
or
xchg
sub
fcoms
cmp
xor
add
push
and
mov
test
or
xor
lds
inc
sahf
sbb
aaa
lcall
cmc
loopne
inc
inc
stos
pop
std
js
jno
bound
out
inc
pop
jo
xor
cmp
sub
sbb
mov
xor
xchg
push
addl
sbb
cltd
stos
xor
leave
mov
cmpsb
mov
imul
lock
out
nop
mov
cmp
popf
jae
pop
jmp
test
call
cmp
jae
idivb
bnd
shrb
mov
and
bound
pop
push
jle
pop
in
adc
xchg
pop
cmp
test
cmp
sbb
pop
shl
adc
out
cli
in
adc
and
stc
mov
or
lcall
divl
dec
rcr
cltd
stos
or
mov
mov
push
inc
mov
jns
cmp
xor
jne
in
xchg
in
cmp
cmp
jmp
mov
add
mov
pusha
push
push
imul
xlat
hlt
out
sbb
in
insl
cmp
sbb
aaa
push
add
lock
adc
sti
xchg
sbb
shl
mov
mov
repz
in
xchg
dec
fiaddl
pop
sahf
outsb
inc
add
icebp
lcall
sbb
add
aaa
or
or
dec
push
xor
out
mov
test
mov
mov
xor
and
mov
and
test
in
bound
mov
pop
lock
ret
dec
fidivrl
sub
cmpsl
cmp
mov
sbb
jnp
xchg
aaa
cmpsl
inc
jp
nop
cmpsl
repz
adc
out
mov
inc
mov
mov
test
lods
add
ds
out
sub
cmc
dec
loopne
addr16
cmp
loope
mov
push
mov
push
cmp
es
in
insb
xor
mov
ds
inc
shlb
bound
fstpl
data16
pop
insb
cli
int3
jnp
ret
cmp
movsl
pop
notb
push
mov
test
leave
push
xor
test
xchg
add
push
jge
cmpsl
jae
lods
in
in
jb
rclb
mov
frstpm(287
pop
or
jmp
fisubrs
outsl
mov
js
adc
fldt
aas
icebp
lahf
int3
mov
in
xchg
hlt
daa
subl
and
cld
mov
hlt
fcomps
mov
and
sti
fidivrs
imul
jno
inc
leave
ucomiss
xchg
push
lods
lods
enter
dec
rcrl
mov
push
jo
push
xlat
xor
test
popf
push
pop
add
and
dec
push
mov
push
lea
leave
sub
push
sub
jg
stos
decl
fcomps
mov
outsb
xor
arpl
inc
mov
sbb
cmp
push
push
xor
inc
add
mov
lock
rorl
xor
loope
loop
fstp
cmc
pop
xlat
mov
faddl
pop
in
pop
aaa
dec
arpl
and
std
lret
sbb
lds
push
jp
cmp
pop
das
sub
loop
fcmovu
call
mov
mov
test
or
cmpsb
mov
cmp
cmpsl
mov
mov
cmp
mov
test
dec
jp
lock
int
lret
xor
push
daa
ds
add
dec
andl
and
xlat
and
popa
lret
sub
sbb
inc
cs
adc
lods
cmp
jno
mov
sub
test
repnz
leave
xor
mov
es
push
dec
insl
jno
jbe
inc
int
test
stos
mov
cli
ret
sbb
out
jne
addr16
std
sub
lods
into
movsl
xchg
push
movsl
jg
fdivrp
in
movsb
dec
aaa
adc
popf
leave
pop
test
stos
sbb
sub
or
dec
lods
pop
ret
cld
ss
aad
out
sbb
filds
mov
jns
push
test
sti
push
inc
insb
pusha
jg
push
lods
add
mov
aad
xchg
mov
mov
xchg
iret
mov
pushf
mov
push
movsl
ror
dec
fiaddl
and
pop
mov
fcoml
dec
adc
or
push
divb
cmp
inc
xchg
jmp
hlt
imul
xchg
cmp
cmpsb
into
push
push
sarb
inc
iret
cltd
out
mov
lret
dec
cmp
add
and
or
jne
mov
subl
xor
cmpsb
push
imul
xchg
push
or
int3
inc
leave
add
pop
push
sbb
sti
xchg
sbb
pop
add
fcmove
push
stos
adc
outsb
mov
jp
fldt
fbstp
add
sub
jne
ljmp
sbb
push
push
in
bound
push
sbb
mov
xor
mull
mov
test
jns
push
sub
das
push
sbb
movsl
shlb
aad
fldl
xor
adc
xlat
aas
pop
xor
daa
sahf
cmp
mov
and
mov
aad
out
and
cld
cwtl
xchg
fcmovu
pop
pop
sbb
scas
leave
mov
nop
or
sbb
lcall
sbb
inc
lret
movsb
cmp
xor
xlat
ret
mov
pop
jge
scas
adc
add
mov
cs
cmpl
fcompl
das
xor
push
add
and
pop
filds
cmpsl
daa
lock
xlat
les
mov
sub
mov
test
fwait
js
xchg
mov
mov
jae
jns
in
mov
cmc
adc
sbb
hlt
orb
decb
xchg
repz
test
sub
mov
mov
push
je
cmp
popf
push
mov
cmp
out
xchg
push
jns
lods
pop
pop
ja
sub
sbb
or
inc
cmpsb
into
or
adc
mov
out
negl
or
push
mov
cmp
xchg
lods
cwtl
add
push
out
pop
push
sub
mov
mov
in
es
xor
push
mov
jo
cmp
adc
xor
dec
mov
das
and
scas
das
cmp
dec
loopne
sbb
jg
sub
in
cld
lods
dec
jp
fbld
mov
jae
mov
add
xchg
es
mov
loope
xchg
or
xlat
cmpsl
cmc
jmp
jmp
iret
stos
pop
andl
std
sbb
in
in
or
mov
das
or
xor
mov
lahf
jae
cwtl
arpl
lods
add
in
sub
mov
cwtl
jecxz
fadd
mov
stos
popa
and
pusha
mov
sbb
out
loope
popa
xor
push
inc
mov
jg
xchg
inc
xchg
push
jo
xchg
pop
inc
imul
outsb
fwait
inc
jmp
jmp
ret
outsb
pop
sarb
mov
stc
xchg
repz
mov
or
pop
xchg
pop
or
push
mov
loop
inc
jne
mov
xchg
aaa
call
pop
push
jmp
sbb
les
ficomps
ja
sbb
repnz
fcomp
je
dec
add
adc
xchg
xchg
lea
addr16
sub
mov
mov
ljmp
lret
mov
shr
sbb
jo
or
das
mov
ror
out
enter
or
push
sbb
xchg
jbe
or
dec
pop
mov
rcll
dec
repnz
push
sbb
scas
push
stc
aaa
or
mov
jle
imul
aas
jo
and
cwtl
push
icebp
dec
dec
xor
xor
xor
or
add
pop
cld
int3
xchg
movsl
aas
lds
cmpsb
dec
inc
in
sbb
cmc
push
and
and
cmc
inc
fwait
jb
cli
add
xor
sub
out
push
lock
sub
xchg
fwait
loope
xchg
jb
test
ja
push
pop
stos
xor
add
arpl
add
pop
int
ss
loop
pop
fbstp
mov
sar
inc
fisttps
add
mov
mov
dec
dec
jnp
fisttpl
test
ret
cmp
add
sahf
sti
insb
enter
push
cmp
ss
outsb
push
je
sub
pop
cmp
imul
jmp
std
das
out
loop
mov
iret
call
push
sub
or
jne
test
cltd
cmpb
in
loop
adc
and
jge
repz
mov
fwait
cltd
adc
fidivl
jbe
and
push
repz
or
pop
xor
cmpl
lret
insb
jmp
add
xor
div
jae,pt
jb
jb
and
in
mov
jl
cld
dec
aaa
loope
aad
movsb
cmp
popf
fwait
xor
cmc
popf
cmpb
dec
cmp
mov
aam
ret
jp
or
xor
jbe
lds
decl
or
pop
mov
fsubrl
xlat
stos
imul
xchg
pop
sub
testb
inc
mov
jne
stc
push
mul
out
sub
inc
popa
sub
jne
movsl
push
add
cmpsb
add
lret
arpl
mov
jg
loopne
sbb
ret
adc
sbbl
pop
push
mov
mov
xchg
add
mov
push
fisttps
cmp
je
xor
pop
push
sbb
daa
inc
loopne
hlt
jmp
enter
sub
repz
cs
adc
mov
inc
sti
xor
sub
add
xchg
pop
in
leave
iret
loope
pushl
repz
inc
outsb
mov
enter
imul
adc
lret
fisubrs
mov
add
mov
push
lahf
mov
inc
iret
mov
xchg
adc
rorb
sbb
loop
into
cmpsl
aam
xchg
ret
inc
cmp
mov
repz
sbb
lcall
fs
popa
cmp
stos
call
fwait
das
popa
adc
fisubrl
or
add
xor
cli
jl
out
mov
hlt
push
pop
mov
sub
cli
fs
jge
xchg
icebp
mov
lock
ljmp
cmpsb
int
lds
fstl
pop
inc
ds
xor
insl
mov
ja
or
mov
in
lods
adc
daa
aad
stos
pop
test
mov
adc
in
in
mov
xchg
testl
inc
loopne
sti
inc
xor
cmpsl
dec
xchg
es
xchg
inc
mov
mov
outsl
test
shl
in
xchg
add
scas
jg
mov
loopne
adc
cli
cmp
inc
pop
and
sub
les
movsb
hlt
xchg
mov
or
outsb
dec
pusha
jne
push
lret
xchg
and
dec
sub
mov
cmp
sbb
adc
mov
loop
insl
aam
rcrb
push
push
push
mov
mov
push
test
jl
push
addr16
fnstenv
rol
push
fimull
outsl
in
push
xor
insl
jbe
and
nop
xor
inc
es
and
aas
and
inc
push
jnp
hlt
fs
pusha
mov
loope
dec
test
cmp
fistpll
std
sub
divb
or
movl
xor
nop
inc
and
js
test
mov
adc
flds
rcll
pop
ss
sbb
iret
cmpsb
adc
in
mov
mov
in
shlb
jnp
imul
or
push
push
icebp
mov
scas
js
repz
ret
adc
sarb
pusha
stos
rorl
push
jge
rolb
mov
loopne
jle
mov
jno
shrl
in
test
call
leave
push
xchg
out
or
sub
in
test
roll
pop
mov
sti
mov
aad
xor
insl
lea
mov
push
shr
jbe
sbb
test
and
mov
or
or
call
pushf
fwait
sahf
cmp
lock
mov
shrb
xchg
pop
push
sbb
adc
sbb
jne
mov
sub
dec
xor
xor
adc
mov
dec
and
xor
leave
imul
pop
cli
fdivrl
jp
fstps
or
pusha
pushf
sbb
out
sbb
xor
cmp
xchg
shl
jbe
xchg
aam
enter
iret
pop
nop
fists
outsl
xor
fwait
rolb
add
not
fcoms
repz
lcallw
sti
lahf
or
adc
xchg
loope
int3
scas
inc
mov
lea
test
fstpt
shl
in
adc
cwtl
mov
jb
and
inc
xchg
jmp
js
xor
lods
mov
lds
dec
mov
sub
movsl
mov
cmpsb
popl
rolb
fbstp
xchg
test
sub
mov
jg
aaa
pusha
cli
pusha
add
inc
movsb
mov
dec
scas
inc
jae
lock
add
rsm
sub
leave
int3
add
lret
mov
sahf
ja
mov
mov
shll
xchg
push
adc
pusha
leave
mov
imul
cs
shrb
insl
jbe
jnp
jno
pop
pop
arpl
mov
fwait
mov
js
out
mov
in
test
sti
movsb
pavgb
push
lcall
imul
adc
js
xchg
imull
or
add
into
stc
repz
std
sbb
ljmp
cld
mov
push
xchg
mov
xor
add
lods
xchg
pusha
xchg
xor
cmpsb
push
adcl
mov
pusha
icebp
cld
repnz
in
leave
or
pop
and
inc
dec
lea
mov
pop
out
sub
mov
cli
std
and
test
lods
lahf
out
inc
fwait
pop
scas
cltd
cltd
xchg
pusha
sbb
pushf
add
pop
push
and
inc
jl
lret
sub
in
inc
pop
insb
loop
outsl
sbb
cmp
aas
clc
out
jecxz
shl
test
aad
sbb
into
and
add
inc
imul
inc
mov
sbb
xlat
sub
jae
cmp
je
xor
in
push
jecxz
adc
scas
leave
arpl
mov
lock
pop
dec
ljmp
insl
das
lcall
xchg
fdivl
iret
xor
pushl
xchg
pop
push
pop
mov
insb
stos
cmc
dec
iret
cmpb
stc
push
xchg
pop
rcr
aaa
inc
add
cmp
pop
push
je
sbb
imul
into
dec
mov
movsl
mov
xor
mov
mov
xor
lahf
xor
jns
lcall
lods
add
push
mov
stc
movsl
pop
adc
mov
pop
shlb
mov
push
xchg
pop
push
std
stc
push
ret
xchg
repnz
xchg
pop
adc
lods
push
out
mov
adcb
rcrl
rolb
fisttps
aad
scas
xchg
ss
sbb
in
ljmp
sbb
ss
out
xor
cmpsl
xor
adc
push
mov
lret
lods
clc
pop
call
dec
pop
hlt
inc
arpl
jnp
mov
adc
aas
dec
insl
lea
cli
xchg
mov
and
cmp
dec
ljmp
aas
jg
or
aas
nop
cmpsl
ss
cli
mov
sub
xor
fistpll
inc
cmp
lods
frstor
xor
data16
pop
shl
adc
xchg
inc
inc
bswap
xor
iret
mov
dec
or
rcrl
shrl
pop
jne
fbld
icebp
in
mov
mov
mov
fldcw
dec
mov
sahf
xchg
push
aaa
mov
jnp
stos
or
lock
std
or
cmp
jecxz
dec
xlat
cmp
mov
into
stos
cld
inc
scas
jb
nop
scas
cmp
sub
outsb
cmp
adc
test
fcom
rolb
cmp
idivb
cltd
adc
and
push
or
mov
xchg
pusha
inc
xchg
and
adc
test
movsl
mov
xchg
add
mov
add
xor
cltd
mov
and
int3
push
nop
inc
sub
shl
push
inc
and
out
in
out
testl
sub
jg
faddl
jg
es
xchg
cmp
dec
push
adc
stc
push
jo
lret
pusha
jle
mov
decb
sub
pop
enter
push
neg
cltd
imul
xchg
fsubs
add
imul
pop
mov
push
out
dec
jns
xor
in
pop
pop
scas
in
inc
push
push
fnstenv
xor
cli
orb
xchg
jo
mov
mov
into
hlt
je
pusha
lds
mov
data16
jns
xor
mov
scas
mov
xchg
jge
dec
test
jbe
sub
add
pop
lahf
jbe
jl
popl
dec
cmpsb
cmpsl
pop
sub
sarb
in
test
test
push
push
mov
dec
loope
idiv
jne
sub
pop
ljmp
into
leave
and
loop
sub
loopne
jle
jnp
jmp
and
shr
inc
gs
je
stos
mov
sarb
push
jo
inc
jmp
adc
xchg
ret
imul
jno
das
inc
pusha
mov
dec
and
sub
sbb
push
int3
sbb
mov
adc
push
cmpsl
sub
mov
jbe
jne
sbb
stos
add
mov
mov
add
add
mov
mov
cmp
test
cmp
lahf
lcall
and
xor
lods
fs
out
lods
mov
call
sbb
stos
cmp
sahf
mov
push
out
dec
lods
dec
into
iret
les
es
fidivs
in
or
ds
int3
pusha
and
mov
pop
cmp
xchg
pop
nop
xchg
adc
jmp
push
pusha
add
stc
dec
sbb
pop
mov
stos
mov
cmp
mov
ja
out
jno
sbb
fisubs
mov
les
inc
dec
mov
sbb
in
or
jmp
cmp
cmp
xchg
dec
ror
sbb
pop
sbb
aaa
adc
inc
outsb
cmpsl
or
inc
cli
testb
fwait
mov
shll
sub
test
mov
sahf
rep
imull
loope
aam
mov
adc
rcll
insb
in
fldenv
mov
mov
or
in
mov
enter
xchg
loop
xor
test
out
sub
ret
xor
pop
xlat
mov
imul
mov
jae
sub
mov
int3
in
inc
test
popa
dec
mov
cmpl
push
shl
and
jns
jns
or
shll
pop
mov
stos
shrl
flds
in
psubsb
lahf
das
mov
lahf
in
cltd
jmp
sub
mov
out
repnz
and
loope
scas
mov
dec
cmp
test
or
les
lcall
call
xor
xchg
es
xor
loop
fisubrl
int3
movsb
mov
mov
pop
dec
cmp
xor
mov
loope
adc
jle
aaa
sub
inc
outsl
jbe
xchg
sti
mov
out
cmp
jmp
dec
add
inc
push
and
pop
or
stc
fwait
sub
int3
jns
popf
les
inc
jo
push
test
sbb
pop
ret
lock
mov
mov
out
arpl
xor
scas
cwtl
add
mov
mov
divb
dec
dec
push
dec
leave
inc
stc
xor
xchg
push
aam
test
push
sysexit
add
sbb
adc
inc
in
fwait
in
movsb
loopne
das
sbb
test
jo
mov
push
sahf
mov
jae
jae
xchg
js
test
in
lock
test
lds
fldt
rorb
cmp
adc
aaa
rolb
shlb
popa
repz
movsb
xor
loope
outsl
js
ret
cmp
mov
mov
xchg
sbb
pop
pop
stos
cmp
cmpl
daa
push
lds
lock
sbb
pop
xor
add
sti
sub
cmp
add
mov
dec
add
mov
adc
int
stos
jl
adc
sbbb
stc
je,pn
scas
arpl
ds
and
es
lock
or
js
push
or
cmp
sti
loopne
loop
jmp
add
xor
fldt
popf
jbe
jae
add
outsl
loop
sahf
pop
xor
cmp
mov
jle
xor
xchg
push
cli
cmp
pop
mov
inc
nop
adc
or
daa
xchg
push
call
ret
adc
insl
lret
sar
xlat
arpl
xchg
push
add
and
mov
sub
fisttps
mov
mov
fisubl
movsl
xchg
data16
addr16
or
aam
decl
mov
iret
in
cmpsl
cli
sbb
aaa
mov
hlt
fistpl
sub
add
lods
inc
mov
mov
int
hlt
leave
cld
repnz
mov
or
aam
loop
ds
cmp
scas
dec
in
cmpsl
repnz
scas
xchg
repnz
gs
int
xchg
xor
pop
dec
mov
and
cltd
leave
sub
loope
push
push
stos
arpl
adc
push
movsb
enter
out
mov
popa
les
mov
es
cs
daa
lods
inc
mov
cltd
stc
jmp
les
dec
adc
lea
fldl
pop
stc
pop
adc
aas
add
lahf
out
pusha
push
je
dec
mov
outsb
cwtl
pop
cmp
or
jns
xor
gs
addr16
sbb
or
or
mov
lock
ja
sub
enter
call
insb
mov
jns
in
scas
pop
pop
inc
xchg
push
repnz
xor
sbb
js
hlt
push
daa
int
iret
aad
add
movsl
test
pop
pop
dec
jno
ja
sarb
xlat
pop
decl
movsl
pusha
out
and
xchg
mov
shll
cmp
outsb
movsl
cmpsl
xchg
loopne
push
jg
mov
ljmp
jp
fldcw
push
stc
fisubrl
adc
and
stos
jmp
push
popa
jp
popl
inc
sbb
sti
xchg
mov
push
iret
ja
jp
mov
lods
loop
or
mov
mov
es
inc
bound
push
lcall
sti
mov
nop
aad
int3
lret
leave
nop
pusha
push
push
xchg
fwait
lea
push
and
xchg
mov
push
xor
fstp
xor
jo
and
mov
xchg
dec
cli
mov
out
mov
icebp
fmuls
repz
repnz
stc
test
mov
xchg
in
notl
bound
sub
xchg
scas
leave
sti
sbb
jecxz
jno
sbb
js
sub
stos
adc
lret
jg
loopne
push
jp
add
push
xchg
iret
das
out
mov
push
sahf
or
adc
pop
jecxz
mov
adc
xchg
cmp
stos
iret
cmp
sarl
insl
sub
xor
call
cmpb
or
test
inc
mov
ret
sysexit
mov
insl
outsl
loopne
in
adc
sub
add
sub
in
and
imul
shrl
and
mov
lret
adc
jno
dec
push
mov
lret
or
cmp
mov
pop
stos
cmc
imul
cmpsl
ficoms
mov
popa
dec
xlat
fimull
jb
fnstsw
mov
or
hlt
bswap
pop
out
and
and
das
inc
mov
push
push
push
or
jno
sub
fsubp
icebp
mov
xor
or
mov
cmp
push
hlt
mov
bound
sbb
or
add
ljmp
mov
sbb
test
fcompl
iret
popf
mov
jns
insl
loopne
enter
or
fwait
sub
cmp
mov
push
loope
and
lret
int
xor
subl
hlt
xchg
fcomp
inc
out
std
in
cltd
push
or
xchg
or
sub
daa
jge
in
or
repz
push
sub
popa
sub
bound
pop
movsl
pop
xor
pushf
mov
fdivrp
xor
adcl
jg
sbb
xchg
clc
inc
push
jg
adc
gs
sbb
fimull
jle
dec
daa
pop
jb
jg
adc
sbb
xlat
mov
sbb
test
mov
hlt
mov
outsl
jl
popa
mov
nop
rol
pop
mov
pusha
lds
mov
clc
or
push
or
fs
test
ret
mov
xor
movsl
je
cli
insb
es
push
test
fimuls
stos
hlt
sub
lcall
mov
stos
das
or
cmp
jecxz
inc
aaa
scas
jbe
push
lret
cmpsb
sub
push
mov
cs
add
pop
xchg
and
lea
xor
xchg
in
push
loope
nop
xor
or
xchg
lahf
mov
repz
or
decb
faddp
pushf
insl
stos
repz
gs
fistpll
pop
jne
icebp
cli
mov
adcl
cmp
test
enter
sub
and
pop
cmp
jae
pop
xor
mov
xor
imul
mov
test
arpl
mov
push
or
inc
scas
outsl
adc
jecxz
inc
jecxz
mull
std
hlt
mov
xchg
jle
add
gs
mov
loopne
xchg
jp
cmp
pop
lds
dec
or
enter
repnz
push
retw
mov
add
data16
lods
adc
and
push
int
xor
repnz
mov
add
mov
lret
sub
insb
rcrb
aas
shll
mov
push
jbe
xchg
orl
scas
jge
dec
test
pop
test
xor
xchg
jl
bound
outsl
xor
cmp
gs
push
inc
mov
push
jle
inc
es
jg
cmc
lret
add
jecxz
out
pop
out
rolb
xor
ss
imul
dec
in
mov
jae
enter
iret
push
mov
mov
cmc
push
xchg
xor
xchg
inc
pop
mov
mov
cmp
test
ret
and
std
fcom
pop
sbb
ss
cmc
or
jg
cmp
lcall
push
or
addr16
pusha
sbb
xchg
mov
dec
adc
inc
push
inc
add
std
icebp
aam
mulb
js
and
jb
add
xchg
pop
mov
in
cmp
adc
pop
add
insl
sbb
sub
in
sub
call
lret
hlt
flds
pop
adc
adc
mov
sub
push
outsl
xor
mov
dec
xchg
xchg
add
add
imul
dec
adc
dec
or
mov
xor
jnp
sbb
xchg
lock
xor
mov
pop
cmp
cmp
jge
js
push
adc
and
fcmove
add
push
je
gs
push
inc
ret
fldl
hlt
inc
out
pop
pop
mov
cmp
mov
mov
pop
lret
cmp
aad
and
sub
pushf
outsl
idivb
or
in
mov
leave
push
xchg
jnp
loopne
adc
adc
ret
dec
pop
jecxz
mov
shr
int3
stos
in
sbb
in
out
ds
pop
scas
jl
cmp
or
fidivl
daa
lret
cld
mov
movsb
sbb
or
outsl
stos
jb
aam
push
dec
popa
adcl
in
stc
add
cmp
cmpsb
bound
jae
aas
inc
fildll
int
fwait
pop
filds
sbb
mulb
movsl
xchg
jl
sub
push
call
imulb
pop
mov
xchg
pop
jle
mov
mov
repnz
in
cmc
pop
out
rorb
xor
xlat
pop
cmp
popf
jge
jbe
in
xchg
jmp
pop
iret
movsb
bound
loopne
mov
adcb
setge
jae
fcmove
fidivl
sbb
lret
cmp
ja
dec
mov
imul
mov
test
lds
cmpsb
jmp
call
ror
test
cltd
stos
push
jl
sub
cmpsb
call
dec
movsl
mov
repz
inc
pop
push
mov
xchg
ret
movsl
js
add
adc
stos
xchg
pop
lods
mov
call
pop
or
out
add
lret
xchg
call
mov
rclb
fidivs
mov
inc
push
lcall
sbb
repz
jbe
int3
push
sti
adc
push
js
dec
jne
fsts
int
add
loopne
test
in
movsl
cli
hlt
jl
xchg
scas
ss
bound
mov
pusha
cmp
pop
mov
add
imul
push
cmp
shl
xchg
pop
fcompl
mov
stos
popf
xor
inc
push
mov
xor
lods
adc
xchg
inc
cmp
les
dec
out
popf
xor
push
hlt
ljmp
pop
xor
fldl
push
xor
sbb
mov
push
gs
and
repz
test
lret
rcr
mov
push
xor
subb
xor
adc
add
clc
shll
push
stos
bound
sti
lods
fstps
inc
jg
xchg
lds
lret
xchg
fildll
adc
sar
inc
insb
sub
jne
fcomps
les
seto
addr16
cmp
ljmp
icebp
or
jl
sbb
loope
mov
sub
negl
sarb
int3
in
adc
and
push
cs
rcrb
add
hlt
je
push
and
je
repnz
inc
xor
sub
jg
and
add
ret
dec
mov
je
xchg
add
aam
mov
les
popa
jae
outsl
xlat
pop
xchg
fwait
pop
cld
jno
adc
in
nop
test
pop
ret
leave
mov
pop
movsb
mov
ja
sbb
push
xchg
popa
adc
xchg
dec
js
and
js
mov
jp
lar
out
lea
in
in
bnd
je
pop
icebp
or
mov
jo
mov
fs
mov
rcrb
mov
push
std
mov
int
inc
lods
jecxz
scas
insb
popf
repnz
mov
es
incl
push
hlt
push
fistl
xor
ret
fildl
cwtl
cmp
sub
or
cmp
mov
movsl
dec
stos
and
cmp
jp
push
mov
sub
fdivl
fistps
dec
push
addr16
xchg
dec
sbb
std
dec
shlb
lcall
adc
mov
fwait
adc
cmp
aam
iret
add
stos
push
clc
cmp
xchg
cli
jae
lods
xor
out
add
dec
imul
mov
cmp
sub
fbld
outsb
shll
adc
jno
clc
mov
insl
or
sub
imulb
sti
dec
fbstp
xor
mov
sarl
inc
sbb
stos
iret
and
xor
pop
cld
mov
lret
sti
mov
std
push
pop
sub
dec
out
ret
dec
cltd
add
xchg
sub
push
adc
add
lods
ret
mov
pushf
es
cmp
push
xor
mov
jae
cmp
mov
ret
sahf
push
jns
push
flds
test
test
lock
insl
add
sub
push
xor
addr16
sub
mov
jg
pop
fisubs
sbb
dec
out
inc
loop
scas
lock
cmpsb
ja
mov
fildll
sub
xor
xchg
push
sbb
mov
pop
push
add
cs
addr16
fistpll
bound
pusha
xchg
nop
dec
pop
fwait
test
mov
aam
sub
rorb
xchg
scas
int
sbb
sub
jne
cmpb
mov
stos
test
adc
jbe
pop
int3
into
xor
dec
sbb
inc
ljmp
mov
outsl
das
adc
test
and
adc
xchg
add
insl
jae
mov
jl
movsb
lahf
cmp
jg
push
dec
ds
xorb
and
movsl
sub
cs
into
mov
lds
xsaves
jge
cmpsl
movsb
xor
sarb
sub
push
lcall
adcl
mov
imul
in
push
pop
xchg
out
cwtl
xchg
dec
mov
loop
push
loope
mov
jg
jl
cmpsl
add
push
pop
cmp
insl
pushf
jmp
iret
arpl
lret
sarb
in
and
enter
inc
cmp
or
mov
cmp
adc
xlat
adc
xor
sub
sub
ret
xchg
and
push
icebp
dec
push
rcrl
lds
out
jb
mov
cmpsl
sub
add
mov
dec
push
arpl
mov
or
jbe
pop
mov
dec
testb
pop
push
adc
mov
mov
push
shll
mov
inc
push
movsl
sub
leave
subl
ret
mov
jno
rolb
inc
iret
sarl
fxam
divb
push
push
mov
mov
xchg
flds
gs
stos
test
clc
inc
int3
inc
andl
cmp
adc
or
adc
mov
cmp
mov
insb
and
inc
arpl
addr16
test
mov
mov
jbe
xor
xchg
inc
mov
cmp
mov
and
imul
and
mov
xor
sbb
nop
ds
jl
jmp
std
jnp
push
outsb
test
dec
dec
pminub
les
fmuls
fildll
cmp
inc
js
jno
pop
adc
add
mov
out
inc
or
sbb
dec
roll
rolb
leave
fdivl
push
mov
jns
mov
sbb
mov
outsb
into
cmc
sti
ret
int
push
xchg
mov
imul
push
test
xchg
xchg
in
push
push
jb
jnp
cmp
jno
out
les
jp
sti
repz
vphaddudq
out
or
loop
out
dec
xor
cld
xchg
and
sub
ja
loope
adcl
leave
add
adcl
xor
pop
add
xchg
and
addr16
and
test
xor
and
push
mov
movsb
add
ret
lock
in
add
xor
push
in
mov
pusha
in
orb
pop
jne
popf
cli
and
int
addr16
add
xor
push
jnp
adc
shrl
repnz
inc
lret
ficompl
lods
sar
fistpl
add
mov
cmc
in
hlt
mov
imul
xor
icebp
and
hlt
lds
mov
mov
popf
inc
sub
add
test
dec
mov
mov
int3
push
stc
mov
fidivrs
jmp
iret
iret
adc
aaa
scas
jmp
idivl
adc
push
cmc
sbb
xchg
rcr
out
adc
adc
jecxz
jp
arpl
imul
ret
pushf
add
iret
lock
xlat
jp
in
push
xchg
into
jmp
es
fsubs
dec
in
rol
or
jnp
jne
jae
bound
outsb
enter
repnz
fistl
add
sbb
aam
sahf
aas
push
xchg
adc
testb
test
pop
jg
nop
cmpsl
dec
add
cmp
dec
cmp
pop
stos
mov
xor
cmp
insb
jo
loop
popf
add
daa
cld
push
mov
pop
bound
mov
shl
push
add
and
pop
sub
jb
cld
jnp
pusha
jle
sbb
ss
int3
lret
jge
mov
cmp
sub
or
decb
lret
xchg
stos
jne
arpl
add
pop
push
jb
xchg
and
test
dec
loop
repnz
or
sub
in
fisubl
frstor
jge
dec
rcrl
jb
pop
inc
mov
cmp
xchg
xor
mov
loope
add
inc
xor
mov
arpl
push
sub
mov
dec
or
mov
inc
call
add
setbe
and
xchg
bound
ret
mov
inc
test
les
mov
mov
push
mov
pop
pop
dec
insb
adc
jo
enter
lods
pop
dec
scas
add
insl
and
push
push
mov
xchg
xchg
cmp
push
push
icebp
push
fdivr
mov
arpl
mov
jp
add
in
sub
roll
shll
addl
jns
or
cmp
stos
test
lahf
xor
xchg
xor
add
mov
dec
loope
jge
mov
mov
mov
icebp
lods
int3
push
jge
std
ret
outsb
lds
int
or
rolb
and
or
flds
outsl
fs
adc
mov
sbb
ds
jle
sbb
inc
pop
test
and
and
stos
lods
icebp
push
subb
dec
cmp
andl
sahf
scas
push
add
dec
push
push
std
push
pop
mov
mov
aas
call
dec
jne
cmp
dec
call
adc
daa
cs
pop
repnz
dec
mov
pop
adc
mov
out
imul
loop
and
push
sub
xchg
jne
scas
xor
les
dec
push
sti
addl
xlat
lods
pop
loope
xor
xor
icebp
scas
arpl
popf
loop
pop
dec
test
mov
js
fnsave
dec
pop
je
rclb
pop
push
xor
pop
nop
pop
sbb
push
jl
mov
icebp
mov
adc
cmp
lods
lds
dec
and
dec
mov
or
lret
mov
add
inc
int
sbb
in
out
mov
loope
jne
xlat
cwtl
out
outsb
or
in
cmpsb
imul
lock
adc
andb
and
adc
mov
and
fs
movsl
xor
jge
jbe
push
fstp
xchg
add
xor
in
aaa
xchg
testl
loope
xchg
jno
jle
sbb
aas
inc
roll
movsb
adc
loope
mov
pop
pop
and
jae
jbe
sbb
sub
popa
cwtl
fstpl
lods
xchg
insl
adc
addb
cmp
lods
cwtl
aad
xlat
pop
data16
pop
push
xchg
lahf
push
mov
push
arpl
sbb
aam
adc
xchg
and
in
xor
push
das
xor
mov
sub
lret
push
and
insl
add
mov
scas
mov
scas
outsl
inc
bound
popa
adc
cmp
insb
pop
xor
loope
adc
lods
enter
fildll
inc
xor
pop
inc
jbe
fucomi
fadds
icebp
incb
jo
push
push
cs
cmp
aam
xchg
sub
cmp
adc
les
dec
aam
cmp
out
nop
inc
bound
lret
jns
sub
sbb
jp
add
cmpsb
add
ljmp
imul
pop
in
xor
xor
out
cmpsb
cmpsl
fsubs
inc
dec
dec
inc
addr16
xor
adc
test
pop
adcb
aaa
or
push
push
mov
insl
mov
popa
add
inc
jmp
dec
mov
pop
push
jo
adc
add
mov
addb
imul
inc
in
jno
cs
cli
xchg
adc
ffreep
imul
and
jecxz
and
inc
leave
je
jmp
sbb
xor
out
daa
imul
out
xor
push
push
jbe
jge
mov
pop
cmp
mov
stc
push
fisttpl
ret
rcrb
sbb
push
imul
cwtl
stc
fs
imul
ljmp
test
aas
mov
test
mov
aaa
test
rorl
jmp
stos
push
rorb
lds
push
push
pop
xor
mov
jo
xchg
divb
sbb
fmull
rcrb
cmc
subb
aas
popl
testl
or
mov
and
push
bound
shl
fs
jne
arpl
test
push
mov
fst
mov
test
popa
cmp
into
sbbb
fcoml
loopne
lods
mov
mov
mov
xor
mov
sbb
add
pop
inc
push
daa
test
xor
lods
sub
ljmp
mov
jno
popa
into
add
test
ret
xor
daa
into
lahf
xchg
sbb
adc
and
xchg
pop
movb
dec
hlt
ret
lock
mov
sub
fisubl
push
xlat
sub
outsb
scas
sbb
inc
adc
jns
adc
sahf
and
popa
das
repz
xchg
adc
js
xchg
cmpsl
mov
adc
inc
rorb
adc
cs
or
mov
dec
jmp
push
rolb
mov
test
xor
subl
fistl
pushf
flds
fisttps
fists
push
and
mov
dec
xor
stc
inc
xor
adc
inc
gs
and
or
sbb
int
mov
and
pop
cmp
mov
pop
fiadds
scas
fisubrl
rolb
loopne
mov
mov
aas
test
mov
pusha
sbb
in
mov
cmpsb
leave
out
inc
push
int
scas
jmp
inc
pop
test
adc
addr16
inc
ret
pop
shll
sbb
jg
cmp
jbe
fs
jmp
pop
mov
push
into
inc
inc
pop
fsts
jbe
iret
adc
les
mov
fabs
std
mov
push
ds
insb
xlat
sub
push
sub
push
mov
mov
dec
pusha
jae
xor
lahf
adc
xchg
inc
push
cwtl
pusha
adc
into
cmpsl
mov
inc
fisubs
cmp
jge
add
mov
fstps
pushf
shll
jo
dec
adc
adc
mov
sub
jmp
int3
aas
inc
inc
mov
add
test
xchg
subl
or
andl
lcall
mov
inc
xchg
adc
push
adc
dec
xor
das
dec
pop
adc
mov
cmpl
enter
push
push
fistl
cmpsb
testb
dec
aad
dec
jo
pop
cltd
lret
int
mov
cmp
bswap
lock
add
aas
xchg
jecxz
push
call
daa
cli
inc
data16
sub
out
adc
aaa
push
movsl
movsb
cmpsl
in
sbb
out
addl
mov
or
cltd
dec
mov
inc
scas
jg
push
add
mov
pop
enter
ss
push
inc
add
fdivrl
sbb
fadds
jg
insl
adcb
jg
mov
dec
mov
shrb
jl
cmpb
sub
or
sbb
js
ja
adc
lods
add
and
nop
xchg
aam
cmp
loop
cmp
repnz
push
repnz
and
xchg
scas
daa
lods
shrl
icebp
aas
outsb
jle
mov
lock
setl
cmp
mov
iret
and
jl
shl
pop
jp
mov
inc
lds
jae
sbb
xor
jne
jmp
lret
jge
ds
add
mov
int
inc
repz
stos
mov
pop
ja
ja
lret
int
mov
int3
dec
adc
pop
sbb
push
sbb
popf
adc
push
jno
fisttpll
mov
mov
iret
into
fldt
jnp
sahf
lock
out
pusha
movsl
add
lret
faddl
push
shr
sbb
pop
in
imull
or
xchg
imul
aam
sbb
add
sbb
fldt
or
cld
inc
inc
adc
cs
cmp
dec
mov
sbb
pop
daa
mov
js
jno
xor
mov
jge
shlb
sbb
clc
in
lods
out
pop
sbb
push
mov
loope
jo
sub
pop
cmc
rcrl
sub
je
pusha
das
inc
jno
pop
loope
test
sub
jle
fistps
cwtl
adc
cmpsl
lea
push
push
and
dec
outsl
daa
xchg
iret
inc
sub
sti
mov
push
rclb
mov
aaa
mov
dec
sub
inc
je
push
and
jbe
and
nop
jl
push
jo
xchg
cmpb
lret
lods
cmp
arpl
mov
jns
xchg
push
aam
dec
call
ret
mov
jno
lods
nop
push
sar
sar
jecxz
add
fs
xchg
in
adc
mov
pushf
hlt
jg,pn
add
pop
dec
les
in
loope
shlb
pop
mov
or
ss
sub
lds
sbb
push
fiadds
push
push
lret
stos
push
cmpsl
xchg
add
cmp
mov
test
sbb
add
lahf
sub
mov
add
sahf
test
sarb
dec
sqrtps
sbb
lahf
imul
sahf
call
stc
xchg
sbb
xor
icebp
cmpl
mov
dec
sub
nop
stos
fwait
xlat
aad
lods
lret
and
mov
mov
sbb
outsl
xchg
test
insl
std
or
imul
add
push
add
push
lret
test
or
in
dec
push
xchg
cmpsb
les
push
push
push
jecxz
stos
cmp
in
in
xchg
adc
inc
inc
or
rorl
and
cmp
test
out
add
fidivrs
loop
test
divl
repnz
dec
jg
es
pop
inc
cmp
lods
adc
mov
addr16
ss
mov
and
pop
push
inc
mov
cli
dec
or
cld
and
icebp
scas
loopne
iret
in
icebp
stc
les
xor
gs
outsl
xor
bound
xchg
lret
xchg
rolb
fdivp
pushf
sbb
scas
insb
in
mov
add
out
imul
inc
in
movsb
ja
fwait
pop
pop
popf
insl
mull
jecxz
subb
sub
pop
pushf
or
sbb
mov
push
rolw
jmp
repnz
or
stc
sub
mov
sbb
pop
aas
imull
stc
loopw
push
xchg
xlat
bound
dec
sub
in
mov
rcll
mov
test
xor
or
mov
jb
ljmp
mov
xchg
ja
jmp
sbb
push
pop
ljmp
aad
notl
movsl
pop
ja
dec
repnz
gs
push
mov
out
xor
sbb
mov
mov
mov
lret
ja
lret
inc
hlt
dec
push
ljmp
cmc
movsb
push
popa
jnp
jno
inc
sub
cld
jle
pop
mov
lahf
sarb
clc
pop
xor
xchg
mov
hlt
jo
jns
adc
pop
adc
inc
shrb
push
popa
sbb
mov
push
pop
movsb
xchg
dec
les
cmp
aaa
cld
adc
sbb
jge
int
pop
jne
cmp
jge
add
dec
stos
popf
adc
mov
pop
push
xchg
ja
loop
leave
jecxz
mov
stc
std
pop
addl
add
cmpb
mov
bound
jmp
cmp
mov
or
out
out
push
jecxz
jmp
sbb
sub
popf
lret
leave
cmc
push
sub
loop
cs
sbb
mov
jmp
mov
leave
pop
sbb
inc
fcomps
loope
push
repz
daa
mov
push
push
imul
xchg
push
pop
loop
push
lods
dec
xor
jbe
cmpsb
cmc
shrl
cld
cmp
cmpb
adc
cmp
mov
sbb
mov
lret
cmp
xchg
xorl
xchg
pop
pop
fld
out
add
and
mov
push
xchg
call
inc
out
stc
cmp
sbb
testb
pop
add
fs
pop
xchg
cld
pop
fildll
adc
scas
inc
js,pt
xor
daa
into
pop
fisubs
sub
jo
lcall
cmp
or
push
fmuls
dec
add
dec
mov
rcr
nop
cs
cmp
mov
dec
int
iret
in
in
lret
test
xchg
cltd
add
mov
push
and
mov
outsb
ss
mov
jmp
fwait
push
mov
mov
int
lea
mov
push
or
int
cmp
outsb
roll
mov
push
mov
push
lret
or
sub
mov
push
dec
mov
test
clc
ds
out
jecxz
scas
iret
push
loop
insl
inc
call
cmp
adc
cmpsl
rcrb
stos
clc
dec
mov
ljmp
xor
push
sub
mov
lahf
hlt
pop
shrl
push
stos
test
loop
cmpsl
stc
les
cmp
mov
push
movsb
testl
popf
or
mov
das
stos
mov
imul
dec
stos
mov
popf
xchg
push
cmp
mov
push
inc
cld
dec
push
or
in
dec
and
mov
loopew
sub
xchg
push
sub
inc
sbb
sbb
aad
dec
aam
movb
jle
cld
adc
std
add
cli
inc
jnp
jnp
aaa
call
jb
push
pop
xlat
stos
add
sbb
jne
in
test
gs
sbb
mov
pop
dec
fs
js
mov
out
movsl
nop
adc
sbb
jle
add
mov
or
jecxz
idiv
clc
enter
lods
push
aas
push
jg
aam
add
dec
loop
mov
xor
shrl
daa
jne
movsb
enter
fisubl
mov
dec
into
mov
lret
add
fistps
push
mov
mov
adc
pop
sbb
loopew
ds
ret
addb
je
mov
and
xchg
push
int3
push
nop
out
out
iret
call
inc
gs
or
mov
lods
pop
lea
lods
inc
jmp
test
inc
test
xchg
lods
inc
xchg
mov
aam
mov
std
fmuls
xor
call
pop
out
addr16
test
int
xor
bound
push
les
loope
and
lahf
or
cmp
ss
in
jae
xchg
in
pushf
adc
cmpl
xchg
or
lcall
pusha
jbe
jmp
mov
or
sub
mov
das
mov
cmp
push
xor
mov
in
inc
mov
pop
mov
repz
daa
out
movsl
jbe
lea
mov
sbb
lahf
arpl
pushf
mov
push
insl
add
mov
inc
add
xchg
cltd
or
xchg
push
sub
pop
pop
ja
xlat
sbb
movsl
addl
test
imul
sahf
dec
add
out
push
dec
dec
push
jne
jne
gs
mov
mov
in
dec
mov
and
sub
ljmp
cmp
test
test
in
ja
mov
test
xchg
popa
jmp
cmp
adc
sahf
out
int3
fcomp
mov
movsl
cmp
push
gs
hlt
or
add
xchg
mov
mov
and
pop
out
daa
les
inc
xchg
das
out
sub
sar
ret
push
push
dec
mov
mov
imul
mov
add
sub
int3
jp
repz
mov
test
sub
jo
adc
cltd
mov
pusha
lahf
inc
ftst
pop
stos
jnp
dec
jp
jo
mov
fcmovnb
lahf
test
js
dec
lahf
outsb
pop
imulb
scas
stos
test
lods
cwtl
lret
shrb
rolb
imul
movsb
popa
in
xchg
xlat
mov
jo
add
call
mov
clc
lods
out
push
inc
push
push
add
adc
ret
push
xor
and
lret
xchg
sub
lcall
sbb
add
es
sbb
jg
xchg
pop
lock
cmp
jnp
dec
push
pop
or
loopne
lods
lock
mov
std
xor
push
subl
shlb
add
pop
pop
sbb
cmpsb
cs
xlat
out
xlat
test
mov
adc
inc
ljmp
fimuls
int3
add
jb
xor
dec
cmp
stc
xchg
xchg
mov
sahf
iret
psrlq
dec
test
vpxor
insb
or
ret
pop
fnsave
sub
lret
cmpsl
xchg
repz
popf
inc
and
ror
les
fiaddl
pop
bound
pop
adc
add
xlat
add
jb
adc
lock
pop
push
andl
dec
cmp
mov
add
jb
jae
les
adc
sbb
cmp
enter
push
ret
mov
push
jle
out
dec
inc
out
add
jge
shl
inc
call
mov
test
into
fs
xor
adc
push
adc
sub
jmp
xchg
inc
rcrb
mov
imul
mov
push
aaa
push
loopne
packssdw
stos
mov
cmp
mov
daa
dec
in
pop
pushf
cltd
add
outsb
jne
lcall
movsb
or
lea
jo
push
add
xor
jmp
test
leave
jecxz
or
and
popf
enter
scas
jno
iret
out
dec
add
push
and
scas
insb
shl
and
lods
fsub
daa
ret
movsl
xchg
lods
push
xchg
sbb
inc
leave
inc
out
shrl
rorl
dec
push
std
xor
out
popf
loop
push
rcr
dec
push
dec
sbb
pop
outsb
imul
xor
ljmp
test
loope
ja
in
add
mov
iret
xor
jp
jp
dec
sub
push
vandnps
ja
aad
movl
sbb
dec
cli
xchg
adc
aam
daa
out
cli
and
push
icebp
push
into
mov
mov
gs
xchg
mov
adc
cltd
or
fwait
outsb
ret
fsubr
je
or
push
pop
lock
mov
fiadds
xor
roll
sub
dec
shlb
inc
mov
dec
mov
dec
dec
scas
addr16
push
xchg
xor
sti
insl
outsb
lock
push
inc
pop
push
mov
xlat
dec
cmp
xchg
lods
pop
dec
ror
cmp
movsl
or
pop
lahf
test
pop
out
mov
movhps
sbb
jmp
popa
inc
jne
aad
xchg
add
imul
jne
loopne
jg
fs
xor
in
mov
dec
aaa
mov
jb
daa
sbb
testl
in
insl
inc
pushf
iret
bound
shrl
rcrl
jmp
cli
in
andb
in
in
jle
mov
or
inc
das
push
mov
bound
pop
adc
push
xchg
push
push
movsl
and
ss
jge
aam
xor
stc
dec
dec
leave
shr
aaa
xchg
mov
inc
mov
dec
or
in
mov
mov
in
cwtl
push
push
sub
jmp
adc
aas
push
jge
mov
mov
mov
test
ret
stos
sub
call
lahf
jp
sbb
jo
xchg
out
and
jp
xchg
dec
inc
cmovbe
std
into
pop
rcrl
xor
leave
mov
adc
mov
push
fsubrl
mov
int3
cmp
in
xchg
stos
cs
ret
and
or
mov
push
dec
mov
mov
idivb
mov
jecxz
shlb
gs
pop
insl
push
inc
mov
clc
jnp
dec
mov
adc
ret
std
arpl
or
iret
addr16
mov
scas
into
xor
rorl
rcrb
lods
push
lahf
cmp
shr
xor
pop
jl
sti
push
inc
xchg
sbb
jl
push
mov
popf
cwtl
in
cmp
jns
das
subl
dec
fwait
sbb
sbb
inc
pop
dec
cmp
lea
add
movsl
sarl
jge
mov
push
push
int
cmc
or
mov
cmp
sbb
daa
inc
int
jl
push
fwait
push
mov
cmpsl
sbb
dec
pop
sbb
push
add
outsl
pop
cmpsl
shll
jae
adc
icebp
repnz
mov
aad
mov
push
cs
call
data16
xor
out
jp
add
jecxz
sub
jns
cmp
cltd
rclb
je
loopne
push
lea
fbld
add
pop
addr16
push
jo
mov
addr16
int3
addr16
int3
xor
cmpsl
adc
jge
ljmp
sbb
adc
jns
imul
add
sbb
mov
outsl
push
mov
sti
mov
loop
add
xor
and
repnz
clc
aas
add
xchg
cmp
push
mov
xchg
pop
sti
adc
mov
or
scas
xchg
push
xchg
mov
and
ja
int
pop
and
mov
sub
and
xor
out
test
xchg
nop
pop
sbb
nop
arpl
iret
sbb
cmp
pushf
test
ljmp
iret
jo
aaa
pop
insb
rcrl
lret
aaa
mov
in
xor
lods
xchg
sbb
mov
jns
cmp
adc
add
addl
cmpsl
stc
xor
js
mov
adc
mov
mov
xchg
jne
in
cmc
pop
ja
xchg
bound
add
dec
inc
jnp
jp
adc
ret
fdiv
adc
jmp
test
push
push
push
cmp
jb
stos
sub
xor
jecxz
mov
push
xor
loopne
jns
inc
xchg
jnp
mov
inc
mov
scas
out
mov
jbe
in
clc
dec
in
sti
fisubrl
aas
fdivr
xor
aad
sub
mov
loop
testb
mov
push
insb
aaa
xchg
mull
xchg
push
aas
cmp
sub
in
test
inc
jno
stos
sub
add
outsl
jge
jmp
lret
dec
insb
ss
in
ja
imul
cmp
movsb
dec
hlt
daa
mov
pop
mov
inc
jbe
sub
es
pop
sbb
int
xchg
xchg
adc
out
ror
dec
call
mov
cmpsl
ljmp
mov
add
xchg
aas
stc
jnp
rcll
out
push
lcall
ja
popa
pop
add
pop
push
enter
sbb
stos
cmp
sti
or
mov
xor
mov
dec
out
repnz
leave
shlb
ljmp
clc
dec
pushf
shlb
xchg
lret
mov
sarl
dec
xor
sub
ss
loop
push
cmpsb
into
fsubl
xchg
inc
fimuls
add
outsb
sbb
pop
and
xchg
mov
jbe
cwtl
jmp
mov
movsl
or
mov
lods
xlat
das
jmp
mov
inc
push
jg
aad
aaa
andl
jmp
loope
into
and
mov
test
pop
fidivl
xchg
xchg
mov
hlt
stos
jl
adc
push
aas
add
ret
cs
push
loopne
and
and
cmp
inc
push
cmp
xlat
shr
and
cmpl
sbb
pusha
sub
test
into
mov
bound
and
sub
jmp
stc
xchg
stos
pop
shr
and
push
fwait
ret
iret
ficoms
mov
jp
pop
pusha
scas
sub
push
or
movsb
adc
mov
jl
rcrb
subl
mov
xchg
insb
fdiv
icebp
xchg
pop
push
or
loop
xor
ret
in
and
inc
fistps
test
and
lahf
test
loopne
and
cmpsl
rcrb
xchg
inc
push
test
sub
int
test
mov
cmp
xor
ljmp
sarl
bnd
mov
xchg
mov
insl
cmpsb
cs
pop
rorb
test
sti
and
fidivrl
daa
int
stc
pop
sub
mov
int
adc
dec
jo
jo
jl
add
loop
orb
mov
and
adc
add
adc
pop
lea
mov
aaa
jno
sub
mov
mov
jl
push
out
xor
lock
add
adc
scas
je
fsubs
xchg
stos
cli
xchg
and
or
jge
rcll
sbb
xor
out
cmp
lds
mov
xchg
aas
xlat
mov
pusha
xchg
cltd
add
loop
sub
outsl
pop
pop
mov
jns
clc
mov
stos
cmp
rcrl
mov
or
dec
loop
lods
and
jae
scas
icebp
call
shl
xor
push
jge
leave
incb
rol
xor
cs
push
lds
loopne
aas
outsl
std
loope
jmp
mov
fstpl
dec
rcll
lock
sub
push
or
xchg
lds
jecxz
out
fprem
jge
jnp
scas
pop
aas
sub
mov
outsl
repz
loope
fmul
pop
mov
repz
inc
adc
jp
add
cmp
xchg
ja
jl
int
push
cld
push
cwtl
pop
ss
jo
push
sbb
mov
lret
push
add
xchg
shlb
dec
and
nop
mov
mov
enter
idivb
sub
push
lea
out
cmp
cmpsb
pop
jne
rorb
inc
stos
dec
mov
inc
call
shl
je
les
sub
and
cld
out
sub
stos
push
ret
aad
shrl
insl
bound
sarb
cld
fbld
or
push
out
addr16
sbb
or
hlt
in
cltd
pop
push
sbb
inc
gs
addr16
fwait
sbb
xchg
add
lahf
sub
imul
dec
sbb
cmpsl
xor
es
push
cli
mov
jae
and
cli
jl
lret
jb
imul
cwtl
jp
inc
push
and
dec
dec
enter
sarl
push
lods
mov
mov
cmp
cmp
jno
shrd
movsl
mov
add
mov
push
push
flds
jmp
pop
out
hlt
les
cmpsb
rcrb
xor
and
add
push
sti
ja
mov
and
callw
loopne
or
dec
outsb
mov
or
jge
jmp
sbb
stc
mov
push
andl
cmp
je
ror
sbb
xchg
jae
aaa
fldcw
test
fstps
mov
shlb
leave
push
dec
dec
add
pop
fmul
dec
test
lods
xor
or
clc
in
insb
push
shll
je
repnz
add
xchg
mov
jg
test
popf
xchg
jnp
mulb
popa
out
outsb
addr16
adc
sbb
daa
pushf
sub
push
adc
icebp
xor
aas
adc
insl
xchg
cmpsl
mov
pop
or
jno
loopne
jp
sti
pop
rcl
push
cmpsl
fs
icebp
push
pop
rolb
cwtl
mov
data16
das
notb
lods
lea
je
pop
and
and
push
fwait
inc
pushf
cmpb
lcall
in
into
pop
lea
push
inc
pusha
and
pop
ds
pusha
add
mov
dec
jne
lds
pop
sub
sti
xchg
add
mov
sbb
sub
pop
mov
jns
movb
sbb
xor
sbb
or
push
rcrb
cmp
mov
sarl
cmpsl
enter
add
not
sti
popfw
aad
mov
fidivs
xchg
mov
insb
ret
xchg
fs
cld
push
cmpsl
stc
fistpl
mov
pop
inc
sub
gs
inc
mov
cmp
cmc
push
inc
xchg
in
xchg
xchg
pop
or
dec
out
cmpsb
inc
lds
cwtl
out
cs
scas
test
dec
stos
sbb
fldcw
xchg
sub
jge
sbb
adc
dec
push
sbbb
testb
daa
cmpsb
and
jp
cmp
cld
push
mov
neg
lret
lds
mov
js
sbb
scas
mov
call
mov
dec
pop
test
stos
cmp
out
and
shlb
and
sarb
shrb
in
jno
fs
cld
hlt
loop
test
je
pop
xchg
jg
add
push
push
mov
sbb
push
and
and
fisttpl
fcmovnu
movsb
mov
cwtl
sub
or
lock
mov
repz
dec
lahf
push
pop
aas
add
repnz
xchg
cltd
cs
jnp
das
or
loopne
cmp
int3
aas
lea
cld
inc
fildl
and
xlat
and
leave
lret
or
stos
outsb
jl
rcrb
mov
inc
jge
bound
adc
pop
and
xchg
test
sbb
call
jle
ja
pcmpgtd
jns
push
xor
rcl
popa
popf
aam
cmpsb
rcr
ud1
jne
inc
mov
sub
movsl
jnp
inc
pop
sub
push
xchg
jle
xor
xor
push
jecxz
adc
jge
scas
es
inc
mov
stos
mov
mov
adc
xchg
roll
jge
lcall
push
js
sbb
adcl
mov
dec
outsl
dec
clc
fstl
and
cmp
xlat
mov
pop
xchg
das
or
out
push
fildl
jbe
shr
jle
repz
sub
repz
lods
dec
scas
nop
dec
shr
outsl
mov
add
push
leave
inc
jno
incb
cmp
mov
inc
xchg
rorl
ror
add
xchg
xchg
pop
aad
lods
shr
jecxz
in
pop
mov
mov
daa
inc
movsb
les
push
xchg
hlt
xchg
push
insb
stos
fldt
sbb
mov
mov
adc
add
data16
scas
pop
or
jmp
fs
jbe
mulb
nop
movsb
mov
shrl
push
aad
in
cmp
sub
fidivrl
mov
cmpsl
sbb
lahf
rcr
mov
call
xchg
jb
movsl
and
fcoml
push
pop
sbb
pop
mov
leave
lds
cmp
sbb
push
jp
sbb
mov
in
movsl
push
je
loop
xchg
xchg
in
cmp
jle
xchg
jnp
jmp
nop
pop
cmp
jge
cwtl
les
mov
inc
cmp
movsb
xchg
dec
mov
cmpsb
push
push
add
jmp
push
xchg
add
repz
in
andb
popa
mov
sti
xorl
xchg
cs
jecxz
cmpsb
fldpi
stc
in
xchg
sub
xchg
imul
daa
subl
test
jb
and
aam
in
cmp
lea
push
and
inc
jnp
cmp
xor
in
or
adc
push
adc
mov
cmp
mov
jnp
outsb
inc
push
push
repz
stc
std
fdivs
sbb
sub
out
mov
inc
lods
mov
push
pop
test
lock
push
imul
fdivrl
into
push
into
push
add
pop
ret
loop
sub
insb
and
test
lods
push
bnd
fsubl
jl
insl
ds
push
push
leave
sub
fmull
inc
aam
sti
repnz
fiaddl
or
fidivrs
pop
lret
sbb
cmp
sbbb
js
cmpsb
nop
jg
jl
sarb
pop
pop
jb
cmpsl
cli
hlt
shll
popf
xchg
jmp
cld
add
xchg
sub
imul
cmp
dec
mov
and
outsb
and
mov
push
fsubrs
jns
imul
mov
data16
push
stc
pop
sub
outsl
es
aaa
movsb
mov
xlat
lods
and
add
push
inc
jbe
pop
cmc
enter
sbb
scas
mov
lret
rcll
dec
orl
imul
out
pop
loop
nop
fucomp
jg
fxch
push
inc
lret
pushw
dec
popf
pop
jge
xchg
push
sbb
xor
sub
mov
or
or
outsl
inc
in
pop
shr
insl
push
ficompl
data16
mov
mov
lea
cmp
inc
dec
aam
add
pop
cwtl
out
insl
in
loope
imul
lods
flds
insl
xlat
outsb
push
iret
push
sbb
out
sub
jmp
xor
das
in
fwait
add
xchg
push
and
lock
dec
mov
push
repz
lret
or
aam
movsb
sub
push
mov
push
cltd
jo
cmp
jae
shr
xchg
sub
push
pop
sbb
addr16
mov
mov
cld
out
adc
daa
test
sub
jne
in
clc
dec
lret
xor
cwtl
je
mov
sub
movsb
push
fs
sub
xchg
test
jb
cld
not
fucomi
and
pop
adc
inc
data16
iret
ret
and
push
pop
loop
mov
sbb
mov
cld
shlb
inc
jno
mov
fistpll
push
dec
int3
mov
es
rcrl
jl
dec
xlat
js
dec
xchg
in
pop
call
or
lock
adc
outsl
or
es
or
jo
pop
adc
and
imul
cld
imulb
pop
pop
jnp
xor
and
sbb
orb
push
sbb
lods
lret
scas
fimuls
sti
pop
sahf
xlat
clc
lds
inc
and
push
push
dec
xchg
out
fwait
mov
sbb
arpl
jnp
mov
sbb
mov
pushf
inc
pop
or
dec
fimull
ljmp
pushf
jl
gs
sub
sbbl
sahf
imul
les
sbb
loop
add
std
lods
add
lret
inc
mov
mov
dec
or
add
add
repz
sbb
stc
repnz
mov
and
dec
add
push
scas
mov
int
sbb
pop
mov
xchg
mov
leave
push
outsl
mov
divl
mov
mov
test
mov
repnz
xchg
mov
cmp
jbe
ret
je
ss
add
aam
repnz
lock
dec
mov
fcomps
into
cmp
aas
xor
xor
xchg
inc
push
das
push
lahf
popf
xchg
adc
icebp
out
xorb
cmp
xchg
cwtl
and
cmpsl
jae
fldcw
mov
and
xchg
inc
imul
push
out
lods
jo
mov
jp
cwtl
adc
sahf
stos
jle,pn
cmp
int
sti
nop
ror
mov
lcall
arpl
add
pop
sbb
fdivrl
dec
ret
ss
push
push
negl
xor
movsl
xor
test
jge
push
aas
push
xlat
jnp
lock
scas
mov
ret
test
std
and
dec
sub
jmp
mov
popf
in
mov
sbb
daa
cmp
divl
xchg
jl
insl
xor
pop
sub
stc
shrl
add
pop
jge
sbb
loop
sub
ret
mov
pop
jbe
arpl
cmpsl
mov
xor
add
stos
pop
call
adc
add
test
imul
adc
inc
push
pop
aaa
jnp
mov
incb
adc
mov
push
jo
popf
push
xchg
pop
shrl
adc
mov
enter
mov
dec
jb
and
lret
mov
dec
dec
pop
xchg
inc
aas
jne
fwait
or
mov
loop
push
lahf
pop
sbb
sbb
leave
fdivrs
push
mov
fcmovnb
cmpb
test
rclb
insb
call
push
cmp
fists
mov
clc
sbb
or
stos
sub
mov
jecxz
jl
push
jns
mov
mov
jl
sub
mov
shrb
je
or
xchg
pop
addr16
push
aaa
loope
xchg
jb
pop
xor
jp
mov
cmc
das
rcr
adc
outsb
xchg
push
jmp
or
mull
test
dec
sbb
sbb
mov
sti
fwait
xorb
jns
sbb
in
jmp
mov
mov
mov
divb
pop
add
je
cli
or
testl
or
mov
xor
ss
pop
mov
inc
pop
je
movl
pop
adc
pop
scas
ret
stos
xor
loopne
jo
adc
or
add
mov
movsb
push
xchg
jl
imul
jno
lods
rorb
test
cmpsl
mov
aaa
lret
int3
mov
inc
sarb
pushf
mov
fmul
pop
or
sbb
jecxz
and
popf
jbe
jo
and
fsubrp
jo
loope
sub
test
mov
into
and
cltd
or
xchg
adc
cmc
stos
out
pushf
outsl
inc
push
push
xchg
inc
jl
add
jl
sti
push
andl
inc
lahf
bts
insl
mov
lcall
xor
cmp
mov
pushl
mov
pop
lods
mov
lock
mov
adc
shr
sub
out
imulb
dec
and
mov
aaa
test
ret
scas
dec
nop
and
js
jge
mov
sbb
jl
pushf
pop
ss
jns
bound
gs
adcl
xchg
jmp
subl
mov
sbb
jg
pop
orb
jle
std
in
or
fadd
outsb
push
stc
das
push
pop
xchg
inc
out
pop
or
scas
mov
xlat
push
iret
jnp
mov
clc
sbb
ret
mov
xchg
and
add
xor
or
push
data16
stc
cmp
shl
push
daa
lcall
push
cs
les
dec
pop
jae
jae
mov
adc
mov
shr
xchg
push
cltd
dec
sarl
push
test
or
mov
aam
jg
jle
mov
mov
xchg
mov
xlat
mov
or
and
lock
cmpsl
inc
mov
or
mov
fdivrs
clc
adc
out
aas
test
lds
cmc
test
leave
inc
lahf
cmpsb
nop
add
sarl
testb
test
repnz
test
mov
jecxz
fistpll
inc
incl
fcmovu
push
mov
or
rcll
mov
mov
cld
fdivrl
movsb
daa
stc
dec
mov
pusha
mov
shll
loopne
mov
inc
jns
mov
lea
push
jae
pop
adc
push
push
cmp
pop
mov
daa
sub
mov
sbb
cmpsb
jbe
out
and
lcall
sub
push
mov
ljmp
aam
gs
or
sub
sub
pop
test
mov
cltd
push
insb
add
inc
pop
lock
shrl
jno
mov
test
lock
pop
jno
aam
dec
jecxz
test
mov
fs
cmp
std
mov
sub
das
in
add
ret
cmp
andb
lcall
dec
or
std
xor
push
xor
pop
out
mov
jp
ret
fsub
xor
cmc
test
pop
cmp
scas
add
add
mov
std
sub
mov
add
ret
out
and
jge
push
xchg
jecxz
js
das
push
mov
das
push
in
stos
fstp
xchg
cltd
pop
and
add
mov
add
jns
orl
arpl
mov
std
mov
or
sarb
xlat
in
mov
pop
push
mov
add
cli
rclb
sti
gs
cs
or
fcmovnu
rorl
mov
movsl
mov
xchg
dec
out
push
aad
test
jnp
mov
mov
pop
jno
lret
loop
add
hlt
mov
and
je
stos
xchg
inc
jmp
mov
lea
popf
sbb
xor
sbbb
or
iret
mov
mov
insl
in
popf
mov
fimull
setl
mov
fldl2e
repz
outsl
jge
push
mov
pop
cmp
jecxz
aam
inc
pop
bound
sub
pop
xchg
inc
cmc
mov
sbb
clc
xor
jno
xchg
adc
rolb
xor
test
int3
push
inc
loop
sbb
cmp
inc
mov
std
xchg
nop
jae
mov
cmp
lret
pop
mov
mov
xchg
aas
cwtl
cmc
jno
or
or
mov
ljmp
in
or
jg
mov
mov
es
mov
mov
xlat
jp
popf
add
stos
mov
scas
rcll
cwtl
xor
dec
lcall
lret
shrb
or
fisubrl
add
or
testb
mov
inc
sub
std
cld
lcall
inc
push
cmpsl
scas
mov
lds
xchg
pushf
adc
mov
push
lods
lahf
aas
cmp
dec
aad
filds
jecxz
iret
pop
popf
cwtl
xor
fisubs
push
dec
out
and
cmp
xor
inc
adc
adc
in
loopne
xor
cmp
lret
ljmp
jo
int3
cmp
out
or
push
sub
add
enter
dec
xor
aas
scas
push
outsb
in
jae
cltd
inc
pop
xor
adc
scas
xor
adc
nop
ror
aaa
mov
mov
jg
icebp
dec
add
push
mov
lcall
pop
sti
int3
jecxz
imul
cwtl
bound
mov
lcall
push
inc
mov
test
jo
int
fdiv
cmp
icebp
pop
fwait
rol
sub
shrl
lret
push
xchg
push
xchg
add
jle
clc
mov
lahf
xchg
push
sbbb
add
fs
dec
pop
inc
jmp
inc
adc
orb
dec
movsl
sbb
ljmp
sub
or
lret
push
lahf
jae
js
call
mov
cmpl
mov
jmp
stc
outsl
push
xor
movsl
in
sub
pop
cmp
lcall
add
mov
sub
xchg
les
pop
push
movsl
bound
movsl
divl
push
xchg
push
sti
subps
lret
lret
xchg
lret
out
inc
mov
lods
inc
loope
jp
lds
js
jae
fimuls
les
sbb
jge
js
pop
lds
mov
fucomp
orl
jecxz
mov
fwait
dec
aaa
test
add
xchg
js
push
out
fsqrt
aaa
jnp
inc
cltd
je
stc
cmpsl
arpl
es
inc
jmp
lahf
inc
xlat
aas
add
adc
or
cli
pop
pop
push
sub
lock
fstps
mov
into
dec
ret
mov
stc
jp
stos
fs
imull
das
inc
in
mov
loopne
fwait
or
or
pop
fmuls
jns
jo
push
push
mov
push
mov
sbb
pop
popa
repz
dec
and
xlat
ja
out
je
mov
add
scas
popf
testb
jge
dec
jmp
or
stc
or
mov
push
sahf
imul
lods
xchg
int3
loope
std
mov
pop
rorb
push
push
test
mov
push
shlb
inc
cwtl
sbb
inc
inc
pop
mov
repnz
sub
test
in
gs
icebp
xchg
movsb
test
out
mov
out
mov
loopne
sbb
stos
and
lahf
enter
push
ss
push
lock
iretw
lds
mov
cli
nop
cmpsb
ljmp
adc
dec
lds
jmp
movsb
mov
std
cmp
adc
stos
imul
int
test
call
call
pushf
mov
nop
or
push
jo
mov
shrd
dec
sub
loope
scas
test
xchg
xchg
roll
jb
cmpsl
stos
sub
and
mov
jg
jmp
mov
clc
inc
push
add
adc
xchg
add
fs
ds
dec
rorb
jg
inc
pop
stos
pop
xchg
jbe
adc
and
mov
into
mov
mov
insl
inc
ret
test
cmp
lods
popa
push
jmp
add
ret
out
loop
movsl
fbstp
lock
hlt
out
sbb
les
cmp
addr16
mov
xchg
ret
cwtl
stos
inc
pop
cmp
xchg
mov
repnz
xor
mov
cwtl
jb
pop
fmul
repz
aam
inc
pop
pop
jg
ds
or
scas
shrl
mov
aaa
lods
cmp
fisttpll
lock
pop
mov
loope
xchg
std
sahf
xchg
insl
dec
je
mov
add
ss
sahf
adc
dec
mov
bound
or
ss
and
and
xchg
repz
adc
pop
popl
dec
repnz
adc
mov
shlb
pop
mov
aas
dec
out
std
adc
out
out
cmp
decl
jne
inc
xchg
subb
mov
mov
push
cld
mov
jnp
mov
sahf
test
push
pusha
mov
aas
testb
ficoms
mov
xchg
dec
rol
aad
fildl
daa
lock
dec
roll
dec
fwait
sbb
cmpsb
addr16
addr16
sub
mov
mov
setno
jecxz
lea
insb
mov
xor
adc
jle
movsl
pop
arpl
enter
sti
repz
add
dec
cmp
add
imull
inc
mov
pop
pushf
adc
fimuls
mov
cmpsl
aad
sarb
in
arpl
cmc
cmp
je
es
shlb
or
xchg
lret
fldenv
int3
popa
dec
mov
push
test
push
not
std
jno
cmpsl
mov
les
add
test
mov
add
test
mov
or
fcompl
pushf
fs
je
and
ja
push
inc
arpl
mov
inc
cltd
lods
cmp
sub
xchg
fadd
mov
or
enter
dec
scas
xchg
jp
cmp
mov
icebp
movsb
jo
fstpl
inc
pusha
icebp
ja
test
xorl
jno
loope
and
and
cli
pop
imul
test
and
call
jno
hlt
clflush
fidivs
cmp
push
inc
mov
and
imul
sub
outsl
sub
lret
dec
or
fs
add
lock
fdiv
jl
push
rclb
push
or
loop
push
sti
stc
aad
sahf
negl
dec
jecxz
jne
xchg
inc
aam
cmp
push
leave
push
add
lock
push
es
adc
mov
adc
sub
orps
push
or
pop
mov
testb
insl
icebp
jl
sahf
in
or
mov
sub
dec
jbe
mov
dec
push
or
pop
sbbl
push
inc
decl
jbe
jae
or
shll
xchg
aaa
stc
mov
shl
mov
divl
pop
stos
aaa
xchg
adc
ret
lock
add
or
jecxz
negl
movsl
pusha
or
or
or
adc
sahf
jmp
pop
cmovb
cmp
pop
jge
xchg
dec
test
mov
ret
xchg
xor
pop
sbb
mov
into
mov
push
out
out
fs
inc
scas
add
inc
fldenv
data16
mov
push
mov
adc
or
test
lret
inc
push
sbb
cli
inc
jne
icebp
adc
jl
adc
aam
sbb
mov
sbb
sbb
pusha
inc
or
ret
adc
cmpsb
loop
cmp
push
outsl
adc
adc
ss
aam
dec
pop
adc
jg
inc
push
jmp
test
or
les
adc
in
mov
subl
add
in
cwtl
stc
xchg
in
repz
add
sbb
push
outsl
sbb
dec
hlt
mov
sub
add
filds
andl
cmp
cmc
cwtl
test
jbe
cmpsl
mov
lcall
cmp
jbe
sub
lahf
adc
clc
fdivrl
int3
test
ja
pop
cmc
bound
mov
mov
mov
xor
ja
jno
icebp
sarl
les
repz
in
and
push
rcrb
cmp
pushf
jnp
cltd
scas
enter
cs
shrb
test
mov
mov
ss
jns
ss
inc
inc
pushf
jmp
mov
mov
loopne
aam
push
pop
push
xor
movsb
sub
inc
xchg
adc
add
jp
add
fcoml
xor
repz
xchg
fidivrs
xchg
ret
mov
cs
jecxz
aam
int
sub
ss
popf
or
pop
lret
mov
xchg
mov
int
lea
inc
aas
push
jle
shrl
mov
adc
and
rol
popa
cwtl
pop
dec
test
test
loop
and
aas
iret
pop
or
inc
mov
rcrb
cmp
pop
xchg
faddp
mov
popf
sarl
lahf
xor
sub
cmp
lcall
pop
std
lret
aas
mov
mov
or
cmpsl
push
add
add
jae
sub
push
outsl
inc
sbb
xor
rcl
lods
jg
pop
cmpsb
jle
scas
and
push
jae
stc
mov
sbb
jp
cmp
mov
or
aad
xchg
dec
xchg
cmc
stos
cmp
adc
jbe
das
xchg
push
test
nop
adcb
pop
sbb
ret
mov
and
roll
jle
xor
push
jg
stos
mov
std
push
and
adc
incb
adc
cli
or
cwtl
int
or
int3
vmovntps
add
push
test
mov
shlb
jmp
jne
jnp
jb
mov
or
outsl
and
outsb
ja
int
or
ret
out
push
mov
movsl
sbb
lss
inc
data16
inc
loop,pn
test
dec
push
scas
pop
mov
aas
pop
ds
push
lods
pop
sbb
mov
ja
outsl
outsl
js
xor
cmp
cli
sub
scas
addr16
add
inc
test
repnz
inc
sbb
xor
test
mov
lret
and
sbb
ret
mov
inc
out
stc
mov
pop
push
ss
xor
mov
int3
aas
mov
loopne
jbe
cmp
gs
insl
lea
stos
popa
jg
jns
aas
das
jne
sub
mov
jmp
ljmp
sarb
or
xchg
jnp
mov
xor
hlt
fdivrl
fwait
xor
out
xchg
pop
icebp
and
popf
jns
add
adc
mov
push
jecxz
pop
jge
movsl
test
push
and
push
inc
push
insb
xchg
sarl
into
repz
je
pop
push
adcl
adc
cmpsb
jnp
call
insl
adc
jg
xchg
pop
xor
icebp
or
cmpsl
cmp
inc
jl
cmp
dec
adc
orl
xchg
inc
adc
mov
fucomi
in
xchg
cmc
stos
repnz
aas
scas
cmp
mov
pop
jmp
mov
imull
sbb
mov
add
dec
jle
loope
je
aad
mov
data16
xor
pop
push
mov
pop
mov
jecxz
in
out
pop
test
push
ljmp
repz
jbe
sub
dec
sbb
mov
les
jbe
mov
sbb
adc
pop
fsub
jmp
clc
dec
in
or
inc
push
cmp
xchg
nop
iret
pop
or
out
mov
mov
aam
add
cmp
jno
es
in
ja
jbe
inc
push
dec
push
notb
lret
loope
dec
or
cmp
pop
jl
fnstenv
stos
mov
test
jae
fmulp
push
cld
aas
ficompl
fisttps
xchg
push
adc
outsl
call
addr16
sub
cs
sbb
xchg
cmp
add
adc
push
inc
dec
jg
cs
ret
jmp
jnp
mov
dec
push
add
jb
xlat
in
push
test
sti
push
rcrb
cmp
mov
lods
or
cwtl
and
jle
shlb
mov
and
adc
pop
lds
pusha
movsl
push
icebp
and
xchg
movsl
and
mov
jnp
jl
xor
push
test
add
sar
test
jle
cmp
test
ret
add
add
cmp
and
sbb
out
icebp
cmp
sahf
shlb
xchg
cmp
jo
lea
jne
jbe
and
inc
into
jge
cs
sub
neg
xor
popa
es
out
mov
jae
out
dec
test
jnp
mov
pop
dec
roll
mov
popa
mov
xchg
leave
in
sbb
aaa
sti
dec
pop
push
push
das
xor
xchg
add
mov
adc
fwait
scas
mov
mov
out
icebp
mov
xchg
mov
and
adc
iret
lods
and
in
dec
cli
daa
mov
add
add
and
je
cld
js
sub
mov
sub
push
loop
enter
fdivp
mov
aas
ljmp
cli
fwait
jnp
addr16
dec
mov
loopne
scas
testb
mov
loope
cmp
jmp
xchg
or
add
in
or
cmpsb
jne
les
dec
fwait
mov
push
mov
push
aad
daa
push
xor
out
or
sbb
adc
mov
aaa
push
or
mov
je
pusha
sbb
insb
loopne
scas
aaa
push
mov
push
adc
adc
bound
js
add
iret
sbb
jno
cwtl
add
jge
sub
inc
lcall
xor
or
sbb
add
jnp
dec
or
clc
imul
cmp
scas
scas
mov
push
popf
rcrb
in
roll
jmp
rcl
inc
mov
std
cmp
xor
push
mov
mov
push
pop
mov
adc
icebp
inc
inc
mov
add
pushl
sbb
lret
mov
hlt
xor
repz
cmp
cmovnp
add
lea
jge
xor
sub
in
mov
lcall
pop
es
push
pop
je
js
cmpsb
adc
cmp
lahf
lea
inc
inc
mov
scas
pop
inc
subl
fcmovbe
mov
lock
stos
jb
outsb
push
dec
icebp
lcall
rorl
and
and
mov
or
das
jge
cmp
cmpsb
int
cmp
push
cmpl
push
shlb
andl
xchg
sbb
ljmp
jge
adc
cli
test
sar
movsb
inc
daa
aad
pop
xor
and
scas
inc
or
mov
fildll
lds
enter
lcall
jo
push
mov
clc
sub
ret
mov
inc
out
jo
sbb
ljmp
fmulp
pop
fnsave
outsl
inc
dec
fdivrs
or
nop
ficoml
mov
xor
mulb
aam
js
jnp
call
loopne
xor
fldl
xor
popa
aas
rep
nop
cmp
sub
push
sbb
out
out
dec
push
jb
push
fdivrs
adc
jg
or
cmpsl
enter
repz
xchg
push
jmp
lea
test
jge
cmpsl
mov
mov
pop
dec
mov
dec
popl
adc
dec
out
jmp
jge
adc
jae
sub
mov
pop
sbb
movsl
jne
jl
or
pop
arpl
in
loop
movsb
jge
push
push
out
es
outsb
mov
push
rcl
sarb
cmpsl
cwtl
add
jge
lahf
imul
sub
pop
sbb
loope
out
pop
inc
fildl
lcall
sbb
repnz
pop
shlb
mulb
addl
xor
rolb
mov
test
jb
sub
nop
lds
sub
mov
mov
outsl
mov
push
adc
cmp
mov
mov
xchg
rorl
xchg
in
jmp
test
or
es
lahf
mov
push
xlat
mov
cmc
pop
out
dec
add
mov
gs
dec
arpl
in
test
jnp
fstps
aad
mov
inc
subl
mov
ja
jns
pushw
xchg
loope
lods
mov
out
imul
jl
add
xlat
adc
cmp
fisttpll
rcrb
pusha
popf
jle
dec
dec
fs
push
xchg
scas
cli
mov
repnz
mov
jl
xchg
out
outsb
mov
dec
jo
cmp
xchg
loop
or
or
fidivrs
or
inc
pop
data16
pop
arpl
inc
mov
daa
mov
mov
pop
in
fimuls
push
les
adc
jnp
test
std
testl
loopne
movsl
jne
das
sub
test
sub
mov
pop
addr16
jb
add
insl
mov
sub
pushf
xchg
mov
sub
pushf
add
cmp
mov
sub
mov
pop
pop
loop
ret
insl
xchg
dec
fiadds
push
push
loopne
into
cwtl
ret
es
push
lret
adc
xchg
leave
dec
in
adc
lcall
push
cli
pop
adc
dec
adc
dec
mov
leave
mov
sbb
push
fdivl
out
popa
mov
js
sub
jecxz
sahf
test
sub
pop
push
dec
popf
jb
jo
inc
cld
sahf
mov
inc
ja
je
push
call
cwtl
or
mov
xor
popa
xchg
or
xor
das
sahf
int
adc
shll
shlb
ficompl
test
rcrb
and
fs
lcall
ret
push
sub
sbb
add
pushf
popa
nop
mov
mov
in
leave
test
xor
ss
add
out
sub
call
sti
ja
add
cmp
shrb
out
jge
add
push
nop
ja
insb
pop
inc
jno
adc
mov
add
cmp
enter
js
adc
jo
push
movsb
cmp
fistl
pop
in
dec
mov
aas
leave
push
push
adc
lret
push
or
inc
lret
push
mov
xorb
push
jg
lret
dec
jne
pop
inc
or
dec
cmc
shrl
insb
jne
testl
sbb
aaa
std
inc
push
fiadds
inc
ljmp
js
cld
out
adc
stos
sub
in
jp
jne
sub
cmpsb
mov
xor
clc
adc
popf
dec
int3
mov
out
int3
jne
xlat
lahf
or
lcall
sti
pusha
pop
daa
mov
stos
mov
iret
stos
in
stos
scas
jnp
or
pushf
xor
pop
inc
addr16
inc
loop
in
fucom
int
adc
or
dec
out
ljmp
jp
and
mov
jnp
aad
imul
test
je
xchg
inc
dec
xor
jl
in
fcmove
or
sarl
inc
ss
insb
bound
xchg
push
push
mov
into
shlb
jbe
or
imul
aad
int3
jg
mov
fsts
fbstp
push
rolb
mov
mov
ror
cmp
xor
aas
cwtl
push
repz
mov
inc
fcomps
out
nop
sahf
inc
jmp
jle
stos
or
arpl
xchg
adc
mov
pop
test
movb
xchg
mov
push
decl
dec
lods
mov
xchg
sub
cmpsl
imul
daa
imul
mov
out
cmp
push
sub
xchg
int3
dec
fadd
pop
push
xchg
and
lea
dec
lret
icebp
ss
xchg
pop
rclb
add
jl
mov
psraw
imul
sbb
jmp
ljmp
sbb
insl
test
rcrl
repnz
in
clc
fwait
xchg
aas
stc
daa
add
or
mov
sbb
das
mov
sbb
sbb
push
adc
fwait
loopne
ret
shlb
or
orb
adc
and
loopne
imul
sbb
fxam
jl
jl
out
es
pop
pop
lods
ja
jnp
add
mov
push
movsb
jge
mov
mov
adc
dec
push
inc
stos
jmp
mov
cltd
jo
cmp
or
add
cmp
je
or
pop
sbb
or
mov
dec
outsb
sti
mov
sbb
jmp
pop
cmp
je
daa
cs
push
sahf
les
cld
sub
cs
out
inc
inc
ret
clc
loop
jns
push
cmp
inc
in
and
jnp
add
sbb
repnz
adc
dec
in
push
sahf
jp
lods
inc
in
push
pop
ret
pop
push
inc
sbb
mov
or
and
decb
fisubs
pop
psubd
adc
dec
mov
movsl
jge
pop
mov
imul
mov
xorb
addr16
xchg
and
push
roll
cmp
aam
or
daa
in
ficoml
sahf
jo
sbb
cli
loope
rclb
xor
lea
pusha
ja
stos
repz
mov
mov
dec
test
rorl
sub
inc
cwtl
cld
dec
setae
push
movsl
inc
pop
dec
push
mov
fwait
rolb
pop
decb
jmp
push
lahf
les
pop
bound
xchg
dec
mov
pop
dec
call
lock
cmpsb
fs
mov
and
ljmp
nop
sub
adc
inc
ja
sbb
jnp
xchg
loopne
sub
adc
fists
test
push
lea
pop
sub
sbb
in
dec
clc
pushf
jno
fwait
xor
cmp
dec
cli
fcomip
sti
dec
inc
rcll
aaa
icebp
cld
pop
xor
dec
dec
pop
jle
jecxz
rclb
dec
sbb
scas
test
std
add
rorb
pop
cli
mov
testb
or
gs
out
lods
add
outsl
pop
push
popa
test
cmpsl
adc
call
movsb
pusha
mov
cwtl
xor
sbb
pushf
out
dec
mov
xchg
inc
jno
pop
and
fidivrl
lods
pusha
fsts
sub
cmpl
cmp
pop
pop
int
adcl
adc
popf
adc
dec
inc
out
and
and
jecxz
mov
addr16
mov
aad
add
add
cmp
xchg
sbb
sbb
call
xor
clc
pushf
loope
jne
aaa
jge
fsubrs
or
add
push
fistpl
jle
adc
repz
imul
pushf
and
test
movsb
adc
test
cmp
xor
xor
shlb
pushf
add
push
clc
push
add
sahf
cwtl
das
lock
xor
ficoms
inc
push
cmp
xchg
fisttpll
push
xor
ss
fs
adc
aam
lahf
jns
jecxz
into
inc
pop
cli
dec
in
adc
mov
adc
sbb
sub
add
jecxz,pt
pop
es
jp
and
cmc
fcomps
in
leave
shrb
and
or
sbb
pusha
loope,pt
inc
repz
les
jnp
sbb
sti
rcll
inc
xlat
stos
movsl
xchg
aam
or
mov
loopne
daa
pop
xlat
push
sub
lret
fs
cmp
jmp
loope
into
call
cmpb
shll
jmp
push
daa
xchg
out
cmp
add
sub
outsb
insl
sub
notrack
and
arpl
mov
inc
or
xchg
testl
shrb
mov
cmpsl
iret
test
mov
cmpsb
xor
mov
lea
lds
or
or
xlat
imul
pusha
pop
mov
cmp
das
iret
mov
lret
mov
push
std
outsb
push
mov
fildl
stos
insb
cwtl
test
loop
test
dec
shll
sub
ljmp
pop
test
or
sbb
nop
and
lock
add
cmp
cltd
push
rcrl
scas
inc
pop
roll
sbb
xlat
mov
pop
mov
cs
in
out
lret
xchg
adcl
iret
adc
lock
sahf
shld
push
add
es
dec
inc
or
ret
popa
dec
push
or
out
jge,pt
cld
jmp
std
sbb
mov
cs
pop
inc
adc
mov
lcall
adc
xor
mov
push
xchg
loope
repz
push
xorb
sub
rcrb
stos
push
repnz
jecxz
xor
jge
push
popa
neg
inc
int3
in
lds
ret
xlat
scas
dec
pop
sub
and
jbe
sub
fstps
lock
push
popf
mov
insl
rcll
pop
xor
rcr
adc
out
fistl
sub
mov
subl
adc
xor
jmp
inc
cmp
test
sbb
mov
clc
sub
addr16
out
std
gs
nop
adc
push
hlt
cmpsl
enterw
and
mov
subb
xor
sbb
jno
sub
dec
mov
call
daa
mov
mov
je
scas
push
shll
in
out
int3
rorl
push
ds
int
mov
mov
jns
inc
test
in
push
shrb
inc
sbb
jae
xor
enter
xchg
mov
add
sbbl
adc
movsl
xor
lock
xor
leave
jbe
dec
inc
mov
es
movsl
push
gs
mov
cmp
repnz
push
in
mov
or
ret
and
jge
add
and
imul
xchg
xlat
adc
inc
jbe
xchg
push
or
sub
xlat
fwait
gs
lods
push
pusha
imul
outsb
push
loop
and
into
lds
out
ds
xchg
cli
fmuls
cmc
jg
xchg
jge
and
xchg
jns
into
pop
int3
push
cmp
push
lret
or
push
bound
test
outsl
ss
es
std
push
aas
or
jns
adc
sbb
xlat
rcrb
icebp
push
outsl
aam
xor
mov
push
mov
add
push
jns
lahf
dec
dec
fisubl
in
or
leave
dec
inc
imul
lret
bound
movsb
add
mov
mov
or
push
xor
add
negb
loopne
stc
cmp
mov
mov
inc
jo
test
xor
xchg
ds
cltd
pop
xor
hlt
stc
cmp
vshufps
rcrb
xchg
cmp
mov
dec
out
insl
mov
dec
out
in
mov
and
fdivrl
dec
push
mov
sub
xchg
and
inc
or
js
rol
decl
sahf
movzwl
cmp
movsl
pop
cmpsl
shl
xor
inc
mov
mov
enter
pushf
pop
loopne
fsubrp
je
ja
push
add
lret
jo
out
jbe
clc
jl
push
daa
ret
ret
jg
cmpsb
cmp
jae
and
lcall
daa
inc
lods
push
inc
and
int
inc
je
xlat
std
fsubl
andb
push
sbb
pop
clc
and
aas
jmp
sbb
inc
and
push
xor
and
add
xor
mov
fidivs
gs
sbb
jo
sbb
mulb
loop
int
xor
mov
fbld
inc
adc
sbb
jns
stc
pop
mov
test
xor
jnp
adc
out
sub
xchg
xchg
daa
pop
hlt
mov
test
cld
stos
pop
into
loope
cs
pusha
push
loopne
pop
xor
push
adc
dec
stos
or
imul
adc
cwtl
shll
pop
adc
pop
sbb
test
add
imul
dec
sti
add
cld
xorb
xchg
or
sub
mov
fs
mov
inc
inc
movsl
push
lock
repnz
imul
stc
mov
push
push
ja
into
fisubrs
test
cmpsl
mov
stos
test
sub
pop
movsb
mov
in
inc
ror
cmp
je
popa
push
mov
aaa
subl
in
fcoms
into
dec
xchg
add
xor
push
popf
js
inc
ds
pushf
arpl
addr16
enter
aas
loope
sahf
inc
leave
lods
jbe
pop
jp
cs
push
sbb
sbb
leave
ja
xchg
ret
sbbb
ffreep
js
outsl
js
sbb
dec
xchg
push
pop
loope
out
rcll
push
mov
movsl
loopne
pop
scas
test
movl
mov
les
loopne
dec
icebp
and
lods
mov
das
cmp
lock
loope
lahf
loope
or
lock
shr
push
adc
fiadds
sub
cmpsl
addb
decl
outsl
arpl
pop
add
inc
jl
xchg
fidivrs
outsb
in
rsqrtps
xor
or
push
loopne
push
les
xchg
scas
dec
sub
pop
outsl
mov
mov
aad
adc
outsb
xchg
xchg
mov
bound
jns
mov
cmp
push
adcb
repz
lret
out
dec
push
out
jle
xchg
push
dec
lea
xchg
testl
into
daa
shll
jne
sub
adc
inc
jnp
aas
std
shll
pop
cmpsb
mov
push
xor
push
or
jecxz
sbbb
cmc
hlt
jnp
sbb
sahf
stos
out
cmp
pop
pop
xor
fidivrs
cmpsl
es
and
push
pop
sub
leave
push
pop
push
adc
pop
inc
addr16
mov
mov
fprem
ret
neg
pop
cmp
pop
mov
sub
or
pop
dec
adc
xlat
addr16
test
xor
cmp
test
and
aad
loope
pop
fadds
sub
and
aas
pop
jae
sub
jl
xchg
pop
pushw
and
leave
adc
add
arpl
sbb
clc
xor
pop
aaa
sub
fnstenv
std
adc
cmp
xchg
add
imul
mov
xchg
jl
jb
xchg
sbb
ljmp
or
cmp
shrl
test
inc
lea
jle
xchg
out
lret
mov
cmp
mov
jmp
mov
pop
scas
icebp
jecxz
cmp
in
add
sub
fldenv
push
movsl
mov
dec
mov
jne
addr16
movsb
insl
xor
shl
cmpsl
pop
pushf
lock
and
test
add
movsl
les
adc
faddl
rclb
and
call
xor
jbe
mov
imulb
sar
pop
inc
xchg
rorb
fdivr
inc
dec
bswap
push
pop
mov
mov
xor
not
jae
push
in
xor
jns
mov
ja
lock
js
or
xor
push
cmpsl
outsb
xchg
pop
enter
cltd
sub
add
mov
hlt
sbb
clc
mov
ficoms
mov
out
xchg
xchg
nop
pop
inc
xchg
xor
adc
xchg
inc
push
sub
push
rclb
add
sahf
movsb
cmovg
push
pop
and
or
pop
sbb
outsl
xchg
cld
adc
jne
les
lahf
xlat
int
mov
adc
jae
shll
iret
or
inc
mov
in
pushf
mov
insl
cmc
stos
scas
iret
xorps
aam
and
push
mov
push
xlat
fnsave
leave
sahf
pop
xchg
dec
in
inc
out
mov
jo
sarb
push
cmp
lds
dec
sub
mov
inc
sahf
sbb
xchg
add
mov
sti
je
repnz
xchg
jo
sub
jnp
add
jb
test
adc
inc
lods
decb
scas
mull
loop
pop
cmpsb
cmpsb
adc
ljmp
loop
add
pop
cmp
aad
xchg
mov
pop
fcoms
ja
ljmp
outsl
sti
mov
inc
jae
xor
gs
hlt
pop
sbb
rorl
lret
jg
mov
iretw
push
dec
jne
scas
icebp
sbbb
xchg
dec
jbe
mov
and
enter
xchg
dec
add
sbbl
mov
push
outsl
mov
dec
test
popa
dec
aam
cmp
fstpl
jae
lret
xchg
push
lahf
jb
ljmp
in
mov
gs
mov
inc
mov
orb
outsl
mov
or
push
and
cmp
inc
sub
and
seto
mov
add
or
aaa
dec
imul
fcmovnbe
jl
outsl
mov
lds
sub
aam
in
pop
loop
and
insl
jge
std
fs
ss
jns
jecxz
push
adc
sbb
sub
mov
or
xchg
add
xchg
cmp
sub
dec
cmp
inc
xchg
jge
jbe
and
mov
jbe
sbb
mov
dec
xchg
insl
out
fists
adc
and
test
mov
mov
xchg
shll
hlt
ffree
fmuls
lea
addl
sbb
into
mov
pop
mov
cmp
cli
fisttpll
inc
add
pop
hlt
cltd
or
mov
inc
jbe
sbb
jo
mov
stos
lret
test
and
mov
cmp
adc
cmp
enter
paddq
cmpb
loop
repz
jno
outsb
push
mov
std
scas
push
fstpl
push
fs
lahf
ss
xchg
shr
gs
lock
jle
lea
stos
das
lret
mov
das
dec
enter
mov
nop
mov
xlat
sbb
sbb
mov
fiaddl
cli
adc
add
xchg
lret
pop
in
fsubl
faddl
xor
sbb
in
xor
pop
out
jno
inc
ret
adc
js
xchg
dec
js
call
push
orb
fisubrl
mov
pop
fwait
sbb
mov
or
jecxz
aas
sub
fidivrl
insl
pop
jmp
pop
bound
cmp
xor
out
ljmp
cmpsb
leave
dec
xor
adc
imul
push
mov
sub
scas
lahf
pop
xor
aad
xchg
ljmp
sbb
cmp
aaa
addr16
lcall
ds
mov
adc
cwtl
shrb
and
mov
adc
int
sub
cld
or
adc
cmc
lea
add
pusha
push
fincstp
shrb
xor
pop
sbb
lret
aad
jne
cwtl
sub
dec
insb
addr16
lret
cmp
sbb
nop
ljmp
mov
cmp
pop
sbb
cwtl
inc
xor
mov
pop
pop
addr16
push
ljmp
fld
mov
push
fnstenv
mov
jp
lock
pop
xor
mov
into
add
adc
sub
addr16
xchg
lret
pop
mov
jp
in
jle
adcb
fidivs
sub
dec
inc
dec
cltd
daa
ror
movsl
xor
enter
and
js
outsl
inc
mov
sti
mov
and
xor
xor
pop
inc
out
mov
inc
mov
add
les
je
cli
scas
imulb
ficoml
mov
mov
idivl
push
or
fsubrp
lcall
mov
push
repnz
jo
clc
stos
inc
xor
jle
scas
push
and
bound
sbb
or
pop
fnstcw
fistpll
inc
ljmp
xchg
filds
jne
xlat
in
je
add
aaa
jle
pop
flds
nop
push
adc
stos
lock
push
push
js
mov
roll
dec
xchg
call
xor
pmullw
js
adc
jmp
cltd
movsl
jge
fwait
xor
pop
and
dec
scas
push
and
inc
mov
sbb
sub
inc
inc
mov
pop
cmpsb
or
sbb
inc
es
push
ficoml
jne
vcvtps2pd
lcall
sti
jle
or
or
xchg
pop
sbb
lods
jmp
and
pop
sbb
enter
movsl
sub
xchg
mov
lea
daa
int3
imul
pop
daa
xchg
mov
adc
movsl
mov
test
mov
mov
fadd
and
and
push
enter
popa
lea
sub
mov
cmp
inc
pop
jmp
repnz
ficoms
mov
or
push
add
cwtl
inc
and
addr16
xchg
inc
punpckhwd
inc
xor
add
iret
not
xchg
les
push
jp
in
rcrb
and
adc
xchg
outsb
pop
push
mov
jae
pop
popf
pop
push
and
adc
push
pop
mov
add
jge
outsl
pop
sbb
push
nop
cltd
or
xchg
enter
roll
xlat
push
add
mov
aas
insl
push
pushl
jno
dec
aas
bound
mov
push
in
dec
das
data16
fbstp
mov
or
sbb
jae
mov
sbbb
repz
xlat
adc
outsl
test
gs
jg
clc
xor
popf
push
je
or
jecxz
into
sub
dec
cmp
aam
sti
jg
sti
jo
mov
fmull
pop
xchg
stos
mov
sub
into
fwait
cli
movsl
xchg
fdivrs
enter
test
fimull
push
cmpsb
ljmp
mov
popf
movsb
lock
lods
sub
loope
ljmp
leave
add
or
ljmp
dec
std
jb
leave
cld
cmc
adc
mov
sub
lcall
fwait
sub
and
lock
push
mov
in
bound
icebp
add
cmp
fwait
pop
repnz
das
mov
push
int
adc
inc
and
and
jecxz
and
stc
or
movsb
mov
adc
out
or
outsb
or
data16
lods
or
lcall
push
push
dec
jae
cltd
sub
outsl
iret
rcll
arpl
and
in
in
mov
inc
lds
mov
out
sbb
xchg
loopne,pt
repnz
cmp
xlat
lock
std
push
add
mov
inc
int3
xor
pop
or
push
jge
dec
dec
pushf
adc
mov
orl
cmp
mov
dec
movsl
push
ss
lds
ret
pop
sub
clc
repnz
pop
add
scas
adc
cli
mov
out
mov
or
mov
mov
or
push
test
dec
jp
nop
test
in
jae
movb
insb
hlt
cmp
aam
call
xchg
ficoms
stos
pop
into
stc
gs
je
adc
xchg
xchg
and
inc
push
sub
inc
add
test
int
push
push
repnz
in
decl
clc
mov
fiadds
dec
xor
push
and
rol
rclb
mov
inc
mov
push
popf
mov
mov
das
sub
orl
ljmp
in
mov
iret
mov
jle
or
inc
idivl
movd
cmp
scas
mov
outsb
xchg
aam
or
sub
push
xor
jb
jnp
icebp
pop
push
pop
aas
pop
iret
inc
imul
push
cmp
cmpsb
pop
or
push
push
xor
imul
imul
jbe
arpl
insl
dec
jp
or
xchg
rolb
xchg
mov
pusha
or
ret
xor
adc
push
and
aaa
lock
cli
stos
jmp
and
bound
shrl
scas
in
lods
add
mov
std
xchg
ja
mov
jmp
stos
fbstp
notl
andl
imul
jecxz
pop
out
xorl
inc
sbb
loopne
adc
pusha
adc
stos
lret
bound
je
mov
mov
and
push
mull
xchg
test
and
sbb
outsb
loopne
imul
xchg
scas
shl
adc
loope
xlat
fidivrs
dec
stos
movsb
outsb
sbb
lcall
xchg
addr16
aaa
mov
cmp
mov
rcll
xor
mov
fwait
aas
lahf
add
xchg
sub
jmp
lahf
lods
pop
stc
sub
test
cmp
sbb
cmpsl
js
mov
arpl
xchg
xchg
mov
sti
inc
fucomip
stc
xor
dec
bound
xor
mov
stc
aas
inc
shl
or
and
fisubrs
ret
adc
jle
shll
inc
mov
dec
pop
or
call
mov
mov
push
jnp
jg
xlat
out
mov
pop
ja
stc
lock
cmp
int
adc
pop
push
mov
jle
insb
sbb
pop
iret
push
decl
or
lods
cmp
clc
jmp
jmp
stc
mov
sub
setae
ror
lret
jmp
fwait
and
lods
dec
push
sbb
scas
cmc
cmpsb
mov
outsl
push
push
jnp
cmpsl
sbb
sti
cs
cmp
sbb
mov
icebp
sbb
mov
and
mov
aad
jmp
lcall
fsubrl
fmull
ss
adcl
mov
push
aas
inc
andl
scas
mov
pop
insl
fwait
mov
adcl
popa
xchg
xchg
iret
lret
sbb
fnsave
pop
jge
fwait
inc
mov
xchg
sub
orb
inc
ljmp
mov
cmp
mov
sub
scas
mov
inc
les
fs
repnz
imul
mov
rcrb
nop
and
adc
inc
out
cmp
pop
dec
jbe
lcall
stos
scas
xor
out
cltd
pop
pusha
dec
and
or
dec
xor
loopne
test
or
lret
push
in
and
fidivrs
xchg
jae
mov
push
out
outsl
jle
mov
andb
xor
and
movsb
jg
std
add
push
jecxz
jbe
insl
mov
and
js
hlt
loopne
daa
lods
icebp
je
sub
add
rep
cmp
mov
jno
mov
test
mov
fisubrl
sbb
enter
lods
lahf
rcll
mov
inc
xchg
cli
data16
mov
out
dec
loopne
push
int3
cmp
orb
outsl
stc
cmp
inc
inc
aam
cli
push
or
inc
sarl
xlat
fldt
push
lahf
sub
jge
adc
lods
mov
add
pop
push
push
mov
xchg
pop
inc
rcr
and
stc
leave
ds
mov
iret
mov
push
xor
adc
add
imul
sbb
push
dec
int
nop
dec
clc
or
xor
sbb
jmp
daa
outsb
cwtl
mov
fdivrl
fists
pop
mov
rcl
pop
movsl
jl
fsubrs
outsl
negl
inc
iret
pop
push
sub
enter
jle
mov
jbe
jge
push
cmpsb
icebp
pop
xor
push
xchg
stos
and
and
shll
jle
dec
filds
mov
dec
push
les
jp
addl
inc
popf
inc
in
loopne
jns
xor
rcrl
add
mov
or
lret
ljmp
pop
dec
cmp
sbb
jno
dec
add
and
movsl
and
imul
cmp
cmpl
lods
adc
mov
jb
cmp
jbe
daa
cli
lahf
incb
or
or
or
push
mov
dec
ss
pop
add
lods
adc
xor
rclb
add
enter
out
and
jb
inc
pop
mov
xchg
aam
push
nop
cmp
mov
daa
shr
xchg
adc
clc
mov
rorb
into
jp
jmp
mov
daa
outsl
insb
dec
aad
jo
mov
in
dec
stos
inc
lret
mov
xchg
cmp
ret
pop
test
sub
fcom
rorb
sahf
gs
jno
xchg
or
rorb
sub
repnz
dec
mov
adc
ret
stos
push
xor
andl
cmp
dec
dec
enter
fwait
scas
pop
xchg
xchg
push
push
xchg
cmpsl
aaa
mov
jle
stc
popf
xor
cmp
lret
es
add
sarb
push
int3
add
hlt
repnz
sahf
add
push
jl
scas
adc
sbb
dec
outsb
mov
add
das
xchg
sti
out
push
push
andl
bound
sbb
ss
leave
mov
sarb
insl
pop
sbb
add
pop
cld
aad
sbb
testl
push
sti
test
add
in
lea
rcll
pop
jb
sbb
sbb
mov
stos
aad
jo
push
rorb
xor
push
push
ds
mov
inc
outsl
leave
mov
mov
rorl
cmc
fwait
xchg
mov
mov
ror
mov
mov
out
test
cmpsb
fwait
xchg
adc
popa
nop
inc
cwtl
cmpsl
xchg
insl
dec
mov
mov
sahf
pop
test
xchg
pop
sbb
std
aam
inc
mov
bound
mov
sbb
stc
sti
ja
stos
movsb
roll
xor
imul
xchg
cmp
mov
mov
mov
daa
add
pop
fdivrs
popf
push
push
add
hlt
daa
mov
fistpll
jae
push
popa
xor
xor
lcall
sbb
mov
in
outsl
or
fisubrs
xchg
cmp
test
flds
inc
in
mov
jle
mov
ficoms
mov
addr16
add
mov
outsb
jecxz
mov
pop
into
mov
inc
sti
jl
scas
fstpl
gs
out
jp
adc
pusha
jg
fisubl
xor
push
pop
sbbl
sahf
and
ja
rorb
xchg
pusha
std
aam
imul
ljmp
jae
mov
pop
push
test
xlat
xor
iret
mov
aaa
aam
mov
sbb
add
xor
sbb
xchg
xchg
push
movsl
fucomip
jno
lds
stc
push
add
lods
stos
test
adc
rcll
bound
push
xchg
inc
pop
push
sub
repnz
lock
pop
es
dec
push
loopne
es
movsb
mov
fdivl
jl
xchg
mov
adc
mov
pop
push
loopne
pop
int
ljmp
adc
jle
jno
pop
mov
jo
push
in
insl
jnp
outsl
or
stc
fwait
sbb
mov
cmp
shll
pop
ficomps
cmp
jp
cmp
add
iret
cwtl
dec
dec
jp
inc
jne
mov
lea
cld
fstpt
xor
hlt
popa
scas
fidivrs
in
cmp
or
mov
decb
pop
cli
dec
add
test
pop
movsb
mov
cltd
and
jg
sub
fcmovnbe
dec
push
pop
lahf
cmp
sbb
mov
inc
filds
mov
fsub
bnd
and
popfw
jmp
int3
iret
adc
aaa
out
imul
outsl
jb
mov
jmp
repz
sbb
pop
push
sub
mov
xlat
in
lock
fucomip
sti
or
imul
and
push
repz
orl
cmp
mov
dec
mov
xchg
je
xor
dec
hlt
js
test
popa
mov
repz
iret
fcoml
inc
lcall
add
mov
movsb
out
loop
test
gs
fwait
mov
cltd
jb
in
fcompl
add
mov
shrl
hlt
cmpsb
adc
or
push
pop
mov
pop
and
cmp
jmp
leave
subb
in
jnp
in
iret
stos
mov
pop
in
imul
jle
shll
or
rorl
fisubrs
lcall
inc
mov
cmp
lods
fidivrs
mov
inc
sub
push
push
mov
add
push
nop
xchg
pand
and
add
cmpsb
stos
sub
mov
js
imul
jnp
or
mov
pop
or
mov
pop
cs
cltd
daa
ret
ret
pop
mov
cltd
push
rcll
mov
or
sbb
outsl
inc
in
mov
jge
vpxor
stc
std
jecxz
inc
mov
jnp
sarb
jmp
outsb
mov
xchg
cmp
fistpll
xchg
pushf
aas
push
push
sahf
imul
adc
inc
popa
lods
int
pop
es
loope
or
loop
push
shrl
mov
insl
sub
sub
xor
test
adc
hlt
mov
inc
push
je
jbe
cmc
mov
fmuls
xchg
cmpl
andl
xchg
push
adc
jg
sub
sub
mov
jmp
push
sub
mov
mov
sub
cmp
pop
lret
fnstenv
ds
ret
in
mov
pop
jnp
or
jno
inc
mov
sub
test
fst
scas
add
pop
popf
jl
insl
mov
mov
sahf
mov
das
xchg
xor
and
pop
pop
fcompl
popl
sub
dec
jl
sub
hlt
sub
dec
fimull
and
push
aas
jne
sbb
xchg
outsb
push
cvttps2pi
mov
ja
inc
push
adc
pop
into
cmp
std
fnstsw
jno
push
cmp
rcll
jbe
xchg
orl
pop
jle
rorb
icebp
divl
leave
loop
xor
mov
sti
aad
adc
lret
icebp
and
dec
inc
or
rclb
std
idivb
mov
xchg
int
sbb
adc
or
sub
push
jne
dec
jnp
cmpsl
push
lcall
lret
int
movsl
mov
aad
jecxz
and
cmpb
jb
push
add
cmp
addr16
pop
sahf
sbb
rcll
jle
push
push
or
out
int
mov
psubsb
sub
addr16
mov
add
pop
cltd
adcl
repz
xchg
push
mov
stos
stc
mov
pop
push
stos
dec
out
out
int3
enter
lods
dec
xchg
cmc
scas
fucomi
arpl
adc
out
lahf
push
cwtl
cmp
or
xchg
fsubrs
fstpt
mov
ficomps
push
arpl
shrb
imul
lds
push
adc
push
or
outsl
lahf
outsl
arpl
mov
add
inc
mov
pop
sub
mov
dec
nop
and
je
jmp
xorl
mov
push
fdivp
dec
dec
sub
adc
mov
pop
jns
push
xor
stc
and
or
loope
add
ret
pop
xchg
int3
out
fs
mov
mov
test
mov
sbb
inc
rcll
or
movsb
mov
adc
jg
in
xor
dec
dec
or
sbb
sub
mov
insb
mov
pop
push
dec
movsb
xor
mov
out
icebp
add
es
ja
rclb
popa
push
pusha
psubw
inc
fildll
mov
adc
adc
or
xchg
call
mov
iret
pop
movl
or
or
jle
pop
push
sub
hlt
xchg
movsb
jecxz
les
lods
pop
or
not
inc
xchg
mov
cmp
adc
nop
stc
inc
pop
xor
push
fsubl
js
xchg
and
rorl
push
test
mov
in
sbb
jmp
adc
call
push
mov
mov
aaa
pushf
jmp
jbe
mov
sbb
mov
and
xor
cltd
adc
jmp
stc
shl
js
aaa
push
in
lods
sub
sti
inc
or
mov
cmp
negb
in
test
xchg
rcrb
ficoml
adc
lea
sbb
add
add
decb
fidivs
xor
jmp
push
loop
dec
dec
ss
inc
leave
mov
mov
pop
into
das
ret
popf
bound
mov
test
push
xor
xlat
and
imul
mov
out
push
cmc
xchg
call
xorl
push
sahf
xor
pusha
sub
inc
outsl
mov
inc
std
mov
cmp
data16
loope
dec
ljmp
pop
xchg
fprem1
sub
mov
pop
test
push
pop
out
lret
sub
xlat
mov
or
or
sbb
in
jmp
out
ret
xor
int
mov
inc
jns
rol
cmp
idiv
out
adc
mulb
pop
push
out
movsb
in
adc
into
jnp
mov
xor
inc
call
mov
test
sbb
mov
pop
mov
shr
in
sarl
cmp
testl
imul
fldl
or
sahf
push
fs
xor
ret
jmp
sbbl
fyl2x
mov
and
pop
stos
shrl
es
pusha
cmp
outsl
dec
dec
repnz
jae
xor
xor
and
mov
mov
jae
sbb
add
call
xor
xlat
push
cs
and
insl
cmpsb
and
inc
fcom
stos
jmp
inc
mov
lds
icebp
stos
jo
fcoml
insb
mov
add
hlt
das
addr16
in
enter
xor
cmp
xchg
pop
addb
mov
sub
lret
int3
pop
test
sub
stos
pop
cmp
dec
jl
repnz
scas
add
sub
dec
aaa
outsl
mov
adc
mov
inc
out
mov
xchg
fldenv
test
or
xor
js
add
mov
xor
ljmp
iret
lods
and
into
test
inc
push
insb
inc
scas
test
sbb
sbb
jl
jle
in
adc
push
in
mov
cltd
cs
sub
mov
jl
jg
adc
sarb
jmp
hlt
jns
loopne
adc
sub
mov
rcrl
jp
fyl2x
inc
sbb
mov
push
fwait
lret
in
dec
push
and
inc
jp
xchg
push
cmp
mov
fld
cwtl
stc
scas
cmp
push
shl
icebp
fidivrl
mov
push
push
cmpsl
jge
imul
jge
mov
imul
sahf
stc
shl
ret
xchg
in
addr16
sbb
jnp
out
adc
inc
xchg
mov
in
in
mov
fwait
dec
pop
mov
or
loopne
mov
aas
xor
mov
lock
int
cmp
add
mov
mov
sarl
push
fcomps
adc
jp
ljmp
lds
roll
test
dec
or
test
jno
mov
sub
call
sbb
int
in
jp
inc
sti
test
sub
mov
lods
ss
lret
mov
andl
or
or
inc
add
in
cld
pop
inc
rcr
lcall
pushf
scas
pop
es
mov
cli
inc
scas
pop
inc
cmp
jmp
stos
notl
sub
ret
loop
mov
add
adc
jb
xor
fwait
cmp
cmp
adc
cmp
mov
fisubl
icebp
out
pop
jp
adc
dec
es
add
mov
ja
mov
pop
out
sahf
dec
jns
notl
call
ja
fwait
pop
aam
xchg
sub
inc
xchg
std
pop
lret
lds
int
pushf
in
pushf
lret
jle
push
cld
mov
call
push
or
dec
push
aas
data16
cmpsl
add
and
loopne
xchg
insl
repz
push
negl
addb
or
mov
inc
pushf
push
mov
mov
rcl
fbstp
rorb
sbb
lcall
rcrl
pop
sbb
adc
push
fcomi
arpl
and
sbb
mov
popa
out
mov
add
sub
cmpsl
and
cmp
outsl
cmp
add
fcompl
sbb
imull
xor
inc
mov
imul
mov
fnstcw
lcall
push
xchg
or
scas
int3
dec
cmc
mov
push
push
mov
mov
pop
gs
pop
std
pop
and
pop
out
jb
push
cmpsl
mov
jno
popa
adc
mov
insb
mov
xchg
aas
lret
pop
test
imull
loopne
inc
adc
les
daa
push
inc
pop
push
sub
testb
adc
add
pop
test
roll
adc
mov
and
popa
and
mov
ror
icebp
or
jo
sbb
int3
mov
fwait
lret
cli
shr
mov
mov
cmpb
bound
mov
mov
in
bound
add
mov
or
clc
cmp
adc
js
dec
rcr
cwtl
xchg
lock
push
push
lock
sbb
std
mov
fwait
cmp
les
sbb
mov
test
dec
and
dec
fisubrs
out
scas
shll
and
icebp
fisubl
cmp
popf
std
and
inc
pause
cmc
add
pop
cwtl
test
adc
or
cmp
sub
sbb
clc
adcl
cmp
roll
or
nop
test
mov
mov
cli
or
repnz
dec
sub
in
cmp
sub
movsb
sbb
mov
repnz
popa
mov
cmp
jno
popa
lods
xchg
aam
or
js,pn
addr16
out
cs
push
les
insb
jo
lods
aam
xchg
lcall
ja
mov
mov
jae
add
push
mov
in
jg
sbb
das
fucomip
pop
mov
cmpsl
aaa
dec
push
mov
inc
and
inc
sarb
inc
jl
inc
mov
cmp
je
int3
ss
jo
add
or
sub
sbb
push
movsl
imul
ret
xchg
arpl
mov
scas
movsl
xor
mov
out
fdivl
jnp
test
insl
sahf
xchg
sbbb
jbe
push
dec
fstl
jbe
popf
cmpsb
popf
movsl
daa
push
xchg
mov
or
mov
or
gs
movsl
sbb
iret
icebp
orps
in
bnd
pusha
imul
and
push
dec
jno
bound
mov
fwait
stos
rcrb
sub
mov
in
sub
mov
jbe
mov
mov
testl
ljmpw
in
dec
popa
xor
push
lock
mov
shlb
xchg
stc
rcrb
enter
in
mov
shrb
rorb
rorb
push
xchg
nop
out
imul
out
ret
sub
aas
stc
mov
push
inc
je
dec
mov
das
lods
dec
cmc
sub
scas
mov
xor
or
cltd
add
and
push
dec
movsl
pop
outsl
add
jp
test
test
sarl
adc
ret
iret
mov
jecxz
sub
xchg
inc
lods
aad
les
test
xchg
push
xor
sbbl
mov
scas
ret
cmpsb
loopne
test
or
arpl
mov
jmp
into
sar
flds
mov
lret
push
lods
std
sub
rcrb
icebp
andb
mov
cli
mov
cmpsl
gs
fs
stos
aad
adc
inc
add
lods
mov
mov
cs
cli
or
lret
stos
inc
fcompl
mov
push
mov
cmp
aad
dec
xchg
xor
in
dec
sub
cmpsl
mov
push
cmc
imul
cs
scas
int
push
pop
je
pop
pusha
dec
data16
cltd
outsb
scas
sbb
push
imul
fldt
insb
in
sub
popf
cmp
loopne
xor
mov
adc
jb
test
ret
shll
cmp
mov
sub
sbb
mov
shrl
cli
mov
jno
pop
xchg
pop
add
mov
insl
loopne
and
sbb
insb
enter
push
nop
iret
aad
mov
dec
or
pop
inc
adc
lret
push
inc
mov
sub
mov
fiadds
lahf
cmpsl
or
mov
negb
jns
push
mov
mov
adc
mov
sahf
push
mov
mov
cmp
and
push
jo
push
or
dec
pushf
xchg
dec
insb
add
les
xor
mov
je
lret
add
ljmp
fadds
xchg
mov
or
bound
xor
leave
sbbl
es
push
xchg
popf
xchg
mov
call
and
int3
mov
mov
sti
sub
or
cmc
enter
int
fs
imul
shlb
clc
sub
test
repz
ljmp
loope
ret
push
inc
mov
cltd
into
push
cmp
push
pusha
pop
popa
adc
cmp
cltd
dec
fmull
mov
add
cmp
or
aad
mov
or
lods
pop
jae
pop
xchg
pop
xchg
add
pop
out
lds
std
xchg
scas
cmp
jecxz
shr
jo
movsb
outsl
mov
filds
imul
and
shll
inc
icebp
ret
aaa
je
mov
das
clc
je
rcr
andb
pop
lods
je
pop
jae
pop
jns
ljmp
adc
sbb
fdivs
lea
xchg
pop
adc
sub
lahf
cmp
xchg
xor
nop
and
mov
cmp
pop
push
out
fldt
dec
aam
out
adc
inc
nop
push
stos
daa
xchg
xchg
lret
push
adc
stos
pop
cmp
lods
xchg
cld
xchg
mov
xor
adc
aas
and
sahf
addr16
mov
mov
pop
mov
push
fldl
dec
push
mov
cmpsl
popf
xchg
and
popf
mov
xchg
push
push
cli
insl
mov
lahf
and
idiv
shl
lea
shll
pop
mov
lods
pop
mov
movsl
jle
ljmp
data16
jmp
push
xchg
outsl
int3
pop
sbb
push
sbb
outsl
mov
push
pop
out
inc
sub
fcomi
ss
in
jge
cltd
imul
jl
movsb
mov
mov
mov
icebp
pushf
dec
add
mov
testl
xchg
js
mov
test
outsl
jae
jo
jne
fwait
stos
hlt
repnz
aad
cmc
js
jg
cmc
loope
jecxz
pop
lods
push
dec
popf
dec
dec
mov
push
jge
mov
outsl
inc
or
sub
lret
insb
xchg
fcomps
cs
xlat
call
push
push
mov
jnp
sbb
lret
xchg
lea
jae
push
dec
mov
jne
mov
inc
mov
leave
cmp
repz
jecxz
hlt
and
push
or
and
andl
cmpsb
sub
gs
sti
pop
loop
mov
es
and
mov
std
in
roll
sub
push
xchg
mov
out
inc
sub
or
stos
pop
scas
ja
adc
stc
dec
push
xchg
push
sbb
add
lds
rcrb
sbb
sub
mov
loope
push
ret
inc
mov
sbb
xchg
fstpt
scas
or
add
xchg
and
xorl
mov
lret
xchg
mov
or
push
mov
and
in
xor
fldt
xchg
mov
sbb
mov
xor
xorb
push
mov
data16
mov
push
in
std
or
in
pop
int
or
dec
mov
add
cli
scas
enter
ss
mov
lret
sub
inc
pop
dec
dec
dec
cltd
cmp
jne
xchg
mov
in
add
jp
xor
jbe
div
adc
pop
in
ret
lods
daa
or
xchg
lret
test
add
dec
mov
sub
jne
loope
lcall
fisubrl
jns
fstpt
xchg
mov
add
push
addr16
pop
nop
sbb
inc
mov
incb
push
into
add
out
jno
and
mov
mov
jge
push
ss
inc
jne
or
je
adc
lock
dec
push
jle
dec
jnp
and
or
mov
and
movsb
push
push
das
inc
mov
mov
cmp
mov
movsl
lcall
scas
scas
ret
or
hlt
adc
daa
xchg
cmc
mov
ficoml
push
cmp
das
das
int
pusha
mov
adc
in
push
cmp
jno
add
test
into
xor
xor
mov
jecxz
jb
mov
leave
lods
push
fstpt
gs
push
fdivl
pop
scas
mov
cmp
mov
mov
push
in
aad
shl
cmp
push
mov
mov
adc
push
push
cwtl
sahf
sub
pop
cltd
rcll
movsb
pop
sub
sbb
xor
mov
imull
into
lea
inc
aam
lods
mov
dec
xchg
ds
mov
ds
mov
push
sub
scas
mov
lods
aam
shlb
push
cltd
fcoms
fucomip
pop
jno
xor
and
push
push
fildl
add
mov
sbbb
dec
xchg
push
mov
pop
aam
sub
mov
cli
push
int3
cmp
push
mov
mov
int3
add
icebp
push
sbb
mov
cmp
mov
lods
pop
jo
sub
adc
push
int
and
mov
mov
inc
stos
mov
fimuls
stc
icebp
jnp
lods
sti
leave
xchg
push
xor
out
addr16
add
out
pop
mov
xchg
das
cmp
shlb
mov
adc
das
sub
call
shr
adc
xor
dec
mov
test
subb
insl
jno
cli
cld
out
movsl
xchg
fbstp
dec
xor
mov
pop
and
in
setnp
jnp
lret
gs
dec
pop
lods
pop
pop
int
push
cmc
cmp
lds
and
fwait
xchg
nop
imul
dec
sub
in
pop
sbb
popa
pop
or
mov
addr16
inc
ret
arpl
jno
test
repnz
aas
xchg
test
jg
sub
xchg
cmp
daa
ss
xor
lahf
cs
cmpsl
cmp
out
adc
ds
loope
lock
shll
mov
jle
mov
and
mov
sub
inc
repz
inc
add
int
add
add
mov
frstor
js
push
dec
arpl
stc
rcrl
fwait
adc
xchg
sub
neg
dec
xor
push
push
out
mov
dec
jbe
pop
dec
ja
xchg
or
mov
mov
aas
shrb
nop
sbb
sbb
push
and
push
call
sbb
or
or
inc
negl
clc
and
add
jo
sbb
push
mov
negl
jmp
mov
fisttpl
lahf
outsb
movsl
std
pop
adc
js
adc
pop
mov
test
sahf
fsubl
arpl
std
ss
mov
fisubl
pop
das
add
dec
cmc
xor
sub
outsl
aaa
movsl
xchg
sub
push
pop
decb
pop
jno
push
inc
add
aam
jmp
pop
loopne
popl
scas
sarl
push
lahf
cmp
xchg
xchg
push
jp
lcall
xlat
xchg
fsubs
dec
xchg
push
mov
pop
mov
inc
mov
aad
inc
xchg
ljmp
lret
xorl
enter
fidivs
jne
cli
adc
inc
mov
jbe
jge
pop
out
pop
lea
outsl
cmpsl
inc
sub
sbb
dec
xchg
mov
dec
sbbl
adc
nop
shll
rcll
sbb
cmp
mov
and
inc
push
push
je
clc
stos
mov
or
mov
ret
ret
xor
fs
and
lock
jo
test
les
out
push
scas
popf
loopne
inc
int3
mov
addr16
movsb
les
cmp
in
icebp
dec
add
pop
or
or
ret
jo
ljmp
mov
jne
xor
insl
out
scas
stc
out
sbb
xchg
ror
and
and
arpl
mov
dec
pop
or
lret
ja
mov
add
inc
push
ficompl
push
decb
repnz
pop
rcll
mov
or
add
push
les
or
xor
dec
scas
sub
shl
add
inc
push
dec
sub
mov
xchg
pop
push
scas
lahf
icebp
jle
inc
sbb
cli
jno
add
fldcw
adc
dec
dec
mov
mov
stc
roll
sbb
roll
test
sti
inc
clc
and
fmuls
jle
stc
pop
push
xor
arpl
cmp
push
fisttps
lea
jp
scas
lock
stos
cmp
sbb
mov
ficompl
dec
mov
push
fisubs
xchg
push
aad
push
xor
mov
fs
add
ficompl
pop
sbb
clc
insb
cltd
dec
xor
jmp
and
std
fs
push
xchg
fcomps
adc
xchg
ret
lods
push
repnz
cmp
xchg
aam
shr
mov
arpl
xchg
push
out
cmp
cwtl
cmp
sbb
je
or
shrb
mov
pop
inc
cmp
sbb
pop
mov
push
mov
push
xor
cwtl
arpl
push
adc
xor
cmp
jno
push
aam
arpl
stos
cmp
mov
add
xchg
xor
pusha
dec
cmp
dec
rorb
andl
movsb
imul
lahf
or
cltd
roll
gs
add
mov
js
fnstsw
mov
xor
or
lret
out
mov
pop
test
lock
loop
xor
jmp
sbb
or
add
xchg
outsl
mov
adc
outsl
xchg
xchg
mov
pusha
mov
add
test
ret
arpl
int
xor
mov
xchg
mov
adc
stos
clc
xchg
inc
push
loop
imul
addr16
mov
addr16
pop
jnp
imul
out
jo
sahf
pop
xlat
inc
mov
sub
movsb
mov
push
test
stc
rolb
sti
lcall
pop
adc
in
pushw
aas
mov
aas
push
and
jne
xchg
add
dec
pushf
xchg
dec
pushf
orb
ds
mov
and
lcall
sbb
sbb
stos
cmpsl
daa
iret
adc
sbb
inc
sub
pop
add
jns
fwait
pop
sbb
call
xchg
mov
icebp
ficomps
xchg
gs
arpl
shrl
xor
push
mov
push
js
and
enter
lret
iret
aad
push
or
out
inc
jecxz
div
movsl
pop
xchg
or
sar
pop
jle
test
in
aam
scas
imul
xchg
repnz
jo
mov
scas
adc
pushf
cli
pop
mov
jnp
push
outsl
or
out
lcall
outsb
or
leave
call
xchg
in
iret
jle
insb
adc
das
mov
bound
add
dec
lret
pop
movsl
les
in
dec
lret
cmpb
addl
xchg
mov
es
push
pop
jl
testl
lret
filds
dec
gs
xchg
or
loop
xchg
jnp
jbe
lock
mov
scas
inc
das
cmpsb
xchg
push
mov
daa
shrl
dec
xchg
adc
loope
lret
shll
stos
pop
inc
int
lahf
or
jnp
inc
aad
icebp
leave
add
pop
push
mov
adc
sub
dec
imul
cmp
enter
aaa
movsb
cmp
aam
into
aaa
adc
fsubs
lods
mov
bound
cmp
sbb
out
jno
aam
out
in
mov
sbb
cmp
shll
lcall
pop
ret
movsb
jo
pop
mov
mov
mov
mov
add
in
aad
jge
movsl
jo
enter
outsb
jmp
push
ja
ss
cmc
pop
int
cwtl
outsb
nop
inc
in
fstpt
iret
pop
pop
pop
stc
sub
ds
mov
loopne
and
xchg
mov
mov
sbb
movzwl
xchg
mov
lods
xchg
pop
sahf
les
cmpsb
jmp
or
das
outsl
push
mov
icebp
lock
inc
ds
cmpsb
imul
ficoml
std
jne
mov
mov
jle
push
inc
mov
lahf
or
pop
jecxz
les
enter
fistl
call
sti
push
xchg
cmc
loopne
call
inc
mov
push
daa
and
icebp
jl
mov
mov
inc
cmp
push
jle
sbbl
gs
fs
fcoml
popa
push
mov
mov
mov
push
ja
push
mov
mov
loope
cs
leave
fbstp
mov
fnsave
pop
adc
ss
xor
push
rolb
cld
xor
or
cli
jnp
out
push
jno
xorb
outsl
inc
adc
xlat
jecxz
inc
gs
push
or
sub
sub
inc
shlb
or
dec
adc
inc
mov
add
cld
jge
je
add
sub
sbb
add
and
xor
enter
sti
or
sarl
mov
adc
inc
fwait
adc
insl
ljmp
ffree
xor
and
mov
jbe
stos
xor
or
addb
clc
mov
ljmp
or
xchg
jp
nop
inc
pop
gs
mov
in
add
cmp
xor
fildl
dec
push
and
pusha
pop
fldl2t
xchg
jns
mov
xor
jne
inc
jae
aad
loopne
pop
mov
and
sbb
mov
inc
adc
and
push
jmp
jb
sbb
mov
pushf
sbb
mov
xchg
mov
out
cmp
ds
push
inc
mov
scas
add
sti
xlat
repz
nop
popa
scas
pop
sarb
pusha
loope
or
and
push
test
in
and
fnsave
mov
clc
or
adc
mov
and
dec
sarb
jnp
cmc
lret
push
cmpsb
or
adc
dec
imul
inc
mov
in
add
xor
out
imul
and
cmp
pop
stc
inc
mov
xor
or
aas
je
in
sbb
popf
and
sti
push
pop
outsl
outsl
inc
je
mov
mov
lret
lds
fcomip
mov
lcall
sbb
into
mov
rol
push
addl
icebp
pop
adc
dec
xlat
adc
xor
mov
decl
or
jmp
mov
sub
xchg
and
jg
xchg
add
push
sub
push
cli
cwtl
pop
icebp
outsb
push
insb
pop
mov
inc
cmp
movsl
jne
xchg
xchg
cmp
mov
fstps
loopne
jns
dec
dec
test
jmp
and
lret
and
mov
sbb
sbb
mov
gs
lods
sbb
daa
sbb
jno
ficoml
jl
cs
cltd
fs
pop
mov
dec
mov
repnz
lret
push
xchg
cmpsl
mov
mov
aad
xor
aam
sbb
jl
xchg
pop
pop
fnsave
dec
mov
mov
ds
dec
int
je
mov
je
xor
jnp
mov
xor
push
es
fcmovnu
outsl
lods
jl
bound
imul
push
mov
shrl
bound
or
adc
xchg
addb
and
hlt
dec
adc
sbb
ror
fildl
lods
adc
pop
shl
add
inc
mov
mov
cmp
in
icebp
mov
and
test
add
imul
pop
in
add
ret
imul
stos
aam
dec
mov
xchg
test
test
aas
cmpsl
push
adc
pop
inc
out
ljmp
hlt
sub
jge
mov
iret
jne
les
je
push
or
out
ljmp
movl
sub
jo
xchg
pop
dec
sbb
xor
mov
adc
cmp
mov
fisubrs
jae
nop
add
insb
aas
jne
gs
inc
outsl
inc
inc
je
push
sbb
sbb
aaa
popl
jne
out
sub
call
int
mov
pop
lahf
mov
in
int3
mov
aad
add
addr16
lds
dec
enter
pop
cmpsl
xor
and
les
mov
inc
dec
jne
sti
adc
mov
mov
jne
adc
mov
dec
pop
xor
mov
popf
pop
scas
jle
jl
mov
out
nop
push
and
mov
mov
xor
rcrb
rcll
loop
sbb
jnp
les
jmp
add
jbe
wrmsr
inc
push
mov
inc
hlt
cmp
lcall
push
xlat
sahf
daa
mov
inc
pop
xlat
add
jns
xor
cmpsl
sbb
fs
dec
repnz
fisttps
adc
fsubp
mov
mov
bound
imull
in
nop
lahf
aam
inc
into
fiadds
jbe
cmp
movsb
in
aaa
mov
lahf
nop
xor
pop
ss
sti
jb
sub
addr16
mov
pop
or
mov
jecxz
sbb
cmp
lods
movsl
loope
push
bound
cwtl
loope
add
sbb
mov
inc
dec
out
in
adc
fsub
cmpsb
add
je
fistpl
adc
out
pop
adcl
or
adc
fcmovnu
pop
inc
test
xorl
fistl
loop
mov
nop
iret
lock
mull
aas
cmc
std
cmc
mov
gs
sahf
mov
ffree
jmp
pop
fs
popf
movsb
sub
dec
cmp
push
sbbb
aam
sub
ljmp
cmc
icebp
push
rcrl
and
push
sti
lea
inc
stos
push
ss
popf
mov
and
mov
pop
stc
cmp
leave
ljmp
ret
push
inc
in
push
fmul
xor
test
jns
dec
nop
push
or
out
es
xchg
cli
xor
inc
mov
pop
shlb
add
mov
xchg
in
hlt
and
je
ror
imul
pusha
test
iret
xor
inc
cs
clc
fyl2xp1
jnp
add
shlb
je
xor
rolb
lds
lahf
jle
aam
mov
mov
and
sbb
push
inc
scas
rcrb
jge
xor
icebp
addl
and
loopne
call
push
je
push
aam
call
xchg
movl
mov
loopne
xchg
in
jecxz
call
jmp
sbb
mov
mov
jmp
sub
xchg
jge
sub
insl
sbbl
mov
test
mov
push
mov
jae
insb
fs
xor
mov
outsb
test
aad
jle
mov
bound
int3
inc
das
mov
xor
push
or
orb
pop
mov
fistpll
std
mov
or
test
xor
add
das
pop
mov
adc
test
pop
enter
inc
pop
xor
jecxz
es
mov
inc
ljmp
mov
lcall
sbb
cmc
xor
movsl
or
mov
sahf
int3
out
cmp
fwait
cmp
adc
inc
xlat
enter
test
adc
jle
std
call
mov
scas
js
push
enter
mov
je
fidivs
jle
in
loopne
push
mov
loop
insb
and
jl
ret
pop
xor
dec
and
into
aad
jae
leave
jne
mov
sbb
ret
imul
inc
std
arpl
pop
dec
mov
jecxz
push
mov
sub
dec
mov
ljmp
sub
push
lret
popa
je
out
push
push
xchg
ljmp
sub
cs
repnz
sub
sub
clc
and
sahf
ret
inc
cs
fwait
sahf
sbb
outsl
int
jbe
dec
outsb
test
mov
pop
mov
jno
mov
cmp
cmp
lret
cli
or
push
or
inc
fs
sbb
das
xor
dec
int
cmpsl
mov
jl
push
xor
cmp
mov
fnstsw
mov
lea
sbb
cmpb
lods
sub
sti
movsb
jecxz
jg
cmp
mov
cli
xchg
inc
jnp
nop
cs
push
add
movsb
add
cli
scas
jnp
addb
mov
dec
dec
inc
inc
mov
aam
cld
divb
andb
sbb
popa
sbb
pop
andl
or
fdiv
xor
mov
lret
push
lods
out
mov
mov
push
std
push
add
cltd
dec
sub
push
sub
fdivl
faddl
sbb
and
test
jbe
lea
imul
andl
outsb
dec
lret
scas
cmp
insb
jb
adc
adc
jbe
mov
jns
push
and
sbb
and
hlt
fistpl
mov
mov
push
mov
lods
inc
or
stos
sbb
xlat
inc
imul
push
loope
iret
fs
and
loope
stos
sbb
xchg
lods
addb
push
cltd
mov
push
and
jnp
xchg
mov
push
push
and
mov
aas
cmp
sub
daa
or
pop
ret
ja
lret
dec
scas
mov
push
fdivrs
sbb
mov
and
ja
sub
clc
inc
push
incb
ror
jge
in
outsl
in
ss
test
mov
dec
sub
or
mov
xor
mov
mov
sub
cmp
loopne
mov
inc
lret
scas
add
sbb
cld
sbb
pop
iret
sbb
fidivs
add
out
xor
out
xor
ss
sbb
jno
adc
jl
nop
mov
mov
loop
loope
or
dec
sbb
jg
mov
sub
jge
icebp
decb
fsts
push
imul
repnz
cmp
test
addr16
xchg
xor
pop
pop
push
scas
mov
and
xchg
jl
test
in
jmp
sti
je
dec
jmp
popa
call
frndint
fwait
push
dec
xchg
adc
call
mov
pop
jl
sbb
xor
and
and
and
cmp
push
push
lret
sub
mov
mov
push
gs
push
sub
or
xchg
mov
iretw
daa
cli
bnd
mov
inc
mov
jns
stos
jl
icebp
dec
loopne
push
int3
add
std
andb
ja
mov
jne
add
sbb
mov
arpl
xchg
ffreep
pop
sub
mov
inc
imul
jmp
pop
xlat
mov
mov
ret
jle
aas
add
pop
in
mov
data16
inc
mov
jmp
imul
pop
out
leave
cmp
fsubrl
cli
nop
adc
push
dec
cmp
add
int
mov
pop
js
imul
test
dec
scas
xor
and
mov
popa
xor
xchg
push
test
sahf
daa
mov
mov
rcr
dec
daa
or
cmc
into
outsb
mov
subb
loop
bound
in
lcall
sbb
or
sbb
jns
out
sbb
sbb
outsb
jbe
pop
xor
jns
xor
jb
out
leave
xor
xchg
lcall
testb
xor
push
fwait
loopne
insb
mov
adc
pop
mov
push
into
mov
outsl
jno
inc
loop
pop
shlb
scas
xor
inc
sarb
inc
into
push
cli
icebp
push
stos
xchg
adc
sub
jmp
mov
xlat
flds
popa
out
cwtl
leave
dec
jecxz
pop
lret
dec
xor
arpl
inc
mov
and
push
lret
sbb
add
out
push
push
enter
das
dec
inc
inc
xchg
mov
sbb
insb
xor
lcall
insl
push
sahf
mov
mov
mov
xchg
dec
imul
push
test
ficoml
jecxz
xchg
testb
and
sbb
mov
fcomip
sbb
iret
or
insb
or
cmp
int
movsl
adcl
cmpsl
lcall
mov
cmpsl
pop
mov
adc
or
push
pop
mov
or
pmaddwd
movsb
sub
fs
push
idiv
mov
sysenter
dec
push
fstpl
push
arpl
xor
push
les
ljmp
adc
xchg
std
inc
ds
xor
outsb
addr16
jmp
cmpsb
add
inc
in
rorl
icebp
daa
fildl
add
stos
and
ss
lret
pop
xor
and
cmp
mov
in
lcall
mov
insl
adc
pop
jo
mov
bound
mov
jmp
mov
call
loope
loopne
lods
inc
push
xor
fadds
cmp
out
push
aas
pop
lahf
fldcw
pop
push
mov
push
mov
push
out
xor
into
int3
int3
xor
test
cs
sub
movsl
sti
xor
movsl
divb
push
or
fidivrl
mov
jg
cmpsl
mov
insl
xor
ficompl
icebp
jo
sarl
movsb
mov
or
sub
ficomps
sahf
push
cmpsl
sub
and
lret
sub
in
pop
jle
and
lea
xchg
out
push
js
lahf
xchg
aad
in
adc
push
push
pusha
and
imull
jns
pop
inc
out
movsl
pop
and
dec
jno
les
mov
dec
outsl
mov
iret
hlt
push
xlat
cmp
cmpsb
cli
fwait
js
xor
sbb
repnz
fisubl
xchg
pop
cmp
sbb
adc
mov
push
adc
pop
int3
pop
ficomps
stc
ret
push
iret
orl
andb
stc
xor
cmp
cltd
mov
mov
int3
push
out
stc
out
push
faddl
aaa
shl
add
inc
outsl
cltd
orb
rorb
xchg
mov
push
adc
pop
push
arpl
xor
push
mov
adc
mov
scas
sbb
jne
sub
xchg
dec
push
sub
cli
and
cld
lds
xchg
leave
mov
xchg
push
pop
shl
ja
ja
daa
dec
int
pop
rorl
fcoml
pop
scas
mov
dec
cmc
ljmp
cli
push
rolb
fdivl
inc
pop
add
mov
mov
mov
nop
out
arpl
xlat
mov
mov
les
and
repz
xchg
std
jns
mov
std
push
sbb
neg
leave
je
test
movsb
std
jmp
out
imul
aaa
mov
xor
and
xor
push
out
dec
adc
or
and
fs
fwait
jp
sbb
add
ret
and
mov
data16
push
push
mov
in
nop
sbb
ljmp
push
adc
nop
mov
cmpsl
flds
push
xor
mov
or
sbb
fs
jnp
daa
mov
shr
inc
repnz
shrl
and
or
inc
bound
sub
add
ja
out
dec
ss
in
jb
ljmp
fidivrs
std
pushf
movsb
cmp
sbb
sahf
xchg
jae
lds
es
int3
xor
jno
mov
xchg
adc
or
movsl
out
dec
fcoms
inc
adc
push
stos
ret
stos
mov
mov
aad
inc
push
idivl
xchg
addb
imul
out
cmp
test
sub
and
or
clc
cmp
sub
rorb
cmp
scas
pop
jl
mov
adc
jmp
fistl
sub
in
test
loope
cmp
inc
cmp
push
dec
push
pushf
cmpsb
inc
test
ja
push
mov
jno
mov
pop
xor
out
mov
cltd
aad
cmp
mov
sbb
push
pushf
jge
imul
mov
sbb
mov
cmpsb
fs
push
ret
add
rolb
insb
mov
and
lea
out
fwait
xor
push
loope
jae
in
aas
xchg
fiaddl
in
sub
aam
adc
and
out
shlb
ss
pop
in
popa
negb
and
mov
xchg
arpl
or
add
xchg
sub
fdivl
jp
mov
je
scas
or
dec
mov
imul
xor
mov
stc
push
repnz
in
mov
mov
das
mov
mov
push
mov
mov
ficompl
nop
dec
jecxz
xor
add
inc
inc
cmp
pop
les
rorb
lods
das
clc
xchg
adc
and
repnz
call
popa
pop
std
out
insl
sahf
arpl
stos
dec
aas
cmp
pop
pop
mov
cmp
mov
roll
int3
add
push
fbld
imulb
ljmp
data16
sbb
sbb
xlat
pop
gs
enter
cmc
mov
mov
mov
dec
inc
aas
loopne
pop
push
cmp
pop
int3
scas
xchg
fistpll
cs
test
and
xor
int
add
aaa
insb
adc
adc
shr
jmp
push
sbb
negl
test
nop
xchg
push
xchg
rol
push
jo
std
or
cmp
ljmp
push
orb
sub
push
push
add
xchg
jo
inc
dec
fstp
test
aaa
scas
mov
xchg
stos
pop
aam
or
inc
pusha
mov
aas
cltd
dec
push
push
mov
jnp
leave
inc
repz
int3
fisttpll
icebp
jo
shrb
ljmp
imul
jmp
test
adc
inc
inc
cld
mov
jle
fmull
jb
bnd
xchg
pop
xor
jnp
sub
scas
pop
xor
cmp
mov
push
mov
fwait
dec
clc
sbb
dec
jl
loope
movsb
adc
adc
cs
sub
jne
cltd
insb
xchg
add
in
lods
ret
cmpsb
cmp
inc
xchg
push
add
jg
pushf
ljmp
fwait
adc
jp
sarb
push
add
aam
cmc
popa
rorl
add
sbb
xchg
mov
shl
call
cmp
jecxz
xor
fnstsw
inc
sub
negl
push
xchg
cmc
cmp
int
lock
push
ljmp
nop
std
jl
test
mov
rorl
inc
repz
pop
lds
lahf
lret
repnz
cmp
movsb
loope
cmpsb
push
hlt
leave
xchg
ds
jne
aaa
repnz
inc
pop
andb
xor
mov
divb
lcall
or
iret
jmp
sbb
xlat
fwait
dec
shrl
jnp
xchg
jp
orb
xchg
ljmp
jbe
bound
test
sbb
sub
roll
fiadds
mov
or
pusha
and
fisubs
enter
cmpsl
fidivl
insl
sti
sub
mov
push
shl
sub
jne
push
lcall
arpl
es
pop
adc
dec
jbe
mov
sub
mov
or
xchg
sarl
in
fcom
sbb
dec
mov
pop
or
arpl
cmp
in
call
push
addl
movsl
negb
leave
lret
mov
daa
push
mov
push
mov
mov
and
imul
cmp
std
test
push
in
pshufw
jmp
mov
jnp
outsb
fildll
cmp
leave
sub
dec
jns
cwtl
sub
add
nop
in
arpl
nop
or
add
jg
jnp
jp
test
outsb
cmp
adc
mov
outsl
popf
addr16
scas
mov
clc
push
mov
mov
jg,pt
enter
mov
pop
mov
aam
ret
les
mov
rorl
mov
pop
inc
dec
pop
sbb
mov
mov
cs
mov
nop
jno
mov
lea
xlat
add
pop
push
es
arpl
mov
xchg
inc
lret
lds
mov
pop
mov
ss
cmpsl
adc
sbb
int3
iret
jno
sbbb
adcl
std
dec
addb
jb
jecxz
mov
int3
mov
ljmp
push
or
inc
mov
jmp
dec
pop
mov
cmpb
rcr
xchg
fdivrs
mov
add
or
adc
cli
outsb
xchg
jne
mov
mov
inc
cltd
mov
int3
sbb
and
int3
sub
pusha
cmpsl
loopne
movsl
ljmp
push
adc
or
dec
das
xor
lret
xchg
movsb
repz
outsl
and
and
cwtl
sahf
daa
cmp
sub
mulb
fnop
sub
fcmovnbe
popa
inc
cmp
or
jge
shl
or
mov
xor
popf
clc
scas
popf
dec
sub
and
pop
sbb
lods
jmp
mov
sub
mulb
cltd
and
iret
mov
mov
push
movsl
cmp
insl
mov
out
push
add
fs
jo
popf
repnz
adc
in
sub
movsb
in
sbb
adc
testl
xchg
xorl
fdivr
sub
cmp
outsl
sub
sbb
leave
or
adc
test
aam
push
call
push
push
mov
inc
inc
and
push
ret
leave
mov
mov
push
and
les
sbb
mov
dec
stos
sub
in
ja
stos
mull
daa
fisubl
bound
jno
insb
roll
fs
mov
hlt
inc
mov
aaa
xchg
addr16
rclb
fucomip
xor
mov
cmp
mov
cltd
das
outsb
jmp
pop
xlat
dec
test
pop
mov
ja
and
test
mov
jmp
cs
and
scas
ds
leave
add
cmp
pop
cltd
repz
jns
ss
push
fcompl
sub
ds
daa
les
cmp
sahf
jmp
mov
push
out
repnz
adc
les
xor
repnz
aad
xchg
mull
mov
or
leave
fstp
push
popf
clc
mov
mov
or
shrb
push
inc
in
xchg
sbb
push
cwtl
inc
dec
lea
and
adc
inc
push
jno
mov
jb
lret
dec
enter
out
lret
shlb
test
in
subb
xchg
test
mov
sbb
jno
jae
push
push
mov
fstpl
adc
sbb
sbb
jmp
or
cmc
inc
cmpsl
xchg
loope
mov
sbb
jp
loope
cmp
jmp
imul
mov
pop
aad
pop
jmp
lahf
jno
lods
pusha
mov
sub
pushf
mov
out
lret
pop
inc
aad
mov
lods
or
aaa
push
add
addr16
sbb
and
jmp
sbb
xchg
lcall
addl
xor
fnstsw
xor
xlat
insl
dec
fimull
jns
dec
xchg
mov
mov
mull
lret
sbb
loope
into
sti
push
notb
push
xchg
outsl
mov
ss
xchg
mov
outsl
sbb
addr16
js
jbe
cs
jo
in
pop
pop
imul
mov
mov
mov
lahf
mov
test
fnsave
xlat
cmp
fcomip
pop
jecxz
mov
jp
inc
adc
scas
mov
xchg
xor
js
jg
mov
pushf
test
leave
jno
push
repnz
sub
add
aas
lds
mov
lock
xchg
push
loope
mov
fists
pushf
daa
pop
fsub
push
adc
mov
test
cmp
dec
out
or
in
push
std
jl
pop
and
fldl
xchg
pop
push
mov
xor
mov
push
sbbl
add
andl
loope
ljmp
mov
pop
cmpsb
and
xor
je
sub
mov
xchg
nop
xor
iret
pop
dec
xor
cmp
pop
outsb
or
xor
sbb
xchg
adc
addr16
mov
mov
cmp
or
cmc
imul
mov
pop
adc
xor
cmp
aas
in
push
test
push
mulb
or
fcmovu
or
cwtl
rclb
or
out
adc
and
cmpsb
test
sub
dec
lds
cmc
repz
fcoml
sub
add
icebp
loop
xchg
push
daa
enter
in
pusha
jae
test
jb
mov
lea
movsl
sahf
mov
decb
xchg
or
push
xlat
or
gs
mov
adc
push
insb
hlt
cmp
movsl
sbb
inc
push
xchg
jns
enter
scas
push
mov
mov
ss
and
adc
in
pop
or
loope
sbb
lcall
cli
pop
cwtl
pop
lock
arpl
ficoml
shll
les
sbb
jmp
lods
push
imul
xor
sub
fiaddl
jle
xor
xchg
mov
cmp
loopne
scas
dec
loop
and
jecxz
ss
xchg
lock
jne
bound
enter
movsl
jb
in
inc
enter
push
xchg
add
sahf
das
pop
fwait
sbb
jbe
hlt
int3
jecxz
jae
pop
ja
jae
in
ljmp
push
sbb
mov
and
add
pop
outsb
sahf
stos
dec
or
xor
fs
inc
call
mov
or
test
fdivrs
jb
arpl
stos
cmp
test
in
scas
push
rorb
sahf
fisttps
mov
loopne
xchg
mov
cmp
pop
mov
outsb
xchg
mov
shl
pop
push
flds
xchg
into
dec
xor
xchg
adc
mov
push
jg
loopne
jg
subb
ret
xchg
pop
pop
stos
xchg
sbb
dec
lcall
mov
nop
test
cs
cwtl
cmc
mov
bound
and
fdivp
clc
dec
xlat
jl
inc
aaa
aaa
cmp
in
xchg
mov
rcr
iret
cmp
cltd
mov
jl
inc
jmp
xor
in
mov
pusha
aad
lods
cmp
dec
adc
stos
mov
subl
mov
movsb
cmpsl
nop
sbbl
pop
data16
mov
movsb
sbb
out
jno
test
cs
sub
pop
mov
sbb
insb
outsl
mov
mov
gs
or
ret
les
movsl
in
adc
jae
aas
or
sbb
mov
icebp
jecxz
adc
pop
jge
imul
mov
xchg
jno
lds
xor
addb
aad
js
inc
push
ret
out
dec
cmp
xor
mov
push
fildll
arpl
sbb
clc
imul
test
xor
loope
test
dec
jb
and
inc
insl
ret
clc
out
in
jbe
jb
aam
and
xchg
and
push
inc
jecxz
and
sarl
or
out
ljmp
add
or
ds
or
sub
mov
movsl
add
out
stc
mov
mov
dec
fisubrl
mov
jne
and
push
or
decb
rclb
repz
test
cmpsb
pushf
adc
test
and
xchg
je
and
aas
ja
push
clc
mov
lea
mov
movsl
push
pop
xchg
mov
mov
push
cltd
cmp
mov
in
cmp
out
push
or
cli
mov
mov
xor
imul
push
fists
dec
cmpl
gs
jle
mov
dec
mov
lahf
adc
psllw
add
sub
es
shll
pop
and
mov
cmpsb
push
out
mov
bound
frstor
jle
mov
add
and
mov
imul
mov
mov
mov
cmp
mov
xor
aam
inc
outsl
mov
mov
and
mov
or
pop
imulb
test
cmovo
or
adc
popf
addr16
je
jae
out
andl
in
or
xor
adc
inc
inc
and
fs
lret
or
addr16
loop
mov
ret
pop
hlt
shll
ret
fsubrl
nop
jbe
mov
sahf
rcrl
in
in
push
int
dec
gs
cmp
adc
out
daa
stos
sub
jbe
lahf
mov
push
arpl
sbb
iret
repz
aaa
mov
out
decb
aam
mov
cli
jecxz
insb
pop
or
sbb
js
sub
and
andb
mov
movsl
xchg
adc
xchg
sub
push
xchg
icebp
adc
rcrl
sbb
inc
fstpt
pusha
cmp
pop
ja
data16
pushf
test
sahf
sub
xlat
shl
xor
lahf
sub
sbb
cmpl
xchg
jp
pop
ret
test
xchg
adc
or
fsubl
cmp
dec
out
or
in
adc
ss
jmp
pop
push
push
xchg
adcb
mov
dec
data16
jne
mov
into
jecxz
leave
pop
repnz
xor
pop
and
sbb
mov
sbb
shll
nop
std
inc
xchg
loope
jl
add
lcall
stos
lret
push
pop
aad
dec
or
addr16
rorb
dec
jmp
lret
mov
xchg
fistps
xchg
in
cbtw
jle
xchg
das
lret
jb
repz
push
push
rcll
push
mov
mov
fmuls
jl
jmp
adc
mov
pop
add
les
lock
js
sub
cmp
aaa
cmpsb
outsl
in
test
sub
movsl
mov
push
dec
movb
xor
das
mov
dec
mov
push
shl
xchg
xchg
adc
lods
add
or
add
imul
sbb
add
mov
out
cmp
gs
popa
fnstcw
hlt
mov
pop
mov
mov
pop
js
bound
mov
xor
icebp
into
jbe
sub
fldt
add
mov
mov
pop
aas
sti
cmp
lods
jmp
jecxz
push
fwait
dec
mov
in
iret
fdivp
aaa
mov
inc
in
fistpl
inc
inc
rorb
push
addr16
loopne
std
scas
lret
adc
out
fcoms
sti
repz
mov
sub
xor
movsl
and
push
pushl
in
fcompl
aad
lods
sub
xchg
test
out
inc
jb
fbld
insb
lcall
pop
test
xchg
adc
pop
sbbl
insb
popa
pop
xor
fs
and
imul
add
xchg
mov
popf
pop
mov
sbb
jmp
aam
dec
cmc
add
push
cmpsl
pop
pushf
cs
add
cwtl
cmp
in
arpl
mov
pop
in
pop
xor
mov
pop
aad
or
fists
mov
fwait
cld
push
ljmp
popf
and
hlt
pop
cwtl
add
sbb
or
pop
cmp
adc
movsl
lea
imul
ds
scas
adc
or
push
pop
pushf
popa
or
cmp
xchg
pushf
mov
fwait
pop
jne
cmp
dec
test
lds
in
hlt
ret
ss
insb
xor
test
mov
dec
xchg
mov
fidivrs
inc
mov
mov
insb
mov
dec
insb
scas
jmp
lret
fs
pop
dec
shl
jno
cmp
decl
push
lret
push
test
xchg
sbb
xchg
adc
push
fdivrl
push
pop
lea
add
jl
or
xchg
je
dec
push
test
jmp
dec
and
into
pop
xchg
stc
inc
in
push
inc
lds
cmp
push
sub
dec
push
adc
loop
sti
add
jg
and
cmp
faddl
lds
call
ds
imul
and
push
fs
xchg
xacquire
mov
jne
mov
repz
pop
out
push
mov
sarl
jl
xor
push
je
iret
cmp
add
int3
lods
pop
dec
mov
aaa
xor
dec
fistps
loope
mov
frstor
inc
cmpsb
int3
mov
mov
pop
mov
sbb
js
notl
xor
lret
les
insl
in
dec
inc
cmp
lods
sarb
add
cmp
sub
cmp
cld
stos
test
dec
pop
mov
xchg
outsb
hlt
mov
mov
and
mov
jge
mov
mov
je
mov
stos
mov
aas
add
dec
addr16
push
mov
rcll
push
rorb
fs
push
sbb
jno
gs
jmp
jbe
fistpl
pop
sub
ds
or
push
call
outsl
cmp
test
pop
or
sub
shll
shll
inc
ds
les
mov
xor
push
shlb
add
xchg
int3
mov
hlt
or
push
push
decl
or
bound
jmp
xor
fcoms
sub
push
inc
mov
aas
adc
leave
and
test
inc
int3
outsl
cmp
fstps
mov
les
in
xchg
mov
cmp
push
dec
fisubrl
pop
stos
out
jmp
pop
pop
dec
adc
cld
jg
fs
mov
mov
insl
inc
inc
clc
adc
into
or
out
movsb
and
mov
incl
popa
ret
pusha
mov
fldl2t
into
jle
stos
dec
sahf
outsb
pop
pop
xchg
mov
add
mov
das
cmpsl
daa
jno
add
mov
add
movsbl
out
mov
jae
mov
inc
icebp
mov
push
xor
shll
push
and
nop
cmpsl
push
in
adc
out
inc
push
ds
loope
inc
adc
fldenv
or
jbe
test
jge
je
xor
icebp
lods
jge
ficoml
pop
mov
dec
fsubl
stos
dec
sbb
mov
mov
bound
icebp
and
jl
out
pop
or
fcomps
xor
stc
out
lods
lock
repnz
adc
push
lret
fs
cmpsb
into
cmp
shll
mov
cltd
js
add
mov
iret
jo
sbb
cld
in
add
push
mov
shlb
sub
insb
repnz
aaa
cltd
push
decl
out
out
mov
pop
xor
xor
push
loopne
divl
out
dec
xchg
mov
push
in
test
bound
mov
jbe
sub
in
ljmp
pop
repz
add
and
imul
push
push
ret
pop
out
std
xchg
idiv
inc
outsb
ja
jle
and
inc
out
stc
xor
es
cmc
adc
sbb
sub
adc
mov
mov
jecxz
cmp
mull
fs
mov
adc
xchg
jecxz
push
jo
inc
pusha
inc
sti
cmpsl
mov
movsl
sbb
push
push
xor
adc
scas
xchg
push
ret
lds
and
aas
jge
jae
sub
pop
cmp
outsl
call
push
sti
lret
mov
mov
stos
or
inc
xor
stos
clc
insb
cmp
cltd
daa
jnp
xor
and
ret
stos
mov
popa
dec
into
or
mov
xchg
inc
ror
mov
arpl
pop
xor
arpl
fistpl
je
pop
mov
lret
mov
dec
pop
ljmp
inc
in
insl
xchg
push
sbb
das
js
mov
test
in
pop
cltd
xchg
gs
add
jg
dec
popf
cs
daa
inc
jge
sbb
int3
leave
add
movb
mov
das
mov
push
mov
test
mov
lcall
dec
or
mov
dec
sub
mov
rol
or
test
ud2
mov
shrl
jnp
sti
sti
add
adc
stos
js
sub
mov
repz
pop
sbb
or
mov
cmpsw
jge
lock
mov
andb
mov
xchg
bound
mov
mov
fs
aam
pop
mov
lret
inc
mov
xor
ljmp
in
addr16
enter
xchg
insl
jno
pop
mov
mov
mov
jle
jecxz
add
mov
jae
add
div
sub
sbb
mov
mov
cmpsl
inc
movsl
loop
adc
lods
adc
adc
mov
filds
cmp
stc
xchg
mov
repnz
push
gs
jmp
shll
movsb
mov
xchg
push
shr
fistl
fstpl
cmp
mov
mov
inc
imul
xor
add
dec
outsl
cmpl
or
add
xor
adc
cmp
inc
mov
and
incb
sahf
in
push
ss
leave
sub
sub
or
icebp
popf
inc
mov
mov
sub
jbe
call
out
push
outsb
mov
jecxz
sub
movsl
jle
gs
test
fnstsw
arpl
cld
pop
push
scas
gs
aaa
and
aad
insb
hlt
scas
and
int
fidivs
push
dec
clc
jnp
jns
mov
dec
jbe
out
pop
pop
lock
sub
rol
movsb
insl
or
mov
cwtl
arpl
add
xchg
call
out
fmuls
call
lods
add
repnz
ficomps
adc
and
sarb
adc
xchg
sti
jmp
mov
jo
adc
jno
iret
fsub
scas
shl
js
adc
dec
xor
test
out
test
mov
loop
sub
imul
scas
add
sahf
pop
mov
roll
push
sub
js
jl
sbb
arpl
inc
jne
andb
push
mov
aas
outsb
jl
movsb
xchg
orb
mov
mov
shll
xchg
mov
movsb
xor
pop
icebp
pop
jmp
push
test
jno
and
scas
roll
fnsave
pop
test
out
adc
sub
stos
jae
xchg
pop
movsl
pop
in
mov
sub
pop
orb
mov
popf
xor
mov
mov
stc
cs
lock
jae
pop
ja
xchg
xchg
cmp
les
or
shrl
mov
imul
js
fwait
cmp
xchg
cmpsl
mov
sbb
mov
or
mov
shlb
jo
cld
ds
fsts
test
imul
ljmp
inc
lcall
sub
sub
ret
repz
scas
bound
pop
mov
fs
xchg
imul
lds
in
add
and
popf
pop
lret
xchg
sbb
leave
cmpsb
pop
xlat
fs
adc
cwtl
jmp
xchg
adc
cmp
inc
pop
and
leave
xchg
add
daa
jns
dec
and
mov
icebp
add
enter
xchg
out
dec
ds
xchg
xchg
enter
test
or
mov
jns
imul
pop
repnz
repz
imul
push
inc
fstps
mov
mov
xor
jp
movsl
sub
mov
push
sbb
mov
inc
cmp
lret
push
and
gs
cmpsl
pop
sahf
stos
or
xchg
outsl
es
wbinvd
push
mov
dec
push
jge
out
js
push
push
ljmp
js
imul
inc
gs
in
or
test
mov
jmp
aam
stos
andb
mov
cmp
rcl
in
scas
cmpsl
xchg
testl
int
jns
in
pop
rcr
mov
ljmp
mov
inc
lds
out
lret
mov
into
fisttpl
mov
hlt
sbb
mov
inc
sarb
push
sub
repz
pop
negl
mov
cltd
daa
xchg
cmc
pop
filds
clc
mov
imul
push
cmp
push
stos
mov
leave
jmp
sbb
sarl
stos
aam
out
ror
fwait
into
in
fucomip
out
sub
xchg
jne
decb
arpl
rorl
mov
fstl
int3
xor
cmp
shr
and
cmp
rclb
lds
pop
and
jno
jle
push
ss
jno
fs
adc
je
push
outsb
pusha
loopne
dec
dec
jl
insb
push
pop
sbb
sbbl
mov
lahf
mov
sub
mov
and
test
loop
sbb
mov
inc
in
mov
jge
jne
enter
mov
mov
mov
fstps
mov
out
jl
jp
in
addl
xor
incl
shll
std
sub
mov
mov
cmp
push
shl
adc
dec
jg
decb
inc
jle
outsb
outsl
stc
xlat
jmp
out
dec
and
adc
or
xchg
lods
fimuls
dec
adc
sub
pop
adc
push
push
xor
arpl
sub
incl
addr16
and
xor
inc
cmp
das
gs
cmpsl
xchg
repnz
inc
std
pushf
jne
lock
lret
les
jns
mov
daa
jo
pop
ljmp
test
inc
jne
icebp
push
shll
jmp
and
lret
push
inc
adc
test
lcall
xchg
jle
std
or
je
cld
lock
add
push
dec
mov
sbb
inc
je
cli
pop
cltd
pop
inc
stos
and
jecxz
and
imul
test
sub
lods
pop
mov
dec
add
lret
pop
push
dec
out
aam
push
dec
and
mov
push
rorb
movsb
dec
mov
xchg
and
mov
push
cmp
jg
fcomip
aad
fdivrl
enter
jecxz
outsb
rorb
stc
xor
movsl
call
push
aad
stc
hlt
inc
cmc
jp
cmpl
dec
test
ret
das
shlb
pop
ja
adc
movsb
mov
push
cmp
push
mov
inc
cli
dec
fs
xlat
notb
xchg
or
cmp
fldcw
xlat
xor
mov
dec
jns
leave
mov
mov
and
icebp
and
stos
rclb
push
ret
xchg
mov
jmp
dec
dec
push
das
outsl
add
nop
xchg
add
jno
loopne
jmp
jo
jg
push
jne
jecxz
insl
aam
adc
jl
xchg
sbb
ds
or
rorl
jle
out
inc
pop
xlat
pop
shll
push
mov
gs
cmp
xchg
and
sub
mov
std
dec
aas
dec
push
lret
mov
push
pop
cmpsb
in
jg
clc
sub
mov
fsubr
scas
loope
mov
pop
in
xchg
jg
ja
dec
adc
testl
stos
repnz
lock
les
pop
out
scas
pop
mov
popa
add
insb
push
sub
add
fs
jle
loopne
mov
das
lods
es
xor
xchg
nop
sub
add
andb
je
and
push
inc
enter
xchg
xchg
mov
jns
fidivrl
rclb
int3
and
sub
test
lds
cwtl
pop
ret
movsl
loop
mov
push
or
xchg
pusha
mov
leave
data16
pop
mov
sbb
or
xchg
hlt
sbb
inc
xlat
and
rolb
adc
bound
test
mov
cmc
inc
mov
adc
test
fcompl
movsb
push
xorl
lods
sbb
mov
cmpsl
cmp
jb
fs
jle
inc
js
or
call
add
dec
jne
and
in
fiadds
mov
shlb
jno
imul
fsubp
test
mov
notb
jns
mov
movsb
dec
jbe
mov
es
sub
sti
or
push
dec
neg
rorb
xor
and
pop
mov
pop
rcl
xchg
popf
out
stos
bound
adc
ficoms
jae
lahf
pop
and
in
loope
shll
arpl
jge
mov
inc
rclb
call
or
andb
xchg
les
dec
sub
mov
add
bound
add
cwtl
je
ret
sbb
scas
sub
in
xor
jp
adc
mov
push
fdecstp
and
or
xor
mov
mov
insl
arpl
das
dec
fimull
inc
sub
jmp
dec
shll
cmpsb
mov
mov
ret
icebp
inc
inc
in
les
shlb
sti
sti
cmp
inc
in
popf
shrb
mov
inc
pop
xchg
pop
jmp
outsl
mov
bound
and
xchg
dec
xchg
sbb
pop
jecxz
dec
add
outsl
mov
mov
movb
shlb
shll
or
fnsave
imul
add
ret
enter
jo
xor
popa
das
subl
jbe
add
aaa
aad
push
out
and
ja
add
jb
adc
out
jb
mov
loopne
or
movsb
or
and
mov
mov
mov
push
call
fsubrp
lcall
add
mov
ds
jg
jno
sbb
fdivrs
mov
mov
ret
jl
adc
xchg
nopl
outsl
arpl
jg
leave
xor
xchg
or
test
je
xchg
jle
xchg
lret
movsl
mov
sbb
in
sbb
cmc
mov
sbb
pop
iret
mov
xchg
add
cmpsb
mov
shr
imul
pop
jb
cmp
and
xchg
lods
mov
or
sbb
jecxz
daa
dec
jno
push
fwait
mov
xor
rcll
jae
jb
daa
adc
push
inc
mov
out
dec
inc
arpl
nop
leave
out
outsl
pop
mov
ljmp
cmp
test
add
fwait
loope
rorb
add
mov
iret
jns
xchg
cmpsl
std
das
push
mov
xor
cwtl
fldl
shll
sbb
jns
ret
add
in
jbe
pop
xchg
cltd
xchg
lds
out
mov
inc
xchg
das
xchg
dec
dec
inc
adc
pop
mov
lret
xor
fcmovnb
push
mov
jecxz
add
loopne
rcr
xchg
scas
inc
push
or
je
push
std
dec
mov
lahf
xchg
dec
inc
push
and
inc
inc
and
or
jl
movsl
jmp
int3
inc
sti
mov
cli
sub
cmpsb
leave
jns
daa
lock
jecxz
in
jne
lods
ret
sbb
mov
mov
inc
pop
push
shlb
jnp
push
dec
mov
lahf
mov
insb
cmp
jbe
jbe
cmpsb
add
ret
inc
push
ja
push
fbld
sbb
xor
mov
insb
clc
push
outsb
leave
sub
pop
call
stc
lods
test
adc
push
ss
rclb
daa
fisttpll
push
pop
add
mov
ja
lcall
add
and
add
ljmp
repnz
in
pop
push
rcl
ficoml
test
and
sub
fwait
pop
or
dec
je
ret
add
lret
stos
xor
mov
xlat
push
cmp
negl
and
jns
mov
pop
jo
push
fadds
pop
xor
inc
mov
push
or
jne
lahf
sub
cld
cmp
dec
mov
mov
fwait
mov
popa
push
mov
and
lods
movsl
outsb
lock
aam
jmp
xchg
and
dec
push
fstpt
xchg
mov
mov
cmp
push
xchg
jge
mull
xchg
lods
push
xorl
add
dec
pop
stos
les
jmp
inc
push
mov
sub
push
js
repz
dec
stos
xchg
cmp
dec
add
cmpsb
in
sbb
push
paddusw
mov
jg
cmpsb
xlat
repnz
jmp
mov
andl
sub
clc
jno
adc
jecxz
sbb
gs
out
mov
popf
mov
xlat
mov
sbb
pop
push
lods
shrb
sbb
pop
sub
adc
pushf
mov
aam
adc
cmp
gs
jge
pop
pushw
es
cs
dec
dec
fdivrl
movsl
jmp
out
jnp
or
xor
sbb
fsubrs
test
data16
and
mov
daa
dec
shll
sub
scas
jp
in
fcomip
icebp
in
add
fildl
out
jae
mov
push
cmp
inc
stos
dec
mov
out
push
adc
aas
shlb
sbb
lods
mov
mov
test
inc
sbb
mov
addb
dec
sub
popa
int3
sub
sbb
cmp
mov
call
scas
dec
fmull
pop
mov
scas
pop
sbb
test
pop
in
cmp
xchg
sbb
mov
lcall
aaa
aas
pop
pusha
out
dec
lock
cmp
inc
mov
inc
mov
jb
mov
dec
aaa
cmp
mov
mov
inc
ja
cld
inc
cmp
out
mov
out
sub
loopne
push
inc
iret
jnp
jge
xorl
push
lret
or
sarb
jecxz
insb
call
fdivrl
or
cmp
sub
fimuls
lret
mov
pop
cmp
fstl
cmp
add
mov
cmc
ljmp
cmp
pop
aad
jge
ret
cmp
shr
in
lods
jl
out
sarb
mov
roll
cmp
pop
pop
cmpsl
jge
dec
addr16
cmp
push
fidivrs
sub
mov
mov
cmp
dec
das
mov
jle
pop
push
mov
pop
sbb
or
sbb
push
or
repnz
mov
inc
cmp
das
inc
cmp
inc
push
scas
fsub
pop
adc
mov
pop
insl
pop
mov
cmp
xchg
adc
loopne
lods
cli
daa
push
push
stos
push
mov
ktestb
in
pop
sahf
mov
or
ficomps
push
aam
sub
add
pop
pop
mov
mov
gs
popa
xchg
inc
adc
jo
scas
in
stc
sub
dec
pop
pushf
push
sub
ja
xchg
jmp
orl
out
push
iret
mov
insb
pop
ret
popa
sub
aaa
inc
add
movsl
data16
fwait
test
arpl
orl
cmc
mov
xor
cmp
scas
jnp
push
pop
cmp
add
sti
cmp
shl
and
push
pop
fdiv
mov
fistpl
lahf
sub
and
lock
in
lahf
rcr
inc
mov
test
es
sbb
je
loope
jecxz
mov
sub
pop
jbe
imul
dec
mov
xchg
mov
dec
pop
mov
out
notl
addr16
sub
loope
rcrl
jge
inc
hlt
xchg
test
adc
nop
fisubrl
sti
jns
fcmovnu
push
repz
mov
sub
add
mov
mov
mov
jns
hlt
mov
pop
sub
test
sbb
mov
mov
pushf
push
subb
dec
mov
lret
test
xchg
iret
sbb
int
movsb
int3
cld
lock
mov
aam
xor
loope
icebp
pop
mov
cli
jae
dec
lea
mov
js
test
rcl
movsb
shlb
fcoms
or
pop
imul
insl
orl
cmp
xchg
mov
loope
push
mov
imul
fisubs
mov
std
incl
pop
pop
enter
lods
and
jmp
pop
sbb
push
cli
loopne
rcrb
mov
pop
in
mov
pop
mov
mov
add
in
scas
sbb
dec
lds
iret
jmp
popa
cmc
add
stos
scas
std
cmp
add
scas
mov
test
push
jg
pop
push
iret
into
in
xchg
in
xchg
pop
or
in
xor
mov
insl
dec
into
push
iret
ja
jl
jecxz
fisubl
fidivs
lds
sbb
cmp
jg
pop
jo
rorl
xor
xor
enter
stos
nop
jmp
mov
adc
popa
jp
jmp
and
xchg
push
mov
pop
dec
stos
out
sahf
xor
dec
adc
sarb
dec
or
jmp
or
inc
add
call
enter
dec
mov
push
mov
lretw
xor
add
adc
push
out
movsb
pop
scas
jle
aam
push
pop
push
jae
mov
sbb
jmp
cwtl
into
mov
jnp
mov
cmpsl
movsl
inc
adc
test
sub
cld
test
inc
addl
pop
jno
sahf
in
mov
leave
cmpsb
cmpsb
inc
sar
mov
fidivrs
insl
xor
cltd
lea
push
adc
clc
mov
outsb
insb
or
mov
cli
push
lods
cs
jl
jle
fimuls
push
xchg
loop
fsubrs
les
fstpt
outsb
xchg
or
and
mov
add
gs
xchg
adc
mov
sbb
xlat
clc
add
inc
loopne
inc
pop
sbb
push
dec
ret
ja
je
loopne
sbb
xchg
ret
dec
aas
rorb
popa
sbb
fs
mov
lods
lods
nop
cmpsl
sbb
jmp
fstps
ficompl
xchg
pop
jne
hlt
je
inc
gs
les
or
lahf
mov
cmpsl
push
cmp
or
insl
mov
push
xchg
jnp
add
push
pop
dec
insl
das
cwtl
out
pop
iret
adc
and
mov
int3
push
inc
push
sub
sarb
movsb
inc
lret
adc
or
jmp
mov
pop
jns
xchg
mov
sbbl
add
enter
iret
dec
popa
inc
dec
loopne
mov
daa
cmpsb
mov
sub
imul
gs
pushf
mov
lahf
xor
dec
xchg
cmp
inc
cmp
pop
fistpll
loope
inc
sub
outsb
xor
pop
xor
xor
lea
jmp
pop
cmp
lret
xchg
mov
xchg
dec
test
jmp
clc
push
lock
fcoms
into
enter
jno
ss
mov
add
pop
xorl
xchg
jmp
sub
xchg
stos
data16
xor
sub
lods
int3
leave
mov
pushf
jl
sub
add
std
mov
mov
out
imul
adc
inc
movl
fldt
or
int
lds
mov
xor
mov
sbb
adc
in
test
fistl
fbstp
jecxz
sub
pop
add
pop
jg
outsl
es
push
sahf
addl
cmc
xorl
adc
fidivl
add
fistpll
jo
jmp
lahf
mov
ret
iret
and
sub
enter
test
mov
sub
dec
and
cmpsl
je
js
scas
nop
je
int
jl
adc
xchg
mov
mov
cmp
sbb
pop
inc
pop
int
roll
data16
mul
hlt
adc
pop
pop
cmpsl
ds
shll
sbb
jnp
shrb
sarb
xchg
sahf
adc
mov
mov
hlt
lcall
sbb
jecxz
fwait
pushf
push
xchg
dec
addr16
enter
sbb
sbb
je
lret
repz
xor
add
xorb
adc
pop
imul
dec
mov
rcll
lods
lods
lret
daa
lods
stc
fdivrp
jno
cmp
cmp
push
aam
add
arpl
and
outsl
lret
xchg
lret
cltd
ja
dec
fdiv
pop
cmpsl
xchg
pop
pop
std
mov
nop
icebp
pop
lods
xchg
mov
xorb
xor
incb
lods
sub
shll
and
pop
mov
mov
pop
frstor
cwtl
xchg
push
aad
loopne
xorb
loope
inc
and
int3
mov
clc
in
inc
adc
stos
add
roll
aaa
jae
mov
mov
in
adc
daa
pop
dec
sbb
mov
inc
popa
push
pop
jno
pop
sbb
push
adc
push
mov
leave
leave
dec
fs
mov
je
shlb
mov
movups
mov
push
sub
fwait
mov
jne
subl
movsl
nop
das
push
mov
in
hlt
outsl
cmp
outsl
cltd
and
cmpsl
xor
call
lock
lock
mov
adc
push
push
out
mov
stc
xor
jo
xchg
mov
loopne
sbb
xor
fwait
sbb
and
orb
test
sub
clc
pusha
aad
push
pusha
mov
xchg
sahf
lods
mov
push
out
mov
sub
xchg
rcll
repz
push
cwtl
daa
lea
lret
pop
daa
mov
xchg
pop
decb
jmp
imul
je
movsb
xchg
loopne
std
aam
sti
push
adc
add
cmp
jo
xlat
rcrl
mov
js
or
test
or
int3
inc
jecxz
sbb
subl
and
mov
into
int
mov
sbb
sbb
pop
pop
mov
adc
repnz
stc
mov
stos
in
js
xor
and
xorb
fadds
xor
fs
stos
popa
jnp
movsb
aas
mov
push
outsb
jmp
mov
inc
sbbl
scas
xchg
inc
pushf
or
push
mov
add
pop
loope
out
mov
sbb
inc
xchg
push
ret
lea
and
ss
and
mov
loope
pop
mov
sbbb
inc
fldcw
mov
bound
fwait
and
mov
and
hlt
rcrb
sbb
dec
les
out
jbe
cmp
scas
jmp
mov
dec
lret
movsb
fsub
iret
lock
pop
add
jne
mov
imul
subl
inc
adc
out
mov
mov
fstpt
or
pusha
xor
jns
and
inc
mov
aas
inc
in
sub
lret
into
xchg
int3
fs
cmovs
mov
add
das
mov
jo
mov
ljmp
je
mov
subl
imul
pop
lahf
test
pop
outsb
mov
sbb
mov
cltd
jno
sub
call
mov
sub
cmp
and
in
jge
or
and
sarb
jmp
sbb
xchg
scas
rclb
rorb
scas
rorb
pop
xchg
cld
sbbl
sub
xchg
shlb
bound
into
fisubrs
xor
and
iret
cmp
movsl
cmpsb
or
xchg
das
aam
mov
out
add
and
dec
dec
mov
or
ss
dec
jne
jnp
xor
push
bound
lods
popa
xor
mov
cmp
movsl
out
mov
lcall
push
xlat
xor
pop
xchg
sarb
xor
int
jp
fs
add
jae
adc
sbb
mov
pop
adc
mov
mov
adc
add
leave
jmp
mov
push
sbb
dec
cmpsl
mov
aam
adc
pop
mov
mov
out
fsubrs
jne
push
shll
out
cld
enter
dec
mov
sbb
cmp
ljmp
pop
mov
jno
adc
hlt
mov
mov
dec
shl
test
mov
jl
test
fdivl
test
xor
or
call
mov
test
mov
xchg
ss
push
xchg
push
ss
inc
jbe
fisttpl
arpl
clc
enter
mov
div
and
mov
shr
mov
jb
out
lret
or
enter
dec
cmpsb
out
sbb
xchg
test
xor
out
fs
sbb
in
dec
sbb
orl
or
jo
daa
mov
push
movsl
imull
push
pushf
aas
fwait
pop
xor
clc
das
mov
mov
ss
insb
jo
dec
jecxz
shll
lds
xor
cwtl
mov
in
movsl
int3
mov
push
mov
cmpsb
daa
cmpsl
lret
mov
xor
mov
jbe
mov
push
mov
iret
sbb
mov
call
fistl
lret
cmp
roll
inc
or
in
xchg
pop
movsl
sub
mov
xlat
je,pt
add
sbb
fadds
scas
xchg
cld
inc
sbb
add
or
mov
sbb
xor
sub
fsubr
fnstenv
mov
sub
popa
movsb
mov
fstpl
and
out
mov
dec
out
jl
and
imul
mov
flds
test
nop
push
or
jecxz
loope
mov
mov
add
imul
or
jg
cmp
aam
fidivs
push
mov
shlb
ret
repz
adc
into
int3
xor
jb
test
pop
mov
mov
jmp
div
cmp
popa
inc
aas
push
outsb
xchg
pop
movsl
jo
mov
pushf
inc
xchg
mov
mov
cli
push
dec
daa
xchg
dec
dec
je
cli
gs
aaa
ss
or
jecxz
lea
jb
gs
lcall
jmp
or
test
lea
cmpsl
adc
repnz
nop
push
call
mov
insb
ret
add
scas
jo
xchg
add
inc
lds
inc
and
sahf
int
or
push
xlat
addr16
or
test
movsb
sbb
push
xor
adcb
adc
gs
mov
xorb
ss
in
leave
in
push
jp
sub
or
inc
jg
sub
int3
aas
ss
fistpl
pusha
add
ret
lret
popa
lods
lret
push
push
int
sub
push
arpl
pop
xchg
xchg
adc
shlb
sbb
adc
adc
out
pop
int
in
or
lods
lds
jmp
adc
shlb
call
mov
xor
or
jmp
hlt
stos
dec
loope
fst
mov
orb
int
aam
shll
in
pop
icebp
mov
push
sarb
add
clc
repnz
mov
push
mov
adc
mov
out
cmp
hlt
jle
ret
out
lret
cmc
push
imul
or
jle
push
int3
loopne
popf
clc
xchg
xchg
js
int
dec
jae
pusha
push
jl
rol
ds
push
out
add
lret
dec
leave
mov
push
pop
in
popf
sbb
lret
cmp
mov
cmp
imul
popf
xchg
inc
sbb
fldt
mov
jle
shrl
adcb
stos
pusha
int3
lods
pop
and
push
es
stc
and
jecxz
aam
xchg
mov
repz
push
jl
pop
and
dec
push
pop
and
xlat
cmpsb
daa
inc
repnz
sub
lret
push
pop
shll
push
pop
cmc
ret
cwtl
or
test
cmp
testb
daa
inc
cmp
xchg
out
mov
sbb
mov
fstl
mov
movsl
dec
addr16
push
popa
or
in
sbb
adc
xorl
mov
push
testl
cwtl
mov
stos
mov
sbb
dec
inc
test
adc
stos
mov
popf
or
sysret
xchg
setp
sub
or
int
cmpsl
icebp
lds
fisubl
xchg
mov
adc
sti
pop
stos
outsb
aam
fiaddl
add
sti
imul
sbb
xchg
lret
mov
jno
incb
stos
jle
shll
mov
dec
cmpb
inc
mov
repz
cmc
push
pushf
push
out
pop
cmpsl
stos
adc
push
xchg
dec
xor
mul
out
lret
mov
lret
addl
push
jbe
sarl
sbb
fadds
daa
mov
sub
sbb
invd
mov
fs
mov
pusha
outsb
xor
and
sbb
jbe
adc
cmp
ljmp
xchg
dec
fsubp
or
cmp
shrl
jne
mov
push
xor
pop
fsqrt
jg
add
dec
aam
pop
add
flds
jmp
mov
xchg
imul
mov
fisttpll
jmp
movsl
ljmp
sar
mov
mov
add
das
inc
adc
sbb
icebp
es
pop
jle
popa
shll
sbb
adc
sbb
inc
mov
dec
leave
adc
mov
mov
sbb
pop
int3
shrl
or
outsl
mov
xor
fmull
es
adc
leave
pop
add
add
pop
pop
xor
xchg
mov
add
inc
in
mov
lods
enter
fwait
mov
pop
jmp
imul
lock
mov
inc
test
lock
push
fistl
fisttpl
inc
incb
mov
push
icebp
cmp
and
dec
iret
in
inc
xchg
notb
push
xchg
dec
xchg
xor
sub
jecxz
int3
andps
lods
and
int
xor
sbb
dec
ret
popa
sub
dec
push
fld1
stc
decl
pushf
xor
adc
in
clc
jne
movsb
pusha
push
in
xchg
add
cld
mov
int
pop
fldl
push
xor
push
sub
sub
pop
fwait
sbb
lret
xchg
cltd
cmpsl
decb
push
lahf
cmp
jb
xchg
pop
orl
mov
sqrtps
and
jbe
out
add
mov
and
test
arpl
push
push
sbb
loop
fcomps
pop
jbe
fsubrl
cmp
or
int3
jb
jbe
mov
adc
or
test
push
or
push
mov
jge
movsl
divb
aam
cmp
mov
je
or
and
adc
adc
cmpsl
mov
and
jno
inc
cmp
mov
repnz
outsl
ss
xchg
lock
mov
or
jno
mov
xor
lds
in
int3
cmp
rolb
add
icebp
jae
adc
ret
adc
jne
push
shrl
mov
xchg
xor
mov
xchg
aad
xor
out
cmp
sti
mov
int
inc
mov
fistpll
test
lds
loopne
stos
add
lcall
sbb
xchg
xchg
or
lahf
arpl
arpl
cmp
add
loopne
lds
mov
cmp
in
inc
gs
mov
and
sbb
push
xor
rorb
inc
inc
inc
in
mov
arpl
and
aad
xchg
pop
dec
mov
iret
and
push
cld
or
xchg
push
mov
push
scas
and
mov
int3
pop
or
sbb
pop
gs
add
xor
jmp
js
inc
push
push
lea
ss
mov
adc
call
into
mov
sub
mov
lcall
push
xchg
cmp
or
out
mov
inc
push
jl
fcoms
out
mov
or
add
scas
aam
addl
loope
lds
sub
xchg
gs
fprem
mov
xor
popf
push
cmp
jecxz
hlt
in
or
data16
repnz
inc
arpl
test
ss
sbbl
mov
mov
sub
sbb
repnz
repz
in
lcall
aam
outsb
pop
xchg
popa
and
push
xorl
into
dec
adc
icebp
or
andl
xor
and
int3
mov
jns
imul
lock
in
jp
movl
push
bound
je
insb
rcrl
push
pop
lock
adc
pop
jne
dec
data16
std
dec
in
jge
stos
popf
and
jne
and
shlb
or
test
test
jmp
shl
das
cs
mov
or
repz
lock
nop
icebp
lret
insb
out
in
in
fucomp
sbb
inc
rcl
shll
sahf
xor
jge
push
xor
jnp
scas
push
mov
xlat
xchg
sti
adc
fsubrl
dec
sub
cmp
aaa
adc
ss
mov
dec
cltd
std
lret
jo
stos
ss
mov
loop
sbb
pop
push
dec
leave
lds
js
fucomip
enter
pusha
push
jmp
inc
dec
pop
mov
lcall
or
and
adc
lock
popf
cmp
mov
mov
aad
push
xchg
lods
addr16
cmpsb
pop
jne
outsl
ja
cwtl
imul
adc
popa
jmp
mov
pop
lds
jecxz
cld
push
xor
mov
or
mul
mov
xor
in
rorl
roll
bnd
mov
or
gs
pop
xlat
inc
sbb
loope
adc
pop
cmp
mov
outsl
aas
mov
scas
or
lahf
cmp
testb
cmpsb
pop
mov
addr16
loopne
out
shl
mov
mov
push
push
adc
arpl
cmp
dec
sbb
inc
cmp
xor
dec
int
gs
xorb
ss
xor
insb
jbe
jb
add
ficoml
and
adc
inc
xchg
lcall
mov
idivb
mov
mov
inc
jmp
loop
and
or
out
icebp
test
stos
and
inc
xchg
sub
dec
icebp
inc
mov
inc
mov
pushf
test
inc
aas
jb
mov
pushf
in
xor
es
out
iret
add
fists
or
arpl
sbb
cmpsb
jb
xor
mov
jbe
rorl
ffree
fisubs
ss
inc
cld
push
test
js
lahf
xor
cmpsb
and
mov
cmp
xchg
or
sbb
arpl
cmp
mov
adc
cmp
stc
das
sbb
mov
fbld
xlat
inc
pop
adc
push
push
lahf
test
pushf
mov
iret
lret
mov
adc
add
mov
xor
shlb
xor
jmp
cmp
stc
mov
xor
inc
mov
adc
sub
jecxz
and
cmp
fimuls
mov
gs
mov
adcb
addr16
add
inc
test
xchg
push
rcpps
cmp
jp
xchg
clc
jecxz
out
nop
sbb
inc
cmp
jmp
into
ljmp
psubq
outsl
adc
repnz
test
dec
jae
movsb
add
lahf
call
sub
mov
pop
mov
xor
sbb
mov
outsb
lret
add
rorb
or
es
xchg
jg
ja
sub
ret
adc
test
pop
mov
push
lcall
and
test
cmp
cmove
dec
rcrl
es
mov
rclb
lods
dec
cmpsl
or
mov
pop
xchg
sahf
lods
repz
into
mov
jp
mov
add
pop
jno
pop
jns
ret
push
adc
add
stc
stos
lret
xchg
adc
jle
ja
lcall
or
mov
mov
in
adc
push
mov
and
icebp
sar
stos
jno
mov
repz
addl
xchg
and
lock
xlat
movsb
clc
pushf
fsubrs
out
inc
out
int3
xor
idivb
push
dec
cltd
jae
adcl
add
jle
sbb
sbb
fcoms
xor
push
int3
fcoms
and
jne
mov
inc
jge
mov
and
sar
xlat
push
push
push
push
or
jnp
std
cwtl
lods
jo
pop
std
mov
or
sbb
dec
xor
xchg
jo
dec
lcall
pop
and
vsubpd
inc
scas
fists
pop
mov
addl
push
lret
push
icebp
mov
lods
leave
adc
ljmp
mov
add
jne
iret
mov
cltd
mov
je
add
imull
enter
sbb
test
inc
repz
inc
fdivp
leave
fldl
enter
jae
mov
ljmp
pop
mov
mov
jmp
scas
sbb
imul
push
pop
adc
cmp
sbb
push
xchg
or
fdiv
push
icebp
lock
mov
jg
push
xchg
and
mov
ja
add
push
jp
shlb
lds
add
or
adc
inc
jmp
mov
jb
push
flds
add
adc
and
cltd
popf
adc
cmc
pop
push
ret
jp
add
call
or
jmp
scas
pop
pop
or
or
push
mov
mov
xchg
enter
dec
arpl
scas
add
roll
imul
add
push
lock
cmp
xchg
push
cmpsl
mov
clc
mov
test
xchg
push
test
or
jns
gs
mov
mov
fnstcw
mov
fnstcw
xchg
xchg
sbb
xchg
add
sbb
je
push
call
pop
cmp
jb
mov
loopne
fstps
and
icebp
cmp
pminub
rcll
add
rorl
test
jle
fcompp
push
mov
shlb
adc
nop
push
inc
ds
sbb
adc
push
xor
jnp
xchg
mov
scas
test
das
outsb
hlt
and
xchg
loop
pop
push
loop
rcll
and
sub
dec
fmuls
idiv
lcall
ds
jge
adc
in
lret
faddl
cmp
and
cmp
add
sbbl
jmp
and
add
lock
cmp
mov
push
push
mov
ret
neg
enter
shlb
divl
fsub
loopne
in
xor
xlat
push
ret
mov
les
mov
mov
lods
dec
sbb
mov
mov
pop
adc
icebp
jp
bound
mov
cmp
inc
jge
mov
push
xchg
sbb
jp
lds
or
add
addl
mov
daa
adc
sahf
mov
cmp
push
lock
in
jp
push
fidivl
jns
mov
cmpsb
in
jbe
lahf
ss
or
out
adc
data16
jg
mov
out
imul
inc
mov
mov
imulb
pop
cmp
cmc
inc
xchg
sti
lahf
push
adcl
out
dec
mov
fcompl
jns
shr
int3
jno
data16
movsl
cmpsl
cltd
cmp
ror
mov
xor
adc
repz
fisubl
fisubl
movsl
add
sbb
sbb
and
mov
adc
dec
in
ja
aam
stos
mov
mov
and
das
test
dec
lock
in
sbb
test
pop
jo
js
cltd
aaa
or
insl
out
push
and
xlat
pop
add
mov
ficomps
addb
dec
or
mov
dec
das
ljmp
and
mov
psllq
test
and
xor
or
pop
xchg
push
jnp
int3
jg
int3
addb
push
out
cmpsb
test
int
lcall
test
mov
fmuls
push
inc
pushf
sub
cmp
or
adc
lds
ffree
xchg
jmp
inc
dec
sbb
jae
xchg
insb
and
cmp
or
mov
cltd
out
xchg
adc
cmc
pop
lock
xchg
push
and
fnstcw
loop
pop
adc
gs
adc
movsb
pusha
cmc
repnz
pop
sub
cmpl
in
push
mov
cmp
sub
daa
xchg
pushf
fcompl
pop
lock
mov
syscall
stos
ljmp
and
push
xor
xchg
xor
int3
add
jne
cltd
cs
dec
data16
outsl
ss
mov
push
lret
outsb
nop
xor
inc
cwtl
add
sub
pop
jo
popf
out
jecxz
mov
outsl
xchg
mov
sub
nop
pop
test
xor
enter
rorb
sbb
jmp
sbb
mov
fdivrp
push
pop
sbb
mov
jle
js
sub
jne
test
pop
mov
and
cs
mov
cwtl
iret
sbb
fiaddl
pop
inc
xorb
test
jae
pop
pop
sbb
xor
adc
adc
push
call
jo
xor
mov
dec
inc
and
and
ss
push
lods
sbb
nopl
mov
es
and
add
inc
add
lret
jo
jle
jo
in
pop
push
rol
dec
popa
jmp
andb
push
mov
add
mov
fistl
popf
fucomi
jmp
xlat
daa
jns
adc
call
sub
jnp
dec
mov
gs
jae
dec
lcall
mov
in
cmc
hlt
or
xor
test
ja
pushf
je
push
aas
mov
cs
xchg
fwait
bswap
sbb
pushl
jae
mov
pop
xor
add
xor
or
lret
ror
dec
cld
dec
pop
pop
loopne
mov
xor
outsb
push
or
jp
loopne
cmp
and
nop
push
push
jecxz
fwait
stos
popf
xchg
sub
inc
outsl
jecxz
test
or
mov
xchg
mov
xchg
sbb
bound
out
rcl
xlat
mov
cmp
or
cwtl
adc
outsb
add
dec
bnd
leave
iret
std
jns
xchg
icebp
adc
xor
pop
mov
mov
clc
mov
nop
test
inc
int3
jmp
mov
push
pusha
popa
inc
repz
mov
mov
xchg
mov
int
ret
lods
xchg
cmp
enter
xchg
adc
fisubs
sub
sub
loope
xor
xor
nop
xchg
rolb
je
inc
lods
movsl
dec
outsb
testb
jg
adc
and
mov
add
mov
sbb
das
inc
mulb
dec
out
pop
in
xor
mov
cli
in
xor
int3
mov
add
stos
repz
out
cwtl
leave
xchg
fwait
dec
jle
sbb
inc
jg
jbe
cltd
push
xchg
xchg
and
dec
ret
push
popf
sbb
mov
or
sub
or
mov
cvtps2pi
xor
push
jne
bound
test
push
std
adc
adc
or
and
aaa
jle
ret
cwtl
fsubrs
cmp
xchg
es
push
push
xchg
popa
xor
jbe
dec
push
push
xor
hlt
dec
sub
jle
sbb
xchg
repz
ja
pop
lea
decl
pop
and
mov
xchg
stos
inc
mov
jbe
pop
mov
xchg
sub
cmp
mov
dec
add
pop
and
out
in
inc
out
sbb
hlt
dec
xlat
cmp
shl
ret
imul
addr16
add
pop
int
aas
cltd
jne
pop
icebp
xchg
or
out
or
push
iret
jp
nop
jae
imul
movsb
ret
repnz
push
add
fsubrp
cmp
jle
out
mov
ficoml
dec
out
or
jae
mov
push
aam
inc
movsl
enter
or
into
jmp
cmpsb
sbb
or
pusha
pop
fadds
pop
out
jbe
dec
ficoml
or
fldcw
loop
pusha
adc
jle
jae
scas
jmp
ss
jg
icebp
pop
fucomp
es
dec
outsb
cmpsl
fsubr
push
dec
and
out
cmp
mov
and
adc
test
xchg
jmp
loope
ds
jnp
rorl
dec
fdiv
stc
mov
sbb
sbb
cmp
push
dec
into
jnp
jecxz
mov
mov
movsl
jg
mov
loope
sbb
and
idiv
xchg
outsl
mov
andb
pop
test
mov
push
cmpsb
mov
aaa
xor
adc
jne
mov
test
adc
mov
aad
jle
push
pop
test
xchg
mov
mov
cs
adc
stos
test
inc
adc
fildll
mov
sbb
das
ja
sub
add
and
jl
test
dec
ret
or
sub
and
jae
movsb
inc
xlat
lock
in
test
sub
xchg
fisubl
adc
dec
into
mov
outsl
iret
les
in
add
sbb
xlat
aad
lret
jnp
leave
inc
cld
repz
in
sbb
jne
sub
in
push
popa
fmulp
lea
sub
out
cli
insb
sub
lds
jbe
sbbb
mov
ljmp
inc
dec
xor
gs
add
or
aad
or
pop
jno
pop
popa
push
dec
jge
daa
or
sub
and
outsb
addr16
dec
lret
mov
cwtl
insb
icebp
sbb
rclb
push
xchg
sbb
xchg
jmp
dec
dec
loope
rorl
xor
sbb
roll
dec
xchg
cmpps
xor
or
mov
mov
add
xor
cmp
mov
sarb
enter
jmp
std
mov
sti
pusha
push
into
out
push
pop
xchg
or
mov
cmp
push
lods
clc
cld
jg
mov
mov
rclb
data16
and
subl
pop
ret
dec
fiaddl
lods
inc
jmp
addb
jg
xchg
out
outsb
int
pop
push
cwtl
dec
loopne
in
inc
imul
rorl
lock
mov
mov
loop
jbe
push
push
out
add
sbb
negb
mov
xor
mov
jmp
jo
popa
add
mov
or
ss
cltd
gs
fcmovnu
das
dec
sbb
lcall
and
push
fcompl
cmp
xchg
jb
adc
sbb
loop
ret
pop
aad
les
and
getsec
jmp
xor
rorl
or
std
mov
adc
cmp
icebp
ja
sbb
jae
cwtl
and
and
out
or
xchg
and
push
hlt
mov
insb
adc
or
sbb
rcrb
push
notb
cs
dec
cmp
sbb
inc
imulb
data16
add
js
lret
push
inc
adcb
add
adc
aas
sbb
xchg
mov
adc
cltd
bound
jnp
cmpsl
jae
stos
and
jle
mov
and
push
in
repz
push
loope
mov
in
cmp
jb
mov
inc
xchg
or
mov
int3
push
adc
ret
cli
jge
das
push
inc
xchg
or
lds
imul
xlat
bound
mov
adc
shrl
pop
or
cmp
push
xchg
lods
lret
mov
aaa
test
aas
sub
sub
cwtl
insl
test
cmp
jbe
fisttps
aam
mov
mov
jg,pn
xchg
mov
mov
scas
pushl
aam
lock
or
mov
sbb
cmp
cmp
inc
add
lock
pop
cs
jno
out
adcb
mov
push
add
push
scas
lcall
cmp
imul
test
test
xor
movb
or
aam
mov
sub
push
outsl
push
inc
test
insb
xchg
ds
sbb
pushf
fimuls
nop
dec
icebp
data16
xor
cltd
int3
fs
inc
push
xchg
dec
scas
loop
clc
test
repz
mov
bound
adc
xor
cmp
jb
ds
test
in
xorl
push
mov
stc
lods
imul
jo
and
inc
xchg
adc
mov
cmp
lcall
adc
jle
mov
mov
mul
call
mov
out
loopne
movsb
adc
inc
sarb
aaa
sbb
xchg
leave
adc
and
push
lcall
sub
add
andps
inc
addl
outsl
and
mov
push
out
add
dec
and
imul
xor
ret
mov
sbb
sahf
and
cld
mov
sbb
cmp
rclb
or
mov
push
mov
adc
xorl
scas
adc
pop
sub
scas
test
in
in
std
rclb
icebp
add
ss
lods
aas
loop
inc
or
sub
or
jecxz
lret
cld
push
lret
jne
mov
mov
int
addr16
lea
shrb
ret
push
stos
mov
jge
dec
ret
pop
adc
cld
jno
add
add
xchg
lea
leave
dec
push
in
mov
leave
xchg
adc
leave
inc
xchg
out
pop
jp
arpl
shlb
and
mov
clc
fs
sub
sbb
add
mov
inc
mov
sahf
xor
and
aaa
jnp
stos
push
xchg
bound
pop
or
xor
roll
pop
sbb
movl
xchg
fisttpll
daa
cmp
jl
push
mov
in
iret
addr16
in
lods
dec
cmp
fists
push
add
in
add
xchg
subb
lret
cs
add
dec
or
shrb
loope
sbb
push
sarl
dec
mov
push
cmp
adcb
enter
outsb
fidivrs
pop
mov
es
test
and
shlb
sbbl
out
xchg
scas
int3
cmp
int3
xchg
mov
mov
push
xchg
imul
and
sbb
push
jge
mov
xchg
cltd
imul
pop
decb
cs
or
sub
arpl
xor
sbb
adc
outsl
xor
shr
mov
or
fcoml
dec
test
je
xchg
or
and
iret
push
jl
idivb
dec
dec
mov
xchg
pop
add
movsb
xor
xor
das
enter
xchg
shll
xor
mov
fwait
add
jno
rorb
push
pop
sbb
mov
shrb
push
push
jbe
inc
push
into
mov
imul
ss
push
rolb
mov
mov
adc
das
js
test
xchg
push
xchg
inc
cmp
and
sbb
mov
push
mov
test
inc
mov
xor
sbb
pop
enter
xor
jp
stos
insl
add
dec
repz
dec
sub
fmuls
and
xor
dec
cmc
pop
adc
dec
and
pop
add
js
movntps
cmp
into
xor
adc
out
sahf
add
mov
mov
mov
pop
stos
mov
fbld
add
or
mov
adc
and
jecxz
mov
ja
xchg
stc
aaa
fiaddl
test
mov
and
jg
sbb
lock
test
add
fs
or
shlb
dec
ds
aas
outsb
mov
js
movsb
das
repnz
or
mov
and
js
fbstp
push
add
div
scas
cmp
lea
fldcw
mov
push
loop
enter
pop
sub
cmp
inc
or
jl
dec
pop
stos
fwait
lcall
mov
test
aas
inc
jmp
add
sub
arpl
cmp
xor
inc
xchg
es
push
ret
push
adc
loopne
cwtl
pop
add
mov
jecxz
insb
or
push
shrb
mov
and
inc
adc
dec
add
pop
mov
popa
testl
arpl
loopne
outsb
bnd
adc
adc
jp
add
div
or
xor
pop
push
sbb
stos
mov
jns
mov
mov
arpl
std
push
fsincos
aas
pushl
jecxz
insb
insb
jb
pop
pop
mov
fucomp
pop
jo
dec
jle
mov
pop
mov
scas
mov
jg
push
cld
or
rcrl
hlt
pop
jmp
out
xor
xchg
inc
jp
and
inc
sbb
adc
jnp
push
jecxz
and
das
mov
xchg
sub
outsb
add
cld
stos
pop
call
psllw
fbld
xchg
jecxz
ror
mov
test
mov
jmp
dec
mov
lahf
cmpsl
gs
dec
fs
sub
imul
jno
out
outsb
hlt
pop
aam
rorl
daa
sbb
into
pop
xor
dec
inc
lea
fldln2
and
aad
mov
jp
sbbl
mov
mov
in
fldt
daa
dec
push
imul
and
out
jo
cmp
les
dec
cmp
adc
mov
out
pop
les
cmp
addr16
mov
lds
fisubl
cmc
das
mov
dec
rcrl
push
jge
ffreep
test
mov
cli
mov
call
adc
mov
sbb
add
daa
xchg
push
mov
out
enter
lret
xchg
push
cli
or
in
lret
mov
or
aad
aad
adc
shlb
je
mov
aam
fwait
xchg
mov
sub
jno
stos
scas
lcall
pop
adc
cmpsb
pop
and
bound
lahf
push
stc
jge
mov
outsb
ds
inc
leave
adc
stos
roll
in
lock
mov
xchg
jo
lds
hlt
mov
movsb
add
dec
pushf
movb
sbb
pop
jae
pop
adc
and
arpl
xchg
ljmp
iret
ficoml
xor
pop
jg
cmp
xchg
std
push
cmp
push
call
sbb
icebp
pop
loopne
jne
shlb
xchg
pop
or
cld
pop
rclb
push
xor
data16
fwait
jmp
int3
movsb
xchg
mov
pusha
or
dec
adcb
stos
xor
cwtl
dec
xchg
jecxz
pop
mov
sub
int
mov
push
mov
xor
leave
mov
mov
in
popa
test
mov
fcoms
gs
jnp
jl
out
pop
inc
mulb
dec
push
xor
cmc
popf
xchg
cmpsb
je
pop
inc
fnsetpm(287
mov
jg
data16
sarl
and
bound
jge
daa
pop
in
add
add
sbb
pop
xor
or
mov
sbb
aas
add
adc
gs
lret
push
cli
sar
das
lcall
sbb
xchg
addl
scas
push
pop
inc
lahf
add
fsubs
mov
xor
ss
int3
fadds
mov
in
mov
aas
add
sub
aaa
pop
cs
jp
popw
stos
push
nop
in
sti
mov
adc
adc
popa
mov
mov
xchg
scas
push
mov
jo
cmp
enter
pop
mov
dec
mov
movsb
idivb
test
pop
mov
push
inc
inc
pop
jmp
sbbl
fcmovnu
repz
cmp
hlt
or
outsl
push
test
mov
sub
mov
idivb
adc
daa
or
loope
mov
adc
pop
popf
jae
sub
das
pop
xor
cmpsb
push
jnp
jge
addr16
dec
jle
std
dec
gs
xchg
sub
sub
sub
push
and
ret
shlb
and
and
aad
mov
insl
into
ret
mov
lcall
mov
outsl
movsl
cmp
push
or
nop
cmpsb
mov
add
pop
inc
mov
inc
push
adc
xor
pop
in
in
leave
ja
clc
jnp
lds
adc
addr16
cmp
loope
fldcw
cmp
test
inc
mov
fcompl
inc
cmp
jmp
cs
sub
cli
jp
aaa
popa
in
jnp
pop
mov
pop
cmp
pop
rol
and
xor
aaa
mov
outsl
sbb
test
aad
test
jne
add
stc
stos
xor
stc
xor
sbb
push
mov
inc
popa
cwtl
add
outsb
push
mov
push
popa
dec
pop
sti
jne
lods
push
pop
dec
xor
xor
fsubrs
daa
or
sbb
xchg
out
lahf
and
sar
inc
out
xchg
insl
xchg
dec
adc
fcompl
xchg
je
adc
pusha
scas
and
popa
mov
push
add
popa
sbb
push
cmp
jae
or
pushf
adc
or
jae
jae
shlb
cmp
cmc
xor
andb
lods
jbe
and
add
lods
hlt
into
rcl
sub
ret
add
and
pusha
fwait
imul
loop
sub
les
inc
mov
mov
pop
and
sbb
or
jg
jne
dec
xchg
mov
adc
xor
fdivp
adc
jmp
pop
cmpb
adc
pop
lahf
xchg
jle
pop
les
xorl
lods
cmp
negb
cmp
or
stc
aas
cmp
mov
mov
fistl
pusha
mov
mov
addr16
lds
in
out
cmp
shlb
or
jae
lret
fwait
fwait
xor
outsl
into
push
push
in
mov
xchg
or
mov
popa
popa
mov
fimull
roll
dec
imul
pop
pop
mov
icebp
aam
std
clc
movsb
inc
out
imul
ror
mov
mov
and
push
mov
loope
mov
xlat
sbb
stos
or
adc
fnstcw
lret
jbe
dec
sub
or
sub
mov
push
adc
jp
sbb
pop
pop
pop
and
xchg
lea
jnp
push
jmp
mov
inc
push
cmp
shl
das
int
jns
dec
jae
xchg
cld
xchg
cmp
sub
fisttpll
and
mov
in
sbb
out
mov
int
fldl
add
and
imul
push
cmp
repz
cmp
adc
add
in
mov
xor
adc
shll
xchg
leave
inc
mov
add
cmp
sbb
loop
js
pop
xchg
out
or
push
loope
test
xor
pop
pop
mov
mov
jmp
push
les
jmp
mov
jmp
ds
stc
cli
fcomps
icebp
frstor
mov
inc
lcall
vandnps
jb
sub
pop
mov
fldt
fdivs
mov
sbb
je
adc
es
js
into
cmpsb
popf
mov
mov
lahf
mov
or
adcl
les
das
nop
xlat
and
imul
mov
or
roll
daa
dec
fwait
or
xor
into
stos
aam
and
stos
rcrl
push
insl
lret
mov
adc
pop
jbe
addb
xor
in
mov
push
cmp
rcll
inc
cmp
popw
pop
lcall
clc
sbb
mov
mov
int3
pop
push
mov
mov
fldenv
out
out
push
mov
stc
xor
js
loope
stc
push
add
inc
daa
cmp
fwait
andb
cmpsl
mov
imul
dec
rclb
push
xor
lea
jnp
fs
gs
movsb
pop
jns
mov
cmp
push
loope
hlt
rorb
rorl
cld
push
addps
pop
adcb
pop
js
jge
jge
push
jmp
cli
xor
mov
in
add
mov
addr16
xor
ret
fcoms
adc
pop
test
test
inc
fs
xchg
dec
add
aaa
and
icebp
ffreep
mov
mov
dec
jge
iret
pop
push
jne
xchg
mov
roll
in
imul
into
jne
cmc
in
sbb
cli
dec
stc
sti
sub
clc
sarb
fnsave
xchg
cmp
pop
mov
or
aam
push
dec
jne
xchg
jge
inc
mov
idivb
scas
xor
adc
in
aam
fucomp
xor
insb
mov
cmpb
mov
push
jns
jnp
sbb
aas
pop
orb
jne
inc
fstpl
jo
jno
jmp
pop
testl
repz
fistps
sbb
inc
jo
fnstsw
add
in
push
mov
jle
loopne
adc
int
ficoms
lods
movsl
jo
jnp
movb
push
mov
add
sub
cmc
fimuls
lea
or
lods
fadds
adc
push
pop
jecxz
mov
adc
mov
ret
xchg
push
push
lret
inc
pop
fisttpl
xor
ja
sbbl
incl
mov
icebp
mov
icebp
mov
push
xor
mov
xlat
and
fisubl
out
mov
pop
and
and
lret
adc
dec
ret
lret
cmp
sub
repnz
mov
and
xor
int3
andl
sub
loopne
pop
out
jo
mov
lds
cwtl
dec
fsub
out
sub
or
andb
std
jecxz
and
aad
lahf
cld
pop
fsubr
in
pcmpeqd
xchg
sub
ds
inc
iret
enter
roll
out
mov
adc
and
mov
jne
sbb
sti
sub
and
cmp
and
jns
inc
arpl
dec
xchg
sub
dec
lods
xor
sbb
jecxz
mov
jne
bnd
sbb
dec
xchg
lds
data16
sbb
push
loope
mov
ljmp
js
data16
mov
xor
fmull
push
lods
in
bound
dec
insl
pop
dec
push
ja
test
repz
rcrb
inc
push
aaa
cmpsl
outsb
jmp
imul
sarb
cs
sbb
sub
test
cmc
jg
pushf
xor
lcall
les
sub
addr16
or
pushf
popf
or
addr16
std
mov
inc
push
mov
std
fucomip
adc
int
pop
cld
xchg
or
pop
mov
out
gs
fistpl
int
repz
and
jmp
pop
cmc
jae
test
std
sti
sub
jbe
call
sub
ss
inc
pop
sbb
xchg
mov
pop
pop
xor
ja
aaa
iret
int
xchg
fistpll
mov
xor
imul
pushf
and
adc
mov
scas
lods
mov
movsb
sbb
sub
jae
ja
lds
pop
out
outsl
mov
leave
jae
xor
cmp
aad
inc
xchg
dec
adc
jnp
fsubrl
dec
test
jge
negb
mov
or
out
push
stos
mov
std
jbe
dec
push
lahf
or
pop
stc
icebp
mov
aam
pop
inc
and
stos
mov
aaa
add
das
push
cmp
into
out
std
std
pop
int
mov
outsl
add
xchg
pop
jnp
jg
push
or
sbb
adc
mov
lods
sbbb
fmull
rcll
pop
inc
loopnew
mov
dec
sti
add
rcrb
imul
and
scas
and
and
out
popa
xlat
jo
push
jbe
adc
rcrb
movb
jae
and
aas
mov
fldt
mov
mov
loopne
lret
xchg
push
xchg
lahf
jbe
cwtl
pop
mov
fistpl
ja
or
jae
push
jg
in
xchg
jnp
orl
cwtl
in
aaa
dec
mov
sbb
stc
sbb
sub
in
enter
cmpsl
or
fsubrs
xlat
dec
enter
sub
popf
shll
stc
push
pop
jge
push
bound
pop
lret
and
lahf
or
rorl
dec
cmp
and
lds
cwtl
mov
in
add
jp
out
sahf
fsubrl
pop
cld
into
or
jge
sub
roll
pushf
sub
pop
add
xchg
jne
xchg
sahf
mov
fnstenv
mov
push
out
xor
mov
push
mov
add
jg,pt
jae
mov
mov
jge
sar
add
test
pop
xchg
dec
dec
push
sub
mov
out
rorl
sub
dec
jbe
mov
fsubrs
mov
and
leave
pushf
test
xorb
rolb
fiaddl
imul
xchg
sub
mov
jmp
jmp
sub
push
inc
inc
cltd
add
xchg
rcrb
mov
int3
dec
in
push
push
fsubl
and
cmpsb
dec
cltd
push
mov
sub
insl
dec
dec
cmc
inc
pop
jmp
push
aad
mov
jae
jmp
pop
rcr
out
xor
addr16
iret
enter
jecxz
scas
lds
cmp
ljmp
xor
or
int
push
pop
js
pop
addr16
nop
mov
push
daa
sbb
aad
dec
sbb
lods
lods
pop
outsb
mov
pop
cmp
out
pop
cmp
int
loop
sub
into
icebp
rorl
mov
and
xor
rorb
stos
add
sub
mov
xchg
sbb
dec
xchg
lock
add
test
pop
repnz
jbe
xchg
cmc
inc
arpl
loope
cmp
movsb
cltd
xor
xor
popf
cmp
cli
cmpsl
pop
and
or
pop
imul
int3
inc
into
and
sti
xchg
iret
stos
xchg
shl
in
pop
cld
jb
cmp
gs
popa
cmc
jmp
imul
inc
sti
jnp
jbe
mov
cltd
mov
jge
or
push
rorl
cmp
jecxz
decl
adc
lods
xchg
pop
add
aas
xchg
adc
add
sub
fs
push
adc
push
xor
mov
and
sbb
push
cli
sub
out
xchg
jmp
mov
fisubrs
pop
xor
pushf
aaa
inc
or
aam
fs
es
and
push
mov
addr16
hlt
insl
pushf
loop
ljmp
mov
pop
cwtl
dec
sub
mov
ds
pop
add
sbb
std
adc
idiv
xchg
iret
test
cld
cmpb
push
xor
mov
dec
ljmp
into
vpmacsswd
popf
sbb
sub
fwait
sbbl
pop
jnp
repz
aad
push
aad
ficoml
aaa
in
or
xchg
sub
pop
dec
xor
sub
pop
cs
rclb
xchg
jne
or
cmp
cmp
pop
test
inc
out
movsl
movsl
add
jae
rorl
in
sbb
ds
adc
es
hlt
mov
int
push
adc
mov
mov
test
call
and
and
lods
data16
lea
lods
sub
mull
mov
cmpps
xchg
pop
mov
mov
adc
sub
jg
clc
or
jge
push
jbe
lods
sub
dec
push
pop
fs
mov
lods
rorb
sub
xor
pop
lret
mov
loopne
lret
xchg
push
clc
stc
add
stos
out
cmp
jb
mov
pop
xchg
xchg
divb
push
movsb
dec
loopne
test
lods
add
cmp
inc
lahf
push
hlt
jae
fbstp
push
fcomps
rorb
mov
push
lods
stos
push
outsb
clc
pop
jp
repz
sbb
cmp
sbb
add
xchg
xor
add
dec
sbb
out
test
dec
shlb
es
cmpsb
fisubrs
add
pop
movsl
cld
minps
mov
testl
xchg
mov
push
lea
push
add
xchg
andl
fwait
sub
outsb
or
pop
mov
dec
and
cmp
or
mov
cmp
add
pop
mov
mov
push
scas
mov
addl
cmp
call
sbb
xchg
sbb
sbb
rolb
fdiv
mov
pop
ficompl
repz
or
cs
mov
xlat
outsl
insb
popl
jecxz,pn
mov
push
scas
movsl
jl
dec
push
xchg
xchg
sub
mov
lods
or
fisttps
jae
pop
stc
adc
push
mov
push
or
cld
pop
sbb
sub
fistpll
mov
stos
imul
mov
and
int
stos
push
xor
add
mov
insl
ret
adc
pop
xchg
lock
icebp
lcall
xchg
pop
pop
cli
orl
jecxz
push
lea
stc
out
mov
push
out
outsl
cmp
pop
adc
jp
sbbl
mov
aad
mov
dec
aam
mov
or
iret
jmp
pop
mov
sub
divb
mov
cltd
pop
cli
mov
xorl
sub
mov
out
call
cmp
xchg
shll
jnp
enter
stos
jnp
out
mov
push
xchg
stos
std
xor
mov
cmc
push
lcall
pop
mov
jl
xlat
add
movsb
xor
fmull
leave
push
inc
mov
jecxz
sub
cld
dec
jns
lods
jmp
rorb
xchg
ja
xchg
fildl
push
sbb
or
sbb
mov
pop
add
daa
cmp
lahf
arpl
inc
ja
add
stos
repz
pop
inc
jle
cs
clc
test
inc
pop
xchg
push
stos
out
jl
gs
mov
js
mov
xchg
fstp
adc
sahf
push
movsl
les
dec
je,pn
adc
decl
mov
aas
jg
mov
cltd
orb
lahf
lods
ret
cmp
push
repnz
cmp
pop
mov
test
rorl
and
dec
add
inc
ret
decb
pop
inc
je
mov
jg
mov
hlt
imulb
xchg
xor
sub
test
push
arpl
outsl
decl
cmp
jmp
lcall
mov
stos
fxch
pop
mov
xchg
push
lahf
ljmp
out
aam
push
aad
lcall
adcl
pop
ret
imul
fnstenv
adc
call
push
sahf
out
xor
sar
pop
push
add
sub
jle
into
vmovapd
insl
shll
in
test
repz
or
sub
jo
ljmp
lcall
adc
push
mov
xchg
cwtl
or
outsl
push
and
inc
fucom
dec
xlat
fidivs
jp
call
je
and
les
and
pop
lods
popf
loopne
pop
out
sub
xchg
in
test
icebp
enter
push
cld
insb
adc
icebp
inc
fistpl
fcompl
or
mov
incl
addr16
mov
dec
fldl
mov
in
mov
sub
adc
add
xchg
adc
and
add
push
ret
js
mov
mov
sbb
dec
push
adc
lret
test
movsb
push
les
mov
fsubrs
inc
jl
jg
xor
stos
jb
mov
xor
jle,pt
and
pop
sti
dec
xchg
sahf
mov
xchg
sub
lcall
pushf
adc
bound
pushf
adcl
xor
pop
leave
int
outsb
adc
inc
bnd
insb
sub
dec
js
lods
loopne
dec
add
arpl
or
xchg
aaa
sbb
cmp
cmp
adc
shrl
sar
inc
loopne
bound
hlt
movsl
adc
mov
and
dec
mov
add
inc
jecxz
and
xor
in
aaa
push
test
mov
sub
repnz
insb
outsl
gs
sbb
fidivs
cmpsb
push
pop
icebp
in
inc
mov
xor
push
adc
push
sbb
rclb
scas
popf
mov
dec
xor
shlb
inc
adcb
and
enter
les
and
inc
push
out
popf
jle
push
add
std
ja
adc
lods
insl
repz
ret
xor
ret
mov
sub
ja
std
jnp
push
fcoms
data16
loopne
sbb
dec
js
ret
dec
xor
loope
sarl
or
push
fdivrl
xor
js
xchg
sarb
xchg
dec
iret
add
mov
fsubr
sbb
and
lret
movsb
pop
mov
mov
mov
pop
sub
mov
out
or
addb
pop
sbb
inc
rcll
jns
rolb
ret
ret
adcb
jle
xchg
and
out
lods
mov
xchg
inc
nop
ja
or
xchg
shll
cltd
sbb
lock
lret
sbb
lcall
scas
mov
sub
cmp
lret
jl
cmp
xor
mov
add
push
movsl
push
daa
mov
inc
stos
cld
push
inc
je
mov
inc
mov
mov
jne
test
mov
push
mov
faddl
mov
in
enter
and
aam
push
daa
imul
or
cwtl
cmp
addl
out
roll
lcall
xor
mov
xor
push
mov
cmp
push
arpl
jle
out
jp
aam
pop
ret
jne
add
clc
lcall
mov
inc
sbb
dec
les
popf
sub
lock
or
cmp
out
js
cld
scas
adc
jl
add
add
jle
jns
jle
orb
xchg
sub
lock
add
mov
inc
xchg
inc
lret
jnp
dec
push
leave
and
push
inc
dec
sbb
aaa
bound
cmpsb
shll
lods
repnz
les
jno
iret
mov
fdivrl
xor
ljmp
and
aam
jo
sub
hlt
cmp
jge
jecxz
xchg
jae
mov
ret
pop
dec
icebp
outsl
lret
outsl
daa
movsl
dec
int3
push
popa
push
sub
scas
pop
lods
leave
ret
and
jp
inc
ljmp
and
insl
pop
test
or
add
out
ds
pop
dec
ret
dec
ficompl
call
add
mov
add
cli
add
jno
jns
xchg
sub
ror
mov
adcl
jmp
aaa
addl
mov
stos
jmp
leave
add
pop
push
fisubl
in
sub
ret
popf
and
hlt
pop
jp
vpunpckhdq
cld
enter
test
mov
sbb
xchg
sbb
push
pop
pop
xchg
lahf
cld
or
jb
mov
sbb
lea
xor
fcmovne
and
pop
mov
nop
nop
mov
jno
jns
push
fcompl
movl
sbb
mov
xchg
outsb
fistps
outsl
sub
cmpsl
adc
xor
popf
repz
idivb
dec
lock
mov
and
add
cmc
loopne
or
inc
ja
jnp
jmp
inc
mov
xor
push
aaa
packsswb
or
int
outsl
stc
push
rol
loope
fimuls
adc
inc
xlat
aad
xor
dec
cmp
cmpb
rorb
fdivp
mov
push
cli
insb
xor
or
mov
push
inc
rorl
in
pop
xlat
cmp
push
mov
pop
inc
imul
mov
mov
add
testl
and
add
cmp
sub
imul
rorb
dec
arpl
sarb
pop
sub
test
cmp
push
sbb
pop
cmp
inc
inc
scas
lds
push
enter
and
sar
xor
xor
mov
jmp
and
inc
lahf
ret
stc
push
dec
adc
push
inc
push
loopne
xlat
popf
push
sbb
loopne
inc
insb
jb
cmp
sub
lods
or
cltd
lea
xor
sbb
jbe
cld
pop
das
inc
shlb
nop
jmp
push
cmp
sbb
jecxz
rorl
pop
xor
data16
or
mov
mov
jp
insb
pop
mov
dec
push
movb
pop
xor
packsswb
inc
frstor
hlt
cltd
jbe
addb
sub
jp
bound
xchg
pop
xchg
sub
test
adc
std
arpl
jns
loop
inc
test
inc
leave
roll
fidivs
jns
or
lock
sbb
sbb
push
push
in
cmp
iret
cmp
cmc
sbb
fdivrp
sbb
testb
xor
negl
jge
pop
outsb
out
fcomp
and
adc
mov
repnz
push
aas
inc
test
sbb
lods
jae
mov
sub
fisttps
add
xor
jmp
fs
mov
cld
ss
das
test
push
xor
out
fnstsw
sbb
test
xchg
into
loop
or
out
mov
lret
es
call
clc
in
mov
daa
into
adc
and
dec
adc
sbb
push
mov
sti
mov
push
movsl
adc
repnz
fs
adc
shrb
lock
pop
loope
out
mov
cmp
add
movsl
mov
out
mov
xchg
xchg
mov
jmp
pop
xor
inc
dec
ljmp
in
lret
insl
in
test
inc
dec
cmp
sub
test
jnp
or
jle
add
jbe
and
sub
cmc
add
aam
enter
xchg
dec
sub
mov
in
mull
aaa
jno
out
inc
addr16
test
mov
or
pushw
xchg
rol
push
jbe
fcmovnbe
jb
and
sbb
fcom
mov
mov
pop
movl
cld
lods
cwtl
cs
test
push
iret
mov
push
into
fwait
std
mov
je
jp
pop
xor
or
in
jae
inc
jge
repnz
inc
inc
push
sbb
mov
add
cmp
out
aaa
inc
push
scas
rorl
jp
insb
or
aad
subb
and
loope
rorb
in
add
cmc
xchg
nop
stos
movsl
leave
mov
insl
out
pop
cltd
fistl
in
adc
mov
mov
push
popf
jp
mov
movsb
push
orb
and
push
aad
push
pushf
xor
data16
pop
cmp
fcomi
push
sub
adc
sahf
mov
imull
fistpl
ja
or
pop
cmp
or
inc
cmpsl
std
or
mov
daa
push
out
lcall
or
add
xorl
bnd
jne
stc
mov
sbb
adc
cwtl
adc
orl
pop
ret
and
dec
jg
push
enter
inc
cmp
stos
or
imul
jg
dec
pop
fisubrl
adc
cltd
jmp
xor
xlat
sbb
xchg
dec
call
fdivs
fisttpl
pusha
sar
rcr
iret
outsb
mov
out
mov
jne
mov
jae
fisubrs
ss
sbb
pop
jnp
sbbl
addr16
stc
and
icebp
adcw
shrl
cltd
push
insw
add
pop
mov
stc
lods
lods
pop
pop
mov
aaa
push
aam
mov
test
jle
fistl
jb
les
aam
shlb
mov
pop
stos
leave
cmp
add
test
aaa
cmp
xchg
adc
or
sbb
mov
xor
pop
mov
mov
test
jnp
xchg
inc
mov
add
push
negl
test
mov
cwtl
rcrb
and
aas
and
mov
out
out
and
push
fidivl
imul
sub
repz
add
mov
mov
bound
stc
cmp
sub
imul
shrd
dec
inc
inc
push
or
pusha
pop
arpl
xor
out
mov
push
fisttpl
xor
and
mov
jbe
fbstp
shlb
dec
mov
loope
xchg
xor
or
xlat
pusha
mov
stos
dec
shlb
arpl
imulb
outsb
out
xchg
dec
push
mov
mov
jno
inc
hlt
xchg
adcl
push
shll
cmp
je
sti
add
dec
fidivrl
or
shl
adc
xchg
xor
sahf
aad
je
clc
mov
push
dec
mov
xchg
or
sbb
cmpsb
xor
test
in
xorl
test
ret
sbb
data16
adc
or
std
push
jns
out
sbb
jmp
cmc
jle
dec
push
sub
in
inc
add
add
mov
lds
add
jmp
cli
divl
mov
sub
mov
rclb
adc
js
xor
xchg
lods
push
cmpsb
jl
xor
dec
addl
cmc
test
repnz
xchg
jbe
ja
mov
dec
add
daa
mov
add
test
repz
add
dec
ret
es
mov
daa
loop
insl
jns
mov
jp
add
sbb
dec
lock
rcrl
add
repnz
pop
mov
mov
in
jle
push
fs
mov
imul
ljmp
mov
lods
or
xor
gs
lahf
push
int3
mov
aas
shll
rcl
fiaddl
mov
pop
sub
xchg
incb
mov
mov
push
sbb
adc
mov
movsl
out
add
push
jb
ljmp
mov
mov
jbe
pusha
and
insl
jnp
loop
xor
push
adc
mov
test
fmul
pop
gs
testb
cmp
sbb
loope
sub
insb
or
xchg
sub
xchg
insl
inc
cmpsb
jle
inc
cmpsb
arpl
push
subb
cmp
mov
add
jno
and
adc
xor
mov
jle
fwait
aas
cld
aam
and
cmp
dec
cmp
ss
jo
aam
dec
push
xchg
cltd
mov
sbb
inc
push
pushf
in
call
pop
shll
enter
push
dec
mov
pop
push
push
jg
mov
push
in
out
inc
or
lea
cmp
ja
jl
fs
gs
inc
fldt
call
ds
movsb
mov
ror
test
or
inc
mov
ja
mov
scas
repz
jb
pop
sbb
add
movsl
push
dec
add
call
fidivrl
mov
scas
or
mov
push
push
xchg
cmc
adc
insb
into
mov
fbstp
push
aad
add
add
push
pusha
call
jne
js
sub
sub
in
pop
popf
int3
sbb
data16
aaa
lret
push
inc
popa
dec
mov
mov
cmp
sbb
and
subb
push
or
cmpl
rcrl
xlat
ljmp
add
fadds
and
hlt
mov
pop
aad
inc
sbb
aam
and
or
int3
mov
popf
push
jno
bound
dec
leave
bnd
or
addr16
xchg
loope
xor
push
jns
pop
xchg
movsl
negb
jge
in
mov
stos
pop
cmpb
subl
sahf
sub
xor
sbb
or
xchg
in
cmp
or
push
pop
mov
add
jae
test
test
sha256rnds2
loope
jb
mov
ret
lret
cmc
imul
xor
xchg
push
lock
ss
arpl
in
stc
lock
rcrb
mov
pop
adc
adc
hlt
lret
mov
pop
add
or
arpl
jne
mov
dec
xchg
inc
and
insb
push
rcll
sbb
ret
pop
ficomps
add
sub
cwtl
out
pop
das
movsb
daa
scas
in
xor
xchg
xor
fsubp
lret
test
scas
jo
in
pusha
jns
jae
cwtl
movsl
adc
aas
shlb
push
pop
scas
pop
out
fisubl
arpl
dec
lahf
fdivs
ret
mov
sti
or
pop
mov
jge
jge
push
dec
jnp
movsl
loopne
adcb
dec
mov
gs
data16
fsub
fimuls
push
in
xchg
jne
push
ja
orl
and
or
test
push
mov
and
adc
mov
mov
pushf
aam
outsb
push
mov
or
add
test
xor
cwtl
fs
or
int3
xchg
mov
dec
popa
mov
sbb
jmp
leave
movsl
lret
dec
cli
mov
pop
rclb
or
test
or
pusha
mov
pusha
fdivrs
add
loopne
sub
scas
add
push
pushf
dec
sub
ss
xchg
fisubrs
and
or
imul
sbb
mov
or
out
xor
ret
mov
or
fcmovb
mov
ds
in
sub
dec
and
cs
pop
mov
xchg
jg
add
jmp
incl
test
fimuls
adc
xor
insb
push
test
xchg
dec
and
sbb
dec
pop
sbbb
daa
aam
shll
xlat
ret
pop
cmp
movsb
lahf
push
or
cmpsb
mov
aad
xchg
mov
pop
cld
out
xchg
cmc
xor
rcl
adc
into
mov
cmc
xorl
cmp
jl
stos
addr16
daa
into
and
lea
outsb
or
mov
inc
pop
inc
lods
mov
fcomps
cmc
xchg
movsb
stos
shrb
push
dec
mov
mov
xchg
mov
fstpl
out
jecxz
lea
leave
xchg
dec
mov
push
stc
bound
cmp
repz
out
scas
jbe
leave
addr16
dec
rcr
leave
add
cmp
xchg
cmpsl
adc
icebp
out
ret
cmp
inc
sub
outsl
xchg
fdivr
jo
xchg
into
arpl
and
fldenv
fstl
imul
xor
sub
xor
bound
mov
sbb
pop
out
loop
push
into
cmpsl
push
das
ret
addr16
jge
stc
fdivrl
sbb
stos
adc
lret
shlb
pop
cmc
out
aaa
jge
dec
sarl
jns
lock
pop
ja
ret
in
sarl
and
pop
fwait
mov
push
scas
push
cmc
pop
std
or
mov
push
ss
inc
jg
inc
shlb
ss
mov
xchg
add
cltd
pop
es
xchg
out
jecxz
scas
aas
in
jle
adc
inc
adcl
movsb
add
mov
int
cmpsb
adc
cltd
fldt
fldt
leave
jge
jg
xchg
push
push
iret
or
inc
and
adc
push
cmp
jb
add
test
fstpt
rcll
jne
cli
pop
dec
add
and
sarl
pop
cmpsb
adc
lret
mov
pop
sub
mov
lock
addb
or
sar
outsb
add
sbb
and
mov
cmp
dec
arpl
adc
push
or
pop
shlb
andb
fmulp
xor
pop
hlt
iret
mov
loop
dec
ss
pop
sti
and
mov
xchg
jl
pop
call
repnz
les
add
subl
mov
fstpl
js
std
cmpsb
push
test
and
sbb
cmpsb
fistpl
lods
int
jecxz
jo
rcll
or
xchg
fwait
inc
es
or
incb
or
ror
push
pop
pushf
ftst
jp
jg
je
loope
in
ret
jne
push
loop
mov
sub
out
inc
imul
outsb
mov
popa
xchg
pop
nop
push
in
add
mov
test
push
mov
shlb
push
sub
inc
dec
ja
test
stos
outsl
jg
push
add
or
dec
jmp
mov
pusha
in
jbe
test
mov
addb
mov
jecxz
ljmp
popf
loop
mov
out
or
leave
or
cmp
pop
or
testb
fdiv
arpl
mov
loop
jmp
mov
in
push
adc
nop
aaa
into
aaa
or
inc
dec
incb
cld
jne
int
add
sti
jb
js
mov
add
add
and
xor
lahf
sub
popf
testl
adc
or
xchg
ja
jns
fmull
inc
clc
pop
loopne
adc
lds
loop
sbb
mov
repz
sub
add
cmpl
jnp
movsb
xor
xor
and
push
push
clc
xchg
notl
sbb
shlb
out
dec
sub
sbb
jl
std
lea
icebp
loope
xchg
add
xchg
and
xchg
xchg
mov
jbe
dec
xor
push
adc
xchg
mov
jle
xor
adc
xor
dec
out
sarl
out
std
insl
int
lahf
outsl
popa
mov
int3
repz
push
insl
cld
xor
cmc
inc
mov
arpl
shll
sbb
push
pop
mov
lds
fsubs
sahf
pushf
push
mov
push
or
jnp
enter
fcompl
pop
or
arpl
jmp
xchg
leave
das
es
scas
cwtl
je
jne
cli
cli
sbb
and
arpl
sub
out
xchg
fildl
jnp
pop
push
xor
push
xchg
inc
push
clc
sbb
leave
dec
or
sbb
fsubrs
cmpsb
adc
jmp
jo
mov
push
pop
jo
lcall
cmc
sbb
testl
add
cld
xor
push
adc
sub
shrb
mov
mov
push
dec
fdivp
ret
and
mov
jno
xchg
xchg
mov
add
jmp
mov
pop
inc
clc
mov
jg
xchg
cmpsb
ret
dec
int
and
aam
addr16
jmp
repz
xor
xor
and
les
imul
sub
dec
adc
xchg
rcrl
jecxz
cmp
push
pop
push
jne
mov
mov
add
mov
push
mov
jno
shrl
sbbb
mov
adc
pop
pop
in
rolb
loop
pushf
cmc
pop
pushl
mov
or
lods
push
aam
jb
lret
add
lock
or
nop
out
out
rcl
mov
jno
shll
je
jbe
mov
lods
dec
dec
in
gs
mov
cmp
hlt
mov
xor
and
out
test
dec
into
aaa
dec
pop
inc
jb
leave
ss
shrl
adc
jne
dec
cltd
jle
fisubl
loopne
stc
dec
mov
dec
sub
sub
gs
mov
mov
xchg
int3
aas
xchg
mov
pushf
pavgb
fistl
pusha
lret
out
decl
xchg
jmp
xor
popa
inc
inc
lahf
imul
xchg
push
frstor
cmp
mov
mull
push
push
mov
lret
fisttpll
adc
dec
sahf
dec
xchg
and
xchg
jb
inc
fsubs
xchg
jae
ret
xor
lcall
pop
loopne
add
mov
pop
fldl
dec
jle
sub
xchg
xor
jle
xor
clc
sbb
das
add
xor
xchg
add
lods
adc
addr16
sbb
clc
sbb
push
imul
loope
orb
mov
leave
mov
aam
jge
sahf
fwait
sub
add
mov
pusha
dec
stos
sbb
push
sub
ds
mov
jmp
dec
sub
rorb
or
sbb
addr16
mov
push
sbb
push
jmp
sub
mov
adc
mov
mov
mov
into
push
dec
data16
sbb
jae
aad
mov
and
test
mov
lock
xchg
scas
xchg
jbe
movsl
lret
mov
fistl
xchg
fadds
stc
cmp
outsl
addr16
xchg
mov
pop
pop
pop
xchg
lret
rcll
cmpsl
sbb
mov
adc
mov
ret
mov
inc
mov
call
lock
scas
int3
dec
loopne
mov
leave
stos
jnp
mov
inc
pop
lret
pop
mov
stos
xchg
mov
mov
adc
test
xchg
mov
imul
xchg
rcrl
fmul
mov
xor
adc
pop
fcoml
popa
mov
jecxz
pop
push
ljmp
xchg
push
push
testl
pop
inc
out
iret
out
mov
jl
bound
dec
stc
ror
sti
mov
leave
scas
int
faddl
pop
data16
cmc
enter
and
movsb
icebp
sub
int
jl
std
adc
mov
sar
push
xor
insl
addr16
stos
jae
push
or
rclb
xchg
or
jl
repnz
test
hlt
imul
dec
sub
inc
mov
xchg
addb
scas
mov
mov
cmp
xor
sbb
std
jle
jle
xlat
cltd
mov
test
stc
jnp
jno
sbb
out
pop
daa
and
das
test
and
scas
cmpsl
sbbb
adc
insl
lods
dec
sub
mov
aaa
xchg
ljmp
add
mov
pusha
cmpsb
repnz
adc
sub
out
and
cmp
les
enter
lret
mul
mov
inc
adc
xchg
repz
xchg
pushf
jbe
dec
ljmp
dec
lds
add
data16
aad
xorb
cmp
or
jmp
xor
mov
xor
js
dec
repnz
test
lock
push
out
mov
fisubrl
std
inc
sbb
dec
js
ret
mov
cli
test
std
sbb
clc
jae
scas
mov
aaa
test
jne
jge
out
add
cmpl
push
or
xor
sbb
fmull
ror
xchg
scas
push
jmp
aas
insl
js
inc
addr16
mov
ret
fstl
cmpsl
aas
int
daa
sub
xor
mov
pop
jl
mov
inc
cmp
push
add
mov
sbbl
negl
sub
mov
xchg
scas
sahf
out
xchg
popa
sbb
bound
push
in
pop
movsl
nop
cmpsl
and
xchg
sbb
jb
xchg
mov
sub
je
stos
sub
cmpb
in
repz
inc
mov
gs
in
int3
lea
or
imul
mov
mov
jns
mov
and
aas
xchg
aas
jnp
jge
xlat
out
mov
dec
mov
push
fldenv
aam
cltd
jae
and
jecxz
out
sub
iret
mov
jecxz
xlat
cmp
pop
add
sub
inc
pop
jmp
jo
jns
push
sbb
sbb
pop
pop
shll
cmp
popa
pop
xlat
stc
call
scas
jle
or
test
test
insl
data16
in
mov
mov
popa
in
jp
rorl
insb
add
push
call
imul
stc
pushl
mov
sub
inc
cmpsb
add
mov
and
push
ret
iret
push
sub
rolb
fisubs
adc
or
ret
cltd
push
test
pop
push
push
adc
or
sbb
xor
jmp
add
xlat
ret
scas
fisubl
popa
out
out
clc
push
ljmp
sti
fmul
add
stos
inc
mov
jmp
dec
pop
jp
in
sub
pop
imul
xchg
add
movsl
mov
lea
loopne
mov
sub
lea
aad
lods
fsub
jle
mov
push
fisttpl
cld
or
pop
sbb
es
xchg
xchg
add
ss
sbb
cmp
out
insb
mov
inc
mov
cltd
or
fcmovnu
iret
dec
stos
mov
test
sbb
adc
inc
ficoml
adc
push
mov
xor
mov
jl
inc
aaa
jg
cld
xor
xlat
inc
jp
push
dec
lfs
roll
lock
mov
jnp
into
and
ss
mov
mov
into
dec
xor
pushf
mov
push
sbb
xor
xor
sti
andl
push
mov
mov
cmp
mov
cltd
jo
loope
jns
cmp
rclb
repnz
mov
sub
push
pop
dec
jmp
test
int
sahf
or
fs
ljmp
cmp
scas
arpl
hlt
test
or
inc
mov
dec
addr16
jb
mov
lods
and
dec
lods
int3
xchg
mov
dec
std
daa
push
mov
mov
mov
push
xchg
je
subl
dec
stos
nop
xlat
icebp
cmpsl
repz
mov
pop
arpl
mov
ds
push
pop
lea
add
dec
inc
mov
idivl
call
or
inc
mov
mov
imul
push
mov
ja
inc
fildl
dec
xchg
repz
nop
mov
xor
inc
push
dec
jnp
or
fbld
movsb
xor
push
mov
xchg
cmpsb
inc
jne
mov
lret
pop
xchg
adc
push
jg
in
testl
in
inc
push
test
ja
mov
bound
stc
mov
fdivrl
imull
clc
dec
fisubl
dec
les
scas
xchg
test
sub
pop
lods
int3
xchg
out
mov
inc
push
push
sbb
cmpsb
mov
sub
into
out
inc
movsl
out
mov
mov
lcall
cld
push
push
pop
int3
pop
pop
mov
mov
pop
bnd
mov
sti
out
cmp
shlb
mov
jns
ret
lods
scas
movsl
sub
xor
sub
dec
fidivl
xchg
fstpt
sbb
lcall
push
push
fcompl
lret
int
cmp
jno
lods
push
js
in
lods
fisubs
lret
dec
mov
data16
in
inc
out
sub
xchg
in
lret
xchg
push
cld
jne
mov
mov
scas
cwtl
insb
jbe
xchg
dec
inc
int
dec
jmp
int3
push
push
imul
iret
sbb
xor
jge
push
cwtl
fwait
not
dec
xor
gs
mov
jp
and
idivl
dec
nop
xchg
mov
xor
push
mov
add
jae
cwtl
pop
sbb
test
rclb
and
pop
std
jne
shrl
icebp
out
dec
jle
stos
movsl
pop
lods
cmp
mov
fadds
push
mov
ja
stc
push
mov
js
jecxz
outsl
data16
insb
pop
lods
cmpsl
cmc
sub
jp
ss
xor
ss
xchg
sbb
in
mov
cmc
and
xchg
pop
fprem
fwait
sub
sub
inc
repnz
cmpsl
incl
push
int
shlb
pop
dec
je
cwtl
mov
mul
das
jnp
mov
push
popf
data16
fldcw
aaa
cmpb
adc
mov
mov
sbb
popf
fwait
ja
jns
and
mov
cltd
gs
push
ljmp
adc
repnz
sbb
pop
pusha
dec
aad
repz
pop
fwait
add
jl
pop
sbb
stos
lods
jmp
xchg
dec
or
cmp
test
hlt
add
mov
lea
pop
jae
repz
pushf
and
fildll
cmp
mov
dec
scas
cld
push
addr16
dec
data16
test
jmp
pusha
lods
int3
push
iret
data16
mov
gs
incl
cwtl
cmp
jne
xchg
enter
dec
push
es
cmp
out
inc
push
push
imul
mov
jecxz
pushf
lds
js
insl
xchg
lret
xor
jg
sbb
rolb
cltd
notl
jl
dec
aaa
adc
xor
xor
mov
push
mov
xor
mov
or
push
ja
adcl
inc
dec
push
push
loop
sbb
leave
es
insl
imul
xchg
jecxz
ss
addr16
dec
add
out
lods
ss
xchg
test
es
mov
stos
shl
adc
jecxz
push
mov
repnz
dec
fcmovb
adc
fdivr
test
scas
lds
sub
test
addr16
mov
mov
inc
fmull
jecxz
gs
lods
int
sbb
push
je
cmc
outsl
int3
leave
and
aad
push
jbe
pop
cmc
popa
adc
adc
subb
or
lods
jp
sti
or
or
jg
adc
sub
cmp
sbb
or
add
fs
scas
sub
cli
push
cmpsb
cli
or
jl
jno
cmp
aaa
ja
bound
ss
xor
mov
jbe
pop
out
sahf
sbb
mov
or
xchg
cmp
jmp
add
or
imul
cmp
cmp
inc
add
jecxz
lods
push
inc
lock
xor
cmpsl
jg
in
addr16
sbb
lods
outsb
dec
push
and
xchg
aas
repnz
stos
ja
push
mov
sahf
adc
push
rcrl
fdivrs
ds
mov
jbe
dec
sub
adc
into
sti
stos
mov
ja
out
daa
pusha
scas
movsl
fsts
cmp
in
cmp
push
jne
inc
ljmp
cmp
mov
mov
xlat
lock
mov
add
inc
andl
or
mov
pop
fists
mov
sbb
inc
jb
sub
mov
arpl
push
ret
jb
loopne
push
movsl
je
daa
sahf
mov
andl
jae
jmp
paddb
insl
iret
sbb
inc
pop
test
in
enter
repnz
test
in
scas
fstl
mov
push
ja
stos
cmpsl
lock
push
cmc
rcl
insb
and
scas
gs
inc
jle
aaa
popl
mov
xchg
scas
and
adc
push
push
das
stos
testb
mov
jecxz
pop
inc
es
mov
inc
icebp
mov
mov
mov
jne
pop
fsubrl
pusha
fsubrl
sbb
roll
hlt
xor
mov
cmp
fimuls
inc
insl
shlb
mov
roll
or
jb
jno
out
repnz
ds
dec
pop
jl
aas
sbb
ljmp
cmp
cmp
push
dec
ret
mov
jg
adc
jle
pop
loopne,pt
xchg
shl
les
ret
loop
lds
inc
inc
adc
or
ljmp
mov
mov
lds
mov
jno
and
xchg
inc
pop
xor
push
or
push
xorl
adc
add
mov
inc
test
cmp
adcl
rcl
shrl
stos
aaa
lcall
out
popa
xchg
xchg
inc
push
xchg
and
cmp
std
lret
pusha
and
pop
popa
scas
mov
mov
outsl
add
int
out
and
enter
pop
orl
mov
out
xchg
or
nop
fiaddl
jmp
aas
push
lret
js
xor
int
in
sub
inc
push
outsb
cmp
test
push
adc
pminsw
push
lret
sbb
mov
fdivrs
inc
rorb
js
and
mov
mov
jo
incb
add
fucom
xor
sbb
cmp
cmc
dec
cwtl
pushw
xor
into
cli
jg
jo
jbe
js
or
push
inc
scas
mov
fdivr
movsl
mov
xor
sbb
xchg
leave
xor
mov
leave
mov
aam
repz
add
cli
cmpsb
or
xchg
cmp
in
shl
imulb
popf
pop
lds
pop
clc
xor
nop
mov
fnstcw
push
inc
jl
xchg
adc
push
or
jno
hlt
xor
hlt
xchg
cltd
sub
cmp
std
sbb
hlt
ljmp
push
adc
fidivs
bound
out
addr16
mov
cmpsb
ficoml
pop
xor
movsl
ja
inc
mov
sbb
push
add
in
mov
stos
or
xchg
and
aaa
push
and
jmp
mov
fisttpl
cmp
sub
or
jge
cmp
dec
ret
fnstenv
mov
sub
mov
mov
cmpl
lods
adc
bound
cmp
insl
adc
cld
outsb
fisubl
dec
mov
push
xor
popa
pop
hlt
in
into
sahf
dec
lcall
push
pop
enter
and
xlat
js
xchg
sub
or
lret
scas
ljmp
fs
sbb
or
push
hlt
sbb
mov
push
adc
popf
xor
mov
inc
test
fidivs
mov
pop
loopne
les
xor
aad
shrb
xor
div
dec
popf
bound
gs
adc
jp
movsb
ret
jno
dec
or
mov
int3
loope
sub
add
icebp
mov
popf
popf
add
add
xlat
inc
fdivrs
xchg
sub
clc
iret
int
insl
stc
pop
insl
ror
mov
cmp
ss
lds
and
orb
cs
or
mov
in
test
sbb
sbb
pop
in
test
mov
and
cld
cltd
xlat
jo
out
mov
insl
or
divl
sahf
int
testl
in
lret
or
add
lods
ss
pop
stc
bound
cmp
fwait
xchg
mov
xchg
fisubrs
lret
insb
leave
add
mov
sbb
into
lock
and
cmp
ror
adc
mov
ret
add
xor
sub
add
addb
and
into
cmc
shll
iret
or
push
push
sbb
out
punpckldq
jbe
pop
icebp
pop
popa
aaa
shrl
loop
or
test
xchg
filds
mov
mov
daa
hlt
sub
loop
clc
lea
ja
cmpsb
insb
int3
mov
inc
hlt
aad
xor
xchg
xor
xchg
lods
add
sbb
add
arpl
mov
sub
nop
loope
aaa
imul
mov
arpl
adcb
rcll
inc
cltd
mov
enter
dec
repz
cltd
sbb
jns
cmpsb
and
sbb
mov
fbstp
xchg
ss
gs
push
jb
lahf
test
test
inc
sbb
adc
data16
mov
dec
insl
fiaddl
mov
sti
hlt
adc
mov
lock
dec
mov
arpl
push
test
xchg
movsl
fxtract
push
push
mov
lahf
sbb
dec
fistps
add
push
xor
jbe
out
cmpsl
in
jnp
inc
adc
add
vsqrtss
jp
lret
xchg
ret
imul
xchg
cmpsl
cs
cltd
add
sti
adc
mov
in
xchg
into
inc
lahf
testb
sub
mov
aam
imul
cmp
fcomps
mov
pop
jnp
sbb
sti
mov
xchg
or
pushf
in
push
pop
mov
sub
mov
pop
dec
xchg
add
fwait
adcl
neg
lret
fisttpl
cwtl
movb
sahf
addr16
movsl
add
jmp
xor
xchg
adc
ja
sti
js
aas
mov
cmp
out
mov
pop
push
pop
subl
int3
sbb
push
cmpsb
nop
push
and
fldt
jp
pop
inc
sbb
fsub
pop
inc
jmp
sbb
mov
mov
sbb
out
int3
neg
data16
sbb
iret
mov
push
pop
xchg
cli
jg
pop
cmc
enter
mov
fs
and
mov
cwtl
pop
inc
xchg
cwtl
mov
sub
repz
repnz
pop
mov
int
mov
pushf
pop
pop
pop
xor
jb
outsb
inc
mov
shl
mov
insb
test
dec
push
lods
sub
ss
push
jecxz
jle
mov
adc
cmp
inc
mov
and
data16
jecxz
jmp
mov
mov
jmp
sub
add
push
pop
xchg
fwait
xchg
sti
ja
mov
xchg
mov
cltd
test
adc
push
lcall
repz
imul
xchg
mov
mov
cmp
call
popl
dec
push
sub
scas
lods
push
push
dec
xchg
ficomps
dec
insb
call
adc
les
jle
push
lods
adc
out
mov
rcll
aaa
xorb
pop
stos
int3
movsb
inc
mov
pop
mov
in
sbb
push
dec
xchg
je
cwtl
popa
out
cmp
cmpsb
shr
ja
mov
dec
xchg
hlt
into
idivl
aad
fimuls
adc
ds
xchg
adc
xlat
inc
fadd
testl
adc
lret
mov
out
xchg
cmpl
std
ja
icebp
cmpsb
sbb
dec
and
test
inc
mov
lahf
arpl
fwait
and
test
insl
movsl
mov
pusha
les
inc
aad
mov
push
in
cmpsl
add
and
sub
lock
mov
test
add
out
and
mov
insb
lret
inc
insl
arpl
push
out
sub
bound
inc
xchg
scas
pop
outsb
cmp
sbb
insb
adc
lock
lret
pop
jl
cli
sub
fcompl
jae
cld
fisubl
sahf
cmp
shlb
and
out
test
scas
pusha
addr16
adc
push
xchg
fsubs
out
jmp
pop
rcrl
xor
add
and
dec
push
insb
bound
pop
les
jnp
inc
xor
sahf
jg
pop
sbb
mov
inc
fsubp
notl
stos
movsl
add
cltd
xor
test
out
jns
movsl
test
mov
fs
fisubrl
aad
push
daa
jbe
rcrl
mov
lds
cwtl
xor
and
roll
sbb
sbb
pop
dec
movsl
adc
xor
pop
jl
imul
pop
mov
dec
shll
mov
ror
xor
loope
aas
pop
je
fidivrs
pop
pop
pop
cld
pushw
xchg
pusha
mov
nop
sbb
pop
xchg
lcall
je
sahf
xor
xchg
cmpsb
fwait
in
jp
out
rcll
mov
mov
and
jne
xchg
xchg
in
lds
or
sbb
jb
jno
mov
add
mov
dec
jnp
jno
test
jl
scas
mov
enter
jecxz
in
jmp
fs
inc
and
stc
cli
xchg
test
sahf
jecxz
sbb
mov
jp
in
jl
mov
mov
out
rcrb
cmp
repz
cltd
jbe
or
sub
rolb
inc
stc
add
shl
cmp
pusha
dec
inc
inc
mov
es
lods
cld
jbe
dec
and
call
mov
inc
add
lahf
ja
sub
cltd
daa
mov
add
cli
arpl
mov
mov
fs
jb
pop
ds
push
pop
imul
sub
mov
push
ds
dec
mov
mov
imulb
sub
and
jg
call
es
popf
icebp
cmp
je
lock
addr16
sbb
add
xchg
inc
adc
mov
rcll
xchg
and
mov
push
mov
inc
rol
push
es
mov
lahf
orl
jae
mov
jns
fildl
mov
notl
arpl
mov
mov
aad
xchg
xchg
negb
add
gs
das
adc
movsl
cmp
jns
xor
xchg
out
aas
sbb
fisubrs
push
xchg
xchg
pop
cmp
insb
sbb
add
fwait
adc
lea
es
add
mov
cmp
mov
mov
mov
or
in
sub
fbstp
push
xor
flds
sbb
mov
mov
jp
jno
aad
mov
jb
repnz
je
mov
dec
jmp
std
mov
sub
jge
cmpsl
add
or
fcoms
xchg
jno
je
imul
cld
push
pop
jno
and
ja
jl
and
adc
outsb
mov
ja
sbb
sub
xchg
pop
test
xor
add
add
arpl
or
adc
dec
loope
and
dec
push
jbe
lods
dec
inc
or
fidivrs
testb
xchg
mov
roll
repz
dec
jne
add
sbb
rclb
dec
mov
or
ficoms
sub
or
nop
mov
imul
inc
or
xor
pop
inc
int3
or
lret
jmp
push
inc
mov
clc
push
scas
adc
cmp
loop
inc
jo
jne
imul
xchg
mov
test
hlt
repz
test
inc
call
mov
into
stos
add
jne
dec
stos
jnp
push
loopne
lds
push
cmp
test
mov
push
pop
addr16
mov
and
in
sub
and
hlt
negl
jle
or
dec
negb
aas
jnp
fldt
mov
or
shl
sub
sub
push
lret
rorb
test
fsubs
loope
ret
cmp
fdivl
adc
repnz
push
sub
in
pop
add
out
xor
rorb
nop
xor
pop
mov
call
fiadds
push
mov
sbb
dec
rcll
shrb
push
inc
adc
in
mov
inc
adc
add
adc
sub
popa
clc
jb
cld
adc
outsb
andl
out
out
stc
movsl
dec
lds
scas
sti
or
scas
nop
es
sbb
xchg
xchg
das
shll
and
mov
outsl
mov
add
and
enter
divb
jae
lcall
stc
jb
ds
jbe
pushf
cmp
cld
fstp
aad
lods
pop
add
nop
loope
and
fistpl
les
insl
jge
mov
scas
mov
in
jns
sbb
sbb
xchg
and
xchg
adc
pop
iret
xchg
cmp
adcb
xlat
push
cmp
cmp
mov
jns
cmp
pop
jp
mov
out
das
jg,pt
mov
flds
inc
lahf
imul
pusha
inc
sub
cmpsb
jl
gs
xor
fisubs
outsl
fs
into
adc
xchg
cmc
int
mov
ret
sbbb
mov
movsb
into
ret
sbb
inc
fcoms
les
jg
into
xchg
push
adc
sub
push
les
repnz
mov
je
adc
or
stos
dec
sbb
dec
push
sub
fstl
arpl
addr16
sub
mov
sar
xchg
test
push
shrl
int
cli
sbb
fadds
sbb
push
add
push
push
pop
add
lret
in
lret
inc
aad
shrb
pop
ss
or
sbb
pop
push
lods
dec
repz
jnp
inc
mov
xor
lcall
movd
shll
sbb
mov
xchg
stos
xchg
imul
test
mov
lock
outsb
int3
mov
pop
and
jne
popf
fidivl
iret
or
sub
sub
lea
shrl
pop
jne
shlb
stc
add
push
sbb
mov
adc
push
jo
rorl
fldl2t
add
pop
and
test
push
pop
in
add
shlb
clc
addr16
inc
ret
xchg
scas
gs
sbb
stos
or
jo
sub
ja,pt
jbe
adc
pop
jle
lods
xchg
cwtl
fcomip
rclb
insb
sub
or
sub
nop
pop
add
push
addl
pop
jp
cmp
lock
cmp
sbb
push
insb
mov
scas
out
add
fcmovb
ss
lods
outsb
push
rep
adc
or
ret
scas
pop
jb
rcl
xchg
jae
or
sub
or
xor
adc
xchg
cli
sbb
and
mov
stc
push
jg
mov
test
mov
cmp
movsb
sti
aam
addr16
pop
sahf
out
test
mov
cltd
mov
lods
outsb
pop
movsl
clc
lret
movsb
sub
ss
in
fidivrl
inc
push
xor
cwtl
fsubl
int
repz
cmp
xchg
aam
popa
inc
push
jmp
and
inc
sbb
pop
test
dec
cmp
mov
cmpsb
pushf
dec
pop
mov
sahf
mov
stc
mov
pop
cmp
js
cwtl
sahf
sub
in
sbb
std
mov
roll
cmp
xor
fmulp
imul
out
lcall
ljmp
test
sub
add
fs
aad
out
pop
xchg
sub
out
mov
jecxz
jmp
call
cwtl
jg
aas
je
dec
fsub
sbb
jl
push
pop
add
adc
inc
xor
stos
push
mov
aas
dec
pop
cmp
jmp
test
mov
lcall
xor
sahf
fsubs
es
lock
aad
inc
mov
or
repz
or
inc
imul
fadd
stc
fwait
and
sub
jne
mov
mov
int3
jge
jne
mov
sbb
pop
imul
subl
push
ja
adc
test
cmp
cmp
loope
jae
sbb
push
cltd
daa
fdivl
mov
rcr
ficoms
or
lahf
cltd
pop
rolb
imul
fisttpl
sub
cmp
mov
cmp
push
imul
mov
jp
imul
loop
pop
mov
fstp
inc
mov
daa
mov
and
call
mov
cmc
and
in
and
jge
pop
push
repz
outsl
pop
sub
inc
push
cmpsl
inc
in
or
pop
cmp
xor
jle
jp
sbb
pop
fdivrs
inc
outsl
mov
sub
adc
int
push
add
lret
jl
mov
stos
push
orb
sub
shrl
mov
cmpb
iret
jle
fnsave
scas
dec
pop
sub
push
repz
cmpsb
sbb
sub
mov
dec
mov
out
das
or
push
ja
mov
sub
or
into
cmp
cmp
cltd
and
sti
mov
test
mov
ss
inc
mov
ja
dec
in
in
fstpl
loope
lcall
addl
shr
pop
lret
pusha
xor
mov
sub
mov
inc
mov
xor
sub
pop
out
xor
dec
sbb
jnp
aas
inc
fidivl
rorl
or
sbb
imul
test
ret
or
orb
jns
pop
ret
shll
lock
push
rorb
loope
cwtl
push
stos
rclb
mov
roll
pop
jo
jle
jmp
dec
adc
shl
or
inc
push
xchg
icebp
mov
push
cld
inc
jae
dec
aad
or
dec
pop
or
clc
mov
cmp
test
push
sbb
xor
lods
push
loope
mov
jg
pop
or
cmc
xchg
daa
popa
pop
in
and
call
fiaddl
add
imul
cs
jns
mov
inc
adcl
sahf
add
xor
cmc
mov
sub
cmp
loopne
inc
or
mov
add
test
or
mov
rcll
lds
xor
jno
jmp
xchg
jns
add
lods
rclb
mov
bound
inc
mov
mov
mov
lea
cwtl
ja
xchg
adc
xor
push
lret
add
in
add
ret
stos
sbb
adc
and
test
fstpl
fwait
jge
or
xor
add
addr16
jecxz
cld
insb
pop
pop
dec
lret
xchg
imul
mov
dec
cmpsl
mul
sar
inc
pop
mov
cltd
aas
mov
nop
mov
sub
cs
insb
xor
dec
cmc
jg
jecxz
lahf
fsubl
out
and
add
aas
aaa
fadd
insl
cmc
cmc
cmp
xchg
mov
popf
adc
gs
xchg
push
idiv
rclb
sbb
xchg
aas
add
sahf
inc
push
rcrb
lods
enter
or
jne
daa
fnstcw
stc
test
mov
sahf
and
test
and
lea
pop
clc
test
imul
push
dec
aas
outsl
aas
stos
lea
mov
pushf
sbb
mov
add
insl
sbb
dec
push
push
pusha
loope
leave
sub
push
call
hlt
xchg
mov
nop
xor
jns
loope
hlt
stc
xor
fnstcw
cmc
out
xchg
sbb
sbb
cmpsb
out
shl
rorl
jne
push
rol
xor
mov
ss
js
dec
and
out
fimuls
mov
cli
xchg
popf
out
or
mov
sbb
cli
addr16
adc
pop
fistl
push
es
inc
push
mov
cmp
mov
push
jb
lods
jmp
xchg
repz
insb
cmp
jns
push
rorb
sub
adc
pushf
and
std
mov
into
je
gs
dec
roll
cmp
add
xor
cmpsl
enter
dec
jns
adc
and
and
out
pop
shll
pusha
das
push
mov
xor
jo
andl
cmpsb
jae
movsb
or
cmp
in
xor
sub
jns
add
pop
scas
scas
pop
jle
sub
call
xor
popf
pop
xlat
add
int
cs
shlb
sub
cmp
jb
icebp
push
adc
pop
add
sub
pop
jbe
inc
xor
inc
mov
out
mov
fmull
sub
scas
call
mov
sti
xlat
insb
jae
js
icebp
xchg
jecxz
lea
xchg
xchg
das
sub
pop
xchg
stc
into
test
cmp
negl
add
les
les
movsb
mov
adc
stc
repz
xchg
dec
movsl
pop
jae
orl
inc
xchg
arpl
pcmpeqd
addl
xor
lods
mov
pushf
arpl
inc
bound
mov
sub
jecxz
outsb
js
xchg
loopne
inc
fistpl
push
imul
push
lods
sarb
fisubs
push
ss
adc
je
jmp
mov
cltd
lret
mov
xchg
mov
add
jecxz
or
in
adc
mov
lea
push
int3
ja
les
iret
cmp
sbb
out
outsb
sub
dec
push
adc
lahf
nop
nop
stos
push
je
dec
and
xchg
iret
sub
pop
add
ret
mov
mov
mov
mov
push
mov
cmpsl
push
xor
adc
push
pusha
out
inc
lret
or
push
push
pop
xchg
das
dec
cmp
push
adc
pop
push
popa
xchg
inc
pop
into
mov
lock
inc
jns
fmull
mov
lret
inc
ljmp
jbe
sarb
ljmp
dec
jmp
lods
adc
mov
jb
push
lods
lock
enter
sub
dec
mov
pop
fstl
lret
xlat
jae
adcb
cltd
shlb
jmp
push
loope
sbb
push
mov
bound
and
or
movsb
mov
stc
and
lret
pusha
lods
stc
mov
sbb
loope
inc
into
insb
popa
jno
sub
test
and
push
insl
ja
es
mov
sahf
jge
pop
dec
sbb
dec
fiaddl
std
sbb
aas
insl
dec
mov
nop
lret
mov
insl
xchg
dec
cmp
xchg
in
sha1msg2
dec
jle
jb
dec
mov
cli
ret
push
add
icebp
adc
stos
int3
movsb
dec
jmp
jecxz
fdivl
mov
test
or
dec
and
push
xor
cmpsb
push
xor
add
mov
sub
nop
mov
adc
inc
add
push
orb
shr
sub
dec
inc
add
test
cmp
jecxz
mov
jmp
insl
push
jne
inc
add
subl
push
mov
jecxz
data16
lods
movsb
pop
mov
dec
sub
jge
jg
jecxz
jns
sti
pop
jns
lea
inc
into
in
jo
push
jge
adc
sarl
mov
lcall
test
and
stos
sbb
ja
pop
scas
xchg
mov
jp
cmp
jno
dec
cmpsl
adc
stos
js
xor
enter
or
cmpsl
sub
dec
push
orl
mov
mov
mov
inc
xchg
lahf
xchg
arpl
pop
jae
das
add
xchg
xlat
sahf
xchg
dec
add
repz
mov
mov
fdecstp
lahf
loopne
out
ret
mov
ds
testb
push
or
fstpl
add
sbb
sub
sbb
mov
int3
lret
iret
inc
or
mov
add
lds
cmc
outsb
and
xchg
or
adc
fmulp
adc
and
cmp
rolb
jae
je
push
ret
repz
cmc
adcb
cmpsl
out
lods
mov
jmp
stos
mov
cmc
and
gs
mov
fistl
dec
popa
dec
std
test
mov
in
dec
leave
incl
xlat
aad
fdivl
xor
out
shrb
arpl
decl
and
cmpsb
lods
cmp
stc
inc
and
mov
insb
std
mov
mov
pop
mov
cmp
add
addb
xchg
and
iret
stc
cmp
in
je
les
push
mov
stos
xchg
or
daa
ficoml
stc
dec
sbb
inc
add
dec
loope
sar
dec
cs
ljmp
adcl
int3
mov
fstpl
iret
sbb
xchg
mov
mov
mov
insb
imul
lret
dec
adc
mov
sbb
pop
arpl
push
bsf
rcrl
inc
fsubl
cmp
lods
push
aam
dec
or
dec
lret
cltd
mov
mov
pop
daa
fwait
sti
inc
pop
ret
pop
inc
rcll
xor
je
or
xchg
push
fstl
adc
fldt
mov
ffreep
rclb
je
sub
loope
xchg
adc
rep
jo
aaa
lds
inc
xor
call
jp
push
jb
or
or
dec
ss
fs
cmpsb
lcall
sbb
lret
push
and
dec
add
xchg
pop
pop
pop
out
nop
std
and
mov
lret
cli
popf
aaa
add
inc
xor
addr16
cmpsl
mov
cmpsl
cmpsb
cld
push
imul
cmpsl
test
shlb
nop
out
and
out
mov
ret
pop
rcl
push
test
jns
ja
adc
shl
fcoml
lret
pusha
lock
push
and
and
cmp
xchg
or
inc
sub
push
idivl
jp
xor
fisttps
imul
out
and
dec
mov
add
xchg
adc
clc
mov
lds
test
call
stos
xchg
gs
push
inc
mov
lods
jo
push
sbb
adc
xlat
sub
sub
imul
sbb
sub
sbb
push
in
sub
dec
rcrb
sbb
es
outsb
fbstp
mov
sbb
repz
pop
mov
cmc
je
cmp
add
inc
icebp
notb
dec
out
pop
fdivrl
add
xchg
andb
pop
hlt
test
adc
test
xchg
push
aaa
outsl
push
xchg
mov
xchg
cmp
cmp
fucom
pop
pop
testl
inc
adc
mov
push
sahf
xchg
fsubr
adc
scas
in
ds
inc
pop
and
shlb
and
mov
sub
mov
push
stos
pushf
adc
scas
ficoms
adc
mov
fbstp
mov
int
repnz
lahf
push
call
aam
cmc
or
addb
pop
ljmp
dec
mov
cmp
mov
push
push
fldcw
ds
frstor
dec
loopne
push
mov
lock
cmc
adc
and
pop
call
lahf
dec
mov
dec
es
or
and
inc
adc
lret
mov
xor
cltd
inc
aaa
popf
jns
mov
push
mov
xor
int
aaa
lahf
mov
leave
cwtl
pop
xchg
fcomi
decb
call
mov
loopne
rorb
mov
xor
daa
lahf
fldl
xlat
add
test
push
mov
push
fisttps
clc
mov
leave
scas
jne
adc
or
lcall
test
xchg
dec
mov
push
clc
mov
xor
push
aaa
dec
std
mov
or
push
inc
gs
xchg
mov
push
or
mov
xchg
lea
adc
fwait
test
pusha
cmp
adcl
das
sbb
repnz
bound
pusha
das
cmp
mov
or
mov
xor
addl
jl
and
cs
and
stc
mov
inc
leave
adc
int3
and
icebp
mov
repnz
sbb
cs
lds
pop
and
frstor
movsb
sbb
stc
in
mov
repz
xchg
fadds
jle
mov
push
and
dec
and
cltd
push
xor
dec
dec
test
in
clc
cmpsl
xchg
je
xchg
in
fstp
cmp
aas
gs
xchg
cmc
cmpl
stos
pushf
adc
sub
bound
sub
sbb
std
add
bound
inc
pop
dec
lock
insb
cmpsl
sbb
push
frstor
sbb
sub
xchg
mov
ffree
cltd
or
sbb
jle
ss
in
inc
mov
in
mov
lahf
xorl
or
cmc
sub
mov
fbstp
jns
pop
jne
cmpsb
stos
push
xor
mov
fwait
dec
data16
test
pushf
xlat
lds
adcl
fdivl
xor
pop
cmp
mov
insb
xor
adc
push
stos
lock
xchg
dec
icebp
mov
push
mov
dec
in
mov
insb
fbld
in
xor
jge
shl
and
dec
imulb
dec
mov
add
test
je
sbb
jno,pt
sub
imul
inc
and
mov
pushl
push
fidivrl
dec
fdivr
jns
fidivl
cld
cmc
sbb
lret
jae
inc
jnp
daa
inc
lods
insb
lahf
ss
mov
sbb
adc
ret
roll
call
bound
xor
loop
push
add
ss
lret
pop
push
pop
mov
loop
clc
test
pushf
mov
insl
mov
and
pop
dec
xor
push
aam
push
imul
outsl
push
cmp
jp
inc
lret
out
mov
iret
dec
nop
stos
or
push
sub
mov
push
testl
add
add
cmp
fwait
popf
pop
cwtl
lock
pop
mov
mov
pushf
cmp
in
mov
in
cli
sbb
xchg
cmpsl
cmc
dec
outsb
push
mov
mov
ret
rorl
jl
imull
sbb
fwait
add
aaa
fisubl
out
dec
pop
addl
cwtl
or
or
and
push
add
sub
mov
movsb
les
popf
mov
test
xor
xchg
xor
xchg
pop
push
inc
bound
and
dec
and
adc
jmp
daa
xorb
ficompl
scas
cmc
mov
sub
insl
leave
xchg
jecxz
mov
sub
mov
and
sahf
in
pusha
insl
and
push
in
and
jb
xchg
pushfw
test
fucom
jnp
mov
call
das
mov
pop
icebp
aam
xchg
idivb
or
shlb
inc
aad
sub
fcoms
aam
test
shll
test
or
mov
add
nop
into
sahf
or
aaa
xor
insl
repz
and
stc
sbb
push
mov
jno
imul
pusha
outsb
mov
sbb
and
es
gs
push
dec
sbb
mov
shlb
int
stos
int
call
cmp
push
ror
fstpt
fcmovb
ss
xchg
adc
pop
sub
mov
pop
push
scas
cmp
or
lods
dec
add
pop
push
mov
in
push
push
mov
fadds
jno
fistl
cmpb
xchg
movsl
push
add
test
cmpsl
pop
ret
dec
pop
push
mov
dec
or
insb
cmp
movsl
jno
testb
divb
push
cmp
cmpsb
subb
cmp
jge
jmp
dec
rcrb
out
mov
push
sbb
adc
and
rorl
ret
sbb
jbe
mov
int
shll
mov
ss
icebp
push
fcmovbe
repnz
incl
lds
mov
sahf
into
dec
ret
mov
aam
ja
bound
mov
jecxz
rcll
imul
stos
dec
sub
jbe
lods
mov
xor
jae
mov
pusha
dec
jle
imul
mov
mov
pop
mov
repnz
loopne
xor
pop
aad
stos
adc
shrb
push
arpl
outsl
aad
adc
cmp
jp
inc
xlat
ds
pusha
fbld
push
xchg
mov
inc
cmpb
adc
push
pop
test
and
inc
mov
dec
test
stc
dec
cmp
pop
lds
xchg
cmpsb
jno
jecxz
stc
rclb
xchg
jp
inc
mov
ss
cmc
jnp
sbb
mov
mov
adc
test
ja
int3
push
ja
js,pn
dec
jg
mov
mov
enter
xchg
xchg
lds
iret
dec
into
dec
add
xchg
in
add
mov
xchg
in
out
mov
in
xchg
jl
test
sbb
mov
adc
pop
movsl
out
mov
mov
cld
mov
out
or
js
jg
lahf
or
xor
cmpsb
ret
ja
mov
xchg
pop
sbb
xchg
mov
jbe
nop
jns
insl
cmc
sub
or
lods
cmp
pop
or
icebp
fcmovnu
xchg
sub
xor
cmpsb
fisttps
cmp
mov
fmull
mov
in
adc
pop
xchg
xorb
loop
popa
loopne
leave
dec
mov
pop
lret
xchg
mov
dec
inc
xor
fidivrs
dec
xchg
mov
mov
sbb
xor
jle
push
add
sahf
pop
les
sbb
mov
push
fsubrl
adc
xchg
data16
fstl
dec
push
pushf
push
mov
or
mov
push
mov
mov
sub
loope
leave
mov
and
rolb
lcall
dec
mov
xor
mov
movsb
lea
lret
outsl
push
add
xchg
test
xor
sbb
or
sbb
mulb
pop
sti
jle
in
test
dec
inc
dec
bound
adc
inc
ret
js
add
mov
adc
jo
mov
pop
nop
jg
pop
fcomps
mov
inc
xchg
cmp
adcl
imul
cs
mov
xchg
lds
rcll
mov
add
mov
adc
and
mov
xchg
outsb
sbb
cwtl
imul
jns
call
aas
lods
insl
repnz
aam
adc
movsb
into
inc
cwtl
loop
leave
js
push
add
jmp
lea
imul
push
ja
adc
int3
dec
push
faddl
dec
xor
or
or
repnz
mov
pop
fisubrs
imul
outsl
inc
cmc
jnp
sub
mov
js
aaa
push
sahf
rep
mov
cltd
mov
test
mov
ja
sub
arpl
dec
loope
pop
jmp
or
pop
popa
or
test
fwait
jecxz
adc
jl
push
jo
sub
inc
xchg
outsl
cltd
pop
pop
int
cli
lahf
in
push
jae
std
lea
test
mov
ljmp
in
jbe
mov
popa
int3
fwait
pop
jmp
shrl
mov
movl
push
cmpsl
and
inc
xor
push
cs
ficompl
inc
sbb
push
scas
xchg
iret
das
ds
xchg
in
mov
cmp
cmp
hlt
rol
and
jmp
lahf
fucomi
mov
and
xchg
rcll
cmc
sub
fbstp
dec
lret
cmp
pushf
int3
sub
and
test
inc
cwtl
add
mov
mov
cmpsl
push
repz
or
loop
jmp
or
into
mov
test
shlb
jl
push
xchg
or
add
shr
inc
or
hlt
hlt
addb
mov
mov
lea
cld
loope
mov
outsl
xchg
adc
jmp
loop
mov
push
mov
gs
pop
imul
xor
imul
mul
aaa
ret
fs
push
sarl
pop
shlb
push
sbb
lahf
jo
test
flds
cmpsb
stos
or
sub
test
or
jle
cmc
es
jbe
incl
es
je
cmp
imul
out
repz
push
and
mov
push
ret
mov
jno
stc
pusha
fwait
add
pop
popw
sahf
imul
dec
aam
inc
aaa
popa
mov
das
jge
cwtl
mov
ja
in
cmp
add
aam
mov
lret
add
jg,pn
lret
lret
enter
imul
xchg
dec
out
fs
sbb
lsl
div
push
ret
test
add
jmp
fs
push
fcomps
lcall
mov
repz
pop
add
ret
inc
ret
push
add
xor
mov
scas
fidivrs
push
lcall
ret
cmp
cld
adc
push
cld
add
and
aam
add
icebp
xor
sbb
std
popf
je
idivl
jno
ja
inc
cmc
and
fdivr
lret
mov
sti
iret
aaa
dec
mov
cmpsb
or
sbb
push
pop
rorl
or
lock
ret
add
push
mov
xor
into
jnp
inc
push
out
ret
jae
ret
inc
insw
cltd
mov
pop
fisttps
jbe
or
gs
pusha
inc
loope
adc
test
add
enter
dec
mov
pushf
enter
inc
add
add
out
adc
jg
mov
test
mov
hlt
cmc
inc
ljmp
icebp
sub
cmpsl
jge
aam
test
das
stc
int
mov
cs
shl
add
movsl
in
sbb
in
into
int
js
xchg
mov
add
push
faddl
popf
xor
cmp
adc
test
in
pop
mov
lds
arpl
adcb
mov
cs
pop
xchg
pop
cmp
adc
fldt
adcl
pop
dec
mov
cmp
xor
jb
mov
ljmp
inc
gs
mov
stos
lods
push
push
cmc
pusha
sbbl
xchg
pop
xor
push
sti
adc
fsubrl
push
enter
xlat
adc
xchg
les
es
dec
sub
xor
xor
xchg
dec
lock
fiadds
mov
and
adcb
cs
mov
add
repz
cmp
cltd
fcoms
sbb
push
cmp
roll
out
imull
xchg
jns
inc
sbb
fs
mov
jle
or
pop
imulb
fs
lds
lahf
aam
lahf
in
stos
mov
inc
ds
mov
xor
out
mov
cli
mov
fcomps
mov
push
in
icebp
inc
mov
sub
into
jne
jns
in
adc
rcrb
imul
jmp
std
dec
out
call
inc
aas
leave
adc
inc
cltd
addb
add
cmpsl
push
add
dec
incb
repz
xchg
aaa
out
adc
daa
fsubs
mov
repnz
xor
or
aad
inc
mov
popf
fs
les
push
jno
mov
sbb
out
and
loop
lds
pop
pop
sbb
cmpsb
add
xor
cmp
aam
pop
test
push
mov
lea
and
adc
ljmp
push
fucomi
pop
test
fs
add
out
mov
int
mov
xchg
sbb
mov
and
sbb
pop
aad
adc
insl
pop
int3
pop
sbb
pushf
bound
jae
mov
stc
insl
test
pop
lret
jp
inc
push
add
pop
xchg
mov
fstpl
push
rcll
xchg
fldenv
psllw
mov
daa
mov
xchg
outsl
mov
aad
pop
jp
lock
sub
xchg
mov
fdivrs
pusha
or
inc
xchg
out
pusha
sub
inc
dec
push
cmp
inc
push
dec
flds
mov
cmpl
sarb
fadd
mov
add
mov
cltd
push
or
push
sbb
gs
jmp
dec
imul
ret
daa
call
sbb
push
inc
js
das
pop
mov
lahf
outsl
jno
insb
es
shll
dec
cmp
sahf
sbb
and
ret
fcmovnu
movsl
movsl
dec
lcall
xchg
push
push
clc
fidivs
push
push
iret
and
adc
data16
out
mov
jle
add
xchg
js
jl
adcb
and
push
mov
push
dec
sub
pop
mov
loopne
repz
les
and
cmp
arpl
push
xchg
cmpl
loopne
jmp
push
xchg
outsl
push
and
ss
movsl
sbb
sub
lahf
dec
jmp
mov
jp
lods
mov
xchg
adc
pushf
int
jg
pop
data16
test
mov
aad
cmpsb
inc
jecxz
imull
pop
sarb
push
cmp
divb
push
mov
outsb
nop
std
jp
mov
cmp
into
adc
sub
jb
mov
and
sbb
jbe
and
lcall
mov
pop
enter
xchg
jg
orl
insb
sub
jns
and
negb
push
xor
cld
es
adc
ds
aas
scas
inc
es
rcrl
stos
dec
ja
mov
cmp
dec
sahf
imull
and
add
xchg
and
mov
add
fdivrl
jb
dec
bound
imul
xchg
leave
add
jno
arpl
test
dec
xchg
push
inc
mov
mov
cwtl
cmp
ja
decb
cmpsl
divl
pop
pop
popf
pop
mov
mov
pop
sbb
sar
or
adc
mov
aas
cmpl
scas
pop
psubq
fsubrl
xchg
add
mov
stos
pop
jecxz
mov
les
cmp
push
or
out
mull
loop
push
push
xor
adc
js
and
lret
inc
imul
arpl
sub
adc
loope
inc
ds
jecxz
push
cmpsb
xor
jg
inc
lret
dec
cmp
mov
cmpsb
das
sarl
iret
sbb
repz
insb
mov
nop
pop
inc
mov
add
adcl
mov
pop
clc
xor
ljmp
sub
stos
adc
inc
fwait
jbe
xor
pop
ljmp
dec
cmpsb
ja
ret
mov
xchg
popf
test
adc
inc
mov
xchg
sub
adc
adc
in
sbbl
in
addr16
xchg
inc
pop
fdivl
sbb
rcrl
sbb
aam
xlat
rorb
mov
adc
jp
cwtl
and
cltd
adc
lea
mov
sbb
cld
xchg
xchg
lret
lahf
lock
adc
iret
pop
lret
jnp
addl
add
push
outsb
jecxz
mov
mov
mov
popf
iret
jne
pusha
inc
rcrl
mov
lock
xor
in
xlat
push
xchg
xor
push
clc
aas
insb
inc
leave
dec
lods
shrb
loopne
mov
dec
add
dec
pop
insl
ljmp
ss
lret
idivb
add
push
popf
inc
jae
push
jno
aad
pushf
hlt
mov
push
orb
popf
cmpsl
in
out
adcl
jnp
xor
sti
pop
cmp
ljmp
jo
cmpsl
mov
mov
and
xchg
xor
gs
push
cs
dec
push
inc
rcr
add
jmp
mov
add
rorl
fisubrs
and
pop
js
xor
scas
or
push
inc
aas
leave
ljmp
cmp
test
xchg
sub
mov
dec
inc
repnz
jne
aam
add
scas
enter
sahf
imull
pushf
sub
std
sti
cli
cmp
mov
or
adc
xchg
dec
xchg
inc
outsb
and
int
dec
cmc
lcall
es
xchg
movsb
imull
xorl
insl
cmpsl
cli
aam
pop
imul
mov
stos
stos
scas
icebp
shll
les
push
mov
inc
loopne
fwait
out
in
aaa
xchg
lret
int3
ret
ljmp
mov
rclb
scas
daa
or
dec
adc
outsb
cltd
push
push
push
sub
xchg
aaa
inc
or
jns
xchg
mov
movsb
icebp
clc
adc
iret
pusha
xor
xchg
js
idiv
add
arpl
xor
push
lds
mov
pop
iret
enter
ret
dec
and
in
cs
cwtl
bound
pop
imul
jae
test
orl
inc
push
inc
mov
lock
xchg
mov
push
pop
loop
repnz
or
or
sub
rcrl
js
imul
testl
das
ret
stc
addl
icebp
icebp
insl
mov
pop
pop
and
out
push
pop
fs
ljmp
mov
out
mov
inc
cltd
nop
xor
sub
jo
rorb
mov
mov
or
flds
out
xor
fimuls
rcrb
inc
movb
mov
sahf
push
roll
push
fstps
and
outsl
sbb
cmp
arpl
or
or
add
testl
mov
das
sbb
adc
jge
push
mov
sbb
and
lahf
dec
mov
in
cmpl
mov
dec
or
mov
repnz
cwtl
loopne
int3
test
mov
and
das
stc
adc
jge
mov
mov
cli
movsl
xor
daa
sbb
std
mov
mov
and
mov
aas
jl
jle
std
dec
push
xchg
mov
in
mov
jle
test
xor
or
aam
dec
dec
add
xchg
pop
push
pop
mov
inc
xchg
addr16
cmc
adc
mov
out
repnz
adc
xchg
pop
in
dec
fwait
pushl
gs
mov
decb
adc
movl
cmp
in
cli
inc
hlt
in
fidivrs
mov
pop
jo
sbb
mov
in
pop
mov
jae
fsub
or
repz
or
jmp
in
in
shrb
xchg
fidivrl
test
xchg
adc
dec
pop
rolb
xor
inc
pop
lcall
jb
movsl
pop
cltd
int3
mov
inc
dec
std
mov
sahf
mov
pop
jl
adc
movsl
clc
mov
mov
rclb
xchg
cmpsb
outsl
sbb
mov
imul
push
adc
xchg
bound
xchg
lock
insl
xchg
cmp
inc
cmp
nop
fsubl
leave
jge
pop
ljmp
repnz
repnz
cld
push
cmc
or
xor
inc
xchg
or
pop
adc
out
mov
ss
ljmp
or
pop
mov
jo
cltd
movsb
add
dec
icebp
out
inc
jnp
cwtl
and
sbb
clc
mov
sub
xor
jmp
fwait
cwtl
pop
pop
int
popa
mov
mov
add
mov
sbb
dec
jne
push
hlt
in
arpl
fs
cmp
mov
std
sbb
testl
mov
leave
jge
subl
mov
cs
imul
mov
fildll
lds
inc
lock
push
jne
mov
incl
or
cmp
lock
ret
lods
das
jae,pt
sub
aaa
push
std
fidivs
fisttps
pusha
cwtl
mov
sub
ficomps
sbb
mov
test
adc
jl
je
daa
loope
jae
sbb
out
sbb
cli
insb
cmpsl
int
add
maskmovq
popf
out
or
es
add
sbb
and
dec
jns
gs
jp
jge
xchg
mulb
and
sbb
sbb
mov
cmp
stos
mov
mov
inc
adc
adc
adc
mov
jnp
lods
inc
push
mov
aad
ret
std
push
fisubl
jo
clc
adc
aam
mov
xlat
and
pop
into
das
out
and
popf
test
fimull
sbb
out
js
in
dec
push
int
push
xor
adc
xor
pusha
adc
fs
sub
jno
sbb
pop
mov
jns
sub
mov
inc
pop
call
and
sbb
xchg
pop
pop
adc
fs
jmp
dec
fnstenv
inc
daa
pop
shrl
fisttpl
aad
push
movsb
test
or
pop
in
sbb
inc
les
roll
mov
xor
in
dec
add
push
hlt
sub
cwtl
mov
push
mov
addb
cltd
gs
rorb
xor
sbb
fisubrs
mov
cmp
sahf
push
lods
mov
mov
mov
sbbb
dec
sub
das
mov
cltd
adc
jne
cmp
test
in
pushf
pop
fmull
dec
clc
xor
push
xor
clc
loop
jmp
movsb
lcall
fwait
rcll
adc
in
jl
frndint
dec
xchg
cwtl
cmp
push
mov
cmc
xor
lret
mov
pop
jno
xchg
xchg
mov
cmp
mov
jb
in
test
loope
jne
jg
lret
mov
addl
ret
push
ss
pushf
pop
lcall
stos
test
mov
sub
mov
nop
lret
repnz
pop
subb
xor
lods
in
xor
mov
pusha
push
fcoml
ljmp
add
sarl
adc
ret
repnz
enter
or
lcall
aas
arpl
adc
push
cwtl
ljmp
xchg
add
pop
dec
mov
cs
shlb
mov
lcall
lods
adc
stos
repnz
cld
stos
xchg
jae
jg
ja
sbb
jns
xchg
lds
cmp
stos
leave
pop
insb
cmc
lahf
bound
js
icebp
lret
jecxz
scas
icebp
xchg
mov
loopne
addr16
jb
cmc
movsl
andl
outsb
xchg
outsb
jae
and
xchg
int3
iret
add
or
mov
push
sub
enter
jb
sbb
std
lock
rorl
sbb
or
pop
sub
mov
pop
int3
roll
mov
iret
dec
sbb
jns
iret
jmp
mulb
jp
pushf
add
sbb
aaa
into
inc
jne
push
jno
push
fdivs
int
push
nop
addr16
cs
not
pushf
push
test
push
stc
mov
daa
scas
popa
int3
jmp
sub
bound
fnstsw
jbe
sub
sub
stos
mov
adc
and
adc
xor
testl
cli
rcrl
shlb
ret
fdivrs
cmc
sub
aam
push
loopne
gs
popa
adc
adc
xchg
jbe
xor
push
jns
icebp
mov
xlat
sub
cli
xchg
cmovns
xor
cmp
cmp
out
mov
lds
fsubs
scas
pop
loope
xlat
dec
arpl
mov
sub
inc
jl
jge
mov
cmp
dec
rorl
pusha
inc
imul
inc
mov
pop
fdivrl
pop
mov
icebp
fdivrl
ret
fucomp
inc
xchg
or
lcall
adc
jge
shrl
ss
int3
inc
scas
pop
dec
mov
mov
dec
stos
decl
test
pusha
sbb
test
or
dec
push
mov
out
cmp
mov
and
mov
sti
lcall
lahf
mov
push
idiv
cmp
cmc
insl
cld
hlt
mov
es
dec
dec
dec
dec
cli
mov
in
fs
pop
lds
pop
inc
mov
mov
data16
movsl
cltd
lods
mov
mov
mov
incl
sbb
push
ss
add
sarb
mov
cli
out
sub
adc
sub
mov
cmp
scas
inc
lret
pop
repz
mov
pushf
sbb
loop
insl
jmp
fs
push
cli
test
out
sahf
jg
popf
shlb
ret
pop
out
push
adc
xor
xchg
pop
imul
xchg
xchg
cmc
pushl
ds
jae
dec
rorl
insl
adc
test
in
inc
fcoml
cmc
cmpl
pusha
inc
in
jge
xchg
icebp
ss
or
sti
mov
arpl
popa
mov
dec
cmp
mov
mov
sbb
mov
ds
test
cmp
add
add
insl
push
xor
popa
movsb
xor
lds
jo
adc
and
ja
and
pop
mov
lcall
pop
push
sub
sbb
mov
lods
shll
and
push
fdivp
movsl
push
int
lds
or
cmp
movsl
add
jnp
push
sub
int3
adc
cmc
fsubp
dec
movsl
pop
shl
xchg
or
add
fists
ret
enter
shrb
adc
jno
sub
call
mov
shl
or
arpl
xor
cmp
scas
sbb
sbbl
out
mov
jge
inc
int3
dec
cmp
inc
jl
insl
mov
fistl
enter
fcom
gs
jg
jne
inc
cmp
mov
notl
and
push
inc
in
popa
pushf
add
sbb
or
and
pop
into
and
inc
sbb
cmp
mov
aas
jecxz
push
cs
daa
or
adc
out
mov
push
arpl
xchg
add
mov
daa
divb
and
jbe
jns
or
lret
add
pop
add
adc
das
repz
or
fstpl
stc
loope
pop
enter
xchg
rcl
push
cmp
mov
add
push
inc
es
dec
lcall
lods
fdivp
shlb
sub
xchg
jp
pop
sahf
adc
mov
fs
imul
pop
mov
fisubl
arpl
ret
adc
jmp
sbb
mov
jnp
bound
xchg
ret
mov
out
sub
mov
sub
pop
imul
cmp
xlat
jno
mov
add
daa
mov
add
pop
mov
adc
nop
ljmp
sysexit
push
jle
xor
mov
fldenv
aam
in
jmp
sub
or
adc
lret
in
adcl
mov
cmp
or
lods
jp
rorb
dec
xor
test
int
pop
or
adc
pop
ds
mov
cltd
sub
cmc
add
bound
xlat
jbe
mov
xor
mov
call
cmp
in
mov
pop
insb
out
jg
mov
fsub
std
cmp
faddl
in
push
iret
mov
xchg
sbb
enter
push
out
iret
adc
fisubrs
adc
popa
outsb
pop
inc
mov
lret
fs
scas
cmpsb
test
xor
xchg
jle
mov
xchg
cltd
inc
sub
in
fnstcw
and
and
xchg
jnp
sahf
cwtl
push
out
cmp
dec
add
in
mov
sub
repnz
mov
verr
sete
sub
add
cmp
das
lret
or
fs
in
push
shl
inc
jl
mov
dec
fisubrs
addr16
ja
popa
push
adc
cli
dec
or
cmpsl
ja
jmp
sub
mov
mov
sbb
jns
lcall
or
xchg
adc
dec
xor
fptan
xchg
cmpsl
add
sbb
mov
mov
add
jge
jns
fnstcw
aam
data16
jp
add
and
sub
or
lcall
pop
pusha
xor
mov
ss
lea
into
add
dec
lods
push
pop
ficoms
and
add
xchg
mov
fistpl
and
movl
icebp
jge
jl
pop
sub
xor
fbstp
add
shl
xor
leave
add
and
add
jmp
jecxz
cwtl
popa
mov
aam
fbld
bound
out
mov
jnp
sbb
mov
das
pop
ja
lret
addr16
js
stos
mov
arpl
inc
psubusw
jne
addb
insl
fnstenv
std
movsb
jl
into
mov
std
or
fbld
cmpsl
xor
or
or
fwait
jne
inc
and
testb
insl
dec
gs
xor
lock
std
jg
xorb
adc
jbe
lcall
scas
adc
jbe
cli
xor
or
push
inc
testl
mov
sbbl
mov
sub
fadds
jbe
icebp
cwtl
loop
rcrb
fxch
adc
jo
and
jl
mov
rcll
test
adc
cmpsb
mov
sbb
lret
mov
and
xchg
jnp
add
clc
pop
xchg
dec
mov
data16
or
or
jmp
cmp
out
mov
clc
xor
mov
sbb
fisttpl
aas
sub
lret
sarb
scas
rorb
mov
stos
pusha
mov
cmp
dec
fdivrl
mulps
in
in
fbstp
inc
mov
pop
jo
xor
hlt
repnz
test
in
xchg
test
icebp
outsb
and
je
inc
jmp
mov
fildl
rclb
sbb
lea
sbb
add
inc
jno
mov
inc
sahf
jbe
jae
mov
cs
xchg
ljmp
adc
pop
sub
add
inc
or
jl
test
out
sub
jbe
or
add
les
jecxz
cltd
adcb
adc
clc
mov
cmp
xchg
ret
pop
mov
adc
sub
aas
pop
sbb
mov
xchg
mov
pusha
add
mov
ja
pop
push
xchg
addr16
movsl
iret
sti
aaa
push
inc
mov
sbb
lods
mov
jbe
clc
xchg
rcrl
imul
loope
imul
test
stos
sbb
and
mov
icebp
fldcw
mov
pop
cmp
mov
iret
ljmp
mov
push
add
ds
mov
dec
and
repnz
push
add
push
repz
mov
pop
cmpsl
sarl
outsl
xor
popw
and
dec
push
popf
nop
cmp
scas
imul
xor
cmp
sbb
adc
sbb
dec
push
push
pushf
xchg
jns
push
mov
jae
stc
imul
mov
call
pop
mov
inc
cs
lcall
popf
jnp
mov
loopne
fimuls
xor
adc
js
cli
jo
cmp
loop
jo
mov
enter
ret
pop
xor
cmp
popf
aaa
mov
mov
pop
shl
js
lea
outsb
cmc
std
repnz
push
adc
cwtl
cmp
dec
sub
lds
sbb
pop
inc
jns
cmp
sub
lds
and
cmpsl
arpl
rolb
daa
and
enter
cmpsl
or
shlb
push
mov
out
sti
stc
in
adc
lea
jecxz
xor
test
fimuls
inc
add
iret
je
cmp
in
jnp
test
jo
daa
aam
mov
add
pop
jbe
addr16
jl
xor
cmc
adc
daa
fldcw
cmp
shrb
je
pushf
cmp
mov
daa
rorl
movsl
mov
fildll
xor
mov
dec
cmp
loopne
imul
pusha
cld
call
jmp
call
testb
outsl
cwtl
repnz
out
and
fisubl
out
jns
or
push
aam
xor
into
mulb
inc
inc
loop
pop
in
test
mov
xor
lret
inc
mov
cmp
sti
enter
aas
je
or
aaa
lahf
jge
ds
int
jne
add
and
pop
sub
dec
jle
movsl
and
or
pusha
xor
mov
or
pop
nop
bound
out
pop
jb
cmp
lcall
lcall
push
sub
mov
movsl
jbe
lods
jmp
adc
sbb
int3
jo
add
sbb
mov
dec
inc
lods
cld
incl
xlat
sub
adc
out
inc
scas
test
shll
ret
sbb
xchg
rolb
mov
xchg
imul
int
and
icebp
popa
or
icebp
push
inc
pushf
mov
jae
cli
fnstsw
jno
push
or
je
popa
push
aam
leave
xor
leave
mov
out
cmc
mov
jmp
push
movsl
jmp
inc
push
shl
out
push
and
sub
shlb
andl
jno
cmp
ja
xor
outsb
and
pop
lea
mov
mov
xchg
scas
iret
inc
lcall
and
lods
in
inc
movsl
mov
sarb
mov
and
adc
les
ja
jg
sbb
mov
mov
cmp
dec
lods
pop
out
dec
sar
mov
push
xchg
mov
xchg
adc
adc
push
arpl
lret
daa
subb
xor
iret
mov
lods
cmp
xor
lods
bound
and
in
sub
repz
push
mov
xorb
pop
cmp
mov
pop
push
pop
lds
cli
ja
js
adc
jae
jecxz
cmp
jnp
insl
xchg
mov
vpcmpeqw
call
mov
popa
jecxz
mov
sti
and
lret
push
jle
out
sahf
cli
sbb
bound
pop
add
mov
cli
sbb
fadd
or
add
jmp
xor
insb
xchg
cmp
push
in
out
ds
loop
imul
aaa
out
push
cmpsb
cmc
lods
test
cmp
mov
pop
add
push
scas
mov
sbb
push
adcb
jg
adc
in
cmpsb
mov
push
das
pop
sahf
testb
inc
sub
aad
inc
jbe
pop
adc
in
cmpsb
sub
cld
fidivl
movsb
sbb
dec
mov
pushl
inc
ds
cmp
inc
hlt
push
leave
mov
ds
iret
test
push
push
mov
fs
jp
jae,pn
xchg
mov
lret
and
mov
test
je
shll
repnz
popa
sbb
sub
addl
jae
pushf
push
xor
nop
loopne
and
sbb
or
pop
lock
jmp
mov
outsb
sub
out
cmp
enter
xor
pop
mov
lahf
aas
popf
xchg
push
sub
outsb
ljmp
mov
incb
idiv
xor
pop
stos
push
xor
je
imul
ja
pminub
adc
repz
insb
cltd
inc
adc
inc
loopne
pop
popf
mov
xor
pop
adc
and
pop
std
movsl
adc
lret
out
sbb
jne
hlt
iret
out
mov
inc
fwait
sub
inc
xchg
mov
and
cmp
lret
divb
rclb
aad
pop
cmp
lods
rolb
outsb
sub
mov
out
es
shlb
jg
cltd
lahf
ret
sbb
out
or
mov
stos
adc
cmp
sbb
in
mov
mov
out
sbb
fistpl
jb
pop
cmp
inc
mov
test
pop
ror
jmp
fwait
jne
lret
imul
and
out
adc
lds
enter
faddl
outsb
scas
out
xlat
mov
call
push
and
push
inc
popf
notb
std
mov
mov
pop
int
addl
xchg
shll
cmp
arpl
fdivrl
xor
cmc
pop
xor
loopne
sbb
dec
jecxz
das
and
hlt
sbb
and
inc
pop
xchg
and
push
in
cwtl
mov
int3
aaa
stos
sar
out
inc
add
cld
push
loop
pop
loopne
stc
mov
nop
mov
outsb
dec
iret
hlt
push
ss
in
inc
sub
mov
testl
mov
loop
sub
mov
hlt
add
and
test
call
mov
mov
in
fcomp
aaa
sbb
test
movsb
sbb
jne
stos
movsb
inc
bswap
jnp
sbb
roll
faddl
inc
pop
incl
xchg
and
sti
jae
add
rorl
push
cmp
mov
insb
inc
sbb
daa
dec
jg
js
sti
jnp
popf
xor
sbb
pop
andl
dec
push
add
imul
shlb
stos
outsb
fsts
int3
pop
mov
and
in
enter
movsl
add
cmp
jle
cmpsl
mov
sub
adc
push
in
pop
sbb
rorl
mov
pop
and
jmp
push
cltd
add
dec
in
imul
das
lret
lcall
push
cld
xchg
xor
inc
adc
pop
mov
xor
repnz
mov
inc
fdivrs
sub
inc
inc
les
xchg
fnsave
dec
cmp
jmp
push
lea
std
mov
jns
xor
cmp
xlat
lret
lods
sti
add
xor
jb
jne
movsb
mov
pop
sbb
repnz
ret
mov
imul
sub
insb
inc
pop
pop
inc
add
clc
cld
inc
cmp
cli
and
cs
pop
jmp
dec
inc
adc
fistpl
in
scas
adc
xor
stc
sbb
in
and
jae
and
das
cwtl
fisttpl
test
fisttps
push
jbe
push
push
lahf
rcl
cld
or
mov
and
xchg
sbb
aaa
es
scas
jge
mov
push
push
outsb
push
inc
sarl
enter
xchg
pusha
subb
insb
pop
inc
fsubrs
int
push
fdivl
lds
pop
jmp
std
inc
mov
lret
js
test
jae
popa
js
gs
pop
fiaddl
mov
and
mov
pop
sub
adc
mov
in
jl
insb
adc
push
stc
jns
sbb
outsl
mov
das
mov
icebp
pop
mov
iret
sbb
sbb
dec
mov
add
clc
fwait
cli
cs
xor
shl
cmc
loopne
cmp
jae
arpl
shlb
aaa
scas
cmp
or
push
cmp
dec
divb
or
jno
gs
inc
push
shl
cs
jecxz
and
mov
dec
xor
rcr
push
and
fistpll
xor
xchg
xchg
mov
or
mov
out
in
imul
mov
xchg
dec
enter
cmc
or
jmp
shrl
nop
ret
cmp
pop
stos
push
push
dec
pop
or
mov
dec
push
adc
je
pop
scas
jns
cmp
xor
sub
test
decl
fimuls
sbb
pusha
mov
ror
and
xlat
outsl
add
sti
aaa
bound
cmp
test
cli
inc
and
jne
loopne
fucomip
aad
sbb
pop
negb
loope
insb
jge
bound
adc
out
lahf
push
cltd
mov
mov
arpl
imul
adc
mov
xchg
movsl
loop
xor
cmp
pop
int
test
sahf
pushf
pop
mov
inc
pop
cmp
daa
jno
pop
je
push
mov
dec
xchg
in
pop
dec
fxch
and
cmpl
dec
insl
mov
inc
push
and
lret
pop
push
jnp
sbb
das
adc
sbb
adc
scas
loope
pop
pop
filds
aas
jno
faddl
jecxz
inc
xchg
movsb
popf
pusha
sub
leave
and
andb
adc
inc
xchg
lret
xchg
push
adc
jbe
stc
adc
cmc
imull
hlt
mov
xlat
scas
in
out
inc
hlt
scas
test
mov
and
add
xchg
out
push
sahf
jns
jbe
push
adc
and
add
into
mov
lret
hlt
sbb
xchg
imul
xchg
xchg
subb
in
adcl
or
push
push
mov
jg
dec
dec
xchg
mov
data16
sahf
pushf
std
aam
fsubs
mov
pop
ret
lea
lret
sbb
add
movsb
test
sbb
adc
mov
arpl
fisubrs
lahf
cmp
mov
push
iret
pop
sub
sub
arpl
adc
push
jbe
loop
adc
jecxz
and
test
hlt
xchg
adc
dec
xor
pop
dec
mov
adcl
cmp
movsb
out
and
xorl
add
scas
test
push
jmp
push
pop
test
pop
mov
mov
sbb
divb
outsl
mov
push
and
ljmp
xor
xor
xchg
jmp
push
add
xor
inc
aas
notb
lahf
icebp
mov
fimuls
cmpsl
pop
mov
dec
es
lods
stos
or
shl
out
xchg
mov
call
outsb
mov
fisubrl
test
stc
adc
call
mov
pop
arpl
test
aam
lret
push
daa
imul
sbb
jbe
or
test
sub
loopne
icebp
imul
xchg
lret
std
pop
sbb
sbb
push
popa
lret
add
sub
aad
fstpt
inc
mov
je
lock
mov
add
or
mov
and
sbb
nop
or
jae
inc
fcmovnb
loopne
in
fstps
xchg
scas
and
mov
push
jnp
gs
fsts
in
or
mov
dec
push
xor
dec
sbb
lahf
pop
push
mov
in
dec
mov
mov
adc
iret
fisubs
inc
add
ss
out
or
xlat
int
xor
gs
rorw
inc
xchg
mov
pop
mov
xor
mov
add
fdivrl
fwait
xchg
jbe
push
movsl
test
or
into
lods
ds
mov
outsb
mov
lret
loop
or
push
sub
jo
jae
push
outsb
xlat
xor
lea
test
gs
xchg
cltd
cltd
xchg
pop
push
xchg
cwtl
cmp
sbb
mov
or
xor
gs
shl
bound
fwait
lods
out
xor
inc
hlt
les
ja
js
xchg
xor
std
mov
mov
cltd
sarb
sbb
cmc
scas
out
test
sub
test
jge
add
jecxz
push
lret
push
add
imul
or
mov
in
push
add
test
push
out
mov
mov
dec
shl
outsb
xor
adc
lods
cli
inc
dec
and
popf
test
push
lds
std
push
mov
pop
pop
outsb
pop
jne
xchg
mov
pop
xor
add
or
cltd
xchg
xchg
or
and
jns
xchg
push
sbb
push
push
sbb
loopne
or
push
not
mov
sti
lcall
inc
pop
movl
in
xchg
xor
add
push
into
fwait
je
loop
inc
pusha
inc
adc
int
test
jge
add
push
mov
cmp
cmpsl
mov
or
add
mov
mov
pop
arpl
mov
push
jae
pusha
mov
out
push
popf
add
mov
mov
in
dec
insl
dec
cmp
and
js
call
mov
mov
cmp
inc
or
cwtl
cmp
xor
sbb
cmc
lahf
imul
imul
into
add
dec
pop
cmp
xor
lods
pop
mov
enter
shrl
push
jno
xchg
or
push
sub
sub
mov
jmp
sub
adc
outsl
rcll
mov
pop
mov
jl
mov
fnstcw
adc
or
outsb
mov
aaa
les
call
data16
cld
popf
insb
or
sahf
popa
lcall
stos
mov
rcl
inc
adc
std
popa
adc
ret
ja
jae
adc
gs
stos
pop
test
pop
bswap
js
out
mov
cmp
int3
cltd
xlat
dec
dec
mov
leave
push
aam
and
push
pop
jmp
lods
scas
sbb
gs
jns
cwtl
or
cmp
dec
scas
sub
dec
ficoms
jo
xor
sarb
repz
mov
push
test
out
std
fisttps
imul
adc
ret
sbb
push
cmp
mov
cwtl
sbbl
inc
sbbb
mul
es
jp
xchg
arpl
fildll
enter
push
pop
mov
pop
jp
stos
pusha
lret
and
std
subb
mov
imul
imul
int3
jno
movsb
adc
das
mov
push
cmp
loope
cmp
and
in
lret
movsb
or
add
and
cli
add
decl
mov
push
test
movsb
xchg
pushf
loop
mov
xor
out
rcrb
fmulp
dec
xchg
loop
sub
jns
test
cli
jo
jmp
adc
mov
and
lret
mov
fadds
lds
push
or
or
scas
add
fwait
xchg
pop
loopne
mov
scas
sub
jl
lods
pop
loop
frstor
std
pushf
cmpsb
dec
and
add
iret
ss
push
dec
stos
mov
xlat
push
pop
xlat
popf
es
gs
mov
adc
push
add
addb
insb
stos
stc
fnstcw
dec
fdivl
xchg
test
mov
loop
fwait
enter
ljmp
mov
jmp
pushf
cmpsb
idivl
add
lea
sub
add
adcb
lods
pop
push
mov
in
dec
push
arpl
fiadds
ss
mov
push
repz
je
gs
cltd
fbstp
sti
test
and
inc
mov
lds
aas
addl
cmc
inc
xor
iret
mov
sub
test
loope
xchg
test
shll
lock
mov
out
call
ret
loop
xor
adc
jecxz
add
mov
xor
push
not
sahf
or
out
push
daa
mov
add
out
mov
aas
call
imul
jle
mov
sbb
stc
cmp
fs
inc
call
mov
pop
movsl
out
pop
call
jmp
inc
cltd
sbb
test
out
fld
jge
orb
add
mov
lcall
cmpsl
sub
lea
or
lret
mov
bound
sbb
sti
mov
lea
or
test
jecxz
daa
mov
into
loope
jns
addr16
in
add
fisttps
xor
js
lcall
or
outsl
lret
xchg
cld
dec
adc
orl
stos
dec
fisttpl
inc
jns
jge
lret
popf
stos
jb
mov
add
add
dec
cmp
mov
jo
or
push
stos
xchg
imul
pop
sub
add
jl
loop
test
fdivrp
pop
and
push
rcrl
js
fidivs
mov
repz
add
jge
sti
loope
or
mov
sub
jno
repz
jge
nop
inc
ljmp
mov
roll
adc
cmp
mov
arpl
jp
xor
pop
jns
aam
jmp
cltd
adc
movsb
outsb
cmp
lds
fs
stos
lret
sbb
int3
jg
cmp
or
push
daa
aas
subl
xor
xchg
jle
sbb
inc
mov
mov
scas
jecxz
cmp
jno
add
xchg
mov
jcxz
dec
push
mov
pop
ficompl
sbb
mulb
and
fsubl
outsl
sbb
dec
enter
int3
repz
jge
mov
push
xchg
js
cld
mov
in
jbe
mov
adc
dec
pop
scas
inc
sub
add
xchg
les
dec
cmc
inc
mov
cld
popf
out
sub
and
mov
jle
sub
inc
enter
xchg
sub
jo
subl
shrb
mov
enter
push
stos
mov
pushw
clc
mov
cmp
add
test
dec
adc
int3
das
jnp
lret
xchg
insb
nop
sub
inc
xorl
sub
ret
data16
pop
in
mov
cmp
mov
dec
push
rcr
cmpsb
leave
shll
mov
add
fs
inc
inc
xchg
out
ja
inc
jg
loopne
dec
int3
insb
xor
push
jp
dec
test
hlt
push
repnz
lea
outsl
arpl
push
and
dec
aad
add
fcmovbe
adc
inc
pop
mulb
sbbb
inc
sbb
and
int3
jbe
xchg
iret
lahf
xchg
pop
sbb
inc
out
fimull
mov
orl
fs
lock
aaa
mov
fs
std
fldenv
repz
adc
mov
push
or
and
sahf
inc
loope
push
jb
sub
add
test
push
cltd
movsl
pop
loopne
lcall
ljmp
sbb
data16
push
movsb
in
lret
jle
ret
sub
sub
icebp
aaa
inc
adc
dec
push
jge
pushf
push
addb
loop
mov
adc
gs
testl
fnsave
sti
inc
add
sbb
js
pop
stos
push
xor
js
lds
cmc
loopne
jp
arpl
les
into
pop
test
mov
dec
pop
sub
sbb
arpl
inc
cmp
fstps
test
xor
fidivrl
push
and
es
je
add
aaa
out
int3
sti
int3
push
jno
mov
cmp
sbb
lea
cmp
mov
or
or
data16
or
inc
lcall
into
dec
cwtl
push
arpl
mov
mov
lods
sbb
lods
fiaddl
in
les
es
loop
xchg
dec
jne
xor
or
insb
sti
add
test
movsl
push
cli
mov
jae
jmp
jg
hlt
das
mov
sti
addr16
dec
inc
sbb
ret
sub
filds
push
stc
or
xchg
lods
loope
packssdw
pop
shll
or
xchg
push
and
sub
les
add
dec
popf
add
mov
ret
mov
sbb
mov
in
test
or
or
cs
lcall
push
sahf
pop
aaa
insb
lret
mov
imul
iret
push
imul
in
nop
rclb
fimuls
push
xchg
sahf
mov
test
lcall
leave
mov
xor
mov
cmp
icebp
adc
push
popf
cmp
ds
dec
xchg
out
jbe
mov
fidivl
dec
fnclex
pop
and
mov
andl
aas
pop
icebp
mov
pop
jno
pop
push
push
loope
iret
hlt
imul
int3
mov
ret
add
pop
jge
lcall
and
lock
sti
push
jmp
jae
popl
and
shrb
adc
mov
nop
xchg
js
xchg
scas
or
push
dec
popf
mov
sbb
jno
addl
fists
mov
sbb
outsb
test
mov
test
mov
lret
push
mov
mov
mov
cli
push
cvtps2pi
pop
sub
lret
mov
and
xchg
cs
filds
test
int3
std
mov
lahf
adcb
mov
push
xchg
gs
mov
filds
into
fs
popf
dec
mov
mov
insb
xchg
into
dec
mov
mov
lcall
xchg
scas
mov
mov
sub
lret
and
shl
jnp
fst
jo
jnp
fisubrs
js
pop
aad
repnz
stos
in
jo
jmp
sub
or
or
scas
pop
adc
and
add
xchg
mov
jne
faddl
or
into
pop
sti
xchg
daa
mov
in
mov
stos
int
pop
adc
xor
stos
add
cmp
sub
movq
jo
loopne
fstpl
hlt
pop
or
outsl
test
imul
lret
movsb
lcall
push
jle
loop
pop
scas
pusha
mov
mov
xor
sbb
clc
lock
mov
call
fldt
jp
jb
lret
inc
repz
mov
and
popa
in
popa
call
test
mov
mov
les
or
sarl
js
mov
adc
jl
je
repnz
cli
mov
inc
movsl
jle
xchg
andl
cmp
hlt
ret
mov
sub
dec
mov
in
pop
cwtl
mov
es
mov
pop
mov
sub
and
divb
insb
imul
sarb
scas
jp
decl
mov
sar
aaa
xor
sub
cwtl
call
inc
inc
xor
mov
lods
insl
ljmp
icebp
mov
add
xor
push
jmp
push
test
pusha
fcmove
xor
mov
jbe
ljmp
in
pop
imull
cmp
cmp
mov
adc
testb
sar
sbb
in
lock
sub
xlat
pop
push
add
mov
inc
orb
popf
push
cli
fstpt
fisttpll
jns
add
js
ljmp
repnz
or
lahf
mov
pop
fiadds
xor
dec
xor
cld
lcall
jno
ds
adc
sub
sub
out
cmp
popf
fbld
jo
das
or
jmp
test
dec
sub
ret
push
out
es
pusha
mov
insl
adcb
add
filds
push
mov
fwait
std
mov
or
pop
cltd
lds
jae
lods
pop
int3
and
push
jbe
shrl
xchg
add
clc
push
mov
xchg
lret
cld
in
add
outsb
or
sub
rcrb
mov
xor
leave
or
subb
push
jmp
xlat
and
sar
xor
jns
and
lea
mov
sahf
inc
sbbl
into
and
push
jae
mov
push
rorb
add
mov
add
inc
sbb
iret
and
gs
shl
xor
push
fisubrl
call
outsl
or
mov
or
mov
inc
call
outsl
mov
gs
stos
cli
scas
incb
xor
icebp
loopne
jmp
mov
dec
out
fisttpl
test
mov
iret
adc
lret
movsb
sbb
insl
ljmp
fcoms
movsb
repnz
test
out
stc
cmp
outsb
hlt
daa
add
push
sbb
mov
mov
add
inc
push
push
push
xor
movl
jg
and
xor
jecxz
or
mov
add
popf
int
negl
jmp
imul
sbb
js
stc
adc
mov
xchg
xor
inc
jb
and
sbb
dec
cli
stc
xor
push
test
sbb
mov
cmp
lods
adc
cmpl
outsl
fcoms
jb
and
int
inc
rcll
shr
pusha
sub
ffree
xchg
cmp
out
pop
sbb
add
dec
jae
mov
mov
xchg
push
movsb
stc
adc
in
mov
jo
push
insb
or
fwait
rep
jmp
icebp
mov
movsb
mov
bound
dec
std
mov
insl
popa
sbb
jnp
ret
repz
adc
fldenv
popf
xchg
inc
adcb
sbb
add
dec
ljmp
inc
clc
push
push
pop
movsl
lea
dec
adc
push
sub
dec
jo
add
clc
mov
call
inc
hlt
or
dec
mov
jno
adc
inc
mov
sub
sub
dec
xor
mov
xchg
ja
adc
pop
gs
xor
mov
pop
xchg
jmp
stos
xchg
hlt
push
push
les
push
test
cli
jmp
sub
push
lcall
ficomps
fcompl
xchg
sbb
push
inc
cmp
jmp
loope
jg
xor
cmpsl
mov
cltd
nop
add
sbb
data16
pop
mov
jmp
and
aad
mov
scas
es
jmp
sarl
ret
insb
mov
or
or
push
lods
dec
mov
mov
inc
loop
cmpsl
jo
movsb
mov
xchg
mov
pop
les
pop
mov
inc
cwtl
cld
fs
dec
dec
jp
shrl
inc
insb
loopne
inc
mov
mov
out
mov
sahf
jns
pop
inc
jmp
cli
in
out
jle
sub
jl
cmp
stc
aas
mov
clc
lock
cwtl
mov
ja
nop
jnp
js
inc
xchg
pop
add
loopne
sbb
es
mov
xor
mov
sbb
inc
sbb
mov
jbe
out
or
xor
or
mov
aad
sbb
cmpsl
scas
mov
or
fsubrs
jecxz
mov
ds
or
cmc
imul
jnp
aaa
cmp
pop
and
stos
adc
cmp
xchg
pop
leave
dec
mov
je
stos
xor
sub
test
cmpsl
ljmp
and
iret
dec
mov
inc
cmp
addr16
sub
in
outsl
lahf
push
dec
inc
dec
push
lret
inc
cwtl
js
repz
shlb
stos
jns
pop
push
push
fidivrs
push
dec
in
mov
or
aaa
lods
cvtps2pd
mov
sub
dec
lds
imul
jo
nop
daa
and
cltd
jmp
lahf
cmp
and
jne
scas
fwait
cmp
int
sbb
movsl
mov
dec
filds
in
lahf
inc
andb
mov
sbb
add
push
test
cmpsb
aaa
mov
adc
push
sbb
mov
jae
sbb
adc
push
sbbl
xchg
dec
add
or
xchg
pushf
xor
in
pusha
push
clc
sbb
fstps
std
out
pop
nop
aam
sub
push
add
shlb
in
and
cmpsl
sbb
frstor
and
cmp
pop
cmc
lret
mov
pusha
arpl
shll
inc
movb
testb
cmp
jl
decb
scas
and
aam
xor
hlt
lret
jmp
pop
mov
leave
std
shlb
sbb
mov
push
dec
aam
add
dec
mov
sahf
lods
jne
daa
mov
mov
cmc
loope
test
jmp
cmp
aad
ds
iret
test
dec
xlat
cmp
ret
ret
fnstsw
cli
push
and
popa
cmp
notl
sbb
or
adc
push
ja
push
dec
and
das
ss
xchg
xor
loopne
mov
and
fidivrs
pushf
jae
movsb
insb
cmp
lods
cmp
gs
mov
mov
sahf
sub
jmp
lock
cmp
mov
scas
fistps
dec
out
mov
jnp
xor
insb
pop
es
mov
mov
ret
mov
mov
in
and
and
mov
xchg
adc
loope
ret
cli
xor
stos
jge
or
jge
cmp
jmp
fldt
jl
mov
mov
popa
jns
loope
aas
xchg
mov
sbb
add
in
mov
sub
iret
in
xchg
in
sahf
test
mov
std
out
mov
xlat
jg
mov
dec
push
inc
xor
fisubl
lods
push
inc
repnz
xchg
loop
cmp
sahf
sbb
push
xor
lock
dec
sti
lea
loope
push
or
pop
push
js
push
mov
call
add
in
out
sub
bound
push
daa
sub
xchg
jg
rclb
push
aaa
dec
adcl
jae
fstpt
imul
nop
lods
popf
add
fdivs
mov
dec
xchg
mov
jns
insl
pop
xor
dec
out
movsb
lock
add
sub
mov
or
sub
sbb
xchg
stc
fcoms
sbb
sub
cmp
mov
cmp
stc
mov
inc
into
shrd
popf
call
test
cltd
add
mov
enter
mov
cmp
adc
clc
aas
mov
sbb
pop
cld
mov
add
dec
sbb
dec
mov
pop
pop
add
push
fildl
cmpsl
pop
push
out
les
mov
mov
dec
lods
xchg
popa
cmp
pop
jmp
enter
mov
shll
xchg
andl
test
popf
mov
aam
xchg
data16
ss
dec
add
cmp
jmp
test
jmp
dec
xchg
jge
iret
arpl
add
jbe
insb
xlat
addr16
adc
jl
cmpsl
dec
es
adc
and
sub
lahf
shll
mov
push
mov
out
xchg
fimuls
sub
jge
lods
shrb
xor
out
xchg
rol
in
cmp
ljmp
aad
jp
lds
pusha
xchg
sub
outsl
jp
cmp
loop
cmp
loope
mov
mov
rol
dec
aam
ljmp
pop
insl
jnp
sub
clc
push
jae
xchg
pop
gs
shrb
ljmp
adc
push
and
jl
aad
xor
sar
pop
clc
mulb
in
outsb
inc
push
int
jns
sbb
or
xchg
xchg
dec
arpl
hlt
ljmp
pop
mov
cmp
inc
nop
sti
dec
inc
test
out
pop
ja
int
loop
adc
mov
and
faddp
mov
rcr
int3
or
test
push
bound
outsl
inc
mov
add
xor
out
in
push
pop
mov
mov
popa
mov
fildl
mov
mov
rcll
jp
sbb
push
pop
or
pushf
scas
inc
cli
mov
scas
push
test
mov
cltd
out
push
repnz
inc
outsl
mov
lods
push
aam
mov
push
pop
loope
dec
loope
xlat
cwtl
fnstcw
sub
push
and
int3
cltd
movsb
mov
mov
call
lret
push
jge
mov
movsb
mov
and
dec
inc
mov
mov
pop
push
je
stos
enter
int
fwait
jb
fcmovnu
ret
imul
pop
jle
xchg
mov
mov
inc
rorb
sbb
add
xor
out
ja
adc
pop
cmp
ret
imul
inc
pop
xor
gs
lock
lret
sbb
mov
icebp
jnp
cmpsb
fldenv
lret
adc
and
adc
mov
push
and
push
xchg
sti
cmpsl
sub
sbb
push
sbb
mov
xor
les
rcr
pop
or
xchg
jae
mov
call
dec
lahf
lcall
xchg
inc
mov
mov
dec
sub
js
hlt
sarl
bound
filds
rcrb
shrb
in
mov
inc
mov
lret
inc
aaa
imul
stc
sbbb
or
fstps
mov
mov
test
pop
sbb
xor
fidivs
mov
jnp
lods
dec
sbb
adc
inc
in
popf
cli
jb
push
cld
pop
into
repz
or
insl
xchg
int
into
lods
jl
push
insl
rorl
inc
xchg
gs
cmp
xor
fsubrl
and
movsl
mov
jne
dec
inc
mov
loope
cs
loop
stos
sbb
jo
cmp
jle
push
jae
jne
arpl
cmp
pop
push
call
mov
sub
filds
dec
rorl
dec
in
dec
lock
out
xlat
mov
hlt
fwait
insl
repnz
iret
adc
lret
mov
cmpsb
stc
inc
sub
paddsw
fnstsw
repz
sarb
aas
xchg
cmp
mov
pop
data16
pop
dec
push
sbb
mov
movsb
mov
inc
enter
jne
sub
lock
push
mov
imul
pop
test
xchg
cld
int
fstl
jmp
add
popa
test
dec
xor
adc
xchg
sub
rorb
andb
sub
pop
ljmp
sub
lds
mulb
andl
and
insw
mov
push
aam
or
leave
jno
cmp
cld
ss
mov
nop
push
int3
jbe
fwait
outsl
or
mov
ss
ret
movsb
xchg
fnstenv
push
mov
mov
or
sbb
sbb
iret
jl
mov
or
xchg
icebp
cmpsb
adc
xlat
test
cltd
gs
pop
fidivrs
and
jo
sbb
adc
or
out
cwtl
push
enter
inc
stos
pop
cmp
mov
pop
dec
push
push
popf
movsb
sbb
ja
repnz
jnp
dec
jb
cwtl
xchg
movsb
ret
push
movsl
sub
ret
inc
mov
inc
adc
cmp
inc
lods
rorb
punpckhdq
cmp
fs
stos
and
pusha
subb
and
xor
enter
inc
imul
xor
push
cmp
andb
jmp
cmp
ror
loop
sub
aas
push
add
adc
mov
adc
adc
cwtl
repnz
push
in
sbb
mov
fidivl
or
xor
cmpb
adc
and
test
mov
sbb
push
sbb
adc
pop
push
dec
push
cmp
mov
repz
push
in
std
mov
js
xor
mov
lret
mov
sbb
jae
aas
fwait
pop
push
xchg
aas
pop
add
or
out
mov
xlat
push
cmp
pushf
pop
inc
cwtl
xchg
jno
ret
loope
popf
mov
mov
cmp
push
mov
stos
push
xor
mov
stos
pop
lahf
xlat
pusha
jnp
icebp
js
fcmovbe
shll
movsl
dec
out
lea
pop
sub
frstor
lret
cmp
add
enter
insl
jecxz
adc
scas
aam
and
aam
mov
adc
cmpsb
stos
daa
repz
sub
fldl
xchg
dec
sub
mov
push
ss
pushl
pusha
xchg
push
adc
cmp
int
fnsave
sub
mov
sub
inc
in
test
or
xor
inc
in
lds
mov
subb
cmp
popa
clc
aam
xchg
fcomps
mov
cwtl
aaa
cmc
iret
mov
in
outsl
repz
jle
filds
jbe
ret
fs
dec
jecxz
clc
and
sbb
push
dec
push
scas
push
xor
insb
sbb
shrl
or
sub
std
pop
pushf
xor
imul
pop
inc
lret
les
xorb
pop
adc
dec
add
add
sbbl
cmpsb
pop
sbb
jmp
and
test
in
jne
inc
arpl
mov
mov
xchg
arpl
mov
mov
inc
jmp
stos
jno
jns
adc
loopne
fldt
into
divb
inc
xor
jne
jle
lds
scas
ds
pop
dec
xchg
sti
cli
jae
lret
or
test
pop
gs
add
jo
test
jbe
xchg
scas
dec
jo
mov
push
mov
jp
nop
xorl
mov
pop
adc
clc
fisttpl
outsl
xchg
dec
mov
or
xchg
xchg
es
out
cmc
mov
add
xchg
clc
fs
movl
std
mov
gs
out
and
xor
add
movb
fdivl
cli
push
pop
sub
add
xlat
fists
sub
mov
push
pop
divb
stos
or
test
xchg
bound
sbb
push
out
shll
test
aam
jae
enter
ss
xchg
push
jbe
mov
daa
imul
dec
inc
dec
jbe
fsts
lods
sub
test
movsl
sahf
xor
push
test
ss
pop
es
daa
jb
pop
pop
ja
mov
push
cmpsb
fidivrs
in
sarb
gs
mov
lods
sub
imul
fs
jnp
test
aas
divl
xchg
lret
push
jo
and
push
or
jns
in
outsb
dec
pop
icebp
leave
fbld
dec
pushf
popf
je
aaa
adc
rorb
mov
repz
outsl
pop
subl
lea
jecxz
stos
fnstenv
orb
jmp
push
in
in
push
cwtl
imul
xor
out
outsl
inc
inc
xchg
cltd
mov
subl
leave
jmp
add
mov
arpl
fisubrl
imul
jecxz
xchg
adc
cmp
mov
and
cmc
mov
movsb
andl
jae
push
cmp
rclb
push
or
lods
outsb
mov
and
dec
lds
pop
lcall
and
sbb
mov
jbe
jne
and
jne
sub
clc
outsl
mov
loopne
leave
push
jo
in
jl
xlat
aad
pop
addb
and
push
dec
nop
sbbl
push
mov
arpl
sub
jo
jnp
insb
jl
pop
jb
mov
test
in
pop
ljmp
mov
out
cltd
sbb
jbe
shlb
jge
mov
rolb
scas
and
push
jmp
lods
popf
cwtl
mov
bnd
pop
cmc
mov
addr16
out
sbb
mov
lret
out
xor
or
or
jns
lahf
mov
cld
hlt
xor
add
mov
pop
clc
adc
pop
lcall
push
jl
jp
and
jge
adc
insb
push
insb
mov
xchg
loopne
push
dec
mov
shrb
pop
jl
dec
sbb
dec
xchg
in
push
lcall
push
dec
mul
fisttpll
dec
ret
icebp
aaa
ret
ja
sbb
dec
cwtl
add
jmp
adc
and
cmp
sub
push
jg
fisttpl
je
cmp
fisubrl
dec
scas
pusha
adc
and
or
inc
xchg
sub
lahf
data16
inc
jae
es
push
shlb
pop
xchg
mov
rorb
cmc
jg
lahf
mov
ljmp
push
sbb
push
push
cmp
sbbb
pop
pop
mov
rorl
pop
xchg
xchg
fiaddl
adc
jno
cmpsl
leave
mov
dec
and
pop
pop
pop
std
pushf
call
jne
gs
push
lock
js
jmp
mov
xchg
fstpl
xor
fcmovnb
add
xchg
jl
jbe
pop
cli
xchg
ds
cmpsl
pop
cwtl
es
jno
mov
and
stos
cmc
push
test
in
dec
xor
xchg
enter
xchg
push
cltd
fists
in
sub
hlt
dec
and
fstpl
push
jnp
in
cmp
xchg
fadd
mov
sbb
cmp
jb
inc
adc
sbbl
ret
sbb
rolb
pushf
push
les
jo
jmp
popa
dec
insb
xchg
insl
hlt
inc
cltd
test
mov
xchg
aam
push
bound
sti
dec
xor
out
gs
stos
out
push
mov
out
lods
sub
dec
shl
cwtl
add
add
xor
roll
dec
jns
lret
and
icebp
push
push
div
aas
fwait
push
faddp
add
jne
inc
movsb
jle
rcrb
repz
jge
cmp
mov
adc
and
fstpl
mov
xchg
enter
or
push
jl
sar
mov
cmpsl
les
js
clc
ds
imul
rcll
popf
enter
adc
and
sbb
adc
mov
sbb
in
xor
in
sub
in
xchg
insl
mov
mov
adc
in
and
pusha
or
add
or
repnz
cltd
push
mov
addr16
sub
pusha
test
outsl
lret
cmpsl
arpl
inc
call
je
enter
scas
xlat
fmuls
pop
fs
fucom
sti
addr16
iret
ljmp
ja
iret
cli
cwtl
loop
cli
rol
and
dec
insl
dec
mov
sub
rcll
mov
mov
cmp
insl
sub
cmp
inc
rclb
xchg
and
jo
add
clc
cmp
mov
mov
ja
leave
dec
lcall
dec
mov
xchg
sub
mov
sbb
les
cmp
je
push
enter
sbb
rcrb
movsl
sub
pop
cmp
xchg
aam
push
jp
mov
mov
hlt
xchg
sbb
fwait
or
push
and
jno
push
pop
icebp
or
mov
das
and
or
lock
xchg
add
mov
push
in
xchg
out
cmpsl
test
out
nop/reserved
mov
pop
jle
hlt
jle
jns
inc
int3
cmp
mov
mov
out
mov
add
push
inc
hlt
cmp
icebp
cmc
popf
cltd
test
sbb
cmp
lahf
mov
lods
dec
inc
imul
ds
cmpsl
cs
add
inc
subb
or
sbb
add
pop
push
fwait
push
mov
adc
jp
sti
loop
sarl
stos
int
fnstcw
in
in
mov
xor
loopne
cmp
in
dec
mov
xor
int3
adc
push
out
pop
lcall
data16
adc
out
and
and
jb
test
pop
cmp
inc
movsl
add
jno
mov
out
ret
ucomiss
sarl
out
pop
jle
pusha
xchg
jae
imul
subb
ret
ret
jg
rcrb
stc
scas
pop
xchg
icebp
sub
flds
and
lods
in
inc
xor
xor
jae
inc
jne
inc
jnp
dec
cmpsl
js
mov
jecxz
mov
test
push
lcall
xor
mov
sbb
cli
loopne
pusha
mov
push
les
mov
lret
cwtl
xchg
call
add
imull
stos
rorl
repnz
mov
xchg
mov
es
push
cmc
mov
je
shll
fwait
loope
cld
cli
loop
sbb
pushw
lea
fistpl
push
adc
or
imul
push
mov
cmpsl
xchg
stos
movsb
aam
sub
dec
repnz
scas
push
or
xchg
mov
insl
in
dec
sub
or
int3
jns
push
lods
arpl
insl
das
sub
insl
or
shrb
pop
je
jae
scas
aam
and
jnp
loope
out
cmpsb
fs
shll
scas
push
hlt
xor
mov
mov
clc
xchg
xchg
jnp
subb
lods
arpl
or
insb
push
mov
in
movsb
hlt
jg
cmp
ret
jl
rol
call
cwtl
enter
adc
adc
add
jp
inc
mov
fs
fldl
cwtl
test
icebp
lods
icebp
jbe
mov
mov
jmp
add
push
jge
add
adc
push
call
push
or
jg
lods
inc
in
xchg
push
jne
pop
or
lock
mov
out
das
xchg
iret
jecxz
push
loopne
mov
les
mov
shrb
mov
aas
push
mov
mov
icebp
ljmp
ljmp
add
cmp
xor
cmp
aam
clc
enter
push
inc
test
add
adc
je
adc
arpl
cmp
les
add
jbe
lds
mov
fcomi
sub
icebp
or
push
mov
xchg
adc
cld
cld
call
les
pop
sub
mov
ljmp
in
jo
call
daa
push
and
lret
nop
repz
orl
out
ss
data16
outsb
xchg
cmpsb
and
jge
push
xor
inc
mov
int3
cmp
dec
shr
xchg
aas
or
jb
and
in
je
or
ret
cwtl
inc
sti
int
dec
ljmp
cmp
xlat
out
jo
scas
mov
xlat
inc
mov
xor
test
mov
or
dec
cltd
sti
mov
imul
fsubrs
cltd
insb
jp
mov
lods
adc
subl
imul
daa
push
cmp
das
fucomp
in
lret
add
je
mov
pop
push
adc
rcll
iret
ljmp
mov
ds
dec
jecxz
inc
or
sub
mov
cmpsb
pop
lret
jnp
cmp
popa
sbb
cltd
rcll
push
int3
mov
test
jle
mov
sbb
mov
sbb
fimull
fdivrs
test
jbe
fistpll
push
jae
mov
inc
jb
xchg
imul
int
push
test
imul
jno
adc
mov
push
shr
xchg
mov
fmul
sbb
fmuls
jecxz
sbb
pushf
pushf
and
ds
and
cmpsl
inc
mov
or
repz
in
cld
sbb
pop
cmpsl
cmp
iret
addb
jge
cmp
jmp
cld
cs
mov
es
sbb
nop
arpl
add
fcomi
jns
add
in
sub
mov
mov
jmp
mov
hlt
jbe
lods
sub
pop
sbb
mov
xor
cmp
sti
sbb
test
call
fimull
and
add
mov
stos
push
pop
push
imul
mov
mov
dec
push
int3
push
repz
aad
repnz
mov
sbb
cld
cmp
push
dec
mov
sbb
push
nop
fdiv
pushf
imul
add
fldl
push
adc
int3
dec
lahf
call
sbb
mov
clc
pop
mov
push
enter
stos
push
pop
push
out
jle
sub
fsubs
leave
cmp
ret
mov
fucomip
mull
ror
pusha
push
cmp
sbb
dec
bnd
cli
pop
jnp
lahf
out
pop
test
dec
cmp
inc
dec
out
sbb
inc
cmpsl
push
stos
or
xchg
sub
rcrl
out
insl
sub
or
or
xchg
push
fdivrs
test
sub
xor
fstl
cmpsl
mov
call
out
pop
xchg
mov
fidivrs
movsb
or
jmp
aaa
imull
adc
adc
mov
inc
adc
push
int
in
je
arpl
insl
and
call
inc
sub
adc
push
adc
aad
adc
fs
lock
adc
aaa
mov
frndint
lcall
mov
and
ds
stos
shll
test
pop
sbb
movsl
test
call
aam
xor
fs
dec
ljmp
dec
xor
shrl
test
fiadds
aas
dec
sarl
push
sbb
jo
mov
sub
sbb
popa
sub
cmp
xchg
cmp
cmc
or
xor
ffreep
sbb
ret
aam
jp
and
xchg
mov
jb
push
dec
into
pop
negl
sbb
sub
scas
out
mov
pop
lds
or
cmpsb
ljmp
test
icebp
loop
dec
mov
push
xlat
sub
negb
adc
sbb
xchg
jae
in
mov
sbb
imul
rcrl
stos
mov
in
out
jl
hlt
shl
mov
jns
fadd
dec
out
mov
out
and
into
mov
cmp
or
sub
mov
or
dec
dec
or
scas
cld
xchg
in
jae
inc
out
mov
mov
icebp
mov
leave
leave
test
cld
int
or
xchg
jg
push
pop
out
add
add
out
inc
negl
jmp
shl
popf
dec
dec
mov
cs
ficoml
mov
pop
les
ja
enter
xlat
fiaddl
xchg
int3
dec
inc
in
xchg
or
fwait
lock
loop
repz
repnz
popf
push
out
popf
sbb
xchg
push
xchg
dec
xlat
ret
cli
loop
and
cld
and
jbe
jnp
daa
call
jns
or
dec
push
mov
push
testl
aam
movsl
cli
lock
push
sub
xor
clc
mov
sub
test
jno
xor
jae
adc
jecxz
jge
data16
inc
pop
shll
push
mov
sbb
mov
sbb
std
hlt
popa
jecxz
aaa
mov
push
push
lret
mov
ret
and
xor
fs
inc
mov
jecxz
mov
movsl
mov
inc
xorb
sti
lea
sbb
shrl
fiadds
pop
stos
mov
push
rolb
sbb
repz
jge
or
inc
ja
push
pop
popf
test
inc
lock
xlat
imul
sub
repnz
jbe
push
add
dec
xchg
fiadds
ret
sub
sbb
mov
in
cltd
inc
outsl
out
fsts
sbb
mov
mov
adc
test
jbe
leave
mov
sub
bound
int3
pusha
in
cmp
loop
ja
push
jae
mov
inc
call
lods
les
adc
cli
mov
int
inc
push
inc
sbb
loope
mov
push
popa
or
stos
and
adc
add
fdivrs
push
mov
xor
inc
and
pushf
xchg
pusha
js
mov
or
mov
pushf
add
addb
rcrl
lret
es
shlb
mov
pop
and
dec
jge
and
sarl
stc
ret
cs
mov
sub
xchg
push
leave
jb
jmp
call
movsl
ret
pusha
sbb
dec
adc
and
xchg
roll
outsb
ret
pusha
fidivl
ds
hlt
push
jne
aaa
add
and
mov
pop
pop
setb
movsl
mov
xor
xchg
js
xchg
push
mov
pop
jp
sub
es
ljmp
sbb
fstl
mov
xchg
fmul
or
sub
xchg
cs
add
pop
mov
cmp
dec
aad
lods
stos
scas
icebp
rcll
sub
inc
idivl
pusha
es
lret
xor
lret
pushf
rol
loope
mov
aad
addl
std
pop
push
pop
lock
or
inc
mov
mov
orl
jg
dec
mov
jge
mov
rorl
cmpsb
push
or
xor
faddp
mull
stos
or
xor
xor
push
ficompl
adc
push
ja
jne
cmpsl
mov
push
or
mov
pop
lock
fsubrs
lahf
in
stos
xchg
push
lahf
lods
xchg
mov
xor
test
test
aad
jmp
inc
inc
push
hlt
lods
fists
rcrb
pusha
and
jp
aad
pop
fs
enter
int3
fs
fwait
lock
jge
test
push
lds
pop
xor
inc
adc
lea
cltd
aaa
jge
push
enter
fisubl
div
and
sahf
sbb
sbb
cs
jmp
movsl
push
stc
or
pop
ficoml
test
mov
or
test
and
aad
pop
shl
mov
fsts
xchg
jb
cmp
mov
inc
adc
xchg
push
push
out
adcb
dec
out
lock
testl
inc
xchg
stos
js
jo
add
jg
imul
jne
sbb
into
ljmp
mov
sub
imul
jo
outsl
jmp
idiv
out
pop
shrl
das
pop
icebp
iret
mov
test
cmp
fmul
xor
out
je
gs
stos
push
inc
fs
add
inc
dec
orb
push
mov
scas
ja
and
movsb
pop
dec
push
bsr
call
es
push
jns
lock
rcrb
fmuls
xchg
mov
cmp
popf
mov
fimuls
icebp
sbb
cmp
sti
mov
pop
inc
push
fadds
sbb
xor
and
setge
sbb
jge
lret
inc
in
lods
sub
in
push
mov
xor
imul
mov
jnp
insb
scas
lret
das
movsl
in
aam
adc
dec
dec
mov
xor
jnp
push
add
sbb
mov
test
jecxz
in
mull
mov
or
stc
outsl
fcomps
jge
imul
out
sbb
inc
or
mov
xchg
inc
pop
shrb
xchg
pop
push
lods
cmp
imul
ror
sarl
jb
mov
push
sub
jne
in
cmc
pop
repz
rol
sbb
pop
inc
cld
cs
pusha
in
xchg
xchg
jmp
pop
addr16
or
add
fists
loop
mov
icebp
xchg
mov
lahf
xchg
xorb
or
cltd
inc
jge
into
aad
mov
mov
aaa
add
daa
pop
dec
cmp
pushf
lock
push
roll
or
push
enter
xor
inc
or
rorb
mov
xchg
dec
xchg
test
cmp
fsubs
cwtl
hlt
sub
or
movsl
es
nop
xchg
inc
add
mov
jle
pop
mov
cmc
jl
mov
or
mov
mov
xchg
xchg
out
mov
imul
jmp
movsb
mov
push
and
loopne
mov
push
xchg
sahf
es
xlat
or
cmp
add
mov
xor
testb
adc
movb
xor
pop
sbb
xor
push
push
clc
and
leave
lahf
pop
push
add
in
insl
xor
shrb
lods
dec
push
movsb
add
dec
fs
movsl
add
sub
inc
or
dec
add
data16
cmp
xchg
and
xor
out
pop
pop
outsl
mov
fsubl
dec
xlat
divb
push
pop
iret
clc
rclb
mull
lahf
bound
pop
xchg
push
out
dec
test
pop
or
out
jns
xchg
mov
mov
outsl
or
mov
mov
imul
push
jne
xchg
push
dec
out
movsb
lret
test
mov
call
lea
aam
cmp
lea
inc
lahf
mov
mov
inc
cli
dec
iret
lret
add
test
out
leave
hlt
inc
lods
cmpsl
push
aam
push
shll
inc
into
pop
addr16
jge
mov
mov
xor
mov
stos
test
aad
xchg
sub
xchg
cmp
shll
mov
add
sbb
sbb
inc
dec
fdivrl
shl
out
sti
outsb
sbb
adc
dec
out
ljmp
xor
lds
cmp
pop
arpl
addr16
or
les
dec
dec
into
scas
lret
cs
mov
setle
mov
outsb
inc
insl
mov
mov
pop
enter
fiadds
js
stos
das
leave
stos
pop
pop
cmpsb
rdtsc
xchg
mov
add
dec
stos
add
mov
inc
or
xor
xchg
push
add
and
jo
rcrl
sarb
adc
push
xor
or
add
nop
iret
leave
push
lcall
push
jg
and
sahf
icebp
mov
rclb
xor
test
fildl
add
out
outsb
sbb
ret
arpl
xlat
xchg
sahf
repnz
sub
ret
test
jns
out
mov
push
test
mov
fists
xor
popa
adc
lret
mov
std
add
xchg
rolb
enter
enter
push
jmp
shrb
int
jl
cmp
rclb
movaps
ret
jb
pop
jge
and
outsb
out
call
jns
xchg
enter
fnsave
inc
lcall
mov
mov
fmul
loop
adc
mov
jmp
arpl
mov
adc
leave
jg
push
pop
shrb
fistpl
stos
jno
out
adc
cmp
sub
repnz
adcb
adc
adc
ret
leave
mov
adc
ret
push
xor
ret
stos
faddp
shl
fstps
and
inc
or
stos
outsb
mov
pop
and
add
ljmp
fwait
sub
ljmp
cmp
mov
mov
push
fwait
nop
in
cmp
js
dec
int
aas
daa
xchg
adc
mov
sbb
sbb
adc
mov
repnz
dec
pop
lock
insl
dec
pop
push
mov
cmp
jne
mov
xchg
in
inc
dec
jns
dec
fisubrl
fistpl
sub
ss
jmp
movsb
or
stos
rorl
je
pop
sbb
mov
adc
xchg
in
jno
sub
in
fs
xor
mov
dec
imul
pop
mov
inc
pop
popa
clc
xchg
cmc
movswl
out
dec
cld
ret
test
jbe
sarb
addb
mov
test
mov
xchg
xchg
push
lods
mov
mov
xor
bound
and
out
lahf
rcrl
test
nop
xor
js
ret
lret
sbb
negb
stos
mov
sub
popf
aad
mov
xor
js
pushf
insb
dec
imul
pop
pusha
pop
jo
pushf
sub
dec
ljmp
push
call
jb
xor
cli
push
pop
pop
jl
jnp
loop
jno
fmulp
pop
mov
cli
adcl
icebp
cs
lahf
sbb
lahf
fstp
mov
jge
movsl
stc
push
add
xchg
mov
dec
int
xor
fwait
mov
or
mov
movsl
push
xchg
dec
add
sbb
jmp
jne
mov
cli
push
inc
in
out
or
stc
cwtl
sub
add
mov
pop
add
loopne
or
dec
imul
cmp
xchg
cld
mov
cmc
inc
add
mov
in
xchg
icebp
jge
jl
xor
lcall
sub
inc
popf
outsb
call
into
mov
imul
pusha
aam
or
mov
clc
adc
inc
js
xlat
cs
jle
xchg
dec
xor
lods
xor
sub
ds
in
add
jbe
or
outsl
mov
iret
xor
loop
shlb
sbb
mov
outsb
and
inc
and
loop
in
popa
mov
fs
loope
and
aad
nop
out
mov
sub
mov
jecxz
xchg
cwtl
mov
or
lahf
aam
dec
mov
mov
mov
lea
xor
cmp
in
jae
aaa
push
das
mov
imul
and
andl
lcall
jae
lret
xchg
popf
mov
or
jb
pop
xchg
sbb
fcompl
aam
xchg
pop
cmpsb
ret
adcl
mov
imul
dec
pop
js
loop
xchg
jb
bound
and
sub
push
push
add
pop
dec
movsb
popl
cmp
xchg
arpl
or
inc
push
popl
cmc
daa
mov
mov
lret
out
mov
adc
inc
sub
in
add
stos
icebp
xlat
xlat
nop
mov
sub
jge
js
cmp
mov
adc
fmul
call
sub
je
inc
xchg
cmp
dec
in
rep
repnz
ljmp
sar
sbbb
mov
leave
mov
add
je
inc
and
gs
in
mov
push
mov
stos
and
mov
xchg
and
and
enter
jnp
jl
aaa
or
pop
gs
dec
jo
mov
adc
push
mov
dec
pop
cmp
mov
vblendvpd
imul
arpl
or
fs
cld
adc
xor
outsl
stos
cli
push
pop
ficompl
jnp
and
sbb
sbb
loope
je
fwait
mov
pop
vmptrld
mov
nop
pop
jmp
jg
mov
push
jl
dec
imul
gs
fdivrl
aaa
cmp
sbb
push
mov
and
xchg
add
fs
lahf
inc
dec
jl
sbb
add
in
pop
jmp
mov
fadd
add
jno
sbb
cmp
and
jae
dec
int3
repz
imul
mov
mov
shll
mov
ffreep
jle
fstpt
sbb
std
das
data16
dec
sub
mov
mov
ficompl
lds
pop
pop
sbb
outsl
inc
aaa
sbb
gs
xchg
push
js
xchg
inc
xor
dec
pop
sahf
fwait
lcall
in
inc
cwtl
adc
sbb
test
test
xlat
pop
adc
xchg
jl
in
mov
sub
push
or
jne
cmpsb
mov
adc
sub
push
lret
pushf
ficoms
jg
arpl
out
xor
in
sub
dec
pop
sub
sbb
push
pop
daa
imul
pop
out
cmp
pushf
iret
imul
add
or
sar
ja
cmp
cltd
insb
add
sub
rorl
adc
in
stc
jecxz
jecxz
clc
jae
movsb
sub
lret
push
mov
ret
mov
pop
inc
mov
mov
xor
not
roll
dec
inc
push
pop
das
nopl
cld
mov
mov
mov
loope
mov
shr
movsb
mov
mov
cli
pop
push
test
les
dec
pushf
xchg
jg
movsl
mov
mov
shll
test
popl
push
jnp
adc
fwait
clc
nopl
jle
outsl
sub
or
pop
cs
addr16
fidivl
push
push
xor
xchg
xor
push
xchg
sub
cmp
push
jg
das
xchg
movsb
sbb
mov
aam
and
push
test
xchg
sub
jmp
lahf
shlb
xchg
fildll
mov
xchg
in
mov
inc
lcall
loop
ficomps
je
in
cmp
push
or
sub
adc
scas
adc
push
cmp
xor
mov
stc
sub
in
mov
mov
cmpl
cwtl
out
mov
or
adc
jecxz
jmp
loope
daa
dec
or
sar
jb
push
sbb
sahf
sbb
lea
pop
gs
jg
pushf
je
push
mov
and
mov
jl
lock
sahf
push
fwait
test
lds
sub
push
insl
xlat
std
ja
pop
push
stos
jl
movsb
shrl
add
push
in
jp
psllw
add
jb
insl
push
jl
adc
aaa
or
or
sub
xchg
mov
sbb
outsl
pop
xchg
sbb
data16
daa
pop
xorl
pop
or
lret
lds
add
cmpsl
out
loopne
push
pop
out
xlat
inc
repnz
mov
cmp
loope
jp
cmp
leave
dec
loope
xchg
daa
outsl
ljmp
cmp
popf
adc
jle
movsb
ljmp
jp
lea
mov
mov
mov
std
int
and
mov
dec
daa
xchg
dec
jno
inc
lods
xchg
daa
pop
dec
les
cmpsb
fistpl
sub
cmpsl
stos
adc
test
push
sti
aas
lock
mov
insl
loop
fadd
add
jecxz
xchg
xor
imul
jno
incl
inc
in
cmp
stc
pop
cmp
jmp
inc
pop
fadds
dec
or
push
andl
sbb
xor
and
add
jb
push
cmp
bound
sbb
pop
in
mov
cmpsl
mov
decb
ret
adc
xor
xchg
popa
das
adc
dec
cs
push
push
stc
push
xchg
faddl
lea
jp
jle
loope
lods
push
cltd
cmp
nop
movsb
sbb
xchg
std
or
add
inc
neg
pop
and
xchg
push
push
stc
cmpsl
pop
mov
mov
fidivs
xlat
aad
dec
sbb
sub
mov
xor
and
and
mov
aaa
repnz
sub
pop
outsb
add
in
test
mov
sub
add
popf
jge
dec
test
ds
mov
mov
and
ss
xchg
loopne
enter
loope
jge
data16
mov
add
ja
or
mov
xchg
push
mov
mov
roll
xor
scas
ss
add
idivb
pop
cmpsb
sbb
sti
inc
lret
cmp
pop
pop
add
dec
cmp
push
mov
mov
mov
inc
ret
pop
mov
repnz
jmp
pop
jnp
xor
sbb
ss
insb
mov
push
cs
or
pop
outsl
repnz
pop
subl
in
jge
cmpsb
sbb
xchg
stc
addr16
call
lods
mov
fmul
testl
mov
das
shrb
and
cmpsb
inc
push
jb
outsb
add
lcall
jle
mov
hlt
sub
aam
inc
imul
in
je
aad
inc
arpl
test
mov
in
fists
cmc
xchg
dec
mov
insb
mov
cmp
es
out
cmp
shll
into
push
mov
leave
fldl
cmp
or
pushf
jne
dec
sbb
int
inc
or
out
cmp
mov
mov
cld
xlat
sahf
imul
insl
jo
std
jnp
mov
inc
and
cmc
jae
jne
mov
jno
arpl
mov
adcl
lods
jmp
loop
cmc
adc
subl
jns
and
xor
xor
sbb
divl
jno
xor
jmp
pop
jo
sub
or
jno
dec
icebp
rdtsc
push
insb
fists
movsl
dec
mov
cmpsl
jno
or
leave
sbb
cmp
mov
cmp
pop
mov
fs
sub
ss
dec
imul
or
mov
mov
xchg
jae
inc
xor
push
test
dec
push
sbb
lds
fwait
add
dec
push
sbb
mov
sub
outsl
clc
xchg
dec
repnz
jo
fsubs
pop
icebp
and
negb
stc
adc
adc
adc
shrl
mov
test
dec
test
std
fs
stc
stc
fmull
and
lock
jmp
dec
gs
outsb
mov
fidivs
pop
sub
sbb
test
lret
jbe
dec
or
fstpl
push
push
rolb
pushf
xchg
xor
lret
push
lcall
rcrb
mov
cmpsl
xchg
inc
jl
adc
icebp
and
cmpsb
dec
dec
mov
sub
pop
test
push
ja
xchg
lock
popa
scas
mov
inc
lock
fnstenv
adc
addr16
adc
adcb
mov
dec
lock
mov
rorl
and
cmc
orb
fwait
out
xchg
or
sub
ret
adc
je
mov
cmp
fisubl
pop
adc
cmp
ret
roll
jno
lock
pop
dec
pop
repnz
mov
js
popf
xchg
rclb
adc
ret
aaa
sbb
pop
xchg
lods
sub
mov
in
sbb
das
inc
or
sbb
loope
test
lock
inc
rcrb
sbb
icebp
mov
pop
xchg
ret
int
rcll
xor
add
stos
pop
push
sti
cmpb
xor
xor
and
xchg
movl
aad
adc
xor
sub
std
aam
in
nop
mov
add
mov
push
outsl
adc
fdivr
shll
jp
js
mov
cmp
shl
aam
insb
mov
das
hlt
cmpsb
stos
sbb
ss
pop
mov
and
mov
jnp
sbb
lods
jl
cmp
fcmovne
repz
dec
mov
lea
cmpsl
ret
pop
inc
mov
loop
xchg
sub
xchg
sahf
je
xor
xchg
push
popa
dec
and
dec
push
jns
jne
adc
cmpsb
pop
mov
jne
pop
call
mov
lds
bound
add
pop
mov
jns
xor
sbb
pop
pop
in
arpl
in
push
inc
or
jmp
sub
jbe
cs
sbbb
rcl
subb
xchg
xlat
nop
sub
sbb
push
xchg
pop
add
fbstp
xor
mov
incb
jp
mov
dec
mov
insl
xchg
sarl
adc
adc
mov
repnz
movl
addr16
ljmp
rorb
mov
sahf
clc
jmp
test
xchg
mov
pop
adc
nop
mov
mov
testb
lock
imul
daa
test
jg
gs
jo
and
inc
fs
pop
xchg
ss
dec
aas
repnz
push
cwtl
dec
inc
xor
sbb
fsubl
shl
cwtl
add
js
shll
inc
add
dec
and
test
outsl
sbb
pop
add
loopne
insb
lret
into
je
in
lds
lahf
inc
gs
div
mov
jo
lods
or
push
add
lock
imul
nop
pop
lahf
push
pusha
test
xor
add
lds
cld
insl
fwait
jl
pop
fadds
popa
insl
xor
repnz
cmp
into
popl
movsb
std
popa
std
cmpb
loop
sub
scas
jne
push
fs
lds
pop
push
push
repnz
push
test
adc
scas
hlt
fidivrs
in
mov
fst
xorb
mov
stos
popf
jecxz
roll
das
rol
shr
mov
or
push
sbb
add
popa
mov
pop
fdivrl
push
sbb
mov
out
adc
push
lock
xchg
imul
cmp
push
fs
stc
add
mov
test
cli
pop
pop
add
sbb
pop
sbb
push
jae
jmp
int
shl
pop
scas
mov
mov
cmp
popf
cmc
mov
jp
xorb
xchg
sub
mov
out
fwait
cmp
jae
sbb
dec
imul
pop
pop
in
stos
jb
ljmp
std
rolw
add
pop
add
aas
std
mov
mov
add
inc
and
add
or
xchg
xchg
cwtl
adc
in
fisttpl
xchg
loop
cltd
lock
mov
mov
iret
pop
fbld
js
test
test
jge
mul
shrl
inc
sbb
cmp
movsl
and
enter
inc
jl
outsb
stos
out
sbb
xchg
dec
repz
int3
dec
das
dec
lea
je
loope
cmp
xchg
notb
xlat
fs
pop
or
sti
ds
aad
repnz
loop
mov
push
mov
sub
scas
jae
jbe
pop
scas
dec
aas
mov
add
xor
mov
fbstp
push
jno
mov
nop
das
xor
push
scas
or
jmp
dec
outsb
nop
adc
movsb
dec
das
add
add
insb
sbb
mov
xor
cmp
or
fwait
or
xchg
xchg
jge
lds
pop
lods
pop
test
pop
xor
ret
pop
repnz
jle
mov
jp
cmp
movsl
mov
push
cmp
scas
jl
and
cld
nop
insl
pop
cmp
inc
xor
sbb
mov
sub
cld
repz
repnz
ss
pop
mov
scas
aad
int
movsb
ret
push
xor
push
mov
out
lret
dec
push
and
popa
adc
cld
lret
lret
mov
cmpsl
jb
push
in
pop
cmp
icebp
mov
push
add
testl
mov
inc
inc
hlt
mov
shll
jns
inc
cmp
cmp
and
or
aas
mov
push
jle
jge
fldcw
inc
cli
repz
rorl
ret
cs
icebp
cli
mov
and
movsb
aaa
daa
inc
mov
das
mov
mov
mov
push
cli
arpl
jecxz
fucom
int3
jno
bound
add
xchg
test
loopne
test
sub
in
pop
enter
or
movsl
jg
cmc
nop
cld
mov
xor
mov
test
out
fcmovbe
mov
or
lock
sbb
adc
movb
cltd
sub
jb
arpl
cwtl
andl
xor
xchg
out
test
push
leave
inc
addr16
or
pop
cmc
sub
cli
cmc
arpl
and
jno
testw
popa
mov
adc
or
inc
fstl
push
sub
cmp
mov
inc
pop
xor
cmpsl
iret
popf
add
stos
xchg
out
movb
sti
test
sub
sub
jmp
push
mov
insl
fcmove
lods
leave
pop
cmp
xor
sub
dec
cmpb
popf
aad
fisttps
rcll
iret
jne
daa
sbb
push
jbe
mov
jl
mov
rcl
cmp
pop
cmp
inc
cmpsl
flds
insb
cmpsl
xchg
std
mov
adc
jle
inc
jmp
cmpsb
or
test
cmp
rcll
outsl
dec
cmc
inc
enter
mov
out
sbb
pop
sub
and
push
stos
cmpsl
gs
inc
pushf
xchg
fwait
inc
mov
pop
fisubrs
into
add
pop
je
fcoms
cmp
pop
arpl
sbb
enter
mov
cmpsl
iret
cli
add
jmp
fldenv
ret
jp
rorl
mov
shll
inc
movsl
push
sub
mov
imul
scas
ss
jne
push
mov
out
add
scas
call
mov
aas
lret
maskmovq
testl
sbb
sbb
mulps
jge
sub
pop
sbb
loop
push
pusha
mov
push
ret
ret
pop
dec
das
movl
cltd
mov
or
cli
shll
push
mov
sbb
std
repz
mov
mov
inc
mov
push
fnstsw
xor
jmp
mov
enter
mov
cmp
mov
cs
mov
xor
lods
aad
movsb
mov
cmp
aad
xchg
xchg
or
add
sahf
loope
push
jns
stos
inc
je
cmp
mov
sahf
out
lods
mov
lods
mov
icebp
jbe
in
xchg
and
incl
mov
js
movsl
xor
and
outsl
mov
push
pop
popa
push
in
push
imulb
push
cmp
andb
out
adc
loope
mov
pop
loopne
popa
or
or
mov
gs
mov
scas
add
negl
test
outsb
pop
ja
xor
xchg
sti
inc
mov
cmp
sub
xchg
mov
adc
cmp
push
mov
or
cli
std
ss
and
jmp
shl
je
imul
and
cmp
pop
fistpl
push
and
jmp
fcomp
mov
adc
dec
ss
cmp
fisubs
out
lods
add
je
ret
repz
rorl
mov
xchg
test
int3
adc
js
jmp
jg
add
sub
pop
stos
inc
pop
xchg
mov
imul
fwait
gs
scas
imul
dec
imulb
sub
enter
inc
js
jb
jl
add
fwait
add
inc
jo
xlat
stos
xchg
cmp
test
in
cmp
mov
outsb
xor
jnp
push
insb
mov
xor
stos
jb
gs
pop
jg
xchg
ss
and
push
ret
adc
mov
repz
adc
adc
or
int
stos
fldl
adc
cmc
mov
test
mov
pop
rcl
test
xor
mov
fbstp
inc
pop
mov
cld
inc
sub
and
and
out
dec
cmp
shll
test
or
xor
insl
jnp
out
push
jne
insl
shrb
cmpsl
stos
iret
pop
enter
cmp
jg
add
idivb
ss
push
dec
push
movsl
mov
mov
mov
adc
fadds
icebp
inc
push
or
sbb
sarl
test
notb
mov
call
xchg
leave
lcall
cmp
aam
cmp
and
push
inc
mov
jnp
insl
stc
test
sahf
jmp
add
jo
pop
out
xchg
inc
inc
pop
fisttpll
inc
sbb
push
out
sbb
aas
clc
outsl
sahf
fmull
mov
negl
or
xchg
xor
sbb
jnp
movsb
jbe
pop
sbb
adc
pusha
out
mov
xchg
inc
shlb
jbe
adc
lods
sub
mov
cmp
inc
call
cld
add
std
fwait
mov
sbb
mov
outsb
out
cmp
pop
arpl
cltd
in
xlat
out
mov
mov
sbb
data16
movsl
lret
out
mov
icebp
gs
mov
mov
data16
mov
clc
lcall
ficompl
dec
sahf
daa
jae
insl
ret
add
cli
test
stos
scas
imul
imul
mov
bound
js
push
subb
push
movl
in
inc
cmc
adc
push
pop
hlt
cmp
dec
je
fcmovne
sti
insb
lock
scas
out
idiv
adc
popf
insb
fmull
test
add
and
xor
xchg
imul
jo
sub
imul
push
cmp
mov
sub
mov
cld
pop
sahf
shr
popa
cmp
add
sahf
popf
stos
push
test
dec
or
or
dec
ret
mov
fcomip
fsubl
push
push
adc
stos
or
hlt
daa
mov
xchg
lds
nop
lock
in
ljmp
xchg
mov
into
jae
xor
int3
cmp
mov
jno
ds
stos
sahf
cmp
or
sbb
leave
in
sub
inc
mov
movsb
sti
cwtl
lods
dec
mov
cmp
jb
mov
cmpsl
insb
and
idiv
js
xchg
or
je
hlt
sub
das
out
adc
ret
mov
insl
dec
stos
shll
iret
aam
sbb
xchg
xlat
testl
jl
mov
stos
popf
cmp
and
repnz
and
mov
pop
xor
leave
daa
push
mov
mov
or
sahf
lret
push
xchg
adc
adc
in
mov
rcrl
int
sbb
scas
arpl
push
push
lea
and
movsb
ljmp
cmovge
aas
xchg
mov
dec
lds
mov
adc
popf
mov
popf
mov
mov
ds
xor
idivl
sbb
add
bound
jg
add
out
and
mov
mov
mov
leave
sbbl
inc
mov
mov
dec
in
out
inc
mov
es
je
lret
mov
mov
out
xchg
inc
movsl
movsb
test
popa
jmp
pop
je
mov
outsl
outsb
mov
loopne
movsb
addr16
push
test
xor
mov
pushf
orl
pop
add
nop
mov
loope
sub
jns
sub
and
and
icebp
sub
test
add
xchg
or
pop
xchg
test
inc
lock
rorl
lods
lahf
rolb
rorl
sbb
cmpsb
mov
call
test
and
sbb
push
pop
in
mov
out
push
jl
ret
cld
xor
in
xchg
ss
fnstenv
aas
int3
movsbl
and
mov
cmpsb
mul
movsb
push
std
lds
push
add
mov
movsb
pusha
test
pop
outsb
push
mov
cmc
adc
aad
mov
notb
adc
cmpsb
mov
inc
sub
mov
dec
movsb
cmp
ret
imul
lea
gs
and
aas
fildl
sub
jo
push
pop
mov
cmc
mov
das
and
aad
std
cmp
xchg
sub
stos
idivl
call
into
or
cltd
std
mov
cli
lret
rorb
adc
int3
inc
nop
inc
cs
hlt
jle
mov
int
aam
rorl
cs
adc
mov
xor
test
enter
adc
je
pop
adc
xor
loop
mov
mov
fcomp
mov
jecxz
je
add
sbb
loop
lds
lret
pop
mov
cmp
lds
cmp
arpl
imul
jecxz
out
movsl
add
push
cmp
hlt
ljmp
pop
dec
ljmp
test
sbb
mov
fidivs
nop
fwait
inc
fistpll
mov
jnp
shrb
dec
shr
das
pop
js
mov
int
dec
mov
das
imulb
xchg
je
cmp
add
addl
push
lcall
insl
jge
fs
lea
cmp
aam
and
jmp
add
sbb
sub
jecxz
ss
fnstcw
out
cmp
mov
add
loop
fnstenv
lcall
lods
addr16
xchg
call
add
jo
movsb
mov
in
sub
rorl
sbb
sarb
add
add
leave
repz
xchg
sub
mov
cmp
loopne
mov
ret
test
cmpsb
repnz
lret
cmp
jg
inc
notb
out
outsb
popf
fdiv
mov
frstor
mov
jmp
adc
jo
aaa
ret
push
ja
rcrl
nop
arpl
test
cmp
int
fdivp
xchg
enter
mov
in
leave
arpl
jns,pn
or
cs
aas
xchg
mov
mov
outsl
out
leave
adc
mov
sub
xchg
mov
fldt
cltd
adc
pop
in
aad
mov
lea
jae
call
cmpsl
mov
stos
je
add
ficoml
add
icebp
out
mov
xlat
or
imul
cmpsl
xchg
cli
xchg
add
mov
mov
fstps
addr16
cmp
push
out
pop
dec
test
or
popa
sub
cmpsl
and
fwait
sbb
cmp
mov
mov
xchg
dec
push
jge
lea
fdivrs
cmpsb
cmp
adc
mov
inc
popf
rcrl
mov
stc
xchg
insl
pop
xchg
mov
shlb
mov
cmp
pop
lea
hlt
out
inc
inc
sub
stos
inc
hlt
pop
dec
outsb
je
cmp
loop
sub
aas
xchg
sahf
cmp
dec
flds
xor
data16
inc
sub
pop
push
pushf
lods
in
enter
pop
push
lds
sub
dec
xchg
adcb
loopne
rol
in
call
mov
ja
inc
lret
scas
popf
pop
mov
sbb
sub
sub
jne
rclb
adc
inc
jnp
scas
mov
cmp
dec
dec
or
ds
mov
pop
adc
adc
jmp
mov
js
push
cmp
add
negl
inc
push
mov
inc
inc
into
sbb
dec
aas
jmp
fbld
dec
ret
loop
add
aad
mov
es
test
mov
in
jne
and
inc
inc
mov
mov
xlat
mov
test
pop
mov
cmp
cmp
nop
daa
imul
fistpl
jle
xchg
int3
rorl
int3
and
andl
aad
push
or
add
loope
pop
arpl
inc
cmp
xchg
into
adc
sahf
inc
mov
and
js
ficompl
inc
pop
sbb
lahf
xchg
mov
cmp
inc
pushf
mov
push
xchg
push
js
mov
jo
cmpsb
xor
mov
adc
mov
stos
insl
mov
or
stc
gs
scas
xorl
fistps
dec
cwtl
imul
xchg
lret
and
and
xor
scas
cltd
and
xor
mov
out
cmp
jp
sub
pop
movsb
dec
push
jbe
aad
cld
sbb
out
pop
insb
mov
out
mov
xchg
mov
sbb
inc
push
jno
pop
jmp
pop
jmp
out
aam
cmp
pavgb
mov
fisubrl
mov
daa
js
xor
stos
adc
enter
loope
adc
mov
pusha
add
cmp
mov
mov
xor
add
shlb
mov
inc
add
xchg
inc
insl
cltd
dec
adc
add
xor
ror
in
xchg
pushf
and
inc
jb
push
jo
or
arpl
adc
pop
dec
lret
xchg
gs
jl
push
dec
jle
pop
lret
movsl
das
cmp
inc
inc
mov
dec
imul
add
dec
adc
fs
cmpsl
pop
mov
cmp
lods
rol
ja
inc
into
js
sahf
xchg
jo
pusha
pop
andl
mov
adc
arpl
aad
pop
xor
les
fwait
into
jbe
inc
shlb
mov
xchg
in
notb
push
jo
in
rcrl
scas
dec
sbb
sub
mul
sub
clc
jnp
mov
jns
test
test
int
incl
and
fmulp
loope
push
cmpsb
subb
rcll
imul
clc
jbe
adc
movsl
jl
sbb
sbb
inc
dec
cltd
and
nop
sbb
imul
fisubrs
mov
fistps
adc
cs
call
sub
dec
imul
mov
xor
or
inc
loope
dec
loope
lret
popa
out
or
test
mov
mov
scas
loop
pop
sti
fsub
sub
daa
cs
roll
in
jnp
popa
cmp
inc
mov
jno
pop
stos
xchg
push
mov
outsl
or
add
push
aas
nop
int3
adc
jns
cmpl
cwtl
and
repnz
xor
adc
cltd
mov
add
gs
imul
xchg
inc
pop
dec
xor
shrl
sbb
mov
sbb
cmp
jle
iret
sub
add
dec
shlb
mov
icebp
xlat
or
in
pop
in
movsl
aas
cli
pop
jb
pop
ljmp
add
into
bound
sbb
cld
sbb
push
adc
push
dec
in
test
lods
pusha
out
pop
xchg
cmp
lcall
cmp
stos
mov
js
cmp
adc
xor
outsb
dec
xchg
loopne
lea
loope
push
cltd
xor
repnz
inc
jge
pop
imulb
cmp
enter
add
and
ss
xchg
mov
xor
push
pop
aad
or
test
fcoms
nop
fwait
mov
cmp
jg
ret
out
mov
aad
adc
inc
push
cmp
cmc
cmp
leave
inc
rcrb
xor
mov
pusha
adc
inc
xchg
xchg
int3
or
inc
mov
or
push
fiadds
xor
push
mov
das
add
cmp
push
xchg
imul
fcmove
repz
xor
fdivrl
pop
sbbl
nop
je
xchg
jb
add
fistps
jecxz
xchg
dec
and
out
jnp
pop
inc
cmovge
out
jns
adc
lahf
sub
and
out
insl
mov
cmpsl
sarl
ss
xchg
sub
std
ja
out
mov
sarb
add
add
insb
stos
int
add
lret
dec
data16
in
add
mov
jge
sti
nop
pushf
cmpsl
or
movsb
das
das
pcmpeqb
mov
mov
cmp
xchg
loop
fisubs
cwtl
arpl
add
mov
or
mov
xchg
nop
cmpsb
sbb
stc
cmpl
dec
gs
sbb
mov
std
pusha
cli
mov
add
addr16
ljmp
out
jns
fdivrs
jge
pop
test
lcall
cmp
ficoms
icebp
jb
bound
xchg
pop
in
inc
sub
fbstp
cmp
dec
sti
mov
mov
adc
jb
xchg
movsb
pop
data16
leave
les
call
shr
lret
mov
sbb
mov
ret
add
cmp
inc
inc
mov
add
jmp
clc
inc
jae
ljmp
f2xm1
dec
and
dec
stos
leave
in
or
pusha
add
call
insb
push
inc
sub
cmc
sahf
fmull
js
sub
sub
enter
and
clc
cmp
and
and
fsts
add
out
outsl
jecxz
xchg
shll
sub
inc
ficomps
fistpl
mov
mov
xchg
cwtl
add
std
in
sahf
xchg
lahf
cli
jne
outsb
push
mov
or
mov
bswap
out
dec
adc
xor
in
sub
rcrb
mull
in
adc
mov
popf
cmp
jle
adc
xchg
or
mov
xchg
and
ljmp
add
push
dec
xor
popa
jmp
jp
inc
or
ss
inc
std
pop
callw
xor
ret
les
cmp
in
imul
push
scas
adc
lds
call
dec
mov
sbb
gs
jae
or
outsb
mov
movsb
xchg
rcll
fdivrs
xchg
sarl
pop
or
push
lret
jecxz
loopne
dec
or
jnp
dec
sub
imul
inc
pushf
lods
test
xor
dec
mov
adc
push
jmp
insb
or
ret
insb
outsl
inc
out
cli
fwait
mov
and
mov
scas
orb
mov
inc
mov
bound
push
jl
call
aam
das
push
cmp
flds
push
leave
cmp
add
out
fwait
pop
sub
pop
lods
lret
or
out
fstl
xchg
pop
test
dec
sub
outsb
mov
push
int
arpl
sarl
scas
push
das
adc
popa
mov
ret
xchg
bnd
addb
sub
lds
outsl
mov
dec
dec
push
stos
and
mov
push
or
jb
add
mov
xor
inc
mov
in
dec
aad
call
sahf
rcrl
mov
xorb
and
sbb
mov
cmp
lods
xchg
aaa
into
add
mov
iret
mov
pop
js
jae
pop
xlat
int
cs
push
sbb
push
popa
xor
mov
repnz
std
or
repnz
sbb
aas
insl
jecxz
inc
pop
negb
add
pop
hlt
xorl
mov
fbld
cld
in
int3
testl
cmc
add
and
pushl
sub
hlt
or
and
fisubrs
mov
xchg
mov
daa
test
mov
arpl
mov
aam
sarl
repz
scas
inc
pop
jae
add
sti
cli
or
or
pushf
mov
lea
lock
xchg
into
cmp
xorl
push
add
out
lds
loop
mov
aaa
sarb
dec
inc
xchg
sub
sbb
int3
xchg
daa
pushf
fidivs
push
pop
rcl
dec
scas
push
cmp
imul
xchg
mov
inc
cmp
sbb
int
cmpsb
stos
inc
loop
mov
cmp
add
shl
inc
dec
test
faddp
loopne,pt
sub
fwait
xor
subl
and
aam
jg
jp
mov
xlat
push
lea
test
mov
loope
pop
gs
jnp
nop
and
sbb
lret
cmc
lahf
pop
popf
fsubr
cmpb
cmc
ficomps
aad
movsb
push
sbb
mov
test
or
in
or
adc
imul
aas
jl
jnp
pop
add
fnstsw
mov
mov
cmp
std
outsb
into
loope
cs
sub
sub
movups
mov
pop
pop
in
neg
inc
push
js
adc
pop
std
test
cmp
push
cmp
mov
cmp
push
out
cwtl
jge
cmp
repnz
mov
pop
lret
and
popa
jo
ret
outsl
sahf
scas
mov
test
in
mov
cs
sbb
jp
cmp
or
mov
dec
lcall
push
xor
icebp
fistl
int
outsw
pop
cld
mov
scas
sahf
xor
test
dec
xchg
test
inc
adc
and
and
adc
enter
xchg
xchg
pop
jns
pop
add
add
xchg
loop
adc
inc
jp
inc
dec
or
and
push
inc
mov
cmpsl
in
jae
lods
enter
inc
sbbb
mov
xchg
dec
cmpsb
test
sub
inc
push
lcall
jnp
orl
and
iret
mov
pop
cmp
sbb
cmp
mov
stos
cmpsb
es
mov
movsl
push
or
jmp
std
pop
stos
lock
xchg
mov
jo
shl
dec
or
and
push
ljmp
and
inc
jl
push
or
arpl
and
add
dec
pop
jmp
inc
ret
mov
pop
and
cmpsb
add
mov
in
inc
pop
fisttpl
cmp
dec
fs
cltd
sarb
addb
inc
ds
dec
ret
or
jne
pop
xchg
sbb
add
jb
sbb
jp
daa
test
and
or
imul
sub
enter
js
push
cmp
or
inc
cmp
mov
fs
mov
sbb
xchg
ret
jne
pop
and
dec
push
pusha
flds
jbe
mov
sub
add
mov
push
dec
cmc
lods
es
mul
jl
loop
loope
mov
ljmp
mov
aas
mov
enter
dec
lea
xchg
jge
arpl
in
shrb
lcall
and
xchg
in
jns
test
add
adc
xchg
rcrl
dec
and
outsl
ficomps
enter
outsl
lcall
sub
int
mov
add
xchg
push
test
hlt
jne
jae
xchg
xchg
lods
inc
push
or
pop
inc
notl
mov
gs
fcmovnu
ret
scas
jb
or
push
xor
or
jge
mov
arpl
ret
ljmp
dec
cmpsl
sub
push
mov
cld
cwtl
xchg
inc
mov
je
push
lcall
push
mov
fsubrs
iret
fwait
stc
pop
iret
xchg
mov
in
icebp
xchg
sahf
addb
jl
inc
sbb
out
inc
and
push
sub
cmp
push
mov
pop
sbb
push
lea
mov
cmp
mov
iret
push
sub
cmpsl
stc
outsl
dec
mov
or
outsb
addl
movsl
mov
pop
xorb
cwtl
lret
mov
ret
bound
adc
lcall
jne
adc
adc
call
sbb
clc
lds
add
lea
dec
cld
imul
arpl
xor
insl
insb
cmp
ret
mov
pop
sub
mov
xchg
icebp
cltd
fisttpl
pop
mov
xor
sbb
addr16
pop
repnz
inc
xchg
dec
stos
xchg
sub
lahf
xchg
fnsave
lret
pop
mov
sub
sarb
sti
std
mov
cmpsb
jo
mov
mov
jae
gs
adc
push
out
pop
fists
outsl
jp
aam
out
je
cmpsl
out
adc
cmp
jge
mov
xor
sti
or
jno
mov
push
lret
jg
and
or
push
push
push
in
or
inc
out
inc
imul
push
sub
mov
insb
jo
mov
xor
mov
ret
adc
push
int3
dec
mov
sbb
mov
in
pop
insl
dec
jo
mov
ljmp
pop
or
jge
insb
push
daa
mov
repnz
fdiv
cltd
leave
cmpsb
daa
push
pop
or
addb
or
les
int
sbb
adc
mov
popa
repz
mov
adc
fnstsw
loope
movsb
or
data16
rolb
call
xor
cmc
inc
dec
add
addr16
movsb
xchg
xor
rcr
hlt
lahf
mov
popa
pushl
call
andb
push
inc
orb
sub
out
mov
cld
sahf
popf
dec
jge
movsl
rorl
mov
rcr
xlat
gs
pop
sahf
ja
inc
inc
gs
jecxz
jl
push
andl
cmpsb
mov
inc
or
push
hlt
fdivrl
mov
mov
cmpsl
insl
mov
mov
push
push
sbb
xlat
ficoml
orl
ss
movsl
in
push
gs
jno
dec
cltd
cmpb
push
mov
inc
stos
xor
pusha
cmpsb
inc
jge
fdivrs
adc
dec
sub
xchg
sbb
sub
repz
xchg
mov
add
adc
das
inc
dec
sti
lahf
lret
xchg
aam
popf
iret
cld
jg
lea
scas
cltd
int
loope
add
aaa
push
xchg
cld
xchg
mov
adc
frndint
rcl
insb
inc
sbb
daa
test
push
nop
rorl
jmp
stos
cmp
shl
cmp
push
and
cld
mov
mov
repnz
push
sti
dec
inc
jg
mov
or
adc
xor
lods
rolb
insb
mov
push
sar
push
loope
mov
xor
jl
outsb
test
sub
jle
and
mov
xchg
lds
sub
mov
push
fadds
lods
daa
push
xchg
inc
lea
out
sbb
test
mov
sbb
or
and
ret
hlt
inc
cmp
jbe
add
mov
lret
dec
call
xor
or
dec
mov
xchg
and
fnsave
sub
inc
jge
loopne
dec
aad
ret
mov
sbb
pop
jle
xchg
fildl
fistpl
pushw
aas
xorb
or
call
and
pop
mov
insb
and
js
pusha
add
das
daa
xorl
scas
sarb
ficomps
jb
test
push
icebp
mov
pop
mov
push
push
xchg
xchg
jae
jecxz
ret
in
pop
cs
dec
mov
cmp
pop
lds
jne
lods
inc
nop
and
mov
xor
int
cmp
fstps
cld
insb
jb
cmp
inc
xor
data16
sbb
cmp
fisttpl
cmp
push
mov
add
dec
push
pop
daa
sub
scas
les
fwait
into
lds
pop
push
jb
lock
mov
push
jg
das
push
pop
fs
out
cmc
sub
sbb
shrb
push
dec
popf
cmc
jae
xchg
jae
pop
xor
fisubrs
pop
sbb
and
and
sub
movsl
f2xm1
ja
xchg
in
addr16
pop
xchg
and
sahf
stos
js
sbb
push
add
das
daa
xor
or
lods
fsubl
sbb
xlat
int
les
xor
mov
adc
test
enter
jg
or
inc
jecxz
lods
mov
jmp
cmp
out
rolb
mov
test
mov
mov
xor
aam
sbb
cmp
aam
and
popf
sbb
in
push
add
in
in
mov
and
jmp
add
shl
adc
push
mov
xor
enter
dec
ss
pop
arpl
jp
fwait
out
stos
fs
dec
outsb
cltd
sub
fs
leave
lods
les
dec
cmp
jg
cmp
jne
insl
dec
jl
lahf
int3
mov
js
notb
xor
or
lds
mov
push
popa
enter
mov
fisttpll
push
mov
xchg
and
sbbb
dec
push
jo
push
pop
aas
mov
in
sub
call
push
sub
stos
iret
push
or
mov
das
out
in
and
out
jecxz
mov
into
mov
dec
or
cs
add
xor
out
jne
loope
push
enter
ret
repz
add
ja
rclb
ret
and
lret
frstor
cmp
lock
test
mov
pushf
dec
jl
fisubs
imul
ja
mov
lret
mov
out
movsl
adc
adc
ficomps
ljmp
mov
stos
lea
jl
ret
mov
dec
in
mov
push
fnstsw
rol
es
cmc
sub
mov
xor
adc
jno
in
xchg
rorb
mov
dec
cmc
jmp
out
jae
xchg
add
test
xchg
pop
popf
add
shr
lods
fiadds
fbstp
pop
cmp
xchg
shll
scas
mov
fimuls
sbb
sbb
cmp
pop
fdivrl
cmpsb
fs
leave
push
out
jno
movsb
test
aaa
mov
hlt
mov
stos
in
jae
mov
mov
push
enter
mov
or
movsl
rcr
jecxz
cs
and
cwtl
xor
pop
add
jns
inc
and
jo
out
dec
xor
mov
outsb
lods
test
mov
in
shl
mov
sbb
push
pop
loop
sahf
mov
loopne
dec
xchg
lods
test
lods
addr16
jno
cmpsb
jbe
push
pop
mov
cmp
movsl
push
xor
xchg
xor
push
cmp
dec
stos
scas
dec
pop
movsb
sbb
imul
stos
ror
lahf
pushf
mov
into
subb
in
sub
pushf
xchg
paddusb
jecxz
fs
imul
push
jl
mov
xor
mov
fisttpl
mov
mov
xor
aad
mov
dec
inc
jmp
jb
mov
or
movsl
es
ss
add
mov
sub
push
and
lcall
lea
cmpsb
mov
roll
inc
ficoms
push
xchg
nop
hlt
shl
rorb
push
loopne
cmp
xlat
cltd
icebp
movsl
pop
popa
jne
jae
inc
call
mov
int3
aad
mov
leave
xor
add
xchg
jecxz
fsub
xor
pop
nop
mov
mov
jo
out
sbb
andb
lock
ja
jne
pop
out
outsl
xchg
cwtl
out
std
jb,pn
xor
test
movsl
inc
cwtl
sbb
int
pop
fs
hlt
fdivr
mov
dec
mov
mov
aam
dec
repz
movsl
inc
fmuls
int3
sbb
into
std
orb
sbb
dec
sub
mov
push
shlb
pop
fldt
xlat
test
movsl
fwait
mov
jo
fxch
inc
fstpl
int3
push
lds
lahf
popf
xchg
mov
cmpsb
xchg
mov
jb
xchg
inc
push
mov
adc
pop
fmull
insb
rclb
and
cmp
mov
sub
push
push
jnp
std
stc
pop
dec
and
jne
dec
mov
rolb
lea
hlt
subl
movsl
es
sti
fidivs
inc
add
shl
out
daa
roll
cmp
dec
mov
add
inc
mov
stos
into
outsb
fsubp
or
jmp
mov
dec
dec
fmull
xlat
jg
inc
adc
xchg
jp
ljmp
test
fwait
inc
sahf
out
jnp
and
xor
lcall
andl
cmpsl
arpl
pop
cmc
test
sbb
popa
dec
ljmp
push
inc
push
adc
ja
jp
hlt
das
cltd
adc
xor
movsb
inc
in
jns
xchg
sbb
repnz
ss
out
cli
daa
aas
es
mov
fldcw
mov
xchg
lret
push
adc
out
xchg
gs
scas
test
lahf
cmp
cmc
push
jns
and
jbe
jg
sub
stos
push
mov
aam
add
xor
lds
mov
sbb
fdivrs
or
das
cmpsb
mov
pop
mov
in
cmp
xchg
adc
mov
fimuls
aas
add
ds
roll
imul
movsb
fisttpll
enter
iret
dec
mov
adc
mov
cmpsl
sub
pop
push
add
sbb
nop
mov
outsl
cmc
sbb
sub
arpl
fisubrl
rol
sub
dec
inc
ret
test
sahf
popf
pop
mov
stos
or
in
cmp
scas
pop
js
std
mov
dec
xchg
push
jecxz
mov
xchg
mov
aad
nop
aas
push
xor
dec
addb
pop
cmp
adc
mov
repnz
mov
and
insb
mov
fisttpl
lret
int3
pop
insl
or
push
shrl
inc
popf
push
add
test
mov
jle
lods
int3
adc
sub
mov
lcall
or
jb
push
sub
out
popa
mov
ss
pop
pop
int3
pop
push
inc
xchg
xor
lret
cmp
pop
push
aas
pop
into
xchg
mov
test
or
inc
push
add
jno
in
incl
mov
in
dec
pop
out
scas
aas
jo
test
or
mov
mov
es
cs
mov
cmc
push
adc
mov
dec
loopne
pop
leave
jmp
test
test
or
inc
mov
fmull
fstpl
je
fisubs
cmp
mov
popa
add
pusha
dec
cltd
push
mov
mov
scas
jg
inc
xchg
push
cmc
inc
mov
scas
fdivs
loopne
cwtl
xor
jp
and
imull
sahf
mov
jmp
fwait
mov
xchg
mov
gs
idivb
cli
cmpsl
pop
mov
adc
push
push
nop
and
mov
dec
hlt
sbb
pop
movsb
cltd
les
leave
mov
xchg
decb
lock
or
pmulhuw
enter
ret
jmp
xor
je
xchg
cmp
incl
lods
fldcw
cltd
mov
dec
xor
fidivl
xchg
mov
cmp
or
andb
stos
jl
frstor
pop
fsts
xchg
popa
jmp
psubsb
mov
or
aam
jl
push
mov
in
adc
lea
cltd
add
jns
mov
fldl
js
mov
mov
mov
into
jbe
xor
ret
sbb
cmpsl
js
pop
jge
mov
shlb
jmp
push
rorl
xor
or
enter
sub
mov
rolb
dec
add
lods
jae
je
cmc
fldt
loopne
or
fs
shlb
popa
inc
bnd
or
fmull
pop
nopl
in
movsl
ja
int
js
addr16
pop
popa
mov
jmp
jb
neg
pop
sbb
mov
xchg
or
fistps
xchg
adc
xor
lret
cmc
xor
jae
shlb
dec
aam
nopl
lods
adc
xor
sub
cmp
push
mov
xchg
xor
inc
add
int
outsl
dec
lahf
pushf
jg
mov
adc
sti
mov
sub
mov
lret
lret
add
xlat
add
adc
sahf
xchg
imul
xor
cmpsl
pop
mov
adc
mov
dec
pop
mov
or
xor
mov
xchg
sbb
sahf
push
fs
push
cmp
mull
mov
fcomip
mov
out
in
jp
xor
out
daa
pop
test
aaa
push
dec
pop
gs
ror
dec
pop
sub
shrl
hlt
mov
mov
cmp
sbb
xor
popl
add
adc
ret
scas
out
lods
imul
jmp
push
cmpsb
inc
fucomp
decb
lret
stos
ljmp
iret
jle
leave
int
push
cmp
sarb
lds
mov
or
add
pop
xor
fisttpll
rcrb
movsl
adc
jb
aam
int
enter
imul
daa
dec
call
push
push
push
mov
push
add
add
dec
out
sbb
sub
xchg
pop
xchg
cmpl
icebp
push
or
mov
je
pop
movsl
inc
xchg
loop
and
ds
xchg
arpl
insb
adc
in
jnp
fwait
dec
sahf
sbb
arpl
cmc
push
push
fs
mov
xor
mov
mov
shrb
ja
pushf
cltd
orb
xchg
fucom
xrelease
jge
imul
data16
enter
mov
aad
div
jg
dec
jl
mov
sbb
mov
inc
pop
jo
pop
xor
or
in
add
push
popa
popa
aaa
je
ljmp
aam
cmp
idivl
jecxz
fadds
into
jecxz
dec
das
mov
xorb
inc
jae
in
xchg
nop
push
sbb
repz
xlat
adc
cmp
pushf
test
jge
xor
pop
jne
push
jae
cmp
push
xor
dec
nop
mov
adc
test
jbe
mov
stos
pusha
lods
dec
push
jmp
and
sbb
dec
imulb
out
cli
stos
in
or
dec
stos
shr
and
push
pop
xchg
pushf
sbb
ret
cmpsb
cltd
lods
cmpsb
mov
add
sub
lret
icebp
add
orl
nop
outsb
mov
jnp
mov
mov
xor
push
xchg
in
jle
repz
cmp
shlb
mov
push
inc
pop
gs
repnz
mov
sbb
jbe
mov
dec
cmp
int3
insl
out
add
mov
jmp
inc
ja
sbb
push
xor
xchg
jmp
inc
lcall
inc
mov
pop
sub
bound
mov
ss
inc
int3
lods
rcrl
add
sub
aam
pop
pop
sub
addr16
xor
xchg
aas
mov
cmpsl
aaa
xor
into
dec
pop
push
and
mov
popf
sub
cmp
xchg
mov
add
outsl
inc
ljmp
pop
inc
add
cmp
ss
push
fcoms
fistpl
into
mov
imul
jmp
and
adc
mov
jecxz
mov
xchg
int
loop
lcall
loope
xchg
jns
ficompl
decl
fwait
mov
fists
out
cli
dec
pop
das
and
dec
fldenv
test
cmpsl
xchg
xchg
cmp
xor
xchg
xchg
bound
out
lret
inc
cmp
test
jno
xor
or
jns
data16
cltd
inc
push
repnz
xor
test
or
lods
frstor
cmpl
jmp
aad
sbb
fcomps
sbb
ds
mov
insb
jmp
cld
pop
mov
cmp
imul
out
pop
or
outsb
mov
fsubrl
bswap
add
mov
inc
aaa
sub
xor
adc
fstpl
cmp
jg
add
xchg
push
mov
pop
and
sub
call
addr16
sbb
mov
mov
push
cmp
mov
push
out
out
aaa
rorb
cmpsb
idivb
adc
push
cmp
cmpsl
iret
js
jmp
add
ss
call
stc
add
adc
cli
add
dec
popa
mov
rorb
popf
mov
dec
ret
sub
shl
fisubrl
pop
mov
jl
or
in
mov
lea
mov
aas
push
sbb
dec
push
scas
add
mov
pushf
xor
or
xchg
adc
popf
insl
adc
es
shlb
jno
std
or
xlat
mov
push
jecxz
xor
cwtl
sbb
xor
bound
cmp
rorb
shl
or
sbb
or
inc
jns
or
data16
test
adc
pusha
push
dec
cli
xor
jnp
add
stc
cld
dec
outsl
pop
scas
dec
push
rcl
xchg
in
jno
mov
adc
mov
call
movsb
lea
fwait
imul
or
inc
pop
das
cmpsl
inc
sub
insl
cs
lods
ds
add
xor
mov
dec
sub
sbbl
or
lcall
sti
and
ret
and
jp
bound
jbe,pn
pop
dec
test
xor
roll
and
pop
sbb
pop
pop
jae
aad
mov
dec
mov
and
cmp
mov
mov
idivl
push
pop
inc
adc
sub
xchg
stc
and
call
dec
das
pusha
mov
aas
jecxz
push
xchg
sti
insl
mov
push
test
push
pushf
dec
lahf
ret
xchg
mov
rcll
add
dec
add
call
push
fwait
adc
add
fadd
rcpps
pusha
cld
dec
jp
cmpsl
ss
fwait
push
xchg
cmc
fisttpll
and
movsl
call
ret
loope
lret
sbb
dec
mov
adc
iret
mov
add
push
pop
xor
insb
sti
bound
push
adc
mov
lea
and
xrelease
or
popa
mov
sarb
pop
adc
iret
scas
adc
subb
xor
test
mov
inc
ljmp
popa
push
fimull
jb
xorl
insl
jp
js
xchg
sub
pop
ss
dec
fs
out
adc
push
jge
roll
outsl
add
adcb
sar
sbb
adc
outsl
push
out
outsb
gs
xchg
pop
cmp
pop
ss
add
enter
adc
jmp
decb
xchg
adc
hlt
mov
test
cmp
sub
fstl
sbb
xchg
lret
sti
fcoml
adc
sbb
aad
daa
inc
pop
rcrl
loopne
ficoms
fwait
or
push
fs
lods
mov
leave
call
scas
bound
xchg
out
mov
and
jl
adc
bound
xor
and
cwtl
pop
lcall
or
mov
xchg
icebp
inc
mov
cmp
push
ljmp
sarl
daa
dec
xor
iret
addr16
mov
bound
cmp
fmuls
mov
xor
pop
fstpl
lods
sub
cmpl
ljmp
sbb
cmp
sub
adc
scas
xchg
dec
popa
fprem1
aad
fcoms
gs
xor
pop
dec
aaa
cld
and
jmp
mov
dec
loope
pop
setne
xchg
ljmp
push
jno
fildl
lcall
aam
fstl
xor
mov
lret
dec
lret
mov
decl
aaa
pop
lock
push
es
push
test
mov
xor
test
faddp
das
cltd
test
in
shlb
out
mov
gs
add
push
xchg
sub
and
xor
mov
pop
dec
negb
jl
stos
jae
sbb
leave
rorl
cmp
rolb
xchg
xchg
fadds
pop
inc
jb
out
in
adc
rolb
mov
mov
stos
lret
nop
dec
cmp
outsl
repz
inc
xchg
dec
mov
shll
loope
pop
out
mov
insb
push
and
add
roll
out
aam
test
pop
sub
enter
mov
inc
out
pop
sub
dec
mov
fsubp
xchg
inc
out
mov
add
hlt
repz
addr16
pop
in
shr
inc
scas
lcall
popf
sbb
fnstsw
lods
cwtl
outsb
mov
mov
mov
cmp
sahf
mov
xchg
sahf
push
lods
mov
jb,pn
js
ljmp
lcall
addr16
aas
test
fsts
mov
adc
scas
jns
inc
in
xorl
sbb
ljmp
pop
mov
mov
xor
popf
xor
stos
stos
fisttps
add
mov
xor
test
aad
ja,pn
std
dec
adc
xchg
sbb
sub
lods
add
push
addl
sbb
leave
in
insl
mov
scas
mov
adc
je
push
jge
imul
daa
mov
dec
jo
pop
repnz
and
sarl
add
arpl
pusha
xor
inc
push
daa
rcrb
jno
icebp
dec
shll
je
add
dec
mov
add
and
mov
dec
or
pop
push
lds
sub
pop
push
scas
pop
dec
push
add
mov
stos
fs
sub
ret
mov
into
arpl
jbe
das
sub
scas
fmuls
push
and
notl
pop
mov
push
sub
xorl
popf
neg
popf
mov
cmp
and
cltd
sbb
repnz
xor
or
repnz
shl
movsb
insb
push
int3
mov
popa
sub
pop
push
cmc
jno
adc
loope
outsl
sbb
dec
ret
fld
and
das
addl
sub
xchg
jmp
xchg
xlat
idivb
je
repnz
and
cli
sbb
sub
ds
imul
clc
call
sub
test
add
inc
addr16
lea
jne
xchg
xor
inc
inc
xchg
ret
nop
inc
and
dec
adc
push
adc
add
sar
nop
repnz
xor
sub
add
pop
cmc
pop
scas
fcoml
inc
dec
sbb
mov
hlt
lods
mov
adcl
shrl
popf
mov
push
lcall
pop
cmp
je
jmp
push
pop
leave
xchg
ljmp
jb
insl
cltd
repz
sub
rol
adc
and
hlt
cld
mov
cmp
fsts
xchg
outsb
cltd
cmp
sbb
xchg
mov
ljmp
adc
ja
mul
shrb
and
mov
cwtl
jmp
sbb
and
push
fbld
cmpsl
pop
adc
add
fwait
popa
insb
jle
in
mov
sub
cmp
mov
mov
test
fsubr
add
pop
orb
aam
xlat
fisttpll
xchg
lcall
fnsave
out
ret
jo
cmp
inc
dec
jne
and
or
xchg
xchg
sbb
cmpsb
ljmp
add
or
lcall
mov
fdivrl
or
mov
fs
lahf
mov
pop
cmp
cld
sub
daa
testb
dec
arpl
das
mov
aas
ds
jbe
and
aaa
in
inc
cli
mov
pop
repnz
insb
btc
xor
xchg
inc
and
xchg
pop
sub
cmp
jmp
lahf
das
and
aam
sbb
fmul
xchg
test
sbb
loop
add
mov
mov
movsb
xlat
aas
movsl
jle
repnz
sbb
mov
xchg
mull
push
xchg
leave
add
sti
push
sbb
push
mov
add
ret
fiaddl
int3
flds
movl
add
lahf
mov
xor
push
mov
jno
mov
movl
sub
mov
mov
sub
sahf
ja
sbb
insb
in
xor
sti
ja
inc
outsb
adc
dec
das
xchg
dec
mov
out
add
or
mov
lret
xchg
add
ss
rolb
stc
out
xor
int3
out
sub
or
inc
mov
xchg
imul
mov
iret
pusha
pop
push
sub
enter
cmp
call
rcll
pop
dec
sub
push
ss
vprotb
in
lods
inc
lds
imul
and
loope
pminub
jno
repz
leave
pop
sahf
mov
scas
cmp
mov
popf
push
jmp
dec
xor
aaa
cmp
call
jg
push
incb
cld
imul
loopne
leave
cld
loope
bound
arpl
mov
mov
out
mov
jmp
push
pop
cltd
pop
cmp
cmp
xchg
or
in
xchg
addr16
arpl
fisubs
sub
jnp
pushf
pop
jno
adc
repnz
icebp
xchg
cwtl
mov
sti
ljmp
enter
js
pop
or
adc
mov
loope
jle
jns
mov
mov
inc
jg
mov
popf
mov
std
dec
or
inc
std
sub
mov
hlt
loopne
adc
in
add
jmp
jmp
pop
repz
das
mov
sbb
dec
stc
aad
lock
mov
or
ret
cs
dec
cmp
jbe
data16
push
add
push
ds
cltd
push
insb
push
mov
sbb
sti
fmuls
xchg
push
jb
and
shlb
call
into
xchg
out
jecxz
lea
addr16
jnp
test
hlt
and
fwait
xchg
loop
ror
test
sbbb
lea
add
sub
xchg
push
push
dec
call
sub
dec
mov
hlt
fsts
mov
rolb
mov
mov
mov
test
mov
pusha
xor
fists
pop
jo
test
jp
pop
push
ret
ret
cmpl
sub
cmp
inc
sbb
stc
repnz
inc
scas
pop
dec
in
cwtl
aad
mov
xor
cwtl
xor
and
mov
xchg
dec
pop
adc
insb
pop
jo
fs
mov
repnz
push
sarl
inc
and
pavgb
inc
es
lock
pop
leave
test
rcrl
jmp
mov
push
ret
push
int3
ret
or
dec
add
pop
mov
loopne
arpl
aaa
sub
pop
jae
cmp
lcall
jne
xor
jecxz
les
inc
push
adc
cmc
mov
pop
js
mov
daa
loope
cmp
inc
jg
je
js
cwtl
aad
jmp
into
shlb
into
jne
fistl
cli
sbb
lds
sub
mov
jp
stc
pushf
mov
add
sub
shll
stos
leave
int3
mov
pop
xor
test
js
pop
jecxz
pop
jne
mov
pushf
call
sub
pusha
cli
xchg
fdivrl
cmp
addr16
clc
scas
jns
sbb
lods
mov
cmc
fwait
lods
pushf
aas
push
lahf
popa
xor
lahf
adc
xchg
inc
data16
adc
cli
mov
scas
sub
popf
mov
popf
fnstenv
pop
or
xchg
jl
or
jae
cmc
or
loop
fisttpll
les
pop
lock
dec
rol
and
jp
hlt
or
cmp
sub
push
push
fldt
xchg
mov
sub
push
pop
fldl
fs
out
add
sbb
lea
mov
cmp
mov
arpl
fnstenv
jg
call
stc
into
jae
pop
xchg
adc
add
cmp
inc
sarb
movsl
mov
fisttpl
sub
popa
mov
pop
or
push
stos
jl
out
xchg
lcall
icebp
cltd
mov
std
icebp
lcall
cmpl
stc
xchg
adc
lret
cmpsl
pop
and
pop
jb
out
jno
sub
adc
or
jg
lods
mov
jle
sbb
mov
mov
fldt
mov
das
lea
xchg
clc
cli
sub
xchg
hlt
and
add
mov
movsb
jb
loopne
adc
cltd
xor
sarl
or
movsl
sbb
mov
sub
rcll
std
fsub
sbb
pop
mov
call
fdivs
sbb
sbb
pop
xchg
idivl
andl
stos
jbe
in
addr16
scas
inc
popf
pop
add
adc
out
sub
repnz
dec
push
fisubrs
adc
in
jns
inc
xchg
cmp
add
insb
pusha
jnp
addr16
cs
repz
movsl
shll
mov
hlt
pop
mov
jg
xor
addr16
rcll
lcall
ljmp
and
inc
mull
loope
push
lahf
jecxz
jns
push
jmp
adc
adc
xor
insl
xchg
mov
je
sub
sbb
push
jae
add
sub
mov
mov
je
gs
mov
or
orl
mov
jecxz
jmp
stos
aad
push
and
out
aam
lods
adc
jg
push
arpl
scas
mov
sbb
cmpsb
jl
cltd
ss
das
leave
cmpps
jns
or
das
jl
add
xor
sbb
scas
inc
dec
dec
mov
iret
push
std
push
mov
das
or
sub
lds
outsl
mov
arpl
int3
add
punpcklbw
mov
leave
lock
mov
dec
icebp
clc
repz
push
iret
es
les
xor
push
mov
stos
scas
push
out
repnz
adc
repnz
dec
icebp
push
xchg
sti
std
filds
or
push
mov
bound
lcall
push
mov
sbb
arpl
gs
ss
add
jp
jp
mov
pop
mov
int3
enter
adc
push
fnstsw
dec
xchg
lret
adc
int
adc
xor
sbb
xchg
movl
hlt
xchg
jno
sbb
mov
in
out
int
es
stos
mov
pop
shlb
pop
inc
faddl
fs
jno
aad
mov
pop
leave
cs
enter
cmp
fsub
pop
les
push
mov
push
repnz
cwtl
sarb
mov
rcll
xor
adc
repz
xlat
out
add
xchg
addb
push
mov
es
cmpsb
sub
sbb
repnz
lahf
dec
int3
xor
addb
mov
stos
lds
pop
inc
inc
sbb
dec
fcomps
dec
adc
xor
outsl
leave
xchg
and
lock
xlat
inc
leave
fwait
dec
sub
pusha
call
push
cmpsl
add
fwait
mov
pop
stos
xchg
adc
push
or
xor
sub
rcrb
icebp
fstps
jae
sub
jle
mov
dec
icebp
into
inc
test
in
in
adc
or
popa
jns
int3
pop
in
imul
jbe
pop
bound
push
int3
ds
sar
icebp
xchg
jae
int3
repnz
mov
or
rorl
mov
mov
mov
in
in
cltd
sub
adc
in
push
negb
pushf
imul
add
fwait
in
xchg
sub
movsb
push
lods
lock
xor
push
inc
fdivl
jno
sub
jae
push
popf
pop
mov
rorb
push
jns
dec
rcr
xchg
pop
insb
mov
cmc
data16
xlat
jg
xor
inc
jge
jae
mov
imul
lahf
cs
xlat
jns
scas
sub
xchg
add
js
pop
sbb
inc
and
or
les
out
mov
in
scas
popa
adc
push
ss
aam
in
cmp
push
adc
jp
test
mov
daa
popa
enter
mov
aaa
dec
xor
add
imul
xchg
ljmp
push
dec
in
push
cmp
push
jmp
sbb
nop
sarl
jp
int
lret
lea
push
mov
push
movsb
notl
imul
mov
sbb
or
inc
adc
test
std
sbbl
icebp
lods
popa
mov
popf
xor
inc
fmull
sub
sysret
xor
fcmovne
mov
hlt
loop
lods
xlat
cmp
inc
xor
pop
repz
test
das
sbb
xor
pusha
pop
loopne
pop
jmp
sub
mov
testl
dec
inc
sarl
mov
daa
pop
cmp
mov
sub
push
ss
cmp
ret
aam
mull
out
enter
xchg
push
push
fstps
mov
add
push
mov
dec
mov
int3
arpl
pop
jp
mull
add
arpl
sbb
bound
fstl
call
push
and
pushf
int
xlat
in
and
pop
cmp
out
inc
lds
dec
jmp
push
jae
mov
cmp
mov
in
xor
lret
imul
mov
adc
cmp
das
sub
mov
xor
lcall
shlb
loopne
lret
cmp
or
repnz
and
mov
test
add
ret
sub
fldenv
and
pop
out
in
xchg
adcl
xorb
adc
and
insl
sub
mov
and
sub
sbb
subl
xchg
cli
enter
jmp
std
fwait
inc
loope
mov
enter
cwtl
lret
mov
dec
and
inc
cmp
lahf
int3
call
xchg
ret
mov
ja
je,pn
inc
and
divl
int3
jle
fbstp
mov
adc
cmc
rorl
mov
cmpl
mov
and
push
addr16
mov
lret
push
loopne
lds
aam
in
ljmp
test
gs
mov
ljmp
loope
mov
sub
inc
mov
dec
dec
sti
aam
sbb
fsubs
xor
dec
add
push
push
xor
out
mov
xchg
lret
cltd
sbb
adc
fcomps
scas
out
andb
inc
test
inc
fs
shrl
or
lcall
fisttps
addl
jmp
je
stc
jno
push
cltd
addr16
push
inc
fnstcw
push
inc
cmp
mov
xchg
das
mov
push
add
out
pusha
sub
aad
lods
and
test
xchg
jnp
jp
xchg
leave
shlb
push
jbe
mov
sarb
dec
jge
xchg
push
inc
ja
mov
cmpsb
mov
xchg
sbb
xor
dec
addr16
repnz
xchg
mov
mov
add
leave
cwtl
pop
dec
fwait
mov
ret
cmp
stos
or
je
jo
xor
jg
imul
and
mov
and
lret
mov
and
sub
iret
xchg
adc
test
mov
xchg
sbb
xorl
jne
mov
gs
cmp
or
in
fadds
jbe
cmpsb
jb
adc
daa
xchg
movsb
cltd
insb
sbb
movsl
mov
jg
sub
cmpsb
mov
xchg
inc
xchg
adcb
test
repnz
mov
xorb
dec
hlt
out
push
ret
outsl
sub
fdivrl
int
subl
lods
dec
mov
ljmp
outsb
dec
dec
lahf
repz
pop
insl
lea
dec
lods
xchg
imul
sbb
fs
gs
or
dec
ret
bound
repnz
outsb
js
inc
popf
cmp
fdivrs
in
in
out
or
adc
mov
cwtl
mov
dec
pop
aam
movsb
jbe
sbbl
out
das
ss
sub
test
mov
ds
inc
insl
pop
pusha
shr
imul
mov
push
cld
xchg
push
sub
int3
dec
adc
sbb
dec
xlat
jecxz
xchg
and
cs
inc
xchg
in
lret
mov
mov
lret
adcl
imul
xor
and
sar
push
daa
out
imul
ret
jp
std
cmp
push
push
jecxz
mov
xor
pop
pusha
hlt
mov
jl
or
mov
popa
dec
fcomi
jle
repz
test
adc
pop
leave
and
push
test
out
out
insl
jae
pminsw
lcall
jmp
lods
int
push
sti
jne
jbe
outsl
outsb
loopne
ret
inc
repnz
sub
inc
adc
adc
mov
inc
jb
js
mov
ljmp
cmp
jno
mov
or
inc
or
testb
adc
test
pop
imul
pop
into
sbb
sub
aam
flds
orb
adc
ret
popf
aad
xor
sub
cmpsb
cmpsl
or
enter
aas
xor
popl
out
or
sbb
pop
mov
inc
pop
repz
mov
push
pop
and
xchg
cld
pop
rolb
cmp
push
cwtl
add
les
sub
mov
dec
lcall
aad
xchg
pushf
pop
ficompl
cld
pop
xadd
stos
aas
outsb
fcoml
cmp
repz
jmp
shll
inc
cmp
dec
add
xlat
mov
out
push
rol
pop
cmp
adc
ret
dec
pop
inc
cmp
cmp
dec
inc
xor
push
mov
adc
cli
adcl
aas
sbb
pusha
jb
mov
in
fwait
ret
test
jg
jl
xor
aad
imul
aaa
roll
jl
add
insb
pop
lods
add
inc
imul
insb
push
adc
scas
mov
xchg
ret
pop
add
cmc
xor
xor
es
shlb
pop
les
inc
lods
and
cmpsb
shrl
pushf
cwtl
mov
cmp
sbb
daa
sbb
dec
mov
in
fistl
dec
lock
fisubrl
adc
dec
add
add
int
fwait
int3
mov
jp
jmp
repz
cmp
push
mov
dec
mov
mov
push
mov
pop
addl
adc
sarb
mov
stc
xchg
pop
xchg
mov
mov
jle
test
xor
mov
xor
scas
sahf
mov
inc
mov
cmp
cmp
sti
pop
push
ds
xchg
jnp
mov
insb
cs
popf
ja
sub
ja
fisttpll
mov
fbld
jae
push
cmovns
push
mov
std
xchg
pop
iret
pop
iret
std
jp
into
or
and
sub
push
out
popa
test
dec
xor
cmp
xchg
and
adc
sub
mov
in
outsb
test
cld
or
mov
jae
popa
in
test
inc
xchg
jb
jb
cmp
fidivl
dec
ljmp
mov
lahf
mov
aad
cmp
lret
lods
mov
jnp
sbb
daa
ficomps
cmpsb
les
adc
xor
cltd
testb
cmpb
in
imul
test
push
push
sbb
cld
ficompl
add
aam
cmp
mov
in
and
push
cmpsb
lahf
imul
xchg
mov
cmc
pop
add
gs
sbb
push
push
ret
dec
sbb
leave
pusha
test
daa
pop
lcall
ja
add
xchg
stos
or
jns
cwtl
push
adc
and
cltd
push
jae
data16
insl
dec
int3
inc
push
xor
cli
push
sub
sub
cmpsl
in
inc
mov
pop
cmp
mov
movsl
pusha
negb
lahf
cli
shl
mov
and
inc
jmp
xchg
std
adc
dec
jae
xchg
rcrl
xor
adc
aaa
fwait
add
adc
mov
jnp
leave
xchg
ljmp
stos
call
notb
add
rorb
mov
add
mov
mov
mov
jg
fcoml
and
pop
mov
addl
adc
dec
sbb
sarb
ficompl
cltd
fisttpl
andb
mov
scas
inc
lret
sub
sub
sbb
adc
pushf
dec
push
inc
push
adc
sarb
jae
loope
mov
push
add
add
jp
mov
sub
aam
and
into
add
int3
nop
int
and
rclb
incl
and
incb
out
jmp
and
and
loop
notb
ljmp
mov
adc
shll
dec
not
jne
aam
and
cmpsl
xor
stc
pop
int
jge
iret
xchg
xor
push
out
inc
lret
push
loope
dec
mov
lahf
pusha
jge
out
fwait
inc
mov
mov
imul
repnz
mov
fcomps
dec
test
fisubl
mov
push
add
xchg
call
popa
jnp
ficoml
int
or
mov
xchg
pop
sbb
pushf
fsubr
dec
imul
jmp
test
sbb
rcl
jmp
scas
aad
cmpsl
mov
mov
or
in
ljmp
les
outsb
jns
iret
inc
sbb
and
mov
aam
out
les
aam
cmc
inc
and
xchg
sub
sti
xor
or
nop
inc
ja
fcmove
loope
mov
cld
scas
sub
les
fldenv
shll
mov
pop
lea
pusha
pop
and
push
dec
loope
stos
js
test
xchg
dec
adc
mulb
ja
adc
aas
push
add
sbb
mov
jnp
shl
inc
or
pop
insl
cmp
addl
dec
mov
fdivs
fnstcw
cmp
movl
inc
shr
int
pop
pushf
hlt
movsl
movsl
lahf
icebp
and
in
mov
iret
add
lock
mov
popf
or
cmp
fisubrs
cmp
add
ds
cmpxchg
out
popf
and
bound
push
int
inc
mull
outsb
movsl
adc
mov
mov
movsl
neg
xchg
jmp
ret
xor
shr
mov
scas
mov
mov
lds
mov
xor
cmp
in
andl
mov
test
cwtl
aas
cmpl
xchg
cmc
popf
je
lret
sbb
pop
into
repnz
movl
sbb
clc
fistpl
mov
mov
inc
in
jno
xchg
je
mov
lcall
in
jae
gs
inc
les
fildll
pop
scas
aam
xchg
test
cmp
test
add
add
cmp
les
cmp
repnz
mov
xor
out
push
pushf
cmp
decb
xchg
fldl
out
xchg
rorl
mov
aaa
push
inc
or
pop
lea
mov
xchg
sti
lock
jb
xchg
stos
jp
add
xchg
into
xlat
jno
popf
fs
xor
mov
mov
scas
fwait
xchg
sub
or
add
xor
sub
hlt
cmp
xchg
and
stos
mov
pop
dec
jae
adc
sub
cli
into
push
push
mov
inc
inc
pop
adc
push
push
push
insb
mov
std
sbb
insl
push
out
in
jg
jbe
sahf
jg
xor
jle
fidivrl
dec
mull
inc
pop
jl
sub
jb
lods
inc
sub
stc
pushl
pop
push
lock
and
outsb
bound
movsb
inc
fnstenv
xor
pop
iret
rcll
mov
jae
and
imul
xchg
sub
fbstp
sub
sub
push
stc
jmp
mov
cmpsl
push
jbe
stos
in
dec
push
push
inc
push
aaa
pop
pop
sbb
in
lock
or
sbb
in
mov
int3
jbe
adc
mov
enter
fdivp
mov
sahf
mov
inc
mov
out
jcxz
xchg
mov
aaa
jg
enter
mull
jecxz
push
scas
loop
stos
out
out
int3
jnp
and
or
mov
xchg
arpl
cmpl
lcall
jbe
inc
dec
movsb
das
xchg
sti
mov
call
jns
out
pushf
js
mov
mov
or
imul
fistpl
lea
ret
adc
clc
or
inc
xchg
mov
xchg
mov
fldcw
xor
movsb
sub
mov
xchg
int
push
cmp
shl
add
movsb
dec
and
rolb
fwait
and
sub
add
sbb
mov
mov
outsl
inc
push
rcrl
xorl
xchg
es
and
pop
insl
mov
cmc
jmp
sbb
push
dec
push
pusha
fwait
in
adc
jnp
lea
push
bndstx
inc
and
outsb
mov
or
fcomp
inc
lods
stos
jne
dec
popl
pusha
sbb
dec
jno
lea
cmp
jle
or
loopne
xchg
out
xchg
jae
stos
hlt
cmpsb
scas
cmp
jns
stc
cld
std
arpl
or
mov
in
movsl
add
cmpsl
mov
push
ds
les
dec
sub
inc
in
adc
cmp
call
dec
int
pop
mov
push
cmc
ljmp
xchg
inc
cmp
push
push
push
pop
push
inc
in
clc
dec
lcall
cmp
inc
jmp
and
jns
mov
scas
add
jnp
notl
hlt
pop
repnz
jns
call
ljmp
jbe
sub
cmp
dec
push
mov
inc
inc
mov
cltd
fildll
jp
pop
and
sahf
call
and
sub
cmp
xlat
jg
mov
pushf
movsb
cmp
cmpsl
es
xor
dec
daa
divb
cmp
xlat
out
ficompl
int
insb
sub
pop
pop
faddp
imul
sbb
push
ja
xchg
lds
test
in
add
scas
out
lcall
inc
push
icebp
movsb
fwait
repnz
and
repnz
arpl
and
sub
ds
jp
push
pop
mov
jge
and
xor
stos
push
movl
mov
mov
leave
dec
les
mov
lds
inc
addr16
cmc
add
mov
nop
cmpsl
sti
inc
gs
dec
int
mov
pop
pop
lret
lods
adc
mov
sbb
imul
leave
jae
sbb
mov
push
xchg
and
mov
push
push
cltd
xchg
rcrb
in
std
and
pop
stos
ret
jmp
and
in
or
cmp
into
and
std
sub
jae
sbb
fimuls
cmpsb
popa
das
mov
bound
mov
insb
adc
mov
fisubrl
pop
adc
in
xor
jecxz
pop
adc
mov
mov
adc
or
lret
stos
ja
fldcw
mov
push
jns
rcll
ja
mov
and
sbb
test
out
aaa
cmpl
mov
mov
mov
mov
sbb
sbb
push
das
push
lock
daa
lock
addr16
push
cmc
leave
iret
into
xchg
mov
mov
mov
adc
mov
cmp
sbb
or
sub
sti
xchg
imul
in
aam
popa
adc
sahf
jp
adc
cmpsl
movsb
mov
notb
inc
sub
pop
sbb
nop
mov
sbbb
fcoml
ja
mov
mov
fs
mov
dec
mov
and
adc
daa
pop
mov
jmp
xor
add
push
dec
mov
ss
fists
sar
lock
mov
sbb
lret
mul
jl
clc
fwait
fwait
add
cmpsl
cmpl
mov
cmp
and
icebp
jmp
scas
pop
add
mov
mov
mov
jo
push
cmpsl
fwait
shlb
push
rcrl
fiaddl
sub
add
sahf
js
or
pop
sub
cmpb
outsb
push
jmp
imul
push
sbb
and
call
call
inc
daa
cmp
dec
in
or
and
mov
xchg
sub
sub
inc
adc
pop
cmp
ds
shr
cmpsb
mov
and
out
lret
mov
fmuls
bound
push
test
addr16
das
ljmp
push
sub
xor
subb
lods
sub
push
inc
push
cmp
arpl
repnz
stos
inc
into
lret
arpl
sti
test
jl
mov
in
cmp
cmp
inc
xor
mov
icebp
jo
repnz
out
cli
inc
adc
es
clc
sarb
inc
dec
popf
adc
and
ljmp
fadds
mov
dec
aad
dec
stos
into
push
pop
pop
and
or
cmp
xchg
in
out
xor
jmp
add
pop
cmp
inc
aam
xor
testb
mov
inc
sub
jmp
mov
arpl
jp
fsub
scas
add
inc
dec
sbb
and
ss
stos
aam
xchg
xor
and
sahf
fildl
cld
popf
mov
dec
and
pop
fcompl
shrb
sarl
imul
and
pop
stos
inc
sbb
test
inc
test
mov
imul
shlb
fnstenv
or
jmp
mov
jl
sbb
pop
jns
jge
stos
inc
mov
jmp
push
fstl
sub
dec
leave
jp
in
mov
inc
mov
movb
mov
repz
aad
fidivl
test
scas
adc
call
mov
mov
aas
pop
xor
andl
loop
daa
nop
lret
dec
xchg
mov
ret
outsl
adc
or
xor
sbb
ret
mov
popl
cmp
sub
in
das
mov
xchg
adc
jmp
loop
shl
int
mov
in
mov
or
dec
mov
clc
inc
js
mov
xchg
inc
clc
mov
or
insb
mov
dec
push
mov
jnp
pop
sbb
jns
or
and
xchg
imul
daa
pop
cmpsb
pop
sarb
cmpsl
mov
mov
ja
mov
inc
cmc
jns
imul
test
pop
js
xor
push
pop
adc
push
jb
negl
lods
test
lods
mov
out
xchg
fstpt
adc
jo
xchg
cld
mov
or
xor
jmp
mov
pop
mov
cmp
stos
pop
xor
ret
mov
inc
sub
mov
mov
xor
scas
pop
aad
test
mov
inc
dec
imul
sbbb
shl
popl
lcall
int3
ljmp
lahf
or
xchg
outsl
mov
sub
ret
jecxz
mov
mov
iret
sub
hlt
pop
mov
xchg
in
push
mov
mov
fstl
in
andb
push
mov
jae
mov
push
adc
repz
aad
push
icebp
mov
mov
xor
jl
sbb
add
inc
sub
into
lds
ret
inc
testb
scas
push
ret
leave
mov
mov
lret
push
jl
jle
lcall
jg
aam
dec
jl
jnp
clc
push
inc
xor
in
fs
addr16
std
xlat
dec
mov
pop
xchg
sub
add
xor
fdivp
mov
pop
sti
aas
mov
call
and
outsb
int3
and
data16
jp
cli
cmpb
push
fldenv
fwait
std
cmp
sbb
or
xchg
xchg
push
in
sbb
pop
lret
icebp
imul
or
push
dec
dec
mov
cmp
sbb
dec
push
xor
mov
xor
pop
pop
out
or
and
push
xor
pop
test
repz
nop
inc
test
fistpll
sub
cltd
adc
xchg
mov
call
shrl
test
adc
jg
inc
pop
push
sbb
add
jae
icebp
push
fisubs
adc
mov
lahf
sahf
in
out
mov
and
ficoms
dec
dec
mov
push
or
lahf
add
xchg
cmp
in
adc
sbb
daa
ds
stos
sarl
fadds
inc
mov
into
jg
add
mov
cld
je
pop
call
loop
or
lret
jnp
jmp
and
je
sbb
out
adc
pop
dec
or
or
push
pop
cmp
cmp
pop
imul
fnstenv
inc
adc
cld
sbb
push
mov
enter
jno
sbb
ret
mov
in
mov
dec
xlat
push
push
push
inc
pushf
push
ret
push
mov
lods
mov
jo
xchg
push
jmp
lods
sbb
ljmp
push
lock
leave
fcompl
outsb
mov
inc
mov
jp
push
mov
jae
mov
xchg
inc
ficomps
fsubrl
xchg
mov
jb
jle
push
pop
push
movsl
and
arpl
pop
sbb
popa
ret
push
and
movsb
jb
pop
cmc
out
jne
out
out
pop
jl
std
std
inc
orl
cmp
lea
sub
mov
rorb
jae
rorb
in
in
fwait
pop
jne
adc
cmp
test
gs
pop
jns
pop
jecxz
mov
jp
or
faddl
mov
out
mov
push
and
or
dec
push
and
mov
inc
pop
scas
adc
mov
insl
mov
jnp
dec
xor
pop
sub
out
test
fstps
out
pop
int3
shll
mov
lahf
xlat
jae
cmp
fwait
push
or
adc
jg
adc
adc
popf
bound
outsl
inc
or
jmp
in
inc
orb
sarl
test
fldcw
jnp
push
jbe
push
and
sub
add
or
pop
cmc
aas
inc
jbe
shll
ja
dec
pop
imul
xor
pop
and
out
and
pop
dec
inc
or
lods
xchg
mov
add
pop
hlt
inc
movsb
mov
and
mov
fwait
sbb
in
mov
daa
push
inc
lods
cmp
test
jnp
inc
mov
les
cmp
cltd
and
add
cmp
pusha
es
rol
out
pop
repnz
pusha
mov
cmp
fldl
fs
sub
sbb
mov
cmc
fdivs
sbb
jge
inc
fstl
movsl
sub
call
xor
xchg
and
push
push
pop
hlt
push
ret
sub
ficomps
sub
sbb
sub
loopne,pn
xor
cli
mov
inc
lret
xor
and
arpl
bswap
sbb
pushf
imul
pop
cmp
mov
sti
xchg
test
iret
ret
fdivrs
loop
lock
mov
jecxz
jg
xlat
inc
add
dec
jl
dec
out
adcb
loop
jecxz
outsl
inc
std
sbb
pop
aad
and
repnz
ficomps
and
jmp
mov
inc
jne
js
push
mov
mov
gs
imul
add
mov
in
mov
icebp
adc
fidivs
dec
js
mov
je
arpl
push
lock
or
xor
cmp
ja
mov
dec
inc
rclb
xor
pop
xor
and
mov
inc
push
gs
mov
sub
int3
cmp
cmp
push
mov
clc
jmp
pop
cmp
or
idivl
gs
xchg
cmp
cmp
or
clc
cmpsl
add
std
adc
xor
dec
add
sbb
jecxz
js
aad
cmp
xchg
lds
cld
lea
loopne
bound
stc
add
add
outsl
fsub
fcomp
and
je
sti
ret
aaa
mov
mov
mov
jmp
shll
shl
jmp
test
stos
push
mov
fs
jg
ss
mov
lcall
xor
aaa
clc
clc
cli
mov
enter
mov
mov
adc
and
adc
clc
mov
mov
addr16
or
das
out
nop
adc
mov
mov
push
out
out
fnstenv
lret
mov
lds
fwait
dec
lcall
add
mov
imul
mov
push
xchg
call
inc
mov
mov
and
sbb
cs
lock
fs
pop
and
add
sub
out
std
xchg
dec
stc
jecxz
xchg
insl
jp
pop
cmc
adc
pusha
xchg
ret
inc
sub
les
test
ss
inc
cltd
pop
ret
fcomps
movsl
jle
pop
pop
dec
scas
jmp
das
in
mov
sbb
mov
pop
ret
data16
in
loopne
fcmove
jae
pop
loope
mov
in
inc
jle
jnp
xchg
cmp
xor
push
lods
sbb
xchg
lea
dec
xchg
ret
xor
push
adc
cmp
xchg
mov
shl
xor
dec
xchg
test
cmpsl
sub
push
jns
sbb
inc
mov
js
lds
xor
inc
sub
push
aad
sub
add
mov
aas
push
decl
in
test
add
popf
push
or
repz
jg
inc
sub
cwtl
mov
mov
push
sbb
popl
fcmovne
dec
jle
lds
pop
push
ljmp
pop
mov
xor
and
mov
cmpsb
xchg
test
lea
test
enter
popa
add
push
sub
sub
lahf
xchg
mov
and
jge
or
xchg
xchg
cmpsl
mov
bound
mov
dec
lret
aad
push
push
inc
daa
cli
mov
stos
ret
dec
sysenter
popf
enter
xchg
imul
dec
mov
sub
push
and
ljmp
xor
gs
idivl
mov
cs
inc
dec
fcomps
inc
daa
push
push
ftst
test
mov
lods
or
lret
jnp
and
cmp
xlat
sbb
outsl
mov
sbb
inc
rcrl
xchg
into
xorl
in
test
dec
or
call
mov
mov
inc
mov
std
clc
dec
push
sbb
push
lahf
das
fsubl
jmp
xchg
mov
repz
fstpt
loope
popa
insl
dec
xlat
lcall
mov
cmp
mov
sti
mov
sti
mov
fstl
dec
int
xchg
sbb
xchg
scas
push
in
or
sti
inc
lds
clc
dec
jbe
xor
in
repnz
or
jle
das
dec
xor
sbb
arpl
xorb
add
push
add
aad
bound
pusha
mov
test
mov
sbb
shlb
jae
xor
pushf
mov
aas
aas
stc
cmpsl
adc
outsl
mov
jge
call
push
mov
and
add
in
push
movsl
inc
test
add
sub
mov
xor
and
insl
fstpl
sbbl
test
jecxz
fwait
aad
pushf
inc
mov
mov
lods
sub
jo
js
jno
sub
push
rcrb
fs
sbb
lock
in
iret
movsb
pop
test
cmpsl
dec
aas
in
push
jne
cmpsb
inc
out
mov
cmc
test
jmp
add
pushf
dec
adc
jbe,pt
fchs
cmp
outsb
aad
shll
mov
stos
and
pop
rorb
cmp
dec
insb
andb
mov
hlt
mov
push
pop
or
jle
push
cmp
hlt
fadd
sub
jno
xchg
mov
xor
or
xor
pop
jo
pop
fisubs
jbe
test
mov
cmp
andl
or
test
or
jmp
or
dec
add
int3
into
clc
or
shll
and
imul
cmp
add
adc
lea
add
sbb
out
test
in
daa
jno
xchg
jb
mov
sti
aaa
out
and
scas
push
inc
fs
movsl
not
mov
mov
clc
add
push
jne
clc
cmp
sub
inc
xchg
mov
shrl
popf
leave
push
sbb
and
adc
mov
in
cld
mov
jle
push
cltd
repz
push
lret
mov
mov
mov
bnd
shl
dec
cmp
aas
loop
int3
jo
push
jno
mov
cmpsb
fs
xchg
out
test
cld
pop
das
xor
or
and
push
loope
adc
out
jle
xor
jle
sbb
into
xchg
lods
popa
inc
pop
test
xor
and
jb
sbb
frstor
test
xor
sbb
push
jb
loope
lods
push
add
xchg
pop
shrl
lds
jl
cs
add
stc
add
adc
call
sub
pop
ja
iret
jo
add
or
inc
mov
imul
push
insl
cmpsb
aas
inc
add
xchg
stos
repnz
jl
mov
shlb
enter
fnsave
imul
mov
cmp
nopl
fdiv
adc
insb
xor
fcoms
cmp
arpl
fistps
jb
mov
les
jne
push
xor
mov
insl
sbb
imul
pusha
xor
js
ret
sbb
inc
mov
mov
ja
loope
inc
sbb
fmul
je
pop
xor
or
aaa
sub
and
mov
xlat
icebp
inc
and
jle
std
cli
push
les
mov
cmc
xchg
adc
inc
and
dec
cwtl
rol
loope
mov
inc
or
out
pop
lcall
cli
jno
push
sub
in
ret
les
cli
push
jbe
cwtl
out
cmpsb
mov
gs
and
ljmp
mov
jnp
js
icebp
push
pop
xchg
std
add
pop
sbb
xchg
nop
sub
fwait
insl
dec
rclb
mov
pop
aas
xchg
dec
test
rol
roll
fimuls
jne
imul
je
inc
fcmovnu
imul
push
pop
jmp
jno
mov
xchg
xchg
aad
add
xchg
xor
pop
ret
and
pop
mov
cmp
xchg
addr16
dec
push
in
lds
mov
fscale
and
stc
xor
cmpsl
dec
mov
sbb
enter
jge
xor
fisubl
xor
int3
out
test
int
jnp
lahf
mov
sub
fwait
lret
cli
shlb
add
mov
sbb
fldl
push
adc
repz
or
or
addl
mov
jg
in
add
sub
xlat
and
cmp
adc
sbb
mov
movl
and
mov
mov
cli
mov
xorl
sbbl
les
add
inc
sub
xor
in
enter
sbb
jnp
and
cli
pushf
xchg
dec
dec
jg
dec
mov
cmp
inc
in
out
stos
into
xchg
adc
sub
imul
ret
sti
aad
jno
dec
int
mov
icebp
sbb
imul
dec
in
cmp
ljmp
mov
fxch
cmc
shll
pop
mov
jbe
xchg
push
scas
aam
xlat
stos
cmpsb
adc
outsl
insb
leave
lret
or
repz
gs
pushf
jmp
mov
stc
pop
mulb
out
xchg
inc
cmp
mov
in
into
dec
push
adc
subl
out
sbb
in
xchg
arpl
data16
cld
pop
mov
dec
inc
mov
cmc
jnp
test
or
xchg
int3
mov
push
lret
int
cmp
mov
push
mov
push
jp
aaa
push
add
mov
dec
xor
xchg
pop
and
cmp
ficomps
adc
mov
jb
aaa
mov
mov
call
and
push
xchg
pushf
cmp
scas
enter
aas
mov
pushf
and
adc
cmpsb
fisttps
jmp
sub
pop
xchg
or
mov
push
pop
xchg
nop
push
imul
pop
sbb
gs
divb
enter
sbb
sbb
cmpb
leave
stc
adc
xor
movsl
mov
push
adc
into
inc
xor
jge
and
xchg
xchg
test
adc
jnp
leave
pop
cmp
aam
and
ss
inc
into
jge
ror
fwait
stos
adc
lret
mov
cltd
bound
jmp
mov
adc
cmp
dec
loope
lcall
addb
shlb
enter
cwtl
ss
jno
sarl
dec
leave
lea
adc
add
add
pop
and
pop
jge
jno
and
scas
lods
jmp
xchg
inc
xor
xchg
mov
in
shll
jnp
sub
pop
mov
cmp
rolb
xor
std
test
mov
jne
sub
das
mov
pusha
test
ret
push
jecxz
push
mov
push
mov
jns
jp
ret
push
das
fcoml
push
pop
sub
test
fidivrl
mov
ret
loope
imul
cmp
jg
mov
jmp
cmc
imul
and
cltd
xor
out
sub
mov
cltd
pop
insb
rdmsr
imul
mov
pop
jb
pop
inc
pop
pusha
pop
in
out
int
leave
lods
out
mov
xchg
lock
xor
mov
test
add
imulb
in
insb
sbb
nop
test
mov
loope
cmpsb
add
insb
stos
data16
cmc
and
adc
and
enter
cmp
add
pushf
mov
inc
xor
mov
cmpsl
jmp
lcall
in
lods
pushf
shll
ds
sub
add
dec
pop
inc
pop
in
nop
out
push
shlb
stos
xor
inc
xchg
pop
lods
sahf
lret
cmp
call
jmp
adc
jmp
fmul
sub
add
sbb
dec
mov
rol
cmp
adc
and
pop
test
dec
mov
mov
negl
inc
call
mov
cmp
jl
inc
push
enter
and
xchg
test
loope
insb
jg
pop
xor
push
testb
mov
in
fstpt
sub
fdivrp
fisttpll
xchg
das
adc
push
mov
pop
push
ljmp
mov
xor
fstpt
pop
mov
std
adc
mov
lods
dec
mov
or
inc
std
fistpll
xchg
imul
sub
in
jl
in
test
sub
dec
jg
jno
rcll
mov
or
mov
add
and
rol
xchg
dec
arpl
mov
pop
imul
cli
test
cmp
mov
dec
ret
sub
cmc
cmpsb
fcoms
pop
jge
add
stc
aad
inc
clc
aam
cmpsb
cmp
xlat
push
mov
lds
ror
xor
jns
notb
je
mov
jbe
inc
xlat
out
sbb
fincstp
add
dec
xor
inc
mov
jns
dec
push
mov
ja
ja
ds
enter
cmpsl
push
je
sbb
mov
push
daa
xchg
mov
cltd
adc
dec
mov
pop
sub
push
mov
fldenv
cmpsl
lret
fdivrl
pop
ss
cltd
jg
lahf
or
clc
mov
arpl
rclb
pop
fdivrl
fdiv
stos
add
pop
jle
cltd
addr16
adc
jbe
cmp
fisubrl
adc
iret
repz
sub
sub
icebp
fwait
add
mov
lcall
inc
jge
lret
int3
xchg
adc
jge
mov
or
ret
mov
nop
or
ror
orb
das
je
jp,pt
mov
sub
inc
incb
in
mov
mov
xchg
add
pop
sub
xor
dec
and
sub
jg
sub
outsb
add
push
lock
fisubs
jge
das
loop
push
outsb
add
push
and
enter
pop
pop
or
je
adc
fxch
shrl
stos
xchg
push
cltd
and
outsl
push
mov
out
pop
or
loope
bound
std
pop
mov
pusha
add
popf
call
pop
inc
dec
int
push
adc
pop
mov
andb
outsb
insl
jg
shrb
mov
fisubs
clc
jbe
fucomi
mov
cmpsl
inc
push
sarb
repnz
jno
pop
aad
mov
faddl
int
xchg
popa
in
sarl
pop
add
das
add
rol
pop
cli
jl
mov
inc
not
dec
mov
ja
add
testb
xor
xor
mov
mov
mov
rcrb
mov
xor
fwait
and
lods
cmc
sub
mov
sti
std
inc
mov
xor
push
stc
imul
fs
bound
adc
cmp
loop
lret
jne
inc
and
cmpsb
sub
mov
sbb
jmp
lea
push
pop
pushf
mov
psubsw
pop
testb
mov
ret
or
in
mov
pusha
sbb
popf
mov
fisttpl
pop
test
test
cmpsl
movsl
leave
mov
iret
mov
jle
nop
ret
dec
pop
jle
andb
inc
pop
jmp
rcll
adc
sub
jb
push
push
mov
cmpsb
xchg
cmc
fwait
and
and
mov
dec
lods
adc
mov
ss
xchg
sti
xchg
fimull
pop
mov
stos
and
and
and
dec
xchg
mov
and
mov
sub
mov
inc
mov
mov
and
je
lods
test
dec
pop
mov
imul
imul
int3
ljmp
add
ret
imul
push
in
xor
xor
hlt
loope
push
loope
in
jne
ret
mov
and
sub
mov
mov
fisubrs
frstor
aas
idivl
fdivp
jle
fsubl
adc
push
and
lret
bound
add
push
push
pusha
push
jo
jne
mov
jge
mov
xor
test
icebp
outsl
bound
inc
andb
sbb
add
sub
pop
cs
jo
adc
or
aam
add
les
in
xchg
fwait
bound
test
jns
mov
cmpsl
inc
dec
test
jnp
mov
push
sub
out
jmp
cli
inc
movsl
mov
add
dec
cmp
adc
rclb
clc
idivl
dec
inc
and
add
rep
repnz
fwait
lcall
ret
xchg
shl
dec
repz
rclb
pop
jne
mov
call
fdivrs
push
pushf
in
mov
popa
out
cvttps2pi
aas
pop
mov
addr16
push
adc
scas
ret
sub
ficomps
mov
or
and
icebp
jbe
mov
bound
xchg
jmp
cmpsb
xchg
mov
or
popa
xchg
fdivl
dec
push
movsb
inc
out
das
push
in
pop
jmp
pop
jg
pop
lahf
call
mov
mov
cmpsl
out
pusha
inc
mov
push
fdivrs
sbb
enter
sub
inc
lahf
in
pop
outsb
ss
fildll
lods
pop
fisubrs
mov
loopne
arpl
adc
add
adc
xchg
cmpsb
aad
mov
jecxz
shlb
lods
xor
shlb
lret
addr16
and
mov
xchg
ja
scas
int
cmp
sub
adc
xchg
sub
std
sbb
jecxz
aas
fdivrl
ret
call
mov
les
stos
cwtl
aad
inc
and
inc
push
icebp
pushf
outsb
xchg
dec
out
jecxz
sub
dec
sbb
cmp
jl
mov
test
aad
push
jmp
xor
insl
jo
out
jnp
mulb
sbb
add
scas
xchg
add
dec
adc
pushf
jbe
mov
sbb
hlt
shrl
push
xchg
fists
dec
xchg
mov
mov
jge
out
add
sti
fcompl
sarb
je
daa
dec
push
add
pop
push
rcl
cmp
test
jno
ret
idiv
xlat
add
jns
lret
or
inc
inc
sbb
dec
out
fwait
in
lcall
imul
push
gs
sbb
inc
fadds
repnz
lret
rolb
hlt
mov
pop
in
xchg
add
mov
jb
cmp
inc
pop
lock
push
pop
aaa
sub
shll
int3
push
into
add
test
daa
push
cmpsl
jb
and
out
push
test
test
daa
cmp
ret
aaa
outsb
dec
daa
push
sbb
inc
into
icebp
jl
push
stc
dec
fdivrs
sbb
cld
dec
xchg
fstps
mov
push
lock
mov
imul
lea
sub
or
nop
mov
mov
add
dec
xor
jae
mov
xor
subb
push
add
push
cmp
fs
jnp
les
cli
cmp
xchg
push
enter
lret
js
push
or
stos
mov
cmpsl
mov
imul
mov
movsb
out
push
imul
scas
movsl
out
mov
sbb
push
sub
xchg
xchg
cmc
sbb
add
sti
xchg
test
es
stos
cld
ljmp
add
push
mov
sub
movsb
sahf
je
mov
pop
inc
sub
cmp
mov
inc
test
inc
repz
xor
in
mov
xor
dec
test
orb
mov
mov
mov
repnz
jecxz
and
jmp
out
mov
cli
cwtl
or
test
xor
mov
out
xchg
test
insl
int
sbb
ss
jle
repnz
outsb
or
adc
sub
pushf
pop
xor
pop
inc
lahf
insb
loope
xor
mov
sbb
mov
std
dec
mov
andb
clc
mov
xchg
push
test
shrb
insl
xor
push
out
adc
inc
mov
das
rclb
insl
cmp
add
mov
mov
adc
push
lds
mov
fnstenv
pop
jne
test
scas
rorl
orb
jno
jo
push
xchg
xor
and
mov
stos
in
mov
cltd
push
sbb
add
adc
push
rcl
shll
sbb
cs
imul
adc
idiv
inc
int3
cwtl
std
aaa
jb
nop
cli
je
jle
jmp
je
fisubrs
mov
pop
sub
sbb
jbe
lahf
in
xor
or
cmp
xor
lock
mov
rclb
pop
stos
sti
jl
or
inc
repnz
lds
ljmp
lods
pavgb
shrl
lcall
divl
inc
cltd
icebp
jbe
mov
shl
cmp
jge
push
add
jnp
fs
and
in
cmpsl
in
sti
xchg
dec
adc
aad
adc
cwtl
test
jne
adc
pop
jns
jo
pop
jg
loop
scas
mov
lret
mov
cmp
xor
sti
push
test
divl
movsl
dec
into
js
add
cmp
cmp
and
dec
dec
cwtl
pusha
mov
imul
cmp
stos
fnsave
cmc
leave
sub
pop
enter
pop
sbb
icebp
les
ja
out
test
mov
jnp
xchg
into
jbe
mov
ret
and
push
shlb
sar
in
fwait
jbe,pt
adc
fidivl
bound
stc
mov
jb
jmp
adc
sbb
pop
xor
sahf
inc
pop
dec
mov
repz
xor
adc
mov
fucomi
int
jg
in
in
fstpl
add
jge
shl
jns
lock
lcall
push
pop
pop
mov
xorl
fwait
jmp
cltd
adc
xor
adc
test
or
jge
imul
xchg
inc
pop
sub
int
test
lahf
dec
dec
js
mov
in
mov
cltd
imul
push
cmp
sub
cmp
int
cmp
call
mov
scas
push
sbb
cld
aas
pop
inc
pop
xlat
sbb
es
jp
inc
mov
inc
gs
scas
cmp
notl
jge
sbb
xchg
cmpsb
leave
jge
fsubrl
mov
nop
mov
and
jb
test
push
mov
imul
jmp
cmc
xchg
mov
pop
mov
push
notl
mov
mov
imul
je
in
cmpb
repnz
imul
and
adc
out
sbb
ds
lcall
mov
cltd
rcl
push
out
dec
mov
add
cmp
and
fidivrl
int
lret
mov
daa
imul
xor
pusha
pop
into
push
cmp
popf
xchg
cs
js
xchg
call
xor
icebp
mov
push
test
stos
clc
add
push
insb
jmp
cli
jbe
xchg
rorl
lcall
ret
gs
sarb
inc
call
xor
sbb
xchg
inc
insl
mov
ss
lods
or
cwtl
pop
push
pushf
mov
cmp
adc
jle
inc
iret
xor
or
or
loope
int
inc
adc
mov
sbb
in
in
dec
or
mov
sub
jg
mov
popl
aas
and
push
push
xor
mov
btc
movsb
adc
inc
or
jae
shr
xlat
out
inc
lahf
imulb
jmp
cmpsb
in
std
mov
mov
aaa
ret
push
pushf
repnz
ja
push
loop
mov
and
pop
cs
out
mov
out
pop
lods
maskmovq
idivl
mov
cmc
push
stos
xchg
jb
jle
inc
push
push
sub
int
leave
test
ss
insl
loop
mov
mov
pop
mov
and
les
adc
jnp
fldcw
call
push
or
icebp
mov
or
fsubl
enter
call
inc
mov
jecxz
test
inc
jp
ucomiss
push
punpcklwd
call
mov
adc
fildll
outsb
mov
cmp
mov
sbb
or
pop
test
stc
sti
outsb
and
adc
jns
ss
fisttpll
dec
add
xchg
pop
aam
repnz
scas
ss
ss
pop
das
push
or
shrb
mov
dec
popa
jmp
jmp
mov
aad
movsl
mov
in
or
fwait
dec
sub
aaa
pop
daa
in
adc
add
push
scas
xchg
mov
mov
jb
bound
and
add
push
test
cmp
dec
sbb
repnz
les
sbb
mov
bound
icebp
mov
sbb
cs
adc
imul
cmpsl
pop
fs
pop
in
imul
in
push
inc
sub
dec
push
insl
call
stos
in
in
jbe
mov
jmp
or
inc
lcall
inc
arpl
xor
es
pop
mov
adc
dec
mov
add
cltd
rol
test
mov
roll
inc
arpl
lcall
clc
movsl
mov
push
push
add
xchg
mov
inc
mov
into
dec
repz
imul
sub
cs
push
mov
shrb
push
push
mov
dec
lock
dec
in
repz
bound
popa
jne
xchg
jbe
mov
mov
jge
into
push
xchg
jle
sti
and
pop
ljmp
pop
xchg
insb
sbb
cmp
fsubl
push
fwait
mov
adcb
add
andl
mov
out
stc
sbb
jnp
cmp
or
out
pop
insl
loope
dec
out
lcall
and
push
std
push
aad
and
lods
insl
insl
or
and
jb
frstor
mov
xlat
pop
jle
inc
popf
sub
sub
mov
sub
mov
adc
aaa
mov
out
dec
test
shll
out
lcall
push
pop
inc
jo
ret
mov
pop
add
xchg
or
mov
jl
mov
int
and
mov
sarb
mov
mov
inc
inc
dec
pop
int3
stos
sub
std
insl
out
fsubrs
push
into
and
roll
inc
push
mov
xor
hlt
add
or
or
mov
mov
es
dec
cmpb
xchg
out
jae
cmp
inc
pop
cmp
xor
push
subl
mov
cmc
pop
mov
int3
pop
push
loope
fcoms
or
push
inc
les
loop
mov
push
mov
mov
adc
fildll
test
jle
xchg
imul
std
bound
xchg
imul
pusha
stc
mov
popa
and
or
fistpl
or
mov
push
xchg
xor
lods
cmp
test
loop
jmp
sub
dec
fldt
xorl
or
ss
ljmp
xchg
add
jle
adc
iret
dec
mov
push
or
popa
mov
lods
mov
imull
mov
or
jno
sub
pop
ret
lret
inc
dec
lret
push
stc
mov
mov
mov
mov
loop
frstor
pop
aas
fstp
std
xchg
inc
adc
repz
jae
xlat
xchg
fwait
popa
or
es
jns
push
inc
mov
out
inc
mov
ss
into
out
xor
dec
cmp
xor
add
cmpsl
add
sub
mov
xchg
pop
fnstenv
sub
leave
outsb
imul
cltd
mov
inc
in
aaa
iret
iret
int3
fldenv
xchg
lds
xor
mov
add
scas
pextrw
aaa
into
add
mov
lea
pop
pop
xor
or
mov
cmpb
lock
pop
mov
xchg
mov
outsl
inc
add
mov
iret
aad
push
and
pop
jg
xchg
outsb
shlb
or
stos
testl
jl
inc
aaa
push
adc
mov
xchg
ja
add
dec
add
test
das
andl
and
and
es
pop
adc
add
adc
and
sbb
mov
gs
add
js
sub
scas
adc
xchg
fisttpl
and
mov
insb
sub
xlat
gs
xlat
imul
mov
dec
shll
push
inc
mov
xchg
mull
or
xchg
pushf
push
leave
fidivrl
out
les
imul
cmp
cmp
lods
stos
push
mov
hlt
popa
arpl
pushf
sub
and
cwtl
cmp
mov
xchg
inc
aaa
je
leave
dec
adc
ljmp
inc
and
or
cmpsl
in
xor
or
sahf
mov
cmp
nop
xor
jnp
pop
push
scas
test
inc
sbb
dec
push
je
mov
cmpsl
mov
mov
push
xchg
pop
ret
adc
or
jg
sub
inc
je
outsb
pop
xchg
and
cli
pop
stos
push
rcll
mov
shll
or
imul
cmp
imul
mov
add
lods
fidivs
or
mov
inc
enter
loopne
daa
enter
cmp
imul
push
icebp
or
ja
loop
xchg
pop
ds
test
or
mov
lods
addr16
pop
mov
jbe
sub
fucomp
stc
or
lods
dec
fldcw
and
adc
and
clc
push
push
sub
lret
ds
push
aaa
jnp
fiadds
test
xchg
sub
push
lock
cltd
push
xor
mov
xchg
jne
sahf
push
sub
inc
roll
and
mov
repnz
cli
fdiv
iret
mov
cltd
scas
xor
pop
cmp
ljmp
test
rcrb
cmpsl
call
jl
bound
sbb
pusha
push
iret
inc
add
mov
outsb
pop
fucom
jg
jb
pop
pop
aam
jo
mov
mov
ljmp
add
ret
jne
ds
leave
pop
sub
popl
add
sbb
insl
mov
jge
imull
xchg
cwtl
fisttps
leave
nop
int
icebp
aad
dec
or
shlb
data16
stos
in
mov
mov
inc
iret
pop
std
add
in
mov
dec
mov
sbb
test
pop
dec
aam
stos
xor
dec
pop
adc
push
in
popa
aad
sarb
mov
cmp
add
and
lahf
test
and
or
insb
jp
cld
dec
add
push
jg
pop
inc
jo
adc
jae
ret
and
sbb
fisubs
and
rcll
sub
mov
cli
mov
cmp
sub
push
cmp
cmp
arpl
rsm
inc
xchg
pop
mov
pusha
mov
xor
jge
decl
add
inc
xchg
jb
sbb
push
je
xchg
lcall
imul
repz
xchg
inc
dec
or
mov
xchg
mov
add
nop
addr16
fidivrl
xchg
bound
inc
sub
pop
mov
sar
cmpsb
rol
inc
push
cmp
cmp
stos
mov
mov
dec
sub
sbb
jnp
sbb
jg
into
ljmp
fstpt
test
sbb
adc
jl
in
push
inc
pop
pop
pusha
ljmp
popa
xchg
enter
mov
or
stos
out
jnp
es
mov
sbb
mov
xor
pop
pop
pop
int
mov
and
xchg
xchg
add
sbb
cmp
adcb
xchg
aas
pop
out
notl
push
xor
jnp
inc
xchg
lahf
adc
ret
test
add
aas
sbb
out
pop
sub
push
popa
dec
push
cmp
imul
xchg
xor
cmp
fs
or
je
push
sbb
arpl
addb
push
dec
mov
mov
add
mov
mov
es
cmp
push
jae
std
pop
cmc
movsb
ss
adc
lock
adcl
mov
andl
jae
sbbb
pop
in
daa
in
pushf
int
lcall
pop
jb
and
dec
mov
std
jl
insb
dec
dec
sub
mov
cltd
aad
mov
rorl
mov
jle
sbb
push
xor
in
add
adc
xchg
call
pop
mov
sahf
iret
int
test
cli
mov
pop
mov
sahf
adc
jecxz
inc
lds
sub
or
and
dec
or
push
push
jbe
cmp
lcall
stc
or
lock
mov
jl
mov
repnz
in
adc
push
or
sbbl
call
sbb
push
addr16
sub
xchg
scas
xchg
frstor
pop
sbbb
xchg
stc
daa
inc
loop
adc
fdivl
loopne
push
cmpsl
add
adc
imul
add
in
push
scas
movsl
aaa
adc
lods
das
insb
inc
loopne
mov
add
out
into
scas
imul
leave
sbb
lods
jnp
icebp
xor
push
ja
push
pop
cmp
pop
adc
mov
inc
sub
adc
addr16
add
or
jecxz
xlat
nop
mov
push
adc
bound
sbb
ja
jae
lock
pop
sbb
or
mov
or
inc
out
or
hlt
push
ds
xor
in
out
or
add
inc
mov
dec
xor
adc
jbe
or
orb
push
and
pop
lods
cwtl
jp
jle
rcrl
shll
xor
jle
inc
in
push
mov
inc
leave
adcb
sbb
or
jge
leave
xchg
or
mov
push
fldt
jle
addr16
sahf
addr16
clc
inc
cmpsb
cmpsb
xchg
xchg
das
sub
dec
and
mov
and
lds
xor
push
std
stos
scas
outsl
pop
nop
inc
idiv
loope
in
cmp
adc
test
das
jmp
push
add
sti
jle
lret
push
xchg
shlb
add
insl
mov
test
pop
mov
out
pop
sti
mov
and
inc
add
dec
jmp
jg
lods
sti
sti
icebp
xor
dec
arpl
in
ljmp
adc
arpl
in
and
mov
dec
mov
jl
and
pop
bndldx
iret
rol
shll
push
adc
daa
push
addr16
jle
cld
out
andl
push
cmp
and
cmpsb
xor
jle
in
shlb
or
mov
int
jg
dec
fcompl
cmc
ss
dec
push
dec
sbb
movsb
push
sti
sbb
inc
mov
xor
cmc
add
loope
loope
pop
cmp
lods
mov
scas
or
cmp
cmp
jecxz
ret
push
addb
je
jl
xlat
xchg
jb
bound
sbbl
adc
pop
pop
jp
jnp
loopne
push
xchg
push
int
imul
int3
roll
adc
stc
or
lret
ds
out
pop
sbb
stc
jg
lret
stos
cmpsl
push
xchg
cld
ljmp
sub
jp
cmp
mov
sub
loop
and
add
mov
inc
cwtl
sub
cmp
mov
pop
gs
jg
push
in
add
int3
push
dec
and
cmp
xchg
or
jg
ret
negl
adc
rorl
bound
repz
aaa
roll
test
fsubs
push
sar
push
sub
jns
inc
pop
xchg
mov
in
in
add
jne
mov
push
mov
adc
xchg
mov
sub
pop
test
cld
in
sub
pop
sbb
dec
mov
sbb
sarb
push
ret
pop
ret
in
inc
jg
pop
add
gs
gs
push
sbb
call
adc
arpl
xlat
iret
cmpsb
cld
fsubs
xchg
mov
dec
xchg
scas
js
enter
std
dec
sbb
pop
aas
aas
fisubs
fsubl
mov
call
push
push
or
jge
push
mov
mov
fisttpl
mov
stos
inc
sub
or
adc
mov
xchg
mov
div
adc
mov
and
leave
pop
lods
xchg
in
adc
xchg
sub
pop
fwait
outsb
rol
std
and
inc
int3
or
cltd
fdivp
sbb
loope
outsb
jl
cmp
jge
nop
mov
add
mov
pop
pop
bound
mov
xor
cmp
and
adc
cmp
mov
mov
gs
mov
mov
jnp
outsb
xor
jp
mov
test
pop
mov
popf
das
jns
sahf
mov
add
inc
dec
push
cmpsb
xor
or
clc
mov
int
bound
xor
dec
mov
insw
mov
imul
in
or
aam
xchg
mov
inc
inc
outsb
lods
mov
push
stc
lods
and
mov
pop
jae
jl
test
xor
or
jp
insb
dec
xchg
pop
dec
imul
jns
add
imul
pop
push
imul
stc
dec
testb
movsl
lds
and
sti
dec
mov
movsl
repz
sub
adc
andl
mov
stc
xchg
xchg
hlt
push
mov
mov
inc
stos
pop
dec
test
in
test
mov
or
in
shll
adc
scas
sbb
sbb
inc
xor
add
insb
notl
popl
cmpsb
cmpsb
out
addr16
sti
icebp
in
cmpsl
sti
sbb
mov
pop
xchg
add
test
test
rolb
testl
jbe
dec
cmp
or
inc
pop
clc
cs
and
leave
jl
pop
int
or
mov
cmp
addb
inc
xor
ret
cld
jnp
daa
lods
jns
or
insb
inc
pop
xchg
xor
cmp
cmp
fisubrl
ret
mov
sbb
fsub
or
or
jl
push
hlt
pop
in
inc
lret
lret
enter
sub
mov
stos
inc
mov
inc
push
xchg
xchg
ss
xor
lret
push
mov
imul
mov
out
repz
repz
in
cmpsl
imul
in
mov
xor
test
cltd
push
rorl
pop
int
loope
and
and
jge
lret
pop
jo
or
outsl
and
rolb
push
in
dec
inc
sbb
in
sub
cmpl
jl
sbb
sub
fidivl
in
repnz
insb
cld
cmpb
pop
push
bound
xchg
push
mov
mov
call
xchg
mov
sbbl
or
or
push
xor
cmp
aaa
out
int3
ja
inc
push
in
xor
or
in
add
rcrl
dec
push
xchg
inc
mov
pop
jo
outsb
jp
es
popf
pop
inc
je
lret
push
jne
add
dec
jle
add
ja
push
mov
roll
cmp
repnz
int
mov
mov
shrl
cs
xor
dec
mov
mov
cwtl
xchg
and
notb
push
pop
test
lods
add
push
cmp
xlat
mov
cs
mov
into
mov
cltd
cltd
dec
pop
insl
jl
add
adc
mov
mov
mov
dec
mov
in
addr16
mov
mov
mov
mov
xchg
lock
aad
fcoml
out
sub
mov
inc
sbb
loope
mov
xlat
pop
js
lods
inc
and
push
jmp
dec
rclb
push
mov
insb
mov
movsb
mov
adc
stos
lods
in
sub
jg
fidivrs
jle
pushf
mov
sbb
out
arpl
cs
push
jb
test
out
adc
add
aad
lods
lret
pop
sub
push
jbe
clc
scas
sbb
sti
popf
adc
lods
add
sub
pop
das
pop
cmpsb
mov
jno
push
mov
shlb
call
xchg
sbb
faddl
cmp
add
sbb
adc
aam
and
cmp
mov
mov
cld
sbb
dec
test
loop
adc
xchg
jge
push
pop
pop
cwtl
adc
and
into
movsb
adc
js
imul
das
push
rorl
inc
xchg
out
or
cmpb
push
shll
roll
lcall
sar
fs
ficomps
xlat
mov
mov
push
adc
or
jge
xchg
push
fadd
data16
push
sub
xchg
pushf
fdivr
adcb
xor
and
pop
scas
test
movsb
cli
call
mov
xchg
scas
jns
jns
loop
cltd
inc
jle
pop
das
cmp
lcall
xor
sbb
xor
inc
sub
pcmpeqb
lods
jno
dec
cmp
inc
data16
fsubrs
pusha
mov
das
fiaddl
out
je
lods
loope
nop
test
adc
dec
adc
jg
cmpsl
xchg
xor
test
or
in
cmp
dec
or
outsb
andb
cli
inc
add
xchg
xorl
ret
stos
pop
leave
xchg
jae
out
mov
dec
pop
jp
loope
and
mov
push
lock
push
cmp
scas
add
cli
and
adc
push
call
mov
sbb
lret
leave
ffreep
lods
aam
xchg
xor
pop
cmpsb
loop
xor
sbb
push
xchg
add
xchg
jecxz
adc
out
out
mov
negb
jb
mov
adc
test
or
movb
sbb
jns
push
sbb
sarl
xchg
push
adc
cmc
int
stc
xor
mov
inc
push
pop
pop
jl
aas
push
pop
jl
mov
cmc
subl
xchg
or
cld
bound
clc
adc
insl
dec
or
mov
cli
rorb
lock
xor
mov
dec
xor
decl
mov
cmp
lahf
mov
outsl
inc
les
jnp
scas
or
sub
and
mov
inc
or
lea
imul
or
repnz
xor
mov
call
subl
lcall
add
jmp
jnp
in
mov
lcall
cltd
sub
js
sub
ds
jbe
xchg
xchg
rcrb
xor
xchg
cmp
pop
les
lcall
and
pop
inc
xchg
lret
ret
into
push
int3
mov
test
push
loopne
lods
lret
adc
jnp
fst
lods
and
cwtl
lock
or
jge
cmp
mov
lds
mov
fwait
xchg
jnp
rcrb
out
push
bextr
adc
jo
sub
test
jmp
testb
cmpsl
pop
add
cwtl
push
or
leave
push
add
xchg
movsbl
inc
inc
fisttpl
push
rolb
push
int
subb
insb
inc
mov
inc
adc
sbb
fisttps
mull
sbb
fldl
pop
xorl
mov
stc
jp
clc
xchg
mov
ljmp
mov
mov
sti
push
bound
cltd
cmp
pop
out
cmpsb
and
jl
jb
out
jmp
inc
scas
repnz
cmp
outsb
test
stos
mov
cld
mov
hlt
lock
shlb
pop
mov
clc
outsl
inc
rcrl
adc
xor
cmp
fsub
push
orb
push
repnz
lods
and
dec
sbb
mov
insb
lret
push
mov
repnz
xor
repnz
stos
mov
mov
sbb
jno
int
divl
clc
sbb
test
xchg
adc
testl
int
test
xchg
orl
scas
or
adc
inc
outsl
xlat
jnp
mov
dec
js
outsl
jp
stc
sbb
pop
sub
ljmp
inc
cld
fisubl
lret
jle
xlat
nop
jge
popf
fcoms
inc
ja
push
into
loop
leave
imul
jno
stos
jg
bound
mov
jl
aaa
pop
mov
cmp
mov
clc
mov
sbb
push
mov
icebp
ret
or
imul
lret
push
mov
das
mov
adc
adc
bound
xor
mov
push
dec
shrl
mov
iret
lods
testl
enter
gs
mov
jo
fdivrs
jbe
int
adc
inc
cmp
cltd
push
pop
adc
int
mov
mov
jl
lods
call
adc
adc
add
sub
loope
leave
in
sar
mov
add
or
mov
stos
es
cmp
repnz
mov
mov
in
adc
xor
repz
mov
in
popa
push
add
lods
push
mov
push
test
les
cmp
popa
push
cmp
inc
mov
lods
xor
jne
sub
jns
cmpsl
and
lcall
int
dec
or
sti
inc
notb
push
popa
hlt
cmp
add
imul
pop
dec
add
pop
push
inc
fisttpl
mov
aaa
jbe
fmull
push
mov
xchg
sub
mov
sbb
cmp
pop
dec
inc
in
lahf
out
pushf
in
xlat
pop
mov
mov
out
fcmovb
mov
mov
or
loop
dec
pop
lock
jmp
dec
sti
pop
mov
lret
lahf
int
xor
sub
popf
flds
jl
popf
push
ljmp
inc
cltd
mov
xlat
out
into
scas
xchg
arpl
je
arpl
lahf
pop
ficoml
mov
std
movsb
xchg
sbb
push
jmp
pop
jge
lea
jl
lcall
add
push
lcall
aad
dec
imul
out
cmp
mov
push
loop
popa
and
arpl
lcall
push
cli
je
mov
daa
addl
sbb
xor
cmpsb
cli
icebp
pop
add
xor
cmp
subb
out
sub
pop
xchg
aam
mov
push
cmp
not
add
out
mov
outsl
addr16
decb
js
or
dec
fcmovnu
negb
jnp
inc
lahf
mov
jmp
add
std
inc
mov
scas
decl
pop
or
cmp
pushf
xor
stos
dec
scas
loopne
sub
lods
pop
fs
arpl
inc
mov
jnp
fisubrs
xchg
cmpsb
test
push
orl
xchg
aas
shll
mov
or
test
mov
sbb
lods
xor
dec
enterw
xor
stc
ret
mov
lret
stos
fs
mov
inc
adc
int
test
lret
popa
cmpsb
push
loope
dec
cli
pop
cmp
mov
dec
pop
inc
and
in
jne
sub
jbe
cmp
dec
dec
repz
or
scas
fiadds
insb
mov
fidivl
addl
add
and
push
fwait
xor
inc
jb
dec
mov
push
add
and
lcall
xchg
cld
stos
in
mov
ret
ljmp
cmp
mov
imul
sub
mov
repz
popf
mov
jmp
shl
xchg
add
and
mov
lock
je
inc
jecxz
push
into
jmp
or
pop
sub
dec
js
xchg
xchg
in
inc
and
sub
sbb
jp
cmc
jge
sbb
add
jg
mov
das
ds
pop
or
mov
adc
lea
fdivrs
repz
je
shrb
jno
aad
aam
lds
mov
fldt
out
xchg
ret
lock
cmp
sbb
dec
fwait
ss
mov
and
cli
leave
or
int
xor
testl
ffree
adc
lock
mov
pushf
sbb
cmpb
push
notb
inc
adc
push
in
mov
sar
sbb
inc
in
insl
mov
mov
adc
stos
cs
mov
pop
pop
fldl
mov
sub
and
and
dec
add
adc
xchg
fisttps
movsb
les
mov
lds
push
call
sti
add
sub
push
push
jl
mov
push
mov
rcr
idivl
in
xchg
data16
mov
popa
and
jmp
push
arpl
jmp
sbb
dec
xor
jbe
stc
pop
push
fwait
sub
mov
nop
outsb
pop
cmpsb
jbe
push
xor
adc
dec
popf
push
mov
xchg
outsl
popf
sub
xchg
jmp
push
jne
adc
pop
cmpsb
jno
das
nop
adc
adc
push
je
fdivr
imul
xor
xor
push
int
push
scas
xchg
xlat
push
nop
xor
xlat
push
sbb
or
nop
repz
sbb
fldcw
iret
xlat
and
dec
lock
cld
sub
push
dec
loop,pn
lret
lret
iret
mov
xchg
sub
out
in
loop
and
or
push
es
les
push
mov
mov
xchg
xor
push
inc
stos
pushf
fdivrs
inc
pushf
mov
mov
std
test
cmpsl
mov
mov
dec
std
je
cmc
mov
pop
rclb
push
xchg
push
mov
sahf
in
add
mov
pusha
add
pop
dec
jmp
xor
xor
call
cmp
stc
into
dec
scas
dec
push
test
out
jg
inc
lock
js
add
or
insb
pop
sub
fldt
dec
pusha
imul
mov
and
cld
push
adc
xor
call
jae
sbb
lods
push
ret
call
flds
movsl
cmpsb
sub
xchg
jecxz
and
ja
adc
push
mov
or
adc
scas
cmp
popa
inc
mov
pop
mov
lret
jg
cmp
jle
mov
popf
sbb
cwtl
add
push
scas
mov
add
mov
lret
add
inc
dec
xor
fbstp
clc
stc
mov
in
add
data16
pop
aaa
pop
jns
fidivl
pushf
push
outsb
cmpsb
inc
mov
popa
das
xchg
test
mov
push
jle
xlat
out
int3
arpl
jl
push
sbb
xchg
xor
sub
lods
ds
xlat
daa
or
adc
cmp
xor
or
push
stos
mov
and
pop
sbb
mov
xchg
out
stos
sbb
out
mov
mov
jmp
roll
outsl
inc
xchg
loop
jp
sahf
mov
pop
jl
test
lds
inc
outsl
lcall
mov
pop
dec
fldt
sbb
or
or
out
vpmulhw
adc
and
inc
xchg
fs
sub
jecxz
lret
mov
adc
sbb
xchg
mov
rorl
add
adc
add
sti
mov
test
roll
sbb
lock
ljmp
jl
jge
out
rep
cmc
stc
cmp
shr
mov
aas
push
mov
enter
mov
xor
jmp
call
push
aas
dec
cmp
cmc
and
in
mov
dec
mov
mov
jae
in
push
jecxz
dec
push
push
lods
sub
stos
mov
mov
cmp
popa
xor
ret
inc
hlt
inc
cmpsb
cltd
sar
cmc
les
repz
adc
xor
sub
cmp
int
inc
test
jecxz
mov
fiaddl
cld
ret
fsts
fdivrl
lahf
and
push
rcrb
mov
mov
call
sbb
jnp
xor
cmpsl
rcl
and
pop
mov
test
cmp
adc
out
ljmp
movsb
mov
fs
push
into
pop
pop
outsl
xchg
xchg
dec
int3
jb
adc
mov
xchg
negl
arpl
arpl
out
pop
in
loopnew
push
and
rorl
scas
cmc
pop
mov
pop
movsb
sahf
inc
mov
lret
mov
ja
jns
stos
out
enter
lds
in
fs
fmull
pop
ret
negl
or
fidivrl
imulb
test
sbbb
clc
notb
or
pop
sbb
cmp
push
pushf
jge
sbb
std
imul
mov
shlb
xor
jge
cltd
adcl
loop
flds
mov
stos
lods
cmpsl
negb
movsl
pop
adc
mov
hlt
cmp
add
push
jmp
imul
ret
pop
addr16
nop
dec
mov
addl
sbb
jb
or
pop
scas
cld
add
add
sub
scas
sub
fmul
clc
je
out
sub
outsb
sbb
mov
mov
mov
insl
xchg
push
adc
les
jl
add
int3
pop
pushw
mov
aad
jmp
jp
ja
push
xchg
psrlq
push
inc
mov
jecxz
push
xchg
pop
icebp
stc
push
lods
cmp
inc
mov
adc
jb
lret
adc
mov
hlt
clc
stos
dec
adc
mov
inc
mov
filds
dec
loop
sub
push
cmp
std
cmp
sbb
fcmovb
adc
stos
xor
fwait
sbb
lods
dec
add
fldenv
repz
mov
faddl
sbb
mov
scas
fwait
cld
adc
fstl
hlt
xor
pop
lcall
sarl
sub
outsl
aas
push
lds
xchg
push
push
scas
out
addl
ret
push
lds
sub
fcmovnu
jg
das
loop
inc
sti
fidivrl
nop
mov
push
mov
jbe
mov
ss
js
fisubs
jge
mov
stc
fwait
xchg
shlb
cmp
lahf
sbb
add
push
pop
mov
pop
fs
shr
mov
loope
mov
xor
inc
stc
cltd
push
movsb
icebp
cmpsl
roll
adc
scas
adc
stos
sbb
add
jp
aas
xchg
andl
sbb
nop
inc
xchg
sbb
out
gs
aam
sub
aad
or
inc
dec
imul
cmp
mov
stos
add
pop
or
cmp
sbb
mov
sti
out
mov
movq
mov
mov
call
sahf
mov
ret
or
xchg
les
es
mov
mov
sub
xchg
decl
rcr
mov
xor
leave
sbb
and
movsb
push
icebp
test
adc
mov
jns
sub
popf
les
and
jl
es
sbb
push
int3
adc
pop
jno
mov
jno
es
sbb
leave
add
dec
iret
or
setno
mov
outsl
in
dec
das
mov
daa
pushl
pop
jns
insb
jl
dec
test
xor
in
mov
test
mov
cmpsb
add
mov
cmpb
pop
fdecstp
std
cmpb
dec
and
adc
call
adc
and
out
fistpll
jo
dec
or
mov
es
jb
aaa
sbb
xchg
mov
adcb
imul
mov
sahf
cmpsb
or
jmp
mov
lds
add
mov
adcb
jge
and
icebp
call
pop
mov
xor
dec
cli
int
sub
jno
jb
lods
in
loope
in
push
fimuls
sahf
xlat
pop
ljmp
in
mov
and
nop
push
mov
test
movsl
push
xchg
mov
adc
sub
sub
rcll
and
inc
push
jge
setp
jmp
cli
hlt
add
or
mov
and
pop
add
or
and
adc
loop
pop
cmp
lret
mov
into
xchg
popa
pop
imul
into
int
imul
pop
out
mov
and
dec
sub
mov
mov
adc
cmp
dec
sbb
addr16
icebp
mov
mov
test
imul
lret
inc
popa
data16
femms
mov
xor
xor
adc
lds
fcomps
mov
and
cltd
mov
sahf
and
cmp
dec
ret
jmp
xchg
mov
ds
mov
insl
into
lahf
stc
imul
test
adc
cmp
js
rcll
xor
lret
aaa
aad
loopne
or
adc
jnp
das
pop
adc
sub
sub
vpsrld
lahf
push
loopne
jl
cmpsl
std
icebp
incl
cwtl
push
fistps
pop
or
xor
les
cmp
out
lret
and
outsb
data16
mov
shl
arpl
push
cmpl
xchg
divl
hlt
cmp
push
inc
jb
mov
stos
fbstp
imul
dec
aaa
push
inc
clc
sub
mov
mov
or
jmp
je
movsb
insl
jmp
jp
inc
test
push
pop
lcall
dec
dec
dec
cs
inc
adc
push
leave
sbb
mov
fisubrl
aad
and
pop
arpl
inc
push
sub
pushf
insl
and
lods
mov
mov
lea
daa
sbb
mov
stc
out
push
ja
in
test
cs
cmp
adc
lret
cmp
std
out
out
ror
xor
sahf
inc
outsb
mov
mov
dec
insl
popf
mov
scas
jae
ret
mov
out
fstpl
cld
movsl
lds
aaa
es
cmp
adc
sub
dec
frstor
jns
jecxz
inc
push
mov
push
pop
stc
addr16
pop
repnz
push
sbb
call
lods
and
pop
rcrl
xchg
ss
jp
ss
add
mov
sbb
pop
push
jmp
and
jae
repnz
gs
xor
es
jbe
jge
ja
mov
dec
ss
cmpsl
out
jecxz
or
mov
outsb
f2xm1
rorl
scas
std
xchg
cltd
test
cli
dec
testb
out
lock
jo
mov
loope
jnp
jmp
and
pop
fwait
sti
sub
mov
ja
mov
dec
lahf
fsts
out
int3
jg
cmp
add
addr16
inc
xorb
pop
mov
xchg
fidivl
or
xor
inc
loopne
dec
dec
push
adcb
xchg
addr16
xchg
mov
inc
mov
loopne
inc
cmp
lret
loopne
sbb
jp
adc
xchg
adc
les
fst
pop
jmp
ss
and
les
jge
lcall
xlat
aaa
add
pop
movsl
movsl
sbb
hlt
mov
aaa
sub
hlt
mov
fnstcw
mov
cs
dec
pop
gs
jle
dec
stos
pop
mov
cmp
jae
js
and
mov
insl
out
lods
pop
mov
subb
lock
jle
jg
and
js
ss
mov
xchg
mov
ja
pushf
xor
enter
shrl
ret
sbb
cli
xchg
jecxz
lds
enter
in
adc
fcoms
jl
shrl
adc
inc
bound
jae
loop
mov
arpl
dec
mov
sti
push
pusha
mov
jb
lods
dec
fdiv
and
aad
inc
or
scas
or
les
mov
lods
inc
popf
les
ss
jbe
enter
int3
push
adc
dec
ds
or
imul
dec
sarl
pop
ret
lds
ds
adc
rorb
add
inc
xchg
pop
sahf
les
add
test
jae
stos
std
notl
lcall
lret
inc
push
cmpps
xchg
imul
or
push
loop
clc
fidivrs
jecxz
pop
xchg
cli
jp
jns
ret
xchg
aaa
mov
jg
fwait
inc
loop
bound
aad
cmc
data16
cmp
pop
inc
imul
cmp
cmp
iret
cmp
in
test
loopne
adc
jmp
ffreep
imul
cwtl
cmp
adc
or
mov
add
xor
fadds
xor
xchg
jecxz
jle
repz
out
mov
lods
fs
inc
mulb
inc
dec
in
iret
and
pop
pop
mov
mov
inc
ret
adc
mov
repz
mov
mov
or
in
mov
ljmp
xchg
jmp
or
rol
imul
jecxz
repz
or
pop
test
push
fwait
cld
outsb
jl
popf
and
inc
xchg
sub
out
mov
xlat
xchg
das
xchg
setb
xchg
add
cmpsb
negb
mov
filds
jo
mov
lahf
inc
idivb
cmp
cmp
mov
mov
shrl
xor
sub
lret
jge
xor
push
cmp
push
and
jae
and
push
jne
stos
push
sbb
xbegin
jbe
inc
inc
aam
dec
jns
jb
cwtl
es
repnz
loope
lock
add
or
mov
bound
dec
jecxz
stos
xlat
imul
sbb
ret
negl
and
orl
xchg
cwtl
inc
add
jle
orb
mov
xor
fwait
mov
enter
mov
out
sub
sbb
mov
mov
shr
sbb
pop
into
push
pusha
jge
pop
out
add
jbe
xchg
popa
std
leave
mov
clc
mov
lret
add
sbb
aad
adcl
push
inc
push
into
ret
push
jbe
cwtl
in
in
dec
adc
inc
sbb
int
xor
add
lcall
je
lcall
inc
sub
mov
imul
sub
jmp
sbb
fisttps
dec
inc
cwtl
std
xchg
mov
inc
lods
repnz
or
sahf
int3
iret
ss
pop
cmp
cmp
mov
lcall
test
lea
popl
cli
lret
mov
icebp
jns
sub
jp
add
rcl
ljmp
push
jecxz
pop
or
adc
dec
sub
mov
nop
jl
out
orl
jmp
mov
mov
cmp
adc
lods
pop
sahf
add
mov
popf
rcrb
xor
ret
lods
ss
push
sbb
les
insb
roll
pop
cld
pop
mov
loope
out
popf
shll
ds
mov
adc
loopne
arpl
bound
jecxz
cmp
jg
inc
fcoms
inc
add
lods
sub
cli
adc
and
js
into
or
pop
cmp
sbb
mov
jbe
popa
aaa
inc
dec
mov
imul
pop
gs
pop
sbb
int3
mull
es
mov
dec
fwait
clc
mov
mov
loope
xor
inc
add
adc
push
imul
inc
jecxz,pt
add
inc
aas
mov
lret
inc
xor
dec
jno
dec
mov
or
pop
jnp
xchg
les
lock
mov
out
lret
sub
into
add
pop
shlb
pushf
mov
aad
dec
and
cmpl
add
mov
cmp
pop
pop
out
sub
ret
clc
int3
xchg
pop
imul
mov
inc
mov
mov
jno
and
daa
sahf
daa
or
fcoms
lods
lret
mov
cmc
loope
or
add
in
lcall
cltd
loope
push
out
rolb
xchg
stos
pop
sbb
leave
int
inc
add
nop
xchg
shrb
inc
adc
jmp
mov
ljmp
mov
sub
clc
testb
ja
cmc
jecxz
repnz
bound
rcr
add
int
add
inc
popa
mov
or
dec
add
xchg
sarb
jmp
mov
stc
xchg
fidivl
js
divb
cmpsl
das
push
mov
dec
test
je
or
sub
in
test
call
cmpb
hlt
push
dec
push
cmp
dec
test
out
cmpsl
scas
hlt
jmp
stos
add
outsb
xlat
add
push
popf
or
das
stos
outsl
sub
test
xor
aam
sbb
pop
andb
jae
jmp
rcll
jo
out
add
jle
push
mov
mov
and
incl
mov
sub
sbb
xor
out
cmp
mov
jecxz
xchg
add
leave
scas
and
sbb
mov
inc
push
hlt
mov
mov
sub
add
xor
mov
mov
test
jnp
mov
or
out
sub
adc
bound
sbb
ret
arpl
call
ss
inc
cs
or
dec
sbb
add
cmp
popf
dec
fisttpll
cltd
or
push
cmp
push
adc
pop
sbb
xor
out
out
loop
in
stos
sbb
lahf
push
fwait
mov
dec
cmc
std
es
icebp
popf
xchg
cmp
fistpl
mov
test
xchg
pop
or
pushf
fs
lea
cmp
mov
adc
lret
xchg
cld
xchg
cmc
adc
aad
mov
jae
sub
aaa
cmc
in
stos
mov
lds
or
outsl
sbb
pop
ja
xchg
insb
repnz
xchg
fcomps
mov
adc
daa
pusha
cwtl
pop
mov
lahf
aaa
cmpsb
sub
mov
repnz
jle
inc
adc
mov
push
fsubr
jmp
imul
shr
rcrb
cld
push
xor
dec
out
xor
call
fldcw
pushf
repnz
push
xor
mov
ja
and
xchg
dec
jg
jno
mov
dec
cs
call
repz
cmpsl
ret
fists
cmp
cmc
ficompl
mov
das
jge
xchg
lret
call
js
adc
and
mov
push
and
dec
push
inc
loop
in
rorl
repz
dec
and
fwait
sub
rcrl
mov
jmp
or
xchg
cmp
xchg
push
and
sub
and
sbb
xchg
cmp
ljmp
fcmovnbe
dec
pop
push
sbb
lods
dec
cmp
fcomip
leave
dec
in
stos
stos
or
popa
cmp
xlat
imul
mov
inc
sbb
mov
sub
hlt
sbb
xchg
mov
lock
pop
inc
xor
cmp
xchg
push
dec
xlat
mov
xchg
mov
xchg
and
cli
adc
lods
jo
mov
les
sub
mov
lods
insl
xchg
push
lret
pop
xchg
lods
lret
lret
aaa
les
movsb
dec
adc
scas
fcmovne
mov
nop
out
xor
pop
jb
or
inc
sbb
jne
dec
add
mov
xor
sbb
fwait
ljmp
xchg
sbb
mov
push
lret
outsl
inc
sub
xlat
popa
loope
adc
call
sahf
or
rcrl
push
mov
mov
dec
sub
ljmp
lods
sbb
movsl
lret
or
call
rorb
xlat
dec
lcall
div
jo
inc
lods
cld
fnstsw
sarl
insb
fnsave
dec
jmp
mov
inc
hlt
test
jns
pop
jg
int
jb
shrl
sub
dec
xorl
pop
dec
inc
aad
xor
fs
cwtl
mov
test
scas
or
mov
imul
out
sub
pop
pop
into
mov
sbb
mov
in
int3
dec
cmc
out
jne
inc
push
cmp
je
xchg
mov
hlt
push
mov
mov
out
pop
adc
jg
addr16
fisubs
out
and
or
movsb
aas
lock
sahf
mov
inc
jp,pt
xchg
mov
cs
jl
cli
jecxz
mov
mull
xor
lods
cmc
cmp
movsb
pop
cmpsl
pop
enter
pop
jb
mov
push
mov
ret
fisttps
jbe
jge
sbb
aam
in
cltd
addl
dec
push
lea
and
mov
mov
negl
adc
cmp
sub
fcoms
ss
ss
sbb
push
dec
xor
hlt
int
xchg
cmp
xchg
cmpsb
leave
repz
jecxz
mov
insb
xor
pop
stos
jnp
lret
lcall
pop
in
sahf
xor
xor
pop
mov
cld
sbb
fmulp
cmc
dec
into
xchg
push
mov
xchg
add
jb
xchg
out
in
mov
mov
hlt
and
add
dec
cmpsb
out
call
jge
mov
cmp
lds
mov
mov
mov
and
mov
mov
xchg
xchg
fsubl
sbb
mov
test
cmc
jg
dec
movl
adcl
dec
int3
das
lcall
mov
dec
lcall
and
mov
push
fbld
addr16
dec
push
inc
pop
cwtl
pushf
sub
xor
in
mov
or
sub
repnz
sahf
sbb
inc
cld
pop
pop
mov
mov
notb
loope
cmp
jns,pt
xchg
pushf
in
cmpsl
xor
xchg
rcrl
cld
enter
aad
dec
jb
adc
arpl
aad
sbb
jecxz
jno
and
out
mov
stos
ret
jge
mov
movsb
xchg
inc
pop
es
xchg
dec
xchg
xor
and
jmp
inc
mov
pop
es
adc
xor
lds
ficoms
or
out
add
sub
xor
inc
arpl
outsl
mov
lahf
add
mov
scas
cs
jmp
dec
fdivr
ljmp
push
iret
je
jl
push
lods
and
idivl
lahf
push
mov
out
popa
sub
mov
cmp
jge
je
jnp
ljmp
inc
xlat
popf
into
pusha
jbe
imul
and
sbb
addr16
push
hlt
mov
arpl
sbb
sbbb
dec
mov
scas
jg
sbb
test
mov
dec
sub
les
into
ljmp
repz
xlat
movsl
mov
mov
push
add
sub
hlt
adcl
sbbl
mov
inc
adc
lahf
sbb
adc
jae
jecxz
cmp
arpl
aas
pop
pop
xor
imull
and
xchg
pop
in
xor
es
or
inc
sti
and
and
and
push
jle
scas
sbb
mov
aas
mov
pop
sbb
sbb
mov
test
inc
fldenv
shll
xor
inc
dec
xor
jae
or
xchg
data16
arpl
adc
inc
stos
cli
cs
xchg
in
or
ja
lds
shll
fisubrs
repz
jnp
out
and
sub
std
push
dec
inc
mov
lods
xor
add
pop
xchg
dec
sub
push
mov
popf
or
jne
repz
pop
ficoml
shl
mov
xchg
repz
leave
xchg
lds
out
addb
ret
es
mov
js
pop
out
sti
aam
mov
test
dec
xchg
enter
push
mov
or
mov
scas
rcrl
mov
pop
je
lret
jmp
outsb
test
add
mov
xchg
mov
xchg
pushf
jne
iret
sbb
cmc
inc
scas
lods
outsb
test
pop
xor
das
fistpl
ja
leave
js
jne
or
xor
stos
cld
fwait
sub
leave
or
sub
movsb
pop
into
jp
xchg
xor
inc
dec
jmp
loope
push
insb
jle
arpl
nop
jg
out
test
push
jne
repnz
js
pushf
cli
mov
ret
add
adc
mov
aam
dec
je
or
push
or
xor
push
sub
addr16
movsb
in
push
dec
frstor
stc
pushf
add
movsl
push
sti
test
dec
ret
fsubl
stc
gs
cmpsb
lock
aas
std
decl
mov
dec
filds
jecxz
stc
jne
cli
pop
lcall
xor
cltd
ja
in
lret
dec
test
lock
adc
repnz
data16
cmpsb
sbb
jae
add
mov
add
xchg
jns
dec
mov
mov
cmc
call
sub
addl
negb
cwtl
pop
xor
xchg
sub
aad
or
mov
lods
cmp
cltd
sbb
push
cmpsb
enter
sub
lock
les
push
jg
mov
aad
mov
inc
aaa
test
loopne
push
mov
inc
out
in
clts
aam
cmp
adc
mov
or
dec
or
enter
jecxz
sti
push
repz
add
cmpsl
dec
xchg
imul
mov
xchg
rolb
aad
pop
in
sahf
ljmp
call
imul
cmp
cmp
and
adc
out
adc
fsubs
jle
out
jne
shrl
adc
xchg
cmp
rorl
sbb
insl
popf
jnp
iret
insb
dec
int
lret
ss
in
mov
aam
nop
pop
outsb
jmp
dec
fisttpl
pop
sub
add
jno
lahf
cwtl
push
std
das
call
rolb
mov
movsb
test
adc
rcll
sbb
mov
repz
jns
insl
add
pushf
inc
enter
dec
xchg
inc
loop
fstl
jmp
fisubrl
pop
jmp
enter
movsb
iret
gs
fimull
ret
jg
std
imul
push
adc
clc
shl
cmpsl
adc
fsub
mov
push
adc
cld
dec
es
sub
jae,pt
fsubs
mov
push
jmp
mov
sub
fcomip
and
iret
fs
mov
and
ljmp
xchg
test
arpl
add
mov
cmp
cmc
lods
popf
scas
xchg
push
jbe
xchg
lret
jnp
adc
push
sub
push
sbb
cwtd
adc
lock
ljmp
shll
jmp
add
push
out
xchg
jecxz,pt
adc
popa
mov
fwait
ljmp
add
mov
sub
mov
and
cmp
push
mov
jbe
mov
adcb
jge
xor
adc
push
jecxz
fisttpll
sub
fsubrs
mov
movsb
lret
sbb
pop
push
inc
jnp
in
dec
sub
loopne
inc
call
or
fwait
xchg
cld
mov
jae
lock
div
xlat
pop
and
out
inc
out
out
incb
mov
sbb
jnp
jbe
xorl
inc
testl
inc
sbb
imul
inc
add
flds
xor
pop
or
addr16
adc
mov
repz
sbb
add
jmp
dec
lahf
imul
inc
jge
test
dec
jl
fwait
add
and
das
ret
hlt
daa
insl
jle
mov
lods
andl
pusha
nop
pop
ss
pop
icebp
mov
cs
mov
and
test
imulb
jnp
add
imul
mov
ja
movsl
cmpsb
or
out
test
mov
mov
arpl
popf
movsb
adc
xor
divl
andl
push
cli
xlat
pusha
sub
mov
pop
fsts
jecxz
sub
and
mov
outsl
xchg
lock
adc
push
xchg
gs
mov
xchg
stc
sbb
insb
or
pushf
jp
push
or
cmp
shll
add
adc
aad
cmp
and
cld
xor
dec
push
inc
mov
xchg
int3
cmpsb
data16
in
sbb
jnp
mov
dec
push
mov
add
pop
dec
push
push
sbb
xchg
or
sbbb
fcompl
jo
movsl
dec
jg
inc
inc
mov
clc
sti
gs
add
pushf
outsb
scas
mov
pop
popf
test
mov
or
fdivs
dec
cld
rcl
das
lods
dec
add
mov
sub
push
fldt
cld
push
into
sbb
addr16
enter
shll
mov
hlt
mov
cmp
or
popa
cli
fistpll
and
lods
add
arpl
mov
das
jno
shll
xor
popa
cmp
hlt
lock
sti
xchg
push
adc
mov
subl
jp
aaa
xor
fwait
xor
sub
mov
dec
jnp,pn
sub
rcll
hlt
rcr
push
or
push
dec
sub
push
std
or
test
push
dec
arpl
adc
popa
push
movsb
dec
shrl
inc
jbe
aas
add
jns
inc
aas
xor
lcall
mov
pop
pop
and
das
loopne
ror
lret
adc
adc
sub
and
or
mov
addr16
mov
xchg
add
ret
fsubrs
sub
sub
cmpsb
xchg
je
cwtl
les
cs
repnz
sbb
adc
xchg
jb
adc
idiv
mul
int3
cmpsb
xlat
shrb
lret
xchg
lods
idivl
xchg
arpl
xchg
je
sarl
sbbb
std
fwait
test
mov
loope
add
xor
inc
jmp
sbb
mov
lods
iret
aad
or
xchg
jmp
xchg
jo
cld
sub
cltd
leave
push
sbb
pop
cs
insl
test
xchg
ss
divl
jecxz
jns
scas
lea
neg
repz
mov
dec
loopne
push
popf
cmc
sbb
imul
xchg
call
cmpsl
test
xor
je
mov
add
jge
imul
loope
test
sbb
fimull
add
insb
insb
int3
arpl
ret
into
mov
call
adc
jno
test
sahf
lock
clc
and
mov
xor
nop
in
scas
inc
movsb
orb
inc
insl
in
sbb
jmp
add
and
mov
push
sub
jb
xor
dec
xor
ficomps
jne
or
or
or
xlat
les
sub
inc
and
aad
mov
sub
aaa
jnp
jecxz
rcrb
pop
inc
jge
pop
sbb
cmovp
sti
int
or
sbb
and
sub
dec
lcall
inc
inc
stos
pusha
and
std
dec
shll
xor
cmp
pop
insl
ret
movsb
pushf
adc
ret
bnd
xchg
es
stos
out
aaa
pop
shlb
cmpsl
mov
rorl
push
lret
cmp
xchg
loopne
jnp
aad
in
test
mov
das
fildl
jnp
jo
pop
jle
daa
in
cmp
std
insl
jb
inc
inc
fstpl
daa
or
mov
nop
mov
popa
pop
adc
mov
jl
and
loope
in
daa
sub
les
xor
jo
sub
adcl
mov
imul
pop
mov
mov
sbb
shrl
aaa
or
sbb
xchg
mov
ljmp
test
lret
fidivs
les
lahf
rcrb
push
xor
loopne
push
adc
pop
xchg
cmpsb
ja
sti
mov
pop
jnp
jnp
pop
outsl
xchg
cmp
inc
cwtl
add
mov
inc
outsb
arpl
es
aaa
sahf
add
hlt
mov
push
iret
dec
xor
inc
scas
shr
lret
fwait
mov
ja
rcll
add
inc
xchg
movsl
je
and
dec
and
rclb
inc
ds
adc
inc
or
nop
mov
insb
pop
fwait
dec
mov
ja
jmp
dec
pop
xor
adc
sbb
fnsave
in
adc
cmpsl
in
xor
mov
dec
xor
jb
mov
iret
mov
sbb
push
bound
inc
sbb
ret
push
mov
movsl
js
mov
roll
xchg
aas
bound
xchg
push
or
adc
pop
mov
movsl
pop
mov
fsubs
jp
dec
dec
stc
cmp
xchg
sar
sub
cmp
bound
mov
movsl
push
lock
daa
mov
mov
xchg
fdiv
sbb
testb
sbb
push
push
lcall
mov
rcr
arpl
outsl
sahf
test
cmpsb
pop
push
pop
outsb
call
push
adc
nop
push
cli
cmpsw
xchg
jae
sub
pusha
in
in
cmc
bound
pop
andb
jae
subb
mov
imul
lock
cmp
faddl
and
js
pusha
shrb
test
mov
cmpsl
dec
inc
xor
fnstsw
mov
inc
lret
fildll
add
lds
or
cld
addb
cmp
jne
mov
adc
test
fs
adc
mov
pop
fstps
mov
jbe
cmp
mov
sahf
push
daa
in
sub
xor
sub
test
pop
sarl
clc
test
fisubs
cmp
jp
sbb
sbb
pusha
fiaddl
outsl
pop
inc
pop
mov
test
je
mov
add
sbb
push
jmp
lods
sub
int
jp
out
and
jb
and
stc
aas
jo
imul
inc
lods
cmpsl
pop
add
testl
jnp
sbb
pop
jle
aaa
insl
dec
adc
cltd
mov
jae
pop
outsb
mov
pop
sbb
fwait
mov
pop
dec
or
orl
mov
popf
inc
addl
ret
mov
xor
push
add
cli
push
cltd
add
and
lods
cmpb
pop
out
dec
cmpsb
sbb
or
cmpsb
push
mov
aad
repz
inc
inc
inc
cmp
xchg
into
dec
lahf
fdivl
or
lds
dec
popf
out
test
lods
out
negb
inc
int3
cmp
add
aam
cwtl
jae
mov
xchg
int3
pop
mov
xchg
cmp
fnsave
in
and
fistps
jns
movb
or
dec
xchg
xchg
push
stos
and
sub
das
sti
nop
test
cli
or
jne
mov
stos
pushf
popf
push
aam
cmp
iret
ja
adc
pop
ljmp
cmp
jbe
pop
sub
fisubrl
test
push
xchg
pop
outsb
sub
mov
leave
sbb
mov
stc
and
incl
cmp
add
xchg
lock
ret
mov
cmp
mov
fdecstp
lods
xor
mov
pop
fldlg2
jmp
or
mov
mov
loop
pop
jge
repz
lcall
leave
in
add
ljmp
adc
mov
jns
adc
mov
xchg
jne
test
pop
loop
mov
dec
jecxz
xchg
ja
pop
jl
and
cmp
data16
pop
call
jge
add
xchg
adc
jne
push
adc
sahf
jno
mov
inc
fldenv
mov
mov
mov
nop
movsb
xor
clc
and
cltd
shl
mov
testl
ljmp
ret
mov
add
push
cld
jb
adc
js
lds
or
xor
dec
clc
mov
mov
pop
ja
pop
popf
cwtl
xlat
lock
movsl
add
mov
ss
imul
call
addb
mov
lahf
repnz
mov
cmc
sbb
mov
mov
ljmp
push
mov
mov
ret
jne
dec
ss
jns
push
cwtl
or
bound
rorl
lahf
cmp
cmovns
daa
testl
jno
xchg
pop
push
jo
and
cltd
pop
fcomps
ss
mov
sub
leave
cwtl
mov
test
pop
pop
sub
jno
iret
mov
mov
xor
ss
jl
cld
mov
and
push
in
dec
mov
dec
cmp
add
xor
fs
jbe
xchg
pop
fistl
push
push
fldt
push
addr16
cmp
incb
movsb
dec
stc
lret
adc
pop
js
mov
out
mov
mov
inc
push
pop
icebp
leave
mov
push
xchg
inc
movsb
add
sbb
mov
sub
in
mov
xchg
xor
fdivrp
jns
lea
jbe
pop
std
push
pop
jle
jae
aad
int
js
stc
aad
push
aam
sahf
sub
aad
lahf
sub
mov
sub
inc
daa
adc
lods
xchg
je
sti
mov
and
and
sub
call
int
shr
xor
xor
fsubrs
cmp
jecxz
push
xchg
add
test
pushf
cmpsl
fcmovne
jb
lock
sub
xchg
sbb
stos
addr16
fldl
lods
mov
insl
ret
or
scas
mov
popa
leave
xor
and
or
sub
mov
ret
fwait
mov
fisttpl
in
js
jle
inc
movsb
dec
mov
je
rorb
out
fmull
xor
repnz
or
inc
cmp
cmp
sbb
cmp
pop
mov
scas
into
pop
sbb
sub
pop
imul
mov
rcrb
inc
pop
int3
add
scas
fsubrp
std
lret
adc
fistpl
and
js
and
push
loope
inc
test
xlat
imul
jmp
pop
or
xor
fisubrl
sahf
sbbl
push
dec
leave
lds
or
inc
test
jbe
or
int3
fildll
or
sti
shlb
xchg
icebp
mov
add
push
mov
mov
movsb
cmpl
sti
imul
daa
repz
inc
sahf
adc
cli
push
test
pop
loop
xchg
cltd
dec
in
mov
pop
icebp
les
hlt
sbb
cmpsb
jb
test
push
adc
jle
bnd
xchg
or
rclb
movsl
mov
lock
rcl
xor
jno
lret
jae
xorb
xor
arpl
xchg
imul
das
adc
mov
addr16
pop
sti
mov
jb
xor
jp
dec
sbb
or
addb
jns
nop
sahf
enter
hlt
mov
lock
mov
mov
and
cli
mov
xor
call
jmp
and
fucomip
xlat
rcrl
pop
test
xchg
leave
mov
add
jnp
inc
mov
sahf
push
pop
inc
and
xor
mov
push
xor
push
enter
data16
stos
cmp
inc
sub
out
xor
mov
out
inc
jle
bound
xchg
adc
jno
mov
inc
jmp
xchg
jmp
and
insb
jmp
aam
dec
xlat
inc
mov
lcall
or
or
fimuls
xchg
mov
or
push
repnz
in
out
and
jge
iret
cmp
pop
cltd
in
pushf
ror
mov
mov
cmpsb
mov
loope
pop
dec
dec
iret
jae
ja
fmull
push
inc
cmp
idivb
lret
cmp
sti
sarb
int3
mov
mov
aad
test
cmp
mov
push
insl
dec
fiaddl
jae
popf
aaa
inc
std
mov
nop
jl
sbb
push
cld
mov
lods
aad
xor
xchg
xor
mov
or
and
cmp
push
lods
fucom
jbe
cmpsl
call
daa
and
test
add
cwtl
cltd
mov
adc
sub
mov
in
dec
xchg
cmp
sbb
shlb
stc
ja
mov
insl
or
mov
xlat
inc
xchg
das
xchg
ljmp
imul
sbb
mov
or
shr
inc
inc
insb
dec
pop
mov
call
xchg
cmp
add
fs
push
scas
add
mov
lods
mov
inc
sbb
mov
rcrl
inc
daa
adcb
dec
sbb
cmp
sub
push
mov
repz
push
xor
jne
movhps
xor
daa
push
std
stos
scas
movsb
inc
mov
leave
pusha
push
xor
jnp
test
js
mov
sub
push
add
and
and
xchg
cmpsb
mov
inc
stos
xchg
or
fwait
out
popa
scas
mov
adc
dec
add
lods
loope
inc
cmpsl
out
push
das
push
inc
inc
xchg
bound
stc
rorb
int
push
push
mov
loopne
push
inc
inc
aad
cmp
pop
cmp
frstor
xchg
enter
push
lods
xchg
jae
mov
sub
jp
les
mov
inc
sbb
mov
subl
jnp
mov
test
das
arpl
and
cmp
xchg
inc
ds
notl
loop
inc
out
lock
adc
loope
popa
sub
jbe
or
insb
shrb
cld
lret
pop
sbb
xor
inc
xor
mov
imul
add
mov
out
dec
aas
mov
add
sbb
lock
pushf
pop
fcoms
mov
popa
les
adcl
dec
aam
jno
xchg
sbbb
enter
sub
push
inc
imul
jae
or
cltd
cld
jnp
addb
mov
sbb
popf
push
addr16
mov
sub
stc
shrl
add
jae
test
jge
stos
sub
push
sub
jmp
mov
lret
shll
xchg
rcll
repz
add
loope
mov
adc
gs
xor
push
adc
aaa
pop
xor
rcl
out
jmp
add
cmp
dec
jmp
cmc
and
inc
lcall
movsl
into
cmpsb
loopne
div
mov
and
mov
cmp
mov
mov
test
pop
mov
push
iret
dec
adc
cmpsb
int
das
das
outsl
adc
int
shlb
pop
sub
mov
mov
inc
movsl
mov
popaw
sub
jp
in
ret
out
leave
mov
stc
movsl
js
mov
shlb
shrb
cmpsl
inc
adc
movsb
sar
es
mov
gs
mov
loope
loopew
jl
xor
lea
mov
test
sub
jg
or
jle
and
cmc
jno
out
push
aas
mov
mov
and
push
xchg
fsubrs
xor
pop
movsb
jno
shlb
mov
loopne
data16
testb
pop
clc
fs
lds
inc
sub
or
lock
mov
repz
ret
mov
daa
push
push
pusha
pop
adc
cwtl
mov
inc
sub
mov
outsl
sbb
and
push
out
inc
dec
inc
lea
rcll
adc
cmpsb
imul
stc
jae
sbb
xor
sti
pop
jle
movsl
rep
stos
icebp
jg
push
and
adc
pop
sarl
int
stos
and
loope
mov
imul
imul
aaa
aad
rclb
cmc
mov
aas
nop
int3
sbb
adcl
adc
add
xlat
adcl
pusha
adc
arpl
gs
outsb
xchg
loope
ja
sbb
mov
dec
test
imul
sbb
mov
fstl
push
mov
movsl
loope
into
mov
pop
test
cli
push
mov
stc
sub
xchg
setbe
cld
jg
outsb
dec
dec
mov
sbb
in
loopne
hlt
cld
in
inc
xlat
push
mov
cmp
push
pop
cmp
das
repz
repnz
mov
je
pop
testb
adc
aam
das
nop
mov
fisubrl
fdivrs
jl
xchg
xchg
loop
push
ds
add
sbb
and
push
push
addr16
fnstsw
and
call
and
and
and
jnp
pop
add
jne
lds
pop
add
pop
push
and
push
sahf
out
out
jno
push
sbb
sarb
dec
scas
aad
inc
xchg
and
popf
fwait
mov
insl
cmp
mov
shlb
dec
adc
xchg
or
in
jg
out
daa
ja
pop
pop
sbb
xchg
cs
lods
int
jns
jo
inc
push
push
inc
add
ljmp
mov
in
scas
mov
lret
pop
push
xchg
ret
mov
imul
loop
adc
push
cmp
jnp
sub
push
push
loopne
aaa
mov
loop
aaa
in
jnp
rsm
pop
and
repnz
test
das
mov
stos
leave
int3
jg
cmc
in
and
es
repnz
ror
sahf
mov
lahf
xchg
mov
repz
push
sahf
push
inc
imul
xorb
mov
les
push
ss
cmc
hlt
and
add
insl
xlat
pop
sbb
mov
in
sbb
add
sub
inc
mov
int
mov
mov
fisttpl
out
jl
mov
jo
sbb
int3
push
push
mov
loopne
ret
in
jg
imul
push
ficoml
icebp
std
inc
cmp
outsb
sub
push
bound
sub
test
jns
arpl
push
adc
mov
jle
lods
aam
ja
add
movsb
gs
inc
dec
xor
sbb
lret
aad
out
sbb
adcb
mov
xor
aaa
loope
jle
in
and
std
rcrb
xchg
out
int3
les
mov
add
xchg
or
cs
lcall
cmp
push
xchg
test
dec
test
lret
stos
xor
sbb
test
xchg
inc
jae
stos
rol
mov
sub
add
xor
sbb
mul
push
ds
pop
mov
and
orb
cmp
sub
adc
test
ret
and
cs
ds
mov
pop
orb
inc
mov
xchg
cli
sub
sub
ds
cld
pop
pop
xlat
incl
fdivl
pop
inc
clc
mov
lock
pushl
jb
fnstcw
adc
adc
push
lahf
dec
repz
mov
xchg
shll
scas
je
jl
cmpsb
dec
or
insl
or
cmp
mov
jno
lods
add
ret
inc
je
sbb
mov
or
or
jno
ljmp
jle
inc
out
daa
xor
iret
mov
hlt
lods
addr16
fmull
aam
mov
mov
add
xor
jmp
push
and
jp
xor
andb
aas
pusha
nop
incb
lods
les
mov
dec
add
jecxz
sbb
mov
adc
jno
lret
cmc
lea
repz
adcb
jl
jno
mov
mov
cmpsl
inc
push
mov
test
jl
xchg
fcomp
mov
cmpsb
mov
inc
sarb
leave
xchg
loop
cwtl
mov
mov
lahf
inc
rorb
pop
in
incb
in
jle
test
adc
pop
push
xchg
sbb
mov
enter
leave
xor
cs
xlat
sbb
inc
push
cmp
sbb
sbb
jmp
movl
outsb
jmp
rcrl
rclb
inc
or
pop
jge
push
cmp
fsub
test
sti
pop
cmpsl
cmpsl
fcmovnu
jmp
cltd
arpl
and
scas
mov
fmul
addr16
popf
jl
sub
lahf
dec
pop
cld
jp
xchg
test
pop
adc
aaa
hlt
int
mov
inc
pop
jmp
repz
jge
fwait
xor
bound
sysenter
push
add
nop
or
cmp
pop
jl
push
stos
dec
repz
sbb
test
test
outsb
lock
test
int
mov
mov
lahf
add
test
sub
inc
inc
stc
mov
mov
pop
mov
scas
imul
sbb
lret
mov
xor
pop
xor
push
jbe
mov
repnz
mov
xlat
fcmovnb
mov
cmpsl
dec
dec
or
xchg
push
jl
or
cld
mov
scas
mov
pusha
jl
loopne
stc
lods
jo
dec
add
rorb
fdivs
jecxz
cli
dec
mov
int
xchg
mov
roll
fsubrl
pushf
sbb
cmc
mov
pop
pop
sub
mov
into
insl
lds
mov
call
jnp
push
shlb
cmpsb
pop
mov
test
lret
jnp
scas
inc
xor
popf
cmp
mov
pop
fcmovnbe
lahf
inc
loop
ret
mov
dec
mov
stc
fld
sbb
sub
jle
leave
fnstenv
jp
and
shll
gs
inc
in
mov
xchg
pusha
out
push
fidivl
and
or
roll
cli
test
push
mov
cwtl
mov
add
testb
dec
xchg
ja
mov
mov
xchg
adc
je
xor
stos
push
mov
pop
add
jl
rorb
jne
dec
test
sbb
push
fstps
insl
aad
aaa
iret
adc
xchg
dec
sub
lahf
push
mov
adcl
cmp
pop
cld
into
xlat
xchg
shrb
out
adc
pop
fs
push
pop
sbb
or
add
xor
and
push
or
jle
cwtl
stc
in
mov
lods
add
rcl
in
xor
hlt
jbe
inc
mov
sub
adc
leave
jo
fiadds
ljmp
pop
push
jge
std
mov
lods
cwtl
jg
mov
sbb
mov
lods
lods
xor
std
stos
fsubl
sub
push
push
clc
loopne
mov
push
cld
jle
nop
repnz
and
mov
jno
push
loopne
sbb
mov
and
push
call
movsb
sahf
cmp
add
or
mov
cltd
cwtl
pop
cli
addr16
dec
pop
xchg
push
fsts
ja
in
mov
stos
and
ja
dec
sbb
xchg
sub
mov
aad
jo
sti
mov
rclb
push
sub
pop
adc
or
andl
xlat
jbe
pop
inc
add
xor
adc
mov
adc
in
das
data16
adc
inc
pop
pop
in
mulb
les
pop
cmp
lods
call
dec
les
sti
push
insb
stos
jnp
xlat
mov
cmp
dec
stos
call
je
mov
aaa
adc
mov
pop
mov
cmp
xchg
loop
lods
call
fdivr
mov
jb
and
testl
test
sub
shlb
movsl
fsubrs
ss
push
sub
cld
lds
and
outsb
cmp
movb
or
xchg
ret
cmp
mov
jnp
xchg
jae
mov
xchg
and
and
imul
xlat
mov
movsb
sahf
mov
call
jns
mov
dec
jae
inc
out
fldt
jp
clc
push
sub
test
xorb
icebp
imul
and
or
out
push
pusha
mov
xlat
jge
aaa
mov
sub
imul
jp
jp
daa
lahf
mov
dec
dec
xor
dec
sub
push
mov
push
cmc
mov
xor
push
sbb
push
or
sbb
les
or
test
push
sarb
push
ds
cmp
add
fdiv
frstor
stos
xor
cmp
lock
in
xchg
pop
cwtl
cmpsb
push
jmp
mov
mov
cmc
jno
test
or
fisttpll
adc
lock
mov
add
and
xchg
arpl
push
sub
xchg
outsl
fbstp
popa
push
lock
xchg
dec
in
ret
xor
mov
loope
std
xchg
ss
jmp
xor
push
imull
fisubrl
loop
or
xor
jge
rorb
lcall
jge
dec
add
pop
xor
mov
hlt
xor
dec
nop
fidivrs
jbe
dec
stos
jle
or
ja
js
ret
insb
mov
cltd
data16
js
pop
jmp
push
and
dec
jecxz
fists
inc
mov
rorb
mov
fs
lret
clc
jnp
addb
daa
cs
mov
loop
pop
jae
xchg
jnp
cmp
cmp
je
pop
push
imul
inc
in
test
mov
push
push
sbb
or
and
mov
ljmp
stc
cwtl
xor
addr16
sbb
call
xchg
nop
movb
lods
fisttpll
mov
fnstcw
or
imul
and
rclb
mov
loop
and
jae
popa
mov
ret
repz
adc
test
mov
cmpsl
push
stos
adc
cmp
mov
cmpsl
push
jle
ja
scas
mov
inc
mov
in
jnp
hlt
mov
inc
mov
sub
jns
jl
sbb
addb
sbb
jno
test
mov
aaa
ds
insl
int3
mov
dec
push
popf
dec
push
mov
andl
jl
jne
stos
inc
cld
and
loop
test
jnp,pt
inc
mov
jl
mov
bound
pop
pop
in
inc
fsts
les
cmpsl
adc
push
fwait
sub
mov
cmpsb
inc
push
adcb
lcall
dec
or
cmp
mov
lahf
push
fs
or
hlt
add
adc
sbb
out
jge
jbe
cmpl
stos
sbb
aad
mov
push
pop
mov
dec
pop
mov
pop
mov
adc
mov
lret
push
scas
adc
aaa
pop
imul
xchg
mov
lock
fsubrl
pushf
sbb
mov
dec
test
test
sub
and
inc
push
cmp
rcrl
rcrl
xchg
push
jo
push
and
mov
call
rolb
xorl
adc
xlat
fs
shl
cwtl
pop
xchg
cltd
jno
xor
sti
test
out
inc
dec
cmp
lret
adcb
adc
inc
out
mov
mov
loopne
in
sahf
pop
je
call
push
cmp
push
rol
pusha
push
je
jge
popf
ja
adcl
cmc
push
adc
xchg
push
packsswb
pusha
pop
and
popf
gs
in
es
cld
sub
push
imul
test
cmp
addb
pop
jnp
cmp
scas
inc
push
sub
jl
outsb
pop
cmp
pop
shr
adc
jmp
adc
push
mov
mov
push
xchg
subl
je
jne
loop
in
or
jg
pop
ret
pop
scas
add
jl
ja
fisttpl
jnp
push
lds
cmp
adc
clc
push
sbbl
sub
push
or
xor
pop
test
or
jns
ds
sbb
jge
inc
lcall
adc
push
mov
orb
and
imul
andb
pop
hlt
sbb
aaa
int
dec
inc
sub
das
mov
or
xor
popf
inc
popa
dec
sarb
sub
jno
xchg
movsb
out
iret
cltd
test
outsb
and
ficomps
push
sbb
xor
xchg
mov
push
clc
arpl
shlb
rcll
add
mov
in
mov
imul
hlt
cltd
sub
inc
lea
je
mov
stos
cs
lods
stos
add
jno
mov
and
fcomi
adc
dec
mov
in
adc
mov
in
call
js
pop
ud0
mov
and
fildl
pop
dec
cmc
mov
andb
repnz
mov
xchg
orb
and
sub
pop
sbb
lods
sbb
adc
iret
sbb
inc
jnp
fsubl
scas
jge
std
out
inc
sbb
adc
pop
push
inc
lea
stc
loope
cs
pop
cmp
outsl
mov
jge
aam
xlat
in
fs
sbb
es
ljmp
testb
es
adc
or
fs
inc
movsb
mov
pop
outsl
push
inc
flds
out
rorb
dec
mulb
clc
cmp
call
push
adc
js
loopne
jg
jle
mov
jns
mov
sbb
loopne
and
repz
cmpsb
cmp
out
push
push
nop
lds
shrb
pushf
xchg
adc
jbe
mov
inc
aaa
cmp
add
and
adc
mov
push
cmp
push
mov
pushf
lret
gs
push
mov
adc
call
outsb
clc
xor
sbb
jp
push
cmp
mov
adc
push
push
or
lods
outsb
cmp
and
mov
pop
cmp
xchg
cmpsl
sub
shrb
pop
xor
dec
movsb
add
mov
lahf
inc
stos
xchg
push
pop
pop
popf
sbb
xchg
dec
jae
in
mov
out
and
testb
sahf
push
sahf
mov
sub
call
fisttpl
and
ret
xor
in
and
and
mov
pop
and
les
rolb
insb
subl
sub
aam
fs
lods
daa
outsb
in
loopne
mov
xchg
xor
mov
lahf
sbb
and
ss
shl
pop
add
in
cmp
dec
mov
jbe
cmp
jmp
sub
xchg
mov
aam
into
or
adc
jno
mov
jmp
int
inc
sahf
inc
mov
dec
mov
jle
add
add
nop
pop
adc
dec
mov
or
jne
or
mov
rcl
xor
sbb
jle
jg
daa
daa
fmul
or
xor
mov
movsb
insl
in
clc
push
xor
or
mov
jecxz
cs
and
ja
add
dec
cmp
rorb
mov
jae
xchg
je
cltd
xchg
stc
out
mov
push
stc
orb
lea
xor
sub
xchg
sahf
bsr
add
sub
call
das
mov
fidivrl
jb
pop
call
adc
arpl
mov
dec
sbb
mov
mov
jmp
movsl
out
das
mov
sarl
in
mov
jne
daa
aam
fwait
insb
es
out
jnp
mov
mov
lods
jnp
sbb
or
sti
cmp
ja
mov
loope
ror
jo
ficoms
icebp
int3
out
mov
fstps
shlb
jecxz
push
pop
fcoms
les
stos
shrl
mov
inc
popf
repnz
cmp
imul
cmpb
aas
xchg
mov
stc
cmpsb
sub
cmpl
xor
mov
dec
lods
loop
gs
hlt
sub
pop
call
adc
test
imul
cmpl
arpl
out
inc
mov
push
ja
dec
das
sub
adc
shl
fsubr
and
cmpb
int3
int
and
rcl
push
imul
xchg
imul
pop
cld
push
rcrb
rorb
sti
mov
insl
popa
lods
insb
inc
inc
aad
sbb
cmp
dec
not
xor
adc
lahf
es
inc
movb
xchg
loope
pop
ss
lods
mov
mov
lahf
loop
inc
cli
mov
dec
jmp
repnz
cmp
loopne
scas
stos
jle
mov
nop
fsubrs
fcomi
xlat
je
cli
out
push
cli
sub
loope
mov
push
aas
inc
mov
or
stos
pop
cmp
sub
jle
mulb
leave
mov
lret
inc
mov
lods
popa
sub
mov
outsl
cltd
js
gs
lods
mov
sbb
jae
int
jg
popf
lds
xor
icebp
lods
mov
sbb
imul
rclb
cmp
xchg
jmp
xlat
lea
and
imul
repnz
in
iret
mov
inc
cvtps2pi
dec
jl
lds
jle
jecxz
popa
out
jo
cmp
data16
je
push
add
cmp
fwait
notb
mov
popf
sti
or
push
cmp
aad
cmpl
leave
pusha
and
inc
adc
subb
data16
push
cmp
fistps
in
ds
pop
hlt
jg
jo
rcll
movsbl
sbb
pop
int
inc
fisttps
xchg
test
add
xchg
mov
xchg
dec
push
nop
pushw
call
out
fs
fs
sbb
mov
cmpsl
mov
and
cmpsl
out
sbb
adc
int3
imul
push
rcrb
adc
out
fisttps
notl
or
ficompl
cmp
pusha
mov
and
adc
xchg
fildll
or
bound
pop
popa
adc
lods
add
mov
repnz
es
push
jno
faddl
mov
out
push
in
pop
stc
pop
mov
fbld
mov
jmp
es
sbbl
mov
shll
sub
xor
push
pusha
fwait
popa
inc
mov
ror
pop
push
xchg
mov
pusha
jl
movsb
jge
frstor
ret
inc
daa
shlb
out
test
jns
icebp
inc
in
xor
inc
fisttpll
fwait
hlt
sahf
and
test
loop
mov
xlat
test
imul
cmpsl
ja
xor
push
jg
add
cmp
mov
sbb
cmp
les
pop
test
cmp
mov
scas
push
mov
stos
dec
mov
and
fldl
xor
push
sub
dec
repz
jns
and
xor
sbb
pop
les
mov
test
test
xchg
add
in
sub
mov
xchg
das
outsl
sbb
repz
ficompl
mov
or
push
jo
add
test
lcall
cmp
mov
sbb
jecxz
stc
shrl
ret
jns
push
addr16
or
fldenv
je
or
xchg
lret
push
cltd
out
xor
push
testb
mov
sbb
mov
stos
add
mov
lret
je
mov
fwait
dec
or
dec
call
adc
enter
dec
or
repnz
cmp
sub
and
stos
push
jae
out
xor
out
mov
sub
data16
jmp
addr16
pop
nop
xchg
or
dec
sbb
and
dec
or
mov
xor
push
gs
push
mov
add
jno
cmovl
or
lcall
pushf
mov
gs
mov
mov
mov
aam
rorb
cltd
loopne
pusha
cmpsb
jg
or
fldcw
jecxz
sbb
in
dec
pop
jg
bound
add
cmpsb
and
mov
stc
mov
cmp
movsb
jg
pop
stos
jbe
push
push
sub
mov
fimull
sahf
add
rcrl
mov
aam
lret
cli
rolb
hlt
lea
sbb
or
mov
aas
cwtl
sub
mov
outsl
mov
pop
jl
xchg
inc
push
in
or
pop
jnp
sub
push
sbb
inc
push
jb
repz
push
push
cmpsb
into
sub
push
inc
je
pop
test
enter
test
xor
fcompl
fistl
xor
and
pop
and
cmpsl
lret
mov
les
add
add
popa
cwtl
cmpl
es
std
xchg
lea
call
sub
xchg
out
dec
inc
dec
adc
cld
jl
fs
lea
or
in
shrb
test
cs
insl
cmpsb
loopne
adc
cmc
jl
xor
ljmp
sub
into
insl
or
sbb
inc
lds
and
jne
test
data16
add
test
or
ficoml
pand
pop
xorps
mov
xor
pop
inc
rcr
mov
mov
mov
int3
mov
xchg
sub
pop
mov
popl
mov
or
inc
cmp
iret
mov
je
movsbl
adc
sub
sti
das
js
shlb
add
lret
xchg
add
mov
fbstp
xor
xor
iret
jg
fdivs
sbb
stos
orl
lret
adc
mov
fdivrs
adc
dec
cmpsb
pop
pop
ja
push
jge
lret
and
push
fnsave
mov
mov
dec
shrl
xor
lahf
div
out
divl
scas
vmaxpd
pop
pop
xorb
daa
ljmp
sti
movsl
stos
mov
pop
scas
mov
mov
and
jbe
cmp
loopne
scas
fisubrs
jne
adc
fmul
in
and
push
ss
inc
push
repnz
push
fildl
arpl
mov
mov
or
das
mov
push
and
into
mov
pop
or
xor
or
dec
or
inc
iretw
or
dec
and
lds
movl
mov
xorb
pop
xor
pop
mov
lds
data16
jl
leave
js
and
jmp
mov
mov
sbb
call
into
or
sahf
jnp
mov
push
sahf
or
jne
cmc
dec
jne
push
sbb
add
mov
sbb
lock
popf
xlat
into
mov
stos
orl
mov
mov
adc
push
xor
sbb
jg
add
imul
xchg
pop
add
add
pop
cmp
inc
sub
imul
js
icebp
mov
adc
call
cmp
or
dec
sub
sbbb
pusha
push
pop
enter
pop
xchg
xor
xor
int
in
xlat
movsb
stos
push
dec
xchg
push
dec
shrl
inc
add
daa
jp
gs
mov
sahf
insb
dec
loopne
ja
xlat
pushf
outsb
push
pushf
sarb
psrad
push
sti
js
xor
subl
push
mov
mov
bound
mov
lahf
xchg
loope
into
pop
outsb
rclb
mov
jae
mov
pop
enter
out
ret
stos
negb
mov
insb
lret
mov
or
enter
xor
ret
cwtl
inc
test
sahf
loopne
cmp
ljmp
insb
add
cmp
dec
aas
cmpsb
pop
jecxz
insl
adc
ljmp
shlb
and
aad
hlt
inc
arpl
adc
bound
call
mov
xor
mov
imul
inc
add
sbb
stos
daa
xabort
sbb
mov
pop
ret
inc
mov
sub
mov
scas
bound
xchg
loopne
loop
mov
sahf
sbb
push
jl
popf
mov
loopne
push
pop
cmp
cmp
pop
sub
punpckhdq
cltd
add
arpl
xchg
int3
jns
sub
xor
jmp
mov
or
push
mov
rol
ret
mov
jg
and
aaa
sub
pop
mov
imul
popa
shl
sar
and
inc
divb
mov
stos
push
scas
ret
sbb
mov
movsl
std
pushf
dec
lock
push
into
mov
pop
push
cmp
popa
sti
arpl
negb
sti
shl
adc
cmpl
jl
pop
pop
xor
aam
jmp
or
dec
lcall
mov
call
or
hlt
jl
sahf
lods
xor
fistl
or
or
negb
mov
rcrl
faddl
popa
out
loop
insb
pop
in
jb
popf
arpl
push
sub
stc
mov
xchg
push
lds
and
mov
xlat
and
lds
inc
pop
add
inc
lret
add
mov
mov
push
xchg
add
jno
jb
outsb
fdivrp
call
mov
adc
and
add
js
add
adc
call
hlt
repnz
aad
inc
add
addr16
ja
add
sbb
add
fmull
mov
int3
jmp
sbb
frstor
push
jb
cmc
mov
outsl
pop
jo
clc
sti
popf
loope
xchg
fs
add
aad
cmp
ja
xor
jns
insl
fprem1
bound
and
into
shlb
adc
scas
add
ss
cwtl
dec
mov
and
js
pop
fsubs
mov
sub
lods
dec
out
into
sbb
xor
adcl
subb
cltd
notl
inc
fsts
enter
ljmp
push
jns
xchg
mov
fidivrl
cmp
cwtl
jp
jnp
arpl
and
pop
sbb
sub
hlt
mov
mov
pop
mov
ss
sbb
rcll
hlt
jbe
pop
cli
shll
add
clc
iret
aad
jbe
jb
ret
cwtl
out
jg
push
ja
into
adc
mov
sbbl
mov
rorb
add
dec
popa
test
cld
gs
sbb
xchg
and
mov
xorb
ret
in
push
ret
repz
ud0
fldt
dec
das
test
pop
pusha
daa
push
mov
or
ljmp
mov
and
loopne
mov
or
push
arpl
mov
cld
add
lods
mov
mov
and
adc
aaa
outsl
cmp
and
in
inc
rcrb
mov
sbb
mov
out
xor
in
and
mov
sub
into
shlb
xchg
ret
pop
aaa
rcll
xchg
mov
mov
sub
in
js
enter
sub
sub
adc
cwtl
adc
into
add
shll
shll
stc
xchg
out
push
movsb
push
xchg
pop
test
mov
out
mov
dec
adc
ret
xor
push
mov
xchg
dec
stos
hlt
lret
sub
sub
ret
jno
pop
push
xor
push
mov
adc
mov
pop
cmpsl
mov
inc
cwtl
push
jno
or
push
loopne
fisubrl
imul
xchg
in
add
ss
ret
push
outsb
ss
int3
mov
dec
cmc
enter
clc
lahf
push
add
out
lock
outsb
pop
xor
hlt
jo
in
btr
push
cmp
sub
mov
mov
xchg
cmc
arpl
cwtl
mov
and
adc
xor
dec
sbb
sbb
add
cmp
or
in
sbb
add
pop
push
dec
xchg
lcall
aas
mov
flds
mov
in
std
dec
sbb
jp
popa
jae
mov
and
mov
sbb
lahf
dec
pop
push
mov
hlt
mov
jl
in
cmp
scas
push
mov
leave
inc
add
outsl
mov
jecxz
jle
aas
ljmp
dec
mov
aas
add
jle
dec
rorl
fstl
popa
xor
rcr
jnp
outsb
dec
xchg
cmp
int
fnstcw
or
js
rolb
in
mov
or
xor
mov
push
cmp
jns
pop
mov
jecxz
mov
add
pushf
decl
mov
xchg
dec
mov
mov
and
mov
adc
insl
sbb
test
and
mov
push
mov
sub
test
lret
aas
stc
idivl
das
sbb
mov
pop
add
stos
loope
insb
sbb
push
ss
dec
pop
not
fildll
imul
mov
lcall
mov
mov
in
fdivr
sbb
call
xchg
jecxz
imul
jp
mov
fcmovnbe
push
orb
inc
jo
stos
out
popa
fidivs
adc
or
lret
lahf
xchg
mov
scas
cmp
sahf
mov
adc
loopne
out
test
add
jmp
sbb
xor
pushf
cwtl
mov
sub
add
repnz
sub
or
pop
add
icebp
pop
mov
imul
fucomi
bound
lock
cltd
sub
fwait
imul
arpl
and
test
mov
add
mov
cltd
dec
sbb
push
push
loope
push
jg
adc
cwtl
inc
mov
lea
xor
push
mov
or
adc
clc
aam
jne
hlt
cmpsl
add
xchg
mov
gs
xlat
mov
fisttpll
nop
frstor
lret
stos
fwait
mov
xchg
pop
dec
std
bnd
pop
mov
push
sbb
xchg
mov
push
ljmp
loopne
aaa
adc
mov
mov
mov
cmpsb
jecxz
sbb
cmpsl
test
jno
out
xchg
push
inc
orb
cmp
mov
mov
cmp
sub
jle
in
call
pop
or
arpl
pop
and
lahf
jmp
addb
outsl
sub
xor
xchg
sbb
aad
inc
cvtpi2ps
push
iret
pop
aam
mov
mov
mov
jbe
cli
dec
and
movsl
pushf
loopne
test
mov
pop
xor
mov
ficoml
adc
adc
xchg
dec
push
repz
pop
mov
or
add
pop
ret
aas
cmp
imul
in
ror
stc
inc
xor
addr16
mov
inc
jnp
jno
cmp
mov
inc
lcall
sbb
shlb
pop
or
int
pop
mov
inc
dec
or
xchg
std
and
or
or
lock
insl
cmp
fcompp
cmp
mov
movsb
dec
push
cmpsl
sbb
dec
mov
ret
lock
mov
dec
test
fs
sti
xchg
and
pop
mov
jmp
mov
add
push
dec
insb
mov
cltd
stc
sti
cli
or
mov
xchg
pushf
and
mov
mov
sub
xor
scas
sbb
sbb
scas
inc
jne
in
add
ficompl
cmp
into
jecxz
jmp
mov
mov
add
jmp
mov
xor
xor
cltd
bound
cmpsl
out
shlb
dec
jg
jle
xchg
loopne
repz
mov
or
outsl
mov
into
mov
inc
sbbl
je
xor
mov
push
fbstp
mov
adc
and
add
and
push
outsl
shlb
sti
push
and
rorb
bound
sbb
jmp
scas
stos
pop
ror
nop
shrb
xchg
in
sahf
div
pop
lock
lods
ljmp
data16
in
adc
mov
xchg
mov
xchg
insl
jmp
inc
imul
pop
insl
xchg
mov
xchg
in
fsubp
lds
outsb
xchg
push
mov
outsb
add
jae
leave
mov
lock
cmc
push
push
mov
push
cmpsb
cmp
leave
rcl
fidivs
mov
and
divl
mov
xchg
sbb
sahf
cmp
imul
daa
mov
shl
xor
lret
gs
jno
sbb
test
push
mov
pop
mov
jle
outsb
into
inc
in
xor
es
out
mov
ljmp
push
fnsave
mov
mov
cltd
cld
test
xor
shlb
pop
fs
xor
push
push
pop
inc
fstps
or
xchg
xor
cmpsl
sbb
movsb
xchg
mov
cld
sub
clc
and
cmp
cmp
insb
repnz
sarl
sbb
jb
sbb
pop
cli
and
inc
cli
pushf
mov
dec
lret
push
jmp
and
ss
sub
jno
lods
jb
data16
mov
dec
fimuls
cltd
lea
add
xor
jnp
xor
out
mov
inc
ds
imul
ja
int3
pop
mov
sahf
fidivs
loopne
outsl
fistpl
sub
insb
fwait
ds
mov
push
mov
lcall
leave
xchg
out
scas
adc
out
or
sub
clc
popf
sbb
jge
shll
mov
mov
insl
or
mov
cmp
or
int
insl
mov
mov
test
stos
into
dec
xor
fs
sub
add
mov
lret
mov
aaa
xchg
xor
ja
or
push
test
aad
orl
inc
mov
ja
clc
leave
cmp
sub
cli
ret
push
addr16
jmp
pop
jbe
loopne
sub
shrd
mov
prefetcht1
shrl
xchg
mov
push
cmp
add
xchg
push
in
out
xchg
pop
cmp
cmc
jbe
add
xor
lcall
int
lcall
mov
mov
in
xchg
push
inc
pop
aam
inc
gs
fcomp
out
mov
clc
outsb
clc
out
pop
sbb
or
dec
add
stos
push
cmp
mov
loopne
pushf
sbb
les
inc
cmp
lods
daa
sub
ret
jnp
mov
or
mov
and
aas
popa
xchg
icebp
mov
cmp
xor
fstl
test
stc
sub
sbb
mov
fsubrl
jecxz
arpl
adc
call
fwait
cld
pop
jbe
dec
cli
or
sub
fcomi
jmp
and
js
sbb
in
jo
lret
arpl
cmpsb
inc
outsl
push
in
jb
push
lea
mov
fiadds
lock
push
pop
pusha
idiv
int3
jb
xchg
push
or
in
inc
sub
std
sub
in
jae
lahf
push
sub
int
sub
ficomps
cld
in
movsb
sbb
push
xchg
add
mov
in
inc
pop
mov
mov
shrl
push
testl
cmp
popa
not
lahf
into
xchg
sahf
cmpsl
outsb
clc
and
scas
lret
stc
bound
xchg
and
xor
jns
popf
cmpl
cmpsl
push
js
shll
stos
bound
sub
xchg
out
sub
mov
or
sbb
arpl
adc
push
mov
push
nop
jns
in
cmc
int3
jl
repnz
push
repnz
js
ret
scas
repz
pop
ret
aad
sub
and
leave
sbb
add
adc
loopne
sub
aam
lods
pop
pusha
stc
xchg
jbe
cmp
aas
test
lret
xor
mov
inc
adc
shlb
cld
xchg
mov
dec
movsl
xorl
jns
aas
popa
adc
out
loop
sti
fs
and
loop
ja
icebp
xchg
int3
inc
xor
ja
mov
push
jge
sahf
add
mov
ja
mov
std
sti
mov
cmp
pop
fisttps
xchg
js
add
mov
inc
cld
jnp
xor
push
cmp
and
filds
sub
xor
rcr
adc
push
xor
cwtl
xchg
push
pop
or
rcl
adc
dec
pop
jl
scas
sub
lret
lea
and
mov
jno
cmpsb
push
movsl
scas
inc
inc
and
aas
imul
add
cmpsl
mov
jg
xchg
lock
push
into
loope
jb
xchg
xor
gs
sub
addb
imul
stc
fistl
cwtl
pop
pop
neg
int3
or
js
ds
jl
pop
mov
test
xchg
insb
loopne
mov
fnstsw
ret
das
mov
stos
xlat
orl
dec
xchg
jg
jbe
jle
lods
rcll
xor
stos
fbld
inc
aad
cmpsl
int3
movb
mov
shl
sub
mov
popa
ja
jecxz
mov
in
cmpsl
mov
jecxz
mov
mov
mov
mov
jne
mov
dec
imul
loope
or
jl
int3
test
adc
sahf
and
sti
scas
mov
fdivrs
mov
jecxz
and
mov
sbb
jns
push
dec
xchg
jnp
aad
dec
fwait
icebp
add
lea
clc
mov
idivb
inc
xor
cmp
cli
add
je
cmp
mov
sub
es
cli
aas
and
sti
dec
adc
les
sbb
or
popa
popf
in
add
push
in
data16
lds
test
xor
push
xchg
aam
sub
ret
es
mov
mov
out
xchg
xor
pop
pop
cmc
int
adc
cmp
adc
pandn
xchg
lods
mov
lret
das
mov
mov
lods
adc
cmp
push
je
adc
or
sti
outsl
sbb
sbb
dec
je
cmp
aaa
inc
sbb
sub
icebp
lock
test
cld
sbb
fldt
pop
mov
adc
mov
insl
jmp
pop
xor
cwtl
jp
scas
cmp
xorb
icebp
enter
pop
test
mov
shl
mulb
orl
loop
jmp
mov
cmp
or
imulb
jge
xchg
push
jge
mov
xor
addr16
enter
and
xchg
xor
mov
pop
cmc
fistps
jecxz
lods
or
mov
int
negl
and
mov
mov
ljmp
xchg
insl
popf
das
add
dec
mov
or
inc
mov
inc
add
mov
out
pop
sti
push
mov
mov
mov
xor
aaa
ret
inc
cmp
jle
gs
sbbl
dec
pop
lahf
lock
add
pop
mov
scas
cmc
lods
xchg
outsb
cmp
dec
lahf
stos
sbb
mov
push
push
mov
mov
es
pop
push
push
dec
push
rol
aam
pop
and
push
dec
cmp
clts
xor
and
pusha
loop
iret
stos
add
mov
cmp
lock
je
icebp
or
out
pop
lcall
test
fistpll
adc
pop
pcmpeqd
xchg
loopne
pushf
arpl
jecxz
xchg
aad
xchg
fidivrs
pop
and
cli
rclb
mov
insl
iret
jns
fnstsw
iret
shr
loope
jb
imul
jle
mov
mov
out
mov
adc
push
in
int3
adc
mov
xchg
adc
shll
pop
push
xor
pop
push
sub
cmpsl
dec
ficompl
sbb
fistpl
sbbl
or
pop
mov
iret
iret
cltd
scas
pcmpeqw
loopne
mov
adc
inc
inc
mov
ficompl
push
fcmovbe
into
and
sar
aad
xor
ja
pop
std
dec
sbb
scas
xchg
mov
scas
lret
mov
sbb
mov
xor
inc
cmpsb
outsl
adc
cmc
call
xchg
stc
mov
ret
cltd
loopew
push
pop
mov
leave
mov
test
mov
popa
pop
pop
filds
cli
pop
enter
xchg
adc
or
sbb
lahf
inc
cmp
sbbl
stc
jae,pt
pop
pop
xchg
sbb
xor
push
add
jg
inc
in
mov
mov
sub
mov
cmp
mov
pop
xchg
rolb
iret
pop
xorb
pop
jbe
lahf
dec
mov
int
mov
xor
mov
jbe
sbb
add
jbe
mov
and
jecxz
dec
push
xlat
imul
or
xor
mov
mov
test
sbb
daa
push
xchg
cmp
or
lds
pop
aam
mov
inc
fsts
dec
and
je
cwtl
lret
daa
ret
aas
xchg
fidivrs
imul
mov
enter
lret
nop
fdivl
pop
daa
loope
rorl
bound
aad
ljmp
push
and
ss
rorl
addr16
push
setno
rcrb
jns
adc
fmul
or
sub
sbb
test
or
add
ret
outsb
dec
fdivrl
pop
and
jecxz
adc
popa
je
insl
call
or
in
scas
aas
or
fwait
int3
lret
pop
jbe
fisttps
inc
stos
aad
lcall
push
lret
sub
add
add
xlat
pop
sbb
xchg
cli
imul
cwtl
mov
jg
cmp
lahf
pop
add
mov
push
and
sub
rcll
lret
pop
mov
arpl
test
stos
xchg
lahf
cmc
pop
inc
repnz
jmp
scas
and
pop
add
loopne
cli
add
test
cmpb
lea
enter
adc
and
push
mov
mov
adc
lock
sub
pop
mov
daa
lds
in
sti
push
cmp
jle
mov
aam
mov
iret
shrl
push
mov
pop
jmp
imul
aad
aas
lock
mov
jg
int3
or
lock
movsl
pop
xor
xor
in
mov
outsb
cli
or
outsl
sahf
insb
rcrl
shll
sub
cli
xor
sub
mov
pop
enter
push
dec
jo
jnp
test
orb
mov
insb
lds
xchg
mov
jg
mov
mov
in
in
stos
bound
lcall
in
inc
jnp
dec
mov
dec
out
xchg
mov
and
cmpsl
popa
mov
lds
scas
mov
into
pop
pop
sub
mov
adc
cld
lret
nop
shll
sub
adc
push
ja
int3
stc
decl
jo
pop
push
cld
sbb
pop
fldenv
push
xchg
push
pop
jo
or
push
test
pop
add
outsb
aaa
jb
add
and
sbb
inc
cmc
int3
addb
shll
dec
fldcw
enter
lret
jb
idivb
xorb
mov
repz
push
enter
xchg
lods
psubd
in
ja
or
ret
mov
xchg
in
mov
out
lret
aaa
pusha
mov
in
adc
sbb
mov
inc
jmp
or
outsl
sub
lahf
adc
fsub
push
orps
mov
pushw
xlat
mov
jge
pop
push
or
mov
pop
mov
sti
xchg
dec
daa
stos
sbb
cmp
jno
inc
sub
xorb
ja
adc
pop
and
roll
inc
shlb
icebp
inc
jbe
mov
movsb
sbbb
or
jae
int
pop
mov
cmp
je
jmp
lods
fwait
dec
push
bound
jne
cld
push
dec
mov
xchg
imul
jp
jnp
insb
popa
jbe
cmp
stos
stos
movsb
dec
inc
mov
mov
jl
mov
xchg
enter
test
js
mov
mulb
mov
mov
mov
std
repnz
and
std
sbb
cltd
dec
pop
aam
mov
cltd
int3
pop
mov
mov
push
and
or
push
xor
jl
dec
sbb
push
pop
lea
ljmp
xchg
cmp
nop
jnp
and
cmp
notb
mov
dec
int3
mov
outsb
xor
adc
jbe
lret
inc
jae
mov
sbb
addb
jl
mov
mov
mov
jecxz
push
fidivs
jbe
add
xor
dec
mov
daa
in
das
test
fcomip
pop
push
mov
daa
jo
fs
push
rcl
xchg
sbb
lret
jg
sbb
pop
shlb
clc
xchg
ljmp
inc
ss
xchg
orb
jl
push
inc
sbb
std
cmp
xor
scas
mov
adc
inc
test
dec
push
fcmovnbe
lret
filds
mov
dec
in
push
cmp
outsb
add
mov
outsl
or
cmpsl
and
jl
mov
popa
cmp
mov
xchg
in
mov
subl
pop
pop
scas
sbb
js
xor
pusha
in
fidivs
scas
xchg
in
jmp
pusha
adc
mov
popa
inc
shrl
sbb
and
dec
fcoml
out
mov
dec
in
das
or
addb
mov
ja
sub
das
adc
pushf
adc
push
movl
inc
pop
jnp
lds
fsubrs
cmpsb
out
lret
imul
imul
fwait
test
jne
sub
leave
fsubrp
mov
xchg
stos
dec
inc
roll
lahf
test
sbbb
stc
ljmp
cmp
dec
aam
sbb
and
imul
cmc
pop
dec
iret
daa
jge
inc
in
fisttps
mov
or
test
dec
jl
push
pushl
mov
fsubs
pop
jmp
jns
fcmove
je
sub
xor
inc
lods
js
cmp
mov
notb
push
push
mov
sub
xchg
or
push
scas
push
jl
ret
fildll
pop
cs
mov
arpl
repz
cmp
push
popa
fdivrs
jmp
in
push
xor
cmpsl
jo
in
xor
iret
jp
inc
aam
jns
out
nop
sti
push
dec
lret
and
or
out
repnz
daa
out
mov
adc
bound
mov
sub
pop
mov
hlt
fcoms
cld
xor
or
cmp
push
jbe
push
jmp
lds
aam
sti
mov
sub
mov
data16
arpl
aad
add
inc
mov
or
push
pop
ds
dec
jp
mov
push
addr16
clc
filds
lods
mov
leave
xor
lret
sub
jbe
or
mov
inc
push
xchg
cli
sub
inc
notb
daa
dec
jns
dec
push
push
inc
ret
add
mulb
out
push
sub
outsl
lods
push
shlb
adc
push
push
ret
lods
xchg
mov
adc
adc
test
push
shlb
mov
and
stos
test
xchg
negb
call
xchg
jl
arpl
jmp
sub
fs
or
sbb
mov
xchg
movsb
pop
ljmp
fcmovnb
insb
push
push
and
sbb
icebp
insb
pop
lret
push
add
cmp
aas
pop
sbb
add
add
mov
rcl
xor
xchg
sub
inc
das
out
test
fcom
fdivrl
push
jp
cmpsb
xchg
cld
mov
pop
sub
stos
rcrl
and
or
les
mov
xlat
xor
fwait
pop
add
inc
jbe
sahf
mov
rcl
mov
ret
dec
nop
add
xchg
rcl
out
mov
push
scas
sbb
mov
popa
outsb
ljmp
mov
test
or
jecxz
hlt
movsb
ljmp
nop
jae
jb
pop
dec
cs
popa
aaa
jo
mov
in
sub
mov
fnsave
mov
mov
inc
jnp
pop
inc
leave
mov
push
jge
std
xchg
cld
sub
lahf
or
aam
loop
in
jnp
adc
xlat
daa
sbb
jmp
jo
vpcmpgtb
pop
lods
sbb
push
inc
fnstcw
jbe
inc
repz
lret
xorl
add
cmp
test
jbe
xorps
pop
sub
in
mov
sub
icebp
or
xchg
aad
and
in
add
jnp
nop
nop
call
out
iret
or
incb
push
inc
ss
pop
mov
xchg
inc
jb
cld
push
in
add
aad
jo
in
aaa
add
pop
add
jmp
sbb
mov
into
cmp
dec
mov
cltd
mov
push
popl
or
inc
xchg
cmp
pop
sub
subl
and
ret
out
and
loop
mov
ficompl
fnstsw
nop
xor
xor
js
icebp
ss
dec
imul
or
jmp
mov
xorb
aad
dec
push
into
add
idivl
les
sar
clc
dec
sti
add
inc
loope
inc
cmp
xchg
nop
pusha
ss
xchg
pop
cli
je
adc
scas
jecxz
xchg
cltd
fwait
call
dec
call
pop
sbb
sub
scas
shll
int3
jecxz
inc
cmpsb
mov
sti
pop
lea
aam
add
gs
push
leave
fsubr
movsl
push
sbb
jo
xor
inc
sbb
pop
sti
int3
arpl
cmp
les
sub
movsl
mov
mov
mov
loope
mov
push
jae
lea
or
in
sbb
dec
pop
cltd
xor
add
fildl
lahf
test
and
inc
pusha
aaa
sbb
pop
adc
add
mov
mov
repz
outsl
int3
hlt
add
xor
pop
test
call
imul
or
add
xor
pop
popa
fstp
or
or
jae
loopne
sbb
imul
lret
data16
sbb
push
insl
leave
add
dec
jno
lcall
data16
jecxz
jne
or
jp
outsb
mov
mov
adc
icebp
lcall
sub
bound
clc
and
into
sub
or
adc
xor
cmpsb
mov
inc
outsb
cmp
adc
sub
mov
xchg
aas
cmp
ds
iret
inc
jp
out
mov
xchg
pop
sbb
gs
popf
cld
jle
ret
adc
xor
jle
mov
cli
sbb
popa
dec
or
jns
clc
fwait
in
mov
mov
in
test
push
inc
stos
ds
push
out
lret
and
push
sahf
cmpsb
xor
ret
cmpsl
xchg
repz
sbb
mov
aaa
popl
in
inc
mov
jnp
cwtl
jns
sub
add
ja
scas
pop
push
sbb
jae
leave
dec
scas
dec
js
aaa
scas
and
cli
xchg
mov
lahf
incl
psubusw
mov
or
test
arpl
mov
dec
adc
loop
cwtl
arpl
and
mov
movb
aas
sbb
mov
or
xlat
jge
xchg
adc
scas
scas
sti
sti
cmpsb
pusha
mov
xchg
orl
rcll
xchg
dec
loop
jnp
ljmp
xchg
fcomps
and
imul
es
insl
pop
mov
es
jl
pop
sub
dec
mov
aaa
es
jae
inc
jl
in
cmp
lods
insb
fwait
int
pop
lret
mov
or
push
mov
xor
push
jmp
pushf
mov
cmp
rcr
outsl
cld
mov
cmc
enter
fwait
aaa
lahf
mov
add
pop
cmpsl
sbb
inc
mov
mov
push
sbb
and
pop
mov
cmp
das
push
push
jne
out
imul
ljmp
cwtl
mov
mov
mov
jecxz
adc
aad
repnz
addr16
movsb
repz
pop
inc
sub
and
cmc
icebp
mov
sti
jnp
mov
xchg
xor
xchg
les
jecxz
sub
repz
xor
and
xor
dec
add
fisubrs
adc
mov
and
push
aaa
or
mov
repz
mov
leave
loop
adc
loop
xorl
pushf
int
mov
adc
cmpsl
fidivs
out
xchg
adc
hlt
stos
out
xchg
sbb
mov
shrb
mov
cltd
dec
stos
fwait
jo
cmp
mov
call
xor
cld
shrb
cmp
aaa
inc
dec
xchg
stos
push
mov
lahf
pop
cmpsl
xor
and
sbb
nop
pop
jnp
pop
stc
mov
mov
sub
adc
mov
sub
mov
shrl
dec
push
das
cld
jle
int
fistpll
imul
or
call
mov
inc
jle
mov
ret
cmp
jae
leave
pop
cmp
popf
inc
pop
or
in
and
sahf
mov
icebp
sub
subl
xchg
insb
and
pop
in
fnsave
addr16
xchg
or
inc
repz
sar
jne
cmp
lret
aad
jbe
lods
shlb
sub
imul
decl
mov
sbb
cli
in
mov
cmp
xor
sub
out
add
imul
sub
mov
mov
stc
fs
loopne
das
and
addb
jl
xchg
fisubrs
ficomps
repz
add
add
adc
adc
jno
inc
sbb
jg
test
cmp
adc
jle
mov
ja
inc
jmp
stos
mov
xchg
jae
es
jl
in
cwtl
stos
bound
pushf
sbb
sub
lret
dec
les
sub
sbb
sahf
lea
shll
ret
insl
in
sbb
push
and
rorb
call
aam
mov
fimuls
gs
rcr
clc
fmull
into
jne
mov
mov
cmpsb
fucomip
arpl
inc
xchg
jmp
and
inc
add
add
pop
mov
mov
inc
je
rcl
mov
xor
in
xchg
mov
xchg
adc
pop
dec
aad
movsl
push
adc
jl
pop
xor
dec
insl
sub
das
mov
xor
outsl
cli
add
jmp
jns
cs
add
leave
add
sbb
xchg
fldl
jbe
bnd
pusha
pop
loope
test
pop
movsb
lods
jbe
mov
cmp
cmp
mov
jge
rorl
pop
lcall
pop
mov
daa
out
in
pop
or
loope
gs
std
jmp
sbb
mov
dec
lds
adc
popa
test
stos
mov
in
insb
fisubl
sbb
pop
mov
cmpsl
add
in
mov
dec
cmc
aad
add
outsb
cmp
dec
out
lahf
mov
and
inc
sbb
sub
fyl2xp1
jbe
jp
xchg
repz
loop
das
pusha
je
fs
jge
xor
xor
jae
jae
dec
and
mov
cmp
pop
jmp
lock
mov
adc
ljmp
xchg
sbb
mov
jg
mov
push
arpl
loope
decl
sahf
xchg
and
stos
xchg
cmp
out
xchg
jns
xchg
push
test
dec
jp
push
fldcw
ds
insb
sub
mov
inc
jecxz
shrl
xor
add
cltd
pop
push
xchg
fnsave
mov
pop
enter
or
shr
jecxz
out
xor
jb
cli
lds
sbb
insl
jp
lea
xchg
ljmp
push
cmp
push
xchg
out
in
mov
adc
loopne
lea
xchg
int3
addr16
pop
mov
fs
cmp
lahf
loopne
in
fisubrl
jecxz
int
push
jp
mov
xor
lods
mov
and
nop
fwait
inc
push
sub
sub
fwait
mov
aad
xor
and
subl
daa
add
jmp
ja
pop
and
les
mov
add
xor
dec
orl
push
aam
fsubl
jne
inc
sub
popf
and
cmp
pushw
push
mov
incl
mov
inc
sub
xchg
insb
in
add
arpl
test
daa
testb
imul
add
rcrl
les
xor
mov
ret
push
pop
jecxz
pop
jno
dec
dec
icebp
mov
mov
or
xchg
sub
out
dec
dec
sbb
repz
lock
dec
or
mov
adc
mov
mov
push
mov
movsb
faddl
aad
push
xchg
test
cmpb
ret
pop
xchg
push
es
or
xor
inc
sub
xor
out
dec
test
aaa
fldenv
stc
insl
int3
popf
mov
sbb
cmpsb
push
mov
jo
scas
fdivs
and
lahf
out
subb
cmp
add
mov
and
ret
inc
hlt
sbb
test
js
cmc
push
pushf
lods
push
movsb
jmp
push
mov
stos
repz
inc
mov
cld
test
cmpsb
js
mov
xor
andl
mov
adc
sbb
rorb
mov
xchg
je
jb
stos
fs
jno
jl
loopne
mov
mov
xchg
jge
test
mov
ss
ljmp
rcll
xor
jl
lods
fimuls
dec
das
jno
fs
das
mov
iret
add
jp
arpl
pop
dec
cld
adc
popa
repz
mov
movsl
or
or
popa
pop
pop
lcall
lret
je
iret
mov
lods
scas
push
rorb
fisubrs
push
push
fcoms
jle
pushf
pushf
aam
cmp
sub
jns
js
das
mov
imul
inc
pop
pusha
cmc
inc
orl
popf
adcl
sbb
push
leave
or
jge
out
fdivrs
sub
repnz
xchg
mov
push
jecxz
push
dec
jno
outsb
adcl
mov
pop
push
pop
xchg
and
jmp
movsb
lcall
icebp
int
jae
sub
rorb
lea
jne
cmpsl
movsb
lea
mov
pop
mov
and
jg
insl
or
aaa
leave
xor
mov
sbb
and
loope
clc
loop
das
pop
in
mov
cmpsl
sahf
jnp
sti
loope
cld
mov
xchg
lds
mov
cmpsb
or
mov
mov
cwtl
lea
lock
mov
je
dec
out
dec
cmpsb
push
out
rclb
mov
inc
lea
or
cmp
js
or
lock
sub
mov
and
mov
sub
cs
cmp
xor
push
sub
jmp
sbb
push
pop
or
xor
mov
adc
adc
xlat
test
aad
fisttpll
repnz
push
jns
iret
adc
fistl
adc
xor
clc
cmp
call
stos
ror
dec
scas
fisttps
jge
jae
std
push
stc
add
and
fucomi
jle
es
outsb
mov
cli
aaa
jno
adc
or
mov
add
mov
jl
or
test
jle
iret
movsb
repnz
or
add
or
cs
mov
pop
popf
repnz
xchg
ja
inc
xlat
sub
adc
popf
sti
dec
imul
movsb
mov
xor
es
push
dec
dec
iret
ficoml
jbe
mov
scas
bswap
inc
add
imul
adc
and
outsl
jle
jp
xor
push
jnp
inc
insb
hlt
lock
pop
ja
pop
adc
lods
sub
add
sti
sub
out
xor
scas
lret
add
and
cmp
push
repnz
cmp
jmp
push
sub
cmpsb
push
movsl
adc
shl
ss
enter
lcall
adc
clc
shlb
inc
stos
ret
mov
jmp
jg
out
cld
sbbl
mov
shrl
addr16
mov
xchg
out
out
xor
cli
xor
adcl
in
arpl
jl
cmp
xchg
and
pop
inc
or
xchg
iret
push
fcomps
dec
jge
je
in
xlat
push
xchg
in
or
mov
sub
push
adc
andl
and
adc
cmp
jb
jnp
sbb
mov
ja
aam
jge
mov
mov
pop
dec
push
xor
cmpsl
jg
lahf
xor
sub
and
xchg
xchg
jne
jle
push
mov
sbbl
lcall
jbe
or
ds
jnp
ljmp
call
cmp
iret
sbb
jns
and
jb
shr
adc
adc
lds
negl
add
xchg
test
adc
pushf
add
cmp
cli
inc
push
sub
dec
xchg
ficompl
stc
xchg
mov
sbb
lret
ja
xlat
cmp
cmp
cmpsl
jg
sbb
pop
mov
in
aas
in
mov
jmp
test
call
aam
ficomps
lock
sub
test
mov
mov
jno
or
lods
stos
lock
dec
mov
outsl
flds
pusha
xor
or
or
sbb
add
fwait
or
mov
or
jmp
mov
and
imul
add
push
imul
dec
adc
or
xor
push
shll
push
popa
xorb
rcll
adc
push
mov
sahf
jb
out
mov
stos
inc
jnp
cs
push
imul
cli
jge
in
cmp
int3
hlt
add
jle
fwait
ds
sbbb
aam
sub
sub
and
hlt
out
test
dec
xchg
push
sbb
and
lock
adc
aam
xchg
sub
das
clc
sbb
lods
inc
pusha
movsl
scas
inc
and
fstpl
add
insb
ficomps
xchg
sub
in
or
decl
divb
pop
call
fwait
into
pop
scas
imul
push
sub
lds
cmp
push
cli
cwtl
inc
jg
int
inc
add
addb
inc
sub
in
or
ljmp
sub
sub
inc
mov
xchg
push
movsb
das
cld
xchg
insl
lods
aaa
pushf
adc
outsb
add
sbb
lock
pusha
cmp
bound
push
aam
dec
cmp
addr16
enter
test
or
loop
arpl
lds
outsl
lea
and
fs
arpl
sub
jne
aaa
pop
pusha
pop
or
pop
in
or
in
ds
ljmp
stos
push
sbb
fbld
mov
push
insb
clc
popa
out
pop
mov
jmp
lcall
jg
push
shlb
adc
into
mov
mov
loop
js
dec
leave
jne
fldcw
loopne
lret
push
jns
mov
hlt
xchg
ret
push
pop
jnp
arpl
mov
sbb
decb
cmpsl
lds
dec
loope
pop
enter
sarb
jl
pop
arpl
or
lods
mov
pop
jnp
pop
adc
fdivrl
aam
in
iret
cmp
and
sbb
enter
shr
xlat
js
fnstcw
dec
inc
les
in
dec
xor
mov
testl
fmull
push
les
jg
sub
sbb
pop
pop
out
sbb
xchg
or
pop
sbb
popf
dec
or
or
ss
pop
jns
sub
scas
pop
sub
int
es
imul
loop
dec
test
mov
incl
mov
push
adc
pop
cltd
mov
inc
mov
in
popa
pop
in
fs
ljmp
out
pusha
or
sub
daa
jmp
movsb
pop
jle
icebp
xor
fucomi
inc
or
jge
push
push
pusha
insl
out
jp
mov
or
sbb
dec
shlb
jg
cwtl
movsb
xchg
dec
mov
gs
pop
call
out
add
into
enter
les
cmc
mov
push
neg
fimuls
loop
lods
lods
push
shl
mov
out
loop
jnp
insl
lods
dec
cmp
xor
jae
jg
pop
push
cwtl
adc
and
mov
mov
je
inc
out
and
mov
test
mulb
lea
inc
pushf
lcall
and
inc
sbb
imul
cs
scas
add
mov
mov
scas
addr16
mov
negl
and
data16
out
adc
push
call
mov
mov
adc
mov
cmp
mov
std
in
mov
jecxz
sub
cmp
mov
add
push
add
pop
cmp
mov
jg
fistps
mov
xor
enter
popf
add
pop
or
stos
insl
xchg
add
sbb
ss
xor
inc
mov
jns
dec
dec
int3
add
or
dec
out
out
pop
andb
out
pop
pop
fcmovnbe
dec
aad
fsub
lds
mov
ljmp
test
repnz
outsl
mov
leave
pop
push
cmp
xchg
jmp
sbb
add
push
and
loope
lock
and
ffreep
cli
sub
int3
ja
cmpsl
sahf
bound
adc
dec
out
push
outsb
inc
cli
insb
int
or
cmpl
lcall
aaa
addr16
test
cmp
push
nop
ljmp
push
jnp
or
ljmp
rcrl
jg
loope
stos
addr16
fwait
sbb
xchg
add
push
and
into
addr16
fldt
lret
push
adc
mov
leave
sub
adc
rol
cmpsb
mov
aad
incb
mov
jp
xlat
jne
push
clc
sub
repnz
mov
cli
in
ds
decb
pop
aam
inc
shl
sub
adc
mov
mov
ljmp
mov
push
scas
pop
insb
shr
mov
loope
mov
popf
pop
push
outsb
add
pusha
xchg
push
pop
jl
jg
or
das
sbb
xor
aad
scas
filds
jno
mov
ds
into
mull
mov
mov
inc
rcr
mov
aaa
and
sahf
jl
cwtl
icebp
add
sbb
add
pop
xlat
arpl
insb
and
sbb
loop
mov
pop
inc
fdivrl
xchg
pop
fcom
shlb
inc
je
outsb
cli
clc
inc
push
dec
add
dec
cmp
aas
sub
pop
push
xor
push
popf
cmp
and
fmul
movsl
fnstenv
lahf
jo
jle
jb
cmpsl
jge
inc
addr16
jae
jne
loop
dec
out
mov
mov
pop
int3
in
jbe
mov
and
xor
sbb
jp
imul
popa
rcrb
aad
inc
cmp
jmp
mov
test
dec
bound
xor
push
js
outsl
fxch
popf
sub
outsl
in
cmc
xor
ret
out
sub
movzbl
jbe
push
or
insl
scas
rcrb
mov
adc
das
and
sbb
adc
orb
or
std
pop
add
cmpsl
test
jmp
mov
je
mov
adc
stc
cmp
jg
in
jae
rorb
cmp
cmp
pop
insb
es
inc
jno
and
mov
enter
insl
fwait
aam
dec
adc
aas
in
lahf
sbb
or
add
sub
pop
fsts
pop
or
in
rolb
bound
setge
xchg
lahf
jecxz
sub
stos
fdivl
pop
push
dec
sub
fildll
data16
jge
data16
sarb
outsl
aaa
mov
mov
mov
mov
ret
push
mov
sahf
and
jmp
scas
dec
int
push
lea
push
or
pop
cmpsl
fsubr
pusha
stos
or
xchg
iret
adc
mov
mov
popf
mov
lods
sub
dec
cmp
or
fisttps
xor
rorb
setb
xor
out
mov
pop
rorl
mov
adc
fnsave
mov
jo
icebp
cmovno
mov
dec
dec
mov
sub
fs
jp
sahf
mov
sbbl
mov
or
xor
arpl
test
inc
jecxz
jl
xchg
mov
lods
call
pop
sub
mov
imul
mov
repz
shl
mov
xor
rcll
repz
xor
cmc
sahf
mov
loop
lcall
sub
lea
fbstp
jmp
pop
unpckhps
jmp
test
xchg
popf
cs
and
xchg
ret
and
sub
xor
or
xchg
xchg
push
pop
shll
and
inc
or
call
invd
fimuls
cmp
movsb
fstps
jb
int
cs
insl
hlt
adc
fs
jbe
sti
sahf
jae
repz
fists
xor
push
jp
mov
inc
adc
pop
cmp
push
rolb
out
jp
lret
stc
in
out
stc
lahf
pop
sbb
sarl
lock
mov
lret
cmovg
std
inc
repz
dec
dec
nop
jb
inc
divl
xor
cmp
and
mov
add
jg
mov
aas
push
cltd
shr
xlat
clc
mov
ret
std
mov
sbb
mov
or
inc
insb
push
mov
and
mov
dec
pop
xchg
rcr
test
mov
adc
xlat
xchg
jo
push
into
inc
test
sub
mov
stos
dec
push
cltd
and
mov
mov
xor
cmp
dec
jp
or
mov
hlt
insl
sub
ret
or
cmpsb
test
repz
mov
xchg
pop
test
mov
daa
xor
mov
out
adc
outsl
clc
push
ja
jecxz
xlat
xchg
test
jne
cmp
test
clc
ljmp
movsl
xchg
jge
test
cmp
and
fwait
jecxz
mov
mov
mov
aad
gs
arpl
sub
inc
dec
fstpt
xchg
popa
fldcw
mov
in
in
test
dec
neg
ss
pop
fucomi
out
sbb
repz
or
inc
adc
xchg
addl
push
and
mov
dec
pop
cmc
je
mov
or
insb
mov
movsl
sub
lock
insl
mov
cmp
femms
lods
ror
imul
int
inc
stc
inc
adc
sti
pop
push
in
leave
mov
fsts
xchg
mov
movsb
and
add
adc
pushf
hlt
xor
test
andl
dec
cld
adc
jl
mov
jns
in
sub
mov
aas
loope
pop
xor
push
outsb
mov
push
and
cmpsb
adc
insl
test
aaa
lcall
fcomps
cmp
fsub
outsb
cs
xor
iret
in
push
or
push
dec
adc
mov
lret
shll
mov
mov
jg
xlat
dec
sub
arpl
jno
cmp
leave
les
fs
cwtl
xchg
adc
insl
mov
jnp
lahf
dec
pop
outsb
lahf
adc
gs
fidivrl
mov
mov
jmp
pop
sbbl
in
cmp
jbe
pop
mov
xchg
jo
pop
sub
pop
jle
jne
fwait
jno
arpl
repnz
bound
scas
xchg
lock
in
incl
add
jl
je
cmp
mov
js
sbb
dec
out
or
std
scas
data16
jge
mov
pop
mov
or
xor
cmp
push
test
ss
decb
mov
pop
in
xchg
adc
pop
fimull
inc
dec
mov
dec
xchg
mov
sub
imul
scas
lret
inc
leave
jo
mov
pop
and
sub
inc
call
cli
ret
daa
lock
sub
mov
jae
stos
lods
int
push
fwait
out
fnsetpm(287
mov
ljmp
jp
adc
inc
or
out
mov
xchg
notb
mov
adc
pushl
mov
test
push
xor
xchg
or
rcll
mov
push
dec
lds
jno
cmp
fldcw
gs
imulb
and
sub
test
popa
enter
in
or
mov
out
stos
sub
sbb
mov
sbb
leave
lock
cltd
mov
push
sbb
call
jbe
adc
sub
fcoms
mov
mov
mov
sub
lock
dec
xor
push
mov
pop
mov
jnp
xchg
cmp
and
loopne
xchg
int
and
gs
or
scas
ljmp
add
dec
bound
scas
in
jecxz
stc
stos
call
cmp
gs
cs
out
adc
jle
shll
inc
into
cmp
test
pop
loop
out
cli
mov
cmp
dec
cmp
push
xor
xor
cwtl
dec
rcrb
in
scas
jae
mov
push
sub
and
loope
shrl
clc
pusha
mov
inc
adc
dec
faddp
adc
mov
sbb
out
cld
lret
cli
in
ja
or
cmp
push
xlat
mov
les
lock
mov
lds
push
lods
xchg
inc
or
bswap
push
lret
arpl
cmp
xchg
fwait
dec
sbbl
lret
addr16
push
sbb
mov
jecxz
je
jge
lds
in
inc
dec
inc
and
scas
mov
and
xchg
mov
dec
mov
xchg
pop
dec
fisttpll
les
ret
jge
ljmp
mov
xchg
in
ljmp
adc
mov
fisubs
jne
push
push
push
xor
je
subb
fs
fld
in
push
jbe
mov
mov
xchg
addr16
aaa
xchg
adc
or
mov
fstp
adc
sbb
dec
fisubs
cmpsb
dec
daa
test
xchg
cld
cld
adc
in
xchg
sbb
loope
jns
andb
jnp
cld
rcr
xlat
sbb
mov
shlb
and
addr16
sbb
lahf
dec
sbbb
push
jecxz
xchg
scas
sbb
int
ss
jmp
mov
in
push
xchg
mov
in
das
sbb
push
repnz
stos
push
in
scas
push
push
pusha
fcompl
cwtl
insl
xor
sub
sarl
pop
insb
add
adc
mov
push
and
dec
repz
or
repz
lods
xchg
hlt
in
in
in
mov
shll
xor
movsb
movq
mov
sub
mov
loope
sbb
push
xor
jge
dec
push
faddp
fisttpl
and
es
add
mov
sub
xchg
mov
push
lods
test
push
mov
mov
ret
cs
xchg
pop
loope
xor
dec
sub
test
je
call
cmp
pop
das
cli
sbb
test
das
jle
or
jb
mov
sbb
sti
aaa
fwait
adc
mov
shl
add
and
insb
ss
mov
outsl
dec
inc
int3
jbe
xchg
in
fcomp
cmp
xchg
jbe
mov
cli
les
in
inc
shrl
stos
add
and
sub
push
push
jno
orl
arpl
dec
and
mov
cmp
stos
cwtl
iret
pop
stc
or
pop
std
dec
ds
xor
pop
xor
sarb
scas
mov
cli
push
jb
xchg
jnp
jno
dec
push
push
sbb
out
fidivrs
add
and
mov
stc
push
cmp
out
add
xchg
inc
pop
leave
mov
mov
aas
cs
cltd
fisubrl
jns
subl
test
repz
lea
mov
cs
adc
fists
popa
jb
xchg
ret
addr16
xor
testl
pop
inc
pop
jae
stc
pop
jmp
cltd
push
jae
xor
sub
xchg
cmp
push
add
pop
outsl
pop
mov
out
lock
sbb
das
xor
mov
and
popf
std
jb
inc
add
or
jb
push
mov
mov
das
xchg
stos
je
pop
xchg
mov
or
sbb
mov
push
add
jl
jmp
fs
inc
test
idivb
les
lock
push
sub
jo
out
sbb
loope
adc
xor
xchg
repnz
fdiv
xchg
stc
ret
flds
fisubl
sub
push
push
adc
sub
cmp
jp
loopne
xor
fistps
in
orl
lods
pop
mov
icebp
mov
bound
mov
stc
cmp
leave
loop
push
rclb
out
pop
arpl
xor
sahf
call
loop
sbb
int3
or
rcr
in
pusha
jge
pop
push
ret
cmp
mov
aad
jp
jle
inc
arpl
fisttps
stc
xor
jb
mov
or
xchg
scas
arpl
xchg
xor
pop
pop
mov
inc
cltd
jnp
jmp
push
loopne
fistl
fstpt
dec
fsubp
xchg
icebp
pop
dec
jecxz
bound
scas
xchg
add
xchg
mov
cmp
or
pop
cmp
aam
sbb
dec
cmpsb
pusha
jl
idivl
shlb
lea
xchg
popf
jl
adc
icebp
cld
pop
xor
xor
sbb
lahf
mov
stc
push
mov
mov
mov
int
ds
add
stos
jne
lock
out
adc
push
and
or
pop
scas
popa
jbe
sti
int3
inc
cs
adcb
and
push
push
popa
mov
scas
loope
mov
pop
add
mov
sub
mov
jp
or
sub
imul
sub
fisttpll
fstps
mov
jg
fildl
shlb
pushf
loopne
inc
fdivrs
mov
icebp
sub
int3
inc
divb
test
lret
mov
mov
fidivrl
mov
push
clc
inc
jle
fs
push
fldcw
mov
xchg
andl
xorb
cwtl
jecxz
push
push
inc
mov
mov
aas
pop
sti
sub
pop
das
addr16
in
scas
sub
jmp
repnz
imul
jmp
addr16
ret
imul
stos
rcrl
pop
mov
mov
mov
shlb
mov
mov
test
cmp
ljmp
fisubrl
lcall
push
add
sqrtps
add
insb
inc
mov
or
sub
sti
jg
mov
dec
rsqrtps
ret
push
adc
mov
fldt
sbb
adc
fldenv
add
inc
jmp
inc
lret
mov
sahf
movsl
in
dec
pop
xchg
lcall
xchg
gs
movswl
movsl
jecxz
or
nop
stos
push
xchg
cmpsb
cwtl
outsl
jno
sub
out
test
bound
insl
mov
sahf
push
pop
cltd
cwtl
add
pop
dec
cmp
sahf
adc
inc
inc
inc
call
bound
jmp
sbb
mov
or
push
shll
je
std
pop
sub
xchg
adc
cmpl
iret
dec
out
inc
testb
mov
mov
push
outsb
out
outsl
out
iret
rcl
fidivrs
mov
mov
mov
jns
mov
adc
cld
push
dec
mov
add
sbb
dec
mov
xor
loope
enter
cli
jbe
cmp
dec
xchg
mov
mov
cld
loop
xchg
xor
movsb
in
jb
movsl
inc
cmpsl
sarl
popa
push
fistl
les
mov
mov
xor
hlt
movsb
pop
js
xor
sbb
jbe
sub
shll
movsl
push
out
in
xchg
mov
addr16
ret
pop
adc
dec
je
in
cmp
jo
push
pop
scas
std
mov
arpl
xor
std
pop
cmp
icebp
and
pop
jg
andl
sub
or
fbld
push
mov
and
ficoms
gs
in
cltd
es
pop
movsb
mov
loope
fiadds
push
mov
scas
or
popf
mul
fs
jno
ljmp
dec
popa
jnp
mov
leave
addr16
and
sbb
push
pop
lds
leave
shlb
nop
int
jne
mov
mov
push
dec
dec
mov
sbb
and
inc
dec
aas
jp
lods
xor
rorl
push
inc
push
out
neg
cmp
inc
dec
imul
add
mov
fmull
repz
sti
data16
je
mov
data16
bound
mov
add
shrl
pop
rcrb
rorl
repnz
mov
sbb
ja
or
call
xlat
loope
rcrb
shlb
or
inc
mov
dec
cs
rcr
dec
movsl
lret
push
imul
jae
fiaddl
adc
daa
dec
icebp
arpl
mov
or
shr
push
fwait
jb
mov
aas
in
or
sbb
push
inc
imulb
jl
sub
jae
dec
lods
mov
arpl
push
sub
mov
pop
out
push
or
hlt
icebp
je
call
sbb
fldcw
adcl
sub
jg
insb
movsl
jae
add
dec
imul
inc
lahf
ds
adc
cmc
inc
aas
sub
fnstsw
add
addr16
in
lods
jle
jmp
ja
loopne
arpl
inc
xor
stos
scas
std
stos
jecxz
test
xor
mov
sub
sub
roll
aas
or
and
mov
push
jle
ficoml
mov
push
paddsb
pop
pop
ret
pop
js
jmp
jg
lods
or
sbb
daa
bound
and
out
or
xchg
mov
rolb
insl
jns
loope
xlat
sbb
rclb
mov
outsl
sbb
xchg
add
fsubrs
ljmp
daa
and
mov
mov
jb
push
xor
sub
out
sbb
test
pop
lcall
dec
jne
or
pop
das
sbb
or
out
fnstsw
adc
mov
push
jmp
pop
sti
out
mov
sub
repz
adc
rorl
leave
push
call
cmp
xchg
jb
jle
movsb
ss
xchg
sahf
arpl
push
sub
mov
push
cld
idivb
sbb
cmp
loope
shr
cs
jmp
fwait
inc
aad
loop
inc
pusha
mov
xor
bound
mov
idiv
xor
add
lcall
shll
in
cld
jecxz
cmc
add
and
mov
daa
aaa
psrlq
shl
pop
out
scas
shll
inc
add
cli
adc
loope
mov
xchg
adc
dec
adc
and
shll
out
inc
xlat
add
xor
jmp
icebp
xor
ret
ljmp
xor
mov
out
ret
jge
inc
lahf
leave
cli
stc
mov
mov
push
add
sub
dec
cmp
mov
mov
adc
mov
sbb
mov
outsl
mov
fdivrp
xchg
jmp
arpl
pusha
and
movsb
mov
or
movsb
leave
sub
cmp
lods
cld
popa
inc
in
dec
mov
cmp
sub
inc
or
mov
ret
push
adc
fnstenv
loopne
ljmp
sbb
pop
xchg
lret
rclb
push
incl
inc
pop
add
sbb
mov
and
cmc
lea
call
ds
push
push
lret
xor
fldt
or
aaa
mov
fadds
int3
aas
ficomps
clc
dec
xchg
pop
cmc
mov
cld
xchg
shlb
jge
sub
and
lods
mov
repz
loope
push
dec
inc
and
loop
test
and
subl
into
or
pop
xchg
and
dec
rorl
sbb
cli
cmp
mulb
mov
gs
mov
ja
cli
cwtl
dec
aas
cmp
xor
mov
call
jl
cmp
and
jno
mov
push
pushf
push
push
test
push
ja
mov
sub
jmp
incl
xchg
jae
test
addr16
add
sub
mov
ret
adc
pop
xchg
xorb
mov
sub
lret
rorb
lea
insb
aad
inc
movsb
pop
push
push
and
and
mov
mov
imulb
cmpb
ret
dec
or
xchg
fst
sbb
dec
pop
cmp
mov
outsb
roll
lods
frstor
mov
je
arpl
ds
shlb
cmp
adc
pop
mov
aaa
fisttps
divb
jmp
imul
xor
xor
fmull
sahf
scas
jb
jge
jae
mov
mov
cli
push
sbb
inc
repz
mov
fs
shrl
cli
mov
xchg
negl
jge
outsb
sbb
pop
insl
stos
inc
test
shrl
addb
push
mov
clc
push
test
out
sbb
mov
mov
push
jmp
pop
sbb
jae
dec
push
movsl
mov
or
cmp
push
fs
mov
fdivl
das
jo
adcl
inc
add
mov
jge
sbb
pushf
pop
xchg
inc
sbb
repnz
mov
movsb
adc
jo
std
lcall
cli
or
mov
js
mov
pop
pop
jo
jle
cmpl
popa
shl
cmpb
into
les
or
loopne
push
dec
jnp
inc
push
lock
test
pop
or
lea
push
dec
inc
pop
xchg
stos
insl
popa
pop
das
flds
inc
in
or
or
inc
xchg
idivb
pusha
addr16
and
xchg
inc
cwtl
dec
sub
adc
les
ljmp
outsl
dec
adc
aad
mov
clc
cmp
push
cld
lods
add
fimull
gs
imul
es
xchg
test
xchg
out
das
jb
or
test
push
jg
cwtl
push
stos
sbb
insb
clc
hlt
jns
and
mov
lock
mov
xor
out
cltd
mov
mov
cmpb
stos
loop
jl
xchg
leave
mov
jecxz
sub
push
in
mov
adc
shll
lds
gs
cmp
packuswb
push
cmp
aam
out
testb
inc
xor
in
jnp
pop
jl
mov
inc
pop
mov
test
stc
es
iret
sbb
add
imul
xor
subl
cmpl
gs
pusha
in
je
add
sub
push
in
testb
mov
std
push
inc
mov
cmp
xor
mov
scas
inc
add
mov
and
pop
enter
xchg
inc
mov
lods
fdivl
mov
inc
jg,pt
das
mov
popf
sbb
pop
in
cmp
dec
dec
mov
pop
test
cld
pop
sbb
imull
push
xchg
jae
stos
outsb
sub
xchg
movsb
stc
pushf
pop
push
pusha
sub
or
mov
adc
iret
pop
loopne
divl
gs
sbb
or
call
ficoml
mov
repz
jle
mov
or
lahf
lods
jne
ret
mov
pop
out
ret
sbbb
loop
mov
cmp
das
push
scas
and
int
mov
in
xchg
testb
or
les
xchg
lock
enter
out
lds
cs
test
jbe
jne
out
icebp
repz
and
xchg
pop
aas
cld
out
inc
fisubs
xchg
pop
mov
jns
inc
aas
inc
scas
mov
insb
cmp
adc
mov
aam
jle
pop
jne
sub
insl
mov
es
loop
mov
or
fldl
and
ja
add
repnz
inc
aam
mov
pushf
jno
dec
xchg
jno
mov
xlat
or
adc
lahf
xchg
mov
mov
sbb
roll
cs
fisubrs
cmp
sub
aas
mov
mov
sub
test
sub
dec
movsb
lds
outsl
adc
test
xchg
add
fcoms
mov
jb
fldt
xor
add
sarb
pop
add
dec
lahf
push
daa
jnp
outsl
popa
xor
jp
xchg
mov
pop
gs
xchg
into
and
jecxz
or
hlt
sti
xor
loopne
mov
es
xchg
pop
mov
jg
adc
neg
out
les
shl
push
mov
mov
jae
pop
loopne
push
xchg
jno
das
jmp
rclb
loope
lcall
xlat
stos
pop
mov
inc
out
stc
stos
push
mov
push
add
cmc
mov
das
nop
jbe
loopne
adc
xlat
testl
inc
cmp
mov
xchg
mov
sahf
add
and
fucomi
push
push
push
pop
dec
mov
pop
xlat
neg
fildll
push
lock
movsw
mull
fbld
sbbb
dec
das
xchg
mov
das
fdivp
or
xchg
lods
mov
fsubrl
and
jo
xchg
pushf
push
jns
movsl
inc
out
js
fcmovnb
xchg
loop
leave
adc
jnp
add
xchg
mov
pop
jge
dec
lret
das
int
scas
push
xor
lods
daa
pop
cmp
aad
jl
mov
cmpsb
mov
and
dec
jmp
pop
aaa
adc
jecxz
push
je
and
movsb
dec
and
jp
and
shlb
sti
push
cmp
jmp
pop
movsb
inc
popf
dec
pusha
cmp
mov
frstor
lea
outsl
int
inc
jmp
push
cwtl
insl
push
inc
fdivrl
jp
cmp
push
in
das
jmp
lock
std
nop
add
enter
cmp
addb
jge
push
jnp
scas
inc
pop
stc
hlt
cmp
inc
mov
pop
inc
clc
push
shrl
stos
jns
aaa
bound
pop
in
jno
dec
dec
push
in
stc
add
adc
adc
mov
fwait
movsb
cmp
xchg
mov
das
pop
push
out
fmull
aas
imul
xor
jecxz
scas
dec
mov
mov
dec
sbb
incl
push
flds
mov
jg
cmp
jecxz
push
cwtl
jne
and
int3
sub
or
adc
mov
sbb
int
in
sbb
ja
in
or
lds
cli
out
or
insl
syscall
loopne
inc
rcr
pop
mov
test
ror
rolb
cmpsb
jns
rcl
dec
push
rcrl
int3
out
lcallw
out
add
aaa
dec
jmp
pop
cmp
out
lds
sbb
adc
arpl
mov
jne
test
jecxz
mov
in
stc
push
test
xchg
mov
pop
jge
insl
out
and
push
mov
sub
push
call
test
dec
mov
jge
mov
loopne
mov
adc
iret
pop
mov
xchg
xchg
into
xchg
aam
fucomp
aam
js
dec
es
or
dec
push
pop
out
insl
movl
mov
popf
stos
cmp
addb
mov
loope
pop
lret
pop
push
repz
xlat
int
fisubl
pop
cmpsl
or
ja
lock
ljmp
cmpsl
insb
shll
add
add
pop
inc
xor
mov
xor
adc
xchg
sbb
loopne
jne
daa
fs
fbld
add
sbb
dec
dec
setge
jmp
cmp
mov
mov
shrb
ret
dec
pop
jg
sub
aad
das
cs
inc
in
pop
pop
mov
xchg
xchg
in
popa
ss
aad
cmp
mov
je
in
pop
xchg
lcall
enter
adc
cld
pop
mov
ss
xor
jecxz
pusha
xlat
shl
sbb
and
mov
mov
test
popa
scas
adc
fsubl
adc
in
pop
dec
int
sub
aaa
and
pop
push
jmp
sub
cmp
insl
pop
mov
jl
pop
jge
aas
call
xor
mov
cmpsl
shlb
je
bound
shl
push
sarb
out
adc
mov
xor
mov
mov
or
or
lods
jnp
das
or
faddl
pop
xchg
ds
sti
pop
push
adc
dec
repz
pop
and
mov
cltd
xor
adc
loope
aam
loope
xchg
stc
push
shrl
jb
xchg
sub
push
pop
gs
fstp
add
jno
or
sbb
xchg
adc
or
ss
rclb
scas
pop
arpl
iret
xadd
adc
shll
ja
jbe
out
out
inc
mov
fbld
pop
ret
push
ja
roll
jae
ljmp
and
cmp
data16
add
movsb
pop
pop
xchg
out
in
sbb
adc
sbb
popa
mov
or
and
sbb
fbstp
mov
movsl
cmp
pop
push
cmp
js
and
gs
sarb
add
orl
lret
and
xchg
sub
add
inc
cmp
jge
mov
jne
inc
test
insl
pop
inc
cmc
hlt
cmpsb
add
mov
clc
mov
jecxz
shr
sbb
outsb
xchg
cmc
mov
push
fisttpl
lret
fnop
lea
lret
jbe
aas
sarl
pop
xor
adc
cli
ret
aam
add
cmc
inc
pop
pop
xchg
add
testl
jnp
sub
in
movsl
es
pop
test
ret
jmp
or
insb
mov
in
fs
std
std
mov
outsl
sbb
dec
sahf
andb
call
cld
fld
dec
gs
mov
cmp
or
jl
sbb
pop
subl
mov
shll
lock
nop
and
inc
push
jle
lods
add
or
push
cli
dec
addr16
mov
xchg
pop
mov
xor
test
fadd
mov
hlt
pushf
incl
shll
pop
jns
popa
mov
or
mov
test
outsl
mov
add
push
sub
aaa
adc
nop
mov
and
add
sub
pop
mov
jge
mov
insb
jnp
xchg
clc
adc
js
mov
mov
pop
shll
insb
mov
mov
pop
pop
int3
jbe
out
les
sti
fmull
scas
lahf
jno
fbstp
call
imul
gs
cmp
mov
or
jge,pn
mov
mov
xlat
pop
add
mov
shl
dec
pop
jne
setbe
or
scas
jbe
xor
popa
mov
imul
adc
outsl
jl
dec
rorl
pusha
pop
rcrb
push
sbb
in
int
fs
sbb
scas
pop
movsb
das
aas
push
andl
mov
xor
adc
jecxz
sbbl
cs
js
jecxz
mov
mov
push
insb
jge
jae
lahf
cmc
cltd
push
adc
incb
jo
ljmp
ljmp
cmpsl
dec
lahf
in
nop
pop
testl
mov
test
inc
mov
push
inc
mov
jg
push
xor
adc
movb
or
sub
sbb
stc
xlat
jnp
xor
addl
call
shll
add
xchg
mov
int
push
inc
nop
add
pop
das
and
push
jl
repnz
and
jg
test
test
out
mov
int3
out
dec
pop
push
adc
xchg
stos
sub
cmp
movsl
stc
sti
sbb
xchg
sbb
sub
adc
jo
hlt
fistl
mov
iret
xchg
lahf
out
je
in
mov
stos
jge
pop
sub
lret
jl
mov
mov
imul
adc
pushf
jg
and
mov
jns
addr16
and
jg
add
sbb
xchg
sub
push
fists
cli
pushl
adc
mov
xor
in
js
rcl
sub
test
adc
xchg
sbb
jns
inc
xor
cmp
loop
cli
inc
test
adc
stos
inc
sbb
mov
and
insl
les
inc
fcoml
add
scas
mov
jmp
cmpl
rcl
and
mov
data16
adc
cltd
xchg
push
in
lahf
adc
add
lret
push
jnp
dec
mov
cmc
sub
ljmp
bound
jge
xor
xchg
aaa
push
cmpsl
out
insl
and
movsl
mov
ret
adc
inc
adc
daa
popa
enter
jmp
or
sbb
ja
in
std
aaa
xchg
xchg
mov
dec
xor
iret
inc
gs
std
push
roll
sub
fistpl
xchg
cmc
sbb
or
jns
cmc
xchg
loope
xor
mov
daa
push
je
xchg
adcl
popa
jmp
pop
mov
sbb
cltd
push
dec
push
inc
jl
and
mov
lds
mov
aad
mov
push
push
je
xchg
shlb
es
lret
dec
mov
inc
sarl
mov
sbb
push
pop
negl
pmulhw
jo
hlt
hlt
or
sub
mov
mov
fidivrl
mov
adc
mov
push
pop
jne
jb
jns
lea
mov
pop
iret
data16
cmp
lahf
aad
push
push
push
jmp
dec
popf
sbb
jnp
jb
ficoms
imul
dec
jg
mov
repnz
lea
lds
jbe
bound
out
repnz
into
sub
adc
outsb
or
cwtl
enter
aam
call
addr16
xor
or
xlat
nop
dec
fdivrl
shrb
ret
push
popf
adc
mov
adcl
clc
cli
aad
jecxz
inc
lds
ud0
ret
std
inc
sbb
push
adc
inc
xor
push
mov
cmp
cmp
dec
stos
outsb
test
stc
mov
mov
js
jle
shlb
xor
push
jmp
mov
xchg
xchg
pusha
xor
mov
jecxz
cli
in
jle
fsubs
ss
push
aas
aad
pop
xor
popf
shll
test
pushf
dec
cli
mov
mov
loope
jp
int
fs
imul
add
pop
xchg
jecxz
mov
push
int
sbb
dec
cli
nop
lret
inc
add
sbb
adc
aaa
aam
pop
icebp
sbb
and
and
jne
test
push
lods
inc
inc
dec
add
pop
push
pop
dec
fisubl
test
add
jp
mov
mov
inc
loopne
addb
mov
or
sbb
mov
pop
or
sbb
jg
ds
jnp
popf
adc
fldcw
in
iret
lfs
dec
inc
inc
das
add
mov
xor
mov
call
xchg
mov
inc
cli
sub
ret
inc
dec
lcall
pop
mov
imul
stos
hlt
xchg
addb
clc
subb
cwtl
push
add
insl
add
xchg
xchg
loop
addr16
test
gs
iret
sbb
jmp
push
in
jns
adc
sbb
mov
and
mov
mov
mov
xchg
pop
lods
es
push
push
test
popf
jmp
negl
adc
movsl
sub
inc
fisubs
fwait
cld
ljmp
cli
sub
lea
js
pop
rol
aad
push
stc
add
or
leave
xor
call
jnp
inc
int3
xchg
aad
int
pop
repz
mov
out
shll
dec
aam
ret
mov
icebp
mov
lea
sub
orb
fcmovnbe
xchg
inc
loope
mov
mov
in
jle
loop
aam
mov
addb
vpcmpgtd
in
scas
jns
movsl
pop
aam
xchg
push
jmp
mov
xchg
sub
pusha
lret
aas
cmpsl
mov
and
pop
sub
out
cmpsb
mov
push
adc
jae
das
mov
jmp
leave
dec
pop
push
out
jbe
mov
scas
jle
aad
cs
and
and
int
stc
inc
lcall
shr
inc
sbb
fsqrt
ljmp
imul
aad
jmp
cmp
into
mov
repnz
shlb
pop
mov
int
and
jno
sbb
imul
out
bound
addb
cwtl
mov
aas
jge
adc
outsl
mov
ret
lcall
jns
or
les
xor
jg
sub
daa
lods
mov
mov
adc
jge
sbb
fdivrl
test
sti
clc
fistps
stc
push
lahf
inc
out
bound
xchg
mov
stos
loope
or
cmp
xchg
nop
add
pusha
icebp
xor
lea
out
mov
dec
nop
xchg
adc
push
int
mov
outsl
mov
dec
fwait
leave
jbe
es
fwait
in
jp
fsts
push
mov
nop
pop
add
sub
ljmp
out
cmpsw
push
call
lods
xor
lret
or
std
ds
cmp
lcall
sub
fcmove
pop
int3
add
mov
xchg
adc
push
xchg
popf
or
shl
inc
cmp
lret
ja
clc
pop
inc
lea
inc
mov
jns
jo
pop
adc
inc
dec
test
xchg
dec
or
jg
aad
cltd
jo
lock
add
pop
cwtl
mov
sahf
or
mov
and
jb
out
out
jns
mov
adc
and
push
add
movl
jecxz
mov
mov
movsb
test
in
mov
fwait
xchg
lea
imul
add
pusha
imull
sbb
push
int3
imul
mov
test
adc
aad
add
jg
int
push
push
xchg
jo
popa
test
lret
dec
xchg
or
add
std
les
out
dec
lods
sub
adc
pop
xchg
and
fists
inc
ss
push
lea
push
add
jg
gs
dec
inc
int
mov
enter
xchg
icebp
jno
addb
mov
shr
test
mov
and
jae
mov
and
outsl
and
mov
pop
roll
pop
mull
mov
jno
lret
fcmove
jle
mov
mov
xchg
add
push
mov
or
cmpsl
sub
and
mov
imul
and
outsb
fldl
popa
push
mov
loop
ret
add
mov
cmp
jl
sub
mov
pop
inc
push
sbb
jg
jo
mov
xor
pop
out
inc
test
sub
fdivrs
repnz
out
jae
arpl
push
dec
lds
xor
ljmp
mov
test
add
test
mov
cli
pop
sarl
add
or
jl
dec
dec
pushf
test
lods
pusha
mov
ss
sub
mov
outsb
push
pop
andl
aad
and
lods
lods
pushf
shrb
dec
arpl
inc
pop
arpl
ljmp
pushf
and
mov
xor
xlat
xor
xchg
imul
test
dec
and
push
mov
mov
mov
pop
mov
or
sub
or
inc
inc
or
mov
mov
dec
mov
jns
popf
cmp
adcl
daa
test
scas
adc
daa
lret
aad
or
je
adc
pusha
cmpl
sbbl
loop
jb
loop
fsts
sub
inc
or
mov
or
add
adc
andl
test
stc
lahf
sbb
xor
xor
push
jecxz
lods
andb
jns
and
xlat
jns
movsb
cld
cmpsl
add
aaa
je
and
sub
dec
insl
pop
sahf
cwtl
sarb
mov
pop
popa
pop
or
mov
jbe
gs
es
stc
addb
mov
xor
pop
jg
mov
inc
inc
shrl
mov
ret
mov
cli
xchg
fdivrs
cld
mov
lods
and
cli
jle
in
sbbb
hlt
loopne
push
testl
fistps
sub
xor
jge
loop
vmread
xchg
push
adc
lods
xor
inc
in
cli
dec
mov
adc
dec
in
int3
pushf
scas
stc
xlat
out
xor
and
shrl
push
ja
pop
and
fsubs
jae
inc
int3
out
arpl
pushf
loopne
enter
or
mov
push
decb
cmp
xchg
fcoml
outsl
pop
popa
out
push
or
mov
lds
ret
jmp
pop
mov
sub
or
mov
jmp
mov
das
gs
outsl
xor
and
imul
mov
mov
push
pushf
push
cwtl
subb
sarl
stos
mov
cmp
xchg
aad
data16
cltd
and
stos
sarl
xor
stos
fisttpl
sub
dec
sub
adc
or
fsubs
stos
sbb
shl
into
mov
int3
push
mov
popf
push
or
mov
dec
xor
fwait
cmp
mov
fcoml
js
xchg
mov
cwtl
cmp
stos
lea
pop
xchg
adc
ficoml
jns
push
in
repz
stos
cmp
adc
or
xchg
bound
stos
or
ds
inc
test
push
mov
mov
imul
push
push
mov
pop
scas
mov
mov
adc
cwtl
aaa
or
pop
pop
je
orl
mov
jnp
cltd
mov
fsts
jo
aaa
test
dec
jl
out
jmp
xor
sti
rcll
sbb
adc
xor
or
mov
xor
cmp
out
jne
adc
shrb
xchg
mov
push
les
jl
daa
push
hlt
xor
pop
pop
rorb
es
fcompl
pushf
iret
push
or
test
mov
out
mov
aad
xchg
push
jg
test
mov
mov
ljmp
scas
je
adc
adc
add
add
inc
mov
cli
pop
testl
sbb
and
inc
mov
pusha
test
mov
push
push
idivl
inc
dec
mov
jge
jns
test
cmp
loopne
cmp
rcll
mov
hlt
sbb
cs
test
dec
inc
in
out
or
pop
clc
in
push
and
adc
mov
stc
bswap
iret
cmp
sbb
std
mov
mov
sub
fsubrl
enter
fmuls
sar
adc
push
and
pop
xchg
cmp
push
fnstenv
sub
mov
mov
ljmp
mov
loopne
leave
or
cvttps2pi
fs
adcb
cmp
bound
bound
add
mov
lods
lret
sbb
mov
mov
mov
pop
jb
shll
mov
jmp
add
popa
in
mov
adc
xchg
mov
mov
pusha
pushf
inc
mov
jo
rcr
add
lcall
adc
sub
pop
mov
inc
jl
and
xchg
jae
jge
inc
jbe
pop
mov
add
testl
ret
lcall
cld
mov
cmpb
stos
test
cld
sub
sub
mov
xorl
insb
add
xor
pop
pop
jae
nop
sahf
adc
stos
mov
ret
je
lret
stc
js
dec
leave
xor
lahf
ja
inc
movsb
dec
cmpsl
adc
por
es
stc
cmpsb
sub
or
stc
push
mov
mov
mov
aaa
aad
cs
loop
xchg
fistpl
mov
sbb
and
jnp
ljmp
push
and
or
xorl
adc
inc
pop
push
scas
popa
pop
aas
xor
push
andl
mov
in
add
xchg
jns
aaa
push
mov
pop
lahf
popa
int
cmpsb
inc
je
pop
scas
mov
xor
cmp
push
icebp
push
ret
lcall
js
cmpsb
lods
aad
push
cmp
addr16
std
sti
mov
jo
pop
popa
mov
fadds
ds
xorb
ret
rorb
fs
jecxz
xor
sub
push
sarl
mov
and
and
pushf
movsb
insl
pop
dec
rcr
shll
jle
dec
cwtl
cmpsb
inc
mov
mov
and
jp
mov
sbb
mov
rcll
fmull
into
dec
in
imul
xchg
mov
shll
jae
sbb
mov
adc
pop
push
cli
jae
ds
sbb
pop
jbe
xchg
adcl
push
cli
aas
cmp
mov
push
push
adc
shrl
scas
or
fdivrs
sti
jae
data16
inc
rcrb
test
cmpl
mov
loop
sub
leave
add
pop
rcrl
mov
push
add
outsl
insl
push
nop
iret
sub
pop
clc
jg
movsl
sub
cmpsb
subl
pop
mov
adc
pop
add
xor
push
inc
int3
cmp
call
dec
pop
inc
sub
sub
inc
pop
dec
sub
jmp
jns
cmp
xorl
jo
loop
and
xchg
push
or
xchg
adcl
add
in
in
lds
aad
xor
stos
std
into
bound
push
sbb
das
pop
div
stos
push
mov
xchg
cli
push
cmp
jb
adc
sub
mov
cld
out
jns
lret
pop
add
push
popf
stos
fnstenv
jns
lea
jno
int
mov
stos
dec
mov
jno
adc
ret
cmp
lret
sub
jbe
add
int
xor
pop
movsl
subb
nop
inc
cld
cmp
sbb
fcmovu
int
repz
pop
sarl
add
sub
jmp
mov
push
ret
lret
mov
loop
mov
cmp
adc
mov
sub
ja
fcomps
sbb
ds
cwtl
xor
ret
shlb
xor
dec
enter
inc
push
ss
into
loop
orb
and
divl
or
mov
sub
mov
push
testl
mov
xchg
and
cmpsl
stos
xor
mulb
pop
pop
in
test
gs
mov
cmp
pusha
into
push
rcll
shlb
pop
lret
mov
or
and
cli
or
sbb
stos
bound
inc
sub
mov
cs
in
cmpl
imul
cs
in
cli
test
ret
call
mov
movsb
daa
push
fadds
adc
jmp
cmpsl
mov
fldl
jl
mov
xchg
add
and
in
es
xchg
movb
out
mulb
inc
xchg
stos
test
mov
xchg
popa
test
dec
pusha
into
add
dec
bound
xor
dec
pop
insl
mov
jmp
sahf
rcr
std
jp
and
cmp
sbb
faddl
aad
and
imul
sub
lock
push
push
fnstcw
movsl
popa
fisttpl
jb
adcb
jg
sbb
divb
cmp
mov
push
xor
push
popw
mov
insb
mov
dec
outsb
ret
sbb
addr16
out
jnp
xchg
jp
loope
add
outsl
lea
jmp
adc
add
ret
movsb
xor
lret
inc
and
stc
iret
xchg
xchg
jne
aad
imul
jae
insl
pop
imul
punpckhdq
inc
cmpsb
mov
je
or
sbb
test
jl
aas
xchg
das
pop
shl
insl
loop
cmpsl
and
mov
fwait
sbb
ja
icebp
scas
and
push
inc
adc
mov
sub
mov
jecxz,pt
lahf
mov
push
mov
inc
cmpsb
loop
lods
mov
xchg
mov
pop
push
fidivl
sahf
lods
inc
inc
adc
imul
imul
pop
imull
dec
xchg
jno
int3
lods
in
aad
push
cli
inc
insl
jns
out
xchg
mov
adc
xchg
mov
lret
fisubrl
js
sub
sub
icebp
imul
mov
enter
inc
mov
lahf
xchg
cs
mov
cmc
imul
imul
and
sub
ret
bound
sbb
push
xlat
sbb
lea
or
outsl
scas
mov
jnp
int3
popa
insb
sub
ds
sbb
testl
pushl
pop
jns
mov
clc
fcmove
or
fists
out
jp
dec
dec
xchg
les
test
xchg
lcall
push
sub
mov
les
js
cld
add
popa
dec
pop
insl
fld
push
push
mov
rcll
pop
fidivl
adc
cmpsl
and
rcll
cmp
rcrb
mov
out
lcall
cwtl
xor
nop
dec
push
add
sub
mov
mov
fildl
dec
or
or
repz
fs
cwtl
add
sbbl
sbb
lods
push
hlt
pop
adc
ret
scas
leave
jge
lock
mov
jae
rorl
call
loope
shll
not
adc
and
xchg
call
adc
jbe
push
jecxz
rcr
or
mov
loope
or
inc
cs
jge
pushf
ljmp
loop
std
add
push
fwait
push
das
mov
in
cmp
out
jbe
xchg
out
mov
imul
aas
sti
jns
mov
pop
sbb
push
int3
gs
sbb
jmp
and
mov
mov
stos
jle
push
test
mov
mov
dec
popf
mov
xor
add
roll
ljmp
popf
insl
xor
bound
filds
mov
lret
pop
xchg
lods
push
adc
lret
in
and
push
mov
pop
out
and
sbb
push
jge
ret
outsl
xor
les
ror
cmpl
and
add
pop
out
pusha
xor
jg
fsubs
pop
adc
mov
sbb
daa
inc
push
clc
pop
sub
inc
jnp
lcall
std
icebp
mov
jne
loopne
int
hlt
xor
out
rorl
lock
mov
and
movsl
sub
mov
sahf
test
pop
mov
out
sub
cmpl
fsubs
int
push
mov
and
mov
xchg
fs
xchg
bound
sbb
mov
mov
out
pop
sti
dec
repz
es
adc
sub
cmpsb
mov
dec
fs
or
jo
adc
cwtl
xor
js
mov
or
es
xor
mov
pop
fisubrl
dec
ds
cmpsb
fwait
insb
dec
scas
leave
mov
shll
pop
and
cmp
add
and
sbb
movsb
xchg
int
fsubl
cmpsl
dec
int
adc
xchg
stc
dec
adc
pop
dec
jmp
test
xorb
xor
adc
mov
scas
or
mov
sbb
xor
xchg
dec
test
or
dec
adc
aas
or
jecxz
xchg
fsub
and
cmp
fdivrp
jecxz
jp
dec
inc
add
push
sub
adc
push
sbb
sub
mov
mov
adc
push
sbb
jg
je
pop
fwait
cs
jp
sti
add
test
inc
dec
aas
jp
dec
ret
sub
push
out
in
dec
jecxz
call
mov
pop
scas
pop
jb
icebp
scas
jo
pcmpeqw
mov
inc
adc
mov
jg
mov
pop
jae
aaa
jl
push
movsb
popa
test
shrb
pop
insb
pop
xlat
jmp
mov
push
dec
inc
pop
or
dec
mov
pop
jp,pn
dec
aam
mov
and
jo
mov
mov
mov
pushf
pop
daa
outsl
jns
lcall
movsl
sbb
test
es
scas
icebp
and
icebp
cltd
or
jns
in
cmp
jp
mov
stos
xchg
movsl
repz
inc
mov
and
adc
fcmove
fstpt
ret
lock
mov
mov
push
outsb
lds
test
in
loope
adc
popa
aas
lods
int
and
push
in
and
fists
fisubrl
cmc
push
aam
adc
jge
add
xchg
push
and
pop
inc
sub
std
les
sub
xor
clc
cmc
fnstsw
sub
fdivl
les
gs
lret
rclb
ret
add
xchg
sbb
jmp
pop
push
mov
sbb
in
jnp
cwtl
mov
or
mov
stc
ja
lods
repz
push
daa
mov
add
data16
aam
xorb
ss
add
ja
inc
fstpl
fwait
xor
jge
pop
jo
nop
xchg
imul
mov
lea
stos
inc
jb
loopne
push
test
add
xchg
mov
sbb
mov
push
jno
das
push
repnz
push
and
fsubrl
xchg
mov
dec
inc
call
push
into
imul
outsb
scas
inc
inc
mov
inc
fldcw
dec
add
imul
inc
cmp
in
pop
outsl
and
icebp
in
xchg
pushfw
gs
adc
mov
jle
xor
push
das
xchg
jecxz
sub
jnp
out
jl
cld
xorl
shl
and
ret
in
in
test
fcomp
fdivs
lcall
cmp
mov
dec
add
jnp
or
jl
cmpsb
imul
pop
mov
loop
push
sbb
cmpsl
xchg
aad
out
and
adc
mov
dec
hlt
mov
ds
xchg
scas
jne
pop
gs
aam
cltd
aam
ljmp
cltd
cmc
clc
test
lret
scas
dec
js
and
push
ficoms
loopne
mov
xchg
scas
mov
inc
cwtl
std
ja
cmp
sub
mov
subl
mov
nop
push
in
pusha
shlb
int
jle
inc
ss
ja
fldenv
pushf
outsb
mov
jno
es
ss
sbb
fwait
mov
rorb
push
mov
sbb
cmp
cs
cmp
lock
dec
pop
add
or
pushw
jmp
jb
clc
cmp
js
bound
xorl
cmc
lret
fnstsw
cwtl
and
gs
fidivrl
inc
repz
adcl
inc
cmpsb
xchg
es
test
subb
shll
imul
aas
adc
xor
push
pop
push
push
ficompl
adc
or
cltd
insb
or
je
push
dec
lret
add
mov
jp
jmp
adc
mov
dec
dec
jle
sbb
mov
or
loopne
loope
repz
xchg
add
cmp
shlb
gs
mov
test
cmpsb
insb
pop
icebp
cmp
cs
jl
fdivrs
adc
mov
filds
std
jge
inc
popf
jl
loop
mov
orb
cltd
dec
enter
mov
imul
pop
xchg
stos
push
test
repnz
cmpsb
jmp
mov
cmc
push
mov
popf
jno
xor
lods
popf
push
je
push
orb
sbb
daa
jmp
enter
ret
das
adc
repnz
cmp
jl
xchg
leave
fwait
adc
and
pop
jnp
scas
jbe
hlt
mov
jb
fistpll
mov
push
mov
push
push
scas
or
mov
push
jnp
cs
mov
iret
daa
mov
jb
int3
je
mov
loopne
fstl
in
jge
in
pop
lock
inc
repz
aad
jl
enterw
shr
push
inc
xchg
adc
inc
push
ret
ret
xchg
xchg
insb
jne
push
icebp
xchg
mov
push
inc
sbb
sub
mov
notb
fisubl
push
ja
mov
test
add
fs
ret
xchg
jecxz
ja
pop
hlt
add
jp
and
fwait
inc
fs
incb
fldcw
stos
fsts
and
daa
lcall
in
dec
clc
faddl
or
pushf
lahf
push
push
les
dec
add
inc
mov
dec
cs
jno
push
add
div
jmp
out
mov
add
and
or
in
add
jp
insl
mov
dec
add
push
outsb
pop
fcmovnb
stos
push
xchg
cltd
add
sbb
mov
bnd
je
add
mov
mov
sbbb
aaa
xchg
aad
outsb
push
mov
pop
and
cmp
lock
movsl
adc
test
mov
xchg
mov
in
push
gs
inc
xor
or
out
bound
push
inc
rcll
rolb
leave
daa
or
int
fldl
xchg
ret
addr16
cmp
jb
ss
mov
push
sub
lods
sbb
ja
jno
sub
enter
push
or
sub
test
sbb
xchg
cmpsb
xchg
pusha
pusha
out
addr16
inc
bound
pop
add
xchg
sbb
aas
lahf
rcrl
mov
movsb
jle
or
dec
arpl
cli
push
dec
pop
scas
enter
adc
out
or
ret
push
cmp
sbb
addr16
adc
repz
add
loop
pushf
mov
jo
sbb
lods
jmp
mov
iret
fcmove
or
jns
and
fstpl
mov
push
imul
fcmove
loope
fistps
enter
mov
cmp
xchg
and
cmp
xchg
dec
pop
jl
int
pop
or
mov
fwait
mov
and
pop
filds
sbb
out
and
cmpl
and
lcall
or
aam
nop
pop
fs
je
push
mov
pop
arpl
andb
push
lret
add
cmpsb
movsl
jbe
dec
cmpsl
pop
sahf
push
fsubl
lret
mov
movsb
xor
ja
ljmp
jmp
bound
icebp
in
fucomip
inc
in
cmp
xlat
mov
repz
out
dec
shl
adc
out
pushf
sbb
sub
fdivrs
adc
push
fwait
sbb
fs
loop
push
jbe
mov
mov
stos
xor
repz
rclb
mov
cli
testl
cmp
mov
shrl
dec
xor
dec
lret
push
imul
mov
rolb
ret
jo
cmpsb
adc
jle
sbb
jecxz
inc
xchg
leave
push
and
sbb
int
mov
lods
leave
fistpll
mov
cmp
pusha
je
mov
out
xchg
mov
mov
out
jecxz
sub
pop
lcall
cmp
dec
or
mov
scas
in
add
xchg
fnstenv
add
push
faddl
or
push
fsincos
jmp
jle
shl
out
dec
push
ja
test
mov
mov
imul
repnz
and
cs
inc
fnstcw
jb
fstpl
jne
xor
out
pushf
lds
xor
jne
sub
outsl
bound
jno
lret
fwait
rcr
adc
mov
je
nop
test
xor
sti
leave
movsb
inc
adc
ret
jno
in
jae
das
mov
dec
leave
lods
shll
sub
nopl
fsubrs
fstpl
std
jle
xchg
sahf
add
mov
cmp
dec
add
sub
dec
and
add
inc
add
adc
in
mov
pushf
sub
adcl
adcb
xchg
mov
pop
bnd
dec
sub
cmp
fmuls
push
aam
call
pushf
faddl
mov
movsb
xchg
insb
imul
cmc
mov
aaa
insl
jns
jb
out
lahf
cltd
cmp
cli
or
push
fmul
nop
imul
jns
mov
mov
sbb
test
inc
lret
xchg
arpl
int
mov
lahf
aaa
pop
in
mov
rcll
xchg
mov
sbb
xchg
jmp
pop
repnz
inc
sub
ret
pop
aaa
outsb
dec
mov
cmp
shl
pop
pxor
loope
cmp
mov
or
or
xchg
test
push
cli
mov
mov
sti
xchg
dec
std
les
pop
sbb
xchg
and
mov
test
scas
push
loop
fsubrs
int
mov
dec
fnsave
scas
and
cmp
push
rolb
xchg
test
mov
into
cs
aam
hlt
jp
lret
sbb
shlb
mov
push
movl
cmpsb
xor
xor
or
xor
pop
ret
push
jmp
test
repnz
stos
inc
gs
mov
xor
mov
adc
lods
mov
push
cli
add
add
or
in
adc
push
imul
jae
pop
jge
mov
mov
in
outsb
movsb
iret
push
sub
scas
mov
xchg
cli
scas
jb
mov
imul
sbb
mov
mov
xor
repnz
pop
mov
fs
aas
loopne
xchg
mov
hlt
out
daa
gs
into
lock
xor
pop
shll
into
add
lcall
cmp
add
mov
stos
sbb
bound
add
dec
icebp
sbb
sbb
push
in
and
cli
push
lods
ds
mov
loopne
ss
popa
out
jmp
cld
int3
adc
mov
xor
dec
repnz
mov
movsl
jb
inc
jecxz
fstl
lgdtl
mov
add
leave
push
cmp
push
lods
mov
dec
push
sti
xchg
add
jp
cmc
push
pop
jne
sub
into
xor
cmp
pop
scas
pop
xor
lock
scas
adc
inc
nop
xor
and
out
sbb
xor
stos
and
mov
repnz
das
sbb
mov
xor
movsb
pop
ficoms
mov
adc
xchg
fldcw
mov
inc
cmp
mov
ret
xor
popa
jecxz
mov
icebp
mov
mov
xor
ss
cmpsb
sub
inc
stos
das
and
enter
push
jl
rolb
push
sub
add
cli
mov
adc
leave
ret
pop
or
sahf
mov
push
pop
pop
in
pop
cmpsl
mull
xor
js
sub
adc
adc
insb
add
mov
and
cmp
pop
xchg
or
in
or
cmp
imul
xchg
cmc
xchg
push
mov
mov
loope
loop
pop
add
dec
test
and
fisttpll
jns
inc
rorb
dec
fmuls
test
les
cmpsl
push
es
mov
xor
faddl
sub
xor
mov
daa
sub
popf
xor
xor
inc
imul
negb
pop
out
repz
mov
mov
ljmp
cmp
ficoms
adc
insl
in
dec
insl
or
push
ss
sub
mov
iret
dec
cmpb
jbe
adc
sub
jne
ret
mov
flds
sub
pusha
xchg
mov
xchg
inc
sbb
and
mov
insb
mov
xchg
pop
hlt
out
and
push
mov
xlat
repnz
and
lock
fsts
dec
loopne
pushf
and
jns
mov
or
jae
xchg
out
aad
jle
sbbl
dec
lods
mov
out
fld
rolb
fwait
mov
mov
and
mov
lds
sbb
jae
jne
ds
push
iret
leave
add
cmc
fwait
xor
pop
cli
add
fcompp
inc
push
or
push
ficompl
std
test
pop
mov
dec
insl
inc
jge
repz
inc
pop
jae
aas
and
push
stos
pop
stos
std
shll
push
addr16
sbb
mov
lock
xchg
int3
stos
adc
push
push
test
es
cmp
ret
sub
outsb
lahf
out
mov
jle
pusha
and
daa
out
outsb
jmp
jne
pop
push
cmp
aam
out
xchg
sahf
fadd
lcall
std
repnz
lods
push
mov
pop
out
imul
mov
mov
aas
sbbb
xchg
mov
inc
inc
fisubrl
pop
int3
movsl
jl
lret
mov
xor
int3
fstps
sbb
adc
shll
out
popa
jbe
fs
stc
cs
push
adc
in
jnp
cmp
andb
pop
add
xchg
adc
cltd
popa
push
sub
aam
int
push
push
dec
data16
lds
sub
daa
fnstcw
pop
imul
repnz
loopne
test
mov
push
and
or
enter
xor
shlb
outsl
test
jo
xor
add
pop
push
push
mov
shll
subl
inc
mov
dec
pop
mov
mov
lds
std
in
pop
test
cld
aad
mov
jo
scas
scas
mov
jle
mov
popf
aaa
add
in
je
sub
iret
add
mov
xchg
cmp
add
lret
aaa
in
jl
popa
jo
hlt
or
push
inc
xor
xlat
fadd
scas
xchg
jmp
dec
dec
shll
adc
fwait
clc
test
or
sbb
and
jl
fs
dec
outsb
mov
cmpsl
cmp
mov
xchg
add
cmpsl
sub
and
push
fs
fldenv
adc
outsl
sbb
or
repz
jle
aaa
add
sbb
das
push
cld
hlt
mov
cmp
cmpsb
iret
popa
test
inc
roll
inc
push
cmp
je
xor
or
pop
cmpsl
mov
add
fidivrs
rcrl
inc
pushf
fnstcw
aas
daa
test
jp
test
sub
pop
lret
rolb
loope
mov
sub
movsb
cmp
xchg
movsb
movsb
in
sbb
sbb
mov
and
pop
mov
sbb
outsb
sbb
rorl
cmp
arpl
insb
sub
or
mov
inc
mov
mov
sarl
mov
std
ljmp
repz
or
sub
shl
movsl
or
lods
loope
cmp
jle
adc
add
clc
arpl
cs
icebp
ret
sub
inc
xor
jge
xor
outsb
movsb
mov
and
adcl
call
addr16
cs
mov
mov
daa
jb
lea
mov
push
mov
psubsb
mov
pop
fcom
adc
inc
push
jb
pushf
inc
pop
bound
mov
lods
in
xchg
or
sub
cltd
mov
pop
popf
sti
pop
fs
ja
mov
pop
inc
sbb
adc
dec
lods
jae
das
mov
aad
sbb
sbb
xchg
pop
mov
push
out
jg
addr16
cli
iret
jg
shl
aas
or
push
imul
pop
out
mov
inc
test
hlt
push
inc
or
ret
xchg
int3
push
cwtl
jmp
xchg
mov
push
jmp
sbb
adc
xchg
jle
pop
and
add
aaa
push
mov
fprem
fsubrl
loop
aas
xchg
xor
xchg
xor
xlat
fisttpll
cld
add
negb
mov
pop
mov
outsl
inc
out
pop
outsl
xor
repz
xchg
pop
xchg
and
jae
jp
les
jp
push
mov
adc
sarl
pop
push
ret
sti
cmc
fldt
dec
ljmp
add
clc
in
and
and
aas
nop
jecxz
inc
popf
sar
jmp
outsl
xchg
dec
pop
pop
popa
es
xchg
xor
pop
shll
xacquire
iret
loopne
mov
jnp
mov
xor
adc
int
add
scas
sub
xchg
sub
push
fs
xchg
sti
sub
pop
ljmp
xchg
fiadds
or
imul
leave
or
shrl
leave
pop
imul
fldt
mov
inc
pop
add
loope
push
pop
sahf
dec
jae
jl
in
lret
dec
bound
jae
xchg
ja
movsb
add
popa
out
jne
rorb
mov
scas
cmpsl
fsubs
fwait
mov
test
es
rcrl
adc
mov
jl
js
and
int3
cmpsl
lods
pop
xchg
out
xlat
mov
sub
or
andb
or
sub
xchg
les
xchg
pop
cmpsb
push
adc
mov
aas
push
adc
sub
push
add
sahf
sbb
inc
jp
stc
mov
or
sahf
pop
lods
or
jno
leave
ja
xor
shlb
in
sbb
cmp
jp
stos
insb
mov
jg
addr16
push
pop
fdiv
fnstenv
push
jns
pop
loope
hlt
flds
hlt
sbb
jecxz
insl
jo
adc
pop
add
mov
and
push
sbb
test
jne
sub
jle
push
sub
xlat
das
pusha
enter
icebp
jb
push
bound
xchg
repz
mov
popf
sbb
out
fcmovb
in
and
jge
mov
lds
xchg
gs
xchg
jnp
adc
jecxz
cmpsb
mov
lahf
mov
popa
inc
lret
adc
xor
int3
loopne
dec
mov
cmp
inc
xor
insl
xor
push
push
pop
ljmp
and
mull
xchg
movsb
add
pop
ror
call
sbb
mov
cmpsb
sbb
stos
popa
jns
mov
push
xchg
push
add
dec
mov
xchg
subb
ss
loop
movsb
mov
and
sbb
out
clc
push
test
loope
xlat
pusha
fildl
nop
add
add
addr16
push
test
outsb
in
and
mov
scas
mov
lds
mov
mov
mov
inc
and
insl
fnstcw
popf
test
shrb
push
cmc
mov
repnz
jmp
or
xchg
mov
out
loopne
imul
sub
lock
push
inc
push
mov
int3
ljmp
dec
xchg
fucomip
shr
xchg
and
enter
cs
sbb
sbbl
movsb
js
jmp
inc
xor
adc
dec
mov
cmp
jle
sbb
or
std
or
neg
into
rolb
in
cmc
test
jecxz
inc
rcrb
sub
ret
adc
es
mov
mov
pop
sti
adc
mov
sbb
adc
std
iret
xchg
mov
cmp
push
lock
mov
popf
fcomi
data16
out
push
insl
push
aas
add
or
shrb
sub
pop
enter
mov
mov
push
test
pop
sahf
pop
enter
pop
jmp
cmc
ljmp
notb
mov
repz
pushf
push
and
xchg
push
xor
dec
and
dec
mov
push
jb
pushf
aad
mov
test
dec
or
cmc
out
mov
loope
push
push
mov
fidivl
ror
mov
sbb
inc
lahf
js
xlat
mov
dec
sahf
cmc
into
cmp
push
mov
lea
mov
xchg
pop
mov
fisubrl
jg,pt
repz
inc
lahf
mov
repnz
addr16
shrb
outsb
inc
fs
out
and
stc
pop
shll
iret
inc
sti
jg
fsubs
lret
je
cli
mov
mov
ret
sub
shl
xor
cmp
mov
mov
mov
pop
pop
loope
xchg
lods
test
and
mov
jmp
mov
aas
inc
inc
and
lcall
mov
jge
jo
push
fwait
sub
mov
add
daa
lahf
mov
jne
scas
ljmp
into
pop
xlat
in
sub
push
in
cli
sbb
jl
lret
bound
imul
imul
enter
push
xor
xor
ljmp
add
dec
jo
mov
mov
stos
lock
add
pop
movl
push
mov
fldcw
mov
fwait
divb
ret
xchg
data16
mov
aam
aam
sub
mov
mov
pop
leave
es
lcall
jns
add
push
sarb
fs
and
sbb
adc
test
jns
jmp
ja
jle
cwtl
jae
or
scas
mov
jbe
das
shll
push
xchg
jnp
cmp
out
movsb
sbb
addr16
pop
adc
int3
aaa
sub
sbb
pop
push
sub
test
sub
dec
mov
out
les
mov
es
ret
inc
lret
loope
push
es
leave
rol
test
jno
mov
sbb
xchg
pop
xor
movsl
and
cmpsl
sti
das
loopne
sub
jbe
xor
add
mov
inc
jno
and
addr16
or
int3
mov
xor
fwait
test
popl
xchg
mov
int3
or
push
adc
inc
lock
push
and
mov
pop
jnp
in
daa
out
jecxz
inc
adc
lods
cmp
mov
and
adc
jle
add
dec
mov
mov
add
or
sbb
mov
fcoms
cmp
aas
mov
or
out
xchg
push
icebp
aas
cmp
ror
out
ret
in
fs
pop
sbb
daa
adc
aaa
test
mov
push
loop
repnz
dec
jno
js
dec
mov
jns,pn
std
dec
popf
xchg
push
xor
hlt
fs
cmp
rcll
stc
xor
addr16
je
sbb
rcrb
xchg
dec
pop
pop
and
idiv
scas
adc
imul
mov
cmp
cmp
aam
int3
insb
andb
mov
cmp
adc
daa
or
repz
jle
pusha
clc
out
adc
lds
mov
inc
sub
mov
adc
or
bnd
hlt
punpckhdq
fistps
sbb
sub
call
lcall
inc
aad
std
add
and
mov
sub
movsl
pop
xor
cmp
push
leave
dec
jge
xchg
sbb
sti
pusha
sarl
ror
sbb
inc
imul
pop
pop
cmpsb
and
je
jns
jmp
in
lds
sub
insl
push
mov
test
inc
mov
hlt
pusha
push
jne
es
js
jmp
sahf
pop
jmp
jge
sub
shlb
cmc
insb
jecxz
xchg
xchg
xor
mov
cli
shll
int
mov
loope
mov
cmp
cmpsl
push
pop
mov
and
data16
data16
sahf
mov
xchg
mov
adc
add
mov
lcall
test
movsl
pop
sahf
lret
dec
mov
inc
sub
adc
adc
pop
in
adc
outsb
insl
enter
cmp
push
adc
xchg
dec
dec
adc
mov
jae
xchg
mov
cmp
insl
out
mov
cmpsb
adc
and
insb
pop
add
into
jl
pusha
and
mov
repz
mov
jmp
pushf
xor
sbb
lock
fstps
mov
xorb
sbb
sbb
xchg
imul
pop
nop
cmp
rolb
or
jle
out
subl
arpl
xchg
std
insb
into
clc
mov
dec
mov
jecxz
scas
sub
mov
lret
cmp
out
or
jno
sbb
sbb
sub
out
mov
fcmove
dec
call
rorl
pusha
adc
sub
ljmpw
dec
and
push
mov
push
add
testl
jmp
bound
or
jns
in
div
jmp
adc
sub
cmp
out
sbb
pop
sbbl
or
pop
push
stos
mov
add
arpl
data16
pop
dec
inc
adc
push
dec
out
and
sub
or
imul
add
sbbl
inc
aaa
ret
pushf
xor
addl
stos
popf
mov
lcall
pop
inc
mov
cmp
jo
je
sub
std
movsb
test
test
mov
mulb
fstpl
push
xchg
aam
pop
mov
pop
push
push
inc
pop
insb
jae
hlt
xorb
mov
cltd
rorb
pop
xchg
test
fsubrl
and
push
pop
jae
add
push
shrb
pop
sbb
scas
jns
and
cs
cmp
ret
mov
test
inc
fxch
mov
lcall
loopne
mov
daa
adc
test
stc
pop
popa
es
popa
adc
stc
xor
cwtl
xlat
scas
sti
mov
arpl
jnp
lea
sarb
mov
fcmovb
or
emms
pop
mov
dec
mov
and
into
push
push
sub
and
xchg
xchg
push
fisubrs
cmp
dec
jae
stos
jg
imul
stc
push
mov
xchg
jge
imul
fstl
shrl
into
enter
sbb
ret
push
in
fiaddl
mov
pop
arpl
adc
mov
lret
xchg
mov
out
stc
dec
adc
push
push
push
sbb
std
and
sub
inc
mov
sbb
adc
sbb
mov
test
xchg
dec
pop
mov
in
scas
fldl
mov
jg
mov
xchg
mov
pop
shlb
mov
push
cmp
aam
and
mov
bound
push
cltd
jge
ret
xor
pusha
popa
mov
mov
mov
dec
bound
push
push
rcrb
pop
pop
test
lds
sbb
cltd
or
mov
ja
mov
pop
dec
cmp
push
int3
mov
scas
push
filds
push
mov
ds
inc
data16
xorb
sbb
xchg
dec
push
push
int3
adc
enter
and
sbb
mov
sub
stc
pop
lock
pop
ror
mov
or
jnp
xchg
sub
test
nop
scas
xchg
mov
addb
adc
jns
jp
inc
xlat
mov
movsl
iret
push
sahf
lock
inc
sbb
sbb
mov
xorb
outsl
and
push
jp
pop
clc
adc
add
jo
cs
out
cmc
mov
mov
mov
mov
js
stos
and
push
dec
cmp
loop
insl
addr16
lods
mov
pop
push
xchg
not
xor
inc
sti
aad
adc
jae
fwait
insb
mov
fistps
jg
mov
or
mov
jb
mov
inc
mov
cmc
mov
loop
mov
enter
addb
jno
mov
jo
orb
ss
and
fildl
add
es
xchg
and
mov
or
andb
push
das
add
xchg
ljmp
ljmp
repnz
std
mov
mov
and
shlb
and
push
rorb
jg
add
sbb
test
leave
std
dec
sub
sbb
test
outsl
pop
dec
adc
sub
aas
push
add
push
lret
push
dec
jmp
sti
xor
insl
push
dec
jbe
push
inc
in
movsb
pop
xchg
and
xchg
int
fsubrs
sti
xchg
mov
mov
cmp
add
mov
arpl
cmpb
pop
mov
cmpb
jne
les
mov
in
aam
mov
stos
lahf
int3
roll
je
or
pop
cmp
addr16
push
cmp
jbe
rcl
popa
outsb
jmp
out
loopne
and
jne
fiaddl
xchg
daa
adc
mov
pop
scas
xchg
jo
inc
inc
scas
add
inc
jl
mov
sbb
pop
jecxz
out
sbb
xor
sub
and
jns
mov
add
mov
mov
mov
sbb
jl
loop
pop
dec
jmp
adc
subl
inc
add
cwtl
sbb
push
push
out
enter
fldl
into
push
les
xor
dec
lret
mov
mov
or
in
sub
mov
dec
popa
xor
into
in
mov
jnp
push
fidivl
pop
push
pop
cltd
imul
stos
or
scas
push
testb
mov
test
loope
aam
aam
ja
add
int3
imul
xor
in
push
inc
in
xchg
shrl
in
stos
sub
add
pop
ret
stos
xchg
or
pop
cld
dec
dec
push
lds
stos
cld
pushf
icebp
xor
ds
xor
in
jae
or
test
arpl
sub
inc
loop
lahf
and
dec
dec
fstp
sub
lret
out
mov
movsl
inc
icebp
test
aad
and
sbb
repz
mull
jl
mov
les
inc
add
push
gs
out
mov
mov
inc
std
in
mov
xchg
sub
inc
dec
mov
addl
jbe
pmaxub
addl
push
sbb
inc
lock
cmp
addr16
mov
dec
and
stc
inc
add
sub
lds
lea
push
xchg
nop
adc
add
mov
xor
jno
cwtl
jp
repz
in
add
or
xor
cmp
xchg
fdivr
pop
loope
lods
adc
mov
dec
mov
aas
push
sbb
dec
inc
push
test
fldt
xchg
and
jo
inc
adc
sti
jno
movsb
add
dec
mov
mov
jae
rcll
es
pop
sub
sti
shrd
or
movsb
lods
jl
cld
shll
cmp
addr16
insb
cmp
mov
mov
loopne
jecxz
sbb
xor
xchg
mov
adc
jp
and
or
dec
push
and
push
xor
cltd
adc
lahf
aaa
dec
lods
xchg
pop
inc
inc
jmp
movsl
aad
jne
cld
insb
stc
add
sbb
ds
mov
adc
leave
xchg
and
in
mov
pusha
xchg
inc
jnp
mov
decb
sar
fmuls
stos
xchg
sbb
arpl
aad
mov
insb
sbbb
inc
jge
mov
mov
ss
lea
call
movsb
subl
push
xor
js
pusha
shl
lcall
pop
and
std
inc
fsubrp
repz
test
mov
mov
enter
xor
fwait
cltd
in
cmpl
xchg
mov
jnp
popa
push
pop
imul
sbb
xchg
jbe
pop
in
fsubl
jno
mov
sbb
mov
mov
sbb
iret
dec
cmpsb
mov
jmp
insb
push
xlat
push
sbb
dec
add
loope
and
jle
adc
enter
lret
out
mov
lret
dec
repz
sti
mov
xchg
into
xor
aam
cmp
rclb
enter
push
sbb
lahf
int
push
stc
push
lods
inc
jnp
fxch
sub
shrb
xchg
sub
fdivs
repnz
push
insb
ret
add
movsb
pushf
in
pusha
int3
fistpl
sub
mov
xlat
adc
stc
dec
dec
pop
sbb
push
outsl
arpl
sbb
push
xchg
sbb
js
rcrb
aam
scas
inc
adc
xor
push
or
adc
and
out
not
fwait
jae
sub
in
cltd
cmp
shrb
cmc
add
dec
dec
add
mov
lret
dec
xchg
shr
jb
mov
pop
in
cmp
mov
loopne
in
mov
pop
push
ret
adc
out
xor
negl
lret
adc
mov
rolb
pop
jl
add
iret
ror
mov
sahf
leave
das
lods
jmp
add
fdivrs
inc
popf
mov
xor
ficoms
inc
test
xor
jno
lahf
stos
hlt
repnz
or
xchg
inc
outsl
push
xor
gs
lds
inc
mov
sub
jno
out
mov
psubq
paddw
xor
mov
ffree
jl
cltd
and
shlb
test
push
nop
popf
push
or
icebp
fcoml
push
cmp
jo
jg
jbe
add
cmp
insl
push
popf
fsubr
push
dec
lea
out
xor
add
add
xor
pop
repz
lret
in
leave
mul
clc
pop
mov
sarl
stos
xor
adc
mov
mov
jno
sahf
lods
in
cltd
repz
sub
pop
sbb
and
out
push
xchg
lea
or
inc
push
mov
and
xchg
inc
mov
inc
add
loopne
jbe
mov
cltd
adc
outsl
sub
iret
ss
mov
push
sub
inc
in
ds
pop
out
dec
mov
xchg
mov
rcrb
sbb
sbb
push
outsl
pop
xor
fstp
aam
out
mov
mov
outsl
aaa
inc
rcrl
mov
mov
testl
or
xchg
xor
cltd
dec
lea
cmp
cmpl
mov
test
inc
rclb
mov
popa
sub
fmull
or
adc
fsubrl
cltd
nop
nop
adc
jae
mov
div
push
jno
lods
ret
fadds
jg
out
cwtl
sbb
je
jb
ret
push
xchg
nop
movsl
cmpsb
insb
data16
inc
push
mov
sbb
add
cmp
imul
xor
push
fcmovu
je
ljmp
push
adc
loop
and
out
std
inc
mov
dec
sbb
dec
std
dec
loopne
xor
fbstp
je
cmpl
out
dec
xchg
adcb
icebp
push
bnd
js
fwait
jb
dec
pushf
jb
cli
xchg
enter
jne
mov
insb
in
insb
xchg
shrl
pop
out
movsl
xchg
in
ljmp
adc
or
xor
fidivl
jecxz
sub
inc
sbb
adc
cmp
ja
jmp
push
mov
mov
mov
ljmp
es
jne
clc
sbb
aam
enter
jb
xor
inc
into
pop
inc
sub
cmp
inc
push
adc
dec
jae
scas
aam
mov
mov
fisttpll
dec
in
frstor
mov
adcl
sbb
ss
aad
dec
or
sbb
aas
mull
xor
faddl
test
cld
sub
inc
dec
xor
sti
data16
repz
inc
in
pop
sub
inc
into
mov
add
mov
jl
jbe
dec
in
or
jae
shrl
cwtl
sbb
mov
lods
cmp
js
leave
pop
fnstenv
push
arpl
xlat
mov
inc
push
jnp
adc
dec
sub
outsb
imul
mov
jle
mov
mov
xor
test
push
add
inc
push
scas
lock
xor
aad
pushf
fidivrs
cmp
cmpsb
stos
jo
xchg
popf
pop
nop
jge
test
or
fnstsw
or
pop
fwait
in
mov
fwait
adc
lods
in
lock
and
add
adc
adc
test
mov
xor
and
sub
xchg
inc
cwtl
pop
jb
fisubrs
jns
fstp
adc
sahf
inc
ret
out
and
push
xchg
adcb
shlb
sub
gs
daa
jo
aas
sti
outsb
mov
sahf
jmp
shlb
test
sbb
stc
mov
pop
sub
push
mov
xchg
xor
out
sub
adc
jbe
push
inc
cmpsb
ficomps
mov
pusha
int
dec
mov
push
push
push
sbb
mov
sbb
hlt
xchg
fidivl
jb
lock
pop
icebp
jo
lret
and
movsl
ss
in
and
std
gs
pop
add
pop
jp
sbb
jb
loope
inc
cmp
rol
shll
stos
icebp
xchg
insb
jae
int
adc
pop
andb
pop
xchg
or
jae
push
je
and
mov
mov
test
lahf
lcall
dec
dec
cmpsl
and
cmp
sbb
dec
pushf
loope
scas
mov
jae
add
add
outsl
mov
dec
fstpt
adc
hlt
mov
ja
pop
mov
ljmp
sub
ret
lods
popa
add
push
jno
add
inc
mov
gs
dec
int3
and
ja
lcall
clc
sub
pop
or
cmp
shl
add
fwait
xlat
mov
fbld
jne
insb
call
xchg
aam
inc
push
in
xchg
push
call
and
sbb
lret
mov
xor
imul
icebp
sub
xor
flds
sub
out
sbbb
push
sarb
dec
push
sbb
out
iret
fbstp
iret
stc
fwait
adc
sldt
sbb
ret
fisttps
dec
jg
rorb
sub
std
mov
or
cmp
loopne
xchg
aaa
push
stos
in
into
push
mov
jle
cld
rcl
daa
add
jns
data16
mov
cltd
cld
in
push
push
popf
sti
subb
jl
dec
insb
add
pop
xor
movsb
sub
pop
fsub
add
pop
cmc
lock
mov
insb
repnz
mov
jo
fmuls
xor
int
stos
std
bound
mov
mov
outsb
mov
mov
int3
test
jbe
sbb
or
xchg
xchg
rclb
shlb
cld
fisubs
jp
jecxz
stos
adc
mov
add
cmc
ljmp
xor
pop
into
push
cmp
push
push
jne
inc
in
cmp
xchg
out
stos
jns
test
orl
pop
stos
cs
mov
jl
mov
push
dec
or
and
mov
or
push
cwtl
inc
jae
ja
cmp
mov
xchg
sub
out
inc
addr16
stos
mov
mov
stc
or
mov
scas
and
arpl
sbb
ljmp
add
add
mov
imul
jns
sub
inc
fcmovne
jbe
dec
xchg
inc
test
mov
fcomp
xor
repz
or
repnz
pop
inc
ds
notl
je
and
je
lret
test
cmc
out
aaa
shrl
call
jb
sub
jns
mov
mov
xor
nop
shl
insl
loope
xor
pop
lcall
sub
lock
push
mov
fimuls
icebp
hlt
fistl
loopne
int3
pop
sub
sbb
imulb
xchg
das
mov
sti
ja
insl
mov
fiaddl
and
sbb
insb
dec
mov
inc
data16
jo
inc
jecxz
xor
lret
dec
xor
xor
inc
in
gs
ljmp
or
jb
hlt
dec
jae
and
dec
inc
stos
fildll
shl
mov
rclb
sub
cmp
jge
shl
cmp
std
sbb
sub
pop
sbb
aam
cmc
mov
into
out
mov
sub
loop
or
aas
into
movsl
and
imul
ja
testb
in
insl
popf
sbb
jno
leave
inc
push
iret
outsb
xor
pushf
dec
xchg
inc
cltd
pcmpgtb
insl
lds
hlt
inc
repz
and
pushl
inc
push
mov
mov
movsl
dec
adc
enter
fidivrl
xchg
sub
mov
xor
xor
jno
call
dec
inc
jmp
in
add
cltd
pushf
mov
mov
hlt
out
push
pop
stos
outsl
sbb
stos
sub
xor
and
jge
xchg
inc
cltd
pop
or
std
ja
mov
pop
ja
xor
jo
xchg
aas
iret
clc
ror
xor
jne
xor
out
cmp
in
rorl
and
rcr
and
adc
movsl
push
cmc
pop
aaa
lret
fwait
adc
push
jne
sbb
js
stos
mov
ljmp
dec
imul
ja
xor
or
std
lahf
lods
sub
xchg
jmp
roll
pop
ret
adc
xchg
scas
rorb
dec
sbb
mov
mov
push
push
std
pop
and
fstpt
jne
cld
inc
pop
scas
sub
jns
xchg
mov
xchg
ljmp
mov
pop
mulb
fisttps
aam
test
mov
leave
ficoms
push
fbld
cmpsb
xlat
mov
pop
inc
pop
xchg
in
mov
sbb
add
shlb
adc
xchg
cmp
sahf
pop
orb
mov
pusha
fwait
aam
pop
inc
aaa
add
into
xor
pop
mov
push
mov
jp
imul
in
add
inc
xor
out
roll
shrb
les
psubusb
inc
gs
xchg
lods
pop
push
jg
pop
imul
lds
enter
idivb
ss
mov
add
scas
or
sub
inc
test
pop
add
mov
scas
gs
fstps
lods
lahf
stc
fildll
mov
and
in
ljmp
push
popf
jae
lods
pop
push
ljmp
jbe
adc
popa
jbe
and
pushf
iret
push
sar
adc
icebp
jecxz
dec
popf
and
roll
aad
lods
add
xor
push
adc
cmp
push
dec
or
dec
jbe
xor
push
in
pop
push
mov
xchg
stos
shlb
push
inc
imul
mov
sub
sbb
test
fcompl
sti
and
mov
ret
out
inc
lea
cmc
imul
jmp
jp
jo
mov
push
sub
scas
ret
cmc
test
lret
jns
add
cmovge
fs
jecxz
inc
sti
xorl
cmpsb
pop
int3
xor
ja
mov
add
mov
dec
leave
push
je
dec
xchg
ljmp
mov
jge
sub
lea
cmp
sub
adc
in
mov
add
inc
cmp
bound
test
xchg
clc
mov
xchg
push
dec
and
pusha
sti
arpl
dec
lea
mov
sbb
fcompl
and
jmp
cli
xchg
jl
pushf
xchg
ret
pop
lock
push
mov
aaa
data16
leave
mov
sbb
pop
dec
lahf
jmp
popa
int
pop
mov
pop
in
or
sub
into
in
iret
push
mov
fistpll
and
int3
mov
addr16
cmp
ljmp
jae
mov
cli
lret
push
jo
aas
mov
lea
mov
xor
sbb
xchg
lahf
or
push
push
bound
sub
inc
and
dec
pop
push
xchg
mov
test
xor
jne
fimull
push
inc
xchg
insb
jo
ret
negl
sub
out
lretw
pop
out
leave
cmp
repz
or
enter
cmc
out
lret
pusha
jge
push
push
ja
divb
mov
sub
pop
aaa
ret
movl
mov
xchg
outsb
jb
lcall
xchg
or
jg
add
add
aas
dec
and
mov
call
mov
out
adc
fisttpll
xchg
lock
sub
int
inc
shrb
imul
inc
insb
in
inc
xor
cmp
xor
inc
jno
mov
ror
cltd
icebp
jp
rcl
jecxz
mov
lcall
mov
sbb
dec
jge
xor
fs
push
leave
loop
test
push
cmpsl
lock
test
add
pop
cld
cltd
cmpsl
test
mov
inc
jg
js
push
mov
ss
mov
mov
mov
dec
in
or
pop
fcom
hlt
sahf
xor
push
mov
mov
pop
push
push
add
adc
out
xlat
push
xchg
fs
fcmovne
push
pop
dec
ret
sub
cmp
and
pop
or
vmread
js
dec
sahf
shrb
mov
xchg
js
dec
cli
xchg
pushf
sti
cmp
out
inc
xor
push
sbb
movsb
mov
sbb
lret
mov
stc
lret
dec
fdivrl
pop
mov
and
mov
fwait
adc
insl
outsb
push
and
and
cmpsl
loopne
pusha
xchg
jbe
call
popf
ret
push
imul
push
inc
mov
add
stos
pop
jp
fdivp
dec
test
pop
add
pop
xor
lea
mov
mov
mov
iret
in
call
jns
popf
in
lock
arpl
xchg
insb
clc
add
das
dec
cwtl
jae
lcall
cmp
dec
sarb
std
cmpsb
xor
cwtl
ror
fs
sarl
ret
mov
pusha
out
mov
outsl
pop
mov
test
movsb
inc
fimuls
fildll
xchg
pop
cld
fs
xor
into
sbb
cli
fdivrs
xchg
cwtl
pop
push
into
sahf
out
iret
xchg
call
in
loopne
jmp
mov
daa
fiaddl
les
jl
sbb
cmp
jle
pmullw
pop
mov
int3
pushf
mov
jecxz
or
add
mov
data16
push
inc
or
pop
fwait
stos
dec
fdivr
int
mov
lcall
das
mov
adc
sub
lods
in
jle
test
xor
imul
xchg
inc
iret
fldcw
scas
adc
add
outsl
mov
loopne,pn
mul
dec
sub
pop
das
dec
iret
xlat
sbb
push
xchg
mov
insl
mov
imul
popa
dec
or
or
clc
mov
add
test
mov
xor
repnz
pushf
inc
xchg
shl
cmp
popf
jae
daa
leave
sahf
sbb
scas
xor
mov
test
inc
adc
push
je
xor
lods
jmp
out
jns
jns
insb
loope
add
sbb
adc
cmp
sarl
js
mov
aam
and
and
ja
addb
xchg
ret
mov
cmp
xchg
jns
push
pop
movsl
pusha
mov
subl
pop
adc
roll
hlt
and
mov
cmp
imul
imull
stos
aas
jp
pop
test
rcrb
and
pop
mov
leave
xchg
sbb
push
adc
imul
aad
adc
xchg
push
mov
push
mov
adc
xor
lahf
leave
cmpsb
sub
jae
cwtl
add
fs
cmp
out
xchg
xlat
sub
cmp
inc
inc
cmc
and
je
push
sbb
movsl
mov
scas
sub
jne
cs
cmp
int3
lods
mov
cli
jg
xor
inc
xchg
std
bound
out
mov
cmp
jle
mov
jnp
pop
mov
lods
ds
cmpsb
inc
divl
sub
mov
adc
data16
mov
sbb
mov
push
mov
sahf
stos
and
or
repnz
xchg
lds
mov
xor
mov
inc
or
ficoms
inc
mov
push
push
rcr
imul
jecxz
xor
inc
xchg
gs
dec
into
xor
xchg
add
jp
pop
push
jp
or
lods
jg
add
cmp
sbbl
pushf
sti
test
sbb
sbbb
xchg
xor
add
lods
outsl
outsb
cmpb
and
or
aaa
pop
lcall
ljmp
cmp
aad
lret
dec
inc
jb
pushf
adc
scas
nop
shlb
aas
cmpb
adc
dec
movsb
push
dec
mov
or
lcall
or
jg
dec
dec
or
mov
mov
sub
js
inc
mov
es
adc
iret
mov
add
into
out
cwtl
lods
and
jg
pushf
or
xlat
cwtl
mov
push
lcall
sub
stos
fisubl
data16
sub
decl
push
fs
push
sub
hlt
dec
sbb
or
or
inc
jae
cmp
ljmp
sbb
data16
and
push
mov
lods
push
mov
cmp
or
sahf
xchg
loope
jg
mov
aaa
sub
sti
insb
imul
xchg
or
xchg
stos
punpckhdq
mov
lret
rcl
daa
cmp
loope
sti
movsb
add
mov
sbb
repnz
mov
cmp
cmp
js
mov
xchg
xchg
rorl
aad
push
imul
mov
jbe
arpl
pop
mov
imul
cwtl
xchg
loopne
loope
mov
ljmp
xor
jb
loope
mov
cld
ds
pop
lret
pop
mov
data16
inc
aas
dec
sub
xor
mov
imul
xlat
inc
bswap
enter
jle
insb
mov
rorl
setb
or
add
push
sbb
sub
je
push
jge
dec
es
into
aas
add
jae
add
scas
cld
inc
icebp
lcall
rcrb
xchg
add
insl
cmpsb
leave
cmpsl
xor
push
cli
loopne
scas
outsl
outsl
adc
jecxz
push
push
rol
in
in
pop
in
loopne
jle
cmp
dec
imul
or
cltd
pop
test
push
sub
test
inc
ds
scas
inc
loope
std
push
test
xor
aam
inc
sub
movsl
ja
jge
jae
sub
in
add
jg
push
pop
test
push
sub
add
pop
fs
and
mov
mov
jbe
xchg
jge
stos
idivb
mov
add
mov
cmp
inc
push
mov
bound
push
shll
jns
add
and
mov
sub
mov
dec
icebp
mov
lcall
pop
mov
xchg
sbb
aam
push
sub
mov
mov
mov
inc
lcall
sbb
ja
ljmp
mov
int3
jp
es
add
jp
das
data16
sbb
into
xor
cmp
and
jge
mov
loop
pop
sub
mov
ss
sti
mov
stc
xchg
mov
cmp
daa
sub
ficomps
cwtl
mov
xor
arpl
xchg
cwtl
add
xor
lahf
mov
mov
push
and
inc
dec
jmp
mov
imul
xor
out
test
mov
lock
inc
cmp
les
sub
mov
cli
movsl
push
iret
sbb
loopne
sub
dec
int
push
fmul
xor
fdivr
sub
xchg
jno
pushf
add
cmp
mov
mov
pop
scas
dec
and
lods
std
dec
dec
out
es
pop
cmpb
iret
add
inc
repz
rclb
add
cmp
lds
jne
mov
inc
idivb
inc
cmpsb
add
sarb
mov
outsl
imull
js
in
add
repz
push
in
xchg
mov
mov
in
scas
jae
cmp
sub
add
mov
and
mov
pop
fsubp
icebp
inc
mov
sub
jge
out
xchg
push
pop
push
call
cmp
dec
mov
andb
cmpb
cmc
test
jns
push
and
pop
inc
mov
stos
outsl
add
jb
cmpsl
xchg
loopne
negl
addr16
mov
lds
mov
icebp
fisubrl
xor
rcrb
mov
in
push
in
test
mov
clc
xchg
cmp
mov
push
call
outsl
fisubs
out
inc
jmp
adcb
mov
jae,pn
xchg
aaa
add
in
test
jg
push
add
cmpsl
mov
xchg
push
xor
add
andl
mov
addr16
adc
pop
inc
sub
imul
js
adc
cmp
pop
pop
jbe
adc
cmp
mov
fiadds
pop
ficoml
or
adc
daa
dec
dec
cmp
pop
xchg
addr16
test
mov
and
test
dec
loopne
lods
orb
add
jne
cmp
movsb
insb
and
xchg
mov
push
aam
pop
cs
stc
mov
jne
fdivl
popf
adcb
test
pop
test
jecxz
into
std
repnz
outsb
popa
jno
mov
lock
xchg
jle
and
pushf
mov
mov
adc
lods
loop
or
loope
sub
jb
pop
mov
ss
mov
out
adc
adc
xchg
mov
mov
in
sahf
sub
addl
insb
pop
out
imul
and
out
test
test
fsubr
mov
repz
pop
ret
xchg
mov
cmp
mov
and
jg
xchg
mov
xchg
xor
jo
xchg
push
push
xchg
aam
popa
lahf
dec
push
push
or
sbb
cmp
sbb
jecxz
pop
or
inc
insb
outsb
movsb
xor
std
mov
lock
int
xchg
shl
jo
iret
out
add
and
inc
in
call
jae
cmp
je
mov
insl
orb
iret
and
js
clc
xor
xchg
xchg
ljmp
addb
sub
popa
xchg
sub
or
jg
pop
push
sub
jmp
lock
and
cmc
push
cmp
sbbl
jg
or
sbb
frstor
xlat
negb
mov
push
cmp
push
hlt
in
pop
sub
xchg
pop
ljmp
jmp
dec
aaa
jns
mov
cld
cmc
lsl
add
sbb
jns
dec
daa
xor
pop
push
jl
jmp
inc
inc
out
push
sarb
adc
ss
imul
sahf
scas
movsb
xor
cmp
aaa
je
dec
sbb
sub
outsb
xchg
push
movsl
xchg
data16
popa
fiadds
in
xor
xlat
aam
dec
or
pusha
mov
inc
ja
rcrl
mov
or
imul
fwait
or
jbe
sbb
aas
inc
call
in
stos
dec
mov
inc
cmpb
inc
mov
add
sarl
inc
imul
aad
ljmp
addr16
mov
jb
cwtl
mov
cmp
inc
outsl
mov
jecxz
jno
inc
jl
sar
add
xor
and
loop
ss
fmull
xchg
pmullw
add
gs
stos
push
adc
stc
adc
daa
aaa
mov
push
jmp
mov
js
ficomps
xchg
lock
lahf
dec
and
pop
mov
lret
and
xchg
cltd
jae
test
dec
push
ficompl
jmp
loop
push
bound
aam
add
test
in
rorb
mov
mov
lea
pop
fsubrs
push
or
and
adc
stos
dec
lea
sub
dec
icebp
jbe
mov
ja
out
dec
sub
aaa
filds
cmp
pop
pushf
int
push
pop
cmp
mov
push
pusha
cld
mov
or
add
sahf
push
cmpsl
xor
add
mov
ss
dec
cs
aaa
xor
mov
jmp
incb
fsubrl
leave
ljmp
addr16
cwtl
push
push
sub
test
outsb
push
add
adc
push
das
mov
addr16
nop
dec
jns
jg
push
jnp
cmp
adc
mov
sbb
das
mov
pop
push
js
adc
mov
ficompl
addr16
es
aaa
les
aad
test
sbb
lcall
jl
xor
mov
push
dec
dec
addr16
push
push
cmp
inc
push
mov
sub
add
mov
stc
fbstp
incl
pop
jmp
jo
rorl
mov
xor
sbb
push
fldt
pop
mov
aad
dec
ds
mov
xchg
or
or
or
sbb
sbb
xor
out
jae
pop
dec
and
jl
hlt
int
xor
or
fs
cs
enter
adcb
and
push
fbld
mov
sub
loopne
add
push
jbe
mul
push
xchg
mov
into
and
mov
sub
xchg
subl
rolb
dec
sbb
and
es
jg
test
or
inc
mov
dec
push
outsl
callw
xlat
pusha
int3
rorl
ja
stc
shlb
or
fnsave
data16
imulb
das
arpl
in
mov
mov
xor
into
fcompl
fistpl
rcrl
das
sbb
imul
push
lds
lods
js
movsb
xor
mov
fiaddl
mov
lods
imul
scas
sub
sub
add
fnstcw
enter
push
fwait
pop
mov
xchg
and
push
mov
adc
ret
clc
fldcw
dec
jge
sbb
bnd
out
inc
mov
mov
sbb
and
lods
sbb
cmp
in
and
pop
adc
stc
jmp
push
test
int3
hlt
leave
sahf
xchg
adc
ja
popa
mov
mov
or
xorb
iret
dec
movb
movsl
scas
cmp
sub
push
adc
jmp
xchg
and
flds
jbe
leave
addr16
in
lds
sbbb
cld
xchg
fildll
out
dec
cmpb
xchg
pop
cld
lret
push
cmp
and
rorl
repnz
cld
or
aad
adc
repz
sub
pop
mov
or
ja
dec
in
lods
adc
xor
mov
bound
or
insl
scas
cmpsb
sbb
sbb
inc
out
jmp
rclb
shrb
jmp
cmc
data16
rolb
leave
push
push
mov
out
jns
xchg
add
je
mov
add
push
inc
gs
xchg
test
adc
pop
xchg
scas
sub
loope
jb
sub
mov
jecxz
sti
dec
or
jl
imull
or
or
fidivrl
cmp
iret
xor
cmc
push
int3
or
lock
ss
push
test
clc
insb
push
and
mov
mov
cmpsb
dec
push
or
inc
lcall
xor
xor
insl
mov
mov
push
push
arpl
adc
mov
jae
ds
pop
sbb
in
out
push
negb
test
add
xor
outsl
data16
xchg
or
nop
jle
jne
jno
int
fs
cmc
decb
and
faddl
cmp
adc
inc
push
icebp
es
sub
adc
ret
inc
adc
mov
or
mov
jb
mov
data16
adc
leave
xchg
cmc
mov
adc
pop
stc
cltd
pop
movsl
fsts
dec
push
or
jle
in
and
cmpl
jecxz
jg
xchg
lds
sbb
pop
movsb
xor
daa
push
gs
xor
mov
xor
test
or
jg
dec
or
into
push
xchg
mov
inc
add
dec
cmpsb
out
data16
sub
pop
xor
jl
cmp
mov
sbb
xchg
add
js
xchg
cld
roll
insl
lods
data16
loop
repnz
in
xor
repz
daa
xor
shr
fiadds
cmp
jb
mov
pop
jle
sbb
or
pop
inc
inc
sahf
sbb
push
rcl
adc
filds
sub
call
and
xor
pusha
mov
adc
xor
movsl
std
xor
xchg
xchg
jle
sub
fwait
sti
mov
push
loopne
mov
push
lock
pop
jecxz
mov
inc
push
fs
inc
fsubrp
xchg
fnsave
daa
sar
and
xchg
mov
aaa
and
mov
xchg
adc
jbe
mov
testb
dec
jbe
lods
faddl
xchg
xor
jae
add
addb
out
mov
fisubrs
pop
adcb
dec
pop
jmp
cwtl
lahf
fdivr
enter
push
jo
hlt
bound
xor
mov
xor
push
fmuls
push
enter
mov
mov
test
mov
push
mov
mov
call
jp
pop
adc
fcmovne
xchg
je
cwtl
mov
mov
rcr
cmp
jg
movsl
das
sub
push
sub
js
pop
idivb
in
js
cmp
lods
xor
or
or
out
aad
pop
insl
push
inc
sub
lds
cmp
out
inc
repz
daa
pop
fnstenv
jne
into
loopne
sbb
mov
in
xor
xor
cmp
imul
push
mov
cmpsb
ret
jbe
repnz
mov
lods
sbb
adc
shlb
adc
mov
test
rorl
inc
out
add
adc
popf
and
jmp
push
movsl
sub
jae
xchg
test
bound
fstl
push
sar
adc
lcall
pop
loope
enter
imul
outsb
aam
pop
sub
movsl
notb
sub
sbb
lahf
lods
out
mov
add
cmc
adc
repz
xor
mov
ja
add
push
test
inc
stos
je
sbb
shlb
out
sbb
xor
inc
mov
scas
addr16
pop
adc
sub
sti
add
sub
shl
movsb
inc
and
dec
push
add
cld
into
pushf
xor
scas
cmp
fnop
sbb
fildll
int3
push
cmp
mov
cmp
inc
cmc
int
push
or
pushf
inc
cmc
sbb
cli
fidivrs
pop
ret
inc
dec
sub
jb
popw
roll
mov
sub
loope
in
xor
xorl
js
inc
adc
ds
mull
outsb
sbb
dec
call
inc
fisubs
pop
jo
mov
xlat
mov
sbb
cli
xchg
and
jns
dec
repnz
and
ja
out
lods
test
aad
dec
jp
inc
pop
loope
orb
adc
pop
sbb
scas
aas
jle
inc
dec
addr16
push
scas
cwtl
testb
lds
enter
or
xchg
mov
test
mov
pushf
mov
inc
pop
inc
add
ljmp
testb
xchg
ret
jge
fs
shll
xchg
popa
fcomp
mov
sub
xchg
push
inc
mov
sbb
sti
dec
insl
mov
pop
push
shrb
jns
jno
jne
and
pop
gs
sbb
arpl
dec
pop
jmp
daa
in
jp
pop
outsl
jle
in
and
mov
cmc
rclb
cmp
in
push
sbb
das
icebp
aam
xlat
push
sti
lock
loope
jnp
out
pushf
cltd
shr
leave
imul
xchg
popa
push
clc
data16
repz
bound
scas
repnz
scas
lods
mov
mov
std
call
xchg
pop
xor
push
pop
and
daa
sahf
shrb
jbe
in
daa
cmp
roll
jne
bound
jge
sbb
scas
call
dec
adc
int3
xchg
mov
jmp
adc
movsb
insb
lock
and
je
pop
out
stos
aas
imul
sbb
push
es
test
stc
call
orl
in
int
pop
and
out
or
gs
mov
lret
dec
jl
pop
sub
jae
js
xchg
popf
jge
es
adc
mov
outsl
je
lea
xor
insb
into
pop
orl
mov
mov
sbb
call
iret
adc
and
test
daa
xchg
jp
mov
pop
fsubs
xor
xchg
push
loopne
mov
inc
stos
repnz
mov
pop
sbb
cli
xchg
push
lds
shlb
test
mov
pop
or
adc
xor
inc
scas
insl
pop
and
lock
rcrb
mov
pushf
xchg
inc
sub
jle
cmp
aaa
mov
hlt
cmp
sbb
add
cmc
test
cltd
rclb
cmp
je
cli
or
lods
mov
pop
lahf
jno
adc
pop
in
es
stos
xchg
push
pusha
and
sbb
mov
les
pop
pop
sbb
or
test
iret
xor
sbb
pop
jl
scas
fistps
mov
sbb
sub
or
fistl
push
lret
cld
inc
inc
jae
or
lahf
test
mov
xor
test
pusha
mov
repz
jo
xor
insb
mul
mov
int
popa
push
pusha
jge
aaa
mov
iret
push
or
mov
into
mov
in
cmovb
jmp
fs
jbe
scas
subl
mov
push
dec
mov
and
adc
sbb
daa
shrb
inc
leave
outsl
push
lcall
push
push
test
push
aam
mov
int3
cli
roll
out
dec
xor
lret
dec
fnstenv
into
bound
jecxz
xchg
cli
sub
fstpl
dec
ret
clc
mov
mov
lret
adc
push
add
xchg
push
sbb
cmpsb
xchg
cli
cmpsl
fstpl
insl
inc
mov
aas
xor
scas
push
and
cmp
or
jno
sbb
ret
dec
mov
lahf
lret
jmp
mov
or
test
lds
test
mov
xor
sarl
xchg
and
xchg
jg
cli
test
cmc
mov
push
ds
inc
jmp
call
and
mov
popa
pushf
pop
xorb
jbe
mov
into
testb
or
dec
inc
mov
xchg
xchg
subl
movsl
push
out
lock
ret
sbb
gs
outsl
inc
mov
mov
add
jle
sub
lret
or
adc
xchg
out
jns
ljmp
insb
mov
mov
jae
mov
fsts
sub
mov
out
sub
adc
xchg
insb
std
mov
ds
test
sarb
xchg
repnz
push
xchg
dec
cmpsl
adcl
adc
int
inc
pop
and
adc
xchg
loop
loop
popf
repz
scas
jb
aad
mov
aaa
or
push
and
mov
mov
mov
out
xchg
notl
xchg
iret
in
dec
in
mov
ret
mov
and
in
lods
dec
xlat
adc
lcall
mov
pop
xchg
mov
aad
imul
stos
popf
inc
xchg
push
jmp
push
adc
push
out
icebp
pop
cwtl
jae
or
push
xorl
movl
push
rclb
inc
add
cli
or
pop
pop
jae
pmuludq
jo
cmpb
sbb
fnstenv
adc
jno
cs
mov
sti
ret
inc
inc
scas
movhlps
push
sub
or
cmpsb
imul
outsb
mov
aad
add
cmp
js
mov
std
cwtl
dec
and
mov
pushf
stos
ret
sub
jae
outsb
fdivs
int
push
jle
mov
insb
loope
jae
popf
dec
jmp
dec
rorl
mov
add
icebp
sti
lea
xchg
mov
adc
movsb
lock
jo
ret
fs
jle
xor
leave
mov
repnz
rcrl
sti
cmp
scas
cmpsb
aam
popf
inc
fbstp
mov
cmpsl
ss
mov
inc
push
push
mov
push
sub
xlat
push
push
jbe
xor
push
adc
lock
jbe
scas
insb
dec
sbb
mov
pop
je
or
fldt
fcmovnb
inc
and
inc
inc
xorb
in
sub
mov
clc
jns
sub
pushf
cmc
repnz
insl
sub
add
mov
roll
sbb
add
and
xor
ret
sbb
stos
pop
repz
das
fisttpll
jecxz
loopne
jmp
dec
xchg
xor
ret
outsl
adc
pop
jg
pop
cltd
es
adc
loope
inc
ret
lods
roll
pop
outsb
fdivrs
pop
inc
fwait
and
pop
xchg
inc
icebp
xchg
adc
push
mov
add
mov
iret
push
mov
adc
je
out
idivb
shl
sub
movsl
and
xchg
cmpsl
scas
roll
scas
lock
jb
push
aaa
repnz
das
fimull
loope
dec
rclb
pop
popf
jmp
test
mov
add
das
lods
mov
mov
push
push
mov
xchg
les
dec
jle
mov
leave
mov
inc
push
push
in
out
cs
and
arpl
mov
lret
popf
push
daa
cmp
add
sbb
xchg
cli
in
fisttpl
jae
arpl
into
xorl
jo
xor
or
pop
add
add
jle
out
sub
adc
inc
jle
inc
push
push
fcomip
xchg
outsb
xchg
movsl
push
popa
aad
xlat
lock
out
rcl
adc
fwait
enter
jno
xor
push
cltd
xchg
jl
in
jo
xor
imull
lock
out
mov
in
sub
sub
jecxz
cmp
pusha
mov
xchg
xchg
lcall
das
data16
pop
jle
mov
in
test
jmp
shll
sti
scas
cmpsb
xchg
or
or
sub
inc
cmp
test
pop
imul
jmp
pop
push
dec
pop
mov
cmp
movsl
jp
dec
sub
adc
ss
lds
mov
cmp
push
out
and
in
inc
adc
aam
sbb
out
lods
xchg
jg
sarb
add
fstpl
mov
or
inc
jnp
sub
in
ffree
and
test
jb
mov
pop
movsl
add
cmc
imul
mov
fcomps
sub
pop
std
test
push
and
jmp
insl
add
jo
shlb
clc
add
cmp
jne
jo
lods
cmpb
mov
pushf
xor
imul
add
mov
xor
aaa
and
xlat
push
cltd
add
loop
cli
dec
or
sub
add
outsb
cmp
iret
or
mov
cli
pushf
cwtl
repz
bound
push
sbb
inc
andb
mov
sub
fs
movsl
xchg
push
mov
add
fnstsw
std
loop
sbb
mov
nop
jae
pop
cmpsl
and
dec
data16
mov
push
adc
mov
sti
fildll
ret
dec
cmp
pusha
ret
ljmp
push
test
or
mov
pop
or
ret
iret
test
sti
int3
repz
jge
mov
addr16
cmp
clc
xchg
add
cwtl
mov
cmp
pop
cmpb
mov
pop
scas
dec
js
lret
stos
jmp
popf
js
in
out
insb
iret
addr16
mov
aas
mov
add
out
icebp
pop
jecxz
shll
inc
mov
xchg
shlb
inc
lds
pop
dec
lcall
jns
xchg
out
add
rcrb
in
ret
cmp
xchg
dec
dec
pop
pop
sbb
lods
es
mov
ror
insb
xor
sarl
pop
mov
sub
jbe
or
movsl
jmp
es
pop
pop
scas
mov
or
inc
loope
cmpsb
cld
test
lock
clc
dec
subl
jmp
mov
inc
pushf
fistl
jl
in
in
lods
push
out
mov
push
lret
insb
in
mov
mov
cmp
les
shlb
push
mov
insb
or
bound
rorb
pop
aas
cmp
jmp
in
xchg
jb
sub
fsubs
push
popa
lcall
nop
push
in
test
push
pop
int3
leave
push
fs
xor
sahf
repz
mov
cmp
xchg
pop
sbb
stos
adc
in
inc
in
adc
xchg
adc
cs
lahf
cmc
jnp
aad
jns
xor
sub
int3
jne
jp
mov
push
push
popf
les
sbb
adc
dec
mov
iret
or
mov
push
addl
cmp
dec
movsl
repnz
pop
mov
cltd
cmpsl
je
lahf
xorl
pop
imul
inc
mov
push
mov
fistpll
mov
ret
out
fisubs
lods
mov
cli
fmuls
and
dec
lret
clc
mov
shrb
cmp
mov
bound
test
xor
imul
testl
arpl
nop
jne
pusha
addb
div
mov
ret
dec
loop
imul
pop
lret
test
fdivrp
mov
in
inc
pop
pop
mov
arpl
mov
inc
xor
gs
add
mov
mov
sbb
das
xchg
mov
lock
inc
aas
xchg
inc
lcall
repnz
scas
test
jmp
sbb
sub
or
xor
lea
test
dec
je
and
or
js
dec
add
adc
mov
ljmp
jmp
sub
xor
mov
idivl
pop
popf
xchg
sbb
aaa
xchg
xor
aaa
mov
inc
xor
mov
rclb
lds
jge
push
loope
fcoms
jb
dec
xor
mov
rclb
cmp
xlat
mov
mov
sar
add
push
dec
aaa
lds
dec
sub
sahf
mov
outsb
mov
jle
sub
scas
cmp
mov
lods
movsl
inc
imul
or
or
xchg
daa
rcrb
push
dec
pop
xchg
mov
in
insb
pop
je
adc
xor
xor
lret
add
int
shrb
mov
push
repnz
xlat
push
cmpsb
jg
pop
fmuls
popa
sub
out
in
cld
sbb
fcoms
adc
fs
sbb
and
sub
jno
xchg
jge
mov
mov
cmp
hlt
mov
shlb
jl
mov
jge
lods
mov
sub
sbb
cmp
cs
xchg
lcall
and
sub
mov
and
fcoms
jecxz
xchg
mov
test
lods
daa
stos
push
cs
js
gs
movsl
mov
add
andb
hlt
stos
enter
inc
xor
out
add
call
repz
jl
in
push
cltd
adc
inc
popf
jno
insl
xor
test
add
ss
or
inc
fwait
xor
or
testb
push
pop
ds
es
xor
popf
add
mov
stos
mov
or
stc
and
cld
lea
out
xchg
negl
or
js
scas
pop
push
stos
repnz
and
pusha
lods
test
xchg
repz
ds
imul
pop
and
push
test
pop
pop
adc
xchg
ret
xor
jns
dec
std
fstp
adcl
dec
mov
mov
movsl
cmpsl
push
sahf
sub
mov
loop
push
repz
and
mov
sbb
loope
inc
jp
push
scas
or
rorb
ds
testb
mov
test
sbb
sub
adc
jbe
dec
fsubrs
rcr
daa
mov
jg
imul
mov
pushf
xor
rcrl
sub
push
inc
fwait
outsb
and
das
inc
xor
mov
dec
jne
aam
jns
jae
cmc
jl
xlat
push
cmpsl
cmpsl
stc
es
insb
or
cld
fnsave
addl
push
push
xchg
stos
std
adc
cmpsb
push
or
ljmp
lods
cmp
inc
insl
jg
push
int
leave
int
jne
out
ret
pushl
movsl
pop
dec
mul
cmp
dec
jmp
in
nop
shlb
pushf
mov
outsl
divl
roll
adc
scas
push
jmp
push
xor
not
mov
mov
inc
test
shl
add
xor
xchg
fists
mov
inc
js
sub
and
loopne
mov
shll
repz
xchg
fstpt
pop
push
cli
mov
cmpsb
cmp
xor
jnp
inc
dec
xchg
xchg
les
pop
xlat
xchg
or
fwait
jo
popf
push
xchg
nop
jbe
push
mov
and
stos
dec
xchg
out
jmp
adc
push
mov
add
adc
mov
cltd
das
fistpll
rolb
pop
sbb
pop
push
pop
repz
stc
mov
shlb
and
fs
fsubs
sbb
push
leave
jae
mov
popf
push
mov
inc
lcall
ljmp
nop
sbbb
lcall
lock
jns
sub
bound
fbld
jmp
cmpb
fbld
mov
xchg
sbb
das
movl
leave
and
data16
lret
push
out
dec
sti
cmp
cmpsb
test
mov
mov
lods
mov
icebp
pop
xor
cmpsl
inc
xor
adc
fldcw
push
lea
je
or
arpl
leave
divl
add
mov
mull
push
xchg
sbb
and
pop
pop
hlt
mov
pop
mov
lds
push
int3
aas
push
lcall
push
lods
mov
scas
lret
mov
dec
inc
or
mov
flds
imul
jno
mov
pop
add
mov
xchg
inc
sbb
pop
xchg
inc
sub
js
push
insl
adc
daa
mov
xchg
fld
xor
loopne
push
mov
mov
jo
cmp
das
mov
lret
add
repz
cmpl
les
mov
inc
insl
shr
mov
inc
sarb
popa
push
and
and
sub
pop
stos
loop
dec
insb
divl
push
cmp
xor
sbb
jmp
inc
pop
arpl
push
cmp
arpl
sub
mov
adc
movb
push
cld
sbb
and
jl
add
inc
leave
in
std
push
cs
xor
fnsave
je
int3
mov
mov
jb
pusha
in
cmp
inc
cltd
xlat
dec
fistl
int3
push
stc
outsb
sbb
rcrb
hlt
jecxz
clc
test
and
js
loope
mov
out
nop
xchg
xor
dec
add
push
in
fidivrs
cmp
xchg
push
inc
or
push
repnz
fldt
mov
sahf
nop
pusha
xchg
sbb
mov
cli
add
outsl
xchg
es
pop
rcrl
lret
xchg
mov
leave
adc
daa
lods
leave
sahf
and
pop
aas
test
mov
lea
stos
xor
and
aaa
xchg
and
stos
arpl
data16
subl
mov
lcall
or
repz
insl
dec
push
or
xchg
push
cld
shrb
jnp
ror
add
inc
jnp
xchg
movsb
jno
push
adc
cmp
dec
jb
in
or
das
movsl
lods
jmp
into
test
je
sti
add
mov
sahf
cmpb
lret
das
rcl
push
push
cmp
enter
js
lds
shlb
pop
int3
repz
cmp
test
xor
push
mov
scas
mov
jo
fwait
sub
in
test
lods
pusha
movsl
out
das
xor
dec
invd
sti
pop
ds
les
xchg
icebp
mov
aas
jmp
int3
mov
cltd
mov
out
mov
add
mov
mov
ficoml
pop
push
incb
aaa
negl
and
or
lahf
dec
cmp
in
jl
imul
into
stos
inc
mov
fsub
sbb
lcall
mov
inc
add
clc
mov
sarl
pop
in
pop
add
in
xchg
push
into
mov
or
dec
add
adcl
aam
out
mov
repz
xor
es
or
xor
push
lea
mov
cmp
dec
cli
inc
lret
out
sbb
jb
sti
sub
xchg
jnp
ror
and
arpl
dec
adc
test
push
mov
adc
int3
sbb
dec
xlat
movsb
mov
in
aad
lret
stc
ja
leave
mov
push
flds
repz
push
push
xor
testl
push
pop
jno
dec
or
fdivrs
fcoml
xor
cmp
daa
xor
jo
enter
outsl
loop
dec
sub
mov
jecxz
jle
loop
mulb
jecxz
and
mov
into
push
mov
mov
mov
adc
pop
nop
add
mov
fistl
xor
mov
jne
or
sub
mov
pushf
lret
jg
dec
push
xor
adc
call
xchg
add
sarl
xchg
ja
insb
or
mov
cli
jo
jg
cmp
out
nop
mov
lods
xchg
lock
cmpsb
js
call
mov
test
incb
push
xchg
sbb
adc
int
jmp
xor
dec
aaa
or
push
jl
or
inc
xor
call
mov
sbb
mov
mov
aam
pop
lea
out
dec
aaa
mov
cmp
imul
and
mov
pushf
dec
dec
xchg
in
repnz
sub
pop
ret
xor
hlt
pop
inc
aas
pop
push
int
cmovs
mov
aaa
sbb
xor
xor
adc
and
pop
nop
and
inc
push
out
nop
xlat
push
cmc
test
loopne
mov
hlt
test
sbb
repnz
out
ss
ret
loopne
xchg
sbb
mov
mov
xor
pusha
xor
xchg
lahf
ljmp
divl
roll
adc
sbb
dec
aam
adc
push
data16
pusha
dec
mov
cmp
cmp
test
cmp
ret
add
sahf
mov
pop
test
push
inc
filds
ret
aas
or
mov
and
dec
out
vmwrite
aad
xor
cmpsl
mov
insb
bound
inc
push
imul
imul
push
imul
shl
jno
movsl
add
pop
mov
mov
imul
or
add
mov
test
ficoml
push
jo
dec
xchg
fmuls
mov
popa
push
jo
sbb
cwtl
mov
jle
and
push
mov
pop
xchg
loopne
inc
push
or
rclb
cmp
push
jl
int
add
mov
adc
hlt
xlat
mov
sti
mov
outsl
cltd
mov
pop
jnp
imul
add
sbb
shll
jg
movb
mov
mov
pusha
xchg
out
stos
mov
lock
push
repnz
mov
mov
rcll
imul
out
add
jecxz
sub
xchg
adc
stos
xchg
aad
cmpl
sti
inc
add
lea
mov
push
mov
jmp
mulb
shl
xchg
cmp
push
mov
pop
imul
insl
inc
jl
in
es
push
scas
int
lcall
iret
lahf
push
fdivrp
daa
add
lods
hlt
cmp
mov
cld
adcl
add
stos
roll
ret
push
jnp
jmp
out
cmp
xchg
push
xorb
lret
ficoms
sbb
and
movsl
cwtl
clc
sub
int3
scas
ds
mov
jne
sub
mov
les
pop
push
jge
in
sbb
rcll
clc
pop
sbb
repnz
lock
scas
xchg
js
in
pushf
add
int3
fidivrl
je
cmp
xchg
mov
ss
pop
push
hlt
xor
cmpsl
push
xchg
cmp
push
shrl
or
pop
iret
out
inc
dec
call
dec
std
cmp
test
aad
into
sarb
repnz
add
mov
in
mov
sahf
xor
mov
sti
orb
xchg
in
push
or
daa
in
out
scas
xchg
pop
cmp
test
push
ss
xor
xchg
xchg
adc
lahf
lret
andb
sub
fmuls
out
and
scas
in
push
jb
in
adc
adc
pop
jo
bts
xor
pop
repz
jle
stos
jge
cli
lret
mov
push
iret
add
roll
add
data16
add
imul
outsb
sub
add
inc
sub
xchg
popa
jne
addr16
add
pusha
mov
adc
sbb
mov
cmc
sbb
mov
cli
je
sub
outsl
inc
pop
cmpsb
xchg
stc
aas
rclb
test
gs
jae
pop
xor
lods
jg
out
dec
aam
add
aas
xor
cmp
xchg
jmp
icebp
jmp
cmp
xor
cmp
cmc
mov
cmpsb
outsb
jle
jb
mov
ss
push
and
aaa
lods
pushf
out
ret
push
xchg
dec
mov
push
mov
mov
mov
xchg
fstl
std
xor
xor
pop
out
inc
das
cmp
cltd
fwait
nop
scas
rorl
cmpsl
lods
neg
or
rcrb
ljmp
pusha
lds
fiadds
push
jp
bound
fisubl
rep
sbbb
insb
scas
xchg
imul
mov
fstpl
cmpl
test
add
clc
dec
in
shl
xor
inc
cltd
call
jb
adc
fwait
jmp
mov
push
lahf
xchg
rcr
push
inc
hlt
subl
push
pop
test
push
rcrb
es
jge
jle
jge
cmp
fisubl
jle
and
or
out
push
mov
sub
push
cwtl
mov
fcoml
icebp
outsl
repnz
insb
and
test
test
pushf
fwait
loopne
rorb
out
jecxz
cmc
hlt
xchg
js
ret
int3
out
sti
fistl
mull
pushf
inc
mov
shr
push
or
pop
pop
mov
ret
mov
sbb
out
or
jbe
xchg
scas
into
ja
cmp
sbb
push
xchg
and
xlat
fiadds
lret
sbb
mov
or
mov
mov
rorb
jb
cltd
mov
ret
cli
mov
movsl
jle
aaa
dec
push
lods
aam
jmp
sbb
and
lretw
xlat
dec
sub
hlt
shll
push
push
push
pop
cld
addr16
mov
dec
ljmp
xor
jno
adc
pop
fcmovnu
rorl
xchg
icebp
aad
adc
aas
scas
aad
xchg
mov
cwtl
and
xchg
push
jo
out
jo
test
xchg
aaa
jnp
and
into
pop
mov
sahf
xchg
inc
add
adc
xor
movsl
inc
xor
sub
clc
filds
scas
aaa
bound
insb
xchg
jno
push
xchg
and
mov
xchg
adc
cmpsl
fisttpll
and
lods
nop
inc
out
iret
xchg
mov
in
mov
and
insb
lods
aam
pop
iret
ds
fadd
mov
push
xchg
jecxz
ss
in
sub
xchg
cmp
inc
shl
int
dec
shrl
pop
and
cmp
mov
fnstsw
test
jl
pop
mov
mov
out
lock
popf
int3
icebp
xlat
push
arpl
rcll
xor
add
add
cmp
outsb
out
sbb
lods
sub
and
into
stc
or
or
dec
fbstp
les
push
sbb
popl
gs
das
dec
sbb
jbe
mov
movsl
xor
inc
stos
xor
mov
pop
jno
nop
jbe
push
mov
inc
push
push
inc
in
clc
aad
popa
ret
xorb
out
push
aaa
stos
in
cmp
xchg
rclb
xlat
add
inc
fsubrl
test
push
xor
push
lock
ret
loopne
scas
mov
xchg
fwait
push
pop
call
arpl
stos
popf
cmp
clc
mov
enter
fstl
cmp
xlat
cwtl
out
dec
pop
cmp
dec
outsl
and
out
out
dec
mov
jbe
fisttpll
mov
mov
test
jbe
fcompl
mov
pop
cmp
push
rcrl
mov
mov
or
jae
cmp
mov
or
loop
sbb
push
insl
ss
cmp
aam
ljmp
in
xchg
fwait
xchg
aaa
in
in
enter
aas
jae
add
faddp
mov
popa
push
xchg
push
xchg
xor
rcr
outsb
sub
xor
dec
ja
loop
push
in
scas
mov
icebp
outsl
mov
sbb
hlt
sub
cli
pop
mov
sti
incl
cmp
movsb
mov
jo
cwtl
adc
inc
lret
cmpsl
jg
out
push
fstpt
jl
call
pusha
aaa
dec
cs
mov
pop
dec
cmp
loopne
mov
ljmp
sbb
mov
mov
std
push
cwtl
pop
xchg
jne
fnsetpm(287
in
jp
jnp
in
sbb
dec
pop
lcall
fs
jb
mov
je
hlt
fisttpl
xlat
cwtl
or
lods
jno
cli
mov
dec
aaa
jp
push
mov
push
sub
test
xor
repz
dec
sbb
xlat
push
push
aas
add
mov
call
mov
clc
pop
fs
adc
cmp
add
cltd
inc
in
cmp
aad
fs
rcll
dec
je
inc
sbb
mov
sbb
andb
push
rcll
xor
fmull
mov
cmp
adc
or
jbe
and
stos
dec
push
in
pop
push
cmp
pop
dec
cmpsb
inc
fisubrs
into
dec
push
mov
jnp
push
xchg
xor
cmp
int
jmp
push
ja
sub
fwait
das
fwait
shlb
xchg
jmp
roll
stc
insl
mov
dec
mov
xchg
inc
xchg
es
cmpsl
pop
stos
cmpsl
xor
and
cmpsb
or
insb
or
sarl
lds
mov
xchg
pop
rclb
xchg
neg
mov
and
repz
xchg
mul
xchg
and
cmp
outsb
or
mov
pop
xor
sub
xchg
outsl
fimull
imul
cwtl
fists
xchg
xchg
pop
out
mov
in
cmp
cmpsb
rolb
mov
mov
out
mov
add
xlat
or
call
jnp
or
add
push
out
in
mov
scas
push
fcoml
idivw
push
stos
xchg
mov
cli
mov
inc
rcll
mov
mov
aas
in
mov
and
or
bound
push
pop
mov
jbe
cmp
jne
or
jno
mov
mov
mov
dec
mov
mov
or
xchg
and
leave
je
mov
or
mov
mov
bound
mov
cmpsb
lea
push
aaa
lret
push
ljmp
dec
mov
inc
ja
pop
mul
and
inc
mov
gs
data16
mov
mov
adc
xchg
push
es
into
xor
xchg
cmp
test
dec
mov
pop
mov
addr16
mov
mov
add
add
pop
test
aad
lcall
repz
add
cltd
rcr
pusha
dec
addr16
in
enter
inc
mov
shlb
int3
mov
into
das
push
les
ljmp
cli
mov
and
cltd
aam
cmc
pop
repz
push
iret
xchg
test
push
scas
popa
push
push
les
jmp
push
inc
dec
int
push
call
and
dec
out
jbe
into
jg
jecxz
mov
sbb
test
mov
xor
xchg
ljmp
ficoms
movsl
test
mov
sbb
or
fnclex
mov
pop
jge
in
dec
stc
and
js
xchg
negl
cmp
mov
jo
lret
aad
repnz
shr
pop
add
jl
in
mov
pushf
jno
push
roll
cmpsb
dec
sbb
shll
popf
mov
jbe
stos
cmp
ss
push
inc
xchg
mov
sbb
jo
test
jmp
fildll
popa
lods
cltd
jg
in
push
cwtl
adc
or
xor
xor
dec
adc
in
dec
aaa
mov
or
push
into
sub
in
pop
cmp
xor
call
mov
cmp
leave
cltd
dec
mov
mov
orb
mov
fldt
test
inc
pop
fstl
cmp
inc
or
mov
enter
adc
shl
test
mov
call
out
pop
test
or
dec
add
aad
lahf
scas
cmpsb
lock
xor
aas
push
mov
in
ljmp
rep
das
cmpsl
sbb
push
jecxz
lock
xchg
lods
push
xchg
fsubrl
add
mov
mov
loope
adcl
arpl
cmpsl
insb
stos
lds
adc
dec
pop
das
xchg
iret
leave
orl
push
mov
into
rcl
inc
dec
mov
stc
pusha
xor
jne
xchg
push
sub
inc
lock
dec
cmpb
add
daa
in
cmpsb
movsl
loop
stc
jbe
cmpsl
and
arpl
xor
insb
in
jg
cmp
leave
clc
movsb
jg
lock
outsb
mov
xchg
pop
and
ss
scas
jge
loopne
mov
adc
sub
adc
or
shl
mov
sub
test
subb
cwtl
lock
das
clc
aad
in
jbe
ds
repnz
imul
sbb
pop
aad
cmp
mov
sar
testl
xchg
mov
push
out
adc
movsl
jg
les
jle
mov
push
or
rclb
iret
enter
or
dec
push
mov
mov
push
mov
cmpsl
sbb
sbb
cmp
std
mov
fnsave
out
hlt
mov
jb
out
ss
jle
jge
out
xor
pop
adc
sbb
or
aas
orb
jecxz
ret
inc
scas
xchg
test
iret
inc
xor
mov
lahf
std
lea
pop
jo
loopne
lcall
xor
jae
in
push
shr
outsl
pusha
out
in
enter
push
outsb
adc
out
and
push
movsb
or
vcvtpd2dqy
call
cmpsb
test
sbb
adc
pop
ljmp
inc
loope
mov
pusha
add
call
jmp
mov
xor
dec
cmp
cmp
ljmp
cmp
fidivrl
add
ja
mov
cs
int
push
rol
push
lea
mov
push
imul
inc
adc
je
xlat
out
ret
in
sti
mov
mov
inc
inc
insb
pop
test
jns
dec
mov
sbb
sub
dec
outsb
mov
xor
adc
push
pop
and
mulb
lcall
scas
movsl
xchg
shr
pop
push
push
sbb
add
sbbb
jecxz
push
xor
ja
repnz
scas
pop
mov
daa
outsl
imull
fsts
ror
pusha
push
into
aaa
fs
popa
cmpsb
mov
push
adc
je
mov
xchg
and
pop
jno
add
dec
icebp
leave
sbb
jnp
xchg
jae
sbb
xor
hlt
and
dec
jg
je
rorl
mov
stos
jnp
xor
dec
push
fldl
sbb
lea
push
cmp
inc
dec
sub
xor
movsl
dec
lds
rclb
imul
call
aad
sub
pop
xchg
pop
jg
xchg
adc
nop
sbb
stos
lods
stc
lea
iret
out
sahf
push
nop
int
roll
jnp
add
pop
in
hlt
imul
xor
mov
ja
dec
push
f2xm1
insl
add
movsl
scas
into
sti
jae
push
mov
and
out
dec
xchg
lods
xchg
pusha
rcrl
cwtl
fnsave
pop
and
xchg
or
fcmovne
cmpsl
jo
mov
ljmp
ds
lahf
loopne
lret
flds
sbbb
xchg
fidivs
adc
gs
inc
into
xchg
push
ret
mov
imul
into
and
xor
shll
sub
push
xor
je
dec
xor
xor
das
mov
push
out
lcall
pusha
sbb
sbb
mov
xchg
jb
loop
xor
hlt
cmp
dec
xchg
sub
pop
div
xorl
xor
push
xchg
es
dec
fadds
into
movsb
jg
insb
push
xchg
push
xor
mov
sub
push
ds
dec
scas
in
dec
daa
iret
imul
ljmp
fcmove
or
movsl
cmc
cmp
inc
lret
in
cmpsl
cmp
test
bound
jle
mov
popf
pop
mov
aad
push
cmc
lret
xor
scas
mov
popf
les
ret
shll
or
pushf
imul
sbb
std
cmc
int3
sub
xor
dec
inc
inc
negb
je
inc
adc
dec
xchg
in
sbb
jo
cwtl
mov
in
jo
stos
inc
add
das
ja
stc
aam
setbe
and
adc
movsb
jo
mov
mov
cwtl
lock
int3
adc
mov
testb
xchg
daa
out
jnp
xchg
pop
rcrb
ret
sub
mov
ss
negl
mov
mov
popa
lret
mov
pop
sub
lea
mov
orl
mov
dec
xor
data16
adc
jmp
push
lret
cld
jne
cmp
fbld
push
mov
xor
add
mov
push
add
shlb
out
lret
mov
jo
sub
xchg
stc
push
jo
outsb
fidivrs
mov
xor
jnp
mov
jle
or
push
pop
jae
xor
lea
pop
cmc
dec
std
xor
lret
movsl
and
jno
pop
jge
push
mov
mov
inc
jle
icebp
add
hlt
sub
jbe
add
or
push
and
mov
jno
or
cmpsl
push
adc
or
inc
xor
test
imul
mov
jbe
xor
mov
mov
adcb
sbb
lods
xchg
test
pushf
ror
cmpsb
lret
sbb
test
mov
lret
loop
inc
xchg
clc
xchg
adc
mov
mov
cwtl
dec
inc
mov
rcl
pop
bound
in
lret
fcompl
mov
aas
sbb
push
mov
std
inc
stos
int3
mov
cmp
mov
sub
xchg
out
fwait
arpl
and
mov
dec
and
mov
push
pop
in
push
int
xchg
dec
adc
jecxz
int3
mov
je
pop
popf
into
popa
mov
jne
dec
cmc
imul
pop
jmp
push
xchg
dec
dec
mov
cmp
test
fadds
out
jne
adc
jne
and
push
add
outsb
push
cs
aas
push
pop
out
dec
repz
adc
in
mov
stos
or
pop
and
mov
xor
or
jo
outsb
xchg
pushf
ss
lcall
hlt
test
movsl
add
hlt
dec
add
popl
xchg
cmp
addl
lahf
clc
adc
stc
lcall
pop
or
sub
cs
adc
mov
push
mov
push
les
lahf
daa
adc
add
sub
bound
add
pushl
pop
xchg
pop
aaa
clc
adc
inc
cwtl
inc
popf
inc
or
mov
stos
pop
jmp
pop
pop
into
test
lcall
cmc
xlat
or
mov
daa
cmpl
outsb
mov
int3
stos
push
jmp
andb
in
xor
pop
dec
outsb
in
push
xor
adc
or
mov
mov
add
adc
xchg
movl
mov
dec
inc
ja
call
insb
cmp
test
loop
mov
mov
xor
mov
shl
dec
das
ret
inc
nop
mov
test
jbe
cld
enter
mov
adc
ficoml
xchg
jne
loopne
add
push
loope,pn
jp
mov
and
dec
push
xor
adc
lods
in
jb
mov
adc
leave
in
out
mul
rcrb
push
xchg
pop
mov
adc
pop
jns
mov
call
xchg
sub
mov
cwtl
xchg
in
sahf
and
mov
push
push
or
xlat
fdivrl
jbe
sti
es
hlt
andl
dec
jle
adcl
pop
push
cmpsl
lock
aad
mov
inc
ljmp
mov
pop
shll
ja
pop
and
lods
js
add
test
adc
or
jne
mov
dec
js
cmp
push
in
shrl
cmpsl
jb
and
in
pop
loop
and
mov
dec
xchg
cmp
cmp
sbb
jo
jnp
sbb
dec
sbb
push
aaa
sbb
inc
push
pop
pop
mov
ljmp
sbb
mov
loop
push
dec
cmpsb
xchg
inc
lea
pushf
mov
xchg
jbe
xor
divl
pop
lahf
out
sarb
sub
mov
xor
xchg
cli
cmc
stc
aas
xor
mov
mov
jmp
test
and
xchg
xchg
ss
jnp
cld
test
pop
mov
addb
sbb
mov
mov
inc
mov
dec
push
pop
jge
addr16
ja
das
movsb
mov
mov
lret
ret
pop
lret
cs
mulb
jge
jge
lea
dec
jae
mov
aad
add
aad
pop
sub
jl
sti
dec
xchg
xchg
call
lahf
mov
out
jmp
scas
into
cmp
sub
cmp
filds
add
pop
mov
aad
mov
cmp
cmpsb
pop
inc
add
jecxz
mov
or
imul
and
sbb
into
pop
pop
adc
mov
stos
lcall
out
subb
xor
sbb
xchg
outsl
or
testb
xchg
gs
add
add
stc
repnz
test
xchg
test
mov
cmpb
decb
dec
outsb
pop
push
cmp
std
mov
in
sub
xor
add
daa
aad
lods
jmp
int3
cmp
add
mov
leave
pop
mov
call
jecxz
iret
mov
mov
jp
jl
stos
cltd
mov
ljmp
cmp
jnp
insl
jnp
dec
xor
enter
scas
mov
lcall
lea
add
cmp
push
inc
int3
test
subl
inc
push
push
inc
jb
jns
pop
aam
inc
pop
cmpsb
mov
iret
lret
lods
adc
imul
pop
jecxz
loopne
divb
pop
dec
jp
mov
mov
cmp
punpckhbw
fsubl
push
mov
test
jns
fimull
stos
mov
xchg
mov
test
dec
push
aam
addb
xor
fwait
sub
jmp
int3
aas
aam
mov
ja
ds
dec
push
and
cmpxchg
in
sbb
push
pop
cli
jae
pop
outsl
insl
mov
xchg
xchg
mov
push
cmc
add
movsl
test
cmp
stos
arpl
test
sbb
mov
outsl
cli
push
mov
imulb
jo
enter
lret
pop
call
mov
or
mov
jnp,pn
outsl
mov
or
addb
cmp
dec
xor
add
xchg
pop
and
jae
iret
test
push
ret
insb
fiadds
decb
lret
sbb
jns
stos
jne
cld
mov
lods
fstps
ss
imul
or
push
fidivs
cmp
pop
ret
lods
dec
aam
mov
leave
rcr
mov
test
mov
xorb
fwait
es
and
pop
dec
in
inc
ret
pop
repnz
dec
scas
sahf
adc
add
push
add
int3
jae
inc
push
sbb
imul
imul
cmp
ret
mov
xchg
sbb
mov
insb
sti
mov
push
add
mov
popf
fxch
popf
xor
js
adc
je
adc
sbb
adc
mov
mov
rclb
or
arpl
test
sbb
inc
pop
mov
mov
das
mov
add
jo
fwait
add
jnp
xor
loope
inc
xor
xchg
scas
adc
pop
in
sub
push
js
ret
and
xchg
addr16
out
jnp
xchg
push
or
add
xor
int3
sbb
push
in
add
jp
jbe
imul
cli
cmp
mov
pop
dec
shrb
sbb
pop
das
ds
cli
xor
test
add
xor
loope
mov
lea
lret
xchg
xor
sub
inc
imul
fstps
fmull
shlb
fildl
mov
and
add
adc
add
mov
loop
cs
or
jns
jns
cltd
xchg
mov
mov
mov
arpl
xor
loopne
fnstcw
cmc
add
mov
out
imul
icebp
notb
xor
push
ret
xchg
sub
xchg
das
loope
into
shld
mov
call
js
dec
ret
in
mov
leave
int
jecxz
or
aas
imul
cli
add
pop
shlb
aam
dec
and
call
sub
adc
js
enter
outsb
nop
and
xor
outsl
xchg
fstpl
jae
call
dec
fpatan
lods
aaa
enter
addr16
mov
pop
ret
ror
and
push
shlb
sub
sbb
xor
xchg
pop
xchg
jb
or
pop
add
pop
enter
xchg
lock
xchg
and
sbb
push
inc
sub
les
data16
mov
movsb
cmpl
int
jo
or
mov
add
lods
ds
pop
sub
pop
mov
cld
pop
mov
cs
sbb
insb
pop
mov
out
cmpsb
push
xlat
cmp
and
sbb
cs
mov
in
out
add
scas
dec
push
jae
clc
call
gs
pop
std
pop
or
aaa
repz
push
lea
cmp
sti
fldt
adc
add
mov
repnz
in
and
jne
or
ss
push
and
and
jo
repz
stos
jp
sub
cld
mov
or
mov
add
inc
cltd
stos
mov
adc
daa
int
ja
inc
sub
mov
incl
mov
pop
inc
pop
dec
daa
mov
push
and
adc
rorb
xchg
xor
aaa
and
dec
push
mov
xchg
inc
sbb
filds
sub
ss
lcall
int
aam
movsb
xor
lea
roll
mov
push
loope
in
jne
sbb
gs
dec
mov
mov
fidivl
ret
mov
jae
or
adc
std
inc
push
stos
and
push
iret
in
orb
xor
adc
add
clc
popf
mov
andl
imul
xor
notb
idiv
xor
lcall
adc
roll
inc
mov
push
insl
jne
test
xor
enter
pusha
jmp
jp
or
out
inc
xor
sub
dec
imul
jmp
jo,pt
cmp
sub
mov
xor
bound
dec
addr16
out
push
inc
pop
data16
test
dec
pop
ret
dec
adc
aaa
out
ljmp
and
add
xchg
inc
stc
lret
fdiv
sub
fwait
aad
leave
jns
lea
int
or
lds
dec
mov
add
mov
cmp
mov
orl
ret
outsb
xor
add
jmp
pop
aam
loopne
cmpb
cwtl
sub
imul
jb
fmull
jo
fcoms
jl
pop
ss
insl
es
sub
push
mov
iret
pop
xor
cmp
xor
mov
std
js
shll
je
cmpl
xchg
mov
inc
ljmp
je
js
int
int3
lods
test
dec
test
lret
fisttps
fiadds
outsl
ret
mov
les
call
lahf
orb
cmpsl
not
and
adc
or
push
pop
gs
xchg
sub
xchg
leavew
aaa
dec
push
dec
cmc
out
bound
lcall
pop
movsb
ljmp
xchg
pop
movsb
mov
fs
loop
loop
fdivrl
getsec
fs
leave
push
pushf
pusha
sbb
push
pop
xlat
xor
jg
add
inc
add
sub
in
movsb
mov
cmp
gs
jge
out
repnz
fs
adcl
mov
iret
or
fistps
fdivs
mov
mov
pop
lds
push
movsl
jmp
repnz
jo
jns
movsl
cltd
push
cmpl
or
jne
mov
mov
rcrb
aaa
stos
mov
jp
mov
addl
mov
sub
pop
gs
dec
jmp
jns
jo
icebp
jae
sbb
sbbb
sbb
addl
adc
or
cmp
fs
rcrb
add
push
cmp
push
sub
psubusb
mov
int
mov
sbb
ljmp
arpl
sub
mov
mov
ljmp
icebp
test
sbb
cmpsl
int3
fistps
sub
dec
mov
mov
xchg
xchg
imull
push
gs
xor
sub
adc
push
or
pop
jmp
xlat
xchg
mov
dec
push
xchg
ljmp
adc
mov
imul
cmc
int3
adc
cwtl
rcrb
and
stc
gs
dec
mov
or
aad
enter
lea
pop
cmp
inc
pop
int3
popl
stos
mov
and
subl
add
bound
mov
psubb
push
sar
add
pop
mov
cmp
dec
add
jnp
pop
shll
es
pop
jbe
pop
xorl
inc
ds
xor
pop
xlat
add
outsb
je
inc
in
aas
pushf
out
push
xchg
fsubp
shl
lahf
into
mov
push
fwait
dec
pop
sahf
incb
mov
dec
mov
ret
out
cmp
icebp
aas
lret
aad
and
scas
daa
jl
out
rorb
mov
xor
push
mov
rorl
and
out
xchg
jb
loope
pusha
dec
sbbl
adc
ret
es
sbb
lret
push
leave
mov
mov
repnz
std
rcr
clc
push
xor
test
lea
dec
sub
mov
mov
sbb
int
shr
outsl
loop
jno
cmp
std
in
in
add
or
or
sbb
mov
test
jb
pop
mov
popa
insb
push
or
sub
sti
jbe
mov
shll
out
add
inc
jbe
cld
popa
aam
leave
fmul
dec
cmp
mov
fucom
jmp
in
in
sub
mov
bound
ds
add
pop
mov
pop
fcmovbe
sbb
xchg
add
fwait
or
cld
dec
sub
sub
notl
inc
insb
mov
ret
xor
adcb
jmp
dec
cmp
inc
je
ja
fstpl
jo
pop
and
imul
sahf
stos
outsl
inc
roll
push
cmpsb
fildll
repz
out
inc
xor
dec
dec
xor
push
or
xor
mov
xchg
sahf
pop
adc
mov
xor
xor
jp
adc
xor
scas
mov
cs
ljmp
ja,pt
fstps
out
iret
jmp
xor
push
fisttpll
in
scas
xchg
dec
mov
push
dec
jg
xor
cmpsb
lods
cld
adc
jecxz
xor
int
jno
mov
sets
setne
jecxz
mov
aas
js
cmp
pushaw
imul
mov
out
das
dec
fdivrs
jg
ja
repnz
fs
or
insl
add
jmp
jl
jns
mov
mov
sbb
and
sbb
popl
jb
sarl
loopne
cmpsb
data16
lods
mov
jmp
mov
es
cltd
dec
dec
das
dec
test
outsl
fsub
loopnew
cmp
dec
scas
lods
roll
push
sbb
nop
mov
mov
xchg
push
js
movsl
pop
mov
and
push
and
jp
cmp
xchg
xor
xchg
dec
fimull
push
addr16
xorb
or
xchg
inc
cld
jo
xchg
add
xor
xor
call
dec
test
mov
stos
pop
or
mov
or
sti
movsl
mov
lcall
fidivl
adc
sbb
pop
and
stos
push
cli
cld
int3
idiv
pop
test
testl
int
cltd
movsl
or
cwtl
xchg
mov
xchg
shrb
insb
daa
pop
outsl
repz
inc
idiv
dec
jp
dec
cmp
out
daa
push
pop
shl
inc
popf
call
push
mov
mov
xchg
mov
xchg
and
push
or
dec
popf
xorl
lahf
aas
imul
stos
test
mov
xor
cmpsl
push
cmpsb
lret
sub
pop
push
adc
rol
outsb
mov
sbb
pop
imul
popf
add
call
sbb
mov
mov
push
adc
aad
sub
aam
inc
aaa
inc
fcomi
call
sbb
inc
jno
lods
or
and
push
test
inc
loope
mov
test
jo
fisttpll
push
xchg
in
rorb
jne
lret
fcoml
inc
cmpsb
cmp
jge
pop
inc
pop
pushf
xchg
cld
xlat
stc
add
mov
cmp
js
jecxz
inc
push
jb
fdivs
add
mov
pop
inc
sub
js
add
in
iret
stos
jge
orb
fstps
in
jmp
jg
xlat
popf
imul
add
lds
sub
push
pop
loopne
or
dec
lods
and
sub
enter
dec
and
mov
fcomps
call
push
outsb
and
mov
add
es
xchg
mov
repz
pop
bound
jno
mov
addr16
mov
decb
imul
shll
xchg
and
loope
bound
jns
out
add
add
mov
add
xor
adc
add
sbb
int
mov
mov
popa
pop
xchg
fdivrl
out
inc
cmpsb
push
add
adc
iret
cmp
push
sbb
addr16
push
dec
mov
sub
sbb
cmp
pusha
aas
adc
push
out
mov
daa
popa
test
sbbb
out
lds
mov
mov
cmpsb
mov
jg
arpl
fcmovnb
mov
fistl
push
and
mov
xor
or
mov
lds
out
out
frstor
into
adc
pop
mov
push
mov
jnp
mov
jne
cmp
cmp
add
dec
xchg
ljmp
cmp
push
push
nop
mov
sub
push
rcrl
xchg
lds
aam
adcl
adc
lds
icebp
int
rolb
pusha
add
sub
imul
ds
jnp
cmp
faddl
test
pop
fidivrl
movsl
push
inc
aaa
loop
sbb
insb
push
xor
movsl
sub
mov
mov
cmp
xchg
xchg
test
repnz
sti
enter
popa
imul
outsb
icebp
push
insb
jbe
subl
std
adc
xor
fstpt
fldcw
aam
js
sti
xchg
pop
xor
xor
lret
dec
imul
jnp
mov
enter
mov
jge
jp
push
std
movsl
je
cli
ds
pop
cmc
lret
jle
jo
ret
js
out
outsl
adc
daa
movsb
gs
jecxz
mov
fwait
lahf
inc
int3
sbb
int
mov
jecxz
mov
push
out
clc
iret
cmpsb
in
das
mov
cmp
subb
jle
cwtl
mov
mov
mov
pop
sahf
daa
in
mov
inc
aad
es
lods
out
jno
cs
movsb
xchg
outsl
and
rclb
inc
adc
insb
mov
sti
mov
lret
xorl
push
jnp
xchg
aas
int3
sub
push
mov
lods
sub
cld
in
movl
adc
out
xchg
lahf
pop
insb
sub
push
aaa
lcall
push
or
sub
or
mov
repnz
sbb
rcrb
cmp
cmp
repz
mov
lds
clc
nop
lds
gs
jg
dec
sub
ja
jns
sub
mov
insl
punpckhwd
mov
sbb
add
push
ret
aas
pusha
nop
je
dec
or
or
sub
fistl
mov
stc
inc
mov
out
pop
mov
dec
lods
pop
xchg
sbb
add
test
icebp
pushf
insb
enter
lds
sub
xchg
mov
sub
sub
out
test
jl
fsubrs
cld
daa
stos
sub
xchg
jbe
sub
mov
ret
push
fidivl
pop
test
and
sub
cld
sbbb
inc
js
leave
xor
pop
jno
adc
into
jne
adc
jl
movsl
dec
xor
xchg
out
test
cmp
scas
jae
or
add
test
jmp
ljmp
jmp
and
out
dec
loopne
mov
imul
jecxz
xchg
sub
pop
xor
inc
jge
mov
xchg
out
cmp
lret
enter
outsl
pop
leave
xor
lahf
inc
insl
sub
mov
xor
pop
mov
push
shrb
push
pop
fiaddl
push
or
adc
sarb
mov
jb
push
jmp
imul
ret
rcrl
pushf
aas
mov
stc
inc
ret
inc
fs
adc
add
addb
cltd
dec
push
sub
movsl
cli
sti
dec
imulb
shll
xchg
cmpsl
mov
pop
sub
inc
sbb
scas
dec
fwait
loop
lods
leave
and
inc
mov
dec
rclb
pusha
mov
popa
iret
sub
push
cld
mov
push
xor
sbb
les
xchg
loope
inc
mov
popf
mov
sub
xor
adc
cmp
bound
std
jle
inc
pop
cltd
test
sub
mov
pop
xchg
mov
xchg
jge
inc
in
mov
cmpsb
ja
add
lahf
outsl
ja
cmpsb
jge
sbb
sbb
stos
sbb
addr16
fistl
out
jb
sbb
in
jb
data16
outsl
mov
nop
in
pop
xor
enter
repnz
pop
data16
push
orb
jbe
lods
pop
lea
idivl
mov
imul
sbb
test
mov
xchg
nop
orb
rcrb
jp
into
loope
lahf
cltd
pop
jmp
es
pusha
mov
aad
xchg
enter
icebp
cmp
add
lods
mov
adc
jecxz
and
dec
rcr
push
aaa
lods
jg
xlat
daa
push
mov
or
or
pop
mov
ficompl
repz
in
jmp
hlt
jl
mov
mov
push
push
mov
cmp
mov
mov
repz
mov
aas
rclb
lods
fnstsw
sub
nop
adc
adc
icebp
mov
add
adc
imul
xor
loope
pop
mov
pop
test
fwait
add
push
push
mov
ret
push
mov
mov
sbb
dec
xor
std
push
ja
insl
jno
add
sub
jmp
gs
in
cmp
push
mov
cmp
dec
jp
pop
add
cmp
xchg
lea
xchg
mov
sub
sub
adc
jecxz
sysenter
out
pop
jle
call
outsb
out
jnp
test
jns
movb
sub
outsl
mov
dec
jb
and
ljmp
shl
loopne
popa
fstpt
mov
adc
lods
mov
add
test
out
in
rcrb
mov
mov
mov
aaa
ds
out
lods
ss
fildl
inc
sub
ds
xchg
or
insl
testb
in
xchg
sti
fsts
leave
jmp
mov
jne
cmp
gs
adc
dec
in
inc
insb
gs
xchg
adc
faddl
divl
fimull
repz
daa
cmp
mov
stos
xchg
in
aam
dec
or
pop
jnp
sahf
into
mov
lahf
out
adc
and
xchg
lret
nop
rol
fcoms
cltd
mov
pop
jp
adc
xor
in
inc
aas
inc
pop
xor
fdiv
ljmp
leave
fldcw
int
and
xor
xchg
inc
mov
loope
ljmp
pusha
pop
xchg
jmp
push
and
icebp
jno
jo
mov
fs
cltd
ja
daa
mov
stc
pop
xlat
jmp
sub
addb
inc
add
clc
mov
leave
cltd
mov
and
bound
jo
ret
dec
cmp
pop
lcall
inc
jo
and
addr16
pop
sbb
lea
add
jg
cmpsb
mov
push
dec
jmp
stos
out
imull
push
js
jmp
dec
pop
pop
inc
push
lock
popa
adc
add
xor
std
pushf
mov
pop
aas
mov
sbb
sbbl
fmull
std
call
cmpsl
jne
cld
mov
mov
lahf
mov
adc
push
and
push
sub
jb
add
inc
cmp
test
leave
movsb
push
or
xor
orl
push
jne
inc
sub
loop
add
or
adc
mov
in
sbb
ret
xor
orl
xchg
inc
test
xchg
cwtl
cld
roll
pushf
lret
jge
dec
adc
adc
cs
in
mov
mov
daa
out
loopne
ror
flds
or
mov
outsl
sub
and
push
stos
movsl
cwtl
mov
push
pusha
jb
inc
mov
test
lock
mov
lret
xchg
jge
or
jmp
push
cmp
sub
jg
mov
mov
lds
jl
ret
aam
test
fnstsw
lahf
outsl
neg
js
jno
mov
lods
pop
pop
jnp
mov
mov
cmp
iret
out
js
xchg
imulb
mov
enter
jnp
xchg
xor
mov
es
xor
iret
sahf
mov
mov
mov
xor
sub
inc
add
shll
int
js
cmp
jno
inc
and
lea
pop
mov
int3
inc
sub
mov
mov
addb
cmpsl
cmc
cmp
mov
xlat
xchg
aam
adc
dec
mov
xor
lahf
pop
sub
gs
mov
fidivrs
xor
sbb
or
aad
jo
loope
push
leave
fiadds
sbb
jl
ss
pop
add
push
hlt
ret
dec
add
jae
jmp
push
imul
into
int
mov
xor
sbb
xor
add
xlat
es
xor
shl
mov
in
mov
mov
xchg
inc
inc
inc
pop
mov
fdiv
loopne
xor
dec
bound
inc
pop
sub
push
cltd
ret
xchg
mov
loop
jle
outsb
ret
jmp
adc
jb
xrelease
inc
jmp
sbb
sub
mov
addr16
jg
mov
lock
mov
pop
in
out
out
rcl
sub
mov
pop
dec
movl
rclw
shl
xor
iret
in
pushf
out
popf
int3
jnp
fwait
ljmp
fidivrl
xchg
inc
dec
pop
xchg
xlat
es
pop
push
incb
outsl
add
movsb
sub
mov
mov
bound
add
dec
add
cmp
push
stc
push
fisttpll
mov
sub
fnstcw
dec
out
pop
stc
iret
push
mov
add
jb
aaa
and
sub
mov
data16
std
jp
pop
das
add
inc
jmp
jno
adc
push
jo
xor
add
bound
sub
adc
mov
jmp
dec
mov
sub
cs
sub
hlt
ja
cmp
loop
dec
sub
pop
sub
sbb
leave
xor
adc
ret
inc
jnp
dec
div
xor
xor
push
or
pop
out
and
ret
sub
push
mov
repz
inc
sub
mov
cmp
jmp
and
cmpsb
pusha
loopne
push
inc
cmpl
loopne
int3
inc
jbe
sahf
insl
cmpsb
cmp
je
hlt
add
xchg
lods
pop
pop
test
enter
jmp
cmpsl
dec
add
cmp
out
mov
pop
sbb
cmp
and
fstps
adcb
imul
sbbl
jbe
test
pop
sahf
cmp
mov
jle
mov
mov
enter
lea
mov
roll
cmp
jnp
mov
xchg
mov
sub
cmp
push
pause
jmp
jl
cmpsl
subb
mov
xchg
sbbl
decb
push
xchg
mov
cmovo
mov
jo
cli
or
testl
lret
sub
pusha
mov
xchg
pop
mov
xchg
add
pop
jnp
pxor
hlt
data16
fcmove
data16
iret
popa
movl
cmpsb
sub
movsl
pop
jecxz
in
mov
pusha
sti
sbb
mov
mov
loope
or
xchg
gs
jecxz
mov
sub
lret
xchg
add
nop
je
dec
out
push
imul
or
scas
sbb
cs
jne
cwtl
dec
or
stc
sbb
test
pop
dec
push
xor
xor
js
add
imul
inc
mov
pop
add
lret
cmpsb
test
cs
jp
inc
lods
pushf
push
sub
sbb
inc
pop
lahf
fists
mov
out
mov
mov
dec
insl
xor
test
sarb
mov
int
xchg
in
jae
push
popa
mov
dec
hlt
jo
mov
stc
jne
dec
inc
inc
adc
jno
xor
sbb
mov
cmp
pusha
je
pop
push
dec
push
dec
pop
fldt
popa
movsl
and
dec
sbb
scas
sahf
fnsave
mov
scas
mov
sub
push
clc
xchg
or
inc
push
cmp
mov
xchg
test
jmp
add
sub
popf
bound
or
cltd
adc
fldcw
and
fnstsw
mov
mov
push
std
cs
fdivs
mov
out
or
and
test
mov
inc
and
pushl
scas
nop
pop
inc
mov
insl
add
mov
popf
add
add
push
loope
popa
fs
insb
xor
push
ja
mov
mov
jg
mov
fsts
lahf
mov
daa
lods
fnsave
push
dec
pushf
lock
push
jb
mov
xchg
cmpl
push
mov
sbb
hlt
stos
jmp
push
loope
or
test
fnsave
lods
inc
lods
loopne
mov
jp
data16
xchg
roll
and
repnz
sbb
leave
lret
arpl
xchg
sub
nop
adc
scas
add
sbb
push
cmp
aaa
mov
push
decb
bound
int3
ljmp
ja
sbb
adc
jl
aad
jg
jmp
mov
cld
icebp
xchg
std
push
outsb
fwait
jnp
arpl
xchg
addb
imul
movsl
movb
insb
adc
rclb
mov
rcll
repnz
ror
aaa
sub
in
shll
jb
inc
adc
add
push
sub
push
mov
sti
ja
lahf
imul
jmp
mov
pop
mov
xchg
hlt
or
test
push
jnp
pop
cmpsl
xor
xor
ja
stos
add
cmp
mul
pop
xchg
push
jns
xchg
sub
push
or
addr16
mov
fildll
insl
aas
aam
cmp
xor
out
aam
xchg
dec
call
das
mov
sahf
push
inc
push
lea
xchg
jno
mov
test
mov
stc
xor
mov
lea
mov
out
mov
ret
pop
lcall
dec
ret
cmp
aaa
add
dec
test
inc
push
lret
mov
add
push
mov
mov
popf
aam
xchg
push
push
cmpsl
push
pop
mull
addr16
repz
jb
xchg
pop
into
pop
xor
outsl
xchg
pop
and
imul
pushf
adc
mov
dec
inc
in
iret
jbe
add
fistl
fistpl
flds
inc
xlat
sbbl
mov
icebp
add
adc
mov
xchg
pop
inc
and
push
push
push
lret
adc
jge
negb
sbb
dec
jg
sub
add
and
xchg
inc
cmp
xchg
cmpsb
mov
mov
jmp
scas
loop
aaa
add
dec
insb
fwait
xchg
clc
jnp
cmc
gs
lods
dec
incl
xchg
sub
dec
dec
jo
lret
ljmp
sbb
cld
pop
mov
stc
out
lods
rol
inc
lods
imul
sub
push
out
les
std
adc
push
sub
lcall
shl
stos
adc
pop
cmp
addl
inc
fcmovnbe
arpl
push
movsb
mov
and
mov
xchg
pop
pop
cmpsl
fprem
negb
or
cmc
mov
mov
mull
sti
adc
and
dec
scas
dec
cmp
mov
push
stos
or
loopne
int3
sbb
mov
pushf
das
add
sbb
test
adc
add
push
sbbl
jge
inc
out
sbb
sbb
lahf
ret
dec
je
jp
mov
pop
es
add
and
int3
popf
fmuls
push
das
addr16
sbb
cs
aam
fsubrs
in
fadd
call
adc
popa
int
mov
mov
cmp
mov
icebp
into
inc
mov
lea
test
sbb
inc
xor
mov
js
out
repnz
mov
adc
in
bound
xchg
fnsave
test
jg
popf
push
jle
mov
gs
mov
ret
pop
je
mov
push
push
mov
push
mov
xor
sub
in
jae
mov
push
mov
ja
xor
ret
add
ss
jle
push
cmp
cmp
pop
in
sbb
xchg
mov
xor
mov
ret
aam
fbstp
push
fchs
test
insb
lods
popa
mov
je
es
push
lods
xor
mov
imul
sub
test
sub
sbb
jg
xor
into
dec
clc
fstps
pop
or
mov
sub
pop
fmuls
data16
mov
rol
pop
int3
enter
adc
jns
jl
insl
iret
inc
gs
inc
shl
sub
pushf
ljmp
insb
lret
add
sbb
dec
test
dec
loope
in
mov
add
push
push
das
jl
xor
cmp
jmp
xchg
maskmovq
notl
adc
jo,pn
ds
movsb
jae,pn
aad
dec
lods
jbe
imul
addr16
jne
out
out
mov
fists
shlb
movsl
mov
ficomps
sbb
mov
inc
sub
jecxz
mov
inc
xchg
cmp
pop
adc
adc
shl
cltd
stos
cmp
cwtl
cltd
popf
xor
mov
sbb
add
repz
sub
outsb
push
in
sub
cmc
pop
xorl
test
in
bound
imul
fnsave
or
xor
cmp
fs
das
pop
dec
lea
sub
or
add
data16
xchg
scas
movsl
repz
or
xchg
mov
lcall
inc
sbb
movsl
push
sti
jo
std
jno
repz
mov
mov
les
pop
in
bound
inc
sub
sub
rcrl
and
and
scas
in
fwait
ss
inc
xor
lods
jge
adc
mov
push
cmp
xchg
call
aad
xchg
fcmove
fs
in
push
cmp
enter
sbb
or
and
xlat
push
fwait
loope
daa
sub
shll
lea
enter
test
or
cmpsb
or
lock
jns
xchg
loop
sub
mov
test
outsb
sub
sub
cli
sub
sbb
pop
subl
pop
push
mov
jae
repz
pop
inc
mov
les
jmp
lret
mov
dec
pop
fcoml
arpl
in
test
xor
inc
xchg
loope
fldln2
mov
js
xor
pop
sub
push
sti
adc
dec
push
push
lods
adc
lock
mov
mov
fwait
roll
or
and
mov
adc
add
xor
mov
es
xchg
or
mov
loopne
cmpsl
inc
cli
mov
jnp
out
test
testb
dec
mov
mov
pop
mov
inc
sub
and
push
push
lods
testb
ss
out
loopne
test
lret
or
and
cmp
push
jnp
pop
dec
stos
xor
add
adc
fmull
jne
sbb
sbb
sbb
xor
popf
and
and
mov
ljmp
mov
rcl
mov
inc
movsl
fstl
pop
xchg
xchg
cmp
and
fldcw
push
leave
jle
pop
pushf
xor
sar
lahf
jbe
lret
or
fiadds
imul
imul
lret
mov
inc
scas
fwait
push
pop
cwtl
inc
mov
pop
pop
push
sbb
into
dec
mov
hlt
sbb
outsl
or
repnz
xor
cmp
add
call
cs
sahf
sub
and
pop
jns
popa
push
jb
mov
and
and
insb
jo
adc
insl
jb
in
sbb
call
push
lds
rcll
or
sbb
add
adc
mov
ja
into
arpl
and
and
pusha
mov
aaa
add
rorl
cwtl
stos
aaa
lret
ret
inc
test
dec
adc
addr16
in
fadd
or
test
push
imul
call
dec
mov
cmp
out
and
push
lahf
sbb
lahf
mov
addl
pusha
imul
and
decb
scas
and
pushf
idivb
lods
mov
jge
or
stc
dec
xchg
sub
fstl
je
insl
mov
negb
repnz
addr16
add
repnz
xchg
xchg
xchg
jae
sub
les
inc
mov
jb
jbe
mov
jl
sahf
lahf
jae
mov
or
int
aad
pop
in
push
out
or
inc
popw
inc
jo
decl
lcall
stc
xchg
mov
mov
dec
jb,pn
xchg
xchg
or
repnz
push
pop
or
outsb
in
sub
gs
fcmove
insb
jbe
lock
jecxz
les
lcall
gs
movsl
inc
rolb
jecxz
xchg
push
daa
mov
repnz
and
in
out
sahf
mov
mov
adc
mov
mov
addr16
mov
lock
shl
repnz
sbb
mov
add
mov
pusha
push
adc
mov
push
mov
das
pop
add
inc
lea
xchg
dec
fadds
mov
inc
sub
neg
imul
jmp
push
pop
test
xor
jbe
into
out
loope
lahf
gs
int
enter
xchg
in
outsl
lcall
test
inc
imul
jno
popf
push
out
cli
ljmp
loope
add
cs
sub
jl
mov
push
jno
fsubrp
adc
out
jo
push
insb
pop
jge
aas
int3
cmpsb
arpl
push
jns
movsl
adc
mov
fcoml
mov
mov
inc
fisubs
popa
jo
ljmp
mov
push
mov
ljmp
xor
lds
aad
les
jl
cli
test
adc
jae
roll
sbb
test
insb
dec
icebp
leave
loop
mov
sbb
dec
xchg
arpl
mov
out
jnp
mov
pop
jp
xor
movsl
push
inc
pop
add
cmp
insl
shll
mov
add
and
push
fimuls
test
xor
adc
and
repz
std
cltd
sahf
test
sub
int3
popa
mov
pop
mov
push
loop
clc
jp
and
fiaddl
pop
dec
adc
jle
cwtl
xchg
enter
out
sub
in
jbe
pop
clc
cli
jle
insl
repz
dec
leave
add
xchg
or
in
ja
movsb
out
adc
sbb
sahf
data16
inc
in
push
mov
fwait
sub
cs
shrb
ret
or
jp
mov
loop
dec
mov
cmc
push
nop
cs
test
rorl
lds
mov
aad
lods
popf
enter
flds
jecxz
rcll
mov
mov
outsb
ret
fs
push
js
dec
xor
jecxz
mov
fsubrl
aad
fdivs
arpl
clc
mov
lds
fwait
cmpsl
xchg
adc
inc
outsl
pop
xchg
inc
lret
and
cli
jns
test
adc
sahf
shlb
adc
push
push
stos
xchg
fistpl
cs
out
in
ja
test
rcrb
xor
or
mov
cwtl
lret
push
add
rol
out
fisubl
jne
in
sub
rcl
pop
inc
fcoms
aam
jne
rcrl
dec
in
sbb
loope
or
in
add
stos
dec
push
and
scas
ret
lds
sbb
pop
push
sub
lahf
test
lret
adc
mov
stos
scas
inc
xchg
sub
loope
xor
xor
arpl
fidivrs
mov
mov
sub
push
outsl
testl
xor
mov
outsb
hlt
jnp
mov
cmp
pop
jnp
xchg
in
push
pop
cmp
mov
fstpl
aam
xchg
js
mov
inc
push
or
push
shrb
sbb
pusha
ret
push
xor
sub
xor
je
adc
pop
dec
into
in
or
pusha
popa
push
fsqrt
lds
xchg
and
sar
fiadds
loope
scas
scas
getsec
push
imul
inc
and
and
jb
int3
cmp
jns
scas
dec
sahf
sbb
addr16
dec
push
gs
push
rcl
or
add
shrb
fistpl
mov
fidivs
dec
jecxz
pop
out
mov
and
add
pop
mov
sub
aas
and
shrl
addb
iret
fwait
cmp
daa
pop
jle
rclb
call
nop
sahf
or
enter
sub
outsl
cs
scas
ljmp
inc
outsl
sub
sti
add
mov
leave
test
xor
push
out
jns
je
stos
adc
jb
push
xor
xchg
aad
scas
sub
push
pop
lods
add
pusha
xor
outsb
pop
pop
adc
jl
mov
faddl
pop
cmp
rorl
fwait
or
lret
inc
out
ret
cmp
aam
adc
bound
iret
mov
out
imul
in
cmp
sub
add
rcl
jb
or
out
cmp
push
xor
sti
mov
in
shr
push
and
mov
mov
xchg
mov
shll
and
jb
mov
into
and
pop
push
aaa
adc
js
bound
pushf
ret
push
jge
ret
inc
inc
ljmp
lcall
mov
sbb
sbbb
mov
fnsave
in
push
sbb
and
sub
and
push
daa
or
or
cmp
jae
push
insl
push
dec
and
popf
lcall
mov
es
enter
lcall
and
scas
or
dec
pop
push
push
lahf
imulb
jmp
inc
fs
jnp
or
mov
lds
stos
jo
lods
jbe
cmp
mov
mov
lods
rcl
in
inc
iret
sarl
cmp
mov
insl
stc
es
dec
cmp
dec
cltd
or
jecxz
push
xchg
clc
push
icebp
ds
lods
pop
mov
pmulhw
bound
xchg
aas
and
push
inc
jmp
movntps
and
jb
loope
and
arpl
inc
cwtl
cmpsl
ficompl
ret
pusha
icebp
push
push
sbb
imul
jmp
aas
test
loop
push
mov
xchg
or
sti
pop
mov
iret
sbb
outsl
xor
fbstp
lcall
or
cmp
cmp
sahf
mov
dec
sub
adc
popf
or
orb
cwtl
or
mov
out
xor
inc
inc
sbb
push
push
ret
out
and
inc
mov
mov
mov
iretw
xchg
cli
sbb
mov
mov
mov
mov
outsl
sub
pop
out
xchg
stos
cmp
fs
movsb
mov
mov
inc
jp
test
or
dec
cwtl
loope
and
movsb
adc
lret
xchg
das
in
dec
and
stos
mov
loope
lods
pop
lcall
inc
add
mov
dec
js
xor
push
fidivl
lret
sub
dec
pop
mov
sarb
fnstenv
inc
shlb
rorb
imul
outsb
cmp
ficoms
sti
pop
adc
sub
mov
pop
cld
inc
xchg
and
push
in
sub
dec
adc
dec
dec
mov
xor
dec
xor
jp
mov
test
out
mull
cmc
mov
shlb
pusha
loopne
mov
cmp
lods
dec
mov
sub
jge
mov
cmp
js
hlt
cmp
insb
cmpsl
test
lahf
cwtl
imul
cmp
mov
xchg
sbbl
mov
inc
push
fistps
fsub
daa
mov
jl
adc
cmp
ds
sbb
or
jno
add
xor
xchg
cmc
popa
add
mov
xchg
rorl
stos
pusha
mov
add
adc
lcall
pop
pop
insl
sub
add
inc
cli
imul
xchg
inc
jp
into
push
aam
xchg
xchg
or
cmp
mov
gs
ljmp
inc
iret
add
push
and
mov
xor
lods
sti
cmp
es
mov
xor
fadds
sbb
sub
xor
push
imul
mov
js
jl
sub
ret
pop
hlt
or
add
daa
mov
mov
test
dec
gs
mov
scas
lahf
rorl
xchg
mov
out
std
mov
inc
imul
out
lods
sub
adc
jle
sbb
test
enter
in
pop
mov
cmp
das
test
inc
xorl
cmpsl
jno
loopne
adc
test
jae
xchg
mov
cmp
test
outsl
or
cmp
mov
jge
dec
fcompl
cmp
in
pop
inc
hlt
fcom
or
cwtl
push
movsl
xor
aaa
je
ljmp
imul
js
jle
or
inc
push
add
pop
jmp
fstps
or
popa
aad
cmpsl
jnp
mov
je
xor
pop
mov
sbb
in
fnsave
xorb
inc
inc
pop
aaa
or
lcall
in
test
imul
xchg
clc
xlat
out
inc
dec
ss
insb
adc
loop
jl
jmp
fucomip
je
inc
and
out
arpl
and
jae
aad
mov
xor
lods
ret
ds
test
pop
inc
sbb
scas
pop
push
push
mov
pop
mov
jle
loopne
xor
mov
mov
imul
push
cmp
inc
ret
stc
inc
fdiv
icebp
dec
add
cli
das
repz
adc
jg
push
outsl
sarb
inc
out
xchg
into
xchg
lahf
push
mov
push
pop
jbe
xor
pusha
mov
sbb
pop
in
jge
push
icebp
sbb
push
push
inc
jns
xchg
push
jne
lods
mov
rclb
mov
push
imul
jp
or
and
insb
ret
push
insl
adc
push
lret
stc
push
xchg
cld
and
stos
sbb
shlb
pop
pop
fs
shll
adc
ss
mov
scas
mov
jne
cmp
add
and
notb
sti
out
hlt
out
scas
ficoml
pop
stos
loope
xor
daa
pusha
aas
mov
das
fimuls
add
pop
mov
dec
cs
dec
or
lret
mov
mov
jp
rol
int
inc
mov
cs
ret
jle
mov
aaa
jae
add
scas
cmp
xchg
jns
test
cmp
rcr
push
in
test
and
mov
mov
sub
es
mov
sub
mov
lods
in
jno
cltd
gs
and
adc
mov
xchg
out
push
les
mov
outsl
ljmp
dec
ss
pushf
mov
xchg
ja
fadds
xchg
lahf
dec
lcall
sub
push
lretw
imul
mov
mov
jg
mov
mov
cltd
mov
pop
jne
daa
mov
adc
pusha
mov
add
sub
aad
xchg
xor
roll
movsb
xchg
dec
inc
data16
mov
cs
pop
dec
or
div
das
xchg
add
sti
jmp
divl
sti
mov
push
adc
jnp
pop
add
cmp
and
sub
loop
sbb
icebp
lea
push
push
popf
js
fdiv
sub
daa
stos
add
jne
gs
mov
pop
nop
fidivs
pop
es
push
push
add
or
fwait
mov
out
lock
jle
jmp
fistpl
int3
inc
mov
cli
les
push
adcl
mov
out
pop
sahf
mov
jbe
mov
loopne
jp
lods
into
pop
push
push
xor
xor
adc
ja
mov
sub
popf
imul
cmpsl
scas
and
leave
je
pop
mov
pusha
add
mov
sbb
sbb
adc
dec
inc
xchg
out
mov
stos
sarl
mov
sub
sub
sub
fdivr
xor
or
pop
dec
rorb
leave
adc
xor
pop
mov
aas
inc
test
scas
loopne
inc
std
mov
push
mov
addl
sarl
jmp
loop
int3
pop
cmp
mov
ss
lahf
cmpsl
repnz
mov
mov
out
testb
outsb
sbb
jb
cmpsb
xchg
mov
mov
cld
loopne
mov
and
push
jno
iret
aas
push
pop
mov
stos
notl
cld
lcall
arpl
push
mov
ja
fsub
cs
cwtl
out
or
ljmp
cli
xor
mov
inc
pop
cmp
movsb
aaa
sub
inc
ja
scas
and
pop
imul
roll
out
arpl
mov
pushf
or
sar
adc
sub
xor
lea
mov
nop
or
and
push
les
addr16
sub
sbb
xor
add
loopne
movsl
mov
scas
inc
leave
mov
popa
xchg
sbb
lods
lock
into
je
std
shrb
push
or
xchg
push
mov
cltd
iret
sbb
icebp
mov
stos
jns
lret
pop
add
pop
mov
outsl
int3
or
fcomps
fwait
bound
pop
jns
sub
ficoms
jp
cmp
loop
mov
push
lret
das
cmp
mov
fisubl
xchg
xor
icebp
xchg
mov
cmp
add
fsubrl
outsb
xchg
sbb
add
cmpsl
mov
ret
xchg
mov
sarl
jle
inc
pop
stos
pop
add
jp
add
in
std
in
xor
xchg
out
movsl
mov
push
and
mov
fucomi
mull
push
xor
stc
std
mov
imul
in
loop
mov
stos
insb
repnz
dec
outsl
push
and
mov
mov
aaa
jb
push
or
sub
push
or
mov
mov
out
xchg
ss
or
insl
mov
stc
adc
stos
jns
cmpsb
cwtl
push
imul
mov
mov
mov
push
mov
dec
test
fistpll
xchg
popf
and
pop
popa
or
adc
roll
call
mov
sub
sahf
mov
lret
xor
cli
mov
icebp
ds
insb
fcmovne
sete
sbb
dec
cmpsb
adc
loop
test
inc
adc
imul
xor
jb
mov
cmp
adc
icebp
cs
sbb
mov
imul
test
jne
sub
vmread
imul
mov
mov
in
add
inc
loop
push
in
sub
push
adc
mov
inc
xor
fidivrl
pop
lods
out
push
push
insl
xchg
or
clc
cmp
fwait
or
adc
mov
stc
jle
and
sub
jbe
pop
lods
fstpt
call
addr16
mov
mov
leave
test
das
add
aam
sahf
or
cmpsb
rcrb
outsl
and
out
sbb
xor
push
xchg
xchg
lods
mov
jae
mov
add
dec
testb
inc
orb
outsb
dec
fstpt
fs
dec
imul
push
push
adc
lret
popa
pop
aad
or
sbb
das
ljmp
ja
jnp
inc
orl
sub
repnz
pop
jl
mov
int3
pop
xor
sbb
fildl
sbb
push
mov
push
sub
fidivl
xor
xchg
dec
cltd
fidivs
pop
js
outsb
popf
cmp
dec
call
enter
cli
push
sub
cmp
inc
shl
cld
loope
mov
xchg
push
fdivl
jb
xchg
in
stos
mov
xchg
out
data16
pop
mov
lods
lcall
xchg
mov
xchg
cltd
fs
lock
repnz
mov
mov
xchg
inc
dec
mov
add
call
cmc
jae
fincstp
pop
sbb
push
pop
pop
xchg
adc
inc
cmpsb
lods
leave
in
cmp
jp
int
sub
arpl
inc
aad
sub
cmp
and
add
mov
mov
cmp
lcall
in
inc
fucomip
sub
jae
es
addr16
cmpsb
sub
jl
inc
pop
fldz
sub
mov
xchg
mov
sti
cmp
out
cmc
sub
push
or
fadds
faddl
seta
imulb
xchg
and
test
inc
aam
cmp
cmp
sbb
xchg
xchg
push
dec
mov
fisttps
hlt
inc
dec
lock
xor
xchg
push
add
dec
inc
inc
cld
push
push
jno
inc
jns
jle
ja
or
xchg
jae
push
mov
pusha
add
dec
cmp
loopne
mov
inc
xor
dec
repnz
popf
cld
lock
out
mov
jae
rclb
je
jno
sbb
neg
mov
out
and
ljmp
push
stos
fs
stos
and
out
push
lea
xor
dec
fs
lret
int
aaa
js
pop
into
adc
xchg
lret
stos
jmp
std
pop
adc
xchg
movsb
push
andl
or
aad
cwtl
push
xchg
movsb
pop
cmp
push
ljmp
in
idivb
fnstsw
jbe
add
test
adc
out
rcrl
and
jge
es
cs
das
and
mov
loop
lret
push
and
xchg
jecxz
jnp
adc
mov
jle
lret
or
scas
xor
ror
and
jle
test
out
sahf
mov
and
popa
or
pop
pop
inc
addr16
lock
mov
or
leave
or
pop
lret
xor
cmp
int
push
dec
mov
daa
fcoml
shll
mov
mov
nop
aaa
enter
jae
mulb
adc
jne
loope
lock
jle
pop
jecxz
sti
ret
call
repnz
popa
mov
popa
dec
pushf
cmpsb
test
inc
mov
sub
lcall
out
test
add
je
jbe
data16
movsb
lcall
jne
xor
aam
out
das
dec
out
popf
stos
pusha
xchg
in
out
jge
xchg
push
call
movsl
out
movsl
aaa
or
test
or
sahf
rorb
sbb
xchg
lock
and
cwtl
jae
dec
mov
and
xor
inc
dec
aaa
rcrl
add
dec
mov
mov
adc
mov
xchg
sbb
jg
inc
add
cmpsb
mov
mov
std
insl
inc
jnp
inc
adc
fnsave
sbb
or
ds
movsb
lods
jmp
mov
sbb
dec
adc
jp
jae
inc
fimuls
pop
pop
xchg
pop
cmp
or
mov
xor
js
or
ret
in
hlt
adc
and
fstpt
xchg
loop
adc
pusha
aam
mov
inc
xchg
mov
sbb
std
push
cmp
enter
stos
xor
mov
cli
mov
lds
adc
out
xchg
rcl
and
lods
jmp
mov
xor
loop
int3
sarb
inc
sub
roll
and
pushf
mov
test
push
push
add
adc
mov
xchg
std
mov
ds
mov
xchg
jns
icebp
adc
sbb
mov
pop
fsubl
rclb
lcall
dec
popa
imul
out
cmpsl
loop
xchg
jmp
test
inc
sub
xor
aad
xlat
aad
push
fbstp
insb
push
push
dec
dec
dec
push
push
mov
xor
pop
loopne
push
cmp
push
xchg
repz
std
sub
push
arpl
cld
in
inc
push
cwtl
mov
fs
cmp
jnp
jno
bound
jmp
mov
das
push
aaa
test
rcrb
mov
cmp
stos
sbb
lcall
adc
stos
jmp
mov
inc
push
mov
arpl
dec
test
jecxz
mov
adc
jne
xor
outsb
setno
js
js,pn
or
fs
stos
mulb
add
xor
test
sbb
movsl
mov
fsubl
add
or
mov
inc
mov
fwait
push
vpavgb
stos
push
test
push
rorl
and
mov
inc
mov
and
push
sbb
or
xchg
cld
mov
jle
sbb
xor
stc
and
sbb
pop
into
popa
jp
les
mov
arpl
lahf
sbb
sbb
pop
mov
cli
or
mov
lea
jae
lock
enter
mov
inc
jge
push
jp
jg
sbb
push
cli
icebp
xor
cld
adc
pushl
mov
cld
pop
or
ds
push
loop
and
xor
shll
ja
in
jns
cmp
repnz
xor
addl
ret
mov
pop
data16
adcl
insb
outsb
lds
ljmp
xlat
sbb
dec
and
dec
or
pushl
jge
fwait
icebp
pop
and
xorl
paddw
jl
pushf
les
inc
add
pop
cmp
out
or
aam
stos
mov
cmp
bound
add
out
dec
sub
fists
push
lcall
lahf
jmp
fadds
ret
fisubrs
mov
ror
call
add
outsb
sahf
clc
lcall
data16
jmp
neg
jmp
iret
cmp
dec
inc
iret
ret
pop
loopne
or
loopne
xchg
or
inc
into
sbb
outsl
lock
push
mov
iret
lcall
repnz
xor
subl
dec
adcl
mov
inc
ljmp
cmp
fildll
push
daa
clc
inc
cltd
outsl
cmpb
xorb
xchg
rep
xchg
or
sahf
jbe
test
ss
loopne
mov
mov
mov
lret
fbstp
inc
pop
xchg
arpl
sub
xchg
dec
out
and
sti
jnp
in
pop
pop
insl
push
pop
out
mov
mov
pop
repz
aam
popf
out
or
inc
jno
jmp
sbb
add
pop
pop
negb
enter
push
jecxz
sbb
add
xor
mov
mov
xchg
or
push
jl
adc
outsb
mov
aam
inc
mov
mov
cmp
dec
nop
pop
jns
icebp
js
call
jo
loop
cmp
lret
enter
int
jle
lret
sbb
inc
dec
cmp
sub
out
adc
lret
mov
test
mov
mov
xor
int3
jne
fnsave
outsb
sbb
fstps
mov
mov
aad
jne
ret
fidivrl
dec
fcompl
jmp
add
shrl
in
cmp
test
inc
xchg
inc
jl
cmp
dec
jl
pushf
loop
pop
out
dec
pop
jbe
mov
jmp
bound
cmc
mov
and
enter
hlt
add
cmpsb
xchg
rcll
shl
test
mov
cli
inc
scas
call
out
es
mov
lcall
ret
xchg
test
pop
negb
in
dec
pop
leave
mov
push
mov
sub
mov
iret
movsb
sub
std
leave
ss
xor
outsb
pop
inc
cli
push
xor
xor
imul
mov
cmpl
inc
fimuls
push
out
push
add
outsl
push
mov
shlb
mov
jno
lret
cmpsb
jb
pop
sbbb
add
sub
cmpsl
add
sub
ret
add
cmp
mov
xchg
cs
ret
scas
inc
or
fmull
or
add
add
cmp
mov
pop
jo
xchg
and
cmc
dec
inc
std
out
jbe
pop
mov
pop
test
pop
shll
push
xchg
fdivrl
cmp
outsl
jmp
lds
or
push
pop
dec
popf
mov
xor
aas
mov
xor
pop
je
dec
cmp
xchg
out
pushf
dec
push
xor
insb
cmc
into
cmp
push
dec
dec
repnz
mov
test
leave
ljmp
cmpb
cmc
mov
fildl
or
lret
inc
inc
xor
outsb
es
add
mov
adc
ss
pushf
xchg
int3
xor
fwait
push
cwtl
xor
orl
and
inc
daa
inc
lds
pinsrw
cmc
lods
lcall
popf
dec
fmul
jg
mov
pop
aas
cmpsb
fisttpll
xor
pop
cmp
call
mov
test
adc
int3
mov
and
xor
cli
leave
arpl
or
mov
jmp
fdivp
bound
int
add
and
push
cwtl
nop
repz
adc
mov
pop
xchg
inc
and
arpl
cmpsb
xchg
stc
mov
ret
inc
push
addr16
outsb
lret
icebp
cmp
pusha
stc
push
and
outsb
add
xor
loopne
mov
cmpsl
or
adc
mov
and
arpl
inc
push
insb
dec
in
xor
fdivs
inc
xchg
addr16
add
aad
test
xor
shll
jo
inc
popw
jecxz
lahf
movsb
ret
ljmp
push
mov
jp
rolb
imull
cmp
and
jg
cmpl
jecxz
mov
mov
adc
movsb
testl
rcrb
lds
xlat
lea
sbb
and
jbe
pop
lock
push
popa
sti
jmp
sbb
pusha
cmpsl
sarb
hlt
pop
ret
imull
or
xchg
testb
sbb
fistpll
ljmp
or
and
insb
mov
sarb
or
imul
sbb
xlat
cmc
add
cwtl
xchg
rol
push
cltd
mov
data16
divb
push
shr
inc
ret
stos
jns
mov
cwtl
and
lods
mov
sbbb
jb
cmp
xchg
add
pop
pop
pop
xor
or
xchg
xor
inc
fld
pop
jae
outsb
pop
movsb
outsl
sahf
movsb
push
mov
sar
cmpsb
cmpsl
in
mov
push
sub
and
cmp
mov
push
and
aam
pop
or
cmpsl
mov
cmpb
pop
add
lret
mov
xchg
ljmp
lds
popa
xor
test
fwait
mov
adc
fs
cmp
ret
pop
lods
fiadds
mov
add
cld
cwtl
divl
adc
frstor
or
pop
aam
repz
leave
or
mov
sbb
add
in
xchg
mov
cwtl
test
push
push
arpl
popa
add
pop
jbe
fsubl
pop
int
pop
mov
jno
xchg
cmp
inc
aam
ss
sbb
mov
xchg
mov
jmp
int
aad
in
test
bound
add
add
test
dec
mov
aaa
mov
push
jle
pop
inc
in
insl
jmp
pop
lea
mov
inc
inc
das
add
xor
lea
fwait
mov
cmp
sbb
icebp
ret
out
jl
add
imul
sub
out
mov
mov
pop
dec
push
in
in
mov
sbb
bound
xor
cmp
pop
cmp
adc
inc
and
jmp
sub
pop
lods
rorl
rcll
mov
outsl
imul
mov
aad
ljmp
fs
jge
pop
fldl
hlt
stc
cld
sbb
jne
jno
icebp
xor
push
xchg
cmp
mov
xchg
pop
mov
popa
pop
or
mov
aas
sub
addr16
mov
adc
in
insl
or
inc
ret
fcmovbe
dec
adc
shlb
cmp
adc
adc
mov
jle
aas
mov
rcrl
push
mov
and
mov
mov
and
cwtl
js
inc
xchg
stos
icebp
push
sbb
pop
mov
mov
mov
test
push
xchg
adc
push
sub
dec
sub
add
scas
mov
cmpsb
mov
mov
xlat
jbe
pop
mov
push
mov
fstpl
cmc
sti
mov
in
pop
popf
sbb
cmp
idivb
dec
jle
mov
outsb
fldl
pushf
pop
fs
ret
inc
fdivr
leave
ret
add
dec
mov
das
ret
arpl
daa
xor
js
jmp
scas
test
ds
icebp
cwtl
push
pop
mov
outsb
repnz
jl
aad
inc
aaa
adc
sbb
test
out
dec
xor
test
movsb
mov
inc
xchg
push
jbe
call
dec
int3
fwait
push
adc
pop
xchg
add
insl
in
movsb
pop
ljmp
mov
and
lods
dec
cwtl
dec
xor
sbb
mov
cmp
lahf
dec
xlat
repnz
cmpl
cmp
stc
fadds
call
dec
mov
push
daa
dec
lds
fwait
and
sbb
jb
in
clc
push
mov
add
mov
movsl
in
fwait
add
inc
mov
loope
rolb
or
dec
sbb
js
push
out
out
cmp
arpl
sub
mov
pop
xchg
ret
fs
fildll
adc
lds
std
or
fdivl
mov
or
lds
push
jg
lret
mov
outsl
aam
inc
jle
addr16
int
push
scas
add
add
xor
icebp
or
cmp
in
ret
ret
push
hlt
mov
and
jmp
out
test
lcall
stos
lret
sub
fdecstp
jbe
jl
or
and
sarl
push
cmpsl
mov
push
sub
repz
addr16
inc
push
fisttps
cmp
dec
xchg
in
enter
jge
stos
lock
add
lret
nop
jne
lods
test
shrb
adc
out
test
and
sub
jnp
sbb
cmp
mov
inc
adc
adc
addr16
je
jmp
mov
mov
aaa
in
push
adcl
pop
add
jae
mov
pop
test
inc
mov
cmp
lcall
loop
or
pop
pop
in
out
mov
lret
mov
mov
addb
aaa
xchg
movsl
sbb
pop
imulb
add
out
out
enter
aas
mov
xor
inc
movsl
cmp
cmp
js
inc
loop
mov
pop
pop
into
xor
loopne
dec
or
out
inc
cwtl
stc
sbb
movsl
push
sbb
and
pushf
pop
pop
les
xor
gs
adc
imul
jae
fidivs
mov
jnp
cwtl
jns
outsb
cmc
dec
stos
inc
lods
xchg
lods
xchg
or
push
add
pop
enter
xor
sbb
mov
cld
pop
jle
jo
testl
in
mov
repnz
icebp
jno
lock
bound
cmpb
je
jl
mov
test
cwtl
mov
mov
ja
push
mov
pop
push
mov
jns
cmpsb
pop
push
pop
stos
mov
sbb
lea
mov
inc
pop
xchg
jg
lds
mov
scas
mov
xchg
mov
lret
mov
push
addr16
or
mov
fistps
pop
push
shr
mov
lcall
push
fisttps
lea
out
cmp
mov
mov
aas
cs
test
dec
pop
sub
xchg
mov
in
fadds
lock
fcompl
scas
int3
push
cmp
lds
sub
mov
dec
mov
ljmp
and
mov
loope
lea
or
movl
push
imul
jb
pop
pop
pop
cmp
push
push
call
sub
cmp
das
lods
out
arpl
push
xchg
dec
mov
subl
icebp
mov
jns
xor
xchg
add
mov
shll
xor
fwait
aaa
cs
dec
in
sbb
push
or
mov
sub
dec
xor
sub
stos
cmpsl
push
or
jb
incl
je
push
in
push
mov
pop
les
jbe
sbb
sub
fs
xchg
pop
mov
in
adc
out
push
jmp
ret
pop
insl
push
fstpl
insb
push
aam
mov
pop
add
icebp
pop
test
jmp
inc
xchg
fstpt
cmpsb
dec
jne
cmp
pop
stos
or
cs
xor
test
daa
and
push
popa
jmp
int
ret
cmp
cmp
xor
paddw
inc
xor
jo
lods
pop
pushf
dec
mov
adc
insl
sbb
mov
lcall
jbe
ret
lock
shl
repz
sub
je
mov
jmp
lods
mov
in
les
mov
and
xor
out
mov
push
das
cs
jg
pop
rolb
add
xchg
aad
sbb
cli
ljmp
loopne
daa
fistl
and
sbb
mov
mov
cmp
insl
sbb
test
jmp
or
daa
xlat
pushf
sub
sbb
xchg
xchg
dec
lods
in
xchg
lcall
jecxz
xor
stos
jae
loopne
mov
jnp
or
test
and
xor
pop
iret
stos
jg
mov
cmp
xchg
pop
or
xchg
fildl
xchg
sti
push
pop
cmpsb
pop
idivl
sub
test
mov
add
data16
mov
bound
sbbl
add
ret
pop
mov
scas
inc
stos
dec
outsb
vmread
push
movsb
popf
scas
mov
das
lret
mov
jae
fsubrs
sub
sbb
xor
xchg
cmp
out
inc
stc
loope
bound
xchg
push
fistpll
fimuls
adc
mov
lret
mov
outsl
daa
and
adcl
sbb
testl
xor
xor
pop
cs
mulb
fnstenv
dec
mov
fidivrl
inc
repnz
mov
mov
dec
iret
out
jnp
sar
sti
adcb
ret
lret
adc
and
sbb
popa
cmc
loope
nop
adc
mov
or
cmp
cmp
stos
mov
pop
sbb
add
repz
lods
push
dec
mov
cmpsl
adc
popl
fdivl
aad
xor
mov
icebp
cwtl
add
aam
push
out
and
fisubrs
or
test
in
fists
pop
daa
orb
mov
push
inc
cmp
xchg
cmp
test
popf
dec
daa
sub
lret
cltd
int3
cmp
shrl
dec
dec
mov
push
pop
jns
out
call
repz
repnz
bound
fwait
cmpxchg
movsb
jae
cwtl
add
mov
xorl
mov
ljmp
sub
mov
jae
xchg
mov
out
das
dec
imul
test
cmp
pop
adcl
dec
xchg
gs
lret
dec
stos
lret
out
mov
pop
call
dec
dec
push
xlat
xchg
inc
sub
fisttpl
repnz
std
xor
xchg
nop
test
aam
cmp
outsl
jmp
push
fbstp
ret
cmpb
mov
fsts
loope
dec
cmp
mov
xchg
jmp
popa
lock
push
lods
and
mov
or
cmc
ret
test
pop
or
jl
rcrb
lds
add
bound
dec
sub
sub
cwtl
jl
sarl
imul
mov
fiaddl
fiadds
cmp
push
cmpsl
cld
dec
scas
divb
insb
in
into
mov
xor
ficoml
stos
repz
into
adc
notb
sbb
push
imul
inc
cmc
jg
mov
inc
rep
data16
inc
loop
jecxz
sti
sub
mov
fcmovnbe
mov
sbb
out
sbb
popf
frndint
aas
in
inc
shrb
sbb
sub
xorb
or
inc
je
pop
add
jecxz
pop
mov
cmc
sub
pop
data16
fidivrl
inc
rclb
loop
pop
cmp
inc
cmp
sbb
and
inc
mov
dec
sti
dec
scas
popf
daa
dec
icebp
push
or
push
dec
mov
or
in
xchg
cli
shlb
pop
ret
dec
mov
sti
fwait
js
mov
add
or
mov
push
xchg
pop
inc
popa
mov
push
popa
pop
jge
fbstp
mov
mov
movsl
ret
jle
int3
dec
outsl
mov
mov
and
mov
pop
mov
or
jno
push
inc
movsl
jnp
imul
dec
jbe
dec
mov
into
sbb
xchg
jmp
fmull
ret
test
adc
sahf
xchg
jg
int3
iret
mov
mov
cmp
cmp
in
imul
dec
mov
and
fistl
int
mov
shlb
mov
cmp
inc
call
fcomps
or
jno
or
mov
mov
mov
in
insl
pop
aaa
xor
push
or
xchg
xor
mov
push
inc
imul
loopne
xchg
loope
adc
rcrb
test
push
jo
lds
mov
mov
in
add
pop
and
push
shlb
in
mov
std
or
mov
dec
jnp
jb
stos
hlt
shlb
pushf
or
ret
outsb
test
dec
arpl
xchg
mov
add
jl
mov
insl
add
adc
mov
mov
out
push
adc
pop
popf
test
loope
cs
lods
mov
test
cmpsl
data16
mov
hlt
adc
sar
outsl
shll
std
into
out
fdivrp
cmc
mov
or
pusha
mov
fdivrs
clc
lods
mov
popa
pop
jge
test
pop
pop
sti
inc
mov
push
rorl
adc
adc
pop
xchg
cmp
movsb
push
push
leave
xchg
xchg
int3
sbb
sarb
sub
mov
push
fildll
cmp
xor
inc
pop
sbb
mov
push
jnp
xor
sub
adc
stc
repz
ds
dec
inc
insl
cmp
lcall
bnd
sub
jnp
adc
mov
and
add
enter
cmpb
pop
imul
xchg
xchg
lea
cltd
lock
test
mov
push
jne
int
call
repnz
push
or
add
mov
inc
fisttps
shlb
sti
mov
imul
push
jne
cwtl
fdivrl
xchg
and
test
cmp
mov
cmp
add
cmp
js
and
repnz
mov
test
mov
adc
jne
jp
add
cmp
sbb
call
push
or
mov
adc
sub
cmp
lock
stos
or
xor
or
mov
and
lods
cmp
imul
pop
xchg
mov
jno
fadd
pop
jl
sti
sub
jg
dec
pop
mov
push
not
clc
cmp
or
push
aad
dec
add
add
aam
test
add
lods
jecxz
dec
cmpsb
out
sbb
daa
push
xor
and
repnz
popa
sarl
ds
movsb
lods
pop
inc
int
lret
jmp
icebp
and
push
aad
mov
lods
sbb
loop
iret
imul
xchg
mov
inc
lahf
xor
mov
jno
cmp
scas
int
int
inc
aaa
jbe
ljmp
fsubs
pushf
add
or
adc
in
dec
in
xchg
jbe
cli
fistpll
loope
data16
jo
jge
popf
stos
test
insb
test
ds
dec
stos
xor
xchg
sbb
or
push
out
cltd
test
scas
or
insl
stos
or
sbb
or
daa
jnp
out
das
je
xor
sbb
xor
mov
insb
lock
add
adc
aas
es
in
jbe
lods
pop
sbb
pop
in
jmp
sbb
mov
xlat
fwait
lea
adc
test
xor
xor
lods
fnstsw
mov
mov
xor
imul
aas
insl
cwtl
cmp
cmp
push
push
test
mov
and
das
jbe
sub
xchg
mov
aaa
xchg
mov
addl
cmpsb
js
pop
mov
add
sbb
dec
sub
adc
push
inc
cmp
lahf
bnd
in
daa
mov
pop
push
adc
insb
cmpsb
fnstenv
movsb
jg
ficoml
mov
mov
pop
xor
push
pop
loop
jp
or
jns
loopne
lods
nop
lea
insl
push
daa
aad
lret
hlt
insl
xlat
loope
sbb
push
adc
stos
pop
int3
mov
and
mov
xchg
dec
icebp
xchg
adc
gs
clc
test
stc
pop
xchg
rcrb
fldcw
xchg
in
push
pop
ret
dec
mov
mov
add
lret
adc
push
jb
stos
insb
pop
icebp
jbe
push
xor
or
aam
and
je
cwtl
pop
int3
addr16
popf
add
ja
stos
xchg
xchg
and
rclb
repnz
push
bound
xchg
mov
int3
mov
insb
mov
push
inc
sub
sti
mov
scas
mov
sbb
fnstsw
movsl
aad
ljmp
movsb
divb
xor
ja
jmp
test
dec
sub
inc
dec
adc
and
or
ret
fistpl
lods
fs
xchg
lods
loop
out
aad
fwait
imul
dec
fidivrl
pop
xchg
aaa
mov
xor
sub
out
adc
jo
sub
in
test
movsb
cmpsb
es
add
adc
fcompl
push
jne
out
or
lahf
mov
fildl
cmp
nop
cmpsb
scas
xchg
sbb
sahf
in
or
movsb
cmp
dec
je
cld
cmp
subl
inc
push
sub
cmp
and
sbb
dec
cmp
jg
pop
mov
xchg
ss
or
mov
cmc
mov
dec
dec
xor
adc
loopne
mov
shll
js
scas
pop
or
call
sbb
and
pop
pop
rclb
mov
imul
scas
pusha
insl
jp
sbb
dec
and
fimuls
movsl
inc
jbe
jbe
std
jae
mov
lds
jo
adc
movsl
mov
inc
xchg
pop
jae
cmp
stc
lea
testb
leave
fisttpl
jns
cmp
sbb
push
adc
mov
jb
gs
in
or
mov
dec
into
xchg
mov
mov
jp
jg
test
mov
push
lea
mov
stos
push
pop
sub
sbb
repz
xchg
dec
imul
xor
out
xor
insl
sbb
lods
stos
jne
fmull
je
push
push
in
xor
adc
mov
je
xor
sahf
repnz
cmp
cmp
lahf
jge
hlt
je
dec
nop
call
in
xchg
mov
lret
push
sub
repnz
movsl
cmp
adc
inc
mov
mov
jnp
xor
lds
jnp
call
mov
hlt
inc
mov
imul
in
loop
jmp
daa
add
add
add
xchg
cmp
xor
mov
xchg
fstp
hlt
leave
fldl
fdivl
and
in
jp
pop
sub
sbb
les
repz
imul
lret
jbe
fcmove
or
ja
fildl
movsb
inc
lahf
pop
mov
push
sbb
scas
das
dec
adcb
cmpb
jbe
jo
sbb
mov
add
je
lock
sub
test
jae
and
jno
dec
add
mov
enter
jg
mov
pushf
jg
sub
int3
xor
dec
addr16
pop
rcll
in
jae
adc
int
sbb
cli
inc
cmpsl
in
cmpsl
push
xor
adc
or
mov
outsl
jg
outsb
or
enter
cmpb
dec
jmp
sahf
mov
roll
fwait
jne
insl
sub
inc
lcall
fsubrl
cmc
and
mov
push
gs
aaa
cmp
mov
xchg
repz
xchg
cmovs
aas
rolb
cmpsl
mov
jno
jg
jno
sub
mov
cmp
cmp
jg
and
xchg
sbb
das
add
mov
mov
mov
dec
mov
in
xchg
mov
push
push
inc
enter
sti
inc
mov
ss
xor
pop
dec
clc
mov
add
xchg
je
test
add
repnz
xorl
add
std
rcl
push
cmc
daa
pushf
jb
jmp
fidivrs
push
lods
inc
std
loopne
popa
cwtl
and
mov
xchg
jnp
mov
inc
addl
sub
in
mov
push
mov
cmpl
fsubrs
push
loopne
pop
int
xchg
insl
adc
pop
adc
adc
das
pop
nop
add
pop
adc
xchg
mov
loope
cmp
mov
xchg
btr
cli
pop
repnz
push
push
stos
jmp
addl
bnd
xchg
mov
lea
xchg
mov
mov
add
movsl
fsubl
cmpsl
fs
adc
sbb
lods
jne
sahf
push
sub
sarl
je
xor
stos
sbb
arpl
add
ja
testb
mov
sub
sbb
push
lea
insb
xor
ljmp
sub
push
sub
nop
scas
call
mov
loope
das
movsl
std
jmp
pushf
enter
js
je
jg
inc
sbb
je
xor
pop
lret
jb
idivl
sbb
fmulp
movsl
push
cmp
ret
sub
fildll
and
movb
out
cwtl
jb
and
add
call
adc
roll
dec
rcl
shl
xchg
mov
sub
xchg
out
lcall
stc
xor
pop
sbb
mov
loop
xchg
lods
stc
mov
xchg
jne
dec
rcrl
inc
cmp
xor
mov
push
xor
movsw
dec
mov
lcall
iret
leave
jge
outsb
clc
push
lods
and
and
adc
outsl
xor
in
sub
sbb
hlt
lods
addr16
sbb
jnp
inc
and
jae
mov
pop
mov
pop
fidivrs
leave
xchg
repnz
cld
xor
imul
cwtl
ss
or
xlat
jecxz
dec
mov
pushf
jl
push
cmpsl
mov
adc
pushf
repz
aas
ds
cmp
fwait
and
sbb
arpl
repnz
mov
mov
pop
aaa
bound
mov
fcmovbe
imul
int
int
pop
imul
add
ds
in
xor
pop
repz
gs
adc
and
andl
popf
icebp
cltd
mov
sahf
pop
or
btr
rcll
adc
mov
in
jb
xor
fildl
call
sbb
fdivr
jge
adc
leave
add
cmp
inc
add
mov
je
mul
mov
mov
jecxz
jle
movsb
sub
scas
fadd
loopne
push
jmp
xchg
pop
jp
aad
and
cwtl
fdivrl
repnz
mov
add
ljmp
faddp
push
xchg
sahf
xchg
jge
jne
pushf
push
fcomps
int
clc
out
popa
cmpsl
jb
push
out
fsubrp
imul
andl
jle
mov
lods
sub
mov
inc
cmp
xorb
idivb
ss
sub
sbb
and
out
in
jmp
fs
scas
and
fs
pop
pop
inc
insb
xor
xchg
adc
std
mov
dec
fwait
lret
mov
int3
inc
jg
add
xchg
dec
in
xchg
lea
mov
inc
imul
xchg
mov
div
cmpsl
adc
aam
addl
outsb
mov
and
in
sub
mov
aad
mov
sysret
sub
push
sbb
jge
inc
imull
mov
add
cmp
mov
shll
scas
in
mov
jmp
outsl
subl
call
in
test
pop
and
jns
xor
dec
push
push
xchg
cs
add
dec
cli
pop
in
fcmovbe
lea
push
xchg
pop
add
fimuls
sbb
push
aam
cli
inc
orb
aas
pop
outsb
or
loope
jl
mov
cmpsb
divb
or
popf
pop
sbb
mov
fiadds
adcb
mov
mov
pop
rcll
pop
arpl
into
xor
sub
fdivl
ljmp
xchg
je
mov
pop
adc
mov
jo
push
pop
in
iret
sbb
or
das
sbb
push
mov
das
pop
or
mov
xchg
data16
push
or
push
or
cli
jnp
fstpl
cmp
cs
and
pop
repnz
ds
stos
and
adc
aam
ret
shl
xchg
mov
mov
lret
cmp
xor
inc
cmp
xor
pop
jno
shl
ret
jae
xor
inc
bound
test
push
adc
cmpsl
mov
cmp
and
pop
push
add
pop
fnstcw
mov
ljmp
test
in
mov
push
mov
inc
testb
dec
ret
das
les
lock
int3
sbb
cmp
outsb
and
fnstcw
fldenv
shlb
repnz
adc
lret
xor
inc
lods
pop
stos
arpl
je
out
push
dec
in
cmp
notl
sub
xor
push
mov
lcall
add
test
gs
out
add
fistps
mov
insl
cli
fwait
ret
fnsave
fdiv
cmpsb
fisubs
dec
jae
inc
rorl
cmp
test
mov
jb
mov
inc
inc
js
ficomps
xor
cmc
mov
jmp
scas
leave
cmp
xor
inc
repz
cmp
or
cmp
fxch
iret
ds
inc
dec
sbb
cld
test
cmc
insl
pop
mov
mulb
push
ret
and
mov
sbb
push
bound
xor
sbb
out
sbb
fwait
push
adcl
xchg
cwtl
mov
mov
pop
fistl
js
mov
or
or
add
aaa
xchg
sbb
hlt
pushf
sti
jne
jae
dec
stos
jbe
inc
lahf
push
xchg
mov
int
xor
pop
test
out
lcall
sbb
sub
stos
jmp
cli
push
xchg
out
mov
jno
mov
pop
mov
mov
mov
mov
ficomps
mov
shlb
add
add
and
jmp
or
ljmp
add
test
lods
insl
mov
add
push
sbb
push
sub
stos
stos
fiaddl
gs
fcomps
xchg
pop
outsb
push
and
dec
data16
adc
fnsave
cltd
imul
pop
out
mov
sub
cmp
mov
stc
adc
sbb
add
sbb
and
lock
nop
add
xchg
in
mov
sbb
test
addb
mov
lock
cmp
xor
popa
loopne
adc
push
addr16
or
out
mov
in
push
or
call
pop
ss
pop
inc
mov
sbb
jo
in
xorb
aas
xor
jne
rcll
pop
into
aam
outsl
test
jl
shrb
fwait
dec
subl
sbbb
fwait
in
test
dec
imul
mov
cld
xchg
cmp
jns
mov
mov
rolb
pop
sbb
aad
cmp
mov
rol
xchg
sbb
ja
ret
gs
mov
or
sub
jae
imul
inc
mov
jl
cwtl
fldcw
rcr
sbbb
decb
punpckldq
out
jns
ds
jp
in
inc
or
dec
push
mov
das
es
xchg
mov
pop
addr16
pop
and
add
push
aas
test
adc
cmp
not
xchg
cmpsb
and
and
outsl
scas
scas
loopne
xchg
lods
push
lods
inc
jb
shlb
dec
jl
gs
sbb
fisttpl
rcl
js
aaa
ja
dec
dec
or
xor
in
pop
into
inc
or
ss
pop
imul
dec
loope
frstor
sub
sub
repz
inc
mov
xor
stos
cmpsb
inc
mov
push
ficoms
jecxz
mov
outsl
arpl
lds
loope
out
imul
cmp
icebp
insl
xchg
test
add
pop
imul
or
mov
mov
fstl
push
cld
test
cmp
nop
jno
inc
add
cmpsb
or
sub
or
sub
adc
dec
mov
ret
lock
inc
mov
mov
sti
xor
mov
xor
dec
xor
rclb
std
xor
mov
into
in
test
cld
data16
sub
sub
or
mov
inc
dec
movsl
add
mov
jl
pop
icebp
jge
add
dec
arpl
movsb
or
jo
and
or
jae
cmp
enter
paddsw
adc
lods
push
lods
adc
test
pushf
fimuls
mov
push
cmpsl
mov
and
sahf
in
cmpsl
push
sub
cmp
es
sub
and
inc
lods
sub
push
sbb
movb
sbb
add
and
aaa
movsl
or
test
jae
push
cld
ret
cmp
clc
cmc
dec
push
ljmp
test
push
cwtl
inc
mov
bound
daa
push
outsl
js
inc
sbb
shrd
mov
ljmp
outsl
mov
rcll
movsl
mov
push
in
jecxz
popa
cmp
jb
add
jb
xor
aas
stc
mov
pop
xchg
sbb
int3
push
push
test
jo
push
inc
out
pop
movsb
sbb
cmpsl
cmpsl
mov
jbe
xchg
sub
xlat
rcr
sub
div
mov
jp
xchg
or
jno
push
aas
std
cmp
jmp
push
mov
mov
push
or
cmpsb
fstl
pop
sbb
jo
test
push
loopne
xchg
fldenv
jnp
inc
push
and
jg
dec
sub
push
push
xchg
and
fdivs
jp
fs
imul
sbb
dec
in
cs
or
cwtl
dec
incb
and
fldenv
loop
xchg
gs
sub
cmp
fists
ret
cmp
xor
inc
data16
add
daa
jmp
xchg
loopne
xor
arpl
jg
lods
lock
out
adc
gs
push
add
imul
mov
mov
xor
pop
lods
xchg
jg
lcall
andl
ds
adc
gs
mov
mov
adc
jge
aaa
xchg
dec
stc
dec
out
adc
data16
out
pop
sub
xor
cli
mov
xchg
ret
arpl
inc
mov
push
stos
cmpb
fs
int3
imul
ret
cmpsb
decl
xchg
mov
or
nop
loope
jecxz
std
push
mov
je
orl
jp
sub
jp
mov
mov
xlat
cmp
out
aas
lret
pushf
jle
jno
inc
shrb
sbb
lea
rorl
jecxz
cmp
gs
nop
xchg
xchg
inc
inc
xchg
fwait
arpl
cltd
push
or
dec
mov
jge
pop
jno
push
sahf
pusha
sbb
jnp
dec
lcall
sarb
arpl
gs
jmp
in
push
es
leave
xchg
das
dec
jbe
mov
mov
xchg
push
sti
mov
insb
jno
xlat
xor
cmpsl
cmpb
adc
inc
and
mov
fsubp
fistps
pop
hlt
cwtl
pop
test
xor
repz
fildl
or
rcrb
push
mov
lret
subb
mov
imul
dec
push
xchg
enter
jb
pop
jnp
jbe
sub
iret
jae
push
mov
adc
aam
mov
mov
ds
int
movsl
mov
loopne
loope
xchg
je
mov
jb
pop
test
mov
xchg
das
xchg
lea
test
daa
xchg
test
out
fdivrs
out
popa
hlt
mov
xor
call
cli
test
ljmp
out
dec
aad
mov
mov
push
mov
nop
jnp
fs
enter
inc
dec
xchg
orb
dec
jle
sbb
cmc
andb
fmul
xchg
rolb
mov
and
ljmp
adcl
daa
pop
inc
test
mov
cltd
test
scas
lods
mov
mov
js
ds
ss
jno
sahf
enter
and
jp
cmc
pop
sbb
inc
cmc
dec
je
sub
leave
arpl
lcall
rcrb
dec
das
push
jle
and
or
adc
xchg
inc
add
xor
cmpsb
and
std
test
adc
and
sbb
and
push
inc
cmp
lcall
sbb
push
mov
xchg
lret
into
inc
and
cmp
mov
jp
push
aad
pop
push
imul
scas
arpl
mov
fs
xor
xchg
js
fnstcw
fdivl
cld
fdivs
mov
insl
push
sbb
jno
outsl
xor
mov
xchg
jg
fsubl
add
imul
or
enter
inc
in
shlb
pusha
jns
mov
inc
push
pop
inc
gs
push
push
mov
adc
clc
pop
loope
jge
popa
cmp
lcall
or
pop
iret
in
and
stc
out
dec
mov
mov
in
iret
add
cmp
push
or
popa
arpl
cmp
or
xchg
arpl
xorl
mov
pop
fiaddl
lock
lock
add
sbb
mov
sbb
fmuls
pop
aas
inc
ja
scas
add
subb
inc
inc
out
movsb
in
and
sub
xchg
dec
cmp
xor
xchg
mov
fcoml
arpl
fstps
enter
iret
popa
xor
faddp
inc
add
mov
cld
jns
imul
jbe
lahf
mov
pop
xchg
movsl
or
jp
aaa
arpl
jbe
fnstcw
pop
mov
pop
jae
rclb
dec
rclb
scas
xchg
lcall
cmp
fildll
jno
and
push
xor
adc
shrb
pop
out
adc
lods
test
pop
das
mov
xlat
gs
mov
loop
pusha
lock
xor
inc
ljmp
pop
pop
fldcw
rcll
mov
xor
outsb
mov
cmp
jle
aaa
les
repnz
xchg
bound
jo
add
jg
or
inc
rcr
popa
push
lea
push
aam
pushf
fmul
and
mov
lret
jmp
xchg
adc
push
dec
push
movsb
popa
pop
mov
xor
push
or
outsb
jecxz
and
sbbb
inc
das
xor
push
inc
aad
scas
jno
movsb
push
shl
mov
ss
cli
mov
pop
aad
mov
pop
xchg
mov
xor
or
rcll
sbb
add
push
push
add
int
inc
pusha
clc
xchg
out
mov
popf
push
mov
push
shll
adc
test
pop
sbb
cli
pop
jmp
lds
cli
adc
rcl
into
adc
in
shll
inc
push
mov
xchg
pop
lret
das
roll
jae
sub
repz
repnz
and
jns
jle
sbb
repnz
iret
adc
add
and
add
rcll
xchg
push
push
or
daa
lcall
mov
jge
std
hlt
or
pop
inc
inc
repz
add
xacquire
pop
mov
dec
fisubs
lods
rcrl
and
mov
pop
push
jle
int3
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
