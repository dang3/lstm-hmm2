fbstp
add
inc
outsl
outsl
insb
gs
outsb
add
add
add
jmp
jae
add
jb
lea
sub
add
push
push
jnp
in
nop
dec
inc
add
push
insl
insb
imul
add
jbe
jle
add
dec
and
add
xor
pop
stc
jo
add
jns
test
push
outsl
jb
add
cmp
aad
lods
mov
out
mov
das
add
mov
push
inc
outsl
jne
insb
xor
mov
jne
jb
outsb
arpl
rorb
push
push
je
insl
js
divb
or
fs
in
or
push
cmpsl
imul
je
cld
or
dec
xchg
and
out
push
add
aas
add
sub
lcall
xor
jl
mov
pop
push
dec
bound
arpl
shufps
jns
add
xorl
jb
popa
arpl
mov
or
outsb
or
add
imul
popa
je
push
add
outsl
sbb
int3
addl
jmp
adc
int3
int3
sbb
out
lock
fldt
cs
or
sub
or
or
ficompl
outsb
push
or
insb
push
js
popa
or
repnz
mov
push
in
fs
pushl
adc
push
sbb
fs
xor
lock
jb
clc
std
xchg
add
popa
pop
push
imul
inc
push
cltd
fldl
hlt
jg
lock
sbb
insl
nop
call
loopne
nop
inc
push
add
orl
int3
orl
enter
sbb
mov
mov
push
lods
add
test
orl
mov
insb
nop
adc
aas
pushf
sets
mov
xchg
aas
push
sbb
seto
push
add
mov
add
ss
idiv
sub
je
movzwl
mov
aaa
inc
pop
ret
push
test
mov
push
sbb
or
enter
push
push
mov
cmpl
jne
push
add
mov
test
jne
xor
pop
leave
mov
mov
ret
clc
push
rorb
sbb
fs
push
mov
mov
div
mov
push
nop
mov
mov
ret
scas
mov
mov
xchg
dec
test
xchg
fidivs
mov
mov
push
add
mov
mov
inc
add
push
mov
push
or
sbb
cmp
push
push
push
mov
mov
scas
fisttpll
add
rcrb
mov
out
push
or
push
or
ret
ret
fimull
inc
lea
or
inc
add
adc
or
dec
sub
fistpll
jmp
loope
mov
cmp
test
add
mov
addr16
pop
pop
push
fidivrs
std
loopne
clc
jne
sti
mov
xchg
cmp
jb
into
add
lock
std
imul
imul
ja
and
mov
aaa
sbb
sub
dec
ret
jmp
decb
ret
mov
add
pop
repz
cmc
aaa
cmp
orb
sub
mov
push
jle
sub
mov
aam
or
or
mov
scas
sbb
sti
jne
sbb
nop
mov
mov
mov
cmp
pop
mov
lock
mov
out
xchg
add
jg
jnp
add
pop
push
jg
mov
mov
test
je
mov
mov
mov
adc
mov
mov
negl
push
mov
mulb
dec
sub
sub
push
lahf
push
fldt
jne
icebp
push
push
dec
push
nop
cmp
cmpl
in
mov
adc
mov
mov
add
push
and
call
faddl
lds
jmp
outsl
ud0
ja
mov
add
cmp
ja
cmp
mov
imul
sbb
or
push
or
movl
filds
mov
mov
int
adc
sbb
pop
fcomp
mov
adc
or
jo
mov
dec
hlt
ja
pop
inc
outsl
mov
ljmp
sbb
mov
lock
sbb
xchg
ret
mov
sub
mov
pop
cmp
mov
add
and
mov
cmp
or
or
jbe
scas
adc
sti
push
push
cmpb
adc
sbb
jmp
and
push
and
mov
out
sub
pop
cmp
add
inc
out
sub
or
adc
cld
jle
and
add
sbb
add
inc
push
addl
rorb
mov
fbstp
clc
mov
aas
inc
pop
flds
bnd
xor
idivl
insl
cmpsb
cmpsb
sub
xlat
mov
pop
test
je
mov
cltd
cmpsb
inc
cltd
inc
ds
adc
jne
push
pop
add
mov
in
cmpl
movsl
and
push
insb
fdivs
insl
pop
inc
jo
jp
out
cli
jge
xor
aaa
add
je
cmp
inc
jne
xor
jle
sub
loopne
push
stos
mov
add
mov
xor
lea
sti
fs
sub
mov
fcoms
or
pop
and
sbb
lea
test
jne
inc
cld
xchg
jmp
imul
cld
aaa
cmc
jne
nop
cmp
fisttpl
inc
cmpl
sub
inc
xchg
popf
adc
inc
popa
xchg
incb
mov
mov
mov
sti
cli
imul
out
cmp
jae
mov
out
rcrl
or
xchg
lods
cld
or
pop
test
je
imul
inc
shrl
push
adc
jmp
jl
jo
loop
add
add
addb
sbb
in
aaa
jle
jg
push
loop
xchg
pushl
mov
push
cmp
adc
and
pushf
popf
adc
sub
pxor
in
mov
or
sarl
xor
jg
hlt
inc
cmp
jne
js
jnp
add
mov
pop
aam
add
pop
pop
pop
pop
adc
mov
cltd
or
xor
in
pop
in
pop
xchg
pop
xchg
test
shlb
add
mov
pop
orb
addb
adc
arpl
adc
test
gs
mov
test
sub
imul
adc
jmp
push
or
movl
mov
jne
loopne
mov
jb
or
push
pop
jg
adc
test
jns
add
sar
pusha
in
adc
hlt
jmp
sub
mov
sub
add
hlt
mov
mov
sub
imul
shll
dec
or
push
mov
cmp
adc
or
jmp
add
sbb
cmp
jl
movl
jb
out
in
idivl
jl
inc
or
mov
and
jg
mov
rolb
cld
fsts
std
out
push
inc
mov
insl
or
push
or
xchg
int3
pop
xor
inc
xchg
or
cmpsl
test
decb
xor
lcall
push
add
cmpsb
cli
out
popf
cmpsl
sub
ret
aas
pmaxsw
xor
testb
je
mov
or
cmp
cmp
push
adc
fisubrs
mov
add
or
fsubs
test
jne
mov
ljmp
repz
bound
and
mov
mov
push
lods
pop
adc
test
dec
loopne
out
jne
jno
xorb
into
jge
jge
jnp
cld
jg
clc
sub
sub
cmp
adc
mov
mov
cmp
jmp
daa
xlat
cld
lea
and
mov
loopne
in
mov
aad
lds
xchg
mov
or
push
in
scas
adc
or
sub
loope
xchg
iret
stos
ja
mov
mov
add
sub
jo
dec
movl
cli
addr16
mov
cmpsb
adc
mov
mov
sbb
cmp
inc
adc
lock
mulb
pop
add
sub
add
cmp
cmp
pop
cmp
add
pop
sbb
jle
cmp
insb
adc
or
movb
dec
jo
mov
enter
mov
and
in
stos
jno
lea
or
icebp
add
lock
mov
add
test
sub
cwtl
or
push
push
mov
cmp
in
mov
ja
xchg
mov
pop
add
adc
loope
add
sub
pop
loop
sub
xorl
rorl
out
subl
add
ret
cmp
leave
ret
jl
loopne
loope
or
fwait
mov
sbb
mov
or
or
inc
stos
pop
int3
lea
ret
pusha
or
mov
xor
jae
adc
push
dec
push
push
adc
lahf
push
fldl
div
ret
mov
adc
xor
mov
jl
mov
adc
jg,pn
pop
mov
pop
je
xor
pop
pop
pop
jmp
sub
sub
inc
xor
or
jge
jle
mov
sub
cmpl
clc
sbbl
add
xor
dec
loope
sub
or
jmp
call
xor
sbb
add
xchg
leave
jmp
repnz
jne
xor
pop
pop
xor
fwait
pop
xlat
test
mov
jne
pusha
or
push
push
cmp
clc
stos
jle
inc
cld
repnz
rorb
adc
leave
mov
inc
pushl
mov
jp
jmp
add
or
sti
mov
mov
cmpsb
test
jg
lds
pop
or
adc
loope
movb
pop
inc
scas
shlb
push
or
js
mov
jmp
mov
jge
loop
iret
cmp
mov
add
lcall
pop
xchg
jbe
jmp
mov
sub
lahf
cmp
sbb
dec
sub
mov
add
adc
sbb
dec
jno
xor
sarb
arpl
dec
mov
push
mov
pop
push
push
sbb
ljmp
jne
sub
sbb
or
adc
pop
movsl
nop
daa
adc
pop
js
in
scas
lock
test
jne
test
ja
decl
push
ret
xchg
cmp
or
loopne
sahf
push
add
loopne
push
or
or
or
test
rclb
das
add
pop
pushf
sbb
in
ret
cmp
sbb
jns
stos
in
andl
add
fisttps
fwait
lock
mov
adc
ret
sbb
cli
add
lcall
orl
jmp
mov
cmpl
xor
adc
imul
shll
xchg
mov
cmp
icebp
hlt
outsb
sbb
pop
jle
add
aas
int
mov
xbegin
scas
push
jecxz
or
pop
mov
sbb
icebp
repz
xchg
adc
iret
mov
adc
adc
jnp
subl
dec
inc
sub
push
mov
and
negl
jmp
mov
loope
inc
sbb
sbb
cmp
cmp
fldt
data16
sub
testb
and
mov
cmpsb
fmul
adc
xor
xor
xor
shl
sub
fwait
add
and
push
mov
test
sub
pusha
dec
add
push
dec
scas
icebp
or
add
mov
rcrb
mov
sbb
mov
push
xchg
xchg
pop
mov
xchg
or
or
add
ret
or
xchg
in
or
ds
sbb
cmpsb
pop
xor
lret
cmc
cmp
or
adc
pop
mov
pop
mov
jle
pusha
mov
adc
add
ss
cmpsb
orl
call
jne
adc
add
inc
adc
lret
xchg
dec
sbb
cpuid
jge
pop
nop
ret
adc
inc
mov
cmp
or
add
mov
je
je
mov
loopne
mov
test
je
das
sbb
enter
jo
fistps
sbb
pop
xor
mov
jmp
add
rcr
add
insl
repz
out
mov
out
mov
push
dec
sbb
lock
ret
rol
add
daa
adc
inc
sbb
sbb
inc
or
push
or
xor
popf
jecxz
dec
or
dec
sbb
scas
clc
scas
add
jo
mov
mov
out
mov
and
adc
inc
lock
fsubrl
xor
cmp
icebp
loopne
pop
jne
xor
pop
xor
mov
daa
lea
lods
mov
je
decl
decl
pop
jle
cmp
jg
sub
inc
fnstsw
sarl
mov
incl
decl
inc
rep
jmp
mov
leave
jmp
mov
jmp
mov
cmp
xchg
faddl
ds
mov
fistps
divl
je
dec
js
rep
xchg
mov
je
cld
lea
xor
std
xor
aaa
inc
lea
faddl
or
das
adc
mov
add
and
cmpb
xchg
cmpb
imul
ret
add
out
in
mov
jmp
cmp
xor
push
jo
in
pop
shrb
roll
ljmp
sub
in
sbb
ja
imul
cmp
mov
xor
jmp
outsb
cmp
sti
jmp
ret
jbe
mov
mov
inc
inc
adc
movsl
fidivl
loope
pop
into
test
push
xlat
push
lds
mov
scas
xchg
sbb
push
mov
enter
cld
repnz
adc
inc
cmc
mov
andl
add
jmp
mov
sbb
pop
xor
lock
mov
pop
cmpsb
add
sbb
push
inc
test
jne
push
add
std
fdivrs
mov
pop
fldcw
pushl
push
roll
clc
ficompl
ss
in
mov
jmp
cmp
jb
cmp
ja
ja
inc
fildll
xlat
mov
fldcw
call
and
jae
fwait
pop
pop
jbe
or
push
sti
mov
orw
insb
fisttps
dec
fstpt
pop
fldcw
pop
inc
inc
sub
sub
mov
xor
clc
stos
fisttps
add
jmp
sub
jge
clc
add
call
cmp
icebp
jmp
lock
mov
jb
sbb
pop
or
call
call
rolb
and
xorl
sbb
lock
aad
mov
cmp
mov
ja
retw
loope
out
and
jne
call
jnp
popf
sbb
je
ret
lahf
jmp
mov
loopne
mov
aas
xor
iret
mov
mov
xor
mov
inc
add
iret
hlt
sar
jb
cmp
ja
mov
mov
fwait
inc
add
sbb
jne
pcmpeqd
mov
ret
int
mov
inc
xchg
incl
clc
sar
pop
mov
cmp
adc
mov
inc
inc
orl
jge
dec
shlb
jge
mov
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
sbb
decb
or
loop
push
adc
incl
and
je
mov
cmp
jne
push
adc
add
adc
sub
add
add
fstpl
ja
cmp
mov
sti
cli
jne
shr
add
xor
fisttps
push
mov
shr
or
xor
repnz
cmp
shrb
scas
jno
and
mov
cmp
jne
dec
dec
mov
int
dec
and
test
mov
jecxz
jne
das
jg
mov
shl
or
jbe
rep
adc
pushl
pop
test
int3
add
push
inc
cmp
je
xchg
fucomip
clc
mov
or
sub
js
pop
ds
pop
pop
pop
je
xor
dec
and
test
mov
add
sub
or
cmp
ja
add
lock
fcoms
out
int
or
call
sarl
jmp
or
neg
jle
js
pop
sub
jmp
inc
inc
jmp
pushf
mov
filds
aas
add
adc
ja
add
scas
leave
popf
add
aad
dec
incl
xlat
cltd
pop
xor
mov
das
mov
jbe
sbb
sbb
add
sub
inc
mov
dec
jne
pop
decl
add
pop
repz
mov
mov
inc
or
inc
dec
jne
xchg
xor
testb
inc
jge
dec
je
jmp
repnz
aaa
lea
lea
fldt
sbb
jmp
cmp
sub
je
das
xor
lock
add
popa
and
mov
mov
jge
mov
inc
sahf
sub
stc
sbb
pop
mov
stc
jmp
fstp
fldt
fldz
pop
xchg
jo
mov
enter
aas
mov
jns
pop
jns
or
or
ret
movd
xchg
pop
and
adc
mov
leave
dec
sub
sbb
xchg
and
jg
push
stc
inc
mov
mov
or
daa
sub
test
sub
sub
pop
jecxz
add
leave
sbb
xor
cs
jbe
imul
cmp
mov
das
jg
and
mov
bound
cmpb
xlat
fadds
lret
jg
lods
outsb
xor
xchg
push
or
push
push
int3
into
stos
lcall
ret
inc
mov
push
pop
test
enter
mov
inc
imul
jmp
hlt
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
dec
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
mov
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
push
mov
inc
imul
divl
jl
xor
cmp
call
mov
lcall
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
jmp
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
call
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
pop
mov
repz
mov
subb
and
in
clc
jmp
outsb
bound
xor
cmpsb
cld
das
sti
aas
ret
shlb
cmp
jne
push
pop
cmp
mov
or
cmp
mov
xchg
hlt
paddusw
cs
test
imul
leave
and
push
lcall
les
movl
addr16
or
push
pop
add
or
test
pop
and
sub
or
jg
and
mov
pop
aas
or
pushl
mov
adc
inc
push
push
inc
push
inc
pop
inc
outsl
jb
ret
jmp
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
lods
ret
fninit
fwait
add
dec
xor
mov
inc
xlat
mov
xor
mov
inc
incb
jg
jbe
or
pop
mov
or
dec
cld
jne
dec
mov
xor
jg
add
fbstp
ret
repnz
mov
ss
vmread
roll
xchg
mov
cwtl
mov
sbb
pop
mov
flds
pop
mov
outsl
test
jp
or
sub
add
movups
add
xor
or
push
outsl
loopne
mov
pusha
daa
jle
or
push
cld
cs
jge
mov
xor
jecxz
add
push
shr
dec
rep
pop
add
mov
add
pop
add
sbb
in
cmp
je
pop
mov
mov
ret
sbb
addr16
mov
mov
pop
sbb
adc
cmpsl
cmp
xchg
lods
mov
ret
sti
mov
mov
sub
cmp
pop
js
jecxz
inc
xchg
cmp
add
pop
jge
jb
add
sbbl
flds
add
add
les
ds
dec
lods
test
testl
clc
pop
and
call
and
inc
adc
lcall
clc
mov
mov
push
add
pop
lea
icebp
push
mov
sbb
and
cmp
jno
pop
hlt
xlat
dec
setne
scas
xchg
test
and
call
push
lods
mov
sub
notl
cltd
and
jne
jb
cmp
pop
xchg
xchg
mov
invd
or
or
jo
or
fcoml
lods
cmp
shrb
lahf
es
pushl
rcll
rclb
rorl
mov
mov
repz
add
add
jle
clc
jmp
sqrtps
scas
je
pop
sub
scas
js
negb
pop
add
sub
mov
pop
cs
in
pop
sub
pop
pop
jmp
out
mov
fimull
fisttpl
xor
das
mov
add
sarb
repnz
out
les
dec
movl
xor
sub
pop
imul
push
stos
jbe
jl
pop
pop
icebp
pop
mov
dec
mull
decl
fistpll
sbb
movb
dec
push
cmp
sbb
add
jg
test
jne
icebp
fucomi
sbb
add
sbb
imul
dec
cmp
fistps
push
pushf
enter
in
jle
push
inc
pop
repnz
sbb
jmp
sti
xor
pop
add
mov
dec
sar
jl
call
xor
xchg
inc
sbb
decb
movl
or
or
mov
sub
subb
pop
push
inc
or
flds
insb
or
xchg
ss
push
clc
popl
in
jbe
add
fbld
pop
scas
adc
sub
jbe
sbb
rolb
cli
in
push
in
imull
fs
mov
push
popa
push
push
cmp
out
cmpsl
and
or
das
add
push
sbb
divb
jl
mov
and
xchg
leave
cmp
cmpb
je
stos
or
decl
jmp
or
mov
xor
add
addr16
adc
adc
adc
loop
fdivrl
mov
pop
sbb
jecxz
pop
rol
rcrb
jne
jle
cmpl
mov
adc
outsb
loopne
xlat
mov
pop
adc
adc
jp
sbb
cld
aas
movsl
mov
cmpl
je
dec
cwtl
inc
cmp
fildll
jbe
test
js
mov
fadds
stos
pop
xchg
pop
hlt
leave
or
xor
pop
push
push
jne
push
lds
shrb
cmp
push
jns
je
orl
sbb
mov
lret
push
sbb
add
sbb
push
subb
push
mov
jnp
and
outsb
jg
mov
movl
pop
lret
inc
call
shr
in
cmovno
xor
loopne
cmp
shl
xchg
push
outsl
je
out
leave
addr16
dec
or
add
mov
jp
mov
push
or
shr
call
std
pop
add
lds
mov
push
push
jne
mov
sub
repnz
orl
pop
xchg
mov
outsb
fucomip
outsl
fisttps
inc
inc
mov
jg
pushw
mov
hlt
sbbl
jne
add
ss
inc
jno
adc
inc
or
out
xor
mov
sub
daa
adc
insl
or
cs
cvtpi2ps
pop
adc
mov
or
and
inc
icebp
orl
aam
arpl
ss
jno
pop
jmp
into
lock
push
test
sbb
rcl
mov
and
xor
sbb
push
push
push
push
mov
add
js
and
andb
movl
loop
icebp
or
pusha
add
testl
jl
rcrb
inc
std
and
pop
mov
mov
cmc
subb
xchg
jae
mov
adc
jae
lods
pop
insb
rcll
inc
jmp
ret
xor
mov
xchg
popf
push
pop
cmp
add
mov
call
xchg
push
jg
je
cmp
push
sub
add
cmp
pusha
add
sub
idivl
je
jmp
cmp
sub
adc
push
incb
std
sbb
dec
cmp
mov
jmp
mov
jmp
mov
jmp
ljmp
push
push
sbb
into
jmp
mov
mov
jmp
lock
decb
mov
jmp
mov
inc
popa
call
pop
xlat
jp
push
or
pop
mov
adc
jmp
je
push
outsl
mov
or
push
cmpb
sbb
cli
mov
lock
sbb
inc
pop
sub
mov
loopne
cmpsl
lock
or
sub
pushf
lock
dec
clc
xor
cs
cmp
sub
cmpsl
cmp
leave
sub
mov
add
push
jne
cmp
mov
cmp
incl
sti
cmpsl
add
or
cmp
jne
test
push
cmp
mov
mov
pop
dec
mov
mov
insb
jg
inc
test
jle
dec
mov
inc
fisubs
xlat
sbb
rcl
jg
jecxz
xor
jmp
mov
subl
call
sbbb
js
bound
repz
add
inc
loopne
cmpb
mov
push
inc
xchg
cmp
lea
mov
int
aaa
xchg
pop
or
dec
scas
push
fdivr
adc
xor
cmp
lea
mov
add
cmpl
mov
pop
inc
iret
cmp
add
adc
sbb
imul
inc
or
mov
adc
pop
je
cmp
jge
jmp
ret
mov
imul
jl
js
cmp
jge
mov
mov
ds
stos
lods
add
sbb
mov
in
pop
mov
clc
mov
add
add
enter
cmpl
pop
inc
imul
pushf
jmp
dec
add
fstl
xchg
or
aas
int
jo
mov
rclb
clc
popa
and
cmpsb
mov
pavgb
mov
test
add
or
mov
daa
mov
sti
mov
dec
scas
mov
mov
push
mov
cmp
add
rolb
xchg
cmpsl
pop
dec
outsl
adc
ja
add
loopne
pop
pop
leave
dec
push
into
outsl
jne
cmpsl
dec
rcll
subl
adc
jbe
mov
add
loop
push
push
push
arpl
inc
rorb
add
xor
push
popf
nop
in
ret
scas
inc
adc
insb
out
dec
jb
jge
or
mov
mov
lock
cmp
adc
jle
js
dec
cmpb
push
cmpl
adc
decb
mov
mov
call
and
daa
shr
xor
xor
addr16
xor
daa
push
jne
sub
push
sub
sbb
jbe
jecxz
adc
sbb
lds
inc
adc
inc
add
or
push
add
jns
pop
and
jne
paddb
fiadds
sub
jae
outsb
sub
mov
pop
shlb
push
cmc
sti
ret
adcl
xor
es
pop
sbb
outsb
and
enter
xchg
pop
testl
sub
adcb
stos
and
cld
jp
dec
icebp
push
lea
rcll
push
add
call
add
push
push
call
imul
or
mov
daa
dec
and
call
push
inc
cwtl
push
je
cmp
push
mov
add
push
pop
or
push
adc
sbb
push
push
pushf
lock
mov
jo
adc
jo
dec
cmp
dec
clc
dec
jl
lock
mov
std
scas
scas
sbb
adc
movl
rolb
dec
jne
or
dec
and
inc
jg
leave
inc
mov
xor
ret
dec
push
xchg
mov
mov
notb
xchg
xor
iret
or
push
jle
jecxz
clc
jecxz
add
loopne
push
adc
add
popa
je
mov
add
clc
addl
cwtl
loopne
pop
lock
mov
das
stc
mov
jno
cld
add
aas
mov
cmp
vorpd
scas
add
outsb
push
push
adc
jns
mov
sbb
shll
cmp
cld
xchg
push
add
loopne
jg
add
outsl
std
mov
outsb
add
sub
mov
ret
into
jg
mov
inc
jl
pushf
mov
pop
or
add
inc
dec
mov
pop
sbb
in
pop
pop
jge
xor
hlt
popa
inc
push
mov
mov
js
das
nop
in
and
or
stc
popf
inc
add
add
filds
bswap
jmp
inc
add
jmp
or
pop
sub
and
pop
pop
jnp
mulb
push
or
data16
in
add
jae
jbe
mov
inc
xchg
shrb
lock
push
push
loop
scas
lds
dec
rcrl
rcrl
mov
sbb
cld
outsl
push
insb
mov
loopne,pn
push
push
adc
fnstcw
mov
inc
jnp
push
sbb
xchg
cmpsb
add
jo
rclb
je
cld
xchg
mov
push
cld
add
cmp
pop
negl
and
mov
adc
mov
sub
clc
int
xchg
cmp
adc
or
ss
sub
into
ja
shrl
loope
cld
add
je
mov
in
in
inc
mov
cli
lds
push
sbb
pop
das
inc
dec
clc
mov
mov
jmp
adc
mov
inc
jge
mov
xchg
adc
or
jge
jbe
inc
cmp
add
or
loop
out
lock
cmp
gs
dec
jne
mov
shrl
cld
jge
and
aaa
add
dec
jmp
push
dec
dec
and
inc
pushf
sbb
rcll
out
into
pop
dec
jne
mov
and
call
add
pop
lea
jmp
xchg
dec
mov
add
push
add
insb
imul
dec
and
jb
dec
and
xchg
in
cmp
pop
cmp
adc
or
sbb
and
sbb
or
or
xchg
pop
cmpsl
push
clc
inc
add
lods
aad
lods
scas
add
add
pop
cld
jl
aaa
inc
cmp
cmp
adc
pop
adc
xchg
out
loope
inc
daa
pop
sub
out
aaa
inc
mov
mov
es
jl
js
and
cmp
jge
sub
sbb
adc
push
or
xor
xor
jmp
sbb
jmp
mov
insb
jecxz
int3
aaa
mov
xor
lock
jge
mov
mov
add
sub
add
lea
inc
dec
movsb
push
add
cli
mov
push
fistps
cltd
mov
push
mov
iret
jle
in
sub
xlat
adc
imul
add
gs
cmp
lods
add
adc
push
mov
lea
lock
push
add
mov
gs
mov
xor
mov
push
insb
dec
js
mov
inc
adc
jge
jle
pop
adc
roll
in
pop
aaa
frstor
pop
mov
arpl
cmp
sbb
dec
out
and
sbb
loope
mov
das
loopne
fcomps
mov
das
and
cmp
ror
arpl
cli
pop
cmp
adc
icebp
pop
jg
js
xor
pop
jle
jmp
pusha
sahf
icebp
call
ja
inc
mov
lods
rcll
mov
daa
pop
loope
sti
cmp
sub
lea
push
push
sub
and
cmp
call
pop
inc
enter
pop
shrb
mov
sbb
in
jno
xchg
or
adc
test
pop
pop
add
mov
jb
out
rcr
cmp
mov
cmp
mov
into
or
dec
push
das
fdiv
setp
mov
xor
inc
orb
sub
xor
inc
out
in
add
pop
add
add
add
testb
shr
pop
je
nop
sub
xor
add
xor
imul
sbb
push
cvtps2pd
or
adc
xor
inc
mov
aam
into
or
jge
cmp
ret
test
or
ret
cmp
push
les
rolb
inc
ret
add
xchg
sub
xchg
add
jne
daa
cltd
cmp
insb
jno
push
stos
jno
lods
out
add
enter
sub
sbb
enter
je
das
sbb
inc
mov
pop
sbb
jmp
push
mov
xor
jl
push
test
int
lods
pop
mov
ret
fisttps
xchg
push
testb
idiv
push
add
cmp
je
cmp
je
cmp
je
push
je
add
jmp
cmp
je
mov
jle
and
arpl
cltd
clc
jmp
mov
mov
add
out
jmp
movsbl
add
mov
insl
add
dec
cs
std
gs
pop
adc
cmp
pop
jmp
cmp
sub
repnz
push
sub
pop
daa
and
adc
lahf
cmp
es
cmpsl
mov
lret
pop
bound
mov
call
testl
fcmovnbe
and
dec
rcrl
cmp
pop
lock
fisttps
mov
xor
das
xlat
jg
frstor
cmp
mov
pop
jg
xor
pushf
jmp
daa
repnz
and
cli
inc
sub
jmp
enter
mov
inc
inc
loopne
pop
cmp
add
js
mov
cmp
inc
xor
jmp
shr
and
adc
adc
push
xchg
adc
mov
xchg
pop
sarw
jnp
sub
dec
inc
pop
outsl
jp
add
iret
or
cmp
nop
out
sub
adcb
sbb
dec
xor
cmp
repnz
sbb
dec
pop
or
cmp
xchg
scas
adc
pushf
xor
dec
jg
inc
add
cld
fisttpll
push
aad
pop
std
pop
add
sarl
add
cmp
add
or
pop
sbb
cmp
xor
in
cmp
sbb
push
or
jo
jb
mov
int3
adc
sbb
aam
pop
pop
or
testb
jmp
and
inc
sahf
cmp
shrb
mov
aad
adc
aad
push
or
inc
mov
cmp
dec
jnp
aas
add
sarl
xor
mov
mov
jns
add
aas
and
pop
inc
scas
dec
dec
jne
pop
sti
pop
sarb
add
in
inc
add
aaa
iret
out
cmpb
in
inc
push
nop
inc
inc
sahf
popa
jge
pushf
sub
mov
add
in
or
dec
jne
sub
ja
mov
jmp
mov
daa
adc
shll
cmp
cmp
shrl
or
ja
sti
add
add
inc
ljmp
mov
icebp
mov
mov
cmp
add
in
lret
mov
es
adc
inc
sub
cmp
pop
dec
nop
push
inc
add
push
adc
shrl
adc
inc
pop
inc
dec
das
shr
xchg
xchg
mov
adc
jne
dec
inc
movsb
pop
pop
fstl
push
mov
xor
mov
mov
pop
inc
mov
inc
add
daa
call
and
rcrl
int3
je
and
add
dec
adc
pop
pop
ret
push
mov
lock
cwtl
mov
test
or
jg
and
stos
inc
inc
inc
cmpb
jge
sti
mov
pop
cmp
jne
sbb
inc
jmp
cmp
jne
mov
out
cmp
sub
nop
cmpb
sbb
xor
push
or
inc
fiaddl
cs
pop
lret
inc
pusha
in
mov
mov
or
psubw
jb
out
add
lds
mov
and
jmp
call
aaa
jno
push
sti
inc
int
or
jb
jmp
jl
andl
out
sub
jbe
jmp
jg
mov
cltd
sub
add
aas
inc
adc
movsb
popa
sbb
lock
adc
push
addl
ljmp
mov
xchg
loopne
in
pop
rcl
add
ficoml
sub
bound
xor
inc
adc
adc
movsl
or
jg
xor
sbb
hlt
dec
push
adcb
and
jmp
sub
inc
outsb
and
add
aas
jb
setb
jmp
setl
cmp
je
dec
mov
dec
ret
rorb
push
shrl
xchg
push
pushl
getsec
clc
inc
lret
aam
dec
fdivrp
decl
ds
fimuls
push
fsubp
jmp
cmp
movsl
pop
add
pop
sbb
test
jg
out
mov
xor
lods
jl
inc
pop
xchg
xchg
test
lock
orl
pop
push
iret
inc
add
mov
mov
test
or
ffreep
dec
sbb
cmp
cmovns
insl
call
out
fcomps
sub
inc
call
or
add
mov
cmp
jge
adc
jge
dec
hlt
test
ret
lock
incl
inc
loopne
push
in
mov
push
or
jmp
decl
stos
xchg
and
clc
ficoms
lret
in
xchg
jge
or
fucomp
test
in
push
adc
push
sub
pop
inc
sub
dec
shll
hlt
add
add
jl
cmp
aaa
enter
push
lock
test
flds
ret
cmpsl
cmpl
jle
cltd
or
cmp
aas
cmp
dec
jno
and
jecxz
mov
fisttpl
adc
or
mov
dec
jne
enter
mov
sub
in
push
subl
mov
nop
cmp
mov
pop
cmpsl
lds
pop
jno
xchg
out
ss
lock
mov
outsb
push
jecxz
mov
leave
mov
lock
leave
mov
add
gs
cmp
js
es
clc
insl
xlat
cmp
jle
repnz
js
jge
or
mov
mov
or
or
or
jns
pop
sub
mov
hlt
jae
popa
xor
inc
xor
loopne
sub
add
divl
sbb
xchg
xchg
lds
dec
push
xchg
test
and
roll
inc
xchg
arpl
enter
rcll
jecxz
or
daa
jecxz
mov
dec
clc
jne
mov
sub
lea
lea
pop
roll
popf
push
sbb
in
mov
dec
push
push
push
mov
incl
imul
pop
fwait
jg
call
in
sbb
mov
test
lcall
or
sbb
jecxz
popa
xchg
mov
ffreep
insl
jnp
jne
dec
adc
cmp
inc
push
mov
mov
xchg
mov
jl
flds
add
xor
jp
mov
or
or
inc
rolb
adc
rolb
dec
rclb
repz
jmp
add
jecxz
cmc
call
cmp
jne
cs
mov
mov
mov
xor
add
dec
in
add
addb
cld
push
and
ret
and
pop
or
mov
push
ret
adc
stos
pop
pusha
sbb
jo
dec
fimuls
sti
out
insl
sbb
js
pop
jne
adc
fcmovb
add
dec
cmpb
testl
jp
push
in
jne
movb
sub
lea
xchg
jbe
lret
mov
loope
jp
sub
cmp
stos
in
and
push
push
gs
loope
mov
sbb
andl
mov
push
js
push
add
inc
cmp
test
sub
dec
push
push
call
inc
mov
subl
sahf
test
jg
sub
dec
loop
ret
imul
incl
gs
xor
cs
insb
jbe
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
test
pushf
loop
outsl
loopne
sbb
inc
or
inc
out
and
push
les
push
mov
and
add
add
inc
movsb
adc
pop
add
dec
adc
mov
push
push
call
inc
out
inc
clc
int3
cwtl
push
not
es
into
jl
add
add
repnz
dec
sbb
lods
mov
inc
lahf
sti
repnz
and
popf
push
lods
repz
int3
fiadds
sbb
xor
mov
je
jecxz
jge
jg
push
add
test
adc
and
sbb
add
cmp
stos
pop
cmp
xor
lock
inc
orb
add
sub
sbb
jno
pop
or
push
pusha
mov
mov
push
je
das
outsl
repz
bound
push
xor
cmc
add
mov
movsl
sbb
je
popa
jb
in
arpl
gs
aaa
or
xchg
pop
filds
js
pop
cwtl
dec
mov
lods
ds
mov
mov
outsl
daa
je
adc
and
push
mov
pusha
jo
add
jbe
fcoml
mov
jp
mov
sbb
mov
mov
fsubrs
add
cmp
dec
inc
jecxz
out
cli
mov
jo
cwtl
jg
scas
cmp
and
pop
sub
inc
into
xor
dec
dec
add
or
shlb
xchg
pop
jno
outsb
pop
jno
jnp
lahf
adc
adc
insb
int3
mov
push
adc
mov
addr16
jl
out
cmp
mov
pop
test
pusha
mov
cmp
jne
mov
sbb
inc
jno
pop
mov
and
shll
popl
or
adc
jnp
push
push
pop
mov
out
loope
cmp
pop
or
in
jnp
mov
das
mov
xchg
push
out
sub
pop
filds
imul
mov
pop
ret
sbb
add
sti
rclb
inc
xchg
nop
push
int3
pop
popa
adc
and
add
ret
or
ficoms
in
icebp
add
add
cmp
enter
lea
adc
test
int
add
dec
or
inc
lret
movsl
jo
push
bound
add
sbb
iret
addps
push
arpl
sub
xor
jb
xor
call
dec
push
xchg
mov
dec
inc
cmp
push
loopne
jg
push
mov
inc
jmp
cmp
pop
add
pop
cld
incl
jmp
or
mov
adc
and
sbb
sti
pop
xor
and
lret
add
pop
idivb
popa
rolb
pop
cltd
add
dec
or
cmp
jb
or
faddp
jne
movb
and
sbb
adc
dec
jbe
pop
add
xor
sbb
lea
ret
pop
test
hlt
xor
sbb
sbb
montmul
cmpsb
loopne
push
xlat
xchg
test
mov
clc
sar
or
inc
test
je
or
out
add
mov
cs
adc
add
rolb
cmp
cwtl
and
rol
loope
or
mov
pop
lea
filds
mov
rcll
or
pmaxsw
inc
fwait
xlat
or
xorb
clc
cmp
dec
cmp
add
and
inc
in
sub
dec
ret
xor
loopne
inc
adc
in
xorb
jg
jnp
sbb
or
jb
inc
mov
sub
out
mov
push
lret
xchg
dec
lods
xor
lock
ja
jne
adc
fisttpl
sbb
and
inc
push
and
testb
sti
aaa
cmp
or
jg
or
push
xorb
enter
shrb
or
inc
addr16
push
outsl
hlt
mov
and
insl
mov
fsubs
roll
inc
aaa
and
orb
inc
lock
inc
pop
in
fsubrl
es
add
push
test
lret
cmp
fsts
xor
enter
out
outsl
xor
push
add
ret
cmp
jnp
mov
add
call
mov
add
inc
sahf
push
clc
cmpsl
je
insb
xor
xchg
push
lock
iret
push
lock
push
mov
ljmp
lea
push
push
mov
xor
and
mov
adc
cld
jmp
or
andb
sub
pop
fs
jmp
fdivs
test
pop
dec
mov
sbb
popf
adcb
call
fiadds
clc
subl
scas
sbb
cwtl
or
xor
adc
adc
mov
add
dec
push
inc
cld
in
ja
addl
and
clc
and
cmp
notb
adc
and
in
repz
adc
and
and
jbe
sub
clc
add
fisttpll
add
mov
push
and
sub
mov
fdivs
xor
pop
testb
enter
cmp
xor
shll
push
mov
loopne
icebp
add
ss
lcall
pop
push
in
mov
popf
or
jmp
push
mov
test
inc
sub
mov
mov
fsubl
lods
mov
fldln2
popf
adc
je
dec
pusha
adc
cmpsl
jo
mov
sbb
lcall
jno
mov
fs
mov
adc
nop
add
mov
pop
and
movl
fidivrl
mov
std
test
movl
mov
inc
hlt
push
ficomps
mov
insl
xchg
jl
mov
jp
mov
pop
ja
jns
jo
pop
jb
sub
adc
jo
cmp
adc
bound
jmp
pop
in
out
lods
pop
push
push
inc
sub
enter
dec
push
or
jb
add
js
fildll
push
js
push
lea
xor
jg
pushf
xorb
push
gs
add
out
add
gs
add
es
popa
bound
inc
jle
cs
push
outsl
arpl
inc
gs
jle
sti
popaw
jne
je
dec
outsl
je
imul
lea
xlat
idivw
arpl
or
or
in
sarb
xor
xor
outsl
mov
bound
outsl
js
imul
ja
nop
cmp
push
andps
pop
add
mov
ja
je
sbb
inc
addl
iret
insb
punpckhbw
push
fs
pop
nop
inc
push
sbb
push
orl
dec
add
and
and
and
and
test
jl
je
xor
and
push
fs
pop
enter
pop
push
push
and
inc
orl
inc
cmp
xor
xor
and
sub
xor
and
and
and
add
sbb
leave
add
cld
clc
hlt
sbb
lock
call
in
fcoml
aam
inc
push
sbb
les
incl
add
enter
add
enter
add
enter
add
add
orl
add
orl
add
add
sbb
int3
bswap
enter
add
clc
hlt
and
call
in
or
enter
out
fsubs
orl
rorb
push
sbb
mov
sbb
lods
test
sbb
mov
inc
push
xchg
nop
mov
test
jl
je
sbb
insb
push
inc
pusha
pop
pop
fs
inc
push
push
push
dec
nop
inc
push
sbb
inc
inc
push
sbb
xor
sbb
sub
and
fs
inc
and
fs
inc
push
adc
or
inc
push
sbb
add
orl
add
clc
hlt
lock
enter
in
enter
nop
inc
sahf
or
pop
pushf
cwtl
inc
push
sbb
jl
sbb
mov
nop
je
fs
inc
push
insb
push
sbb
pop
inc
push
sbb
dec
push
sbb
inc
inc
cmp
fs
inc
cmp
fs
inc
push
sub
and
inc
push
sbb
sbb
inc
push
sbb
or
sbb
add
push
cld
xor
and
and
and
fadds
sbb
enter
int3
enter
inc
sarb
mov
inc
push
sbb
mov
fs
xchg
nop
mov
test
push
js
jo
inc
push
sbb
dec
push
sbb
pop
orl
push
dec
dec
inc
xor
and
or
enter
xor
enter
sub
and
and
or
or
enter
add
inc
clc
hlt
lock
inc
push
in
call
sbb
inc
push
sbb
int3
push
sbb
sarb
mov
nop
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
inc
js
jo
nop
inc
push
insb
push
sbb
pop
inc
push
sbb
dec
inc
adc
inc
incl
add
and
and
and
add
add
imul
mov
rcrb
adc
push
shr
ret
nop
ja
insb
jnp
jl
dec
nop
int3
pop
pushf
or
mov
les
aam
jns
int3
nop
xor
shl
dec
mov
mov
shl
scas
cmp
movswl
add
cli
iret
pop
ret
push
mov
loope
or
sub
cvtpi2ps
mov
jo
scas
add
xchg
jne
mov
cli
cmp
sub
or
fadd
or
adc
imul
orl
pop
test
ja
sbb
pop
add
add
scas
cmpsb
push
stos
and
loope
lods
add
stc
mov
adc
push
pop
mov
out
mov
sbb
insb
pushf
mov
enter
adcl
xchg
ja
aaa
push
fs
jge
sbb
xchg
addl
or
andl
jg
fbld
gs
inc
and
fwait
cmp
inc
inc
dec
add
outsl
mov
addr16
pop
push
dec
dec
dec
pop
inc
push
dec
pop
and
jmp
out
push
push
pop
sub
push
inc
dec
pop
dec
dec
dec
inc
push
das
mov
gs
das
gs
outsl
leave
orl
loopne
dec
subb
push
or
push
dec
push
dec
pop
test
dec
or
add
fnclex
mov
or
gs
imul
inc
daa
add
pop
inc
in
push
lock
mov
femms
fnstsw
and
lahf
gs
insl
es
or
add
loopne
or
int
jle
inc
pop
inc
inc
push
sub
and
fadds
or
jg
ss
data16
push
jns
gs
imul
add
or
addl
inc
add
add
bound
das
adc
data16
dec
xor
mov
aas
dec
outsb
push
push
arpl
jmp
nopl
addl
jg
adc
sbb
inc
outsl
outsb
std
jmp
clc
rep
insb
pop
mov
sbb
mov
add
pop
adc
andl
pop
movlps
cld
loope
fldt
movsb
add
dec
sbb
scas
sub
adc
add
unpcklps
pop
jmp
je
inc
jb
or
jle
xor
shrl
inc
cmp
in
loopne
inc
jnp
nop
jbe
scas
imul
lret
lahf
push
orb
jnp
mov
stos
pop
rorb
into
push
cmpsb
pop
push
fmul
and
and
les
mov
enter
test
cltd
or
cmp
cmp
pop
pop
pop
pop
mov
sete
in
popf
outsb
dec
push
jb
push
adc
movsl
lock
enter
hlt
cmc
enter
div
clc
and
sti
orl
cld
std
decl
enter
loop
enter
in
andb
or
out
imul
jmp
xor
and
paddsb
out
enter
out
rcl
and
aam
or
enter
fmuls
enter
enter
fstp
enter
ffreep
shll
or
ret
orl
enter
and
lret
enter
int
enter
iret
mov
and
mov
or
enter
mov
mov
and
and
and
movsb
orl
movsl
cmpsb
cmpsl
test
xor
and
and
and
xchg
dec
push
adc
insb
sub
repnz
xor
insb
inc
or
push
inc
imul
nop
push
pushf
add
push
in
cmp
inc
insb
scas
mov
data16
xor
pop
int3
or
arpl
cmpl
and
aas
iret
sub
push
push
inc
inc
bound
je
cmpsb
pop
cmp
mov
aas
pop
and
push
inc
dec
gs
jo
mov
nop
daa
inc
mov
or
push
lahf
or
dec
jne
dec
dec
gs
imul
loopne
in
outsb
adc
lcall
mov
or
in
mov
push
sbb
je
xchg
scas
rol
sbb
dec
outsb
sbb
outsb
xchg
cmp
xlat
outsl
and
insb
xor
mov
inc
leave
adc
js
outsl
fdivrp
push
xor
or
imul
nop
adc
push
shrb
stc
mov
popa
outsb
addr16
cmova
push
dec
out
icebp
test
ja
mov
inc
xor
and
pop
dec
add
mov
jo
testb
imul
leave
jno
aas
scas
in
sub
xchg
insb
jle
gs
mov
orl
scas
in
or
outsb
fs
inc
mov
push
jb
aas
adc
adc
movsbl
outsl
imul
or
in
or
pop
mov
and
and
lret
shrb
mov
inc
add
jo
shlb
adc
xchg
mov
mov
push
cmp
push
push
jb
insb
pop
and
into
mov
je
aas
mov
push
inc
mov
or
outsl
inc
add
or
xchg
mov
mov
rorb
fsubrs
sbb
mov
sub
and
xor
addb
mov
pop
outsb
push
aas
out
test
xor
dec
fiaddl
out
mov
aam
cs
push
data16
pop
and
mov
xor
mov
or
stos
andb
mov
clc
jecxz
adc
popa
gs
mov
mov
xor
add
pop
ror
dec
invd
setb
sub
out
les
jne
inc
or
mov
inc
add
aas
inc
sub
add
push
push
push
mov
jne
xchg
popa
lahf
icebp
int3
add
dec
rcll
andb
enter
adc
dec
xor
dec
xchg
mov
push
lcall
pop
popa
imul
sbb
push
loopne
sbb
lods
nop
inc
push
ja
ja
and
loope
xor
add
cmp
jle
mov
imul
and
imul
adcl
shrd
jmp
imul
dec
sub
adc
dec
loope
div
xor
add
cmp
mov
test
mov
insb
pop
ret
xchg
add
mov
inc
or
popa
mov
xchg
sbbb
nop
sbb
xor
lcall
add
insb
mov
adc
adc
push
inc
inc
dec
pop
mov
nop
loope
ja
nop
inc
mov
pop
add
es
or
or
add
addr16
mov
cmp
jbe
cmp
repz
je
movzbl
adc
inc
incl
push
incl
jmp
scas
mov
cmp
cs
jle
out
or
cmpsl
jne
stos
jne
inc
add
push
inc
aas
push
mov
push
xor
cltd
negl
jg
out
and
sti
je
loope
xchg
out
mov
pop
out
sbb
pop
lcall
sub
test
dec
es
cmpb
adc
daa
push
out
or
xor
clc
addr16
mov
mov
loopne
push
lret
fnstsw
push
xchg
sbb
adc
add
jo
add
test
jp
jecxz
and
mov
loop
push
adc
and
ljmp
lock
incl
inc
cmp
jl
cmpb
jbe
adc
cmpb
sub
clc
imul
lret
inc
or
aaa
cwtl
pop
pop
aas
xchg
jns
cltd
ret
push
push
mov
cmp
insb
daa
dec
push
mov
loopne
mov
das
mov
push
shrl
inc
adc
add
cmp
pop
mov
or
push
push
cmp
jne
incl
mov
mov
jmp
sub
adc
inc
rclb
in
adc
negb
sub
cmp
call
cmp
jne
mov
dec
sbb
out
add
aad
insl
mov
add
pop
mov
push
xchg
aad
inc
sti
into
xor
xchg
mov
call
xchg
and
dec
imul
push
nop
xor
pop
mov
mov
sub
je
jae
cmp
mov
inc
mov
jnp
into
popf
lea
or
adc
clc
int
jae
inc
dec
jne
stos
xor
leave
jne
sarb
movsb
pop
cmpl
ret
mov
shl
icebp
out
pop
lods
dec
movl
std
call
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
sbb
out
mov
sub
xor
push
outsl
cwtl
sub
add
add
imul
mov
cmp
and
jo
pushl
mov
negl
adcl
cmp
sub
mov
jecxz
mov
jo
cmp
adc
sub
inc
fiadds
das
add
fisttpll
rcr
imul
push
and
fistps
ret
add
add
sub
add
rorl
fdivr
mov
push
push
cld
pop
xor
add
fstsw
dec
sub
sahf
jae
ljmp
ffree
ffree
push
add
pop
aad
aad
or
or
push
fnstsw
sub
loop
mov
pop
movl
push
push
mov
add
push
xlat
repnz
mov
lock
xchg
push
js
mov
popa
cmpb
or
mov
mov
popa
or
jbe
and
fidivl
imul
xchg
cmpsb
cmpsl
nop
pop
out
idivb
adc
mov
aas
inc
and
mov
sahf
popa
inc
fsub
xchg
hlt
mov
sub
adc
xlat
adc
jecxz
xchg
sbb
xor
xchg
and
xchg
insb
cwtl
cwtl
adc
cwtl
rorb
and
xchg
cltd
cmp
pop
jle
sbb
movb
sbb
aaa
inc
mov
sub
mov
popf
jp
push
add
cmpl
jecxz
pop
cmp
fwait
ret
push
lea
notl
rcl
mov
fcomps
mov
add
xchg
add
dec
ss
push
lcall
imul
arpl
jg
pop
addr16
inc
cwtl
sub
xor
cwtl
add
fstpt
dec
ret
push
pop
inc
sbb
pop
lods
pop
sbb
sub
sub
mov
cmp
xchg
jmp
and
pop
out
sbb
fdiv
add
push
sub
pop
add
ljmp
add
adc
mov
mov
sbb
mov
add
pop
cmp
stos
sub
lods
test
push
push
loope
mov
fs
pop
xor
jae
out
sbb
rolb
testb
lods
mov
rcll
adc
adc
pop
out
negb
adc
add
push
pushf
pop
bound
cmpb
xor
add
mov
xchg
push
jne
mov
in
push
jae
cs
cld
ss
addb
aas
notl
fs
mov
adc
push
xorl
je
adc
mov
cmp
push
enter
ja
fs
push
and
orb
dec
or
int3
mov
mov
pop
mov
lahf
imul
add
mov
addb
mov
pop
inc
ret
xchg
add
repnz
incl
jne
dec
cmp
sti
pop
add
xorl
pop
sub
sbb
cmpsb
xchg
stos
xlat
popf
loopne
pop
jmp
jg
popa
adc
js
aaa
in
cs
enter
mov
loopne
sbb
je
cs
sub
push
mov
dec
lea
addl
iret
inc
mov
xorl
xor
das
shrl
and
dec
mov
out
clc
lock
rcll
and
inc
aaa
push
test
pop
mov
pop
jne
inc
cmp
loope
rol
jne
sbb
std
cmpsl
jle
cmpps
add
jo
daa
aad
cltd
push
mov
or
jmp
dec
sbb
inc
subl
iret
push
or
mov
fsubr
ja
pop
add
mov
and
and
dec
cmc
adc
xor
push
test
pop
ret
adc
and
les
aas
test
flds
les
je
jne
out
sub
xchg
aaa
cltd
sub
pop
push
push
push
and
mov
push
push
or
push
dec
add
insb
aad
push
jne
push
push
insb
xorl
jle
push
hlt
call
inc
push
pop
hlt
clc
adc
xor
in
cld
imull
cmp
call
adc
cmpsb
call
clc
stos
mov
hlt
xor
rol
adc
adc
aas
jno
sub
sbb
ds
addl
pop
pushl
sbb
adc
enter
das
rcll
adc
push
pop
sub
ror
jle
cmp
xorl
rorl
clc
inc
lret
jge
movsl
orl
test
pop
pop
ret
sbb
dec
mov
add
lret
fldenv
mov
fstps
xchg
inc
mov
sti
pop
mov
sub
fmulp
pop
pop
pop
shr
cmp
push
ds
jmp
adc
xor
repz
mov
mov
rolb
pop
mov
pop
cmp
add
ljmp
sub
outsl
pusha
xorb
xor
pop
pop
jmp
loopne
clc
xor
add
inc
jne
jne
scas
inc
sbb
add
dec
sti
movlps
dec
je
mov
mov
pop
sub
jbe
or
lea
lods
mov
mov
push
xchg
loop
add
mov
jne
jo
ret
sbb
sbb
xor
xchg
iret
mov
mov
popa
sub
mov
push
adc
addr16
outsb
fsubrs
mov
popf
mov
into
xchg
xchg
pcmpeqd
jl
pop
outsl
xchg
fcoms
cmc
pop
jge
jbe
mov
xchg
or
cmp
outsb
std
lret
cs
insb
xchg
mov
add
cmp
mov
daa
pop
and
daa
js
jno
mov
sub
out
test
cmp
aam
cmp
je
mov
std
mov
call
pop
mov
inc
mov
aad
out
pop
or
adcl
pop
cmp
daa
out
push
jge
lock
mov
sub
or
das
or
dec
jne
xchg
sub
cmpsl
lods
mov
bnd
mov
inc
out
add
add
idivb
sub
jne
das
hlt
and
lods
jmp
dec
shr
ret
andl
outsl
sub
mov
pop
mov
out
pop
pop
add
push
jae
fildl
pop
mov
jae
shl
movsb
xchg
pop
mov
repz
pop
mov
pop
or
jnp
adc
mov
cmp
add
aas
push
divl
jb
cmp
ja
imul
sub
movzbl
add
and
in
dec
cmpb
repz
mov
add
pop
push
repz
ret
je
xchg
fimuls
fisttps
pop
sarb
or
xor
mov
fwait
push
add
and
jae
pop
mov
push
loope
mov
neg
imul
mov
lcall
in
cmc
pop
ljmp
dec
fsubrs
rorl
mov
and
stos
sub
ja
or
ljmp
jp
push
insb
jmp
pushf
popf
ja
imul
icebp
rorl
sbb
sub
cmp
jne
aaa
mov
sbb
add
mov
aad
jae
xchg
or
jmp
xor
inc
inc
in
div
xchg
imul
add
jne
aas
mov
je
cld
call
pop
add
mov
jns
mov
ja
hlt
lldt
xor
ja
jns
test
ds
push
push
dec
mov
rorl
ficompl
push
leave
inc
mov
add
or
jnp
mov
outsl
mov
inc
je
mov
or
inc
je
mov
inc
je
mov
dec
je
dec
jge
test
aaa
mov
mov
ret
mov
mov
fwait
lock
ds
dec
mov
xchg
push
loopne
mov
repnz
iret
dec
mov
stc
xchg
ret
cmp
and
pop
int
pop
push
movsl
lahf
ds
or
inc
sub
daa
aad
and
lods
mov
push
push
movsl
ret
cmp
pop
cld
mov
pop
insb
mov
jg
cli
insl
sub
cmp
inc
lret
xchg
pop
mov
cld
xchg
ds
nop
ss
and
fstl
push
jmp
fwait
outsb
cmp
fdivrs
fdivrl
imul
lea
insl
sub
sbb
inc
std
add
ret
jmp
add
mov
js
ss
cltd
mov
add
adc
lea
mov
xchg
mov
pop
push
out
push
lea
push
adc
or
push
xor
stos
or
add
add
mov
neg
cmp
jg
jmp
or
leave
mov
stos
xchg
push
mov
fbstp
gs
in
adc
fnstenv
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
pop
aam
push
sbb
jb
mov
and
adc
push
nop
repz
xchg
repnz
cld
mov
sub
and
cmp
lods
jmp
mov
int
xchg
insl
daa
ficoml
add
ficomps
rorb
xchg
sub
jge
movzwl
sub
loop
jae
lea
lock
lea
mov
cmpb
mov
call
add
ja
movswl
mov
add
divb
lret
lea
negl
or
rcrl
inc
test
cld
and
decl
imul
inc
dec
lods
or
lahf
add
clc
mov
imul
stos
ret
std
mov
aam
loope
jne
adc
stc
std
jl
pop
sbb
fisttps
pop
push
ja
cmp
sbb
stos
idiv
xlat
jmp
inc
inc
mov
loop
push
adc
neg
stos
push
pop
inc
clc
dec
test
xchg
mov
test
push
mov
dec
mov
pop
dec
add
sbb
sub
xlat
add
rorl
mov
mov
mov
adc
or
call
cmp
mov
fcoms
add
je
loopne
ljmp
mov
inc
test
jne
sbb
jle
sbb
jge
stos
xor
int
ljmp
js
je
inc
jne
pop
xchg
jle
jne
ret
xchg
repz
sbb
aam
or
repnz
shl
pop
xor
lea
clc
aas
and
addb
cmp
add
ds
sbb
incl
pop
xchg
mov
movsb
stc
pop
pop
inc
loop
push
jo
lea
or
fildll
repz
and
inc
add
and
and
adc
and
sti
mov
inc
sub
sub
scas
mov
and
sub
fs
sub
sub
mov
cmpsl
loopne
rcll
dec
je
inc
xchg
jnp
dec
adc
or
ret
movsl
add
jne
testw
clc
jno
cmp
add
movb
clc
jbe
push
pop
fldt
sub
inc
sub
movsl
dec
loope
adc
out
push
cld
test
loope
adc
sub
frndint
push
mov
fldt
fstsw
fwait
mov
testb
je
out
ljmp
fbstp
lea
mov
inc
sub
pop
lcall
xchg
shr
and
add
push
cmp
jle
clc
out
xor
stos
mov
add
jns
fwait
mov
cmp
jg
lcall
adc
cmpb
jb
movb
js
mov
pushl
ja
jmp
data16
popa
xor
enter
movd
push
cmp
inc
xor
push
or
xlat
mov
ljmp
push
mov
rclb
adc
daa
xor
mov
rorl
test
mov
jo
cmp
add
or
les
fildl
jl
sbb
jae
dec
add
jg
inc
loopne
push
in
insl
or
dec
sbb
cmp
mov
mov
imul
mov
loopne
ret
sbb
sub
popf
and
jne
sbb
xlat
pop
dec
sub
cmp
pop
iret
into
and
inc
ljmp
enter
add
bswap
cmpb
divl
pop
jmp
sbb
or
mov
sbb
push
jb
scas
inc
push
loope
mov
ret
add
mov
fyl2x
fwait
std
adc
xchg
fldz
cmpsb
xchg
jp
add
sbb
inc
mov
es
inc
imulb
call
inc
sbb
dec
and
and
cmp
jne
inc
push
sub
pop
add
jg
jne
addr16
rorb
push
mov
adc
aas
aaa
cmc
add
aas
test
or
mov
push
test
adc
jmp
insl
and
push
int3
jmp
rorl
mov
sub
add
jae
mov
or
inc
jmp
aaa
push
out
hlt
mov
negl
daa
or
ror
push
inc
imul
pop
cmp
xor
xor
add
inc
pop
iret
jb
sbb
psubd
shr
pop
je
test
push
sarb
and
fistps
mov
arpl
or
pop
dec
push
addr16
push
test
shrb
adc
sar
in
push
sub
mov
inc
ja
scas
jbe
jo
xchg
cmp
je
add
add
fstpl
fwait
push
push
mov
sti
imul
fstpt
fldl
inc
sbb
test
imul
dec
adc
mov
pushf
adc
dec
clc
hlt
add
adc
adc
clc
pop
or
fisttps
jae
or
cmp
inc
stc
pop
lods
or
inc
insl
pop
jae
ss
mov
or
add
jge
mov
ljmp
out
jbe
adc
add
daa
jl
xchg
dec
sbb
add
je
push
bound
fistps
mov
adc
pop
xchg
faddl
aad
cli
mov
arpl
pop
fnstsw
mov
xchg
fs
test
jne
add
outsl
mov
orb
mov
inc
jl
mov
fstps
mov
add
xlat
and
in
popa
fnstenv
mov
js
push
cmc
roll
fldenv
mov
push
ljmp
and
icebp
and
daa
scas
loopne
lods
fidivrs
jecxz
std
add
inc
xchg
call
inc
lea
mov
add
adcb
adc
and
or
jb
sti
mov
sti
cmp
ja
adc
call
lahf
push
out
add
inc
dec
jne
sub
dec
mov
aas
cltd
idiv
imul
lahf
inc
or
repnz
aas
cmpsb
clc
fisubrs
ds
add
popa
ret
or
int
sub
inc
std
std
lds
clc
mov
pop
cmp
and
pop
pop
and
cmp
sub
and
dec
in
test
jg
mov
cmp
add
cltd
pop
sahf
pop
inc
std
aas
or
cmp
jl
cmpl
add
xchg
je
lock
lods
mov
test
decl
cmpl
fs
lds
fcoms
ljmp
add
add
aam
add
lea
fistpl
or
icebp
fimuls
lahf
push
jns
mov
pusha
xor
cmp
jb
push
test
sub
fisttps
cmp
cmc
and
adc
js
mov
pop
mov
add
or
js
sbb
jge
mov
push
idivl
sbb
cld
mov
rcll
and
mov
adc
sbb
push
or
mov
pop
cwtl
in
fst
repz
push
jle
sahf
out
sbb
adc
dec
fcoml
sbb
sbb
sbb
cmc
ret
fsts
adc
jnp
cld
sub
or
ficompl
addl
and
xchg
add
or
add
inc
mov
sahf
rcll
lcall
fildl
add
add
loopne
in
pop
outsl
test
icebp
or
cmp
lock
add
sbb
dec
and
and
xchg
sbbb
cli
sbb
or
or
das
push
cmp
je
or
mov
inc
add
out
push
cmpb
jne
mov
mov
push
lea
or
fucomi
push
lock
repnz
movb
jae
testb
in
jge
data16
ljmp
jecxz
mov
je
mull
lea
js
xchg
push
xchg
sbbl
pop
aad
popa
adc
shr
out
repnz
add
imul
jo
and
pop
iret
pop
fdivl
jne
push
lea
dec
lods
push
mov
lock
mov
jne
cmpsl
add
ret
enter
pop
push
fcoml
push
and
push
add
sub
mov
mov
jb
add
mov
mov
adc
out
xor
mov
pop
lret
ret
xlat
or
adc
mov
imul
jno
add
addr16
loope
pop
xchg
into
ret
add
in
enter
jg
int
enter
sbb
xor
jmp
xor
arpl
sysret
jne
inc
cmpb
jne
push
addl
cmp
mov
add
add
pxor
jno
add
add
movsl
pop
loopne
xor
pop
mov
inc
add
sub
incl
popf
push
adc
jecxz
mov
movsl
sub
cmp
stos
lahf
mov
mov
sub
lods
dec
add
ret
js
cmp
lret
into
xchg
and
push
lahf
sar
out
add
push
mov
pop
cmp
cmpsl
in
cmc
jne
mov
xor
xchg
fisubs
cmp
xchg
aaa
mov
mov
or
bswap
or
or
or
or
or
or
push
push
add
xchg
out
sar
or
or
lahf
cmp
mov
mov
mov
push
dec
test
movsb
sub
ds
fld
pop
or
and
test
sbb
lret
icebp
mov
mov
jl
cltd
lcall
pop
insb
mov
das
popf
dec
push
lea
jbe
popa
xchg
fwait
push
xlat
fs
sbb
push
sbb
nop
hlt
dec
sbb
imul
mov
lock
jnp
pop
add
mov
fsubrs
pop
xor
leave
mov
mov
insl
jmp
out
subb
insb
mov
fs
mov
mov
out
dec
sub
fs
lods
cwtl
es
fcomps
fwait
sub
mov
xor
push
cwtl
or
push
ja
jl
cld
rcll
and
add
adc
and
mov
je
sbb
pop
or
pop
je
jmp
aam
out
push
cmpb
dec
cmp
insb
cwtl
test
movsb
sub
je
bnd
or
adc
sar
jmp
jmp
cmp
xor
mov
push
cmp
xor
outsl
outsl
jne
scas
ljmp
mov
sbbl
jmp
movsl
cmp
call
mov
sub
add
push
shl
inc
adc
push
in
call
pushf
shll
dec
and
mov
add
push
jb
add
push
mov
or
add
jne
out
insb
or
test
test
add
push
inc
jbe
daa
jns
pop
enter
add
into
mov
adc
dec
mov
mov
imul
xor
sub
sbb
lret
mov
xchg
add
dec
and
mov
mov
adc
add
rorb
or
lods
into
mov
or
popf
add
fiaddl
cmpb
cmp
mov
jecxz
sbb
jmp
sbb
push
loopne
rolb
jmp
call
add
mov
mov
cwtl
mov
test
sbb
add
inc
mov
or
movsl
in
fstl
rorb
pushf
jmp
adc
xchg
dec
das
push
dec
mov
xor
mov
add
jl
mov
outsl
js
rolb
jne
or
mov
call
mov
push
lahf
inc
inc
mov
add
aaa
mov
xor
xchg
and
daa
pop
push
call
cmp
jg
je
mov
inc
pusha
push
jb
dec
mov
jmp
call
hlt
cld
ret
inc
adc
out
fwait
add
mov
add
add
mov
ljmp
add
sarl
add
sub
jae
add
pop
and
ficomps
jle
rolb
push
xlat
pushf
adc
ret
add
ret
fiadds
imull
mov
das
jecxz
orl
sarb
jmp
inc
fdivrs
mov
xor
notl
sub
sbb
jo
sub
add
mov
xor
dec
push
xchg
mov
notl
cs
fcompl
pop
jl
pop
in
cmp
jne
incl
dec
fs
xchg
testl
inc
notrack
sub
je
jg
clc
dec
je
sub
sub
je
jmp
mov
jmp
std
inc
xlat
push
push
push
dec
ja
push
inc
mov
jle
inc
fs
fadd
mov
or
in
inc
dec
test
mov
add
dec
mov
add
pop
mov
adc
mov
mov
js
pop
popa
pop
pushf
sub
pop
or
jbe
pusha
lds
push
jmp
hlt
lcall
jno
dec
cmp
pusha
aaa
jmp
push
adc
cmp
jg
lret
nop
xor
dec
cltd
xor
sub
add
push
std
mov
movl
add
jne
std
cmpl
jle
adc
pop
dec
push
push
dec
cld
gs
xor
fmuls
fcomps
mov
loopne
push
cli
sub
adc
inc
out
loopne
add
dec
lock
adcl
lahf
push
pop
xor
ds
sub
addr16
icebp
cmpsl
fsubs
mov
popf
xor
lea
jnp
push
testl
push
sbb
adc
das
mov
lcall
cmp
push
iret
cmp
cmpsb
xor
lods
jae
rolb
movsb
jns
fstp
push
sub
pop
ljmp
adc
cwtl
nop
out
jmp
cmp
incb
mov
ret
push
mov
and
jmp
loopne
les
leave
push
push
jmp
aaa
es
jmp
or
into
lock
push
popa
int
je
push
jmp
cmpb
ja
lds
clc
sub
jp
push
inc
push
fstps
fmull
fucomi
mov
lock
add
cmpb
jle
and
lock
das
jne
testb
adc
movb
aas
ja
or
popa
daa
or
scas
mov
pop
mov
adc
popa
sahf
imul
add
adc
out
mov
jne
cmpb
shll
sub
sub
mov
mov
neg
fsubrl
ficoms
xor
and
test
xor
add
xchg
movsb
jns
mov
testb
push
test
mov
gs
add
aaa
mov
lock
push
hlt
fildl
popf
ljmp
adc
negb
cld
and
jmp
das
jns
ret
push
test
or
inc
xor
adc
inc
les
or
jle
ljmp
push
or
lcall
fsubs
or
add
cmp
inc
or
xchg
dec
jb
add
enter
jge
xor
data16
mov
ja
jne
add
add
mov
sahf
imul
adc
or
jb
daa
call
mov
pop
pop
or
rcrb
adc
rolb
or
inc
mov
xor
pop
pop
test
inc
inc
mov
sbb
mov
mov
jno
push
imul
nop
jbe
adc
ret
push
inc
imul
xchg
loope
daa
fnstsw
scas
cld
inc
data16
jb
sbb
stos
fstpl
fwait
jmp
sbb
dec
cmp
sbb
out
les
jmp
insb
fisubrl
adcl
addb
adc
test
add
cld
scas
inc
mov
sub
jb
or
xchg
dec
shrb
jo
mov
dec
pop
or
or
out
mov
adc
or
mov
mov
add
mov
adc
pop
addl
add
pop
call
in
adc
dec
push
add
stos
push
mov
shll
pop
adc
icebp
cltd
jo
push
pop
dec
push
add
mov
sub
dec
mov
or
add
or
call
lea
dec
lret
inc
sbb
inc
lock
sbb
movl
inc
sub
or
xorb
pop
add
inc
fists
in
add
xor
in
jbe
dec
dec
dec
call
shlb
call
flds
aas
mov
aas
call
scas
push
xor
add
outsl
or
jge
je
xchg
cmp
mov
add
gs
or
mov
jo
das
mov
bound
decl
pop
add
fwait
jge
jle
mov
je
add
mov
pusha
jb
or
mov
sbb
xchg
cmpsl
mov
push
enter
cmp
es
fisubrl
sarb
outsl
fcoml
cs
sbb
push
mov
outsl
add
mov
dec
jne
push
push
pop
leave
sub
and
jb
ror
js
fmuls
repz
es
jne
dec
pop
repnz
push
ss
clc
mov
mov
pop
clc
test
addb
pop
adc
xchg
icebp
scas
add
and
ljmp
je
sub
je
hlt
ret
sbb
add
call
xor
jle
mov
das
push
cmp
mov
inc
pop
loop
cmc
ret
dec
mov
enter
lods
add
xchg
sub
jle
mov
or
cmovnp
je
inc
fimuls
add
jle
js
bnd
adc
push
lcall
xor
pop
je
xor
fsubrl
jne
xor
movsb
dec
leave
sub
mov
push
pop
in
inc
loope
push
fs
mov
das
push
add
mov
mov
add
add
sub
and
inc
daa
and
xor
xchg
adc
sbbb
sti
sbb
lds
sarb
mov
xor
mov
cmpl
sbb
out
rol
xor
mov
add
push
xor
sar
jmp
cmpsl
dec
mov
adc
loopne
rolb
rep
out
mull
call
cmp
addb
insb
xchg
and
xchg
jo
sub
fmul
test
mov
mov
sub
mov
in
paddb
in
add
pop
pusha
jl
scas
mov
lea
pop
sbb
jbe
mov
movb
mov
sahf
test
pop
mov
outsl
add
les
add
push
lea
xor
push
int3
ja
bound
xor
fildl
cs
sub
cmp
data16
rclb
pop
adc
outsb
sbb
xchg
inc
ret
cmp
inc
push
or
mov
cli
cwtl
pop
mov
dec
mov
adc
hlt
std
pop
inc
clc
les
enter
add
jmp
push
add
or
shl
sub
push
movsl
movsl
and
js
pushf
arpl
psubsw
mov
adc
rorb
xchg
dec
lea
icebp
lcall
jmp
sub
xchg
pushf
add
pop
mov
add
or
imul
mov
mov
sar
pop
adc
pop
loope
mov
ja
cmp
jnp
js
arpl
imul
mov
pop
xor
and
adc
inc
or
xor
xor
insb
xchg
xorb
push
or
mov
mov
inc
lcall
cmp
jg
cmp
shlb
mov
jp
icebp
push
adc
sbb
sbb
add
lock
mov
dec
sub
mov
mov
sarl
push
loopne
dec
cmp
push
adc
ljmp
cmpb
in
jmp
shld
ljmp
adc
xlat
or
dec
sti
jae
pop
adc
popf
sbb
in
cmp
test
adc
mov
or
aam
xchg
pusha
mov
jle
inc
xchg
xchg
lret
sti
or
jge
clc
mov
fnstcw
fdivs
jmp
je
and
int3
adc
test
mov
addl
int3
inc
sbbb
insl
add
loop
icebp
pusha
mov
add
ret
mov
dec
mov
cmp
xchg
test
jne
in
add
and
orl
push
cmp
in
stc
dec
je
jmp
xor
inc
xor
sub
jmp
and
add
xchg
gs
fidivs
pop
or
pop
xchg
gs
or
sub
xchg
mov
pop
shlb
nop
fs
add
in
add
insl
mov
push
mov
lahf
jne
sub
cmp
adc
push
inc
fdivs
dec
mov
inc
or
or
jne
loop
lock
ret
loope
aad
inc
in
lret
pop
xchg
xchg
fs
in
jl
decb
add
pop
ret
mov
mov
mov
loopne
jnp
jae
iret
enter
push
pop
enter
jo
fnstenv
dec
ds
ja
xchg
push
pushf
jecxz
outsl
jae
jmp
sub
cwtl
mov
mov
movsb
test
add
jns
nop
xlat
or
mov
mov
inc
inc
and
adc
pushf
shlb
adc
not
aas
push
sbb
std
rolb
or
mov
dec
jae
jae
jbe
jo
cmp
xor
lods
hlt
add
or
pop
lock
lock
outsb
fs
sbb
je
loop
sbb
loopne
sbb
push
jnp
sub
xlat
fnstcw
cmp
add
nop
xlat
scas
add
mov
mov
jno
adc
sub
fidivrl
xchg
adc
jl
or
lods
iret
sti
mov
sub
repz
jne
and
sbb
jno
adc
rolb
in
scas
lock
movb
adc
push
daa
adc
inc
movsb
movsb
movsb
rolb
subb
cs
arpl
sub
mov
jp
ljmp
icebp
data16
mov
inc
sub
dec
repz
adc
or
clc
add
repz
hlt
sub
ret
push
adc
push
hlt
leave
adc
addb
loopne
int
fidivrs
add
sbb
mov
adc
add
jb
xor
clc
jne
xorb
sub
sub
in
fcomps
pop
cmp
call
xchg
in
movsl
inc
xor
outsl
lock
xchg
cltd
sub
mov
dec
sbb
xchg
dec
xor
sub
sub
mov
inc
or
sbb
cmp
jns
xchg
xor
push
pop
xchg
ret
and
daa
outsb
add
data16
sbb
xchg
mov
add
movsl
aas
andb
xchg
testl
testb
adc
aas
or
sub
cmpl
leave
incb
test
movl
xchg
add
mov
jne
mov
cmovne
mov
add
mov
leave
cmp
daa
jmp
shll
cmp
adc
xchg
adc
jge
xor
cmp
mov
jl
mov
and
inc
adc
lahf
ret
mov
inc
inc
sub
and
aaa
cmc
xchg
imul
cwtl
nop
add
rorb
and
rclb
loop
dec
mov
sub
hlt
jge
push
mov
jl
jne
sbb
addr16
rorb
xor
push
pusha
pop
push
sahf
xorl
cltd
addl
mov
inc
aaa
fildll
push
cld
cmc
pop
jp
jae
dec
cmp
jbe
add
or
or
test
stos
jno
push
movsl
inc
jno
pop
sub
es
imul
mov
mov
sub
sub
inc
push
daa
xchg
mov
pop
and
sbb
add
dec
fs
add
rclb
movsb
bound
out
mov
jae
emms
movsb
dec
sbb
mov
adc
xor
es
or
mov
stc
mov
shrb
gs
push
stos
adcl
add
sbb
ret
les
jmp
jl
xor
movsl
dec
cmpsl
into
push
xchg
test
or
sbb
pop
lds
pop
add
inc
pop
outsb
push
sbb
push
push
push
insl
fimull
lods
loope
ret
aam
daa
int
jmp
pop
inc
nop
cwtl
rcrb
xchg
cli
mov
adc
pop
jne
loope
sbb
jo
sarb
and
inc
lahf
jge
sub
outsl
pop
popf
cmp
mov
mov
test
mov
icebp
adc
cmpb
push
jbe
in
lahf
lods
lcall
or
cld
fmuls
jl
lock
or
xor
std
push
jae
add
push
push
daa
shld
sub
mov
add
add
ret
sub
cld
adc
jbe
sub
ret
or
inc
push
xor
dec
movsl
inc
dec
adc
cmp
daa
or
sub
repnz
cltd
pop
test
inc
pop
mov
xor
je
dec
fisubrl
inc
jne
inc
lcall
mov
leave
and
pop
inc
hlt
xchg
insb
shlb
mov
popa
in
inc
mov
and
inc
mov
mov
jno
push
es
iret
jge
sub
dec
ret
xchg
lods
fwait
mov
inc
jno
incl
mov
sub
jb
inc
mov
inc
sti
stos
pop
or
sbb
fldl
or
pop
pop
jne
iret
lods
cltd
dec
ret
jg
pop
ja
pop
jecxz
xchg
jo
and
cltd
loop
pop
mov
movl
push
or
push
lahf
lea
push
dec
data16
leave
data16
shrl
adc
pop
or
mov
mov
btr
fildl
mov
mov
mull
mov
mov
cmc
add
or
mov
mov
or
popa
mov
les
inc
inc
iret
pop
jne
lea
and
push
inc
insb
mov
lahf
scas
jae
imul
cmp
xchg
rorl
mov
jne
jmp
push
nop
idivb
dec
pop
pushf
shlb
sub
sbb
arpl
add
rcll
inc
loopne
adc
stc
push
arpl
ja
ljmp
daa
lock
mov
lcall
push
xor
mov
inc
pop
push
sbb
mov
fstpl
int3
cwtl
mov
adc
dec
xorl
push
push
enter
testl
nop
jg
xchg
mov
mov
jle
push
sbb
mov
lds
fcompl
daa
sbb
and
iret
push
jns
aam
test
and
xor
jb
fcomp
pushf
push
jns
sti
mov
mov
rol
mov
sbb
ret
inc
dec
sahf
add
mov
sbb
dec
leave
jge
enter
push
and
or
fcmovne
fsubs
cmpl
sbb
pop
jb
aas
ret
rolb
shl
sbb
mov
clc
sbb
add
cld
push
lods
nop
imul
sbb
push
mov
mov
or
mov
inc
sbbb
jle
mov
mov
icebp
adcb
mov
fs
add
pop
cwtl
pop
scas
insl
add
fs
scas
insl
push
pusha
outsl
lcall
jnp
xchg
push
punpckldq
in
scas
dec
js
and
cmp
pop
xchg
adc
leave
push
cmp
add
xor
fmuls
lods
jg
int
testb
je
cs
cmpl
adc
or
testb
xlat
adc
daa
xchg
fidivl
push
js
loopew
hlt
cmp
or
jge
ss
movsb
push
push
ja
rcrb
in
dec
mov
pop
push
push
pop
push
pop
adc
sub
dec
add
jnp
out
clc
mov
js
repnz
xor
push
enter
pop
adc
shlb
dec
sti
sbb
dec
add
shrb
popa
inc
xchg
mov
imul
inc
sub
add
push
dec
hlt
inc
mov
push
jae
cmpb
shll
outsb
rorl
inc
pushl
pushf
orb
fiadds
inc
xor
in
cmp
or
fnsave
iret
and
add
sub
jg
jnp
movsb
or
sahf
adc
or
adc
or
aaa
mov
movb
adc
xchg
in
scas
cld
test
daa
cld
xor
push
ljmp
xchg
cmp
js
pop
pop
mov
mov
ret
add
pop
lahf
sbb
lods
pop
add
sub
add
into
insb
mov
pop
mov
adc
push
jmp
adc
sbb
xor
mov
xor
add
mov
sbb
jbe
mov
sub
fisubs
xor
mov
push
out
or
clc
fsubrs
sub
loopne
test
gs
jo
dec
jge
lods
inc
js
xchg
lock
inc
in
call
dec
ret
xchg
xchg
test
add
loopne
bound
arpl
mov
push
or
rorl
mov
sbb
adc
adc
pop
and
and
flds
rcl
and
jno
das
push
in
aam
inc
cld
imul
add
ja
jle
popa
sarb
xchg
cmp
ret
in
xchg
add
inc
data16
fildl
insb
addr16
call
adc
js
stc
out
call
inc
or
inc
pusha
loope
inc
loop
aaa
inc
add
out
mov
std
js
js
rorl
add
add
xchg
fiadds
pop
or
lea
inc
subb
je
aas
adc
mov
or
or
mov
mov
inc
sbb
xorl
incl
js
push
std
pop
sub
inc
adc
pop
adc
sbb
inc
jbe
jae
into
cs
inc
pop
jno
insb
aad
sub
in
jns
lods
cmp
mov
popa
adc
cmp
xchg
sbbl
inc
cmpsb
sbb
sbb
xchg
pop
adc
jae
dec
psubb
sub
jnp
ja
je
push
shl
mov
add
inc
clc
shlb
cmp
ret
mov
lea
mov
mov
adc
or
js
das
decb
xchg
das
add
scas
repnz
and
fists
ds
cmp
incl
xor
xchg
add
mov
dec
sbb
jnp
mov
jo
pop
cwtl
shr
scas
cld
or
pop
push
lret
pop
lock
inc
fcomip
mov
sbb
rcrl
cmp
cmp
in
cmp
or
roll
mov
add
dec
dec
fs
inc
and
or
pop
jb
dec
or
dec
out
xor
jb
xor
int
enter
mov
stos
jmp
adc
cltd
sub
stos
pop
xor
shlb
js
push
jb
subl
and
popa
mov
rorb
aam
cmp
push
enter
inc
mov
pop
xchg
xor
jb
push
pop
test
cmpsb
cmp
imul
sahf
lcall
xor
xlat
jg
mov
cmp
es
jns,pt
sub
jge
and
pusha
pusha
mov
hlt
cltd
out
ret
or
jmp
pusha
xor
xor
cmp
adc
ret
addr16
rolb
rclb
push
sbb
jo
inc
shlb
rorb
or
in
dec
imul
mov
dec
inc
push
call
lcall
shlb
ror
outsb
mov
cld
push
imul
mov
fldenv
dec
jae
dec
mov
sbb
pop
rcrl
sbbb
fldenv
sarl
fidivs
push
insl
xor
push
push
iret
mov
dec
xor
fidivl
into
inc
mov
cmp
xchg
fcmovnb
movhps
and
fcmovnb
fidivl
jbe
pop
cmpsb
iret
pushf
pop
sub
mov
cwtl
pop
and
ja
fs
fcompp
and
adc
push
pop
xchg
adc
loopne
mov
push
mov
insl
or
or
xchg
push
ror
ja
in
in
cld
rclb
clc
iret
cwtl
ret
fidivl
pop
lock
imul
sbb
mov
lret
mov
pop
fs
aam
enter
rcr
sub
sbb
fadd
lcall
mov
mov
ret
cmpsl
mov
test
xor
lods
aam
or
push
test
out
movsb
fnstcw
adc
jl
xchg
cmp
or
mov
jne
cwtl
call
hlt
sbb
jle
mov
je
cmp
repnz
mov
aaa
sub
add
dec
or
inc
or
mov
push
xchg
lods
insl
xchg
mov
add
sub
adc
in
sbbb
mov
dec
xor
and
xor
and
pushf
cwtl
mov
dec
push
mov
test
enter
cmpsl
push
subl
jae
insb
aad
js
fs
sub
out
lea
fimull
out
adc
mov
sbb
test
or
and
movsb
popf
data16
inc
inc
sbb
mull
mov
mov
dec
pop
jmp
data16
ss
stos
or
out
fisubrl
pop
ret
sbb
or
push
pop
inc
cltd
iret
xchg
aaa
cltd
mov
fcmove
or
sbb
xor
loopne
lret
xchg
sbb
mov
or
movsb
xor
fucompp
or
loopne
ret
xchg
sarb
fisttpl
push
cmp
cmp
add
or
jns
jb
fsubl
scas
jo
add
add
sub
add
out
mov
clc
jecxz
das
pop
es
adc
call
adc
sbb
je
mov
add
loop
std
pop
ret
psraw
cmp
test
rolb
sbbb
mov
cwtl
cwtl
mov
imul
fists
sub
hlt
movsl
call
sti
adc
push
leave
pop
mov
add
subb
fisubrs
xchg
xor
cvttps2pi
fs
inc
sub
cmp
jg
enter
ret
mov
andl
outsl
mov
cmp
jne
jmp
loopne
xchg
insb
add
or
xor
and
fwait
pop
adc
mov
hlt
lods
sub
pop
jb
and
pop
repnz
mov
and
leave
and
leave
and
int3
and
rorb
pop
jb
aam
fdivrs
pop
repnz
fmull
pop
loopne
jo
adc
orb
leave
sti
lcall
fdivrl
sub
lock
mov
dec
sahf
iret
hlt
frstor
clc
cmp
dec
sahf
xchg
sar
fiadds
sub
lea
and
push
adc
inc
xchg
mov
js
dec
add
outsl
je
adc
inc
fs
jne
fxch
inc
jbe
psraw
mul
neg
dec
adc
outsl
fs
outsb
dec
jb
negl
jb
inc
insl
jo
inc
jb
insl
push
je
mov
and
push
cmp
and
sub
aas
inc
jae
and
dec
add
mov
pushf
or
aaa
outsb
iret
loop
inc
repnz
xchg
call
cmpb
cmp
loopne
cmpsl
adc
and
fidivl
adc
xorb
jns,pt
dec
push
dec
test
inc
imul
sbb
push
pop
stc
add
test
or
int
jg
push
mov
add
pop
xor
dec
call
mov
push
fdivl
mov
je
test
jo
push
dec
dec
inc
add
nop
mulb
pop
xor
popa
inc
ret
or
jae
adc
push
adc
mov
push
sbbb
push
popa
dec
hlt
jb
pop
enter
xchg
ret
sbb
and
dec
dec
negb
hlt
adc
dec
rcll
movsb
jecxz
push
mov
shll
xchg
mov
jle
mov
lret
mov
jg
push
mov
or
in
mov
pop
push
in
pop
in
adc
nop
inc
jb
adcb
xlat
inc
and
pop
pop
sub
or
xor
sbb
pop
jbe
imul
addl
pop
mov
inc
je
popa
xchg
mov
xor
insl
inc
add
xchg
mov
inc
and
inc
jnp
leave
xor
aam
push
push
and
out
aas
sub
xor
xor
pushf
pushf
mov
cmp
fisubl
adc
lds
push
aaa
xchg
sub
xchg
fs
and
xchg
cmp
nop
sbb
sbb
xchg
int3
jl
xor
add
add
sub
insb
cmpl
and
insl
jo
movl
cmc
pop
addr16
or
dec
aad
nop
xor
iret
jmp
dec
add
sub
pop
mov
movl
jg
lahf
out
and
sbb
into
sbb
lcall
cld
in
mov
jmp
push
and
pusha
icebp
in
add
jbe
jno
pop
lret
mov
lcall
or
xor
in
push
subl
in
mov
inc
add
and
pusha
mov
add
es
nop
fucomip
mov
in
jb
in
ljmp
dec
les
daa
nop
or
nop
pop
jmp
aam
push
enter
sub
push
lds
pop
mov
cmc
ss
and
int
or
add
fiadds
xor
fidivrl
jge
inc
adc
jns
or
aas
dec
je
xchg
inc
nop
mov
out
mov
push
xchg
daa
loopne
cmpb
std
add
js
and
js
leave
mov
sbb
push
xor
xchg
sub
clc
imul
lret
clc
pop
popf
or
jns
hlt
xlat
in
hlt
mov
and
sbb
push
imul
dec
dec
call
sub
xor
call
pop
mov
jmp
xchg
loopne
cmp
fs
loopne
inc
xor
mov
int3
jae
loope
repnz
int3
or
jmp
in
nop
les
fcomp
enter
pop
add
aam
rorb
cmp
stc
repnz
sbb
mov
inc
fimuls
scas
xor
lods
out
jecxz
and
sbb
or
fmuls
jmp
ljmp
or
sbb
sub
or
add
test
outsb
mov
push
and
loop
testb
jno
adc
xor
leave
test
insb
xchg
lock
xlat
daa
in
sbb
adc
js
sbb
inc
dec
and
sbb
adc
xchg
mov
mov
pop
add
add
xchg
hlt
jg
mov
add
jmp
xchg
xorl
ret
setg
dec
inc
sbb
jge
idivl
repz
outsl
divb
add
add
lahf
xchg
push
xor
jmp
jmp
pop
int3
add
sahf
mov
out
pop
pop
in
pop
mov
mov
cld
test
fs
or
and
add
pop
jae
fildl
sub
out
btr
dec
add
or
test
sub
negb
pop
les
adc
out
shlb
out
dec
xchg
clc
jmp
and
pop
sti
or
mov
lock
or
jl
inc
xor
lea
insl
scas
adc
or
lea
push
jno
jnp
das
lock
lea
ja
xor
push
add
pop
in
push
mov
inc
enter
dec
xchg
inc
lea
fnstcw
mov
push
dec
jnp
sub
sbb
jmp
sub
in
test
outsb
push
pop
nop
lods
cmp
push
insl
pop
adc
ss
jne
pop
push
ficoml
add
popa
mov
ds
sti
xchg
xor
push
aas
jmp
push
adc
xor
xor
adc
shl
orb
add
test
adc
sbb
xor
div
and
xchg
sahf
pop
cli
mov
pop
cmp
les
jb
add
adc
mov
mov
aad
mov
test
xor
repnz
push
je
ret
aas
icebp
cld
cmp
and
lea
inc
cs
inc
aaa
add
enter
or
mov
pop
ss
sbb
in
fs
inc
push
loopne
in
and
xchg
sub
nop
loopne
popf
inc
mov
or
je
popl
mov
cld
xorb
and
cmc
xchg
icebp
int3
dec
pop
enter
in
cmp
in
ret
outsb
sub
pushf
sub
inc
call
das
push
data16
jmp
push
fistpl
arpl
popl
or
add
adc
cmp
push
adc
jns
adc
callw
add
or
or
sbb
push
dec
dec
jmp
outsl
and
mov
dec
xor
jecxz
xor
ret
hlt
sub
pop
jmp
sbb
or
inc
pop
sti
jecxz
push
sbb
shrl
or
cld
adc
pop
pop
out
lock
je
xchg
xchg
adcl
jne
imul
adc
mov
fiadds
or
or
int3
xor
outsl
enter
cmp
aad
int
push
push
mov
xchg
and
push
pop
test
call
adc
mov
push
mov
push
cmp
dec
sub
mov
cmp
or
addr16
dec
sbb
testb
xor
push
addr16
mov
ss
push
xchg
push
add
daa
stos
and
int3
fucomp
or
clc
movswl
mov
je
mov
mov
int
mov
inc
ds
rolb
mov
fdivs
xchg
sbb
cmp
xor
pop
ja
cmp
data16
ficompl
rolb
sbb
mov
movsbl
jmp
in
fs
mov
cmp
add
dec
fsubl
cmc
lcall
mov
aaa
and
mov
insl
jl
sub
jmp
in
inc
scas
push
std
add
dec
sub
sub
xor
pop
leave
notl
inc
add
push
arpl
jmp
jae
andb
loope
int3
dec
jmp
call
sbb
popf
rolb
rclb
lock
into
sbbb
jbe
cwtl
jmp
iret
mov
rcr
lock
sbb
sti
push
fimull
sbb
leave
mov
inc
mov
movsb
pop
pop
add
jmp
clc
dec
out
cmp
orl
mov
les
in
sbb
xor
in
and
push
enter
inc
mov
stc
sub
mov
insl
adc
sub
sub
stc
push
shlb
jae
sub
inc
mov
jmp
addr16
xchg
into
dec
cmp
lahf
jae
pop
push
push
cmp
mov
push
dec
xlat
add
insb
add
lea
and
clc
notl
push
mov
xlat
mov
rcr
int
sbb
ss
sbb
or
stc
xor
pop
xchg
mov
or
fsubs
or
rcrl
dec
notb
mov
push
mov
jae
lcall
xor
dec
shll
push
fimull
repnz
push
nop
paddb
xor
cmpsb
imul
or
cmp
leave
xor
movsl
adc
dec
or
dec
je
xlat
pop
out
sbb
mov
xchg
sub
loopne
hlt
push
pop
dec
fistl
mov
jns
in
loopne
adc
inc
ss
and
dec
es
and
mov
mov
dec
push
mov
and
je
xor
in
inc
adc
jp
add
and
jb
popa
push
jmp
or
arpl
andb
adc
in
roll
out
and
add
dec
jmp
cmp
mov
stc
mov
jmp
iret
mov
lret
push
fwait
clc
test
sub
mov
push
inc
jecxz
je,pt
in
psubq
std
jg
sub
xor
push
push
clc
fwait
hlt
jo
movsl
lock
push
sbb
mov
rcll
inc
push
or
repz
popf
movb
sbb
or
clc
pop
call
fldenv
lock
ljmp
or
mov
push
adc
aam
sub
xor
xchg
cmp
add
inc
std
nop
jmp
nop
push
pop
mov
test
std
xchg
das
aaa
ret
insb
push
dec
fcompl
adc
and
outsl
cli
push
and
outsb
xor
push
sbb
xchg
sbb
push
xor
mov
cs
add
fnstenv
imul
imul
dec
imul
mov
hlt
dec
sbb
cmp
pop
nop
cmpsb
xor
push
test
jns
lahf
mov
dec
add
imul
cmc
or
in
fiaddl
sub
mov
incl
dec
flds
push
sar
cmp
pop
fs
push
push
scas
and
imul
xchg
adc
cmpsb
jl
dec
insl
test
sbb
inc
shll
or
aad
or
mov
mov
sar
pop
dec
je
jmp
outsb
test
sub
test
push
jno
inc
enter
add
leave
xlat
xor
xor
pop
add
lods
imul
pop
and
dec
imul
inc
pop
push
les
xor
push
arpl
cmpsb
addb
mov
mov
add
fldl
jo
dec
fildll
pop
shrl
xchg
fwait
test
inc
rclb
mov
add
ret
sbb
movsb
lods
adc
push
jbe
arpl
mov
add
in
add
pushf
jae
aaa
mov
push
pop
xor
stos
push
and
out
inc
shll
and
out
outsl
push
dec
jmp
sbb
out
addr16
mov
jecxz
jb
mov
or
add
xchg
sub
adc
filds
fidivl
arpl
pop
push
stos
adc
inc
scas
ret
and
add
das
cli
outsb
out
enter
and
mov
fs
test
je
fs
push
adc
and
and
adcl
sbb
dec
push
scas
and
push
xchg
daa
loope
cld
mov
sbb
in
add
dec
inc
add
ret
push
sub
push
push
inc
shll
or
or
add
sbb
adc
js
enter
mov
push
fs
cmp
pusha
add
xchg
and
aas
add
addb
adc
out
cmpsb
pop
xor
add
add
stc
add
xor
add
clc
nop
andl
or
cltd
gs
mov
and
sbbb
adc
push
adc
adc
mov
adc
nop
and
push
lcall
fsub
out
and
shrl
push
cmp
adc
mov
pusha
push
sahf
sbb
out
mov
inc
push
and
mov
dec
sub
add
jp
and
pop
fcoms
sbb
aam
mov
js
pop
jl
cmp
out
add
push
mov
cmp
push
adc
lret
icebp
sbb
aaa
cwtl
jne
stc
and
aaa
sbb
sub
das
mov
xorl
mov
inc
in
repnz
dec
dec
push
add
fidivs
cwtl
dec
hlt
jmp
clc
in
sbb
dec
ds
jg
test
mov
test
mov
ret
inc
bnd
dec
call
adc
fnsave
mov
push
xor
adc
xor
pusha
adc
or
xchg
xchg
data16
and
into
les
sbb
call
jb
lds
call
and
or
dec
imul
insl
shrl
mov
sub
add
inc
sbb
and
cmp
nop
xchg
shll
mov
cmp
xor
fildl
or
inc
imul
dec
shll
mov
das
mov
imul
xor
cmp
stc
lock
daa
add
push
cmp
ss
les
sub
mov
and
adc
or
in
mov
pop
leave
pop
and
mov
and
push
or
loopne
fcoms
mov
fs
adc
and
and
xchg
test
incl
or
or
push
pop
imul
loop
cmc
push
push
pop
shll
inc
push
pusha
push
lds
add
mov
fs
adc
sbb
push
imul
pop
inc
adc
outsl
sub
mov
mov
bound
push
adc
add
inc
out
sub
das
jmp
flds
stos
and
cmp
and
lds
fildll
or
xorl
and
sahf
add
xchg
add
jo
cmp
pop
gs
pop
imulb
inc
nop
mov
xchg
push
and
inc
pop
jle
add
or
stos
mov
adc
mov
sbb
aam
or
fdivrs
push
bound
leave
add
rolb
push
dec
and
xor
out
out
sub
pop
push
dec
push
or
cmp
dec
nop
imull
xchg
and
or
xor
or
jns
add
fcoms
or
jp
mov
xor
shll
dec
push
push
rcrl
adc
xor
mov
adc
daa
enter
add
dec
lock
pushf
rclb
fimuls
cmp
pop
jnp
xchg
sbb
pop
sbb
inc
push
xor
fs
call
adc
add
imul
in
ljmp
cmp
nop
popa
incl
sub
add
add
jne,pn
xchg
lahf
nop
negb
pop
aad
or
push
sub
pop
push
cs
lock
arpl
sub
inc
adc
lods
imul
sarb
pop
pop
mov
dec
repz
insl
jns
adc
sahf
subb
push
sbb
pusha
dec
fisubrl
mov
in
adc
mov
jne
adcb
cltd
and
sbb
xchg
jno
pop
inc
push
jne
mov
lds
aas
jmp
cmp
jne
lcall
sarb
pusha
fsubrl
insb
notb
int3
clc
push
jns
fadd
movlps
cwtl
xchg
lods
clc
xorl
add
jmp
fistpll
call
insl
call
wbinvd
mov
xchg
sub
sub
and
add
pusha
or
fwait
sarl
or
mov
mov
lock
repnz
add
sub
fs
sbbb
pop
add
iret
sub
sbbl
pop
adc
cmpsb
imul
pop
lcall
les
imul
add
sbb
lods
stc
mov
add
cmpsb
fistps
sub
add
xchg
sbb
jno
inc
or
imul
dec
adc
adc
inc
movswl
xor
sub
pop
push
mov
xor
add
jbe
xor
insb
adc
inc
dec
in
ficoml
sbb
and
push
adc
or
and
pop
sub
adc
enter
je
adc
repz
add
add
pusha
dec
roll
imul
repnz
imul
add
cmpsl
fisttpl
bound
fldcw
adc
push
sbb
lods
imul
sbb
sub
iret
test
imul
pop
insl
adc
add
jmp
inc
adc
sub
jmp
pop
jmp
add
aam
push
jo
dec
adc
fmull
or
lock
roll
daa
daa
jmp
imul
jb
rclb
rcrb
lcall
push
xchg
dec
roll
fcomps
xor
dec
pop
outsb
stos
ret
or
arpl
dec
push
add
sbb
mov
sbb
test
imul
add
or
add
jns
mov
movsb
xchg
mov
fildll
dec
leave
mov
xor
pushf
popa
lret
and
jb
test
loopne
enter
aad
mov
push
pop
push
mov
test
shll
or
aad
or
rorl
loopne
or
leave
mov
cld
cmp
pop
pop
sbb
xor
test
or
jecxz
movw
mov
ss
lds
push
inc
inc
push
cmp
adc
push
lock
dec
fwait
sbb
mov
dec
filds
pop
jb
cmp
int
xchg
xchg
adcl
jbe
or
cmpsb
sbb
loop
movsb
xor
scas
mov
lcall
imul
fistps
push
movsl
or
add
pop
fisttpl
sub
sbb
cwtl
mov
inc
sbb
rclb
xchg
lahf
sub
lahf
push
mov
xor
sbbb
lahf
sub
adc
enter
xor
daa
and
fcoms
pop
sbb
pop
push
dec
push
movsb
imul
rolb
mov
cmp
daa
test
lcall
or
and
and
cmp
push
adc
outsl
cmp
outsl
sub
sub
adc
dec
inc
or
jns
sbb
add
xchg
jb
adc
ja
pop
and
add
push
flds
inc
cs
pop
add
clc
xchg
jl
leave
aam
push
flds
pop
sub
push
jo
mov
fildll
leave
inc
xor
push
push
jb
orb
push
xchg
pop
enter
sub
dec
and
and
jge
inc
dec
push
and
pop
nop
pop
ror
mov
and
imul
imul
push
pusha
push
cwtl
aas
pop
daa
adc
ss
into
ljmp
in
iret
and
push
adc
pop
pop
inc
iret
fmuls
push
xor
and
in
rcr
nop
pop
out
adc
push
je
push
enter
xor
add
insl
push
and
aas
mov
pop
adc
pop
xor
pop
adc
ss
into
pop
faddl
in
inc
pushf
jle
lcall
sub
add
imul
jno
fisubrl
sbb
daa
mov
stos
enter
lods
loop
add
fcmovne
add
mov
and
mov
cmp
push
or
mov
xchg
imul
mov
lods
inc
mov
fidivrl
inc
xor
loopne
mov
sub
mov
xchg
or
dec
adc
fmuls
xlat
outsl
aad
pop
xchg
rol
dec
or
add
mov
push
xchg
fadds
mov
decb
mov
push
and
xchg
or
es
popf
cmp
jmp
inc
lock
inc
call
add
add
push
arpl
jne
xchg
xor
jg
add
mov
sub
add
pop
sahf
push
dec
inc
dec
and
les
mov
dec
xchg
xchg
mov
jo
into
and
mov
ret
cmpsl
xchg
or
xor
cmp
add
push
pop
sub
cwtl
cmp
adc
fs
imul
xchg
or
sbb
inc
lock
or
pop
in
xor
test
nop
inc
sub
rcrb
sbb
lods
mov
ds
mov
mov
pusha
inc
mov
adc
cmp
jb
cltd
mov
sti
punpcklwd
pop
sti
sub
lcall
daa
jge
rcr
xor
rcrl
and
pop
jl
lcall
mov
fstps
pop
pop
add
sbb
andb
jo
ret
xor
les
dec
ret
add
ficomps
jge
xor
xor
jns
test
push
xchg
insb
inc
hlt
push
sbb
mov
inc
pushl
add
push
add
cmp
pop
or
jns
call
dec
into
push
or
sbb
fsubl
nop
xlat
push
mov
or
fcom
pop
enter
aaa
aam
mov
dec
pop
mov
cmp
mov
jle
mov
pop
enter
enter
or
push
cli
int
pop
aad
sbb
les
inc
or
pusha
aam
shrb
rolb
add
in
enter
pop
sub
sub
xor
sbbb
and
nop
out
inc
pop
xor
push
andl
cmpsl
les
nop
popa
dec
test
ss
orl
mov
inc
fnsave
dec
out
rcl
push
xor
lods
lods
cmp
sbb
test
xor
xor
movsb
cs
mov
mov
pop
jb
mov
cwtl
mov
sbb
xchg
or
xor
xchg
jmp
xorl
nop
dec
mov
jmp
popf
mov
pop
gs
stos
es
adc
mov
sbb
cmp
sbb
std
and
movsb
call
orb
xor
mov
or
mov
in
jb
mov
out
jmp
in
sub
jo
mov
nop
push
test
dec
iret
sub
scas
sub
leave
or
lods
sub
inc
cs
or
pop
loopne
xor
rcll
outsl
aad
pop
in
or
and
aas
jne
ret
out
out
mov
adc
inc
or
arpl
dec
nop
dec
push
xchg
add
es
push
xor
xor
das
push
dec
shll
movsl
ret
mov
aam
stos
dec
sarl
push
outsl
or
add
lea
lcall
insl
push
lcall
ss
movsl
cwtl
adc
or
es
inc
push
jbe
push
cmp
cmp
add
fidivrl
cmp
sbb
loopne
or
dec
aaa
loopne
insl
mov
fadds
aaa
aam
ret
aaa
aam
aaa
or
adcb
lods
lods
jno
xchg
inc
or
xor
sbb
repnz
sub
enter
or
les
cmp
lcall
cmpsb
imul
xchg
xor
fnsave
add
ds
pop
shll
lcall
or
xor
cmpsb
ret
loopne
adc
xchg
aaa
pusha
add
fs
mov
ja
es
loope
mov
jne
adc
es
cmp
movsb
pusha
pusha
xchg
test
jb
jno
test
movsb
aam
pusha
ret
movsb
mov
in
mov
sbb
test
cmp
cwtl
jno
dec
or
cwtl
aaa
sbb
mov
ss
popf
nop
in
enter
aaa
sub
insl
mov
add
xchg
sarb
cmp
xchg
push
test
pop
lcall
loope
in
loopne
test
test
xor
int
inc
fsubl
or
repnz
or
gs
add
mov
cmpsl
icebp
dec
pop
cmp
adc
mov
pop
or
bound
mov
aas
or
push
ss
add
ret
jmp
insl
dec
call
adcl
cmp
aam
jno
fistpl
aas
clc
push
es
xor
sbb
push
or
ja
add
cli
out
dec
lret
xchg
mov
repnz
push
xchg
push
add
pop
data16
data16
inc
outsb
inc
xchg
or
and
addb
cltd
xchg
subl
add
inc
inc
out
jp
testl
test
ret
mov
dec
add
pop
jmp
movw
ja
outsl
int
xchg
rorb
shrb
push
insb
repnz
ds
adc
mov
cltd
bound
fldl
sub
add
scas
not
inc
aas
adc
and
jl
insl
mov
lahf
push
dec
bound
notb
dec
mov
insl
xchg
push
and
dec
push
pop
fisubs
sbb
or
push
inc
dec
imul
push
xlat
xor
lock
fwait
into
daa
pop
xchg
sbbl
scas
pop
pop
dec
add
adc
rorb
adc
aam
sub
cmp
xchg
insl
dec
xor
adc
pushaw
rclb
inc
daa
divl
dec
and
push
push
aas
cld
push
adc
fildll
imul
push
cmpsl
adcb
push
dec
jb
cmp
dec
test
jecxz
jb
add
cmp
pop
and
test
xlat
push
cmp
pop
cmpl
push
cmp
cmp
mov
sub
mov
jge
mov
gs
cli
jo,pn
inc
das
push
mov
incb
mov
push
xchg
adc
test
sub
testb
je
xor
push
mov
cmpl
ja
jmp
mov
push
imul
and
adcb
jmp
mov
outsb
pop
lock
dec
jmp
sub
sbb
cmp
jmp
mov
cmp
dec
jmp
loopne
inc
push
ffreep
and
aam
ss
and
or
iret
adc
inc
ljmp
leave
rolb
inc
insl
adcb
jo
jns
dec
jne
or
mov
and
dec
fistps
push
aas
insb
xchg
sbb
add
stos
xchg
add
mov
add
insb
popa
lods
mov
insb
lods
pusha
cmp
add
popa
lods
pusha
cwtl
psrlq
push
pop
imul
shrl
outsb
imul
inc
arpl
ja
pop
xchg
aas
and
inc
iret
push
xorb
mov
push
mov
xor
aaa
loopne
or
aaa
ss
sbb
mov
add
cmp
adc
out
int3
fbstp
pop
ret
cmp
scas
xlat
scas
movsb
fs
testl
inc
sti
pop
sub
dec
xchg
mov
add
fsubs
xor
fstpl
fcoml
xchg
cld
clc
or
imul
sbb
loopne
xchg
push
fwait
adc
sub
cmpsb
into
inc
jle
mov
adc
test
ss
and
or
and
cs
pop
and
rcr
std
mov
add
lahf
repnz
sbb
lret
outsb
jns
jl
sbb
and
loop
fsubs
push
gs
dec
ret
jmp
lea
pop
or
mov
je
jb
xor
pop
pop
into
or
popf
popa
or
xchg
pusha
and
and
add
daa
cld
mov
sbb
inc
and
es
add
test
arpl
pop
ds
xor
or
and
sub
shrl
pop
into
pushf
faddl
fadds
mov
pusha
jmp
xchg
inc
daa
daa
or
mov
aas
and
popa
xchg
mov
cmp
lock
mov
setne
push
lock
in
mov
or
and
fs
push
or
outsl
dec
decb
adc
cmpsl
cmp
and
xchg
inc
sar
inc
adc
cmpsb
fsubl
jne
hlt
and
jle
imul
xor
or
mov
addr16
jne
arpl
mov
push
mov
outsl
or
fsubl
add
cmp
js
mov
dec
je
or
jecxz
cmpsl
int3
xor
insl
pusha
xchg
or
cs
dec
xor
pop
push
sbbb
gs
push
ret
push
popa
popf
or
setb
inc
test
and
cwtl
inc
aas
mov
fisubrl
les
and
jae
mov
mov
cmp
add
xchg
jle
sub
aaa
repz
sub
adc
sbb
push
jl
add
cli
bound
push
addr16
sahf
clc
lahf
out
or
push
out
or
je
or
jno
inc
or
idiv
int
fwait
arpl
or
inc
loopne
and
dec
and
adc
sbb
sbb
pushf
je
nop
leave
mov
add
dec
sbb
inc
loopne
lret
inc
jle
pushl
dec
jns
push
lahf
add
gs
pushf
icebp
lea
pop
xlat
faddl
in
dec
movntq
mov
out
xor
cmp
out
push
adc
inc
xlat
xor
jbe
lods
sbb
cmp
jo
divb
cltd
sbb
inc
faddl
scas
add
out
aaa
cmp
add
fldl
stos
sti
xchg
inc
mov
aaa
testl
mov
sbb
jb
or
rol
add
inc
push
lea
mov
enter
fwait
inc
or
and
gs
push
das
js
cltd
dec
sbb
push
lea
xor
mov
adc
push
jle
stc
leave
jge
ljmp
cmc
sahf
mull
ja
ljmp
add
inc
cmp
jle
dec
fcoms
nop
pop
sbb
xchg
out
lret
test
leave
in
xchg
imul
loop
dec
sbb
mov
dec
add
icebp
push
imul
cmpsb
leave
add
pop
ret
and
inc
push
xor
mov
sbb
add
call
adc
mov
loop
sub
cmp
je
adc
dec
mov
sbb
pop
jne
mov
cmpsb
scas
jmp
ja
xor
cmpsl
and
sarb
or
xor
cld
adc
push
ret
push
add
call
movsl
pop
mov
outsl
loop
cmc
test
jl
lret
mov
cmpl
je
mov
dec
jne
test
es
add
std
jl
mov
xorl
decl
leave
mov
test
orl
out
push
dec
pop
pushl
jecxz
sbb
lahf
lock
xor
or
jge
sbb
sub
inc
xchg
mov
test
sbbl
fdivrs
mov
mov
adc
push
cmp
lds
pop
or
or
inc
mov
mov
sbb
pcmpeqb
mov
cmp
or
leave
sahf
stos
add
dec
push
mov
ss
dec
cld
aas
push
dec
shll
in
dec
cs
arpl
lods
and
repnz
sub
lods
fildl
dec
clc
pop
sub
jne
mov
inc
pop
xor
call
std
pop
jle
mov
and
and
or
inc
dec
pop
hlt
inc
mov
fsts
cwtl
adc
inc
inc
push
mov
nop
jg
sbb
xlat
mov
add
adcl
mov
repnz
pop
lea
push
outsl
lock
mov
enter
or
dec
int3
pop
inc
jg
jg
enter
sbb
push
or
xchg
inc
sbb
stos
pop
inc
cwtl
stos
mov
lret
idivl
push
push
adc
lea
jg
push
call
shl
into
popf
jecxz
push
add
mov
inc
dec
cmpsl
sub
incl
push
mov
push
aas
or
out
mov
insl
movswl
adc
scas
shll
cld
flds
and
mov
fstp
sub
fdivs
push
ss
cltd
scas
sbb
int3
aad
lock
movsl
in
and
dec
mov
icebp
insl
jg
xor
adc
sbb
enter
dec
inc
cmp
sbb
mov
inc
xor
movsb
daa
jmp
inc
and
mov
lret
sub
adc
imul
sbb
ljmp
jl
sbb
inc
push
dec
dec
add
and
inc
ror
and
addr16
xor
fisttpl
inc
dec
leave
add
data16
and
push
xor
in
lahf
add
mov
xorl
cltd
mov
fnsave
enter
xor
movsb
xor
hlt
jg
inc
sbb
jmp
jae
arpl
ret
pop
cmp
rolb
mov
fistl
push
cmp
sub
test
or
dec
in
inc
and
or
mov
in
or
cwtl
in
in
fmuls
dec
and
test
sub
push
sub
cmpsl
scas
imul
pop
dec
fmull
shll
push
push
es
inc
push
popa
popf
or
xlat
fdivrl
dec
inc
sahf
dec
fsub
xchg
icebp
mov
ja
loopne
and
sbb
jg
sbb
inc
and
cmp
bound
push
cmpsl
push
movsb
sbb
xor
out
jmp
pop
arpl
in
adc
data16
jle
popa
add
lock
jmp
xor
xor
jbe
add
push
stos
sbb
daa
jmp
xchg
dec
xchg
daa
add
call
cwtl
sub
xor
adc
dec
inc
cmpsb
pop
les
jmp
into
popa
mov
aam
sbb
push
test
add
xor
add
mov
sbb
mov
out
sub
or
pop
dec
rol
inc
out
roll
sub
inc
push
cltd
dec
cmp
jl
sbb
adc
and
jne
add
fcoms
test
out
and
xor
pop
adc
adc
or
daa
and
inc
imul
and
or
std
mov
lret
cli
cmp
cmp
data16
add
xchg
sbb
out
pop
inc
or
push
push
rol
jnp
sbb
push
rcrl
mov
push
add
jge
mov
subb
pop
rcrb
push
push
or
fmul
movsl
mov
add
ret
jmp
ja
test
jnp
or
dec
xchg
or
mov
xchg
push
inc
outsb
into
sbb
fmull
xor
mov
sti
push
mov
arpl
push
mov
pop
and
push
mov
dec
cs
mov
movzwl
sub
aam
das
jge
cltd
inc
jne
sbb
xchg
pusha
movb
add
rol
cmp
in
das
in
fimuls
jg
xchg
inc
les
jne
mov
sub
fidivrl
orb
xchg
loopne
sbb
pop
loop
enter
xchg
adc
or
fcmovb
adc
cmc
shlb
jnp
dec
pop
sub
jl
mov
mov
inc
dec
jne
aas
sub
push
inc
lcall
stos
jne
mov
pushf
xchg
inc
fsubr
push
lret
enter
in
aam
mov
cltd
outsl
loopne
outsb
adc
aam
add
fsts
or
int3
rcrb
push
xchg
into
xor
push
jb
pop
mov
adc
rcll
divl
mov
pop
mov
lods
insb
add
das
pop
es
xchg
push
pop
mov
mov
xor
xchg
ds
xor
in
dec
lods
cld
mov
push
push
jne
mov
fsubrs
fs
cmc
divb
jle
sbb
push
scas
int3
xor
mov
daa
or
popf
icebp
rolb
test
pmaxsw
and
inc
ss
inc
add
push
pop
ret
mov
pop
outsl
sbb
jne
jge
or
fadd
adc
and
xor
sahf
lcall
sbb
push
mov
pop
push
filds
mov
sbb
or
daa
inc
inc
inc
jbe
daa
adc
dec
add
ret
push
or
gs
push
inc
adc
fmuls
xchg
push
jbe
rolb
ja
xor
sbb
add
ja
jo
or
dec
push
push
test
or
ljmp
mov
xchg
lcall
nop
std
sub
xchg
ret
add
and
sub
adc
imul
and
mov
pop
ss
inc
dec
clc
lea
ficomps
les
mov
dec
mov
push
int3
ret
add
cwtl
add
push
add
push
imul
or
sub
into
mov
dec
lahf
clc
fwait
sbb
imulb
pop
idiv
add
push
mov
mov
adc
mov
or
incl
adcl
arpl
sub
jne
mov
rorl
or
andl
dec
lods
dec
xchg
pusha
jnp
or
ret
gs
orl
mov
test
jp
lock
arpl
hlt
gs
ret
inc
or
xchg
dec
add
pop
sub
testl
imul
jmp
cmp
dec
and
subl
mov
and
pop
xor
dec
je
aad
add
jmp
daa
loope
cmp
or
add
or
ret
insb
daa
jne
pop
xor
pop
and
movsl
das
les
pusha
jns
hlt
les
add
call
jnp
pop
add
add
and
das
loopne
mov
adc
xor
push
enter
in
into
cmp
dec
mov
int
pushf
mov
cmp
push
loope
push
mov
aaa
sahf
push
test
push
mov
pop
jns
inc
arpl
repz
je
push
sub
xor
jno
lret
jmp
adc
lret
xor
dec
pcmpeqd
nop
cmpsl
push
scas
int3
lods
dec
or
pop
jge
insl
cmp
jl
sbb
lds
add
lahf
cwtl
stc
add
sub
pop
mov
mov
adc
mov
cmp
cmp
xor
into
int
adcb
and
sbb
pusha
dec
in
int3
push
in
sbb
push
push
dec
into
repz
sarb
xor
add
dec
sbb
dec
dec
push
adc
insb
movsb
fisttps
jp
pop
xchg
fadds
inc
xchg
mov
xor
scas
les
bound
xchg
xor
sbbb
add
adc
xchg
mov
xchg
cld
sub
movsl
inc
sbb
mov
fists
sub
add
das
sub
mov
iret
in
push
xchg
jo
or
jb
or
pop
jbe
loope
lods
shll
lods
or
stc
cmp
jmp
es
mov
mov
test
sbb
cmp
setg
aaa
and
insb
xor
add
xchg
mov
pop
out
or
mov
jp
es
addr16
into
adc
and
pop
pop
mov
mov
movsl
pop
xchg
add
push
inc
sbb
jl
push
bound
add
das
insl
inc
lock
bound
mov
xchg
mov
add
loop
pop
rolb
xorl
aad
cwtl
or
lods
mov
nop
repnz
clc
xchg
scas
and
add
sub
loopne
in
decb
inc
mov
and
adc
jge
pop
or
adc
and
repz
je
out
pop
add
testb
jns
push
adc
out
enter
outsl
fildll
insb
adc
jmp
or
icebp
enter
xchg
out
out
add
or
shlb
add
fdivl
shrb
lahf
and
daa
inc
sbb
aam
insb
xlat
sub
pop
subb
push
pop
or
cmpsb
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
cwtl
cltd
lcall
and
dec
decl
ds
add
roll
add
leave
rolb
xchg
mov
inc
leave
sbb
adc
test
jb
adcb
pop
cmp
and
pusha
mov
inc
insb
popa
jae
dec
popa
outsb
popa
or
dec
lahf
jmp
xchg
out
sub
dec
aas
fs
sar
pcmpeqb
inc
lea
jmp
adc
mov
mov
add
dec
mov
enter
movsb
adc
and
data16
inc
mulb
sbb
pop
adcl
int
test
cmpsb
mov
pusha
call
or
push
sbb
mov
sub
les
push
in
popa
pop
pop
xchg
ss
sbb
mov
mov
sub
push
les
pop
and
mov
mov
gs
addr16
lds
push
outsl
sub
xor
push
and
lods
add
movsb
dec
xor
fdivrl
nop
adc
xchg
push
push
out
xor
and
add
and
leave
xor
inc
cmp
add
pop
dec
aaa
add
cld
stc
push
imul
pop
pop
adc
pop
ss
jae
add
push
insb
lods
cwtl
jl
dec
rcl
push
adc
push
or
orb
and
or
xchg
xchg
adc
pop
mov
push
aaa
out
xchg
pop
aas
push
or
pop
pop
test
ret
wbinvd
inc
fisttpll
and
adc
dec
inc
inc
out
scas
or
mov
pop
pusha
in
mov
ror
push
pusha
bound
mov
push
add
cmovb
ljmp
ds
inc
jg
adc
nop
dec
sbb
jo
addr16
stc
xchg
cli
mov
xchg
mov
pop
push
test
fcoms
push
pop
mov
push
xchg
fldcw
or
sbb
add
xor
frstor
push
add
hlt
pop
xchg
in
mov
call
jns
lcall
or
clc
movsb
bound
lea
adc
repnz
inc
pusha
sub
rolb
mov
lea
cmpsl
filds
decb
inc
imul
mov
fisttps
cmpsl
xor
shrl
pop
dec
jno
sub
adc
jle
inc
and
dec
lahf
hlt
or
sub
rcr
sbb
fcmovnb
lea
loop
les
push
dec
add
jb
test
add
and
push
mov
push
dec
xchg
shr
ljmp
add
lods
flds
and
add
enter
sub
adc
xchg
test
js
adc
inc
or
flds
iret
mov
add
add
mov
fs
cwtl
lds
push
inc
loope
xor
aas
inc
add
or
int3
adc
or
xlat
test
push
inc
lods
rolb
mov
xor
daa
icebp
mov
adcb
lret
adc
adc
inc
mov
decl
fwait
out
and
jo
sbb
mov
repz
sub
or
loopne
xor
cmpl
test
xchg
sub
fisttps
jmp
out
fwait
sbb
xchg
inc
xchg
mov
sub
mov
data16
dec
adc
jbe
pop
mov
push
rorl
or
sub
adc
inc
jne
hlt
out
in
icebp
add
lock
mov
inc
mov
call
cmp
and
xor
dec
test
movsl
mov
nop
mov
cltd
js
fdivr
or
aaa
mov
repz
fcomps
aam
in
xchg
les
testb
mov
js
popf
cmp
push
or
cmp
pusha
gs
jnp
out
pop
mov
mov
sti
adc
mov
inc
dec
push
or
push
enter
xchg
enter
popa
fldl
push
pusha
rcl
adc
inc
les
repnz
fdivs
sub
rorb
or
mov
pop
movsb
lods
int
arpl
dec
fisubrl
dec
or
mov
sbb
call
or
push
mov
xchg
mov
sub
fildl
or
push
test
mov
inc
testb
xchg
inc
push
mov
movntq
fs
add
or
and
mov
pusha
add
sub
adc
aad
or
push
pushl
in
xchg
lods
and
sub
sbb
fisubl
mov
inc
cmc
ret
mov
jae
outsb
sbb
stos
movsb
call
xchg
dec
movsl
adc
sbb
mov
andb
cli
push
out
bound
jno
outsb
jne
push
lea
lret
sbbb
repnz
les
fists
adc
enter
or
inc
cmp
rclb
cli
cli
addr16
movb
mov
jns
pop
pop
das
jge
adc
pop
popf
cwtl
sbb
ja
or
push
je
cmpb
pop
adc
loopne
push
enter
add
jbe
movsb
pop
xor
imul
cld
push
adc
jg
adc
xor
push
add
jmp
xor
pop
leave
imul
add
lret
cs
mov
sbb
dec
inc
push
push
push
sbb
movsb
hlt
test
add
and
fcmovb
repnz
scas
adc
mov
sbb
push
push
or
jb
insl
outsb
adc
sub
xchg
outsl
je
rolb
adc
gs
insb
add
and
into
push
insb
cmp
jle
mov
enter
xlat
roll
push
scas
mov
push
inc
insb
or
aad
inc
inc
insl
adc
pusha
nop
xor
xchg
jecxz
and
movsb
imul
mov
mov
je
mov
dec
mov
jnp
mov
mov
or
inc
mov
jb
sbb
mov
sub
pop
ret
loopne
or
xchg
in
mov
insb
lods
pop
pop
insl
daa
ror
lods
cmpb
inc
sbb
idivl
movsl
push
push
push
popf
xchg
jbe
and
aaa
clc
pop
loopne
pusha
jns
cltd
mov
add
ret
pop
inc
or
xor
push
clc
fdivr
ficoml
ds
insb
sbb
ja
sbb
sbb
xchg
cmc
aam
cmp
or
sbb
insl
rol
cmp
lods
or
inc
push
sbb
and
or
push
and
adc
dec
inc
pop
iret
addl
dec
and
and
daa
fisubl
xchg
gs
jg
inc
insb
jae
fs
je
lcall
mov
add
lea
inc
adc
mov
or
mov
dec
and
test
insl
xor
shlb
push
aam
mov
movsb
rcll
adc
fidivl
jne
int3
inc
data16
ja
dec
adcl
fwait
jnp
daa
test
adc
inc
jle
and
or
or
outsb
faddl
int
push
mov
cmp
or
jns
cld
add
incb
sbb
inc
push
or
cs
dec
outsl
or
jae
outsb
xchg
sbb
push
sbb
pop
outsl
xor
pop
cmp
push
into
xlat
sbb
fs
jo
cmp
mov
fcomps
pop
es
lcall
cmpsb
mov
or
mov
push
dec
pop
xchg
mov
test
and
inc
sub
pop
sbb
fadd
mov
cmp
sbbb
mov
sbb
cs
cld
cltd
and
mov
xchg
sbb
pushf
add
and
jmp
add
subb
pop
pop
fisubl
inc
adc
mov
pop
cs
or
jne
sub
mov
lea
loope
mov
flds
adc
push
in
sarb
xor
mov
sbb
push
cmp
sbb
repz
cmp
pusha
inc
jmp
or
push
xorb
lret
pop
sbb
fcoml
ja
call
lea
mov
nop
fcomps
push
xchg
or
imul
outsb
cltd
mov
push
inc
xor
ror
and
jb
cmp
jne
and
jo
adc
popa
test
pushf
xor
add
aaa
xor
lret
lock
adc
sub
ror
cmp
les
adc
or
insl
cmp
pop
and
pusha
pop
xchg
icebp
sub
je
jg
inc
lods
sbbl
fsubs
mov
clc
xchg
cmp
enter
rcrb
scas
cld
and
pop
cmp
test
and
movl
icebp
push
fs
mov
pushf
pusha
add
pop
mov
xor
hlt
dec
xor
adc
adc
cmp
xchg
push
sub
dec
add
pop
test
push
rcrb
xchg
clc
bound
jno
lea
cmp
adc
cmovno
xor
jb
aas
pop
es
adc
mov
movsl
leave
add
pop
sub
sub
xchg
push
test
mov
cmpsl
daa
push
cmpsb
inc
mov
mov
cwtl
shlb
cmpsl
icebp
add
cs
jg
imul
inc
mov
xchg
add
andl
lea
xor
adc
push
mov
cld
cmp
inc
push
int3
push
and
pop
or
add
and
movb
inc
jp
les
cltd
js
xorb
xchg
jae
add
push
aam
inc
or
ja
mov
mov
out
gs
sub
mov
iret
inc
or
je
popa
inc
dec
bound
leave
xchg
test
xchg
mov
gs
aas
leave
mov
sbb
movsb
add
mov
pop
rolb
add
cmp
shlb
pop
pusha
les
jl
ficoml
mov
adc
cmp
push
mull
cmp
test
or
jmp
sbb
sbb
jno
aam
call
stos
adc
mov
cmp
into
aad
or
cmp
and
aas
push
cmp
aam
aam
add
adc
out
hlt
aaa
push
add
sub
push
or
mov
mov
push
fldt
loopne
dec
pop
call
sub
xorps
das
sbb
adc
lods
adc
movsb
stos
dec
push
es
xchg
xor
or
inc
sbb
pusha
jo
adc
add
push
add
andl
inc
or
mov
xchg
push
add
pusha
push
and
mov
push
mov
jns
aam
fsubs
jns,pn
fdivrl
nop
loop
cltd
cs
dec
xchg
test
add
outsl
xchg
cmp
mov
dec
outsb
jae
popa
outsb
es
sub
cmc
jp
push
and
pop
insl
sbb
xor
mov
dec
or
add
jge
jae
xor
jae
insl
outsl
xchg
or
sub
pop
cs
jne
jo
fmuls
in
outsb
xor
mov
inc
sub
in
insl
adc
inc
pop
repnz
add
and
adc
test
sbb
mov
adc
push
push
insl
outsb
and
push
and
jo
sbb
push
pop
in
xor
cmp
outsb
mov
push
pop
mov
and
and
pop
movsl
mov
sbb
sahf
jne
inc
xorl
cld
daa
out
mov
mov
incl
add
cmpsl
sbb
lea
test
je
out
push
fstpt
gs
in
fcmovnb
or
adc
mov
and
sub
imul
or
sub
test
loope
adc
outsl
jp
cmp
je
xor
aad
gs
and
pusha
sahf
fnstenv
mov
and
inc
add
out
out
into
or
and
jmp
cmp
nop
les
movsb
push
adc
jnp
fcmovne
jp
add
in
repnz
cmpl
and
push
iret
movsl
push
inc
jbe
or
jo
and
xor
jae
ds
xor
pushf
cmpsl
cs
in
xchg
lock
loopne
cmpb
and
jmp
pusha
adc
ss
push
inc
pop
adc
adc
jle
sub
adcb
dec
or
and
xor
xchg
and
add
jg
dec
add
data16
cmp
add
sti
jne
test
clc
enter
mov
inc
add
faddl
mov
lea
clc
arpl
test
or
das
or
in
movl
add
loopne
mov
idivl
cmp
push
popa
call
hlt
push
fwait
or
rclb
xorb
mov
test
lea
jle
repz
mov
and
frstor
xor
cmp
rorb
pop
push
roll
dec
jnp
adc
ss
in
adc
dec
out
aas
fistps
ret
loop
and
pushf
ljmp
ret
push
je
sub
dec
cmpsl
test
test
insb
ss
paddusw
xor
ss
cmp
and
mov
or
testl
rorb
call
aad
call
sub
xchg
sub
inc
or
adcb
cwtl
mov
insb
in
in
push
pusha
and
fiadds
add
pop
or
das
jmp
subb
adc
idivl
pop
jmp
inc
and
loope
mov
fcom
jg
sbb
push
inc
jp
jne
cmp
jnp
add
fsubs
cmp
popf
into
and
dec
adc
push
pop
iret
push
xchg
loopne
inc
int3
or
cld
jl
inc
mov
dec
add
aaa
pop
addb
push
add
pusha
cmp
push
dec
cvtdq2ps
push
fimuls
pop
sarl
js
lea
int
fcmovne
mov
jns
mov
loopne
or
sbb
or
ret
sbb
or
add
es
add
outsb
lock
rcll
or
lahf
mov
stos
ds
jmp
push
jge
sbb
mov
add
sub
fcomp
push
pop
adc
jle
shll
adc
lcall
das
mov
sbb
mov
or
hlt
rcrb
movzbl
pop
test
lds
sbb
add
loope
pop
adc
add
ja
clc
xor
ss
push
ljmp
pop
or
or
pop
xlat
add
or
fistl
imul
inc
testb
mov
lock
aad
pop
mov
pushl
dec
jne
sub
jg
ljmp
xor
clc
push
js
push
or
push
or
rclb
enter
cltd
sarl
or
mov
int3
sbb
jbe
add
push
insl
mov
bound
inc
lea
mov
in
icebp
aaa
mov
adc
rclb
loopne
push
pushl
or
ja
sbb
mov
mov
mov
dec
cmp
or
rolb
aaa
pop
add
fsts
pop
fisttpll
push
fistps
mov
insb
dec
rolb
iret
adc
insl
fmuls
sub
mov
loop
daa
mov
add
sbb
sbb
xchg
jo
aam
push
jmp
icebp
das
bound
xor
adc
pop
add
imul
mov
lea
pop
out
jge
xchg
dec
adc
das
inc
mov
and
and
or
cld
and
orb
jnp
rolb
add
adc
xorl
push
add
in
mov
add
cmp
rol
and
aaa
adc
sbbl
add
or
ret
add
jne
jbe
cmp
in
mov
mov
iret
movl
test
ja,pn
lock
lods
ret
fcmovnbe
jbe
pop
adc
cmp
arpl
pop
addb
test
push
inc
movl
pop
jae
push
mov
mov
lea
and
stos
push
js
pop
data16
mov
ret
xchg
jns
es
movlps
mov
push
sbbb
dec
add
inc
addl
lods
inc
mov
int
pop
je
jnp
imul
ja
out
call
jmp
sbb
lock
mov
fldlg2
cmp
sbb
insb
aaa
xchg
mov
xchg
test
mov
outsl
mov
cmpl
sbb
xchg
mov
lcall
aam
xchg
adc
test
enter
push
push
push
cli
mov
sbb
mov
lea
xorb
pop
out
push
test
hlt
imul
jg
sbb
mov
adc
pop
mov
adc
gs
pushaw
mov
push
popa
daa
mov
int3
ret
push
mov
addb
inc
in
push
roll
dec
test
and
dec
push
push
push
ss
clc
js
pop
test
push
xorb
jmp
xchg
fistpl
or
xor
mov
es
shll
inc
jge
fwait
dec
xor
push
pop
lock
arpl
pusha
push
ljmp
jg
out
adc
mov
push
pop
adc
or
sbb
cmp
lock
inc
adc
sub
push
inc
and
adc
dec
inc
inc
push
push
cmp
and
aam
outsb
or
insl
addr16
adc
or
sbb
or
and
xchg
cmp
adc
ss
sub
fmuls
and
inc
pop
lods
addr16
sbb
push
add
jmp
xchg
mov
adc
sub
cmpsb
dec
add
push
add
or
test
ret
addr16
xchg
insb
rclb
mov
in
mov
adc
ficompl
xchg
mov
daa
cmp
outsb
jle
arpl
sbb
pop
push
fmull
nop
lods
inc
push
and
pop
inc
in
rclb
pop
push
jmp
aaa
arpl
jnp
push
sub
sbb
push
repnz
mov
movsb
outsb
and
inc
mov
cmpsb
sbb
test
mov
mov
addr16
mov
testl
jmp
es
add
adc
imul
addb
sbb
xchg
add
and
movsb
out
dec
dec
inc
push
dec
dec
dec
es
mov
inc
inc
inc
inc
dec
dec
inc
add
inc
push
inc
push
push
add
daa
or
sub
ret
adc
dec
inc
push
mov
push
jecxz
mov
or
pop
movsb
lock
pop
pop
jnp
xor
mov
inc
and
mov
push
nop
adc
jmp
push
xchg
cmp
and
fcoms
and
cmp
jnp
daa
aad
fcomps
in
nop
out
or
xor
arpl
jge
insb
sbb
push
or
push
jp
jle
into
jp
or
mov
inc
pop
push
jp
dec
aas
push
adc
addl
jecxz
push
aaa
sbb
les
sbb
into
jp
mov
push
jo
jae
and
mov
mov
and
adc
mov
jg
xchg
or
jp
insl
inc
inc
rolb
adc
sub
popf
sub
or
mov
test
sub
or
orl
jae
scas
int
sub
loopne
test
jne
add
popf
test
mov
in
xor
sbb
jl
cmp
push
mov
inc
loop
in
inc
outsl
das
sub
xor
push
xchg
xor
loope
in
and
popl
inc
and
jo
sbb
inc
mov
sahf
pusha
adc
xlat
adc
add
push
pop
pop
or
aaa
mov
fisubs
inc
in
lock
icebp
push
fs
pushf
in
jbe
stos
add
xchg
aas
fwait
repnz
adc
or
pop
and
xlat
or
adc
enter
insb
mov
pop
or
adc
insb
mov
adc
rorb
je
adc
or
fsubrs
lock
inc
dec
mov
sbb
mov
sbb
pop
pop
ja
scas
mov
sbb
push
jbe
sub
mov
lret
fs
out
push
mov
leave
jmp
or
mov
jg
scas
add
pop
addb
add
aam
jl
fwait
enter
adc
outsb
sbb
mov
mov
out
lea
xchg
push
arpl
mov
pop
and
push
sbb
setl
inc
nop
mov
sbb
inc
lods
push
inc
fs
daa
mov
enter
test
xor
jo
or
enter
pusha
or
enter
push
sbb
leave
push
dec
insb
xor
add
insb
add
outsl
popa
jo
and
push
and
je
je
add
sarl
and
fdivrs
or
adc
sbbb
inc
sbbb
sbb
cmpb
enter
enter
test
sbb
mov
pushf
popf
setle
addb
addl
xchg
mov
enter
or
enter
jb
enter
je
pop
inc
orl
pop
js
daa
daa
daa
jns
jnp
daa
daa
daa
daa
jge
jg
fs
cmp
xchg
adc
pop
xchg
sbb
lock
nop
add
lock
ficoml
and
add
pop
mov
lea
push
lahf
push
cmc
or
xchg
cs
inc
es
xor
sbb
push
gs
out
sbb
add
inc
sysexit
add
loop
add
jle
push
push
inc
imul
add
adc
dec
ds
movsl
mov
ret
inc
out
ja
dec
xor
xor
mov
sbb
add
adc
outsl
push
push
mov
scas
sbbb
out
mov
mov
push
outsl
roll
inc
es
notb
or
and
mov
adc
out
push
in
xchg
and
pop
call
imul
lea
mov
mov
pop
fsubl
sbb
and
lock
push
aam
pop
sbbl
cmp
ffreep
xor
mov
dec
xor
or
push
push
pop
imul
es
shrl
mov
es
push
imul
ja
pop
popf
xor
lea
ljmp
repz
sbb
rclb
popa
inc
sahf
sub
es
dec
lcall
mov
mov
pop
insb
pusha
lahf
push
mov
imul
aad
push
jge
pop
cmp
mov
enter
pop
sbb
sbb
jae
in
jmp
xor
mov
and
cld
repnz
fdivs
test
jmp
loopne
mov
push
int3
fadds
pop
pop
mov
dec
or
call
aas
inc
sbb
add
add
fsubrp
shll
mov
adcl
insl
jecxz
or
inc
das
clc
add
push
xlat
inc
cld
pop
sub
frstor
cmp
jne
sub
lret
iret
mov
imul
or
jle
jl
or
add
test
xchg
cmpsl
or
mov
inc
stos
popf
mov
push
xor
add
stc
mov
add
and
adc
in
enter
add
scas
mov
enter
push
cmp
push
push
divb
insb
lods
stc
aas
es
jno
das
pop
fdivrl
int
mov
inc
add
push
adc
daa
mov
pop
sbb
mov
pop
fs
popf
int3
inc
xor
inc
ljmp
cmp
fisttpl
inc
cmpsl
and
sub
push
sahf
dec
lahf
mov
popa
stos
jne
sbb
test
jge
inc
pop
add
lea
dec
mov
mov
xchg
xchg
popa
xchg
sbb
lock
mov
sbb
push
cmpsb
push
sbbl
call
out
andl
pop
adc
arpl
gs
pop
jae
fisttps
lea
inc
cmp
cmp
cmp
jne
sub
inc
popa
test
daa
push
pushl
sbb
clc
sbb
push
mov
dec
shl
sete
sub
push
imul
and
inc
jecxz
push
mov
inc
adc
outsl
cmp
inc
dec
fwait
xchg
lock
clc
out
or
pushf
add
adc
xor
int3
add
inc
inc
subb
and
dec
and
imul
mov
movl
inc
movl
lds
mov
mov
mov
test
fwait
popf
mov
inc
movsb
push
add
dec
insl
or
aad
lods
inc
or
inc
mov
or
xor
push
lret
mov
lcall
xor
test
jne
lret
jmp
mov
inc
dec
xor
cmp
jle
in
les
test
dec
das
sub
mov
add
adc
cmc
xor
fistpll
fs
movsb
add
sbb
mov
or
cmp
mov
sub
pop
inc
cmp
dec
jmp
or
imul
call
pop
outsb
sbb
mov
movzwl
test
sbb
pusha
dec
jne
pop
sbb
incb
gs
je
mov
dec
and
sbb
inc
call
xlat
movd
and
jne
jmp
cmp
sbb
loopne
sbb
vmovntdq
add
pushf
add
mov
pushf
pop
pop
inc
popf
add
shr
mov
adc
rcrb
xchg
mov
mov
xorb
pop
add
aaa
sahf
mov
aas
jo
sbbb
repz
mov
push
dec
inc
push
or
lea
sbb
mov
cmpl
mov
or
nop
decb
mov
inc
add
ss
cmp
or
sti
cmp
aas
pop
je
jle
push
cmpsb
das
lar
decb
clc
adc
ja
or
jmp
call
jmp
popa
test
cmp
push
push
add
or
jae
es
or
movsbl
sub
push
insb
sbbb
add
push
cmpsb
cmp
loope
shll
in
ds
pop
in
push
ljmp
cmp
lret
or
aas
clc
ja
jb
add
add
call
out
and
lock
mov
or
aaa
stc
inc
inc
test
aam
test
arpl
rorb
pop
loop
cmpsb
fwait
clc
and
stos
lock
mov
rcrb
add
inc
aad
dec
jae
ficoml
push
enter
push
std
mov
or
jle
nop
ffreep
dec
mov
aaa
jp
mov
add
cmp
inc
jae
lret
mov
jmp
js
inc
or
orl
inc
mov
dec
sub
sar
loop
jne
lock
movsb
pushl
or
scas
orb
shll
xchg
mov
ret
pop
pop
push
cmp
popa
loop
nop
cmp
mov
xorb
jg
mov
add
xor
xor
mov
cmpsb
lea
mulb
out
add
scas
push
je
jo
inc
cli
andl
dec
and
mov
test
lock
or
lea
test
and
mov
mov
add
fadds
xchg
mov
add
mov
mov
xchg
inc
mov
pop
pusha
mov
popf
push
push
dec
enter
add
adc
adc
mov
push
pusha
cmp
xlat
or
cmpsl
cmp
insl
xchg
insl
mov
cmp
pop
push
ret
call
or
shl
xlat
push
ret
mov
lods
cmp
or
mov
stos
mov
test
mov
fldcw
popa
add
aam
test
rclb
push
jno
aaa
popa
and
mov
mov
int3
adc
jo
xor
lods
adc
fwait
popl
in
or
or
cmp
adc
mov
mov
jle
adc
jge
in
test
arpl
mov
adc
mov
inc
pop
scas
mov
dec
mov
ret
inc
push
in
mov
scas
mov
cwtl
push
or
mov
sub
je
or
dec
je
in
enter
jae
adc
mov
xchg
cmp
jg
lcall
mov
mov
sub
or
jmp
fs
add
pop
pusha
cmp
add
xchg
xchg
movsb
or
mov
or
adc
push
jmp
rcrl
xor
adc
bound
sbb
lock
and
adc
xor
incb
add
js
push
mov
jns
cmc
hlt
or
loop
cld
scas
mov
incb
cmp
push
aaa
adc
ret
fnstcw
jl
push
inc
jmp
fs
out
hlt
xor
sub
inc
iret
or
je
add
sbb
jp
jo
in
xchg
fisttpll
roll
or
ret
les
and
xor
clc
in
es
cmp
cld
andl
lods
pop
stos
inc
add
lret
movl
mov
stc
jne
push
xor
das
hlt
test
jnp
add
popa
jo
xchg
outsb
lcall
fsub
flds
imul
aaa
int3
ret
fstl
movsl
lods
inc
add
into
pop
mov
data16
dec
fildll
jmp
popa
mov
ret
cmpsb
push
inc
inc
xchg
push
jmp
cs
pop
adc
push
jnp
adc
adc
add
inc
adc
dec
inc
sbb
xor
lret
lea
rcrb
lea
cmp
jo
mov
fsubs
insl
ss
adc
and
dec
push
jno
adc
bound
aam
dec
int3
dec
xlat
pop
ss
mov
enter
xchg
dec
cltd
cmpsl
add
insl
or
sbb
test
adc
popa
je
inc
aam
insl
pusha
fcoml
inc
cmp
adc
inc
fldt
in
fistpll
pop
sbb
pusha
and
pop
lret
add
movsl
aad
add
add
pusha
cwtl
mov
jge
jecxz
xchg
dec
jnp
adc
or
jns
pop
shll
movsb
mov
mov
clc
frstor
pop
or
roll
fistpll
outsl
pop
mov
ja
and
xor
sbb
inc
shll
pop
jmp
sbb
adcb
adc
push
or
lahf
or
rolb
push
fsubl
shl
cld
add
mov
cmpb
lea
pop
pop
adc
jno
pushl
test
fildl
sbb
adc
or
add
pop
pusha
or
jno
xchg
xlat
je
add
ja
jb
adc
rol
ja
dec
mov
mov
ret
gs
fstl
adc
testb
dec
add
popf
mov
incl
adc
cltd
sti
push
jge
fcoms
cmp
ja
cmp
mov
xor
pusha
or
mov
or
call
adc
or
xchg
pushf
cs
stos
dec
nop
jne
icebp
inc
xchg
push
xlat
movsl
sbb
mov
and
std
das
mov
stos
add
push
inc
insb
imul
in
in
xchg
pusha
adc
gs
shrl
jns
sbb
push
sti
fnstcw
adc
jae
fs
or
inc
aas
cltd
cmp
or
lret
ds
outsl
test
push
sbb
adc
rorl
sub
fsubs
xchg
adc
insb
jns
xor
and
roll
fistpll
pop
aaa
push
push
je
imul
or
jb
or
cmpsl
or
inc
and
imul
mov
stos
imul
push
test
test
dec
add
add
dec
inc
cltd
add
or
js
add
pop
jo
mov
data16
ss
add
movsb
or
dec
ret
loopne
jns
mov
fld
fldcw
add
data16
dec
inc
jne
rcl
ds
clc
or
int3
inc
jbe
cmpb
jmp
lock
xchg
pop
xchg
mov
and
movsl
mov
jbe
sbb
push
repnz
enter
mov
inc
mov
push
in
add
aas
push
mov
repnz
mov
lret
adc
push
test
dec
and
mov
fsubl
inc
xor
daa
or
push
leave
popa
scas
scas
xor
scas
sub
and
lods
nop
scas
xchg
mov
scas
mov
pusha
add
mov
sbb
in
lret
fs
inc
and
inc
mov
scas
add
aas
cmpsl
mov
mov
mov
jle
xor
and
scas
hlt
inc
adc
or
xchg
cmp
lock
inc
int
scas
mov
adc
mov
aas
movsb
and
inc
leave
cmp
mov
mov
inc
mov
and
inc
andb
or
lods
pop
aas
cmpsl
push
sets
inc
inc
mov
fs
pop
xchg
adc
dec
adc
cmp
in
cmp
pop
fmuls
int
cmp
add
cmp
and
xchg
jbe
popa
xlat
mov
addb
xchg
loopne
cwtl
push
push
push
aam
add
push
out
cltd
out
add
pop
filds
sbb
rcrl
mov
leave
andl
cmp
test
movl
orb
fidivl
arpl
adc
pusha
or
insl
mov
adc
mov
push
xor
in
ficompl
dec
loopne
dec
xchg
sbb
js
inc
rolb
push
xlat
fnstenv
mov
mov
sub
add
push
pop
dec
mov
lods
roll
adc
adc
cmp
addb
inc
js
mov
mov
push
cmpsb
addr16
cmp
mov
stc
pop
loop
pop
jecxz
insb
fs
outsl
jecxz
cmp
inc
add
jbe
aas
push
mov
testl
xor
imul
xor
sbb
xchg
push
sbb
dec
dec
inc
outsl
jecxz
in
pop
call
xor
jo
fs
cltd
lea
pop
rorl
pop
paddw
cld
sti
stos
in
push
js
add
dec
test
or
andb
pop
shll
pop
mov
pop
sub
xor
cmpsl
adc
in
add
xor
fcoms
adcb
pop
cmp
movsb
testb
jns
nop
sbb
mov
cmovns
xchg
add
jae
fs
jo
out
das
pushf
jae
push
shlb
mov
adc
cmp
outsl
clc
das
xchg
or
mov
push
cwtl
pop
mov
jns
add
jmp
popa
out
jno
or
out
adc
lret
ja
mov
push
aam
cld
hlt
xor
cwtl
divb
jae
testl
cs
in
pop
addr16
mov
jo
in
leave
out
icebp
icebp
call
mov
sahf
dec
in
push
hlt
aas
pusha
sbb
lahf
imul
inc
and
scas
pop
sbb
or
testb
mov
lcall
shl
and
ret
shlb
mov
stc
xchg
lcall
jo
js
xchg
lret
sbb
in
decb
sbb
in
or
mov
push
int3
jbe
push
cld
pop
add
xchg
cli
das
leave
xchg
or
aam
adc
and
pusha
push
jl
inc
imul
test
xchg
add
cs
push
add
inc
mov
mov
shll
add
and
movsb
pop
or
push
pop
sahf
push
sbb
cli
daa
aam
jo
mov
daa
dec
sarl
gs
push
je
and
or
add
push
pop
mov
or
mov
and
and
mov
pop
sub
adc
sbb
fcoml
xlat
out
add
incl
test
arpl
or
lret
jnp
mov
outsl
inc
leave
xchg
adc
je
testl
and
or
cs
xlat
push
mulb
repz
mov
and
shl
or
or
or
test
nop
das
xchg
movl
sbb
fs
or
fdivr
add
pop
cwtl
icebp
nop
adc
push
popf
out
sbb
or
in
sbb
dec
or
adc
dec
enter
enter
and
mov
pop
sbb
les
push
sub
mov
lods
mov
sbb
shrl
mov
dec
mov
iret
fldl
pop
repnz
jl
or
es
sar
mov
mov
sbb
mov
dec
xchg
pop
clc
dec
iret
rcrb
enter
push
mov
enter
pop
push
cmp
mov
and
or
and
or
mov
xchg
mov
mov
jmp
add
shrb
imul
mov
or
nop
scas
jle
adc
mov
outsl
daa
dec
jl
fs
adc
in
in
push
xchg
push
enter
adc
lcall
and
iret
push
ficompl
push
xor
mov
movsb
aas
jg
xor
adc
inc
mull
inc
in
cmp
add
jo
jne
inc
inc
inc
xor
jp
insb
arpl
rcll
insl
imul
rorb
pop
inc
outsb
or
and
ss
call
dec
mov
jmp
nop
cmpsl
mov
fsubrs
dec
adc
inc
aam
lcall
rcrb
jne
cmp
xchg
nop
pop
sbb
std
decl
inc
int
dec
addb
mov
sub
shlb
scas
and
cld
cmp
mov
cmp
xor
inc
inc
div
repz
add
add
add
push
mov
repnz
push
loopne
dec
fmuls
lock
call
push
adc
inc
or
lcall
cli
stc
clc
push
push
push
push
push
dec
imul
push
addr16
push
jle
push
mov
test
lods
mov
mov
mov
faddp
jo
dec
dec
mov
pop
push
enter
pop
pop
daa
push
andl
xchg
xchg
xor
decb
pop
add
add
or
push
add
pushf
ljmp
ret
out
dec
orb
fmuls
dec
imul
sub
jl
jecxz
inc
imul
in
dec
repz
ret
mov
pop
leave
sub
mov
inc
push
and
dec
mov
lods
ds
push
nop
and
sub
cmp
push
pop
or
sbb
adcb
sub
das
push
sub
add
ret
mov
dec
jnp
inc
lds
dec
rorl
rorl
jb
jg
leave
rcrb
pop
in
movsb
mov
jbe
or
sti
pop
and
adc
push
test
pusha
scas
insl
gs
add
adcb
mov
lcall
mov
pop
inc
aas
incl
push
jb
jne
sub
lds
aas
shlb
scas
jae
or
aas
jbe
add
fnsave
jmp
mov
mov
xor
push
mov
dec
loopne
or
cmp
fidivl
cmp
or
pusha
ss
sub
sbb
je
push
dec
cmp
adc
and
jmp
lret
mov
add
push
ret
pop
outsl
mov
xchg
xchg
push
add
lds
sbb
push
das
sub
add
xlat
push
or
cmpsl
and
jmp
sbb
adc
mov
and
jg
enter
fsubrs
jge
mov
pop
cmpsl
sbb
nop
fmull
cmp
or
pop
je
add
and
add
and
addl
rorb
add
mov
xchg
js
add
and
roll
clc
mov
jl
sbb
xchg
loop
sub
fs
push
and
cmp
rcrl
xchg
clc
lcall
add
lods
sub
lock
mov
inc
jae
or
push
inc
or
jo
mov
lds
sbb
add
and
out
hlt
or
out
mov
dec
arpl
xor
fimull
xchg
test
cmp
xor
xchg
xchg
pop
mov
stc
dec
or
push
sbb
nop
dec
jno
sub
push
scas
inc
and
out
imul
fdivs
push
mov
rclb
pop
inc
mov
and
inc
cmp
imul
and
clc
fdivs
adc
fmuls
mov
xlat
push
push
and
enter
in
call
fsubrs
push
pop
jno
imul
add
iret
movsb
stos
mov
xlat
inc
and
xor
adc
incb
imul
add
inc
adc
adc
mov
pop
cmpsb
mov
sar
push
add
mov
fwait
lea
ljmp
cmp
pusha
subl
lock
cmp
adc
add
iret
push
lea
jmp
cltd
mov
subb
mov
cmpsb
pop
es
dec
jne
push
mov
adc
xchg
pop
lds
inc
sbb
pop
inc
push
cmp
js
insl
mov
xchg
sub
nop
jmp
mov
inc
jns
xchg
popf
cmpsb
xor
outsl
inc
add
xchg
dec
fidivs
lret
mov
inc
in
adc
ss
pop
arpl
xor
fwait
sub
sub
and
sub
lahf
call
adc
arpl
mov
call
add
pop
getsec
push
cmc
mov
and
sub
aaa
rcrl
dec
adc
jl
jecxz
loopne
add
in
lcall
je
inc
or
or
imul
xchg
popa
stos
mov
cmp
in
cmp
insl
push
xor
cmpsb
pop
les
dec
call
sbb
adc
dec
mov
in
into
inc
scas
add
dec
iret
add
imul
lock
out
test
pop
hlt
fs
jge
subb
jo
int3
les
rorb
push
outsl
pop
push
mov
dec
enter
add
add
scas
sbb
adc
repnz
xchg
mov
test
mov
adc
stos
xchg
and
repz
test
lret
enter
pop
cmp
fcoms
and
popa
add
xor
xor
loopne
enter
pop
or
leave
stos
fcom
sarb
xchg
sub
and
int
in
or
out
rorb
mov
lcall
lahf
cmp
and
xor
sbb
mov
sub
mov
cmp
es
and
lea
mov
sub
arpl
outsl
add
pop
sti
iret
xor
pop
orb
cld
pop
repnz
enter
dec
mov
shl
cmp
out
mov
fdivs
jecxz
xor
push
sbb
gs
mov
dec
push
mov
push
mov
inc
mov
sbbb
sbb
and
orb
sbb
pop
lret
aam
sbb
andb
in
push
shll
rcrb
jg
inc
jg
lret
js
sbb
dec
push
jns
mov
jmp
stc
mov
lods
lock
clc
gs
cmp
mov
inc
xchg
sub
int3
mov
popf
xchg
orl
push
enter
nop
xlat
push
jns
xor
mov
xchg
sbb
cmp
xchg
pop
sbb
rorl
jbe
mov
int3
xchg
pop
in
mov
cmp
roll
rolb
int3
pusha
inc
sbbb
jae
sbb
icebp
dec
add
or
or
cwtl
rorb
add
pop
outsl
rcl
negl
cmpsl
movsb
int
fistpl
scas
sub
mov
xor
ret
and
cmp
rcrb
mov
and
mov
leave
inc
pusha
cwtl
mov
pop
sbb
cmp
xchg
pop
lahf
lea
pop
mov
xor
cmp
cld
mov
jmp
jg
loope
push
mov
subb
hlt
push
inc
mov
cmp
dec
add
or
out
add
lock
sub
sti
hlt
push
push
mov
mov
test
pop
xlat
add
and
jbe
ja
xor
frndint
xor
inc
cmp
sbb
pop
mov
cli
inc
mov
pop
and
call
les
in
movb
and
sub
adc
shrl
cmpsl
lret
inc
add
push
push
adc
push
lcall
cld
cmpb
dec
push
xor
mov
sub
cwtl
and
fsubs
inc
faddl
aam
std
loopne
arpl
push
scas
sub
addr16
inc
test
add
sbb
mov
cmp
rorl
jl
ds
aaa
aas
arpl
cmp
adc
subl
sub
outsb
pop
adcb
fstl
outsl
loope
dec
and
mov
push
or
add
jne
test
mov
add
inc
ds
cmpsb
pop
mov
pop
add
cmp
les
sbb
jo
je
repnz
add
js
test
or
pop
inc
enter
xchg
sub
lods
cld
push
aam
or
push
add
stos
xchg
mov
inc
or
sbb
incb
aam
and
mov
cmp
adc
testb
dec
ds
cmp
mov
push
sub
push
in
cmp
rorl
mov
and
rol
fldcw
sub
idivl
sub
lods
les
mov
or
shll
loop
inc
adc
cmp
incl
or
leave
xor
xor
add
xchg
movsb
arpl
test
add
pop
adc
dec
push
jecxz
xchg
jl
inc
fsubrs
pop
xlat
in
jo
shlb
sbb
decl
push
jge
jmp
std
shlb
shl
loop
adc
or
cs
test
add
sar
ss
sbbb
mov
mov
adc
cmc
adc
scas
push
dec
inc
push
sahf
jmp
lods
out
jmp
cmp
mov
test
mov
fdivrs
cs
sbb
push
outsb
inc
inc
ret
dec
mov
push
addr16
xor
and
inc
lahf
add
add
ret
movb
cltd
cmp
mov
jo
dec
pop
aaa
jmp
and
sub
push
mov
insb
dec
rcl
push
sub
cld
das
sub
dec
or
push
lods
jne
sbb
leave
daa
shll
inc
addr16
jle
dec
adc
and
and
adc
pop
jg
jecxz
aas
or
lods
cmp
je
adc
xlat
call
outsb
sbb
and
or
or
mov
insl
movsl
cmp
mov
pop
and
idivl
add
lcall
outsb
and
mov
nop
jge
xlat
xor
pop
repnz
test
sarb
dec
pop
popa
shl
ljmp
xor
jns
insb
sbb
fildl
cltd
mov
test
addb
or
ret
arpl
adc
call
paddw
sub
jg
dec
or
ret
loopne
jnp
aaa
inc
or
into
movsl
xchg
cmp
lcall
inc
sub
add
je
mov
cmpsb
fists
test
pusha
insb
cwtl
or
push
mov
and
mov
lea
push
pop
jne
sbb
lds
and
in
sbb
js
jge
mov
inc
jne
inc
lds
add
add
inc
nop
ret
or
in
and
pop
mov
and
pusha
mov
dec
pop
aaa
or
and
jp
nop
add
pop
sub
subb
loope
call
sub
fmuls
adc
enter
test
sbb
shl
inc
or
add
xor
test
pop
mov
les
loope
rol
dec
pop
pop
sar
mov
lret
cld
sbb
push
shl
cmp
je
mov
and
cwtl
sbb
mov
mov
es
push
lds
fmul
orl
mov
addl
cmp
jae
sti
or
je
cli
out
cmova
pop
cmp
jl
push
pushf
push
push
inc
adc
aaa
add
adc
push
dec
sbb
jp
adc
adc
xor
adc
je
sbb
test
pop
ja
inc
push
jg
mov
pop
jbe
xchg
jmp
ret
out
lret
mov
adc
push
inc
cmp
jne
inc
decl
jne
les
add
pop
aas
aaa
mov
mov
inc
sbb
mov
add
nop
jo
dec
in
push
push
sbb
jnp
test
mov
pop
pop
sub
mov
dec
pop
in
lock
jae
test
mov
xchg
aam
add
cmp
lea
xor
mov
xchg
roll
mov
cmpsl
push
mov
cli
in
jo
mov
sbb
popa
ret
mov
xor
xor
cmp
fucom
lock
sbb
cld
pushl
jns
adc
leave
je
push
push
mov
dec
popf
outsb
popa
or
sbbb
push
loopne
dec
movsb
mov
dec
ret
mov
lret
dec
adc
lahf
add
aas
or
mov
inc
pop
mov
inc
mov
insl
adc
and
sub
mov
adc
shll
or
inc
hlt
cwtl
shl
adc
shl
inc
in
outsl
mov
push
sub
daa
push
push
outsl
and
fs
loopne
mov
sbb
fprem
enter
loope
xchg
inc
and
adc
adc
mov
dec
inc
or
mov
sub
xchg
push
insl
mov
scas
popa
jnp
mov
xor
stos
add
pop
in
adc
xor
les
sbb
cmp
xchg
cmpsb
clc
rcrb
push
or
push
addb
gs
adc
fwait
dec
sahf
pop
es
insb
pusha
repnz
in
jecxz
xor
jno
movsb
cmp
or
and
mov
dec
mov
or
mov
dec
jmp
in
inc
push
pop
rorb
and
jae
and
add
scas
and
lock
int
das
push
ret
call
out
jg
rcr
repz
pop
push
jl
mov
pop
pop
jno
into
enter
je
push
mov
icebp
push
jno
mov
jns
clc
sahf
cwtl
or
loope
out
cmp
lods
pop
mov
out
in
mov
movsl
test
rcl
mov
pop
loope
inc
lock
and
aam
or
lods
je
scas
jg
mov
mov
push
bnd
in
adc
mul
mov
and
test
inc
xor
or
popa
pop
sub
xchg
in
scas
cmp
xor
and
lahf
js
cs
ret
lea
test
hlt
jp
xchg
adc
dec
mov
jle
inc
in
ret
sub
add
pop
movsl
insl
inc
pop
or
jg
jae
popa
testl
mov
cmpsb
push
pop
aaa
outsl
and
fldenv
sahf
int3
add
test
xor
jmp
or
pop
pop
cmpsb
ja
repnz
inc
xor
adc
daa
mov
test
mov
scas
push
pop
add
psubb
out
push
and
dec
aas
push
jmp
adc
int3
cltd
test
xlat
fs
or
sub
pusha
add
inc
xor
test
mov
int3
push
inc
fsubp
and
mov
movsl
xor
test
adc
sbb
sbb
and
xorl
cmpsb
aaa
inc
out
or
xor
mov
sbb
icebp
loopne
mov
fs
gs
add
scas
adc
push
sbb
inc
dec
jne
movsb
in
inc
icebp
out
bound
push
ret
jmp
pop
lahf
rol
adc
mov
mov
in
in
xor
mov
adc
xchg
popa
sbb
call
pop
test
iret
xor
mov
or
cwtl
pop
shlb
ss
mov
xchg
mov
sysret
jbe
jmp
aam
push
jae
jmp
jb
mov
xchg
ret
dec
adc
xor
push
or
sbb
test
ret
jecxz
inc
cmp
push
popa
sbb
xchg
mov
xlat
testl
inc
or
ret
dec
lahf
fsubs
push
pop
push
sub
lods
push
movsl
pop
and
pmulhuw
mov
nop
fdivrp
icebp
lock
sub
and
pop
push
into
sbb
out
dec
les
cmp
rcl
mov
in
jmp
cmpb
mov
rolb
push
mov
or
ljmp
jle
repz
jbe
inc
add
pop
xchg
gs
push
push
add
add
sub
sbb
ljmp
adc
fbld
test
add
dec
test
jo
iret
sbb
fsubrp
pop
add
daa
es
dec
clc
shlb
fstpt
mov
or
pushf
subb
mov
cmpsb
jbe
and
cmp
jecxz
ret
adc
or
mov
test
adc
jns
add
sub
test
xor
pushf
adc
push
pushf
push
jle
dec
in
imul
or
mov
dec
mov
sbb
sub
insb
mov
pop
cmp
lock
pop
in
push
in
mov
test
inc
shll
push
in
adc
add
out
iret
and
sbb
push
in
mov
aad
iret
popa
in
sbb
inc
pop
mov
lods
ret
movl
mov
cwtl
cmp
pop
hlt
leave
and
adc
mov
and
into
push
pop
sub
xchg
xor
and
inc
xor
in
insl
adc
and
adc
mov
rclb
std
sbb
test
nop
cs
ljmp
rcrb
lea
push
or
mov
xchg
sub
adc
inc
mov
popf
push
pusha
or
sub
insl
mov
hlt
mov
mov
negb
pop
rcrl
pop
enter
inc
shlb
pop
inc
sbb
mov
fsubrs
xorb
or
vcmpsd
pop
movsl
xchg
inc
in
out
clc
jbe
jp
jne
xor
xor
mov
shl
imul
xor
adc
sub
ret
out
adc
push
imul
adc
mov
pop
sbb
cmp
int3
xchg
sbb
out
and
out
push
sub
pop
out
hlt
lds
push
daa
hlt
push
adc
jnp
pop
or
add
cmp
or
daa
inc
or
or
cmc
imul
cwtl
adc
or
jmp
push
adcb
sub
adc
call
sub
icebp
cmp
clc
hlt
out
pop
inc
rorl
xor
or
lret
clc
fcoml
xchg
mov
lock
jbe
lods
test
and
fisubl
and
push
daa
ret
inc
in
sbb
outsl
or
inc
mov
push
jno
mov
shll
xor
test
sqrtps
cmp
xor
fsubrp
hlt
jle
sbb
push
fildll
lea
scas
dec
xorl
rolb
mov
or
pop
ret
popf
mov
sbb
or
scas
push
push
add
push
lret
pop
daa
mov
pop
pop
imul
insb
xchg
jne
pop
repnz
pop
jo
xor
push
clc
clc
loop
repnz
repz
addb
in
lock
xchg
sbb
push
jg
mov
sub
repz
inc
add
test
inc
lahf
add
enter
sbb
lcall
daa
and
repz
add
dec
push
dec
push
addb
add
hlt
addl
adc
dec
push
outsb
mov
inc
mov
adc
fbstp
push
mov
mov
hlt
fcom
add
add
enter
hlt
mov
cmpsb
jp
fistpl
movsb
fstps
sbb
inc
jb
mov
mov
int
dec
fildll
imulb
nop
sbb
cmp
xor
push
enter
mov
sub
cmc
mov
sub
call
loope
mov
mov
push
mov
sub
sbb
outsb
adc
adcl
pop
mov
push
xchg
sbb
push
and
scas
scas
mov
aaa
jo
xor
ds
inc
sub
idiv
adc
xor
neg
shrd
and
testl
adc
sbbb
rorb
lock
adc
xchg
out
ds
imul
or
xchg
add
and
jne
adc
and
idiv
adc
inc
daa
sub
jle
cmp
cwtl
dec
xor
push
daa
and
cmp
sub
repnz
pop
add
testl
clc
fistl
mov
out
mov
jnp
mov
mov
dec
sub
jb
subl
fdivs
pop
aas
fiadds
jnp
jmp
mov
jnp
shl
aad
jbe
pop
fwait
jo
stos
sub
and
jnp
adc
push
cmp
jne
mov
push
inc
mov
daa
jae
test
push
insb
hlt
adc
jmp
mov
xchg
inc
int
inc
xchg
sahf
cmpsb
addr16
movsl
mov
cmpsb
js
xor
das
add
das
push
outsb
call
lret
inc
cmp
jne
testb
orb
mov
or
add
into
xor
push
pop
cmp
in
pushf
mov
cmp
insb
pop
jg
add
mov
outsl
mov
and
jge
mov
call
imul
add
js
adc
sub
mov
jb
test
push
aad
and
adc
jno
sub
cs
dec
pop
adc
sbb
sub
sti
add
loop
testb
jo
jo
in
or
hlt
inc
mov
add
inc
mov
dec
popa
dec
sti
or
popa
loopne
xchg
sar
dec
xor
mov
sub
mov
adc
xchg
xchg
test
cmp
lods
cltd
dec
adc
inc
push
adc
iret
xchg
mov
test
daa
jns
or
lea
ds
outsl
cmp
or
inc
adc
lods
adc
jge
sbb
xchg
dec
push
fisubs
jnp
pusha
in
adc
pushf
mov
pop
pop
cld
rorl
aas
sub
dec
sbb
dec
loop
adc
pop
je
fistl
push
pop
jbe
insl
xor
clc
inc
lret
jg
stos
add
cmp
aas
mov
jmp
loope
jo
mov
cmp
jge
lea
lock
loopne
rorl
ficoms
mov
add
sbb
addr16
shrl
mov
push
out
fisttpl
dec
dec
pop
addr16
adc
adc
aas
lahf
xchg
cmp
aam
adc
sbb
call
sub
add
mov
ficomps
shll
mov
test
sbb
popa
shll
outsl
divl
push
inc
sub
and
mov
movsl
or
fimull
dec
sub
pop
cmpsl
add
ljmp
testl
push
push
xchg
sub
ret
jns
sbb
dec
push
stos
and
jge
stos
sub
shl
push
jne
inc
fcmovnb
dec
nop
pop
insb
icebp
pusha
pop
in
jl
adcl
xor
or
mov
hlt
roll
fiaddl
adc
jmp
dec
push
es
jns
jg
jl
es
sbb
lock
mov
loopne
jne
or
or
inc
add
inc
jge
sbb
jle
inc
pop
jecxz
movsl
jecxz
inc
in
hlt
jl
or
inc
lods
inc
xor
add
dec
adcl
sbb
adc
or
or
jg
adc
and
rorl
shll
aad
test
stos
enter
mov
jo
xchg
xchg
inc
repnz
or
jle
pusha
addb
push
add
nop
arpl
mov
mov
shufps
dec
inc
pop
mov
and
mov
insl
add
or
sbb
aaa
inc
in
pop
dec
inc
iret
insl
ret
jno
in
xchg
popf
jmp
fwait
call
subb
aaa
pop
popa
mov
inc
inc
mov
add
movsl
cmpl
pop
mov
sahf
and
lea
dec
shl
cmpsl
mov
xchg
mov
adc
xorb
and
xchg
jae
test
push
out
pop
shlb
adc
and
xchg
or
insb
test
bound
or
cmp
pop
jne
sbb
add
rcrb
mov
adc
xor
xchg
jbe
inc
cmp
xor
mov
push
out
popa
inc
and
jecxz
xchg
mov
push
cmc
lret
mov
rolb
dec
pop
adc
fists
lock
nop
push
mov
pop
lcall
fcomps
call
pop
pop
outsl
adc
mov
and
decl
clc
icebp
test
pop
int3
mov
xorb
add
adc
and
adc
xchg
or
jne
xchg
cmpsb
push
add
or
dec
add
ret
cmp
call
mov
xor
clc
jmp
aam
jae
ja
add
mov
pop
shrb
lret
stc
and
adc
jl
sbb
pop
sbb
mov
lds
mov
add
and
inc
inc
loope
xchg
popf
xor
push
clc
enter
insb
int
sub
lods
fisttpl
pusha
imul
sbb
jnp
ja
and
fcoms
mov
fstpl
les
in
dec
arpl
orl
cmp
sbbl
dec
ds
mov
in
xlat
mov
mov
mov
inc
pop
cmp
or
jno
or
data16
add
jb
lods
inc
out
fcoml
call
mov
jns
add
push
xor
xor
test
push
mov
xchg
pop
or
sbb
out
aam
jge
pop
fsubp
test
imul
xor
scas
test
mov
fstl
add
inc
fsubr
dec
and
clc
sub
dec
leave
loopne
pop
jne
fiadds
cmp
lret
fildl
repnz
adc
adc
pop
les
lea
test
ret
ret
jbe
aad
or
jecxz
pop
inc
sbbl
dec
cld
sub
cmp
dec
icebp
adc
mov
or
add
jae
push
lea
imul
leave
or
adc
fstps
add
add
sbb
mov
mov
hlt
ja
out
popa
jecxz
pop
inc
or
mov
sub
mov
nop
scas
dec
loop
push
add
notl
xchg
fldcw
or
push
sub
xorl
mov
shl
and
enter
xchg
cmp
icebp
or
sarb
sar
add
and
loopne
or
fdivr
test
cmp
push
jne
insb
cmp
daa
mov
addl
imul
xor
jp
adc
lods
inc
sub
or
es
sahf
jo
pop
or
sbbl
mov
dec
in
fbstp
mov
add
sti
cmp
jle
or
xchg
xlat
test
and
test
ret
lds
or
pop
xor
pop
fsts
daa
stc
add
call
cwtl
xchg
divl
and
pop
aaa
nop
push
ret
mov
test
cmpsl
cwtl
das
add
inc
icebp
inc
popa
cmp
jno
add
jae
adc
sbb
pusha
pop
mov
adc
or
and
sbb
adc
fsts
push
mov
mov
sbb
xor
adc
jge
scas
or
ss
gs
imul
test
int
xor
push
paddsw
popa
add
mov
mov
dec
enter
mov
and
adc
outsl
lcall
mov
pop
inc
adc
cmpb
push
xor
adc
add
cmp
outsb
add
inc
cmpsb
inc
lret
and
jne
cmpl
lods
xchg
mov
inc
pop
ret
pop
sbb
or
fcmovb
mov
mov
outsl
movl
inc
addb
test
insb
sub
mov
lock
inc
scas
sbb
push
xchg
sbb
aas
mov
pop
add
sbb
lods
inc
and
or
test
inc
add
jge
inc
inc
imul
mov
push
outsb
adc
inc
or
adc
mov
and
lahf
mov
in
sahf
inc
mov
jg
lret
or
in
adc
pop
adcl
sar
jge
ja
fisubs
pushf
jne,pn
cmpb
bound
pop
cwtl
jmp
out
mov
scas
xor
lret
gs
inc
sbb
popa
jge
pop
fdivs
mov
push
mov
aaa
jo
inc
mov
mov
cltd
cs
add
mov
aaa
push
dec
xor
aam
movsb
sub
sbb
test
pusha
ja
cmpsb
ljmp
stc
add
popa
pusha
out
push
push
jl
and
addr16
jmp
rolb
rolb
mov
roll
add
lahf
pusha
pop
mov
dec
test
mov
sbbb
and
test
cmp
jnp
lret
ds
out
cmpsl
push
test
sub
add
iret
or
rol
push
int3
rclb
add
push
and
jl
inc
mov
push
rcl
add
outsl
cwtl
adc
mov
sbb
mov
mov
mov
enter
cltd
add
ret
inc
or
sbb
mov
cmpl
sbb
es
dec
cmp
dec
cmp
movsb
xor
and
arpl
push
pop
xchg
sub
cmp
arpl
mov
push
dec
cmc
jo
fwait
cli
cld
popf
adc
pop
inc
cmp
jl
movsl
xchg
mov
cmpl
dec
xchg
pcmpgtd
loopne
jg
mov
mov
xor
cmp
insb
and
call
dec
pop
sub
sbb
cmp
nop
std
inc
inc
cmp
jo
aaa
pop
xor
mov
es
or
cli
xor
sub
mov
pop
out
andl
or
leave
adc
filds
je
inc
inc
inc
cs
or
add
xlat
push
inc
or
bswap
insb
add
fidivrl
orb
and
mov
xor
sub
sbb
mov
and
js
dec
pushf
mov
data16
xor
mov
push
arpl
or
ficomps
xor
ret
xlat
cmp
jo
das
add
int
jge
add
xor
lret
jo
adc
mov
fwait
and
push
jae
int3
mov
adc
sbb
std
sbb
sbb
dec
adc
add
movb
adc
jb
xchg
mov
add
hlt
mov
and
aam
cmp
outsl
insl
imul
push
jo
adc
add
lods
or
add
bound
decl
push
mov
jne
jmp
push
inc
lret
call
inc
dec
dec
sub
addr16
xor
mov
add
pop
and
add
stc
lds
dec
mov
add
cmp
test
sbb
sub
adc
xchg
push
nop
dec
jmp
adc
fdivs
fs
sub
lret
cmp
jne
add
inc
mov
roll
mov
mov
inc
cld
add
lret
xor
in
sub
mov
xor
dec
adc
nop
add
dec
outsb
lea
xchg
movsl
push
sbb
clc
arpl
adc
dec
les
mov
push
or
into
mov
cwtl
sahf
movsl
inc
mov
or
fidivs
xor
xor
dec
add
insl
fidivs
enter
mov
adc
add
add
add
sbb
int3
rorb
add
adc
mov
int
xchg
mov
xlat
ja
aaa
gs
in
and
enter
jbe
inc
xchg
shrb
addr16
adc
mov
inc
out
rorb
pop
ret
mov
popf
sub
or
inc
xchg
pop
push
xchg
cmc
push
insb
arpl
incl
fnsave
dec
jne
jp
insb
cmp
jle
mov
je
iret
adc
mov
jmp
mov
iret
jb
mov
mov
scas
push
lods
test
push
movsl
imul
xchg
fsubp
orb
out
adc
lret
mov
mov
dec
ja
ja
mov
test
decb
popa
cmp
psubusw
lret
out
push
xchg
xchg
adc
clc
mov
lret
add
pop
ret
jecxz
jl
dec
mov
add
inc
jns
adc
mov
cmpsl
push
cmp
push
and
sub
movsb
andl
imul
rorl
dec
adc
mov
mov
dec
pop
cli
mov
pop
outsl
loop
insb
mov
fsubrl
mov
sbb
inc
lods
in
cmp
sarb
push
cmp
or
fbstp
jnp
adc
jo
je
cmp
cmp
add
mov
sbb
mov
fnsave
ss
add
xor
popa
sbb
daa
les
fmull
in
outsl
sub
push
pop
dec
and
int3
cmp
xor
enter
pusha
aas
mov
in
inc
mov
jbe
add
mov
mov
inc
pusha
pop
push
pop
gs
add
cmpsl
mov
cmc
jno
mov
jo
adc
adc
inc
cmpb
aas
add
adc
inc
sbb
or
notb
mov
not
and
aaa
int3
ret
sub
cmovle
je
add
and
jmp
or
cmp
call
xchg
sbb
cmc
lds
ret
xor
jae
sub
cwtl
iret
mov
sbb
pop
and
xor
ret
in
sub
icebp
je
jne
sbb
in
xchg
jo
imul
adc
mov
xchg
in
add
pusha
and
hlt
into
jnp
pop
test
push
pop
mov
dec
sbb
adc
cmp
cli
imulb
or
or
jmp
push
pop
pop
mov
das
dec
arpl
mov
mov
insb
mov
or
add
inc
mov
inc
call
mov
clc
aad
jo
aam
in
xor
adc
loope
fnstenv
cmp
pop
in
or
shll
inc
inc
push
adc
pop
sbb
mov
cmp
sub
adc
add
repnz
mov
adc
adcb
sub
dec
data16
daa
fmuls
xchg
arpl
inc
popa
push
loope
adc
aas
and
xchg
in
mov
add
in
movsl
xchg
mov
mov
mov
pop
push
negb
sbb
cwtl
jmp
mov
sbb
ss
xor
push
rcll
sbb
out
adc
mov
mov
pop
xchg
in
pushf
jne
sbb
sbb
push
mov
add
test
sbb
xchg
adc
ret
in
loopne
cmp
insb
hlt
pusha
sbb
push
jne
fimuls
pop
loope
mov
dec
xor
xor
andb
mov
pop
adc
xchg
aaa
enter
sbb
popl
hlt
mov
or
push
mov
loop
in
push
cwtl
fsubs
out
call
jbe
cld
sub
mov
leave
mov
rorb
add
jl
bound
test
sbb
mov
or
pop
push
pop
mov
mov
jnp
push
mov
jno
push
pop
jbe
sbb
or
jnp
jbe
ds
push
adc
sbb
test
loop
fwait
sti
mov
sub
add
das
enter
push
outsb
cmp
sbb
popa
sub
or
out
mov
int3
and
stc
pop
or
nop
sub
push
push
add
add
and
mov
aad
rolb
or
mov
dec
movsb
adc
push
xchg
cltd
inc
inc
cs
add
int
cmpsb
or
sbb
add
lock
enter
and
xchg
dec
mov
adc
lods
xchg
rclb
mov
xchg
adc
push
adc
ljmp
ja
or
inc
push
inc
jl
lea
nop
cmpsl
out
mov
fsub
andl
pop
movsb
mov
fnstenv
and
shrb
inc
cmp
dec
dec
outsb
adc
sbb
inc
dec
dec
dec
dec
adc
mov
fwait
push
fstp
sub
loopne
pop
movsb
popa
xor
pop
xchg
in
mov
lcall
ss
adcl
bswap
insl
lock
mov
push
mov
or
push
adc
xchg
adc
pop
arpl
cmp
ret
in
jo
xchg
or
inc
mov
out
cmp
and
insb
dec
push
std
push
rorb
mov
push
mov
lock
lock
jne
mov
push
fadds
sub
mov
pop
dec
mov
push
mov
lret
and
sbb
mov
and
adc
cmp
dec
xor
mov
add
push
sbb
xor
add
fidivs
daa
in
xor
jo
pop
jno
sbb
inc
xlat
test
inc
scas
sbb
fnstenv
add
and
aad
cmp
lret
pushf
lea
xchg
or
mov
hlt
shlb
inc
xor
xor
jp
cmp
lods
test
or
fdivr
loopne
and
cmpb
scas
inc
pop
icebp
xor
add
iret
mov
mov
or
popa
jmp
add
cmpsl
in
push
xchg
std
push
fwait
inc
cmp
dec
scas
pop
jecxz
mov
sub
das
mov
pop
mov
jmp
jnp
inc
sbb
daa
hlt
jmp
pusha
repnz
lock
or
scas
mov
add
dec
out
add
sbb
jge
jecxz
test
inc
rcl
mov
mov
out
mov
adc
fidivrl
mov
es
rcrb
push
dec
add
call
ret
shll
add
scas
stc
cmpsl
adc
push
stos
or
pop
movsl
push
aad
daa
mov
cmc
je
pop
xchg
cmpb
xchg
mov
mov
sub
pop
js
pop
pop
xchg
bound
hlt
xor
lock
sbb
test
xor
xchg
shrb
aaa
aas
add
xor
ret
mov
adcl
sub
sub
aad
adc
mov
repnz
mov
addr16
clc
jge
xorb
and
dec
clc
out
or
and
addb
mov
push
add
icebp
enter
jge
sbb
es
sub
mov
sbb
clc
jnp
dec
addl
stc
sub
mov
mov
fsubrs
adc
ret
cmpsb
imul
jb
lcall
nop
push
pushf
xor
pop
mov
popa
lea
push
xchg
xor
sub
push
or
push
mov
test
pop
movsb
fwait
aaa
daa
mov
adc
cmp
sub
bound
sub
imul
repnz
fdivl
leave
fdivl
movsb
jl
cs
pop
sub
sti
sub
dec
sbb
mov
mov
or
mov
mov
cmc
jb
ret
insb
cld
inc
push
sbb
pop
cwtl
pop
fcmovne
sbb
mov
fcoml
aam
loopne
push
add
cld
xchg
je
orl
pop
dec
mov
rclb
lods
shrb
daa
xor
lret
sub
push
outsb
sub
adc
fldl
daa
add
push
nop
pop
push
jp
movsb
int
mov
and
cmc
mov
jge
mov
cmp
xchg
push
cmp
xchg
mov
or
and
inc
rcl
add
push
movsb
fsubrl
in
or
sbb
aaa
inc
mov
inc
dec
pop
sub
sbb
mov
xchg
je
mov
cmp
cld
scas
xor
push
push
sub
mov
loopne
aam
pop
fwait
adc
fdivl
mov
mov
fsubr
xor
jns,pn
lea
shlb
mov
out
sub
aam
add
jo
sbb
dec
test
pop
dec
jecxz
int3
xor
adc
sub
imul
test
cmp
adc
jne
adc
popl
mov
xchg
sub
add
pop
lds
fidivl
add
mov
das
xchg
adc
push
popa
and
js
sub
add
xor
imul
aam
sbb
dec
je
and
cmp
jecxz
cmp
push
or
lock
sbb
inc
cld
inc
push
scas
sub
scas
sbb
in
adc
movsl
pop
hlt
cs
mov
sbbb
inc
cmpsl
jl
jecxz
xor
inc
aas
mov
aaa
das
ss
orl
push
inc
or
popa
mov
push
adc
clc
xor
shrb
shl
stos
ret
sbb
jmp
lds
rorb
cmp
sbb
inc
aam
jge
loope
xor
lods
pop
ret
lea
sub
dec
or
mov
add
xchg
divl
push
testl
pop
add
test
pop
mov
add
add
inc
and
adc
mov
cld
sbb
push
and
hlt
popf
xor
cmp
xor
test
or
mov
test
pop
enter
push
nop
xor
push
or
push
adc
pop
push
inc
xchg
loopne
fdivrs
add
dec
cmpl
push
dec
xchg
into
lea
bound
sub
jns
inc
or
lahf
xor
sbb
lret
ja
add
enter
addr16
or
lods
lock
lahf
lret
sbb
adc
testl
mov
mov
pop
pop
shl
mov
scas
rorl
ss
scas
cmp
mov
adc
ret
insb
pusha
repz
subb
push
pop
mov
adc
xor
jno
push
and
imul
rorl
call
sbb
fs
cmpsb
sub
dec
push
imul
jb
jnp
push
insb
lcall
insb
int
ret
inc
sub
loop
pop
pop
fsts
xchg
dec
leave
insl
and
add
loopne
leave
or
push
xlat
call
enter
jmp
mov
push
adc
push
push
imul
inc
mov
xchg
push
mov
or
xor
xor
sbb
mov
xor
push
inc
mov
xor
test
ja
pop
les
mov
rcrb
dec
lods
mov
xchg
adc
dec
aad
mov
outsb
pusha
shlb
rclb
inc
ljmp
xor
loopne
orb
push
inc
push
xor
sbb
jae
lcall
es
inc
inc
push
push
jg
cmp
push
call
invd
inc
fs
rorl
mov
insl
pusha
adc
mov
cmp
bound
rorl
mov
or
stc
inc
push
sbb
fildl
inc
call
call
in
or
adc
int3
cmp
je
push
fnstcw
pop
pop
cmpsl
sbb
nopl
movsb
inc
sbb
leave
push
mov
out
add
add
movsb
shlb
mov
pop
cmp
xor
mov
sbb
rcr
daa
or
cmp
and
lds
dec
lock
aam
and
add
aas
es
in
cmp
mov
pop
pop
mov
pop
xchg
ret
cld
pop
sbb
inc
sub
push
mov
insb
int
dec
movsl
add
ret
rolb
mov
sub
xor
push
hlt
mov
imull
pop
lods
call
pop
dec
lock
mov
pusha
jmp
adc
fisttpl
adc
jg
xchg
bound
inc
popf
add
cmp
sbb
aaa
incb
dec
cmp
xor
push
mov
stc
dec
call
dec
das
in
pop
cs
or
and
dec
mov
xor
push
bound
cmp
fistpl
and
imulb
out
pop
sbb
dec
pusha
outsb
sbb
lods
mov
fiadds
hlt
pop
cs
imul
pushf
or
jecxz
push
jne
je
mov
cmp
mov
movsbl
insl
xor
xchg
mov
cld
and
enter
rclb
adc
icebp
mov
int3
and
insl
mov
mov
ret
call
das
pop
std
add
inc
push
mov
pop
lea
sub
adc
leave
ret
and
cmp
mov
and
popa
dec
pop
or
iret
inc
adcb
xchg
repz
or
dec
iret
sub
daa
adc
mov
mov
lret
push
jo
inc
inc
or
inc
adc
cmp
and
mov
pop
jae
loop
mov
cmpsl
add
push
sbb
and
ret
mov
add
das
jle
xchg
mov
jg
sbb
testl
or
es
jl
adc
jg
mov
push
add
mov
mov
or
push
inc
dec
and
adc
das
mov
fidivl
adc
dec
dec
fisttps
andb
add
dec
cs
inc
ss
mov
out
inc
adc
inc
gs
js
pop
mov
in
cmp
push
sbb
adc
mov
pop
imul
mov
or
fidivs
inc
mov
adc
mov
sbb
xchg
inc
mov
sub
testb
test
fwait
js
inc
ret
xchg
int3
pop
nop
inc
or
xchg
add
adc
lock
je
sbb
mov
enter
inc
xchg
pop
cmp
mov
push
cmp
xor
mov
ret
in
fnstenv
movsl
push
pushf
push
cmp
xor
or
jg
push
insl
mov
inc
je
fmuls
das
mov
popa
xchg
popa
ror
in
stos
xor
lods
push
leave
mov
incl
jl
sbb
mov
stc
ds
xor
xchg
add
leave
imul
mov
jb,pt
and
sub
stos
inc
cmpsl
and
add
xor
xor
or
push
jo
or
jo
test
mov
jo
jg
outsb
add
aam
cmp
test
sbb
jmp
sbb
insb
and
shlb
jnp
cld
std
lea
pop
push
add
out
or
or
mov
sbb
test
shrb
jne
xor
lock
inc
xchg
xor
and
inc
sbb
lret
cmc
sti
xor
adc
add
sub
mov
sbb
xchg
test
inc
rcrb
aam
lcall
inc
push
cwtl
sub
lods
dec
mov
cmp
loopne
pop
mov
pop
pop
mov
mov
add
or
fiaddl
xchg
dec
into
add
cmp
mov
imul
imul
inc
std
mov
adc
fiadds
jne
int
mov
das
push
test
xor
sbb
sub
mov
and
sbb
and
or
out
lea
sbb
jmp
push
jp
repz
sbb
inc
inc
cmp
inc
dec
adc
mov
sub
insb
mov
imul
xor
mov
inc
xchg
inc
inc
inc
xor
sub
xor
push
jne
cmp
push
jns
insl
cmpsb
js
out
lods
fldt
addb
jno
mov
push
rorb
mov
sub
sbb
lea
mov
sbb
aaa
xor
mov
popf
aam
test
test
in
add
inc
push
cwtl
shrb
sbb
addr16
lock
push
pop
pop
adc
pop
pop
inc
pop
out
or
xchg
sti
pop
adc
adc
inc
ficomps
pusha
les
orl
adc
js
inc
inc
sub
setne
sbb
push
push
stos
pop
out
push
mov
outsb
xor
jmp
xchg
movsb
xchg
push
adc
dec
int
shll
or
sub
or
dec
sub
out
enter
nop
xlat
imul
xor
dec
mov
sub
fbstp
addr16
add
inc
sbb
jl
cmp
or
pop
add
std
push
rcll
xorl
jg
adcb
fistps
mov
int
outsb
pop
mov
insb
ret
and
cmp
dec
nop
ret
lods
mov
or
fsubrl
fisubrs
loop
nop
nop
imul
test
lea
fildl
orl
popa
inc
push
data16
daa
ret
out
fistpl
xchg
nop
imul
ljmp
movsb
adc
movups
imul
arpl
cmpsl
rorb
enter
frndint
push
clc
or
test
repnz
sub
cmp
cmc
rdpmc
cltd
js
or
mov
jo
xchg
loopne
dec
push
testb
ret
and
pop
rclb
imul
mov
add
or
xor
adc
mov
and
or
mov
cmpsb
pop
lock
lcall
fisttpll
das
push
in
and
repnz
jecxz
adc
movsl
mov
cmp
xor
mov
jecxz
sbb
stos
adc
scas
jge
or
add
scas
dec
inc
mov
push
push
mov
add
adc
or
xor
adc
adc
imul
mov
loope
lods
dec
roll
scas
adc
mov
es
jp
mov
xchg
sub
xchg
add
mov
dec
loope
fidivrl
andl
and
loopne
push
jl
movsb
or
jno
scas
out
lock
out
adc
mov
add
mov
hlt
inc
xchg
add
xor
mov
mov
cmpsl
inc
or
aas
add
outsl
jo
faddl
inc
pop
out
push
or
sbb
pop
fidivrl
inc
cmp
pop
push
inc
notl
arpl
shl
into
decb
push
clc
xchg
or
adc
add
mov
pop
or
cmp
jne
es
cs
jne
and
daa
mov
pusha
mov
adc
push
push
add
add
mov
mov
mov
hlt
dec
inc
or
dec
lods
testl
jg
or
pop
mov
sbb
mov
mov
cmpsl
hlt
inc
arpl
inc
dec
jne
push
or
add
test
out
cmp
push
les
aad
cmpsl
stos
pop
sbb
cmp
aad
mov
sbb
sbb
and
pusha
fildll
arpl
mov
inc
add
mov
sub
adc
fsubl
addr16
lods
cmp
xlat
leave
aas
xor
rol
xor
pop
mov
jp
push
or
pop
mov
jg
push
dec
cmp
xlat
xlat
add
frstor
insl
fs
das
mov
pop
xlat
clc
mov
movsl
add
mov
ret
add
andb
outsb
stos
test
sbb
call
dec
addb
and
and
lahf
add
jecxz
adc
xchg
mov
cs
add
inc
and
es
sbb
push
out
mov
jmp
sbb
and
mov
rorb
cmp
filds
pop
sub
sbb
jno
add
call
daa
add
push
or
push
sub
lods
xchg
xorb
ret
mov
jno
sbbb
push
lea
test
mov
adc
jnp
popa
and
testb
xchg
out
aas
xchg
ss
and
pop
and
cmpsl
adc
or
xlat
dec
pop
sbb
inc
jmp
sbb
rcr
aaa
nop
ret
mov
mov
out
xchg
fs
shrb
sbb
shll
or
pop
sub
adc
or
sub
inc
add
and
push
test
das
sbbb
clc
enter
xor
mov
icebp
loope
lock
ds
push
cmp
lea
insb
es
or
adc
cmp
cwtl
testl
cmp
sbb
push
shlb
cmp
or
inc
mov
rcll
fdivs
fisubrs
inc
inc
loopne
cmove
push
sbb
adc
mov
repz
aam
or
inc
insl
and
rclb
pop
ret
pop
jmp
adc
push
in
xor
es
sbb
scas
lods
or
adc
and
push
popa
mov
cmp
paddq
xor
mov
push
adc
xchg
push
cmp
mov
xor
cltd
jo
js
dec
inc
andl
adcb
add
dec
test
xchg
das
add
inc
jae
je
cli
btc
add
leave
xor
mov
mov
imul
outsl
adc
test
icebp
jg
mov
test
add
add
push
iret
scas
push
adc
adc
add
iret
pop
loope
out
adc
hlt
test
mov
jg
movl
add
pop
addl
insb
push
add
add
inc
add
fcompl
xlat
pop
sti
xchg
push
sbb
or
cmp
jne
xor
roll
cmp
add
lret
mov
xchg
xor
lds
daa
or
lahf
imul
popf
or
dec
dec
add
xlat
sbb
jne
fimuls
cmp
jge
pop
sete
js
adc
popa
fnsave
hlt
sbb
mov
hlt
jns
jne
push
lcall
pop
push
lods
dec
or
mov
push
test
pushf
addr16
dec
inc
stos
hlt
jle
mov
mov
clc
mov
test
les
mov
or
ret
orl
xchg
icebp
adc
jns
movsb
mov
mov
xchg
or
mov
gs
ret
loopne
push
push
and
adcl
sub
pop
lock
xchg
adc
push
push
jge
dec
and
std
ja
sbbl
das
sbb
xchg
inc
pop
mov
push
repz
in
call
sub
shll
adc
call
inc
dec
dec
fwait
daa
shll
add
outsb
je
push
push
mov
mov
jno
inc
adc
idivb
push
inc
dec
je
cmp
inc
add
inc
sub
sub
cmp
dec
or
sbb
push
pop
cs
arpl
nop
pop
xchg
test
daa
or
add
adc
pop
or
sbb
add
push
cmp
push
leave
add
inc
adc
cmpsl
outsl
dec
and
sub
pop
shlb
and
test
mov
shrb
unpcklps
or
call
test
rolb
xchg
pop
adc
add
sub
cmpsl
andl
aad
insb
or
adc
push
sbbb
gs
enter
jns
jne
dec
es
dec
add
call
gs
dec
mov
pop
or
add
cmpb
leave
and
add
pop
add
ds
cmp
fisttpl
out
daa
mov
mov
pop
or
out
test
or
jge
adc
sub
add
push
ret
adc
rcl
mov
lcall
pop
cmp
pop
pop
test
cmpb
sarl
outsb
inc
push
inc
daa
mov
push
xor
pop
push
test
call
mov
bsr
sbb
mov
test
jge
adc
inc
inc
js
lock
cld
push
jbe
outsl
push
repz
add
cld
push
jo
mov
push
pop
faddl
add
push
push
push
add
mov
je
sub
pop
insb
push
jo
adc
mov
out
scas
xchg
fcmove
and
pop
xor
xchg
dec
ja
dec
sub
mov
outsl
insl
cmp
test
pop
lods
sbb
add
ss
imull
mov
sbb
jl
inc
inc
dec
dec
cmp
ljmp
mov
leave
test
mov
fcmove
movsb
movsb
and
mov
call
mov
orl
fs
addr16
xor
and
insb
xor
and
and
and
push
orl
push
push
pop
pop
or
enter
pop
xor
and
and
and
inc
orl
inc
inc
dec
dec
or
enter
dec
xor
and
sbb
in
in
xor
xor
in
in
ss
cmp
in
in
cmp
cmp
in
in
ds
and
in
in
and
and
in
in
es
sub
in
in
sub
sub
in
in
cs
adc
in
in
adc
adc
pop
mov
mov
mov
sub
dec
fadds
ret
rolb
push
add
outsb
adc
and
in
xchg
pop
xchg
mov
mov
test
push
pop
xchg
jnp
xchg
test
jo
arpl
mov
mov
adc
mov
sbb
pop
xchg
inc
sbb
movl
mov
test
data16
inc
jecxz
icebp
adc
add
aad
in
cwtl
mov
fwait
jae
xchg
or
dec
fstps
les
rorl
mov
jnp
in
jae
je
adc
sbb
push
je
cld
pop
xchg
mov
sbb
data16
jo
mov
dec
je
arpl
adc
sti
mov
in
dec
bound
cmc
notl
insb
push
or
nop
ficoml
data16
test
pop
ret
sti
in
addb
xchg
outsl
sbb
cmove
imul
or
je
sbb
or
out
loopne
add
inc
jge
or
push
dec
xorl
adc
test
mov
xor
bswap
call
add
and
push
push
je
fxam
popf
std
iret
insl
dec
outsl
jo
je
pop
inc
jns
sbb
inc
adc
mov
nop
lea
and
add
mov
xor
in
mov
xchg
adc
loopne
pop
ret
gs
outsl
or
adc
mov
add
jne
dec
pop
fwait
shll
pop
movsb
pop
bound
add
imull
or
dec
jge
jp
aaa
or
push
fstpt
lea
addr16
pop
cmp
sbb
inc
outsb
jb
jae
es
pop
roll
lahf
pop
pop
mov
mov
pop
js
xorb
and
dec
fcomp
addl
andps
or
mov
out
mov
add
or
out
or
sub
and
lahf
cld
fwait
dec
pop
cmp
and
mov
cmpsl
inc
and
sub
dec
push
mov
pop
dec
push
jo
shll
data16
and
xchg
cmp
cmpsl
add
pop
mov
cmpsl
jae
je
lret
fwait
notb
jge
test
inc
dec
stc
scas
scas
pusha
nop
pop
mov
jnp
ljmp
pop
fsubs
test
fistpl
cmpsb
ja
inc
or
aaa
pop
add
lahf
test
jns
push
les
push
push
dec
fwait
xor
in
cmp
jp
pop
and
pusha
inc
add
cwtl
xor
push
mov
outsl
mov
push
add
mov
jb
push
jecxz
pop
push
sbb
outsl
and
pop
incl
xchg
pop
aam
sbb
mov
js
mov
pop
mov
rol
add
outsb
add
jl
enter
sbb
sbbl
js
jno
xchg
add
sub
mov
xor
push
movsb
jge
rcr
cmpsb
sbb
push
add
cmp
aas
push
inc
je
pushaw
decl
nop
xchg
enter
jge
jle
jle
push
cmp
in
xchg
add
add
test
dec
lcall
addb
xchg
pop
and
lcall
movsb
and
shlb
daa
add
outsl
outsl
mov
xchg
or
sub
sbb
pop
sbb
inc
lds
push
movsl
pusha
rclb
xchg
add
push
and
push
aas
pop
int3
mov
or
test
outsb
pop
jne
insl
add
pop
rclb
cmp
cwtl
imul
add
das
add
addr16
jae
std
stos
mov
aas
bound
and
shrb
dec
jge
mov
outsb
outsb
adc
inc
outsb
adc
mov
sbb
filds
or
mov
pusha
inc
popf
add
xchg
cmp
or
push
mov
dec
outsl
ja
xchg
mov
je
les
dec
jae
push
pop
or
loopne
pop
dec
adc
int3
nop
jbe
inc
sbb
fcoml
lret
les
pop
and
in
cwtl
jbe
fcoml
jo
arpl
jg
lcall
sub
aas
and
adc
pop
and
das
lds
daa
sbb
push
outsb
bound
fsubr
xchg
fs
pop
inc
push
dec
sub
add
gs
add
inc
ja
mov
fstpl
movsb
push
test
lahf
sub
imul
mov
nop
mov
push
add
push
mov
cwtl
ret
lahf
xchg
gs
mov
popw
and
adc
inc
or
mulb
fsubrs
fadds
mov
push
xchg
add
jns
cmpsl
fidivl
sub
and
sbb
inc
fdivrs
push
pusha
sub
xchg
pusha
cmpsl
add
stos
adc
xor
loopne
out
push
jno
sbb
or
test
push
push
or
popa
cs
pop
and
pop
pop
insl
xor
data16
lds
gs
pop
xor
xchg
cmp
scas
or
cmp
outsw
daa
pop
in
in
lods
movb
adc
shrb
mov
add
adc
aas
orb
mov
push
push
mov
cmp
mov
fcoml
aaa
data16
in
and
lods
jns
fsts
pop
mov
rcr
and
mov
mov
test
add
hlt
shll
repz
adc
mov
mov
mov
push
mov
movd
inc
cmpsl
mov
jg
mov
pop
xchg
push
pop
and
lods
push
addl
push
sub
pushf
shrb
ds
mov
scas
loop
aas
push
sbb
clc
in
cmp
lret
inc
jnp
xchg
pop
lret
xchg
int
push
call
jnp
pushf
pop
rcll
jg
into
add
faddp
aas
fists
loop
je
lret
cmpsb
mov
in
sbb
roll
sbb
pusha
xchg
fisttpll
movsb
xchg
imul
push
and
out
or
outsl
outsb
pop
imul
push
pop
and
pop
pop
repnz
adc
shl
add
pusha
fisubrs
lock
out
int3
pop
loopne
cmp
add
ljmp
cmpsl
out
xchg
and
cwtl
push
rcrb
ja
dec
pop
add
imul
inc
push
inc
cmp
mov
adc
pop
dec
ret
nop
decw
mov
add
ret
les
adc
ret
rol
xor
inc
dec
jne
pop
clc
addb
dec
and
test
dec
es
sub
sti
orl
mov
or
push
stos
dec
stc
push
insl
inc
popf
sbb
imul
pop
movsl
xor
add
or
or
shrb
sbb
aaa
xor
mov
in
in
inc
cmp
push
inc
cmp
xor
mov
xchg
xchg
adc
adc
push
iret
out
imul
or
lods
ret
pop
ss
add
incl
add
or
insb
daa
pop
cmp
movsb
xchg
fstps
xchg
pop
add
sbb
lret
xchg
lds
push
or
insb
mov
lcall
lock
xchg
cmp
sub
cmp
mov
mov
inc
add
xchg
sub
adc
sub
mov
mov
inc
sbb
inc
cmpsl
sbb
inc
cmovs
insl
mov
fidivs
dec
and
inc
or
cmp
je
and
test
insb
sub
mov
inc
jb
push
mov
sbb
and
jmp
mov
jb
xlat
xchg
push
jle
aad
pusha
sbbb
mov
or
and
outsb
and
loope
sub
les
or
add
cmp
lret
inc
add
cmp
pop
jae
inc
and
jmp
mov
pop
jg
push
xchg
imul
rcrb
xchg
lods
adc
mov
insl
jecxz
mov
mov
pop
lea
push
cmpsb
or
test
in
or
in
imul
insb
mov
scas
enter
outsl
outsl
movb
sub
or
fwait
lea
loope
insb
in
push
xchg
xor
aas
dec
popa
jbe
add
jo
ds
loop
push
gs
insb
pop
jnp
in
xorb
push
imul
sbb
dec
xchg
sbb
les
pop
arpl
dec
or
mov
inc
lahf
jne
or
nop
jg
jne
push
jno
popa
mov
mov
or
mov
jmp
bound
imul
inc
mov
jo
insb
inc
dec
addr16
js
ret
mov
inc
imul
das
mov
les
movzbl
pop
jo
push
pop
imul
das
inc
push
addr16
add
inc
je
jp
fldcw
push
xchg
dec
lods
insb
les
or
xor
lock
sub
inc
adc
idivb
sub
xlat
fwait
daa
lock
imul
lahf
sbb
in
mov
fildl
or
pop
rcll
or
mulps
or
sub
xchg
mov
push
mov
adc
les
or
outsw
inc
imul
dec
jb
push
outsb
jne
or
adc
bswap
or
rcl
shrb
lahf
dec
cs
popf
push
rcpps
add
pop
xor
roll
shl
cmp
add
jns
aas
es
inc
das
or
loopne
sub
sahf
jge
push
push
test
aaa
push
pop
test
push
ret
jnp
push
call
ret
mov
aaa
adc
cltd
jne
mov
inc
or
pop
pop
lcall
jnp
testw
pop
inc
dec
inc
push
push
inc
test
adc
inc
inc
xchg
divb
in
arpl
pop
dec
inc
dec
dec
arpl
inc
inc
push
or
dec
dec
inc
push
dec
dec
push
mov
and
inc
push
xchg
inc
dec
dec
and
cld
imul
xor
xor
and
inc
inc
or
dec
in
dec
inc
xor
inc
dec
imulb
cmp
push
push
push
dec
sub
dec
neg
sub
cs
mov
inc
inc
das
mov
mov
or
pop
xchg
aaa
inc
ret
dec
pop
adc
push
push
push
dec
cmp
push
ret
push
inc
scas
dec
inc
dec
push
cmp
xchg
in
push
cmpsl
push
pop
imul
jge
mulb
xchg
test
jl
add
mov
push
push
xor
es
aam
jl
or
cmp
test
xor
popa
jl
orb
sbbb
jne
add
add
or
mov
or
cld
imul
int
or
inc
or
dec
sbb
das
inc
cmp
jnp
mov
or
add
add
adc
xor
ja
pop
cmpsl
inc
inc
mov
andl
cwtl
push
and
test
push
dec
xor
sbb
mov
stos
mov
or
aas
xchg
jno
hlt
jae
mov
aam
push
inc
mov
gs
sub
add
pop
hlt
cmp
adc
push
jae
ja
test
ret
das
inc
inc
or
ds
cmpsb
cmp
dec
sbb
xorl
and
mov
jne
pop
sub
adc
push
mov
pop
test
insb
movsl
ja
arpl
addl
das
cmp
pushf
jo
cli
das
data16
jmp
xor
adc
xchg
sbb
inc
jae
fsubr
fmuls
pop
mov
cmp
push
cmp
arpl
mov
push
sub
cltd
scas
mov
add
fucomi
lret
jns
inc
adc
bound
push
sahf
mov
std
xor
dec
out
dec
fcoml
push
aad
jne
les
enter
inc
sbb
je
mov
dec
mov
shr
adc
and
sbb
sbb
sbb
or
xlat
sub
adc
sub
adc
sbb
mov
outsl
mov
mov
sbb
stc
xchg
jno
mov
aas
movsb
xor
movb
pop
fcomp
add
rclb
jmp
sub
dec
or
and
add
adc
ss
test
bound
xor
call
pusha
orb
or
xlat
repz
jnp
pop
or
push
adc
xor
or
ret
mov
push
inc
jo
cmpsl
mov
dec
pop
scas
adc
test
sbb
or
outsl
dec
sub
sbb
fidivl
mov
sbbl
scas
mov
popf
dec
test
dec
rcr
add
push
xor
les
push
add
push
sub
inc
push
das
fcomip
ficoml
pop
pop
fadd
jp
mov
inc
orb
scas
out
and
mov
or
and
xor
sbb
ret
inc
sbb
xchg
xchg
or
mov
pop
sbb
pop
movsb
push
lods
push
dec
adc
and
cmpsl
in
movb
inc
or
aaa
sub
and
dec
lcall
add
and
and
inc
bnd
sub
and
adc
jge
jl
add
jb
push
movsl
add
xchg
shll
xchg
and
mov
jl
nop
subl
lock
in
sbb
push
jl
adc
push
nop
push
sub
js
mov
add
mov
pop
fwait
push
stos
or
sbb
insl
cmpsl
fs
in
sub
jge
lock
dec
inc
or
push
cmp
roll
push
mov
sbb
and
jb
mov
or
xor
mov
sbb
sub
inc
pop
or
or
xor
and
cmp
js
inc
repnz
clc
jle
xor
jle
lods
call
nop
outsl
add
ret
xchg
test
ret
jg
cmp
leave
xor
push
mov
mov
shll
mov
jg
pop
mov
jg
and
add
nop
mov
sub
lock
mov
mov
push
subb
sub
dec
orb
outsl
insb
das
push
add
fs
and
inc
ljmp
add
in
addr16
jmp
je
pop
mov
add
add
add
lahf
in
gs
lock
in
and
cmp
cmp
dec
or
and
xor
ret
or
movsb
test
mov
mov
push
inc
cmp
add
loopne
mov
or
inc
inc
loopne
adc
mov
inc
int
fs
out
sbb
jnp
adc
bnd
pusha
jge
adc
or
lahf
movl
cld
incl
popf
adc
loope
mov
bound
fiadds
jno
insb
adc
movups
adc
adc
or
pop
push
mov
cwtl
decl
sbb
push
mov
int3
in
testb
add
or
pop
or
or
out
xchg
aaa
sbb
push
push
or
push
sub
push
in
adc
ret
pop
or
fwait
sub
movsb
xchg
or
xor
enter
adc
ja
data16
cmp
and
sub
iret
rcrl
fcmovnb
inc
test
in
xchg
and
or
add
sub
adc
inc
xor
testl
mov
mov
xchg
mov
jo
xchg
call
fsubs
enter
push
in
pop
test
fadds
or
jnp
sub
fsubs
pop
clc
push
insl
pop
xor
mov
or
pop
test
inc
incl
sbb
lea
test
inc
dec
mov
in
dec
push
mov
cmpsl
add
xor
pop
test
sbbb
jne
test
adc
xchg
imul
je
pop
mov
xchg
xor
iret
push
sub
mov
ja
add
enter
sub
or
or
adc
jbe
ja
cld
cmpb
pop
repnz
xchg
add
insb
inc
es
cmp
mov
push
daa
mov
or
pop
push
jle
add
pusha
sbb
jnp
pop
test
jae
lds
sub
sub
dec
or
fwait
or
mov
jmp
xchg
fistpl
pop
adc
shll
xor
pushf
and
movhps
cmp
adc
dec
sbb
and
cmp
mov
and
in
cmpsl
stos
sbbl
xor
add
movsb
mov
aad
inc
jae
dec
mov
ds
or
je
loop
jp
dec
das
mov
push
in
cmpl
cmp
bound
and
es
mov
xchg
lock
sbb
icebp
add
arpl
lods
dec
adc
adc
lea
sub
mov
not
and
cli
adc
jle
xor
ret
je
stos
and
lret
aam
fwait
test
pop
xchg
iret
or
push
add
jns
mov
add
cmpl
mov
pusha
pop
xor
adc
xor
push
xor
xchg
or
pop
push
ret
push
adc
pop
push
adc
test
adc
sbb
dec
cmpsb
sbb
cmp
dec
sti
rorb
adc
and
testb
sbb
bound
inc
orl
xchg
or
mov
std
sti
inc
sahf
xchg
mov
ds
call
or
in
adc
pop
jns
and
add
xchg
out
or
and
add
adc
repnz
dec
inc
add
and
add
mov
mov
and
pop
fistps
push
push
mov
push
stos
push
inc
and
and
adcb
dec
xor
adc
lea
movsb
adc
ret
movsl
loopne
xchg
or
loop
call
inc
jecxz
je
sbb
mov
scas
mov
int3
movsb
je
repz
jge
xchg
aaa
adc
hlt
adc
in
xchg
add
adc
pusha
inc
sbb
push
sbb
aaa
cmp
mov
bound
pop
mov
cmc
imul
jo
xchg
cmp
adc
addr16
mov
mov
mov
pop
and
pushf
sub
movsb
jns
sbb
out
lods
jns
mov
add
out
out
push
push
add
and
fimull
push
xchg
fimull
push
fdivs
adcl
cmp
adc
mov
add
sti
cltd
push
or
add
jp
loopne
jnp
cltd
clc
mov
mov
not
and
mov
adc
sar
outsl
cmp
pop
pop
dec
cmp
cmp
hlt
inc
add
outsl
pop
sub
test
sub
hlt
mov
or
orl
inc
test
adc
stc
movq
jns
pop
mov
stos
test
adc
pop
push
aam
push
xchg
inc
jnp
pop
push
pushf
aaa
adc
sub
daa
loope
mov
and
repnz
cmpsl
fdivrl
adc
or
sbb
inc
jo
jge
and
es
cmpsl
add
and
fsubl
jns
ljmp
mov
into
es
pop
fs
adc
ret
jge
dec
out
mov
sub
inc
inc
js
mov
das
inc
sbb
mov
sbb
push
movsl
mov
imul
add
stos
dec
add
rcll
loopne
adc
or
or
and
bsf
adc
inc
stos
sub
test
mov
fistl
push
mov
mov
or
add
mov
add
movb
push
rorl
adc
jle
js
aas
jno
es
std
test
mov
mov
mov
pop
push
add
jne
testb
adc
cmp
jge
adc
xor
mov
push
sbb
adc
sub
push
sub
inc
pop
pop
aam
jno
nop
pop
pop
loopne
adc
movsl
dec
js
and
test
aad
and
enter
jnp
mov
dec
jns
jmp
rcll
mov
mov
mov
sub
shl
mov
mov
jmp
clc
push
dec
sti
outsb
fisubs
test
add
adc
adc
or
mov
dec
add
cld
lret
xchg
and
push
sbb
mov
jl
jle
sbb
or
xchg
jne
sti
aaa
rolb
jne
aas
push
ret
mov
adc
cmp
mov
lea
fisubl
pop
push
cmp
outsl
mov
jmp
addr16
or
mov
cwtl
and
icebp
push
and
ret
das
mov
or
cwtl
and
les
imul
movb
orl
push
fisubrs
inc
push
nop
notl
and
or
add
xchg
inc
mov
sbb
out
and
jo
pop
mov
push
test
pop
xchg
cmp
cmp
push
push
dec
clc
fisttpll
or
nop
xor
ret
lock
mov
aas
adc
iret
and
adc
dec
mov
aam
mov
or
lret
in
popa
push
dec
pop
add
loop
jne
sub
sub
xchg
mov
test
xor
push
and
daa
jb
adc
sti
stos
insb
imul
clc
movsb
push
xor
adc
push
add
aaa
xor
inc
mov
andb
adc
push
scas
ret
cmpsl
adc
test
shrl
clc
or
push
jmp
testb
je
test
dec
and
dec
and
iret
jp
pop
xchg
jl
arpl
movsl
movl
mov
jno
push
push
add
mov
adc
movsl
hlt
fadds
xchg
mov
jl
cmp
subl
xor
imul
bnd
loopne
jo
pop
pushf
stos
shrl
movl
dec
sub
push
and
or
cld
push
push
adc
jb
pop
mov
sub
adc
jae
arpl
xorl
mov
bound
adc
cmpb
add
lock
pop
add
or
xor
or
sbb
adc
fadd
xchg
testl
cmc
jg
add
add
icebp
jl
aaa
xor
cmp
or
or
jg
movsb
cmp
jle
nop
dec
mov
adc
sbb
inc
sub
add
pop
aam
sbb
cwtl
pop
xchg
push
or
jne
push
and
pushf
push
pop
sti
test
adc
push
pop
fmuls
xlat
or
xchg
adc
fsubs
xchg
sahf
imul
add
inc
test
jbe
in
mov
inc
mov
lods
sub
inc
lds
aas
inc
cmc
and
inc
mov
ljmp
dec
lret
or
jle
insl
xor
ds
ret
imul
sub
ret
decb
loopne
es
cmp
or
jnp
dec
jno
xchg
mov
sarl
push
dec
jne
cmp
push
add
adc
pop
xor
inc
popa
sbb
lds
sbb
xchg
pushl
push
in
add
cltd
rolb
add
stos
pop
push
test
test
dec
or
xchg
xchg
enter
int3
ja
inc
jmp
pushf
xchg
pop
cwtl
mov
jmp
mov
push
mov
and
ret
mov
xor
dec
mov
shlb
mov
cmp
push
mov
mov
adc
mov
imul
xor
loope
push
aaa
mov
dec
xchg
jecxz
fcmovnb
mov
int
pusha
aas
cwtl
push
pop
or
add
inc
push
ljmp
lock
inc
adc
cmpsl
cmpsl
pop
xchg
clc
jmp
xor
fnstsw
sarb
and
push
mov
push
sbb
test
jge
push
inc
jo
jmp
sbb
sbb
sub
add
sub
xor
pop
outsl
or
jmp
punpcklwd
vmovaps
cs
ja
add
fcomi
incb
jge
cmovs
push
jg
lock
pop
sbb
ret
or
and
jmp
test
adc
cmpsl
or
imul
xor
js
dec
mov
add
aam
mov
xchg
mov
jmp
popf
imul
cmpsl
sub
jmp
adc
ret
test
or
lret
in
mov
pusha
cwtl
inc
or
adc
movl
mov
adc
inc
sub
push
pop
scas
mov
pop
or
push
add
pop
or
cltd
sub
hlt
cmc
mov
xorb
push
fiadds
and
adc
inc
push
mov
cmp
jno
and
int
pop
push
imul
or
stos
ficoml
xchg
ficompl
sub
mov
stos
aam
xor
push
hlt
mov
xchg
push
push
loope
or
loop
inc
adcl
lods
and
pusha
add
jns
sub
add
out
sbb
movsb
adc
or
repnz
pushf
pop
add
enter
pop
in
mov
int3
inc
call
or
loopne
xorl
shll
push
imul
fistl
cmpsb
add
fcompl
dec
dec
stc
cmp
repnz
xchg
and
add
add
or
push
lock
lock
add
aaa
pop
fisubl
lea
mov
mov
push
xor
in
and
in
mov
mov
or
lods
data16
sbb
push
insl
mov
lods
cmpsl
mov
cltd
icebp
jnp
push
jo
sub
cmovnp
notb
mov
mov
dec
hlt
test
xchg
fsubr
in
xchg
push
jmp
lret
in
cmp
xchg
pop
loopne
fcoml
pop
call
add
int3
andl
push
inc
movsl
xchg
mov
movb
scas
adc
or
sub
aas
sbb
push
mov
or
mov
nop
sbb
sub
xor
pop
sbb
cmp
adcl
sub
rorb
push
push
adc
and
inc
push
jl
mov
pushf
xchg
das
cli
add
pop
movsl
dec
popa
xchg
sub
sub
adc
imul
adc
adc
xchg
sub
leave
cmp
rclb
or
imul
pop
add
jne
xchg
cmp
adc
sahf
xchg
bound
outsl
add
inc
dec
into
push
sbb
hlt
jbe
rorb
pushf
es
lods
xor
fsubl
in
fstps
push
cmp
cmp
sbb
imul
cmpsb
lock
jge
lcall
sub
mov
ret
mov
xchg
mov
jno
cmp
mov
int
mov
push
pop
adc
sbb
push
mov
push
call
stos
xchg
les
lahf
add
sub
sahf
ficompl
idivl
push
and
mov
or
out
sbb
insl
gs
jb
push
xchg
stos
mov
icebp
inc
outsl
jb
lret
adc
add
out
inc
add
dec
mov
jl
xor
mov
add
add
mov
add
pop
sub
mov
lock
out
addb
fidivs
or
sbb
inc
sahf
inc
clc
pusha
imul
hlt
insb
addr16
cmpsl
jns
xor
adc
addb
nop
js
mov
xchg
push
add
movsl
dec
scas
in
cltd
divb
popw
imul
bound
xlat
mov
add
outsl
mov
add
clc
push
sar
inc
xchg
inc
dec
jne
xor
in
test
std
xlat
push
mov
mov
dec
push
mov
cmpsb
ljmp
push
jp
insl
xchg
xchg
lock
loope
push
cs
lret
mov
dec
sbb
and
mov
sbb
and
aaa
daa
ficoml
cmp
mov
mov
mov
fwait
jo
jne
pop
loop
je
sbb
add
out
add
xchg
xor
push
mov
push
push
jae
enter
dec
xor
leave
or
add
ds
clc
outsl
pop
pop
add
bound
dec
arpl
add
pop
imul
sub
cmp
movsb
inc
and
popf
xchg
sbb
add
add
add
xor
movsl
lods
push
and
and
or
push
rcr
arpl
push
test
xor
push
or
or
sbb
jne
fiadds
es
pop
mov
popf
das
fnsave
inc
jge
sub
or
ja
mov
data16
test
rcr
sbb
xor
mov
or
aas
xor
cmp
rep
mov
cwtl
mov
adc
cwtl
sub
decl
pop
xor
fnstcw
das
lods
outsl
data16
add
test
and
lret
ss
aad
inc
lahf
ds
shlb
pop
jne
mov
hlt
dec
sar
call
les
stos
mov
push
les
out
sbb
push
mov
mov
add
daa
cmp
xor
push
enter
je
test
add
addb
fildl
sub
inc
and
or
js
call
add
xor
pop
mov
das
sbb
sbb
adc
mov
mov
outsb
pop
adc
cs
adc
pop
pop
mov
dec
in
data16
mov
cmp
imul
daa
xchg
sbbb
mov
cmp
and
mov
push
aaa
or
cmp
and
or
incl
movsb
aad
mov
xor
test
test
adc
clc
shl
mov
mov
outsl
xor
test
mov
js
cwtl
mov
mov
mov
rcrb
sahf
and
faddl
xor
add
jmp
and
idivb
dec
mov
test
clc
and
ret
jne
arpl
insb
sbb
test
cmpsb
mov
fsts
icebp
add
xchg
cmc
jo
loopne
mov
insl
inc
jle
adc
sbb
dec
shlb
sbb
inc
mov
leave
clc
sbb
mov
fisubs
scas
mov
xchg
mov
inc
xchg
inc
andb
rcrl
adc
lods
test
jb
leave
pop
push
sub
mov
dec
fidivrs
jns
inc
ja
cmp
insb
hlt
insl
mov
jns
adc
mov
mulb
xchg
sbb
call
js
test
enter
stos
lods
mov
mov
xor
mov
aad
and
xor
mov
sbb
dec
adc
and
inc
push
add
sub
adc
mov
inc
jne
lods
adc
cwtl
stos
mov
xorb
scas
scas
sbb
clc
mov
test
add
rorb
outsl
stos
fwait
push
jo
inc
dec
fisttpll
lea
sub
mov
or
enter
lods
enter
and
subb
iret
mov
pop
or
jne
jecxz
stos
pop
push
in
push
mov
sbb
in
ret
test
shlb
int3
jmp
push
cmp
mov
xor
arpl
jb
cli
lea
or
fists
nop
xchg
and
nop
or
nop
add
and
pusha
add
mov
push
mov
dec
loop
add
jge
pop
adc
push
push
pop
dec
cld
push
mov
push
lret
push
xor
dec
inc
loop
dec
out
mov
or
mov
xchg
adc
xchg
add
add
xchg
sbb
dec
iret
loopne
push
push
adcb
or
ss
dec
xchg
add
add
add
and
and
xor
pop
pop
test
int3
shlb
sbb
and
mov
sbb
pusha
xor
popa
loope
aas
push
lahf
pushf
movb
pop
and
and
or
movsb
mov
add
rorb
add
scas
data16
adc
push
inc
sub
lret
mov
fdivrl
xchg
dec
insb
sub
ljmp
mov
mov
jmp
out
nop
scas
sub
in
mov
push
aam
dec
frstor
test
inc
and
push
pop
sbb
outsl
mov
mov
and
andl
fmuls
call
xor
inc
decl
adc
sbb
arpl
nop
movsl
test
push
cmp
bound
mov
aaa
daa
dec
lock
into
push
push
cmp
jle
les
push
mov
ffree
in
push
fiadds
add
cmpsb
ss
shlb
xchg
adc
inc
addr16
out
dec
inc
popa
dec
dec
iret
add
add
pop
gs
add
loope
test
xchg
inc
jg
pushf
vmwrite
loop
lea
and
adc
daa
pusha
sub
pushw
into
decb
dec
jmp
push
push
sti
mov
int
jmp
ljmp
cmp
lahf
jns
adc
in
sti
push
sub
or
das
dec
xchg
jo
jae
fadds
aaa
ret
adc
push
arpl
add
push
popa
add
adc
je
cmp
pop
and
nop
lahf
ret
dec
frstor
and
jbe
jne
ja
popa
adc
sbb
mov
mov
add
aas
sbb
xor
or
aam
inc
out
mov
xor
sbb
notb
adc
pop
sub
aaa
mov
xor
mov
jbe
mov
iret
les
or
ret
push
dec
or
or
les
or
and
pop
or
daa
cmp
adc
roll
push
jg
push
xor
mov
cwtl
lock
cmpl
je
jne
test
jne
pusha
adc
jnp
mov
lea
sbb
je
dec
enter
fs
les
out
loope
in
lcall
scas
adc
mov
pop
add
adc
sbb
icebp
aad
sbb
stos
add
scas
and
rorb
mov
inc
jecxz
sub
scas
int
lcall
fidivs
enter
repnz
subl
sar
sub
dec
xor
mov
or
mov
xor
and
nop
inc
inc
xchg
cwtl
pop
push
push
ret
pusha
mov
sub
sbbb
push
in
ret
rclb
out
xor
pop
and
mov
idivl
fimull
xor
test
cld
lea
les
dec
repz
mov
xchg
data16
inc
sbb
inc
cmpsl
cld
add
cmpsb
add
cmp
lods
xlat
inc
inc
popf
dec
dec
dec
lock
ret
imul
sub
adc
test
dec
cmp
test
into
mov
or
add
lahf
adc
mov
mov
sti
mov
mov
mov
add
imul
adc
je,pn
cmpb
mov
mov
mov
pushf
adcl
bound
add
loopne
xchg
xor
sar
out
fnstsw
lret
inc
adc
push
sbb
ret
add
fisttpll
and
int
xor
adcb
dec
insb
lahf
add
adc
pop
clc
rorb
leave
pop
xor
ret
ret
add
add
inc
or
mov
xor
jo
push
sbb
das
aaa
xor
mov
pop
loope
sbb
xchg
cmp
xchg
or
adc
pop
or
sbb
add
xchg
or
fcomip
pop
enter
push
orb
int3
int3
mov
enter
or
clc
cmp
jle
dec
fs
adc
mov
faddl
inc
pop
sbb
sub
cmp
subl
inc
dec
fmuls
mov
pop
xor
and
jl
sbb
jle
dec
adc
inc
daa
sbb
pop
aam
jb
movsl
ret
push
adc
sahf
lcall
and
xor
adc
and
cwtl
adc
call
popa
sbb
mov
imulb
cld
adc
and
fimull
cmp
out
imul
mov
bound
sub
int3
pop
or
cs
mov
shlb
or
scas
mov
inc
sub
movsb
mov
scas
push
pop
push
js
imul
scas
into
orb
lret
je
lock
std
push
mov
pop
pop
and
inc
addb
dec
orl
lds
mov
je
sub
adc
add
repnz
dec
push
rcrb
add
aam
sub
adc
in
push
sbb
mov
sub
jae
xor
test
adc
push
mov
pusha
aas
mov
in
jo
imul
sarb
add
pushf
data16
jp
cmpsl
out
jnp
sub
sbb
mov
mov
pop
iret
inc
push
repnz
or
enter
sbbb
push
adc
insl
out
mov
or
or
rclb
nop
addb
out
mov
mov
adc
adc
fisubrs
adc
aas
movb
and
nop
inc
push
data16
jmp
imul
pop
dec
pusha
dec
xchg
pusha
add
xchg
lahf
enter
mov
insl
sub
mov
push
sbb
mov
decl
mov
stos
dec
rcl
dec
sub
and
daa
je
lret
mov
cmp
and
cmp
pop
pop
add
mov
mov
and
mov
push
inc
movsb
aas
mov
jg
mov
stos
pusha
lods
or
pop
out
sub
and
xor
lods
mov
push
movsl
pop
and
pop
test
cmp
mov
pushf
xchg
movsl
xor
inc
mov
push
sbb
push
mov
pop
and
adc
repnz
or
or
in
jno
shll
add
mov
jg
aaa
mov
orps
les
lahf
ljmp
pop
pop
dec
adc
enter
int
pushf
pusha
pop
add
mov
pop
pusha
pop
aad
jb
push
fistpl
mov
xor
xor
les
in
orb
or
shlb
out
outsb
rcrl
dec
mov
mov
adc
daa
sbb
lea
push
sub
mov
dec
dec
pop
cmpsb
cmp
je
mov
jbe
mov
fistl
fcomi
les
xchg
adc
jecxz
add
or
imul
es
cmp
mov
sbb
repz
mov
jb
pop
sbb
arpl
pop
ja
xchg
push
inc
sbb
cs
ror
jb
les
xchg
int3
subl
pop
aad
je
fildl
jne
out
punpckhbw
es
adc
movl
dec
or
pop
popf
iret
lods
push
xor
cmp
jne
add
or
sbb
sbb
add
aaa
lcall
sbb
sbb
sbb
sbb
in
in
inc
jne
sub
js
or
add
jp
ret
add
sbb
js
push
xor
push
sbb
mov
or
les
xor
mov
xchg
jae
ja
pop
pop
xchg
or
data16
test
mov
addr16
mov
or
fadd
adc
lds
inc
pushf
fdivs
sub
and
mov
lds
push
xchg
pop
fsts
es
push
sbb
push
push
call
jno
sbb
and
ja
pop
es
add
mov
add
insb
es
adc
mov
jbe
and
and
lods
xchg
lods
fisttpl
xchg
mov
push
or
mull
sub
in
add
or
and
fnstcw
cmpsl
mov
cmp
pusha
stos
aad
and
iret
in
nop
add
imul
hlt
add
jecxz
cwtl
inc
cmp
and
add
or
xlat
out
mov
mov
inc
sub
cmp
je
mov
pop
daa
sub
push
adc
das
push
sub
ror
fcmovb
inc
mov
add
xor
ret
or
insb
lahf
dec
inc
push
mov
stos
fs
test
dec
arpl
cmp
jne
mov
xor
test
xchg
sub
insl
xchg
mov
jnp
mov
or
enter
enter
pop
lods
leave
or
insb
xlat
sbb
pushf
xor
xor
xchg
mov
imul
lea
mov
dec
push
cmp
jns
shll
dec
sbb
and
add
sub
data16
pop
mov
mov
dec
xor
adc
mov
inc
xor
lea
lea
aas
pusha
and
and
cmp
push
mov
enter
popa
sbb
psrld
loopne
mov
jne
xchg
jbe
cs
cmpsb
out
std
loopne
test
xor
dec
and
incl
mov
push
inc
add
pop
xchg
mov
aam
adc
out
sub
sub
int3
push
jecxz
les
adc
xchg
arpl
gs
test
pop
and
enter
call
add
into
mov
aam
iret
sub
cmpsl
lods
dec
jo
inc
jp
inc
or
rorb
or
les
mov
ds
or
push
push
push
dec
arpl
xor
dec
pop
outsl
dec
lock
shlb
ret
sbb
cmp
lods
shlb
adc
jbe
bswap
xchg
jecxz
mov
pop
sbb
push
inc
or
add
cmp
cmpl
jbe
inc
addr16
inc
leave
hlt
mov
ret
cmp
lret
cmc
movb
inc
inc
sbb
test
or
sbb
pop
rol
outsb
add
push
sub
sub
adc
push
cmp
sub
lock
imul
push
inc
cmp
cmpb
test
mov
sbb
xchg
ret
out
jns
in
jecxz
imul
rorl
adc
lea
orl
aaa
fsubrs
out
xor
pop
inc
mov
je
nop
adc
xchg
mov
push
insb
popa
jo
orl
sub
imul
lods
or
mov
frstor
in
mov
xlat
inc
dec
int3
dec
stos
or
or
inc
fildl
arpl
icebp
sub
mov
and
and
adc
push
dec
jb
sbb
or
xor
push
mov
sbb
sbb
addl
shlb
jp
into
lods
and
sub
or
pop
call
cmp
xchg
xchg
push
mov
stos
sbb
jno
imul
add
mov
push
fdivs
inc
inc
lret
iret
sub
jl
in
add
or
roll
fnstenv
sub
xorb
movsb
add
es
xor
ret
add
hlt
cmp
shlb
or
insl
hlt
icebp
bound
daa
xor
enter
dec
add
or
test
mov
es
jmp
int
adc
testl
pop
xchg
adc
andw
lret
int
scas
add
bound
test
jo
in
or
pop
add
inc
dec
jnp
rol
cli
sub
testb
and
shrb
test
xor
rcrl
push
sbb
add
ja
xor
out
push
sub
dec
sub
scas
rol
xor
aad
or
push
test
or
push
ret
in
aas
cwtl
fnstsw
repz
dec
pop
mov
sbb
in
inc
loop
jo
adc
xor
push
dec
sub
shlb
cs
pop
leave
add
sub
add
inc
jecxz
adc
jae
dec
xchg
mov
xchg
iret
mov
xor
jnp
call
jge
pop
dec
inc
or
adc
leave
xlat
inc
sbb
outsl
sbb
jns
and
addr16
roll
mov
incb
movsb
lods
add
mov
mov
sbb
mov
pusha
in
insb
ret
adc
das
adc
in
sahf
add
sub
push
adc
aad
adc
lods
sbbl
or
mov
add
sub
es
push
sbb
cmp
dec
inc
pop
shr
adc
stos
addl
or
sbb
out
outsb
dec
dec
or
jo
jl
and
insb
add
stc
sub
add
popf
popa
loopne
sbb
lret
lock
mov
fists
add
inc
xor
mov
test
or
add
push
rorl
sub
mov
sbb
pop
add
or
fildll
inc
sub
add
jmp
addr16
sbb
pop
mov
or
xor
push
pop
pusha
adc
add
shll
cmp
es
jge
shlb
push
sub
adc
xor
stc
adc
daa
dec
je
sub
je
or
ret
mov
xor
or
cmp
jl
arpl
gs
orl
pop
mov
push
jmp
mov
icebp
jp
out
lahf
pop
xor
mov
or
add
lret
bound
fdivrs
mov
push
jl
fs
xchg
dec
rcr
mov
imul
sub
sub
je
into
sub
je
out
add
mov
add
jo
xor
push
jne
lds
mov
push
pop
sbb
and
rcrl
js
lods
xor
add
add
lcall
dec
pop
mov
jge
fcomps
add
gs
js
mov
and
aam
dec
push
mov
add
mov
dec
or
scas
hlt
outsl
sbb
cmp
push
add
xchg
ja
jae
lret
and
pop
sub
add
jle
mov
inc
inc
inc
mov
push
xor
push
and
dec
xor
adc
hlt
jae
leave
mov
mov
mov
outsb
mov
fisttpll
pop
add
roll
test
mov
push
sub
push
mov
fs
fidivl
daa
add
loopne
or
xor
mov
int
mov
arpl
pop
push
aad
lock
andb
aam
loopne
movb
pop
fcomp
dec
jmp
cs
shrb
jg
insl
mov
rorb
adc
mov
pop
push
mov
call
imul
mov
lea
jmp
daa
push
push
or
xchg
push
sub
ljmp
test
call
inc
int
push
or
mov
movb
pop
jnp
sub
ret
push
add
test
mov
mov
inc
lods
arpl
mov
xchg
and
rcrl
shlb
jle
inc
jo
ficoml
and
daa
pop
or
pop
ret
bound
js
fcoml
popl
cmp
fs
dec
test
lds
ja
jbe
xchg
lock
mov
sbb
push
or
rol
push
adc
sub
dec
lcall
gs
les
pop
mov
daa
adc
sahf
cmp
gs
mov
jo
ret
aam
lds
sbbb
or
pop
and
add
fwait
add
or
ljmp
or
ffreep
fbld
mov
push
lods
mov
repz
mov
rcr
sbb
faddl
stos
and
lds
sub
decl
out
push
push
inc
cmc
shlb
or
push
sub
daa
fadds
push
push
call
pusha
lock
push
movsb
add
fldcw
daa
xor
cmp
in
clc
cmp
pusha
dec
push
aad
inc
dec
mov
inc
sub
add
jo
outsb
imul
mov
mov
leave
sbb
aas
xchg
and
inc
test
ds
adc
mov
mov
sbb
add
mov
in
or
pop
psraw
push
cmp
cli
mov
push
adc
inc
adc
stos
and
shlb
push
ja
mov
pop
push
ja
jo
mov
jns
dec
and
mov
dec
xchg
xchg
stc
xchg
pop
mov
imul
pop
imull
mov
das
xlat
imul
jbe
adc
test
sbb
fisubs
cs
xchg
fistl
and
inc
cmp
mov
pop
mov
or
xchg
fiadds
jno
mov
xor
pop
lods
push
imul
or
jmp
or
sub
dec
je
hlt
data16
insb
enter
std
xchg
cmc
rorl
jae
push
push
xchg
adc
into
xlat
jnp
pop
mov
mov
int3
das
mov
or
shrb
add
push
pusha
jae
loope
movsl
xchg
mov
inc
rcrl
dec
rolb
es
xor
fstpt
lcall
xchg
lock
pop
dec
shl
sbb
mov
das
xchg
orl
adc
dec
and
mov
outsb
insl
jmp
and
dec
sub
cwtl
dec
mov
and
mov
popf
mov
adc
or
lock
in
enter
mov
sub
shrb
dec
and
jnp
and
adc
and
nop
fsubs
mov
pop
or
pop
mov
fcmovnb
call
mov
jle
push
sub
lret
stc
mov
popa
adc
test
push
dec
push
jle
outsb
add
in
adc
push
fmull
jne
mov
inc
mov
push
and
test
loopne
popa
bound
and
push
xchg
test
movsb
mov
lods
lods
adcl
sarl
fmuls
fcomps
ljmp
jl
sbb
pop
out
bsf
or
mov
pshufw
add
pop
imul
mov
cmp
fsubr
sub
daa
lods
loopne
sub
loop
push
cltd
out
xor
push
adc
push
jo
aaa
pop
sbb
mov
and
stos
lea
dec
push
push
jnp
fimuls
jns
ja
or
movsb
push
movhps
add
ljmp
and
das
icebp
add
cmp
mov
push
jecxz
addb
xchg
mov
dec
add
aas
mov
inc
xchg
rorl
cmp
or
int
fs
sbb
and
sarl
aad
or
adc
push
cmpsl
xchg
or
add
lea
push
or
and
push
add
cmovg
shl
adc
push
and
sahf
out
adc
inc
xlat
jb
test
lcall
loope
adc
jb
mov
test
arpl
stc
xor
test
dec
inc
in
cmp
sub
lods
addr16
das
dec
int
orb
add
dec
sbb
xlat
inc
inc
rcll
adc
inc
and
rcll
mov
adc
loop
push
sub
or
sbb
cmp
mov
in
sbb
xchg
mov
push
pop
fldenv
add
push
mov
inc
mov
pop
push
cmpsl
sbb
movl
push
rolb
flds
leave
enter
inc
clc
add
cli
pop
and
adc
jmp
out
clc
jmp
mov
jno
aad
mov
dec
dec
out
adc
jmp
mov
lahf
dec
ret
or
inc
jmp
and
int
mov
inc
push
mov
jp
sub
mov
ljmp
notl
push
adc
dec
cli
xor
inc
cmp
loop
cmp
add
icebp
jmp
add
mov
ret
pop
mov
sbb
stos
movsl
test
loop
or
daa
aam
adc
cli
enter
mov
pop
and
sbb
jle
outsl
push
lds
mov
push
push
add
cmp
insb
dec
aaa
mov
push
in
add
jmp
in
in
mov
iret
movl
icebp
sbb
adcb
push
rorb
aad
and
xorl
cs
add
inc
test
add
add
cmp
mov
cmp
in
in
and
cwtl
test
push
aad
or
sub
test
inc
pop
mov
in
and
push
lea
cmp
jae
sub
mov
cmp
jmp
xor
cmpsb
jecxz
push
inc
sub
loope
jg
or
adc
andl
lods
xchg
andb
inc
or
or
sbb
in
daa
cmpsb
xchg
daa
and
and
and
xorl
xor
push
push
xchg
inc
sbb
lock
adc
and
es
inc
push
scas
or
adc
dec
push
test
pop
jmp
inc
std
pop
lods
jge
xor
testb
je
adc
in
aaa
pop
jns
mov
mov
imul
dec
xor
jecxz
fwait
push
sub
inc
popa
sbb
dec
sub
mov
lret
ret
call
sub
les
sbb
adc
xchg
test
jmp
cmp
je
dec
fsubs
inc
fstl
rorb
aam
mov
jl
jle
and
inc
daa
imul
sahf
leave
out
je
dec
js
clc
aam
xchg
sbb
adc
lahf
mov
or
cwtl
ret
aaa
add
fadds
xlat
rcrb
inc
and
adc
xor
xchg
sbb
add
pop
rclb
adc
out
inc
or
fadd
xor
sti
mov
add
xchg
jmp
or
jmpw
or
and
sbb
cmp
lds
inc
add
mov
cmp
adc
faddl
pop
adc
or
inc
daa
and
out
dec
inc
adc
mov
xchg
shrb
enter
inc
pop
add
test
add
sbb
aam
sub
test
or
dec
sbb
or
sub
push
add
dec
icebp
inc
loope
pop
repz
movzwl
and
lret
aaa
shlb
add
testl
xchg
or
movaps
call
dec
jno
xor
jo
pop
push
jbe
sub
insl
cmp
pop
hlt
data16
push
out
fisubrs
xchg
in
inc
cmp
scas
sub
dec
inc
sbb
or
mov
sub
adc
pop
lret
dec
popa
jecxz
jno
and
imul
notl
outsl
ljmp
push
or
cmp
sbb
fsubs
cmp
sub
pushf
pop
pusha
shlb
add
fnstcw
pop
jo
add
xor
sub
imul
sub
mov
cmpsl
push
fadd
add
add
daa
push
das
icebp
add
mov
xor
or
push
cmpb
out
enter
push
daa
lods
fwait
cwtl
je
lock
adc
rorb
andl
xchg
add
xchg
imull
push
push
inc
movsl
mov
fimull
jg
pop
mov
in
jmp
loopne
xorb
add
les
inc
fidivl
daa
and
push
mov
insb
and
pop
incl
adcl
bound
pop
mov
loopne
mov
in
push
mov
or
scas
inc
xor
scas
adcb
jns
pop
mov
out
jp
mov
mov
es
lahf
in
dec
movsl
and
cmp
jne
push
mov
cli
push
mov
sub
sbb
jns
jge
call
mov
mov
pop
ret
sub
xor
pushf
mov
lock
xor
adc
or
in
fsubl
dec
sbb
pusha
xchg
sbb
lcall
mov
sub
or
adc
or
sub
shrb
insl
rcrl
orl
shll
adc
enter
dec
dec
into
sbb
inc
cmp
jo
push
dec
inc
cmc
je
inc
loope
pop
mov
jne
add
or
bswap
jo
nop
insb
push
out
cmpsl
xor
lea
jle
push
mov
hlt
out
stos
or
jbe
sbb
mov
out
mov
inc
adc
js
clc
repnz
cld
sub
js
mov
xchg
jmp
mov
prefetcht1
pop
mov
insb
enter
and
out
fsts
jne
lds
xchg
test
outsb
sub
cmp
xor
sub
xor
andl
popf
adc
and
mov
adc
mov
cmp
fisubs
jno
scas
aas
out
loopne
mov
mov
in
cmp
adc
push
in
hlt
call
push
pop
in
push
lock
jg
aaa
push
cmpsb
xor
ljmp
sub
mov
pusha
and
mov
fisubrs
adc
mov
cmp
and
aam
sub
rorb
mov
mov
mov
jae
mov
int3
xor
adc
insb
mov
es
jne
pop
cld
in
add
sarb
push
jl
dec
dec
inc
mov
ja
aaa
xchg
add
sbb
mov
icebp
test
xchg
xor
repnz
fs
nop
mov
lcall
mov
push
icebp
mov
add
or
test
pop
mov
cmp
fs
mov
push
pop
incb
push
or
arpl
sub
nop
iret
pop
movsb
iret
inc
jl
les
push
mov
mov
mov
movsb
sbb
or
mov
pop
or
fadd
inc
enter
sbbb
xchg
test
lret
imul
add
sub
mov
xchg
daa
je
and
test
aaa
or
push
flds
xchg
les
dec
adcl
iret
push
xor
or
add
cmp
push
xor
push
daa
jg
leave
add
nop
aad
repz
dec
inc
add
add
add
bound
clc
push
js
add
js
je
adc
imull
sub
hlt
lahf
inc
aam
xchg
jmp
mov
push
aas
pop
outsb
mov
mov
mov
adc
out
adcl
test
or
out
movb
sub
lret
stos
and
inc
aad
push
sbb
or
imul
fldcw
pop
insb
and
inc
into
sahf
addb
and
xchg
and
mov
pusha
adc
push
test
or
add
sub
push
push
mov
cmp
inc
xchg
push
adc
dec
adc
and
lock
pop
jge
sbb
enter
and
dec
mov
mov
sbb
inc
add
xor
inc
outsl
addl
jle
or
incb
popa
cmp
jle
push
pop
jbe
clc
aas
push
jle
mov
in
lods
loope
das
sub
loopne
push
cmp
aam
pop
and
dec
and
hlt
in
cmpsb
pusha
pop
and
lds
cmp
aam
pusha
das
sbb
shr
sub
js
add
aam
pop
jmp
pop
lock
push
cmpsb
pusha
test
adc
cmc
push
daa
adc
loopne
sbb
dec
adc
outsl
testl
push
mov
push
push
mov
and
ss
push
es
and
sbb
dec
lock
cmp
in
push
inc
or
test
cmp
mov
mov
mov
jo
fsubrl
jp
aam
dec
xor
mov
aam
fs
pusha
cmpl
jmp
mov
shll
add
outsb
add
xorb
pop
clc
leave
add
adc
unpcklps
or
inc
and
ds
jno
jl
jb
cs
lea
ret
xchg
adc
shll
inc
dec
leave
push
outsl
dec
push
push
dec
inc
pop
xchg
daa
adc
jno
test
push
cltd
in
mov
pop
pop
test
enter
iret
sahf
sbb
or
jb
jl
fs
inc
pop
mov
pop
pop
pop
and
and
mov
ret
jne
aam
jne
xchg
inc
ss
jae
cli
mov
mov
cmpsl
test
adc
add
push
push
add
or
lcall
inc
js
inc
stos
gs
pop
je
inc
gs
repnz
sub
fcompl
xchg
neg
mov
arpl
add
and
pop
ss
sub
add
sbb
insl
dec
fisubl
add
xor
ss
push
mov
push
push
mov
lea
sbb
insl
fwait
push
loope
into
insb
popa
jns
xor
and
incl
ret
bnd
pop
jge
mov
xchg
lret
dec
xor
testb
negl
pop
in
pop
add
sbb
xchg
ret
push
push
sbb
sarb
rcll
sti
push
fs
pop
add
cli
and
es
jg
mov
pushf
inc
gs
js
lods
prefetchw
test
sarl
xchg
cld
mov
pop
rcll
mov
lods
cmp
inc
push
ret
xor
int3
pop
int3
inc
cwtl
fsubrl
ud2
inc
imul
xor
xchg
push
add
xor
adc
sti
push
imul
inc
popa
adc
cld
push
movlps
in
mov
or
jnp
adc
out
rcl
push
add
unpckhps
jo
dec
dec
dec
loope
popa
push
jnp
or
ss
add
rorb
or
add
push
pop
fs
add
iret
xor
std
int3
and
ds
or
mov
sbb
push
sbb
das
lods
add
stos
test
andps
sbb
xor
mov
inc
pop
add
pop
punpcklbw
sub
mov
fwait
fs
sub
pop
jns
enter
push
pop
or
mov
push
mov
jl
loopne
lods
icebp
push
sti
paddd
imul
push
pmullw
das
aaa
mov
or
lcall
or
xor
sbb
and
fwait
sbb
filds
mov
ds
cmpsl
xor
add
fwait
jecxz
mov
test
pop
or
dec
add
mov
sbbb
fcoms
prefetcht2
add
pop
fimull
push
andl
test
mov
inc
jmp
dec
notl
mov
es
js
shl
ja
add
pusha
mov
mov
les
pop
push
inc
sub
iret
test
mov
clc
lds
cmp
sub
mov
out
insl
pop
mov
sub
cmp
inc
pop
out
nopl
repnz
sub
mov
sbb
pop
movl
movsb
cmpsl
jle
mov
add
jae
inc
iret
daa
std
push
stos
cs
adc
sub
sub
xorb
dec
fnstcw
rclb
add
ljmp
adc
adc
xchg
jnp
hlt
frstor
testb
test
call
add
push
push
ret
shrl
stos
xlat
icebp
dec
out
push
cwtl
or
in
inc
jg
push
sub
pusha
and
adc
pop
adc
fidivrs
xchg
fcmovb
sub
out
or
mov
mov
orb
sbb
dec
mov
sbbl
fs
insl
pusha
fmull
mov
cmp
lret
add
imul
adc
xchg
pop
mov
add
es
movsl
xchg
inc
hlt
sub
jnp
fstpt
sbb
in
add
add
fisttpll
or
mov
push
xor
cs
lret
ficoms
and
leave
sub
popf
sbb
popa
add
fucomi
daa
pop
rolb
repnz
jle
mov
adc
jmp
mov
sarb
and
inc
and
pop
xchg
add
icebp
or
mov
add
cs
add
daa
inc
mov
jg
jne
sbb
sbb
or
fwait
adc
mov
xor
pop
xchg
mov
cmp
add
lock
dec
add
xor
das
icebp
cmp
out
rolb
loopne
mov
add
xor
std
cmp
fsubl
rorl
fadds
mov
ds
xor
inc
lods
pop
addb
add
inc
pop
fadd
and
pop
std
sub
xchg
inc
mov
in
imul
sbb
push
mov
dec
add
push
jle
lret
das
jno
adc
adc
or
xor
aaa
das
dec
mov
aam
icebp
inc
es
negl
dec
xlat
push
lret
pushf
in
sbb
fmull
cmp
test
je
xor
inc
dec
lea
jbe
decl
adc
loopne
fcomp
lock
loopne
mov
or
je
jmp
mov
sub
sbb
and
add
fnstenv
cltd
lret
call
aaa
add
adc
or
cmp
add
cmp
aad
sbb
jmp
inc
dec
ja
ret
inc
test
xchg
adc
dec
test
nop
insl
push
dec
add
mov
mov
sbb
inc
call
es
push
cld
jmp
mov
inc
inc
push
in
push
lock
pop
dec
loope
dec
pop
add
jno
addl
cmp
sub
pusha
js
shll
xchg
mov
pop
cmp
leave
jmp
or
xor
out
xor
sbb
nop
and
lahf
add
aam
pop
in
stos
or
pop
sbb
adc
clc
out
sub
dec
sar
fcmovbe
loopne
jecxz
mov
xchg
imul
lods
test
ds
add
mov
add
or
xor
loopne
dec
cld
mov
iret
sti
push
dec
jp
dec
je
or
sbb
xchg
lahf
mov
and
add
test
push
inc
mov
lds
aam
dec
add
adc
jbe
ret
out
loopne
xchg
nop
pop
xchg
xor
lods
xlat
aam
pop
pusha
sti
mov
sbbl
inc
inc
ja
push
adc
or
adc
sbb
out
es
pushf
pop
xor
lea
dec
jg
dec
sub
pop
int
xchg
xchg
add
jl
adc
pop
xchg
out
je
cmp
mov
pop
movsl
xchg
outsb
arpl
or
lods
test
inc
add
imul
xchg
xor
pusha
and
test
loopne
dec
pusha
es
xchg
ja
sbb
test
test
lods
mov
mov
and
test
iret
jnp
or
jns
xor
mov
mov
inc
es
mov
mov
fs
ss
adc
out
sub
xchg
cmp
enter
popa
mov
push
pushf
xor
iret
jae
pushf
push
sbb
mov
sub
arpl
les
inc
sub
push
inc
es
sub
and
mov
xor
mov
inc
insb
loop
inc
outsb
hlt
fcom
rorb
sub
push
add
mov
sbb
cmp
outsl
jae
daa
cmpsb
rorl
dec
add
sbbb
into
shrl
loope
push
loopne
sub
aas
adc
jnp
sub
push
push
sub
jbe
jns
jo
sbb
push
shl
inc
adcl
pop
adc
add
add
out
test
mov
and
aas
or
push
pop
pop
inc
push
and
outsb
jae
popa
pusha
and
fcompl
nop
push
adc
jg
adc
leave
add
mov
cmp
add
sbb
adc
shr
ds
pusha
add
or
mov
jl
mov
fistps
test
jl
pushf
fstl
jmp
sbb
pushf
pushf
pushf
enter
pushf
pushf
pushf
aam
fsub
pushf
pushf
pushf
pushf
in
in
lock
clc
cld
sti
add
add
or
jb
jb
adc
sbb
jb
jb
and
sub
jb
jb
xor
cmp
jb
jb
inc
dec
dec
push
jb
jb
push
pop
pop
pusha
jb
jb
fs
inc
jno
jg
and
cs
popa
xchg
scas
mov
loope
out
adc
push
mov
cmp
or
xor
roll
sub
xchg
xor
xchg
dec
sbb
jbe
push
mov
cmpl
push
jb
iret
enter
and
cmpl
enter
fcoml
mov
enter
and
fsubr
cmpl
in
nop
int
pop
and
xor
sub
push
cld
inc
ljmp
add
or
iret
cmpl
enter
adc
iret
cmpl
sbb
jae
and
and
ss
xacquire
add
cmp
sub
inc
cmp
nop
out
cmp
inc
add
in
inc
test
xchg
dec
movsb
jns
in
push
mov
shl
sahf
add
pop
pop
mov
nop
clc
pusha
sbb
fs
cmpl
enter
jo
add
dec
pop
je
xchg
inc
pushl
lods
mov
xchg
fdivrp
inc
cld
mov
gs
gs
xlat
inc
add
push
sbb
inc
insb
outsl
jae
and
sbb
adc
fimull
adc
das
loope
clc
add
mov
push
in
xor
add
mov
test
daa
push
adc
jge
mov
mov
add
pop
gs
addr16
fs
mov
scas
pop
dec
arpl
jae
sbb
movsb
sbb
scas
dec
fs
add
insb
jns
jnp
jae
sbb
fildl
dec
lods
sub
add
add
add
ficoml
out
mov
mov
xor
push
arpl
pop
cs
or
add
pop
mov
pop
dec
xor
pusha
mov
jmp
xor
jno
add
cmp
popa
sub
and
mov
in
add
mov
mov
pop
or
pop
fcompl
in
pop
or
aas
pop
sbb
and
sub
xchg
shll
loopne
das
push
and
pop
xchg
sbb
jns
outsl
addr16
mov
jbe
pop
fs
inc
bound
xor
push
das
dec
and
push
pop
and
arpl
inc
outsl
arpl
xor
sarl
jo
fcoms
or
outsl
pop
add
test
jbe
pop
ljmp
adc
adc
pop
in
push
cmc
ret
mov
cmp
clc
js
and
pop
add
jg
daa
push
lret
js
movsl
sbb
push
dec
loopne
bound
add
in
sahf
mov
add
dec
or
inc
push
sbb
out
les
out
cmp
test
cmp
sub
nop
nop
mov
icebp
das
sbb
sbb
pop
rorb
adc
push
add
add
inc
xchg
pop
and
add
fsubl
hlt
cld
push
idiv
adc
sti
push
push
xlat
add
aas
add
mov
jle
fsts
mov
pop
add
repz
push
mov
fcoms
mov
xor
rolb
mov
or
push
cmc
call
xchg
push
xor
add
xlat
inc
pushl
lret
push
push
mov
push
fwait
pop
movb
rolb
cmp
enter
or
es
inc
lods
and
ret
push
xchg
mov
add
popa
sbb
sub
push
cmp
orl
mov
pop
inc
push
incb
out
push
loopne
je
mov
add
movsl
add
push
jg
lock
cld
push
stos
inc
add
hlt
orb
rcrl
mov
or
out
push
or
dec
dec
dec
pop
hlt
inc
or
xorb
outsl
xchg
mov
fwait
push
sbb
push
dec
dec
xor
bound
sbb
nop
adc
ficoms
imul
cmp
push
mov
cltd
xorb
cmp
cmp
push
mov
vandps
insb
wrmsr
lcall
mov
inc
xchg
push
icebp
clc
dec
scas
add
pusha
mov
push
enter
adc
out
pop
or
loop
pcmpgtb
in
add
push
lods
jne
add
in
dec
add
xor
aaa
loopne
cli
sbb
or
dec
jbe
xor
or
sub
ret
mov
xchg
sbb
pop
xchg
sbb
xchg
js
fcomps
pop
sub
add
mov
mov
lock
rorl
dec
lock
rcrb
imul
stos
hlt
and
mov
inc
dec
outsb
inc
adc
xor
jo
pushf
cmp
repz
mov
nop
fadds
scas
add
fisubrl
push
sub
or
mov
cmp
xlat
fwait
mov
call
ja
jae
or
xchg
dec
adc
call
and
in
cmp
js
inc
or
push
and
xor
imul
sbb
xor
lods
rcl
and
sbb
out
xchg
inc
fcoms
imul
and
or
xchg
loopne
jecxz
sbb
dec
push
jo
bound
push
mov
xorl
and
jno
sub
bound
mov
adc
sub
dec
add
rcrb
push
push
pop
aad
gs
insb
dec
sbb
dec
or
dec
lds
in
ljmp
jae
push
daa
dec
rcrb
mov
jbe
push
std
ret
add
or
add
ret
jne
aaa
and
and
dec
sbb
cmp
mov
rol
or
dec
fdivrs
dec
adc
fiaddl
sarb
and
leave
dec
add
pop
insb
test
pop
push
add
les
pop
mov
adc
test
test
je
adc
adc
inc
addl
adc
cmp
stos
sbb
push
into
imul
lods
and
in
add
leave
dec
push
add
pop
rcll
push
jbe
mov
inc
add
add
pop
frstor
dec
daa
pop
mov
out
xor
int3
insl
sbb
testb
rcll
aam
xchg
daa
cmp
sahf
sub
xchg
push
inc
xchg
xchg
xor
add
ret
lea
fldl
cmp
lea
bound
dec
mull
daa
and
faddl
cmp
push
adc
inc
dec
inc
addb
jae
cmp
jl
or
add
cld
cmp
aaa
outsb
insb
cmovb
mov
add
das
imul
gs
jae
pop
cmp
xor
xchg
int
adc
mov
cmp
mov
nop
pop
aaa
sarb
orl
test
add
xlat
pusha
ja
cwtl
pop
mov
add
mov
sarl
mov
mov
mov
add
mov
incl
adc
loopne
dec
inc
push
es
cwtl
or
push
inc
mov
out
and
and
lret
add
inc
or
bound
or
mulb
les
mov
mov
sbb
nop
push
pop
sbb
in
mov
js
iret
aaa
lea
add
and
pushf
inc
or
and
push
or
dec
or
push
add
fcoml
shll
mov
or
cmp
sbb
xchg
dec
cltd
dec
ret
popa
pop
aad
les
in
adc
add
sbb
sbb
data16
add
dec
inc
mov
and
sbb
in
rorl
or
sbb
in
outsb
dec
test
mov
lock
sub
sbb
and
push
rcll
jnp
cltd
jg
call
cmp
jle
dec
movsl
mov
push
movsb
dec
repnz
add
sbb
cld
and
push
push
mov
arpl
push
test
adc
mov
stc
or
and
popa
arpl
and
add
push
sbb
sbb
mov
cmp
cmp
jo
xchg
push
leave
and
icebp
add
jo
pushf
xchg
push
addb
repnz
push
dec
lret
pusha
jnp
mov
push
pop
pop
and
lods
xchg
add
xchg
pop
lcall
fildl
pop
lea
mov
mov
leave
test
adc
pop
and
pusha
pop
sbb
pop
dec
es
ret
daa
mov
addb
jo
xchg
jmp
rcll
fsub
pop
movsl
inc
push
push
ja
sbb
daa
inc
sub
je
sub
jno
pop
mov
int3
inc
inc
xchg
mov
push
jecxz
cvtps2pi
xchg
insl
add
mulb
enter
dec
mov
das
icebp
inc
aad
mov
pop
lahf
xor
xor
lret
mov
sahf
inc
mov
xor
mov
mov
call
or
or
xor
ss
push
xchg
repnz
inc
shlb
cmp
inc
js
les
mov
cmp
or
add
mov
pop
cmp
andl
clc
sbb
rcll
pop
and
sbb
aas
inc
cmp
lock
frstor
jb
pop
inc
push
dec
inc
xor
pop
mov
xor
cld
movsb
inc
add
fwait
push
cmpsl
sub
xor
dec
or
cmp
jp
jl
jl
in
jns
push
push
fsub
imul
loope
xchg
lcall
xchg
daa
es
in
or
mov
mov
imul
inc
fisubs
push
lcall
inc
mov
xchg
add
clc
cwtl
inc
test
and
mov
dec
flds
add
add
push
cmp
mov
jge
mov
int3
adc
out
mov
in
inc
inc
or
add
or
flds
mov
std
or
orb
repnz
fs
mov
pop
rol
xchg
sub
push
js
iret
and
and
test
andl
imul
mul
mov
test
mov
fwait
adc
inc
push
push
clc
or
dec
mov
aam
adc
and
call
or
popa
popf
loopne
sbb
mov
cmp
sub
dec
hlt
adc
mov
jno
jne
adc
int3
ds
cmp
jg
cmp
aaa
and
jp
jbe
dec
adc
dec
jb
adc
mov
adc
adc
stc
mov
pop
cmpsl
fwait
out
mov
xchg
ret
ret
faddl
mov
jbe
fucomip
mov
mov
push
add
dec
xor
jmp
cmp
jle
xchg
pop
and
das
sarl
pop
mov
aaa
sbb
jge
xor
loop
and
sub
sar
je
in
jmp
sbb
addl
or
fwait
mov
scas
ss
addl
add
dec
push
or
inc
add
test
cmpb
inc
lret
push
movb
insl
repnz
adc
xor
adc
mov
enter
lods
fwait
mov
jns
leave
xor
mov
in
pop
pop
adc
addl
or
push
jns
inc
sbb
dec
add
aas
mov
outsl
cmpb
imul
and
pop
andl
jo
fisubrl
cli
dec
cmpb
add
push
jo
or
aaa
cmpb
clc
add
push
nop
xor
pop
and
jle
push
add
int3
mov
mov
iret
sbb
orb
pop
testb
adc
lcall
les
mov
or
pop
mov
adc
push
mov
inc
mov
xchg
xlat
xor
rclb
push
in
sti
dec
cmp
sysret
shlb
adc
enter
jne
js
inc
xor
dec
das
jnp
jge
dec
enter
jne
cmp
scas
pop
sbb
enter
imul
push
xor
mov
xor
aaa
adc
sbb
xchg
jno
jmp
adc
jne
and
push
lods
add
jne
mov
cmp
es
pushf
shrl
mov
sub
jg
and
outsb
ljmp
jl
adc
add
or
or
jmp
loop
outsl
sbb
shlb
sbb
mov
pop
pop
dec
fcoms
inc
sub
sub
add
inc
adc
aaa
jmp
xor
sbb
ds
pop
das
mov
out
add
dec
jbe
xchg
rorl
sub
lock
or
mov
mov
mov
jnp
or
push
xorl
mov
mov
jbe
cmpsb
cmp
jl
push
repnz
push
fidivs
mov
popa
xor
imul
imul
dec
sbb
dec
cmp
loopne
inc
add
pop
lock
cmpsb
push
cwtl
fs
lcall
rolb
xor
sbb
les
sahf
aam
jbe
sbb
cmp
fldt
fsubs
aad
mov
rorl
pushl
and
lcall
add
insl
bound
add
daa
dec
pop
icebp
cmpl
add
out
imul
sbbb
xchg
mov
stos
dec
mov
adc
je
sub
imul
or
inc
in
push
adc
xor
add
cltd
mov
insl
enter
adc
push
inc
rcrb
or
add
ss
hlt
adc
push
push
adc
ret
adc
sbb
cld
adc
ja
push
mov
cmp
pop
xchg
lret
test
or
dec
add
pop
mov
pop
ja
mov
xor
movsl
add
popa
test
mov
arpl
daa
imul
mov
cmp
ret
pusha
loopne
or
ss
inc
pop
mov
mov
shlb
hlt
imul
inc
xor
dec
push
xlat
mov
jnp
jbe
dec
cmp
outsl
push
mov
in
imul
or
cmp
pusha
push
dec
push
lock
pop
dec
cmp
mov
movb
jo
inc
add
ret
ret
push
enter
mov
lcall
fnstsw
scas
imul
jae
roll
shlb
mov
nop
into
pop
dec
popf
stos
mov
xor
int3
xchg
in
clc
enter
dec
mov
into
enter
ret
arpl
add
mov
pop
xor
or
cmpsb
xor
jns
xchg
push
mov
xor
push
mov
pusha
cmpb
xchg
jp
je
push
xor
inc
test
dec
popa
mov
shll
loop
push
pop
lahf
cmp
and
sbb
or
cmp
xor
ja
pop
jns
and
dec
cmp
inc
nop
mov
pop
test
mov
cwtl
push
jle
mov
jae
or
mov
sbbl
mov
push
push
mov
xlat
subl
xchg
or
mov
sub
pop
cltd
mov
sbb
leave
mov
fiadds
enter
push
js
adc
jmp
shlb
dec
mov
add
flds
out
cmpsl
pop
mov
decb
test
or
loope
mov
and
adc
js
flds
adc
mov
data16
push
loope
jo
outsl
fcoml
fildll
adc
adc
pop
das
rolb
test
and
repnz
push
imul
lahf
sbb
lods
pop
in
xchg
imul
adc
js
and
adc
add
sbb
adc
mov
mov
dec
inc
fstl
cmp
sub
sbb
sub
cmp
xor
jne
push
xlat
test
push
adc
lock
xor
inc
inc
hlt
xlat
sbb
mov
ds
push
inc
mov
push
aas
and
fildl
or
paddusb
and
data16
inc
inc
add
pop
inc
bound
or
or
lea
dec
outsl
js
mov
sub
or
mov
push
mov
push
dec
dec
cld
sbb
stc
mov
cmp
mov
and
mov
push
enter
rol
je
mov
push
or
sbb
data16
sbb
push
jo
sarl
add
je
in
pop
inc
push
push
in
test
inc
add
test
call
sub
sar
pop
rolb
mov
out
ljmp
cmp
or
add
out
push
addl
inc
inc
jne
adc
les
and
add
cmpsb
mov
mov
popa
shll
mov
adc
push
and
aaa
adc
enter
xchg
adc
cmp
gs
cmpsl
nop
mov
ret
orl
negl
movl
insl
dec
xor
ficompl
lea
or
and
cmp
dec
dec
clc
cmpb
and
add
ljmp
inc
lea
lea
dec
rcrb
imul
jne
and
xor
sbb
inc
lock
sub
push
sti
jl
jnp
jne
adc
lcall
dec
inc
sbb
fdivl
push
jns
insb
jmp
arpl
hlt
jo
add
inc
cli
jmp
xor
outsb
ja
lods
xchg
xchg
in
test
fcomps
inc
xchg
add
cmpsl
pop
add
cwtl
sub
jo
mov
rep
rolb
mov
xchg
xchg
mov
mov
iret
inc
jae
pop
sub
in
adc
lret
cwtl
mov
push
out
or
dec
jbe
pop
mov
sahf
and
mov
inc
cmpsl
outsb
sbb
jae
sbb
push
or
enter
add
enter
add
and
and
or
or
push
cmp
enter
icebp
fs
inc
push
repnz
nop
inc
push
sbb
div
inc
push
sbb
cli
push
sbb
cld
std
sbb
jmp
loope
nop
inc
push
loop
in
inc
push
sbb
out
jnp
xchg
das
imull
push
cmpsb
mov
or
add
xor
hlt
test
call
fsub
aam
int3
shll
mov
dec
mov
lods
mov
test
dec
shll
mov
xor
rcll
dec
shll
fs
pop
pusha
push
pop
dec
shll
cmp
dec
shll
and
xor
shll
and
or
cs
rcll
add
inc
cld
add
xor
movsl
hlt
test
in
lock
shll
fmul
xor
shll
enter
xor
shll
adc
dec
test
incl
in
add
test
mov
and
cmpsl
or
add
and
inc
je
push
insb
das
inc
loop
push
rorb
iret
jbe
mov
push
and
call
pop
inc
sub
das
inc
xor
inc
jno
insb
call
adc
mov
js
pop
fcoml
pusha
cld
data16
push
rcrb
movsb
jle
adc
and
add
pusha
inc
push
cmpsl
daa
stc
test
dec
leave
orl
test
or
mov
cli
les
daa
in
jnp
mov
mov
inc
rorl
gs
adc
imul
in
xor
dec
inc
sub
pop
pop
xor
gs
pushf
and
cmpsl
and
andb
lahf
inc
rorb
fs
and
sbb
and
mov
mov
mov
dec
xor
mov
jg
pop
stos
add
push
mov
dec
add
pop
xchg
jg
test
pop
loopne
xor
inc
imul
cs
dec
popa
jns
cmc
cmp
add
adc
dec
pop
daa
bound
cmp
dec
dec
xor
add
push
jecxz
cmp
not
xor
cmp
andl
or
xor
sub
test
cmpsb
jge
push
push
adc
adc
sbb
sbb
add
add
arpl
clc
add
btr
mov
add
adc
add
jmp
add
cmpsl
or
dec
mov
sbb
dec
movb
shrb
mov
jo
xchg
dec
sub
and
add
pop
in
loopne
xor
sub
cltd
pop
popa
or
gs
or
dec
adc
daa
fwait
adc
ret
xchg
push
out
xchg
inc
add
pop
imul
dec
or
sbb
lcall
dec
adc
arpl
inc
cmp
mov
or
inc
inc
mov
mov
stos
sub
loop
xor
jo
aad
mov
js
add
fwait
hlt
cli
inc
jmp
xchg
fisttpll
inc
int
pop
add
aam
xor
add
xor
xchg
lahf
mov
pushl
dec
sub
jne
hlt
add
and
fistpl
cmp
cmp
mov
mov
sbb
mov
test
enter
dec
dec
cltd
lock
dec
rorb
push
add
inc
js
pusha
outsl
add
mov
xor
xchg
pop
mov
push
push
ret
dec
dec
add
rolb
sbb
inc
shlb
xor
popf
dec
jl
decb
int3
inc
pop
roll
dec
cltd
adc
jle
add
pop
sbb
jbe
add
sbb
movsl
pop
mov
dec
push
or
xchg
mov
lds
rcrl
mov
cmp
pop
arpl
sbb
loopne
jecxz
lret
xor
cmp
mov
enter
or
sbb
mov
push
shlb
pop
cmp
rcl
cmp
or
inc
jmp
dec
lcall
lea
push
mov
mov
mov
and
mov
xchg
and
pop
mov
or
add
xchg
cmp
and
int3
xorb
imull
push
fwait
add
dec
cmp
or
pop
lock
es
sbb
fidivrl
and
mov
add
insb
adc
into
inc
jmp
or
and
stc
pop
cmp
andl
mov
mov
xchg
les
push
push
xchg
es
jbe
pop
sbb
dec
lahf
addr16
stos
pop
shrb
pusha
dec
mov
inc
or
pop
repnz
movsb
jge
mov
adc
iret
gs
inc
popa
xchg
push
adc
movb
and
jne
pop
and
sbb
mov
insl
mov
ret
out
xor
out
push
mov
clc
clc
clc
sbb
or
cld
add
aam
imul
cmpsl
and
push
or
push
push
cmovno
test
test
lock
push
dec
inc
jne
nop
jno
call
dec
ja
pop
mov
enter
fdivs
js
popl
dec
mov
push
out
mov
sub
shr
shrb
sbbl
scas
cmp
or
push
add
test
clc
cs
rclb
mov
push
inc
push
xchg
push
in
fisttpll
jle
push
adc
inc
bound
adc
or
xor
sub
popl
je
add
stos
sub
shr
or
mov
mov
and
pop
stos
cmp
jne
or
mov
mov
adc
testb
dec
icebp
add
int3
push
fmull
or
ss
push
js
cmp
in
add
dec
xor
cld
push
in
add
mov
push
sub
xchg
sbb
push
dec
push
loopne
push
int
mov
xchg
in
imul
mov
sub
insl
das
inc
imul
aas
and
xor
xor
dec
imul
mov
jne
mov
outsl
add
arpl
insb
push
or
adc
xchg
int
insl
inc
outsl
pop
js
arpl
pop
pop
daa
jo
jb
jb
popa
lret
pop
cmpsl
or
adc
fnstcw
fisubrl
data16
daa
ja
fisttpll
imull
jo
addr16
jb
outsl
ret
addr16
push
mov
pop
mov
cmpsb
insb
daa
push
lcall
or
fld
das
je
cmpsl
sbb
pop
in
xlat
and
pop
cmp
mov
cmp
pop
je
jo
fidivl
daa
jns
outsl
sbb
cwtl
int
pushw
das
add
fidivl
outsl
pop
sete
push
pop
mov
js
lea
shll
frstor
and
cmp
sti
add
add
pop
and
mov
enter
jmp
jle
je
mov
cmpl
mov
and
push
clc
pusha
adc
stos
andb
rolb
mov
nop
cmpb
mov
jl
or
and
out
ljmp
push
mov
js
mov
divb
inc
dec
loopne
fldcw
jne
pop
pop
js
sbb
mov
mov
or
sbb
stc
das
icebp
movsl
jbe
inc
mov
jmp
xchg
inc
aam
mov
mov
add
addr16
xchg
loope
mov
xchg
adc
sub
lahf
or
xchg
xchg
xor
pusha
lcall
fadds
push
dec
iret
lret
adc
into
ja
insb
test
and
add
imul
jl
rclb
xor
jns
shll
in
and
pop
jmp
add
add
std
sti
add
dec
jb
or
jb
jmp
shll
sbb
add
adc
inc
es
inc
sahf
cmpsl
cmp
aas
sbb
pop
xor
out
add
and
cmpsl
js
out
add
adc
add
dec
jo
jecxz
cmp
add
jnp
xchg
mov
pop
cltd
adc
sbb
pusha
rorl
adc
loop
jg
push
adc
add
movsb
pop
mov
pop
xchg
gs
add
add
push
cmpsb
imul
or
or
or
or
or
imul
cmpsb
imul
jge
lret
cmpsb
sbb
sbb
and
and
fstps
xor
repz
pop
dec
pop
insb
jge
dec
shll
jecxz
lcall
daa
cmp
lcall
sahf
lods
imul
imul
mov
insb
jp
xchg
sbb
add
fwait
add
or
add
and
cmpb
push
repnz
xor
adc
adc
cmpb
push
or
or
xor
or
or
or
enter
or
add
or
sub
sub
and
adcb
adc
repnz
xor
cmp
iret
cmpb
inc
repnz
xor
inc
pop
dec
iret
cmpb
dec
sbb
enter
push
sbb
sbb
out
iret
rcrl
push
popa
sahf
out
lcall
cmp
test
and
in
in
and
add
mov
mov
mov
pusha
push
gs
pushf
and
les
cmpsb
adc
les
cmp
inc
jno
loopne
pop
add
push
lea
jmp
in
arpl
pop
cltd
js
lock
inc
je
or
pop
push
jo
sahf
mov
fsubrs
add
cmp
lock
push
roll
nop
notb
push
icebp
int3
mov
push
pop
mov
add
sarb
or
push
or
fwait
dec
pop
push
lea
and
sub
mov
or
out
jo
add
push
xchg
popa
adc
out
add
addl
sbb
les
jns
jnp
or
adc
inc
shlb
pop
lds
gs
or
pop
aam
movsb
push
adc
mov
mov
leave
or
add
mov
cmp
dec
call
into
fidivl
xchg
mov
mov
adc
xchg
inc
pop
popw
sub
mov
push
je
mov
out
xor
pop
popa
and
fistps
push
and
js
push
lahf
es
and
xchg
pop
push
fs
pop
shlb
es
pop
inc
push
pop
push
xchg
or
add
and
adc
adc
adc
leave
push
xor
inc
and
call
loope
rorl
inc
aaa
sub
and
push
inc
push
inc
sbb
mov
pop
xchg
test
cmp
mov
push
and
movsl
es
adc
int
adcb
enter
fs
sub
cmp
xchg
sub
cs
in
in
xor
enter
repz
add
add
xor
lret
push
cmp
out
mov
test
xor
or
cmpsb
sti
adc
push
dec
ror
fcmovnb
dec
push
orb
mov
ja
mov
inc
dec
jno
mov
and
stc
or
incl
adc
adc
jmp
in
mov
test
mov
push
mov
pusha
mov
adc
xchg
bound
aam
mov
push
pop
sub
push
and
xchg
cmp
and
movsb
cwtl
nop
dec
or
xchg
shll
sbb
push
stc
popa
adc
and
movsb
pop
sbb
and
nop
xor
mov
insb
add
add
pop
notl
and
mov
leave
movups
ret
mov
adc
add
dec
push
jl
enter
scas
xor
xchg
xor
xchg
mov
aaa
dec
sbb
push
inc
push
mov
inc
xchg
jo
jmp
adc
push
add
sbb
std
jmp
lock
sub
movsb
leave
add
pop
adc
jo
and
add
outsl
test
or
dec
xchg
add
add
daa
sbb
sbb
sub
movsl
stos
in
sub
add
dec
push
mov
sub
inc
sub
or
cmp
js
dec
inc
xchg
gs
xor
inc
push
xor
add
or
movsl
movl
outsl
dec
or
dec
lret
push
fsubrl
jo
inc
push
or
lods
scas
popf
mov
jno
pop
jo
pop
leave
inc
insl
push
and
les
xchg
fdivs
in
es
mov
dec
add
adc
pop
add
je
das
xchg
rorl
xchg
adc
xchg
jb
mov
in
out
int
movsb
pop
xchg
loopne
jbe
pop
xchg
adc
cld
scas
insl
cs
je
lods
test
mull
mov
mov
xchg
adc
push
int3
lock
cwtl
or
or
fs
pop
jo
adc
and
test
lcall
xchg
push
or
in
inc
ja
xchg
pop
mov
adc
add
mov
push
pop
sbb
adc
add
lds
aas
and
push
call
inc
pushf
jp
lar
inc
dec
popf
loop
push
pop
andps
andb
aad
arpl
fstl
xchg
outsl
push
push
test
fwait
or
sub
insl
add
nop
fs
and
xor
imul
adc
leave
and
add
dec
cld
mov
aam
push
jae
test
xor
jb
push
sbb
and
sbb
mov
sbb
adcl
inc
mov
test
movsl
sbb
rcrb
dec
insl
adcb
push
icebp
mov
push
dec
loopne
adc
cwtl
mov
xlat
and
cmp
dec
popa
js
outsb
xor
js
add
inc
dec
mov
xchg
pop
mov
and
add
addl
xchg
adcl
ja
les
mov
jbe
push
xchg
xchg
pusha
push
xor
xchg
lcall
inc
sub
lahf
movsl
mov
or
lret
mov
cs
test
inc
dec
push
data16
daa
in
sbb
cmp
xor
or
xor
adc
xor
xor
ss
movsb
cmp
mov
int3
fmuls
ss
cmp
loopne
xchg
add
loopne
push
or
inc
push
xor
push
call
mov
xchg
jae
enter
cmp
ds
les
jbe
cwtl
addr16
adc
sub
roll
dec
push
filds
cwtl
pop
add
nop
insb
jnp
stc
add
cmp
out
push
cwtl
orb
cs
mov
push
and
and
mov
push
mov
pop
xchg
out
mov
push
dec
repz
daa
icebp
or
les
movsl
mov
push
add
sbb
mov
push
inc
jne
adc
addb
mov
jnp
xchg
jl
pop
inc
add
pop
jo
push
pop
pop
cltd
sbb
pop
add
inc
xorl
fcoml
pop
cltd
push
jo
mov
jmp
lcall
push
popa
fadds
mov
or
sub
cltd
int3
ret
push
scas
adc
xchg
jl
jge
jb
insl
pusha
pop
mov
jnp
sub
add
lock
adc
enter
pushf
inc
pop
fwait
cmp
add
jl
add
xor
imul
dec
decl
popf
pusha
pop
ret
loopne
mov
push
push
js
icebp
cmp
sbb
scas
bound
add
inc
subb
xor
mov
mov
xor
test
push
jnp
pop
dec
xchg
insb
addr16
scas
aam
jo
and
rorb
sbb
sub
out
add
adc
dec
cmpsb
xchg
test
cmp
add
loopne
pop
add
mov
insb
mov
xchg
stc
sbb
sbb
sbb
or
sbb
inc
fcoml
sbb
andl
or
lcall
and
and
fs
and
xchg
stos
fs
cmp
sub
sub
inc
mov
cs
aas
mov
enter
push
pop
mov
iret
cmp
test
mov
dec
mov
push
push
fiaddl
mov
sub
sbbb
mov
and
jne
xor
mov
pop
cli
andl
jbe
adc
dec
popa
addb
mov
pop
push
outsl
je
jge
mov
dec
add
das
lods
push
rclb
push
mov
adc
insl
dec
shlb
test
dec
ret
scas
pop
mov
inc
shrl
dec
hlt
test
inc
repnz
sbb
andps
inc
jmp
sub
or
and
push
sub
outsl
pop
jne
jne
out
mov
scas
mov
push
push
pop
push
push
and
arpl
mov
xchg
repz
add
sbb
lea
mov
call
ret
xchg
outsl
movzbl
outsb
cmp
das
add
xchg
xchg
fisttpll
out
xor
sbb
mov
mov
popf
xchg
add
clc
inc
dec
push
cld
and
sub
dec
dec
fistpll
cmp
inc
add
push
push
pop
mov
into
jo
mov
mov
mov
rolb
mov
cwtl
xchg
cwtl
cwtl
or
out
or
into
stos
and
jmp
das
mov
inc
xchg
cmp
test
push
and
add
dec
cmp
jb
push
lea
lea
jp
mov
push
es
and
or
jecxz
clc
addb
sub
push
add
jbe
jns
push
nop
imul
sub
add
je
or
xlat
dec
push
xchg
lea
rol
pop
cwtl
and
lds
sub
jecxz
addl
sub
inc
lcall
test
lret
mov
je
dec
insl
pushf
movl
xchg
pop
daa
or
sub
rolb
jl
ret
adc
push
dec
lea
xor
push
xchg
lock
mov
addb
adc
pop
or
jo
dec
ffree
cmp
mov
sbb
or
mov
lret
push
dec
lea
es
cwtl
jg
jecxz
add
repnz
out
nop
test
add
je
sbb
jo
and
add
es
inc
mov
or
mov
xchg
inc
dec
jne
or
add
sahf
add
and
test
pop
push
push
inc
fsts
mov
scas
jmp
push
xchg
cmp
insl
fiadds
loopne
rcl
mov
aas
or
sbb
pop
lods
pop
rorb
mov
mov
add
mov
sub
hlt
rcll
stos
cmpsb
insl
aam
pusha
jl
push
outsl
mov
sti
add
sbb
or
nop
push
and
sbb
imul
outsb
pop
fstpl
cmp
mov
or
mov
pop
in
jne
add
popa
adc
mov
and
add
cmp
iret
add
adcl
fdivrs
sarb
daa
sahf
and
cs
mov
insb
test
adc
lret
test
inc
push
cmp
push
xchg
or
data16
pusha
sbb
inc
inc
leave
jno
or
adc
mov
push
mov
aaa
xchg
push
ret
inc
jmp
popa
mov
pop
lock
add
or
xchg
mov
mov
xor
cmp
add
stos
rorl
nop
mov
mov
xchg
testb
pop
sub
xor
out
push
xor
scas
rolb
jo
adc
leave
mov
lea
cmpsb
outsb
sbb
jae
xchg
loopne
iret
mov
outsb
push
pop
enter
nop
jge
cmp
cvtps2pd
inc
flds
fwait
xchg
lsl
clc
adc
pop
or
mov
sti
mov
adcb
cmp
inc
adc
jmp
in
push
add
in
xor
or
inc
cmpl
lret
dec
pop
mov
mov
mov
sbb
adc
add
push
xchg
les
sub
lods
daa
sbb
inc
push
sbb
adc
data16
dec
jo
inc
pusha
xor
mov
push
pop
xchg
add
lds
mov
adc
scas
jns
lods
lds
stos
jo
add
cmc
pushf
xchg
xchg
xlat
and
or
dec
add
test
mov
loopne
pushf
scas
push
sbb
xlat
push
jne
sarb
movq
cmp
xchg
int3
cmp
push
pop
mov
mov
adc
daa
adc
and
adc
cmp
add
add
push
pushf
jnp
add
sub
enter
inc
pop
adc
std
lock
mov
cmpsb
movb
dec
test
inc
addr16
or
in
push
push
roll
adc
in
repz
and
xchg
aaa
mov
mov
leave
sub
and
and
xchg
pop
pop
adc
inc
jg
sahf
push
and
jge
sub
test
leave
iret
into
push
inc
jb
sub
sub
aad
addb
push
xor
push
das
xchg
sub
xchg
shlb
sbb
inc
jno
cmp
aad
or
mov
sub
lods
sbb
movl
test
ss
mov
outsb
xchg
test
mul
jnp
push
lock
je
out
adc
add
pushf
inc
add
fnstcw
mov
fldl
xchg
xor
idivl
cmp
jg
dec
mov
sbb
dec
push
and
sub
addl
jae
cmp
mov
or
stos
nop
pop
cli
xor
push
adc
dec
int3
mov
xchg
adc
cld
cld
inc
and
and
xchg
arpl
dec
add
add
frstor
xor
pop
inc
sbb
fdivs
sbb
add
mov
dec
push
enter
loopne
mov
sbb
out
daa
clc
cmpsb
int
jns
push
stos
arpl
sbb
jns
adc
sbb
xchg
or
add
call
inc
inc
dec
into
dec
cmp
sub
fs
inc
imul
xchg
mov
cmp
je
mov
inc
cmp
lea
jp
lock
lret
andl
sbb
shll
jmp
inc
rorl
adc
adc
inc
pop
xor
daa
xchg
dec
add
mov
in
xchg
push
pop
imul
inc
dec
adcb
mov
mov
add
loope
nop
lret
sub
add
push
loopne
je
sti
sbb
insl
inc
incl
cmp
aam
stos
mov
rclb
movsl
push
rolb
or
and
fstpl
push
daa
mov
mov
ja
outsb
push
test
testl
mov
jmp
cmp
or
daa
in
or
mov
pop
mov
jge
jb
push
imul
mov
jmp
mov
inc
fcoms
inc
add
fsubs
test
ffreep
add
sti
add
loope
and
cmp
rol
stc
sub
cmp
mov
cld
xor
mov
sbb
fimuls
xchg
call
arpl
mov
aas
pusha
xor
jmp
cmp
shr
push
jl
push
lock
or
sub
test
rolb
shrl
pop
ja
lods
sub
decl
lcall
fs
jmp
pop
test
or
pop
ss
rol
jp
add
dec
cld
jne
mov
jbe
sub
sub
push
mov
js
cmpsl
or
or
std
pop
pop
mov
ret
icebp
les
scas
xor
mov
out
rcr
es
lock
aam
js
imul
mov
loopne
call
pop
or
enter
add
fcomps
add
imul
mov
mov
add
sbb
mov
push
rcll
int3
scas
push
cltd
adc
mov
enter
adc
jne
clc
scas
movb
aad
add
andb
shrl
add
cli
adc
push
cmpsl
adc
push
imul
add
or
sarl
mov
pop
sub
jno
adc
mov
mov
and
mov
dec
adc
daa
add
idiv
mov
or
jmp
flds
out
inc
test
test
sub
lods
and
cmp
pop
dec
add
push
pushf
mov
fcmovu
icebp
aam
or
jmp
dec
and
xchg
push
rcrl
dec
pop
mov
cmpsl
jmp
or
orl
in
or
cmpsl
imul
fwait
push
dec
sbb
pop
xorl
orl
and
nop
dec
push
adc
adc
data16
es
dec
jecxz
mov
cmc
dec
adc
aas
fdivrs
and
movl
test
dec
and
add
adc
int3
push
mov
stos
orl
add
pop
aas
xor
in
lcall
in
sbb
and
jbe
or
inc
push
push
push
dec
dec
xlat
and
loopne
ss
push
jecxz
add
addl
add
das
inc
inc
xor
or
popa
jne
push
sbb
or
xchg
xor
js
push
std
scas
mov
fdivrs
shlb
imul
and
sbb
or
cmp
scas
popf
push
aad
pop
add
popf
pop
adc
sbb
xlat
jle
movsb
add
pushf
ja
mov
push
cmp
sub
sbb
sbb
popa
cmp
pop
nop
out
cltd
push
dec
dec
cmpsl
pop
mov
or
mov
sahf
stos
dec
mov
dec
mov
lahf
adc
pusha
shrb
push
into
push
inc
push
add
pusha
push
xchg
mov
mov
gs
jl
lahf
pop
testl
mov
das
int
movsb
cmp
js
push
stos
push
sub
test
mov
or
mov
outsb
mov
int3
cmp
mov
lea
and
ja
or
inc
pusha
aaa
or
sbb
lahf
mov
sbbb
push
jg
in
frstpm(287
mul
test
shld
cmpsb
sub
or
cmpsl
cmp
mov
nop
cmp
pushf
mov
jg
sahf
jo
je
cmpsl
push
les
pop
bound
inc
push
dec
shll
std
add
cmpsb
imul
cmp
roll
in
cmc
aad
add
pop
push
fs
dec
xchg
mov
fs
mov
dec
push
test
add
data16
sbbb
add
add
adc
cld
add
mov
fwait
sarb
or
pop
xor
addl
pop
add
addl
xchg
aam
dec
xor
push
lret
mov
ret
dec
mov
and
and
mov
lea
push
and
push
fsubrp
mov
dec
xor
pop
mov
jge
arpl
push
xchg
ja
fstps
adc
fcoml
into
sub
fidivl
push
push
orl
or
dec
test
and
cmp
mov
test
add
popa
ret
sbb
or
test
adc
lods
add
push
test
mov
sub
jns
inc
and
push
sbbl
pushf
xchg
loopne
mov
jbe
daa
pop
jo
ret
mov
mov
cmp
dec
adc
mov
and
inc
adc
ret
dec
inc
ds
clc
inc
fs
adc
popa
dec
add
dec
inc
jo
dec
rorb
test
loope
es
addl
aad
movsl
and
push
sub
and
inc
int3
jae
add
jbe
mov
lahf
bound
in
add
or
lcall
ret
pop
gs
fsubr
inc
and
mov
adc
mov
or
mov
xchg
shll
stos
clc
stc
ret
push
movsl
sub
add
sbb
jecxz
mov
sub
sub
and
sub
push
pop
enter
sbb
cmp
sub
sub
and
xor
ss
add
add
inc
and
xlat
push
add
nop
adc
dec
xchg
or
cmp
sub
mov
repnz
sbb
and
pop
xor
or
das
fldt
aas
jmp
and
cmpsl
and
fadds
mov
add
lcall
mov
imul
or
call
sub
inc
fldt
cwtl
mov
fsubrl
cmpsl
sub
incb
iret
dec
jne
jo
inc
shrl
out
sub
or
cmp
mov
or
test
or
test
xlat
mov
push
xor
cmp
dec
or
int3
enter
and
sbb
push
test
daa
pop
faddl
mov
inc
imul
and
adc
or
or
add
sti
outsl
inc
addl
or
mov
cmp
pop
push
sbb
inc
and
mov
jge
xor
adc
mov
inc
sbb
leave
lock
outsl
mov
pusha
enter
clc
mov
or
psubd
sarb
insb
data16
test
in
mov
enter
and
jne
mov
push
test
push
lret
xchg
icebp
mov
add
xor
push
pop
push
dec
dec
dec
inc
dec
push
add
lock
mov
loope
in
add
xor
aaa
aaa
fs
pop
dec
adc
or
or
ds
push
rolb
inc
or
mov
in
mov
mov
aaa
cmp
aad
jp
and
mov
cld
iret
dec
cmp
jne
sub
jmp
push
adc
jns
push
adc
gs
inc
sbb
stos
stos
xchg
mov
aad
mov
lock
and
pop
mov
cmp
es
pop
loop
test
popa
sbb
mov
dec
pop
adc
mov
add
lea
sbb
pop
adc
add
mov
in
xor
and
cmc
xor
insb
outsb
sbb
cmp
cmp
shl
sbb
scas
imul
popa
or
or
push
push
and
dec
adc
adc
mul
inc
or
sub
add
adc
mov
push
adc
pop
lods
xchg
ret
and
inc
mov
adc
clc
inc
and
pop
sub
xor
sbb
cmp
lods
lea
out
addl
je
and
mov
adc
sti
sub
fiadds
ljmp
pop
sub
lock
xor
loope
sbb
pop
push
xorl
inc
nop
pop
adc
lods
and
push
jg
cmc
sub
popa
add
add
fcoms
insb
sub
shlb
inc
jae
outsb
adc
or
jae
and
enter
add
lods
in
xor
sbb
or
mov
aam
pop
aad
cmpsb
mov
mov
push
push
sar
pop
push
lods
push
mov
adc
iret
or
rorl
enter
adc
add
scas
cwtl
cmp
scas
or
push
jl
movsb
popa
imul
dec
es
sub
adc
or
xchg
mov
scas
mov
cmp
push
clc
test
mov
xor
pop
sbbb
fcom
lock
repnz
cld
xlat
sbb
push
push
push
mov
jg
mov
ret
push
in
cmp
inc
into
add
into
lock
inc
js
mov
sbb
inc
mov
movsb
push
repnz
push
mov
fsubs
lods
mov
cs
push
js
hlt
pop
or
sub
push
mov
xchg
aas
xor
mov
pop
push
mov
shrb
scas
mov
insb
repnz
mov
jb
push
jb
xchg
xor
shll
mov
pusha
lods
pop
fcomps
les
add
add
clc
or
sbb
outsl
add
movb
push
cmpsl
cmpsb
add
dec
push
inc
addr16
sbb
mov
and
sub
push
leave
dec
ret
pmulhuw
sbb
sub
add
cltd
das
nop
fbstp
add
rcrl
mov
push
insl
bound
push
popa
adc
add
mov
add
test
imul
insl
movsb
pop
dec
lahf
xchg
jne
adc
insl
popa
in
arpl
ja
push
inc
in
add
int
aam
shl
mov
addr16
dec
mov
sbb
push
fcoms
dec
push
aas
or
shld
imul
cs
imul
mov
jg
xorl
pop
sub
gs
fnstsw
add
push
popa
imul
adc
or
pop
or
mov
inc
dec
push
or
add
or
xchg
lods
mov
idiv
and
xchg
xchg
pop
hlt
fsubl
mov
add
jge
jmp
pop
push
dec
adc
jnp
mov
dec
movb
xor
mov
mov
pop
xlat
arpl
add
add
inc
or
pop
mov
dec
push
or
mov
orl
add
divl
adc
psrlw
enter
lea
mov
or
cmp
push
shr
dec
xchg
adc
pop
sub
repnz
inc
adc
and
fldt
lds
dec
mov
or
mov
ss
add
lds
mov
or
in
or
ss
rcrb
push
iret
lods
push
shlb
nop
xchg
fcomps
movsb
mov
out
mov
add
jnp
ret
sub
mov
jbe
xchg
faddl
ja
push
bound
sbb
push
pop
popf
push
cmp
add
add
ljmp
push
pusha
or
mov
cmp
sahf
movsb
push
pushf
ljmp
lret
iret
xor
dec
jno
cmpsb
aaa
and
or
and
pop
pushf
add
sub
adc
mov
pop
and
loope
sbb
pop
or
pop
pop
in
test
add
or
andb
iret
lds
add
notl
idivl
lods
aad
mov
popa
aaa
push
or
mov
loope
adc
jns
gs
or
jp
or
sub
cli
loop
jl
add
xchg
faddp
mov
push
rorb
xchg
add
jg
xchg
push
or
push
dec
jo
or
inc
mov
or
arpl
adc
adc
jecxz
push
icebp
ljmp
ss
das
add
inc
mov
jns
mov
push
xor
push
loopne
inc
or
mov
adc
insl
shll
pop
clc
cmp
mov
pusha
mov
jge
add
int
pop
scas
out
and
push
mov
and
inc
or
pop
mov
add
push
add
or
add
arpl
xadd
push
sub
ds
or
pshufw
sbb
outsl
pop
les
in
out
xor
mov
and
subb
add
mull
and
mov
and
pop
pop
frstor
jle
sar
add
in
enter
sub
adc
mov
je
scas
dec
xchg
add
lods
pop
add
add
add
or
lcall
lods
decl
add
add
or
or
and
xor
cmp
inc
incl
in
in
jmp
ljmp
jmp
jmp
jmp
cmpsl
hlt
jmp
jmp
jmp
jmp
fdivrp
fdivr
fiaddl
fdivr
xlat
call
call
call
call
call
call
call
dec
dec
das
decl
sbb
dec
dec
dec
dec
icebp
dec
pop
jae
pop
add
movsb
push
lock
push
movhps
xchg
cmpsb
xor
sbb
cmpsb
imul
fcmovbe
dec
shl
call
and
clc
rcrl
fs
insb
push
inc
push
dec
imul
pop
fs
xchg
test
mov
jnp
andb
and
mov
insl
testb
dec
adc
xchg
arpl
out
or
push
cmp
cmp
pusha
movsl
mov
ss
push
nop
pop
mov
and
or
fcmovnu
lcall
inc
jbe
adc
imul
push
cs
pop
hlt
cmp
push
shlb
adc
clc
xor
pop
sub
fcomps
pusha
cs
push
les
add
mov
pop
sbb
lcall
out
or
push
inc
jae
and
add
pushf
sbb
or
leave
inc
rcrb
leave
jnp
dec
cmp
add
pop
pop
cmp
adc
and
dec
clc
or
shlb
add
loop
inc
jecxz
or
add
aas
pushl
mov
push
push
pop
testl
sub
adc
ret
push
xchg
or
mov
add
xorl
jl
or
inc
loope
lahf
nop
mov
leave
add
mov
xchg
mov
movsb
cwtl
ret
add
add
dec
les
and
jo
inc
out
xor
aam
ret
cs
pushl
lods
or
adc
dec
and
imul
jno
xchg
cmovg
xor
adc
inc
popa
inc
pmaxsw
pop
pop
inc
dec
jb
push
dec
popa
je
add
dec
fcoms
push
xchg
ret
mov
jne
sub
scas
push
imul
sub
fstps
les
pop
rcll
daa
outsl
jle
je
stc
out
jl
ret
bound
or
sub
adc
xchg
sbb
xchg
jmp
mov
and
inc
or
inc
or
mov
insb
xor
add
pop
xchg
jae
js
pop
dec
sbb
mov
std
ret
addb
push
dec
imul
insb
or
int3
add
or
and
aaa
sbb
mov
add
js
mov
in
adc
pop
adc
adc
jns
sbb
in
in
pusha
mov
outsb
nop
out
adc
lds
pop
int3
in
mov
inc
mov
and
or
adc
mov
test
ss
aas
pop
push
call
lods
aas
lods
push
mov
imul
cmp
ja
add
test
ret
inc
out
and
je
sbb
add
add
add
testb
add
add
mov
add
sbb
aam
xor
add
push
add
aaa
mov
mov
rorb
mov
sysret
add
cmp
mov
mov
mov
or
es
mov
mov
mov
mov
push
mov
xor
cmp
decl
add
inc
inc
call
push
sub
sar
mov
or
std
mov
sbb
sar
push
xchg
stc
ret
mov
pushl
bnd
dec
cwtl
pop
dec
clc
dec
sbb
xor
cmpsb
imul
pop
in
movsb
hlt
dec
sub
mov
pop
push
les
dec
push
push
pop
jo
cltd
dec
repz
pop
inc
call
jbe
mov
fwait
jns
nop
dec
jbe
jg
pop
dec
lcall
jl
cmp
shll
inc
jns
pop
pop
pop
jo
out
xor
mov
int
lcall
pusha
int3
lcall
push
xor
dec
pop
ds
push
fisttpl
pop
test
mov
shlb
pop
imul
out
sbb
cmp
pop
push
push
mov
pop
push
jns
xlat
jae
out
fbld
arpl
push
je
daa
push
int3
movsl
imul
and
xor
repnz
sub
pop
insl
in
push
xor
fstpt
pop
push
or
sub
jae
lcall
movsb
cs
push
mov
into
inc
push
and
ret
push
enter
mov
inc
pushf
enter
push
inc
bound
jns
sbb
jp
adc
add
lods
add
add
or
xorl
dec
dec
xor
leave
jmp
cmpl
dec
inc
iret
xlat
or
rclb
test
test
test
test
mov
shlb
cmp
inc
aas
pop
sub
sahf
xlat
lret
push
mulb
lret
les
cwtl
push
mov
popl
push
adc
xchg
mov
in
pop
addl
subps
adc
add
adc
inc
imul
push
jo
bt
or
pop
adc
enter
adc
add
sub
ds
mov
or
sbb
fmul
pusha
sahf
or
lea
punpckhbw
add
or
or
sbb
subl
enter
and
clc
mov
mov
dec
shll
inc
dec
push
pop
shll
lea
cmpsl
or
imul
push
int
int
mov
int
js
cs
push
add
pop
push
int3
out
pop
ds
add
pushf
push
shrl
les
mov
add
pusha
push
gs
leave
mov
push
lahf
sbbb
nop
mov
hlt
lock
test
jmp
addr16
and
outsb
loop
pop
scas
stos
adc
or
cmp
or
dec
mov
inc
fsubs
push
adc
and
push
insb
or
imul
in
shlb
sbb
sub
and
cmp
pop
jecxz
fiadds
or
nop
ret
pop
mov
adc
jge
les
mov
push
lock
sbb
add
xor
jne
jge
bound
jp
dec
xor
and
hlt
out
fwait
mov
dec
jne
dec
enter
insb
inc
mov
rorl
lods
cmp
adc
xor
adc
add
test
cmp
xor
sbb
jae
adc
xor
mov
dec
add
mov
insb
inc
pop
daa
or
ret
rolb
adc
fsts
or
int3
imul
or
and
in
mov
push
inc
or
jns
inc
daa
push
jo
jle
inc
outsb
daa
or
inc
insb
popa
sbb
or
push
inc
mov
out
rcll
or
jo
imul
push
mov
btc
push
movb
add
cmpsl
and
add
add
cwtl
dec
jo
xchg
or
call
add
mov
adc
add
xchg
pop
cmp
mov
out
pop
add
mov
add
or
pop
xchg
adc
or
xlat
push
and
jae
xchg
lea
mov
ss
xor
adc
jb
sub
lcall
sbb
adc
inc
push
mov
adc
or
push
sub
test
lahf
fisttps
push
jne
mov
mov
scas
pop
lcall
pushf
sub
pop
jo
add
add
pusha
filds
popa
mov
les
lret
add
adc
push
push
mov
ljmp
cmp
jl
dec
lcall
movsb
adc
or
sbb
scas
stc
pop
arpl
pop
push
les
and
mov
sub
fcomps
and
sarl
movsb
popf
push
clc
adc
mov
xlat
add
outsb
jo
sbb
mov
shrb
add
addr16
cmp
mov
or
jbe
mov
jmp
mov
rcrl
xor
mov
inc
cmp
mov
add
push
or
mov
sbb
xor
push
dec
pop
xchg
gs
mov
adc
gs
adc
sbb
and
xchg
and
sub
adc
xchg
sub
scas
aad
jb
iret
xchg
push
enter
shrb
adc
sahf
and
jb
fidivl
or
sub
mov
in
sbb
add
hlt
imul
je
pop
adc
aaa
out
aad
sub
ja
and
pop
xchg
clc
cwtl
insl
add
push
sbb
je
shr
xor
mov
mov
popa
mov
adc
outsb
or
adc
pop
push
int
sub
dec
jecxz
lods
adc
or
bound
nop
dec
sbb
out
or
mov
pop
sub
dec
push
adc
xchg
cmp
aas
pushf
pop
adc
daa
loope
imull
mov
or
jmp
jmp
cwtl
xchg
popa
aad
in
adc
sbb
xchg
scas
inc
out
cmp
daa
cmp
sbb
or
cmp
xor
outsb
dec
or
adc
pop
and
cmpsb
adc
fildll
jmp
push
repz
test
inc
mov
sub
xchg
pop
inc
dec
or
dec
dec
stos
mov
dec
inc
sub
fadd
or
scas
out
scas
add
add
push
pop
jp
es
or
aam
inc
or
sbb
xor
and
xor
push
push
aas
sub
movl
lds
add
adc
jae
aam
add
aam
lcall
sub
sbb
or
pop
adc
dec
mov
jp
lods
inc
aaa
into
push
mov
jno
pop
adc
push
pop
pop
insb
insb
push
cmp
jnp
hlt
push
adc
jle
les
inc
inc
stos
mov
mov
movsl
push
or
test
test
mov
xor
aam
xchg
adc
mov
mov
xchg
add
pop
dec
outsb
mov
xchg
or
add
dec
movntps
mov
push
ja
in
outsl
inc
stos
dec
or
adc
push
mov
or
rolb
sbb
mov
inc
inc
imul
mov
insl
add
daa
fisubrl
inc
mov
xchg
mov
out
clc
sub
mov
cmp
subb
and
out
cmp
adc
aam
int
add
jb
dec
movb
adc
xor
adc
dec
push
xchg
xchg
adc
mov
pop
lods
repz
adc
cmpsb
mov
in
push
int3
outsb
mov
shrl
mov
adc
or
jb
pop
ret
je
imul
int
pop
sub
inc
cmp
ds
call
or
mov
je
sti
sbb
mov
in
sub
jnp
jo
repz
lock
sub
in
movsl
inc
ss
jo
fdivrp
or
std
lods
fnstenv
inc
pop
sbb
aam
clc
fnstcw
add
adc
sbb
push
mov
cmp
xchg
inc
dec
test
sub
inc
in
outsl
call
add
repz
mov
je
xchg
mov
hlt
fiaddl
dec
pop
and
pop
daa
xor
adc
in
dec
sub
lea
orb
pusha
cmp
and
or
test
iret
je
sub
rolb
test
push
test
sbb
imul
mov
es
jne
mov
mov
sub
insb
sbb
push
push
ss
jne
mov
jo
ss
jp
jno
pop
mov
or
xor
cmp
lock
xor
xor
xor
sub
inc
jno
ljmp
and
cmp
out
fwait
add
sbb
fisubs
daa
fmuls
sub
add
inc
pop
inc
inc
push
and
or
cmp
loopne
mov
mov
call
adc
or
add
push
push
cmp
inc
jne
and
push
push
cmp
shlb
push
shrl
inc
subl
cmp
sbb
dec
popa
sti
pop
pop
in
sbb
inc
inc
adc
inc
lock
icebp
cld
insb
push
dec
push
jg
pop
sub
push
mov
lods
lret
or
daa
gs
xchg
cmp
dec
push
push
pop
inc
cmp
movsb
movsb
inc
cmp
adc
int
pop
xchg
sub
push
imul
push
mov
and
pop
aam
add
mov
mov
lret
movsl
test
sub
jge
sbb
push
adc
mov
mov
sub
jbe
testb
or
xor
sbb
xor
jb
pop
push
xchg
xchg
mov
sbb
or
test
das
mov
inc
jo
jl
mov
sbb
fnstcw
push
mov
ret
dec
jne
adc
sti
pop
cmc
cmp
je
out
aas
test
aam
push
mov
out
das
rclb
mov
cmp
jne
loop
jecxz
xlat
xchg
adc
divl
pop
sub
push
or
stos
push
subl
dec
push
or
lcall
add
arpl
lcall
push
xorb
lret
sub
or
cmp
out
adc
int3
insb
add
cmp
xchg
add
aaa
xor
sti
cmp
je
ljmp
lret
push
mov
dec
sub
xchg
pop
jbe
add
cmp
sbb
lds
inc
sub
inc
pop
lret
mov
es
pusha
out
outsb
fildl
sti
insb
sbb
adc
lea
mov
fmuls
mov
mov
cmovae
sbb
outsb
and
push
orb
or
std
in
add
fmull
jne
mov
inc
mov
and
in
pop
pop
test
mov
aad
je
fadd
das
sub
dec
js
cltd
test
das
orb
push
push
cmp
xlat
out
nop
movsb
or
insl
sbb
fildll
lcall
mov
loope
loope
jmp
push
jl
or
pop
fmuls
out
out
sub
test
push
pop
xchg
cmc
mov
mov
mov
xchg
imul
adc
mov
adc
js
das
call
fimull
lret
mov
ret
push
push
andb
fidivl
movsb
pop
lahf
pop
stos
fs
sbb
mov
or
sbb
jecxz
ds
lea
js
or
stc
adc
rorb
xchg
cmp
jno
dec
add
dec
daa
xor
xor
leave
pop
and
fnstenv
inc
and
je
jmp
lret
cltd
mov
adc
cli
imul
into
arpl
push
insl
pop
sub
rcll
dec
fildl
inc
sbb
jmp
pop
dec
adc
fsubs
cmp
outsl
jmp
sub
push
sbb
adc
lret
inc
js
lods
xchg
cmp
pop
mov
loopne
dec
cmp
sub
dec
insl
in
pop
push
sub
pop
sbb
arpl
dec
test
faddl
pop
fisubl
sarb
mov
and
mov
and
jecxz
ret
push
and
xlat
cmp
mov
and
pusha
sbb
jo
subps
int3
loop
rcl
fnsetpm(287
stc
pop
cmpl
imul
or
dec
mov
jmp
xchg
dec
rolb
adc
movsb
test
int3
enter
push
call
add
dec
sub
add
mov
add
pop
xchg
lea
jno
dec
push
sbb
addr16
pop
and
loop
push
mov
sbb
pop
roll
and
loope
test
push
push
jne
mov
iret
dec
push
ss
cwtl
shlb
repnz
mov
jb
cs
push
add
dec
stc
mov
jl
lods
mov
inc
incb
rcrl
push
add
out
xor
xor
andb
push
lret
das
push
jg
nop
xor
in
mov
mov
adc
addps
and
dec
inc
sub
movsb
inc
subb
xlat
dec
aas
cmp
xor
sub
testb
cli
jmp
and
inc
adc
in
pop
popa
insb
imul
cmp
jge
xchg
adc
mov
cmpsb
icebp
arpl
cwtl
test
je
test
adc
push
cmp
orl
mov
es
popa
cmp
sbb
and
or
jmp
pop
cmp
push
sub
mov
pop
jl
or
add
mov
pop
or
and
push
dec
dec
imul
testb
sub
push
adc
je
sbb
cmp
movsl
xor
lret
call
mov
and
scas
popa
mov
insb
pop
es
and
notb
in
fmull
jbe
push
mov
xchg
xchg
adc
stc
fsubrs
daa
or
fs
mov
dec
lret
add
jecxz
fwait
movsl
mov
iret
push
push
repz
and
jecxz
imul
lds
out
or
dec
mov
stos
pop
mov
mov
test
add
mov
lds
lret
cwtl
inc
lock
inc
jb
mov
adc
cmp
addl
stos
daa
add
inc
pop
cwtl
add
add
or
push
sbb
out
mov
dec
iret
data16
or
push
or
add
add
aaa
test
jmp
mov
xchg
lsl
dec
aam
inc
in
insb
xor
push
sbbl
aam
aas
jnp
and
shlb
jmp
jmp
sub
outsb
frstor
inc
mov
dec
dec
cmp
sti
ja
mov
dec
mov
adc
hlt
aad
ljmp
in
push
stc
xchg
lret
xchg
mov
fistps
lret
lods
mov
outsb
lret
gs
nop
push
inc
pslld
jmp
or
jmpw
nop
mov
aam
push
aad
aam
dec
fdivs
add
and
jge
lcall
pop
inc
dec
clc
lea
add
sbb
add
cmpb
fimuls
roll
push
fbstp
push
jp
lods
pop
lahf
cmp
dec
data16
jo
push
mov
cmpsl
and
adc
lock
orl
mov
jg
pop
pop
mov
push
test
or
iret
daa
mov
jbe
mov
and
push
adc
or
or
or
dec
add
add
add
mov
ljmp
sti
jg
pop
jmp
cmp
je
mov
test
jbe
pop
adc
or
ret
cmp
push
pop
repnz
sub
adc
pop
mull
out
aaa
xorb
sarl
fists
cmp
jb
cmpsb
xor
pop
fnstsw
cmp
adc
xor
push
out
dec
in
out
pop
pusha
add
push
push
xor
rolb
add
mov
pop
inc
xlat
cli
pop
loopne
js
push
cmp
adc
dec
inc
cmp
les
xchg
js
pop
lahf
lods
cmp
add
inc
enter
and
xchg
mov
out
pusha
push
sbb
push
jb
sub
lods
bound
cmc
xlat
aaa
pop
and
pop
sub
dec
cmpsb
pusha
add
sub
sbb
or
loope
std
fs
repz
add
ljmp
sarl
mov
add
push
addr16
and
jl
dec
shr
sbbb
les
jmp
xor
mov
and
incl
jbe
dec
mov
mov
add
or
and
pop
aaa
pop
and
mov
ret
push
push
push
js
push
sub
sub
aas
jg
add
mov
leave
mov
inc
xchg
push
and
dec
xchg
int
xchg
adc
inc
bound
or
or
xorb
sbb
aas
je
sbb
xchg
shlb
cmp
mov
daa
mov
scas
cmp
push
inc
and
or
and
xor
stc
movsb
aas
lock
ret
adc
or
stos
pop
fimull
push
aas
rcrl
mov
pop
lea
push
mov
add
icebp
cld
adcl
mov
fsubl
sub
mov
fs
orb
pop
sbb
ret
add
movl
call
pop
pop
pop
pop
sbbl
adc
push
pop
add
jp
cmp
inc
cli
add
aas
mov
add
stos
pop
mov
ret
cmc
ja
pop
mov
test
add
test
cmp
cmp
push
push
or
ret
cwtl
nop
enter
pop
xor
jp
int3
pop
cmp
sub
mov
insb
mov
je
xor
test
jmp
cmp
pop
ret
push
push
subl
adc
adc
pop
mov
xor
cmp
fistl
dec
insl
xlat
jno
clc
xchg
push
inc
xor
fs
mov
ja
or
xchg
jge
pushf
inc
add
fadd
push
fadds
mov
cmpsb
es
mov
and
sbb
adc
fcoms
cmp
add
sub
jl
orl
icebp
dec
clc
dec
adc
jmp
orl
subl
push
fsts
inc
cmp
lods
pop
jnp
sbb
and
mov
out
mov
inc
pop
lock
in
loope
add
cmp
sbb
and
gs
push
movsl
xor
pop
xor
inc
pop
push
sti
test
push
sarl
enter
shll
clc
lret
push
xor
xor
mov
ret
ret
cli
adc
sbbl
lds
xchg
clc
or
testl
cmp
aaa
xlat
sahf
ret
push
inc
fcoml
push
idiv
cmp
icebp
mov
call
fs
pop
or
adc
xchg
pop
xchg
xor
and
arpl
clc
dec
ljmp
jmp
cmpsl
imul
or
repz
xchg
push
add
add
pop
cwtl
test
popa
adcb
outsl
hlt
nop
jo
repz
pop
lock
add
cmpl
and
je
cmc
or
xchg
dec
push
out
dec
leave
xchg
rorb
mov
sub
ret
jne
cs
push
jno
or
and
notl
inc
dec
push
pop
dec
loopne
orl
add
cmp
or
cmpsl
outsl
adc
xlat
add
xor
insl
or
pop
jb
inc
ja
jnp
jne
pop
ficomps
fmull
or
or
mov
and
add
pop
imul
mov
mov
dec
dec
mov
xchg
in
lret
inc
add
and
test
dec
cltd
sbb
cmpb
push
jg
insl
shl
inc
sub
testl
mov
xchg
add
xor
testl
inc
dec
das
or
push
adc
cltd
subb
add
gs
add
jo
xchg
mov
fs
sub
adc
and
js
sub
fmulp
pop
and
xchg
jle
mov
in
inc
xor
pop
add
adc
push
sbb
inc
dec
das
push
dec
push
and
mov
ljmp
push
push
popa
adc
rolb
dec
lea
add
orb
insl
bound
inc
push
inc
dec
add
fcmovu
pop
dec
dec
push
xchg
dec
add
les
or
jmp
push
cmpsb
in
in
outsb
push
or
cmp
and
pop
sub
daa
or
adc
or
mov
orl
sbb
xchg
adc
xor
sub
adc
cmc
xchg
in
pop
cmp
cmp
cli
clc
dec
and
mov
jecxz
inc
rcrb
bound
sub
push
nop
nop
inc
xchg
lods
cmpsb
jnp
push
cmp
mov
inc
repz
mov
or
mov
or
daa
ret
push
sbb
test
push
mov
xlat
inc
xchg
incb
inc
mov
add
pop
loope
test
and
cmp
les
add
inc
ja
mov
or
outsl
dec
add
add
dec
cmp
adc
push
mov
daa
ret
cmp
aad
inc
add
adc
and
ja
cmpsb
mov
mov
fwait
xor
mov
pop
cwtl
or
imull
xor
iret
pop
xor
dec
ret
add
int3
test
mov
push
add
iret
xchg
dec
cmp
adc
and
add
hlt
hlt
pop
dec
dec
data16
xchg
icebp
inc
push
enter
xlat
subb
sbb
std
push
or
add
or
or
or
sti
cmp
sub
stos
pop
cmp
jp
push
push
stos
or
jnp
xchg
es
or
les
push
sub
out
mov
roll
cmp
add
inc
sub
cmpsl
inc
xlat
imul
test
push
js
icebp
dec
sar
xor
data16
xor
jmp
sbb
and
nopl
shrb
dec
mov
movsb
adc
rorl
repnz
pop
xchg
jo
fcomip
fwait
or
cmp
je
mov
jmp
mov
sub
adc
jne
lods
add
or
outsb
inc
xor
insb
xor
jmp
sbb
jmp
cmp
sbb
shlb
push
add
mov
out
cltd
or
add
xor
and
ret
mov
dec
in
or
sub
daa
or
adc
icebp
mov
rcl
adc
in
orb
test
add
or
shl
add
pop
mov
xchg
push
push
clc
xchg
jle
cltd
xchg
push
cmpb
push
mov
inc
pop
push
push
nop
mov
push
popf
pop
daa
pop
add
scas
roll
inc
mov
je
mov
mov
jecxz
push
jae
scas
adc
mov
add
push
and
xor
addb
or
cmp
and
ja
addr16
lret
out
or
test
push
or
rorl
xchg
test
sub
cmpsb
test
mov
or
mov
call
sub
popf
inc
flds
cmpsl
mov
cli
push
adc
test
sbbl
or
mov
sbb
jne
cmp
xor
int3
fnstcw
dec
jg
xor
and
sahf
jp
in
xchg
test
cmp
lahf
cmp
je
inc
fmull
pushf
int
pop
xor
fwait
cmpsl
mov
pushf
mov
aas
adc
xchg
daa
mov
or
pop
imul
push
mov
jmp
sarb
ret
inc
ficoms
xchg
adc
pop
mov
adc
cmp
outsl
fsubrs
inc
or
add
adc
sbb
das
push
ficompl
mov
mov
mov
pusha
adc
mov
push
pop
mov
add
adc
aas
test
add
outsl
pop
je
mov
xchg
pusha
add
or
popa
add
push
mov
adc
cmp
jge
orb
xchg
mov
push
ljmp
fadd
pop
movsl
sbbb
add
mov
xor
add
das
pop
je
mov
cmpsl
cltd
loopne
test
mov
subl
nop
cltd
sbb
mov
mov
in
ja
dec
and
je
mov
jo
xor
push
jo
daa
emms
mov
or
pop
or
das
pop
pop
pop
xchg
out
cltd
or
pusha
div
cs
cmp
data16
cmpb
lret
les
scas
jnp
fdivrs
jno
outsl
add
push
mov
mov
popf
cmp
add
out
push
sub
cmp
into
push
push
scas
ss
addr16
pop
andb
pop
inc
sbb
mov
dec
scas
xor
adc
aaa
addl
mov
and
mov
std
icebp
leave
je
ljmp
lock
or
cwtl
push
adc
leave
adc
adc
adc
nop
dec
addb
sub
xchg
dec
inc
xchg
mov
sbb
add
insb
mov
frstor
xchg
popa
daa
push
fmull
insl
mov
sbb
clc
push
add
fisttps
jle
dec
inc
orb
test
cmp
testb
and
enter
inc
bound
ret
dec
out
adc
pop
xor
rcrb
mov
scas
pop
mov
jbe
inc
insb
ret
and
push
add
jae
xorl
les
dec
push
lods
dec
mov
mov
cmpb
pop
aas
or
push
adc
add
adcb
mov
movsb
dec
inc
fisttpll
cmpsl
ja
or
or
and
pop
xor
adcb
pop
pop
sti
cmove
sbb
pop
movb
dec
add
inc
pop
mov
aaa
jo
movsb
rolb
out
lods
loope
xor
push
jb
lea
fcomps
sub
test
sbb
das
adc
pop
adc
pop
push
sub
mov
add
inc
cmp
inc
cmp
add
push
popa
inc
mov
jbe
mov
sbb
and
mov
sbb
push
clc
mov
les
push
pop
dec
pop
mov
or
xchg
and
dec
ds
xchg
cmc
or
mov
das
add
jne
or
xor
ss
jnp
outsl
adc
mov
add
les
out
jo
test
stos
nop
xchg
test
add
fistl
push
or
pushl
arpl
sti
and
testb
cmp
pop
or
movl
add
int
and
xor
add
inc
test
aad
or
imul
fnstenv
add
cmp
mov
js
push
cmp
xchg
popa
test
mov
repnz
sbb
push
imul
push
ss
test
push
xor
mov
push
movl
push
gs
dec
add
adc
inc
outsl
mov
inc
jp
inc
adc
stc
inc
or
lea
add
or
mov
push
aaa
lds
add
int3
inc
adc
fwait
jl
and
addr16
fmull
fildl
fsubp
xchg
insb
daa
sub
dec
loope
rorb
insl
xchg
out
fucomp
adc
mov
leave
add
mov
lea
xchg
icebp
bound
jmp
ljmp
adc
je
cltd
aad
push
push
push
cmp
ljmp
push
mov
mov
nop
inc
arpl
add
repnz
push
out
shrb
mov
in
dec
pop
or
or
or
into
in
inc
add
add
je
and
sbb
push
adc
push
ds
pusha
test
inc
sub
test
nop
inc
fildll
jno
mov
rol
rcrl
pushf
std
inc
jecxz
std
sub
mov
inc
sbb
add
ficomps
mov
dec
not
sub
xchg
pop
sti
push
push
shr
sub
mov
mov
mov
xchg
mov
xor
div
or
pop
cmp
cltd
add
lahf
icebp
or
inc
inc
inc
xchg
or
push
sarl
inc
sbb
mov
pop
jge
mov
dec
dec
add
sbb
add
repnz
mov
insl
cmp
jp
es
pop
dec
jnp
cmp
loopne
jmp
sbb
xor
mov
push
sbb
adc
mov
flds
repz
mov
push
test
mov
ret
cmp
push
mov
dec
dec
inc
cmp
leave
fsubrs
cmp
aaa
call
std
inc
mov
inc
loopne
in
or
dec
imul
inc
in
push
xor
jnp
sub
add
or
dec
mov
mov
mov
hlt
add
in
outsl
or
dec
inc
push
call
push
outsl
lods
adc
loopne
add
xchg
push
jns
inc
jne
mov
pop
dec
incl
sub
jb
je
fwait
or
sub
pop
ljmp
or
sub
outsb
or
mov
jo
sti
and
sbb
inc
fiadds
nop
ja
jmp
mov
es
push
sbb
xor
lret
and
test
push
jecxz
pop
ret
or
mov
cmp
insl
imul
add
push
add
adc
mov
cmp
pop
or
fcomps
call
mov
sbb
pop
sbb
and
aas
ret
mov
mov
xor
push
pop
int3
pop
mov
inc
rclb
ret
popa
arpl
fidivl
push
out
sbb
int3
insb
adc
mov
pop
popa
add
in
mov
jno
sub
fwait
scas
lret
add
daa
adc
xchg
dec
ret
movsl
jmp
sub
and
jmp
push
bound
push
sbb
add
ss
icebp
in
push
adc
pop
adc
js
jne
sub
sbbl
push
mov
ja
sbb
mov
and
push
bnd
shll
cmp
lahf
jp
add
xor
xor
inc
sbbb
jmp
lahf
cmp
aam
sbb
push
aam
call
push
sbb
inc
orl
outsl
add
xor
int3
and
and
pop
movsl
sahf
outsb
push
pop
subb
add
xor
hlt
pop
ret
jl
test
inc
push
popf
les
repz
and
pop
das
or
pop
add
dec
mov
dec
adc
orb
inc
cli
paddusb
movsl
inc
or
mov
outsl
daa
daa
xchg
adc
cmp
mov
sub
or
mov
add
outsl
mov
add
jmp
sbb
xor
and
bound
adc
wbinvd
dec
fcoms
lret
or
mov
jle
int3
enter
dec
aas
notb
xchg
jp
add
xor
das
push
sub
xor
cmpl
add
mov
mov
sahf
push
lock
je
xchg
xchg
cmc
test
jbe
insb
xor
or
adc
enter
lret
push
sub
mov
or
or
or
rcrl
roll
test
lcall
inc
mov
xor
push
cwtl
aaa
adc
add
rolb
or
or
enter
pop
jmp
sub
push
add
push
inc
lret
or
jmp
popa
and
ja
adc
xor
hlt
jbe
movb
sub
add
daa
iret
test
dec
mov
jmp
sub
push
lods
pushf
sarb
xor
jae
addr16
jmp
fimuls
inc
and
fwait
mov
hlt
mov
out
dec
push
inc
sub
dec
or
insb
pop
mov
xchg
aaa
or
or
cmp
mov
cmp
sbb
fs
xlat
push
pop
mov
inc
ja
mov
rclb
push
loop
js
xchg
pushf
je
fnsave
packsswb
jle
jb
adc
sbb
insb
loopne
push
and
jecxz
outsl
sub
frstor
mov
or
mov
dec
je
add
dec
test
ret
push
add
shlb
das
rolb
dec
add
clc
notl
jle
push
jmp
xchg
fisubrl
aas
sub
popa
lds
cmp
jne
xchg
pop
add
leave
sbb
mov
mov
inc
hlt
cmp
testb
cmpsl
mov
cmp
mov
fimuls
enter
and
in
pushl
or
dec
test
insl
jmp
jmp
outsl
clc
ja
in
or
mov
rclb
out
sub
add
aas
mov
decl
sbb
xchg
and
pop
int
xchg
in
frstor
push
sbb
add
hlt
xlat
gs
pop
nop
mov
notb
pop
in
enter
adc
shll
xor
adc
cs
xor
cmp
jo
rorb
add
sub
mov
imul
shlb
adc
mov
and
push
or
outsl
dec
out
imul
xor
lods
fwait
mov
cmpl
je
adc
ja
cmpsb
and
int3
pop
or
pop
adc
cmpsl
adc
sbb
sbb
mov
sub
or
addb
dec
jp
pop
mov
jge
addl
jl
adc
imul
push
jns
test
xor
jg
out
or
dec
xor
pop
lock
or
pushf
xor
sbb
data16
out
ds
mov
ret
fcom
aad
dec
ljmp
or
xor
dec
addr16
into
sub
shlb
sbb
push
push
cmpsl
xor
ret
push
dec
pusha
ljmp
adc
sbb
xchg
and
dec
andl
push
or
test
dec
inc
xor
xchg
jle
addr16
ja
shr
sbb
add
add
les
fwait
imul
call
test
pusha
xor
push
push
dec
jle
aam
cmp
or
mov
lcall
adc
out
ret
lcall
shll
ret
insb
jo
and
jno
dec
push
fmuls
inc
jbe
mov
pushf
dec
xchg
lea
ficoml
lea
and
sbb
arpl
fcoms
xor
xchg
pop
orl
jnp
test
adc
shll
inc
pop
es
pop
aam
push
or
dec
or
and
sar
mov
orb
cwtl
xor
rorl
call
mov
dec
push
sbb
and
pop
test
jb
icebp
adc
leave
inc
mov
in
or
mov
out
mov
add
sbb
leave
adc
add
and
inc
xchg
jne
int3
or
sbb
dec
push
mov
mov
add
punpcklwd
mov
gs
or
adc
dec
sbb
push
push
movb
xor
lock
or
in
and
dec
add
mov
push
dec
jle
je
push
test
and
dec
jge
or
int
add
adc
adc
jle
lret
jae
inc
adc
or
xor
pushf
cmp
dec
es
xchg
out
je
mov
arpl
sar
or
xchg
jne
mov
imul
loopne
inc
push
and
js
xor
stos
ds
mov
je
pushf
push
push
inc
loop
add
push
rol
and
lcall
and
jp
or
pop
dec
push
mov
or
lret
xor
loopnew
xchg
cmpsl
pusha
pusha
jne
or
mov
push
jo
jmp
les
jg
ret
inc
cmp
stc
push
xchg
jno
inc
mov
add
loop
leave
fiaddl
imul
loope
fnsave
push
aad
rcll
inc
mov
jo
add
mov
loope
imul
lcall
mov
js
out
popa
sbbl
push
pop
out
pop
pop
push
in
mov
lock
pop
mov
adc
push
push
cmc
jo
sbb
ret
and
das
adc
cmp
xchg
cmp
ret
xor
inc
pop
cmp
in
add
adc
sbb
dec
daa
or
mov
scas
add
int3
dec
sbb
adc
popa
or
sbb
inc
outsb
fsubl
shrb
dec
cli
mov
push
loopne
cld
in
orl
sub
dec
cmp
xor
or
sbb
lea
test
ds
jb
jns
sub
lahf
mov
cmc
or
dec
dec
imul
dec
jecxz
mov
push
cld
push
push
push
sub
xchg
xor
test
sub
mov
cld
sub
add
or
add
add
add
incb
jmp
sub
test
xor
fisttpl
mov
dec
bound
xor
daa
scas
stos
pop
loop
mov
je
add
pop
sub
adc
nop
out
pop
clc
fcoml
mov
das
repz
push
loopne
inc
fimull
push
dec
pop
or
cmpl
les
mov
cmpb
popa
or
pop
or
pop
loop
test
data16
sbb
sbb
popf
jb
dec
cmp
inc
dec
or
dec
js
jecxz
jmp
or
cmp
pop
mov
jo
fildl
mov
pop
out
insb
add
adc
lea
leave
aam
aaa
cmpl
inc
cmp
add
push
xor
int
es
int3
sti
push
and
out
imul
adc
jno
mov
mov
mov
cltd
push
pop
mov
jecxz
inc
rorb
pushf
or
lds
jecxz
and
adc
sbb
mov
mov
jo
push
xchg
nop
dec
or
andl
or
adc
fwait
movsb
daa
jb
scas
push
and
inc
and
fldl
lahf
pop
test
fcompl
pop
adc
push
fs
pop
adc
inc
ljmp
enter
push
sub
jge
and
mov
add
cmc
gs
add
jns
or
add
insl
cmp
push
add
je
scas
cmp
out
jbe
jge
inc
lock
inc
sarl
sub
out
imul
inc
push
add
sub
mov
dec
mov
or
repz
in
aam
int
fs
mov
les
or
push
sbb
lea
adc
and
popa
inc
arpl
sub
mov
cwtl
jmp
dec
test
adc
push
scas
mov
mov
or
sbb
loopne
insb
add
jp
pop
mov
add
cmp
lods
ficompl
xchg
cmp
xor
out
stos
or
imul
and
mov
push
fldt
and
je
xchg
add
daa
sub
aam
dec
sub
xor
mov
sahf
mov
and
inc
and
lret
inc
jl
add
les
add
test
cmp
jne
mov
push
pop
sbb
inc
cmp
ret
outsl
sub
sub
pushf
adc
leave
and
or
or
xor
or
popa
and
xchg
ficoml
fs
sbb
test
dec
inc
or
or
fs
addl
cmp
jmp
and
sub
int3
js
adc
xor
out
stos
nop
xorl
and
push
mov
push
in
insb
stos
adc
xor
pop
mov
fldcw
push
inc
lock
das
cmc
sbb
es
jle
shl
sub
aas
les
mov
pop
xor
add
jo
shrl
test
rclb
int
add
test
or
outsl
adc
cmpsl
adc
orl
sub
mov
pop
loopne
int3
testb
sub
mov
scas
jns
arpl
lret
fs
mov
mull
xor
ss
adc
push
adc
jle
xchg
inc
sbb
mov
adc
aam
xchg
jmp
js
je
ret
call
jp
xor
cmpl
xor
leave
xor
das
push
rorb
xor
mov
mov
in
xor
mov
shll
mov
add
lea
add
dec
and
pushf
sub
cltd
insl
cltd
xor
pop
pop
adc
mull
mov
sbb
pop
sub
scas
and
nop
out
sub
scas
lds
jl
cmp
jge
outsl
pop
jecxz
fldcw
mov
sbb
hlt
notb
ret
imul
and
andl
dec
clc
add
pushf
fadds
cmp
cmp
lahf
sub
movsb
sbb
lea
adc
adc
aam
push
mov
pop
fs
aas
pop
push
mov
imul
ja
jmp
scas
mov
int
fsubr
sbb
add
cmp
setg
jmp
inc
add
sahf
in
incl
push
dec
cmp
setle
es
xchg
gs
inc
dec
inc
dec
adc
or
lock
sbb
or
sbbb
mov
or
pop
mov
add
adc
lods
cmp
jmp
inc
fsubrp
arpl
negb
mov
xchg
stos
jne
inc
lea
adc
adc
imul
xor
shlb
lret
mov
loopne
lret
ret
fs
in
jne
fstpt
popa
add
inc
adc
adcl
mov
test
mov
push
aaa
and
popa
dec
hlt
jmp
xorl
xchg
push
aas
sub
mov
or
addr16
inc
xchg
mov
jb
mov
add
in
add
call
es
inc
gs
mov
movsb
sbb
push
enter
sub
ret
sub
stc
icebp
and
xor
dec
sub
aaa
mov
add
jl
push
xchg
sub
mov
xchg
push
xchg
pop
or
dec
fs
or
fstl
pop
add
pop
add
in
hlt
lock
sbb
imul
lcall
les
mov
lods
fisubs
jmp
add
in
cltd
push
mov
sbb
push
or
insl
mov
in
add
jmp
sbb
rcll
jmp
xor
in
push
mov
push
adc
ret
dec
rcrb
mov
dec
and
cvttps2pi
sub
cltd
push
xchg
mov
cmpsb
jno
cwtl
and
lea
cmp
cli
add
mov
sarb
roll
out
sti
or
sbb
or
imul
and
pusha
dec
adc
inc
mov
or
add
pop
outsb
pop
pop
insl
sbbl
cmp
mov
ret
xchg
shrl
xor
adc
out
sbb
subb
fisttps
mov
sbb
cmp
jne
insb
xorb
adc
cmp
mov
mov
push
xor
add
mov
mov
jo
cmpb
cltd
mov
adc
inc
push
or
sub
xchg
dec
or
dec
push
cmp
mov
mov
adc
and
sbb
or
dec
or
lds
je
cmp
sub
pop
fidivl
inc
or
pop
xor
inc
inc
push
hlt
fsubl
arpl
mov
int
into
outsl
mov
dec
xchg
sub
pop
cmpsl
jne
add
or
das
arpl
addb
sub
addb
push
int3
add
pop
into
sbb
mov
das
add
push
popa
jne
push
lods
mov
andl
sbb
adc
dec
mov
add
and
sub
adc
push
pop
mov
sub
pop
xchg
xlat
xor
mov
das
push
or
jne
pop
and
add
or
add
push
js
sbb
testl
xchg
cmpsb
or
xor
loope
iret
das
and
dec
in
and
push
out
inc
mov
push
imulb
sti
pusha
test
dec
push
jae
aam
in
jnp
xchg
push
shrb
test
sbb
push
out
cmp
call
xor
cmp
faddp
js
mov
addl
les
push
popa
and
pop
popf
in
lea
lods
lods
adc
xchg
inc
mov
xchg
mov
inc
das
mov
and
mov
xor
sub
sub
fdivrp
sarl
popa
xor
outsb
cmp
add
mov
push
in
xor
cmpsb
mov
addb
xchg
add
sub
clc
pusha
pop
dec
or
shll
and
and
cmpsb
test
imul
jo
out
shlb
imul
cmp
xlat
mov
and
mov
adc
inc
mov
cmp
movsb
or
cmp
test
out
fsubrp
inc
nop
adc
pop
xor
jne
xor
mov
into
jg
sub
or
jne
andps
or
sbb
pop
aas
add
nop
inc
add
dec
xchg
pop
repnz
rcrb
xchg
jmp
sbb
pop
sub
jne
mov
pop
inc
test
or
push
or
jne
ffree
xchg
or
sub
or
bound
test
jg
pop
xchg
xor
jne
or
in
sbb
mov
jmp
test
inc
sbb
xchg
add
iret
outsb
pop
fs
sti
mov
aas
mov
adc
jmp
lds
sub
in
sbb
rorl
sub
pusha
lods
test
adc
ret
movsl
and
loope
popf
pop
cmp
inc
jle
cmp
jmp
mov
cmpl
js
aas
sbb
imul
add
push
or
pushf
jno
les
add
xor
addr16
clc
xlat
call
cmp
loop
add
movzwl
inc
mov
or
sahf
adc
jg
pop
pop
mov
or
push
xlat
mov
ss
daa
nopl
inc
rorl
dec
push
xchg
add
out
and
pop
push
sbb
mov
push
clc
mov
orl
mov
mov
dec
lea
sub
xor
bound
mov
pop
aad
adc
lret
test
aaa
inc
add
mov
and
pushf
dec
js
push
add
sub
jnp
sub
dec
sub
or
rclb
clc
int
cmp
stos
push
dec
xchg
in
xchg
mov
or
inc
xchg
adc
fdivrl
xorb
or
in
lahf
je
push
je
adc
and
mov
sbb
imul
mov
push
icebp
push
xor
cs
push
pop
dec
aad
inc
mov
mov
add
push
ret
popf
xchg
adc
xorl
fidivrl
sahf
xchg
nop
aad
testb
movsl
insl
pop
add
and
jmp
scas
insl
nop
jmp
dec
test
test
or
int3
mov
mov
push
ret
inc
pushf
mov
into
sbb
adc
mov
push
into
and
xchg
push
je
and
push
mov
ds
jp
sbb
out
push
data16
xchg
jo
xor
pushf
mov
jp
dec
push
mov
faddl
hlt
rolb
pop
xor
add
rcrb
adc
dec
test
sub
xor
mov
jmp
es
out
insl
cmp
sbb
popf
in
fwait
outsl
sub
sbb
dec
pop
or
dec
shll
adc
push
in
sbb
inc
pop
and
jl
inc
xchg
adc
loop
pop
sub
nop
lock
add
mov
rol
pop
sbb
loopne
and
and
mov
push
rolb
mov
out
jbe
popa
push
xchg
stc
xchg
outsb
dec
fisubrs
cmp
sbb
inc
pop
movsb
aad
and
mov
or
test
cmp
jns
jne
inc
dec
out
or
mov
lea
mov
pop
lods
adc
add
xchg
imul
data16
loop
sub
add
cmp
jg
dec
dec
outsl
add
clc
cmp
jne
loope
lea
or
js
inc
mov
cmp
pop
icebp
add
or
addl
sbb
jg
cmp
xchg
inc
out
mov
push
mov
jge
cli
jmp
mov
jbe
pop
fwait
fs
loopne
bound
mov
clc
or
insl
xlat
add
inc
mov
aas
mov
adc
test
pop
dec
adc
fadds
cwtl
push
lcall
sbb
fadd
xchg
cmp
movsl
and
sub
std
and
pop
add
xchg
les
repnz
xchg
inc
lret
jo
jecxz
fiadds
shlb
sti
pushf
addl
cmp
adc
loopne
xchg
cmp
and
test
push
add
pop
test
rorl
rorb
clc
pop
jl
inc
retw
fs
sbb
xchg
bound
ja
sbb
push
test
push
mov
imulb
cmp
pop
adc
ret
sbb
scas
mov
cmpl
adc
mov
add
cltd
inc
sbb
xchg
mov
mov
dec
push
in
ret
insb
and
popa
xchg
xor
lea
pop
sbb
les
cmp
or
push
or
or
xor
rcll
lds
adc
dec
mov
cmp
popa
cmp
hlt
xor
cmp
je
xor
je
and
mov
pusha
int3
sbb
cmpsl
xor
sbb
jbe
add
leave
sub
or
mov
js
mov
cs
or
incl
addb
xlat
inc
icebp
std
sub
inc
je
aad
mov
mov
dec
faddl
cmp
and
and
cmpl
jl
arpl
subl
and
lods
and
daa
add
sbb
jmp
adc
mov
ds
ss
inc
dec
add
inc
mov
es
sbb
fst
subl
adc
jb
dec
mov
rcrl
mov
clc
lods
rcr
xchg
sub
mov
jne
fwait
mov
jno
lods
push
pushl
add
xchg
mov
mov
sbb
jne
pop
xchg
jo
sbb
xlat
loop
shlb
repz
daa
leave
loop
pusha
movsl
inc
jmp
and
or
movsb
ss
pop
in
movl
adc
fisubl
add
cmpl
pop
pop
mov
stos
mov
and
cmp
or
loop
ds
and
sub
enter
jmp
sub
xchg
aam
rol
clc
mov
pop
adcl
dec
jl
clc
push
cmp
test
test
jno
sbb
adc
outsl
inc
and
cs
sbb
lods
sbb
adc
inc
sub
adc
shlb
nop
mov
adcb
daa
push
cmp
mov
shr
adc
fidivs
pop
mov
adc
xlat
adc
inc
imul
aad
lret
lods
pop
enter
popl
lods
mov
mov
inc
push
adc
push
pop
adc
jmp
outsl
and
test
inc
les
mov
fiaddl
or
loope
mov
cmp
add
test
ret
je
pminsw
inc
test
jo
jae
and
push
imul
xor
jecxz
pop
mov
dec
adc
push
inc
jmp
dec
shlb
es
and
dec
imul
cmp
incb
jecxz
cmp
sbb
xor
jg
push
aaa
add
dec
xchg
mov
test
pop
mov
in
pop
rcll
into
lcall
or
pop
inc
adc
ja
inc
shrl
push
mov
lret
arpl
mov
popa
cmp
gs
sub
add
sbb
sub
fwait
ss
jl
cmp
sar
sbb
mov
pop
cmp
shlb
push
push
pop
pop
xchg
nop
imul
inc
clc
or
jne
cmpsl
sub
js
push
add
xor
add
add
loop
clc
sbb
xor
ret
push
inc
cltd
and
mov
je
arpl
adc
sub
push
mov
test
pushf
je
stc
sbb
inc
ficomps
fwait
rorl
inc
inc
mov
test
cmp
mov
das
add
js
push
inc
js
cmp
dec
loop
dec
insb
xor
and
add
je
inc
push
adc
out
sbb
ret
dec
push
or
pop
shr
add
scas
adc
adc
movsb
adc
add
xchg
add
mov
sub
pop
pop
cmp
dec
out
cmp
cwtl
movl
test
mov
pusha
es
adc
cmpb
inc
loope
push
fisubs
push
xor
push
xchg
cmpsb
imul
pop
mov
pandn
cmp
insb
daa
xor
push
sub
add
cmp
add
popa
add
inc
dec
rclb
adc
xorl
les
insb
pop
or
push
pop
xor
test
add
lds
add
and
mov
mov
data16
shll
inc
push
loope
push
push
fdivr
pop
mov
cwtl
cmp
and
shl
jge
push
xchg
add
push
fldenv
mov
push
push
xor
ret
and
sbb
sub
adc
mov
imulb
dec
mov
rclb
inc
adc
dec
sbb
les
test
scas
loopne
cmpsb
sbb
sbb
push
xchg
push
ret
push
adcb
add
mov
cmpsb
xchg
popf
adc
gs
push
mov
insl
or
inc
inc
add
nop
dec
rcll
adc
add
pushf
adc
out
insb
pushf
sbb
pop
in
jmp
loopne
mov
repnz
pop
incb
push
into
mov
and
andb
scas
insb
leave
lock
xor
pushf
push
repz
inc
sbb
scas
lock
mov
dec
sub
xor
movl
jl
jecxz
lahf
xchg
push
xor
dec
scas
inc
xor
inc
lods
js
xchg
mov
in
movl
cltd
pop
movsb
and
adc
xchg
loop
xor
pushf
push
push
sti
clc
push
adc
mov
nop
mov
or
popa
cmp
mov
xchg
test
xchg
xchg
or
pusha
and
das
sbb
pop
aaa
add
fld
loopne
scas
add
dec
icebp
xchg
xchg
push
xchg
sbb
push
cld
outsl
mov
fxch
push
sub
inc
fldt
pusha
sbb
ret
dec
mov
mov
inc
nop
dec
push
ss
outsb
sub
and
shlb
xchg
test
aam
lods
and
mov
and
pop
daa
sbbb
inc
lods
or
insb
nop
inc
mov
adc
cmpsb
push
scas
daa
add
cmp
and
and
test
movsl
shrb
push
push
lds
pushf
cmp
jne
mov
cmpsl
and
add
cmp
and
mov
xchg
mov
pop
cmp
je
pop
or
ror
or
mov
pop
daa
sbb
jmp
inc
xchg
nop
inc
inc
addb
movsb
push
push
or
arpl
inc
out
pop
adc
stos
sbb
ss
mov
push
sbb
shlb
pop
cwtl
pop
dec
js
pop
insb
es
in
jge
dec
xchg
fsubs
rcrl
outsb
adc
jno
inc
add
sub
cmp
dec
ret
adc
or
dec
xor
movsb
sbb
mov
dec
xchg
dec
mov
icebp
and
call
ret
add
repnz
push
lahf
shrb
js
popw
dec
xor
sbb
movsb
adc
or
or
sahf
stc
pop
mov
inc
adc
je
movswl
imul
jmp
cmpw
ss
lods
xchg
pop
sub
icebp
addl
fistpl
lea
xor
shl
lea
mov
dec
mov
sbb
movb
test
bound
xchg
sbb
sub
push
xor
and
push
cld
out
adc
mov
sbb
bound
cmp
mov
xchg
sub
dec
cltd
jo
fadd
inc
sahf
roll
dec
sbb
push
jbe
adc
aaa
rolb
and
inc
jno
xchg
xchg
adc
jl
mov
cmpl
add
mov
xor
adc
orb
sbb
adcl
adc
xor
add
out
mov
push
aaa
mov
sub
xor
shl
nop
data16
enter
mov
adc
test
mov
or
pop
mov
or
rcl
nop
sbb
mov
push
push
adc
fwait
mov
mov
xor
mov
sub
pushw
or
sbb
test
cwtl
sbb
xchg
pop
mov
fld
or
iret
push
hlt
jmp
and
cmp
and
push
push
les
push
xor
xchg
xchg
stos
adc
fbstp
xor
add
xor
mov
dec
cmp
cmc
mov
push
xchg
adc
mov
add
xor
movsb
or
inc
mov
dec
scas
aam
xchg
bound
xor
stos
fcmovnb
jmp
inc
mov
dec
pop
inc
sbb
sub
dec
fsubp
addl
fbstp
push
mov
push
lret
mov
sbb
xor
xchg
jo
and
lods
inc
cmpsb
xor
imul
xchg
je
dec
or
add
adc
andl
lahf
lods
adcb
add
xchg
jno
xchg
mov
push
mov
jne
jle
adc
pop
adcb
imul
inc
es
jge
js
xchg
sbb
or
imul
jno
mov
pop
rcll
adc
push
lds
adc
rcrb
or
pop
mov
cmp
pop
push
pop
aam
inc
mov
cltd
or
adc
rol
and
push
pop
push
lea
dec
push
or
cmp
imul
movsb
lcall
gs
popa
test
add
mov
xor
bound
sti
dec
or
ds
add
inc
data16
mov
mov
pop
sub
inc
loope
dec
mov
jecxz
dec
inc
js
xlat
ret
int3
push
sub
or
or
pop
ret
ljmp
movsb
cmpsl
push
add
add
xor
sbb
enter
push
and
roll
sbb
cmc
inc
and
sub
pop
sarl
pop
dec
sub
inc
cmp
sbb
adc
inc
mov
imul
movb
xchg
push
cmp
sub
jns
sub
popa
xorps
ljmp
push
inc
mov
nop
iret
push
dec
bound
aas
sahf
or
mov
loop
loopne
pop
push
inc
pop
pop
or
data16
test
sarb
aaa
inc
lds
push
xor
or
inc
inc
adc
inc
ret
fisubs
jb
rcrb
je
add
or
push
pop
inc
adc
xor
add
adc
xchg
or
dec
sbb
add
adc
push
and
mov
add
sbb
xchg
lcall
pushf
roll
mov
ds
lock
sub
or
sahf
xorl
arpl
imul
and
das
fnstcw
pop
inc
pusha
test
jbe
pop
test
pop
sub
xor
pop
rorl
inc
xorl
mov
aas
cmp
add
sub
ss
fisttps
in
xor
dec
inc
out
or
xor
and
push
popa
and
cmp
mov
fbstp
movb
data16
sbb
in
xor
mov
out
push
lret
scas
stos
mov
aam
hlt
jae
xlat
mov
movsl
cmpl
std
packssdw
sbb
jne
std
js
std
or
inc
pushl
in
sarb
outsb
imul
and
inc
or
mov
cmp
adc
xchg
and
push
cmc
xor
movsb
iret
cmp
fsubrp
mov
pop
fisubrs
ret
sub
push
das
adc
sarl
and
mov
pop
cmpsb
std
cmp
je
and
cmp
jb
nop
add
ret
mov
xchg
sbb
sbb
adc
jecxz
shrb
icebp
jle
lods
sbb
pushf
rcpps
or
cli
repz
loope
ss
icebp
adc
pop
mov
push
dec
add
jmp
popa
aam
scas
inc
lods
push
inc
push
outsl
add
jbe
or
push
xchg
pop
xor
or
outsb
xor
or
inc
sub
sbb
sbb
xor
dec
push
jle
xor
mov
les
xchg
mov
push
jo
mov
pop
ret
outsl
inc
movsl
pop
outsl
mulb
push
xor
xor
adc
push
xor
mov
je
dec
and
imul
adc
and
pusha
push
rclb
test
adc
int
push
pop
ret
and
xchg
pop
xor
imull
xchg
pusha
jg
movaps
test
into
jnp
aam
rcr
sub
jb
sbb
push
cli
cmp
cmpl
xorb
sub
or
mov
stos
jne
pop
dec
pusha
or
pop
in
inc
xchg
and
sbb
push
adcb
ljmp
jmp
je
xor
inc
mov
push
aad
mov
adc
xchg
les
insb
push
test
ficompl
stos
dec
sbb
cli
roll
rcll
mov
cmc
aam
iret
fs
out
add
sub
xor
xchg
add
movsb
mov
mov
inc
jg
mov
dec
add
jg,pn
xchg
xor
cmp
jp
mov
jge
scas
shrb
or
and
adc
jmp
adc
sbb
add
adc
jge
je
lods
mov
add
aam
and
fldenv
pop
mov
add
xor
add
clc
cltd
loopne
push
xor
data16
adc
js,pn
cmpsb
pop
inc
lds
pop
dec
push
sbb
out
sbb
jmp
add
jne
push
iret
adc
insl
movsl
cmp
xchg
cmp
addb
and
mov
jo
popa
jbe
mov
mov
arpl
lahf
and
cld
andl
xor
outsb
sub
xchg
repz
dec
xor
or
stos
shll
test
or
jne
push
xlat
inc
mov
jmp
add
sbbl
mov
sub
imul
pop
imul
jbe
jne
xchg
inc
aaa
adcl
pop
push
incl
adc
jecxz
icebp
and
lods
fld
xchg
adc
popa
xor
icebp
xor
arpl
push
icebp
enter
icebp
mov
arpl
inc
adc
scas
cmc
push
push
cmp
pop
enter
mov
repnz
mov
add
inc
cmpsl
arpl
pop
add
loop
outsl
mov
test
jge
xchg
adc
orb
mov
icebp
mov
loop
sub
cwtl
inc
loop
mov
sbb
ss
sbb
xlat
push
loopne
loope
and
pop
in
inc
jmp
lret
jne
cmp
insb
dec
and
out
add
adc
inc
and
jecxz
and
xchg
dec
inc
sub
loop
mov
xchg
sarb
sub
rcr
sub
test
nop
cwtl
cmp
pop
les
roll
mov
add
push
inc
sub
or
dec
dec
jg
les
je
js
lret
ret
xchg
pop
sbb
ret
pop
cmp
test
divl
lock
nop
lret
xor
jge
pushf
jmp
sub
and
add
rclb
aad
pop
jae
mov
shlb
loope
orb
les
jo
cwtl
lret
add
std
add
lods
dec
sub
scas
xchg
mov
inc
popa
mov
jne
push
push
ret
mov
pop
lods
adc
mov
lahf
sbb
jl
push
jo
mov
cli
loopne
push
scas
cmp
rcr
ja
jae
xchg
mov
xchg
in
mov
nop
adc
add
or
xor
inc
sub
nop
lock
pop
xchg
pop
or
xchg
jo
cmp
sbb
bound
adc
lea
repz
sbb
loopne
fbld
mov
mov
jmp
pop
sub
push
subl
imul
cmp
jp
aaa
add
sub
lds
inc
mov
add
and
push
xlat
and
or
add
jne
arpl
push
inc
xchg
xor
paddusb
adc
mov
loopne
mov
mov
or
jg
fcoml
push
and
and
push
pop
mov
fldcw
andl
mov
or
ret
dec
jmp
add
inc
fwait
sarl
mov
mov
xor
jae
mov
jle
or
adc
cmc
out
mov
or
lahf
push
adc
mov
mov
pop
je
pop
rcll
push
sete
mov
sub
adc
adc
cltd
shlb
cmpb
xor
inc
dec
adc
psllq
sbb
and
lock
jae
push
push
movb
xor
mov
fstpl
jae
mov
and
pop
adc
addr16
aas
xor
jbe
mov
sbb
or
mov
stos
bound
loopne
test
jle
into
cmp
mov
or
jno
int3
adc
ret
xlat
scas
pop
lret
jo
dec
test
bound
pop
imul
cld
sub
jno
cmp
cmovl
and
push
push
lods
and
les
shrb
daa
add
sub
clc
fldcw
arpl
xchg
cmpsl
das
mov
fcoml
test
je
push
ret
add
cmp
push
adc
jae
fmull
cmc
push
ret
daa
je
sub
push
jmp
arpl
jmp
push
dec
mov
addl
clc
sub
ret
xchg
sub
adc
pop
mov
add
and
add
or
cmp
mov
xlat
outsl
test
push
fistpll
inc
movsb
mov
adc
loope
out
daa
cmovbe
sahf
xchg
pusha
dec
jne
test
xchg
adc
inc
or
add
hlt
jne
in
shr
subl
imul
push
xlat
sbb
add
jne
sub
sub
ror
pop
inc
pop
lock
stos
and
psrlw
xor
push
push
addl
push
add
push
call
mov
pop
outsl
inc
iret
inc
xor
add
mov
je
les
sbb
hlt
shrb
cmpsl
sub
repnz
insb
fs
mov
les
in
test
add
add
insb
dec
and
insb
sub
add
cmpsb
cmpsl
pop
xorl
add
test
dec
xor
sbb
mov
cmpb
add
pop
loop
and
fildll
add
rorb
les
push
jge
ret
mov
add
pop
inc
ds
adc
mov
adc
or
fs
stos
inc
xchg
and
add
sbb
or
and
cmp
shrb
ret
or
sbb
scas
mov
sub
test
push
imul
xor
roll
sub
imul
sub
insb
inc
xchg
stos
sub
cmpsl
sbb
scas
sub
sub
rolb
dec
insl
adc
nop
testl
inc
sahf
lock
push
mov
or
repz
out
jb
loopne
ror
repz
fmul
fmul
aam
inc
aas
and
sahf
add
xchg
xchg
sub
bound
dec
mov
stc
sahf
sub
mov
mov
add
movsl
outsb
jo
add
add
lret
xchg
lods
pop
xchg
inc
addr16
or
ja
out
add
add
or
mov
and
xchg
jne
push
inc
dec
add
shlb
xchg
in
mov
mov
push
pop
add
or
rcll
sub
inc
sbb
and
jnp
dec
mov
dec
mov
inc
shl
lock
shrb
mov
mov
lret
mov
mov
pop
add
push
cli
fsts
sub
mov
jle
sbb
mov
jmp
inc
std
hlt
movsb
mov
jge
dec
xor
loopne
dec
dec
or
loopne
adc
loopne
das
das
or
into
mov
outsb
fists
push
mov
jle
and
push
ss
dec
add
add
or
mov
mov
and
cmp
fmul
adc
mov
das
or
aam
fcoml
into
adc
into
inc
dec
add
add
mov
sub
jns
loopne
mov
dec
xchg
add
sbb
xchg
ja
cmp
and
movsl
popf
in
fmull
or
ficompl
in
dec
fadds
sbb
or
dec
les
sbb
jmp
jle
lgdtl
add
or
mov
xchg
add
scas
add
pop
insl
hlt
and
adc
or
lock
and
into
js
mov
add
sub
nop
das
roll
mov
test
les
inc
xchg
jl
dec
xchg
mov
xor
rcll
jge
add
add
inc
shlb
es
pop
add
jecxz
js
and
mov
sbb
sub
movb
jns
jb
adc
adc
sarw
lea
mov
sbb
mov
adc
adc
sub
aam
shlb
or
and
repnz
fmul
in
push
pop
ja
or
inc
add
xchg
aam
xlat
push
jmp
and
je
xchg
mov
or
icebp
push
ret
scas
arpl
sub
or
or
add
enter
add
ja
adc
jns
xchg
clc
xchg
sub
test
fdivrl
gs
dec
aam
hlt
add
mov
adc
cltd
add
dec
mov
arpl
xor
out
cmp
mov
sub
nop
das
and
ss
dec
lods
mov
cmc
dec
jbe
mov
add
pop
pop
xlat
gs
add
in
push
fwait
scas
dec
or
pop
pop
arpl
lcall
push
sub
add
js
pop
pop
pop
xchg
dec
sbb
fs
imulb
adc
push
adc
sbb
into
jae
out
sub
inc
dec
loopne
pop
or
mov
add
mov
push
test
hlt
insb
mov
fadds
inc
fiadds
fnstsw
lods
inc
sub
dec
loope
outsl
imul
or
sub
and
hlt
stos
sbb
jp
aam
ret
jbe
xchg
push
jbe
push
insl
pusha
mov
mov
cmp
aam
ss
push
cmp
repnz
add
popf
mov
mov
add
sbb
add
into
add
imull
out
inc
adc
mov
mov
xchg
dec
push
in
sahf
or
adc
cmp
rclb
xchg
outsb
scas
add
sbb
movsl
pusha
sbb
dec
sub
enter
fwait
sbb
lods
xor
sbb
dec
or
jg
pop
adc
pop
pop
cmp
xchg
xorw
and
les
sub
lcall
or
push
pop
dec
js
sub
dec
sub
adc
js
shrl
shrl
xchg
cvtps2pi
adc
sbb
call
in
push
or
push
testl
ret
inc
mov
xor
inc
movsb
xchg
add
and
dec
loope
jecxz
or
cmp
add
adc
cmp
add
mov
add
sbb
les
cmpl
adc
call
test
aam
pop
jmp
fs
ficompl
stos
and
sub
das
mov
pusha
call
sbb
popa
xor
test
in
nop
shll
outsb
add
mov
add
pop
xor
cmp
push
clc
add
add
xchg
push
push
out
jp
and
xchg
imul
adcb
inc
cmovo
add
imul
push
cmp
imul
mov
ss
cmp
aas
jnp
addr16
inc
mov
or
sti
ljmp
mov
sub
xchg
addb
xchg
orb
movb
and
lds
mov
push
ss
rolb
xchg
add
aaa
xor
add
in
mov
inc
add
push
rcll
adc
mov
jmp
loopne
adc
inc
stos
es
jl
xchg
and
movsl
push
inc
in
push
inc
xchg
push
ret
test
in
cmp
imul
mov
dec
addl
out
test
add
cmp
or
sub
xor
or
movsb
dec
push
fwait
or
mov
fs
repnz
inc
add
xor
adc
jbe
xchg
data16
push
mov
dec
repz
jns
add
cmpl
sub
adc
adc
mov
ja
add
jbe
or
mov
add
xchg
aas
push
nop
aaa
mov
add
adc
loope
dec
push
nop
add
sub
ret
push
mov
or
pop
and
inc
insb
push
hlt
dec
push
mov
jle
pop
mov
pop
repnz
sbb
cmp
sub
andb
popa
aaa
lods
mov
lret
rolb
push
dec
stos
in
lods
cmp
inc
outsb
sub
dec
pop
inc
cs
call
push
idivb
or
sub
hlt
nop
mov
adc
push
sbb
test
fcmovnb
aam
ret
imul
int3
rol
or
cmp
adcb
fistpll
mov
push
adc
or
fidivl
hlt
pop
das
sbb
sbb
xor
or
lods
mov
mov
xor
jle
pop
test
test
or
dec
cmp
out
fndisi(8087
push
sub
xor
cmp
inc
push
sub
xchg
rcrb
fdivs
cmpb
and
mov
and
inc
stc
adc
rolb
or
inc
ljmp
or
sbb
pusha
dec
scas
add
popf
xchg
icebp
pop
or
mov
or
loopne
fimull
dec
dec
mov
or
jl
adc
mov
adc
cmp
sbb
aas
inc
add
daa
xchg
fstps
add
and
xchg
adc
sbb
movsl
mov
test
fisubl
cs
ds
lahf
dec
faddl
clc
sub
adc
push
paddsb
ja
jb
shrb
push
loop
sub
push
out
pushf
rolb
mov
sbb
jns
xchg
movswl
fwait
in
popf
sub
sbb
mov
cmpsl
sbb
push
js
dec
notl
cmp
rclb
sbbb
outsl
inc
loopne
push
sub
pushw
mov
mov
mov
or
cmp
mov
sbb
push
les
push
cltd
mov
dec
add
rol
scas
mov
outsl
mov
cmp
outsl
and
scas
or
sbbb
mov
push
sbbl
add
pop
jge
mov
add
mov
out
lods
ret
cmp
je
and
adc
fucomi
push
ja
fimuls
mov
push
xor
add
xchg
adc
es
push
push
sub
inc
lcall
shlb
add
flds
ljmp
dec
insb
xor
fidivrl
aad
dec
shrb
add
jae
bts
cmp
cwtl
test
inc
das
or
adc
mov
nop
fwait
mov
push
sbb
cmp
ja
dec
mov
dec
pushf
add
dec
shlb
nop
inc
lds
add
push
les
dec
fcoml
andb
test
loop
cmpl
mov
in
test
daa
dec
test
xchg
popf
fstps
cmp
push
sub
loope
pop
cli
or
mov
nop
jle
jmp
jp
push
push
sbb
inc
fs
aad
jns
js
sbb
inc
xchg
das
sbb
push
xor
ljmp
clc
insl
pop
sub
inc
mov
or
pusha
inc
xor
in
inc
inc
idiv
push
mov
jmp
mov
push
mov
daa
inc
test
push
clc
jge
or
out
dec
adc
arpl
aas
outsl
mov
cmp
sub
jmp
xchg
fstpl
test
jbe
push
jmp
xor
inc
insl
mov
inc
insb
push
pop
mov
or
push
enter
mov
and
jne
pop
pushf
movsl
pop
push
cli
push
mov
or
cmp
push
push
jno
sbb
cs
sbb
push
sbb
movl
shr
xchg
scas
jo,pn
outsb
jg
insb
flds
sbb
mov
xchg
lock
and
outsl
mov
dec
jne
into
inc
sub
sub
push
fimuls
test
xchg
repz
mov
lcall
stos
les
sub
jmp
aam
jmp
sbb
add
adc
fs
pop
nop
ret
pusha
nop
push
push
push
inc
rorb
or
mov
lods
mov
pop
mov
sbb
pop
add
xor
mov
add
adc
pop
int3
mov
inc
pop
mov
pop
fs
or
aam
sub
ret
std
mov
mov
daa
or
mov
push
mov
pop
popa
xor
ret
es
inc
repnz
aad
pop
sub
push
popf
lods
dec
ret
mov
into
xor
cmp
mov
and
pop
mov
cmp
dec
dec
fisttpl
gs
movsl
add
sbb
or
add
mov
or
adc
adc
xor
add
push
roll
push
je
cs
out
cs
xchg
dec
push
cwtl
cmpsl
add
hlt
adc
enter
sbb
jp
pop
test
add
push
mov
lcall
int
jecxz
push
lods
mov
and
mov
sub
mov
mov
imul
cmpsb
insl
repz
and
insl
daa
add
cmp
push
dec
es
loope
fs
in
loopne
mov
jo
invlpg
rolb
push
push
sbb
mov
pop
push
nop
nop
rol
int3
and
add
push
xchg
rcrb
and
es
sbb
xor
or
add
int
ret
mov
int3
or
cmpsb
fildl
cli
and
jle
xor
inc
or
loop
mov
aad
nopl
dec
dec
pop
sti
mov
and
adc
add
sti
data16
jle
adc
popf
sub
scas
cmp
add
lods
add
mov
pushfw
add
xchg
pop
sbb
sbb
inc
push
leave
inc
outsl
and
adc
lods
or
andl
lcall
or
lret
sbb
cmp
and
xchg
inc
rcrb
adc
lock
call
adc
sar
or
jno
pop
andb
and
daa
popa
leave
lea
pop
mov
add
or
mov
xor
shl
out
pushf
movsl
lods
dec
sbb
stos
mov
mov
dec
mull
sub
mov
mov
fimull
repnz
cmp
js
jmp
lods
pop
add
xchg
ja
out
loop
stos
mov
mov
adc
cmpsl
mov
loopne
add
inc
mov
cmp
dec
adc
sub
add
shl
in
add
incl
pop
dec
insb
mov
or
jg
or
mov
in
call
or
cmp
clc
xor
andl
std
and
pop
aaa
mov
fs
or
lods
sub
je
sub
pop
andl
xchg
stc
fs
ret
lea
adc
xchg
adc
push
aam
xchg
xorb
add
and
sub
pop
add
mov
add
xor
or
pop
push
rcl
nop
jo
push
cmpsb
mov
mov
mov
jp
es
jle
cmp
mov
inc
dec
jl
enter
jns
shrl
out
xchg
enter
xchg
fisttps
pushf
in
cmpb
ficomps
in
cltd
cmp
mov
xchg
mov
cs
inc
mov
mov
orb
jge
sub
imul
pop
cmp
movsl
xor
and
fs
mov
dec
lcall
jl
sub
dec
jg
shlb
imul
cmpl
mov
xor
inc
dec
and
pop
push
inc
ret
jo
jne
mov
mov
sbb
jle
xchg
data16
lods
and
sbb
adc
cmp
lret
sarl
xor
xlat
or
filds
dec
fadds
sub
mov
pop
lea
add
mov
push
add
xchg
dec
or
jl
pop
pop
jp
push
into
push
lock
add
idivl
add
and
cld
jno
sti
add
mov
das
push
mov
in
notl
xchg
call
nop
cs
sbb
push
daa
loope
mov
fdivr
mov
imul
lret
rclb
inc
daa
icebp
std
jmp
or
inc
dec
and
movl
sbb
inc
mov
or
rolb
add
mov
and
mov
mov
xor
adc
stc
push
test
movsl
loopne
mov
sub
push
mov
stc
sbb
aas
push
lds
mov
ret
jecxz
or
sbb
pop
or
or
sbb
js
or
sbb
cmp
repz
mov
sbb
rcr
jno
arpl
js
jmp
mov
fstpl
cmp
pop
adc
ss
enter
or
cmova
dec
test
dec
adc
sbb
jne
sbb
sub
leave
and
inc
mov
push
adc
jmp
sub
xchg
and
cmp
sub
or
adc
add
xchg
enter
test
inc
icebp
pusha
fwait
add
xor
add
idiv
sub
xor
popa
popf
xchg
add
mov
fists
push
sbb
inc
push
insb
mov
jl
xchg
add
cmp
shlb
or
add
inc
idiv
jns
sbb
jmp
aad
clc
sbb
inc
out
add
cmp
xor
or
sbb
pop
dec
shrl
clc
aaa
mov
mov
sub
aas
adc
xor
add
push
fsubs
sbb
xchg
adc
sysret
dec
ror
jg
pop
jg
cmp
add
xor
popl
mov
ret
push
or
pusha
sti
jmp
cmc
sbb
test
sbb
fadd
repnz
push
sbb
dec
add
pop
xor
dec
push
js
stc
mov
xchg
ss
sbb
dec
mov
in
rolb
rolb
pop
push
xor
jo
jb
pop
xorb
add
adc
daa
add
sbbl
cmp
push
loope
sbb
adc
jbe
push
test
xchg
jo
cwtl
pop
sbb
and
adc
stos
push
sub
push
daa
jne
movsb
lds
popl
loope
xor
test
add
jbe
jbe
or
andl
dec
sahf
dec
es
dec
push
push
xchg
add
xchg
push
fs
mov
xor
sbb
inc
ja
or
icebp
inc
mov
adc
popa
rcrl
jge
jecxz
adc
push
and
test
xchg
push
dec
xchg
push
adc
ss
sbb
lock
mov
pop
inc
sbb
sub
adc
mov
les
lock
jne
sub
inc
fildll
pop
or
jne
add
add
mov
cmp
and
lea
or
rcrl
pop
mov
mov
push
pop
mov
add
mov
sar
cld
pop
fs
call
push
xchg
mov
sbb
or
or
jae
xor
sbb
in
fistl
outsb
add
rcrb
shl
popf
fdivs
into
repnz
push
mov
jne
cltd
jle
fsubs
fwait
adc
inc
xchg
jno
pop
mov
scas
jne
add
inc
mov
xchg
loopne
push
inc
add
sub
pop
pop
inc
or
adc
andb
sub
sbb
hlt
outsl
enter
int
or
xchg
rclb
adc
xchg
out
add
insb
test
add
pop
sub
or
inc
lret
dec
and
pop
cmp
cs
out
pop
cmp
push
rolb
inc
jo
mov
leave
sbb
add
inc
add
xor
notl
and
roll
leave
xor
push
out
pop
push
adc
jmp
test
add
jne
cmp
cwtl
and
mov
add
push
lds
or
jae
add
cmp
adc
pushf
lea
aaa
and
inc
pop
inc
cltd
mov
fistps
xor
test
xchg
inc
mov
push
or
popaw
nop
or
fistpll
xor
sub
and
lock
in
add
sub
adc
call
inc
or
and
push
in
leave
mov
dec
lock
pop
or
mov
cmpsb
pop
mov
addl
push
inc
cmpsl
sbb
pop
call
loopne
mov
inc
adc
add
loope
mov
adc
jb
push
jb
inc
and
adc
lods
and
aaa
pop
popa
push
bound
mov
and
xchg
dec
shrb
sub
sub
inc
push
push
or
ret
mov
sbbb
or
sbb
or
add
mov
cmp
add
ljmp
adc
dec
or
gs
popl
sar
jns
adc
js
sbb
inc
pop
or
int3
adc
daa
pop
pop
jne
into
ds
rolb
jge
hlt
add
or
iret
popf
ss
add
lock
pop
push
or
push
push
sub
rcl
outsl
mov
pop
xchg
dec
sahf
xor
inc
cwtl
xchg
add
push
fimuls
pop
push
outsl
add
pop
xor
je
imul
push
or
inc
cli
sbb
sbb
in
fwait
mov
mov
pop
xor
inc
or
inc
dec
xchg
mov
imul
rolb
dec
or
sub
test
mov
shrb
adc
clc
nop
clc
mov
js
xchg
adc
push
enter
xlat
lock
add
or
dec
mov
inc
cmp
mov
es
mov
loopne
icebp
or
mov
jp
mov
push
jnp
sub
js
flds
push
and
push
xor
or
mov
pop
jbe
jecxz
jle
shrl
mov
pop
add
pop
pop
divl
push
push
adc
shlb
idivl
add
test
dec
pop
mov
enter
xchg
sbb
ficoml
or
into
jno
in
xchg
out
sbb
pusha
inc
xchg
xchg
pop
push
int3
push
fwait
jmp
pop
or
fcompl
or
xchg
stos
sahf
mov
shrb
inc
push
and
das
sub
dec
cmp
imul
add
lea
ret
adc
sbb
loop
push
jg
jge
test
mov
mov
sbb
dec
lods
sub
mov
sub
adc
xchg
xor
or
add
add
xchg
pop
fs
adc
lock
adc
lret
sbb
xor
pop
ret
xor
pop
xor
dec
xor
jno
mov
sarl
cli
nop
push
dec
jecxz
cwtl
push
insb
add
xorl
loopne
xchg
push
fldt
cmp
sub
cmp
fistps
push
or
sbb
fists
imul
add
stos
or
push
shrd
popa
pop
icebp
sub
adc
and
mov
xor
push
lea
shrl
sbb
and
into
mov
adc
add
pop
inc
sub
imul
sbbb
mov
movsl
stc
sbb
sub
adc
test
nop
mull
push
jmp
xor
popf
or
pusha
mov
xor
popa
mov
mov
sub
outsb
jmp
in
adc
in
pushf
adc
jecxz
push
push
inc
push
shlb
packssdw
push
adc
mov
push
aaa
mov
sub
adc
sahf
inc
and
cmp
ds
push
or
dec
jbe
sub
xchg
pop
jne
mov
mov
sbb
cmp
jne
pop
das
test
gs
shll
and
mov
mov
rorb
sub
addb
push
lret
popa
xchg
or
and
adc
iret
aad
sbb
loope
jae
push
pop
or
add
xor
cwtl
inc
aas
icebp
push
dec
testb
push
pusha
fs
jbe
adc
insb
daa
iret
and
sbbb
adc
lahf
sarb
xchg
icebp
pop
cli
push
dec
adc
and
pusha
push
shl
out
loop
js
cmp
jmp
pop
dec
imul
jae
jp
mov
sbb
cmp
pop
pop
and
sbb
xchg
and
rclb
mulb
into
es
push
dec
je
insb
inc
add
mov
adc
push
js
push
mov
dec
retw
pusha
jecxz
int
ret
pusha
loope
cmp
sahf
rorl
mov
dec
sbb
push
sbb
push
dec
dec
das
add
or
popl
push
adc
xor
fcoms
test
imul
enter
loope
leave
js
adc
inc
in
out
add
enter
movsb
popf
testb
dec
push
arpl
les
jo,pt
pop
cld
je
popa
shll
pushf
nop
xor
popa
add
jae
arpl
sub
sbb
jnp
mov
leave
jecxz
mov
faddl
dec
pushf
cmp
je
mov
and
clc
mov
dec
ret
add
add
sub
add
adc
cmp
leave
js
clc
mov
push
adc
ret
xchg
jg
inc
dec
and
xorb
dec
movl
jg
pop
jge
scas
dec
clc
xchg
jle
jl
xor
lock
out
sub
es
ss
es
inc
sub
add
lahf
and
inc
and
orb
inc
js
mov
in
rcrl
push
ljmp
xchg
xlat
sbb
mov
test
push
mov
into
unpckhps
mov
or
pop
and
xor
iret
aam
gs
shlb
jo
fistl
inc
call
andb
and
jecxz
pop
ljmp
hlt
cltd
or
xor
orb
jb
cmp
push
cmpsl
mov
ret
lds
xlat
sub
cmp
popa
cmpsb
sub
mov
add
fisttpll
push
xorb
sbb
repnz
popa
sub
inc
pop
fadds
pusha
mov
xchg
inc
or
aam
add
add
je
xor
lret
and
push
pop
and
add
pop
js
push
cmp
scas
subl
les
jnp
aaa
sbb
test
lret
jne
data16
and
nop
out
mov
xchg
or
jno
andb
jne
out
aas
orb
cmp
jl
or
sub
pop
mov
sub
jg
daa
pop
rorb
push
push
and
das
and
movsb
sarb
repnz
add
add
adc
dec
mov
xchg
mov
sub
and
add
sub
loopne
dec
mov
mov
sub
mov
add
jne
les
xor
cmp
or
in
stos
and
imulb
pop
xor
fcoml
adc
mov
cs
mov
push
jb
pop
push
test
adc
lock
mov
pop
stc
adc
ljmp
add
ret
push
rolb
popf
hlt
clc
ss
xchg
sbb
adc
push
push
cwtl
ja
cmpsb
or
ret
mov
dec
cmp
add
mov
imul
rcrb
mov
shlb
mov
mov
jb
lods
cld
clc
mov
push
cli
leave
decl
les
cli
and
pop
push
push
adc
lcall
or
adc
sbb
sbb
cmp
adc
cmpsb
insb
test
lret
mov
pop
scas
inc
cmpsl
and
inc
and
xlat
inc
add
pop
inc
bound
dec
daa
sub
addl
sbb
adc
pushf
divl
mov
movswl
cmp
and
sub
adc
inc
inc
xor
push
xor
shll
movb
ss
cwtl
adc
lock
clc
cltd
mov
movsl
inc
inc
cmp
repnz
aas
jmp
repnz
inc
loopne
in
das
jmp
call
pop
rclb
inc
dec
adc
mov
dec
clc
ror
js
lea
jmp
inc
or
or
push
pop
cmpsb
pop
cld
adc
imul
sbb
xchg
les
add
lahf
xor
test
lea
sbb
add
sub
push
arpl
sbb
dec
xlat
movsb
or
ret
inc
inc
or
loopne
xchg
scas
sub
arpl
mov
jp
mov
xor
dec
les
push
push
adc
arpl
fisttpll
xor
dec
cmp
mov
mov
adc
lea
ljmp
dec
mov
cli
imul
lea
arpl
daa
xchg
add
and
shrb
pop
outsb
mov
vcvtps2ph
aam
arpl
sti
xlat
or
or
and
push
popa
roll
clc
cmpb
in
call
cmp
adc
das
in
sbb
mov
inc
or
mov
xor
dec
add
iret
mov
and
mov
movsl
fwait
mov
testl
cmp
in
and
mov
dec
lods
pop
out
jnp
push
out
cmp
aaa
test
mov
nop
rclb
sub
mov
in
xchg
call
cwtl
cld
pushf
mov
cmp
repnz
sub
dec
xor
iret
nop
test
lods
xchg
enter
mov
and
lret
add
cmc
and
push
add
add
inc
dec
dec
adc
insl
sub
cmp
dec
pop
inc
gs
pop
add
adc
mov
inc
mov
rolb
mov
inc
sub
add
arpl
push
insl
jo
pop
test
subl
mov
ss
in
inc
out
add
push
addl
jae
sub
popa
insb
pop
push
pop
sarl
test
jno
es
insl
cld
adc
mov
je
and
ss
mov
sti
add
push
adc
adc
pusha
insb
add
shrd
cmpsb
and
cmpsb
pop
aam
in
jl
push
mov
nop
push
mov
in
outsl
dec
or
push
adc
xor
lock
hlt
imul
ret
mov
add
sbb
or
test
nop
or
cmp
out
inc
add
sub
sub
pop
push
popa
movsb
xor
and
data16
cmc
movsb
mov
insb
outsb
sub
xor
mov
or
mov
and
outsb
dec
cmp
mov
and
sub
test
roll
mov
pop
das
xchg
push
cmp
dec
xor
dec
flds
sbb
outsb
add
popf
and
lock
cltd
in
inc
sub
sarb
sub
cmp
mov
int
test
and
xchg
inc
pop
loope
gs
rcrl
fadds
ret
sub
loop
cs
sbb
pop
sti
std
fdivrs
or
lods
or
jmp
lods
jns
fildll
or
ret
add
xor
and
or
inc
sub
mov
mov
data16
push
ja
outsb
sbb
jp
cltd
scas
sub
mov
and
jne
andl
outsl
insb
test
call
jg
pop
xorb
mov
and
std
stos
aaa
cmp
jae
fwait
add
cmp
xchg
xor
hlt
sbb
shrb
adc
std
add
int3
call
pop
mov
lcall
in
sub
nop
add
push
fs
push
movsb
push
xchg
bound
and
mov
mov
dec
push
add
mov
scas
lcall
nop
ds
idiv
out
push
int
rcrb
mov
push
lret
inc
pop
jbe
pop
xor
test
pop
xchg
push
pop
and
js
dec
and
shrl
inc
dec
or
sbbb
repz
xor
add
xchg
pop
adc
jle
lahf
mov
sarb
shll
iret
or
mov
push
sbb
stc
pushl
orb
mov
hlt
adc
in
pusha
mov
lods
ds
sub
sbb
add
push
mov
pop
leave
sbb
pop
adc
faddl
test
movb
in
and
mov
sbb
addr16
or
and
xor
mov
pop
inc
xor
and
inc
out
les
add
movsb
inc
xchg
vmread
rcll
out
outsb
scas
jo
sbb
enter
and
jbe
pop
sub
push
nop
add
je
bsr
add
xor
cli
aas
movsb
sbb
sti
push
leave
test
xchg
ret
adc
aaa
bound
sub
pop
outsl
les
enter
xor
loopne
call
shl
hlt
clc
cld
sub
pop
roll
push
add
in
rol
cmp
ss
dec
enter
mov
or
aaa
mov
jb
lods
xor
lcall
push
rorb
xor
or
pusha
xchg
ja
mov
out
leave
mov
inc
sub
xor
add
inc
xor
nop
shrb
outsl
pusha
movsb
sti
push
rcll
lea
inc
mov
clc
add
lods
sbb
pop
sub
xchg
bound
adc
xor
xchg
jge
or
movsl
jnp
add
pop
mov
repz
xor
nop
outsb
int3
scas
and
fsubs
int
dec
adc
cs
or
dec
and
subb
in
jl
aas
or
fs
dec
les
xchg
divl
sub
lret
push
ss
bndstx
rcll
and
mov
inc
xor
insb
adc
jns
ja
mov
sbb
stos
jmp
lea
mov
movsl
aas
dec
js
bound
test
cmp
and
inc
loopne
mov
push
dec
loopne
push
push
popa
das
lahf
mov
nop
jno
push
adc
loop
or
lods
jecxz
push
pop
pusha
rorl
pop
or
mov
xchg
mov
adc
sbb
sub
sub
jne
jle
mov
sub
jle
mov
sbb
inc
mov
jl
dec
sbb
adc
push
add
mov
frndint
loopne
mov
jp
pop
xlat
add
es
push
or
std
nop
loopne
add
clc
push
and
cmp
adc
cmc
loope
add
add
cmp
or
filds
mov
std
or
jl
call
out
lcall
lods
movsl
sbb
inc
add
ficompl
ds
orb
mov
addr16
pusha
clc
or
inc
push
cmp
dec
inc
cmp
xchg
js
aaa
dec
inc
les
jbe
fwait
xor
cmp
aas
sub
es
push
push
push
mov
push
insb
daa
xor
sub
xchg
add
xor
loop
hlt
mov
dec
test
push
bound
push
or
sub
or
and
xlat
mov
adc
adc
lea
roll
sbb
push
mov
dec
and
push
fs
bound
adc
sub
and
shl
adc
cmp
sti
xchg
clc
enter
test
sbb
push
jae
add
adc
pop
xchg
mov
inc
dec
or
cmp
and
push
test
pop
cwtl
or
inc
lcallw
sti
push
mov
mov
push
pusha
outsb
push
dec
scas
fmull
xchg
cs
fbstp
pop
mov
xor
ljmp
xor
dec
dec
orl
pop
imul
pushf
push
add
sub
adc
xchg
adc
imul
mov
ss
fildl
pop
out
aad
enter
pop
pusha
imul
inc
or
jno
cmp
cld
sub
fnstsw
cld
je
lds
movb
insb
mov
xchg
or
ret
js
nop
out
sbbb
push
pop
jge
jl
mov
pop
cmp
mov
aad
jne
sub
dec
add
cmp
add
mov
pop
cmpsb
inc
shlb
jae
cmp
xor
test
mov
aad
pusha
sbb
push
call
int
mov
aaa
cmp
je
and
pop
subl
aas
nop
xchg
add
xor
and
or
inc
gs
and
jns
adc
imul
mov
sub
mov
aam
mov
jg
aas
dec
loope
ret
popf
adc
inc
fdivs
dec
adc
out
rorl
fimull
cmpsl
adc
mov
sub
sbb
pop
push
or
inc
scas
jnp
testl
fadds
add
mov
and
mov
add
mov
sbb
jmp
inc
cmpb
out
int
jmp
jg
sbb
add
cmp
push
push
add
pop
nop
data16
inc
pop
and
enter
mov
and
ret
inc
out
out
nop
mov
in
shl
movsb
adc
dec
push
xlat
aam
xor
fwait
dec
outsl
xor
test
mov
cmp
lock
call
fcmovb
addl
pop
lret
sbb
xlat
lret
and
mov
or
jbe
js
mov
dec
testl
jecxz
mov
sub
pmulhuw
push
popf
cltd
rorb
jle
add
aam
nop
push
out
sub
test
fisttps
arpl
nop
pop
pop
push
xlat
sbb
ja
int
pop
xlat
sbb
cwtl
xor
sbb
scas
lahf
in
stc
pop
scas
in
shlb
and
lret
loopne
fadd
sahf
movups
lods
rcl
adc
movsb
jbe
adc
ss
xor
int3
pop
daa
adcl
and
mov
and
jmp
ja
push
xchg
test
fstps
fnstenv
fistpll
dec
push
jle
mov
xor
or
shl
lahf
adc
fstpl
xchg
cmp
and
jno
out
rorl
iret
lock
dec
out
dec
sbb
loope
and
inc
into
dec
adc
imul
pop
pushl
cmp
sub
push
push
xor
jge
sbb
xchg
mov
pop
pop
xchg
cmc
movl
add
cltd
sub
inc
add
inc
je
dec
jo
sbb
dec
into
fs
push
mov
push
add
pushw
add
mov
outsb
divl
xor
inc
push
iret
or
mov
xor
inc
jmp
loope
shrb
inc
xchg
mov
insb
and
stc
aaa
or
or
mov
gs
mov
push
subl
adc
icebp
ds
push
push
push
les
cmp
or
add
dec
int
push
lcall
xor
xor
sub
pop
cwtl
dec
cld
pop
iret
iret
sub
dec
xor
aam
sbb
dec
and
xchg
subl
pop
add
push
inc
or
or
xor
mov
adc
cmp
jg
adcb
sbb
scas
sarb
cli
jae
push
push
push
inc
inc
sub
xchg
orb
pop
pop
sbb
nop
inc
xor
cmp
mov
xchg
add
and
sub
adc
lock
cmpsb
adc
jnp
hlt
mov
jnp
sbbl
pop
adc
add
xchg
pushf
push
aam
andb
pop
push
cmp
pop
add
lods
cwtl
ret
mov
movsl
mov
or
push
iret
sub
mov
inc
lea
cmp
adc
mov
cmpsl
rcll
aad
mov
push
sbb
push
xchg
and
rolb
lea
pop
sbb
pop
mov
jecxz
rcrb
insb
jmp
inc
orl
in
fdivl
cmpsl
xlat
inc
sub
pusha
and
xor
int
hlt
fimuls
xchg
sbb
cltd
push
jmp
jo
xchg
pop
loope
shrl
cmp
aam
cmpl
cs
dec
std
shlb
adc
xchg
lods
fwait
xchg
inc
cwtl
push
loopne
bound
adc
dec
xor
and
mov
mov
roll
aaa
and
and
add
fadds
icebp
push
adc
mov
cmp
dec
push
or
les
je
sub
mov
mov
pop
inc
pop
loop
cmpl
les
xchg
cwtl
xchg
js
jecxz
aaa
sahf
dec
sti
outsb
push
pop
mov
push
inc
arpl
fwait
adc
loop
test
mov
pusha
cmpsl
pop
xchg
pushf
nop
je
push
imulb
out
stos
mov
ljmp
or
adc
pop
js
mov
adc
adc
push
loop
dec
sbb
adc
dec
push
inc
fdivp
stos
in
mov
or
hlt
cmp
xchg
test
xlat
and
stos
push
jb
icebp
sbb
test
adc
lret
in
gs
in
adc
adc
mov
ret
inc
add
div
in
pop
jbe
mov
sbb
mov
call
xchg
pushf
call
or
and
adc
pop
xor
push
inc
in
hlt
cmp
leave
mov
push
mov
pop
iret
nop
cli
ror
jg
js
jne
hlt
insb
aas
jne
mov
es
int3
in
ja
add
mov
or
jns
icebp
inc
mov
cmc
pop
inc
inc
ret
dec
adc
cmp
test
hlt
sub
jmp
sub
sub
or
pop
push
clc
adc
and
dec
mov
pushf
xor
mov
sub
mov
pop
lods
cmpsl
outsl
int3
test
arpl
inc
push
sbb
pop
dec
mov
inc
jl
push
lds
pop
sub
sbb
rcr
xor
pop
je
mov
dec
xor
push
ja
lret
ja
ret
xlat
fadds
inc
es
push
add
sub
jg
jbe
shrb
movsb
xor
ds
lcall
jmp
bound
mov
mov
dec
push
data16
add
mov
cltd
and
jmp
mov
inc
dec
dec
lods
orb
roll
mov
mov
pop
fistl
cwtl
popa
loope
mov
or
call
cltd
pop
fimull
inc
or
scas
movl
fdivs
cltd
pop
flds
ficompl
inc
in
adc
or
sub
movsb
jmp
cmp
cmpsb
xor
inc
test
mov
dec
adc
fnstenv
outsb
pop
or
jno
ret
lahf
or
xchg
nop
test
out
enter
out
mov
out
add
lahf
shrb
xchg
mov
cmp
sbb
inc
cmp
test
adc
mov
cmp
xchg
cwtl
add
rorb
test
je
sub
test
hlt
push
xor
xor
add
in
arpl
mov
or
xor
out
or
jge
mov
ffree
push
inc
pop
inc
mov
pop
dec
inc
dec
jno
in
nop
xchg
movsb
or
in
push
xchg
sbb
rclb
mov
push
xchg
dec
xor
add
cmp
fs
cltd
adc
push
sub
cltd
pusha
fimuls
cld
push
mov
cmp
add
add
imul
scas
adc
jmp
clc
add
jno
rcrb
adcb
pop
les
dec
cmp
arpl
dec
in
jp
jecxz
rcll
inc
pop
loopne
push
sbb
mov
fnsave
dec
mov
push
jmp
mov
xlat
in
stos
mov
mov
bnd
addb
je
push
int3
gs
and
pop
and
and
sub
mov
pop
pop
daa
add
jns
leave
and
fisttps
in
xchg
fidivrs
adc
or
cmc
jo
sub
push
sub
out
pop
xchg
lock
mov
dec
xchg
dec
fcmovu
xchg
add
dec
cmp
xor
lcall
es
or
xchg
adc
daa
cs
xor
cmp
imul
or
fildll
je
adc
ret
sbb
xchg
add
lcall
test
loope
sub
mov
pop
sub
sbb
and
repnz
test
xchg
pop
mov
outsb
ret
pushl
cmpsl
add
dec
jne
sahf
dec
es
dec
mov
fnstsw
fistpl
jmp
mov
je
outsl
pop
xor
mov
and
loope
pop
adc
mov
clc
push
js
xchg
mov
fdiv
sbb
subb
loope
mov
mov
cld
push
sub
cmp
dec
pop
jnp
cmp
sar
jmp
outsl
lea
sbb
xchg
call
subb
dec
push
mov
sub
add
sbb
lea
in
out
or
repnz
ret
push
add
test
insb
gs
cmpb
movb
sub
or
nop
decl
xor
jb
add
vphsubwd
mov
in
and
sub
mov
and
imul
pop
and
dec
fimuls
imul
add
push
pop
or
insl
or
popa
jb
add
mov
jg
or
popa
adc
xor
sbb
or
pop
push
bound
mov
add
movsb
and
jecxz
or
pop
movsb
push
push
xchg
cmp
pop
inc
jge
mov
add
dec
cltd
add
imul
mov
jae
xchg
or
push
inc
fs
arpl
test
movhps
pop
in
xchg
in
or
sbb
gs
add
dec
push
and
aas
cmpsb
push
icebp
pop
fistpll
add
mov
in
cmpsb
dec
pmulhuw
inc
mov
mov
insl
inc
add
ja
mov
in
cs
add
push
das
mov
in
mov
or
add
sub
or
stc
push
add
inc
add
mov
insb
push
movsb
pop
inc
jae
aam
push
fucomi
clc
xor
cs
fdivs
push
push
cmpsb
test
psubw
jo
dec
cmp
add
sub
testl
pop
inc
or
and
adc
test
incl
push
lcall
and
add
decl
loop
xor
cli
mov
push
add
fbstp
pop
push
pop
and
sbb
push
adc
dec
pop
movsb
xchg
xor
das
push
xlat
pop
pop
push
jns
pusha
je
clc
and
mov
dec
mov
sub
enter
rol
push
cmp
loopne
popf
dec
sbb
mov
or
in
test
incl
mov
inc
decb
push
mov
test
pop
cmp
xor
mov
orb
imul
stc
lea
fs
dec
add
sub
and
fs
sub
lock
cmpsl
pop
and
cwtl
mov
mov
push
scas
dec
cltd
sbb
cs
mov
ds
pushf
and
dec
add
or
pushf
mov
cmp
cmp
mov
cmp
adc
sbb
mov
or
or
adcb
fbld
cmp
andb
leave
sarb
cmp
inc
or
in
subb
add
inc
add
popf
xorb
push
dec
push
or
test
push
jbe
mov
adc
add
mov
inc
push
mov
imul
push
or
jnp
cmp
or
xchg
push
popa
fs
sbb
pusha
and
push
popf
fisttpl
xorl
rolb
lcall
in
inc
mov
inc
pushf
pop
xor
and
adc
jecxz
nop
inc
or
sub
or
pop
cmp
test
sbb
mov
and
jl
pop
in
mov
mov
pop
test
jmp
cs
add
jle
pop
pop
in
pop
repnz
nop
inc
aaa
sub
imul
int3
inc
js
cs
test
cmp
cs
jp
daa
inc
mov
add
roll
adc
pop
nop
add
out
filds
pop
pop
jmp
mov
in
nop
pusha
pusha
psubsw
out
in
dec
cmp
cmp
outsb
add
addl
mov
and
cwtl
or
dec
adc
adc
rolb
add
xor
sub
mov
lret
add
or
xor
stos
add
mov
add
push
push
in
into
scas
jnp
iret
xor
lea
icebp
push
inc
iret
sbb
add
shr
sbb
or
int3
push
push
adc
add
decb
mov
pop
jg
push
mov
popa
cmpsb
and
dec
mov
mov
ss
flds
loopne
push
cld
aaa
push
das
cmp
add
or
mov
sbb
jnp
cmp
push
sbb
fnstcw
or
cmp
bound
sbb
adc
mov
sbb
and
push
sbb
mov
nop
into
movsb
push
push
and
es
incl
dec
pop
pop
pop
dec
js
nop
inc
push
dec
inc
scas
inc
hlt
pusha
pop
inc
pushf
inc
push
or
push
nop
push
pop
and
push
or
fcoms
or
lods
in
pusha
mov
and
popa
ljmp
fsubs
pop
and
mov
adc
mov
fisttps
insl
or
mov
jbe
lea
jecxz
cmp
mov
jb
xlat
or
roll
push
sbb
or
nop
mov
or
enter
in
xchg
out
lock
daa
xchg
lods
lock
les
dec
loope
mov
cmp
xchg
scas
xchg
nop
xlat
icebp
sbb
and
test
clc
push
inc
xchg
xor
mov
ja
test
mov
xor
xor
pop
dec
les
push
inc
dec
dec
dec
dec
dec
dec
dec
dec
inc
cld
movsl
add
push
push
push
push
push
sub
xchg
push
push
gs
rcl
add
test
aad
pop
arpl
movsb
push
addr16
test
xchg
adcb
xor
test
imul
shrb
loop
xchg
cmp
and
inc
std
mov
and
add
push
add
rolb
andb
loopne
mov
js
mov
inc
add
sbb
dec
test
xchg
xchg
pop
push
sub
test
pop
in
incb
add
enter
mov
push
orl
pop
sub
mov
daa
add
int3
push
ss
push
cli
xor
push
in
sub
jle
data16
popf
pop
cmc
rep
push
inc
jge
shl
xchg
je
cmp
or
cmp
lahf
sarb
xchg
aaa
imul
pop
cli
push
sbb
pop
sti
call
jl
cs
cs
movsb
mov
ret
add
sbb
or
jb
or
loope
in
add
add
es
jmp
xor
fs
inc
inc
inc
dec
pusha
sbb
dec
call
mov
dec
mov
lret
add
or
rclb
enter
adc
jmp
jmp
dec
inc
scas
sbb
imul
pop
fs
and
cmpsl
adc
icebp
cmp
pop
xchg
sub
aaa
sbb
fs
cvtps2pd
fs
stc
cmp
jbe
push
bswap
or
in
ljmp
adc
inc
sbb
xchg
pop
or
clc
inc
adc
loop
cmc
orl
jg
inc
dec
push
lods
mov
ret
out
mov
mov
popa
fdivl
mov
andl
popf
sahf
push
pop
inc
call
add
loopne
inc
xchg
jecxz
mov
or
jmp
inc
arpl
push
add
stos
dec
inc
add
adc
scas
pop
lock
fisubl
dec
fnstsw
in
shll
xchg
xor
cmp
add
popa
add
inc
aas
jo
mov
pushl
sbb
xor
filds
mov
mov
add
or
cmp
jg
mov
ret
or
mov
and
in
lret
xlat
and
insl
pop
cmp
mov
insl
dec
add
sub
add
add
mov
sbb
and
adc
cli
dec
jo
es
sub
pop
add
scas
push
in
outsb
sub
icebp
cmp
or
hlt
or
jo
mov
fsincos
pop
fs
mov
push
aaa
jmp
xor
enter
push
xor
pop
test
out
in
adc
fcoms
jle
jg
in
dec
adc
xchg
rorb
xchg
jl
in
pop
ljmp
adc
rcll
and
repz
xchg
inc
and
sub
xchg
hlt
sbb
aad
imul
loopne
out
cmp
pop
enter
pusha
cmpsb
into
insb
arpl
sbb
hlt
popa
pop
push
fimull
add
imul
das
cmpb
sbb
jae
sbb
movzbl
cmp
stos
sbb
gs
push
inc
inc
je
popf
mov
imul
inc
pop
dec
mov
dec
stos
xchg
rorb
pop
js
mov
xchg
sub
xchg
cmp
mov
xor
ds
divl
push
sbb
push
mov
pop
or
add
aas
ss
jb
sbb
or
nop
aas
inc
inc
mov
xchg
lcall
pop
push
push
lds
xchg
int
push
pop
inc
add
cmp
add
inc
jl
add
imul
jmp
pop
mov
sub
inc
add
and
pop
lea
push
hlt
subb
ds
int3
imull
sahf
push
mov
jle
or
mov
jns
test
sbb
scas
test
push
lfs
inc
xchg
js
push
orw
fidivs
mov
add
xchg
add
dec
test
inc
or
rol
clc
loope
and
push
cmp
std
cmpb
add
add
jae
divb
mov
ret
in
jle
adc
dec
bound
iret
pop
pusha
dec
jae
mov
popf
fs
jb
sub
mov
lock
add
mov
hlt
arpl
add
daa
sarb
sub
sub
rorb
or
jnp
cwtl
cltd
aas
out
and
aam
les
cmpb
and
mov
int3
test
sbb
insb
fsubrs
shlb
cld
flds
call
lods
xor
cmp
fldcw
adc
push
jge
or
cmp
ljmp
in
testl
add
cmp
push
jnp
xchg
fstpt
dec
sbb
inc
iret
pop
or
repz
fcmovnu
jecxz
or
movsl
or
push
cmpsl
and
push
pop
cld
imul
and
add
dec
lods
hlt
cmp
adc
xlat
in
lods
in
or
jbe
test
push
adc
mov
cmc
in
push
or
push
in
movsb
sbb
inc
push
adcb
sub
sub
inc
gs
imul
cmp
mov
test
rorb
and
fwait
out
pop
popf
xchg
pop
or
aas
popa
cmp
push
cltd
je
popf
xchg
test
mov
sbb
sub
xor
subb
movsl
aaa
push
adcb
mov
mov
fdiv
sbb
push
inc
lods
movl
add
add
adc
mov
testb
popa
test
mov
and
icebp
jbe
xchg
les
mov
sbb
mov
test
fwait
das
adc
fidivl
push
loop
adc
or
push
adc
push
je
jp
popa
es
in
mov
add
je
jmp
out
pop
jmp
sbb
loopne
ret
or
push
popa
decb
inc
xor
movsl
setbe
sbb
pop
or
fidivrl
dec
cmpl
adc
jo
mov
dec
in
and
pop
insl
cmp
outsl
pop
push
inc
cmp
orl
out
fldenv
jbe
sbbl
sub
push
add
cmp
jae
in
les
push
jmp
jbe
sbb
pop
lock
popf
push
xor
popf
mov
sbb
lock
or
pushf
mov
int3
jnp
jmp
adc
cmp
shll
popw
rcll
sub
dec
sbb
loope
push
pusha
cmp
xchg
je
ljmp
and
scas
add
in
pop
adcb
add
push
add
clc
jmp
call
call
ficoms
or
jmp
jae
and
test
fst
clc
or
test
je
push
inc
orb
mov
es
hlt
rcr
orb
pop
push
sub
out
mov
leave
lock
loope
sbb
adc
pop
shll
lret
in
rolb
dec
and
mov
jle
mov
js
add
rolb
hlt
fstp
or
inc
cmp
popa
add
dec
popf
adc
sub
or
dec
push
xor
movsl
imul
xchg
notb
test
sub
or
loopne
mov
mov
enter
adc
add
mov
cmp
int
pop
or
and
int
outsb
push
daa
icebp
sbb
add
push
mov
pop
ret
xchg
ret
outsb
adc
dec
fidivrs
mov
test
test
or
add
je
inc
or
lret
bound
mov
push
push
sbb
mov
fisubl
ss
push
xchg
xlat
or
adc
push
notb
loopne
stos
inc
cmpl
sahf
dec
lahf
movb
cmp
pop
loopne
imul
inc
iret
dec
pop
das
fsts
sbb
mov
enter
jbe
pusha
or
das
std
xor
or
cld
dec
mov
int3
call
or
sbb
inc
cltd
pop
inc
addr16
mov
and
mov
and
pusha
lds
push
sbb
test
mov
aaa
push
inc
sub
xor
test
mov
jae
xchg
fdivrs
retw
mov
in
sub
mov
add
sahf
xor
lds
push
mov
rclb
sub
push
in
hlt
xor
push
sbb
sbb
adc
adc
sti
sub
or
xchg
xchg
mov
mov
mov
imul
addr16
sbb
sub
js
lock
dec
leave
mov
movsb
adc
ret
dec
in
push
mov
or
push
cwtl
or
inc
cwtl
pop
push
xor
aaa
pop
push
int
ret
inc
adc
cmp
dec
sbb
cmpsl
popf
icebp
push
fsubrs
test
sub
pusha
push
not
mov
out
xchg
femms
add
jl
inc
gs
clc
jecxz
push
das
dec
inc
call
sbb
mov
mov
inc
add
sub
xchg
dec
faddp
dec
push
add
inc
push
sub
dec
enter
lock
roll
mov
loope
sbb
add
pop
or
ret
adc
or
jl
dec
movsb
push
test
cmc
sub
add
adc
push
sbb
lods
popa
pop
xchg
mov
xor
cs
out
hlt
cmp
hlt
xor
iret
hlt
sub
inc
add
rep
or
sahf
mov
add
dec
clc
or
pop
push
aaa
loopne
jns
inc
jne
or
enter
fldcw
xor
lock
cmp
add
data16
movl
fildll
push
shl
add
sub
inc
stos
fldt
push
cmp
pusha
sbb
mov
jl
jne
cmp
adc
outsb
xchg
ret
aaa
fistps
ret
loopne
add
loopne
and
push
sbb
add
inc
cwtl
or
jne
mov
and
in
ja
or
xor
loopne
ret
call
dec
iret
jno
dec
or
or
dec
push
mov
dec
inc
add
or
jae
orl
xchg
sbb
bound
fisttpl
loopne
pop
inc
addl
sub
adc
pushf
or
add
sub
dec
or
xor
filds
adcb
shrb
inc
test
in
jmp
dec
arpl
add
add
sbb
adc
cmp
cli
loope
and
adc
xor
xor
bound
inc
sbb
add
lock
dec
cld
in
rorl
mov
cmovno
and
in
and
stos
sbb
repnz
call
push
dec
add
lea
and
insl
stos
inc
clc
push
and
adc
adc
mov
jb
sub
sub
jmp
lock
xchg
pop
dec
lock
adc
jb
dec
push
adc
adc
add
push
dec
fcoms
inc
xchg
xor
adc
sub
push
pop
pop
inc
mov
pop
inc
and
mov
clc
lock
dec
call
test
inc
push
add
test
lret
sbb
adc
mov
les
and
mov
pop
cmp
pop
cmp
pusha
inc
subb
sbb
jno
dec
adc
or
mov
and
out
lods
mov
adc
xchg
xchg
xor
jl
or
xlat
cmpsl
pop
and
jnp
inc
sub
cmp
insl
jns
popa
sarl
fwait
jae
jl
jge
sbb
fists
push
gs
push
sbb
lds
sbb
aam
enter
mov
mov
fmuls
je
cmpsl
and
mov
iret
xor
inc
push
sbbl
and
adc
xchg
scas
add
add
jne
popa
push
xchg
outsb
inc
sub
fs
rcrl
jp
repz
lret
jl
or
jl
or
ja
dec
sbbb
movl
pop
xorl
test
xchg
push
xchg
sbb
mov
xchg
insl
inc
sbb
bound
aas
sahf
clc
sbb
dec
dec
pop
sbb
movsb
stc
xor
mov
pop
or
mov
fs
icebp
inc
mov
mov
inc
call
sbb
adc
scas
adc
inc
gs
popa
loope
xchg
add
xlat
inc
push
mov
mov
mov
jo
xchg
mov
xchg
jmp
dec
mov
aam
dec
cmovno
xor
pop
xchg
pop
fistl
sbb
int
pushf
push
push
add
ds
out
sub
or
mov
lods
xchg
add
mov
les
in
ja
add
or
adc
test
xor
imul
adc
inc
lcall
and
mov
add
xchg
or
lret
xchg
lock
les
aas
pop
incb
add
sub
lea
cli
pop
inc
insb
xchg
xchg
or
sbb
movsl
lock
ret
cmp
mov
push
daa
inc
push
inc
dec
dec
dec
sbb
out
xor
ja
inc
popf
adc
pop
addb
pop
xchg
xor
es
push
mov
rclb
cwtl
ficoml
or
adc
aas
cmp
ds
outsl
ss
sbb
fstps
sbb
popl
cmp
or
icebp
and
lahf
xor
xchg
jae
addr16
mov
pop
pop
insb
daa
push
jle
pop
add
push
add
cmpsl
cmp
xor
bound
and
inc
mov
test
xor
sub
ret
addr16
sahf
jbe
fsubrp
aas
je
mov
sbb
pop
push
nop
mov
jne
mov
mov
jne
xchg
xor
push
add
jmp
hlt
push
pop
xor
cmp
mov
mov
jno
mov
or
jae
ds
inc
pop
inc
mov
orb
or
jne
outsl
inc
popa
dec
xor
xor
add
or
jae
les
jnp
mov
call
add
mov
out
mov
loopne
xor
push
and
popa
and
popa
outsl
mov
pop
fadd
pop
cmp
sarb
push
lret
fs
aas
add
inc
lret
testb
push
aaa
das
xchg
push
pop
fsubl
mov
mov
sbb
inc
ds
stos
daa
bound
xor
rcrb
aaa
stos
and
test
out
and
mov
sbb
ja
mov
push
aas
jbe
inc
cmpsb
mov
and
add
xchg
fs
push
push
mov
mov
loopne
ljmp
fs
pop
lea
push
test
xchg
adc
push
and
mov
mov
sbb
fsubs
xlat
fs
fs
out
movsb
insl
in
lods
jmp
jnp
cmp
sahf
gs
fldpi
test
lea
add
jb
jge
and
jne
xor
cltd
xchg
fwait
mov
sub
jns
repnz
xchg
xor
inc
lds
dec
inc
popf
push
arpl
and
or
mov
sub
rorl
sbb
sbb
or
cmp
sbb
aaa
in
mov
sbb
mov
ret
sbb
adc
in
loopne
xorl
adcb
je
es
xchg
cltd
ja
fdivs
adc
push
adc
dec
push
cmp
cmp
js
pusha
jmp
jno
adc
dec
out
cmp
mov
jno
jno
push
dec
inc
dec
or
sub
fsubl
jae
fbld
leave
dec
inc
inc
add
inc
stos
cmpsl
addr16
inc
dec
ljmp
ja
ss
std
stos
cs
icebp
mov
lods
out
scas
fadds
cmpl
loop
ret
jo
addb
pop
lret
inc
popa
sbb
enter
push
les
cmp
pop
popf
cmp
out
jbe
push
ss
iret
lds
cmp
je
jns
jo
mov
cmp
push
arpl
lret
mov
cmp
jl
adc
mov
enter
mov
cmpsl
and
xor
mov
mov
jns
add
ja
mov
xchg
pop
pop
dec
dec
pop
adc
mov
mov
jbe
movsl
aas
insb
sahf
lock
add
inc
inc
xchg
sarb
movsb
dec
fidivs
pusha
push
push
xor
push
ds
mov
rcrb
push
dec
push
dec
adc
mov
popf
pop
dec
ficoml
clc
and
sbb
lahf
xchg
scas
incb
add
and
leave
push
xor
inc
cmp
sbb
push
xor
push
xor
pop
je
in
add
or
add
cmp
inc
loope
xchg
test
insb
sub
nop/reserved
ds
dec
sub
mov
xor
or
aam
and
pop
loopne
push
and
das
scas
fwait
add
push
pop
and
xchg
inc
inc
sahf
jl
jl
push
loop
js
ja
hlt
mov
mov
roll
outsl
inc
push
rolb
push
push
lret
hlt
andb
ret
negb
add
push
pushf
push
mov
sbb
popf
adc
add
sub
xor
sub
je
sbb
pop
xor
in
dec
mov
lods
pop
xor
sarl
les
popf
xor
sub
call
lcall
pop
jge
cwtl
cmp
test
es
popa
lea
pop
add
cmpsl
adc
push
mov
xchg
sub
sub
cltd
add
out
jae
insl
arpl
and
mov
inc
sbb
mov
inc
arpl
xor
pop
or
lods
lock
add
adc
cld
sbb
xchg
sarb
push
aaa
arpl
dec
inc
add
inc
jnp
push
insl
push
dec
mov
popf
es
mov
je
adc
add
sub
mov
add
mov
rol
xchg
mov
mov
mov
push
cmp
xchg
repz
out
rcrl
shll
mov
jne
push
adc
sub
xor
xchg
jp
mov
loop
sti
scas
es
xchg
sbbb
pop
enter
loopne
dec
insl
clc
adc
ret
enter
push
ret
sarb
leave
and
jg
fdivs
les
mov
inc
mov
xchg
fiaddl
cmovo
insl
les
push
sbb
jne
dec
push
pop
clc
test
js
xor
push
aas
pop
push
je
push
sbb
sbb
push
and
mov
pop
lret
xor
iret
enter
pop
and
sbb
dec
movsl
adc
cmp
nop
data16
cld
int3
push
cmpsb
or
inc
mov
fs
mov
leave
add
pushf
mov
mov
cmpsl
scas
cmp
and
inc
jmp
mov
sub
mov
rorl
xor
add
je
inc
es
mov
push
and
inc
ss
sub
outsb
in
dec
or
cmp
push
inc
fcmovnb
insb
mov
popa
imul
cmp
scas
xor
jle
and
sub
orb
popl
scas
movsl
loopne
sub
or
or
loopne
sub
aam
pop
iret
add
cltd
pop
leave
mov
sbbl
and
shll
addr16
fdivr
xor
add
pop
les
aas
fistl
add
call
imul
mov
daa
test
test
fsubp
and
and
mov
mov
xchg
lcall
push
mov
sub
push
ds
xchg
je
push
adc
call
popf
into
mov
addb
cmpsb
sub
cmp
pop
cmp
mov
pop
mov
sbb
insb
test
popa
pop
xchg
push
rcrb
mov
dec
sbb
mov
mov
lcall
adc
addl
pop
sbb
fimull
aas
inc
test
add
or
hlt
cmp
sub
popl
inc
shrb
mov
aam
dec
pop
inc
sbbl
mov
push
pusha
cmpb
movb
in
and
xor
fimull
outsl
loopne
movsb
sbb
add
push
add
pop
repnz
and
jmp
inc
jne
nop
out
or
aam
and
mov
adc
cmpl
int3
cmp
adc
sub
or
xchg
adc
outsb
push
cmp
sub
inc
mov
adc
push
sub
sbb
cmp
xor
add
sbb
push
pusha
xchg
int3
mov
lds
mull
fnstcw
add
cmp
cmp
inc
mov
xor
add
mov
xorb
inc
sbb
push
in
ficomps
and
jns
mov
fcoml
pop
mull
push
mov
mov
rol
pop
push
lahf
xchg
mov
mov
loop
push
xor
addr16
ret
imul
inc
sub
xor
and
xchg
daa
sbb
test
outsb
hlt
xor
lock
xchg
and
mov
mov
sbb
push
es
inc
cltd
sub
subb
hlt
subb
sbb
jecxz
and
pop
or
mov
cmp
test
or
data16
js
andb
mov
lods
shll
xchg
jecxz
pop
aad
sbb
add
and
jmp
outsl
adc
js
push
add
xchg
mov
nop
or
fisttpll
add
popa
sub
mov
cltd
and
sbbb
pop
cmp
test
lods
adc
adc
ja
rcrb
jno
dec
lea
addr16
and
mov
sub
add
cmp
or
ficoms
test
push
add
bound
test
inc
ret
daa
and
sbb
or
addb
pop
sbb
xor
or
push
xor
or
not
cmp
xor
bound
push
iret
fwait
insl
xchg
add
add
xorb
add
xchg
jbe
pusha
jl
shrb
mov
cli
adc
fstl
in
mov
lods
add
push
insl
lret
xor
pop
mov
dec
cmp
xor
pusha
add
dec
xlat
adcb
jmp
mov
xor
push
pop
add
dec
sbb
push
add
push
insl
sbb
pop
mov
mov
xchg
imul
lods
or
xchg
cmp
xchg
pop
js
dec
xchg
loop
push
cli
movsw
cli
and
daa
add
add
jle
test
pop
jge
inc
sub
inc
rcl
and
and
or
pop
subb
add
add
call
cltd
xor
mov
pop
shll
imul
pop
add
stos
ret
repz
xor
inc
add
subl
stos
sbb
test
popa
or
aad
pop
rorl
add
xor
lds
int
add
sbb
aaa
add
add
push
fs
sub
mov
js
ss
in
nop
add
mov
pop
pusha
mov
inc
cmpsb
cmp
je
xor
data16
or
ficompl
xchg
mov
mov
dec
inc
cmp
subl
iret
jne
push
into
dec
pop
lea
sahf
adc
xor
jmp
add
add
mov
movsb
popl
cmpsb
repnz
int
adc
daa
jl
inc
push
out
testl
ret
pop
movb
inc
pop
add
out
cmp
add
or
xchg
insb
push
add
jb
jmp
mov
int3
push
mov
add
fdivrs
add
adc
lret
mov
insb
xor
pop
cmp
cmp
outsl
add
lea
aad
je
dec
push
sarb
dec
lcall
sbbl
sbb
adc
push
ja
jmp
xchg
popa
subb
sbb
sbb
fs
fs
add
xor
sahf
push
rcl
add
ss
fstp
or
das
mov
daa
push
add
cmp
out
es
int3
cmpb
fstpt
pop
dec
sbb
sbb
data16
or
xchg
add
inc
movsb
adc
cmpsb
xor
pop
xchg
iret
or
adc
das
fmull
adc
mov
or
enter
test
mov
push
or
cmp
enter
pop
nop
iret
dec
sbb
jb
inc
dec
inc
dec
ret
xchg
jno
adc
add
cmp
push
nop
mov
and
in
xor
out
call
jne
ret
sbb
aam
lcall
xchg
add
jmp
xor
sbb
cmp
cmp
inc
xor
movsb
cs
push
mov
pop
filds
pop
icebp
add
das
jmp
mov
testb
push
adc
cmp
fnstsw
daa
mov
dec
and
mov
xor
jecxz
xor
mov
aam
adc
inc
xor
addb
loop
adc
adcb
push
push
test
sarb
adc
daa
dec
mov
jb
lock
mov
xlat
cmp
or
pushf
into
ja
sbbl
cmc
clc
and
add
jle
push
mov
or
sti
aaa
insb
inc
push
sbb
inc
iret
add
sarb
hlt
jmp
sbb
loop
aaa
out
test
adc
cmpb
clc
fimuls
jl
adc
push
pusha
pop
imul
xchg
sbb
mov
jno
cmp
enter
jmp
add
xchg
mov
rcll
mov
sbb
scas
sbb
adc
test
push
nop
push
in
aaa
push
push
and
test
dec
je
rorb
mov
js
jl
push
clc
popf
lods
lods
fucomi
test
xor
mov
sti
push
rol
test
xor
mov
in
dec
or
cmp
jbe
mov
sbb
movsl
cmp
cltd
mov
xchg
fcomps
push
test
push
add
inc
inc
adc
dec
adc
aaa
sbb
loopne
dec
add
mov
inc
addb
rcr
das
dec
add
outsb
push
cltd
nop
jecxz
push
mov
xor
jbe
das
jne
sbb
push
mov
adc
adc
xor
ret
aas
cmp
ret
and
sub
adc
adc
mov
sbb
adc
push
pop
adc
add
stc
and
or
cmp
in
add
adc
cmpsl
arpl
add
pushf
rcrb
lret
movb
xchg
mov
add
sbb
jmp
adc
dec
inc
adc
dec
xor
or
aas
mov
aam
add
jno
nop
jo
mov
jecxz
iret
add
pusha
sbb
adc
loopne
push
dec
inc
aas
cmp
sbb
adc
and
or
add
loop
repz
psubsw
int
insb
mov
icebp
dec
loop
mov
out
repnz
sbb
sub
fcomps
jecxz
push
mov
lea
xchg
cmc
jl
inc
pop
mov
dec
dec
push
push
jmp
cmp
xchg
cmp
add
xor
xchg
cmc
int3
stc
push
add
cmp
add
sarl
cmp
test
nop
lahf
push
cmp
movsb
add
call
xlat
jmp
dec
or
sub
imul
insb
sub
das
fs
or
sub
xchg
test
push
in
mov
lods
xor
jbe
push
mov
jmp
loope
pop
imul
and
mov
fcmovbe
inc
push
aad
adc
test
aam
test
mov
mov
push
in
lea
adc
push
inc
das
mov
pop
xchg
and
int3
xor
repz
sbb
aam
clc
inc
mov
roll
sahf
cmpsl
cmp
mov
add
adc
and
cli
cmp
pushf
add
mov
add
push
loopne
sbb
movsb
adc
and
add
pop
inc
adc
push
jmp
popf
or
loopne
jge
ret
sbb
jnp
jp
push
aaa
mov
sub
or
inc
mov
subb
mov
add
and
icebp
xor
popa
pop
xor
test
sbbb
scas
pusha
mov
xor
or
popa
push
in
or
xchg
pop
add
cmp
mov
and
or
jnp
lcall
stos
nop
and
lea
sbb
inc
in
mov
stos
mov
sbb
scas
out
push
pop
or
ss
inc
mov
sbb
or
adc
je
adc
enter
or
adc
pop
sbb
in
adc
cmp
in
inc
shll
add
inc
packssdw
mov
cwtl
sub
jle
inc
jb
inc
inc
cmp
idivl
lock
xor
jne
popa
adc
stos
ds
test
push
dec
mov
ds
sbb
mov
add
lds
int3
je
push
add
rep
cli
in
insl
sbb
mov
push
push
xor
loopne
jo
cli
and
pop
aas
adc
bound
test
je
push
push
and
xor
and
sub
and
push
mov
test
push
jbe
adcb
clc
push
sbb
pop
add
pop
loope
cltd
lahf
addb
mov
pop
pop
cmp
and
xchg
cmp
inc
popa
add
in
or
add
pop
dec
popa
dec
ds
aam
add
push
in
ret
pop
je
movl
iret
dec
push
les
pusha
push
into
in
cmpb
cmp
dec
dec
test
mov
jmp
inc
inc
pop
or
xor
int3
sbb
add
xchg
jns
popf
pop
lcall
or
mov
fisubrl
pop
ret
add
dec
inc
sbb
jp
xchg
or
adc
xor
loope
push
dec
pop
std
inc
mov
int
incb
adc
push
push
xor
or
loopne
xor
sub
or
or
or
sbb
shl
or
adc
ret
outsb
loopne
les
push
mov
inc
shrb
dec
out
inc
cmpsb
dec
cmp
dec
and
movl
or
sub
add
inc
dec
call
pop
xor
cmp
fisttpll
mov
testb
adc
or
mov
sbb
or
cmp
inc
jb
outsl
xor
xorb
add
bound
sbb
pop
fsubl
mov
dec
cmc
xchg
lds
push
scas
xor
int3
jmp
push
xchg
add
scas
aaa
adc
and
mov
push
cmp
xchg
xor
shlb
or
test
inc
sub
inc
and
sbb
fld
movsl
cmp
mov
jne
sub
add
pusha
imul
push
sbb
ljmp
dec
insb
test
xchg
test
js
push
mull
cmp
rorl
es
jl
inc
sbb
mov
jns
ret
ds
add
inc
jge
punpcklwd
xchg
xchg
fld
sbb
hlt
cmp
stos
shll
inc
xchg
adc
imul
push
fcompl
ss
fadds
iret
int3
push
aam
shrb
dec
rcrl
int3
je
aam
fwait
insl
addr16
push
xchg
push
testb
mov
mov
lcall
fiaddl
xchg
movsb
mov
push
mov
lahf
enter
add
jns
or
cmp
inc
cli
inc
es
mov
pop
push
insl
lods
mov
scas
mov
test
mov
mov
mov
in
in
in
pushf
sub
jmp
push
js
lods
add
xor
mov
loopne
xchg
fbld
add
pusha
ror
cmpl
sub
dec
sbb
or
imul
mov
leave
out
add
mov
or
mov
xor
out
std
inc
test
gs
aaa
push
adc
scas
addb
or
jnp
add
shlb
sub
jo
mov
inc
adc
rolb
lods
adc
cmp
mov
xor
or
and
jle
push
and
sub
mov
daa
leave
pop
int3
sub
outsb
xor
lods
adc
push
and
or
or
xor
negl
das
mov
sbb
mov
adc
in
test
push
or
je
int
xor
or
inc
adc
push
push
fs
add
pop
cs
xchg
outsl
gs
xor
rorl
fidivl
or
fs
and
cmp
jg
push
jo
ret
or
insl
bound
push
lock
mov
xor
mov
sbb
je
mov
loopne
pop
addr16
dec
rorb
pop
pop
and
outsb
inc
clc
int3
or
std
adc
es
sti
inc
imul
or
pop
dec
pusha
aaa
dec
je
and
sbb
mov
js
dec
clc
mov
mov
adc
movsb
decb
push
cwtl
insb
mov
out
pop
lods
jnp
dec
les
add
mov
in
repz
add
jle
or
ss
jg
push
test
adc
nop
add
or
xchg
pop
xor
pop
push
add
in
mov
ret
add
dec
inc
jp
dec
or
inc
cmp
add
clc
dec
dec
lock
push
mov
pop
inc
add
dec
in
push
bound
fidivs
jp
sub
xchg
ljmp
or
mov
int
inc
and
dec
pop
push
or
dec
ret
cmpb
pop
dec
orb
sub
mov
add
jmp
sub
dec
mov
das
mov
and
invd
bound
push
sub
and
int
imul
sub
xor
or
or
dec
inc
in
fwait
rcl
add
adc
pop
xchg
popa
jns
outsb
clc
inc
mov
sub
xor
or
add
mov
dec
xor
xchg
outsb
jne
sbb
adc
adc
lret
push
adc
rcl
lahf
test
or
add
insl
or
popa
clc
leave
pop
cwtl
or
addr16
xchg
jbe
loopne
cmp
adc
push
or
nop
adc
xor
sub
and
push
gs
adc
lea
mov
pop
xorb
xchg
add
and
cmp
shlb
mov
std
push
xor
fs
mov
push
jb
pop
mov
or
mov
pop
sub
jl
mov
popa
lahf
push
mov
dec
inc
xor
adc
mov
or
pop
aas
inc
add
pop
aam
cmp
movb
push
push
add
fs
push
pop
inc
inc
push
or
fildl
push
sbb
or
addl
aaa
xor
rolb
ficoms
jno
xchg
roll
add
outsb
dec
ret
lea
in
add
enter
adc
push
dec
add
inc
or
call
inc
mull
push
data16
fsubrl
or
int3
and
jnp
pop
xchg
and
popa
lds
mov
xchg
mov
add
jge
enter
iret
push
js
push
sbb
cltd
add
fisttpll
clc
add
dec
pop
and
pusha
ret
add
inc
add
loopne
cmpl
call
adc
rolb
xchg
xchg
pop
jg
inc
cmp
add
fisttpll
add
lea
add
pop
push
mov
cmpsb
xchg
sbb
dec
push
faddl
add
aas
inc
insl
pop
repz
pop
fcoms
movl
test
mov
cmp
dec
jl
cmpxchg
dec
xor
jmp
hlt
add
add
inc
movnti
add
jmp
adc
adc
sti
sti
add
add
add
adc
push
add
lock
xor
test
add
push
lock
jl
ret
sbb
aas
incl
inc
mov
pushl
mov
ljmp
add
in
out
pop
jle
stos
dec
xchg
scas
mov
mov
or
mov
in
je
cltd
dec
rcrl
and
add
pusha
inc
mov
aas
mov
push
mov
lcall
mov
enter
xchg
push
mov
dec
push
xor
ss
xor
sahf
dec
push
mov
lock
shrb
dec
rorl
shr
shll
stos
xchg
pop
mov
lods
rolb
repnz
mov
lods
mov
scas
data16
mov
pop
push
test
jb
int3
lret
and
cs
cmp
push
jnp
inc
pushf
sub
push
mov
rcl
es
pop
jl
push
cmp
lock
push
xlat
or
popa
jnp
pop
sbb
test
les
sub
std
data16
sbbl
inc
push
dec
or
xor
lsl
lret
hlt
aas
js
add
movsl
jb
insb
xchg
push
imul
pop
sub
sbb
or
scas
addr16
adc
xor
adc
add
nop
mov
xor
add
icebp
add
dec
cs
ret
subb
xchg
push
loope
add
repz
dec
outsl
inc
cmp
xchg
add
adc
nop
pop
ret
push
cs
cwtl
push
pusha
imul
add
insl
enter
xchg
je
leave
mov
or
in
mov
and
mov
sub
addl
fisttpll
enter
outsl
sbb
scas
xor
out
xor
test
add
in
push
sbb
push
mov
push
add
or
js
and
inc
push
js
and
jo
inc
mov
add
inc
imul
inc
push
and
sbbb
cltd
and
cmpsb
xchg
test
popa
popf
das
mov
or
mov
jne
push
lea
mov
nop
xor
dec
or
mov
push
sbb
sbb
aaa
adc
incl
push
sub
daa
or
rolb
into
int
aas
jmp
pop
push
push
pop
sub
int3
sub
out
push
ja
push
jmp
sbb
xlat
fsubrs
adc
push
inc
lahf
or
push
dec
insb
repnz
sbb
movsb
pusha
cmp
pop
jb
das
push
ret
sbb
jne
xchg
pop
jo
xor
popf
lods
push
rorb
push
imul
jae
data16
pop
pusha
and
repz
mov
inc
aad
cwtl
xor
jne
sbb
hlt
adc
out
test
add
jecxz
jmp
sbb
popf
movsl
sahf
adc
sbb
xor
in
mov
loop
push
int
push
push
sbb
or
aaa
cmpsb
sbb
in
cmp
inc
jne
gs
ret
jmp
xchg
add
shlb
mov
add
jo
ja
jg
or
stos
aam
cmp
aad
pop
insl
jo
daa
mov
imul
push
dec
push
inc
add
pusha
dec
cmp
jmp
test
pop
xchg
iret
cmp
pusha
dec
cmp
movsl
dec
ds
mov
dec
add
push
inc
aas
dec
lcall
cwtl
push
test
insl
inc
les
or
and
xchg
ss
movsl
sar
rolb
sbb
ret
adc
adc
popf
mov
inc
jmp
fadds
xor
inc
dec
pop
inc
push
lock
shlb
cmp
cmc
add
sbb
iret
sbb
jo
loope
iret
or
roll
test
and
loop
xor
or
dec
push
xchg
sbb
xchg
and
rcrb
xchg
dec
inc
insb
push
test
xchg
dec
dec
aad
xorb
push
aad
ret
dec
push
and
aad
push
jo
adc
inc
sbb
aad
jl
or
push
aad
fdivrs
add
push
inc
imul
pusha
inc
inc
sbb
and
adc
push
in
or
rorl
dec
push
push
and
insb
hlt
cs
sbbl
mov
inc
pop
mov
sbb
add
ror
ja
rolb
pop
in
dec
repz
test
ror
enter
or
rolb
mov
pop
enter
dec
pop
fmuls
sub
fs
sbb
push
aas
int
inc
jb
push
inc
int3
jo
rolb
or
test
sub
inc
movups
inc
lahf
or
fimull
push
jl
adc
insl
mov
pop
out
aaa
int
sub
popa
mov
test
movsb
pop
lods
out
pop
sub
rorl
adc
mov
or
std
add
orb
data16
push
pop
cmpsb
gs
ret
addl
push
lret
shlb
rcrl
adc
dec
cmp
and
mov
movsb
pop
mov
enter
rcrb
mov
xchg
data16
pop
das
subb
and
add
mov
popa
daa
and
push
comiss
nop
push
mov
dec
sub
jbe
adc
cmc
and
dec
mov
dec
jmp
add
add
adc
jmp
movsl
mov
mov
or
push
inc
popa
les
and
mov
and
sahf
mov
cmp
insb
and
and
adc
sub
mov
int3
adc
mov
xlat
cmp
test
je
adc
ja
cmp
lods
nop
adc
dec
adc
sbb
pop
xor
dec
mov
lods
outsl
out
fcompl
divb
hlt
outsb
xchg
mov
popa
xchg
jge
fsubl
out
push
scas
roll
sbb
shll
addl
sub
les
adcl
popa
sahf
gs
push
stc
js
sbb
call
es
sbb
push
pop
insb
dec
lcall
or
xchg
xchg
ret
pop
push
sbb
and
xchg
dec
ss
push
test
flds
lea
sbb
mov
mov
jle
mov
mov
push
mov
push
xchg
lahf
pop
mov
xor
push
mov
push
ret
or
xchg
push
fists
cmp
gs
pushf
or
or
enter
xchg
testb
ljmp
inc
das
ret
hlt
push
inc
inc
mov
in
pop
std
les
imul
mov
cmp
add
aam
cmp
es
sub
shl
push
xchg
mov
sbb
subb
int
repnz
aam
jge
jae
mov
and
test
xchg
int3
ss
int
lock
scas
outsl
xor
in
xchg
int
or
adc
add
dec
xor
mov
add
adc
cwtl
mov
sbb
xor
jne
call
mov
popa
fmuls
sahf
ja
cmp
imul
sbbb
adc
add
mov
sub
or
adc
xchg
add
imul
mov
pop
or
jne
push
aad
imul
out
push
push
jo
jp
or
or
pop
inc
imul
fst
cmp
and
insb
or
push
flds
or
and
adc
inc
pop
add
shrb
pop
dec
movsl
inc
aas
std
fld
sbb
mov
or
pop
pusha
push
stc
pop
inc
or
cwtl
xor
push
inc
sbb
repnz
and
inc
add
or
push
aas
sub
pop
inc
add
hlt
inc
test
mov
scas
inc
sahf
inc
push
add
inc
cld
sub
lock
jb
jecxz
adc
push
or
movsl
add
outsb
push
enter
xchg
loopne
pop
nop
push
sub
outsb
mov
lods
sub
add
dec
outsl
inc
push
sub
add
lods
push
das
js
dec
xor
add
jg
sarl
add
movsb
idivb
arpl
and
mov
push
fcmovb
sub
add
dec
sub
out
dec
or
add
push
cmp
aaa
aaa
movsb
xor
lret
add
nop
and
outsb
add
imul
xor
or
push
xlat
and
cmp
lea
les
add
aam
mov
xchg
xor
cmp
adc
push
or
add
xchg
xor
divb
pop
jmp
sub
testb
mov
je
rclb
xor
les
pop
daa
fsubs
jp
roll
sti
adc
sbb
add
repnz
add
pop
mov
xor
setbe
lea
outsl
xor
pop
fmuls
xchg
das
jb
sub
or
cli
inc
int
sub
sbb
ret
inc
add
std
dec
xor
mov
pop
hlt
neg
jmp
add
xchg
and
push
push
xor
push
sub
icebp
push
adc
sbb
push
test
popa
daa
xchg
popl
mov
out
outsb
xor
outsl
sbb
stos
insb
scas
addl
cmpsb
mov
mov
and
jno
sub
clc
push
mov
push
add
pushf
sub
cmp
or
push
jo
add
imul
js
lahf
mov
jbe
push
rcl
dec
cmp
in
rcrb
sbb
js
jmp
dec
and
pop
popa
ret
popa
bound
cmpsb
adc
scas
sub
lret
orl
xor
inc
jl
js
xor
ret
push
inc
ds
mov
icebp
jmp
and
into
inc
inc
or
rorb
push
popa
cmp
pop
dec
or
push
sbb
push
mov
xchg
outsb
xchg
push
mov
mov
rclb
sti
rcl
imul
pop
das
enter
jmp
in
scas
jnp
xor
aaa
and
add
adc
push
pop
xchg
pop
add
jne
mov
call
dec
mov
fadds
jns
inc
pop
jae
lds
in
sub
je
add
push
mov
pop
ja
adc
mov
mov
push
mov
push
push
mov
or
std
aaa
add
and
push
inc
xor
les
mov
js
test
or
push
inc
jo
out
inc
rcll
fsubl
push
push
and
es
ficoml
dec
test
rcrb
fwait
pusha
push
movsl
adc
and
xorl
or
mov
jne
sbbb
add
sub
inc
add
or
push
movb
dec
ret
ds
js
insl
xor
leave
pop
sub
or
es
adc
pop
dec
inc
outsb
add
xor
nop
mov
cmp
mov
xor
sbb
xor
dec
clc
add
movsl
arpl
push
add
and
out
add
xorb
cmp
or
dec
pop
das
js
ret
mov
cld
arpl
insl
pop
mov
shlb
push
inc
push
stc
xor
mov
pop
vxorps
mov
pop
or
mov
ftst
mov
ja
pushf
sub
pop
xor
inc
js
dec
aas
xor
mov
shll
outsl
cmpsl
or
mov
mov
mov
adc
xor
inc
movb
adc
mov
mov
pop
rcrb
rorb
cld
iret
pop
lock
int3
outsb
daa
fwait
mov
movsb
hlt
sti
cmp
add
pushf
pop
cmpl
sbb
jge
sub
xor
test
xchg
dec
xor
cmp
xor
push
sub
mov
mov
adc
cmpsb
fldt
jl
lea
push
mov
cmp
stos
icebp
lods
test
mov
mov
push
stos
ja
push
mov
clc
sbb
pop
push
jae
and
mov
out
testl
out
je
ljmp
movsb
sbb
ds
sbb
das
dec
notb
cmc
imul
jnp
jl
adc
add
xchg
add
mov
int3
mov
or
sbb
add
cmp
mov
or
mov
adc
xor
jbe
xlat
adc
repnz
adc
lahf
adc
pop
sub
insb
sbb
xchg
push
sub
or
inc
pusha
jbe
aas
shlb
or
nop
push
test
mov
and
add
sub
sbb
cli
test
cmpsl
add
jecxz
jno
add
mov
dec
pop
pop
push
push
arpl
mov
lock
es
jmp
out
aaa
pop
rorb
movsb
mov
cvttps2pi
pop
orl
jae
mov
inc
jg
xchg
sub
orb
pop
cs
aaa
nop
dec
pop
test
lcall
push
mov
clc
mov
dec
or
scas
dec
and
adc
aaa
inc
and
jg
push
pop
sub
cmp
divb
nopl
pslld
inc
stos
outsl
loopne
or
push
mov
fbstp
fisttpl
add
or
je
pop
jmp
push
stc
lea
fadds
sub
addr16
mov
out
movb
sub
mov
insb
xchg
mov
sbb
jbe
inc
push
and
mov
jmp
dec
outsl
or
mov
dec
nop
addb
icebp
jnp
push
push
imul
fists
dec
adc
test
xchg
mov
sbb
sbb
cld
movsl
mov
outsb
jbe
xchg
mov
aaa
icebp
sarl
enter
js
sbb
jnp
add
or
sbb
lea
inc
sbb
pop
xor
push
lea
push
dec
rclb
push
sbb
or
mov
push
adc
xor
cmp
aas
outsl
or
lds
jnp
imul
mov
push
and
jg
mov
jb
ja
mov
inc
jo
push
sub
sbb
mov
jb
xchg
in
pop
mov
and
pop
jns
mov
push
fstpt
outsb
push
popa
rcll
std
adc
mov
sub
jp
push
shr
cwtl
and
in
jmp
xchg
in
or
add
sub
dec
fildl
test
pop
in
xor
jl
arpl
stos
inc
add
jb
xchg
push
push
mov
insl
or
scas
inc
dec
pop
mov
je
pop
push
insl
jmp
rcrb
test
dec
mov
into
cmp
pop
jle
stos
mov
imul
push
add
sub
cs
xchg
fnstenv
sbb
mov
ret
test
xchg
sub
mov
ret
push
mov
ds
nop
push
dec
inc
test
mov
or
pop
and
test
xor
sbb
push
adc
fiadds
adc
cmp
mov
sbb
fadds
mov
mov
inc
ret
mov
adc
xor
outsl
or
nop
in
inc
pusha
pop
jg
xchg
dec
dec
and
sbb
adc
xchg
pop
inc
mov
cwtl
add
mov
push
xlat
test
sbb
cmpsb
movsl
sub
inc
fnstcw
adc
sti
mov
jecxz
in
xorl
hlt
mov
xor
mov
mov
jae
xchg
mov
xor
cmp
jns
push
test
sbb
or
pusha
outsl
dec
test
dec
sub
fwait
xor
mov
sub
mov
inc
orb
jmp
out
push
jp,pn
push
in
fucom
or
mov
imul
inc
fcmovu
cltd
aam
or
sbb
xor
fsts
mov
mov
xchg
enter
testb
and
mov
xchg
xor
mov
inc
loope
les
mov
popa
popf
in
adc
mov
in
lock
dec
movsb
rolb
sarl
je
out
inc
cltd
pop
cmpl
xor
jnp
mov
lea
daa
orl
les
push
movsb
paddw
pop
xor
mov
sub
add
jmp
sub
or
mov
mov
add
imul
sbbl
pop
dec
or
mov
mov
pop
loope
sub
mov
ret
mov
adc
mov
and
add
inc
rorl
movl
push
stos
shll
mov
xchg
lea
mov
movsb
out
mov
mov
add
mov
mov
add
ret
sbb
fsubrs
cmpsl
mov
or
test
xchg
pop
xlat
loope
lcall
mov
lods
sbb
xor
sbb
sbb
sbb
hlt
or
movl
dec
cmp
inc
dec
ja
roll
jno
jne
test
popf
sub
xchg
push
mov
add
add
pop
popl
pop
fs
je
in
test
dec
pop
dec
div
fiaddl
inc
cs
sbb
fsubs
jo
in
jae
adc
add
lea
flds
and
mov
xchg
inc
popa
pop
rorb
push
xlat
test
stos
and
pop
push
pop
ja
xchg
inc
push
mov
iret
mov
orb
sahf
mov
test
and
inc
jp
jle
jne
popf
sti
xchg
cmc
insl
fs
add
xchg
sbb
jmp
push
test
vpor
cmp
and
jo
pop
lods
push
pop
or
movswl
cwtl
iret
xchg
xor
sysret
movsl
test
aaa
daa
lods
leave
mov
mov
dec
outsb
adc
push
shrl
xor
or
ss
pop
or
scas
mov
cmp
jo
dec
adc
pop
adc
push
cld
dec
stos
mov
pop
jl
daa
push
ret
add
jo
mov
cltd
jns
ret
lea
int
rorb
test
insb
daa
mov
mov
cmp
test
xor
jo
dec
roll
je
jnp
mov
adc
shrl
pop
or
and
insb
and
push
add
add
cwtl
inc
mov
xchg
inc
add
dec
sub
cwtl
lret
rclb
mov
mov
nop
cs
imul
and
out
cmc
mov
cmp
xor
mov
xlat
sub
inc
cmp
mov
in
mov
xor
mov
push
sub
adc
cwtl
lds
test
ret
pusha
movsb
add
dec
test
enter
pop
cmp
mov
dec
outsb
outsl
jb
adc
jns
addl
mov
rol
and
xor
cmp
xchg
paddsw
in
in
cmp
addr16
test
movsl
add
cmpsb
mov
outsb
je
ret
ja
mov
fwait
inc
jge
push
mov
stc
int3
cmp
sbb
call
xchg
cmpsb
pop
dec
lea
les
loopne
imul
mov
shlb
xchg
mov
ret
cmpb
fnstenv
scas
or
push
nop
xchg
cs
pop
mov
xor
popf
cltd
dec
cwtl
inc
pop
xchg
cmpb
or
add
nop
cmp
xor
pop
push
mov
mov
add
jecxz
pop
adcl
pop
xchg
add
test
xchg
or
ss
cmp
test
aas
int3
or
sbb
xlat
pushf
lock
jmp
cmpl
lahf
mov
cmp
push
sti
repnz
aam
add
push
push
mov
push
push
add
add
hlt
fisttpl
xchg
inc
insl
loopne
fidivs
stos
int
sub
xorb
xor
test
add
xor
jge
leave
mov
aad
movsb
jno
inc
inc
outsb
adc
jl
mov
mov
push
mov
or
mov
cmp
adc
and
add
sub
pop
fwait
sub
addb
cs
rorl
rcll
sbb
cmp
and
dec
mov
int3
xorl
cmc
pop
mov
adc
mov
mov
addr16
and
pop
mov
xor
loopne
mov
orl
gs
mulb
test
mov
add
mov
mov
push
and
and
fildl
andb
std
pop
xchg
cmp
dec
and
sub
xorl
pop
cmp
orl
rorb
mov
or
shl
and
push
add
popf
insb
pop
xchg
xchg
sub
xor
jno
loopne
add
mov
mov
das
subl
bound
and
pop
add
cli
inc
jg
orl
out
and
sub
repz
cld
and
dec
test
xchg
loop
ljmp
push
mov
cmpb
cmp
jl
lret
aam
pop
jne
pop
xchg
mov
sbb
jl
mov
inc
cwtl
xchg
xorb
jecxz
popa
fistpl
in
or
push
imul
fwait
lret
pop
xchg
push
insb
repnz
pop
mov
clc
inc
out
mov
push
in
inc
push
and
push
dec
add
sbb
int
mov
push
lds
adc
adc
mov
bound
mov
dec
sbb
inc
sub
or
mov
lea
test
popa
add
inc
out
and
jnp
push
dec
jge
jnp
cmp
or
sub
fstpl
ret
hlt
fsubs
in
clc
cmp
mov
xchg
ret
inc
dec
mov
mov
in
in
push
cmp
pop
mov
test
sub
inc
mov
add
nop
add
nop
add
rcll
add
add
movsb
mov
xchg
fwait
mov
lock
lret
pop
lea
adc
ret
mov
lock
es
adc
test
push
inc
lock
addb
insb
leave
daa
jl
and
leave
xchg
sbb
or
addb
daa
imul
sbb
adc
mov
lahf
cmp
fdivs
notl
add
adc
pop
andb
sbb
pop
out
movsb
adc
ret
add
or
adc
add
jno
sub
jecxz
dec
sbb
leave
add
or
jbe
loopne
add
leave
cmovns
push
add
test
xchg
sub
push
leave
stos
pop
pop
mov
adc
xchg
gs
xchg
xchg
ljmp
addr16
xchg
aam
xor
push
xchg
stc
jne
sahf
xor
inc
push
add
and
test
roll
and
sub
add
mov
or
and
inc
mov
inc
pushf
jmp
pop
xor
ret
pop
jb
adc
sbb
xchg
mov
add
xchg
lret
inc
inc
cmp
test
ret
dec
pop
int3
lea
sbb
mov
idiv
mov
neg
xchg
movsb
neg
in
jns
shrb
inc
mov
leave
add
adc
sbb
push
fcmovnu
sti
in
xorb
daa
fadds
add
cmc
js
incl
cmp
jle
sub
push
std
ret
rol
adc
dec
push
push
push
push
add
insb
push
popa
or
into
mov
pusha
or
aad
xor
or
mov
and
fcos
or
mov
ja
les
popa
les
jge
mov
ret
test
push
das
mov
mov
rorb
xchg
ficoms
push
push
add
enter
xchg
pop
pusha
jg
xchg
jno
adc
mov
clc
push
xchg
or
pop
sub
fmuls
adc
xchg
fs
jmp
iret
pop
sarb
xor
dec
push
add
leave
xchg
loopne
xor
add
mov
mov
popf
pop
loop
sub
jnp
sbb
inc
jno
shll
rorl
icebp
cmpsl
jnp
out
xorl
sub
adc
add
cmp
je
sbb
inc
test
or
shlb
cmp
aaa
sbbl
jmp
fisttps
add
fwait
xchg
enter
cmp
push
pop
and
add
in
sub
jecxz
and
leave
cmp
xchg
jno
and
add
xor
mov
pop
loope
mov
mov
nop
inc
cmp
and
lock
cli
jno
imul
pop
das
adc
add
cmpl
or
sbb
lcall
push
cmp
push
add
aam
faddl
in
aam
rcl
mov
sub
shrb
xor
inc
lcall
fldt
clc
rol
mov
pop
add
jbe
outsl
ljmp
adc
and
mov
push
por
insb
stos
shl
inc
ljmp
pop
jno
daa
pop
loopne,pn
rolb
lahf
gs
lcall
xor
aaa
or
mov
hlt
je
mov
cmpb
jno
icebp
popf
lock
in
jge
mov
add
sti
cmp
sahf
mov
dec
xchg
xor
call
stos
mov
inc
ret
add
cmpb
leave
cmpl
cltd
or
or
and
xchg
mov
add
xor
dec
pop
jb
test
push
out
push
test
pop
or
fimull
inc
loopne
inc
adc
inc
in
sbb
mov
mov
test
ret
xlat
or
inc
inc
arpl
jmp
sahf
pop
jo
movsb
lods
add
popa
add
jp
daa
jbe
inc
daa
fdivs
nop
and
xor
shlb
mov
pushf
lock
inc
xor
cld
jne
jmp
add
mov
outsl
imul
inc
adc
into
xchg
leave
mov
and
adc
push
ljmp
mov
xor
xor
mov
jno
ret
nop
ret
clc
je
cmp
and
jl
jnp
sahf
or
jmp
int
imul
les
imul
pop
xchg
cs
rorb
jo
shr
test
add
ret
adc
hlt
sar
andl
push
or
jl
cmp
sub
pop
loope
mov
sbb
test
and
add
xchg
adc
in
addl
sahf
or
adc
mov
sbb
cmp
mov
adc
push
add
push
cmpsl
cmp
cmp
es
mov
test
jg
out
inc
add
rolb
pop
sbb
stos
inc
cmp
mov
jo
daa
jle
dec
orl
ljmp
inc
xchg
sub
pusha
fildll
pop
roll
loop
xchg
iret
les
call
cs
scas
mov
and
inc
sbb
mov
mov
test
iret
sbbb
popa
lret
shl
xor
mov
inc
add
and
mov
adc
cmpsl
mov
pusha
xchg
fldcw
movsl
inc
ja
add
outsl
aam
js
lret
in
out
push
aam
push
cmp
cmpsb
ljmp
cmpsb
cmp
fistpll
aam
imul
mov
xchg
push
fisubs
aad
cmp
sub
mov
cmp
push
jns
lods
fldcw
jge
sbbl
xchg
push
packsswb
lds
fcomps
add
jp
mov
push
fists
pop
in
ss
les
test
lds
pop
add
push
cmp
dec
and
add
mov
xor
ds
testl
mov
add
inc
jg
fisubl
das
sub
push
push
ret
aam
xor
sbb
rolb
lds
pop
push
pop
sub
in
rolb
inc
sbb
or
push
add
or
push
dec
dec
sub
popa
adc
push
outsl
pusha
adc
push
fcoml
push
dec
inc
push
push
cmp
xchg
mov
or
adc
add
jbe
add
push
adc
inc
jl
sbb
jp
sbb
ret
sub
inc
mov
movl
aam
pop
or
aaa
cli
movl
mov
iret
jnp
lods
or
cmpsl
xor
cmp
cmpsl
movsl
xor
loopne
jmp
rolb
mov
sbb
mov
xor
mov
shll
mov
pop
adc
int3
jle
fisttpll
rolb
sbb
add
adc
idivb
pop
push
fsubl
add
jne
adc
xchg
push
xchg
lock
bound
in
mov
sbb
or
lods
lea
xor
sub
insb
mov
loopne
mov
xchg
mov
fdivs
lods
loope
mov
add
xchg
cmp
inc
xchg
inc
or
xchg
sub
add
lock
inc
fisubs
add
add
mov
sarl
jmp
adc
imul
roll
or
or
add
sbb
scas
jl
jmp
or
inc
pop
or
movsb
and
mov
scas
dec
loopne
fcom
lahf
js
sub
cmp
xor
das
hlt
cmp
or
add
push
movsl
sbb
or
pop
out
stos
movsl
jmp
pop
out
mov
add
add
push
and
sbbb
jmp
jecxz
adc
jg
and
leave
shlb
frstor
xor
in
or
xchg
cld
js
fisubl
mov
sbb
xor
mov
add
push
add
nop
xor
pop
pop
adcl
and
dec
dec
inc
dec
push
fcoml
call
sbbl
imul
out
inc
sub
inc
dec
mov
and
daa
out
daa
lea
mov
mov
mov
fsubr
loopne
es
dec
in
mov
lret
repnz
adc
adc
shlb
adc
sbb
add
inc
and
shrb
and
sti
pop
iret
mov
nop
mov
andb
cmp
in
pop
test
or
movsl
pop
incl
idiv
dec
and
ret
mov
and
lret
sbb
test
add
in
push
orl
and
push
and
inc
mov
or
pop
es
inc
cmpl
jne
bound
xor
mov
sub
add
inc
leave
mov
stos
test
ds
loope
mov
inc
cmp
pop
sbb
test
jne
cmpsl
or
mov
xchg
sbb
sbb
push
adcb
in
inc
and
sbb
add
inc
test
std
adc
mov
test
adc
repnz
xor
mov
jmp
fdiv
sahf
cs
roll
rol
or
pop
mov
xor
incl
mov
jne
cmp
cwtl
fbld
mov
and
test
adc
les
dec
or
in
sub
sbb
insl
nop
popa
adc
popf
sub
fs
dec
jmp
and
insb
sub
mov
aam
cmp
push
stos
nop
sbb
cli
xor
push
stos
stos
inc
ret
push
adc
cltd
js
add
iret
push
pop
adc
mov
and
jno
cmp
sbb
jg
cmp
loop
pusha
lahf
dec
add
mov
push
mov
mov
jmp
in
jmp
and
sbb
add
sbb
test
lods
inc
das
push
sahf
rclb
mov
ss
insb
sub
enter
sti
push
mov
lret
jo
push
sub
fs
and
inc
mov
dec
adc
sub
daa
fcoms
jbe
or
gs
mov
scas
adc
pop
sub
stos
jnp
adc
std
not
and
push
mov
dec
std
sub
and
and
and
aaa
inc
push
mov
dec
pop
std
outsb
lret
xor
sbb
lock
sub
mov
iret
mov
orl
adc
fstps
fdivs
cmpl
mov
sbb
fs
stos
cmp
or
scas
inc
xor
sbbl
adc
or
outsb
insl
daa
dec
rcrl
sbb
jbe
in
mov
adc
push
mov
add
push
push
mov
cmp
or
sti
rcrl
mov
cmpl
inc
inc
je
push
cmp
ja
dec
cmpb
je
xor
loop
gs
mov
jne
push
mov
pusha
insb
pop
sub
insl
loopne
cmp
adc
add
nop
daa
dec
inc
inc
aaa
or
test
push
or
mov
and
push
in
mov
in
loope
pop
mov
push
xchg
and
dec
icebp
push
mov
inc
clc
es
inc
xchg
add
xchg
or
rcrb
movsb
and
mov
mov
push
and
push
xor
sti
repnz
adc
sbb
dec
mov
cmp
and
lahf
sub
rolb
jmp
lods
nop
aam
call
dec
dec
pop
mov
cmpsb
adc
and
roll
xchg
jo
mov
or
pop
pop
rcrl
xor
add
int
dec
xchg
jmp
fcomip
test
pop
push
pop
mov
test
or
mov
mov
mov
xchg
mov
push
dec
leave
cli
cmp
pop
int3
and
scas
xchg
lock
gs
loopne
add
or
int3
push
add
or
fwait
aam
jmp
push
adc
les
jnp
negb
inc
pop
cmp
inc
hlt
mov
in
decb
addr16
lock
adc
add
mov
pop
or
les
mov
sbb
push
push
pop
fisttpll
pop
daa
lods
and
addr16
rolb
push
cmp
lods
pop
shlb
fbld
sub
add
sub
push
sbbl
cmp
jle
add
lds
icebp
es
and
pop
sbb
dec
leave
sbb
adc
cmp
xor
sbbl
outsl
xchg
mov
pop
and
add
ret
xchg
daa
jne
mov
mov
push
fsubrs
mov
xor
lds
push
jge
jne
fwait
add
mov
rorl
adc
jp
lods
cwtl
adc
popf
imull
insl
daa
xor
int3
loope
dec
rcr
ret
or
push
les
adc
maxps
bound
adc
add
lock
in
shrb
lds
ret
push
xor
pop
pop
fistpll
out
mov
mov
add
xor
outsl
test
or
add
test
dec
dec
roll
adc
sub
sbb
cmp
add
add
out
in
ret
mov
mov
pop
fs
lcall
push
sub
lock
testb
lock
inc
andb
jl
xchg
sub
adc
and
daa
dec
add
mov
mov
rcrb
aad
cli
sbb
and
sub
iret
push
xchg
stos
mov
test
sbb
scas
push
push
mov
dec
cmp
lds
cwtl
js
dec
fisttps
push
data16
pop
loopne
inc
push
lcall
int
add
dec
or
std
push
jp
or
push
pop
or
push
or
orb
sbb
jp
xchg
jae
push
mov
fcom
push
leave
or
or
orb
cmpsb
ds
push
pop
fdivl
sbbb
cmp
shlb
lret
jmp
imul
adc
jecxz
mov
mov
cmp
in
pop
bound
pop
adc
inc
bound
push
pop
or
push
mov
jmp
pop
fcoms
icebp
or
movb
mov
xchg
adc
je
sbb
cmp
mov
lcall
add
xchg
or
test
cmp
aam
into
inc
aaa
or
test
add
jl
sbb
popa
imul
mov
sbb
test
dec
lcall
stc
add
leave
imul
jmp
xlat
inc
mov
add
scas
inc
add
dec
and
rcrb
xor
insb
cwtl
out
xor
or
fbstp
outsb
ror
pop
pop
lods
push
add
aam
adc
adc
mov
add
ficoms
cmp
mov
movb
je
push
out
add
outsl
adc
xchg
xchg
push
and
push
pop
cmp
hlt
sbb
movsl
mov
fidivs
push
jmp
mov
mov
clc
fcmovne
xorl
xor
adc
sbb
iret
adc
sbb
fnstsw
sbb
inc
or
mov
xchg
xchg
jmp
hlt
popf
push
inc
pop
sub
pop
fidivl
fdivl
jl
lock
push
pop
cltd
testb
cmpsl
ret
lods
jne
in
cld
mov
sbb
or
ret
jmp
push
pop
in
int3
shrl
push
lock
adc
push
push
mov
lock
es
pop
or
je
dec
std
mull
xchg
jne
adc
pop
ficomps
add
and
out
cs
inc
inc
and
and
sbb
insl
shlb
fisttpll
push
xchg
adc
mov
add
shrl
nop
lret
popa
addb
ja
int3
jge
sub
mov
scas
clc
and
mov
mov
xor
xchg
and
push
fisubl
dec
rorb
jmp
and
outsb
push
shrl
push
and
add
test
cmp
push
xchg
sub
loopne
lock
gs
and
shlb
mov
lods
xlat
jle
xchg
movsb
add
mov
and
mov
add
mov
jl
adc
dec
adc
dec
popf
push
jbe
popf
addr16
pop
sub
and
popf
shll
and
rcrl
add
xlat
out
push
cli
daa
mov
sub
mov
icebp
gs
imul
pop
andb
sub
adc
in
xor
push
daa
xchg
arpl
clc
fisubrl
call
mov
inc
in
cmp
sarb
mov
inc
sub
sarl
mov
es
lea
and
or
pop
push
cmp
cmp
pop
jne
push
and
adc
inc
fisttpl
pop
dec
iret
aaa
inc
push
pop
pop
jo
jecxz
cs
xor
fisubrl
test
js
jb
add
sub
mov
mov
cmp
pop
or
fldt
xchg
test
popa
shlb
pop
ljmp
shlb
pop
inc
cli
lock
sti
jo
movsb
int
push
jmp
jne
sub
mov
shl
loopne
mov
pushf
lcall
add
or
pop
cmp
add
or
loop
cmp
inc
popf
mov
or
mov
and
adc
mov
ss
enter
sbb
sarb
jno
jmp
fwait
sub
bound
inc
add
xchg
dec
mov
adc
add
or
adc
in
insl
pop
mov
out
and
push
in
mov
test
insb
aad
mov
or
or
shrb
loope
pop
push
loop
xor
stos
cmc
mov
fwait
sub
mov
push
dec
and
fwait
push
or
sub
push
rol
pop
stos
push
jne
cmpl
les
or
mov
stos
sub
bound
add
sub
cmpl
xchg
push
mov
lret
mov
push
cmpsb
ss
ja
cmpb
xlat
and
pop
popa
sbb
jl
push
jo
inc
push
sbb
jns
sub
inc
push
repnz
and
outsb
or
push
lea
xchg
add
mov
movsb
aaa
xchg
in
add
or
xchg
or
orl
or
ret
jb
jp
xchg
adc
add
sahf
push
or
dec
or
cmpsl
scas
dec
or
adc
mov
movsb
or
daa
fisttps
mov
mov
sbb
jne
and
lahf
sbb
pop
xor
test
fiadds
sbbl
arpl
add
out
xor
jecxz
inc
stc
push
add
pushf
out
lea
jbe
or
popa
stc
ret
push
mov
or
or
xor
add
rorb
and
adc
cmp
jmp
cwtl
push
dec
imul
inc
ss
aas
sbb
loope
xor
fisubl
and
add
push
push
push
xor
mov
cmp
popa
iret
ret
mov
or
in
jmp
mov
add
movsl
and
shll
xor
loopne
mov
insb
in
add
aas
je
or
shlb
xchg
inc
xchg
push
loopne
loopne
inc
add
inc
je
sbb
pop
sbb
pushf
sarl
add
movb
fisttps
add
sbb
js
sub
out
xor
call
add
fsubr
gs
push
sbb
out
and
fildl
popa
out
popa
sub
cmpsb
jo
leave
add
sti
push
mov
and
mov
sbb
jns
adc
inc
fisttpll
lret
ret
jb
pop
es
mov
add
and
dec
mov
pop
push
push
sbb
pop
int
ljmp
rcl
std
mov
test
xor
inc
popa
fstpt
sbb
push
fisubs
jl
jge
lock
rcrb
mov
or
inc
inc
inc
push
cmp
sbb
sbb
out
xchg
jo
or
popa
aaa
jecxz
dec
shl
inc
inc
mov
xchg
negl
push
dec
mov
xor
or
scas
mov
movsl
add
scas
jno
rcrb
add
xor
aad
out
or
loopne
fistpll
lock
adc
pop
imull
insb
rcl
and
adc
pop
in
dec
xor
xor
and
xchg
lock
pop
xlat
fcmovnu
je
jnp
insb
inc
shl
sub
cmp
test
hlt
xor
dec
push
push
cmpsl
pop
add
jo
mov
xor
js
dec
push
and
pop
ret
add
xor
ret
add
les
xchg
adc
pushf
lea
hlt
ret
scas
shr
mov
jb
push
sbbl
sub
shll
test
test
push
insb
dec
call
enter
mov
enter
in
enter
pop
pop
lock
cmp
push
push
loope
insb
inc
mov
shrb
inc
pushf
pop
mov
lods
das
sbb
xchg
ret
loope
aam
fwait
xchg
pop
stos
pop
mov
vdivps
push
jno
es
push
out
mov
leave
mov
mov
aad
mov
sub
sbb
adc
push
sar
push
add
fisttpl
xchg
jo
xlat
mov
mov
xchg
add
rorl
movsl
add
xchg
jb
scas
testl
lods
mov
sub
popa
mov
add
iret
mov
xor
sub
gs
testl
push
push
rcrl
add
loopne
xor
sub
call
push
mov
mov
in
call
roll
and
add
push
lods
shlb
inc
push
nop
loopne
jns
pop
les
in
ret
daa
ret
dec
mov
in
mov
dec
call
call
scas
ret
aas
je
fwait
idivl
push
popa
mov
lds
xchg
add
jnp
popf
fwait
lret
mov
adc
mov
sti
push
loopne
add
mov
and
dec
mov
sub
loope
popa
or
mov
mov
pop
pusha
add
movsl
add
shlb
mov
cmpsl
daa
scas
dec
and
sbb
ja
adc
es
dec
cmp
push
adc
inc
sub
out
sbb
lea
jo
ret
cmp
lock
xor
pushf
ss
mov
or
jne
dec
sbb
pop
out
adc
push
pop
rolb
in
leave
cmp
mov
inc
mov
and
inc
ret
inc
mov
lcall
adc
xchg
aaa
movsb
xor
adc
test
pop
jmp
or
mov
mov
sbb
je
pop
fldcw
push
inc
pop
push
add
cmp
aad
jne
adc
add
imul
or
pop
xchg
addl
lahf
jnp
cmp
xchg
add
add
fwait
pop
xchg
fs
mov
mov
or
and
jnp
stos
push
sub
loop
sbb
jmp
sbb
adcb
pop
cld
mov
inc
mov
dec
push
cld
nop
add
dec
cld
cld
cmp
add
cmp
sbb
mov
test
mov
rorl
aas
pop
cwtl
cmp
imul
andl
lds
cmpsl
mov
jo
jmp
sbb
loopne
xchg
repz
leave
test
cmpsl
frstor
push
mov
mov
or
lahf
push
push
out
pop
into
aaa
fcmovb
and
xor
inc
xchg
sbb
cs
imul
in
pop
adc
mov
out
xchg
add
mov
repnz
add
and
mov
xchg
fiadds
pop
mov
adc
cs
sbb
cs
jl
and
cltd
push
dec
daa
rclb
adc
inc
imul
cmp
push
and
lahf
add
in
dec
adc
test
inc
xchg
xor
add
or
daa
mov
inc
push
clts
sbb
dec
xor
push
enter
ret
and
xor
and
test
push
xchg
sub
push
and
jo
cltd
mov
mov
jp
add
ret
push
fs
cmpsb
pop
dec
dec
dec
sbb
pop
repnz
inc
addr16
pop
pop
sti
mov
sbb
push
push
fiaddl
pop
pop
dec
pop
xchg
mov
rcl
pusha
aaa
push
pop
xor
add
sbb
orl
lret
fs
xchg
cmp
adc
push
pop
iret
xlat
and
jne
aad
dec
jnp
imul
inc
pop
sbb
dec
test
sbb
adc
sbb
hlt
adc
in
push
leave
cs
xchg
inc
add
sub
roll
addl
push
int
das
and
sti
out
jl
or
jle
pusha
dec
fs
cmp
jge
push
push
push
pop
mov
jmp
adc
lock
out
popf
xchg
adc
pop
mov
xor
and
adc
xor
and
leave
or
fisubs
int
or
add
push
mov
sbb
jnp
pop
mov
push
dec
mov
push
add
repz
adc
testb
inc
pop
dec
or
mov
outsl
lods
mov
repnz
pop
test
mov
pop
pop
cmp
arpl
mov
js
jmp
js
mov
imul
pop
jb
loop
testl
adc
sbb
xor
cld
test
lock
iret
jle
pop
imul
outsb
imul
sbb
and
mov
mov
sub
cmp
cld
and
insl
testb
arpl
sub
adc
popa
dec
xchg
imul
imul
testl
dec
adc
pop
leave
jne
cmp
lea
fs
adc
or
loopne
dec
fidivrs
mov
scas
roll
xor
rol
add
outsl
pop
and
aaa
ret
negb
mov
inc
sbb
adc
xor
mov
test
push
daa
push
test
xor
popa
ja
adc
adc
data16
and
outsl
insb
sbb
ret
stos
mov
cmp
in
movsl
push
stc
jno
add
pop
add
jne
mov
ret
and
shlb
movsl
add
push
push
pop
lahf
cmc
and
jb
push
push
xor
cmp
call
dec
pop
decl
test
fdivl
andb
lds
dec
adc
loopne
jne
pop
xor
jae
xchg
mov
pushw
pop
or
daa
inc
das
inc
fcom
pop
out
addb
fcompl
add
jne
cli
jb
or
pushf
push
sbb
jo
or
mov
or
sub
mov
sar
dec
pop
pop
mov
jne
in
std
ds
inc
jae
mov
sbb
dec
add
sub
out
sarb
je
arpl
pop
mov
mov
sub
add
and
in
test
cmp
adc
rcrb
rclb
or
out
mov
test
in
gs
sub
xorb
iret
lret
jp
test
fcomp
ficompl
out
dec
inc
pop
and
insb
popf
xor
pop
je
pop
cmpsb
sub
cwtl
push
mov
fcomi
inc
or
popa
loop
decw
ret
js
les
testb
add
inc
pop
nop
bound
dec
popa
cmpsl
imul
mov
cmpsb
and
jmp
ja
lock
pushf
and
lds
cmp
lea
cmpsl
cmp
jae
jbe
xchg
xchg
je
scas
sub
jp
add
in
rorl
fbstp
das
push
leave
add
or
or
push
xor
popf
ja
sub
test
jae
add
ljmp
push
jecxz
mov
movsl
add
inc
pushf
subl
aaa
sbb
mov
inc
push
lock
cmp
add
inc
je
les
sbb
xor
jge
push
test
sub
scas
into
push
movsb
lcall
mov
push
or
jne
fsubrs
xchg
cwtl
sub
and
sub
sbb
mov
je
mov
add
xorl
push
lods
imul
xchg
lods
sbb
or
out
pusha
cmp
inc
dec
jo
mov
sub
pop
add
jmp
sbb
push
sub
lahf
lock
stc
xor
clc
hlt
and
xorb
es
repnz
dec
jbe
test
insl
and
dec
daa
popa
sti
xchg
sbb
add
cmc
das
movsb
jmp
aam
pop
int
es
lock
dec
sbb
nop
inc
or
testb
popa
mov
pop
out
jo
cmp
push
dec
mov
add
pop
hlt
je
and
ficompl
or
sbb
ret
sbb
cmp
inc
insl
shufps
jne
sub
and
imull
outsb
nop
test
insl
das
add
fildll
rcrl
add
shll
push
shrl
test
sbb
mov
lea
ret
imul
pop
lock
mov
add
or
mull
es
jge
pop
adc
cmp
nop
add
add
dec
cmp
cmc
filds
sub
sarb
lcall
jmp
jns
sbbl
sbb
add
in
pusha
pop
test
test
or
add
nop
and
in
sbb
movsl
cli
dec
mov
and
repz
inc
dec
xchg
push
shll
mov
loope
int
outsl
add
nop
loopne
cltd
mov
cmp
push
cltd
xchg
sbb
pop
cmp
loopne
jno
xor
loopne
push
or
sub
adc
ja
scas
mov
loopne
push
or
jmp
adc
push
dec
sub
sub
pusha
sub
adc
or
add
push
xchg
mov
pop
xchg
cmp
imul
bound
data16
push
jecxz
mov
call
cmp
mov
inc
sub
call
imulb
pop
bound
sub
adc
call
test
loope
add
mov
mov
xor
mov
rclb
enter
adc
cmp
pop
push
push
cmp
leave
je
pop
bound
insl
dec
cmp
out
inc
mov
sbb
adc
outsl
cmpsl
dec
adc
ret
fmuls
test
js
inc
or
leave
or
xchg
xchg
cmp
inc
or
test
jle
addl
xor
dec
dec
add
sub
push
ret
mov
mov
fs
push
adc
or
and
and
insb
jo
and
dec
xor
test
lret
js
push
pop
in
xchg
xchg
in
clc
int3
xor
and
xor
cmc
adc
mov
test
and
mov
and
inc
jae
pop
ficomps
js
test
xor
je
or
pop
lcall
test
push
pop
stos
enter
pusha
in
imul
lock
movsl
add
mov
inc
cmp
add
fmull
sti
push
arpl
and
or
mov
mov
push
fnstenv
daa
cmp
mov
insb
or
mov
sti
sub
cmp
lea
push
test
mov
test
add
in
sbb
outsl
inc
pop
enter
fbld
cmp
push
aas
adcl
dec
dec
dec
add
mov
fisubrs
and
adcb
xchg
push
xor
cltd
pusha
add
lds
dec
or
sub
sub
xchg
lods
leave
inc
sbb
sbb
dec
xlat
jne
cmp
add
or
cmp
pop
pop
push
lods
sbb
ljmp
clc
cmp
sbb
add
dec
mov
les
mov
popa
loope
cltd
fmull
sbb
sbb
xor
ljmp
cmp
push
sub
mov
daa
dec
add
mov
jae
aam
cmp
jns
push
sbb
and
fsubrs
rcrl
mov
dec
in
jmp
sub
add
scas
test
jge
les
push
sub
aam
orb
cmp
add
or
mov
and
jecxz
mov
adc
test
inc
test
sub
popa
rorl
sub
inc
xor
sub
sub
jle
cmp
pop
inc
jbe
fdivs
adc
push
shll
and
pop
add
xchg
add
jo
mov
insb
loopne
xchg
repnz
push
xchg
ja
and
cltd
inc
adc
sbb
stos
jmp
sbb
repnz
mov
cmp
push
inc
sbb
sbb
test
je
add
call
pushf
dec
mov
and
andb
jnp
cltd
jne
xor
js
dec
push
icebp
push
inc
or
or
cmp
jbe
sbb
ret
dec
dec
mov
movsl
and
mov
push
mov
mov
push
out
js
xchg
push
xchg
xchg
mov
call
and
jno
or
out
stos
dec
adc
inc
testb
sahf
les
inc
pop
sbb
inc
call
push
es
xchg
lret
test
fcomps
sbb
push
adc
sarl
loop
int3
bound
shll
cld
inc
or
jmp
push
mov
daa
sub
and
dec
fnstsw
enter
jb
mov
mov
push
adc
xor
adc
shll
ret
ss
std
comiss
xor
or
je
and
lea
jne
test
pushf
push
mov
adc
inc
es
add
mov
roll
loop
lret
enter
jne
and
lods
inc
push
notl
enter
in
fmuls
enter
jne
daa
and
loopne
movhps
add
sbb
shll
and
push
and
sbb
adc
addb
add
mov
nop
cmp
mov
and
dec
adc
xor
mov
sbb
mov
push
pop
cmp
or
test
adc
pushf
int
adc
push
loopne
pop
cmp
and
dec
xor
movlps
insl
mov
xor
call
sub
scas
inc
xchg
outsb
cltd
dec
sarl
xchg
shll
sbb
jg
inc
fsubr
jg
push
jg
adc
or
nop
lret
imul
cld
pop
icebp
clc
repnz
lret
fsubrs
out
push
aas
jp
bound
fsubp
std
xchg
repz
sbb
inc
adc
ja
pop
fisubs
stos
sub
push
inc
cmpl
sbb
sbb
cmc
sub
test
ja
arpl
jb
or
cltd
loope
sbb
sahf
iret
mov
add
xchg
pop
jae
nop
pop
push
add
dec
icebp
mov
inc
mov
xor
lret
mov
adc
repnz
das
pop
inc
test
and
es
or
pop
outsl
clc
int
icebp
bnd
add
repz
mov
and
int3
pop
xor
inc
out
dec
mov
inc
add
data16
pop
int
cmp
add
test
pop
cld
js
or
ret
pop
or
inc
and
push
adc
pusha
stos
and
lods
jmp
mov
inc
fiadds
add
xor
das
bound
ficomps
es
ja
adc
dec
add
pop
test
sub
add
push
jbe
push
mov
lret
jbe
or
mov
repz
inc
add
pop
xor
lsl
xorb
lods
or
inc
push
ficomps
jl
pop
add
push
pusha
ficomps
ss
push
insl
jns
pop
sbb
test
add
filds
xor
rcl
dec
sti
xor
pop
xchg
add
or
xchg
loopne
addr16
jge
rcll
push
adc
outsl
dec
push
fadd
mov
mov
xchg
or
cmp
cmp
pop
mov
lret
dec
sbb
outsl
dec
mov
push
dec
out
inc
and
pop
shrb
mov
aad
rolb
addb
inc
jo
xchg
pusha
int
sbb
popa
adc
jae
xor
push
or
sub
fs
sub
dec
or
mov
aaa
adc
ret
cmp
push
or
sbb
and
adc
push
cmpsb
xchg
aad
cmp
push
pop
sti
cwtl
test
jne
int
in
shll
outsl
inc
neg
das
clc
cmp
push
fimull
cmpsb
inc
mov
push
je
fildll
arpl
in
and
cmpsb
add
cmp
pusha
pop
lcall
and
sub
sbb
adc
dec
or
adc
and
pop
push
leave
cmp
imul
mov
insb
je
movsl
arpl
mov
lahf
adc
orb
push
sub
mov
lea
inc
loopne
jns
in
rclb
pop
mov
int3
jo
out
inc
xchg
nop
pop
inc
dec
inc
jbe
inc
xchg
dec
adc
je
push
test
lea
inc
mov
insl
or
inc
push
dec
xchg
mov
aas
push
and
cmp
push
add
dec
mov
dec
or
sub
adc
mov
push
cmp
enter
pop
push
icebp
or
add
mov
add
and
adcb
adc
mov
cli
lahf
or
ja
sbb
mov
dec
inc
push
or
and
mov
sub
push
sub
ret
push
lret
or
sbb
inc
adc
mov
or
sahf
sbb
mov
inc
mov
adc
mov
xchg
int3
je
popf
xchg
push
xchg
jo
add
cmc
xchg
xchg
je
sbb
lcall
ss
outsb
jmp
outsl
lea
bts
pusha
mov
mov
movsb
push
xchg
pop
or
sbb
cs
lods
cltd
add
cmp
add
ret
mov
or
inc
jecxz
sub
imul
xor
add
pushf
or
push
jb
sarb
add
js
mov
icebp
mov
test
aaa
int3
push
lock
push
ljmp
add
pusha
jmp
movsb
xchg
add
mov
scas
and
call
imul
cwtl
or
xorb
aam
fstl
into
inc
inc
mov
inc
pop
ljmp
movl
mov
fcoms
mov
or
rolb
out
adc
pop
add
movsb
mov
fwait
scas
les
push
add
xchg
orb
xchg
les
add
mov
cmpsb
lret
jg
add
call
popa
adc
cmc
pusha
das
lcall
cmp
push
dec
jmp
or
mov
outsb
pop
pop
in
jnp
and
or
sbb
test
fmuls
sbb
add
jg
push
mov
test
push
ret
sbb
or
inc
mov
subl
pop
and
xchg
mov
or
rolb
mov
dec
movsl
cmpsl
mov
pop
add
add
jl
xor
loope
cmp
jne
sbb
sarb
jne
xor
dec
cmpsl
push
outsl
imul
aam
or
mov
ss
inc
daa
mov
xchg
pop
mov
scas
pop
adc
mov
sub
ds
cmpsb
and
sub
xor
mov
add
or
hlt
jl
or
and
inc
out
addb
sbb
movl
and
dec
mov
insb
outsl
test
iret
xor
ljmp
sub
sar
dec
mov
lret
shrb
sar
outsl
popa
aam
xorb
dec
lock
pop
sbb
fcomps
lret
push
dec
fnsave
push
dec
call
movsl
pushf
add
add
dec
mov
and
test
mov
out
movb
push
hlt
addb
rol
jo
push
cmp
mov
xor
clc
sar
inc
push
clc
add
aam
lods
xor
pusha
add
xor
push
in
imulb
insl
push
fcoml
cmp
dec
inc
outsb
sbb
add
push
cmp
movl
pop
cmp
sbb
lock
sti
xchg
mov
and
inc
xchg
and
xor
xor
push
add
jg
push
jecxz
aad
xor
mov
gs
int
pop
movsb
xchg
pop
sub
add
xchg
and
jbe
push
add
dec
mov
js
jecxz
push
imul
and
adc
push
fisttpll
insb
mov
adc
or
push
test
loopne
pop
or
pop
cmp
adcl
adc
rorb
dec
dec
inc
dec
cmc
xorb
jle
push
dec
lods
adc
outsb
xor
movsb
jg
dec
push
jns
add
and
cltd
test
movzwl
push
or
push
pop
inc
repz
add
std
pop
scas
xchg
add
mov
pop
mov
or
push
dec
mov
jg
arpl
in
or
fs
add
sub
push
or
movsl
daa
aam
and
lods
je
xor
push
mov
pop
push
jmp
fwait
push
and
and
pop
inc
push
mov
aam
dec
add
ret
push
sbb
ret
cmpb
cwtl
mov
inc
and
dec
test
and
rorl
push
mov
push
aas
clc
dec
aam
or
dec
add
or
adc
cmp
jne
mov
cltd
out
inc
dec
roll
jb
dec
adc
pop
pop
dec
jmp
or
adcl
sbb
or
mov
decb
test
mov
lret
leave
xor
inc
hlt
xchg
add
jp
add
lods
add
sti
mov
dec
pop
xchg
pusha
xchg
and
add
push
pop
rorl
push
rorb
faddl
mov
sbb
mov
insl
arpl
pop
insb
add
shrl
add
addr16
pop
ret
jecxz
xchg
or
mov
mov
and
inc
pop
push
jbe
and
xchg
cmpsl
cli
addr16
add
jo
cmp
push
add
sahf
fs
lahf
push
setp
mov
pop
leave
in
add
push
sbb
test
push
jmp
cmp
mov
cmp
rclb
insb
mov
lods
add
lcall
icebp
add
insb
mov
cmp
and
mov
push
xor
es
adc
cmp
cli
rcrl
pop
pop
jmp
inc
mov
xor
sbb
scas
mov
or
inc
push
in
and
mov
mov
inc
inc
je
mov
mov
dec
inc
lahf
mov
mov
adc
xor
push
xor
adc
add
test
sub
dec
inc
adc
iret
fsubp
shrb
dec
adc
ljmp
ret
mov
or
stc
or
jmp
pop
xlat
cmp
jne
xchg
addb
add
xor
mov
jecxz
sub
or
inc
lret
add
pusha
adc
jmp
mov
mov
stos
pop
pop
daa
push
jo
mov
mov
add
mov
icebp
add
cmp
inc
dec
inc
enter
data16
or
movsl
ret
xchg
les
cld
sub
push
or
and
sbb
pand
test
mov
sub
pop
push
push
xor
subl
mov
movsb
inc
bound
mov
pop
not
cmp
sbb
mov
loop
daa
inc
add
inc
push
mov
pop
movsl
test
scas
mov
mov
adc
int
clc
add
or
inc
mov
or
test
cmp
jmp
mov
cmp
dec
pop
pop
lock
inc
jne
shr
sahf
cmp
xor
adc
pop
nop
movb
fidivs
add
adc
add
jb
push
add
and
mov
pop
sar
nop
clc
add
jge
mov
sub
mov
jecxz
mov
lock
imul
push
arpl
cltd
idivl
loopne
lods
xorl
inc
mov
je
popa
leave
in
mov
inc
loope
call
out
in
pop
push
sub
ss
scas
lods
mov
movsl
mov
jo
mov
push
push
pop
adc
fdivs
inc
mov
dec
dec
lret
out
jo
push
mov
outsl
fdivp
sub
out
inc
aam
and
pop
jmp
cltd
pusha
loope
repz
add
inc
add
or
imul
sub
or
add
sbb
sbb
mov
xchg
fs
inc
cmpsl
jle
push
xor
in
add
push
cwtl
xchg
xchg
inc
out
jo
or
mov
or
xchg
movsbl
pop
sub
mov
cmp
pop
lock
dec
out
call
fstpt
pop
addr16
js
into
add
inc
cmp
dec
adc
jo
cmp
inc
or
or
dec
fisttpll
pandn
dec
xchg
imull
mov
pop
mov
loopne
adc
addr16
adcb
push
call
in
adc
jecxz
push
subl
jmp
jo,pn
pop
mov
xchg
push
imul
movsb
xchg
inc
mov
mov
push
leave
xchg
or
ss
lea
iret
int
mov
and
enter
les
int3
lea
push
sbb
sub
ds
mov
mov
mov
push
cmpxchg
fcoml
or
and
inc
push
jecxz
jge
faddl
bound
ja
pop
adc
or
xor
mov
or
or
mov
xchg
mov
add
adc
push
stc
sbb
call
cmp
inc
push
dec
or
nop
push
cs
xchg
sub
imul
insb
dec
inc
or
inc
sbb
fdiv
dec
pop
mov
fldl
cwtl
scas
mov
inc
adc
jl
inc
mov
lea
in
lock
pusha
push
adc
push
les
fsubrs
xchg
mov
aam
sub
inc
and
inc
xchg
popf
dec
icebp
inc
add
test
lods
sub
pop
fiaddl
jge
pop
push
sbb
mov
jge
ja
adc
fildl
jmp
push
push
pop
push
and
cmpl
test
mov
and
push
push
dec
sub
add
pop
dec
std
outsb
inc
cmp
je
test
aaa
push
or
lds
imul
arpl
daa
inc
cmp
and
adc
sbb
pop
lret
in
nop
push
add
pop
mov
push
in
cmpsb
lods
dec
lret
ss
enter
outsb
pop
outsl
fucomp
push
fsubr
and
sarl
jae
jb
pop
sbb
ret
lea
mov
add
push
bound
dec
popa
or
lock
sbb
adc
add
shll
enter
or
mov
dec
sbb
jns
or
fcomps
mov
lcall
in
jge
xor
adc
outsb
test
lea
xchg
add
mov
pop
add
movsb
dec
les
fmull
pusha
push
pusha
or
jg
bound
gs
enter
add
js
scas
nop
inc
outsl
adc
les
push
add
ljmp
or
movsb
push
les
sub
movaps
in
and
pop
test
js
movsl
gs
nop
inc
sbb
popf
dec
jge
jnp
adc
xorb
imul
loopne
push
test
outsl
outsb
cmp
xchg
sub
push
add
and
sbb
xchg
xchg
xchg
mov
add
jbe
push
cmp
push
and
add
cmp
dec
hlt
dec
push
jge
lods
dec
mov
inc
xchg
add
in
dec
dec
lods
clc
xor
push
dec
punpcklbw
inc
inc
adc
or
jns
fisttpll
in
or
adc
hlt
clc
jne
dec
ss
loope
xor
js
cmp
push
rcl
cmp
sbb
mov
fstl
movsl
xchg
sbb
stos
sarl
mov
xor
in
xlat
mov
ja
ret
sbb
push
lret
inc
cmp
xchg
lods
xchg
scas
push
call
clc
das
lock
call
nop
add
or
xchg
fsubl
xchg
movsb
insl
pop
xchg
cltd
jp
push
call
repnz
xchg
psubusb
mov
clc
cmp
push
ss
paddusw
or
pop
lock
adc
call
fildll
or
daa
in
outsl
int
pop
es
inc
and
mov
sub
lea
mov
inc
inc
jns
adc
and
sbb
daa
push
push
pop
clc
or
mov
xor
pop
sub
inc
add
lcall
xchg
mov
pushf
pop
mov
push
push
cmp
or
and
dec
adc
popa
sub
mov
rcll
jle,pt
sub
add
int
cs
scas
ret
popa
dec
stos
mov
ret
rolb
call
inc
push
sahf
iret
mov
dec
sbbb
andl
lods
push
adc
xchg
lea
mov
std
and
fnstenv
adc
mov
push
inc
mov
inc
sti
adc
jmp
push
xchg
test
adc
sbb
lahf
ljmp
xchg
dec
jb
mov
xchg
add
mov
and
pop
dec
fiaddl
xor
rorb
pop
pop
pop
inc
mov
sbb
dec
cwtl
pop
mov
and
inc
sub
arpl
insl
sbb
outsb
adc
jle
adcb
jo
xchg
lods
or
movsb
popa
icebp
add
lods
in
pop
fimuls
sbb
arpl
test
imul
int3
xchg
nop
rcrb
aam
fwait
ds
cmp
lcall
inc
push
dec
pop
xor
inc
sub
incl
or
inc
jp
in
mov
xchg
xor
into
and
call
sbb
scas
mov
and
push
mov
adc
pop
jle
aas
fs
mov
scas
ret
pushf
fxam
or
fs
movsb
test
push
mov
popa
xchg
lods
mov
sub
int3
and
mov
mov
mov
mov
push
shlb
pop
push
aam
fsub
jmp
xchg
cmp
cmp
push
mov
pop
mov
inc
sub
adc
arpl
push
lcall
push
and
sub
add
cwtl
insb
push
nop
idivb
test
xchg
scas
insl
or
or
or
ds
add
pop
push
ret
gs
pop
mov
xchg
ret
sbb
movb
outsl
pop
or
and
mov
nop
push
gs
nop
add
mov
or
xchg
pop
xor
rcll
mov
stos
insl
sbb
mov
mov
and
adc
rcr
cltd
movsb
setp
xor
adc
movb
cli
pop
and
sahf
movl
gs
adc
push
cwtl
pop
adc
imul
xchg
push
pop
fidivl
enter
cmp
loopne
sbb
xor
fcomi
ret
cmpsl
in
iret
and
and
cmova
add
jae
cmpsb
pop
or
push
insl
xor
or
and
pushf
or
fisttpl
pushf
sub
pop
and
arpl
cmp
or
ja
xchg
fadds
ja
xor
mov
jo
or
push
dec
aam
jo
addl
popf
cmp
push
sbb
or
sbb
popa
inc
nop
sbb
and
cli
sub
mov
and
and
sbb
mov
jge
popa
in
adc
cmp
lock
loop
add
mov
xor
adc
pop
sub
imull
add
fdivs
add
xor
clc
decl
or
in
aam
fsubrl
in
lret
jne
adc
mov
mov
xorb
xor
dec
xorb
and
pextrw
jae
xchg
mov
fildl
ja
ljmp
mov
aaa
xchg
lock
sbb
shl
jp
enter
mov
sub
mov
push
repz
and
mov
push
pop
lods
xchg
test
add
cmp
mov
mov
mov
call
ror
sahf
mov
pop
sub
test
lea
pop
jns
sub
cmp
jo
cmpsl
add
and
cwtl
xchg
in
aas
xchg
or
les
inc
dec
cmp
aam
iret
je
popa
and
ss
test
cmpsl
divb
add
ret
or
jecxz
add
in
xor
add
add
add
ret
ret
sbb
sahf
fcomi
les
cli
or
scas
add
popa
or
sub
mov
ss
cwtl
adc
nop
sub
ljmp
out
cmpl
or
fwait
int3
sbb
xchg
das
sti
adc
and
enter
loop
lock
shll
add
or
xor
and
cmp
stos
movsl
sub
jg
and
mov
mov
xor
adc
mov
lods
sbb
mov
pop
out
adc
or
out
lahf
mov
or
inc
std
add
adc
push
pop
xor
sti
lea
inc
stc
cmp
adc
adc
in
es
sbb
shll
movsb
sbb
mov
imulb
imul
xor
push
push
push
lea
xchg
mov
or
rorb
aad
cwtl
in
clc
sbb
cld
cmpsl
loopne
hlt
xor
push
adc
sub
negb
orl
inc
add
ljmp
mov
push
test
fs
addr16
push
mov
push
cwtl
shrb
adc
push
push
je
xchg
negl
decl
push
scas
sbb
sarb
adc
xor
iret
test
push
stc
push
or
fadd
or
mov
mov
push
xlat
rclb
sbb
repnz
cld
ror
clc
inc
mov
gs
aam
lock
lods
or
in
movsb
test
pop
xor
add
pop
mov
jne
movsb
ret
xorl
insl
mov
adc
or
fld
mov
xor
mov
cmpl
pop
push
lods
push
or
repz
adc
or
lods
xchg
ljmp
fs
in
in
out
incb
and
sub
and
cs
mov
or
fs
negb
fs
daa
clc
or
xchg
pop
ficompl
or
aaa
pop
xchg
jle
xor
outsl
rcr
push
and
nop
push
arpl
pop
ja
jge
dec
xchg
mov
outsl
ja
sbb
dec
sbb
cmp
or
mov
adc
add
cmc
movl
fldl
int3
mov
cmpsb
jge
and
adc
enter
cmp
pop
cmpsb
pop
and
push
and
push
cmp
or
sbb
dec
pop
mov
push
rolb
test
adc
jbe
and
push
outsb
add
add
add
lock
aam
push
cmc
inc
pop
cmp
mov
push
dec
andl
pusha
sarl
and
push
pop
sub
lods
or
subb
dec
jbe
mov
aas
sbb
xchg
mov
and
push
es
or
push
es
mov
mov
jnp
add
or
pusha
fdivl
push
sub
push
test
cwtl
sbb
inc
decb
push
xchg
and
jg
cmp
out
pop
add
add
mov
sbb
inc
xchg
add
dec
test
add
imul
mov
cmp
insb
xchg
push
or
dec
fistpll
pop
mov
jno
popw
pusha
adc
inc
add
mov
scas
inc
cmp
push
xor
jmp
inc
adc
and
push
movb
or
outsb
adc
xchg
xchg
jnp
jne
adc
mov
cmc
push
incl
movsl
xor
mov
sub
in
decl
fisubl
pop
dec
lods
pop
adc
xchg
sbb
arpl
or
inc
push
and
shlb
fwait
cmp
jp
dec
ss
mov
pusha
and
addr16
pop
mov
xchg
lock
jle
cmc
or
aaa
inc
sub
inc
dec
mov
adc
mov
and
in
test
add
das
imul
ret
popa
loop
shll
push
and
and
cltd
je
ds
dec
push
and
aas
cmp
sbbb
add
cltd
divb
mov
xor
or
inc
sarl
mov
inc
push
movsl
fld
mov
aas
or
and
sbb
sbb
sbb
test
movsl
int
push
frstor
mov
ljmp
into
shlb
loope
je
repnz
nopl
dec
jmp
push
les
lahf
adc
push
or
rol
dec
cmp
dec
jno
out
cs
movsl
sti
sbb
mov
mov
rcrl
jg
hlt
push
insb
or
pop
jbe
test
pop
ja
sub
orps
add
and
jle
inc
add
jl
push
test
test
mov
mov
nop
jp
dec
lods
or
test
aas
aaa
dec
cmpsl
sub
sub
int
popa
add
lods
xchg
lcall
or
jno
jmp
sbb
jmp
adc
shll
jne
imul
scas
pop
or
fbstp
int3
inc
cmpsl
sub
addb
adc
loope
xchg
sbb
xor
dec
mov
sbb
mov
dec
jbe
cmp
js
pop
mov
inc
adc
inc
ret
pop
pop
lock
dec
inc
xor
les
dec
jns
and
xor
sub
mov
in
in
xchg
and
jno
in
push
xor
outsb
mov
ror
adc
repnz
xadd
push
xor
nop
and
push
add
sub
and
add
repnz
xor
xchg
fildl
cmpl
sub
push
and
xor
jl
sti
fwait
icebp
out
sbb
test
and
cmp
xchg
mov
aas
and
adc
add
aam
push
xchg
xchg
mov
lock
xor
inc
inc
mov
sbb
cmpsl
push
adc
adc
cmpsb
imul
sub
ljmp
rcll
pop
movsl
lret
push
push
rclb
pusha
sti
inc
sarb
xorl
or
cmp
push
sub
push
dec
aaa
je
icebp
adc
test
ss
sbb
xor
xor
test
add
sbb
in
push
and
ret
cmpsb
imul
add
or
imul
inc
xchg
sub
inc
arpl
nop
push
sub
push
pushl
mov
sub
adc
xchg
cwtl
push
dec
or
test
shlb
push
in
shrb
add
aaa
xor
xchg
int
ss
movsl
insl
push
push
push
call
inc
sbb
out
push
rorb
lods
mov
cmp
pop
repz
call
xorb
push
aam
imul
adc
loopne
int3
cli
or
fwait
loopne
xlat
mov
and
shll
js
dec
mov
imul
call
test
bound
jp
mov
mov
ljmp
push
and
and
sarb
push
aaa
inc
je,pn
push
pusha
xor
out
lahf
inc
ss
cmp
sub
aaa
sbb
in
sbb
call
out
inc
das
enter
pop
jnp
or
dec
or
inc
jmp
imul
clc
pop
rclb
test
inc
or
sbb
cwtl
dec
das
outsl
iret
and
enter
andl
jae
into
insl
sub
clc
pop
and
pop
sbbb
xchg
sub
xchg
in
or
xchg
pop
xor
in
mov
pop
cmp
lods
dec
add
dec
add
push
and
xlat
and
inc
sbb
jg
adc
lahf
lea
movsb
xor
sahf
lock
mov
subl
xchg
ret
cltd
mov
aaa
cvtps2pi
xorl
mov
jo
inc
arpl
inc
sub
or
pop
inc
shll
push
divl
pop
dec
ja
test
mov
xor
bound
test
rorl
adc
mov
xor
xor
rcrl
add
call
data16
jecxz
repnz
enter
sub
add
xchg
add
or
loop
outsl
add
nop
in
ret
aad
pop
push
pop
inc
imul
xchg
ret
dec
adc
sar
jp
fildll
fdivs
mov
sub
movsb
mov
adc
jnp
mov
pop
pop
sbb
add
leave
pusha
or
jbe
inc
xchg
add
lock
xor
cmovbe
add
idivb
lcall
lcall
lahf
jg
xor
dec
adc
pop
xlat
mov
xchg
and
sub
jbe
ret
clc
xor
mov
xchg
push
call
dec
scas
adc
inc
mov
xchg
sub
add
pop
jb
aaa
add
cwtl
test
cmp
adc
xchg
add
sub
xor
adc
cmp
jnp
adc
xor
dec
or
add
mov
xor
sbb
loopne
movsb
mov
inc
ds
xchg
inc
mov
aam
and
orl
adc
cmp
test
les
stc
xor
and
lret
rcl
ss
fistpll
fwait
das
ret
push
lods
je
mov
nop
add
dec
ret
xor
push
xchg
mov
daa
in
add
xor
and
or
push
pop
add
xchg
andl
dec
cmp
pop
sub
in
mov
lcall
jmp
mov
add
jmp
sbb
xor
shlb
sbb
pop
add
adc
cld
and
addr16
or
stos
sbb
cli
lcall
fcmovb
daa
in
adc
shll
sub
and
dec
roll
not
aaa
sarl
adc
add
cmp
or
out
fbstp
sahf
inc
ljmp
pop
aaa
jecxz
insb
and
jno
or
dec
xor
cmp
or
ss
xchg
dec
in
push
in
add
or
add
mov
push
cmp
lea
sbb
add
inc
cmp
fs
into
push
mov
xor
pop
add
xchg
test
mov
mov
mov
scas
push
lock
sbb
jns
popf
dec
mov
int3
pop
shlb
sbb
xor
lret
data16
xchg
gs
stos
and
xor
enter
lcall
or
and
js
mov
push
mov
ret
add
out
push
xchg
jo
test
cmc
sbb
dec
repnz
and
cld
aam
or
rcrl
cmp
inc
dec
sbb
jg
test
pusha
daa
adc
xchg
add
dec
ljmp
or
sub
xchg
add
push
or
adc
mull
inc
dec
or
es
push
add
test
adc
pop
pop
pcmpgtd
add
mov
inc
cmpsb
daa
or
jno
or
loopne
push
jmp
push
mov
xor
and
dec
cmp
hlt
or
stos
es
and
fisttpl
adc
outsb
xchg
and
add
or
add
inc
xchg
cmp
inc
sub
cltd
iret
sub
je
push
push
mov
data16
add
or
inc
stos
dec
add
clc
lock
and
push
fmulp
in
bswap
movsb
or
pop
add
add
and
inc
or
popa
mov
inc
popa
xor
inc
fs
iret
cmp
insl
es
pushf
imul
shrl
dec
dec
or
add
aaa
leave
sub
add
xor
adc
ret
aaa
adc
adc
and
imulb
ret
dec
jo
inc
xor
shrb
pusha
xor
lret
xchg
cmp
dec
mov
loop
mov
mov
ret
mov
sbb
lahf
inc
and
dec
iret
jbe
movsl
orb
outsl
add
xchg
jmp
add
push
subb
and
xlat
aas
or
int
jl
test
mov
enter
dec
stos
ret
xor
aas
inc
adc
nop
pusha
outsl
ret
mov
mov
inc
adc
jns
ds
adc
les
fistl
enter
mov
jno
lea
fwait
jl
aas
je
cmp
mov
stos
test
dec
imul
sub
mov
rclb
movsl
inc
add
addb
sbb
jmp
add
push
fiaddl
sbb
das
jge
add
arpl
pop
mov
xor
ss
outsl
popa
xor
fisttps
push
jbe
adcb
xor
xchg
xchg
lea
aas
dec
enter
jmp
test
add
push
pop
jge
sub
gs
je
sbb
sbb
fwait
scas
add
sbb
lahf
mov
sub
xlat
es
fcomps
jg
jmp
mov
cmp
mov
adc
and
imul
jmp
mov
lock
add
out
xor
loop
sbb
scas
dec
xchg
stc
cmpsl
mov
dec
mov
dec
add
adc
enter
xor
je
orb
lock
inc
inc
imul
or
mov
push
bound
inc
add
test
leave
push
pop
inc
jo
xchg
lahf
push
loope
jo
or
addl
sbb
fcomps
in
fadds
mov
mov
leave
mov
lret
fcoml
loopne
mov
mov
sbb
in
push
enter
adc
lods
lods
enter
test
sbb
sbbl
enter
shr
inc
push
in
call
sbbl
xchg
pop
jb
cmp
outsb
or
add
test
cmp
insb
add
nop
add
dec
es
insl
rorb
in
sbb
repnz
rcr
call
insl
add
lods
mov
mov
imul
sbb
orl
in
insb
or
sub
icebp
pushf
cmpsb
imul
dec
lcall
xchg
mov
imul
pop
lcall
mov
mov
dec
shll
or
xor
ss
inc
inc
outsl
push
orb
bound
roll
loopne
cli
es
shll
cmp
mov
shl
inc
push
adc
lcall
mov
into
fucomi
outsb
cmpsb
imul
inc
insl
lcall
push
sub
sbb
sbb
mov
lcall
ss
push
sub
mov
mov
mov
ficomps
enter
inc
sbb
or
pusha
outsl
mov
jle
add
xchg
aam
adc
pop
mov
dec
gs
fwait
xchg
pop
cli
cmp
movl
mov
push
mov
or
dec
in
push
add
push
pop
enter
in
imul
and
shl
push
pop
mov
gs
rorl
push
pop
call
inc
or
push
push
aam
mov
adc
arpl
pop
mov
pop
insb
cmpsb
inc
aaa
jb
xchg
jns
in
popa
push
addr16
sbb
and
add
nop
sub
dec
sbb
test
aas
mov
sbb
adc
sub
or
dec
aas
inc
sub
mov
fidivl
push
mov
inc
inc
ret
in
xor
jo
mov
lea
dec
push
pop
and
dec
test
add
inc
data16
leave
in
aam
daa
ficompl
stos
xchg
jmp
lahf
push
shrb
mov
mov
mov
fs
test
lret
dec
adc
cs
and
dec
pusha
enter
das
and
jns
sub
test
out
lods
imul
out
pop
inc
aam
pusha
push
inc
mov
daa
add
cltd
mov
ret
out
cmp
dec
rcr
insb
inc
stos
aas
xchg
call
out
mov
orl
lss
test
jg
dec
dec
ljmp
add
and
pop
adc
test
xor
and
shll
incl
adc
push
fiaddl
arpl
andl
sub
aaa
subl
and
push
bound
shlb
pop
pop
iret
loope
dec
xchg
arpl
xchg
dec
push
cmp
cmp
or
and
pusha
outsl
jns
rorb
pop
shr
std
inc
mov
dec
push
mov
dec
cmp
xlat
xchg
sbb
mov
jmp
leave
popf
xor
mov
aaa
testb
add
dec
cmpl
or
xchg
mov
add
pop
adc
xchg
push
jnp
pop
pop
sbb
mov
das
mov
pushf
inc
adc
cmp
loopne
imulb
or
mov
mov
lea
pushf
dec
fstpl
ret
loope
js
call
shll
adcl
daa
push
xorb
xchg
sbb
call
push
xor
xchg
push
cmpsb
pop
push
mov
lods
dec
iret
dec
les
je
bound
rclb
cmp
in
sbb
and
repnz
or
sbb
gs
sub
adc
xchg
dec
dec
adc
shll
mov
dec
sbb
mov
push
insl
xchg
adc
cmp
sbb
add
in
sbb
xchg
addb
lea
push
sbb
je
lret
jmp
mov
sbb
repnz
je
loopne
jl
es
push
pop
adc
les
inc
jbe
add
addr16
fdivrp
lods
in
push
ja
jno
mov
xchg
mov
fimull
add
jmp
adc
push
cmp
insb
pop
enter
jl
test
xchg
push
test
fnstsw
out
and
sub
repnz
xchg
mov
add
scas
cwtl
pop
xor
pop
inc
or
lds
push
fs
xchg
or
std
xor
add
xchg
sbb
dec
ljmp
int
mov
and
adc
push
push
movsl
adc
je
add
and
inc
add
xchg
scas
cmp
mov
push
and
pusha
add
in
cmp
mov
mov
xchg
dec
mov
push
insl
pop
sbb
daa
mov
std
inc
pop
mov
rolb
cmp
sub
push
mov
dec
sub
mov
add
inc
pop
int
sub
pop
sbb
add
pop
jmp
jl
out
xchg
xchg
mov
in
jne
push
test
imul
leave
sub
inc
and
cmpb
xor
stos
and
xchg
jno
fldl
dec
push
add
scas
cmp
mov
xchg
push
push
sbb
jne
jb
xor
mov
mov
fcomip
lcall
adc
ret
jne
cmpsl
xor
mov
jnp
cmp
imul
cmpl
jne
xchg
xchg
daa
push
aam
pop
push
add
or
jne
inc
bound
in
push
hlt
add
pop
jae
imul
out
cmp
push
adc
test
add
dec
mov
loopne
loop
mov
jae
cs
stos
mov
adc
push
stos
rol
mov
add
jno
sbb
sub
and
or
jo
in
and
imul
push
pop
pop
add
add
shll
nop
adc
xor
or
adc
test
push
xchg
je
mov
dec
dec
or
cmp
and
cs
mov
adc
popa
leave
dec
xchg
xrelease
lods
xor
or
adcl
mov
jo
push
mov
push
sub
lea
les
scas
fs
dec
nop
and
lea
or
das
dec
test
push
pop
or
dec
rol
mov
jnp
mov
je
ret
inc
lods
adc
stos
dec
fmuls
inc
ret
inc
sbb
add
jns
jno
xor
add
xchg
cmp
jne
or
sub
push
cmpl
push
cmp
lret
adc
add
rorb
movsl
pop
mov
ret
pop
jbe
inc
sbb
adc
popf
in
push
pop
adc
ds
xchg
push
xor
or
movsb
inc
mov
cwtl
cwtl
and
ret
or
jmp
cmp
cwtl
dec
or
fdivs
leavew
xchg
sbb
jecxz
fbstp
js
mov
push
pop
dec
lcall
adc
andl
add
jl
insl
jmp
or
and
mov
adcb
call
fs
inc
jge
push
lea
out
divb
dec
loopne
xor
pop
mov
movsb
ret
std
xorb
sbb
incl
push
hlt
pop
jo
or
xor
xchg
test
or
fbld
lcall
push
mov
insl
jl
xor
rorb
lret
cmp
mov
cmp
sbb
sub
mov
sbb
cmp
jae
mov
cmp
ja
xchg
test
pusha
lods
sub
jg
add
adc
add
dec
mov
xchg
lock
in
pop
inc
imul
sti
sbb
rorb
mov
mov
in
dec
and
out
stc
pop
sahf
insl
mov
lea
pop
cmp
loope
ficoms
je
cmpsb
out
xchg
jp,pt
xor
and
add
cli
or
andb
mov
inc
mov
sub
cmc
adc
inc
mov
xchg
mov
add
adc
sub
mov
pop
movsb
test
sub
jno
xor
dec
aam
jge
jle
dec
je
jmp
scas
add
jmp
adc
shrb
out
pop
xor
push
mov
push
mov
sbb
inc
cmp
ljmp
mov
xchg
test
dec
sub
lea
test
movsb
add
push
sub
loop
test
jb
adc
je
pop
inc
add
xor
and
andl
shrb
fsubrs
call
rcrl
push
js
lock
pop
in
push
iret
pop
dec
mov
mov
std
inc
mov
mov
gs
add
lahf
push
cmp
jecxz
xchg
ja
daa
pop
adc
icebp
inc
test
arpl
push
lret
mov
jmp
dec
pop
fdivl
dec
jne
shl
push
ffreep
outsl
jmp
push
les
clc
mov
rorb
cmpps
push
push
shlb
imul
lret
adc
adc
sub
or
aam
jo
aam
jne
ja
rolb
push
dec
sahf
mov
inc
xor
fwait
popf
inc
enter
add
cmp
rclb
and
jno
push
push
xorb
in
movsb
mov
mov
pop
adc
pop
sbb
mov
or
adc
out
push
pop
into
or
push
xor
lock
mov
shll
mov
inc
mov
bound
sub
mov
mov
stc
adc
mov
popf
sub
test
jg
adc
dec
std
insb
or
popa
jne
andl
and
mov
xor
sbb
pop
pop
int
pusha
and
sub
and
cmp
push
je
testl
and
jb
lods
dec
sub
sub
dec
loope
mov
mov
jp
jl
das
add
sub
repnz
ret
and
xchg
and
adc
push
push
jmp
sbbl
add
xor
mov
and
cmp
lea
mov
inc
movl
fistps
pop
insb
sub
xchg
add
pop
es
dec
fsubl
adc
xor
jg
pusha
addb
pop
les
sbb
add
clc
xchg
push
pop
test
pop
addl
push
mov
lahf
ret
and
inc
shlb
mov
pop
push
movb
dec
push
adc
ret
dec
inc
stos
inc
movsb
xor
nop
pop
sub
add
or
adc
cs
push
das
mull
inc
inc
mov
inc
xchg
cmc
push
xor
or
decl
jns
sub
add
leave
and
rorb
daa
add
mov
into
adc
and
cld
xchg
cli
scas
or
scas
xchg
jo
sub
add
xchg
push
xchg
mov
shlb
adc
lahf
lock
sbb
jb
lock
and
sub
xor
or
pusha
lret
fldt
pop
sbb
out
movsl
lret
jne
inc
and
adc
mov
adc
xorb
mov
push
lds
mov
jg
jp
jp
ss
xlat
popf
js
inc
sbbb
jg
ret
add
cmp
adc
sbb
jne
int
pop
xchg
pop
leave
not
popa
fists
lcall
packsswb
ss
jmp
adc
roll
cltd
and
cmpl
mov
sarb
sbb
or
insb
lock
repnz
adc
sub
xchg
je
sub
and
mov
push
repnz
mov
add
adc
adc
xchg
rolb
lahf
std
mov
lahf
fidivrs
mov
cmp
mov
ja
mov
movsb
mov
mov
mov
popa
jns
and
add
dec
cld
sbb
add
loopne
xchg
xchg
insb
dec
pop
xor
adc
andb
sti
add
mov
pop
lret
adc
lahf
mov
and
es
dec
mov
out
lret
aad
repnz
lea
or
sti
aam
or
push
add
sub
push
test
in
jmp
cmp
ja
cmpl
adc
addr16
and
and
sub
les
and
inc
adc
imul
loope
adc
sbb
jno
test
fcoms
adcl
xor
xchg
fisubs
inc
and
and
adc
adc
sbb
ret
inc
sbb
push
dec
cs
mov
clc
sbb
imul
lret
xchg
cmp
sti
fcom
lds
ret
pop
les
shlb
adc
fisubs
jns
lret
inc
out
out
inc
mov
mov
or
push
or
ret
or
xor
loope
inc
mov
push
adc
dec
dec
dec
aam
adc
push
xor
jnp
xor
mov
mov
arpl
and
arpl
or
dec
xchg
leave
jg
imul
jno
mov
das
push
ret
fisubl
movsl
jecxz
stc
xchg
aaa
rorb
xor
les
fstpl
sub
and
bound
dec
aam
mov
dec
sbb
lock
push
fildl
inc
test
fldt
outsl
outsl
mov
cmp
pop
pop
lock
push
fs
pop
push
popa
leave
dec
inc
dec
imul
cltd
leave
mov
or
and
outsl
outsl
nop
xchg
scas
push
inc
pusha
shlb
cmp
xlat
cs
enter
mov
and
add
nop
lea
inc
loope
sbb
pushf
push
pop
push
dec
popa
fisttpl
dec
cmp
adc
and
adc
and
pop
sub
imul
sub
adc
inc
jmp
shlb
mov
mov
pop
insl
data16
shll
cmp
add
or
sub
or
inc
xor
push
and
add
fstpl
adc
or
adc
mov
iret
adc
inc
xor
cmpsb
adc
scas
inc
adc
cmp
pushf
mov
inc
test
lahf
sahf
dec
or
push
or
rclb
mov
and
and
loopne
pop
pop
adc
push
sti
lock
das
cs
mov
mov
inc
or
push
adc
or
adc
add
inc
inc
push
mov
mull
xchg
fcoms
adc
sub
dec
out
cmp
shrb
dec
push
cmp
into
dec
popa
xor
and
gs
sub
or
inc
sbb
test
inc
inc
pusha
pop
adc
jl
sub
pop
out
lock
incl
push
dec
add
fistpl
fstps
fwait
inc
inc
add
pop
add
jmp
fsubrs
call
insl
mov
adc
fdivrp
insl
add
inc
add
ret
inc
xchg
fsts
cld
add
fstp
push
inc
lahf
bound
push
and
lcall
add
imul
add
stos
call
lods
xchg
shrl
mov
outsb
push
add
xor
or
icebp
sub
xchg
and
imull
sub
or
in
pusha
inc
mov
into
push
sub
rcr
cmp
push
adc
sbb
sbb
ficoms
movsb
push
add
mov
xor
push
xor
cmpb
or
xlat
out
rcll
dec
push
cld
test
rolb
pop
inc
insb
or
inc
xchg
cmp
imul
sbb
lods
push
sbb
xchg
and
dec
outsl
pushf
mov
fnsave
enter
lret
mov
lock
add
cmp
or
dec
inc
sbb
fcompl
xchg
fisubs
leave
mov
lea
or
gs
inc
testl
rolb
or
pop
inc
dec
dec
push
jl
cmp
cmp
mov
sub
push
mov
push
mov
lock
in
sbb
adc
jmp
sbb
pop
mov
adc
rcrb
aam
es
ret
xchg
jb
push
push
sub
test
sbb
xor
shlb
nop
pop
aam
ja
imul
movsb
imul
cmp
lcall
pop
stc
push
lret
mov
push
mov
add
jp
andb
pop
insb
jge
dec
xor
sub
dec
and
or
movb
adcl
sbb
pop
mov
mov
pop
and
jmp
jne
shr
adc
std
sbb
adc
repnz
dec
pop
cmp
xchg
xchg
ret
adc
and
nop
mov
in
add
or
jb
aaa
popa
sub
sti
mov
leave
fcompl
adc
ljmp
and
in
mov
xor
je
dec
dec
ss
add
sub
lea
jae
repnz
jge
pop
loopne
mov
jno
dec
adc
and
test
cltd
and
adc
dec
mov
inc
mov
jae
adc
movsb
in
mov
jl
or
mov
mov
or
push
mov
push
add
les
fs
inc
in
or
adc
mov
sub
or
lahf
ja
xorb
add
inc
pop
pop
movsb
lcall
cmp
lods
pop
fs
fwait
in
push
sbbl
nop
subl
and
ja
push
inc
mov
out
in
cltd
sub
or
out
add
push
bound
pop
pop
inc
incl
mov
shll
adc
or
push
and
mov
ja
sub
mov
les
test
add
int3
mov
adc
hlt
div
pushl
xor
mov
shrl
jno,pt
leave
loop
imul
cmp
nop
scas
jbe
mov
and
push
jbe
sbbb
ds
add
lahf
mov
ja
aas
or
pop
and
inc
or
scas
push
je
nop
sbb
mov
lods
repnz
inc
loopne
and
roll
jns
inc
and
enter
or
jns
repnz
sarl
add
aas
mov
insb
jecxz
push
je
test
adc
push
test
push
test
ss
fmuls
mov
loopne
sbbl
dec
outsb
jno
pusha
xchg
outsb
lea
mov
xchg
ja
xchg
fsubrs
jns
aas
xlat
xchg
sub
sbb
sbb
pop
or
mov
adc
cmp
cltd
add
insb
pop
xchg
das
pop
popa
pop
into
jp
movsb
xchg
daa
das
jp
jns
xor
push
dec
aad
jp
and
jp
and
xor
mov
cltd
xchg
in
aaa
in
aad
mov
loope
jbe
aas
mov
rorl
jae
mov
mov
clc
adc
sti
jno
loope
inc
xchg
sbbb
jl
jbe
add
aas
or
test
sbb
nop
mov
insb
insb
xor
movsb
fldl
aam
nop
and
push
lret
jge
movsb
and
iret
mov
test
daa
mov
and
inc
jge
mov
daa
subb
leave
add
dec
cs
jle
popa
mov
fwait
adc
xchg
xchg
aas
push
mov
ret
bound
popa
popa
insb
push
into
and
xchg
nop
sbb
jae
fcomps
stos
cwtl
add
or
adc
adc
fsincos
arpl
xchg
pop
jnp
fildll
add
dec
outsl
jae
sub
cmp
nop
and
aas
fbld
adc
ja
repnz
or
inc
lds
js
imul
sahf
xlat
clc
clc
jne
adc
sub
pusha
aas
iret
ljmp
int
clc
iret
ljmp
sbb
pop
adcl
mov
aaa
subb
add
shr
subb
sub
jg
dec
test
aas
dec
subb
dec
xor
dec
in
adc
dec
xor
lods
xchg
mov
push
mov
out
rorb
enter
rcl
shll
orl
aad
orl
xlat
fcomp
fimull
enter
fnsave
enter
ffreep
enter
rol
and
movb
leave
lret
enter
int
enter
iret
mov
and
and
mov
or
enter
mov
mov
and
and
and
cmpsb
orl
cmpsl
test
stos
or
enter
lods
xor
and
and
and
xchg
orl
xchg
cwtl
cltd
lcall
popf
xor
and
and
and
xchg
mov
and
add
in
in
jno
xchg
and
xchg
xchg
push
repnz
out
xchg
sbb
movsl
mov
outsl
xor
push
xor
jne
pushl
add
or
leave
cltd
xor
inc
or
sbb
roll
mov
pusha
jle
aaa
aaa
movsl
test
push
jl
int
icebp
test
jae
mov
dec
cmp
adc
mov
loopne
movsb
ja
je
sti
mov
push
int
xchg
or
mov
mov
xchg
push
jmp
cmpsb
mov
inc
xor
add
and
xor
and
or
or
xor
or
and
xor
and
adc
adc
xor
adc
and
xor
and
sbb
sbb
xor
sbb
and
xor
and
and
and
xor
and
and
xor
and
sub
sub
xor
sub
cltd
nop
xor
xchg
das
xor
sbb
xor
sbb
and
xchg
aaa
cmp
sbb
cmp
sbb
and
xchg
aas
inc
inc
sbb
inc
and
xchg
and
xchg
and
xchg
inc
dec
dec
sbb
dec
and
xchg
and
xchg
and
xchg
dec
push
push
sbb
push
and
xchg
and
xchg
and
xchg
push
pop
pop
sbb
pop
and
xchg
and
xchg
and
xchg
pop
pusha
popa
sbb
and
xchg
and
xchg
and
xchg
addr16
sbb
insb
and
xchg
and
add
nop
outsl
push
push
inc
inc
push
fimuls
xor
jne
sub
and
int3
add
add
aad
outsb
mov
mov
sbb
pop
jo
gs
jbe
cmp
sub
outsl
popf
jns
sti
xchg
push
jae
loope
sub
fwait
pop
outsb
xor
popf
add
in
jle
sbb
fsubrs
jmp
pop
push
pop
aas
jbe
pavgb
push
jae
sarl
cmc
xlat
out
pop
push
out
jae
jne
xchg
pop
nop
aas
pop
cs
mov
lcall
push
or
adc
xorl
subb
outsb
pop
push
jo
adcb
mov
dec
mov
xor
pushf
stos
jmp
nop
mov
inc
leave
mul
pop
inc
push
push
push
outsb
add
daa
ss
xor
adc
mull
xchg
xor
lcall
rolb
inc
jns
nop
fsub
subb
scas
das
and
mov
pop
popa
das
pusha
inc
sub
push
mov
ss
inc
iret
push
push
mov
enter
push
add
sub
inc
daa
fidivl
and
pop
cmpsl
pop
and
pop
scas
cmp
push
inc
jne
dec
lcall
mov
jp
ja
test
sbb
in
xor
push
adc
push
pop
xor
sbb
lcall
popa
xor
inc
push
das
push
jnp
push
cmpsb
mov
push
dec
sub
jbe
dec
mov
dec
lea
push
dec
sub
mov
cmp
popf
cmpsb
lea
dec
aaa
inc
fs
add
fildll
inc
nop
movq
push
outsl
sbb
insl
arpl
imul
pop
dec
cltd
mov
push
jb
les
ffreep
gs
xchg
sbb
inc
and
mov
mov
unpckhps
inc
xor
dec
dec
clc
lea
jbe
popf
dec
inc
gs
push
das
insb
jo
xchg
push
sarl
das
ss
adc
inc
test
sub
das
sbb
cli
pop
or
add
sub
mov
or
das
shll
sbb
aaa
pop
mov
cmp
fs
hlt
aaa
fninit
push
in
push
iret
dec
icebp
mov
enter
jp
push
push
lea
dec
inc
pop
iret
in
pop
inc
add
imul
pop
ret
aam
and
mov
addl
push
loopne
jle
popl
mov
fisttpll
aam
inc
add
out
rcl
in
sti
jg
test
xchg
and
cmp
sub
jne
push
add
test
push
notl
jg
push
repnz
scas
fbstp
leave
rorl
jg
sbb
xchg
icebp
into
mov
or
shll
xor
push
xchg
add
pop
mov
cmpb
pusha
loop
dec
lds
mov
movsb
daa
fs
push
cmp
dec
daa
scas
cli
cltd
and
xor
sti
cltd
add
rcll
hlt
test
ja
and
push
rcl
mov
push
mov
or
or
fstpt
inc
dec
out
cmp
data16
sbbb
mov
sub
add
pop
pop
movsl
daa
xchg
pop
push
xchg
inc
inc
xlat
data16
shlb
jle
dec
pop
mov
push
out
xor
cmp
mov
outsl
dec
push
movsl
and
jne
add
stos
push
pop
sbb
and
sbb
and
in
push
test
or
xchg
je
clc
testl
push
mov
insl
xchg
fwait
pusha
adc
sbb
inc
enter
and
js
mov
loop
mov
cltd
sbb
and
aas
aaa
stos
inc
dec
pop
lods
aaa
mov
mov
cltd
adc
and
mov
add
fsubrs
test
nop
pop
jp
test
decl
adc
push
push
sbb
inc
mov
insb
or
xor
into
add
insl
inc
add
pusha
loop
or
adc
call
jl
or
cld
mov
lret
cmpsl
pop
xchg
repz
push
mov
insb
xchg
std
aaa
movsl
and
subl
push
cmpl
inc
mov
mov
adc
fisubrs
pop
outsb
sbb
adcb
mov
fildll
or
dec
xlat
pop
xchg
scas
pop
mov
jp
mov
and
repnz
fadds
xor
sarb
adc
movsb
fcoms
and
dec
sti
arpl
std
inc
inc
dec
dec
dec
push
les
xor
aaa
xor
repz
sub
add
mov
adc
adc
jle
movb
aaa
sub
ja
fimull
inc
push
cmpsb
pop
popf
push
pop
adc
sbb
jae
test
xchg
pop
popf
movsl
imul
xor
sahf
or
cs
push
popa
xor
shll
adcl
fsubr
cli
out
or
sbb
dec
shll
cmp
bound
xor
shll
mov
sub
shlb
and
rcr
aad
rcrl
xchg
inc
xlat
adc
nop
xchg
and
fimull
mov
inc
iret
enter
nop
rcrl
xchg
aam
aad
xchg
rcrl
xlat
add
and
or
xchg
nop
shrb
push
dec
or
test
push
leave
mov
jl
sahf
or
xor
aam
jl
sar
mov
jnp
pusha
mov
jb
push
add
cmp
sbb
hlt
cmpsl
sub
sbb
cmp
cmp
pop
or
push
pop
xchg
in
rcrb
enter
arpl
or
sub
xchg
imul
mov
lret
mov
lahf
imul
jle
in
sbb
cmp
adc
call
divl
cwtl
push
sbb
mov
pop
push
addb
mov
sub
and
add
shlb
xchg
add
scas
lods
and
hlt
xchg
in
in
lock
mov
dec
adc
inc
dec
int
icebp
mov
and
sti
out
lea
xchg
or
scas
adc
adcl
xchg
icebp
rcr
jb
inc
repnz
mov
inc
xchg
sbbl
enter
mov
inc
mov
jl
xchg
int
add
mov
xor
mov
mov
sub
xchg
mov
push
and
in
mov
mov
sub
in
pop
lods
lock
push
stos
push
push
sub
movsb
movsl
push
push
ror
fwait
xor
js
push
stos
shlb
cmpsl
add
jle
push
in
adc
sub
fisubl
ja
test
test
mov
ss
imul
mov
inc
cmp
rcl
adc
jl
sbb
xchg
insb
mov
and
les
push
fwait
pop
ret
shrb
mov
enter
mov
test
addr16
mov
repnz
pop
xchg
insl
gs
push
scas
fld
mov
mov
cltd
movb
pop
mov
xchg
sub
addb
dec
movsl
sbb
iret
repnz
push
shll
add
dec
jmp
inc
xor
xchg
pop
es
sub
clc
add
add
jl
push
cltd
jp
jno
pop
jae
add
movsl
push
scas
dec
inc
test
sub
xchg
in
inc
popa
jecxz
xchg
movsl
inc
xchg
sar
add
sbb
push
push
or
shll
pop
ret
int3
jl
sub
adc
or
call
add
movsl
dec
ficoml
sbb
test
add
bound
cmpl
cld
insb
movsl
movl
dec
adc
mov
inc
mov
testb
test
sbb
add
pop
push
es
stos
adc
pop
cmpsl
push
push
fnstenv
inc
fldl
inc
dec
insl
xchg
gs
push
pop
or
in
in
hlt
sbb
les
push
push
addr16
call
add
inc
add
imul
andl
sub
add
scas
add
dec
pop
add
movsl
add
add
add
leave
movb
into
popa
aaa
fadds
sub
inc
push
outsb
es
push
xlat
hlt
adc
sbb
xor
repz
mov
pusha
mov
les
cmpsb
add
adc
mov
mov
xor
mov
into
jns
cmp
mov
pop
push
out
inc
add
sub
mov
or
mov
retw
push
and
cmpsl
mov
cmp
xorb
frstor
or
test
subl
test
add
jmp
add
push
mull
test
stos
pop
in
adc
and
loope
fmull
pop
push
faddl
ja
dec
sbb
add
pop
adc
xor
pop
aad
add
imul
pushf
nop
cmpsl
test
stos
cld
test
test
inc
lods
out
mov
xchg
pop
jnp
outsl
repnz
jp
popf
add
and
outsb
bound
xchg
std
and
cmp
xor
addb
cmp
dec
in
out
adcl
adc
inc
add
mov
imulb
sbb
adc
or
and
lods
loopne
sbb
sbb
pop
adc
or
rorl
into
loopw
xchg
shlb
inc
sbb
adc
or
adcb
inc
out
stos
and
cwtl
pop
insl
inc
dec
dec
faddl
inc
pop
sub
test
sub
lods
fldenv
lahf
and
xchg
mov
dec
mov
in
adc
mov
mov
jno
je
data16
es
sub
mov
sub
mov
jg
leave
xchg
mov
jb
push
dec
dec
add
enter
mov
jns
mov
sub
stos
pushf
cmp
mov
push
fistpll
lods
adc
cs
insl
adc
add
jb
sbb
stc
pop
add
lds
test
xchg
stos
test
cmp
push
es
and
or
cwtl
push
or
daa
cmc
enter
dec
sbb
mov
lahf
or
shlb
mov
inc
aam
inc
inc
lods
xor
loopne
imul
pop
orl
jne
xchg
mov
fldenv
xchg
pop
jmp
adc
nop
dec
adc
jo
and
icebp
das
nop
jle
insl
mov
imul
sbb
sbb
adc
adc
ljmp
mov
shll
pop
cmp
sti
fldt
add
xchg
adcl
jmp
lret
sbb
sbb
test
pop
nop
hlt
scas
push
mov
or
mov
xor
cmp
xor
mov
dec
jmp
dec
pop
push
aas
aad
adc
insl
daa
push
daa
outsb
test
add
xor
pusha
stos
es
jno
outsb
push
mov
hlt
mov
fsts
cmp
mov
leave
xchg
mov
inc
add
lock
and
shlb
push
in
add
scas
inc
mov
push
call
loop
aas
divl
insb
inc
push
scas
repnz
cmc
adc
in
sbb
add
lods
jbe
or
or
test
jne
mov
scas
stc
les
xchg
in
sarl
xchg
and
enter
cltd
dec
bnd
enter
push
mov
sbb
xchg
mov
dec
dec
leave
cmp
loopne
ret
mov
insl
dec
mov
mov
popa
cmp
adc
add
insb
aad
add
nop
or
jecxz
lea
inc
add
fldl
inc
rcrl
leave
cmp
test
jmp
test
mov
loopne
inc
dec
jne
mov
daa
add
pop
mov
sub
mov
sub
daa
call
xchg
jne
pushf
fwait
aad
and
add
mov
mov
jmp
dec
jne
pop
xor
xorl
fisttps
jae
inc
loopne
mov
aam
mov
inc
mov
mov
mov
mov
pop
ljmp
xchg
sub
and
dec
lcall
lods
push
pop
mov
enter
sbb
adc
fdivl
clc
dec
repz
push
dec
out
sub
xchg
aas
int3
sub
add
sub
xor
xchg
mov
ret
xor
or
adc
and
test
fcoms
pop
jne
addr16
scas
ret
dec
das
inc
jmp
movsl
ret
pop
rclb
pop
mov
xor
sub
inc
subb
inc
rorl
or
mov
lods
invd
adc
xor
and
sbb
enter
and
add
xor
test
ss
pop
push
mov
clc
dec
call
test
cltd
xor
mov
ret
sbb
into
xor
mov
mov
lock
cld
sarl
jl
inc
pop
in
sub
gs
leave
insb
push
hlt
jg
mov
mov
subb
or
xchg
addr16
addr16
cwtl
mov
adc
js
jbe
inc
mov
mov
and
enter
test
xchg
je
adc
daa
xchg
jae
icebp
nop
xchg
mov
data16
dec
nop
xchg
xor
xor
inc
xchg
add
push
ret
pop
or
and
jmp
pusha
mov
rorb
mov
call
push
and
nop
call
sub
icebp
mov
adc
adc
sbb
adc
and
and
or
in
lret
pop
adc
repnz
mov
add
loop
adc
das
incl
sub
push
cmp
cmp
sub
adc
and
sbb
push
rclb
int
and
xor
mov
repnz
imul
arpl
mov
push
lea
add
in
mov
push
int
out
mov
sub
jle
testb
cmp
sub
add
sbb
xor
gs
jnp
xchg
movsb
popa
sbb
sbb
adc
cmpb
jnp
adc
adc
and
nop
andl
sub
out
add
sbb
xor
xchg
inc
xchg
cwtl
add
test
xchg
jbe
mov
inc
pop
push
loopne
dec
add
iret
fcmovbe
dec
sti
push
jne
out
outsl
pop
push
jne
das
sti
and
jns
gs
add
popa
je
popa
inc
bound
in
scas
mov
jo
jns
fimull
ja
push
insb
pop
jne
cmp
mov
xlat
gs
dec
arpl
loope
js
jbe
arpl
mov
mov
jp
fldl
or
sbb
pop
pop
cld
cmp
inc
insb
outsl
bound
push
mov
or
sub
xchg
aaa
dec
repnz
sub
push
rcll
aaa
or
sbb
fcomp
pop
sub
out
pop
pop
add
popf
adc
mov
movsl
mov
or
xchg
cld
lahf
cmp
call
push
test
and
test
dec
pop
dec
pop
loop
pop
fwait
sub
loope
cmp
dec
or
test
fistpl
inc
inc
and
mov
adc
add
rorb
pop
add
mov
dec
push
enter
xchg
add
hlt
push
mov
dec
mov
fdivrs
push
add
cmp
or
scas
mov
testl
sbb
cmp
sarb
xor
clc
inc
mov
call
loopne
test
jbe
ja
loope
add
dec
rol
loope
xchg
gs
aam
aam
mov
dec
sub
mov
dec
jle
and
or
or
xchg
loop
jo
fcomps
shlb
leave
sub
rolb
ret
dec
push
mov
pop
jmp
adc
mov
ret
in
jns
or
jp
insb
pop
sarb
cmp
jne
sbb
xchg
mov
in
adc
and
sti
push
and
fdivrl
jmp
sbb
push
insb
and
inc
or
and
mov
xor
mov
nop
in
int3
push
xor
adc
rolb
jae
xchg
mov
inc
fimuls
into
popl
pop
jns
xchg
dec
inc
cs
fcompl
jg
mov
xor
inc
mov
mov
pop
int
and
xchg
pop
xchg
dec
push
fldl
sub
mov
aaa
mov
ffreep
add
adcb
inc
fists
cmp
ret
mov
incb
dec
add
psubd
push
push
and
fsubrs
leave
fnsave
add
ja
std
adc
ds
cmp
fcomp
mov
xchg
lock
iret
mov
mov
notb
mov
stos
lods
or
les
lods
add
xchg
push
lret
sub
mov
lcall
loope
pop
shlb
ret
mov
dec
scas
es
and
and
or
add
adc
sbb
sub
and
push
add
inc
lods
dec
aas
lahf
ret
mov
and
xorl
pop
rcll
ret
test
adc
xlat
add
mov
dec
iret
xor
insl
mov
mov
sub
fsubr
and
mov
add
sub
inc
mov
xorb
fs
movsb
sub
jne
rol
add
fcomps
xor
jmp
pop
and
mov
lds
enter
popw
inc
push
add
adc
dec
outsl
lds
adc
je
xor
mov
negl
lea
test
mov
dec
inc
mov
mov
adc
mov
inc
jecxz
movsl
lds
add
bnd
mov
dec
add
jne
add
cmpb
jle
flds
clc
adc
jnp
lcall
mov
push
and
in
rol
pop
rcr
shlb
cltd
pop
movb
or
pop
or
ljmp
push
sbb
adc
loope
aaa
sbb
pop
mov
add
clc
mov
pop
mov
push
sub
loopne
dec
or
fdivr
lea
push
pusha
add
aaa
cmp
adc
sub
movsb
adc
int3
js
push
xchg
xchg
lods
or
dec
cs
jo
mov
mov
cmp
adc
jge
or
test
sbb
sub
inc
xchg
sub
xlat
test
dec
cmp
rorl
mov
push
sub
inc
pop
pop
mov
dec
int
pop
incb
xor
dec
push
aam
xchg
in
push
push
cmp
xchg
ds
outsl
push
or
hlt
imull
popa
jmp
popa
xor
pop
xchg
adc
lahf
test
or
xlat
cmpl
loope
shlb
add
js
xchg
sbb
leave
in
mov
es
pusha
enter
gs
or
repnz
sbbl
iret
call
aam
ret
hlt
loopne
mov
mov
movsb
je
xchg
mov
dec
pop
sub
dec
dec
dec
in
daa
cmp
inc
inc
dec
push
xor
xchg
pushf
push
dec
inc
push
add
int3
or
leave
mov
repnz
mov
fdivp
sub
fsub
fsubr
das
leave
clc
leave
xchg
daa
dec
lret
adc
sbb
cmp
in
sub
xor
mov
cmp
sahf
dec
inc
inc
inc
inc
inc
sahf
in
das
dec
inc
push
inc
push
push
push
cmpsb
popa
pop
cmpsl
dec
push
dec
and
cmp
push
mov
dec
push
inc
inc
add
ljmp
sbb
sbb
iret
adc
test
and
xor
pop
mov
testb
and
mov
bound
stos
popl
sbb
sub
int3
dec
or
call
pusha
inc
cmpsb
jp
sub
inc
pop
sub
jg
dec
fisubs
and
sub
iret
loop
adc
add
adc
xchg
mov
mov
jnp
pop
inc
cmp
push
popf
lods
rorb
mov
es
sub
and
jle
imul
pop
lea
sbb
call
sbb
jmp
cmp
mov
loope
inc
sub
fchs
and
test
push
loope
test
lret
cmp
push
inc
sub
dec
mov
ja
mov
pop
jno
jge
sbb
fsts
lret
mov
out
int3
push
sbb
loope
fstpt
adc
fucomp
fsubl
push
pop
das
xchg
in
dec
int3
lds
pop
inc
imul
ret
nop
xor
or
push
and
push
lock
mov
add
xor
cmp
pop
adc
sub
xor
out
dec
daa
inc
pop
and
std
cmp
cmp
push
add
xchg
xchg
inc
jmp
inc
fidivs
daa
and
inc
mov
add
lods
lea
jmp
push
fnsave
icebp
cmp
das
shl
into
add
test
or
or
add
into
sbb
jo
leave
cmp
in
bound
cmp
cld
mov
dec
jne
or
add
add
cmovns
das
into
push
outsl
push
sahf
or
cmp
aaa
push
int
adcl
xchg
outsl
ds
adcl
add
dec
add
dec
fisttps
or
push
inc
jmp
sbb
and
xlat
incl
and
mov
aas
cmc
mov
cmp
push
sbb
lock
cmovno
rcll
andl
push
mov
pop
mov
adc
lea
jl
mov
adc
add
and
int
negl
jne
xorl
fistps
xor
dec
or
pop
inc
and
outsl
add
jns
xchg
lar
lea
jl
incl
lds
jb
push
sbb
das
div
fsubs
mov
gs
ret
fsubr
loopne
dec
mov
sub
xchg
in
aam
sbb
push
jb
pop
stos
rcl
jmp
ret
and
repnz
addr16
cmp
mov
mov
out
enter
addl
dec
or
or
movsb
push
fstps
cs
push
cmp
arpl
xchg
xlat
and
rorb
and
dec
and
inc
repnz
pop
shr
mov
mov
mov
and
push
bnd
add
push
push
mov
sbb
cmpsl
mov
xchg
xlat
add
jecxz
push
sbb
inc
cmpsl
dec
or
and
shll
jnp
jae
sbb
popf
pop
ret
pop
mov
sub
xchg
mov
mov
xor
pusha
cmc
or
jne
movl
enter
push
push
add
pop
xchg
jnp
test
test
or
notb
ret
js
loope
cs
or
popf
adc
or
outsl
pop
sub
inc
ret
aaa
mov
cmpsl
push
jns
outsl
aad
je
lcall
aam
mov
nop
or
lock
imul
popa
adc
or
incb
xor
cmp
xor
xchg
aam
jae
das
mov
push
xchg
mov
mov
cmp
xor
outsb
adc
adc
mov
cmp
mov
inc
test
shrl
jp
lods
aaa
mov
push
push
pop
xor
mov
or
adc
jns
mov
jnp
outsl
add
cmp
lds
gs
fnsave
cltd
push
jb
add
pop
xor
adc
push
in
add
add
std
insb
js
movsb
jns
or
cmp
or
push
push
aas
pop
xlat
adc
addr16
adc
sub
xor
mov
je
sbb
inc
into
outsl
roll
pop
xchg
cmp
sti
push
mov
movsb
roll
add
in
lret
outsb
imul
mov
adc
cltd
mov
and
or
sub
adc
fdivs
add
dec
mov
adc
movl
sub
adc
mov
call
je
sbb
sub
jle
xlat
pusha
add
scas
in
insl
xchg
and
cs
or
jge
or
insb
jbe
or
mov
aam
pop
sbb
add
movhps
ss
pop
cmp
mov
sarb
insb
test
data16
push
aaa
or
fcoml
insl
mov
pop
repnz
mov
cld
or
sbb
dec
dec
push
pop
inc
adc
add
push
imul
add
inc
jmp
add
xchg
out
fcomps
outsl
jb
cld
and
push
push
ja
sbb
sbb
push
xchg
fbld
sub
or
or
dec
sbb
jge
insb
dec
or
leave
movsl
inc
and
or
or
cmc
repz
leave
adc
mov
gs
jbe
and
inc
pop
lea
xor
or
xchg
dec
inc
cmp
add
and
pop
xor
adc
das
mov
fcoml
in
pusha
je
mov
pop
sub
sbb
dec
push
sub
push
jl
adc
add
add
and
cmpb
cmp
push
pop
and
imul
fsubp
sub
mov
or
xchg
xor
mov
in
fsubr
fcmovnu
jmp
jmp
add
push
add
pop
sub
cmp
enter
and
outsl
or
mov
mov
sbb
jbe
push
adc
pop
sub
arpl
je
jo
or
ja
aas
rol
popa
xor
jle
stos
shlb
cld
inc
or
xor
lea
cmp
add
sbb
and
cmpsb
mov
sub
rolb
mov
xor
dec
inc
xchg
and
inc
pushf
adc
popf
pop
loop
aas
or
fimull
cwtl
pop
cmpl
nop
push
push
mov
xor
adc
pop
nop
jmp
sbb
movq
add
aas
jl
mov
aaa
sbb
dec
mov
cmp
lcall
sbb
sbb
jl
cmp
sarl
add
jns
dec
decl
push
lret
out
push
imul
xchg
inc
cmpb
out
pop
fdivrs
push
jo
and
jns
xchg
cmp
adc
push
fnsave
cwtl
icebp
popf
insb
inc
mov
and
jle
push
ds
das
fs
push
mov
insl
dec
jo
pop
push
jnp
pmaxub
dec
aaa
fimuls
xchg
ss
mov
in
ds
loope
push
in
push
jecxz
mov
loopne
add
mov
xchg
jb
sarb
sbb
es
sub
or
mov
mov
mov
aad
pop
add
mov
sub
dec
sub
or
xchg
sub
popa
js
mov
adc
dec
push
mov
dec
ss
push
pop
xchg
xorb
or
adc
out
xchg
addb
inc
rorl
inc
leave
sbb
mov
and
jb
daa
filds
pop
xor
insb
fs
inc
inc
mov
das
ret
loopne
aas
sub
mov
div
and
ret
dec
dec
outsb
in
push
and
iret
addb
xchg
mov
xchg
outsl
enter
lods
or
cwtl
gs
dec
js
shll
into
mov
movb
popl
inc
dec
fadds
sub
and
push
pop
mov
push
jmp
or
fs
and
sbb
mov
addr16
and
lret
mov
repz
fcoms
push
push
ds
inc
mov
add
in
test
dec
cwtl
js
mov
lret
or
inc
sbb
push
dec
push
fisubrl
inc
push
shlb
inc
test
push
inc
cmp
and
into
bound
and
mov
or
and
or
dec
pop
das
add
add
cltd
ret
cmp
data16
jb
adc
xchg
sub
test
sub
ds
push
mov
or
jno
or
sub
ja
in
loopne
xlat
cmp
adc
addb
mov
push
call
sub
or
dec
and
fsub
js
inc
popf
push
inc
add
les
mov
inc
mov
pop
pop
clc
inc
mov
jb
lea
push
lea
test
mov
sbb
adc
pop
int3
testb
or
sbb
and
leave
dec
push
add
push
test
adc
pop
rorb
add
es
xor
or
jne
mov
adc
inc
ret
data16
jecxz
pop
or
xor
mov
rcll
adcl
jo
push
mov
adc
cmc
jne
aam
mov
adc
pop
cmp
and
mov
sub
out
dec
aas
cmp
rclb
adc
adc
dec
jo
outsl
rcrb
xor
sbb
adc
add
rcll
inc
inc
adc
add
cmpps
jmp
in
je
push
inc
cmpl
fs
lea
decl
push
xor
jmp
inc
mov
sbb
xchg
sub
subl
sbb
sbb
and
pop
in
orl
adc
adcl
inc
lcall
nop
xor
pop
push
xor
les
xor
lret
sbb
pop
negl
and
or
lock
sub
cmp
xchg
inc
scas
cmp
push
jmp
mov
xchg
push
cmp
sub
imulb
pop
sub
sub
jg
dec
mov
lds
dec
adc
dec
inc
jne
sub
out
and
and
xor
fwait
je
lock
add
mov
add
stc
push
inc
nop
xchg
and
pop
scas
call
jl
out
ja
aaa
dec
outsb
xchg
ds
cmp
xchg
test
pushf
ret
fmuls
add
jecxz
pop
inc
xlat
aaa
enter
add
push
jmp
inc
aaa
dec
pop
ljmp
inc
es
add
mov
or
pop
cmp
push
push
sub
push
in
inc
push
inc
pop
fmuls
mov
cmp
lods
add
add
shrb
or
xor
xchg
sbb
dec
dec
in
inc
pop
incl
or
pop
loop
dec
cmp
icebp
xor
inc
cs
xchg
dec
jl
xor
xor
es
bound
mov
push
xchg
andb
test
sbb
int3
movsl
outsl
or
add
dec
pop
mov
dec
pushf
or
pop
xchg
and
sbb
pop
int3
mov
or
jle
cltd
xor
pop
pop
sbbl
lods
pop
mov
xor
cmpsb
roll
inc
inc
sub
enter
add
and
ljmp
ljmp
jmp
pop
cmp
jmp
jle
in
push
roll
je
dec
jmp
and
dec
or
dec
pop
sub
adc
and
ja
xchg
or
or
adc
test
fildl
orb
iret
xchg
or
jl
jl
test
adc
out
pop
pop
push
jl
cmpb
in
push
in
sub
cli
add
in
or
fdivrs
aaa
jo
or
loop
inc
xor
sbb
daa
testb
pop
jnp
push
sub
ljmp
clc
mov
pusha
cmpl
and
inc
jecxz
sahf
adc
sbb
xchg
adc
push
or
add
outsb
adc
cmp
xor
and
jge
and
pop
add
ret
or
push
xor
inc
adc
xor
sbb
xchg
repz
test
adc
adc
imul
xor
or
xchg
cmp
xchg
out
jge
pop
jb
bound
mov
push
and
pop
out
out
mov
lods
jne
jmp
test
cli
add
and
hlt
out
test
incl
add
add
enter
fwait
cmp
push
insl
dec
popf
mov
mov
pop
or
add
in
inc
pop
aas
out
inc
mov
imul
subl
nop
add
inc
addr16
ret
and
adc
add
adcb
pop
aaa
aaa
out
dec
xchg
nop
pusha
femms
add
add
inc
push
rorl
enter
lock
inc
outsb
nop
jbe
daa
out
test
jmp
and
jb
addb
outsl
jmp
jne
pop
test
hlt
add
mov
dec
jae
cmp
or
cmp
adc
xor
adc
mov
gs
pop
push
cmpsb
les
or
push
xchg
cs
xor
int
fcoms
mov
jae
lods
aas
and
jae
adcb
xchg
arpl
lock
pusha
daa
icebp
dec
test
daa
pusha
add
push
repnz
add
add
add
mov
cwtl
sub
insb
mov
jo
roll
dec
jbe
nop
fadds
and
xchg
nop
loope
mov
pop
xchg
sbb
and
enter
add
dec
and
pop
int
fld
jo
or
and
push
xor
js
jo
xor
push
jo
dec
and
pop
sbbl
mov
mov
aaa
inc
push
mov
in
push
add
adc
and
sti
je
inc
je
js
pop
jl
je
sarb
dec
xor
insb
movb
pusha
lock
movl
add
fmull
loopne
call
in
jno
test
test
add
icebp
add
pop
mov
jl
and
xor
cmc
adc
jle
sub
add
fisttpll
mov
mov
daa
pop
push
das
or
jnp
rorb
out
push
popf
sub
fiaddl
add
xor
lea
mov
daa
aaa
inc
insl
add
xor
or
pop
inc
bt
insb
loop
push
mov
sub
xlat
aaa
out
and
pop
das
push
jmp
in
add
call
and
push
pop
jnp
jns
push
jns
push
in
pop
in
sbb
lock
and
dec
push
sbb
fdivl
inc
test
xchg
inc
push
sbb
sbb
mov
add
xor
sub
or
lret
shlb
add
out
push
into
stc
cmp
add
mov
gs
add
pop
or
mov
jp
gs
adc
in
fcomip
ret
inc
inc
fs
rolb
xchg
cmp
cmc
aam
cmp
xchg
cmp
adc
jl
movsl
cmp
adc
cmp
add
pushl
mov
add
and
lods
sub
loopne
sbb
mov
popw
push
adc
popa
dec
push
cmp
lea
fcmove
dec
test
ret
fldl
cmp
xchg
into
lahf
notl
enter
mull
in
add
je
cmpsl
xchg
shll
scas
xchg
add
repz
arpl
and
movsb
out
and
or
cmp
movsl
insw
mov
push
stos
inc
push
mov
dec
xor
js
movb
int
dec
push
xor
dec
pop
add
adc
pop
fsubrl
movsl
nop
fdivl
adc
xchg
push
clc
cwtl
mov
push
roll
stc
sbb
jno
out
add
dec
cmp
fcom
test
bnd
aam
leave
and
inc
aam
fs
daa
push
rcl
xor
enter
in
int3
xlat
xor
dec
push
xor
jg
enter
repnz
xor
insl
aam
mov
addb
rcrb
shlb
lods
mov
mov
jb
adc
mov
js
roll
mov
add
sbb
pop
dec
test
mov
pusha
mov
jb
jmp
xor
orb
jno
mov
dec
in
cmc
xor
mov
mov
inc
mov
bound
lea
movsl
pop
push
mov
dec
in
mov
adc
repnz
dec
xor
add
inc
inc
repnz
dec
mov
dec
mov
add
mov
outsl
jns
jb
push
jb
mov
nop
mov
cmp
inc
repnz
test
ljmp
add
dec
sub
adc
js
addr16
js
lcall
add
cmpsb
mov
ds
insb
js
adc
adc
cmpl
xor
notb
push
add
pop
mov
mov
js
or
mov
lcall
cli
jge
dec
popa
addr16
mov
mov
pop
pop
jb
insb
jge
dec
cmpsb
add
add
sub
inc
push
inc
sbb
jo
jne
ret
jo
add
adc
inc
mov
dec
loop
scas
cmp
xchg
ret
sti
cli
imul
or
mov
add
push
xor
mov
and
dec
jb
fstl
leave
push
mov
movsl
adc
int3
inc
loopne
add
sbb
mov
mov
sbb
cmp
add
push
mull
jb
cmpsb
or
jl
or
jl
movsb
xor
sbb
das
rorb
adc
in
adc
cmp
test
dec
shlb
in
mov
and
jo
mov
add
inc
or
pop
adc
les
or
in
or
fldt
mov
add
icebp
fmull
pop
add
inc
fucom
rol
insl
leave
and
popa
sbb
hlt
test
dec
push
rcrb
icebp
pusha
mov
test
pop
mov
nop
outsb
and
jno
jnp
add
je
and
or
add
loop
xchg
sbb
sbb
rep
fcoms
popa
js
scas
pop
mov
mov
inc
push
jl
iret
je
cmp
jne
fildl
add
inc
dec
add
mov
shrb
int
xchg
adc
mov
insb
sti
adc
lock
push
push
mov
lods
mov
std
std
nop
pop
jmp
adcl
inc
and
loopne
jmp
push
pop
push
sbb
cwtl
push
mov
adc
cli
push
es
pop
ljmp
je
sbb
xchg
sahf
ror
fmuls
clc
rcr
mov
out
sub
mov
cmp
mov
xchg
frstor
and
sub
ficompl
inc
and
sbb
fs
dec
ja
push
pusha
or
adc
sarl
push
jmp
sbb
ja
sub
pop
pop
and
xchg
incl
push
test
outsl
and
movsb
scas
push
pop
dec
jno
cmpsb
and
mov
jb
jo
pop
jecxz
xchg
incb
ret
or
jo
loopne
add
push
xchg
mov
jl
jae
inc
test
jnp
test
outsl
adc
mov
lods
jbe
pop
leave
roll
roll
les
mov
adc
sbb
fs
jo
dec
pop
add
cmpsb
adc
and
test
imul
xor
add
lcall
add
push
mov
ret
ret
or
push
sbb
decl
jb
pop
out
add
xchg
xor
call
das
xchg
test
aas
lods
and
xor
lock
psllw
mov
xchg
push
aaa
clc
and
add
xor
mov
cmp
pop
and
xchg
add
in
push
push
xchg
adc
int
or
nop
out
push
xor
add
add
adc
push
or
call
call
or
pop
or
or
sbb
out
adc
inc
and
call
int
nopl
push
cmp
lahf
pop
invd
addr16
int
loopne
pop
sbb
test
repz
sbb
movsb
push
xor
scas
pop
xor
mov
mov
rdpmc
and
or
mov
dec
mov
out
jle
incl
sbb
or
dec
jae
jmp
call
mov
ret
push
mov
les
or
stc
or
test
sbb
ret
ret
dec
mov
cmpb
push
lods
sbb
jns
add
test
xchg
push
xchg
or
add
test
loopne
or
cmpsl
icebp
lret
fnstenv
sbb
or
clc
xor
mov
adc
addl
add
into
dec
xlat
push
imul
xlat
or
cmp
xor
mov
fadds
movaps
push
dec
sarl
push
bound
mov
mov
aas
iret
rorb
cmp
add
cltd
movsb
xchg
and
xchg
pop
mov
mov
cs
enter
in
pop
pop
add
test
inc
sub
add
xchg
cmp
rorb
dec
movl
and
les
push
dec
lea
out
or
pushf
mov
inc
xchg
aad
add
sub
popf
mov
mov
mov
push
lods
xchg
fsubrs
cmpb
or
mov
clc
and
mov
test
outsb
pop
pop
fnstsw
call
fildl
push
rcll
or
xor
fidivrl
sub
add
clc
mov
inc
inc
fs
sahf
mov
adc
inc
sub
mov
push
gs
add
adc
test
test
mov
outsl
ret
xchg
pop
ja
movsl
orl
or
push
sub
xchg
sub
pop
dec
or
xchg
mov
test
pusha
and
and
inc
aad
adc
push
or
stc
pushf
xchg
adcb
sub
in
sbb
sahf
sbb
cmpb
xorb
inc
jl
adc
je
jg
dec
or
adc
dec
push
or
mov
test
jnp
lret
inc
inc
xor
aam
jae
push
imul
and
pop
das
cmp
sub
into
outsl
dec
int
cmp
push
dec
repnz
popa
lea
ljmp
push
xor
outsb
lds
mov
enter
outsl
bound
dec
or
fs
push
sbb
leave
cmpb
mov
xchg
mov
pop
mov
push
jmp
lds
imull
lock
outsb
adc
xor
cltd
nop
or
into
jmp
or
cmp
and
into
aas
bound
cmpsb
sbb
and
xchg
hlt
je
pop
pop
adc
xchg
sub
and
adc
add
dec
jl
mov
push
add
inc
mov
gs
idivl
jl
sub
mov
je
jnp
inc
xchg
dec
pop
jp
cltd
add
sbb
xor
cs
mov
push
add
mov
add
nop
pop
or
xor
ljmp
in
and
dec
or
in
inc
mov
fbld
cmp
movsb
dec
mov
pop
mov
les
int
mov
or
mov
add
xchg
js
fld
fiaddl
cltd
xchg
push
inc
js
fcomps
sahf
xor
lock
cmp
dec
jle
test
inc
or
xchg
popf
mov
and
push
pop
lea
pop
mov
inc
dec
or
add
jne
add
sub
leave
push
push
add
or
pop
dec
dec
movsl
ja
dec
ljmp
repnz
push
cmc
cs
loope
cmp
cmp
lock
test
daa
daa
dec
leave
sbbl
pusha
or
cmpsl
dec
adcl
lea
js
cmpsl
pusha
fnstsw
popa
adc
pop
sub
push
mov
imul
in
or
push
xor
mov
sbb
loopne
or
rcr
icebp
pop
adc
out
fwait
aam
nop
hlt
add
cmp
in
sbb
es
inc
pusha
andl
cmp
lock
hlt
pop
add
mov
ret
dec
std
pusha
aad
ss
out
popa
dec
cmpb
jne
fwait
insb
addl
gs
add
subb
cmpsl
add
sub
ret
roll
ret
shl
mov
xchg
inc
and
in
int3
mov
cmpsl
jmp
mov
mov
mov
ret
jns
adc
inc
or
fistpll
mov
insb
xor
and
enter
popa
ret
push
mov
insl
mov
cmc
sbb
jo
sbb
lods
gs
nop
fstpl
pop
inc
sbb
shll
out
or
push
push
roll
xor
pop
add
in
lahf
push
jb
fs
xor
jo
mov
push
cmp
and
push
aas
pop
test
jo
sbbl
push
and
add
add
iret
sbbb
and
push
rcrl
inc
mov
stos
xor
and
adc
mov
adc
imul
dec
pop
mov
ret
sub
cmpsb
mov
add
mov
ss
pop
push
pop
enter
dec
adc
mov
outsb
mov
pop
lea
push
cltd
fwait
and
rolb
out
enter
lds
mov
add
insl
dec
call
mov
adc
add
pop
jbe
mov
das
daa
mov
flds
stos
sbb
xor
push
xchg
iret
and
sub
subb
imul
mov
ja
adc
and
lea
leave
and
pop
fs
in
addl
aam
sbb
xchg
sbb
adc
rol
dec
jb
mov
xchg
imul
scas
sbb
lea
add
testl
push
sbb
jl
inc
nop
sub
decl
pushf
pop
mov
add
aaa
or
xchg
and
test
aaa
shrl
out
sbb
xor
js
mov
push
jbe
outsl
stos
lds
xor
stc
push
dec
jl
push
ffreep
inc
imul
jg
jl
adc
pusha
rcll
pop
mov
adc
ja
js
jl
mov
inc
cmp
sarb
rclb
and
inc
dec
outsl
sub
pop
daa
movsb
bound
inc
sub
lods
incb
sti
or
xchg
imul
pop
xor
les
pop
xor
inc
xor
lret
aas
push
mov
js
adc
or
in
enter
and
sbb
inc
sbb
adc
mov
push
or
and
sub
jo
jno
mov
jg
and
mov
inc
dec
pop
lcall
std
sub
inc
add
push
into
mov
loop
mov
mov
pushf
orb
xchg
insb
add
decl
lea
push
insb
mov
mov
scas
xor
hlt
pop
cld
jnp
mov
sbb
sub
push
push
addl
cwtl
and
sti
ss
push
pop
jg
mov
dec
push
in
xor
in
xor
sbb
pop
or
iret
ds
sbb
pop
sbb
push
popa
icebp
and
cmpb
cmpsb
jle
cmpl
pop
jmp
sub
mov
sbb
dec
mov
lar
xchg
ljmp
push
bound
mov
imul
xchg
adc
push
fcmovbe
cmp
lods
and
or
aad
cs
ret
lock
add
popf
inc
into
pop
or
sbb
cmp
test
pop
mov
or
pop
test
loopne
mov
cmp
popa
popa
jns
icebp
mov
xchg
lods
jbe
sbb
jmp
sbb
roll
js
sbb
add
imul
or
ret
sub
or
test
ds
add
add
add
mov
adc
xchg
sub
sbb
cwtl
xchg
shr
sbb
mov
shll
mov
insb
adc
sbb
push
cmp
push
cmp
popa
aaa
xchg
add
push
push
pop
daa
pushf
out
sbb
inc
or
cmpsb
out
es
lret
push
push
fsts
aam
sbb
pop
lds
jne
sbb
or
xchg
nop
in
mov
xor
inc
sub
fbstp
add
push
sahf
ret
and
inc
dec
pusha
push
mov
sub
lcall
arpl
addr16
loopne
leave
push
fwait
lret
pop
shll
cmpb
out
and
and
outsl
imul
and
or
cwtl
hlt
sbb
jle
mov
add
mov
xor
ret
inc
cld
into
cmp
daa
adc
sbbb
es
rol
sub
insb
mov
sub
fs
and
adc
dec
sbb
nop
push
mov
adc
aam
aas
and
push
and
inc
leave
daa
inc
sbb
xor
sarl
mov
pop
or
xor
ret
xor
push
arpl
mov
jg
add
add
push
and
pop
ret
dec
inc
enter
loope
adc
jnp
xlat
lea
insl
out
pop
dec
stc
outsl
sub
je
pop
adc
adc
clc
ds
pusha
ss
clc
lds
or
in
or
bound
ror
arpl
rcl
jae
xor
push
dec
push
pop
mov
pop
out
or
icebp
test
shr
mov
add
xchg
xor
inc
add
and
adc
pop
int
push
jmp
adcb
mov
dec
add
sbb
inc
sub
sbb
faddl
push
push
add
and
cltd
in
add
or
mov
xchg
ret
adc
call
pop
and
mov
rclb
sbbb
notl
and
jmp
dec
imul
inc
imul
loopne
lods
and
inc
xchg
subb
and
mov
nop
mov
in
shrl
jecxz
xchg
into
sub
mov
push
adc
dec
test
shlb
cmpsb
lahf
and
sub
inc
inc
sbb
add
nop
dec
push
lods
mov
pop
sbb
jmp
jo
adc
add
or
dec
add
jl
adc
add
cmp
sub
mov
sbb
call
mov
iret
and
imul
sub
jmp
sahf
xlat
pop
jl
xchg
add
adc
je
cmpsl
cs
dec
aam
sahf
add
es
dec
cwtl
dec
mov
adc
adc
aam
dec
repz
sub
loopne
mov
inc
dec
pusha
add
mov
inc
scas
enter
sub
js
les
push
pop
and
sub
add
fisttpll
sub
pop
inc
mov
lret
insb
loopne
mov
sub
addl
icebp
adc
or
add
imul
xchg
push
mov
fmull
nop
add
jg
dec
movsb
shl
sub
lret
add
jl
cmp
cmp
dec
or
lods
or
xchg
js
mov
or
add
xchg
mov
mov
jmp
xor
sub
lret
test
add
xchg
cmp
sub
rolb
gs
and
ret
es
fs
adc
jnp
adc
sub
mov
mov
adc
rclb
enter
push
or
add
mov
jne
pop
add
sub
sti
sub
call
jp
or
imull
ret
adc
or
inc
sbb
mov
int
pop
or
xor
add
lods
test
les
test
aaa
dec
inc
xor
push
jbe
lahf
sbb
test
test
insb
jge
or
sub
push
sbb
mov
add
aas
sub
sbb
test
sub
fiaddl
mov
test
mov
xor
sbb
add
mov
repnz
and
and
or
xchg
ja
xchg
dec
xchg
xchg
add
adcb
rolb
pusha
mov
cmpsl
sub
test
mov
or
lock
pop
out
inc
mov
or
xor
adc
fistl
dec
bound
xor
and
add
mov
push
inc
jle
dec
push
fildll
cmp
jne
cmpb
pusha
mov
fwait
dec
mov
mov
xlat
loop
in
jmp
loopne
pop
push
call
int
jnp
ret
and
or
flds
adc
pop
out
push
push
jmp
xor
insb
loope
in
and
or
adc
and
jge
xor
sbb
add
or
xchg
sub
mov
mov
jmp
je
adc
push
mov
loopne
xor
repnz
cmpsl
cwtl
sbb
mov
dec
sahf
cld
lret
add
es
or
jb
pop
adc
dec
mov
cwtl
scas
inc
fcoml
lock
cmp
clc
rclb
adc
sub
sub
pop
adc
xor
mov
iret
and
cmp
adc
xor
inc
xor
sahf
add
adc
cmp
nop
dec
je
cmpsl
adcl
scas
scas
inc
add
adc
pop
add
sub
fidivs
daa
and
clc
add
inc
clc
cmpb
je
daa
hlt
add
xchg
pop
cs
or
add
sub
aaa
and
xor
aaa
jge
jae
jmp
movsb
dec
cltd
lock
inc
dec
mov
movsl
pop
xor
and
add
mov
xor
and
push
ret
jne
inc
or
push
add
mov
das
xchg
push
loopne
in
push
mov
xchg
pop
sub
imul
adc
ret
in
add
dec
test
aas
in
push
lahf
dec
push
in
pusha
jg
push
pop
and
pushf
push
xlat
push
lods
push
ret
sbb
xor
lods
pop
es
and
mov
loope
icebp
sub
jmp
std
hlt
and
jno
or
nop
insl
adc
add
inc
call
dec
sub
dec
sbb
pop
and
adc
add
pop
pop
movsb
mov
adc
push
sub
xor
iret
cmp
cmpb
mov
adc
insb
insb
mov
gs
inc
xchg
movsl
adc
xor
stos
and
dec
outsl
inc
rorb
fstp
dec
adc
push
xor
out
mov
andb
dec
xor
push
adc
hlt
fmuls
movb
xchg
sbb
mov
sub
cmpsb
mov
dec
frstor
lock
sti
loopne
inc
adc
fwait
add
mov
jae
add
mov
sub
jne
inc
adc
mov
pushf
imul
iret
sub
mov
lret
jae
add
sbb
xorl
mov
movsl
mov
push
inc
loopne
mov
push
js
cwtl
aaa
pop
xor
call
punpcklbw
nop
jmp
repz
dec
xlat
push
fs
add
fcoml
push
push
xor
dec
pop
leave
rcll
shr
xlat
cmpb
mov
xchg
cmp
sub
and
dec
push
imul
and
es
imulb
mov
sub
and
sbb
sbb
or
push
leave
sbbl
push
sbb
xor
and
xchg
pop
xor
xor
cmp
pop
enter
add
adc
movsb
push
xor
or
outsb
arpl
nop
testb
pop
ljmp
and
scas
lret
ds
inc
xor
pop
inc
inc
nop
jnp
testb
ss
sbbb
or
lret
mov
sbb
sti
lds
test
aas
jno
pop
or
sub
clc
nop
mov
dec
ss
and
mov
insb
pop
cld
fs
adc
fistl
push
jbe
imul
or
jecxz
add
adc
aaa
aaa
sbb
outsb
xchg
sub
sub
iret
or
aaa
sbb
cmp
decl
shll
outsl
xor
es
sub
outsb
les
mov
mov
sub
mov
and
sub
dec
ds
mov
sub
xor
xchg
lret
ds
sbb
push
dec
xor
aaa
sub
sub
jne
rcr
xorl
nop
incb
sub
shll
jl
je
montmul
cmpsb
ret
pop
xor
rclb
or
fidivrl
incl
fmuls
dec
jne
ja
push
pop
out
sbb
js
rolb
pop
adc
rorb
lret
adc
test
and
add
cld
inc
add
adc
in
push
adc
jno
clc
ds
les
jl
jmp
lret
sub
js
in
ret
add
int3
js
sbb
dec
cmc
push
aas
add
mov
adc
mov
scas
dec
shlb
cmp
cmc
add
dec
add
inc
loopne
sub
dec
andb
cmpsl
cmc
xchg
iret
fwait
in
enter
cmp
add
cmp
xor
inc
sub
mov
push
lock
inc
adc
inc
push
pop
arpl
sub
pop
xor
addb
or
fildll
adc
adc
inc
push
adc
shl
stos
mov
adc
std
sbb
fs
mul
or
rcrl
push
incl
or
jb
mov
jg
mov
xorb
mov
fwait
inc
movsb
dec
and
mov
rclb
inc
sbb
adc
add
nop
loop
adc
das
push
push
dec
and
push
add
adc
inc
cmp
jmp
movsb
in
lret
mov
pop
lret
add
push
inc
pusha
mov
and
adc
aad
cmp
xor
pop
push
pop
adc
dec
jp
push
inc
std
mov
jecxz
decl
js
dec
sub
xchg
cwtl
mov
cmpsl
lock
mov
and
add
xchg
cmp
test
std
adc
lea
pop
jno
add
add
inc
adc
clc
pop
pop
xor
push
cmp
or
cmpsb
jbe
das
decb
adc
cmp
xchg
loopne
jo
xor
or
or
sar
sub
shr
and
push
add
xor
cld
dec
in
pop
fiaddl
flds
and
pop
sub
loop
adc
call
enter
shll
dec
adc
and
add
pop
add
les
adc
and
xchg
cmpsl
xchg
mov
cmp
int
cmp
in
mov
cwtl
push
pushf
lar
sub
dec
popf
nop
incb
rclb
mov
or
jmp
adc
subb
bound
jg
addr16
imul
jo
jb
je
jbe
js
jp
inc
rclb
fdivrs
js
mov
pop
mov
xchg
pop
push
sbb
sbb
test
out
sub
add
cmpl
mov
mov
adc
mov
lock
cmp
jns
dec
lcall
pop
add
inc
aas
sbb
hlt
pop
inc
sbb
mov
pop
inc
push
nop
push
mov
shrb
subl
testb
dec
rorl
xchg
scas
loopne
mov
xor
add
mov
inc
push
adc
ds
call
pop
inc
testb
dec
mov
push
inc
nop
aam
xor
sbb
addr16
mov
xor
shlb
andb
mov
ja
loope
leave
adc
popa
sub
gs
xchg
pop
inc
pop
out
inc
xor
mov
add
andps
scas
push
push
adc
sbb
lods
fistpll
or
aam
int
cmpsl
cltd
les
inc
mov
rorb
and
movsl
push
adc
dec
arpl
and
inc
cs
sub
outsb
in
faddl
sbb
mov
pop
dec
cmp
or
dec
push
mov
aam
push
inc
aam
pop
test
rolb
lret
insb
lret
or
xchg
jge
push
lea
push
sub
inc
xor
mov
push
les
sbb
dec
pop
xchg
hlt
pop
add
inc
dec
xor
sbb
sub
add
add
dec
popf
sub
mov
pop
fldl
dec
dec
jmp
or
pop
inc
mov
clc
mov
inc
out
or
nop
movsl
or
mov
and
clc
lods
push
jne
xchg
mov
mov
xlat
dec
add
and
jmp
ret
insl
imul
aam
inc
adc
popa
fs
fwait
jg
push
push
push
jns
pop
mov
or
add
nop
mov
jne
stos
or
mov
insl
outsl
jns
test
xor
inc
jbe
xlat
push
test
push
or
adc
js
cmovb
stc
mov
push
inc
sbb
pusha
stos
das
xchg
pop
dec
fidivs
mov
or
pop
or
mov
mov
push
cmpsl
and
mov
in
addr16
dec
and
in
xchg
pop
inc
fsubs
push
lock
inc
js
jle
into
pop
pop
inc
add
jle
mov
sbb
push
inc
lock
sti
jbe
sub
outsb
and
shrb
or
cmp
ljmp
lock
popf
test
inc
dec
loopne
or
movsl
pop
scas
das
lods
out
test
and
and
xchg
mov
add
lret
sbb
test
ret
add
fbstp
mov
xchg
dec
test
add
xor
iret
sub
orl
inc
jecxz
shrl
sti
inc
leave
clc
adc
xorl
jb
or
lret
inc
lods
xor
adc
inc
add
jmp
push
add
jbe
add
cmp
enter
jnp
inc
mov
mov
fimull
pxor
aas
mov
cmp
and
add
insl
in
and
dec
push
test
shlb
cmpsl
daa
mov
cltd
jl,pn
pop
push
jo
push
test
push
fmuls
pusha
jbe
test
cmpsb
movsl
push
cltd
pop
and
adcb
xor
mov
arpl
mov
sbb
sub
jo
pop
pop
xor
and
push
xor
inc
pop
incl
jae
je
jno
inc
insl
test
or
mov
jmp
fwait
rclb
pusha
test
lea
add
outsb
push
and
cmpsb
mov
push
pop
jmp
loopne
dec
arpl
or
sbb
jns
add
nop
push
xor
and
push
adc
jle
jbe
iret
push
pop
and
push
xor
adc
push
sub
push
dec
or
sub
cmp
and
xor
popa
or
mov
or
push
and
gs
jb
mov
inc
sbbb
mov
or
xchg
mov
mov
icebp
dec
push
push
jb
insl
cmpsb
testb
decl
push
nop
daa
lret
or
pop
test
adc
nop
mov
mov
sarl
jle
js
mov
bound
push
pop
cmp
in
add
sbb
stos
xchg
adc
inc
ss
icebp
andb
imul
sbb
mov
dec
and
push
flds
sub
jecxz
cs
loop
pop
dec
fsubrl
dec
clc
dec
jl
cmp
inc
dec
bound
xchg
xchg
jl
pop
clc
pop
xchg
pop
mov
pop
cwtl
push
or
or
inc
lcall
test
xor
pop
pusha
dec
cs
je
mov
and
data16
sbbb
pop
xor
add
add
rcrl
pop
or
out
push
push
cmovno
xor
ret
pop
insb
or
dec
xchg
jbe
pusha
mov
add
adc
or
xor
or
mov
adc
fidivs
lret
push
in
push
add
push
mov
push
jnp
push
lsl
adc
addl
outsb
and
jb
lret
je
sbb
and
addb
pop
repnz
push
adc
add
test
bound
inc
dec
push
punpckldq
cmp
xchg
xchg
cld
add
insl
mov
push
pop
xor
stos
sub
std
sub
loop
icebp
or
fisttpll
loopne
shrb
cmp
xor
push
lea
xor
ror
cwtl
daa
add
mov
xchg
adc
push
push
xlat
xchg
mov
sub
or
xor
les
loope
sub
xchg
jmp
test
cmpsl
or
inc
and
test
mov
dec
push
push
add
in
mov
fs
adc
inc
and
daa
add
test
dec
inc
xchg
inc
xchg
and
sub
sub
repnz
xor
or
cmp
mov
lret
mov
cmp
inc
inc
push
xchg
aam
jecxz
mov
test
add
inc
cltd
mov
mov
and
sbb
mov
xor
inc
div
sbb
sbbb
add
out
xchg
xor
push
nop
add
push
or
stc
movsb
xchg
jge
mov
adc
hlt
push
aam
jo
sbb
ljmp
xor
call
fs
push
add
mov
xor
sbb
lds
inc
xchg
dec
sahf
in
in
sub
inc
sahf
fcoml
pop
add
jno
loopne
rorb
add
ret
shlb
pop
es
dec
arpl
push
lea
fwait
xor
xchg
aam
rclb
sarb
int3
int3
xor
mov
mov
mov
fld
push
add
push
push
cmp
dec
data16
add
test
lock
test
mov
inc
les
mov
pop
repnz
rorb
cltd
in
push
mov
addb
inc
pop
adcl
mov
xchg
pop
test
dec
outsl
bsf
mov
cs
push
test
inc
test
ss
xor
mov
push
xchg
mov
sbb
sub
or
add
pop
testl
lods
dec
mov
mov
aas
lret
xchg
xchg
rcll
pop
dec
xchg
sahf
add
dec
xor
sbb
dec
sahf
add
in
nop
and
aam
mov
jo
jl
dec
repnz
pop
cld
je
add
and
addb
add
add
fcomps
pop
pushl
add
ljmp
aam
and
cmp
hlt
or
xor
dec
dec
aam
lcall
push
inc
ljmp
mov
sbb
adc
sub
sbb
cmp
xor
aaa
push
mov
arpl
add
add
add
dec
sbb
add
mov
ja
and
pop
dec
clc
aas
lret
cmp
pusha
and
inc
mov
and
nop
mov
mov
mov
lahf
int3
push
xchg
jg
pop
pop
lea
jo
mov
pop
pop
rorb
cmp
imul
insl
sbb
pop
adc
cld
jmp
stc
test
dec
or
aas
mov
and
and
lret
add
push
pop
or
nop
dec
mov
cmovns
fs
pop
pop
add
and
sub
xor
ja
push
mov
xchg
mov
or
inc
test
adc
add
mov
adc
inc
pop
dec
enter
loopne
iret
pop
repnz
leave
emms
pop
xor
leave
repz
push
xor
inc
hlt
xor
xor
push
lock
lock
xor
pop
in
jo
xor
xor
pop
call
xor
js
cwtl
in
leave
xor
fs
loopne
leave
xor
insb
fdivrl
enter
inc
sub
fadds
repnz
pop
fsubrl
aam
ficoms
xchg
fwait
jne
xchg
inc
rclb
rolb
fnstenv
rolb
inc
rcrb
jns
push
lret
push
push
fcoml
push
sub
sbb
xchg
lods
das
inc
jecxz
adc
mov
pop
lret
mov
or
inc
fisttps
outsb
adc
scas
shll
mov
nop
jnp
jg
bnd
push
lods
adc
enter
pop
pop
enter
fs
and
inc
pop
push
pop
mov
jl
loop
daa
pop
push
movsb
push
jl
aam
int3
sahf
ja
xchg
jo
ja
pop
lds
add
outsb
jg
aaa
sub
sub
sub
es
aas
adc
jp
popa
das
xor
xor
sub
mov
mov
ljmp
pop
jb
push
pop
lock
lahf
sti
nop
ljmp
movsb
or
ds
fmull
sbb
xchg
inc
jecxz,pt
sarb
fdiv
or
and
push
in
and
orb
pop
pop
popa
adc
fs
addr16
pop
sub
inc
es
fs
insb
push
fs
insb
push
jo
fs
js
in
inc
popa
jo
jo
les
inc
or
and
popa
jl
loopne
popa
sub
dec
das
sti
cmp
dec
push
cmpsb
add
hlt
andl
sub
sbb
add
mov
aaa
inc
fs
mov
mov
fsubs
jno
mov
lock
inc
sahf
aaa
and
iret
cld
les
cmpb
dec
movntps
fprem
mov
sahf
mov
fdivl
test
nopl
scas
jmp
and
sbb
add
or
push
test
imul
ss
sbb
add
or
push
bound
jae
inc
add
jg
ret
and
and
dec
js
add
pusha
sbb
pop
daa
pusha
dec
push
pusha
and
adc
repnz
outsb
pop
pop
pusha
pop
pop
add
daa
and
or
arpl
arpl
arpl
xchg
inc
pop
sbb
sub
inc
scas
sbb
sub
test
mov
in
enter
pop
in
ja
pop
or
dec
pusha
ds
dec
sahf
inc
fisubrl
sub
pop
adcb
scas
sub
fcoms
imul
cltd
xchg
mov
inc
xchg
jns
dec
push
or
pop
les
push
jmp
addl
cltd
push
adc
xchg
push
mov
mov
pop
add
xchg
jbe
fbld
imul
daa
outsb
outsl
sub
mov
add
mov
xchg
ja
imul
adc
xor
gs
test
xchg
add
gs
inc
dec
cmp
sbb
sbb
add
jo
jge
aad
xchg
pandn
pop
loopne
xor
add
enter
enterw
cmp
rolb
inc
push
insl
sub
dec
loop
jmp
insb
xchg
lea
mov
movsb
iret
xchg
mov
mov
fmul
and
and
lock
outsl
addr16
addr16
or
addr16
inc
mov
mov
xchg
addr16
mov
addr16
int3
rcrb
gs
cmp
cltd
in
mov
or
sbb
int3
out
ficompl
aam
lods
iret
and
and
mov
iret
and
in
clc
addr16
int
call
xchg
addr16
and
xor
addr16
addr16
dec
clc
fs
xor
pause
xorb
xor
mov
rorb
fs
in
adc
adc
in
in
sbb
in
in
and
cltd
in
in
sub
int3
xor
xor
repnz
mov
or
xor
repz
repnz
inc
fs
inc
xchg
cmp
cmp
dec
mov
cmp
push
cld
push
jns
dec
ss
pop
inc
loopne
fidivs
cmp
cmp
mov
mov
cmp
jo
shll
out
je
or
sbb
in
cltd
in
jl
cmp
pop
xchg
xchg
addr16
aaa
test
mov
int3
nop
hlt
leave
xor
data16
xchg
and
xor
xor
in
in
mov
in
in
test
lods
les
lock
sbb
dec
repnz
mov
dec
repnz
shlb
and
int
cmp
add
mov
jae
push
test
dec
jae
jae
cmp
jae
push
mov
jae
add
testl
int3
ljmp
aam
fadd
movsb
cmp
movsb
cmp
movsb
cmp
movsb
cmp
xor
movsb
cmp
dec
pop
sbb
xchg
add
or
xor
xor
or
adc
adc
sbb
add
out
fstps
int3
sub
sub
xor
xor
cmp
cmp
inc
jno
inc
lcall
inc
lcall
inc
lcall
inc
lcall
cmp
insb
sbb
sbb
out
jo
jl
rcrb
aad
enter
sbb
mov
rcrb
mov
fstps
rolb
fs
adc
jl
movsb
arpl
mov
mov
dec
lods
aas
and
enter
mov
mov
and
sbb
lea
or
popa
inc
dec
repnz
dec
aas
insb
imul
insb
stos
sub
pop
jle
push
dec
rorb
pop
jae
cltd
cltd
std
arpl
push
or
enter
ja
or
mov
or
mov
add
pop
xor
adc
aas
pop
push
jb
daa
mov
and
aam
cmp
sbb
cltd
jbe
je
data16
push
adcl
gs
aad
sbb
adc
xor
pop
or
sbb
dec
sub
push
shrl
adc
inc
jns
aaa
pop
adc
inc
addr16
xchg
adc
pop
mov
cli
xor
dec
es
jb
add
jae
in
sbb
dec
dec
adc
fisttpl
imul
pop
xchg
sub
cltd
or
decl
gs
xchg
addr16
xchg
mov
xor
or
fmull
xchg
cs
clc
jne
jbe
pop
insl
in
xchg
das
jae
cmp
aaa
arpl
and
inc
scas
lahf
xor
mov
add
xlat
mov
cs
aas
pop
or
pop
test
jbe
shll
cmpsb
or
mov
out
inc
push
pop
add
inc
xchg
pop
dec
ds
mov
cmp
xchg
fidivl
je
stc
insb
addr16
fistl
lcall
sbbl
or
and
lock
outsw
subl
inc
ljmp
xor
pop
push
push
dec
push
inc
popf
push
add
push
sti
sbb
push
inc
or
dec
push
pop
and
imul
jnp
js
filds
bound
and
inc
adc
mov
loopne
inc
dec
insl
cmp
es
push
aaa
push
push
fsubrl
push
and
cmp
aas
addr16
pop
and
mov
push
inc
aas
addr16
and
or
dec
fldenv
push
adc
cmpb
pop
outsb
or
xlat
lock
outsl
pop
jg
aas
push
mov
je
add
inc
gs
adc
jb
push
mov
dec
pop
arpl
inc
or
mov
lret
adc
push
notl
dec
inc
shrl
ja
jae
fs
add
add
sbb
montmul
cmpsb
sarl
bound
outsb
jns
aas
mov
adc
js
das
lods
or
addr16
das
xor
jno
inc
inc
mov
inc
inc
int3
shrl
xchg
push
and
xchg
xchg
sub
jmp
std
and
dec
push
dec
push
dec
inc
push
movsb
push
bound
push
imul
testb
adc
sub
cmc
sbb
fdivs
sbb
jno
or
adc
xor
nop
rcl
aam
sbbl
lods
and
fisttpl
sbb
mov
xor
jl
fcoms
test
ja
sub
movsl
movsl
xor
add
xor
pusha
add
cwtl
mull
jbe
outsl
leave
inc
push
dec
push
rolb
repnz
test
push
or
xchg
xchg
test
inc
cmpsl
into
add
and
mov
jno
enter
es
adc
pop
xor
ret
jp
aaa
pushf
xchg
jns
dec
push
enter
in
fs
pop
fs
jp
outsl
dec
pop
xor
push
and
pop
xor
pop
xor
pop
xor
and
int3
or
pop
xor
pop
jle
in
jnp
pop
jnp
add
mov
or
cmpl
movsl
dec
jnp
or
xor
adc
lcall
inc
dec
outsb
ja
mov
scas
int
fwait
sub
inc
loopne
test
mov
mov
adc
xchg
xchg
xorb
nop
in
pop
les
adc
jecxz
dec
cmpsb
mov
push
outsl
xchg
mov
jae
adc
outsl
mov
inc
xor
sub
fcomps
adc
nop
jl
push
adc
jge
and
icebp
sub
inc
stos
inc
jmp
adc
sbb
cs
ret
ret
jo
dec
add
push
sbb
push
pushf
sub
scas
fisttpll
pop
or
add
mov
call
push
daa
pop
stos
lods
out
push
jge
pop
xor
sub
push
cmp
bound
adc
cmpsb
mov
xor
movsl
mov
xor
mov
invd
or
or
stos
mov
cwtl
fiaddl
pop
and
mov
or
in
or
cmp
adc
sub
lahf
or
leave
sbb
inc
add
adc
mov
rcrl
push
and
dec
movsb
in
ret
adc
pop
and
cmpsl
mov
push
ljmp
push
inc
add
push
fisttpll
loope
ljmp
das
dec
add
or
or
adc
test
sahf
jg
push
div
add
inc
jg
cmp
xchg
mov
aad
push
not
mov
push
mov
xchg
insb
aas
add
inc
shl
pop
lcall
sbb
aaa
nop
adc
test
mov
and
and
adc
daa
inc
mov
daa
xchg
call
out
mov
push
cmp
lcall
mov
pop
cmpsl
fistl
sub
rcll
sbb
sar
xorb
jo
shrl
sbb
repz
dec
dec
roll
mov
test
gs
jl
mov
pop
flds
test
or
movsb
cwtl
or
nop
aaa
add
cmpl
js
icebp
push
and
pop
lea
out
inc
push
call
sub
test
cwtl
adc
rorl
pop
cmp
sbb
sbb
pop
stos
bound
push
or
sbb
add
or
ljmp
or
mov
add
inc
adc
inc
xchg
pop
or
enter
rclb
inc
les
add
cmc
add
mov
mov
and
sub
insl
and
mov
inc
add
push
jl
jg
les
sub
mov
push
repnz
ret
enter
and
fmuls
adc
xor
ret
aam
mov
push
test
lods
mov
mov
or
sbb
jb
or
ror
je
inc
xor
mov
push
int3
xchg
iret
add
xchg
subl
in
push
aas
push
movsb
int
pop
fwait
lds
mov
aad
adc
dec
cmpsb
decl
nop
pop
shlb
lret
jo
add
xchg
jo
mov
rcl
cmpsl
inc
mov
mov
and
andl
jg
push
inc
aam
pop
mov
jns
das
cmpsb
fimull
pop
and
jae
movsb
and
mov
add
cmp
add
pushf
mov
adc
fcoms
mov
add
add
movsl
dec
add
xchg
push
and
cmp
stos
lcall
je
push
cmpsl
inc
cld
pop
add
jecxz
add
lock
fwait
mov
pop
pusha
cmpsl
fstpt
and
and
cld
loope
mov
rcrb
nop
adc
mov
test
cmpsl
inc
aam
xchg
add
inc
jge
and
nop
cmpsl
jl
in
xor
sbb
shlb
in
push
mov
push
rol
popf
test
dec
mov
inc
scas
aad
cmp
or
repz
pop
test
jno
fcoml
fs
push
ret
push
mov
scas
adcl
cmpsl
jns
enter
add
pusha
nop
adcl
mov
mov
and
pop
sub
dec
rcrl
dec
mov
mov
outsb
cmpsl
jo
subb
imul
ret
test
inc
enter
jno
fiaddl
dec
mov
jno
or
push
ja
lods
cmp
dec
clc
jle
addr16
pushf
jo
sbb
cmc
imul
rcrl
imul
shlb
fldpi
insl
cld
inc
mov
dec
add
inc
movsb
or
add
jne
jl
decb
mov
inc
dec
sbb
and
sub
xor
or
adc
or
inc
adc
sbb
and
and
nop
sbb
jo
sbb
add
insb
inc
outsb
xor
and
lcall
mov
pop
xchg
clc
sbb
sbb
add
push
add
or
inc
push
sbb
adc
push
mov
mov
adc
bound
nop
sbb
or
pop
dec
add
sti
inc
sub
int3
mov
lcall
xchg
adc
adc
add
or
add
and
add
aam
cmp
mov
pop
mov
aad
xchg
add
inc
clc
sahf
adc
inc
push
in
sbbl
cmp
aaa
mov
cwtl
mov
sub
aas
push
inc
outsb
inc
movsl
mov
push
aaa
aas
sbbb
pop
mov
test
inc
jl
push
scas
add
imul
cmp
jg
push
addl
adc
cltd
add
sub
pop
inc
add
insb
iret
add
sbb
out
cld
movb
dec
sub
cmpsb
mov
ret
fists
adc
js
cmpsb
test
inc
or
xor
pop
push
incl
bound
add
add
lods
xchg
aad
xor
mov
mov
and
push
push
add
xor
cs
je
cmp
sub
subl
sub
test
cmp
cmp
je
fmuls
jbe
xor
das
xor
cmp
sbb
test
pop
mov
dec
pop
inc
xor
js
and
addb
adc
xor
mov
add
lret
cmpb
rol
mov
subb
and
pop
dec
js
mov
mov
and
fwait
test
inc
subb
ret
lods
nop
or
in
jl
nop
inc
cs
jl
jl
nop
or
jl
lcall
jl
dec
xchg
inc
jl
loopne
inc
xor
xchg
lea
orps
jp
pop
and
xchg
xchg
sbb
enter
pushf
add
and
cwtl
xor
xchg
sti
sub
xchg
loopne
mov
xor
outsl
dec
es
out
popf
mov
ds
lods
es
fs
push
mov
cmp
adc
push
sbb
add
mov
mov
mov
filds
adc
fs
dec
sub
xchg
popf
mov
xchg
mov
xlat
ret
and
and
fsubrs
mov
shll
jno
cmpsb
pop
xchg
push
test
jg
jne
addr16
cld
jno
stos
inc
add
xchg
hlt
jl
and
pop
xor
or
mov
xchg
ret
imul
mov
roll
clc
mov
sub
lock
mov
fists
clc
push
aam
mov
sub
cltd
int3
add
lret
jns
mov
xchg
arpl
ss
setp
lock
cmp
inc
daa
subl
adc
hlt
adc
xchg
sahf
mov
nop
xchg
loopne
and
cmp
sub
and
push
dec
fsubrs
xlat
mov
mov
mov
aas
rcrl
shrl
or
pop
xacquire
sbb
cld
xor
push
sbb
nop
insl
push
sti
lret
rclb
popf
inc
sub
mov
nop
nop
sbbl
or
xor
or
xlat
fsubl
pop
mov
jge
push
and
call
mov
and
dec
cmp
xor
push
push
inc
cmp
dec
dec
inc
sbb
dec
out
negl
rcll
dec
dec
push
or
testl
push
mov
int
inc
xlat
mov
inc
js
dec
push
push
rorb
adc
mov
and
inc
movsb
mov
and
sub
xor
in
cmpsl
test
or
and
add
xor
cltd
xchg
push
xchg
push
sbb
scas
and
inc
push
shl
cld
out
movsb
mov
push
pop
je
jecxz
xchg
test
inc
push
repnz
outsl
dec
lcall
fnsave
jmp
enter
in
insb
inc
mov
push
dec
pop
sar
mov
shl
xlat
lods
pop
test
in
push
aad
in
leave
mov
push
jmp
sbb
xchg
pop
sbb
daa
cmp
cld
ss
mov
dec
scas
rcrl
cmp
cmp
xor
xlat
pusha
add
and
sti
test
mov
inc
add
loopne
push
mov
pop
push
pop
fstps
das
ret
lcall
inc
es
divb
add
inc
leave
aam
jb
push
adc
fisubrl
insl
xchg
adc
rcll
sbb
sub
jg
sbb
or
out
fs
sub
ljmp
rorb
pop
pop
mov
pop
inc
and
jg
sbb
inc
imul
xorb
jmp
jbe
sbb
jns
xor
add
add
and
sub
es
or
popf
sub
out
scas
pop
nop
inc
and
cmp
or
clc
sahf
es
cmp
xchg
pushf
repnz
dec
es
pop
inc
mov
pop
enter
fs
pop
dec
push
mov
sub
pop
dec
mull
pop
mov
dec
fiadds
dec
call
inc
es
or
in
je
rclb
cmp
or
jne
or
lahf
adc
or
shlb
mov
inc
jl
call
cmp
pop
cmp
xlat
mov
xchg
push
inc
adc
mov
add
inc
cmp
lods
mov
lret
pop
mov
cmp
push
lret
and
out
cmp
sub
shlb
or
cmp
adc
push
push
add
call
pop
jmp
and
adc
adc
add
lahf
or
out
push
js
int
push
add
fimull
inc
push
dec
or
dec
adc
and
pop
and
or
adc
add
push
mov
push
adc
cmpl
test
orl
or
dec
add
or
pop
nop
adc
or
sub
enter
sub
cmc
nop
add
adc
adc
jg
push
or
push
xchg
daa
nop
setns
addr16
fs
daa
loopne
push
mov
movsl
enter
xor
in
arpl
cs
lret
sahf
mov
or
pop
scas
xchg
inc
dec
pop
and
mov
mov
and
or
inc
add
mov
adc
inc
jno
testl
mul
mov
rol
sub
arpl
cmp
add
cwtl
imul
pop
or
into
pop
push
dec
pop
test
fistps
leave
dec
mov
xor
stos
sbb
subb
mov
iret
lods
call
push
scas
push
mov
push
adcb
or
arpl
mov
jle
sub
push
leave
mov
movsb
xchg
movsb
int3
cld
or
and
inc
das
dec
mul
cmp
mov
mov
divl
add
scas
push
pop
xlat
adc
decb
inc
mov
xor
cmp
adc
mov
sbb
test
inc
pop
push
movsl
sub
dec
or
and
ds
jmp
inc
movsl
out
movsb
dec
and
sub
push
lock
jmp
dec
cmp
xor
cmpsb
ljmp
clc
adc
xchg
cwtl
and
setb
mov
in
fwait
andb
xor
and
add
sbb
das
inc
fisubrs
jno
psubb
push
lods
hlt
mov
push
fstpt
push
xor
adc
stos
iret
pop
dec
jl
adc
xchg
sub
add
cld
push
psubb
sub
imul
test
outsb
lods
xor
ja
inc
imul
xchg
jns
and
jg
test
fs
inc
sub
xor
scas
test
sbb
xchg
hlt
push
dec
or
or
push
add
bound
daa
push
daa
sbb
add
add
pusha
popl
lret
mov
push
sbb
inc
je
mov
mov
pop
add
push
dec
shrl
inc
jle
dec
popa
xorb
mov
sbb
jmp
sbb
call
movsb
lea
sbb
ret
pop
xchg
cmpsl
and
push
fadds
outsl
les
dec
xchg
inc
loopne
xchg
test
mov
or
dec
add
les
adc
das
lods
push
mov
mov
xchg
push
test
test
shl
sub
jle
adc
aam
adc
sti
sti
rolb
fdivp
cmp
stos
jns
sbb
or
adc
push
cmp
fidivrl
xchg
test
cmp
hlt
hlt
mov
sub
adc
or
sbb
int
pusha
add
mov
aam
rol
inc
adc
and
lock
pushl
push
adc
and
add
cmpsl
or
mov
or
ss
xor
adc
sti
adc
cmp
or
popf
push
xor
ds
sbb
add
clc
cmp
and
mov
adc
jg
pop
adc
enter
sbb
sub
decb
stos
loope
push
cwtl
test
add
mov
orl
data16
pop
jae
pop
ret
mov
dec
pop
lods
push
dec
xor
adc
add
xor
imul
cmp
cmp
jne
ss
and
mov
xchg
inc
adc
rorb
xchg
xchg
cmp
cmp
leave
clc
xor
xor
inc
hlt
lods
pop
dec
add
push
sbb
scas
mov
inc
or
inc
xchg
pop
sbb
or
push
js
aas
nop
dec
pop
push
dec
push
inc
push
inc
dec
xor
cmpsl
add
testl
sub
mov
dec
adc
scas
adc
adc
or
inc
inc
out
jge
sbb
or
rclb
repnz
mov
imul
mov
mov
jne
xchg
push
and
lods
sbb
gs
jg
pop
jl
cmp
dec
ret
dec
sub
cmp
mov
out
sbb
test
jmp
and
pop
insb
addr16
sbb
push
and
mov
push
dec
push
leave
roll
xchg
jo
mov
stc
jns
cmp
xchg
fadd
daa
cmp
sub
add
punpckhwd
and
dec
aam
pop
pop
sub
sarl
sbb
enter
pushl
lods
fsubs
dec
or
scas
pop
mov
mov
int3
mov
push
test
pop
adc
push
lock
jg
test
rorb
cmp
pop
cmp
cmp
adc
pop
test
into
mov
or
adc
xchg
sub
testl
push
xor
mov
jle
lock
or
fwait
insl
call
xor
add
lcall
mov
addl
fbstp
cmp
xchg
icebp
rorb
lock
push
popa
or
cmp
clc
mov
aaa
loope
add
jne
mov
in
push
into
std
jle
cmp
mov
in
cmp
hlt
cmpb
lock
test
movsl
popa
add
add
insl
popa
js
ja
insl
mov
pop
jg
dec
push
nop
in
add
fdivrl
pop
and
cmpsl
rorb
and
mov
cmpb
lods
sub
nop
push
pusha
xchg
xor
pop
mov
add
cmp
shlb
mov
cmp
das
xor
pop
movb
fiadds
add
jl
push
cmp
mov
js
push
mov
or
pop
and
std
sbb
jge
xchg
fldt
faddp
pop
data16
jg
fistl
or
mov
xchg
xchg
lcall
add
inc
pop
sub
lcall
pop
inc
dec
dec
dec
dec
jae
dec
xor
add
push
fsubrs
push
xchg
xchg
repnz
mov
mov
mov
adc
lods
and
inc
mov
mov
inc
add
inc
pop
mov
or
inc
cmp
mov
cmp
sub
shlb
mov
pushf
out
xor
andl
mov
aaa
js
pusha
xchg
cmc
cwtl
push
cmp
mov
inc
mov
lock
test
call
pop
jne
rol
ss
pusha
sbb
push
in
xor
push
add
xchg
push
stos
lock
inc
push
push
dec
out
mov
das
inc
inc
push
inc
xchg
pop
ss
pop
mov
pop
sub
dec
jg
push
mov
lock
jg
fmull
add
and
scas
movsl
and
lcall
mov
les
xor
data16
test
aam
xchg
mov
lock
pop
push
les
pop
mov
and
push
push
ret
les
movl
lds
sahf
shrb
adc
push
jp
add
loopne
mov
push
lea
mov
in
std
add
in
and
outsl
jne
cltd
push
movsb
loop
adc
lea
fwait
addb
enter
sbb
pop
pop
fwait
sbb
sbb
add
sbb
mov
or
xor
fiaddl
or
xchg
daa
cmc
cmp
xor
push
mov
lahf
popa
pop
pop
ret
nop
pop
movsl
mov
lret
inc
sahf
icebp
jnp
push
adc
or
mov
fidivrs
sub
flds
bound
add
test
mov
mov
insb
jne
cmp
scas
mov
xchg
mov
mov
mov
inc
xchg
hlt
sbb
das
sub
dec
cmp
add
and
and
cli
call
push
rcrb
dec
std
fisubrs
mov
sbb
add
outsl
sbbl
movsb
and
mov
in
jl
dec
inc
mov
jp
pop
mov
or
xadd
stos
insb
imul
inc
push
pop
xor
push
xor
adc
mov
outsl
inc
add
lret
jge
pop
push
fisubrl
sub
adc
jns
pop
add
dec
test
inc
jge
mov
and
dec
and
mov
lods
lahf
cmp
rcrb
cmp
dec
es
jg
stos
inc
aam
aam
fdivs
testl
mov
test
cltd
les
enter
mov
in
loope
insb
sbb
aad
inc
mov
and
add
js
xchg
popa
inc
cs
dec
test
cmp
data16
sbb
adc
and
sbb
shll
xlat
mov
or
jns
adc
sbb
das
pop
add
shrb
mov
jne
xor
and
inc
negl
pop
pop
nop
je
aas
add
mov
and
push
test
adc
mov
mov
dec
jmp
xlat
add
mov
and
movsl
pushl
sbb
sbb
and
imul
cmc
insb
lcall
push
mov
pusha
add
add
pmuludq
mov
mov
add
push
adc
xchg
xchg
mov
xlat
and
mov
sarb
push
mov
or
mov
sbb
sub
pop
ljmp
sub
mov
sub
jo
sarb
pop
mov
jmp
out
jmp
and
lcall
mov
or
loope
push
mov
out
inc
movsb
rorb
xlat
sub
nop
ret
rorb
cmp
lock
jno
inc
xchg
lret
mov
mov
dec
enter
loope
mov
inc
push
cltd
mov
add
xor
aaa
push
mov
xor
insl
nop
test
xor
cmp
scas
sub
adc
pop
dec
pop
cmpl
adc
jb
push
sbb
push
or
out
inc
cmpsl
adc
mov
js
jecxz
fisttpl
arpl
push
jecxz
or
pop
fsubl
daa
imul
adc
shrb
add
ret
mov
arpl
xchg
pop
rclb
cmp
pop
inc
imul
jo
pop
ds
jo
aad
addr16
rcrl
or
shll
sub
lahf
shrb
lock
mov
push
dec
out
cmp
test
cmp
xchg
lock
rclb
dec
xchg
mov
mov
adc
pusha
icebp
sahf
pushf
mov
stos
inc
xor
popf
js
fimull
out
int
jmp
push
push
sub
add
push
or
mov
pop
ret
jns
mov
mov
jo
hlt
jmp
mov
adc
xor
add
pushf
pop
ret
insl
je
je
push
inc
dec
cmpsl
add
nop
mov
movsl
js
cmp
test
mov
sbb
mov
xor
xor
dec
testl
add
jnp
sbb
or
jmp
mov
push
mov
or
dec
gs
outsl
insl
imul
les
jnp
inc
mov
dec
outsb
jg
or
adc
dec
gs
lret
fdivl
jne
adc
and
arpl
icebp
insl
jae
adc
test
push
jae
mov
pop
nop
lahf
inc
aaa
mov
mov
xchg
sub
dec
pushf
add
jge
xor
xor
loopne
xor
mov
sbb
add
pop
addb
and
test
lods
xor
pushf
mov
or
lods
ds
nop
adc
lds
enter
pop
int
xor
imul
rcll
jecxz
dec
ja
or
sub
xorl
and
mov
push
sub
or
mov
cmp
sti
or
adc
inc
mov
movsl
dec
sbb
aas
pop
jmp
and
in
pop
les
in
xlat
and
lahf
orb
js
pop
pop
mov
and
lds
jbe
adc
pop
in
pop
sub
dec
pop
push
or
add
jnp
or
pop
inc
jl
movsb
leave
out
adc
mov
inc
jg
aam
sbb
lods
sub
incb
sub
inc
insl
dec
js
cs
jl
xchg
adc
cmpsb
daa
and
in
xchg
addb
not
pop
sbb
add
and
mov
addb
and
adc
lock
pop
mov
xchg
out
test
xchg
sahf
fiadds
jnp
or
pusha
push
out
pop
sub
pop
lds
dec
mov
dec
sbb
leave
sbb
and
xchg
pop
sbb
push
xor
and
push
sbbb
inc
fwait
add
enter
dec
sub
dec
adc
aam
push
movsb
fldl
lock
xchg
cmp
push
or
xchg
or
jae
loopne
inc
pop
add
add
pop
push
insl
and
jno
repnz
or
dec
xor
prefetcht2
pushf
jne
cmpsl
dec
mov
and
lret
add
fistpl
mov
xchg
xor
rorb
movsl
mov
adcb
adc
and
xor
and
movsb
or
or
lret
push
pusha
adc
adc
negl
mov
push
repz
bound
push
mov
inc
mov
push
pop
and
push
mov
nop
or
mov
push
pusha
push
dec
popf
jecxz
jg
call
push
adc
push
push
push
inc
int
int
and
insl
cmp
adc
pusha
in
nop
jle
xchg
lods
mov
lods
adc
pop
lock
inc
push
add
mov
xlat
ds
ja
xor
pop
xor
data16
xor
push
and
cmp
xor
test
push
or
aas
test
data16
xchg
add
pop
sub
mov
xor
or
lock
xchg
pop
ds
loopne
movb
or
mov
jp
test
or
popa
iret
leave
fsubp
dec
cs
in
sbb
fwait
arpl
dec
pop
inc
or
add
and
add
xchg
xchg
test
pushf
xchg
mov
lcall
pop
add
lds
sbb
mov
scas
add
mov
xor
jne
popl
rolb
push
stc
jne
popa
stos
xor
ds
es
mov
xor
add
mov
sub
xorl
movsb
adc
push
es
shrl
adc
hlt
loop
cwtl
lods
mov
add
sbb
cmp
andl
je
cwtl
leave
ret
adc
xchg
pop
lods
rorl
cmpsb
andl
imul
pusha
cmpb
lods
adc
or
fs
test
or
mov
mov
es
test
sbb
lock
ficomps
leave
xchg
int
adc
sbb
sub
adc
sbb
jno
push
sbb
pop
or
push
les
int3
mov
jno
jbe
ss
adc
xchg
push
push
gs
push
sbb
mov
xor
pop
lcall
jle
pop
nop
xor
pusha
ss
es
xor
out
fsubs
pop
shrl
dec
mov
popa
xor
xor
add
popf
push
jne
pusha
inc
jo
nopl
push
xchg
adc
daa
aas
mov
mov
xchg
xchg
xor
push
mov
push
add
xchg
and
inc
add
mov
mov
rolb
sub
je
sbb
cmp
or
icebp
rcl
addl
cmpsl
pop
inc
push
add
addl
call
cld
dec
sbb
ja
nop
cwtl
adc
pop
cmp
pushf
or
adc
lret
push
ljmp
mov
insl
jmp
leave
sub
add
pusha
pop
out
mov
adc
das
sbb
testl
and
adc
data16
or
enter
es
lcall
adc
mov
aad
sbb
dec
inc
adc
adc
xor
sub
jns
jb
ljmp
xor
js
scas
add
pusha
xor
push
js
adc
sub
jo
cmp
imul
jg
inc
in
adc
cmp
inc
jmp
sub
dec
add
aad
inc
pop
mov
pop
je
arpl
movsb
push
or
or
push
ret
js
iret
push
test
int3
movsb
push
push
pop
fnstenv
jo
xor
xchg
and
push
imul
shr
push
cltd
adc
push
add
push
je
and
mov
mov
pop
push
sub
xchg
push
cmp
mov
xor
mov
push
mov
fs
sub
and
imul
adc
jecxz
pusha
enter
adc
and
nop
inc
xchg
push
insl
sbb
sahf
fsubrs
inc
add
ljmp
or
or
sbb
int
mov
pusha
xor
pusha
insb
pop
dec
rol
and
mov
hlt
mov
nop
dec
hlt
fists
int3
clc
inc
pushl
mov
nop
arpl
add
lea
and
jne
call
push
inc
add
push
push
cmc
xchg
jo
xor
push
mov
push
dec
test
and
test
je
push
sub
cmp
movb
xor
nop
xchg
inc
sub
iret
shl
mov
stc
jg
sbb
movups
and
and
test
push
int3
mov
sbb
xchg
gs
stc
inc
and
jmp
fnstcw
addr16
ljmp
je
cmpl
aam
andl
imul
sarb
jae
jo
sub
and
push
and
ljmp
cwtl
notl
lret
cmp
pop
imul
push
dec
mov
in
sbb
or
aaa
jns
push
ss
dec
pop
xor
jle
enter
in
dec
fisttpll
shrl
clc
mov
shrl
push
das
push
hlt
or
mov
inc
and
add
insl
pop
mov
aaa
sub
scas
nop
and
or
sarl
mov
and
cmovl
mov
adcl
and
fcoms
sub
mov
ja
jbe
into
and
add
and
movb
cmp
sahf
imul
jo
xor
jb
daa
js
xchg
sbb
xor
dec
inc
and
fidivrl
jnp
lea
int3
movups
addr16
inc
add
rorl
lea
lods
add
pop
mov
js
and
fsubr
insl
and
fwait
lcall
and
mov
in
fstp
dec
pop
sbbl
xchg
jo
aas
jo
dec
in
sub
das
cld
sbb
sbb
dec
or
mov
ret
popa
adc
xor
push
push
enter
loopne
rorl
repnz
push
push
add
fstp
adc
inc
add
fnsave
mov
js
sub
sbb
loop
sbb
js
xchg
dec
dec
sub
push
sbb
icebp
je
sub
mov
lock
xor
loopne
jmp
shlb
jbe
mov
outsl
sub
or
jp
dec
or
ljmp
adc
dec
mov
cmp
add
or
je
andb
fwait
rcrb
imul
push
sub
adc
push
nop
adc
aaa
arpl
xor
scas
inc
push
mov
mov
insl
xchg
scas
popa
iret
nop
repz
arpl
adc
incl
insb
adc
xor
lds
xchg
push
inc
lock
ss
inc
push
movsl
or
sbb
sbb
inc
je
ja
cs
shl
dec
lods
mov
jge
and
fcmovnu
push
ljmp
add
cmp
jle
mov
andb
jmp
aam
push
mov
cld
sbb
xchg
sub
xchg
insl
xchg
mov
mov
ret
mov
xchg
pusha
std
test
or
fidivl
mov
ret
dec
push
cmpsb
adc
fs
mov
dec
test
jnp
pushf
pusha
jl
insl
cltd
cld
cmpsb
sbb
lods
push
ljmp
loop
sub
inc
mov
das
sub
popa
loope
aas
mov
sub
pop
mov
ret
sbb
xchg
mov
ds
pop
pop
adcl
rclb
mov
pusha
xor
or
loopne
ss
and
mov
dec
sbb
mov
lock
enter
inc
clc
sub
push
xor
clc
in
mov
push
cmp
das
ret
fsubl
call
adcb
mov
jmp
or
daa
cmp
add
add
in
cmp
and
pop
push
pop
test
adc
push
sub
cltd
push
outsb
and
in
mov
sbb
and
nop
arpl
or
and
adcl
in
or
xorl
lods
and
pusha
add
push
addr16
inc
dec
add
ret
and
pop
in
pusha
call
pop
inc
pop
loop
lds
lea
push
and
and
mov
mov
lret
sbb
push
mov
xor
jbe
pop
ret
ret
xchg
test
xor
shr
insl
cmpsb
insl
cmp
and
es
repz
push
or
ja
mov
scas
fs
loopne
std
in
int3
and
adc
cltd
push
jne
insl
sbb
push
sbb
sub
cmp
cmp
je
fdivrl
jbe
mov
sbb
xchg
push
data16
cmp
cmp
test
insb
je
test
loope
mov
dec
xor
xor
nop
inc
fcomps
inc
pop
xchg
cltd
and
push
push
in
aas
push
push
shlb
ret
arpl
mov
out
xchg
push
inc
dec
nop
out
inc
or
subl
cltd
aam
sbb
xchg
arpl
in
pop
mov
cmp
mov
call
or
ret
mov
gs
cmp
sti
dec
dec
or
lds
inc
addr16
pop
pop
pop
cmp
sub
sti
sub
mov
pop
push
ret
aad
nop
inc
jl
js
xchg
mov
inc
pop
shlb
call
arpl
and
movsb
lret
mov
pop
push
adc
mov
pop
and
mov
sbb
shll
inc
push
mov
ss
je
stos
adc
sarl
sbb
es
pop
andl
adc
jne,pn
insb
or
std
adc
dec
mov
dec
test
sahf
adc
out
out
add
ret
mov
pop
fists
inc
inc
test
mov
dec
add
inc
pop
lahf
pop
ret
arpl
pop
fdivs
fistps
pop
push
nop
and
xor
or
xor
sub
ret
mov
ret
ret
mov
or
cmp
adc
or
and
adc
incl
sub
dec
imul
dec
out
pop
jmp
dec
dec
repz
test
and
jmp
pushl
jmp
and
mov
ja
or
test
lock
sbb
mov
rolb
sbb
ljmp
add
nop
cltd
sbb
imul
mov
dec
sbb
sahf
test
add
xchg
fiadds
xor
and
sbb
in
out
out
mov
loop
or
jne
cmp
enter
inc
fiadds
test
je
dec
xchg
in
nop
in
addr16
sbb
call
call
push
add
lock
jne
imul
mov
dec
jno
cmp
dec
inc
inc
push
sub
inc
pop
dec
add
xor
stos
mov
ret
cmp
rorb
adc
cmp
lods
push
ret
xor
lock
fdivrp
jmp
push
mov
xchg
lea
out
add
mov
fwait
push
xchg
fs
inc
or
jne
adc
mov
dec
into
push
add
add
into
jbe
dec
add
pop
jmp
adcl
adc
das
decl
jne
add
mov
cwtl
inc
cmp
xchg
out
jle
test
lea
adc
aam
adc
test
or
dec
sub
sub
ror
push
in
addb
rorb
cmpsb
mov
cwtl
in
aaa
push
push
dec
rcrl
shr
adc
icebp
adc
xor
mov
adc
pop
or
mov
xchg
dec
pushl
cmp
add
mov
adc
cli
cmp
hlt
inc
xchg
dec
mov
lock
sub
xchg
add
call
mov
jnp,pn
jmp
sbb
clc
in
xor
or
adc
and
loopne
ret
mov
sbb
sbb
cld
fdivl
xacquire
mov
aaa
fadd
cmp
push
lock
inc
or
adc
pop
lcall
out
test
scas
adcl
ret
jg
addb
roll
scas
inc
inc
push
cmp
jno
push
cwtl
push
jne
aaa
pop
adc
dec
push
push
push
inc
dec
pop
repnz
xchg
inc
inc
and
mov
idivb
inc
popa
dec
inc
inc
daa
xchg
adc
adc
daa
mov
inc
xor
leave
adc
pop
sub
lock
cs
cmpsl
cmp
and
sti
sbb
bound
add
mov
mov
js
call
lock
sbb
xlat
adc
sub
sub
adc
bnd
rol
cmp
fisttps
movl
aam
js
je
cmp
or
pop
adc
jp
aaa
and
add
dec
jnp
sub
mov
add
mov
bound
call
cld
push
test
mov
int
int
dec
cmp
repnz
nop
int3
clc
aaa
mov
pop
mov
and
and
and
and
and
adc
add
adc
loope
cwtl
or
adc
jle
inc
push
loope
or
push
cli
arpl
loope
push
push
sbb
inc
in
clc
sub
sub
add
jecxz
adc
sub
ret
mov
cmp
sub
inc
out
sbb
pop
fldl
out
sbb
or
es
outsb
add
sbb
push
out
and
mov
pop
jmp
rcrl
pop
jle
leave
jne
jns
sub
iret
popf
outsb
dec
cwtl
popa
push
sbb
imul
cwtl
push
aaa
cmpsb
repnz
sbb
and
xlat
movsl
adc
pop
dec
or
sbb
sbb
je
sbb
insl
jo
adc
mov
bound
mov
subl
pop
xchg
xchg
sub
insb
iret
out
je
repnz
mov
add
cmp
push
mov
xchg
pushf
push
push
mov
sbb
sarl
adc
mov
fsubs
sbb
adcl
aaa
sub
inc
push
mov
adc
test
push
pop
cmc
out
pusha
mov
sub
and
pop
pop
add
sbb
or
testb
xchg
jp
lret
cwtl
or
pushf
or
out
jl
sub
ljmp
sbb
adc
lahf
shll
jno
push
xchg
inc
add
fs
fmulp
je
negl
test
and
nop
push
mov
or
cmp
mov
decl
sub
jne
int
subl
xchg
add
mov
and
popl
push
ret
dec
sbb
mov
adc
inc
jge
sub
mov
maskmovq
jp
mov
push
dec
movb
cs
sub
jb
jne
and
pop
xchg
hlt
mov
outsb
push
pop
add
sbb
push
cwtl
leave
sbb
mov
push
add
push
lods
test
ret
push
mov
sbb
enter
in
dec
in
add
xchg
add
sub
jg
cmpsl
push
sbb
pusha
and
adc
lods
push
mov
fcomps
dec
inc
and
fcoms
xorb
aas
add
fcmovnb
int
mov
push
and
mov
enter
jmp
adc
pop
movsl
pusha
sub
mov
xchg
mov
add
shlb
shlb
jns
mov
xlat
sub
dec
rorl
pop
cli
adc
inc
dec
imul
sbb
and
and
pop
negl
insl
es
ret
in
xor
adc
jmp
push
ret
cli
pop
ja
loope
sbb
les
mov
jmp
cmp
dec
sbb
and
push
sub
and
pusha
mov
adc
ret
cmpsl
sub
mov
jne
shll
loope
and
push
xchg
incl
push
xchg
dec
pop
pop
outsl
mov
and
popa
lea
sub
sub
or
das
add
enter
jne
lock
popf
nop
jmp
mov
or
orb
das
movsl
aad
xchg
xlat
pop
cld
jno
jne
cmpl
add
push
cmp
mov
aas
cld
js
jb
and
enter
test
jb
int3
cwtl
dec
inc
push
daa
cmpsl
mov
popa
xchg
jl
dec
clc
sbb
jecxz
test
pushf
data16
addr16
std
sub
mov
enter
outsl
movsb
in
ret
daa
movsb
or
in
fs
emms
js
enter
jp
enter
jl
jle
orl
pusha
popa
orl
bound
gs
enter
push
imul
insb
insl
outsb
and
push
orl
push
push
push
push
or
enter
pop
xor
and
and
and
inc
orl
inc
inc
inc
inc
or
enter
dec
xor
and
and
and
xor
xor
ss
cmp
enter
cmp
enter
cmp
and
and
and
es
sub
enter
sub
enter
sub
cs
or
das
adc
adc
add
jmp
adc
add
scas
outsb
imul
dec
aaa
jbe
push
or
jle
mov
or
rolb
sub
rclb
sub
adc
pop
add
sti
jae
or
jb
sub
andb
push
adc
ja
test
or
lcall
call
in
add
jns
or
dec
jb
popa
dec
dec
or
pop
insl
add
adc
add
push
das
mov
and
or
jg
add
inc
push
xor
les
sub
xor
mov
outsb
or
addr16
inc
xorb
push
ret
dec
cmp
sbb
loopne
dec
cmp
inc
insl
fs
adc
scas
or
xor
jb
add
shrb
das
insb
inc
add
and
inc
push
add
loope
or
push
and
cmp
or
es
adc
inc
mov
push
lds
add
or
stos
add
inc
add
nop
sbb
sub
mov
mov
mov
inc
aad
adcb
add
adc
jb
add
add
loopne
xchg
sbb
add
xor
add
dec
xchg
sbb
adcb
addb
shlb
rolb
adc
aas
mov
add
jg
push
add
or
adc
pusha
adc
and
add
mov
xchg
cmp
stos
lods
jne
sarl
push
and
jmp
mov
sub
mov
mov
jmp
or
aam
xchg
mov
push
rclb
mov
mov
dec
jae
ds
xlat
pushf
nop
rcl
test
dec
imul
js
call
movsl
mov
push
mov
fsubrs
lcall
push
and
fwait
imul
rolb
int
sub
aad
push
fdivl
not
pop
mov
mov
aam
outsb
and
sbb
push
push
jb
shl
push
out
cmpsb
insl
not
fsubrl
fs
sahf
imul
iret
cmp
lcall
outsb
add
lods
mov
mov
fisubl
insl
cmp
jle
xchg
cmp
enter
int
push
mov
movsb
sahf
imul
push
mov
cltd
cmpsb
xor
je
pop
push
mov
aam
push
push
aam
inc
les
mov
sub
data16
cs
out
lods
jl
or
mov
lods
insl
mov
aad
push
fsubs
fmuls
push
int3
push
adc
test
aam
lcall
fsubrl
pushf
roll
pusha
push
test
sarb
outsl
push
pusha
add
dec
pop
mov
sahf
xor
or
xchg
mov
scas
pusha
xor
mov
push
mov
popa
lcall
push
shlb
imul
cmpsb
mov
xchg
test
rcpps
push
pushf
fnstenv
ret
ja
shll
enter
push
adc
cmp
pop
sbb
outsb
push
or
outsl
lahf
jecxz
aad
or
pop
aas
adc
dec
outsl
or
sub
push
mov
add
adc
or
or
inc
cmpsb
out
jne
aaa
sub
out
add
push
mov
mov
lock
and
push
dec
push
and
pop
mov
or
out
dec
add
fidivrs
xchg
or
rorb
hlt
inc
push
sub
dec
pop
imull
dec
mov
hlt
cmp
mov
adc
ret
loope
or
or
xlat
fistps
add
gs
repnz
mov
mov
or
fisttpl
xchg
mov
xchg
enter
xor
stc
pop
xchg
adc
fidivrl
daa
or
sub
jp
clc
jne
mov
popa
js
mov
xor
gs
and
and
ja
adc
inc
mov
es
or
enter
loopne
pushf
or
cltd
clc
dec
sbb
mov
push
addr16
xchg
pop
lds
cmpsl
add
sbb
add
dec
fildll
add
pop
push
mov
aam
xchg
and
sbb
pop
mov
lcall
or
ret
sbb
and
cmc
imul
and
fstl
push
dec
call
adc
xlat
dec
dec
inc
pop
jl
jmp
das
aam
test
jne
push
fidivrl
sub
and
jb
jp
inc
jb
dec
and
dec
jg
or
mov
lock
and
stos
ss
or
fs
repnz
or
xor
cmp
jne
cmp
push
pushf
or
and
das
or
or
adc
call
mov
jle
lcall
leave
insl
add
adc
xor
jecxz
in
add
popa
movsb
movl
jmp
sub
mov
jbe
adc
push
nop
scas
xor
and
inc
in
nop
or
or
test
or
or
addr16
mov
aam
adc
add
mov
dec
fsubl
mov
mov
mov
sub
pop
je
jno
and
push
push
sub
std
mov
aas
push
adc
mov
test
jmp
dec
xor
enter
pop
ret
push
or
xchg
add
sahf
outsb
push
mov
adc
xor
adc
and
out
xorb
mov
test
cmpsl
mov
pop
fstpl
xchg
cwtl
fcomi
fs
movb
pop
imul
outsb
and
mov
and
jno
pop
add
push
insb
jae,pn
outsb
pop
push
and
push
mov
popf
jg
or
xchg
das
es
ds
je
addr16
or
jae
dec
inc
dec
sub
inc
lock
mov
aaa
xor
jno
arpl
out
push
xchg
int3
dec
and
cs
push
dec
dec
and
mov
cmp
xor
add
ss
int
jecxz
xor
cmp
call
xor
cmp
xor
and
sub
outsl
xchg
imul
mov
lea
mov
mov
adc
or
insb
pop
mov
aas
mov
sbb
aam
mov
pop
inc
ret
add
mov
movsb
data16
and
test
rcll
adc
mov
scas
mov
cmp
cmp
mov
xor
mov
dec
cs
sub
nop
sub
nop
rcl
shlb
hlt
jo
out
xchg
in
sbb
mov
lock
mov
hlt
pop
pop
and
push
jge
out
mov
lcall
das
adc
add
clc
nop
out
inc
push
sbb
unpcklps
push
pop
sbb
sbb
sbb
sbb
nop
inc
push
sbb
push
sbb
add
inc
push
sbb
add
push
pop
or
sbb
or
or
nop
inc
push
or
pushf
sbb
std
icebp
repnz
repz
cmc
testb
and
clc
stc
xor
and
and
and
loop
or
enter
out
mov
and
je
jbe
jmp
jle
ljmp
push
in
out
out
nop
inc
push
sbb
rcl
inc
push
sbb
aad
sbb
xlat
fcomp
sbb
fcmovu
fsubl
push
fstp
filds
and
sbb
push
add
sub
daa
sbb
insl
push
mov
in
mov
add
xor
xor
push
fbld
xor
stos
add
push
fistpll
adc
sbbb
xorl
sbb
push
fadds
push
mov
nop
cmp
mov
inc
sbb
lcall
xor
xor
xchg
es
lock
in
leave
ret
xlat
scas
cmp
leave
or
dec
push
shrb
orl
shrb
add
insl
iret
sbb
sub
sbb
add
push
insb
ret
and
je
add
aad
xor
ja
sub
cmp
aaa
ss
cmp
xor
xor
test
inc
or
push
scas
adc
sub
or
xchg
or
sbb
enter
xchg
pop
sbb
enter
in
imul
sub
scas
arpl
pop
sbb
add
pop
sbb
leave
and
push
xchg
fdiv
movsl
aaa
pop
xor
cmpsl
and
pop
and
pop
sbb
sbb
shlb
xor
and
aam
repnz
mov
jo
nop
pop
leave
and
add
nop
cmp
rolb
jg
or
adc
xor
cmp
pusha
xor
out
leave
and
fsubs
cmp
and
mov
sbb
fcoml
mov
outsl
inc
nop
sub
nop
loopne
loopne
nop
add
jge
test
cmp
sub
nop
call
push
inc
in
pop
sub
imul
mov
dec
mov
leave
outsl
cmp
mov
std
js
xor
xor
mov
jl
outsl
xor
test
aas
or
inc
pop
and
push
or
mov
jle
add
mov
mov
sarb
push
sub
cwtl
dec
imul
sar
mov
xchg
dec
rorb
adc
mov
cs
mov
hlt
xlat
enter
lods
in
cs
in
mov
dec
lahf
pop
repnz
inc
out
sarb
mov
and
mull
jo
dec
push
in
and
dec
jl
fnstsw
cltd
add
nop
push
mov
jae
fs
adc
or
xchg
lds
lock
cmp
stos
adc
dec
test
and
cmpl
jg
outsb
and
cmp
xor
adc
xor
add
xor
cmpb
les
stc
push
xor
and
je
add
insl
sbbb
fidivrl
dec
and
sbb
in
cmpsl
pusha
mov
sub
scas
add
or
sub
push
jo
inc
or
outsl
in
cltd
and
xor
fcompl
lods
adc
add
pop
cs
insl
daa
xor
mov
inc
add
or
les
dec
test
cmp
lcall
or
je
jo
jb
jnp
or
mov
push
ja
sbb
testl
jp
or
jbe
test
add
push
push
inc
and
mov
sub
data16
insb
jmp
push
data16
lea
testl
add
xchg
decb
jmp
movsl
jne
pop
sbb
lahf
arpl
add
adc
pshufw
loope
sbb
jb
inc
add
inc
inc
adc
add
or
repz
push
push
nop
push
and
sub
adc
rolb
mov
push
bswap
stos
adc
push
int3
ret
cmp
ja
xchg
es
adc
sbb
int
sbb
dec
push
inc
pop
sub
rorb
dec
icebp
inc
in
je
mov
hlt
mov
fdivrl
xchg
cmpb
xchg
xchg
sahf
xor
fstpl
add
es
dec
orl
mov
jg
mov
mov
adc
ja
dec
ja
sub
jb
mov
lcall
add
push
adc
mov
pop
bound
sub
fs
scas
cmp
pop
pusha
in
bound
fs
and
in
jo
pop
je
js
xor
pop
sub
pop
inc
xchg
cmpb
gs
pop
inc
xchg
adc
jno
add
sub
clc
daa
xor
loop
nop
outsb
out
mov
lds
mov
pop
push
jae
fdivs
ds
inc
xor
out
dec
fnstcw
fdivs
and
mov
aas
rcr
sar
push
call
rorl
cwtl
xlat
lcall
rol
fcomps
dec
rcrl
test
clc
cmpsb
mov
sub
xor
call
mov
mov
inc
rcl
shl
pusha
lcall
js
mov
movsl
pop
inc
rclb
and
lock
mov
iret
out
pop
lcall
sbb
push
mov
dec
aam
fisubl
push
mov
sub
data16
push
movsb
fldcw
push
jl
call
xor
pop
mov
inc
out
idivb
js,pt
or
idivb
lods
scas
rorb
fsubrl
push
out
sahf
mov
incb
mov
fisttpl
shll
push
fnstenv
cmpsb
imul
sub
lods
cltd
out
ds
adc
idivb
insl
mov
push
xchg
aam
push
les
data16
call
jne
cs
mov
jl
mov
xor
pop
jo
cs
loop,pt
adc
movsl
or
jbe
sub
mov
data16
push
push
sub
pusha
shl
scas
xor
data16
and
jns
xlat
das
xor
xor
addr16
fcoms
cmp
pop
das
mov
test
and
xor
ret
or
pop
sub
loope
cmp
ja
xor
fwait
hlt
stc
das
mov
push
jne
in
arpl
cmpsl
xor
or
test
xchg
leave
xor
jne
hlt
test
and
and
nop
pop
das
push
xchg
out
xor
mov
in
jb
ret
or
inc
adc
cmpsb
or
outsl
sub
mov
and
outsl
jbe
pop
push
xor
inc
loop
rorl
outsl
ss
push
or
pop
pop
lea
add
inc
adc
aam
out
sub
sub
les
repnz
xchg
xor
and
mov
inc
push
stos
ss
jbe
pop
xchg
daa
xchg
push
jmp
lods
testl
and
push
sahf
cmp
test
arpl
fcom
sarb
xor
adc
stc
xor
or
add
and
xchg
jo
add
jge
enter
and
push
fstpl
aas
test
addb
mov
push
add
push
lahf
idivl
xchg
and
cmp
push
repnz
pop
enter
cltd
negb
or
dec
push
add
or
and
sbb
sbb
aas
out
movsl
clc
add
adc
push
mov
or
pop
dec
sbb
xor
add
cmp
xor
mov
xor
sbb
xchg
daa
pop
xor
add
lods
push
inc
or
cmp
dec
inc
stos
xor
or
push
les
scas
pop
xchg
push
xchg
sbb
or
add
enter
push
movsb
adcl
je
aas
xchg
fildll
mov
and
and
xor
cmpsb
addb
shll
jns
adc
cld
aaa
test
inc
xchg
inc
ret
push
jo
mov
xchg
hlt
in
mov
push
mov
nop
rolb
sbb
add
or
or
lods
dec
popa
cmp
mov
fimull
test
or
xchg
cmp
sub
jmp
bound
add
and
sbb
push
rcll
mov
clc
xor
lock
imul
test
cmp
push
test
movsl
scas
dec
in
xor
jno
mov
push
outsb
jg
jl
inc
pop
xor
xor
and
dec
ss
adc
mov
cmp
xor
dec
adc
add
movb
movsl
add
adc
jmp
and
scas
xor
pop
dec
jnp
incb
or
add
and
decl
jns
subb
push
and
pop
and
mov
jns
fwait
sbb
add
imulb
cmc
xchg
cmp
mov
and
adc
jae
lock
scas
ja
mov
mov
sbb
cmpsb
inc
xor
clc
flds
div
cmp
popa
lock
pop
out
add
sbb
and
jb
cmp
and
out
cmp
data16
je
jbe
dec
imul
insl
jo
in
cmp
in
in
hlt
inc
add
in
in
push
jb
pop
adc
sub
loop
jecxz
in
loopne
dec
sti
pusha
iret
jmp
cmp
and
xchg
and
mov
push
cmp
and
push
pop
mov
adc
dec
and
sahf
daa
dec
xor
test
adc
or
fs
push
push
subb
lcall
push
adc
fwait
add
testl
xchg
pop
dec
ds
or
fadds
inc
sub
add
inc
ja
and
add
xor
outsl
adc
call
mov
pusha
enter
aaa
or
and
fwait
add
cs
inc
and
or
sbb
dec
jnp
mov
pop
ss
mov
mov
mov
leave
repnz
hlt
hlt
rcrb
into
and
aam
in
push
fisubs
push
sti
push
aaa
or
stc
or
in
outsb
adc
xchg
addb
push
or
mov
mov
jae
lds
jns
fsubl
jecxz
or
add
enter
mov
inc
dec
add
testl
dec
add
cmp
add
dec
fadds
test
aam
lcall
add
xor
aam
push
add
movsl
dec
cmp
enter
xor
sub
out
pop
sbb
es
dec
shlb
test
jl
inc
sbb
cmpl
or
cmp
jne
das
mov
sub
cmp
jl
sbb
mov
pop
mov
add
inc
dec
mov
add
xor
cmpsb
lcall
cmpsb
lcall
mov
and
nop
pop
inc
or
lea
mov
inc
mov
sub
xchg
jo
xchg
ret
call
pushf
pop
inc
mov
insl
lods
sbb
inc
outsb
adc
xor
adc
push
das
imul
inc
adcb
sbb
aad
push
push
lcall
imul
mov
sub
rorb
mov
in
mov
int3
in
mov
pop
stos
rolb
addb
ljmp
pusha
xchg
and
aam
xchg
sub
inc
jle
jns
sbb
repnz
and
aam
mov
mov
sub
push
das
xor
in
add
call
loope
add
jecxz
pop
inc
lcall
clc
shrl
or
subb
or
adc
loope
and
outsl
repnz
daa
or
lret
adc
and
mov
mov
jmp
push
jno
neg
addb
lret
or
xor
test
outsl
pop
out
hlt
push
push
mov
xchg
adc
xchg
inc
mov
sbb
inc
push
xchg
and
fadds
mov
sbb
jbe
jns
ret
loop
fnstsw
add
rolb
ds
pop
add
add
lahf
je
xchg
cmc
sbb
gs
ficompl
adc
dec
flds
jle
pop
fdivrs
orb
es
xor
xchg
push
lcall
scas
rclb
adc
jmp
or
stos
inc
aaa
xchg
sbb
push
or
adc
push
inc
rcrl
sbb
or
and
les
add
inc
cmc
and
imul
ret
int3
sub
add
mov
leave
add
jns
dec
adc
mov
mov
shrl
cmp
orl
enter
in
dec
leave
hlt
xor
push
jb
push
xor
sub
and
jb
pop
cmp
sub
fs
ret
scas
push
push
push
dec
das
jbe
or
push
xorl
push
jne
fsubrl
dec
sub
sbb
or
inc
or
sbb
or
fidivrs
dec
or
sahf
add
or
cmpsb
cmc
inc
or
dec
fildl
jb
out
dec
jmp
dec
shlb
jae
mov
dec
lret
andl
orl
jb
leave
lock
or
adc
jl
mov
push
dec
cmp
jle
and
adcb
xchg
aad
sub
iret
add
dec
ljmp
daa
cmp
adc
cmp
insl
pop
enter
sarb
and
loopne
dec
push
mov
xlat
xchg
adc
sbb
dec
imul
xchg
sbb
adc
pusha
dec
incl
add
jno
ja
leave
sub
fadds
sbb
push
cmpsl
lock
lods
adc
loopne
daa
out
xor
inc
jno
ret
ss
push
pop
ss
icebp
addb
dec
or
leave
dec
les
dec
adc
loop
xchg
dec
bound
loop
add
pop
push
xchg
pusha
addb
sbb
xchg
and
test
pop
outsl
jb
and
or
es
push
sub
and
dec
subb
add
hlt
push
ljmp
xor
sbb
add
add
scas
cmpsb
nop
mov
outsb
mov
xor
mov
test
mov
adc
subb
pop
push
inc
daa
mov
lcall
pop
fidivl
mov
adc
es
stos
add
mov
inc
call
repnz
cmp
push
jne
push
les
mov
adc
jbe
add
ret
nop
sbbl
mov
cmp
push
ljmp
and
xor
out
add
push
mov
push
loopne
push
dec
push
inc
inc
insl
push
jbe
xchg
lock
sbbb
loopne
aas
outsl
push
clc
push
or
push
sbb
out
outsl
push
js
pushf
or
pop
pop
pop
rcrl
test
inc
aam
inc
sahf
sub
push
arpl
rolb
or
push
jo
in
outsl
push
test
pop
pusha
and
shll
or
and
mov
and
adc
push
and
xchg
bound
adc
inc
pop
and
or
mov
push
or
adc
xor
movsb
dec
push
pop
dec
jge
jno
adc
insl
xchg
lods
fldenv
dec
fcomps
adc
adc
insl
das
xchg
sbb
adc
lahf
lea
or
mov
xchg
pop
in
inc
push
sbb
lock
rcrb
mov
xchg
out
jae
push
adc
add
add
cmp
push
mov
xorl
test
addr16
adc
jp
outsb
mov
lds
lahf
jne
dec
adc
push
push
jo
pop
fdivrp
or
cwtl
mov
mov
mov
or
gs
add
add
mov
push
xchg
add
pop
cmp
xor
and
sub
stos
sarb
stc
sub
or
cmp
adc
subl
and
add
incb
sbb
or
inc
push
dec
cli
jl
push
sub
or
inc
inc
dec
ret
cmp
sbb
push
push
mov
cld
jge
or
inc
adc
or
dec
add
sbb
insb
jmp
enter
jbe
movsb
or
xchg
aam
lret
sub
cmp
or
into
jnp
push
and
cmp
adc
sub
and
insl
dec
sub
lock
mov
jge
test
push
cmpsb
fcoms
pop
add
out
imul
or
stc
das
dec
xor
mov
or
test
xchg
sbb
cmp
mov
into
mov
sub
shl
push
or
inc
mov
push
dec
dec
bound
iret
mov
loope
inc
push
dec
out
ds
mov
dec
or
pusha
mov
pop
add
pop
repnz
mov
and
dec
jmp
push
add
cltd
fdivs
add
loopne
pop
mov
dec
nop
stos
and
int3
cs
xchg
rcrb
insl
data16
adc
sarl
sbb
or
add
and
mov
int
dec
inc
xchg
pop
mov
inc
lret
pop
add
or
lcall
imul
ds
fabs
inc
loopne
and
lods
xor
or
sbb
jns
pop
sub
mov
test
xchg
mov
xchg
cltd
or
adc
and
les
arpl
mov
rorl
push
in
imul
mov
or
inc
push
adc
adc
push
inc
adc
sub
jns
or
popa
adc
je
jo
push
cmp
and
js
sbb
cmpsb
jnp
lea
mov
add
or
cmp
ror
add
inc
sbbl
sub
movsb
lea
or
inc
fisttpll
mov
rcrb
inc
and
ffreep
dec
adc
daa
pop
mov
lret
inc
push
pop
push
xor
lea
jb
inc
cmp
or
add
pop
js
adc
ret
sbb
jbe
test
scas
pop
xchg
and
test
pop
nop
add
add
in
mov
inc
dec
xor
sub
sbb
test
inc
cltd
add
adc
dec
jo
inc
shlb
fmuls
push
sub
call
fisttpll
add
pop
xlat
inc
sub
cmp
add
push
add
repz
adc
dec
inc
and
inc
repz
inc
std
adc
ret
mov
xchg
es
mov
sub
in
add
mov
adc
cmpsl
sbb
jo
out
je
cmc
mov
and
sbb
ror
mov
inc
cmp
roll
gs
sub
add
and
mov
or
push
pop
leave
mov
jle
test
push
lds
sbb
popa
leave
imull
pop
pusha
shl
insb
cmc
and
daa
rcrl
adc
or
fs
adcl
mov
aas
and
mov
scas
out
sub
cmp
jb
ja
cmp
popf
sub
fs
inc
sub
or
cmpsb
aas
mov
roll
dec
jo
shlb
rcrl
nop
das
add
push
mov
push
push
push
lds
push
outsl
xor
push
cmpsl
mov
sbb
pop
ret
push
sbb
pop
inc
push
mov
jp
and
pop
inc
rcrl
push
cmp
xor
pop
or
add
pop
stos
adc
add
dec
push
nop
sbb
ss
inc
adc
lods
add
cmovns
inc
shlb
movsb
jo
dec
xchg
pop
xchg
mov
or
mov
add
inc
mov
xor
cmp
inc
or
add
add
mov
lret
mov
push
test
xchg
push
inc
dec
add
fsubrs
jg
int
fdivr
pop
push
in
and
cmpsb
mov
inc
movsb
aaa
leave
adc
int
cltd
sarb
mov
jnp
lea
sub
mov
dec
adc
dec
adc
mov
xor
mov
pusha
sub
mov
xor
dec
jecxz
sub
and
movsb
xor
rorl
push
loopne
cmp
bound
mov
xor
cs
ljmp
or
cmpsb
aas
inc
jp
or
fdivrs
add
or
fs
cmp
cmc
mov
inc
sub
cwtl
push
or
and
sti
or
aas
xchg
ror
ss
mov
push
pop
mov
stc
push
jecxz
push
inc
sbb
cmp
push
pop
mov
or
pop
xchg
mov
xchg
xor
mov
ret
sub
lret
repnz
test
cwtl
int
sbb
inc
repz
xor
add
jg
mov
xor
rclb
adcl
test
xor
bound
adc
mov
rcll
mov
dec
jmp
loopne
pop
add
fiaddl
mov
or
jbe
hlt
adc
push
insb
les
test
popa
daa
mov
js
mov
pusha
loopne
flds
andb
stos
xor
push
jne
pop
repz
movl
or
pop
add
imul
cmp
out
cmc
mov
mov
aam
push
lea
and
int
add
dec
jnp
push
push
adc
imul
dec
out
pop
and
lea
dec
ss
jae
xor
push
cmpsb
pop
sbb
add
movsb
inc
je
scas
adc
or
jmp
pop
out
mov
loope
cmp
ss
dec
addr16
push
inc
testb
call
or
push
cmp
insl
test
fistpll
in
leave
lds
or
stos
inc
adc
stos
jno
in
or
or
pop
jnp
orb
je
push
sub
adc
xor
xor
dec
js
cmpsb
shlb
or
aam
mov
test
jge
add
lret
adc
jno
arpl
pop
inc
sbb
inc
sbb
aaa
fiadds
aam
add
cmpsl
mov
add
ficompl
jbe
test
arpl
inc
push
dec
mov
jmp
pusha
xor
and
and
pop
sub
xchg
push
mov
jnp
pop
sbb
lea
addl
push
inc
dec
push
or
push
push
inc
cmpsl
xchg
mov
inc
adc
les
fcomps
add
pop
jecxz
popa
push
mov
jo
sbb
enter
sub
mov
pop
aad
loop
test
and
jbe
je
in
enter
push
and
sbbl
mov
cmpsb
mull
cmpsl
fsubrs
daa
inc
push
add
in
adc
gs
cmp
dec
cmp
or
pop
out
orl
push
cmp
jg
inc
imul
cmp
inc
lock
mov
add
cmpsl
add
data16
insw
push
orl
aam
filds
cmp
and
ret
xchg
ret
cmp
and
sbb
or
arpl
or
jmp
leave
push
lock
test
push
scas
add
mov
or
xchg
jno
jle
jmp
adc
sahf
pop
pop
sbb
inc
adc
or
lea
add
cmp
popa
inc
adc
fisttpll
adc
push
inc
out
addr16
mov
das
push
xchg
push
adc
ja
mov
movsb
mov
mov
jb
sub
out
jl
sbb
xchg
nop
ja
loop
xor
jge
mov
adc
mov
loop
ret
fmull
mov
jmp
je
xchg
repz
rcll
or
mov
lods
xor
add
push
xchg
and
mov
nop
testb
sbb
pop
fmull
inc
ret
inc
jb
mov
push
test
and
jp
loop
sbb
es
or
sub
aad
test
xor
cmp
push
cmp
and
repz
das
push
inc
inc
adc
jle
in
jmp
filds
mov
and
pusha
sbb
mov
inc
xlat
in
inc
fisubs
insl
xchg
dec
fimull
mov
or
adc
movsl
or
add
outsb
fwait
dec
pop
jno
or
mov
sar
daa
mov
test
sub
inc
cmp
lock
inc
inc
inc
and
dec
push
dec
push
xor
pop
cmp
sar
dec
or
push
mov
lret
push
push
pop
je,pn
cmp
mov
push
adc
sbb
rorl
ret
rcrb
inc
test
mov
jmp
sbb
movsb
jmp
insb
testl
inc
adc
insb
pop
mov
fnstcw
push
xlat
jne
or
out
xor
or
in
pop
dec
outsl
lahf
mov
add
add
add
mov
xchg
nop
sahf
push
adc
invd
xchg
push
xchg
ss
xor
jo
cmp
fimull
push
fdivrs
lret
mov
fsubs
dec
jmp
arpl
xchg
dec
repz
cmp
mov
xor
lret
lea
into
and
daa
orb
cmp
lock
ret
je
mov
ret
inc
mov
adc
movsb
ret
inc
cmpl
iret
js
and
insb
je
pop
ret
sub
inc
fwait
jecxz
cmpl
ret
lock
je
ret
sbb
adcb
loope
add
mov
xor
inc
lahf
cmc
jo
cli
add
hlt
leave
lcall
adc
jbe
scas
jbe
adc
pop
imul
or
push
clc
out
rolb
repnz
mov
pand
add
int
sbb
mov
dec
xlat
mov
xor
adc
push
test
call
xlat
dec
repz
mov
pop
dec
fldl
mov
lock
push
pop
fiaddl
test
adc
sbb
add
insl
roll
add
sub
nop
and
or
sbb
inc
icebp
mov
sti
xor
mov
sub
or
lret
add
inc
mov
mov
push
fstpt
pushl
dec
pusha
mov
and
xor
sbb
add
sub
aaa
cmp
jo
add
ret
fimull
addr16
and
mov
add
lahf
mov
pop
push
mov
mov
jnp
and
add
sar
dec
dec
add
add
mov
sub
cmp
push
xchg
adc
pop
or
arpl
mov
pop
popa
and
inc
outsb
ds
insl
or
hlt
sbb
jg
es
inc
dec
jne
sbb
dec
js
inc
in
cmp
pop
or
jo
push
push
nop
xor
pop
xchg
add
mov
mov
out
mov
inc
adc
lret
idivl
pop
pop
inc
dec
cmp
cmpl
mov
insl
xor
lods
mov
pop
call
adc
shlb
add
ja
subl
jnp
cmp
stos
incl
cmpsl
mov
dec
pop
push
mov
mov
adc
mov
pop
mov
and
adc
and
pop
addr16
and
and
leave
mov
pop
lods
mov
cmp
std
push
dec
adc
mov
xlat
sbb
dec
dec
cltd
dec
loopne
mov
in
sbb
push
outsl
xor
adc
add
or
and
push
iret
dec
dec
and
orl
loop
pop
inc
dec
adc
xor
mov
sbb
pop
dec
shr
xchg
push
cmc
dec
enter
pop
shll
and
pop
sub
fistl
sub
or
loop
call
bound
clc
push
stos
sbb
push
mov
icebp
cli
sub
dec
jl
mov
xor
add
mov
imul
dec
mov
inc
adc
popf
insl
lret
adc
jecxz
in
imull
cmp
push
xor
out
cmp
jno
add
xor
dec
xor
frstor
push
dec
dec
adc
inc
lds
dec
mov
in
or
outsb
loop
inc
adc
and
jmp
outsb
test
pop
ja
fisubrs
push
inc
mov
or
pusha
mov
inc
inc
pop
rclb
pop
test
jmp
sub
cmp
mov
jmp
ffreep
scas
adc
sub
cmp
jl
adc
jnp
ret
adc
adc
jle
dec
mov
jl
pop
rclb
pop
mov
das
cmpsl
mov
notb
popf
imul
push
push
xor
push
sti
sti
out
sub
gs
jae
aam
dec
adc
adc
nop
cmp
or
fildll
dec
ret
jnp
ja
mov
or
add
xlat
mov
pop
clc
ja
push
jo
test
mov
je
adc
or
dec
insl
insb
mov
int3
je
push
cld
sbb
arpl
jno
int
rorb
jge
sbb
imul
sub
stc
sbb
or
mov
jae
jae
jb
and
xchg
neg
mov
inc
jae
inc
add
and
pop
inc
hlt
pop
sub
sub
jbe
mov
add
jg
lret
and
jmp
dec
andb
jp
add
cmp
or
push
or
cmp
cmp
mov
ret
and
pop
xchg
inc
jb
sub
lea
and
test
mov
ds
jl
adc
leave
sub
push
outsb
test
dec
movsl
and
lds
jge
push
pop
sbb
push
mov
scas
pop
or
insb
inc
aas
movsl
add
push
inc
dec
dec
or
sbb
cli
sbb
mov
cmp
pop
or
ret
or
lret
movb
mov
ret
jbe
xchg
call
insl
xchg
xor
jne
nop
sub
insl
jp
adc
cmpsb
orb
sbb
imul
sbb
clc
inc
mov
push
xchg
sub
push
ja
mov
cmp
add
cmp
adc
clc
mov
adc
in
mov
adc
push
or
mov
imul
or
loope
movsl
jns
adc
or
lods
xchg
mov
outsl
nop
adc
sbb
pusha
sbb
push
and
test
jne
or
sbb
add
dec
mov
mov
imul
jge
lock
xlat
inc
pop
inc
push
sbb
inc
popa
dec
and
test
orb
nopl
lods
inc
add
dec
insl
popa
add
push
cmp
fdivr
repnz
es
subb
xor
and
inc
push
jge
cmp
add
shlb
shl
or
cmp
addr16
or
ja
pop
cmp
add
nop
inc
nop
cmp
jbe
jmp
adc
xchg
ficoml
les
je
push
or
cmc
or
mov
push
add
sahf
jae
mov
xor
adc
cmp
push
or
aaa
mov
or
adc
cmp
cwtl
idivl
sbb
rorb
outsl
loopne
std
outsb
or
mov
loop
insb
imul
pop
and
scas
das
insl
mov
lcall
or
jbe
xchg
sub
bound
sub
rorl
mov
cmovno
sbb
push
xchg
lock
iret
inc
mov
inc
or
fcoml
sub
hlt
pop
xchg
fwait
and
push
hlt
pop
push
pop
jnp
sti
mov
dec
push
sbb
push
inc
test
xchg
pusha
pusha
cltd
inc
cmp
or
inc
inc
push
jmp
sbb
or
testb
adc
inc
out
adcl
das
xchg
push
scas
bound
fsubl
jle
out
xchg
cmp
loop
cmc
add
sbb
sub
fcomps
pop
dec
loope
mov
sarb
pusha
jo
adcl
xor
out
inc
fisttpl
pop
scas
lea
fistps
orb
lock
or
lock
testl
cmp
sbb
imul
sbb
sbb
pop
incl
mov
bnd
incl
jg
inc
cld
cmp
pop
sub
add
clc
arpl
xchg
jl
xchg
adc
subb
or
pop
or
jae
cmpl
xor
pop
pop
inc
or
and
or
dec
add
or
mov
and
mov
ds
push
mov
or
pop
fwait
mov
cmp
push
jp
or
test
sub
adc
push
mov
loopne
mov
stos
inc
fistpl
mov
and
adc
mov
jmp
mov
push
jbe
shll
jo
divb
jo
jo
sbb
sbb
pop
popa
aam
xor
in
std
push
lods
and
popa
adc
aam
in
jno
and
faddl
or
xor
cmp
and
mov
ret
lods
loopne
adcb
test
adc
mov
leave
outsl
fbstp
mov
sbb
push
pop
inc
or
call
mov
addl
and
movsb
and
adc
xlat
pop
mov
dec
pushf
or
add
sbb
clc
mov
insb
daa
rolb
sub
shrb
and
sbb
pop
pop
fscale
dec
popf
andb
adc
xor
adc
hlt
outsl
hlt
push
decl
test
mov
jle
jmp
sub
into
jge
sbb
fdivrs
add
sub
add
roll
cli
call
sti
pop
scas
cmpsl
jb
sbb
sbb
cmp
mov
outsb
adc
push
fbld
out
inc
adc
mov
jle
or
cwtl
sbb
fs
sub
xor
and
push
jmp
jmp
push
insl
xchg
pop
rclb
lret
ja
addr16
or
push
jmp
xchg
sbb
and
lret
xor
inc
adc
outsl
adc
jne
dec
push
out
loop
inc
iret
dec
jle
cmp
mov
add
xchg
mov
loop
testl
add
cwtl
movl
sti
jnp
xchg
pushf
movsb
mov
bound
cmp
push
pop
fimuls
lahf
je
jnp
flds
mov
jge
mov
aad
mov
and
dec
push
jb
push
loope
jo
fsub
push
fmulp
dec
inc
sub
push
int
mov
jne
inc
mov
inc
add
test
mov
in
cmc
dec
test
xor
aas
jnp
roll
mov
inc
aad
in
rorb
loopne
clc
push
ret
add
mov
jb
shlb
pop
sbbl
or
pop
pop
pop
in
in
push
into
cli
pop
jae
push
mov
add
scas
mov
adc
js
cmc
jbe
test
sbb
push
or
jmp
add
sbb
adc
enter
gs
js
push
lea
xlat
mov
jle
sbb
sbb
mov
ret
push
add
sbb
enter
sti
cmp
adc
shlb
scas
sahf
or
jg
roll
gs
push
jl
xorl
fmulp
ret
js
or
and
xchg
js
or
mov
aaa
aaa
stos
addl
or
in
cltd
clc
mov
adc
fcomps
pusha
or
std
push
sbb
and
dec
js
dec
mov
dec
push
or
out
out
jg
hlt
jp
dec
xor
loope
xor
das
pop
push
cmp
push
out
adc
pop
and
xor
jae
sbb
inc
repnz
add
and
in
sbb
add
imul
addl
mov
movsl
push
mov
cmp
das
dec
xchg
sahf
popf
dec
mov
jmp
add
or
cmpsl
fldl
jnp
call
mov
jg
xor
pop
xor
or
jle
mov
lahf
xor
loope
lods
cmp
outsb
and
mov
and
imul
es
or
cmp
hlt
pop
lea
or
mov
jmp
pop
js
sarb
ret
jbe
push
jo
inc
out
or
loopne
bound
adc
adc
cmpb
imul
pop
test
loopne
inc
jo
and
adc
lock
jno
push
ret
xchg
mov
and
idivl
cmc
popa
stos
mov
jle
add
cmp
hlt
push
fldl
sub
mov
jnp
push
jl
push
dec
aad
call
mov
dec
sbb
loope
test
jo
xchg
and
das
or
xor
jl
push
dec
or
loope
and
int
adc
and
push
jmp
and
mov
addr16
push
push
or
test
roll
out
out
add
mov
add
aaa
jmp
add
mov
sbb
sbb
in
gs
sbb
mov
ja
adc
cmpl
push
aaa
push
push
sbb
push
jne
cmp
cmpsl
fsubr
xorb
lods
cmp
fcoml
out
or
mov
fcomip
nop
sbb
loopne
add
xchg
xchg
jo
adc
ret
test
jne
inc
jbe
xchg
push
push
adc
adc
lock
inc
lods
add
testb
jg
shlb
dec
in
or
add
arpl
cmpsl
sub
orb
adcl
sub
iret
add
push
or
cmp
xor
fnsave
call
sbb
enter
mov
pop
inc
insl
jne
pop
sbb
cmp
nop
in
scas
jmp
push
dec
jno
jns
imul
movsb
xlat
fs
cs
cs
dec
xor
scas
shll
pop
push
add
inc
enter
dec
les
add
or
pushf
in
mov
cmp
adcl
aam
xor
cmovo
push
adc
sbb
roll
xchg
adc
push
scas
adc
stos
add
test
add
push
cmp
or
mov
add
inc
or
loop
popa
test
in
and
xor
popf
xchg
cs
lahf
mov
insl
lods
mov
fcompl
daa
sahf
jl
add
lods
dec
adc
mov
dec
or
test
adcb
ljmp
add
ret
test
mov
dec
js
sub
out
mov
fdivrl
xchg
data16
cli
inc
or
lret
je
dec
push
out
or
push
pushf
add
pusha
sti
dec
sbb
fwait
rcl
adc
xor
enter
ret
mov
and
jmp
mov
mov
jecxz
rorb
adc
cld
cmp
out
add
pop
cli
or
jge
xor
sbb
imul
mov
int3
lret
mov
add
loop,pn
add
mov
aam
push
lea
push
mov
dec
push
and
mov
adc
xorl
scas
push
sbb
mov
cmp
enter
scas
inc
mov
les
das
xor
adc
sub
int
sahf
sbb
adc
pop
and
cmp
mov
into
lea
push
sub
aam
sbb
les
das
pop
mov
inc
sbbl
stos
add
and
gs
dec
inc
push
lahf
mov
sbb
inc
dec
loopne
pop
mov
test
adcb
push
dec
xchg
inc
dec
outsl
sbb
push
sub
scas
sub
inc
sbb
popa
fmul
int3
out
lock
sbb
js
or
or
or
rorl
gs
sub
xchg
movnti
js
ljmp
sub
mov
xor
inc
push
cmpsb
mov
xlat
push
mov
ljmp
test
iret
jl
push
cmp
jo
testl
shrb
jns
lret
dec
js
push
and
mov
xor
cltd
pop
inc
loop
lods
cmpsb
add
push
push
test
fadds
dec
xchg
sub
adc
jno
std
out
jge
sbb
outsl
and
ficomps
sub
push
js
mov
dec
or
pop
pmaddwd
lea
sar
mov
mov
xchg
xorb
or
notb
adc
arpl
neg
mov
nop
add
xor
or
or
in
rcll
sbb
fucomp
sub
xchg
xor
ja
fsubr
jge
push
lock
push
cmp
rep
sub
or
and
shl
dec
and
cmp
lds
push
xlat
adc
scas
shlb
jmp
jne
test
pop
test
pop
mov
inc
dec
shrl
add
jecxz
mov
sbb
and
sbb
outsb
jp
das
xchg
fs
jg
lock
lods
inc
mov
xor
xchg
xor
sbb
push
daa
jb
popa
cmp
or
jge
sahf
sub
les
test
mov
mov
imull
xchg
mov
sahf
shlb
or
jno
loopne
jp
sub
xchg
inc
cmp
pushf
mov
adc
jl
add
jmp
jecxz
notb
mov
and
insb
jae
jecxz
push
int
pop
sbb
push
jp
push
cmp
jl
add
arpl
adc
dec
xchg
and
jo
sti
xchg
lds
mov
mov
pop
scas
dec
pop
mov
mov
lea
mov
jb
sub
fisubs
movzbl
jge
mov
ret
and
arpl
jge
test
pop
adc
mulps
je
sti
mov
add
sub
test
sar
cmp
rorb
lock
in
mov
jle
cmp
push
cmp
mov
cmp
jmp
push
cmovae
pop
sbb
mov
mov
lods
xor
repz
push
adc
adc
imul
lds
dec
sub
mov
js
sbb
mov
jmp
call
out
mov
pop
sbb
dec
lds
cmp
and
mov
mov
sub
add
call
stos
decl
pop
xor
jmp
fdivl
inc
sbb
or
cs
cmp
mov
fs
xchg
mov
ja
jle
xchg
adc
cmp
sub
stos
jb
inc
icebp
movsl
push
add
call
sbb
push
xchg
popa
push
xchg
or
dec
pop
int3
dec
in
sar
test
int
sub
or
and
sbbl
idivl
dec
imul
pop
sbb
sub
das
or
sbb
or
push
aad
mov
pushf
sbb
mov
and
arpl
aaa
push
mov
xor
add
xchg
sub
jae
jge
test
enter
xor
jo
push
push
das
or
mov
cmp
xchg
and
xchg
stos
stos
or
sub
dec
dec
int
lea
dec
fs
cmp
add
sub
cmp
cmp
stos
xchg
adc
cmpsb
cmp
mov
xchg
xchg
inc
mov
out
lods
addr16
frstor
addr16
mov
cmp
pop
nop
insl
data16
add
nop
cmp
mov
push
jbe
sbb
cmp
push
push
and
mov
test
push
pop
or
pop
or
jmp
cmp
push
jne
inc
sbb
pop
xchg
icebp
jno
jnp
jmp
dec
dec
in
and
rolb
lods
lds
and
add
xchg
push
add
push
xchg
pop
add
add
xorw
sbb
jl
xor
fdiv
xchg
jno
movswl
and
mov
push
jl
inc
call
shll
dec
push
loopne
sbb
jmp
dec
js
jmp
cmp
jl
push
sbb
push
mov
in
adc
out
or
outsl
xchg
cltd
fisttps
cmpsb
xchg
lea
pop
in
jns
xchg
add
or
dec
xchg
or
mov
jno
dec
and
add
xor
nop
or
and
in
inc
add
sub
sub
xchg
dec
jle
cwtl
call
fldenv
add
mov
cmp
jo
xor
xor
jb
xlat
inc
xorl
pusha
movl
mov
sub
adc
and
loope
dec
mov
addr16
insb
out
xlat
cmp
mov
jge
and
or
xchg
mov
popa
icebp
inc
fsubr
out
inc
arpl
int
imul
aas
fucomi
add
mov
inc
inc
mov
xchg
js
adc
outsl
cli
mov
arpl
std
or
adc
mov
xchg
lock
jp
nop
xchg
push
arpl
mov
stc
push
mov
pop
xor
adc
inc
int3
or
or
or
mov
xor
out
aaa
lock
dec
lea
jmp
mov
fdivr
mov
lret
sarl
mov
fcoml
push
js
fadd
sbb
dec
popa
mov
pop
mov
add
loop
add
idivl
rolb
sbb
add
movsb
add
rclb
in
jne
xchg
enter
dec
push
int3
inc
ret
xlat
enter
inc
inc
ret
divb
mov
imul
inc
cmpsl
xorb
jo
xlat
addb
xbegin
mov
mov
lock
push
inc
add
and
jne
pinsrw
mov
movsb
push
ficoms
mov
xor
sbb
xchg
mov
test
xchg
add
roll
jg
push
in
add
cli
jl
or
or
jecxz
or
mov
lea
jnp
in
xchg
ds
leave
jne
inc
inc
mov
pusha
out
movb
in
mov
lods
fstl
sbb
inc
lea
xchg
xchg
jg
hlt
loopne
fisttpl
push
or
icebp
je
loopne
loop
mov
add
ret
jg
icebp
adc
inc
sbb
fildl
cmpb
into
jnp
jge
add
inc
add
dec
and
fstpt
loopne
mov
add
cmp
les
out
dec
loopne
inc
mov
jle
loopne
inc
inc
stos
mov
inc
push
xor
and
addb
add
inc
mov
hlt
add
andl
sub
adc
or
pusha
xchg
mov
orl
fdivrl
sbb
pusha
push
cmp
scas
test
movsb
mov
mov
js
out
xor
test
aaa
mov
cld
inc
mov
jle
mov
adc
decl
dec
mov
mov
inc
inc
jg
add
xchg
rcrb
mov
cmp
loopne
inc
add
cltd
mov
or
adc
sbb
add
mov
dec
movzbl
clc
movd
mov
outsb
loop
cwtl
pop
jl
fcomip
push
xor
inc
push
jo
ljmp
mov
mov
loope
xchg
popa
clc
out
pop
mov
or
adc
outsl
pushf
pop
jp
sbb
dec
push
pop
dec
popa
jno
je
movsb
mov
mov
orb
sbb
loope
dec
das
or
cs
sbb
sbb
mov
dec
add
add
daa
inc
sbb
jne
adc
pop
ja
push
xchg
xor
adc
popa
movsb
adc
pop
push
rorb
add
test
mov
add
imul
or
mov
xchg
jge
xchg
sbb
or
ret
adc
dec
popf
push
mov
mov
faddl
jno
xchg
hlt
xchg
jne
mov
pusha
fstpl
mov
add
je
push
mov
int3
outsl
fwait
aas
jmp
or
lock
ljmp
xor
sbb
pmaxsw
and
or
lods
adc
or
jge
lock
mov
test
adc
jg
inc
or
fwait
adcl
lea
lea
mov
mov
add
and
jns
and
pop
mov
scas
cmp
addb
mov
or
dec
addr16
repz
mov
dec
frstor
cmp
mov
mov
and
xchg
cmpsb
adc
in
aam
lcall
cmp
push
test
cmp
adc
xor
bound
dec
mov
sub
adc
test
jge
repnz
push
cli
shrb
into
mov
and
test
test
xor
roll
inc
add
je
inc
mov
push
push
xchg
les
xor
push
js
dec
pusha
outsb
lods
xchg
shll
popa
cmp
sahf
loop
sub
adc
pop
and
clc
adc
mov
and
jp
or
push
fs
push
add
clc
inc
movsl
pop
ss
xor
cmp
push
scas
xlat
sti
lds
inc
cmp
xor
pushf
jo
fisttps
sbb
pop
sbb
sbb
pop
xor
and
sub
push
popa
or
loop
or
test
jl
mov
xlat
lcall
jp
lods
inc
and
xor
out
xor
loop
decl
mov
xchg
repz
cs
call
les
popf
pop
xchg
sahf
fcomps
shll
mov
loopne
pop
outsl
loope
pop
push
add
negb
pop
loop
inc
jbe,pn
daa
adc
pop
mov
or
mov
sbbb
lret
sub
scas
pop
hlt
jae
sar
or
sub
enter
xor
pop
out
push
or
negb
inc
and
lds
movb
sbb
push
in
dec
test
mov
mov
adc
or
mov
loopne
jno
mov
dec
add
js
jmp
jmp
or
sub
ja
daa
stos
mov
sub
cmp
jae
icebp
add
inc
pop
ja
sub
pop
jbe
daa
cmp
adc
xlat
push
and
xchg
and
sub
push
rcr
add
js
xor
jae
push
jne
xor
pop
roll
mov
mov
jb
rolb
push
insb
call
imul
mov
daa
rcrb
push
icebp
leave
adc
addb
lahf
clc
bswap
mov
aam
pop
sbb
or
fildl
mov
pop
add
adc
xor
cmp
fwait
popf
and
mov
shr
xchg
sahf
dec
jmp
xchg
js
bound
mov
jnp
ficomps
adc
imul
jne
xchg
ret
pop
or
jg
out
add
or
sar
jg
cmpsl
sbb
ja
loope
clc
lea
dec
or
add
lea
xor
and
mov
sbb
sbb
loopne
inc
xchg
je
inc
cs
adc
adcb
test
inc
pusha
push
add
aas
push
rorb
xor
xlat
les
aaa
cli
addb
cltd
jecxz
add
in
adc
cli
enter
movsb
inc
rorl
xor
and
lret
xchg
and
mov
pushf
pop
adc
add
ja
movsl
xorb
clc
mov
mov
sub
or
gs
in
fcoms
in
hlt
in
shll
pop
xchg
enter
dec
pop
cld
loop
ja
mov
lea
sub
mov
outsl
sahf
aaa
adc
mov
mov
push
and
mov
add
scas
loopne
int3
out
addl
mov
adc
or
xor
or
sbb
lock
sbb
repz
lcall
insb
mov
sub
push
push
cltd
xchg
add
mov
sbb
das
add
push
add
adc
sarb
add
sbb
cmp
pop
out
les
xor
xor
add
jl
mov
mov
imul
mov
sub
sub
inc
jecxz
and
mov
cmp
and
xchg
les
jmp
addr16
inc
clc
aaa
movsb
xor
sbb
mov
adc
enter
rolb
sbb
push
and
adc
and
adc
movsb
push
enter
add
gs
mov
lds
inc
or
imul
pop
std
out
stos
pop
ss
mov
das
adc
inc
sbb
jmp
xchg
or
test
push
fimull
lds
mov
aad
mov
mov
cltd
mov
push
and
inc
jge
jns
fwait
mov
mov
inc
add
je
loopne
mov
test
jb
mov
cmpps
ret
mov
adc
das
pop
and
adc
mov
dec
pop
dec
push
sub
or
shrb
or
xor
ljmp
add
jg
arpl
mov
mov
mov
inc
sbb
cld
icebp
ja
push
dec
mov
mov
gs
inc
repnz
leave
fiadds
sbb
add
push
jmp
cmp
dec
jg
add
xor
fdivl
inc
mov
xchg
rol
push
popa
stos
mov
sbb
lock
push
fadds
es
ror
cltd
and
and
in
in
faddl
aam
pop
loop
or
or
or
aam
sub
jne
in
int3
pop
jo
fs
loop
jae
mov
sub
enter
xchg
loopne
push
add
sub
mov
iret
sti
aam
aas
fwait
xor
inc
add
add
sbbb
mov
xor
fimull
bound
pop
rcl
popf
les
push
add
or
sub
cwtl
sbb
and
sbb
push
sbb
mov
andl
sbb
sub
push
inc
sub
push
or
jmp
sbbl
add
or
sub
je
movsl
sub
outsb
add
es
inc
mov
add
jmp
or
lds
adc
mov
outsb
stos
stos
add
adcb
pop
adc
and
imulb
rolb
add
pop
push
mov
mov
and
ret
sbb
out
add
and
aaa
lahf
adc
dec
and
aas
xor
xor
jne
shll
xchg
and
je
sbb
dec
sbb
mov
add
sbb
inc
js
aaa
xchg
clc
andb
clc
cmp
jne
adc
cmp
jbe
sbb
pop
imul
jl
xchg
das
enter
cmp
inc
jnp
or
daa
leave
dec
js
and
and
inc
cmc
cmp
lea
jl
and
pop
and
loop
push
mov
loopne
jge
dec
adc
cmp
iret
rclb
cmp
aam
mov
fcomi
inc
repnz
and
push
stos
mov
sbb
rorl
cmp
aaa
popa
js
or
insb
jmp
dec
pop
fldenv
xor
lahf
test
jmp
mov
cltd
idiv
nop
adc
inc
cltd
ret
and
pop
lock
test
sbb
lret
mov
add
jns
or
sub
shl
or
inc
mov
lret
fisubrs
pop
lsl
dec
dec
lods
popf
pop
push
dec
inc
add
add
add
ljmp
adc
ret
scas
add
std
sbb
test
inc
push
addl
cmp
in
pop
outsb
sbb
and
sub
mov
sub
mov
movsb
test
jmp
dec
cltd
mov
dec
sub
xchg
inc
cltd
cs
mov
js
mov
loope,pn
xchg
jns
std
add
fsubrp
rcrl
xchg
ret
lret
mov
push
icebp
mov
fsubs
lret
add
mov
sbb
push
ja
cmp
dec
push
pushf
mov
xchg
xchg
add
scas
xchg
shrb
add
outsb
mov
push
inc
cmpsl
push
lock
out
ret
decl
fadds
fistps
mov
jg
add
dec
jl
jge
adc
sbb
das
xchg
jbe
mov
sub
dec
js
adc
popl
out
loop
fcoms
stos
mov
pavgb
push
movb
lahf
adc
push
mov
sbbb
sbb
mov
pop
sbb
push
dec
loop
push
fucomip
nop
lds
loope
mov
and
mov
push
mov
xchg
jo
push
aam
push
push
mov
test
out
lods
imul
popf
mov
add
mov
nop
xor
scas
popa
hlt
fldl
ret
jge
mov
dec
xchg
pop
fidivl
jl
sub
or
inc
in
mov
inc
inc
mov
fcoml
lret
jg
shlb
pop
les
fiaddl
std
mov
inc
outsl
adc
mov
cli
pop
adc
adc
call
mov
imul
or
rolb
pop
sbb
xchg
cld
jmp
loope
add
in
add
das
and
lret
inc
sbb
push
and
add
pushf
fsubrs
sarb
rolb
ffree
iret
jb
scas
shl
cmp
push
adc
rcll
inc
mov
jl
loop
movsb
pop
pusha
or
sub
mov
xchg
cmp
cmp
mov
pop
and
ret
sbb
inc
sub
dec
dec
mov
and
pop
shll
jg
mov
mov
mov
cmc
es
jl
cld
and
push
out
mov
in
movb
jo
inc
js
inc
cmp
mov
fsub
push
or
or
hlt
adc
mov
sbb
push
cmpb
cmpb
sub
in
outsl
rolb
inc
movzbl
add
sub
test
mov
lret
adc
add
icebp
cmpb
add
jg
lahf
pop
xor
mov
sub
clc
jle
pop
push
xchg
lret
inc
and
in
in
mov
call
add
cmp
cld
adc
cmp
icebp
aas
xor
adc
fdivrs
inc
cmp
adc
hlt
sbb
xor
inc
lahf
inc
pop
ja
lock
out
mov
cs
lods
aaa
int3
jo
into
or
js
loopne
mov
or
into
xchg
or
sub
inc
or
mov
je
mov
lea
pop
rolb
outsl
aam
cmp
int3
xor
push
in
jge
icebp
sub
or
gs
or
inc
xchg
xchg
push
xor
cs
lock
cmp
adc
jecxz
mov
andl
cs
jecxz
gs
pop
mov
loope
movnti
arpl
sub
fdivl
add
in
jl
jge
loope
mov
sbb
dec
in
fsub
and
daa
sbbl
fwait
mov
dec
sub
xchg
push
pop
sub
enter
cmp
aam
mov
ficoml
cmp
sahf
arpl
ficoml
int3
pop
or
xor
xchg
divl
cs
cmp
jp
cmp
fcom
pop
inc
cmp
fadds
in
mov
lea
outsl
mov
or
adc
pop
sbb
jno
test
xor
jp
in
roll
push
inc
ljmp
loop
ljmp
loope
inc
fdivrl
inc
cltd
xchg
xchg
aaa
mov
and
dec
pop
fadd
enter
bnd
shlb
jns
ja
ror
lcall
push
mov
push
mov
mov
adc
pop
pop
inc
adc
ret
sub
enter
lock
flds
test
add
push
lods
sub
push
push
int3
mov
dec
xor
mov
iret
xor
sbb
adc
mov
scas
add
pop
ljmp
insl
mov
and
rolb
ret
fimuls
js
in
sbb
push
adc
add
cltd
mov
test
dec
add
dec
mov
add
or
mov
insl
and
fdivs
call
pop
dec
push
lret
xchg
sbb
xor
roll
mov
orb
out
sbb
and
je
fs
inc
test
shlb
inc
popa
and
mov
or
mov
xchg
xor
jo
insl
adc
jo
test
lods
cmp
jmp
jl
sbb
mov
inc
adc
loopne
test
fcoml
pop
sub
adc
lahf
lock
je
stc
mov
out
aad
mov
and
in
aaa
jecxz
jmp
dec
mov
sbbl
or
add
in
and
mov
shlb
xchg
mov
or
in
nop
jecxz
add
inc
mov
stos
xor
xor
aaa
ret
xlat
cs
scas
add
hlt
in
mov
or
test
xor
add
inc
scas
xchg
pop
aaa
xchg
jnp
cmp
dec
and
loopne
out
jnp
add
daa
mov
pop
pusha
jno
movsl
sbb
sti
and
push
push
hlt
dec
lea
mov
js
jo
scas
sar
fistpll
push
pop
add
sub
add
adc
sarb
lret
adc
outsb
xor
xchg
outsb
mov
jl
inc
rorl
mov
dec
xchg
loopne
and
jo
inc
imul
push
jmp
inc
jbe
jg
xchg
subl
dec
in
cmpsl
and
jo
mov
or
les
dec
cmp
push
add
mov
popf
adc
ss
adc
and
jno
or
insl
and
add
fs
cwtl
mov
cmp
js
enter
xor
cmp
jg
decb
adc
push
aam
push
push
mulps
adc
ret
cmp
push
out
enter
lahf
xchg
sahf
xchg
jge
inc
jl
roll
idivb
fdivrp
dec
jne
mov
nop
mov
cmpl
sti
sub
dec
mov
leave
in
jo
or
cli
adc
push
jecxz
dec
inc
cld
mov
cwtl
jle
sarb
mov
xor
inc
ds
mov
pop
or
xor
add
pop
fs
ss
adc
jl
sbb
add
outsl
nop
add
sarb
out
xchg
jle
dec
fisttpll
inc
lcall
ja
or
or
lret
mov
adc
arpl
mov
pusha
lock
sub
ret
sbb
inc
movsl
loope
jbe
mov
mov
fisttpll
imul
cmp
sbb
fcoms
sbb
out
cmp
rcr
imul
ret
mov
int3
sub
outsb
xchg
sar
or
je
sub
test
xchg
mov
imul
mov
add
sar
add
mov
sbb
xchg
loope
mov
sbb
adc
sub
subl
inc
or
ljmp
lret
lods
scas
rclb
fisttpl
mov
scas
cmp
cmp
idivl
nop
pop
or
inc
push
inc
std
mov
cmp
cld
xchg
dec
fisubrs
add
bound
or
adc
lret
mov
sub
or
loopne
insl
popa
xchg
inc
sub
mov
inc
jmp
cli
dec
sub
sub
sbb
sbb
adc
or
aam
stos
push
jns
push
and
jae
add
outsl
leave
inc
insl
jmp
pop
pop
je
dec
je
jmp
xchg
add
inc
jne
jno
les
adc
cmp
sub
out
jmp
sub
push
mov
adc
mov
adc
adc
mov
adc
xor
pushf
lcall
adc
shlb
jmp
mov
or
in
lds
pop
push
pop
pushf
pop
or
cwtl
movsl
sub
and
xchg
or
jle
xlat
dec
jbe
and
lret
addr16
jno
cmp
mov
cli
test
call
inc
inc
adc
rolb
and
shl
lea
sbbb
sbb
cmp
and
test
adcl
hlt
add
jne
or
add
roll
pop
rcrl
in
pusha
mov
in
add
cmp
fisubrl
rcrb
fs
shrb
adc
inc
loope
lahf
mov
bound
das
ds
add
lods
das
faddl
cmp
dec
mov
pop
or
mov
dec
jno
push
push
mov
xor
adc
mov
int3
dec
mov
ffree
sti
test
rclb
sub
add
adc
mov
push
adc
push
mov
sti
xrelease
arpl
pop
rcrl
mov
lock
in
pop
cmpsl
mov
imul
in
loopne
or
jle
testl
pop
sbb
lock
daa
mov
xor
and
push
push
dec
enter
mov
sbb
rcll
test
inc
js
xor
popa
inc
add
cwtl
shlb
lods
cld
xchg
ret
sub
rcr
dec
jmp
adc
enter
xor
and
lock
sbb
mov
or
mov
inc
clc
jge
clc
sub
adc
push
lock
add
pop
mov
ja
lret
jmp
or
inc
in
jle
clc
mov
dec
xchg
and
mov
sbb
xchg
or
rorb
or
fildl
call
es
fdivrl
outsl
movsl
and
ss
dec
lret
jnp
adc
dec
aam
iret
or
andl
lock
add
rorl
idivb
lea
or
or
fimuls
push
aam
pop
mov
inc
testl
or
dec
aas
jle
jg
mov
ss
lea
js
mov
add
add
xlat
les
dec
shlb
pop
les
and
ficoms
fldenv
mov
add
add
lcall
movsl
adc
sbb
sub
jne
test
sbb
sbb
mov
sub
fnstcw
lahf
jno
inc
pop
add
dec
or
test
lods
out
adc
lret
mov
addb
mov
in
or
mov
xor
aam
push
jg
and
in
push
push
incl
iret
in
pop
jne
lods
dec
cmp
jge
mov
dec
mov
jge
mov
add
mov
add
or
cmp
jge
add
call
pop
xchg
imul
add
mov
xchg
hlt
add
sub
push
das
movsl
add
sub
mov
pop
fidivrs
xlat
dec
push
pop
pushl
fdivs
push
cmp
xchg
jge
push
shlb
pop
or
cmpb
nop
adc
shl
in
fsubp
jns
or
add
movb
in
rcll
jnp
addr16
xchg
mov
fiaddl
arpl
sub
gs
sbb
pop
imul
fnclex
add
lcall
inc
shll
or
jg
jb
sbb
mov
and
lock
add
out
inc
outsl
xchg
jp
sarl
sbb
sub
inc
movsl
add
enter
jae
in
adc
mov
jmp
sbb
xor
shlb
add
in
jbe
into
mov
fnsave
adc
cli
add
lods
lahf
les
les
xor
idivl
ljmp
or
data16
adc
xchg
lock
push
xchg
jp
lahf
ja
addr16
or
in
xor
mov
inc
dec
in
pusha
xchg
pusha
clc
xchg
fs
mov
test
sbb
xchg
mov
mov
add
pushf
jae
xchg
add
push
lcall
xchg
inc
mov
cmp
cmp
sub
jns
jecxz
and
aas
and
je
add
mov
test
ret
ret
int3
aaa
nop
mov
rol
and
or
mov
dec
popa
push
adc
loopne
adc
arpl
and
and
pop
adc
sbb
push
jbe
mov
sub
jne
jo
dec
jp
aam
add
mov
lret
pop
adc
xorb
aam
orl
std
sbb
cli
pop
push
inc
add
repnz
or
add
sbb
ret
cmp
jno
adc
add
in
sti
cmp
sbb
mov
loope
stos
lcall
bsr
dec
lods
outsb
sub
das
test
add
cmp
adc
push
adc
jmp
ss
loopne
pop
and
pop
push
push
push
sarl
cmpsb
mov
les
popa
mov
jne
sub
stc
add
gs
lea
add
push
add
add
fwait
mov
pushf
sub
mov
xchg
cwtl
frstor
rcl
jo
clc
mov
pop
adc
adc
cwtl
cmp
mov
push
fadds
lock
push
push
mov
add
dec
xchg
sbb
mov
mov
pop
push
aam
fcom
fcoms
loopne
adc
lock
or
mov
cs
cmp
mov
das
push
ja
push
cs
cmp
or
mov
repz
imul
mov
inc
or
or
mov
and
shrl
sub
adc
cli
neg
mov
mov
add
adc
sbb
wrmsr
jge
in
pop
mov
cmp
ss
test
and
cmc
cmpsb
shl
in
movsl
pusha
dec
jl
pop
jbe
sbb
lcall
pushf
mov
popf
lods
add
test
dec
add
cwtl
push
pop
sahf
and
xor
inc
sbb
xchg
add
sub
adcb
in
xorl
or
jle
lret
out
push
lret
push
pop
jl
addr16
mov
adc
nop
lods
rorl
cmp
flds
aam
sti
push
cmp
add
mov
jle
mov
loopne
out
cmp
pop
int
lods
adc
iret
sub
mov
sub
out
sub
and
mull
lods
aaa
lock
mov
jge
xor
sbb
nop
add
xorl
sub
subl
inc
rcrb
lret
adc
or
ja
mov
mov
das
jnp
scas
pop
sbb
mov
and
cs
inc
xor
stos
adc
xorl
or
sbb
mov
add
stc
fdivrl
adc
adc
faddl
enter
shlb
addr16
sub
pop
mov
adc
or
das
mov
pop
mov
test
fstl
adcb
and
xchg
stos
dec
mov
push
sub
mov
lea
shlb
jno
mov
test
es
dec
out
sbb
push
mov
cmpsl
cli
mov
test
adc
mov
pop
push
movsl
pop
push
cmp
sbb
rorl
push
dec
rol
push
add
inc
cwtl
mov
cmp
jl
int3
rorb
das
and
fwait
and
and
xchg
dec
scas
cmpsl
adcb
xchg
fs
hlt
aam
pusha
add
or
or
jbe
or
test
out
or
inc
cmp
sub
je
or
into
cmpsb
and
cs
bnd
jl
sbb
sti
pop
xor
mov
out
mov
mov
adc
shlb
test
add
jl
jnp
rcl
push
pop
cli
dec
adc
stc
add
add
ds
pop
cmp
sub
push
insb
imul
xor
dec
inc
add
pop
roll
adc
cmp
pop
ret
mov
sbb
lods
pusha
pop
jmp
out
js
and
jno
int3
aad
call
inc
push
mov
js
inc
push
xor
jne
xchg
xor
add
and
push
outsb
or
jle
mov
sbb
mov
jns
or
mov
dec
and
mov
inc
in
and
mov
cmpsl
testl
add
or
xchg
je
imul
leave
jg
cli
mov
mov
mov
jo
push
stc
aam
push
xchg
jmp
sub
repz
int
push
test
xchg
lock
incb
dec
dec
cmp
dec
cmp
add
les
scas
mov
add
mov
lea
sub
dec
scas
out
test
and
aas
adc
clc
dec
mov
jmp
filds
xor
push
rcrb
mov
dec
into
shrb
xchg
inc
jo
adc
add
xor
xor
add
fwait
and
add
mov
fldl
scas
lock
sahf
out
aam
popa
inc
sbb
scas
lret
cmp
je
xchg
rcl
mov
and
push
push
adcl
shll
add
pop
xor
mov
adc
xchg
cwtl
pop
fwait
je
lock
inc
dec
insb
ret
dec
xchg
cmpl
andl
inc
int
call
inc
loopne
adc
xchg
dec
je
dec
jne
xchg
into
adc
loopne
add
push
xchg
mov
or
add
and
adc
add
sub
dec
inc
mov
pop
pusha
and
insl
adc
pop
das
sbbb
xchg
rcrb
fwait
xchg
jp
inc
push
pop
or
push
out
push
fisubs
ds
shrl
xor
pop
xorl
daa
out
lahf
lret
sub
pop
pop
mov
hlt
dec
das
out
jno
andl
daa
mov
jo
add
rcrb
fiaddl
sbb
nop
sbb
push
scas
mov
push
loope
or
jmp
pop
cmpsl
jns
cmpl
jge
das
outsb
int
aaa
jne
fstl
or
ljmp
mov
faddl
aas
test
inc
or
imul
pop
divps
ret
cmp
push
inc
sahf
gs
pop
dec
and
mov
nop
and
sbb
inc
and
mov
dec
cmpl
lret
jle
cwtl
pop
pop
sub
cs
cmp
leave
sbb
orb
jbe
inc
cmc
mov
inc
pop
clc
inc
cltd
dec
clc
dec
adc
nop
pop
aam
dec
rcrb
test
outsb
aam
ret
fbstp
fsubl
push
push
push
cli
test
ds
or
cmpsb
adc
hlt
pushf
add
stc
add
xor
or
and
push
sbb
xchg
push
out
bound
mov
lahf
scas
or
add
xchg
add
fstps
mov
fs
inc
xorb
xchg
ror
shrl
loopne
pop
sbb
sub
fninit
or
mov
repz
pushf
shrb
cmp
cmp
lods
dec
pop
adc
out
xchg
cmp
andb
ret
jno
dec
loopne
sbb
xchg
add
xor
adc
mov
fisubl
fldl
push
jo
add
add
scas
push
stc
lcall
inc
mov
mov
or
adc
or
insb
enter
jl
lock
rorb
mov
inc
push
mov
sti
idivl
lcall
dec
xchg
sbb
jmp
cmp
jnp
inc
dec
int3
push
and
fcoms
in
add
mov
jl
add
cmp
push
and
aam
popl
jns
movsl
jbe
sbb
cmpb
cmp
adc
push
cmp
mov
cmp
incl
xchg
push
sti
mov
xorb
mov
xchg
adc
xor
pop
push
or
out
icebp
out
and
pop
xchg
jmp
lea
or
cwtl
dec
push
push
outsl
pop
xchg
jnp
xchg
pop
jp
push
push
sbb
jno
mov
iret
je
orb
jo
mov
mov
adc
decl
scas
mov
inc
popf
xor
sbb
adc
push
jge
rorl
jo
fmull
sbb
pop
and
andl
pop
xchg
xor
adc
repz
jge
and
inc
mov
jge
xchg
mov
stc
pop
mov
jecxz
add
sbb
mov
add
and
inc
les
dec
xor
ljmp
jo
mov
popa
cmpsb
leave
jge
jb
loop
mov
jae
sub
push
adc
or
loop
js
sbb
sub
sub
loope
sub
stos
mov
dec
and
bound
jo
mov
lret
adc
jmp
gs
cmp
and
iret
aam
mov
rorb
sub
scas
jecxz
push
arpl
sarl
loopne
fidivl
mov
jl
daa
jne
xchg
xchg
add
fidivl
mov
dec
stos
cltd
insl
adc
jno
inc
mov
jp
jo
or
mov
test
or
push
je
pop
test
inc
cmp
insb
movsl
mov
data16
pop
ret
icebp
jecxz
push
push
bound
je
lea
or
inc
enter
es
pop
cltd
iret
cmpsb
add
add
push
ss
sbbb
ret
icebp
jns
jmp
icebp
into
add
push
not
sbb
and
cmpsb
lret
or
or
sbb
or
push
pop
in
aam
test
xor
imul
rcrb
and
or
in
leave
test
insb
xor
stos
fstps
cmp
lods
add
mov
loop
cltd
fcmovne
addb
and
adc
sbb
mov
ret
jae
add
cmp
jo
and
dec
push
pop
xchg
data16
and
sbb
adc
and
adc
add
push
lcall
add
pop
or
ret
add
push
inc
inc
mov
cmp
call
lea
add
push
cmc
inc
fmull
jne
pop
and
pop
and
les
jge
popa
cwtl
dec
mov
mov
cmp
add
popa
push
daa
fsubr
orb
mov
cltd
xchg
adc
std
ss
mov
xor
shll
imul
jmp
adc
add
call
lods
mov
xor
or
lock
jl
clc
movl
push
sub
or
imul
sbb
ret
sbb
xchg
xor
aam
dec
jmp
cmp
or
mull
icebp
dec
and
jb
ss
inc
dec
sti
mov
in
pop
push
push
imul
add
sub
mov
or
dec
sti
push
dec
les
out
outsb
aas
mov
or
ljmp
ljmp
jmp
cmpb
insb
xchg
push
fs
lcall
dec
xorl
add
pop
push
scas
dec
adc
fldt
push
add
outsb
lahf
sbbb
push
ljmp
divb
out
xor
outsb
pusha
mov
leave
dec
mov
test
insb
push
push
cmp
jbe
scas
lret
mov
mov
and
sysexit
add
inc
inc
adc
sub
dec
mov
or
or
jmp
dec
dec
cld
dec
xor
roll
xchg
sbb
ja
push
push
push
add
push
stos
xor
mov
mov
push
je
test
jbe
pop
cmc
mov
repnz
imul
aam
or
xor
xor
test
inc
push
adc
add
fnstenv
cmp
push
ret
xor
xor
mov
or
nop
sbb
imul
fs
lret
movsb
or
fstpt
sbb
pop
adc
into
sub
in
adc
leave
dec
xor
imul
pop
push
shll
jle
daa
mov
ds
rolb
sub
and
neg
data16
dec
push
inc
lcall
pushf
xchg
je
test
and
into
enter
pop
adc
dec
test
and
and
cltd
mov
mov
add
shrb
ret
cmp
pop
dec
shrb
xchg
or
or
dec
jb
adc
lea
mov
xor
inc
add
push
push
mov
stos
adc
pop
mov
mov
push
mov
nop
and
arpl
sahf
pop
inc
dec
pushf
cmp
loop
in
jmp
and
mov
dec
push
pop
push
das
fdiv
cmc
push
in
test
inc
mov
mov
xchg
mov
xor
into
xor
and
cmp
mov
xchg
add
int
cmp
dec
addb
push
pop
pop
mov
and
xchg
sub
sbb
das
stc
andb
subl
js
mov
xchg
scas
adc
dec
adc
je
mov
add
test
aam
mov
or
fldcw
movsl
and
xchg
clc
movsl
mov
mov
inc
sub
mov
or
xchg
xor
cmpl
shll
pop
and
rol
inc
inc
sarl
insl
adc
add
pusha
mov
popf
adc
jnp
adc
xlat
add
lea
andb
pop
pop
xorl
lahf
fadds
into
push
add
fnstenv
mov
addr16
addl
inc
lods
sub
fidivrs
test
jb
dec
je
add
mov
xchg
je
into
in
xor
sub
add
push
mov
mov
test
xchg
xor
cwtl
fcompl
xchg
add
pop
cmpsl
jg
dec
lock
sbb
cmp
fsubr
sub
adc
or
nop
push
mov
or
arpl
fs
movsl
hlt
push
sub
dec
mov
sub
shrl
sub
sbb
mov
into
movsl
hlt
push
inc
hlt
ret
or
add
sub
mov
popa
nop
movsl
imul
and
lock
pop
pop
sub
adc
push
fmull
xorb
or
adc
adc
pop
xchg
push
clc
xchg
jbe
sub
cmpsb
mov
xor
push
in
cmp
xchg
or
lock
gs
add
imul
scas
push
xor
dec
fwait
aas
sbb
shll
cmp
xchg
outsb
test
mov
jle
jg
repnz
inc
in
jbe
xchg
je
rcrl
or
mov
add
test
lock
outsl
cmp
jnp
pop
mov
movsb
test
xchg
push
add
ja
es
in
sub
mov
mov
js
jnp
or
mov
or
outsb
js
ret
cmpsb
outsl
ss
pushf
and
push
push
inc
pop
stos
adc
sbb
inc
dec
adc
xor
out
sub
push
popf
mov
mov
xchg
js
cmpb
repnz
bound
test
and
pop
mov
sub
in
adcl
jg
push
call
outsl
and
je
aas
xchg
lods
mov
dec
dec
dec
je
inc
outsl
mov
and
cmc
mov
fistps
icebp
js
xor
outsb
or
pushl
jne
add
lds
push
add
imulb
xchg
pop
aam
cmp
xor
popf
pop
aaa
sahf
sarb
daa
mov
or
subps
rorl
pusha
inc
dec
mov
out
sbb
sbb
sub
fdivrl
ret
mov
and
pushf
xchg
sbb
and
ja
jne
leave
jmp
out
dec
aad
mov
sub
push
movswl
inc
fiadds
pop
frstor
sti
mov
and
scas
dec
cmp
not
jmp
addl
sbb
sub
jecxz
lea
scas
cwtl
movsb
repnz
cmpsb
in
inc
shrb
sub
cmpsl
jle
mov
fmull
mov
mov
jl
xchg
sub
add
pop
mov
adc
lret
ret
movsl
lds
repz
push
push
pop
shrl
adc
mov
xchg
jno
jno
xchg
out
je
shl
js
adc
inc
movsl
sbb
jae
push
add
jg
mov
mov
jmp
aam
add
rcll
jl
pop
mov
rcrl
pop
add
in
pusha
in
outsl
push
popa
inc
aaa
push
adc
les
mov
orb
add
in
clc
sub
lret
and
ret
lods
mov
jl
push
call
and
dec
xor
sbb
sub
pop
or
xor
push
dec
inc
mov
sub
add
jle
pusha
dec
jae
adc
ret
pop
adc
push
or
cli
mov
ret
enter
icebp
mov
push
sahf
lea
inc
and
roll
mov
sub
mov
dec
inc
dec
add
dec
aam
cmpsl
or
fstl
inc
pop
imul
arpl
or
inc
clc
adc
mov
sbb
jne
test
stos
push
iret
pop
sub
in
lea
pop
and
orl
lock
or
inc
clc
jbe
mov
mov
push
inc
lea
mov
inc
pop
es
dec
movq
ja
adc
mov
push
or
es
dec
push
jae
pop
dec
and
mov
or
mov
or
adc
cmpl
cs
jne
mov
sar
mov
mov
xchg
and
jns
cli
cmp
jbe
mov
inc
inc
lret
sub
testl
jns
enter
dec
insl
mov
adc
sahf
mov
xchg
xor
lcall
dec
out
sbb
jle
insl
jb
or
adc
jo
mov
add
inc
jo
hlt
lock
sbb
aad
or
cmc
inc
aad
jg
ja
orb
sbb
pop
fistpll
jno
xlat
rclb
stos
aas
mov
sub
add
ljmp
jo
sub
pop
ret
dec
cmp
mov
cmpl
sbb
gs
cmp
in
jbe
mov
dec
fidivs
mov
jnp
adc
or
aam
inc
cmovg
sbbl
dec
loopne
movsb
xor
dec
in
cmp
rorl
fwait
push
pop
add
testl
call
push
mov
inc
leave
mov
inc
adc
add
sub
cld
and
sub
and
xor
lea
jbe
movl
pop
iret
fwait
inc
sub
cmp
idiv
jbe
lea
jbe
test
add
loope
fcomps
jp
aas
add
pop
adc
roll
ja
popf
imul
jecxz
std
loopne
insl
movsl
jecxz
jge
jl
add
adc
test
mov
lcall
or
mov
inc
rcr
dec
mov
adc
cmpsl
pop
sbb
xchg
jle
inc
ret
add
and
pop
add
pusha
std
mov
rcrb
movsl
mov
jno
mov
pop
sub
push
js
and
jmp
or
movsl
xor
or
adc
push
shlb
pusha
cmp
inc
add
cld
pushf
adc
inc
rclb
mov
mov
jne
push
pop
andb
pop
cmp
adc
push
inc
sub
sub
cltd
sub
jbe
and
in
pop
push
pop
in
insb
imul
push
jo
xor
cmp
adc
or
jmp
push
jg
jmp
mulb
mov
ret
xchg
adc
and
mov
aaa
sub
mov
cmp
dec
xor
sub
pop
mov
fwait
mov
xorb
jecxz
push
outsb
mov
xchg
test
adc
push
adc
and
icebp
sbb
mov
mov
lea
and
rcr
pusha
and
pushf
jne
or
pop
lcall
sbbb
push
pop
pusha
push
add
filds
int
fstps
mov
or
dec
and
mov
or
mov
adc
shl
out
outsb
repz
filds
fmuls
xchg
aaa
in
clc
inc
fdivr
pop
hlt
pusha
cmp
pop
shl
imul
adc
fsubs
clc
lock
repnz
xchg
cmc
adc
cmc
lods
xor
lret
aam
adc
and
data16
sub
aam
adc
and
sub
pop
xchg
in
xor
call
aaa
pop
pop
in
dec
ja
imul
mov
out
lret
in
loopne
les
and
shl
mov
pop
les
mov
xor
rcrb
mov
dec
or
sbb
int3
xchg
sbb
enter
ficompl
mov
aam
dec
mov
push
in
call
or
cmp
inc
or
cmp
pop
fwait
pusha
arpl
pop
cmp
mov
lods
pop
sub
inc
fsubrp
pop
andb
push
or
jno
jnp
sahf
and
xchg
inc
fcos
movsl
xor
or
aas
xor
jne
pop
jl
jnp
sbb
test
or
sbb
shlb
fdivp
inc
xor
jge
or
mov
arpl
and
adc
andb
arpl
xchg
mov
cmp
xchg
cwtl
outsl
adcl
add
mov
loope
push
mov
test
insb
cmp
pop
xor
aaa
cmp
dec
and
leave
jae
gs
push
movsb
fldlg2
lds
dec
inc
inc
add
sub
xchg
and
mov
aas
pop
sub
aam
mov
jne
daa
test
arpl
aad
xchg
inc
js
cltd
fadd
cmp
add
testl
add
dec
mov
and
gs
pop
xor
dec
mov
inc
push
push
dec
pusha
popf
subb
inc
mov
sti
pop
jg
dec
xor
imul
jns
in
stos
and
rolb
or
shr
aad
fldt
jne
dec
lock
stos
sarb
in
inc
dec
repz
pop
and
pusha
push
aam
mov
push
push
mov
push
out
mov
in
sbb
les
imul
add
push
stos
lock
in
sbb
sub
xor
lcall
and
or
andl
lahf
js
fdivl
sub
add
xchg
add
sub
out
aas
sarl
mov
sub
aad
idivl
fiadds
arpl
sti
shl
sub
ja
push
repz
adc
adcl
or
aam
out
push
push
xchg
mov
inc
into
add
xor
sbb
xchg
sub
sbb
dec
andl
push
sub
cmp
push
sub
and
cmp
push
sub
pusha
in
loopne
push
sub
cld
popa
pop
sub
decl
cmpl
push
push
xor
lock
push
les
fwait
rcr
adc
push
or
push
scas
inc
outsb
push
ret
mov
lret
sti
out
inc
or
sbb
cmp
xchg
jns
add
pop
mov
or
gs
xchg
add
add
push
pop
dec
loopne
jmp
pop
loop
push
ror
fld1
ficoms
pop
incb
xchg
mov
dec
mov
jo
xchg
fdivrs
adc
push
jns
lret
fldenv
dec
add
dec
sbb
pop
or
mov
mov
add
inc
jno
enter
jecxz
xchg
stos
mov
sbb
ja
pop
pop
in
fisubrs
in
sub
sub
sub
sub
mov
jns
or
xchg
xchg
push
test
enter
inc
inc
dec
xchg
or
fcoml
mov
xor
test
addr16
ja
movb
les
ja
out
mov
inc
cmp
fmull
fcoml
mov
imul
imul
dec
jp
sub
cmp
ret
xor
jne
fdivs
sti
aaa
cmp
test
iret
inc
and
addr16
mov
in
icebp
shl
or
stos
fistpl
or
add
neg
lea
shl
hlt
dec
jp
negl
testl
jecxz
shrl
imul
sbb
imul
mov
movsb
xor
sbb
adc
mov
add
hlt
xor
ficompl
add
lock
imul
adc
jns
jb
xchg
add
cmp
jae
neg
and
imul
push
in
int
or
loopne
xorb
add
dec
or
ja
cld
add
push
movsb
std
hlt
icebp
or
or
xor
sub
cltd
std
and
add
mov
inc
mov
in
mov
in
cmpsb
jp
lea
xor
inc
xchg
test
fnstenv
rolb
les
js
scas
xchg
xor
loop
xchg
mull
sbb
push
mov
add
stos
std
test
or
lret
lret
lret
sbb
inc
pop
push
sti
neg
fidivrl
movsb
mov
es
lds
bound
sbb
sarb
cmp
push
pop
or
mov
pop
jb
xchg
out
add
out
pop
fnstenv
imul
scas
pop
lret
push
sti
adc
sub
cs
flds
mov
mov
aaa
ljmp
dec
pop
loopne
cmp
push
mov
add
pop
test
or
test
add
imul
xchg
push
das
lods
popa
lock
cmpsl
movsl
fwait
lods
cmp
jp
push
cli
push
xor
lock
or
into
jns
or
mov
cltd
movsl
or
sbb
test
imul
rcrl
pop
fs
inc
sbb
cmpsl
repz
lahf
sahf
imul
push
and
lock
sbb
pop
pusha
and
inc
xlat
inc
and
in
test
push
add
or
ret
rolb
aam
inc
pushf
rolb
push
sub
jne
push
out
scas
clc
pop
dec
jo
sbb
clc
sbb
shr
dec
dec
inc
mov
xchg
jle
adc
push
cmp
mov
lods
cmc
jge
loopne
loope
repz
add
jl
movsl
pop
sbb
imul
xchg
or
or
pop
add
nop
or
movsb
stc
pop
push
or
pop
adc
add
mov
xchg
inc
inc
lcall
call
popa
add
ja
xchg
shll
ret
cld
or
add
cmpsl
jae
mov
sahf
and
or
push
xchg
xchg
inc
int
sbb
xchg
adc
cmp
mov
addl
inc
inc
lods
mov
hlt
out
data16
lods
inc
adc
pop
xchg
add
pop
in
hlt
or
inc
xor
push
ficoml
and
cmpsb
sub
adc
adcb
jo
cld
data16
pusha
pop
or
jmp
fwait
ret
inc
sbb
sbb
push
js
add
call
adc
loopne
je
xor
mov
mov
test
stos
outsl
dec
movzbl
shl
inc
or
add
jns
adc
bound
inc
add
pop
mov
fmuls
out
mov
sahf
inc
mov
mov
mov
add
in
jmp
or
inc
add
ret
mov
push
push
add
sbb
sbbl
cmpsb
leave
bnd
jb
movsb
jbe
or
stos
dec
rolb
jg
cli
dec
mov
and
sub
xchg
sub
outsb
testl
mov
jmp
rclb
adc
push
inc
add
and
shlb
sar
test
lahf
sub
pop
fisubs
push
in
inc
push
adc
push
add
mov
xchg
inc
ds
adc
jmp
rorb
pop
and
sbb
mov
add
jg
jp
cmpsl
cmp
mov
shrb
xor
imul
cltd
ljmp
push
pop
cmp
jle
dec
add
push
enter
inc
pop
jl
notl
mov
add
add
pop
push
dec
pop
inc
push
push
addb
mov
pop
lods
and
push
cmpb
rolb
enter
lods
test
sti
test
or
adc
test
or
jge
add
or
and
movb
lar
dec
clc
push
je
inc
ss
adc
out
leave
add
in
xchg
mov
or
or
inc
jno
loopne
and
xchg
into
push
fisttpl
daa
sbb
leave
nop
test
add
cmc
cs
stc
xchg
jnp
testb
cmp
xchg
push
out
add
insb
leave
jns
cmp
sbb
cmp
add
mov
fs
or
pop
daa
xor
enter
nop
mov
and
inc
rcrb
and
pusha
adc
sub
adc
faddp
call
dec
aad
cmc
or
dec
daa
dec
jae
pusha
sub
idiv
popa
testl
xchg
jno
loop
subl
rorb
cltd
sub
push
xor
push
mov
fimull
pusha
xchg
add
aas
xor
inc
mov
mov
or
add
sub
dec
push
pop
roll
jle
bound
icebp
cmp
int
push
and
inc
push
sbb
and
cmp
sbb
sbb
ficomps
and
sbb
sbb
push
xlat
adc
push
ffree
and
enter
and
enter
es
pop
jo
sbb
andl
ss
sbb
jmp
mov
adc
xchg
in
fs
shl
xor
jge
jno
je
pop
or
adc
jae
movsb
sub
jo
sub
gs
xchg
loope
or
or
orl
and
add
push
movsl
addl
push
lret
xor
clc
or
push
ret
push
mov
mov
xor
jmp
arpl
out
adc
in
int
pop
sbb
aam
cmovno
jecxz
jo
mov
inc
sub
pop
xor
call
dec
adc
cmp
cmp
popa
or
sbb
pushf
mull
pusha
push
inc
sub
fld
jmp
add
push
inc
xor
enter
xchg
dec
push
jg
xor
mov
dec
lds
sti
sbb
mov
pop
fwait
lret
popf
and
add
test
cmp
js
popf
add
jae
aaa
adc
cmc
pop
dec
sbbl
inc
push
inc
mov
mov
sub
inc
adc
xor
js
sbb
les
adc
pop
add
dec
pop
jbe
int
add
mov
fldcw
sbb
dec
cmc
lods
pop
or
adc
or
imul
or
test
mov
push
or
mov
vunpckhpd
mov
or
inc
pop
mov
or
cmp
and
lods
sbb
adc
sahf
or
movsb
ror
insl
xchg
dec
loop
pop
jge
xchg
push
and
nop
push
repnz
add
jmp
mov
add
mov
or
mov
cs
inc
add
inc
mov
mov
mov
mov
adc
loope
lret
jge
add
add
jb
out
sbb
inc
adc
dec
push
movsb
sbb
dec
add
jb
nop
jbe
fdivrl
cli
cmp
mov
mov
fdivp
mov
mov
dec
pop
mov
in
add
xor
ret
xchg
pop
fisubrl
push
std
das
or
loope
enter
mov
mov
cmpb
add
ja
xchg
sub
jl
dec
add
mov
insb
addr16
push
inc
imulb
jge
inc
out
into
in
mov
repnz
and
jno
fistl
pop
or
call
or
aas
dec
or
fiaddl
or
adc
sub
inc
cmp
and
adc
insl
jb
or
dec
push
add
loop
push
mov
sbb
adc
pop
xchg
or
add
adcl
jl
sbb
add
mov
dec
scas
popf
nop
imul
jmp
xor
mov
ret
mov
push
pop
xlat
in
and
inc
cs
cmp
stc
or
lret
out
ror
test
add
sbb
adc
pushl
jl
addb
add
es
out
and
or
or
jb
inc
jns
sbb
mov
adc
mov
lcall
shl
js
pop
mov
xlat
je
xchg
js
stos
pop
xchg
or
ficoml
icebp
add
int3
push
jl
ret
and
pop
mov
loope
xchg
xchg
les
lea
sub
pop
inc
pop
add
inc
or
lods
jle
xchg
pop
xchg
jb
xor
sub
mov
in
dec
or
inc
test
pop
aam
inc
xchg
jle
or
push
das
adc
adc
inc
and
mov
dec
aaa
movsl
fwait
fldl
inc
scas
sar
and
pusha
push
pop
and
dec
cltd
dec
andl
lock
jo
xor
sbb
imul
call
pop
js
adc
pop
rorb
cwtl
adc
fistl
lock
mov
push
adc
adc
and
mov
imul
js
xor
pusha
adcb
sbbl
cmpb
mov
cmp
mov
sub
dec
add
mov
xor
mov
pusha
loop
test
push
inc
lahf
or
sub
pop
insb
test
or
sub
aam
aas
nop
ficomps
pop
hlt
shrb
add
in
out
mov
sub
xor
jmp
arpl
jno
fstpt
mov
lock
imul
pop
jo
cli
push
adcb
add
mov
fs
fldpi
or
sti
add
and
dec
inc
fwait
addr16
adc
test
dec
cmp
sub
dec
icebp
cmp
arpl
jmp
mov
xchg
xlat
clc
pusha
rcrl
or
push
push
add
or
adc
scas
call
add
mov
jmp
mov
mov
aad
inc
xor
sub
xor
pop
adc
xor
dec
notb
inc
sub
scas
or
xor
int3
imul
sahf
rorb
sub
leave
scas
or
jae
cs
pop
in
dec
inc
push
or
adc
push
inc
dec
xor
in
xchg
pop
test
xchg
test
adc
cltd
adc
lods
cmp
xchg
jge
lahf
inc
pop
push
movzbl
inc
dec
cmp
in
cmc
push
incl
or
add
dec
jne
dec
je
mov
cltd
dec
pop
lds
push
or
ja
push
sub
in
lock
inc
je
lock
mov
push
jo
push
imul
xor
mov
fidivs
pop
dec
xor
push
lds
mov
mov
or
inc
cmp
inc
lret
add
xchg
adc
add
xchg
repnz
arpl
jo
add
imul
scas
pusha
cmp
pop
fadds
or
mov
ficomps
adc
pop
push
inc
add
mov
jge
pextrw
inc
ret
pop
or
or
test
add
sbb
lock
negb
sub
fsubrs
cmp
jp
push
cmp
int
mov
or
sahf
pop
sbb
mov
push
test
gs
notl
xchg
or
add
sbb
mov
in
fcoml
adc
jp
mov
cvtps2pd
jge
push
sub
icebp
pop
dec
xchg
lahf
es
sahf
fildl
add
dec
lds
bound
es
dec
jno
inc
sub
pop
mov
inc
sbb
icebp
popa
cmpsl
jo
insl
sub
js
sub
mov
xchg
mov
cmp
jmp
test
pop
daa
in
and
pop
inc
test
xchg
cmp
or
pop
xor
fisttps
mov
pop
rcl
popa
aas
mov
sbb
lret
pop
pushf
subb
adc
inc
jne
cmpsb
pop
leave
xor
dec
and
push
mov
jg
adc
push
je
in
push
or
push
mov
addr16
sub
xor
sbb
popa
xchg
push
adc
adc
push
dec
imul
shrl
mov
or
frstor
mov
add
jns
xor
cmp
sarb
jl
sub
mov
movb
imul
add
pop
pop
mov
jne
sub
or
jg
hlt
sbb
sbb
push
sbb
add
pop
cs
xor
mov
xchg
sub
push
dec
push
cmp
in
cltd
mov
or
push
nop
pop
xchg
inc
sbb
or
sbb
pop
aaa
add
mov
adc
rclb
mov
movsl
or
shlb
mov
or
insb
faddl
pusha
mov
rolb
jl
aas
and
out
adc
mov
or
mov
nop
pop
dec
cwtl
mov
pop
sub
pushl
sub
cmp
jge
mov
imul
inc
adc
xor
pop
mov
es
jge
or
and
pop
je
inc
add
jno
add
or
les
lahf
add
adc
mov
bound
in
mov
outsb
mov
pop
mov
xchg
aad
push
cltd
adc
adcb
jbe
call
pop
fyl2xp1
push
subb
inc
les
xchg
movsl
inc
lcall
mov
add
js
ret
icebp
add
mov
aaa
mov
adc
outsb
push
push
pop
dec
js
movsl
dec
lea
adc
lea
pusha
cmp
sbb
xchg
pop
sbb
mov
sbb
push
insl
popa
mov
cmc
mov
inc
pop
or
outsl
xor
fadds
and
and
jl
xchg
add
push
mov
lds
test
stos
or
cmp
enter
orb
jle
daa
inc
stos
imul
and
xor
pop
outsb
jns
cltd
adc
je
and
jo
and
or
sbb
push
dec
fistps
mov
outsl
pop
in
es
mov
sbb
js
js
nop
pop
sbb
xor
xor
sbb
mov
inc
popa
fwait
out
and
add
aas
cwtl
movsl
jns
or
adc
mov
lahf
xchg
mov
cmp
or
adc
add
lea
sub
add
add
movsl
test
pop
imull
xor
aad
test
dec
add
cmp
mov
and
ljmp
push
dec
sub
cmp
mov
movl
lock
push
rorb
cmp
sbb
and
mov
int3
pop
lret
aam
addr16
xor
sbb
inc
movsl
fs
fs
mov
daa
mov
enter
leave
mov
imul
ret
sub
and
adc
adc
jnp
add
shl
cs
clc
xor
xor
sub
popa
inc
lock
shlb
inc
stc
add
loopne
loope
jno
repz
or
pop
adc
sti
lods
xchg
sub
dec
adc
arpl
sbbb
dec
mov
ja
add
sub
push
inc
nop
arpl
fs
fs
xor
pop
int3
push
int3
add
adc
cmp
mov
dec
add
int3
mov
mov
dec
pop
mov
int3
movsl
je
and
adc
movsb
mov
arpl
cld
and
and
js
inc
in
mov
jnp
jle
fidivrl
aas
push
add
ds
push
aam
mov
mov
sub
xor
cmpsb
shlb
rcl
add
aam
adc
pop
insl
in
xchg
icebp
and
cmpsb
cmp
inc
and
imul
and
mov
sbb
in
add
pop
pusha
mov
fldcw
shlb
aaa
ja
jmp
inc
or
adc
stos
mov
and
mov
and
pusha
lods
pop
daa
and
inc
push
jle
or
or
pop
pusha
es
lds
pop
pusha
xchg
imul
popa
jnp
daa
dec
or
je
dec
dec
out
adc
xor
leave
fadds
insb
jae
sub
dec
loopne
adc
jns
sarb
inc
and
fstps
inc
push
add
popl
or
sbb
leave
add
in
movsl
in
add
test
sbb
and
andb
cmp
popa
inc
sub
dec
dec
fs
stos
movsb
movsb
pop
cld
dec
test
test
mov
mov
bound
mov
or
movsb
or
inc
mov
rolb
sub
shll
fsubp
add
ja
orb
idivl
in
mov
test
imul
jl
pop
ret
push
aas
std
lret
add
sbb
std
cmp
mov
sub
mov
pop
inc
loope
sti
cmpl
out
add
xchg
jge
inc
insb
jge
js
andl
jg
arpl
fucomi
dec
loop
insl
jg
mov
add
or
push
jo
add
jnp
in
sbb
or
js
jmp
inc
xlat
loopne
je
fisubl
or
mov
outsl
inc
mov
jle
jle
aam
testl
incl
jne
inc
push
sub
cmpl
testl
add
or
and
or
mov
mov
and
adc
jge
add
mov
dec
xor
scas
mov
inc
je
dec
and
aas
mov
or
mov
test
das
movsb
add
adc
and
or
mov
push
sub
imul
add
daa
pushf
sub
cmpb
xor
popl
add
test
rorl
push
pop
dec
add
fbstp
shrl
add
cmp
adc
test
sub
add
pop
es
adcl
jnp
sub
dec
loop
pop
sbb
adc
or
adc
mov
xchg
jge
xchg
clc
or
jmp
mov
xchg
cld
sbb
stc
fsubl
jb
mov
and
leave
and
sbb
or
aaa
push
data16
add
test
push
adc
push
push
bound
not
push
mov
dec
cmp
fdivrl
mov
pop
mov
inc
roll
cld
dec
sub
out
and
mov
sub
sbb
leave
inc
or
xchg
je
leave
xchg
sbb
je
arpl
inc
lods
add
cmp
push
addl
pushf
sbb
js
mov
push
call
and
and
xchg
jnp
xor
push
mov
stc
jmp
dec
sbb
xchg
mov
fstpt
xor
adc
mov
rcr
pop
sub
pusha
das
add
daa
xorb
xor
mov
mov
jns
addr16
add
add
std
pop
and
mov
cmp
adc
pop
lds
xchg
in
push
scas
cmpl
push
ret
sbb
mov
dec
and
in
jb
cmc
mov
mov
push
or
jne
pop
inc
and
jne
mov
adc
pop
or
sbb
mov
fcoml
in
fstpt
xchg
push
cli
and
cmpb
addl
in
pop
adcl
pop
shl
push
ret
and
mov
int3
pusha
subl
sbb
dec
dec
pop
ret
add
das
aaa
fdivrs
sbb
lahf
xchg
pop
adcb
fldenv
or
dec
dec
inc
mov
and
and
sub
fwait
adc
nop
ss
orl
mov
or
sub
enter
xor
push
push
inc
subl
aas
sbb
lods
es
add
scas
andb
dec
out
sbb
push
cmp
aaa
mov
test
sub
adc
sar
xchg
xchg
ficoml
mov
sbb
cmpsl
hlt
add
sub
inc
test
pop
pop
imul
sbb
sbb
add
test
cmp
adc
inc
xor
inc
sbb
adc
cmp
test
pop
mov
sbb
sub
add
loop
add
jle
ret
mov
dec
push
mov
mov
imul
ljmp
push
inc
add
dec
test
xor
sbb
popa
pop
mov
pop
cltd
loop
loopne
or
orl
and
cmpl
mov
les
in
mov
std
rolb
add
clc
dec
sub
std
lea
dec
bound
adc
call
jle
xor
add
mov
shlb
inc
adc
pop
dec
or
jmp
or
cwtl
mov
movsb
sbb
xor
push
in
inc
mov
push
xchg
les
fistps
xor
xor
dec
sbb
or
decl
aad
jmp
adc
pop
cwtl
lret
fadds
pop
test
iret
jae
xor
inc
dec
add
pop
fsubrs
and
ljmp
adc
or
jl
addb
lea
inc
fs
xor
jecxz
mov
and
lret
and
in
lea
clc
dec
mov
inc
push
mov
cwtl
sbb
adc
movsl
aaa
aam
pop
adc
ljmp
ret
ret
shlb
inc
jne
stos
jl
aaa
nop
aaa
mov
xlat
sbb
enter
test
and
adc
push
in
sahf
push
mov
dec
popa
fisubrl
das
mov
mov
sbb
mov
out
mov
rcrb
mov
cmpsb
addr16
push
inc
orb
fs
outsl
pop
orb
mov
mov
or
dec
and
pop
and
shll
mov
cs
pusha
and
jns
mov
sub
shll
jg
xor
mov
dec
and
sbb
int3
add
mov
fmuls
nop
ja
je
test
xlat
adc
or
stos
ljmp
loopne
je
mov
push
outsb
jmp
ret
mov
aaa
jle
add
jge
data16
movsb
sbb
adc
fstpl
mov
in
insl
push
mov
cmpb
ret
test
or
rcrl
push
or
cwtl
loopne
mov
or
jge
fwait
cmpsb
insl
loope
int
je
cmp
adc
xchg
fiadds
jns
adc
fs
and
or
inc
sbb
pusha
std
popf
xchg
sbb
xor
sub
xor
xor
xchg
inc
clc
bswap
push
pop
mov
or
in
loopne
cmpl
shll
jae
add
mov
add
daa
js
inc
dec
mov
push
daa
jne
push
add
out
dec
and
cmp
and
xor
gs
or
pop
adc
mov
adc
or
add
out
pop
popa
insl
sbb
or
sub
jb
and
mov
inc
aam
and
mov
push
xchg
cmp
dec
sysenter
cmp
inc
call
push
and
cs
mov
xor
andb
pop
xor
adc
xchg
cmpsb
and
jbe
mov
pusha
fmull
xchg
mov
xchg
mov
xchg
or
lds
mov
bound
or
mov
push
call
lds
pop
cmc
or
jno
pop
dec
mov
mov
ja
sbb
mov
icebp
add
xor
sahf
and
jo
aas
je
movl
cmp
adc
ret
jno
loop
mov
cmp
inc
sub
jmp
cmpsb
into
mov
adc
adc
mov
mov
das
bound
dec
inc
inc
rclb
pop
cwtl
insl
push
jl
outsl
pop
or
lea
negl
stc
cmpsl
ret
pop
int3
jne
add
mov
pop
sbb
sbb
cmp
loopne
xchg
cmp
adc
add
testb
cmp
jg
push
push
aaa
test
test
aaa
add
pop
xor
and
push
roll
in
jnp
sub
aam
das
or
jge
pop
fisubl
pop
jl
and
imul
cmp
jg
mov
sbb
rcrl
sub
insb
sub
pop
pop
mov
inc
jmp
pusha
add
add
adc
sbb
insb
jge
mov
lea
sbb
push
and
cli
dec
add
fbld
testb
and
add
imul
pop
adc
lea
push
jg
push
cmp
jo
sbb
cmp
and
sub
mov
test
sbb
inc
loop
dec
push
repnz
lods
mov
mov
mov
popa
inc
mov
adc
jne
push
rorl
jns
repz
push
push
mov
imul
mov
sbb
cwtl
pop
imul
fidivrs
sarl
inc
iret
push
pop
push
xchg
sub
sub
mov
xor
push
ret
add
jne
arpl
mov
fmul
add
jo
mov
int3
xor
insl
lods
lea
inc
rorb
js
jno
pushf
mov
jecxz
pop
inc
sub
adc
cmp
testl
add
shl
add
mov
adc
mov
add
imul
sbb
sbb
cmp
pop
rorb
push
jmp
gs
or
stos
outsl
dec
and
imul
loopne
adc
jns
movsl
stos
lods
inc
inc
dec
xchg
cmp
movsl
pop
stc
addr16
arpl
pop
and
lock
arpl
add
imull
cmpsb
add
mov
fs
add
or
mov
ret
or
jae
inc
jecxz
inc
dec
mov
sub
or
jmp
push
jno
pop
or
icebp
mov
dec
cwtl
adc
inc
sub
and
daa
adc
inc
add
or
adcl
leave
inc
add
pop
sbb
lock
stos
mov
data16
cmp
sbb
cmp
mov
pushf
adc
orl
or
cmpsb
cmp
sbb
ds
int
xor
jno
xor
ds
inc
ds
add
push
fs
dec
dec
lea
mov
or
adc
or
jge
sub
in
or
or
push
and
mov
test
mov
outsb
mov
incl
jnp
lds
push
rorl
aam
rcrb
mov
adc
jmp
cwtl
and
stc
dec
sbb
dec
sbb
or
add
rcr
arpl
or
in
pop
mov
das
push
fadds
dec
jns
dec
sub
sahf
xchg
xor
test
imul
dec
test
movl
cmpl
sbb
inc
fcomps
mov
aam
add
xchg
cmp
xor
jae
sahf
and
dec
adc
cltd
aaa
push
or
or
jnp
mov
mov
mov
push
cmp
jmp
out
or
xor
xor
and
push
ret
cmp
adc
lock
jmp
xor
xchg
pop
add
scas
int3
outsl
cltd
push
sbb
mov
flds
cmp
sbb
add
rcrl
xchg
fimuls
loop
mov
or
or
std
mov
adc
ljmp
xor
mov
xor
stos
sarb
nop
jmp
rolb
mov
push
addr16
jmp
push
push
push
pop
add
adc
sti
dec
jne
inc
inc
incl
push
cs
or
and
cmp
add
adc
push
arpl
sbb
pop
mov
and
xchg
cmp
stos
push
mov
test
sahf
js
dec
jecxz
push
dec
inc
lret
stos
ja
inc
pusha
addr16
imul
adc
push
jmp
inc
and
inc
and
cmp
mov
push
cmp
and
push
push
dec
popl
test
sahf
in
and
cmpsl
dec
and
mov
call
mov
add
fucomip
sbb
sti
mov
call
into
cwtl
test
or
inc
xor
add
lret
aaa
jbe
push
pop
mov
xor
push
and
dec
xor
xchg
gs
daa
and
inc
xchg
dec
add
adc
ret
mov
push
lea
xchg
mov
dec
lds
int
push
mov
add
xchg
add
dec
add
sub
addr16
movsb
test
push
cmp
hlt
xchg
cli
mov
gs
push
insl
mov
sbb
pop
sti
enter
mov
fisttps
dec
js
pop
jne
repz
push
in
out
stc
or
dec
fimuls
pusha
pop
push
sbb
inc
push
in
out
or
dec
add
nop
adc
jae
jecxz
jmp
push
addl
push
and
push
pushf
xor
push
addb
pop
ja
shll
js
add
or
sub
mov
in
xor
mov
mov
dec
mov
sbb
dec
hlt
adc
subl
in
dec
lock
arpl
jmp
dec
add
andl
push
dec
sbb
and
sub
lods
adc
jmp
jmp
push
cs
push
fcmovnb
cmp
xor
xlat
les
inc
enter
cmp
jle
inc
loopne
sbb
lahf
cmp
mov
push
cmp
or
popa
mov
mov
xor
inc
xchg
movhps
xor
adc
in
lret
mov
cmp
test
cmpsl
fcmovnu
mov
mov
cmp
push
aaa
rorb
push
imul
in
je
jne
xchg
fimuls
aam
inc
and
cltd
ss
dec
sbb
xor
add
pop
push
fistl
dec
push
add
imul
icebp
or
xor
mov
cli
pop
mov
or
or
decb
dec
xor
pop
mov
inc
fsubl
adcb
stos
in
push
add
fstenv
or
fstps
jno
ret
rcll
lcall
sarb
dec
or
add
cmp
mov
sets
inc
mov
les
mov
scas
outsb
ljmp
pop
adcl
add
mov
rcll
inc
and
adc
mov
push
sub
adc
or
in
aam
adc
mov
xchg
pusha
stos
adc
in
pop
js
inc
nop
add
jmp
pop
inc
xor
push
popf
xor
or
mov
leave
sbbl
stos
addb
adc
jae
mov
fs
push
add
cmp
mov
and
cwtl
add
or
cwtl
adc
xor
add
test
push
and
das
pop
dec
adc
push
adc
or
inc
dec
adc
add
movsb
add
incb
test
lods
cmp
sub
dec
add
shll
test
jb
dec
push
jae
sbb
faddl
push
das
movsl
adcl
sbb
xchg
nop
xor
sub
into
add
push
call
xor
mov
xor
cmp
add
aad
inc
inc
inc
imull
mov
lods
adcb
add
xor
imul
or
cmp
dec
dec
jge
or
dec
arpl
sbb
xchg
sahf
fcompl
ret
or
cwtl
mov
movsl
rcrl
and
adc
lock
shrb
adc
jne
jbe
sbb
adc
dec
mov
mov
mov
cmp
out
aaa
out
inc
xor
mov
repz
cmp
enter
pop
mov
jno
jo
rcr
cli
add
cld
dec
lock
mov
and
sbb
sbb
lods
daa
sti
dec
daa
idivb
and
les
or
lret
mov
sbb
inc
adc
add
add
jo
jmp
mov
sbb
inc
jbe
lret
sub
xchg
inc
lcall
sub
arpl
xchg
push
mov
movsb
or
pop
je
and
xchg
sbb
test
add
lea
cmp
popa
bound
dec
inc
push
inc
mov
pop
and
data16
loopne
dec
cmp
pop
je
sbb
mulb
jae
imul
sub
pop
aas
sub
jae
mov
adc
stos
jp
imull
sub
movsb
repz
fcoml
mov
mov
inc
sbb
rcrl
fwait
sub
cmp
and
sub
or
pushf
mov
mov
dec
inc
or
adc
imul
xchg
sbb
mul
add
lock
push
jle
mov
xchg
or
icebp
sub
and
adc
loopne
push
adc
test
mov
add
jp
cmpsb
and
gs
sub
jo
shr
dec
adc
out
test
les
mov
popa
sub
fwait
and
push
fldl
sub
aas
inc
cmp
data16
fadds
mov
lock
aam
inc
lock
lds
add
mov
sub
jp
rcl
jle
pop
inc
xchg
out
inc
sbb
cmp
jecxz
insb
or
mov
push
adc
push
cs
or
dec
or
in
leave
inc
enter
adc
mov
or
repnz
or
push
loop
or
and
sbb
leave
sbb
and
pop
leave
adc
and
enter
mov
incl
sub
and
or
lods
adc
mov
subb
inc
je
xor
pop
inc
and
adc
outsb
addl
add
pusha
fadd
mov
add
mov
push
addl
add
sbbl
mov
mov
jle
adcb
add
test
pop
cmp
lret
mov
cmovbe
and
pop
das
sbb
lahf
mov
lock
push
or
stos
cltd
ret
adc
dec
mov
jg
cmp
xchg
loop
fs
jmp
mov
mov
sub
imul
inc
pop
es
xor
or
inc
jb
faddl
cld
jo
sub
out
adc
rol
mov
xchg
sbb
lea
fisubs
popa
jge
sbb
out
adc
loop
jge
loopne
ret
addr16
lock
call
mov
imul
imul
sbb
leave
add
fimuls
daa
ret
push
pushl
xchg
into
aas
adc
cld
sahf
cmp
xchg
xchg
sbb
xchg
mov
xor
sbb
sar
adc
fiadds
test
add
or
xchg
call
scas
xchg
or
fcom
dec
lock
movsl
inc
mov
mov
repnz
sbb
dec
insl
sahf
js
and
add
int
sbb
movsb
mov
insb
popf
sbb
pop
and
pop
fcoms
arpl
add
xor
or
lock
in
sub
fadds
push
scas
xlat
rcll
in
lock
enter
scas
mov
loop
jecxz
cld
pop
sub
pop
mov
pop
sub
into
add
sti
xor
push
sti
sbb
and
xchg
pop
adc
cmpsl
fcoml
mov
loopne
lahf
clc
or
out
cmpsb
sbb
sbb
add
pop
adc
push
sahf
dec
cld
bound
sbb
and
repnz
xor
adc
xchg
lock
or
movsb
xor
jge
rcrb
adc
lods
roll
iret
mov
xor
jae
and
inc
xchg
faddp
inc
push
mov
cld
jl
add
aaa
imul
and
or
mov
xchg
pop
lds
sub
or
add
or
jl
pop
sti
es
test
fildl
pop
pop
rcrb
pop
push
push
xchg
or
mov
xchg
and
xchg
fistpl
xchg
and
aaa
or
notb
mov
mov
nop
push
cld
sub
add
and
pop
mov
mov
add
nop
arpl
pop
cltd
push
push
push
pushf
cltd
add
adc
add
andps
add
push
sbb
into
inc
imul
jne
push
add
out
hlt
cwtl
xchg
push
mov
or
dec
jno
push
push
std
cld
daa
pop
pushl
testb
add
inc
add
adc
or
inc
cmp
popa
and
sbb
addb
ret
cmp
inc
mov
sbb
stos
sbb
pop
add
ljmp
mov
or
or
enter
call
lsl
dec
iret
jge
jo
pushf
call
bound
mov
push
ror
jb
fistl
test
adc
jbe
cmp
sbb
call
sbb
jb
incb
adcb
push
pop
push
in
ja
mov
in
push
cmp
sbb
pop
test
mov
or
jmp
adc
aam
cmp
fdivl
fmuls
jae
ljmp
daa
retw
push
jmp
fcom
jbe
aas
or
mov
add
inc
inc
push
jl
inc
dec
jl
cld
loopne
adc
shrb
jge
mov
les
add
cli
sti
pop
add
jb
cmp
add
jge
dec
sbbb
int3
pusha
push
imul
es
mov
or
push
mov
iret
mov
mov
mov
sub
ds
leave
or
lss
mov
loopne
pop
arpl
xchg
dec
nop
outsl
jno
mov
adc
mov
call
xor
loopne
ret
mov
adc
mov
sbb
cmc
js
fildl
jbe
icebp
inc
fwait
icebp
add
sti
pop
cmp
jb
push
loop
ret
cs
add
jg
jg
and
or
lock
sbb
call
sub
sub
sbb
push
add
jnp
pop
inc
inc
sbb
or
or
ret
xor
out
inc
rcrl
inc
or
add
mov
dec
icebp
lea
push
pop
icebp
add
ds
adc
lea
and
jnp
jl
stos
sub
inc
stc
shlb
inc
mov
xchg
jb
cmpsb
mov
sbbb
mov
jbe
or
fnstsw
add
sbb
and
sbb
mov
cld
mov
sub
jns
and
or
and
add
cmp
js
push
adc
dec
pop
cmp
addr16
mov
test
mov
and
imul
sti
jle
jmp
movl
loopne
inc
add
and
mov
divb
sub
jmp
sub
or
adcb
push
jp
sbb
add
jle
loopne
adc
decl
xchg
dec
imul
add
pushf
sbb
jo
fsubs
dec
inc
and
mov
mov
dec
bnd
pop
dec
or
cltd
push
inc
pushf
jno
cwtl
inc
dec
sub
call
dec
ret
cmpsb
jmp
pop
aam
dec
clc
out
and
jns
adc
fisubl
xor
jns
sbb
add
or
jb
adc
int3
shlb
rcl
xchg
in
add
das
xor
cld
cmp
shll
adc
mov
mov
inc
stc
and
in
add
int
adc
xor
repz
or
mov
mov
push
add
mov
stc
xlat
jmp
xor
ljmp
dec
ror
out
jbe
aad
mov
mov
imul
int
stos
ja
cmpsl
sub
jne
imul
add
int3
push
lahf
ret
xchg
dec
xor
sbb
sub
mov
out
test
orb
rclb
out
xchg
nop
push
push
mov
add
jae
jns
ss
popa
jae
cmp
or
jnp
jl
sub
adc
pop
stos
or
data16
sub
adc
jl
rolb
test
jbe
xor
sbb
insb
add
shll
adc
and
inc
and
dec
shrb
sbb
loopne
int3
leave
call
xor
aam
xchg
movl
xlat
sbb
jne
xor
adc
push
arpl
rcrb
pop
enter
mov
andb
pop
push
or
or
mov
rcrl
xchg
mov
std
pop
mov
ret
cltd
inc
push
push
out
pop
dec
cmp
or
testb
jle
sbb
lods
mov
sti
ljmp
hlt
push
mov
adc
push
fistps
cmp
fcmovbe
fbld
lahf
mov
and
addl
jl
ret
inc
loope
xchg
and
jne
adc
sbb
int
out
xchg
lea
sbb
cwtl
add
add
push
clc
fs
or
shlb
nopl
or
js
popf
and
or
sbb
orl
inc
inc
iret
pop
and
sbb
xor
pop
mov
pop
jnp
or
xor
addb
pushf
adc
dec
cmpb
pop
ret
in
stc
andb
mov
push
cli
gs
nop
push
add
shlb
pop
leave
cmp
push
popa
cmp
adc
scas
dec
and
jl
enter
mov
push
add
inc
dec
push
rcrb
orb
sub
add
xchg
lea
andb
cmc
in
adc
enter
jbe
aaa
jbe
or
push
ds
call
mov
sarl
sti
jg
sarb
sub
cmp
pusha
lahf
push
sub
roll
add
jecxz
test
data16
jge
sbb
loop
stos
lcall
hlt
pop
fs
test
and
in
sub
or
sahf
or
mov
repz
fstps
sub
mov
in
fsub
in
dec
fcom
aam
dec
dec
mov
ror
or
dec
cs
dec
mov
test
cmpsb
jbe
gs
outsl
mov
popf
int3
jnp
dec
add
add
mov
push
pop
in
rol
add
repz
adc
inc
mov
call
and
jmp
addb
mov
aad
pop
mov
mov
xchg
lods
mov
out
fs
jmp
pop
fs
pushf
or
xchg
mov
dec
inc
or
xor
sbb
add
add
out
das
rcrl
dec
sbb
jl
jnp
inc
push
inc
cmp
mov
ret
in
loope
pop
das
faddp
aas
fsubs
in
push
jmp
adc
jmp
xor
jmp
dec
cmp
outsb
adc
add
dec
inc
xor
jg
add
inc
in
pop
stos
add
nop
jo
jmp
adc
add
pop
rcpps
loopne
fdivs
lea
push
mov
adc
sub
sbb
xor
adc
push
lcall
mov
cmp
pop
pop
or
pop
sub
out
or
inc
xor
mov
outsl
sub
push
mov
xchg
cmp
cmpb
js
rolb
and
dec
loope
push
ret
daa
fnstsw
mov
cmp
push
push
sub
dec
stc
fwait
or
faddl
sbb
jno
push
inc
enter
inc
shr
inc
push
pop
stc
xlat
imul
jne
jcxz
push
je
jnp
out
mov
int
out
jae
jmp
jl
rol
ja
inc
push
leave
lcall
adc
mov
mov
fs
adc
fimull
dec
enter
scas
adc
subl
and
cmpsl
nop
jge
fistpll
fnstcw
mov
xlat
ss
cmp
mov
aas
sub
xchg
ljmp
push
nop
stos
sbb
comiss
pop
loopne
xchg
or
fs
fcmovnb
orb
and
and
dec
adc
dec
inc
ja
mov
and
jg
out
clc
jne
testl
dec
movsl
xor
imul
add
mov
mov
pusha
fldt
mov
sbb
insl
xchg
in
fstpt
sub
ret
adc
lea
mov
and
xchg
in
pop
inc
and
jmp
jcxz
xchg
je
in
popf
xchg
and
lahf
push
mov
mov
xchg
mov
or
shll
mov
nop
or
mov
push
cmpb
in
sbb
jmp
lea
cmpsl
xorl
mov
shrb
adc
mov
pop
popa
adc
sub
cmp
int
sbb
rcr
or
fdivr
daa
aam
cmp
inc
jle
cmp
jle
enter
mov
adc
fsub
xchg
fdivp
fcmovne
dec
andb
lock
cmp
inc
les
and
sub
push
mov
mov
and
aas
mov
popf
dec
pop
decl
test
inc
and
out
ret
push
fcomps
scas
cwtl
jo
add
mov
js
les
jmp
mov
stos
inc
adc
cmp
jbe
dec
jne
xchg
jnp
dec
div
cmp
xchg
shlb
mov
inc
push
cmp
sbb
pusha
inc
fadds
pop
push
inc
mov
cmp
jg
push
inc
jnp
inc
add
jge
neg
add
pop
pop
add
loope
not
pop
or
aas
mov
jb
pop
or
sub
bound
inc
sub
cmpsb
outsb
popa
add
inc
shrl
cmp
sbb
jle
push
fs
sbb
ret
add
jns
rcll
testb
add
sbb
mov
call
insl
fwait
mov
addl
add
sbb
dec
lret
xor
xor
jnp
inc
arpl
adc
sbb
mov
xchg
mov
jmp
cli
lahf
test
inc
mov
shlb
fdivr
fldl
cs
out
mov
ficoml
xchg
and
sar
addr16
push
mull
mov
push
subl
addr16
sbb
lcall
add
lds
sub
movsl
dec
add
or
mov
push
or
sahf
push
mov
test
jmp
std
js
jg
xor
outsb
shrb
sbb
jge
negl
sbb
or
test
xchg
mov
out
mov
jle
loop
inc
add
xor
repz
adc
xchg
lock
outsl
or
fldenv
mov
fdivl
cli
and
outsl
iret
aas
add
adc
aad
sbb
mov
call
or
sub
lcall
sahf
ds
and
xor
mov
cmp
iret
jne
fwait
or
lcall
negb
addb
icebp
fstps
mov
adc
mov
pop
out
jae
xor
mov
cmp
add
arpl
jbe
and
adc
aaa
adc
cwtl
fwait
inc
outsb
push
cmp
mov
add
in
in
add
je
iret
xlat
jno
mov
dec
mov
popf
push
int3
test
mov
or
in
scas
mov
and
cmp
xlat
mov
rolb
jno
mov
das
pop
sbb
icebp
aaa
add
sbb
push
lea
jmp
or
xor
xchg
push
enter
fidivrl
sbb
outsb
lcall
push
pop
stc
adc
push
sbb
into
xchg
sti
es
xorl
mov
add
test
ffreep
lea
xor
je
adc
cmpsb
xchg
and
mov
arpl
cmpsb
repz
dec
or
aad
cmp
dec
add
adc
notl
js
ljmp
mov
cli
add
sub
shl
insl
push
sub
ss
sub
or
pop
mov
xchg
out
or
insl
lea
sub
xchg
pop
xor
jo
int3
hlt
xchg
xorb
add
pop
sub
add
push
jge
stos
das
xchg
out
mov
add
sar
fisttps
or
xchg
add
aad
nop
add
lea
aaa
sbb
add
sar
sti
mov
lds
sbbb
xor
loop
sar
or
testl
cmp
idivb
ret
push
push
fwait
push
nop
xchg
into
adc
ret
adc
sbb
xor
je
iret
adc
nop
or
mov
and
sub
jge
cwtl
enter
add
mov
popa
inc
aam
sysenter
addr16
mov
push
pop
mov
jae
nop
sbb
andl
jns,pn
fimull
push
dec
sbb
jmp
adc
rcr
flds
fadds
fstps
idivb
filds
inc
add
sbb
imul
sbb
or
or
adc
or
adc
lcall
clc
adc
imul
jns
sub
sbb
push
addr16
dec
and
sub
and
push
shll
mov
adc
sub
sub
mov
lods
pop
ja
dec
xor
sbb
or
repz
adc
rcrb
cmpsb
mov
sbb
sbb
fs
xchg
and
mov
aaa
inc
flds
inc
and
in
popf
sbb
and
and
enter
cmp
push
inc
fs
fldenv
dec
cs
jg
adc
fs
inc
pop
shrl
inc
cmp
add
lds
adc
jg
lds
orb
out
xchg
mov
rcr
in
sbb
add
xor
sbb
mov
add
jns
sbb
sbb
lcall
xor
adc
pusha
and
push
xchg
lcall
mov
jmp
aas
adc
mov
cmpsl
aas
xlat
bound
jle
pop
sbb
dec
sbbb
mov
push
sub
into
pop
jge
jle
mov
push
adc
mov
add
sbb
stos
pop
jmp
out
call
or
or
or
push
xchg
push
adc
dec
ss
movsl
dec
dec
xor
in
jno
adc
pop
cmpsb
add
insb
and
outsb
inc
aaa
outsl
push
ds
jmp
lea
out
movsl
insb
jge
mov
and
push
add
inc
mov
sbb
bound
xchg
in
loope
xchg
sahf
sub
xchg
loope
add
push
sar
fstpl
inc
or
xorb
gs
adc
test
inc
cmpb
sarl
dec
lea
push
inc
imul
add
xlat
test
mov
add
icebp
cmp
test
decl
sub
pop
push
push
xchg
lock
movsbl
mov
lea
inc
cs
lds
or
je
jnp
pop
adc
in
mulb
cmpb
push
les
lods
int3
mov
xor
fisttps
dec
adc
loopne
or
shll
or
adc
or
aaa
adc
jne
jg
or
lret
xor
ss
inc
inc
pop
add
jno
mov
add
addl
adc
adc
inc
cmp
inc
leave
pushf
jb
mov
jno
orb
ljmp
mov
pushf
mov
inc
out
aam
jp
sbb
mov
out
pop
push
ret
xorl
leave
sbb
mov
add
fists
fdivrl
sbb
ljmp
or
sbb
mov
cmp
jmp
lahf
ficomps
insb
lahf
incb
push
xchg
rolb
or
pop
push
popa
mov
inc
pusha
int3
push
push
mov
add
cmc
jge
sbb
ret
inc
lods
aaa
js
hlt
jbe
or
dec
sub
adc
mov
push
inc
dec
add
inc
fidivrs
das
aad
lock
xchg
shl
adc
shll
rol
jg
jnp
pop
xsaveopt
inc
mov
test
and
and
push
in
sbb
mov
addb
inc
or
or
pusha
lock
outsl
mov
mov
cmp
adc
sbb
and
out
imul
arpl
scas
jnp
daa
sbb
adc
or
add
data16
adc
pop
adc
aam
sub
pop
lahf
scas
dec
imul
rorb
or
add
sub
push
push
imul
and
xorb
lret
daa
pop
adc
dec
jle
jo
into
cli
pop
mov
lea
call
repnz
clc
pusha
call
push
push
neg
dec
mov
bnd
inc
fsubl
popa
sbb
test
push
add
loopne
iret
add
jl
jb
xor
push
addb
shll
arpl
inc
cmp
xchg
inc
mov
pop
xchg
pop
aaa
stos
xor
fisubs
add
dec
xchg
popa
mov
mov
lods
rcl
pop
mov
xchg
mov
enter
pop
push
sub
mov
sub
cmpb
push
stos
pop
push
sbb
adc
add
lods
subl
scas
inc
paddd
jo
pop
orl
inc
mov
dec
mov
stos
cmpsl
add
jp
cmp
incl
andb
rorl
lret
sarl
and
add
iret
mov
inc
inc
mov
dec
pop
lahf
adc
pop
daa
call
mov
sub
shlb
movsb
and
bound
inc
mov
mov
pop
loop
push
incl
jno
sbb
xchg
mov
xchg
dec
loope
push
jne
adcl
mov
lock
pop
cltd
sub
push
pop
loopne
inc
pop
lea
jg
add
das
negl
mov
adc
les
jae
mov
or
jecxz
fldl
movsb
mov
sti
add
pop
jle
orb
enter
sbb
stos
iret
sarb
inc
jmp
inc
cmp
jl
dec
add
ret
in
add
lret
xor
into
adc
je
cmp
mov
shl
xor
dec
popf
movsbl
imul
mov
rorl
mov
repnz
mov
adc
cmp
sarb
test
outsl
rol
push
sar
and
push
mov
daa
insl
cmc
nop
cmpl
adc
add
jmp
addb
add
add
dec
jb
addb
incb
addb
sti
add
add
dec
das
cmpb
dec
dec
ficomps
jle
ja
rol
sbb
dec
dec
cmpb
xorb
sbb
adc
pop
and
dec
call
xor
sbb
push
inc
inc
and
ja
add
inc
movsl
pop
adc
ss
mov
test
rolb
dec
mov
or
adc
in
and
es
xchg
into
imul
out
push
test
loop
jbe
lahf
xchg
ret
push
mov
cmp
lods
sbb
enter
fs
pop
push
mov
fisubrl
shlb
mov
ja
mov
push
ja
mov
pusha
or
adc
in
in
xorb
test
pop
ss
movsb
push
mov
mov
mov
pop
push
lcall
daa
ret
outsb
add
jae
outsl
xchg
test
dec
mov
nop
sub
sarb
mov
mov
loop
pop
repnz
cmp
fcom
sub
add
jmp
cmc
pusha
int
dec
insl
or
xor
push
add
pop
and
outsl
test
pop
mov
and
push
fs
aas
cwtl
js
mov
dec
mov
pop
push
dec
jbe
test
xor
push
mov
arpl
jp
pop
jle
mov
sbb
dec
xchg
xlat
push
mov
jecxz
sub
in
in
push
add
cmc
insb
fisttpl
or
mov
enter
xchg
loope
inc
es
add
xchg
xchg
jae
cs
dec
add
mov
sub
sahf
sbb
loope
adc
mov
psubusb
add
nop
adc
sub
pop
pop
sub
jno
xorl
jmp
or
ficoms
scas
loopne
in
int3
or
sbb
inc
mov
aam
movl
sbb
cltd
sbb
push
lds
pushf
inc
adc
push
pop
sub
rclb
rclb
xor
adc
mov
movsb
jge
pop
les
int3
pop
stos
int3
or
add
mov
mov
mov
inc
push
push
mov
inc
mov
mov
movsb
imul
ret
or
leave
mov
or
push
shlb
push
idiv
clc
test
push
push
pop
in
add
or
mov
mov
dec
shrb
xchg
orb
out
push
xchg
sbb
jo
test
add
pop
dec
cs
mov
mov
lcall
loopne
fmull
jbe,pn
and
jns
pop
ficoml
adc
mov
cmp
mov
push
lock
sub
xor
dec
rcll
sbb
inc
mov
push
and
inc
add
jg
outsl
lods
cmp
or
xchg
mov
xor
and
bound
dec
add
xor
lea
xchg
lods
dec
clc
mov
or
push
pusha
pop
sub
std
lods
pop
jne
inc
push
fcmovbe
push
mov
xchg
loopne
push
pop
lods
pusha
xor
pop
xchg
jge
and
lea
imul
jae
xchg
or
xor
mov
nop
mov
and
cmc
test
icebp
push
repz
add
shlb
add
fmuls
pop
sti
test
or
jns
insl
popf
dec
pop
jbe
cwtl
dec
adc
push
pop
je
and
jne
int
mov
sub
and
sub
push
pop
bound
inc
clc
mov
inc
cs
cmpsl
adc
add
outsl
loopne
movsb
push
je
pop
inc
mov
inc
ret
add
mov
or
jmp
xor
dec
mov
push
sbb
jno
dec
mov
rolb
adc
mov
daa
jbe
daa
xor
cmpl
sub
adc
mov
pop
nop
dec
jge
add
push
loop
and
mov
enter
faddl
or
mov
in
outsl
add
xchg
pop
mov
dec
js
fdivs
mov
mov
xor
sub
dec
jg
ficoms
ds
mov
pop
mov
pop
jmp
cmpsb
sub
movlps
nop
das
lret
ljmp
lea
ror
sahf
jns
lea
xlat
pop
jmp
and
imul
or
dec
aam
inc
shll
mov
dec
and
add
push
ds
popf
jb
cmp
lea
orl
int
mov
and
push
pop
je
addb
add
roll
lret
inc
and
bound
mov
inc
rcrb
icebp
rol
xlat
inc
call
and
shufps
jecxz
sub
mov
mov
iret
sbb
dec
ror
sbb
test
xor
rcrb
cmp
jb
addb
xchg
cld
out
push
mov
pop
jecxz
adc
jl
or
incl
or
jp
mov
inc
sub
sbb
add
push
addl
add
or
sahf
or
loopne
lods
test
adc
inc
adc
jns
jo
jge
cmp
add
pop
lock
aas
pop
mov
in
mov
mov
fldt
adc
push
out
dec
xchg
ror
pop
lea
mov
dec
orl
pop
call
xchg
cmp
loope
ret
daa
push
add
ds
and
push
cmp
inc
cmpl
pop
fcom
test
dec
push
mov
add
in
inc
inc
jno
add
push
xlat
shlb
push
gs
testb
inc
movsb
mov
push
in
pop
sub
addr16
test
add
mov
gs
sbb
or
dec
mov
mov
add
fsubl
insb
mov
test
nop
lahf
mov
imull
xor
push
rclb
xor
je
mov
aam
scas
test
ss
mov
jmp
pop
icebp
adcb
addb
icebp
sub
sub
add
les
lds
and
das
test
stos
mov
or
push
ret
adc
cmpsl
test
sbb
jl
mov
push
push
dec
jg
or
imul
lock
add
push
add
and
sbb
or
ljmp
xchg
cmp
daa
inc
ja
pop
js
int3
out
add
call
dec
adc
push
test
xchg
inc
sub
and
clc
fwait
lods
mov
mov
or
aas
pop
xchg
negl
jb
adc
icebp
incl
xchg
sbb
adc
mov
cmp
add
jl
sub
out
insb
push
inc
stos
or
mov
cmp
xchg
jle
adc
and
sbb
xchg
bnd
jae
fcoms
sub
or
sub
add
xchg
or
or
ret
xchg
sbb
jo
mov
loop
enter
sbb
ret
jl
xchg
lods
dec
push
inc
add
pop
cltd
mov
shll
mov
cltd
insl
bound
xor
rorb
int3
call
and
push
or
cmp
adc
mov
cmc
inc
shl
in
imul
mov
sbb
push
add
pop
das
out
ja
mov
ja
or
adc
js
push
jne
insl
xor
dec
roll
dec
ljmp
add
push
add
push
cmpsl
sub
xchg
ss
push
pop
inc
lahf
test
jg
popf
mov
rep
xor
pop
cmp
rorb
inc
mov
mov
sbb
mov
in
jnp
and
inc
sub
int
xchg
aad
mov
pop
xchg
lcall
lret
or
mov
and
dec
movsb
fdivrs
nop
outsb
rcrl
inc
movsb
sbb
iret
dec
adcb
cmp
push
in
or
sub
clc
cmpsb
xchg
dec
dec
test
test
jbe
add
and
lret
add
lods
add
inc
cmp
jg
mov
xchg
decb
inc
dec
jne
sbb
mov
jmp
hlt
das
sbb
xchg
add
and
add
pop
add
in
xchg
mov
out
jge
divb
or
add
pop
pop
mov
sbb
int3
jae
mov
xchg
dec
pop
sarb
addb
enter
cmc
sub
movl
arpl
pusha
xchg
pop
sub
fs
adc
and
shll
insl
or
cmp
and
jne
repnz
fs
inc
push
in
rolb
fcomps
mov
pop
pop
adc
aad
cmpsl
sub
lods
push
lock
xchg
loope
inc
addr16
mov
enter
mov
or
add
pop
add
ret
mov
add
mov
adc
movsl
cld
loop
sti
inc
inc
decb
roll
add
jae
and
mov
loop
and
or
jmp
js
pop
ja
jns
adc
in
in
mov
popf
add
sbb
cwtl
dec
imul
fldt
stos
inc
and
inc
popa
or
sub
clc
ret
inc
out
sahf
mov
in
inc
sahf
add
push
movsl
dec
sbb
clc
add
xor
or
mov
mov
in
cwtl
sbb
adc
sbb
adcb
or
dec
or
sub
in
lea
push
add
test
adc
ret
pushf
ds
mov
or
add
adc
outsb
or
mov
cmpsl
xchg
xorl
lret
ret
notb
rclb
rcrb
imul
adc
dec
sub
and
inc
pop
and
or
and
xor
inc
push
mov
outsl
add
test
leave
mov
or
sbb
test
cli
inc
jne
pop
ret
addr16
nop
or
or
cmpsb
cli
xor
mov
in
mov
mov
or
push
sbb
ret
fsubs
sbb
ret
fwait
fs
fstps
loopne
xchg
xor
mov
xor
mov
sbb
sbb
ret
mov
roll
add
xchg
mov
pop
hlt
rcrb
mov
popa
int
lgs
dec
pop
jnp
pop
sbb
xor
js
movzbl
ja
pop
testl
add
imul
mov
push
mov
mov
insl
dec
adc
mov
movsb
mov
pop
add
mov
add
push
add
ficoml
sahf
xchg
add
mov
dec
andl
xor
imul
add
add
adc
add
movsb
pop
mov
ss
and
fwait
stos
mov
loopne
popa
sahf
jecxz
xor
inc
leave
call
imul
xchg
pop
nop
fnstenv
xor
adc
daa
push
mov
lcall
outsb
or
nop
or
or
addl
pop
add
inc
push
jecxz
adc
test
data16
imul
dec
push
mov
jne
adc
sub
cmpsb
mov
or
cmp
or
dec
subl
jno
xor
je
lds
cmpsb
mov
in
jae
or
or
stos
imul
mov
in
jmp
shlb
outsb
ljmp
mov
rclb
mov
or
fcoml
or
push
imul
add
outsb
or
addl
rcr
imull
cmp
or
inc
pop
sub
rorb
sbb
sbb
dec
nop
orb
in
mov
or
adc
push
jl
cmp
add
push
mov
pop
xor
mov
jl
add
cmp
mov
xor
orb
add
rcrl
andb
fdivs
movsb
cmc
push
rorb
jnp
dec
or
inc
mov
movsb
xchg
sbb
stos
cld
mov
sub
sub
xor
std
int3
sbb
add
andl
or
add
loopne
push
or
or
xchg
adc
hlt
cld
and
mov
add
scas
jbe
inc
in
dec
and
and
and
mov
sbb
dec
aad
lret
adc
leave
inc
fisttpll
xchg
adc
mov
inc
out
or
in
jge
dec
stos
adc
mov
add
and
ljmp
xor
test
out
in
fs
ljmp
sbb
fisttps
test
movsl
jge
cmp
icebp
mov
in
jne
adc
sbb
inc
out
jne
in
arpl
call
shr
int
mov
jbe
mov
mov
add
or
fadds
sbb
roll
add
xor
push
imul
xchg
test
sub
ss
mov
pushf
verw
movsb
pop
sub
pop
leave
shlb
clc
mull
jmp
adc
jbe
add
lds
and
call
fnclex
loopne
cmp
adc
popf
mov
ss
lahf
arpl
sbb
lods
mov
and
sub
icebp
addb
outsl
lods
and
fs
or
in
push
inc
inc
or
or
pop
addb
and
inc
addr16
xchg
lock
add
movsb
or
xchg
or
sbb
and
sub
mov
es
mov
sbb
nop
shl
sub
cmp
loopne
insb
inc
and
and
sbb
add
outsb
inc
inc
jae
dec
out
adc
inc
lret
and
mov
adc
fs
popa
fbstp
lea
pop
push
dec
sbb
out
lret
mov
cmp
dec
daa
push
push
into
xchg
push
aad
aam
push
repnz
or
popf
icebp
mov
mov
lret
inc
adc
pusha
xlat
mov
sbb
adc
or
or
in
adcl
dec
sahf
test
push
and
lea
leave
out
pop
xchg
outsb
movsb
in
adc
hlt
mov
add
mov
mov
sub
rorl
or
mov
loope
sbb
lock
push
aam
fidivrs
and
lea
add
cwtl
popa
hlt
ja
cmp
add
mov
test
movsb
vfrczsd
jne
lds
push
add
or
sbb
andl
push
aaa
aaa
lret
int
push
mov
push
and
mov
push
arpl
and
fs
jnp
and
push
call
or
xchg
ret
cmp
movsb
es
movsl
sub
hlt
leave
addb
xor
cmp
repz
jmp
and
mov
lods
jbe
addb
lahf
xor
pop
sarl
add
jg
mov
push
ja
fs
mov
pop
cmpsl
inc
dec
sahf
push
push
cltd
cmp
sub
cmpsb
in
jo
or
insb
faddl
aam
mov
dec
lods
pop
in
aam
add
loopne
xchg
sub
in
or
cmp
jg
sarb
xchg
xchg
stos
push
inc
sub
jge
sub
mul
or
cmpsb
push
out
lea
mov
or
xchg
call
and
in
cmovno
in
int3
and
xchg
pushf
inc
cwtl
lods
mov
and
jmp
inc
xchg
js
out
adcb
bswap
cltd
lock
test
mov
push
mov
mov
cwtl
mov
mov
sbbl
rorl
out
ret
or
xchg
call
shlb
jae
lea
pop
adc
outsb
fsubrp
jbe
jg
inc
xor
push
and
push
add
push
in
xchg
aad
mov
push
pop
adc
bound
test
mov
push
add
cmp
mov
xchg
aad
fcoms
jb
insl
popa
xchg
adc
sub
jl
repnz
mov
test
cmp
in
add
and
xor
cmp
jne
test
aam
orb
adc
sub
or
mov
fwait
imul
movsl
dec
xchg
pop
test
pop
xchg
and
es
and
cmp
sub
jne
push
adc
cmp
flds
sbb
and
les
stos
mov
pop
pop
add
rclb
add
lods
mov
mov
add
in
or
add
push
scas
pop
sub
in
add
lods
outsb
imul
pop
cmpsl
xor
fcoms
shlb
clc
and
xchg
stos
push
xchg
je
add
wbinvd
scas
les
mov
xchg
scas
enter
or
lds
mov
push
mov
and
in
movsb
mov
jo
lods
xor
mov
in
push
pop
pop
jae
pop
scas
push
les
push
mov
dec
or
mov
mov
xlat
sti
mov
pop
out
adc
pshufw
push
push
mov
pusha
adc
pop
sbb
sub
addl
mov
rolb
ret
js
flds
aas
dec
cmpsl
cmp
xchg
cmp
gs
in
push
xor
movsb
adc
loope
mov
xorb
rcll
in
push
fcompl
mov
adc
and
lods
push
sbb
std
cmp
add
shrl
add
dec
or
xchg
pop
xchg
sbb
inc
add
xchg
dec
dec
and
and
mov
ret
xchg
xor
cmc
sbb
add
and
lret
mov
mov
and
int
jnp
ret
mov
sub
arpl
rorl
push
and
pop
and
pop
fcoms
rcrb
push
fcmovnb
stos
push
jb
ja
sbbb
aaa
push
push
inc
and
das
or
jb
sub
gs
and
lret
cmp
leave
add
movsb
mov
cmc
mov
stos
daa
and
dec
loope
lods
in
or
push
mov
gs
pop
cmc
les
pop
push
movl
sbb
or
cmp
lock
add
lret
mov
in
jge
pop
mov
sbb
insl
xchg
lock
popf
insb
ret
aam
fisubrs
ficompl
push
sbb
jo
dec
xchg
sbb
outsb
push
add
mov
add
pusha
cs
inc
adc
mov
push
xchg
cs
enter
outsl
push
push
test
lea
push
lods
push
inc
inc
pusha
or
sarb
cwtl
subb
xor
mov
xchg
ljmp
shlb
ja
inc
sbb
leave
and
test
ds
pop
jge
or
inc
cmp
mov
call
hlt
mov
adc
inc
ja
sub
clc
push
sub
repz
or
sbb
test
add
int3
das
lock
das
push
dec
insl
and
inc
pop
dec
pop
aas
pop
out
rcl
cmp
push
lea
pop
inc
sbb
cmpsl
or
pop
inc
or
and
xchg
mov
mov
fs
nop
push
mov
sub
add
cmp
or
mov
in
xor
ljmp
mov
pop
inc
cmp
cld
adc
add
cmp
inc
sbb
push
mov
stos
mov
addb
mov
shlb
add
mov
es
sub
sbb
sub
xor
pusha
scas
popf
add
and
sbb
mov
inc
sub
or
dec
push
daa
aam
testb
mov
jns
push
sub
mov
test
mov
loope
loope
cwtl
pop
cmp
ja
iret
push
sbb
fidivs
nop
cltd
xor
xor
icebp
sbb
rol
data16
les
xchg
rcrb
cmpsl
push
sbb
and
xchg
iret
fcompl
adc
aas
inc
or
sbb
inc
adc
jae
mov
or
rorb
inc
pop
pop
xor
lods
dec
mov
cli
out
pop
push
push
inc
inc
dec
jo
push
inc
xchg
add
ret
xchg
xchg
or
inc
sbb
sbb
fiadds
and
xchg
mov
xor
imul
inc
insb
and
fsubrs
cmpsl
jmp
imul
sbb
shlb
push
dec
lods
adc
inc
and
and
mov
push
movsb
out
adc
xor
push
jecxz
pop
jl
pop
ja
pop
ret
or
clc
xor
incb
sbb
mov
sub
and
inc
or
movsl
lea
lret
sti
or
or
movsl
test
xchg
adc
ret
ficoms
push
adc
int3
fimull
popl
dec
pop
dec
adc
leave
mov
dec
shl
ret
or
cmpsl
inc
mov
jecxz
movsb
sub
or
out
aam
fadd
js
out
pusha
or
inc
add
leave
inc
jnp
adc
add
add
daa
dec
fildl
shrb
pop
jne
dec
xor
push
pop
cwtl
jg
lahf
adcb
jmp
repnz
cmp
xchg
mov
test
and
sbb
or
insb
lcall
or
ret
in
dec
mov
inc
jmp
scas
adc
fs
js
or
and
lcall
xor
je
sub
or
add
sbb
mov
sbb
sbb
in
sbb
xor
jbe
imul
inc
and
sub
xchg
and
lods
push
nop
wrmsr
sub
ss
and
popa
mov
andb
pop
sub
pop
orl
lret
inc
stos
mov
aaa
clc
push
xor
jg
sub
cltd
ret
mov
js
inc
xchg
xchg
and
mov
mov
arpl
cmpsb
sbb
pop
out
dec
rcl
adc
insb
and
push
and
mov
and
xor
outsb
cwtl
mov
aam
pop
lods
xchg
cltd
add
sub
mov
xchg
sbb
mov
sbb
in
and
test
add
roll
push
orb
pusha
add
sbb
rcrb
jns
and
mov
or
movsl
incl
mov
push
cmovl
inc
outsb
shll
int3
adc
mov
aad
data16
pusha
pop
mov
pop
lods
or
pop
inc
sub
popf
enter
int3
fwait
dec
aam
mov
xchg
xor
xchg
mov
les
add
jns
call
jbe
inc
mov
xchg
ret
test
icebp
xchg
adc
cmpsl
inc
mov
and
in
out
jmp
lcall
pop
xlat
or
ror
sbb
pusha
add
lods
pop
fmull
rorl
and
nop
sbbl
sbb
das
add
add
mov
xchg
mov
out
adc
insb
mov
mov
lea
xchg
imul
jg
mov
mov
shll
push
mov
lret
push
sbb
pop
aaa
mov
pop
sbb
mov
and
cltd
push
jmp
fcoml
ret
les
pop
test
sbb
lea
mull
and
pop
sbb
or
xlat
push
rorb
jno
cmp
insl
test
xorb
adc
subl
xchg
adc
mov
xchg
add
inc
inc
push
inc
jle
or
pop
popa
outsb
imul
xchg
nop
pop
enter
gs
dec
dec
push
push
ror
in
pop
imul
pop
cmp
das
out
pop
inc
dec
inc
push
lahf
mov
sub
and
cs
add
add
add
add
pop
xchg
gs
jg
and
or
xchg
fcmovne
fistpll
and
pop
sbb
aam
xchg
jmp
insb
adc
out
push
xchg
addl
rclb
push
fidivs
cmpl
mov
neg
jmp
imul
cmp
imul
in
inc
roll
push
jbe
adc
adc
push
lea
xor
push
lcall
scas
or
sbb
or
xchg
ret
push
push
sbb
or
mov
in
fdivrl
sub
sbb
cmp
data16
aam
outsl
and
sbb
enter
ficoms
shlb
jns
adc
or
aaa
and
cwtl
or
scas
loopne
sbb
clc
pop
mov
xchg
pop
fwait
in
les
jns
aas
mov
stc
push
sbb
call
push
push
dec
lea
pop
int
fbstp
xchg
inc
and
sbb
and
in
add
push
test
sub
push
repnz
sbbl
add
xor
in
dec
mov
mov
inc
pop
xlat
xor
cmp
popa
into
imul
or
sbb
aaa
push
imulb
ret
lds
sbb
lcall
add
push
xchg
xlat
add
xor
push
or
roll
xor
loope
dec
ret
fcomp
xchg
rolb
mov
fimull
sbb
push
or
xchg
or
dec
fiaddl
testb
add
shrb
pop
sub
call
mov
outsl
inc
mov
or
xchg
inc
fwait
les
push
dec
gs
xchg
pop
cmpsl
ret
les
scas
or
pop
fistps
test
and
push
cmpsl
pop
rclb
inc
sbb
push
stos
movsl
push
cmp
or
shrl
adc
push
inc
dec
ret
dec
push
ror
outsl
movsl
dec
fbld
shrb
mov
out
mov
imul
pcmpeqb
lods
rolb
push
ds
jne
loop
jbe
or
test
push
cmpsl
int
inc
push
or
and
cmp
dec
rol
aad
ret
xor
sub
and
iret
add
jnp
negl
movl
sbb
iret
cmp
xchg
ret
orb
sbb
ljmp
xor
loope
add
loop
cmp
ja
cmpsb
push
rclb
push
addl
inc
in
xchg
js
out
aad
into
push
jle
roll
xor
les
xchg
iret
mov
int3
and
mov
movl
aaa
es
push
movl
inc
mov
mov
xchg
jae
xchg
test
imul
sub
and
pop
in
xchg
imul
test
stc
enter
mov
incl
in
inc
iret
loope
jo
out
pslld
xlat
dec
jb
iret
lock
pusha
push
mov
imul
cld
sbb
push
stc
int3
or
or
jns
adc
rolb
pop
pop
push
mov
adc
or
push
daa
or
lock
lsl
inc
dec
inc
rorb
inc
adc
pop
pop
and
insb
or
insb
xchg
sub
pop
leave
push
pop
jo
mov
push
test
rclb
cmp
fistpll
or
paddusw
dec
sbb
pop
and
pop
mov
lds
test
loopne
add
add
notb
dec
jl
push
scas
mov
adcb
sahf
lret
xchg
adc
pop
lret
fadd
fdiv
mov
mov
xchg
or
lock
xchg
xor
inc
push
xchg
inc
adc
jecxz
sub
dec
stos
mov
xor
fdivs
data16
out
jmp
jecxz
aaa
inc
das
cli
cmp
jne
xchg
je
clc
or
pop
mov
sbb
jbe
sub
cli
jne
dec
or
or
popa
fmull
dec
push
in
xchg
jecxz
or
xor
daa
mov
add
out
imul
dec
mov
dec
pop
xorl
ret
xchg
fldl
dec
out
mov
dec
pop
movsb
orb
xchg
xchg
aaa
dec
les
adc
or
jecxz
jnp
jp
cmpsb
pop
and
roll
xlat
push
push
test
call
xchg
add
push
add
cmp
stos
add
inc
xor
or
popa
ljmp
pusha
popa
xchg
push
sub
xchg
sbb
add
jmp
xor
cmpsb
mov
push
or
dec
andb
or
bound
shll
stos
insb
push
out
pop
adc
or
add
cltd
push
insb
dec
push
sub
inc
add
js
cltd
and
movsb
sub
sbb
jns
clc
testl
and
add
inc
subl
xchg
ds
cs
push
push
ret
inc
sbb
sub
mov
jecxz
lods
shlb
cmpsl
push
aam
movsb
xor
sub
pusha
enter
mov
je
je
mov
imul
cmp
add
pop
popf
mov
mov
testl
shll
mov
out
push
pop
pop
or
push
es
cmp
add
stos
or
mov
xor
xchg
int
mov
hlt
and
jns
fsubrp
lcall
setne
test
je
and
sbb
add
arpl
mov
dec
add
lea
popa
fsubl
loopne
jmp
push
in
popa
loopne
and
dec
cmp
adc
outsl
test
cmp
push
dec
adc
xorb
inc
sbb
movsl
iret
inc
dec
adc
sbb
fiaddl
add
mov
iret
jnp
fnstcw
jne
rorb
test
or
jbe
inc
lock
out
je
fldcw
jo
insl
sub
ljmp
mov
mov
cwtl
addl
or
leave
jb
inc
lea
cli
adc
ja
rcrl
pop
movsl
lods
in
stos
decl
add
dec
mov
repz
pop
cld
insl
call
cmp
out
clc
std
adc
int
lea
orl
add
aas
push
nop
out
pop
shl
sub
mov
dec
jp
adc
test
xor
call
ja
insl
cld
dec
cmp
adc
adc
xor
loopne
lods
add
jle
movb
sbb
jns
mov
inc
mov
scas
rcl
iret
rorb
push
adc
adc
fadds
mov
or
pop
or
negb
inc
bswap
and
shr
out
fchs
xchg
or
stos
mov
and
adc
pop
add
inc
mov
movzwl
mov
pushf
out
jmp
jge
nop
push
and
push
sar
incb
lahf
push
or
ljmp
loopne
testb
data16
call
sarb
or
sub
shl
or
jmp
popa
mov
mov
shr
arpl
adc
adc
xor
aaa
sbb
fadds
or
mov
mov
xchg
test
idivb
sub
dec
or
dec
sub
lea
and
mov
xchg
ja
or
loope
fwait
ret
insb
pusha
adc
shrl
outsl
movb
enter
pushf
pop
in
mov
xchg
xor
aam
add
pop
or
rorl
rcl
testb
fdivrs
aad
xor
cli
xchg
push
or
jle
jp
jbe
sbb
imul
mov
and
xchg
in
xor
xchg
fimull
iret
test
fisttpll
scas
push
mov
dec
dec
sbb
mov
cwtl
pushf
enter
shld
or
fistl
and
push
sbb
sahf
add
jb
adc
xchg
dec
lea
dec
xchg
xchg
mov
sbb
lock
push
pop
sar
ljmp
adc
data16
in
push
out
push
xorb
jo
or
int
aaa
pop
subb
pop
jbe
add
push
pop
clc
enter
adc
xor
xor
pop
or
out
xchg
mov
ret
testl
pop
lock
or
gs
mov
in
loopne
imul
hlt
jge
mov
sbb
gs
out
fsubl
jo
jmp
test
lds
adc
lock
bound
mov
jns
mov
mov
adc
incl
pop
lahf
or
inc
and
sbb
xor
nop
in
test
mov
loopne
xor
mov
or
xor
pop
mov
jge
sysenter
adc
lock
jne
push
mov
inc
ljmp
clc
sti
pop
mov
leave
or
push
and
shll
stc
shl
loop
jmp
push
add
pusha
sub
fs
sub
cmpb
test
lods
push
fstpt
xor
or
inc
insb
jo
pusha
xchg
or
fdivrp
mov
lods
and
sti
jmp
sti
or
push
fcomps
je
xchg
je
aam
fstpt
mov
dec
enter
xor
fdiv
mov
xor
push
xchg
inc
iret
sub
add
add
loope
fs
adcb
daa
jmp
sub
adc
sub
and
gs
inc
sbb
lock
aam
cltd
fmuls
lea
test
test
jno
movsb
test
pop
jns
inc
or
dec
jg
or
lock
mov
xchg
loop
jp
pop
cmc
mov
add
shr
mov
or
subl
dec
subl
daa
dec
mov
push
cmpsb
mov
popa
mov
lea
jb
cmp
inc
or
incl
clc
xchg
pop
pop
outsl
and
sbb
push
push
packsswb
and
sbb
nop
ret
mov
ret
push
or
inc
pop
sbb
lret
mov
test
loopne
pop
cmpsb
mov
mov
rcl
fsubs
inc
sub
mov
std
std
sbb
pop
js
test
push
popa
pop
out
sub
adc
fdiv
test
repnz
clc
std
js
mov
lock
mull
xchg
jno
xchg
stc
or
fdivl
dec
lods
dec
mov
mov
inc
loope
ljmp
dec
inc
mov
jne
enter
inc
mov
cwtl
dec
pop
cld
sbb
mov
add
dec
int3
lret
add
inc
xor
mov
or
ret
orl
cs
test
cltd
jmp
xor
hlt
ja
rol
dec
xchg
cmp
clts
cmp
int
jne
adc
and
insb
loopne
mov
inc
dec
dec
push
fdivl
dec
call
loopne
neg
rclb
movb
adc
mov
mov
pusha
sub
xor
sub
add
sahf
sbb
jne
mov
out
xchg
or
and
push
notb
in
testl
loop
outsl
insl
sub
or
insl
inc
loopne
pop
jne
add
bound
adc
cltd
sub
ds
sahf
ret
dec
dec
inc
jb
lds
in
mov
mov
imull
sbb
push
dec
imul
sbb
add
add
lahf
push
and
ficoml
test
enter
nop
mov
push
jne
pop
push
mov
add
enter
jecxz
enter
pop
sub
js
mov
dec
insl
cld
sarb
mov
imul
and
or
jmp
jl
shll
call
jmp
cmpl
adc
cmpsl
sbb
jb
adc
pop
fnstsw
mov
dec
dec
mov
test
clc
test
inc
add
adc
cmp
out
fildl
fadd
pusha
inc
or
inc
pusha
pop
call
insl
lods
jnp
fistpl
sbb
pop
cmp
enter
jge
lcall
fdivl
lcall
or
daa
xchg
push
inc
sub
inc
inc
xchg
push
imul
cmp
add
sbb
adc
adc
xor
or
add
pop
insb
loopne
adcl
adc
push
xchg
imul
mov
push
daa
push
nop
hlt
sbb
in
or
or
shll
into
mov
mov
add
mov
cmp
add
or
rclb
inc
rorl
popf
add
fmuls
or
movsb
leave
inc
xor
inc
sub
shlb
pop
cmp
jns
orb
fs
push
and
fcom
leave
add
sub
lcall
mov
push
cmp
popa
add
lds
and
daa
add
jbe
add
test
push
mov
dec
adc
repnz
dec
inc
sbb
push
cmp
push
aam
and
aaa
and
mov
adc
mov
push
push
sbb
sbb
and
xor
pop
ja
mov
sbb
rol
lods
pop
shl
jmp
dec
adc
push
mov
pause
sahf
xor
imul
daa
aas
xor
fisubrs
sbb
lret
push
inc
je
and
inc
shlb
sbb
mov
gs
push
dec
xchg
jno
mov
dec
cltd
aaa
dec
je
adc
cmp
pop
add
add
popa
pop
imul
sub
add
xor
xchg
or
loopne
mov
arpl
nopl
jmp
popl
sub
inc
xor
add
or
and
sarb
and
insb
testl
pop
sub
sub
mov
add
adc
or
xor
xor
pop
pushf
mov
popf
and
inc
cmpl
dec
cmp
mov
shlb
loope
loope
mov
mov
shlb
dec
adc
or
adc
pusha
and
or
in
cltd
add
insb
mov
pop
sbb
pushf
xor
cmpsb
rorb
movsl
lcall
add
or
mov
pop
mov
xor
xorb
xor
je
mov
lret
xor
pop
xchg
mov
pusha
inc
and
rcrl
add
imul
xor
out
and
xor
or
int3
aam
roll
inc
add
and
mov
xor
in
pop
ja
jo
or
pop
shl
sbb
and
sbb
add
rcrl
movb
sub
jp
ljmp
mov
and
and
mov
in
testl
pop
and
orb
pop
fbstp
mov
roll
and
arpl
adc
push
push
incb
and
mov
cmp
test
adc
andb
js
andb
inc
mov
sbb
cmp
adc
pop
add
imul
vpmaxub
pop
fld
popf
mov
mov
sbb
add
addl
test
addr16
push
inc
ret
inc
add
xchg
cmc
or
ret
push
and
rcrb
rsm
lods
inc
pop
sub
and
sbb
rcll
outsl
push
push
push
fcoml
inc
cmc
lods
xorb
and
and
inc
sub
jo
and
arpl
pop
dec
int3
mov
add
es
test
jne
cltd
xchg
rclb
add
inc
jmp
mov
sbb
dec
roll
or
jbe
rcrl
sahf
and
xor
xchg
rorb
lods
push
movsb
jmp
and
insl
rcr
out
lds
sbb
xchg
inc
add
lock
pusha
test
stos
sub
jb
pushl
mov
hlt
and
push
or
mov
xchg
adc
pop
addb
push
push
or
xorl
and
fwait
sbb
mov
inc
or
push
inc
cmp
out
call
adcl
mov
cmp
inc
adc
inc
rol
test
test
sub
jg
add
jmp
shl
mov
cmp
xchg
scas
lret
std
movsb
adc
movb
repnz
mov
gs
call
dec
add
iret
sub
scas
or
adc
xchg
push
jb
pop
mov
xor
mov
mov
js
loop
inc
movsl
dec
dec
fildl
adc
mov
aad
cmp
sti
out
push
inc
mov
adc
push
xchg
in
and
lret
adc
adc
and
sbb
inc
add
xor
aam
ljmp
cs
mov
es
push
rcl
imul
adc
icebp
dec
dec
mov
xchg
fldl
sbb
lods
xchg
push
xor
push
pop
push
movsl
andl
inc
push
nop
int3
pop
cmp
sbb
inc
cwtl
jp
push
or
pop
jmp
and
scas
sbb
mov
fs
sti
inc
adc
fwait
push
insb
les
out
push
pop
xor
pop
lea
adcb
mov
pop
xor
inc
outsl
or
scas
pusha
add
sbbb
in
ljmp
adcb
shrb
imull
dec
and
jne
sbb
ljmp
loopne
call
sub
lds
mov
mov
xlat
push
lahf
adc
mov
mov
mov
mov
mov
mov
add
test
push
arpl
xchg
sbb
inc
and
mov
lock
hlt
cmp
adcl
les
fcoms
push
adc
add
test
icebp
pop
mov
add
in
andb
pop
sub
fs
pop
mov
addr16
test
jmp
dec
test
pop
dec
mov
and
cmpsl
add
sarb
cmp
pop
dec
ljmp
add
jo
loope
shl
cvtps2pi
pop
inc
lods
movsl
sub
incl
sbb
jge
lods
mov
fadd
jg
fcoml
pushf
in
mov
addl
mov
fldcw
repnz
subb
or
daa
sbb
aam
ret
and
repz
or
or
xor
push
add
push
in
and
mov
in
sub
push
mov
stc
pop
push
inc
mov
loopne
jno
jecxz
sub
push
int
cmp
xchg
adc
sbb
inc
mov
xor
cmp
adc
dec
fsub
jo
aas
push
cld
jb
inc
jne
fisttpll
sbbl
sub
inc
cwtl
xchg
hlt
jecxz
aad
mov
test
mov
add
jbe
test
xchg
lds
sub
mov
out
outsl
test
jnp
loope
js
jge
jae
adc
ret
shr
jg
inc
add
xor
fsubr
or
std
stos
pop
sbb
dec
dec
call
insb
lods
popf
loope
push
push
jmp
inc
inc
mov
jae
pop
cmp
sbb
enter
aaa
cmc
adc
sub
mov
fsts
call
add
mov
in
and
ljmp
or
sbb
and
lds
xchg
xor
pop
and
adc
dec
sub
inc
or
fwait
shrb
test
stc
cld
sub
jns
and
mov
push
add
pop
mov
adc
dec
insb
add
rclb
inc
jmp
sub
mov
sbb
sbbb
hlt
or
jne
out
push
adc
push
pop
push
xlat
add
push
je,pt
jmp
popf
cmp
popa
pop
cmpsl
mov
push
sub
pop
ffreep
insb
push
mov
jecxz
adc
inc
testl
cwtl
ja
pop
aaa
cmp
mov
add
mov
mov
cmp
sub
inc
daa
inc
dec
inc
sarb
xor
xsha256
cmpsb
adc
mov
iret
into
inc
xor
xchg
jg
pop
jmp
add
fisttpll
icebp
xor
test
inc
and
loope
mov
sarb
adc
jmp
xbegin
ss
push
push
cmp
cmp
mov
push
cwtl
pop
inc
xor
pop
lock
mov
push
sub
or
or
add
mov
sub
sti
cmpsl
lea
add
cltd
add
xchg
push
inc
xor
add
pop
sub
sub
add
jmp
adc
fs
imul
sbb
mov
cmp
jo
add
lods
dec
adc
lods
inc
mov
mov
push
sub
pop
add
and
bndstx
mov
push
int3
mov
cmpsb
jmp
mov
nop
data16
pop
inc
lods
lods
dec
ss
mov
lret
jle
push
mov
sbb
repz
or
pusha
lods
aam
fistps
jns
add
inc
test
sbb
movsl
enter
and
and
jbe
cmp
adc
lret
lea
pop
adcl
add
mov
mov
pusha
xchg
movsb
jp
pop
insb
pusha
and
daa
data16
fs
inc
inc
mov
fsubr
xchg
jp
in
popf
push
xor
and
hlt
mov
sub
rcrl
xorl
or
je
gs
jne
xchg
data16
les
and
sbb
push
push
xor
mov
mov
and
push
push
cmp
enter
inc
std
inc
pop
or
xchg
push
js
movsl
sbb
mov
shr
js
mov
push
xchg
aaa
sub
add
inc
shrb
jle
aas
adc
nop
ja
xchg
push
mov
stc
sbb
hlt
inc
add
leave
add
sbb
rcrb
inc
pop
add
or
jmp
sbb
mov
ljmp
mov
jmp
sbb
daa
ljmp
push
add
stos
push
add
mov
je
adc
mov
dec
push
push
and
insb
jp
scas
nop
xlat
insl
mov
aam
inc
jmp
movsb
add
xor
jmp
not
shll
outsb
in
adc
test
pop
push
cltd
xor
and
push
out
add
insl
add
sub
addb
js
and
cmp
adc
jb
out
rcrl
pop
ficoml
or
or
ljmp
adc
push
fsubp
and
enter
cmp
pop
iret
fistps
inc
sbb
mov
cmpsl
xlat
fwait
xchg
push
out
dec
xchg
jle
add
fisubrl
add
inc
sbb
pop
adc
pavgw
add
inc
test
mov
push
or
jnp
inc
stc
inc
inc
push
std
mov
inc
sub
inc
mov
jmp
dec
jecxz
shll
adc
or
add
aad
cmpsl
ss
push
inc
inc
loope
xlat
push
mov
mov
arpl
sbb
flds
nop
cmp
aaa
sbb
orl
imul
mov
fwait
jp
or
stc
stos
push
cmpsb
icebp
cmp
cmc
and
lock
mov
mov
push
jb
xchg
and
std
lea
xor
xor
add
iret
dec
or
stos
adc
popf
sbb
inc
push
push
out
push
mov
hlt
adc
imul
xchg
cmp
mov
dec
sbb
pop
stc
jnp
mov
add
jne
cmp
scas
lock
push
test
cli
ret
push
cmc
pop
or
inc
sbb
jmp
sbb
dec
rorl
movsl
mov
inc
inc
add
add
insb
repz
gs
sub
push
or
pop
pop
inc
adc
jo
and
outsl
stos
adc
xor
std
cmpb
jg
je
xchg
add
sbb
mov
lea
mov
cwtl
pop
fs
icebp
jo
je
add
insl
jb
scas
inc
add
test
sbb
mov
popa
add
or
jg
push
add
mov
sub
xchg
mov
pop
les
sbb
push
dec
icebp
push
sbb
push
andl
lcall
cld
xchg
adc
lcall
nop
adcl
leave
std
cmp
int3
sbb
xor
sti
fsts
scas
je
inc
cmp
cld
adc
push
outsl
out
or
adc
lea
push
jo
and
add
sti
mov
or
cltd
add
mov
inc
or
gs
incb
or
sub
inc
xor
ficoml
inc
nop
inc
pop
mov
mov
call
lahf
lret
repz
add
add
enter
push
sbb
arpl
jge
jae
rcrb
lahf
or
pop
lret
mov
lcall
ret
test
loope
popa
sub
cli
test
cld
mov
inc
loope
xchg
pop
clc
mov
popf
add
pop
mov
andb
pop
mov
je
lods
jns
inc
add
inc
sbb
cmp
daa
lock
push
pop
pop
sub
mov
jg
xor
inc
rcrl
mov
inc
std
xchg
jno
sbb
stc
pusha
in
push
and
pop
das
or
push
adc
and
add
js
sbb
sahf
push
adc
mov
lret
push
sbb
test
lds
call
out
sub
test
adc
add
push
inc
ret
js
push
sbb
jo
stos
aaa
in
push
and
in
add
and
in
test
stc
hlt
push
cli
fcomps
cmpsb
mov
cmp
pop
sbb
jne
jns
cmpsl
adc
xchg
pop
pop
xor
push
sub
test
loop
or
adc
in
aas
cmp
adc
iret
popf
cmc
je
jmp
rolb
pusha
inc
push
mov
inc
and
into
in
and
data16
or
xor
lods
in
out
xchg
test
pop
adc
ret
push
jg
cli
xor
dec
movsl
and
or
mov
and
roll
or
adc
inc
xchg
dec
and
sbb
into
arpl
dec
in
cmp
shll
popf
jle
or
je
sbb
bound
jnp
and
mov
mov
mov
adcb
psllq
sbb
je
addr16
jge,pn
fdivrl
xor
jno
pop
mov
push
idiv
in
adc
rcr
cwtl
cmp
hlt
roll
adc
pop
push
repnz
or
or
ret
xor
cwtl
add
push
fs
std
sub
xchg
and
xor
cmp
in
or
sub
shr
inc
sub
pop
push
or
push
loop
cmp
popf
pop
enter
sbb
sub
and
mov
inc
mov
cmpsl
cmp
jmp
push
and
or
wbinvd
mov
adc
sbb
lret
fisttpl
test
lret
rolb
or
cmp
or
push
popa
and
lds
pop
pushf
popl
push
push
dec
fisubrs
inc
loope
mov
sbb
popa
and
adc
fidivrl
ss
es
sub
rol
mov
lds
stc
stos
inc
add
xor
push
pop
orb
or
adc
push
xchg
jge
add
fsubl
adc
mov
aaa
rorb
std
mov
sub
loopne,pn
ss
add
cs
adc
xchg
aaa
add
hlt
push
cmp
adc
mov
xchg
or
jle
lock
stc
add
clc
orb
mov
mov
pop
cmpl
je
addr16
inc
xorb
ss
pop
and
inc
dec
mov
push
cmp
sbb
xor
adc
ss
insl
dec
jp
mov
jae
or
clc
sub
cltd
popa
xor
shrb
push
xchg
and
push
xchg
test
xor
inc
das
lods
mov
orb
aaa
es
sbb
addb
in
arpl
data16
pop
dec
repz
in
outsb
and
push
sbbl
mov
pop
jl
adcb
inc
push
repnz
xorl
add
push
inc
clc
nop
shlb
imul
repnz
mov
out
mov
add
icebp
and
push
push
lea
mov
jmp
into
call
ret
repz
cmpl
add
sbb
shlb
inc
dec
jb
or
loop
loopne
or
pop
jne
loopne
fdivs
loopne
and
imul
iret
xor
pushf
dec
push
test
in
mov
sub
pushf
pop
adc
pop
pop
or
pusha
mov
cmp
pop
aam
ds
cs
cmp
inc
and
inc
add
mov
arpl
push
in
mulb
iret
mulb
mov
cmc
das
cmc
push
cmc
or
shld
repz
cmc
and
int
xchg
or
or
pop
xchg
nop
pop
ljmp
inc
in
push
xchg
fadd
xor
jns
rolb
push
rolw
bound
rcrb
xor
xor
scas
les
paddusb
ret
icebp
or
inc
push
pop
adc
inc
adc
cmpsb
movsb
adc
jecxz
pusha
js
clc
shrb
push
inc
mov
call
dec
popa
xchg
sbb
ss
cmp
or
xor
xchg
xorb
popa
sbb
or
ds
mov
clc
mov
push
jne
fisttpl
push
loope
sbb
cmp
and
xor
imul
in
add
push
xchg
fwait
sbb
shlb
or
jb
add
or
lods
adc
push
aam
mov
xorb
or
push
xor
jb
movsl
add
in
add
adc
mov
adc
jmp
data16
fsubrl
mov
adc
and
pop
imul
sti
out
aam
push
pusha
mov
push
jo
inc
out
pop
adc
in
nop
cmp
push
decl
push
push
pop
push
pushw
mov
std
nopl
add
idivl
addr16
and
loop
loopne
inc
sbb
cld
add
movl
imul
jb
xor
xor
iret
sbb
xor
sbb
or
add
cmp
lds
test
or
adc
push
xor
adc
and
popa
push
fld
or
pop
push
push
cwtl
aam
and
psubw
or
bound
je
jl
push
push
sahf
xchg
xchg
arpl
es
inc
gs
add
adc
and
loope
sbb
scas
out
mov
mov
inc
xchg
pop
xchg
or
mov
and
fidivrs
int3
or
mov
sbb
sbb
incl
push
adc
push
push
pop
pushf
or
jg
mov
mov
lcall
fnsave
and
adc
pop
mov
jg
fistpll
clc
enter
and
enter
int3
mov
pop
idiv
mov
sarl
cs
ror
iret
mov
arpl
jg
inc
and
adc
mov
pop
or
mov
and
mov
sbb
or
addb
nop
rcll
and
test
adc
aaa
or
cmp
in
das
in
sti
cmp
in
inc
mov
mov
rcl
adc
sub
inc
sbb
and
xchg
push
pop
fists
mov
inc
lds
mov
enter
in
mov
or
xchg
mov
and
das
push
aas
mov
out
add
sbb
dec
cmpsb
test
pop
movsb
pop
cwtl
dec
or
sbb
pop
call
push
ficoms
mov
lret
sarb
push
dec
push
sbb
dec
ret
xor
es
pop
adc
sbb
pop
sub
adc
adc
dec
xchg
adc
pop
lods
lods
xchg
out
mov
xor
add
or
insb
xor
add
push
ficoms
enter
loopne
and
and
add
add
dec
mov
loopne
cwtl
inc
loop
dec
adc
mov
jmp
fistpl
jns
xchg
adc
or
mov
push
jae
or
jl
jne
data16
jns
or
xor
outsl
lock
pushl
inc
push
mov
dec
mov
je
ds
xchg
mov
test
das
push
inc
pop
dec
dec
mov
inc
cmp
pushf
lods
add
adc
aam
gs
rcll
and
lock
sbb
jne
popw
or
or
inc
stos
xor
jl
hlt
mov
xchg
jmp
or
out
jl
lea
pop
or
sub
xchg
xor
push
push
sub
jb
or
aam
and
lds
or
adc
jg
xchg
push
push
negl
outsl
xchg
add
push
pop
pop
or
imul
iret
push
insb
xchg
and
jmp
outsl
nop
out
jbe
test
pop
add
cmp
sub
xchg
add
clc
clc
pop
ja
cmpsb
jl
xchg
inc
or
xorb
xor
xor
dec
push
mov
jbe
and
sbb
xchg
lcall
pop
js
cmp
push
xor
mov
sub
cmpsb
adc
pop
pop
sarl
and
sub
push
push
or
or
movsb
imul
push
lds
xor
jne
xorl
adc
or
cmp
sahf
lret
dec
shll
or
or
addr16
inc
adc
adc
frstor
movswl
pop
pop
adc
inc
iret
dec
xor
mov
pop
push
sbb
or
test
or
or
dec
xor
push
push
push
pop
fidivrs
dec
adc
mov
sbb
add
mov
xchg
divb
cmp
test
dec
and
test
pop
pop
push
ret
xchg
sub
sbb
sbb
jnp
jecxz
test
pop
fadds
sub
push
fsubrl
in
dec
mov
cltd
mov
rol
bound
test
rcll
inc
or
jo
jg
lock
and
in
and
ss
loop
xchg
pushf
insl
stos
out
popf
push
lods
mov
or
inc
mov
adc
push
loopne
lea
push
jno
loopne
pop
mov
and
nop
jbe
ret
push
or
or
add
sbb
add
lret
pusha
or
inc
sub
mov
aam
pop
xchg
pusha
aad
sbb
mov
aam
or
nop
xor
lret
mov
mov
aad
je
dec
aam
cmp
add
lock
mov
push
and
popa
mov
or
sbb
arpl
cmpsb
lea
cmp
mov
and
xchg
mov
mov
jb
push
push
add
mov
mov
call
int3
cmpsb
mov
or
and
clc
mov
and
mov
sbb
push
cmp
xor
fucom
add
push
add
xor
shll
jmp
jmp
push
pop
nop
add
pop
lods
inc
xchg
push
add
xlat
xor
fimuls
dec
loopne
cmp
sbb
loopne
jmp
jnp
add
lahf
jle
add
hlt
fwait
jno
in
jo
subb
rcrl
aam
in
scas
rclb
sub
pop
dec
sbb
dec
push
push
jne
xor
jb
ja
mov
and
pop
sbb
push
xor
and
pop
lock
xor
sbb
mov
inc
xchg
inc
pushf
cwtl
shrb
pushf
push
rcrb
fsubl
pusha
in
pop
pop
nop
push
cltd
push
mov
sbb
in
jge
jmp
test
outsl
pop
cmp
xchg
test
out
nop
push
or
mov
and
pop
xchg
push
jmp
or
and
movsl
mov
addl
push
aas
and
or
and
push
fistl
push
pop
ja
mov
cmp
or
jbe
test
rcll
les
ljmp
loop
mov
or
pusha
sbb
cmpb
xchg
sti
mov
das
push
inc
pop
jne
rcll
or
xchg
and
jo
adc
mov
jge
test
pop
push
pop
inc
fmuls
push
outsb
adc
add
mov
push
push
and
pop
inc
mov
jp
sbb
inc
or
xchg
cltd
cmp
cmp
fstpl
xchg
scas
pop
mov
invlpg
cmpsb
sahf
add
xchg
add
sbb
pop
bound
cmp
mov
dec
or
ret
dec
faddl
xor
mov
sub
popa
push
fwait
push
push
or
ja
lods
pop
pusha
nopl
pop
add
or
inc
add
shlb
add
or
or
mov
sub
pop
and
lock
fidivl
sbb
pop
ja
push
dec
arpl
insl
jo
in
lock
pop
mull
aad
lds
test
jecxz
jbe
clc
clc
sbb
push
stos
pop
mov
push
push
mov
enter
into
or
fwait
jne
cmpsl
or
nop
add
test
adc
lods
sti
jo
mov
ret
adc
add
sub
dec
jno
mov
adc
or
pushl
insb
rcrl
inc
mov
push
movsb
pop
sbb
and
cmpsl
hlt
popf
sub
and
test
mov
out
add
or
adc
sub
push
adc
push
fdivs
out
aam
or
sub
pop
loopne
dec
add
pop
xchg
imul
sub
pop
and
jp
sub
sub
and
test
movsb
mov
call
ja
inc
test
add
test
jns
xchg
outsb
inc
add
cmp
sbb
cltd
data16
ret
dec
int3
nop
es
lods
push
and
orl
xchg
shrl
sbb
out
xor
pop
or
lods
stos
into
movsl
and
xchg
nop
xchg
sub
aam
scas
lret
ja
ret
das
jo
addl
push
adc
loop
nop
push
movsw
push
in
mov
cmp
pusha
addr16
mov
xchg
xor
push
xchg
push
jne
and
clc
xorb
adc
mov
pusha
out
sub
aad
add
arpl
mov
xor
jecxz
int3
xor
push
call
push
push
inc
mov
addr16
test
mov
xchg
lock
outsl
pushf
xchg
lahf
inc
movsb
imul
aam
push
and
sub
and
outsb
fsubrl
je
xchg
pop
fcomp
popa
xor
aas
and
add
pusha
mov
lea
mov
insl
and
stos
add
fcoms
mov
and
jb
mov
jnp
adc
movswl
dec
and
and
insb
push
in
xor
addl
mov
mov
and
testb
mov
add
in
mov
enter
mov
xchg
aam
mov
dec
pop
cwtl
or
js
mov
in
js
xchg
lea
pop
mov
daa
xor
mov
and
inc
xor
mov
xor
addr16
jb
add
clc
loop
inc
mov
pop
aas
inc
xchg
cs
lahf
mov
movsb
aaa
sub
je
mov
orb
or
and
daa
push
sub
add
stos
data16
hlt
ficompl
xchg
mov
aaa
pushf
dec
pop
subl
inc
jp
mov
dec
sbb
cmpsb
in
mov
leave
jnp
sub
loopne
inc
jb
dec
imul
inc
add
sub
scas
inc
push
adc
sub
test
push
push
inc
cmp
mov
sub
push
std
adc
adc
sub
xor
imul
inc
and
jmp
sub
and
enter
xchg
and
push
dec
inc
or
sub
push
cmp
xchg
out
sub
rorl
and
int
push
popa
shrl
mov
jne
pop
inc
enter
nop
inc
and
inc
xlat
push
lds
aas
push
int3
mov
mov
enter
sub
sub
in
test
gs
div
iret
mov
push
cmp
jle
dec
test
notl
xorb
cld
jg
icebp
dec
add
mov
sbb
mov
cmp
xor
adc
daa
stos
jle
cmpb
ja
and
mov
jbe
inc
mov
lds
sub
in
in
dec
dec
test
or
out
mov
push
iret
dec
or
xor
xchg
add
add
mov
dec
jle
scas
mov
icebp
je,pn
cmpsl
leave
ret
mov
jo
js
inc
mov
cmp
fstp
add
adc
push
insl
xchg
cmp
adc
xchg
push
jb
mov
inc
test
and
dec
outsl
or
and
lret
pop
sbb
das
in
xchg
pop
or
testl
inc
mov
sbb
fwait
sub
popa
adc
cmp
into
orl
mov
adc
sbb
dec
bnd
adc
lock
in
sub
mov
clc
dec
rclb
adc
pusha
mov
aas
mov
push
loopne
in
lea
test
mov
mov
adc
scas
fnsave
nop
push
decl
test
es
xor
xor
sbb
or
add
fadds
addb
dec
xorl
add
pop
sarb
aaa
inc
or
ffreep
imul
xor
sub
add
add
cltd
aad
mov
adc
enter
pop
sbb
test
inc
movb
and
pusha
loop
add
adc
adc
push
dec
sub
fnstcw
or
out
pop
mov
mov
push
es
inc
xchg
shlb
cmp
addr16
test
push
or
repz
xor
lahf
inc
push
xor
je
xorb
push
add
femms
cmova
mov
inc
xchg
xchg
adc
cltd
pop
add
mov
adc
jecxz
popf
gs
dec
inc
lods
dec
pavgb
neg
out
fiadds
popf
xchg
cwtl
mov
or
fsubs
inc
fs
out
mov
jg
and
or
mov
in
jne
fldl
dec
cmpsl
pop
mov
in
and
pop
xchg
loopne
cmpsb
jbe
jno
mov
xchg
sbb
cli
jns
and
outsl
leave
xchg
add
cmpsb
fmull
in
xchg
std
or
cli
add
outsl
pusha
ss
push
sbb
adc
adc
or
clc
pusha
xor
and
andb
shr
adc
gs
fcomps
inc
inc
or
bound
push
popf
clc
xor
lds
cmp
sbb
sbb
clc
lahf
ja
imul
hlt
adc
fs
jbe
ret
cs
in
sub
cs
in
sub
call
addr16
call
imul
sahf
loope
cld
jecxz
loop
mov
cld
fsubl
or
push
adc
daa
xor
roll
cwtl
add
dec
xor
sbb
cmp
rol
rcl
xchg
mov
int3
enter
lea
mov
add
cmpsb
add
pop
push
shufps
adc
mov
icebp
add
or
stc
push
inc
mov
pop
dec
les
cli
mov
mov
sbb
jae
ljmp
jge
mov
add
pusha
addl
sbb
scas
test
sub
push
xchg
jl
or
bound
sub
or
in
cmp
xchg
orl
or
or
in
adc
enter
test
dec
enter
pop
xchg
xor
les
inc
pop
cld
shl
fidivl
mov
cmp
ror
nop
and
shll
imul
and
dec
loop
inc
mov
inc
mov
fsubs
adcl
pop
pop
loop
add
mov
pop
pusha
mov
test
inc
jge
cld
push
and
adc
xchg
push
and
dec
clc
push
xchg
xor
xor
outsl
inc
out
lret
shrb
testl
sbb
jmp
sbb
call
mov
pop
pop
pop
pop
xor
fdivs
or
pop
hlt
jp
cmp
call
adc
imul
mov
and
xchg
aad
fdivs
in
jb
arpl
jne
pop
mov
jbe
jge
je
stos
and
fidivl
popa
ret
sub
xor
mov
imul
ljmp
enter
xor
dec
push
call
inc
test
adc
pushf
push
pop
repz
cmp
cmpsb
mov
mov
dec
fcom
mov
test
cld
add
addb
cld
jmp
mov
inc
shlb
mov
imul
add
mov
xorb
xchg
fs
hlt
cmp
mov
jp
ret
mov
mov
dec
aaa
insb
popa
dec
jg
mov
sub
xchg
testl
cmovl
jae
sub
and
sarb
xor
xor
in
sub
sub
cmp
lret
loopne
aas
cwtl
dec
and
or
loop
cmp
sub
call
lock
mov
mov
mov
lahf
insl
faddl
mov
lods
add
add
scas
cmp
std
cmp
je
add
in
cs
fmuls
mov
dec
insl
or
jmp
imul
add
in
or
pop
insl
pop
pop
mov
sub
dec
and
cmpsl
sub
push
cltd
ljmp
xchg
or
push
pop
pop
nop
aaa
mov
pop
inc
aas
mov
mov
adc
inc
cmp
mov
inc
add
repnz
rolb
sub
sub
loop
cmp
mov
mov
lahf
mov
cmp
xor
jo
dec
movb
adc
enter
jno
sub
loope
xor
push
out
mov
push
xlat
ret
int3
cmp
dec
rolb
cmp
add
or
push
jge
xchg
add
add
jp
sahf
cs
push
pop
sbb
nop
imul
rcrb
scas
adc
xchg
leave
shrl
sarb
jbe
es
dec
mov
and
pop
cmpsb
clc
dec
or
jns
daa
jg
adc
dec
popa
cmp
jg
test
rolb
jnp
insb
xlat
inc
jne
jmp
addr16
stos
sti
and
xchg
cmp
fnstenv
xchg
add
inc
mov
jno
sub
or
int
inc
sbb
or
andb
push
iret
push
test
dec
out
add
movsb
xchg
xor
out
push
push
xor
mov
aas
pop
repz
js
test
xor
lock
shll
aas
xor
out
add
push
push
push
add
roll
sub
pop
arpl
sub
lret
cld
shr
inc
aas
inc
aas
hlt
shl
inc
nop
xor
push
mov
mov
test
ret
lods
lock
jecxz
sub
test
sub
enter
sub
dec
rorb
fsubr
mov
outsb
adc
loop
fwait
and
adc
sub
cs
mov
pop
or
shrb
xor
ror
mov
sbb
jmp
adc
scas
lret
dec
xor
movsb
dec
aaa
jmp
mov
sbb
in
cmp
xchg
or
jo
adc
and
mov
add
and
subb
stos
sub
rcrb
aas
push
mov
xchg
sub
outsl
adc
and
call
push
dec
add
cmp
imul
or
inc
dec
mov
push
pop
cmp
je
das
mov
testb
mov
ja
outsl
sub
mov
cmp
les
jbe
adc
lea
push
xchg
adc
sub
push
inc
push
loope
and
push
mov
in
jmp
imul
inc
mov
mov
xchg
xor
inc
xchg
inc
in
inc
push
jmp
inc
mov
fcmovnb
sbb
in
or
xor
pop
andl
and
xor
xor
loopne
or
or
ret
sbb
enter
or
testl
jg
popa
lea
mov
cmc
jmp
or
mov
ret
mov
mov
add
sub
jbe
cmc
jbe
std
mov
jmp
icebp
ret
cmp
jae
mov
add
adc
push
add
pop
aad
mov
fstpt
adc
in
or
mov
stos
ss
test
imulb
add
aas
stos
jb
xrelease
adc
call
adc
sbb
or
sbb
gs
sub
fwait
lods
aam
loop
add
mov
invd
push
cwtl
fstp
cmp
jbe
jg
add
mov
cltd
jne
aam
jb
sub
sub
cmp
push
adc
push
je
mov
mov
gs
mov
jmp
sub
fldenv
rol
inc
pop
jmp
or
inc
lock
rorl
sub
cwtl
and
mov
jbe
mov
mov
or
fmull
pop
and
adc
leave
rcll
out
dec
cld
lods
cmp
je
sub
lret
loopne
in
pxor
les
loop
and
or
sarb
and
push
adc
mov
push
jmp
inc
insb
subb
fsubrl
loope
inc
into
cmp
test
insl
inc
cmp
inc
out
jecxz
mov
add
push
pop
and
arpl
mov
xor
and
inc
lret
dec
mov
adc
cmp
mov
rorl
test
xchg
pcmpeqb
mov
sti
dec
mov
push
cwtl
pop
pusha
or
jo
fs
add
sbb
or
sub
rclb
ja
add
dec
sub
ljmp
arpl
dec
mov
mov
imul
pop
jb
cmp
cs
ja
icebp
lea
sti
mov
dec
mov
and
lods
or
lea
popl
loopne
dec
inc
inc
test
xor
mov
mov
mov
test
incl
adc
push
or
add
inc
add
pop
nop
sbb
sub
or
mov
pop
cli
pusha
rorb
mov
inc
jmp
pop
or
sbb
outsl
loopne
sub
pop
push
mov
loope
sbb
mov
push
scas
add
pop
push
flds
test
pop
cld
xor
ljmp
push
lcall
push
sub
and
sub
cmp
pop
pop
stos
incb
xchg
push
xor
sarb
insb
cmp
stc
add
test
add
ret
lods
and
or
lcall
push
pop
outsb
das
ja
shl
mov
popf
in
push
mov
and
fmull
rolb
cmp
push
ljmp
das
jge
loop
pop
test
xchg
mov
mov
add
fldcw
pop
outsl
arpl
outsl
add
loopne
sub
pop
mov
mov
mov
dec
push
xchg
mov
jle
jbe
inc
cmp
jne
fucomip
out
sbb
fimull
add
shr
ffreep
out
add
out
xchg
and
and
daa
ja
or
mov
adc
and
icebp
lret
push
mov
mov
inc
enter
cmc
pop
inc
pop
mov
sbb
fiaddl
or
ret
in
push
cwtl
ljmp
add
loop
inc
inc
jecxz
push
xchg
rorl
push
je
push
cltd
push
inc
clc
or
cmp
jl
mov
mov
fiaddl
test
pop
mov
insl
pop
jne
mov
lods
cmpsb
mov
jmp
push
mov
daa
fisttps
cltd
pop
add
outsl
dec
mov
push
xchg
aad
add
inc
add
sub
pusha
lea
lret
jbe
mov
push
mov
sbb
bound
push
inc
or
cwtl
pop
sub
push
push
movsb
cli
loop
jae
jne
imul
fsts
push
insl
cmc
out
and
xor
cmpl
loope
inc
inc
pop
mov
shr
mov
addr16
js
and
mov
or
jg
adc
adc
addl
dec
std
daa
bound
mov
add
inc
rclb
data16
mov
test
loopne
mov
sarb
sti
xorl
mov
cld
mov
imul
xor
nop
cmpsl
sarl
out
inc
xor
jg
fwait
nop
orb
push
or
adc
jo
and
jmp
jbe
mov
adc
imul
fiaddl
jmp
fimull
fimull
inc
sub
cli
fisttps
dec
pop
icebp
xchg
mov
jecxz
dec
xor
xchg
dec
push
lea
psadbw
sub
xor
inc
or
repz
xchg
inc
sbb
xchg
push
xchg
add
sbb
dec
inc
pmaxsw
mov
adc
fisubl
ja
or
insb
inc
sbb
addr16
pop
testb
dec
aaa
rcr
add
mov
push
in
lea
or
and
sub
rclb
and
enter
cmp
sub
subb
push
mov
ret
push
cmpsl
mov
add
cmp
adc
mov
xlat
jg
data16
sbb
sub
ret
outsb
popa
faddp
mov
jb
or
sbb
push
add
xor
stos
mov
or
cltd
sarb
je
inc
insl
adc
xchg
inc
jg
lea
je
cmc
hlt
pop
add
cltd
xchg
push
cmp
push
lret
cmp
or
mov
les
adc
xor
mov
scas
pop
push
mov
and
es
push
pop
cli
xor
sub
push
or
sbb
js
and
leave
inc
in
dec
mov
pop
or
add
popa
mov
sub
mov
sti
lock
and
stos
inc
push
dec
dec
orl
sbb
in
sbb
cs
pop
mov
inc
and
fidivl
filds
dec
jne
cmpsl
cli
sbb
and
incb
add
pop
jnp
movsb
jns
and
pop
or
xor
pop
mov
cmp
adc
popf
in
inc
hlt
mov
adc
dec
sbb
aad
enter
push
mov
enter
dec
pop
and
cwtl
dec
mov
ljmp
out
and
xor
mov
jecxz
and
add
pop
and
inc
in
inc
pushf
nop
loop
les
pop
pop
xchg
sub
pop
sub
enter
icebp
leave
lds
popa
out
or
mov
popa
dec
cltd
mov
outsl
and
sub
ja
or
pop
push
orps
loope
xchg
stos
push
das
sarl
adc
rcl
pop
pop
or
add
pop
loope
fadds
fst
adc
push
sbb
lds
cs
out
loopne
push
icebp
mov
iret
aas
jb
outsl
or
lods
fldl
mov
daa
rorb
test
test
xor
add
push
lea
mov
add
je
add
push
pop
sub
push
fmuls
imul
push
in
add
imul
mov
push
sbb
mov
push
push
std
or
add
mov
dec
nop
cmp
imul
pop
insl
std
mov
js
add
sbb
movsbl
daa
adc
push
sub
inc
or
lret
mov
es
fmuls
fs
push
push
sbb
imul
or
or
mov
push
div
pop
inc
movsl
sub
dec
call
es
mov
out
add
rolb
out
mov
and
jge
test
popa
push
pop
shr
int3
sbbb
lock
push
and
filds
jne
sub
jmp
jle
add
pop
mov
xchg
lock
and
pop
jle
insb
pop
mov
jge
add
cmp
xchg
pop
cmp
jne
popa
pusha
add
shrl
pop
mov
mul
movsl
adc
inc
lret
xor
jmp
out
lds
in
addr16
repz
or
test
fldt
adc
jmp
xchg
inc
cmp
loopne
ret
inc
jbe
aam
pop
jecxz
cmp
push
sub
ret
mov
jp
sbb
clc
adc
adc
push
shlb
inc
movsl
adc
xor
imull
inc
jmp
or
xchg
sbbb
push
clc
cmp
cs
sbb
mov
insb
xchg
mov
js
lods
lahf
xchg
adc
aam
adcl
or
pop
pop
push
int3
and
scas
add
add
adc
out
sbb
mov
cld
mov
xchg
mov
loope
hlt
scas
test
sbb
fildll
fdivs
mov
fistpll
dec
movb
js
imul
pop
or
fstpt
neg
inc
sbb
mov
push
maskmovq
idivl
and
mov
or
je
xor
aaa
add
div
add
push
sub
fdivs
cli
mov
inc
shr
aas
dec
mov
dec
or
mov
aaa
idivl
in
lahf
or
xor
mov
mov
imul
xor
dec
add
invlpg
jge
int3
lods
mov
cld
pop
adc
sub
or
repz
jmp
cmp
fildl
aaa
pop
sarl
sub
sbb
movsl
pop
jns
fstps
loopne
add
icebp
mov
fnstcw
fldcw
fstsw
not
and
push
mov
mov
push
sub
xchg
xchg
xchg
push
push
cmp
nop
xchg
and
push
testl
dec
and
iret
dec
test
pop
decl
or
sbb
stc
je
aaa
inc
or
out
add
adc
inc
inc
pop
push
dec
imul
movl
inc
out
and
cmpsb
pop
dec
push
cmp
das
iret
xor
sbb
movsb
fwait
pop
inc
insl
je
push
js
push
call
jmp
out
fdivl
daa
or
jo
enter
pop
jns
dec
and
insb
popa
testl
or
push
mov
movswl
dec
ret
jno
push
sbb
pop
cli
and
fsubl
xchg
xor
sub
or
dec
jne
pop
daa
or
add
mov
mov
push
test
sbb
xor
xchg
rcrl
inc
orl
gs
or
clc
outsl
pop
or
dec
inc
inc
push
or
ja
or
dec
and
jb
mov
mov
test
incb
cmp
add
fucomip
mov
sub
inc
push
adcl
in
popa
iret
dec
dec
call
call
adc
imul
push
loope
jmp
imul
jmp
jbe
mov
dec
xchg
push
sub
pop
inc
jg
inc
and
or
mov
inc
mov
dec
push
mov
pop
shrb
fwait
xchg
pop
sbb
sbb
push
jb
push
add
cs
cmp
push
mov
sarb
xchg
mov
outsb
lahf
sbb
xor
inc
inc
push
testl
inc
mov
arpl
mov
and
pop
jb
test
jne
mov
or
adc
nop
mov
loope
xchg
add
pop
sbb
lea
pop
mov
insb
les
sub
mov
sub
push
add
mov
lds
leave
and
cmovno
sbb
int3
xchg
sbb
into
iret
add
cmp
dec
pop
jb
pop
lds
out
pop
and
pop
clc
push
sbb
sbb
and
in
jne
or
fildl
adc
add
fwait
popa
mov
addl
outsb
imul
jno
or
ss
fsts
sbb
add
std
and
int
cmp
xor
insb
push
sbb
mov
stc
enter
bound
push
push
fsts
fsts
mov
jl
xchg
and
pop
pop
mov
xchg
jl
repz
insb
lods
adc
jge
pop
and
jecxz
mov
jae
jg
dec
add
pop
push
xchg
pop
xchg
subl
push
sub
dec
mov
jnp
xchg
adc
and
xor
xchg
xchg
dec
push
sub
jno
out
sbbb
xor
ret
inc
loopne
xor
add
popa
cmp
stos
push
inc
add
str
sub
rorb
in
sbb
iret
or
add
push
and
add
or
inc
jb
push
test
pusha
ljmp
mov
cmp
push
stc
insl
dec
out
les
popa
call
in
enter
sub
insl
dec
mov
pop
adc
pop
sbb
popf
and
mov
insb
mov
inc
cmp
or
xchg
inc
idivl
mov
cmpsl
cmp
lock
dec
es
and
jae
push
and
popa
out
bound
and
leave
pop
test
pop
dec
sbb
pop
push
les
mov
push
dec
add
xchg
sti
ret
ffree
xor
inc
sub
pop
pop
pop
loopne
inc
in
or
xchg
adc
aaa
bound
leave
mov
lock
pop
dec
and
insb
pop
addr16
orb
movl
jo
insb
mov
xor
add
test
popa
mov
adc
insb
movsl
xor
clc
dec
arpl
repnz
push
push
push
into
dec
gs
add
rcrl
rolb
jae
dec
or
popa
xchg
or
ret
add
or
add
int3
test
fs
add
fsts
cltd
fstl
sahf
mov
and
sbbl
lds
cli
cld
or
mov
adc
fcomi
jge
dec
sub
sub
adc
inc
mov
insb
adc
mov
int3
xor
daa
bswap
test
adc
push
out
cld
lret
movsl
sbb
jge
pop
inc
loope
test
mov
inc
push
push
rolb
add
pushf
nop
pop
arpl
gs
es
push
jo
add
xchg
mov
subl
sbb
repnz
jo
rcl
lock
data16
pop
pop
adc
xor
stos
xchg
sbb
pusha
mov
repnz
jne
pop
andb
cmp
add
mov
pop
or
cmpl
xchg
mov
sbb
add
add
pusha
hlt
loopne
inc
push
test
lea
and
addr16
sbb
xchg
packuswb
fs
pop
and
add
push
loop
jne
iret
in
xchg
mov
movsb
jnp
std
push
add
push
mov
cs
hlt
imul
hlt
adc
dec
lock
mov
ret
sbb
push
push
cmpsb
imul
imul
dec
push
adc
push
in
imul
and
xor
ja
pop
sub
adc
loop
pop
sub
pop
add
or
pop
stos
inc
ljmp
add
adc
mov
sbb
rcll
mov
lea
sbb
arpl
jmp
out
sub
mov
cmpsb
lret
xlat
xor
in
outsl
pop
dec
aad
inc
data16
in
sub
jo
cmp
nop
lret
mov
pop
cmp
mov
xchg
popa
int
inc
pop
xor
shl
and
fsubs
sub
xchg
lock
adc
sub
push
rcrl
xor
pop
mov
inc
addr16
les
cs
movsl
xor
into
sub
movsl
fildll
movsl
sti
test
scas
sub
sub
aaa
ret
fistpll
and
enter
jb
and
add
outsl
xchg
int3
cmp
and
movl
dec
test
insb
add
jnp
adc
jbe
push
add
call
add
mov
aaa
or
pop
inc
push
inc
cwtl
jo
pop
xor
sarl
or
test
rcll
in
popa
loope
and
out
sbb
jge
ret
fwait
pop
ret
mov
fisubrs
xchg
shrb
xor
inc
insb
int
xor
rorl
notb
fsubrs
rolb
notl
sbb
out
in
inc
insl
inc
nop
push
xor
insl
js
xor
adc
push
add
jg
shlb
mov
insl
mov
add
cmpb
enter
sub
and
xor
iret
jne
pop
insl
jmp
iret
cltd
xchg
mov
push
xchg
push
nop
add
fs
call
fs
in
add
and
outsl
adc
cltd
xchg
sbb
pop
cmp
hlt
iret
outsl
pusha
add
nop
test
sub
nop
clc
cwtl
clc
enter
jne
cli
add
xchg
orl
out
add
adc
jo
jbe
sbb
push
fs
push
dec
or
fs
or
or
or
fs
push
mov
fs
adc
fs
push
fs
adc
xor
pop
jno
sbb
iret
pop
xchg
cmp
dec
pusha
jno
or
sbb
shll
sbb
leave
orl
enter
jmp
xor
roll
stc
fnstenv
add
rclb
dec
and
xchg
inc
rol
mov
push
or
ret
pop
repnz
out
les
cmpl
addr16
andb
xchg
adc
shlb
add
adc
imul
cmpsb
imul
fisttps
dec
cld
test
and
cmp
adc
lahf
loopne
iret
or
inc
xor
jae
push
sbb
iret
scas
add
testb
push
ja
xor
xor
aad
push
jne
and
xchg
mov
dec
dec
xor
in
cmp
decl
movsl
sub
push
and
leave
push
js
clc
sub
jne
mov
cmpb
aam
sbb
pop
jbe
jbe
icebp
loopne
xor
dec
jbe
add
inc
cmp
inc
push
nop
add
xchg
inc
mov
push
shlb
xchg
xor
pop
test
inc
push
aam
call
in
gs
or
jmp
or
fisttpll
fdiv
jbe
sbb
or
nop
xchg
or
ja
int3
mov
mov
rorb
jne
sub
xchg
xchg
out
sbb
sbb
cmp
in
or
movsb
into
and
mov
outsb
popa
mov
add
popa
jp
ret
aas
ja
jno
mov
ror
cmp
mov
jl
popa
jne
xor
xchg
fsubl
ret
outsl
add
xchg
jo
ret
outsb
out
mov
lds
imul
sbb
popa
arpl
push
push
mov
outsl
and
jo
sbb
add
das
or
inc
jecxz
cs
aas
out
and
ss
imul
fwait
imul
loope
add
and
push
gs
mov
aas
sub
or
stc
add
mov
inc
add
test
repz
adc
add
aas
enter
loopne
jns
rorl
sbb
inc
test
jns
jns
clc
clc
pop
lds
dec
inc
hlt
hlt
js
addr16
xchg
cmpsb
lock
aad
fs
in
adc
jge
call
nop
int3
push
in
xchg
in
in
ss
xor
jb
jp
sbb
fdivrl
je
lea
push
and
lret
hlt
cmpsb
xor
push
and
add
daa
jns
call
notl
pusha
imul
xor
adc
cmpsl
adc
daa
pop
mov
mov
fists
movsl
mov
insb
jae
inc
jnp
leave
add
push
lods
insl
ja
jp
dec
lock
jns
rcl
cmpl
jb
push
shl
out
xchg
gs
adc
jne
mov
pop
or
rclb
and
imul
dec
or
enter
pop
pop
dec
jne
fs
cmpsb
push
xchg
sarb
sub
add
cmp
cmpsb
sub
cmp
cmp
mov
cmc
pop
mov
push
adc
mov
xor
sub
mov
inc
mov
and
dec
jo
imul
ffreep
scas
inc
test
mov
subb
add
setg
and
imul
mov
add
xchg
dec
fisubrs
dec
gs
adc
or
sbb
daa
and
cmp
divl
inc
adc
stc
push
push
pop
jl
jg
push
sti
pop
jl
out
mov
pop
jge
add
and
pop
out
dec
imul
push
ret
in
push
int
jle
mov
xchg
negl
pop
or
xor
lcall
push
cmpsb
imul
pusha
mov
testb
shlb
jae
xor
rclb
mov
dec
ret
sbb
xchg
iret
dec
ja
dec
xor
mov
cmp
cmp
mov
in
adc
add
in
mov
jbe
dec
or
inc
push
sbb
and
adc
and
jb
add
enter
andb
add
mov
insl
xchg
in
mov
xor
or
jp
dec
cltd
inc
cmpsb
nop
push
push
pop
xchg
or
sub
je
cmp
xor
call
jmp
mov
jp
jmp
sub
jecxz
je
sub
adc
cli
cmp
cmp
movsb
sbbb
jmp
in
dec
or
fistl
lds
dec
clc
fisttpl
cmp
out
ss
push
enter
sub
lods
xor
push
mov
dec
dec
cs
add
inc
popa
or
outsb
das
lock
addr16
mov
or
rolb
inc
mov
lods
pop
adc
add
std
loope
xor
dec
in
pop
mov
push
add
inc
jns
xchg
les
xor
and
or
push
test
jecxz
push
fcmovbe
lods
mov
sbb
xchg
and
jne
inc
mov
sub
add
je
jno
sub
mov
xchg
les
outsl
push
aad
data16
jg
add
add
pop
decl
inc
decb
jne
jae
test
in
mov
incb
xor
testl
sbb
outsb
inc
add
mov
lret
and
and
fs
inc
fsubs
sbb
mov
pop
inc
mov
cs
or
stos
into
adc
add
adc
xor
pop
les
adc
fists
pop
loopne
xchg
fbstp
test
adc
xchg
xor
sub
inc
in
repnz
aas
out
sbbl
push
adc
dec
sub
adcb
popa
aam
movsl
add
fcoms
cmc
subb
lahf
push
leave
rcrl
dec
scas
jecxz
into
cmp
js
aam
adc
dec
fisubs
outsl
mov
enter
nop
enter
or
je
sbb
sbb
inc
adc
xchg
xor
sub
xchg
sub
xor
mov
mov
cltd
dec
aaa
add
mov
xor
inc
das
add
lock
call
inc
ret
adc
sub
int
sar
lock
dec
or
xorb
jb
push
inc
ret
mov
fstpt
push
sbb
aad
xor
add
add
mov
gs
xchg
dec
adc
xor
daa
lods
dec
pop
ret
test
ja
leave
xor
les
sbb
cmp
jo
cli
arpl
sbb
shll
push
jo
and
lods
or
add
mov
adc
add
pushf
fs
push
adc
add
or
mov
in
pusha
cld
cmp
mov
cmp
mov
push
add
dec
or
jns
mov
pop
mov
in
dec
sub
sub
mov
xor
pop
dec
pop
les
dec
imul
sub
jmp
gs
data16
mov
jb
iret
and
and
pop
cmpsl
dec
outsl
inc
push
add
jns
outsl
xchg
pop
aaa
or
nop
xchg
dec
cmp
push
xchg
dec
movsl
and
mov
push
sub
push
in
jp
push
lcall
aas
adc
mov
sub
mov
lahf
test
push
daa
or
mov
add
inc
rcrl
push
xchg
popa
in
nop
scas
xor
js
popa
xlat
int3
add
imul
or
ss
inc
jae
adc
data16
xchg
push
mov
xchg
iret
inc
lods
mov
scas
rcl
push
add
or
je
dec
mov
cltd
push
inc
insb
xor
bound
add
xor
pop
enter
mov
push
inc
int3
xchg
and
mov
push
imul
pop
movsl
inc
decl
mov
test
cmp
xchg
mov
enter
fimull
out
mov
sbb
or
and
adc
jle
cs
dec
test
adc
clc
aaa
inc
sbb
lea
out
inc
mov
lods
insb
pop
xchg
lods
inc
imul
inc
out
pop
ss
or
or
and
add
pushf
push
push
push
push
in
pusha
mov
dec
push
or
clc
cmp
movsb
add
push
pop
adc
out
ret
pop
xchg
data16
sub
and
fbld
pop
clc
jg
jnp
inc
xor
xor
sbb
xor
sub
sub
sub
xor
xor
ss
ss
mov
mov
or
mov
cmp
psubb
add
clc
xlat
ret
cmp
mov
mov
add
aas
mov
sahf
in
add
cltd
mov
sub
lods
out
mov
mov
mov
outsl
pop
or
sbb
inc
imul
push
es
and
stos
pop
jo
sbb
pop
xchg
inc
dec
nop
xchg
jmp
test
adc
or
fsubl
cmp
arpl
ja
sub
int3
ja
xor
jne
pop
mov
lea
popf
inc
pop
pop
pop
sub
pushl
add
call
add
inc
mov
xorb
add
mov
loope
adc
les
roll
push
and
mov
add
out
xchg
add
xchg
out
jle
push
test
push
push
in
cwtl
insb
cmp
es
push
int3
pop
adc
mov
jb
mov
or
push
sbb
add
test
or
pop
pusha
pop
pop
cs
pop
call
jl
cld
lcall
nop
adc
in
imul
movsl
mov
xor
dec
dec
push
sbb
xchg
in
bnd
cs
pop
pop
add
pop
push
test
lcall
repz
pop
flds
out
xchg
out
in
add
cwtl
push
mov
lcall
mov
dec
dec
nop
push
ja
adc
sbb
in
sti
xlat
add
jg
push
push
loopne
inc
fcoms
pop
mov
pop
push
pop
dec
pushf
push
push
inc
pop
imul
adc
push
int3
inc
fsubl
mov
or
push
ds
xor
cmpsb
inc
push
inc
aam
out
xor
inc
lahf
les
cmpsb
push
xor
push
movb
or
push
movsl
insl
out
pop
addr16
or
push
nop
push
sbb
std
int3
pop
test
mov
lods
lods
ss
mov
push
mov
adcb
xor
loop
cld
dec
jae
stc
pop
lret
and
hlt
mov
rcrb
rolb
sub
hlt
int
xor
sub
jne
je
int
mov
jbe
and
cld
int3
pop
fisubl
mov
je
repz
pop
mov
gs
insl
dec
repz
xlat
fnsave
jmp
out
out
hlt
push
les
dec
xlat
pop
add
push
add
mov
push
mov
mov
sti
xchg
sti
int
jnp
cs
pop
and
sub
ret
mov
xor
add
fildll
cmp
lods
imul
push
dec
cs
jb
and
js
xor
jae
insb
jns
rorb
sub
imul
movsb
push
cwtl
push
push
jp
jnp
push
fdivs
fs
sub
shll
xchg
fs
mulb
pop
fcoml
lods
div
dec
mull
hlt
dec
rcr
out
cld
sti
les
jl
xor
test
popa
cs
jo
jg
mov
xchg
dec
pusha
or
in
mov
repnz
lods
cmp
xor
adc
pop
adc
sbb
xor
pop
sbb
push
shlb
je
out
in
sub
or
clc
pop
sbb
lock
fwait
stc
pop
sbb
push
adc
mov
pop
lcall
mov
mov
mov
xor
out
cmp
les
fistpl
es
fistpl
pop
mov
fisubs
sbb
lcall
mov
lcall
mov
xor
sahf
dec
mov
scas
std
decl
test
add
dec
dec
push
dec
fs
popf
mov
aam
push
jl
fwait
jge
mov
dec
cmp
dec
dec
les
push
imul
nop
clc
enter
lret
cld
push
cmpsb
pop
pushf
push
adc
aad
lcall
nop
push
dec
jae
push
lods
add
or
adc
add
cmpsb
imul
mov
enter
mov
pop
shrl
pop
pop
push
pusha
outsb
xor
mov
imul
lcall
mov
fs
xor
pop
jo
pushf
push
insb
call
inc
movsb
mov
cmpb
jo
add
in
cltd
rolb
pop
outsb
nop
push
fidivs
push
mov
push
js
cmp
test
push
pop
shlb
push
lods
jl
cmpsb
mov
inc
mov
mov
rcrl
add
adc
in
les
enter
mov
in
push
aad
mov
movb
inc
add
mov
mov
add
ds
dec
adc
pop
adc
fadds
cmp
enter
enter
fcomp
fxch
loopne
jecxz
mov
or
cmp
out
mov
and
popa
je
xor
adc
inc
out
nop
xchg
pop
arpl
imul
add
je
xor
pop
mov
pop
roll
pusha
add
sbb
mov
mov
shlb
add
in
add
push
call
leave
daa
or
aas
call
pop
es
imul
push
loopne
lock
shrl
cmp
add
or
sbb
xor
inc
shll
pusha
push
jo
orb
xor
test
mov
ror
sar
imul
arpl
xor
insb
mov
sbb
push
add
fs
fsubrl
gs
es
xchg
aaa
fs
daa
mov
fdivl
mov
cmp
in
cwtl
jae
xor
cmp
or
jne
outsb
rolb
mov
mov
pop
and
and
add
add
mov
nop
or
popl
sbb
inc
or
sub
mov
push
pop
inc
das
inc
mov
mov
jg
or
adc
jge
push
xchg
mov
pop
cvtps2pi
or
or
ss
or
jbe
cmp
inc
xor
shll
push
xor
shrl
imul
mov
jo
lmsw
add
adc
shll
add
imul
daa
xchg
or
sbb
cmpsl
push
push
inc
xor
rcrl
rcrl
pop
mov
adc
push
inc
or
cwtl
pop
xor
add
push
pop
mov
outsb
outsb
in
pmuludq
in
lret
or
cmpb
daa
cmp
rolb
cmp
and
sub
seto
out
in
lcall
or
psubusb
cmpsb
lret
iret
inc
fimuls
jo
sti
and
mov
jns
in
add
js
nop
setae
dec
sahf
test
mov
or
pop
jno
sbb
leave
xchg
out
movaps
adc
cmp
repnz
sbb
daa
dec
fcoml
clc
sbb
pop
sahf
cmp
repnz
inc
push
push
sbb
and
mov
xchg
in
jl
mov
add
loopne
hlt
or
xchg
daa
fucomi
push
mov
mov
cmp
in
and
je
sbbb
leave
xchg
daa
dec
xor
cmp
repnz
mov
mov
mov
dec
sahf
hlt
out
scas
add
xchg
arpl
sub
sub
add
icebp
push
lods
insl
pop
ds
cmp
aam
imul
or
pcmpgtb
subl
add
jg
add
ss
adc
sbb
nop
push
cli
or
or
sbb
not
adc
in
sbb
ss
mov
loop
adcb
fcmovbe
xchg
mov
insl
ja
out
sbb
and
xor
mov
push
cs
jae
add
push
add
xor
and
unpcklps
enter
adc
jns
pop
push
xor
fs
inc
push
push
or
nop
inc
push
sbb
sbb
sbb
mov
in
and
adc
mov
lcall
push
in
in
hlt
xor
rcrl
sbb
or
xor
jbe
iret
inc
push
push
push
mov
or
xchg
add
push
test
add
rclb
adc
mov
or
shll
push
xor
movsb
mov
shrb
dec
rcr
lock
push
adc
cmpsb
imul
push
aas
add
or
add
mov
or
jmp
push
fstpt
pop
or
nop
pop
iret
call
decl
lods
std
mov
cmp
in
stc
lock
rolb
sbb
leave
xchg
daa
dec
sub
inc
hlt
push
repz
repnz
bnd
mov
mov
sahf
mov
enter
or
in
in
jmp
ljmp
sub
pop
subb
adc
or
lock
inc
fmuls
decb
iret
pop
mov
inc
or
or
add
scas
js
insl
test
mov
pop
push
push
xchg
inc
and
fsubrs
inc
jmp
ficompl
cwtl
or
outsl
inc
add
mov
insl
js
fiaddl
mov
scas
sbb
or
adc
test
or
jg
mov
es
popa
push
xchg
xchg
pop
add
xchg
stc
shll
cli
sti
dec
shll
add
dec
shll
addb
adc
pop
inc
add
lcall
push
pop
fs
pop
jnp
sbb
testb
push
push
cld
xor
sarl
or
xor
xor
rcll
insb
jl
mov
jl
mov
lods
mov
les
addr16
add
add
or
add
or
iret
sgdtl
or
sub
cmp
and
cmpsl
in
dec
sarl
or
enter
aam
dec
shll
jl
clc
subb
shl
mov
test
sbb
lcall
add
shll
xchg
sbb
dec
shll
cwtl
sub
shll
cmp
movsb
inc
cwtl
test
test
dec
shll
pop
mov
dec
ror
mov
fdivrs
jo
mov
cmpsb
mov
les
enter
mov
cmp
lods
dec
aam
cmpsb
imul
cmpsb
imul
stos
sbb
cmpsb
in
jle
lcall
in
adc
lock
imul
xor
clc
in
add
add
cmpsb
imul
cmpsb
imul
adc
pop
sbb
dec
rcrl
sbb
adc
and
dec
shll
and
cwtl
sub
xor
rcll
fs
xor
xor
fdivs
call
dec
sar
inc
mov
or
imul
imul
dec
shll
adc
pusha
sub
xor
shrl
cmp
push
dec
mov
jo
dec
shll
test
insb
mov
js
enter
shll
test
clc
mov
cmpsb
imul
fdivrs
cwtl
in
cmpsb
imul
movsl
imul
shll
cmp
mov
mov
les
mov
xor
rcr
shlb
dec
mov
or
loopne
add
shr
jle
insl
cmpsb
imul
cmpsb
imul
subl
xor
shll
or
dec
sarl
xlat
xor
sbb
mov
daa
sbb
fcomps
push
lea
xchg
xchg
outsb
movsb
clc
ds
lock
loope
or
rorb
sub
sub
fmuls
dec
or
mov
add
xchg
andb
push
dec
shll
jle
xchg
sbb
cwtl
dec
shll
xor
xchg
orb
dec
dec
das
push
mov
or
shll
dec
push
xor
shll
insb
js
nop
shlb
ror
imul
push
nop
pushf
test
cmpsb
imul
jae
cld
ret
or
sub
xor
sarl
inc
push
pop
xchg
mov
and
cmp
sti
or
mov
push
aam
in
imul
cmpsb
imul
imul
cs
ror
cli
call
or
imul
imul
cmpsb
imul
jno
jb
mov
jmp
jbe
pop
xchg
mov
dec
adc
fstpt
pop
jl
pop
mov
daa
iret
mov
les
iret
leave
clc
mov
imulb
push
add
sub
fisubs
int
sub
push
cmp
movsb
mov
outsl
push
push
ja
push
jg
js
pop
mov
xor
mov
les
divl
int3
leave
dec
pop
in
cltd
mov
push
xor
push
sub
popw
jo
and
add
pop
push
pop
ret
enter
mov
add
push
rcrb
xchg
xchg
pop
call
or
or
mov
in
push
ja
xor
inc
out
into
and
pop
pop
cmpsl
add
inc
scas
loop
loopne
dec
pop
mov
add
icebp
outsb
js
incl
mov
push
int3
es
adc
add
addr16
mov
imul
add
lock
fwait
mov
inc
pop
pop
enter
cltd
jo
add
xchg
notl
xchg
add
add
add
sahf
and
leave
add
add
cmp
sbb
xor
dec
sahf
xchg
out
or
out
cmp
mov
jns
sahf
xchg
or
movsb
pop
in
in
adc
push
adc
xchg
out
adc
adc
in
jns
pop
adc
xchg
push
mov
mov
cmp
inc
sahf
call
and
pop
jo
sbb
mov
in
adc
xor
or
mov
int3
out
adc
imul
inc
push
mov
pop
sbb
sbb
rcrl
sahf
je
sbb
push
test
dec
xchg
cs
xchg
pop
nop
pop
sbb
xor
fs
sbb
js
imul
fildll
ds
and
xor
das
and
dec
push
fs
ret
xchg
add
add
add
push
repz
and
pop
and
dec
jo
pop
pop
fisubrl
push
add
inc
movsl
inc
and
push
add
add
xchg
popa
xchg
sbb
add
daa
add
lahf
push
add
and
adc
add
stc
shlb
jbe
add
sub
add
in
sub
and
inc
sahf
or
sub
push
dec
sbb
sub
pop
add
ret
aad
inc
cmpsl
inc
xor
push
xchg
daa
enter
inc
add
pop
repnz
inc
or
adc
mov
aas
mov
mov
dec
jbe
add
dec
add
adc
sbb
lahf
testb
inc
ja
mov
push
pop
cmpsb
imul
push
push
jns
pusha
push
jg
push
add
xchg
inc
adc
mov
mov
pop
dec
pop
daa
push
dec
pop
fwait
pop
daa
pusha
mov
nop
jmpw
addr16
daa
push
loope
push
int3
jno
or
xor
and
mov
xchg
jp
daa
jnp
rorl
add
jge
sbbb
mov
add
dec
adcl
es
test
daa
test
mov
ja
mov
orl
push
mov
mov
mov
mov
dec
mov
fildl
test
mov
pop
adc
or
pop
rcl
inc
rcrl
daa
sub
cs
push
loopne
fildll
outsl
and
das
mov
xor
inc
lcall
or
test
xlat
das
xor
xchg
cld
das
xor
xor
pop
xor
ss
pop
aaa
xor
xchg
cmp
imul
cmp
sub
fiaddl
pop
ja
cmp
push
movsb
mov
imul
xor
cmp
inc
call
push
clc
inc
add
sbb
js
adc
or
dec
pop
dec
push
push
enter
xor
dec
push
dec
pop
push
shll
dec
je
mov
enter
dec
lcall
pop
je
cs
lea
dec
das
dec
hlt
sbb
dec
sti
test
or
push
xchg
cwtl
cmpsb
ret
imul
sbb
clc
mov
jg
adc
mov
ja
mov
imul
cmpsb
imul
pusha
lcall
aad
shlb
or
mov
ret
xor
ud0
inc
mov
mov
addl
decl
jg
loopne
shrb
sbb
and
adc
das
out
pop
fbld
insb
pushf
pop
mov
ljmp
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
dec
mov
incl
ja
call
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
jmp
push
add
xor
push
into
incb
shll
or
inc
mov
mov
jle
inc
mov
decl
jge
loop
shrb
out
push
fisubs
loope
shrl
bound
pop
mov
ljmp
pop
or
cmp
push
testb
cmp
add
dec
mov
jbe
dec
mov
incl
jne
ljmp
sub
sbb
and
push
pop
cmpsb
xchg
push
test
jg
mov
gs
push
idivl
lds
push
inc
dec
std
neg
jg
dec
xor
and
jae
push
xor
ja
aaa
sbb
push
bound
mov
inc
sub
sbb
pop
mov
mov
fstp
or
aaa
jb
or
ja
outsl
push
bndstx
cmpsl
mov
test
outsl
getsec
sbb
mov
jmp
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
aas
cmp
cmpsl
shrb
aas
mov
push
loope
pop
stos
jb
push
test
add
xor
xchg
xchg
dec
or
adc
adc
sbb
xor
xchg
adc
mov
lahf
inc
and
sub
sub
sub
and
adc
pop
push
lcall
and
xor
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
shll
add
aas
adc
cmp
or
or
sbb
shlb
fdivs
out
pop
push
dec
rolb
aaa
das
or
fidivrl
ds
cmp
pop
or
scas
push
xchg
cmpsb
imul
inc
cmpsb
insl
addr16
inc
cs
push
jno
xor
nop
cmpsb
imul
gs
push
imul
insb
or
adc
das
es
add
ss
outsb
and
push
cmpsb
outsl
enter
pop
add
add
mov
inc
incl
or
mov
cmp
mov
pop
add
add
lcall
lods
adc
push
adc
std
incl
and
xor
inc
mov
adc
xor
xorb
sbb
sbb
es
sub
sub
cmp
adc
imul
sub
push
call
inc
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
lcall
movsl
cmpsb
cmpsl
test
stos
mov
mov
mov
mov
enter
rcl
sar
call
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
fs
pop
andl
pop
fs
cmp
adc
pop
popa
jno
and
pusha
lock
imul
adc
pop
popa
and
loope
icebp
push
addr16
push
jo
subb
add
pop
pop
sub
pop
or
mov
ror
call
mov
xor
pop
outsl
jge
push
stos
ljmp
pop
sub
jecxz
stos
aad
and
insl
xchg
mov
das
mov
pop
mov
add
popa
cltd
popa
push
add
push
inc
or
out
xchg
add
decb
dec
inc
push
mov
incb
xor
inc
dec
outsl
pop
pop
xor
xchg
and
xchg
shll
call
popa
dec
cmp
inc
lods
inc
push
add
pop
test
pop
enter
sbb
jecxz
cmpsb
imul
cltd
cmpsb
imul
in
push
rolb
in
push
or
lcall
pop
insb
subb
imul
cld
pop
adc
xor
shll
nop
test
cmpsb
imul
pusha
push
jo
orb
fsts
xor
xor
lahf
fldcw
mov
pop
incl
leave
mov
mov
mov
daa
pop
push
fdivrl
inc
call
fadds
mov
or
scas
dec
ret
adc
pop
cmp
movsl
pop
inc
roll
negb
push
out
push
or
dec
sbb
xchg
lock
mov
ss
push
jbe
ds
or
test
cmpsl
xchg
sahf
fimull
pop
xor
adc
push
mov
push
and
nop
push
xchg
aaa
fs
ds
mov
mov
imul
negb
mov
hlt
data16
xor
or
roll
into
outsb
jmp
pop
rcrl
push
and
mov
sahf
push
pop
sub
mov
ret
insb
push
dec
mov
xchg
sub
pop
imul
push
ds
cs
cmp
pop
imul
cwtl
push
aam
in
jl
test
or
es
cs
push
mov
mov
push
andl
es
xchg
mov
into
xor
out
cmpsb
mov
mov
testb
pop
push
rolb
cmp
adc
jle
ds
mov
je
add
test
je
dec
popa
cmp
mov
lods
dec
iret
or
into
call
js
mov
cmp
ficoms
mov
pop
or
lock
dec
mov
sbb
out
mov
jbe
xor
out
loopne
shlb
push
mov
push
push
dec
xchg
push
test
push
js
sbb
addr16
sub
and
fcoms
pop
test
pop
movb
movsl
and
imul
mov
imulb
push
cs
in
dec
imul
mov
push
fsubr
add
pop
inc
pop
fs
ds
sbb
push
inc
insb
ss
inc
adc
mov
aam
test
cld
es
pop
cmp
cmpsb
mov
mov
push
inc
push
cmp
xchg
mov
mov
xlat
cs
prefetchwt1
fdivrs
cmp
fdivs
loop
insl
repz
sub
aam
mov
pop
stc
movsb
jbe
out
adc
orb
add
fmull
int3
data16
mov
push
test
test
mov
dec
sub
add
jmp
out
or
inc
mov
out
push
xchg
mov
rcrl
imulb
insl
pop
iret
nop
xchg
aam
or
sub
es
pushf
scas
dec
jbe
out
add
movb
stos
pop
or
das
nop
dec
pop
divb
mulb
sahf
push
movsl
cmpsb
push
push
push
push
mov
cmp
xchg
imul
xchg
in
rcrl
mov
negb
adcb
enterw
pop
sub
shlb
add
or
inc
push
inc
and
add
mov
scas
les
mov
jle
out
decb
enterw
mov
push
ficomps
jp
mov
loopne
out
mov
push
insb
inc
mov
add
in
xchg
xchg
mov
xchg
mov
or
cmp
pop
outsb
clc
push
imul
testb
jle
push
and
mov
int3
addl
xor
pop
and
mov
in
loopne
adc
mov
ja
cmpsb
test
push
test
add
dec
push
dec
push
push
int
pop
push
imulb
scas
lods
into
ds
add
cltd
lea
sub
in
lret
imul
sub
mov
mov
inc
cmpsb
in
je
inc
mov
fsubl
or
mov
popa
in
jmp
ds
jbe
push
leave
pop
mov
xor
hlt
xchg
les
movsb
push
xchg
mov
fidivrl
or
test
push
iret
aam
pop
pop
into
cmpsb
mov
push
call
mov
dec
test
sahf
mov
add
sahf
sahf
stos
push
jge
mov
mov
loopne
adc
scas
mov
lods
in
imul
mov
ss
lods
push
les
iret
jecxz
xorb
mov
scas
int3
push
pop
adc
dec
les
dec
rolb
jbe
mov
jle
outsl
imul
push
into
mov
fldt
push
push
test
cmpsb
pop
dec
mov
mov
adc
fwait
push
je
out
inc
add
data16
mov
scas
pop
sbb
adc
jmp
pop
test
call
push
in
rorb
ss
gs
mov
xor
push
cmpsb
je
or
pop
fs
into
jl
push
dec
outsb
test
imul
push
push
aam
hlt
fsubrp
xchg
cwtl
outsb
imul
lock
or
enter
outsb
mov
xchg
imul
mov
ss
cwtl
data16
cs
call
mov
push
cs
mov
ss
xchg
inc
lock
cmp
mov
in
xchg
shrl
ds
mov
push
and
inc
outsb
jle
sbb
in
enter
fimuls
sub
push
xor
adc
mov
xchg
and
inc
jnp
adc
hlt
push
pop
je
orb
push
shrb
sub
fcmovnu
movsb
loopne
movsb
inc
add
out
xchg
addb
out
push
es
jmp
mov
and
int3
xchg
pushf
add
lods
push
cld
movsb
mov
mov
dec
push
inc
mov
pop
cmpsb
out
nop
adc
push
loopne
cmc
xor
ja
cmpsb
inc
adc
xor
xchg
popa
or
pop
mov
mov
push
sti
xor
call
push
mov
push
mov
test
push
xor
enter
xor
test
push
push
cwtl
scas
ss
mov
pusha
testb
push
push
data16
mov
mov
shlb
adc
sarb
xchg
push
push
inc
nop
push
mov
lods
add
or
pop
push
pop
and
add
addb
ss
pop
stos
orb
dec
cwtl
xchg
rorl
in
mov
or
push
push
mov
sub
fsubrl
cwtl
fidivrs
aam
shl
mov
jl
adc
xchg
push
mov
aam
pop
dec
inc
in
push
mov
adc
push
cmpb
sub
add
ds
xchg
push
push
outsb
mov
mov
std
jbe
push
dec
gs
enter
outsb
ds
push
mov
nop
inc
adc
add
fs
add
nop
inc
add
add
addl
pop
add
xor
add
mov
imul
dec
add
pop
inc
sbb
inc
ss
and
dec
pop
push
and
pop
dec
aaa
test
insb
push
pop
dec
add
sub
test
pop
sbb
dec
xchg
push
loop
pop
imul
mov
sub
pop
imul
add
es
dec
push
inc
cmp
xor
xchg
ficomps
js
pop
outsl
sub
pop
jnp
in
testb
sub
dec
or
pusha
add
inc
push
push
notb
or
fisubl
dec
ja
into
push
and
insl
dec
inc
pop
push
mov
push
mov
or
push
iret
mov
sahf
inc
or
dec
mov
cmp
inc
outsb
push
inc
sub
outsl
lods
mov
xor
adc
push
into
push
xor
jle
inc
lret
in
out
lcall
sub
data16
push
push
sbb
xlat
insb
pop
dec
pop
adc
or
adc
dec
cmpsl
or
push
push
in
jo
or
ret
sbb
or
xchg
adc
lcall
inc
push
cmpsl
add
pop
lods
lock
pop
dec
mov
mov
inc
jp
push
push
xchg
push
lods
mov
pop
push
pop
or
inc
sbb
inc
mov
or
pop
pop
rcl
ds
lret
push
push
dec
fstps
push
push
jle
fnstcw
push
rdmsr
jnp
bound
iret
inc
aas
or
cs
fcmovnu
je
pop
push
dec
xor
push
xor
add
sub
or
inc
mov
add
add
add
iret
mov
jns
loopne
pop
lock
clc
jl
shrl
out
iret
cld
ss
pop
sbb
in
xor
xlat
mov
add
sysret
mov
lret
out
rolb
add
push
rcr
enter
and
rolb
push
enter
pop
repnz
addb
dec
push
sbb
pop
fldcw
getsec
push
mov
ror
mov
addr16
lods
mov
out
pop
out
pop
cs
sbb
fwait
neg
out
fcmovu
arpl
out
mov
xchg
lret
in
lock
clc
paddb
aas
insb
sbb
push
cs
xchg
popl
addr16
repnz
add
mov
add
std
jge
xchg
add
mov
push
mov
shlw
rolb
inc
add
jo
cmp
sbb
add
pop
push
data16
nop
add
data16
lock
xor
push
cwtl
pop
nopl
iret
or
xor
jg
imul
cmp
and
push
outsl
iret
cs
dec
mov
adcb
and
mov
mov
cmp
mov
pop
outsb
add
push
aaa
push
std
es
lret
cmpsb
clc
lock
aas
rcrb
insl
insb
lret
roll
mov
outsb
es
jecxz
push
or
lahf
mov
loopne
pop
sbb
sub
addb
push
insb
xchg
fcomp
push
cs
jle
in
adc
shll
enter
in
les
test
pop
jbe
dec
xchg
inc
aas
push
pop
mov
mov
ds
dec
in
inc
or
pop
cld
push
push
stos
leave
in
push
fsubrl
aaa
inc
push
insl
add
push
push
jo,pn
cmp
les
iret
inc
jb
jle
jl
cmp
sbb
push
cs
lret
in
add
inc
add
inc
rcll
pusha
xor
sbb
push
sbb
fisttpll
sbb
cmpsl
out
push
loopne
je
ret
roll
mov
xor
jl
sbb
out
jb
pop
push
sbb
or
test
and
loopne
jge
xor
xchg
addr16
add
xchg
push
pop
xchg
dec
mov
fs
sbb
hlt
xor
jo
xchg
or
xor
add
add
clc
jle
lock
add
gs
or
cwtl
cmovbe
aam
roll
les
pop
xor
notl
pop
jbe
pop
sahf
add
add
cmpsb
jns
add
mov
nop
mov
add
sub
sub
pop
outsb
fldl
xor
pop
cld
imul
in
xlat
pop
imul
int
xor
add
pop
or
push
aas
push
mov
cs
jne
ss
in
iret
adc
push
mov
addb
es
sahf
pop
rolb
and
add
call
cmpsb
out
add
xor
add
mov
sbb
cmp
subl
mov
int3
out
fucomi
daa
sbb
cmp
and
cltd
mov
add
xor
in
in
insl
daa
and
jbe
lods
fstp
mov
push
dec
push
movb
xor
push
daa
lret
xchg
mov
push
adc
push
cltd
mov
mov
lahf
dec
daa
dec
addl
daa
sbb
add
mov
clc
push
hlt
sbb
mov
add
mov
adc
inc
enter
inc
sbb
and
cmp
xor
xor
and
daa
inc
pop
xchg
bound
push
movsl
daa
dec
sub
bnd
push
push
aas
push
xor
mov
loope
inc
cmp
push
js
pop
aas
js
cmp
dec
and
push
es
push
and
and
cmp
mov
lods
cmp
ret
pop
push
cmp
ss
andb
lret
or
cmpsl
daa
push
and
push
mov
lds
push
fisttpl
mov
mov
mov
clc
repz
xor
addr16
push
pusha
inc
pop
push
add
testl
xchg
inc
inc
inc
or
mov
pop
adc
or
cmp
daa
inc
aad
push
pop
dec
mov
xchg
dec
pop
daa
mov
out
in
addl
mov
aas
push
movsb
insl
pop
add
clc
daa
add
mov
mov
daa
add
pop
repz
out
inc
fwait
testb
mov
daa
xor
and
jo
sbb
ss
arpl
movsl
jmp
daa
ds
rorl
out
insl
leave
cmp
clc
add
arpl
or
cmp
movl
fs
cmp
insl
daa
push
fisubs
movswl
es
fnsave
cmpsl
lcall
ret
daa
dec
add
xor
outsl
mov
in
repz
out
jecxz
add
adc
adc
scas
mov
inc
int
cmp
xchg
sbb
or
stos
movsb
sub
mov
repz
xor
lcall
arpl
aas
cs
jo
out
es
bound
in
clc
mov
inc
sub
push
xor
daa
lods
leave
andb
sub
jo
insb
push
je
stos
inc
push
outsl
aaa
cmp
shll
push
inc
mov
jbe
daa
and
inc
ds
cs
stos
sub
insb
lock
loopne
and
pop
xor
dec
leave
mov
sbb
fcomps
push
jb
xor
ja
insl
mov
in
xor
adc
pushf
loope
push
inc
sub
out
fisttpll
and
jle
adc
cltd
sbb
xor
add
xchg
sbb
dec
sbb
fsubl
jge
daa
imul
addr16
and
clc
or
sbb
test
xchg
xchg
daa
fcoms
daa
dec
mov
mov
daa
dec
xor
dec
daa
dec
xor
daa
dec
daa
clc
dec
jne
fidivl
cmp
push
pusha
rol
dec
rorb
mov
mov
cmpsb
addb
cltd
cmpl
cltd
call
cltd
mov
imul
aas
testl
aaa
movsl
aaa
adc
cmp
mov
dec
mov
xchg
jae
fmull
sbb
fadds
push
daa
cmp
imul
inc
xchg
aaa
push
xchg
mov
lahf
inc
out
mov
pop
pushl
inc
mov
and
cmp
into
es
addl
cmp
rcr
es
jne
xor
adc
mov
ret
or
fcmovnbe
ss
ret
xchg
into
aaa
es
adc
lcall
imul
jbe
stos
sub
xlat
sub
insb
rcrl
xchg
les
mov
negl
outsl
fsub
in
mov
fdivl
shll
xor
daa
and
push
dec
jmp
xchg
add
js
inc
stos
mov
mov
aad
and
aas
lahf
ljmp
cltd
nop
xchg
jl
or
adc
or
or
add
fucomp
out
lahf
fildl
push
pop
jg
add
add
mov
sub
cmpb
vmread
add
push
adc
ja
arpl
mov
or
add
andb
rcrb
or
add
adcb
mov
ja
ja
jo
ud2
jnp
cmp
add
add
scas
pop
mov
mov
and
lock
cmpl
mov
sbb
or
popa
xchg
lods
or
rorb
pusha
addr16
inc
xor
in
into
jg
dec
pop
jae
xor
xor
add
imul
in
sbb
mov
mov
mov
mov
and
xor
jg
inc
sbb
incl
pushf
push
aaa
cmp
jle
jg
outsb
leave
push
dec
pop
adc
push
adc
jnp
lahf
mov
sub
pop
sub
jg
adc
mov
sbb
adc
outsl
dec
ret
icebp
jo
pushf
jle
mov
push
mov
inc
xor
cmp
inc
sbb
testl
outsl
ja
lcall
stos
push
lock
lret
pop
mov
in
into
jo
sbb
pop
mov
scas
aas
and
mov
adc
ja
add
jecxz
push
push
dec
aas
push
test
ss
rorb
push
incl
aas
pop
dec
addb
fbld
ja
mov
jl
call
jbe
iret
push
push
add
and
and
data16
sbb
and
xor
lods
popf
mov
and
fbstp
push
enter
lahf
pushf
add
arpl
in
subl
xor
jae
add
jae
add
mov
int3
in
push
sbb
jle
popf
test
out
lcall
pop
mov
xchg
out
decb
rcl
outsb
and
pop
out
sbb
stos
repz
add
aas
insl
dec
inc
lds
pop
ss
add
cmp
cmpsb
rcrb
in
cmpsl
enter
inc
push
push
pop
jmp
cmp
ja
adc
pop
stos
pushf
movsl
pop
das
loope
mov
fcoms
int3
cltd
cmp
shlb
adc
movsb
cs
mov
pop
pop
das
inc
aas
xor
ja
pop
sbb
sbb
cmpsl
add
add
dec
inc
das
ja
imul
pop
jne
pop
aaa
fiadds
ja
push
jae
insl
adc
jo
icebp
pop
sbbb
das
sub
mov
ja
mov
push
pushf
jo
sahf
mov
int3
and
repz
push
push
pusha
mov
mov
add
adc
push
sbb
jg
ss
add
jo
neg
push
out
add
iret
push
add
add
inc
and
xchg
add
xchg
inc
dec
jp
pop
dec
iret
add
sbb
or
xor
pop
pop
jg
cmp
es
or
add
push
and
fsubrs
jecxz
pusha
jecxz
add
mov
insl
imul
xor
std
incl
in
jge
jne
jge
jg
clc
mov
aas
jbe
fcmovnb
psubq
ds
fstp
pop
pop
pop
gs
outsb
repnz
jg
out
ficomps
sahf
clc
pop
or
data16
mov
add
testl
sub
flds
dec
pusha
push
adc
mov
mov
scas
add
sbb
add
maxps
scas
xor
and
xor
and
adc
cmp
ret
inc
das
xadd
mov
add
lahf
and
orb
mov
lock
pop
call
out
sub
adc
popf
movsl
fwait
mov
xor
push
inc
lods
cld
out
shll
push
inc
inc
and
add
ja
fldenv
cs
inc
push
dec
outsl
and
lret
out
or
adc
lgdtl
andb
mov
data16
fcmovb
or
push
mov
or
mov
push
add
mov
fisttpll
add
or
or
xor
jno
jno
jecxz
push
scas
dec
add
inc
lds
mov
out
loopne
mov
push
add
or
inc
cmovbe
push
add
in
das
pop
push
ja
jbe
inc
gs
orps
fs
add
in
negb
pcmpgtd
xor
jl
and
add
inc
adc
pop
push
dec
adc
sbb
inc
pusha
cmovge
loope
mov
cld
int3
iret
popl
or
inc
add
push
pushl
sub
adc
je
jb
add
loopne
js
jo
add
add
mov
add
or
mov
mov
dec
mov
arpl
add
fimuls
int3
push
mov
adc
sbb
ficoml
out
out
xor
cwtl
xchg
jp
xchg
into
enter
pop
mov
lock
cmp
fldcw
out
xchg
outsb
mov
and
mov
aad
add
adc
push
pop
add
jo
push
pop
jo
in
add
aas
scas
cmp
pop
mov
cmovg
push
and
cmp
dec
pop
inc
mov
xchg
mov
add
push
pop
push
push
out
push
jae
jle
add
orl
fadd
ja
imul
sbbb
pusha
insl
testb
jb
xchg
xchg
lcallw
push
push
sub
ret
xor
gs
fs
cs
adc
outsb
inc
or
hlt
pop
out
add
mov
outsb
push
ret
push
arpl
mov
push
sub
lret
push
xor
in
fidivl
pop
jp
dec
popaw
fnstenv
inc
inc
adc
insl
and
or
bound
sub
jb
jb
and
and
in
sbb
pop
inc
subb
inc
lret
and
jle
insb
fiadds
out
ficompl
jle
rorb
push
or
lods
mov
mov
insl
fidivl
outsl
adc
jo
jb
sbb
push
scas
andps
mov
fwait
mov
repnz
inc
ljmp
dec
sbb
outsb
cltd
mov
pop
jb
xchg
adc
fdivp
cmp
arpl
fs
imul
fnstsw
sbb
roll
push
or
popa
xchg
or
andl
push
lahf
inc
or
dec
shll
dec
mov
loop
sub
sub
popa
inc
in
fisubl
inc
xor
das
inc
cmp
das
sub
ja
jns
xchg
push
aaa
gs
into
add
imul
imul
dec
inc
push
daa
outsb
push
dec
xor
mov
xchg
dec
jo
ret
arpl
sbb
xor
and
cmpsb
add
adc
cmp
arpl
inc
fists
adc
xor
add
add
xor
pop
add
mov
cmp
xchg
mov
adc
xchg
test
inc
mov
and
inc
sub
sbb
test
inc
fwait
adc
push
inc
stos
inc
mov
cmp
repnz
nop
bound
and
xor
mov
das
push
rolb
jecxz
push
or
enter
mov
ret
and
xor
or
adc
inc
shl
les
andb
xor
cs
add
add
xchg
sbb
cmp
mov
notl
roll
xchg
and
or
inc
xor
cmp
or
aaa
out
sub
fs
fbld
inc
push
das
pop
movsl
or
and
sti
adc
push
mov
pop
ret
xor
jo
pop
dec
jb
lea
aam
das
inc
mov
cmpsl
adcb
mov
sub
pop
enter
daa
and
inc
daa
bound
subb
sub
inc
andb
pop
gs
loop
pop
jne
jmp
pop
and
mov
and
sbb
xlat
inc
mov
add
movsb
add
sbb
push
test
xor
inc
adcb
imul
add
sub
mov
pop
mov
push
jae
cmp
out
adc
jo
outsl
addb
cmpsb
fisubl
sub
rorb
pop
or
push
out
sub
push
arpl
into
pop
imul
or
adc
or
pop
aad
clts
and
sub
cmpsl
shlb
add
and
or
jb
cmp
push
dec
test
ljmp
or
mov
xlat
push
jo
xor
ss
pop
xor
push
push
sub
add
pop
inc
push
add
add
cmp
add
or
test
adc
or
xchg
and
cmpsb
push
or
sub
pop
mov
jnp
arpl
mov
lcall
rolb
and
inc
add
mov
cmp
test
cmp
es
cmp
mov
inc
xchg
or
jmp
adc
lcall
mov
jne
xor
xor
push
push
movsl
sbb
mov
scas
cmpsb
orl
jno
adc
fs
lea
sub
inc
mov
loopne
push
pop
add
nop
inc
mov
or
pop
push
and
xor
dec
adcl
pop
fnstcw
push
out
jne,pt
fdivs
jnp
push
and
imul
jp
and
mov
out
push
push
push
and
dec
add
imul
dec
push
push
pop
push
adc
adc
imul
dec
push
dec
push
inc
ss
pop
fcmovu
xchg
adc
sub
fldt
lock
pop
pop
dec
mov
out
adc
inc
add
imul
xchg
push
adc
shll
out
cmp
push
mov
cmp
dec
inc
and
jbe
out
adc
imul
ja
imul
rolb
jae
jmp
mul
imulb
jne
push
push
mov
mov
je
or
mov
xorl
das
cmpsb
test
xor
mov
inc
push
jno
shrb
and
push
mov
rorb
gs
out
mov
push
pop
push
inc
xchg
dec
inc
inc
xor
push
push
dec
es
mov
push
insl
insb
adc
adc
add
scas
and
lcall
aam
sti
pop
mov
js
xorl
cmpsb
rolb
ss
xor
pop
xor
lods
jnp
or
decl
fcoms
cmpsl
or
out
nop
fdivs
ret
jne
adc
inc
mov
or
gs
inc
or
popa
push
inc
adc
in
inc
testl
push
xor
sbb
imul
es
inc
dec
sbb
movnti
mov
add
push
cmp
sbb
mov
lods
jge
or
jo
das
sbb
jae
xor
pop
andl
stos
add
jmp
stos
push
jbe
inc
or
jno
adc
mov
cmp
xor
popa
out
mov
push
add
mov
adc
adc
imul
xlat
adc
sub
scas
imulb
inc
xor
xchg
adc
mov
ret
dec
dec
xlat
inc
xor
pop
push
push
or
push
loopne
notl
push
jle
pusha
jbe
cmp
jp
jmp
ss
sbb
daa
bound
dec
loop
xlat
push
cmp
mov
outsb
outsl
outsb
add
pop
sbb
dec
jb
iret
mov
xor
mov
sub
daa
pop
mov
repnz
pop
es
addr16
inc
push
bound
fwait
sub
or
jnp
sbb
xchg
and
insl
es
pusha
ljmp
lock
cmp
jbe
pop
jo
js
inc
outsb
je
or
xor
jo
in
pusha
push
iret
pop
das
lret
insb
xlat
aad
bound
scas
mov
inc
insb
xchg
xor
push
jbe
add
adc
inc
outsl
jo
das
mov
sub
jnp
aaa
test
xor
push
add
mov
das
ds
insl
andb
bound
popl
pop
sub
shlb
popa
pusha
hlt
mov
ja
push
xchg
push
sub
jbe
scas
inc
rcl
mov
push
lret
cmp
cli
adc
push
xchg
mov
popa
loop
sbb
lret
mov
jbe
push
cmp
leave
aaa
out
loopne
jae
and
dec
cmp
sahf
call
add
xchg
and
scas
and
push
adc
mov
and
push
lods
fwait
push
xor
pop
cli
cmpsb
xor
push
sub
add
jecxz
rcr
fistl
icebp
mov
and
jne
dec
in
lea
inc
inc
push
and
xor
ret
xchg
imul
xor
mov
cmp
mov
jp
and
pop
outsb
mov
adc
scas
dec
mov
push
scas
pop
sbb
dec
sub
mov
ret
add
bound
fcomps
xchg
mov
ja
mov
xchg
ja
outsb
add
xlat
or
sbb
push
ret
addr16
jne
pop
or
xchg
push
sbb
jg
adc
imul
add
ss
xlat
lahf
pusha
mov
js
push
ficoml
lahf
loopne
push
sbb
out
pop
jae
sbb
es
sbb
pushf
or
ret
xchg
jno
outsl
and
sub
and
dec
and
adc
cmp
add
stos
mov
jne
cmpsb
decb
imul
adc
je
lods
es
xor
or
add
outsb
mov
dec
fcmovnbe
push
fisubrl
mov
inc
outsb
and
mov
and
in
jb
mull
dec
mov
subl
mov
sbb
rorb
lret
adc
inc
fcomi
sbb
adc
adc
jnp
outsl
arpl
bound
inc
xlat
adc
jae
ds
rcll
add
xor
fmull
lods
xchg
pop
inc
push
add
bound
imul
push
adc
pop
loopne
fs
cmp
and
mov
cmpsl
or
inc
and
push
inc
adc
addr16
stos
sub
lea
dec
insl
fwait
movsb
gs
adc
data16
jb
jns
rcl
scas
or
bswap
cmp
js
inc
xchg
lret
or
add
push
shrl
xor
outsl
bound
nop
jne
dec
push
orl
xor
dec
scas
and
push
lods
pop
jg
push
test
subb
xor
sub
outsb
mov
push
insl
inc
aaa
gs
nop
ss
cs
popl
push
sub
daa
push
loopne
inc
scas
jae
sbb
add
push
sbb
sbb
imul
pop
and
mov
xor
lret
shr
mov
je
dec
push
push
nop
push
arpl
loopne
divl
mov
inc
mov
xor
pop
adc
mov
and
pop
adc
bound
lea
into
jbe
invd
mov
mov
adc
inc
lods
mov
bound
mov
popf
mov
inc
adc
rorl
add
mull
xlat
fildl
mov
jns
bound
dec
mov
mov
and
addr16
xchg
outsb
pop
sbb
psubusb
xchg
xchg
adc
xor
mov
divb
adc
test
aaa
mov
fbld
popa
xor
inc
mov
pop
fadds
leave
lds
sbb
orb
sbb
xor
mov
jne
and
ret
fildll
cmp
dec
add
mov
mov
arpl
filds
mov
push
and
je
rcl
xchg
xlat
arpl
outsl
mov
cwtl
and
lret
mov
insb
mov
js
adc
and
adc
das
pop
xchg
lods
addb
sbb
sti
jae
jae
mov
shll
insl
push
pop
dec
ret
add
mov
into
jno
pop
lods
add
mov
cmpsl
add
push
dec
jb
rolb
lahf
adc
xor
mov
jnp
popf
push
jb
adc
ds
add
push
testb
or
mov
pop
out
repnz
cmc
inc
sbbb
xchg
mov
lret
push
scas
repz
lods
pusha
mov
mov
syscall
jo
mov
rcrl
jb
push
imul
jmp
push
insb
pand
xchg
addr16
jnp
sub
je
repz
push
jno
mov
or
dec
sbb
or
sbb
and
fdivs
sbb
ljmp
lock
cli
jns
xor
xchg
mov
cwtl
adc
jmp
pop
mov
lea
sub
adc
cmp
pushf
and
mov
fiadds
sbb
add
push
push
aas
push
push
or
jg
adc
call
inc
mov
jbe
dec
inc
or
adc
mov
repnz
cmp
shlb
adc
xor
das
sbb
push
ss
mov
stos
pop
lods
mov
aaa
mov
sub
outsb
popa
repz
sub
or
test
shll
loopne
outsb
lahf
or
mov
daa
lcall
sbb
xchg
les
and
sbb
inc
fwait
stos
add
out
mov
js
cs
adc
sti
sbb
add
push
arpl
mov
jl
cmp
sub
aam
and
inc
pop
sbb
xor
lahf
je
add
repz
cmpb
jne
inc
adc
jp
stos
add
das
out
mov
pop
jne
cmpsl
addr16
jne
pushf
fdivs
cmpsb
add
test
out
ficompl
sbb
ret
or
push
scas
adc
lock
sbb
aas
js
cs
jnp
sbb
mov
push
or
sub
test
dec
xor
inc
push
dec
mov
xchg
cmpsb
ret
fwait
out
popa
pop
xor
pop
ljmp
sub
mov
fwait
and
mov
pop
stos
push
repz
faddl
repz
lcall
inc
or
sub
aad
push
jae
adc
pop
xchg
rorb
sbb
fsubl
inc
iret
ss
stos
mov
add
stos
mov
sbb
or
inc
sbb
test
cmp
decb
mov
push
sub
mov
or
sub
and
movl
xor
dec
fildll
test
jo
mov
scas
cmp
dec
or
or
rcrl
mov
sub
or
das
inc
subb
or
xchg
nop
bound
jg
cmp
inc
adc
and
mov
cli
mov
orl
ret
inc
imul
push
xchg
push
inc
test
sbb
add
mov
and
xlat
lea
lods
adc
mov
dec
outsb
pop
xor
jmp
lea
adc
pop
add
xor
and
mov
mov
stos
incl
stos
es
mov
xchg
inc
repz
xor
mov
sbb
fistl
mov
popa
adc
mov
stos
rolb
xor
xchg
or
roll
push
xor
mov
mov
inc
mov
mov
or
test
ss
push
ldmxcsr
cmp
pop
adc
and
adc
mov
add
add
addr16
andl
push
or
jb
cmpsl
js
vzeroupper
inc
sti
ret
mov
sub
push
pop
push
repz
pop
arpl
push
cmp
jo
lahf
daa
dec
jne
das
daa
das
daa
xor
xchg
sbb
add
mov
dec
push
cmpsl
pop
stos
add
stos
lret
add
aam
outsb
lods
pop
push
and
sbb
aas
inc
mov
data16
xchg
mov
mov
mov
ret
addl
add
mov
and
imul
lods
ret
inc
xchg
or
push
lods
pusha
xor
loope
dec
jbe
mov
or
xchg
fwait
cmp
test
test
loop
cmp
sub
push
sbb
sub
add
or
idivl
inc
pop
xorl
xlat
mov
ds
push
adc
lods
mov
push
fs
dec
inc
mov
jg
push
adcb
mov
add
ja
add
add
push
rcrb
mov
imul
xor
xchg
push
jb
sub
inc
sub
addr16
test
popl
pop
jnp
mov
add
fwait
xor
pop
outsl
mov
es
data16
ret
push
mov
add
push
inc
ja
lea
inc
sbb
jns
out
test
sbb
cmp
push
testb
xchg
sub
pop
fidivl
or
sub
rcll
pop
and
aam
imul
sub
mov
xchg
sbb
add
add
sbb
fwait
inc
popa
mov
in
push
imul
add
lods
mov
sub
in
xchg
cmpb
push
xor
add
loop
push
push
push
jbe
push
adc
add
or
cvtps2pi
rol
ja
lahf
mov
jae
and
data16
arpl
or
aas
mov
mov
lds
sub
loopne
loope
cmp
out
or
mov
xor
test
add
and
fcomps
fcmovnb
adc
insl
xchg
sbb
sub
sub
lret
inc
or
add
inc
jg
mov
push
jae
faddl
inc
ljmp
test
rolb
and
jns
imul
jo
fldl
in
flds
js
scas
dec
mov
adc
push
ja
cmp
push
inc
sti
sub
or
jae
cmp
out
test
xor
inc
mov
mov
jg
movsl
mov
bound
sbb
cmp
or
push
xchg
mov
lds
mov
xlat
xor
push
outsl
xorl
xor
movsb
inc
mov
jb
sbb
jae
stos
adc
outsl
inc
sub
lea
xlat
rcr
mov
insb
xchg
daa
add
pop
das
daa
push
rclb
arpl
cmp
sub
sbb
inc
lods
xor
pop
sbb
push
pop
pop
mov
adcb
mov
filds
ja
cmpsl
ss
xlat
scas
popf
add
sbb
xchg
shrb
ret
push
and
adc
gs
bound
addr16
mov
xor
lods
outsb
lods
jae
bound
popa
pop
push
jb
sbb
dec
shlb
push
pop
lea
pop
jae
sbb
out
iret
sub
fwait
inc
dec
adc
sbb
xchg
and
xor
mov
or
or
andb
xchg
mov
jns
bound
fistpl
sbb
push
ja
shrb
bound
ljmp
test
mov
inc
bound
outsl
mov
mov
pop
repz
fisubl
and
sbb
insb
addr16
mov
pushf
jp
sbb
fwait
adc
push
mov
inc
in
movsl
or
pop
test
add
sub
jno
fwait
mov
jno
ret
dec
mov
jo
push
cmp
and
andl
lds
mov
out
scas
add
and
and
adc
sub
xor
iret
pop
popa
adc
sbb
sub
orb
push
sbb
jecxz
jns
fldl
fadd
sahf
pop
into
inc
and
or
cltd
mov
push
aas
lods
mov
dec
push
rorb
dec
fsubl
mov
inc
mov
ret
pop
push
aas
mov
mov
imul
jo
sarl
push
jnp
inc
gs
aaa
and
dec
sbb
sbb
or
and
daa
sub
scas
adc
addl
popa
sbb
adc
sti
addr16
testl
daa
inc
ret
test
ret
cmpsl
inc
shrl
les
out
add
pop
sbb
ja
sbb
testb
push
movswl
sbb
sub
lods
or
test
or
sahf
jae
xor
push
and
dec
lea
pop
inc
or
mov
push
fstps
inc
out
dec
jmp
pop
cltd
cmp
dec
pop
mov
add
push
add
sarb
fildll
test
andl
popa
into
ret
push
dec
test
insb
mov
rorb
add
inc
aaa
push
outsb
repnz
repz
cs
pop
inc
inc
sub
add
pop
dec
mov
imul
push
arpl
adc
pop
xchg
es
pop
xchg
pop
cmp
test
or
and
or
or
dec
pop
xlat
and
insb
mov
add
pop
mov
pop
xchg
sbb
jno
imul
dec
or
cmpb
mov
inc
jne
jns
push
subl
xchg
mov
das
mov
mov
orl
out
lock
je
cs
inc
shlb
sbb
jne
lcall
incl
xor
lds
aas
push
movsl
xor
popa
push
and
sbb
aaa
jmp
pop
pop
xchg
jae
mov
daa
xor
mov
jecxz
push
test
popl
adc
mov
lahf
pop
pop
inc
fstl
sbb
pop
or
insl
mov
mov
inc
or
and
pcmpeqd
mov
sahf
push
jno
aaa
ret
xorps
mov
pop
jbe
pusha
sti
ss
outsl
and
jp
fildl
jae
or
xor
and
pop
push
ja
push
cmovp
shll
fadds
lsl
push
add
fs
jmp
pop
stos
jb
jbe
dec
fadds
cmp
add
inc
and
xchg
arpl
add
adc
dec
fneni(8087
div
sti
mov
xlat
aaa
jbe
dec
pop
sbb
outsl
pop
mov
sbb
mov
or
divb
push
pusha
or
and
mov
popa
stos
scas
adc
test
or
jle
lret
fsubrl
and
push
mov
cli
xlat
imul
jne
popa
jae
call
cmp
data16
arpl
test
mov
aas
or
movsl
mov
jbe
pop
adc
pop
and
mov
addr16
lods
xor
sbbl
and
push
loop
mov
daa
fs
insl
xlat
stos
iret
sub
inc
sarb
pop
aad
inc
bound
push
mov
or
or
movb
xor
inc
or
and
adcl
lret
push
mov
push
fwait
xchg
jbe
push
or
jne
and
xchg
add
pop
cmpsl
bound
stos
imul
pop
addr16
mov
sbb
arpl
and
adc
imul
scas
xor
cmp
jecxz
push
in
jg
push
sbb
mov
or
stos
in
jb
cmp
adc
xchg
pushw
jae
iret
adc
adc
jae
je
arpl
add
aad
and
inc
xor
cmp
push
mov
jmp
testl
xor
ss
mov
add
adc
arpl
in
push
cmpsl
mov
ljmp
inc
lods
fstl
mov
pop
jg
push
cmp
jmp
pop
ljmp
sub
pop
xchg
stos
sbb
or
cmp
bound
xor
or
adc
inc
arpl
ret
mov
cs
pop
sub
mov
dec
mov
sub
sub
mov
mov
jo
xor
out
push
push
adc
sbb
or
cmovg
push
lcall
ret
loop
inc
push
xchg
jp
xlat
mov
pop
lea
adc
push
stos
test
jne
scas
jae
or
jmp
shrl
sub
shll
xchg
xlat
push
pop
bt
xchg
jo
stos
or
pop
mov
xchg
push
jg
lret
or
das
ds
dec
and
testb
add
adc
das
add
adc
mov
sbb
adc
popa
daa
dec
test
pop
sti
sti
jns
stos
mov
data16
lods
orl
add
fwait
sub
enter
scas
push
loopne
mov
jle
movsl
inc
push
pop
ret
stos
push
xchg
dec
mov
scas
ror
jmp
pop
sub
cmp
aaa
mov
andb
add
fwait
cmp
out
enter
xor
outsl
jecxz
dec
jbe
insb
adc
xchg
inc
add
clc
hlt
adc
sbb
xor
movl
and
dec
cltd
dec
xor
inc
lret
and
sub
add
pop
out
insb
pop
sbb
push
push
dec
fisttpl
js
xor
add
pop
push
test
outsw
jae
and
inc
movlps
jbe
push
rorb
adc
jne
or
shll
jo
and
sub
in
push
push
adc
inc
je
sub
imul
and
dec
fadds
mov
cmpsb
jb
sub
mull
dec
sbb
push
dec
sub
xchg
test
cmp
xor
add
outsb
movsb
mov
adc
outsb
adc
jbe
inc
jo
inc
ret
and
jns
inc
cwtl
fwait
xchg
int
or
jno
fs
or
fwait
mov
sub
dec
add
add
adc
cmpsl
and
xchg
sub
pop
testb
aas
test
stc
out
push
addr16
int3
mov
jno
ret
xchg
add
adc
add
ljmp
mov
add
lcall
pop
dec
inc
cmp
pusha
insb
pusha
movsl
in
loopne
sar
aam
rcll
and
adc
and
lret
or
inc
xor
cltd
xchg
into
adc
xor
mov
adc
sub
adc
dec
sub
sarl
xlat
add
shll
lods
mov
std
fwait
pop
adc
mov
outsl
jo
jo
sub
sbb
sbb
inc
dec
dec
out
addr16
dec
call
mov
int
adc
test
push
popa
cmpsb
pop
test
adc
and
into
adc
fs
inc
push
jbe
nop
aam
popf
push
mov
dec
mov
lahf
in
dec
pop
push
outsb
imul
sub
mov
push
outsb
insl
popf
adcl
xor
ret
lret
lea
dec
or
cltd
mov
xchg
aam
cwtl
xor
sub
mov
mov
adcl
xchg
adc
add
lret
adc
inc
and
adc
fs
ja
or
mov
adc
mov
cs
sub
pop
push
push
sub
add
hlt
out
test
stos
mov
add
cmpsl
jns
inc
out
xor
and
fisubrl
push
dec
rorb
xchg
pop
sbb
push
test
xchg
cmpsl
test
pop
in
ret
lret
jmp
mov
setnp
test
outsb
jbe
imul
xchg
jns
jbe
cmpsb
mulb
sbb
popf
js
or
jecxz
sbb
ja
or
mov
xchg
popa
test
sub
loope
dec
push
ret
jo
popa
iret
arpl
mov
mov
inc
and
stos
pop
lods
cmpsb
out
pop
fcmovnbe
popa
jb
cmp
push
jb
and
adc
mov
daa
push
fwait
cmp
adc
xchg
push
mov
inc
or
and
inc
rolb
and
mov
push
inc
xchg
aas
adc
test
ds
xchg
sbb
jb
cmp
es
fdivrs
cmp
push
rclb
repz
push
and
add
enter
sbb
mov
ja
inc
pop
adc
sub
push
subb
aas
mov
pop
stc
shrd
xor
fimuls
push
mov
and
mov
add
ret
push
jge
movb
pusha
add
adc
add
leave
das
and
and
adc
xchg
addb
movups
jo
mov
dec
shlb
nop
mov
lret
andl
push
inc
or
push
mov
arpl
or
mov
pop
decb
enter
inc
or
xchg
xchg
mov
lea
fwait
sbb
inc
rolb
cmp
pusha
mov
outsl
push
dec
push
push
xchg
sub
movsb
in
adc
inc
sbb
jmp
pop
dec
pop
call
add
or
xchg
add
lods
sub
adc
je
scas
dec
lret
mov
mov
in
add
lods
or
movsb
enter
add
nop
xchg
mov
xchg
or
adc
roll
in
jb
cld
fsubs
push
ja
sbb
cmpps
dec
test
adc
inc
fiaddl
fdivs
adc
add
add
pop
and
jnp
cmp
sub
dec
pop
inc
pop
insl
inc
xchg
dec
adc
dec
fistl
sub
jg
mov
cmp
and
test
and
sbb
add
dec
inc
clc
pusha
lahf
add
add
or
push
loope
and
outsl
jo
pop
or
daa
cs
sub
and
nop
or
xor
inc
fs
and
shrb
xor
add
sbb
sub
inc
or
pop
loope
mov
and
loop
add
or
or
add
imul
xchg
or
or
inc
adcb
push
inc
pushf
jbe
imulb
jbe
cwtl
movb
pop
dec
es
cltd
ss
add
xor
or
dec
jg
mov
add
mov
fbstp
js
idivl
sti
ljmp
mov
jae
dec
std
push
push
sub
jg
loope
sub
div
div
repz
xchg
xchg
xchg
inc
inc
pop
push
call
jg
jmp
bnd
cli
cli
sti
icebp
icebp
repnz
out
lock
jmp
in
jmp
jmp
in
mov
mov
mov
pop
ja
popa
lock
call
pop
cwtl
daa
dec
shlb
push
stos
ss
xchg
and
cmp
or
push
add
or
xchg
ds
xor
cltd
and
and
cwtl
cmp
push
xor
dec
js
inc
outsb
inc
ds
pop
addb
mov
add
mov
sar
ja
adc
or
or
movsl
jmp
mov
add
and
dec
cmpsb
or
cmpsl
jb
ret
jmp
dec
test
push
test
push
stos
adc
scas
pop
xorl
decl
lods
adc
adc
sub
ss
cmp
iret
adc
scas
adc
lcall
adc
mov
popa
scas
and
stos
fsubrp
repz
clc
pop
bound
push
decl
xor
sbb
mov
outsb
mov
jno
daa
jno
sub
cmp
mov
jmp
mov
mov
jbe
sub
inc
mov
dec
xchg
cmpsl
cld
loope
jmp
js
mov
div
and
mov
mov
leave
daa
cmpl
sub
sub
inc
nop
lds
fistpll
idiv
sub
das
or
sub
ljmp
les
ret
ss
les
shrl
les
lds
nop
cmp
xchg
mov
fdivrs
fistl
xor
xchg
lret
lret
mov
enter
fwait
lret
dec
mov
stc
std
push
incl
test
fwait
int3
xor
lcall
std
fistpll
aaa
lahf
into
add
cmp
out
push
cld
push
push
xor
leave
fneni(8087
lret
aad
add
sbb
sti
cld
cld
pop
idivl
in
in
fstp
fidivrs
jmp
jmp
sub
repnz
hlt
push
push
jmp
cmc
repz
scas
dec
stc
clc
imul
mov
int3
and
inc
adc
js
jle
clc
testl
lock
add
out
iret
xchg
gs
clc
div
hlt
jle
lock
mov
out
out
in
jmp
mov
lret
mov
mov
mov
lret
gs
push
dec
inc
cmp
mov
sub
push
nop
mov
repnz
fdivrl
add
add
sbb
or
imul
dec
mov
roll
mov
ret
xchg
dec
mov
lcall
fmul
mov
movb
movsb
leave
xchg
decl
mov
arpl
pushf
dec
mov
int
cmp
aam
iret
mov
push
dec
or
inc
mov
ljmp
mov
push
aam
dec
in
cmp
mov
fstpl
imul
stos
inc
mov
mov
mov
xchg
jmp
mov
lret
mov
fistpll
xchg
shrb
lcall
clc
lods
aad
mov
push
or
aaa
mov
leave
xchg
ds
dec
dec
icebp
mov
in
stc
mov
pop
cld
ljmp
jl
jb
scas
popf
pop
mov
mov
mov
ret
dec
push
cmpl
jns
xchg
sub
dec
fiadds
outsl
mov
push
mov
ja
fdivl
pushl
jge
imul
jae
scas
xchg
jae
jg
daa
arpl
mov
mov
jmp
iret
mov
add
loopne
add
inc
pusha
addl
xor
and
add
cmp
dec
inc
sbb
sarl
sbbb
xor
popa
push
jae
and
pop
cld
test
into
adc
mov
xchg
add
sbb
test
xchg
loop
add
cmp
stc
cmpsl
in
dec
repnz
mov
into
xor
xchg
popa
sti
adc
fisttpll
jae
push
testb
es
cwtl
clc
aad
hlt
mov
add
jg
pop
jb
gs
aas
arpl
stc
int3
roll
dec
jg
cmp
inc
orl
pusha
cmp
shl
daa
add
jmp
xor
rcrb
jg
mov
cmp
mov
lea
sahf
xchg
ss
aas
cli
lods
fdivp
and
ret
inc
add
mov
mov
xchg
mulb
jg
decl
cmpsb
cwtl
inc
arpl
nop
cmp
adc
xchg
mov
popl
add
ljmp
fwait
notl
pop
mov
ds
hlt
andb
jmp
in
mov
decl
add
jecxz
sbb
imul
scas
jg
pop
push
jo
mov
add
imul
jecxz
subb
jmp
cmpsl
push
cmp
or
andl
mov
jmp
outsl
addr16
mov
mov
inc
xchg
popa
dec
mov
into
jmp
jp
mov
pop
scas
inc
into
mov
daa
lods
pop
cmp
xor
je
mov
in
mov
into
or
out
jmp
mov
sub
loopne
mov
arpl
movsb
pop
nop
loop
insl
shrb
sub
sti
daa
cmp
add
fmul
cmpsb
cmp
les
mov
add
ljmp
mov
jl
insl
clc
loope
shll
mov
mov
cmp
add
mov
ljmp
cmp
or
jge
lcall
pushl
xor
sub
or
fisubrl
xchg
cmp
cli
adc
xchg
fucomp
mov
fsubp
mov
scas
mov
and
icebp
jbe
arpl
repnz
cmp
cmp
jg
decl
hlt
push
xor
xor
xchg
mov
jbe
push
mov
jle
int3
cmp
push
or
mov
sbb
in
cmp
add
mov
rol
mov
dec
jae
ljmp
cld
ja
arpl
or
cmp
jno
push
jle
incl
iret
popa
push
jae
dec
and
xor
xor
or
mov
mov
dec
jbe
sarb
push
jo
dec
sbb
leave
xchg
xor
mov
ret
adc
repz
mov
loop
test
cmp
cmp
cmp
inc
mov
ss
mov
push
cmp
popa
add
adc
mov
mov
aas
loopne
pop
fcomps
adc
push
mov
push
xchg
mov
cltd
push
aaa
test
icebp
cltd
pusha
mov
sti
decl
cmp
xchg
enter
xchg
or
xchg
das
and
decb
jg
call
or
out
mov
mov
mov
ret
xchg
aas
std
inc
fs
xor
dec
cs
xor
adc
jecxz
jecxz
xor
sbb
sbb
and
aad
add
and
cmc
mov
jmp
xor
push
dec
dec
roll
loop
enter
pop
adc
data16
jge
out
dec
jmp
adc
mov
inc
jb,pn
mov
cmp
push
pop
test
inc
jmp
push
adc
inc
ds
mov
mov
ds
pop
add
mov
mov
push
jl
hlt
mov
aaa
lret
jp
and
rclb
cld
jecxz
sbb
cmpsb
xor
jo
mov
cwtl
movsb
lock
jg
into
lahf
lock
add
arpl
mov
repnz
fwait
pop
add
jl
sub
cmp
mov
sarl
nop
cli
imul
mov
push
fwait
stos
call
dec
xlat
lret
mov
stos
dec
cltd
mov
lcall
push
aam
push
jae
cli
jo
inc
fisttpll
sbb
xorb
mov
push
xor
cmpsl
cli
iret
incl
cld
sti
pop
imul
mov
push
sub
push
test
lret
clc
mov
inc
scas
test
push
lret
ficoml
rcrb
xor
cmc
push
mov
ss
data16
adc
and
mov
jne
cwtl
add
pop
xchg
ljmp
scas
jmp
fs
sarl
repz
iret
jo
mov
jo
out
cmp
ljmp
pop
dec
fdivp
lcall
test
pop
hlt
push
dec
pop
dec
or
mov
jle
ljmp
add
xchg
outsb
cmp
mov
pop
movsb
pop
pop
insb
mov
dec
pop
shrl
lcall
sar
aad
mov
jmp
test
out
jbe
icebp
mov
sub
add
push
xor
inc
inc
pop
call
inc
adc
sbb
mov
sbb
cwtl
lds
mov
mov
mov
repz
inc
mov
movl
in
bound
jecxz
sbb
pusha
mov
sahf
popa
jecxz
adc
sub
mov
inc
iret
lock
and
inc
xchg
cmpsl
in
shrb
fistps
mov
aam
ljmp
push
cmp
int3
push
push
fnstenv
gs
jae
lcall
mov
mov
cltd
xor
mov
mov
nop
scas
lcall
popa
push
xchg
pushf
or
add
lods
bound
cmp
ss
popa
ljmp
cli
aad
mov
pop
mov
call
ds
mov
stos
jecxz
lcall
lock
cmp
sbb
add
movsb
xchg
insl
in
sti
and
and
lock
pop
add
out
cwtl
jge
push
cs
in
mov
jge
cli
mov
ljmp
repz
add
jle
sti
cmpsl
das
popa
leave
mov
sbb
decl
adc
out
rorb
mov
adc
inc
jmp
repz
loop
fdivrp
rcrb
in
mov
jle
jmp
fsubl
cmp
and
pop
loop
mov
decl
cmp
enter
mov
roll
jmp
sbb
cwtl
outsb
call
jge
jnp
pusha
btc
cs
xchg
cmp
fidivrl
adc
inc
addr16
mov
iret
mov
mov
add
incl
rorl
ret
lock
loop
iret
clc
cmp
pop
incl
aas
cltd
in
dec
int
fsubr
out
and
iret
stc
into
jnp
repz
xchg
jmp
dec
cli
rcrb
mov
mov
icebp
aas
icebp
int3
loop
pop
loopne
mov
iret
sti
fdivrp
test
dec
jg
sbb
clc
enter
xchg
iret
cld
in
inc
imulb
mov
ljmp
neg
adc
out
jnp
sti
iret
dec
dec
std
repnz
cld
call
pop
and
push
mov
mov
clc
iret
mov
mov
lcall
jg
pop
addb
orb
sbb
ljmp
lock
es
jge
mov
adc
sbbl
sbbl
orb
cs
lcall
addb
sbbl
sbb
andb
sub
fadds
incl
xor
jle
js
xor
xor
or
fdivl
sbb
cmp
incl
pusha
add
testl
arpl
dec
dec
xor
test
test
sub
add
test
test
andb
pop
enter
xchg
out
std
call
adc
subb
push
pop
sub
push
test
arpl
sar
enter
xchg
xchg
xchg
xchg
xchg
jae
adc
fmuls
nop
pop
test
mov
mov
mov
mov
mov
mov
xchg
sbbl
cmpsl
jg
call
cmp
test
mov
add
std
mov
mov
loopne
dec
mov
add
test
ret
cmp
out
out
mov
lea
lds
mov
gs
std
loopne
jg
fdivrl
fdivrs
out
loope
out
fmuls
jmp
sub
cwtl
mov
js
push
mov
arpl
les
cmp
add
pop
cmp
cmp
add
mov
loopne
nop
call
add
pop
mov
and
mov
lea
nop
add
sti
sti
inc
sub
cwtl
add
test
ljmp
adc
xlat
movswl
dec
mov
cmp
sub
xchg
or
lea
leave
popf
rclb
idiv
neg
nop
int
pop
jo
fcoms
dec
mov
scas
cmp
jns
nop
aas
js
xchg
ret
xchg
cmp
xchg
cmp
xor
xchg
dec
cmp
incl
push
sub
xchg
in
xchg
push
pop
lods
out
out
mov
sub
xchg
adc
adc
mov
dec
bound
nop
inc
mov
mov
inc
inc
mov
out
mov
sub
or
movsl
sbb
ficomps
dec
cmp
xchg
sub
fsincos
mov
fwait
mov
xchg
xchg
das
jns
mov
mov
jg
mov
fwait
sahf
pop
popf
sbb
xchg
lret
rorb
sub
test
xchg
add
jns
sub
arpl
xor
stc
add
pop
loopne
dec
leave
sahf
scas
or
rcrb
inc
pop
lahf
hlt
sti
fistpll
das
in
mov
pop
ret
xchg
cmc
test
xchg
scas
jg
sti
sbb
mov
gs
fwait
in
or
or
shrl
fstps
ja
loopne
sahf
sar
lcall
mov
outsl
sbb
mov
mov
mov
jno
cmp
aaa
ret
dec
lahf
dec
lahf
cmp
xor
mov
cmp
movsl
adc
mov
dec
movsl
cmc
pop
pop
stos
movsl
pop
ljmp
cmpsb
pop
jp
push
sub
pop
dec
cmpsb
dec
lcall
jo
insb
or
pop
cmpsl
pop
ud0
aaa
push
jmp
out
imul
aad
jg
mov
popa
inc
ud0
movsb
mov
inc
movsl
xchg
out
ret
lcall
cli
movsl
xchg
dec
test
sub
test
loopne
fistps
stos
dec
cmpsl
cmpsb
cli
add
test
xor
test
jg
xchg
or
stos
mov
stos
mov
add
cmp
fidivrl
lock
push
mov
lret
mov
inc
shrb
sarb
lods
mov
out
out
sti
lods
int3
fisubrl
fsubrl
aam
lods
enter
stos
iret
mov
decl
fstps
fistpll
call
scas
aad
scas
lods
cmp
mov
popf
lcall
add
jge
stos
mov
push
lods
fnstcw
call
or
sbb
sti
lods
out
call
or
sub
jmp
sbb
and
mov
sub
jg
and
xor
incl
out
mov
dec
mov
stos
stos
out
mov
mov
sbb
cmp
mov
dec
mov
lret
mov
out
sbb
cwtl
and
mov
and
pusha
mov
pusha
mov
add
xchg
pushl
and
inc
and
jnp
outsl
cmp
cmp
ljmp
add
nop
mov
mov
jl
mov
pop
sbb
incl
pop
loopne
sub
gs
mov
mov
jmp
inc
adc
inc
push
mov
lret
mov
jnp
orl
pop
mov
jg
jg
push
sub
fwait
mov
mov
sbb
jg
jmp
imul
mov
sub
mov
jle
call
rcll
ret
mov
lock
stos
mov
jl
mov
pop
into
and
lcall
inc
mov
mov
mov
mov
jmp
paddd
mov
mov
mov
or
out
std
or
jo
orl
cld
sub
sbb
stos
pushl
ja
and
add
sti
dec
fildll
sar
mov
or
loopne
fistpll
ret
mov
cmp
scas
iret
repz
mov
sbb
dec
rorl
cmp
xor
mov
cmc
aas
mov
sbb
lods
mov
adc
ja
bnd
scas
push
xorl
pop
inc
xlat
push
sub
into
pop
cld
lcall
out
fwait
lds
inc
adc
pop
in
les
pop
insb
dec
mov
mov
jl
add
mov
in
lds
movb
dec
and
imul
and
cmp
jne
lds
sbbb
cld
mov
lds
pop
cmp
jg
push
sbb
pop
shll
jg
mov
jnp
jle
push
insl
push
das
pop
int3
lds
ffreep
jb
jg
out
test
outsl
inc
in
ja
inc
cmp
pop
lret
mov
test
fmul
stos
or
mov
int3
lret
inc
mov
insb
lret
adc
int3
rcrb
add
fdivr
ffreep
mov
pushf
fmul
int
xor
std
es
nop
add
add
pushf
into
jmp
into
out
cmp
inc
ror
icebp
fwait
ljmp
iret
repnz
int
repz
add
mov
jmp
or
add
mov
lock
or
stos
fmul
pop
std
rcrb
sbb
add
pop
pop
mov
sbb
mov
ljmp
dec
lock
xor
std
sar
cld
rorb
lods
sarl
sbb
sbb
add
popf
add
repnz
dec
dec
popf
aam
std
into
aaa
sub
in
cld
aam
mov
push
out
mov
inc
sub
insb
aam
dec
aad
pop
pop
cmp
insb
ljmp
std
ja
sbb
leave
in
movsl
dec
pop
dec
loopne
jle
sti
std
call
cmp
cmpl
fmuls
cli
in
das
cmp
xchg
or
dec
fstps
xchg
fsubs
fscale
out
call
fstps
ficompl
fisubrl
test
jg
inc
xchg
pop
mov
movsb
std
fnstcw
push
mov
aaa
int
idiv
loope
jge
dec
cmp
int3
dec
fldl
pop
movsbl
std
fsubrl
fdivr
mov
fnstsw
mov
ficomps
fsubrp
pop
cmp
fnstenv
in
fisubs
popf
fsubp
jge
std
fisttps
fsub
lods
test
in
arpl
mov
in
push
int3
push
adc
fmulp
fcmovnbe
mov
std
pop
in
xchg
mov
push
jl
stos
dec
push
fisubs
push
loop
xor
add
fmull
fbld
loopne
fldl
pop
loop
fbld
loope
or
jmp
fidivrs
sti
jle
sub
jecxz
outsb
jecxz
outsb
dec
in
pop
jecxz
dec
jecxz
sahf
jecxz
fistpll
dec
fiadds
in
sahf
loopne
jle
addr16
fsubp
sub
add
push
sbb
std
jge
cs
ds
pop
out
loop
lods
imul
xor
imul
call
out
ds
outsb
out
into
out
mov
jl
out
dec
out
sahf
out
imul
out
jge
decl
jecxz
nop
call
out
aaa
inc
fsubrp
jbe
cmp
inc
subb
out
dec
call
mov
mov
addr16
call
push
out
inc
ljmp
cmpb
mov
push
ljmp
movsb
lds
call
push
in
mov
in
mov
inc
push
in
mov
in
rorb
pop
jnp
aam
jg
sti
mov
leave
jle
iret
ds
fsubr
in
ret
sahf
in
lret
mov
icebp
mov
mov
ljmp
pop
mov
std
shr
sahf
rolb
or
add
nop
out
push
jg
or
or
lock
push
adc
inc
lcall
icebp
adc
icebp
or
ljmp
nop
lock
add
jmp
pop
jnp
mov
jg
xor
lds
ret
add
jecxz
or
inc
add
icebp
pop
outsl
mov
xor
cmp
cmp
sbb
repz
inc
adc
ljmp
mov
hlt
scas
mov
mov
add
lahf
hlt
push
jg
pop
dec
cmc
push
aas
add
or
rorb
push
add
xor
jge
fisttps
mov
pusha
or
inc
lahf
cmc
jno
jg
sti
sbb
pop
pop
mov
hlt
mov
add
imul
mov
fistpll
outsl
scas
jnp
mov
fcomip
jl
orb
outsl
das
stc
ja
notl
jg
pop
scas
clc
xor
stc
jo
testl
je
cmc
lcall
lret
incl
icebp
dec
jg
rcll
mov
divl
or
pop
pop
test
or
or
les
loopne
mov
adc
movsl
cld
pop
mov
mov
call
scas
cld
enter
cmc
mov
std
fidivrl
fimuls
clc
jg
lock
out
scas
insl
push
lock
dec
sub
cltd
data16
mov
std
jg
or
rorb
cmp
gs
repnz
cmp
adc
decl
push
adc
movsl
loopne
orl
cs
push
pusha
lcall
ds
pop
sub
mov
inc
nop
adc
and
inc
mov
sbb
insb
mov
add
out
xchg
imul
mov
xor
call
pop
sbb
add
rolb
lcall
popf
inc
cmp
ljmp
push
xchg
inc
pop
mov
push
inc
popa
ret
adc
cmp
loop
or
sbb
jp
scas
pop
mov
pop
jno
iret
mov
ja
pushl
sbb
xchg
test
repnz
jne
add
decl
fidivl
cmpsl
push
pop
jecxz
repnz
jmp
bound
std
lret
or
call
ljmp
sub
ret
and
loope
mov
jmp
scas
inc
xchg
test
repz
cmp
cmc
stc
ljmp
push
cmp
call
popf
mov
jns
mov
cmp
test
mov
adc
imul
fistpll
sti
mov
jp
mov
inc
inc
fs
add
ljmp
pop
loopne
sub
sub
sbb
scas
shr
sub
rorl
xor
clc
cld
scas
or
ds
mov
inc
adc
jnp
cmp
adc
sti
out
mov
or
cltd
mov
call
in
scas
inc
decb
addr16
std
mov
ds
sbb
inc
and
pop
sub
arpl
das
dec
push
lods
jb
pop
std
inc
cld
add
in
inc
repnz
lods
sub
adc
call
add
push
pusha
incl
test
sbb
addb
push
hlt
ss
xchg
decl
lcall
push
sbb
push
push
pop
std
xchg
inc
adc
push
dec
out
cld
adc
call
or
push
nop
push
dec
and
or
std
xchg
xlat
popa
arpl
push
incl
test
adc
xor
stc
xchg
fistps
inc
pop
fs
jmp
addb
sbb
loop
sbb
sub
lret
or
mov
pop
lods
push
xor
xchg
pop
pop
add
notl
pop
adc
push
clc
js
xchg
dec
clc
fisubl
sub
shlb
push
dec
jp
ja
nop
inc
incl
pop
adc
fisubs
push
icebp
ret
xor
push
data16
xor
idiv
push
sub
mov
loopne
xor
clc
push
lea
out
imul
sahf
cmp
fwait
push
cli
lcall
dec
mov
cmpsl
sub
cwtl
insl
pop
lcall
loop
mov
lock
add
cli
imull
lock
jg
gs
add
xchg
mov
xchg
rcl
cld
jo
cltd
jmp
dec
fldlg2
les
inc
sbb
les
pop
pop
push
jb
mov
out
pop
sar
repz
inc
fistps
jmp
and
mov
or
pushl
mov
sti
insl
cmp
push
cltd
out
xchg
daa
mov
add
fiadds
out
jge
in
addr16
in
pop
jnp
adc
pop
mov
insl
in
gs
mov
cli
lcall
sahf
sti
adc
stc
out
cltd
inc
cld
cld
in
inc
mov
pop
std
ljmp
shl
mov
stc
out
lret
movsl
es
call
jmp
pusha
add
ja
mov
movsb
fistpl
rolb
push
icebp
ds
incl
add
sbbl
pusha
pop
cmp
xchg
and
or
ret
outsb
insb
stos
and
call
loope
xchg
xor
mov
adc
xor
adc
popa
clc
inc
and
push
mov
mov
or
mov
inc
push
xchg
call
push
popf
js
or
mov
pushl
orl
andl
mov
mov
cmpsb
push
lea
and
fucomi
inc
cmp
and
icebp
lea
arpl
cmc
cmp
ss
mov
data16
and
pop
decl
sahf
rorl
xchg
or
aaa
addb
pop
add
inc
rorb
pop
ljmp
or
loop
iret
sub
sahf
xchg
pop
jmp
xchg
movsl
mov
imul
in
leave
mov
dec
clc
pop
call
push
aas
pop
cli
jb
cmpsb
pushf
daa
push
pop
lret
add
pushl
push
xchg
arpl
mov
enter
or
xor
call
push
jb
rcll
orb
push
xchg
je
gs
leave
push
lret
add
loope
test
sahf
cmpsb
fsubl
mov
inc
push
xchg
cli
inc
gs
out
jae
jge
cli
mov
aas
scas
cmp
orb
mov
repz
ss
icebp
push
test
aas
sarl
dec
mov
lahf
neg
es
mov
lcall
rolb
jmp
sub
xchg
mov
icebp
fs
test
push
cmpsl
cmp
test
aas
cmpsb
mov
in
orl
popf
mov
out
push
popf
cli
mov
or
aad
aad
pop
scas
jb
stos
lcall
loopne
frstor
sbb
aad
inc
lods
push
ljmp
xor
incl
push
jno
aam
repnz
aaa
cmovb
push
xchg
lret
jp
incl
jno
jmp
in
push
mov
mov
outsl
gs
arpl
sub
ret
xchg
ljmp
adc
xlat
push
jle
mov
adc
jp
scas
mov
pop
fmul
mov
in
push
dec
decl
pop
xlat
push
mov
outsl
add
pop
shll
mov
push
adc
ljmp
addb
jnp
popa
pusha
jnp
pushl
mov
lods
jnp
in
push
mov
test
push
sub
mov
cli
aam
pop
repz
mov
inc
jp
mov
xchg
mov
lods
orb
sbb
bound
inc
sbb
call
into
mov
hlt
mov
mov
jl
rep
push
or
sbb
lret
ret
pop
sub
jl
or
pop
ret
or
fcmovnu
cmc
scas
pop
rcrb
xor
lahf
sbb
decl
sbb
pop
xor
mov
fiaddl
sbb
mov
pushf
adc
jle
sub
clc
jg
lea
jb
popa
lods
push
jo
pop
leave
dec
jmp
aas
jb
popf
cld
sub
push
cmpsb
jb
lods
jl
and
ror
out
xchg
lds
jmp
out
pop
scas
test
sbb
xor
sbb
bound
decl
jnp
and
sub
jae
cld
xor
jl
lcall
and
data16
fwait
lods
xchg
pop
int
je,pn
ljmp
and
lds
imul
orb
jg
dec
fwait
mov
add
lock
insl
jge
pop
jg
rorb
out
scas
jge
imul
xlat
mov
pop
insb
pop
outsl
sbb
ret
inc
push
xchg
in
xor
or
call
xor
aad
mov
sub
push
xor
add
inc
jnp
shlb
mov
icebp
int
popa
xchg
push
jbe
pushf
shr
add
addr16
idivl
jnp
incl
xor
les
cmp
or
fsubs
push
clc
into
aaa
mov
xlat
fdivp
pop
clc
lods
shll
out
jno
jg
lahf
pop
loop
cmpsl
clc
xchg
and
scas
sbb
pop
inc
js
inc
std
lock
into
lds
daa
jns
dec
std
jle
xchg
xchg
pop
or
test
movsb
pop
out
cmpsl
stc
int3
and
pushf
out
fsubrl
mov
jge
jae
mov
lds
stc
adc
mov
rorl
jle
popf
inc
pop
ljmp
fwait
popf
sbb
jmp
dec
je
jmp
mov
jge
push
das
jnp
inc
scas
push
mov
cmovo
xchg
idivl
out
fcomip
cltd
cs
jnp
or
push
out
jp
sti
js
addr16
lock
jnp
movq
leave
push
aas
cld
sti
aas
xchg
pop
xchg
jnp
mov
adc
lea
cmp
push
stos
inc
mov
shll
cmp
insl
jg
fsub
pop
cmc
lods
out
into
pop
lcall
cld
sub
sbb
out
sahf
push
ss
stc
push
lahf
cld
in
pushl
mov
hlt
fwait
aas
std
in
fistps
adc
xchg
stc
insb
fdivrs
int
jno
push
fucomip
fcmovnu
jle
lds
lock
pop
lock
xchg
stc
out
sti
lock
xlat
outsl
inc
sbb
lock
out
add
call
cmp
or
repz
inc
pusha
dec
aas
add
inc
or
aas
sti
jmp
add
mov
js
dec
pop
decl
test
call
cmp
shlb
inc
adc
jmp
xor
sub
push
sub
or
and
sbb
sbb
call
aas
call
sarb
add
rcrl
cmpl
je
add
jg
inc
and
rcrb
mov
inc
sub
shll
jg
stc
mov
in
mov
mov
inc
xor
std
out
lcall
cmp
inc
pop
mov
decl
icebp
cld
aaa
mov
add
and
jmp
inc
cmp
ret
sub
in
inc
inc
sub
inc
add
xor
inc
dec
jp
ljmp
inc
inc
daa
push
daa
test
or
dec
nop
inc
inc
enter
inc
dec
sub
aas
or
push
clc
inc
incl
cmp
xor
ret
add
jnp
ret
inc
jl
inc
xchg
test
jmp
lock
call
jnp
xchg
mov
pop
add
mov
push
test
cmp
incl
ds
push
jl
and
mov
mov
dec
xor
inc
movsb
inc
jecxz
inc
jno
inc
jb
inc
inc
or
repz
mov
or
jns
adc
lods
mov
sub
jg
inc
orb
fdivl
subb
incl
dec
enter
xchg
movsb
subl
movsb
pusha
lds
idiv
jmp
add
ja
inc
jns
jp
pop
addr16
jge
les
addl
xchg
insb
dec
xchg
jl
cwtl
mov
pushf
leave
jno
dec
ja
or
sbb
pop
popf
aam
cmp
dec
hlt
test
pop
jnp
dec
mov
dec
mov
mov
jge
leave
popa
int3
in
add
jg
leave
sahf
adc
or
fmull
fmul
scas
int3
dec
lods
adc
mov
dec
scas
in
jmp
cld
decl
hlt
lret
dec
mov
dec
addb
xchg
dec
sahf
mov
mov
dec
lcall
loopne
movsb
dec
pop
imul
or
mov
int3
lods
mov
sub
cmp
lea
cmpb
cmpsb
aas
cld
movsb
add
dec
push
mov
addl
cmp
dec
rorb
sub
sar
mov
int
push
pop
inc
dec
jl
fmuls
int
xor
jg
mov
or
add
hlt
dec
fsubrp
int
cmp
inc
cmp
jnp
jg
loope
xchg
jo
jp
adc
enter
call
push
enter
cmp
dec
out
hlt
dec
pop
push
add
hlt
int
into
repnz
dec
loopne
dec
cmc
jmp
fcomip
test
or
repz
mulb
testb
iret
cli
movsb
dec
ret
clc
jl
cld
repz
fmull
adc
hlt
add
rorb
add
incl
push
adc
cld
je
push
xor
aas
cmp
gs
ret
mov
mov
dec
sbb
iret
cmp
insl
cwtl
shrl
subb
adc
sbb
and
dec
jg
decl
sub
sub
and
push
and
mov
call
or
shrb
popf
shlb
push
cmp
dec
push
cmpsl
xor
ds
pop
test
push
push
push
in
hlt
sti
mov
xchg
ljmp
push
aaa
int
insb
rol
xchg
call
dec
add
pop
add
cmp
jb
or
sub
push
inc
lcall
inc
sbb
inc
add
dec
aad
cs
aam
push
fimuls
and
sbb
dec
push
push
inc
insl
aam
in
push
lods
cld
mov
push
dec
jne
inc
fstpl
adc
rolb
cmp
jl
push
add
cmpb
jmp
call
ss
sarl
mov
insl
rorl
aaa
movsb
and
dec
mov
pop
mov
pop
mov
insl
fstl
in
push
outsl
std
push
jo
xlat
outsb
xor
pop
push
push
jo
dec
xlat
je
push
jne
iret
das
dec
add
inc
fbld
jg
pop
mov
and
cmp
call
insb
rolb
orb
add
orb
test
xchg
push
dec
or
jbe
pop
jg
dec
aas
pop
push
jbe
push
imul
jne
mov
pop
in
jne
mov
sbb
xchg
and
mov
mov
sti
out
int
mov
xchg
popf
fsts
fstps
sbb
mov
xlat
mov
ja
add
mov
fadds
incl
in
aad
in
jg
xlat
arpl
add
mov
cmp
aas
clc
push
mov
push
push
cmpsl
jge
mov
pop
mov
mov
pop
mov
push
mov
cmpb
aas
and
je
icebp
aas
sti
add
pop
push
mov
scas
popf
fmul
int
add
fisttpl
loopne
scas
jg
inc
fadds
mov
clc
addb
int
les
insl
dec
fadd
cmp
mov
mov
push
mov
popf
mov
aas
adc
jne
fnsave
aad
push
in
or
and
les
test
ds
push
call
fucom
idiv
std
jg
fsub
mov
adc
in
popa
nop
or
or
aad
cli
jmp
adc
repz
mov
aas
mov
cli
and
lcall
sub
repz
mov
lret
scas
add
incl
jb
push
pusha
lock
lock
in
add
dec
push
cmp
orl
movsl
std
orl
pop
jmp
pusha
fdivl
cli
in
loopne
into
pop
nop
adc
loope
popf
pop
fmull
pop
iret
sbb
sbb
add
sahf
pop
sbb
pop
sbb
decl
adcl
add
pusha
pop
push
loop
inc
popa
pop
push
loop
bound
loop
cmc
add
jle
stc
jne
test
inc
xor
cld
icebp
incl
sub
outsb
adcb
cmp
pop
test
pushl
dec
dec
incb
add
add
pop
add
out
imul
loopne
cmpsb
jecxz
xchg
loopne
cli
jmp
adc
loope
inc
loope
outsb
bound
out
inc
aas
push
in
ss
inc
inc
fs
out
decl
adc
data16
xchg
loop
mov
dec
sbb
xchg
loop
jecxz
std
incl
arpl
fisubs
movsl
in
mov
sub
cmp
jecxz
adc
sbb
sbbb
fimull
gs
push
add
out
test
rol
in
shlb
or
pusha
loopne
push
xchg
cmpsl
cmp
cmpsb
add
movb
scas
pop
out
out
in
push
or
fs
out
inc
into
fs
ss
and
dec
ds
cld
mov
dec
es
push
out
push
out
ss
addr16
out
cmpsb
rorb
call
and
add
out
push
push
pop
pop
dec
insl
jg
mov
data16
push
decl
pop
sbb
fs
pop
ss
loopne
call
std
incl
js
jg
call
jae
push
adcb
xchg
outsb
imul
decl
ds
jle
xchg
arpl
xchg
push
push
xchg
mov
dec
imul
ljmp
loopne
jmp
push
ljmp
jbe
xchg
imul
call
imul
jle
imul
jg
test
call
jle
xor
pusha
add
incl
in
pop
xor
inc
imul
out
xchg
pop
cld
mov
imul
nop
enter
insb
into
and
jle
cwtl
pop
push
jbe
fistps
jg
iret
fsubrp
mov
lret
mov
mov
insl
fmuls
mov
jg
cli
pop
es
into
movsl
in
inc
mov
lods
jmp
lock
incl
add
int
int
adc
iret
std
fadd
es
into
inc
arpl
jg
lcall
insb
inc
enter
insl
fmull
add
jmp
jg
jbe
fldl
decl
lock
out
icebp
into
xor
outsb
rep
enter
jg
dec
jbe
out
fsubrp
jg
data16
out
gs
std
push
push
push
out
xchg
jnp
outsb
imul
hlt
xchg
xchg
out
out
dec
jo
ss
add
outsb
add
cmp
pop
lock
mov
inc
mov
ljmp
add
lods
imul
shl
outsb
std
dec
std
addb
cmp
int
pusha
sbb
add
int3
dec
dec
jmp
icebp
adc
repnz
jg
and
in
jmp
inc
add
and
icebp
adc
es
jno
pop
repnz
jg
ljmp
jno
outsl
repnz
sub
sub
sbb
icebp
xor
test
lds
jmp
jb
dec
jae
insl
repz
sub
jg
icebp
and
out
fbstp
jg
inc
jb
out
daa
repnz
repz
mov
lock
pcmpeqb
icebp
cmpsl
pushl
test
jg
shll
jno
ja
jnp
cmpb
add
pop
incl
dec
pushl
add
push
dec
test
je
push
hlt
sub
daa
imul
decl
push
addr16
jg
out
cmc
push
jg
pop
mov
fs
lcall
test
jbe
scas
cmc
push
iret
cmc
pop
xchg
jge
pop
mulb
cmpsl
rorb
jbe
das
add
lock
dec
cwtl
xchg
push
dec
pop
orb
icebp
ljmp
imul
out
add
filds
out
incl
adc
xchg
pop
gs
cmc
nop
sub
dec
mov
clc
mull
xchg
insb
cmpsl
js
negl
int
ja
jg
psadbw
mov
lahf
repnz
clc
incl
gs
adc
clc
mov
mov
in
psubw
test
in
std
int3
jbe
iret
imulb
xchg
lods
je
leave
pushl
add
mov
das
divl
jns
testl
iret
dec
adc
pop
jp
pop
stc
add
jp
sub
nop
js
outsl
adc
push
js
incl
decl
stc
movsb
xchg
jp
das
jp
pop
stc
lods
shll
in
imull
test
cli
xchg
push
jp
pop
jp
idivl
test
icebp
push
jmp
js
xor
mov
push
or
ja
aaa
jb
paddd
aaa
ja
sub
clts
je
fisttpl
dec
sbb
inc
jo
call
jnp
outsl
sti
mov
jl
cmpsl
cld
and
leave
pop
jnp
ja
xlat
cld
int
mov
rcrb
sti
leave
mov
aam
jge
jg
aad
and
lret
lahf
std
sar
call
xchg
jl
pop
cli
mov
imulb
out
lret
aas
add
test
fistps
pop
incl
pop
xorl
outsl
jns
pop
jle
xchg
xor
cmp
ret
ret
pushf
stos
ljmp
idivl
jle
fcomi
cld
icebp
das
push
pop
std
repnz
jge
pop
jg
outsl
loope
std
jg
ja
clc
push
push
jg
scas
inc
test
mov
addb
mov
or
sub
imul
sub
aam
xlat
mov
pusha
shr
pushl
cli
jl
mov
xlat
scas
cmp
cmc
ljmp
adc
incl
in
cmc
loop
sub
in
and
jo
iret
inc
or
inc
pop
mov
dec
incl
or
movsl
cmp
cmp
shll
mov
test
inc
std
ljmp
or
aad
dec
rcrl
mov
push
add
sbbl
and
fwait
mov
aam
cmp
xchg
pusha
add
lcall
push
divps
add
aam
inc
test
push
movsb
adcl
xchg
adc
jmp
test
inc
xchg
sub
dec
inc
push
adc
arpl
dec
inc
and
dec
leave
imul
push
ljmp
andb
stos
sub
insb
sbb
push
mov
inc
mov
cld
aas
sarb
jbe
enter
pop
decl
pop
xor
aaa
xchg
shr
xchg
jb
sbb
cmc
dec
mov
mov
jns
xlat
inc
mov
mov
out
roll
pop
data16
jns
lcall
jecxz
fmuls
dec
and
jno
push
jle
xchg
sbbl
loope
xlat
je
clc
push
stc
pop
and
sub
mov
cmp
arpl
ret
movsb
cli
decl
push
test
add
push
inc
cmp
or
je
shrl
mov
xchg
test
sar
push
ja
add
leave
jb
add
in
aas
inc
xlat
data16
cmp
jb
sub
jmp
addr16
je
mov
incl
mov
daa
mov
insl
push
fldenv
popf
mov
jno
stc
addr16
outsl
out
daa
movsl
js
imul
jmp
pop
loopne
sub
jmp
xchg
xchg
in
fmuls
lods
xchg
paddd
fdivrs
cmpsl
lods
mov
or
mov
and
paddd
stos
push
push
mov
cltd
and
jmp
mov
sub
call
pop
imul
fidivrs
jmp
mov
xchg
loop
out
mov
cmp
mov
mov
mov
scas
idiv
jmp
mov
mov
jg
mov
mov
fs
xchg
sub
sbb
cmp
stos
and
lds
mov
lcall
and
repz
jo
mov
pop
adc
call
call
daa
pop
inc
and
gs
mov
sbb
fdivl
sarb
pop
cmp
sub
rorb
iret
dec
cmp
sar
jg
in
daa
stos
adc
js
xchg
lock
mov
or
test
insb
icebp
dec
and
lock
cmp
mov
xchg
das
mov
adc
sub
decl
cmc
pop
sti
sbb
ds
xor
cmp
jecxz
outsl
mov
js
jae
xor
dec
out
jae
js
jge
push
cmp
sti
fdivl
sub
jne
lcall
scas
fwait
dec
mov
stc
filds
mov
adc
lds
jg
jecxz
pop
shlb
mov
cmp
sarl
repnz
aad
and
repnz
jecxz
pop
and
dec
es
pushf
test
pop
jl
mov
ds
ljmp
jg
sti
not
pop
mov
jle
xchg
aas
cld
in
dec
addb
pop
lock
stos
loope
out
push
jl
add
ja
dec
insb
cmp
jmp
ja
fadd
inc
ss
or
aad
sti
loop
popl
mov
add
inc
cs
add
data16
inc
into
mov
mov
sub
push
lods
mov
sbb
push
popa
pcmpeqw
les
add
xchg
xchg
pusha
or
out
rolb
popf
mov
icebp
mov
decl
mov
clc
adc
and
mov
xor
jno
popa
pop
loop
adc
sbb
adc
call
aam
es
push
lcall
fimuls
push
and
adc
sbb
mov
pushl
add
mov
add
bnd
aad
adc
push
lahf
enter
icebp
movb
bound
jmp
ljmp
aas
sub
dec
mov
sub
xchg
xor
jmp
push
cs
decl
xor
loopne
and
xchg
sub
adc
sub
sti
push
bnd
dec
int3
push
xchg
xchg
mov
xor
adc
lahf
pushl
arpl
pushf
mov
daa
ss
stc
dec
pop
roll
sbb
ja
pushl
out
rorl
popf
loope
cmpsl
aaa
in
iret
outsb
ret
stos
fs
ljmp
mov
adc
jmp
push
arpl
pop
mov
ss
orb
sub
dec
clc
cwtl
cmp
inc
jg
test
lcall
jge,pn
aaa
xor
push
cwtl
xor
nop
test
ljmp
rcrl
aad
dec
sbbl
dec
mov
rcrl
mov
decl
push
test
test
imul
jecxz
lock
nop
add
call
dec
jecxz
out
clc
inc
xor
cli
mov
lcall
push
sbb
mov
push
jg
gs
pop
icebp
movsl
mov
std
stos
dec
stc
stos
xlat
rclb
stos
jg
in
inc
adc
push
rcrl
mov
add
or
loop
xchg
xchg
xchg
jmp
add
hlt
mov
xchg
push
addr16
sub
or
rclb
or
fcmovu
ss
rolb
decl
addb
mov
push
sub
orl
pushl
xchg
sub
sub
push
test
movsl
outsb
outsb
icebp
stos
pop
ret
mov
mov
fucomp
decl
mov
adc
rolb
xchg
jge
fs
fnstcw
jge
imul
push
pop
cltd
xor
jae
push
add
idivb
imul
aas
cld
hlt
inc
push
or
inc
sbb
sub
imul
mov
call
cmc
xor
push
and
cltd
push
dec
mov
adc
inc
je
jno
push
pop
mov
adc
mov
lock
mov
cltd
xor
sti
dec
inc
push
insb
mov
pop
movl
gs
pop
lret
mov
daa
sti
fxch
decl
ror
pop
fidivs
sub
mov
xor
push
js
jecxz
jae
decl
inc
cwtl
xor
inc
xor
sub
push
repz
or
add
jnp
xchg
and
ljmp
mov
cwtl
adc
pop
add
push
test
test
ja
popf
cli
mov
test
in
jmp
pushf
into
xor
sbb
lret
mov
push
mov
mov
mov
ljmp
hlt
movsl
adc
pop
std
decl
mov
popa
jmp
jb
xchg
daa
cmp
imul
pop
adc
enter
mov
ret
mov
sub
fld
push
outsl
mov
mov
decl
es
cmp
fsubrp
out
movsl
cltd
push
outsb
jp
decl
out
sub
in
inc
pop
pop
push
out
jne
xchg
sub
xlat
mov
sbb
lcall
pop
fsts
jb
xchg
dec
data16
ja
jno
icebp
jae
cld
lods
mov
push
mov
ds
loop
jg
mov
push
rcll
xor
jo
fmul
xchg
ds
call
aas
cmp
hlt
mov
aaa
mov
sti
in
aas
pushl
fsubs
xchg
xor
test
jmp
mov
inc
push
scas
sub
pop
sti
fsubs
fdivp
mov
pop
jmp
sahf
sbb
pop
das
xor
ljmp
sbb
adc
jp
mov
mov
xchg
outsb
mov
sti
jl
cld
adc
adc
mov
pop
idivl
jg
negb
or
pop
push
jmp
repz
cli
dec
daa
cmp
mov
mov
sbb
xchg
push
inc
sub
cmc
fsubs
notb
lret
bnd
call
jmp
cmp
pop
mov
out
inc
out
jb
pop
mov
repnz
sbb
sbb
call
ret
paddb
jp
bound
clc
stos
cmp
lcall
sti
mov
cmp
fisttps
push
std
icebp
outsl
aas
jmp
jae
xlat
cmp
fnstsw
cmc
pop
mulb
push
incl
or
fcompl
lds
mov
add
add
sahf
add
pop
decl
out
sub
and
daa
sbbl
sahf
pop
push
pop
push
stos
pop
add
decl
cmp
dec
pusha
or
fdivp
sub
sbb
into
lcall
mov
jne
fbld
or
cmp
add
push
and
ret
fisttps
mov
push
mulb
adc
loope
dec
mov
into
filds
ss
sub
repnz
adc
popa
jg
call
dec
loope
pop
loope
std
and
bound
inc
add
loopne
shlb
cli
pusha
mov
sbb
sbb
mov
and
cli
mov
push
testl
push
mov
jmp
movsl
loope
lock
and
clc
sub
mov
cmp
lahf
loop
xchg
iret
mov
and
loopne
frstor
mov
mov
pop
repz
out
jmp
mov
sub
inc
sub
pop
sub
das
mov
loop
jg
and
mov
sbb
popa
add
bound
adc
sub
jecxz
sahf
loop
mov
cld
jmp
or
inc
loop
lret
inc
and
cli
and
xor
jmp
scas
bound
lret
cmp
cmc
xor
sub
mov
call
adc
int3
and
ret
jno
cmp
xchg
cli
push
bound
or
lcall
movsb
sub
and
mov
push
and
inc
bound
data16
mov
arpl
in
out
sub
mov
and
and
jg
aas
mov
loop
inc
movsb
inc
jle
xor
arpl
inc
ljmp
ret
and
dec
sbbb
aaa
dec
and
mov
mulb
and
out
mov
mov
and
movsb
dec
dec
movsl
inc
jbe
cmp
and
movsb
pop
sahf
in
into
pop
scas
les
call
cmp
subb
sbb
push
pop
inc
in
ret
out
gs
mov
pop
fisubs
jmp
pusha
or
arpl
cli
movsl
popa
push
arpl
out
and
bound
ret
mov
out
and
adc
xchg
add
js
addr16
incl
push
popa
jp
imul
xchg
sub
ret
negl
xchg
es
sahf
movsl
mov
out
into
xchg
data16
out
jg
mov
and
data16
outsb
jb
es
ja
daa
dec
sub
incl
jmp
xor
je
je
addr16
je
daa
jb
out
lret
jmp
jae
addr16
out
arpl
call
sub
jnp
daa
jl
add
pop
mov
neg
mov
sub
daa
imul
cmpsl
jl
inc
inc
clc
aas
jecxz
jge
call
or
push
mov
call
pop
push
sub
js
mov
jg
scas
ss
scas
sub
test
ret
out
ljmp
loop
fs
gs
sbb
jecxz
jl
sub
sbb
das
ds
sub
subb
xor
lret
call
ds
jmp
xchg
inc
sub
inc
jg
jmp
pop
jmp
inc
imul
lcall
jmp
outsl
cltd
jle
cltd
test
into
jmp
push
push
testl
inc
test
push
ret
mov
test
mov
call
xchg
mov
mov
mov
mov
sub
stos
cmpsb
es
xchg
movsl
sub
xchg
jb
sahf
xor
xchg
sub
test
sub
push
push
cmpsb
imulb
repnz
sar
ljmp
shrb
cs
subb
push
xor
push
push
imul
lcall
ljmp
stos
test
push
xchg
stos
mov
ljmp
imul
mov
inc
or
mov
mov
sub
pop
stos
mov
jmp
or
push
push
insl
mov
imul
stos
sub
insb
ret
sti
decl
ret
lret
inc
in
ret
cmp
pop
or
mov
jmp
bound
dec
insb
mov
push
pushl
insb
enter
sahf
sub
inc
test
lods
lds
xor
lcall
cld
lods
mov
lods
mov
pop
stos
int3
data16
int
insl
into
sbb
outsb
in
ret
in
dec
insb
lret
xchg
rcrl
in
mov
dec
out
ljmp
into
insb
rorb
lret
jno
dec
sub
mov
add
fwait
mov
lods
ror
ret
sbb
insl
ret
mov
fldt
aas
sbb
inc
in
fstpt
fisubrs
ret
loop
fstpt
loope
sub
decb
outsb
loopne
lods
fcmovbe
fnstsw
insl
jecxz
fildl
iret
xor
out
loop
scas
fisubrs
scas
fdivr
lods
jecxz
outsb
loope
scas
jecxz
lods
in
xlat
ljmp
scas
fldl
loop
lods
fdivrl
sub
pop
out
out
in
ret
pushl
fcompl
cs
scas
jmp
scas
lock
push
das
repnz
lock
add
idiv
push
ds
repnz
repz
out
icebp
xor
xrelease
notb
das
cmc
cs
das
idivb
push
imull
das
cli
push
outsb
clc
sub
push
fldenv
sub
lods
sub
outsl
std
aas
cli
sti
mov
cld
or
out
sub
in
cmp
cld
cli
outsl
jmp
jo
cli
das
incb
mov
adc
repnz
into
outsl
add
xor
sbb
add
sti
push
or
push
push
scas
add
outsl
add
pop
jecxz
add
ljmp
or
xor
repz
add
jle
pop
pop
jo
inc
add
xor
sub
icebp
fidivl
or
push
jmp
or
xor
or
add
add
xor
mov
or
out
push
jmp
dec
testl
iret
pop
jno
push
jno
pop
mov
arpl
sbb
adc
std
adc
incb
add
adc
xor
outsl
mov
push
xor
dec
jno
jg
sbb
sbb
and
icebp
sbb
add
jno
adc
divl
lcall
shll
scas
jno
sbb
push
sbb
mov
xchg
xor
es
xor
sub
je
rol
inc
daa
xchg
xorb
xor
and
sub
sti
mov
daa
fwait
adc
subb
jb
jb
repnz
mov
jbe
jg
mov
pop
mov
cmpsl
mov
clc
notl
sub
sbb
repz
das
sbb
shl
mov
jg
dec
xor
pop
jae
mov
inc
mov
add
xor
mov
ss
push
push
sub
jae
mov
iret
pushl
cmp
sti
pushl
xlat
repz
repz
repz
xor
repnz
or
hlt
and
xor
pop
hlt
inc
shll
jae
pop
xor
roll
jmp
cmp
stos
aaa
clc
cmp
inc
cmp
iret
inc
dec
imul
filds
fwait
je
sbb
mov
dec
lret
je
mov
dec
imul
dec
xlat
je
mov
out
je
aas
std
mov
stos
hlt
dec
divl
mov
sbb
outsl
je
hlt
push
or
dec
pop
push
mov
imul
dec
iret
dec
ret
je
pop
cld
je
outsl
cmc
pop
push
cmc
cmp
je
mov
add
pushl
cmp
dec
out
cmc
pop
fbstp
divl
xlat
cmc
push
hlt
pop
sbb
ret
jne
jmp
popa
adc
pop
aaa
mov
inc
ss
out
jne
negb
sti
gs
jbe
das
and
pushl
iret
push
pop
mulb
arpl
mov
pusha
adc
pusha
mov
push
jbe
push
pop
lahf
ss
je
mov
pop
jecxz
icebp
pop
pushl
out
imul
lcall
mov
div
jo
ja
aas
mull
ja
and
cmp
push
decl
aaa
arpl
ja
divl
ss
push
mov
aaa
je
ja
dec
ss
idivl
lcall
xchg
insl
inc
inc
outsb
inc
mov
aaa
jle
idivl
idivl
jbe
imul
add
div
jg
js
pop
mov
filds
das
mov
decl
xor
dec
mov
sti
aaa
adcb
iret
imul
out
xchg
sub
outsb
mov
jge
subb
xchg
mov
push
pop
ret
cmp
jg
mov
mov
cmpb
xchg
mov
mov
mov
mov
js
mov
das
jns
sub
pop
sbb
cmp
clc
mov
clc
nop
mov
pushl
mov
ja
pop
out
xchg
pop
js
add
cmp
fildll
out
cwtl
mov
inc
mov
lcall
fildll
mov
cwtl
orl
stc
xlat
clc
xchg
fwait
mov
push
imul
xor
mov
jmp
cs
mov
js
mov
add
mov
cmp
out
test
jns
jecxz
popf
scas
mov
jmp
jns
mov
mov
scas
xchg
cli
cltd
xlat
jp
jecxz
dec
mov
mov
stc
out
mov
jp
inc
cmpsb
arpl
scas
cmp
incl
cmp
jp
lahf
jnp
mov
out
cmp
inc
clc
stc
xchg
repz
outsl
mov
mov
scas
sar
mov
sti
negl
cld
jp
int3
xor
cmp
mov
mov
jl
sarl
lods
aaa
jl
fistpll
cmp
imul
cmp
arpl
xchg
mov
shll
sbb
cmpsl
clc
mov
mov
mov
cmp
subl
jecxz
mov
iret
dec
mov
std
out
xchg
sti
ret
inc
ret
cmpsl
js
adc
subl
shr
aad
cmp
loop
jl
sub
cmpsl
jl
cmpl
rorb
into
and
inc
jge
lahf
mov
jge
and
cmpsl
cmp
repz
iret
std
lret
fmull
cmp
cmp
std
mov
add
fisubs
pop
jle
fwait
cmp
or
incl
in
ds
mov
addr16
out
mov
pop
shl
es
ds
ds
pop
movsl
jmp
ds
mov
mov
fistpll
out
out
out
out
ds
testl
ljmp
icebp
pop
aas
repnz
cltd
das
aas
repz
mov
inc
mov
mov
mov
addr16
pop
jg
cmp
clc
xchg
xchg
dec
lahf
aas
cli
cmpsl
add
incl
mov
sbb
iret
aas
std
sarl
aas
out
aaa
decl
add
jecxz
inc
test
sbb
je
adc
incl
sub
addb
bound
mov
cmp
clc
adc
and
ss
xor
lds
xchg
adc
mov
xor
xor
inc
or
lcall
andb
jne
adc
push
test
lcall
jbe
cli
cmc
incl
call
and
jmp
mov
sti
push
outsb
pop
mov
push
and
push
fcomi
outsb
fidivs
test
in
loopne
paddd
jbe
cwtl
in
add
sub
mov
aas
call
cwtl
sub
addr16
stos
sbb
out
lock
ljmp
in
in
mov
std
push
rcr
call
sti
das
jb
shll
lods
mov
push
aaa
dec
pop
mov
xor
aas
idivl
fcomip
jge
inc
aaa
dec
adc
jle
fdivrp
clc
cmc
mov
fstpt
mov
gs
filds
mov
in
decl
mov
scas
jb
add
cmp
adc
mov
out
inc
imul
insb
ucomiss
sbb
decl
adc
pop
push
je
inc
mov
fistps
rol
or
xorl
or
aad
mov
and
or
cmp
inc
adc
cmp
jmp
adc
ljmp
repnz
inc
divb
push
cmpl
fsubrl
pop
lcall
jl
lds
ret
in
dec
sbb
jp
pushf
xchg
dec
cmp
mov
lods
xchg
mov
enter
bound
loopne
addb
and
inc
mov
adc
call
sub
jne
adc
push
inc
xor
in
push
dec
sbb
orb
jns
iret
dec
decl
pushl
or
add
mov
sarl
aas
lods
xor
push
idiv
adc
popa
decl
sub
xchg
sbb
push
pop
inc
add
xor
pop
jmp
fisubrl
add
in
and
popa
iret
cmp
pop
paddd
ljmp
movsl
pop
insb
fstps
mov
aad
into
jbe
xor
mov
xchg
pop
sbb
and
mov
fdivrp
lcall
insl
mov
es
or
fs
inc
sahf
and
daa
add
pushf
xchg
aad
pushl
sbb
cmpsb
mov
andb
cltd
sbb
sahf
arpl
jns
or
or
call
xchg
dec
fldenv
pop
mov
xchg
mov
mov
scas
jmp
sarb
sbb
mov
pop
fwait
in
mov
jle
out
mov
mov
mov
push
incl
incl
out
mov
mov
mov
jmp
pop
sbb
add
mov
mov
add
pop
cld
repnz
aaa
mov
cld
icebp
mov
aam
jns
jmp
neg
gs
popf
jbe
fisubrl
andb
out
jbe
idiv
cwtl
loopne
xlat
xlat
scas
divl
mov
mov
stc
out
addr16
jns
call
inc
fidivs
insl
popf
clc
fidivrs
mov
fidivrs
popf
xchg
stc
jmp
aas
pop
std
out
cmpsl
sbb
filds
jmp
pop
pusha
inc
orl
and
pop
push
in
pop
push
push
pushl
push
xor
sbb
and
adc
nop
addb
and
mov
jnp
repz
aas
cld
incl
dec
xor
pop
sub
adc
pusha
stos
fadds
cmpsl
lcall
loope
imul
cmp
or
and
or
cmp
mov
and
and
fstl
push
and
call
ds
adc
add
pop
push
mov
cwtl
push
adc
adc
incl
fwait
sbb
xor
and
test
and
mov
pop
inc
sub
mov
and
mov
incl
mov
sbb
xchg
sbb
adc
push
xchg
xchg
call
call
mov
push
dec
jp
push
cld
movsb
adc
push
lret
xchg
xchg
cmpsb
dec
in
cmpsl
inc
cld
add
push
xchg
and
dec
dec
jmp
xor
jb
mov
dec
inc
bound
xchg
sbb
dec
mov
sar
jo
test
dec
imul
aas
mov
fxch
scas
pusha
movsl
jp
hlt
out
leave
or
jmp
pushl
lahf
addl
mov
out
jmp
adc
fnstenv
mov
lahf
add
ds
lcall
or
sbb
push
daa
adc
adc
push
and
mov
jg
aam
pop
aad
cmp
movsb
and
shl
pushf
adc
decl
ficoml
mov
jmp
ficoms
cmp
imul
adc
inc
adc
ljmp
adc
push
cltd
ficoml
adc
adc
pop
dec
stos
pop
adc
push
mov
adc
pop
leave
pop
push
mov
adc
clc
pop
jge
xor
jge
scas
jno
jmp
jmp
call
ficoms
pop
stc
ficoml
mov
iret
leave
enter
pop
ret
push
push
mov
push
jmp
fistpl
ds
mov
xchg
in
sub
lret
and
cmp
outsl
in
cmp
pop
iret
jle
mov
adc
pop
rcrl
in
push
mov
mov
in
insb
notl
fcmovnu
push
mov
inc
outsb
jns
fistpl
push
mov
mov
jecxz
pop
mov
jg
adc
cmp
data16
inc
sub
fwait
xor
popf
cltd
fidivl
sbb
rorb
inc
mov
or
stos
push
xlat
pop
xor
sub
or
jg
lea
mov
insl
pop
adc
fstp
xor
imul
in
adc
add
mov
add
inc
push
dec
mov
aad
or
popa
dec
lods
add
adc
xor
bound
pop
inc
pusha
lods
filds
imul
in
xchg
pushf
ljmp
sahf
test
mov
in
mov
sub
mov
int
pop
adc
mov
popa
int
cmpsb
push
xchg
push
jne
outsl
lods
dec
outsb
pop
cmp
testl
or
jecxz
push
pusha
lea
mov
and
ret
pop
push
adc
xor
pop
sub
xor
ret
adc
add
sbb
adc
leave
jae
imul
mov
push
adc
lds
and
andb
adc
add
add
leave
jo
fsts
aam
mov
fistl
lahf
pop
or
mov
loop
cmpsl
jl
pop
fildl
inc
mov
mov
adc
sbb
cmp
clc
sbb
mov
add
ret
nop
cmp
xor
mov
adc
sarl
or
or
sbb
dec
mov
or
arpl
mov
dec
xchg
nop
nop
xchg
or
mov
or
or
add
dec
push
pop
sub
adc
das
fisubrs
mov
es
pop
fwait
and
mov
or
cmp
push
add
cmp
mov
mov
push
or
sub
add
mov
xlat
in
lea
add
add
xlat
and
pop
rorb
adc
add
xchg
adc
push
mov
lahf
xor
outsb
or
jmp
cmp
add
nop
pop
lea
or
shll
or
xchg
mov
decb
adc
movsl
and
cmpsb
fisubl
xor
add
std
inc
mov
add
jns
dec
imul
xchg
pop
loopne
sbb
or
push
dec
cmpl
adc
cmp
mov
jae,pn
xor
and
or
xor
fisubrl
pop
pop
sbb
mov
and
cltd
add
in
imul
sbb
sub
add
xor
add
sub
dec
and
add
leave
inc
sub
xchg
or
and
add
mov
inc
pop
flds
adc
adc
push
jb
bound
mov
adc
shrb
adc
push
jnp
rcrl
movsl
dec
xor
enter
adc
dec
pop
jno
push
insl
adc
movl
sbb
jns
sub
mov
cs
inc
pusha
dec
test
std
sbb
jmp
fstpl
push
fistpl
pop
es
pop
adc
add
jg
add
pop
leave
inc
iret
push
or
jo
xor
pop
mov
rolb
pop
test
fwait
xor
inc
cltd
mov
add
cltd
or
sbb
nop
add
add
add
push
push
pop
inc
add
sub
push
mov
repnz
or
add
push
insb
gs
or
inc
shrl
inc
das
je
insb
adc
arpl
and
cmpsl
and
imul
mov
addr16
sub
xchg
xor
orl
repnz
add
sbb
rolb
loopne
adc
outsb
insl
popa
aad
pusha
sti
fmull
mov
fsubrs
push
dec
rcrl
inc
add
outsb
lods
pusha
lret
and
xor
mov
push
or
dec
inc
outsb
fs
adc
sbb
and
test
adc
push
dec
or
sub
add
shlb
sub
imul
loope
cwtl
mov
push
lret
jno
fwait
sub
test
cmp
sbb
rclb
sbb
addr16
cmp
scas
xchg
jbe
pop
test
adc
fadds
leave
mov
in
and
stos
xor
pop
call
pop
negb
dec
inc
dec
inc
daa
mov
mov
js
lret
push
arpl
sbb
and
push
leave
sub
pop
and
sbb
pushf
adc
and
xchg
andb
data16
in
fldenv
xchg
inc
arpl
pop
jbe
add
addr16
and
imul
outsb
adc
out
pop
mov
fwait
add
mov
or
out
push
stos
pusha
add
pop
mov
jnp
in
stos
or
dec
add
es
ja
sbb
mov
imul
xor
ret
cmpsb
loope
mov
xchg
lods
call
push
inc
adc
mov
pusha
mov
push
sub
push
sub
add
shll
gs
mov
inc
idiv
call
xlat
sbb
mov
insl
pop
pop
xchg
loope
mov
sbb
xor
sub
xchg
jmp
icebp
push
push
sub
sub
inc
or
sub
imul
movsb
push
outsl
lahf
roll
adcb
scas
fwait
pop
xor
loop
inc
sbb
outsb
inc
cwtl
insb
adc
out
inc
lock
fistl
or
mov
lods
sub
mov
sub
call
cmp
cmp
xlat
or
sbb
arpl
add
and
sti
push
and
adcb
incb
push
fmull
inc
sub
int
scas
sub
xor
lcall
imul
mov
insb
mov
cmp
lock
imul
adc
inc
mov
notb
lret
xor
out
pop
cmpl
into
adc
lea
enter
dec
mov
nop
sub
enter
aaa
shll
sbb
aaa
loope
mov
sub
push
rolb
jbe
or
or
sub
test
and
outsl
into
dec
dec
jbe
dec
pusha
mov
mov
cmpsb
or
add
xchg
es
outsl
dec
pop
daa
dec
xchg
fisubrl
sub
push
xchg
and
sahf
sub
jo
xchg
out
ja
and
inc
imul
pusha
xchg
movsb
addr16
test
fbld
stos
jmp
inc
and
out
pop
aam
or
and
inc
test
mov
inc
inc
insb
mov
orl
stos
pop
or
fs
dec
dec
inc
daa
xor
mov
pop
mov
xor
fwait
aas
dec
lods
fstpl
movsl
dec
push
dec
push
xor
test
push
mov
push
push
movsl
stc
and
push
jmp
cmpl
int
rolb
sbb
aad
mov
outsb
sbb
inc
inc
push
xor
ds
hlt
adc
sub
jnp
ss
push
fstpt
outsb
adc
adc
and
sbb
cmp
xchg
sbb
mov
and
and
xor
push
ja
and
inc
inc
add
add
sbb
mov
pop
arpl
xor
xor
push
mov
pop
fsubl
outsb
aad
adc
adc
cmp
mov
mov
push
jno
add
mov
push
push
pop
sub
mov
or
inc
push
movsl
lret
pop
fcoms
ret
es
mov
mov
dec
xor
and
fstpl
mov
sub
outsl
push
add
mov
sbb
shlb
mov
arpl
ja
sbb
xchg
aad
dec
and
mov
push
adc
push
das
sbb
and
gs
mov
repz
repz
insb
jo
pop
daa
dec
lcall
sub
or
jnp
mov
inc
popa
and
dec
rcrl
mov
cltd
or
frstor
lcall
push
pop
negl
or
push
cmp
dec
test
sbb
stos
jp
mov
lea
repz
enter
cld
in
ror
sub
add
or
popa
enter
jecxz
enter
lea
das
add
mov
je
xorl
std
mov
shlb
sub
adc
scas
sub
mov
icebp
and
push
lahf
in
inc
jno
sbb
movsl
inc
push
dec
inc
or
sub
jb
rolb
movsb
dec
sbb
aaa
mov
inc
mov
pop
imul
fdivl
sbb
outsl
out
adc
xor
adc
push
adc
push
xor
inc
mov
js
sub
insb
cmp
adc
push
mov
sub
popa
arpl
rorb
dec
sub
es
lea
lea
and
and
leave
pop
dec
sbb
or
imul
je
inc
outsb
pop
sbb
mov
or
and
push
inc
add
and
and
pop
mov
outsl
xchg
jbe
cmp
jno
loopne
and
jo
scas
lret
in
or
pop
jae
xor
adc
push
imul
lea
inc
sub
or
sbb
push
dec
icebp
add
sbb
sub
push
rcll
or
mov
sbb
mov
insb
and
adc
mov
xor
push
bound
movsb
in
xor
daa
daa
shlb
adc
mov
pop
and
mov
sbb
adc
andb
aam
lods
insl
add
out
and
mov
enter
sti
rclb
jne
or
sbb
roll
dec
pusha
lock
pop
test
movsl
paddw
test
outsl
add
pusha
mov
popa
rcll
pop
insl
sbb
out
enter
mov
sub
cmpsl
shrl
mov
and
cmpsl
xchg
subl
adc
mov
fdiv
stos
add
jne
and
popf
imul
std
pusha
jo
mov
data16
dec
mov
in
imul
bound
push
cmpsl
out
pop
mov
popf
inc
sbb
xor
add
inc
roll
and
test
sbb
adc
sub
pop
and
dec
imul
das
pop
pop
in
les
fstl
fs
and
and
popf
inc
sbb
jo
sbb
imul
lods
pop
and
fnstenv
mov
jb
pop
arpl
rcrl
orl
sbb
mov
sub
pop
lea
xchg
xchg
test
pop
pop
jo
in
cmp
mov
sbb
popf
add
lea
sbb
sahf
sbb
andl
pop
imul
bound
inc
je
enter
or
movsl
pusha
leave
inc
push
adc
lea
sbb
dec
pop
pop
dec
dec
pop
loopne
jnp
bound
dec
and
add
adc
in
pop
mov
or
sub
in
nop
pop
fisubrl
and
add
add
xchg
pusha
adc
aaa
mov
pop
add
inc
cltd
push
insb
fcoms
lds
xor
inc
and
sbb
xlat
movl
sub
push
mov
mov
sbb
and
sub
push
shll
pop
and
iret
sub
lds
sbbl
add
sbb
mov
sbb
nop
pusha
sbb
push
adc
mov
mov
push
dec
jmp
mov
aaa
sbb
mov
lods
sbb
add
data16
dec
inc
mov
pop
andl
push
and
push
popa
aaa
and
arpl
bound
jmp
pusha
push
fsubs
loope
add
insb
mov
push
and
pop
adcl
daa
and
inc
mov
or
cmp
adc
addb
adc
mov
push
jo
add
sbb
push
jnp
inc
mov
les
dec
test
add
ret
sarb
adc
loop
inc
add
stos
mov
int3
aad
insb
sub
mov
mov
add
adc
sbb
adc
or
add
or
fcomi
out
lahf
or
adc
cmovb
sbb
add
or
mov
fcoms
or
sub
or
or
lock
jle
incl
ja
inc
adc
inc
xor
sbb
mov
or
add
push
push
adc
jg
jg
push
or
or
or
or
or
or
adc
lcall
pop
sbb
inc
push
dec
and
lock
or
or
or
sysret
and
test
add
std
adc
inc
or
es
sub
sub
adc
push
cmp
adc
push
jns
mul
sti
sub
adc
sub
and
push
xor
adc
divl
bound
adc
shll
out
mov
sub
sbb
jmp
cmp
outsb
lock
sbb
mov
dec
add
adc
push
push
pop
adc
pop
lock
pop
adc
push
sbb
adc
testl
adc
inc
sub
and
wbinvd
sub
pop
and
or
sub
sbb
xor
sub
dec
adc
jo
sbb
cmc
add
aas
add
std
add
dec
cmpsl
or
sbb
push
sbb
std
ljmp
and
push
adc
dec
add
jp
lock
dec
add
lock
add
fisttps
iret
or
rolb
push
sbb
lock
add
or
pop
push
adc
adc
or
mov
add
orb
scas
pop
adc
pop
add
add
sbb
inc
or
adc
xor
cld
fildll
sbb
or
adc
icebp
lea
iret
adc
push
adc
orb
clc
imul
sbb
push
shll
cld
idivl
and
sbb
and
and
push
and
ret
pop
xor
aad
dec
bswap
std
adc
push
adc
adc
mov
pop
or
adc
pop
mov
adc
and
mov
leave
mov
adc
out
add
sbb
stc
sbb
and
pop
or
call
push
lock
push
outsl
adc
or
add
or
adc
inc
or
in
push
adc
or
lret
cmp
in
adc
add
int3
pop
ret
aas
loopne
lret
add
lock
or
push
call
test
mov
or
xlat
mov
add
ss
sub
outsl
dec
dec
jae
cmp
xchg
jmp
adc
inc
adc
cmp
lcall
adc
ss
adc
jae
lock
add
inc
add
aas
imul
mov
inc
push
add
incl
pop
adc
adc
sub
adc
adc
xor
decl
add
leave
and
cmp
es
adc
scas
ud0
dec
jmp
adc
lret
xor
sbb
cmp
inc
pop
std
loopne
add
mov
dec
sbb
cmp
cmp
pop
lock
loopne
sbb
adc
adc
pop
mov
adc
pop
pusha
cmpb
xor
popl
push
mov
sbb
add
or
or
jg
add
add
add
and
and
jmp
sub
push
pop
pop
push
xor
push
adc
pop
cmp
sub
and
sbb
or
adc
push
add
add
sbb
push
pop
sbb
adc
pushl
clc
jg
pop
push
pop
sbb
adc
adc
and
aad
adc
adc
lock
push
add
sub
push
cmp
mov
pop
jge
pop
mov
in
add
aas
inc
jno
and
adc
xor
ret
std
push
or
or
insl
add
jo
rclb
pop
jg
js
es
jl
ss
sbb
mov
add
push
add
pop
pop
lock
lods
xor
push
add
sbb
dec
add
pusha
add
adc
and
ds
and
cmp
sub
sub
ds
or
adc
adc
or
ss
loopne
mov
lock
push
lock
cmpsl
lock
add
je
incl
negb
sub
iret
dec
or
fwait
add
inc
cmp
sti
sbb
jno
inc
adc
mov
pusha
arpl
or
mov
mov
adc
aaa
imul
ja
sub
pop
mov
cmp
adcb
addr16
imul
jg
adc
mov
out
sub
add
and
inc
inc
sbb
pop
mov
nop
sbb
and
adc
arpl
fsubrs
mulb
pusha
dec
movsl
lock
cs
lfs
lea
jno
adc
sbb
and
add
popa
sbb
das
sbb
pusha
cmp
sbb
dec
mov
dec
sbb
xor
icebp
add
mov
add
cmp
lahf
inc
cmpsb
fcomps
sbb
pop
sbb
dec
dec
jmp
add
mov
sub
dec
jmp
pop
adc
scas
inc
nop
cmp
sub
add
bound
sti
jns
add
pop
in
insl
cmp
sbb
jg
sub
call
xchg
insl
adc
xchg
add
shlb
adc
cvtps2pi
adc
adc
push
adc
pop
adc
adc
sbb
adc
lock
add
or
or
scas
jne
dec
pop
jno
or
push
push
and
sti
std
and
sbb
or
or
mov
cwtl
add
dec
push
add
ljmp
dec
enter
inc
xchg
sbb
xor
push
push
push
pop
sahf
negb
or
cmp
sbb
in
rorb
cmp
jg
jbe
and
cmp
dec
mov
lock
xchg
incl
adc
and
or
and
pushl
pop
or
or
cmp
mov
jp
pop
cmp
unpckhps
xor
pop
inc
mov
lock
lock
push
inc
sbb
sbb
lcall
scas
fwait
pop
push
or
push
add
or
pop
shlb
rcpps
incl
sub
adc
inc
and
pop
or
or
ja
ret
cmp
movsl
mov
sbb
psubd
or
jmp
inc
orl
sub
das
cmp
jmp
xor
inc
stos
sbb
sbb
pop
aaa
outsb
or
pop
or
clc
jg
push
adc
and
push
adc
mov
or
or
sub
cmp
incl
fiadds
xor
adc
sub
or
adc
lods
fmuls
mov
add
xchg
fsub
add
pop
jle
and
es
add
push
xchg
xchg
dec
jnp
sti
stos
jmp
pop
js
xor
dec
sar
push
jne
cmp
loopne
add
ss
ss
xchg
adc
jg
push
sub
pop
xor
faddl
sub
sub
pop
inc
jb
in
adc
pop
and
lret
std
adc
sbb
sbb
inc
mov
inc
test
pop
lea
and
xor
shrl
push
xchg
dec
xor
adc
xor
xlat
add
in
pop
push
pop
push
sub
xor
sbb
pop
push
mov
adc
mov
mov
adc
add
in
in
sbb
adc
or
jp
mov
arpl
push
orb
mov
arpl
add
push
sub
mov
into
jmp
movsl
lret
fcoml
adc
adc
jno
add
jle
jecxz
push
lock
leave
sbb
lahf
adc
adc
incl
and
xor
dec
pop
and
js
push
popa
add
pop
shlb
pop
add
incl
adc
add
cmp
movhps
or
or
aas
icebp
push
add
sbb
push
and
incb
adc
pop
or
add
add
adc
and
decl
gs
adc
sbb
and
adc
jge
jno
test
dec
cmp
pop
test
scas
or
test
push
sbb
sbb
dec
xlat
mov
cs
sbb
sub
gs
inc
stos
add
dec
sbb
decl
dec
or
push
push
push
ja
xor
cmp
cmp
rorb
push
cmp
lcall
inc
sbb
imul
sub
xchg
and
jg
xor
sbb
jge
pop
push
sbb
cmp
ret
decl
sar
sub
push
pop
push
js
push
pop
xor
sbbl
lock
add
pop
sbb
sbb
incb
push
sbb
push
xlat
fnstcw
cld
push
adc
dec
cmp
incl
and
or
pusha
lea
inc
mov
mov
add
dec
int
dec
add
sbb
xor
cld
jl
adc
mov
dec
leave
push
cmp
repnz
adc
pop
dec
add
push
lock
inc
loopne
incl
pop
sub
add
add
test
xor
sub
and
aas
xor
addr16
sbb
adc
cld
pmaxub
mov
pop
mov
scas
inc
and
and
fildll
and
and
jo
leave
mov
pop
orl
cs
sub
dec
incl
push
adc
push
adc
or
jmp
mull
adc
aas
add
cmp
xor
std
clc
pop
push
sbb
dec
or
dec
adc
push
add
mov
aad
in
or
sub
push
fildl
jne
pop
ret
sbb
lock
push
incl
bound
mov
pop
adc
or
cmp
or
push
adc
popl
sbb
sbb
cmp
rcr
add
adc
mov
lahf
and
jle
and
sub
sbb
aaa
cmp
add
sbb
testl
xchg
sub
repnz
mov
mov
add
xchg
sbb
sbb
aam
inc
mov
imul
or
sbb
dec
push
mov
inc
push
popf
or
push
dec
popa
cmp
push
daa
cmp
out
cmp
fadd
pop
adc
xor
addr16
pop
adc
lcall
jo
stc
pop
push
imul
aas
ss
aad
adc
fwait
and
insb
lock
push
sbb
cmc
add
mov
sbb
call
add
pop
cltd
ss
mov
sti
mov
and
je
xchg
add
adc
cmp
pop
ljmp
nop
mov
sub
xor
sub
aas
and
pop
out
lahf
jle
movd
lcall
fbld
xor
xor
push
icebp
jns
mov
jns
int
add
xchg
and
mov
push
xlat
ja
shll
fwait
inc
cwtl
inc
xchg
xchg
adc
les
xor
pop
add
aas
add
cmc
aaa
push
or
add
loopne
cmp
push
dec
xchg
clc
and
jp
clc
push
add
sbb
jg
cltd
sbb
push
xchg
jae
push
mov
data16
cmc
paddw
push
dec
outsl
xor
cmp
idivl
insl
jge
add
cmp
and
adc
incl
mull
lods
das
push
and
mov
push
adc
sbb
add
lahf
push
adc
sahf
adc
filds
popf
xor
adcb
add
enter
in
xchg
int
pop
pop
jl
or
cld
pushl
mov
outsb
jne
pop
lock
add
das
lock
jg
movsb
adc
or
lock
sbb
push
jg
cmp
pop
mov
lock
pop
pop
dec
cmp
rcrl
call
pop
adc
jnp
incl
call
test
jp
ss
sub
xor
or
push
sbb
jmp
stc
lods
js
adc
push
inc
sbb
and
xchg
add
sti
adc
adc
sub
mov
sbb
les
test
mov
and
popf
pop
and
stc
scas
mov
sbb
or
aas
adc
insb
or
sub
inc
or
or
jge
pop
in
pop
pusha
movups
add
sbb
std
jmp
and
sbb
sbb
cmpsb
add
sbb
or
sub
inc
pusha
shrl
cli
pop
sub
add
decl
xor
out
lods
inc
pop
pop
pop
pushl
aas
and
push
jnp
push
sbb
inc
es
cmp
sub
pop
and
pop
and
pusha
mov
aaa
imul
or
sbb
adc
jecxz
pop
or
mov
lock
push
jne
pop
push
mov
out
sti
inc
in
movsl
pop
add
push
adc
lds
dec
mov
adc
jl
repz
adc
inc
add
sbb
iret
pop
sub
mov
call
and
out
inc
push
mov
and
or
or
or
pop
sub
dec
imul
cmp
sub
es
sub
and
push
jmp
in
mov
and
pop
or
adc
pop
negb
pop
movsl
inc
mov
rorb
inc
jno
adcl
jo
push
sbb
push
xor
loopne
push
test
sbb
fwait
test
sbb
and
add
inc
push
and
daa
xor
movsb
pop
es
cs
add
sbb
and
sub
add
pop
les
ljmp
add
dec
or
pop
or
jp
inc
aas
movhps
push
dec
int
shrb
incb
jmp
add
sti
jno
movsl
rcl
or
pop
mov
cltd
or
pop
jmp
add
jge
scas
imul
push
pop
sbb
incl
pop
lock
add
dec
insb
or
xchg
add
pop
pop
aas
fs
in
popf
and
adc
or
or
adc
inc
adc
dec
arpl
xchg
pusha
dec
pop
xchg
aas
pushf
fadds
or
inc
inc
and
adc
add
pop
insl
aas
lock
add
dec
rclb
fisttpll
and
xor
and
xorb
pop
adc
or
sub
cmp
cmpsb
push
dec
mov
ffree
or
push
mov
pop
adc
adc
imul
das
shll
sbb
test
push
pop
filds
sbb
dec
test
shlb
dec
lock
sub
jp
push
out
mov
gs
mov
imul
faddl
push
pop
sbb
loopne
sub
inc
mov
pop
and
and
and
aad
add
inc
push
xor
adc
push
push
movsb
cmp
or
loopne
xor
sbb
mov
clc
fstpt
inc
pop
addr16
jg
adc
jmp
adc
lock
jo
or
lock
add
add
push
str
inc
or
cmpsb
adc
xchg
xor
and
inc
sbb
lock
add
sbb
push
vmulsd
lds
adc
mov
pop
dec
out
testl
add
xor
adc
and
lcall
sysret
cmp
sub
cmp
lahf
dec
push
sbb
popa
cmp
dec
pop
inc
mov
dec
pop
dec
arpl
cmp
add
cmp
adc
sbb
adc
les
push
push
lods
xor
sbb
push
andl
and
mov
cltd
jecxz
add
std
jnp
push
aas
sbb
sbb
sbb
syscall
and
jmp
adc
push
push
bound
mov
and
push
or
aas
add
add
jns
inc
dec
sbb
ja
pop
cwtl
mov
jbe
pop
jp,pn
jb
incl
testl
jo
mov
mov
or
fwait
sahf
add
push
sbb
aas
loope
xor
sub
adc
xor
sub
pop
sbb
and
mov
aaa
or
mov
pop
mov
push
xchg
xor
cmpb
adc
sub
pop
sub
inc
or
mov
mov
aaa
adc
and
lock
adc
inc
dec
or
or
jg
cltd
lock
push
sub
and
aas
lock
test
loope
cmp
add
adc
sbb
or
movsl
adc
aas
jecxz
adc
dec
xchg
insl
cmp
or
cmp
inc
pushf
ljmp
femms
add
inc
ljmp
popa
or
sarb
icebp
or
daa
adc
pop
and
fmull
or
addl
leave
incb
jl
adc
and
push
cmpsl
sbb
or
or
test
add
sbb
femms
adc
or
or
sbb
adc
pop
and
ljmp
mov
jno
ds
rcrl
add
lahf
mov
jns
and
add
or
sar
adc
adc
dec
lret
lock
add
push
in
inc
add
add
lock
sar
decb
sub
or
jae
push
and
dec
push
cmp
je
jmp
mov
add
dec
aas
sbb
pop
inc
lcall
popl
and
mov
xlat
mov
lock
add
or
mov
enter
lret
mov
and
jle
daa
push
mov
or
jo
inc
adc
xor
daa
outsl
xchg
mov
pusha
or
sub
sbb
mov
adc
lock
add
popa
adc
jo
idiv
jg
mov
mov
sbb
xor
cmp
and
sahf
lock
inc
cmp
xor
cmp
sub
imul
lcall
jecxz
cltd
or
iret
mov
xchg
lock
or
jl
movsl
jmp
or
push
cmp
pop
and
stos
or
jg
push
push
xor
addr16
daa
lock
in
sub
pop
insl
int3
lock
push
js
cmp
call
mov
sbb
cli
incl
test
stos
add
shll
std
jmp
outsl
lock
or
and
and
sbb
adc
cld
js
aas
push
pop
add
bndldx
inc
add
mov
lock
add
pop
adc
dec
inc
lock
pop
out
incl
xor
sub
lret
mov
int3
fucomip
outsl
jno
in
and
mov
adc
sub
add
ljmp
dec
xor
sbb
xor
shlb
push
jl
pop
xchg
inc
add
xchg
add
cli
adc
test
push
push
push
lods
ret
fsubl
pop
decl
adc
push
pop
adc
bswap
div
mov
add
and
or
add
cld
cmpb
sub
add
movntq
out
dec
and
sbb
dec
adc
test
mov
inc
addb
sbb
loop
cmp
and
arpl
adc
add
ret
ret
push
das
pushl
cmp
unpcklps
sahf
cwtl
outsb
lea
jmp
push
xor
cmp
lcall
pop
pop
pop
lock
pushf
jnp
push
or
pusha
inc
lock
lret
ljmp
and
mov
pop
sub
sub
inc
shrb
mov
lock
add
or
pop
sub
lds
iret
ret
mov
sub
mov
jne,pt
adc
adc
pop
lock
sub
fbld
scas
or
or
add
call
jae
jg
sbb
dec
jle
loopne
clc
pop
add
sub
push
jno
adc
pop
or
pusha
stos
lea
xchg
sbb
pop
fnstenv
pop
and
lcall
hlt
imul
fimull
sbb
jo
sub
push
sbb
push
mov
or
mov
gs
and
mov
sbb
call
adc
and
ret
outsl
sbb
sub
and
idivl
lods
inc
mov
sbb
or
jg
jmp
sbb
adc
jg
sbb
cmp
add
fadds
adc
jbe
dec
jle
dec
cld
adc
or
push
push
adc
jb
and
jg
shll
sub
inc
jo
arpl
test
adc
lock
add
cmp
mov
dec
pop
add
adc
lock
push
xor
dec
fiaddl
jge
in
xchg
adc
add
aaa
sbbl
add
in
mov
push
adc
aad
clc
mov
add
in
pop
mov
lock
outsl
dec
or
or
sarl
cmovnp
lcall
orb
add
and
mov
push
decl
sub
pop
sub
add
incb
cmpsl
pop
adc
adc
push
xor
je
mov
dec
sub
adc
inc
sbb
ss
push
dec
movsb
add
adc
mov
cmc
mov
push
es
sbb
push
mov
pop
pop
jg
xlat
jae
sbb
sbb
push
adc
sbb
and
pop
dec
loope
lcall
or
sbb
sbb
adc
sbb
leave
cmp
cmp
inc
mov
aaa
add
add
inc
pushf
dec
or
shrd
es
cmpsb
push
icebp
sbb
and
lea
push
sbb
fdivr
sub
out
mov
rorb
add
shlb
and
push
call
xor
and
adcb
mov
jmp
sub
add
cs
sbb
adc
xchg
lea
and
cmp
test
into
fiadds
sbb
sub
adc
sub
pop
sub
dec
sbb
or
mov
adc
sar
std
push
pushf
push
adc
push
push
out
sar
or
or
pop
or
jne
sbb
push
pop
sub
add
dec
adc
jg
adc
pop
push
and
das
push
cmp
cmp
sub
test
or
mov
xor
mull
xor
loop
lock
cmpsl
sti
rcl
push
inc
add
mov
fnsave
mov
jae
imul
and
cmpsl
incl
or
jo
adc
ss
pop
cmc
pop
incl
sbb
push
inc
adc
dec
add
sbb
subl
std
jg
movsb
dec
xor
or
mov
xor
repz
pop
test
les
das
bound
lock
add
or
daa
rcr
sbb
ss
cs
or
and
lock
subl
and
sbb
adc
scas
daa
and
adc
adc
push
and
adc
sub
js
push
sbb
call
sub
andb
adc
aaa
pop
cmp
or
pop
pop
jle
call
and
or
and
pop
or
rcll
adc
add
sub
cmp
add
pusha
fcomi
adc
or
loopne
xchg
pop
push
dec
loopne
adc
and
or
inc
sbb
sbb
inc
sbb
jbe
xor
lcall
psrld
push
or
inc
adc
test
lods
jo
sub
push
dec
inc
ucomiss
push
lds
or
push
sub
adc
icebp
and
pop
in
sbb
mov
lcall
incb
scas
sbb
movsl
cltd
flds
stos
in
xor
add
mov
and
call
divl
sub
adc
jbe
and
mov
ret
js
out
dec
adc
adc
sbb
mov
lahf
inc
ret
lock
add
inc
dec
das
xchg
or
add
or
xchg
or
mov
stc
ret
or
add
and
jbe
xchg
lock
jne
out
or
or
loop
add
or
jae
and
sub
imul
pop
inc
mov
movsl
dec
mov
and
cmp
and
pop
std
ljmp
pop
or
lock
adc
sub
aaa
dec
lock
add
jmp
inc
aaa
push
fimull
pusha
sub
sbb
lahf
sbb
cmp
lock
es
insl
ljmp
jl
adc
lahf
or
sbb
adc
inc
adc
les
add
inc
and
cld
imul
and
push
pop
and
sbb
and
add
or
and
and
pop
inc
and
call
or
pusha
xchg
sbb
or
pop
sbb
movsb
and
pop
and
or
adc
sbb
xchg
push
lds
pop
sbb
mov
push
add
popa
pop
adc
sbb
pop
int3
push
xchg
lods
and
add
mov
jp
mov
dec
js
lea
repz
xchg
jo
adc
roll
pushl
adc
xor
xor
ljmp
daa
aaa
sub
daa
cmp
pushf
and
pop
xor
and
das
adc
scas
sbb
dec
jp
adc
pop
loopne
and
and
adc
pop
adc
sti
jecxz
cmp
sub
sub
lret
lock
push
sbb
and
adc
fdivr
sysenter
adc
pop
aaa
loope
or
sub
push
and
jmp
aaa
or
pop
addr16
mov
subb
dec
add
push
loopne,pt
pop
and
fbstp
xor
lock
incl
add
push
into
es
mov
pop
sbb
xor
pop
pop
call
sti
mov
sbb
adc
popa
pop
xorps
xor
fs
lcall
es
mov
outsb
inc
and
sbb
sub
das
or
adc
xchg
das
sbb
and
jmp
add
sub
rorb
push
gs
cmp
movsb
lds
add
lock
outsl
out
or
dec
sub
xor
xor
pop
fcomp
clc
das
add
adc
adc
adc
inc
fistpl
push
jecxz
cmp
sbb
pop
and
mov
shrl
sbb
add
cmpsl
inc
add
add
pop
jmp
inc
aas
sub
mov
or
daa
or
test
lock
js
push
sbb
push
adc
insb
and
lds
rorl
or
jp
movhps
pop
pop
ds
je
push
mov
sub
add
adc
adc
and
jmp
adc
and
sbb
outsl
cmc
fisttps
push
cmp
add
incl
sbb
adc
dec
xchg
and
sbb
lcall
cmovp
sbb
adc
xchg
daa
sti
lcall
sarl
adc
push
pop
or
es
push
sbb
push
ds
mov
decb
sbb
pop
adc
and
movsl
push
and
sub
jmp
incl
add
pop
add
ja
daa
loop
and
or
xor
or
xor
push
adc
outsl
sbb
nop
sbb
cmp
movlps
sbb
movaps
pop
aaa
rorb
ljmp
outsl
call
sbb
pop
cmp
daa
leave
or
outsb
incl
sbb
xor
inc
add
jnp
sub
adc
or
movsl
pop
fmuls
fimuls
and
mov
pop
mov
ss
cmp
push
ss
dec
adc
dec
adc
outsl
in
or
sar
or
fcoml
lea
or
insb
push
adc
orl
pop
inc
incl
sbb
xor
inc
sbb
mov
sbb
pop
sbb
xchg
push
dec
movb
adc
or
lock
push
push
adc
ret
cmp
push
lea
test
aas
push
or
add
sub
sbb
add
push
clc
call
data16
adc
xor
cmp
pop
xor
clc
jnp
adc
sbb
sbb
adc
pop
stos
inc
add
add
shlb
lock
add
xorb
and
aam
rolb
push
and
jnp
shll
das
push
add
and
mov
ret
mov
mov
lret
sbb
pop
sbb
in
add
adc
testl
adc
adc
xchg
rorb
sbb
pop
inc
sti
sbb
inc
or
out
in
push
mov
jge
push
es
hlt
jmp
scas
push
and
cmp
das
mov
sub
xor
push
cmpsl
das
push
cltd
nop
xor
add
popa
xor
xor
mov
mov
sbb
sub
and
and
sbb
cwtl
mov
dec
sub
cmp
adc
stos
mov
add
movsb
rdmsr
xor
rorb
ss
lahf
std
decl
mov
daa
adc
push
sub
inc
dec
sbb
lret
adc
sbb
cs
inc
mov
push
and
xor
push
push
inc
fs
jne
sti
mov
and
sub
sub
pop
jge
sub
sbb
pop
inc
pop
xlat
pop
mov
jge
pushl
and
es
push
mov
insl
pop
cmp
decl
push
lock
add
pop
push
arpl
pop
sbb
aas
cmp
int
and
dec
xor
sbb
aaa
mov
cmp
js
lahf
xchg
es
inc
es
std
add
lock
add
das
cmpb
jp
xor
sbb
add
loopne
xor
pushl
lahf
adc
sbb
or
cmp
xor
and
sbb
rcrb
adc
mov
sbb
xchg
aas
mov
fstps
lds
jle
call
sub
or
sub
add
rcrb
adc
add
sub
cmc
jmp
pop
cmp
and
pop
push
aam
push
sbb
out
and
inc
sbb
mov
add
out
push
sbb
xor
sbb
and
jg
and
adc
add
jge
ret
adc
adc
std
inc
mov
adc
mov
cli
jecxz
add
daa
test
adc
lahf
std
fs
setae
push
and
pop
sbb
cmp
add
outsl
data16
adc
sub
push
add
mov
pop
cmp
push
or
sub
pusha
rclb
add
prefetchw
or
fisttps
sub
hlt
incl
pop
inc
sbb
and
xchg
jmp
mov
xchg
adc
and
je
sbb
xchg
es
leave
stc
sbb
arpl
lds
pop
lods
sbb
sbb
and
mov
daa
or
inc
sbb
loop
sbb
and
cmp
push
popf
xor
inc
or
jns
insl
add
cmp
and
sbb
insb
gs
sbb
std
idiv
insl
daa
xor
wbinvd
adc
push
mov
adc
adc
sbb
jecxz
add
sbb
pop
or
mov
cmp
sbb
xor
pop
adc
jge
lods
adc
mov
mov
adc
lock
sub
and
and
sbb
jnp
dec
xor
xor
sbb
inc
inc
in
adc
adc
inc
decl
and
pop
adc
adc
pop
sbb
mov
sbb
aas
adc
aaa
xchg
ss
ss
sbb
push
sbb
das
adc
jmp
xor
sbb
push
cmp
sbb
and
push
ss
push
aam
jns
adc
popa
test
sbb
or
ja
push
push
lds
add
inc
pop
and
nop
cs
cmp
sbb
sub
sbbl
jbe
and
repnz
dec
sbb
adc
call
jne
pop
mov
xor
xchg
leave
gs
lds
adc
lods
mov
loopne
push
and
sub
es
inc
xor
or
test
rcrl
pop
mov
and
jo
sub
ds
std
ret
mov
notl
es
pop
adc
inc
sbb
cs
lcall
or
ja
pop
test
xor
pop
gs
xor
jle
pop
dec
push
xor
aas
sti
decl
push
sub
adc
ja
ja
outsb
lods
test
sbb
imul
sub
adc
xchg
and
out
push
scas
shlb
push
lock
add
aaa
jp
jne
sub
loop
and
and
adc
adc
jg
or
mov
sub
sub
icebp
pop
addb
es
pop
lock
add
mov
mov
fistpll
push
jg
cmp
lahf
pop
cmp
sarb
hlt
in
push
jns
or
mov
sub
xchg
inc
jg
push
cmp
or
xor
mov
sub
push
and
mov
iret
fstpl
js
movsb
push
and
add
std
pop
pop
insl
je
imul
lock
add
or
aam
mov
pop
or
inc
push
scas
mov
aas
or
dec
add
dec
add
add
jmp
movsb
inc
adc
mov
pusha
pop
repz
add
adc
add
or
test
adc
lds
push
or
leave
sbb
or
mov
adc
mov
xor
jp
push
notl
xchg
cmp
push
pusha
jg
adc
or
xchg
add
pop
add
jno
add
andl
sub
mov
pop
shlb
add
addb
add
xor
xor
jecxz
mov
arpl
in
pop
cmp
adc
sbb
adc
inc
shlb
arpl
shlb
and
test
in
inc
cmp
dec
dec
mov
bound
push
adc
inc
imul
push
sbb
and
pop
lret
in
cmp
cmp
add
xchg
lret
cmp
addr16
push
inc
data16
pop
addl
adc
mov
aas
add
subb
adc
adc
lret
push
pop
std
jmp
add
dec
lock
cs
jnp
ja
jge
icebp
jo
and
ss
push
sbb
lock
les
or
add
out
sub
lock
mov
ret
inc
push
add
sbb
add
pcmpgtw
add
mov
sbb
cmpsl
add
cmp
add
fimuls
xchg
aaa
or
xlat
add
add
push
sbb
daa
push
sub
pop
xchg
push
or
or
orl
pop
ljmp
idivl
adc
cmp
xor
push
ffree
jg
incl
adc
push
adc
dec
push
sahf
lock
adc
mov
jle
xchg
cmc
shufps
sub
lock
or
mov
flds
or
lea
sub
adc
adc
lsl
push
mov
into
out
push
cmpsl
hlt
ss
cltd
outsb
rcl
sub
fcompl
shld
lock
add
and
lds
ss
cmp
fstl
adc
fwait
adc
push
sub
add
mov
mov
shrl
jl
imul
or
dec
or
inc
jmp
jg
shll
add
or
or
adc
adc
xlat
push
adc
cmpsb
inc
adc
sbb
push
lock
add
sub
sbb
adc
add
lahf
std
push
or
push
mov
mov
adc
sbb
inc
push
sbb
or
mov
push
adc
add
push
sub
adc
jnp
rorb
sbb
inc
cld
add
in
adc
sbb
aam
pop
pop
sbb
xor
sbb
push
pop
das
pop
icebp
inc
cmc
test
decl
orb
repz
das
adc
xor
mov
cmp
inc
es
dec
dec
xor
outsb
aaa
jmp
push
aas
sbb
inc
adc
xor
pop
adc
ds
arpl
pop
jmp
test
adc
test
or
adc
sbb
insl
adc
and
pop
mov
push
add
sbb
sbb
fcomip
dec
xor
lock
and
scas
test
pop
sarl
sbb
imul
addl
stc
fsubs
dec
shl
xor
sbb
mov
das
pop
hlt
jg
sbb
gs
adc
dec
jo
imul
incl
xor
sub
adc
sbb
sub
cmp
call
or
lea
push
das
adc
hlt
pop
sbb
leave
es
std
repnz
sbb
out
jns
and
and
lock
mov
sub
push
mov
sahf
movsb
ds
rcll
add
pop
std
jg
push
xor
adc
pop
and
inc
xor
and
mov
jb
sbb
adc
jbe
outsb
loope
test
or
popa
or
mov
mov
or
imul
dec
hlt
call
comiss
xor
ljmp
fstps
add
jecxz
jecxz
lahf
sbb
mov
lahf
and
sbb
xor
cmp
lock
xchg
or
lcall
cmp
and
sub
sub
sbb
bound
cmp
mov
repz
movsb
mov
ret
addr16
scas
adc
daa
pop
and
js
decl
arpl
es
mov
sub
sub
xor
stos
inc
inc
orb
dec
and
mov
nopl
int
or
pop
aad
mov
or
adc
cmp
jb
or
daa
ss
xor
out
aas
daa
push
movhps
adc
fcos
call
or
jbe
call
xor
roll
adc
or
jg
lcall
adcb
movlps
sub
repz
add
or
sub
in
clc
dec
push
or
add
jo
push
test
push
cmpsl
lock
mov
adc
cmp
add
shlb
jbe
or
or
jle
adc
sbbl
push
loope
sub
push
es
jmp
and
pop
or
push
ret
sub
sbb
or
out
ret
xor
insb
pop
xor
lock
incb
dec
and
sbb
add
pop
test
dec
xchg
add
test
and
mov
jnp
add
mov
adc
sub
fwait
rorl
dec
adc
adc
lods
and
inc
sbb
mov
test
lock
imul
and
adc
push
sbb
mov
push
sub
ss
clc
inc
std
call
add
and
push
and
push
testl
pop
and
lcall
xor
nopl
in
pop
sub
adc
adc
adc
sbb
movsb
push
xor
pop
stos
or
sub
adc
xchg
xchg
or
sbb
pop
loop
xchg
sub
or
js
test
xor
xchg
push
xor
sub
xorb
pop
inc
mov
add
mov
dec
xor
pushf
in
movsb
and
orb
sbb
leave
push
sub
stc
xchg
pop
or
lock
add
or
outsb
xchg
or
lock
push
fldt
rcrb
cmp
sbb
mov
or
mov
in
sub
adc
sub
add
or
mov
pop
inc
outsl
loopne
mov
or
add
add
daa
push
movsb
push
insl
fildl
and
push
add
xor
and
movsl
insl
gs
or
sub
add
adc
lret
outsb
test
add
lds
pop
add
adc
orl
gs
dec
inc
inc
scas
pop
in
and
insb
xchg
add
and
adc
pusha
inc
inc
push
inc
push
lcall
inc
pop
rolb
dec
sbb
jo
insb
nop
lock
dec
add
imul
sub
sub
stos
pop
insl
or
and
or
jb,pn
xchg
test
inc
push
dec
ret
xorb
jb
mov
jbe
xlat
les
jg
loope
out
mov
das
jno
or
inc
and
add
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
